fsts
inc
add
and
mov
push
call
int3
or
enter
shl
and
nop
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
cld
xorb
and
clc
hlt
lock
in
call
xor
push
cmp
enter
cmpb
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
call
in
add
mov
mov
push
fldt
fcmovnb
push
mov
pop
pop
ret
pop
mov
ja
sti
cli
mov
mov
repnz
mov
mov
ret
nop
aaa
lret
into
lock
mov
mov
mov
pushl
incb
test
add
test
test
jb
adcl
inc
lock
add
rorb
jns
jle
add
je
repnz
clc
mov
and
xor
mov
dec
cld
mov
and
xor
aas
icebp
pusha
das
jg
sub
icebp
add
jmp
std
hlt
mov
cmp
jbe
repnz
jae
mov
mov
decb
jne
fcomi
mov
jbe
subl
add
pop
out
or
inc
or
or
jl
daa
in
mov
sub
fcmovu
outsb
out
add
or
addl
push
lea
lea
insb
jg
out
jp
mov
cmpb
jne
push
lock
fsubrl
pop
mov
nop
add
sub
cmp
loop
clc
imull
imul
push
in
push
or
cmc
sub
pop
sub
pop
sub
jmp
mull
sbb
mov
push
aad
xchg
bound
adc
sub
pop
sub
stc
stc
std
xor
in
push
sub
cmp
jle
push
sub
push
mov
xchg
adc
fisttpll
scas
es
cmp
in
dec
dec
rcll
and
stos
or
sub
cmpsb
and
jno
and
jle
jnp
jg
in
mov
mov
enter
aad
sub
out
ficompl
mov
and
scas
pop
je
cmovle
fildll
movsb
pop
aaa
pop
in
jle
cmp
outsl
fucomp
pop
sbb
in
push
aad
lcall
mov
mov
jmp
add
pop
in
cmpsb
cmpsl
and
pop
out
out
out
fisubl
lea
and
test
jne
ja
loop
jecxz
orb
test
mov
adc
dec
mov
dec
mov
movsb
dec
mov
stos
dec
cmpsb
mov
insb
xchg
add
sbb
repnz
mov
sbb
in
mov
xchg
push
push
cmpb
adc
mov
std
or
sub
imul
bound
sub
fldcw
and
jbe
out
es
addb
daa
mov
orb
push
jnp
pop
xor
pop
mov
fstl
sbb
aad
sub
pop
pop
pop
es
lcall
sub
mov
insb
lret
jle
repnz
mov
movsb
stc
xchg
cmp
orb
aaa
fimuls
adc
sub
ljmp
mov
sbb
cmp
icebp
push
and
dec
push
movsl
fwait
or
pop
mull
outsb
and
cmpsb
pusha
outsl
cmp
mov
push
push
adc
push
scas
mov
mov
inc
pop
xor
lea
das
mov
jp
lret
mov
or
loop
scas
mov
sub
test
dec
popa
jnp
mov
inc
gs
test
sub
sbbl
cmp
data16
and
fdivrl
and
sub
pop
ss
addr16
scas
and
ss
pop
js
loop
ljmp
fnsave
outsl
sbb
cli
jb
into
sub
sub
fs
data16
out
xchg
insb
adc
shufps
add
pusha
push
pusha
in
pop
aad
add
cmpsb
xor
mov
fildl
repnz
or
inc
or
pop
mov
mov
mov
bound
and
xchg
int3
jo
dec
shll
out
stos
adc
sub
dec
std
pop
inc
movsb
cmpsb
and
and
ds
roll
jge
jg
jl
jne
test
jne
or
invd
sub
xchg
inc
imull
std
push
pop
call
dec
subb
jbe
cmp
fadds
jle
inc
push
cmp
movzwl
dec
test
or
adc
movl
add
add
cmpsb
data16
or
adc
or
xchg
pop
or
inc
rcll
cmp
mov
jmp
in
push
clc
cmpl
fs
insl
add
mov
dec
or
push
dec
popa
ud1
sub
xchg
sbb
nop
push
or
ss
ss
out
dec
rcll
sub
cmp
sbb
adc
call
dec
in
jne
js
ret
jnp
push
dec
sahf
cmp
lret
outsl
sub
je
jb
arpl
fs
jae
cmovl
fs
imul
loope
jns
dec
dec
jo
outsb
push
push
outsb
insl
popa
mov
idiv
jo
imul
insb
add
jb
jne
insb
inc
insb
insb
inc
insl
scas
std
ljmp
push
je
dec
outsl
jbe
dec
gs
outsl
cmp
inc
xchg
mov
or
fwait
dec
dec
mov
ljmp
cmp
jno
xchg
mov
dec
dec
mov
lea
fucomp
outsl
fisttpl
in
mov
inc
add
adc
idiv
mov
cmp
js
lea
dec
mov
mov
cmp
push
add
sub
ja
xchg
dec
and
lea
or
fucomi
cld
mov
mov
dec
in
outsb
sbb
inc
lea
idivl
lea
dec
mov
in
cwtl
movsb
or
dec
inc
inc
jbe
sti
mov
mov
pop
mov
xor
inc
mov
or
gs
sbb
adc
and
ds
sbb
cmc
div
push
pop
push
mov
add
js
inc
cmp
sub
fstp
jle
sbb
flds
hlt
mov
inc
dec
mov
cmp
mov
and
dec
dec
inc
jge
mov
cld
je
lea
inc
xor
jne
xor
pop
fdivs
mov
mov
mov
sti
xor
cmp
jge
jge
lea
dec
dec
mov
leave
lea
mov
lea
sbb
add
jmp
mov
inc
test
mov
push
xchg
add
inc
dec
dec
inc
mov
dec
mov
cmp
insb
mov
test
xchg
movsb
xlat
cmpb
loope
pop
jl
xchg
mov
dec
ret
xor
jle
lea
mov
cmp
fcom
jge
lea
dec
cltd
xor
outsl
mov
in
ret
lea
dec
movsb
cmpsb
sbb
test
xchg
dec
cmp
in
or
push
ja
push
mov
nop
sbb
nop
xchg
mov
xor
dec
inc
inc
cmp
mov
jo
inc
fidivrl
xor
fwait
mov
in
or
je
subl
js
push
cld
mov
ret
cmp
dec
dec
dec
adcl
mov
std
ja
mov
sti
addl
pop
mov
push
add
mov
fstpt
lea
cmp
xchg
inc
or
inc
sub
testl
inc
dec
mov
cmp
jle
in
bound
sbb
or
jecxz
mov
add
cld
and
dec
inc
cmp
adc
pop
pop
loopne
push
adcb
test
stc
test
insl
hlt
mov
repz
jns
mov
inc
dec
mov
pop
inc
outsb
sar
fistps
or
lea
lea
in
in
jg
push
mov
mov
lea
mov
mov
cmpsl
in
jecxz
in
dec
mov
mov
fadd
inc
fdivrp
sub
aam
or
shrb
lcall
fcomp
sub
adc
loopne
inc
jne
jp
mov
ja
adc
adc
je
cmp
jmp
pop
rcrb
cmp
add
es
aad
jecxz
lock
mov
inc
mov
or
lea
mov
out
jecxz
psllw
xor
inc
cmp
jl
outsl
mov
scas
xorl
clc
cli
xchg
xchg
loopne
decl
pop
mov
or
inc
xchg
ljmp
je
hlt
out
cmp
jne
inc
mov
push
push
test
aaa
mov
cmp
sub
dec
aas
insb
xor
sbb
xlat
jo
xor
scas
inc
inc
xor
outsl
mov
mov
pusha
cmp
xchg
push
inc
ljmp
lcall
xor
mov
mov
test
mov
jb
xchg
cmp
pop
pop
mov
mov
stc
hlt
inc
dec
inc
cmp
jp
mov
mov
mov
orb
mov
mov
inc
inc
std
xchg
dec
fsubr
js
rclb
fistpl
jp
mov
fwait
add
sub
pop
testl
fsubrs
sbb
adc
imul
aaa
imull
add
push
dec
xor
lret
dec
hlt
dec
lea
jmp
adc
jo
imul
cmp
mov
cmp
inc
dec
mov
xor
mov
push
bound
dec
inc
or
cltd
popa
sbb
addr16
xor
sbb
in
mov
add
dec
outsb
mov
lods
imul
cmp
pop
das
iret
cmp
jno
xchg
fdivrs
insb
clc
pushf
dec
fnstcw
cmp
arpl
add
dec
hlt
jg
xor
jmp
pop
popf
inc
mov
fiadds
or
movsl
aad
std
fcomip
popf
dec
in
mov
mov
or
hlt
aad
pushf
mov
xchg
add
sbb
sbb
pop
rorl
dec
cmp
fistpll
push
inc
push
outsl
lock
mov
lock
jns
mov
cltd
lods
adc
incl
in
movsb
cs
test
jg
jge
imull
cmp
cs
jmp
fimuls
add
push
mov
lock
mov
inc
dec
in
mov
push
inc
jo
mov
mov
mov
lea
xchg
clc
lock
xchg
outsb
or
xchg
lods
in
hlt
or
mov
in
lods
jmp
push
sbb
cltd
mov
sub
xor
cld
ret
shrb
dec
inc
jbe
inc
rep
dec
mov
add
add
add
add
xor
and
fildll
xor
xor
xor
or
pushf
and
xor
fld
dec
mov
push
aaa
enter
jg
sub
push
push
sbb
clc
fcoms
addb
mov
fsubrs
mov
les
lcall
dec
cmp
push
mov
pop
mov
and
in
xchg
adc
mov
cmp
imulb
add
out
xor
add
nop
pop
push
push
incb
enter
xchg
jle
or
rol
les
lea
adc
xchg
sub
sahf
out
inc
lahf
lods
mov
or
nop
add
cmpsb
orb
add
xor
mov
cmp
xchg
xchg
dec
into
adc
loope
shll
push
inc
js
push
mov
fldcw
nop
adc
mov
adc
pushf
sbb
pop
cmp
mov
jl
push
sbb
mov
add
cmp
mov
push
adc
loop
add
mov
or
add
pop
hlt
loop
adc
pop
inc
adc
sub
mov
sbb
ret
cmp
pop
cltd
dec
lock
xor
lock
or
and
js
pushf
lock
inc
or
xchg
push
push
and
rcr
inc
sub
lcall
cld
add
dec
mov
loopne
lds
pop
jl
jns
xchg
outsl
adc
in
lods
sub
and
and
ss
lods
dec
fdivs
adc
ud0
jne
ret
pop
add
pop
and
or
jae
shlb
push
mov
xorl
bound
jnp
mov
add
cs
cmpl
adc
pushf
add
lds
and
mov
xchg
mov
insl
mov
shr
cmp
jl
and
push
push
jne
push
jae
enter
push
test
push
bound
push
mov
add
mov
add
loope
mov
int3
pop
sub
aam
push
or
mov
shlb
mov
or
lock
add
outsl
cmpsb
js
add
xchg
popa
test
mov
jle
add
insb
xor
cs
insb
adc
out
ja
imul
add
je
fs
mov
fldl
insb
add
pop
add
push
imul
idiv
je
arpl
jo
jbe
popa
jbe
cmovbe
add
jo
imul
jmp
insb
jbe
jns
insl
jo
data16
fwait
arpl
std
mov
jns
dec
pusha
push
cmp
insl
jae
les
xchg
dec
data16
aaa
ja
outsb
add
xchg
inc
inc
pop
mov
mov
dec
cmp
movl
les
sbb
out
lock
in
dec
call
in
sbb
mov
push
push
sub
and
mov
incb
in
in
xchg
aam
shl
inc
imull
subl
cmc
pop
out
add
adc
int3
fisubrs
push
mov
sbb
mov
repz
pop
mov
jo
inc
mov
mov
rorl
sbb
add
ds
dec
inc
mov
pusha
adc
subb
lods
add
movsb
mov
mov
mov
movsb
test
pop
add
inc
xor
pushf
cli
xor
insb
and
cwtl
pushf
inc
inc
add
out
sbb
add
add
aaa
gs
xor
or
add
sbb
adc
cmp
add
xor
push
xorl
xor
cmp
or
xor
xor
xor
int3
mov
adc
aas
shll
mov
rorl
jge
pushf
and
sahf
cmpl
xor
pop
push
mov
push
fcmovu
mov
sub
jmp
ljmp
jge
ret
into
mov
gs
les
push
pop
add
cld
mov
shrb
fistpl
xchg
cmpsl
push
push
js
dec
test
fldenv
cmpsl
add
scas
adc
adc
xchg
fwait
loope
js
movb
lock
lods
and
cmovg
or
outsb
mov
in
adc
in
out
inc
in
loopne
or
xor
add
lea
add
lea
add
fildl
cld
inc
enter
imul
rolb
cmpsb
jmp
mov
pop
xor
xor
cmp
xor
rorb
jle
fisttpl
clc
incl
mov
jecxz
clc
cmpb
jne
pop
add
aad
sub
add
lcall
adc
or
nop
movsb
shld
daa
jne
dec
cmp
mov
or
sbb
sbb
adc
or
clc
sub
add
push
cld
dec
out
hlt
xor
adc
lret
addr16
mov
sub
movb
add
movb
ljmp
mov
and
push
and
mov
inc
add
lahf
cmp
or
adc
out
sbb
cmp
movl
inc
cmpsl
addb
cmpsb
addb
loop
inc
mov
sub
loopne
out
adc
or
add
bound
add
insb
test
or
mov
and
xor
das
push
push
cmp
add
sub
push
aad
adc
add
xchg
or
in
call
cmp
rcll
pushw
pop
ja
or
or
adc
es
daa
pop
mov
inc
jnp
pushf
xlat
inc
jns
outsb
icebp
and
hlt
push
lock
nop
inc
add
adc
icebp
push
lock
pop
push
or
add
jo
sbb
mov
cltd
int
push
loopne
rcll
push
xchg
mov
add
dec
aam
movsl
inc
dec
outsb
add
adc
inc
inc
rorb
int3
notb
fimull
dec
movb
inc
add
jmp
jnp
les
fs
adc
jns
fwait
rolb
add
or
pop
loopne
mov
cmp
ss
dec
aam
clc
xor
xor
add
inc
xor
andl
dec
cmp
add
gs
push
pop
pop
jns
inc
or
or
fistpll
cmc
mov
sbb
mov
xchg
stc
jp
rcll
pop
fstpt
rol
xor
inc
mov
or
sahf
mov
push
jo
inc
call
add
xor
pop
and
outsl
inc
xor
outsl
outsl
scas
daa
inc
sti
jbe
iret
aad
jge
sub
call
inc
mov
mov
inc
inc
or
cld
or
dec
dec
adc
or
jne
sar
add
repnz
cmp
js
inc
cs
adcb
outsl
dec
inc
dec
mov
dec
dec
jle
mov
dec
xchg
or
lret
add
lcall
fbld
sbb
arpl
lea
jge
clc
sti
inc
popa
or
sub
out
cli
and
and
inc
dec
mov
pop
mulb
jmp
cld
pop
fnstenv
mov
dec
or
icebp
sbb
pop
mov
mov
sub
je
mov
mov
in
stos
dec
inc
hlt
jbe
mov
int
aaa
push
adc
mov
movsl
adc
pop
xor
push
cmpb
jge
mov
jge
pop
clc
push
iret
stc
push
jb
inc
cmp
xchg
test
movsl
je
sbb
pusha
scas
or
push
test
test
les
xchg
inc
mov
pop
fs
mov
add
mov
jne
jmp
divl
mov
jnp
das
cld
adc
cld
sbb
push
dec
mov
fiaddl
push
out
add
loope
xchg
cmp
jge
cmpsb
fisubrs
test
dec
in
add
mov
ljmp
mov
lcall
push
cli
xchg
test
mov
sub
in
ja
mov
fadd
mov
insl
out
mov
hlt
jle
lea
cmpsb
outsb
jnp
movsl
sbb
push
xchg
mov
cmp
imul
jnp
push
mov
lods
loopne
rorb
es
mov
or
cwtl
inc
mov
or
xor
pop
xchg
xchg
pop
add
mov
test
test
divl
mov
add
mov
add
cmp
cmp
and
aad
or
loope
call
outsb
mov
call
add
das
hlt
and
iret
xchg
mov
mov
jno
fistpl
dec
je
cld
mov
mov
mov
fsubrs
sahf
pop
inc
jg
sub
gs
nop
or
pop
in
cmc
out
inc
sub
or
outsl
or
or
ficomps
inc
fcmovnu
sbb
mov
cld
icebp
sbb
cmp
mov
mov
sub
insb
call
push
push
add
sub
inc
dec
cmp
jne
sbb
dec
sub
ss
add
and
aas
dec
cs
or
dec
xchg
test
add
rolb
ret
movb
insl
mov
add
dec
add
sti
mov
nop
adc
repnz
pop
movb
mov
push
mov
sbb
sbb
pop
fwait
fs
or
fdivrp
xor
in
and
push
xchg
pop
and
popl
movsl
in
gs
gs
mov
call
and
lea
jge
mov
in
pusha
push
sbb
loop
sbb
or
loopne
mov
sub
test
loop
aad
add
into
fldenv
lahf
or
push
xor
mov
fs
push
xor
roll
mov
add
dec
call
jnp
addr16
or
xor
xor
cmp
stc
cmp
pop
pushf
and
dec
pop
add
in
lea
fcompl
addb
pop
cmpsl
push
lock
mov
test
inc
inc
add
or
or
mov
jmp
add
imul
xchg
andl
mov
add
daa
add
add
fadds
add
jae
pop
lahf
or
pop
addr16
add
adc
or
std
xor
xchg
push
add
cmp
mov
ljmp
jae
dec
add
push
add
add
out
push
add
add
add
or
inc
add
dec
push
pop
inc
add
std
xlat
mov
adc
add
add
je
dec
sub
xchg
std
fildl
or
sub
sub
add
cmc
jbe
mov
jle
add
xlat
jne
add
outsl
scas
insb
aas
xchg
std
add
add
push
add
out
lods
jnp
sbb
pop
xchg
jae
mov
pop
push
jae
jne
cs
mov
add
lcall
arpl
out
sub
sub
sub
inc
fildl
repz
cmp
jne
inc
in
and
les
adcl
push
loope
sub
es
add
jae
push
pop
mov
sub
and
fucomip
in
lret
into
pop
insl
inc
addl
rep
add
cmp
push
and
sbb
daa
push
jbe
in
sub
push
je
sbb
mov
insb
testb
add
pop
fiadds
outsl
add
popa
popf
sbb
adc
cwtl
sub
nop
and
popf
add
or
mov
or
js
es
or
push
js
gs
or
add
sbb
nop
out
in
cmp
filds
xchg
testb
in
fwait
std
fidivs
pop
pop
jnp
sbb
in
fldt
xchg
iret
testb
cmp
sub
sub
mov
adc
mov
mov
cmp
inc
adc
hlt
lods
outsl
sub
es
incb
rolb
mov
dec
pop
pushf
xor
and
enter
outsl
cmp
push
in
sub
adc
add
sub
sub
pop
mov
test
ss
push
std
aas
or
sbb
aad
daa
mov
sub
fldcw
cmpsb
xor
enter
jnp
in
lret
cmpsl
dec
push
jb
div
ljmp
add
add
adc
mov
or
sbb
in
movsl
scas
push
sub
mov
iret
sbb
orl
jg
lret
and
shll
mov
xlat
mov
or
xchg
scas
pop
rcll
mov
adc
adc
push
mov
sti
in
sub
adc
scas
bound
filds
fcmovne
xchg
xor
aaa
mov
add
inc
and
je
fdivrs
mov
fwait
cmpsb
and
cmp
push
or
pop
cmp
cld
stos
pop
repz
pushw
push
cmp
or
add
das
ljmp
add
pushf
jle
pop
jmp
jne
lods
scas
or
sub
in
adc
add
lret
ss
mov
in
clc
add
emms
push
push
das
add
pop
sti
pop
mov
aaa
mov
movsb
loopne
clc
fstpt
fsubr
push
lcall
cmp
lret
daa
push
dec
je
jle
adc
pop
outsb
jns
jl
in
fsubrs
int3
mov
hlt
ljmp
pop
scas
jle
add
push
jbe
or
dec
pop
dec
pop
in
mov
addr16
scas
add
test
repnz
sbb
sbb
pop
das
daa
sub
fdiv
not
out
pop
sbb
jbe
cmpsl
and
inc
ret
daa
loopne
aaa
or
nop
popa
fistpl
xor
fstpt
jle
sbb
jg
int
push
popa
add
xlat
sahf
jmp
dec
push
gs
pusha
jle
sbb
or
push
mov
add
mov
and
loop
aad
filds
add
push
fcmovu
add
cmpsb
lds
sbb
mov
int
outsb
cmp
jbe
cmpsb
adc
out
sbb
dec
int3
dec
movb
and
cmp
insl
pop
xor
sbb
imul
in
or
pop
push
dec
push
sub
lods
and
pop
pop
jbe
cmpsb
out
add
or
jnp
jmp
or
insb
or
dec
ljmp
mov
aad
xchg
cmp
dec
es
lods
repnz
call
sarb
add
jecxz
push
lea
fdivrs
cmp
dec
mov
push
sbb
sub
lods
push
push
test
shlb
out
in
xor
inc
mov
daa
mov
fcmovnu
xor
rclb
mov
mov
insl
sbb
mov
push
xor
jl
jl
cli
jno
out
and
ret
pusha
and
pop
rcll
inc
int
ja
add
mov
fcomps
scas
jp
loopne
jmp
jg
jno
xchg
icebp
or
jno,pt
stc
arpl
xchg
add
sbb
jbe
sub
cmp
jge
mov
jecxz
fadds
lea
sahf
sub
in
jbe
outsb
pop
jle
pop
jbe
out
lcall
or
push
inc
shll
in
and
inc
adc
ficoms
mov
ficomps
sbb
jp
xchg
push
call
in
int3
and
sbb
int3
inc
ja
push
sbb
in
je
sub
xor
mov
dec
sbb
add
mov
fdivrs
fs
dec
sub
cwtl
dec
lds
xor
pushf
and
add
add
fistpl
and
xchg
stc
insl
fwait
in
push
repz
repnz
fsubs
dec
push
add
add
loopne
add
add
add
pushf
jo
adc
es
push
xor
or
outsw
or
loope
push
or
mov
or
dec
xchg
scas
insl
pusha
arpl
imul
rcrl
aad
and
sbb
xlat
scas
mov
mov
cmpsl
incb
xchg
cltd
int
xor
fwait
cli
mov
add
add
fdivs
add
jg
fmul
scas
adc
push
lret
insb
arpl
jne
jae
popa
in
iret
inc
pop
inc
scas
pop
fucomi
pop
dec
daa
jo
dec
or
push
fbld
int3
bound
xor
mov
xchg
push
dec
push
sub
fsubl
mov
jp
lahf
jmp
push
jmp
inc
ja
mov
add
add
xor
jl
and
mov
int3
loopne
adc
xchg
ret
mov
addr16
iret
xor
test
jge
jle
fistpl
dec
cmp
push
mov
lret
jle
dec
jo
and
mov
or
xchg
mov
movsl
jo
add
imul
mov
xor
mov
dec
dec
lahf
mov
out
je
aas
rolb
loope
sbb
outsb
mov
add
es
adc
or
xchg
lods
add
out
loopne
sub
movb
ret
ss
push
ss
mov
xor
mov
sbb
stos
dec
loopne
test
enter
xor
inc
or
inc
inc
add
mov
xor
mov
pop
mov
pop
push
jmp
loope
out
das
mov
lret
stos
in
ss
jbe
jne
cmpl
movsb
gs
push
jp
push
testb
data16
insb
js
lods
shl
dec
out
sar
adc
dec
xchg
mov
adc
adc
cs
dec
addr16
add
mov
mov
mulb
cs
ficompl
and
iret
out
mov
pop
inc
loopne
inc
xor
push
fldt
jne
daa
cmpsl
adc
inc
inc
test
test
subb
data16
dec
sbb
sti
flds
test
rolb
jb
or
or
sbbb
iret
sti
cltd
sub
cmp
test
pop
ret
sub
test
aas
mov
xchg
xor
insl
pop
lea
xchg
dec
cmpsl
pop
fbld
pop
arpl
cmpsl
jne
hlt
and
cmp
xchg
adc
out
push
push
lcall
pop
mov
inc
scas
sub
fwait
or
sbb
jbe
aaa
xor
out
arpl
daa
test
push
iret
pop
xchg
and
mov
movl
inc
push
cmp
ja
push
and
sub
cmc
test
aaa
mov
dec
sbb
scas
aaa
mov
mov
outsl
shll
and
mov
mov
pop
adc
xchg
mov
xor
xchg
ss
fwait
fwait
inc
add
sti
dec
push
arpl
cltd
mov
mov
int
and
and
push
loope
jp
repnz
out
aaa
rolb
adc
xchg
int
mov
mov
xchg
cmp
es
sub
xchg
pushf
loope
xchg
adc
out
les
adc
pop
cmp
into
loopne
adc
push
pop
loope
leave
int
push
aaa
mov
aas
nop
xchg
loopne
mov
and
scas
sbb
dec
clc
sarb
push
jo
xchg
mov
adc
add
lahf
das
push
bound
stos
mov
mov
imul
sub
add
mov
inc
lret
mov
sbb
push
jbe
jb
data16
adcl
add
fistpl
sbb
test
out
jle
add
rclb
cld
pop
mov
mov
lods
jmp
inc
xchg
addl
jge
call
xor
mov
dec
inc
jle
dec
out
inc
add
and
aam
lea
iret
out
xchg
jns
mov
insb
sub
push
mov
jno
pushf
cmp
adc
or
call
mov
adc
cmp
cmp
xor
jbe
sbb
outsl
adcb
test
movb
popf
push
mov
dec
stos
and
jo
data16
xor
sbb
or
add
inc
fiaddl
mov
callw
push
sub
add
push
or
nop
loope
out
lahf
subl
lahf
fistl
pushf
mov
cli
add
jge
fucomi
sub
lcall
cmc
or
and
cltd
jnp
mov
in
in
add
cmpsb
jne
loopne
stos
add
add
xlat
into
bound
insb
lcall
dec
out
and
fwait
pop
xor
cld
in
in
lock
ss
cs
shlb
inc
dec
fadds
push
adc
lds
mov
sub
xchg
ja
push
bound
cmc
loop
sub
inc
and
subb
inc
fldl
dec
dec
popf
fadds
int
shrl
xlat
jno
movsl
sbb
sbb
mov
jno
iret
je
aaa
lods
sbb
popf
pop
mov
sbb
mov
mov
and
fmuls
shlb
add
aad
movsb
fldenv
outsb
js
mov
dec
add
test
sbb
sbb
bound
xchg
rcrb
push
fdivrs
add
addr16
fcompl
xchg
mov
dec
pop
mov
jl
xlat
mov
filds
mov
nop
push
daa
mov
xor
sub
inc
out
mov
ss
imul
out
or
pop
pusha
mov
stc
lods
xlat
aam
aaa
or
div
push
add
enter
data16
dec
adc
ret
push
jns
adc
sbb
sbb
divb
sbb
add
daa
xchg
in
mov
xor
ss
mov
inc
push
into
je
das
fisubrl
add
cs
cmp
pop
repz
test
mov
jp
out
pop
and
cmp
es
push
cmpsl
pop
in
dec
jne
into
mov
cmp
dec
int
pushf
arpl
test
loope
or
popf
mov
add
push
mov
xchg
cmp
sqrtps
aaa
popa
or
or
inc
in
lock
add
fsubl
shrl
cmpsl
sub
jecxz
mov
pop
xor
inc
add
push
aaa
xor
cli
outsl
fdivrs
inc
pop
cmovp
sub
data16
sbb
hlt
das
roll
stos
fisttps
dec
insl
dec
jp
nop
mov
xor
fisubrl
jne
mov
icebp
sahf
jae
ret
cwtl
cwtl
nop
sbb
cmp
stos
and
pop
int3
aad
int
sbb
fwait
inc
mov
dec
pop
xor
or
mov
daa
sub
fiadds
jmp
es
and
iret
pop
sbb
jmp
mov
out
mov
pop
jno
iret
inc
or
add
sahf
fnstsw
loopne
xchg
pushf
fdiv
cmp
cs
or
xchg
sbb
daa
es
insl
js
sub
xchg
sub
sahf
push
mov
test
fsubr
stos
inc
sbb
outsb
or
jne
inc
ret
jbe
mov
rorl
sahf
mov
add
loope
or
or
arpl
daa
data16
neg
dec
loopne
loopne
inc
sub
dec
sub
sub
insb
pusha
adc
rcr
jmp
lret
js
push
inc
sbb
popf
aam
rolb
xchg
jns
sahf
sarl
sub
cmpsl
ret
add
sub
notl
icebp
test
out
mov
das
mov
idivb
cmc
stos
jb
jle
dec
and
aas
je
test
iret
xor
xor
jae
cmp
mov
xcrypt-ctr
cmpsl
cwtl
mov
mov
xor
pop
mov
imul
les
mov
cmp
arpl
or
out
gs
cs
and
and
xchg
addr16
aaa
out
sbb
xchg
jmp
mov
addl
cmpsl
push
push
and
stos
lahf
mov
and
imul
dec
mov
loope
dec
popf
lods
daa
and
mov
mov
and
in
pop
inc
pop
ret
cmp
cld
ja
aaa
leave
mov
out
iret
int3
rcl
pusha
adc
out
int
jo
shl
repz
mov
das
sbb
xor
xor
mov
pop
icebp
stc
lcall
ja
daa
push
pop
movsb
mov
aas
mov
not
popf
sub
out
cmpsb
xchg
or
mov
sub
mov
inc
fisttps
js
jne
jno
push
in
daa
dec
out
out
jnp
xorl
dec
push
pop
add
pop
and
mov
sbb
mov
xchg
sbb
or
xor
xor
dec
cli
xor
mul
push
or
mov
mov
mov
out
std
or
xor
and
cmp
sbb
aaa
dec
lcall
add
add
inc
dec
push
aam
test
fiaddl
in
or
ljmp
jbe
adc
js
rclb
mov
data16
in
mov
jl
pop
sub
pop
rclb
es
outsl
std
cmp
pop
inc
lea
push
imul
or
pop
pop
adcl
bound
pop
lods
mov
scas
fs
xor
sbb
fldt
int
rclb
push
fisubs
jp
and
ljmp
xchg
les
xor
test
aaa
xchg
and
sbb
call
test
in
push
mov
inc
inc
arpl
mov
sbb
sub
aam
sub
dec
pop
outsl
cwtl
mov
mov
push
mov
sub
or
xchg
out
gs
das
jecxz
popa
and
adc
stos
and
add
aas
sbb
jns
jne
nop
cmpsl
inc
pop
es
jbe
push
cmp
fdivrl
sbb
scas
jbe
popl
pop
pop
aam
frstor
fwait
icebp
push
into
dec
xchg
out
or
add
jbe
je
insl
sbb
push
rcrb
les
or
sub
push
xchg
scas
xor
or
jnp
aaa
pop
clc
movsb
pop
and
sub
mov
arpl
xorl
fucompp
and
pop
push
and
cmc
push
sbb
cmpl
fdivl
scas
cmp
prefetch
iret
inc
push
or
adc
adc
push
rclb
and
push
fs
adc
push
mov
or
paddusw
into
cmp
loope
ud1
push
pop
negb
cmc
and
insl
mov
jbe
popf
dec
mov
enter
iret
and
mov
mov
movsb
out
fsubr
in
lcall
push
mov
sub
ja
sub
ljmp
test
and
stos
mov
xchg
or
sub
cmp
les
xlat
mov
jle
outsl
jbe
lock
shlb
adc
fists
gs
ljmp
or
neg
int
jnp
imul
and
clc
mov
les
sub
push
mov
fwait
nop
xchg
shrl
out
out
das
hlt
stos
dec
jge
sub
mov
inc
ret
mov
les
insl
or
es
sub
adc
inc
add
shlb
and
nop
sbb
ja
add
cmp
mov
push
in
or
push
and
stos
mov
jo
pop
adc
mov
ss
mov
fsubrs
mov
push
sahf
leave
repz
mov
xchg
or
enter
ja
dec
call
sub
adc
mov
mov
add
emms
js
xrstor
pop
fistpl
out
scas
and
mov
outsl
sbb
icebp
movsb
fbld
inc
push
aaa
divl
shl
cmp
adc
mov
bswap
mov
jo
out
in
sub
js
adc
loope
jle
cmpsb
push
rolb
pop
int
fdivrl
mov
test
xor
test
adc
mov
or
pop
mov
pop
aam
inc
mov
fdivrl
cwtl
adc
sbb
out
push
sahf
inc
xchg
pop
out
in
push
dec
xor
adc
je
clc
sbb
cwtl
lea
push
xor
adc
popa
leave
xor
sbb
pop
fildl
inc
lahf
movsl
push
xchg
cmpsl
inc
fs
pop
mov
jle
dec
sbb
inc
xor
xchg
addb
xor
cmp
out
lods
cld
testb
dec
sub
jo
adc
cmp
sbb
sub
or
cwtl
cmp
sub
pop
lods
int3
xor
xchg
xchg
shrl
fidivrs
test
lods
in
pop
push
and
out
mov
sbb
pop
add
pop
or
pop
jbe
sub
sbb
or
pop
sub
adc
aaa
pop
mov
popa
sub
dec
add
xor
ljmp
push
sub
mull
mov
pop
and
push
xor
xor
pop
out
test
inc
inc
movsb
push
loopne
int3
das
movsl
add
loope
mov
stos
test
addr16
jb
inc
bound
fldenv
sub
mov
add
dec
in
and
inc
push
jb
cmp
orl
pop
ret
imul
pop
ja
or
pop
sub
cs
push
cmpsl
pop
sub
jl
mov
cmp
xor
inc
nop
jg
cli
rclb
and
icebp
mov
andb
dec
daa
sahf
jg
test
mov
arpl
dec
mov
add
in
shll
rcl
jecxz
iret
mov
into
mov
into
mov
add
push
imul
mov
mov
sti
pop
and
pop
push
pop
pop
add
jmp
iret
out
lea
mov
mov
add
xchg
test
mov
pop
data16
or
xchg
into
iret
ds
mov
testl
pop
adc
jmp
xchg
pop
mov
pop
stos
sahf
int
dec
xchg
scas
stc
scas
pop
out
pop
jmp
inc
push
add
add
cmp
fwait
mov
jmp
mov
inc
in
cmp
lahf
xor
insb
aaa
jnp
pop
add
jle
and
mov
test
pop
fwait
lss
adc
out
mov
or
scas
lock
jnp
inc
scas
or
sbb
or
pop
jbe
scas
frstor
lcall
and
jmp
mov
add
sbb
push
sahf
jmp
inc
xor
cwtl
sub
xor
or
pop
iret
iretw
pop
push
in
pop
push
aaa
cmpsl
dec
imul
sbb
mull
into
xor
adc
pop
lds
mov
inc
xchg
xchg
pop
jbe
pop
arpl
or
adc
sbb
sbb
fmuls
dec
dec
rorb
xor
out
pop
dec
cmpb
sub
sbb
add
call
sub
sub
push
cmp
out
insb
sub
repz
out
rolb
xor
cmp
add
or
push
gs
mov
sub
in
imull
adc
add
sbb
ds
inc
pop
fcmovbe
out
add
sub
call
std
bound
xchg
mov
jae
xchg
xlat
or
shll
out
xor
push
mov
xor
pop
repnz
insb
cmp
js
jo
sbb
xlat
add
aas
pop
add
and
sub
or
lret
mov
fildl
jbe
pop
push
push
push
dec
or
out
adc
loopne
or
mov
test
push
test
fiadds
xchg
loope
mov
sub
test
jnp
sub
add
push
mov
adc
gs
xor
mov
lods
imul
xchg
es
mov
xor
and
sbb
push
xor
pop
sbb
jle
popa
clc
pushf
adcl
incb
sar
inc
or
lret
push
dec
das
or
pop
pop
clc
out
popa
mov
push
dec
push
sbb
mov
es
xchg
movsb
lock
cli
stc
inc
nop
or
negb
mov
dec
lock
inc
inc
jnp
ret
mov
sub
or
and
mov
in
jae
or
adc
xor
sub
xchg
add
jno
push
mov
outsb
push
xor
push
xchg
pushf
lock
outsb
stos
aaa
sub
dec
xor
pushf
lock
repz
xchg
clc
ds
dec
or
bound
int
xorb
lahf
cmpsb
out
xchg
pop
bound
ja
fs
and
mov
je
in
add
ljmp
or
mov
and
pop
mov
pop
and
or
sub
push
aad
lcall
les
mov
xchg
xor
shrl
test
ljmp
mov
pop
dec
enter
test
inc
mov
mov
add
sbb
push
lcall
mov
fstps
sub
add
rcll
cmp
xchg
jno
push
stos
imul
inc
pop
cmpsb
lcall
idivl
lret
aaa
testl
push
mov
int3
int3
in
shlb
ja
in
pop
insb
add
ficomps
cmp
popa
or
and
data16
mov
and
adc
das
unpckhps
je,pn
lcall
push
jbe
mov
and
aas
add
pop
das
outsl
outsb
jmp
cmp
xor
int3
xor
das
frstor
lcall
sub
pop
fidivrs
es
mov
xchg
lcall
xor
mov
test
cld
xor
subb
cmp
or
rorb
add
pop
ficomps
scas
jnp
movsl
cmpsl
inc
or
hlt
xor
cltd
push
lock
jmp
cmpsl
iret
dec
xor
jmp
fsubrs
pop
rcll
push
into
xor
sub
adc
jp
cs
jl
mov
mov
loop
dec
rcr
mov
mov
lods
loop
mov
jp
jp
in
dec
adc
add
sub
aad
jne
push
fsubl
cmp
int3
mov
push
adc
sbb
fcomi
repnz
sbb
jbe
xor
jle
adc
jnp
cmpsb
add
iret
cmp
pushf
push
mov
mov
lret
or
inc
and
pshufw
scas
add
out
and
mov
push
cwtl
push
shll
mov
and
adc
mov
sbb
add
inc
int3
mov
mov
push
xor
rcrl
xchg
sbbb
mov
das
jle
stos
cmpsl
decl
decl
sub
xor
adc
iret
push
push
scas
out
jo
into
mov
mov
pop
dec
fs
push
call
push
sbb
je
inc
scas
imul
dec
cmp
in
ja
cmp
insb
ret
shufps
or
sbbl
dec
mov
arpl
gs
jmp
loope
mov
inc
mov
das
daa
ret
push
iret
lcall
add
pop
jge
in
push
lret
xchg
enter
inc
xlat
lahf
dec
cld
aas
iret
popa
fsubrs
fwait
dec
mov
cmp
add
adc
orb
sbb
dec
call
jnp
mov
or
loopne
sbb
inc
scas
sti
add
adc
push
iret
bound
add
ficompl
scas
inc
je
pop
push
jo
push
stos
movsb
mov
sbb
jge
sbb
push
in
adc
mov
xorl
sub
fstpl
roll
pop
insl
jnp
les
pop
mov
add
les
jg
ret
jle
roll
addr16
ret
and
cmc
cmpsb
xchg
ret
jno
inc
rcl
in
cmp
mov
mov
mov
bound
push
cmp
mov
cs
imul
roll
jo
dec
inc
inc
mov
stos
std
add
cwtl
out
add
push
addr16
dec
neg
mov
add
bound
sub
cwtl
push
fdivs
inc
xlat
and
adc
mov
mov
add
outsb
push
arpl
xor
xor
xchg
adc
lods
sahf
sub
icebp
mov
sbb
lods
adc
icebp
mov
push
push
pop
js
loop
add
aaa
mov
test
les
xchg
imul
sbb
ds
mov
fsubrp
push
insl
dec
jns
sub
js
cmp
add
push
add
lahf
popl
movsb
popa
aas
xchg
loope
movsl
push
rcl
fmull
fistps
add
push
or
mov
inc
add
es
rclb
jmp
imul
cmpsb
ret
mov
mov
dec
repnz
mov
inc
dec
dec
pop
push
out
jbe
add
cwtl
and
and
fisubs
mov
clc
in
mov
sbb
or
and
lcall
in
pop
push
ret
add
movsl
xor
test
add
cli
dec
or
sbb
sbb
mov
loop
je
sub
mov
add
push
xor
jo
call
adc
and
or
dec
shlb
jecxz
jne
je
test
jnp
fisubs
leave
or
aaa
rcr
jl
movsl
lcall
sbb
adc
mov
stos
sub
pop
das
mov
les
mov
push
jno
pop
sbb
xchg
xchg
popa
push
sahf
icebp
adc
fcomp
pop
mov
lds
pop
push
sbb
xchg
push
mov
fsts
bound
sbb
aaa
addb
lds
js
out
in
mov
test
jbe
mov
inc
ret
sub
bound
cmp
jne
push
or
mov
fwait
lahf
sub
sub
lcall
lods
jp
iret
fisubrs
xchg
dec
in
cmp
or
dec
lret
xor
fbld
push
xor
inc
cmp
pusha
add
adc
push
insl
fsubp
shll
test
js
mov
and
pop
pushf
sbb
and
out
sub
mov
xor
lods
jae
loope
lret
call
int3
inc
iret
or
mov
scas
cmp
add
push
bound
jp,pt
xor
xchg
lock
xchg
push
addr16
daa
lahf
dec
jge
sbb
push
stos
cmp
add
mov
out
adc
push
andb
gs
inc
orl
pop
inc
mov
pop
mov
xchg
xchg
in
call
out
cwtl
insl
sarl
mov
fisttps
loopne
das
and
inc
adcb
es
cmp
subb
sbb
loop
and
jne
and
jge
adc
scas
jbe
jbe
adc
lea
loopne
nop
push
icebp
and
clc
push
and
insw
aad
ficoml
bound
mov
cmp
sub
mov
ror
movb
xchg
cs
pop
dec
fdiv
sub
icebp
aaa
out
shll
mov
xor
inc
mov
or
psrlq
es
add
push
or
adc
out
rolb
add
lods
fwait
inc
mov
lcall
inc
into
loopne
sub
dec
mov
xchg
cmp
and
idivb
enter
mov
mov
mov
adc
mov
jp
inc
sub
or
push
xchg
or
jecxz
push
push
jbe
andb
pop
or
mov
push
iret
pop
sbb
jecxz
lock
and
sub
in
xchg
fmuls
dec
or
dec
pop
mov
mov
imul
ja
aaa
dec
scas
notl
mov
and
inc
movsb
ja
addr16
add
fdivs
and
xchg
pop
push
es
adc
add
imul
das
mov
sarl
into
imulb
add
jo
jno
stc
sbb
sub
jns
cmp
lea
out
inc
shlb
jbe
ljmp
push
adc
pushf
mov
push
or
mov
jg
les
es
loopne
xor
adc
sub
inc
lea
int3
jp
or
mov
cltd
sti
gs
and
cs
ret
sahf
lods
cwtl
pop
lahf
and
mov
or
and
and
sbb
xchg
je
jl
xor
scas
mov
addl
outsb
mov
push
and
and
popf
add
in
fstps
fstl
and
push
mov
push
dec
mov
mov
vpsubsw
hlt
mov
jbe
hlt
sub
mov
cmpsl
fiadds
mov
add
or
sub
js
stos
test
lods
cwtl
add
daa
lods
bound
pop
fsubrs
xchg
ret
mov
in
jmp
in
xchg
clc
loopne
cmp
and
aam
xor
and
or
mov
ja
stos
fistpl
xor
ss
jne
mov
roll
push
fcomps
xchg
adc
lods
mov
add
cmp
xor
sub
and
movsl
sub
mull
std
popf
push
mov
ret
mov
aaa
mov
jnp
mov
hlt
cmpsl
in
jnp
mov
mov
cmp
or
fwait
aad
das
sub
xor
lds
pop
int3
andb
fcoms
rcr
adc
gs
scas
cmp
sti
xchg
adc
sub
daa
add
mov
cmc
xlat
ds
lret
add
inc
rolb
inc
and
int
jno
or
cwtl
lds
lcall
xlat
test
jo
insb
iret
clc
repz
aaa
push
add
iretw
bound
lret
add
neg
cs
lea
xchg
push
shlb
es
lods
lds
pop
test
call
repz
add
adc
mov
add
sar
mov
rclb
cmp
in
sbb
mov
ret
xor
lcall
dec
adc
and
outsl
or
adc
jp
push
xor
xor
lahf
mov
jb
and
and
int3
xor
jmp
or
sub
adc
xor
add
notl
and
insb
inc
imul
mov
pop
xor
pop
nop
mov
xchg
inc
loopne
inc
sub
sub
shl
push
lea
add
addr16
push
jae
mov
mov
xchg
sti
data16
add
sub
cld
jne
ret
fimull
jecxz
sbb
fistpll
xor
push
xor
and
test
aad
rcl
push
std
sbb
mov
jl
jp
jns
arpl
push
inc
add
repz
int3
xchg
adc
adc
scas
stos
xor
ret
inc
adc
aam
int3
loop
cmpsl
roll
bound
mov
subb
dec
shll
cmp
inc
pop
dec
popf
cmp
adc
pusha
add
sbb
bound
pop
call
loop
jmp
jne
fs
clc
ss
cli
sbb
enter
fwait
adc
adc
rcrb
insb
inc
test
jbe
rorl
rcll
inc
pshufw
pop
mov
adc
mov
fcoms
fiaddl
cmp
push
test
xchg
add
lock
xchg
cmp
pop
shlb
in
dec
nop
xchg
xchg
jo
test
mov
sub
into
dec
mov
insb
jno
jbe
sbb
bound
dec
les
data16
test
inc
out
sub
call
ret
dec
push
pop
cmp
clc
pop
and
push
mov
int3
gs
rcll
and
je
imul
sbb
inc
pop
lret
push
scas
lods
lds
xor
pop
push
subb
fldl
push
ja
imul
cli
xor
mov
iret
sbb
les
les
mov
imul
cs
mov
pop
xor
out
adc
dec
popf
xchg
int3
aaa
lods
dec
pop
jns
dec
notb
adc
repz
or
mov
mov
mov
ja
jp
or
movsb
fcoml
xor
cwtl
sub
mov
adc
jb
jmp
cs
movsl
adc
mov
int
cmp
xlat
je
fildl
mov
fisttpl
roll
pop
test
inc
ds
xchg
movl
adcl
adc
mov
roll
sahf
test
fimuls
push
add
jae
enter
pop
lods
rcr
and
mov
pop
pop
mov
pop
adc
notb
sti
sub
adc
sbb
pop
in
ficompl
aaa
jle
adc
jle
or
sub
push
aas
xor
push
mov
insl
cmp
imul
faddl
or
ja
add
adc
xor
mov
in
pop
cld
xor
xor
jne
cmpsl
jnp
xchg
jnp
out
mov
loope
loop
and
stos
insb
outsb
mov
inc
pop
inc
jecxz
int3
int
lret
hlt
nop
inc
pop
cltd
fwait
jl
out
sbb
pop
iret
mov
jmp
and
shll
jmp
cmp
mov
sub
sbb
jle
push
lods
rep
aaa
xor
or
aad
or
ret
pushl
jb
scas
enter
pop
and
rolb
inc
aas
rol
cmp
mov
addr16
mov
test
cmp
jns
pop
fnstsw
mov
inc
ret
xchg
lcall
fmul
iret
ja
or
jns
push
adc
cmp
mov
in
popa
xchg
jg
pop
xlat
jg
fstpt
xchg
sub
inc
inc
push
popa
push
fdivrs
add
dec
ja
dec
adc
and
aaa
mov
xor
xchg
pop
sti
cmpl
test
in
int
mov
addr16
bound
int3
add
and
add
ss
pusha
xchg
pop
fwait
mov
mov
xchg
sbb
jecxz
pushf
jbe
popa
daa
xor
jmp
fsubs
mov
inc
xchg
push
or
mov
or
mov
xchg
jne
adc
imul
sbb
adc
jnp
out
gs
jmp
sbb
nop
xlat
and
mov
or
and
ffreep
decl
jo
cmp
aam
xlat
in
and
jnp
cmovbe
lea
insb
psubusw
sbbb
popf
sub
dec
pmovmskb
fsubs
outsl
xor
adc
sarb
sbb
mov
lahf
add
sbb
and
daa
jge
pop
insb
nop
mov
sbb
and
test
test
in
test
popa
or
mov
sub
loopne
sub
pop
sub
in
int
mov
mov
popa
arpl
inc
xchg
iret
adc
xchg
or
fcomps
loop
and
or
push
mov
cmp
jae
es
lods
pop
jb
adc
or
outsl
push
jbe
idivb
pop
inc
xor
int3
int
dec
sbb
jae
pop
xor
mov
sbb
arpl
jnp
mov
and
cld
flds
pop
out
mov
out
inc
jl
imul
xchg
jae
dec
insb
jnp
pop
jbe
and
dec
jnp
adc
sbb
in
push
cli
adc
fcomp
inc
mov
inc
test
cs
add
and
into
into
ds
xor
xchg
es
aad
adc
lods
sub
movups
push
scas
fwait
in
mov
and
pop
and
jae
push
mov
test
adc
jne
mov
test
adc
aaa
js
jae
inc
test
jns
sbb
fcmove
lds
add
adc
sub
imul
imul
dec
mov
sarl
sub
xchg
and
outsl
out
lcall
repnz
xchg
xchg
dec
rcrb
mov
inc
add
lock
loopne
adc
push
pop
mov
shrb
leave
sub
movsl
xchg
cmp
inc
cltd
test
push
ret
imulb
aam
lcall
adc
orl
mov
push
inc
lods
push
rcll
push
mov
push
jl
sbb
mov
lods
and
inc
add
test
pop
push
xlat
movb
mov
add
and
filds
scas
and
daa
fidivrl
push
in
movsb
in
outsl
and
sub
cmp
das
push
add
push
jns
pop
sbb
jne
cli
add
mov
pop
aaa
cmp
cmpsb
pop
imulb
cmp
lds
and
idivb
pusha
sub
dec
push
add
out
or
pop
clc
int
aam
xchg
mov
sahf
pop
scas
lcall
jge
hlt
stos
mov
jns
jno
jns
adc
scas
mov
fildl
add
xorl
mov
lret
jne
xchg
ss
fistl
aas
imul
fmuls
mov
sbb
int3
inc
or
pop
js
pop
push
or
xor
adc
out
mov
add
xor
sub
sbb
pop
outsl
or
subl
dec
and
push
and
fcoms
and
push
jmp
push
addr16
xchg
int3
cmpsb
mov
shll
lcall
popa
andb
out
movsb
or
mov
dec
xor
cmp
xchg
push
xchg
js
jp
mov
sbbb
inc
xor
rcrl
pop
insl
arpl
ds
call
cmp
or
cmp
and
xchg
std
loop
cmp
cmpsl
push
ja
stos
push
mov
mov
add
js
fwait
add
add
sti
rcrb
movsl
es
jno
pop
sti
mov
ja
inc
jae
rolb
pushl
push
clc
into
rolb
sahf
shl
mov
outsl
add
pop
mov
inc
pop
inc
dec
jnp
mov
ss
xchg
pop
adc
iret
daa
jnp
and
inc
or
loopne
and
test
stos
call
jp
enter
add
push
rorl
orl
lods
addr16
insl
adc
pop
cmpsl
je
fldz
test
xchg
and
sub
shll
int3
inc
shll
insb
push
or
add
xchg
fadd
out
lea
jecxz
sub
lcall
mov
imul
push
sarb
movb
mov
pushf
inc
in
add
aad
push
push
adc
test
xchg
stos
inc
scas
pop
shlb
fistpl
int3
sub
shlb
sarb
push
ret
scas
jle
test
into
pop
jo
sarl
adc
leave
lock
cmp
mov
fadd
les
jbe
adc
loopne
das
dec
xchg
jecxz
not
cli
mov
mov
inc
cwtl
adc
push
rol
pop
lods
fwait
dec
iret
add
push
jg,pt
cmp
push
mov
or
movsb
add
push
mov
adc
ja
out
vpminub
sub
insl
and
jo
mov
popa
repz
and
mov
shrl
je
fcmovnbe
aaa
scas
rcl
fcom
stos
pop
xor
push
push
and
out
int3
das
push
cmpsl
push
cmpsl
sarl
push
xchg
xor
inc
pusha
push
gs
test
add
cmpsl
pop
int3
mov
lret
dec
aad
cs
int
daa
fs
movsb
ret
aam
cmp
int3
call
jbe
into
mov
out
push
test
clc
sbbl
int3
inc
fs
inc
sbb
movl
and
fwait
or
sub
push
push
ret
sub
das
or
xor
dec
int3
andb
dec
dec
sub
or
push
dec
test
sbb
mov
lods
add
dec
xor
add
and
pop
adc
inc
hlt
or
ret
test
jp
mov
fimuls
lds
in
xor
dec
lds
inc
mov
pop
pop
jmp
int3
push
xor
xchg
fbstp
mov
mov
fisubl
aad
sbb
call
mov
rcr
push
jmp
movsl
add
aaa
xchg
dec
dec
leave
xor
xor
mov
and
push
xor
out
cmp
xor
mov
movsb
lcall
dec
pushf
sub
les
rcll
inc
cs
push
jo
mov
or
push
and
testl
outsl
dec
push
out
test
or
mov
adc
dec
xchg
into
push
mov
and
in
and
push
jo
fs
or
dec
rdtsc
or
into
mov
outsl
pop
jg
fistps
test
ret
mov
addr16
aam
adc
stos
repnz
lods
inc
das
mov
pop
xor
cmp
mov
mov
or
and
lret
outsl
ret
jle
ss
movsb
aas
das
xor
add
ret
xor
and
push
and
lret
push
push
call
ja
fsubrs
ja
and
jl
adc
jle
pop
xchg
mov
xor
rcrb
popa
in
lds
xchg
hlt
push
cltd
dec
mov
sub
mov
add
push
repz
shr
inc
out
cmp
xorl
roll
push
cmp
lret
add
stos
jo
dec
sub
nop
andl
pop
sbbl
push
push
cmp
inc
xchg
dec
or
pop
arpl
iret
or
or
nop
cmp
je
out
add
push
jge
push
movsb
ret
sub
sub
arpl
movsb
lcall
lcall
sub
push
mov
test
xor
push
das
xor
inc
add
xchg
lcall
sahf
popa
add
movsl
pop
push
ss
xor
into
imul
push
in
cld
leave
cmp
jo
sub
and
and
push
and
js
andb
and
add
fcmovnbe
rolb
iret
addr16
adc
add
jns
in
add
xchg
hlt
sub
repz
cmp
cmp
xchg
add
popa
add
es
mov
and
sub
and
roll
mov
loopne
addb
sub
inc
cwtl
inc
movsbl
je
scas
adc
cmpsl
sub
iret
sbb
sbb
add
loop
daa
xor
dec
xchg
push
push
ljmp
popf
cmp
punpckhdq
sahf
mov
hlt
ret
and
ror
lods
dec
fdivrs
push
jg
push
test
adc
stos
pop
aam
and
sub
icebp
mov
push
adcl
cmp
and
outsb
xchg
or
and
add
lds
ret
pop
xchg
lods
lcall
int3
clc
mov
mov
mov
jae
arpl
xchg
mov
or
xorb
movsb
mov
into
cwtl
stos
sbb
or
pop
push
pop
rclb
fdivs
mov
sub
jbe
pusha
aam
popf
push
mov
push
mov
leave
add
rorl
inc
inc
nop
mov
stos
xchg
addr16
or
mov
push
cltd
pop
in
shl
cmp
rorl
es
mov
ja
xchg
popl
pushf
adc
sub
add
and
aaa
and
daa
mov
mov
or
into
xchg
fldenv
adc
pop
pop
pop
cmp
aad
and
and
jbe
inc
ficomps
pop
jo
mov
sub
dec
inc
lret
jmp
xor
fstpl
imul
hlt
sub
push
dec
ds
mov
mov
dec
loope
dec
dec
mov
and
push
and
imul
push
mov
mov
pop
pop
jl
lock
popf
fadd
pop
mov
orl
das
dec
adc
les
xor
mov
inc
mov
loope
xor
sub
dec
mov
inc
sub
jmp
adc
push
lret
and
push
adc
xchg
add
aaa
xorl
mov
push
jne
inc
popf
sub
ljmp
xchg
cs
push
cli
cmp
jo
xlat
fsubl
ret
inc
call
dec
testl
add
or
mov
add
lret
mov
adc
dec
push
pop
les
subl
or
add
sbb
cmp
fbld
push
xor
sub
lods
loop
test
test
pop
pop
rorb
xchg
lods
or
and
add
inc
inc
pushf
or
inc
pusha
nop
adc
jp
pop
jno
es
xchg
dec
out
sahf
dec
cld
sti
jge
rcr
fldenv
inc
jns
add
lcall
lods
insb
ret
call
repnz
push
inc
mov
jp
rcll
movaps
sub
hlt
mov
push
das
scas
cmp
dec
adc
int3
or
bound
mov
shll
xchg
mov
mov
ret
or
addl
or
nop
mov
ljmp
pop
cltd
and
rclb
sub
daa
in
stos
sub
mov
lret
mov
insb
lahf
popa
xor
fs
pop
adc
mov
lret
mov
jbe
adc
adc
xchg
push
xor
sub
jb,pn
ret
and
stc
xor
and
mov
xor
shlb
add
push
mov
jmp
dec
xchg
ds
add
xor
add
mov
jge
xor
loope
xchg
xchg
add
pop
pop
add
push
sti
and
addr16
arpl
add
test
popf
adc
out
cld
das
aad
inc
dec
and
pop
push
jecxz
adc
iret
sbb
in
sbb
or
adc
xorb
push
mov
mov
gs
and
push
xor
sub
pop
add
cmc
jmp
cmp
mov
add
mov
adc
adc
mov
loope
jmp
push
out
or
popa
jne
xor
clc
stos
mov
dec
inc
fwait
mov
cmpsb
jle
stos
fsubs
addb
pusha
xchg
subb
add
mov
aad
jl
rorb
divl
jns
cmpsb
in
dec
jo
data16
iret
imul
cmc
mov
mov
jae
mov
rorl
cmc
mov
and
sub
ret
and
mov
mov
lcall
bound
jo
and
filds
inc
into
ja
iret
sbb
mov
mov
push
xchg
xchg
subb
out
imul
dec
sub
lcall
clc
and
les
ja
inc
adc
and
push
push
adc
push
push
adc
jns
adc
mov
popf
push
adc
bound
int3
or
add
xorl
add
xchg
cmc
pop
push
je
addr16
add
movsb
pusha
test
dec
mov
sbb
test
sub
out
test
xor
jb
jecxz
xor
lods
insl
mov
adc
sub
add
jne
sbb
sbb
mov
push
es
or
sbb
icebp
pop
mov
sbb
jp
push
xchg
fiaddl
fistpl
cmpb
jne
test
jge
xor
cvtps2pd
pop
jge
aas
jge
insb
mov
cmp
popf
add
aas
fwait
push
mov
insb
imul
fadds
pop
in
xor
adc
shlb
call
movsb
cmp
out
sbb
sbb
jecxz
test
inc
lret
fsub
jnp
push
cvtdq2ps
aas
out
and
jo
xlat
dec
adc
adc
lcall
sbb
mov
enter
movsb
mov
jecxz
dec
and
fwait
mov
mov
lds
outsb
addr16
jnp
js
mov
and
sub
cmp
mov
je
jnp
movsl
jb
repz
iret
es
pop
fadd
jns
cmp
cmp
mov
inc
cmc
adc
inc
ret
inc
jo
pushf
bound
lahf
sbb
inc
push
mov
outsl
xor
roll
and
test
and
in
sbb
faddl
je
outsl
popl
xchg
mov
aas
insb
js
mov
jp
fcmovnb
call
or
sbbb
cltd
push
add
and
jmp
in
mov
xchg
sbb
push
rolb
jno
mov
shrb
or
pop
scas
pushf
loopne
popa
fdivp
insb
pop
or
ja
push
jle
sbb
adc
insl
sbb
aaa
arpl
or
dec
adc
push
push
dec
sti
pop
add
push
mov
stos
loopne
daa
lock
xchg
je
inc
bound
add
mov
pushf
ret
fadds
sbb
and
pop
add
mov
cmc
jno
pcmpeqw
mov
mov
adc
lds
mov
stos
jbe
push
bound
jp
shlb
adcb
test
mov
mov
add
add
xor
nop
mov
xor
nop
add
shrb
pusha
add
fdivl
jle
dec
aam
sub
movsl
inc
push
repnz
add
and
sbb
mov
js,pt
cltd
stos
outsl
xor
clc
cmpl
ljmp
mov
mov
faddl
aad
loopne
adc
pusha
mov
push
pop
pop
ffree
mov
mov
add
rol
push
lret
das
ficoms
dec
das
mov
jecxz
jmp
sbbl
lock
fiaddl
ret
std
pop
sub
hlt
sub
jmp
xor
sub
shl
shrl
inc
shl
mov
aam
inc
inc
jns
pop
cmp
daa
insb
push
outsl
jo
lods
call
inc
mov
jne
int3
into
push
sub
mov
loop
and
push
in
scas
xor
push
push
je
std
sub
repz
lcall
pop
sub
shrl
push
mov
add
int
jo
movsb
and
bound
mov
sbb
xor
xor
movsl
jp
clc
bound
fcompl
mov
add
jnp
enter
pop
lods
fwait
addb
inc
arpl
mov
fdivl
test
jmp
mov
pop
int3
and
leave
test
pmaddubsw
or
pop
sarl
aam
ss
adc
pop
das
inc
pop
sub
rcl
rcrb
imul
or
rclb
int
jp
mov
fisubs
or
insl
rcrl
sub
pushf
jnp
sti
aam
jge
adc
ret
lea
int
or
push
push
mov
cmp
mov
pop
xor
push
push
ja
out
mov
jbe
movntps
jns
mov
push
cmpsb
jg
jbe
and
mov
xor
mov
sub
or
or
pop
sbb
add
and
push
frstor
push
xchg
loop
aaa
hlt
dec
popl
aam
xchg
cmpxchg
or
daa
lods
dec
in
outsb
xchg
inc
out
inc
inc
inc
mov
xchg
xor
lret
mov
cmp
insl
adc
leave
mov
mov
pusha
imul
rclb
jl
fcompl
pop
add
lods
gs
push
imul
sub
je
out
cltd
sub
push
int
lods
mov
jne
lret
loopne
mov
ret
sbb
jmp
fisttps
rcrb
push
add
cmp
fcmove
jb
mov
sbb
sbb
push
call
add
call
mov
xor
sbb
fwait
popa
movsb
fistl
push
lret
add
or
aam
pop
and
pop
sbb
aam
mov
js
xchg
leave
inc
jb
aaa
iret
lds
or
sub
aaa
popa
js
rolb
push
shrl
scas
mov
das
pop
lods
arpl
fisubs
mov
mov
in
icebp
push
subl
jl
addr16
add
and
jmp
imul
std
leave
inc
adc
push
sbb
rcll
iret
or
add
loope
push
inc
loopne
xlat
xor
xor
jmp
fnstcw
xlat
sahf
imul
shrl
sarl
rcll
cmc
jbe
add
in
addr16
in
cmpsl
and
push
sub
into
mov
jle
les
mov
outsl
or
loopne
popf
fldt
mov
sub
mov
mov
data16
ss
imul
mov
into
movsb
sub
pop
push
mov
ret
fldt
iret
jl
inc
es
outsl
out
jne
les
push
xor
sbb
rorb
xor
das
mov
sti
pop
inc
std
int3
cmpl
dec
das
repz
ret
mov
push
jle
sub
sbb
dec
incl
ret
fidivl
mov
push
xor
push
adc
add
push
leave
test
rorb
xlat
test
inc
lea
push
jns
cmpsl
and
push
mov
push
sub
lea
sbb
jl
daa
xor
addl
clc
xor
sub
inc
jge
sbb
orl
imul
and
adcl
fnstcw
sbbl
and
aam
push
mov
push
jg
hlt
shlb
loope
scas
rclb
adc
fcmovb
sub
and
add
fisttpl
in
scas
add
and
call
and
mov
aaa
scas
xchg
add
xchg
cmp
inc
imul
adc
or
lcall
xchg
sahf
push
mov
mov
popa
dec
pop
fldl
lea
pop
adc
ret
sub
cmp
adc
insl
xchg
mov
push
ja
es
xor
ds
test
in
cmp
dec
enter
mov
ret
pop
mov
xchg
fiadds
ret
pop
int3
xchg
push
pop
in
das
enter
lret
js
sbb
or
lret
cmp
push
xchg
jmp
imul
cmp
lcall
nop
aas
lret
sub
xchg
add
daa
aas
popf
dec
in
sub
lret
xchg
dec
cmpsb
ret
icebp
lds
cwtl
xchg
adc
dec
dec
into
xchg
movsb
xchg
xchg
xchg
push
or
aas
test
pop
aaa
sub
test
xchg
enter
cmp
lret
movsl
cwtl
xchg
xor
stos
mov
inc
jb
cwtl
xchg
mov
mov
or
and
pop
adc
pushw
mov
lahf
dec
fldcw
add
fwait
mov
mov
xor
or
push
loope
cmp
mov
jge
add
pop
in
mov
push
dec
mov
daa
pushf
fidivl
aam
add
js
loop
or
loopne
add
lds
pop
adc
jmp
lods
cmp
xchg
jp
imulb
scas
ss
shlb
push
out
lock
adc
mov
mov
inc
aas
and
divb
sarb
xorb
jae
lods
and
punpckhdq
cld
leave
scas
and
dec
out
dec
adc
je
sbb
mov
cwtl
lods
mov
stos
jns
adc
js
or
punpcklbw
in
mov
pusha
and
fcmovnu
mov
pop
cmp
and
xor
dec
cmpsl
inc
fcom
lock
dec
ljmp
daa
push
mov
adc
lds
inc
cmc
pop
loop
jecxz
add
mov
and
xor
adc
cltd
loope
inc
loope
add
ja
or
in
or
pop
fsub
loope
add
or
mov
push
out
and
inc
iret
aad
mov
jno
sbb
jmp
or
xchg
xchg
sbb
adc
ss
icebp
setnp
pop
mov
rcll
arpl
seta
out
das
xchg
mov
jae
sbb
lahf
scas
pop
rclb
insb
negl
pop
ret
mov
push
out
xor
dec
movsb
bound
add
jmp
int3
xor
insb
ret
maskmovq
negl
inc
mov
mov
push
push
lret
mov
or
into
into
or
sub
pusha
cmc
pop
ret
shr
imul
push
dec
shll
mov
jbe
sbb
dec
add
adc
xorb
jbe
sbb
push
push
mov
inc
jo
aam
jo
inc
inc
int
test
add
jo
jmp
mov
sbb
jmp
pop
sbb
adc
pop
leave
jecxz
cmp
jp
into
push
inc
inc
rclb
mov
imul
lret
xor
je
mov
repnz
adc
mov
js
cwtl
mov
insl
xorb
es
test
mov
jp
mov
stos
data16
lock
or
or
cld
shrb
mov
push
dec
jo
loope
and
into
cli
adc
test
scas
fiadds
jns,pn
push
rol
mov
add
pop
leave
adc
adc
stos
scas
sahf
aad
dec
xor
adc
add
and
push
stos
sbb
loopne
dec
add
jmp
cmp
mov
and
jmp
dec
gs
and
mov
push
sbb
sub
nop
sbb
inc
and
jo
popf
jno
mov
and
sbb
dec
lea
xor
or
sahf
stc
mov
push
sub
or
popa
cmp
xor
sti
inc
sahf
push
dec
sub
addr16
xchg
dec
adc
jno
or
ret
xor
aad
mov
mov
orb
in
adc
test
pop
lods
inc
insl
in
cwtl
push
cltd
add
jl
addl
mov
test
imul
xlat
add
data16
fs
mov
sbb
inc
sbb
loope
fcmovnb
push
dec
push
mov
add
xor
and
or
rolb
adc
inc
es
mov
and
imul
and
fsubrl
or
or
leave
loope
aas
add
js
scas
cmp
mov
pop
push
daa
dec
or
push
lods
xor
loop
loop
cmpsb
push
pop
or
jge
sbb
shlb
jae
cmp
add
adc
mov
xchg
pop
jo
xlat
bound
call
mov
gs
pop
es
mov
push
adc
sti
mov
fnstsw
mov
addr16
dec
dec
aaa
dec
push
adc
mov
jl
sub
mov
mov
and
jnp
xor
sbb
cmpsl
popa
lret
cmpsl
add
jecxz
dec
add
iret
pop
lcall
mov
int3
test
mov
ds
sbb
into
test
cs
loope
loopne
push
xchg
shrb
pusha
loopne
lret
lods
ljmp
shll
cmp
rclb
iret
adc
push
sbb
stos
xlat
jle
mov
stos
push
in
pop
cwtl
sub
int3
mov
mov
add
inc
xchg
and
cmp
add
xchg
xchg
lds
mov
data16
icebp
pop
push
pushf
fisubl
and
add
icebp
stos
je
pop
hlt
cwtl
mov
sbb
mov
push
pushf
mov
nop
jmp
sbb
out
push
movsl
dec
dec
jmp
sbb
or
push
dec
rcrl
mov
adc
push
rolb
xchg
and
inc
adc
cmp
jnp
mov
jo
in
or
adc
xor
jnp
pop
mov
add
jo
aas
std
scas
fucomip
rcl
iret
dec
mov
in
xor
pusha
sub
mov
push
aad
push
aas
scas
lcall
mov
jbe
pop
sbb
cs
push
js
int
pop
push
imul
or
stos
fucomi
add
ret
imul
and
ret
adc
stos
or
and
into
push
aas
adc
and
insb
ret
xchg
mov
add
mov
andb
push
jmp
pusha
jae
xchg
movsb
sbb
lock
pop
hlt
bound
pop
lahf
xlat
ffreep
mov
xor
add
mov
mov
and
fsubl
lcall
and
in
inc
jb
push
out
nop
adc
ds
sbb
xchg
aas
inc
aas
sbb
cltd
iret
lar
dec
dec
or
and
loopne
add
xor
pop
and
enter
or
add
inc
adc
rorl
mov
mov
sub
mov
mov
add
jmp
and
movsb
sti
cmp
add
sub
adc
sbb
hlt
sub
inc
arpl
fisubrl
mov
xchg
loop
add
jo
aam
jb
inc
jo
stos
ja
add
inc
mov
std
out
xchg
adc
out
add
into
fadds
iret
jp
aaa
stc
dec
ret
fldcw
mov
xlat
out
mov
mov
mov
inc
xlat
sub
fcomps
insb
jl
jnp
and
orb
mov
mov
pop
mov
test
jle
pushf
fwait
adc
xchg
rcrb
xlat
pop
lods
call
mov
jecxz
in
and
in
fstl
sbb
sub
sbb
test
adc
lea
stc
add
in
push
cmp
xchg
sbb
inc
xor
mov
and
in
shlb
sbb
insb
js
test
pop
fcomps
adc
sub
idiv
or
lret
xor
popa
push
enter
test
shl
jo
lods
ljmp
inc
test
mov
out
adc
addr16
add
andl
mov
sub
aam
mov
cmp
fs
cmp
dec
jno
addb
mov
mov
aas
xor
mov
repz
fbstp
jle
ret
int3
fidivs
lock
scas
dec
shlb
das
fisubs
shlb
push
cs
push
inc
jmp
cltd
xchg
sbb
mov
pop
and
jne
int3
bound
popa
sub
jg
or
andl
ss
mov
loop
or
push
les
jp
in
aam
and
scas
ja
dec
xchg
jb
push
or
or
movsb
lcall
subl
cmp
enter
outsl
sbb
mov
add
jmp
adc
pop
inc
and
fistl
nop
mov
or
pop
test
mov
int
mov
in
dec
lret
lock
movsb
or
push
adc
push
adc
jmp
adc
sbbb
and
hlt
test
rcr
xchg
adcl
inc
js
sbb
or
push
xor
rcrb
lods
sub
or
cmc
cmp
push
mov
and
pop
cmpsl
lods
inc
sbb
ljmp
imul
enter
test
jl
cmp
jecxz
data16
adc
je
and
cmp
roll
xor
push
sbb
cwtl
add
mov
or
or
das
js
ss
lret
pop
lcall
in
ret
mov
das
push
xor
jne
pop
imul
roll
punpcklbw
xchg
rorl
and
dec
clc
lock
jp
sqrtps
add
lcall
sub
mov
xchg
sarb
pop
sahf
push
cmp
cwtl
lds
sub
js
adc
into
adc
pop
lock
dec
add
lea
xorb
cmp
inc
pop
jl
push
rorb
aad
xchg
add
and
shlb
les
add
and
daa
add
add
or
and
adc
test
add
mov
test
mov
cld
pavgb
cmp
sbbb
add
mov
test
cld
cmp
movsb
mov
cwtl
cld
mov
lods
lcall
add
and
in
iret
lret
ds
pop
les
add
shlb
adc
and
xor
pop
test
sbb
add
mov
stos
sbb
movsb
insl
iret
push
movsb
push
inc
movsl
add
and
jo
ljmp
add
aam
and
mov
test
je
out
ja
xor
xchg
pop
xchg
add
add
dec
adc
pushl
movsl
xchg
mov
dec
add
and
pop
add
fisubs
mov
ret
or
out
mov
addr16
jnp
pop
mov
or
mov
sub
insl
add
mov
ret
subl
clc
adc
outsl
dec
xor
sahf
sbb
int3
loop
mov
je
push
test
pop
xlat
sbb
dec
rcrl
push
cld
fmul
push
and
sbb
aad
test
or
inc
push
fwait
push
pop
xorb
and
push
stos
dec
into
xchg
mov
adc
inc
xor
cmp
and
mov
add
insl
adc
test
ds
psraw
test
inc
mov
jbe
xchg
in
cmp
arpl
mov
xchg
lcall
dec
shlb
enter
pop
stos
popf
push
mov
inc
flds
mov
xchg
cmp
push
mov
loopne
jge
decb
mov
lcall
pop
mov
push
rcll
pusha
sub
cs
test
xchg
or
rcll
add
sbb
jg
push
loope
loope
add
sbb
out
push
aad
dec
pushf
fisubl
sahf
dec
insb
rcrb
lock
push
inc
fs
movsl
sbb
mov
mov
cmpsl
rcrb
stos
sbb
loopne
test
mov
jp
sub
mov
xlat
into
pop
sub
iret
ss
popl
dec
inc
popf
mov
jno
dec
dec
sbb
dec
or
sub
inc
xchg
int3
insb
mov
xor
or
scas
aad
fwait
pop
push
dec
pop
sbb
test
push
xor
pop
xor
das
sbb
push
cltd
dec
inc
in
dec
test
cmp
sub
pusha
jl
cld
xor
rorl
sbb
stos
ljmp
in
push
sub
mov
in
cmp
jno
stos
fimull
cmp
pop
sbb
shrb
subb
push
and
mov
mov
dec
mov
mov
popl
outsb
dec
mov
stos
mov
mov
push
sub
repnz
inc
sbbb
fidivrl
adcb
mov
hlt
push
jge
sbb
loopne
pop
xor
ja
ret
adc
cwtl
movsb
sub
clc
andb
and
add
or
xor
and
int
sub
and
xlat
adc
push
xchg
add
mov
insb
mov
sub
fwait
adc
or
dec
es
andb
aas
pusha
or
nop
mov
sbb
movsb
daa
stos
sahf
and
jmp
es
rcl
jne
xor
xchg
cmp
xchg
add
push
cmp
pop
mov
fsubl
int3
lret
xchg
add
add
ja
mov
add
lret
sbb
mov
int
inc
mov
cmpsl
and
and
test
adc
or
push
adc
out
dec
jle
push
add
inc
mov
pop
or
push
loope
lret
adc
std
test
sub
xchg
sbb
arpl
pop
adc
pushf
notb
daa
pushf
pop
aas
arpl
sub
add
adc
es
add
sbb
lock
rol
dec
jle
pop
add
inc
or
sub
inc
jg
outsl
mov
sbb
lds
inc
fnstcw
insb
xchg
cmp
jnp
jl
test
push
sbb
and
dec
lods
sub
mov
lods
inc
ss
and
pop
lds
push
ds
fsubs
push
xor
adc
and
test
mov
leave
cmp
sbb
xchg
mov
push
arpl
imul
ret
testl
aaa
mov
and
pop
mov
pop
aaa
sahf
es
jmp
outsl
pushf
std
dec
xor
xchg
push
mov
jo
push
or
aad
insb
jecxz
insb
push
and
add
dec
mov
mov
xchg
add
mov
icebp
mov
sbb
int3
pop
xchg
cld
xchg
enter
jecxz
movups
push
test
int
jge
test
jae
cmp
cmp
push
ljmp
test
dec
xlat
adc
test
or
or
xchg
popf
cmpsb
jg
and
ret
aad
bound
inc
aad
or
fsubr
lds
and
fildl
sbb
mov
mov
cmpsl
shrl
push
rcrb
xchg
in
mov
mov
movsb
pop
addr16
addr16
lods
test
dec
push
scas
daa
notl
sbb
orb
test
push
add
xor
ja
jge
lcall
and
jae
jle
inc
push
shlb
and
fldcw
sub
xchg
inc
push
adc
adcb
shlb
mov
pop
iret
andb
rcrl
fisttpl
sub
lods
ljmp
pop
xor
pushf
xchg
push
pop
cld
mov
and
lret
or
push
mov
and
rorb
insl
cmp
fisubl
lds
jmp
dec
pop
mov
jnp
adc
mov
iret
insl
sbb
push
or
inc
xchg
pop
pushf
or
aad
roll
daa
push
lds
cmp
addb
push
and
fbld
cwtl
add
jp
cmpsb
sbb
ret
mov
inc
xchg
inc
jo
adc
push
or
jnp
cmc
dec
ss
pop
pop
ret
or
add
dec
idivb
inc
adc
dec
push
les
jp
les
icebp
fcmovbe
mov
pop
inc
jp
addl
mov
mov
aaa
shll
mov
push
test
je
outsb
out
cmp
cwtl
xor
and
inc
push
subb
xor
das
adc
and
ret
xchg
push
adc
addr16
push
loope
lcall
mov
inc
dec
xor
adc
jo
mov
add
xchg
mov
add
bound
fmul
adc
insb
xchg
dec
mov
mov
jl
cmp
mov
cmpsl
loope
mov
cwtl
jns
scas
sub
push
or
sbb
pop
sub
mov
pushl
lret
push
and
mov
xchg
push
push
jo
mov
add
jbe
add
adc
pop
xor
inc
iret
mov
push
sub
lret
xchg
shrl
mov
leave
and
xor
enter
fs
or
es
dec
mov
or
pop
in
movsb
push
test
popf
inc
pop
inc
jnp
mov
mov
pop
out
sub
arpl
pop
and
dec
fildl
shll
dec
sbb
mov
mov
push
dec
jle
push
xchg
lahf
movntq
xor
mov
add
pop
or
push
jno
lret
push
mov
iret
jl
shlb
push
xchg
ja
outsl
push
daa
add
pop
shrb
or
add
push
xchg
jo
pushf
cmc
inc
fsubl
cmpsl
pop
imul
adc
enter
shl
mov
fwait
xchg
loopne
mov
aam
dec
test
sub
and
test
push
in
fwait
add
cltd
mov
loope
sbb
jne
and
test
fnstsw
cmp
lock
add
inc
fnsave
sbb
pop
lock
push
sub
movsb
test
mov
popf
add
insl
dec
popl
xchg
lods
sbb
loopne
xor
xor
pusha
push
xor
or
sbb
dec
cmp
mov
cmp
shrb
lret
fwait
aam
pop
mov
dec
pop
mov
sub
ret
push
sbb
out
add
int
iret
and
dec
mov
mov
xchg
and
cmp
add
or
mov
iret
sti
adcb
out
ja
outsb
es
test
dec
sahf
lods
ljmp
xchg
adc
or
outsb
fcoms
push
es
push
scas
xchg
adc
out
push
stos
in
sub
or
jne
scas
adc
popf
mov
or
xabort
addr16
icebp
sahf
dec
sub
ror
and
arpl
enter
push
pop
pop
or
push
sub
cmpsb
js
inc
xchg
insb
pop
dec
arpl
lea
repnz
stos
rcrb
xchg
or
jo
das
push
sbb
enter
clc
and
xchg
sub
pop
adc
ljmp
ljmp
mov
insl
popf
cmp
ja
and
rcr
cmp
idivb
les
pop
mov
add
jnp
imull
push
inc
xchg
mov
mov
xchg
jle
or
loopne
push
cld
push
mov
pusha
popa
cmp
cmpsb
rorl
mov
jne
cmpb
jno
es
pop
lret
mov
popf
lods
mov
les
jae
jo
xchg
popa
add
cmpsl
mov
jecxz
leave
loop
inc
or
mov
pop
push
out
adc
xor
testb
xor
cld
test
inc
jae
aad
add
add
or
popf
inc
ja
in
pop
jge
aam
mov
daa
movsl
dec
subb
scas
repz
sub
scas
jno
mov
sub
pop
jo
ljmp
push
xchg
lcall
sub
add
and
stos
sbb
out
aam
sub
xor
sub
mov
xchg
add
mov
mov
sbb
or
push
mov
sub
add
sbb
insl
call
mov
sbb
sub
xchg
cmp
icebp
xor
div
pop
daa
bound
ret
stos
sbb
push
inc
mov
pop
add
ljmp
inc
pusha
mov
add
js
or
daa
mov
lock
xchg
mov
addr16
pusha
ja
xor
and
mov
xchg
or
pop
int3
movsb
fisubl
xor
popa
pusha
icebp
push
inc
and
hlt
xor
inc
lods
push
jg
add
lcall
les
mov
das
loope
lcall
mov
sbb
and
pop
fwait
movsb
pop
sbb
add
das
inc
jp
add
addl
clc
icebp
adc
mov
je
dec
mov
xchg
mov
mov
je
scas
push
lcall
in
lcall
call
jns
pop
jp
lock
popf
mov
icebp
mov
xlat
xlat
leave
dec
mov
xor
scas
sub
movsb
xor
push
sub
es
add
call
adc
xchg
sbb
leave
xchg
push
les
sub
xor
pop
adc
mov
sbb
push
mov
lea
pop
dec
or
inc
jl
ja
addr16
inc
add
shrb
movsl
sub
and
adc
add
push
sbb
mov
stos
clc
cmp
mov
fcmovne
fadd
push
push
test
test
mov
inc
shll
nop
mov
stos
dec
or
cmp
hlt
jb
js
adc
iret
lods
js
mov
mov
and
popf
jno
push
and
scas
and
adc
inc
in
lret
mov
pushf
sub
sbb
lods
jo
dec
sbbb
scas
mov
jne
mov
xchg
jl
or
std
mov
cmc
data16
sub
movsb
or
dec
clc
or
pop
cmp
ss
ss
add
stos
mov
adc
lock
mov
adcb
xor
add
inc
lods
pusha
push
das
push
sub
push
pop
ljmp
add
dec
sub
ret
add
and
inc
in
pop
add
pop
pop
xor
js
aad
pop
sbb
stos
filds
push
sbb
fwait
incb
add
jo
mov
cmpsb
es
iret
push
push
add
add
push
inc
dec
inc
pop
push
lret
mov
roll
jmp
fimull
fmull
daa
adc
jo
movsb
sub
sbb
bound
adc
sbb
outsl
xor
mov
xchg
add
push
cmp
roll
cmp
daa
pop
les
dec
dec
adc
je
and
mov
jns
mov
mov
das
add
std
mov
mov
jnp
mov
adc
scas
orl
inc
addb
cmp
sbb
adcb
loopne
iret
mov
test
jnp
fcomip
lods
js
pop
out
jle
add
arpl
aam
sub
aam
dec
out
push
xor
pusha
inc
out
jle,pt
or
loop
fwait
movsb
popf
fbstp
push
shll
sahf
adc
push
orl
nop
push
scas
add
or
cwtl
jmp
mov
xor
out
test
bnd
pop
push
jmp
pop
mov
pop
inc
shl
add
pop
lock
jmp
xor
or
cmp
xchg
mov
adc
pop
rclb
add
insl
lods
call
or
jl
int3
cmp
push
add
push
or
push
sub
push
xchg
mov
loope
or
fwait
js
mov
dec
xchg
add
push
out
int3
or
push
push
or
cmp
mov
dec
push
movsb
add
sub
inc
inc
adc
aaa
mov
inc
arpl
hlt
or
mov
cmpsl
xchg
dec
int3
mov
sub
jl
dec
push
lahf
and
lahf
stc
mov
mov
push
jo
pop
loopne
movl
inc
aam
push
loopne
addl
fldcw
or
es
and
add
rorb
inc
test
xlat
or
or
xchg
sub
and
add
int
push
add
mov
add
sub
pop
repnz
cmp
cli
mov
add
cmc
push
xchg
add
adc
mov
jecxz
add
fildll
cmp
xchg
dec
mov
xchg
xchg
jne
add
popa
sub
jbe
inc
addb
pushf
subl
xor
push
lds
inc
mov
loopne
fisubl
adc
and
add
pusha
mov
jne
sub
ret
in
jg
imul
add
sahf
xchg
add
mov
lea
fwait
cmpxchg
and
enter
popa
add
jecxz
lret
bnd
push
adcl
add
cmpl
cld
les
les
and
lahf
outsl
push
push
js
jmp
sub
and
xor
add
xchg
insl
and
imull
cwtl
sbb
sahf
xlat
mov
cmp
and
and
hlt
mov
xchg
or
mov
insl
dec
sbb
mov
xchg
add
daa
mov
and
sbb
sbb
mov
xchg
dec
movsbl
int3
in
and
adc
mov
mov
push
shll
mov
push
inc
hlt
or
push
xor
dec
ja
pop
cmp
iret
pop
mov
jge
es
cmp
xlat
test
push
jp
pop
js
sbb
dec
push
sbb
ss
or
hlt
scas
dec
in
mov
dec
adc
mov
leave
sbb
or
dec
inc
nop
and
mov
ret
jns
lea
jmp
cmpsb
adc
sbb
add
mov
sbb
cmp
mov
mov
adc
dec
test
sub
shr
fmul
fdivrs
xor
ljmp
add
push
jno
add
jg
push
scas
test
lret
jb
movsb
pop
adc
mov
fwait
push
std
fcmovbe
popf
inc
xchg
push
stc
aaa
add
add
add
aaa
sub
jo
shlb
fimuls
andb
dec
cmpsl
xchg
shlb
jns
xchg
sub
adc
push
scas
or
jb
popa
mov
mov
and
push
add
adcb
cwtl
push
sub
mov
inc
lds
xor
popf
sbbb
sbbb
push
daa
mov
dec
sahf
push
icebp
pop
test
sub
jg
mov
or
and
rol
cmpsl
sbb
or
je
lret
push
mov
dec
inc
inc
fldenv
xchg
in
int
mov
rorl
dec
jno
lret
inc
mov
dec
jnp
add
mov
or
lds
je
stos
in
ljmp
sub
aas
sub
add
mov
xor
adc
mov
popa
inc
mov
cmpsb
pop
sub
cmp
adc
sbb
xchg
dec
sub
je
xor
outsl
jne
out
outsl
sub
and
sbb
sbb
add
push
inc
adc
outsb
xchg
inc
xchg
sub
imul
push
scas
cs
inc
loopne
ljmp
jg
jbe
lock
iret
dec
xchg
dec
sub
or
addr16
xchg
nop
mov
cli
mov
inc
pop
add
out
jne
imul
movsb
cmpb
sbb
inc
fnstcw
aam
cld
ret
mov
sti
pop
cmp
sbb
fdivrs
sbb
jae
subl
lea
and
mov
aas
ret
stos
pusha
popf
xor
mov
mov
daa
pop
call
mov
rorl
cli
lret
sti
test
ljmp
rorl
dec
imul
sbb
mov
cmpsl
xorb
stos
add
pop
inc
jl
pop
rcll
xor
ja
add
cmp
test
fwait
inc
xor
lods
lcall
cmc
roll
popf
push
cmp
xlat
xchg
rorb
stc
js
test
sbb
jp
jbe
add
jno,pt
dec
sub
jp
jge
jg
shrb
in
jp
adc
jnp
inc
cmp
imul
imul
jmp
mov
or
data16
fnsave
sbb
inc
pushf
imul
jne
int
jo
xor
bound
icebp
pop
pop
fcomip
dec
inc
dec
and
pop
inc
pop
shlb
mov
or
sbb
mov
sub
adc
mov
iret
testb
cltd
cmp
shrl
loop
into
test
mov
push
inc
sub
ret
int
sarb
pop
sbb
dec
push
push
fdivrl
pop
add
fildl
addl
dec
adc
and
and
xor
add
jle
test
adc
mov
int3
adc
or
inc
jnp
push
or
lcall
push
jb
mov
push
xor
imul
sbb
jo
and
pop
lds
test
and
or
and
cmpsb
mov
into
dec
scas
or
xchg
fldt
aaa
ss
enter
int3
pop
sub
xchg
negb
mov
push
int
fsubrs
mov
jl
iret
enter
aas
or
test
lahf
fidivrs
les
jns
xor
loopne
test
sub
mov
sub
test
push
pop
arpl
repz
jge
mov
jle
push
aaa
pop
mov
mov
test
adc
pop
jno
pop
mov
js
cmp
aas
lds
mov
sub
inc
or
out
cmp
cmp
aaa
mov
cmpsl
out
das
out
clc
stos
or
pushf
inc
xchg
lcall
shrb
in
rclb
push
dec
arpl
cs
or
push
push
and
lds
push
push
fadd
and
mov
add
push
push
cmp
and
inc
push
jno
repz
and
and
and
sarl
mov
push
push
adc
pop
pushf
add
adc
push
inc
pop
mov
xchg
xchg
testb
repz
inc
xor
and
push
push
aad
jno
add
mov
adc
add
rcll
or
sbb
popf
scas
cmp
push
ds
pop
jno
sub
adcb
jecxz
push
movsl
push
lods
xchg
xchg
pop
shrb
es
loope
sbb
xchg
gs
pop
cmp
sub
testb
in
jne
subb
pop
aaa
and
stos
cmp
shlb
scas
push
sub
lds
mov
xor
sti
jb
iret
adc
aaa
xorl
rolb
add
mov
dec
push
mov
cwtl
xor
call
push
dec
gs
adc
xchg
lods
test
and
cltd
mov
add
test
add
and
jle
dec
roll
pop
aas
movsl
add
adc
bound
jle
ficoms
sbb
out
push
or
int3
add
pop
sbb
jmp
mov
cwtl
push
adcb
sbb
pop
mov
jl
pop
and
fistpl
cs
pop
cmp
jae
je
pop
pop
sub
lds
das
inc
sub
pop
sub
aam
cmpsl
rcr
pop
mov
or
daa
movl
cmp
sub
popa
add
add
sbb
dec
pop
gs
daa
mov
adc
pop
adc
loopne
lods
cmpsl
pop
dec
out
or
push
push
fstpt
in
pop
cmp
dec
cmovle
pop
rcll
flds
mov
test
or
ljmp
das
sub
jge
inc
xor
adc
add
cmp
and
or
cmpb
mov
iret
stc
xor
pop
data16
add
test
cmp
call
jne
and
fsubrs
jle
sub
inc
cmpsl
mov
gs
stos
sub
repz
adc
xchg
push
cmc
hlt
out
inc
cs
int3
jp
js
and
aaa
push
push
cmp
insb
incl
adc
add
andb
rorl
in
xchg
bound
fcomps
jnp
mov
xor
add
inc
call
jbe
push
mov
add
inc
push
pusha
inc
stos
add
and
jmp
imul
test
into
push
sub
add
or
xchg
mov
iret
jbe
xchg
push
in
inc
stc
aaa
mov
adcl
shl
je
sub
popa
jecxz
add
sbb
sub
xchg
js
adc
loop
test
subl
mov
fimuls
iret
js
pop
adc
cmp
lcall
js
lds
pop
cmp
loop
data16
aam
shll
cld
mov
push
mov
imul
or
lea
test
lret
fwait
push
add
mov
mov
pop
push
fwait
pop
cmp
mov
xchg
mov
or
pop
sbb
shrl
in
orl
decl
es
fsub
dec
ret
and
pusha
lock
and
lret
add
dec
pop
mov
pop
xor
loop
adc
mov
dec
jle
push
mov
shll
mov
xor
mov
push
movsb
ret
or
add
sbb
xor
inc
add
jnp
mov
out
fldl
ds
mov
test
jge
bound
jge
call
iret
jae
sub
push
or
cmpl
jp
sub
out
lods
mov
arpl
xor
lods
and
cmc
ja
nop
adc
push
cmpb
sub
js
or
adc
mov
adc
xlat
jne
cli
xchg
add
sbb
jp
push
ss
mov
aam
mov
bound
frstor
popa
ljmp
mov
push
add
mov
mov
jecxz
adc
bound
sub
js
xorl
add
loope
add
cmp
sbb
fwait
and
loopne
sbb
add
add
jmp
loopne
and
jne
jae
das
sub
je
loopne
jb
hlt
aas
mov
mov
xor
mov
and
je
inc
jne
sbbl
or
mov
movsb
test
xor
mov
rcrl
sub
cmpsl
pop
xchg
or
adcl
mov
adc
mov
inc
ss
bound
and
and
dec
push
xor
arpl
push
pop
bound
pop
aaa
adc
les
das
inc
insl
ret
mov
jo
push
addr16
mov
in
adc
mov
mov
mov
loop
lcall
outsb
out
add
mov
fwait
cmpsl
cmpsb
add
adc
push
ficomps
dec
idivl
addb
push
test
push
lock
add
jo
orl
inc
sub
lea
mov
pop
jne
push
aam
lahf
daa
fdivs
mov
stos
sbb
ss
adc
sub
dec
cmp
and
sub
inc
xor
inc
cmp
add
shl
lcall
xchg
push
inc
in
js
mov
testl
mov
js
lods
out
lds
mov
nop
jnp
dec
hlt
out
pusha
jne
popf
and
test
inc
adc
inc
addr16
lea
adc
or
and
jp
and
adcl
pushf
loop
and
in
mov
lods
cld
imul
sti
in
or
cs
fdivr
xor
pusha
insb
inc
dec
das
mov
adc
lds
mov
xlat
sub
in
sub
fnstsw
and
lea
into
fnsave
stos
test
mov
ljmp
pop
out
add
or
add
mov
or
loop
pop
sbb
sbb
scas
pop
or
mov
add
scas
dec
pop
lar
test
cwtl
scas
js
push
pop
icebp
in
lret
ja
iret
cmp
and
shll
jo
xor
mov
cwtl
xor
cld
pop
xor
sub
jnp
sbb
jp,pt
dec
jbe
jae
mov
repnz
das
jb
jbe
jg
das
inc
shrl
mov
jp
jae
fcom
in
inc
sub
push
stos
add
es
andb
shl
mov
or
add
fldl
or
jno
subb
es
jns
fsubrl
je
out
imul
and
jbe
or
mov
jle
lds
hlt
sbb
xchg
dec
les
mov
stc
sbb
insl
scas
sub
and
xchg
push
shlb
jb
inc
rcll
test
dec
and
cmp
push
mov
sub
fadds
mov
bound
js
or
xchg
or
mov
fwait
ss
fimull
out
rcrl
pop
jnp
test
pop
popa
adc
inc
mov
ljmp
lds
das
daa
cwtl
jo
cmp
lret
push
or
and
pop
scas
push
popf
mov
loop
ret
adc
mov
xor
fcmovnbe
add
sub
add
das
or
int3
push
sbb
aaa
pop
dec
loopne
roll
xchg
fisubrs
xor
jo
jo,pn
cmp
push
bnd
fistps
sti
push
lds
bound
jns
ja
lds
movl
mov
xchg
imul
cmp
loope
aas
dec
sub
ja
sbb
pop
ret
insl
or
adc
add
test
and
sbb
push
hlt
stos
jo
popa
mov
insl
in
fisubrl
call
mov
daa
pop
fcmovb
cmpsb
arpl
sbb
out
shll
jb
cmp
pop
mov
jbe
push
jne
pop
jns
add
pushl
pop
cmp
sbb
xchg
bound
dec
mov
lods
adc
mov
sbb
mov
pop
add
ds
fcoms
bswap
push
test
ret
mov
call
mov
ret
xor
push
test
mov
lahf
adc
mov
or
jg
add
ja
iret
scas
and
das
mov
loope
mov
add
cmpsl
inc
add
push
lcall
add
lret
inc
inc
add
push
mov
in
sub
mov
push
adc
scas
js
sbb
or
repnz
push
dec
adc
mov
add
fwait
out
in
lods
ss
notl
fistpl
in
int3
sarl
push
push
popw
mov
or
sbb
xchg
cmpsl
fdivs
inc
cmc
scas
data16
aam
xchg
sub
out
and
and
sub
push
outsl
push
jb
sbb
fcomps
call
jbe
fildll
mov
mov
insb
adc
cmpsl
push
sub
mov
ret
and
dec
cmp
inc
lods
in
add
nop
add
scas
add
add
fsubp
or
or
xlat
ja
nop
imul
insl
and
testl
fs
mov
cmc
gs
push
sbb
leave
popa
movsl
add
sub
divb
imulb
xor
jmp
jne
jmp
add
roll
scas
and
call
cmp
pop
das
cmp
call
dec
sub
insl
sbb
pushf
orb
outsl
push
mov
fisttpl
fmull
sbb
scas
pop
std
pop
movsl
cmp
and
sub
push
mov
push
sbb
neg
add
push
aam
in
pop
dec
sbb
pop
adc
inc
in
cmpsb
scas
das
movsb
pop
int3
test
pushf
mov
arpl
or
inc
add
and
cmp
xchg
popl
xor
xorb
pop
or
sbb
imul
and
and
or
int
fistpl
pop
outsl
push
add
pop
or
dec
or
xor
negl
xor
sbb
ja
insb
cmp
ja
or
imul
iret
popa
movsb
iret
movsb
mov
jmp
outsb
inc
scas
add
mov
scas
mov
idiv
add
xorl
rcrb
dec
les
cmp
hlt
inc
cmp
add
testl
add
les
push
and
pop
dec
int
test
mov
dec
fdivl
push
jno
pop
add
jmp
jle
insl
push
inc
mov
icebp
push
inc
rol
adc
lahf
sbb
lods
inc
pop
add
popl
or
rclb
addb
js
fldl
adc
sub
leave
fisttpll
insw
cwtl
lea
push
adc
iret
flds
cld
mov
mov
in
inc
xor
hlt
add
fimuls
adc
xchg
adc
lret
or
mov
jns
pop
popa
add
add
xor
push
add
in
aad
cmp
sub
int
pop
adc
scas
jg
or
mov
loopne
sbb
push
mov
inc
ljmp
prefetch
push
cltd
inc
scas
push
or
out
pusha
lcall
scas
inc
or
stc
arpl
insl
nopl
and
push
in
push
jno
pop
int
insb
adc
je
movsb
inc
or
mov
mov
mulb
sbb
call
adc
push
and
or
and
add
xchg
mov
xchg
out
outsl
adc
andl
cmp
mov
xor
adc
xor
and
out
stos
inc
outsb
sbb
fnstsw
scas
pop
xor
mov
cwtl
cmc
add
or
loop
test
ja
sub
jecxz
loopne
movsb
pop
cmp
jge
add
jbe
inc
xlat
dec
lret
jmp
xchg
jbe
sbb
jo
inc
push
insl
sub
popf
insb
pop
out
sahf
imul
add
xor
into
hlt
and
push
loope
pop
les
pop
pop
sub
into
push
push
loopne
push
add
addr16
shll
insl
das
out
cwtl
aaa
rsqrtps
inc
or
idivb
loopne
sbb
pop
insb
mov
loop
lret
lcall
cmp
add
loopne
add
jno
fstl
shr
mov
or
mov
fcoml
popf
sub
sub
jmp
jl
aaa
and
push
mov
in
out
cs
push
pop
jl
lds
mov
mov
cwtl
and
fists
jecxz
push
pop
clc
jle
je
inc
sbb
push
test
pushf
and
daa
into
and
in
les
add
sbb
data16
addr16
jno
jne
scas
and
lods
push
sbb
add
pop
andl
and
fsubrl
add
xchg
insb
outsl
sbb
jae
ja
fcmovb
in
imul
push
xlat
lret
cmp
and
mov
push
das
inc
and
mov
or
sahf
xchg
sbb
push
jecxz
mov
dec
or
sbb
shr
lds
lock
es
shlb
outsb
sti
ret
loope
sub
fimuls
jno
ss
inc
jnp
ja
and
sbb
insb
repnz
in
sbbb
insl
and
jo
out
sub
pop
inc
pop
adc
and
jns
imul
stos
shlb
and
orb
add
add
sarb
aam
les
fs
add
arpl
scas
nopl
push
stos
loopne
push
sbb
jo
lods
and
dec
in
mov
or
push
rcrb
add
push
sbb
xor
shrl
out
xchg
shrl
stc
fistl
or
add
dec
in
and
or
push
xor
aas
jl
adc
adc
jo
aad
jl
sbb
adc
mov
mov
xchg
mov
mov
jecxz
ret
mov
mov
add
adc
cmp
inc
movl
push
inc
xchg
add
popa
adc
call
jmp
imul
leave
mov
mov
mov
push
mov
aad
inc
or
inc
clc
data16
sub
ja
outsl
imul
dec
cld
sbb
mov
stos
inc
test
fcoml
xchg
stos
in
jecxz
push
aam
or
dec
sub
mov
test
fcmovb
cmc
flds
loopne
addl
and
add
mov
iret
in
lret
mov
sbb
adc
jno
adc
adc
ret
jo
mov
pop
mov
mov
int3
cs
lret
push
cmp
leave
add
outsb
aaa
call
push
std
sbb
jbe
and
pop
bound
and
cld
sbb
and
jns
jne
jb
aad
add
scas
lret
test
pop
shll
dec
cwtl
bound
stos
mov
jae
xchg
es
out
push
sub
in
rol
movsb
and
dec
sub
lods
es
xor
imul
adcb
sbb
and
sbb
fldenv
sub
addr16
mov
movhps
ljmp
add
sub
aam
sbb
adcb
aaa
mov
and
popa
loop
shlb
lahf
mov
adc
pop
popf
dec
fs
cmp
dec
mov
dec
add
and
mov
mov
and
jne
push
inc
push
ds
gs
adc
jmp
sbb
cmp
out
ss
scas
and
add
je
sbb
mov
adc
imul
ljmp
add
cmp
xor
ret
sbb
dec
mov
das
loop
loopne
shlb
ja
sbb
sub
jecxz
push
dec
add
out
and
push
cld
popf
and
inc
jno
pop
push
or
divl
je
jne
lea
ficoms
adc
add
in
outsb
pop
sub
sbb
lcall
data16
pop
out
call
pop
ja
inc
fwait
lods
out
je
pop
jno
add
inc
xchg
enter
adc
pop
inc
movsb
sub
pop
pop
hlt
outsb
adc
rolb
pop
jecxz
aaa
sub
mov
adc
sbbb
and
or
jle
mov
subb
test
loope
rolb
or
xor
mov
and
data16
or
icebp
sbb
popa
dec
add
push
orl
int
dec
fdivs
xorb
jg
ja
lret
insl
ja
dec
xor
mov
jae
xor
jle
pop
or
out
adc
or
adc
cmp
sub
push
jbe
iret
pop
faddl
adc
or
pop
cmp
subl
lret
pop
dec
jno
das
mov
or
xchg
pop
int3
mov
mov
xorb
jns
aam
les
sti
dec
das
mov
jo
ret
cmp
sbb
sub
shrl
aas
iret
mov
pop
adc
popf
add
push
adc
pop
cli
jno
and
clc
or
mov
xchg
sti
insb
push
jb
stos
inc
es
cmp
sbb
jo
dec
mov
or
mov
rorl
mov
add
xor
shll
or
cmc
mov
rorl
add
and
xor
hlt
bound
jecxz
nop
notb
jmp
inc
add
xchg
shl
mull
in
bnd
mov
lds
push
xlat
cmp
lret
ficomps
aas
pop
iret
aaa
xor
jp
mov
rol
mov
pop
pop
mov
nop
add
jno
pop
or
out
add
xchg
scas
aaa
pop
mov
sbb
dec
mov
aam
sub
je
adc
bsr
or
push
in
cmovs
nop
mov
mov
loop
pop
lcall
imul
pop
subl
gs
inc
ret
sti
pop
scas
xor
stc
or
xor
push
lret
and
xchg
icebp
popf
sub
push
int3
mov
inc
nop
ret
xor
or
add
shll
adc
lock
and
sbb
stos
push
xchg
callw
dec
in
sbb
or
or
sub
sbb
clc
xor
cs
mov
push
daa
cmpsl
iret
sub
lock
in
xor
xor
loop
outsl
or
rorl
xor
iret
pop
andb
cltd
test
or
dec
cmp
jecxz
lock
arpl
add
cltd
pusha
je
pop
in
pop
loop
pop
sti
or
sub
and
push
ds
xor
cmp
ljmp
cmc
lock
dec
mov
ss
pop
xchg
xor
loope
inc
add
int
push
lods
aad
adc
fadd
jle
mov
loope
roll
and
push
sbb
daa
ret
jmp
arpl
movl
lcall
ficoml
add
xchg
jno
loopne
push
jmp
xorb
jne
mov
cmp
push
gs
add
mov
scas
in
push
cs
mov
adc
and
pushf
sub
sub
push
or
mov
sbb
or
or
daa
lret
jne
fisubrl
pop
xor
inc
test
repz
test
ret
mov
sub
sbb
mov
sahf
push
mov
or
test
sub
sub
jbe
popa
in
stos
je
mul
das
popf
add
mov
mov
mov
push
mov
jae
adc
fstpt
or
inc
fwait
mov
es
jle
pop
mov
outsb
adc
shlb
xchg
in
xchg
fwait
cmc
push
push
adc
adc
lds
cltd
pop
cmp
xchg
mov
and
iret
pop
adc
dec
outsb
rcrl
sbb
mov
fsubs
popa
int3
movsl
fsubrl
imul
lret
andb
xchg
sti
bound
or
ret
inc
pop
rcll
int
sarb
rolb
mov
or
out
or
movl
and
dec
les
call
stos
js
mov
xor
or
gs
ljmp
cmp
ja
sbb
test
inc
ret
call
test
andl
jecxz
sub
sbb
add
mov
rorb
enter
addb
mov
adc
xchg
icebp
xor
mov
inc
pusha
sbb
dec
xchg
sub
mov
and
jb
mov
lods
loope
outsl
push
adc
and
les
enter
add
inc
adc
pop
outsb
or
xor
sbbl
xchg
ret
push
dec
xchg
scas
cmp
in
xor
ret
dec
sub
adc
stos
add
ljmp
mov
ljmp
sbb
mov
stc
mov
mov
sahf
lret
mov
ja
push
iret
adc
mov
xchg
jno
shl
rdpmc
or
and
in
sbb
or
scas
in
lock
int3
sbb
mov
ficomps
sub
push
arpl
add
jb
or
in
in
or
or
iret
imull
nop
push
hlt
les
insl
scas
imul
adc
je
movsl
and
jae
into
xor
cmp
ret
imul
addl
and
cli
mov
and
mov
mov
addr16
ja
das
mov
push
push
bswap
xor
fnstenv
pusha
sub
insb
or
pusha
push
andl
test
and
js
pushl
push
dec
mov
mov
cwtl
add
sahf
test
stc
shll
imul
sub
push
jb
adc
or
add
sub
xchg
add
mov
cmp
or
lea
adc
dec
cmp
or
dec
lods
mov
mov
pop
aad
bound
lahf
and
stos
jle
int3
arpl
sbb
push
aam
mov
jmp
pop
popa
adc
loopne
xchg
cmc
pop
mov
adc
mov
and
jg
add
out
or
xchg
and
outsl
adc
push
push
out
jl
add
ja
sub
int
pop
mov
sti
add
push
mov
fnsave
dec
sbb
mov
or
ss
fs
lods
pop
mov
dec
test
sbb
sbb
add
andb
shr
orb
xor
outsl
adc
dec
pop
insl
mov
jne
sub
jo
mov
popf
sub
push
adc
adc
mov
mov
orl
pop
mov
mov
xor
inc
cwtl
loopne
add
movsb
adc
js
mov
push
xor
jnp
loop
ret
fwait
pop
and
mov
out
mov
sub
sar
repnz
js
inc
adc
push
mov
movsb
icebp
sbb
fstl
loop
cmpl
jne
dec
lods
push
adc
cmp
mov
xlat
push
xchg
dec
pusha
sub
add
adc
call
iret
adc
addb
sbb
fcoms
ret
popf
mov
movsb
jae
js
sbb
or
nop
sub
addr16
test
nop
jb
out
xchg
mov
push
dec
movl
loopne
into
arpl
andb
adc
sbb
movsl
dec
mov
xchg
sbbb
pop
sbb
jge
mov
xor
mov
sbb
xchg
push
sub
add
pop
pop
adc
inc
rol
in
out
pop
orb
xor
data16
sbb
xor
dec
or
jns
ret
ss
push
nop/reserved
inc
int3
test
adc
lds
sbb
test
iret
cmp
jecxz
in
sbb
sub
ret
out
shlb
sbbl
popa
mov
fwait
pop
out
mov
shrb
adc
inc
mov
dec
push
mov
je
jecxz
push
scas
fdivrl
mov
sbb
inc
sub
pop
rorl
int3
mov
push
lock
inc
fidivrl
cmpsl
inc
orl
push
sbb
inc
cmp
jnp
adc
repnz
pop
add
xchg
cmp
xchg
mov
sti
jne
dec
lock
scas
push
out
sub
lods
aaa
dec
lock
mov
stos
cwtl
add
adc
sbb
cmp
popa
sbb
or
dec
sbb
jnp
rcrl
fwait
loop
pusha
lcall
sub
add
cmp
and
xor
or
mov
push
daa
cwtl
inc
std
mov
sub
inc
or
dec
add
sbb
xchg
sbb
jbe
mov
adc
xchg
cmpsl
mov
mov
cmp
cmp
pop
popa
aaa
es
fnstenv
jp
mov
and
push
push
pop
jl
leave
push
sbb
xlat
pop
loopne
mov
addl
dec
push
inc
mov
lea
add
lcall
mov
adc
sahf
nop
les
inc
cmp
adc
sbb
mov
mov
das
fiadds
lods
dec
xor
jp
dec
adc
xchg
sub
pusha
cmpsb
fstpt
mov
mov
mov
push
bound
out
push
hlt
lea
mov
lods
fcmovu
pop
pop
dec
or
and
mov
enter
mov
sarl
fstpt
loope
inc
rorl
jg
cmp
pop
call
lods
or
xchg
and
mov
pop
cld
sarl
cmpsb
add
sbbb
ds
push
sbb
mov
or
js
cmp
shl
aam
push
roll
sbb
sub
inc
stos
inc
cmp
mov
jmp
xchg
add
or
jle
fs
dec
push
mov
adc
pop
inc
dec
add
jle
sbb
daa
in
sti
pop
rorl
xor
push
mov
data16
jae
mov
and
popl
sbb
fcompl
fldcw
inc
adcb
inc
push
das
inc
test
es
andl
adc
xor
bound
cmp
fisttps
pusha
sbb
xchg
and
rcrb
mov
adc
and
inc
pop
jecxz
add
jmp
stos
push
or
out
and
dec
lds
sbb
mov
ret
test
jp
adc
push
pushf
push
xchg
jle
lods
add
mov
fistps
fsubr
and
inc
or
sbb
mov
das
adc
mov
sub
mov
mov
jb
xor
fwait
mov
push
mov
xor
inc
repz
xor
mov
icebp
push
or
inc
xchg
cmpsl
dec
jbe
fbstp
inc
lret
and
daa
pop
lcall
fwait
xlat
cmpsl
fstpl
sbb
jb
stos
jecxz
dec
add
jl
js
xchg
or
jle
push
lea
pop
cld
dec
jecxz
cmp
jbe
popf
arpl
pop
cmp
clc
xor
jno
add
xchg
stos
sbb
cmp
shll
xchg
mov
adcl
shll
mov
push
jno
lods
mov
jb
out
jecxz
dec
mov
jp
jbe
push
jle
inc
fsubrs
inc
daa
fbld
add
adc
or
pop
pop
in
imul
mov
xchg
and
les
popf
mov
jo
pop
fsts
push
fisttps
fsub
or
ja
ret
adc
pop
push
inc
rorl
cmp
adc
xor
mov
or
push
sub
pop
add
cmp
or
and
or
or
rolb
jnp
mov
mov
mov
and
adcl
sub
mov
adc
add
sbbb
int3
and
jnp
inc
inc
dec
dec
xchg
mov
test
in
shll
push
sub
ds
adc
mov
sub
mov
lods
or
mov
mov
fs
mov
push
jl
pop
xor
xchg
mov
sub
xor
cmpsb
sbb
and
call
adc
adc
push
push
cmp
cmc
add
test
add
fiadds
iret
int3
add
push
lods
ss
into
and
xchg
push
fisubs
push
adc
xor
push
scas
outsb
lds
xchg
loope
sbb
mov
dec
xchg
mov
add
xchg
lcall
push
adc
pushf
bound
push
fstp
xchg
push
test
nop
hlt
mov
xor
xchg
int3
and
xchg
jl
stc
bound
push
xor
je
mov
adc
mov
mov
lahf
lock
pop
and
es
insl
stos
xor
mov
imul
std
adc
mov
arpl
pusha
daa
and
les
cmpsl
inc
ret
addl
cld
inc
adc
cmp
shrb
pusha
add
inc
lds
roll
and
add
and
lock
sbb
add
cmp
jnp
jle
adc
call
pop
xor
loopne
daa
les
sbb
pop
ja
sbb
arpl
and
popf
jb
aas
test
mov
or
xor
es
jmp
add
sub
inc
test
jecxz
popa
and
add
jno
mov
outsl
jo
sbb
test
fcompl
push
insb
add
daa
dec
sub
add
adc
cmpsb
push
lret
mov
mov
fimull
adc
outsb
jecxz
push
xor
push
pop
add
or
xor
movb
pop
popf
repz
and
xlat
dec
ja
sbb
mov
orl
callw
in
iret
push
pushf
in
cmpsl
cmp
pop
dec
sti
adc
mov
icebp
cld
or
mov
adc
mov
sbb
ja
pusha
push
insb
adc
or
and
add
adc
pop
sti
adc
adc
js
loop
pop
lret
xor
mov
push
xor
cmp
or
cmp
aaa
xor
push
inc
loop
cmpsl
lds
inc
mov
push
ss
mov
outsb
add
arpl
sbb
mov
rclb
or
test
adcb
mov
mov
xchg
xchg
xchg
sbb
mov
fstpl
or
daa
or
jmp
iret
mov
lcall
notb
pusha
inc
adc
jg
push
xor
adc
xor
sbbb
mov
arpl
fs
negl
xor
mov
jne
and
or
popl
nop
outsl
cli
xchg
mov
loopne
ljmp
xchg
jns
cwtl
les
dec
mov
push
or
rcrb
adc
lds
pop
push
mov
dec
xor
je
les
sub
xchg
das
or
cwtl
fsubr
push
cmpsb
sbb
enter
add
push
add
mov
or
jo
push
scas
and
insl
and
mov
lea
dec
add
push
xor
mull
incb
pusha
and
das
or
mov
sub
fcomps
scas
test
add
mov
popa
fsubrp
push
xchg
xor
dec
xchg
jne
sub
mov
xor
cli
sub
push
mov
pop
sub
and
loop
test
push
jns
adc
daa
push
jge
inc
fildll
pop
das
cmp
insb
add
fists
or
cmp
push
test
push
lods
das
es
addr16
push
add
out
add
movsb
and
mov
fwait
fwait
loopne
push
or
push
cwtl
call
add
inc
fdivrl
cmpsl
xor
stc
clc
or
inc
stos
pop
das
jo
xor
pop
fmulp
pop
rcll
cmpsb
addb
fwait
pop
out
roll
arpl
data16
inc
and
enter
xchg
movsb
out
cmp
insl
mov
ret
lea
sub
push
xor
stos
push
push
mov
add
icebp
js
loop
xor
dec
outsl
and
adc
aam
orb
sahf
cmp
sub
loope
adc
xor
xor
push
jmp
sbb
cmc
daa
fwait
mov
add
sbb
daa
add
mov
stos
xchg
push
mov
push
shll
sub
pop
fsubs
cli
add
jo
mov
sub
mov
lahf
dec
scas
sbb
dec
daa
xchg
sub
rcll
push
out
and
add
mov
xlat
pop
loopne
fwait
stos
pop
inc
xlat
cli
and
mov
fsts
inc
sub
movsb
int3
out
mov
xchg
and
adc
mov
mov
adc
das
das
and
adc
in
pop
ja
es
cwtl
or
adc
add
xorps
sbb
push
icebp
mov
jecxz
adc
add
xchg
dec
mov
test
xor
movsb
gs
pop
add
adc
pop
push
fcompl
cmpl
push
aad
adc
es
cmc
shlb
enter
adc
cmp
fs
xor
test
aas
push
ret
inc
sbb
in
lret
addr16
dec
jmp
xchg
pop
sbbl
inc
and
test
rolb
and
pop
sbb
mul
movsl
push
push
mov
push
sub
cwtl
inc
mov
cmpsl
bound
add
add
rorl
jle
mov
pop
add
cmpb
nop
sub
pop
subl
out
enter
sub
in
jmp
jmp
cmpl
bound
push
mov
pop
adc
adc
mov
xchg
push
out
xlat
or
das
jno
movsb
xlat
test
movsb
scas
movb
fdiv
enter
or
ja
sub
sbb
pop
pop
sub
cmp
sti
popf
loopne
sbbb
xchg
push
jne
or
fidivl
push
jae
cmpsl
das
dec
push
push
addr16
and
and
push
push
out
or
dec
jo
insb
cld
cmp
movsb
pop
adc
jo
mov
rclb
and
and
aam
add
out
or
or
les
jle
scas
push
xchg
xchg
in
dec
mov
cs
sub
jle
and
xor
clc
mul
and
cmp
popa
sub
add
bound
sbb
inc
out
into
dec
add
lods
aas
imul
pop
lds
xchg
jle
lret
daa
adcb
pop
pop
and
push
sub
test
rcrl
mov
fisttpll
or
sahf
sahf
iret
outsl
push
adc
or
inc
sbb
mov
jo
pop
dec
cwtl
sub
lahf
mov
lret
mov
add
rol
fbstp
xor
pop
sub
lods
insl
je
jbe
sub
insb
xchg
cmp
mov
sbb
adc
inc
adc
and
push
arpl
in
xchg
push
adc
loopne
pop
int
xor
mov
cli
iret
leave
sub
icebp
movsl
movsl
push
addl
in
repnz
enter
jae
xlat
mov
sub
mov
mov
cmp
sbb
push
shrl
lcall
call
jbe
inc
mov
scas
add
out
adcl
shl
or
roll
mov
pop
imul
xor
lods
cwtl
cmp
inc
dec
pop
lods
mov
mov
out
popa
or
adc
sarb
fisubl
movsb
sbb
push
and
xchg
mov
movsl
xchg
aam
dec
daa
std
jbe
out
orw
inc
mov
ds
mov
rolb
test
fists
les
inc
cs
push
ds
sbb
std
jo
test
jg
aaa
push
lret
fcoms
aad
sub
inc
mov
sbb
je
lcall
icebp
pop
mov
inc
sbb
sbb
bound
jg
lock
aaa
xlat
enter
push
aas
dec
sbb
or
sub
test
or
sbb
js
loope
sahf
jo
or
aad
rorl
sub
dec
push
fs
mov
xchg
pop
xor
inc
add
mov
or
addr16
push
add
adc
sbb
add
adc
push
fists
inc
loopne
popa
push
shl
rorb
mov
sub
fldenv
in
push
rolb
sbbl
push
daa
decb
leave
imul
aaa
lds
jl
and
push
add
pop
dec
fildl
mov
push
lahf
inc
test
scas
xadd
xor
andb
dec
and
outsl
roll
call
push
mov
add
jne
adcb
push
in
jb
mov
fwait
sub
out
mov
cld
arpl
orl
pop
into
pop
out
jb
in
pop
jle
mov
inc
negb
out
notb
sub
fbld
mov
dec
xchg
imul
and
idivl
mov
mov
lds
in
sub
add
shlb
mov
inc
or
lods
add
inc
sub
loopne
andl
or
sarb
or
adc
add
add
and
rcrl
sub
pop
add
dec
test
popf
insb
cs
pop
aas
loope
jmp
push
out
out
dec
or
sbb
enter
ret
or
push
dec
fistl
sub
and
xor
mov
adc
xor
in
lret
add
mov
mov
xor
pop
or
das
mov
out
out
push
or
ret
push
push
xor
cmp
or
lods
add
mov
sti
jle
push
pop
test
out
ja
inc
lahf
mov
sub
pop
jp
mov
or
mov
not
rcrb
loope
loop
mov
jl
dec
pop
mov
push
xlat
xchg
or
pop
insl
pop
js
push
popf
popf
loope
loope
inc
add
add
arpl
or
xlat
popa
inc
and
push
fwait
or
xchg
ljmp
dec
add
xor
dec
xchg
adc
cmp
adc
push
xchg
jl
shll
out
lods
inc
stos
xchg
bound
inc
pop
jb
pop
adc
js
jnp
pop
data16
pop
int
xorb
enter
mov
jo
push
xchg
fbld
out
scas
cltd
jp
mov
icebp
adc
push
push
cltd
push
ds
popa
and
movsb
dec
push
push
add
dec
call
inc
mov
pop
in
cmp
fwait
cmp
jno
cmp
inc
or
in
and
jbe
pushf
cld
push
out
sub
les
stos
enter
add
mov
sub
jmp
dec
dec
shlb
lock
xor
push
jae
sbb
adc
je
cmpb
mov
fs
movsb
int
js
pop
push
imul
insb
add
mov
mov
jb
pop
and
mov
or
in
insb
jbe
xlat
jecxz
xor
js
das
xchg
outsb
lods
ret
add
mov
pusha
rolb
adc
mov
xchg
fisubrl
lods
stos
loope
scas
les
or
inc
adc
shll
ret
inc
add
les
pusha
mov
scas
xchg
dec
adc
push
pop
aad
sbb
and
lret
daa
rcrb
push
pop
push
mov
orl
add
add
add
lods
xchg
jno
cmc
js
push
mov
lds
mov
lds
add
fisubl
inc
loopne
xor
mov
fcomps
idivl
dec
push
cli
dec
in
push
or
jb
punpckhdq
sbb
in
and
fwait
test
push
rorb
lock
and
xor
fs
scas
not
mov
mov
aad
mov
or
cmpsl
pop
pop
fdivrs
insb
and
fcompl
pushf
inc
dec
push
fistpl
and
cltd
shl
sti
fisttps
adc
pop
je
cmp
je
popf
filds
nop
mov
mov
and
push
and
add
idivb
loopne
fwait
aad
gs
loope
push
cmp
and
xor
aaa
xor
pop
xor
popl
jo
pushf
test
push
xchg
or
or
mov
cmp
fsub
adcl
push
rorb
sbbb
xor
sub
fs
dec
call
or
dec
push
cmp
cld
shr
push
imulb
leave
dec
cld
cmp
mov
mov
test
pusha
push
jmp
mov
in
pop
or
scas
cmp
shll
push
inc
xlat
and
movups
mov
ss
inc
add
cmp
cmp
cmp
dec
xchg
mov
repnz
add
lods
add
inc
ret
adc
lret
push
mov
or
xchg
hlt
scas
insb
scas
enter
int
repz
pop
mov
bound
xor
sub
cmp
jo
lods
sub
pop
xor
inc
lods
ret
jne
cmp
stos
dec
xor
sbb
pop
shr
ret
pop
cmpsl
aas
or
test
and
or
mov
je
xor
cmp
cmp
mov
iret
fwait
sbb
xor
cmpsl
cwtl
push
xor
or
add
enter
jne
add
xchg
shl
sbb
mov
xor
xor
jge
cld
add
aaa
outsb
lods
mov
cmc
mov
sbb
popa
movsb
orl
xor
ret
jg
rcr
mov
push
cmpsl
add
pop
loope
jmp
lret
mov
dec
in
je
rclb
ljmp
add
xchg
sbb
lret
mov
xor
call
sti
jb
mov
jne
popl
jnp
test
mov
cmpsb
jmp
cmp
dec
mov
icebp
xor
cmp
xor
cmp
les
aaa
cmpsb
rcll
mov
xor
push
xor
sub
mov
mov
cmp
mov
xadd
sub
sahf
daa
adc
dec
xor
push
mov
fistl
out
fwait
addb
pop
adc
dec
aaa
add
and
sub
lcall
adc
and
dec
scas
sub
mov
andl
jae
movsl
add
jecxz
into
fisubs
loop
cld
hlt
and
mov
inc
andb
aad
pop
sarb
lahf
pop
add
add
push
xchg
pop
arpl
dec
mov
inc
insb
in
push
pop
xlat
inc
hlt
rclb
movsl
fldt
xor
mov
insb
cmp
sub
mov
outsb
in
and
je
mov
jo
jecxz
xchg
and
xchg
mov
xchg
xchg
mov
shll
aaa
jno
push
adc
xor
daa
repz
pusha
imul
mov
stc
adc
fildl
pop
mov
sbb
mov
aam
inc
adc
shlb
fwait
mov
ds
xor
int
andb
lret
sbb
mov
add
cwtl
add
sub
mov
xor
pop
test
lcall
scas
jnp
or
rcrl
aaa
stos
xchg
mov
jl
jns
jo
shll
and
inc
lods
xor
mov
js
fnsave
outsb
mov
pop
and
xor
std
lea
rclb
ss
xchg
clc
push
mov
outsl
je
adc
ds
mov
out
sub
dec
out
sbb
jno
or
lods
xor
insl
mov
jae
rdmsr
sub
sbb
scas
aad
test
and
cwtl
rorb
cmp
or
mov
or
sub
mov
ja
pop
fdivr
lcall
arpl
popa
pusha
pop
sub
adc
cmp
cmp
and
shll
sahf
cmp
pushf
cld
shl
ss
mov
add
sbb
aad
aaa
movsb
xchg
lods
fistl
mov
xchg
imul
fistps
cmp
es
dec
adc
imul
adc
and
pop
mov
fdivrl
mov
dec
push
sub
or
es
jecxz
cwtl
or
xchg
add
pop
adc
jno
sub
lock
sbb
inc
ds
cmc
arpl
jo
sbb
pop
movsb
mov
pop
outsl
push
or
ss
dec
inc
call
inc
notl
pop
mov
hlt
cmpsl
fs
push
lcall
pop
push
or
xchg
out
xor
int
add
loopne
cmp
ds
push
das
push
shl
arpl
push
mov
cmp
lea
xchg
mov
add
jno
icebp
and
cwtl
test
test
inc
xor
and
inc
add
lcall
mov
jae
sbb
push
and
rcll
and
xchg
and
iret
fsts
mov
fdivs
and
dec
roll
inc
add
and
sub
pushf
push
cwtl
xchg
inc
das
push
pop
sbb
push
fistpl
jae
pop
fcomps
das
clc
mov
jmp
fists
or
bound
push
xchg
loopne
aas
add
or
iret
xor
lods
aad
sbb
mov
loope
sub
shll
cmp
sti
sub
idivb
inc
movsb
sub
and
pop
out
pop
sub
jno
push
lods
sbb
xchg
cmp
lahf
add
jp
mov
push
cmp
mov
mov
fisttpl
dec
adc
sub
dec
mov
fs
push
imul
notl
stc
lock
repz
rolb
mov
pop
xor
sub
jns
or
out
shrb
mov
mov
or
jbe
inc
inc
lock
mov
insb
ret
jo
pushf
or
aam
add
jp
scas
mov
rolb
out
fwait
inc
sbb
mov
jnp
pop
es
test
sub
inc
mov
adc
push
add
ret
add
push
jbe
daa
jo
popa
loop
loopne
mov
das
imul
push
popf
loop
sub
subb
add
sbb
mov
sbb
add
je
sub
lock
xchg
sub
test
jecxz
sbb
xor
pusha
adc
sbb
xchg
or
iret
fcoms
sbb
lahf
push
movsl
sbb
push
inc
pop
xlat
mov
jmp
sbbb
pop
bound
sub
and
push
add
insl
ss
test
jge
nop
add
add
jmp
mov
cmp
sar
arpl
mov
lods
call
iret
in
and
mov
test
dec
mov
mov
and
lret
jne
inc
bound
mov
jp
scas
jg
cli
jnp
enter
es
mov
jno
test
ja
aad
lods
pop
push
mov
imul
sub
popf
pop
push
jp
and
push
pusha
jle
jnp
in
dec
push
sahf
adc
xor
and
scas
jne
pop
push
add
jo
pop
jbe
push
sub
mov
cmp
dec
test
xor
mov
mov
lock
or
cltd
mov
push
aad
es
push
gs
popa
fdiv
aaa
and
sahf
jge
sbb
call
adc
sub
and
iret
pusha
adc
lock
cmp
jnp
orb
mov
lea
sub
add
outsb
inc
push
aam
xchg
movsb
lock
mov
loopne
dec
sbb
aaa
push
adc
inc
push
stos
sbb
hlt
loop
stc
xchg
loopne
jno
imul
shl
div
jp
push
sub
gs
inc
inc
push
jne
or
inc
inc
movsb
add
jo
fstl
pop
pop
jno
lock
sbb
jmp
mov
sbb
sbb
push
iret
push
test
add
adc
rolb
xchg
cmp
das
sub
flds
decb
push
add
scas
and
call
sub
scas
sti
cmp
add
add
mov
adc
sub
jns
jle
ret
inc
xchg
mov
or
pop
aam
repz
sub
push
arpl
adc
rorl
mov
xchg
pop
adcb
xchg
and
popa
je
js
xor
movd
test
fistl
dec
pop
add
adcl
jo
cmp
jo
sbb
out
inc
jle
xchg
addr16
aad
pop
mov
add
and
pop
movsb
sbb
mov
jns
test
dec
addr16
je
adc
add
push
cmp
xor
int3
pop
mov
fadds
push
push
sbb
lea
mov
mov
rorb
sbb
or
push
adc
mov
lods
popa
sub
and
jo
dec
sub
cmp
xchg
fcoml
add
or
and
pop
lods
mov
addr16
dec
icebp
imull
mov
daa
js
roll
dec
push
cmpl
push
inc
mov
je
call
mov
js
dec
push
dec
inc
push
mov
cmc
xchg
push
and
call
jne
and
and
or
cmp
pop
and
fcompl
movsb
pop
cmp
xor
es
movsl
xor
xor
xchg
sbb
sub
xchg
xor
das
and
sub
ljmp
push
aas
fmuls
push
lock
data16
xor
mov
mov
lock
addr16
or
popa
sbb
roll
mov
add
cmpl
negl
shlb
inc
pop
lret
fidivl
movl
or
call
out
sbb
js
xchg
outsb
call
dec
aaa
adc
out
add
outsl
dec
and
arpl
add
ret
mov
jp
mov
xor
or
add
mov
jne
insl
das
in
ja
add
dec
mov
stos
ret
cmpsb
add
adc
cmp
jo
pusha
add
repnz
cmpb
and
push
shlb
popa
orb
outsl
test
adc
xor
inc
mov
or
jno
outsl
push
rclb
add
xor
push
aas
leave
push
xor
data16
loopne
das
pop
mov
lods
sbb
movsb
test
sub
stos
jns
orb
cmp
sahf
jecxz
add
mov
scas
mov
es
sbb
enter
add
lcall
push
inc
pop
test
mov
loope
mov
push
push
rcrl
loopne
or
mov
sbb
sbb
inc
or
mov
mov
mov
ret
test
adc
roll
ljmp
mov
mov
insb
jae
out
inc
xchg
adcb
mov
and
popa
push
add
xchg
add
in
xor
mov
dec
sti
cmp
add
jno
in
daa
jge
pop
sar
fcmovbe
jp
aaa
xchg
add
ret
sbb
or
jl
xor
add
ja
push
xor
add
lds
and
je
icebp
push
adc
dec
mov
xchg
dec
jl
cwtl
subb
fimuls
push
mov
add
mov
arpl
mov
xchg
inc
xchg
in
shrl
fnstenv
shl
stos
hlt
fstl
fadds
inc
aad
adc
aam
and
pop
aad
push
pop
cmp
xchg
rolb
repnz
mov
push
out
add
or
mov
xchg
aaa
push
mov
test
add
xchg
and
das
es
push
add
test
xor
or
lods
cmp
push
addl
adc
rcr
loop
xor
lock
push
sti
adc
xor
and
mov
stos
push
xor
sbb
sbb
and
sub
xor
adc
add
fcmovnu
into
xor
repz
ret
inc
dec
mov
xorb
adc
cmp
jb
out
inc
frstor
or
dec
arpl
fcompl
push
pop
pop
idivb
or
push
out
cmc
mov
inc
ss
cmp
lret
sub
push
push
mov
les
sbbb
jno
test
push
mov
mov
adc
rcl
xor
cmpsb
mov
xchg
mov
fs
or
cltd
jle
xchg
test
xor
xorb
rcr
sbb
pop
test
sub
xor
ror
not
and
daa
jae
enter
push
mov
push
sub
or
jne
test
sbb
add
jae
xor
inc
popa
andl
mov
or
and
add
gs
lds
mov
dec
sub
push
xor
int3
mov
sbb
or
mov
rol
es
roll
add
pop
out
mov
or
adcb
stos
push
shll
sbb
push
sahf
and
push
mov
ficoml
sbb
insl
es
sub
inc
cmp
add
jge
cmpsb
aaa
sub
es
or
mov
xchg
xor
jno
sub
inc
mov
dec
cwtl
leave
jae
mov
clc
inc
hlt
testb
ret
jge
jmp
leave
ljmp
test
ficomps
mov
xchg
loope
repnz
cmpsl
cli
mov
movsb
stos
enter
add
incl
je
adc
adc
cmpsl
jno
out
rolb
xor
iret
in
bound
jno
mov
dec
scas
cmp
dec
xchg
push
pop
push
shlb
lahf
mov
mov
mov
iret
loop
test
mov
and
adc
pop
lods
jo
or
inc
push
mov
fiadds
lcall
xchg
das
fdivrs
pusha
mov
les
mov
jae
aas
sub
stc
and
cli
ljmp
adc
and
inc
stos
sahf
pop
aam
pop
mov
jnp
mov
int3
mov
insb
nopl
hlt
jp
xor
inc
cmp
push
es
pop
add
dec
mov
lret
test
or
and
divb
pop
nop
test
xor
jle
pop
das
jle
arpl
xchg
testb
shrb
lods
fisttpl
fs
cmp
add
aaa
add
movsb
ds
add
sub
mov
sar
push
mov
push
xchg
int3
adc
inc
xchg
bound
lock
lcall
add
push
push
mov
sbb
sub
add
pop
pop
sub
adc
or
in
dec
mov
cmp
xchg
adc
dec
push
cmpsl
insb
sbb
mov
cmp
mov
in
movsb
lods
dec
or
jae
dec
mov
rcll
adc
cs
dec
es
aas
cwtl
sub
roll
sub
adc
inc
bound
rcrl
mov
push
fnstcw
lahf
sub
cmp
xchg
cs
fs
push
push
add
test
mov
pop
or
add
add
aaa
inc
inc
mov
add
cwtl
xchg
and
or
cmp
vpcmpeqw
fwait
sub
sbb
jo
push
and
fidivs
xor
push
test
or
cltd
mov
insl
and
add
mov
out
xchg
or
add
xor
add
out
frstor
stos
mov
or
add
jnp
add
js
mov
or
pop
add
inc
add
add
xor
add
or
pop
mov
dec
shll
aam
add
mov
lds
popf
repnz
rcll
pop
test
jl
mov
cmpb
jg
sub
jl
xor
adcb
adc
sub
fcoms
add
add
add
in
cs
stos
addb
test
pop
push
enter
xchg
es
xchg
xor
les
fldt
rolb
mov
pop
adc
ficompl
mov
xchg
cmc
push
sub
jp
dec
add
sub
frstor
out
movsb
add
push
mov
sub
int3
cmp
es
adc
xor
add
sbb
je
mov
sub
xchg
les
inc
insb
add
scas
mov
dec
shrl
xchg
pop
or
scas
bound
mov
lcall
ja
popf
shlb
lods
or
pop
pop
pop
psubd
sub
xchg
pushl
or
sub
dec
jle
sbb
outsb
lea
push
jae
adcl
and
jle
adc
mov
test
xchg
mov
movb
sbb
cs
jnp
cs
mov
sahf
adc
daa
nop
lods
xor
dec
fwait
sbb
movsb
and
lods
sahf
inc
lock
inc
or
add
orb
ja
mov
xor
testl
mov
push
adc
adc
test
sub
mov
mov
mov
mov
and
pop
xor
sub
cmpb
add
push
fs
scas
test
push
or
mov
or
xchg
dec
scas
xor
xchg
mov
andb
dec
adc
pop
xor
jo
lret
test
mov
xor
mov
inc
scas
loope
lods
and
jne
cs
or
sahf
xor
ror
daa
lods
gs
dec
jnp
push
lock
cmc
mov
push
popf
adc
jnp
push
mov
adc
push
aam
push
push
dec
push
loope
xrelease
sub
pusha
dec
les
mov
push
cld
jo
or
call
xor
push
sbb
addr16
pop
or
or
fisubs
sbb
shll
es
pop
into
mov
pop
push
cwtl
push
sbb
insl
aas
and
dec
dec
pop
test
leave
cmp
sbb
inc
or
aam
dec
fdiv
push
adc
pop
jo
loope
lock
inc
mov
mov
and
fildl
or
cmp
push
lock
jbe
add
lods
ss
or
add
sub
inc
in
mov
dec
fs
ret
adc
adc
sbb
jecxz
ljmp
push
repnz
pop
cmp
arpl
mov
push
and
addr16
sub
jnp
mov
mov
pop
es
push
int
pop
push
adc
xor
je
call
inc
jo
inc
jle
and
dec
push
fwait
or
add
mov
jo
push
mov
pop
add
mov
dec
ljmp
pop
arpl
push
dec
add
bound
inc
xchg
add
arpl
dec
test
and
jo
inc
xor
pop
add
sub
cmpb
sub
mov
push
cmp
mov
scas
mov
sub
push
fldl
lret
add
jmp
mov
inc
sub
sti
xchg
sub
and
mov
or
mov
sub
and
dec
mov
sub
mov
inc
xor
sbb
test
bound
cmp
jo
mov
addr16
addb
mov
mov
or
inc
cltd
or
sub
ss
push
nop
loope
jb
cmp
dec
test
fwait
push
rcll
adc
inc
push
je
jmp
shl
mov
add
ret
ss
out
jb
dec
cmp
dec
xor
pushf
xor
lock
inc
sahf
andl
inc
jecxz
or
push
scas
pop
out
inc
add
cli
mov
stos
mov
loope
bswap
and
mov
jl
sbb
pop
hlt
lea
mov
cmp
add
or
loope
jp
imul
add
ret
sbb
push
push
push
sub
in
or
fisubl
push
push
es
int3
je
mov
lds
add
xor
xchg
fistl
sub
pusha
inc
into
pop
out
sub
adc
pop
add
xor
jo
orl
es
push
and
cli
mov
mov
addr16
inc
xchg
mov
scas
out
sbb
subl
xor
sub
fldenv
or
adcl
add
ljmp
mov
or
aad
mov
repnz
and
add
iret
cmp
mov
add
jo
jno
xor
scas
dec
movsb
or
mov
add
push
insl
ret
fnstenv
add
dec
jmp
lds
add
addr16
jb,pn
pop
add
out
int3
test
xchg
leave
cmp
int
xchg
cltd
leave
jo
adc
cmp
mov
es
jmp
adc
or
mov
mov
mov
or
ss
insb
fdivrs
daa
iret
adc
daa
ja
loopne
mov
mov
dec
inc
movsl
push
cmpsb
in
inc
push
push
inc
pop
adc
push
xor
pop
insb
aas
cli
dec
push
push
inc
jo
push
push
xor
int3
adc
sub
stc
roll
dec
push
adc
lret
jle
xor
gs
adc
fwait
lods
jp
rolb
lret
leave
inc
test
pop
and
icebp
xor
sbb
lods
stos
js
or
add
pop
nop
cld
and
int
loope
inc
nop
lods
inc
cmp
shrb
sub
mov
jmp
in
add
mov
cmp
push
dec
sbbb
and
cmp
out
iret
mov
mov
rclb
push
pop
ljmp
insb
es
add
and
xlat
sahf
cmp
lahf
sub
push
faddl
lds
fcom
sbb
sahf
mov
adc
push
sbb
into
test
adc
or
pushf
inc
popf
sbb
decl
mov
fiadds
or
cmp
in
push
xor
sbb
adc
cwtl
and
mov
mov
cmp
aaa
mov
adc
and
test
pop
and
mov
add
daa
inc
inc
mov
add
inc
test
xor
fsubrl
pop
sub
stos
sbb
ss
ja
aam
mov
fiadds
les
mov
pop
insb
dec
adc
add
sub
daa
lret
les
dec
inc
xchg
inc
xchg
or
pop
inc
lret
and
pop
mov
mov
call
mov
mov
jno
xor
fstps
es
fs
mov
sub
or
test
add
mov
cwtl
inc
xor
add
es
inc
ret
loopne
push
orl
jecxz
stos
sbb
sbb
mov
rolb
mov
andb
outsb
into
mov
in
or
add
sbb
fldl
scas
cmpsl
cmpsb
call
loopne
shrl
mov
sahf
sub
sbb
jp
sbb
cs
inc
mov
jle
out
lds
bound
push
fldenv
push
lcall
jae
sub
icebp
stos
cmp
lock
push
push
xor
mov
cmpsl
pop
pushf
in
iret
in
mov
and
mov
shll
adc
mov
fldl
outsl
push
test
or
sub
mov
imul
pop
test
aad
or
sbb
sarb
xor
sub
mov
xor
and
int
incl
adc
test
or
xor
fdivp
or
pop
mov
shlb
add
adc
push
popa
push
inc
xchg
rcl
add
inc
lret
inc
stos
and
pop
mov
xlat
mov
xchg
mov
stos
push
push
xor
add
mov
aad
sbb
cwtl
adc
dec
mov
imul
sbb
sub
push
loope
push
sub
sub
aaa
sbb
cmp
adc
inc
mov
das
push
xorl
and
sub
add
and
mov
add
inc
adc
pusha
push
xchg
xchg
cmpsl
lods
sbb
sti
pop
mov
adc
mov
inc
dec
repnz
add
sbb
pop
testb
stos
sbbb
fisubs
add
fmuls
add
cmpsb
xor
stos
xor
jae
or
test
adc
push
or
and
push
sbb
or
add
jp
ss
mov
mov
inc
lret
or
out
or
and
and
rorw
sbb
add
and
xchg
sbb
sbb
mov
repz
sbb
shlb
adc
addb
mov
mov
or
insl
mov
in
pusha
fldcw
shll
pop
ret
aam
and
test
pop
mov
test
mov
push
pop
ljmp
iret
bound
lcall
ror
js
sbb
cmpsl
jbe
sbb
js
or
inc
or
jno
call
fbld
rol
divb
jne,pt
sbb
or
and
aam
cwtl
and
mov
add
popa
and
inc
adc
mov
adc
dec
lods
js
pop
mov
xorb
adc
int3
lret
adc
dec
mov
cmp
and
mov
pop
int3
hlt
lret
adc
sbb
movsl
call
fisubs
cwtl
and
fistps
iret
push
or
xor
popf
cmc
insb
and
add
repz
xor
outsl
pop
mov
imulb
aaa
adc
cmc
mov
rcll
mov
xchg
adc
ljmp
jns
jge
shlb
sbb
rcrl
je
pop
adc
subb
pusha
mov
and
repz
jle
xorb
or
int3
into
aam
mov
sbb
aas
aaa
test
icebp
jp
push
ret
mov
xor
inc
loope
cld
andb
and
jg
dec
push
daa
lds
sub
addr16
and
or
std
mov
pop
cmc
sub
mov
imul
divl
or
and
mov
loopne
jp
inc
rorl
pop
xor
hlt
add
adc
ss
push
or
jns
stos
inc
xchg
inc
addr16
sbb
jmp
loope
pop
lahf
adc
inc
push
add
or
mov
popa
inc
add
out
mov
je
shll
scas
and
hlt
clc
adc
out
push
push
sbb
inc
lock
das
pop
add
mov
cmp
sbb
jge
jns
push
or
push
fwait
leave
dec
adcb
ljmp
inc
push
xchg
jne
push
sub
sub
adc
and
or
pop
fistl
push
inc
loopne
or
sub
mov
aad
bound
lea
addr16
pop
icebp
mov
in
scas
jp
fdivrs
and
ljmpw
rcrl
add
pop
sub
push
or
add
movsb
and
mov
jge
lods
in
out
sbb
or
xor
popf
gs
hlt
or
out
xor
inc
push
or
jp
and
sbb
sahf
and
shll
andb
ret
xor
mov
push
cmp
shll
rolb
test
out
mov
mov
push
test
jle
popf
mov
mov
xchg
sub
push
jne
push
inc
das
jmp
sbb
test
shlb
sbb
lods
mov
push
xchg
adcb
sub
lods
jne
add
xchg
in
jo
aaa
lds
shrb
dec
xor
inc
call
cmp
pusha
and
inc
test
lea
adc
scas
icebp
ficompl
push
and
scas
jno
sub
mov
jne
adc
jl
sub
aad
lods
mov
jo
xor
sbb
sub
pop
mov
xor
inc
stos
iret
fisttps
fistpl
push
scas
push
test
mov
cwtl
imul
fcomps
rcrl
imul
popa
dec
outsb
push
fldl
dec
lods
lcall
push
jno
repnz
fwait
cmp
popa
xor
cli
sahf
pop
add
jmp
inc
cwtl
xchg
mov
leave
in
push
testl
adc
add
xor
in
pop
loope
mov
out
xlat
ss
loop
faddl
sti
xor
ds
rcll
iret
xlat
in
dec
adc
ds
mov
mov
fsubl
sbb
cmp
sbb
ud0
das
int3
xor
js
adc
pop
les
mov
xlat
std
dec
sbb
cmp
test
cs
cmp
call
aaa
daa
bswap
ret
ret
scas
das
jg
adc
or
sahf
push
cmp
in
jbe
push
jmp
addr16
add
mov
add
mov
xor
xor
ficomps
dec
sbb
mov
sub
sahf
mov
lds
shr
inc
dec
test
jmp
dec
jl
inc
cmp
out
add
push
xor
scas
andb
pop
shlb
and
inc
sub
aaa
scas
sbb
lock
mov
inc
mov
iret
or
inc
cmp
insl
mov
or
sub
push
movsb
cs
lret
aam
cmp
push
sbb
ficompl
addb
ljmp
jns
jo
sub
in
dec
inc
aad
imull
xorb
shll
rolb
pop
cld
push
daa
subl
sbb
push
xlat
mov
lds
mov
mov
lds
sub
push
dec
add
mov
dec
xchg
or
push
aaa
mov
int3
push
mov
push
popf
or
imul
and
push
inc
cmp
cld
jne
push
fwait
push
sar
xchg
sub
cmpsl
jnp
xchg
div
jo
add
dec
mov
scas
bound
stos
jle
cmpsl
or
add
xor
or
xchg
xchg
lock
sub
inc
xor
xlat
mov
jp
insl
add
lds
sbb
data16
or
stos
daa
roll
jg
and
subl
or
je
aam
sbb
pop
mov
inc
addr16
adc
push
sbb
pop
inc
sub
divl
xor
jne
inc
xor
pop
or
cmp
sbb
inc
xor
pop
adc
pop
sub
cmp
fld
or
fxch
fisubl
frstor
aaa
stos
or
xchg
dec
outsb
push
inc
mov
ret
or
mov
outsb
push
push
xchg
add
push
mov
cmp
rorl
xchg
and
mov
adc
pop
pusha
addr16
xor
xlat
daa
lods
neg
sahf
xor
jg
sub
daa
push
das
xchg
mov
ds
mov
test
sbb
xor
jns
mov
adcl
into
cli
add
subb
mov
icebp
inc
aas
or
push
aam
sub
and
daa
xlat
cmp
mov
loop
mov
inc
add
fldenv
rcl
adc
mov
mov
fldcw
jno
cmpsl
sbb
adc
mov
push
flds
sbbb
pop
outsl
add
sbb
add
dec
inc
mov
and
lcall
or
jne
and
sbb
adc
add
test
pop
shll
push
jne
sub
sub
xor
mov
mov
mov
adcb
fsts
mov
stos
xchg
or
sub
push
xor
adcb
repz
add
xor
mov
rcl
jo
dec
add
cmp
fidivl
les
push
test
mov
aas
inc
cld
add
fdivl
sub
out
lret
mov
movl
scas
shrl
push
adc
sbb
xchg
sub
in
add
or
xchg
push
sbb
push
push
mov
mov
push
pop
pusha
or
mov
pop
pop
inc
arpl
mov
mov
and
xchg
sub
add
mov
or
adc
and
push
enter
add
shll
pop
inc
push
jno
or
add
inc
adc
sbb
mov
jp
xor
or
jae
in
sbb
imul
and
jp
xor
andb
pop
fistpll
dec
icebp
jnp
pop
push
xchg
jae
and
mov
test
add
xchg
push
adc
pop
push
push
negl
repnz
mov
das
mov
jne
sub
not
push
xor
rolb
add
mov
push
xlat
pop
pop
mov
and
nop
lods
push
push
cmp
add
and
inc
cld
sbb
adc
stos
cmp
jo
jne
mov
mov
add
sub
xchg
inc
add
pop
add
or
dec
inc
adc
out
push
test
call
test
xchg
iret
in
cld
push
add
xlat
push
sbbl
fisttpl
cmpsl
rcr
jae
les
add
fwait
ret
mov
push
dec
add
fidivrl
aaa
mov
add
add
push
insl
add
mov
ret
pop
mov
mov
loopne
inc
cmpb
ljmp
push
jae
imul
mov
ficoml
iret
xor
mov
sub
cwtl
push
jae
adc
mov
mov
imul
imul
adc
sub
leave
xchg
inc
push
xchg
testl
mov
add
hlt
nop
aaa
fisttpl
and
sub
push
adc
sbb
mov
cmp
mov
sbb
jns
push
arpl
cmpsb
mov
push
push
icebp
xchg
adc
cmp
mov
sbb
xchg
pop
neg
js
inc
xor
push
fidivs
divb
dec
push
add
dec
pushf
test
sti
arpl
es
dec
jo
mov
cwtl
and
leave
or
pop
pop
lret
scas
insb
stos
mov
pop
dec
adc
add
mov
popa
add
mov
das
cmpb
push
ss
adc
jnp
sub
push
inc
and
inc
mov
and
xchg
or
and
shlb
and
pop
xor
mov
fs
arpl
adc
fdivs
pop
adc
sbb
dec
js
jge
das
xchg
fdivl
push
pusha
rcll
mov
sbb
inc
push
stos
xor
mov
add
jnp
cltd
aas
xlat
mov
rorb
daa
lea
mov
jae
mov
mov
sbb
cwtl
lds
mov
push
or
adc
and
movsl
mov
dec
fsubr
cli
adc
xchg
aad
adc
call
inc
daa
cmp
mov
xor
sub
or
adc
or
loope
sbb
inc
sbb
and
icebp
mov
imulb
lock
xchg
addl
es
shll
mov
shll
addl
sub
sbb
inc
mov
mov
pop
push
inc
pop
iret
ror
dec
add
filds
add
shrb
mov
shrb
add
jbe
out
xor
sub
push
outsl
cwtl
imul
or
ret
sub
shlb
inc
in
jmp
loopne
or
pop
pop
jns
add
push
sub
insb
loope
xchg
jae
ret
or
push
xchg
and
mov
bound
sub
sub
or
push
cmp
xchg
and
inc
mov
mov
lods
sub
push
pop
inc
xor
sbb
push
push
sub
fiadds
and
mov
add
add
fwait
mov
dec
add
and
pop
push
aaa
mov
test
jo
adc
sub
jge
dec
and
cltd
mov
jo
jmp
add
aam
xchg
add
sets
das
add
fs
ds
add
jbe
movsb
inc
add
loope
mov
je
divb
mov
nop
push
icebp
lcall
fsubl
xor
pop
xchg
sbb
cmp
inc
pop
mov
ljmp
subl
inc
andb
shll
jp
sahf
jb
lds
sbb
orl
pop
adc
xor
add
and
scas
jbe
inc
lock
gs
mov
js
mov
mov
sbbb
sbb
jmp
ret
imul
jns
jge
mov
rcll
cmp
adc
mov
and
pop
jo
push
xor
test
addr16
test
scas
inc
dec
icebp
cmp
and
pop
inc
daa
inc
pop
jns
add
mov
fisubrl
or
mov
inc
lock
es
push
stos
push
push
push
into
push
cmp
mov
nop
mov
sbb
mov
dec
add
sbb
pop
push
adc
jle
xor
add
andl
stos
inc
popf
loop
xchg
xor
pushf
xor
ret
mov
jne
mov
sbb
push
add
adcb
movb
add
les
cmp
add
push
pusha
ror
test
sub
icebp
ficoml
or
mov
mov
sbb
add
cmp
push
push
and
das
cmp
push
scas
test
ljmp
push
and
inc
repz
inc
rclb
xchg
cmp
insb
mov
data16
cmpl
lcall
adc
dec
adc
popf
imul
stos
enter
ficoms
push
xor
xor
daa
and
std
xor
add
pop
stos
and
mov
xchg
ds
lret
cmp
inc
add
adc
adc
mov
adc
and
jmp
mov
jns
ret
xchg
pop
js
xchg
push
lahf
jbe
and
insb
xor
loop
neg
cmpsb
leave
push
fwait
inc
in
mov
orb
or
sbb
or
xlat
push
fs
ret
cmp
inc
sbb
rorb
nop
aad
mov
adc
js
sub
cwtl
push
subb
bound
arpl
xchg
xchg
xchg
sub
and
cmc
mov
add
outsl
dec
ficoml
xchg
dec
xlat
fucom
xor
out
jb
pushf
call
pop
cmp
lret
mov
rcrl
fstps
adcb
add
sub
push
add
sbb
repz
add
adc
add
inc
pop
xor
cltd
shll
bound
adc
or
test
cmp
xor
push
fsubrl
mov
sub
stos
fnsave
pop
in
in
add
lret
imul
pop
xlat
addb
adc
fidivs
lock
ret
push
mov
add
inc
add
add
mov
dec
mov
or
es
xor
lods
pusha
fsubs
mov
inc
cmpsl
popl
push
insl
xor
arpl
call
divb
jne
loopne
insl
lods
es
push
and
negl
push
jo
jg
stos
pop
lods
inc
sbb
and
ljmp
mov
jl
xlat
jne
xchg
mov
pop
imul
mov
xor
mov
rolb
insl
scas
and
adc
and
aad
xchg
cmp
test
sub
neg
test
mov
in
popf
pushf
fisubs
pusha
sub
jnp
push
fisubs
shll
sbb
xchg
daa
adc
loope
xchg
mov
sahf
cmp
add
fisubrs
jl
pop
fiadds
pushf
es
inc
cmp
outsl
ret
inc
lcall
test
cmp
xorb
xchg
cmpsl
loopne
or
rcl
sbb
aaa
cmp
gs
cltd
cwtl
jge
mov
fidivs
cmp
movsb
and
loopne
inc
aaa
mov
and
and
xor
shlb
pop
stos
cmpsl
ret
aaa
jbe
jg
ficoml
xchg
nop
repnz
inc
xchg
mov
xor
test
adc
xor
iret
iret
mov
dec
and
jns
dec
sbb
mov
iret
int3
xor
in
add
aaa
jmp
jbe
or
imul
xchg
push
xor
adc
add
push
or
jbe
daa
adc
or
lods
jecxz
outsb
jnp
loopne
test
in
jnp
or
push
push
or
scas
pop
or
dec
sbb
pop
inc
dec
push
xor
daa
dec
inc
xchg
arpl
xchg
jb
pushf
and
call
add
cmpsl
push
iret
push
sbb
int3
mov
aam
addb
cmp
and
pop
sub
sbb
push
popf
sub
push
repnz
or
jle
outsl
and
int3
mov
mov
movsb
mov
push
mov
inc
mov
mov
or
outsl
ret
arpl
arpl
jne
lahf
in
fdivp
cwtl
scas
or
shll
les
cmp
lods
shl
adc
inc
mov
pop
ljmp
loopne
or
pop
je
push
and
jns
lar
add
testl
or
das
and
sub
addr16
pusha
popf
aam
loop
push
and
jne
jp
jb
addr16
mov
mov
sbb
leave
mov
dec
cmp
insb
test
ret
pop
lods
mov
mov
ljmp
rcll
hlt
xchg
mov
ja
push
mov
inc
js
leave
mov
daa
dec
andl
insb
aam
fwait
nop
pop
mov
aaa
sbb
jge
add
push
sahf
mov
sbb
fistpl
sub
in
aad
fcomps
adc
push
add
arpl
xor
xor
out
rclb
sub
pop
int3
sub
ds
inc
movsl
cmpsl
and
decl
sbb
mov
xchg
dec
aaa
inc
mov
daa
jmp
xchg
sub
pushf
stos
xchg
mov
mov
iret
cmp
jle
mov
stos
insb
iret
pushf
or
popa
pop
roll
aaa
pop
scas
fadd
jmp
ret
dec
outsl
jecxz
stos
inc
xor
inc
hlt
pop
xlat
adc
in
fdiv
insb
cmpsb
adc
sti
jmp
add
js
in
je
pop
rolb
pop
adc
jnp
mov
daa
imul
mov
sbb
roll
jb
ss
pop
push
dec
jl
add
test
cmp
fisubs
cmp
notb
push
sbb
inc
sbb
xchg
lods
mov
inc
fistl
mov
add
movsl
xor
sbb
andl
out
movsb
in
lock
addr16
fwait
test
push
out
clc
dec
pop
loope
jne
push
scas
pop
mov
ljmp
jmp
sbb
pop
mov
cwtl
and
imul
mov
push
cmp
or
push
push
adc
mov
push
push
hlt
fcmovnbe
dec
ja,pn
adc
cmp
ret
das
mov
push
add
jne
sbb
xchg
jp
cmpb
fsubs
loope
cmpsl
lock
jp
mov
fisubrl
fistps
pusha
mov
bound
fs
sbb
push
mov
ret
mov
stos
pop
sub
push
xlat
add
xchg
sub
or
cmp
fdivs
jb
mov
ja
cmpsb
adc
fsubs
sub
emms
mov
out
cmp
mov
scas
inc
jne
out
push
adc
bound
pusha
xchg
pop
inc
jo
pop
jo
mov
and
xor
sub
pop
adc
fidivs
bound
sub
jmp
cld
and
bound
mov
lret
add
scas
lea
aad
or
sub
pusha
sub
ljmp
add
push
daa
js
js
iret
sub
add
sbb
scas
sbb
push
arpl
mov
aam
push
mov
fadds
sbb
pop
fisttpl
aad
hlt
es
push
in
add
adc
sub
add
jno
scas
inc
jne
iret
mov
cmc
mov
or
in
xlat
addr16
xorb
mov
and
xchg
and
mov
sbb
sahf
loopne
jl
push
cs
inc
inc
jmp
push
xchg
mov
inc
mov
cmc
or
sub
add
jl
outsb
jno
jnp
ja
mov
enter
jmp
idivl
sbb
pop
sbb
sub
fnstsw
jne
mov
data16
repnz
mov
or
into
cwtl
cltd
jmp
mov
sbb
in
push
stc
jbe
add
jnp
lds
jae
lahf
jno
fdivrp
fisubs
mov
pop
and
xlat
mov
push
cmp
es
mov
jae
daa
sbb
fwait
in
or
adc
outsl
negb
popf
jg
movsb
out
fimuls
push
ret
test
scas
test
int
das
and
or
outsl
jbe
int3
add
jb
ds
mov
ja
mov
xchg
sub
jg
mov
es
aam
jnp
xor
mov
or
sbb
stos
aaa
sbb
xchg
in
inc
mov
rcll
pop
into
in
push
xchg
into
mov
push
add
ret
cmp
sbb
jbe
dec
fdivrs
aaa
sub
mov
aaa
movsb
add
fmuls
negb
sti
into
mov
dec
push
stos
jmp
rorl
fcompp
mov
push
jmp
and
mov
push
es
loopne
jmp
fwait
arpl
xor
or
add
mov
sub
mov
dec
cmp
xlat
aaa
std
daa
pushf
cmpsl
or
fbstp
popa
jge
pusha
sbb
lret
arpl
arpl
in
mov
jge
ss
push
xor
and
bound
xor
mov
dec
inc
xor
leave
inc
mov
or
idivb
shrb
in
aaa
jo
adc
dec
cltd
negl
dec
add
lret
push
aam
sbb
cmc
pop
or
mov
and
and
clc
je
or
cmp
out
imul
bound
dec
xchg
xor
and
pop
xchg
cmp
popf
add
dec
icebp
popf
insl
arpl
xor
inc
push
int
sbb
cmp
pop
negb
or
jb
mov
ret
mov
cmc
outsb
xor
fimull
sahf
repnz
outsl
or
cli
fistpl
rorb
sarb
fisubrs
xchg
jb
ficoml
add
and
mov
in
push
mull
loope
dec
adc
ret
test
mov
sti
out
add
or
mov
and
ds
testb
bound
pop
mov
mov
pop
sub
out
ja
mov
fadds
mov
fidivrs
sub
or
push
test
and
add
call
cmp
xchg
mov
in
inc
in
and
and
ficoms
xchg
mull
jmp
mull
mov
popa
sub
imull
ss
inc
xor
int
dec
jge
add
rclb
andl
xor
adc
sti
jmp
lret
jo
and
cld
jo
dec
jns
inc
dec
or
mov
ret
adc
sub
popf
icebp
ss
mov
inc
xor
aaa
test
xchg
mov
xchg
data16
inc
sti
call
add
fdiv
inc
inc
xor
push
lods
fnsetpm(287
sub
or
mov
addb
sbb
inc
ja
stos
shlb
xor
addl
stos
sarl
adc
loop
dec
cmpsb
out
push
mov
jno
xor
cmpsb
xor
divb
sbb
test
gs
pop
fistpll
xlat
xor
push
cmp
rcrb
rorb
dec
sti
jo
add
nop
scas
dec
popf
popf
jmp
pop
jmp
cli
shr
iret
stos
inc
adc
xchg
pop
xchg
js
shrl
imul
fwait
add
inc
push
push
mov
mov
test
sbb
sbb
pop
and
es
push
into
sahf
rorl
add
fcoml
js
sub
and
mov
adc
cmc
or
pop
cmp
pop
mov
add
out
lea
js
add
cmp
sub
shrl
lahf
xchg
ret
popf
sbb
mov
xor
mov
ds
or
cmp
pop
push
pop
add
push
inc
loopne
lods
pop
into
jbe
int3
fcomi
decl
out
jnp
pop
mov
rorb
lret
xchg
rcr
ss
dec
repz
mov
inc
push
daa
mov
add
insl
jbe
stos
push
push
rsm
jg
mov
mov
into
in
push
mov
das
into
dec
pop
pop
sbb
fld
or
add
or
add
add
out
mov
aam
ret
push
mov
inc
sbb
pop
add
pop
inc
cmpsb
sub
outsl
divb
jp
cmp
sbb
add
adc
sub
mov
aad
movsb
cmp
mov
ret
mov
and
xchg
pop
popf
fmull
add
mov
sub
jo
lcall
and
dec
cs
out
adc
sbb
rcrb
xchg
pop
sbb
ss
stos
jle
mov
mov
out
push
dec
adc
push
stc
jl
adc
inc
mov
rcrl
inc
adc
and
stc
or
jbe
mov
adc
dec
aad
jl
shlb
mov
stc
or
insl
and
int
movsb
lods
pusha
and
or
data16
daa
arpl
call
cmpsb
mov
adc
ret
xor
rclb
mov
or
orl
scas
call
sbb
xchg
pop
xchg
cmp
cmc
cmp
fstl
movsb
ret
movsb
lcall
jecxz
or
movsb
jae
les
andb
sub
dec
fstps
icebp
mov
je
jo
push
nop
scas
popfw
cld
movsl
sub
ret
pop
or
adc
flds
mov
subl
enter
or
and
mov
es
int
pop
cmp
popa
xor
push
cmp
iret
mov
movsb
rcrb
add
add
sub
daa
aad
mov
aaa
or
dec
js
fimuls
test
fildl
lea
ds
ret
sub
sub
sti
mov
pop
ret
xchg
push
add
aad
and
jae
cli
fwait
popa
sbb
mov
mov
sbb
jae
into
aas
add
pop
into
mov
mov
fdivs
xchg
cmpsb
fwait
cltd
sbb
jae
inc
xchg
sarb
das
cmpsl
mov
scas
jnp
xor
sbb
sub
fildll
inc
and
jnp
push
add
mov
lret
into
imul
rorl
push
push
ltr
into
dec
inc
xor
adc
cmp
insl
daa
adc
add
int
mov
xor
push
mov
pop
sbb
aad
fadds
idivb
inc
lcall
lret
scas
mov
jg
lock
push
jecxz
or
sub
sub
push
pusha
inc
lds
popa
outsl
xor
and
or
xchg
adc
pop
mov
xchg
add
or
sub
mov
pusha
or
add
repnz
sub
loope
frstor
in
sub
daa
mov
mov
sbb
push
or
popw
dec
sub
stc
bound
jmp
add
filds
movsl
imul
fs
sbb
fstps
or
popfw
sbb
fldl
jo
and
insl
movl
add
fldl
pop
addr16
or
mov
and
dec
data16
sbb
fstpt
push
push
aas
add
jl
cmp
outsl
lods
scas
push
test
fcomp
iret
rcl
adc
mov
add
jno
inc
sbb
mov
sbb
flds
arpl
in
fld
test
adc
dec
jmp
scas
popf
insb
out
mov
push
adc
sbb
mov
cmpsb
add
cmp
jae
adc
or
lds
arpl
int
adc
inc
sub
popf
add
jne
sti
dec
fisttps
push
jge
cmpsl
aaa
cmpsl
int3
inc
in
mov
add
add
mov
cmpsl
and
xor
or
pusha
sbb
sbb
add
sbb
sbb
and
or
shll
add
xor
imul
fsubrl
xorl
pop
stos
mov
add
loopne
sbb
jge
mov
neg
or
sub
hlt
adc
mov
jp
mov
hlt
out
dec
negl
push
sarb
pop
fnsave
aad
xor
jp
loop
inc
aad
fnstsw
cld
lea
adcb
dec
clc
add
outsl
negb
push
add
test
sbb
mov
fucom
jecxz
call
sbb
add
pop
stos
subl
imull
adc
negl
or
xor
and
jmp
add
int
insb
mov
movsl
cmc
test
mov
pop
mov
cmp
pop
stc
out
add
js
mov
adc
mov
and
fwait
jle
ss
sbb
mov
pop
subb
push
adc
loope
dec
pop
outsb
out
outsb
xchg
dec
pop
leave
mov
fiadds
add
pop
pop
pop
xlat
sub
insb
adcl
in
pop
lods
mov
dec
mov
xchg
sub
cmp
cmp
cmp
mov
inc
inc
jg
cmp
or
in
or
ljmp
in
dec
out
push
out
sub
and
sahf
insl
inc
insl
ss
pop
mov
add
ret
pop
mov
aam
jecxz
test
sbb
xchg
outsl
mov
push
mov
lea
imul
mov
fs
lds
xor
aas
in
push
add
and
mov
or
dec
movsl
or
gs
mov
inc
shr
add
out
fmuls
jns
mov
mov
sbb
hlt
in
adcl
inc
mov
lahf
rcr
ja
out
mov
mov
push
add
mov
ffreep
xchg
bound
ficoml
cmc
add
xchg
les
repnz
sti
mov
loope
jb
xchg
xchg
aam
add
fbld
mov
cmp
add
mov
ljmp
adc
repnz
addr16
ret
cs
test
adc
dec
push
fcomps
inc
pop
add
jge
mov
lods
popf
and
aaa
lahf
outsb
adc
inc
arpl
sbb
lods
jge
mov
adc
mov
cmp
pop
xlat
in
out
aaa
cmp
cmp
push
rclb
in
sti
inc
cmovns
xorb
mov
add
jnp
test
ss
icebp
fists
fimull
mov
cmp
inc
shlb
push
outsb
fcmovnu
in
add
in
mov
jb
push
pop
add
or
cmpsl
in
push
cs
push
fistpl
iret
inc
dec
and
ss
jno
in
mov
pop
sub
ja
xchg
pop
int3
daa
pushf
xor
imul
ret
sub
cmp
cmpsl
shrl
cmp
imul
dec
iret
add
incl
dec
xchg
add
pusha
shlb
xchg
in
ss
and
clc
and
and
inc
and
pop
cmp
test
enter
insl
xor
dec
xor
sahf
sbb
xlat
scas
sbb
mov
pop
fsts
mov
inc
shl
jns
jno
ds
testb
adc
cltd
shlb
xchg
repnz
fcomip
push
add
aas
sti
icebp
ds
cmp
test
mov
js
jecxz
pop
enter
mov
sbb
jge
fimuls
xchg
fnsave
jbe
ret
aam
pop
ja
push
mov
pop
add
xor
mov
jmp
xchg
aaa
aad
push
sbb
outsl
dec
xchg
mov
pop
sbb
adc
ss
inc
addr16
je
js
pusha
insb
push
push
cwtl
lock
xor
or
or
fsub
adc
addb
mov
xor
xchg
add
dec
jae
sub
mov
lods
arpl
jno
pushf
xchg
xchg
push
sbb
push
jnp
pop
stc
mov
xor
or
cmp
adc
mov
jle
cld
pop
and
cmc
dec
pop
and
cltd
ret
js
test
sbb
lea
push
lret
mov
orl
xor
inc
and
mov
mov
jne
add
and
add
pusha
leave
fisubrl
ljmp
mov
xlat
loope
cmp
outsb
fildl
add
fcmovnbe
lea
lret
movsl
and
inc
test
lcall
lods
arpl
pusha
fbstp
or
or
push
jns
xor
inc
arpl
outsb
jbe
pop
mov
dec
repnz
fbstp
dec
je
mov
xchg
out
xchg
lahf
stos
int
jbe
jbe
aas
and
test
xchg
sbb
and
pop
fdiv
pop
addr16
inc
cmpsl
sbbb
jae
shll
mov
mov
shrl
clc
leave
clc
dec
fst
int
add
sbb
sbb
subb
sbb
xor
lds
push
aas
sub
fbstp
jnp
xor
dec
pop
push
mov
arpl
adc
sbb
push
inc
pop
loope
sub
sbb
mov
mov
mov
data16
out
push
ror
les
aas
loop
mov
aaa
jne
pushf
adc
pop
mov
fldl
popa
ja
fcom
push
add
jp
cmpsb
dec
dec
xor
adc
adc
out
call
push
push
xor
mov
test
add
pop
sbb
pop
mov
jnp
cmp
std
stc
push
jl
xchg
cmp
mov
jae
idiv
fsubrl
mov
push
push
mov
adc
adcb
bt
mov
mov
or
insl
sub
clc
ljmp
mov
pop
inc
lret
test
sbb
jp
hlt
pushf
mov
insl
xlat
test
js
jge
nop
xor
ret
jbe
inc
ret
test
fidivl
push
pop
insl
add
cmp
dec
inc
or
pop
mov
fildll
idivl
and
cmpb
and
lcall
jb
lods
mov
cmpsl
xor
sbb
jbe
std
movsl
addr16
push
xor
and
out
in
addl
push
rcrb
fstpl
mov
lods
aaa
gs
stos
dec
and
jp
mov
jno
mov
push
adc
cs
or
arpl
inc
js
sbb
or
sbb
mov
xchg
dec
outsb
sbb
pop
mov
imul
cmp
or
js
pop
rorl
popa
fldt
hlt
and
mov
push
jnp
xorl
imul
cmp
mov
les
push
jp
cmc
jecxz
ljmp
sbb
notb
or
lret
or
inc
insl
pop
outsl
jne
insl
inc
fsubl
cmp
adc
aad
jo
mov
push
shr
ret
lea
movsb
scas
sub
mov
jecxz
pusha
push
cmp
in
inc
sbb
mov
cmp
mov
shrl
aam
aad
mov
rcrl
loopne
add
repz
pop
pop
adc
add
add
xchg
sarb
loop,pt
cld
out
fsubs
xchg
sarl
cmp
pop
xor
fsubr
divb
mov
leave
adc
jno
mov
imul
inc
ss
fucom
repnz
xchg
sub
sub
adc
inc
lret
outsb
out
inc
sub
pop
xchg
and
push
andl
fmuls
pop
arpl
addr16
jnp
adc
cwtl
outsb
jbe
and
mov
sbb
ss
call
inc
rorl
mov
sbb
out
cmp
push
xlat
popa
or
or
lds
fistps
fcmovbe
add
iret
xor
stos
test
lcall
fnstsw
pushf
js
iret
aam
fistps
repz
out
aam
adc
rcll
adc
fwait
shrl
mov
dec
dec
stc
dec
hlt
sub
xlat
mov
int
jne
lea
stos
jnp
iret
jb
adc
in
or
leave
enter
je
jns
or
sub
inc
imul
sub
sarl
in
sbbl
fwait
and
aam
sub
xchg
movsl
stos
lods
hlt
aam
rolb
mov
inc
cmp
xor
addr16
add
cmp
sbb
inc
mov
xchg
orb
std
call
fs
scas
push
mov
and
lret
dec
mov
gs
pop
ds
aas
add
push
mov
mov
xor
pop
subl
push
push
fstl
xor
xchg
stc
cli
lret
push
fcomps
jo
jp
clc
bound
outsl
add
mov
push
adc
xchg
stc
fistl
add
add
pop
mov
iret
adc
stos
test
adc
sbb
sahf
sub
sbb
call
insb
push
daa
les
loop
in
push
int
fidivs
ss
cmp
and
shlb
fidivrl
adc
and
rorb
call
ss
mov
pop
push
dec
and
xor
mov
lea
cvtps2pi
jno
mov
cmpsb
fidivs
out
jecxz
roll
ffreep
in
in
dec
mov
mov
leave
flds
cmp
nop
cli
adc
dec
mov
mov
fnsave
daa
btr
add
sub
mov
sbb
in
andl
into
pop
test
add
jae
push
imul
xorl
or
jo
insl
pop
cmp
test
hlt
sub
jne
pop
test
push
push
add
or
mov
push
dec
cli
testb
incl
fisubrs
xchg
scas
ret
in
sti
sbb
icebp
xor
jge
push
enter
mov
inc
push
mov
iret
push
mov
testb
ljmp
xor
imul
inc
fs
push
xor
push
push
ss
aaa
xlat
push
test
jbe
stos
xchg
mov
insb
xor
pop
push
jge
dec
cmpsb
xor
jns
loope
sbb
ja
cmpsb
xchg
pop
mov
push
aam
mov
cmp
cs
js
lods
xchg
mov
call
mov
adc
xchg
scas
data16
iret
push
loop
pop
out
xchg
fidivl
push
mov
das
add
sub
jp
inc
outsl
jo
jae
rcll
add
xchg
mov
jo
push
inc
mov
or
pop
inc
lea
mov
cmpb
mov
lods
lock
pop
sti
mov
or
imul
and
xor
test
sete
test
out
jmp
mov
sbb
les
sti
jmp
xchg
pop
sahf
xor
dec
pusha
shrb
lret
xchg
dec
mov
shufps
test
test
sub
xchg
lds
mov
mov
push
pop
xlat
mov
mull
sbb
jl
xchg
in
call
mov
in
dec
mov
cmc
rcl
loop
push
fwait
mov
and
rcl
sarl
cmp
mov
adc
cli
mov
das
jge
mov
insb
dec
mov
fcomps
sbb
mov
or
cmp
xchg
pop
pushf
push
mov
cmpsb
mov
push
jp
add
loopne
ja
dec
cmpsl
pop
sti
ror
xor
push
insb
les
cmp
push
insl
aam
sbb
sbb
in
cmp
js
loopne
cltd
push
or
mov
popa
out
cld
dec
pop
sbbb
sbb
cmpsb
add
pushf
mov
jae
sbb
add
adc
enter
movsl
jp
xor
mov
in
dec
jb
mov
mov
mov
jnp
mov
sahf
inc
dec
or
add
sbb
fdivl
and
out
stos
xchg
inc
std
insl
insl
xlat
jo
mov
std
sub
sbb
and
jecxz
addr16
shll
pop
mov
jmp
sbb
lods
stos
fidivrs
xor
ljmp
shr
mov
aaa
xlat
insl
add
outsb
pop
cmp
mov
pop
cld
mov
fwait
cmp
mov
cmp
in
add
shll
mov
jp
cmpsb
enter
punpcklbw
in
pusha
loope
cli
scas
mov
xchg
or
sbb
pop
cltd
and
clc
mov
in
lret
fisubrl
pop
pop
sub
sti
xchg
sbb
shrb
mov
js
movsl
rcrb
aaa
add
stos
out
out
lock
jns
lret
xor
mov
divl
fcmovnbe
jge
inc
adc
mov
mov
mov
bound
popa
add
imul
arpl
aam
mov
rolb
out
iret
jo
loopne
stc
lds
aam
dec
add
fistpl
outsb
or
xlat
push
das
negb
out
ret
testb
mov
mov
jbe
xlat
mov
mov
mov
fildll
push
jl
pop
jbe
jge
push
sbb
fwait
mov
push
rorb
jae
mov
mov
in
jp
leave
push
xchg
adc
addl
mov
mov
jns
imul
sub
adc
xchg
pop
adc
pop
push
jno
cmp
loope
insb
ja
in
loope
cmp
sbb
add
mov
jnp
mov
aaa
pop
cltd
insb
loope
pop
rolb
rorb
fcomip
repnz
imul
push
lahf
xor
jp
aad
inc
jns
push
std
mov
mov
das
push
stc
xchg
cmp
jg
out
mov
xchg
mov
pop
jg
clc
cmp
mov
jl
lock
movsl
sub
gs
dec
insb
push
or
scas
and
lahf
push
ds
push
shlb
xor
out
mov
adc
xor
enter
ficompl
add
dec
add
add
loope
stos
add
imul
sbb
adc
fucomp
imull
adc
loope
rcrl
sbb
insl
std
lea
cwtl
repz
bound
cmp
xchg
sbb
jo
and
push
aaa
dec
and
jmp
inc
test
inc
fnsave
ss
test
add
adc
inc
add
cmp
fs
test
inc
lret
dec
aad
popf
jge
adc
cmc
and
enter
fyl2xp1
into
push
out
test
rclb
arpl
mov
cs
push
add
inc
xchg
or
addr16
fcom
pop
data16
mov
arpl
lds
and
xor
sub
xchg
mov
decl
jmp
les
sub
cld
insl
fstl
mov
testb
add
shlb
cmp
dec
andl
jbe
mov
mov
push
aaa
test
push
insl
cli
sbb
fwait
mov
push
in
in
shr
jge
mov
sti
scas
adc
jo
and
push
test
pop
cwtl
mov
xchg
jb
adc
and
sbb
mov
xchg
cmpsl
pop
or
fdivrs
mov
sub
push
sub
stc
mov
sub
jae
mulb
outsl
jge
std
in
push
jmp
xchg
sub
jge
lods
aaa
mov
lods
scas
sub
inc
lds
imul
imul
sbb
xor
xchg
fcomp
mov
mull
and
sbbw
pop
cmc
dec
dec
or
rcrb
mov
push
fadds
mov
dec
cmpsb
pop
sbb
js
std
mov
rolb
inc
jne
and
add
or
adc
push
fadds
shll
or
add
les
mov
loopne
ret
pop
out
mov
sbb
pop
add
popa
mov
cli
or
pushf
sub
out
pop
fdiv
movsb
or
in
dec
aas
fisttpl
in
cld
jle
sub
cld
insb
int
cs
icebp
mov
fimull
insl
insl
mov
cmp
clc
add
dec
pop
in
mov
cmp
pop
sub
shlb
mov
pop
sahf
or
xor
lret
sub
xchg
mov
jbe
outsb
dec
or
dec
cmp
jmp
ja
leave
cmp
mov
mov
push
push
mov
jl
push
jns
adc
pop
int
or
pusha
rcr
in
nop
xchg
cmp
imul
scas
ss
jo
subb
movsl
test
mov
cwtl
mov
xchg
adc
fistpl
repnz
and
sahf
in
movsl
rorl
fisttps
xor
imul
roll
fcmovnb
aad
push
xchg
out
int3
push
jb
push
ficomps
xchg
jp
fimuls
imul
sbb
adc
mov
pop
and
lcall
or
add
xor
data16
aam
xchg
dec
jle
mov
adc
fimull
insl
mov
lcall
pop
loopne
mov
loopne
test
pop
aaa
outsl
inc
pop
or
mov
inc
cmpsl
leave
mov
les
bound
push
sub
sbb
mov
mov
mov
xor
mov
sti
jmp
test
mov
std
inc
sbb
mov
out
popa
int3
insl
clc
add
ficoms
into
jle
cmp
push
jg
les
adc
mov
push
fwait
sbb
cmp
cwtl
xor
mov
mov
xor
pop
fcmovu
mov
pop
sub
ja
xor
cmp
ss
push
jne
lds
stos
aas
das
mov
sbb
push
repz
test
mov
test
inc
ja
push
and
sbb
stos
daa
stos
inc
sub
jb
nop
int3
jle
rol
and
in
in
jp
pop
or
jbe
mov
add
mov
adc
pushl
leave
ret
daa
cmp
sub
fcom
aam
xlat
pop
in
mov
push
add
or
mov
mov
mov
push
fidivs
iret
mov
push
mov
ficoms
add
jp
pop
sahf
pop
mov
scas
mov
cltd
ret
sub
sarl
pop
jno
cmp
dec
fdivrl
add
ds
dec
pop
mov
movsl
xchg
jbe
xor
outsb
mov
clc
testl
or
arpl
jo
or
ret
xchg
jae
push
lods
orl
dec
rolb
inc
outsb
imul
or
lods
jnp
orb
xor
jge
dec
rolb
xchg
fidivrs
sbb
out
mov
dec
shll
jnp
js
and
arpl
mov
and
pop
mov
insl
leave
push
bound
in
fildl
pop
sub
mov
je
mov
dec
inc
and
or
sub
push
pop
stos
pop
lock
loop
div
jnp
inc
adc
push
or
push
mov
mov
repnz
in
mov
push
fcmovu
add
call
sbb
fwait
xchg
push
mov
push
jecxz
movsl
or
sti
out
pusha
push
das
inc
fisttps
jnp
mov
mov
cmp
ljmp
adc
roll
lods
pop
and
jp
call
out
sarb
fldt
cmp
mov
clc
inc
outsl
es
sbb
pop
push
call
dec
add
fisttps
inc
push
mov
pop
cld
xchg
lcall
mov
lret
xchg
outsl
divps
dec
jp
mov
sub
fdivr
cmpsb
push
push
mov
pop
jecxz
cmpsb
arpl
iret
or
loopne
test
sti
or
fldcw
sub
or
mov
dec
cltd
cmp
cmp
out
jmp
ljmp
aaa
jbe
xchg
hlt
subl
call
loopne
ret
xchg
in
xor
dec
ret
das
cwtl
jbe
je
push
or
sti
out
sbbl
sbb
repnz
jnp
rol
jl
mov
shr
pop
and
ja
mov
xor
lahf
repz
pop
cmpb
push
xchg
in
adc
insl
icebp
stos
test
mov
bound
ret
fidivrl
fidivrs
in
shl
and
faddp
int3
scas
fs
add
js
add
bound
rcrl
vpsraw
shll
pop
xchg
pop
sbb
mov
sub
adcl
dec
xchg
mov
aaa
lock
push
or
push
fmuls
std
sbb
sbbb
not
add
dec
cmp
push
add
stc
add
iret
dec
xor
add
lret
pop
jo
inc
adc
mov
dec
jle
sbb
xor
add
mov
mov
mov
push
outsb
orb
cwtl
push
out
fadds
fdivl
push
push
and
and
imul
les
xor
dec
mov
fwait
add
or
mov
mov
mov
add
jnp
ljmp
ss
dec
test
mov
in
out
mov
test
jge
insb
add
fidivl
jl
push
pop
mov
stos
jne
jne
cld
mov
inc
xor
idivl
dec
and
add
xor
dec
int
scas
sbb
xchg
nop
or
adc
and
or
aaa
push
dec
cmpsb
and
arpl
jmp
test
jecxz
insb
or
inc
inc
sub
cmp
mov
jmp
pop
or
inc
subl
test
pop
popl
or
jmp
test
jnp
add
push
negl
cmp
or
cs
adc
into
mov
cmp
xlat
movb
add
adc
push
add
daa
xor
arpl
or
fnstsw
fucomip
xor
sti
and
pop
das
xor
jle
pop
or
xor
sub
push
mov
dec
mov
and
add
iret
or
ja
cmp
xor
or
xchg
or
cwtl
iret
adc
add
ret
stos
sbb
or
mov
lds
sbb
ds
lea
pop
push
pop
add
iret
xor
dec
adc
inc
mov
lahf
adc
sub
or
adc
xchg
out
insb
dec
mov
or
mov
pop
mov
mov
and
aas
add
xlat
cmp
add
add
jg
outsl
int3
push
mov
add
xor
into
lcall
push
xlat
sbb
fbld
ds
pop
add
sbb
push
je,pt
iret
popa
or
dec
or
or
jo
in
mov
sbbl
mov
adc
iret
cmp
pop
cmp
ret
mov
push
or
xor
js
add
popf
jge
movsl
xor
pop
repz
cmp
out
jbe
push
sarl
or
fsubrs
cltd
cmp
push
xchg
int
lret
add
jge
cmpsl
pop
scas
cmp
mov
mov
push
sbb
mov
push
fincstp
or
inc
lcall
ret
push
iret
rcr
enter
and
js
flds
add
out
sbb
cmp
addr16
cmpsl
aaa
xchg
mov
outsb
jnp
daa
jmp
lret
xor
cmp
sub
out
cmp
cmp
pop
sbb
or
cmp
cmpsl
jns
ja
ffree
dec
jnp
dec
cmp
xor
mov
sbb
adc
cmp
lock
cli
cmp
add
xchg
out
or
xchg
test
and
stc
arpl
pop
or
pop
push
ud2
push
or
pop
jnp
ja
add
mov
fcomp
neg
jae
xchg
inc
sub
negb
pop
sbb
scas
xor
cld
sahf
or
jecxz
pop
adc
mov
out
repz
xor
cmp
push
and
sbb
xchg
cli
push
add
sbb
icebp
sbb
inc
adc
pop
mov
push
out
or
aas
add
or
add
out
adc
cwtl
add
mov
es
aaa
jbe
lea
push
push
pop
add
mov
fcomps
inc
sldt
outsl
sub
jae
out
mov
in
mov
mov
mov
test
mov
add
arpl
daa
adc
jecxz
popf
xor
or
push
push
mov
rcll
jl
pop
bound
push
loope
add
add
out
xor
adc
adc
adc
or
sbb
mov
out
sbb
dec
xor
pop
add
push
mov
push
dec
push
sub
mov
testl
mov
enter
adc
add
loopne
cmc
xor
fwait
insl
aad
in
adc
fmul
pop
push
cmp
push
inc
cwtl
adc
adc
sbb
jno
mov
sbb
adc
in
call
add
mov
mov
rolb
dec
cltd
fisttps
or
or
mov
cmp
jbe
add
aaa
mov
push
cmp
or
loope
mov
es
or
ret
add
pop
divb
ja
sub
scas
push
movsb
jle
rcll
mov
mov
sub
mov
dec
insl
mov
dec
xlat
cmp
and
mov
sbb
and
xchg
lcall
mov
in
aaa
mov
or
pop
adc
call
cmp
popa
mov
sub
dec
or
jge
dec
dec
add
ds
mov
ret
out
idivl
les
pop
insl
arpl
push
push
sbbb
add
inc
sbb
mov
data16
dec
xor
fnsave
xchg
mov
add
and
gs
xchg
icebp
dec
andnps
aaa
fsubs
out
adc
mov
fbld
cmp
push
test
andl
stos
fwait
test
ret
cli
lcall
iret
cltd
outsl
xor
leave
push
ret
jo
int
nop
mov
xchg
jecxz
add
or
jnp
insb
es
xor
or
fnstcw
push
adc
lea
cmp
outsl
mov
sbb
ljmp
dec
inc
fs
sub
push
fwait
xchg
clc
or
mov
add
mov
or
ja
scas
cs
and
imul
popa
and
mov
cmp
jmp
insb
xchg
mov
or
iret
insb
popf
push
cmp
fistpll
ret
inc
negl
xchg
data16
xor
mov
aas
aas
fmull
stos
pusha
pop
inc
mov
xchg
mov
and
fnstenv
fldenv
cmp
mov
imul
add
jg
push
mov
imul
xor
push
dec
sbb
jbe
pushf
jge
mov
test
outsl
insb
or
and
movsb
or
out
insl
mov
adc
adc
pop
pop
sub
push
lret
into
pop
add
int3
push
lea
and
pop
mov
fldcw
or
lea
lahf
fcoms
or
inc
lret
adc
sbb
sbb
mov
jle
std
jno
ret
fimuls
test
outsb
mov
jnp
es
inc
xchg
mov
dec
insl
jp
or
mov
cmp
push
and
imul
mov
ss
call
or
xlat
inc
and
leave
push
daa
push
rorl
fdivs
xchg
mov
xor
mov
or
push
mov
mov
data16
and
out
int
fsubrs
push
lods
sbb
jo
or
daa
jl
shr
in
pop
push
inc
ja
dec
push
add
push
popf
and
and
or
xchg
loope
clc
je
xor
and
xchg
sbb
in
xor
inc
push
insb
call
or
mov
arpl
xchg
lock
add
sub
in
and
ret
mull
or
and
add
mov
cmp
pop
fisubrl
push
mov
or
jbe
nop
fiadds
cld
and
add
adc
sub
inc
pop
sahf
insb
dec
outsl
xor
cmpsb
stos
shlb
sbbb
scas
aaa
jp
fisubs
mov
mov
adc
aaa
add
inc
sbb
inc
negb
cmp
cmp
sub
mov
mov
push
test
loopne
test
or
enter
sbb
cmp
cmp
addb
jg
in
imulb
aaa
and
cmp
ja
scas
mov
ret
pop
adc
fldl
push
mov
insb
xchg
jae
cmp
cmp
jb
jo
and
dec
or
adc
imul
or
pop
sarl
fdivs
push
popf
popf
pop
aaa
and
jecxz
or
add
popf
sbb
or
sbb
ss
mov
sarb
push
paddw
dec
into
sahf
and
or
daa
int
das
mull
je
fcmovnbe
jns
push
sbb
sub
and
xchg
rorb
arpl
inc
test
adc
test
xchg
jmp
adc
jle
addr16
dec
pop
push
addr16
xchg
dec
dec
nop
push
push
add
sbb
xchg
xchg
dec
jo
test
lds
dec
xor
ret
sub
or
mov
js
mov
jg
std
je
adc
aaa
fsubs
std
mov
scas
sub
orb
in
sbb
mov
aam
xchg
notb
fprem1
imul
popa
or
aam
push
ret
dec
xchg
out
lea
sbb
or
imul
adc
and
inc
push
xchg
or
pop
aaa
pop
arpl
bound
adc
push
sbb
adc
xchg
cltd
sbb
add
arpl
push
add
jno
arpl
cli
inc
inc
and
inc
xor
mov
pop
jno
cmp
pop
push
and
and
mov
int3
mov
aaa
dec
dec
pushf
dec
ret
xor
cmp
add
xchg
xchg
cmp
sub
adc
pusha
shll
mov
fdivr
pop
add
cli
mov
leave
pusha
fwait
shlb
adc
movsb
pop
push
adc
lret
dec
dec
push
lsl
push
ja,pt
mov
cmp
mov
pop
and
loope
sahf
outsb
and
jne
adc
mov
int3
adc
adc
dec
pushf
mov
push
cmp
push
xor
xchg
mov
fdivrs
fadd
aas
push
and
out
cmp
scas
mov
and
repz
aas
out
insb
xchg
and
out
push
fcompp
imul
out
sbb
movsb
and
xorb
xchg
out
and
sarb
test
inc
and
mov
popf
jns
mov
or
sbb
and
fiadds
xchg
popa
push
add
adc
or
jmp
mov
push
fdivrs
lods
push
jmp
xchg
push
fsubrp
mov
inc
mov
dec
mov
and
movsb
lea
push
push
jmp
fistl
add
mov
lods
inc
push
and
mov
or
push
jecxz
es
jmp
adc
sbb
int3
and
mov
xorb
pop
jb
in
pop
dec
clc
add
push
bound
cwtl
sbb
xchg
rorl
inc
and
loope
or
dec
lods
sub
mov
ja
cmp
test
lods
mov
arpl
jnp
int3
push
mov
or
aaa
push
addl
addr16
inc
cmp
negb
shll
inc
mov
add
fstenv
ret
shlb
aaa
test
pop
sti
fiaddl
mov
push
sbb
add
sbb
pop
imull
syscall
hlt
xchg
pusha
loop
push
and
leave
xchg
push
aas
in
mov
arpl
fisubrl
or
add
mov
movb
cmp
push
add
add
je
lods
push
push
push
pop
inc
add
cmpsl
stc
add
prefetch
mov
mov
bound
or
out
add
leave
sub
or
fs
cmp
jb
fnstcw
mov
pop
or
jb
mov
sub
sbb
jae
adc
add
add
or
mov
or
jno
xor
add
dec
repz
pushw
aas
test
mov
sbb
test
lahf
int
lea
lds
lret
adc
fbstp
jl
bound
push
and
jp
xlat
repnz
arpl
add
add
addr16
adc
add
mov
xorb
or
rcr
testl
jae
adc
add
push
inc
or
stc
pop
add
xor
jmp
add
sti
bound
ret
cli
movb
add
out
push
mov
fildl
add
add
pusha
xor
andb
aam
sti
pop
adc
sbb
or
xor
sbb
push
xor
mov
add
jo
imul
int
inc
dec
or
sbb
sbb
push
mov
dec
add
lods
mov
dec
dec
inc
mov
inc
rclb
mov
push
push
and
sbb
push
inc
add
cmp
push
dec
xor
aam
bound
addr16
bound
in
mov
mov
sbb
dec
ss
int
pop
sbb
inc
add
push
in
jnp
add
outsl
outsb
push
test
jge
xor
add
mov
sbb
dec
jb
push
adc
js
mov
bound
mov
xlat
pop
imul
xor
sub
push
jmp
and
add
adcb
inc
add
in
cmp
jg
lock
sahf
jae
nop
out
jg
imull
outsl
or
subb
in
sbb
mov
cmp
xor
je
js
add
fistl
dec
jae
add
dec
add
dec
dec
jbe
jg
add
add
cmp
jle
mov
mov
push
sub
sbb
mov
outsb
add
daa
inc
and
dec
push
adc
data16
dec
jb
out
dec
add
xchg
scas
mov
or
push
lea
mov
arpl
adc
or
iret
out
pusha
imul
arpl
pop
ja
jb
jae
adc
std
cmpl
xchg
fdivs
data16
mov
pop
jnp
mov
jns
mulb
cwtl
lock
outsb
push
dec
out
mov
pusha
out
lds
add
xchg
jnp
and
mov
push
add
nop
add
xchg
pop
repnz
xchg
xchg
or
je
lret
jg
adc
shlb
push
outsb
dec
and
or
jl
into
xchg
je
jge
add
rol
push
pop
adc
sub
inc
push
andl
data16
mov
outsb
push
fisubl
sbb
lods
inc
mov
inc
push
or
into
cwtl
xor
out
or
push
add
push
xor
or
gs
xor
sbb
addr16
ja
arpl
mov
shlb
and
adc
jnp
and
jp
sbbl
xchg
mov
add
add
lcall
ret
insl
aaa
outsb
cld
adc
adc
pop
sbb
incb
inc
mov
insl
addl
and
mov
add
es
cltd
sbb
test
pop
inc
add
jle
xchg
xor
data16
dec
sbb
xor
jo
jp
jnp
sti
mov
cmc
or
popa
push
xlat
push
daa
mov
sbb
addr16
out
add
sbb
imul
ja
mov
mov
jg
adc
or
jo,pt
and
out
push
inc
dec
push
mov
in
divb
dec
inc
mov
xchg
fwait
mov
xorl
inc
dec
xor
je
outsb
mov
addb
push
hlt
ljmp
xchg
and
lcall
xchg
xchg
xorb
lods
scas
ret
aaa
je
int
outsb
jl
arpl
icebp
js
mov
mov
notb
jg
sbb
inc
xor
pusha
dec
mov
push
xchg
xchg
push
popf
jg
add
push
sbb
and
pop
shl
icebp
pusha
add
or
popf
pushf
mov
sbb
xchg
sbb
pop
dec
dec
or
dec
or
pop
push
xchg
jo
sub
movsb
outsb
arpl
dec
and
and
movsb
test
and
or
cmp
jnp
pusha
mov
jb
jnp
ret
sub
add
push
call
dec
imul
jne
dec
das
lds
aad
cmpsl
fistpll
test
mov
js
and
and
ret
std
arpl
pop
addl
pop
dec
lret
xor
pop
add
add
pop
jecxz
pusha
and
loope
dec
ss
aas
lds
shl
and
xlat
inc
sbb
dec
test
and
dec
lds
xlat
shlb
ficoms
cwtl
sub
dec
xchg
inc
mov
ss
and
xorps
nop
dec
push
faddl
fstp
push
inc
ljmp
lock
lock
or
mov
ficomps
dec
fwait
lea
inc
push
jmp
adc
nop
or
in
stc
movsb
test
imul
aaa
dec
jae
xchg
dec
xchg
xor
in
sbb
sbb
xchg
andb
add
jno
inc
popf
adc
push
fs
jae
movsl
sbb
je
daa
loop
js
pop
pop
rcll
pop
inc
icebp
ss
scas
push
and
stos
inc
xlat
cmp
mov
stos
xor
inc
cltd
or
mov
dec
push
outsb
aaa
mov
jo
fs
popa
out
daa
outsl
cmp
mov
inc
jmp
dec
bound
popf
inc
sbb
inc
push
pop
inc
sub
add
jle
mov
cs
mov
xchg
imul
push
mov
cmpl
xlat
mov
sbb
ljmp
mov
pop
loope
dec
push
or
dec
dec
dec
sub
sbb
and
mov
adc
je
xchg
dec
lahf
sti
sub
rolb
dec
inc
pop
xchg
or
fildl
js
mov
pop
mov
movsl
addl
or
inc
js
add
jb
mov
mov
rolb
inc
xor
push
jg
xchg
popa
dec
pop
push
outsb
and
pop
or
test
inc
sbb
sub
pop
je
dec
push
push
js
aaa
dec
sbb
sbb
dec
mov
and
pop
inc
scas
lds
xor
dec
xor
stos
pusha
adc
pop
sti
outsb
xchg
daa
mov
xchg
out
jo
push
jp
inc
dec
push
outsb
dec
mov
out
lea
push
add
xchg
dec
dec
es
inc
mov
fnstenv
dec
pop
js
adc
or
fimull
aas
inc
sbb
or
pop
sti
mov
sbb
insb
mov
ret
mov
mov
arpl
inc
jnp
jb
imul
push
inc
inc
jns
sub
stos
aaa
mov
dec
add
push
pop
icebp
outsb
push
fstpt
adc
pop
adc
insl
push
mull
jno
jae
mov
dec
inc
pop
inc
pop
les
out
pusha
fbstp
cmc
jb
jae
and
pop
imul
push
push
ja
mov
inc
testb
push
mov
cmpsb
andl
lods
loopne
sub
ret
scas
mov
inc
push
daa
push
mov
mov
push
scas
stos
adc
mov
insl
jno
popa
fs
orb
xor
mov
inc
data16
subb
in
dec
jne
out
shrb
inc
jo
in
rorl
clc
mov
push
popf
fistpl
mov
dec
push
std
push
mov
popf
add
stc
popf
addb
push
dec
and
dec
in
rolb
lcall
inc
push
nop
in
data16
pop
add
fdivs
sub
shll
add
adc
mov
outsl
out
fnstenv
inc
and
mov
ret
dec
dec
pop
inc
fwait
jge
mov
push
push
std
cmp
notb
push
dec
or
ds
push
pop
sbb
push
jnp
xor
popa
xor
inc
cmp
pop
mov
and
outsb
inc
jnp
mov
lea
lock
into
adc
int3
adc
push
ret
cltd
sub
cmp
mov
outsb
ss
dec
imul
xor
lock
mov
push
xor
add
mov
sti
pop
test
xorb
scas
push
or
adc
lods
add
jp
in
push
fsubs
add
xor
sbb
sbb
aas
in
xchg
mov
popa
adc
insb
inc
and
and
inc
ja
sub
push
push
gs
arpl
xchg
test
adc
and
jo
data16
mov
dec
and
sti
lds
mov
add
int3
stos
dec
loop
imul
add
or
popa
mov
gs
stos
add
sub
lret
or
xor
and
pop
jno
xchg
mov
inc
nop
repnz
push
pop
add
add
adc
add
rol
pusha
mov
push
and
push
and
pop
pop
add
test
imul
fnstenv
sti
mov
sub
aas
add
test
in
cmp
add
cmp
push
leave
lock
repz
fidivs
add
inc
push
test
out
repnz
add
bound
daa
movsl
add
cwtl
xor
push
std
sbb
sbb
sbb
jge
mov
sbb
fwait
or
fidivs
insb
and
shrb
add
je
inc
shll
push
pop
adc
lock
adc
sbb
adc
xor
pop
adc
add
sbb
cmpsl
mov
pop
adc
push
add
call
add
fnstenv
push
cmpsl
mov
dec
fstps
xor
xlat
lds
push
mov
jo
add
out
fsubs
mov
inc
clc
cmp
sbb
enter
test
adc
inc
test
es
and
jae
test
fstps
test
testb
push
dec
dec
push
jno
inc
adc
lods
dec
js
lods
addr16
and
test
in
or
dec
pop
adc
xor
push
jg
lods
test
xor
push
sub
in
dec
aas
ss
sub
or
es
pop
jp
lret
mov
add
mov
das
outsl
inc
inc
xor
add
daa
or
push
sbb
adc
xor
dec
dec
pop
xchg
jbe
push
xor
push
or
aas
and
call
inc
in
sbb
insl
sbb
adc
pop
lds
jo
mov
sahf
int
push
inc
pop
push
push
add
push
inc
out
sbb
scas
jnp
scas
js
dec
sbb
insb
popa
push
sub
pop
sbb
sbb
or
inc
or
push
int
sti
push
dec
mov
dec
imul
dec
pop
mov
mov
ss
add
jne
add
loope
mov
inc
add
pop
outsb
inc
xor
ret
jl
aam
out
test
icebp
ljmp
out
pop
cmp
imul
aaa
sub
lds
shl
inc
xor
fldz
jo
adc
inc
dec
divb
scas
sbb
fisubs
push
and
mull
inc
mov
or
cmp
mov
ret
dec
adc
xchg
xor
cmp
dec
clc
or
mov
fcoml
adc
push
sub
inc
inc
dec
stos
cmp
es
or
fsubr
sarb
stc
inc
add
addr16
jl
enter
aaa
sub
cmp
add
add
pop
pop
mov
inc
inc
dec
pop
lock
sbb
mov
mov
mov
sbb
dec
test
and
push
popl
popa
sbb
fldenv
xchg
add
xchg
add
faddl
fldl
or
push
push
cwtl
out
lock
sbb
mov
adc
xchg
add
sbb
mov
pop
or
mov
mov
sub
or
mov
mov
lods
lds
test
sbb
mov
fldt
test
inc
sub
call
xchg
aaa
ss
shrb
pop
sub
pop
sbb
fmul
lcall
jns
lods
test
mov
and
and
pop
xor
daa
xchg
repnz
fsts
add
aaa
add
cltd
in
adc
inc
add
flds
xchg
loop
idivb
and
push
pop
mov
in
sub
dec
inc
and
xor
add
jnp
jb
out
sahf
and
iret
inc
fstpl
aaa
fs
cmovne
adc
in
or
movaps
cmp
flds
jb
dec
inc
pop
pop
insl
dec
and
jge
xchg
cmp
pop
mov
ret
in
sahf
addr16
inc
out
nop
xchg
sbb
push
inc
push
inc
lret
das
xor
fwait
pop
inc
das
pop
fldenv
in
addb
or
cmp
jno
push
insb
rclb
call
pop
xor
xchg
aas
daa
push
pop
or
rclb
sub
jne
nop
or
xchg
movsb
inc
mov
inc
enter
nop
ficompl
in
inc
aaa
pop
fldenv
in
adc
and
add
pop
inc
inc
repnz
pop
xchg
pop
enter
inc
jns
jnp
mov
lahf
pop
and
push
aad
hlt
test
adc
add
lgdtl
in
sub
sbb
fadd
scas
fsts
repnz
aaa
push
mov
inc
dec
sub
dec
xchg
push
fildl
xchg
or
add
xchg
add
mov
xor
fcoms
push
repnz
nop
pop
enter
enter
xchg
lret
cvtpi2ps
test
gs
sahf
or
xchg
lcall
dec
sbb
cmpsl
mov
lcall
movsb
mov
aam
mov
insb
lret
add
orb
dec
inc
cmc
insb
pop
inc
imul
adc
xchg
inc
mov
add
dec
nop
push
in
test
dec
pop
mov
outsb
adc
nop
push
add
add
inc
lea
mov
lret
adc
aam
add
add
jg
push
push
push
jb
je
arpl
lret
and
adc
or
inc
js
xorps
jl
gs
je
imul
test
lds
mov
mov
jne
gs
popa
outsb
fs
push
imul
sub
sbb
xchg
mov
ss
sti
fadds
outsl
insb
imul
shrl
insl
inc
popa
int
fldt
push
jae
inc
and
popa
sub
push
imul
adc
inc
jbe
enter
mov
jb
push
outsl
inc
add
subb
adc
xor
mov
mov
adc
mov
push
gs
enter
sbb
xchg
rorl
push
or
inc
data16
inc
push
dec
gs
fcom
ss
or
cld
dec
jns
lcall
push
ljmp
fistpll
dec
gs
lock
xor
scas
adc
aas
inc
mov
xor
insl
or
fidivrs
shrl
mov
jo
je
inc
adc
idivl
cmp
das
push
sbb
jae
xor
add
or
dec
outsb
mov
jne
inc
lahf
lret
push
xor
je
idiv
and
aas
inc
insl
jo
or
inc
dec
sub
xor
push
push
inc
in
into
jge
fwait
jo
dec
imul
das
pusha
fistl
fs
test
inc
js
test
jne
push
jae
and
lock
popa
out
mov
or
inc
out
lods
ja
jl
inc
push
or
int3
imul
inc
inc
adc
bound
gs
push
jae
mov
mov
jno
adc
and
push
decb
repnz
dec
add
add
pop
inc
sub
add
sbb
push
add
adc
jae
adc
orb
or
add
pop
in
popf
and
cmp
cs
outsb
xchg
int
xor
add
add
jmp
nop
add
lahf
or
add
inc
dec
inc
inc
xor
fildl
add
and
pusha
pop
ja
repz
inc
push
inc
mov
pop
insb
jbe
inc
mov
push
push
or
test
add
and
add
andb
inc
mov
cltd
sti
nop
daa
add
sub
push
jae
es
gs
jo
inc
push
daa
xchg
add
pushl
pop
jae
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
