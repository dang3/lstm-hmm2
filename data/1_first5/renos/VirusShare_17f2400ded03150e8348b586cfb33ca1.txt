jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
arpl
xor
fs
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
movl
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
mov
pop
ret
add
xor
cmp
xor
add
add
add
xor
xor
xor
xor
add
xor
cmp
cmp
cmp
add
add
xor
xor
xor
xor
add
xor
xor
cmp
add
push
mov
add
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
call
movl
mov
mov
mov
push
mov
push
call
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
movl
movl
mov
push
mov
push
call
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
call
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
movl
movl
mov
push
mov
push
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movl
mov
mov
mov
push
mov
push
call
call
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
movl
lea
push
mov
push
call
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
mov
pop
ret
xor
xor
xor
cmp
xor
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
push
mov
add
mov
mov
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
mov
cmp
je
jmp
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
mov
xor
divl
test
jne
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
mov
cmp
je
jmp
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
mov
sub
mov
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
push
mov
mov
xor
call
mov
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
mov
mov
mov
call
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
push
mov
mov
xor
call
mov
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
mov
mov
movb
movb
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
lea
mov
push
add
jmp
mov
mov
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
lea
mov
push
mov
jmp
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
mov
sub
add
add
mov
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
mov
cmp
je
jmp
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
mov
mov
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
mov
mov
movl
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
mov
pop
ret
nop
push
cmp
testb
pop
sbb
addb
jle
sbb
jnp
pop
cmpl
jae
jb
sbb
dec
subl
jle
insb
andl
dec
subl
jle
insb
ja
sbb
pop
subl
insb
jae
sbb
pop
ja
dec
insb
cmpl
insl
insl
sbb
test
xorb
sub
jbe
jle
sbb
sbb
sbb
sbb
sbb
jle
jle
sbb
sbb
inc
movsl
popf
repnz
movsb
push
icebp
popf
repnz
icebp
ss
push
inc
pop
sbb
inc
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movsl
push
repnz
push
dec
frstor
jecxz
enter
mov
push
fstp
movsl
fcmovu
lahf
pop
sbb
lahf
pop
sbb
popf
loop
push
and
into
dec
test
push
loop
pop
inc
dec
movsl
push
loop
pop
and
push
loop
dec
pop
movsl
push
loop
pop
and
loop
pop
ss
movsl
push
loop
pop
cmp
push
decb
push
loop
dec
push
movsl
push
mov
pop
sub
sbb
movsl
pop
out
mov
movsl
pop
cs
ljmp
sbb
mov
rcrb
xchg
int
sbb
movsl
push
shlb
mov
sbb
sbb
movsl
pop
push
sbb
push
loop
dec
mov
add
and
movsl
push
popf
xor
adc
sbb
mulb
or
cli
add
movsl
pop
or
mulb
or
cli
add
call
push
movsl
push
mulb
sbb
dec
movsl
push
add
push
loop
dec
xor
add
movsl
inc
negb
movsl
push
lret
sbb
movsl
push
add
push
loop
dec
xor
popf
push
cli
push
popf
push
notb
movsl
push
negb
popf
push
movb
push
popf
jb
sbb
xchg
das
icebp
icebp
icebp
movsl
push
ljmp
mov
loop
pop
mov
fisubs
pop
sbb
ficompl
dec
movsl
push
fimuls
push
loop
dec
push
sbbb
sbb
test
movsl
push
loop
pop
cmp
push
loop
dec
inc
sbbb
sbb
test
movsl
push
and
push
loop
dec
inc
movsl
inc
repnz
ja
lahf
xchg
ss
icebp
icebp
test
xor
addr16
fwait
sbb
icebp
icebp
sub
icebp
cld
movsl
testl
pop
sbb
jp
and
out
lods
lcall
jg
sbb
insl
call
sbb
sbb
sub
add
sbb
insl
cmp
or
popa
sbb
sbb
fisubrl
addr16
add
sbb
inc
shll
add
sbb
pop
or
add
cli
and
sbb
sbb
sbb
lcall
jno
sbb
pop
xchg
mov
mov
add
pop
movsb
or
int3
jecxz
add
icebp
icebp
icebp
or
add
icebp
icebp
icebp
insb
in
fnstsw
fsubl
sbb
mov
icebp
icebp
sub
in
shlb
loop
leave
fisttpll
repnz
icebp
mov
and
pop
sbb
fcoms
and
pop
sbb
fcoms
sbb
movsb
inc
cmc
mov
sbb
push
cmc
lcall
push
hlt
sbb
icebp
icebp
icebp
bound
repz
xchg
movsb
sbb
sbb
push
cmc
sbb
movsl
inc
out
movsb
push
sbb
int3
movsb
inc
cmc
mov
icebp
icebp
lock
hlt
movsb
push
hlt
xor
repz
fcoms
sbb
push
cmc
lcall
push
hlt
sbb
push
cmc
sbb
sub
and
icebp
icebp
sbb
inc
cmc
and
sbb
sbb
mov
movsb
push
cmc
movsb
lcall
repz
movsb
inc
repz
sbb
push
cmc
lcall
testl
movsl
decb
push
icebp
sub
pop
sbb
icebp
sbb
sbb
fidivrl
sub
ficompl
and
sbb
sbb
mov
sub
pop
sbb
mov
mov
movsb
lcall
movsb
pop
and
pop
sbb
sbb
pop
sbb
ficompl
sub
pop
sbb
test
push
ficompl
sub
ficompl
and
sbb
sbb
mov
movsb
push
out
movsb
lcall
icebp
mov
lock
dec
fldl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
push
call
mov
lea
mov
subl
movb
movb
movb
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
mov
mov
call
mov
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
mov
mov
call
mov
cmpl
je
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
lea
push
push
mov
sub
push
mov
push
call
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
mov
cmp
je
mov
subb
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
xor
add
mov
xor
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
incl
mov
cmp
jne
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
mov
call
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
mov
push
mov
push
call
cmpl
je
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
push
mov
pushl
xchg
push
jmp
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
mov
pop
ret
imul
gs
xor
cs
insb
add
add
push
mov
add
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
cmpb
jne
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
movb
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
push
call
mov
mov
mov
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
jmp
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movb
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
mov
mov
pop
ret
add
popa
fs
jae
js
cs
insb
and
add
push
mov
add
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
call
test
jne
mov
jmp
movw
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
movl
movl
mov
push
mov
push
call
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
movl
lea
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
movl
lea
push
mov
push
call
call
movl
lea
push
mov
push
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movl
movl
mov
push
mov
push
call
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
movl
mov
mov
mov
push
mov
push
call
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
movl
mov
push
mov
push
call
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
mov
mov
mov
push
mov
push
call
call
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
movl
lea
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
push
call
mov
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
movl
movl
mov
push
mov
push
call
cmp
jp
mov
lea
mov
mov
mov
lea
lea
mov
lea
xchg
mov
xchg
mov
mov
xchg
dec
dec
movl
lea
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
movl
lea
push
mov
push
call
call
movl
lea
push
mov
push
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movl
movl
mov
push
mov
push
call
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
movl
mov
mov
mov
push
mov
push
call
call
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
movl
mov
push
mov
push
call
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
mov
mov
mov
push
mov
push
call
call
cmp
jno
mov
lea
mov
mov
mov
inc
dec
mov
mov
xchg
lea
sub
lea
lea
xchg
mov
dec
inc
movl
lea
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
call
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
mov
pop
ret
add
add
add
add
add
xor
cmp
xor
xor
xor
add
add
add
xor
xor
cmp
xor
add
ss
xor
xor
add
cmp
xor
cmp
xor
xor
cmp
xor
aaa
add
add
add
jae
jae
js
cs
insb
add
add
push
mov
add
movl
lea
push
mov
push
call
cmp
jge
xchg
jmp
lea
mov
mov
mov
mov
dec
inc
mov
mov
lea
mov
mov
mov
mov
dec
inc
dec
call
call
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
movl
movl
mov
push
mov
push
call
call
add
cmp
jle
mov
lea
mov
inc
jmp
lea
xchg
lea
dec
mov
xchg
lea
xchg
mov
lea
lea
mov
mov
movl
movl
movl
lea
push
mov
push
mov
push
mov
push
call
cmp
js
lea
mov
mov
lea
lea
mov
mov
add
dec
inc
mov
mov
mov
lea
dec
inc
inc
lea
mov
dec
movl
mov
mov
mov
push
mov
push
call
call
call
cmp
jl
lea
mov
xchg
mov
mov
jmp
mov
mov
xchg
dec
inc
inc
xchg
lea
xchg
mov
xchg
inc
movl
lea
push
mov
push
call
cmp
jb
dec
inc
inc
inc
dec
dec
cmp
jo
cmp
jns
mov
xchg
lea
mov
mov
lea
lea
xchg
dec
inc
inc
xchg
inc
inc
inc
dec
movl
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
xor
add
xor
xor
xor
add
add
xor
xor
add
add
add
jae
mov
lea
cmp
jb
mov
mov
jmp
xchg
xchg
mov
lea
inc
dec
mov
xchg
mov
mov
xchg
lea
dec
mov
mov
lea
call
mov
cmp
jnp
mov
sub
dec
lea
mov
lea
mov
mov
mov
mov
mov
xchg
xchg
dec
inc
inc
ret
ret
lea
movb
pop
add
add
loopne
add
or
adc
test
into
xchg
or
mov
adc
lds
pop
cmp
std
add
shlb
sbb
sbb
rorb
aas
stos
add
call
rcrl
pusha
sbb
jecxz
xchg
pop
inc
mov
inc
mov
sbb
lret
add
stos
add
outsb
pop
mov
cmc
jl
mov
in
and
add
push
scas
sbb
or
or
add
dec
pop
or
and
stos
insb
cmp
out
loopne
adc
mov
popf
or
add
ds
jmp
add
or
add
out
add
scas
sbb
or
add
std
mov
mov
or
inc
add
cwtl
add
mov
mov
fcoms
or
add
mov
adc
jb
or
sbb
data16
addb
inc
into
ret
daa
dec
pop
cmp
add
add
add
stos
add
sub
mov
xorl
aam
xchg
adc
pushf
sahf
mov
add
xchg
xchg
inc
and
sbbl
xor
aam
mov
pop
adc
add
xchg
add
pand
mov
add
repz
push
test
imul
fsubp
xor
pop
sbb
mov
xchg
mov
push
lcall
pop
sub
add
jne
push
sub
push
add
add
adc
mov
push
fidivl
decb
pop
add
add
sbb
xorb
sub
add
inc
pusha
add
fwait
add
and
sub
call
xchg
lret
add
adc
add
fs
and
iret
daa
mov
add
adc
dec
inc
and
out
push
sbb
test
lret
xchg
cmp
add
jge
mov
pop
out
mov
cld
in
movsb
add
add
enter
cs
add
mov
bound
dec
outsb
loope
inc
push
out
add
add
imul
out
push
cmp
and
testl
ret
add
jo
xor
mov
push
ret
jbe
je
add
xchg
add
cwtl
and
mov
shll
and
xor
mov
je
add
add
xor
inc
mov
icebp
enter
pop
rolb
les
jnp
out
cmp
add
adc
adc
into
add
mov
lret
add
push
iret
shrl
xchg
loope
es
int
add
mov
lock
scas
push
jle
jge
mov
cmpsb
add
lahf
shrl
inc
cmpsb
js
nop
xor
add
add
jb
add
cmp
add
inc
or
add
mov
add
inc
xorb
jbe
loop
dec
push
pop
dec
mov
add
test
jo
popf
aas
inc
add
add
sub
add
xor
mov
mull
sbb
enter
mov
call
stos
lods
idivl
mov
add
jo
push
pop
aas
stc
ffree
add
es
cmpsb
sar
lods
add
loopne
add
adc
add
jnp
pop
cmp
dec
add
es
in
inc
jecxz
mov
js
ljmp
popf
mov
inc
adc
aad
stos
or
xchg
and
imul
shrl
int
sahf
adc
and
push
faddl
pop
mov
xor
ds
arpl
inc
arpl
test
inc
xchg
push
repz
negl
xchg
and
pop
test
pop
cld
xchg
fidivrs
add
adc
rcrb
repnz
mov
movsb
insl
mov
pop
jbe
mull
sbb
aad
aaa
cmp
or
pop
mov
aam
and
test
xor
sbb
popa
and
and
cmp
fstp
push
lock
lock
xchg
fstps
in
or
enter
daa
imul
sub
mov
inc
ds
in
xor
and
das
repnz
and
arpl
aam
test
mov
mov
pop
jmp
testl
leave
or
loope
and
faddl
pop
sub
sbb
adc
dec
outsb
cmp
xor
sbb
mov
dec
jmp
lods
cli
insb
push
popf
sub
int
imul
mov
enter
push
lcall
or
fistps
sahf
sbbl
addb
and
mov
ja
mov
ss
cmp
push
test
testl
sbb
cmp
and
mov
addr16
cmc
dec
hlt
jb
iret
mov
outsl
imul
mov
inc
sbb
adc
sbbb
addb
and
stc
stc
mov
ret
scas
adc
clc
mov
xor
imul
fwait
ds
sti
mov
fldl
out
mov
loopne
js
pop
mov
adc
loop
and
movsl
les
mov
xchg
pop
inc
ds
xchg
push
xlat
or
mov
or
in
js
shrb
or
xchg
aad
lcall
lods
gs
mov
icebp
jno
in
push
jecxz
in
jge
in
lea
mov
xor
adc
cmpsb
scas
dec
push
inc
add
pop
int3
lret
push
test
inc
sub
aas
aad
cmp
sbb
and
push
stc
rcll
out
notb
loop
fbld
cwtl
gs
jl
outsl
orl
adc
mov
repz
lds
adc
mov
aad
jbe
pop
pushf
xchg
cmpsb
icebp
sbb
cld
inc
ds
stos
mov
push
pop
out
icebp
test
pop
mov
sub
push
lret
mov
jne
dec
pop
xor
rcl
stc
cwtl
sub
sar
test
mov
mov
push
push
fcoml
test
sbb
add
or
jg
pop
pop
icebp
stos
adc
mov
les
pop
push
cmp
sub
gs
cmp
vstmxcsr
pop
in
lock
sahf
aad
dec
loope
test
repnz
push
nop
into
mov
shrl
aad
lods
jns
fwait
movsl
or
add
adc
pushf
pop
xor
mov
push
in
rorb
mov
sub
test
shlb
add
adc
jg
mov
cli
jge
dec
fnstenv
int
xor
or
bound
or
outsb
sbbl
push
out
xchg
mov
addr16
adc
mov
mov
insb
push
popa
jnp,pn
mov
jle
mov
pusha
cld
std
adc
sbb
xchg
jmp
outsl
dec
adc
push
ficomps
mov
jge
stos
jge
stos
jg
sub
lret
dec
or
xchg
cltd
imul
mov
mov
push
scas
adc
mov
iret
pop
stos
ret
add
rolb
hlt
mov
and
inc
lcall
rorb
movl
jge
xchg
fisubrs
int3
inc
lock
pop
xchg
shlb
sbb
sahf
adc
aaa
pop
and
movsb
dec
call
leave
add
popa
push
mov
pusha
jecxz
mov
in
ret
int3
jl
cli
fmull
jbe
xchg
add
fwait
sub
sub
negb
pop
push
jb
cltd
xor
jae
es
lock
and
push
push
mov
xor
in
out
mov
enter
daa
push
scas
int3
jno
xchg
pop
out
ds
dec
in
and
mov
pop
push
pop
sub
test
shrb
xor
call
leave
cmp
add
loop
pop
pop
mov
dec
loope
daa
rcr
in
mov
sub
out
idivb
xchg
pop
xchg
dec
push
or
mov
scas
xchg
popf
mov
and
and
daa
int
jno
sub
ja
pop
shlb
lcall
decb
insw
sahf
es
test
loope
in
xor
mov
pop
and
andl
adc
sub
ss
fcom
and
shrb
nop
cmp
fwait
push
or
jl
into
dec
mov
cmc
push
aad
xor
dec
shrl
in
loop
xchg
mov
adc
test
data16
lods
leave
pop
inc
mov
cmp
aaa
cli
sub
sbb
inc
mov
in
push
stc
imul
hlt
loopne
cmc
or
leave
enter
fs
adc
and
sbb
les
repz
or
jp
mov
shll
xlat
dec
xorl
lock
mov
mov
mov
outsl
inc
push
aaa
sub
dec
or
addl
cmp
das
ss
pop
push
dec
movb
mov
jno,pn
iret
add
adc
xchg
xor
sub
movl
sub
aas
je
xorb
push
dec
inc
das
pop
and
shll
add
cwtl
and
loope
outsl
push
inc
cld
xchg
test
jbe
arpl
mov
in
xor
dec
pop
das
loopne
cmp
dec
stc
inc
aam
xchg
xchg
jmp
aam
insl
jecxz
fs
cmpsb
jmp
cmpsl
or
mov
icebp
pop
or
rcll
mov
push
and
push
push
call
sub
insl
data16
push
mov
fiaddl
sub
rcr
dec
scas
clc
mov
xchg
cmp
jne
and
pop
ret
stos
add
ss
sub
push
adc
or
add
clc
cltd
dec
movsb
std
xor
out
outsb
mov
mov
imul
pminub
pop
js
sarl
inc
in
fwait
aam
and
clc
fwait
incl
sub
sar
cmp
mov
in
adc
push
pop
dec
mov
jmp
mov
scas
cmpsl
loope
sub
pop
inc
cmpsl
pushf
pushf
mov
imul
jne
stos
inc
mov
bound
mov
icebp
bound
sub
fdiv
pop
xchg
jae
cmp
out
inc
jbe
cmp
adc
addr16
data16
inc
repnz
mov
aas
in
insb
mov
xchg
xchg
jle
sbb
in
push
cmpsb
pusha
xchg
fdivrs
xchg
adc
ja
inc
jp
mov
sbb
out
bound
stos
repnz
and
lods
cs
mov
imul
jge
and
ds
pop
adc
adc
ja
iret
mov
pop
adc
hlt
aam
leave
arpl
insl
pop
or
in
jo
inc
push
mov
xchg
xor
das
cli
pop
shrb
data16
and
push
mov
mov
leave
jl
push
movsb
xorl
or
lret
jbe
cmp
and
jle
cmc
aaa
mov
dec
inc
add
push
inc
dec
gs
push
push
or
xor
into
pop
push
scas
iret
daa
sub
daa
sub
xchg
push
xchg
mov
add
add
mov
lcall
dec
pop
fldcw
pop
mov
into
stc
adc
fstl
pop
and
sbb
pop
add
push
ljmp
add
mov
xor
int
aaa
fsubr
js
pusha
adcl
scas
mov
sub
xchg
push
ja
sti
mov
outsb
pop
rorb
rolb
in
outsb
repz
xchg
and
or
in
push
mov
dec
adc
lret
jl
push
mov
pop
daa
sub
xor
loopne
dec
push
jmp
and
sbb
mov
sahf
leave
shlb
lea
mov
sahf
mov
sub
xchg
add
sub
add
fmuls
into
lret
cltd
shl
sarl
dec
fcmove
sub
sbb
outsl
daa
aam
loop
add
mov
fldenv
add
adc
sub
call
out
data16
pop
mov
xor
push
movsb
in
jno
or
sbb
cltd
gs
out
test
fs
test
incl
jb
jg
int3
repz
xchg
cs
popf
push
rcrb
pop
das
xlat
mov
test
lods
nop
cmp
pushf
bound
jmp
lds
rclb
mov
pop
popa
or
andb
cmp
fsts
and
je
jbe
jecxz
or
lea
mov
dec
xor
adc
jp
daa
mov
in
pop
adc
inc
add
pusha
adc
aas
adc
popa
jb
in
dec
mov
jle
shll
pop
mov
sub
push
loopne
cwtl
les
cmpl
jmp
mov
adc
jnp
inc
das
mov
jo
mov
imul
shll
lods
sub
insl
lret
dec
mov
mov
mov
xor
pop
mov
outsb
sbb
pop
fbstp
stos
adc
outsl
daa
call
sub
scas
pop
test
repz
inc
loope
out
mov
test
cli
push
iret
xchg
mov
cmp
popa
adc
iret
pop
insl
mov
stos
repnz
dec
xchg
jo
hlt
push
out
xchg
mov
add
cmp
cltd
cmpb
xor
inc
ret
mov
movsb
sub
test
int
xchg
mov
orb
add
push
fwait
and
add
push
ficompl
out
mov
in
mov
fidivs
testl
ja
orb
ds
mov
fcomps
dec
lahf
sbb
mov
pop
cmc
out
xchg
lea
jns
jp
xchg
ds
cmpl
out
jp
sub
subb
mov
jp
sub
mov
jmp
insb
daa
jle
jnp
cmp
xchg
mov
hlt
pusha
xor
and
push
xor
xchg
call
mov
and
push
jg
and
sub
push
sub
stos
gs
and
xor
imul
daa
scas
cmpl
mov
dec
popf
iret
sbb
add
dec
ljmp
pop
jbe
arpl
das
push
push
push
lcall
mov
cmp
sbb
pop
out
lret
arpl
insl
shrb
mov
ljmp
movsb
push
fstl
pop
cmp
jbe
mov
jge
xchg
mov
cmp
aaa
js
inc
or
add
jl
notb
dec
aam
and
cmp
xor
sub
push
and
push
add
insl
inc
inc
test
mov
mov
xor
push
cmp
mov
pop
int3
sti
sub
test
rcl
add
movsl
loope
pop
and
or
aam
mov
outsb
inc
add
std
adc
imul
dec
leave
pop
pop
mov
and
fcomp
shrl
or
push
mov
sub
sub
mov
shlb
push
jno
xor
cmp
mov
int
and
mov
lret
daa
mov
or
lcall
icebp
mov
lahf
ret
shl
insb
shrl
stos
in
add
aam
inc
jg
inc
jno
inc
fs
daa
adc
and
sbb
inc
pop
aaa
testl
jbe
mov
or
fildll
into
adc
xor
mov
ret
cmpsb
push
stc
push
xor
adcl
inc
inc
data16
lahf
fldcw
std
hlt
out
mov
xor
push
ds
fsubr
sbb
enter
test
popf
add
sbb
jmp
xor
ror
sub
or
pop
les
cs
xchg
pusha
mov
hlt
cmp
xchg
xlat
jecxz
sub
in
mov
or
xor
cs
outsb
push
nop
xor
dec
lret
inc
fldenv
dec
mov
je
or
cmp
fildl
call
int
cmp
adc
loope
dec
adc
insl
pop
mov
adc
shll
mov
into
jb
sbb
scas
mov
roll
out
mulb
mov
scas
cwtl
xchg
mov
rorb
movq
lret
mov
xchg
mov
inc
mov
mov
mov
scas
es
cmc
jmp
dec
pushf
insl
stos
cmpsl
lea
icebp
or
xchg
imul
push
lds
xchg
push
movsb
and
inc
dec
add
mov
shlb
jmp
sub
xchg
pop
test
cs
lock
hlt
push
fnsave
pop
clc
xor
xor
ljmp
je
sbb
in
out
in
jnp
xchg
mov
xchg
fisttpl
cmpb
scas
js
mov
xor
in
popf
mov
cmpsl
add
dec
push
add
test
stos
roll
insl
lods
clc
shrl
cmpsl
or
push
adc
ds
jae
outsb
lock
add
jns
fnstenv
or
dec
or
mov
mov
enter
lcall
ja
add
dec
xor
inc
aad
xor
xchg
mov
sti
pcmpeqw
loope
out
jne
pop
bound
mov
xchg
or
rolb
out
and
or
mov
lds
mov
insb
xchg
lret
and
mov
push
fbld
fbstp
dec
xchg
mov
jno
inc
nop
mov
repz
inc
xor
cld
mov
mov
stos
fdivs
pop
sbb
pop
or
scas
out
push
push
jmp
cmp
iret
jns
iret
ret
mov
hlt
push
arpl
jne
inc
or
or
loop
movl
inc
pop
xchg
jecxz
jb
pop
sub
pop
push
in
push
fiadds
loop
lds
add
mov
cmp
aam
movsb
cltd
cwtl
scas
push
test
das
jbe
push
xor
addb
aaa
lret
dec
and
fstpt
mov
dec
inc
xchg
xor
test
pop
scas
lea
cmp
dec
or
adc
adc
out
iret
lret
xlat
cmpsb
lock
in
movsb
dec
or
daa
mov
jmp
sub
in
sub
adc
and
mov
xchg
aad
lahf
popf
sbb
push
nop
imul
or
ret
fnsave
cmp
pop
pop
test
js
sbb
xchg
inc
mov
fsubr
jo
sub
push
outsb
pop
pop
icebp
adc
mov
and
pop
sbb
push
mov
mov
pop
push
test
fstps
mov
pop
cmp
cltd
ret
loop
dec
sbb
in
sahf
movzbl
xor
test
out
or
aad
mov
mov
call
jl
adc
inc
mov
cmp
add
testl
test
shll
aam
stos
repnz
or
loope
repz
iret
in
xor
lea
loop
jl
stc
and
push
adc
cmp
xor
test
clc
scas
mov
inc
cs
les
cltd
in
inc
and
ja
xchg
dec
icebp
sbb
or
sbb
lcall
adc
jne
les
push
cmp
out
sbb
cmp
pop
scas
sub
pop
les
popa
aam
cwtl
push
fs
sub
nop
push
cmp
inc
in
shl
and
je
repz
cmp
mov
xchg
lea
inc
call
dec
sbb
adc
rclb
out
dec
std
mov
fnstcw
inc
xchg
sbb
jb
sub
cmpsb
jecxz
and
cmc
cmpsb
rorl
insl
mulb
sub
jnp
loope
push
mov
jle
dec
test
fdivr
adc
bound
mov
xor
xor
or
outsl
add
aam
dec
test
mov
imul
mov
cmpsl
fs
mov
loope
bound
ret
mov
stc
and
loope
push
pop
lods
inc
xor
stc
clc
jnp
fstpl
les
loope
push
je
mov
cwtl
stc
cmpsl
clc
jo
rclb
into
jae
popa
inc
mov
shrl
mov
xchg
and
daa
psraw
jb
out
dec
dec
xor
ljmp
stos
push
xor
cmpsl
dec
test
sbb
xchg
pop
rol
push
fwait
or
cltd
ret
inc
into
push
loope
mov
jge
xchg
lcall
mov
pop
or
xchg
add
push
mov
in
mov
loopne
and
dec
and
int
mov
mov
mov
shll
jne
cmp
mov
mov
fcmovnu
repz
ja
xchg
aam
cmc
sbbl
out
cmp
or
jbe
mov
adc
jp
mov
mov
scas
ret
insb
std
ljmp
fldl
sbb
loopne
fists
xor
cli
jecxz
inc
fwait
addr16
jae
xlat
mov
add
movsb
in
lahf
out
push
cmpsb
inc
sub
dec
xchg
in
daa
stos
inc
sbb
cmc
shrb
and
scas
dec
out
and
stos
cmp
jl
cmp
fdivr
push
ret
daa
pop
pushf
cmp
andb
sbb
jle
push
or
outsl
fisubrl
xchg
cmp
ror
repnz
pop
dec
ror
fisubrs
in
ja
mov
jnp
repnz
pop
dec
leave
loope
dec
movsb
and
xlat
push
testl
dec
push
mov
scas
jae
aaa
div
cltd
or
push
add
hlt
jl
inc
cmpsb
dec
mov
jmp
and
xor
adc
loopne
jbe
lret
push
ss
out
pop
inc
pop
xor
jae
mov
enter
daa
fs
mov
je
fcmovne
mov
movsl
out
lret
das
mov
lahf
mov
xchg
and
fisttpll
or
pop
pop
lods
frstor
pop
push
or
or
dec
loope
lods
fcompl
insl
cmp
mov
mov
and
sbb
sbb
enter
mov
sbb
mov
add
sbb
mov
int3
mov
lcall
xor
int
iret
sbb
mov
test
in
jg
push
mov
pop
mov
daa
popa
cld
adc
add
negb
cmp
mov
xorl
cmp
mov
or
push
lock
aaa
cmc
xor
xor
mov
or
fcomps
adc
ror
add
adc
repz
xor
inc
pop
inc
cli
testl
dec
sti
es
out
fadds
adc
es
shll
js
es
mov
xchg
out
lods
sbb
mov
push
mov
mov
arpl
add
sti
inc
rcl
push
inc
hlt
nop
jmp
dec
nop
inc
call
fnstenv
das
sbb
pop
mov
mov
sbb
lret
aam
pop
mov
adc
call
bndstx
jle
inc
cli
cmpsb
cmpsb
inc
mov
sarb
inc
or
sbb
dec
sbb
scas
xlat
rcrl
adc
push
cwtl
or
jp
aad
mov
cmp
lcall
out
leave
push
add
push
lock
aaa
mov
es
and
int3
xor
ret
and
out
insl
jg
clc
dec
xchg
aas
fisubs
fs
icebp
mov
xchg
sarl
test
and
jl
or
int3
pop
pop
ror
cmp
aam
adc
adc
fnstsw
out
xchg
jne
pop
ljmp
sub
stos
mov
fisubs
inc
fsubl
orb
cmovo
pop
cltd
and
cmp
xchg
cs
test
and
sbb
mov
rcrl
ret
inc
mov
fwait
nop
inc
sahf
push
test
add
cwtl
add
xor
and
cmp
push
cmp
mov
je
mov
fwait
or
ja
cwtl
lea
and
sarb
leave
arpl
fwait
push
jne
fisubrs
out
xor
bound
sti
jns
in
jle
lahf
fwait
xchg
sub
mov
sub
jno
in
addr16
cmp
mov
hlt
insb
push
shll
adc
shlb
or
fbstp
repz
jmp
cmpsb
adc
les
loope
test
mov
stos
mov
popf
dec
sbb
pop
or
scas
lods
pop
mov
adc
cwtl
iret
aaa
fwait
jbe
mov
xchg
shl
add
push
inc
push
sub
fldt
mov
insl
ficompl
cmpsb
das
xchg
xchg
xor
int3
fnsave
pop
jl
inc
fimuls
lds
divl
mov
jecxz
ror
pop
xchg
scas
or
jbe
cmp
jge
or
sbb
gs
mov
push
or
add
jl
cmpsb
dec
and
sbb
cmp
adc
jae
sarl
repz
jne
in
fcompl
in
jb
in
lock
arpl
mov
sub
mov
mov
movsl
mulb
lret
lahf
fildl
push
ss
jnp
dec
cmpb
dec
or
cwtl
or
rcll
js
and
xchg
out
push
xchg
shl
arpl
faddl
sub
scas
loope
jmp
xlat
aam
outsl
ret
add
rorl
mov
mov
mov
push
scas
ds
sub
ss
mov
xchg
push
jnp
test
mov
andb
mov
mov
sub
jp
gs
mov
fdivrs
lahf
testl
ret
cmp
push
and
pop
xor
mov
adc
xor
outsl
les
mov
insb
stc
and
adc
jns
add
push
data16
and
mov
fidivs
cli
sub
xor
pop
in
sbb
ret
adc
loopne
xchg
inc
cmc
notl
dec
out
aam
in
mov
xlat
repz
stc
sbb
clc
pop
jg
test
push
mov
push
arpl
adc
and
lcall
dec
out
inc
inc
adc
inc
je
mov
add
pop
xchg
lea
xorb
adc
jns
clc
adc
test
sub
sbb
int3
jne
aas
push
mov
or
cmp
shr
dec
jnp
jmp
cli
jb
je
mov
addr16
mov
add
adc
push
enter
cmp
out
fs
cmp
cmp
push
mov
xchg
outsl
pop
ret
mov
push
insl
retw
lea
sub
mov
adc
cli
sarb
mov
mov
jmp
and
lahf
mov
sub
pop
mov
mov
mov
mov
push
cli
pop
xchg
fucom
clc
out
fwait
xchg
mov
pop
ljmp
and
mov
scas
inc
xor
push
call
pop
stos
testb
aam
add
inc
xchg
cltd
pop
icebp
loop
fchs
xor
mov
orb
aam
aam
add
xchg
xchg
jb
cmpsb
or
mov
sahf
push
daa
lds
add
xchg
add
in
lcall
or
ja
arpl
fidivrl
mov
push
aad
ja
cmpsl
inc
dec
or
push
inc
lcall
mov
mov
mov
mov
out
adc
bound
push
add
imul
cmpl
out
rcl
sub
insb
cmpsl
andb
add
push
mov
insb
shll
push
jle
cmp
xor
addb
call
in
es
cmpsl
adcb
jno
popf
sar
mov
push
and
mov
xor
and
ljmp
xchg
cmp
mov
ja
iret
xchg
cmp
or
hlt
dec
fstpt
or
push
and
inc
or
xchg
call
aad
pop
stos
jmp
fsubrp
inc
push
scas
rcr
dec
mov
cmpsb
je
iret
xchg
movsb
cmp
push
xchg
insl
pop
jbe
pop
ret
jge
movsb
sbb
mov
push
or
sub
jl
fbld
nop
shl
push
les
push
jo
leave
mov
and
pop
pop
cmp
xor
jmp
cmpsb
jns
fucomip
pop
fistpll
mov
add
bound
xchg
cmp
pop
mov
sub
add
cmp
or
mov
daa
movsl
std
bound
movsb
push
lahf
cli
loope
push
or
test
adc
shlb
cmpsl
movsb
add
pop
push
int3
pop
cli
cmpsl
adc
pop
aam
inc
push
int3
mov
jp
inc
fsubr
int3
jb
cmpsb
mov
add
xor
out
into
out
addb
sbb
shlb
adc
and
call
cltd
int
inc
lods
sub
and
lret
lcall
dec
mov
movsl
jl
clc
dec
ljmp
in
jg
fwait
pop
mov
sbb
dec
pop
cmp
jbe
leave
les
jl
lret
cmp
xor
arpl
inc
mov
pop
shl
sub
mov
aad
pushf
mov
cmc
rorb
dec
jg
outsl
cmpb
stc
inc
sbb
jb
add
test
lods
xor
mov
push
inc
out
cmp
cli
pop
xchg
pushl
push
outsb
lcall
fistl
xor
pop
gs
cmp
loopne
push
outsl
pop
bound
adc
or
les
inc
ret
mov
sbb
xor
pop
xlat
ret
aam
sub
ds
mov
mov
mov
sarl
loope
add
dec
inc
nop
jg
and
pop
add
jns
push
xchg
push
out
js
aaa
call
leave
aad
pop
sub
out
adc
aam
inc
in
fwait
pop
inc
cmpsb
sub
or
mov
out
gs
cs
scas
jb
out
outsb
dec
or
sbbb
sarl
xor
pop
enter
mov
subb
mov
ficoml
subl
xlat
lret
inc
push
pop
mov
sti
stc
lock
xchg
stc
das
sbb
mov
xchg
shll
aam
cmp
inc
cld
popa
cmp
dec
mov
cmpsl
popa
rcl
lret
icebp
testw
inc
mov
sbb
addr16
pop
or
in
sub
xchg
adc
dec
pusha
push
mov
test
gs
repz
ds
xchg
adc
jns
ss
shll
ss
fimull
stc
out
dec
mov
cltd
xchg
mov
pop
mov
mov
mov
jmp
pop
xchg
repz
sbb
mov
or
arpl
push
lret
add
into
push
jnp
cmc
or
xor
push
or
xchg
imul
insb
sti
xchg
lock
jp
cmp
xchg
ja
cmp
dec
inc
lods
inc
xor
mov
add
cmp
jne
dec
dec
mov
into
in
icebp
addb
popa
jns,pt
ret
xor
cmpl
sti
inc
addr16
addr16
shll
ja
mov
ds
xor
lock
xchg
in
stos
mov
cmp
xchg
pop
sub
inc
mov
jne
push
dec
sbb
popf
idivl
mov
arpl
jg
insb
in
xchg
scas
mov
scas
jb
std
push
add
mov
iret
cmc
jecxz
ret
ljmp
jne
arpl
xchg
inc
adc
mov
push
mov
popf
fiaddl
sbb
or
pop
ficompl
lds
aad
hlt
lret
mov
leave
inc
lret
vmovdqu
jecxz
jbe
icebp
jecxz
inc
and
sbb
ret
xor
pop
add
pop
cmpl
mov
cmpsl
aad
xor
lock
scas
or
jo
lock
dec
in
inc
or
enter
out
in
inc
test
cmpsb
push
daa
popa
fsubrl
fs
or
jo
sub
adc
cmp
jge
ds
outsb
iret
movsl
add
pusha
and
mov
and
faddl
test
pop
and
xor
or
push
xchg
cwtl
pop
and
dec
js
jns
pop
adc
lods
loope
dec
cmp
cltd
xchg
sub
outsb
stos
fsts
and
sub
popa
dec
sbb
mov
ss
and
nop
loope
in
mov
lea
and
dec
rcrb
cmc
pop
fmuls
mov
fwait
adc
test
inc
sbbb
jg
cmp
incb
mov
mov
mov
sbb
enter
inc
cmp
out
lcall
ja
jnp
jl
pop
cmp
incl
or
cmp
into
jg
pop
cmc
xchg
dec
xor
mov
stc
std
popf
xchg
adc
shr
dec
sub
loope
sbb
mov
out
out
xchg
cli
nop
stos
inc
xor
loopne
in
repz
es
xor
cmpsb
gs
loopne
sub
sub
imul
into
mov
xchg
das
xchg
mov
mov
into
xlat
add
sub
xchg
mov
xchg
cs
adc
sub
lock
jp
std
dec
movsl
cmp
inc
cmp
stc
fstps
je
fcompl
mov
jns
xchg
adc
call
dec
sbb
pop
arpl
jmp
loopne
test
andb
daa
mov
inc
add
xor
int
jecxz
mov
jae
andb
and
aam
rorl
daa
sbb
pop
clc
jg
cmp
shll
adc
outsl
addl
xorb
cwtl
push
test
popf
mov
popf
mov
dec
or
aam
loope
ret
rcl
sahf
es
or
dec
adc
cmpsl
pusha
pop
aam
std
mov
lods
scas
mov
mov
inc
int
and
dec
scas
xor
sub
loop
mov
outsb
xorb
loope
fnsave
or
pop
in
mov
xor
jg
lcall
pop
outsl
inc
dec
stos
mov
aas
out
fcompl
ss
sbb
push
adc
int
pop
add
cltd
lret
xor
daa
shlb
mov
sbb
test
stos
dec
xchg
add
or
stc
test
push
insl
dec
mov
add
mov
call
jnp
add
in
divb
pusha
int3
outsb
ja
push
push
dec
icebp
sbb
inc
enter
insb
das
mov
dec
icebp
mov
jne
push
clc
mov
sti
cld
out
rorb
jns
and
add
inc
adcl
subl
mov
xchg
jp
cmp
mov
out
insb
test
sbb
ret
shl
sub
and
adc
xchg
ficoml
mov
adc
xchg
adc
xchg
popf
push
in
mov
mov
daa
and
xchg
pop
imul
scas
aad
pop
push
dec
aas
adc
call
mov
ret
dec
pop
js
mov
loope
jmp
je
inc
pop
aas
push
or
dec
fidivl
fidivrl
sti
dec
xchg
xchg
shll
adc
fidivs
jp
rorb
push
mov
fcoml
leave
mov
cs
jbe
cli
jbe
jmp
lahf
sbb
mov
rolb
into
mov
int3
dec
outsb
orb
mov
sbb
and
xor
cmpsl
movsb
inc
push
adc
cwtl
inc
lcall
in
daa
or
mov
pusha
xor
aad
sub
jl
in
jmp
xchg
in
inc
ds
push
movsl
or
push
lahf
cmp
push
scas
cmp
test
sub
mov
pop
dec
add
pop
push
xchg
adc
push
pop
loope
jo
faddl
sub
nop
adc
sbb
mov
js
data16
sbb
xorl
addr16
lods
add
or
xchg
lcall
lods
mov
jbe
xor
leave
enter
sbb
in
jnp
push
mov
arpl
adc
add
cmp
test
rorb
push
push
rcll
push
cmp
adc
or
cmp
dec
jmp
xor
fisubrl
loop
mov
stc
mov
les
bound
add
hlt
nop
data16
inc
out
sub
xor
jne
in
pop
pushf
push
sti
loop
dec
jp
pop
gs
sbb
xor
loopne
imul
lea
xchg
bnd
sbb
test
sbb
shll
cwtl
pushf
jmp
int3
cwtl
xchg
or
add
pop
inc
dec
cltd
xchg
fsts
push
sahf
cwtl
inc
and
inc
mov
call
out
pop
xchg
push
mov
inc
and
popf
add
std
push
inc
sbb
rolb
xchg
mov
mov
and
fisttpll
ficoml
divb
int3
dec
cwtl
clc
pop
inc
mov
dec
pop
mov
shl
sbbl
leave
sbb
and
leave
lock
cli
imul
cmc
mov
test
ret
popa
jmp
insl
sbb
and
xor
aam
sbb
sti
mov
arpl
fwait
and
call
xlat
rcrb
dec
nop
sub
or
sub
cld
push
inc
rorl
fstpl
leave
clc
xchg
shlb
jno
mov
or
icebp
popf
pop
sbb
stos
jnp
fsubr
aas
adc
xchg
popa
popf
inc
push
in
or
bsf
add
sbb
mov
sti
mov
dec
xorb
inc
add
sbb
mull
fwait
dec
int
push
adc
dec
add
lret
pushl
push
pop
xor
mov
inc
in
aad
xchg
mov
mov
cmp
and
lods
in
ja
out
nop
dec
in
xor
cltd
ss
loope
xchg
dec
aam
xchg
jne
push
jge
das
cmp
mov
jns
daa
sete
shlb
out
xchg
pop
sub
pop
and
mov
pop
insl
mov
mov
jnp
xor
in
jmp
push
fildll
sub
xchg
lods
ss
int
xor
or
push
aam
jo
inc
das
xchg
mov
loope
in
mov
sbbb
shrb
xchg
push
call
iret
mov
xor
pop
scas
jae
hlt
sub
cmc
arpl
cmpsb
mov
or
les
inc
xchg
xchg
in
lea
mov
popf
pop
cmp
mov
lds
popa
shrb
lahf
mov
das
lcall
fndisi(8087
notl
pushf
xorl
lods
jge
int3
push
sbb
push
aaa
mov
orl
test
gs
jmp
cmpb
fldl
insl
sysenter
xor
cmpsb
pusha
pop
scas
sbb
mov
rclb
ficoms
inc
sub
in
add
cmp
jnp
cmp
pop
adc
cmp
xor
add
xchg
inc
pop
adc
cmc
push
jmp
adc
nop
lahf
push
lret
push
andb
sub
pop
add
dec
adc
adc
add
movsb
ja
pop
outsl
add
stos
pop
xchg
sub
inc
stos
int
mov
pushf
xchg
sub
mov
jno
pop
adc
flds
cmp
jmp
je
jns
cli
sbb
js
and
addb
mov
int
mov
sub
sub
sahf
push
mov
xchg
sahf
loope
pop
test
sbb
addl
mov
ret
lret
cmpsb
dec
ss
fchs
cmp
fs
testl
in
cmp
std
add
sbb
into
inc
xchg
jmp
adc
and
pop
loop
ret
imul
add
movsl
inc
into
xchg
lods
call
cs
out
out
cli
div
shlb
das
cs
leave
lret
xchg
mov
lods
gs
cli
loopne
and
mov
cltd
ljmp
mov
repnz
mov
jns
fldcw
cmp
in
cmp
xor
sub
mov
mov
xchg
in
ljmp
nop
xor
loopne
pop
sub
or
jbe
cmpsb
cmp
fwait
out
insl
lea
leave
leave
movl
xchg
adc
aad
fcmovne
hlt
mov
sub
and
popf
mov
cmp
xor
or
loop
jo
pop
and
cmp
sub
xchg
std
test
mov
dec
push
cli
es
xor
ret
jmp
daa
mov
mov
lock
dec
movsl
das
mov
and
mov
mov
mov
insl
add
jbe
jns
dec
cmpsl
pop
adc
icebp
jmp
lods
test
in
sbb
test
insb
mov
addr16
shr
sub
ljmp
push
cmp
fldl
sub
ljmp
pop
lds
add
mov
inc
scas
push
mov
sbb
out
cmp
mov
add
mov
xchg
das
aad
shr
xchg
push
mov
into
pop
or
mov
dec
push
mov
flds
pop
aaa
and
sarb
xor
sahf
or
std
in
pop
dec
xchg
fldl
mov
mov
inc
enter
push
fimuls
lock
mov
push
cmp
jne
out
mov
xchg
lods
pop
bound
repz
shlb
xorl
sub
pop
pop
addr16
xor
mov
pop
repnz
jg
inc
jnp
cmc
test
scas
sbb
in
sahf
dec
pusha
or
fisttps
ja
orb
jmp
fucomp
popf
jae
jbe
push
xchg
les
mov
and
std
cmpsl
or
mov
ret
fistpl
imul
scas
fwait
sub
xchg
adc
out
sahf
ret
outsb
pop
out
mov
arpl
sbb
inc
sbb
push
push
push
scas
jb
sahf
bound
xchg
inc
jle
int3
je
jno
addr16
xor
jnp
fld
loopne
test
inc
test
fidivrl
leave
stos
jl
movsb
jmpw
rcr
sub
imul
jo
adc
hlt
mov
add
lock
jl
pop
popa
dec
dec
inc
bound
push
sbb
xor
add
xor
push
testb
test
sub
popa
in
cmc
lret
jbe
int3
daa
pop
jae
cmp
xor
jno
subb
mov
adc
mov
and
jp
lahf
jbe
in
push
push
movb
push
js
inc
pop
xor
mov
addr16
nop
pop
xchg
in
das
js
aam
pop
shl
inc
push
mov
loope
sub
sub
pop
outsb
aam
fs
mov
lods
orb
mov
cwtl
movsb
and
imul
jno
int
mov
mov
sahf
lods
lcall
loope
dec
scas
adc
xchg
lret
test
sti
test
shll
jg
xor
stc
sahf
mov
cmpsb
stos
imul
fs
pop
or
in
push
ss
inc
fstps
mov
dec
sub
cmpsb
cmc
fcompl
or
mov
testb
xchg
add
stc
and
lsl
dec
nop
data16
pop
pop
lods
iret
sub
cmp
and
xor
sbb
inc
inc
enter
push
loopne
cmp
fsubrp
adc
mov
ror
repz
dec
xchg
js
fcompl
pop
enter
add
mov
gs
dec
jmp
and
cs
pop
xor
std
sub
or
add
dec
scas
inc
jno
in
add
icebp
jecxz
push
out
sahf
or
call
lds
sbb
insb
test
dec
push
sbb
aam
pop
int
pop
inc
and
std
inc
push
mov
aas
stos
xchg
inc
jb
add
and
in
dec
sarl
shl
dec
push
std
or
mov
mov
int
mov
xor
jae
cld
inc
fildl
add
mov
ja
scas
sub
scas
scas
and
xchg
mov
sbb
aam
andl
cltd
pop
insl
jmp
xchg
das
cmpsl
pop
xor
stos
icebp
ret
lods
out
imulb
int3
sbb
test
and
push
or
pop
xchg
aad
sahf
aad
test
cmpsb
pop
mov
out
push
leave
adc
clc
or
pop
inc
ljmp
push
pop
jo
jecxz
pop
or
out
add
push
inc
push
mov
mov
add
inc
xor
pop
xlat
mov
mov
ud0
add
mov
push
or
mov
fwait
stos
sub
push
ret
cmpsb
fs
test
mov
in
and
mov
mov
pop
mov
std
jbe
ja
mov
dec
lret
inc
lea
adc
lcall
mov
sti
out
insl
ret
loopne
sarb
sbb
xchg
popa
or
pop
scas
out
sub
push
scas
jae
mov
mov
shrb
sahf
jnp
jg
jle
xor
in
mov
pusha
movsl
scas
adc
insl
add
xchg
push
adc
jmp
call
push
jae
pop
cmp
xchg
outsl
cmp
cmp
inc
push
pop
rcr
jo
cld
and
cmp
subl
or
test
jns
fmul
jno
dec
ret
mov
rclb
hlt
ret
arpl
gs
or
mov
inc
push
ficoml
cli
xchg
fwait
xchg
xchg
int3
pop
xor
xchg
mov
push
out
lds
fcmovnb
pusha
stos
xor
aad
mov
movsb
icebp
inc
and
jbe
into
mov
sbb
cltd
push
aaa
das
sbbb
xchg
mov
mov
mov
sbb
adc
test
sub
scas
test
and
sahf
imul
sbb
push
je
addr16
inc
jo
cmpsb
or
in
fdivr
mov
daa
pop
pop
or
xor
adc
jnp
sub
mov
mov
movsl
and
lahf
lahf
xchg
and
hlt
test
dec
jmp
mov
daa
sub
pop
pop
mov
sbb
pminsw
loope
mov
add
push
repnz
outsb
aaa
xchg
loope
xchg
add
adc
sbbb
push
mov
or
push
shll
jns
push
pop
inc
xchg
in
fidivs
popa
push
push
mov
mov
ret
sahf
daa
stos
mov
cs
jg
loope
mov
hlt
push
mov
shlb
push
xchg
jae
lret
imul
fcomp
add
test
rcr
sbb
add
testl
xchg
xor
clc
out
fisttpll
sub
sub
stc
flds
adc
aas
sbb
mov
inc
dec
pop
push
lods
mov
jecxz
rorb
out
out
pop
pop
adc
test
inc
in
lahf
mov
dec
jecxz
fisubs
dec
loopne
addr16
pop
std
pop
xor
imul
popf
bound
daa
dec
inc
cmp
cmp
sub
xor
pushf
adc
in
cs
movsb
aad
add
dec
and
mov
fnstcw
nop
fwait
je
add
jmp
mov
in
call
inc
pop
mov
stos
or
adc
jl
push
jecxz
fldt
mov
inc
stos
xlat
iret
inc
outsb
fs
aas
dec
xchg
jb
or
dec
pop
lahf
mov
repnz
movl
std
mov
or
sub
mov
aam
mov
lock
jb
dec
mov
lgs
push
lock
xchg
das
jne
shll
daa
push
iret
aam
mov
ret
push
lret
repnz
insl
rorb
dec
outsl
push
jp
pop
fdivrl
icebp
cltd
lds
pop
ret
jnp
cs
movsb
mov
mov
movsl
pop
enter
lret
sub
mov
mov
test
fst
repnz
dec
mov
xchg
cs
shr
outsw
ret
popa
stc
hlt
mov
sbb
stos
dec
dec
cs
push
enter
and
add
ds
movsb
pop
mov
ret
dec
mov
dec
test
js
xchg
mov
or
cwtl
into
flds
xchg
push
or
xor
inc
mov
in
push
aaa
mov
push
mov
jge
mov
mov
arpl
xchg
dec
inc
and
lods
mov
cs
mov
jge
cmc
jne
inc
jae
inc
jns
out
dec
fsubl
bound
sarb
or
push
adc
push
out
imul
or
stos
addr16
std
mov
pop
test
push
mov
xor
aas
mov
inc
xor
pusha
inc
gs
mov
int
es
inc
jmp
repz
inc
jae
jbe
push
sbb
lods
mov
sahf
cwtl
add
jecxz
jno
fildll
cmc
sbb
jb
imul
scas
popa
loop
push
push
or
rcrb
ret
ljmp
test
out
inc
and
mov
xor
pop
movsl
fiaddl
movsl
xchg
repnz
dec
mov
pop
lds
imul
sbb
in
leave
cltd
daa
jp
jl
ja
outsl
das
sti
jbe
cmpsl
sti
jge
clc
and
xchg
or
add
mov
jl
xchg
mov
push
push
or
xor
mov
lret
scas
fs
and
ret
cmp
insl
pop
inc
divb
mov
ret
sbb
enter
daa
pop
shll
test
mov
ds
pop
in
daa
mov
and
pop
xlat
lahf
mov
jge
sti
and
add
jle
xor
mov
pop
in
pop
js
hlt
aaa
pop
dec
arpl
mov
jne
fdiv
loopne
sub
mov
lcall
shrb
mov
or
or
inc
cli
add
sub
int
sub
sub
cwtl
xor
les
and
jle
mov
je
sahf
lret
test
xor
loop
aam
pusha
xchg
sub
pop
and
adc
pusha
enter
cmpsb
fcoms
pop
push
lret
xor
outsl
sub
cmp
mov
or
inc
into
out
push
repz
push
js
outsb
jg
outsl
mov
and
nop
orl
xchg
xor
add
mov
lods
lods
popf
push
mov
cmp
out
cmp
mov
and
sti
sahf
jge
incb
bound
gs
js
loopne
test
pop
sbb
dec
adc
cld
jb
scas
repnz
clc
rol
repz
sbb
dec
mov
cmp
mov
sub
nop
xor
test
aad
aas
jecxz
shll
cmpb
fldcw
divb
ss
dec
lahf
aaa
loop
call
ret
cmp
pop
lret
adc
sub
pop
loope
pop
adc
mov
xor
cmpb
jp
jb
inc
pop
dec
aad
mov
ret
rcll
cs
pop
xor
mov
pop
pop
mov
arpl
xor
cmp
lret
loope
inc
mov
sbbl
das
push
ret
inc
pop
idivl
and
jnp
popf
repz
es
lret
mov
cmp
push
fsubl
cld
xchg
vpshufd
lods
lds
mov
out
sbb
and
push
add
les
cmp
mov
mov
fistpl
sbb
push
dec
and
sbb
xchg
insl
push
mov
popa
adc
pusha
pop
movsl
and
lret
mov
push
pop
dec
dec
movsb
add
outsb
xor
xchg
inc
mov
lds
dec
sbb
cs
push
pop
xchg
pushf
sbbb
call
cmp
fwait
or
rolb
adc
ljmp
fisttpll
rorl
in
xchg
pop
xchg
lret
mov
inc
aaa
mov
jae
inc
ja
xchg
je
inc
mov
repz
popf
inc
ret
dec
pusha
cmp
jne
add
mov
or
out
sub
sub
jns
mov
xchg
andl
out
cltd
lods
sub
dec
mov
addr16
lock
mov
xchg
ljmp
fisubrs
in
adc
cmp
stos
jmp
cmp
test
sbb
loopne
popf
loope
lds
xchg
idivb
into
imul
enter
rclb
xor
das
mov
xor
and
pop
mov
test
arpl
or
or
mov
cmp
idivl
fidivl
daa
jb
xor
pop
std
fisubs
lds
ret
xor
mov
jnp
xchg
adc
stos
movsb
pop
clc
xchg
cmp
lcall
std
and
lods
xchg
pop
or
andb
cs
fmuls
mov
or
adc
scas
inc
xchg
inc
and
mov
push
or
jp
gs
push
jmp
in
stos
adc
popf
daa
pop
scas
push
cmp
sub
loopne
cmp
xchg
adc
adcl
ret
lahf
rorl
push
test
popa
mov
push
push
hlt
mov
push
pop
or
sahf
js
arpl
adc
in
sbb
fcompl
cld
inc
outsb
std
sub
adc
inc
outsb
movsb
addr16
in
sbb
and
or
mov
jg
in
data16
dec
ret
fldcw
outsl
or
pop
inc
or
sub
mov
pop
sub
and
pop
sahf
insl
mov
test
gs
jg
dec
test
mov
cs
adc
mov
cmp
push
mov
idivl
lret
xor
push
mov
or
mov
in
xor
sub
leave
sbb
fwait
dec
mov
dec
add
stc
inc
push
adc
ja
add
mov
aas
mov
mov
loopne
ret
xor
jg
in
jne
icebp
add
sub
mov
loopne
cld
xor
adc
test
imul
push
inc
sbb
rol
pop
xlat
jl
pop
sub
out
adc
pushf
data16
mov
jbe
aas
aad
loopne
nop
pushf
pop
and
jle
inc
stos
test
fldenv
adc
loop
fs
cmpsl
pop
mov
call
inc
xchg
out
adc
cmc
loop
dec
sub
fisttpl
xor
sahf
inc
movsb
incb
aas
xchg
jb
mov
dec
dec
ss
dec
shll
pop
testb
std
add
cwtl
lahf
jb
mov
insl
jp
mov
cmp
test
ret
popa
dec
mov
sub
mov
jecxz
mov
xchg
int
aam
adc
adc
rclb
decl
mov
cmpsl
pop
mov
mov
inc
inc
xlat
lods
xor
xchg
mov
adc
or
out
sbb
pop
jecxz
inc
shlb
scas
push
sub
shlb
in
push
adc
fstpl
sbb
mov
nop
std
ljmp
mov
stos
sbb
out
cs
inc
xchg
fcoms
xor
or
iret
push
jmp
adc
adc
fildl
fdivrl
xchg
aas
dec
addl
xchg
cltd
mov
sub
xchg
pop
fwait
aaa
ja
push
aas
lret
cmp
push
decl
call
or
in
sbb
sbb
mov
ljmp
cs
pop
ja
mov
dec
mov
jmp
rorl
inc
cwtl
data16
sub
mov
scas
out
or
bound
fldt
ret
xor
mov
nop
cmp
sub
inc
xlat
addr16
xchg
xor
insb
sub
aaa
jle
ss
push
pop
cmp
push
push
xchg
int3
pop
sub
inc
or
mov
xchg
push
mov
idivb
sbb
push
stos
leave
sbb
sbb
pop
adc
add
imull
notb
adc
xchg
mov
dec
ret
inc
pop
ret
hlt
mov
pushf
push
or
sub
xchg
inc
add
fisubrl
inc
xchg
mov
mov
test
pop
cs
xchg
push
mov
into
inc
mov
movsb
xchg
dec
add
jbe
mov
jge
mov
or
aaa
insb
out
or
orl
jl
jo
dec
or
pushf
push
fmul
lahf
xor
insl
in
scas
and
jp
icebp
push
fists
jo
hlt
iret
mov
xchg
jg
in
xchg
divb
enter
daa
pop
pop
fnstsw
leave
dec
xchg
fldt
ds
cmp
leave
inc
movsl
xor
xchg
adc
push
mov
push
jns
insb
out
out
xor
or
jae
fistpl
jno
js
gs
push
fsubr
loope
dec
jecxz
inc
xor
sub
cmpsl
mov
pusha
in
adc
and
push
sbb
jns
mov
daa
mov
pop
add
mov
adc
int
inc
sub
ljmp
lcall
mov
sbb
push
sahf
adc
pop
test
and
jg
or
inc
sbb
add
pop
rclb
inc
outsl
ret
test
cmp
or
idivl
mov
lret
rcrl
iret
or
into
mov
lahf
cmc
clc
and
xor
or
outsb
repz
adc
hlt
mov
add
data16
inc
lods
imul
mov
aam
out
pop
inc
cli
cmc
out
mov
or
mov
sti
cld
sub
gs
add
loopne
test
ret
mov
mov
les
in
mov
jb
inc
xchg
test
pushf
xor
or
sub
mov
mov
mov
adc
mov
jns
movsl
flds
mov
dec
ds
popf
inc
mov
popa
add
and
stos
add
lea
mov
mov
adc
dec
jne
dec
push
loope,pn
mov
arpl
inc
mov
jo
jb
pop
push
dec
ret
ja
and
cli
inc
shll
or
test
sbbb
add
andl
jmp
lret
mov
ss
mov
cltd
xor
sbb
insl
das
adc
or
dec
adcl
push
lret
pop
insl
test
dec
pusha
or
mov
push
mov
jb
mov
or
mov
add
popf
rorb
stc
inc
sub
iret
test
fiadds
push
aad
xlat
fldl
sbb
stc
xchg
jmp
jl
mov
cmp
pop
sbb
inc
stos
adc
cld
or
or
push
push
jmp
clc
add
add
xor
je
mov
lret
mov
dec
ljmp
xchg
lahf
mov
roll
inc
xor
loop
jmp
ret
add
xchg
xor
mov
shl
pop
lock
push
add
mov
jmp
imul
inc
jmp
or
cwtl
dec
es
push
imul
jns
mov
xchg
lea
cmpl
out
push
cvtps2pi
pop
lea
aas
mov
addr16
repz
xchg
imull
jle
pop
mov
pusha
adc
inc
fucomip
loope
xchg
lahf
xor
xchg
sbb
inc
adc
pop
jae
jae
push
data16
jge
das
mov
and
cmp
mov
adc
or
scas
mov
je
cmp
popa
sbb
in
cmpsb
imul
popf
lcall
mov
arpl
icebp
inc
sub
out
or
cmpsb
xchg
inc
inc
cmpl
int3
or
fisubrs
mov
mov
and
mov
movsb
sbb
adc
jmp
jge
sub
sub
insl
add
popa
adc
test
dec
ja
popa
push
mov
cmp
scas
add
andl
test
mov
mov
and
cmpsb
adc
ss
js
pop
sahf
int3
daa
pop
adc
cmp
aad
jno
dec
sub
outsl
sti
cmp
xchg
ds
out
and
and
dec
jl
adc
es
je
dec
test
ja
ret
or
add
js
sti
in
or
out
push
arpl
loope
jb
fdiv
cwtl
stos
sub
xchg
or
sti
sbb
and
test
jp
mov
lret
scas
push
int
ror
mov
in
inc
xchg
jo
stos
repz
push
lods
lcall
jle
mov
test
lahf
sarb
enter
in
mov
fs
out
adc
cli
xchg
cmp
mov
idiv
mov
lret
sub
xor
int3
cmp
fsubs
into
xchg
push
push
cmc
mov
lea
outsl
pop
xchg
jb
jne
sbb
adc
decb
push
jmp
lods
push
clc
ret
jle
out
jp,pn
sub
in
dec
inc
xor
stos
and
outsl
scas
gs
pop
sbb
fsubp
push
pop
jns
or
imul
inc
lea
ret
inc
and
xlat
cli
sbb
sub
sub
mov
mov
pop
add
cmp
adc
pusha
dec
dec
nop
push
xlat
cmp
or
inc
shr
cmc
fsts
xor
add
mov
lods
arpl
divb
arpl
and
pop
ja
stos
adc
out
and
pop
cld
test
inc
sbb
fdivrl
lds
jb
xor
dec
cmp
and
push
scas
roll
mov
xchg
repnz
dec
lea
mov
pop
mov
lods
hlt
pop
cmpl
addb
mov
mov
outsl
shl
jne
test
icebp
xor
mov
test
xchg
ret
dec
add
pop
insl
insb
shl
dec
pop
sbb
pop
mov
cwtl
icebp
cmc
pop
sbb
push
adc
shrb
mov
and
rcr
jbe
sub
scas
test
ds
loop
push
cwtl
pop
pop
clc
xor
lock
sub
loop
push
icebp
push
pop
fwait
add
hlt
mov
fistl
push
daa
andnps
pop
add
sbb
cltd
adcb
mov
into
inc
lcall
xchg
sbb
js
pop
js
fwait
xchg
jge
push
test
roll
shll
xor
fmull
cmp
in
sbb
mov
movsb
mov
movsb
mov
dec
mov
cmpb
mov
ljmp
jne
movsb
push
mov
ss
enter
mov
cmp
orl
dec
out
fbstp
sub
cmp
nop
addr16
add
insb
add
les
lods
aaa
jle
cld
int3
in
adc
fisttps
in
xchg
jb
stos
jmp
pop
cmp
jae
movsl
ljmp
es
lcall
and
dec
push
imul
jo
in
mov
mov
rclb
dec
jno
ret
stc
pop
xor
cmp
xchg
inc
das
pop
ret
or
and
incb
in
fcmovbe
js
xchg
dec
adc
int3
idivb
adc
adcl
lds
push
repz
dec
mov
je
mov
jne
cmpsl
movsb
test
pop
push
stos
add
jbe
xchg
cmpsl
jge
stos
adc
jae
sub
ljmp
add
pushf
and
in
push
mov
aas
jo,pn
jge
scas
loopne
mov
cmc
cmp
aam
imul
inc
adc
inc
in
pop
fs
pop
ja
daa
pop
lea
das
adc
cmp
lock
repnz
ds
and
test
xor
stos
push
inc
dec
ss
subb
stc
pop
repz
orb
js
and
xor
mov
outsb
fcompl
xlat
outsb
xor
rcl
nop
jnp
test
cmp
test
push
fwait
mov
stos
mov
int
out
sub
into
jne
rcrb
lcall
bound
stc
std
sahf
push
fimuls
orb
jg
mov
mov
jecxz
mov
int3
ss
scas
push
adc
add
sbb
cmp
insl
jg
fadds
cs
lret
test
lret
adcb
jle
and
into
jp
sub
xchg
jg
fisubl
cmp
pop
loop
shll
idivb
adc
inc
mov
push
sarl
xor
mov
mov
pop
or
push
in
mov
scas
sti
pop
in
xchg
push
xchg
gs
loopne
jb
pop
cwtl
cmp
pop
push
mov
les
into
repz
in
sbb
xor
in
imul
pushf
and
push
jl
cs
leave
dec
aad
sbb
nop
sub
xlat
cmp
jecxz
dec
shlb
jecxz
jne
mov
ret
mov
call
mov
lahf
pop
adc
add
push
fistpl
sub
pop
lahf
lcall
cmc
sti
mov
fs
jb
cmp
out
and
stc
aas
rcll
inc
test
in
testb
mov
mov
mov
shrl
in
test
cmp
mov
test
das
rcrb
mov
mov
sahf
sub
fnstcw
xchg
outsb
jmp
push
mov
lret
mov
int3
pop
mov
jno
or
jnp
adc
mov
inc
nop
and
mov
push
test
repz
mov
inc
dec
push
pop
mov
fstl
xor
xchg
imul
popa
insb
lret
jb
stos
repz
out
push
aas
cmpsb
xchg
cltd
fists
lfs
add
push
cltd
mov
mov
daa
xchg
jbe
dec
mov
jl
xchg
mov
sbb
jecxz
shrl
and
fwait
les
dec
add
fdivr
xchg
sub
adc
xchg
mov
or
cltd
xchg
mov
jb
pop
pop
mov
ja
pop
push
dec
jl
sub
mov
pop
in
dec
in
imul
mov
sbb
out
cmpsl
cltd
add
add
dec
pop
outsb
xchg
and
cmp
out
fists
or
inc
fstpt
and
fsubrs
dec
jnp
int
jle
int
in
adcl
daa
ljmp
test
mov
loopne
js
stos
push
in
xchg
popf
jge
cmpl
and
and
push
out
pop
sbb
ljmp
push
push
insl
push
lret
sub
fwait
push
repz
stos
aas
jae
insb
popf
mov
dec
test
test
mov
xchg
dec
inc
xor
or
pushf
mov
cmp
xchg
movsl
add
int3
loope
ss
mov
or
lock
rolb
dec
mov
adc
leave
in
mov
movsb
xor
push
cli
push
dec
jbe
mov
jge
adc
cs
aaa
test
mov
jo
fs
push
test
push
mov
jo
arpl
scas
mov
jo
push
push
mov
inc
mov
mov
or
in
daa
push
mov
bound
cmp
sub
dec
sti
cmp
sbb
movsl
dec
adc
dec
lahf
dec
xchg
adc
adc
out
add
or
xor
in
cmpsl
and
in
pop
mov
push
xchg
adc
faddl
in
jmp
jno
mov
cmpsl
adc
mov
push
jecxz
push
adcb
mov
mov
mov
fldl
rcrl
int
adc
sub
lods
pop
aas
sub
push
pop
popa
dec
mov
push
sahf
stc
sub
xchg
sti
subb
jg
push
and
push
jnp
ss
adc
mov
ss
sti
adc
fdivrs
jbe
js
add
cmc
aaa
push
shll
cmp
pop
adc
xchg
bound
pop
sbbb
xchg
xor
repnz
insl
cmp
in
in
dec
pop
ljmp
mov
jg
ss
mov
enter
inc
in
and
ljmp
push
jl
insb
aas
movsb
loopne
pop
ss
mov
adc
mov
imul
das
dec
xchg
int
push
sbb
mov
cmc
ret
aaa
mov
pushf
adc
cmpsl
jmp
adc
add
out
dec
fistl
pop
test
inc
negb
cli
je
sbb
jecxz
imul
push
lahf
call
cmp
fnsave
adc
ljmp
movsw
pop
inc
movsb
popa
inc
aad
and
aas
add
jb
jp
dec
sub
and
mull
testb
jle
mov
mov
rcr
mov
or
or
cltd
mov
xor
sub
int3
mov
jno
leave
aam
leave
add
push
xor
insl
cmp
in
push
repnz
sti
std
cli
xchg
lods
fsubr
pop
mov
sahf
cmp
mov
or
pop
fnstenv
rolb
out
inc
test
sti
hlt
mov
lock
mov
fnstsw
cmp
xchg
test
fucomi
sbb
pop
sbb
in
out
mov
test
mov
add
jmp
cltd
lock
cli
xor
cmp
mov
aam
cmp
pop
sbb
xchg
std
sbb
arpl
xchg
cwtl
fwait
repz
ret
push
lret
sub
add
mull
dec
pop
mov
out
jecxz
rcrl
in
imul
and
addr16
pop
sbb
ja
pushf
rorl
pusha
je
scas
pop
mov
push
lahf
dec
iret
xchg
inc
jne
scas
or
xchg
push
in
or
jmp
mov
out
push
bound
xor
push
addr16
loop
test
mov
stc
enter
movsb
out
popa
mov
jle
xchg
sub
outsl
push
sti
pusha
loop
mov
xchg
sbb
cmp
jl
dec
inc
xor
aad
push
scas
sub
fld
sub
stos
xchg
lret
stos
and
test
push
andl
adc
push
iret
or
cmp
pop
sahf
lret
iret
mov
sti
inc
xor
sbb
push
inc
inc
rcr
ss
xchg
cld
adc
pop
cmpsl
ficoms
mov
rcrb
repnz
leave
arpl
call
adcl
sbb
adc
push
lea
mov
in
add
out
push
push
jnp
jo
pop
push
scas
sahf
push
inc
cmp
inc
rcll
jnp
xor
imul
bound
dec
in
daa
push
or
cmp
cmp
sub
cld
lret
cmp
lods
xor
mov
and
pop
inc
push
in
adc
test
cwtl
mov
outsl
jg
lods
pop
into
xor
inc
pop
enter
push
ds
loope
mov
fdiv
cli
movsb
outsb
in
push
adcb
mov
popl
bound
mov
mov
bound
lret
push
mov
mov
loope
pop
mov
addr16
mov
aam
sahf
pushf
imul
sbb
movsb
jg
pop
mov
loope
mull
loopne
jge
mov
mov
mov
and
aaa
scas
ret
jne
sar
xchg
cmp
je
or
ss
into
inc
stos
sbb
adc
sbb
nop
dec
fwait
outsl
mulb
pop
stc
fiaddl
fldl
je
mov
ficoms
lods
pop
mov
lods
hlt
mov
cli
sar
xor
jge
mov
fcoms
jmp
pop
ficompl
imul
adc
scas
or
sbb
notl
xlat
mov
movsl
sub
dec
mov
mov
adc
aad
jecxz
nop
jecxz
and
jl
inc
or
mov
jne
jecxz
mov
aam
dec
frstor
aam
out
mov
cli
inc
adc
sub
icebp
pop
in
fldl
sub
inc
sub
aas
mov
out
xchg
dec
lahf
in
and
dec
xchg
shl
dec
or
std
inc
pop
push
cwtl
inc
sti
es
jae
mov
push
lahf
lret
jnp
mov
mov
dec
enter
fsubrs
mov
mov
sub
mov
pop
cmp
inc
dec
dec
mov
call
icebp
jp
sbb
inc
adcb
jo
mov
aad
jle
test
pop
jle
or
push
sub
sub
test
fstl
loope
adc
loope
adc
in
inc
xchg
out
mov
popa
lcall
stos
roll
out
daa
fcomps
push
jp
fisttpll
jb
roll
mov
cli
xor
and
xchg
xor
dec
xchg
sbb
std
aam
sbb
push
adc
inc
mov
outsb
out
add
adc
adc
xor
subl
xchg
jecxz
inc
in
fstpt
aad
pusha
ja
pusha
rorl
js
inc
inc
mov
and
mov
pop
jne
enter
push
pop
out
add
bound
xor
mov
push
cmpl
sub
sub
sbb
or
mov
fsubrs
adc
jle
dec
aam
jbe
std
pusha
jge
fbld
test
jae
ljmp
roll
popf
lret
adc
push
push
repnz
or
or
sbbb
imul
ds
pop
push
sub
push
cltd
fwait
iret
imul
pop
pop
aad
into
hlt
sbb
cltd
inc
cmp
or
xchg
sub
jge
add
jmp
inc
aaa
sti
pop
push
xor
ss
and
lahf
jnp
sarb
sarb
insl
sti
pop
leave
fisubrl
jmp
dec
icebp
out
push
cwtl
daa
cmp
dec
ljmp
pop
out
aaa
daa
ss
or
lea
dec
inc
leave
jl
adc
addr16
dec
pusha
xchg
xor
xor
out
scas
jge
fisubl
jge
fdivrl
test
mov
sti
inc
mov
into
fsubr
adc
dec
jp
daa
push
adc
cmp
ljmp
jge
cmp
adc
movsl
pop
aad
and
lahf
lea
aas
push
rorb
rol
repz
into
xor
lods
push
inc
sbb
cmc
and
sbbl
lds
fcompl
jns
outsb
dec
iret
dec
adc
addr16
mov
scas
addr16
or
push
and
fcomip
push
sub
lret
shlb
jbe
sub
mov
sbb
cmp
mov
test
dec
sarb
clc
mov
push
out
pop
push
sbb
dec
and
push
ss
adc
mov
sub
lret
rcll
pop
or
jbe
and
mov
fstpt
xchg
outsl
aad
fwait
loop
jne
stc
xchg
inc
adc
decb
add
pop
popaw
mov
inc
mov
scas
jo
hlt
xorb
mull
addr16
addr16
pop
gs
loopne
pushf
pop
pop
cmc
push
adc
std
mov
outsl
movsl
pop
les
mov
jge
sbb
push
js
sbb
xor
xlat
neg
jnp
ret
mov
push
xorb
pop
popa
aad
fcompl
dec
sbb
inc
sbb
loope
lock
rclb
jecxz
sbb
fmuls
dec
ret
cmp
into
pop
inc
ss
adc
insb
mov
xchg
sbb
mov
fstpt
inc
fwait
lea
xchg
rorl
pop
pop
and
out
mov
aas
adc
notb
mov
cwtl
add
mov
mov
sub
lds
cld
mov
fnsave
loope
cwtl
das
insl
cld
sbb
fistps
sub
es
add
xchg
jl
inc
sbb
cmpsl
push
movsb
fnstcw
push
sub
lods
mov
pop
mov
in
and
xchg
pop
scas
pop
popf
ja
shrb
jbe
sub
fildl
push
mov
push
cli
fisttpll
in
add
and
dec
xchg
es
ljmp
dec
pop
jae
xor
or
xchg
outsb
push
push
push
sub
rorl
add
sbbb
pop
fwait
mov
fcmovb
sub
std
inc
test
aam
xchg
sbb
inc
shll
inc
or
cwtl
iret
fwait
push
mov
roll
jl
decl
clc
or
mov
loop
adc
aas
in
or
sub
mov
or
lahf
jle
push
test
dec
push
inc
add
xchg
mov
cmpsb
add
xchg
iret
mov
mov
xor
out
inc
cmp
or
insl
mov
les
mov
mov
or
ret
lods
addr16
mov
mov
or
insb
lods
xchg
xor
lret
or
sub
pusha
sbb
jne
test
xchg
mov
xor
inc
dec
pop
or
adc
push
xor
lods
mov
xchg
ljmp
xchg
lods
in
sbb
out
mov
scas
jns
out
push
mov
fnstenv
enter
movsl
mov
xor
or
les
cmp
or
or
scas
mov
xchg
stos
popf
daa
int3
mov
push
and
lds
movsl
xor
push
jl
mov
sarb
aam
insl
push
out
stos
jbe
sarl
popf
jno
pop
lea
out
and
jb
stos
add
push
mov
dec
dec
mov
repz
pop
fidivl
cmp
adc
xchg
and
dec
mov
and
sti
out
push
inc
mov
ret
cmp
or
cmp
sarb
lret
aam
jbe,pt
shll
fisttps
lret
add
push
xchg
mov
test
scas
push
repnz
lcall
add
lock
js
xchg
inc
pop
inc
mov
cmp
mov
push
jno
mov
inc
cmp
rolb
inc
popl
jp
orb
sbb
jnp
mov
frstor
call
rcll
int
in
sub
inc
adc
mov
cmp
push
pusha
cltd
mov
sbb
sbbb
push
cmpb
push
mov
in
mov
mov
xlat
dec
fists
sbb
ss
fsubrs
dec
divl
or
add
stos
in
or
sub
cmc
mov
mov
mov
pusha
loop
mov
push
adc
faddl
xchg
pop
inc
data16
movsb
lods
aad
mov
mov
sbb
cli
daa
mov
stos
in
bound
sti
push
mov
addl
add
push
adc
sub
sbb
repz
pop
xchg
push
cmp
push
cmp
std
xlat
xor
adc
mov
adc
addr16
mov
cs
das
aad
cmp
nop
cltd
addb
xor
repnz
fldenv
push
push
je
xchg
jmp
mov
xchg
imul
and
mov
and
cmp
rcr
aam
aaa
pop
sub
inc
push
popf
inc
popa
adc
jb
jo
dec
lea
sbb
mov
mov
sub
jmp
rcrb
lds
imul
lods
lea
pop
push
mov
cmp
mov
js
lock
jp
dec
cmp
fldenv
mov
jl
jecxz
adc
scas
insl
out
sar
inc
xadd
xchg
adc
icebp
sub
lods
sbb
lods
inc
mov
jecxz
add
mov
negl
sub
test
or
mov
andb
xorb
das
sub
lret
xchg
gs
pop
popa
enter
push
sbb
stos
scas
pop
outsb
out
jecxz
push
xchg
mov
add
xor
add
cltd
xchg
lock
lock
out
aas
cli
xchg
ret
push
lds
xchg
pop
fistpl
add
mov
mov
mov
fwait
xor
push
mov
mov
add
xor
cmpsl
dec
xchg
xor
pop
mov
mov
pushf
fcmovne
xchg
inc
jb,pn
sbb
mov
dec
push
test
je
dec
dec
les
mov
adc
fsts
xchg
dec
mov
gs
and
bound
pop
cmp
sbb
adc
and
fsubrs
or
sbb
addr16
push
inc
fisubl
jle
imul
pop
jle
lcall
mov
mov
mov
xorb
popa
mov
push
mov
jae
lcall
sbb
int3
mov
aad
and
and
cltd
les
ja
scas
fdivrl
fstl
pop
sub
bnd
int
inc
sbb
arpl
mov
inc
lods
pop
or
mov
inc
inc
jnp
repz
scas
xchg
add
and
lea
lcall
inc
out
jl
or
lods
xor
mov
adc
frstor
inc
pop
jbe
scas
in
jge
xchg
ficompl
sbb
add
gs
add
sahf
jl
mov
push
adc
xor
ljmp
and
out
lods
push
bound
frstor
jo
loop
je
aas
pusha
dec
daa
push
cmpsb
lock
lret
xchg
jno
lock
cmp
pop
ds
fdivrs
and
pop
lahf
lret
fdivs
push
dec
int
mov
int3
push
enter
inc
mov
fcoml
test
cmpsl
push
insb
sarl
loope
repz
outsb
adc
add
sbb
fld
sbbb
sbb
mov
and
add
fisttps
mov
inc
push
mov
lcall
mov
sbb
in
test
lahf
fnstcw
cltd
mov
inc
or
fs
push
and
imul
sub
xchg
lret
push
sarl
cmp
dec
dec
aad
jmp
adcl
xchg
flds
loop
cmp
stc
ljmp
inc
add
inc
dec
addr16
fisubrl
sahf
sahf
or
xor
int
pop
cmpsl
ret
xor
fnstsw
int
sub
lds
fsin
inc
push
jmp
mov
inc
pop
xor
mov
les
cwtl
repz
mov
lods
jae
cmp
sub
xlat
pushf
mov
lods
mov
mov
adc
xlat
adc
inc
inc
not
fstps
and
es
loope
mov
enter
pop
cmp
cmp
cmp
leave
sahf
adc
fcom
fildl
call
pop
into
push
xchg
inc
icebp
mov
add
jb
xorb
xor
and
xor
push
negb
adc
std
cmp
xchg
mov
jae
mov
imul
enter
add
popf
lock
daa
das
das
sub
mov
dec
pop
lcall
push
mov
call
shrb
dec
cmp
mov
xor
in
lods
mov
mov
sub
pop
and
mov
scas
ror
lods
xor
cmp
test
arpl
mov
cmp
push
sub
fstl
idiv
xchg
and
sbb
ljmp
mov
stos
sahf
lock
out
inc
xchg
or
or
jg
testl
xor
aad
mov
loopne
jmp
test
repz
xchg
ret
sbb
xlat
or
pop
push
fwait
scas
lock
push
push
iret
xor
arpl
dec
incl
divb
xor
or
xchg
mov
xchg
xchg
rsm
mov
pop
in
mov
push
and
aam
daa
dec
cmp
lret
xchg
jg
mov
daa
jne
jno
mov
stos
pop
out
add
xor
xchg
sbb
mov
out
test
sub
sbb
adc
mov
mov
loopne
insb
or
jnp
repnz
das
push
in
xchg
xchg
pusha
dec
shrl
ret
xchg
fs
mov
pop
test
popa
pop
ret
fs
popf
inc
incl
adc
sbb
lds
sbb
pop
icebp
imul
scas
aas
lcall
loop
cmpsb
iret
xchg
inc
pop
jp
test
sti
stos
add
pop
bound
jg
or
add
xchg
fiaddl
fbld
xchg
pop
mov
mov
fwait
out
xchg
ficomps
sbb
rorb
mov
leave
aas
out
inc
movsb
ljmp
jbe
adc
or
pop
cli
aaa
fs
xor
pop
fldenv
adc
outsl
jl
add
sbbb
push
hlt
hlt
sub
lahf
mov
fildll
ss
call
push
sub
aam
cmpsb
test
or
sti
daa
push
aaa
xchg
popa
aas
jno
je
sub
stc
mov
sub
ds
arpl
adc
mov
push
cmp
test
into
loop
xchg
jno
mov
push
pop
push
push
js
inc
jo
les
push
in
loope
push
int3
fcompl
mov
adc
clc
icebp
or
jo
negb
push
cmpsl
jae
push
jns
push
loop
std
int
cmp
pop
mov
fimull
push
enter
adc
mov
or
lock
jg
jne
mov
sbb
fs
mov
lods
ljmp
jecxz
jae
xor
int
mov
insb
rcll
cmp
xor
into
int3
rcll
cmc
xor
divl
cld
adc
outsl
jb
jne
jp
cmp
pop
xlat
adc
scas
sub
mov
outsb
ljmpw
sbb
cltd
push
push
out
js
cli
lea
xor
imul
addb
fs
xor
pop
push
xor
adc
mov
les
mov
ljmp
sbb
jecxz
mov
sub
cmpsl
mov
imul
xchg
aad
and
dec
idivb
fsts
mov
imul
adc
rcrb
pop
pop
and
adc
pushf
dec
outsb
gs
xor
push
pop
jno
aaa
inc
js
sbb
adc
jb
ret
cmp
xchg
lcall
add
jmp
loopne
or
inc
es
mov
inc
sbb
int
lret
aaa
mov
mov
lock
das
or
pop
mov
adc
aaa
es
insl
mov
mov
cmpsl
push
adc
cli
cld
test
lods
repz
push
mov
dec
das
aad
icebp
xchg
mov
cli
orb
mov
adc
clc
mov
cmp
in
lahf
push
fnstsw
rorl
fists
push
inc
xlat
popa
not
or
stos
lea
pusha
xchg
inc
jns
push
out
loopne
out
outsl
or
jp
lret
pop
cs
push
movsb
mov
jecxz
lods
dec
and
add
xchg
dec
or
imul
or
and
fidivs
popf
add
jle
push
jmp
add
xor
pop
and
mov
mov
loopne
ret
adc
in
pop
sarl
dec
loopne,pn
inc
mov
xchg
or
dec
ds
push
jne
sbb
mov
add
out
loope
xchg
les
insb
xchg
in
stos
xor
xchg
out
pusha
adc
pop
int3
out
or
xchg
mov
add
sbb
mov
orb
int3
stos
pop
jle
mov
insb
pusha
jmp
ficoml
dec
and
inc
insb
pop
xchg
jae
jb
push
jle
dec
popf
roll
push
mov
stos
aam
xchg
and
scas
in
mov
out
nop
scas
mov
pop
jecxz
mov
imul
mov
cltd
hlt
inc
cli
test
inc
inc
lds
or
jle
jmp
fidivl
jle
int3
arpl
ret
pusha
and
ret
lds
jg
mov
mov
and
movsb
jne
adc
jbe
in
jge
sub
daa
aaa
and
xchg
or
push
jl
dec
pop
dec
out
dec
sub
xlat
arpl
data16
jo
insl
clc
scas
stc
mov
push
cmp
xchg
push
clc
adc
cmpsb
sub
mov
mov
daa
push
dec
ja
xchg
addr16
ret
sub
lret
xchg
fmuls
fbstp
movsl
je
test
mov
sub
or
sti
test
iret
and
xor
pop
dec
jo
pop
xchg
mov
js
jge
pop
add
jae
add
and
test
mov
out
rcl
repnz
sbb
repnz
lahf
sahf
jmp
stc
or
push
in
jge
push
mov
or
cmp
lcall
mov
fldt
sahf
lret
cli
mov
mov
inc
pop
jg
push
pop
mov
mov
xor
clc
fs
stos
adc
popa
lea
out
fdivrl
nop
xchg
fcomps
repnz
lret
lret
shr
inc
cmp
mov
or
rcll
into
scas
mov
lret
xor
jg
push
movsb
loop
aam
stc
insl
test
dec
add
xchg
lods
mov
pop
mov
mov
xor
dec
mov
and
movsb
gs
inc
loopne
xchg
jbe
jno
sub
imul
fs
inc
in
sbb
push
push
call
repnz
sub
pop
nop
pushf
adc
pop
jmp
out
cs
into
mov
cwtl
test
jl
xchg
fidivs
fxch
outsb
loope
in
add
mov
rorl
cmp
pop
cvtps2pi
adc
pop
dec
pop
movsl
in
adc
push
inc
ljmp
inc
mov
dec
aas
mov
cmp
dec
repnz
mov
sarl
ja
lahf
mov
dec
cwtl
in
neg
mov
pop
pushf
mov
xorl
popf
lret
cmpsb
shrl
mov
sub
int
jmp
fnsave
mov
lods
mov
out
cmp
jo
xor
cmpsl
push
call
jo
lods
aas
push
lods
pop
jecxz
mov
jo
adc
mov
sbb
loope
jne
fwait
sub
outsl
and
jns
push
mov
sahf
frstor
aam
and
ljmp
mov
in
stos
jl
mov
xchg
mov
lods
cmovge
icebp
add
or
pop
pushf
push
mov
out
hlt
dec
mov
test
bound
xchg
movsb
sbb
cmp
nop
leave
xlat
or
imull
push
popf
fcoms
add
data16
fcoms
lret
or
lret
ret
in
aas
add
nop
inc
mov
pop
jl
jmp
push
out
or
jl
inc
cmp
inc
mov
inc
dec
and
dec
mov
jno
out
rorb
push
cmp
jns
dec
mov
addl
inc
sub
adc
int3
jp
lret
add
pop
pop
jnp,pt
sub
jle
xor
shll
or
filds
test
in
jmp
ja
cltd
jae
cmc
push
inc
jg
popf
mov
mov
xchg
rep
inc
out
lock
dec
test
mov
pop
push
jp
add
adc
iret
inc
push
fadd
icebp
subl
sub
jb
add
inc
inc
jg
or
stc
loope
inc
clc
mov
out
xchg
push
addr16
dec
data16
stc
xchg
jns
gs
xchg
inc
xor
sarb
push
or
sub
sub
cmpsl
push
and
jbe
jne,pn
pop
sarb
sbb
cmp
loop
sub
ds
adc
or
jl
outsb
sub
dec
addr16
mov
mov
fistps
scas
fsubr
and
cmp
pusha
adc
movb
test
xchg
mov
jae
push
in
cmp
inc
out
jno
ljmp
xchg
and
add
das
movsl
jnp
and
cmp
push
fists
test
fcmove
mov
adc
pop
mov
inc
inc
pop
inc
dec
outsl
push
out
mov
fdiv
js
sub
outsb
mov
adc
scas
pop
adc
xchg
inc
ss
pushf
les
xor
call
and
mov
imull
push
mov
shlb
and
repz
es
add
cmp
mov
es
mov
and
adc
aaa
xor
cmp
pop
inc
and
mov
fcmove
lcall
cmp
pop
lret
ds
xchg
popf
sbb
mov
out
call
loop
in
sub
and
push
adc
pop
dec
add
lea
lods
jno
aam
jl
out
call
cmp
outsl
repz
push
jecxz
sti
shlb
stos
jns
loopne
mov
adc
int
imul
leave
repz
mov
and
jge
and
outsl
cmp
mov
sub
or
mov
mov
sub
aad
xchg
sbb
hlt
lret
jnp
int
add
mov
aaa
int
jecxz
test
enter
mov
fucomip
mov
nop
mov
sbb
in
rcll
mov
mov
fistl
xchg
sub
aad
inc
int
icebp
aas
pop
sub
jb
out
dec
imul
ror
stc
pop
mul
ds
std
cs
sbbl
pop
cmp
orl
or
xor
nop
xchg
lock
sbb
enter
and
ret
test
lahf
ret
push
xchg
dec
es
push
fs
mov
in
pusha
mov
icebp
test
and
pop
insl
mov
call
sub
cmp
rorb
dec
sub
insl
icebp
test
inc
mov
and
jae
clc
sbb
popa
push
mov
cmp
mov
mov
out
outsl
push
xchg
shll
cld
push
pushf
cltd
adc
lods
inc
rolb
and
cltd
jno
mov
mov
jmp
lret
cmc
neg
xchg
popf
jnp
iret
cwtl
jns
out
lcall
cmpb
or
or
and
xchg
sub
clc
or
repz
pop
and
shl
call
pop
aaa
mov
mov
adc
sbb
xchg
lds
pop
ss
add
xchg
jne
popf
mov
fcomip
xor
lahf
cwtl
int3
ljmp
xchg
jnp
faddl
xor
xor
in
jnp
or
mov
jp
das
cmpxchg
sub
sub
jle
cmpsb
jb
mov
dec
fistps
stos
add
cmp
pop
mov
pop
addr16
add
ja
mov
movsb
mov
sarl
stos
mov
clts
sbb
mov
imul
scas
push
xor
iret
mov
mov
sbb
fcoml
inc
inc
dec
lods
fisttps
je
mov
ja
popa
ficompl
adc
cmp
mov
or
add
leave
push
sub
sarl
pop
leave
movsb
je
movsb
mov
daa
jbe
in
push
jge
push
jecxz
push
loop
aaa
mov
hlt
fwait
add
iret
mov
dec
int
icebp
push
popf
sbb
fbstp
data16
scas
mov
jl
out
sub
into
int
push
mov
addr16
sbb
sbb
xor
cltd
in
jle
inc
enter
daa
dec
add
cli
rcl
jno
fstpt
cmp
push
ds
jne
and
rolb
pop
arpl
ret
test
add
int3
inc
xor
sahf
aam
lcall
movsl
ljmp
or
das
lea
daa
imul
xchg
adc
mov
in
fstpt
subb
dec
mov
int
and
jbe
push
jmp
jg
and
xor
pop
aaa
and
push
adc
sbb
sahf
adc
stos
test
mov
sarl
and
mov
clc
adc
mov
pop
adc
sbb
fcoms
fcomip
jo
mov
xlat
pop
rcrl
out
cmp
xor
or
outsb
scas
into
jne
into
cmc
test
outsl
std
loop
cmp
stc
or
loope
in
pop
fld
data16
pop
lods
pop
pop
mov
out
cli
es
inc
in
fsubr
jns
mov
adcl
cmpsl
loopne
or
scas
pop
mov
imul
jno
repz
jle
xchg
in
inc
sbb
xchg
les
xlat
jo
adc
je
mov
pushf
push
jnp
mov
aas
stc
aad
call
push
dec
push
mov
sub
cmp
je
in
add
xchg
cltd
xor
lret
movd
xor
xor
adc
pop
das
dec
das
add
fstpt
inc
faddl
movsl
aam
call
push
mov
mov
xchg
dec
loopne
aaa
and
mov
rcrl
pop
mov
and
das
sub
mov
push
lock
adc
imul
test
mov
inc
mov
add
hlt
das
cmpsl
movsl
mulb
sub
ss
loopne
xchg
es
ss
jb
int
sub
cmpsl
dec
and
mov
pop
and
mov
mov
stos
and
xor
pop
push
mov
rcrb
out
pop
psrlw
mov
into
ja
orb
mov
fsubs
rorb
pop
cmp
out
rcrb
outsl
push
ja
mov
add
dec
push
mov
in
xchg
int
push
push
inc
test
and
jbe
sbbb
mov
enter
push
fwait
imul
add
iret
cwtl
ud0
xor
mov
ficoms
xchg
int
lods
mov
neg
mov
repnz
shrb
dec
pop
rcrb
data16
mov
inc
outsl
cmpsb
dec
out
pop
jne
je
mov
mov
out
jle
push
bound
jno
mov
add
andl
sub
or
scas
jbe
jp
inc
xor
das
cmp
jnp
jo
jle
or
in
push
add
mov
aad
xchg
mov
sbb
xor
cmp
push
jae
xor
push
nop
jmp
mov
adc
mov
and
xlat
sbb
push
shrl
popa
xchg
dec
mov
adc
cmp
add
jne
push
les
arpl
popf
popf
inc
dec
dec
sahf
or
out
push
inc
not
adc
into
fucom
xchg
mov
inc
int3
and
adc
fisubrs
shrb
mov
mov
insl
leave
sbb
push
shll
jbe
sbb
cs
loope
aaa
pusha
out
or
in
jl
sub
dec
cmp
mov
subb
mov
add
xchg
xor
sbb
cmp
hlt
and
ss
cmpsb
mov
shr
gs
push
enter
daa
dec
mov
fwait
jno
lock
aaa
mov
ds
jnp
movsl
mov
and
dec
loop
test
test
lock
lods
xor
test
pop
push
jg
js
cwtl
dec
pop
shrb
push
leave
enter
jl
dec
stos
sub
bound
in
sbb
mov
insl
fmuls
mov
test
mov
sub
and
mov
out
add
mov
and
mov
mov
pop
lea
push
push
fisttpl
test
cltd
sbbb
adc
mov
incl
mov
or
mov
iret
pushf
fmul
clc
into
imull
dec
inc
lret
jne
mov
push
cmp
sub
jns
pop
cmp
xor
fisubrs
push
push
loop
mov
push
adc
faddp
add
push
jnp
aas
jmp
movsb
out
push
inc
xor
xchg
xchg
xor
lock
stos
push
fsub
xchg
into
lret
mov
imul
sbb
repz
xchg
test
outsb
sbb
iret
fstpt
scas
dec
fldcw
out
frstor
adc
ljmp
aad
popf
sbb
mov
jmp
mov
push
outsl
je
popa
mov
into
imul
test
dec
call
mov
jne
sub
and
push
fucomi
idiv
pop
std
ficomps
inc
add
mov
lcall
dec
push
subl
imulb
std
jl
mov
push
sbb
mov
sbb
xorl
popf
mov
repz
mov
push
mov
addr16
pop
xchg
adc
xchg
jo
dec
sub
es
push
aas
ret
outsl
pxor
ja
pop
insl
pop
ja
dec
and
call
mov
xor
lods
lahf
or
xor
or
test
pop
jbe
fwait
shr
inc
cwtl
sub
push
xor
rcll
stc
dec
sahf
fstpl
push
movsb
xchg
fbstp
add
add
pop
and
scas
stos
dec
stc
pop
out
xor
pop
or
adc
push
aad
cwtl
hlt
cltd
in
xor
cmp
mov
out
dec
mov
test
fidivs
sbb
mov
jns
lcall
add
ljmp
xor
aad
or
ret
xchg
xchg
xchg
sbb
movsl
mov
jle
mov
lods
add
push
sbb
xchg
mov
scas
inc
xchg
sbb
mov
xor
pop
inc
pop
bound
icebp
jecxz
outsb
or
xchg
adc
xorl
or
aaa
stc
sub
add
lods
mov
xchg
mov
adc
fs
mov
pop
jle
gs
in
addr16
push
js
fistps
adcl
cwtl
stos
push
and
popf
add
inc
push
dec
and
stos
mov
ljmp
imul
imul
lock
xchg
popf
in
sub
pop
iret
popa
sub
sub
sbbb
scas
hlt
jb
jp
sub
gs
cmp
push
jne
fstp
sbbl
int3
xchg
shrl
adc
adc
repnz
push
dec
movsb
mov
ljmp
push
adc
aaa
pop
in
cmp
pop
mov
add
leave
or
cltd
dec
stos
shlb
xor
or
mov
and
xchg
lret
cmp
push
cmpsb
cmp
in
dec
outsb
jle
and
inc
daa
dec
enter
adc
push
sub
cmp
sub
sbb
clc
lahf
test
mov
test
sti
les
pop
pop
mov
js
push
adc
lcall
push
pop
setns
cmc
add
sub
outsb
or
adc
aas
mov
xchg
or
and
mov
loopne
and
xor
icebp
je
int
stos
test
sub
mov
lcall
fimuls
adc
push
xchg
mov
xorb
jg
sti
stos
mov
cmp
adc
movsb
jns
adc
ss
sub
fmuls
jno
lret
rol
dec
mov
cmp
incb
out
sub
cmp
jns
adc
stos
xor
int
outsl
int
loop
jb
stc
dec
dec
xchg
adc
mov
dec
data16
or
orb
cli
mov
std
xor
dec
cmp
dec
stos
and
fildll
cltd
gs
push
loopne
shll
adc
cld
imul
adc
cmc
mov
sub
cmp
xchg
xlat
out
pop
adc
pop
test
mov
rclb
jmp
jb
loopne
fwait
aad
mov
nop
xchg
mov
dec
adc
xchg
fldcw
sub
jecxz
std
sarl
inc
jmp
adc
daa
testb
adc
xchg
mov
pop
mov
jo
inc
push
imulb
cmp
push
dec
into
push
sbb
shll
sbbb
fdecstp
mov
mov
cmpb
std
add
sbb
fstpl
mov
in
and
mov
push
in
fisubrs
adc
or
dec
es
fisubrl
faddp
dec
pop
in
cmpsl
dec
insb
push
mov
or
out
imul
mov
adc
mov
imul
xchg
sub
push
push
mov
and
push
mov
in
clc
clc
pop
test
xchg
data16
imul
stos
cmp
out
cwtl
aam
xchg
cmpsb
or
push
sub
cmpsb
sti
add
and
xor
sbb
pop
cmpsl
jae
bnd
dec
and
xor
je
ficomps
call
scas
sub
xchg
lds
sub
add
add
adc
xchg
or
in
inc
in
mov
xchg
imul
mov
jp
mov
push
jbe
dec
in
repz
mov
push
faddp
dec
lods
into
jbe
testl
out
cmp
inc
ja
and
dec
dec
add
icebp
out
shll
lcall
lods
xorb
pop
mov
out
aaa
enter
mov
in
and
pusha
lock
das
fistpll
xchg
push
cwtl
jg
and
sahf
inc
mov
mov
push
dec
jb
popf
sub
in
daa
push
in
mov
stos
adc
shll
dec
sub
subl
enter
call
lcall
movsb
xlat
pop
ljmp
cmp
mov
out
test
push
hlt
add
xchg
bound
int3
cli
fld
pop
mov
lcall
add
shrb
dec
mov
pop
pop
fcmove
or
mov
pop
hlt
imul
xchg
jge
inc
jp
aaa
popf
cs
fidivs
or
add
ss
sbb
mov
inc
fimull
adc
into
scas
push
inc
cwtl
and
out
in
push
out
fstps
cmpsb
mov
cmp
sbb
sbb
dec
jno
cmp
test
cmp
or
mov
test
mov
add
sub
imul
jno
call
pop
push
jns
js
cmp
pop
ds
fldt
je
loope
push
inc
fsubl
rep
lret
adc
sbb
fisttps
loop
pop
sbb
out
and
jbe
hlt
pop
xlat
int
mov
push
pop
mov
sbb
sbb
sbb
pop
sub
pusha
jnp
adcb
cmp
mov
ds
adc
fs
fadds
push
lods
sbb
rcr
ja
fisubs
mov
push
movsl
shl
fiaddl
divl
push
xchg
jmp
lods
or
stc
add
inc
adc
out
add
or
cld
lret
or
mov
sarl
in
mov
cwtl
sar
ss
gs
push
pop
or
loope
inc
jmp
stos
les
cmp
mov
mov
scas
xlat
sub
inc
dec
mov
imul
jmp
jecxz
cs
mov
nop
jno
es
jo
stos
inc
mov
fnsave
xor
ret
insl
stos
aam
sub
call
mov
and
repz
adc
cmp
lock
dec
fisttpl
pop
inc
negb
inc
mov
stc
dec
aas
fsub
mov
sbbb
and
test
imul
shrl
cwtl
xchg
push
gs
dec
jle
lret
ror
push
mov
out
repz
aad
adc
xlat
das
inc
mov
mov
dec
cltd
dec
aam
inc
pusha
ret
lea
insl
daa
sub
dec
sbb
cmpsl
dec
xlat
xchg
mov
loopne
sub
inc
sarl
pop
into
mov
mov
stc
rclb
cmp
mov
vpackuswb
clc
xor
loope
or
mov
sub
pop
jbe
pop
stos
daa
mov
adcl
sub
add
fisubrs
xchg
dec
inc
mov
cmc
sbb
test
adc
adc
fwait
push
push
roll
cmp
fwait
clc
dec
sbbl
popf
ret
xchg
roll
and
jmp
ja
sbb
in
pop
nop
xchg
mov
ljmp
and
dec
loopne
xchg
icebp
es
lea
push
dec
nop
js
jne
push
xorl
clc
shll
pop
jns
or
roll
cmp
pop
jmp
stos
into
adc
ret
jecxz
xor
jo
add
sbb
in
inc
fs
mov
fistps
inc
aas
jmp
scas
dec
or
sub
pushf
push
adc
jmp
push
add
frstor
int
jecxz
xchg
fsubs
data16
sbb
mov
imul
aaa
scas
hlt
sarb
pop
cwtl
fists
fistps
mov
push
scas
mov
hlt
or
inc
push
in
push
or
pusha
push
mov
jle
xchg
mov
dec
xchg
and
ficoms
data16
mov
stos
lods
xchg
leave
or
movsb
mov
sbb
scas
inc
mov
jge
pop
pop
sbb
pop
pop
aaa
popf
orl
xor
jl
jp
dec
mov
in
adc
loope
ret
scas
xor
lea
stos
in
adc
roll
in
cmpsb
ds
sbb
enter
daa
dec
sahf
out
cmp
sbb
jno
push
mov
stos
pop
fs
fmul
ds
pushf
movsl
sahf
add
mov
push
jp
test
adc
pop
loopne
rcrl
cmpl
push
jnp
inc
fmuls
mov
ljmp
mov
adc
cmc
fwait
push
push
fs
xor
push
sbb
das
sbb
sub
divl
test
pop
mov
dec
lcall
pusha
mov
std
pop
sbb
ret
inc
sahf
popf
sbb
out
das
subb
cs
dec
stos
mov
mov
mov
orl
repnz
pop
mov
lret
shll
cmp
sbb
add
cmc
mov
jo
outsl
mov
loop
jns
stc
mov
aam
or
scas
stos
data16
jp
hlt
fisubrs
out
push
sbb
repnz
mov
in
and
dec
popa
pop
das
rcrb
pop
out
pop
sub
call
imul
add
sub
sbbb
sub
fisubs
push
stos
sbb
jp
or
cmpsb
nop
cmc
aad
adc
sub
movsb
cmp
fsts
test
scas
mov
jecxz
xchg
push
xlat
aaa
lods
lea
mov
xor
xor
dec
fldt
fstpt
iret
pop
out
xor
lret
std
inc
push
adc
aas
ja
sub
aad
fisttpll
sub
lods
rcll
push
divb
fwait
xor
jno
jmp
mov
jns
mov
cltd
hlt
cmp
sub
lret
inc
jp
mov
adc
jae
jne
outsl
cli
fldt
and
jl
add
dec
mov
lahf
fld
sbb
shll
add
iret
dec
adc
mov
pop
push
dec
icebp
mov
shrd
repz
inc
hlt
push
mov
sarl
shlb
push
sub
mov
mov
xchg
mov
push
inc
fisttpll
mov
xchg
pushf
movsb
cmpsl
ljmp
iret
pop
and
shrb
pop
fisttps
popf
cs
jecxz
add
add
iret
stc
cltd
test
and
xchg
das
jmp
test
jp
jb
cmp
dec
inc
mov
lcall
fwait
daa
push
push
outsl
aam
add
cmp
xor
outsb
repnz
loop
xchg
or
aaa
mov
fiadds
ja
rorl
ret
mov
cld
pop
and
jae
out
test
mov
cli
pop
leave
jnp
jns
xchg
jb
or
rclb
push
xor
sahf
pop
jp
stos
das
mov
iret
scas
insb
fndisi(8087
jbe
xchg
das
lods
jle
sub
ret
lret
es
mov
xchg
cld
sub
jmp
mov
inc
cmc
push
shll
outsl
popf
js
dec
mov
or
sti
stos
stc
pusha
les
jge
or
aam
imul
ret
scas
push
int
push
stos
add
mov
es
arpl
push
pop
xor
ja
pop
sbb
mov
insl
mov
push
repnz
inc
ficompl
int
int3
rorb
fidivs
or
lds
shlb
mov
jne
leave
idivl
movsb
inc
push
mov
push
push
jge
push
mov
aaa
pop
adc
add
int3
pop
jl
xchg
jns
clc
cmp
push
or
mov
xlat
mov
jo
xor
add
cmp
lods
push
test
mov
cmpsb
shll
in
add
dec
daa
dec
dec
xchg
cmp
xor
jno
stos
fs
mov
cmp
mov
and
push
lahf
loop
enter
jmp
add
scas
stos
xor
fsubs
pop
mov
sub
pop
mov
out
repnz
pusha
fdiv
cld
mov
push
jbe
outsb
nop
sbb
adc
shrb
cmpsb
mov
xchg
orb
inc
sbb
push
test
push
bnd
jle
xchg
cli
test
es
adc
lcall
lcall
rorb
lea
outsb
in
jp
enter
mov
outsb
mov
and
mov
add
mov
xor
movsb
les
cmp
mov
sti
sbb
dec
xor
inc
cmp
push
or
push
into
in
jle
push
pop
xchg
outsl
push
ja
adc
add
outsb
shlb
sub
data16
rorb
sub
and
jns
xchg
in
nop
in
sti
in
ret
js
jl
sub
xchg
shl
repz
dec
movsb
jge
out
out
or
pop
mov
adc
xchg
mov
les
mov
mov
out
mov
shll
jmp
xlat
mov
aad
pop
jo
daa
scas
js
cs
jge
stc
jp
jecxz
stc
inc
fisubl
lea
mov
test
pop
hlt
cs
adc
fcomp
stos
and
pop
mov
pop
inc
mov
nop
inc
outsl
cmp
push
pop
insl
jb
cs
dec
xor
js
movsb
aaa
add
je
push
cwtl
or
pushf
mov
dec
push
mov
mov
adcl
out
xor
mov
outsb
lock
das
add
mov
mov
roll
adcl
insl
cmc
push
dec
adc
cmpsl
dec
cmp
mov
mov
lods
dec
xor
mov
gs
and
cmp
and
repnz
mov
sub
aam
test
scas
mov
ds
fnsave
inc
xchg
xchg
popa
scas
insl
and
int3
xor
sub
rcl
xchg
jnp
lret
push
mov
sub
add
cmc
rcrl
sub
shll
sti
mov
xchg
test
pushf
push
xchg
idivb
shl
push
pop
or
add
push
dec
lret
decl
add
insb
fldl
inc
or
rcrl
mov
gs
fidivrs
cltd
test
ja
lds
inc
pop
js
mov
imul
push
test
jne
adcb
lahf
mov
bound
jns
mov
cltd
subl
out
insb
jbe
dec
cmp
or
push
ds
inc
jle
in
cmp
cmc
jnp
or
in
mov
pusha
ror
jecxz
xchg
iret
inc
lret
jmp
les
lcall
stos
das
popf
lahf
loop
mov
dec
popf
push
stos
insb
aas
and
push
loope
pop
scas
mov
and
xchg
mov
push
jbe
popa
pop
imul
arpl
mov
inc
out
or
push
pop
cmc
inc
jno
loopne
dec
outsb
mov
mov
orb
call
sarb
in
cmc
repnz
jae
leave
outsb
int
movsb
int
fists
stos
dec
jbe
fists
in
xor
aaa
sbb
mov
jecxz
push
add
xchg
jl
jg
dec
addr16
loop
out
sub
xor
js
out
scas
icebp
imul
push
push
test
inc
jae
cmp
call
mov
daa
dec
test
cmp
adc
je
sub
xchg
push
cmpsl
ds
or
mov
lahf
add
push
movsb
mov
add
movsl
xor
ficoms
pop
data16
pop
leave
sahf
xor
pop
sti
pop
test
mov
out
fsubl
and
outsb
repz
fstl
stos
leave
mov
sbb
push
sbb
test
pushf
xor
std
enter
fmuls
adc
or
fidivrl
push
sbb
inc
mov
outsb
test
sahf
jecxz
pop
test
mov
mov
sub
sub
rolb
mov
pop
mov
sub
jbe
gs
xor
aas
xchg
push
shll
or
insb
xor
das
int
xor
arpl
dec
xor
loop
push
in
and
jnp
add
mov
outsl
mov
out
scas
gs
pop
xchg
and
in
sti
dec
scas
sti
fwait
incl
lahf
cmpl
loopne
dec
ficomps
fs
adc
sub
leave
inc
stc
repz
xchg
ja
mov
xor
mov
ljmp
mov
insb
mov
cs
jno
aad
add
add
ret
dec
lea
push
flds
sahf
jecxz
movsl
adc
fldl
xor
adc
xor
pop
cmpsl
fcmovb
adc
mov
dec
mov
sbb
fsts
pop
sub
add
mov
inc
mov
aas
mov
imul
aam
and
dec
mov
divb
mov
cwtl
lds
sub
sub
cld
leave
add
lret
push
daa
inc
mov
sub
xor
and
fidivrs
mov
jae
or
ret
cmp
es
add
insl
fsubl
dec
or
mov
icebp
gs
mov
mov
xchg
and
aad
test
adc
rorb
dec
add
push
enter
fadd
cmp
in
pop
xchg
sbb
out
les
lds
pop
ja
push
stos
hlt
and
pusha
xchg
ret
push
cltd
mov
test
and
jp
xor
repz
mov
dec
rcrl
test
ds
xchg
adc
mov
mov
dec
aam
or
ja
fwait
test
into
push
mov
sub
mov
test
jl
inc
xor
inc
or
arpl
mov
repz
mov
loope
push
pop
bound
cmp
out
inc
lock
mov
mov
jmp
dec
cmp
aad
adc
call
out
xchg
jns
fs
or
mov
sub
ljmp
jp
xchg
pushl
mov
sub
jle
outsb
cld
in
add
pop
adc
and
imul
decb
sbb
cltd
loop
push
pop
movsl
pop
popf
test
mov
mov
shrl
stos
dec
jmp
ret
imul
hlt
scas
sbb
std
enter
push
iret
cmp
cmp
mov
pop
mov
jle
arpl
test
lahf
cmp
shl
leave
inc
lock
add
mov
lea
fidivrs
and
jp
cmp
xchg
roll
movsb
movsb
sub
movsb
pop
xchg
pushf
push
fwait
lds
fxch
fistpll
cmc
and
and
or
into
sbb
imulb
ljmp
sub
inc
jo
inc
and
hlt
pop
cmc
cmp
mov
cld
inc
add
cmpsb
movl
enter
daa
dec
cmp
pushl
popa
and
in
imul
cld
fwait
sbb
mov
pusha
and
outsb
pop
lahf
and
add
sub
xor
popf
xor
jbe
pop
lock
dec
pop
cmp
push
cmp
loope
dec
fmull
sub
xchg
mov
jmp
pop
rolb
cli
loopne
cs
mov
call
push
add
cmpsl
sub
roll
lea
or
and
mov
mov
xchg
rolb
out
in
jg
in
mov
imul
pop
cwtl
call
ss
lds
cmp
xor
call
lret
stos
sarl
cmp
mov
or
stos
in
or
imulb
dec
outsl
sub
inc
stc
faddl
adc
std
add
inc
pop
pop
data16
inc
lods
test
cmp
out
dec
cmp
mov
xor
mov
in
data16
sti
dec
sti
inc
sbb
gs
or
pop
mov
push
adc
lret
out
repz
mov
sbb
xor
fisubrs
cltd
mov
int
pop
mov
stos
cs
dec
sbb
nop
fisttpll
mov
inc
adc
shlb
int3
jecxz
xchg
ja
loopne
xchg
out
mov
ds
scas
xchg
pop
pop
pop
cmp
dec
pushf
jb
fisttpl
int
pop
iret
xchg
sbb
inc
rolb
int
aas
push
fists
jb
nop
js
and
pop
roll
test
cli
test
std
data16
mov
xor
mov
jge
mov
push
push
add
jbe,pn
lea
stos
mov
sub
enter
adcb
das
rorb
mov
mov
aam
stos
es
leave
out
mov
ret
cmp
dec
push
mov
mov
cmp
adc
mov
stos
xchg
inc
and
jo
xchg
xor
popa
shl
in
sub
insb
pushf
test
mov
push
mov
fldl
mov
clc
pop
push
ficoml
aad
les
jnp
pop
and
loop
jecxz
add
xchg
jle
je
push
shld
cmp
jecxz
sub
dec
xor
push
cmp
mov
daa
orb
loopne
int
pop
xchg
mov
rcrl
shrb
pop
push
push
pop
xor
add
mov
or
andb
and
adc
jmp
push
mov
movswl
ja
cmp
inc
xchg
call
dec
sbb
adc
fiaddl
mov
int
out
xchg
xchg
pop
bound
enter
pop
nop
orl
sub
or
push
inc
cmpsl
sub
cwtl
jecxz
xchg
jp
insb
sbb
iret
jnp
or
aam
shl
mov
pusha
imull
fists
insb
icebp
xchg
jne
test
cmc
xchg
ja
fidivl
jae
cwtl
mov
sbb
es
in
push
add
leave
jno
stos
push
sbb
and
das
xor
imul
nop
push
cmp
dec
fwait
inc
bnd
cmp
add
hlt
xor
stc
arpl
insl
lds
dec
add
outsl
jns
fidivl
out
int3
xchg
dec
inc
pop
mov
fwait
cmpsl
lds
dec
push
shlb
mov
leave
pop
pusha
sbb
jecxz
xlat
push
ljmp
jge
pushf
aas
sbb
vmread
cltd
fsubrl
leave
sub
add
rcrl
inc
mov
mov
js
sub
or
imul
cmp
aad
inc
xchg
pop
jb
dec
and
in
mov
jl
add
inc
jp
cmp
jb
sub
test
scas
sub
cmp
aad
and
notl
jb
test
cmp
pusha
inc
in
subl
mov
jno
push
outsb
in
loope
cmc
sub
imull
fcmovne
inc
outsb
mov
pop
sub
popa
inc
rorl
push
lcall
testl
int
mov
or
sysret
das
and
inc
cwtl
popf
push
lret
xchg
mov
sbb
push
mov
sub
leave
sbbb
aam
imul
mov
fs
mov
lea
push
cmp
in
test
mov
and
mov
cmp
dec
dec
or
pusha
cmp
mov
movsl
iret
outsl
pop
adc
stc
xchg
clc
xchg
sar
add
lds
mov
out
lods
nop
sahf
xlat
mov
add
es
cli
mov
lret
add
rcll
in
push
fmull
jecxz
cmpsl
lock
imul
fincstp
repz
int3
movsl
xchg
std
jbe
sbb
insb
scas
xor
push
fcomip
mov
ret
jmp
add
xor
rcl
pop
andb
pop
push
dec
dec
into
pop
inc
pushl
je
mov
pop
jecxz
push
lea
push
or
fcomps
dec
adc
rorl
dec
xchg
push
dec
and
ficoms
inc
shlb
repz
push
jb
adc
cwtl
or
rcll
inc
in
or
dec
insb
mov
fsubl
pop
mov
cld
pop
sub
push
mov
inc
fildl
das
lahf
mov
inc
mov
lret
adc
inc
es
jb
stos
sti
cs
add
les
sub
icebp
adc
lods
mov
hlt
mov
into
pop
xchg
and
or
adc
iret
cs
test
sbb
arpl
clc
mov
clc
pop
pop
mov
ljmp
popa
pop
int
outsb
stos
rclb
pop
xchg
push
outsb
je
dec
xor
lsl
jp
dec
pushf
jge
pusha
xor
sub
mov
dec
icebp
repz
cmp
call
shl
ds
fdivrp
fwait
jecxz
dec
push
sti
roll
cmpsl
leave
cs
mov
push
adc
stos
xor
xchg
inc
push
mov
mov
lret
ja
mov
mov
push
push
pop
mov
mov
adc
pop
mov
add
jbe
or
adc
shrl
xchg
sahf
pop
push
sbbl
sub
loopne
cwtl
cmpsb
push
mov
dec
pop
mov
cmpsb
out
insb
xchg
mov
fnstcw
test
pusha
xchg
fidivl
fbstp
mov
xchg
dec
mov
xchg
inc
in
push
jae
xchg
cmpsl
push
fcomip
mov
mov
or
cs
xor
jg
scas
inc
and
adc
mov
iret
cli
push
jl
scas
in
sub
mov
call
inc
gs
mov
push
out
jmp
add
jl
pop
iret
shrb
faddp
pop
movsb
lds
pop
mov
dec
mov
repnz
outsb
push
aas
push
cmp
pop
jbe
notl
sbb
jge
or
mov
dec
mov
lret
bndstx
mov
mulb
sbb
mov
push
mov
fldl
mov
xchg
in
popf
nop
mov
daa
inc
cmp
cmp
mov
sub
jb
cmp
inc
ds
fsubr
movsl
rol
and
and
sbb
sub
fidivs
dec
imul
add
pop
ds
stc
hlt
pop
mov
push
cmp
inc
push
fsubl
leave
nop
outsb
sbb
xor
hlt
cwtl
sarb
and
xor
xor
cld
popa
mov
notl
mov
dec
dec
int
adc
sub
xacquire
and
mov
sahf
int3
adc
rolb
or
inc
mov
orl
adc
cmpsl
shrb
cmp
cmpsl
out
mov
lret
stc
shrl
cmp
out
or
mov
into
jo
hlt
cmc
test
cld
xor
movsl
outsl
out
leave
loop
sbb
stc
dec
push
add
std
mov
pushw
nop
push
lods
ja
orb
or
cli
icebp
scas
stos
xor
or
in
cmp
ljmp
and
loopne
stc
out
mov
mov
ljmp
xchg
rclb
cmp
imul
jg
fsubl
insl
cltd
mov
cs
call
lea
stos
loop
inc
cmp
push
je
aam
jecxz
inc
mov
lea
sbb
lods
jae
pop
rclb
dec
jb
pand
cmp
sbb
inc
int3
test
aas
xchg
je
jb
ret
add
and
add
shl
mov
testb
aad
divb
add
mov
cmp
out
push
jecxz
dec
js
imul
mov
cmp
ss
das
jle
sub
jecxz
movsl
mov
xchg
aam
ret
out
sti
popl
insl
dec
cld
or
cmpsl
inc
sub
icebp
ljmp
mov
icebp
sbb
and
cmpsb
inc
and
outsb
sbb
xchg
sub
xchg
testl
insl
inc
fstl
add
xchg
xlat
fmull
ljmp
stos
pop
js
fs
shll
dec
sub
push
sub
push
bound
pop
push
add
pop
mov
xor
test
lcall
int
ljmp
rolb
push
sahf
xor
add
ret
lcall
repz
aas
or
fwait
pushf
xchg
xchg
lods
js
jno
pop
mov
test
ja
mov
arpl
ss
mov
daa
cmpb
xchg
aaa
mov
dec
clc
out
push
jg
bound
jle
xchg
imul
mov
fistpl
mov
mov
add
adc
sbb
jle
jle
in
aas
mov
fists
mov
jmp
lock
jae
rclb
mov
push
push
mov
inc
push
shrb
pop
lods
sbb
aam
imul
and
out
adc
imull
iret
pop
outsb
lret
cs
inc
pop
mov
arpl
gs
or
inc
icebp
pusha
inc
insl
ficomps
xchg
ret
stos
cmp
addr16
push
pop
jb
fisubs
dec
lds
hlt
repz
pop
mov
popf
jo
leave
dec
adcl
lods
mov
cmp
jge
xchg
pop
sbb
aaa
pop
mov
pop
add
ja
dec
and
xor
in
fisubrl
lods
pop
movsb
cmp
push
scas
push
jl
bound
pop
sbb
test
lds
inc
cmpb
clc
and
sub
xor
cmp
fstpt
adcl
movsl
enter
hlt
or
push
lock
addb
adc
sbb
pop
pop
repz
and
pop
notl
and
fmull
mov
outsb
jg
mov
rclb
adc
jbe
addr16
mov
xor
loope
jge
jl
leave
mov
push
or
int
inc
mov
add
filds
sub
addl
inc
mov
sbb
outsl
mov
orb
jg
or
mov
pop
dec
mov
in
imul
adc
and
xor
lret
push
roll
lods
cmp
pop
sub
pop
fs
push
and
cmc
dec
test
xor
sti
add
icebp
outsb
pop
stc
add
adc
jp
add
push
lock
pop
data16
in
and
mov
xor
push
sti
push
xchg
mov
gs
pop
in
js
add
aam
cmc
mov
inc
xchg
andl
loop
je
out
int
repnz
mov
sbb
jmp
lahf
fisubrs
clc
mov
mov
outsb
xor
dec
or
jne
dec
orl
pusha
lea
jo
push
jecxz
jg
jmp
push
bnd
sub
movsb
pop
jae
mov
dec
pop
jmp
out
mov
cmp
inc
idivb
inc
aas
xor
push
dec
xchg
les
out
shrl
mov
cli
std
pop
loop
cwtl
mov
loopne
mulb
mov
cld
jne
inc
lret
fidivl
jo
sbb
loopne
das
pop
stos
xor
dec
cmp
ret
jbe
xor
adc
js
orb
pop
cmpsl
inc
xor
mov
sar
lods
bound
jecxz
push
mov
dec
inc
or
lea
or
mov
cmpsl
loopne
add
rcll
mov
js
inc
clc
shrb
imul
and
jb
mov
push
out
mov
mov
push
add
add
cltd
into
adc
xor
rcr
mov
or
lcall
mov
xchg
sbb
cmp
or
xchg
mov
inc
sub
out
add
fstpl
clc
xor
or
sbb
mov
pop
mov
inc
imul
inc
fimull
mov
push
mov
xchg
cmp
jne
push
mov
out
xor
mulb
or
notl
pushf
jp
shr
into
sub
mov
adc
fidivrl
insb
pop
cmp
jnp
lds
jle
imul
in
sbb
pusha
enter
je
std
xchg
out
mov
rolb
or
push
sbb
mov
xchg
movsl
and
scas
mov
imul
push
adc
adc
jbe
iret
mov
movsb
add
and
hlt
adc
push
push
inc
imul
push
in
push
mov
int3
xchg
pop
xchg
sbb
int3
push
addl
lds
scas
mov
add
xchg
bnd
leave
rorl
movsb
test
push
push
xlat
cmp
jge
call
hlt
aaa
dec
das
or
mov
int
xchg
mov
adc
and
pop
scas
dec
test
and
jns
stos
int3
daa
push
inc
nop
filds
inc
in
cmpsb
shrl
std
in
imul
daa
inc
dec
or
sub
jno
jl
sub
leave
pop
cmp
cmp
movsl
iret
lret
shlb
fs
pushf
push
jg
ret
int
test
pop
pop
in
xor
dec
inc
xor
add
outsb
fimull
ss
push
inc
in
sub
jmp
clc
push
pop
sub
imulb
shl
sbb
lock
jae
jp
inc
sbb
loop
enter
fcomp
xchg
push
or
jp
nop
pop
fsubrl
jl
add
lods
and
pop
add
push
ror
xor
push
push
sahf
adc
roll
push
imul
ljmp
fisubs
adc
sub
ss
data16
jns
sbb
stc
or
decb
rcll
out
or
call
into
ss
cmc
adc
adc
movsb
ja
loop
clc
es
mov
dec
inc
add
stos
lods
inc
dec
cmc
mov
std
out
fmuls
cli
push
in
iret
xor
mov
xchg
decb
sbb
adc
pop
add
or
fcomp
cmpsl
imul
stos
jo
cmp
rcll
imulb
push
xlat
and
js
mov
ret
les
jmp
adc
cs
push
adc
cs
nop
dec
mov
or
pop
xchg
xor
xchg
in
je
clc
or
in
out
jae
mov
stos
xlat
pop
sarl
dec
push
mov
pop
pop
jae
inc
ficoml
inc
adc
pop
aas
rcrb
sbb
sbb
sbb
sub
and
and
sarl
xor
mov
xor
mov
mov
sbb
pop
xchg
dec
mov
sbb
in
dec
mov
mov
push
pop
aam
dec
bnd
add
jbe
insl
pop
nop
fmull
fidivs
mov
cwtl
mov
lods
int
mov
aaa
insl
popa
and
fdivr
outsl
pop
lods
ds
shrb
sbb
out
call
cmp
fstpl
scas
xchg
mov
dec
lods
pop
into
add
shr
mov
xchg
and
and
and
into
cltd
add
movsb
popf
mov
or
pop
and
xchg
fildll
sbb
mov
or
xor
fwait
jo
xor
in
pop
add
clc
inc
mov
xor
inc
adc
sti
mov
in
fs
xchg
xor
adc
int3
or
ja
push
cmovp
push
inc
jecxz
cmpb
xchg
pop
push
jne
jbe
mov
sbb
into
xor
xchg
ret
lahf
xchg
call
leave
jne
out
std
or
mov
cmp
addr16
jp
lods
push
mov
add
insb
enter
pop
aaa
lds
dec
scas
in
pop
inc
pusha
arpl
pusha
xchg
rorl
inc
push
loop
jae
pop
mov
sub
popf
mov
test
lds
stos
push
cmp
and
and
sbb
aam
imul
scas
or
pop
push
push
and
adc
cmpsl
jb
call
int
hlt
pusha
mov
arpl
imul
inc
outsb
sub
shrl
nop
inc
imul
jg
in
jno
pushf
int3
cmp
add
lods
popa
push
lds
fildl
mov
inc
cmpsl
repz
cmp
sti
movsb
bsr
es
das
jbe
and
push
xchg
sbb
push
xor
xchg
ja
or
push
int
ss
dec
dec
add
lret
xor
lcall
and
or
ljmp
int
stos
cmpsb
push
sbb
in
push
sti
out
out
iret
popa
daa
inc
xchg
dec
cmp
pop
jno
sbb
jl
push
xor
movsl
in
and
aam
lahf
mov
test
popa
add
dec
sbb
mov
cmp
js
sub
jne
outsl
push
inc
cmpsb
loope
or
mov
push
jnp
inc
pushf
or
ror
xor
dec
out
popl
mov
in
sub
out
push
pandn
sub
jmp
pop
sub
lcall
jl
mov
sahf
mov
xchg
test
flds
out
xchg
mov
lods
pop
mov
jmp
adc
and
cltd
mov
cmp
fdivs
mull
lret
cmp
mov
or
mov
push
outsl
xor
loop
mov
stc
outsl
cmp
add
sbb
xchg
nop
js
sub
popf
mov
jae
and
lret
sbb
pop
fwait
in
jge
push
sti
mov
lcall
add
pop
and
mov
imul
out
lods
repz
ja
or
dec
cmp
iret
xlat
fisubrl
mov
outsb
sbb
cs
das
mov
and
mov
aaa
ds
jb
in
into
fbld
dec
inc
cmc
out
inc
outsb
icebp
push
pop
call
sub
jle
fldenv
dec
xor
mov
pop
decb
inc
sub
dec
aas
outsl
jb
jb
adc
mov
push
scas
pop
ror
xchg
imul
test
insb
inc
mov
jg
mov
lcall
lret
insl
ljmp
addr16
stos
mov
or
mov
mov
or
ret
xchg
cmp
fs
inc
fucomip
dec
in
movsl
push
cmpsl
inc
into
mov
icebp
outsl
cmp
cmp
sarl
pop
add
insl
mov
lret
xlat
cmp
sub
andl
nop
push
pop
push
mov
mov
clc
inc
inc
rclb
adc
out
dec
adc
lcall
sub
xchg
insb
jg
push
mov
inc
inc
add
mov
cmc
mov
adc
dec
sub
test
sub
xchg
sbb
sbb
push
les
or
sahf
mov
lahf
jecxz
push
xchg
cld
add
adc
pushl
popa
push
xor
pop
or
test
xlat
cld
xchg
addl
jae
cmp
insb
and
fists
inc
jp
adc
clc
adc
mov
jne
std
outsl
mov
mov
jns
popa
mov
xchg
lret
sbbl
out
xorb
mov
addr16
jp
xor
mov
mov
cmp
jle
and
sti
add
pop
dec
fbstp
nop
imul
adc
mov
jae
ds
jmp
rcrb
jne
mov
mov
stos
xchg
add
and
xchg
dec
imul
scas
outsl
add
push
adcb
mov
iret
jbe
lods
ret
mov
ljmp
arpl
fisttpll
jno
ret
or
mov
push
inc
ljmp
xchg
enter
sub
pop
mov
dec
fimuls
adc
movsb
pop
sarb
add
xchg
adc
leave
scas
add
arpl
testl
cmp
sbb
sub
add
and
dec
jo
outsb
push
and
ds
cmc
push
cs
or
stos
cmp
lods
adc
addl
inc
cmpsb
fnstcw
in
cmp
enter
daa
inc
addr16
cmp
loop
sub
jo
cmp
jmp
adc
lds
lahf
fiaddl
je
es
add
popl
xchg
mov
pop
fcmove
jbe
in
leave
pop
mov
pop
push
sti
cwtl
loope
imul
xchg
outsb
test
outsl
adc
test
inc
scas
xchg
mov
sbb
and
and
or
push
adc
int
xor
jb
and
stos
pusha
and
push
jle
dec
mov
inc
imul
lret
hlt
sahf
pop
mov
mov
jg
dec
or
sub
mul
adc
outsb
loop
repz
xchg
leave
pop
mull
sbb
rol
xor
mov
scas
into
cld
out
jmp
xor
sti
loop
cmpsl
sar
es
in
sbb
mov
into
xchg
dec
push
hlt
out
mov
fidivs
xor
in
call
adc
lcall
loopne
mov
js
jle
push
imul
test
repz
and
inc
out
cmp
pop
lds
dec
or
mov
sbb
jmp
inc
imulb
and
jo
decl
cld
inc
test
flds
insl
in
jecxz
lret
repnz
call
test
cmp
adc
dec
push
aam
xor
pop
mov
mov
enter
xorl
cmp
lret
loopne
adc
sbb
div
mov
cmp
fmull
loop
sub
mov
sub
cld
testb
mov
je
lock
sub
mov
je
mov
ret
ret
and
es
aaa
ljmp
add
inc
popa
cwtl
mov
inc
adc
mov
movsl
hlt
mov
popa
test
mov
ljmp
sub
outsl
push
mov
and
cmpsb
fucomp
or
in
xchg
rcll
ljmp
test
adc
fnstcw
loopne
xchg
jge
pmaxub
xor
stos
insl
cmpsb
cltd
jae
data16
inc
xchg
mov
adc
dec
xchg
push
pop
test
fcomps
xchg
mov
sti
shrl
loopne
fwait
into
in
push
sub
add
push
inc
call
outsl
xor
and
in
jge
xchg
shrb
cmp
jno
adc
xor
dec
pop
incl
adc
decl
outsb
xchg
test
test
sarl
hlt
adc
jns
cltd
mov
and
xor
pop
js
sub
and
and
xlat
outsl
aam
pushf
popf
imul
jnp
pushfw
jle
ljmp
cltd
das
cmp
shll
addr16
and
mov
adc
inc
outsl
inc
push
scas
xor
mov
xchg
push
inc
dec
clc
stos
add
bound
dec
jo
sbb
and
imul
scas
rclb
lea
insl
outsb
out
iret
aad
push
push
aas
js
and
hlt
idivb
arpl
pop
push
inc
je
mov
push
imul
xchg
pop
in
int3
adc
ret
mov
cmp
sub
cmc
rclb
fstpl
adc
es
movsb
and
in
xchg
flds
sbb
ljmp
sbb
cmpl
dec
mov
pop
repnz
xor
push
repz
and
xchg
rclb
popa
push
test
or
stos
cmpsb
pop
push
cmp
and
enter
daa
inc
mov
sbb
lret
cmp
flds
mov
movsl
in
or
pusha
out
push
lahf
stc
movsb
mov
cmp
xchg
jg
sub
push
popf
icebp
jle
nop
pop
add
xor
repz
push
in
loope
in
adc
stc
test
sub
rep
or
adcb
mov
jmp
sbb
bound
test
add
int
repz
in
inc
test
sub
lcall
fs
jo
sbb
fstps
sub
add
mov
int
mov
and
clc
cmc
xchg
ss
mov
jp
dec
repnz
mul
outsb
push
rcrl
mov
rorl
push
into
fistps
sbb
addr16
scas
xor
dec
lock
inc
add
stc
fnsave
add
fists
popfw
jg
lods
cli
cmc
sti
mov
out
out
insb
cli
lock
jbe
or
in
push
dec
sbb
adc
mov
xchg
gs
push
sub
data16
adc
pushf
imul
outsl
xchg
out
fwait
sbb
into
movsl
ret
xlat
loop
xchg
sub
cmp
cmp
jmp
push
pop
test
nop
fcmovbe
cmovg
sti
mov
je
and
aas
cmc
push
imul
sub
pop
aas
mov
dec
or
fistl
sub
pushf
in
outsl
add
inc
bound
aas
lods
das
sbb
push
test
adc
and
lds
test
and
cwtl
popf
jae
mov
call
mov
loop
mov
lret
xchg
jp
mov
les
lock
or
das
fnstenv
push
mov
lea
ret
mov
cmc
es
in
insl
adc
out
dec
jecxz
sub
pop
inc
sub
sbb
cmp
mov
push
and
shlb
cs
test
push
mov
cmpsb
imul
cmp
xchg
adc
hlt
ljmp
xlat
pop
iret
fwait
fs
insb
cmp
mov
push
jno
enter
sbb
mov
in
mov
mov
push
out
aas
dec
stc
leave
stc
test
sbb
xchg
pusha
sbb
roll
fbstp
fwait
std
test
jg
icebp
sti
xchg
add
cmpsl
pushl
xor
testb
rcrl
xchg
pop
push
aad
shlb
pop
sub
std
ja
mov
push
test
sbb
mov
cs
push
lods
jne
aaa
add
mov
adc
jns
jns
xchg
pusha
inc
pop
xorl
out
jecxz
sub
ret
addr16
jp
pop
stos
mov
mov
xchg
jnp
and
jle
cmpsl
das
in
jns
pusha
xor
pop
fcomip
enter
mov
mov
mov
daa
movsl
jae
adc
mov
popf
jmp
add
stos
ja
xchg
and
lcall
nop
loopne
xor
call
mov
ret
ret
pop
pop
mov
cmp
jne
inc
ja
inc
or
test
pusha
ficompl
or
int3
mov
pop
jmp
clc
cld
lds
fcmove
mov
cmp
mov
movsb
mov
out
adc
int
icebp
out
lret
sbb
sbb
xchg
lds
rclb
or
scas
push
xchg
jl
adc
dec
adc
push
ljmp
jo
movsl
lods
scas
enter
mov
sarb
xchg
test
inc
inc
jp
int3
cmpsb
fistps
jo
loopne
icebp
daa
inc
xchg
pop
cmp
cmpsb
mov
sub
addr16
xor
movsl
jmp
sti
lcall
pcmpeqw
add
pshufw
inc
ljmp
daa
xor
mov
pop
xor
dec
push
xchg
loope
xchg
jnp
movsb
ret
cmc
sub
outsb
outsb
inc
js
sahf
ss
pop
cmc
dec
insb
in
add
lcall
inc
mov
and
addb
mov
int
cltd
iret
sub
pop
pop
test
inc
lcall
mov
sbb
sbb
jae
das
pushf
jg
xchg
sub
sbb
es
fsts
inc
roll
out
cmp
or
ljmp
enter
stc
jg
mov
hlt
cmc
cs
xchg
bound
enter
mov
adc
fcmovne
add
movsl
daa
lods
loope
xchg
mov
cld
fsub
pop
test
cli
and
pop
xor
jo
in
mov
mov
gs
jno
pop
sbb
adc
xchg
adc
cmp
xchg
push
hlt
sbb
or
dec
xlat
and
or
xor
mov
outsl
or
jmp
mov
aad
mov
in
faddl
fstpt
fnstenv
adc
jecxz
cmpsb
or
clc
pop
lret
mov
push
cmpsl
jbe
pop
repnz
adc
scas
loopne
hlt
jmp
iret
pop
out
inc
inc
imulb
dec
xchg
xlat
jb
cmp
dec
fyl2xp1
arpl
dec
push
sarl
adc
sahf
mov
iret
mov
jecxz
mov
lahf
cmpl
xchg
adc
add
pop
fisubrl
mov
int
mov
pop
xor
ret
inc
cmp
mov
and
dec
fidivs
cmpsl
aas
adc
mov
hlt
sub
mov
ret
test
and
dec
pop
sub
sub
cmp
test
inc
btr
xchg
push
mov
dec
jb
testl
mov
pop
jp
aas
stos
pop
mov
out
lahf
shl
inc
cmpsb
sbb
daa
das
setl
add
xchg
imul
xor
pop
inc
xchg
push
dec
pusha
popa
test
movsl
out
mov
sbb
add
or
loopne
fwait
sub
sbb
jo
test
fs
pop
call
inc
mov
or
and
pop
xchg
outsb
inc
add
push
les
dec
inc
imul
not
sub
xor
mov
ljmp
xchg
jecxz
sbb
vmwrite
adcl
ret
subl
bound
xchg
in
cmp
leave
mov
jnp
cmpsb
jle,pn
pop
lret
in
dec
cli
pusha
iret
adc
sub
inc
jmp
xor
xchg
push
xor
icebp
popf
and
fs
push
shll
ljmp
sbb
ret
aaa
notb
push
jae
repnz
and
ret
lds
fcmovb
hlt
mov
es
jp
mov
and
popa
inc
insl
dec
fimull
or
int3
jmp
push
fidivrs
push
pop
rorb
loop
popl
movsb
cmp
pcmpeqd
imul
push
sbb
push
stos
or
iret
add
mov
loop
in
mov
sub
xor
push
insb
lods
scas
cmpsl
dec
jecxz
pop
aam
cmp
leave
jmp
inc
or
cwtl
cmpsb
bound
in
out
push
das
enter
daa
aas
repnz
sub
jno
or
sub
and
es
ds
pop
jo
repnz
adc
loop
cmp
or
adc
xchg
dec
leave
xor
es
add
pop
pop
dec
stos
mov
pop
jno
ss
pop
jnp
lahf
pop
and
dec
mov
sub
push
outsb
sarl
sbb
cmp
lret
xchg
add
jge
mov
and
faddl
sbb
int
and
sub
icebp
push
pop
daa
sbb
mov
mov
inc
test
inc
inc
sub
inc
dec
sub
cmp
xor
fwait
jg
mov
lret
sub
fs
sub
movsl
popa
arpl
lcall
mull
or
push
sbb
mov
pushf
cmp
arpl
stc
test
into
movsl
dec
movsl
cmc
cmc
sub
mov
push
movsb
loop
mov
stc
dec
mov
and
mov
fldl
mov
scas
pushf
out
out
cli
push
xlat
mov
mov
scas
in
sub
sub
jno
pop
std
dec
pop
gs
mov
pop
lahf
rcrl
or
test
inc
push
repz
sbb
sbb
inc
cwtl
rcl
pusha
sti
adc
mov
sbb
inc
cs
add
int
nop
fwait
sbb
loope
inc
mov
xor
je
xchg
xchg
faddp
sti
das
add
loope
jmp
es
pop
pop
movsl
cmp
adc
aam
fbstp
in
fldt
jnp
inc
jge
mov
aas
jmp
mov
mov
xchg
and
sub
rorl
jg
notb
cmp
inc
fidivl
mov
cli
mov
add
ja
xchg
lret
je
xchg
mov
inc
xchg
lock
pop
das
xchg
ror
mov
cltd
popf
test
and
ret
rclb
lret
aas
sub
dec
fidivrl
lret
outsb
subl
in
ds
jecxz
mov
rorb
fisubrl
xchg
test
sub
mov
jae
push
xor
bound
clc
xor
xchg
nop
sarl
popa
stos
mov
pop
and
jmp
out
add
pop
xchg
mov
xchg
push
daa
lcall
jecxz
sahf
cltd
sbb
cmc
mov
sbb
xchg
fcompl
xchg
das
sbb
mov
or
sahf
mov
push
adc
add
adc
mov
xor
sbb
in
cltd
xchg
mov
fisubrl
pop
mov
inc
jb
aaa
scas
xor
insl
idivb
cmpsb
xchg
aad
jne
add
mov
jge
out
outsb
sub
lods
out
and
daa
sti
xchg
imulb
inc
adcl
sub
mov
xchg
jo
jo
xor
fistps
jnp
jmp
jle
sbb
pop
jg
pusha
push
ljmp
mov
push
inc
cmp
lock
popf
dec
bound
mov
add
and
shlb
and
push
mov
sbb
iret
bnd
ret
scas
pop
mov
hlt
xlat
and
push
push
aad
jge
mov
push
out
xor
pop
dec
xchg
and
int3
aam
lea
push
xor
fcmovne
or
rorb
shlb
add
loop
dec
leave
mov
pop
push
mov
jbe,pt
rol
jge
mov
aaa
push
adc
add
adcl
dec
cmpsl
dec
sub
into
push
mov
and
popa
inc
adc
and
sbb
push
or
lods
inc
cwtl
aas
add
aad
pushf
enter
daa
rcrl
jno
pop
push
sub
scas
mov
aad
sbb
js
and
xor
xchg
lahf
push
sbb
push
mov
aas
test
mov
push
lcall
adc
js
pop
inc
pop
mov
movsl
push
loope
loope
dec
jb
cli
je
sub
xor
and
adc
adc
push
sub
mov
mov
hlt
mov
shll
push
xchg
push
int
push
sub
sub
cmpsb
push
cmp
mov
fists
mov
mov
lock
in
cmpsb
test
in
or
jbe
add
shll
cmc
push
fs
jno
adc
and
ss
sub
negl
mov
lret
imul
mov
or
mov
cmc
mov
mov
outsl
fidivs
adc
adc
sbb
add
xor
lods
scas
cmpsl
mov
out
test
cli
mov
fucomip
xchg
pop
ret
sti
and
loop
and
sbb
in
pop
mov
pusha
pop
imul
push
rcll
loopne
sub
jg
sti
xlat
lahf
lea
sbb
xchg
pushf
lds
movsb
jmp
ficomps
lods
imul
adc
nop
imul
inc
shll
pop
fabs
arpl
jge
movsl
jecxz
xchg
cmpsb
dec
inc
hlt
cmpsb
add
pop
mov
movsl
xchg
push
pop
pop
mov
inc
dec
lret
fcmovnu
sbb
inc
add
fiaddl
pop
mov
mov
jb
scas
xchg
dec
mov
pop
rcrl
pop
negb
imulb
das
gs
mov
or
mov
sbb
mov
mov
sbb
jbe
push
mov
out
lcall
cmpsl
sub
insl
leave
lds
dec
aam
cmpsl
cmp
shr
mov
and
mov
or
and
jle
xchg
pop
adc
test
test
rolb
sub
sar
insl
in
push
xchg
iret
push
jmp
push
dec
mov
pop
shlb
adc
gs
adc
push
add
test
pop
mov
popf
cltd
dec
mov
mov
lea
pop
jge
dec
cs
test
push
dec
xchg
pop
into
sbb
xlat
roll
xor
push
mov
add
xchg
jge
push
popf
pop
xor
jnp
or
mov
in
lahf
notl
mov
ds
pop
mov
jg
mov
cmpsl
and
jae
mov
lahf
mov
mov
jnp
mov
addr16
bound
sub
repz
andl
jl
fidivs
and
or
sbb
jp
fs
mov
test
dec
lret
and
cmc
sti
jle
xchg
dec
in
sbb
add
add
xor
fwait
pop
clc
inc
dec
pop
xchg
jae
dec
sbb
mov
hlt
je
pushf
adc
push
aas
mov
stos
rolb
sbb
mov
imul
int3
push
add
test
fldenv
dec
ret
mov
std
cmp
hlt
and
xor
pop
icebp
inc
andb
test
adc
aad
inc
adc
fidivl
pop
test
mov
adc
fidivrs
mov
rol
dec
mov
xor
scas
movsb
push
testb
outsl
dec
jbe
mov
jge
sbb
sbb
xchg
aaa
addps
inc
jns
add
in
cmp
push
dec
fwait
push
cld
push
xchg
xor
xchg
jo
xor
scas
gs
and
sti
cmp
xor
cmpsb
push
fsubl
enter
daa
cmp
xor
mov
xchg
sub
cmovae
test
ds
adc
add
data16
jne
sub
adc
test
stos
lds
xchg
shlb
mov
pop
popf
pop
lret
and
pop
out
rorl
int
loope
movsl
or
outsb
xchg
addb
imul
lcall
incl
or
jmp
mov
and
lods
push
and
int
loope
sub
in
addl
ds
xchg
push
xor
cld
sbb
jg
test
outsl
andb
fdivrl
adc
rorl
push
and
ss
push
cmp
cmp
neg
in
mov
mov
and
cmp
mov
or
scas
data16
imul
sbbl
xor
mov
loop
imul
daa
cmp
imul
lods
xchg
push
das
mov
into
ss
out
je
mov
mov
pushl
and
inc
jg
gs
fneni(8087
sarb
sti
pop
fstpl
scas
imul
scas
xchg
fwait
cli
stc
sbb
mov
mov
lret
mov
jo
jb
mov
xchg
and
jecxz
inc
mov
dec
add
inc
in
pop
fstps
aaa
js
enter
movsb
outsb
push
movb
mov
call
and
pusha
pop
or
stos
dec
mov
jne
or
sub
mov
sbb
xchg
aas
sub
ja
pop
xor
push
and
jecxz
shll
adc
std
xchg
div
cwtl
mov
mov
jmp
mov
jecxz
ds
mov
lret
push
test
mov
imul
push
add
mov
pop
mov
aam
dec
sbb
out
pushf
jmp
sub
mov
cmpsl
cmp
jb
sub
icebp
jns
pop
lods
mov
or
push
and
sbb
pop
test
cmpsb
shl
mov
sub
adc
push
ss
in
pop
inc
fnsave
cld
fists
pop
mov
pop
jnp
jecxz
sub
pop
xchg
push
push
outsb
push
fnstsw
and
cltd
xchg
and
sbb
xchg
jg
test
call
jl
sbb
rcrl
or
xchg
nop
fwait
mov
in
add
mov
dec
push
dec
imul
cmp
add
sbb
inc
xchg
pop
mov
jnp
pop
jmp
pop
sbb
ja
adc
inc
add
sbb
xchg
lahf
dec
jmp
addr16
lods
mov
fs
out
sub
xchg
xchg
xor
fcom
out
sbb
sub
scas
xchg
adc
and
jp
and
mov
sbb
jnp
ret
xor
and
in
adc
jno
insb
ja
xchg
xchg
bnd
push
inc
dec
jae
lock
push
jge
ret
popf
lcall
push
jle
scas
stos
inc
xchg
and
addr16
scas
shrl
adc
lods
ret
clc
pop
xor
std
hlt
insl
xor
arpl
push
subl
or
xchg
dec
jmp
in
dec
fisubl
xchg
rclb
cmp
lcall
into
mov
fdivrs
mov
sti
leave
jns
inc
movsb
fsubl
and
jge
lea
aaa
into
and
or
xchg
push
add
inc
aam
arpl
fwait
dec
or
fnstenv
pop
aaa
in
inc
pavgb
fmuls
cmp
or
xor
cmpsb
jmp
jne
mov
ljmp
ret
pop
cld
jno
jae
sub
inc
jnp
xor
ds
mov
adc
xchg
jl
push
pop
pop
test
mov
sub
popa
jae
dec
jmp
pop
les
inc
pop
cs
fsubrl
or
loope
xchg
fstp
push
jbe
sub
mov
outsb
cli
shl
adc
lret
adcb
icebp
sbb
add
and
jge
push
call
sti
int
push
subl
movsb
jge
lcall
mov
lcall
rol
jb
inc
mov
jg
dec
push
mov
sub
mov
jno
fbld
xor
adcl
cmp
cmc
imul
lret
push
rorl
cmp
xchg
jle
inc
imul
dec
inc
test
dec
das
fnstenv
into
stos
ret
out
loop
xchg
scas
stc
jo
and
repnz
xchg
add
in
jecxz
sub
mov
mov
cmp
out
mov
lea
cmp
je
push
mov
jle
pop
data16
sub
jns
cld
xchg
jbe
jo
sub
roll
repz
mov
xor
cs
fistpll
cmc
pop
add
sbb
stos
insb
mov
sbb
adc
jae
in
imul
nop
and
decl
mov
mull
addr16
stos
jg
mov
aad
add
xchg
ret
call
mov
mov
jle
outsb
dec
mov
daa
rcrb
lock
adc
jmp
dec
inc
jb
lock
dec
mov
clc
and
mov
inc
negb
test
std
cmp
negl
lods
neg
mov
add
adc
shlb
shll
mov
xchg
sub
les
das
xor
jnp
mov
je
aam
push
cltd
ret
jge
icebp
lods
pop
jmp
dec
lret
cmpsl
cmp
mov
push
lods
and
outsb
lret
mov
mov
outsl
mov
movsb
ja
rol
adc
sub
test
faddl
mov
es
push
scas
lcall
jecxz
pop
xchg
dec
stc
xchg
cmp
mov
pop
es
stos
pop
cs
out
sub
pop
xchg
pop
cmpsl
mov
mov
sbb
add
mov
xor
decl
xchg
cmpsb
imul
lret
mov
bound
iret
insl
fwait
call
addr16
add
push
sub
popl
or
test
xchg
stos
popf
clc
mov
int3
mov
shll
orb
adc
ljmp
jge
stos
dec
shlb
mov
jne
out
or
pop
bound
jns
jns
xchg
push
add
inc
rcrb
leave
xchg
sub
test
scas
test
xchg
out
cmpsb
rcrb
insb
and
call
jle
movsl
pop
in
jbe
pusha
cmp
lret
in
das
xchg
pop
aam
jmp
nop
