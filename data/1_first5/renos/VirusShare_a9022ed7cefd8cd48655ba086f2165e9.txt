jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
lea
cmp
ja
mov
mov
lea
lea
dec
cmp
jb
lea
lea
xchg
lea
lea
mov
mov
xchg
mov
inc
dec
xchg
xchg
lea
dec
mov
mov
mov
mov
lea
mov
cmp
je
jmp
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
xor
divl
test
jne
cmp
jns
xchg
inc
lea
dec
cmp
jg
xchg
mov
xchg
lea
xchg
inc
mov
xchg
lea
lea
inc
dec
inc
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jae
mov
lea
lea
inc
inc
dec
inc
cmp
jb
xchg
dec
inc
dec
mov
inc
dec
inc
lea
cmp
jb
lea
mov
xchg
lea
lea
mov
lea
inc
lea
lea
dec
dec
inc
xchg
xchg
inc
dec
inc
mov
cmp
je
jmp
cmp
jo
mov
lea
inc
dec
cmp
jno
inc
inc
cmp
jnp
mov
lea
mov
mov
lea
inc
dec
dec
mov
lea
lea
lea
lea
lea
dec
lea
lea
lea
lea
mov
xchg
mov
lea
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jle
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jne
mov
mov
mov
lea
mov
mov
xchg
mov
mov
mov
lea
dec
mov
cmp
je
jmp
cmp
jo
mov
lea
inc
dec
cmp
jno
inc
inc
cmp
jnp
mov
lea
mov
mov
lea
inc
dec
dec
mov
lea
lea
lea
lea
lea
dec
lea
lea
lea
lea
mov
xchg
mov
lea
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
mov
sub
mov
cmp
jne
mov
mov
mov
dec
xchg
mov
lea
dec
cmp
jge
lea
mov
lea
lea
mov
lea
lea
inc
inc
dec
mov
mov
mov
xchg
lea
mov
lea
mov
push
mov
mov
xor
call
mov
cmp
jns
xchg
inc
lea
dec
cmp
jg
xchg
mov
xchg
lea
xchg
inc
mov
xchg
lea
lea
inc
dec
inc
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
mov
dec
mov
mov
mov
call
lea
cmp
jae
mov
lea
lea
inc
inc
dec
inc
cmp
jb
xchg
dec
inc
dec
mov
inc
dec
inc
lea
cmp
jb
lea
mov
xchg
lea
lea
mov
lea
inc
lea
lea
dec
dec
inc
xchg
xchg
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
lea
cmp
ja
mov
mov
lea
lea
dec
cmp
jb
lea
lea
xchg
lea
lea
mov
mov
xchg
mov
inc
dec
xchg
xchg
lea
dec
mov
mov
mov
mov
lea
lea
mov
push
jmp
cmp
jne
mov
mov
mov
dec
xchg
mov
lea
dec
cmp
jge
lea
mov
lea
lea
mov
lea
lea
inc
inc
dec
mov
mov
mov
xchg
lea
mov
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
mov
lea
inc
dec
cmp
jno
inc
inc
cmp
jnp
mov
lea
mov
mov
lea
inc
dec
dec
mov
lea
lea
lea
lea
lea
dec
lea
lea
lea
lea
mov
xchg
mov
lea
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jle
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jne
mov
mov
mov
lea
mov
mov
xchg
mov
mov
mov
lea
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
push
mov
add
cmp
jo
mov
lea
inc
dec
cmp
jno
inc
inc
cmp
jnp
mov
lea
mov
mov
lea
inc
dec
dec
mov
lea
lea
lea
lea
lea
dec
lea
lea
lea
lea
mov
xchg
mov
lea
inc
inc
movl
mov
mov
mov
push
mov
push
call
lea
cmp
ja
mov
mov
lea
lea
dec
cmp
jb
lea
lea
xchg
lea
lea
mov
mov
xchg
mov
inc
dec
xchg
xchg
lea
dec
mov
mov
mov
mov
lea
movl
mov
push
call
lea
cmp
jae
mov
lea
lea
inc
inc
dec
inc
cmp
jb
xchg
dec
inc
dec
mov
inc
dec
inc
lea
cmp
jb
lea
mov
xchg
lea
lea
mov
lea
inc
lea
lea
dec
dec
inc
xchg
xchg
inc
dec
inc
movl
mov
push
call
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
movl
mov
push
call
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movl
mov
push
call
cmp
jns
xchg
inc
lea
dec
cmp
jg
xchg
mov
xchg
lea
xchg
inc
mov
xchg
lea
lea
inc
dec
inc
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
mov
dec
mov
pop
ret
xor
cmp
xor
cmp
xor
add
xor
cmp
xor
xor
xor
add
push
mov
add
mov
mov
lea
cmp
jae
mov
lea
lea
inc
inc
dec
inc
cmp
jb
xchg
dec
inc
dec
mov
inc
dec
inc
lea
cmp
jb
lea
mov
xchg
lea
lea
mov
lea
inc
lea
lea
dec
dec
inc
xchg
xchg
inc
dec
inc
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jns
xchg
inc
lea
dec
cmp
jg
xchg
mov
xchg
lea
xchg
inc
mov
xchg
lea
lea
inc
dec
inc
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
mov
mov
dec
xchg
mov
lea
dec
cmp
jge
lea
mov
lea
lea
mov
lea
lea
inc
inc
dec
mov
mov
mov
xchg
lea
mov
lea
mov
mov
mov
movl
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
xlat
mov
lcall
hlt
fcomp
mov
mov
int3
fdivl
rcr
hlt
cmpsb
fdivl
push
mov
mov
test
hlt
jge
or
mov
mov
hlt
jge
or
push
mov
hlt
jge
or
loope
nop
gs
jge
or
rcll
gs
jge
or
in
push
js
mov
jge
or
call
gs
jge
or
stc
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
push
mov
hlt
ss
std
push
mov
hlt
ss
jp
or
or
push
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
push
mov
repz
pmuludq
hlt
jl
or
xor
mov
push
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
push
mov
mov
pmuludq
hlt
push
cld
push
mov
ret
xor
std
push
mov
ret
and
cld
push
mov
incl
add
repz
pmuludq
hlt
push
std
push
mov
ret
xor
cld
push
mov
jp
add
jl
adc
xor
std
push
mov
jp
add
ret
and
cld
push
mov
jl
add
ret
xor
std
push
mov
jp
adc
push
mov
ret
xor
cld
push
mov
incl
add
ret
and
std
push
mov
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
push
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jle
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jne
mov
mov
mov
lea
mov
mov
xchg
mov
mov
mov
lea
dec
movl
cmp
jne
mov
mov
mov
dec
xchg
mov
lea
dec
cmp
jge
lea
mov
lea
lea
mov
lea
lea
inc
inc
dec
mov
mov
mov
xchg
lea
mov
lea
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
mov
mov
call
mov
cmpl
je
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
mov
cmp
je
mov
subb
mov
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
xorb
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
incl
mov
cmp
jne
cmp
jo
mov
lea
inc
dec
cmp
jno
inc
inc
cmp
jnp
mov
lea
mov
mov
lea
inc
dec
dec
mov
lea
lea
lea
lea
lea
dec
lea
lea
lea
lea
mov
xchg
mov
lea
inc
inc
mov
call
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
lea
cmp
ja
mov
mov
lea
lea
dec
cmp
jb
lea
lea
xchg
lea
lea
mov
mov
xchg
mov
inc
dec
xchg
xchg
lea
dec
mov
mov
mov
mov
lea
push
mov
push
call
mov
pop
ret
nop
push
mov
add
lea
cmp
ja
mov
mov
lea
lea
dec
cmp
jb
lea
lea
xchg
lea
lea
mov
mov
xchg
mov
inc
dec
xchg
xchg
lea
dec
mov
mov
mov
mov
lea
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jns
xchg
inc
lea
dec
cmp
jg
xchg
mov
xchg
lea
xchg
inc
mov
xchg
lea
lea
inc
dec
inc
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
mov
dec
movb
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
dec
inc
inc
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
mov
pop
ret
lea
push
mov
add
call
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
call
call
call
test
jne
mov
jmp
movw
lea
cmp
jae
mov
lea
lea
inc
inc
dec
inc
cmp
jb
xchg
dec
inc
dec
mov
inc
dec
inc
lea
cmp
jb
lea
mov
xchg
lea
lea
mov
lea
inc
lea
lea
dec
dec
inc
xchg
xchg
inc
dec
inc
call
lea
mov
pop
ret
mov
push
mov
add
mov
cmp
jl
cmp
jge
mov
lea
mov
mov
lea
mov
lea
cmp
jae
mov
jmp
lea
mov
lea
mov
mov
mov
dec
inc
lea
xchg
lea
mov
lea
inc
dec
push
call
test
jne
cmp
jns
xchg
inc
lea
dec
cmp
jg
xchg
mov
xchg
lea
xchg
inc
mov
xchg
lea
lea
inc
dec
inc
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
mov
dec
push
push
push
call
mov
pushl
pushl
call
cmp
jne
mov
mov
mov
dec
xchg
mov
lea
dec
cmp
jge
lea
mov
lea
lea
mov
lea
lea
inc
inc
dec
mov
mov
mov
xchg
lea
mov
lea
mov
mov
pop
ret
ja
add
ja
add
add
data16
add
add
add
add
outsb
add
add
and
add
add
subl
je
mov
cmp
jo
mov
lea
inc
dec
cmp
jno
inc
inc
cmp
jnp
mov
lea
mov
mov
lea
inc
dec
dec
mov
lea
lea
lea
lea
lea
dec
lea
lea
lea
lea
mov
xchg
mov
lea
inc
inc
mov
mov
mov
lea
call
cmp
jbe
lea
lea
mov
mov
mov
jmp
inc
xchg
inc
lea
xchg
mov
mov
cmp
jle
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
mov
lea
xchg
dec
inc
ret
lea
ret
lea
add
add
cld
push
inc
movsl
mull
add
add
add
call
and
xor
dec
cs
bound
add
add
cmp
push
add
mov
or
ficompl
daa
outsl
out
adc
add
pop
jns
jns
fiaddl
outsl
popa
mov
inc
add
xor
mov
and
add
add
jae
add
add
scas
add
cmpxchg
cmc
test
add
add
add
fimull
enter
mov
inc
arpl
inc
sub
sub
and
push
jo
add
add
cwtl
test
add
add
addl
cs
leave
add
mov
pop
jp
add
add
lahf
jo
mov
in
data16
ret
enter
mov
aad
inc
add
rol
xorps
jg
dec
hlt
add
add
sub
add
mov
jge
lods
add
add
hlt
sarl
push
shlb
cmp
add
mov
das
jmp
add
in
mov
fiaddl
ret
mov
sub
stos
mov
jg
in
add
icebp
sti
add
xor
add
pop
add
xor
jae
xchg
inc
add
add
add
add
add
sbb
sub
sub
add
test
add
scas
add
xorb
fisttpl
incb
clc
dec
xchg
rolb
add
pop
add
fisttpll
push
das
add
jo
cmp
push
add
sbb
add
pop
addl
add
mov
add
add
mov
or
or
out
je
adc
xchg
push
sahf
repz
dec
add
xor
ds
in
add
inc
jb
add
push
das
sbb
clc
xchg
int3
insb
jge
add
xor
mov
sub
add
adc
mov
rcl
arpl
xor
add
subl
cmpb
add
mov
jmp
add
or
add
pop
pop
ficomps
dec
adc
aaa
xchg
dec
loop
cmpsb
mov
arpl
test
add
jmp
adc
add
pop
add
roll
add
push
in
or
add
stc
popl
or
add
lds
pop
pushf
mov
testl
mov
out
pop
cmp
lods
arpl
mov
fcmovnb
lock
push
add
mov
xchg
push
pop
pop
push
add
sbb
add
push
add
ficomps
add
adc
dec
lret
and
pusha
add
neg
es
or
stos
mov
sub
mov
add
stos
xor
loopne
sub
cmp
cmpsb
cli
push
inc
cmpsl
mov
push
add
mov
jg
imul
adc
jns
push
fadds
ss
jl
popf
cmc
add
fsubrs
jno
mov
pop
add
aas
dec
add
add
xor
add
push
add
insl
cmc
shr
lods
add
idivb
and
pop
and
add
xchg
add
push
pop
xor
add
xchg
mov
lldt
idivl
movsb
addb
leave
xchg
add
add
dec
push
jbe
mov
add
pushf
adc
add
sahf
ja
adc
add
fistpll
adc
call
mov
lds
lods
cmp
rcrb
fwait
addl
cmp
fstl
cli
xorl
add
or
ds
push
sub
mov
mov
sbb
in
cmc
imul
aam
andl
push
mov
push
jne
loop
push
repnz
hlt
pop
in
arpl
div
or
addr16
aaa
js
jo
pop
aad
add
int3
sbb
je
out
dec
xchg
fisubs
mov
test
add
insl
sub
scas
lea
mov
jno
movsb
push
mov
push
pop
pop
dec
jbe
xchg
cmpsb
jge
sub
aam
data16
fnstcw
gs
mov
xlat
sarb
in
aam
cld
push
cmp
jbe
sub
lahf
jle
mov
test
push
orb
or
cmpsb
insl
test
in
mov
xchg
lahf
pop
fsubrs
pop
loope
in
shrb
xchg
sub
jge
adc
add
shll
mov
push
fs
hlt
movsb
pop
sbb
jge
call
je
dec
push
leave
pop
pop
mov
inc
pop
into
adc
pop
push
inc
rclb
faddl
inc
sub
outsb
inc
outsb
mov
mov
rcr
pop
sbb
js
mov
dec
or
sarb
and
xchg
int
cmpb
pop
testl
and
mov
cmp
inc
insl
sahf
insb
test
test
inc
pop
outsl
push
cmp
loop
mov
pop
adc
aas
ss
lahf
cmp
inc
ss
jg
xor
sbb
adc
or
mov
pmaddwd
int
out
ret
adc
es
imul
jb
add
lods
lods
xchg
cmpsb
jmp
std
push
jnp
ss
mov
fdivr
xchg
sti
enter
test
andl
arpl
jmp
dec
lret
inc
fsincos
je
dec
sahf
icebp
les
rcll
xchg
pusha
inc
rcrb
inc
int
xlat
pop
pusha
xchg
mov
cmp
or
je
cs
sub
xor
add
mov
push
jb
lock
je
jns
jecxz
jecxz
movb
jb
and
and
mov
loopne
cmovp
dec
adc
fildl
push
push
inc
in
into
add
or
sahf
enter
testb
sbb
aas
mov
mulb
stos
cmp
pop
cwtl
xchg
fiadds
mov
or
cld
ljmp
mov
dec
push
mov
inc
lock
sti
mov
shlb
inc
add
out
push
ret
pop
mov
es
cmp
insl
mov
sbb
pushf
int3
push
xchg
testl
shrl
dec
mov
gs
mov
subb
incb
cltd
mov
inc
test
inc
mov
xchg
cmp
jnp
fnsave
cmp
xor
adc
sbb
xchg
shrl
jno
sbb
imul
mov
sub
mov
xor
mov
or
pop
cli
mov
cmpsl
lret
push
test
mov
dec
xor
inc
aad
daa
or
loop
fwait
xor
scas
add
bound
out
jne
cwtl
bound
ss
adc
xchg
mov
inc
mov
iret
or
and
mov
jae
pusha
push
mov
inc
push
cmp
and
mov
ret
and
jne
cmp
add
xchg
or
test
out
push
jnp
jnp
mov
stos
fsubrs
lock
sub
jnp
movsl
sbb
andb
pop
mov
int
pop
iret
jns
lahf
ret
mov
inc
nop
ror
jae
jns
push
inc
mov
je
fs
inc
lea
and
arpl
shrb
jns
adc
pop
div
cmp
jmp
push
xchg
arpl
pop
dec
inc
or
or
loop
xchg
aaa
aaa
popf
cltd
or
fadds
fildl
in
pop
push
jo
fiadds
leave
pop
lds
lods
rorb
pop
and
mov
adc
push
movsb
cltd
inc
jno
test
and
pop
inc
jge
sbb
sbb
dec
mov
gs
cmp
scas
lods
jl
andl
sbb
inc
xor
test
aad
nop
ret
popa
roll
inc
iret
cs
cmpsb
lock
in
movsb
and
enter
pop
pop
add
xchg
mov
inc
sub
aad
cmp
sarl
jne
movsl
call
push
daa
mov
sub
push
xor
push
xor
inc
aas
adc
negl
imul
dec
jmp
lcall
inc
fsubr
mov
pop
outsb
pop
add
adc
mov
sahf
jg
pop
out
mov
and
mov
adc
and
icebp
xor
int
xor
sub
or
lret
sub
and
hlt
mov
mov
sbb
ljmp
xor
outsl
in
dec
loop
xchg
sbb
and
sub
fsubrl
ss
bound
add
scas
cli
les
xor
sti
pop
cmp
sar
jg
int3
into
repz
imul
xor
int3
imul
cmp
movsl
cmpsl
push
adc
jo
add
sbb
lods
jle
cmpsl
mov
or
add
xchg
fs
fwait
push
in
inc
das
push
sti
ja
mov
or
lcall
inc
in
push
ja
adc
les
mov
xchg
and
sbb
subb
pop
adc
pushf
mov
movsb
cs
mov
jle
push
clc
push
aas
push
movsb
repz
push
imul
bound
jecxz
pop
mov
mov
push
call
push
loope
mov
mov
std
sbb
shl
jae
mov
sbb
das
jge
or
outsl
outsl
sbb
movsb
lret
xchg
fdiv
arpl
cmpsb
cwtl
push
fcoml
fs
push
mov
loope
xor
lret
cli
and
mov
lock
pop
pop
lods
clc
es
dec
sbb
cmpsl
aam
cmp
xor
mov
cmp
jecxz
dec
xchg
jmp
xchg
ss
xchg
ljmp
shrd
xor
mov
cmp
loope
psraw
dec
cltd
out
aaa
test
xchg
mov
test
push
je
add
cwtl
adc
clc
jo
jns
mov
fwait
rol
cltd
mov
stos
shl
in
push
pop
stos
xchg
loopne
push
movsl
cmp
lcall
icebp
divl
pop
sub
xor
pop
iret
mov
stos
sbb
jge
pop
test
sti
aas
ja
fildll
dec
and
cwtl
push
or
sub
fwait
popa
lret
loope
cmpsl
add
jge
lock
push
lock
fcomi
nop
jns
loop
in
jae
xchg
add
cld
mov
jmp
mov
loopne
push
les
xchg
ljmp
rorb
mov
mov
gs
gs
jbe
mov
std
sbb
test
jmp
aam
outsb
sbbl
out
test
sub
jbe
adcb
cwtl
stos
dec
or
and
idiv
insb
std
stc
mov
shlb
in
mov
pusha
push
out
aam
jne
dec
pop
pushf
sub
inc
fwait
xchg
in
cmc
jp
push
add
mov
daa
inc
or
fisubrl
xchg
cmp
inc
imul
push
xor
adc
mov
nop
leave
loope
hlt
mov
adc
ss
or
pop
xchg
inc
aaa
test
or
pop
add
ror
bnd
pop
dec
push
fisubrs
out
shlb
into
and
pop
fdivrl
lret
rorb
and
pop
push
imull
jbe
xchg
mov
out
fstps
scas
xchg
fs
fs
out
cmp
fdivrp
jno
lods
pusha
jl
adc
dec
mov
lods
push
decb
xor
filds
mov
push
arpl
shrb
out
les
xchg
out
cmpsb
jae
ret
sbb
enter
pop
push
pop
leave
push
mov
loope
test
cmp
int3
fdivrl
inc
pop
ljmp
xor
adc
out
mov
add
or
xor
push
fcmovbe
aad
pop
pop
lods
clc
idivb
repnz
pop
int3
inc
mov
stc
and
push
lock
sti
fcompl
mov
outsb
xorb
adc
xchg
std
and
fwait
xorl
mov
in
clc
mov
mov
mov
sbb
test
add
jmp
int
lea
jns
das
sahf
mov
lock
jmp
outsl
les
data16
popf
cmp
fmul
ss
adc
mulb
cltd
push
sbb
mov
imul
mov
cli
cmp
xchg
or
adc
into
pop
movsl
cmc
xor
xor
push
jecxz
js
pop
imul
ret
mov
sbb
or
xlat
inc
cmpsl
daa
sub
lret
mov
push
sti
es
out
aas
hlt
adc
loopne
push
out
mov
out
inc
jmp
fcomp
mov
test
mov
aad
xchg
out
push
sbb
mov
addr16
pop
movb
out
loope
arpl
or
and
not
push
add
nop
jmp
js
jb
bnd
sbb
sahf
mov
pop
lahf
adc
mov
adc
sbb
mov
dec
cmp
cmp
mov
push
inc
cli
mov
ret
mov
std
mov
push
mov
mulb
insl
sub
arpl
gs
mov
imul
out
lock
imul
lock
and
int3
or
sub
aam
enter
je
and
sub
cmp
sahf
push
xchg
jne
repz
and
test
and
jl
pushf
cmovo
adc
sbbl
lock
push
fnstsw
xchg
or
fstps
shrl
rcrl
dec
cmp
outsb
jg
stos
mov
test
xchg
inc
xchg
sub
pushl
shll
or
push
shlb
mov
lods
fldcw
in
repnz
add
and
sbb
inc
add
or
inc
daa
fwait
nop
ret
enter
push
add
cwtl
add
bound
mov
in
add
push
pop
mov
xchg
jnp
mov
fwait
sub
addr16
adc
jp
mov
jmp
ret
mov
ret
push
sbb
ret
out
push
fbstp
dec
lcall
mov
sub
inc
out
adc
fsts
jno
jecxz
in
stos
stos
mov
call
mov
jle
dec
or
adc
push
pusha
add
scas
ret
int3
pop
rcll
inc
cmpsb
scas
and
rcrb
test
cs
inc
mov
or
pop
pop
cmp
xchg
mov
ret
cmp
scas
lods
mov
xchg
adc
cld
mov
jecxz
or
add
arpl
pop
push
inc
push
hlt
ret
addr16
fadds
sbb
xor
iret
int3
fldl
jg
jl
dec
fimuls
lds
div
scas
dec
jle
and
dec
cmp
mov
sahf
jbe
inc
mov
sbb
adc
arpl
aaa
cmp
pop
jge
movsb
int
jl
jne
dec
and
push
loope
in
xor
cmp
sbb
ss
push
test
mov
mov
cmpsb
notb
xor
dec
inc
pop
xchg
cmp
push
or
loope
mov
sub
aam
cmp
mov
and
pop
add
sub
xor
rdpmc
fsubrs
pop
shrl
js
shrb
and
push
inc
mov
faddl
inc
sub
push
mov
jmp
xchg
pop
jg
xor
mov
stc
pushf
mov
into
xchg
mov
mov
and
xchg
outsb
push
scas
add
sub
xchg
fwait
testl
mov
or
sahf
push
testl
mov
fidivrl
fs
cmpsl
adc
jnp
cmp
push
cmp
js
push
out
sbb
cli
sub
xor
jle
add
iret
or
sbb
mov
dec
cmpsb
xor
scas
jns
inc
test
adc
xor
dec
daa
adc
push
popf
data16
addr16
dec
jl
mov
cmp
and
js
add
sbb
into
adc
frstor
fisubrs
dec
out
push
inc
adc
les
cmp
mov
cmp
cli
out
dec
cmpsb
stos
pop
jns
push
adc
mov
jmp
push
lcall
orl
jb
ret
xchg
gs
cs
into
orb
push
scas
mov
cmp
mov
cli
cltd
adc
cmp
fistl
lahf
ljmp
mov
push
das
cmp
insl
mov
cmc
imul
outsb
into
imul
add
leave
xchg
pop
cwtl
xchg
mov
mov
stos
cmp
aaa
mov
mov
xor
lret
in
lock
mov
rcrb
lret
xchg
pop
imul
mov
popf
mov
xchg
mov
and
mov
dec
popa
outsl
jge
lods
fdivrs
mov
cli
daa
andl
jmp
setg
ja
aaa
fnsave
test
xor
push
cli
loopne
fucom
cli
insl
clc
out
dec
xchg
jp
shll
insb
pop
sbb
sbb
scas
test
xchg
mov
mov
xor
scas
fwait
or
dec
fsubl
mov
xchg
cmc
or
aam
jp
dec
or
mov
or
xor
mov
lods
inc
add
mov
xchg
adc
out
add
jns
jo
in
in
xchg
mov
jg
mov
push
hlt
test
jp
inc
js
in
push
mov
xchg
dec
push
dec
sub
push
mov
hlt
arpl
shlb
dec
jmp
push
arpl
js
pop
sub
insb
push
jp
and
mov
push
incb
shll
mov
and
pusha
sahf
enter
xor
fwait
shll
pop
stos
inc
mov
cmp
xchg
dec
dec
push
mov
push
rclb
push
mov
or
cmpsl
fcmovbe
sbb
call
jmp
imul
ret
and
xor
sarl
ss
leave
iret
add
dec
hlt
arpl
mov
rorb
push
add
or
and
add
negl
outsb
and
out
daa
aaa
xchg
rcr
xchg
scas
sub
or
cmp
popf
push
xchg
nop
daa
jbe
arpl
jge
aas
ficomps
and
sbb
cmp
xchg
and
adc
jl
scas
inc
dec
nop
xchg
mov
int
xor
xchg
or
cli
xchg
push
push
or
vphaddubw
push
jge
fildl
cs
cmpsb
jns
stos
in
pop
mov
jle
aam
and
inc
jbe
jp
mov
push
xchg
cmpb
adc
mov
movsl
std
fstpl
gs
into
sbb
stos
aas
add
cmp
pop
xlat
xchg
pop
cli
ret
test
fiadds
lret
lcall
mov
out
sbb
sub
jo
adc
dec
inc
out
jg
into
dec
mov
out
pop
mov
sub
lret
or
mov
ror
jle
out
sub
decl
inc
je
lret
push
shl
dec
mov
sub
sahf
clc
xor
test
mov
cmp
xorb
loop
dec
inc
cli
mov
mov
leave
out
ss
loope
out
js
xor
xlat
out
dec
insl
cli
pop
int3
or
cmp
lea
into
pushf
ficompl
xor
pop
bound
adc
bound
imul
popa
jae
rorb
mov
ss
mov
mov
xlat
ret
daa
jecxz
jmp
lods
mov
mov
sbb
test
ja
xor
shlb
mov
loopne
iret
test
inc
addl
movsb
jns
and
xchg
iret
repz
call
or
cmp
or
leave
push
lock
cld
jmp
int3
js
shll
loope
push
nop
lahf
push
mov
jb
lds
xchg
je
adc
jns
lcall
mov
call
push
lods
movsl
mov
xor
outsl
dec
mov
outsl
rcrl
incb
add
outsl
das
sbb
lods
mov
xchg
ds
and
int
sarl
imulb
mov
jo
mov
orb
popa
aam
mov
data16
cld
xchg
lret
inc
pop
aas
mov
ss
pop
or
jb
imulb
ret
aam
in
push
ret
inc
pop
lock
xor
dec
push
xor
shrb
add
popa
xchg
push
lods
inc
and
mov
and
loop
in
sbb
dec
and
xchg
movsb
lahf
test
out
gs
mov
les
clc
and
xchg
xchg
ror
pop
mov
stos
popf
icebp
sub
jns
pop
xchg
shrl
adc
and
xor
std
or
rol
and
je
sbb
mov
dec
mov
sbb
mov
mov
inc
xor
jb
out
add
push
lret
add
into
or
dec
bound
cmp
add
pushf
xchg
lock
mov
clc
inc
mov
adc
shll
ja
ljmp
push
add
add
mov
jne
mov
fcomip
adc
xchg
pop
test
xor
out
out
mov
sub
addr16
hlt
push
arpl
daa
stos
movsb
jmp
and
insb
ds
arpl
repz
jle
in
jge
and
sbb
cmp
jae
cmc
or
pop
inc
nop
movsl
inc
mov
sbb
negl
cmp
fiaddl
movsb
xor
std
xor
scas
jb
pop
push
add
jb
mov
mov
fdivp
xchg
in
arpl
imul
sub
into
push
xor
or
ss
add
sub
mov
iret
pop
fisubl
lds
dec
shl
xchg
scas
or
inc
cmp
test
movsb
lds
push
in
int
dec
clc
test
mov
scas
daa
popa
out
cmc
cmp
jno
jnp
jl
mov
test
cmpsl
cld
mov
lock
push
fcompl
out
dec
aam
inc
or
cmpsb
cld
push
in
inc
pop
call
pop
adc
cmp
xchg
xchg
ljmp
and
cmp
orb
scas
aad
movsl
add
stos
and
cmp
sub
clc
and
das
and
push
aam
jbe
mov
push
sbb
pop
and
pop
js
sbb
pop
dec
imul
fcompl
push
shrb
jge
adc
and
mov
sbb
mov
movsl
xor
and
push
jge
in
loopne
testb
add
lret
pop
sarl
mov
sbb
or
sahf
fwait
testl
outsl
popa
cmp
stc
std
or
fs
sbb
ss
xchg
out
mov
insl
cli
nop
loope
xor
jmp
cmp
into
cmp
cmp
inc
into
jg
mov
xchg
fistps
fs
adc
mov
imul
scas
nop
add
jmp
lods
sbb
lcall
scas
push
sub
xchg
repz
stc
sti
xor
jmp
lock
loopne
lods
xor
sub
fstps
repz
fcomp
xchg
das
push
aaa
sbb
outsb
popf
inc
dec
scas
lcall
repz
fs
jmp
or
and
in
sub
stos
aas
int
icebp
jb
cld
jl
orb
dec
push
jecxz
mov
xchg
fisubl
fildll
call
adc
addl
cmpsb
jbe
jno
or
inc
int3
faddl
pop
shrl
int3
insl
mov
dec
jbe
and
sbb
mov
imulb
outsl
std
pop
xchg
xchg
cwtl
cmp
imul
std
repnz
icebp
cmp
dec
jge
mov
sub
pop
in
xlat
lock
std
push
pop
sub
rolb
adc
mov
rclb
shlb
and
mov
out
dec
subl
xchg
xor
ljmp
pop
lods
scas
fwait
movsb
mov
inc
xor
and
dec
cs
minps
mov
pop
fwait
push
cltd
lret
test
push
push
subb
xor
mov
xchg
mov
shll
aas
nop
pop
outsl
xchg
cmp
fdivrl
adc
adc
je
xchg
pop
xor
out
mov
mov
mov
ljmp
mov
dec
icebp
adc
or
mov
fwait
sbb
xor
xchg
add
mov
out
sar
push
jns
lea
movsl
sbb
pusha
in
mov
int3
inc
addr16
jp
outsl
push
mov
icebp
fdivrl
sbb
dec
icebp
xlat
pop
jne
pop
jo
aam
cld
fists
mulb
ret
add
leave
adcl
jge
mov
or
add
mov
les
adcl
jnp
xor
in
adc
iret
push
xorl
js
add
jae
sub
push
adc
pop
mov
or
xchg
xchg
dec
out
mov
push
cmp
aad
dec
push
dec
cli
cmp
call
and
leave
mov
inc
mov
inc
pop
push
cmp
dec
mov
bound
push
ljmp
into
mov
int3
sahf
cmpsb
mov
or
scas
mov
scas
call
pop
sub
cmpsl
punpckhwd
sarl
add
and
sbb
dec
dec
cmp
or
push
lcall
mov
push
mov
pop
ds
cmp
jle
scas
xchg
pop
xor
scas
push
adc
adc
xlat
std
cmpsb
jg
sub
daa
call
or
push
jmp
mov
test
push
sub
mov
cmp
dec
sbb
fwait
data16
or
sub
sub
pop
dec
sbb
push
enter
lds
pop
push
dec
fadd
faddl
sub
or
fdivr
jg
adc
mov
js
mov
in
mov
sbb
and
pop
outsl
sub
subb
shll
rcll
rorb
mov
sahf
ds
test
sti
mov
inc
inc
loop
lret
test
fs
ljmp
add
cmp
test
cmp
xor
xorb
and
or
es
dec
sbb
add
in
pop
mov
aaa
mov
shl
lods
adc
push
xchg
add
push
or
sti
ljmp
fistps
xlat
inc
mov
mov
in
pop
stos
push
jp
cltd
gs
pushf
outsl
dec
add
mov
xor
fsts
mov
lea
mov
scas
cmp
jns
pop
xchg
or
adc
stos
pushf
mov
xchg
jge
push
icebp
les
insb
repz
push
shll
jecxz
inc
mov
cwtl
push
cmp
call
rcrl
fmull
cltd
jmp
call
pop
xchg
inc
sbb
fsts
cmc
rcr
mov
xchg
mov
fidivl
divb
std
mov
jl
cmpsl
pop
xchg
jmp
dec
cld
in
cltd
push
lret
and
lods
push
mov
push
mov
clc
cmp
mov
rcrb
mov
clc
push
sub
popa
dec
test
inc
jg
insl
sbb
dec
jle
movsl
xchg
jno
out
ljmp
loop
sbb
jecxz
outsb
xor
outsb
and
mov
dec
cmpsl
cltd
add
roll
ljmp
add
xchg
pop
in
xchg
pop
imul
ja
fs
sbb
xchg
out
aas
mov
pop
push
in
lret
xor
jl
test
aaa
mov
mov
shrl
and
lcall
fs
fwait
dec
push
and
adc
add
add
mov
bound
xchg
push
in
test
mov
mov
inc
add
pop
xchg
ljmp
xchg
adc
mov
loope
decl
jno
jne
mov
fildll
fmull
xchg
lods
jmp
lret
sar
and
fidivl
or
push
push
loope
push
stos
mov
insb
adc
out
jnp
xor
jle
pop
cmp
pusha
outsl
cld
push
iret
mov
cmp
pop
scas
pop
cmp
outsb
jae
subb
aam
or
mov
xchg
data16
mov
sbb
pushf
or
push
cmp
push
xchg
fldenv
mov
das
jno
leave
xor
popa
hlt
sub
pop
arpl
mov
or
repz
mov
sbb
add
adc
mov
xchg
sbb
lds
add
sub
scas
mov
in
cmp
dec
movsb
fistl
sub
aam
adc
sbb
fsubl
pop
and
mov
jl
dec
cmpsl
dec
ffree
fisttps
insl
ss
xor
cmpsb
lahf
jle
push
jle
push
cmpb
push
fiadds
inc
sub
imul
push
push
xlat
enter
pop
xchg
gs
and
sub
ret
inc
and
cmc
mov
xor
cmpsb
hlt
jmp
jmp
sbb
jnp
xor
imul
aas
pop
outsl
and
pop
inc
rol
js
arpl
xor
sub
test
jno
mov
rcr
rcl
cmpl
mov
out
and
clts
mov
adc
sub
cmpl
shrl
dec
sbb
sahf
loope
movsb
test
and
pop
push
movsl
loop
fnstenv
fidivs
adc
loopne
cmp
fs
mov
ds
sub
mulb
int
cmp
sbb
aam
inc
mov
leave
xor
push
pop
mov
lock
imul
inc
sub
insl
arpl
inc
adc
dec
mov
lea
inc
pop
test
leave
fstps
sti
xchg
mov
into
gs
push
loopne
mov
ret
in
lret
xlat
iret
lcall
cmp
sbb
in
mov
pop
inc
cmp
adc
dec
lock
xlat
imulb
ljmp
nop
xor
aas
or
xor
pop
xor
jo
mov
jecxz
sbb
fwait
mov
lea
test
mov
sbb
in
xor
jo
jg
jb
iret
ja
pop
sub
mov
inc
cmp
leave
das
mov
pop
mov
mov
ljmp
cmc
sub
cwtl
mov
or
arpl
leave
cld
pop
mov
mov
ja
out
mov
push
mov
pop
addr16
shr
out
sub
xchg
add
lock
les
insl
add
sbb
jns
aam
mov
mov
popa
lret
sbb
test
adc
xchg
movsl
and
subl
add
aad
test
mov
fldl
push
xchg
vpsrlw
jmp
jp
push
inc
out
mov
add
mov
sub
dec
daa
stc
or
shll
cmpl
out
pop
test
enter
loope
dec
xlat
out
inc
test
or
das
mov
mov
push
add
pop
ss
out
mov
andl
push
in
mov
xchg
sbb
mov
inc
out
addr16
push
mov
adc
sti
dec
mov
adc
and
mov
ror
fisttps
dec
xchg
andb
les
xorl
sub
pop
jle
push
and
sbb
mov
outsl
insb
jg
inc
jnp
clc
and
in
sbb
or
pop
ret
push
inc
fstpl
ret
jae
sbb
xchg
dec
pushf
popf
insb
js
mov
push
inc
adc
sahf
sbb
inc
or
sbb
sub
imul
scas
fwait
aam
push
ficompl
adc
icebp
insl
repnz
leave
stos
cmpsl
xor
ja
xchg
arpl
ljmp
or
aas
ret
jo
fmull
hlt
lods
push
add
mov
ja
addr16
jnp
jnp
dec
fadd
inc
test
and
mov
movsb
cbtw
std
push
roll
jbe
jo
jge
xchg
jns
adc
daa
pop
xchg
jno
lea
dec
dec
push
fisttpll
push
inc
ds
add
sub
push
sbb
mov
inc
mov
jl
in
cmc
movsl
fwait
enter
pop
rolb
push
sub
sub
iret
aaa
cmp
sbb
sbb
dec
movsl
sbb
push
orb
add
lea
addr16
jmp
js
jae
pop
xor
lcall
mov
sub
shrl
cmpsl
adc
mov
jg
gs
mov
rorb
mov
shr
mov
pop
aas
and
out
push
mov
push
sub
push
popf
idivl
jecxz
lret
add
inc
movsb
or
dec
leave
sahf
test
arpl
lods
ret
lret
outsl
imul
stc
and
test
add
out
or
pop
sub
out
cmp
cli
sub
xor
mov
or
inc
movsl
cmc
fcoml
xor
pushf
cli
adc
imul
nop
add
cld
mov
data16
mov
loope
aad
mov
sub
decl
xor
mov
inc
scas
int
cmp
aas
loopne
mov
inc
inc
jno
jno
add
std
repz
push
sbb
pop
addr16
lds
cmp
lock
jmp
arpl
std
jecxz
nop
or
cmp
stos
enter
fisubl
dec
out
inc
je
in
cld
jecxz
xor
sahf
rcrb
call
dec
mov
sbb
push
push
sbb
int
mov
inc
push
mov
das
xchg
ljmp
sbb
and
fwait
lret
sarl
xlat
idivb
push
xchg
std
or
repz
outsb
cld
mov
pop
dec
fnstcw
ret
cld
inc
stos
push
lret
add
popf
mov
das
mov
gs
lock
out
or
xchg
popf
sarb
adcb
jg
cmpsl
es
loopne
insl
jmp
hlt
mov
ljmp
inc
lods
out
add
fdivrs
popf
mov
mov
jp
mov
xchg
ds
cltd
outsl
sub
xchg
mov
mov
les
add
pop
in
shll
pop
mov
out
add
adc
pushl
xchg
xor
push
int3
xor
jbe
mov
mov
push
test
inc
cmpsb
ja
test
inc
lea
or
inc
cmp
push
test
std
add
push
and
insl
xor
imul
dec
in
cmp
xchg
push
arpl
xchg
stos
addr16
cmc
mov
in
divl
mov
addl
mov
cmp
insl
mov
xchg
push
addr16
mov
push
loopne
inc
adc
out
cmc
adc
or
adcl
in
scas
and
mov
insb
ljmp
jle
cltd
enter
pop
pusha
movsl
sub
mov
pop
sbb
sub
sahf
testl
mov
test
push
pop
fists
mov
push
xchg
scas
mov
push
and
imul
sub
jns
out
aad
inc
leave
and
push
hlt
ret
arpl
sub
or
mov
push
cltd
or
xchg
popl
xchg
mov
pop
mov
add
push
mov
shlb
scas
test
mov
mov
cmp
test
push
and
out
jge
mov
sbb
pop
imul
lods
jno
xchg
fdivs
jmp
push
xor
xor
pop
push
push
push
sub
jecxz
je
sub
inc
rol
cmpsb
or
jge
jno
jnp
add
in
loope
or
cmp
jae
and
or
test
jl
sbb
xchg
nop
add
repz
mov
ja
sub
mov
stos
mov
xchg
push
dec
xor
sub
in
aaa
cmp
adc
iret
mov
adc
mov
lret
xchg
mov
jp
and
jbe
shrl
or
inc
idiv
enter
jg
rcr
fisttpll
inc
int3
sahf
daa
xchg
fadds
sub
fucom
sub
pop
fs
jg
adc
ss
jo
cmp
fisubl
out
add
xor
in
testl
mov
aaa
mov
std
or
adc
cmp
add
movsb
lods
lods
mov
sub
shrb
imulb
sub
ja
push
pop
mov
lahf
mov
sti
out
sar
jecxz
enter
inc
loopne
out
dec
and
add
mov
in
icebp
repz
sub
sbb
pop
rol
movl
adc
fs
adc
jmp
mov
cs
add
inc
mov
stc
aas
dec
mov
mov
pop
lret
push
ffreep
mov
aas
out
ja
jl
push
cmpsl
nop
mov
out
sbbl
fldt
popf
adc
shlb
outsb
arpl
das
jne
jb
scas
std
push
daa
mov
inc
rol
fs
idivb
xchg
std
mov
jno
sub
mov
leave
add
cld
insl
jo
lret
jb
jne
and
stos
mov
stos
cli
lock
pop
movsl
adc
push
mov
xchg
sub
aam
mov
inc
es
insl
shrb
jge
outsl
mov
xchg
cs
mov
stc
aas
clc
lods
pop
shl
mov
int3
mov
insl
mov
mov
test
sub
shl
cld
mov
lcall
rorb
test
mov
and
pop
sbb
inc
out
push
addl
filds
hlt
sbb
pop
adc
mov
ret
dec
mov
std
test
push
hlt
ja
lods
or
mov
or
daa
or
stc
mov
add
push
or
out
dec
dec
mov
jae
jns
js
in
pop
sbb
mov
sbb
mov
mov
cmc
pusha
jp
xor
mov
push
loope
cs
xchg
inc
mov
push
xchg
mov
scas
xchg
sub
jmp
rorb
out
mov
sub
dec
xor
stos
jecxz
enter
dec
insb
push
int
jnp
rclb
in
scas
nop
pusha
inc
in
iret
rclb
ret
sub
push
bound
repz
jae
sbb
push
sbb
sbb
ja
test
out
lods
fiaddl
cs
repnz
mov
sarl
popa
mov
push
leave
push
mov
sub
cwtl
leave
cltd
push
sub
arpl
inc
and
or
xor
fwait
inc
or
sub
add
jge
int3
dec
sbb
faddp
mov
loop
scas
fs
and
dec
cmp
mov
xorb
nop
jge
xchg
adc
xchg
aas
cmp
clc
jno
mov
sbb
xlat
dec
push
push
xor
xor
mov
jnp
mov
imul
push
test
aas
pop
out
pop
shlb
repz
enter
pop
dec
mov
push
push
dec
loope
shlb
nop
adc
push
cmp
pop
sarb
daa
push
and
pop
ffree
xorb
adc
xor
cmp
pop
in
lret
js
xchg
addb
mov
rcll
or
fdiv
das
out
sub
add
or
adc
push
sarb
enter
stc
test
mov
inc
cli
and
cwtl
push
les
mov
call
ja
idivl
test
imull
or
sahf
lret
test
sub
adc
loop
cmp
fs
lcall
addr16
xchg
mov
out
dec
ds
xlat
mov
pop
inc
xchg
cmp
addb
data16
sub
mov
outsb
mov
ljmp
popf
pop
adc
and
push
mulb
sbb
popf
inc
mov
xlat
cmp
push
push
mov
or
sti
sahf
cmpb
in
gs
repz
loopne
daa
or
mov
inc
xchg
mov
jle
clc
add
repz
sbb
decb
sbb
xchg
sarl
lret
cmc
pop
pop
xsha256
cmpsb
adc
stos
pop
jmp
xbegin
aad
cli
cmpsl
nop
shll
aas
call
sbb
shll
lret
das
lods
movsb
data16
loop
mov
mov
xor
xor
mov
fistpl
pop
adc
fldl
mov
mov
mov
mov
fisubrs
ds
cli
and
push
push
cltd
idivb
mov
pop
cmpsl
pop
sbb
jo
sbb
cwtl
or
movsl
loop
pop
test
mov
push
sbb
pop
les
shlb
sub
out
popf
push
es
adc
mov
push
dec
push
jno
insl
movsb
repnz
hlt
lods
lds
mov
out
andb
mov
cmp
lar
imul
dec
push
dec
test
mov
cmpl
add
icebp
sbb
adc
testl
aaa
xchg
jns
lret
xor
xchg
jge
adc
push
lods
ljmp
movsb
or
jae
xor
add
mov
lds
repz
sbb
repnz
std
dec
ja
pop
push
dec
mov
xchg
inc
mov
loope
fwait
or
jecxz
mov
outsb
add
adc
sub
bound
add
in
inc
xchg
xchg
lret
mov
dec
push
mov
jae
dec
addr16
daa
int
mov
sub
pusha
popa
pcmpeqw
push
mov
dec
push
fildll
adc
xchg
idivl
repnz
out
loopne
sub
dec
ljmp
push
cmpsb
xchg
and
mov
shlb
mul
xchg
test
in
nop
xchg
scas
dec
iret
das
adc
and
pop
mov
sub
push
loopne
hlt
popf
loope
add
inc
orl
xchg
dec
mov
sbb
lret
mov
scas
les
push
scas
add
das
jge
mov
jnp
push
leave
adc
xor
pop
push
cmp
stc
out
inc
es
or
mov
das
aaa
lods
push
jb
rcll
pop
hlt
loope
fisubs
lds
mov
xchg
das
loop
inc
add
bound
cmp
pop
cmpsl
icebp
push
mov
sti
xchg
jge
push
sbb
out
daa
pop
rcll
mov
jno
in
jl
addr16
dec
cltd
gs
push
stc
sbb
xor
adc
mov
test
or
and
in
stos
lock
enter
pop
lea
inc
loope
fildll
out
sub
add
into
movsl
shlb
mov
inc
sub
jns
or
mov
sub
mov
fstps
adc
or
inc
sahf
fs
fcmovu
fwait
out
fwait
sub
aas
or
rcr
adc
inc
sub
shll
adcb
or
and
inc
push
sub
test
outsl
out
idivl
lret
ljmp
scas
dec
sbb
jae
sahf
insl
xchg
mov
cmp
ret
outsl
fwait
mov
cmp
fs
cwtl
adc
scas
jo
push
rcr
cmp
push
rcrb
cmp
out
cli
ret
xor
mov
cmp
mov
or
rcll
shll
leave
pop
and
cmp
push
adc
fildl
movsl
cmpsb
xchg
adc
or
test
add
mov
sbb
popa
sub
gs
cmpl
sti
dec
hlt
xchg
sub
push
xchg
test
or
jno
inc
stos
sbb
fldenv
mov
xchg
shl
sbb
shlb
inc
sub
cmc
insl
pop
pushf
popw
imul
jbe
addr16
fwait
rcll
cmpsb
mov
movsl
mov
popa
mov
jecxz
adc
cmpsl
fmulp
lea
sti
call
mov
mov
subl
sub
inc
fisttpl
sbb
inc
mov
std
lods
das
xor
mov
xchg
cmp
and
test
shll
push
testb
test
cwtl
lahf
xchg
aas
cmpsl
pop
leave
push
mov
inc
push
repnz
ret
js
lret
push
push
rorl
add
lock
jg
shlb
push
pop
sub
add
ret
sub
dec
es
push
insl
sahf
and
dec
gs
sahf
xchg
lods
jecxz
ljmp
movsl
lods
xor
iret
mov
adc
ss
out
fwait
pop
seta
add
mov
cltd
adc
in
out
jmp
push
adc
call
clc
mov
out
rcrl
push
push
pop
shrl
out
lahf
pop
jno
stos
es
pmaxsw
lock
xchg
les
dec
jge
xor
jp
xor
dec
or
xchg
push
in
dec
andl
lods
imul
jmp
or
outsl
fcompl
aas
mov
add
mov
or
sti
jns
inc
xchg
in
enter
cwtl
loop
repnz
ret
mov
sbb
mov
into
adc
outsb
gs
jmp
xorl
out
imul
push
xchg
popa
xchg
int3
mov
jmp
ret
xor
out
nop
addl
imul
ss
sbb
int3
stos
leave
nop
dec
and
lret
movsl
mov
jle
popf
pop
in
aad
pusha
jbe
dec
mov
fld
xor
int
ret
inc
or
jae
sub
popf
or
dec
mov
add
push
xchg
mov
test
imul
adc
daa
push
push
notb
hlt
adc
inc
dec
mov
into
pop
scas
leave
xchg
pop
arpl
ds
sub
or
sub
mov
insb
mov
jge
pop
into
je
and
and
fiadds
adc
fcmovnb
mov
mov
and
mov
xor
mov
jbe
mov
sbbl
sub
daa
pop
xor
cmp
test
jno
dec
mov
dec
or
jne
addr16
jmp
insl
sub
push
mov
add
push
aad
addb
in
xchg
and
enter
pop
int3
xor
push
dec
cmc
loope
lcall
mov
push
movsb
xor
xor
adc
pop
test
fadd
dec
sbb
sbb
jge
jae
les
mov
js
add
pop
ret
lcall
lret
faddl
lcall
mov
shlb
jp
jg
cmp
inc
repnz
push
int3
scas
and
mov
or
idivl
xchg
inc
lret
daa
rcrl
mov
sahf
adc
push
test
push
movsb
sbbb
or
loope
loop
sub
stc
pop
mov
adc
insb
ss
scas
sbb
or
test
cmc
and
sarl
loop
inc
inc
mov
mov
cs
clc
pop
pop
xor
gs
pop
jne
adc
push
xor
add
add
cltd
xchg
data16
lods
imul
xlat
mov
sub
cwtl
inc
jg
loopne
jnp
cld
sub
dec
mov
gs
jge
loopne
in
dec
ds
mov
dec
xor
push
sbb
repz
sub
pushf
dec
sbb
or
pop
lret
dec
add
adc
jmp
cmp
fldenv
aad
mov
jp
mov
adc
ret
mov
inc
jecxz
cmp
lea
push
mov
sarl
mov
cltd
xchg
dec
push
mov
mov
pop
dec
test
xor
inc
mov
jnp
mov
dec
in
sahf
and
test
sub
inc
mov
std
test
and
pop
cld
add
bound
icebp
push
leave
mov
out
mov
aaa
mov
pop
xchg
mov
aam
lock
pop
add
imul
add
aam
xor
es
adc
test
jno
pusha
push
pop
ljmp
jl
fwait
sub
mov
xor
jb
mov
mulb
hlt
cltd
dec
div
test
or
sub
fldl
aas
clc
stc
jl
xchg
xor
roll
sbb
stos
adc
mov
jle
push
test
in
mov
dec
or
and
xor
jecxz
mov
lret
dec
mov
test
add
ja
cmp
dec
xchg
inc
fiadds
leave
adc
jno
cmp
loop
add
cmpsb
pop
adc
jmp
and
into
in
lahf
in
xchg
push
or
mov
jmp
movsl
sarl
pop
mov
jl
mov
jnp
mov
jne
lock
test
fucomip
xchg
ficoml
xchg
cwtl
xchg
lea
jg
test
sub
aas
push
inc
push
pop
mov
cmp
pop
and
arpl
cli
jnp
push
cmpl
jle
pusha
adc
stos
ret
dec
pop
stc
sub
adc
pop
jae
push
insb
push
and
das
mov
cmp
dec
lret
ficompl
sti
sbb
pop
or
icebp
mov
scas
mov
ljmp
inc
cmpsb
repnz
ror
mov
jbe
jns
mov
or
cmpsb
jbe
aaa
sub
test
out
sub
int3
or
mov
ret
stos
mov
scas
ror
je
add
and
pusha
sub
test
movsb
movsb
sbb
dec
jb
repnz
sbb
daa
imul
or
jno
shlb
test
cs
ja
pop
push
mov
jae
jo
jmp
das
push
je
test
mov
test
cmpsb
adc
test
js
icebp
enter
pop
or
movsb
push
fiaddl
sarl
cmp
mov
push
movsl
cmp
mov
fadd
clc
and
inc
int3
sbb
cmpsl
or
shrl
lods
or
ss
pop
pop
out
js
lcall
stos
stos
mov
fdiv
out
sub
cmp
sar
fiaddl
mov
mov
sbb
and
mov
push
sub
jecxz
cli
xchg
bswap
sub
xor
fisttpll
mov
sahf
mov
jl
test
lahf
outsl
pop
or
loop
outsb
fdivr
mov
shlb
adc
add
iret
sbb
cmp
cli
sub
pop
xor
mov
or
xor
mov
jg
jmp
jns
ret
adc
movsb
movsb
adc
in
push
add
cmp
push
xor
lods
push
rcrl
mov
outsl
fisubrs
mulb
add
dec
push
daa
sti
stos
daa
dec
outsl
push
inc
gs
fsubr
loopne
pusha
xor
adc
xorb
sbb
push
inc
out
xchg
inc
je
sbb
inc
inc
lods
movl
jb
mov
adc
push
rolb
aad
or
nop
push
xchg
or
lds
push
dec
cmp
adc
add
sub
arpl
and
or
cltd
mov
adc
and
jmp
imul
sbb
das
icebp
mov
cld
mov
arpl
add
add
gs
dec
sub
adc
mov
mov
cmc
arpl
cld
sbb
jbe
cs
decl
xchg
stos
ret
lock
add
and
dec
rcr
int
sub
adc
mov
ret
dec
push
fisubrl
scas
add
pop
ja
xchg
sub
cli
ljmp
call
mov
pop
test
shlb
andnps
in
cmc
mov
cltd
addb
mov
test
push
cwtl
cmpsb
pop
clc
xor
leave
xchg
int
rcr
dec
xchg
adc
hlt
dec
inc
xchg
push
xor
push
jmp
cld
pop
xor
wbinvd
cmp
xor
rcrb
xchg
or
dec
push
and
ja
je
dec
mov
inc
addb
or
pop
jge
xchg
add
add
shll
bound
mov
xor
mov
xchg
lock
movsb
stos
mov
mov
cmp
mov
and
mov
not
dec
or
jne
fildll
jne
fisttps
xchg
enter
sub
ljmp
push
enter
es
sub
cmp
jns
scas
andl
insb
add
pop
jnp
scas
insb
jle
arpl
in
mov
pusha
lods
xchg
iret
dec
fs
pop
lcall
pop
imul
sub
mov
mov
add
fcmovbe
das
mov
sbb
loopne
imul
je
in
bound
test
push
adc
adc
mov
je
out
leave
jne
stos
hlt
cmp
xor
push
push
inc
das
es
xor
push
ljmp
add
int
pop
sbb
lock
push
lahf
shl
mov
and
or
cmp
pushf
movsb
test
mov
jbe
fwait
int3
jge
inc
push
sbb
add
cmp
dec
pop
jno
jle
jl
imul
mov
jp
jo
mov
push
test
imul
inc
adc
cmpsb
xchg
and
in
pop
aas
stc
enter
pop
dec
ret
sbb
sbb
loope
add
sub
test
pmaddwd
ds
and
test
test
sti
cmp
lahf
sbb
xchg
add
fucom
xor
loopne
pop
andb
js
les
shrb
push
add
sbb
pushf
and
cld
mov
outsb
fisubrl
adc
dec
lods
jg
mov
lock
imull
in
cmpsb
fsubl
lods
faddl
shlb
pusha
int
inc
dec
sub
lods
js
mov
movsl
sub
lret
dec
mov
sbb
lds
or
cmp
dec
insb
outsl
cmp
inc
stc
insb
popa
mulb
in
adc
and
ss
cmp
subl
xor
pop
sbb
and
jae
jp
xor
cmp
xor
mov
cmpsb
adc
imul
and
data16
lods
cmp
mov
lcall
movb
mov
in
pop
out
xchg
insl
icebp
gs
out
jns
mov
cld
lret
jecxz
lods
cwtl
les
adc
ljmp
mov
push
adcb
nop
inc
pushf
addr16
jmp
mov
sbb
nop
sub
test
jb
adc
je
or
jecxz
pop
clc
mov
cli
lea
test
fdivp
dec
mov
test
adcl
xchg
fistpl
lods
mov
inc
dec
les
cli
mov
mov
mov
test
rcll
psadbw
fstpt
cwtl
rcrb
cmpsl
push
out
ret
mov
int3
and
cld
inc
mov
sbb
pop
in
lock
add
inc
inc
cmp
mov
fisubrl
push
lea
es
jecxz
insl
push
dec
sbb
xchg
imul
pop
lods
jno
adc
jnp
in
and
shlb
mov
push
cltd
mov
and
mov
ljmp
xchg
fwait
imul
incl
aaa
lcall
jb
sbb
push
out
xchg
cltd
lcall
sub
xor
gs
xor
adc
mov
sarl
push
test
pop
push
ja
xor
dec
jl
mov
or
adc
les
hlt
push
sub
add
fdivr
lcall
sbb
jns
enter
dec
iret
xchg
push
je
mov
xchg
adc
pop
sarb
addr16
and
cld
scas
mov
call
inc
mov
testl
xor
mov
push
stos
fbld
popf
sbb
test
test
out
es
sub
xor
loopne
stos
and
sbb
and
shlb
jle
xor
in
cld
andl
ror
stos
xor
ret
test
cmp
sub
js
hlt
push
in
push
mov
mov
jg
dec
fiaddl
mov
sbb
cmp
scas
push
sti
mov
lret
jecxz
adc
dec
js
jmp
leave
in
mov
hlt
test
arpl
mov
or
pushf
xchg
jns
test
mov
add
dec
sbb
mov
fdivp
out
lds
sub
scas
mov
in
stos
cmp
mov
push
cli
inc
xchg
jbe
mov
xchg
sbb
rorl
push
popf
out
bound
scas
jno
dec
cmpsb
jl
mov
adc
test
push
jo
mov
adcb
js
jecxz
add
mov
cmpsb
sbb
mov
inc
int3
mov
pop
mov
cmpsl
push
or
es
pop
movsl
cmp
jg
movsl
dec
nop
iret
and
jae
jecxz
imul
or
add
cmp
xor
stc
pop
cmpsl
dec
idivl
adc
aas
mov
add
in
push
faddl
pop
sub
addb
mov
adc
mov
ret
xchg
mov
in
jno
push
xchg
mov
push
shll
int
imul
js
ret
lret
dec
shll
mov
cmpsb
sahf
stc
adc
test
dec
push
loop
xchg
pop
stc
and
lret
xchg
cs
ss
add
adc
xor
cmp
push
out
jns
cli
mov
xor
out
or
test
ret
mov
add
adc
pop
insl
imul
dec
pop
pop
xor
and
scas
mov
dec
in
sub
scas
sbb
and
lcall
mov
sbb
fwait
loopne
divb
les
cmp
xchg
int
mov
cmp
sbb
sub
adc
lret
ss
jmp
cmpsl
les
add
push
aad
or
add
call
je
mov
push
dec
add
mov
and
in
ret
pushf
add
xchg
and
add
lcall
mov
inc
aad
das
inc
adc
add
scas
add
mov
jns
adc
or
cmc
pop
cwtl
mov
cmpsl
push
lods
mov
sti
xor
icebp
mov
jns
lret
or
jp
jbe
es
addb
fstl
pop
pop
mov
rolb
lcall
push
jns
insl
cmp
sub
push
loop
test
adc
sbb
repnz
adcl
lods
fdivr
imul
mov
fisubl
adc
jb
lock
test
sub
push
push
ds
mov
xchg
jo
ljmp
pop
sbb
daa
clc
out
mov
rclb
and
dec
mov
xor
fstps
es
xchg
xor
cmpsl
mov
xchg
loop
dec
pop
jbe
test
in
ja
outsl
scas
dec
outsl
push
mov
loop
or
out
insb
fwait
repz
rcrb
lret
adc
add
mull
out
xchg
fsubl
pop
mov
in
sbb
push
inc
lods
mov
or
addr16
imul
pushf
addr16
pop
jp
jae
mov
sarl
sbb
cmc
mov
push
sbb
jne
jmp
inc
filds
ret
xchg
sbb
jmp
out
scas
out
subl
out
cltd
inc
sub
xor
adcl
inc
fldenv
imul
add
popa
mov
jle
stc
pop
in
sarl
or
movsl
pop
sahf
mov
inc
xor
js
push
scas
mov
popf
movsb
stc
sbb
push
adc
xlat
dec
xchg
cld
fwait
adc
imul
dec
push
adc
adc
insl
mov
sbb
leave
arpl
dec
arpl
mov
or
pop
push
pop
aaa
push
test
mov
pop
int3
int3
lahf
outsb
pop
fists
ficoms
mov
rcrb
mov
cmp
lods
inc
movsb
mov
movsb
push
jbe
dec
stc
jge
idiv
sbb
xor
push
push
lods
cmp
inc
jl
call
scas
push
push
mov
jo
pushf
out
outsb
adc
in
imul
js
push
add
inc
xor
out
sub
inc
repnz
enter
push
mov
loope
push
sub
or
xor
mov
test
mov
add
mov
ret
add
in
inc
xor
imul
in
es
into
push
cmp
aad
pop
mov
push
xor
test
fdiv
adc
fidivrl
in
test
rorb
sub
loope
fdivs
pop
jbe
cmpb
push
jns
sub
rolb
cmpl
mov
push
push
sahf
pushf
push
xchg
test
mov
addb
loop
ja
stc
lods
roll
adc
cs
cmp
fistl
xor
out
xor
or
stc
jp
inc
shll
cmc
adc
mov
pop
lea
add
adc
scas
lock
data16
lods
pop
gs
mov
jp
sub
dec
mov
mov
mov
fdiv
aam
jae
jne
scas
dec
adc
outsl
addb
cmp
mov
aas
mov
xchg
nop
scas
imul
mov
mov
adc
int
jmp
push
enter
xor
mov
jb,pt
lds
dec
lahf
adc
je
pop
sub
sub
add
lea
call
inc
inc
inc
mov
xor
mov
xchg
pop
in
pop
inc
pop
daa
int
sub
das
mov
ret
mov
sub
and
clc
xor
lock
notb
inc
std
inc
mov
cwtl
inc
sbb
mov
jp
lcall
mov
ds
xorl
loope
pop
jle
mov
push
jg
sub
and
ret
neg
mov
pop
test
insl
and
mov
xchg
out
daa
ljmp
or
jae
mov
aad
out
mov
jb
add
aaa
dec
cltd
daa
out
test
add
loope
cmp
clc
in
daa
xchg
addr16
sbb
fistps
pop
enter
rol
xchg
sbb
xchg
cld
push
jp
push
ljmp
pop
xor
pop
dec
or
nop
inc
mov
xlat
sti
jmp
xchg
test
add
ja
xor
dec
bound
inc
inc
mov
or
mov
adc
outsb
into
xlat
add
adc
xor
gs
bound
in
jns
std
mov
xchg
xchg
movsb
pop
xlat
mov
repz
mov
aad
test
sbb
push
mov
jecxz
mov
aaa
int3
xor
loopne
jne
add
mov
push
or
gs
xchg
jmp
add
jae
out
xchg
mov
xor
out
orl
push
inc
sub
sub
insb
inc
inc
mov
adc
jle
mov
in
or
jge
sub
imul
pop
pop
aad
cmp
jae
jbe
push
jb
add
adc
adc
jge
jne
jmp
shlb
imul
dec
push
pop
push
scas
adc
aaa
mov
insl
rolb
leave
ficoml
hlt
sbb
or
mov
xor
sub
or
xchg
or
daa
or
or
xor
dec
setne
mov
fs
push
mov
fidivs
jecxz
lds
mov
inc
and
pop
cmp
icebp
push
cwtl
dec
imul
cmp
es
sbb
or
enter
pop
mov
dec
xor
cmc
push
dec
xchg
xor
xor
cmp
rcrb
push
int3
adc
into
cmpsb
and
inc
enter
pop
pop
ja
push
adc
mov
sub
mov
cmp
ds
ja
movsl
pop
push
adc
inc
outsb
ss
mov
inc
out
sbb
clc
mov
xrelease
sub
inc
mov
pop
js
mov
mov
jbe
push
push
or
fcompl
mov
xchg
adc
cmpb
dec
mov
in
xchg
mov
shlb
ret
fsts
int
push
sub
fincstp
testb
rcll
rcrl
cmp
sahf
aas
xchg
mov
dec
popf
outsl
aad
out
loop
mov
fs
aam
adc
inc
ss
cmp
fdivs
shll
cmp
cmp
je
or
mov
cmc
fcomi
lock
mov
cmp
aad
or
outsl
push
mov
in
and
add
popaw
add
lods
out
mov
mov
xor
sub
mov
mov
divl
add
gs
in
dec
sbb
sbb
inc
sbb
mov
lock
les
hlt
repz
enter
sub
xor
cld
cmp
fcompl
in
mov
push
inc
pushf
push
ret
adc
enter
jl
outsl
nop
mov
into
or
insb
mov
xchg
rolb
mov
mov
out
push
insl
lret
mov
movsb
adcl
leave
xor
movsl
lods
jmp
mov
inc
jecxz
push
inc
inc
lods
cltd
das
insl
outsl
pop
mov
fisttps
dec
and
popf
adc
notb
push
cmc
cwtl
add
cmpsl
push
mov
mov
push
aaa
xlat
cld
lds
lret
ljmp
mov
jmp
es
popf
sub
shrb
int
sub
call
mov
cmc
ret
xchg
sub
loop
adc
or
dec
inc
jnp
xchg
xor
popa
mov
sub
scas
lret
lea
mov
sarl
mov
cltd
pop
sbb
mov
mov
push
movsb
movsl
mov
or
mov
and
cmp
push
cmp
shll
movsb
pop
jae
push
stos
shlb
xchg
outsb
and
sub
or
mov
mov
movsl
or
sti
mov
fimull
xchg
test
mov
ja
jnp
dec
push
cmp
fcoml
or
daa
sub
push
cmp
and
sub
scas
outsb
bound
mov
jns
push
mov
xchg
repz
mov
dec
xlat
mov
nop
mov
fwait
jp
jle
mov
pop
jle
jo
inc
mov
imulb
sbb
filds
shr
fisubrs
orl
out
fcompl
or
and
push
xchg
cmp
loope
xchg
mul
insb
lods
mov
sub
in
cmpsl
mov
sbb
iret
enter
movsl
cmp
pop
or
jo
dec
xchg
jae
mov
push
xor
inc
js
dec
jns
inc
cld
inc
ficompl
pop
sbb
outsb
imul
push
mov
cwtl
xchg
mov
rclb
hlt
gs
arpl
aaa
mov
or
or
jno
or
cmc
add
and
cmp
dec
call
rclb
scas
pop
dec
push
and
movl
movsb
aam
xor
xor
jbe
enter
cmp
sbb
ja
push
lods
icebp
cmp
inc
movsl
jno
lcall
mov
sbb
jo
int
lahf
lods
mov
push
xchg
pop
fildll
xchg
adc
cmpsb
mov
lret
inc
add
inc
adc
cmp
sbb
mov
loope
cmp
xlat
dec
jbe,pt
inc
movsl
pop
pop
and
mov
popl
insl
pop
orb
sbb
data16
add
dec
jo
stc
mov
lret
or
js
xor
and
pusha
and
fmull
mov
mov
out
adc
inc
jmp
jg
cmc
push
mov
mov
fbstp
mov
push
fcompl
fsubrs
int3
and
lret
mov
daa
in
mov
fstps
imul
test
push
movb
or
loop
insl
stc
dec
adc
xlat
clc
aad
sbb
ss
fsubrs
hlt
out
sub
daa
icebp
bound
adc
cmp
jns
or
jmp
into
push
std
lret
cmc
mov
leave
mov
adc
aad
adc
jle
add
adc
lods
mov
imul
xor
in
aas
in
bound
jge
push
push
movsb
cmpl
dec
js
ljmp
cmp
les
add
dec
xor
push
les
insl
fwait
test
pop
neg
imul
adc
jmp
notl
aad
hlt
dec
nop
cltd
aas
mov
jb
inc
inc
dec
lea
popf
jecxz
rclb
sbb
lret
add
lds
mov
imul
lods
pop
fimuls
and
aam
lds
pusha
xchg
inc
push
arpl
cmova
dec
lods
pop
mov
xchg
xchg
inc
and
xchg
mov
not
lock
xchg
xlat
call
cmpsl
push
add
xchg
dec
in
icebp
sub
push
lret
pop
cltd
mov
pop
imul
mov
dec
sbb
inc
clc
mov
ret
adc
cmc
cmp
pushf
jp
inc
outsb
je
gs
adc
jno
or
lods
sbb
mov
mov
jecxz
fwait
mov
xor
cltd
xchg
fistpl
xor
mov
push
addr16
dec
sbb
pop
push
xchg
lcall
mov
pop
stos
scas
dec
cltd
out
jecxz
in
xchg
mov
push
push
xor
jmp
negb
xor
pop
pushf
mov
fisttpll
in
test
stc
xchg
ja
inc
xchg
mov
jne
repz
xorb
mov
out
in
fcomps
add
push
out
and
sbb
outsb
lcall
mov
xchg
inc
push
dec
mov
pop
xor
dec
xor
jg
inc
adc
mov
adc
add
mov
movsb
mov
xlat
ret
xor
es
mul
and
mov
or
jp
push
aad
add
and
aad
jnp
call
jle
add
in
test
pusha
mov
call
ret
push
pop
inc
add
or
cmp
pop
popf
sbb
mov
jnp
into
fimull
cld
xchg
add
mov
scas
fsub
cmp
out
mov
pop
in
aaa
mov
adc
add
mov
gs
cltd
fiadds
je
or
mov
pop
aaa
movsl
pop
or
gs
rolb
jns
adc
lea
fidivrs
lds
push
shll
ja
cmp
pop
lcall
arpl
clc
mov
jge
das
jge
sbb
out
daa
push
mov
xchg
jno
sti
jl,pn
pop
jl
adc
push
adc
and
ljmp
push
mov
add
add
or
cmpsb
es
pop
in
loop
dec
aas
mov
xchg
push
jecxz
loope
cmpl
push
or
jp
in
ds
aas
adc
jp
mov
pop
int3
lods
sbbb
sbb
jns
add
sti
stos
xor
cmp
pop
inc
mov
dec
pop
cmp
or
mov
pop
fdiv
mov
sub
dec
mov
sbb
int3
inc
mov
mov
ja
arpl
cli
and
in
push
fists
int
stc
and
inc
xor
divl
lret
sub
mov
mov
cwtl
fdivrl
sahf
test
xchg
aad
mov
loop
push
pop
stc
lcall
pcmpgtb
fists
push
ja
imul
fsubrs
test
out
sbb
fisubrs
ljmp
or
jmp
cmc
imul
adc
pop
imul
mov
data16
sbb
sahf
std
inc
xlat
je
shrl
cmp
mov
int
mov
lds
or
inc
insl
mov
loopne
lock
xlat
add
inc
inc
jmp
les
mov
sbb
sbb
sbb
test
mov
cmp
cmp
pushf
mov
out
xor
aad
mov
nop
je
mov
jg
shll
push
ja
add
imul
adc
mov
and
call
test
mov
sub
andl
add
lds
mov
lret
das
sub
mov
mov
movsl
in
rcr
xchg
jecxz
sbb
xchg
std
cmp
cwtl
ja
add
gs
clc
jmp
lret
enter
add
fdivl
xchg
lds
fcmovnu
dec
ror
add
sub
or
aam
stos
jmp
es
stos
rorb
sahf
xchg
movsb
insl
leave
ljmp
sub
jne
mov
ljmp
jg
mov
aas
fldl
fisubs
sub
inc
fstl
movsl
clc
xchg
ret
jp
push
sbb
mov
in
sahf
xor
out
inc
cmp
or
add
inc
fimull
xor
adc
add
shll
loopne
cs
mov
rcrb
aam
aad
cmp
je
or
or
scas
cmp
push
mov
add
arpl
lock
add
cltd
bound
xchg
fistpl
fucom
daa
lods
mov
mov
fs
mov
push
inc
push
addr16
sarl
pop
pop
mov
jmp
mov
test
jne
lods
push
mov
jmp
jne
sbb
jmp
sbb
cld
subl
out
out
fsubrl
sbb
dec
push
adc
sub
and
jg
insb
sbb
jnp
cmc
push
jle
xchg
leave
in
or
and
ret
lock
jp
mov
pop
jae
pop
dec
push
mov
sbb
inc
cli
movsl
fiaddl
xchg
adc
adc
sub
xchg
loope
aas
inc
mov
mov
into
mov
data16
leave
aas
sbb
sti
sbb
loop
fadds
inc
fisttps
add
imul
sar
add
mov
int3
js
out
fwait
jno
ficomps
add
lds
cld
rorb
test
ss
cmp
mov
jbe
pop
lock
or
sbb
jns
daa
push
dec
sbb
jno
jg
jl
rorb
push
hlt
sbb
xor
inc
dec
mov
ljmp
test
sub
aaa
cmp
leave
call
mov
into
lods
push
pop
loope
ljmp
cmp
popa
fidivrl
mov
fisubrs
adc
das
or
sbb
scas
add
std
call
mov
pop
push
lea
out
pop
mov
xchg
fs
push
push
jmp
sub
cmpsb
xor
clc
mov
jg
test
mov
hlt
je
mov
push
and
pop
sbb
loop
jne
out
xchg
and
divl
mov
lret
call
mov
xchg
sbb
cmp
sahf
sub
and
lock
outsl
jb
in
jp
cmp
mov
mov
add
mov
icebp
repnz
jecxz
es
mov
cli
lea
xor
jbe
cmp
jmp
or
mov
xor
push
add
adc
jle
push
lret
lock
sahf
dec
add
pushf
cmc
lods
mov
mov
xlat
mov
dec
sub
popf
aaa
mov
cmp
mov
popl
loopne
stc
push
dec
ss
or
xchg
push
sti
les
inc
repz
sbb
jecxz
push
mov
fsubs
add
and
stos
lock
sub
aad
fistl
aas
push
sbb
dec
jnp
pushl
mov
mov
mov
call
inc
stc
jb
push
test
dec
outsb
hlt
mov
pop
jno
dec
inc
js
pop
inc
xchg
adc
das
or
pusha
mov
add
dec
and
xchg
shrl
mov
std
loopne
dec
cwtl
xor
movsl
mov
loopne
inc
pushf
aad
aaa
jle
mov
push
and
add
lock
pop
shlb
rclb
xor
adc
mov
adc
xchg
jecxz
inc
ljmp
ljmp
idivl
icebp
add
pmaxsw
add
dec
cltd
add
test
pusha
mov
fildl
fnstsw
sahf
clc
shrl
sbbb
sub
sarl
cmc
push
je
xchg
stos
loopne
out
test
xor
push
out
imul
aaa
out
test
or
mov
mov
jecxz
push
dec
and
test
aas
emms
xchg
push
dec
xlat
in
inc
mov
mov
fidivs
push
cli
inc
test
cli
insl
std
add
sub
rorl
xchg
sbb
mov
xchg
xchg
loopne
xchg
stos
shl
pop
rcr
addr16
cmpb
jne
sub
repnz
repz
cmpsl
dec
lock
adc
fnstenv
loope
xlat
xchg
aaa
xchg
push
jmp
in
scas
xor
pop
out
cmpsl
ljmp
out
push
push
adc
fdivr
insb
out
mov
mov
in
adc
in
iret
in
dec
ret
in
mov
push
inc
insb
mov
push
jle
pop
popf
fmull
add
fadds
add
fidivl
or
sbb
mov
imul
scas
mov
adc
mov
mov
dec
or
arpl
sub
inc
mov
or
jle
pop
aaa
and
push
or
lahf
add
stos
cmp
jecxz
faddp
dec
fadd
mov
jle
scas
stc
adc
arpl
pusha
add
jne
es
aam
sub
in
sbb
enter
mov
inc
cmp
js
fcompl
dec
out
adc
xor
mov
inc
adc
ja
test
clc
add
cmpsb
sub
dec
in
mov
jae
xor
hlt
jle
xchg
xchg
loope
out
sub
fcmove
cmp
dec
add
pop
movsl
je
push
and
xchg
insl
addb
sbb
push
fidivl
xor
dec
testl
outsl
sbb
pop
cmp
lcall
mov
xor
test
outsb
fcomi
mov
shll
jp
cs
stos
mov
cld
mov
jns
and
daa
pop
int
sbb
cmp
lds
cmpsl
cs
in
into
repz
mov
cmp
mov
aas
dec
outsl
push
fadd
loop
jmp
stc
insl
adc
fs
out
adc
test
ss
jecxz
cmp
sahf
in
out
adc
xor
subl
scas
in
cmc
notl
cmp
push
mov
pop
jno
test
and
imul
xor
aas
jmp
inc
lods
mov
xchg
mov
xchg
mov
stos
in
mov
xchg
sub
gs
shlb
xchg
shrl
push
pop
test
jno
fcomip
mov
lret
sti
adc
cmp
or
adc
xor
jmp
sub
aad
fistl
mov
adc
bnd
fnstenv
sahf
jecxz
cwtl
sahf
mov
enter
cli
call
add
and
xorl
rcr
data16
pop
adc
dec
inc
jmp
mov
sbb
jmp
hlt
pop
mov
mov
add
negb
mov
push
cmpsl
push
sti
outsl
mov
lods
dec
mov
jno
and
mov
mov
dec
lock
and
xchg
in
jne
or
sub
xchg
aam
pushf
lahf
ret
ret
es
test
xor
addr16
mov
mov
jo
daa
and
std
out
cmovge
sbb
int3
insb
cltd
cmp
xchg
test
mov
sbb
push
mov
mov
clc
or
int
js
dec
sbb
dec
rcll
inc
sbb
out
or
enter
pop
push
sarl
incl
sbb
xor
or
mov
out
add
into
shrl
ret
and
inc
cmp
testl
mov
add
or
mov
sarb
jns
mov
cmpsb
xchg
das
shll
dec
and
pop
jl
and
jp
add
add
mov
jnp
and
sbb
mov
mov
filds
cmp
jmp
mov
out
addl
subl
xchg
inc
mov
and
xchg
lret
push
jnp
sub
jle
pushf
adc
cltd
add
pusha
test
jo
icebp
sbb
call
jecxz
jae
addr16
push
inc
push
lret
sbbb
clc
dec
push
fisubrl
sub
push
cmp
xchg
push
scas
add
into
xchg
cwtl
pop
xchg
mov
or
test
sub
or
pop
ret
inc
inc
inc
aaa
or
stc
rcl
loop
int3
or
cs
add
aam
int3
dec
cmc
mov
fisubs
outsl
lds
jbe
mov
pusha
shll
rcrl
add
push
and
mov
sbb
xor
push
clc
scas
cmp
jp
jno
cmc
lds
aad
pop
or
push
mov
leave
dec
jo
push
cld
lahf
sub
xchg
push
fildll
pop
push
ret
dec
addb
inc
cmpsb
scas
mov
in
xchg
xchg
stos
enter
pop
inc
popf
clc
push
sub
dec
test
jg
cmp
xchg
xor
dec
rcrb
add
sbb
xchg
add
std
xor
out
ja
mov
out
pop
mov
add
push
mov
sub
je
mov
adc
scas
bound
imul
or
mov
xor
and
and
call
jge
sub
pop
or
lcall
mov
popa
test
and
fisubl
inc
inc
movb
and
loop
add
stc
and
mov
add
push
adc
push
xor
cmp
pop
das
sti
repz
repz
xor
cmpl
test
lcall
cmc
mov
cs
nop
sub
imul
stc
add
lock
lock
lods
jno
and
xor
add
loope
push
repnz
sti
shlb
stos
jbe
gs
lahf
pop
loopne
inc
inc
dec
hlt
mov
push
flds
add
jl
or
mov
xchg
and
sbb
pop
loopne
mov
sub
mov
ljmp
outsb
addr16
call
nop
add
pop
or
ss
addr16
cmp
jecxz
push
xchg
lea
dec
mov
shr
mov
xchg
push
orl
mov
fistl
jle
inc
xchg
cmp
arpl
enter
and
sub
mov
mul
inc
arpl
cs
cwtl
test
mov
mov
test
fdivr
pushf
fsubl
mov
ret
test
cmp
cmp
fcom
dec
pop
fildll
and
cmp
test
cmp
push
cmc
add
jno
loop
mov
ss
add
cmp
out
sbb
pop
pop
mov
decl
inc
mov
lods
cmp
cltd
jno
test
mov
mov
jl
lret
xor
clc
inc
inc
stc
xchg
xor
iret
dec
sub
pop
lret
stos
imul
xchg
rcr
push
push
pushf
pop
movsl
jmp
pushl
or
ss
in
frstor
jmp
and
ja
sahf
cli
dec
adc
scas
inc
iret
pop
hlt
or
xor
cmp
stc
push
inc
xor
add
jle
ljmp
in
or
xchg
jle
pushl
clc
mov
aaa
fdivs
jp
divw
inc
adc
mov
and
dec
add
xorb
add
pop
pop
push
jmp
jnp
imul
in
rorb
or
rcl
stos
mov
pop
lahf
insb
out
lret
outsb
pop
jle
or
add
inc
xchg
iret
mov
push
xchg
pop
pop
adc
orb
add
push
popf
mov
aad
jbe
adc
sbb
xchg
pop
xchg
sbb
xlat
cmp
mov
es
add
mov
mov
pop
data16
movsb
lahf
add
faddl
mov
bswap
xchg
inc
dec
je
or
je
fnstenv
mov
jmp
add
lcall
sub
fimuls
mov
or
aad
mov
sbb
out
inc
mov
into
cmp
movsb
mov
push
jb
adc
repz
jge
repnz
push
add
daa
dec
adc
addr16
out
jl
xor
int
aaa
push
popf
inc
mov
hlt
push
push
jo
movsl
pop
lahf
inc
adc
mov
dec
test
mov
in
sbb
cmpsb
xor
in
jle
pop
enter
pop
or
fucom
das
fsubrs
sub
clc
lods
cmp
insl
ret
inc
sbb
xor
and
aas
jmp
subb
and
xor
rcrb
jb
js
inc
imul
test
lret
push
adc
add
arpl
aad
mov
inc
sti
rorb
push
insl
mov
iret
lcall
cmp
and
pop
pop
push
jmp
and
and
cli
sub
cmp
jo
out
lret
xchg
sbb
dec
mov
pop
sahf
adc
jo
lret
mov
outsl
pcmpeqb
stc
fistpl
loop
cmpsb
fiadds
jne
push
dec
fstp
adc
sahf
out
stc
inc
cli
es
movsb
xor
xchg
cmp
call
or
xor
cmc
test
push
xor
shlb
sbb
push
adc
inc
push
add
outsl
data16
out
lods
pop
cmp
xlat
jo
je
and
jns
and
dec
popa
push
movsb
loop
loopne
mov
push
scas
incl
movsl
rcr
cmp
xchg
xchg
xchg
in
rcrb
xchg
arpl
sarb
jne
xchg
adc
xchg
scas
pushf
push
mov
cs
rcl
mov
sti
aas
sti
test
mov
je
pop
mov
xchg
jl
lret
cmp
xor
loope
sub
pop
dec
das
xchg
mov
mov
sub
inc
call
sbb
mov
in
cmp
bound
sbb
mulb
lret
arpl
xchg
cmpsl
dec
xor
in
icebp
pop
sub
cld
cmp
mov
xorb
xor
rcrb
in
sub
mov
xchg
ret
loopne
ds
jge
insl
jb
mov
sub
aam
mov
out
popa
cmp
push
mov
mov
test
xor
mov
or
sbb
push
jmp
push
ss
jbe
sub
xchg
xchg
sbb
jg
pop
jne
js
pop
jg
out
rolb
xchg
sbb
pop
push
ja
inc
push
dec
or
mov
dec
mov
in
pop
mov
test
add
dec
pop
push
inc
callw
or
scas
inc
fwait
imul
push
jecxz
movsb
add
iret
xchg
out
jle
mov
jge
es
out
in
jg
xchg
int
dec
mov
std
adc
repnz
jp
jge
mov
inc
jb
jb
and
out
aam
imul
js
mov
pop
jmp
inc
jle
andl
sub
or
dec
push
adc
mov
and
insb
das
inc
cmp
fnstenv
jle
jb
in
mov
mov
sub
ret
scas
pop
push
scas
rolb
jae
add
popf
fdivrl
mov
imulb
fcmove
xchg
popa
xchg
mov
imul
sbb
movsb
adc
dec
jno
adc
jo
lret
repnz
adc
sbb
xchg
arpl
and
dec
push
lea
out
dec
enter
xchg
or
push
add
int3
and
pop
pop
push
rcr
fisubrs
int
shl
test
xor
cmp
mov
push
roll
inc
and
jge
pop
xor
daa
dec
mov
cmp
sti
jecxz
pop
stc
dec
dec
cmp
jno
orb
jo
aas
sub
test
mov
inc
test
hlt
cmpsb
mov
insl
in
gs
enter
pop
sarb
ljmp
sub
inc
mov
in
cmp
dec
loop
movsl
mov
sbb
cmpb
add
dec
ret
daa
xor
xchg
cmp
js
aaa
lret
pop
mov
pop
lcall
fcmovnu
dec
stc
imul
add
lahf
adc
fs
jg
aas
lds
cltd
js
mov
fwait
pop
and
dec
push
out
enter
hlt
dec
sub
pop
fxch
subb
lcall
andl
mov
incl
pop
out
movl
xchg
fcoms
sbb
aas
ss
push
fmul
pop
xchg
out
jnp
cli
pop
or
xor
cld
add
js
ror
pop
pusha
cmc
dec
add
xor
addr16
into
jle
adc
fcoms
lods
int
add
lret
inc
data16
mov
aas
les
mov
pushf
xlat
sub
ss
mov
in
gs
xor
cltd
gs
mov
loopne
jecxz
dec
mov
roll
rcr
jno
pop
xchg
inc
enter
enter
pusha
sbb
iret
jp
mov
out
pop
sub
ficoml
pusha
aam
pushf
adc
inc
jne
jge
xchg
insl
pop
notb
lcall
dec
push
lods
pop
je
shr
jecxz
aam
into
xor
lea
jle
aas
in
lret
js
xorl
jo
fucomi
jp
pop
std
lds
xchg
shll
add
or
xchg
mov
loopne
and
push
jmp
push
test
std
jl
inc
cwtl
push
cmp
mov
xor
cld
repnz
add
mov
dec
mov
mov
cmp
shr
popf
jb
push
add
aam
std
es
es
pop
push
pop
dec
and
mov
filds
mov
dec
sbb
lahf
sbb
mov
and
into
add
punpckhdq
sbb
das
or
jne
mov
push
stc
aad
fstpl
addl
cmc
xchg
out
sbb
dec
jge
and
sti
out
xor
adc
jmp
loope
shrl
xor
stos
les
out
adc
dec
mov
mov
lret
dec
cli
jle
inc
std
or
add
push
xchg
inc
add
ljmp
bound
or
in
inc
xchg
pop
test
inc
shrb
pop
lods
and
jp
dec
les
popf
or
scas
pop
sbb
aas
dec
jne
ljmp
pop
mov
xchg
xorl
mov
xchg
adc
aam
xor
out
or
int
add
shrl
dec
lods
insb
lcall
jle
int3
lret
in
loop
pusha
push
idivl
popa
push
cli
ret
loopne
lock
jae
hlt
notl
mov
jl
add
mov
inc
jne
icebp
fiaddl
cmpl
inc
xchg
imul
push
push
xchg
pop
or
sub
pop
repnz
subb
ljmp
push
sub
or
push
push
aaa
pop
mov
lds
add
pop
xchg
dec
lock
sbb
adc
repz
add
push
adc
and
stos
stos
sbb
daa
dec
fistl
cmp
dec
jno
xor
jl
xchg
cmovnp
into
sub
or
push
lahf
test
sbb
mov
mov
push
and
stos
inc
aaa
sbb
cmpsb
cmp
or
push
adc
pushl
inc
loope
pop
out
sub
stos
cmp
fisubl
sbb
movsl
cltd
pop
scas
or
int3
sbb
mov
sti
repz
xor
mov
js
mov
ret
lcall
xor
cmc
dec
adc
inc
inc
dec
outsb
addr16
adc
aas
jge
jg
cs
mov
adc
mov
movsl
mov
and
jmp
icebp
cmp
int
add
shl
out
inc
mov
rorl
mov
cwtl
dec
sbb
jl
test
rcrl
outsl
int
and
dec
mov
movsb
sub
inc
dec
push
ss
xor
cmp
mov
out
orl
hlt
push
xchg
cmp
int
or
fcomi
into
cmp
xor
or
pop
in
cs
adc
jno
daa
push
xchg
jnp
frstor
pop
mov
mov
jb
sub
lret
cmp
in
dec
mov
sar
adc
gs
fucom
and
dec
adc
sbb
into
sub
popf
inc
mov
xchg
imul
sbb
or
fcmovb
xor
jbe
fistpl
bound
mov
sub
shrb
mov
or
aas
cmp
aaa
jb
imul
dec
into
inc
cmpsb
je
cltd
fninit
mov
xor
roll
lret
jmp
std
call
xor
or
and
fistpl
push
sub
imul
mov
faddp
mov
and
cltd
cmp
mov
xchg
cwtl
fsts
mov
or
inc
lret
bound
test
mov
inc
mov
rorl
aam
jo
ret
xchg
fbld
cli
inc
or
inc
mov
std
xchg
push
jge
ljmp
movsl
lods
or
fidivrl
cld
pop
ds
imul
repnz
mov
and
out
mov
add
xchg
sbb
int
shr
cmp
pop
lret
dec
ja
cmp
jns
cmpsb
push
push
sub
dec
mov
and
jp
int3
sbb
xor
mov
mov
repnz
xchg
dec
and
jl
dec
in
ljmp
pusha
es
fwait
leave
jbe
push
sub
add
add
or
je
and
pusha
call
pushf
sbb
pop
push
xchg
aaa
jp
ds
adc
enter
push
mov
or
mov
lock
xlat
xchg
push
out
push
jmp
fdivrl
and
ret
out
or
sub
adc
push
mov
push
insb
add
lret
je
and
lahf
xor
iret
rcrb
ret
pop
pop
aad
inc
mov
push
sbb
dec
stc
jnp
sub
push
mov
hlt
xchg
cld
fidivl
cmp
sbb
mov
cmp
push
fsubs
fidivrl
pop
out
ljmp
cmp
mov
or
in
and
fiadds
or
pop
movsb
add
push
or
lds
jb
sub
scas
push
mov
and
pop
cmpsb
movsb
sub
popf
push
pop
pop
xor
loop
jge
daa
dec
test
xchg
repz
jno
nop
lcall
sahf
push
push
inc
add
jo
mov
lahf
movsb
ffree
push
sub
leave
push
out
enter
loop
cmpsb
mov
mov
out
pop
ds
push
jmp
loope
push
in
sub
pop
dec
cmp
or
mov
adc
mov
xor
loop
sbb
out
and
jno
imul
push
lods
pop
push
xchg
pop
js
xlat
jle
mov
das
lcall
fsubl
cmpsl
test
ret
dec
xor
sbb
aas
jg
and
mov
jle
mov
push
jecxz
pusha
mov
cmpsl
int
sti
sub
movsb
iret
mov
lods
out
or
lret
mov
test
sbb
mov
cli
inc
insb
test
cmp
xchg
sub
sub
in
jb
stc
add
repnz
in
adc
imul
inc
sbb
loope
mov
mov
fimuls
push
push
hlt
into
push
int3
fidivrl
jl
or
mov
imul
fnstsw
data16
adc
lods
or
sbb
xlat
sub
mov
adc
sti
mov
pop
gs
shlb
dec
jo
jmp
add
add
xchg
cmp
mov
gs
mov
add
stos
pop
adc
lds
jmp
es
out
adc
fcoms
xchg
jb
dec
inc
jnp
je
mov
jecxz
push
rol
aam
push
lea
shr
mov
std
mov
sub
andl
mov
pop
inc
fldl
inc
cmp
mov
inc
and
mov
dec
add
and
xor
roll
ss
out
fidivl
std
lret
cwtl
xchg
xchg
mov
loopne
xor
dec
dec
outsb
lret
rorl
mov
adc
adc
or
mov
adc
lods
es
ja
aam
ss
jmp
jge
pop
insl
daa
add
dec
sbb
pop
xchg
pop
js
ljmp
je
jne
dec
mov
pop
arpl
mov
sub
jne
in
jne
cltd
dec
in
jl
mov
push
push
jg
addr16
jecxz
xor
repz
ret
sbb
dec
pop
jbe
mov
sti
xchg
xchg
in
frstor
push
or
xor
and
inc
mov
test
cmc
loope
dec
mov
test
hlt
inc
ja
xor
lods
inc
sub
fwait
clc
iret
lea
int3
test
add
xor
out
sbb
bound
fstpt
js
in
into
or
fcomip
cmpsl
mov
and
jp
cli
pop
mov
ds
repz
sbb
nop
lahf
dec
jne
mov
mov
ljmp
sahf
ljmp
xchg
jo
push
jl
out
js
sub
stc
or
push
int
fs
xchg
jge
jo
or
sbb
jle
pop
add
mov
clc
lret
pop
lret
inc
dec
pop
sti
pop
xchg
mov
push
adc
mov
jae
add
out
mov
sbb
add
pop
scas
hlt
ja
push
pop
push
cs
pop
pop
mov
stos
andl
or
arpl
pop
inc
push
mov
or
pusha
in
out
aaa
popf
push
cmc
or
out
add
sbb
cwtl
pop
in
jmp
xchg
rolb
scas
xor
xchg
and
dec
ja
stos
push
mov
push
scas
gs
adc
jge
hlt
pushf
sbb
ja
daa
dec
mov
cmp
push
and
int3
adc
fimuls
dec
mov
sub
push
xor
ret
lahf
ret
aam
push
sarl
push
mov
in
insl
cmpsb
ds
loope
sbb
sbb
pop
ja
pop
jge
or
dec
icebp
loope
insb
call
cmp
filds
mov
adc
sahf
sbbb
push
push
je
push
push
xor
jmp
cmp
xor
xchg
loopne
xchg
addr16
js
test
pop
xor
mov
fmull
call
outsb
sub
push
xor
cmc
pop
aaa
jg
sbb
mov
jmp
jmp
outsl
or
dec
mov
jg
imull
lret
pop
shll
mov
mov
sahf
popf
add
subb
xor
jg
push
stc
mov
push
fs
ret
mov
adcl
jo
sub
push
repnz
xchg
mov
in
in
lds
mov
mov
scas
or
fwait
ja
adc
test
push
mov
add
cmp
lods
hlt
mov
mov
sub
jmp
icebp
loopne
in
and
dec
xor
pop
xchg
gs
loopne
gs
iret
xchg
das
inc
lods
fsts
loope
les
test
xchg
icebp
adc
in
or
cmpb
xor
sbbb
repz
and
jmp
ds
aad
shlb
dec
pop
das
aas
ja
mov
aad
decl
pop
add
sbb
shlb
xlat
clc
lea
push
mov
dec
testl
sbb
out
jle
sub
testl
test
mov
add
and
divb
mov
mov
dec
ljmp
xchg
cld
jae
ds
inc
cmp
pop
mov
pop
xor
cmp
shlb
gs
test
dec
ret
sbb
dec
es
push
insl
push
xor
xchg
pushf
testl
xchg
out
lods
loopne
outsl
mov
inc
pop
shll
lahf
aad
ja
data16
test
test
xor
mov
clc
outsb
push
faddl
dec
sti
jb
lcall
stos
push
or
xchg
xchg
xor
insb
push
jecxz
sub
ds
js
lret
or
ds
clc
testb
ss
test
outsb
mov
int3
movsb
fimull
fidivs
inc
ret
or
out
lea
outsl
mov
inc
add
nop
int
cli
int3
xor
xchg
push
jns
icebp
into
in
xchg
push
xchg
or
and
cmp
pop
fisubs
stos
mov
jp
loop
mov
ficompl
push
cmp
dec
jae
inc
jne
repnz
mov
add
adc
sbb
jns
out
pop
shrl
hlt
xchg
mov
dec
mov
stc
xlat
mov
insb
fcomi
ret
jnp
xor
jle
xor
ret
inc
sti
pusha
es
nop
iret
jle
pop
ret
loopne
xor
jae
in
push
shrl
loopne
popf
cltd
lret
shl
ficompl
pop
pop
sbb
and
repz
scas
push
je
push
data16
mov
mov
repnz
mull
arpl
ret
inc
pop
xor
fisttpl
aaa
pop
in
or
daa
gs
xchg
ret
int3
rcrb
int
adc
fidivs
out
push
lds
shlb
scas
adc
and
shlb
movsb
inc
pop
pop
push
std
mull
push
jno
jge
out
negl
lods
mulb
dec
enter
call
jl
bound
push
or
int
xlat
jmp
jo
jno
lahf
loop
pop
push
roll
test
test
push
inc
in
bound
add
push
enter
pop
mov
data16
mov
les
cmp
repnz
movsl
movsl
ficoms
mov
rolb
and
mov
xor
jnp
mov
push
and
enter
push
fstpl
lods
paddusb
dec
je
push
mov
sub
shl
push
jg
adc
push
mov
shll
movsb
sbb
cli
dec
adc
es
sub
into
test
dec
sub
rorl
push
aas
inc
mov
test
mov
outsl
push
xchg
adc
outsb
sub
fs
jb
adc
out
les
addr16
mov
stos
fdivr
and
cmc
in
cmp
cmp
in
dec
cmc
push
sahf
sub
push
rclb
add
sbb
cmp
add
mov
data16
subl
stos
or
mov
in
nop
hlt
cwtl
sti
in
mov
gs
or
pop
dec
cs
addl
pusha
in
les
mov
xchg
mov
inc
sbb
mov
push
loop
hlt
in
adc
cld
jmp
sbb
or
sub
mov
add
push
lea
dec
xor
cmc
je
jmp
push
fisubrl
mov
call
cmp
dec
mov
stos
xor
sub
fldt
les
mov
push
inc
outsl
cmp
mov
mov
bound
movsb
pop
daa
divb
std
sbb
das
cwtl
or
xor
xchg
cmc
test
mov
cld
sahf
jge
lret
scas
mov
mov
dec
scas
mov
adc
lock
pop
repnz
stos
sarb
lea
ljmp
ret
stos
pushf
dec
sbbl
cmc
inc
pusha
dec
adc
mov
out
xchg
loopne
scas
mov
out
mov
gs
test
sub
sbb
out
xor
adc
test
push
outsl
push
add
iret
ss
test
mov
mov
push
pop
int3
test
add
jns
xchg
jnp
popf
push
mov
mov
xor
in
xchg
xor
sbb
xchg
jg
dec
pop
out
test
jnp
ja
cwtl
sbb
ljmpw
or
nop
test
push
adc
mov
xor
add
mov
fnstenv
push
pop
jle
jns
push
repz
test
xchg
pop
adc
mov
cs
mov
cltd
movsb
push
addr16
jge
mov
cltd
cmp
dec
out
and
push
iret
push
jne
mov
lcall
xchg
mov
xchg
cmp
mov
insb
sub
out
mov
push
dec
lock
xchg
ficoml
jnp
or
jle
mov
adc
dec
dec
fstpl
ljmp
pop
push
jae
adc
push
xchg
xor
std
mov
inc
jno
ret
fimull
inc
xchg
addr16
sbb
adc
sub
push
lods
frstor
mov
push
dec
imul
sahf
stos
lods
arpl
xchg
inc
pop
or
or
push
xor
sbb
cwtl
or
sbb
add
push
int3
mov
add
or
repz
sarb
icebp
fdivrl
mov
cmp
aas
pop
movsb
int
adc
into
out
jbe
out
jge
int
sbb
mov
dec
xchg
js
sub
jnp
jp
adc
or
push
loope
out
push
lock
js
push
add
xor
test
push
xchg
push
inc
jae
mov
in
call
in
in
sti
lods
jp
sub
gs
push
xchg
sub
xor
add
movsl
lods
mov
adc
rolb
add
aam
xor
mov
mov
leave
mov
mov
xor
jmp
fsubl
imul
rcll
stos
mov
sub
add
mov
mov
mull
lea
push
std
adc
lea
xchg
adc
add
shll
sbb
cwtl
sahf
jecxz
and
cmc
mov
and
mov
loop
loopnew
and
xor
adc
fidivrs
jbe
cmp
sub
sbb
pop
into
aaa
xor
jns
pop
pop
cltd
or
xchg
jecxz
das
or
das
mov
xchg
mov
aam
adc
push
add
ljmp
insb
sbb
dec
sub
leave
add
sti
pop
loop
fwait
add
lahf
call
fneni(8087
mov
sti
dec
lea
flds
xchg
repz
xchg
ja
pushf
sbb
negb
pop
pop
cmpsl
xchg
enter
and
mov
mov
sarb
sarl
mov
push
jb
sbb
dec
stos
ljmp
lock
inc
lea
dec
ret
mov
jne
mov
jp
subl
sub
fcmovnu
xchg
js
sub
push
inc
aaa
mov
inc
mov
das
loope
jmp
sub
cmpb
clc
dec
shl
push
fcomi
mov
sub
mov
push
add
lds
mov
xor
cld
leave
rorl
mov
push
fnstenv
and
xor
sub
stc
adc
xor
rorl
es
dec
lret
insl
fdivrl
dec
or
jmp
ljmp
fisubrs
inc
jne
mov
les
aad
add
inc
cmpsl
dec
add
gs
push
push
enter
mov
in
jbe
jo
pop
sbb
lea
pop
stos
hlt
push
leave
xchg
ret
push
cltd
pusha
addr16
jl
pop
xor
mov
xor
inc
test
jl
dec
sarl
push
sbb
or
inc
lock
test
push
mov
cmp
jno
ret
out
mov
popf
pop
jns
iret
in
adc
cmpsl
fwait
movzbl
lcall
test
leave
jp
int3
arpl
je
rorl
cmp
jne
in
xor
clc
fcom
xchg
mov
cmp
cmp
sbb
jle
sub
ljmp
stos
fisttps
and
mov
cli
jle
aad
in
jnp
pusha
pop
nop
sub
mov
ja
iret
pop
sbb
test
push
pop
sub
popf
mov
mov
lock
pop
fiaddl
sub
xchg
mov
fidivrl
scas
sbb
mov
pop
mov
movsb
jnp
leave
in
in
jmp
pop
addb
orl
ficoml
adc
idiv
std
int3
cmpsb
sbb
pop
jno
lret
mov
lds
rclb
add
hlt
jne
cmp
sub
movsb
pop
inc
xchg
push
fwait
call
inc
jge
nop
mov
daa
dec
push
repnz
or
push
insb
sarl
mov
outsl
xor
rclb
gs
shll
and
ja
lret
test
sbb
cmpsb
dec
mov
iret
in
aam
or
mov
push
mov
loope
xchg
sub
jp
cmp
ljmp
sbb
push
and
in
push
je
addl
xor
dec
xor
std
addr16
lock
pop
mov
jmp
push
je
loop
dec
insl
ds
outsb
push
nop
fstl
xchg
adc
arpl
adc
sahf
mov
add
int
mov
inc
imull
movsb
mov
cmp
loope
xorl
jae
xchg
rolb
in
jge
sub
fsub
cmp
pop
stc
fsubrl
adc
stc
pop
ss
int3
push
cmp
xor
out
pop
es
mov
xor
mov
movsl
or
in
pop
into
stos
adc
xor
fstpt
imul
in
lret
add
pusha
data16
lods
test
fwait
aas
xlat
sub
sub
gs
xchg
cmp
inc
jg
gs
mov
sub
or
and
fnstcw
adc
leave
xchg
cmp
sbb
xor
add
scas
and
arpl
push
xchg
pushf
pop
or
sub
iret
divb
aad
int3
sbb
push
adc
dec
and
xchg
je
outsb
mov
js
loopne
or
call
mov
std
fiaddl
pushf
add
fisttpl
push
stos
pop
iret
jnp
inc
mov
int3
das
sarb
mov
sahf
loope
roll
xchg
idiv
scas
cmpsl
std
xchg
inc
mov
jae
cmp
insb
cld
hlt
std
popa
lret
out
mov
push
mov
lock
xor
icebp
sub
pop
test
add
jnp
mov
enter
xchg
aad
and
lods
and
mov
stos
sti
push
and
jo
mov
movsb
xor
add
jb
cltd
sub
fiaddl
push
pusha
push
mov
cmp
clc
pop
mov
xchg
sbb
sbb
inc
rcrl
jp
stos
jecxz
pushf
out
xchg
xchg
or
js
je
sar
sbb
or
lods
or
nop
mov
add
adc
icebp
xor
int
pop
ja
or
dec
lods
xchg
cmpsb
inc
xchg
or
dec
cmp
mov
cs
pop
pop
jl
inc
dec
add
imul
xor
in
rcrl
mov
cmp
mov
pmaxub
cmp
mov
test
dec
sbb
dec
sbb
sbb
mov
or
fists
pop
notb
cmc
inc
adc
rorl
lea
inc
out
mov
imul
mov
push
leave
les
and
jp
insb
sbb
call
jle
out
in
sub
pusha
imul
xchg
iret
fwait
cmp
ret
jno
xlat
jmp
inc
fisubl
push
sbb
and
dec
imul
mov
inc
xchg
adc
je
imul
push
push
cmp
call
mov
mul
adc
pop
mov
hlt
xor
mov
inc
bound
or
dec
fistps
or
and
add
fldt
mov
adcb
mov
cs
scas
mov
and
mov
movsb
jecxz
nop
push
ljmp
jge
aaa
rcrb
fisubrs
xchg
daa
inc
lea
jno
jge
jl
mov
dec
push
mov
cmp
cs
lahf
aas
fldcw
test
out
ds
xchg
mov
dec
in
mov
clc
enter
pop
jns
mov
in
loope
inc
js
push
xchg
sub
scas
xchg
jno
cmp
push
adc
mov
jl
addb
sbb
dec
imul
or
pop
pop
pushf
push
js
push
mov
lcall
loop
idivl
push
outsb
mov
pop
outsl
shlb
mov
imul
mov
mov
mov
and
mov
data16
stos
add
push
add
int
and
sub
add
mov
rcl
fimull
fiaddl
sub
add
sbbb
jmp
loop
push
xchg
xchg
arpl
out
test
push
jmp
stc
cmp
in
enter
jns
cli
mov
push
cmp
sbb
cmpl
cmc
mov
in
pop
cmpsl
mov
mov
adc
ret
aad
push
mov
lods
nop
jns
mov
push
push
push
xchg
mov
shll
ljmp
or
loopne
jg
dec
dec
rcrl
es
jnp
repnz
fisttps
sbb
iret
outsl
stos
xchg
std
std
add
insb
dec
adc
cs
pop
or
xchg
popf
pushf
ret
jmp
inc
mov
xor
enter
dec
nop
mov
pop
test
and
testl
cs
jecxz
lods
dec
jecxz
lea
int
or
mov
xor
sbbl
leave
int3
xchg
pop
jb
jno
inc
sub
inc
shlb
das
lahf
das
mov
mov
sub
jbe
xchg
cmovo
cmp
mov
or
inc
mov
std
icebp
adc
cld
pop
cld
popf
lret
cld
cmpsb
jb
cmpsb
inc
jnp
jle
lock
shlb
flds
pop
push
xchg
es
sti
insl
stos
mov
add
xchg
cwtl
sbb
ljmp
fisubrl
cmp
sbb
or
lsl
test
cltd
pusha
ljmp
arpl
push
dec
cmp
mov
flds
sbb
cmc
shl
leave
call
stos
rcl
mov
ljmp
push
dec
repnz
mov
aas
into
or
pushf
jae
mov
and
dec
pop
test
sbb
ja
mov
inc
push
sbb
or
insl
adc
sti
sbb
roll
cmpsl
enter
jl
bound
cmp
in
jecxz
xchg
inc
jp
mov
out
dec
mov
lret
cmpsb
sbb
xchg
mov
mov
mov
mov
cmp
jne
jne
mov
inc
mov
xchg
dec
adc
jmp
sahf
dec
movl
add
ja
loopne
add
cmc
popf
stos
lds
call
jle
jmp
in
inc
addr16
xchg
pop
pop
iret
cli
dec
sbb
scas
addl
in
mov
xor
sbb
adc
call
inc
out
jl
fisubl
mov
sbb
loop
imul
mov
fwait
push
adc
dec
jns
ret
repnz
jp
leave
ror
jg
jb
xchg
shlb
jbe
or
lea
or
je
jl
cmp
iret
push
push
faddp
inc
je
mov
add
mov
and
jmp
cmp
mov
pushf
jbe
mov
sbb
dec
add
jno
mov
jl
or
dec
mov
and
cwtl
shll
loop
lahf
pop
in
push
sbb
fsubrs
inc
and
test
popf
imul
repz
mov
int3
psraw
pmaddwd
sbbl
movsl
sarl
and
imul
cld
mov
add
scas
adc
dec
push
mov
scas
mov
pop
jecxz,pt
js
cwtl
xchg
pop
scas
test
lcall
xchg
mov
or
outsb
sbb
xlat
adc
cmp
in
jg
sub
mov
pop
pop
mov
insl
mov
dec
and
adc
ret
sub
mov
and
mov
outsl
sbb
imul
test
inc
scas
outsl
out
test
pop
xor
fs
fwait
adc
bound
shlb
cmp
cmpsl
or
dec
cli
icebp
in
xor
adc
cmp
mov
or
dec
sbb
jo
push
cmc
test
xor
dec
pop
outsl
and
imul
in
or
fsubs
ja
xchg
mov
loope
cmpsl
mov
sbb
in
cmp
jmp
decb
mov
gs
ljmp
aad
inc
cmp
xor
ljmp
xchg
rcrb
sbb
cmpsl
add
lods
push
push
pop
ror
adc
mull
jmp
xor
aad
adc
nop
xchg
jge
aas
xchg
cmpsl
sub
lcall
and
and
lea
gs
xchg
repz
sbb
dec
jb
pop
pop
pop
adc
jg
inc
fldt
clc
mov
cwtl
jle
and
mov
shl
rcl
testb
add
cmpsl
inc
inc
dec
mov
ljmp
lret
imul
mov
rorb
lret
sub
xchg
aam
ret
out
cmp
int3
iret
insl
xchg
jns
dec
cld
imul
xlat
das
mov
popa
or
lods
mull
cmpsb
mov
inc
mov
sub
bound
add
xchg
cltd
xchg
mov
xchg
adc
mov
push
pop
mov
xchg
mov
push
rorl
call
stos
shll
xchg
xchg
xchg
xor
sub
lods
lcall
sub
imul
jp
pop
shl
xchg
sub
dec
testb
ja
push
dec
xchg
mov
mov
mov
sti
arpl
sahf
sbb
add
ret
out
push
repnz
jns
jmp
lods
xchg
xchg
iret
lods
mov
pop
adc
test
movsl
jge
jp
repnz
inc
add
cmc
adc
mov
inc
out
dec
loop
in
push
mov
fists
sub
jecxz
iret
xchg
imul
adc
jg
inc
test
jns
lock
lea
mov
add
cli
jle
in
in
mov
adc
pop
popa
sbb
ret
pop
inc
or
lock
jae
jae
push
mov
outsb
dec
mov
insl
jno
ficompl
je
xchg
ret
xor
enter
scas
scas
inc
scas
insl
push
leave
mov
add
popa
outsl
cmp
popf
inc
daa
leave
dec
scas
push
hlt
lret
arpl
sub
or
inc
shrb
or
sbb
int3
addr16
pop
cmc
int
data16
std
lds
out
fwait
shr
fwait
scas
insl
mov
cmp
mov
lds
iret
stc
jbe
inc
test
sbb
daa
inc
xchg
js
clc
pop
cltd
jno
or
jl
inc
mov
and
push
jnp
je
mov
xor
jge
pop
push
lock
test
jl
mov
rclb
std
std
in
test
cmp
stc
enter
ljmp
adc
inc
test
or
or
cmpl
enter
hlt
xchg
xchg
cmpsl
xor
xor
xor
pop
test
jb
xor
js
mov
mov
cmpsb
cmp
fmull
sti
sub
in
es
pop
aam
jg
cmp
mov
sbb
jge
cmp
leave
xchg
pop
push
or
int
mov
cs
add
lret
and
mov
mov
sub
push
test
fsubrs
dec
nop
subb
xchg
loop
test
fs
jl
adc
lea
out
out
inc
inc
cli
and
lcall
daa
rorb
pop
daa
cmp
push
dec
test
xor
aas
aas
adc
jg
adc
imul
xchg
mov
push
xlat
out
lahf
sub
mov
mov
cmpsl
cmp
sti
push
cltd
cs
sub
cld
das
loopne
test
or
lahf
inc
dec
sbb
fldenv
xlat
cmc
ljmp
subl
cmp
dec
pop
sub
icebp
pop
jae
cmp
outsl
jge
pushf
sbb
cs
dec
adc
in
dec
les
xor
and
dec
xchg
in
je
stos
inc
jecxz
loope
jmp
imul
idiv
and
xchg
xor
pop
fistl
xor
inc
push
aaa
repz
idivb
mov
jbe
mov
dec
cmpsb
and
xchg
mov
das
fdivl
std
pop
jge
cwtl
mov
mov
xchg
test
icebp
roll
fidivl
mov
mov
data16
lock
pop
add
lea
pop
dec
daa
sub
mov
adc
xor
or
push
dec
ljmp
imul
xor
mov
shl
add
sbb
fcom
cmp
add
push
aam
xchg
js
or
rorb
xchg
sbb
les
mov
or
xchg
fisubrs
push
add
fs
mov
sbb
xor
inc
jl
rolb
push
dec
pop
scas
mov
imul
pop
pusha
dec
test
sbb
fwait
inc
mov
push
inc
pop
lea
fstpl
xor
bound
and
jns
cmp
roll
jecxz
insb
mov
mov
mov
inc
mov
movsb
gs
adc
and
xor
jne
popa
mov
call
push
xchg
out
adc
jmp
cmpl
test
sub
add
push
xchg
aas
stos
stos
lcall
pop
inc
idivb
enter
sarb
in
xchg
or
iret
mov
cmp
inc
sti
ja
jae
hlt
sbb
gs
xor
mov
in
jmp
or
outsb
cmp
jecxz
scas
test
push
jecxz
fdivl
lods
repnz
xor
shll
arpl
cltd
or
mov
sbb
inc
add
test
push
adc
sub
test
pop
add
and
pop
cmp
mov
stc
mov
jge
orl
bswap
push
daa
inc
pop
js
sub
push
or
dec
xchg
add
xor
aas
xchg
daa
lahf
pushf
push
dec
push
ret
and
test
inc
jg
inc
cmpsl
sbb
imul
hlt
xor
les
mov
loope
sbb
sub
fcoms
cmp
mov
loope
jecxz
lock
in
jp
sub
push
aad
pop
mov
xor
sbb
hlt
pop
lods
mov
lcall
jp
clc
lahf
fsubrl
test
out
outsb
loop
cwtl
adc
repnz
jg
dec
cs
inc
and
enter
fadd
filds
or
push
nop
mov
sub
mull
add
rcll
clc
sbb
negb
cwtl
lcall
movsb
ljmp
mov
loope
adc
dec
sbb
cmp
sbb
jmp
cli
push
and
xor
insb
into
ret
ss
out
adc
or
pop
add
xchg
fdivs
popa
imul
cmp
data16
enter
xor
and
out
lods
mov
adc
sbb
push
test
dec
gs
mov
xchg
movsl
adc
or
inc
pop
sub
xchg
iret
cmc
les
fcmovu
repz
mov
inc
mov
sbb
sbb
negl
es
adc
daa
jno
ret
adc
jmp
push
adc
pop
clc
and
xor
ljmp
dec
lea
popf
cmp
push
pop
je
addr16
cmp
pop
in
mov
lea
test
mov
fwait
adc
sbbl
fsub
pop
pop
pop
mov
ficoml
inc
adc
fildll
cmp
shll
push
jb
and
iret
push
sarl
pop
testb
std
add
cwtl
insb
in
cmpsl
inc
rolb
les
icebp
cwtl
xchg
mov
mov
cmpb
outsl
dec
lock
mov
pop
lods
icebp
adc
or
sub
mov
es
mov
sahf
dec
repnz
mov
mov
xchg
and
fisttpl
aaa
aam
and
fdivrl
mov
test
cltd
add
sbb
mov
xchg
popf
push
xchg
ret
test
clc
or
xchg
jb
sbb
inc
std
sar
idivl
lahf
mov
or
push
loopne
sub
xchg
cli
mov
or
fisubrs
out
adc
mov
or
mov
test
lock
ja
and
dec
js
fwait
inc
jecxz
lahf
or
mov
fcompl
in
mov
add
inc
and
adc
out
into
inc
lods
jns
xlat
in
adc
inc
sub
test
lods
pop
sti
inc
call
jp
in
mov
or
mov
add
ds
divb
jl
xchg
pop
xor
jmp
incl
or
jmp
push
inc
pop
sub
rcrl
jecxz
push
mov
and
imul
mov
jle
pusha
mov
in
fadds
arpl
sub
call
mov
inc
jae
mov
mov
mov
movsb
mov
imul
fidivrl
jo
jno
arpl
and
scas
or
sbb
adc
sbb
cmp
hlt
pusha
and
mov
outsb
hlt
gs
cmp
out
xchg
dec
orb
sahf
pop
add
loope
int3
cmp
xchg
fisubrs
into
rcrb
inc
scas
sub
jne
bound
movsb
xor
push
ret
jge
mov
pusha
daa
inc
test
pusha
jno
sub
jl
cmp
add
push
inc
scas
sbb
jo
or
lahf
mov
add
push
adc
mov
int
lret
cmpsb
push
bound
in
push
mov
out
cs
pop
jne
popf
push
mov
fisubrl
inc
jbe
push
dec
ds
rcl
pusha
cltd
and
push
jns
dec
loop
orb
lcall
es
clc
mov
lods
js
mov
lcall
stos
fsubl
xchg
and
inc
pop
adc
int
xor
mov
addl
popf
sti
mov
pop
jb
out
test
int
scas
std
sub
lret
sbb
jge,pn
mov
jl
sbb
or
test
outsl
subl
pop
int
stc
outsl
cmpsb
inc
adc
mov
cltd
mov
cmp
fcoms
out
sbb
xor
insl
cmp
test
cmp
fistpll
cmc
fldcw
out
xor
inc
pop
and
jmp
imul
popa
or
adc
xchg
xlat
clc
lods
sub
out
mov
ljmp
fists
mov
jge
and
mov
or
gs
jle
loopne
fisubrl
sub
inc
jb
cmp
les
sbb
dec
xchg
or
push
sbb
pop
mov
xor
pop
xlat
adc
addr16
repnz
aad
ljmp
outsl
movsl
dec
jb
in
adc
push
test
daa
jecxz
and
fisttpl
cmc
fldl
mov
lret
xor
add
jae
inc
popa
rorb
sbb
push
mov
mov
pop
mov
int
cmp
dec
sub
std
test
mov
cmpsl
inc
loope
mov
outsl
inc
je
lret
cmp
lret
mov
mov
mov
fstl
pop
lret
mov
sar
add
stos
dec
clc
aam
idivl
sbb
inc
mov
dec
xchg
xchg
xor
popa
dec
pusha
push
lods
cmp
outsl
mov
pop
insb
mov
mov
jg
inc
add
mov
dec
mov
mov
push
pop
ffreep
clc
inc
out
xchg
adc
out
inc
rcll
jno
jns
subb
ror
xchg
insb
cmp
push
mov
xchg
test
bound
or
mov
cmp
mov
adc
dec
dec
sub
jo
les
filds
mov
lahf
imul
arpl
adc
out
repnz
lahf
jns
imul
andl
mov
mov
xchg
addr16
jp
imul
mov
je
mov
jne
cmp
jle
dec
fbstp
out
jmp
lret
sbbl
out
es
int3
lds
stos
xchg
jnp
and
add
jnp
jo
jle
mov
jge
pusha
fstpt
iret
jbe
sbb
sti
ret
popf
pop
ljmp
jae
les
mov
cmpb
data16
fidivl
adc
sbb
loopne
imul
scas
outsl
cmpsl
dec
push
sahf
adc
mov
xchg
out
leave
scas
xor
hlt
stos
pop
sbb
sar
jno
bound
mov
push
or
jl
int3
sub
test
fimuls
jo
movsb
push
enter
enter
dec
and
fdivrs
sbb
adc
sbb
jge
aam
sbb
jp
cmp
in
fwait
jl
repz
push
and
je
psubd
jo
xchg
inc
lahf
fidivrl
cli
push
imul
popf
push
hlt
inc
pop
inc
pop
cmpsb
fld
pop
sbb
ljmp
push
jb
loope
mov
sub
jg
cmp
in
fs
rorl
and
or
mov
mov
add
mov
scas
mov
out
js
test
inc
lcall
aas
fmull
mov
xchg
mov
shrb
xorb
sub
stos
sbb
imul
imul
adc
inc
sub
jge
and
adc
in
xor
lds
mov
aam
sbb
xchg
dec
imul
stos
mov
cs
cmpsb
mov
fdivl
cmp
xchg
call
adc
mov
je
cmp
jb
or
fprem1
mov
jmp
pop
adc
and
mov
jg
mov
adc
xor
dec
mov
xlat
mov
test
sarb
in
call
adc
xchg
push
loop
call
fnstsw
lret
and
dec
es
inc
inc
test
rcr
add
mov
repz
ljmp
test
jno
mov
xchg
je
jle
sbb
sub
and
adc
rorl
dec
int
push
add
shrb
jmp
aam
push
fsubl
pop
lods
aaa
repnz
call
xor
mov
idivl
mov
pop
mov
mov
inc
inc
arpl
cli
lahf
push
mov
je
lahf
and
ds
sbb
mov
std
push
ja
cwtl
loop
loope
inc
je
mov
inc
sbb
movsb
lret
daa
in
mov
scas
mov
mov
daa
cmp
shrb
pop
sub
push
outsb
ret
and
insl
sub
pop
imul
push
mov
mov
jge
or
adc
out
stos
add
cltd
jae
ljmp
enter
arpl
clc
adcl
pop
sbb
lret
and
aas
stos
jge
std
out
fldenv
mov
push
push
xchg
cmp
call
xor
mov
mov
jmp
mov
mov
adc
sub
jno
test
mov
ja
jbe
pop
not
inc
adc
cmp
fwait
into
addr16
push
sub
lret
push
mov
shl
jne
hlt
sub
bound
xchg
ror
insb
mov
inc
cmpl
mov
cmpsb
mov
pushf
test
mov
jecxz
push
dec
outsb
scas
mov
test
jmp
pop
xchg
xchg
addr16
ss
xchg
aaa
loop
out
cmp
sub
movl
add
dec
mov
jl
mov
push
in
xchg
cltd
scas
mov
aad
mov
push
test
mull
jae
adc
popf
xlat
push
fs
imul
xchg
pop
outsl
lea
jb
imul
scas
shlb
movsb
push
in
movsb
adc
fstpt
jmp
movsb
fcomip
imul
sub
ljmp
or
sub
aaa
adc
int3
or
pushf
add
cmp
int3
adc
nop
fdivp
arpl
sub
in
rclb
jmp
popf
mov
movsb
and
adc
jbe
loopne
jge
shll
inc
cltd
and
inc
iret
adc
xor
xor
dec
fistps
mov
std
push
jo
xor
push
cmp
and
test
aas
inc
jmp
mov
pop
xchg
call
enter
pop
repz
push
loope
aaa
pop
sub
nop
jle
enter
pminub
movsl
in
aad
pusha
outsb
sub
xorb
mov
jg
xor
push
inc
icebp
jle
cmp
js
and
pop
sub
lcall
cmpsl
fdivr
testl
outsb
or
adc
sbbl
and
movsb
fisttpll
test
call
test
lds
sub
and
movsb
lret
rcrl
out
incl
sahf
sti
lret
roll
mov
jbe
loop
in
stc
fstpl
push
sub
movsl
adc
sbb
pop
test
cmp
dec
adc
out
add
cli
lock
test
or
cmp
xor
sbb
out
cmc
addr16
pop
xor
lea
adc
ret
imul
test
add
inc
push
popfw
dec
lods
cli
shlb
cmp
cmp
mov
test
in
push
pop
outsl
sti
adc
mov
outsl
gs
xchg
data16
dec
test
inc
cwtl
xchg
pop
fnstcw
push
repz
jbe
sbb
into
inc
mov
pop
aas
aas
mov
lret
adc
jmp
dec
leave
test
dec
nop
ficoml
movsl
jb
daa
cmovns
imul
jecxz
cmc
sbb
call
repnz
stc
and
add
fistl
push
pop
inc
sbbl
outsl
std
repz
bound
das
fldcw
pop
mov
sub
jno
imul
std
mul
mov
inc
mov
pop
jns
icebp
sbb
push
mov
mov
jmp
mov
in
lock
dec
int
or
aad
movsl
mov
sub
imul
push
or
in
dec
jecxz
sub
adc
cli
mov
popa
jge
inc
lods
push
dec
pop
mov
mov
mov
mov
cmp
std
mov
test
shll
pusha
xlat
fstl
sub
mov
pop
dec
sbb
roll
push
pop
iret
ljmp
cmp
inc
xchg
cli
lcall
je
cli
xor
int
or
inc
xor
jg
mov
push
mov
dec
stc
and
test
stc
es
pop
fwait
dec
push
shlb
or
test
fwait
std
sub
push
int
scas
add
dec
jne
out
mov
push
bound
in
in
mov
shrb
sub
jbe
mov
xchg
das
mov
lods
aaa
mov
push
mov
dec
jb
mov
es
jns
xchg
cmp
sbb
std
sub
fisubrs
cli
sub
ret
push
sub
stos
ja
fisubs
arpl
xchg
daa
lret
jle
push
sti
in
hlt
mov
iret
xor
jno
and
inc
daa
aam
jae
movsb
cmc
push
jno
cmp
mov
call
test
xchg
jbe
inc
sbb
fsubrs
rol
scas
xor
mov
sub
cmp
pop
leave
popf
mov
pop
arpl
pop
xchg
inc
ja
test
jae
push
push
shr
mov
add
inc
pop
pop
jmp
fbld
outsl
fstps
and
sub
mov
cld
push
adc
jbe
imul
mov
daa
inc
test
cmp
fucomp
jno
jecxz
jl
filds
dec
rcrl
push
ljmp
jo
in
lahf
sbb
push
bswap
jns
adc
scas
push
jae
inc
inc
jp
enter
mov
enter
pop
xor
push
std
and
ficoms
cmp
cmp
xor
inc
movsl
jmp
cmp
sti
sbb
add
jns
inc
mov
add
ds
or
sub
js
sub
lcall
push
fsubl
outsb
outsb
jmp
adc
pop
mov
jg
lds
mov
mov
mov
inc
stc
and
popf
push
sbb
int
hlt
mov
mull
mov
and
flds
sahf
sahf
add
test
dec
outsl
and
loopne
sarb
sub
pop
adc
mov
bound
cmp
or
shl
pop
mov
das
xor
jnp
cmp
enter
fcom
into
ret
cmc
jg,pn
xor
cld
pop
orb
mov
jmp
add
in
shrl
aas
pop
pop
xlat
and
sub
jmp
pop
in
mov
data16
fimull
lcall
mov
fnstenv
int
sub
mov
xchg
push
dec
pop
sbb
or
cmpsl
or
pop
repnz
adc
cmp
outsl
pop
inc
jmp
int
cs
not
dec
inc
adcl
data16
je
mov
movsb
xabort
bound
data16
mov
fwait
mov
mov
hlt
js
fildl
js
inc
imulb
mov
mov
loop
push
idiv
test
mov
sbb
cwtl
pop
hlt
mov
nop
out
cmp
hlt
ss
dec
pop
ror
add
mov
add
lock
add
js
adc
nop
pop
cmp
pop
and
mov
rorb
roll
push
ja
ljmp
jae
jns
push
mov
ret
in
daa
and
dec
xlat
dec
setl
add
shrb
js
loope
xor
mov
push
call
rcrb
mull
cltd
xchg
or
sbb
mov
negl
rep
pop
cmc
out
lahf
arpl
mov
dec
out
call
jns
xor
xchg
or
push
xor
mov
pop
xchg
mov
test
into
push
ja
jp
dec
inc
bound
or
outsl
and
jo
xchg
add
lods
into
out
sbb
loopne
jo
or
js
add
add
pop
out
or
lahf
test
lea
mull
test
out
mov
adc
push
fisttps
loopne
xchg
or
mov
sub
addl
bound
mov
mov
stos
ljmp
insb
je
jnp
sbb
jp
adc
pop
pusha
iret
xchg
cmp
pop
pop
arpl
cmp
jns
push
xor
push
popf
and
add
fimull
sub
lds
cmp
cmp
scas
cwtl
xor
push
jae
xor
and
jle
sbb
leave
adc
dec
hlt
mov
pop
arpl
or
or
and
aaa
xchg
and
mov
inc
and
int3
jmp
xlat
jge
cmp
lds
inc
jnp
mov
scas
cmpsl
mov
mov
ds
movsb
cmp
push
leave
cmp
addr16
jge
jl
sbb
add
fbstp
adc
mov
push
shlb
stos
push
lahf
aaa
mov
and
ds
lods
inc
or
cmpsb
bound
enter
pop
jno
xor
ror
loope
test
push
cmp
mov
cwtl
movsl
repnz
and
xchg
sbb
pop
sbb
add
jl
xor
leave
fs
add
aam
dec
lds
xchg
enter
mov
lcall
mov
dec
add
sub
outsb
shll
adc
cmp
jne
add
xchg
mov
xchg
lea
and
loope
xchg
jge
sub
sarb
lret
ret
jecxz
mov
rcll
sbb
sahf
inc
xor
test
inc
in
icebp
lock
xchg
outsl
loop
lret
adc
dec
sub
fs
repz
movsl
push
fadd
push
push
out
stc
in
push
push
xor
mov
movsl
cmp
xor
movsl
jbe
cmc
cmc
arpl
psllw
je
adc
dec
jp
test
inc
aam
dec
adc
sub
cmp
and
movsb
test
add
sub
add
jno
pushf
std
mov
gs
nop
loopne
je
dec
inc
aam
inc
mov
pop
dec
les
jno
repz
mov
push
sbb
inc
aaa
rol
es
pop
movsl
repnz
adc
xchg
pushf
sbb
sub
scas
adc
cmp
nop
nop
pop
push
aas
jmp
cmpsl
jb
xor
push
mov
je
add
sti
idiv
lea
ja
mov
xor
xchg
adcl
rcl
scas
cmp
xchg
mov
push
das
xchg
inc
xchg
cltd
or
and
fucomi
rorl
mov
aam
inc
jne
cwtl
adc
stos
cmpsl
ds
out
ret
sbb
cld
ja
jecxz
je
pop
mov
jl
lock
ds
inc
pop
rorb
shrb
xchg
test
and
add
jp
es
insl
loop
cs
fld1
push
ljmp
xchg
lods
in
cmp
out
pop
and
jecxz
dec
psubq
pop
add
mov
cltd
sbb
mov
push
sub
frstor
lret
clc
xor
push
xchg
sbbb
sbb
scas
adc
pop
and
cs
xchg
mov
xor
mov
jmp
or
inc
xor
push
mov
sbb
popf
dec
aaa
mov
ja
sbb
dec
aaa
cmpsb
scas
inc
cmp
fwait
pop
add
adc
xlat
add
or
outsb
fwait
in
bound
xchg
push
in
dec
cld
xchg
mov
loope
mov
mov
test
std
mov
and
mov
xor
dec
pop
cld
mov
cmp
mov
mov
movsl
xchg
loopne
mov
movsb
push
arpl
adc
out
pop
mov
cmp
mov
pop
shrb
xchg
sarl
fildll
jnp
out
bnd
lods
in
cli
shll
icebp
iret
repnz
pop
ret
sub
mov
ja
scas
xchg
xlat
push
mul
sub
popa
adc
out
push
femms
xchg
and
xor
pop
ljmp
mov
std
adc
fadds
repnz
sub
mov
xchg
hlt
xlat
nop
in
push
add
jge
in
or
lahf
ror
aaa
push
out
or
add
dec
scas
int3
aam
adc
aad
mov
ret
shlb
int
mov
sub
cmc
test
leave
sti
push
mov
pop
jbe
fmuls
jge
daa
aad
jno
sub
ds
cmp
mov
mov
dec
jl
sbb
dec
sub
leave
push
mov
out
sub
jo
test
push
mov
inc
test
or
das
inc
cwtl
mov
xchg
in
aad
int3
enter
pop
mov
push
pop
or
mov
mov
sbb
jbe
js
das
movsl
stc
mov
stc
sub
je
mov
fiadds
push
cmp
ret
hlt
jne
mov
sub
js
cli
or
cmpsb
mov
leave
push
ficoml
loop
inc
je
outsb
xor
mov
adc
scas
jg
sbb
mov
fisttpl
mov
xor
and
jno
push
push
pop
pop
int
ljmp
pop
pop
stc
lret
mov
and
mov
jae
sahf
in
popl
or
das
outsl
fisubs
pushf
stc
add
adc
inc
xchg
ss
lds
out
mov
lea
sub
outsl
aam
push
jle
cmc
mov
out
mov
adc
mov
imul
in
es
subb
push
mov
lahf
loopne
sub
push
test
in
xchg
imul
and
pop
sbb
sub
aaa
or
inc
inc
ror
gs
dec
pop
addr16
cli
imul
sub
cmp
inc
movsl
sub
pop
pop
pop
sub
rcrb
pop
pushf
lds
jmp
and
lods
adc
ss
imul
pushf
inc
jb
test
je
mov
jecxz
jne
xchg
mov
call
das
cmp
andl
popf
sub
sub
sub
inc
mov
dec
das
jbe
aam
jnp
enter
push
and
or
lock
xchg
jge
into
jae
cmpsl
cmp
divl
cld
mov
fiadds
mov
fidivrs
mov
fcmovnbe
push
fldt
aam
mov
ret
pop
fwait
mov
cmpsl
jo
insl
leave
mov
inc
xchg
iret
pop
ss
sbb
jae
mov
jge
clc
mov
pop
xchg
addl
dec
je
test
arpl
sub
cltd
fisttpll
mov
sbb
adc
add
hlt
mov
cmp
iret
sbb
push
add
pop
call
xor
add
or
loope
xor
fisttps
xchg
inc
stos
dec
cs
pop
test
xor
orb
inc
inc
insl
ds
or
mov
xlat
push
mov
filds
lcall
bound
inc
jns
pop
ljmp
or
mov
test
aam
pop
lods
repnz
sub
mov
clc
insb
mov
lahf
jle
dec
cli
std
jge
mov
cmpsb
sbb
dec
mov
xlat
jmp
rorl
andl
push
out
and
mov
mov
hlt
push
aas
fistl
sar
jmp
test
mov
jnp
clc
insb
jle
inc
in
xchg
pop
pusha
add
movsb
cmp
pop
es
pop
std
and
dec
mov
jae
icebp
sub
popf
jae
or
inc
movsl
mov
mov
lcall
add
imul
cmp
in
push
adc
in
mov
xor
fisubl
arpl
sub
or
sbb
or
scas
add
xchg
int3
mov
xchg
push
fidivrs
mov
inc
sub
rol
stos
scas
gs
and
fidivrs
lods
jnp
movsb
push
movsl
scas
push
add
lret
jge
mov
sbb
fsubs
cmp
push
jno
loope
jl
clc
or
sbb
xchg
pop
mov
jo
jae
lahf
jne
in
mov
test
aam
jnp
daa
gs
cmpsb
push
mov
enter
pop
out
and
push
xchg
imul
stos
ja
test
aad
test
ds
jp
movsl
add
mov
cmp
out
sbb
sbb
xor
push
pop
popf
ja
js
sar
and
pop
push
xor
push
fsubl
push
jne
xchg
daa
sub
out
sub
mov
push
loop
orb
inc
jl
push
and
int
cmp
sub
lret
lock
rol
mov
out
pop
mov
out
sahf
xchg
test
sbb
daa
mov
outsl
mov
xorb
push
roll
xor
mov
sub
mov
fdivrs
jl
out
add
fs
out
cmp
orb
imul
sbbl
jae
or
fstl
adc
xchg
outsl
adc
sub
test
lods
xchg
xor
mov
sub
sbb
mov
mov
mov
dec
incb
mov
and
loopne
mov
addl
and
in
cmp
pop
cs
cmp
add
or
adc
rclb
jo
popa
jmp
icebp
xor
aad
es
nop
inc
jb
aas
sub
pusha
dec
ds
inc
jecxz
push
mov
pop
int3
imul
xlat
cmp
mov
mov
mov
dec
mov
loopne
or
adc
inc
into
xchg
push
je
mov
pop
hlt
or
xchg
adc
scas
mov
fistpl
pop
std
xchg
xchg
xlat
cwtl
mov
out
sub
dec
cld
int
jno
push
inc
push
mov
jno
imul
lret
sub
push
aam
cmp
ret
out
mov
insl
mov
or
rolb
ljmp
ja
mov
adc
and
sbb
ud1
add
ljmp
xor
cld
mov
hlt
jg
in
fildll
fnsave
fwait
sub
sbb
aad
pop
dec
dec
pop
jnp
arpl
enter
push
or
push
fnstsw
push
xor
or
pushl
cld
fwait
mov
and
cmp
ds
dec
sbb
push
dec
fwait
mov
int3
sahf
add
mov
dec
out
sub
mov
jns
iret
xor
sbb
xor
pop
xchg
addr16
xor
mov
and
mov
push
pop
in
shlb
cmc
mov
mov
movsl
xchg
xchg
jmp
mov
xorl
shrb
scas
icebp
mov
stos
inc
mov
insb
mov
mov
daa
adc
in
nop
ds
mov
ficoms
insl
cmp
pop
xor
sbb
jl
dec
xchg
mov
jge
or
lcall
inc
in
rcr
fs
add
mov
imul
scas
rcll
dec
js
adc
clc
repnz
je
insl
mov
fadds
imulb
push
into
repz
cmp
aam
stos
mov
pop
movsl
sbb
js
into
mov
rcr
mov
and
add
arpl
jo
dec
fsubl
jge
sub
daa
cmp
dec
cmp
push
mov
jl
test
dec
or
push
jbe
addr16
pop
jbe
lahf
xchg
das
sbb
mov
test
lahf
xor
sub
in
mov
dec
xchg
pop
cs
jbe
add
sub
push
push
cmp
push
fisubl
addr16
mov
call
add
sbb
in
adc
cs
xor
not
dec
jb
pop
les
sysret
movsb
adc
lcall
jo
push
lds
and
lret
js
adc
lret
jg
jl
mov
add
mov
imul
push
lret
out
push
and
or
enter
push
daa
xor
stos
jb
xchg
sub
dec
stos
dec
mov
sbb
lcall
scas
outsl
pushf
pop
xor
sbb
jge
jo
adc
xchg
cmpl
cmp
cmc
mov
out
lret
pop
cli
out
cmp
data16
mov
inc
cs
into
dec
push
cmc
dec
push
xor
jmp
xchg
adc
add
jl
adc
cltd
popl
cli
dec
lods
data16
imull
sub
mov
std
and
in
push
xor
jle
cmpsb
in
xor
loopne
jp
dec
pusha
jge
inc
idiv
mov
dec
cltd
outsl
les
repz
mov
pop
es
sbb
cmc
clc
or
pop
mov
mov
pushf
sbb
adc
jnp
ljmp
jae
cmpsl
aad
jecxz
nop
and
jb
or
xor
jecxz
jno
movb
ret
call
lods
leave
test
xor
cmp
dec
mov
stos
aas
pop
jae
sbb
inc
jmp
adc
mov
fistpll
shl
sbb
negb
scas
hlt
std
cmp
cwtl
inc
inc
ja
cmp
shl
sbb
clc
dec
lret
shll
test
sbb
loopne
les
ret
push
sub
aam
inc
test
jge
mov
lods
mov
gs
lret
xchg
dec
dec
cmp
cmp
pop
lods
and
jno
mov
mov
mov
sbb
pop
cltd
mov
or
dec
leave
test
and
clc
jecxz
test
jecxz
sbb
lret
jne
shll
lret
pop
jno
out
sub
pop
xchg
pop
bound
decl
scas
fmuls
mov
sbb
inc
outsb
adc
push
insb
js
and
add
ja
adc
dec
adc
popa
or
pop
outsb
fwait
call
dec
pop
add
rclb
out
or
bound
sub
in
in
push
aam
stos
shlb
movsb
lea
mov
jp
into
sahf
mov
mov
fs
rcr
jne
fcoms
mov
popa
jmp
push
repnz
addl
out
adc
sub
test
je
and
or
jnp
push
fnstsw
or
in
icebp
loopne
cmp
iret
nopl
imul
inc
pop
test
push
push
inc
and
popf
rcr
mov
arpl
ficoml
jno
xchg
sub
sbb
inc
cmp
js
scas
and
dec
push
addr16
mov
fstpt
leave
lock
out
hlt
mov
jnp
inc
xchg
or
adc
lods
or
cmpsb
in
xchg
enterw
repnz
xchg
jmp
push
mov
inc
scas
and
mov
cmp
push
cmpsl
movsb
addr16
out
push
sahf
push
jbe
in
jge
jg
sbb
mov
dec
jno
aas
jb
mov
dec
jns
icebp
push
pop
and
jb
pusha
lahf
mov
jo
cs
popf
test
push
sub
mov
cmpsb
outsb
push
mov
mov
ror
out
pop
insl
fwait
push
push
es
loope
cmp
and
loop
add
loope
dec
movsl
push
inc
insb
and
mov
cmp
pop
pop
sbb
sarl
adc
cmpsl
pop
jmp
dec
js
or
pop
and
ljmp
add
sub
pop
or
mov
dec
shlb
mov
mov
out
mov
sbb
pop
ret
into
lcall
push
stc
negl
lret
test
out
insl
mov
add
sahf
int
cmpsl
test
xor
jnp
cltd
loop
or
daa
in
fbld
mov
rcr
lock
push
cmp
mov
adc
cli
and
mov
cmp
push
jle
mov
sub
cmc
adc
jg
sub
popf
adc
std
imul
jmp
scas
jae
lods
fs
mov
popf
push
xlat
pop
scas
movsl
sub
cmpsl
mov
aad
add
decb
daa
cmp
or
dec
mov
fistps
les
dec
repz
and
loop
push
loop
cmp
or
and
enter
out
aad
adc
std
inc
aad
add
nop
cld
jb
mov
dec
sub
out
je
lret
ret
movb
lcall
push
cmp
mov
cmovl
push
rcrb
cmpsl
inc
cltd
fdivrp
inc
add
ret
mov
mov
jne
sub
roll
add
popa
mov
std
loope
cmp
lea
