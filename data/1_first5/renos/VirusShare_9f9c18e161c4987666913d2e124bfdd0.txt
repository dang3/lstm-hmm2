out
call
in
sub
movl
cld
add
test
add
test
std
pop
add
aam
add
out
add
xor
add
cmp
add
xchg
neg
insl
adc
lea
lea
aam
in
mov
imul
mov
inc
idiv
call
add
mov
mov
cmp
mov
dec
jg
mov
int3
fs
fdivrl
popa
in
dec
fistpl
insb
add
push
aas
add
cs
push
loopne
data16
adc
push
push
push
fwait
mov
push
inc
mov
pop
cltd
mov
xor
cmp
std
fwait
pop
decb
pushf
rorb
add
inc
or
dec
or
enter
bound
sbb
mov
hlt
and
shl
sub
push
push
xorl
test
nop
insl
push
sbb
les
rorl
lods
cmp
xchg
ror
mov
sbb
add
lock
loopne
mov
mov
mov
test
pushf
inc
clc
aam
and
mov
xchg
sti
movsb
jb
sbbl
das
das
xchg
sti
add
repnz
xchg
jno
sti
pushf
sti
mov
leave
xchg
xchg
sti
cwtl
sti
cwtl
sti
cwtl
sti
and
fs
pushf
sti
pushf
sti
cmp
push
jns
sti
sbb
mov
and
leave
mov
sub
cmp
adc
cmp
out
push
dec
clc
jge
pop
add
movsbl
xor
imul
add
xlat
lret
in
aaa
clc
nop
inc
push
sbb
int3
rorb
jns
in
enter
xchg
xchg
xchg
int3
fcom
pop
jno
or
nop
enter
repnz
and
aam
jno
dec
movsb
fcomp
fsubs
pop
cmp
jg
std
sti
leave
dec
leave
orb
nop
inc
cmp
add
sbb
fsts
sti
sub
pop
mov
jno
sti
lret
je
and
fs
pushf
pushf
jne
and
fs
sti
mov
jns
sti
enter
leave
sbb
cmpl
clc
outsl
jne
xor
jmp
es
mov
repnz
sti
pop
stc
pusha
stc
inc
push
cmp
fs
pop
stc
call
xchg
stc
push
jb
add
pop
stc
push
repnz
fs
fs
fs
sbb
mov
stc
push
add
and
add
cmp
or
lret
ret
lock
stc
lret
inc
push
repnz
sub
sub
xchg
push
inc
mov
call
divl
inc
sbb
push
sub
fs
sub
sub
sub
or
sub
je
mov
jg
pop
pop
sbb
add
int
in
js
test
push
mov
mov
jae
f2xm1
shlb
adc
lret
adc
nop
xchg
sbbl
mov
cwtl
jb
mov
shl
cmc
mov
push
mov
shl
cmc
xchg
daa
dec
push
mov
cmc
int3
test
shl
pop
sbb
shl
loope
mov
je
in
loopne
push
or
pusha
test
test
nop
sbbl
repz
repz
xchg
repz
xchg
xchg
and
xor
jae
repz
xchg
pop
repnz
je
test
fs
test
test
and
mov
push
jns
daa
mov
mov
sub
leave
cmp
loope
js
cmp
or
xorb
lock
lock
pop
cmp
leave
inc
jbe
not
jo
jo
in
pop
jns
icebp
dec
icebp
dec
icebp
in
lods
sbb
icebp
dec
jae
icebp
mov
in
push
icebp
dec
icebp
insb
jae
icebp
mov
inc
pop
push
icebp
cmp
dec
icebp
lods
lods
cmp
dec
icebp
dec
icebp
jl
push
icebp
and
in
push
icebp
push
icebp
and
fiaddl
orb
in
jae
sbb
or
and
into
incl
sub
icebp
cmp
jb
cmpl
in
push
push
or
mov
in
sbb
adc
les
out
fs
mov
adc
repnz
jns
adc
adc
aam
out
cmpl
fcomps
sub
nop
or
add
cmp
inc
pop
aam
fsubr
fsubr
jb
sub
shr
clc
aam
pop
cmp
repnz
fsubr
sbb
shr
pop
jns
das
loopne
int3
in
fsubr
push
push
sahf
cmp
in
fsubr
sub
loopne
nop
pop
jb
loopne
loopne
xchg
mov
or
dec
xor
cwtl
xchg
pop
outsb
popf
adc
add
mov
push
cld
dec
adc
sbb
ss
aas
add
xor
jns
inc
enter
mov
and
in
in
pushf
ljmp
in
je
ljmp
xchg
ljmp
nop
adc
push
test
imul
cwtl
xchg
xchg
cld
ret
push
cltd
or
xor
ljmp
or
push
js
dec
enter
test
fs
pop
push
push
call
nop
call
insb
call
insb
int
je
gs
jb
pop
jo
jo
loopne
ja
sub
lock
js
add
xor
test
imul
pop
jns
out
out
out
test
sub
mov
in
cmp
xor
sub
out
repnz
pop
cmp
and
xor
lods
lods
cmp
xor
xor
cmp
out
das
in
cmp
cmp
daa
jns
fidivrl
imul
dec
mov
xchg
inc
cmc
test
subl
or
add
out
inc
push
repnz
out
jecxz
jecxz
lret
cld
jecxz
lock
jne
pop
pop
pop
hlt
jecxz
in
jecxz
jne
in
sub
jecxz
in
jecxz
xchg
daa
sub
jecxz
jecxz
jecxz
dec
enter
add
add
ja
or
loope
lock
or
jecxz
jne
or
mov
xor
dec
ds
mov
push
clc
push
inc
clc
push
ret
jo
lock
pop
call
push
repnz
jecxz
loope
loope
push
cmp
mov
xchg
xchg
xchg
xchg
loope
loope
loope
mov
loope
loope
loope
dec
in
xchg
loope
loope
loope
repnz
dec
enter
loope
loope
aaa
lods
or
loope
or
arpl
cmc
insb
push
outsl
dec
pop
sub
loope
mov
jns
in
test
mov
mov
lret
cmp
fisttps
test
xchg
iret
lret
lret
mov
xor
ffreep
popf
add
fistpll
into
std
inc
jle
mov
mov
inc
jbe
cmp
scas
sbb
nop
fists
cmp
sbb
xchg
cmp
jbe
mov
jne
push
sub
addr16
cmpl
fldl
push
jb
fisttpll
fs
repnz
fstpl
push
fisttpll
pop
dec
fstpl
inc
fstl
cmp
push
fstl
fstpl
push
pop
fstpl
pop
pop
pusha
insl
nop
fstpl
jb
or
add
mov
cmp
scas
push
inc
movsl
mov
push
fiaddl
jp
pop
or
pop
jns
and
cmp
adc
adc
test
fisttpl
mov
adc
sbb
adc
add
lret
loopne
fistpl
repnz
lret
sbb
sbb
sbb
and
in
lock
sbb
mov
push
jns
fcomi
loope
movaps
leave
or
add
jg
call
add
daa
add
sbbl
fcomp
loopne
mov
nop
fcom
fcoms
fmul
xchg
xchg
xchg
fsub
fcomp
fdivrs
ja
add
aam
in
rcr
mov
in
loopne
loopne
loopne
dec
ja
nop
adc
in
in
imul
jo
push
insb
in
cmp
fwait
int3
fsubrs
fdivs
cmpl
repnz
push
push
pushf
jo
mov
repnz
movsb
xchg
ja
pop
jns
das
lods
cwtl
test
push
push
sahf
cmp
test
movsb
ja
nop
pop
jb
lods
lods
xchg
mov
outsl
pushf
mov
mov
push
inc
inc
sub
popf
xchg
and
leave
push
inc
arpl
xor
inc
ds
xchg
inc
arpl
xchg
inc
arpl
push
sub
push
aam
aam
aam
in
in
fs
aam
aam
mov
aam
aam
repnz
aam
aam
aam
aam
adc
push
cld
jo
jo
stos
mov
mov
loope
repnz
dec
jb
aam
js
xor
push
sub
aam
and
pop
cs
shlb
js
rcrb
mov
rclb
rcl
fs
sub
shrb
pop
loope
leave
sub
leave
sub
push
jb
pop
and
outsl
and
hlt
iret
pop
cmp
inc
clc
iret
cld
iret
lock
jns
and
jl
hlt
iret
add
xchg
lods
sbb
clc
iret
mov
sahf
lods
cmp
shr
iret
cld
iret
cld
iret
and
sub
iret
mov
add
ss
rolb
shlb
outsl
lock
les
mov
sub
and
add
jo
das
movsb
pop
test
call
and
iret
jo
iret
and
cmp
xchg
sbbl
int
int
int
jns
cmp
int
int
int
das
jns
clc
mov
int
cmp
jns
int
int
int
int
inc
push
push
or
int
int
jbe
pop
int
jns
pop
leave
dec
dec
popf
mov
sbb
call
inc
lods
int
int
inc
push
repnz
lret
mov
lret
or
jl
sub
or
in
lret
mov
test
push
jns
lret
fs
mov
mov
pop
pop
jns
mov
mov
pusha
jns
lret
inc
pop
enter
mov
dec
repnz
mov
loope
jl
je
mov
dec
test
lret
outsl
jb
xchg
sbb
lret
dec
leave
dec
leave
enter
push
leave
inc
leave
mov
pop
pop
pop
dec
leave
push
leave
dec
leave
lods
jns
in
sub
leave
inc
leave
lret
sub
push
leave
push
leave
test
push
leave
out
pop
sbb
push
leave
shl
inc
leave
stos
inc
enter
and
test
shlb
and
and
pop
clc
add
sarb
and
leave
add
dec
jb
xchg
sub
xchg
mov
out
cmp
pop
cmp
leave
xchg
xchg
cmp
leave
or
adc
daa
in
in
or
loopne
or
ds
sub
sbb
adc
add
or
cmpsb
add
inc
add
mov
int
es
adc
mov
pop
sbb
imul
sbb
inc
repnz
xor
sub
push
inc
pop
jg
mov
and
jns
add
aam
fadd
test
les
jp
in
in
loopne
fadd
pop
jp
rcrb
les
stc
dec
mov
fadd
adc
test
gs
dec
enter
loopne
xchg
xor
imul
rol
adc
inc
cmp
nop
pop
stc
arpl
imull
enter
sbbl
pushf
ret
movsb
pop
mov
nop
ret
xchg
jp
xchg
xchg
xchg
xchg
ret
mov
pop
repnz
ret
xchg
ret
in
xchg
ret
movsb
ret
inc
dec
enter
ret
xchg
ja
or
ret
or
lea
sbb
fwait
add
pop
bound
sbb
das
in
nop
ret
nop
ret
pop
jns
ret
mov
sub
enter
ret
rorb
pop
push
inc
pop
pop
push
pusha
shrb
adc
in
sub
rcrb
xchg
daa
sub
push
dec
enter
insb
shrb
or
loope
pop
nop
push
jb
shlb
ret
and
push
rclb
push
jb
subl
mov
inc
push
inc
jnp
mov
cmp
sub
push
mov
and
fs
mov
push
jns
daa
xor
xor
jl
leave
stos
loope
and
mov
pop
leave
sub
inc
pop
jb
mov
and
pop
cmp
mov
sbb
jns
mov
les
das
jns
mov
push
sahf
cmp
clc
mov
aam
in
mov
cld
mov
fsub
outsl
in
mov
call
sub
adc
mov
test
adc
mov
fsub
mov
push
dec
fsub
mov
enter
mov
jb
sub
mov
clc
mov
pop
cmp
repnz
mov
sarb
push
sahf
cmp
mov
sarb
mov
push
xor
fwait
mov
inc
cmp
mov
and
mov
mov
jb
addl
xchg
xchg
pop
jl
mov
leave
lret
js
mov
je
test
nop
adc
mov
mov
imul
fwait
in
pushf
in
mov
jl
jl
cmp
jo
outsl
jo
inc
mov
sbb
and
dec
mov
mov
lods
jl
mov
mov
mov
rolb
push
sahf
lods
cmp
mov
mov
mov
mov
pop
sub
mov
push
mov
nop
pop
jb
mov
mov
loope
xchg
mov
hlt
add
or
and
js
mov
mov
mov
jb
adcl
adc
or
add
or
sbb
adc
sbb
add
adc
adc
inc
push
push
sahf
adc
cmp
mov
nop
pop
jb
mov
mov
loope
xchg
mov
dec
jge
inc
pop
lcall
imul
jno
lods
or
xchg
inc
sahf
jp
mov
lahf
inc
push
sbb
lret
in
and
xchg
lret
mov
mov
pushf
pushf
push
mov
mov
jge
and
push
mov
mov
mov
jne
mov
leave
sub
jge
imull
sbb
sbb
scas
scas
scas
pop
cs
repnz
scas
scas
scas
inc
cs
scas
iret
leave
dec
in
scas
scas
scas
call
jge
scas
scas
xor
imul
loope
cwtl
addb
nop
scas
cld
jge
cmp
push
sbb
xchg
scas
lods
lods
lods
enter
stos
lods
or
bnd
pop
lods
lods
lods
xor
add
lods
push
ds
daa
lods
lods
inc
jle
popf
pop
enter
inc
sub
sub
sub
aaa
push
jle
es
lods
lods
stos
addr16
inc
push
stos
stos
stos
jb
pop
enter
stos
stos
add
stos
stos
ds
daa
xchg
stos
stos
stos
stos
pushf
jle
enter
stos
stos
faddl
lods
popf
mov
dec
or
mov
add
add
enter
stos
cmpsl
cmpsl
or
or
cmpsl
cmpsl
sarb
cs
cmpsl
test
in
cmpsl
movsb
jb
xchg
test
cmpsl
nop
lret
cmpsl
cmpsl
hlt
jle
mov
or
dec
dec
repnz
cmpsl
or
or
arpl
das
add
and
movsb
pop
lock
lock
sub
cmpsl
or
leave
and
and
in
jb
movsl
movsl
movsl
cmp
sub
jb
movsl
movsl
movsl
movsl
test
movsl
dec
jg
cmp
push
loope
and
pop
leave
mov
cmp
mov
sbbl
movsl
mov
and
mov
mov
pop
push
mov
add
mov
mov
jg
sub
cmp
nop
mov
bound
andb
repnz
outsl
js
push
jb
xchg
dec
mov
sbb
lret
mov
mov
lock
mov
pop
mov
sub
dec
sahf
push
mov
pop
mov
pop
mov
pop
cmp
loope
dec
mov
adc
cs
mov
sbb
in
mov
jns
mov
adc
sbb
xchg
adcl
and
adc
push
mov
dec
adcb
push
push
enter
or
sbb
xchg
xchg
daa
dec
sbb
sbb
pop
andb
test
lahf
in
pop
sbb
adc
insb
subb
repnz
mov
mov
sub
pop
movsb
jb
in
sub
lahf
and
cmp
or
sbb
loopne
in
fcomps
fcompl
das
jns
mov
sahf
cmp
jns
pushf
in
in
in
mov
rcrl
adc
call
in
daa
das
fcomps
cmpsb
in
rcrb
rcrb
pushf
nop
iret
xchg
lcall
stc
mov
test
clc
andb
mov
pushf
lcall
lods
lcall
repnz
lcall
or
loope
leave
and
mov
sbbl
outsl
cwtl
lcall
jo
je
push
sub
subl
jns
cwtl
push
subl
nop
cwtl
fs
mov
gs
je
andl
js
mov
cwtl
loope
push
xchg
js
sub
and
mov
pop
jns
loope
pusha
cwtl
xor
cmp
cmp
xor
in
xor
inc
xchg
cmp
lods
xorl
jns
repnz
cmp
cmp
cmp
adc
gs
inc
xchg
inc
xchg
loope
dec
repnz
xchg
rorb
cmpsb
xorb
add
out
call
dec
and
xchg
mov
push
jb
xchg
add
lret
loopne
xchg
or
xchg
add
clc
xchg
mov
xchg
hlt
xchg
mov
imul
mov
or
xchg
loope
clc
xchg
call
sub
test
xchg
popa
lock
repnz
dec
les
xchg
adc
jns
xchg
cmp
lahf
xchg
xchg
xchg
enter
rclb
xchg
mov
cld
popa
int3
xchg
int3
int
xorb
popa
rclb
mov
jo
popa
sbb
and
mov
xchg
sbb
jb
adcl
in
nop
push
nop
mov
gs
mov
cwtl
repnz
test
adc
push
jns
pop
cwtl
cwtl
imul
enter
in
sbb
cmp
lea
jecxz
pop
jns
orb
dec
adc
pop
lea
xchg
pop
outsl
xor
imul
leave
lret
or
push
lea
daa
je
add
mov
lea
gs
nop
xlat
or
pusha
lea
out
and
push
lea
shlb
aad
pop
sbb
jmp
sub
fs
mov
test
cld
cld
inc
subl
xchg
lret
cld
cld
cld
fs
cmp
dec
in
jb
cld
je
cld
fcmove
test
js
pop
mov
rolb
xchg
sub
jp
leave
lods
test
mov
cld
cld
cli
addr16
inc
push
cli
cli
cli
jb
pop
enter
cli
cli
add
cli
cli
ds
daa
xchg
cli
cli
cli
cli
int3
sbbl
cli
cli
cli
jb
lods
popf
shl
mov
dec
push
loopne
lock
das
cmp
mov
imul
clc
fs
pop
jns
and
clc
hlt
pop
clc
push
jns
clc
sbb
cmp
clc
push
clc
fs
fs
and
sub
clc
sub
cmp
push
cmp
cmp
and
cld
jns
loope
push
clc
imul
and
sub
sub
and
in
test
negb
jb
sub
jo
and
xor
jns
repnz
sbb
sub
sub
test
test
neg
and
in
divb
testb
and
xchg
test
dec
sbb
push
adc
cmp
add
call
sbb
sbb
sbb
in
repz
jb
xor
hlt
repz
push
movsb
in
repz
repz
repz
repz
in
hlt
repz
repz
push
jns
repz
repz
imul
fsub
and
in
cmp
repz
test
sbb
aaa
push
shrb
push
shlb
test
rcl
or
inc
in
in
leave
xchg
inc
cmpl
repz
cld
test
ds
sub
push
mov
inc
scas
mov
out
jnp
fwait
adc
jns
clc
mov
ret
or
std
xor
repnz
hlt
cmpsb
xorl
mov
dec
push
imul
sbb
sti
sub
xchg
pop
mov
jl
push
test
xchg
xchg
sti
test
js
sti
movsl
imul
leave
jnp
mov
inc
dec
enter
sti
mov
aaa
lods
or
loope
jl
movsl
fs
sti
pushf
jb
shl
lock
and
test
je
push
push
sbb
inc
lods
test
push
dec
sbb
and
push
inc
pop
cmp
test
test
inc
es
push
push
and
pop
sbb
loope
inc
stc
cmp
adc
hlt
pop
add
pop
jns
popa
sub
adc
lods
sbb
and
testl
in
adc
sbb
adc
rcrb
jb
xchg
inc
frstor
adc
test
testl
sbb
jae
imul
or
cmpsl
fs
testl
clc
push
divl
idivl
in
fdiv
fdiv
loopne
lret
cmp
hlt
pop
xchg
hlt
xchg
iret
lret
lret
fdiv
addb
pop
inc
dec
hlt
in
cmpps
and
xchg
in
pop
or
in
loope
xchg
pushf
inc
rcl
hlt
xchg
pusha
ficompl
mov
in
cmpsl
jmp
add
int3
hlt
int3
hlt
jb
cmpl
repnz
push
push
pushf
repnz
mov
repnz
repnz
repnz
jecxz
inc
push
repnz
or
mov
bnd
out
push
xchg
mov
daa
in
repnz
repnz
dec
repnz
ret
pushf
repnz
xchg
fnstenv
lock
xchg
repnz
repnz
push
pop
mov
nop
lock
push
lock
insb
lock
fs
pusha
lock
in
jo
jo
jo
inc
xchg
je
je
in
imul
mov
jne
push
xchg
ja
add
lock
jb
out
xor
cmp
mov
out
fs
cmp
xchg
mov
mov
cmp
lods
cmp
out
sub
cmp
cmp
nop
pop
sub
out
cwtl
gs
add
cmp
xchg
mov
sub
lods
fnstenv
nop
xchg
and
sbb
and
jmp
jmp
jb
addl
hlt
jmp
xchg
jmp
in
cld
jmp
jns
lret
hlt
jmp
in
repnz
mov
mov
xchg
pushf
nop
push
xor
and
test
loope
hlt
jmp
jmp
add
jmp
das
cmp
in
jmp
jmp
jmp
adc
mov
jmp
enter
cmp
daa
dec
push
push
mov
jmp
xchg
jmp
int3
jmp
int3
jmp
pushf
nop
jg
jmp
pop
cltd
or
jmp
leave
xchg
xchg
mov
mov
nop
out
daa
in
test
insb
mov
ds
sub
add
enter
out
cmp
sbb
mov
out
int
mov
push
mov
out
out
inc
push
movsb
loope
test
dec
push
inc
push
mov
or
in
pop
jb
pop
mov
out
out
in
cmp
inc
push
in
in
in
jns
sub
mov
pop
in
lods
sbb
push
in
mov
sahf
lods
cmp
in
in
in
in
sub
dec
pop
in
mov
enter
in
in
loope
enter
dec
in
mov
or
repnz
pop
jb
sbb
sbb
pop
cmp
inc
sbb
and
adc
jns
and
sbb
sbb
and
xchg
lods
sbb
sbb
inc
mov
and
lods
cmp
jecxz
jecxz
jecxz
jecxz
sub
dec
and
push
mov
ss
jecxz
jecxz
loope
dec
fidivs
and
or
or
nop
sbbl
loopne
loopne
loopne
xchg
loopne
loopne
das
and
in
cwtl
fsub
daa
sub
in
loopne
loopne
loopne
nop
xchg
lret
call
sbb
test
loope
in
pop
loope
loopne
mov
or
mov
sahf
pushf
test
lods
fidivs
and
fidivs
lods
fdivp
mov
jae
mov
mov
mov
add
in
mov
add
cld
xorl
cmp
and
and
cmp
nop
xchg
sbbl
insb
fsubl
mov
fdivl
mov
enter
fdivrl
fcoml
fdivrl
js
pop
mov
and
push
in
jl
loope
xchg
dec
fisubs
insb
fsubrl
pop
fsubl
fidivl
sbbl
inc
fidivl
das
das
xchg
cmp
in
das
and
xchg
daa
sub
xor
inc
fiaddl
xchg
loopne
lret
mov
or
pop
inc
fiaddl
leave
and
pop
or
or
dec
push
call
incb
inc
in
push
xchg
sub
cmp
ficompl
sub
xchg
daa
dec
dec
add
add
or
lods
pushf
nop
iret
cld
xlat
aam
add
or
daa
stc
mov
mov
xlat
or
sub
cmp
clc
xlat
mov
in
fcoms
int3
or
mov
or
nop
testb
iret
cld
xlat
jo
push
repnz
in
cmp
hlt
xlat
adc
and
aad
mov
mov
aad
dec
in
aad
mov
aad
mov
inc
ror
popf
lret
rcl
mov
test
aad
xor
aad
and
aad
enter
aad
rcll
cwtl
rorl
push
nop
rcrl
enter
rcrl
dec
push
cwtl
rcrl
or
and
pushf
rcrl
pushf
sarl
enter
mov
repnz
ret
jne
rcrl
cmp
inc
push
pop
shll
push
ror
lret
or
mov
sarl
add
fs
push
shll
pusha
rorl
pop
pop
jns
rcll
mov
inc
pop
enter
rcll
leave
inc
into
or
sbb
sar
orl
dec
shll
and
dec
enter
xor
and
sbb
mov
mov
gs
pop
sub
sbb
in
lret
sub
sub
push
jns
daa
sub
sub
insb
xor
sbb
loope
sbb
jl
xlat
add
jae
iret
sahf
pushf
in
xchg
adc
call
lahf
daa
dec
lock
in
mov
int3
hlt
int3
in
int3
mov
jae
dec
repnz
hlt
int3
loopne
mov
int
in
sarb
int3
add
daa
hlt
int3
inc
xchg
xchg
sbb
aam
in
sbb
int3
fmul
mov
push
jb
xorl
in
push
in
lret
pop
mov
in
lret
lods
lret
jns
repnz
test
mov
lods
lods
cmp
lret
mov
in
lret
sbb
in
addr16
jae
lret
or
movsb
lret
sahf
pushf
in
lret
jl
or
and
lea
bnd
pop
test
jl
pusha
lea
jae
dec
test
jo
mov
xchg
or
int
lea
gs
test
test
adc
imul
loope
je
inc
repnz
enter
shlb
in
push
push
ds
or
leave
out
in
mov
xchg
in
in
jb
in
in
sub
jb
in
in
test
in
cmp
loope
push
mov
xor
mov
adc
jb
rorl
cmp
sbb
lret
jecxz
xor
push
mov
adc
jp
inc
mov
sbb
movsb
cmp
loope
and
inc
jecxz
jecxz
mov
enter
loope
xor
sbb
ret
mov
add
mov
adc
and
scas
loop
sub
dec
push
jb
add
add
clc
repnz
sub
or
jns
repz
loope
mov
or
cld
in
add
mov
push
push
sahf
add
js
or
insl
nop
pop
jb
loope
loope
loope
and
imul
dec
xchg
inc
into
lock
jb
or
inc
push
cmp
int3
faddp
ficomps
fmulp
faddp
rcrb
xchg
fiadds
mov
int3
adc
enter
fidivs
lods
or
loope
shlb
xchg
fsubp
inc
xchg
mov
movsb
pop
mov
fistpll
mov
orl
enter
sbb
in
test
xchg
sub
jb
cwtl
sub
xchg
pushf
fs
mov
sbbl
adcb
enter
dec
mov
push
pusha
pop
jo
in
jns,pn
pusha
dec
iret
lret
pop
pop
pop
orb
pusha
pusha
daa
jns
fiaddl
das
add
les
and
dec
ret
dec
orl
sbb
and
in
and
sub
leave
out
and
sbb
sub
sahf
pop
adc
and
and
or
fmuls
push
mov
add
mov
sbb
in
enter
adc
or
in
pop
cmp
aad
aad
aad
pop
push
dec
cld
in
lock
aad
and
loopne
inc
outsb
push
cmp
scas
fsubr
adc
push
adc
in
aad
gs
in
or
cmp
push
inc
xor
loopne
nop
and
push
and
out
and
xchg
sbb
fistl
and
cmp
lods
shll
in
shrl
in
in
sarl
nop
and
pop
mov
roll
hlt
and
xchg
movsb
mov
loope
or
js
nop
mov
mov
pop
mov
jns
sub
test
pushf
nop
inc
sbb
out
out
push
jb
adc
sarl
pop
cmp
inc
jl
jo
mov
enter
je
adc
rorl
leave
lret
aam
roll
fwait
push
mov
insb
jl
outsl
daa
in
bnd
in
roll
and
xor
cmp
sar
call
jnp
xchg
nop
lret
jb
push
push
push
mov
adc
or
mov
push
dec
push
enter
adc
cmp
inc
xor
in
jns,pn
dec
xor
lret
inc
inc
inc
inc
xchg
dec
and
xor
dec
dec
pop
scas
dec
dec
cmp
jb
jle
pop
xchg
cmp
push
xchg
iret
jl
test
nop
cmpsl
in
and
adc
add
or
or
jp
or
add
test
pop
imul
jmp
xchg
add
inc
lret
cld
mov
mov
movsb
cltd
gs
adc
or
adc
adc
mov
loope
sbb
enter
mov
cmc
and
jl
xchg
jns
xchg
mov
int3
xchg
inc
push
sbb
aam
shl
jb
nop
xchg
int3
fcom
pop
jb
jae
xchg
enter
dec
dec
sub
aam
add
mov
fcomp
in
imul
xchg
loope
enter
xchg
pushf
sbb
repnz
push
and
ror
enter
lret
cwtl
enter
pop
pushf
enter
xchg
and
das
das
xchg
enter
enter
xchg
xchg
xchg
nop
enter
cmp
loope
adc
mov
or
jge
enter
jae
sub
popf
xchg
inc
bnd
mov
repnz
nop
lret
fs
pop
xchg
mov
pusha
mov
mov
jne
sub
mov
lret
fs
xchg
and
in
fldcw
push
mov
fstps
and
or
fs
or
mov
addr16
inc
push
les
pop
enter
les
mov
std
es
xchg
int
xchg
in
sbb
mov
shll
lea
loope
xor
cmp
and
xchg
xor
inc
xchg
mov
and
lock
inc
hlt
shr
inc
xchg
enter
in
sar
lock
roll
addr16
sarl
shl
xchg
gs
nop
xlat
pusha
lahf
clc
sar
leave
fwait
and
call
cmp
lods
test
orl
mov
iret
mov
jb
in
mov
dec
dec
sub
mov
ja
int
mov
adc
sarb
rorb
out
in
xor
xchg
pushf
nop
int
inc
xchg
mov
ljmp
dec
or
pusha
loopne
jbe
mov
mov
stc
or
clc
xchg
mov
cs
sarl
test
mov
dec
enter
mov
imul
js
inc
enter
xchg
dec
inc
and
dec
pop
jb
nop
rol
jo
leave
mov
mov
or
dec
inc
jb
dec
enter
push
dec
add
inc
push
sub
daa
xchg
cmp
dec
dec
test
push
push
in
imul
call
mov
lock
mov
icebp
sbb
or
rep
stos
stos
or
mov
and
mov
mov
pushf
push
push
in
mov
stc
pushf
mov
mov
jb
mov
lods
xor
pop
dec
lock
imull
movb
mov
mov
enter
mov
add
mov
mov
xchg
xchg
add
mov
ds
daa
mov
xor
mov
pop
enter
cmp
aaa
lods
loope
shlb
cmpsb
inc
ret
sbb
mov
mov
test
pop
xchg
mov
sub
xchg
mov
jl
mov
push
cmp
dec
dec
in
mov
xchg
mov
ret
fcmove
test
es
mov
jp
ljmp
adc
rclb
adcl
mov
orl
mov
mov
xchg
lret
in
mov
mov
sbb
and
mov
repnz
mov
mov
inc
mov
jo
mov
in
jo
loope
xor
or
pusha
mov
or
mov
mov
add
mov
mov
nop
inc
push
mov
mov
mov
mov
mov
mov
mov
ds
daa
xchg
mov
mov
cmp
pop
enter
mov
cmp
lods
popf
inc
loope
loope
hlt
nop
mov
xchg
mov
mov
in
xchg
lock
movsb
jb
xor
call
das
xchg
lods
clc
lods
lock
test
in
das
call
lods
lret
sub
lods
hlt
lods
hlt
lods
test
clc
lods
outsl
pop
sbb
clc
lods
cwtl
loope
call
and
mov
xchg
adc
mov
ret
dec
nop
push
push
mov
imul
and
cmp
mov
mov
das
fs
stos
mov
stos
xchg
xchg
and
mov
stos
xchg
xchg
pop
repnz
gs
mov
xchg
shrb
stos
shrb
loope
mov
add
fwait
dec
add
push
subl
enter
subb
and
adc
das
das
mov
js
pop
repnz
test
test
leave
xchg
test
inc
xchg
jns
daa
mov
leave
sbb
push
dec
loope
js
dec
add
pop
push
push
ds
aam
cmpsb
movsb
ret
sbb
mov
jb
and
iret
and
push
xchg
cmpsl
cmpsl
cmpsl
pop
jb
in
xchg
cmpsl
cmpsl
cmpsl
jl
dec
sub
mov
cmpsl
cmpsl
enter
mov
adc
pop
xor
std
cmp
enter
adc
pop
adc
adc
jns
in
or
lret
in
adc
adc
xor
iret
hlt
xchg
sbb
sbb
and
loope
pop
and
leave
or
cwtl
cmc
fs
dec
mov
nop
inc
push
mov
pop
enter
cwtl
mov
jb
cmp
mov
add
test
cwtl
mov
pop
mov
xchg
cmp
mov
cmp
dec
push
enter
mov
pop
movsb
mov
pop
pop
push
pushf
mov
xchg
push
enter
mov
xchg
daa
dec
push
movsb
mov
movsb
mov
ret
test
mov
in
test
loope
jle
sub
pop
xor
jmp
outsb
add
jge
or
fs
mov
gs
inc
sahf
sahf
cwtl
xor
pop
sahf
sahf
sahf
cwtl
xchg
add
sahf
push
sub
daa
sahf
sahf
cwtl
sahf
sbbl
sahf
cltd
outsb
add
cmp
cltd
pop
or
jl
rclb
mov
enter
adc
sahf
sbb
and
sub
xor
subl
and
mov
pushf
inc
cltd
sub
pushf
and
xor
xchg
xchg
daa
dec
xor
xor
push
cltd
cmp
test
pushf
and
pop
sbb
mov
push
ret
push
dec
push
test
push
sbb
cltd
cltd
cltd
xchg
lret
test
cltd
lcall
cltd
cltd
lcall
cltd
cltd
test
lods
cltd
lcall
mov
and
cltd
add
rolb
movsb
ljmp
nop
xchg
xchg
xchg
rcrb
xchg
xchg
xchg
hlt
cltd
out
cs
repnz
xchg
les
lcall
nop
xchg
enter
and
stc
pop
fnstsw
ror
js
lcall
jecxz
xchg
in
mov
dec
sahf
cmp
test
adcb
lcall
repz
xchg
push
lcall
out
jl
mov
repnz
pushf
nop
push
gs
xchg
nop
xchg
cmpsl
xor
and
adcb
test
dec
js
jb
dec
fisubrs
xchg
or
jns
xchg
dec
mov
dec
pop
xchg
push
xchg
lods
lcall
xchg
inc
mov
loope
xchg
push
int
mov
addps
pop
xchg
loope
and
cmovs
scas
loopne
push
inc
in
loope
mov
push
sbb
sbb
in
jb
nop
lcall
jae
fwait
adc
or
dec
dec
sub
sbb
fwait
mov
and
out
push
sbb
mov
dec
sub
add
dec
sbbl
xchg
mov
mov
pop
mov
sbbl
xchg
xchg
mov
dec
cs
mov
loope
mov
fwait
mov
xchg
adc
enter
and
out
fiadds
pop
sbb
mov
jb
leave
rorb
cmp
test
lods
mov
jb
movsb
mov
pop
repnz
cmp
mov
pushf
mov
xor
arpl
mov
repnz
mov
sbb
rorb
push
cwtl
mov
in
scas
mov
jo
or
cmp
je
push
lret
lret
mov
jo
sbb
mov
inc
mov
mov
add
std
int
pushf
mov
mov
cmp
js
sub
repnz
adc
jmp
mov
loopne
sahf
push
fsubr
cmp
or
push
and
pusha
mov
xchg
mov
cmp
cmp
xor
lret
lret
xor
inc
mov
mov
in
mov
mov
pop
jns
fs
cmp
cmp
sbbb
inc
mov
pop
xorb
jb
jg
pop
in
xchg
pushf
lea
pusha
inc
movsl
loope
push
scas
adc
dec
push
inc
mov
mov
test
and
cmp
test
xchg
test
outsl
xor
push
xor
xchg
xchg
xchg
xchg
test
hlt
test
xchg
test
xchg
in
add
cmp
scas
sarb
xchg
dec
pusha
lods
add
xchg
movsl
dec
pushf
inc
add
call
sub
mov
test
enter
cld
pushf
jns
pop
addl
pop
push
addl
addl
cs
addl
loope
pop
fbld
and
sbb
je
jp
push
andl
cmpl
inc
pop
test
jns
sub
addb
sbb
nop
orl
nop
cmpl
cmp
orl
adcl
and
push
sub
stc
arpl
pop
mov
inc
sbb
sbb
jg
lods
popf
mov
jg
rcrb
jg
jg
and
mov
jg
add
popf
gs
or
pop
pop
jg
jg
xchg
jae
pop
iret
dec
jg
push
xchg
mov
sbb
push
js
xchg
lds
cmp
push
jb
xchg
adc
jge
jge
enter
jge
sahf
adc
inc
pop
pop
sbb
adc
sub
in
sbb
or
jge
lret
sbb
jge
sahf
repnz
dec
enter
jge
jge
and
or
ret
jo
push
dec
sahf
add
or
xchg
jge
jp
jp
push
cmp
loopne
aam
pop
fcoms
in
fdivrl
aam
pop
repnz
jp
jp
jp
dec
in
xchg
jp
jp
jp
in
push
jo
in
xchg
loope
adcb
mov
icebp
loope
loopne
mov
jns
or
jp
jp
js
leave
xchg
daa
movsb
js
js
js
push
dec
enter
js
js
js
xchg
jl
fcomps
out
dec
andl
out
aaa
repnz
test
call
in
adc
lods
js
js
xorl
js
sbb
jne
and
mov
or
pop
push
mov
mov
jne
cmp
leave
xchg
js
jbe
jbe
jbe
add
lahf
or
xchg
jbe
jbe
jbe
lahf
fs
pusha
mov
lea
mov
mov
pushf
sti
int
lahf
mov
or
test
jbe
mov
pop
loope
fs
sub
lahf
push
xchg
sbb
ret
popf
pop
push
pop
jbe
jbe
inc
push
jb
je
je
je
sbb
lret
xor
xchg
mov
mov
cmp
lods
cmp
je
je
je
je
pop
sub
je
cmp
insl
nop
pop
jb
je
je
loope
xchg
mov
lods
push
sub
jbe
fidivs
and
pop
cs
jno
lahf
jno
pop
push
jns
jno
lahf
jno
xchg
xchg
lret
jb
fs
sub
jb
dec
jb,pn
loope
push
add
jb
add
stc
in
nop
xchg
sbb
jno
in
jno
outsl
lret
jb
outsl
enter
pop
pop
pop
enter
outsl
int3
outsl
les
and
mov
cltd
dec
xchg
outsl
mov
outsl
enter
mov
outsl
int3
outsl
sbb
sbbb
xor
mov
cmpsb
push
dec
movsl
mov
outsl
mov
push
jb
xchg
mov
insl
nop
insl
pop
enter
insl
insb
mov
pop
pop
xchg
insl
mov
mov
in
xchg
insl
subb
lret
daa
nop
insl
nop
insl
mov
enter
insl
xchg
insl
xchg
aaa
lods
or
insl
test
out
mov
test
jp
add
inc
lods
and
dec
lea
in
inc
or
imul
imul
imul
xchg
lret
imul
pushf
push
imul
jb
adc
imul
pop
or
fwait
dec
imul
push
enter
jnp
imul
or
imul
inc
imul
mov
cmp
test
in
movsb
imul
loope
adc
dec
adc
cli
xchg
dec
pop
mov
cltd
mov
mov
or
xchg
cmpl
cmp
inc
push
in
call
lret
or
mov
mov
cbtw
mov
repnz
fsubs
callw
pop
pop
jns
data16
in
data16
pop
enter
data16
loope
dec
repnz
add
mov
faddl
mov
dec
sahf
pushf
in
aam
aam
test
lods
and
movsb
fs
mov
test
mov
lods
lock
movsb
fs
in
sbb
mov
cmpb
and
and
mov
clts
push
mov
xor
movsb
mov
mov
fs
je
push
jb
bound
insb
bound
repnz
jo
jl
je
and
pop
cmp
insb
bound
cmp
jns
bound
js
js
in
mov
jl
ret
fisubl
das
jl
pop
loope
sbb
es
bound
push
repnz
andl
cmp
push
cmp
inc
inc
pusha
xor
jl
xchg
xchg
inc
cmp
pusha
cmp
pop
repnz
xchg
mov
xor
leave
xchg
xchg
pusha
inc
pusha
inc
pusha
inc
pusha
inc
dec
enter
pusha
inc
pusha
aaa
lods
or
loope
xor
movsb
fs
pusha
les
sarb
lea
and
inc
scas
xchg
rcrb
or
sub
xchg
xchg
mov
add
repz
add
or
pop
aam
das
sub
daa
add
pop
add
clc
mov
cld
pop
inc
add
ja
std
pop
mov
in
pop
or
gs
in
sbb
pop
or
rol
and
stc
ja
pop
mov
call
and
in
mov
pop
pop
jb
mov
dec
dec
sub
pop
mov
pop
pop
pop
xchg
aaa
lods
add
icebp
sub
subb
sbb
and
nop
pop
xchg
pop
mov
nop
sbbl
xchg
xchg
xchg
pop
nop
pop
pushf
pop
xchg
pop
add
lret
mov
pop
repnz
lret
cwtl
pop
cwtl
pop
cwtl
pop
nop
adc
pop
pushf
pop
inc
imul
inc
repnz
adc
mov
mov
lahf
mov
outsl
and
jns
test
push
pop
push
and
push
push
loopne
enter
push
fs
pop
push
add
in
mov
push
push
push
pop
jns
fs
push
pusha
push
pusha
push
adc
pop
enter
push
fs
fs
repnz
push
push
repnz
sbb
movsb
xor
adcl
sbbl
push
cs
enter
movsb
push
push
jns
pop
push
push
pusha
movsb
push
loope
sbbl
pop
sbb
push
sub
and
sub
and
pop
or
push
xor
jmp
pop
xor
push
push
push
in
enter
cwtl
movsb
jns
pop
cs
push
push
mov
push
push
push
push
sub
push
int3
movsb
push
dec
cs
push
push
sarb
leave
fwait
loope
in
loopne
inc
pop
leave
sub
movsb
fcoml
pop
jns
fcoml
push
mov
test
push
hlt
movsb
jb
in
mov
mov
movsl
or
push
inc
jns
inc
mov
mov
sbb
push
movsl
gs
dec
enter
push
mov
imul
lods
push
cmp
and
movsb
push
nop
cmpl
dec
inc
push
push
jb
dec
je
push
movsl
cmp
repnz
test
dec
je
push
jmp
pop
je
inc
lea
mov
lret
orb
pushf
nop
push
sub
dec
leave
fwait
and
je
pop
leave
sub
cwtl
movsl
test
insb
dec
pop
jns
inc
insb
dec
inc
dec
inc
dec
lods
sbb
and
cmp
lods
movsl
in
in
inc
dec
dec
dec
inc
dec
inc
pop
mov
shlb
cld
or
dec
dec
add
push
mov
movsl
and
in
stos
dec
dec
dec
dec
dec
repnz
mov
mov
nop
push
jb
add
xor
enter
xor
or
dec
and
pop
cmp
dec
add
or
or
dec
or
sub
cmp
xchg
lods
add
adc
add
dec
sahf
lods
adc
dec
adc
cmpsb
or
and
adc
adc
fidivs
loope
add
outsl
sbb
dec
push
cmpsb
xchg
push
adc
cld
dec
jb
es
adc
or
inc
inc
pusha
in
mov
inc
pop
jb
in
cmpsb
inc
inc
inc
jl
dec
sub
inc
xchg
cmpsb
mov
inc
inc
aaa
lcall
sbb
and
cmpl
pushf
push
push
jb
inc
mov
in
in
cwtl
inc
movsb
inc
pushf
inc
cmpl
fs
inc
mov
inc
nop
adc
push
in
movsb
inc
movsb
inc
or
inc
lock
sub
in
inc
add
addr16
out
sbb
das
cmp
mov
inc
pusha
inc
xchg
sbbl
inc
push
mov
pusha
inc
insb
inc
fs
enter
xor
pop
inc
insb
inc
lea
pop
inc
mov
lret
push
test
inc
cmp
pop
inc
push
cmp
push
sbb
push
aaa
inc
inc
or
enter
inc
in
addl
inc
and
inc
nop
cmpsl
inc
add
sbb
inc
inc
mov
aaa
xor
inc
cmpsl
gs
cmp
aaa
xor
xor
rcrb
loope
lret
in
inc
xor
xchg
test
inc
enter
inc
ds
or
ds
cs
ds
cmpsl
movsb
jb
xchg
ds
lret
ds
cmpsl
ficoml
add
ret
dec
xchg
xchg
mov
mov
sub
ds
and
cmp
mov
cmp
das
fs
cmp
test
cmp
cmp
xchg
and
mov
cmp
xchg
pop
repnz
cmp
cmp
gs
sarb
pop
test
cmp
jns
daa
les
cmp
cmp
fwait
loope
mov
insb
test
pop
leave
sub
cmp
pop
jns
lods
cmp
cmp
mov
jl
subb
cmp
repnz
pop
mov
cmp
jns
mov
mov
mov
mov
das
in
lods
mov
mov
mov
jns
fisubl
mov
sub
and
test
das
cmp
je
je
dec
cmp
cmp
inc
cmp
mov
dec
cmp
cmp
dec
push
mov
test
daa
dec
push
push
inc
cmp
push
cmp
nop
xchg
xchg
cmp
test
pop
sbb
test
loope
in
outsl
mov
push
push
mov
xchg
push
and
cmp
ss
and
xor
jb
nop
test
jb
in
test
dec
dec
sub
ss
test
sbb
insb
loope
mov
and
aam
repz
xchg
sub
mov
aam
sub
jmp
fwait
lea
dec
mov
cmpsb
ss
xor
xor
xor
mov
jns
xor
xchg
lret
xor
fs
sub
xor
dec
cs
loope
adcb
aam
aam
add
movq
gs
inc
inc
push
adc
and
pop
xor
and
xor
nop
iret
xor
test
in
xor
stos
xor
mov
mov
lret
test
stos
gs
mov
lods
xor
xchg
mov
loope
pushf
xor
sbb
stos
inc
inc
insb
pop
or
inc
push
push
inc
sbb
sbb
das
das
cmp
mov
das
das
pusha
stos
out
cs
xchg
lahf
jne
sbb
in
lret
popf
stos
gs
and
je
loope
or
into
sbb
js
add
inc
fs
add
push
mov
pop
enter
stos
sub
jb
mov
daa
xchg
add
test
stos
sub
pop
sub
inc
dec
gs
fsubrl
push
jns
sub
sbb
sub
enter
add
hlt
sub
stos
inc
pop
pop
pop
clc
sub
cld
sub
stos
pmulhuw
sub
sub
sub
sub
sub
push
loope
and
dec
enter
sub
jb
adc
push
hlt
sub
push
sub
or
in
sub
sub
sub
pop
enter
inc
stos
and
das
das
shrb
sub
sub
mov
inc
or
mov
sub
sub
int3
sub
sub
imul
inc
push
jb
xchg
mov
push
xchg
cmp
pusha
sub
push
sub
test
es
stos
sub
xchg
lret
es
es
in
jb
shrb
dec
es
in
out
xchg
ds
hlt
stos
cld
jl
push
repnz
ret
outsl
jl
push
and
and
cmp
inc
pop
and
and
xchg
xchg
xchg
inc
push
and
and
and
outsl
leave
lret
dec
and
add
into
push
sub
cmpsl
jb
pop
and
and
cmp
scas
shl
and
and
pusha
lods
add
test
xchg
dec
lods
push
es
cmp
nop
dec
push
and
and
and
das
xchg
lret
and
and
and
nop
dec
and
and
jae
and
mov
and
mov
xchg
pushf
test
lods
in
inc
lcall
push
sbb
pop
pop
mov
lret
in
and
pop
pop
push
in
lret
pop
pop
pop
stc
pushf
pushf
push
pop
pop
pop
in
jb
adc
pop
pop
dec
fidivs
pop
ret
leave
clc
lods
or
or
pop
sbb
sbb
jb
nop
lods
sbb
dec
in
lods
sbb
mov
mov
mov
lods
gs
adc
cmp
mov
mov
daa
jns
pop
loope
movsb
sbb
cmp
in
das
cmp
loopne
sbbl
insb
sbb
ds
jl
je
in
sub
lods
insb
sbb
daa
sub
push
sbb
loope
mov
gs
dec
enter
sbb
push
adc
jmp
sbb
cmpsb
nop
dec
lods
xchg
push
mov
sbb
sbb
pop
repnz
shrb
sbb
in
sbb
inc
sbb
sbb
xchg
iret
leave
sbb
hlt
lods
sbb
pop
xor
sbb
loope
nop
xor
xor
or
andb
das
movsb
pop
movsb
call
xchg
mov
sbb
sbb
jns
popa
leave
sub
add
add
lods
sbb
and
pop
cld
push
sbb
add
or
add
inc
pop
mov
cmp
cld
push
or
cmp
mov
clc
push
or
or
or
in
lods
lods
dec
scas
or
or
ret
fisubl
das
or
push
loope
jo
es
push
pusha
push
inc
movsb
or
dec
push
test
push
sbb
adc
adc
lret
test
adc
adc
dec
sub
xchg
scas
adc
outsl
jb
cmp
adc
pop
pop
in
movsb
scas
mov
jmp
adc
or
aam
loope
xchg
pushf
sub
adc
into
add
inc
lret
pop
sbb
inc
sbb
adc
repnz
enter
mov
in
scas
adc
inc
adc
mov
test
nop
push
add
test
pushf
adc
pop
test
sub
movsb
rol
push
adc
fs
inc
adc
adc
pop
repnz
and
mov
adc
leave
dec
in
adc
adc
and
adc
dec
imul
adc
lds
adc
jno
push
mov
in
xchg
dec
adc
dec
adc
push
jb
sbbl
sub
sbb
xchg
xchg
pop
mov
scas
and
sub
and
leave
lret
pushf
scas
sbb
sub
in
lret
push
sub
sub
adc
lods
scas
sub
sub
cmpl
push
in
sbb
rolb
fs
or
push
adc
call
or
or
or
shr
or
or
or
in
hlt
sahf
lods
cmp
or
or
or
or
sub
dec
lock
hlt
or
enter
or
or
mov
psubw
sbb
ljmp
pop
or
inc
push
sbb
or
or
jb
lahf
or
mov
or
xchg
lret
dec
mov
or
or
and
push
stc
pop
mov
or
mov
jb
pusha
loope
iret
and
lods
or
xorb
in
movsb
or
or
cmpl
repnz
push
push
je
test
repnz
jl
test
je
pop
jns
das
test
jo
addb
push
sahf
cmp
pop
addb
gs
pop
adc
test
inc
pop
or
pop
loope
inc
xchg
adc
je
xor
sub
cmp
sbb
insb
pop
inc
add
dec
sahf
dec
add
repz
jb
add
add
stos
test
fists
mov
test
dec
int
mov
gs
dec
add
push
lods
loope
sbb
cs
mov
sub
add
push
jb
add
adc
pop
pop
enter
cmp
or
adc
and
add
add
daa
sub
in
add
add
add
enter
add
add
adc
or
add
je
xchg
aaa
lods
loope
add
test
xchg
mov
add
inc
push
repnz
add
add
add
pop
cmp
fadds
int3
add
lret
rolb
faddl
aam
mov
fs
add
add
add
ja
fadds
fadds
fmul
int3
mov
gs
faddl
imul
mov
mov
mov
mov
cmp
repnz
add
in
insb
sahf
hlt
mov
fs
sbb
sbbb
sarl
int
mov
mov
test
gs
mov
sbb
push
xchg
push
pushf
rol
push
repz
xchg
cld
cld
cld
inc
sub
fs
mov
decb
mov
push
mov
lret
mov
aam
mov
mov
pop
push
mov
mov
cmpsb
mov
cmpsb
mov
mov
lea
mov
dec
mov
sbb
test
xchg
insl
pop
inc
pop
test
sbb
lock
cld
leave
push
cld
enter
sub
sub
xor
xchg
inc
push
cmp
movsb
sub
xor
xchg
xchg
xchg
cli
sub
enter
xchg
pop
repnz
and
xor
enter
xor
xor
fdivs
or
cli
xor
fsubl
lods
loope
and
in
fidivl
gs
mov
sbb
adc
nop
sbbl
repnz
push
push
in
idiv
mov
negl
repnz
div
mull
mov
negl
and
cld
imul
idiv
notl
sahf
cmp
idiv
divl
mov
imul
push
jb
cld
mull
jns
fimull
iret
loope
in
imull
mov
inc
mov
scas
dec
aas
rcll
in
dec
dec
jb
scas
idiv
cmc
cmc
nop
int
daa
cmc
cmc
push
mov
lods
lods
mov
cmc
js
sbb
xchg
lods
cmc
cmc
cmc
insb
mov
cmc
cmc
cmc
decb
lods
cmc
cmc
incb
test
inc
ds
dec
fwait
xor
scas
pop
lods
cmc
lds
in
test
mov
jl
mov
mov
repz
dec
push
mov
repz
push
push
enter
repz
mov
nop
xchg
xchg
daa
mov
loopne
mov
sarl
nop
cmp
in
dec
hlt
mov
call
test
and
jns
je
dec
icebp
dec
icebp
test
icebp
add
jb
in
dec
icebp
push
icebp
dec
icebp
sub
icebp
push
icebp
inc
icebp
lods
cmp
mov
icebp
push
icebp
push
icebp
cmp
icebp
push
icebp
push
icebp
inc
fisubl
cmp
xchg
inc
push
mov
pop
or
icebp
or
push
jb
adcl
out
or
in
nop
push
pop
adc
sbb
mov
out
orb
out
repnz
or
sbb
sbb
adc
push
jns
out
nop
sbb
sbb
cmpl
fimuls
or
mov
cmpb
clc
add
sbb
and
fsubr
fsubr
mov
nop
and
aam
mov
xchg
xchg
xchg
pop
fsubr
in
fsubr
add
lret
aam
in
repnz
lret
loopne
loopne
loopne
nop
adc
in
in
push
push
mov
or
sbb
pop
xor
in
cld
mov
enter
mov
clc
in
cmpl
ljmp
test
pushf
ljmp
mov
ljmp
pushf
ljmp
cwtl
ljmp
jb
push
push
inc
mov
ljmp
lods
ljmp
outsl
pushf
ljmp
test
ljmp
ljmp
repz
call
push
sub
call
jl
enter
pusha
call
inc
mov
jo
mov
imul
cs
dec
movsb
loope
sbb
xchg
mov
cs
xor
leave
test
out
pop
mov
repnz
out
enter
xchg
xchg
xchg
out
out
in
mov
lahf
add
out
out
out
pop
jl
and
dec
cld
mov
mov
jb
mov
add
push
jb
dec
adc
pop
jb
out
out
jecxz
pop
cmp
cld
jecxz
in
jecxz
mov
jns
and
jecxz
in
jecxz
xchg
lods
sbb
mov
jecxz
in
sahf
lods
cmp
jecxz
in
in
in
and
sub
add
add
mov
enter
pop
loope
jns
sub
hlt
jecxz
mov
cmp
iret
in
sbb
jecxz
repnz
or
loope
loope
or
cmp
loope
loope
jl
lret
lret
loope
loope
mov
leave
loope
loope
loope
loope
mov
dec
mov
pop
enter
mov
imul
xchg
movsb
int
or
lock
movsb
iret
add
lock
lock
movsb
leave
popa
cmp
mov
leave
mov
in
pop
jns
fisttps
test
mov
leave
lret
enter
mov
clc
test
leave
lret
xchg
filds
mov
in
fists
filds
fists
mov
loope
test
sbb
mov
inc
xor
adc
filds
pop
jns
jl
push
fstl
lods
sbb
pop
fisttpll
mov
in
in
fstpl
fstl
repnz
pop
mov
fstpl
pop
fstpl
pusha
mov
in
lods
pop
fstpl
push
cmp
loope
jae
xor
dec
fnsave
rorb
mov
in
scas
mov
sbb
or
cmp
and
adc
test
sbb
and
sbb
test
adc
add
adc
and
adc
and
fistl
test
sub
into
mov
mov
xchg
adc
mov
mov
inc
fwait
xor
scas
sub
lds
loopne
sbbl
in
call
nop
xchg
fcomp
mov
fsubr
fmuls
mov
fmuls
push
enter
fsubr
fsubr
fcoms
fcoms
mov
test
mov
scas
loope
sub
sub
mov
xchg
ret
hlt
inc
aam
aam
enter
test
lods
mov
lret
or
movsb
xor
test
fs
lret
mov
lods
pop
mov
cmpl
repnz
mov
push
pop
enter
mov
dec
repnz
mov
loope
movsb
jl
mov
xor
pushf
pop
cmp
dec
jo
je
js
push
dec
in
insb
aam
jo
pop
inc
pop
pop
jl
je
mov
aam
push
enter
push
xchg
daa
dec
js
js
sarb
cmp
jl
jl
enter
vpunpcklqdq
add
or
mov
xchg
sbb
aam
fs
ror
inc
push
jb
rolb
xor
pop
pop
pop
enter
rolb
shl
and
xor
inc
rclb
rolb
inc
rorb
lret
rcrb
mov
lods
or
sbb
dec
push
jb
xchg
sub
sbb
in
cmp
call
in
das
cmp
add
add
nop
xchg
sbbl
cld
iret
inc
mov
add
or
add
fs
cld
iret
or
clc
iret
xchg
daa
dec
push
or
or
or
je
pushf
nop
xchg
mov
out
pop
sbb
or
js
outsl
cld
iret
sub
and
xor
xchg
push
push
hlt
iret
div
iret
repnz
dec
enter
ror
xchg
adc
jns
int
mov
lahf
xchg
xchg
int
int
mov
pop
in
int
int
int
int
pop
jl
ror
shlb
xor
int
inc
xchg
add
negl
push
xor
in
mov
sub
int
int
lret
pop
cmp
inc
xchg
lret
cwtl
lret
mov
jns
and
clc
mov
xchg
lods
sbb
xchg
lret
sbb
mov
pushf
sahf
lods
cmp
lret
mov
cwtl
lret
cwtl
lret
and
sub
lret
sub
pushf
lret
ss
lret
pushf
lret
xor
leave
dec
fidivs
push
repnz
dec
push
mov
pop
cmp
dec
pop
leave
pop
leave
pusha
leave
das
fs
push
leave
push
mov
das
das
fs
pop
leave
js
push
xchg
pop
repnz
leave
fs
push
leave
pusha
gs
xchg
leave
pusha
leave
pusha
leave
mov
fs
fs
fs
cmp
sub
cmp
stc
sbb
dec
leave
ret
dec
leave
sahf
cmp
jb
and
sub
sbb
gs
push
mov
cmp
addr16
mov
enter
sbb
sub
sub
pop
loopne
in
mov
inc
pop
sub
sub
loope
in
pop
sub
hlt
mov
rorb
or
pushf
out
pushf
out
add
pushf
out
adc
leave
cmp
dec
push
adc
call
in
pop
lock
in
add
and
das
das
call
les
pop
repnz
xchg
mov
loopne
leave
xchg
xchg
lock
lock
lock
daa
fs
mov
les
and
jecxz
ja
movsl
dec
mov
push
gs
mov
jge
les
cmp
mov
mov
mov
jb
sub
pushf
in
mov
ret
ret
in
out
test
mov
jo
jb
ret
add
mov
dec
add
loope
lods
ret
pop
or
test
pushf
pop
add
nop
out
ret
ret
leave
dec
js
jl
add
adc
je
mov
lahf
xchg
xchg
sarb
rolb
in
shlb
rolb
add
gs
test
pusha
sub
xor
inc
mov
scas
inc
fwait
lret
sub
in
das
cmp
mov
sbbl
cmp
or
mov
mov
push
enter
mov
xchg
daa
dec
push
dec
mov
inc
test
dec
mov
and
sub
cmp
push
mov
pushf
out
or
push
repnz
ret
xor
or
inc
adc
lret
lret
or
mov
cmpl
repnz
mov
adc
mov
mov
mov
inc
dec
sub
lods
mov
scas
or
cmp
inc
push
aam
fdivrs
inc
push
mov
aam
xchg
xchg
xchg
mov
mov
enter
fdivrs
fdivrs
mov
fdivrl
jb
sub
mov
cmpb
les
sbb
and
mov
mov
mov
mov
xchg
mov
mov
mov
mov
xchg
mov
mov
mov
repnz
mov
mov
mov
movsb
mov
mov
mov
adc
dec
loope
xchg
mov
cmp
xchg
mov
movl
mov
pop
cmp
pusha
mov
mov
mov
das
fs
mov
mov
xchg
xchg
and
fs
mov
pop
repnz
mov
mov
mov
gs
push
mov
and
insb
mov
mov
xor
cmp
loope
pop
mov
es
lret
enter
push
stc
push
adc
nop
mov
mov
xchg
lret
test
mov
mov
dec
sub
lock
push
cmp
dec
dec
in
mov
in
leave
mov
mov
mulps
adc
and
mov
sub
mov
inc
push
repnz
mov
mov
mov
pop
cmp
clc
mov
mov
mov
lock
mov
mov
mov
in
mov
mov
mov
jns
fs
mov
mov
mov
mov
cld
mov
mov
mov
cmpsb
mov
pusha
loope
in
mov
jb
dec
jo
cmpb
mov
mov
scas
sub
cmp
mov
scas
test
mov
scas
nop
xchg
lods
sbb
mov
dec
sahf
lods
cmp
scas
shrb
and
sub
scas
mov
enter
mov
sub
mov
int3
mov
loopne
sbb
ret
lods
scas
subb
mov
and
sub
lods
jl
enter
js
mov
lods
mov
add
mov
lods
loope
jl
inc
mov
and
in
mov
sbb
in
cli
in
jae
pop
in
cli
in
cli
in
jb
push
je
leave
je
dec
stos
pop
cmp
inc
dec
stos
push
stos
inc
stos
jns
and
xor
dec
stos
push
stos
das
jns
jns
stos
pop
inc
stos
push
stos
cmp
jns
inc
stos
push
stos
push
stos
test
push
stos
fisubl
das
in
stos
push
stos
insb
loope
es
leave
inc
stos
jl
or
gs
mov
jge
stos
dec
sahf
cmp
adc
or
mov
inc
sub
pushf
in
mov
test
or
sbb
in
out
or
or
jb
test
gs
sbb
sbb
dec
dec
add
loope
or
pop
cmp
or
test
in
pop
add
nop
cli
add
test
repnz
dec
fsubs
xchg
adc
aam
mov
lahf
xchg
xchg
movsl
fsubl
ds
in
movsl
shlb
cmpb
and
movsl
shlb
jns
test
movsl
in
jb
pusha
sub
push
pusha
xor
dec
scas
inc
fwait
lret
sub
movsl
das
cmp
movsl
mov
xchg
sbbl
pushf
mov
mov
mov
push
enter
mov
xchg
daa
dec
push
test
test
test
jo
pushf
nop
xchg
shrb
mov
jns
sub
pushf
mov
sub
in
cli
add
push
fsubl
hlt
decb
enter
hlt
sbb
push
dec
lds
cmp
nop
xchg
sbbl
mov
mov
mov
push
enter
mov
xchg
daa
dec
push
jo
jo
jo
enter
xchg
shlb
adc
sbb
je
int3
loope
loope
cmp
mov
sbb
and
xor
nop
cmpl
sub
in
and
das
xchg
lahf
cmp
xor
adc
repnz
xchg
shrl
lahf
sub
leave
xchg
xchg
lahf
cmp
and
fs
cmp
cmp
sbb
push
jns
lahf
and
or
sub
xor
or
rclb
xchg
mov
clc
pushf
jb
sbbl
add
adc
cmovs
ret
popf
inc
jo
roll
mov
lock
add
enter
js
add
add
xorb
loope
mov
mov
or
or
xlat
fucomp
pushf
in
pushf
rcrb
lcall
mov
inc
rcrb
pushf
in
sarl
out
lcall
scas
adc
shll
lcall
loope
nop
faddl
sbbl
dec
and
mov
lcall
lcall
nop
adcl
das
das
xchg
cwtl
sbb
repnz
xchg
ret
xchg
cwtl
and
xchg
xchg
cwtl
nop
cwtl
nop
cwtl
nop
cwtl
and
fs
xchg
cwtl
xchg
cwtl
cmp
push
jns
cwtl
sub
jne
mov
cmp
sbb
clc
xchg
clc
xchg
jl
leave
dec
pop
add
jl
push
xchg
push
jns
in
xchg
pop
xchg
dec
xchg
ret
xchg
adc
pop
xchg
push
xchg
pop
in
lahf
ret
pop
xchg
dec
xchg
xchg
and
pop
xchg
pop
xchg
pop
xchg
ret
nop
cmp
pop
xchg
push
xchg
loope
dec
jb
cmovl
js
rcrb
adc
and
mov
jge
ret
mov
inc
add
add
sub
clc
lcall
imul
pop
inc
lock
adcb
repz
out
mov
cmp
cmp
call
dec
cs
and
jns
iret
loop
adc
inc
pusha
mov
cmp
inc
js
in
jg
in
js
pushl
add
cmpw
je
or
incl
pop
jmp
jl
add
lea
fistpll
loopne
test
pop
push
movzwl
or
mov
div
lock
jo
fmuls
adc
sub
sbb
leave
je
in
add
push
nop
mov
cmpl
movzbl
push
clc
xchg
pop
pop
jmp
mov
inc
and
push
pop
je
inc
jmp
sub
inc
cmp
mov
jge
out
es
jne
pop
xor
xchg
add
cld
imul
jo
or
outsl
out
push
js
shlb
iret
cmp
ret
jne
neg
pop
pop
pop
pop
ret
mov
mov
je
mov
inc
test
jp
pop
inc
sbb
mov
mov
pop
cmc
jle
rolb
roll
add
cld
push
sbbl
je
test
push
mov
jmp
lea
stos
sub
ret
adc
std
out
loopne
push
cld
int3
add
or
push
inc
cs
fisubs
cmp
add
int
xchg
mov
jns
jmp
or
jmp
std
fistpll
jmp
stc
or
sbb
mov
outsl
idiv
mov
add
add
mov
fdiv
mov
xor
divb
ret
pcmpeqw
and
aad
jo
or
adc
inc
add
mov
mov
push
mov
dec
adc
decl
or
test
and
cmp
mov
incl
sub
add
rorl
or
adc
mov
outsb
add
or
or
add
stos
je
inc
popf
fidivrs
dec
push
fbstp
pop
aad
push
cmp
in
sub
and
cli
push
push
sub
mov
sbb
inc
add
or
push
fdivrs
dec
push
mov
push
jne
pop
push
nop
mov
cmp
xor
mov
mov
dec
xor
lods
loopne
mov
outsb
lret
call
fbld
push
push
sti
pop
cmp
push
aas
push
out
cmp
pop
mov
adc
into
jmp
sbb
mov
rorl
sbb
scas
notb
cmp
sbb
mov
pushf
testb
adc
aam
push
pop
fcmovnbe
fidivrs
jne
push
push
inc
test
add
mov
je
addr16
rorb
dec
out
shl
cwtl
push
push
inc
pop
cmp
mov
cmp
js
pop
enter
pop
aaa
gs
pop
sub
pop
jo
add
in
orb
xchg
ljmp
and
mov
sub
inc
jl
out
cmp
xchg
push
jge
mov
jg
add
test
push
cmp
jle
inc
mov
add
fs
ljmp
insl
or
stc
add
addb
lock
push
sbb
or
xchg
adc
add
mov
adc
imul
add
or
clc
stos
mov
jge
int3
lea
fimull
je
push
je
loopne
lret
adc
jl
scas
add
rorb
pop
inc
push
roll
mov
jbe
mov
fstpl
addl
lcall
stc
add
or
orb
xor
push
ja
fcoml
sbb
or
dec
fcomip
push
add
incb
mov
add
lods
jmp
or
std
inc
cld
mov
dec
or
push
jecxz
iret
push
loop
hlt
and
rcr
das
lods
or
jb
and
adc
add
lahf
mov
jno
or
insl
sbb
mov
mov
cmp
fs
add
pop
rcrl
es
fstpl
or
daa
test
pop
aam
pop
mov
xor
cwtl
scas
jmp
or
cmpl
outsb
enter
push
fldl
ret
push
xchg
mov
daa
xor
cmp
mov
test
loope
pushl
xchg
mov
add
jae
pushf
int3
scas
fidivs
pusha
dec
jbe
cs
xor
adc
out
sti
dec
fcomps
pop
push
add
add
mov
rcrl
push
mov
stos
aaa
mov
and
mov
push
std
es
pushl
pop
pop
jo
cmp
decl
push
fs
je
lea
mov
mov
mov
mov
mov
jl,pn
add
adc
push
js
xlat
pop
mov
adc
call
ret
fs
hlt
mov
ret
fs
sub
ja
cmpl
or
cmp
addb
push
or
aaa
adc
mov
push
or
or
xchg
mov
inc
add
imul
mov
mov
xor
pop
inc
xor
and
rcl
loopne
cmc
cld
sub
testl
jne
and
orl
lea
jl
jae
or
popa
mov
inc
push
push
lea
inc
outsl
stos
or
push
pop
pop
orb
xor
dec
push
jecxz
and
adc
cmp
push
and
or
fiaddl
stos
or
or
call
out
sbbl
adc
add
jg
sub
xor
je
mov
push
push
sbb
add
add
push
jo
cli
pop
lock
push
dec
andl
mov
mov
pushf
data16
out
jne
call
jmp
xor
cmp
insb
cmp
xor
push
into
pop
add
lods
jo
or
jmp
add
add
sarb
mov
fimuls
movsb
add
pop
cmp
xchg
rcll
fistps
test
or
ss
stos
mov
cmp
test
mov
push
pop
and
hlt
add
pop
dec
adc
jno
cmp
jb
mov
das
sub
xorb
cli
inc
jae
pop
push
xchg
je
xchg
push
fistpl
jmp
mov
jnp
mov
scas
movb
ret
dec
addr16
je
mov
add
movhps
jmp
add
add
mov
call
mov
mov
orl
cmp
sar
mov
or
rcll
lret
cmp
sub
or
in
shll
add
or
jne
mov
insb
frstor
data16
add
cmp
scas
and
test
cmp
lea
and
popl
shlb
mov
push
push
loopne
push
pop
mov
push
sub
je
xchg
mov
out
imul
mov
add
call
je
scas
sbb
fcmovnbe
call
jae
cmp
jne
adc
xlat
ss
pop
push
lea
cmp
and
test
rorb
inc
add
ss
call
push
cmp
jne
mov
inc
push
jns
aaa
ret
adc
mov
push
xor
outsb
mov
inc
jmp
cmpb
or
jbe
inc
sbb
ja
out
sub
push
mov
mov
xor
cmp
dec
cmp
dec
lcall
jmp
cmp
je
cmp
je
inc
push
fistps
je
add
call
jg
cmpsl
add
sub
repz
bound
fcomip
mov
je
push
push
jae
call
xchg
and
cmp
js
pop
push
pushl
or
rcr
fcompl
std
outsb
jne
pop
decl
lods
jo
mov
mov
add
inc
into
add
pop
sub
inc
dec
adc
mov
xchg
cmp
andb
pop
mov
adc
pushf
stc
cmp
lcall
mov
push
push
aas
sbb
and
push
or
test
push
sbb
test
dec
xchg
imul
adc
adc
test
mov
cs
ficompl
and
pop
pop
pop
xor
mov
imul
xor
mov
int
cld
adc
add
cli
jl
test
je
shrb
div
addb
mov
jp
jl
mov
mov
xchg
out
push
inc
inc
pop
aad
into
sbb
cmp
xchg
outsl
jae
cmp
inc
cmp
out
mov
xorl
mov
inc
lret
or
inc
aaa
mov
adc
jne
jne
dec
jbe
data16
fldcw
sbb
pushf
add
sar
xlat
push
add
das
enter
clc
add
mov
dec
or
add
inc
jmp
and
sub
jle
push
cmpb
fimull
fcomip
mov
jmp
outsb
or
xor
xor
sete
mov
fmuls
rorl
push
inc
adc
push
pop
in
and
jne
add
cmpl
xchg
sbb
xorb
push
sbb
push
ja
xor
jno
pop
push
push
popa
mov
sbb
daa
sbb
test
ja
add
inc
xchg
mov
add
cmp
jbe
shlb
xor
subb
or
sbb
je
mov
inc
sub
aas
fdivrp
cmp
cs
sbb
addl
or
dec
ret
addr16
cmpsb
push
out
inc
inc
adc
jne
or
mov
pushf
sar
sbb
add
fdivp
fwait
mov
xor
xlat
push
jmp
xor
mov
inc
shlb
push
push
jbe
fwait
pop
and
push
sbb
dec
je
loopne
pop
adc
ret
jmp
and
or
arpl
jle
je
rorb
idiv
or
sub
inc
aam
mov
push
imul
or
lea
or
jp
adc
or
cmp
inc
subb
push
sbb
inc
das
xor
inc
into
and
xchg
lock
fiaddl
movb
push
out
add
or
ret
cwtl
sbb
lds
dec
lock
xor
mov
lea
jl
in
cmp
or
push
mov
cmp
decl
shll
pusha
or
inc
mov
add
add
jl
jmp
pop
sub
push
mov
mulb
pop
aaa
jg
mov
test
cld
or
jne
dec
int3
loope
popa
test
mov
clc
add
gs
add
lahf
inc
enter
or
dec
add
decl
sbb
inc
add
cmp
jl
mov
lea
jne
adcb
ret
test
add
push
adc
loop
cld
ret
dec
neg
sbb
sbb
mov
push
cmp
mov
jp
pop
push
int
and
fwait
enter
dec
aam
adc
jne
or
dec
cmp
mov
cmp
jl
pushl
les
sub
jp
js
add
jo
mov
stos
xor
je
sub
cmp
shl
aad
mov
sahf
mov
sarb
inc
sub
and
push
mov
test
sub
movsb
inc
inc
clc
pop
dec
push
or
leave
mov
or
jmp
xor
mov
shl
cmp
xchg
pop
sbb
call
loopne
and
idiv
mov
test
jmp
icebp
mov
add
in
pop
int3
mov
shll
das
pusha
inc
test
pop
and
nopl
mov
cwtl
cmp
sub
push
inc
clc
sbb
call
push
cmp
inc
sahf
int
pusha
incl
push
cmp
inc
cmp
pushl
test
fs
int
outsb
dec
adc
inc
sub
jmp
lea
cmp
sub
rcll
lea
adc
adc
cmp
add
lret
push
add
jb
adc
or
mov
repnz
or
mov
sub
inc
dec
fneni(8087
jp
lods
pushf
adc
and
faddl
mov
sub
jne
pop
mov
add
mov
idivb
daa
inc
bound
jo
cmp
je
mov
rorl
mov
shr
adc
or
mov
jge
xchg
dec
lahf
push
push
mov
aam
pop
pushf
mov
sbb
mov
nop
adc
insb
push
enter
imul
or
mov
and
inc
aas
add
mov
xchg
mov
cmpb
es
xor
int3
pop
movsl
or
inc
mov
xor
push
dec
jp
or
pop
add
mov
sbb
dec
push
xchg
orl
loope
mov
ds
pop
xchg
jno
ljmp
enter
push
and
je
je
cmp
jl
cmp
jg
inc
jmp
pusha
cmp
inc
pop
pop
fsubr
inc
xchg
dec
add
pop
push
push
mov
repz
std
mov
cmp
ret
xor
mov
sbb
adc
pop
and
add
and
icebp
roll
nop
and
dec
adc
lods
sti
or
cmp
mov
cld
add
mov
or
cmp
xchg
xchg
cmpsl
push
push
jne
adc
rcrb
xor
jmp
jle
fildl
push
push
ss
idivl
mov
or
and
daa
mov
movhps
mov
daa
popf
xor
adc
or
mov
inc
cmp
cltd
loopne
mov
add
push
push
push
es
pop
push
or
or
ljmp
test
cmp
jge
cmp
jl
pop
mov
enter
bswap
jle
enter
ret
mov
adc
jg
jle
push
xchg
scas
loop
jo
or
xchg
xor
mov
call
xor
mov
mov
cmp
sbb
pop
test
mov
adc
add
adc
dec
stos
add
mov
xchg
or
hlt
inc
shrl
mov
sahf
sar
stc
push
cld
lea
pop
and
test
and
adc
sbb
add
jge
pop
sub
add
dec
add
jmp
ficoml
dec
add
jg
ja
add
push
clc
cmp
jle
rcrl
jmp
adc
add
stos
mov
pop
adc
dec
push
or
jne
jb
mov
inc
and
lods
jnp
sub
adc
pop
sub
adc
mov
xlat
jne
push
mov
ljmp
push
lret
jns
add
dec
sbb
adc
cmp
jl
insb
inc
and
sqrtps
es
data16
mull
adc
lea
jl
push
push
mov
add
sub
aaa
xor
jecxz
sub
pop
mov
jo
and
sbb
add
mov
adc
addr16
cmpsb
repnz
pop
sbb
mov
fisttpl
rcrb
and
or
mov
outsb
fsubl
loopne
je
clc
cld
lea
add
rolb
cld
imul
mov
mov
mov
jmp
inc
lea
int3
mov
sbb
sub
stos
roll
movsb
and
inc
fisttpl
sbb
push
lea
inc
sbb
cmp
push
push
pushf
cmpsb
mov
fwait
sbb
add
andl
mov
mov
adc
cmp
lea
mov
negl
sub
cmp
sahf
stos
pop
add
jmp
repnz
push
notb
lret
or
mov
sub
or
das
cli
pop
cld
add
xchg
out
jnp
imul
mov
and
jge
lea
lcall
pushf
adc
jne
sar
push
dec
pop
jle
or
nop
iret
jbe
mov
adc
inc
cld
inc
fldl
or
insb
cmp
jae
mov
test
out
hlt
add
xlat
and
decb
push
ljmp
loopne
pop
inc
mov
out
mov
lcall
std
stc
adc
clc
sbb
sbb
dec
pusha
xchg
or
cmp
testb
and
lods
cmpsl
loop
in
out
sub
shl
inc
mov
dec
pop
or
mov
fnsave
ss
cmpb
jbe
inc
shrl
jle
imul
jl
jnp
jl
pop
mov
adc
outsb
mov
cmp
sub
js
cwtl
movsl
jle
jl
pop
nop
rorb
and
xchg
popa
test
stos
or
mov
cmp
mov
fs
push
pop
add
mov
or
cs
jg
shll
mov
fisubs
mov
inc
mov
jae
cmpb
or
mov
jmp
or
sbb
mov
or
jmp
dec
adc
jle
adc
pop
add
cmp
and
lock
mov
cli
sahf
jp
push
icebp
in
pop
int
int
fsubs
lsl
movsb
addb
or
repnz
cmp
push
or
incb
andl
inc
adc
std
loope
jns
andl
and
push
add
addr16
and
mov
adc
rcrl
roll
adc
lds
and
enter
and
pop
or
in
push
lea
push
xchg
mov
cmp
scas
mov
push
call
mov
jmp
push
insl
mov
xor
xor
cmp
pop
ds
sbb
in
lock
ja
cli
aas
push
call
out
push
clc
lcall
adc
cs
dec
stos
inc
shr
sbb
js
add
rorl
or
mov
mov
cmp
push
and
or
jne
add
cmp
jmp
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmpl
aaa
dec
in
outsb
jmp
es
mov
cs
test
pop
lock
divl
sbb
mov
mov
cmp
fiaddl
test
xchg
sbb
ss
sub
adc
mov
insl
add
and
imul
fbstp
mov
jne
mov
cld
jge
pop
and
mov
and
or
je
mov
lret
scas
arpl
in
dec
scas
into
mov
or
pop
test
jl
shl
inc
jmp
mov
stc
cmc
cli
fiaddl
test
add
cmp
jle
rcll
divl
or
adc
sub
inc
jl
cmp
cli
std
adc
in
and
mov
decb
jne
mov
jge
mov
and
jmp
das
push
jno
sbb
and
push
insb
ljmp
inc
adc
xor
cmpb
sub
sbb
adc
xchg
push
stos
lret
jl
test
inc
test
push
decb
jge
mov
fstps
or
mov
les
insl
roll
jl
jmp
push
push
lea
or
arpl
sub
out
or
aam
mov
mov
mov
cld
repnz
add
inc
add
push
inc
lea
outsl
mov
sbb
sbb
cmp
das
pop
sbb
xlat
and
jno
hlt
adc
shll
mov
and
inc
sbb
je
mov
loope
cmp
sbb
or
insb
test
movsl
pushfw
mov
je
push
push
ror
je
xor
or
jbe
dec
sub
push
stc
scas
in
jge
stos
clc
dec
dec
mov
lds
inc
mov
fs
add
cli
or
inc
or
fcmovnbe
mov
xchg
outsb
imul
mov
dec
mov
add
add
dec
cmp
or
or
loopne
out
add
push
cmpsl
aad
call
lea
sti
dec
mov
inc
out
dec
in
mov
paddsb
ds
movl
fucomp
and
mov
movl
dec
pop
lock
jbe
cmp
add
push
clc
add
mov
dec
or
push
icebp
sub
sahf
inc
test
mov
clc
ficoml
test
hlt
mov
jne
or
mov
adc
mov
ret
imul
das
inc
xlat
lea
sub
aas
stos
push
push
mov
add
mov
mov
mov
scas
adc
lea
jle
nop
dec
adc
add
fldenv
popl
xor
push
sbb
pushf
pop
mov
jmp
pop
jbe
cmpsl
clc
sub
and
mov
pushf
nop
jge
mov
dec
or
adc
adc
add
fidivl
stos
lods
pusha
cmpb
adc
xchg
mov
mov
sbb
adc
jg
or
dec
xor
mov
or
dec
pop
xor
popf
adc
cmpb
add
lret
and
sbb
inc
xchg
test
and
ret
adc
ja
dec
test
and
mov
clc
inc
mov
movsl
jge
sub
pop
insl
insb
pop
xor
and
lret
shll
jbe
inc
cwtl
imul
add
lcall
inc
cmp
out
add
je
repz
jne
movsb
and
and
lea
push
movsl
jmp
ja
mov
shlb
or
sbb
in
or
cmp
fstpt
movsl
imul
pop
dec
dec
pop
cmp
movnti
setb
cmp
dec
gs
bswap
test
dec
mov
sbb
add
or
lret
pop
jecxz
js
call
mov
fistpl
and
mov
adc
push
aaa
mov
jmp
xor
movzbl
add
push
jne
pop
inc
adc
je
pusha
inc
imul
sbb
leave
pop
pop
or
int
lahf
cli
sbb
ret
mov
xor
aam
jne
push
xor
es
xor
push
sarb
fcomip
cmp
je
int3
xor
sub
pushf
nop
imul
rcl
xor
pop
add
aas
inc
roll
call
stos
mov
shufps
out
pop
jge
pop
cld
movsl
divb
mov
test
sbb
cmp
add
xchg
lods
add
out
movsl
nop
lea
mov
shl
stos
lea
sahf
lret
je
mov
fnstsw
or
ja
cld
xchg
mov
inc
or
cmc
inc
inc
cmpb
add
test
mov
ret
or
add
shll
add
mov
sti
xor
jbe
loopne
movsl
movsl
pop
mov
push
pop
js
jns
dec
cmpsb
pop
loopne
push
test
inc
cmp
out
jb
push
jae
test
mov
loopne
test
cmp
jnp
push
popa
xor
pop
iret
loopne
or
sbb
andl
stos
mov
je
xchg
hlt
cld
jne
push
fbld
movsb
je,pt
sub
sbb
icebp
or
add
lcall
push
ret
adcb
stos
imul
mov
addr16
dec
adc
in
push
mov
idivb
sarb
xchg
hlt
mov
mov
adc
aaa
push
push
lea
adc
or
repnz
push
inc
mov
rorb
in
scas
and
push
rep
inc
inc
mov
push
loop
pop
pop
push
fisttpll
fistps
push
lea
push
mov
cmp
push
imul
pop
pop
add
xor
mov
test
je
push
jecxz
cmpsl
cmc
adc
nop
add
or
dec
sbb
and
sbb
mov
jmp
sub
jb
or
fcmovnbe
cmc
xor
mov
test
insl
mov
or
push
popf
cmp
and
loopne
addl
leave
inc
adc
push
or
mov
xor
pop
clc
dec
into
int3
add
dec
pop
pop
push
push
mov
idiv
and
cmp
jbe
cmp
jb
push
test
mov
jb
rep
jmp
in
push
xor
mov
or
loopne
add
test
inc
cmp
push
sbbb
push
shlb
rorl
and
mov
or
lods
adc
xor
dec
push
and
add
cmpsb
add
mov
inc
inc
jg
dec
out
fidivrs
cmp
xor
sub
sbb
repz
adc
mov
mov
call
cmp
in
lock
loope
iret
repz
clc
clc
cld
sbb
or
faddl
lock
adc
xlat
pusha
jmp
jo
jl
pop
xor
adc
mov
repz
xor
ret
push
adc
lea
pop
rorl
and
std
cld
out
lock
sub
insb
sub
fsts
gs
sub
dec
pop
nop
or
ror
jnp
sub
push
fiaddl
je
add
mov
lods
mov
aas
xchg
outsb
fwait
mov
add
add
fisubrl
outsb
in
nop
dec
dec
push
pop
add
mov
mov
repz
push
mov
int3
repz
dec
das
sbb
iret
repz
sbb
adc
adc
cmp
repz
or
or
sbb
repnz
add
adc
sbb
das
sub
xchg
cmpsb
push
add
pop
pop
popa
push
add
daa
outsl
push
js
das
aad
lret
add
ret
lock
jo
rclb
sti
push
mov
push
je
call
mov
adc
xchg
or
pop
ja
and
je
mov
and
sbb
addb
clc
jle
mov
xor
push
push
mov
add
lods
sbb
notl
xor
pop
push
jne
jmp
movb
add
sub
jne
pop
dec
js
out
cmp
jecxz
je
inc
cmp
sbb
inc
test
mov
ret
repz
cmc
out
je
jne
test
insb
les
popa
in
xor
lret
repnz
push
dec
rorl
sub
inc
fcmovne
or
jb
sbb
lret
repz
add
shlb
stos
or
mov
mov
test
rcrl
cs
aas
mov
aaa
cmp
add
add
or
out
adc
or
je
enter
or
or
sub
mov
jbe
ret
jne
shufps
shl
inc
ret
xchg
ret
filds
inc
mov
inc
pusha
loopne
add
cmp
data16
lret
xchg
add
mov
out
inc
ret
push
je
cli
sbb
xor
lea
pop
add
push
cmp
inc
xor
and
sarb
ret
insb
mov
or
cmp
pop
jbe
and
mov
cmp
sub
xchg
pop
push
jbe
or
and
shlb
add
int3
lahf
in
repnz
dec
inc
dec
lock
mov
push
mov
sub
mov
pop
or
push
add
iret
sarl
hlt
in
in
dec
jo
add
or
dec
pusha
dec
lahf
adc
push
rorb
loopne
cmp
enter
fcoms
clc
push
and
inc
dec
push
lahf
rorb
out
fstl
and
test
iret
repz
xchg
pushf
movsb
mov
pop
add
add
call
pop
cmp
dec
dec
ja
push
pusha
push
inc
sub
or
je
adc
push
je
sub
inc
cmp
pop
xchg
ror
or
xor
mov
test
push
pushf
xchg
dec
mov
add
pop
rcrb
incb
xor
cwtl
pop
pop
jnp
push
cmp
add
or
incl
scas
pop
push
lock
xor
inc
mov
mov
mov
lods
rsqrtps
test
sub
xchg
push
lea
js
pop
inc
bound
or
jne
jmp
andl
xchg
insb
testb
xor
pop
out
adc
faddl
clc
sub
inc
dec
mov
sbb
push
add
and
and
daa
add
sbb
test
adc
aas
test
fmulp
lret
or
and
addr16
xchg
pushf
dec
cmp
jbe
dec
inc
jmp
inc
mov
aaa
dec
lret
and
js
repnz
lret
adc
adc
stos
cmpsl
in
mov
mov
xorl
in
lock
xchg
hlt
inc
adc
xor
pop
rorl
lcall
roll
and
or
stos
inc
pushf
dec
jge
sbb
xor
push
sti
in
data16
adc
decl
jo
push
add
into
fdivl
fadd
inc
add
jmp
ret
jg
fmull
jne
cmp
je
testb
addb
pop
inc
jl
lock
stos
add
sub
gs
movsb
adc
pushf
jb
test
xor
jb
fmull
idiv
cli
fbstp
enter
pushf
push
rclb
insb
or
add
jmp
sbb
rol
movsl
hlt
stos
mov
inc
in
jno
mov
jecxz
adc
push
lea
sahf
outsb
jo
jp
lret
icebp
dec
pusha
repz
add
popf
nop
enter
pop
inc
call
xchg
or
jge
mov
or
sbbl
add
push
rorb
inc
xlat
shr
push
add
push
adc
mov
out
je
das
inc
icebp
and
push
push
pushl
inc
add
cld
push
ret
inc
inc
cld
mov
mov
jne
push
ret
xchg
imull
xor
shl
pop
cs
pusha
hlt
jne
push
mov
in
inc
out
inc
cmp
movsb
repnz
add
fisubs
leave
decl
jle
push
pop
adc
pop
sbb
xchg
mov
lds
dec
sbb
xchg
cmp
add
sbb
jmp
pop
or
js
lock
clc
jle
mov
jne
jg
pop
int3
hlt
inc
lea
dec
lock
push
xchg
mov
pop
jno
sub
les
jb
cmp
cmp
je
das
les
adc
jb
cmp
jbe
inc
pop
cmpl
dec
out
add
movsl
jnp
popa
movsl
mov
xchg
sbb
or
xchg
imul
push
aam
nop
dec
fwait
or
xor
data16
xor
pop
push
inc
push
xor
dec
and
lcall
mov
push
jnp
pushf
xor
xlat
inc
xchg
repz
popa
and
cmpsb
mov
lcall
mov
xor
pop
rcrl
jmp
or
mov
imul
push
xchg
jge
je
push
adc
dec
mul
clc
insb
arpl
pop
je
je
mov
mov
add
xchg
ret
cmp
dec
sub
aaa
add
push
fdivs
mov
cmp
cmc
add
hlt
add
fldenv
imul
jne
xor
xchg
les
loop
dec
inc
notl
push
ds
sti
sahf
mov
aas
inc
je,pt
pushl
jecxz
arpl
lea
fldcw
or
add
jnp
jmp
jle
cld
sbb
jge
inc
cmpsb
je
jmp
js
jle
mov
jp
jp
jge
neg
mov
shlb
fnstcw
xchg
inc
pop
pop
or
andl
cltd
test
inc
jb
psrad
fimuls
and
pop
in
incl
loop
pop
sub
pop
add
inc
neg
sbb
not
and
faddp
fcomp
adc
fstp
or
inc
arpl
test
pop
jl
icebp
outsb
and
add
in
push
xchg
out
xor
fwait
jp
mov
sub
ret
outsl
or
pop
hlt
jge
leave
test
fcomip
lock
ret
xor
adc
pusha
add
nop
jne
shrb
mov
push
mov
out
popa
dec
fistpll
xor
adc
xor
mov
mov
pop
adcb
mov
sbb
ss
mov
xchg
push
jne
fildll
cvttps2pi
mov
insb
add
fildll
mov
loopne
gs
out
ja
test
add
inc
push
cli
lret
add
ss
das
mov
mov
jmp
lods
aas
sti
add
clc
push
lret
cld
dec
pusha
adc
push
mov
popa
es
pop
popa
daa
aam
ds
push
inc
xlat
aam
xchg
lret
mov
cmp
pop
jg
adc
xchg
imul
aam
dec
push
out
hlt
sbb
push
dec
insb
sbb
lret
dec
in
or
pop
daa
add
and
sbb
les
fs
push
rolb
adc
arpl
clc
inc
hlt
dec
dec
add
mov
ret
inc
js
fnstsw
sarb
push
adc
jmp
mov
pushf
or
mov
sub
mov
not
and
and
push
mov
nop
pop
stc
or
inc
or
sbbb
js
lea
pop
fldt
mov
cmp
fsub
dec
sub
add
sbb
or
fnstenv
leave
je
aad
or
mov
ret
shl
push
adc
hlt
push
fdiv
xor
pop
stc
xor
dec
xor
pop
fisubl
outsb
orb
roll
and
scas
cwtl
jne
pop
pop
pop
and
je
sub
jg
out
cmp
je
jbe
outsb
mov
out
and
faddl
aam
xchg
pop
xchg
xchg
ja
arpl
outsb
or
cld
incl
lds
jns
ret
addb
pop
jns
ja
dec
mov
xor
inc
out
jns
out
pusha
jb
xchg
ss
sahf
ja
insw
push
inc
xor
jns
data16
push
out
cmp
adc
push
push
int3
out
out
lcall
ds
out
sahf
dec
pop
data16
xchg
jge
out
cmpsb
ret
or
sahf
out
push
ds
pusha
outsb
jl
sahf
out
mov
jl
out
lock
js
adc
dec
lcall
push
loop
mov
iret
fcomp
into
lret
iret
mov
out
rcr
leave
lret
out
outsl
sub
lock
iret
ror
sbb
call
rcr
add
rcl
rcr
ror
insl
mov
xchg
fcmovnbe
fcmove
int
fmul
fmul
leave
leave
xchg
scas
ret
dec
xchg
fistps
int
int
aam
inc
loope
aad
fcmovu
ds
fmul
popf
lods
xchg
enter
jmp
in
popf
fmul
push
shlb
div
pop
inc
in
aad
rcr
faddp
popf
repnz
xor
mov
lock
mov
rcr
fldenv
out
lock
pcmpeqd
sti
popf
jmp
jl
outsl
out
call
fmul
sbb
out
aad
xor
enter
loope
mov
out
icebp
data16
mov
aam
fadds
orb
lea
mov
or
adc
xor
jle
mov
loopne
in
mov
loope
sar
mov
aas
xor
lret
aam
enter
rcl
or
cmp
sub
out
shlb
push
sbb
ret
sbb
mov
jnp
std
jbe
int3
enter
les
inc
mov
xchg
iret
jle
mov
xchg
lock
cld
addb
into
enter
inc
ret
clc
push
into
insl
push
fsubrl
pop
mov
bound
cmp
add
fadd
add
int
into
sbb
aas
add
mov
xchg
and
jbe
out
inc
add
cmp
pop
and
push
sub
jb
outsb
je
insl
and
jb
jb
add
or
in
in
dec
push
push
and
inc
fstpt
fucom
dec
dec
inc
and
push
xor
cmp
sub
jle
popa
bound
and
imul
fucomip
lret
dec
aaa
outsb
outsl
je
or
push
jg
jo
arpl
imulb
imul
pop
and
outsl
ss
data16
jb
jbe
jb
jne
mov
add
arpl
insb
push
mov
inc
pop
push
gs
das
mov
shll
mov
out
fidivl
gs
jae
push
fs
rcr
sub
dec
arpl
lock
fdecstp
insl
jne
je
push
outsl
arpl
outsb
sub
popa
divb
inc
inc
jb
add
les
mulb
popa
insl
inc
xchg
insl
insb
pop
fadd
inc
in
xor
lahf
and
jo
pusha
pop
push
cmp
fucomp
jle
jb
jne
jae
push
xor
push
lock
outsl
or
xchg
and
dec
pop
rolb
jb
sub
jae
inc
sub
and
sbb
sti
dec
imul
pop
sub
jne
and
push
test
and
add
rorb
shrl
outsb
ds
adc
mov
std
dec
lock
ljmp
push
and
dec
popa
outsb
inc
bound
fldt
dec
dec
add
inc
stos
push
arpl
adc
jbe
push
notl
jo
adc
icebp
inc
sarl
push
inc
gs
popa
sbb
mov
sbb
adc
jo
es
push
loop
add
dec
incl
popa
addr16
outsl
js
jae
cmp
mov
fs
xchg
push
fwait
push
fstps
in
pop
dec
push
dec
push
cmp
push
pusha
pusha
out
test
xchg
xlat
jbe
daa
mov
inc
push
popa
mov
out
ja
stos
mov
inc
add
push
std
sub
inc
inc
push
push
ja
push
inc
or
jl
inc
inc
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
mov
fs
je
jo
test
arpl
push
push
inc
dec
cld
and
pusha
orl
daa
arpl
or
andb
mov
sub
mov
add
or
pop
nop
mov
add
out
fcoms
mov
enter
addr16
dec
jb
mov
repnz
ja
outsb
add
jae
mov
adc
mov
insb
push
xchg
dec
and
adc
inc
xor
pushf
and
xchg
dec
add
inc
and
les
sub
pop
mov
outsl
cmp
inc
mov
sub
add
add
stos
je
jo
sub
sub
push
inc
mov
or
jae
and
das
add
insl
pop
stos
scas
stos
add
push
adc
test
push
adc
mov
add
or
push
pop
jl
xorl
add
jb
and
adc
push
jb
test
pop
sbbb
adc
add
jle
inc
outsb
mov
xchg
sbb
inc
pop
add
push
add
cmp
pushf
xchg
lea
mov
and
fisubs
add
pop
xchg
add
xchg
ja
dec
insb
mov
sbb
aas
xchg
in
gs
cmp
repz
or
stc
cmp
repz
adc
lock
out
cmpsl
adc
sbb
lahf
out
sbb
hlt
arpl
cmp
repz
js
jns
iret
repz
jp
cld
cwtl
decl
xorb
mov
push
jl
push
push
das
push
inc
jg
or
sbb
pop
sbb
lods
pop
outsl
add
pop
iret
repz
pop
js
mov
out
cmp
repz
xor
repz
jge
add
push
pop
ja
lcall
adc
das
loop
out
dec
insb
clc
cwtl
add
add
das
clc
divl
jns
and
cmpsb
fisttps
mov
and
jle
test
shll
mov
decb
inc
add
mov
iret
mov
in
sbb
in
call
adc
jle
mov
fidivrl
xor
fcomp
loopne
stos
sbb
das
push
push
mov
ljmp
shlb
inc
pushf
inc
pushf
push
sub
testb
add
xchg
addb
rolb
and
iret
mov
incl
and
cmp
pop
jl
cltd
sub
int3
or
int3
int3
add
xchg
data16
sbb
cmp
jl
fldt
cmp
pop
xchg
mov
xor
int3
mov
insb
adc
mov
test
add
lret
push
adc
or
mov
nop
add
add
fs
cld
or
fwait
mov
mov
int
mov
imul
arpl
mov
in
movsb
icebp
bound
mov
dec
push
and
psubq
fs
mov
sbb
pop
sbbl
stc
push
adc
sahf
aam
in
aaa
testb
mov
leave
ljmp
pop
rcl
mov
jle
test
fimuls
push
imul
adc
inc
dec
add
dec
daa
lret
xor
loopne
and
add
adc
enter
out
xchg
out
fwait
add
push
adc
push
gs
mov
adc
push
sbb
prefetchwt1
mov
lcall
mov
test
pusha
add
lods
cmp
mov
dec
mov
cmp
mov
scas
vpavgb
cmp
and
jb
imul
adc
out
sahf
inc
cs
mov
cmp
shrb
jae
arpl
lcall
inc
gs
push
and
rcl
fcoml
dec
inc
pop
mov
adc
cld
stos
push
mov
mov
jg
daa
jns
fwait
pop
hlt
scas
hlt
scas
enter
xchg
daa
int3
lods
shrb
aas
jb
add
add
add
lea
movsl
add
lods
dec
jle
outsl
cmpsl
cmp
push
add
call
dec
daa
adc
rcl
pop
jnp
shl
int3
je
lea
int3
xchg
icebp
data16
sahf
subb
test
lods
loope
and
or
mov
mov
cmp
aas
and
fstl
ss
mov
stos
pop
cmp
inc
xchg
stos
cwtl
stos
mov
cwtl
nop
stos
pushf
stos
pop
repnz
xchg
stos
mov
daa
sub
pop
jge
stos
cwtl
stos
cwtl
nop
xchg
lret
cwtl
stos
int3
pushf
stos
sbb
test
loope
and
pop
daa
mov
dec
or
stos
test
pop
test
xchg
inc
push
cmp
pop
test
xchg
test
push
test
fs
pusha
test
pusha
test
fs
fs
mov
sub
or
or
cmp
es
clc
test
mov
fs
call
xchg
or
or
enter
sbb
cmp
lods
dec
adc
lret
daa
and
js
mov
xor
ror
add
xor
scas
jb
sub
jl
lea
xchg
pop
repnz
xorb
sbb
nop
lret
jbe
cld
scas
jmp
in
pop
orl
mov
mov
xor
or
cmpsl
repnz
dec
call
movsb
jo
inc
jns
movsb
pop
push
outsl
movsb
jno
insb
inc
push
cmp
test
pop
inc
ds
outsb
movsb
out
fwait
pushf
push
movsb
movsb
int
jle
or
hlt
pop
test
inc
or
and
outsb
call
sbb
call
mov
ret
cmpl
test
faddl
repnz
movsb
mov
mov
inc
push
cmp
mov
mov
xchg
xchg
xchg
mov
sbb
cmp
jns
lods
mov
test
sub
lods
mov
mov
and
mov
mov
enter
loope
lods
mov
inc
adc
mov
sbb
and
mov
jb
sbbl
andb
mov
adc
test
xchg
mov
mov
mov
test
test
test
dec
es
pop
je
cwtl
jmp
add
arpl
in
pop
fsts
inc
sahf
jb
sbbl
dec
sahf
cmp
xchg
xchg
pop
mov
adc
dec
sahf
inc
jns
lret
int3
adc
dec
sahf
sahf
lods
cmp
ret
sahf
dec
sahf
dec
sahf
and
sub
sahf
fcoml
dec
sahf
ss
sahf
dec
sahf
loopne
leave
dec
fidivs
mov
add
push
or
and
aad
cs
sahf
pop
daa
dec
dec
repnz
or
iret
xchg
pushf
add
add
or
pushf
or
and
add
xchg
aaa
cld
and
das
add
pop
adc
repnz
ds
adc
adc
test
pop
sbb
popa
dec
adc
mov
cmp
and
fdivl
pop
xchg
in
inc
cld
fwait
nop
cmpl
cltd
nop
push
push
jb
cltd
int3
cltd
pop
gs
in
cltd
fcompl
lods
mov
cltd
mov
xchg
daa
dec
push
fcomps
mov
cmp
das
fcompl
ss
loope
int3
cltd
sbb
jmp
inc
pop
jb
cltd
les
cmp
pushf
xchg
mov
repnz
cwtl
xchg
movsb
xchg
pushf
xchg
push
pop
repnz
xchg
xchg
movsb
xchg
jl
xchg
daa
sub
xchg
mov
nop
xchg
lret
in
xchg
movsb
xchg
pop
sbb
test
and
pop
xchg
xchg
clc
fstpt
dec
mov
int
or
sub
jae
and
sbb
add
xchg
mov
pusha
xchg
fs
push
push
pop
xchg
and
xchg
xchg
repnz
xchg
fs
inc
adc
jns
repnz
xchg
insb
xchg
dec
jb
xchg
push
sahf
cmp
push
xchg
push
adc
jb
push
insb
xchg
insb
xchg
insb
mov
pop
loope
pop
xchg
loope
mov
xchg
sbb
and
sub
nop
xorl
and
js
das
das
xchg
xchg
xor
sub
pushf
fs
das
and
xor
inc
jno
jns
repnz
xor
lods
xor
xor
xchg
mov
or
and
rol
sbb
imul
lret
ja
mov
shlb
inc
mov
push
mov
call
repnz
std
sar
push
cmp
std
mov
xchg
xchg
xchg
std
enter
hlt
mov
std
enter
mov
push
sahf
cmp
std
std
std
add
pop
jb
push
enter
enter
nop
std
or
adc
dec
sbb
loopne
icebp
cmp
inc
push
jb
sti
mov
mov
pop
pop
enter
sub
and
sti
dec
adc
fs
sti
movq
sti
jns
cmp
mov
mov
pop
nop
sti
inc
pop
enter
nop
sti
dec
xacquire
sti
jo
mov
xchg
push
ja
xchg
out
adc
mov
push
lea
adc
daa
jns
ss
js
stc
js
dec
stc
out
xchg
daa
push
stc
push
stc
dec
stc
push
push
dec
enter
stc
pop
stc
push
stc
xchg
jl
movsb
adc
fisubrs
jno
sbb
stc
mov
iret
xchg
stc
push
stc
mov
pop
stc
fcmove
or
stc
pop
stc
mov
stc
dec
pop
daa
enter
xchg
adc
and
popa
push
daa
inc
stc
in
pop
jns
negl
negl
lret
and
adc
leave
lret
enter
sbb
cld
adc
lods
cmp
jns
test
imull
sub
sbb
sbb
or
and
enter
and
and
and
pop
cmp
push
loope
adc
subl
scas
repnz
mov
adc
testl
dec
fdiv
loopne
in
lods
pushf
nop
iret
fdiv
xor
fdiv
call
lods
loopne
push
push
fdiv
jecxz
aaa
cld
inc
call
hlt
mov
adc
fs
call
inc
call
lret
mov
push
in
sub
call
sbb
shl
shl
movsb
repnz
jb
repnz
repnz
xchg
mov
xchg
xchg
mov
mov
test
leave
lret
pushf
repnz
repnz
repnz
in
repnz
repnz
push
jns
mov
shl
xor
sbb
notb
loop
mull
add
cmp
sub
jle
and
leave
popa
clc
rcrl
insb
lock
and
jo
je
push
test
lock
lock
push
push
sahf
lods
jne
fs
je
nop
xchg
xchg
daa
je
adc
js
sbb
test
loope
and
pop
gs
js
adc
add
or
sbb
mov
sub
pusha
lock
lock
cmp
xor
cmp
cmp
das
das
fs
out
cmp
xor
inc
out
and
out
pop
xor
mov
fs
out
pop
push
jns
cmp
cmp
cmp
insb
inc
out
inc
pop
enter
inc
out
dec
xacquire
out
adcb
cli
add
decl
mov
scas
nop
xchg
sbb
out
and
out
hlt
jmp
inc
push
jb
jmp
jmp
jmp
mov
jmp
in
clc
jmp
xchg
mov
add
dec
in
lret
in
jmp
jmp
jmp
in
repnz
jmp
add
add
push
jns
add
enter
leave
sbb
lock
inc
ss
sub
sub
call
leave
call
jmp
jmp
enter
jmp
or
sahf
lods
mov
jmp
xchg
daa
dec
push
jmp
sbb
pushf
nop
xchg
sbb
jmp
sbb
enter
and
and
sbb
out
xchg
sub
dec
fisubs
mov
mov
enter
test
mov
mov
lret
or
and
sbb
nop
out
out
and
cmp
jns
out
gs
mov
pop
sub
mov
mov
je
out
pop
jb
nop
out
out
mov
and
push
and
icebp
add
call
repnz
cld
mov
nop
jo
sbb
loopne
out
js
cmp
inc
pop
dec
in
in
in
dec
sub
dec
in
dec
in
xor
repnz
in
in
dec
in
dec
push
pop
pop
in
arpl
in
lret
push
in
in
pop
in
pushf
nop
in
in
in
out
pop
sbb
loope
dec
in
rorb
loopne
call
mov
in
jecxz
push
push
jb
jecxz
jecxz
jecxz
in
in
adc
sbb
adc
push
pop
mov
adc
or
sbb
loopne
xchg
daa
sub
jecxz
jecxz
jecxz
enter
jecxz
sbb
sbb
lods
or
sub
adc
ja
or
cmp
jbe
insb
out
mov
mov
jns
inc
add
fsub
fsub
lods
sbb
and
loopne
loopne
sbb
in
test
loopne
loopne
loopne
mov
loopne
loopne
popa
daa
dec
push
sahf
shl
loopne
loopne
loopne
and
xchg
loopne
in
in
mov
enter
and
xchg
dec
fidivrs
aam
nop
jp
rcrl
into
sub
xor
mov
add
or
adc
push
test
and
int3
loopne
int3
loopne
fmulp
xchg
daa
dec
movsb
fisubrs
lods
lods
pushf
nop
sbb
fdivrp
and
pushf
fiadds
mov
jmp
fidivrs
lahf
and
fidivs
fisubrs
dec
movsb
add
push
rolb
cmpl
xchg
ret
and
fcoml
enter
pusha
fdivr
xchg
xchg
xchg
inc
fdivl
push
lret
pusha
fdivl
jge
dec
sahf
lods
cmp
fsubrl
fsubrl
and
sub
jo
jo
mov
enter
xor
stos
ret
and
inc
sbb
xchg
fidivrs
cmpsb
jp
popf
mov
cmp
push
jns
inc
jbe
inc
faddl
adc
sbb
and
sbb
sbb
adc
in
test
ficompl
jb
sbb
je
adc
and
daa
sub
dec
pop
or
sbb
sbb
lret
ficompl
test
and
or
fisubl
fimull
loope
adc
cwtl
sbb
inc
push
fdivs
inc
idiv
outsl
mov
or
or
in
pop
jns
xlat
loopne
in
in
lods
sbb
xlat
test
in
in
call
fcom
push
sahf
lods
mov
aam
in
das
xchg
daa
dec
in
in
fsubr
xlat
enter
call
sub
fcom
loope
add
sbb
mov
jne
out
dec
pop
xchg
and
dec
sti
pop
ficompl
sub
sub
in
scas
lret
pop
aam
pop
mov
push
dec
mov
and
xchg
lret
in
xchg
inc
adc
dec
in
in
jl
sbb
adc
push
sub
adc
push
dec
cmp
cs
mov
sbb
sbb
in
hlt
hlt
sub
nop
xchg
sbb
xlat
rcl
movsb
aad
inc
push
jb
aad
aad
aad
pop
pop
enter
aad
aad
aad
and
mov
add
fsubl
sub
mov
sbb
xorl
mov
mov
mov
lods
int
mov
cmp
cwtl
aad
enter
aad
shll
dec
in
pop
je
push
pop
push
insb
sarl
jo
jl
jg
pop
push
pop
cld
or
mov
je
add
push
mov
js
imul
js
js
loope
pushf
in
sti
push
push
sbb
mov
sti
mov
dec
dec
repnz
shll
xor
cmp
nop
iret
xchg
daa
cmp
xor
mov
mov
roll
cmp
aam
es
and
call
scas
jne
sarl
lahf
iret
cmp
in
inc
roll
fcmove
or
call
movsl
pop
sbb
clc
nop
xchg
xchg
xchg
pop
sub
sub
enter
sub
cld
into
add
and
pop
cmp
clc
into
or
jns
jns
into
or
add
sub
xchg
xchg
xchg
lods
clc
into
or
or
in
lret
add
add
add
nop
adc
iret
or
or
iret
inc
loope
cmp
sbb
mov
fisttpl
call
and
dec
lock
int3
jb
sbbl
int3
int3
ror
das
xchg
enter
das
and
mov
fs
mov
int3
or
cmp
int3
xchg
ror
mov
pop
enter
int3
cwtl
loope
dec
xacquire
int3
test
pop
inc
arpl
add
add
enter
int3
mov
mov
dec
in
pop
nop
lret
mov
mov
xchg
lret
fmul
lret
test
xchg
lret
jns
fs
lret
nop
lret
nop
adc
push
in
xchg
lret
or
lret
and
lret
pop
jl
and
cmp
xchg
sbbl
enter
enter
mov
pop
enter
dec
push
mov
repnz
leave
push
dec
enter
enter
jns
enter
enter
enter
enter
dec
xacquire
fwait
xchg
mov
mov
push
stc
mov
xor
das
inc
mov
enter
cmp
repnz
sbb
and
adc
lret
stc
push
pop
xchg
iret
lret
sbb
mov
xor
ret
cwtl
push
popa
adc
mov
repnz
and
pushf
sbb
and
and
and
mov
pop
push
adc
mov
adc
cmc
loopne
push
mov
int3
aaa
or
pop
clc
add
inc
xor
push
repnz
ret
mov
loopne
in
push
cmp
inc
call
xchg
xchg
xchg
inc
loopne
in
ret
in
mov
xchg
xchg
in
ret
in
ret
jo
sahf
cmp
jns
ret
call
ret
in
mov
in
ret
fisubl
das
in
ret
clc
loope
mov
ret
or
mov
jge
addl
rclb
sbb
xor
cmp
ret
cmp
inc
pop
test
lods
shll
movsb
rcrl
test
lods
sbb
jns
shrl
xchg
xchg
xchg
mov
push
push
mov
leave
mov
mov
mov
dec
push
mov
shll
adcl
movsb
shll
xchg
jb
and
mov
fisttpll
adc
es
xchg
faddl
inc
jmp
jbe
cltd
icebp
adc
sub
rcrl
lret
pushf
inc
push
repnz
shll
mov
js
insb
mov
xchg
xchg
mov
xchg
insb
jns
repnz
mov
push
pop
js
js
js
movsb
das
in
mov
jl
jns
fisubl
test
lret
insb
mov
mov
xor
adc
sbb
fs
cmp
sub
in
xor
enter
inc
mov
cmp
in
push
xor
cmp
or
dec
cmp
out
iret
ret
inc
mov
inc
in
cmp
mov
js
mov
add
loope
xor
push
dec
leave
dec
add
pop
or
mov
out
in
call
loope
lods
cwtl
add
add
pop
sahf
int
sub
dec
lock
enter
rclb
ror
xchg
dec
sahf
and
rcrb
dec
mov
test
push
pop
rcl
adc
pop
rcrb
mov
sar
movsl
inc
mov
lds
mov
mov
nop
xchg
inc
mov
mov
jae
jb
nop
pushf
pop
mov
dec
test
xchg
lods
pop
cwtl
insl
nop
or
and
sti
sarb
dec
cmp
sub
lahf
push
out
js
js
js
dec
mov
clc
push
sti
cmp
inc
push
jb
stc
pop
stc
pop
stc
mov
stc
rclb
mov
push
push
stc
es
xchg
inc
call
js
pop
repnz
ds
stc
and
pusha
stc
bound
adc
and
aad
in
push
stc
and
mov
add
lea
incl
dec
stc
sbb
and
jb
mull
sbb
sub
repnz
sbb
sub
sbb
jb
ds
and
call
and
add
adc
nop
dec
and
imull
divl
mul
xor
sbb
jo
filds
aas
push
mov
jmp
cmpsb
adc
notl
mull
pop
cmp
in
call
push
dec
in
hlt
and
lock
dec
pop
inc
pop
call
fs
lret
and
hlt
in
hlt
repnz
jns
in
hlt
in
hlt
mov
hlt
cmpl
mov
loope
loopne
enter
sub
jne
and
mov
sbb
and
lods
repnz
movsb
jb
xorl
das
xchg
cld
fs
das
test
mov
jns
repnz
repnz
mov
mov
in
lods
lods
or
mov
in
and
mov
mov
test
and
or
sub
pop
loope
imul
xchg
jns
call
bnd
xchg
sbb
bnd
js
enter
jl
jo
xor
inc
pop
pop
pop
je
xor
lock
and
sub
xor
inc
cmp
mov
insb
lock
jl
jl
enter
fs
lock
push
dec
bnd
js
adc
mov
cmovg
cmpsb
sub
jns
cmp
out
cmp
xor
sub
jns
lods
sub
cmp
mov
xor
jns
js
sub
cmp
mov
pop
enter
out
shl
inc
into
lods
jmp
add
fs
or
add
sbb
stos
add
daa
pop
push
mov
mov
xchg
daa
hlt
jmp
push
repnz
pop
cmpsl
inc
add
adc
pop
enter
add
add
add
repnz
mov
sbb
mov
dec
dec
sub
sub
push
push
dec
cmp
or
dec
pop
or
mov
sub
mov
or
enter
int3
jmp
jo
or
add
sub
or
and
das
xchg
out
in
das
test
xchg
out
inc
outsl
inc
add
and
or
xchg
out
ss
enter
dec
fimuls
adc
movsb
gs
call
mov
in
lods
mov
call
mov
and
add
inc
shrb
pop
lea
or
int
cmp
loope
pop
mov
and
or
mov
imul
adc
mov
xor
inc
and
jecxz
xchg
xchg
xor
mov
xchg
jecxz
jecxz
inc
cmpl
inc
dec
enter
jecxz
jecxz
lods
or
loope
adc
cmpsb
fs
jecxz
lea
js
je
push
sub
nop
dec
arpl
cwtl
and
loopne
mov
mov
int3
lret
loopne
aas
nop
fimuls
pop
bnd
in
loopne
sbbb
out
fsub
xor
cmpsl
movw
in
sbb
pop
movsb
fdivp
enter
test
mov
lods
fisubrs
movsb
fidivs
inc
rcll
sub
dec
cs
sub
sub
leave
cmp
fidivrs
and
dec
pushf
pop
scas
pushf
push
mov
cmp
dec
and
mov
inc
jo
jl
je
adcb
faddl
add
shlb
or
ds
fsubl
daa
in
jl
jl
leave
or
fmull
addl
xchg
je
je
inc
rcll
xor
mov
adc
xor
cld
adc
cmp
add
and
fcmove
or
inc
fiaddl
push
imul
xchg
jl
call
subl
daa
xchg
sub
jmp
cld
xlat
xchg
cld
adc
add
and
or
sub
fmuls
loope
jb
imul
movb
jmp
sbb
lahf
shll
push
insb
xchg
add
jo
lds
lret
aad
and
pop
pop
aam
int3
aad
aad
int3
lret
aad
cmp
mov
lds
dec
and
add
dec
aam
loope
nop
xchg
mov
and
add
push
and
gs
pushf
rcll
shrl
pusha
scas
test
lea
fdivrl
pushf
rcrl
loopne
and
lock
add
movsb
cmp
mov
inc
mov
stc
pop
jl
or
js,pn
addb
call
and
fdivl
mov
lods
add
and
mov
xchg
xchg
dec
sahf
lods
mov
daa
xchg
test
mov
enter
mov
cmpl
mov
xchg
xchg
push
jp
adc
sbb
sbb
sti
sti
sti
pop
cs
repnz
es
sti
sti
jl
test
sti
inc
cmp
test
sti
inc
movsb
repnz
sti
sti
dec
imul
sub
pop
sub
adc
push
mov
inc
inc
fs
inc
dec
cmp
es
pop
es
dec
inc
aam
mov
xor
test
es
es
dec
dec
and
pop
sbb
loope
cmp
mov
dec
loopne
xor
mov
std
jns
roll
ljmp
mov
add
cli
sub
sub
mov
or
gs
inc
adc
daa
sbb
pop
or
sub
mov
xor
pop
cmp
test
daa
in
es
adc
mov
loope
div
mov
sti
adc
shl
ret
out
popf
pusha
cwtl
es
mov
clc
push
sbb
leave
punpcklbw
or
call
cltd
mov
fs
pop
repnz
rolb
lods
loope
mov
les
in
cmp
xchg
daa
enter
in
enter
leave
and
inc
mov
roll
clc
roll
call
sbb
js
mov
pop
sbb
mov
xchg
or
sub
xor
dec
sub
nop
or
nop
nop
out
push
lock
addb
leave
dec
add
js
enter
js
push
and
orl
adc
out
in
dec
pop
push
xor
gs
dec
pop
ret
xor
leave
dec
push
push
push
inc
sub
pop
xor
pop
pop
daa
jns
fimull
or
lock
in
xor
pop
xor
push
inc
inc
adc
enter
sbb
pop
adc
sbb
jns
mov
adc
mov
pushf
pushf
push
inc
or
sbb
and
repnz
pushf
sub
and
lods
or
pop
adc
movsl
fs
out
mov
adc
jecxz
lea
mov
jmp
enter
jmp
shrb
jb
pop
jmp
jmp
sub
mov
cs
out
movsb
jmp
jmp
sub
jmp
enter
clc
loope
fsubr
push
loopne
jns
sub
xor
movsb
test
pop
sbb
sbb
cmp
cs
movsb
mov
cmp
mov
mov
sub
dec
dec
lods
lods
dec
sub
mov
push
xor
sbb
loope
mov
mov
repnz
lea
mov
ds
je
sbb
test
rcrl
subb
sbb
rcrb
mov
insb
jo
gs
inc
je
jo
sbb
pop
es
js
xchg
sub
inc
sub
pop
cmp
test
sub
inc
es
js
and
pop
sbb
xchg
aaa
pop
leave
mov
sbb
dec
sbb
movsb
pusha
out
jns
inc
pusha
out
in
in
sbb
and
lret
lret
and
loopne
leave
lret
in
xor
inc
call
gs
aad
cmp
in
stc
pop
imul
and
inc
in
in
daa
cmp
loope
xor
adc
in
and
and
mov
adc
adc
call
sub
lock
loop
repnz
push
and
call
pop
cmp
in
loop
sub
loop
fsubl
inc
call
mov
xor
loop
loop
daa
in
jl
loop
loop
loop
mov
loop
push
leave
inc
push
add
jg
loop
fs
ja
fsub
mov
nop
xchg
inc
push
mov
in
cltd
mov
mov
sub
mov
leave
lods
mov
in
movsb
mov
nop
or
xchg
mov
sub
push
and
xchg
js
inc
push
push
sbb
xchg
lret
gs
jl
sub
lret
jecxz
jo
xchg
xchg
xchg
addb
cs
test
sub
mov
pop
leave
sbb
sbb
insb
xor
and
inc
and
orl
sub
out
in
inc
dec
inc
dec
sub
in
cmp
shll
cmp
lret
dec
dec
dec
pop
sub
xor
dec
dec
es
fisubl
pop
cmp
jo
js
dec
push
xor
sbb
mov
or
enter
adc
and
addl
or
or
sub
gs
mov
iret
lret
adc
xor
mov
les
in
rorb
fsts
aam
pop
es
fsubrs
rcr
jns,pn
mov
sub
fcompl
enter
repnz
pushf
fmuls
push
jb
fcoml
sub
dec
push
repnz
push
sahf
xchg
adc
inc
xchg
mov
lret
orl
les
lret
xor
in
jb
movsb
pushf
push
sub
push
sbb
movsb
and
mov
jb
mov
enter
movsb
push
mov
xchg
aad
sub
lret
in
adc
sbb
call
mov
cs
fs
pop
mov
insb
xchg
cmp
cs
sub
insb
dec
sub
sub
and
push
push
push
mov
loope
daa
jns
xor
dec
xchg
gs
cmpsl
ja
shll
sbbl
shrl
in
enter
sub
push
jns
pop
rcl
add
rcrl
es
and
adc
xor
enter
sub
or
dec
xor
loope
pusha
xchg
push
add
sub
movsb
mov
lcall
aam
enter
lods
mov
test
dec
sahf
and
movsb
daa
xchg
xchg
xchg
mov
and
sub
mov
sub
enter
xchg
push
or
pop
movsb
std
mov
push
pusha
sub
ficoml
add
out
push
ljmp
out
add
testb
push
je
test
push
sbb
xchg
std
sti
sti
sti
jb
lahf
inc
sti
nop
sub
in
sti
mov
sti
lret
out
fistps
leave
push
js
fstpt
inc
push
enter
sti
jl
mov
jb
sti
loope
sbb
popa
pop
in
push
cmp
pop
add
popf
adc
mov
call
or
add
mov
incb
push
fsubr
popf
imul
insb
and
pop
cmp
push
push
push
test
sbb
ficoml
enter
push
and
test
sub
and
sub
and
bound
daa
daa
sub
xor
xor
xor
pushf
or
mov
stc
inc
clc
stc
cwtl
xchg
cs
push
daa
jns
adc
sbb
sbb
in
mul
leave
xchg
daa
lock
imul
notb
dec
enter
idiv
div
idiv
xchg
jl
js
call
sbb
jo
sbb
in
mov
repnz
div
testb
and
clc
mulb
and
shll
sub
loopne
loopne
mov
sbb
and
mov
hlt
stos
andb
lods
mov
leave
lret
enter
hlt
shlb
jns
hlt
inc
sbb
dec
sahf
mov
shl
pop
jb
shl
hlt
xchg
mov
or
in
mov
test
sbb
and
jl
xor
jb
addl
push
add
jl
pop
cmpb
xchg
repnz
js
mov
sahf
lods
cmp
xor
repnz
and
sub
repnz
mov
ss
repnz
cmp
leave
dec
fidivs
das
out
adc
push
xchg
je
pusha
adc
in
sbb
jo
jo
inc
lock
jb
orl
lock
lock
rclb
gs
das
dec
lock
sahf
lods
mov
cmp
dec
lock
xchg
daa
dec
dec
lock
lock
push
lock
push
lock
lock
fidivs
inc
lock
sub
movsb
das
cmp
mov
mov
mov
cmp
cmp
or
push
jb
adcl
adc
or
push
rclb
gs
daa
adc
fmuls
out
push
sahf
lods
mov
add
adc
das
xchg
daa
dec
adc
adc
call
cmp
sbb
sbb
dec
fidivs
or
mov
and
cld
das
cmp
cmpsl
rol
lea
jle
lahf
mov
rclb
push
out
add
das
push
out
add
sbb
and
aam
fsubr
mov
nop
sbb
shr
or
pop
push
add
aam
jg
jns
lret
xor
shr
loopne
sahf
lods
cmp
leave
push
int3
jmp
jmp
jmp
sub
dec
fsubr
inc
xor
jmp
enter
jmp
jmp
loope
dec
fidivs
xor
and
inc
outsl
pop
dec
dec
cmpl
enter
xchg
jmp
jmp
cmp
movsb
jmp
xchg
pop
push
add
pop
mov
xchg
mov
adc
xchg
jmp
movsb
jmp
cwtl
test
test
rcr
das
test
pushf
loope
in
das
xor
xchg
adc
or
fmuls
jb
pop
xchg
or
mov
add
in
mov
das
bound
nop
fs
insb
pusha
mov
lret
fs
loopne
pusha
xchg
xchg
xchg
dec
jo
adc
insb
cmp
daa
daa
insb
insb
lock
pop
enter
hlt
sub
gs
pusha
adc
in
fwait
add
sbb
pop
or
or
or
xor
imul
xchg
int3
push
xacquire
imul
add
ljmp
dec
cs
dec
loope
enter
int3
pop
xor
shrl
daa
enter
les
xor
and
nop
xor
xor
nop
mov
mov
sbbl
movsb
movsb
xchg
sti
mov
fcoml
test
mov
or
jmp
inc
mov
xchg
inc
push
sbb
in
cltd
nop
xor
fs
leave
jae
xor
adc
in
xor
push
addr16
xor
popa
insl
nop
insb
cld
loope
pop
stc
xor
dec
push
mov
sub
movsl
inc
pop
jb
cmp
imull
pop
cmp
sub
xor
and
sbb
jns
jns
sub
xor
sub
xchg
xchg
lods
sbb
xor
xor
jmp
leave
lret
and
xor
xor
adc
push
xor
xor
cmpl
test
xor
cmp
inc
add
add
push
testl
xor
sub
cld
in
out
hlt
cwtl
xor
cld
leave
dec
gs
call
iret
lret
xor
cld
fisubl
pop
cld
lods
loope
cmp
es
hlt
mov
pushf
sbb
adc
daa
call
or
daa
inc
int3
in
cltd
nop
xor
aam
mov
leave
jae
xor
aam
or
adc
loopne
nop
out
inc
add
aam
mov
nop
or
add
loope
in
das
inc
les
cmp
dec
or
xor
mov
sbb
or
or
enter
xor
pushf
pushf
mov
enter
loope
dec
xor
fs
dec
sbb
test
pop
pusha
pop
es
jl
pop
fs
repnz
pop
mov
test
push
pusha
pusha
es
cmp
xor
sbb
inc
fs
adc
and
sbb
xlat
rcrl
pop
push
fcmovne
out
mov
fs
out
sub
push
adc
dec
insl
orl
dec
and
dec
enter
aam
and
cmp
sub
clc
xor
sbb
sub
or
sub
mov
jb
sub
xor
cmp
test
or
loope
stc
push
pop
or
ret
and
and
rorb
enter
popa
mov
or
jmp
push
sbb
xchg
adc
in
lock
nop
xchg
inc
in
xor
leave
jae
jb
in
push
xor
movsb
xor
loopne
nop
addr16
lock
xor
insl
nop
or
ds
pusha
cmp
push
inc
dec
mov
push
xchg
push
cmp
push
jbe
and
and
and
and
fcompl
in
mov
nop
xchg
inc
push
mov
in
cltd
mov
mov
xor
mov
leave
lods
mov
in
movsb
mov
nop
or
in
popa
insl
mov
push
add
int3
xor
loopne
incb
lods
push
and
dec
or
inc
mov
inc
add
pop
lds
push
sbb
pop
add
movsb
cmp
enter
je
lret
test
xchg
dec
sahf
and
xor
daa
xchg
xchg
push
jo
addb
xor
sbbl
mov
and
jge
and
add
jb
ret
cmp
popa
xchg
mov
or
pop
insb
inc
lods
or
enter
xor
and
inc
pop
xchg
xchg
dec
sahf
xor
sub
daa
xchg
cmp
dec
push
cmp
dec
dec
in
imul
rolb
sub
add
jns
sahf
sbb
add
pop
jge
and
icebp
inc
rclb
or
test
mov
xor
movsb
mov
fs
out
xor
lret
gs
lods
lods
lods
pop
xor
iret
shlb
fisubl
orl
xor
enter
je
and
subl
insb
xchg
out
in
jo
ss
js
add
iret
lret
je
ss
and
xor
sbb
xchg
sub
popfw
xchg
fcoms
lret
jo
out
jns
jns
inc
test
mov
nop
dec
xchg
pusha
xor
push
sbb
xor
xchg
lret
gs
xor
cmp
lret
pusha
xor
add
cmp
cmp
cs
sahf
ss
inc
inc
pop
xchg
mov
je
aad
pushf
xchg
mov
in
loopne
xor
mov
das
cmp
outsb
outsl
sub
stc
cld
testb
add
clc
xchg
cs
notb
lret
or
mov
jae
or
add
testb
lret
add
ss
and
xor
or
loope
es
sub
neg
shrl
or
pusha
sub
jecxz
roll
les
lock
add
orl
enter
xor
sub
ss
shl
xchg
out
enter
ror
dec
in
loopne
add
lret
aaa
rcl
rcr
pop
shlb
cmpsb
in
cmpsl
dec
shl
aaa
fmul
add
adc
adc
or
jns
ds
data16
add
push
adc
pop
aam
aam
mov
ja
or
movsl
js
push
dec
lods
mov
pushf
enter
pop
jl
jns
sub
cmp
mov
es
cwtl
imul
nop
xchg
jb
nop
xchg
mov
cwtl
outsl
leave
jae
nop
push
cld
es
test
xchg
js
cwtl
pop
in
es
cwtl
add
jl
push
add
sahf
xchg
sbb
icebp
and
loopne
dec
into
jo
sub
in
pop
cmp
pop
lock
lock
pop
push
dec
pushf
push
lock
dec
pop
push
rcr
sub
push
lock
stc
mov
call
dec
pop
xchg
lret
adc
in
pushf
nop
lock
lock
lock
pop
sbb
loope
push
mov
nop
lock
loopne
cwtl
dec
loope
mov
push
das
push
push
or
nop
dec
cmpsb
cltd
dec
sbb
inc
push
push
sbb
hlt
aaa
iret
xchg
lret
gs
and
cmp
lret
and
adc
xchg
xchg
xchg
and
and
cmp
inc
cs
sub
dec
pop
xorb
add
loopne
test
adcl
xchg
iret
sti
adc
xchg
inc
push
sbb
in
loopne
in
cltd
nop
cmp
lock
jo
loopne
sbb
movsb
jb
in
in
in
or
lock
imul
test
add
pop
cmp
movsb
mov
aaa
enter
cmc
fsubrs
mov
movsb
cmp
in
and
out
cmp
lret
in
mov
mov
xor
iret
fdivrs
mov
fisubl
fsub
cmpsl
test
pop
cmpsb
in
in
cmp
mov
add
or
aam
cli
add
xchg
inc
mov
push
sbb
jo
in
cltd
nop
cmp
mov
cmp
in
clc
add
in
jb
jl
jl
cltd
nop
xor
addb
xor
add
sbb
and
push
orb
fs
movb
push
jb
inc
inc
mov
push
cmp
mov
js
cmp
push
mov
xor
inc
dec
enter
mov
dec
dec
mov
enter
loope
jns
test
cmp
fisttpll
repz
xchg
test
mov
and
xor
xor
and
or
xchg
lret
test
xchg
dec
sahf
and
cmp
adc
add
loop
or
enter
loopne
adc
adc
pop
adc
loope
inc
xchg
adc
jecxz
dec
cmpsb
adc
push
push
xorl
jo
imul
je
clc
loop
in
push
and
loop
gs
inc
push
rcl
enter
fs
int3
fdivs
leave
lret
sub
enter
pop
dec
cmp
loopne
sub
dec
mov
loopne
cmp
loopne
or
and
loopne
loopne
sbb
enter
and
cmp
xlat
and
cmp
xchg
sub
loopne
loopne
fiadds
ficomps
xchg
ficomps
mov
jns
fiadds
sub
mov
cmovnp
leave
cvtps2pi
inc
dec
enter
fisubs
or
fisubs
cmp
jp
or
cmp
jbe
mov
pop
pusha
fs
inc
fs
mov
sbb
pop
es
push
scas
pop
repnz
push
pop
cmp
test
cmp
inc
es
push
sbb
loope
pop
fdivr
rcll
call
xchg
mov
jmp
xor
push
sbb
aaa
jmp
jb
sub
dec
enter
cmp
mov
xor
and
jb
mov
sbb
sub
enter
inc
cmp
xor
inc
loope
push
jb
aaa
ficoml
jl
push
mov
add
punpckhwd
lea
in
cmpsl
pop
sub
jb
sbbl
hlt
xlat
call
mov
cmp
xlat
clc
xlat
lock
lret
mov
call
dec
cmp
xlat
aas
sub
dec
mov
xlat
cwtl
cmp
xlat
enter
clc
xlat
clc
xlat
dec
pop
mov
pushf
loope
call
xchg
and
jb
icebp
jge
push
aad
or
pop
ret
push
sbb
in
pushf
or
sbb
addb
js
fcoms
data16
imul
popf
negb
or
inc
cs
jl
mov
inc
rcl
push
popf
inc
add
call
repz
mov
or
adc
fstpl
mov
cmp
xchg
and
inc
push
sbb
mov
cmp
jl
jb
jae
cmp
out
add
in
jb
addb
lock
test
loope
je
sti
nop
xchg
xchg
add
sbb
or
loopne
in
jbe
sub
mov
out
or
inc
sub
enter
rcl
xchg
or
or
adc
rcl
xchg
push
pop
sarl
cmp
rorl
and
pop
in
add
rcl
or
cmp
pop
cmp
loope
inc
mov
mov
outsl
pop
aas
xorl
popa
in
call
enter
shll
or
sbbl
or
adc
add
mov
cmp
rcll
dec
push
mov
shll
lret
inc
in
add
adc
pop
pop
jns
adc
adc
mov
pop
enter
adc
dec
repnz
mov
loope
add
mov
mov
xor
cld
rolb
cmp
dec
ror
aam
fmul
push
dec
in
int3
into
ror
pop
inc
pop
pop
fmul
aam
call
lret
into
cmp
enter
repnz
fmul
fmul
clc
mov
into
fmul
fmul
in
imul
in
gs
or
adc
xlat
in
xchg
into
pop
into
cwtl
int3
jb
sbbl
mov
xchg
pop
mov
cmp
pushf
jns
lret
inc
cmp
sahf
lods
cmp
sub
nop
int3
mov
sub
dec
mov
int3
ss
int3
movsb
int3
push
loope
dec
fidivs
mov
mov
inc
mov
int3
in
pop
jns
lret
push
sbb
lret
lret
enter
fs
lret
pop
jns
lret
pop
lret
pop
sub
push
insb
lret
jb
insb
lret
nop
push
imul
mov
cmp
nop
sbb
lret
pop
cmp
inc
sub
xor
and
bnd
sub
sub
xor
pop
repnz
sub
lock
xor
daa
sub
jmp
and
xor
xor
lret
enter
ds
push
repnz
dec
xor
xor
add
cmp
sbb
loope
and
adc
pop
loope
lret
adc
push
inc
mov
mov
jae
leave
gs
insb
or
xchg
or
subb
nop
das
cmp
pop
sbb
mov
lock
in
mov
and
lock
dec
push
mov
lds
lret
mov
vrsqrtss
clc
pop
cld
lds
pop
cltd
in
imul
in
lds
xchg
lcall
aas
push
push
in
das
cmp
lds
xchg
sbbl
mov
jl
jns
cmp
ret
mov
mov
mov
leave
xchg
xchg
ret
rol
ret
rol
dec
enter
ret
or
loope
mov
movsl
fs
ret
les
lods
lods
stos
in
rorb
ja
cmp
sbb
add
lods
sbbb
nop
inc
test
pop
aam
orb
jl,pt
pop
in
dec
sub
mov
aas
mov
loope
loope
jb
push
jmp
and
lret
push
sbb
push
and
filds
sub
sahf
cmp
add
imul
mov
dec
mov
dec
adc
dec
or
cmp
clc
mov
or
inc
test
iret
addr16
repz
lea
rcrl
and
cmp
cmpl
adc
jb
mov
sub
repnz
or
sbb
pop
cmp
or
leave
xchg
xchg
daa
add
adc
adc
daa
fs
mov
sbb
sbb
leave
mov
or
orb
push
push
mov
negl
repz
jbe
pop
inc
addb
or
mov
arpl
mov
xchg
mov
sarb
aas
aam
loopne
fdivrs
aas
sarb
cmp
or
repnz
mov
mov
loopne
loopne
adc
arpl
mov
xor
call
jmp
push
sbb
mov
test
mov
sub
add
mov
xchg
xchg
add
test
inc
mov
pop
mov
xchg
mov
in
xchg
nop
mov
mov
push
mov
xor
fs
xchg
xchg
xchg
mov
mov
inc
fistps
mov
push
sahf
insb
mov
and
in
mov
sbb
jns
or
push
ret
lret
stos
repz
pop
mov
sub
xor
in
sub
inc
pop
pop
cmp
mov
leave
lret
mov
fisubs
push
jns
fs
xor
xor
sarb
mov
mov
or
pop
sub
aam
nop
cmp
adc
and
and
dec
sub
cmp
mov
mov
cmp
bnd
mov
mov
mov
inc
daa
sub
pop
lock
mov
fucomp
in
xchg
xchg
mov
mov
mov
mov
daa
fs
mov
mov
push
jns
mov
loope
in
out
lock
inc
sbb
push
ret
dec
call
and
cmp
mov
mov
das
fs
mov
inc
mov
das
and
shlb
fs
mov
fdivl
inc
xor
mov
mov
dec
enter
mov
mov
mov
adc
loope
mov
mov
repz
or
pop
dec
repz
in
adc
fs
pushf
in
fs
jns
mov
nop
cmpl
scas
nop
push
push
jb
scas
subb
test
mov
subb
scas
xchg
aas
mov
xchg
mov
mov
scas
bound
loope
dec
jb
xchg
subb
and
pop
pusha
pusha
fstl
into
enter
scas
or
leave
and
and
in
jb
lods
lods
lods
adc
bnd
lods
lods
nop
flds
lods
lret
movsb
lods
lods
lods
and
or
inc
dec
lods
mov
loope
dec
lods
dec
inc
dec
leave
xor
inc
in
dec
add
lods
or
leave
and
and
in
jb
stos
stos
stos
push
dec
stos
stos
outsb
fadds
stos
lret
movsb
stos
stos
stos
js
xchg
or
outsl
adc
pop
lock
add
sub
push
stos
lret
repz
ljmp
stos
out
stos
repnz
imulb
xchg
stos
out
pushf
pushf
fcomp
movsb
adc
fs
arpl
lret
test
test
test
pushf
inc
sub
xchg
lret
test
test
inc
test
xchg
lahf
dec
test
add
daa
test
rolb
popf
pop
enter
aam
into
insb
lods
loope
mov
leave
in
shll
xor
cwtl
test
and
cmp
cmpsb
nop
xchg
sbbl
push
mov
js
jo
sbb
jg
push
push
aad
stc
cmpl
cmpsb
mov
repnz
js
js
sbbb
and
and
push
push
sahf
push
dec
inc
lea
pop
aam
mov
movsl
pusha
cmpsb
xor
xor
and
cmp
xchg
lret
test
jo
sahf
and
inc
in
ret
mov
leave
dec
movsb
movsb
movsb
mov
daa
pop
xor
movsb
movsb
nop
fs
adc
movsl
xor
xchg
lods
int
sbb
stos
inc
sub
popa
popf
sub
sbb
and
clc
mov
in
cld
mov
clc
pop
mov
aam
clc
mov
dec
les
outsl
xor
mov
stc
mov
mov
mov
or
and
loope
clc
mov
inc
mov
mov
orl
or
lret
in
lahf
lahf
sub
lahf
popf
xchg
iret
and
sbb
push
sarb
pop
repnz
lahf
xor
sbbb
insl
mov
push
inc
leave
popa
js
cld
stos
mov
in
pop
jns
popf
nop
popf
xchg
popf
lret
and
mov
cwtl
popf
nop
popf
test
outsl
inc
call
inc
jle
jo
lods
xchg
popf
xchg
popf
in
jl
inc
cwtl
popf
cwtl
popf
xchg
loope
cmpsb
xchg
dec
repnz
adc
jmp
in
sbb
sbbb
jb
sbbl
fwait
push
fwait
in
nop
push
mov
mov
gs
fcoml
inc
mov
jb
rcrl
or
inc
adc
inc
ds
fwait
pusha
fwait
pusha
add
pop
nop
fwait
loope
xchg
xchg
sbb
or
cs
push
dec
enter
sbb
and
adc
sbb
sub
xor
sbb
pop
pusha
cld
inc
call
mov
leave
and
and
test
dec
inc
sub
push
in
cltd
loope
shlb
leave
sbb
or
mov
rorb
les
add
stc
jl
jns
jns
jns
or
pusha
or
enter
xchg
cs
or
push
ds
push
pop
mov
xchg
sbb
dec
add
xchg
mov
in
xchg
in
xchg
inc
lock
or
push
lock
lock
loope
mov
pop
or
js
jl
mov
xchg
es
pop
or
cmp
or
pusha
inc
xchg
xchg
xchg
or
enter
xchg
cs
or
rolb
xchg
ds
push
pop
in
xchg
xchg
jmp
dec
xchg
mov
in
xchg
mov
inc
mov
push
mov
cmp
fcompl
test
or
je
xchg
fadd
cwtl
push
cmp
dec
cwtl
or
xchg
xchg
sbb
xchg
xchg
xchg
lret
test
sbb
dec
sub
xchg
xchg
xchg
cmp
xchg
dec
sub
lahf
xchg
lret
xchg
xchg
xchg
or
inc
xchg
pop
cmp
loope
xorl
jnp
and
mov
cmp
lds
xchg
inc
xchg
inc
iret
xchg
xchg
xchg
xchg
dec
xchg
dec
xchg
dec
xchg
push
xchg
daa
sub
xchg
aas
into
lret
daa
sub
idiv
add
and
sub
sub
enter
add
xchg
inc
push
cmp
jo
nop
or
xchg
xchg
xchg
nop
add
xchg
cld
pop
jns
repnz
ss
or
or
nop
and
in
or
or
in
rcr
loope
cld
addr16
cmp
inc
xor
mov
ficoms
push
inc
lret
adc
enter
lea
lea
lret
in
lea
enter
dec
add
mov
enter
inc
aam
aam
stos
mov
dec
aam
inc
loope
ljmp
inc
cmp
or
jbe
push
lea
in
inc
lea
push
mov
in
mov
in
xchg
mov
xchg
iret
leave
dec
mov
daa
pop
xor
mov
imul
pop
fsts
or
mov
and
mov
jb
andl
mov
das
das
xchg
mov
fs
das
push
mov
cmp
mov
push
mov
pusha
mov
enter
lods
mov
mov
pop
mov
dec
repnz
mov
inc
ja
inc
sbb
xchg
fimull
mov
lahf
inc
xchg
inc
xchg
xchg
inc
xchg
in
xchg
lds
xchg
xchg
daa
pop
xor
dec
dec
jb
pop
sbb
sbb
add
push
sub
push
jmp
push
sbb
test
sub
test
dec
test
xchg
add
push
ds
dec
test
pusha
loope
leave
inc
into
jo
fcoml
daa
faddl
jb
cmpb
sbb
xorb
xchg
xchg
mov
mov
lret
test
mov
ja
cmpb
daa
in
mov
mov
lods
xorb
dec
xchg
cmp
push
jns
mov
xchg
or
push
jb
pop
xor
mov
js
jl
addb
sbb
xor
repnz
cmpb
pop
ret
xchg
aas
dec
fdivrl
lahf
lret
dec
test
enter
dec
loope
push
repnz
lds
dec
movsb
repnz
sbb
push
xor
xor
or
sbbl
pop
cs
jle
dec
jle
pop
push
jns
jle
dec
jle
jb
cmp
sub
dec
dec
in
jle
dec
jle
ret
fcmove
test
loope
push
dec
es
jle
dec
movsl
and
mov
shll
xchg
or
inc
je
jle
or
enter
jl
xchg
or
mov
jl
ds
push
pop
lods
dec
jl
add
add
cmpl
in
outsl
adc
dec
jb
push
enter
jl
jl
fcomps
loope
add
mov
dec
aam
lret
lret
mov
enter
mov
jnp
orl
jns
loopne
xchg
lret
in
jns
jns
xchg
iret
and
loope
stc
cwtl
les
jns
repnz
fdivrl
sbbb
loope
es
stc
leave
xchg
cld
lds
dec
jns
call
repnz
decb
aaa
and
mov
push
shl
loopne
xor
and
pop
es
mov
mov
dec
mov
test
add
push
mov
or
rolb
shl
nop
sub
leave
mov
dec
test
push
mov
es
test
dec
jl
sbb
pop
mov
pop
scas
pop
mov
in
cmp
test
inc
mov
mov
js
dec
repz
and
jmp
cld
in
in
in
lock
dec
xor
sub
xchg
out
in
dec
or
inc
dec
in
in
jo
add
and
lret
dec
sbb
push
fisubl
pop
xor
and
cmp
inc
aam
inc
xor
out
sub
lock
pushf
mov
adc
enter
testl
mov
dec
or
cmp
push
sbb
add
adc
lods
pushf
pushf
adc
je
sbb
and
sbb
mov
pop
nop
sub
or
mov
cld
repz
and
call
add
fs
dec
sahf
add
aam
inc
push
push
sbb
rcrb
gs
fdivrs
and
sahf
xchg
xchg
xchg
fmul
dec
loopne
cs
loopne
xchg
mov
shlb
push
jb
dec
call
in
jmp
mov
push
mov
fsubr
in
jmp
maxps
pop
hlt
nop
dec
push
sbb
enter
sbb
cwtl
lock
xchg
lret
gs
pushf
test
enter
adc
cwtl
test
mov
xchg
xchg
lret
movsb
movsb
and
fs
sahf
dec
test
test
mov
push
xor
dec
mov
push
shl
cmp
xchg
int3
lods
pop
add
and
pusha
xchg
lret
test
xchg
dec
sahf
and
jo
daa
daa
xchg
lret
mov
pop
insb
insb
insb
enter
jl
jo
inc
imul
mov
lock
dec
lret
sub
dec
xchg
pop
sub
inc
push
push
sbb
mov
gs
xor
dec
sub
in
and
and
xchg
xchg
xchg
xor
xor
dec
cmp
fs
cmp
dec
xacquire
out
call
mov
mov
dec
out
in
hlt
add
clc
sbb
insb
loop
xchg
lock
call
push
cs
mov
cmp
cs
sahf
dec
add
add
mov
push
add
cmp
jmp
lahf
jg
jb
jmp
sub
pushf
test
jge
dec
sbbb
and
inc
push
test
dec
enter
cwtl
dec
test
enter
int3
dec
bound
fmull
dec
iret
sub
inc
lock
fisttpll
mov
and
lahf
repnz
mov
add
add
add
dec
adc
in
mov
dec
adc
and
cmp
dec
enter
mov
or
add
mov
and
add
in
mov
push
leave
out
repnz
repnz
in
jb
aam
repz
cmp
jb
in
call
and
dec
mov
repz
iret
mov
test
dec
pushf
shr
mov
jge
cmpb
dec
sub
push
sbbb
and
inc
inc
dec
push
dec
pop
in
adc
jb
and
mov
dec
jns
cmp
test
lods
add
adc
sub
jb
test
mulb
mov
sbb
gs
inc
add
jno
mov
cmp
in
and
sbb
data16
adc
xor
mov
call
addr16
hlt
pusha
and
js
inc
sub
imul
push
data16
adc
xor
mov
ljmp
lds
inc
sub
jns
sarl
push
data16
adc
xor
test
fisubrl
push
inc
loopne
sub
cmp
addl
sbbl
add
lock
adc
nop
add
loopne
xor
loopne
mov
out
mov
fs
push
cmp
xor
mov
push
or
jo
or
cmp
and
add
in
in
icebp
or
faddl
rclb
xchg
or
loop
xor
bnd
je
sarb
out
cmp
sbb
insl
imul
loopne
and
orl
sbb
or
ds
fstpl
cli
or
push
call
cmpsl
sbb
int
out
push
sbb
add
loopne
jmp
jge
mov
mov
jne
add
push
pop
fisttpl
inc
dec
adc
jb
cmpsb
popf
add
dec
or
popa
mov
pop
xorb
add
sbb
adc
or
cli
adc
inc
or
jb
in
cmpsl
or
or
adc
iret
adc
or
pop
or
andl
lret
push
data16
rol
jbe
call
add
push
push
rorb
ds
add
jno
mov
inc
scas
add
and
push
xchg
cwtl
cwtl
mov
mov
fabs
fistps
and
lods
mov
push
aas
xlat
pop
pusha
lods
cmpb
cmp
add
sti
pusha
pop
fwait
mov
loopne
pop
or
scas
pop
imul
push
cltd
or
mov
popf
add
bound
inc
ret
jmp
push
mov
loope
adc
jg
mov
hlt
adc
inc
mov
add
adc
mov
jge
hlt
js
fidivrs
xor
sub
in
or
inc
pop
xor
cmp
push
mov
sub
aas
and
add
aas
lahf
scas
cltd
loopne
movl
rclb
add
jb
push
mov
aad
fistpll
fs
cmp
insb
inc
fistps
adc
mov
sbb
mov
cmp
cmpsb
pop
pop
mov
inc
call
mov
call
add
push
enter
fsubl
in
rclb
push
test
pop
stos
iret
add
mov
push
pop
inc
xchg
xor
lock
enter
cwtl
movsb
pushf
popa
in
out
push
xchg
movsb
mov
xchg
loopne
and
in
es
movsb
movsb
lret
sbb
loope
xchg
add
stc
sbb
push
loopne
pop
cli
add
mov
shl
dec
push
aaa
add
dec
sub
lcall
cld
popa
sub
inc
out
mov
adc
in
fdivr
mov
loope
mov
cld
nop
push
push
es
jnp
push
sbb
fsts
mov
mov
xchg
cli
mov
repnz
xchg
les
mov
jmp
cmpl
mov
daa
in
cli
mov
xacquire
nop
cli
call
ret
clc
test
sbb
pop
sbb
or
xchg
mov
or
mov
daa
in
clc
push
or
ret
sub
bnd
or
and
mov
push
push
and
xor
xchg
mov
je
divb
and
xchg
divb
mov
add
and
in
divb
divb
notb
and
testb
repz
push
lock
cmpsb
push
mov
adc
mov
adc
or
repz
pop
cs
or
repz
push
ret
push
repz
popf
js
scas
or
lea
bnd
nop
push
clc
repz
sbbb
in
push
xlat
call
shrb
repz
daa
daa
jns
repz
mov
leave
mov
push
mov
jl
push
push
shl
icebp
and
mov
outsb
add
xchg
inc
call
sbb
push
ja
jnp
icebp
mov
stc
xor
shl
icebp
inc
lods
popf
pushf
shl
loope
movsb
in
pop
sbb
dec
push
add
decb
test
icebp
icebp
push
sbb
out
out
out
xchg
lret
test
out
out
out
lahf
dec
sub
jl
out
out
sub
xchg
mov
daa
out
mov
repnz
test
push
mov
add
out
mov
and
add
loope
pop
faddp
push
repnz
mov
stos
add
stos
adc
push
sbbl
out
in
in
in
enter
rclb
pop
cs
in
in
in
cmp
pop
push
in
in
push
lcall
rorl
and
push
in
push
in
arpl
loope
dec
into
add
or
push
sbb
push
loope
xor
in
nop
dec
pop
and
push
sbb
or
push
xchg
lret
gs
or
adc
push
or
in
cwtl
jecxz
xchg
test
repnz
jmp
sbb
sbbb
movsl
loope
or
pusha
push
xchg
popa
sbb
cmp
inc
fldl
push
pop
and
nop
add
nop
add
xchg
add
jo
sub
dec
orb
cmp
sbb
add
push
xor
xor
mov
and
and
nop
pop
inc
push
xchg
xchg
xchg
mov
xchg
sub
push
jae
add
pusha
aaa
pushf
js
or
sbb
lods
mov
inc
xor
sbb
ret
lea
es
lret
mov
xor
xor
cld
movsb
dec
sub
dec
inc
sub
add
xor
cmp
test
rclb
add
das
je
mov
or
cmpsb
pop
adc
mov
hlt
push
and
jmp
push
clc
sub
clc
adcb
jo
bound
mov
test
or
sbb
fs
xor
bound
adc
push
push
outsb
ljmp
fcom
xor
or
sub
fisttpl
dec
and
cmp
mov
sbb
ret
xchg
adc
sbb
sbb
push
xchg
add
cmp
lds
icebp
imul
hlt
call
mov
call
pop
mov
lods
jp
imul
add
roll
es
mov
jae
xor
jmp
imul
adc
sub
push
in
jo
dec
imul
lock
mov
sub
or
call
scas
and
lahf
jmp
cmc
push
mov
nop
out
fstpt
push
jno
or
adc
jae
jo
popa
or
adc
push
add
movsl
adc
xchg
adc
cs
and
mov
cmp
xchg
sbb
add
adc
pop
pop
pop
fisttps
add
pop
jns
loop
outsl
mov
lret
and
movsl
mov
lock
inc
and
aas
jl
test
xchg
or
or
outsb
sbb
add
pusha
inc
push
xor
mov
leave
sub
sub
sbb
and
les
inc
jg
xor
adc
stc
lahf
adc
mov
jmp
in
shr
daa
add
cmp
jmp
or
xchg
test
clc
call
lock
inc
cli
cld
add
or
add
push
sub
adc
test
add
jb
call
ljmp
call
sbb
bound
pop
jmp
cmc
jle
mov
add
mov
pop
xchg
or
inc
xchg
je
repz
lahf
or
push
or
or
pop
clc
clc
mov
mov
scas
nop
inc
repnz
popf
lea
push
mov
xchg
roll
stos
pusha
fisttps
testb
pop
push
cmp
push
enter
std
push
xor
sbb
mov
or
faddl
or
lret
xor
push
in
inc
inc
bound
or
call
pop
add
lahf
dec
add
pop
roll
sbb
sbb
jg
into
inc
mov
adc
jno
call
mov
fldl2e
or
hlt
adc
loopne
fsubrs
call
inc
cwtl
or
clc
dec
sub
test
add
inc
jle
and
jl
dec
sbb
scas
in
lock
cmpb
into
jmp
sbb
loope
xchg
add
pop
push
cmp
cmp
lock
cmp
cmc
inc
lds
into
popf
or
sub
push
pop
in
add
pop
aaa
in
cmp
notb
rcl
call
idivb
xor
clc
or
sbb
pusha
adc
jg
insb
mov
and
xor
jle
aaa
enter
pushl
push
or
add
iret
mov
add
mov
test
sbb
cmpsl
lcall
shrl
dec
lcall
adc
push
mov
call
sub
fsub
fsub
loopne
inc
or
loopne
jge
mov
xchg
enter
dec
lahf
dec
pop
psrad
mov
pop
xchg
sub
aam
fcoms
call
adc
push
loop
les
add
lds
sub
pop
sbb
adc
lret
adc
jp
ret
or
in
pop
sub
movsl
pop
in
pop
in
inc
out
push
in
js
mov
jl
lea
call
jecxz
sahf
sbb
in
mov
add
jmp
xchg
pop
mov
in
jmp
or
lret
ret
lret
cmp
jne
outsb
xchg
pop
push
add
jb
and
pop
xchg
inc
fwait
inc
or
jne
cld
add
popl
or
pop
stc
aad
push
push
push
jp
cld
cli
test
in
add
xchg
sbb
icebp
aas
sbb
leave
inc
pop
cmp
nopl
add
xchg
mov
adc
fldl
aad
aas
mov
pushf
in
push
testl
sbb
lahf
inc
das
cld
sbb
sub
adc
adc
addr16
cmpsl
or
int
dec
ljmp
fadd
mov
jae
xchg
jl
pop
add
adc
popa
fildll
dec
jnp
test
in
add
fstpt
push
pop
cltd
xchg
imulb
mov
sub
mov
pop
pop
inc
mov
stos
jg
add
stc
dec
jecxz
or
addl
insb
test
ret
lahf
adc
scas
mov
pop
inc
push
repnz
pop
mov
leave
xchg
adc
repnz
aas
cmp
popa
and
add
enter
add
clc
mov
icebp
test
add
adc
cwtl
cmp
movl
pop
push
dec
lahf
pusha
inc
sbb
out
sub
sbb
cld
add
pop
mov
inc
lahf
cmp
fiaddl
and
jbe
mov
xchg
hlt
mov
or
inc
sub
pop
les
mov
les
push
xor
in
add
jmp
pop
clc
in
and
pop
fs
mov
cmpsb
jno
pop
inc
ret
andl
adc
pushl
js
adc
jns
je
mov
hlt
loop
adc
mov
cmp
sub
sar
lds
inc
pusha
in
adc
or
lea
push
or
call
jmp
rcrl
je
adc
or
jo
repnz
lock
and
inc
mov
ret
push
adc
popa
add
inc
dec
jo
rclb
cmp
jae
enter
jl
lret
outsl
xchg
mov
or
mov
inc
adc
sbb
sub
inc
sub
sbb
xorl
jmp
xchg
in
negb
decb
ja
insl
cmp
sbb
dec
rorb
jns,pn
fbld
adc
xor
fiadds
dec
pop
dec
and
jne
add
cmp
mov
roll
adc
out
mov
dec
orl
loopne
xor
jl
loopne
roll
ss
test
mov
push
jbe
or
sub
addl
adc
sar
gs
mov
popf
sbb
jl
jmp
sub
add
in
xor
aad
xor
repz
call
test
lret
mov
jl
cwtl
cmc
mov
pop
jns
dec
or
cs
dec
mov
pop
ds
xchg
nop
arpl
dec
sbb
push
cmp
jle
movsl
ret
mov
pop
cld
cld
pop
jnp
test
sub
adc
out
sbb
or
jge
mov
push
dec
shll
hlt
call
sbb
and
xorb
fsubrs
mov
sub
xor
movl
adc
inc
inc
mov
or
imul
inc
lea
dec
adcb
mov
add
xchg
les
or
adc
sbb
sbb
sub
sbb
fisubrs
mulb
xchg
test
inc
adc
sub
jg
or
insb
mov
ret
cwtl
aas
or
add
stos
or
mov
mov
xchg
imul
mov
sbb
orl
orl
js
adc
popa
sbb
add
pop
push
adc
dec
push
inc
das
pop
loopne
aaa
inc
push
cmp
mov
mov
add
outsl
and
jae
subl
jmp
pop
mov
enter
or
push
stc
fs
dec
xchg
xchg
sbb
or
loopne
or
les
push
add
cmp
dec
add
pop
mov
jl
dec
dec
cmp
adc
xor
lret
adc
xor
data16
pop
adc
sbb
cmc
lods
fstl
shll
inc
ss
dec
push
dec
loop
insl
repnz
insb
add
push
shlb
mov
movb
jo
push
cs
adc
cmp
dec
call
arpl
adc
add
or
sub
fbld
sub
cmp
sarl
push
and
dec
aam
xor
testl
and
imul
je
popa
pop
pop
scas
xchg
stos
cmp
or
test
hlt
adc
xchg
jo
aas
outsl
sub
inc
sbb
jo
sbb
pop
notb
repnz
jp
dec
xor
or
sub
sbb
add
daa
loope
adc
negl
imull
sbb
jne
xor
testb
jo
cmpsl
loopne
push
jne
test
adc
xorb
adc
add
push
sbb
repz
inc
popa
adc
lret
or
mov
and
mov
and
push
push
loopne
inc
jmp
rcrl
jbe
cmpsl
mov
sbb
gs
dec
mov
sbb
add
push
jecxz
movsb
call
pop
or
push
jns
out
inc
lret
inc
sbb
push
insb
mov
mov
sub
out
jg
xor
add
and
cmp
mov
adc
mov
cmp
mov
ds
jne
push
sbb
adc
adc
mov
cmp
push
repz
pop
pop
jl
clc
xchg
outsb
or
sbb
jmp
add
pop
pop
in
and
pop
xchg
mov
add
fsubs
mov
or
add
jne
cmp
lret
push
add
scas
jl
stc
push
add
call
push
push
xor
jle
jmp
inc
loope
std
mov
lock
or
push
push
xchg
outsb
push
int
cmp
adc
loopne
push
add
dec
add
loopne
mov
insb
mov
icebp
outsl
jge
faddl
cmp
nop
fsubr
adc
xor
xchg
mov
lret
pushf
add
cmpsb
clc
inc
xor
out
insl
push
and
add
ljmp
jb
add
cmp
les
into
pop
shlb
and
sbb
rcrb
dec
shl
fcmove
inc
int3
or
test
call
in
dec
out
jb
fdivp
fsubr
outsb
jmp
fldenv
add
enter
jmp
rcll
sub
loop
shll
dec
in
loopne
or
aaa
dec
ret
pusha
xor
jbe
aam
sbb
lds
mov
scas
sub
sbb
add
push
ljmp
add
mov
jl
mul
mov
xchg
mov
in
es
gs
cmpsb
xchg
adc
pop
out
jns
stos
inc
mov
sahf
jbe
call
pop
sete
xchg
daa
jnp
adc
or
ret
inc
int3
sahf
cmpsl
lret
add
loopne
or
xor
sub
ret
ds
cmp
test
daa
in
enter
js
aas
call
add
jne
adc
jecxz
push
pop
jg
clc
ret
inc
call
fsubrp
mov
inc
and
jno
out
outsl
and
popa
shl
lea
xchg
add
mov
jb
aam
orl
xor
sub
push
bound
iret
pop
test
inc
mov
enter
push
je
outsb
adc
ja
push
daa
ds
jne
mov
mov
or
xchg
shl
adc
pop
pusha
ficoms
cli
js
nop
and
or
jp
adc
std
cmp
dec
mov
or
adc
sub
cs
in
xchg
jae
mov
in
mov
in
cmp
mov
adc
addr16
pusha
in
jb
test
sbb
ret
mov
stc
jl
sbb
std
test
rolb
nop
sarb
leave
add
hlt
sub
das
popf
push
fbstp
test
jg
out
mov
sbb
mov
sbb
push
jb
mov
fnsave
mov
adc
pusha
xor
or
mov
cmp
mov
sbb
dec
call
jb
ja
push
fnstsw
xor
test
add
push
movsb
add
popf
sub
mov
int3
jnp
fbstp
mov
push
cwtl
mov
or
push
inc
scas
lock
sub
or
mov
push
dec
xor
dec
imul
call
mov
call
push
imul
sbb
aad
pop
loopne
adc
fwait
pop
ss
test
loopne
seto
dec
xchg
addb
lods
lahf
les
lret
test
xlat
xchg
into
call
cmp
add
xchg
jmp
int3
incb
stos
add
sbb
gs
into
out
test
jno
ror
scas
pop
fdivs
es
jo
int3
cmp
dec
cmp
add
repnz
mov
imul
sbb
add
mov
test
mov
int
shr
cld
les
mov
push
in
mov
inc
pop
and
or
add
out
pusha
push
adc
imul
adc
aam
test
xchg
jo
pop
fmuls
movsbl
aas
sbb
or
sahf
adc
rol
shlb
push
sub
loop
rorb
loope
pop
dec
gs
mov
outsl
dec
mov
mov
mov
cmpsl
jbe
test
jl
xor
or
adc
call
movsb
sub
out
xlat
pop
cmpsl
jg
icebp
xchg
add
movsl
movsb
pop
out
ljmp
movsl
sub
mov
cmp
in
dec
cmp
fwait
push
adc
das
lods
jmp
sarl
in
das
and
jmp
cmp
in
push
daa
js
sbb
mov
xor
ret
mov
pushf
jb
rcr
test
inc
xchg
pusha
mov
pop
xchg
aaa
loopne
inc
or
cld
data16
xchg
adc
jo
sbb
lahf
lahf
xchg
pop
outsl
repnz
repz
adc
or
and
ljmp
mov
call
inc
data16
movsb
inc
add
pop
and
add
or
push
adc
jns
or
js
push
test
sub
clc
mov
sbb
jge
popa
fnsave
and
push
int3
pushf
pop
push
add
adc
adc
mov
and
adc
push
leave
or
push
aas
or
or
add
fadds
pop
cmp
mov
and
jl
call
add
and
sahf
cmc
sbb
js
inc
test
loopne
pop
dec
lcall
xchg
mov
repnz
pop
jo
lods
and
and
leave
inc
sub
dec
jg
push
mov
jle
stos
mov
push
loopne
mov
arpl
roll
jecxz
popa
aas
test
loop
jne
mov
cmp
clc
rclb
call
arpl
and
cltd
or
xchg
ljmp
sub
idivb
pop
dec
and
inc
popa
sarb
pusha
cli
or
popa
push
sbb
or
and
loop
or
fdivrl
add
adc
jl
clc
mov
pop
lret
sbb
cmpsl
or
lods
scas
loopne
dec
scas
aas
adc
fdivs
in
sub
push
jns
xchg
pop
pop
test
xchg
lods
clc
mov
cmp
inc
add
pop
mulb
int3
push
sub
ds
and
xor
outsb
or
outsl
call
mov
sti
scas
into
lock
jne
inc
imul
outsl
sub
mov
loopne
mov
add
call
and
or
mov
mov
mov
jle
test
outsb
add
jmp
jmp
jne
cltd
sbb
sub
add
sub
push
pop
mov
lds
mov
jmp
lds
popf
fbstp
mov
mov
sub
pop
and
push
push
mov
test
stos
cmpsb
adc
mov
or
xchg
or
dec
or
call
jecxz
imul
push
decb
mov
jne
pushf
sub
leave
jmp
leave
lock
hlt
sbbl
in
call
jle
and
call
adc
ja
stos
push
add
call
and
and
add
or
mov
fdivrp
inc
out
jmp
clc
mov
int3
and
mov
add
cltd
xor
or
lea
and
pop
jmp
or
sub
and
and
sbb
in
xor
pop
cltd
int
dec
fiadds
imul
int3
sahf
andb
push
jge
clc
mov
add
cs
jno
lods
mov
lods
mov
data16
stc
dec
dec
pop
popa
cmp
or
add
ret
or
lcall
lock
ljmp
adc
pop
jecxz
stos
mov
fstpt
cmp
mov
orb
ja
push
ffreep
mov
push
sub
push
mov
pop
mov
cltd
scas
and
jmp
inc
loopne
hlt
setge
pushf
inc
xchg
mov
adc
pop
ret
jle
fdivrl
pop
push
push
adc
adcb
inc
cmp
sbb
fcomps
add
out
push
int3
add
or
xor
xor
add
jp
jge
test
insl
mov
mov
xchg
push
sbb
pop
out
imul
cmpsl
pop
jmp
xor
out
xor
lock
loopne
lret
es
jp
movsl
add
loopne
mov
xchg
xor
inc
or
lock
roll
lahf
loopne
or
aaa
and
pop
mov
jno
daa
roll
dec
jbe
test
push
push
lods
aas
or
inc
pushf
test
test
sub
fbld
divl
cld
stos
cmp
jge
adc
movsbl
icebp
ja
js
xchg
add
or
aam
xchg
fs
iret
cli
bound
xor
aam
cs
enter
push
aam
jns
pop
aam
dec
push
aam
cmp
pop
aam
popa
aam
lret
push
aam
jns
lahf
push
mov
imul
in
jo
aam
sbbl
shrb
in
enter
push
rclb
mov
push
rcr
cmp
pop
shl
pusha
sarb
shlb
jns
lahf
push
push
popa
sub
or
and
enter
inc
cmp
hlt
xchg
jns
xchg
aaa
cmp
and
sub
test
sub
and
fcoms
gs
shlb
shrb
sar
push
and
das
leave
and
inc
call
push
jo
sarb
sub
rcrb
rcr
and
in
shlb
rcrb
es
pop
rcrb
rcrb
sbb
imul
push
and
ror
stc
or
enter
xor
cs
or
int
push
pop
xchg
ds
push
int
mov
pop
dec
ja
inc
int
add
cmpsl
jb
hlt
int
int
clc
int
jb
push
clc
int
int
xchg
xor
add
int
xorps
mov
xor
cmpsb
jae
adc
pop
add
cmp
int
lret
mov
sbb
lret
mov
mov
mov
ror
lret
mov
dec
jg
push
mov
inc
call
cmp
push
lret
mov
repnz
ror
cmp
xadd
ror
mov
loope
mov
pop
mov
mov
inc
mov
and
andb
lret
lret
leave
leave
enter
leave
leave
in
bnd
pop
leave
leave
leave
or
repnz
pop
leave
and
xchg
mov
test
inc
ds
leave
pop
mov
mov
rcrb
adc
in
jno
leave
sub
jl
mov
loope
call
cmpsb
ja
jo
mov
push
jb
dec
dec
pop
pop
enter
cmp
inc
push
and
pusha
pop
inc
mov
fs
fs
cmp
dec
lods
lods
cmp
dec
dec
jo
push
and
in
push
push
pushf
xchg
ret
loope
inc
pop
cltd
xchg
xchg
lret
or
test
and
mov
xchg
pop
xchg
lret
in
mov
pop
pop
stc
dec
ret
mov
repnz
sbb
sbb
sbbb
nop
sub
fdivl
xor
jo
loope
add
sub
loope
rol
add
aam
sbb
and
fadd
fadd
rol
lret
lret
and
ret
in
fadd
adc
ret
dec
push
sahf
lods
pop
pop
int3
ret
fadd
nop
xchg
xchg
daa
fadd
and
ret
test
loope
and
pop
mov
ret
pusha
clc
or
fadds
dec
push
add
aad
or
ret
cmp
pushf
shlb
fs
rolb
test
xchg
xchg
and
mov
sarb
cld
push
adc
xchg
mov
movsb
sarb
lret
pop
test
test
popa
sub
loope
dec
into
and
push
test
rcrb
nop
dec
mov
jl
mov
sub
xchg
mov
test
daa
lahf
mov
push
cmp
xchg
cmc
insb
mov
and
in
mov
xchg
aaa
lods
add
dec
pop
cmpsl
fs
hlt
mov
scas
ja
sub
xchg
sub
pop
mov
cmp
inc
push
xor
lret
or
pop
sub
cmp
mov
inc
ja
adc
call
mov
adc
xor
inc
push
enter
mov
or
mov
xor
sub
out
inc
sahf
dec
jb
sbb
repz
enter
mov
jns
sub
lock
jns
jns
add
mov
inc
call
lcall
mov
cld
mov
pop
sbb
inc
add
outsl
sub
xorl
mov
mov
mov
lret
in
ds
mov
iret
and
pop
mov
mov
aam
xchg
push
mov
inc
nop
dec
in
les
mov
in
cmp
mov
mov
xchg
dec
fidivs
test
movsl
pushf
mov
je
mov
xorb
push
mov
hlt
cld
test
or
jge
mov
pop
jl
or
cmp
outsl
push
hlt
fnstenv
lea
jae
call
in
and
sbb
mov
repnz
and
mov
mov
orl
lret
in
mov
and
mov
test
and
stc
xchg
mov
mov
mov
sbbb
and
movsb
pop
xorb
push
xchg
inc
loopne
lahf
xchg
push
lea
cld
pop
sarl
and
fistps
push
ret
mov
and
bound
xchg
mov
jge
cmp
sub
out
cmp
icebp
js
jns
in
dec
mov
mov
mov
or
cmp
mov
pop
dec
mov
iret
lret
lret
push
mov
pop
dec
mov
adc
pop
inc
ficoms
in
ljmp
push
enter
mov
pop
mov
mov
or
pop
mov
sub
mov
and
mov
sub
sub
pop
pop
cmp
and
enter
inc
pop
test
repnz
sub
call
mov
imul
in
popa
dec
inc
adc
nop
xchg
inc
push
sbb
mov
jae
jb
adc
sbb
pop
or
fimuls
je
dec
sbb
inc
lods
sbb
sbb
pop
and
and
xorb
loop
leave
clc
pop
ret
aam
mov
repnz
movsl
push
lods
and
push
pop
adc
addl
mov
mov
jns
inc
or
lods
sbb
and
scas
fsubrs
in
fsubrl
pop
mov
sub
fsubrs
jns
dec
cmp
scas
mov
test
scas
in
pop
call
scas
call
or
scas
push
sbb
cmp
and
jbe
ds
lods
and
in
mov
dec
jo
fisubrl
push
mov
push
imul
lods
lods
lods
xchg
lret
test
lods
lods
lods
lahf
dec
sub
test
lods
movsl
dec
mov
mov
repnz
lods
lods
lods
pop
mov
add
lods
mov
nop
fwait
sub
add
test
orl
dec
xchg
lods
xor
and
cmp
stos
and
sbbl
push
jns
insb
stos
js
jo
fsubrl
cld
sub
call
popf
fwait
xchg
stos
mov
lret
je
je
pop
js
sbbb
cmp
sbb
loope
push
cmp
sub
pop
pop
dec
xor
ss
stc
pusha
enter
xor
cmp
adc
xor
sub
inc
pop
xor
call
in
mov
test
cmp
dec
pop
inc
test
test
mov
in
test
adc
jns
xor
subl
shrb
test
test
inc
push
repnz
movsl
add
pop
cmp
movsl
js
cld
movsl
fs
lret
or
clc
movsl
push
sahf
lods
mov
hlt
movsl
add
xchg
xchg
daa
dec
add
add
lods
pop
or
or
nop
out
or
and
sar
movsl
rcrb
in
inc
sub
push
mov
movsl
push
movsl
in
xchg
xchg
les
sub
in
shlb
mov
enter
shlb
mov
pop
dec
mov
int3
repnz
ds
mov
mov
shlb
jl
das
shlb
push
in
or
jmp
push
sbb
mov
test
mov
sub
dec
pop
mov
dec
sub
mov
or
mov
mov
and
mov
xor
xlat
out
dec
sub
loopne
jbe
cmp
roll
mov
inc
dec
fs
inc
dec
inc
sbbb
pop
es
push
dec
movsb
pop
add
pop
repnz
inc
call
fdivrl
dec
lahf
add
push
mov
push
lahf
imul
push
lahf
push
lahf
loope
xchg
pop
xchg
jp
cmp
lahf
dec
inc
out
cmp
lahf
push
sbb
xchg
lahf
popf
popf
popf
jb
lahf
inc
popf
fcompl
xchg
lret
popf
popf
add
loop
leave
out
loopne
popf
mov
iret
adc
adc
pusha
dec
enter
popf
sbb
imul
outsb
dec
jle
pop
inc
and
xor
pusha
cwtl
add
lea
sahf
push
loopne
sarb
inc
jl
push
mov
lcall
lcall
lcall
mov
inc
lcall
fcompl
xchg
lcall
pop
nop
adc
lcall
rcrb
jae
cmp
inc
dec
mov
sub
lcall
repnz
cwtl
mov
inc
push
cmp
test
xchg
xchg
xchg
cwtl
mov
pop
pusha
and
inc
loopne
aas
or
movsb
cwtl
inc
ds
and
nop
adc
test
test
loope
es
gs
cwtl
fmuls
cmp
push
xor
xchg
sbb
cwtl
notl
inc
push
jb
xchg
insb
xchg
pusha
xchg
pop
pop
pop
enter
xchg
jo
push
inc
or
pusha
xchg
inc
call
addb
mov
pop
insb
xchg
insb
xchg
popa
pushf
nop
pop
bnd
jo
jo
int3
adc
and
xor
xchg
popa
lret
sub
adc
add
xchg
xchg
xchg
test
xchg
xchg
inc
popa
sub
xchg
lret
xchg
xchg
xchg
fs
xchg
cmp
lahf
dec
xchg
push
aas
xchg
mov
sysenter
xchg
xor
and
in
popa
cmp
cmp
xchg
loope
sub
mov
push
hlt
xchg
xchg
enter
xchg
xchg
xchg
pop
cs
xchg
cwtl
popa
xchg
xchg
pop
push
jns
xchg
mov
push
cmp
inc
ds
xchg
xchg
dec
dec
in
xchg
int3
popa
xchg
xchg
ret
fcmove
test
dec
es
xchg
loopne
xchg
push
dec
cmp
loopne
xor
jl
sub
mov
inc
lock
bnd
pop
adc
jae
mov
cmp
mov
repnz
ds
enter
rcrb
enter
mov
iret
cmp
dec
pop
cltd
lea
lea
inc
add
ficoms
cmp
lea
dec
sahf
cmp
lea
mov
jb
test
lock
in
insb
bound
cmp
jae
cmp
aas
dec
mov
lea
lea
pop
loope
pop
ret
popa
and
dec
nop
movsb
sbb
cmp
push
sub
mov
add
leave
popa
cmp
jns
lea
in
pop
jns
mov
push
mov
and
dec
mov
lret
enter
push
mov
dec
mov
or
outsl
inc
call
inc
jle
jne
adcl
sub
mov
xchg
loope
and
call
cmp
movb
pusha
mov
orl
in
bound
push
jns
arpl
or
dec
sbb
add
push
mov
arpl
mov
dec
enter
mov
xchg
xchg
arpl
js
cmp
jecxz
cmp
adc
nop
inc
push
mov
pop
enter
arpl
jb
js
xchg
lea
xchg
out
mov
xchg
mov
stos
loope
or
pushf
inc
leave
out
mov
add
sarl
and
xchg
test
ds
test
aam
test
aaa
test
lods
test
pushf
nop
pop
mov
mov
xchg
loope
pop
inc
and
js
and
sub
test
cwtl
test
xchg
daa
daa
insb
xorb
adcb
out
orb
insb
cmpb
jl
push
jo
sub
push
pop
xchg
xorb
cmpb
xorb
and
adcb
enter
add
fs
sbb
jne
clc
idivl
pusha
sbb
or
xor
fs
inc
cmp
cs
or
fs
cmp
xchg
cmp
test
call
jae
jg
mov
pop
cmp
cmp
fs
adcb
inc
andb
ret
pop
loope
xor
dec
push
push
and
test
cmp
shlb
pop
sti
int3
in
push
call
mov
adc
loopne
push
push
sub
sub
push
jb
jle
jle
jge
fs
cld
jge
jle
jle
sub
clc
jge
call
pop
add
enter
jle
jle
or
test
jle
jle
jle
xorl
invd
gs
ror
out
fwait
out
xor
nop
sbb
inc
push
cmp
xor
sub
mov
sbb
sbb
jnp
jnp
cs
repnz
jnp
jl
test
jnp
xor
out
pushf
jnp
mov
jnp
jnp
sarb
in
cmp
jnp
jnp
xorl
and
cmp
out
ret
into
xor
out
cmp
sbb
inc
jno
xchg
xor
dec
cmp
pop
xor
jnp
jns
in
enter
jo
jns
pop
jns,pn
jns
gs
pop
push
jns
mov
jns
das
inc
fdivrl
lahf
lret
gs
jns
jns
sub
loope
push
jb
insl
mov
gs
or
scas
outsb
jnp
cmp
xor
or
insl
inc
jb
push
aam
divl
adc
scas
std
subl
mov
jns
ja
nop
inc
push
ja
ja
mov
ja
ja
mov
ja
out
cs
adc
pop
ja
ds
and
pusha
ja
nop
adc
pusha
ja
ja
loope
jl
pusha
xchg
push
ja
shrb
and
ja
and
or
or
jne
and
pop
cs
jne
jne
data16
dec
ds
jne
sub
pop
add
and
and
adc
inc
sub
jne
push
pop
nop
jne
addr16
xchg
cmp
sbb
data16
sbb
xchg
pop
fcoms
jne
jb
lahf
inc
push
jb
js
lret
jb
jb
pushf
data16
leave
out
jb
int
jb
jl
loopne
push
in
jb
jb
add
push
data16
jb
imul
jb
xor
jb
xorb
pushf
xchg
pop
in
push
sbb
xchg
inc
jb
jo
lahf
inc
push
jo
shlb
lret
in
jo
jo
data16
leave
out
jo
mov
jo
cld
or
jo
jo
add
push
addr16
mov
dec
mov
gs
dec
jb
jo
mov
in
fs
pop
in
jo
jo
jb
xchg
je
js
jl
pop
enter
outsb
sub
outsb
sub
pop
subb
dec
addr16
mov
call
or
jl
pop
repnz
subb
sbbb
xor
sbb
jo
jo
and
mov
add
outsb
outsb
insb
or
enter
insb
cs
or
andb
insb
ds
push
pop
movsb
insb
insb
subb
add
insb
mov
ds
and
dec
insb
pop
nop
adc
dec
insb
dec
insb
loope
es
popa
cmp
in
in
sub
xor
and
add
or
jb
orl
push
and
das
xchg
adc
push
fs
das
add
push
sub
mov
cld
imul
in
lods
lods
or
adc
push
andb
adc
loope
pushf
in
xor
push
push
mov
push
enter
nop
dec
mov
nop
inc
push
addr16
pop
enter
addr16
addr16
daa
jg
mov
aam
inc
ds
and
addr16
adc
fsubs
loopew
es
xor
addr16
les
push
add
jb
xor
sar
push
pop
daa
xchg
inc
sub
addr16
push
sbb
gs
or
jns
pop
and
lods
push
nop
mov
out
pop
xchg
gs
enter
gs
test
mov
cmp
push
lock
and
repnz
loopne
mov
sbbl
arpl
arpl
xchg
arpl
xchg
xchg
and
pusha
arpl
pop
arpl
aad
filds
in
and
arpl
out
arpl
add
push
imul
inc
dec
push
xchg
pushf
in
arpl
imul
fs
or
and
push
arpl
nop
sbbl
popa
sub
popa
xchg
pop
mov
and
imul
xchg
popa
sub
and
fst
filds
mov
in
loope
add
sub
inc
push
enter
popa
xor
pop
or
popa
loope
and
dec
leave
and
push
push
dec
jb
adc
out
dec
xorl
inc
popa
popa
mov
push
pop
inc
ds
sahf
hlt
pop
call
mov
jb
pop
clc
pop
lock
mov
in
pop
clc
pop
and
and
mov
lret
hlt
pop
imul
jns
pop
clc
pop
loope
into
sub
call
sbb
push
sahf
fs
and
sbb
sub
loopne
loopne
mov
cmp
inc
push
mov
pop
xchg
xchg
inc
push
lock
rcrb
lret
adc
mov
inc
jno
outsb
call
pop
mov
mov
pop
mov
cmpl
repnz
mov
loope
mov
mov
dec
dec
cmp
xlat
aaa
and
nop
cmp
pop
or
leave
and
nop
iret
and
in
jb
pop
pop
pop
insb
push
in
dec
pop
pop
dec
and
jle
jo
mov
in
jl
push
pop
mov
mov
daa
mov
in
dec
bnd
nop
push
insl
inc
and
daa
xor
add
jmp
mov
clc
pop
pop
inc
push
sbb
pop
pop
pop
in
and
pop
out
lret
les
pop
xchg
xchg
lret
pop
pop
pop
pop
fs
sub
pop
cmpsb
dec
cs
fsub
cmpb
movl
aaa
je
scas
xchg
inc
push
call
ret
jno
ret
cmp
push
cmp
inc
push
adc
push
or
xchg
inc
push
clc
or
sbb
outsl
leave
lret
sbb
or
jo
or
call
mov
cmp
adc
imul
cmpl
movsl
test
pop
cmp
push
imul
jmp
cmp
lea
mov
or
out
push
or
enter
push
in
adcl
push
and
push
je
push
popf
xchg
iret
push
enter
test
fcoml
push
imul
push
loopne
cmp
and
rclb
sbb
sets
jl
movsl
cmp
jmp
jns
inc
enter
mov
and
in
in
pushf
push
test
mov
jb
imul
add
push
mov
pop
movsb
push
movsb
push
imul
test
test
xchg
jae
imul
cwtl
push
imul
das
xchg
xor
sbb
xchg
or
loopne
push
dec
stc
or
enter
add
xchg
or
dec
and
and
xchg
push
dec
dec
test
add
scas
mov
cmpsl
jb
insb
dec
insb
dec
insb
jo
or
push
jo
jo
loope
and
pop
lret
pusha
dec
dec
insb
jns
pop
scas
in
xor
movsl
sbb
xchg
cmpl
pop
dec
sub
cmp
inc
push
xor
dec
sub
lret
or
insb
sub
cmp
fs
xor
insb
sub
mov
bound
loope
mov
scas
xor
xor
insb
adc
inc
cmp
dec
cmp
pop
nop
dec
loope
sub
jns
daa
mov
cmp
sbb
dec
sbb
xchg
inc
dec
dec
dec
and
mov
lret
jb
dec
dec
aam
into
leave
out
dec
dec
inc
sbb
in
call
cld
dec
inc
push
enter
dec
add
pop
or
dec
loope
and
pushf
cmp
sbb
nop
popa
push
fwait
sub
and
cmp
dec
and
cmp
mov
dec
das
das
fs
dec
or
dec
enter
and
rorb
mov
filds
push
pop
and
call
les
push
enter
dec
enter
or
dec
loope
and
dec
insl
lods
add
rorl
nop
inc
push
mov
pop
enter
insl
inc
inc
mov
test
inc
dec
mov
inc
mov
jg
inc
mov
mov
pushf
nop
pop
mov
inc
and
adc
loope
jl
xor
mov
xchg
nop
mov
mov
mov
xchg
je
je
sbbl
dec
inc
xchg
dec
inc
push
xchg
mov
das
das
push
inc
dec
inc
faddl
fs
push
inc
les
inc
test
inc
push
inc
push
inc
in
pop
enter
inc
push
inc
push
inc
test
loope
sbb
jns
inc
inc
add
sbb
cmp
mov
pop
cmp
inc
adc
sbb
inc
jns
and
adc
inc
sbb
xchg
lods
sbb
adc
xor
or
jne
sbb
inc
call
inc
mov
dec
sbb
inc
outsb
daa
in
jl
inc
sbb
sbb
test
daa
jb
jns
or
pop
outsb
push
mov
leave
loope
add
outsl
add
fdivrs
sbb
and
fdivrl
loopne
aam
in
test
aas
pop
mov
in
aas
mov
aas
inc
sub
call
aas
mov
pop
loopne
loopne
outsb
pushf
nop
pop
repnz
in
in
mov
test
nop
in
aas
sub
enter
adc
shl
icebp
pop
clc
or
pop
sbb
jb
jno
aas
mov
enter
cmp
bnd
mov
cmp
in
cmp
xchg
daa
sub
cmp
pushf
nop
xchg
lret
hlt
lods
cmp
in
lods
cmp
and
jno
cmp
rcl
adc
xchg
cmp
pop
xchg
cmp
lods
sbb
and
cmp
outsl
in
in
push
cmp
mov
cmp
cmp
adc
sub
cmp
jo
jo
outsl
je
sbbb
adc
loope
cmp
adc
dec
and
pop
lret
push
sub
sbb
cmp
cmp
inc
push
cmp
cmp
pop
enter
cmp
stc
mov
cmp
adc
fcompl
cmp
xchg
cmp
cmp
cmp
cmp
loope
jb
bound
cmp
inc
clc
pop
jmp
add
stc
add
call
pop
pop
and
in
pop
pop
adcl
cmpl
mov
xchg
ja
and
push
and
clc
ss
cmp
cld
add
hlt
ss
in
clc
ss
cld
ss
leave
out
outsl
hlt
ss
call
cmpsl
mov
push
add
pop
repnz
sbb
aaa
cld
outsl
add
add
sahf
pushf
nop
aaa
add
add
enter
pop
hlt
adc
mov
cmp
mov
pop
ds
pop
das
and
in
adc
pop
icebp
ficompl
in
xlat
enter
in
shlb
and
pop
cmp
xor
xor
jo
jns
jns
xor
xor
xor
jo
xchg
xchg
lods
mov
or
in
lret
enter
enter
mov
push
jo
xor
xor
imul
adc
mov
jl
js
adc
orl
and
mov
leave
add
cmp
mov
add
in
inc
xor
xor
lahf
inc
push
xor
js
lret
jb
xor
pushf
jo
in
xchg
xor
or
xor
repnz
mov
xor
pmulhuw
xchg
xor
xchg
xor
lods
xchg
inc
dec
repnz
shlb
and
xor
sahf
cmp
leave
jl
push
xor
xor
ds
dec
xor
jo
xor
repz
pop
xor
jo
xor
outsl
test
pop
xor
sub
in
pop
sarb
test
dec
jno
xor
pop
sbb
pop
xor
je
es
sbb
mov
jecxz
pop
and
inc
mov
xchg
jl
js
jno
enter
test
nop
dec
mov
add
std
push
in
cmp
std
fdivr
loope
cmp
jno
mov
pop
aas
xor
leave
mov
jge
aam
and
test
pop
mov
jno
mov
mov
dec
ret
push
add
mov
arpl
sti
sti
cmp
push
nop
sti
push
and
inc
add
movb
fcmovnb
xor
test
add
adc
jecxz
pop
imul
jb
cs
pop
push
in
frstor
stc
ret
add
jecxz
nop
iret
daa
add
jb
stc
sbb
test
stc
push
jg
pop
pop
pop
stc
shl
test
jb
scas
dec
xchg
jne
shll
jb
add
sbb
rcll
cmpsb
xchg
fbld
add
loope
pop
gs
inc
dec
enter
mul
sub
idivl
mov
sub
mov
cmp
mov
in
in
jb
add
and
shlb
adc
shlb
jb
cmp
sbb
jae
add
nop
pushf
or
jae
jae
mov
cmc
aaa
mov
and
cmp
jb
jae
jae
repnz
add
insb
jae
jo
cmp
xorb
add
addr16
jo
nop
psadbw
loop
add
leave
sbb
stc
xchg
outsb
xchg
movsl
aaa
nop
jae
and
out
mov
dec
lahf
sub
push
add
sub
and
in
outsb
jae
imull
and
cmp
push
jb
neg
jae
lods
mov
inc
push
stos
dec
fs
jae
xchg
lret
gs
in
je
and
arpl
mov
cltd
nop
lret
hlt
hlt
mov
and
sbb
jns
in
xor
mov
or
push
xorb
lods
inc
je
cs
or
dec
call
and
add
orl
pop
jb
push
mov
mov
js
pop
lods
repnz
xchg
xchg
mov
lods
mov
push
mov
je
xchg
lret
gs
jl
je
xchg
sarb
std
add
pcmpgtd
test
enter
test
test
dec
fidivs
je
mov
pop
push
xchg
xor
jg
arpl
aaa
std
and
cmp
pop
es
dec
inc
scas
pop
repnz
jne
dec
hlt
sti
add
add
enter
jne
out
dec
out
pop
or
dec
out
loope
cmp
test
xchg
mov
jne
nop
add
insb
jne
cli
adc
scas
xchg
add
sub
xchg
jne
jne
and
and
jb
dec
enter
mov
cmp
jne
mov
js
push
and
nop
or
sti
sub
fs
push
jb
sti
call
adc
xchg
aaa
mov
mov
jne
inc
push
sbbb
clc
add
mov
jbe
and
inc
jbe
adc
or
cli
pop
data16
ss
popa
addb
mov
mov
test
xchg
dec
sahf
and
sub
sbb
insb
sub
jbe
sub
push
mov
in
cmpsl
adc
cwtl
jbe
and
and
mov
test
call
hlt
in
int3
jbe
jae
mov
mov
add
fdivl
cmp
loopne
xchg
and
mov
jmp
test
xchg
ja
pushf
inc
push
and
pop
cmc
and
inc
push
xor
cmp
add
sub
pushf
sbbb
cmc
add
sahf
inc
push
cmpb
add
mov
ja
sbbl
enter
aam
inc
mov
in
xor
clc
ja
xchg
push
insl
scas
call
andb
mov
mov
or
inc
push
or
fs
cmp
cs
sub
push
fs
mov
sub
repnz
in
test
fs
sbb
inc
fs
loope
xchg
pushf
pop
addr16
stc
js
cmp
call
sbb
dec
xchg
pusha
js
sahf
inc
push
test
icebp
add
test
int3
nop
sbb
js
xchg
inc
sbb
adc
or
add
inc
mov
push
repnz
out
add
js
inc
jb
lock
jns
orb
and
stos
mov
jns
scas
xchg
daa
nop
jns
out
add
xchg
adc
dec
jns
sarb
and
or
push
inc
jae
cmp
repnz
repnz
in
add
mov
inc
shlb
add
jns
push
leave
adc
mov
leave
mov
jns
jp
loope
sub
inc
icebp
fmull
clc
and
out
orl
out
jmp
in
mov
sbb
dec
in
jb
in
cmp
jmp
mov
jmp
hlt
jmp
xchg
and
push
dec
add
add
jp
repnz
ds
or
or
loope
clc
jmp
cmpsb
in
pusha
jp
enter
lock
lock
jmp
enter
shr
das
das
fs
jmp
fists
shr
call
jo
and
xor
jp
jmp
shr
shr
leave
cmp
jmp
and
and
push
jmp
jb
out
jb
nop
iret
out
jp
out
dec
in
out
jp
out
movsb
xor
popa
jmp
cltd
nop
lret
cld
jp
out
ficoml
loope
jp
dec
push
out
jnp
and
jns
xor
enter
and
jnp
add
jnp
and
jnp
inc
rorl
test
cs
lret
dec
inc
lods
arpl
test
xchg
dec
sahf
and
nop
out
pop
jg
call
and
mov
jns
sti
mov
mov
stos
lds
xchg
nop
xchg
shlb
cmp
je
inc
push
sbbb
dec
sahf
sbb
add
inc
sbb
sbb
and
and
aad
mulb
sub
in
and
sub
jo
xchg
and
or
add
push
lea
sub
jl
test
xor
cmp
mov
pusha
loope
and
ds
and
sbb
xchg
or
ret
sbb
lods
or
enter
cmpb
test
clc
lock
xchg
xchg
dec
sahf
jl
clc
sti
jecxz
daa
daa
xchg
in
hlt
hlt
mov
pop
enter
clc
clc
pushf
push
imul
insl
scas
nop
xchg
jl
repnz
ret
and
orl
mov
xor
sub
jl
enter
enter
mov
fs
mov
les
and
lret
jge
enter
pop
enter
es
orb
shrb
mov
and
adc
test
mov
nop
pushf
push
inc
push
jl
mov
repnz
pushf
mov
nop
lods
or
loope
fs
aaa
or
or
test
or
enter
dec
xchg
lret
test
jg
sahf
and
loopne
nop
lret
pop
imul
sub
fsubp
mov
testl
leave
sbb
loope
dec
not
xchg
sbb
add
inc
notl
push
jb
cmc
sbb
sbb
mov
cmc
loopne
cmc
and
dec
push
mov
cmc
cmp
leave
lret
int3
fisttps
pop
mov
nop
pop
repnz
and
and
daa
push
and
adc
pop
or
and
imul
rol
or
jns
lods
cmc
invd
cmc
fcompl
fs
inc
loopne
fsubrs
xchg
or
jle
call
inc
pop
jle
call
sub
in
or
insb
jle
call
call
aad
psubusb
addb
adc
ja
decb
arpl
int3
xor
and
test
dec
sahf
and
pushf
push
cltd
dec
jg
call
test
lret
adc
lock
lods
lock
lock
pop
sbb
loope
pushf
lock
push
fadds
iret
fistpl
in
std
pop
xchg
and
imul
repnz
pop
enter
xchg
push
xor
in
jle
and
adc
cltd
dec
jg
inc
call
push
das
jb
jo
loope
and
out
je
arpl
loope
inc
into
gs
fs
xor
inc
sahf
pop
pop
pusha
pushf
icebp
pop
or
repnz
pop
xor
xor
cmp
lahf
subl
jg
in
in
in
cmp
push
sbb
cltd
cmp
fldt
in
cmp
mov
jb
cmp
cmp
enter
cmp
loope
out
mov
sub
or
or
mov
and
dec
jmp
push
imul
in
sbb
jmp
jl
jmp
sub
xchg
ljmp
xchg
lahf
ljmp
test
ljmp
enter
loope
xchg
insb
popf
jmp
and
dec
imul
or
in
or
leave
mov
mov
test
in
jb
xchg
mov
test
lock
call
in
jl
jl
stc
nop
in
in
orb
stc
xchg
in
in
in
add
dec
test
js
daa
cltd
in
xchg
or
mov
adc
adc
add
or
adc
sub
xlat
add
adc
and
faddl
push
insl
arpl
orb
inc
and
inc
pop
and
or
push
and
and
lret
mov
loope
inc
dec
aam
add
push
addl
mov
pop
mov
pop
pop
pushf
and
cmp
and
inc
push
aam
lods
adc
and
xchg
adc
in
hlt
jp
xchg
sbb
dec
aam
lds
add
add
dec
and
inc
sub
pop
inc
cmp
xchg
orb
cmpb
sbb
sbb
repnz
cmpb
addb
repnz
repnz
pushf
pushf
push
repnz
xorb
push
repnz
cmpsb
mov
xchg
loope
adc
stc
nop
pop
daa
movsb
push
fs
or
or
repnz
repnz
or
lock
push
pop
cs
lock
xchg
lock
rcrl
mov
test
repnz
ds
dec
orb
nop
adc
mov
cld
lock
add
add
xor
jb
xor
and
push
inc
addl
jmp
adc
and
fistps
hlt
mov
push
or
mov
orl
mov
or
add
and
insl
nop
or
push
jb
pusha
rorl
add
hlt
dec
movsl
mov
iret
mov
cld
xchg
mov
and
or
add
addl
add
hlt
addl
lret
mov
xlat
dec
lds
add
cmp
adc
sbb
out
in
and
test
or
jo
sub
int3
add
cmp
test
and
xor
sub
pop
scas
or
dec
loope
sbb
lea
add
mov
lret
xchg
and
orl
loopne
test
lock
nop
test
and
cmpsl
rolb
pop
sub
test
cmp
iret
test
hlt
lock
mov
hlt
loope
xchg
test
add
and
stos
clc
jno
stc
scas
clc
mov
cmp
jge
clc
xor
xor
xor
lret
or
add
les
in
lret
test
and
popf
fdivrs
xchg
lret
mov
sbbb
and
inc
push
push
test
push
aaa
push
test
jb
mov
add
cwtl
test
nop
pushf
or
test
lods
test
jo
cmp
inc
adc
int3
test
nop
add
lock
adc
scas
xchg
add
xchg
and
xchg
xchg
sbb
test
or
and
add
sbb
xchg
adc
movb
movsl
rorl
adc
nop
or
xchg
mov
or
adc
and
mulb
cld
mulb
es
fcoms
jl
rcr
xchg
cmp
cs
xchg
fmull
and
inc
fmuls
jns
dec
fdivs
mov
loope
xor
sbb
jo
rol
adc
enter
cwtl
pushf
mov
xchg
aam
cwtl
movsb
jns,pn
pop
pushf
clc
xchg
inc
les
lods
pushf
mov
push
jb
movsb
or
loope
xchg
cld
add
xchg
sbb
mov
je
sti
sub
add
mov
xchg
and
inc
mov
inc
push
sbb
sub
jb
nop
xchg
fs
leave
jae
xchg
ret
in
movsb
xor
push
addr16
xchg
push
loope
movsl
xchg
pushf
fs
je
leave
jo
ret
mov
orl
sub
mov
test
cmp
test
and
jb
sbb
ret
xor
jb
mov
ss
loope
and
adc
add
aas
inc
jmp
mov
imul
inc
daa
pop
mov
jmp
cltd
nop
xchg
xchg
jmp
faddl
jns
jmp
jmp
mov
dec
sbb
mov
call
adc
clc
jmp
jmp
cmp
dec
mov
jmp
jmp
mov
in
jmp
stos
and
in
jmp
pop
leave
dec
loopne
jo
add
cltd
in
jmp
mov
mov
mov
sbb
mov
mov
inc
call
dec
mov
jmp
mov
shr
sub
loope
nop
xchg
mov
mov
data16
sti
xor
mov
adcb
jl
test
nop
xchg
js
mov
leave
jae
xorb
xor
test
rorb
or
jb
js
aam
imul
push
out
in
jl
sbb
in
mov
das
xchg
lret
in
in
mov
int3
sbbb
jno
lret
adc
stc
push
ds
dec
in
push
in
inc
dec
enter
in
dec
jb
adc
inc
in
inc
in
or
in
sbb
sbb
jecxz
jecxz
cs
repnz
jecxz
jecxz
cs
jecxz
mov
inc
jecxz
jecxz
and
push
stc
jo
jecxz
adc
jbe
jecxz
loope
les
icebp
jecxz
mov
ret
and
mov
mov
in
inc
cld
in
pop
cmp
cld
enter
pop
pop
push
dec
xchg
sar
cld
cld
lret
inc
mov
repnz
push
mov
enter
push
jns
cld
enter
imul
int3
loope
cltd
in
xor
pop
cld
orl
cli
cli
cli
cli
lret
in
ds
mov
cli
iret
and
mov
cli
push
ret
test
in
lahf
and
xchg
in
cmp
cli
xchg
cli
xchg
cli
cmp
test
and
es
das
dec
jb
dec
jl
jl
jns
in
push
clc
push
clc
pop
clc
lret
cmp
clc
inc
mov
xchg
iret
lret
lret
push
clc
push
mov
mov
xchg
and
pop
pop
clc
pop
clc
mov
repnz
ds
clc
pop
clc
pop
mov
pop
nop
clc
loope
nop
xchg
hlt
xchg
ja
and
clc
filds
cmp
jb
negb
and
adc
gs
jl
mov
mulb
das
leave
out
sbb
rorb
mov
xor
idivb
and
and
mov
push
enter
mulb
xor
pop
or
addr16
push
inc
xchg
divb
hlt
stc
xchg
ja
hlt
cmc
mov
add
pushf
cmpsb
or
repz
jb
and
call
repnz
push
clc
mov
repz
repz
repz
fdiv
jmp
call
repz
push
call
jb
push
enter
repz
repz
lcall
loope
xchg
xchg
adc
ret
rcrl
pop
and
nop
xchg
sbb
aam
aam
test
lret
jb
icebp
mov
movsb
icebp
pop
pop
pop
enter
icebp
mov
lods
icebp
lret
inc
je
icebp
mov
adc
in
repnz
icebp
mov
or
mov
nop
adc
inc
mov
mov
es
pop
loope
movsb
icebp
cwtl
xor
dec
popf
xor
jns
insl
pushf
icebp
mov
pushf
icebp
jo
je
inc
push
push
jb
out
insb
out
test
cmp
repnz
jl
je
int3
mov
cld
sub
call
in
jmp
js
push
enter
out
mov
out
pop
or
jl
loope
xchg
mov
int3
cs
xor
mov
mov
call
add
mov
add
jns
and
mov
pushf
push
inc
mov
les
adc
lods
xor
enter
or
push
enter
mov
sbbl
mov
mov
enter
mov
mov
push
inc
push
cs
cmpsb
mov
mov
lods
pushf
pushf
mov
and
nop
nop
nop
pushf
sub
xor
leave
xchg
in
js
enter
dec
push
push
adc
dec
pop
jns,pn
pop
push
aam
dec
pop
pushf
push
inc
push
xchg
mov
push
push
adc
lods
pushf
push
in
pop
pop
lods
or
loope
pushf
sub
clc
mov
inc
inc
orl
adc
sbb
in
and
or
out
sbb
gs
or
sbb
and
lret
lea
and
fisubl
pop
and
push
leave
dec
cmpsb
push
adc
pusha
lea
sbb
in
push
scas
or
sbb
fsub
in
inc
push
push
fsubs
and
loopne
fcoms
bound
xchg
xchg
in
cwtl
call
call
xchg
dec
test
lods
lea
idivb
or
fisubs
sbb
fsubrl
sbb
test
mov
mov
sub
mov
dec
sub
pushf
lods
lods
lods
nop
or
lock
mov
xchg
mov
mov
es
inc
aad
cwtl
enter
cwtl
insb
jo
lods
or
je
adc
sahf
and
cmp
dec
js
lods
fs
sub
daa
je
dec
mov
pop
enter
dec
nop
push
add
shrl
add
push
repnz
mov
sub
xor
jmp
movsb
push
ss
out
in
sbb
in
in
in
pop
cs
repnz
mov
in
in
jl
test
in
push
lods
pop
mov
pushf
in
mov
enter
in
mov
push
in
cmp
in
inc
in
loope
les
addr16
movsl
leave
xchg
cmp
mov
leave
popa
jp
push
sub
test
pop
jns
ljmp
lods
sbb
ljmp
in
or
add
call
push
cli
pop
inc
call
mov
mov
jmp
add
push
mov
jmp
jmp
imul
jmp
inc
push
jb
scas
clc
ljmp
sub
ljmp
call
call
movsb
bnd
call
push
sbb
mov
call
jb
call
leave
test
push
loope
mov
ret
and
cmpsb
call
call
or
out
je
push
pop
cs
out
out
out
dec
ds
out
test
mov
adc
repnz
ds
out
out
rcrb
out
dec
clc
xchg
cmp
mov
mov
in
push
fldl
test
lcall
inc
in
in
cs
repnz
in
in
cs
in
cmpsl
cmp
test
in
movsb
repnz
mul
in
nop
loope
jns
push
repnz
in
nop
mov
sbb
fnstcw
sbb
inc
push
orb
cmpsb
daa
inc
push
sbbb
nop
inc
and
and
nop
jae
jne
and
xchg
enter
jl
mov
adc
and
sub
mov
and
sub
aam
dec
pop
or
popl
dec
cltd
add
xchg
xchg
fs
insl
movsb
add
hlt
xchg
jo
or
enter
or
enter
loope
pop
stc
push
aam
jns
xchg
inc
push
xchg
dec
add
jl
sbb
push
rcl
xchg
sahf
inc
push
adcb
mov
dec
pusha
xchg
fs
push
sub
int
and
pop
or
pop
xor
test
sbb
lock
call
lods
inc
mov
data16
mov
cs
clc
mov
test
push
ja
and
push
xchg
mov
nop
add
add
add
adc
adc
and
or
in
iret
popf
enter
xor
pop
xchg
enter
or
in
insb
xchg
jl
xchg
cmp
or
pop
xor
jo
dec
mov
enter
mov
inc
push
dec
mov
inc
push
jns,pn
push
out
cmp
pushf
pushf
push
dec
dec
dec
rclb
push
push
jb
lods
or
out
push
cmp
aam
mov
or
enter
adc
test
dec
sahf
and
or
xchg
xchg
xchg
sbb
popf
add
adc
cmp
daa
adc
xchg
sbb
pop
enter
loope
jb
pop
mov
mov
sbb
and
nop
xchg
inc
push
cmp
jae
jb
aam
fsubs
xor
mov
in
fdivl
nop
or
nop
push
pusha
insl
je
or
add
test
mov
xchg
pushf
enter
in
enter
cltd
nop
xchg
inc
cwtl
xchg
xchg
pushf
leave
jae
jb
mov
mov
jb
lcall
movsb
movsb
adc
out
pop
repnz
out
sbbb
daa
lods
cwtl
out
xchg
cwtl
xchg
int
inc
xchg
xor
xor
xchg
xchg
lret
gs
mov
and
inc
xchg
add
repnz
loopne
and
and
and
leave
inc
dec
add
xor
stc
sbb
sub
rorb
jl
adc
test
sub
jl
sub
dec
inc
out
cltd
add
inc
js
mov
or
repnz
push
popa
arpl
xchg
xchg
fwait
inc
sub
adc
cwtl
add
xchg
dec
stc
push
mov
sub
inc
stc
or
stc
pop
cwtl
add
test
rclb
enter
sub
xchg
dec
in
inc
sub
cmp
add
and
xchg
out
in
adc
sbb
or
sub
xchg
ljmp
and
dec
and
xchg
sbb
ret
fisubl
pop
sbb
loope
xor
cmp
push
lds
mov
inc
mov
inc
dec
xchg
sub
or
aam
cwtl
xchg
add
cwtl
dec
subb
jb
hlt
in
test
and
aam
xchg
insl
ss
push
rol
adc
daa
or
je
pushf
movsb
xchg
mov
lods
movsb
enter
nop
stc
jo
sub
xchg
stc
lea
mul
sbb
xchg
in
es
lods
lods
in
pop
sbb
loope
pushf
repnz
xchg
clc
pusha
andl
sub
cld
aas
mov
les
and
dec
xor
jg
repz
add
xor
dec
je
je
xor
push
xor
dec
fs
xchg
lock
mov
sbb
xor
inc
push
mov
push
push
inc
push
xchg
push
sysret
les
js
sub
inc
stc
test
mov
nop
or
mov
leave
sbb
loope
sub
pushf
sub
enter
xchg
and
xchg
clc
jmp
in
and
jmp
hlt
jmp
fwait
sarb
pop
lahf
arpl
or
out
add
enter
add
add
xchg
mov
hlt
jmp
push
rcrb
inc
jo
sahf
mov
nop
in
orl
add
nop
iret
and
add
jmp
jmp
dec
in
jae
adcl
leave
jmp
mov
push
xor
fucomp
jae
rcrb
repnz
jmp
xchg
inc
pop
dec
lods
push
sbb
test
push
pop
xchg
orb
xchg
jl
xchg
xchg
lret
js
mov
xchg
mov
mov
mov
inc
jl
movsb
xchg
hlt
repnz
push
je
or
enter
inc
xchg
lret
test
xchg
dec
sahf
and
xchg
inc
push
push
daa
daa
xchg
xchg
mov
push
push
enter
call
imul
cmp
push
fucom
cld
cmp
add
or
dec
add
mov
call
sbb
jns
pop
adc
cwtl
or
add
incb
das
lea
popa
lret
data16
in
cwtl
xchg
or
insb
pop
test
add
push
cwtl
clc
adc
add
ss
fs
in
in
in
fsub
mov
loopne
inc
clc
mov
call
repz
orl
in
in
xchg
aaa
lods
add
test
ds
mov
fidivrs
jb
fsubp
cwtl
fiadds
and
in
mov
inc
lock
mov
mov
loope
faddp
insl
add
add
fsts
xchg
fisubrs
lret
jb
fdivl
fcompl
pop
enter
fdivl
fsub
and
fdivl
mov
or
jo
test
cltd
je
fisubl
das
in
fdivl
loope
and
pop
fcompl
rolb
add
dec
loopne
xor
and
inc
orl
insb
cltd
xchg
xchg
lret
in
fcmovu
nop
cltd
fcmove
enter
icebp
mov
fidivl
loopew
cmp
xor
inc
push
enter
fidivrl
ficompl
inc
repnz
push
aaa
sub
mov
lret
and
mov
pop
fsubl
jns
cmp
fisubl
xlat
out
xchg
daa
clc
xlat
cld
xlat
lock
push
push
dec
enter
xlat
add
clc
xlat
xchg
xchg
jl
in
cltd
lock
add
xchg
outsb
adc
mov
inc
cld
xlat
cld
xlat
cltd
daa
in
jl
fadds
fadds
fmuls
loope
add
stc
inc
lock
lcall
fdivl
dec
sub
or
mov
mov
cmpsb
mov
mov
jb
xor
call
repnz
xlat
mov
pop
cmp
aad
aad
lcall
enter
inc
lcall
inc
call
push
mov
aad
ds
and
aad
enter
adc
enter
loope
pushf
add
lock
test
aad
repnz
ret
daa
mov
test
mov
push
cmp
inc
mov
adc
xchg
xchg
xchg
inc
test
nop
rorl
xchg
pushf
adc
call
into
or
push
mov
rorl
dec
enter
nop
shll
sbb
int
rcrl
add
dec
lcall
rcl
shll
inc
push
rcl
shll
pop
enter
rcl
stc
mov
rcl
data16
jae
push
sbb
rcl
roll
fwait
rcl
pushf
popa
in
leave
rorl
fwait
loope
dec
roll
fwait
cmp
ror
iret
in
enter
sub
iret
iret
iret
dec
fwait
cmp
pop
push
iret
iret
pop
or
das
add
iret
jns
lahf
lret
fwait
and
and
push
iret
loope
repnz
jae
adc
jo
pushf
jbe
call
dec
xchg
or
pusha
dec
iret
iret
int3
or
enter
int3
cs
or
sbbb
push
pop
movsb
fwait
int3
int3
cmp
dec
int3
mov
in
int3
in
fwait
call
push
call
nop
push
add
fmul
xchg
call
call
mov
call
adcl
lret
or
lret
fcomps
lret
cld
xchg
iret
and
sbb
lret
lret
pop
enter
lret
cmp
sahf
adc
dec
sub
and
pop
pushf
add
mov
sbb
enter
test
xor
enter
enter
lahf
enter
mov
jge
enter
cmp
pmulhuw
js
js
xchg
aaa
lods
add
shlb
fs
enter
or
mov
stc
or
mov
pushf
push
pop
cs
mov
lods
pushf
ja
ds
lock
mov
pop
cmp
cmp
inc
push
enter
movb
pop
or
loope
xor
adc
and
push
clc
insb
jb
inc
mov
jg
test
sbb
ret
lret
test
loopne
ret
dec
sub
xchg
les
lahf
sarl
les
test
popf
les
mov
loope
jb
sbb
clc
ret
sub
cmp
cmc
jge
mov
adc
enter
rol
xchg
or
or
cmp
pop
rcrl
ja
xor
mov
popa
sarl
ror
inc
push
enter
rcl
lcall
add
nop
jae
rol
popf
cmp
lea
mov
inc
sub
xor
in
sarl
inc
mov
jle
in
jo
mov
mov
inc
call
repnz
mov
xchg
mov
mov
cwtl
mov
aaa
mov
hlt
cmp
mov
jnp
mov
cmpb
cmp
inc
pop
mov
enter
push
mov
icebp
mov
in
sahf
push
mov
sarb
mov
fistps
mov
adc
inc
pusha
mov
rcrl
mov
xchg
dec
jae
in
add
cwtl
and
mov
mov
nop
iret
and
in
jb
mov
xor
jae
push
jns
mov
in
mov
xchg
or
jns
cmp
scas
addb
pop
and
dec
jns
cwtl
sahf
leave
adc
add
mov
sahf
cmp
test
loopne
rcrl
and
out
lret
in
enter
adc
enter
sub
and
ret
and
lahf
sub
pusha
iret
movsl
out
push
inc
ret
pop
jmp
lahf
cmp
cs
dec
pop
push
insb
lahf
dec
addb
jle
pop
test
loopne
jl
mov
pop
pop
out
push
and
dec
stc
jl
in
nop
lahf
push
dec
cwtl
popf
and
popf
ret
mov
xor
sbb
lahf
nop
jo
xchg
adc
sti
je
dec
loope
push
popf
loopne
pop
xor
iret
aam
and
and
mov
call
push
aam
es
inc
push
cmp
iret
xchg
lret
gs
loopne
mov
and
sub
mov
mov
call
pop
sbb
loope
fdiv
jns
xchg
xchg
in
xor
aaa
test
cld
jno
mov
add
les
mov
mov
enter
sbb
outsb
or
cmp
mov
add
xchg
jno
mov
loopne
lock
lret
jle
pop
je
inc
push
aam
add
dec
and
add
push
and
inc
cmp
push
xchg
out
out
jb
push
xor
sub
cmp
outsl
add
cmp
repnz
stos
popa
mov
inc
test
es
mov
repnz
mov
add
adc
sub
in
enter
in
enter
xchg
mov
mov
add
and
or
sub
dec
insl
add
inc
mov
push
mov
enter
mov
ret
dec
cltd
test
mov
dec
pop
push
test
dec
inc
call
test
test
lea
enter
pop
in
in
pop
or
in
and
inc
mov
pop
dec
test
or
roll
or
leave
inc
adc
sbb
enter
mov
jb
and
fsubl
mov
sbb
mov
jb
sbb
mov
dec
and
lock
cmpsl
xchg
mov
adc
sub
mov
or
sub
or
lods
or
enter
adc
fsubr
loopne
xchg
xchg
dec
sahf
mov
sub
daa
xchg
aam
in
inc
mov
call
imul
adcb
cltd
pop
mov
shlb
lods
mov
adc
push
jns,pn
mov
push
push
lods
lods
lods
pushf
mov
mov
mov
sub
fiadds
mov
test
pop
or
std
push
push
inc
xchg
pop
insb
fsub
mov
fdivl
inc
rcrl
xchg
and
in
xchg
sub
push
leave
inc
into
adc
sbb
lock
xchg
or
inc
bound
xchg
fcmovu
ficoml
sbb
fcmovu
xchg
push
pop
fiaddl
fcmovu
push
out
ds
sub
repnz
fwait
adc
enter
fidivrl
push
pop
or
pushf
xchg
xchg
cwtl
fimuls
stc
jl
pop
lock
fiadds
pusha
lock
ds
pop
lock
mov
lahf
inc
push
sbb
fcom
je
lret
in
and
fcom
leave
out
lret
xlat
fdivrs
lahf
xchg
xchg
lret
fcomp
test
cs
sub
fcomp
out
es
dec
lods
loope
xlat
fs
inc
mov
xchg
in
cmp
nop
rol
mov
int3
movsb
ror
and
movsb
mov
enter
enter
sahf
xchg
enter
int3
adc
inc
cs
add
loope
adc
movsl
xor
enter
mov
test
mov
movsl
test
arpl
lods
pushf
nop
pop
movsl
xchg
xchg
lods
or
loope
nop
sub
inc
shrl
adc
mov
and
push
test
movsl
sahf
and
mov
xchg
dec
pop
push
bound
cmp
daa
daa
pop
pop
mov
pop
sbbl
pop
mov
pushf
dec
imul
dec
rol
lds
or
movsl
adc
inc
rcrl
inc
rcrl
iret
jl
cmp
sbb
and
adc
aam
gs
sbb
and
sbb
loope
leave
out
movsl
adc
inc
call
gs
pop
adc
adc
lahf
iret
pop
pop
and
or
or
iret
and
or
loope
in
popa
adc
enter
add
push
and
xchg
loopne
jb
sbbl
call
xchg
pop
mov
cmpsb
loopne
in
int3
in
leave
lret
push
cmpsb
fmul
inc
dec
gs
loope
adc
fsubr
sub
or
cmpsb
daa
in
jl
int3
in
int3
in
int3
adc
and
fmul
je
cmp
mov
push
pop
aam
push
sbb
lods
mov
lret
gs
push
test
iret
xchg
lods
test
movsb
mov
xchg
lret
pop
mov
sahf
xchg
mov
cmpsb
mov
scas
mov
cs
loope
loope
dec
repnz
lret
pushf
inc
sbb
pushf
jo
sbb
js
fsubl
jo
je
cmpsl
and
xchg
cmp
jl
pop
push
js
js
cmpsl
mov
jl
cmpsl
adc
push
adc
pop
insb
enter
and
in
mov
xorl
repnz
xchg
outsl
fs
xchg
daa
dec
cmp
inc
xor
xor
lods
pushf
nop
cmpsl
cmp
inc
cmp
cld
and
xor
inc
call
int3
sub
inc
adc
add
inc
cmpsl
inc
in
cmp
movb
cmp
xor
cmp
jl
mov
scas
rclb
sub
adc
in
add
add
or
lret
cmp
ret
mov
lret
lret
add
mov
cld
ret
lret
pop
inc
call
mov
adc
or
enter
cmpsl
or
or
pop
imul
xchg
test
cmp
push
cmp
inc
ss
hlt
ret
in
pop
jns
ror
rol
in
lods
sbb
shl
enter
in
aam
int3
rorl
push
pop
aam
mov
rcl
lret
daa
rol
rol
sbb
aam
aam
aam
xchg
aaa
lods
or
sarl
hlt
js
and
jns
pop
mov
sbb
fs
mov
cmp
cs
nop
pushf
xchg
pusha
test
jae
sub
mov
rorb
cwtl
adc
cwtl
mov
mov
pushf
mov
data16
mov
push
xlat
cld
push
ds
pop
jb
in
xchg
test
test
add
add
pop
enter
cmp
int3
test
test
inc
ds
jo
xchg
nop
add
pop
in
test
test
cmp
add
mov
xor
push
xor
cmp
sbb
cmp
test
es
js
push
dec
dec
jl
mov
push
int3
test
jb
in
pushf
test
in
andnps
test
aam
in
dec
mov
mov
add
push
xor
hlt
test
sbb
test
stos
sub
js
dec
sbb
push
adcl
dec
stos
jo
and
add
fcoms
stos
cmpsb
in
jb
stos
xchg
stos
clc
sbb
push
clc
push
sbbb
stos
enter
pushf
inc
stos
push
fsubrs
fsubrl
xor
fiadds
in
push
xlat
cld
stos
add
add
and
adc
stos
xor
inc
pop
adc
stos
push
stos
inc
dec
and
js
orb
and
mov
dec
pop
pushf
stos
push
add
pop
inc
pop
push
lods
lods
stos
shrb
gs
add
stos
push
and
inc
in
hlt
stos
js
and
leave
lock
dec
adc
lea
lods
test
xchg
iret
lret
lret
mov
sub
pop
inc
call
lret
xor
cmp
out
enter
cmp
leave
and
ret
dec
lods
icebp
jb
in
pop
lods
subb
nop
lods
jo
cmp
xchg
lods
movsb
lods
push
or
jne
add
lods
enter
and
lods
leave
and
lods
sbb
dec
or
or
pushf
inc
push
xorb
sbb
inc
push
addb
lods
sub
push
and
lods
leave
lds
sub
je
dec
mov
cs
or
mov
add
xchg
call
movsb
mov
cwtl
lods
and
in
pushf
loope
repnz
push
jb
fisubrs
movsl
add
data16
mov
xor
sub
inc
shrb
je
in
fs
pop
ret
call
test
lods
je
sbbb
and
adc
loope
fdivrl
and
loopne
loopne
in
repnz
dec
orb
lds
movsl
mov
sbb
sbb
xor
scas
sub
imul
pop
inc
sahf
xchg
dec
mov
dec
scas
cmp
inc
cs
push
loope
enter
sub
pusha
scas
adc
ret
add
add
jo
xchg
scas
adc
in
inc
movsb
scas
mov
cmp
jns
xchg
mov
enter
sbb
in
scas
jbe
dec
test
cld
scas
add
adc
xlat
and
inc
scas
outsl
inc
inc
jb
in
scas
pop
scas
dec
sbb
scas
ja
jno
mov
or
mov
js
sbb
pop
es
pop
push
pushf
scas
dec
clc
pop
repnz
inc
call
fisubs
adc
inc
ds
rcrl
inc
ret
shl
leave
jns
cmp
dec
rol
scas
push
inc
jno
lret
add
dec
or
data16
scas
inc
cs
or
and
hlt
scas
or
xchg
cmp
and
inc
movsl
push
pop
jno
data16
cltd
nop
addr16
and
fisubl
jb
xor
jns
inc
ret
iret
sbb
mov
inc
push
sub
inc
dec
pop
inc
pop
mov
push
xchg
adc
jo
cmp
nop
xlat
xorb
mov
aas
dec
test
mov
mov
dec
enter
mov
bsf
or
mov
pop
and
inc
mov
out
in
jo
je
mov
ret
insb
inc
call
shll
pop
ret
enter
enter
enter
inc
mov
and
nop
enter
dec
or
bound
push
je
in
pop
fs
xor
cmp
inc
cmp
push
mov
lret
xor
inc
cmp
loop
mov
in
cs
movb
add
and
cmp
mov
adc
mov
or
dec
shll
clc
movsl
push
or
xchg
xchg
and
add
lods
mov
ret
pop
pop
ret
call
enter
cwtl
mov
les
jb
push
or
or
loope
and
pop
mov
lock
scas
lock
cmp
inc
xchg
pop
gs
push
sub
and
int3
add
les
pop
ret
test
pop
enter
cwtl
mov
rorl
inc
push
aam
aam
loope
pushf
dec
pop
leave
vmovups
movsl
add
adc
cmp
pop
mov
cmp
cmp
jb
mov
mov
inc
xorl
push
pop
sbbl
mov
jns
cmp
cmp
les
enter
adc
mov
add
call
add
addl
dec
test
mov
mov
xor
gs
les
lcall
faddl
sbbb
xchg
inc
mov
pushf
inc
push
fs
ss
inc
push
je
js
xor
push
push
mov
subl
cmpsl
cwtl
mov
and
inc
mov
and
inc
int3
mov
adc
xchg
mov
mov
xchg
inc
ja
pushf
repnz
inc
and
mov
add
add
call
add
sub
mov
sbb
scas
and
enter
push
enter
addr16
mov
or
add
xor
in
jl
xorb
out
mov
jns
xor
or
popa
mov
shrl
das
insl
xchg
sbb
cmp
mov
jl
rcll
repnz
sti
sbbb
in
adc
loope
jl
xchg
sub
or
jne
pop
clc
sbb
dec
push
pop
pop
mov
fcmovb
sbb
jle
push
repnz
cmpsb
pop
lods
xor
add
imul
stc
pop
cmp
loope
and
sbb
inc
mov
inc
mov
lock
pop
jo
sub
hlt
adcl
dec
mov
or
mov
in
jb
sbb
je
or
and
mov
call
test
mov
test
sbb
xchg
mov
or
cwtl
pusha
push
add
mov
pop
cmp
mov
jno
test
mov
and
int3
mov
sub
jg
inc
call
sub
sub
loopne
pop
enter
in
enter
loope
aam
xchg
lock
inc
cmp
mov
inc
push
andb
sub
xor
cmp
dec
mov
xor
sbb
xchg
push
mov
mov
mov
push
pushl
imul
pop
bnd
je
je
leave
sbb
and
fs
mov
xor
lods
or
aaa
add
mov
leave
adc
add
mov
sub
leave
mov
mov
sbb
xor
pop
push
mov
loope
push
es
jmp
mov
lret
in
jmp
jmp
or
in
sub
xor
inc
adc
repnz
ds
call
in
pop
nop
adc
loope
in
cmpsl
insl
hlt
jmp
mov
or
add
or
mov
enter
jmp
repnz
add
sub
adc
repnz
xor
enter
int3
lods
or
loope
and
or
pop
and
push
mov
jmp
orl
mov
mov
xchg
mov
mov
xchg
push
sub
push
mov
adc
test
or
xchg
imul
loope
jb
or
push
clc
xchg
inc
je
orl
adc
stos
in
add
xchg
sub
cmp
pop
inc
jmp
je
call
in
int3
jecxz
mov
jns
jecxz
mov
sub
lret
and
sbb
jecxz
in
es
mov
pusha
jecxz
jecxz
mov
pushf
daa
add
scas
mov
call
mov
fcomp
sarb
pop
in
mov
or
and
inc
sahf
xchg
push
and
call
cs
in
in
inc
into
movsl
mov
loope
fsub
es
pop
leave
or
dec
cmp
sbbb
sbb
inc
push
cmp
mov
add
test
xor
sbb
lret
dec
jmp
lret
sub
pop
loop
cmpsl
lret
xchg
mov
xchg
insb
lret
outsl
and
mov
add
movsb
mov
fs
jl
inc
dec
mov
fcompl
adc
leave
mov
mov
mov
pop
and
cld
mov
add
dec
jo
mov
bound
and
inc
mov
cmp
repnz
mov
sub
mov
push
cmpsl
sub
js
xor
lds
pushf
pushf
mov
dec
push
xor
add
dec
enter
mov
ss
loope
jns
sub
aad
mov
pop
mov
add
cmpsb
adc
push
shlb
leave
sysret
pushf
fcomi
and
push
add
and
les
in
and
xor
and
leave
mov
sbb
adc
push
call
mov
out
pop
repnz
sub
dec
mov
in
rorl
sbb
out
dec
dec
add
pop
mov
leave
test
pusha
loope
in
cmpsl
leave
push
shll
mov
mov
dec
add
bound
into
dec
mov
xcrypt-ctr
cmpsl
sbb
xor
add
iret
cltd
sub
movsb
sbb
insb
dec
cmpsl
rolb
xor
lea
mov
fcmove
iret
mov
xchg
push
inc
es
add
mov
dec
enter
mov
cmp
cld
mov
cltd
dec
nop
fcomps
pop
push
sbb
mov
hlt
hlt
hlt
aas
dec
imul
mov
dec
lods
in
and
sbb
push
pop
sbb
xor
daa
push
mov
arpl
daa
rcrl
add
mov
mov
lret
pop
or
add
js
int
adc
xchg
sbb
enter
dec
enter
add
das
jns
push
lods
je
test
mov
and
xor
push
cmpb
test
loope
je
sarb
leave
xor
fsubs
or
inc
inc
dec
mov
loopne
inc
dec
mov
cmp
add
cmp
movsb
xor
icebp
call
dec
xchg
pop
sub
adc
repnz
ds
dec
dec
rcl
nop
loope
adc
mov
movsl
pop
vpmacsdql
add
and
mov
enter
insb
mov
jo
cmpb
nop
mov
mov
test
les
xchg
mov
inc
movsl
dec
call
sbb
mov
test
mov
xor
das
cmp
jb
inc
mov
jb
ja
je
xor
mov
sub
in
enter
mov
jo
int3
mov
sarb
mov
mov
push
inc
std
xchg
outsb
pusha
inc
add
nop
mov
jb
jae
mov
sub
inc
mov
enter
mov
bound
enter
push
or
mov
cwtl
jl
lock
jo
add
cli
repnz
xor
dec
mov
insb
mov
cmp
jl
cmpb
push
add
insl
lret
in
je
mov
lock
shlb
test
aaa
mov
add
mov
nop
add
mov
xchg
add
mov
add
ds
nop
xchg
push
cmp
clc
mov
cld
or
in
sbb
and
outsl
leave
clc
inc
call
jae
pop
xchg
pop
shlb
cmpl
mov
mov
loope
call
inc
rclb
push
and
mov
jmp
mov
je
jmp
hlt
in
or
loope
dec
and
push
in
cmp
jmp
cmp
cwtl
rclb
push
and
aad
push
adc
andb
add
add
test
int3
rclb
add
int
fadd
mov
shl
adc
sub
mov
xchg
sbbl
adcb
enter
add
mov
push
pusha
pop
and
mov
inc
lods
or
dec
pop
adc
adc
pop
in
pusha
in
daa
in
pusha
in
in
mov
push
in
dec
sub
shll
sbb
or
adc
nop
dec
xchg
sbb
inc
push
push
sbb
pop
ror
lret
gs
and
lret
and
sahf
xchg
xchg
xchg
and
and
shrl
cs
sub
enter
nop
loope
sbb
or
sub
rorl
shl
movb
and
loopne
stc
or
loopne
mov
push
pop
cs
loopne
loopne
shl
dec
ds
loopne
or
loopne
add
cs
sahf
shl
lock
in
and
loopne
clc
rorl
push
aaa
enter
sub
fsubrs
mov
or
enter
lods
mov
out
ret
jne
lret
movsb
mov
mov
xor
iret
cmp
mov
fisubl
inc
loope
test
addl
mov
fs
inc
jl
pusha
ret
pop
es
js
ret
pop
bnd
fs
insb
pop
cmp
test
ret
es
addb
loope
jo
movsl
jb
cmp
ret
sbb
mov
push
inc
cs
inc
xchg
or
cmp
cmp
cs
fadd
cmp
sub
sub
xor
inc
or
dec
inc
in
ret
push
mov
loope
and
push
cmpl
inc
jmp
xor
dec
pop
xor
add
or
or
enter
fcoms
ret
add
stc
mov
fdivs
add
push
inc
push
adc
add
or
lods
pushf
pushf
or
inc
ret
adc
adc
mov
lods
loope
add
xchg
add
ret
mov
adc
lock
and
test
ret
sahf
and
mov
enter
dec
fcoms
add
aam
pop
repnz
ret
fcom
fcom
sbbb
in
add
enter
adc
jmp
lods
sbb
mov
or
out
ret
or
add
adc
sub
push
add
jne
pop
push
sub
jp
jge
push
sub
add
pop
test
or
test
or
mov
pop
mov
call
xchg
push
call
pop
or
jne
gs
negl
call
fcmovnu
test
push
push
or
push
sahf
insb
lock
mov
rclb
bound
and
pop
shlb
orb
or
dec
push
jo
or
sub
xlat
pop
pop
lock
pop
add
pop
pop
pusha
cld
mov
inc
inc
pusha
int
sti
fwait
lcall
add
or
push
test
icebp
sbb
js
inc
inc
xchg
je
mov
jo
pop
or
pop
icebp
mov
push
jne
push
or
je
push
call
idivl
pop
aaa
add
lret
insb
mov
ljmp
cwtl
test
pop
pop
push
fnsave
orb
or
lods
inc
aaa
or
test
push
inc
jle
aad
movb
fmuls
add
test
add
xchg
xchg
orl
ljmp
call
inc
adc
je
fisttpll
aam
jnp
push
add
shl
jno
dec
push
test
notl
call
leave
cld
xchg
hlt
nop
add
mov
shr
insl
je
shrb
loopne
repnz
xchg
xorb
adc
iret
rorl
jle
cmp
in
loop
adc
js
inc
call
or
nop
or
adc
xchg
mov
fisttps
add
int3
pop
push
xchg
or
cs
pop
mov
mov
adc
mov
pop
dec
mov
xor
pop
inc
cmp
movsl
or
push
adc
pop
pop
or
lock
enter
lea
mov
push
sub
sub
test
inc
cmp
jne
add
daa
add
sbb
fucomip
mov
jne
sub
jmp
sbb
cmpsl
aaa
mov
or
or
sbb
sbb
pop
mov
xchg
add
rclb
nop
sarb
loopne
or
xor
rcrb
sbb
mov
pop
dec
ja
xor
pop
jg
or
iret
repz
test
mov
push
aaa
lods
adc
loope
push
fsubl
mov
repnz
add
pop
pushf
pop
xchg
pop
pop
nop
push
inc
int3
push
je
push
int
in
pop
and
lret
sahf
out
adc
and
popf
out
sub
inc
data16
mov
aas
pusha
push
in
testl
and
cld
push
int
push
call
inc
loopne
xor
stos
or
into
jb
lods
or
pop
sub
test
movzwl
jne
inc
inc
dec
je
adc
pop
cmp
jne
mov
push
add
push
andb
cmp
pop
push
movl
sub
sbb
repz
dec
jb
cld
int
push
std
dec
adc
cmc
inc
sub
shr
sbb
mov
int
rcrb
ljmp
les
lret
mov
outsb
ffreep
sbb
out
jne
or
and
mov
pop
cmp
dec
mov
call
iret
push
inc
or
je
pop
jmp
push
call
int
or
add
and
pop
imul
dec
ret
or
je
xor
jp
adc
dec
push
rcrb
pusha
inc
sbb
or
mov
into
inc
leave
xchg
sarb
nop
lret
pavgw
mov
adc
xchg
sbb
adc
adc
push
push
aas
cmp
adc
inc
jo
aas
cmp
dec
cli
sub
dec
or
sti
shlb
lods
pusha
idiv
jg
dec
ljmp
adc
or
sub
or
andb
mov
adc
add
in
orb
lea
jge
push
daa
add
pop
mov
sbb
and
adc
lret
icebp
mov
and
mov
push
pop
lods
xor
insl
adc
lock
fisubrs
xor
pop
call
enter
repz
sti
imul
jmp
dec
test
repnz
incl
add
add
add
inc
or
ds
or
test
cmp
enter
ja
sahf
sub
jnp
outsl
xor
fldt
push
call
sbb
int3
push
add
insl
pop
gs
jne
xlat
ja
mov
fdivl
clc
xchg
nop
push
jno
xor
add
pop
jmp
stc
or
pop
push
push
movsl
fdiv
lret
cli
add
add
sbb
add
jmp
or
jae
mov
sbbl
in
jecxz
add
dec
push
ja
stos
lret
lcall
lock
dec
or
inc
jmp
or
sbb
in
mov
data16
mov
in
mov
jp
call
mov
insl
xor
out
outsb
shrl
mov
or
mov
jne
pop
sbb
aas
in
and
loopne
test
push
inc
sbb
dec
inc
or
or
fs
add
lds
sub
or
and
xlat
sbb
xor
cmpsl
sbb
add
inc
mov
or
pop
push
call
xchg
inc
bound
cmpsl
js
xor
bound
or
ss
pop
add
add
and
mov
mov
aad
icebp
jns
or
out
sbbb
pop
scas
push
and
cwtl
cs
jae
divb
push
push
inc
ret
testb
divb
daa
je
mov
sub
shrb
test
xchg
adc
loopne
mov
add
lds
loope
adc
pop
lcall
sbb
movsl
insb
aas
pop
jp
call
adc
dec
or
sub
rcrb
adc
adc
rclb
pop
push
cld
mov
mov
sub
push
loopne
call
fmull
addl
dec
call
adc
scas
jns
test
sub
fistpl
dec
ret
push
call
mov
push
and
and
or
xor
xor
and
data16
mov
or
adc
xchg
push
in
fsubrl
rcl
xchg
out
sub
xor
movl
or
jbe
ljmp
stc
jl
dec
cmpsl
jb
call
push
ret
dec
lret
xchg
or
sti
and
sbb
push
dec
cmp
nop
cwtl
lea
rep
inc
or
imul
lock
loopne
mov
movsl
add
leave
inc
leave
cmpsl
inc
adc
les
adc
inc
cs
pop
fsubl
add
daa
and
pop
cmp
cli
inc
pop
xor
jne
and
je
add
mov
cmpsl
cmp
push
xor
mov
mov
xor
jo
xor
pop
xchg
cmp
pusha
mov
pop
je
idivl
call
xor
test
or
push
stos
cmp
or
scas
adc
inc
test
leave
out
adc
loopne
imul
aas
adc
dec
es
rorl
adc
or
ljmp
cld
lret
adc
adc
mov
mov
fnsave
inc
and
pop
push
call
xor
sbb
or
cld
divb
xor
jb
out
inc
loopne
cmp
xor
cmp
and
add
pop
arpl
and
pushf
lret
add
xchg
and
add
pop
leave
scas
mov
lret
shl
xchg
in
add
ror
adc
inc
xor
rcr
push
rcll
push
ljmp
mov
jge
add
scas
mov
xor
xor
cmpsl
jp
mov
loop
sub
call
call
inc
pop
xchg
leave
mov
mov
add
push
fnstenv
enter
cmp
loop
cwtl
incb
mov
cmp
mov
push
lock
or
sahf
mov
cmp
testb
das
cld
jo
inc
jno
jmp
jle
jecxz
aad
shll
nop
mov
clc
add
rcl
rcrb
cli
clc
mov
pop
rclb
lods
jns
gs
mov
sbb
aas
dec
mov
jae
mov
lods
jp
or
jb
dec
push
inc
addl
es
sub
pop
daa
daa
call
or
enter
inc
adc
and
cmpsl
sub
or
testl
call
mov
notl
sbb
pop
add
add
cmp
inc
lahf
das
add
jb
push
call
pop
sub
out
adc
or
mov
fs
pop
or
call
xlat
push
lea
fists
test
xchg
or
mov
adc
data16
sti
inc
xor
mov
rclb
les
add
inc
sarb
shlb
pop
xor
fcomps
sbb
je
shlb
pop
push
push
mov
out
add
test
mov
and
sub
ja
testb
push
pop
xorb
out
insb
xchg
mov
clc
lret
mov
andl
pop
fiadds
or
lret
jecxz
add
dec
cmp
fadd
call
pop
cmp
sbb
stos
mov
pop
testb
ljmp
xor
xor
inc
pop
inc
sbb
shll
mov
sbb
or
pop
xchg
jnp
inc
jmp
sub
adc
push
cmpsl
std
std
movsb
xor
jne
or
cmp
mov
mov
xchg
inc
cmp
jl
bound
sub
adc
mov
add
fldl
mov
inc
mov
push
mov
imul
nop
subb
leave
inc
inc
adc
sbb
mov
mov
add
aam
mov
or
inc
test
pushl
call
adc
add
aas
int3
adc
add
inc
cmp
pusha
imul
xor
adc
jmp
jle,pt
push
call
add
or
push
mov
popf
and
je
push
call
sbb
adc
mov
test
xor
call
ret
xchg
xchg
sub
jl
mov
test
clc
mov
in
in
cmpl
mov
pop
rolb
nop
repz
arpl
shl
popf
cmc
push
lret
dec
push
in
outsl
loopne
mov
call
jg
not
mov
pop
sar
sbb
stc
pop
jne
pop
lods
sbb
sbb
add
or
scas
sbb
pop
or
sahf
xorl
andb
inc
test
frstor
lahf
fs
pop
sbb
jne
pop
sbb
jne
xchg
push
adc
jae
sub
jnp
mov
xor
out
xorl
adc
add
jbe
call
push
es
sbb
and
add
inc
enter
add
cltd
je
loopne
and
mov
adc
enter
jne
sar
sbbb
jne
add
add
xchg
xchg
fiaddl
add
movaps
cmp
aad
or
adc
or
hlt
add
jne
je
dec
add
sbb
or
and
cmp
imul
popa
cld
add
jne
lock
adc
add
mov
stos
xchg
stc
and
xor
cld
in
lds
icebp
add
xchg
add
add
dec
push
addb
mov
sub
inc
cmp
popf
loope
je
push
mov
ds
sub
sbb
test
push
sub
adc
sbb
imul
mov
sbb
sub
dec
push
push
or
ret
dec
add
in
mov
mov
rclb
leave
lea
xchg
mov
aaa
les
addb
adc
test
bnd
jle
pop
test
pusha
or
je
lds
or
mov
aam
or
fwait
insb
orb
test
or
rorb
icebp
sub
mov
cmp
mov
sub
inc
mov
cmp
dec
fwait
add
jb
ja
and
mov
lods
mov
inc
leave
adcl
mov
add
mov
inc
cmp
ss
cmp
push
fistpl
jg
xlat
jle
sub
je
or
je
push
je
dec
cwtl
lods
rolb
dec
mov
ret
js
mov
and
mov
mov
jmp
ret
and
lods
inc
jne
adc
cwtl
mov
xor
sbbb
sar
push
add
pop
std
mov
jne
or
jmp
sub
out
cs
or
imull
or
jne
shlb
int
jmp
jne
push
or
mov
lahf
sbb
pop
into
in
jmp
outsb
mov
mov
jmp
inc
je
iret
jmp
call
insb
outsb
clc
les
cmp
jge
jo
adc
sbb
jle
aaa
mov
mov
jo
pop
data16
or
sbb
dec
in
aad
icebp
pop
dec
pop
mov
jl
sbb
repz
push
cmp
cmp
je
jne
das
int
imul
aaa
mov
push
movsl
dec
adc
out
insl
jmp
bound
or
jmp
push
or
inc
outsb
jp
push
repnz
lods
push
fadds
jp
daa
mov
push
dec
cmp
push
pusha
fidivrl
dec
adc
mov
add
jle
or
pop
cmp
sbb
lods
lahf
icebp
sbb
and
mov
push
mov
lcall
call
pop
in
sbb
dec
and
ret
call
call
adc
in
fs
sbb
lods
insb
sbb
adc
add
and
and
cmp
pop
and
add
sub
or
inc
lret
push
shlb
xor
sub
and
pushf
addb
or
das
push
adc
add
aaa
mov
in
dec
push
movb
cld
cld
nop
decl
add
ds
pop
adc
push
js
add
and
iret
dec
lods
and
aas
sbb
jns
jmp
lea
and
xor
adc
fmull
jmp
hlt
jns
in
mov
lea
lea
sbb
inc
ljmp
clc
into
clc
scas
iret
mov
sarl
daa
pop
push
mov
test
add
into
sbb
fsub
xor
inc
les
rorl
or
fwait
jl
int
cmp
cmp
fs
mov
decb
xor
mov
inc
pop
add
adc
cmpsb
mov
addb
cmp
jl
jbe
mov
fildl
or
ljmp
and
imul
insb
sbb
psadbw
or
scas
icebp
call
jae
lea
cld
add
push
push
and
mov
add
inc
jb
pop
fldl
add
mov
or
ds
movb
or
xor
and
fdivr
ljmp
loope
ljmp
cmp
dec
jecxz
cmp
adcl
ljmp
aas
in
sub
lcall
jecxz
mov
enter
jno
sbb
and
test
ds
jnp
mov
dec
adc
dec
cmpsl
loopne
or
aad
inc
push
dec
add
add
leave
daa
mov
jl
push
out
jl
add
add
cmp
sbb
add
test
push
and
adc
sbb
push
or
push
sbb
xor
xchg
dec
repnz
call
call
add
enter
cmp
add
inc
pop
repnz
icebp
add
aaa
enter
push
popl
add
jl
stc
push
insb
lock
neg
push
dec
ds
dec
pushl
icebp
add
repnz
adc
stc
in
mov
ljmp
add
push
sub
test
push
pop
cwtl
popa
call
add
repnz
ds
leave
add
xor
add
cmp
test
xor
or
test
adc
dec
mov
sbb
push
rclb
mov
call
and
test
sbb
stos
aaa
imul
push
sbb
cmp
in
sbb
popf
xchg
sub
xor
pop
cmp
pop
jg
hlt
ss
test
jo
iret
test
sar
jmp
cmp
add
pop
inc
xchg
and
xor
pusha
call
jle
jbe
xor
pop
adc
dec
pop
push
inc
bound
and
mov
jecxz
cli
incl
cmpl
jne
cmpl
cmpl
sub
add
sub
pop
cmp
fsubl
sub
out
jns
adc
push
inc
mov
adc
cwtl
sbb
into
push
das
mov
pop
cmp
inc
cmpsl
xchg
dec
movsb
scas
dec
imul
xor
dec
mov
xchg
add
or
cmp
add
or
shll
in
adc
dec
cmp
das
stc
add
js
add
jns
ljmp
or
adc
ljmp
sbb
adc
mov
sub
mov
mov
ja
jnp
icebp
dec
inc
jg
cmp
sbb
mov
fs
lret
cmc
push
out
pushl
sbb
cltd
mov
aam
fsubl
pop
mov
hlt
sbb
mov
xlat
jne
addr16
sub
cmp
jae
adc
push
adc
pop
jne
sub
test
sahf
ss
outsl
adc
or
lods
fsubr
lret
mov
loop
push
pop
mov
movl
mov
pop
sbb
inc
std
inc
jecxz
adc
push
push
adc
and
inc
xchg
sbb
and
push
cmp
mov
nop
jecxz
inc
add
lret
scas
nop
mov
adc
ret
xchg
cmp
and
cld
jmp
cmp
or
pop
or
or
xor
outsl
cmp
lods
insb
cmp
add
vmwrite
sbb
push
pushf
add
cmp
adc
push
movsb
add
xchg
dec
add
rorl
inc
adc
sub
sahf
fbstp
imul
xor
fmuls
mov
sub
addr16
mov
lcall
push
ds
sub
dec
in
push
xchg
outsb
push
mov
mov
popf
insl
and
add
nop
pop
test
mov
jbe
xchg
lret
decl
enter
or
rep
push
dec
xor
add
xor
xor
je
jge
xchg
rcll
ret
mov
sbb
jp
loopne
pop
aam
fisubrs
and
loop
ja
test
jo,pt
enter
dec
repnz
xor
mov
add
sbb
pop
push
dec
xchg
repnz
lret
add
pusha
cmp
push
rcrb
mov
push
or
xor
dec
popf
xchg
outsb
test
hlt
xor
xchg
daa
push
sub
inc
xchg
add
add
mov
lods
adc
mov
nopl
dec
mov
or
daa
popf
xor
cld
xchg
add
add
nop
mov
add
push
ds
add
add
cmpb
call
xchg
jl
lret
add
push
inc
xchg
pop
dec
pushf
lret
add
cld
stc
push
and
adc
fldl
std
daa
aas
cmp
lret
add
push
in
cs
add
pop
jne
push
fs
xor
or
xor
lret
dec
sbb
adc
aam
jno
aam
int3
push
inc
pop
or
sub
stos
add
lock
pop
or
pop
push
and
aad
pop
ljmp
ljmp
leave
add
call
sub
and
xor
call
std
cmp
and
add
mov
movsl
pop
sahf
adcb
iret
fists
pop
filds
pop
shrb
loop
testb
fmul
sub
je
inc
cmp
adc
push
stc
and
sbb
jmp
int3
or
cmc
fdivrl
in
jnp
xchg
jb
cmp
push
lret
call
adc
push
gs
cs
rclb
or
sbb
and
iret
sbb
xchg
pop
and
call
scas
mov
cltd
daa
je
push
mov
test
roll
add
and
outsb
sbb
inc
or
shlb
lcall
xchg
pop
or
pop
fnsave
push
inc
popa
push
lds
insb
mov
enter
sbb
inc
das
mov
adc
mov
add
jle
ja
outsb
jne
push
addl
add
cmp
nop
dec
jbe
jmp
mov
sbbl
or
mov
test
imul
pop
mov
in
jecxz
mov
jmp
inc
inc
mov
sub
scas
mov
out
ss
cmp
and
cmpsl
push
jae
lea
push
out
cmp
rorb
pop
cmpl
ss
adc
ror
aaa
jne
sbb
jbe
out
call
jne
xchg
hlt
jmp
or
jmp
dec
call
mov
sub
push
call
mov
repnz
negl
push
inc
popl
dec
mov
mov
add
pop
mov
enter
xchg
lret
push
orl
repnz
fs
cld
in
loop
imul
inc
cmp
mov
test
shlb
lret
je
add
cmpsb
xchg
aas
push
or
xor
sbb
cmp
inc
push
inc
rol
js
xchg
push
fcompl
fsubl
add
cmp
cmp
call
dec
subl
cmp
xchg
pop
jb
mov
ret
cwtl
xor
push
push
enter
and
xor
mov
clc
fs
xor
cld
pushf
int
add
insb
call
and
push
push
call
sbb
add
xor
and
xlat
mov
mov
icebp
sub
cmp
cld
out
es
pop
fwait
pop
popa
hlt
in
repnz
jge
jge
addb
or
js
adc
adc
add
je
icebp
nop
clc
ficoml
adc
add
cmpb
or
inc
cld
daa
dec
mov
ljmp
jns
and
mov
adc
call
or
lock
mov
add
lea
cmp
jnp
jl
fsubs
inc
hlt
mov
sbb
test
inc
jb
and
or
enter
fnstenv
inc
adc
xor
daa
jne
test
push
pop
cmp
dec
lds
loope
adc
das
push
sti
inc
jmp
jne
and
shrl
dec
push
loopne
lret
mov
cmpsb
pop
rol
xor
adc
addl
clc
inc
inc
xchg
dec
out
sbb
movsl
sti
movsb
stos
xchg
mov
cli
ffree
mov
dec
lock
lahf
mov
frstor
add
cmpxchg
call
add
lahf
or
push
jb
into
mov
jns
imull
jg
insb
push
fs
push
adc
out
inc
cmp
lahf
mov
into
loope
push
lods
scas
mov
cli
ror
and
lret
and
iret
sub
shl
jbe
nop
cmp
pop
push
or
enter
and
and
iret
jnp
inc
mov
faddl
in
inc
fcomip
cmp
cld
add
pop
shrb
add
or
add
hlt
jns
dec
pop
rcrb
pop
stc
sbb
and
stc
clc
div
negb
jg
xchg
int3
andl
adc
mov
or
mov
punpckhbw
das
adc
inc
add
or
sti
mov
push
or
hlt
sbb
je
mov
int3
mov
pop
lea
xchg
or
or
sub
add
lock
push
lds
rolb
testb
mul
insl
dec
cmpb
push
call
aam
sbb
pop
dec
add
divb
mov
add
jo
test
clc
sub
lcall
jne
or
jmp
and
mov
or
inc
cmp
pop
pop
loopne
lret
lret
fwait
inc
add
rcll
cld
imul
push
loopne
loopne
cmpsb
dec
cmp
xlat
insl
adc
nop
push
adcl
jmp
orb
pop
xorb
cmpsb
ljmp
xorl
jne
insl
inc
cmp
loope
jnp
cmp
mov
pop
mov
xor
loope
mov
jge
movb
fmull
cmp
je
out
xchg
sub
or
and
inc
test
sub
mov
test
enter
mov
sub
sub
clc
xor
call
imul
or
sbb
jo
mov
dec
data16
add
jno
sub
je
sbb
adc
or
notb
ficompl
rolb
call
inc
stos
sahf
sbb
lahf
es
decl
jp
popf
inc
adc
lds
or
add
ret
orb
push
rcrl
sub
sub
or
cmp
movsb
add
pushf
adc
pop
outsb
insl
jno
out
or
je
mov
je
mov
jmp
inc
lock
lret
jmp
adc
add
mov
mov
lret
dec
fcomp
push
enter
sub
lret
xchg
sbb
add
cltd
out
je
push
jbe
sub
clc
dec
adc
mov
ds
cmp
jns
add
je
pop
imul
pop
push
mov
mov
add
cmp
sti
rolb
cmpsb
not
and
outsb
inc
add
cmpl
testb
les
inc
std
sub
or
xor
fcomps
cmc
pop
cmp
fbstp
call
cmp
xchg
xorl
cmp
jl
xor
mov
outsl
xchg
pop
dec
cmp
xchg
adc
adc
into
sbb
imul
out
das
xor
je
jmp
push
mov
dec
incl
or
pop
push
test
ret
pop
cs
jp
popa
and
leave
add
scas
fmuls
adc
dec
mov
pop
scas
add
aam
jae
or
je
push
in
call
pop
mov
xorb
jl
cmpl
sbb
cmp
xchg
jbe
mov
push
pop
test
add
shrb
xor
push
sbb
in
adc
sub
jp
lods
test
push
inc
cmp
mov
out
or
hlt
pusha
and
loop
repz
mov
xor
hlt
pop
movsl
rcrl
pop
icebp
push
dec
and
fsubrp
xchg
fcomps
sbb
jo
test
imul
jo
and
pop
dec
add
adc
sbb
into
add
push
sub
mov
mov
fs
dec
add
and
cs
xor
jne
jo
rcr
pop
mov
cmp
jb
mov
push
popa
or
and
and
xor
mov
lahf
lea
push
and
das
pop
pop
int
adc
or
lret
pop
sbb
add
dec
call
ja
mov
jbe
adc
pop
addl
jmp
push
add
inc
pop
xchg
mov
push
mov
lds
rorb
push
test
cmp
dec
call
into
or
jmp
iret
jge
push
sub
jb
fs
ret
das
sbb
ljmp
lods
or
pop
loopne
mov
xchg
outsl
jecxz
lock
sarl
movsl
add
lret
outsl
cs
loope
sub
xchg
sbbb
push
shlb
jnp
dec
xchg
stc
inc
std
cmp
aaa
clc
lods
outsl
imul
je
pop
dec
push
add
and
adc
hlt
es
and
add
xor
outsl
cmp
xchg
jne
sar
outsl
xchg
outsl
mov
xchg
jmp
add
sub
dec
rclb
imul
push
xchg
enter
xchg
mov
push
aad
enter
loopne
jo
repnz
add
sub
sub
mov
add
sub
sub
mov
dec
mov
mov
mov
sub
cli
test
in
les
mov
lahf
les
pusha
je
dec
fucomip
inc
addr16
pusha
ss
or
jmp
xchg
mov
fiaddl
adc
push
add
add
mov
add
add
rolb
and
fldl
or
inc
repnz
jle
test
jl
in
popa
lcall
shll
jns
ret
inc
xchg
adc
repnz
xor
add
insb
add
add
repnz
xchg
mov
jmp
pop
xchg
dec
xchg
add
hlt
push
dec
mov
jmp
push
mov
sti
sbb
cmp
enter
rorb
enter
pop
mov
adc
hlt
movb
add
add
ljmp
push
sub
pop
mov
mov
int3
push
xchg
loop
clc
sbb
aad
fidivrl
ffreep
shrl
aaa
push
xor
fcompl
jns
or
lea
xchg
push
mov
or
xor
imul
mov
jge
lret
outsb
push
sbb
push
movsl
mov
out
fimuls
xchg
sbb
fsubr
mov
sub
or
sbb
mov
dec
add
xchg
and
jmp
mov
inc
scas
cwtl
pop
neg
sbb
rcrb
outsb
push
dec
cmp
fmull
rcrb
inc
jmp
xor
mov
jne
movsb
lods
in
dec
mov
pop
xor
push
cmp
outsb
stc
and
movsb
stc
add
nop
lock
inc
xchg
jo
inc
xor
bound
pop
sahf
ss
xor
xor
xchg
repnz
add
cmp
mov
jmp
daa
bound
dec
cmp
js
repnz
lock
in
scas
call
inc
cs
xor
xchg
or
nop
lock
gs
xor
scas
pushl
or
push
iret
xor
lock
insb
or
repz
imul
call
add
add
add
add
add
and
mov
pop
xor
add
decl
sbb
adc
loope
add
mov
stos
and
repz
in
sbb
dec
push
shll
inc
fidivl
and
jmp
subl
jne
or
scas
mov
data16
cld
push
pop
test
mov
loop
nop
jbe
push
je
or
dec
xor
hlt
scas
sbb
jmp
sbb
movsl
rclb
fs
fdivrl
pushl
adc
pop
add
pop
ret
testb
or
sbb
scas
lds
les
dec
sti
add
imul
gs
sbb
sub
pop
jmp
and
movsb
cmp
addw
loope
mov
sahf
mov
push
leave
sar
or
clc
clc
add
frstor
repnz
push
and
mov
jne
sbb
inc
pop
add
cs
jbe
mov
inc
test
js
dec
and
in
jbe
int
andl
adc
inc
add
jl
or
cmp
jmp
ret
fmull
int3
pop
inc
xlat
dec
aam
pop
mov
shrl
push
add
or
adc
sbbb
push
cld
cmp
test
push
jno
inc
jnp
adc
mov
cmp
mov
je
lea
add
dec
or
insl
imul
je
and
rolb
and
cmp
movsb
sahf
aaa
pusha
in
add
mov
cmp
dec
sarb
mov
add
cmpsl
in
cli
add
add
add
add
add
jb
dec
or
mov
xchg
mov
dec
cmp
js
add
and
repnz
add
add
and
jp
js
add
in
and
pushl
dec
iret
test
xchg
or
enter
dec
inc
sub
sbb
dec
cmc
adc
shlb
mov
sub
cmp
sub
pop
out
add
fwait
mov
cmpsl
inc
mov
push
call
jae
or
fistpl
adc
mov
inc
mov
in
enter
jmp
add
stos
shll
adc
in
bswap
test
jmp
push
inc
enter
jb
or
mul
lret
sub
jmp
inc
outsb
xchg
ja
xor
push
mov
stc
push
add
decl
add
add
xchg
andl
cli
rolb
jbe
stc
mov
sbb
pop
dec
push
ret
mulb
pop
mov
loopne
movsb
sub
aaa
inc
xchg
repnz
mov
je
inc
je
out
xchg
xlat
mov
jmp
mov
push
or
sub
lea
jmp
mov
xor
shll
loopne
and
daa
and
test
outsb
pusha
popa
xchg
ss
fdiv
push
es
pusha
cmp
or
push
dec
stos
adc
xchg
cs
std
decl
je
sub
cmp
sbb
and
add
add
xchg
sbb
call
frstor
sbb
cld
cmp
clc
movsb
jg
push
es
push
inc
mov
and
daa
adc
fdivs
aaa
out
push
je
add
cmp
adc
ret
je
inc
fcoms
ja
fwait
add
filds
popf
mov
and
cmp
lods
lock
call
jl
cli
adc
mov
add
sub
push
jb
jge
cmp
pop
jle
aam
xor
or
adc
sar
jmp
mov
call
sbb
testb
je
andb
push
mov
mov
pop
or
add
mov
adc
push
adc
lods
add
or
rorl
adc
xor
mov
xchg
inc
scas
push
push
mov
xor
sub
or
push
pop
sbb
fwait
aas
push
dec
push
sub
add
inc
bts
repz
sub
mov
jae
mov
mov
in
inc
clc
adc
es
and
lcall
mov
call
repz
cmp
jl
inc
pushl
out
sarl
shll
fldt
sbb
or
divw
insl
jg
or
jmp
mov
divl
dec
mov
mov
mov
scas
es
mov
je
lcall
jg
jb
cmp
ja
add
cmp
adc
push
imul
and
lcall
add
cmpb
xor
or
pop
xchg
sbb
decb
sbb
lock
mov
push
fucom
push
cmpsb
clc
je
or
fimuls
add
adc
pop
in
sub
fimull
repnz
cmp
jmp
add
sbb
mov
push
mov
add
inc
sub
insb
sbb
cli
movsl
xor
div
aam
clc
xlat
rorl
shr
inc
mov
mov
xchg
sub
shr
rcr
shr
rcr
jl
hlt
div
divl
iret
mov
inc
inc
mul
add
jb
cmp
pop
idiv
ja
jb
cmp
add
rcr
out
inc
inc
fists
mov
fucomp
or
push
jmp
fstl
enter
or
cld
jns
out
clc
xchg
or
xlat
or
or
sub
scas
sbb
push
or
testl
repz
cmp
sub
repz
sub
add
inc
push
push
jb
repz
mov
out
out
ds
outsb
push
sub
push
dec
jns
repz
nop
mov
repz
repnz
out
cmp
les
xlat
jl
sub
add
repz
repz
mov
lcall
js
push
ljmp
push
add
xor
iret
repz
pop
data16
repz
repz
scas
mov
cmp
loop
decb
sbb
ds
fs
jns
out
xchg
scas
enter
cmp
repz
add
xor
lcall
mov
add
repz
jnp
push
or
add
imul
out
push
hlt
lret
into
push
test
cmpsb
add
jp
daa
push
lcall
xlat
rcr
andb
incl
rcl
xchg
ljmp
cli
sub
fwait
rcr
leave
fsub
sbb
enter
rcr
rcl
mov
or
fdivrl
out
sub
lret
fcomps
xchg
popf
lahf
fildll
aam
jbe
fcmovne
shl
les
outsb
aam
push
out
in
jnp
xchg
fmul
aam
popf
nop
bound
leave
popf
leave
rorb
leave
pusha
lcall
into
popf
rcl
inc
mov
adc
mov
hlt
lock
or
fcom
into
movl
xchg
push
lds
and
rcll
loop
mov
mov
rcr
or
fwait
mov
in
inc
cmovo
adc
push
inc
inc
xchg
sarl
pop
mov
aam
jp
mov
in
adc
sti
or
test
pop
movsl
inc
cmpsl
cli
cmp
insl
imul
push
outsl
clc
mov
or
mov
cmpsl
xchg
lahf
das
dec
mov
dec
adc
sbb
push
xor
add
movb
repnz
adc
add
mov
xchg
add
out
xor
loop
loopne
xor
repz
push
jo
loop
es
sarb
out
add
push
or
push
nop
ss
insl
ss
inc
push
outsb
push
fiadds
fwait
int
pop
push
sbb
mov
rorb
push
jo
or
or
mov
rorb
push
push
add
sahf
imul
inc
pop
xor
and
sub
jne
add
insb
inc
pusha
aaa
mov
scas
push
lods
mov
lcall
fistpll
hlt
repz
stc
hlt
and
jae
mov
into
leave
fdivs
repnz
or
mov
push
inc
leave
repz
in
jbe
push
xchg
adc
in
jns
fimull
xchg
xorb
int
cli
iret
outsl
fisubrl
inc
out
add
int
fldt
fidivrs
xchg
xchg
fcompl
out
daa
fwait
notb
push
push
and
cs
sbb
dec
dec
push
arpl
mov
cli
xchg
ret
scas
cli
fadds
inc
hlt
clc
nop
mov
enter
push
xchg
ja
sti
jmp
fisubs
ljmp
mov
sub
into
rcl
pop
mov
adc
or
lods
dec
popa
push
push
or
scas
int
mov
add
dec
leave
loop
test
sbb
mov
add
or
mov
and
es
flds
sbb
scas
rorb
adc
mov
test
sti
jle
lea
and
sahf
andl
push
bound
mov
adc
dec
fsubrs
dec
add
sub
shrb
push
inc
sbb
ja
pop
or
mov
mov
mov
push
cmpsl
push
das
mov
push
mov
insb
mov
loopne
loopne
in
in
lock
rorl
insl
or
add
cmp
and
adc
das
fs
roll
std
or
push
dec
push
inc
jl
insl
bound
cmp
sbb
fistps
addb
into
je
in
fs
fstpl
movd
pop
or
xor
test
push
jmp
movsb
dec
jle
out
jae
into
mov
xchg
jns
jg
add
aad
pusha
outsb
xchg
adc
push
fisttpl
dec
clc
sbb
adc
mov
outsl
pop
dec
inc
xchg
rol
pop
cmp
and
test
add
fsubrs
ja
daa
call
cs
ja
xor
sbb
dec
subl
out
pop
push
sub
add
sub
daa
push
add
adc
add
mov
mov
mov
cwtl
push
repnz
cmp
mov
repz
fisubrs
or
insb
aam
insb
outsb
inc
jne
and
movb
add
adc
idiv
pop
pop
push
gs
push
jo
or
or
sbb
add
inc
pop
outsl
mov
and
adc
and
imul
dec
and
imul
push
push
mov
push
sub
add
je
push
test
dec
mov
orb
lea
push
mov
mov
add
les
inc
repnz
add
jbe
mov
mov
pop
adc
repnz
mov
subb
inc
gs
add
and
outsl
jns
sarl
into
push
push
outsb
push
xor
inc
rolb
fs
clc
xor
icebp
and
add
cmpb
popa
je
pop
outsl
jae
dec
add
dec
pop
and
sbb
or
jae
dec
popa
xor
add
mov
fisubs
push
cmp
cld
or
scas
lret
gs
sub
ficompl
imul
push
dec
inc
dec
sub
enter
inc
addr16
add
fsub
inc
nop
add
inc
add
sub
cld
xor
dec
gs
push
push
movsb
lahf
pop
add
cmp
pop
jns
sbb
sub
scas
add
inc
mov
jnp
sbb
gs
popa
mov
sbb
push
dec
mov
or
mov
and
or
mov
loopw
xchg
push
lods
loopne
push
outsl
sti
inc
push
dec
dec
add
inc
jbe,pt
dec
inc
xor
cwtl
roll
shlb
pop
insl
push
inc
lcall
lcall
in
jo
cmpsl
pop
out
loop
pop
sbb
lock
pop
out
add
imul
out
mov
xchg
sbb
out
insl
xchg
mov
add
loopne
mov
insl
stos
outsb
jle
xor
push
js
lret
or
push
popa
aaa
imul
mov
cli
arpl
dec
mov
stos
dec
scas
pushf
test
icebp
movsl
add
ficomps
push
sete
shll
or
ja
iret
movsb
addr16
fwait
sahf
jno
jo
out
ss
cltd
mov
in
fadd
sbb
mov
adc
adc
gs
dec
notl
and
ret
sub
negl
xchg
ljmp
outsl
cmp
adc
cmp
jo
cs
push
cmc
push
mov
jg
fisubl
sbb
mov
xor
xchg
push
mov
add
pushw
nop
pusha
das
neg
adc
sub
mov
stc
add
pop
fstl
outsl
adc
dec
je
sahf
and
jnp
push
and
add
fildll
mov
jae
roll
data16
jo
jo
cmpsb
and
xor
stc
add
push
pop
sub
inc
dec
pop
mov
jae
pop
sahf
add
not
jp
je
inc
ja
xor
add
push
dec
push
popa
and
dec
mov
pusha
mov
inc
dec
mov
or
test
loopne
mov
inc
and
inc
bound
push
popa
sbb
cmp
mov
jl
mov
push
cwtl
movsb
negb
divl
call
push
int
lock
filds
push
scas
mov
cs
dec
dec
add
clc
outsb
push
ret
pop
jne
stos
dec
rcrb
outsl
insb
aam
dec
bound
loop
loop
pop
jae
cmp
and
daa
inc
int3
xchg
xor
jl
cmpsl
sub
pop
or
int3
mov
mov
jbe
mov
subb
fisubrs
add
jb
inc
or
sbb
cmpsb
outsb
fbstp
push
addb
mov
mov
ffree
and
xchg
or
push
adc
iret
and
nop
bound
jo,pn
jo
inc
add
mov
inc
mov
push
push
xor
cmpb
mov
dec
repz
ss
ljmp
jo
pop
nop
sti
push
pop
mov
add
mov
std
data16
shrb
gs
pop
and
adc
mov
mov
std
sub
adc
or
adc
push
js
imul
pusha
sbb
insl
sbb
es
push
decb
shll
test
sub
js
mov
fbld
add
add
push
add
push
aam
add
rcl
outsb
add
pop
dec
dec
cli
mov
xor
xchg
jne
insb
lcall
shrb
faddl
inc
pop
mov
je
sti
mov
insb
sub
sahf
filds
push
add
add
mov
fdivrs
and
out
addl
dec
push
xchg
inc
inc
dec
jmp
aaa
or
cmc
loopne
push
inc
subb
add
addr16
sbb
outsl
pop
sub
mov
pop
add
das
jb
xor
mov
nop
pop
push
in
mov
scas
and
movsl
jg
imul
rolb
mov
push
push
adc
mov
inc
adc
push
filds
push
add
adc
and
mov
daa
loop
add
dec
sub
adc
pop
adc
adc
lods
lahf
or
push
adc
cs
inc
push
pop
arpl
pop
test
test
filds
sbb
pop
jbe
mov
dec
je
dec
xor
lret
fimull
jge
rorb
les
pop
dec
mov
mov
out
andb
add
xlat
adc
pusha
out
or
add
add
mov
and
push
aaa
lds
jbe
add
aas
call
lret
mov
mov
push
aas
adc
xor
add
clc
or
cwtl
adc
lcall
in
negl
jns
out
mov
mov
push
sarl
sbb
hlt
idivb
repz
in
aam
cld
xchg
into
repz
pushl
dec
add
sbb
dec
add
lret
add
add
ss
repz
push
add
repz
add
sbb
dec
fmulp
or
or
or
xchg
fdivl
or
rorb
in
adc
adc
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
cmpb
fdivrl
addl
repnz
mov
jo
loopne
aas
into
aas
xlat
pop
sbb
test
push
pop
pop
adc
xchg
ret
push
das
pop
inc
add
sbb
push
cmp
repz
nop
mov
cmpb
pop
sahf
out
ficoms
inc
inc
cmp
xor
sahf
out
xor
and
out
sahf
out
sbb
add
mov
lock
call
sahf
out
sahf
int3
les
pushf
out
pushf
mov
and
sbb
cmp
movsb
jno
mov
xlat
sub
loop
mov
data16
or
push
test
fdivp
mov
pop
cs
push
push
repnz
dec
gs
and
fisubl
or
das
mov
sub
jno
fistl
rolb
dec
clc
push
add
movsb
push
adc
jnp
ds
or
repz
adc
push
or
dec
fildl
cmp
dec
inc
pop
ds
dec
cmp
adc
dec
dec
dec
dec
or
call
add
add
inc
push
push
inc
push
inc
sbb
test
and
divb
or
call
jns
fcomp
and
aaa
push
fimull
loope
inc
sti
xor
mov
and
negb
dec
gs
jo
aad
mov
push
adcl
inc
fsubl
push
gs
fdiv
pushl
inc
inc
aaa
inc
xor
sub
sub
sub
adc
idiv
inc
xor
cmp
xor
movsl
jbe
sbb
adc
std
lret
or
add
inc
push
or
jo
inc
pop
cld
fwait
add
xor
cmp
jbe
mov
or
cmp
adc
fs
dec
inc
cmp
roll
jae
mov
sub
xorl
xlat
push
inc
sub
or
xchg
or
mov
adc
hlt
push
cmp
dec
bound
pusha
mov
pop
pop
les
imul
shrb
cmp
loopne
push
arpl
push
test
jnp
and
inc
and
pop
or
adc
sbb
sub
call
push
pop
inc
fdivl
push
or
daa
inc
push
xrelease
stc
cmp
xor
sbb
xchg
adc
xor
ds
incl
aaa
ss
cmp
xor
stc
jg
adc
inc
push
inc
es
inc
add
push
add
and
or
rcr
test
andb
xchg
dec
loopne
scas
enter
out
mov
pop
call
xchg
mov
pop
sbb
cld
rolb
and
push
mov
bound
jle
enter
mov
mov
sbb
and
add
jle
push
xor
dec
dec
inc
mov
inc
add
add
and
push
jo
add
cmp
cmp
movl
push
xor
add
test
adc
fwait
mov
mov
add
and
inc
pop
aaa
das
dec
sbb
xor
nop
pop
out
mov
add
ja
jl
rcll
mov
pop
clc
ja
jmp
lds
imul
sbb
ja
das
and
in
add
mov
or
fcmovnb
xchg
enter
adc
xchg
xchg
add
sbb
dec
repz
sub
xor
mov
xchg
add
out
rcr
mov
xor
add
int
push
cmpsl
aas
add
pop
and
add
cli
inc
dec
dec
dec
inc
push
mov
jmp
cs
push
cmp
pop
dec
jbe
pop
bound
in
imul
ss
mov
mov
cmp
cmp
es
addr16
push
imul
call
and
add
inc
push
push
movsb
add
add
wrmsr
pop
or
mov
cmp
lcall
xor
jle
mov
mov
xor
xor
xor
xor
xor
ljmp
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
mov
cltd
xor
xor
fnstenv
jmp
xor
xor
sub
xor
xorb
xor
xor
xor
sbb
jmp
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
incl
cld
xor
dec
ss
ss
ss
xchg
mov
fwait
ss
in
or
call
aaa
gs
jns
xchg
xchg
aaa
cwtl
aaa
cmpsl
aaa
cli
aaa
add
cmp
outsb
cmp
jg
call
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
push
cmp
cmp
cmp
cmp
cmp
dec
cmp
je
cmpsl
cmp
in
repnz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
test
cmp
sbb
daa
ds
cmp
lahf
ds
ds
sarl
push
aas
adc
and
aaa
aas
inc
aas
push
sbb
push
aas
gs
lods
aas
mov
aas
mov
pushl
and
xor
inc
xor
pop
xor
xor
xor
xor
xor
bound
jbe
cmp
pushl
nop
xor
xor
xor
xor
xor
data16
mov
xchg
xor
add
xor
xor
cmp
insb
xor
mov
popf
xor
xor
xor
pop
xor
xor
xor
ljmp
pushl
xor
xor
xor
xor
xor
xor
xor
xor
scas
xor
fbstp
xor
pop
imul
lds
shlb
loop
divb
add
adc
and
outsl
aaa
jp
xchg
aaa
mov
aaa
repz
pop
cmp
cmp
pushl
cmp
cmp
cmp
sbb
and
ficoml
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lret
cmp
cmp
cmp
cmp
cmp
aas
cmp
arpl
jo
jge
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
mov
sar
cmp
cmp
popa
cmp
xchg
cmp
mov
incl
cmp
push
bound
xchg
mov
ds
hlt
ds
shl
aas
dec
aas
data16
jae
cmpsb
aas
mov
ret
aas
xlat
aas
in
icebp
aas
test
decl
mov
lcall
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
ret
aaa
cld
incl
inc
xor
xor
xchg
xor
xor
xor
xor
and
ud0
pushl
xor
xor
xor
xor
xor
xor
mov
xor
outsb
push
ss
inc
ss
jp
ss
lock
pushl
mov
sbb
sub
cmp
dec
aaa
pop
aaa
data16
imul
call
ret
cmp
cmp
dec
cmp
jae
lea
cmp
cmp
cmp
cmp
cmp
pusha
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
std
cmp
cmp
cmp
outsb
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
cmp
in
cmp
sbb
and
das
ds
fidivrl
idivb
add
ss
aas
inc
aas
push
aas
addr16
je
cmpl
out
aas
stc
aas
mov
ljmp
and
bound
jb
xchg
xchg
xor
xor
xor
ljmp
xor
xor
xor
xor
xor
xor
pop
movsl
lcall
xor
xor
xor
xor
xor
xor
jb
mov
fwait
xor
mov
jmp
or
sbb
xor
lock
sub
xor
push
fbstp
xor
xor
sbb
decl
mov
ret
xor
adc
and
xor
inc
ss
ss
bound
mov
jg
pushl
shlb
ss
lock
dec
aaa
pop
aaa
addr16
insb
aaa
jnp
ljmp
adc
push
cmp
pop
and
scas
mov
add
or
mov
cmp
cmp
cmp
cmp
inc
jmp
jl
mov
cltd
cmp
sub
cmp
daa
cmp
push
cmp
clc
ljmp
into
cmp
cmp
cmp
cmp
cmp
mov
cli
cmpsl
cmp
cmp
sub
cmp
cmp
cmp
insl
cmp
mov
jmp
fidivrs
cmp
pop
jns,pt
xchg
mov
idivl
and
incl
or
sbb
sub
insl
aas
js
xchg
aas
mov
and
insb
pop
adc
pop
xor
xor
jg
mov
cmpsb
call
pushl
mov
out
repz
xor
xor
add
ds
std
lock
xor
xor
xor
xor
aas
xor
xor
lret
into
repnz
sar
mov
dec
xor
jo
jge
xorb
xor
xor
xor
ljmp
push
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
std
scas
mov
xor
dec
xorb
ss
ss
ret
pop
pminub
ss
popa
lret
xchg
aaa
enter
clc
pop
std
aaa
in
stc
aaa
push
pop
cmp
cmp
cmp
xor
aaa
loopne
filds
sub
das
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xlat
jg
add
push
cmp
cmp
es
cmp
outsb
sub
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
lcall
lock
xchg
lea
cmp
cmp
std
cmp
cmp
cmp
out
jbe
mov
test
sub
jge,pt
lock
call
ds
mov
xor
cmp
aas
cli
cmpsl
stc
call
scas
aas
mov
aas
add
and
sub
dec
mov
mov
xchg
sahf
inc
xor
pop
loope
xlat
xor
dec
mov
xor
xor
xor
xor
xor
xor
xor
xorb
cli
fdivr
or
inc
sar
xor
push
cmp
movsb
xor
repnz
or
sub
xor
xor
xor
xor
xor
inc
filds
out
xor
lcall
insl
xor
pushl
shlb
cmp
inc
ss
ss
ja
test
aas
cli
decl
ss
add
or
aaa
jno
jle
mov
nop
aaa
lahf
aaa
mov
jmp
cmp
cmp
cmpl
mov
jne
mov
jl
pop
fnstcw
in
cmp
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
inc
adc
call
lret
cmp
push
clc
das
mov
pop
lods
ds
adc
and
aas
ret
pop
aas
arpl
jb
fnstsw
call
pushl
mov
inc
xor
popa
xor
xorb
xor
filds
add
pop
xor
xor
xchg
fmulp
pushl
or
adc
and
mov
lret
xlat
xor
xor
xor
xor
lea
xor
xchg
stos
xor
jbe
decl
pushl
sysenter
sbb
sub
xor
xor
xor
xor
out
xor
xor
xor
mov
xor
xor
aas
jp
and
or
gs
mov
pop
mov
aaa
daa
aaa
add
pop
cmpsb
push
jns
outsl
das
aaa
sbb
daa
cmp
cmp
cmp
cmp
push
pop
mov
push
cmp
incl
fnstcw
call
sbb
call
mov
cld
cmp
cmp
cmp
cmp
cmp
cmpl
fnsave
mov
sub
call
js
es
cmp
xor
push
cmp
cmp
out
xorb
dec
ds
ds
jmp
call
fdivrl
clc
ds
aas
push
aas
imul
mov
xchg
aas
clc
aas
jl
imul
push
loop
jle,pn
xor
xor
push
jmp
and
sahf
xor
xor
xor
xor
scas
sar
sub
dec
xor
mov
xchg
cs
xor
xor
xor
mov
call
xor
xor
xor
call
jg
data16
jns
xchg
xor
xor
mov
xor
xor
test
cld
xor
xchg
out
mov
xor
and
xor
mov
ss
ss
es
aaa
push
cmpsb
ja
test
mov
push
inc
and
cmp
mov
mov
cmp
cmp
inc
cmp
push
clc
mov
into
cmp
stos
fists
cmp
jno
lea
lcall
cmp
cmp
cmp
cmp
cmp
cmp
loope
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmp
cmp
ret
mov
out
adc
pop
mov
aas
xchg
aas
mov
mov
or
adc
call
insb
xor
xor
xor
xor
xor
xor
xor
decl
xor
add
sbb
and
xor
add
inc
xor
pop
and
out
fwait
push
inc
xor
inc
gs
xlat
xor
xor
add
stos
dec
xor
addr16
mov
xor
fisubs
je
pushl
xorl
ljmp
aaa
push
aaa
pop
aaa
outsb
aaa
xorb
aaa
pushf
aaa
mov
jg
inc
or
add
outsb
mov
mov
add
cmp
cmp
cmp
cmp
push
inc
cmp
push
cmp
mov
cmp
cmp
cmp
push
cmp
push
xor
push
and
cmp
cli
arpl
cmp
inc
idivb
cmp
pop
cmp
mov
js
adc
mov
push
rclb
ds
lods
sarl
out
ds
ficompl
xor
pop
dec
lods
xor
mov
or
loopne
xchg
jp
test
mov
mov
xor
xor
xor
shlb
xor
xorl
mov
call
loope
xor
xor
xor
mov
clc
mov
xor
xor
ss
ja
test
xor
sub
outsl
ss
ss
and
xor
inc
scas
bound
sub
fmulp
aaa
add
push
cmp
cmp
aaa
loopne
aaa
cmp
xchg
test
mov
mov
cmp
cmp
mov
lret
cmp
cmp
cmp
cmp
loope
lcall
push
xchg
xchg
cmp
cmp
cmp
cmp
cmp
adc
ret
pop
jp
ret
cmp
iret
cmp
add
or
je,pt
jg
fwait
ds
sub
call
call
aas
es
sub
cmp
jnp
pop
shl
pop
xor
aas
lcall
clc
scas
cli
xor
xor
mov
xchg
xor
clc
pushl
xor
xor
xor
mov
inc
xor
mov
xor
xor
xor
sar
mov
pop
xor
mov
ret
xor
xor
mov
cmp
xor
outsb
push
std
xor
ljmp
xor
xor
xor
out
scas
xor
xor
xor
xor
lea
xor
les
jecxz
repnz
mov
ss
ss
das
jb
aaa
adc
int3
aaa
xlat
xchg
add
xor
inc
sub
cs
cmp
add
loope
or
cmp
cmp
pop
cmp
jg
mov
mov
lods
add
or
cmp
jbe
bound
repnz
cmp
pushl
cs
inc
cmpb
cmp
cmp
cmp
cli
pop
ds
and
xchg
jnp,pn
sarl
cmp
cmp
cmp
cmp
pop
cmp
mov
cmp
in
clc
cmp
fnsave
jle,pt
mov
mov
add
pop
scas
test
xchg
aas
lds
sarb
push
push
push
adc
adc
icebp
aaa
pop
sub
xor
pop
call
push
shll
xor
xor
xor
push
xor
js
dec
aaa
jmp
xor
sub
mov
xor
xor
jmp
sbb
xor
xor
xor
cmp
loope
xor
dec
xchg
leave
xor
xor
std
lock
ljmp
test
xlat
sbb
or
ds
dec
aaa
pop
jl
mov
popf
aaa
fidivs
loop
sbb
cmp
bound
jbe
nop
cmp
cmp
adc
cmp
jb
cmp
xchg
fldt
sbb
cmp
jp
mov
sahf
cmp
inc
mov
cmp
ds
jg
cmp
cmp
cmp
cmp
cmp
imul
xchg
cmpsl
in
icebp
add
push
stos
pop
ljmp
cmpsb
ret
cmp
adc
out
ds
scas
mov
ds
pop
mov
push
aas
popa
aas
outsb
sbb
lahf
or
jp
shlb
xor
dec
jg
insb
mov
xor
mov
xor
cli
cmp
dec
xor
cwtl
xor
jg
sbb
sbb
inc
xor
xorb
xor
xor
pop
sub
xlat
xor
adc
scas
mov
ljmp
jl
xor
xor
xor
xor
xor
xor
xor
xor
jb
test
stc
sbb
adc
xor
and
sar
jne
push
ss
mov
clc
rcrb
aaa
sub
mov
mov
mov
aaa
scas
aaa
mov
push
and
lret
sahf
cmp
pop
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
push
repz
jg
dec
stos
push
cmp
jp
xchg
mov
cmp
cmp
bound
cmp
cmp
cmp
xlat
shll
cmp
cmp
cmpsb
cmp
cmp
inc
fidivl
jb
lcall
ds
mov
ds
and
mov
push
aas
push
loop
aas
leave
inc
inc
xor
jp
aas
std
lret
cmp
mov
xor
xor
pop
clc
jmp
jb
xor
push
pop
xor
stos
aam
sar
xor
xor
xor
cmpsb
mov
mov
xor
push
bound
roll
les
push
sub
push
xor
push
xchg
outsl
les
xor
xor
xor
xor
xor
sbb
lods
xor
std
xchg
aaa
sub
enter
cmp
cmp
jp
orl
mov
loopne
pop
cmp
fs
test
xchg
cmp
cmp
cmp
cmp
rorb
imul
or
cmp
test
push
mov
in
cmp
push
ds
icebp
jg
ds
mov
fistpll
in
repz
add
jno
pop
aas
push
sahf
int3
aas
fld
jmp
cli
sbb
lock
and
lret
clc
stos
icebp
xor
lods
sahf
leave
xor
xor
xor
outsb
or
js
aaa
sbb
push
xor
xor
out
clc
inc
dec
cld
xor
xor
xor
sub
xor
icebp
inc
cli
xorb
xor
xor
addl
mov
push
xor
xor
xor
xor
xor
xor
cmp
push
ret
mov
aad
out
mov
xchg
aaa
cmc
aad
fwait
out
add
or
cmp
xchg
lcall
fnstcw
sub
xor
dec
cmp
cmp
std
push
cmp
cmp
repnz
cmp
cmp
cmp
js
enter
fdivrl
jmp
cmp
cmp
cmp
es
loope
je
ds
aas
mov
sbb
mov
dec
xor
sub
in
xor
xor
xor
xor
cmp
or
adc
xor
in
jg
mov
xchg
xor
shrl
add
rcrl
cmc
dec
add
cmp
mov
mov
inc
ret
cmp
or
les
nop
data16
push
add
sbb
popf
aas
stos
aas
fmuls
aaa
loopne
imul
lock
add
xor
imul
ss
arpl
or
adc
lock
cmpsl
rcll
cmp
cmp
push
cmp
pusha
test
into
fidivrl
ds
dec
out
ret
xchg
in
pop
and
sub
lahf
aas
movsb
mov
lds
xor
push
ljmp
pop
ds
xor
sahf
xor
xor
xor
xor
sbb
and
sub
push
xor
das
shll
cmp
inc
xor
outsl
sahf
push
sahf
adc
jbe
loope
inc
xchg
loop
ss
xor
hlt
test
xor
jp
test
pshufw
loope
xor
cs
xor
popf
xor
adc
and
xor
cmpsl
outsb
arpl
lret
ss
dec
test
ss
aaa
xor
inc
jb
xchg
aaa
shlb
out
aaa
sti
xor
dec
std
aaa
cmp
cmp
insb
cmp
lea
fucomip
cmp
cmp
cmp
jp
cmp
ljmp
or
cmp
cmp
jae
cmpl
cmp
add
push
cmp
cmp
jl
mov
cmp
cmp
cmp
mov
cmp
push
ljmp
dec
xchg
pop
jp
and
cmp
addr16
clc
mov
mov
les
fadds
bnd
xor
xor
xchg
adc
add
jp
inc
je
mov
stos
inc
jg
xor
xor
inc
xor
cmc
push
call
shll
xor
repnz
jle
mov
push
add
scas
mov
or
push
push
mov
xor
dec
enter
testb
sbb
xor
jno
mov
xor
rorb
ss
mov
push
xchg
lret
cs
or
push
add
pop
aaa
sbb
mov
mov
popf
ljmp
cmp
stos
pushf
or
cmp
cmp
cmp
cs
rcl
pop
dec
cmp
mov
or
cmp
cmp
cmp
notb
pusha
mov
cmp
jb
out
add
adc
cmp
xchg
cmp
outsl
xor
mov
addr16
xchg
cwtl
cmp
shl
sar
cmp
cmp
cmp
cmp
cmp
push
mov
fwait
mov
lret
cmp
push
add
test
pop
arpl
xchg
std
or
push
aas
imul
lahf
push
add
push
xor
xor
xor
test
cmc
cld
pushl
mov
xor
xor
xor
xor
xor
or
xor
dec
xor
push
push
lret
pop
hlt
aad
mov
xchg
gs
ja
xchg
cmpsb
xchg
fwait
dec
jl
sti
xor
cs
je
mov
repnz
xor
xor
xlat
fildll
xchg
xor
lds
das
jl
xchg
outsb
or
ss
je
cmp
jbe
ss
jb
aaa
inc
fmull
dec
jmp
clc
xchg
adc
add
mov
fnstsw
in
stos
dec
cli
mov
out
sahf
mov
cmp
cmpsb
cmp
insb
xor
aam
mov
cmp
cmp
cld
inc
fisttps
test
cmp
cmp
cmp
test
mov
lahf
idiv
scas
sbb
das
sarb
dec
fimuls
inc
idivb
das
cwtl
movsl
ds
leave
add
sahf
es
sbb
outsb
into
cmc
in
and
push
xor
rclb
sahf
aad
cld
xor
aaa
mov
ds
xchg
mov
mov
filds
xor
xor
arpl
jae
xchg
xchg
mov
push
and
inc
cmp
inc
inc
mov
adc
aam
and
sbb
mov
jmp
fwait
sub
inc
xor
xor
pop
inc
scas
add
mov
mov
inc
mov
pop
or
sbb
outsb
aaa
jns
mov
rclb
test
iret
hlt
push
pop
out
mov
inc
mov
cmp
jg
scas
xchg
lret
sub
ss
jbe
xchg
lcall
cmp
pop
sub
stos
and
pushf
std
jne
scas
mov
cmp
into
fistpll
adcb
sbb
push
push
xchg
jmp
cmp
sbb
xchg
movsb
xlat
ds
stos
and
or
adc
aas
ss
push
aas
fld
sbb
daa
xor
push
mov
xor
xor
shlb
push
add
adc
ja
test
mov
out
push
adc
xor
xor
push
push
and
stos
push
loopne
iret
ret
xor
into
dec
mov
lcall
push
inc
or
pop
outsb
adc
mov
inc
pop
pop
mov
inc
mov
repnz
mov
jl
xchg
das
push
lock
adc
and
cs
xor
inc
aaa
scas
aaa
mov
call
cmp
push
cmp
gs
std
cmp
sbb
mov
outsb
dec
push
push
sbbb
adc
cmp
pop
cmp
or
xchg
scas
cmp
inc
xor
xchg
mov
dec
movl
lahf
jne
cmpb
ds
call
or
aas
cmp
cmpsl
aas
mov
pop
lret
addb
sub
aas
xor
xor
roll
sti
xor
jmp
js
xor
divb
sti
push
ljmp
cwtl
adc
das
dec
xor
jns
xchg
xor
and
cwtl
into
xor
xor
jle
mov
scas
inc
pop
mov
add
into
xor
xor
enter
adc
ss
dec
ss
movsb
ss
sub
cmp
dec
shlb
jp
aaa
push
aaa
fnstenv
cmc
pop
xor
push
cmp
rorl
adc
cmp
push
stos
jb
cmp
push
mov
mov
jle
cmp
pop
lock
mov
cmp
cmp
into
inc
and
push
xchg
dec
scas
cmp
ffree
xor
inc
cmp
scas
inc
dec
hlt
sub
and
imul
ds
ds
mov
xor
out
sbb
adc
jl
mov
add
sub
xchg
pop
add
inc
xor
add
cvtpi2ps
rorb
push
xor
call
shlb
fnsave
adc
sbb
xor
pusha
xor
pushl
enter
out
xor
xor
xor
dec
xor
insl
xor
mov
jecxz
aas
xor
xor
xor
push
jecxz
jo
jge
data16
incb
arpl
mov
xor
cs
add
outsb
push
mov
popa
aam
adc
sahf
loop
aaa
arpl
jo
mov
xchg
shlb
aaa
loope
repz
or
pop
xchg
adcl
push
push
in
out
adc
pop
xor
inc
push
ret
sarl
jecxz
push
pop
out
push
add
push
cmp
mov
cmp
and
inc
cmp
test
out
cmp
or
sub
xor
cmp
cmp
cmp
cmp
cmp
add
es
adc
dec
cmp
sbb
mov
ds
dec
push
add
loop
outsb
mov
sbb
and
ljmp
push
arpl
ja
test
xchg
aas
xchg
aas
movsl
fdivrp
aas
add
hlt
pop
outsb
push
stos
je
xor
divb
jb
jle
xor
jne
cltd
loopne
push
adc
mov
ljmp
cmpsb
jns
xchg
xchg
xor
pop
add
xor
xor
jb
xor
int
filds
shll
loopne
in
xor
xor
xor
xor
jae
lods
faddp
xor
sbb
jle
outsb
push
outsb
add
xorb
repz
add
ss
jbe
aam
fwait
lahf
fbstp
out
sbb
sbb
aaa
mov
sar
cmc
inc
cmp
push
cmp
cmp
cmp
cmp
cwtl
push
add
repnz
lret
test
adc
call
aaa
cmp
pop
adc
shr
std
ja
call
cmp
cmp
les
push
or
cmp
pop
pop
sar
push
cmp
xchg
cmp
mov
cmp
cmpl
inc
repz
pop
aas
and
push
aas
mov
mov
mov
push
jg
xor
xor
xor
jbe
xorl
ljmp
ds
jne
lds
jb
xor
stos
shr
pop
xor
data16
cli
bound
fbstp
repz
stos
dec
test
xor
sub
loope
mov
lcall
xchg
lret
adc
dec
movl
xor
mov
xchg
iret
fisubl
ss
inc
aaa
push
aaa
addr16
orl
xchg
scas
loopne
scas
bound
mov
cmp
mov
cli
call
sub
imul
hlt
cmp
mov
test
loopne
ljmp
cmp
sbb
fistpll
in
repz
dec
movsl
xchg
push
jne
mov
lds
fldl2e
repz
cmp
cmp
mov
adc
inc
in
mov
jo
outsb
xchg
inc
loopne
mov
mov
sub
ljmp
push
add
aas
sbb
sub
sub
divb
jle
loop
scas
adc
mov
hlt
lock
ds
fidivrl
in
mov
fnstsw
fidivl
aad
icebp
mov
clc
add
xorl
rolb
xor
ret
sbbb
int
sarb
mov
push
inc
add
pop
sub
enter
out
lahf
incl
jge
mov
mov
sti
or
or
lds
bound
shl
into
pushl
sahf
sbb
jge
push
jbe
aad
loop
push
sahf
and
shlb
xlat
dec
mov
loopne
mov
fdivp
dec
test
xchg
cmp
cmp
je
mov
and
cmp
xor
pop
cs
mov
xchg
sar
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
or
cmp
xchg
je
or
push
rcr
pop
jle
fiaddl
movb
je
mov
ret
fsubrs
ja
xor
push
mov
cltd
xor
xor
push
loop
fdivl
jmp
clc
xor
xor
mulb
xor
sub
mov
and
jb
call
push
iret
call
lock
add
adc
jo
test
je
cltd
fnstenv
jmp
mov
mov
loopne
je
outsb
out
xor
xor
pop
mov
lock
adc
cs
push
cmpsb
mov
fwait
out
loopne
sbb
sub
pop
aaa
pusha
xchg
adc
mov
cmp
stos
ret
pop
ljmp
cmp
repnz
cld
icebp
cmp
cmp
inc
dec
out
cmp
jmp
cli
jl
cmpl
push
cmp
cmp
imul
les
push
stos
cltd
pop
lods
cmp
cmp
xchg
test
xchg
sarl
cmp
cmp
pushf
fwait
and
and
scas
adc
fcoml
mov
push
xchg
fwait
add
mov
ds
ds
cmpsb
ds
ret
div
sub
add
aas
gs
lret
xchg
repnz
incl
fwait
or
xor
jno
cwtl
xor
lret
cmc
loop
xor
cmpsb
xorb
test
fnstsw
fidivs
xor
ja
jp
xor
xor
xor
xor
jecxz
push
or
rcll
cmp
adc
aaa
pop
xor
add
movsl
sub
fsts
dec
xor
loope
cld
xor
nop
data16
jmp
adc
je
sub
clc
out
pop
xchg
cmpsb
pushl
or
or
jae
or
pop
jb
aaa
movsb
aaa
mov
mov
sahf
pop
outsb
loopne
dec
dec
dec
rorb
test
lret
cmp
ds
push
adc
cmpsb
cmp
xchg
inc
scas
cmp
cmp
cmp
xchg
icebp
cmp
jbe
outsl
ret
mov
ret
cmp
jbe
cmp
cmp
cmp
sub
xchg
lret
jb
or
and
ljmp
cmp
lcall
xor
cmp
add
ds
xor
inc
popf
push
stos
pop
push
mov
mov
fldenv
out
sbb
mov
lret
imul
std
jg
jb
out
or
dec
clc
xchg
dec
pushf
rolb
xor
sub
push
or
and
lea
push
call
aaa
xor
ja
fwait
xor
mov
sub
add
mov
mov
loope
inc
lret
xor
xor
sub
push
loopne
xor
jle
xor
xor
push
cld
outsb
lcall
xor
xor
push
add
sbb
stos
adc
das
fiaddl
popf
aaa
out
aaa
pushl
scas
xor
sub
inc
sbbb
or
or
aaa
cmp
cmp
loopne
pop
mov
jecxz
cmp
mov
leave
cmp
mov
inc
pop
std
cmp
cmp
xchg
add
add
jae
adc
push
sub
mov
xlat
test
rol
stos
pushf
inc
cli
xchg
or
pop
lods
fcmovbe
fidivrs
jmp
bound
aas
push
push
jle
mov
push
cld
loop
mov
stos
andl
jmp
xor
sub
cwtl
xor
hlt
adc
and
in
xchg
xor
add
cmp
addr16
mov
aaa
lock
pop
adc
xor
lret
pop
cmp
fidivs
mov
xchg
xor
push
jns
icebp
mov
xor
push
add
cli
pop
jge
xchg
mov
out
push
shlb
ja
pop
push
push
arpl
cmpsb
aaa
mov
add
pop
cmp
stos
cmp
ret
jmp
cmp
mov
iret
iret
or
add
push
je
mov
cmp
es
test
push
add
or
push
movsl
rclb
loope
jmp
jno
inc
adc
and
xchg
cmpsb
add
add
inc
je
mov
inc
test
sbb
ds
push
incl
ds
lret
cmp
dec
aas
pop
aas
push
add
mov
xlat
int
mov
dec
adc
pslld
and
fs
adc
adc
xchg
lret
push
call
xor
xor
xor
std
adc
xor
mov
mov
adc
xor
cs
xor
clc
popa
inc
jl
xor
out
xor
sbb
jl
mov
and
mov
xor
mov
xchg
ss
ss
mov
mov
add
pop
cmp
inc
cmp
pop
inc
sub
push
fisubrl
lods
mov
cmp
cmp
sahf
jo
es
pop
sarl
cmc
cmp
cmp
dec
push
push
mov
inc
adc
jecxz
or
cmp
loop
mov
xor
insb
xchg
scas
add
mov
push
outsb
lcall
imul
fs
int
pop
mov
add
dec
aas
pop
aas
jne
cmpb
aas
ret
pop
lcall
incl
loopne
xor
mov
leave
xor
xor
xor
xor
sbb
mov
sbb
jb
jge
fnstenv
out
sbb
push
cmpsb
xor
inc
adc
movsb
insb
cmpsb
mov
add
arpl
jo
je
xor
mov
jg
inc
inc
fiadds
mov
xor
xor
pop
xor
mov
push
lods
add
pop
cmp
mov
mov
lea
xor
dec
xchg
imul
jbe
jecxz
mov
or
mov
aaa
adc
stc
sbb
adc
gs
push
push
subl
pop
mov
lcall
push
adcb
ljmp
dec
pop
int3
mov
jb
dec
add
dec
xor
scas
aaa
push
push
loop
xor
xor
sbb
dec
xor
jl
push
subl
jo
test
jp
mov
cmp
push
outsb
sub
cltd
xor
adc
push
cmpsb
pop
xor
xor
xor
mov
dec
sub
shrb
jp
lock
push
mov
stos
clc
xor
cmp
push
lret
sbb
dec
idivb
test
xlat
lea
mov
repz
xchg
or
mov
cmp
jl
or
sbb
scas
lods
test
pop
inc
jle
cmp
cmp
xor
push
push
fs
les
iret
mov
cmp
cmp
cmp
adc
mov
out
jb
mov
fidivrl
scas
push
pop
jo
mov
pop
cmp
inc
ja
loop
cmovle
xor
sbb
add
je
mov
dec
out
out
mov
sbb
jbe
lret
lock
add
xor
sahf
inc
xor
mov
push
adc
jg
xor
dec
xor
pushf
ret
jle
xor
clc
stos
or
xor
dec
mov
mov
dec
lret
xor
cmp
scas
mov
xor
jp
lcall
jb
lcall
adc
arpl
sahf
movsl
aaa
daa
adc
pop
jl
adc
stos
jg
jle
jne
and
loop
jb
cmp
loop
cmp
push
jo
and
cmp
fiadds
mov
cli
lret
std
jp
pop
notl
xor
cmp
add
cmp
pusha
push
test
es
sub
frstor
mov
xchg
ss
mov
scas
rclb
loopne
sbb
sub
aas
pop
inc
pop
sub
scas
mov
xor
rclb
xor
push
sbb
jae
lret
inc
inc
adc
jae
andb
push
add
pop
cli
xor
outsb
outsb
adc
test
dec
xchg
xor
inc
cmpsl
jo
xor
dec
inc
lea
mov
mov
xlat
cs
inc
inc
add
xchg
ja
loop
test
push
add
sub
adcb
jmp
xchg
scas
add
pabsb
sbb
and
rcrb
lods
sub
dec
mov
mov
loop
ja
dec
push
mov
icebp
lret
xchg
lcall
cmp
cmp
cmp
cmp
testb
mov
add
xchg
je,pt
pop
repnz
jbe
adc
and
dec
test
push
xor
lock
ret
test
cmpsl
in
mov
pusha
dec
dec
xor
jg
mov
adc
sbb
xor
xor
jmp
adc
test
push
dec
pushf
fdivl
in
sbb
cs
mov
mov
cmpsl
jo
repnz
inc
add
mov
aad
adc
decb
clc
mov
int3
xor
cld
subb
ss
ss
ss
fidivl
mov
shll
pop
mov
mov
push
fsubl
inc
int
fdivr
add
add
mov
or
test
xchg
cmp
push
test
jg
pop
cmp
cmp
cmp
divl
xchg
rolb
pop
adc
cmp
cmp
sub
push
into
lcall
push
ret
outsb
je
mov
cmp
je
lds
push
adc
cld
or
jnp
cmp
push
js
filds
ret
ja
add
push
stos
cs
mov
push
incb
je
inc
jo
add
cs
or
cmp
inc
push
daa
cmp
sti
mov
es
pop
sbb
xor
fs
and
push
js
loop
cmp
add
push
mov
mov
cld
dec
fimull
pop
push
jl
jo
sbb
xchg
pop
stos
xor
fcmovu
pop
clc
dec
fisubl
outsl
xor
mov
sbbb
negl
aaa
and
cli
dec
push
mov
inc
xchg
int3
aaa
shrl
xor
xor
push
movsb
not
test
enter
idivb
aaa
pop
sub
add
sub
mov
sbb
dec
push
jb
jp
xor
mov
push
cmp
push
mov
add
push
mov
mov
leave
and
cmp
mov
inc
pop
out
inc
mov
xchg
mov
xchg
ds
addb
repz
and
ds
xchg
test
jle
out
ret
pop
xchg
sbb
jle
push
xor
inc
xor
mov
ret
fnstsw
xor
jno
jbe
shlb
add
divl
add
inc
xor
mov
jne
xchg
out
push
sub
aad
push
xor
mov
and
xchg
xor
adcl
and
scas
lret
enter
es
dec
loope
xchg
ret
lcall
mov
dec
push
loop
xsaveopt
icebp
push
dec
lret
aaa
fbstp
in
sahf
aaa
or
dec
pop
cmp
outsb
sub
stos
sbb
ja
dec
inc
cld
xchg
cmp
xchg
sub
cs
xchg
xchg
jae
loope
je
out
pop
adc
sub
cmp
cmp
adc
lods
aam
out
dec
out
inc
cmpsl
push
sub
push
add
stos
es
clc
je
leave
cmp
and
or
xchg
cli
rcrb
call
xor
xor
xlat
pop
or
push
aam
fcoms
push
xor
xor
and
dec
sub
pop
ret
push
add
sub
xor
lahf
push
sbb
jo
pop
pop
xor
push
stos
cli
in
cs
test
in
mov
xchg
test
inc
add
adc
adc
mov
xor
mov
push
aas
dec
xchg
sbb
shll
decl
cmp
loop
cmp
cmp
fidivs
sbb
jbe
lods
push
pop
jg
stos
into
cmpsb
ljmp
sbb
adc
mov
pop
lods
jb
ds
or
outsb
or
xor
cmp
pop
stos
xchg
add
adc
int
sub
xchg
xor
inc
and
push
cmc
repz
mov
push
push
xor
call
mov
fildll
add
xor
lds
xor
std
xor
xor
pop
mov
scas
xor
in
adc
adc
pusha
cld
pop
xor
xor
cmp
inc
ss
dec
pop
ss
stos
sub
jne
xchg
ss
pop
stos
and
mov
push
ds
aaa
push
loop
mov
jno
rcr
stos
data16
push
repz
cmp
cmp
adc
mov
push
and
push
or
mov
lahf
ss
or
push
cmovbe
jb
jle
cmp
or
addb
addb
or
sbb
aas
ds
xor
divb
add
xchg
push
dec
xor
jl
jbe
lret
test
ljmp
lds
cmp
mov
mov
and
sub
dec
stos
shrl
jle
fidivl
les
loopne
add
fs
mov
call
pop
arpl
fidivrs
or
mov
movsb
or
adc
addl
xlat
cmp
pushw
aam
xor
xchg
popa
cmp
stos
push
push
jb
ds
je
or
pop
repz
shlb
push
and
test
sbb
insl
fiadds
shrl
ret
pop
push
push
ljmp
xor
mov
add
inc
sbb
mov
push
push
and
into
xchg
movsl
xlat
push
stos
out
dec
enter
jecxz
les
or
adc
mov
adc
push
push
fcmovbe
data16
sub
push
xor
xchg
inc
adc
jle
inc
aaa
icebp
or
aas
test
hlt
pop
mov
pop
xor
mov
sar
aad
lcall
xor
xchg
jmp
aad
fidivl
lret
clc
mov
ss
xchg
xchg
inc
adc
movsb
ret
ret
rorb
mov
sub
cmp
mov
dec
cmp
fldl
scas
cmp
mov
scas
adc
push
mov
sahf
or
dec
cmp
mov
inc
mov
push
mov
or
fmuls
add
fidivrs
nop
dec
lahf
add
icebp
push
movsl
test
aad
adc
sub
cmp
mov
mov
add
and
cmpsb
xor
roll
jne
inc
inc
mov
pop
and
add
cmp
ljmp
cmp
pusha
xor
scas
mov
mov
or
es
sbbb
inc
push
test
xchg
push
mov
adc
ss
xor
repnz
test
lcall
pop
stos
adc
cmpsb
push
cmp
cmp
subb
movsb
cmp
push
add
lock
cmp
push
sbb
daa
sbb
cmpl
js
fidivrs
pop
scas
orb
clc
es
push
push
mov
ret
mov
mov
mov
lock
cmp
push
mov
ds
out
stc
clts
pop
or
adc
out
push
fnstsw
loopne
and
faddl
and
xor
and
mov
fwait
addr16
jmp
sub
adc
jb
mov
mov
repz
loopne
stc
push
xor
xor
jnp
xor
push
add
xchg
es
mov
ljmp
xorl
movsb
mov
int
bound
jle
int3
sub
stos
jno
sub
jle
mov
push
jmp
cmp
cmp
cmpb
test
cmp
insb
or
pop
data16
xor
adc
cs
sahf
mov
or
push
mov
out
enter
jne
shl
fcom
in
xchg
inc
mov
in
xchg
xor
xor
xor
xor
pop
test
inc
jbe
sub
lods
jbe
aam
add
dec
mov
es
rolb
insb
js
test
or
out
call
or
sub
xor
adc
push
xchg
into
add
adc
sbb
sbb
scas
jns
outsb
xor
cs
sbb
mov
pop
xor
xor
ss
shlb
xlat
cwtl
or
add
add
sahf
xor
mov
jne
inc
clc
adc
lods
push
mov
push
scas
fmul
in
or
or
cld
lret
adc
lea
out
and
inc
outsb
push
pop
add
push
sub
sbb
push
mov
loop
aas
lods
aas
mov
aam
adc
ja
fdivrl
loopne
call
sbb
shrb
sbbl
or
or
cmp
dec
wrmsr
cmpsb
cmp
xchg
out
sub
xlat
aas
popa
movsl
mov
sub
add
or
adc
cmp
subb
add
lcall
mov
out
pop
push
adc
inc
out
sahf
or
inc
dec
nop
orl
jle
ss
orb
sub
xchg
aas
mov
out
add
imul
in
adc
pop
cmp
mov
fldcw
sub
pop
int3
adc
leave
push
rorb
sbb
jns
jo
mov
mov
mov
hlt
movhps
daa
ss
int
repz
lock
fcos
leave
data16
insb
pushl
ljmp
ss
int
push
incl
pop
pushl
inc
adc
jae
into
xchg
or
add
aas
testb
out
std
negl
ss
int
push
ljmp
mov
popf
data16
insb
std
mov
jle
jg
mov
xor
js
insl
das
fldl
std
jb
insb
sahf
push
pushl
xchg
inc
sub
add
fldcw
loopne
mov
fwait
int
xchg
call
mov
int
mov
incl
decl
fwait
mov
enter
xchg
incl
std
nop
std
icebp
xor
or
jg
add
add
add
add
cltd
int
mov
std
mov
jbe
gs
fldcw
pop
out
std
jle
std
movsl
std
sar
out
fwait
int
mov
cmc
test
jb
insb
ss
mov
xchg
jbe
ss
mov
fdivrp
jmp
add
dec
xchg
sti
mov
pop
jg
jecxz
incb
lcall
std
pop
cmp
lods
rcll
std
ja
insb
ss
add
std
lret
lcall
mov
mov
call
std
dec
jmp
mov
loope
mov
loopne
data16
stc
decl
insl
test
jle
fildl
mov
xor
mov
mov
jbe
xlat
jmp
add
lcall
std
jnp
xchg
std
pop
aas
sbb
clc
mov
add
iret
fisttps
sub
cmp
fcmovnu
loope
mov
lret
ret
lea
insb
outsl
jbe
shl
std
test
incl
cmp
jle
sbb
xchg
addr16
cli
insb
pop
in
cli
clc
std
lock
out
jmp
add
mov
jmp
enter
out
add
push
inc
mov
pop
in
add
xorl
loope
loop
mov
xor
aad
xchg
int
and
in
xchg
mov
loope
daa
jne
rorb
dec
pusha
mov
cmpl
clc
in
pusha
jg
into
aam
push
sub
cmpsb
int
ljmp
push
jns
std
lods
std
add
negb
cmpsb
pop
mov
loope
ja
push
std
push
add
push
add
js
and
les
pop
xchg
pop
mov
xlat
jge
fmuls
dec
push
jge
or
jg
out
mov
cvtdq2ps
mov
add
cmp
into
jecxz
ja
testl
ds
pop
xchg
dec
lods
lds
loop
fidivs
sub
rclb
pop
jle
jecxz
inc
fidivl
sar
aaa
icebp
repnz
insl
push
insl
pop
push
dec
cmp
mov
icebp
inc
test
pop
cmpsb
out
test
or
cmc
int3
fisubrs
cmpsb
pop
out
push
insl
ret
loopne
pop
xchg
clc
shl
xchg
shrl
dec
pop
or
jg
lods
pusha
xchg
jbe
add
sub
std
inc
aam
repz
push
int3
jmp
inc
mov
cmp
mov
loopne
popfw
dec
out
psrlw
inc
adc
shll
scas
jbe
add
jbe
std
out
std
lds
mov
lea
xchg
std
out
mov
icebp
iret
addr16
lcall
mov
out
add
fmulp
or
mov
add
jg
xchg
outsb
incb
inc
mov
jbe
std
movl
data16
outsl
add
lock
outsb
xorl
incb
sbb
xchg
cmpsl
aam
push
add
jge
pop
add
mov
mov
add
inc
jne
sbb
push
cs
pop
lods
lds
pop
outsb
mov
push
or
lcall
ja
ret
add
stc
sti
loopne
insb
jmp
pop
scas
sub
sarl
std
ret
mov
mov
std
fcmovu
jg
xlat
xchg
add
std
adc
shrl
jp
aad
push
xchg
add
movd
xchg
out
pop
loopne
cmp
pop
in
in
in
push
shl
bound
sti
std
mov
mov
adc
decb
ljmp
in
loope
lahf
or
shl
xchg
xchg
push
adc
sub
out
scas
jp
subb
xchg
repz
mov
aad
mov
mov
mov
std
lret
or
push
add
std
mov
sbb
xlat
aad
loop
iret
lret
scas
xchg
or
cwtl
out
ror
es
aaa
les
push
or
xchg
nop
out
sub
incb
add
add
push
std
pop
in
add
dec
xchg
add
outsb
fmuls
paddusw
jmp
xchg
jge
or
shl
aaa
jg
std
ljmp
andl
push
cli
call
std
std
dec
and
push
mov
loop
incl
arpl
xchg
outsb
adcb
xchg
adc
inc
add
xchg
fwait
in
xchg
push
into
add
aad
lds
cmpsl
call
in
or
and
scas
shrl
sbb
addr16
xchg
jle
xchg
jge
andl
mov
push
jae
jb
sahf
scas
jl
pusha
out
push
out
js
or
jbe,pn
lret
adc
lea
jg
sbb
pop
push
data16
pop
pusha
mov
add
cmpsl
out
addr16
into
lds
pop
scas
arpl
jle
cltd
cmpb
push
cwtl
subb
jo
push
int3
shlb
fstpl
outsb
pop
ret
push
aaa
cs
sub
test
fldl
pushl
mov
xchg
testb
icebp
push
outsl
loopne
cmpsb
aaa
into
mov
cmp
pop
xlat
xchg
jecxz
stos
fwait
or
in
imulb
incb
movsb
nop
js
lock
mov
mov
in
bound
icebp
xchg
pop
pop
data16
in
xchg
je
push
mov
sarl
cwtl
popf
or
std
mov
int
pop
jge
push
mov
in
setns
data16
cmp
out
mov
push
movsl
xchg
ljmp
jge
mov
mov
mov
int
in
ficompl
jbe
jg
pop
push
mov
mov
pop
mov
out
movsl
xchg
xchg
scas
fsubrp
or
add
sbb
jbe
outsl
shrb
mov
jle
addr16
cmp
cmpsl
std
mov
das
pop
test
mov
pop
ss
out
pop
pop
cs
out
jno
sahf
xchg
leave
mov
out
outsb
xor
inc
push
jg
pop
insb
jecxz
mov
outsb
popf
xchg
mov
add
pop
ds
in
jle
lds
mov
push
pop
cmp
xchg
xchg
divl
scas
cltd
mull
add
lea
xchg
out
call
call
and
push
pop
pushf
test
mov
divb
lahf
mov
cmp
insb
pop
aas
inc
call
sub
ror
es
jmp
jae
mov
jg
add
loop
jbe
pop
pop
mov
xchg
ret
ud0
mov
mov
testl
fcoms
call
ficomps
mov
jmp
cs
lock
lds
xor
pop
add
lret
push
adc
aas
aad
ljmp
xchg
dec
pop
outsl
add
cmp
mov
mov
aas
pop
pop
push
and
push
dec
pop
push
pop
jo
push
call
adc
fistpll
lods
cmp
pop
rolb
ds
xchg
xchg
xlat
sub
mov
cmp
sub
lock
je
addr16
ds
std
pop
outsb
les
mov
pushl
xchg
jg
xor
mov
movl
stos
mov
das
push
fcoms
cmp
add
xchg
push
sbb
aaa
addr16
xorb
add
or
cmp
ja
imul
push
jl
aaa
mov
push
sbb
xchg
movl
push
mov
inc
or
mov
pop
pop
aaa
int
add
add
mov
jg
jle
jl
add
dec
inc
adc
pop
pop
cmpsb
xchg
loopne
es
scas
mov
outsl
push
mov
inc
je
lods
imulb
pop
pop
pop
fwait
in
shlb
into
xchg
add
or
add
sub
cli
shlb
jg
pop
mov
cld
xor
xchg
pop
out
in
jle
lock
mov
ss
ret
add
mov
addl
jae
lahf
push
movhps
push
push
push
out
dec
jg
pcmpeqd
cltd
int
pop
add
gs
loopne
sysret
out
adc
cmpsb
std
out
out
cs
popf
sub
jmp
mov
testl
mov
xchg
ja
js
iret
push
xchg
es
fdivrl
repz
jmp
lock
daa
mov
dec
addr16
add
add
fwait
stos
fs
add
lcall
cmp
cmp
cmp
dec
xchg
mov
in
mov
std
jmp
notb
rorb
out
add
pop
cmp
pop
pop
pop
lret
jo
push
sahf
aas
push
cs
out
hlt
mov
out
jg,pn
jne
pushf
add
add
adc
jo
shr
aas
insb
repz
pop
jmp
pop
dec
outsb
shll
fdivp
jle
xchg
add
mov
jmp
push
icebp
pop
cmp
shlb
jmp
test
popf
or
js
leave
out
stc
adc
cs
dec
iret
pop
out
lods
add
out
xchg
inc
pop
sbb
movsbl
mov
je
xchg
inc
not
repz
jmp
push
ljmp
cmpsb
xchg
push
xchg
mov
out
nop
add
xchg
psubusw
cli
mov
ficomps
aaa
mov
push
scas
sahf
addr16
and
jp
scas
add
xchg
xlat
popf
adc
cmpsl
hlt
not
data16
push
and
pop
push
add
int3
jle
add
cmpsl
mov
fldl
mov
imul
push
pop
into
in
pop
fisubs
mov
mov
dec
cmp
aam
iret
out
iret
adc
add
pop
or
int
pop
dec
pop
xor
insb
mov
add
pop
push
add
lods
rorl
xchg
mov
ret
add
out
and
repnz
imul
lock
popf
cmp
dec
fldcw
into
xchg
js
add
popf
xchg
ss
add
in
inc
test
cld
sbb
sbb
xadd
add
in
mov
sbb
in
add
add
cmp
cmp
pop
sysret
push
cmp
cmp
add
jg
dec
dec
dec
aas
pop
sysret
inc
dec
dec
dec
add
add
add
cs
orb
andb
or
jg
and
ucomiss
stc
addb
inc
jo
lock
add
cmovle
add
int
inc
mov
mov
sahf
out
add
push
xor
cmpsb
pop
mov
inc
sbb
pop
imul
xor
sub
out
xlat
pop
test
ss
add
stos
fwait
int
mov
xchg
push
inc
cmp
inc
add
data16
mov
movd
xor
out
push
xor
call
cmp
jo
lahf
outsb
sbb
out
push
xchg
add
mov
nop
dec
add
sahf
xor
mov
andb
es
or
not
rcll
lahf
pop
xor
or
addr16
add
repz
bound
add
icebp
pusha
mov
adcb
ljmp
popl
bound
add
cwtl
pop
cs
lock
cmp
call
int3
dec
enter
push
bound
pop
lret
lret
lret
cmovge
lret
mov
in
sbb
out
es
xchg
add
lock
in
mov
lret
in
pusha
adc
ficoms
pop
push
int
ss
add
mov
sets
out
and
jnp
cmp
testl
xor
movsb
ja
fnstsw
pop
out
push
mov
decl
imull
mov
or
mov
add
mov
fistpl
jbe
pop
loopne
and
adc
sub
add
push
scas
mov
out
pusha
aam
div
push
test
fadds
movl
pop
lock
and
or
cmp
push
sahf
pop
mov
ret
imul
out
sarw
cmc
add
and
outsb
dec
push
faddl
out
add
int3
loopne
xor
inc
add
mov
addl
fstps
vucomiss
jecxz
es
and
push
aaa
es
out
mov
stos
cmp
sahf
js
leave
imul
incb
scas
lock
mov
call
das
into
in
out
jmp
das
fs
shlb
mov
dec
lods
lahf
out
jo
adc
lods
jecxz
incl
and
xchg
icebp
decb
ds
je
fucomip
push
pop
int3
lock
mov
negb
mov
inc
mov
shrb
inc
push
jb
iretw
lret
loope
je
xchg
lcall
mov
add
movsb
sub
sbb
add
pop
dec
and
fmuls
xlat
sahf
jecxz
fstpt
push
iret
mov
jb
nop
ja
pushf
xchg
push
adc
mov
or
scas
add
add
data16
inc
add
jbe
ds
testb
jo
pop
push
pop
pop
sti
bound
mov
mov
mov
cmpsl
xchg
scas
shl
dec
out
out
add
mov
in
fcmovbe
in
push
imul
roll
aas
adc
cltd
mov
or
das
mov
out
mov
fldt
int
mov
shlb
add
mov
mov
subl
hlt
inc
dec
test
in
lahf
jo
push
and
sub
das
cmp
push
pop
loopne
push
sahf
out
out
pop
mov
repnz
ljmp
ret
sbbl
cwtl
std
insb
addr16
shlb
lcall
fsubrp
pop
sbb
adc
jbe
je
outsl
pop
push
xchg
adc
test
in
pop
pop
push
out
mov
pop
xor
incl
xchg
out
cmpsl
xchg
xchg
jno
pop
push
mov
cltd
incl
mov
mov
ret
sbb
lret
int3
lret
push
xchg
sbb
push
pop
aas
addb
aas
mov
jo
stos
out
imul
ljmp
rcl
out
pop
fadds
pusha
push
pop
mov
outsl
lcall
fstps
mov
push
push
ret
xor
data16
aad
aam
fldcw
cmp
hlt
repz
loopne
ss
sbb
inc
dec
add
movb
jmp
rclb
push
mov
push
ja
mov
mov
cli
mull
daa
outsb
push
mov
pop
mov
push
into
ljmp
repnz
nop
dec
mull
jo
add
scas
and
daa
dec
icebp
jo
arpl
decl
mov
push
xchg
jmp
imull
divb
movl
shlb
fldcw
lds
add
int
in
cmpsl
outsl
dec
xor
imul
jg
add
dec
jne
add
movsl
leave
inc
cmp
xor
paddusb
test
flds
scas
add
dec
leave
movsl
ficoms
dec
add
gs
add
loop
sahf
cmpsl
sbb
pop
add
push
xchg
out
add
into
shlb
pop
outsb
pop
add
jbe
push
pop
add
maxps
clc
lock
inc
or
inc
xor
push
adc
out
imul
iret
dec
test
fnstenv
jno
out
fisubs
adc
pop
test
adc
push
in
push
dec
sbb
int
push
in
idiv
mov
add
aam
add
mov
cmpsb
mov
in
cmp
push
push
add
outsl
repnz
add
add
and
inc
leave
mov
adc
out
sbb
mov
es
insb
push
adc
scas
outsb
dec
add
fidivrl
pushl
loop
es
cmp
add
outsl
sbb
mov
test
testb
xchg
xchg
out
dec
sbb
mov
xor
xchg
in
mov
mov
into
test
add
lret
mov
add
cwtl
push
add
pop
cld
insl
sti
shlb
xchg
scas
dec
cmc
loop
add
xor
fildl
dec
add
popf
js
ljmp
jbe
fisubs
insb
xchg
fldenv
sahf
lods
insl
add
jns
neg
imul
call
add
fmuls
lret
enter
pushf
orb
jle
cmpsl
dec
push
add
push
lods
fcomp
mov
xchg
gs
mov
or
mov
les
call
jl
bound
push
fcmovbe
mov
push
ss
add
push
mov
lods
loope
xchg
cs
ljmp
add
push
scas
pusha
xor
insb
fcomi
add
outsl
data16
xchg
insl
sbb
into
rorl
mov
repz
int
push
std
fisttps
cmpsb
mov
jbe
push
out
fists
lods
js
fidivs
adc
movb
xchg
cmp
sti
in
mov
sti
lcall
add
out
push
mov
nop
push
mov
into
fisubs
add
insb
fcoms
out
push
mul
imul
fildl
data16
inc
dec
mov
outsb
fdiv
push
add
fnstsw
mov
push
out
jo
stos
jbe
lock
rclb
jmp
scas
clc
mov
pushl
add
test
add
int
cs
mov
mov
add
xchg
outsl
add
aad
sub
fadds
mov
clc
in
stos
cltd
xchg
test
add
sbbl
notb
insb
or
not
out
sbbb
dec
sbb
xor
mov
push
shrl
out
mov
mov
add
mov
imul
fsubp
shll
lret
add
add
cltd
cmpsb
faddl
xchg
loope
xchg
xlat
mov
fcomps
lea
out
shrb
rolb
in
lds
ljmp
decb
fisttpl
mov
fidivs
div
mov
ret
mov
out
je
lods
pop
popl
jb
add
out
fcomi
ljmp
add
pop
aad
sahf
xchg
add
mov
push
fmull
push
xlat
nop
mov
fdivrs
lock
pop
roll
cmpsb
mov
imul
ds
mov
roll
jns
push
in
mov
pusha
pop
push
subb
movsl
out
jecxz
scas
pop
xchg
mov
in
pop
add
mov
add
test
mov
outsb
imul
aad
data16
mov
stos
push
std
add
test
xchg
mov
mov
jae
jp,pn
leave
mov
in
pop
mov
insl
push
cmpsb
mov
ficompl
ss
sub
push
hlt
lock
mov
es
test
add
push
pop
testb
dec
gs
pmulhuw
decl
mov
cmc
movsb
ret
pushf
mov
adc
fistpl
pusha
inc
stos
lcall
sbb
and
mov
fadds
xor
push
lock
pop
fs
fstpt
clc
mov
add
mov
aas
inc
push
popf
lcall
arpl
and
xor
aas
inc
repz
mov
ljmp
pop
fcmovne
outsl
add
ds
jb
push
int3
inc
fldt
cmpl
or
aas
push
je
or
push
out
jle
sbb
lret
stc
hlt
in
vfmsub231pd
sahf
push
aaa
jmp
inc
jmp
mov
lret
data16
in
in
jle
adc
sbb
stos
mov
pop
cs
icebp
fisubs
idiv
mov
cli
ja
xchg
in
popf
rolb
iret
pop
push
mov
repz
cs
aas
in
divb
ja
add
jmp
mov
sub
inc
push
mov
aas
imul
in
aas
fnstsw
add
ds
mov
cld
fstpt
mov
mov
idivl
cmp
adcb
mov
sar
mov
add
hlt
or
inc
jmp
mov
std
incb
ficompl
ret
pop
rolb
jg
aas
and
aam
nop
in
in
inc
jle
int3
sti
xlat
mov
ret
les
cli
jge
aam
add
add
std
out
push
les
aas
fistps
jbe
jge
nop
loop
hlt
les
pop
mov
into
jp
pop
idivl
sub
jge
lods
add
cmp
stc
xor
add
or
xor
cmp
add
enter
lahf
add
aas
adc
add
add
pop
jp
scas
xor
into
xchg
inc
add
imul
insb
outsl
je
jge
push
cmp
xor
cmp
inc
shll
jg
mov
imul
mov
enter
mov
lahf
in
xchg
outsl
dec
subl
jns
cmpsb
aas
add
popa
js
mov
outsl
xchg
inc
pop
dec
aas
and
jecxz
add
sbb
fwait
push
mov
incl
repnz
out
mov
cmpsl
enter
andb
or
out
jo
add
lock
sub
imulb
push
sysret
add
into
pop
sahf
pop
pushl
and
lcall
and
pop
mov
dec
add
dec
add
mov
add
scas
lds
push
cmp
leave
je
cmp
mov
mov
sbb
pop
lds
test
leave
jne
fstpl
adcb
inc
jle
xchg
ljmp
cld
ljmp
mov
fildll
xchg
push
pop
add
mov
and
data16
notrack
test
out
mov
icebp
filds
fdivrp
jecxz
push
dec
jg
fists
sbb
ljmp
shll
adc
ret
dec
add
aad
push
lds
mov
and
in
lds
jmp
push
stos
push
push
mov
mov
push
out
sarl
lds
icebp
les
xchg
mov
push
pushl
lock
call
ret
aas
add
out
mov
out
xor
scas
mov
fwait
insl
adc
int3
popf
push
int
iret
cmpsb
test
fnstcw
push
jl
ret
or
inc
mov
lret
push
iret
xchg
push
adc
xchg
push
ret
jle,pt
ja
shrl
incl
jmp
push
mov
inc
add
inc
outsl
push
fadds
or
shrb
xchg
xlat
mov
push
into
mov
fldcw
stos
in
mov
js
lcall
add
repnz
orb
int
pop
stc
aad
cli
fsubrs
mov
int
mov
fimull
mov
cmp
fldcw
pushf
insl
pop
add
icebp
scas
shlb
idivl
idiv
lock
jmp
stos
pop
ljmp
jp
push
int3
repz
push
repnz
loopne
lret
lret
cmc
into
xchg
xchg
clc
rolb
and
into
push
rcrb
jbe
aad
incl
jmp
mov
repnz
lods
aam
loop
insb
out
scas
imulb
mov
xor
les
lds
push
fcomp
pop
and
fcos
outsb
push
aad
insl
push
mov
not
sahf
not
lcall
movl
repz
mov
mov
mov
mov
divb
cwtl
fildll
repnz
jmp
imul
call
ret
sti
clc
jmp
xchg
outsb
push
ljmp
push
int3
fcmovnb
clc
sbb
clc
pmaddwd
xchg
push
sahf
mov
xchg
data16
fidivrs
fnstcw
idivb
xchg
xchg
pop
jmp
pop
sahf
sbb
into
loopne
fdivl
insl
add
incl
es
sub
cs
push
mov
pop
out
xor
mov
mov
loop
fnstsw
push
mov
cld
mov
loop
lods
pop
ljmp
add
in
imul
sub
push
popf
xchg
hlt
int3
nop
mov
dec
push
stos
inc
ljmp
fcomi
faddp
ffreep
push
loopne
lds
js
loopne
in
call
or
insl
mov
clc
ror
push
aaa
lcall
scas
shrb
movsb
mov
insb
inc
rcl
outsb
push
fsubl
ss
push
dec
outsb
fnstenv
add
fmulp
loop
lret
mov
fbstp
pop
jmp
mov
push
mov
push
orl
push
push
dec
repz
push
sub
fldcw
inc
pop
jle
cmpsl
loop
fsub
shlb
push
mov
mov
call
jb
jmp
fmulp
insl
addr16
into
push
out
shl
shll
fildl
scas
popa
mov
femms
in
fnstenv
iret
xchg
popa
roll
aaa
sbbl
fisubl
dec
lcall
jae
out
shr
aam
aad
insb
add
ss
call
lods
pop
push
bound
insb
out
scas
outsl
lea
xor
mov
lcall
test
jbe
subb
mov
scas
jns
sub
jne
icebp
jecxz
pop
mov
cmp
bnd
jmp
push
out
clts
dec
popl
mov
lahf
test
inc
mov
add
negb
fwait
jge
fdivl
cwtl
push
in
xlat
add
pushf
push
mov
mov
cmpsl
aam
adc
sti
repz
in
fdivrp
push
mov
iret
out
loopne
loope
outsb
cmc
in
decb
pusha
test
push
lods
pop
enter
punpckhbw
mov
cld
lock
mov
into
div
aad
pop
insl
imul
dec
mov
outsl
mov
imul
fdivp
in
in
out
out
fnstenv
call
outsb
ss
movsb
mov
pop
fs
aad
mov
scas
push
repnz
sbb
bound
mov
jns
scas
pop
mov
jg
jge
stc
cmc
fdivp
jmp
pop
in
lods
jne
iret
cmc
in
out
inc
sti
imulb
addr16
cmpsb
push
push
test
pop
pop
pop
bound
cmpsb
popa
das
scas
pop
ds
lret
push
mov
mov
or
jbe
pop
xor
data16
jbe
push
call
out
mov
sbbb
stc
fdivp
out
div
push
icebp
cld
ret
clc
bnd
jmp
mov
sbb
push
test
insb
pop
xor
mov
lret
mov
inc
adc
dec
insl
dec
adc
outsb
jle
les
xchg
pop
call
test
fldt
lahf
sar
push
std
cli
testb
sti
clc
shrb
insb
or
les
mulb
cwtl
cmp
cmp
test
push
mov
shufps
add
mov
insb
data16
or
mov
test
incl
or
or
incl
test
or
mov
mov
ljmp
sbb
out
cmpsl
push
stos
setl
and
mov
push
dec
testb
cmp
push
push
add
inc
pop
ljmp
rcr
call
popa
shl
inc
sarl
div
not
jb
div
std
mulb
push
ljmp
xchg
shlb
inc
incl
out
out
ds
lds
dec
mov
dec
lock
sub
pop
addr16
pop
add
incl
daa
daa
mulb
sub
fcoml
mov
ds
ljmp
mov
add
ljmp
push
or
sub
pop
pop
loope
out
aaa
add
lods
stos
stos
lcall
push
xlat
scas
or
into
mov
push
fisttpl
std
aaa
jmp
notrack
ljmp
cld
incl
xchg
daa
and
cwtl
sub
push
jmp
daa
test
imul
xchg
out
add
lods
dec
xchg
mov
into
adc
adc
mov
mov
aad
data16
fdivrp
fildll
cwtl
inc
call
xchg
dec
outsl
or
test
ret
add
fisubrl
pop
shll
mov
xchg
xchg
sahf
sbb
rcrl
lcall
lcall
add
xchg
push
jmp
inc
mov
jne
std
fnstenv
jno
jl
push
fbstp
loopne
add
push
xchg
inc
mov
fmull
cld
ds
cmp
xchg
jmp
fsubrl
push
sar
stos
jle
cmp
jno
add
fldcw
mov
xchg
add
sarb
and
or
es
pop
adc
add
fwait
pop
inc
add
pop
loopne
mov
mov
push
add
call
nop
xor
int
add
insl
imul
dec
add
mov
add
stos
inc
mov
es
loop
pop
push
push
lds
ljmp
arpl
movsb
push
xchg
imul
int
xor
lcall
or
out
mov
add
add
lods
adc
je
outsb
adc
lock
into
push
out
fmull
outsb
imul
lock
inc
mov
divl
jl
inc
inc
sarl
mov
inc
pop
lods
pop
cmp
subl
cs
push
mov
jle
in
mov
aaa
faddl
test
mov
aad
std
fsubl
ds
ffreep
mov
inc
jg
in
repz
or
jo
hlt
shll
mov
jmp
pop
cmpsb
fcmove
xchg
xchg
mov
mov
stc
scas
or
inc
lret
inc
js
lret
mov
mov
mov
sbb
jecxz
aam
dec
sbb
and
xchg
stc
aam
mov
in
imul
aad
fidivrl
push
fdivr
imul
daa
pop
adc
cmp
ja
dec
push
lcall
rorb
xchg
inc
in
popf
lock
clc
es
fmuls
jmp
mov
out
mov
fadd
lods
mov
mov
mov
decl
jle
test
shll
and
and
fwait
dec
in
sti
xchg
jo
adc
push
lock
paddsw
xchg
shll
pop
in
xchg
jbe
js
pop
addr16
jg
mov
mov
mov
scas
bound
outsb
sbb
test
shlb
pushf
shll
mov
loope
shlb
add
fsubp
movsb
dec
sub
inc
adc
mov
stos
push
shlb
pop
inc
jmp
ds
int3
outsl
push
jg
xchg
sub
clc
out
jle
mov
push
movsl
lods
push
xchg
push
xchg
push
cmpsb
les
jle
add
mov
add
lcall
sub
in
sbb
lret
rcl
popf
jbe
mov
pop
sahf
cmpsl
pushf
xchg
inc
jbe
call
pop
je
insl
add
aas
loop
decl
popf
sahf
sahf
rcrl
lock
mov
jp
add
mov
lods
inc
sarb
addb
insl
ret
sar
ja
lods
inc
fdivs
mov
add
dec
sbb
add
cwtl
pop
sbb
jae
add
or
dec
cmp
repz
fs
inc
adc
pop
push
sbb
fwait
jp
jns
mov
int3
ljmp
imul
rol
inc
js
imul
inc
cmpl
push
push
push
mov
jmp
ret
decb
fwait
sahf
ljmp
jmp
and
and
add
shrl
push
push
aaa
inc
ljmp
push
push
lock
call
jno
mov
int
jmp
mov
jns
push
mov
mulb
adc
ljmp
pop
pop
jl
push
decl
push
ljmp
pop
mov
push
jecxz
jecxz
scas
dec
dec
xor
jp
push
and
jmp
and
or
pop
jg
sbb
pop
adc
dec
dec
mov
int
push
out
imul
xor
mov
sub
insl
pop
rorb
jp
jb
cs
aas
decl
adc
call
add
jns
adc
and
call
adc
xor
mov
push
decl
add
and
daa
pop
pop
pop
rcr
lcall
incl
jo
ljmp
imul
filds
mov
sub
inc
cmp
decl
push
ud0
pop
filds
xor
aam
lahf
jl
push
jbe
jne
ss
daa
jmp
xchg
add
inc
rclb
fisubrl
daa
or
and
pop
ljmp
loop
in
scas
mov
fwait
ja
jnp
ljmp
jl
jge
xlat
adc
adc
sbb
call
adc
push
mov
subl
or
lds
jge
in
pop
dec
sub
mov
pop
enter
cwtl
and
and
push
add
sub
insl
lds
and
and
add
insb
outsb
outsl
ficoms
cmp
shll
testl
sub
jmp
add
xchg
push
sti
or
xchg
rcll
lahf
je
jl
lahf
add
push
dec
dec
jle
adc
out
ret
jge
push
or
jle
and
fimull
push
bound
fwait
jle
fildll
sti
je
notb
mov
pop
in
clc
cwtl
mov
push
jbe
and
sub
decl
add
pop
lock
or
stos
jp
adc
call
add
mov
mulb
jnp
ljmp
cmp
clc
mov
and
push
out
xchg
mov
test
cmp
ss
addr16
xchg
mov
mov
xchg
and
cmpl
mov
fnstcw
mov
ljmp
or
decl
or
into
xor
js
push
and
pop
pop
pop
incl
addr16
int
loope
bound
xchg
add
cmp
and
xchg
push
popa
add
dec
ljmp
cs
int
pusha
sub
enter
cld
jge
jg
cmp
push
ljmp
popf
outsb
add
adc
push
or
aaa
loopne
rcr
ss
jg
push
in
clc
fnstsw
jbe
pop
popa
xchg
test
out
xor
sub
sbb
ja
dec
xchg
addr16
int
cs
cmp
lea
call
cmp
push
das
lcall
add
rcrl
xor
push
es
es
push
xor
ja
outsb
mov
add
push
jmp
pop
ret
jle
xchg
pop
data16
push
push
dec
idiv
dec
add
dec
xchg
call
xchg
xchg
xchg
out
add
divb
insb
add
xlat
out
dec
mov
stos
test
push
jle
push
push
mov
jp
push
mov
or
sbb
jge
sbb
fcoms
xor
xor
fldcw
push
popf
xchg
xchg
sbb
jbe
cmpsb
mov
cmpsb
push
pop
cli
or
push
push
ffree
loopne
mov
outsl
pop
pop
pop
pop
pop
arpl
add
loopne
jp
xchg
pop
scas
cwtl
lret
ss
jl
insb
xor
push
jmp
outsl
into
sub
xchg
pop
movsl
je
jae
addl
mov
insl
sub
xchg
shl
lcall
daa
add
jae
testb
imul
dec
add
mov
out
add
rcrl
pop
andb
cmp
ds
sbb
sbb
or
pop
mov
out
push
jbe
fdivrl
dec
ds
sbb
inc
xchg
lcall
int
push
pop
add
daa
or
test
addr16
add
pop
xlat
cmp
cli
pop
add
pop
push
push
push
cmc
inc
rorb
jp
push
mov
lock
dec
idiv
xor
xor
jle
pop
inc
ret
or
push
ficomps
jo
les
jmp
cmp
inc
repz
xor
out
and
pop
jmp
in
mov
sarb
fimuls
out
jl
daa
daa
and
andb
add
pop
stos
jle
sbb
ss
pushf
sub
sub
sahf
es
sbb
cmp
or
jge
inc
mov
inc
sub
xchg
sub
and
lret
lock
push
loopne
adcb
incb
add
jl
sub
or
cmp
sbb
orb
xor
sbb
xchg
add
pop
add
adc
push
cmp
outsl
xchg
addl
mov
lahf
or
je
add
jl
add
dec
add
inc
add
call
xchg
dec
add
mov
pop
add
cltd
popa
add
stos
jle
mov
mov
mov
ret
ret
ret
les
mov
movb
fucomip
lret
outsb
add
xlat
add
add
out
add
ljmp
in
jmp
lock
out
add
lock
push
lock
repnz
mov
adc
adc
adc
and
sbb
stc
decb
adc
adc
sbb
pop
adc
sbb
push
enter
aas
adc
pop
call
sbb
fidivrl
or
pop
add
or
stos
or
sbb
divl
or
pop
push
add
add
sbb
pop
pushf
push
sbb
pusha
fucom
clc
aas
push
lock
add
outsb
sbb
inc
inc
iret
xor
mov
pop
push
enter
dec
mov
iret
add
insb
add
aad
sub
add
push
jnp
stos
push
push
and
into
cmc
inc
popa
movsl
push
out
scas
cmc
ss
jnp
mov
ljmp
jmp
jo
pop
mov
addb
and
repz
add
fdivl
hlt
mul
fcmovnu
push
in
push
inc
in
test
jp
push
out
push
into
out
lcall
mov
cmove
or
leave
leave
mov
pop
icebp
cmpsb
in
out
call
ljmp
in
fcmovu
fldl
jmp
ret
call
push
pop
in
pop
jmp
lods
stos
push
pop
jge
xchg
jbe
or
cmp
push
cmpsl
push
or
jbe
sti
ds
mov
rclb
neg
roll
push
test
cli
incb
enter
pop
lock
into
lds
or
push
jg
int3
ss
or
cmp
arpl
mov
shll
roll
fldl
filds
lret
jle
inc
lods
add
mov
ds
jmp
mov
xlat
cmpsb
outsb
mov
add
sub
inc
dec
sahf
sub
mov
call
cmpsb
loopne
sub
les
add
push
scas
scas
outsb
imul
aas
mov
shrb
jg
xlat
es
jnp
sarl
dec
fimuls
sbb
push
sbb
mov
sub
pop
int
mov
cmc
mov
js
fcmovnbe
push
ret
shlb
cmp
inc
push
popa
das
int3
push
nop
add
and
jle
aam
aam
cs
rol
loopne
or
repnz
das
push
adc
mov
push
scas
inc
rcl
push
repz
clc
dec
dec
mov
rcrl
loopne
push
aam
das
les
fcmovnu
fidivrl
scas
pop
pop
inc
into
jmp
ror
call
or
xchg
or
or
repnz
add
add
cmp
enter
mov
jle
movsb
out
mov
mov
add
mov
mov
loopne
xchg
sahf
jg
mov
xor
xor
pop
xchg
jg
sub
mov
add
add
lock
pusha
mov
mov
jo
shlb
mov
inc
mov
mov
lds
mov
cwtl
cltd
cltd
movl
in
dec
xlat
xor
push
xchg
push
out
add
mov
out
jne
mov
sahf
push
aam
ljmp
cmp
push
push
ja
cli
jno
test
push
xchg
or
mov
cmpsl
cwtl
mov
lds
adc
add
pop
and
cmc
cs
or
mov
ss
cmpsl
rol
loopne
dec
daa
iret
out
rcr
int3
iret
sahf
push
inc
pop
hlt
jbe
sub
lcall
pop
ret
xlat
add
hlt
lock
ljmp
mov
mov
je
cmpsb
sbb
xchg
mov
mov
xchg
push
out
and
pop
push
lcall
stc
outsb
mov
outsb
mov
mov
popf
adc
pop
dec
std
jo
lods
and
clc
mov
dec
sahf
popf
sahf
xchg
sub
sub
adc
mov
xchg
sub
push
mov
mov
xor
in
outsb
adc
lock
clc
data16
ret
push
pop
xchg
sub
ljmp
adcb
pop
sbb
add
notb
roll
add
in
cwtl
mov
adc
mov
fcmovnu
fdivrs
mov
rcl
mov
sahf
bswap
add
icebp
jmp
repz
invlpg
incl
jp
pop
mov
push
ja
sbb
addr16
loope
mov
xchg
jg
ljmp
test
add
mov
sub
test
data16
dec
inc
sbb
ds
fcmovu
jbe
out
cmpsb
cmpsb
movsl
inc
orb
iret
jg
pop
mov
in
push
scas
mov
in
es
add
rcl
cli
imulb
dec
data16
into
jle
lock
fstpl
inc
push
xchg
push
cmpsl
into
push
pop
sbb
inc
cmpsl
jg
pop
mov
add
mov
int
pushl
out
decl
ds
cs
ljmp
pop
or
jbe
hlt
cmc
mov
jmp
roll
sub
cmc
out
mov
test
scas
cmpsb
pop
lahf
cmpsb
shr
mov
xchg
jbe
sbb
fcomps
sahf
add
pop
rcll
jg
outsb
stos
stos
lods
jg
and
fsts
fmuls
add
jg
subl
hlt
xchg
outsb
addb
es
mov
add
jmp
adc
inc
add
into
stc
dec
in
dec
hlt
testb
icebp
outsb
push
ds
aad
call
sarb
jbe
mov
iret
xchg
xchg
xchg
lock
scas
scas
mov
repnz
in
in
push
lods
sub
aad
ret
enter
mov
or
pop
ds
mov
into
cmpb
lock
cld
into
jb
into
jo
imul
jb
out
in
jle
dec
loopne
mov
mov
jecxz
or
jg
fmuls
movsb
lods
insb
stos
decb
mov
lods
shlb
pusha
into
mov
xor
in
mov
pushw
mov
out
adc
inc
push
orb
mov
hlt
in
jmp
imul
push
fisubrs
push
push
push
cmpsl
dec
fisubrl
pop
mov
jmp
ret
add
and
pop
fcom
aad
fcomps
cmp
idiv
rcrb
xchg
cmp
push
out
arpl
or
mov
aas
adc
fcom
idivb
enter
out
int
sub
mov
push
pop
jg
xchg
mov
inc
mov
jg
sbb
cmc
mov
mov
scas
push
sahf
jg
jecxz
aas
fcos
sti
stc
sti
mov
sub
mov
outsb
push
mov
jnp,pn
inc
xor
xor
cmc
dec
in
sbbb
sahf
mov
jg
aas
mov
stc
idiv
ljmp
insl
inc
nop
pop
dec
mov
in
cs
sub
push
sub
ds
jle
push
add
in
cs
inc
adc
push
jg
loope
or
negb
jb
leave
xchg
mov
iret
nop
inc
push
mov
xor
xor
orb
jg
mov
adc
add
into
ficompl
jmp
push
mov
lret
pop
push
jg
loope
ja
jns
rcrb
mov
inc
fwait
cs
movb
fiadds
sbbl
jge
out
cs
enter
mov
jmp
out
add
add
pop
add
rcll
loop
jge
push
jae
inc
lahf
push
fistpl
mov
push
push
sahf
mov
mov
cmovp
lods
fidivl
xchg
ss
push
jle
pop
push
pop
pop
push
callw
push
into
ret
jo
add
jmp
fdivp
icebp
hlt
mov
push
jecxz
jne
fildll
fisubrs
outsl
xchg
pop
call
xchg
pop
xchg
pop
call
xchg
pop
ss
sbb
push
push
ja
test
jle
out
loop
sahf
lods
cmpsl
aaa
les
movq
push
inc
and
in
jle
dec
call
jmp
movsl
jge
in
mov
scas
jmp
mov
pop
mov
adc
jo
fwait
scas
mov
sub
push
cwtl
add
mov
ljmp
mov
push
jg
aas
in
jmp
jmp
in
mov
add
ljmp
rcrl
mov
push
cmpsl
push
movsb
outsl
ds
pop
outsl
pushf
gs
jbe
div
xchg
add
insb
cli
nop
daa
in
jmp
push
stos
jge
pop
test
repnz
js
mov
mov
pop
dec
xor
mov
xchg
rorb
jbe
dec
mov
jg
idiv
mov
cs
jg
dec
mov
xchg
fdivrl
call
lods
cwtl
push
cmpsb
xchg
mov
fdiv
or
xchg
cmp
xchg
cs
xchg
push
int
mov
mov
scas
fldl
inc
sub
mov
mov
xlat
xor
push
xchg
mov
push
xchg
jne
imul
or
rcrl
mov
scas
mov
jbe
xlat
push
test
or
and
push
pop
mov
or
mul
mov
mov
adc
sti
and
test
pop
out
push
scas
push
testl
fldl
aad
push
pop
push
lock
xchg
jg
mov
cmp
cld
sti
cld
jg
cmpsl
jo
stos
xchg
data16
cmpsb
mov
add
cmpsb
ds
jg
mov
mov
mov
fildl
pop
int3
mov
mov
out
fiaddl
add
mov
std
shlb
addl
add
sbb
addb
fmulp
pop
subl
mov
hlt
sub
loope
sbb
mov
outsb
aam
stc
push
psubd
push
ja
test
mov
in
call
into
cmpsb
ficoml
sbb
mov
mov
lret
outsb
adcb
mov
add
mov
stos
loope
mov
jo
inc
inc
jmp
adc
adc
jle
sub
cmp
jg
in
sti
outsl
and
fsubp
xlat
xlat
ja
sarb
add
pushl
pop
add
gs
aam
cld
out
call
out
stc
fnstsw
loopne
in
in
out
out
loop
aam
ror
rolb
jo
xlat
cld
and
mov
pop
fdivrp
incb
push
push
imul
lcall
add
xchg
xchg
xchg
jg
pop
xchg
in
in
or
cwtl
pop
mov
loopne
add
push
pop
int
dec
pusha
icebp
pop
dec
adc
dec
pop
pop
push
push
iret
pop
call
data16
adc
sub
or
js
pop
iretw
out
or
add
add
xor
cmpsb
inc
aas
fldl
dec
add
cmp
inc
inc
mov
fcompl
or
in
data16
sub
clc
xchg
xchg
lret
jbe
pusha
mov
ja
xchg
push
aaa
pop
mov
divb
das
pop
clc
ja
adc
pop
pusha
imul
xchg
es
pop
data16
data16
xchg
mov
mov
pop
xchg
or
xchg
test
push
inc
cmpsl
mov
pop
pop
pop
mov
mov
pop
pop
and
dec
xor
push
pop
push
mov
in
stos
or
xchg
mov
sbb
je
add
rol
cmpl
inc
xchg
dec
into
fadd
popf
cmp
outsb
jbe
jmp
divl
or
ja
jle
mulb
push
lock
imul
outsb
xor
testl
int
xor
dec
xchg
xor
xchg
outsb
outsb
jle
jbe
data16
in
jo
fistpll
shlb
pop
out
fs
pusha
mov
push
aas
pushf
xchg
pop
aad
addr16
out
les
out
in
xchg
mov
into
outsb
jl
adc
mov
xchg
cmp
jnp
pop
jnp
in
jle
pop
outsb
jle
add
test
data16
jl
js
mov
data16
xchg
add
in
outsl
testl
xchg
lcall
mov
out
mov
or
mov
scas
nop
fmuls
les
push
addr16
push
push
mov
xor
jle
sub
push
mov
enter
out
js
or
pop
push
out
mov
inc
das
out
into
pop
outsb
insb
push
push
and
in
sbb
jb
call
out
testl
in
call
mov
cs
pop
inc
into
jl
jbe
xchg
loopne
outsb
das
pop
in
jbe
pop
out
and
add
cwtl
push
sbb
outsb
mov
sahf
das
push
xchg
lods
inc
mov
js
mov
mov
ja
mov
out
out
pop
rcr
cmp
out
lock
imul
in
jle
out
ja
add
int
mov
and
fs
mov
sub
sarl
adc
inc
mov
pop
cs
fs
and
aad
stos
jmp
mov
xchg
inc
jo
out
mov
loopne
pop
dec
pop
mov
pop
adc
ja
loopne
cld
clts
add
adcb
cmp
add
loopne
cmp
cmp
clc
cld
incb
rolb
dec
pop
jmp
incl
cs
test
and
dec
aas
jg
lcall
xchg
into
or
pop
test
jnp
arpl
adc
sbb
push
addb
or
ja
into
mov
sbb
pop
push
ja
in
ss
cld
push
push
loopne
add
mov
xor
addb
sbb
cmp
pop
sub
aas
mov
scas
xor
add
cli
rcrb
push
cmp
sbbb
ror
fisubs
push
push
jecxz
jbe
add
ds
decl
push
add
subb
testl
jbe
test
mov
idivl
andb
test
mov
push
outsl
jb
shll
sub
outsb
jg
fldl
xchg
jle
mov
inc
stos
shlb
xchg
lock
pop
imul
jle
xchg
add
stos
push
aas
outsb
js
jg
pop
push
mov
pop
into
push
push
add
pop
cmc
push
and
cli
js
lock
sahf
ja
jle
jnp
clc
mov
pop
push
pop
psraw
jbe
or
add
cmp
movsl
jno
test
clc
add
pop
gs
movsb
xchg
paddb
loopne
add
add
out
fcompl
addb
adc
sahf
out
add
pop
shl
in
fnstcw
push
add
sbb
loopne
lock
mov
dec
dec
iret
adc
xor
cmp
jle
or
pop
sub
fs
jbe
clc
adc
idivb
dec
fsubrp
test
mov
xchg
cmp
jbe
inc
cmp
or
ds
pop
pop
or
repnz
mov
lcall
add
sub
push
fsubrs
in
movl
add
add
inc
clc
inc
ret
leave
rolb
pop
dec
or
addr16
push
jno
jg
rcll
int3
jb
imul
add
es
jbe
cld
insb
jp
add
jnp
lcall
insw
mov
outsb
cmp
jb
ss
jge
push
jg
cmp
pop
imul
jl
inc
add
inc
push
arpl
bound
imul
mov
outsb
jne
add
push
idiv
out
add
push
add
or
xchg
push
std
cld
jg
add
jp
add
jne
add
mov
add
adcl
cmpsb
mov
mov
fistl
mov
push
mov
push
mov
xchg
fsubrl
mov
movsb
test
push
mov
insl
mov
test
das
outsb
mov
add
mov
lds
test
push
int
mov
sahf
push
shll
shlb
fsubrs
or
fimull
mov
and
mov
push
test
xchg
mov
fwait
lahf
pop
out
mov
idiv
dec
nop
pusha
mov
andb
popf
fdivrs
scas
int3
xchg
sahf
arpl
xchg
mov
sahf
xchg
jnp
movsl
xchg
xchg
pop
mov
inc
push
jle
mov
mov
rorl
les
lds
out
dec
push
add
imul
lret
ja
add
test
push
add
mov
iret
lea
sbbb
nop
fwait
or
push
pop
add
xchg
push
pushf
lcall
cs
xchg
ds
sub
jge
xchg
add
cmpsb
ds
movsb
push
sahf
cmpsl
add
lcall
popf
stos
cmpsl
stos
add
lods
add
mov
push
stos
lods
add
mov
lods
int
mov
into
data16
xchg
insb
jg
mov
fmulp
mov
mov
mov
mov
insl
sti
sbb
inc
cmpsl
ret
lret
scas
push
shll
mov
std
rol
fwait
add
lds
fcmovne
pushf
add
fiaddl
iret
out
scas
mov
add
fsubs
stos
rolb
lds
shll
sti
movl
mov
push
rcl
fildl
loope
fadds
jp
sub
in
add
in
ss
add
hlt
cmc
hlt
ljmp
mov
incl
or
sbb
prefetcht1
push
clc
mov
push
sbb
or
dec
push
jp
ljmp
cmpsl
ljmp
add
or
mov
jl
cmpsb
andl
incl
pop
or
sbb
mov
and
xchg
jns
mov
insb
and
sub
push
adc
mov
xchg
or
sub
outsb
mov
outsb
imul
das
and
mov
sbb
imul
lcall
call
xorl
lea
cmp
cmp
inc
xchg
dec
xchg
mov
sub
cld
outsl
pop
dec
inc
lcall
dec
dec
inc
inc
inc
inc
xor
test
and
dec
and
xor
popw
fisubrs
bound
dec
aaa
and
cmp
pop
ja
and
leave
or
pop
das
inc
clc
pop
add
push
add
lds
add
fwait
mov
mov
xchg
add
adc
add
out
push
mov
adc
adc
pop
sahf
out
sahf
sub
sub
daa
and
out
sbb
or
push
pop
add
adc
jg
jg
dec
dec
push
ja
jne
xchg
xchg
xchg
jb
test
lahf
mov
mov
lcall
outsb
outsb
insl
test
xor
lds
and
sbb
pop
je
daa
add
cmp
incl
imul
pop
div
in
lods
cld
repz
enter
xor
sbb
mov
ljmp
incb
idiv
call
push
out
xchg
test
mov
and
lahf
and
aas
pop
cmpsb
adc
lcall
mov
andl
jecxz
iret
enter
es
mov
fst
mov
ljmp
lcall
or
fnsave
jo
iret
fdiv
loope
push
adc
pusha
mov
mov
add
outsl
adc
lret
xlat
ljmp
push
push
push
ja
xchg
sub
sbb
dec
dec
pop
adc
lcall
mov
loope
lahf
out
rcr
lret
ret
test
jp
jnp
and
incl
call
and
imul
stos
call
inc
ljmp
adc
inc
add
xchg
xchg
xlat
call
inc
pusha
mov
jg
push
daa
shrb
sarl
insb
and
push
push
jo
das
jg
out
push
daa
mov
lcall
loop
rol
mov
movsb
mov
dec
ljmp
sub
popa
outsb
jb
inc
decl
jmp
jae
inc
ljmp
fdivr
js
pop
push
test
push
dec
lcall
push
adc
sub
in
jp
andl
rorb
loopne
sbb
jg
fcoml
adc
mov
lret
inc
mov
repnz
fists
in
stos
rcr
lcall
cmp
gs
pushl
aaa
jle
andb
scas
pushf
lret
adc
fcomip
mov
ljmp
sub
imul
xorb
outsl
aaa
data16
fidivs
dec
je
incl
loopne
enter
push
jmp
add
mov
lret
dec
pop
pop
adc
mov
add
mov
mov
xchg
dec
jecxz
or
adc
out
lock
scas
adc
test
push
mov
popa
mov
test
call
cli
outsl
ss
mov
aad
inc
inc
pop
lods
lods
stos
movsl
mov
mov
mov
ljmp
pop
scas
jne
clc
ret
sbbb
decl
adc
xchg
sbbl
mov
xchg
lds
cmpsb
push
jmp
cmpl
fstpt
sbb
push
inc
add
or
mov
arpl
rorb
mov
mov
push
ror
ds
mov
inc
into
cmc
push
leave
jmp
decl
adc
aas
scas
add
mov
xchg
nop
outsb
jns,pn
jno
jle
adc
jae
out
mov
decl
adc
pop
pop
inc
xchg
js
xor
jo
jb
insl
cvtpi2ps
mov
jp
ds
jle
fcmovne
jg
int
pop
mov
arpl
scas
mov
jg
xchg
add
bound
mov
scas
or
es
mov
rorb
sbb
scas
jo
cmp
jle
fbstp
mov
es
int3
rcl
pop
xchg
push
les
fs
decl
sbb
into
imul
xchg
nop
mov
push
and
sbb
jno
popl
daa
cmpl
add
cmp
sbbl
jo
jle
idivb
jl
jae
orl
outsb
jl
jle
enter
sub
mov
cli
stos
sahf
jne
das
add
aas
pop
addl
mov
scas
scas
mov
pushl
jp
lods
lods
xchg
mov
mov
pop
in
jbe
fisttps
aad
int
fdivrs
shll
or
mov
sub
ja
jle
xor
jp
pop
jl
incl
mov
sbbl
jg
jnp
jae
or
jge
jle
dec
test
mov
jl
fld
mov
cli
inc
bound
fwait
jno
pop
in
clc
pop
push
cmpsb
daa
xchg
xchg
xchg
jecxz
lcall
leave
adc
lods
push
out
test
cld
pushf
mov
mov
xchg
icebp
ljmp
scas
lods
cmpsb
xchg
shlb
pop
xchg
orb
mov
xchg
xchg
es
jl
js
and
mov
mov
and
jbe
xchg
push
cmpl
subl
push
addl
lcall
adc
mov
lea
jge
outsb
ret
cmp
dec
test
insb
popa
push
popa
inc
xor
dec
mov
mov
into
mov
or
mov
xchg
test
mov
push
lods
std
jg
mov
cltd
xchg
int
mov
pushw
fildll
xchg
lcall
push
mov
outsb
push
ss
jnp
sbb
jne
subb
andl
push
loop
movsl
loopne
test
xchg
test
andl
andb
mov
scas
incl
rcrb
aas
lcall
jle
xchg
fs
aad
mov
and
pop
insb
out
cltd
decb
push
sysret
pop
insb
ds
mulb
scas
mov
clc
jg
mov
mov
popf
mov
sahf
xchg
mov
scas
data16
fwait
mov
cltd
push
mov
xchg
xchg
cmp
out
jbe
jg
sbb
xorl
xor
sbb
cmpl
and
nop
mov
xchg
and
subl
mov
jg
aad
jns
mov
dec
addb
dec
jle
nop
pop
idivl
add
dec
movsl
lea
add
inc
ret
xchg
mov
xchg
xchg
aam
mov
cmp
xchg
cmp
test
movsb
xchg
movsb
jle
sahf
xchg
mov
pop
jne
insb
dec
xchg
out
mov
xchg
int
xchg
lea
outsl
jp
pop
shrb
jbe
ja
push
jl
mov
int
xchg
mov
into
mov
mov
sub
and
sub
push
xchg
push
pop
mov
addb
mov
lret
mov
sub
test
mov
cmpsb
push
stos
into
loope
ja
push
push
stos
shll
mov
push
and
mov
sub
stos
xchg
mov
aam
ja
mov
xchg
xchg
xchg
sahf
push
xchg
add
pop
hlt
mov
adc
push
jl
mov
or
xchg
push
fwait
mov
call
xchg
mov
mov
mov
faddl
mov
cs
jle
out
loopne
subb
aam
call
xchg
xchg
aad
mov
and
jp
mov
jg
pop
mov
push
mov
mov
lods
out
test
shrl
mov
pop
sub
sub
jae
mov
push
cmpsb
xchg
cwtl
shlb
fidivl
ja
mov
ss
add
sahf
incb
pop
mov
movb
mov
jle
xchg
push
dec
xchg
push
mov
xchg
rcrl
xchg
mov
mov
andl
jle
mov
mov
push
inc
jle
jle
sarb
int
fsubrs
outsb
insb
outsb
arpl
mov
push
outsb
mov
mov
mov
nop
xchg
cmc
dec
mov
shll
test
stos
nop
push
scas
lea
add
push
cmpb
data16
fbstp
lret
mov
movsl
jo
aad
push
mov
xchg
jg
xchg
add
mov
push
test
push
or
push
movsl
xchg
pop
mov
lahf
fwait
pop
mov
push
jbe
and
mov
aad
push
insb
push
xchg
outsb
andl
nop
jg
mov
js
xlat
into
mov
pop
outsl
outsb
outsl
aas
mov
popl
pop
mov
aad
jnp
imulb
pop
pushf
fwait
mov
mov
pushf
cltd
xchg
movsb
xchg
hlt
hlt
pop
and
lds
shlb
adc
xchg
sbbb
fsubrs
jg
fwait
test
shrb
push
lods
cwtl
push
ljmp
mov
xchg
mov
jbe
sub
xchg
xchg
mov
outsb
decl
incl
mov
aaa
xlat
add
xchg
xchg
aad
outsb
pop
clc
js
mov
push
scas
sar
inc
fldt
pop
cwtl
mov
lcall
sub
mov
jmp
clc
cs
pop
sar
or
xchg
xchg
jle
mov
subl
mov
loopne
fwait
mov
repz
cmpsl
ret
cmpsb
xchg
xchg
jbe
lock
cwtl
mov
inc
mov
test
lock
mov
xor
cmp
insb
mov
scas
lcall
fsubs
scas
idivb
cmpb
push
push
stos
decb
adc
xor
ret
loope
sahf
jg
in
icebp
sbb
in
insl
jbe
push
sahf
iret
data16
test
scas
pop
mov
outsb
popl
sahf
mov
adc
push
mov
push
pushl
cmpsl
cmpsb
xchg
push
mov
mov
jle
call
push
jge
inc
xor
or
mov
call
lret
mov
sub
xor
jbe
lods
stos
push
scas
mov
lods
mov
lahf
xchg
push
sahf
mov
fdivrs
or
pop
lahf
xchg
out
mov
negb
sbb
out
insl
sahf
sbb
mov
mov
ss
push
sbb
xchg
stos
xchg
lods
stc
lahf
inc
mov
lcall
aaa
add
movsb
test
jne
sub
ror
mov
sbb
and
jb
jbe
mov
mov
aad
pop
add
mov
jnp
ss
loopne
insb
push
push
cltd
daa
mov
sbb
es
xchg
push
stos
shr
pop
xchg
repz
push
xchg
sahf
lods
dec
jnp
add
mov
rol
lock
mov
shl
pop
fwait
xchg
mov
cmpsb
imul
adc
mov
cs
incb
jle
stos
mov
aas
xor
rol
aad
add
add
jg
mov
mov
mov
jb
xchg
pop
push
xchg
mov
pushf
cmpsb
adc
lahf
adc
das
imul
jp
cmpsb
cld
pop
lods
pop
sub
movsl
xchg
jbe
sbb
and
push
mov
lahf
cmpl
xchg
pop
stos
jo
fs
movsb
mov
fwait
aas
scas
pop
jl
insb
stos
jle
mov
jb
lods
cmp
push
iret
lds
ljmp
jnp
stos
cli
pop
les
lock
push
dec
sahf
mov
mov
scas
js
rorl
rcll
outsb
push
lahf
and
les
imul
ret
cwtl
dec
xchg
xchg
out
jbe
cltd
push
pushl
xchg
and
xchg
dec
inc
mov
popa
nop
aam
jecxz
inc
xor
mov
pop
fidivrs
adc
jae
sti
xchg
aaa
inc
cltd
daa
stos
stos
stos
push
jg
aaa
push
mulb
jg
cmp
add
ror
decb
mov
push
outsb
shll
fisttpl
movsl
push
cmpsb
enter
mov
lahf
ss
sahf
test
cs
and
mov
int
mov
mov
sbb
dec
cltd
test
mov
shll
das
add
push
push
sub
fwait
push
pop
xchg
rorb
incl
sbb
movsb
jecxz
mov
xor
pushf
and
jg
loop
es
mov
lods
leave
mov
xor
in
jb
idivb
popf
ret
mov
jbe
movsl
leave
cmpsl
push
enter
lods
pop
fs
push
lret
jl
lds
or
dec
mov
mov
pop
xchg
and
inc
mov
jp
ds
jg
addb
jle
push
in
fldt
mov
xchg
bound
add
mov
lods
lods
lods
fbstp
jp
int3
cmpsl
shrl
hlt
jmp
push
pop
fdivl
test
lcall
xchg
xchg
cmp
inc
lds
ror
jle
shll
sahf
lods
mov
push
je
outsb
lret
mov
xlat
rcrb
pop
fldcw
in
push
push
mov
data16
loope
cmpsb
xchg
fwait
mov
mov
and
shrl
ret
mov
cmp
outsb
sub
inc
mov
xchg
xchg
nop
and
jle
stos
stos
or
mov
scas
lea
aaa
sbb
pop
pop
pop
xchg
ficoms
pushf
xorb
fwait
int
ret
cmp
cmpsb
mov
push
ffree
insl
push
lds
data16
mov
outsb
fldt
outsb
mov
push
es
push
rol
imul
lcallw
jecxz
inc
mov
xchg
stos
mov
jle
add
mov
lcall
jle
jo
ss
mov
mov
jo
jecxz
xorb
xchg
cmp
jle
pop
dec
cmpsl
rcrl
fmulp
dec
fadd
gs
lds
rcrw
out
sarb
jecxz
dec
mov
into
mov
mov
loopne
xchg
jle
stos
mov
mov
push
jb
jbe
jnp
add
pop
pop
push
push
jle
es
mov
adc
cmpl
mov
aaa
mov
ret
jecxz
sub
lret
test
int
lock
jo
enter
retw
pop
ficoms
sbb
pop
push
cmpsl
sub
fsubrl
lret
insb
ds
scas
shlb
sub
add
orl
bound
adc
adc
pop
add
aas
adc
mov
dec
lods
mov
mov
xchg
mov
cmpsl
int3
stos
es
insb
aaa
xlat
mov
push
mov
cmp
dec
jmp
dec
push
mov
les
fadd
shll
mov
enter
xor
les
sbb
mov
mov
aaa
or
fnstcw
or
push
syscall
repnz
xor
sbb
xchg
cmpsb
pop
dec
stos
stos
push
cmp
insb
jbe
fadd
xchg
loope
loop
rcll
lods
xor
lds
imul
push
cmpsb
aaa
jbe
mov
mov
test
push
mov
sbb
or
outsb
adc
mov
mov
or
mov
push
push
shlb
cmpsl
jle
fbstp
fnstcw
xchg
faddp
push
add
mov
jbe
or
jl
sahf
iret
mov
aad
jno
int
out
sahf
mov
xchg
and
pusha
test
jae
call
ja
jle
or
test
pop
jo
mov
jle
and
xchg
stos
push
xlat
mov
jmp
int
ffreep
lds
fcmovne
imul
sub
add
enter
mov
pop
incb
mov
mov
sbb
fnstsw
xchg
jl
push
adc
js
jle
xchg
mov
mov
mov
outsl
imul
lret
jae
int
push
xchg
into
cs
orb
push
mov
jg
insb
push
inc
in
out
push
sahf
pop
pushf
and
pop
stos
and
mov
push
scas
nop
ljmp
jle
push
ficomps
int3
mov
loopne
or
mov
jbe
push
mov
jg
test
dec
mov
push
sbb
mov
mov
loopne
mov
push
push
mov
movl
repz
repnz
pop
push
xchg
scas
xchg
adc
fst
mov
add
sahf
insl
add
mov
mov
jp
jle
push
xchg
ret
pop
das
jle
cmpsb
pop
scas
push
loop
and
sahf
inc
les
fadds
test
jle
scas
mov
fnstcw
fdivp
mov
mov
fisubs
lods
mov
movsb
and
or
xchg
jl
lods
xchg
pop
adc
cli
cmp
lods
nop
xchg
enter
roll
test
mov
js
out
stc
push
stos
and
push
mov
fcoms
sub
stos
sub
lods
ds
or
push
jle
mov
out
bound
ret
lret
cli
add
jmp
data16
jl
adc
int3
push
icebp
in
push
jg
mov
sbb
cmc
mov
cmp
cmp
jle
and
daa
pop
frndint
mov
mov
lods
sub
lods
cs
scas
xor
shlb
mov
ss
scas
inc
test
fstpl
mov
loope
jp
or
or
mov
mov
inc
scas
ret
pop
int3
push
or
sub
mov
inc
and
mov
cmpsl
cmp
lret
stos
xor
cld
pop
pop
jbe
dec
shlb
mov
inc
fwait
adcb
cmp
adc
xchg
mov
outsb
test
push
mov
ljmp
lods
jle
jle
stos
dec
mov
cwtl
arpl
dec
hlt
out
loope
adc
jg
mov
xchg
movsl
dec
cmpsb
mov
push
mov
insl
ss
inc
mov
scas
inc
lods
cmp
test
je
mov
scas
cli
add
push
fdivrs
ds
lahf
push
cmp
jecxz
fdivs
pop
jo
hlt
mov
xchg
mov
jle
pop
mov
ss
sarb
inc
scas
mov
mov
push
sub
test
sub
push
insl
push
mov
test
enter
ss
hlt
fsub
jmp
mov
push
icebp
scas
mov
cld
out
mov
ja
cmp
orl
into
jbe
inc
inc
shrl
jle
xchg
push
test
sahf
pop
leave
enter
incb
mov
addl
sub
jnp
lcall
insb
cld
mov
movsb
out
addl
xchg
ret
mov
ljmp
jb
mov
add
lcall
pop
inc
push
pop
inc
aad
mov
dec
imul
mov
and
popa
aam
scas
sti
clc
repnz
popa
mov
shlb
scas
xlat
cltd
fsubl
mov
divb
xchg
inc
repz
jbe
mov
sub
jge
ud0
insb
ss
insl
fs
push
pop
inc
push
inc
pop
dec
pop
dec
xchg
repz
insl
pop
or
jns
and
out
mov
xchg
stos
xchg
into
les
das
or
repz
data16
in
test
addl
inc
sti
incl
add
gs
incl
jb
incl
inc
jg
insb
push
decl
cld
mov
test
in
enter
push
sub
fxch
mov
cmp
lds
add
stc
imull
into
mov
neg
stos
outsb
mov
inc
jg
mov
cltd
xchg
mov
jns
mov
xchg
lret
shlb
addb
push
call
in
jns
rol
int3
lds
ror
mov
fcmovnbe
ret
xor
xlat
lret
inc
andl
insb
ja
insb
paddd
incb
loopne
push
test
cmpsb
cld
pop
orb
push
add
pop
add
add
xchg
inc
dec
addb
add
and
adc
or
leave
leave
shl
clc
push
repnz
cld
incb
cmp
jb
push
xor
nopl
jb
jb
jg
pop
imul
jg
jns
inc
mov
dec
roll
loopne
es
mov
idiv
sub
jb
jb
jo
add
addr16
xchg
xchg
xchg
bound
jb
xor
dec
jbe
cvttps2pi
and
and
push
sbb
mov
mov
mov
lret
sarb
and
test
insb
mov
mov
idiv
out
jmp
shr
jb
mov
push
decl
loope
and
loopne
mov
push
test
test
sarb
fdiv
push
jne
adc
arpl
lcall
push
gs
jl
je
pop
add
loopne
insb
or
scas
ljmp
es
rcl
dec
lret
mov
xor
incl
or
adc
add
int3
outsb
ret
mov
pushl
ljmp
sub
decl
lock
cwtd
popa
ljmp
notrack
and
aaa
mov
gs
and
add
push
dec
push
adc
add
lcall
pop
out
in
ss
lret
mov
out
test
mov
imul
ret
ret
mov
xchg
jmp
add
outsb
sahf
jbe
adc
mov
into
dec
push
cmpb
jge
imul
mov
cwtl
test
push
movsl
popf
mov
rcr
outsl
js
jns
mov
and
lock
jbe
call
insb
push
mov
enter
scas
mov
stc
cwtl
xchg
int3
incl
cltd
nop
out
movsl
pushf
into
jbe
and
jno
sbb
jns
and
xchg
cmp
popa
xchg
rcr
jae
insl
js
jmp
fdivl
stos
mov
outsb
push
pushl
adc
cli
mov
dec
dec
dec
and
mov
mov
dec
lret
lret
dec
adc
loop
repz
fstp
std
rol
jecxz
mov
int3
push
mov
ret
ret
mov
addr16
shlb
mov
movb
xor
push
ss
xorb
or
push
stos
divb
push
orb
je
xor
mov
push
pop
ljmp
or
mov
bound
jp
aas
mov
ret
out
pop
mov
mov
scas
pushf
mov
mov
in
nop
mov
mov
shll
xchg
xchg
ja
out
ret
jns
mov
jl
incb
push
sub
cmpb
orb
cmp
dec
xorl
pusha
jmp
push
ror
mov
mov
add
daa
scas
mov
lods
mov
mov
scas
test
call
lods
andl
mov
xchg
xchg
sahf
popf
ret
mov
xchg
movsb
mov
es
imul
sbb
js
jle,pn
adc
or
call
mov
jle
push
xchg
fmuls
addb
xchg
push
add
rol
mov
test
mov
lock
ret
xchg
xchg
xchg
negb
outsl
mov
pop
mov
movsl
mov
ljmp
out
xchg
lea
insl
xor
rclb
push
mov
dec
push
xchg
mov
push
jmp
jle
decl
lahf
jmp
pusha
mov
jmp
scas
je
lcall
mov
xchg
pop
gs
mov
ds
mov
mov
mov
xchg
xchg
xchg
outsl
sub
sbb
jbe
dec
mov
jo
lock
iret
inc
push
jle
scas
xchg
fcoml
or
mov
popa
cmp
xchg
push
cmc
mov
mov
mov
mov
push
fimuls
pushf
js
rol
lods
sbbl
mov
sahf
mulb
cltd
push
out
mov
jbe
mov
xorb
cmpsl
or
adc
mov
rcl
std
jbe
cmp
dec
test
addb
sub
xchg
xchg
lods
xchg
outsl
push
test
xchg
pushf
lahf
mov
mov
xchg
mov
decl
loope
lods
cld
stos
mov
lods
mov
fs
xchg
xchg
mov
orb
mov
incb
scas
xchg
clc
mov
cmpsb
mov
ja
clc
scas
loopne
fsubrp
psrlw
lods
frstor
mov
lahf
aaa
or
mov
divb
aas
test
mov
mov
fisubrs
push
ret
mov
xor
adc
sub
add
scas
sahf
data16
xchg
rorl
clc
rclb
test
add
icebp
inc
push
ljmp
in
scas
jmp
fstps
into
xor
xchg
mov
lcall
push
or
inc
lods
xchg
not
push
add
scas
arpl
lods
adc
shrb
lretw
pusha
ret
sub
mov
scas
mov
mov
push
mov
add
xchg
cmpsb
out
push
and
std
std
cld
pop
push
pop
pop
out
jg
sahf
sbb
sbb
mov
ja
btr
scas
pop
xchg
orb
mov
xchg
repnz
inc
mov
mov
lds
xchg
outsl
shl
mov
lock
jle,pn
push
popa
sbbl
sbb
in
push
add
mov
sbb
movsb
pop
add
rol
psadbw
imul
cmpsb
mov
push
xchg
cmp
xchg
mov
mov
inc
mov
jg
aaa
adcl
ljmp
sahf
sub
pop
icebp
decl
std
out
or
mov
in
jmp
mov
into
pop
cmpsb
test
lcall
cmpsb
mov
push
cs
mov
and
jg
xchg
insl
jae
scas
out
push
movl
add
jl
jl
std
mov
mov
lret
mov
movsl
movsb
and
xchg
xor
lods
pop
dec
es
fmulp
cmpsb
pop
lret
outsl
ja
ret
lds
fxch
xchg
xor
sbb
dec
xchg
andl
scas
add
data16
xorl
add
fwait
fwait
cltd
push
out
into
scas
test
add
lods
inc
test
mov
stos
push
cmp
dec
pop
pushf
cmpb
mov
inc
push
sbb
sbb
into
mov
pop
dec
scas
xor
insb
call
loopne
movl
push
mov
inc
divl
and
inc
mov
pop
scas
lahf
jg
fildl
dec
or
xchg
xor
mulb
iret
fadd
push
aaa
movsl
outsb
aam
pop
fisubrs
add
outsb
push
inc
dec
clc
add
jbe
test
mov
jns
mov
sarb
mov
ja
lods
sar
pop
cltd
cmpb
popf
cmpl
mov
mov
mov
call
mov
rclb
std
cmpsb
inc
fisubrs
int
mov
xchg
loop
notl
push
mov
adc
xor
pusha
pushl
mov
aaa
pop
or
out
popf
lret
cvttps2pi
push
xchg
inc
mov
sahf
pop
mov
pop
pop
orb
fcmovnb
fs
bound
xchg
sbb
cli
daa
lock
ja
mov
rolb
fbld
jno
incl
add
test
jmp
or
xor
outsb
mov
decl
jbe
in
jecxz
ja
shl
imul
adc
imul
jnp
testb
rolb
cld
sbb
mov
sub
scas
data16
movsb
fs
decb
lds
mov
mov
lahf
fnsave
add
call
js
fwait
int
push
test
dec
stos
lret
movsb
mov
ja
cmpsl
test
push
bound
insb
push
lret
inc
mov
out
outsb
clc
inc
and
test
shll
cmpsl
rolb
xchg
lock
push
test
cmpsb
outsb
push
test
into
cmpsb
push
scas
adc
or
rorb
push
adc
testb
mov
fst
sahf
rolb
mov
push
inc
mov
mov
shll
into
out
pop
and
test
xor
cmp
cmp
xchg
push
jbe
enter
mov
leave
push
data16
lds
jno
jbe
cmp
loope
and
push
and
fldt
into
shll
out
push
ret
movsb
popl
add
ds
in
mov
call
fnsave
inc
pop
adcb
pop
mov
out
in
pop
cmpb
mov
mov
mov
push
lods
cmpsl
mov
into
movsl
sub
sub
fistpll
fnstcw
push
fisttpl
pusha
cmpsb
mov
stos
cmpsl
push
push
mov
lcall
cmpb
mov
mov
add
xchg
call
fnstcw
sahf
jl
in
fucomi
movsb
out
scas
jmp
xchg
out
test
mov
adc
push
cmp
push
arpl
pop
mov
popf
arpl
xlat
enter
push
xchg
in
mov
loop
imul
cmpsb
cwtl
mov
nop
inc
mov
lods
push
movsb
sar
data16
out
jno
or
push
inc
add
cmp
negb
pop
inc
fwait
mov
mov
movsb
in
cmc
repnz
movsb
sub
lock
cld
sbb
add
in
fsubl
xchg
mov
push
cmp
decl
or
xchg
cmpl
mov
ret
into
ret
lahf
rorb
fcmovbe
mov
sbbb
scas
and
cmp
cmp
in
pop
faddl
add
call
and
repz
push
out
shrb
ret
mov
mov
mov
ret
mov
pop
jmp
fisttpll
ljmp
repnz
cli
or
sub
add
std
icebp
add
lock
sub
out
add
lock
push
aas
iret
clc
add
pop
loopne
mov
aaa
mov
adc
pop
test
push
add
mov
add
xor
inc
call
mov
mov
or
adc
ds
sahf
test
xor
fdivrp
push
fisubrs
stos
xchg
push
ljmp
sbb
pushl
push
arpl
and
or
add
or
fisubl
enter
mov
pop
xchg
sbb
dec
jo
and
dec
lcall
jbe
xchg
nop
xchg
mov
rorl
nop
pop
xchg
push
lahf
pop
ljmp
inc
push
aaa
aam
push
call
mov
mov
xor
push
ds
mov
decl
incl
mov
decb
add
fs
ss
push
fiadds
and
jbe
int
pop
cwtl
sahf
xchg
mov
decl
lods
mov
ss
or
ja,pn
push
xor
call
mov
mov
mov
jge
decl
mov
aaa
xor
jbe
cmpsb
xchg
mov
pop
push
stos
lods
jmp
out
incl
nop
lcall
mov
xchg
adcl
jmp
dec
or
or
out
mov
orb
loopne
clc
cwtl
mov
sahf
cmpsl
idivl
adc
dec
scas
bound
xchg
xchg
xchg
inc
lcall
adc
cld
sub
jmp
pop
mov
lods
xchg
push
scas
incl
cmpsb
out
push
xchg
add
dec
xchg
inc
ljmp
subb
inc
inc
ja
fcoml
jbe
push
inc
add
out
push
call
xchg
and
dec
das
icebp
xchg
inc
jnp
fwait
add
shlb
movsb
decl
cmp
aad
call
cmp
push
inc
jmp
mov
or
movsb
pop
imul
nop
or
mov
jmp
leave
dec
rcr
nop
scas
jbe
mov
cs
cmpsb
dec
or
lcall
movsb
pop
xor
xchg
ds
xchg
mov
cmpsb
mov
fdivrl
lea
je
cld
cmpsl
adc
andl
lcall
test
xchg
cmpsb
decl
leave
cmp
cmpsb
cwtl
jbe
fildl
movsb
incl
cmp
jg
dec
out
test
out
dec
ss
and
xchg
jne
ds
xchg
xchg
or
imul
jg
nop
sahf
inc
fiadds
push
xchg
xchg
and
incl
mov
insb
fs
push
aaa
js
loopne
xchg
xchg
cmpsb
lea
std
decl
sbb
cmp
jbe
inc
cltd
outsb
dec
dec
inc
adc
sub
roll
cmp
adc
je
faddp
mov
push
xchg
add
and
inc
add
and
dec
and
jg
pop
mov
and
dec
sbb
or
and
push
mov
inc
pop
mov
xchg
sahf
pop
stos
dec
es
and
inc
adc
mov
test
mov
dec
and
popl
addr16
cld
pop
addl
dec
pop
cs
push
out
inc
push
jns
aas
add
test
add
and
adc
mov
outsl
lcall
xor
and
mov
test
loopne
jl
inc
repz
ja
cld
fdivrp
lods
repnz
js
add
jbe
push
ja
jne
add
fidivs
lahf
sbb
fldcw
lea
sbb
pop
mov
or
or
movsw
jnp
mov
incl
fcompl
push
test
adc
das
gs
jae,pt
push
jne
add
ja
or
jns
shl
cmc
or
adc
adc
adc
push
push
imul
ds
or
fcomi
or
add
push
pop
add
cmp
or
jg
push
mov
xorb
add
popf
rcrb
push
pand
or
cmp
into
or
pop
push
sbb
outsb
fistpll
adc
dec
hlt
push
and
jnp
out
and
sub
push
sub
xor
es
and
and
sbb
fldt
jno
sahf
push
movsb
adc
or
adc
cmp
or
dec
rcrl
or
leave
adc
adc
pop
sbb
and
xchg
add
add
and
sub
loopne
mov
push
push
mov
add
add
cmc
cs
mov
push
cmp
cmp
jle
inc
clts
xor
mov
push
nop
repz
dec
repz
fwait
add
outsb
pop
mov
popa
push
sub
sbb
cmp
dec
sub
cmpsl
xor
sbb
frstor
add
sti
push
sub
inc
adc
sbb
test
std
sub
pop
inc
das
add
jle
jo
das
push
push
cmpsb
xor
outsl
loope
jbe
fidivrs
out
pop
push
hlt
inc
dec
push
dec
push
add
lea
add
loopne
sub
fs
outsb
push
lods
ss
mov
imul
sub
add
xor
sbb
jge
sub
mov
iret
rcrl
push
sbb
mov
das
adc
and
pushl
ja
adc
adc
push
cmp
negb
sbb
jae
sub
inc
mov
cmpsl
rcrl
sub
inc
xchg
faddl
dec
add
clc
andl
pop
outsb
arpl
mov
shll
insl
fcmovnu
pop
push
pop
add
stos
add
inc
add
outsb
push
scas
pushl
cmp
daa
xor
pop
xor
sbb
fdivrp
pop
xor
jecxz
dec
movsl
hlt
es
imul
adc
cmpsl
or
fists
pushl
sbb
jno
sbb
jb
pop
ljmp
sbb
cmp
sbb
fdivl
jae
xor
push
xchg
dec
xchg
jle,pt
orb
mov
insl
lock
loopne
es
add
hlt
imul
jnp
enter
add
jle
mov
out
lds
push
push
out
jmp
pop
mov
xor
push
xchg
inc
sbb
jbe
and
filds
std
xor
sbb
push
push
js
adc
cmp
or
dec
daa
inc
pop
jnp
incl
sub
dec
inc
fbstp
fiadds
scas
inc
es
push
cmpsb
cmp
add
inc
add
in
stos
inc
mov
inc
push
pop
pop
iret
jg
add
in
je
xchg
push
pop
incl
mov
out
inc
jbe
gs
ljmp
ss
mov
jae
jmp
adcl
mov
push
push
lods
push
add
and
ja
loopw
pop
push
sub
sub
sub
outsl
jle
aas
xchg
mov
decl
xor
mov
dec
das
call
inc
and
pop
arpl
xor
data16
push
lret
jecxz
xchg
in
loop
sahf
mov
loopne
andl
out
jmp
ljmp
lock
mov
mov
mov
jle
fsubrs
orl
pop
fwait
jns
fstl
jle
push
push
cmc
or
mov
outsl
xchg
cmp
sub
add
sbb
in
pushl
call
popa
cmp
fwait
popa
xchg
ljmp
dec
incl
and
or
and
repz
add
fsubp
scas
jle
push
push
lock
add
add
add
push
inc
pop
data16
in
sarb
stos
lock
test
es
loopne
scas
clc
push
sbb
insb
jno
popa
cmp
xchg
popa
mov
pusha
into
xchg
pop
push
xchg
test
cmp
sbb
sbb
dec
sbb
mov
jb
dec
data16
dec
adc
outsl
pop
jle
push
xchg
arpl
lcall
arpl
shrw
pop
jle
and
call
sbb
pop
add
jnp
xor
cld
imulb
mov
xchg
das
fucomip
loopne
mov
dec
fiaddl
pushf
inc
xchg
bnd
mov
push
adc
jno
mov
fs
bound
outsb
bound
pusha
loope
push
clc
notb
pushl
pop
setnp
ja
and
and
jo
outsl
xchg
and
lahf
outsl
dec
push
cmp
ret
sbb
xchg
ss
popa
jb
lret
test
hlt
adc
or
jae
jnp
xor
es
in
faddl
xchg
push
cltd
push
cwtl
repnz
pop
pop
jg
rolb
hlt
lcall
mov
popf
ret
repz
push
sub
or
mov
test
pusha
jne
and
mov
gs
out
arpl
cmp
fdiv
addl
xchg
mov
loopne
pop
sbb
nopl
pop
jno
pop
data16
jg
jbe
mov
je
gs
cs
mul
push
test
hlt
mov
out
popl
scas
dec
push
push
xchg
adcb
roll
js
loope
dec
cmp
insb
cmc
push
rorb
test
push
add
test
push
mov
dec
xlat
jle
push
mov
nop
ficoms
orb
xor
jg
push
add
loopne
xchg
pop
xchg
je
cld
decl
mov
mov
cmp
pop
pop
popl
push
addr16
push
mov
dec
imul
cmp
mov
mov
outsb
jo
xchg
ret
push
icebp
pop
push
pop
loopne
scas
es
out
mov
cmpsl
jg
push
jnp
cmpsb
add
in
or
push
inc
orl
dec
jp
jle
dec
outsb
inc
lock
setbe
mov
mov
jl
pop
mov
push
pop
imul
test
inc
data16
mov
cs
outsl
popf
jge
push
mov
out
mulb
mov
ja
dec
jnp
push
jle
lock
sahf
std
mov
lahf
dec
push
push
leave
add
lret
idiv
push
pop
add
jl
lock
push
inc
xchg
loopne
out
pushw
pop
xchg
imul
loopne
insl
mov
ss
dec
and
stos
xchg
lcall
outsl
lods
andl
cmp
lahf
xchg
xchg
mov
mov
movsb
leave
or
xor
xchg
mov
testb
jno
pop
dec
das
repz
in
in
mov
mov
push
out
les
jg
fldcw
mov
imul
inc
cmpsb
sub
dec
xchg
and
jno
push
jo
jmp
jg
mov
outsl
lcall
fnstcw
insb
insl
dec
imul
inc
incl
lahf
out
je
dec
ja
fisubrs
mov
cmpsl
lock
js
mov
mov
fwait
pop
out
lea
ss
icebp
mov
xor
and
movsl
cmpl
in
lret
jge
dec
cmpb
push
xchg
sbb
test
stos
mov
mov
es
jno
inc
sbb
jg
aad
mov
mov
mov
mov
jle
lea
push
das
clc
bound
xchg
jle
jle
jle
loopne
ljmp
jo
jo
scas
testb
out
clc
out
fists
pop
xchg
ja
hlt
outsl
rcll
scas
sahf
cli
mov
lcall
js
jae
xchg
test
jne
push
dec
movsw
adc
insl
movsl
out
mov
mov
or
jg
mov
mov
pop
in
xor
sahf
mov
pushl
jae
push
inc
mov
outsb
dec
insb
dec
push
pop
dec
out
incl
stos
in
pop
mov
lock
loope
mov
shr
mov
stos
jae
mov
pop
lea
icebp
jle
mov
test
add
jle
mov
lock
xchg
jo
sahf
pop
mov
daa
xchg
cmpsb
mov
popl
add
add
jg
pop
jl
hlt
mov
je
sar
shll
aas
mov
cmpsb
jbe
call
jl
insl
scas
gs
incl
fdivrl
vmwrite
fadd
shr
dec
ucomiss
stos
pop
out
sbb
mov
scas
and
call
inc
jg
roll
lea
xchg
pop
je
stos
orb
sbb
lods
lahf
dec
mov
jg
clc
incl
mov
cmc
in
in
fcmovnbe
sarb
pushf
pop
mov
xchg
mov
pusha
sahf
jne
xchg
stos
jg
xchg
xchg
jle
hlt
pop
mov
cmp
inc
sahf
cmc
shr
outsb
add
in
or
stc
scas
loopne
icebp
sarl
call
mov
push
fdivp
xchg
mov
add
pop
mov
xchg
lods
outsb
lahf
subb
push
jge
cltd
jns
scas
test
mov
call
cs
std
enter
enter
jg
clc
or
in
in
jg
mov
or
lcall
cwtl
jecxz
test
lcall
out
iret
mov
out
add
jbe
mov
mov
jbe
sahf
push
in
jle
int
js
daa
xchg
repnz
pop
mov
jle
fwait
test
orb
jae
insl
popf
xor
jle
push
cmp
out
loope
push
outsb
dec
push
cmp
je
jg
add
add
cmpsb
jno
in
shlb
mov
fs
push
mov
sarb
dec
and
ja
aaa
or
lcall
or
add
in
mov
mov
out
pop
push
push
adc
negl
ljmp
cmpsl
jl
loopne
es
cwtl
xchg
test
or
jbe
mov
and
push
in
xchg
push
or
dec
sbb
mov
add
lods
andl
aad
xlat
jbe
xchg
mov
cltd
push
scas
push
xorb
ds
fdivp
fisubs
push
test
cmp
loopne
push
inc
cmpsb
jg
test
cli
mov
fisubs
into
xchg
outsl
pop
out
das
loop
test
shrl
push
rclb
jbe
pushl
fisttps
jbe
cs
arpl
movsb
sbb
mov
cs
testl
dec
push
sbb
sub
cmovbe
push
push
mov
push
mov
add
adc
fisubrs
sti
inc
mov
test
mov
test
pop
xlat
aaa
lods
sub
das
push
or
and
sahf
icebp
push
out
shl
pop
xchg
mov
fcmovnb
mov
adc
mov
add
dec
push
rorb
add
test
dec
push
mov
cmc
notl
xor
jle
push
out
mov
cmp
pop
in
sbb
jg
or
jnp
lods
add
mov
jl
push
jbe
pusha
xor
pop
xchg
xor
jmp
loopne
mov
mov
inc
dec
ds
pop
jle
mov
lea
adcl
pop
decl
or
and
addl
jle
mov
lcall
dec
sub
call
subb
cmpsl
sarl
out
lret
in
ja
mov
cltd
pop
sub
mov
sahf
sti
addr16
push
movsl
in
sub
mov
push
sub
lahf
rcrb
and
mov
xchg
add
add
popf
push
into
outsb
cltd
fsubrp
ret
ret
add
es
and
jbe
push
cs
stos
mov
push
jle
pusha
js
jl
lcall
mov
sub
out
dec
jnp
out
jne
ja
or
push
pop
push
imul
fstl
push
into
aaa
cmpsl
or
or
popa
add
fisubs
push
xor
jo
scas
cmp
in
lods
data16
push
mov
lcall
mov
and
mov
rcl
loopne
xchg
push
sub
or
adc
mov
stc
cmp
xchg
lret
inc
push
sahf
out
push
and
add
mov
sahf
subl
pop
outsb
inc
jl
fiadds
shll
outsb
test
adc
cld
add
out
cli
jle
bound
lcall
sbb
out
adc
ds
imul
pop
xlat
push
fisttps
loopne
xchg
repz
addr16
pop
jg,pn
pop
data16
jp
mov
pop
push
sub
movsb
cs
das
pusha
lock
mov
xor
das
sbb
lods
outsb
scas
nopl
ja
mov
iret
jle
data16
push
adc
cs
xor
ret
leave
jae
sbb
sbb
out
pop
mov
cmpsb
aas
call
or
sbb
mov
jnp
add
push
push
cmp
cmp
push
ds
push
cmovp
mov
add
cmp
adc
jecxz
xchg
iret
sub
pop
clc
pop
loopne
push
add
inc
add
cmpb
std
push
rorb
rclb
add
pop
xadd
movsb
jb
add
mov
dec
rolb
or
jg
push
pop
cld
add
jg
or
sar
cmp
iret
lock
out
pop
out
loopne
imul
incl
incb
int3
andb
sbbb
out
jo
push
mov
inc
pop
clc
sbbb
pop
mov
sub
xor
popf
push
setle
adc
or
pop
dec
in
filds
addl
inc
movsb
pop
sub
out
mov
add
pop
mov
or
test
dec
xchg
das
mov
popaw
sti
jg
mov
xchg
mov
inc
pop
push
or
aad
clc
test
pop
test
add
decl
inc
sbb
inc
bound
imul
hlt
cmc
pop
mov
inc
cmp
out
mov
jo
dec
push
sbb
jg
or
popa
xor
adc
inc
addr16
pop
clc
jae
pop
push
or
adc
sbb
jns
out
sbb
outsl
iret
push
adc
or
push
or
xor
or
xor
movsb
push
rorb
and
dec
sbb
fdivr
incl
mov
sysret
inc
add
es
add
jno
fs
sbb
into
jbe
push
xor
push
loope
pop
jg,pt
pop
pusha
adc
jge
add
es
cmp
mov
or
adc
pop
insb
testl
add
pop
or
push
dec
sub
fbstp
push
pop
jnp
sub
cmp
imul
adc
repz
out
dec
push
outsb
cmp
or
add
sarl
dec
cltd
aaa
push
or
incl
pusha
cmp
and
xor
or
dec
sub
mov
xlat
and
paddd
out
sbb
sbb
jecxz
cmp
cld
push
sbb
shlb
or
ficomps
inc
add
push
sbb
pushw
add
jne
push
or
popa
scas
xchg
add
jmp
lods
aas
sti
das
clc
pushl
cmp
sbb
push
clc
inc
and
add
out
push
push
into
add
push
adc
jp
and
adcl
test
pushl
and
sub
xchg
rcrb
add
scas
mov
bnd
lods
popa
ret
in
add
xlat
out
repz
pop
add
sub
push
cmp
xor
dec
sub
xchg
cmc
adcb
mov
test
or
mov
pop
incl
adc
push
adc
push
orb
jg
jo
pop
xor
ss
xor
outsb
sbb
lock
out
mov
je
fadds
and
push
dec
mov
roll
xchg
repnz
push
cmp
xchg
xchg
pop
mov
jg
subl
cmp
mov
dec
sub
add
dec
ret
add
fiadds
xor
mov
fwait
test
cld
xor
pusha
aaa
jg
push
dec
sub
out
movb
xchg
icebp
insl
push
pop
pop
lock
sub
aas
mov
xchg
icebp
xchg
push
pop
dec
pop
inc
out
pop
lock
notb
out
pusha
cmp
mov
and
mov
pop
outsb
fisubs
stos
push
xchg
pop
cmp
fwait
movsb
nop
pop
mov
imul
fisubs
pusha
sti
imul
mov
push
lcall
out
popf
mov
lock
mov
mov
testb
hlt
or
dec
xchg
jle
arpl
scas
cmp
pop
cs
push
sub
push
mov
decl
jge
lcall
push
push
sahf
xor
xchg
bound
loopne
pop
or
std
inc
test
or
fsubrp
dec
out
or
mov
out
lock
mov
int3
xor
call
enter
pop
push
jp
outsb
addr16
fidivrl
xor
pop
push
xchg
gs
decl
fcmovb
add
sarb
pop
out
push
xchg
data16
inc
loopne
xchg
pop
gs
push
addl
mov
test
call
mov
cs
rorb
aaa
lock
or
pop
loopne
push
mov
cmp
jl
addr16
xlat
inc
lods
fwait
mov
insl
push
out
lahf
ja
push
fildl
addr16
push
and
add
ja
dec
std
nopl
cbtw
push
xchg
repnz
push
cld
jb
xchg
ret
mov
push
cltd
gs
push
add
outsl
push
jmp
leave
mov
inc
sbb
xchg
arpl
mov
sbb
scas
outsb
fs
test
jle
mov
rorl
and
push
pop
mov
orl
add
in
test
incb
ret
xchg
outsl
push
addr16
pop
popa
mov
movb
lods
cmpl
enter
jmp
jle
decl
jb
ss
fwait
mov
jp
ljmp
cli
lods
add
push
fimuls
or
inc
cs
push
and
test
xchg
ja
notb
mov
push
sbb
mov
push
cs
inc
stos
add
fistps
mov
pusha
push
mov
loop
aad
xchg
mov
fwait
icebp
clc
aad
in
mov
in
cmp
push
dec
add
in
xchg
cs
daa
fwait
jo
daa
cld
push
int
popa
ja
out
lahf
xchg
mov
sbb
xchg
test
out
push
cli
out
shll
and
xchg
sbb
lock
es
jg
fs
stc
scas
jns
push
pop
mov
jle
nop
outsb
pop
stc
jg
sub
out
cmpsl
inc
mov
scas
xchg
data16
lcall
add
in
mov
ficomps
out
mov
lret
pop
add
fs
stc
mov
mov
stos
nop
push
cmpsl
mov
sti
mov
mov
lods
js
push
sub
dec
lods
xchg
rorb
das
fsub
xor
pop
push
xchg
push
xchg
mov
add
in
push
shr
mov
outsb
fimuls
fs
sub
or
mov
jae
lea
pop
into
shlb
ds
mov
cli
mov
nop
push
and
and
or
repz
xor
xor
and
test
outsl
loop
daa
adc
pushw
or
fistps
notb
mov
pop
or
pop
add
int3
fimuls
pop
incl
dec
lahf
mov
subb
incl
sub
pop
aaa
xchg
push
sub
data16
xor
xchg
mov
jmp
mov
pop
add
scas
rcll
pop
lock
dec
mov
loope
push
ja
push
or
fnsave
push
push
sbb
pop
jo
inc
xor
mov
mov
ja
outsb
rcll
mov
push
arpl
xor
mov
addr16
push
mov
push
es
push
pop
xor
leave
xchg
es
repz
push
cmpb
fidivs
jne
ja
pop
push
scas
push
movd
push
pop
cmp
or
add
push
xor
push
sub
es
sahf
ficoms
jae
stos
pushf
cmpsl
push
xchg
mov
push
mov
int
sahf
add
jle
xchg
ficoms
in
xor
sbb
adc
jl
mov
fstpl
cmp
into
in
shrl
push
adc
adc
push
xor
jae
stos
out
mov
xchg
mov
jg
and
push
pop
inc
sbb
inc
pop
push
iret
dec
inc
fsubs
xor
xchg
mov
sub
lahf
aaa
pop
cld
mov
inc
push
pop
lock
lock
lahf
ja
cli
fcos
fdivrp
pop
clc
xchg
clc
pop
rol
dec
test
dec
pop
push
es
inc
dec
and
insl
xor
insb
push
jnp
jge
jle
push
popa
adc
jge
jns
es
insb
and
das
daa
push
fs
fcos
es
jp
or
insb
jnp
outsb
data16
push
pusha
insl
sti
outsl
in
addr16
outsb
xor
xor
insb
jb
sub
test
sti
jp
and
and
sbb
jle
imul
mov
fsubrl
mov
test
data16
jns
mull
sub
sbb
xor
sub
pop
pusha
lods
fnstenv
inc
gs
xor
mov
lock
or
pusha
jp
and
outsl
sbb
addr16
insb
xchg
cmp
push
pmaxub
cmp
and
xor
bound
shll
in
test
and
lcall
hlt
stos
mov
outsl
imul
insb
insl
adc
jge
jle
jl
fcmovne
mov
pusha
push
dec
jp
and
jl
movq
jge
jge
and
gs
and
bound
jle
xor
jo
cmp
add
jb
inc
push
insb
data16
or
es
cmpb
dec
arpl
nop
rcrb
cmp
in
mov
push
jge
and
jo
push
push
jge
sbb
orl
into
ja
mov
cmp
cmp
xor
in
dec
insb
outsb
push
orb
jge
fidivl
mov
or
jns
aas
daa
cmp
cmp
icebp
les
pop
cmp
and
sbb
sub
out
and
pusha
mov
xor
stc
or
push
jno
gs
arpl
sbb
lcall
ss
dec
pop
inc
inc
inc
dec
sub
pop
inc
pop
pop
pop
sub
pop
mov
dec
add
sub
insb
fisubs
pop
push
pop
sub
dec
pop
sub
push
addr16
data16
insl
xchg
outsb
movntpd
xchg
jp
icebp
in
mov
das
or
aaa
sub
sub
jnp
or
pop
mov
scas
push
mov
data16
jns
daa
mov
jns
loop
mov
out
mov
or
or
sub
push
push
popa
sub
push
xchg
mov
outsb
popa
adc
imul
movl
pusha
xchg
jo
lods
popf
popf
mov
pop
jb
movl
mov
sub
inc
push
into
add
jle
mov
sbb
xor
cs
pop
and
pusha
je
and
cmp
jo
xor
adc
hlt
dec
data16
push
adc
and
shr
lods
jno
sub
add
subl
inc
mov
addr16
jl
stos
mov
push
jo
pop
lcall
jo
mov
xchg
jmp
and
jge
push
jl
idivb
xor
sbb
jecxz
push
out
sbb
sub
mov
xor
sub
mov
cwtl
sub
lock
jne
dec
das
push
cli
addr16
sbb
jge,pt
pop
aam
ds
inc
jo
daa
imul
fimull
dec
ja
sub
sub
push
mov
sbb
bound
mov
and
jge
inc
push
pusha
add
shrb
stos
addr16
sbb
insl
popf
out
iret
mov
inc
jp
xor
pusha
shrl
ret
pop
mov
mov
jg
les
aaa
inc
push
xchg
pusha
cmp
lcall
arpl
sub
dec
mov
outsb
addr16
jns
insl
xor
fcomp
mulb
cmp
call
add
sub
mov
insl
imul
add
testb
xor
dec
xor
push
sub
xchg
jl
loop
sub
pop
aad
es
dec
push
dec
inc
cmp
pusha
outsb
push
pusha
xorb
pop
data16
stos
xor
jbe
adc
cmp
mov
mov
push
mov
pop
sbb
cmp
push
mov
dec
sub
movl
insl
cmp
dec
imul
clc
sub
imul
pop
cmp
push
cld
xor
loop
frstor
cmp
jns
sarb
lods
push
pop
out
jo
add
scas
inc
cmp
mov
pop
xchg
lret
icebp
outsb
xchg
inc
pop
les
cmpsl
pop
cmp
and
sub
mov
jae
mov
dec
ds
mov
outsl
insb
enter
scas
shrl
popf
bound
testl
jnp
inc
xchg
insb
loop
push
dec
shrl
mov
xchg
pop
mov
mov
or
fdiv
and
xor
dec
or
sbb
push
bound
aas
lds
popa
push
cmp
mov
enter
dec
das
or
subl
push
push
and
and
pop
push
and
push
lods
sti
cmpsb
inc
sub
cmp
or
push
pop
cmp
imul
outsb
jl
sub
pop
lock
adc
pop
dec
out
jbe
ljmp
test
dec
jle
rclb
out
sahf
pusha
pop
sbbb
stos
xchg
jg
xchg
and
or
cmpsb
test
and
or
adc
jo
mov
out
adc
inc
push
jbe
daa
add
iret
loop
roll
cmc
mov
jg
inc
outsb
insl
jae
cmp
ret
pushf
jl
or
jecxz
sub
inc
aad
mov
jle
jge
jbe
clc
out
cmp
movsb
push
scas
adcl
std
pop
adc
cli
insb
mov
cmp
cmp
daa
insb
jno
and
lea
mov
adc
jg
insl
jnp
adc
and
add
call
imul
outsl
jne
cmp
into
lods
sbb
inc
imul
sbb
add
adc
repz
inc
xorl
xor
pop
or
inc
and
lcall
bound
pop
pop
xchg
aaa
fneni(8087
lcall
mov
dec
orl
cmp
adc
adcl
popaw
adc
add
add
inc
sub
addl
lahf
inc
sub
or
cltd
fsts
or
insl
sti
shlb
popl
add
bound
add
loop
add
add
sbb
fwait
add
add
sub
inc
inc
adc
xorb
pusha
test
pop
sub
xchg
mov
and
lods
popf
add
sbb
jmp
add
inc
add
or
les
mov
lcall
sbb
inc
inc
sub
push
adc
xor
testb
cmp
adc
inc
add
mov
mov
inc
adc
sbb
xchg
enter
dec
lea
arpl
outsl
insb
mov
and
aaa
loop
add
push
mov
je
push
bound
xchg
or
iret
xor
cmpb
add
add
inc
inc
loopne
pop
sidtl
add
flds
xor
mov
add
xchg
inc
adc
nop
pop
int
push
add
sahf
fs
and
inc
add
dec
sbb
cmp
add
xchg
or
and
lock
ja
rcrl
pusha
cmovno
xor
mov
out
setg
aaa
adc
pop
add
dec
xchg
incl
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
