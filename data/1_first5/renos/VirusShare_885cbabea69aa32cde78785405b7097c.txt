jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
xor
data16
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
ja
mov
inc
inc
dec
xchg
inc
cmp
jg
xchg
lea
mov
inc
lea
mov
mov
inc
dec
xchg
mov
mov
mov
lea
mov
cmp
je
jmp
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
mov
xor
divl
test
jne
lea
mov
mov
cmp
jle
mov
lea
mov
mov
mov
mov
xchg
xchg
mov
xchg
jmp
inc
xchg
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
mov
lea
cmp
jg
mov
xchg
xchg
mov
dec
mov
lea
mov
lea
inc
inc
inc
mov
xchg
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
ja
lea
mov
inc
inc
mov
xchg
inc
inc
lea
mov
lea
lea
xchg
dec
jne
xchg
lea
mov
mov
dec
mov
cmp
je
jmp
xchg
cmp
jns
lea
dec
mov
inc
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
inc
dec
dec
je
mov
lea
mov
lea
inc
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
cmp
ja
mov
mov
xchg
mov
inc
dec
mov
lea
mov
lea
xchg
dec
inc
dec
je
lea
lea
mov
cmp
je
jmp
xchg
cmp
jns
lea
dec
mov
inc
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
inc
dec
dec
je
mov
lea
mov
lea
inc
dec
dec
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
mov
mov
mov
lea
cmp
jg
mov
xchg
xchg
mov
dec
mov
lea
mov
lea
inc
inc
inc
mov
xchg
inc
mov
sub
mov
cmp
js
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
je
mov
mov
lea
dec
dec
dec
mov
lea
lea
inc
inc
push
mov
mov
xor
call
mov
lea
mov
mov
cmp
jle
mov
lea
mov
mov
mov
mov
xchg
xchg
mov
xchg
jmp
inc
xchg
mov
mov
mov
mov
call
cmp
ja
lea
mov
inc
inc
mov
xchg
inc
inc
lea
mov
lea
lea
xchg
dec
jne
xchg
lea
mov
mov
dec
push
mov
mov
xor
call
mov
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
cmp
ja
mov
inc
inc
dec
xchg
inc
cmp
jg
xchg
lea
mov
inc
lea
mov
mov
inc
dec
xchg
mov
mov
mov
lea
lea
mov
push
jmp
cmp
js
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
je
mov
mov
lea
dec
dec
dec
mov
lea
lea
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
xchg
cmp
jns
lea
dec
mov
inc
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
inc
dec
dec
je
mov
lea
mov
lea
inc
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
mov
cmp
ja
mov
mov
xchg
mov
inc
dec
mov
lea
mov
lea
xchg
dec
inc
dec
je
lea
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movb
push
push
push
call
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
movl
movl
lea
push
call
push
push
push
call
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
movl
movl
lea
push
call
decb
cmpb
jne
mov
pop
ret
jae
addr16
xor
xor
pop
jae
add
addr16
push
pop
jae
addr16
jae
addr16
xor
xor
pop
jae
add
add
gs
jae
push
pop
jae
addr16
push
mov
add
mov
mov
cmp
ja
lea
mov
inc
inc
mov
xchg
inc
inc
lea
mov
lea
lea
xchg
dec
jne
xchg
lea
mov
mov
dec
push
call
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
cmp
jle
mov
lea
mov
mov
mov
mov
xchg
xchg
mov
xchg
jmp
inc
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
je
mov
mov
lea
dec
dec
dec
mov
lea
lea
inc
inc
mov
mov
movl
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
cmp
jg
mov
xchg
xchg
mov
dec
mov
lea
mov
lea
inc
inc
inc
mov
xchg
inc
mov
pop
ret
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
shlb
repnz
mov
mov
mov
js
mov
mov
insb
shlb
repnz
shlb
repnz
out
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
push
mov
repnz
sti
push
mov
repnz
jl
or
push
mov
adc
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
push
mov
cmc
xor
adc
repnz
or
xor
jl
push
mov
jp
or
xor
jl
or
push
mov
adc
xacquire
pop
scas
xor
jge
mov
xor
push
mov
mov
adc
repnz
cli
push
mov
lds
push
sti
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
sti
push
mov
lds
push
cli
push
mov
jl
push
mov
jp
pextrw
xor
push
mov
jl
push
mov
lds
out
push
mov
jp
push
mov
lds
push
sti
push
mov
jl
push
mov
lds
push
cli
push
mov
add
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
pextrw
xor
jl
push
mov
les
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
ja
mov
mov
xchg
mov
inc
dec
mov
lea
mov
lea
xchg
dec
inc
dec
je
lea
lea
movl
cmp
js
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
je
mov
mov
lea
dec
dec
dec
mov
lea
lea
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
mov
mov
lea
cmp
jg
mov
xchg
xchg
mov
dec
mov
lea
mov
lea
inc
inc
inc
mov
xchg
inc
mov
mov
call
mov
cmpl
je
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
mov
cmp
je
mov
subb
mov
mov
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
mov
nop
xorb
nop
mov
mov
mov
lea
cmp
jg
mov
xchg
xchg
mov
dec
mov
lea
mov
lea
inc
inc
inc
mov
xchg
inc
incl
mov
cmp
jne
xchg
cmp
jns
lea
dec
mov
inc
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
inc
dec
dec
je
mov
lea
mov
lea
inc
dec
dec
mov
call
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
cmp
ja
mov
inc
inc
dec
xchg
inc
cmp
jg
xchg
lea
mov
inc
lea
mov
mov
inc
dec
xchg
mov
mov
mov
lea
push
mov
push
call
mov
pop
ret
push
mov
add
call
call
cmp
ja
mov
inc
inc
dec
xchg
inc
cmp
jg
xchg
lea
mov
inc
lea
mov
mov
inc
dec
xchg
mov
mov
mov
lea
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
lea
mov
mov
cmp
jle
mov
lea
mov
mov
mov
mov
xchg
xchg
mov
xchg
jmp
inc
xchg
mov
movb
cmp
jbe
xchg
mov
mov
dec
lea
mov
lea
inc
dec
inc
mov
lea
mov
lea
lea
lea
xchg
inc
dec
jne
dec
mov
mov
pop
ret
lea
push
mov
add
call
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
call
call
test
jne
mov
jmp
movw
cmp
ja
lea
mov
inc
inc
mov
xchg
inc
inc
lea
mov
lea
lea
xchg
dec
jne
xchg
lea
mov
mov
dec
call
lea
mov
pop
ret
nop
push
mov
add
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
xchg
lea
dec
dec
dec
je
mov
mov
lea
mov
dec
lea
mov
mov
cmp
jle
mov
lea
mov
mov
mov
mov
xchg
xchg
mov
xchg
jmp
inc
xchg
mov
push
call
mov
cmpl
jne
push
call
pushl
call
cmp
js
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
je
mov
mov
lea
dec
dec
dec
mov
lea
lea
inc
inc
mov
pop
ret
add
jne
je
push
cs
dec
and
add
je
jne
addr16
andl
jne
movl
xchg
cmp
jns
lea
dec
mov
inc
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
inc
dec
dec
je
mov
lea
mov
lea
inc
dec
dec
mov
mov
mov
lea
call
mov
mov
mov
lea
cmp
jg
mov
xchg
xchg
mov
dec
mov
lea
mov
lea
inc
inc
inc
mov
xchg
inc
ret
mov
ret
lea
jne
je
add
add
add
dec
out
add
xchg
pop
loopne
add
push
sbb
ror
mov
add
push
ret
add
in
mov
sub
sbb
test
mov
cmp
add
sub
add
ficomps
mov
add
add
adc
xlat
add
sbb
movb
scas
pop
add
sub
adc
pop
cli
loope
outsl
add
mov
add
add
ficoml
add
add
jb
add
add
or
add
and
add
pop
add
add
cmp
push
lea
stos
push
xor
add
add
jo
add
add
shll
jno
add
add
inc
add
repnz
sbb
push
add
add
add
sub
push
add
jmp
mov
pop
repnz
adc
xor
in
subb
mov
lcall
push
inc
add
scas
xorl
jo
mov
jae
test
stos
push
add
add
pop
addl
add
je
xor
testb
cld
add
add
lea
mov
roll
imul
add
push
cmpsl
sbb
jecxz
add
add
cld
fildl
and
je
sbb
pop
add
sahf
rcl
mov
pushf
mov
add
loop
xor
fsubrl
in
mov
mov
loopne
add
insb
xor
jp
aad
mov
inc
xor
add
mov
mov
shlb
int
push
stc
add
inc
fiaddl
test
shll
add
jb
and
add
xchg
jp
pop
mov
ficomps
into
mov
pop
sub
fs
int3
sub
add
jg
sub
xor
pop
pop
pusha
push
push
insl
add
in
clc
aas
xchg
ret
popa
or
mov
add
xchg
ds
xchg
jmp
dec
ror
add
add
sub
jae
xor
sub
push
add
or
cmpsl
lret
add
ja
dec
out
adc
or
add
imulb
aas
inc
add
fucomp
and
pop
pop
lea
jno
inc
ret
jl
xchg
je
add
loopne
sbb
int
add
loopne
shrb
sub
cmp
mov
mov
movb
xchg
jg
push
cltd
iret
loopne
add
add
addl
fisubs
mov
repz
add
sub
testb
add
mov
testb
int3
pop
add
aad
add
add
add
inc
add
fmuls
adc
jno
add
test
add
add
add
sbb
inc
pop
add
stc
loope
mov
and
stos
cmp
pop
jecxz
sub
ret
pop
lds
adc
repnz
or
xor
call
stc
stc
add
js
fmulp
cmp
add
or
push
add
test
roll
aaa
addr16
cmpsb
pushf
mov
scas
add
shrb
mov
add
jne
out
add
punpcklwd
roll
testl
ds
mov
scas
add
jae,pn
repz
add
add
add
add
mov
sbb
add
jbe
popa
xlat
add
cmp
imul
cwtl
inc
fildl
popf
cmpsb
add
loopne
pop
jg
adc
outsb
jge
push
gs
je
add
dec
mov
add
pop
sbb
inc
xchg
sbb
les
push
out
jecxz
scas
test
push
fcmovnbe
lods
stos
mov
cmp
imul
scas
or
sbb
iret
insl
das
pop
ret
sbb
sbb
outsb
stos
js
stc
xchg
mov
sbb
or
repnz
xor
into
xchg
ja
sub
pop
rcrb
fisubrs
fdivl
lds
repnz
dec
adc
mov
mov
xor
dec
fistl
ss
and
jge
int3
movsl
sbb
imul
stos
adc
or
adc
fnstcw
xchg
dec
testl
lret
dec
cmp
adc
out
mov
imul
and
lea
adc
in
clc
aas
push
enter
daa
jl
push
jno
rcr
sub
rcr
cmp
inc
cwtl
ds
mov
movsl
mov
adc
xchg
xor
test
divl
ds
mov
jmp
js
jbe
pop
mov
das
push
add
fdivl
ljmp
mov
aaa
sarb
sbb
imul
addr16
mov
xchg
dec
and
dec
cmp
popf
out
sub
jge
pop
rorl
push
sub
add
jo
xor
xorb
xchg
mov
adc
mov
call
test
adc
inc
ss
mov
cmp
inc
jmp
idivl
or
ss
mov
jne
das
pop
sbb
xor
gs
aas
jne
xor
ja
outsl
fstps
loop
in
stc
xor
xor
dec
out
data16
add
mov
stos
out
out
cli
test
call
in
lret
daa
cmp
out
cmc
fsubs
sarl
pop
sub
pop
stc
ljmp
adc
cmp
cltd
mov
xchg
arpl
sbb
mov
aam
jbe
xchg
mov
cmp
lahf
jmp
cwtl
cmp
mov
mov
pop
dec
sbb
cmp
fsts
outsl
jecxz
cmc
mov
sub
mov
fcmovnb
rcrb
idiv
add
and
dec
adcl
xor
push
filds
repz
aas
inc
flds
dec
mov
mov
in
pop
sub
cwtl
xchg
je
mov
outsl
push
mov
mov
cltd
add
lret
scas
adcb
push
mov
test
lock
cmp
jno
sbb
xorl
add
cmc
repnz
adc
dec
adc
adc
xor
xor
mov
inc
and
movsl
push
jecxz
mov
in
sub
or
jl
pop
mov
mov
push
sbb
iret
fucomp
xor
xchg
stos
mov
ljmp
inc
pop
inc
pop
fisubrl
je
ds
rorb
push
imul
add
repnz
add
fdivs
aam
mov
dec
pushf
xchg
or
test
popa
mov
sbb
add
lcall
add
jae
add
adc
xor
int3
mov
in
in
in
aaa
push
shlb
cltd
imul
fidivrl
dec
or
cmp
mov
dec
mov
mov
mov
and
dec
xor
bound
jl
jns
push
cmp
aad
out
testb
adc
addr16
mov
mov
mov
imul
int3
jle
inc
jb
loope
mov
fisttps
sub
jmp
lahf
into
into
jae
idiv
push
test
or
push
sbb
mov
mov
shll
scas
insl
bound
push
add
loop
inc
cld
je
int3
stc
mov
fsts
pop
mov
mov
mov
movsl
scas
inc
scas
xor
daa
push
sbbb
push
testl
int3
jbe
bound
jbe
fmulp
ja
lds
lcall
hlt
popf
fwait
leave
cmc
jmp
cmp
adc
sub
mov
mov
push
or
jle
add
adc
das
lahf
decl
out
push
and
or
mov
dec
cmp
inc
add
cmp
sahf
push
push
jmp
mov
cmpsb
pop
jae
in
fucomip
aaa
enter
daa
fadd
cmpl
push
push
jno
xorb
xlat
test
rcrb
ds
adc
repz
push
mov
test
add
cwtl
xor
push
cwtl
pop
add
js
mov
dec
push
inc
push
loope
movsl
and
sbb
mov
jl
jnp
cmpsb
pop
test
push
mov
mov
jle
or
sahf
idivl
and
sbb
push
lahf
int
sub
sub
or
inc
adc
lcall
hlt
mov
js
sub
fs
mov
or
pop
jg
je
mov
adc
mov
loop
sub
in
ss
fadds
enter
pop
mov
dec
das
mov
adc
or
xor
cmc
push
xchg
and
pop
dec
pop
outsl
mov
pop
in
adc
add
xor
pop
inc
test
mov
push
shl
mov
in
fcmovne
iret
xor
sar
and
adc
gs
pop
loopne
mov
lods
adc
inc
or
jmp
les
push
xchg
mov
sbb
add
push
xlat
mov
jne
mov
out
stc
jmp
mov
push
nop
lods
jnp
dec
jl
fildl
cmp
lret
test
je
out
jecxz
movsl
xchg
xor
sbb
pop
jae
aas
inc
sti
pop
stos
sbb
dec
insb
es
cwtl
dec
jns
pop
mov
pusha
inc
jne
adc
in
sbb
ljmp
outsb
dec
in
rcl
xchg
loop
dec
or
std
jbe
sbb
dec
or
mov
push
cmpsl
adc
out
out
lret
sbb
and
mov
mov
cmp
push
cmpsb
jle
or
jno
aam
push
cld
ret
pop
cmp
fnstenv
int
shl
call
cmpsl
xlat
adc
mov
dec
and
lods
icebp
mov
mov
sti
js
and
inc
lods
test
shlb
xchg
adc
call
add
lcall
in
clc
out
lods
sub
jmp
test
in
mov
pop
repnz
stos
jae
loop
xlat
outsb
xchg
sbb
sysenter
push
roll
mov
inc
cltd
cmp
mov
push
int
dec
cmp
popf
push
add
mov
pop
shrl
movsb
sbb
test
add
pop
xchg
ljmp
in
or
ja
in
imul
cmp
mov
fucomip
popa
ja
xor
xchg
inc
xchg
inc
pop
mov
pop
dec
insb
push
and
ljmp
out
daa
fsubl
into
jns
jns
xchg
mov
pop
popf
out
cmc
xchg
sub
mov
out
aaa
pushl
cmc
subl
mov
into
cmpsb
jnp
loopne,pn
and
lods
in
cmc
loope
insb
dec
fbld
imul
add
xlat
mov
push
insb
push
popf
std
je
mov
pop
es
stos
mov
pop
mov
imul
scas
sar
pop
push
dec
jge
adc
add
iret
sub
mov
pop
out
dec
hlt
add
mov
inc
mov
mov
push
decl
xor
xchg
and
pusha
cmp
push
out
jo
sbb
rolb
loopne
inc
ret
inc
leave
insb
inc
lea
das
outsb
jbe
call
movsl
sbb
dec
dec
or
fwait
cmp
jl
repz
aad
xchg
push
add
shl
dec
outsl
scas
aas
jle
and
in
cmp
fcmovne
inc
and
in
jne
enter
daa
xlat
ret
loop
adc
sub
mov
cmp
and
add
and
mov
jecxz
arpl
scas
add
pop
fdivs
or
cmp
out
pop
daa
xchg
sub
pop
or
push
loope
adc
movsb
sub
push
outsb
or
inc
adc
xor
arpl
xchg
adc
jns
mov
adc
rolb
push
mov
int
push
mov
fldt
pop
mov
mov
cmp
or
pop
and
adc
jmp
cmp
mov
int
fs
imul
inc
dec
fnsave
ljmp
add
lret
iret
shl
mov
jecxz
into
cmc
int
pop
xor
mov
sar
mov
or
data16
lahf
lods
mov
sub
cli
push
jmp
repnz
mov
enter
cwtl
fisubl
mov
loopne
popa
popa
pop
aaa
not
adc
test
scas
fwait
mov
pop
sbbb
shll
aad
xlat
clc
lea
sub
mov
xchg
sub
movsb
ret
addb
aad
mov
adc
xor
inc
jbe
jp
add
cmpsb
je
or
sub
xor
lea
xor
mov
icebp
adc
push
int
push
neg
movl
movsl
inc
nop
sub
lret
sub
and
dec
dec
shll
fcom
testb
cmp
or
cmp
subl
jo
mov
sti
mov
pop
ss
or
das
xlat
jl
mov
adc
fwait
jnp
ret
call
leave
ds
mov
or
cmpsl
shrb
mov
and
lods
pop
dec
mov
push
add
and
fistl
sub
add
sub
imul
repz
sahf
lods
mov
cmp
clc
sub
inc
ljmp
adc
mov
cmp
inc
xchg
pusha
jle
push
pop
nop
out
setae
mov
jo
fnstenv
or
dec
lahf
pop
jb
sbb
les
push
sub
push
jbe
or
andb
dec
mov
add
ja
sbb
dec
inc
shll
xor
in
jge,pt
aad
lret
mov
mov
icebp
pop
lcall
dec
out
mov
xchg
mov
dec
aam
dec
dec
jle
jne
inc
adc
push
xchg
push
bound
mov
inc
mov
outsb
repz
sbb
inc
sub
mov
pop
addr16
fdivrl
sti
aas
mov
push
imulb
sti
jnp
adc
jle
fstps
in
lret
bound
test
cwtl
fimuls
cld
insl
inc
inc
mov
mov
push
das
mov
add
pop
mov
cmp
jmp
pop
scas
imul
jo
xor
mov
notb
xor
mov
sbb
cmpsl
mov
arpl
lea
inc
mov
or
xchg
sbbl
fidivl
pop
jne
dec
mov
pop
pop
out
aas
ficoms
mov
lds
call
cwtl
repnz
movsb
ds
sbb
jbe
jns
jge
add
aaa
call
insb
jns
xor
push
jl
sbb
push
call
nop
shll
enter
mov
and
mov
dec
fsubrp
push
xorl
cmpsb
sbb
out
enter
daa
inc
mov
adc
inc
cmpsb
sub
pop
int
in
cmp
ds
mov
shll
dec
lahf
out
xchg
pop
dec
and
rcrl
fldt
lcall
pop
dec
lcall
dec
daa
enter
int3
loope
mov
mov
outsb
insb
js
adc
or
inc
pop
iret
mov
movsb
sub
jle
add
mov
dec
in
push
push
adc
shlb
sub
jnp
ds
lcall
xchg
je
sahf
sbb
stc
test
rclb
jg
pop
ja
bts
fs
daa
jnp
std
xor
and
cmp
ja
divw
aam
sarl
cmp
negb
or
nop
push
cmc
xchg
add
outsl
jbe
lret
out
mov
adc
repnz
add
int3
andb
push
lods
xchg
cmpsb
out
subb
in
cmp
or
push
sti
cmp
int
pop
xlat
xor
cmp
pop
push
orl
movsb
imul
mov
movsl
xchg
adc
sub
ja
jb
aaa
shl
iret
ljmp
cmp
push
xchg
cs
stos
aad
aaa
ljmp
add
mov
je
loope
jecxz
shrl
ss
int3
mov
sub
cmp
jns
adc
jae
dec
inc
int3
mov
pop
gs
inc
fsubl
inc
stos
push
add
dec
pop
mov
sub
jo
stos
not
sub
mov
mov
lret
cld
mov
xchg
push
lret
sti
add
mov
js
mov
pop
shl
or
add
mov
data16
add
imul
mov
xlat
mov
mov
cli
or
mov
les
mov
push
adc
mov
decb
rcl
xchg
call
test
lods
lahf
push
popa
daa
mov
popa
rep
clc
gs
push
xchg
addr16
or
xor
aad
pop
dec
enter
inc
sub
js
xchg
cmpsl
lods
add
ss
add
jo
xor
xchg
pop
mov
push
mov
push
pop
sub
jge
sbbl
xchg
xchg
rcrl
or
xor
fwait
mov
insl
pop
add
xchg
jb
jmp
mov
or
gs
xchg
and
add
mov
dec
ja
cmp
loop
pushf
inc
lds
mov
mov
xlat
dec
xor
cmc
mov
add
in
inc
clc
push
mov
xchg
cmp
xor
cmp
mov
sub
stos
cltd
icebp
addr16
es
push
gs
ret
jnp
mov
jmp
testb
pusha
std
stos
jg
imul
inc
shl
jae
and
popf
dec
cmc
lock
xlat
mov
pop
mov
sbb
pop
mov
sub
pop
jl
fldenv
or
ret
mov
push
enter
stos
arpl
cmp
adc
fisubrl
adc
aaa
fisubrl
mov
fidivs
mov
sarb
shl
in
test
sub
leave
inc
add
cmp
bnd
jge
das
inc
sbb
jb
cmpsl
mov
or
lock
lret
jo
jl
pop
dec
dec
mov
or
xor
mov
mov
and
inc
and
add
jns
dec
fnstenv
aas
add
loope
xchg
cmp
enter
daa
aad
aas
cmp
dec
jno
pop
pop
sub
cmp
pop
movsl
fmul
fsubl
les
and
mov
test
and
shlb
stos
jge
ret
pop
jne
enter
xor
xchg
push
cmp
loope
push
rcr
js,pt
dec
cmp
outsb
iret
cmc
xor
shl
xchg
pop
and
and
inc
push
mov
call
loop
pop
jecxz
int
push
mov
pop
mov
hlt
inc
push
mov
sbb
sbb
pop
fiaddl
xlat
jg
bound
mov
inc
mov
int3
notl
arpl
mov
divl
pusha
lret
xchg
rcll
gs
dec
lods
into
mov
push
xor
mov
push
es
add
stc
adc
adc
xor
add
iret
lods
outsb
fdivrl
mov
idiv
je
xor
mov
out
push
gs
and
mov
jne
add
push
in
xchg
imul
std
dec
repz
jnp
xchg
shr
and
mov
ljmp
xor
mov
call
shlb
xor
dec
cltd
fucomp
inc
pushf
jo
fnstenv
popf
je
or
jecxz
dec
pushf
cmp
lea
or
call
mov
mov
adc
mov
lcall
mov
aas
roll
jb
inc
cmovns
inc
inc
sarl
insl
es
imul
repz
mov
repnz
push
jb
xchg
adc
pop
lret
push
inc
mov
lock
and
pop
mov
pop
cmp
aam
int
ret
push
jo
bound
insl
mov
add
fisubl
loope
aad
sarl
adc
mov
fs
mov
pop
fsubrs
adc
rcl
test
pop
fiadds
push
and
add
mov
clc
mov
clc
mov
jle
dec
popa
xor
jo
repz
fsubr
add
mov
push
aad
mov
push
push
push
cltd
fimuls
mov
pop
sbb
test
scas
addb
jg
shll
dec
fwait
rcrl
push
xchg
sbb
add
lods
push
jmp
xor
rorl
es
in
xchg
jae
inc
mov
jmp
xor
fcmovb
ja
adcb
pop
xor
lock
daa
mov
add
jne
fdivrl
cwtl
push
loop
les
jne
mov
mov
mov
adc
and
or
imul
add
push
sub
sub
in
mov
pop
filds
jns
ljmp
jae
mov
mov
pop
popf
jb
xchg
mov
push
sbbl
pop
sbb
sbb
xor
mov
rcll
roll
lods
cmpl
dec
xchg
ret
push
pop
mov
stos
arpl
inc
mov
mov
push
jl
into
ficompl
mov
and
and
jbe
ficomps
add
fld
rcl
test
inc
imul
push
xchg
jbe
addr16
jbe
clc
jp
aas
inc
loope
fisttps
aaa
imulw
add
pop
jl
out
dec
and
mov
xor
psubw
and
and
lods
adc
inc
into
stos
movsb
cmpsb
and
mov
les
push
cmp
bnd
fwait
outsb
sub
xor
movsb
ds
movsl
fistpll
jmp
pop
aad
lahf
sub
imul
fisubs
xor
data16
test
pop
pushf
push
fnstsw
adc
pop
aad
push
inc
iret
loope
sub
fmul
enter
jge
outsb
xor
adc
ret
popl
jmp
sbb
xchg
jg
push
pop
sub
int
sub
sub
pop
cmp
fcomps
loopne
imul
add
bound
test
clc
xor
stos
ja
mov
push
fs
sbb
adc
sbb
fsubr
add
divl
insb
jno
cmpsl
lds
push
sub
cmc
into
xchg
xor
je
outsl
xor
mov
stc
enter
push
out
adc
fs
lods
push
push
pop
mov
pop
push
cli
cmpsl
js
xor
push
jecxz
xchg
jmp
sahf
xor
loopne
outsb
pop
xchg
cmpsl
loopne
sub
das
imul
lods
xchg
int3
xchg
xchg
mov
sbb
in
imul
xlat
mov
inc
sub
or
shr
hlt
in
cs
jno
aad
mov
nop
sbb
adc
clc
mov
mov
cmpsl
sub
jb
lret
or
mov
lcall
cmp
and
and
sbb
aam
push
shrl
inc
ljmp
aas
pusha
sbb
jb
pop
es
or
cmp
push
xor
notb
mov
adc
xchg
cwtl
cmp
xlat
mov
popf
ret
mov
sub
sub
fbld
lret
aad
lahf
sahf
test
mov
xorl
push
enter
repz
xchg
mov
movsb
insl
outsl
inc
scas
dec
ret
cmpsl
shll
or
test
pop
lods
popf
mov
mov
arpl
sub
cmp
test
sub
leave
adc
push
outsb
push
out
mov
clc
fildl
xchg
in
inc
ljmp
pop
sahf
fucom
stos
das
enter
pop
mov
xor
rolb
mov
add
je
cltd
adc
fisubs
pop
sbb
dec
aam
repz
hlt
fiaddl
sbbl
or
mov
adc
fwait
add
add
enter
daa
mov
pop
dec
sbb
or
lret
xchg
ret
mov
iret
mov
pop
lret
push
and
dec
ds
enter
repz
mov
es
clc
mov
push
mov
dec
es
mov
out
jns
je
xchg
iret
sub
pop
sub
mov
leave
fsubrl
mov
xor
rcrl
insb
cwtl
test
jnp
pop
movsb
jle
loopne
in
mov
lods
fbld
sarl
loope
arpl
sub
jmp
push
js
xchg
popf
cltd
add
inc
push
push
jmp
and
dec
popa
sbb
fstpt
scas
pop
in
push
addr16
fistl
xchg
xor
cmpsl
sub
pop
ret
mulb
arpl
jmp
or
or
inc
sti
jecxz
fcmove
pop
xchg
or
pusha
mov
lds
jae
mov
xchg
pusha
dec
leave
dec
sbb
push
mov
jno
js
push
jge
cmp
sbb
in
or
push
push
add
mov
mov
cmpsb
repnz
xchg
loopne
xor
push
add
and
cmp
xor
loop
testb
lods
cmpsb
cmpsb
dec
inc
in
bound
or
rcr
fstpt
scas
or
rcrl
cmp
pop
xchg
sbb
jnp
cli
add
lahf
dec
add
out
aam
aas
push
xchg
add
fists
dec
addr16
dec
rcrl
js
pop
enter
sbb
sub
mov
fdivl
and
daa
test
xchg
int3
mov
xor
popf
das
cmp
je
fnsave
mov
and
push
push
pop
in
int
jecxz
sub
test
mov
je,pn
aaa
imul
sbb
pop
sahf
add
repnz
ja
dec
mov
push
add
movb
loop
mov
ss
stos
adc
test
insb
div
and
sarl
jg
xor
hlt
or
enter
rorb
adc
movsb
outsl
adc
or
jg
daa
adc
test
add
outsb
lods
cmp
adc
mov
psubd
lds
push
addr16
dec
jb
sti
inc
jg
inc
dec
loope
or
cmc
loopne
mov
ficoms
sti
or
fldt
xchg
xchg
pop
in
mov
cmp
sub
xlat
hlt
outsb
mov
sub
dec
mov
cmpb
sub
cs
aam
aad
dec
or
push
lcall
fsubrp
add
jecxz
adc
aas
popf
lea
loop
lds
mov
dec
cltd
adc
jnp
fildl
pop
ret
repz
xchg
sti
aas
pushl
pop
jb
cs
and
mov
rcrl
call
std
mov
sub
add
stos
mov
lock
fwait
in
bswap
dec
outsb
mov
mov
pop
das
stos
ret
in
mov
xchg
outsb
mov
and
cmc
es
push
push
dec
mov
testb
insl
vmovdqa
fwait
lods
or
xchg
mov
push
jge
inc
test
pop
pop
dec
sbb
dec
sbb
sub
jne
mov
or
push
stos
dec
rcr
mov
clc
push
sahf
adcb
nop
lock
pop
adc
pop
dec
cmpsb
pop
stos
push
mov
out
mov
out
mov
pop
add
lds
cltd
dec
mov
xor
dec
mov
pusha
mov
dec
cmp
jb
cli
sbb
insl
rcl
sti
mov
pop
inc
cmp
xlat
push
cmpsb
add
jecxz
add
xor
iret
cli
in
sarb
adc
and
xchg
ja
pushf
aaa
dec
mov
xor
mov
jne
fstpt
inc
mov
xchg
test
addb
jns
int
xchg
lcall
out
mov
fwait
or
cli
jp
filds
mov
insb
xchg
adc
push
and
jne
in
pop
inc
pusha
into
sbb
add
fadds
push
push
cmp
mov
xchg
pushl
fucomi
and
sbb
xchg
pop
sbb
cli
xchg
in
scas
mov
push
mov
bound
fcmove
push
or
ret
out
pop
cli
add
jnp
cmp
inc
rcll
mov
dec
push
jp
arpl
sbbb
fadds
inc
int3
clc
inc
inc
pop
sbb
ficomps
pop
inc
rorb
push
mov
out
fwait
leave
mov
lds
ret
dec
jbe
inc
aas
jge
adc
sbb
xorl
fdivs
pop
jl
add
dec
add
cmpsl
push
je
loope
pop
mov
jo
jns
scas
lcall
cmp
or
in
in
les
in
dec
xchg
in
mov
outsl
sarb
loope
xor
imul
cmp
jno
movsl
in
push
shlb
dec
in
lahf
push
leave
push
mov
add
xor
inc
js
or
minps
sahf
lds
shll
sahf
sbb
push
aad
push
pop
pop
sub
dec
dec
outsb
clc
and
not
js
gs
ds
aas
xor
mov
mov
sbb
push
bound
int
adcb
rcrb
cmp
bound
mov
sbb
push
sahf
test
nop
test
jo
jg
pop
hlt
mov
dec
push
mov
popa
notb
cmp
cmpb
sbb
divl
aam
rcl
cmpsl
cmp
mov
or
dec
into
dec
mov
sub
outsl
repnz
loop
jl
stc
ss
adc
loop
add
xor
pushw
shrl
out
xchg
out
xor
inc
clc
pop
in
mov
loope
in
inc
gs
sahf
loopne
les
rcr
call
imul
push
xor
push
push
xchg
sbb
rcrl
icebp
cmp
xor
ja
sarb
xor
jno
loope
jno
cltd
aad
je
nop
iret
cli
rorb
jle
inc
aad
cld
fsts
jnp
jecxz
pop
mov
lea
xchg
call
cmp
pop
adc
push
mov
xchg
mov
aas
sahf
dec
and
jb
dec
sti
dec
in
and
sub
fsub
push
pusha
xchg
cs
mov
popa
mov
jle
mov
imul
pop
outsl
cmp
mov
cli
mov
ret
mov
dec
mov
jb
es
mov
dec
mov
test
pop
aam
cmp
and
jmp
subb
xchg
dec
mov
dec
in
mov
push
xchg
dec
lods
jae
dec
mov
int
cli
and
loop
mov
jp
pop
shlb
push
jae
mov
jecxz
leave
and
mov
or
mov
dec
xchg
arpl
ljmp
fstpl
cld
stos
or
push
or
push
lcallw
gs
dec
negl
push
xor
xchg
jecxz
mov
cmp
xchg
mov
sarl
inc
push
pop
push
lahf
push
jp
aaa
add
cmp
jmp
dec
xor
cltd
leave
in
inc
mov
mov
lret
mov
pop
inc
cli
push
ja
jo
dec
scas
ds
inc
and
mov
jae
je
mov
mov
mov
out
sbb
popa
leave
and
dec
mov
xchg
gs
pop
xorl
out
jbe
sub
xchg
and
xor
jp
fstpt
insb
outsb
lea
jnp
or
jle
dec
in
rorb
fbld
dec
xchg
mov
xor
iret
and
in
icebp
jae,pn
ret
lcall
orb
addl
push
sbb
pop
sbb
sbb
stos
push
imul
xchg
scas
and
mov
iret
gs
ret
lds
mov
hlt
in
pop
arpl
sahf
inc
les
or
inc
stc
call
loopne
das
lret
iret
int3
jecxz
or
subl
cmp
and
cmp
xor
fidivs
push
push
jns
jbe
sbb
xor
dec
sbb
pop
add
mov
or
add
xchg
movsl
jl
push
mov
outsl
dec
push
push
lret
out
adc
and
add
jns
test
dec
insb
mov
loopne
mov
inc
jnp
inc
cmpsb
lods
jbe
xor
enter
daa
roll
jno
sub
sub
sub
cmp
pop
aaa
repnz
hlt
stc
and
mov
ret
push
mov
add
aaa
ljmp
dec
pop
adc
jns
out
testl
adc
stos
fmul
pusha
adc
add
jae
adc
push
sbb
or
pop
sti
mov
jns
pop
and
mov
int
add
pop
mov
aaa
mov
in
jg
mov
jl
sahf
dec
andl
mov
cmp
cmp
sahf
mov
adc
mov
and
outsl
xchg
enter
jbe
push
add
divl
sbb
shrl
xchg
or
movsb
xchg
ja
out
xor
vcvtsd2si
icebp
outsl
shrl
sti
stc
in
lds
lret
outsl
mov
mov
fisttpll
mov
jno
mov
mov
xor
stos
into
in
and
mov
mov
pop
out
push
mov
and
adc
lea
icebp
mov
repz
mov
jnp
fdivrs
sahf
dec
in
xlat
jb
int3
sub
pop
into
mov
xchg
and
pusha
sub
je
aad
decb
dec
adc
call
popa
je
repz
clc
in
movb
iret
popf
or
mov
sbb
pop
stos
cmpsb
adc
cmp
loope
xchg
pop
xchg
call
enter
insl
aas
cmp
jmp
inc
and
pop
jo
sti
in
or
pop
repnz
std
pop
sbb
xorb
xor
test
lret
es
mov
shlb
int
and
mov
cmp
aam
pusha
rol
inc
sub
insl
and
mov
mov
sbb
lods
mov
fldt
sub
lock
xchg
mov
cltd
or
shl
and
sub
and
push
xor
and
xchg
clc
mov
xchg
xchg
mov
out
popa
lea
jbe
cld
into
pop
out
mov
xchg
or
push
inc
movsl
addr16
loope
add
gs
lahf
push
sbb
pushf
cmp
data16
dec
or
sbb
pushf
sub
xor
std
fwait
xlat
sbb
sbb
mov
sbb
out
incl
into
xor
ret
or
xchg
scas
cs
mov
cld
sub
ja
aad
mov
sarl
xchg
mov
mov
daa
out
inc
adc
jns
push
xchg
xor
addl
and
mov
scas
or
xor
jp
mov
mov
ror
insb
fnstcw
mov
jl
in
std
pop
pusha
add
inc
filds
roll
inc
testl
push
shl
popf
push
dec
and
adc
and
push
sbb
rorb
imul
mov
push
cmp
in
sbb
iret
ret
and
or
adc
insb
inc
push
es
jns
addl
data16
je
xchg
xchg
loop
jns
test
in
adc
ret
sarb
xor
mov
leave
lods
mov
movsb
sbbb
push
mov
gs
sbb
xor
ret
mov
xor
mov
push
cmp
xorb
mov
and
mov
add
mov
out
stos
cmpsb
das
pop
pop
inc
mov
daa
rcrb
mov
sbb
enter
scas
cmp
fcom
ds
movsl
sti
jmp
lret
or
lahf
test
cs
pop
movb
mov
add
loope
xor
pop
jnp
cmp
js
ret
ret
push
lea
cwtl
out
dec
fdivl
sub
xor
scas
cmpsb
rcl
xor
adcb
in
sbb
pop
mov
xor
and
daa
int
test
cmp
dec
pop
cmp
dec
lcall
and
test
arpl
sahf
out
jns
test
std
cmp
push
and
add
mov
sbb
stos
adc
jl
ss
mov
fnstcw
divl
gs
lret
aad
add
or
mov
push
cmc
lods
dec
xor
outsl
mov
cmp
and
movsb
mov
xor
dec
jg
jo
ljmp
movhps
cli
jae
or
out
jg
in
mov
xor
push
shlb
push
icebp
gs
adc
adc
imul
mov
repz
mov
mov
hlt
out
fnstcw
in
mov
push
sub
cmc
mov
jmp
insb
in
cs
mov
aad
jmp
nop
test
jle
je
stos
inc
sti
mov
xor
je
mov
jns
dec
inc
lea
jl
call
aaa
daa
push
pop
inc
imul
les
sub
sahf
movb
movsl
inc
dec
outsl
sub
fcoml
ja
jmp
push
in
mulb
mov
scas
fildl
cwtl
sub
sbb
inc
jo
mov
mov
cld
sbb
test
xchg
mov
mov
pop
adc
sub
add
mov
repnz
aam
xlat
push
ret
roll
push
insl
or
rorl
mov
sbb
add
mov
mov
adc
and
sbb
jae
mov
jne
sub
jne
mov
into
push
repz
fisttpll
push
clc
push
adc
ljmp
sbbb
stos
jmp
mov
out
nop
xchg
xchg
push
divb
sbb
bound
sub
push
add
icebp
popa
cltd
icebp
mov
xor
out
out
stos
faddl
dec
jo
xor
xchg
lret
sbb
pop
shll
mov
fwait
mov
shll
add
pop
jmp
divl
out
ss
xor
xchg
cwtl
dec
mov
mov
addr16
mov
scas
inc
dec
aas
mov
mov
inc
dec
test
jne
xor
mov
fldl
bound
lcall
popa
jns
xchg
cmp
sub
fucom
addr16
outsl
pop
jp
in
test
inc
ret
stos
lret
push
jle
in
insl
in
mov
pusha
lahf
adc
xchg
pop
mov
jmp
add
adc
stos
push
popf
xor
sub
push
sbb
stos
cmp
adc
imul
push
scas
call
xchg
repz
imul
lret
iret
ret
cmp
add
pop
test
inc
lret
or
hlt
mov
inc
idiv
dec
ficompl
mov
jns
test
pop
fimuls
test
rcrb
mov
fistpll
mov
push
repnz
jbe
and
cmp
sbb
mov
and
push
cld
mov
dec
dec
dec
or
push
sbb
jecxz,pn
shlb
scas
aaa
test
cmp
mov
mov
cmpsb
mov
add
in
inc
enter
daa
iret
cmp
jno
out
sub
dec
fistpll
mov
mov
movsl
lahf
cmp
mov
movl
pop
add
fisttps
xor
aad
pop
mov
cs
add
cmp
scas
jns
fcompl
ljmp
and
cmp
rorb
pop
add
sub
mov
cmovo
and
pop
hlt
int
mov
sub
sbb
xchg
call
push
sbb
push
mov
test
mov
jg
or
mov
daa
push
mov
mov
stos
ss
sar
cmp
xchg
mov
lock
or
stos
and
fnsave
pop
into
cmc
push
pop
cmc
add
gs
outsl
vphsubwd
dec
ds
xchg
data16
lods
fsubs
mov
mov
out
sahf
cmp
and
stc
xor
sti
add
decb
xchg
gs
pop
loopne
push
inc
pop
das
enter
mov
imul
into
cs
gs
fcomps
adc
aam
lock
ja
hlt
test
les
je
cs
nop
pusha
enter
inc
mov
pop
fnstcw
je
loopne
jecxz
lret
dec
out
lea
or
pop
cmc
fidivs
mov
dec
scas
cmpsb
mov
pop
fiaddl
inc
fld
inc
push
mov
stc
dec
pusha
dec
je
push
push
test
cltd
push
mulb
aam
cwtl
jecxz
inc
mov
scas
inc
mov
or
fmul
add
mov
push
stos
mov
xlat
pop
xor
sbbl
daa
out
xchg
mov
test
mov
clc
es
outsl
insl
bnd
dec
test
pop
cmpb
sub
es
ss
inc
and
mov
scas
pop
xlat
ficompl
sub
sbb
cli
push
mov
add
jb
lret
jne
and
or
xor
sub
mov
adc
out
push
sarb
loopne
push
div
movsl
jnp
adc
sub
or
insb
ljmp
lock
stc
xchg
test
sbb
mov
fisttps
inc
push
fwait
jmp
pop
push
arpl
cli
add
dec
and
incl
mov
jecxz
or
mov
shll
mov
mov
jb
lahf
ja
add
dec
xchg
jns
out
or
repnz
scas
mov
out
out
dec
addr16
fidivs
mov
std
arpl
jns
cwtl
sahf
xchg
mov
andl
out
push
pop
sub
mov
mov
jp
add
mov
les
jnp
shrl
pop
push
xor
daa
subl
loopne
fistpll
lds
mov
movsb
inc
or
test
push
inc
pop
mov
pop
inc
pop
mov
nop
sub
lods
or
jne
inc
cwtl
imul
lods
push
lret
adc
cmpsb
iret
cmpb
pop
mov
cmp
sahf
int
inc
int
orb
lds
inc
jbe
push
fimull
push
xchg
xor
lcall
outsl
fcomp
sub
dec
rol
jne
inc
mov
xor
xchg
leave
fwait
push
sub
xor
jbe
push
gs
data16
inc
pushf
test
or
lret
jl
sub
dec
mov
iret
pop
xor
xor
scas
push
fsub
and
out
int3
cmp
cmpsb
rolb
daa
jae
xor
jge
enter
daa
into
fildl
jno
cld
pop
sub
cltd
push
cmp
push
ds
or
jae
add
loope
out
pop
push
add
cli
xchg
add
xor
push
push
pop
stos
mov
jecxz
js
adc
pop
inc
inc
jg
push
jmp
sub
sub
and
test
mov
in
mov
cmp
inc
sbb
loope
mov
lahf
jb
ret
push
outsb
pop
mov
sub
sub
pop
ss
setp
mov
push
ljmp
sbb
jle
sahf
xor
jbe
rorb
sbb
cltd
jg
hlt
popa
mov
sub
in
cltd
fildl
adc
mov
cmp
push
cmp
dec
xor
imull
adc
shll
sbb
mov
or
loope
into
fcomps
mov
xor
add
outsl
outsb
sbb
sub
adc
popl
insb
fldenv
jbe
subl
popl
lods
and
xor
jbe
sti
mov
jo
or
cmp
pop
scas
push
pop
dec
je
adc
loop
imul
lret
sub
push
cmp
push
das
loop
sub
lds
xchg
dec
scas
jmp
inc
mov
std
or
in
icebp
mov
cmp
mov
and
fyl2x
sub
je
push
out
jecxz
and
dec
inc
sbb
sub
cmp
xor
push
pusha
adc
xchg
orl
in
jge
mov
or
push
aas
sbb
ljmp
cmp
jae
call
xlat
in
std
cld
mov
cwtl
sahf
rorl
mov
mov
jb
lret
jae
jno
icebp
out
lock
jnp
lock
sub
push
inc
das
mov
pusha
sbbb
mov
call
divl
insl
fsincos
out
movsb
mov
mov
mov
sbb
pop
jo
mov
pop
scas
sbb
mov
testb
outsb
mov
sub
sbb
mov
movsb
nop
push
jns
jb
cltd
int3
jo
cmp
lret
sbb
in
negl
fisubrl
mov
mov
push
sarb
cmpsl
add
cmp
subb
xchg
lea
push
test
mov
mov
mov
push
rcll
xchg
in
fwait
sbb
push
push
push
xchg
filds
push
bnd
mov
xor
mov
in
imul
xor
mov
sub
out
dec
jp
mov
jge
stc
mov
das
lds
dec
lcall
jne
inc
xor
adc
or
nop
jg
jns
and
xchg
xchg
jne
xorl
hlt
sub
sub
addr16
iret
xchg
mov
hlt
enter
lock
fwait
lds
stos
frstpm(287
fmull
stos
insb
xchg
add
jmp
sbb
push
jae
mov
add
mov
iret
mov
dec
and
cmp
movsl
dec
xchg
adc
jbe
test
mov
ret
dec
pop
or
insl
add
out
sarb
inc
or
ljmp
fiaddl
fidivrs
xchg
mov
loope
pop
push
repnz
fmulp
lds
cmpsl
rclb
xchg
repnz
adc
push
nop
cli
in
or
jl
shlb
aaa
lahf
inc
pop
or
cmc
jbe
or
leave
dec
sub
cmp
xor
mov
pop
scas
cmc
cs
cmp
lret
test
arpl
int3
repnz
mov
add
jno
xor
mov
ds
jp
adc
and
jne
fsubs
push
add
xlat
cmp
and
pop
lods
out
ja
fistpl
cmp
frstor
loope
sti
fdivl
mov
outsb
out
push
adc
mov
jb
orb
sbb
lret
aaa
mov
push
pusha
and
js
push
jno
scas
int
out
sub
add
lcall
or
mov
sahf
xlat
sbb
test
lahf
xor
jecxz
xor
and
nop
mov
fs
sub
les
mov
sbb
or
outsb
dec
inc
lret
pop
ror
pop
cmp
addl
fistl
xchg
movb
dec
jne
loop
add
stc
leave
push
aam
sti
lods
mov
sub
lods
cmpsb
pop
add
lods
es
or
mov
in
iret
mov
sti
pop
or
repz
xor
test
adc
inc
or
mov
mov
xchg
jmp
lea
mov
xor
fcmovb
mov
inc
pop
bound
rorb
aad
or
nop
push
pusha
lods
dec
xchg
xor
inc
xor
fcmovu
sub
out
je
sbb
jecxz
mov
orl
mov
sbb
loop
adc
cld
jo
test
pop
and
inc
fwait
movsb
mov
add
jb
into
orl
cmc
and
cmp
add
std
mov
mov
mov
mov
repnz
repz
loop
rorb
add
cmp
shll
mov
aam
xor
jle
lods
es
add
bound
cmpsl
int3
movsb
movsb
mov
mov
test
jmp
xchg
mov
xchg
or
mov
adc
mov
testl
roll
clc
js
sahf
xchg
sahf
inc
sub
add
mov
stos
mov
sti
mov
lods
cwtl
les
dec
scas
jmp
pop
lock
xor
mov
mov
jb
test
movsl
insl
out
out
popl
push
jnp
or
mov
jne
test
xacquire
test
incl
pop
cmpsb
or
in
addl
jmp
cmp
insl
push
xor
ja
dec
add
push
mov
nop
jmp
mov
mov
jne
loop
mov
mov
iret
xor
push
pushf
xchg
pop
jge
addl
out
fcoms
sub
jle
repz
pop
jp
dec
mov
filds
insb
test
jnp
sub
clc
xchg
in
cltd
icebp
pusha
jo
rcr
fucom
xchg
xchg
jmp
and
or
add
int
push
popf
stos
int3
ds
push
aad
stos
xchg
fisubs
iret
cltd
call
imul
push
pop
cmp
push
iret
inc
scas
arpl
mov
xchg
hlt
cmp
add
push
or
gs
sbb
jnp
fidivl
aad
jp
popf
pop
xor
sbb
fcmovb
stos
pop
sarl
fadd
or
mov
movsb
lods
fbstp
filds
jbe
adc
jge
out
sbb
int
or
sub
dec
lcall
xor
out
enter
andl
repz
mov
push
outsl
mov
inc
inc
jo
cmpsb
cmp
enter
daa
int3
test
pop
jno
xchg
test
mov
cmp
cmp
movsl
pop
add
aaa
sbbb
and
add
stos
lods
sbb
xchg
sub
icebp
mulb
popf
lds
js
mov
pop
mov
adc
fsubl
out
inc
sub
inc
mov
lret
rcrb
in
int
bound
sbb
pop
inc
mov
pop
pop
and
xchg
push
je
dec
fsub
hlt
sub
cmc
pop
xor
xor
cwtl
sbbb
push
cmp
sbb
sahf
sahf
jp
test
das
sbb
rcl
push
mov
cmc
mov
xchg
scas
adc
ss
out
fadd
cmp
lret
mov
pop
mov
cmp
es
or
adc
into
sahf
mov
pop
xchg
shlb
jg
outsl
sub
mov
insb
ljmp
ret
add
loope
lods
lea
mov
cli
aas
xchg
stos
xor
push
in
cmp
sti
push
stc
sub
mov
or
std
in
cmp
fdivrs
imul
mov
xchg
scas
sub
ds
dec
xlat
lods
adc
mov
jmp
mov
cs
xor
aad
mov
dec
lock
inc
inc
adc
pop
mull
jecxz
push
inc
sahf
jmp
rcr
popa
call
xor
pop
push
jb
adc
mov
repnz
ret
cld
dec
inc
and
fistpll
pop
dec
jb
add
dec
lds
and
fcmovnbe
xchg
push
imulb
mov
dec
push
pop
cwtl
adc
sub
adcl
and
adcb
push
lret
mov
fbstp
xchg
test
clc
cmp
mov
push
cli
mov
or
sub
insl
cmpsl
lods
push
dec
lcall
mov
pusha
push
stc
lods
cmc
pop
mov
lahf
ret
fwait
push
data16
xor
mov
sub
test
push
or
call
gs
stos
add
mov
xchg
fnstsw
push
popa
add
ret
pop
notb
stos
cmpsl
jg
out
jnp
adc
mov
add
test
fadds
insb
lods
std
cltd
int
stc
xor
mov
jp
jne
aaa
dec
or
mov
popa
lock
sbb
push
rol
mov
lret
mov
fwait
js
push
push
dec
and
add
mov
jae
xor
loopne
or
int3
mov
je
inc
xchg
cmp
inc
mov
mov
stos
pop
mov
cmp
pusha
jb
inc
stos
popf
dec
mov
or
pop
stos
jne
in
mov
stos
ret
rolb
mov
sbb
xchg
daa
rorl
lods
sub
jns
mov
jp
xorb
mov
call
jle
cmp
pusha
or
pop
fistps
adc
xchg
test
dec
dec
inc
fsubrl
test
in
shl
adc
dec
jno
stos
push
push
das
and
jmp
sbb
stc
xchg
imul
xor
in
dec
adc
out
lahf
lods
inc
ret
jne
jnp
inc
hlt
mov
jp
ret
ljmp
push
out
addr16
cmp
gs
pop
fs
ficoms
lds
xlat
rol
cmpb
pop
dec
leave
add
int3
push
cs
les
lahf
jae
push
out
jb
call
or
scas
add
jge
dec
or
and
inc
mov
scas
mov
and
mov
push
cmp
inc
aad
mov
lcall
daa
lret
lret
pop
and
adc
sub
cmp
aaa
ds
cmp
rclb
lahf
inc
dec
mov
jle
shrb
pop
hlt
xor
lods
pop
pusha
add
push
popa
cmp
push
jbe
loope
push
aad
lret
in
je
lahf
dec
insb
outsb
lods
inc
ljmp
mov
xlat
insb
dec
xorb
sbb
mov
and
ficompl
push
ja
fxch
aas
mov
gs
mov
rcrb
movsl
test
inc
and
sbb
mov
jl
sub
iret
loope
mov
sti
imul
and
add
pop
cmp
sbbb
lret
jbe
notb
cmp
lahf
inc
or
cmpsl
into
subl
enter
jmp
loop
pop
xor
aaa
adc
adc
cmpsb
std
add
and
decw
xor
mov
sbb
mov
out
xor
leave
mov
movsl
xor
jp
fnstenv
gs
rclb
fdivs
rcrl
nop
pop
adc
cmpsl
in
xor
xor
gs
loopne
add
sub
mov
mov
xchg
in
pop
jmp
cmp
ret
nop
int3
inc
inc
dec
dec
sub
lret
shlb
je
test
fcmovb
push
push
mov
cmp
mov
mov
jns
shll
dec
pop
adc
adc
pop
data16
inc
test
sbb
testl
inc
and
xlat
rcl
xchg
fdiv
mov
jge
icebp
sahf
into
cwtl
iret
sub
mov
sar
mov
testl
sarb
lcall
lock
fs
mov
pop
sarl
pop
adc
das
subb
insl
mov
and
mov
into
mov
aaa
mov
and
ret
and
pop
and
push
cmpsl
mov
out
cltd
sub
into
test
push
jle
cmpsl
rclb
dec
fisttpll
lock
out
das
xchg
xchg
sbb
jnp
cld
lret
add
mov
stos
xchg
mov
xchg
mov
dec
push
arpl
pop
add
push
cltd
add
jne
popa
inc
mov
idiv
popa
xchg
imul
imul
into
inc
xchg
sbb
lret
or
sbbl
push
out
pop
sbb
add
in
inc
xor
or
in
mov
xchg
mov
mov
mov
pop
xorl
inc
inc
iret
xchg
mov
jl
fs
repz
pusha
jne
dec
fnsave
jp
pop
bound
mov
mov
repz
out
sub
sub
je
cmp
sub
jp
imul
pop
les
jnp
nop
movsl
jle
outsb
push
in
aas
imul
jbe
cmp
xchg
jl
dec
jmp
cmp
es
xchg
in
push
push
lcall
sbb
xchg
inc
stos
jns
loope
std
popa
loopne
in
push
fisubrs
icebp
jnp
xlat
jae
push
out
pop
adc
dec
lock
scas
aas
ret
out
pop
mov
repnz
roll
arpl
dec
test
fnstenv
in
push
jb
add
sbb
jno
push
cs
fidivs
hlt
adc
loope
pop
mov
jle
sub
ja
fwait
movsb
ret
push
jge
mov
jge
clc
fcompl
sub
push
or
sbb
dec
stc
jb
mov
xor
mov
dec
jo
pushf
push
xchg
dec
lods
and
sub
loope
jno
add
leave
or
subl
lret
cmp
mov
mov
movsb
cmp
add
ds
push
jle
and
xor
jne
push
pop
cmpsl
test
pushf
sarl
and
sub
mov
cmpsl
push
mov
and
fdivl
repnz
inc
and
push
push
scas
ss
orb
push
mov
fs
and
jno
push
jp
outsb
int
jnp
sub
mov
xor
push
inc
out
adc
sbb
push
stos
test
mov
out
push
lret
mov
mov
adc
lds
sub
inc
jecxz
cmp
cmp
or
int3
xchg
rol
lea
loopne
mov
out
into
fs
dec
cmc
call
dec
sbb
loop
pop
into
stc
out
fsubr
adc
addb
mov
pop
lods
pop
std
dec
mov
outsb
cmpsb
out
push
out
movsl
pusha
fwait
xor
jbe
in
adc
mov
cld
and
gs
pop
test
pop
lret
adc
xchg
xchg
fadd
ds
mov
xchg
xor
push
sbb
cmp
add
sub
sub
mov
cmp
inc
jne
jmp
pop
xchg
mov
ret
nop
cmpsl
pop
daa
dec
scas
xor
inc
insl
lea
je
insl
jecxz
sub
lea
push
ljmp
lods
imul
pop
inc
dec
inc
aas
neg
sub
pop
or
cwtl
inc
xor
cmpsb
inc
out
inc
add
xchg
ret
test
repz
mov
mov
or
cltd
shll
xchg
hlt
or
std
cwtl
or
cwtl
mov
jge
mov
xchg
ja
adc
or
push
mov
lret
das
out
and
jge
pop
mov
ljmp
cmpb
mov
ljmp
add
xchg
dec
nop
jae
cmpsl
leave
jno
mov
push
pop
into
lods
lret
xchg
adc
in
scas
and
mov
and
sarb
push
in
and
mov
jg
push
test
fnsave
mov
pusha
ljmp
fs
dec
clc
inc
stos
test
out
inc
stc
or
push
and
pcmpgtd
imul
cmp
mov
sbb
mov
jnp
outsl
dec
fcmove
int3
test
ja
xchg
rcrl
out
shll
mov
mov
jmp
push
xchg
test
mov
jbe
mov
lcall
pop
xor
std
jb
mov
sub
fdivrs
mov
frstor
pop
sbb
hlt
ja
sahf
js
inc
into
mov
fldenv
mov
jmp
mov
jne
push
insl
mov
mov
fdiv
movsl
jns
mov
cli
sub
repz
orb
iret
aas
fmuls
outsl
icebp
push
sub
mov
sbb
insb
movb
les
jle
cwtl
sbb
dec
sub
adc
fistl
xchg
or
out
dec
roll
and
popf
pop
js
pop
cmpsb
cmp
xor
test
sbb
or
scas
push
scas
cmp
sub
push
iret
pop
mov
ret
aas
pop
jmp
das
shlb
push
add
sbb
push
ja
push
icebp
pushf
sti
fcmove
in
push
xchg
out
jp
cmp
pop
ret
ficomps
jl
jae
cmc
sar
sbb
shll
aam
out
mov
movsb
dec
cmpsb
jp
int3
mov
mov
insb
xlat
test
call
jg
or
jl
fists
mov
xchg
jo
outsl
xchg
xorb
lcall
loope
inc
cmp
pop
aas
inc
repz
shlb
push
test
daa
leave
mov
mov
sub
mov
cmp
push
lea
ja
repnz
sub
and
sub
aaa
push
and
std
test
cmpsl
mov
xor
xchg
out
lds
add
js
jns
pop
jnp
cmpsb
push
pop
mov
cmp
jno
jge
ret
outsb
jae
mov
sub
sub
fwait
or
sbb
fadd
mov
xchg
or
pop
lock
sbb
mov
mov
sbbb
pop
xlat
mov
fstpl
out
and
in
jne
mov
arpl
jg
lret
inc
pop
add
push
push
aad
add
cmp
notb
or
push
ror
mov
std
or
or
inc
push
movsb
cmc
scas
popa
add
scas
dec
xchg
outsl
leave
cld
jecxz
and
dec
push
adc
scas
aaa
add
mov
ja
inc
sti
adc
test
push
cli
fcoms
xor
dec
inc
in
jnp
pop
sti
sbb
pop
enter
mov
cmp
adc
into
call
les
inc
repz
push
xchg
testl
push
jbe
sub
push
in
cmpsb
jo
mov
in
rolb
fdivs
pusha
aad
pop
xchg
or
cltd
mov
add
dec
je
test
jecxz
int3
pop
fiaddl
lea
sbbl
loopne
pop
daa
pop
js
xchg
std
dec
dec
xor
fistpl
mov
inc
cmpsl
inc
mov
mov
test
xor
repz
sub
iret
shll
inc
divb
mov
add
jp
lods
mov
subl
daa
jae
pusha
xchg
dec
mov
add
movsl
popa
mov
mov
repz
aam
inc
mov
pop
xchg
and
ret
enter
inc
pop
inc
icebp
in
push
lods
ss
adc
or
xor
xchg
movsl
mov
lea
sub
stos
test
movsl
mov
loopne
push
dec
xchg
into
fstpl
clc
fs
xchg
lcall
popa
inc
dec
fcompl
dec
stos
je
loop
movsb
loopne
xchg
inc
xchg
mov
pextrw
mov
enter
test
testl
xchg
js
inc
arpl
test
sbb
xchg
div
sbb
adc
enter
mov
fistpl
xor
pushf
test
icebp
jl
xor
mov
or
mov
in
ss
daa
or
mov
aam
scas
ja
adc
out
inc
jo
mov
insb
decb
adc
jne
inc
jecxz
fcoml
aam
outsl
adc
out
mov
or
out
dec
cs
push
adc
sub
pusha
mov
pushl
xor
cli
jle
mov
in
jne
pusha
fcompl
fistpll
adcl
mov
inc
dec
mov
test
fstps
mov
xchg
jmp
push
or
stos
pop
lock
sub
push
imul
scas
popf
dec
fstl
push
add
lock
push
iret
mov
push
xchg
pop
and
and
imul
inc
fbstp
or
push
inc
dec
inc
jo
mov
xchg
ds
in
int3
xor
icebp
clc
sbb
rcr
cmc
rclb
arpl
and
jbe
gs
push
sbb
jne
pop
jmp
sbb
sbb
add
and
sub
lods
mov
push
xchg
add
push
lods
je
push
sbb
mov
dec
pop
push
push
fwait
inc
jno
xorb
cmpsb
inc
fwait
jbe
dec
xchg
mov
mov
stos
daa
enter
fbstp
movsb
sub
into
dec
cmp
aas
ds
and
inc
ljmp
and
push
xor
insb
jnp
jo
hlt
js
in
pop
mov
fldlg2
loope
aaa
ret
fmul
loopne
sub
outsb
addps
push
test
fadds
push
sti
sub
and
xchg
push
adc
int
mov
testb
int3
xchg
lcall
pop
mov
sub
ret
test
mov
jg
into
sub
jecxz
and
notl
dec
addr16
cmp
mov
loope
sub
cmp
mov
push
sarl
or
shll
cmc
jbe
pop
xor
gs
outsl
test
psrad
pop
icebp
adc
das
xchg
add
lret
mov
mov
sub
enter
jge
cmpsl
add
xor
push
dec
incb
shll
mov
in
or
pop
adc
aaa
imul
repz
mov
mov
sbb
test
fst
mov
xchg
add
jmp
sbb
cs
negb
nop
pop
mov
jp
xchg
flds
pslld
jecxz
lods
pusha
out
dec
lea
mov
push
sbb
das
or
adc
pop
orb
fisttpl
fwait
out
jbe,pt
inc
and
inc
inc
jb
aas
test
pop
dec
and
test
rol
jl
idivb
or
out
mov
mov
decl
inc
imul
lret
or
xchg
jmp
dec
jp
lock
das
inc
xchg
adc
stos
dec
xchg
aam
pop
push
ret
dec
xlat
cli
es
xor
inc
shll
xchg
cmpl
mov
dec
les
mov
movsl
mov
mov
cltd
shlb
dec
sub
xchg
test
out
mov
test
push
or
adcl
clc
lahf
nop
mov
ljmp
pop
pop
mov
cmp
mov
imul
dec
fiaddl
mov
inc
aas
xor
lret
and
xchg
fidivl
dec
dec
jns
outsl
and
out
cmp
pop
inc
sbb
ja
and
fdivs
add
or
std
lcall
or
or
hlt
pushf
xchg
jbe
and
mov
iret
pop
stc
xchg
ja
adc
cli
mov
pop
cmp
mov
leave
fldcw
pushf
mov
mov
mov
shll
imul
orl
mov
gs
int
daa
fbld
mov
pop
rep
pushf
mov
jnp
imul
pop
es
pusha
ja
xor
xchg
adc
xchg
cmc
clc
xchg
jmp
pop
or
jae
call
mov
insl
aaa
sarl
or
shlb
cmp
inc
pushf
mov
in
addr16
aas
ja
scas
add
loop
mov
frstor
ret
es
push
fnstsw
mov
inc
arpl
cmp
inc
loop
icebp
or
int3
pop
scas
inc
out
icebp
cmp
xchg
xchg
xor
int3
adc
stos
pop
and
cld
fisubs
addl
bnd
inc
leave
fcompl
movsb
arpl
push
push
adc
pushf
pop
mov
sbb
mov
sbb
testl
or
into
dec
lds
dec
xor
scas
sarl
das
mov
pop
mov
push
data16
cmpsb
lret
in
ss
enter
daa
mov
cmp
in
jno
jle
sub
out
cmp
jo
ds
lret
ds
setg
loopne
test
mov
xor
insb
js
pop
xchg
in
js
loop
pop
stc
mov
push
or
loope
loop
fdivl
xor
pop
popl
outsb
cmp
mov
sub
jno
push
xchg
xor
inc
mov
das
and
iret
pusha
push
addl
int
or
pop
scas
sbb
rclb
mov
notl
sahf
test
cmp
sbbb
xchg
mov
or
mov
mov
rol
adc
negb
fsubrs
imul
add
lret
dec
rcll
cmp
int3
mov
add
jno
or
xchg
outsl
xchg
pop
loop
xchg
stc
adc
add
push
ss
inc
lods
adc
jp
cmpsb
push
jno
ds
add
jle
xchg
in
push
ja
sti
jns
pop
gs
inc
dec
outsb
pop
daa
cltd
fcoms
mov
les
sub
dec
sbb
sbb
in
test
xlat
call
std
inc
mov
inc
add
jmp
inc
push
cs
cmc
aad
adcb
push
cli
inc
cmpsb
dec
and
jb
loopne
pop
mov
jecxz
cli
adc
arpl
aad
loopne
mov
dec
scas
mov
push
adc
inc
dec
pop
mov
cmp
in
inc
lds
inc
inc
aas
sarl
jae
and
dec
sbb
push
and
ret
adc
mov
std
lea
push
mov
xor
mov
cs
das
std
lret
jl
cli
mov
xorb
pop
vcvtdq2ps
xor
popa
sub
aam
enter
xchg
lcall
cmpb
sbbl
mov
xchg
push
push
mov
dec
and
mov
dec
out
iret
mov
shlb
jp
sub
je
jecxz
stos
push
into
test
cmpsl
clc
fcmovu
xlat
xchg
sbb
repnz
dec
pop
dec
cmpsb
adc
push
push
xchg
push
sub
iret
pop
bound
sbb
add
push
cltd
loopne
mov
mov
test
dec
mov
enter
out
xchg
xchg
lcall
or
add
daa
rcrl
jnp
syscall
inc
leave
pop
add
push
repnz
cmp
dec
xor
xchg
adc
sub
call
scas
sahf
repnz
dec
hlt
dec
ja
xchg
adc
sahf
ds
sahf
std
dec
mov
cmp
xlat
dec
jg
jne
iret
inc
mov
in
in
out
not
jecxz
xchg
lock
in
xor
push
nop
sbb
dec
inc
push
sub
pusha
leave
cli
addr16
inc
mov
xor
insb
pop
scas
jnp
mov
jle
lret
or
pop
cmp
pusha
adc
repz
enter
insb
cmp
xor
mov
xchg
push
pop
insl
mov
xchg
lds
or
adcl
pop
mov
xor
orl
adc
loopne
ret
sbb
mov
stos
arpl
push
test
test
or
inc
or
outsb
bound
out
xchg
in
or
cld
xor
fiadds
stos
lds
and
rorb
mov
lret
leave
push
pop
movsb
out
pusha
mov
jbe
sub
jne
sbb
aaa
fcom
imul
movsb
dec
or
xor
adc
sbb
xor
or
scas
push
call
cmp
sbb
push
cmpsb
dec
dec
adc
sbb
scas
xchg
jae
cmp
adc
jg
cwtl
sub
aad
cmp
gs
dec
movsl
inc
mov
mov
push
popf
and
add
xchg
dec
xor
cmp
das
clc
minps
je
pop
cmp
push
hlt
sahf
loope
mov
fsubl
push
shrb
dec
mov
adc
mov
and
and
mov
imul
push
xchg
inc
sub
xchg
pop
pop
cs
lcall
je
xlat
incl
sbb
loop
dec
pushf
das
test
xor
mov
in
mov
or
mov
fnsave
out
in
mov
ss
in
cmp
daa
sub
cmpsl
ret
cwtl
push
jmp
cmp
imul
cmc
add
pop
xor
iret
mov
dec
mov
fisubs
jno
test
aaa
add
in
data16
mov
fisttpll
cli
jno
cmp
push
xchg
jg
mov
stos
test
gs
scas
loopne
inc
mov
gs
adc
mov
les
out
repz
cmp
xchg
inc
or
cmp
pusha
or
daa
add
sub
shl
mov
in
fisttpl
cs
lods
cwtl
nop
adc
dec
sub
inc
mov
mov
je
aad
popf
jb
data16
lea
into
call
sub
xchg
adcb
mov
add
pop
xchg
and
inc
pop
mov
nop
jb
jno
dec
fldcw
xor
adc
pusha
rcll
sub
xor
pop
cwtl
jbe
cmp
xor
jle
cld
lret
lret
jmp
adc
or
mov
cltd
jbe
mov
pushf
das
jns
mov
sbb
out
addr16
int
nopl
and
cmpsl
lds
mov
push
bound
sti
xor
lds
pop
out
inc
push
aam
sub
mov
lcall
shll
pop
xchg
push
cmc
cmp
cmp
and
inc
stos
inc
xor
dec
std
xchg
pop
mov
push
stos
inc
push
psrad
add
pop
xlat
cltd
pop
adc
xor
enter
ret
int3
xchg
jne
test
jne
xchg
sbb
inc
ror
divb
or
repz
xchg
sbb
push
push
mov
or
inc
adc
clc
or
insl
adc
icebp
mov
pop
add
xchg
pop
dec
adc
mov
xor
icebp
mov
pop
int3
jne
sub
in
ss
out
aad
cld
bound
lods
lds
lcall
sub
out
push
sub
pop
cmp
and
jns
mov
andb
jb
cmp
js
jle
les
pusha
lods
cmpsl
rcr
aad
lcall
mov
jae
and
and
stos
popf
mov
xor
push
out
popa
stos
mov
int3
inc
sbb
pop
add
sbb
lods
mov
adc
notb
ret
test
hlt
dec
xor
arpl
cmp
lock
ret
inc
in
push
ficompl
notl
int3
out
pop
jle
fs
sbb
lds
lahf
jle
loope
adc
leave
lret
movsb
jns
notl
mov
adc
cmp
sbb
popf
jo
xchg
cli
mov
das
loopne
add
jp
jl
jp
dec
mov
push
or
cmp
cld
jo
pop
out
scas
in
jne
and
out
jns
cld
add
test
in
add
enterw
daa
lds
fs
or
sub
xchg
sub
mov
mov
movsl
dec
or
and
lahf
std
push
jp
shl
add
xlat
jne
lcall
pop
in
pusha
js
lcall
jne
push
loope
movsb
push
fmul
dec
xor
cmp
outsb
ljmp
adc
xchg
aas
jo
adc
test
mov
push
mov
mov
cltd
push
mov
mov
pop
lods
inc
ficomps
stc
jns
mov
fstpt
sahf
out
adc
or
dec
jg
icebp
xchg
dec
sub
fs
adc
ss
inc
aaa
cmp
loop
xor
data16
lret
or
addb
cmp
fcmovu
or
in
into
rorl
jb
lret
cmp
xor
and
outsl
inc
les
stc
subl
add
xor
adc
ret
enter
out
cli
movsb
xor
xor
sub
sti
xlat
divb
stos
fcompl
jp
jecxz
gs
mov
rcr
les
shl
in
cwtl
cs
add
dec
cmp
imul
jb
adc
cwtl
xchg
jmp
fucomip
js,pn
ret
aad
in
nop
out
fisubs
inc
int3
roll
je
cs
lods
cs
imul
ret
call
lods
mov
jb
out
xor
mov
pop
cmp
shll
inc
jbe
insl
aas
mov
ja
inc
pop
test
or
shrl
add
cwtl
xor
mov
jle
mov
cmpsb
pop
addl
cmpsl
inc
lret
pop
mov
mov
aas
out
popf
aas
mov
adc
das
cld
mov
iret
xlat
jecxz
loope
dec
ret
neg
andl
fisubl
clc
test
mov
les
adc
jnp
loop
pop
mov
xchg
cmp
pop
or
popa
cmpsl
sub
mov
in
push
push
xchg
and
clc
inc
pusha
clc
push
and
jno
scas
add
pop
mov
shlb
xor
ficoml
test
add
inc
or
icebp
mov
xor
inc
sub
push
push
insb
xchg
cwtl
inc
test
data16
add
mov
fwait
ror
push
shll
add
and
js
mov
or
leave
in
sub
mov
arpl
pop
shlb
dec
add
in
pop
mov
push
mov
xchg
jne
call
ds
mov
or
fwait
sub
jmp
xchg
mov
xchg
cmpl
loopne
push
xlat
les
push
cmp
test
mov
test
fstpl
icebp
jnp
es
jle
mov
in
xchg
cltd
pusha
dec
jo,pt
hlt
jbe
outsb
lods
xor
pop
jg
inc
jnp
daa
jae
mov
rcrb
jg
xor
daa
shrl
xchg
jecxz
out
sub
imul
scas
sub
push
nop
cmpsl
js
pop
and
cmp
xor
push
repz
pop
cld
add
hlt
xchg
ret
xor
inc
inc
jmp
mov
push
insb
iret
jg
dec
adc
xchg
lcall
pop
lods
stc
xor
mov
sbb
push
xchg
mov
mov
jae
jo
test
inc
loope
add
rclb
cmp
sub
jge
mov
aaa
push
mov
mov
jl
mov
dec
adc
fnsave
mov
lock
and
daa
cmp
imul
inc
mov
lds
jmp
jle
je
lahf
daa
les
jb
sub
sub
cmp
shlb
add
and
das
inc
lahf
sbb
loopne
inc
cmp
test
fidivs
xor
jo
mov
pop
or
inc
js
push
aas
pop
mov
ret
loope
mov
pop
sub
int3
cmp
sbb
popf
shlb
or
cli
sarb
mov
shlb
nop
jecxz
mov
ror
adc
dec
pop
sub
jo
flds
ja
push
fmull
icebp
imul
ljmp
mov
cwtl
adc
pop
add
cmc
ss
sbb
cmp
popf
outsb
sub
and
imul
pop
lahf
add
pop
rorb
dec
subb
mov
jno
xchg
sub
and
and
dec
loop
xchg
adc
jg
add
adc
lods
lds
rcll
int
xlat
stos
jmp
add
in
xchg
lcall
into
inc
dec
gs
repz
jno
pop
test
aam
pop
into
push
push
xchg
pusha
les
cmp
xchg
lahf
loop
jbe
ret
mov
movsl
je
sub
xchg
leave
mov
inc
pop
out
adcl
fcomi
xchg
aad
subb
call
loope
fsts
roll
mov
mov
or
call
sub
ja
cmpsb
aas
push
adc
inc
dec
enter
inc
jbe
pop
fstpt
inc
pop
mov
aas
push
or
lcall
and
jae
sar
adc
xor
orb
in
andb
sbb
and
cld
and
mov
mov
or
mov
dec
call
das
mov
jns
mov
lods
add
ret
test
es
adc
dec
jb
cmpsl
ret
neg
mov
sbb
out
mov
mov
fwait
and
pop
addr16
lods
and
sub
dec
test
pop
mov
shrb
pop
xor
pop
xlat
clc
mov
cmpsl
xchg
aad
mov
and
dec
popa
mov
enter
aaa
pop
out
xchg
mov
xchg
movsl
mov
mov
add
dec
cltd
test
xor
pop
mov
leave
push
test
in
mov
imul
sbb
cmp
push
mov
push
fs
add
js
ret
mov
xor
lock
int3
ss
mov
jae
mov
jnp
jbe
test
and
shll
arpl
push
mov
test
jp
sub
push
jne
or
mov
add
jmp
mov
adc
out
out
adc
push
aad
and
jp
imul
outsb
mov
sarb
xchg
out
jle
xchg
jno
je
push
jecxz
fists
push
js
inc
cld
pop
jmp
xchg
and
pushf
push
test
push
popf
or
cld
mov
inc
jecxz
stos
sahf
pop
mov
sbb
push
movsl
imul
add
xlat
jbe
adc
mov
iret
xchg
das
clc
ret
dec
pop
xor
lret
sub
add
or
mov
lret
dec
lcall
mov
and
fisubrs
enter
ffreep
sahf
in
mov
ret
push
fcmove
mov
shufps
sub
pop
xor
ret
nop
sbb
ret
rolb
or
inc
jl
outsb
xchg
dec
subl
test
xor
shlb
push
sbb
cmp
xchg
inc
dec
pop
cmp
sarb
enter
daa
ret
into
sbb
fisubrs
sub
xchg
cmp
bound
movsl
push
fidivl
lahf
cmp
mov
add
pop
xor
hlt
aaa
js
cmpsb
pop
xor
js
mov
les
loop
loope
notb
sub
adc
adc
dec
pop
push
iret
negl
or
cs
xchg
pop
sub
push
xor
mov
ja
stos
pop
stos
ja
lcall
mov
int
sahf
xor
jp
addb
ss
fisttpl
fs
mov
cltd
sbb
cmp
pop
outsl
out
in
jmp
shrl
inc
or
sahf
mov
pop
adcb
add
push
xchg
inc
movsb
stc
out
push
call
mov
popw
cmpsl
bound
into
clc
inc
out
mov
ret
xor
daa
xchg
in
std
clc
inc
sti
xor
sahf
aam
js
loopne
movsl
sbb
mov
aaa
imul
mov
xchg
mov
and
popf
cmp
xlat
in
jne
pop
xchg
sub
sbb
jmp
mov
lcall
movsb
push
jge
inc
rclb
and
push
jecxz
jb
outsl
push
movsl
lea
xchg
jne
dec
stos
fwait
jl
pop
and
popf
mov
dec
mov
rcr
jae
rcrb
xchg
xchg
inc
loope
or
mov
je
in
ret
jnp
hlt
in
and
add
rorl
loope
leave
pop
mov
sub
sbbb
xlat
repz
add
cld
dec
jo
lret
cmp
sub
aaa
cltd
das
fwait
lock
mov
cmp
mov
cmp
cwtl
mov
insl
arpl
cmpsl
ret
mov
out
inc
lods
mov
mov
xchg
and
idivl
mov
jg
ret
sub
sbb
outsb
xchg
lods
mov
mov
in
fldl
dec
clc
mov
xchg
adc
jb
xchg
pop
andb
push
stos
push
pusha
and
xchg
in
push
rcll
jno
ud0
add
ja
cltd
mov
cmp
mov
nop
jle
dec
stos
mov
test
add
movsl
sbb
push
or
shl
pop
test
push
pop
pusha
roll
xchg
int3
mov
xor
iret
bound
repnz
mov
xchg
add
ret
mov
divl
pop
cmpsl
je
inc
mov
lcall
aam
mov
js
dec
or
jne
xchg
push
mov
mov
out
jb
leave
vcvtss2usi
js
xchg
dec
xlat
add
fadds
mov
sub
dec
add
and
jp
repz
inc
dec
and
mov
int
jle
push
jmp
fbstp
scas
mov
dec
push
pop
inc
xchg
popa
mov
push
imul
mov
test
cmp
mov
in
sbb
aam
imul
jnp
out
cmpsb
jecxz
push
stos
dec
adc
pop
or
notb
ret
mov
hlt
sub
sbb
push
xor
icebp
adc
mov
mov
fidivl
sub
int3
test
es
or
mov
lds
mov
mov
sub
push
mov
stos
movsb
sbb
push
cmc
pop
inc
jbe
cli
ret
fnstsw
mov
aaa
aam
xor
add
ficoms
dec
lock
scas
push
movsb
test
add
mov
lahf
and
cmp
cmp
mov
push
cmpsb
pop
adc
enter
daa
ret
cmp
popa
mov
out
lret
rcrb
cltd
leave
repnz
xor
inc
and
jmp
popa
dec
add
mov
lret
jg
pop
pop
xor
js
test
xor
pop
loope
push
fmul
and
sub
push
mov
pop
test
nop
inc
add
sub
andb
bound
pop
and
mov
scas
mov
jbe
addl
movsb
stc
int
jbe
sub
test
ljmp
dec
adc
sbb
insb
aam
fsubs
add
and
jg
cmp
push
jne
lods
out
fs
jmp
cmp
adc
mull
push
jl
inc
inc
popf
cmp
sub
jle
jl
out
and
mov
sub
push
outsl
loop
pop
loop
ss
stc
cmpsb
inc
loope
mov
jae
and
lcall
mov
out
cltd
out
jo
cli
cmp
cmc
and
sti
in
outsl
adc
push
loopne
out
pop
pop
ret
adc
shr
imul
repz
push
or
lret
adc
outsl
sub
sub
mov
cltd
xor
popa
xchg
aad
jmp
orb
cs
add
pop
mov
shl
cli
mov
jb
int3
fsubrs
xor
lock
or
movsb
adc
test
xchg
mov
inc
outsb
xor
mov
insb
jb
inc
push
imul
rcrl
std
rolb
mov
mov
mov
pop
cld
jbe
mov
mov
mov
lock
push
das
jp
mov
mov
inc
lret
mov
into
rep
lods
xchg
adc
push
cltd
lock
push
fldcw
xchg
mov
loope
int
xchg
lret
jno
push
xchg
rclb
mov
test
xchg
mov
cmc
mov
rolb
insl
jb
clc
add
mov
ljmp
xor
stos
std
dec
shr
in
xchg
xor
push
push
test
divps
insl
add
cmp
cltd
repz
sub
mov
mov
xchg
cmpsl
xlat
dec
adc
test
mov
xchg
les
sbb
shrl
or
or
add
fwait
dec
test
push
stos
sub
add
out
xor
popa
add
xchg
push
cmp
std
out
xor
icebp
test
dec
ficomps
inc
xchg
loope
mov
arpl
dec
out
insl
mov
mov
and
out
push
inc
pop
bound
jns
mov
xchg
adc
gs
out
mov
sub
inc
shll
push
cs
mov
sub
insb
push
hlt
int3
jnp
movl
addb
fists
stos
xchg
out
xor
inc
pushf
mov
sub
cmpsl
sub
xor
mov
ret
out
stos
test
cmp
fldcw
subl
in
sbb
iret
push
js
ret
xchg
call
cmp
or
scas
sbb
sbb
gs
lahf
xor
int3
xchg
int3
push
cmp
dec
fidivs
inc
stos
es
aam
aad
pop
pop
lahf
repnz
movsl
rorb
inc
jnp
adc
sbb
xor
aaa
xchg
mov
or
sti
addb
pushf
cwtl
jl
mov
dec
pop
or
xchg
xor
rcrb
scas
imul
cmp
arpl
mov
imul
in
mov
mov
lea
inc
leave
cmc
jno
xlat
push
sub
in
cmp
nop
ds
cmp
and
mov
jmp
mov
sub
add
aaa
fs
insl
push
incb
pop
sub
daa
pop
jae
adc
add
mov
jns
add
cmc
in
sub
jmp
lock
lret
mov
xorb
push
sbb
push
andb
mov
push
xchg
xchg
sub
push
pop
test
ret
push
xlat
aaa
mov
push
sbb
jbe
jnp
movsb
test
or
jg
push
and
and
fisubs
jmp
js
or
lahf
push
aad
out
dec
aas
fmul
sub
mull
and
rcr
cmpl
inc
or
add
xor
lret
pop
loop
pop
mov
adc
in
int3
add
xchg
mov
mov
js
out
cmpsb
dec
cli
jo
xor
xor
xchg
int
aaa
xor
xchg
lcall
movsb
icebp
imul
add
sub
stos
xchg
pcmpgtd
sbb
dec
mov
push
sub
test
pushf
inc
jle
jmp
inc
and
add
add
nop
pop
jle
dec
add
dec
dec
fnstcw
jle
call
sub
fs
test
mov
adc
adc
mov
or
shll
pop
les
es
loop
cli
aas
sub
cmp
int3
jo
jmp
test
jmp
testb
std
ja
movsb
cwtl
sbb
inc
lret
sub
bound
lods
lret
push
jnp
mov
shll
je
das
pop
decb
mov
stos
fisubrs
or
xchg
cmp
insl
xchg
lods
push
dec
arpl
frstor
fldl
lret
pushf
jg
pop
adc
mov
call
in
adc
mov
sbb
and
stos
bound
jbe
push
pusha
sarb
xchg
lahf
jmp
cmp
lods
xchg
xchg
adc
jp
andb
adc
stos
in
std
push
out
mov
mov
push
icebp
repnz
mov
xor
dec
xor
adcl
sub
xchg
push
iret
test
hlt
add
int3
push
mov
or
sbb
fwait
jge
int3
push
dec
jmp
bound
leave
add
push
mov
xor
movd
insl
pop
out
lahf
jecxz
mov
pop
sbb
lods
clc
cli
ja
arpl
dec
sarl
cmpsb
inc
sub
mov
rolb
dec
rcll
jp
mov
or
xor
mov
jns
xchg
mov
xor
adc
sub
inc
adc
xchg
jp
sbb
lods
insb
mov
dec
jnp
test
jle
out
fs
in
scas
pusha
mov
mov
xchg
mov
mov
inc
cmpsl
aaa
data16
push
mov
popf
jle
out
imul
push
add
xchg
stos
not
jo
jecxz
sti
sbb
lret
bound
rolb
mov
push
lods
cmp
adc
call
jl
mov
jge
hlt
rcll
jo
fildl
xchg
mov
repz
push
push
jo
xchg
negb
int3
jle
mov
ficoms
and
out
in
mov
mov
dec
movsb
movsb
xor
shlb
fistpll
mov
pop
aaa
push
outsb
cmp
out
inc
add
jg
jl
adc
adc
push
push
ja
sbb
adc
and
xchg
cmp
mov
insb
inc
cli
jbe
cmpsb
pop
das
jo
xchg
es
daa
ror
cmp
fidivs
in
sub
leave
bound
mul
pop
ds
cmp
jnp
push
lahf
cwtl
lock
jecxz
test
or
mov
sarl
test
loopne
fiaddl
aas
push
and
loope
addb
in
add
push
adc
ficomps
xor
inc
in
sbb
cld
and
and
into
int
fnstsw
pop
sub
test
mov
sbb
movsb
push
xor
jp
push
mov
movsl
mov
fidivl
mov
fists
ss
add
mov
jle
and
test
dec
or
jae
fs
jl
or
xchg
outsl
into
inc
and
cmc
scas
fdivrs
loop
mov
loop
mov
stc
adc
rcll
push
or
ds
int3
data16
cld
rorl
lahf
pusha
imul
cwtl
mov
pop
std
inc
in
ds
sti
inc
in
pop
push
jnp
cmpl
popa
imul
inc
sub
clc
jae
xchg
sarb
sbbl
iret
repnz
mov
nop
xchg
mov
out
dec
mov
aas
lret
subb
cmp
iret
fildll
nop
xor
cmp
sub
rcr
repz
addr16
jecxz
xor
js
mov
cmpsb
adcb
outsb
out
daa
out
lahf
pop
jb
cli
adc
mov
fildl
aas
sbb
cwtl
inc
inc
jbe
mov
aas
int3
cld
sti
jb
jmp
xor
mov
xor
xchg
dec
std
std
push
inc
cld
cwtl
fmuls
icebp
mov
dec
and
stc
sbb
into
lret
test
shll
xor
das
cmp
dec
mov
fsub
mov
and
insl
jnp
push
dec
pop
leave
cmpsl
mov
testl
mov
inc
dec
ret
and
enter
test
or
clc
xor
adc
sbb
cmp
fnstsw
add
xchg
sarl
ljmp
jnp
cli
loop
stos
out
pop
out
xchg
sarl
int3
push
fisttps
sbb
pop
add
add
popa
fldcw
lcall
xchg
movsl
stos
test
lret
outsb
loopne
jg
mov
xlat
outsb
sahf
or
add
push
lock
lret
mov
add
cmp
xor
sbb
or
data16
mov
repz
cmp
mov
addr16
ja
jg
dec
leave
stos
inc
mov
push
decl
mov
sub
jle
mov
xchg
out
maxps
jns
sbb
addl
adc
cmp
dec
push
jp
sarb
lret
insb
hlt
test
jnp
push
push
jle
lahf
es
mov
or
aad
xchg
lea
popa
jmp
mov
inc
jae
daa
jbe
mov
mov
movsl
cwtl
mov
inc
cld
mov
push
popa
and
mov
and
imulb
repz
mov
mov
shll
ret
loopne
movzwl
hlt
or
jne
jg
mov
add
or
movsb
push
fcmove
leave
pop
xchg
dec
movsl
insl
int3
imul
cwtl
lds
bound
repnz
adc
movsb
mov
mov
jbe
xchg
leave
jge
test
sbb
clc
sbb
or
inc
mov
lds
or
cmpxchg8b
dec
xchg
in
in
mov
xchg
inc
scas
daa
xchg
push
and
mov
mov
mov
cmpsb
loop
outsl
in
outsb
fistl
enter
daa
mov
mov
jno
adc
outsl
cmp
and
movsl
jb
cmp
push
and
inc
push
bound
and
negl
pop
iret
push
cld
js
movsb
bound
icebp
addl
daa
clc
dec
loope
dec
mov
iret
je
sub
add
loopne
adc
mov
popf
pop
sbbb
sbb
fiadds
mov
xchg
adc
mov
test
in
sub
aam
cmpsl
adc
ret
push
add
mov
sbb
loope
sahf
rcl
test
jl
jg
mov
push
adc
fs
popa
pushf
ss
imul
jle
lret
jae
or
mov
in
or
jl
and
mov
test
loop
inc
mov
adc
test
add
and
and
lods
dec
loop
mov
sahf
sar
xchg
das
xor
aaa
mov
test
rcrb
jge
inc
gs
sub
loopne
inc
fcompl
push
adc
insl
imul
aam
repz
imul
cmp
nop
cmp
xchg
lret
xlat
loopne
pop
sub
xor
pushf
lcall
cs
aad
jno
nop
adc
dec
ret
imul
sub
mov
jecxz
sub
lea
repz
cmpsb
mov
pop
adc
pop
pop
dec
pop
aad
fldt
inc
std
icebp
mov
dec
jmp
imul
cmp
inc
dec
rolb
and
jg
rorl
orb
jle
cwtl
xchg
test
lock
dec
adcl
ja
mov
pop
es
push
repnz
cmp
pop
sbb
mov
sbb
scas
aam
out
xor
movsb
aad
insl
bound
mov
mov
dec
jnp
lods
cmovne
data16
and
arpl
mov
lret
clc
pushf
sub
lret
loopne
lcall
push
out
dec
fucom
movsl
mov
xchg
adc
stc
ljmp
pop
movsl
cmp
out
adcb
or
and
jnp
and
arpl
cmp
xor
sbb
mov
pushf
fcmove
dec
inc
and
test
xor
sbb
arpl
shrl
push
sbb
rcrb
xchg
inc
bound
incl
xor
dec
bound
into
pop
pop
in
imul
nop
fdivrs
and
fimull
or
push
mov
mov
mov
xchg
mov
inc
mov
push
punpckldq
inc
je
jbe
mov
adc
inc
out
sub
xor
addr16
dec
cmp
pop
dec
mov
mov
mov
dec
dec
jle
inc
fwait
in
repz
aas
jp
pusha
xchg
lods
jmp
mov
inc
cwtl
push
ja
rcrb
loope
sbb
dec
popa
stos
fstl
adc
mov
adc
imul
or
pop
scas
adc
cli
iret
jb
cmp
sti
iret
pop
inc
xchg
fdivp
push
adc
arpl
in
or
pop
dec
inc
inc
data16
fidivrl
loop
movsb
adc
push
pop
jb
ficomps
inc
lds
push
shlb
xchg
repnz
or
movsb
inc
insl
mov
jns
jbe
pop
xchg
xor
sbb
aaa
sub
shrb
or
repnz
add
jl
dec
add
roll
push
xor
sbb
mov
scas
push
es
xlat
cmp
jne
outsb
push
mov
add
push
lods
scas
enter
daa
mov
cmp
jno
push
sub
adc
cmp
sub
clc
add
and
inc
lock
xor
pop
mov
xor
mov
pop
divb
js
aas
pop
xor
push
jg
loope
cmp
sub
icebp
pop
outsb
mov
lcall
add
repnz
xor
or
xor
sahf
call
cwtl
sub
jl
es
jns
or
inc
push
pop
push
clc
mov
psrlq
pause
push
sahf
fs
and
orb
mov
xor
mov
inc
sbb
ss
dec
pop
fdivr
push
in
negl
xchg
mov
mov
and
call
ds
cmc
cmp
mov
outsl
pop
jnp
loop
add
stc
adcb
fmull
add
data16
bound
das
lods
pop
mov
pusha
cmp
or
xor
cmp
mov
gs
adc
loopne
fdivrs
pop
ds
sub
dec
dec
inc
imul
mov
mov
pop
inc
into
sbb
jmp
sub
arpl
pushf
inc
imul
aad
xchg
nop
jmp
push
dec
and
std
fldenv
das
je
cmp
adc
mov
sbb
fmull
pop
and
and
adc
mov
lcall
pop
and
test
inc
xor
aas
or
divl
pop
fimull
jne
and
mov
rcr
jae
negb
sub
std
insb
fwait
addr16
dec
femms
mov
mov
sbb
and
lret
arpl
mov
ficomps
mov
mov
xchg
das
divb
dec
mov
outsb
dec
cmp
fildll
fwait
es
shrb
dec
loopne
push
dec
imul
and
xor
push
sarb
std
inc
inc
mov
out
loopne
sahf
repnz
sub
push
sub
xchg
and
fisttpll
jg
clc
in
data16
dec
pop
add
popa
inc
pop
xchg
pop
push
push
and
in
mov
push
orb
fisubrl
inc
cltd
iret
in
xor
jecxz
mov
lahf
rcrl
scas
andb
gs
mov
roll
push
pop
fwait
or
stos
push
fstl
add
in
call
test
xor
repz
jb
xchg
mov
mov
pop
adc
insb
ja
inc
aam
stos
add
icebp
mov
pop
cmp
dec
jp
jne
and
jge
lds
out
int
sbb
fdivrs
jns
adc
xchg
inc
push
mov
mov
hlt
shrb
xor
inc
jp
and
insb
lret
jnp
push
lcall
mov
pusha
test
xchg
xor
pop
jmp
enter
sahf
clc
push
cmp
outsb
popf
repz
mov
mov
mov
inc
sbb
hlt
sti
imul
lcall
sarb
sarl
test
fcmovu
pop
jge
fwait
hlt
mov
mov
add
or
lcall
fidivl
cltd
adc
aas
lock
pop
divb
and
inc
cwtl
sbb
repnz
pop
movsb
rorl
push
cmpb
cmp
inc
jge
mov
daa
aaa
mov
or
push
sbb
repz
xor
in
sbb
push
adc
jo
lahf
pop
scas
in
inc
and
call
cmp
mov
cmpsb
call
popa
addr16
daa
mov
jb
jno
jecxz
sub
jb
cmp
adc
movsl
subb
lahf
cmc
jno
push
or
xchg
add
fadds
or
negb
roll
outsl
ljmp
dec
dec
nop
fsubl
rolb
pop
cmpsl
sti
adc
outsl
xchg
add
jg
das
sbb
popf
mov
daa
pop
and
dec
outsb
push
mov
and
stos
pop
movsl
jl
lcall
lret
mov
mov
sahf
pop
push
jnp
leave
xchg
rolb
stos
mov
lods
jge
add
push
adc
pop
cmp
mov
jmp
and
sarl
dec
cmp
xor
or
insb
into
jmp
mov
add
jmp
loop
cli
sbb
adc
imul
jmp
mov
sub
subl
pushf
cmpsb
lret
cli
cmp
movsl
xor
push
outsb
in
jg
xor
dec
in
inc
lds
loopne
test
pop
inc
adc
jmp
xlat
repz
mov
xchg
das
cmp
aad
xlat
pop
cmp
sub
out
fldenv
lock
jmp
out
mov
aad
mov
movsb
dec
adc
add
cwtl
adc
je
inc
sbb
and
xrelease
or
movsb
out
pop
mov
cli
dec
xor
pop
aas
pop
push
xor
inc
or
clc
aas
test
jecxz
dec
mov
ss
shll
pushf
cwtl
negb
aam
adc
mov
inc
xchg
mov
in
mov
cld
dec
test
ret
mov
jmp
dec
mov
mov
cmp
pop
ret
outsb
lea
es
push
sub
icebp
xchg
dec
dec
mov
xor
mov
stc
insb
sti
lods
cmp
cmpl
add
lds
add
and
cmc
jp
test
and
insb
dec
fcmovu
xor
xchg
mov
sub
cld
clc
popa
pop
les
sti
push
out
dec
adc
push
pop
out
gs
add
lock
add
mov
mov
les
xchg
mov
sbb
nop
pop
or
mov
push
push
fldcw
add
xor
aaa
xor
cmp
or
xchg
push
mov
xchg
jb
fisttpll
scas
pop
cwtl
mov
mov
mov
inc
test
mov
mov
jp
out
fbstp
lods
and
jns
addl
xor
out
xor
sub
cs
push
jp
loop
mov
movsl
cmp
aas
jnp
and
in
mov
fucomip
pop
dec
xchg
push
aam
jmp
rcl
sbb
inc
xchg
std
xor
popf
sbb
mov
js
stos
ret
movsl
and
fwait
es
stos
js
test
mov
push
enter
xor
or
xor
in
repz
mov
jl
in
and
arpl
or
adc
and
push
sbb
sub
outsl
pop
and
jne
lds
mov
pop
push
mov
repnz
leave
stc
adc
movsb
pop
js
push
iret
leave
or
inc
ss
xor
addr16
aaa
dec
jns
or
jno
jl
mov
shlb
xchg
mov
stos
and
xlat
cmp
inc
adc
xor
stc
pop
cmpsb
imul
in
and
lods
enter
daa
mov
pop
ss
jg
sub
cmpsl
clc
cmp
movsb
fsubl
out
mov
adc
std
push
fcmovne
xchg
test
adc
xor
inc
dec
int
icebp
pop
inc
lock
js
imul
pop
scas
jecxz
push
stos
jmp
test
cmp
sub
clc
adc
dec
cmp
push
cmp
sbb
outsb
mov
push
movsb
ret
dec
pop
and
pop
and
lea
or
std
sbb
data16
stos
push
mov
push
js
add
sub
xor
pop
mov
fs
stc
adc
daa
std
ss
push
pusha
cmp
jne
fcomi
sbb
jmp
ror
js
push
sbb
or
jmp
into
into
sub
xor
subb
pop
loop
and
stc
lock
add
andb
out
lods
std
jmp
mov
jo
cli
outsl
mov
mov
inc
out
dec
gs
inc
negl
cmp
adc
les
imul
test
repz
or
scas
fcomip
cmp
std
xlat
popf
in
sub
inc
mov
fwait
aam
jmp
orb
sub
jmp
lock
mov
adc
mov
fxch
mov
je
popf
sbb
xor
sbb
sar
cmc
and
pop
ds
int3
dec
and
adc
inc
xchg
js
inc
imul
fbstp
lahf
pop
dec
xor
nop
jbe
scas
negb
orb
fiadds
sub
loopne
adcl
adc
inc
mov
mov
ret
mov
inc
ljmp
and
mov
add
push
ret
std
xor
push
insl
pop
jl
dec
dec
popa
cmpsl
cmpsl
mov
xlat
mov
rcrb
shrl
dec
ss
or
out
xor
mov
rolb
sub
dec
add
mulb
das
xchg
inc
fstl
jecxz
arpl
sub
int
pop
ljmp
pop
pop
cmpsb
cmp
sbb
xchg
fnstsw
push
cmp
loop
pushf
push
insl
cltd
cmp
jno
mov
movsl
and
jl
and
adc
mov
sbb
shll
in
or
repnz
fwait
push
out
xchg
add
push
loope
decl
in
mov
or
adc
in
jnp
xchg
sub
loop
popl
mov
push
loop
ja
push
test
adc
inc
sbb
pop
mov
mov
dec
inc
popf
pushl
xor
mov
pusha
mov
mov
jmp
xchg
xlat
xor
mov
sub
sub
sbb
jp
push
aad
es
into
insb
mov
mov
jle
jmp
in
ljmp
or
stos
jmp
fimuls
jae
es
rclb
popf
inc
test
cmc
push
cmp
pop
jle
push
sub
ljmp
popf
sub
invlpg
popa
iret
mov
ret
ljmp
stos
inc
arpl
inc
rorb
nop
mov
inc
jecxz
xchg
ficoml
ds
int3
adc
add
test
jbe
fdivrl
pop
push
repz
jo
adc
push
push
pop
popf
jbe
adc
sbb
outsl
ret
jle
lods
cmp
sti
jl
pusha
sub
mov
push
fnstenv
xor
repnz
scas
mov
in
js
lcall
inc
lds
cmpsb
out
gs
or
enter
daa
mov
push
sub
mov
cmp
cwtl
ds
bound
and
fdivrl
test
inc
mov
test
nop
pop
aad
imul
js
in
pop
in
pusha
lret
dec
push
loope
fbld
sub
cmp
and
and
xor
movsl
rcl
sbb
iret
xor
and
sub
int
je
sub
push
pop
mov
aas
dec
push
pop
sbb
mov
jl
xorb
sahf
dec
or
fisttpll
pop
imul
out
bound
ljmp
xor
aam
fcoms
fdivs
inc
pop
neg
sbb
mov
cmp
sar
or
or
icebp
xor
dec
das
loop
andl
cmp
stc
stc
data16
inc
in
lods
in
sub
cmpsb
fdivr
out
mov
inc
xor
mov
jle
or
imul
sbb
adc
int
imul
repz
aad
xchg
cmp
hlt
xchg
lock
cmc
mov
inc
enter
fiaddl
aad
sahf
lock
jl
mov
inc
mov
xlat
je
dec
add
inc
and
lea
int
mov
nop
jae
push
cmp
or
fucomi
repz
mov
inc
sbb
dec
inc
test
aas
out
and
test
shlb
mov
xchg
popa
dec
lock
jg
inc
mov
fisttpll
sub
mov
lret
mov
movsl
mov
and
mov
xor
add
xchg
xchg
mov
cmc
mov
and
es
and
ljmp
mov
shrb
lods
adc
mov
cmp
mov
adc
sbb
inc
pop
movsl
rclb
sbb
sub
mov
mov
xchg
cmovb
inc
lods
fnstsw
clc
sahf
push
mov
ljmp
xchg
pop
push
out
stos
xchg
mov
push
pushf
fcoml
adc
maskmovq
data16
inc
aad
adc
inc
mov
test
pusha
dec
jecxz
mov
mov
int
in
jne
mov
or
add
fwait
xchg
std
loopne
pop
gs
cmpsl
verw
lcall
add
stos
lcall
jns
fidivs
sub
rcrl
pop
ja
sbb
and
mov
mov
dec
and
jne
fcomp
mov
test
out
push
mov
jns
call
xchg
mov
sbb
jo
adc
and
mov
ja
jp
jl
mov
cmp
jnp
or
in
scas
shlb
cmp
sub
mov
lods
in
jmp
jmp
push
out
push
andl
push
push
dec
stos
test
jecxz
sbb
xchg
add
mov
scas
pop
fimull
adc
imul
out
hlt
popa
ret
push
pop
and
hlt
addl
inc
or
mov
or
inc
loopne
fimull
jb
add
loopne
add
xchg
adc
call
das
rclb
adc
scas
pop
hlt
leave
out
movsl
movsb
jb
xor
sub
jbe
push
jo
xor
mov
or
ret
cmp
sbb
mov
loope
jo
loop
scas
sbbb
cmp
ret
scas
inc
inc
push
shrb
jno
nop
in
icebp
xlat
movsb
enter
daa
mov
push
cmp
and
xchg
adc
inc
movsl
xchg
pop
mov
lahf
push
pop
push
xor
leave
add
subb
push
dec
rcrl
cli
sahf
js
addr16
push
movsl
pop
loope
pop
xchg
fsubl
mov
sub
push
outsb
inc
ja
adc
add
push
es
jge
mov
out
mov
stc
and
add
stos
insb
popa
int
jb
sub
xchg
xor
lcall
sbb
sbb
sti
xchg
test
cmp
movsb
cltd
mov
push
orb
pop
adc
addr16
jg
pop
fsubr
jns
negl
adc
std
outsb
lds
pop
xchg
movsb
scas
dec
xchg
in
cmc
pop
adc
outsl
dec
loop
adc
stc
pop
test
adc
mov
or
and
mov
nop
pop
cli
aad
pop
xor
fldlg2
rorb
sub
adc
loopne
add
mov
or
cld
addl
out
lahf
dec
repz
mov
sbb
jmp
mov
sbb
daa
mov
icebp
and
fdecstp
push
cs
and
dec
sahf
xchg
inc
inc
popf
scas
or
cmp
push
mov
push
lret
xor
mov
jp
enter
and
or
lods
dec
push
dec
imulb
pop
cmp
inc
mov
xchg
sub
xchg
dec
and
adc
and
dec
std
or
jo
cmp
and
mov
int
cld
into
jae
lret
pop
push
dec
mov
daa
adc
cli
ds
jb
or
mov
lcall
es
mov
dec
inc
ret
add
inc
cmp
jle
insb
lods
jnp
add
call
or
sbb
cmp
bound
mov
sub
shlb
test
mov
mov
insb
in
mov
inc
frstor
pop
addr16
dec
adc
ljmp
dec
pop
cld
bound
jne
mov
xchg
imul
cs
orps
add
stos
scas
hlt
xor
push
dec
mov
stos
aas
sbb
test
out
arpl
mov
and
loope
cmp
fwait
push
lahf
push
ret
add
xchg
mov
or
lds
xchg
enter
adc
adc
pop
leave
dec
cmpsl
ja
stc
insl
dec
jbe
xchg
inc
dec
sahf
in
mov
fstpt
rorb
dec
dec
jne
jecxz
mov
mov
aaa
bound
cwtl
jns
stos
mov
sbb
adc
repz
pop
xchg
daa
sbb
inc
jp
push
push
mov
cmp
insb
jbe
jnp
and
jle
lret
mov
fimuls
mov
jmp
hlt
jp
jae
mov
jnp
or
push
mov
in
and
imul
pop
scas
push
xchg
push
popf
or
adc
sbb
dec
cmp
ret
lcall
mov
arpl
sbb
inc
or
and
xchg
sbb
std
cmpsl
and
jmp
mov
in
fimuls
loop
shrb
repnz
inc
movsb
std
insl
push
mov
or
jge
loope
sbb
jmp
or
mov
pop
dec
xlat
sbb
xor
test
test
adc
mov
addb
cmpsb
hlt
fisubl
in
fcomps
daa
mov
pop
fidivl
cs
sub
aas
xchg
rcr
cmpsl
mov
fbld
mov
push
loope
push
fiaddl
test
push
mov
sub
push
mov
pop
mov
jge
pop
imul
push
mov
loope
add
shll
sub
outsb
mov
or
mov
inc
mov
adc
std
sbb
sbb
jge
mov
inc
lods
pop
pop
mov
or
or
ret
fidivrs
sahf
xchg
loopne
test
ja
adcb
jg
in
mov
sahf
insl
mov
mov
fs
push
adc
push
sbb
mov
cmp
cmpsb
inc
fcomip
pop
test
lret
xor
xchg
xchg
les
shrb
mov
into
ja
cmc
pop
dec
stc
xor
jb
mov
fcoms
stc
adc
sub
daa
cld
sahf
xor
lods
mov
test
cwtl
out
cli
or
xor
shr
xor
js
dec
lcall
mov
cs
imul
stc
sub
mov
mov
cmp
es
lcall
xchg
pop
mov
pushf
sub
cs
sub
rorb
xor
dec
std
fistpll
inc
mov
stos
fnstenv
je
stos
push
jecxz
mov
lea
lea
out
call
mov
mov
adc
and
loope
push
fisttpl
adc
decl
inc
daa
sbbl
and
or
dec
lcall
shll
out
addr16
in
scas
xchg
cwtl
cmc
imul
mov
aas
sbbl
or
lret
mov
push
mov
jl
lock
xchg
das
push
aad
mov
arpl
ret
stos
dec
es
dec
insl
int3
je
dec
cmp
cmpsl
mov
loop
icebp
push
add
lods
out
popa
mov
cmp
popf
and
add
xlat
sub
mov
mov
or
inc
sbb
adc
xor
adc
popa
mov
xchg
pop
cmpsl
mov
stos
fs
jp
mov
out
leave
sbb
lgs
add
dec
rcrl
cmpsl
mov
dec
xchg
mov
mov
imul
cmp
cmp
push
gs
add
mov
and
imul
xchg
cmpsb
in
jle
xchg
pop
mov
xor
jns
mov
ja
mov
dec
imul
mov
dec
and
jne
push
stos
mov
or
out
sub
sub
stos
cmp
movl
es
ljmp
and
jp
out
mov
pop
imul
in
jle
daa
test
shll
mov
fildll
xor
out
ficompl
jae
jo
push
or
popf
mov
push
mov
cli
add
mov
and
enter
jo
scas
int
jne
in
test
mov
test
ret
in
nop
aaa
das
hlt
sbb
xor
cmpsb
mov
mov
or
add
inc
pusha
lods
adc
mov
insl
xchg
scas
stos
pusha
int3
jle
pop
loope
adc
sub
cld
jg
std
adc
push
or
movsb
mov
push
or
mov
and
sbb
test
dec
les
xchg
cmp
jl
in
dec
inc
je
push
andb
push
lea
jo
jae
scas
inc
jmp
and
cld
push
dec
mov
inc
jb
mov
in
mov
icebp
push
daa
mov
pop
jns
inc
pop
imulb
outsl
call
insl
movsl
mov
xchg
push
nop
cltd
and
daa
bnd
dec
add
divl
sbb
mov
pop
loopne
add
pop
stos
lock
jo
loope
enter
sub
outsb
push
pop
adc
mov
mov
fmulp
pop
sbb
inc
mov
rorl
push
mov
in
int
sbb
rcrb
and
push
fs
mov
shlb
insb
ljmp
cmp
jecxz
leave
sbb
mov
or
lea
aas
cmp
ss
jg
cmp
popa
lahf
inc
negl
jg
lret
inc
shrl
ds
cmc
push
or
jno
cmc
out
jb
mov
inc
cmp
call
test
xchg
add
aaa
xor
xchg
push
mov
cli
cmp
shlb
pop
mov
jne
mov
jno
lds
jne
clc
xor
imul
or
jo
dec
xchg
ljmp
cmp
jno
cltd
addr16
dec
inc
lds
inc
fwait
lods
jmp
jp
jg,pn
ret
aad
pop
jnp
or
sub
inc
ret
jp
fldcw
push
and
outsl
out
nop
into
hlt
fiadds
push
pop
rcrl
adc
xchg
dec
int3
add
fstpt
pop
pop
jg
fldl
dec
mov
test
jae
jle
inc
dec
adc
add
shll
mov
std
push
sti
push
cwtl
mov
cmp
mov
rolb
and
or
or
mov
ss
lock
subb
subb
sub
aam
push
ret
cmp
adc
bound
jne
cmpsl
mov
ja
test
push
icebp
sub
jg
push
mov
mov
pop
cmp
jg
mov
pushf
mov
sub
call
mov
cmp
int
repz
lahf
clc
dec
je
xchg
leave
es
ljmp
out
push
fsubs
out
aaa
adc
xchg
stc
mov
movsl
unpcklps
add
sbb
xor
jle
mov
mov
rorl
jno
test
inc
addl
mov
sub
and
fwait
and
mov
add
mov
jmp
xor
xor
clts
fsub
push
jge
xchg
lretw
aam
fwait
mov
aas
add
adc
cltd
lea
xor
movsl
mov
int3
shlb
and
mov
insl
das
out
pop
pop
lret
inc
int3
jns
push
mov
cmp
push
stc
and
sbb
adc
mov
lcall
pushf
dec
jnp
movsb
fdivrs
js
in
push
cs
daa
add
filds
xchg
jmp
or
pop
jae
gs
push
int3
push
int3
popf
add
jle
insl
push
cmp
xor
and
mov
jo
xor
push
sub
and
or
pop
nop
push
hlt
fs
arpl
js
inc
adc
mov
xchg
lcall
lret
out
xchg
add
jge
pop
adc
aad
sarb
out
icebp
jns
shl
push
mov
cmpsl
lods
je
dec
hlt
pop
movsb
adc
push
pop
cmp
jbe
shlb
sub
dec
sbb
es
or
mov
add
add
clc
dec
mov
push
push
gs
ja
sbb
jge
pop
fsts
and
aaa
jecxz
jbe
add
push
xor
add
in
cmpsb
push
scas
enter
daa
mov
or
inc
xchg
sbb
cmp
mov
movsl
stos
mov
and
icebp
ret
lahf
scas
loopne
push
cli
cmp
movl
aam
pop
pop
cmp
js
gs
jmp
jecxz
loope
mov
fsubl
mov
jbe
imul
xchg
lahf
mov
inc
test
xor
cld
sbb
mov
xor
mov
or
sub
cwtl
xor
lahf
adc
mov
out
sbb
loopne
flds
mov
dec
pop
inc
jg
outsl
mov
mov
pushf
fs
cld
insl
adc
cmp
sbb
movsb
neg
cld
pop
lret
test
ret
cmp
testl
cmp
repz
adc
mul
loop
jmp
adc
add
add
and
jno
lods
andb
mov
push
jno
outsb
iret
or
out
adc
mov
xchg
cmp
gs
push
leave
loopne
xor
pop
pop
cmp
adc
stc
inc
imul
cmp
pop
xchg
lods
sbb
sbb
pushf
jl
xlat
fcoms
nop
mov
repnz
loop,pn
jl
dec
or
call
jl
inc
cs
jp
je
push
xchg
jecxz
pop
inc
xchg
xchg
mov
cmp
rol
sahf
shll
mov
pop
xlat
dec
mov
push
pop
and
or
inc
lock
lret
cmp
mov
and
imul
mov
push
or
imul
mov
inc
adc
dec
mov
lret
insb
or
push
xor
mov
push
mov
das
rdpmc
jmp
add
mov
sti
adc
ret
enter
mov
mov
xor
cmpsl
mov
ret
mov
add
add
jle
int3
and
cmp
mov
arpl
sub
dec
les
movsl
sbb
sbb
clc
mov
mov
clc
inc
dec
popa
jecxz
stos
pop
std
shlb
inc
add
xchg
inc
pop
adcl
ljmp
sbb
mov
jmp
xchg
fsubrl
fisubrs
lods
shl
mov
push
fwait
push
sbb
push
stos
icebp
add
xlat
mov
ljmp
mov
xor
sti
or
xchg
in
iret
aam
mov
repnz
sbbb
sbb
sbb
dec
dec
jge
inc
push
aaa
and
inc
jp
scas
jp
jne
pop
xlat
mov
jecxz
out
out
mov
jns
cltd
pop
xchg
into
sub
orl
sub
adc
das
addr16
fbstp
mov
add
mov
xlat
jnp
or
iret
stos
in
pusha
ret
fbld
js
jmp
adc
lahf
sub
cmp
popf
add
les
js
push
stos
jne
cli
and
and
sbb
push
mov
inc
outsb
scas
xchg
push
jae
jb
inc
adc
popf
iret
push
lret
ret
push
pop
decb
inc
arpl
cmp
or
notl
sub
xchg
pop
test
int3
lods
push
mov
aas
hlt
fidivs
sbb
js
inc
std
dec
clc
mov
cli
xchg
movsb
sahf
jns
push
test
loop
jge
xchg
daa
sbb
add
mov
insb
lret
adc
call
dec
and
in
push
dec
pushl
mov
dec
jg
lret
cmp
or
mov
cmpsb
jge
adc
lea
enter
daa
mov
daa
cmp
jb
out
and
cmp
push
mov
movsl
mov
mull
mov
lahf
into
sub
push
int
adc
js
mov
mov
xchg
jne
cs
out
sub
and
sbb
sub
pop
and
in
adc
insb
mov
or
in
cmpsb
xor
and
pop
dec
push
mov
test
mov
call
pop
push
and
lcall
test
lcall
jp
and
jp
test
outsl
mov
mov
dec
mov
fidivrs
cmp
xlat
adc
notl
rcrb
rcrl
cmp
faddl
or
stc
into
and
mov
je
xorl
push
stos
cltd
loop
popa
cltd
stc
cmp
scas
adc
insb
movb
in
mov
lods
or
lea
fdivr
mov
xchg
out
insb
and
sbb
mov
pop
sub
insl
cmp
inc
notb
loop
inc
imul
les
push
push
sub
sbb
xlat
jae
xlat
pop
dec
dec
sub
mov
enter
imul
push
sub
inc
xchg
adc
and
dec
sbb
imul
lret
push
stos
arpl
lea
repz
xchg
shrb
call
sbb
scas
dec
adc
sbb
and
pop
lds
inc
or
aas
add
pop
jb
inc
and
call
sahf
and
or
rcll
dec
divb
mov
movsb
nop
push
mov
arpl
mov
add
jp
dec
lret
fcmovne
sub
cmp
mov
lock
das
out
out
mov
mov
test
adc
es
fisubrs
jno
dec
sub
pop
cmpsl
mov
mov
push
inc
sub
fisubrl
mov
cmpsb
and
mov
push
je
xchg
pop
fidivs
and
adc
test
sub
push
rcrl
clc
lds
jl
inc
dec
icebp
ljmp
push
pop
test
test
out
std
and
xchg
xchg
cmpsl
psrld
mov
push
push
jp
xchg
jmp
xchg
mov
test
in
cwtl
xchg
mov
jge
stos
sarl
mov
fwait
orb
dec
add
add
repnz
dec
cmp
sbb
pop
or
xor
xchg
add
das
mov
jmp
mov
mov
imul
out
dec
inc
adc
sbb
ja
dec
xchg
sbb
jne
testb
bound
add
xchg
cltd
rolb
sbb
dec
sub
or
cmp
andl
int3
sub
xor
xor
xor
jle
negb
in
or
jno
ffreep
scas
mov
jmp
and
jae
sbb
dec
popf
sub
mov
mov
shrl
loopne
test
shrl
imul
repz
mov
sti
iret
leave
jl
ret
rcrl
das
data16
cli
mov
arpl
cmp
or
jb
outsl
inc
fnstsw
rclb
notl
ficoms
aaa
repz
rcrb
cmpl
cmp
aas
push
clc
inc
clc
jbe
addr16
js
popf
sbb
aad
pop
iret
test
stos
cmpl
adc
orb
jbe
sub
mov
stos
jl
jo
loop
scas
fldl
and
cmpsl
cmp
push
push
lods
xor
xchg
montmul
cmpsb
add
loope
sub
mov
loopne
test
sub
sub
dec
pop
cmp
ds
dec
movsl
mov
in
xchg
lahf
in
jp
push
mov
adc
xor
enter
sub
js
sahf
inc
pop
addr16
push
out
loope
notb
fdivrl
les
sub
outsb
das
loop
adc
inc
in
cltd
popl
push
jae
pop
lahf
test
and
or
and
xor
sbb
lahf
sub
shll
popf
mov
in
push
imul
sbb
sti
adc
cmpb
jg
or
mov
dec
jmp
sub
in
ret
or
cmp
xchg
sub
mov
mov
pushf
lock
lea
or
jnp
into
add
cmc
cmp
divb
lret
clc
pop
outsl
xor
negb
adc
sub
arpl
add
inc
push
lods
dec
fldcw
xchg
data16
aam
sub
pushf
xor
add
sarl
gs
push
loopne
mov
dec
adc
add
and
mov
xchg
xor
sbb
adc
jl
push
jle
sub
xor
pushf
dec
loop
jmp
imulb
test
or
fcompl
daa
dec
jns
mov
cld
xor
push
mov
cmp
pushf
invd
cltd
orb
das
in
mov
pop
and
adc
int3
dec
lea
fcmovu
add
push
dec
inc
inc
or
aas
mov
outsb
das
dec
jbe
clc
and
xor
rcrl
xchg
popf
std
dec
mov
cwtl
loope
xchg
pop
xor
inc
cld
movsl
stos
cld
lret
dec
pop
mov
int
or
jo
das
int
mulb
aas
jae
aam
data16
out
movsb
es
insl
push
push
daa
cmpsl
mov
xor
mov
add
xchg
std
sbb
mov
cmp
inc
mov
std
add
or
sbb
lods
fidivrl
mov
cmp
test
arpl
add
das
xchg
xchg
mov
fdivp
mov
adc
push
pop
push
ds
stos
and
int
pusha
sbb
xchg
into
mov
rdtsc
sarb
mov
shll
mov
adc
dec
out
out
outsb
push
sbb
xor
xor
or
mov
fwait
mov
xchg
push
icebp
xor
add
or
push
and
insb
xor
in
jo
xchg
push
mov
fs
pop
mov
jo
icebp
ja
mov
xchg
inc
cmp
xchg
mov
push
jno
dec
jne
pusha
jne
cmc
fdivl
movsb
jg
jmp
sti
jns
push
cltd
xchg
fs
subl
sub
push
sbb
gs
sub
pop
push
cmp
add
and
jle
and
in
xor
inc
xchg
sahf
cli
pop
jmp
sub
loopne
inc
push
adc
adc
push
test
stos
pop
or
sahf
daa
mov
pop
ret
dec
or
jl
adc
out
iret
sub
xlat
ret
sbb
je
hlt
inc
xchg
arpl
mov
or
in
sub
inc
pop
ja
fidivrl
xchg
or
enter
repnz
dec
sub
xor
pop
mov
mov
pop
dec
movsb
mov
pop
push
inc
lods
out
jbe
pusha
pop
jge
xlat
sbb
aas
orl
add
je
cmp
fwait
push
push
test
jno
cltd
jo
test
mov
nop
aad
fwait
and
push
ja
dec
inc
scas
mov
hlt
in
pop
rcll
and
sub
cmp
jno
jbe
sub
and
sub
or
push
inc
in
movsl
mov
mov
or
pop
push
jae
push
add
mov
xor
mov
pop
jl
lea
cwtl
cmp
cmpsb
cmp
xchg
loope
dec
vmovaps
sub
sbb
outsb
xchg
rcrl
jb
add
and
mov
pusha
cs
subb
int
pop
fbld
clc
js
and
repnz
mov
push
xor
lods
into
xor
sbb
mov
rcl
mov
sbbb
test
test
sti
scas
jg
pop
push
adc
inc
xor
out
jnp
adc
cmp
dec
fidivl
lret
or
xchg
cmp
adc
or
push
and
cmc
add
xor
mov
repz
rcl
test
std
adc
cmp
add
test
mov
adcl
out
push
push
cli
pop
fbstp
jae
mov
sti
jbe
pop
push
add
xchg
sbb
lds
add
je
lret
adc
add
fpatan
lods
cltd
ljmp
xor
dec
push
dec
xlat
xchg
cmp
mov
repz
clc
or
aad
ja
nop
jns
xchg
test
flds
dec
iret
jecxz
dec
jb
pushf
cmpsb
dec
lea
mov
sbb
xor
mov
pop
dec
js
lock
or
lret
inc
inc
mov
mov
lret
dec
in
lahf
inc
and
stos
mov
divb
mov
cwtl
pushf
cmp
mov
xor
addb
fs
mov
jp
mov
add
pop
das
lods
pop
mov
mov
pop
or
andb
aad
insl
dec
jecxz
dec
and
into
cmpsl
mov
xor
mov
btc
in
mov
inc
inc
mov
sbb
insb
rcr
loopne
sub
enter
sub
out
pop
fisttpll
or
push
ljmp
push
pop
mov
stos
xsha256
cmpsb
push
out
ret
pop
and
push
adc
dec
seto
pop
cltd
cmc
xchg
mov
push
int3
cmp
xchg
shrb
pop
mov
sbb
bnd
jmp
xchg
or
xchg
nop
fwait
loopne
ret
push
xchg
push
popf
add
sub
ret
incl
sub
xor
aaa
push
in
mov
lret
mov
pop
xchg
sub
ja
add
dec
sub
inc
rcll
add
jnp
fisttpl
pop
cmp
jne
push
dec
mov
mov
jns
jle
ret
dec
stc
xchg
das
in
cmpl
add
cltd
testl
adc
jp
aas
mov
clc
jne
jnp
sar
jle
inc
popa
in
add
xchg
xor
add
aaa
xchg
jno
or
shll
jae
in
push
fcomps
popf
jns
jns
push
rclb
and
push
into
add
push
fs
clc
scas
mov
mov
adc
xchg
and
ret
push
pop
mov
lods
push
arpl
imul
or
push
mov
fisubrl
arpl
insl
sarl
out
ficomps
lds
push
xor
repz
cltd
leave
sub
pop
movsb
aas
call
and
int
jge
dec
or
aaa
add
cmc
push
add
int3
clc
jl
push
je
jno
dec
push
icebp
cld
pop
xor
lret
scas
fwait
jge
and
addb
cmp
sbb
in
inc
outsb
dec
enter
daa
mov
fnstsw
push
push
je
pop
sub
int3
out
cmp
lods
push
jns,pt
fisubl
pop
cmp
and
shrl
cltd
loopne
xor
subl
js
es
in
lock
mov
cmc
cmp
sub
mov
test
std
mov
cmpb
mov
inc
mov
and
pop
push
mov
dec
adc
daa
pop
addr16
fwait
outsl
lea
pop
push
push
mov
pop
sbb
lahf
add
lsl
mov
imul
mov
cmp
dec
adc
sarb
cmp
or
div
aam
movsb
lret
js
cmp
imul
scas
into
leave
jl
cmc
leave
out
ljmp
fnsave
mov
jp
xchg
mov
mov
lods
sbb
jl
jle
lahf
out
mov
jbe
dec
in
in
lods
jg
sti
and
icebp
mov
loopne
popl
adc
fsubrs
scas
add
push
xor
mov
sbb
push
xlat
aam
mov
mov
sahf
xor
and
outsb
pusha
dec
aad
mov
add
out
inc
and
adc
mov
mov
and
lahf
and
and
mov
rclb
mov
ljmp
int
inc
push
and
inc
pop
mov
aas
filds
dec
fs
and
jns
sarl
outsl
clc
std
cltd
sahf
push
cwtl
push
and
in
rorb
aad
cld
sti
repnz
sub
xchg
mov
mov
lock
jmp
mov
stos
mov
lods
cs
or
ret
add
ret
es
ss
dec
sbb
push
movsb
mov
pop
xchg
adc
push
sub
mov
dec
dec
lods
mov
cmp
sub
mov
mov
pop
push
or
fnsave
in
xchg
add
ret
jle
popa
aas
subss
push
mov
xchg
pop
sbb
push
jmp
pxor
add
js
sub
inc
xor
xor
mov
shrb
sbb
test
cmp
sbb
es
or
aas
xchg
aaa
push
add
inc
cs
jmp
xor
and
pop
bound
icebp
or
mov
pop
out
addr16
aam
dec
sbb
aad
cmpsb
cmpsl
jbe
in
mov
cmp
scas
cmp
jmp
bound
xor
xchg
cli
jae
or
out
out
outsl
das
sub
cld
pusha
or
xchg
push
push
sbb
insb
arpl
jnp
dec
push
jle
pop
fxam
jmp
lock
xor
xchg
inc
dec
imul
inc
rcrb
jecxz
dec
push
fwait
dec
fcomps
movsl
and
push
je
test
and
dec
popa
imul
int
pop
or
jbe
ret
iret
out
je
stos
cld
mov
hlt
dec
arpl
ds
and
orl
adc
inc
pop
je
push
xor
pop
in
pop
sti
adc
fdivrp
aad
lds
mov
scas
repnz
repnz
hlt
sub
lahf
flds
push
in
xorl
mov
sbb
lods
testb
push
adc
jl
dec
into
dec
loopne
jns
aam
mov
out
inc
jo
add
or
push
es
push
or
push
cmpsb
mov
sub
sbb
mull
mov
add
inc
inc
xchg
jno
pop
push
sahf
dec
daa
cmp
cmc
inc
movsl
int
and
sti
outsb
lahf
dec
cmp
sbb
test
movsb
bound
imul
pop
lret
js
dec
mov
and
ret
push
mov
loope
addr16
jle
imulb
imul
mov
xchg
sub
fdiv
stos
push
icebp
xchg
adcb
sbb
cmpsl
pop
mov
inc
fisubl
dec
mov
int
insl
lods
sub
xchg
negb
outsb
ljmp
mov
xchg
sbb
jg
sahf
or
imul
notb
test
mov
ss
int
sbb
mov
jecxz
ret
out
stos
notl
rcrb
cmp
cwtl
call
into
lods
hlt
adc
nop
out
xor
sub
shlb
scas
stc
push
push
adc
pop
pop
add
gs
lretw
lods
add
das
out
mov
cli
insl
insl
xor
repz
sti
aam
sar
cmpb
pop
fnstsw
sti
pop
push
pop
mov
adc
cs
jecxz
mov
cmp
inc
sub
dec
sub
sbb
ret
sbb
cmp
sti
adc
mov
dec
popf
test
push
pop
shll
imul
pop
pop
nop
das
jbe
dec
xchg
dec
push
inc
xor
outsb
in
leave
fwait
push
mov
mov
call
sbb
inc
pop
cmp
popf
adc
dec
dec
in
fistl
sbb
inc
fadds
inc
ja
jecxz
jle
mov
dec
fstpt
jne
mov
outsb
idivb
int
inc
imul
pushf
mov
mov
or
cmpl
push
or
mov
lds
mov
lds
das
push
cli
mov
fs
repnz
fcmovnb
xchg
addr16
es
push
fldt
in
dec
sbb
cmpsl
mov
ja
fiaddl
icebp
lods
mov
xor
and
inc
inc
inc
pop
pop
sbb
addb
test
jecxz
mov
loop
push
int
imul
mov
mov
ljmp
scas
pop
push
sbb
in
cmp
out
mov
mov
mov
cmovle
pop
sub
out
mov
ljmp
xlat
aas
dec
xorb
fildll
cmpsl
xchg
insb
sbb
add
cltd
loope
or
shrl
ds
and
pop
jle
incl
mov
gs
in
xchg
pop
int
inc
scas
sub
or
pop
mov
daa
pop
dec
push
jge
inc
add
mov
push
cmc
rorb
sub
jne
dec
and
out
inc
lds
repnz
push
adcl
out
cmpsl
in
sub
mull
adc
fidivrl
xorl
insb
into
pop
aaa
jnp
subb
push
arpl
xor
pusha
leave
inc
pop
filds
or
scas
aas
roll
jae
mov
jmp
mov
mov
movsb
stos
mov
push
and
ret
and
imul
das
scas
sbb
push
aad
adc
adc
mov
sbb
hlt
divb
inc
and
fmuls
pop
in
inc
fnstcw
jmp
int3
inc
fistpl
fisubs
lahf
mov
mov
cltd
rorl
leave
push
lea
push
sub
push
xor
pushl
add
jge
out
sbb
fidivs
andl
or
jmp
add
cmpsb
scas
jl
adc
adc
mov
sti
xor
and
scas
pop
pop
mov
cmp
sub
inc
pop
leave
imul
push
imul
nop
cmp
mov
cmpl
and
xchg
cmp
mov
bound
nop
shl
lahf
imul
sbb
scas
cmp
xor
jp
cs
jmp
js
lcall
push
pop
shl
sub
sub
sti
inc
outsb
mov
fwait
call
jge
pop
andb
sbb
adc
and
add
int
outsb
je
sbb
ss
and
push
mov
repnz
sbb
lds
sbb
dec
loopne
xchg
jno
mov
inc
ja
xchg
stos
fwait
fs
rcll
ss
sbb
pop
ljmp
push
ret
mov
xchg
rorl
out
inc
or
pusha
jmp
push
inc
fnstenv
aaa
push
cmpsl
outsl
mov
shl
in
push
mov
int
push
adc
imul
dec
dec
pop
lods
ljmp
out
es
cli
mov
and
in
cmpl
sti
subl
negb
loopne
mov
pop
sarl
sub
in
dec
les
push
repz
test
pop
mov
enter
cmc
sub
hlt
mov
hlt
fadds
inc
data16
aad
or
cmc
mov
inc
dec
stos
sub
repz
cmp
jecxz
cmpsl
adc
movsl
lret
scas
sub
call
cwtl
sub
pop
out
popa
sti
adc
sbb
ror
pop
hlt
pop
sahf
inc
pop
iret
out
xchg
fistps
jb
adc
push
inc
inc
and
adc
rcr
aaa
push
idivb
std
std
out
adc
mov
int
mov
std
adc
mov
push
and
mov
cmp
das
dec
lods
test
sbb
aam
stc
and
and
cs
in
insl
add
push
dec
adc
popf
mov
or
repz
paddd
mov
pop
xchg
pop
mov
jns
mov
push
push
shrl
push
test
shll
nop
dec
daa
fldl
daa
clc
in
push
pop
xchg
andb
popa
insl
jns
pop
decl
cli
stos
fsubrl
out
in
addl
push
mov
dec
jg
insl
or
push
fisubl
mov
dec
jmp
lods
jl
fcomps
sbb
sbbb
xchg
pop
cmp
push
jge
pop
add
jns
add
in
adc
mov
pop
enter
cmp
cwtl
pop
mov
shr
mov
out
pop
pop
les
ja
call
inc
cwtl
xor
mov
ret
dec
add
je
fs
out
and
fistpll
shll
rolb
mov
sub
repnz
mov
jae
jp
mov
mov
mov
jnp
jg
jle
pusha
in
frstor
fs
fbld
ljmp
add
push
sub
jae
mov
popf
out
push
mov
repnz
daa
fwait
sub
push
mov
mov
pf2iw
adc
adc
inc
iret
movsb
push
mov
hlt
jno
cmp
cmpsl
mov
mov
push
pop
orl
xchg
data16
daa
int3
cmpsb
jo
pop
mov
mov
mov
push
xchg
mov
in
loop
leave
in
movsb
loopne
sbb
std
xchg
int
jge
or
sbb
push
dec
or
je
add
mov
dec
mov
leave
pop
xor
fcmovnbe
mov
cmp
fwait
and
xchg
cmp
dec
push
mov
cmpsb
push
jp
negl
daa
mov
dec
cmp
shrl
shr
out
mov
movsl
fildl
and
mov
mov
test
mov
pop
jmp
icebp
xchg
sub
sahf
arpl
dec
fists
mov
mov
ror
sub
into
cmp
and
rorb
ret
sbb
add
and
jmp
sub
pusha
mov
push
sbb
cmp
or
loopne
test
outsl
test
cld
jg
aad
mov
pop
pushf
mov
insb
fsubs
xlat
adc
add
cmp
cmp
notl
lret
inc
shl
loop
adc
or
insb
pop
into
jb
imul
xchg
add
mov
sub
stc
test
adc
lret
xor
shlb
push
mov
xor
and
ror
shlb
jp
in
out
push
lret
sti
xor
add
gs
mov
movsb
pop
lock
adc
xchg
andl
repz
daa
into
sbb
cmp
xlat
xchg
dec
adc
loope
pop
mov
lahf
call
fldcw
xchg
mov
jecxz
in
cli
dec
push
pop
lock
pop
lret
rcr
arpl
sub
and
out
das
test
adc
xchg
push
movsb
pop
mov
pop
mov
shrb
jnp
fcomi
loope
pop
xchg
xchg
mov
out
xor
adc
aas
mov
aas
clc
dec
leave
insl
shlb
pop
shrl
aam
test
mov
mov
xchg
mov
or
subl
jmp
jne
out
mov
adc
lock
cmp
rclb
jp
mov
cmp
push
daa
or
jbe
dec
push
pop
sbb
inc
cli
cmp
in
jle
test
mov
mov
pop
leave
repnz
cwtl
push
scas
shrb
lock
sub
aaa
mov
push
push
cmc
jecxz
clc
daa
out
xchg
rcll
ljmp
cltd
pop
stos
int
stos
lret
loope
out
dec
cmp
aad
jl
outsl
cmp
rcr
cltd
sar
cmp
pop
jno
mov
push
xchg
add
push
test
rcrl
scas
insl
mov
or
inc
pop
fwait
pushf
xchg
push
and
add
xchg
pop
jg
subl
or
test
jge
faddp
mov
loopne
mov
pop
or
ja
pop
out
hlt
push
std
mov
xor
mov
jmp
jne
lret
lcall
pop
mov
cs
jns
xchg
jne
test
adc
sub
in
sbb
addr16
jp
xchg
movsl
mov
repz
insb
movsb
push
jnp
inc
adc
push
shl
add
fbld
movsb
mov
jg
mov
mov
imul
push
movsb
push
in
add
push
xchg
sbb
loopne
stos
lcall
sbb
aas
adc
scas
dec
pop
rclb
mov
adc
imul
in
mov
hlt
mov
cltd
xchg
inc
sub
push
xlat
int
add
xchg
mov
inc
add
aaa
or
call
jbe
sarb
ds
sub
add
adc
imul
jbe
or
sbb
push
addr16
add
incb
xor
sub
push
jge
pop
xor
fsubrl
pop
mov
xor
cs
sub
les
jp
cmpsb
adc
fmulp
ret
enter
daa
scas
sbb
ficompl
jno
inc
aas
sub
mov
mov
add
ljmp
cmpsl
test
loope
sti
roll
test
pop
aas
popa
dec
js
daa
sub
loope
push
push
iret
adc
sbb
fdivrl
mov
ret
gs
outsb
adc
outsb
shrb
dec
cmp
ljmp
jmp
adc
int
sbb
cmc
pop
xchg
or
mov
jae
sbb
mov
sahf
icebp
cmp
sub
inc
jg
cmp
mov
mov
mov
adc
adc
jbe
ss
pop
sub
hlt
in
not
jp
lret
add
cmp
sbb
into
push
adc
cmc
in
inc
xor
adc
outsl
add
xlat
stc
cmp
adc
adc
mov
lea
mov
or
out
sahf
cmp
or
in
pop
inc
sti
loope
jno
lods
in
gs
mov
pop
les
cmpsl
cvtps2pi
mov
fdiv
mov
xor
test
push
xlat
rclb
pop
mov
dec
int3
add
cs
jno
aad
movsl
pop
nop
rol
dec
mov
push
inc
outsb
pop
sbb
je
sub
stos
sub
adc
lods
xchg
lds
push
xchg
clc
adc
mov
ljmp
mov
mov
aas
pop
andnps
sahf
rorb
pusha
and
idivl
jns
cwtl
testb
sets
dec
mov
cwtl
mov
xor
add
cld
cmpsl
jae
lret
in
outsb
mov
mov
jecxz
adc
pop
dec
or
mov
aam
cmp
es
aad
rclb
add
mov
mov
out
mov
xchg
push
and
adc
add
sub
mov
mov
icebp
pop
push
push
and
fstl
xchg
clc
bound
fcoml
nop
cld
fsubl
pop
pop
push
data16
stos
mov
in
daa
xchg
js
inc
push
push
xchg
mov
imul
xchg
je
cltd
or
xor
push
pop
mov
int3
lret
mov
in
push
imul
mov
sbb
jg
sahf
jmp
or
aas
inc
fwait
lret
adc
ret
dec
mov
add
xchg
mov
pop
scas
inc
or
loopne
in
xor
xchg
sub
je
mov
shl
cmp
cmp
out
sbb
push
mov
mov
cmp
mov
pop
cmp
fisubrs
jmp
pop
xchg
jns
pop
out
in
xchg
es
sub
xchg
add
add
call
outsl
or
sub
adc
insb
punpckhbw
cmp
add
ss
pop
fs
repz
fistps
pop
cs
insl
into
sub
decb
cmpsl
lahf
push
mov
jo
int3
stos
or
fs
sbb
lea
scas
stos
push
pop
push
stos
mov
adc
loop
iret
bound
ret
sahf
pop
mov
shl
pop
pop
jae
jle
adc
cmpsb
repz
iret
aam
inc
push
sahf
loope
scas
push
arpl
add
add
jne
fimuls
ja
rcl
push
repnz
mov
adc
mov
sbb
sti
adc
aaa
rclb
add
jns
jl
jb
dec
pushf
sbb
push
pusha
imul
sbb
jo
testb
rcr
in
mov
inc
or
xlat
cmpsb
xchg
les
enter
daa
scas
cmp
or
xlat
xchg
xchg
cmp
lret
ds
lods
movsl
jmp
shr
lahf
adc
push
gs
test
shlb
ja
push
pop
data16
add
movsl
push
xchg
or
cmpsb
dec
fsubrl
add
sub
jg
adc
inc
jae
lcall
sbb
jmp
mov
js
int
lret
mov
jbe
push
aas
lcallw
lret
mov
sub
lds
mov
push
cmpb
jg
test
mov
cmp
mov
fcomps
adc
jecxz
cwtl
sub
push
test
test
lret
xchg
rcll
mov
or
arpl
cmp
lods
mov
xor
movq
iret
loop
mov
lret
mov
data16
fcmovu
lods
lahf
push
mov
movsb
out
mov
pop
xor
addr16
les
mov
nop
adc
or
pop
cmp
adc
dec
imul
test
xchg
mov
cmp
push
sub
lods
pop
or
add
jmp
pop
sbb
aad
fcmovu
nop
fwait
add
std
inc
andl
or
add
add
in
xchg
call
adc
cmp
mov
cli
pusha
movsl
fisttpl
mov
inc
hlt
mov
ljmp
xor
dec
mov
xchg
and
imul
testb
std
faddl
and
mov
std
flds
shlb
mov
mov
hlt
xor
out
loop
sub
mov
push
ficompl
ret
iret
push
test
insl
mov
lahf
stos
cmpsl
lods
pop
push
mov
xchg
outsl
imul
daa
mov
insl
gs
mov
sub
sub
mov
mov
jle
push
fnstcw
popf
lret
aas
jae
ljmp
pop
pop
add
lods
stos
test
nop
test
push
xor
bswap
and
cltd
aas
mov
xor
pop
push
mov
iret
add
lret
test
xchg
inc
sbb
ss
push
adc
data16
inc
add
lret
inc
jg
xor
mov
xor
cmp
mov
lea
out
sahf
lods
dec
fisubl
mov
btr
stos
jnp
jne
fsubrl
mov
xchg
lock
jns
sti
gs
icebp
cs
adcl
and
or
sub
addr16
jbe
mov
jns,pn
jp
fstpt
adc
jle
paddd
push
cmp
loop
mov
mov
inc
js
xlat
jae
fwait
adc
push
dec
popf
arpl
sarl
scas
test
and
scas
mov
dec
add
icebp
sbb
adc
cs
sarl
pop
in
dec
pop
hlt
push
ja
arpl
cmp
or
dec
testl
xchg
imul
int3
out
and
out
cs
or
shl
stos
mov
in
and
bnd
andl
cmpb
add
pop
out
aaa
jg
jmp
testl
jl
mov
dec
or
push
inc
sub
xor
in
and
scas
aad
int
cmc
sub
cmp
add
cmp
test
ror
add
sub
lods
loopne
cmp
xchg
jno
nop
mov
mov
sub
hlt
adc
ds
fsubl
ljmp
in
dec
push
cmp
test
fcmovnu
sub
add
popf
pop
lea
mov
push
adc
loope
sahf
aad
fldt
mov
sbb
mov
pop
inc
ss
stc
popf
dec
subb
cmpsl
mov
cld
mov
push
shrl
int
pop
pop
sub
fistpll
xchg
hlt
in
out
rol
push
and
mov
jmp
aaa
sahf
aaa
lock
test
sahf
inc
adcb
jg
sbb
mov
repnz
mov
cld
test
or
fldt
cli
mov
fsubrs
loope
dec
inc
sbb
push
and
shrl
rorl
inc
dec
into
sbb
mov
outsl
sub
repz
stc
test
call
pop
pop
pushf
jg
xchg
mov
mov
cli
insb
lahf
pop
xor
in
das
lcall
repz
test
das
dec
loopne
out
das
pop
dec
push
pusha
imul
inc
notl
negl
cmp
sub
dec
rcrb
and
mov
mov
or
data16
je
nop
jbe
mov
jno
in
xchg
arpl
or
je
gs
jecxz
subb
push
lcall
and
pop
mov
pop
test
in
fcomp
jge
pop
pop
sub
inc
jnp
pop
inc
and
cltd
insb
mov
psubw
dec
cs
cs
pop
inc
outsl
testb
test
pop
rclb
lock
subl
stos
imul
xor
mov
lock
add
das
mov
test
in
fisubl
dec
dec
lcall
and
imul
das
mov
faddl
sbb
dec
cmc
or
shlb
cmp
pusha
stos
stos
mov
dec
iret
push
pushf
lret
movsb
frstor
sbb
ljmp
ret
adc
out
js
mov
push
push
push
or
sbb
add
inc
fbstp
jne
mov
shlb
cs
jp
xchg
and
sbb
imul
dec
cmpsb
add
fwait
sub
push
or
xchg
add
in
jmp
je
add
mov
in
adc
mov
jl
jecxz
dec
lret
dec
push
cltd
ja
xchg
dec
int
sbb
mov
jle
rorl
inc
jne
sti
jb
rol
cs
pushf
fidivs
bound
lods
xchg
xchg
mov
ret
lcall
or
or
addr16
aad
xchg
mov
add
insb
in
cmp
xchg
push
xchg
jle
fstl
in
jp
pusha
ror
sbb
fsubl
xchg
and
inc
add
jae
jge
push
sub
rcrl
mov
out
sbb
stos
rep
and
movsb
aam
je
cmp
cmp
pop
adc
xlat
iret
and
stos
ret
fstps
scas
add
arpl
test
pushl
push
push
lret
and
adc
mov
ret
int3
ficompl
push
pop
adc
iret
dec
lds
cmpl
cmp
inc
leave
imul
in
lods
jp
jge
jl
sbb
outsl
aaa
ds
push
add
mov
jge
jp
cs
fnsave
jo
addr16
and
and
push
add
sbbb
test
enter
daa
lods
or
cmp
les
insl
cmp
sahf
hlt
cmp
out
movsl
testl
push
add
cli
push
or
inc
test
out
mov
rcll
lahf
pop
mov
mov
cmp
pop
sahf
xchg
test
loope
adc
subb
ret
stos
scas
cmp
sar
sub
pop
cltd
and
sbb
popa
lds
test
jp
mov
jp
pop
adc
imul
jmp
mov
into
icebp
sahf
fidivrl
testl
mov
dec
mov
loopne
mov
aad
psrad
sti
ds
and
cmp
and
insb
pop
lret
inc
aas
gs
or
mov
cmp
test
stos
int
or
or
int3
pop
and
pusha
addb
and
jecxz
subl
push
add
mov
lods
cli
lahf
clc
mov
in
lcall
push
fistpll
sbb
xor
popf
out
push
pop
insb
pushf
test
and
out
les
dec
pop
xchg
push
add
sbb
and
lcall
cmp
pushf
dec
outsl
stos
jmp
loope
and
aad
jno
nop
push
lds
dec
sar
stc
inc
cmpsl
push
mov
aas
push
fdivl
sbb
and
inc
mov
push
lea
mov
mov
outsb
test
adc
cld
dec
rclb
sti
pop
and
mov
add
inc
sbb
push
jb
hlt
xchg
jnp
and
dec
lods
shll
dec
test
std
sub
movsl
cwtl
je
ljmp
scas
xchg
add
push
in
xor
sub
or
out
hlt
dec
jg
movsb
aam
mov
scas
in
pusha
aam
adc
ret
in
fisubs
insl
xchg
dec
cli
xor
cmpsl
stos
scas
out
mov
inc
sub
lods
push
mov
mov
incl
int
in
jae
adc
adc
aas
call
test
pop
mov
arpl
ffree
clc
adc
and
mov
cld
stos
popa
loopne
outsl
pop
push
sub
out
ds
call
sbb
add
adc
jbe
or
aad
sub
cmpl
push
sbb
sbb
mov
or
xor
pop
push
cmc
push
lods
mov
mov
add
insb
jmp
xor
popa
in
add
sbb
mov
jmp
fstpl
out
or
insl
repnz
shlb
mov
in
test
inc
jne
jle
mov
push
out
jnp
mull
add
ljmp
sti
xor
sub
flds
jp
sub
mov
cli
jl
lea
