mov
fistl
mov
lea
mov
push
mov
add
mov
add
dec
in
std
pushl
pop
pop
pop
ret
jmp
mov
push
js
in
in
mov
in
in
test
mov
pushf
cwtl
xchg
nop
in
in
mov
repnz
or
sbb
mov
hlt
lock
cmp
in
call
cmp
aam
mov
push
push
out
in
inc
call
ret
lea
mov
mov
mov
scas
mov
call
sub
mov
ret
nop
push
mov
add
mov
mov
mov
xor
in
imull
hlt
cmpl
je
repnz
incb
test
jb
inc
lock
add
rorb
outsl
sub
cmp
or
je
repnz
mov
mov
mov
rorb
mov
and
xor
jle
pop
divb
and
icebp
add
dec
hlt
mov
js
clc
outsb
imul
ret
pop
cs
fistpll
decb
jne
cmp
mov
pop
ret
xchg
fnstsw
add
sbb
jp
cld
pusha
out
ss
pop
dec
in
mov
div
cld
add
push
lock
lea
lea
sar
sarl
sbb
sbb
or
outsb
jmp
adc
add
daa
adc
adc
add
std
outsl
aam
xchg
and
cmp
add
dec
and
lea
mov
adc
push
clc
mov
shl
mov
add
mov
idivb
mov
jno
cmpb
jl
mov
jbe
test
xchg
clc
lea
inc
mov
dec
inc
pop
imul
mov
mov
mov
xchg
mov
dec
lea
es
or
or
in
add
mov
jg
in
scas
cmp
jp
dec
dec
mov
jge
mov
inc
js
mov
fdivl
loopne
mov
inc
leave
lock
fistpll
imul
and
dec
xchg
sbb
dec
sub
nop
hlt
cmp
inc
dec
jle
mov
bound
dec
lea
jl
fucomp
std
add
stc
cmp
xor
notb
test
inc
dec
adc
sub
add
mov
outsl
push
or
xchg
mov
sbb
inc
cmp
paddd
imul
mov
test
mov
std
pop
jg
lea
fs
push
jb
pop
mov
jl
jge
inc
pop
cmp
js
cmp
dec
jnp
or
xchg
and
mov
xchg
inc
sbb
insb
jo
pop
mov
dec
lcall
addr16
enter
fldl
or
xchg
mov
add
or
jne
xchg
mov
mov
fnstcw
dec
lock
push
hlt
mov
inc
mov
add
loope
subb
inc
dec
pop
cmp
and
js
pop
sahf
incl
lds
cmp
dec
mov
lock
or
dec
dec
dec
inc
sub
mov
loopne
sbb
xor
insb
addr16
push
lock
in
or
mov
lock
jb
sbb
mov
stos
inc
clc
stos
mov
lock
mov
mov
out
mov
decb
mov
jle
inc
lea
push
fbld
dec
inc
jge
addr16
in
outsl
fsub
aas
cmpsb
cmp
jp
roll
cmp
es
gs
decb
adc
push
sarb
mov
xchg
sub
push
mov
pushl
ljmp
in
insl
adc
mov
lock
decb
mov
cli
movsb
mov
stos
add
xchg
pop
inc
mov
inc
je
jne
jns
mov
cmp
cmp
jo
mov
sub
out
cmp
cmp
xlat
inc
dec
inc
dec
inc
repnz
push
jo
jle
cmpsb
and
jmp
leave
sub
fsubs
xor
dec
push
rcrl
in
inc
addr16
repnz
push
loopne
repnz
fcoms
fsub
in
call
add
in
jo
cs
mov
stos
or
idivb
xor
dec
lcall
jge
jnp
cmp
sti
mov
push
int
pop
addl
push
adc
dec
lods
popa
aaa
jl
inc
inc
sbb
xchg
sbbl
hlt
psubsb
dec
stos
insl
fwait
lcall
inc
xor
cs
loope
sbb
loopne
aas
sbb
cmpl
and
mov
mov
mov
mov
mull
dec
into
pop
push
icebp
mov
dec
cmp
jb
xor
mov
in
sub
call
xchg
jns
and
stos
pop
mov
sub
adc
hlt
pop
orb
hlt
dec
cmp
add
inc
inc
aam
mov
popf
adc
xlat
pop
sub
out
xor
lea
cs
mov
cmp
dec
xchg
or
clc
jle
mov
dec
stos
aam
pop
ss
loopne
mov
clc
push
int3
rolb
aam
enter
pop
sahf
rcl
cmp
or
adc
cli
fldt
lea
mov
mov
mov
addb
mov
dec
dec
inc
add
stos
or
shll
cmp
cld
and
in
jg
mov
pop
jnp
dec
add
call
push
mov
test
fsubp
inc
ja
adc
enter
fcomip
jmp
in
hlt
inc
sbb
ret
iret
std
sarl
xchg
sti
xor
out
inc
ror
lcall
add
sbb
inc
scas
jns
dec
gs
mov
add
or
inc
push
sub
push
or
mov
shl
test
lea
inc
mov
negl
xchg
push
in
cmpsl
std
cwtl
xchg
push
push
cwtl
pushf
push
lea
push
cs
xchg
xchg
jne
ja
and
inc
mov
je
cld
add
mov
dec
xor
jae
mov
dec
cmp
adc
mov
cmp
dec
pop
cmp
jge
out
js
jbe
es
push
pop
in
add
idiv
or
mov
mov
pusha
fidivrs
cwtl
movsl
dec
mov
ret
inc
repz
push
scas
ljmp
rcll
push
dec
mov
pusha
push
mov
inc
xor
xchg
xor
pop
push
adc
pop
sbb
push
mov
push
in
jne
and
inc
mov
cmp
inc
call
mov
pop
sbb
rclb
dec
or
sar
inc
mov
dec
dec
insb
pop
mov
xchg
add
cmp
int3
inc
inc
jp
test
sbb
mov
mov
enter
sub
lahf
test
inc
scas
dec
in
repnz
test
test
xchg
lock
adc
cs
test
rorb
cmp
outsb
sbb
leave
lods
cmp
jne
lock
xor
das
pop
adc
sub
mov
jo
nop
cltd
dec
sbb
cmp
sub
push
lahf
push
and
out
jp
jp
les
ret
outsb
stos
dec
dec
pop
je
cmpsl
test
stos
dec
pusha
aas
add
mov
add
aas
sarb
mov
sbb
xor
push
divps
notb
or
push
lcall
das
push
pop
icebp
sbb
hlt
xchg
cmpsb
mov
fs
inc
das
leave
cld
shlb
sub
fcomi
outsl
pop
mov
inc
cmp
adc
test
addb
in
dec
call
mov
adc
mov
mov
add
and
push
arpl
xor
jle
loop
fchs
xor
insl
fadds
pop
mov
jbe
cmp
pop
or
adc
in
lock
mov
push
xchg
adc
aas
xchg
adc
inc
sub
sub
jge
push
inc
out
inc
cwtl
or
andl
sbb
rorl
outsl
popa
push
test
pop
cmp
mov
cmp
jb
lea
mov
call
pop
inc
mov
lea
mov
les
and
push
mov
pushf
and
sub
subb
lock
or
push
je
js
jg
jo
push
inc
mov
out
mov
or
cmp
div
mov
lea
adc
and
fcoms
cmp
xor
add
mov
or
popf
clc
push
cmp
mov
or
hlt
xor
aaa
hlt
mov
inc
sub
iret
movsl
rcll
insb
push
inc
test
mov
mov
fs
push
pusha
sub
imul
mov
xchg
mov
xchg
imul
pop
pop
jo
or
add
push
mov
enter
adc
xchg
inc
std
mov
push
sahf
push
push
push
mov
and
pusha
rolb
movsb
inc
adc
enter
adc
mov
test
jg
iret
in
fdivrs
inc
inc
scas
inc
xor
pop
inc
inc
pop
fprem
add
aad
adc
adc
push
inc
roll
cltd
or
add
loop
mov
add
sbb
dec
add
inc
push
loop
popf
cmpsl
and
cltd
ljmp
sbb
pop
mov
sbb
xlat
je
inc
cld
arpl
or
add
xchg
pop
dec
dec
xchg
sbb
sbb
dec
cmp
and
cli
stc
sahf
and
adc
sub
in
mull
sub
sbb
inc
adc
sub
jne
jae
stos
or
jno
sahf
adc
xchg
xchg
adc
add
adc
nop
pushf
and
sbb
inc
push
sbb
test
dec
cmpsl
xor
outsl
lods
mov
or
add
dec
sbb
js
je
orb
jl
add
fbld
idivb
hlt
lock
out
jp
sti
in
adc
and
hlt
or
dec
and
sub
std
add
in
jb
pop
pop
xchg
pop
xchg
pushf
pop
pop
pop
rcrb
push
ja
pushl
nop
adc
and
jno
add
in
xchg
jns
lock
mov
sti
pushl
adc
out
aaa
xor
xor
xor
divl
xor
ss
xor
xor
xor
mov
xor
aaa
cmp
dec
add
inc
xor
cmp
xor
add
push
add
pop
data16
outsl
xor
cmp
mov
addr16
xor
aaa
adc
aaa
ljmp
jne
cmp
inc
cmp
in
iret
insb
imul
shlb
fidivrl
xor
addb
pushf
ss
push
ja
jnp
popf
cltd
sub
jbe
arpl
push
outsb
jns
dec
aaa
add
in
jns
mov
push
xor
imul
mov
xor
cs
xor
xor
cmp
scas
cmp
jmp
cmp
sub
cmp
and
into
std
das
test
test
xchg
les
ds
pop
xor
cwtl
jmp
fistpl
pusha
add
pop
les
outsb
decl
and
cmp
xchg
jmp
mov
jmp
xchg
dec
xor
sbb
in
std
jbe
jp
loopne
arpl
and
in
ljmp
and
push
push
and
mov
gs
incl
pusha
nop
push
pop
pusha
push
adc
cs
idiv
jb
loope
lahf
outsl
outsl
xlat
mov
mov
jecxz
bound
outsl
out
out
mov
pop
mov
fs
adc
push
xor
ljmp
fcos
fwait
cmpsb
or
adc
loope
cwtl
pusha
in
sbb
dec
or
adc
xor
adc
jecxz
and
inc
mov
outsl
repz
imul
mov
iret
jle
mov
mov
push
imul
aam
pop
mov
imul
jo
sbb
adc
and
or
out
jge
pop
adc
or
push
cmp
into
mov
inc
fcomps
imul
in
xor
mov
in
inc
add
jnp
mov
dec
fadds
nop
and
cmp
insl
inc
mov
xor
out
or
test
mov
jg
inc
mov
jns
sub
jbe
rcl
addr16
ja
insl
iret
ret
mov
inc
mov
sbb
add
gs
sub
bound
pusha
mov
je
nop
jecxz
js
sub
jo
popf
nop
gs
adc
div
fdivrl
jecxz
shrb
mov
pop
push
mov
fldt
dec
sbbb
lahf
outsb
aaa
cmp
cmp
pop
jo
imul
or
xor
add
sub
mov
jl
jbe
sbb
ret
push
push
mov
cmpsb
jmp
push
movsb
bound
xlat
sbb
jecxz
bound
push
adc
lret
into
pushf
insb
in
test
mov
ljmp
and
xlat
mov
mov
mov
pushf
ljmp
ret
jg
jmp
mov
sub
icebp
in
xor
pop
and
sub
sub
leave
cmp
or
cwtl
inc
dec
fimull
sbb
js
inc
xor
push
int
pop
test
and
jl
fmul
inc
sar
xor
pusha
or
stos
insb
mov
lods
jo
mov
loopne
mov
daa
sub
and
jmp
lock
cmpsb
push
dec
mov
cmp
cvtps2pi
xchg
adc
push
cmp
or
jmp
mov
mov
cmp
mov
and
enter
dec
xchg
cwtl
je
push
loop
popa
and
jle
aad
cmp
mov
je
hlt
pusha
neg
jle
arpl
jo
ficoms
push
xchg
mov
jecxz
mov
pop
push
dec
xchg
insb
and
push
xor
jl
push
push
jo
nop
xchg
daa
xchg
sahf
xor
int3
push
jl
pop
adc
inc
sub
mov
popa
jnp
push
aad
lahf
sub
mov
ret
xchg
push
rorb
sbbb
sbb
cmpl
mov
mov
cwtl
xchg
int3
in
aas
add
add
add
add
adc
sgdtl
or
adc
aaa
mov
loope
sbb
xchg
das
adc
sub
and
jle
call
add
or
pusha
aaa
add
adc
movlps
or
pop
das
add
add
push
or
add
or
adc
out
insl
scas
outsb
add
pop
sbb
pusha
xor
sub
add
loop
lods
data16
xor
add
xchg
aad
cmp
fbstp
sub
sub
daa
inc
push
adc
ret
xchg
jbe
call
push
push
shrb
xor
push
sub
push
xchg
dec
pop
mov
and
mov
jne
jge
push
add
pop
in
push
jmp
inc
sti
sub
nop
add
nopl
dec
inc
outsl
nop
enter
add
jnp
push
shl
push
dec
dec
adc
xor
xor
push
leave
or
rolb
ret
dec
negb
add
mov
add
mov
or
sbb
push
and
mov
mov
ds
mov
jo
mov
out
xor
xor
xchg
inc
add
dec
mov
mov
les
mov
inc
mov
int3
dec
mov
xchg
scas
in
dec
mov
adc
add
mov
les
push
movsl
in
leave
or
insb
and
xchg
push
or
decl
or
adc
jecxz
ret
mov
dec
jle
or
adc
lock
add
mov
in
mov
sbb
cmovns
je
and
js
in
outsb
or
mov
or
in
sahf
lret
inc
and
or
data16
and
aaa
inc
out
vpsllq
sbb
or
push
in
cmp
loopne
dec
mov
push
dec
test
jl
inc
push
mov
xor
add
out
in
cmpl
pusha
pop
repz
mov
jae
and
adc
ficoms
mov
push
cld
push
jmp
mov
add
add
sahf
movsb
popf
shl
call
out
ficomps
pop
call
or
mov
ds
lea
lret
adc
xorl
addb
cmp
sbb
pop
insb
data16
adc
pop
call
jae
aaa
pusha
fldenv
adc
cmp
shr
ja,pt
push
add
nop
dec
cmp
adc
sub
mov
pushf
test
sub
test
cmp
lds
or
lea
and
fwait
cmp
pusha
push
push
pop
aad
ljmp
add
int3
cs
inc
mov
cmp
xchg
cmp
aas
add
cmpl
je
xchg
push
test
ds
popa
hlt
pop
sub
pop
lea
decl
xor
gs
gs
xor
cs
insb
dec
outsb
je
jbe
sbb
push
jp
imul
dec
mov
in
in
insl
jb
cmp
jns
pop
ja
outsb
imul
pop
pop
hlt
out
adc
push
enter
in
hlt
inc
mov
in
in
xchg
test
shlb
clc
sbb
xchg
bound
add
xor
mov
dec
cmp
jne
insl
cmpsl
imull
and
lods
sti
hlt
add
or
fbld
jl
outsb
pop
sbb
mov
jne
push
add
or
hlt
addl
pop
jne
cwtl
sti
pop
adc
and
aad
inc
leave
sub
verr
inc
sbb
movsb
pop
sbbl
loop
pop
clc
and
call
cld
cmpb
sbb
aas
lock
fdivrs
lods
enter
inc
dec
daa
jne
out
enter
xor
fdivrs
je
mov
pusha
push
icebp
clc
dec
clc
mov
cld
cld
popf
test
jne
dec
or
xchg
sub
xor
loope
add
inc
leave
mov
jbe
inc
sub
jmp
pushf
cli
add
clc
or
scas
test
fcoml
inc
push
jno
imul
addr16
inc
mov
and
mov
inc
or
and
dec
inc
dec
jne
mov
add
xor
jmp
add
pop
sub
inc
addl
or
xor
in
dec
out
ret
nop
repnz
int
into
call
lcall
mov
mov
sub
and
or
and
push
insb
pop
pop
push
enter
dec
pusha
and
dec
sbb
sbb
or
nop
push
dec
add
push
push
repnz
shll
inc
dec
or
push
or
filds
adc
or
push
ja
adc
add
adc
test
sqrtps
or
push
scas
push
and
mov
add
rorb
das
push
adcb
add
adcl
adc
adc
push
push
push
jmp
jmp
or
inc
jp
clc
mov
gs
push
add
push
ss
adc
add
inc
mov
lcall
sub
xchg
dec
aad
in
enter
push
inc
push
mov
sbb
mov
nop
cs
jb
push
inc
pop
pop
out
insb
inc
out
orb
sbb
js
sbb
repnz
std
add
fisubl
pop
jp
pop
and
adc
cmpw
jb
nop
sbb
pop
sti
pop
adc
inc
addb
add
sub
roll
pop
sub
adc
mov
and
or
pop
adc
inc
inc
mov
inc
pop
push
jb
aaa
pop
lods
adc
push
cmovg
shll
add
pusha
rorl
pop
inc
lods
inc
mov
ljmp
sub
aad
add
cmpl
mov
xchg
pop
adc
sahf
dec
popa
addr16
leave
sub
bound
sub
das
add
add
dec
sti
mov
daa
add
daa
daa
add
fdivrl
xlat
std
add
fmuls
lahf
and
insl
mov
getsec
add
aaa
int
ja
and
or
add
add
fucomip
cs
jae
add
push
add
add
push
dec
add
add
insl
in
mov
sbb
dec
dec
add
sub
inc
ss
push
push
imul
or
je
inc
dec
inc
add
or
sub
add
jecxz
push
mov
pop
fcomi
mov
mov
add
or
pop
adc
insl
mov
adc
insb
jo
pop
adc
xor
js
or
xor
imul
pop
or
ja
push
or
inc
aam
cmp
mov
movsl
nop
push
roll
xlat
cltd
ds
or
pop
and
fdivs
and
jo
dec
adc
pop
loope
in
and
emms
add
imul
mov
add
add
pop
sbb
add
sub
and
and
xchg
and
getsec
push
cmp
or
pop
lds
pop
and
adc
and
mov
mov
outsl
fwait
mov
sbb
adc
ds
aaa
add
pop
pop
cmp
mov
jne
mov
or
je
sti
and
jno
cmp
pushf
pop
push
sub
in
jae
mov
sbb
xor
sbb
push
and
inc
cmp
lock
sub
daa
lcall
push
mov
add
addr16
adc
add
out
mov
sbb
out
addr16
sub
out
test
mov
fwait
add
or
sbb
sub
pop
pop
and
push
rcr
jge
inc
mov
add
lret
pop
mull
in
test
shrl
imul
sub
sub
sub
pop
inc
adc
xor
push
aaa
xor
mov
bound
insl
push
push
sub
or
xor
sti
or
aas
mov
aam
leave
lds
lods
lods
test
sbb
jge
add
pop
mov
mov
jmp
lea
mov
xchg
sbbl
mov
std
movsl
sbb
jae
pop
or
inc
cmpsl
popf
push
aad
push
repz
mov
and
insl
inc
stos
fldl
push
lds
std
add
mov
stc
iret
mov
mov
push
add
fadds
xchg
sub
mov
push
mov
push
mov
mov
sbb
aas
push
xor
scas
add
ja
scas
rolb
jecxz
jecxz
and
pop
xchg
and
inc
arpl
stos
mov
aad
fwait
vmwrite
dec
add
stos
push
inc
mov
push
std
mov
mov
lea
pusha
or
mov
pop
mov
pop
and
popa
daa
push
sbb
push
xchg
sbb
mov
xorl
push
pop
pop
sub
shll
scas
push
xor
je
adc
ljmp
push
lods
mov
cmpsl
sub
test
add
inc
imul
inc
mov
inc
push
inc
sub
adc
mov
push
and
mov
mov
mov
gs
add
imul
inc
jne
add
dec
push
pop
inc
add
divl
mov
pop
pop
and
inc
inc
out
lcall
dec
je
packuswb
xor
stos
rolb
imul
adc
mov
shrl
sbb
add
aad
inc
sub
or
imul
lods
loope
add
push
dec
mov
test
adc
jmp
and
rclb
aad
bound
dec
insl
jae
in
mov
push
dec
jmp
loope
pop
inc
pop
jo
jno
cwtl
inc
pop
rep
xor
or
loope
andl
stos
sbb
push
mov
nop
loopne
push
sbb
lea
and
and
mov
mov
adc
aam
int
mov
nop
stos
mov
es
or
sbb
mov
sub
inc
orb
subl
ss
adc
test
push
shr
call
shrl
xor
adc
jg
loopne,pn
and
add
mov
testb
add
add
test
add
add
in
dec
add
aaa
and
popf
add
add
test
lahf
loopne
mov
lret
jmp
fisubrl
mov
mov
add
cs
add
loopne
ja
and
sub
and
push
add
mov
and
test
ja
fadds
mov
push
cmp
jno
cmp
aaa
fucomi
mov
add
jbe
iret
mov
jnp
mov
into
mov
mov
jg
ds
mov
mov
cs
sbb
fld
mov
pop
loopne
mov
add
jno
xorl
cmp
add
mov
cmp
sub
xchg
add
inc
rol
pop
aas
xchg
fmull
fbld
push
aas
roll
jbe
xchg
in
int
outsb
jp
add
mov
ror
jns
cmp
pop
inc
mov
xchg
out
subb
aas
sbb
add
cmp
fsubrl
addr16
mov
xor
dec
pop
jl
andl
aas
dec
jns
cli
outsl
add
int
sub
cmp
imul
out
fbld
lahf
aaa
pop
ja
adc
test
aaa
shll
test
sbb
fdivp
xchg
add
data16
adc
lods
cmp
loopne
nopl
xchg
and
pop
orb
pop
pop
add
sub
fisubs
jl
dec
and
leave
xor
sub
jl
fs
out
arpl
outsl
insl
outsl
mov
mov
loopne
lea
ja
fiadds
scas
jae
dec
xchg
jg
ret
mov
jnp
daa
jmp
inc
xorl
ss
or
dec
push
ret
xchg
and
push
jo
notb
pop
inc
mov
push
sub
fwait
jecxz
dec
xor
fisttpl
aam
mov
fadds
out
mov
sub
fimull
jno
fisubrs
fmuls
aaa
sub
mov
mov
xchg
or
out
and
outsl
test
inc
sub
jae
mov
xchg
xor
mov
sti
xchg
stc
add
insl
xchg
cmpsl
pushf
and
mov
or
fwait
mov
stos
xchg
adc
inc
push
test
pop
shrl
and
repnz
add
pop
or
add
push
aaa
addr16
test
inc
idivl
arpl
repz
outsl
or
push
sbb
pop
imul
xor
xor
fdiv
dec
ret
add
ret
ret
jg
or
fnstcw
lret
sbb
mov
inc
xlat
and
jno
push
dec
in
sbb
mov
sub
movl
les
add
pop
push
xchg
and
in
mov
pop
inc
sub
gs
icebp
and
mov
dec
xor
scas
add
xchg
mov
stos
xchg
cmp
jo
fwait
jecxz
xchg
jg
mov
add
xor
push
mov
inc
or
xchg
lcall
subl
jbe
mov
cmp
sbb
sbb
aas
mulb
sbb
arpl
lahf
push
jns
push
sbb
imul
cmp
out
xchg
lea
arpl
dec
mov
out
orl
and
inc
xchg
addb
dec
xchg
call
into
push
xchg
fcmovbe
add
push
nop
dec
jnp
push
popa
out
push
xchg
aaa
mov
xchg
ffree
sahf
call
repnz
mov
lret
mov
das
iret
mov
test
sbb
pop
lock
xor
mov
pop
mov
lock
pushl
je
add
sub
je
fcoms
sbb
idiv
loopne
push
mov
add
add
sbb
add
jmp
mov
test
jl
cmp
mov
and
and
sub
adcb
cmp
mov
xchg
arpl
adc
jecxz
fcompl
hlt
add
lods
out
or
insl
iret
movsb
add
fs
not
cltd
sti
imul
iret
lds
cmp
lods
and
push
sub
mov
mov
andb
add
mov
jl
pusha
add
mov
roll
push
add
pop
pop
jle
cmovnp
stos
cld
sub
dec
imulb
call
scas
jnp
push
add
lods
adc
mov
ja
or
iret
js
addr16
mov
mov
cmp
pop
cmp
pop
int3
push
push
popf
inc
mov
popa
inc
mov
iret
int
sbb
arpl
pop
subl
xchg
mov
insl
ljmp
clc
jb
divl
movsb
xchg
popa
xor
ret
pcmpeqd
imul
popf
mov
shlb
mov
xchg
mov
xor
andps
push
fs
mov
mov
add
pop
pop
sub
add
aaa
int
inc
lcall
xor
sbb
jbe
add
push
inc
andl
xchg
xor
jbe
add
in
mov
repz
lea
es
fwait
jmp
psubusb
sub
sar
mov
mov
and
bound
pop
pusha
dec
add
add
push
out
aaa
out
es
and
pop
push
icebp
mov
jg
mov
jnp
mov
mov
aam
and
jae
add
sub
add
lret
pop
jnp
clc
cltd
decb
stos
pushf
ret
jno
enter
clc
xchg
sbb
inc
fcmovnbe
loopne
lock
push
mov
leave
ja
add
fnstenv
fistpl
jbe
push
test
fsubrl
pushf
repz
and
pop
add
pop
xchg
xor
popf
add
push
xor
adc
jo
insb
lods
push
cmp
push
jp
cmc
unpckhps
in
lods
cld
je
lods
adc
out
fnstcw
mov
lret
mov
cmpsb
mov
jbe
mov
imul
cwtl
andl
mov
push
test
mov
mov
movsb
or
flds
out
test
pop
lods
and
or
xchg
out
out
xlat
mulb
add
jb
mov
icebp
iret
xor
addb
mov
sub
imull
icebp
xorl
cmpl
loopne
imul
and
push
rorb
es
aam
jle
pop
js
call
add
and
add
fs
pushf
pop
jl
fchs
fsubrl
push
mov
jbe
ss
mov
pusha
xlat
insl
pop
filds
mov
push
cs
adc
in
xchg
mov
cmp
fmuls
es
push
loopne
push
xchg
jp
enter
lock
fadds
xlat
add
mov
shll
jno
dec
inc
adc
je
push
out
cmp
dec
ja
push
xchg
imul
jl
jle
jbe
sub
pop
sahf
out
fadds
das
sub
mov
adc
xor
addb
push
mul
out
sub
sub
xlat
pop
xor
mov
cmpsl
add
push
xchg
lea
cld
mov
add
pop
xchg
sub
mov
add
xchg
dec
push
add
add
out
sub
negb
cmp
arpl
add
outsb
jecxz
filds
add
pusha
mov
jo
in
iret
jmp
stos
dec
call
mov
add
cmpsb
in
sub
xor
das
dec
jl
cli
lods
pop
std
mov
fildll
js
xchg
mov
out
adc
or
add
sbb
jge
push
and
sti
ja
push
mov
outsl
sahf
push
mov
add
mov
sbbb
sub
cld
jbe
ja
fisubl
add
insl
outsl
sbb
ret
xlat
lods
out
cmpsb
aad
push
adc
jbe
and
jo
jbe
dec
movsl
mov
js
sahf
pop
lcall
popf
jo
pusha
sub
or
mov
scas
mov
outsl
xchg
in
inc
lcall
outsb
mov
mov
and
movsb
add
sti
movsb
pop
btc
pop
ret
daa
push
pushf
loope
mov
ds
stos
lods
shrb
outsl
and
adcl
sub
and
addr16
mov
out
xor
add
je
add
jbe
loopne
and
cmp
das
or
bound
sub
leave
cmpsl
lds
jo
aaa
fidivl
adc
mov
cmp
xchg
adc
sbbb
push
mov
lods
xor
push
ja
and
pop
lahf
imul
sbb
pop
pusha
hlt
inc
les
in
imul
mov
loope
jo
xor
cmp
popf
or
or
add
dec
jmp
add
iret
iret
pop
js
js
pop
dec
sub
pushf
push
stos
es
pop
iret
pop
fcoml
mov
mov
cmp
lahf
push
mov
xor
mov
loopne
cmp
jl
ret
das
add
repnz
add
add
or
orl
sub
or
mov
rcll
inc
push
mov
mov
xchg
adc
cmp
mov
adc
and
adc
pop
adc
int3
jmp
hlt
push
scas
iret
add
test
fstps
in
es
xchg
pop
sysret
out
jno
cmpsl
jb
push
dec
adc
nop
stos
andl
cli
cmpsl
sbb
sbb
imul
and
sbbb
fsubrs
mov
adc
push
adc
out
test
aaa
add
push
cld
inc
iret
xor
int3
jecxz
mov
jbe
sub
lock
jl
in
push
outsl
dec
jnp
sbb
adc
clc
mov
sbb
jb
xchg
add
push
test
dec
test
sti
dec
mov
enter
out
pop
mov
sbb
rolb
add
sbb
inc
pop
mov
iret
stos
dec
fs
insl
mov
dec
inc
xchg
xchg
cmpb
sub
scas
pop
xchg
xor
pop
hlt
les
adc
outsb
and
es
adc
dec
bswap
mov
test
ret
cltd
cmp
roll
scas
push
sbb
cwtl
sub
xor
or
sbb
xlat
inc
test
inc
push
test
push
js,pn
out
push
lahf
rcrl
inc
mov
pop
cmovle
daa
push
es
sub
inc
out
fmuls
movsb
mov
scas
jp
jmp
and
rcrl
in
popa
shl
cmp
jbe
sbb
mov
adc
call
inc
mov
sub
jl
dec
out
adc
iret
out
or
loop
cs
dec
cmp
aam
cmpsl
mov
jbe
scas
bound
je
ja
mov
jno
push
mov
popa
cmp
test
jecxz
sbb
adc
mov
lock
lock
dec
or
fsubs
push
ja
cmp
sbb
add
les
jne
jo,pt
prefetch
or
cld
jle
add
and
pop
xchg
cmp
mov
popa
pop
adc
cltd
insb
testl
xorb
add
clc
jle
test
push
mov
iret
lock
pusha
sbb
aam
xchg
fsubr
inc
push
out
daa
aas
cwtl
jp
add
test
nop
out
push
ficoml
xor
sub
and
sbb
cmp
gs
cmp
jae
insl
add
jl
and
ds
loop
inc
bound
xor
sub
or
lods
inc
push
xchg
add
or
pop
jno
push
mov
jo
mov
jb
inc
pop
inc
jl
jmp
icebp
cmpb
push
pop
je
mov
mov
into
inc
push
insb
test
sub
mov
fxch
inc
repnz
fcmovnb
dec
pop
xrelease
or
sbb
subb
jmp
je
mov
jb
aaa
subb
rolb
scas
mov
and
insl
stos
pop
inc
xchg
xor
outsl
fistpl
jle
aaa
xor
adc
lahf
aad
xchg
arpl
push
jl
test
test
mov
push
fmuls
sub
popa
sbb
ss
pop
mov
daa
sub
lods
rcrl
or
je
xor
pop
outsl
xor
jl
add
popf
gs
adc
test
push
clc
mov
aas
dec
pop
cmp
xchg
stos
mov
add
push
dec
inc
in
push
adc
adc
jl
data16
sub
dec
mov
fidivrs
imul
push
mov
push
sar
mov
xchg
lea
testl
push
sub
jp
cli
push
pop
push
sbb
in
push
and
pushf
fdivl
imul
fwait
push
push
sub
sbbb
push
outsb
pop
cmp
jo
pop
roll
pushf
push
jl
inc
andl
and
add
jns
aas
or
loope
xchg
adc
andl
xorl
inc
mov
mov
xchg
enter
and
pop
push
mov
outsl
repz
push
add
in
xlat
inc
add
cmp
cltd
repz
addl
inc
cmc
and
sarb
iret
mov
and
scas
dec
pop
pop
loope
std
mov
dec
mov
test
add
xchg
cmp
jne
xor
ret
mov
lea
ljmp
imul
pop
popa
sub
lret
mov
push
xor
lahf
mov
jle
insb
mov
cmpsb
repnz
loope
decl
jo
push
mov
inc
fistpl
push
mov
cwtl
cmp
icebp
mov
sbb
adc
cmp
push
popl
cmp
dec
outsb
mov
and
fcoms
jo
dec
add
loope
aaa
mov
cwtl
or
ss
pop
call
pop
cmp
popf
test
jle
push
jl
xchg
adc
cmp
aad
movsl
mov
mov
adc
out
adc
xchg
xlat
scas
das
cmpsl
scas
fwait
cld
mov
cmc
adc
ljmp
nop
ret
inc
mov
add
adc
or
ds
insl
popa
xchg
js
mov
sub
icebp
lock
mov
inc
add
or
cmp
jle
mov
lods
out
sbb
xchg
dec
adc
stos
xor
int
pop
add
or
dec
in
jge
sar
es
clc
es
xchg
cmp
push
push
xchg
shll
pop
mov
jp
rcrl
inc
inc
fsubr
cmpsl
out
inc
xor
daa
mov
mov
mov
mov
add
or
orb
mov
js
out
jno
jo
out
sub
and
mov
pmaxub
pop
and
jno
aaa
pop
sbb
dec
xlat
and
dec
test
pushf
jne
icebp
out
out
xor
fistl
add
lock
mov
hlt
pop
ret
ja
and
cmp
test
and
in
incb
imul
sbb
or
les
push
cmp
ss
fdivs
xchg
jo
push
sarl
or
or
sbb
xchg
call
jnp
cmp
je
add
je
sbb
insb
insb
loope
daa
fs
mov
xchg
dec
pop
mov
test
add
aaa
cmp
inc
push
jno
mov
sbb
xchg
lahf
sbb
pop
sti
jbe
pop
jne
xlat
ljmp
sub
xchg
ja
add
xchg
xchg
xor
hlt
adc
adc
pavgb
sub
jge
sbb
fisubl
mov
pop
jecxz
ja
pop
push
push
fildl
mov
cmp
push
cmc
mov
scas
dec
int
outsl
jno
sahf
adc
push
mov
stos
fwait
int
add
sbb
and
pushf
imul
jno
sub
or
xor
adc
sub
stos
or
xor
scas
lods
rorb
xor
adc
out
loopne
inc
lahf
fcoms
push
ret
jp
mov
ret
xchg
pop
push
adc
clc
push
push
imull
das
iret
inc
sub
leave
mov
dec
lods
or
mov
lock
pop
cmp
fcoms
mov
add
mov
jo
jp
jmp
or
xchg
bound
sub
push
aas
cmp
add
scas
fadd
loopne
out
aas
imul
adc
sbb
lahf
jo
push
lret
aaa
xor
push
arpl
mov
sbb
stos
jmp
ret
dec
fadds
je
pop
xlat
jno
loop
cmpsl
aad
fdivs
out
pop
orb
xchg
push
mov
and
shlb
cmc
rolb
fwait
jo
rcrl
cmp
imul
cwtl
jnp
sbb
push
lahf
cmp
das
jno
rol
jecxz
xchg
loopne
and
je
sub
enter
pop
das
push
push
xor
xor
mov
daa
add
jnp
xor
sub
jne
xchg
lods
push
pop
cmp
mov
lods
sub
xchg
xchg
stos
ss
add
mov
push
cld
cwtl
lcall
mov
lock
mov
cmp
test
add
xchg
jb
pop
flds
sbb
loopne
and
aad
mov
in
daa
scas
inc
pop
or
pop
rol
into
pusha
jle
mov
mov
or
je
loopne
sub
rclb
mov
sub
xor
jl
test
gs
incl
ja
das
cmp
push
or
shlb
adc
rorb
or
mull
add
dec
jle
ja
dec
pop
xor
fdivl
mov
and
xchg
inc
mov
ret
in
cmp
push
mov
aad
dec
pop
cmpsb
jnp
movsl
push
push
jne
int3
pop
pop
out
roll
sub
mov
jne
movsb
mov
dec
and
pop
sbb
jns
jo
into
lods
bound
sub
popa
jno
inc
es
inc
arpl
pop
into
es
loope
imul
test
aam
cli
loope
clc
or
lcall
push
iret
push
cmpsl
xchg
add
mov
testl
lock
lret
jb
push
jne
push
adcl
cltd
mov
pop
clc
mov
xchg
fstl
mov
outsb
cli
sub
xchg
or
xchg
ret
imul
cltd
dec
xor
jnp
imull
and
les
and
adc
push
lock
stc
jae
flds
test
iret
fistps
mov
push
adc
and
add
lods
or
and
sbb
mov
sahf
cs
bound
dec
mov
sub
loopne
clc
sbb
mov
adc
je
bound
ljmp
mov
inc
sub
jl
adc
loope
lods
add
or
pusha
xchg
in
sbb
push
popf
push
cmp
add
dec
in
jge
jl
loopne
jo
iret
clc
pop
cltd
cmp
stos
sbb
rcll
stos
jb
rcrl
daa
jo
mov
ss
out
out
mov
mov
shrl
rcrl
add
pop
jmp
xor
fbstp
in
pop
xchg
shl
cmpsl
mov
add
iret
ds
mov
cmp
loope
ljmp
aas
xchg
or
aam
repnz
add
sub
ja
dec
clc
inc
cmpsb
aad
push
ss
jmp
mov
das
fxch
or
das
scas
lock
gs
loop
push
data16
jp
daa
cs
push
cmp
inc
iret
popl
add
add
inc
xchg
add
sub
jo
mov
mov
fidivs
xor
mov
pop
pop
sbb
xchg
or
std
sbb
sub
push
call
iret
js
jnp
jo
add
fldcw
jns
jp
cmp
adc
xchg
adc
mov
push
loope
into
enter
icebp
loopne
fsub
push
push
xchg
dec
add
iret
cmpsl
push
cmpsb
xlat
js
and
pushf
test
jne
aad
sub
lcall
cltd
adc
mul
iret
adc
push
mov
push
fistpl
movsb
xchg
or
pop
mov
lahf
xor
inc
pop
add
push
xor
leave
cmp
adc
xchg
push
jg
inc
dec
shll
popf
fldlg2
push
pop
ja
jno
mov
mov
mov
xlat
add
mov
push
inc
mov
xchg
shr
fwait
sub
or
jle
lret
jo
cmpsb
lcall
add
and
sarl
imul
dec
xchg
loopne
or
xor
icebp
ss
adc
arpl
mov
xor
mov
adc
repnz
out
popf
test
inc
inc
inc
pusha
sbb
push
cmp
rorb
push
clc
sbb
aas
out
loop
cmp
stos
xor
push
ss
pop
inc
add
fcomps
xor
jle
scas
lock
xor
aaa
push
cmp
jle
shlb
roll
and
test
inc
test
xor
movsb
adc
cmp
xchg
cmp
sti
mov
mov
adc
push
sub
add
addb
clc
cli
cli
inc
add
add
inc
add
lret
in
xchg
into
shll
jge,pn
call
push
sub
fwait
les
dec
iret
xlat
ljmp
sub
data16
lods
inc
pushf
xor
mov
sbb
mov
jmp
mov
ljmp
push
lods
cld
stos
ret
mov
dec
insb
dec
cmp
fcmovne
lcall
js
push
movsb
inc
and
xchg
sbb
clc
sbb
mov
lea
fcomps
popa
add
ss
ret
lock
jns
push
cld
iret
fdivrs
xchg
dec
sbb
fisttpl
insb
loopne
and
pop
mov
inc
sahf
inc
pop
rclb
jb
gs
jno
or
es
outsb
mov
push
out
stos
loop
sub
dec
cmpsl
adc
add
jne
mov
pop
sub
lret
sub
ds
sub
push
mov
cli
ja
jg
jo
mov
pop
test
cmpsl
sub
pop
pop
jne
xchg
push
nop
mov
inc
sub
cmp
scas
jo
loop
add
loope
sbbl
in
add
loop
and
pop
and
ja
add
ds
sub
adc
xchg
mov
and
in
mov
xor
push
out
nop
push
and
inc
xchg
mov
sbb
jb
mov
push
fs
setae
insb
fcmovnbe
or
icebp
test
scas
and
das
and
js
sti
icebp
adc
aaa
orl
mov
mov
cmp
arpl
loopne
inc
mov
ret
jmp
or
cmp
nop
or
mov
push
push
jp
mov
notb
and
jbe
outsl
push
movsb
rorl
nop
pop
jbe
cmp
scas
inc
mov
test
sbb
xchg
cwtl
js
sbb
outsb
ror
add
sbb
fstpl
loope
cmpsl
int3
daa
int3
ljmp
xchg
sbb
in
inc
rcrl
mov
pop
add
fs
fsubrp
loop
or
push
mov
mov
xchg
cmpsb
adc
out
jae
aaa
loope
test
arpl
add
repz
add
pop
mov
popf
jne,pt
sub
jp
lret
inc
inc
jno
xor
xor
add
pop
cmp
jge
cmp
ret
dec
pop
div
sbb
ret
cli
orb
addl
xchg
jo
pop
shrb
or
in
cmpl
enter
clc
adc
add
fsubl
push
push
test
fsubs
aas
mov
cmp
gs
lret
fsubrs
fdivl
filds
testb
cmpsl
daa
cmpsl
add
mull
jns
pop
jg
ret
lahf
cwtl
iret
push
call
adc
mov
jecxz
push
in
stos
inc
les
scas
insl
sub
js
add
pop
lock
movsl
and
push
push
mov
pop
add
cmpsl
add
pop
dec
mov
mov
repz
pop
pop
mov
pushf
jecxz
fwait
mov
sbb
sub
out
outsb
and
jecxz
and
neg
sarl
into
pop
sahf
out
push
jo
fisubrl
jnp
xor
xchg
pop
jle
mov
inc
inc
in
pop
pop
sub
insb
pop
add
mov
jbe
sbb
insb
pop
mov
fnsave
shl
stc
or
dec
xchg
outsb
add
add
inc
loope
in
push
cld
pop
cmp
adc
jne
cs
sub
fwait
sbb
push
ret
and
mov
inc
jo
pop
movsb
addb
add
dec
add
adc
add
lcall
int3
inc
lcall
pop
ss
jmp
xlat
add
iret
inc
push
out
outsl
cmp
cltd
sbb
clc
fimull
push
xor
pop
pop
sbb
pop
pop
test
icebp
mov
pushf
pop
pop
ds
sar
sbb
push
inc
inc
and
mov
push
cmp
pop
add
je
enter
add
mov
add
adc
inc
jb
stos
xorl
in
or
test
shlb
sub
in
inc
and
mov
movsl
mov
out
fdivs
mov
push
xor
loope
in
push
ficoms
jp
mov
nop
mov
and
mov
dec
jb
enter
inc
adcb
push
jl
cmpsb
stc
inc
xor
insl
add
sub
inc
cs
scas
repz
das
cmpl
mov
ja
mov
jmp
and
jo
cmp
and
pop
cmp
ja
or
adcl
es
push
xor
inc
pop
xlat
add
or
sub
enter
popf
lods
les
dec
mov
ja
add
xlat
jp
test
or
push
sub
push
push
bound
or
mov
mov
jle
or
push
inc
jne
test
xchg
push
into
mov
cmp
shlb
jb
pushf
jbe
mov
dec
loope
jp
ret
jbe
cmp
sbb
cmpsl
sbb
xlat
addl
sbb
pushf
test
nop
inc
mov
movsl
mov
divb
cs
arpl
jg
and
shll
repz
xchg
inc
cltd
fcompl
test
iret
sbb
mov
cmp
dec
jl
and
and
add
mov
pop
icebp
in
push
mov
fdivrl
mov
lahf
xchg
popa
inc
or
jbe
pop
fcomps
push
or
lock
sub
mov
mov
cmp
dec
mov
sub
cmp
xor
shlb
inc
insl
jg
mov
and
div
test
dec
mov
cmpxchg
add
adc
inc
sub
bound
push
xchg
mov
lea
cmpsl
jbe
add
inc
push
adc
sbb
and
and
sbb
out
sub
dec
cltd
push
sbb
push
daa
jo
aad
sub
inc
mov
or
arpl
data16
pop
fdivrs
sbb
xor
cld
icebp
jecxz
add
js
out
add
mov
sbb
dec
lret
lds
cld
or
sbb
or
push
push
ret
cmpsl
adc
fcoml
pop
call
add
and
inc
xchg
cmp
mov
add
add
mov
xchg
testl
cmp
inc
jle
add
lds
jecxz
aam
call
stos
jp
mov
mov
inc
ja
cmpsb
lock
out
movsl
movaps
sbb
int3
stc
mov
inc
call
mov
movsl
mov
out
push
sbb
xor
mov
xor
add
add
xchg
mov
dec
jle
bound
sbb
xchg
cmp
lods
sbb
loopne
jno
cmp
nop
inc
inc
scas
push
push
add
xchg
sbb
sbb
iret
enter
cmp
cs
add
or
dec
pop
es
cmp
fidivrl
push
rorb
add
sbb
and
hlt
add
sub
jb
push
mov
cmpsl
adc
int3
mov
push
lcall
jp
add
dec
sbb
fildl
jae
imulb
fsts
rcll
mov
iret
cmp
stos
outsl
cmp
xor
fs
cmp
fdivrs
jo
and
jl
cmp
rclb
mov
outsb
mov
xchg
mov
mov
das
test
fdiv
push
lods
sub
hlt
es
push
adc
jnp
jmp
adc
mov
or
lods
fistpll
cmpsl
ret
or
rcll
cmp
push
sbb
push
addl
test
xchg
mov
js
mov
and
push
jo
add
jge
mov
push
aad
ds
adc
jnp
adc
xchg
in
push
add
fs
mov
or
xor
xor
arpl
lret
movsb
lods
loopne
and
loopne
nop
and
mov
jbe
imul
sub
and
xor
sub
sub
xchg
sub
rol
clc
push
pop
add
cmp
rcrb
push
fcoms
scas
jno
push
scas
dec
aaa
lock
add
out
cvttps2pi
jne
jne
add
cmc
js
rorl
jle
sbb
rol
jl
clc
xchg
sub
jne
fnsave
jle
xchg
push
or
js
adc
ds
aaa
add
scas
mov
xorl
and
pop
fsubl
push
push
mov
shrl
sub
mov
pop
xlat
mov
movsb
inc
out
outsl
js
add
paddsb
mov
sbb
mov
inc
lea
shrl
sbb
xlat
inc
in
daa
push
and
sbb
xchg
daa
inc
ds
call
inc
inc
cmc
pop
add
push
or
mov
out
test
popa
lcall
lcall
loopnew
mov
shrd
gs
dec
inc
pop
adc
add
fwait
or
or
clc
jp
push
sub
out
sbb
fiadds
sub
dec
icebp
movsb
out
scas
mov
push
xchg
add
sub
push
adc
shll
xchg
cmp
push
push
scas
dec
xchg
inc
pop
cmp
int3
aad
mov
shlb
push
inc
inc
cs
rcll
cld
lock
cmp
jle
roll
dec
sub
add
daa
or
jmp
les
out
cmp
inc
inc
loope
add
cmp
and
aad
xor
shll
mov
sub
das
clc
inc
and
or
mov
xlat
insb
adc
leave
aaa
lahf
and
adcl
sti
iret
sub
fbstp
test
mov
addb
dec
pop
and
adc
incb
nop
push
outsb
sub
add
aaa
mov
push
and
jo
jmp
int
sub
cmpsb
insb
sbb
xchg
subb
bound
cmp
xchg
daa
pop
cli
sub
fcomps
push
add
or
mov
lret
jmp
dec
jo
lcall
js
pushf
sub
jno
call
jno
test
sub
add
sub
sbb
subl
lock
jmp
test
daa
or
mov
imul
and
adc
inc
inc
pop
out
int
jbe
mov
imul
dec
loope
mov
dec
mov
sarb
je
ljmp
xor
fsub
js
xchg
sbb
lret
cmpl
inc
int
mov
jp
jno
inc
dec
and
xchg
pop
jo
test
pop
fisubs
jg
gs
data16
and
scas
cltd
add
cmp
pcmpeqd
filds
sub
mov
push
pop
sub
add
loopne
fucom
aam
add
sbb
or
rol
or
and
mov
push
fwait
imul
lret
test
push
iret
sub
out
cmpsb
fsub
jno
dec
mov
pushl
lods
stos
pop
dec
test
inc
xchg
sbb
imul
or
nop
and
cmc
lret
sub
adc
loope
add
out
add
out
dec
enter
add
lret
stos
and
mov
push
xor
jno
mov
push
ror
outsl
add
or
and
lods
aaa
ja
jnp
jl
movsb
loope
ja
xchg
jo
rol
fsts
mov
jecxz
push
push
sbb
mov
adc
es
mov
mov
xor
mov
or
cltd
mov
popf
in
jnp
dec
cmp
lcall
jl
sbb
xchg
out
fbld
fldcw
aam
jno
xor
jae
add
std
pop
outsl
inc
movsb
adc
push
pop
andl
jp
dec
cs
dec
and
outsb
divl
ret
sahf
mov
xor
cmp
sub
mov
scas
xor
sub
je
mov
or
aaa
lock
add
xchg
mov
adc
adc
push
pop
dec
insl
pop
mov
clc
fdivrs
out
js
pop
add
pop
out
mov
ret
rorl
pop
mov
movsb
and
mov
in
test
fisubrs
adc
fsubs
arpl
pop
das
lods
fdivs
lcall
sub
push
sbb
push
dec
out
push
adc
add
or
sub
data16
sahf
jp
jge
sbb
inc
das
pop
cmp
mov
dec
into
sbb
and
add
jp
stos
pop
out
sbb
fsubrs
jg
pop
iret
stos
aad
rorl
imul
es
dec
mov
imul
add
mov
xor
hlt
jg
inc
pop
add
pusha
inc
fsubrs
iret
push
push
xlat
mov
cmp
pop
push
fadds
js
dec
pop
add
ret
push
pop
iret
jb
jle
jle
cmp
les
cmpsb
or
hlt
cmc
les
dec
pop
lods
pusha
add
fsts
jno
sbb
xchg
aam
cmpsl
jbe
clc
lret
cli
dec
fmuls
iret
mov
xchg
lea
es
push
inc
gs
xlat
call
add
pop
add
sbb
or
mov
cmp
mov
pusha
icebp
mov
iret
in
sti
dec
mov
lods
inc
js
ret
lods
push
inc
sub
sub
add
push
dec
xchg
push
pop
add
pop
fdivs
call
movsb
sub
test
lock
cld
push
in
daa
outsb
cli
pushf
loope
mov
and
lcall
orl
out
leave
push
push
dec
adc
call
pop
ljmp
ret
push
add
adc
dec
mov
loopne
xchg
dec
mov
xor
out
jmp
fisubs
loop
leave
lret
cli
je
push
out
aam
add
cmp
sbb
pop
sub
pop
fdivl
frstor
mov
sbb
call
mov
shlb
jmp
icebp
cs
dec
call
mov
lds
bound
aam
and
jne
roll
cmovp
sub
cmc
iret
xor
adcl
jo
jne
test
jo
and
xchg
or
mov
sub
inc
mov
inc
stos
lret
jae
adc
cltd
mov
xchg
jo
or
call
fwait
dec
cmpsb
mov
imul
mov
pop
dec
or
shll
sbb
int
xor
fdivs
push
mov
jne
jo
in
push
lods
test
inc
idivl
out
aaa
shrl
arpl
add
adcl
mov
jno
es
xor
mov
sub
jp
ja
push
loopne
xlat
xchg
push
ljmp
push
ret
fsubp
adc
iret
test
or
jo
push
sbb
fmuls
sbb
inc
and
sub
jne
add
invd
adc
push
pop
call
in
loop
out
loopne
jb
and
pop
and
pop
sbb
dec
pop
and
mov
adc
push
jns
jecxz
fiadds
push
sahf
inc
aad
jl
aas
outsb
pop
scas
pop
add
pushf
cmpsb
aam
sub
push
mov
subl
xor
sbb
sarl
jmp
adc
pop
int
jns
add
cmp
daa
pop
shlb
lods
nop
push
mov
push
lahf
sahf
mov
fwait
in
pop
cld
loope
sbb
dec
cmp
popf
cmp
mov
mov
movlps
cld
mov
xlat
out
dec
cmp
push
pop
sub
lods
adc
sub
push
sahf
sub
push
add
or
and
aaa
and
jle
std
or
jecxz
in
daa
mov
add
cli
loopne
sub
pop
mov
cmp
push
negl
stos
and
icebp
xor
pop
fwait
mov
push
mov
je
cld
push
cli
inc
inc
push
jne
lea
fwait
mov
inc
into
mov
jne
cmp
adc
add
pop
das
imul
dec
wrmsr
or
lcall
movl
fidivl
and
int
sti
xchg
xlat
xor
sarb
cmp
in
dec
test
sarb
daa
push
xor
cltd
pop
aas
in
push
cmpb
fcomi
jbe
data16
pop
stos
pop
add
inc
fcoms
ja
dec
loop
xorl
or
dec
inc
xchg
add
or
jg
nop
dec
cmc
lods
test
pushf
jg
pop
lret
jmp
dec
jp
push
das
popf
lds
xlat
out
add
les
xchg
add
adc
dec
int3
filds
push
xor
jecxz
add
iret
inc
je
loope
pop
hlt
mov
scas
adc
xor
jmp
shlb
mov
orl
mov
mov
add
flds
pop
mov
inc
ds
xchg
push
imul
mov
les
aaa
xlat
repz
inc
pop
xchg
add
jne
jle
pusha
test
push
and
adc
cmpsb
stos
ffreep
add
mov
add
push
faddp
jle
xlat
jo
je
xor
pop
add
jge
sti
aaa
jp
pushf
add
xchg
fwait
mov
ret
dec
and
mov
imul
imul
xor
aad
lea
test
int3
shrl
jle
pop
sbb
jbe
js
mov
sbb
pop
jo
and
push
add
stos
adc
sub
push
roll
mov
out
pop
out
inc
incl
xor
dec
mov
stos
add
dec
in
inc
add
push
pop
sbb
or
cmp
aad
jo
inc
lods
fisubs
mov
popf
inc
in
add
xor
or
test
xor
push
sub
dec
dec
cmp
out
fistps
add
jmp
pop
jle
and
or
pushl
xchg
jb
daa
ljmp
sti
mov
add
call
scas
dec
and
sbb
pop
or
insb
xor
adc
pop
sub
shrb
dec
and
call
add
mov
adc
dec
mov
je
lcall
sbb
jns
cmp
pop
in
loopne
mov
pop
mov
sbb
pop
mov
rcl
pop
cmp
test
adc
push
cmp
sub
or
sub
lret
and
push
shll
cmp
and
add
push
or
imul
int3
addb
add
dec
inc
jl
sahf
aaa
fnsetpm(287
dec
pushf
shlb
std
nop
cs
mov
out
xchg
lock
adc
lods
js
add
mov
jno
and
cld
xchg
xlat
sub
pop
fcoms
add
push
mov
aam
mov
and
add
mov
sarb
push
jne
add
orb
loope
pushf
mov
add
jp
add
sbb
dec
inc
cmp
jno
sub
adc
loopne
mov
push
insl
or
xchg
mov
int
inc
and
dec
jno
sti
adc
loop
mov
insb
pop
cmp
rorb
add
mov
cmp
dec
out
push
out
add
xor
sbb
and
inc
xor
add
daa
jecxz
mov
out
xchg
add
mov
iret
or
aaa
xchg
sbb
or
jecxz
ret
and
add
js
sbb
into
ret
in
sub
add
les
xchg
jne
in
push
xor
jbe
cmp
inc
and
in
or
dec
test
rcrl
push
cmp
test
xorb
push
movb
add
cli
inc
ds
or
testl
leave
iret
inc
xor
das
sbb
or
jecxz
jge
jecxz
adc
sub
sahf
push
pop
mov
sub
dec
mov
push
xor
pop
pop
mov
testb
cmp
mov
inc
loopne
popa
xchg
je,pn
ret
incl
repz
bound
mov
cmp
dec
pop
aam
subb
repz
ss
mov
test
mov
lock
aam
arpl
sbb
cs
je
xor
sti
add
ljmp
popa
das
repnz
loop
mov
mov
dec
rclb
loope
sbb
mov
inc
pop
sbb
movl
push
sub
jbe
popf
pop
xchg
inc
sbb
mov
jg
out
scas
or
loope
xchg
xchg
outsb
sbb
adc
fs
shll
inc
push
mov
js
sbb
add
adc
or
imul
cli
cli
xchg
int
je
dec
push
push
dec
aas
hlt
cmpsb
mov
incb
add
mov
js
push
add
and
add
imull
sbb
push
fwait
push
iret
aaa
imul
cmpl
fcompl
or
inc
pop
mov
push
or
mov
inc
loope
dec
cmp
call
out
xchg
lret
or
test
jnp
fsubr
shrb
scas
xor
pop
outsl
cli
xchg
test
cmp
fiaddl
push
jp
sub
data16
loopne
cmp
jne
test
add
popf
je
adc
dec
mov
sub
jmp
adc
mov
lahf
jp
test
int
je
xchg
insb
fs
ss
fldenv
iret
dec
pop
ljmp
xchg
push
rolb
data16
or
add
bound
mov
ficoms
adc
adc
cmp
scas
mov
enter
lret
mov
cmp
push
daa
jno
cmp
push
dec
cmp
mov
or
or
xor
ds
ror
mov
add
xchg
scas
loopne
out
scas
mov
rcll
mov
cmp
add
aad
push
lahf
mov
pop
mov
dec
xor
cwtl
fistps
mov
arpl
out
fistl
enter
dec
and
nop
mov
xchg
iret
ret
fsubs
into
jo
cmp
and
push
pop
stos
bound
xorb
mov
push
iret
or
xor
xchg
xchg
loope
popa
push
inc
cmpsl
mov
mov
jbe
push
lods
push
insb
push
ret
aas
or
or
pop
sbbb
test
xchg
je
in
jmp
mov
out
shlb
add
dec
cmc
dec
jno
mov
xor
pop
inc
cmp
adc
jl
test
sbb
test
clc
movsb
mov
aam
mov
js
or
push
mov
lods
or
cmp
add
lea
push
movsb
dec
cmp
mov
mov
push
sub
xchg
aam
fwait
not
adc
mov
bound
sub
repz
jmp
push
push
test
test
jns
xor
sbb
sbb
or
sar
std
and
stc
repz
pop
cli
xor
push
and
mov
cmpsb
aam
xchg
mov
jne
mov
ds
fisubrl
sub
rcrb
cmp
cmp
and
add
jge
mov
mov
xor
mov
ss
lcall
sbb
in
mov
adc
jb
jl
push
mov
inc
xlat
push
or
pop
addr16
add
xchg
lock
and
inc
es
je
mov
leave
sbb
and
scas
mov
stos
sarl
lds
stos
xchg
cmp
adc
inc
popa
fucomp
inc
adc
aam
cmp
iret
or
jg
xlat
fmuls
add
ret
push
pop
inc
or
adcl
mov
test
inc
lret
fs
pop
lods
data16
jns
hlt
sbb
js
insb
add
push
mov
cld
mov
jo
jo
ljmp
xor
mov
dec
jg
movsl
popl
ffreep
add
inc
mov
xlat
push
mov
lock
adc
and
adc
js
mov
aad
jo
bound
ffree
add
mov
add
data16
faddl
cmpsl
pop
sub
int
outsl
jbe
mov
jmp
call
jmp
push
fimull
pushf
aad
jle
push
lds
sub
sbb
outsb
loope
out
pusha
out
imul
jo
inc
mov
scas
and
ss
call
push
scas
rcl
pop
std
jo
out
pop
jp
add
ljmp
mov
dec
loopne
mov
sahf
mov
add
xor
inc
xor
shlb
out
fdivr
mov
xchg
add
dec
sub
stos
push
sbb
cltd
cmpl
push
cmp
test
jo
sbb
push
sub
rclb
ds
jp
cmc
repz
movsb
adc
pop
lret
jmp
dec
dec
mov
bound
fiaddl
and
pushf
fmull
or
xchg
rcrb
bound
aam
stos
cmp
call
addb
push
mov
fcomp
lock
test
aam
fnstsw
jb
aaa
lcall
lcall
scas
xor
push
sbb
insb
mov
dec
and
xchg
dec
or
push
mov
push
and
andl
or
mov
hlt
test
mov
dec
outsl
add
pop
or
flds
jnp
fldt
daa
bound
pop
pop
dec
xlat
jne
mov
sub
or
add
pushf
lds
adc
loopne
lds
incb
push
das
pop
popl
xchg
inc
mov
loopne
rclb
xor
test
ret
iret
adc
nop
push
inc
adc
adc
push
or
ds
imul
jg
or
lahf
mov
lret
and
fsub
test
adc
or
jne
push
pop
xor
inc
movsl
inc
sar
flds
hlt
mov
lret
xor
jo
fisttps
sub
cwtl
movsb
sbb
and
sarb
pop
sbb
sbbl
sub
stos
xor
and
mov
jne
movsb
fistps
pop
fdivs
mov
xlat
enter
jl
outsl
xchg
jns
add
fimuls
enter
pop
jne,pn
adc
inc
mov
fldenv
xor
inc
inc
dec
pop
sub
add
out
out
push
movsb
popf
jnp
inc
mov
mov
lret
sbb
mov
insl
xor
push
es
out
in
js
jbe
pop
fbstp
jl
jmp
fwait
shlb
xchg
movsb
filds
cli
xor
in
mov
push
roll
insb
mov
fldl
mov
pop
movsl
enter
inc
jmp
popf
xchg
in
es
rcl
lea
sbb
adcl
jno
and
xor
add
in
hlt
xchg
mov
mov
pop
dec
loopne
add
iret
jnp
or
jne
movsb
je
pusha
pop
testl
sti
mov
call
imul
adc
push
sbb
sbb
add
scas
aam
call
xchg
or
je
add
cmpl
pop
push
dec
mov
fiaddl
xor
arpl
pushf
pop
mov
scas
sbb
xchg
sbb
pop
sbb
cmp
inc
pop
sbb
push
inc
aaa
in
xchg
push
lahf
pop
lcall
inc
mov
push
xor
adc
shrl
xor
cmc
dec
ret
or
dec
xchg
loope
xchg
xchg
or
mov
adcb
popf
daa
jo
addr16
pop
jno
addb
add
out
popa
test
xchg
test
mov
sub
mov
adc
pusha
std
mov
or
push
xor
mov
jmp
shrl
mov
lods
in
rolb
jo
xor
fsubrs
xor
cld
cmp
inc
outsb
pop
pop
mov
inc
rcrl
andb
jmp
cmp
cmp
mov
test
push
push
clc
lret
add
test
aaa
xchg
push
faddl
inc
xor
hlt
or
loopne
lahf
int3
iret
cli
ss
push
test
jns
or
into
stos
fisttpl
inc
mov
jg
cmpsl
push
aas
inc
fldcw
or
xor
pop
insb
mov
and
pop
mov
add
mov
icebp
mov
xorl
lods
push
or
push
adc
pop
mov
jle
xchg
sbb
push
mov
mov
and
add
push
sarb
push
cs
mov
or
add
movsl
jne
or
xchg
pop
or
push
xor
fsubrp
rorb
fmuls
xor
push
adc
jge
addl
or
sub
rcll
enter
bound
jecxz
mov
mov
call
push
shll
xor
ret
xchg
daa
shlb
sub
add
dec
sbb
push
lea
lods
loopne
and
scas
sbb
lcall
jp
incl
mulb
mov
sub
and
cmpsl
sbb
ret
push
jno
loope
jl
dec
mov
test
mov
stos
pop
or
push
dec
cwtl
push
add
adc
movsb
js
rol
popf
sbb
sbb
cmp
std
inc
loop
fsubl
and
xchg
add
sbb
mov
lahf
ret
imul
jns
mov
pf2id
xor
pop
into
add
insb
pop
sbb
push
cmpsl
or
lock
or
cmp
jl
fwait
test
push
cwtl
lods
adc
mov
mov
and
add
popa
adc
cmp
popf
xchg
rcrb
stos
add
sbb
mov
push
add
into
js
adc
repz
dec
push
add
push
add
pop
and
mov
cmp
sbb
push
ret
dec
sub
xchg
add
loopne
ja
xor
ja
pop
adc
imul
out
mov
xor
xor
nop
mov
pop
in
sti
mov
mov
insl
and
popa
dec
jl
test
jne
jl
das
mov
xchg
aas
xor
adc
mov
fstpt
add
or
mov
ja
cmp
or
push
inc
mov
jo
sbb
sub
movsl
mov
pusha
and
inc
mov
call
fs
in
decl
jmp
sbb
aad
jns
mov
iret
lods
ja
jle
addl
in
lcall
mov
cmp
sub
sbb
mov
and
iret
cmp
sbb
imul
mov
pop
mov
cwtl
push
jl
dec
psrad
iret
idivb
fmul
sub
or
jge
mov
and
inc
lret
filds
outsb
add
out
fcom
dec
xor
cmpsb
inc
ljmp
adc
mov
loop
not
dec
xor
dec
popf
enter
aaa
jbe
xor
je
cltd
push
loopne
mov
incl
and
xor
push
jo
lcall
and
arpl
data16
or
test
lahf
add
clc
push
mov
scas
aas
adc
push
loop
icebp
lret
movaps
inc
lods
shrl
ja
jo
add
lea
lock
pop
scas
test
mov
or
inc
shll
xor
out
xor
lock
dec
out
add
pop
adc
scas
jl
mov
mov
in
punpcklwd
jg
data16
flds
inc
jmp
lock
sarb
mov
pop
ret
inc
xor
repnz
xchg
sbb
loop
mov
cmp
rorb
lock
rolb
das
sub
add
test
jne
or
cmc
mov
cli
gs
push
and
imul
inc
mov
pop
lods
pop
cmc
add
mov
stos
test
pusha
filds
xchg
icebp
popf
add
add
cltd
int3
add
ret
push
and
mov
cmpsl
fdivs
add
dec
add
lock
push
push
std
jae
add
adc
lock
mov
pop
ljmp
xor
push
mov
pop
mov
or
push
sub
repz
imul
xchg
pop
jno
and
loopne
mov
add
xchg
pop
lret
inc
repnz
scas
dec
pop
daa
ds
outsb
add
pop
xchg
mov
dec
pop
loop
daa
xchg
inc
in
cld
out
mov
dec
mov
cmp
pop
xchg
or
je
sub
fistps
subb
pop
sub
mov
adc
cmp
mov
sub
pop
jp
xchg
pop
jl
lods
rorb
pop
push
xchg
push
addl
cmp
mov
jb
mov
push
adc
add
sub
inc
insb
idivl
xchg
xor
push
cmp
push
imul
sub
dec
je
inc
xlat
test
xchg
je
imul
and
ss
cmp
sub
pusha
add
stos
xchg
push
lods
push
xor
into
cwtl
stc
mov
push
scas
hlt
lret
hlt
pusha
mov
mov
and
shll
jmp
mov
pop
loop
scas
and
jns
cmc
push
dec
cmp
aam
sub
not
cli
and
cmpsl
inc
fcmovnb
add
jmp
jo
adc
iret
xchg
mov
xor
push
js
pop
ret
popf
test
pop
sbb
adc
pop
push
loop
push
rolb
push
rol
pop
ds
test
push
push
adc
sbb
adc
jecxz
js
or
jge
push
lea
cmpl
mov
iret
mov
jmp
popa
mov
and
iret
loopne
push
xchg
cmp
add
in
sbb
fimuls
out
add
les
xchg
mov
jnp
mov
add
stos
jnp
jle
pushf
xchg
push
int3
sbb
pop
push
jae
and
iret
mov
ds
push
mov
sub
sub
jo
mov
in
and
lods
lahf
mov
jmp
adc
subb
pop
lahf
popf
clc
test
add
lahf
lret
add
mov
test
push
loope
mov
arpl
ret
push
mov
push
sub
aam
call
pushf
das
sahf
cmp
sti
add
test
lock
push
jno
stc
ret
inc
xor
ret
out
testb
mov
loope
add
pop
push
das
xchg
jp
ret
add
and
lds
sbb
loope
fisttps
subb
xorl
and
add
pop
movsb
add
dec
inc
adc
inc
mov
fildll
in
cmp
and
adc
pop
mov
jge
out
sub
mov
dec
and
sub
pop
rorb
pop
or
and
pusha
add
push
aad
cld
jp
xor
pop
insl
sete
mov
mov
adc
xor
cli
sub
aam
jae
arpl
fstpl
sbb
mov
adc
shrb
push
push
add
jge
cmp
and
scas
xchg
sti
dec
add
or
xor
sbb
mov
into
or
sahf
test
divb
or
push
push
cmp
cltd
paddsw
arpl
push
push
jl
fs
mov
mov
out
fnsave
sub
or
shr
rorl
cmp
int
clc
outsb
into
je
and
out
or
cmpsb
insl
sub
mov
out
out
mov
popf
testl
jns
es
add
or
xor
je
jmp
mov
pop
pavgw
ja
add
cwtl
jne
out
adc
fistpl
lret
xchg
out
push
ficoml
imul
flds
xor
loope
push
dec
rcrb
add
cmpb
in
inc
jb
lods
jmp
arpl
add
push
scas
shll
push
lret
add
sub
dec
sub
xchg
mov
test
ja
ja
mov
sbb
jo
out
jl,pt
sub
sub
sub
pop
bnd
mov
xor
cltd
push
sbb
cmp
jnp
xor
pop
cmc
pop
ret
inc
pushf
cmpsb
xor
pop
sbb
popf
mov
ds
andb
mov
and
clc
add
enter
stos
mov
adc
call
push
repnz
hlt
test
jo
cmp
add
mov
jb
popa
adc
pop
mov
xor
pop
cmp
add
xor
gs
lret
js
cmpsl
rorb
cmc
or
sbb
les
daa
sub
pop
shlb
movl
sub
dec
mov
push
lret
test
inc
loop
jne
sti
adc
subb
add
out
add
ja
or
subb
mov
sti
pusha
mov
inc
sub
add
xchg
dec
enter
push
add
cmpsl
stos
test
scas
shll
aaa
in
add
add
imul
icebp
push
pop
or
mov
lods
test
xor
sub
das
ljmp
mov
inc
int
jnp
push
sbb
vunpcklps
lock
mov
adc
mov
cld
sbb
pop
adc
fcoms
jo
jmp
mov
test
push
mov
sbb
mov
adc
or
leave
pushf
push
and
je
mov
iret
xchg
dec
adc
mov
or
jbe
dec
add
xchg
inc
lock
jecxz
push
ja
lret
sub
adc
jg
add
sbb
mov
add
fidivl
jae
rolb
fdivrs
jbe
loopne
or
js
daa
jmp
mov
pop
jne
ss
jae
jbe
and
es
les
ja
xor
pop
mov
out
clc
js
lret
sahf
cmp
sbb
push
test
adc
xor
in
mov
sbb
test
in
roll
rol
inc
and
xchg
sti
inc
sbb
sti
adc
out
and
sbb
cmpsl
out
sub
push
ja
or
das
jne
das
addb
mov
or
movb
sbb
push
js
test
push
stc
xchg
adc
or
push
or
adc
jp
movsl
inc
xchg
enter
add
fs
ret
sbb
push
pusha
je
push
lret
and
dec
xchg
daa
popf
daa
hlt
out
push
mov
loope
jge
xor
js
or
ss
dec
enter
loopne
xor
push
cmpsl
imul
sub
ss
mov
add
xchg
cmpsb
iret
push
inc
sbb
adc
iret
stc
xor
lds
push
inc
pop
lret
lea
lock
in
pop
push
ret
jmp
sub
call
jo
push
mov
loope
scas
jno
mov
jb
mov
insl
mov
mov
mov
adc
loop
or
ret
stc
rolb
xchg
inc
out
xchg
or
das
push
in
orb
and
push
cs
xchg
or
mov
cs
add
pop
scas
testl
in
mov
imul
popa
iret
add
sbbb
clc
push
das
faddl
adc
shr
orl
add
fs
and
loope
sub
sbb
movsl
pusha
xchg
aad
xchg
or
imul
repnz
imul
iret
mov
aaa
jecxz
int
mov
or
inc
push
in
scas
fcompl
push
add
xlat
jne
jl
ret
xor
pop
inc
sbb
xor
loopne
add
inc
orb
jnp
sbb
jns
iret
or
call
pop
or
pop
sub
roll
add
aas
cli
mov
pop
iret
adc
add
lahf
or
filds
data16
add
jns
add
sar
mov
aas
jmp
scas
push
out
pop
js
adc
add
push
aas
mov
sub
outsb
and
mov
sub
int
outsl
adc
xchg
jno
mov
cmp
loopne
inc
dec
push
sbb
mov
sub
subps
ret
sub
scas
pop
add
inc
sbb
int3
xlat
aas
stos
lock
sbb
and
xor
stos
mov
orb
add
inc
mov
test
xor
enter
inc
insb
add
scas
imul
jl
popf
mov
pop
mov
xor
inc
adc
jmp
or
test
mov
lea
out
pop
sbb
pop
stc
pop
loopne
mov
sti
xchg
js
add
cmp
fwait
xor
push
addl
insb
xchg
jns
sarb
out
push
or
mov
out
jg
popa
sti
xchg
cs
jmp
das
adc
mov
mov
push
fiaddl
xchg
add
popf
out
or
iret
les
test
dec
rolb
das
or
ret
test
andl
jmp
out
add
pop
cmp
push
mov
jle
add
pop
fdivs
les
jl
cmpsb
mov
das
pop
aas
add
sbb
dec
sub
mov
ret
pop
jp
push
push
ja
and
mov
mov
xor
imul
aam
push
or
or
sbb
mov
push
loope
cmp
adc
jg
and
ja
pop
cmp
in
lahf
and
xorb
das
loopne
mov
inc
jl
lds
jbe
es
xchg
loopne
test
stos
inc
xchg
pop
lret
or
adc
add
cmp
sub
js
sbb
add
shll
dec
and
dec
cli
loop
dec
sub
mov
push
xchg
aam
cmp
data16
das
cmpl
sbb
scas
push
fdivrs
xchg
popa
mov
adc
or
xor
ss
sbb
loopne
icebp
cmp
gs
push
add
jle
in
popf
xchg
sbb
mov
sbb
push
pusha
out
pop
mov
adc
into
add
xchg
cmpl
das
xor
ss
cmpsl
and
sbb
xchg
fsubr
shll
sbb
sbb
push
or
ss
jge
mov
rorl
pop
or
mov
xor
xchg
shrb
into
add
add
add
push
dec
sahf
mov
in
icebp
mov
outsb
out
or
out
ds
arpl
or
nop
xor
cmp
in
pop
sbb
inc
das
std
fdivrl
jnp
loopne
push
or
cmp
mov
out
xchg
imul
call
cmpsb
daa
pop
adc
test
push
or
mov
or
adc
and
jmp
or
inc
or
pop
out
aas
adc
sbb
xor
mov
cld
mov
iret
push
adc
out
sbb
in
xchg
loop
push
cltd
push
xor
sub
sbb
rorl
sub
lret
and
pop
add
fsubs
mov
xchg
and
rcrl
mov
lcall
push
dec
push
xchg
sub
scas
jae
sbb
push
data16
push
sub
xchg
sbb
imul
pop
push
and
mov
add
addl
inc
add
or
mov
add
jle
hlt
add
add
subb
incb
jecxz
pusha
add
inc
pop
mov
push
js
in
cmpsl
sarb
mov
add
xchg
aas
pop
fsubs
cwtl
xor
sbb
pop
aas
cmp
or
add
mov
push
add
lea
xchg
test
adc
es
add
jg
mov
and
xchg
jmp
push
in
mov
push
aaa
cmp
sub
int3
rcrl
dec
daa
std
ret
negl
and
filds
shll
sbb
pop
lahf
jns
outsl
mov
add
adc
jecxz
push
cmp
out
clc
insl
cmpsb
and
mov
les
mov
xchg
xor
cmpsl
std
mov
pop
mov
ds
inc
xchg
push
cmp
jo
dec
test
lods
xchg
stos
jno
cmc
call
cmpsb
add
jmp
shr
jnp
jp
pop
int
in
outsl
jecxz
sbb
mov
push
xchg
wbinvd
jnp
and
push
lods
jecxz
imul
mov
sti
and
pop
add
add
push
xchg
sbb
or
enter
stos
ds
test
std
xchg
cmp
call
repz
sbb
mov
lods
push
lock
stc
popf
dec
pop
bound
es
sbb
pop
xor
add
add
mov
mov
cmpsb
inc
push
add
clc
add
lods
and
push
test
int3
lcall
mov
or
push
mov
dec
add
jge
push
and
pop
push
nop
sub
out
pop
xchg
fcmovu
add
mov
pop
or
lock
bound
xchg
and
jne
sub
pop
inc
xchg
jo
sbbl
imul
inc
xor
jo
test
insl
inc
sbb
add
enter
sbb
orl
fsubrl
frstor
pusha
das
sbb
sub
movsl
dec
jnp
and
pop
cmp
sub
sarl
orb
outsb
dec
add
and
aam
dec
scas
add
push
popf
mov
jb
sub
rorb
mov
add
dec
scas
cmpb
cmpsl
mov
mov
rolb
add
je
or
inc
aaa
cmc
inc
mov
pop
push
mov
stos
shl
addb
pusha
push
inc
stc
pop
idiv
cmp
push
mov
push
push
popa
mov
and
pop
pusha
or
nop
mov
xor
xchg
cmp
xchg
sbb
iret
dec
adc
or
push
jne
call
jmp
xchg
les
pusha
xchg
push
pop
daa
ret
iret
imul
lods
sbb
repz
jns
add
add
leave
loope
stos
push
test
or
dec
inc
in
aam
addr16
dec
add
js
mov
daa
psubusw
rcll
test
lock
add
xlat
and
xchg
psubw
daa
movsl
cli
rcl
aaa
jmp
mov
inc
aam
loopne
shl
sarb
cs
aas
daa
scas
and
cmp
cmpsl
or
rcll
adc
xchg
adc
adc
bound
cmp
mov
push
mov
loopne
xor
out
pusha
xor
lret
shlb
fwait
pusha
push
ret
adc
adc
ds
jecxz
pop
insb
sbb
sbb
mov
sub
jbe
push
sbb
pop
inc
sbb
aam
movsb
das
leave
ja
push
add
out
push
push
pop
pop
test
pop
inc
cmp
pusha
dec
movsl
lds
test
add
aas
flds
lock
shlb
outsb
aaa
scas
add
fwait
lods
xor
lcall
xchg
sub
addb
addr16
loopne
test
xchg
add
add
je
push
jp
pop
mov
cwtl
int3
jnp
mov
push
mov
icebp
fildl
shll
stos
cmp
adc
orl
mov
pop
mov
push
sub
rol
out
and
andb
push
jecxz
mov
inc
pop
lret
jo
jo
cmpsb
pop
sti
lods
sbb
mov
cli
or
cmpsb
out
loop
sub
xchg
daa
mov
inc
xchg
ret
add
pop
inc
daa
and
inc
incb
push
add
shlb
adc
mov
out
sbb
popa
jns
iret
fisubs
xor
cmp
cltd
mov
jecxz
xorb
cmp
ja
pop
cli
pop
inc
or
sbb
or
or
cmp
test
or
adc
js
push
or
mov
js
mov
mov
xor
jp
mov
mov
test
lahf
lahf
push
xchg
pop
mov
sbb
in
push
push
les
iret
dec
testb
push
push
push
rcll
and
out
xchg
ret
push
insl
push
sub
push
mov
pop
aad
and
inc
cmp
push
in
shrl
rorb
cmp
test
aaa
cmc
sar
sti
sahf
add
scas
sbb
clc
imul
stos
mov
mov
mov
mov
jnp
sbb
or
lds
in
fisttps
test
dec
sub
fisttps
xchg
dec
and
repnz
adc
add
push
lds
daa
mov
loopne
mov
cmpl
js
dec
scas
sbb
inc
or
mov
add
test
pop
lcall
dec
bnd
push
test
testl
in
push
jg
or
add
jmp
sbb
mov
je
inc
jge
ud1
jo
add
mov
lret
xor
inc
and
xchg
dec
mov
cmpl
inc
aaa
out
add
push
iret
cmp
loopne
cmp
pop
and
add
cmp
pop
mov
adc
ret
add
test
jle
inc
and
pop
clc
cmp
inc
inc
aam
or
andl
xorb
mov
mov
sub
stc
mov
aaa
fidivrs
int3
lock
out
test
pop
cmpsb
or
xor
adc
and
dec
leave
and
ret
and
xor
sarb
push
pop
push
or
xchg
sub
shll
inc
jbe
rcl
dec
lds
mov
or
mov
xchg
cmp
mov
stos
push
in
test
mov
lret
pminub
and
mov
or
dec
push
xchg
dec
mov
in
rcr
push
mov
mov
xchg
cmpsl
movsb
xchg
popa
pop
sbb
xlat
mov
sbb
shlb
pushf
mov
add
flds
add
subb
inc
mov
push
out
mov
testb
mov
pop
adc
pop
push
mov
shrb
add
push
cmp
mov
mov
and
cmp
sbb
cmp
inc
mov
xor
push
xor
scas
or
mov
test
pop
add
sbb
xchg
fcmovb
sbbl
or
pop
push
fdivrs
scas
mov
ror
pop
inc
sbb
shll
sbb
mov
inc
inc
imul
das
cwtl
imul
xor
insl
pusha
sub
loopne
inc
pop
std
into
pop
notb
push
sbb
pop
inc
dec
filds
cmp
cld
sub
mov
ljmp
in
sti
aas
enter
adc
jg
sbb
pop
aaa
xorb
enter
push
test
xor
scas
movl
test
mov
pop
sub
push
cmpsb
ret
cmp
jecxz
sub
and
loop
and
in
cmp
mov
jmp
xchg
lea
js
iret
cmp
sub
cmp
xchg
add
pop
jp
fsub
fistpl
stos
adc
jg
scas
xor
std
in
adc
stos
mov
pop
mov
mov
aad
rcll
xchg
sub
out
cmc
loop
sub
or
or
je
cmp
pop
xor
into
cmp
inc
arpl
les
cmp
cmpsl
iret
xchg
shlb
mov
xchg
test
mov
fwait
jecxz
jbe
and
stos
or
addr16
mov
xchg
cli
shll
adc
xor
inc
sbb
or
jae
js
jo
inc
mov
ret
mov
repz
xor
jo
and
pop
cwtl
add
scas
xchg
rclb
mov
mov
outsl
cld
push
arpl
ja
aad
popa
and
push
test
es
adc
dec
jl
adc
sub
int3
rolb
aad
adc
jns
mov
stos
popa
addb
mov
mov
ljmp
pop
and
push
sub
sbb
fildl
test
push
add
jmp
xchg
das
loopne
and
ljmp
sbb
jae
adc
mov
push
cwtl
mov
fwait
pop
pushf
add
or
push
mov
addb
sub
pop
adc
inc
mov
xchg
addb
mov
cmpsl
mov
ret
or
stc
gs
push
push
xchg
inc
mov
lea
cmp
xor
mov
insl
cwtl
fsubrl
sbb
nop
jge
mov
test
das
orb
out
cwtl
nop
insl
imul
loope
lcall
pop
pop
inc
push
push
dec
xchg
aas
scas
mov
pop
loope
fistps
dec
pusha
jge
xor
cs
ret
fs
sub
sub
ret
add
lcall
add
xor
pop
popa
movsl
push
sbb
movsl
xor
xchg
pop
fdivs
cwtl
mov
or
lret
cmp
jns
pop
movsl
lret
es
insb
sti
inc
inc
dec
stos
ss
ret
add
addr16
jns
push
pop
aam
lret
femms
push
cmp
repnz
int3
push
sahf
adc
je
jnp
jbe
adc
jne
and
push
sub
jnp
popf
mov
and
icebp
nop
sbb
dec
push
loope
shll
jg
jmp
in
xchg
pop
jp
add
mov
jae
adcb
and
and
push
add
inc
or
iret
ret
push
adc
add
xchg
in
jbe
es
ja
inc
cld
push
inc
mov
add
push
ljmp
and
push
or
and
push
data16
ja
fcom
cwtl
sbb
aam
and
mov
xor
cs
mov
test
popf
mov
cmpb
mov
pop
out
sub
push
repnz
push
add
aad
loop
hlt
leave
jecxz
jnp
lods
es
mov
cmpsl
mov
xchg
lock
mov
mov
movsb
jns
jecxz
adcb
xchg
enter
lods
add
std
add
divb
adc
daa
sub
adc
rcrb
sbb
push
pop
pop
jbe
in
shl
shll
push
xchg
and
dec
mov
clc
adc
mov
scas
and
sbb
data16
pop
stos
mov
push
imul
adcl
aas
jb
push
push
dec
push
scas
jl
ja
mov
out
sahf
or
dec
dec
push
frstor
pushf
pop
xor
xchg
je
popa
cli
dec
and
js
scas
jne
ja
loopne
into
in
adc
orl
into
or
jo
inc
lock
pusha
inc
dec
arpl
push
roll
push
orl
aam
adc
sti
test
add
sbb
push
fnstsw
sbbl
mov
nop
pop
xchg
adc
loope
dec
daa
jno
add
xchg
lea
mov
sub
dec
repz
sbb
pop
adc
adc
mov
and
xorl
xor
jno
dec
pusha
nop
mov
xlat
scas
rcrb
jecxz
testl
sub
push
pop
cmpsl
lahf
push
mov
push
xor
sub
testb
inc
adc
push
fnstenv
out
arpl
ror
rorb
sbb
aad
xchg
mov
jl
loopne
jb
lods
xchg
mov
inc
int
jae
push
cmp
xchg
jle
jge
add
mov
mov
vcvtsi2ssl
cmp
fldcw
and
inc
lcall
sbb
int3
or
mov
sub
mov
jp
movsl
dec
iret
or
xorb
test
inc
pop
stos
hlt
xor
cmp
dec
clc
js
in
xchg
push
adc
out
aam
push
mov
add
mov
or
adc
js
fsubl
inc
jle
xchg
xchg
rorl
pop
or
add
bound
scas
dec
jb
mov
dec
cli
xchg
jp
inc
adc
test
cmp
clc
xor
fstps
ja
fstpl
fsts
stos
popa
pusha
mov
fs
rcr
inc
ljmp
cltd
pop
test
mov
imul
call
mov
mov
rcll
add
jns
xchg
je
add
arpl
or
aaa
rolb
outsb
mov
jns
push
jecxz
cli
mov
stc
mov
loopne
push
sub
sub
das
xchg
pop
jp
cmp
or
sbb
pop
cmp
add
sbbl
adc
imul
jl
test
roll
lock
loopne
out
sub
es
xchg
jo
imul
xchg
adc
roll
inc
cmpsl
int3
mov
dec
cmp
push
push
dec
pop
sbb
mov
dec
mov
and
pop
mov
sarl
push
add
lahf
push
xchg
scas
insl
daa
add
and
or
mov
sub
gs
lods
mov
jns
sarl
sbb
sbb
sub
cmp
icebp
fdivrs
adc
pop
mov
dec
adc
psrad
add
adc
jl
cltd
jne
or
mov
pop
icebp
mov
push
mov
aaa
mov
sbb
or
movsl
sbb
stos
pop
cs
mov
dec
in
adc
adc
or
or
pop
mov
sub
pop
rcrl
mov
pop
scas
mov
mov
jmp
add
mov
cltd
shr
and
insl
popa
or
push
mov
or
out
idivb
or
push
cmp
int3
fs
sub
xor
movsb
iret
js
jne
add
fmuls
lahf
jno
mov
cmp
sub
scas
test
xor
inc
xlat
test
push
nop
push
or
pop
ljmp
addr16
cmp
xlat
dec
mov
xor
movswl
sbb
mov
push
fldcw
repz
jae
cltd
addr16
push
dec
sarl
xchg
stos
push
mov
movsb
hlt
jge,pn
cmp
dec
sbb
imul
jmp
or
mov
icebp
movsl
ret
psubb
pop
add
in
sub
push
setno
mov
lods
add
xor
cmovp
stos
xchg
push
sbb
inc
inc
sub
subl
jge
cmpsl
jo
push
xor
mov
xorb
dec
inc
mov
xchg
and
mov
sbb
shl
push
adc
mov
jnp
push
sbb
aas
call
out
in
sarb
sub
push
inc
lods
sub
int3
push
xor
jne
jo
subl
loope
xchg
dec
and
sbb
push
sub
ret
sbb
dec
push
bound
outsl
jno
dec
rcrl
pop
push
mov
mov
pop
add
test
sbb
or
imulb
mov
jbe
lods
xchg
fldenv
ret
fisubrl
add
inc
sbb
shll
addb
pop
xchg
test
daa
ljmp
shr
icebp
dec
outsb
xor
das
hlt
or
scas
test
sti
xchg
cltd
adc
fdivp
and
ds
mov
mov
xchg
jo
stc
and
fldl
adc
adc
je
jae
xor
mov
add
testl
inc
neg
iret
xor
adc
push
dec
out
je
sbb
hlt
test
sbb
or
loopne
jnp
cltd
mov
test
add
adc
add
adc
in
scas
mov
insl
add
xorl
aas
in
ljmp
pop
movsb
sahf
sub
lcall
or
iret
push
pop
cmp
and
or
pop
scas
jae
push
xor
mov
pop
adc
lahf
imul
add
dec
jbe
lock
loope
xor
mov
scas
add
mov
mov
lcall
repz
ret
std
iret
xlat
call
xchg
daa
jae
les
call
push
into
pushl
data16
push
or
mov
sbb
sbb
loope
xor
or
inc
dec
mov
and
ret
int3
pop
or
xchg
hlt
data16
xor
add
or
pop
insb
pusha
loope
add
add
sub
mov
mov
movsl
sbb
add
js
cmp
ret
sub
or
push
dec
add
adc
cmp
jno
inc
clc
cli
mov
not
bound
and
bound
adc
es
push
icebp
test
jnp
stos
into
jno
cs
push
dec
mov
icebp
add
mov
add
flds
pushf
cli
cmp
ret
push
out
or
dec
dec
ret
or
push
jmp
cs
xchg
sbb
cmp
jle
pop
lods
subl
mov
roll
adc
mov
orl
pop
aam
jns
xor
sub
push
mov
and
push
cmp
test
daa
xor
mov
je
add
pop
add
jle
xor
jl
repnz
lahf
pop
sbb
ret
mov
add
cmp
jno
mov
sbb
jmp
inc
fs
push
add
jne
xor
xlat
jmp
push
bound
and
fadds
inc
stc
or
jmp
ret
dec
sub
loopne
cmp
pop
push
das
xor
test
iret
add
repz
lcall
lret
aad
and
dec
push
lea
adc
out
mov
decb
adc
lock
and
dec
push
or
aas
xor
or
jne
push
ljmp
mov
out
fcomps
add
sbb
jl
jle
lock
adc
jp
popf
pop
in
pushf
lods
imul
pop
push
jl
sbb
sbb
jbe
mov
adc
addb
push
sbb
addb
sbb
push
adc
aad
filds
xor
mov
sbb
or
xchg
loopne
or
dec
jmp
sbb
fcoms
lods
dec
jno
mov
es
ds
add
lods
imul
dec
daa
imul
xchg
add
cmp
divb
pop
xchg
mov
sub
popa
lods
adc
scas
adc
outsb
mov
scas
popa
adc
call
cmp
push
pop
inc
test
pushf
data16
sahf
in
iret
mov
jmp
or
out
cmpsb
or
cmpsb
sub
adc
jno
hlt
adc
ja
mov
add
sbb
aaa
add
inc
sub
cmpsb
data16
add
sbb
inc
sbb
adc
aad
add
jecxz,pt
push
loopne
iret
mov
das
icebp
scas
cmp
xlat
loop
and
aaa
addb
iret
push
icebp
inc
mov
pop
fldenv
inc
cltd
and
cmpsl
push
push
cs
adc
mov
fisubrs
jecxz
jge
dec
ljmp
mov
cmpsb
test
adc
add
pop
test
jmp
mov
notb
sub
jle
xchg
or
aaa
in
add
and
push
sbb
dec
or
adc
xchg
inc
js
sbb
and
and
add
mov
nop
in
call
es
or
clc
mov
pusha
xor
orl
pop
add
dec
cli
and
lock
add
out
in
inc
or
or
jecxz
adc
add
jmp
xorb
fcomi
add
test
gs
shrb
xor
rorb
xchg
clc
call
xchg
xchg
ret
sbb
lret
cltd
sbb
add
lea
loopne
inc
inc
cmpsb
ret
arpl
mov
jle
fucomp
inc
jp
add
xor
add
xchg
shrb
sub
ja
dec
or
test
lock
add
mov
hlt
je,pn
dec
add
sub
jno
mov
xchg
xor
inc
addr16
push
sub
leave
mov
lcall
jne
adc
ror
pop
aas
fistps
xor
push
cmp
jo
ja
movsl
cmp
add
pushf
add
lret
sub
jo
xor
test
into
daa
loop
mov
iret
jbe
mov
cmpb
xchg
test
mov
cmp
add
sub
imul
mov
sbb
xchg
popa
mov
sub
cmp
ret
xorl
mov
and
insl
cmp
in
lods
lret
lcall
mov
add
aas
push
insl
pop
fadds
jbe
inc
xchg
xchg
scas
xor
push
dec
in
xor
push
cwtl
xor
cwtl
loopne
sub
add
adc
data16
or
mov
push
xor
sub
mov
jg
and
dec
mov
adc
enter
adc
cmp
clc
jne
jnp
scas
or
test
dec
and
pusha
lock
mov
loop
out
hlt
sahf
push
xor
les
pusha
xor
pop
mov
pop
or
xor
mov
dec
adc
dec
cmp
dec
repz
push
sahf
or
shl
or
out
sarb
mov
hlt
or
inc
lret
dec
leave
movsb
dec
fsubs
sbb
dec
int3
xor
pop
loopne
pop
sbb
stc
sbb
xchg
jae
imul
test
xchg
aaa
icebp
sbb
icebp
pushf
xchg
ljmp
dec
les
add
add
mov
inc
xor
sub
adc
mov
test
insb
ljmp
aas
loope
cs
fs
inc
ljmp
ret
add
add
in
jg
lcall
xlat
lods
movaps
test
enter
repnz
fwait
cmp
push
push
pop
fidivl
outsl
aad
mov
mov
sbb
test
or
ljmp
mov
lds
repz
mov
test
mov
xor
sub
sub
push
xchg
cmpsl
jo
push
jecxz
mov
xor
aam
in
push
adc
xchg
adc
cmp
jne
pushf
mov
or
in
push
cs
and
aaa
or
icebp
lods
dec
and
adc
daa
cmpsl
adc
shlb
mov
cmpl
cli
test
push
shlb
and
cmpsb
dec
mov
orb
xlat
sbb
fldl
out
or
aaa
and
sbb
cmp
pop
xlat
fcmovne
add
rorb
dec
and
iret
sub
add
xor
cmpsl
testb
insl
addr16
xchg
popf
cmp
test
rorb
bound
cmp
cmc
pusha
dec
loope
or
xor
sub
inc
mov
jo
pusha
xor
mov
add
inc
das
sbb
iret
sub
sub
push
dec
in
mov
jecxz
pop
pusha
sbb
push
push
daa
test
mov
sbb
adc
out
outsb
fcmovne
cmp
lea
jo
mov
fbld
sahf
xor
add
sub
scas
stos
adc
xchg
fsubs
jbe
pop
mov
or
xchg
mov
and
inc
stos
fidivrl
add
cwtl
push
fmull
stos
test
and
fstl
xor
and
or
jno
xchg
icebp
jmp
fmuls
out
pop
and
add
and
hlt
adc
push
lahf
jnp
cwtl
cld
adc
fadds
inc
loope
dec
gs
add
add
dec
inc
pmaxub
inc
sub
pop
or
imul
xchg
lock
xchg
or
sub
les
sbb
sbb
add
inc
mov
test
movsl
xchg
xor
xchg
fisubs
mov
dec
sbb
jnp
aas
add
or
pop
mov
shrb
int3
lods
jno
loope
movsb
inc
fdivs
mov
inc
dec
fwait
xor
jmp
movsl
scas
jo
fs
not
adc
pop
inc
lahf
mov
insl
ss
mov
xor
fcmovnu
inc
ss
inc
xchg
fildl
or
add
add
dec
push
sub
mov
mov
inc
adc
sbb
cld
push
lods
mov
daa
enter
or
mov
mov
dec
loop
cmp
jge,pt
xchg
push
lret
cld
rcrl
popa
shlb
jge
mov
out
jbe
ficoml
add
jmp
js
or
lret
cmp
adc
add
outsb
xor
xor
cmpsl
mov
pushf
imul
sbbl
lahf
or
dec
push
pop
sbb
popa
inc
jg
or
sti
and
idivl
jg
test
and
sbb
jle
jg
xchg
dec
adc
mov
loopne
dec
cld
or
aas
sub
xor
inc
cmp
dec
in
shrb
dec
xchg
iret
insb
jns
scas
mov
lods
and
mov
scas
jp
repz
and
leave
cmp
fmuls
aad
pop
mov
add
ljmp
ret
or
movsl
das
jmp
ret
push
dec
jg
xor
jnp
das
sub
int
mov
repz
ret
into
call
dec
sbb
xlat
lds
cmp
inc
in
stos
cs
in
scas
iret
loope
dec
fwait
add
mov
jg
add
fnstenv
ss
mov
out
xlat
jae
inc
rcrb
adc
rorb
push
mov
adc
cld
lret
jg
sub
cmp
ret
insb
pop
inc
cmp
mov
inc
insl
jnp
pop
push
ret
call
adc
push
stos
andl
push
js
xchg
lahf
xor
loope
fstpt
pop
imul
inc
addr16
jl
mov
sahf
addr16
xor
stos
bound
push
jo
jle
mov
loop
and
mov
pusha
cmp
mov
sub
repnz
cmc
push
inc
fiadds
xchg
push
imul
mov
movsb
je
loopne
add
jecxz
shrl
das
das
xlat
stos
sub
out
xor
pushl
sub
shlb
inc
outsl
rcrl
enter
add
xchg
les
fldt
mov
xchg
les
rolb
push
loop
ret
sbb
mov
pop
mov
mov
add
stos
xchg
xchg
daa
xor
ficoms
ja
arpl
in
jne
punpckhbw
push
sub
lods
lock
pop
jl
jmp
arpl
and
ds
insb
paddusb
push
sbb
sub
sbb
dec
pop
mov
add
inc
xchg
inc
pusha
sub
inc
int
pushf
or
pop
add
int3
mov
mov
mov
sub
mov
add
jmp
and
xor
add
mov
js
shll
add
imul
shl
mov
mov
or
mov
rol
cs
mov
mov
mov
jp
test
jo
and
mov
fsubs
inc
fadd
dec
dec
or
jp
iret
push
lcall
pop
scas
pusha
ror
test
cmp
lds
mov
mov
inc
int3
leave
cmp
add
call
out
subb
and
and
xchg
or
inc
cmp
lods
frstor
jmp
out
lret
push
dec
cli
lds
ret
rcrb
or
jo
fildl
mov
ret
arpl
push
or
lods
arpl
cwtl
inc
pop
popa
inc
inc
roll
mov
fcoml
fcmovnb
jg
dec
mov
out
sub
js
inc
jb
aas
loopne
mov
mov
mov
jo
ss
test
loopne
sahf
gs
test
sbb
jo
mov
test
test
lret
movsb
cmp
stos
in
mov
add
fdivrl
aaa
stc
cmp
iretw
jmp
push
and
loopne
mov
jmp
sub
sbb
loopne
loope
mov
add
shld
lea
call
sbb
daa
mov
arpl
sub
fistpll
xchg
push
sub
cmp
test
jmp
dec
jbe
push
mov
xor
das
mov
jl
stos
jg
pop
fsubs
xchg
jno
out
arpl
jb
mov
test
add
cld
and
cmp
sbb
sbb
cmp
in
stos
xor
cmovp
aaa
add
mov
adc
mov
ss
xor
dec
mov
pushl
dec
out
add
xchg
and
sbb
lods
out
push
rcl
ret
lods
and
add
push
lods
pop
cmc
add
out
imul
scas
mov
jle
outsl
and
das
push
and
sahf
adc
fidivl
scas
adc
push
aas
adc
sbb
aas
insb
in
jmp
or
outsl
movsb
pop
stos
mov
iret
or
in
ljmp
sahf
push
pop
pop
sub
mov
jp
push
js
imul
fs
cmpsb
popa
sub
das
push
and
mov
mov
bound
test
out
mov
push
lods
mov
pop
jno
pop
mulb
mov
add
sbb
ja
arpl
add
dec
pop
xor
sub
int3
adc
dec
test
jo
mov
mov
adc
jge
pop
rolb
imul
ds
sub
popa
call
dec
mov
clc
sbb
and
aam
clc
pop
or
xlat
and
fidivs
test
xor
sub
push
andb
cmp
add
pop
xor
xor
aad
fcoml
lret
sahf
mov
add
idivl
popa
jbe
rclb
add
and
mov
xor
or
dec
or
or
in
cmp
or
sbb
fwait
rorb
lret
les
jo
add
ret
sub
or
in
stos
cmp
push
test
adc
fcoms
movsb
or
push
rolb
pop
mov
inc
cmp
fdiv
imul
or
cmp
and
call
mov
loop
pusha
jne
fldt
mov
jnp
xchg
js
sub
repz
pop
pop
pop
dec
popa
sub
mov
fadd
jle
and
dec
scas
jns
js
or
sbb
das
iret
testb
rorb
je
test
pop
cmp
push
jl
inc
hlt
and
add
addr16
out
xchg
or
out
fbld
pop
xchg
xchg
mov
push
repz
adc
add
cmp
mov
jns
push
push
test
aam
and
add
out
sub
stos
push
movsb
or
int3
daa
mov
jne
or
loopne
mov
je
jp
je
sub
addl
sub
add
rcr
movl
lret
popa
mov
add
jo
loope
add
pop
cmp
add
lock
rolb
push
adc
cmp
jbe
push
sbb
and
ret
jle
or
les
movsb
rorl
test
je
or
das
xor
movsb
xor
loope
push
adc
orl
ja
xlat
inc
adc
add
mov
dec
cmp
repz
lods
out
stc
cmp
push
aaa
lcall
sbb
and
or
xlat
dec
mov
mov
jl
mov
push
dec
push
and
addb
ret
mov
add
mov
adc
xchg
mov
inc
or
addl
add
xlat
mov
std
sub
loopne
int3
imul
sub
idivb
xchg
sbb
pop
inc
lods
hlt
icebp
daa
int
add
and
test
iret
cmpsl
add
add
pop
pop
pop
hlt
inc
pop
xor
out
lock
popf
sahf
int3
sub
inc
push
subl
iret
mov
js
in
out
popa
or
and
insb
loopne
test
je
dec
mov
jle
popf
mov
lret
gs
mov
lret
sbb
or
xchg
ror
dec
cmp
cmp
xor
clc
mov
cmc
sti
or
test
addr16
lock
in
inc
xor
sbb
stc
mov
aas
jnp
jbe
add
incb
pop
push
sbb
jbe
push
mov
test
and
mov
and
push
and
add
fidivrl
mov
es
lods
add
dec
call
ljmp
and
out
mov
push
lret
rorb
mov
neg
sbbl
lods
sbb
aam
sarl
add
push
aam
mov
sbb
push
pop
and
clc
repnz
and
dec
xor
xor
outsb
mov
jle
cmc
dec
add
xchg
dec
mov
loopne
adc
in
mov
push
outsb
test
pop
clc
rorb
sub
ljmp
push
and
daa
mov
push
dec
mov
dec
lret
cmpsb
out
loop
andl
pop
add
inc
or
dec
and
mov
icebp
sbb
into
sub
sub
dec
mov
imul
lcall
test
outsb
push
or
add
pop
add
jnp
cwtl
lret
lret
ljmp
jo
int3
jno
dec
aaa
cltd
out
dec
in
push
pop
lods
pop
xchg
sbb
add
out
mov
and
push
and
movsb
lods
cli
jb
in
jb
jae
lret
sub
cltd
pusha
cwtl
mov
in
fbstp
add
lret
and
xlat
lods
inc
or
loopne
and
sahf
rcr
mov
lret
add
adc
lret
andb
sub
outsb
adc
adc
cmp
push
or
jecxz
sbb
xchg
xchg
push
jo
pop
xchg
pop
rorb
adc
sbb
shll
sub
ror
push
add
scas
lods
enter
lods
pop
mov
fistpl
xlat
loopne
pop
dec
inc
movsl
xorb
in
pop
ret
xchg
shrb
jno
sub
loope
mov
js
enter
dec
movsl
jbe
test
out
movsl
popf
bnd
int3
and
jmp
pop
xchg
sbb
push
aaa
shl
movb
sub
sub
sub
jecxz
sbbb
lock
or
sarb
add
data16
int3
or
je
or
inc
cmc
push
add
jmp
mov
insb
repz
cmp
lods
in
cs
push
lods
imul
or
testl
in
mov
ds
and
adc
mov
ret
sbb
xor
or
sbb
roll
or
in
in
or
push
pop
adc
pop
jno
push
pop
xchg
sahf
aaa
fs
stos
imul
stos
adc
ja
es
jmp
loope
jge
rorl
mov
div
xchg
cltd
mov
aaa
push
mov
aaa
ss
enter
stos
pop
sbb
sub
xor
addr16
ja
sub
aas
packuswb
js
jp
stos
arpl
dec
or
or
into
mov
subl
xor
dec
jno
rcr
shlb
or
out
dec
insb
and
push
and
js
dec
mov
js
inc
xchg
or
out
jle
out
ds
or
icebp
pushf
dec
sbb
imul
jle
daa
sub
data16
movsl
mov
mov
pop
push
int3
int3
push
sub
sub
nop
inc
mov
cmp
out
mov
aas
inc
and
enter
mov
inc
rol
and
sbb
cmp
push
cmp
or
and
js
sahf
fistl
sub
lret
cmpb
cmp
lcall
je
divb
sub
push
fildl
xchg
push
js
stos
cmpsb
les
jae
sub
loopne
in
insb
scas
imul
hlt
xor
ds
jne
pop
imul
push
dec
insb
clc
les
fisubl
js
push
bound
ficoml
dec
in
std
jns
or
lods
fcoms
cwtl
cwtl
ret
push
in
xlat
shr
push
pop
iret
push
fsub
mov
add
or
or
mov
push
push
xor
stos
shl
pop
test
sbb
shlb
lret
add
jno
imull
lods
push
cmp
test
aam
push
or
loop
or
rol
xchg
or
cmp
out
sub
pop
scas
push
jno
pop
push
fsubl
movsb
stos
hlt
into
addl
jg
push
stos
push
sub
jae
sbb
iret
int
inc
in
gs
and
inc
mov
push
lods
loope,pn
add
jbe
mov
es
sbb
dec
or
loopne
dec
dec
jns
or
pop
movsl
lock
pop
ret
or
aad
repnz
ret
inc
push
cmc
xchg
repnz
add
cs
cld
int3
and
je
and
hlt
insb
roll
xor
push
and
lahf
pop
jns
shr
shrl
je
adc
loopne
pop
fs
sub
pop
lea
and
aaa
jl
xor
adc
xor
enter
push
push
inc
pop
repnz
fists
rorb
adc
sahf
sub
xorl
cmpb
faddl
cmp
jbe
or
es
push
popa
shlb
sbb
jns
incl
jno
pop
dec
xor
push
std
test
push
leave
inc
outsb
mov
int3
and
xor
mov
jb
sbb
jo
inc
in
scas
sarl
mov
jb
gs
jno
push
dec
clc
xor
xor
inc
addr16
mov
rcrb
loopne
xchg
jmp
cmpsb
mov
mov
cs
movsb
stos
xchg
arpl
add
pop
cmp
pop
mov
in
dec
and
mov
jle
add
shlb
xlat
test
enter
frstor
adc
push
xor
mov
inc
pushf
out
loope
repnz
out
enter
sbb
xchg
clc
xor
jbe
jg
jnp
adc
pop
iret
daa
test
pop
mov
ret
mov
bound
and
mov
add
add
shlb
fmuls
out
jge
loopne
xor
arpl
lods
mov
mov
pop
or
push
int3
movsl
mov
add
or
js
imul
lock
mov
aaa
mov
repz
pop
js
pop
ret
es
or
sbb
xor
cli
cs
repnz
loope
cs
shrb
test
mov
xlat
rorl
cs
jl
aam
scas
xor
sbb
dec
sbb
cs
test
out
push
and
pop
not
ficoms
pop
add
divl
shll
out
add
jbe
in
xor
in
cmpsb
in
into
push
scas
adc
cli
subb
pop
fwait
jp
jle
xchg
lcall
and
das
test
sbb
xchg
inc
pop
sarb
nop
add
sbb
push
mov
add
sbb
jnp
dec
loopne
orb
inc
push
cmp
xchg
pop
addr16
js
add
push
adc
in
call
xchg
movsb
jo
lock
mov
adc
iret
iret
adc
mov
repz
daa
cmp
jns
dec
inc
and
fwait
mov
scas
and
fnstsw
jo
pusha
inc
int3
aas
jmp
add
dec
dec
cmp
and
cmp
mov
js
cmp
mov
pop
mov
out
lcall
adc
jo
sbb
insl
mov
adc
push
adc
data16
pop
inc
ffreep
and
sub
lcall
scas
dec
stos
mov
icebp
aaa
fcmovnbe
cmp
ljmp
ret
das
and
inc
inc
into
mov
adc
xorl
push
push
std
lahf
ja
rolb
mov
sbb
lcall
push
aam
add
jo
dec
dec
lahf
lea
mov
push
inc
enter
and
rolb
dec
sbb
cmp
mov
test
lock
sub
sahf
ret
sub
sub
or
mov
jno
pop
lret
push
ret
jge
lods
and
push
jmp
xor
mov
xor
fnstenv
loopne
lods
sbb
sub
ret
ja
adc
mov
cmp
pop
stos
push
decb
aaa
das
pop
or
loopne
enter
iret
addps
cld
add
jne
movsl
fsubl
rcr
push
addr16
adc
jecxz
sub
xchg
fidivs
mov
jns
ja
or
dec
pop
rolb
jo
fwait
cmp
cmp
or
and
or
xchg
push
mov
pop
mov
leave
lods
add
ficoml
ret
in
je
sbb
xchg
mov
mov
xor
jle
aaa
das
out
mov
jo
xor
pop
sub
lock
cwtl
pop
add
mov
lods
adc
xor
sbb
sub
sbbb
inc
js
xor
adc
jno
in
stc
push
cmp
jp
out
push
stos
push
sub
clc
sub
sub
sbb
sbb
add
test
sub
aam
fs
xorl
loopne
aam
push
or
js
iret
and
fbstp
add
bound
inc
daa
sahf
sbb
sub
subl
xlat
mov
xor
rcrl
stos
jns
mov
imul
bound
inc
and
das
inc
dec
fidivl
adc
mov
rorl
cmc
adc
je
popf
lods
stos
sub
add
test
movsl
imul
pop
add
push
dec
ja
aaa
or
setbe
lahf
mov
jne
data16
sbb
sahf
dec
push
pop
pop
sub
jg
andl
jbe
cmp
out
pop
xor
shrb
cs
repnz
add
push
pusha
dec
xor
iret
add
jp
pop
ror
mov
add
sar
dec
rcrb
mov
xor
push
bsr
add
inc
cmp
pop
fimull
test
cmp
out
cmpl
mov
hlt
add
mov
cwtl
push
pop
mov
cmpb
fdivr
clc
jecxz
orl
push
mov
adc
cld
js
add
out
cmpsl
jge
mov
jne
into
addl
xchg
loopne
jnp
jns
and
test
sub
cwtl
jmp
das
pop
loope
jo
mov
add
or
ret
cmp
mov
pop
dec
and
add
popf
int
je
frstor
addr16
test
xchg
cmpsb
xchg
clc
sub
adc
adcb
std
adc
and
pusha
inc
inc
sub
in
loopne
add
or
adc
and
ljmp
dec
fadds
mov
add
sub
add
sbb
add
add
popa
push
adc
in
mov
add
dec
das
imul
push
pop
add
and
outsl
lea
in
push
and
das
or
das
subl
sbb
or
es
fcmovnb
push
inc
inc
push
popa
adc
push
pop
adc
sub
sub
add
or
loope
sub
sub
stos
in
andl
adc
mov
call
cmp
jp
xchg
paddusb
or
sub
es
pop
dec
mov
cltd
in
jbe
adc
pusha
mov
subl
imul
xor
sbb
xchg
fistpl
orl
test
and
pop
xor
mov
iret
cmp
jecxz
jl
sar
inc
jl
incl
test
mov
and
push
shlb
gs
filds
cltd
jmp
rorl
mov
loopne
out
repz
stos
mov
ljmp
xchg
sub
mov
notl
sub
loopne
test
mov
fsubl
inc
xchg
orb
test
into
scas
lea
shl
pop
into
dec
mov
push
pop
scas
das
inc
arpl
in
push
push
push
cmpsl
loope
jo
sbb
mov
pop
and
mov
js
inc
test
add
push
ss
mov
es
mov
sbb
mov
xchg
add
xchg
testl
lea
jbe
rcr
inc
adc
sub
pop
ss
jl
inc
shlb
add
jo
mov
xchg
mov
pop
add
mov
mov
add
xchg
add
test
jne
jo
rorl
mov
lods
push
call
sahf
inc
ret
adcl
mov
scas
push
or
and
and
data16
subb
jo
addl
dec
jge
cmp
push
and
mov
add
and
jp
jmp
xorb
outsb
int
sbb
adc
dec
int
mov
fdivrs
in
es
or
xor
fdivl
xor
pop
mov
adc
or
add
dec
mov
inc
fwait
push
add
or
adc
mov
outsb
loop
aad
loopne
push
mov
fldcw
mov
adc
jg
dec
and
cmp
pusha
xchg
arpl
adc
xor
push
inc
cmp
lock
rcl
pop
pop
mov
cwtl
out
jnp
imull
jnp
negb
inc
pop
sub
jle
add
sub
mov
sub
xlat
xchg
adcl
popa
sbb
sub
lock
std
sbb
push
xchg
ret
andl
pop
xor
jnp
popa
jle
and
push
int
roll
adc
sbb
and
and
rcll
or
sbb
inc
and
ret
scas
mov
push
jl
inc
add
pop
negl
jo
mov
lahf
jo
pop
sub
les
arpl
jp
scas
adc
mov
cmpsb
xor
popf
xchg
into
jle
jo
cmp
xor
mov
cmc
cmp
xchg
sbb
sbb
clc
xor
sub
and
xchg
jae
je
pop
cwtl
dec
into
xchg
jns
xchg
cmpsl
jp
add
fsub
jmp
jmp
xor
cmp
test
push
dec
sub
xor
pop
outsl
adc
call
add
out
shlb
fs
in
xchg
pop
insb
inc
roll
mov
xlat
loope
mov
inc
in
push
rolb
and
dec
mov
mov
lahf
loop
mov
mov
or
gs
xchg
lods
popa
aas
and
adc
push
sbb
push
fbstp
add
and
pcmpeqd
push
in
ljmp
sbb
out
add
inc
test
ds
sbb
fxch
add
fnstenv
push
test
sbb
popf
and
ds
and
jb
sbb
add
fstpl
push
movsb
sbb
inc
lds
mov
inc
cltd
cmp
movsb
ret
and
jle
imul
xlat
mov
sbb
or
daa
sub
adc
sbbl
dec
sub
sbb
or
push
pop
cmc
insb
cmp
fimuls
and
pop
sub
mov
push
jne
xor
or
pusha
cmp
jae
pop
mov
or
cwtl
inc
sbb
pusha
lahf
rorl
test
data16
xor
ss
sub
or
cs
rorb
and
jg
sub
add
xor
addb
cmp
out
imul
cmpsl
dec
push
push
es
outsl
inc
add
mov
enter
and
outsl
push
ja
inc
sub
jmp
je
test
push
sbb
cmpsb
mov
inc
jecxz
or
ja
mov
test
push
mov
xchg
ret
lahf
mov
jae
stc
jae
push
lods
sbb
stos
sub
std
pop
fsubr
rorl
gs
xor
xchg
fst
aad
test
fldenv
mov
loop
and
and
std
mov
out
push
test
xchg
sub
jns
dec
sbbl
fdivrl
shll
push
scas
enter
pop
lcall
ret
cltd
pusha
mov
into
in
aas
xor
push
stc
nop
sub
mov
mov
aam
push
push
inc
xor
pop
dec
ret
mov
call
jne
add
icebp
add
mov
ss
cld
inc
pop
add
lret
sub
movsb
dec
mull
loope
adc
movb
sbb
fbstp
aam
ljmp
xchg
ljmp
or
add
add
loop
shll
roll
gs
add
icebp
and
push
test
adc
arpl
fadds
icebp
or
lods
xchg
daa
test
int3
gs
xchg
pushf
add
stos
dec
lcall
rolb
rorl
inc
int3
lds
mov
pop
jo
mov
sarb
cmp
mov
sahf
and
dec
iret
lods
imul
mov
adc
xor
sub
bound
pop
mov
inc
dec
imul
ret
ret
push
xlat
add
shll
mov
add
test
lahf
cmp
or
out
and
inc
push
mov
pop
jmp
pushf
adc
pop
fiaddl
mov
shrb
movsb
xchg
jle
gs
insl
xchg
rcrb
sub
cmp
dec
sub
adc
cltd
adc
sub
jl
and
pop
push
and
mov
rorl
inc
outsl
mov
pop
and
cltd
mov
inc
mov
lods
xor
imul
dec
and
ror
out
stos
sarl
add
push
dec
int
add
repz
and
daa
icebp
xchg
jo
dec
or
lret
mov
nop
call
mov
lods
dec
push
pusha
lock
add
sub
push
cld
and
in
add
xor
inc
mov
add
push
and
in
mov
pusha
icebp
outsb
icebp
shrl
loopne
fcomip
sbb
add
cmpsl
js
sahf
and
out
icebp
loope
outsb
jno
and
movsl
popf
sub
lods
repz
mov
das
inc
movb
push
inc
or
shlb
xchg
sbb
orl
and
cmpsl
cmp
lret
push
movsl
dec
daa
es
sub
shrb
sbb
and
jne
add
jbe
jb
aaa
enter
adcb
xchg
pop
ja
sbb
jp
lods
aad
add
adc
add
fucomi
add
sbb
js
sbb
inc
mov
inc
sub
sbb
std
testb
jge
cmovae
jbe
or
add
jne
das
rorb
rorb
sub
and
dec
iret
add
and
flds
shr
pusha
push
and
jle
mov
push
js
andl
sbb
sbbl
jae
xchg
pop
xor
test
xor
lea
add
jno
enter
adc
jno
add
adc
add
inc
lods
push
pop
mov
cmp
push
sub
push
dec
shll
pop
mov
sbbl
lock
push
sub
push
cmpsl
and
mov
subb
arpl
mov
or
cld
push
inc
dec
hlt
sub
lcall
mov
jo
fsubrs
mov
jbe
mov
adc
xor
loopne
mov
das
fsts
lods
and
test
and
iret
mov
pop
stos
adc
or
out
adc
pop
dec
dec
pushf
pop
cmp
les
stos
sbb
or
adc
ds
push
arpl
add
jp
sbb
test
lcall
in
or
test
cmp
mov
sub
addr16
mov
mov
or
loopne
add
shlb
sub
loopne
xor
scas
xchg
mov
add
arpl
push
int3
mov
mov
inc
roll
in
inc
fdivl
cmp
push
xchg
in
aaa
jp
sbb
push
lahf
cltd
pushf
push
ret
lret
adc
scas
pusha
aam
cmp
push
add
arpl
fidivs
mov
push
andb
push
sub
out
push
fdivs
clc
push
in
jnp
btc
inc
or
pop
ds
sub
psubusw
lods
or
adc
sbb
jo
mov
test
leave
xlat
loopne
insb
jecxz
mov
fldenv
mov
in
lret
decb
adc
ds
sahf
add
inc
and
push
xor
cmpsb
aad
inc
vmread
ficoms
std
iret
cwtl
pop
sub
ret
stos
lods
sbb
outsl
inc
xchg
mov
xchg
cs
test
cmp
fldt
inc
inc
jle
das
mov
xchg
mov
movsl
scas
pop
pop
jmp
test
inc
dec
sbb
dec
popa
xchg
jno
test
imul
fsubl
test
dec
lahf
sbb
or
inc
mov
aad
iret
lret
pop
daa
mov
mov
fwait
test
movsl
lcall
orb
dec
daa
addl
mov
lcall
lcall
and
incl
push
mov
sarb
dec
ret
dec
outsb
xor
lods
fs
rcr
inc
pop
push
pusha
ljmp
pop
and
add
dec
les
pop
lea
mov
das
ret
movsl
push
ja
in
orl
cmpsb
push
lea
or
sahf
je
mov
xlat
pop
ss
jo
les
in
bound
sahf
xor
fcomps
into
test
cmpsb
or
xor
test
sbb
in
push
je
mov
in
hlt
pop
enter
sub
insb
xor
sub
pop
fs
pop
fisubrl
jl
lds
xchg
sub
shll
sbb
or
sub
jno
cmc
insl
jno
fildl
in
es
xchg
es
xchg
rol
call
sbb
adcb
es
loopne
or
mov
sbb
bound
jl
fmull
ret
push
js
jle
sahf
sub
testl
cmp
es
mov
cmp
sbb
sub
jo
cmp
cmc
adc
shlb
jo
fcomps
inc
daa
adc
or
fnstenv
mov
rolb
dec
loopne
or
xor
xchg
jnp
jbe
fstpl
xchg
sti
mov
adc
xlat
sub
lahf
fdivs
cwtl
push
cli
js
mov
out
sub
cmp
mov
mov
aas
iret
jge
jecxz
les
jg
sbb
push
add
push
and
lea
fs
jo
rolb
sbb
mov
inc
xchg
jg
test
cmp
aam
jg
and
pop
mov
ja
mov
push
jno
popa
mov
pop
js
es
xlat
shrb
loopne
ret
push
icebp
adc
sub
cmp
or
rorb
pusha
sahf
cmpsl
lock
dec
shll
adc
iret
shlb
repz
xchg
jno
sti
fiadds
cmp
sub
and
data16
mov
and
out
shr
mov
sub
inc
scas
and
clc
addl
stc
iret
out
add
mov
and
mov
int3
xchg
xor
shrb
add
out
pop
push
cmp
aas
add
add
jecxz
push
fbld
ja
lds
lea
inc
shlb
fldl
jle
bndstx
pop
aam
and
pop
int3
dec
fwait
or
xor
add
sub
mov
popa
xor
out
inc
xchg
push
ret
inc
shrb
sub
and
push
jmp
lock
adc
add
jle
scas
loop
or
inc
xor
in
insb
jl
imul
xchg
imul
ret
jns
das
sbb
add
add
or
pushf
hlt
jno
repnz
adc
mov
sbb
movsl
sub
sbb
sub
pop
pop
push
mov
clc
js
add
test
fs
pop
pop
pushf
and
push
mov
inc
gs
movsl
and
out
out
stos
clc
scas
add
pusha
mov
jmp
cmp
punpcklbw
xchg
scas
popa
adc
jecxz
sti
mov
sbb
mov
movsb
mov
lcall
mov
or
das
jmp
cltd
aaa
mov
adc
add
rclb
test
inc
cld
mov
sahf
or
add
loop
pop
popf
mov
aad
int3
ja
sti
aam
xor
addr16
outsb
and
fcompl
and
orb
and
frstor
or
sbb
fldl
push
xchg
mov
iret
test
jno
popf
add
shll
xorb
sysenter
adc
cmpsl
jo
outsl
negb
or
es
fcomps
fmuls
and
cmp
out
xor
inc
adc
pop
fidivl
jo
sub
movsb
xchg
shlb
sub
or
imul
mov
out
in
push
push
sub
xor
sub
ret
sub
dec
andb
out
iret
ljmp
sub
sub
sarb
movsb
aaa
imul
cmc
mov
push
jbe
ror
xor
aaa
dec
sub
scas
jg
mov
in
mov
cwtl
les
dec
adc
lods
xlat
jo
sub
lret
stos
and
rorl
cwtl
or
add
cmp
jmp
or
sbb
int3
xchg
punpcklbw
faddl
and
pop
cmp
cmp
mov
mov
push
subb
arpl
mov
imul
pop
ss
cmp
pop
enter
or
mov
cmp
pop
insl
pop
test
lds
subl
inc
test
lcall
xchg
adc
loopne
xchg
rcrl
cmp
pop
sbb
xor
cli
and
add
xor
adc
test
adc
cs
addr16
repz
jecxz
shrb
lret
pop
add
sbb
leave
iret
cmc
ret
jo
xlat
push
popa
or
loopne
xor
fadds
insb
mov
push
fs
xchg
fnsave
mov
mov
xor
rcl
and
push
aaa
mov
xor
loopne
and
or
cltd
adc
mov
aaa
test
scas
add
add
rolb
jp
sbb
cmpsb
xchg
stc
xchg
sbb
xchg
xchg
not
ss
xchg
cmp
jecxz
xor
jl
popf
adc
and
sbb
push
pop
test
mov
stos
fsubrl
jmp
jne
jle
pusha
mov
xchg
ja
loop
ret
jecxz
xor
mov
orb
les
sbb
mov
shlb
loopne
mov
pop
and
pop
sbb
andl
mov
xchg
shlb
pop
loope
movsb
fs
adc
enter
push
roll
arpl
cmp
jecxz
cmpsb
sub
pop
push
pop
sbb
sub
stos
das
inc
xchg
add
imul
movsb
inc
pop
xchg
adc
mov
add
out
xchg
jmp
aaa
repz
fld
jnp
sub
and
scas
ret
sbb
inc
jbe
mov
push
sub
xor
dec
cmc
ret
mov
cmp
pusha
mov
out
dec
je
sub
cmp
cli
sbb
xor
out
mov
push
fldenv
xchg
push
jmp
mov
push
shrl
push
leave
sub
sbb
ret
mov
add
push
popa
xor
cmp
xor
das
or
cwtl
xchg
sbb
inc
jg
add
popa
add
or
dec
sub
orl
es
lock
aam
test
ss
add
icebp
loope
icebp
inc
hlt
dec
pop
loop
adc
mov
inc
mov
stc
push
cld
push
or
mov
mov
aam
jle,pn
pop
mov
or
mov
mov
sub
inc
sbb
mov
int
daa
pop
xor
cmp
ret
cld
andl
mov
addb
ljmp
fidivs
mov
aad
popa
jmp
hlt
mov
mov
push
bound
mov
in
add
fwait
andl
push
push
sub
stos
lods
bound
lcall
test
push
jo
mov
sub
push
pop
push
out
mov
sub
repz
aaa
bound
out
add
and
xor
dec
std
adc
andl
xor
sarl
lea
dec
or
inc
shl
das
xchg
add
orb
xchg
adc
hlt
aad
adc
shll
popa
add
inc
fsubs
mulps
mov
fsubrs
fcmovne
dec
in
or
add
scas
addr16
in
fcomps
pop
jp
rcrl
dec
sbb
loope
adc
mov
mov
dec
jl
loopne
pop
jo
jle
inc
outsl
aas
mov
and
enter
jo
popa
mov
and
int
and
fsubp
and
pushf
rcrl
in
and
and
push
sbb
sahf
xor
lea
lret
lods
push
and
test
mov
rorb
add
rcll
jo
sbb
jns
js
or
movsb
shll
sub
mov
push
push
push
mov
jecxz
and
xchg
rorl
clc
popf
jno
xor
xor
shl
or
out
in
mov
push
push
jb
jbe
xor
pop
in
int3
xchg
pop
and
push
cmpsb
icebp
mov
cmp
fdivr
sbb
push
mov
jbe
xor
cmp
xor
push
fadds
imul
shll
mov
lahf
pop
add
cmp
mov
xchg
jnp
loope
and
incb
add
mov
ret
xor
shufps
aam
push
push
jp
fs
movsb
mov
push
loope
mov
jg
sbb
jb
xor
adc
lock
push
xor
aaa
pop
jl
aam
orl
mov
js
stos
push
dec
push
inc
inc
les
fs
add
loopne
repnz
add
pop
and
sbb
push
mov
cmp
jp
sbb
repnz
pushf
ljmp
add
mov
fcoms
fs
sbb
xchg
cmp
jg
mov
pop
sbb
push
mov
fincstp
add
loope
or
shlb
gs
test
mov
movsb
mov
cmp
scas
dec
and
and
push
dec
cld
movsb
cmp
add
sbb
ret
cltd
xchg
fsubl
adc
fcom
bswap
dec
jle
xchg
or
mov
mov
addb
jns
push
ret
loop
mov
jmp
or
jp
add
arpl
sbb
int
xchg
leave
in
jbe
rorb
stos
add
or
add
andl
pop
int
icebp
mov
test
fsubrs
add
movsl
andl
das
or
push
sub
jbe
and
ret
jecxz
je
loope
xor
mov
lret
mov
ret
gs
faddl
xor
dec
icebp
fwait
pusha
pop
xchg
jae
jns
jecxz
sbb
loop
lret
int
sbb
mov
fs
xchg
or
dec
jecxz
lcall
mov
cmp
inc
loopne
or
adc
sbb
push
push
dec
lods
sahf
js
in
dec
mov
pop
push
lods
out
iret
jo
scas
mov
push
pop
popf
sub
in
shlb
add
xor
add
mov
mov
ret
add
inc
mov
ss
mov
pop
shrl
mov
pop
lret
mov
cmp
push
test
daa
out
sub
dec
mov
fisubrs
dec
xchg
pop
mov
insl
push
or
push
sbb
sub
cmp
push
pop
lret
subl
outsb
xchg
and
push
popa
das
scas
insl
jne
cmp
mov
ret
cld
lret
pushf
jp
pop
je
adc
sbb
insl
cmp
shlb
sarl
push
xchg
push
mov
pop
sbb
jl
bound
adc
lods
inc
aas
je
mov
fstpt
pop
sub
lods
inc
lods
pop
pop
jmp
sbbl
das
jle
imul
and
rorl
push
dec
inc
xor
push
dec
pop
sub
imul
enter
loop
stos
test
add
loope
mov
ror
nop
sarl
aaa
cs
inc
fadds
pop
mov
mov
je
pop
movsl
pop
push
leave
inc
jmp
sbb
lea
ror
je
push
jg
pop
cmpxchg
aam
inc
and
pop
ljmp
sbbb
pop
pop
mov
xchg
cmp
cmp
test
add
push
xor
pushf
pop
xchg
mov
lret
mov
js
or
cmp
test
xor
inc
and
add
jge
pop
jo
add
cli
cltd
inc
ja
pop
repz
sarl
mov
int
mov
ret
inc
inc
loope
xchg
popa
cmc
push
das
sti
inc
or
ror
lods
add
xor
sbb
add
cmpsb
lock
pop
lea
bound
dec
jb
sub
or
pop
mov
mov
fstpl
leave
push
fwait
sbb
jge
pop
and
mov
dec
and
arpl
std
and
mov
dec
roll
push
jo
loopne
push
xor
and
imul
daa
and
mov
out
dec
movsb
popf
fs
out
push
cltd
iret
in
sub
add
sbb
repnz
xchg
sub
xchg
stos
rorl
xchg
mov
cltd
xchg
into
cltd
cs
lahf
adc
cmp
cmp
xchg
insb
xor
paddusb
cvtps2pi
mov
mov
xchg
shlb
jns
inc
pop
dec
fsts
ret
movsb
push
mov
sarl
or
cmp
push
fisubrs
mulb
cmp
in
xor
es
push
out
cmp
enter
push
sbb
xor
sbb
or
dec
paddsb
out
pop
add
pop
int3
mov
mov
scas
mov
pop
into
add
dec
xor
adc
lahf
and
pushf
jb
sub
aad
jbe
lret
test
stos
in
and
scas
cmp
or
into
lret
addr16
jno
add
jp
loope
dec
and
les
js
sbb
xor
jecxz
adc
cmpl
sbb
jmp
mov
roll
pop
rorl
push
pop
mov
pushf
sub
aaa
xor
xor
rorb
lods
sub
mov
and
and
fs
mov
xor
or
jp
jmp
insb
add
push
add
sub
popa
outsb
or
es
fmuls
out
xchg
cmp
and
xor
xchg
mov
lods
hlt
jnp
out
push
push
add
mov
popf
mov
into
pop
mov
adc
jne
frstor
jle
sbbl
add
jne
mov
pop
xor
xor
aam
jp
stc
xor
std
jae
js
push
xor
cmp
jmp
lods
jbe
pop
subb
add
add
fxch
jbe
mov
mov
fnstenv
pop
dec
mov
cs
scas
jb
xlat
jl
rclb
sub
fwait
insl
add
push
and
add
push
pop
cmp
in
xchg
sti
cmp
enter
loopne
fucomi
movsb
pop
outsl
leave
cmp
in
movsb
inc
outsl
fnsave
inc
and
or
aas
outsl
push
popa
data16
lods
movsb
fistpl
push
add
int3
stos
lea
rclb
pushf
ja
pop
cmp
xchg
popa
mov
jnp
ror
fstl
fsubr
into
push
sub
out
dec
xor
xor
imull
repnz
hlt
movsb
inc
push
movsb
mulb
dec
sbb
mov
mov
outsb
mov
loopne
push
sub
in
cmpsb
outsl
xor
and
rcl
mov
repz
mov
adc
mov
mov
sub
shr
fcomps
lods
push
add
cli
push
xchg
into
int3
sub
loopne
mov
mov
inc
pop
xchg
es
je
adcb
and
push
js
xor
out
inc
adc
in
push
push
loope
mov
sub
sbb
xor
repnz
icebp
addr16
add
xchg
xor
daa
push
pop
lcall
push
push
fcmovbe
push
or
cli
ret
xor
fnstsw
xchg
ret
xor
insb
push
ret
xchg
xchg
mov
or
xchg
lcall
sbb
lock
inc
pop
add
subl
fcmovnu
sbb
adc
add
js
or
addl
rcl
xor
mov
fs
hlt
inc
sub
loope
int
mov
cmp
push
and
cmp
adc
sbb
pop
adc
pushf
or
add
rorl
push
testb
xchg
inc
in
fisttpl
cmpsb
sub
inc
add
add
es
xchg
add
int3
cmp
js
add
sub
fnstsw
xor
test
xor
imul
xchg
add
das
dec
cmpb
xlat
in
fnstenv
or
sbb
fmull
fsub
movsb
out
fisubl
add
adc
cs
jb
into
xor
and
das
or
mov
add
or
add
pop
stc
fidivs
lods
test
fadd
jbe
add
jo
flds
shrb
sub
mov
jne
sbb
xor
subl
shrl
lock
add
arpl
addl
sub
cmp
aad
xchg
add
loopne
aad
fnstenv
sub
add
add
sbb
pop
loope
adc
add
pop
mov
aaa
rolb
out
fsubl
inc
jmp
push
cmp
loopne
and
mov
in
fldl
sbb
jmp
jnp
pop
push
sub
cmp
jmp
pusha
arpl
dec
push
negl
daa
outsb
repnz
pop
add
in
int
js
ds
lahf
jno
push
mov
stos
test
or
nop
and
fldcw
testb
xor
hlt
je
push
lods
and
push
add
inc
push
add
mov
lret
loopne
pop
test
fsubrl
push
push
push
or
or
xor
push
inc
jae
sbb
xor
movsl
mov
sbb
rcll
and
mov
xor
rclb
addl
push
or
mov
cmp
loopne
jo
or
sbb
scas
xchg
lock
call
arpl
les
fdivs
js
or
shlb
arpl
loope
stos
out
iret
xor
jo
std
mov
add
jo
ret
mov
push
adc
cmpsl
jl
aas
inc
in
xchg
jecxz
or
sub
aas
push
mov
inc
andb
xor
hlt
jo
jl
push
movsl
loopne
cmp
neg
mov
xor
push
jb
imulb
push
popl
adc
cmp
xor
stos
inc
scas
dec
rclb
cld
std
lcall
sub
imul
test
xchg
addl
xor
int3
cs
out
inc
or
or
sub
lret
add
add
movsl
jns
cmp
dec
adc
mov
mov
into
adc
cmp
mov
jl
loope
fadds
xor
or
push
test
mov
sar
mov
mov
shrb
pop
xchg
xchg
sbb
xor
dec
fnsave
xor
pop
jmp
mov
jmp
mov
dec
xchg
inc
fstps
or
mov
fisubrl
insb
mov
xchg
scas
push
iret
int3
andl
mov
sub
mov
shlb
pop
xchg
xchg
aas
jbe
xchg
clc
pusha
add
mov
adc
jb
stc
add
sub
mov
pop
add
jl
loopne
adc
cmpsl
mov
lds
sub
xor
aad
inc
adc
xor
addb
into
outsl
aas
push
inc
stos
add
int3
cmp
rcl
or
scas
mov
cmp
or
aaa
adc
aaa
push
inc
ja
arpl
push
mov
test
xchg
add
mov
dec
push
lods
push
cmpsl
sub
sarb
outsl
int
adc
add
add
dec
adc
adc
roll
add
dec
cmp
cwtl
int3
push
adc
push
loopne
jae
mov
les
adc
jle
fldenv
insb
sbb
out
or
pop
sbb
sarb
leave
clc
xlat
dec
imul
pop
mov
repnz
ds
or
fcmovbe
jecxz
and
bound
sub
sti
cmp
fldcw
pop
mov
add
fbstp
inc
mov
jl
shrb
sbb
iret
cmp
pusha
jo
push
sub
mov
or
jno
jo
pop
adc
out
pop
ljmp
jae
cmp
pop
scas
add
test
pop
sbb
mov
and
xor
test
sub
and
add
jp
add
popf
xchg
lods
lods
ret
scas
aaa
xor
adc
pusha
mov
xchg
push
xor
ret
push
sbb
mov
out
pop
adc
sarl
mov
rorb
faddl
mov
pop
shrb
das
rcrl
add
subb
xchg
mov
push
test
inc
xchg
dec
xor
push
repnz
lods
enter
mov
pop
xorb
stos
into
lret
jae
dec
push
push
into
fisubl
addr16
rcrl
sub
jne
arpl
and
jnp
cmp
popa
jb
lock
out
insl
in
cmp
mov
cmpsb
pop
sbb
inc
cmp
cltd
loopne
add
aad
sub
inc
aam
subl
cmpsb
sbb
xor
push
cmp
stos
add
lock
mov
jo
imul
adc
mov
pop
push
sub
add
add
cmp
les
loop
ljmp
sbb
aaa
push
cmp
out
je
cltd
adc
adc
cmp
adc
scas
fistpll
xlat
push
adc
push
loope
ret
stc
xchg
xor
pop
mov
mov
scas
repnz
adcb
or
loop
std
jl
dec
mov
xchg
mov
push
sbb
lods
fs
xchg
das
sbbb
hlt
sbb
in
push
push
mov
insl
pop
push
sub
pop
sbb
cmp
comiss
push
xlat
shr
movsl
sub
aad
sub
sarl
xor
add
ja
aaa
cwtl
inc
mov
cmp
jo
mov
sub
mov
int3
add
mov
or
or
and
in
inc
xchg
rclb
nop
sbb
jecxz
or
gs
push
pop
sub
sub
bound
loope
xor
xor
loope
int3
iret
lods
adcl
aam
dec
add
adc
sub
and
add
inc
es
cmc
imul
cli
into
add
gs
andl
push
pushf
aas
sub
iret
push
or
xor
gs
fisttps
lea
lret
mov
lods
pop
pop
js
mov
cwtl
jle
int3
rclb
cmpsl
xor
test
cmp
xlat
lods
jle
imul
push
mov
adc
repnz
and
sbb
inc
xor
out
test
ljmp
mov
pop
movsb
xor
int
shrl
out
shr
add
xorl
div
add
insb
insl
xor
es
push
adc
jo
mov
xchg
and
jle
mov
ds
filds
imul
pop
push
dec
gs
sub
xchg
fucom
cmpsl
mov
lods
push
pop
aas
cwtl
sahf
mov
popf
xchg
adc
jnp
jge
add
iret
or
sbb
pop
pushf
filds
inc
pop
lock
jl
scas
jle
push
rcrb
push
notb
loope
mov
iret
out
and
mov
les
enter
push
xor
pop
dec
and
clc
xchg
add
mov
int3
dec
mov
mov
rorl
jbe
pop
dec
sbb
push
cmp
mov
xchg
sub
push
adc
fdivr
cwtl
xchg
push
cmp
ja
xor
ror
jo
lahf
pusha
push
dec
jmp
dec
mull
sub
cmp
fwait
sbb
movsl
push
mov
ds
dec
dec
pop
and
rclb
rcll
movsb
fisubl
ja
iret
pusha
cli
jae
fists
aam
outsl
dec
push
xchg
jb
jns
stos
xchg
fs
cmp
xlat
push
xor
mov
aaa
adcb
mov
add
cltd
and
add
les
adc
push
aam
push
inc
push
rcl
add
fs
push
mov
and
push
xchg
or
daa
xlat
mulb
stos
lock
fdivr
sbb
int
pop
push
push
pop
or
loope
pop
shlb
addr16
lret
pop
out
mov
mov
xchg
push
sub
ja
sub
movsb
cs
insl
mov
and
sub
daa
nop
jne
jbe
out
and
mov
je
out
xor
in
decb
xor
inc
movsb
dec
jb
in
loopne
outsl
insl
mov
adc
jo
jle
push
int3
adc
pop
inc
fcoms
xor
mov
inc
pusha
mov
nop
outsb
pop
sub
loopne
rolb
add
inc
sub
pushf
cs
in
and
add
pop
gs
imul
xor
outsl
jo
dec
andb
pop
das
pop
dec
push
push
jle
and
outsb
iret
inc
out
push
out
sbb
push
leave
jns
jno
nop
push
je
pop
js
xchg
pop
cmp
cld
mov
in
push
push
and
cltd
addb
enter
jle
mov
pop
stos
jecxz
mov
popa
data16
or
jl
or
stos
fs
or
sub
jl
mov
js
cmp
popl
inc
jae
xchg
int
ret
sahf
inc
mov
and
mov
inc
lock
pop
jp
inc
ja
sar
lcall
add
cmp
jecxz
xchg
or
adc
mov
mov
lret
mov
lods
add
cmp
jne
add
cmpsl
sub
test
jbe
sti
ret
cmp
xor
out
pop
pop
pusha
mov
inc
clc
and
cmp
inc
dec
lods
add
cmp
int
test
aad
ficoms
mov
test
cmp
pop
ret
jecxz
mov
mov
add
or
call
inc
or
and
jle
add
mov
aaa
js
sbb
int3
cmp
mov
pop
sahf
sub
mov
pop
clc
unpckhps
sub
and
and
mov
es
aaa
lods
stos
sbb
push
xor
push
imul
sub
lcall
subb
pop
out
and
sub
addb
sub
int3
xchg
xor
fisttps
dec
sub
jo
int3
mov
cwtl
push
dec
and
pop
add
es
cmp
sbb
inc
add
inc
das
xchg
lcall
sbb
andb
adcb
cmp
sti
fistpll
lret
aam
inc
mov
lret
loopne
jne
push
aaa
add
or
rolb
dec
fcompl
int3
aad
and
shlb
inc
scas
inc
jne
jle
ss
inc
sbb
mov
in
sub
push
xor
or
jg
rolb
jge
iret
xchg
rcr
insb
sbb
movsl
pop
add
add
lock
cmp
test
pop
adc
lods
mov
xchg
mov
loopne
sbbb
sbb
add
orb
testl
and
push
inc
mov
ds
push
sub
sbb
pop
inc
add
adc
jp
dec
cmp
jo
fidivs
or
lret
loop
js
pusha
mov
sub
inc
sub
loopne
adc
push
lret
dec
lahf
or
ret
mov
das
add
fiadds
inc
fdivs
add
ds
push
cmp
jo
sbb
and
cmpsl
js
cmc
ret
in
std
lahf
inc
clc
ja
icebp
xor
lea
sti
das
add
adc
sub
jge
pop
add
cmc
aam
icebp
push
adc
or
add
sbb
pop
aaa
dec
xor
pop
dec
popa
and
push
insl
stos
je
dec
xchg
push
mov
gs
and
dec
push
xchg
inc
into
int3
mov
sbb
add
jo
aaa
mov
push
movsl
mov
mov
push
sub
push
ljmp
add
jle
push
or
or
inc
out
sarb
dec
loope
cmp
push
sub
test
pusha
ret
fldcw
pop
pop
inc
cmp
inc
movsb
pop
mov
es
inc
hlt
or
xor
mov
pop
gs
adc
dec
bound
cmp
jne
iret
out
es
xchg
clc
adc
sub
mov
xchg
jecxz
flds
push
test
mov
sbb
xor
popa
mov
aam
xchg
sbbl
push
lods
les
sahf
and
push
mov
int3
sub
stos
or
inc
fcom
dec
jecxz
jo
mov
sbb
sbb
add
ret
jmp
and
jge
lahf
rorb
movsl
outsl
call
inc
or
mov
sbb
pop
add
jns
sbb
adc
and
push
mov
in
repz
imul
cmp
jecxz
xor
neg
test
and
pop
xchg
xor
lahf
icebp
mov
enter
aaa
jl
test
jo
dec
ret
in
sub
fs
inc
sbb
push
push
cmp
loopne
aaa
cltd
dec
fcompl
std
lret
faddl
push
out
test
add
sub
push
ret
out
mov
pop
and
mov
pop
mov
stos
dec
icebp
in
mov
insb
ret
push
sub
inc
xor
xorb
lret
mov
push
or
adc
jmp
dec
or
test
mov
wrmsr
cmpsl
mov
mov
shll
xor
sub
jecxz
cmpsb
cwtl
pop
inc
fstps
push
push
leave
inc
cmpb
push
push
inc
mov
test
pop
or
mov
ljmp
push
loopne
scas
inc
pushf
add
push
dec
stos
or
jb
mov
lods
dec
stos
rol
pop
mov
pop
jle
dec
or
nop
aad
xchg
lea
sbb
je
pop
test
ret
adc
inc
outsb
jns
hlt
add
cmp
aam
and
jmp
push
imul
sub
xor
gs
mov
adc
and
cmp
pop
push
or
mov
shlb
jo
sbb
stos
or
aaa
int
jns
dec
mov
mov
and
es
and
bsf
fs
sub
scas
adc
pop
cltd
mov
cmp
loope
push
dec
movsb
scas
mov
lret
dec
push
mov
js
je
sub
pushl
xchg
es
sub
sub
sub
or
popf
xor
inc
mov
xor
add
or
mov
enter
pop
pop
call
push
popa
lea
or
pop
test
ret
andb
mov
inc
xchg
scas
mov
adc
les
pop
xchg
ret
dec
dec
mov
adc
icebp
xchg
add
inc
or
test
sub
dec
out
sbb
mov
je
repnz
lods
pop
imull
sbb
jnp
mov
stc
xorb
xchg
nop
dec
call
xchg
cltd
add
lret
adc
pop
push
stos
hlt
inc
adc
popa
push
jl
int3
and
iret
mov
outsb
lret
test
dec
jbe
xchg
scas
cmpsl
mov
xor
fsub
or
jmp
jmp
stos
loop
insb
inc
arpl
mov
and
insl
call
push
push
xchg
sti
jb
adc
test
popf
jnp
lret
shll
int3
aad
pop
and
push
add
add
data16
call
ss
inc
inc
adc
cmpsb
sbb
push
xchg
xchg
lock
pop
test
test
test
xor
lods
and
fdivrs
xchg
push
dec
push
sti
jecxz
cmp
lea
dec
jg
dec
in
and
mov
xchg
imul
xor
adc
call
cli
xchg
movsl
fcomps
jecxz
push
cwtl
mov
sub
lret
addr16
loopne
scas
sub
mov
loopne
add
aaa
pop
clc
mov
sbb
pop
and
or
inc
cmp
xor
mov
or
push
dec
add
imul
or
pushf
pop
pop
cmp
pusha
repnz
jecxz
fcmovbe
lcall
push
clc
cwtl
add
fdivp
push
jmp
push
push
pop
cmp
pop
out
lods
loope
push
fiadds
arpl
pop
or
lret
lods
mov
ret
clc
scas
xor
popf
ret
test
outsl
sbb
mov
scas
push
psllq
adc
add
iret
jecxz,pn
or
bound
cmp
or
pop
repz
call
xchg
push
xor
pop
lret
mov
lods
test
add
and
xchg
inc
das
movb
or
push
inc
call
das
js
push
jne
dec
inc
push
sub
out
add
sbb
dec
cwtl
cmpsl
adc
roll
ret
pop
lods
sub
adc
or
bound
out
cld
fwait
daa
sbb
inc
mov
fnstcw
xor
popf
sub
lods
adc
pusha
fwait
ret
add
cwtl
icebp
or
es
mov
sub
je
xor
ror
call
xor
mov
divl
adcl
jne
lds
push
pop
sub
or
pop
or
clc
xchg
jmp
insl
loopne
sub
dec
xchg
mov
iret
sub
pop
cld
sub
mov
imul
sbb
rorb
jp
mov
xchg
add
cmp
adc
and
or
jg
outsb
rolb
flds
cmpb
jp
sub
setp
or
mov
jl
sub
js
fidivrl
cwtl
aam
ljmp
loope
sbb
or
fimull
mov
cmpsl
and
add
sahf
jp
cmp
incl
pop
iret
and
push
andl
sarl
aam
push
out
pop
push
mov
mov
cmp
ret
inc
out
and
xor
and
lock
xorb
aaa
and
imul
popf
shl
cmp
xor
or
add
scas
aas
sub
mov
add
movsb
and
dec
fs
add
jns
std
cltd
loopne
sbb
xlat
dec
into
mov
xor
xchg
scas
sbb
xor
push
and
xchg
adc
filds
inc
into
popl
add
and
inc
jmp
jne
das
std
dec
xchg
arpl
addl
hlt
ja
dec
xchg
jno
cltd
jns
mov
rcl
lret
ja
mov
adc
mov
leave
sbb
shll
push
jp
cmp
mov
mov
adc
rol
lds
sub
cmc
xchg
lea
mov
test
pop
adc
sbb
push
jg
stos
jb
cmp
fs
in
lret
inc
sub
cs
cmpsb
inc
sub
test
in
arpl
bound
add
sub
out
subb
adc
and
jae
je
test
adc
mov
iret
jbe
xor
test
hlt
cmc
jb
loopne
xor
or
out
xchg
lret
mov
test
mov
sub
das
cmp
ret
mov
sub
lahf
push
mov
stos
push
fcmovu
mov
and
fs
punpcklwd
xor
icebp
subl
mov
jo
rolb
test
stos
sub
insb
ljmp
in
xlat
dec
cmp
push
scas
scas
pop
cld
or
mov
inc
das
cmc
cmp
sub
sbb
adc
push
jp
clc
xor
cwtl
and
mov
mov
lods
outsb
xchg
hlt
mov
pop
dec
loop
jg
jge
cwtl
mov
repz
push
xorl
fmuls
test
and
xchg
dec
sub
test
movsb
into
loopne
in
out
add
cwtl
test
vpaddsw
mov
mov
mov
jecxz
add
sbb
inc
aas
add
loop
jno
pop
lock
sbb
cmp
sbb
cmp
push
sub
and
dec
test
fisttpl
movsl
movsl
movsl
add
dec
xchg
loope
push
test
pushf
mov
adcl
movsl
inc
sbb
daa
cmpsl
sbb
and
pop
pop
divb
test
fwait
xor
in
push
adc
cs
enter
fisttpl
fdivs
orps
movsb
jns
sub
cmp
jne
add
arpl
sbb
adc
test
es
sub
add
les
orb
jae
pop
or
out
mov
test
fdivrl
movsb
sbb
or
mov
loop
pop
adc
adc
ret
jo
pop
addr16
rorl
xor
inc
shlb
and
inc
mov
in
inc
and
icebp
dec
or
arpl
push
mov
addr16
push
xchg
and
dec
jl
mov
add
dec
sub
push
and
jns
clc
imul
xor
shlb
add
mov
ds
and
ds
and
pop
iret
and
and
adc
mov
or
add
fcompl
adc
mov
mov
cmpsl
int3
aam
pusha
xor
or
jo
adc
add
test
add
lock
push
inc
fnstenv
test
ret
mov
in
fwait
rcr
flds
out
hlt
aam
sub
je
mov
add
lods
dec
xor
sub
sbb
mov
lret
inc
incl
movsb
push
dec
or
sub
test
lods
dec
push
and
mov
in
xchg
lods
and
call
sbb
push
xor
rcrb
push
sarl
mov
ret
cmpsl
jp
and
push
xor
outsb
lea
push
sub
push
aaa
mov
mov
ret
outsb
pop
int3
repnz
lods
add
push
lock
mov
fninit
add
out
popa
add
cmpb
pop
sahf
fucomp
or
movsb
out
movsb
and
rcll
jo
jle
add
call
es
test
loope
dec
lods
pextrw
add
js
gs
das
fisttpll
js
fdivrs
insb
and
fistl
stos
pop
dec
ss
lret
mov
and
and
ret
pop
xchg
xchg
jle
mov
adc
shll
or
cmp
jo
cltd
mov
clc
mov
or
into
movsb
in
pusha
and
inc
pop
nop
inc
push
jno
orl
xchg
out
mov
pop
out
mov
or
sub
arpl
xchg
fsubrl
push
sbb
and
xor
pusha
imul
pop
out
adcb
es
mov
mov
inc
xchg
push
bound
and
mov
jmp
js
daa
fs
inc
cmp
fadd
shl
add
mov
mov
add
faddp
pop
push
in
push
das
ret
imul
iret
fistl
loop
int
cltd
sbbb
and
leave
push
loopne
push
sub
ss
imull
dec
mov
mov
add
insb
das
dec
push
adc
sub
jo
xchg
pop
pop
dec
xor
sbb
shrb
stos
outsl
cli
sub
sub
das
sub
cwtl
leave
xorl
mov
or
and
mov
jmp
movsl
mov
sarl
or
sub
dec
mov
mov
push
bound
ret
and
push
das
mov
out
nop
loopne
mov
repnz
push
pop
or
and
and
cmp
dec
sbb
fsubs
mov
test
aad
cmpsb
cmp
insb
outsb
aaa
dec
repz
dec
mov
test
loopne
sub
adc
mov
mov
mov
jl
dec
dec
xchg
inc
clc
lret
decb
jl
stos
lods
cmpsl
jne
sbb
push
lcall
dec
pop
testb
das
adc
nop
and
rorl
pop
or
jl
push
pop
pop
in
add
mov
lahf
sahf
sahf
and
jle
aad
mov
or
push
adc
xchg
ja
pop
and
jno
push
xchg
adcb
enter
jl
or
sbb
adc
mov
xchg
mov
dec
xchg
xor
jb
clc
dec
mov
adc
rcll
sahf
and
mov
mov
clc
dec
sub
xchg
jo
pushf
sub
mov
push
ret
inc
push
add
in
jmp
stos
shll
imul
jb
gs
jnp
mov
rorb
pop
inc
dec
ret
js
mov
sahf
das
lods
out
add
mov
scas
push
loopne
mov
cld
adc
or
sbb
addr16
xor
jbe
pop
xchg
dec
jle
lahf
inc
sub
das
inc
stos
lods
jmp
and
icebp
jmp
sbb
mov
sub
or
rorb
xor
push
popf
fcomps
imul
sub
loop
daa
mov
jnp
and
adc
dec
popf
ret
add
inc
test
mov
cmp
out
mov
sbb
sahf
es
inc
bound
xor
push
cmpsl
inc
bound
subl
icebp
push
xchg
mov
into
pop
push
pushf
orl
push
bound
cmc
test
aam
aas
sbb
push
test
or
dec
je
xor
lret
arpl
pop
movnti
repz
ret
push
pop
pop
not
cltd
pop
sbb
adc
xor
mov
arpl
xchg
fldl
imul
loope
jmp
dec
loop
repnz
imul
mov
jl
pushf
loopne
imul
shlb
push
idivl
adcl
test
das
jo
dec
dec
push
das
fimull
iret
push
jbe
andb
jae
push
adc
pop
cmp
dec
gs
test
orl
jmp
fldl
inc
xchg
nop
fisubs
loope
imul
push
xchg
mov
pop
xchg
mov
adcl
sub
sarl
dec
aas
in
les
popa
je
jecxz
je
fisttpl
dec
jg
push
pop
add
inc
xchg
das
cs
or
mov
and
sbb
stc
fbld
inc
popa
aas
mov
xor
dec
jg
rorb
pop
lods
fs
jecxz
dec
pop
stos
push
push
jb
mov
test
lea
dec
mov
or
and
add
add
dec
in
test
cmp
xchg
dec
jle
push
dec
jmp
loopne
es
xor
sbb
test
jo
inc
xlat
ja
jmp
add
pop
lods
pop
shlb
test
iret
movsl
push
xor
lods
fstp
sub
jb
lock
js
jae
cld
dec
cmovge
adc
es
out
int3
loope
and
cmp
es
jge
jne
js
iret
data16
xor
or
jp
and
pop
clc
jae
js
pop
cmc
fsubrl
std
mov
cmp
fwait
adc
mov
adc
ja
or
xor
push
pop
popf
push
sub
mov
je
sbb
inc
loopne
cwtl
enter
pop
sbb
fmuls
fidivrl
sbb
add
pop
xchg
loope
dec
pop
adc
add
and
rcl
lock
ror
dec
push
sbb
cwtl
jl
pop
add
lods
xlat
xchg
inc
jo
fdiv
mov
outsl
lods
call
xchg
pop
out
mov
xchg
cs
outsl
pop
or
xchg
arpl
aam
subl
je
push
and
ja
pop
and
fst
mov
lcall
rolb
scas
sub
jne
or
push
jo
test
mov
shlb
inc
and
lret
ret
lock
xor
xor
cmp
aaa
and
jb
push
shll
mov
mov
subb
daa
test
and
inc
les
xchg
mov
mov
and
mov
cmp
lret
mov
scas
inc
sub
jle
dec
pusha
pop
mov
dec
add
jo
jne
fcoml
cmp
or
cmp
scas
add
mov
in
dec
cmp
mov
movsb
hlt
inc
repz
push
sbb
addb
mov
xchg
and
addl
pop
xor
mov
inc
cmc
adc
rcrl
jne
scas
jmp
ss
jmp
sbb
jne
mov
lcall
adc
insb
int
idivl
adc
dec
fdivs
sbb
add
in
pop
jge
test
insl
ret
call
xchg
mov
out
imul
loop
adc
std
xorb
out
sbb
and
cmpsb
cwtl
js
loopne
jne
aad
shrd
popf
iret
jge
je
cmp
fwait
xchg
inc
adc
rclb
cmp
xchg
dec
add
loopne
popf
outsl
les
sbb
inc
repnz
hlt
and
jle
pop
sub
jns
fs
push
xchg
push
xor
fnstsw
mov
push
cs
fsubs
add
sub
js
xor
lret
xchg
lock
jp
aas
jle
mov
xchg
sub
mov
lock
mov
mov
movsl
sub
and
outsb
ret
insb
mov
andl
sbb
fmull
xchg
adc
es
pop
out
arpl
addl
sbb
loope
fcoms
mov
jecxz
mov
test
push
movsb
push
dec
das
mov
mov
out
mov
inc
pop
out
lcall
inc
and
pop
dec
mov
ret
dec
xorb
jl
and
popf
push
lcall
dec
cmp
aas
adc
jae
add
sbb
sub
or
lock
mov
push
push
or
adc
mov
rorb
lods
mov
fiaddl
das
add
lret
arpl
fistpll
daa
or
mov
icebp
data16
loopne
in
test
mov
dec
or
outsb
push
mov
repnz
or
in
frstor
sub
push
mov
dec
push
pop
mov
mov
mov
loop
mov
dec
cmp
sbb
xor
sub
notb
xchg
jo
or
jge
arpl
cmc
mov
pop
cld
push
and
nop
incb
push
js
and
sbb
dec
sub
push
xor
cmpsl
and
adc
cmc
test
add
jge
sbbl
outsb
mov
inc
lds
das
inc
inc
cmp
adc
add
test
popa
insl
popa
xchg
loopne
jmp
je
or
cmp
jle
lods
add
push
clc
lea
pop
sarb
pop
xor
int
xchg
add
mov
ja
dec
out
dec
out
or
inc
push
mov
mov
pop
push
or
dec
or
icebp
insb
inc
xor
stos
jmp
shlb
inc
xor
sbb
repnz
push
popa
mov
shlb
adc
mov
in
adc
push
add
dec
outsl
mov
out
push
mov
jg
aaa
mov
cmp
aad
rcrb
in
shlb
pop
cmp
cmpsl
pushf
ficoms
not
daa
add
add
shll
shlb
or
aam
sub
subl
test
xchg
sbb
push
push
lahf
jo
test
pop
stos
xor
xor
iret
mov
test
pop
repnz
adc
insb
aam
fistl
inc
and
push
loope
cwtl
ret
xor
decl
insl
jb
stos
pushf
js
subl
xlat
pop
aam
sbb
aad
and
push
mov
sbb
cwtl
push
out
cmc
cmc
and
inc
enter
sbb
in
mov
daa
add
sbb
and
or
cs
mov
cmpsl
mov
stos
pop
or
sti
scas
int
mov
push
xchg
jmp
mov
sti
pop
add
mov
fcomps
or
adc
cmp
test
or
js
sbb
sbb
xor
loopne
sub
je
dec
add
sub
or
fldt
xor
dec
cmp
ja
inc
xchg
push
jl
das
push
or
aam
shlb
jmp
add
stos
mov
sarb
add
dec
movsb
xchg
xlat
daa
mov
inc
sbb
cmp
shr
movsl
inc
mov
lcall
or
xor
pop
sub
arpl
dec
adc
jge
rolw
mov
dec
lods
rcl
push
dec
xlat
push
sahf
or
xor
scas
add
adc
in
cltd
jo
test
dec
sub
cld
test
mov
sub
adc
enter
or
add
xchg
push
ja
jns
lcall
loope
aad
push
push
add
mov
cwtl
push
push
cmp
lret
int3
in
mov
inc
call
inc
xor
test
popf
cmp
lahf
mov
insb
cmc
sbb
test
pop
dec
pop
es
sbb
cmp
rcrb
adc
cmpsl
mov
leave
mov
dec
sbb
cltd
test
lahf
mov
jg
sbb
sahf
add
xchg
jo
add
rorb
sub
sbb
dec
sub
add
mov
pop
iret
les
add
in
and
xchg
loop
xchg
mov
push
outsl
mov
sbb
loop
sub
mov
mov
fucomp
or
pop
xor
mov
xor
adc
and
rcrb
jecxz
jecxz
mov
pop
or
mov
iret
addr16
adc
pop
or
mov
cmp
push
pop
inc
ljmp
sar
dec
or
sbb
xlat
push
cmp
cmp
xchg
sti
test
test
fcomps
adc
cmp
jae
push
icebp
dec
loop
push
push
adc
cs
out
movsb
adc
outsl
mov
xchg
lret
jg
lock
and
xor
sbb
push
or
dec
mov
dec
jae
repz
xor
xchg
test
xor
das
jge
sarl
repz
cmpsb
fdivrp
jge
or
das
mov
xor
add
sub
jno
adc
sbb
inc
stos
sbb
or
fldl
add
das
popa
subl
jg
stos
push
ss
mov
xor
mov
mov
mov
les
into
lea
fsubp
adc
lock
add
out
outsl
daa
clc
or
jno
dec
pop
mov
push
inc
lds
addl
dec
jnp
or
jmp
out
ja
push
dec
fsubrl
test
jge
add
add
loopne
bound
mov
mov
out
add
xor
mov
insl
ret
jmp
dec
mov
pop
push
mov
iret
xchg
and
cmpsb
shl
ss
lea
lods
adc
sub
fists
cmp
popa
push
popf
lahf
inc
cmp
push
jno
repnz
push
mov
or
mov
daa
jmp
call
xchg
jecxz
notl
add
mov
mov
mov
or
dec
sub
jb
fdivr
sbb
sbb
xchg
cmpsb
add
mov
mov
xor
pop
daa
repz
outsb
sbb
pop
mov
ret
or
jo
dec
popf
sbb
sub
mov
push
cmpl
mov
dec
es
adc
dec
jns
cmc
stos
and
cmp
imul
insb
call
movsbl
or
jns
repnz
rorb
xor
repnz
pop
push
cmpsl
lcall
mov
add
fidivl
jl
rolb
cltd
sbb
dec
mov
pop
sub
and
icebp
or
bound
loop
int
aaa
dec
lods
cmp
stos
popa
outsb
inc
jae
pusha
pmulhuw
lea
pop
or
int3
cmp
and
mov
flds
fildl
pop
ss
cmpsl
leave
rolb
xor
inc
sbb
sbb
inc
adc
add
aas
or
dec
dec
mov
or
bound
inc
mov
adc
les
shl
pushf
jnp
dec
out
mov
pusha
or
dec
aad
lods
psrld
clc
inc
psubsw
xchg
pop
add
mov
mov
xchg
fldt
jle
das
test
cli
scas
movsb
mov
sbb
jb
adc
pop
loopne
outsl
test
xchg
adc
xor
inc
add
lock
sbb
add
jp
and
inc
pop
add
cmpsl
sub
add
test
and
or
ljmp
in
rclb
push
les
mov
lock
push
jo
fisubs
cmpsl
int3
adc
add
je
adc
mov
stc
and
fsts
xchg
xor
or
cmc
incb
mov
sbb
insl
mov
adc
rol
lods
xchg
in
jp
lods
mov
push
dec
lds
pop
push
cmpps
fcomps
sbb
enter
sarl
int
bound
sub
adc
mov
dec
push
add
das
mov
pop
dec
mov
lds
sarb
inc
je
cld
cs
xchg
and
push
je
fdivrl
jl
aad
shrb
and
loope
jae
dec
cmp
xor
and
push
call
es
bound
jp
sub
add
sub
mov
rcll
in
repz
mov
stos
adc
addr16
xchg
inc
sub
out
push
inc
popa
mov
fcoms
fbld
inc
stc
hlt
mov
cmp
fidivrs
mov
test
sarb
pop
dec
adc
std
mov
pop
addr16
pop
pop
mov
scas
adc
cmpsb
add
mov
add
sub
stos
gs
gs
and
jmp
pop
mov
sahf
sub
ret
fidivl
movsb
pusha
mov
dec
shl
es
or
sub
pop
xchg
cwtl
shlb
and
popf
add
dec
adc
xor
xchg
shll
add
dec
xor
inc
ret
xchg
push
scas
cmp
iret
ss
scas
popa
and
adc
inc
sbb
dec
jp
pop
loope
popa
sbb
dec
rolb
ja
pop
rcrb
pop
sahf
cmp
icebp
xchg
lods
int3
pop
mov
mov
loope
les
jno
ss
cmp
mov
lea
pminsw
mov
test
gs
into
jmp
pusha
addl
stos
mov
mov
lret
sub
nop
sbb
dec
mov
pusha
dec
push
push
outsb
xchg
xchg
sub
adc
push
nop
mov
jb
xor
jg
loopne
lods
cld
dec
cli
xchg
dec
stc
test
inc
scas
xorl
imul
ficoml
jg
add
loop
xchg
aam
ljmp
push
imul
sbb
pop
xchg
icebp
pop
push
test
cmc
mov
popf
stos
jp
mov
dec
or
push
js
pop
incl
add
es
dec
mov
add
sbbb
xchg
push
xor
fstps
mov
mov
js
cmp
testl
stc
pop
xchg
xchg
ja
and
inc
add
pop
psadbw
push
xchg
push
push
mov
mov
cmp
push
fistps
in
cwtl
cmp
dec
loopne
jmp
lahf
push
jae
xchg
cs
pop
add
dec
popa
xchg
adc
movsb
add
je
fldl2t
out
jecxz
mov
sub
xorl
or
push
dec
push
fistpl
xor
inc
lods
push
idivb
push
mov
enter
add
iret
stos
scas
dec
mov
add
arpl
adc
and
jne
fdivr
sbb
add
cmp
xor
mov
add
gs
inc
roll
pop
adc
mov
scas
xchg
push
stos
std
mov
push
push
or
jg
lock
cmp
repz
xor
fidivl
loope
adc
or
xchg
jbe
sbbl
add
mov
and
mov
sbb
adc
scas
mov
xchg
shll
cmp
or
enter
call
and
js
jnp
add
test
pop
push
sbb
xorl
jb
inc
or
or
cmp
xchg
xor
jo
inc
arpl
out
dec
adc
dec
repz
pop
sbbl
jmp
dec
clc
pop
cmp
call
xor
daa
dec
ret
iret
popl
pop
les
js
push
sub
cmp
ret
and
xor
cmp
sbb
mov
mov
jge
int3
imul
clc
imul
out
in
lfs
sbb
subb
add
pop
mov
push
daa
push
fst
addb
aas
lea
add
inc
shl
jmp
xchg
mov
je
roll
mov
cmp
jbe
pop
fisttpll
divb
movsb
loope
add
jae
jge
sbb
cmpsb
out
adc
testl
xor
mov
jo
xchg
mov
xor
xchg
sarb
data16
gs
aam
pop
mov
mov
jb
xchg
icebp
movsb
push
das
push
in
call
add
xchg
dec
and
cmp
andl
or
mov
cmp
add
rcrl
xor
jle
fnstcw
mov
add
add
in
fcomi
adc
sahf
sub
xchg
mov
and
push
and
adc
mov
or
loope
shlb
sbb
daa
fisubrl
jnp
mov
iret
mov
outsl
mov
adc
cmp
xchg
aam
push
xchg
pop
pusha
sti
mov
jne
jno
cwtl
pop
jge
xchg
mov
jne
movsl
lret
les
jnp
mov
in
xchg
outsb
loope
lods
inc
daa
mov
mov
aaa
fists
daa
je
dec
sbb
sti
fisubs
stc
pop
mov
jnp
movsb
shrb
cwtl
mov
stos
add
adcl
es
test
inc
aad
sub
xchg
jmp
leave
sarb
jle
imul
loope
bound
xchg
mov
insl
jl
hlt
inc
or
and
xchg
imul
and
in
push
xchg
test
inc
test
orl
in
pop
nop
cmp
icebp
push
mov
pop
inc
xor
pushf
mov
and
adcb
add
outsb
pusha
jecxz
pop
xchg
push
mov
inc
fsubr
je
sti
pop
cmpsl
mov
jp
xchg
aaa
daa
sbb
pop
cwtl
frstor
cmp
pop
xchg
add
push
cmp
push
cs
mov
jae
testb
test
insb
mov
fistpl
push
fdivr
sbb
mov
cmp
nop
jae
xchg
in
jo
lods
dec
ja
xchg
cld
xchg
mov
pushl
sub
popa
pushf
daa
push
mov
sbb
mov
xchg
movsl
push
cmpsb
fcoms
push
sbb
and
jmp
popa
mov
lea
mov
inc
cmp
loopne
xchg
mov
scas
mov
into
mov
cmp
or
shrl
insl
push
dec
or
mov
cli
mov
push
sub
cmp
lods
adc
fdivrs
sub
sbb
es
xor
lock
xor
jo
fistpll
or
enter
or
fninit
mov
movsb
sahf
push
sub
mov
rol
mov
mov
rcll
xor
imul
or
and
orb
dec
cmp
jle
psrlw
test
push
outsb
push
pop
pop
addr16
add
shrl
nop
lock
lods
xchg
sbb
mov
sahf
lock
rcrb
aaa
clc
stos
push
mov
push
out
fs
aad
xor
push
pop
and
inc
js
imul
iret
inc
aam
int3
cmp
pusha
imul
cs
push
cltd
push
mov
aaa
push
outsb
and
jmp
dec
xchg
es
call
mov
fwait
xor
jno
in
adc
mov
aad
dec
mov
xor
adc
xor
enter
push
pop
add
and
and
sub
test
add
and
or
aaa
mov
aam
xor
xchg
push
andb
lahf
scas
cltd
icebp
dec
push
lret
cltd
mov
sbb
das
and
arpl
and
mov
push
aam
sti
cmp
int
outsb
nop
loop
push
mov
pop
dec
push
shlb
iret
test
js
test
or
addb
lret
sahf
inc
xchg
push
push
lock
inc
or
pop
icebp
pop
out
mov
mov
xor
mov
loopne
pop
xor
jle
and
adc
jmp
cmp
mov
jns
lret
dec
inc
sub
les
and
pusha
xor
mov
loopne
mov
mov
adc
orl
fwait
cs
and
sysexit
shll
inc
cs
xchg
daa
sbb
lahf
sbb
cmpl
sub
loopne
pop
ja
push
inc
outsl
jmp
mov
inc
push
cmp
add
sbb
enter
xor
pop
push
stos
sbb
mov
imul
outsl
pushf
ss
std
cmpsb
les
sahf
in
sub
les
dec
pop
adc
xor
test
cmp
xor
jecxz
dec
cmp
jns
lods
mov
push
scas
pop
stos
jo
add
sub
jo
mov
nop
out
and
shl
stc
dec
and
mov
sar
sbb
dec
fcmovb
mov
xchg
mov
and
addr16
xchg
xchg
mov
outsl
popf
mov
outsl
sub
mov
in
scas
xchg
pop
das
leave
xchg
popf
ret
insl
mov
add
test
testb
pusha
xchg
test
and
daa
xchg
sub
loope
cmpsl
or
xchg
pop
nop
shll
sbb
add
jns
pop
daa
cmp
jb
int3
dec
aas
scas
icebp
fwait
gs
jbe
and
pop
push
xor
hlt
andb
push
ljmp
test
mov
inc
filds
sti
xchg
push
pop
movsl
aas
jecxz
jge
inc
mov
adc
sub
push
jmp
xor
out
adcl
pushf
loop
std
jmp
mov
movb
cmpsl
lahf
mov
sbb
lret
push
add
cmc
daa
aam
lcall
repnz
inc
lock
iret
das
push
nop
ss
sbb
jo
push
int3
pop
xor
mov
inc
lcall
sub
jmp
aas
mov
dec
jl
sub
dec
mov
ds
sbb
mov
aam
aad
add
xchg
sub
and
mov
adc
imul
imul
lret
and
adc
and
xor
fiaddl
mov
clc
mov
lods
dec
roll
scas
and
or
cwtl
or
shrb
movsl
push
xchg
imul
sbb
push
dec
and
push
inc
fcmovne
out
test
inc
push
mov
and
sbb
hlt
ja
lcall
sbb
shl
mov
add
and
orb
lods
subb
cmp
lods
push
outsb
rorb
xor
lock
stc
pusha
shll
sub
adc
mov
bnd
push
add
sub
ret
xchg
xlat
inc
rorb
sbb
and
insl
jp
xchg
lcall
xchg
aam
jae
jbe
adc
cmp
jbe
cmpsb
push
andl
dec
adc
add
xchg
flds
je
jbe
test
cld
mov
testl
psraw
jle
xchg
andl
lods
je
aas
into
cmp
inc
fisubrs
hlt
test
mov
lcall
dec
lahf
push
inc
in
rolb
pop
lea
aam
clc
rolb
insl
inc
imull
pusha
push
lods
jge
inc
enter
lret
dec
cmp
jb
aas
sbb
iret
rolb
mov
stos
cmpsb
sti
lds
inc
cmp
orb
andl
mov
xchg
les
sub
and
test
cmp
test
data16
iret
mov
inc
cmpsl
push
xchg
sub
lss
lret
mov
inc
jecxz
jecxz
adc
xchg
js
lea
mov
sbbl
push
pop
push
jl
sub
xchg
lea
jle
xchg
test
pop
adc
scas
sbb
imul
ja
loopne
movsl
jb
cmp
push
ficomps
jb
pop
test
test
mov
or
push
test
jecxz
push
fwait
dec
jg
pop
iret
sbb
push
xorl
outsb
cmpsl
loopne
jle
negl
xor
test
cmp
cwtl
pop
inc
daa
arpl
repnz
add
and
stc
dec
dec
cltd
dec
mov
ljmp
sub
xor
aaa
sbb
add
xchg
and
popa
test
popa
jno
xchg
clc
jge
test
xor
nop
xchg
roll
scas
in
add
loope
rorb
aad
push
xor
out
loop
inc
imul
jmp
loopne
ljmp
add
cmc
cmpsl
out
push
jae
sub
into
test
add
shrb
lahf
outsb
mov
mov
and
inc
fldl
outsl
jno
sub
jbe
xchg
add
xor
cmp
das
call
ret
repz
pop
ljmp
jns
shlb
ljmp
jb
in
adc
jg
sbb
sbb
mov
iret
stos
mov
fstl
pop
lret
push
testl
inc
sahf
insl
mov
jns
adc
pop
fldenv
rcrb
cmp
mov
xor
add
mov
shrb
pop
jp
and
lods
jae
add
or
lahf
or
xchg
sbb
lods
add
lea
mov
mov
inc
or
cmp
icebp
les
fwait
std
iret
mov
push
adc
pusha
cmp
sub
sti
adc
iret
jo
lea
mov
mov
mov
in
inc
jp
mov
fsubrl
bound
cld
mov
xlat
lret
push
sbb
adc
mov
dec
dec
mov
mov
sbb
test
hlt
inc
mov
loope
rcll
fstl
popa
push
push
inc
in
xchg
mov
sub
aam
stos
cmp
push
mov
sbb
je
int3
inc
adc
mov
push
or
jp
mov
andl
add
push
stos
shr
xor
mov
pop
insb
add
mov
mov
adc
pop
inc
jne
test
fimuls
outsb
or
mov
lock
xchg
and
test
imul
push
and
jle
lahf
in
sbb
mov
inc
daa
js
daa
add
push
sub
xchg
outsb
enter
mov
cmp
pushl
jmp
test
push
add
mov
dec
jmp
jo
xchg
add
out
xor
sbbb
repz
sbb
rolb
shlb
fiaddl
pop
xor
shlb
xlat
iret
fwait
int
cli
insb
jp
cwtl
jecxz
aam
arpl
pop
sbbb
and
cmp
in
repz
leave
or
sbb
ret
cmpsl
inc
push
jns
pop
cmpsl
push
loop
pop
ss
adc
fucomp
fwait
aam
push
aas
shrl
aas
testl
out
loop
cmp
les
mov
shlb
pop
and
jns
xor
inc
lea
test
xor
outsb
filds
xchg
push
inc
pop
mov
inc
xchg
xor
ret
adc
fstpt
and
and
out
adc
inc
add
and
adc
clc
rorb
adc
movsb
loopne
add
addr16
jp
sub
lods
adc
or
cmp
inc
mov
int3
inc
aas
push
push
jl
or
sahf
adc
popf
movsl
pushf
mov
pop
jp
mov
psubusw
dec
enter
lods
aas
add
arpl
mov
lods
pop
inc
lret
push
outsb
push
or
rclb
xor
sub
jp
cmpsb
push
cmpsl
add
or
shlb
mov
aam
add
rclb
insl
loop
inc
or
loopew
xchg
jmp
cmp
inc
mov
fnsave
mov
pop
xlat
add
popf
push
sub
and
test
into
lods
dec
data16
cmpsb
mov
shll
dec
sbb
shrl
imul
mov
mov
or
filds
inc
jp
or
or
fdivs
push
inc
roll
into
xchg
dec
xchg
jno
cmp
add
popa
rclb
sbb
out
je
pushf
push
adc
mov
lea
mov
fwait
inc
jo
movsl
mov
push
setle
out
popa
shl
mov
fdivs
push
pop
adc
xchg
mov
and
dec
xor
loope
cmpl
add
inc
adc
push
test
iret
push
fsub
jp
jmp
jns
clc
sarb
iret
push
movl
add
loopne
or
push
test
lods
fisttpll
leave
movsl
add
inc
aaa
mov
pop
add
add
pop
add
outsb
mov
mov
pop
test
call
xchg
jl
push
cmpps
xchg
or
sub
mov
add
cli
sbb
add
xchg
lret
mov
flds
mov
jbe
test
push
lock
cmp
fbstp
inc
jmp
dec
mov
in
addr16
int3
lret
push
mov
pop
sub
xchg
inc
fucomp
dec
insb
sbb
mov
mov
mov
stc
pop
add
add
das
dec
ljmp
fyl2xp1
jmp
pop
jmp
mov
test
and
stos
jmp
or
cmpsb
test
in
dec
andl
je
cmp
loopne
jo
loope
inc
insb
inc
scas
and
jbe
aam
xor
cmp
lds
push
testb
add
movsl
sub
and
sub
and
adc
dec
sub
add
lcall
pop
inc
xorb
adc
scas
sbb
sbb
inc
xchg
out
popf
mov
ljmp
mov
and
xor
roll
data16
add
and
mov
lds
inc
sub
fstpl
scas
ss
xchg
mov
ljmp
pusha
or
push
clc
cmp
repz
push
fisttpll
aas
mov
aam
repz
jge
test
or
loope
xor
jne
sub
inc
jle
cwtl
stos
sub
mov
and
pop
mov
dec
push
test
repz
aaa
jp
in
iret
cmp
loope
cmp
and
pop
xchg
out
jno
popa
ret
imul
or
xor
and
pop
sbb
inc
mov
addr16
sbb
cltd
mov
mov
mov
or
push
inc
iret
adc
or
gs
stc
test
sbb
pop
das
mov
pop
repnz
dec
lods
or
lock
fdivr
scas
pop
test
and
ret
hlt
rorl
jmp
int3
push
add
bound
nop
and
ds
popf
call
outsb
mov
or
dec
cmpsl
xor
add
sbb
daa
cmpb
ds
push
add
out
push
mov
jp
pop
add
and
adcb
lods
ret
movsl
imul
and
fisubrl
xchg
push
mov
adc
sbb
add
fists
ror
and
cli
inc
and
sbbl
movsl
fcompl
pop
frstor
inc
lcall
sbb
mov
pop
out
inc
pop
in
sub
and
jmp
cltd
jle
cli
sub
mov
jae
add
push
push
push
movsb
add
push
jo
sbb
out
mov
and
jbe
ja
mov
fldl
dec
inc
insb
movsl
push
cmp
dec
popa
int3
push
dec
pop
push
mov
aas
sahf
sbb
mov
inc
cmp
xchg
xor
cld
xchg
xor
push
scas
imul
in
test
dec
sub
loopne
xor
or
sbb
cmpsl
mov
xor
add
mov
fdivrl
bnd
in
cs
adcl
and
es
xor
pop
iret
mov
add
inc
or
sbb
aaa
or
mov
mov
jb
push
mov
dec
out
push
scas
lahf
lods
test
fcoms
test
xor
ja
pop
enter
sbbb
jb
filds
es
call
das
inc
fldl
scas
pusha
inc
sub
xor
andl
and
arpl
and
fs
cmpsl
push
sbb
mov
loopne
pop
push
roll
jo
mov
or
sahf
mov
mov
mov
inc
push
pop
and
mov
xor
in
ret
push
lods
fmuls
mov
jne
fcoml
jmp
mov
and
clc
ds
sbb
dec
cmpsl
xchg
outsb
dec
add
jmp
test
out
cwtl
or
stos
pop
out
stos
sar
and
cwtl
les
adc
or
add
stos
sub
xlat
sub
mov
aam
pop
xor
mov
test
inc
xor
addb
cmp
and
dec
mov
sub
lods
jno
jmp
xor
push
add
xor
mov
mov
push
lret
mov
pop
leave
les
sahf
movb
xchg
mov
jp
add
add
dec
cmp
sbb
daa
xor
je
mov
xchg
inc
push
stos
test
push
mov
jecxz
adc
sbb
mov
lea
clc
push
nop
pop
in
jnp
mov
cld
cmp
jmp
inc
add
pop
and
loopne
push
aaa
cli
aas
ret
and
mov
mov
mov
xor
adc
pusha
jo
iret
stos
mov
sbb
sub
add
inc
movsl
add
cmp
xchg
lods
xchg
push
test
dec
sub
jno
pop
inc
cmp
imul
in
push
cmpb
mov
ja
test
or
addl
cld
xchg
icebp
xor
jne
mov
inc
jle
add
lods
loop
cwtl
add
scas
outsb
push
test
xbegin
pop
and
sbb
push
iret
dec
test
movsl
fadds
pop
mov
adc
xchg
lods
or
mov
xchg
lods
aam
pop
pusha
leave
and
test
push
mov
sbb
sub
fmuls
xor
fcmovbe
iret
sub
dec
sub
inc
add
sub
pop
jae
mov
cld
xchg
push
lock
ret
or
add
xlat
mov
cmp
jmp
cmp
stos
imul
outsl
cmpsb
inc
imul
mov
ja
sbb
add
test
nop
inc
nop
push
pop
push
mov
or
andb
pusha
lods
pusha
sub
mov
jecxz
xor
ja
dec
ret
pop
push
mov
xorb
xor
popf
push
stos
sub
and
sub
mov
dec
xor
mov
into
daa
mov
and
cmp
test
pop
in
das
pop
mov
inc
pop
daa
mov
addr16
jno
adc
adc
add
and
aas
mov
imul
inc
dec
arpl
push
or
sub
test
dec
outsl
pop
mov
dec
mov
nop
mov
jmp
cmpsl
ret
push
add
lods
outsl
lcall
nop
enter
add
push
mov
jecxz
pop
xchg
jg
cmp
xor
enter
sbb
sarl
jp
lahf
out
test
and
and
cwtl
shlb
loopne
push
sbb
push
push
xor
insb
imul
inc
and
push
push
out
and
or
adc
fcmovne
fldl
outsl
push
and
rorb
jecxz
in
dec
pop
adc
push
dec
mov
inc
or
xchg
jg
pop
mov
xor
jae
in
loopne
clc
adcb
ret
xor
sbb
movb
jecxz
popa
pusha
fiaddl
es
xor
fcmovnu
lret
clc
add
fbstp
imul
mov
jns
roll
push
dec
dec
or
add
cs
dec
arpl
push
push
les
mov
js
push
jle,pt
ret
out
or
jp
fldt
jle
fiaddl
jo
lds
dec
mov
sub
lcall
popa
repz
out
add
inc
cli
shrb
sti
add
in
pop
pop
push
test
xchg
sbb
dec
mov
or
fs
icebp
add
pop
aam
pusha
sahf
pop
movsl
xchg
lock
je
sarl
sahf
or
addb
adc
mov
dec
adc
add
mov
adcl
addr16
sti
sbb
pop
cmpsb
mov
pop
xorl
push
sbb
stos
mov
or
sbb
pusha
hlt
xchg
mov
mov
leave
mov
mov
sarb
pop
xor
test
pop
ret
jns
add
push
sub
push
sar
stos
sub
mov
bound
xchg
xchg
add
repz
vmread
clc
xor
mov
dec
aam
inc
movsl
addr16
push
out
mov
add
mov
and
add
or
xor
sub
or
dec
fisttpl
test
pop
add
push
pop
adc
movsb
leave
clc
xor
inc
xchg
and
dec
add
pusha
or
jp
push
addb
push
movsl
push
add
sub
push
jbe
cmpsb
sbb
fwait
adc
or
das
les
js
pop
adc
xor
mov
lock
js
outsl
jne
adc
test
rorb
cmp
stos
pop
inc
sbb
dec
sti
testl
xor
add
shlb
inc
mov
or
daa
and
or
lret
daa
cmpsl
lds
push
mov
lods
sbb
mov
pop
add
loope
xchg
xchg
inc
sbb
cmp
fildll
lahf
ds
out
popa
test
insl
shrb
mov
push
mov
xchg
je
push
insl
mov
pop
mov
push
dec
mov
jp
bound
bound
add
add
xor
add
ja
fstpl
dec
imul
inc
ret
jmp
inc
inc
mov
test
out
in
push
lret
add
aam
sub
popf
pushl
mov
repnz
data16
lea
into
shll
andl
xor
mov
xor
mov
cmp
dec
mov
arpl
movsl
aas
ja
jno
faddl
cmpl
dec
or
or
shr
or
mov
aas
je
sahf
dec
fldt
cmp
xor
out
jmp
dec
xor
xor
ljmp
inc
sub
jecxz
push
push
xor
ret
xchg
push
push
idiv
add
shl
mov
stc
aas
ret
cmp
jno
sahf
inc
lods
dec
je
pop
pop
and
mov
test
add
clc
jecxz
or
push
sbb
sub
repz
xor
test
push
sub
jne
push
incb
filds
js
data16
push
fildll
xchg
mov
mov
inc
mov
add
push
je
nop
sbb
fnstsw
dec
adcb
pop
xchg
pop
pop
outsb
adc
pop
cwtl
icebp
mov
lods
inc
push
loopne
addl
and
push
outsb
inc
cmpsl
addr16
popf
sub
dec
mov
daa
lahf
cltd
xchg
jae
loope
call
rcll
icebp
and
sti
xor
push
ds
test
mov
xchg
rcrb
test
jb
pop
pop
ss
dec
adc
pushf
or
stos
push
addl
pop
jecxz
pop
icebp
adc
xor
add
hlt
js
lret
dec
fdivs
jno
loopne
or
jb
or
adc
mov
lret
add
sub
mov
xchg
add
jge
mov
addr16
cmp
xchg
ja
jne
mov
mov
ret
jne
jno
push
adc
enter
add
pop
pop
mov
pop
int3
xlat
pop
push
jp
push
mov
adc
sbb
jns
dec
loop
je
adc
in
es
out
outsl
mov
sub
dec
scas
add
add
pushf
lea
mov
mov
dec
mov
fsubs
xchg
or
lds
mov
jo
movsb
mov
shrl
mov
adc
cmp
shrl
scas
bound
add
movl
movl
rcr
fs
or
movl
aaa
es
mov
inc
jg
lea
xchg
rolb
jge
sbb
aaa
jmp
or
inc
mov
xor
les
push
cltd
fsub
sub
xchg
add
xor
repnz
jns
dec
add
roll
aaa
out
jo
mov
xchg
aam
sbb
imul
push
mov
fwait
jecxz
xor
or
or
js
inc
pop
add
pop
sub
inc
ljmp
js
or
rorb
lods
les
xlat
les
adc
inc
adc
add
enter
or
movntps
roll
and
test
mov
dec
pop
or
rcl
dec
testl
test
hlt
xor
mov
cmp
jnp
mov
in
outsl
add
ret
imul
sahf
enter
loopne
pop
add
sub
ret
push
xorl
xchg
pop
mov
jecxz
inc
ret
add
mov
pop
pop
push
sub
mov
in
leave
mov
cmp
fsubs
lds
test
mov
add
cmpsl
sbb
leave
mov
call
lock
push
cmp
mov
loope
mov
xchg
jo
aaa
add
icebp
cmp
lret
cli
xchg
adc
cmp
add
hlt
or
decb
adc
mov
inc
jbe
mov
pop
mov
lret
jp
xlat
lods
bound
mov
push
movsb
or
pop
inc
push
dec
push
js
dec
int
or
movsb
pop
jo
stc
pop
ret
add
jo
and
aas
xor
sbb
and
mov
dec
cmpsb
lret
mov
sub
jno
mov
adc
popa
ljmp
or
push
dec
popa
dec
imul
xor
imul
mov
xchg
mov
dec
aad
inc
mov
cmc
jno
cmp
fs
or
lret
ja
or
mov
mov
push
lahf
inc
pop
or
jne
or
fwait
adc
mov
fwait
and
lods
add
imul
lds
loope
fwait
stos
dec
jns
or
adc
pop
mov
push
dec
mov
les
or
lock
sub
mov
add
xchg
dec
scas
addr16
out
jns
sub
dec
cmp
pusha
mov
xchg
xor
sub
mov
cmp
lahf
and
imul
insl
mov
fcmovu
divl
lcall
sub
mov
xchg
cmp
jle
rcr
mov
in
nop
sbb
stos
mov
addb
sti
fisubrs
arpl
mov
inc
mov
std
orb
data16
in
data16
cmpsl
divb
data16
mov
mov
sub
fldl
jecxz
xor
add
test
popl
xchg
negl
psadbw
xor
xchg
pop
lea
jbe
add
out
mov
xchg
cmp
out
add
outsl
or
cmpsb
sub
movl
jmp
flds
lfs
dec
out
push
sbb
pop
push
mov
xor
cltd
lods
lods
fwait
aaa
mov
negl
sub
or
cmc
cmpsb
arpl
add
or
or
push
es
out
data16
sbb
imul
add
mov
mov
negl
adc
and
or
cltd
sahf
mov
fldcw
sbb
fcompp
js
cwtl
and
arpl
xor
pop
insl
ja
jnp
fs
roll
sahf
pop
or
mov
push
xchg
lahf
in
inc
mov
adc
lahf
icebp
xchg
jnp
sbb
xchg
push
pop
mov
bound
xor
inc
out
adc
mov
push
push
mov
lods
xor
push
mov
jne
lahf
data16
jge
push
outsl
xlat
xor
mov
rcll
insb
out
push
repz
mov
push
pop
inc
lret
push
mov
jae
xchg
sbb
cli
or
fdiv
es
or
sbb
sarb
sbb
aas
add
mov
or
jne
mov
or
jb
sub
pop
sbb
pop
xor
pusha
push
fstps
inc
xor
cmp
lods
jb
lock
fildl
and
and
lods
or
and
icebp
sbb
loopne
cmpsl
popa
fldt
push
and
push
push
lock
fbld
jge
rorb
mov
dec
enter
jo
rcll
inc
jmp
shl
or
ja
adc
sub
jne
pop
sub
adc
jmp
mov
into
pop
das
inc
pop
sub
or
and
adc
sub
push
and
gs
dec
out
or
sub
sub
sbb
shl
imull
ret
cli
insl
lods
rolb
adc
test
xchg
add
mov
lods
add
sbb
mov
sub
mov
push
popf
jbe
rcll
test
and
pop
roll
pop
in
add
sub
or
ljmp
xor
ja
repz
add
push
push
out
addr16
loope
les
loopne
inc
dec
mov
stc
and
negl
jl
dec
das
add
jae
cld
push
push
push
jmp
loopne
inc
in
push
cmp
push
add
test
adc
je
jp
jl
mov
sbb
scas
inc
fsubrl
jl
xor
push
dec
inc
iret
mov
addr16
call
inc
insb
inc
das
int3
test
add
arpl
cmp
out
mov
fstl
cmpl
xchg
pop
push
and
push
out
cmp
jge
not
and
mov
pop
in
rclb
test
sbbl
ret
addl
sub
add
and
push
sub
mov
push
xor
std
mov
pop
and
add
lcall
data16
or
sub
incl
outsl
stos
cmp
and
pop
cmp
pop
mov
or
jo
mov
adc
jl
mov
ret
mov
inc
mov
sbbl
and
fdiv
push
add
push
mov
sahf
mov
dec
add
mov
push
imul
rorb
movsb
test
pop
pop
pop
mov
add
in
inc
dec
cmp
das
test
add
xchg
addr16
inc
xchg
das
add
test
mov
pop
incb
add
xor
xchg
and
je
test
push
xchg
add
imul
das
adc
ret
scas
add
out
jbe
and
popf
and
icebp
jl
add
add
popf
out
or
lcall
push
or
sbb
pop
and
cltd
add
mov
adc
and
lods
shlb
xor
dec
adc
lods
loopne
ja
loop
das
inc
lea
jbe
cmp
add
adc
pop
mov
xor
mov
push
or
add
jb
add
xor
and
movsl
mov
inc
test
dec
adc
lretw
push
mov
xchg
flds
mov
mov
sub
movsl
inc
les
mov
or
mov
fstps
jno
jo
das
push
js
shrb
mov
adc
pop
mov
lahf
push
les
add
add
fisubrs
push
sti
xchg
pushf
addr16
sub
insb
movsb
pop
or
popa
mov
in
add
or
jb
loop
push
les
les
notb
negb
test
push
sbb
jo
mov
xchg
adc
pop
divb
mov
enter
inc
mov
mov
in
xchg
xor
sahf
xchg
lods
pop
into
hlt
xchg
int3
stos
je
fisttps
ja
pop
or
ret
test
xor
or
adc
pop
mov
inc
test
and
sbb
ret
loop
mov
popa
dec
mov
adcb
jb
dec
jae
divl
int
lret
cmp
loop
xor
iret
cwtl
jno
or
add
mov
mov
push
les
fbld
or
jl
xchg
outsb
sbb
add
ds
cli
lods
rorb
pop
mov
add
das
add
test
ret
pop
mov
hlt
rcrl
add
add
or
stos
pop
jbe
pop
clc
add
inc
dec
aas
xor
loope
ret
mov
xor
xchg
add
add
pop
cli
jp
test
mov
add
cmp
mov
add
jecxz
ret
scas
jg
dec
adc
fucomip
pop
mov
mov
out
add
test
adc
inc
pop
jno
sub
or
int3
pusha
or
mov
or
cmpl
and
cmpsb
call
sub
fldl
add
pop
imul
stc
push
rolb
push
inc
icebp
stos
lret
dec
adc
faddl
scas
je
sbb
icebp
adc
cmp
or
dec
in
inc
and
dec
mov
orb
outsb
pop
clc
xor
stos
popf
inc
sub
or
pop
inc
add
out
loopne
and
and
adc
adc
scas
push
repz
rorb
dec
call
les
and
inc
fmuls
ds
push
pop
rorb
xchg
and
or
xchg
stc
add
int
jb
xchg
and
fsubrl
adc
scas
lods
and
loop
scas
mov
sub
loopne
xlat
cmp
cmp
sbb
push
roll
add
cmp
or
addb
jo
sub
sarb
aaa
lods
adc
sbb
imul
loopne
sarl
sbb
lea
mov
arpl
xchg
mov
daa
and
jne
jb
mov
sbb
clc
cmp
sub
push
test
xor
loopne
rclb
sub
xor
and
add
jp
into
mov
xor
add
and
and
add
sub
add
lahf
adc
mov
add
aad
cwtl
pop
or
shlb
push
pop
mov
or
sbb
xchg
and
ljmp
neg
pop
lods
add
pop
pop
sbb
add
inc
movsb
mov
nop
jg
test
push
add
adcb
loop
xchg
and
insb
inc
mov
add
or
leave
pop
pop
add
sbbb
out
sbb
pop
pop
add
add
lods
adc
lahf
xor
push
sbb
jecxz
movups
or
cmp
lods
or
push
adc
pushf
or
sbb
mov
xchg
mov
and
mov
orb
or
fs
js
add
cli
xchg
lods
add
add
add
repnz
lea
loopne
loop
les
and
jb
test
jns
and
cmc
add
add
mov
xchg
adc
std
xchg
ret
scas
fnstsw
or
dec
jle
in
sub
adc
push
sub
hlt
enter
mov
out
ds
in
mov
in
push
leave
popf
orl
pop
mov
xorb
mov
cmp
push
and
dec
aam
and
lods
test
lea
mov
and
xor
ret
xlat
xor
and
pusha
cmp
jno
imul
fists
cmc
adc
adc
clc
and
jno
push
and
andb
jo
pop
xor
mov
mov
cwtl
inc
or
lods
mov
push
rolb
loopne
mov
cltd
insb
ss
or
lods
aaa
mov
ror
lcall
int
arpl
pop
xchg
outsb
adc
xchg
cltd
push
pop
loop
xchg
sub
cltd
imul
xor
fcoml
in
stos
mov
or
mov
sti
cld
int3
and
or
add
ss
adc
or
pop
popa
pop
repz
mov
push
addr16
jbe
push
pop
xor
mov
xchg
pop
gs
pop
insl
add
fisubs
fcmovnb
jmp
add
pushf
mov
mov
sbb
dec
and
je
cmpsl
into
aas
negb
or
rep
fadd
dec
or
clts
lock
jg
arpl
dec
jecxz
ja
flds
push
in
stos
aas
add
inc
inc
mov
add
testb
add
jo
aad
pusha
sub
lock
push
gs
inc
jp
add
ret
push
repz
loope
movsl
sub
jle
daa
dec
dec
mov
xor
out
cmpl
ljmp
dec
xor
xchg
loope
insl
add
fmuls
roll
test
mov
jp
dec
fimuls
pop
mov
jbe
push
std
add
add
pop
test
pop
xor
movl
ret
mov
mov
dec
and
push
outsl
and
jl
fwait
addr16
mov
arpl
mov
push
dec
bound
sti
cmpsl
mov
jle
decb
pop
xor
cs
hlt
sub
adc
mov
push
ret
adc
push
popa
and
dec
dec
roll
addr16
je
adc
ret
test
sub
iret
les
jmp
or
es
push
enter
mov
cmpsb
add
push
jge
sub
xor
out
pop
loope
add
sub
popa
ljmp
andl
push
push
nop
scas
mov
mov
addl
mov
add
adc
lea
pop
mov
sbb
outsl
lea
xor
imul
add
out
mov
or
push
ret
icebp
xor
or
ret
fistl
push
cmpsl
sbb
add
cmp
add
test
ds
nop
lock
stos
mov
sbb
call
cmp
mov
inc
push
cwtl
or
dec
movl
or
cmpsb
xchg
jmp
mov
mov
mov
ret
sahf
ds
dec
dec
fwait
in
sub
mov
sbb
cmp
sub
les
xor
flds
mov
mov
sbb
cli
insl
jmp
jmp
adcl
push
ret
or
and
xor
popf
leave
insb
mov
js
inc
lods
cltd
test
push
fisubrl
sbb
adc
jae
rolb
adc
xlat
mov
lret
sub
jno
sub
addr16
lea
pop
push
ret
inc
aaa
mov
add
loope
rorb
dec
mov
scas
xor
add
jns
pop
pusha
rorb
push
daa
xchg
outsl
mov
aas
fidivl
roll
mov
xchg
rcrb
cmpsl
jbe
mov
mov
inc
push
inc
xor
fcmovne
add
insl
out
imul
sbb
push
and
hlt
jno
mulb
test
or
pop
adc
jmp
and
push
xchg
xchg
inc
adc
sbb
cmp
dec
pop
jecxz
int3
es
adc
mov
orl
into
mov
add
adc
aam
or
add
test
mov
adc
and
push
fnsave
test
hlt
test
int3
movl
iret
xor
xchg
mov
or
test
insl
add
jne
or
mov
add
in
inc
and
shll
fdivr
pop
js
sub
out
inc
adc
mov
addl
xchg
xor
rorb
ret
loopne
xchg
jns
inc
xchg
ljmp
enter
xor
cmc
aaa
pop
jle
int
outsb
sbb
add
repz
faddl
aas
test
or
cmp
cltd
lock
movsl
test
and
xchg
sbb
sbb
push
sbb
loop
sub
adc
loope
dec
subl
int3
je
and
aad
inc
add
inc
scas
xchg
sub
mov
xorl
xor
xor
cmp
andb
lret
ss
iret
loope
sbb
jecxz
imul
cmpsb
add
loope
pushf
dec
cmc
pop
add
andl
adc
movsl
jmp
and
jb
mov
arpl
and
adc
js
sub
xor
test
or
int3
lock
push
cwtl
mov
xor
cwtl
inc
and
inc
cmp
inc
xchg
and
out
filds
test
mov
movups
inc
push
sti
inc
add
mov
out
rolb
movsl
bound
popa
inc
rcll
push
xor
lcall
push
jge
ret
mov
pop
fisubs
adc
pop
mov
add
adc
and
adcl
sbb
out
mov
inc
outsl
jnp
clc
or
push
push
lahf
mov
testb
rcrl
movsb
adc
xor
mov
pop
imul
pop
loopne
shlb
pop
imul
imul
jge
or
pop
and
aad
mov
xor
lahf
loopne
xor
ja
jne
cmp
int3
es
fsubrp
iret
mov
lahf
call
cmp
adc
addr16
xchg
bound
sub
and
mov
outsb
int3
pop
pop
pop
dec
addr16
and
sbb
sub
push
shrb
push
or
add
cmp
shlb
pop
mov
or
jmp
push
mov
add
pop
and
inc
xor
movsb
wbinvd
fs
pop
xchg
mov
mov
pop
xor
les
push
and
subb
sub
fld
sub
xlat
mov
xor
lds
push
test
jl
call
mov
imul
ret
into
popf
inc
imul
fwait
cmp
jbe
cmp
ja
lods
mov
fsts
cmp
dec
sti
adc
mov
mov
outsl
arpl
pop
add
js
mov
rorb
testb
or
sub
cmp
add
insl
loop
dec
sbb
loope
lods
add
movsl
mov
fld
xor
subl
test
prefetchw
or
clc
dec
or
in
pop
aam
pop
cltd
cmp
mov
add
dec
rcll
popf
aas
aad
arpl
popa
test
fs
push
pop
sbb
fwait
pop
and
adc
std
insl
inc
out
or
inc
xchg
xor
xor
ljmp
push
shrl
shrb
cli
mov
xlat
outsb
cmp
push
and
adc
sbb
dec
shll
cmpsl
pop
ret
lret
iret
pushf
xlat
and
or
cwtl
sbb
icebp
hlt
fadds
adc
dec
adc
int3
bound
jns
mov
inc
sub
push
push
dec
bts
push
mov
sub
and
xchg
insb
dec
add
pusha
xchg
add
jnp
inc
xor
gs
mov
xor
lahf
mov
sbb
stos
cmp
pushf
test
push
fldenv
outsb
faddl
lods
mov
imul
in
shr
sub
xor
inc
mov
or
loopne
popa
sbb
in
nop
xchg
call
add
nop
cld
add
mov
add
dec
dec
pop
or
loop
cmp
cmpsb
and
dec
ret
shll
lods
sub
sub
xchg
aad
push
arpl
outsb
loop
insb
verr
and
es
and
lret
cmp
mov
mov
push
test
xor
cmpsl
and
bound
pop
sbb
into
add
mov
leave
les
add
stos
xlat
mov
dec
sbb
clts
mov
push
cmp
leave
pop
inc
mov
pushf
sub
pop
cmp
ds
inc
push
ja
pop
cmpb
test
in
fs
sub
lret
es
inc
std
adc
push
and
mov
sbb
jb
into
fistpll
pop
dec
jge
or
jb
lret
push
xchg
push
lcall
pop
mov
and
pop
push
rcll
sbb
loopne
and
jecxz
push
popa
mov
cmp
mov
push
iret
cmp
shll
adc
sahf
mov
jae
js
shrb
cmp
call
xor
push
push
pop
xor
outsl
inc
lods
or
dec
push
push
nop
add
imul
jge
loopne
imul
and
sarl
jno
fiadds
jns
lock
xchg
pop
test
sbb
movsl
test
or
cwtl
adc
pop
lods
mov
cmp
jnp
insl
dec
nop
and
or
inc
or
ret
test
jne
dec
push
clc
push
jp
inc
xchg
jle
cmp
out
and
movsb
sbb
inc
xchg
test
push
stos
or
enter
lds
sbb
sub
iret
cmpl
iret
mov
inc
mov
aas
cmpps
cmpl
xor
xchg
pop
add
jns
xchg
push
ret
dec
add
mov
adc
daa
sbb
add
loope
xlat
sub
lcall
aas
and
jecxz
sahf
mov
fwait
sbb
dec
cld
adc
push
loope
xor
rorl
test
push
aam
push
rcll
rol
lahf
add
or
cmpsb
fcoml
popa
lods
mov
rol
jecxz
aaa
movsl
fwait
add
repnz
in
scas
and
sbb
jne
mov
xor
leave
adcl
push
mov
add
pop
inc
gs
push
cmp
mov
inc
pusha
cmp
test
mov
add
pop
add
sbb
mov
xchg
stc
cmc
lock
xchg
cmpsb
lds
dec
or
add
sbb
fcomps
rcr
add
les
aas
sbb
nop
push
gs
mov
xchg
xor
mov
sbb
mov
xchg
mov
cmp
inc
dec
clc
and
cmp
mov
mov
mov
adc
inc
add
mov
js
adc
jle
xor
test
lret
ret
mov
adc
mov
jnp
dec
xchg
js
push
jo
xchg
push
aam
xchg
into
ds
fiaddl
test
push
sub
and
mov
icebp
scas
cltd
push
sbb
sti
imul
sbb
add
jo
ljmp
mov
test
add
push
icebp
sub
inc
push
leave
push
sub
pop
sbb
ret
cmc
data16
jecxz
inc
rcrl
and
cmp
add
popf
adc
jnp
xchg
add
das
cmc
cwtl
lret
subb
mov
and
cmp
ret
adc
mov
test
sti
xchg
ss
jmp
lret
inc
dec
inc
jns
and
and
imul
pop
sti
jle
sub
or
or
cmp
inc
arpl
in
push
jg
mov
mov
add
add
dec
adc
xorl
xchg
outsb
jle
or
add
cltd
or
cmp
sbb
lea
adc
andb
repz
and
fstpt
popa
mov
pop
dec
push
pop
stos
add
ret
das
mov
inc
enter
fcoms
nop
or
loope
lods
sbb
mov
xor
jbe
shll
lea
vmread
std
or
or
jp
adc
movl
add
jne
dec
lods
pavgb
iret
mov
cmp
sub
lock
enter
fidivl
arpl
jecxz
jo
mov
fimull
add
icebp
push
in
shll
or
roll
adc
mov
shrb
mov
int
fsubrl
xor
sbb
mov
xor
cmp
leave
jp
sub
xchg
lea
jp
dec
pop
orb
nopl
or
movsl
xor
test
ljmp
fnsave
pop
adc
frstor
leave
fcmovnu
jb
dec
or
mov
lret
jo
test
jg
adc
xchg
adcb
cmp
outsb
mov
jp
mov
xchg
xor
mov
or
pop
loopne
push
cmpsb
or
xor
pusha
out
cmpsl
out
xchg
xchg
lods
sbb
pop
movsl
push
aas
imul
lcall
sub
xor
mov
icebp
inc
loope
test
lods
xor
sub
xor
add
adc
pusha
adc
jo
jmp
jecxz
mov
cmp
cmc
fisubl
push
inc
inc
sbb
add
jmp
and
sahf
mov
iret
pop
mov
iret
aam
ret
pop
push
adc
in
daa
notb
jb
xchg
test
cmpsb
rcrb
dec
and
and
add
pop
je
mov
enter
or
cld
push
mov
dec
std
inc
mov
sbb
outsl
sbb
gs
pop
dec
lods
data16
andl
int
sbb
mov
pop
vphadddq
jmp
movsl
xor
jb
xor
sarb
lahf
cmp
push
pop
rorl
stos
and
dec
mov
out
dec
ret
dec
cmp
mov
jb
in
mov
daa
rorb
jle
pusha
mov
dec
pusha
and
mov
adc
pop
es
int3
insl
das
jo
andb
mov
loopne
push
fbld
add
je
adcl
ss
jle
add
push
xchg
pop
sub
filds
repz
cmp
jne
sbb
jb
movsb
sbb
xor
cmp
shl
pop
sub
mov
cs
lcall
in
fs
popaw
or
in
xchg
iret
push
or
rcl
mov
sub
sbb
lret
test
pusha
jo
das
gs
dec
stos
lret
sbb
xchg
cwtl
dec
inc
dec
xchg
jl
daa
mov
sahf
pop
sbb
cmp
or
push
aam
jmp
jo
sub
icebp
pop
dec
aas
rolb
pop
ljmp
imul
in
mov
movsl
lret
xchg
loopne
adc
int3
jae
cltd
call
sbb
add
arpl
mov
push
or
dec
xchg
xor
sbbb
inc
inc
sbb
daa
pop
dec
frstor
ret
jo
sbb
mov
inc
mov
jg
ret
js
add
add
addr16
sbb
lahf
imul
mov
inc
lea
cmp
lock
aam
jo
pop
inc
jb
cmp
cmp
dec
push
lock
add
push
lret
push
xchg
idiv
cmpsl
dec
test
xor
test
ret
cmc
es
and
mov
aad
push
es
cmp
test
ret
sub
hlt
xchg
movsb
add
push
push
inc
add
add
stos
and
add
and
jecxz
pushf
out
insb
mov
jmp
and
inc
adc
test
and
test
cmc
inc
inc
popa
jb
ret
ret
mov
sar
mov
or
cmp
pop
outsb
push
outsb
jae
je
push
cltd
pop
ja
adc
pop
or
add
lahf
inc
in
jecxz
in
add
mov
inc
gs
loope
dec
shr
jg
sbb
mov
mov
push
popa
push
pop
push
sbb
jle
orb
xor
mov
or
jne
movsl
mov
mov
clc
es
sbb
jb
dec
ja
pop
push
xor
pop
push
ret
pusha
loop
arpl
add
je
repz
or
add
das
push
mov
out
pop
nop
or
cwtl
aas
add
cmp
push
and
lahf
mov
push
test
aas
xor
sub
add
cmp
jne
lods
fstpl
int
pop
push
sub
jg
push
movsb
pushf
mov
test
xorb
adc
push
xchg
or
daa
sti
hlt
sub
mov
pop
sub
add
ret
imulb
pop
dec
push
dec
cmp
mov
mov
sub
xor
cmp
rcrb
addb
lcall
and
inc
jns
dec
add
add
mov
loop
or
push
add
std
stos
mov
pop
inc
jno
lods
sbb
lahf
cmpsl
inc
xor
je
push
inc
mov
and
mov
adc
leave
push
shl
leave
clc
hlt
add
and
cmp
cmp
or
dec
ucomiss
call
mov
test
into
fisttpll
add
cmp
ret
cli
pop
and
mov
fs
mov
or
pop
sbb
mov
xor
mov
xchg
cmc
icebp
mov
sub
inc
subps
add
test
jne
and
cmpsb
jbe
clc
xchg
pop
sub
fldt
out
andb
out
ja
shll
mov
add
and
pop
out
sub
push
mov
and
adc
insl
insl
sbb
lods
ss
lods
mov
loopne
inc
adc
test
in
pop
negb
cmp
inc
imul
mov
gs
icebp
jnp
pop
popl
movsb
outsb
adc
mov
xlat
out
rolb
or
jb
adc
xorl
icebp
ret
sub
and
mov
push
ja
dec
add
mov
add
fst
flds
loop
stos
lods
rcll
test
ja
js
idivb
les
xchg
sbb
sbb
cwtl
push
push
dec
stc
shlb
out
or
add
pop
pop
add
pop
adc
in
dec
jns
xchg
xor
xor
dec
mov
add
in
or
nop
pop
jbe
jp
jne
pop
movsb
jecxz
into
out
inc
js
xchg
cs
or
mov
ret
ja
dec
jmp
mov
ret
inc
sahf
jno
lahf
add
gs
loopne
icebp
jp
imul
mov
out
xor
xchg
inc
inc
pop
jl
mov
sub
mov
xchg
dec
add
dec
test
and
addl
adc
add
jge
std
and
dec
xchg
jo
aaa
sahf
test
jp
mov
cmp
popa
iret
dec
aam
aam
xor
cmc
aad
mov
dec
dec
ja
push
scas
push
lahf
les
add
fsubp
inc
movsl
or
add
mov
push
add
add
adc
pop
test
es
push
sub
es
xchg
ljmp
out
iret
adc
daa
lahf
push
add
sub
popa
cmp
aas
sbb
push
stos
ja
and
jbe
in
xchg
lods
out
mov
bound
cld
lea
imul
add
dec
sub
nop
add
or
test
xor
int
fadds
xchg
icebp
punpckhwd
nop
inc
lahf
xchg
fldl
ret
je
mov
cltd
cmp
cld
push
pop
dec
or
test
sbb
dec
pop
sub
push
cs
add
sbb
call
shlb
in
add
movsl
sbb
mov
pop
and
dec
ror
pop
adcb
adc
inc
jo
mov
les
inc
mov
and
scas
cmpsb
in
movsl
push
jge
bound
scas
dec
jge
scas
popa
nop
pop
or
adc
fildl
and
dec
jmp
out
jbe
clc
sub
dec
jmp
cli
sbb
add
mov
adc
push
movsb
or
imul
add
sbb
dec
sub
xor
adc
push
sbb
popf
insb
movsb
adc
dec
cmpsb
or
iret
or
loope
mov
xor
faddp
aas
lods
fists
mov
test
xor
adc
add
sbbb
addl
mov
pop
mov
sbb
dec
rorb
in
scas
push
push
in
scas
fwait
mov
and
orl
cmp
cmp
dec
pop
test
enter
push
and
adc
pop
mov
add
dec
mov
mov
push
je
imul
aad
adc
ja
ror
jne
push
shrl
jmp
pop
jo
inc
add
cmpsl
sub
ss
fcoms
into
les
push
mov
xlat
sbb
inc
xor
ljmp
das
adc
or
insb
and
xor
mov
adc
daa
loope
sbb
ret
add
lret
mov
int
aaa
lods
popa
cmp
mov
add
sub
mov
adc
mov
sub
insl
or
subb
dec
lods
popf
add
dec
mov
mov
popa
scas
or
dec
aaa
leave
out
lock
mov
dec
fsubs
push
sbb
xor
jg
das
adc
pop
daa
lock
push
mov
in
jl
addl
cli
dec
mov
sahf
test
test
fstpl
test
imul
ja
xor
and
test
mov
fsts
push
and
push
sub
rol
mov
and
xor
loopne
loope
mov
es
lea
addr16
xchg
shll
cmc
out
mov
out
and
imul
ret
jmp
test
adc
push
imul
adc
aam
das
sub
jp
mov
adc
popa
and
js
sbb
xor
and
and
jae
adc
sarb
mov
andl
sbb
or
fldt
dec
daa
inc
mov
cmp
arpl
das
gs
pop
ss
push
arpl
clc
pop
test
loop
mov
int
push
add
sbb
roll
lods
pop
mov
inc
loop
ret
les
push
bound
inc
sbb
test
sub
mov
dec
xchg
daa
cmp
push
mov
out
add
stos
ret
mov
mov
inc
xchg
add
add
mov
sbb
add
mov
cmp
lahf
sub
add
mov
mov
dec
popa
les
test
mov
or
mov
repnz
jmp
pushf
mov
icebp
movsl
movl
sbb
fistl
cwtl
bound
or
neg
iret
lea
vaddsubpd
lods
sub
aaa
hlt
and
push
adc
mov
sti
cmp
inc
fistl
pop
iret
clc
outsb
mov
mov
dec
les
xchg
pushw
sub
jo
sub
into
mov
xlat
xchg
push
lcall
jecxz
ret
mov
inc
lret
mov
mov
pop
sarl
outsb
les
cmp
movsl
outsb
psrlw
xor
and
stos
sahf
xor
orl
ficompl
xlat
pop
sub
iret
xchg
or
das
mov
push
shr
addr16
inc
lods
push
add
arpl
pop
mov
rcll
mov
inc
dec
xchg
jmp
jne
dec
out
push
test
test
cmp
and
inc
loopne
inc
jmp
add
loop
inc
dec
mov
push
add
std
outsl
mov
lods
add
in
or
cmpl
loopne
je
mov
pop
orl
loopne
divb
cld
fistps
notl
lods
in
adc
inc
sub
push
lock
mov
push
xor
es
in
data16
lods
add
adc
xchg
shrb
sbb
aam
dec
lret
sub
inc
push
popa
add
mov
add
popa
pusha
jo
jo
iret
and
loopne
daa
and
pusha
sbb
or
addl
pop
movsl
dec
adc
push
int3
popa
test
or
push
or
dec
popa
jmp
cmpsb
jmp
clc
xor
rclb
dec
fwait
pop
fcmovne
fs
mov
push
movsb
push
adc
add
out
adc
sbb
xchg
push
imul
push
pusha
les
fdivr
lods
test
cmp
inc
push
mov
arpl
xchg
loope
mov
pop
and
jbe
or
sbb
dec
in
sub
mov
sbb
imul
test
lret
insl
mov
sbb
dec
int
xchg
fs
bound
rcl
sti
add
pop
cld
dec
mov
xchg
fwait
test
pop
js
xor
test
jbe
mov
jecxz
bound
push
xchg
shll
test
hlt
mov
cmpsb
or
movsl
mov
ja
clc
jne
fisubrl
frstor
jo
add
push
dec
dec
out
sahf
ja
insb
pusha
iret
xor
pop
adc
cmp
mov
js
sub
mov
or
test
push
or
movsl
jnp
outsl
lock
mov
add
icebp
test
adc
or
dec
sbb
push
inc
mov
sub
add
mov
arpl
inc
push
fiaddl
xor
or
cmp
mov
imul
ret
js
inc
lock
mov
rorb
mov
repnz
popf
push
jp
mov
jge
push
inc
jp
or
mov
or
dec
mov
mov
inc
testl
arpl
outsl
sbb
iret
xor
fnstcw
inc
add
lods
cmc
outsb
lea
popa
push
into
int3
ja
dec
push
mov
pop
jp
mov
out
sub
sahf
sbbb
dec
jmp
pop
cmp
inc
gs
js
push
adcl
adc
iret
cmp
inc
andb
ret
test
aas
dec
cli
sub
shlb
or
inc
and
xlat
inc
pop
inc
and
shlb
ja
clc
mov
sbb
out
iret
push
xchg
lods
mov
popa
cmc
gs
cmp
add
lar
sub
sub
xor
inc
mov
inc
jle
subl
mov
imul
test
add
dec
int
xor
mov
adc
sub
pop
mov
sbbb
dec
and
xchg
inc
adc
mov
outsl
mov
and
inc
xchg
dec
out
mov
push
xchg
push
dec
fwait
inc
jne
push
imull
xorl
xor
xchg
push
cmc
stc
frstor
sbb
cmp
sbb
xor
cmp
cmp
ret
rcrl
push
or
pop
stos
add
mov
das
pop
imul
cmc
fistl
movsb
sub
or
xchg
enter
ret
cmp
ja
subb
cld
in
loop
test
iret
inc
cmpsb
push
arpl
sarb
jmp
mov
adc
movsl
add
int
sbb
lret
push
lcall
dec
loopne
stos
or
lret
clc
jmp
push
or
out
mov
mov
jns
pop
mov
pop
sbb
push
outsb
movsb
sahf
fcomps
mov
sbb
dec
pop
sti
pop
and
sub
clc
xor
cmp
fidivrs
lcall
movsl
je
cmp
adc
fs
loop
pop
and
ja
adc
mov
inc
inc
pusha
sbb
sub
push
andl
pop
movsb
push
add
fimuls
pop
in
mov
add
stos
sub
fs
push
loopne
mov
add
mov
push
int
jno
xchg
scas
lcall
pop
pop
cmp
cmpl
lods
movsb
test
shll
ds
or
jp
or
stos
out
or
pusha
add
jle
or
loopne
dec
and
add
mov
imul
push
std
es
jle
sub
xor
aaa
lea
add
push
rcrl
add
popa
sbb
addb
into
lret
call
xor
aam
pop
outsb
stos
add
test
js
push
lods
imul
add
aam
jge
lea
clc
add
push
push
fsub
movsb
lcall
scas
add
xor
aam
mov
sbb
sbbl
das
or
fildll
js
lods
in
cmp
xchg
pop
and
mov
sub
les
xchg
and
dec
pusha
add
add
and
sbb
imul
daa
jno
mov
stc
stos
pop
push
inc
sub
movsl
xor
and
ret
and
add
inc
imul
sbb
repz
stos
and
cmp
or
fs
addb
fwait
fcmovnb
lds
jae
cwtl
xor
sbb
movsl
lea
xchg
push
iret
lret
addl
mov
or
fmuls
sub
lret
stc
sbb
inc
sub
add
inc
adc
xchg
adc
xchg
xchg
xor
sarb
or
test
push
push
sub
ds
pusha
rol
pop
fisubrl
mov
add
jmp
fwait
pop
cmp
lock
and
dec
aam
daa
inc
xchg
fwait
dec
repnz
lret
add
in
frstor
lods
adc
out
dec
ss
pop
ret
rclb
xchg
dec
adcl
pop
loope
xchg
and
cld
dec
jmp
inc
and
pop
popf
adc
add
xchg
inc
sbb
mov
in
xchg
xchg
mov
jo
mov
sbb
imul
add
or
ficoms
test
cmpsb
push
js
popf
add
and
out
lods
daa
push
aaa
cmpsl
push
inc
sbb
movsl
test
push
adc
mov
mov
add
fbld
pusha
orps
ds
out
mov
xor
xchg
sub
or
sub
push
clc
dec
dec
jns
outsb
aad
cmp
mov
stos
xchg
push
mov
push
ljmp
int3
xor
daa
ljmp
mov
andb
fimull
ja
insl
and
add
jge
pop
daa
mov
xor
out
push
cmp
xchg
ljmp
sbb
popf
dec
and
sbb
cmpsb
xor
movsb
imul
inc
imul
je
pop
dec
xor
movsb
jge
fldt
xchg
push
inc
add
imul
jge
sbb
dec
call
testl
or
mov
mov
test
and
jp
xchg
push
fisttps
adc
test
int3
add
rorb
jns
adc
mov
loop
iret
aam
dec
aad
pop
jbe
xchg
pusha
loope
xchg
mov
add
xor
jl
xchg
nop
shrb
adc
in
lods
js
push
add
add
adc
popa
test
jnp
rolb
and
jmp
pusha
gs
or
negl
jnp
in
xor
aas
sbb
loope
mov
jno
push
mov
pop
mov
lods
das
repz
push
or
lret
jne
fdivs
xchg
pop
xchg
js
gs
enter
or
movsb
stos
das
xor
test
mov
adc
pop
sbb
inc
repz
or
sbb
cs
sub
jne
addl
sub
sub
and
daa
aaa
and
sub
fbld
add
lret
jmp
or
jmp
imul
iret
push
pusha
dec
sub
ljmp
sub
sub
sbb
add
cmp
push
xchg
pusha
aaa
leave
aam
dec
cld
dec
call
or
mov
push
pop
test
andl
imul
loope
and
or
push
jno
inc
lods
lret
popa
xchg
push
scas
outsl
mov
out
pop
or
cmpsb
lcall
ja
inc
sbb
mov
mov
loope
xor
sbb
icebp
mov
pop
ja
arpl
pop
das
filds
call
leave
pop
add
jbe
inc
test
lcall
test
daa
or
sub
add
add
fldt
fistps
mov
jg
in
out
fisubs
pushf
sub
and
push
movsb
add
pop
mov
mov
sarb
div
popa
mov
mov
jp
mov
ret
sub
pop
push
les
fimuls
ret
adc
adc
jno
jle
jg
push
jecxz
inc
inc
push
je
pusha
fsts
push
aam
iret
adcb
sub
jbe
adc
mov
cmpsl
and
add
imul
dec
and
movsb
in
mov
cmp
sarb
aam
push
sbb
filds
jle
jge
icebp
fs
add
insl
jge
in
and
fdivrl
test
into
enter
mov
cs
push
stc
cmp
push
lods
mov
push
or
hlt
push
jmp
jge
fcmovnbe
lret
inc
movsb
in
ja
sub
sbb
mov
or
pop
lods
out
sub
fisubrs
pop
jmp
push
inc
and
jns
xchg
push
pop
pop
mov
pop
out
jne
das
imul
jg
sbb
mov
or
adc
icebp
xor
xchg
inc
and
rcrl
push
cs
push
fdivp
jg
mov
sbb
pop
pop
and
sbb
int3
les
pop
mov
fiadds
or
movsb
or
fidivrl
mov
cs
push
loopne
xor
jnp
movsl
orb
or
je
aas
scas
cmp
cld
mov
xor
ds
add
inc
das
cltd
mov
add
pop
test
pop
or
push
inc
sub
jge
xor
aam
push
sub
xor
mov
fbstp
sbb
loope
loopne
leave
outsb
pusha
and
sub
data16
shl
add
orb
mov
xchg
xor
push
ret
xor
xchg
nop
aas
push
mov
sbb
xlat
sub
scas
ljmp
fs
push
pop
sub
lods
addl
pop
pop
pop
xchg
inc
lret
outsb
sbb
push
pop
adc
pop
jl
and
mov
inc
arpl
inc
clc
sbb
rorb
dec
push
dec
sub
jge
xlat
dec
xor
lret
push
bound
jns
andl
lahf
mov
cmp
ds
imul
fisttpl
push
xchg
test
jb
imul
mov
andl
push
out
rcrl
push
xchg
pop
pop
mov
cmc
jo
nop
out
xchg
ret
jb
jecxz
inc
xor
dec
enter
popa
arpl
pop
mov
aaa
mov
popa
int
pop
sbb
insl
sbbb
jge
pusha
fnsave
cmpsb
adcl
rcrl
or
pusha
aam
push
cmpsb
gs
dec
jns
xchg
nop
andl
pusha
or
or
aad
or
mov
roll
adc
inc
push
cmp
sub
dec
lahf
add
and
push
bound
jge
dec
lods
out
inc
pop
test
lods
mov
sub
xor
ret
dec
sub
sbb
pop
daa
xor
mov
mov
pop
mov
sub
or
subb
aaa
gs
mov
addr16
dec
xchg
int
pop
adc
and
lods
and
mov
lock
pop
inc
push
aad
inc
insl
outsb
pop
cmp
jge
or
push
sub
add
xor
and
hlt
and
mov
sti
addl
jne
aad
into
jnp
cmp
inc
call
movsb
ljmp
mov
lret
mov
sahf
sub
lods
icebp
outsb
xchg
inc
inc
loopne
ss
loopne
shll
pop
or
lea
adc
pop
aas
mov
adc
lds
xor
cmp
push
add
sbb
mov
pop
mov
sbb
lea
pop
inc
sbb
subb
sbb
push
push
filds
inc
ja
push
loope
decb
mov
jecxz
xor
adc
cmpsb
sbb
test
enter
lret
push
nop
xchg
adc
dec
outsl
in
in
add
data16
inc
paddusw
xchg
sbb
or
sbb
shll
cmc
jne
ja
sbb
fdivrs
dec
xchg
cmpsb
fildll
xchg
aaa
int3
add
movsb
movsl
mov
ret
mov
ss
and
add
lret
lods
inc
je
push
gs
in
or
lods
sbb
xchg
cmp
loopne
xor
sbb
adc
orl
ds
sub
sbb
push
pop
dec
ret
gs
aam
sbb
xchg
lahf
and
xchg
enter
imull
inc
jle
std
adc
sub
jno
dec
cwtl
ret
cwtl
adc
es
sti
sbb
xor
sub
and
mov
adc
and
xlat
call
and
les
outsb
and
fisubrl
gs
imul
xchg
jnp
and
fwait
add
or
lcall
scas
scas
push
movsb
mov
lods
adc
mov
scas
add
das
add
or
pop
in
mov
sbbl
pop
push
and
and
test
pop
jmp
imul
sub
jbe
sbb
jne
xor
push
add
lret
ret
add
push
xchg
arpl
xchg
xchg
push
bound
imul
outsb
cmp
inc
jecxz
pop
out
pop
cmovae
jecxz
sti
xlat
add
inc
add
inc
dec
cmpb
scas
xchg
adc
mov
and
jno
jecxz
imul
or
push
out
daa
sub
mov
lock
test
aam
lock
test
adc
adc
add
or
arpl
cs
push
adc
or
repz
add
cld
iret
iret
mov
or
pop
dec
jo
jno
pop
cmp
insl
lods
jne
aaa
pusha
mov
jno
outsl
xchg
mov
mov
imul
mov
xor
cmp
sti
rorl
loope
les
js
pxor
sbb
sub
add
pop
iret
pop
out
popa
iret
inc
add
cli
arpl
test
inc
arpl
sbb
add
xor
mov
ret
or
les
je
cmp
add
insl
cmp
and
sub
test
cmp
sub
lret
incb
cmpsl
rcll
push
inc
sub
fdivrs
pop
fdivl
lds
hlt
daa
mov
xchg
fstps
enter
mov
adc
jno
push
sub
dec
xchg
adcl
push
cs
shlb
les
ret
xchg
xchg
test
push
mov
jno
out
jmp
xchg
shl
push
and
mov
pop
addr16
xor
sbb
fnstenv
data16
push
add
jbe
mov
lret
adc
xor
sub
mov
out
push
and
lods
std
arpl
sub
iret
cmp
push
add
add
pop
xchg
in
mov
or
add
pop
adc
push
cwtl
loopne
inc
mov
insl
xor
addr16
jae
sub
fsubrl
insl
xor
mov
mov
insl
xor
out
insl
sub
gs
sub
xorl
push
jb
adc
push
add
ror
imulb
jg
xchg
insl
cmpsb
out
inc
fbld
scas
sarl
jne
ss
outsb
or
inc
xchg
test
jl
fcoml
test
pop
test
jnp
inc
sbb
sbb
xchg
test
cmp
pusha
jp
jne
sub
subb
fmuls
addr16
mov
xchg
inc
stos
dec
movl
xor
add
mov
mov
inc
pop
pop
lods
jbe
loope
and
call
enter
fstl
add
mov
jge
pop
pop
sbb
cli
dec
add
xor
adc
jmp
dec
xchg
cmp
jg
stos
xor
js
jns
aam
pop
or
lods
push
dec
inc
mov
outsl
xchg
add
lret
test
push
xorl
dec
clc
push
cmpsl
addr16
inc
rcrb
js
xchg
inc
adc
sbb
imul
inc
or
and
mov
ret
mov
inc
fistpl
int
sbbl
test
sub
mov
shlb
sbb
push
ljmp
lock
gs
push
addr16
sbb
arpl
and
or
inc
fnstsw
dec
mov
pop
adc
sub
push
movsb
or
movsb
dec
add
and
movsl
adcb
xchg
push
and
mov
lea
fnstenv
clc
adc
sub
cld
or
sbb
mov
and
dec
xlat
xchg
sbb
or
jo
mov
jmp
pop
xchg
pop
lea
add
cmp
or
cs
fwait
test
jno
lods
fstpt
out
jecxz
fwait
loope
ljmp
sbb
scas
mov
sarl
and
lods
mov
jno
mov
adc
mov
xor
or
sahf
and
push
fldt
test
cmpsl
ret
or
ss
pop
repz
push
xchg
xchg
add
loope
outsl
adc
mov
dec
pop
aaa
and
push
nop
or
adc
or
adc
dec
sbb
adc
push
or
or
xor
mov
lret
pop
aam
or
jbe
xor
inc
ds
outsl
cmpsb
enter
mov
insl
pushf
fldenv
inc
call
push
mov
xor
mov
lcall
in
insb
movsl
fistpl
iret
xchg
xchg
movsl
in
cmp
mov
mov
pop
jmp
or
ret
es
ret
push
push
inc
addr16
dec
xchg
sahf
sub
mov
sbb
inc
mov
cmp
sbb
dec
outsb
jo
cmp
inc
fists
icebp
mov
and
fadd
lods
jnp
sahf
mov
stc
jbe
sbb
ja
cmp
addl
push
pop
fs
pop
add
cmp
aaa
iret
dec
adc
inc
jno
add
xchg
lea
popf
sub
xchg
addr16
xchg
xor
rcrb
fstps
cltd
mov
cli
sbb
fadds
popa
jmp
cmp
pop
inc
pop
test
adc
mov
and
repz
mov
and
mov
js
loope
nop
cmpsl
repz
cmp
dec
out
sub
ss
cmpb
scas
outsb
dec
jno
xor
in
jae
divl
js
dec
mov
stc
and
push
sbb
js
jae
push
pop
pop
jo
mov
out
fucom
lcall
jle
or
push
sub
push
mov
repz
cltd
mov
jns
inc
and
mov
jo
iret
and
jl
lea
and
lock
sbbb
or
lldt
fmull
xor
aaa
lea
mov
popa
push
scas
jbe
or
sbb
ss
mov
add
or
ret
and
and
add
testl
mov
push
mov
jae
clc
sub
adc
sub
inc
adc
int
sub
mull
jnp
add
or
cmpsl
js
pop
call
test
je
lods
xor
fistpl
mov
inc
and
fs
xor
js
jno
inc
punpcklbw
mov
shlb
mov
lret
ret
les
sbb
xchg
inc
adc
or
mov
dec
scas
aaa
xlat
and
loope
xchg
push
mov
xor
fs
inc
das
xchg
or
push
add
xchg
loopne
or
mov
loopne
add
cltd
sbb
xorb
or
or
push
movsb
inc
outsb
mov
xor
fstps
adc
je
xor
mov
adc
jne
add
aam
outsb
btr
jg
stc
out
inc
xlat
jge
ret
daa
clc
test
leave
test
cs
xchg
add
pop
out
in
pop
insb
inc
dec
pop
js
negl
jmp
icebp
pop
mov
add
sbb
sbb
fnsave
adc
imul
inc
sub
sbb
leave
jp
outsl
cmp
addr16
addl
jbe
jnp
iret
cmpl
arpl
ffree
jno
stc
js
mov
or
in
subl
add
fwait
jno
mov
sbb
mov
add
inc
stos
mov
jnp
add
mov
fdivrl
pop
das
push
push
adc
inc
sbb
add
dec
mov
pop
das
or
ret
and
add
sbb
adcb
add
mov
or
aad
divb
clc
push
xorb
cltd
push
and
jae
mov
fs
pop
into
xchg
xchg
xchg
sub
pop
into
aaa
xchg
mov
dec
in
mov
xorb
std
sub
push
aas
dec
inc
shlb
popl
xchg
jle
pop
sbb
push
adc
sbb
push
dec
ret
ljmp
cmp
and
mov
pop
adc
inc
into
inc
pop
loope
or
mov
or
mov
insb
cmp
push
jnp
xor
and
inc
pop
dec
cmp
push
or
inc
push
xor
push
bound
cmpsb
xlat
sbb
add
pushf
mov
adc
jmp
mov
xlat
xor
mov
daa
push
and
xor
mov
inc
xchg
sbb
cmp
lock
test
push
je
push
or
mov
add
adc
and
jle
push
outsl
in
or
add
and
lods
lods
xorl
inc
add
adc
sbb
mov
add
sti
mov
imull
xor
pop
mov
aaa
aad
pop
lea
daa
int3
mov
lods
das
xor
cmp
daa
xlat
mov
add
in
push
lock
rcrl
lea
mov
xchg
aaa
jo
loope
nop
and
add
aam
adc
jnp
fcoms
jne
clc
inc
pop
ja
and
and
outsb
cmpl
add
cld
add
xor
cmp
enter
arpl
test
fdivl
and
pushf
repnz
and
push
das
scas
test
lods
and
or
movsb
aad
popf
cwtl
rolb
sub
iret
dec
add
cltd
sub
sarb
xchg
inc
adc
rol
in
mov
into
pusha
xchg
xchg
xor
pusha
addl
inc
imul
in
test
dec
jmp
in
mov
lods
or
sbb
push
inc
iret
pop
adc
push
stos
sub
jo
dec
xchg
cmp
add
xchg
into
cmp
xchg
hlt
sub
js
adc
dec
or
xor
dec
arpl
and
mov
xchg
mov
andl
xchg
cmp
push
sub
addr16
jge
dec
or
push
sbb
ja
dec
jo
sbbb
push
ret
push
xor
push
rcrb
scas
cwtl
les
mov
mov
das
je
push
push
les
nop
cmp
push
pop
add
cmpsl
ud0
orl
inc
sbb
or
jnp
or
test
xchg
push
xor
push
add
and
lahf
lret
in
adc
gs
sbb
gs
and
iret
jb
sbb
call
jmp
adc
in
mov
push
scas
aam
stos
xor
mov
sbb
insl
cltd
cltd
mov
add
add
and
lods
clc
add
jmp
adc
and
mov
test
ja
and
jb
ljmp
cmc
ja
xorb
mov
or
mov
mov
mov
mov
popf
sbb
ret
or
test
xor
push
jecxz
stc
push
sarl
and
stos
sub
pop
inc
mov
add
push
pop
sahf
aas
xor
loop
mov
aad
push
ljmp
dec
sub
ret
jne
inc
pusha
cs
aaa
push
rolb
fidivrs
popa
pop
andb
xlat
add
pusha
pop
pop
push
xlat
addr16
and
pusha
cld
mov
rcll
adc
inc
pushf
adc
and
insl
ljmp
movsl
sahf
jecxz
and
jmp
addr16
lcall
jo
pop
jmp
mov
nop
or
repz
add
loop
or
fucomip
mov
mov
jne
push
inc
shrb
dec
fstps
repnz
mov
jno
movsl
in
and
cs
mov
rol
test
pop
push
adc
or
data16
add
jecxz
imulb
adc
rcrb
clc
mov
xchg
mov
add
pop
mov
ss
add
popa
repnz
test
inc
and
lds
mov
lds
add
and
add
lret
push
cwtl
xchg
pop
mov
loopne
dec
pop
and
rclb
or
dec
rcrb
scas
push
iret
stos
or
push
xor
fdivrs
in
add
cmpsb
sub
push
xchg
adc
and
sbb
jo
add
jb
or
jg
outsl
loop
xor
push
out
bound
lret
decl
movsl
adc
dec
sbb
xchg
je
and
sbb
push
mov
add
mov
dec
fdivrl
cmpsl
pop
xor
lods
push
fmul
mov
lods
mov
xchg
dec
add
pop
add
pop
rolb
xor
fiaddl
push
ret
cmp
sbb
inc
sub
or
cmpsb
xlat
movsb
add
movsl
lods
mov
int
mov
imul
sub
adc
popa
arpl
stos
lock
fwait
jl
jno
push
into
lcall
adc
cmpsl
add
stos
xor
jle
xchg
xor
adc
mov
sub
xchg
dec
imul
dec
test
movsl
sbbl
shll
cmpsl
lods
push
add
insl
iret
inc
pop
add
adc
and
jge
mov
in
aaa
mov
leave
mov
jbe
into
and
movsl
jnp
jle
adc
mov
adc
sub
enter
mov
push
sbb
sbb
add
sub
push
clc
das
dec
nop
rcl
mov
xlat
add
adc
leave
add
mov
test
leave
rclb
rclb
push
dec
scas
test
dec
ja
std
add
lret
dec
push
add
or
inc
sbb
cltd
insb
and
add
pop
mov
or
cmp
lcall
dec
add
inc
pop
or
or
dec
shr
mov
pop
and
or
in
rorl
jge
insb
pop
loope
cmp
inc
sbb
lock
leave
adc
mov
xchg
jle
push
add
testb
call
stos
or
sbb
xchg
mov
testb
repnz
ret
inc
lret
xor
mov
or
ljmp
popa
inc
aaa
addl
and
sbb
mov
xchg
mov
push
jmp
popa
popa
xchg
pop
add
call
pop
cmp
mov
stos
inc
add
loope
add
roll
or
daa
mov
fdiv
jns
mov
std
shlb
xchg
jle
nop
ret
jne
pop
arpl
pusha
pusha
adc
xchg
mov
cwtl
add
lret
mov
mov
add
fldl
or
add
test
gs
cld
inc
xor
pop
shrb
daa
lahf
lret
sbb
sti
std
mov
orb
or
mov
mov
xchg
xchg
sub
xor
dec
and
adc
mov
movsl
sti
mov
rorb
inc
add
and
stos
es
arpl
adc
push
xchg
in
push
add
mov
push
sub
inc
testb
stos
out
and
test
cmp
and
je
jmp
mov
fldcw
or
push
in
addb
sbb
out
scas
mov
jecxz
push
sub
mov
addb
psrlq
int3
mov
in
mov
jno
push
nop
lock
mov
sbb
bt
shlb
jo
scas
insl
loopne
or
sbbb
xchg
or
insb
or
push
popa
sub
sarb
jbe
lea
add
mov
aam
test
adc
mov
loope
ficoml
and
js
gs
push
test
add
mov
jmp
pop
cmpsb
lcall
out
sbb
fimuls
in
sbb
pop
cmp
sub
loope
lea
lock
in
fcmovu
and
jl
inc
jmp
xchg
mov
clc
loope
push
ficompl
test
lock
mov
insl
nop
scas
cmpsl
jecxz
mov
fwait
gs
mov
daa
jge
jbe
xchg
jbe
mov
jmp
test
xor
lds
dec
cmpsl
mov
in
in
shrl
es
xchg
shlb
ja
adcb
push
push
add
sarb
and
je
jo
xor
fnstcw
mov
sub
jp
jno
or
popf
jno
ret
push
cmp
lock
mov
roll
cmp
push
mov
mov
ret
push
cmpsl
movsl
mov
xor
repz
xchg
rcrb
cwtl
out
sbbb
inc
addr16
ss
adc
popf
pop
fiadds
shr
addl
sbb
into
nop
ret
movsl
sbb
dec
push
les
loopne
sahf
fidivrs
xor
popa
imul
add
add
and
and
or
push
bound
xlat
sub
xchg
add
jbe
mov
sub
mov
imul
dec
push
cmp
jnp
push
dec
add
inc
mov
movsl
call
rorl
sarb
ret
sbbl
mov
aas
push
push
adc
jns
push
cmp
sbb
inc
stos
rorb
or
add
pop
insb
nop
dec
inc
bound
arpl
push
imul
inc
adc
pop
sub
clc
icebp
add
sbb
cmpsl
jge
aad
leave
cmp
loope
test
loop
lds
rclb
pop
or
js
push
jg
outsl
je
je
ds
and
sub
add
sub
push
dec
clc
xchg
call
inc
shlb
js
dec
push
adc
mov
mov
or
into
les
ds
jle
xchg
pop
cmpsl
sub
rolb
push
ror
pop
push
xchg
roll
lock
or
outsb
daa
in
xor
popa
arpl
fstps
sub
adcb
loope
jge
fnstenv
aas
push
adc
inc
loope
add
inc
adc
or
shll
add
adc
cmpsb
push
addr16
xor
push
sub
inc
repnz
popa
jl
push
addr16
sub
cs
sarb
cmpsb
adc
scas
push
xchg
inc
dec
repz
add
popf
xchg
xor
mull
andl
addr16
test
daa
sbb
jno
cmp
hlt
mov
adc
andl
jge
xchg
lock
add
pop
dec
xlat
notl
or
in
lods
mov
hlt
or
test
icebp
add
adc
imul
stos
or
loopne
mov
out
or
or
or
or
lret
sarl
rcll
pop
sub
orl
add
js
js
sahf
cli
mov
sbb
adc
ja
pop
sti
or
icebp
aam
mov
fildl
push
neg
andb
gs
push
test
in
ss
inc
fsubs
in
jo
dec
and
or
or
std
dec
or
fcomps
outsl
mov
lahf
aam
lods
jge
repnz
xchg
jbe
adc
or
or
and
push
subl
xor
cmp
and
jne
fidivrs
mov
scas
adc
das
sub
fildl
add
push
aaa
test
dec
cmp
stos
cmpsb
sub
andl
call
sub
add
cmp
ss
xlat
sti
xchg
mov
les
lods
jle
sub
rclb
mov
and
imull
insl
loopne
fcom
loope
movsl
push
jge
pushf
dec
adc
dec
stos
and
mov
mov
jl
cli
push
and
mov
add
pop
jle
adc
inc
sti
jecxz
lea
xor
dec
jp
xor
jge
mov
add
iret
xor
mov
mov
getsec
lahf
add
cmp
pop
dec
xor
xor
pop
sbb
xchg
xorb
add
and
add
lds
cmp
add
cmpsl
add
hlt
or
inc
and
xchg
fcmovnb
in
and
add
add
sbb
pop
push
mov
fdivl
roll
xchg
pop
and
push
pop
sahf
idivl
sbb
or
xor
pop
pop
jmp
fdiv
es
stc
cltd
and
mov
das
in
fwait
and
dec
xchg
jb
xchg
cld
ret
sbb
and
and
mov
jmp
pop
out
pop
or
fmull
adc
addl
adc
popf
lock
icebp
dec
and
rolb
push
popa
or
out
lea
rcrb
pop
adc
push
jecxz
inc
repz
mov
xchg
sti
sbb
das
jge
jmp
cwtl
lock
fisttpll
test
cs
ds
pop
shll
cltd
aad
sbb
movsl
add
fstps
sub
sbb
rcll
dec
arpl
cwtl
sbb
arpl
push
sbb
cmp
cltd
xchg
js
and
cmp
xor
add
jmp
cmp
sbb
mov
and
push
inc
pop
adc
call
sbb
xor
hlt
cmp
fwait
seta
stos
mov
xor
lods
add
push
gs
inc
ds
fld
jnp
jp
ficomps
add
xor
mov
pop
lahf
jmp
sbb
addr16
xchg
jl
and
ss
xchg
cmp
or
sbbl
iret
popa
outsl
push
shlb
push
push
sbb
lret
in
mov
addr16
loop
pop
xor
mov
mov
inc
test
iret
inc
xchg
les
adc
lcall
mov
gs
lret
stos
out
xor
mov
js
in
sub
sbb
js
sbb
pusha
adc
shrl
aas
lods
into
je
aaa
push
in
js
pop
repnz
addb
sbb
or
nop
ret
pop
or
cmp
rclb
dec
imul
arpl
sub
cmovo
xor
sbb
jne
insl
or
repnz
xchg
arpl
pop
call
das
or
jae
cmp
inc
shl
push
cmp
add
sahf
shr
aaa
mov
lahf
pop
sub
cmp
mov
outsl
dec
clc
xor
push
flds
jmp
dec
or
push
dec
shll
xchg
clc
nop
mov
mov
jg
inc
dec
xor
movsb
jo
mov
adc
xchg
pop
sub
je
sbb
insl
loopne
nop
std
mov
jo
cmpsb
lods
cmc
ret
add
ss
and
mov
movb
mov
out
pop
fsubrs
popl
and
xor
dec
pop
test
jb
nop
cltd
or
ret
scas
popf
pop
mov
xorl
dec
es
adc
in
xor
jg
jmp
loop
fimull
mov
cs
loopne
add
inc
pop
inc
insb
aas
dec
cmp
mov
gs
rclb
or
cmp
and
test
enter
test
and
repz
loope
xor
mov
inc
loope
int3
shrb
jl
jne
cmp
int
and
push
lret
jno
cmpsb
fadds
scas
inc
adc
popa
dec
mov
xchg
in
xchg
mov
ss
pushf
sub
movsl
out
js
push
lea
pop
adc
sbb
mov
and
jl
mov
repz
mov
arpl
mov
cmp
gs
shlb
mov
outsl
xchg
sub
test
jg
pop
pop
ja
dec
js
adc
mov
or
aaa
out
adc
popa
aaa
addl
dec
das
popf
fnstsw
inc
xlat
sarb
das
cmp
cmp
mov
test
lea
popf
fildll
mov
icebp
push
and
into
jae
insl
or
mov
clc
lods
aaa
push
jb
iret
add
add
mov
testl
pop
and
fcomps
andl
pop
xor
iret
inc
aaa
and
arpl
cmp
mov
ret
std
test
xor
sub
jecxz
inc
std
mov
pavgb
das
add
js
cmp
fsubrs
ficoms
add
add
inc
cmc
ss
imul
or
push
add
mov
push
or
into
adc
pop
jle
mov
jne
testl
mov
es
and
mov
arpl
inc
jne
jecxz
add
addr16
xchg
lock
pop
fs
xor
lea
inc
cwtl
sub
push
into
loop
stos
orl
mov
inc
xor
test
push
gs
fwait
sbb
cwtl
jo
roll
sbb
scas
fdivrs
ror
mov
inc
sarb
lds
adc
out
mov
push
add
jp
js
add
or
xor
test
add
lret
pop
cmpsl
add
adc
and
ja
adc
ljmp
pop
nop
add
arpl
dec
movsl
xor
inc
mov
fiadds
jmp
and
or
ficomps
rorl
sbb
or
xchg
and
mov
add
sub
fdivrp
lds
imul
cmp
mov
cwtl
js
sub
add
xchg
xchg
ret
ret
inc
mov
inc
mov
push
fldl
test
push
test
mov
xlat
adc
push
inc
jge
imul
shll
iret
or
mov
fwait
jae
rcll
mov
enter
dec
adcl
dec
or
stos
push
test
dec
sbb
test
inc
iret
popf
jbe
mov
add
pusha
addr16
and
jecxz
mov
dec
shll
pop
sub
in
test
mov
push
outsl
test
xchg
push
and
shrb
aas
lahf
lcall
pop
inc
rorb
addr16
imul
xor
pop
push
push
push
mov
sbb
negl
ret
inc
or
adc
test
cmp
pop
nop
sub
add
jo
push
lds
imul
jmp
sub
lahf
lds
jae
js
adc
jmp
add
scas
inc
xor
sub
dec
mov
push
in
nop
pop
jbe
add
in
call
lods
cli
add
pop
adcb
fidivl
adc
and
xlat
mov
je
lea
stos
sbb
mov
sbb
xchg
rorb
and
sbbl
and
rorb
dec
or
or
mov
and
andl
inc
pop
jo
je
daa
cmp
and
pop
pop
xchg
jno
je
rorl
outsl
sub
xchg
jbe
xchg
popa
das
mov
cmc
ret
shrl
sahf
sub
jno
in
or
int
sub
sbb
imul
add
adc
and
xchg
jmp
popa
adc
add
inc
add
sub
cwtl
fisttps
push
jne
rcl
mov
pop
jbe
inc
xchg
js
cmp
and
xor
xor
in
lret
loopne
pop
adc
pop
lret
dec
mov
inc
adc
test
jo
in
aaa
cli
add
add
add
jnp
pushf
xor
pop
xchg
ds
mov
xchg
lcall
push
pop
add
ds
sub
pop
andl
add
and
adcb
sbb
sub
push
loop
int
out
push
adc
jbe
cli
inc
mov
pusha
mov
aad
test
mov
fistpll
push
cmp
add
add
mov
das
out
mov
sub
repz
fmuls
fcomip
std
and
enter
cwtl
or
pop
adc
outsb
cmpsb
jo
xlat
sub
add
adc
mov
mov
aam
popa
sub
int
add
or
stos
jg
push
adc
xchg
lea
xchg
fucomp
outsb
out
push
sbb
test
enter
ret
sbb
mov
cmp
jne
inc
rcl
sbb
xchg
cmp
aaa
add
inc
out
inc
fdivl
int
jecxz
arpl
dec
or
loopne
jle
xchg
mov
movb
mov
sbb
cmp
test
in
lods
xchg
insb
xchg
jno
fld
inc
sub
cmp
hlt
push
push
or
cwtl
jo
ss
fxch
sub
cltd
sbb
mov
and
inc
add
cwtl
gs
and
stos
or
insb
and
ja
add
divb
xchg
add
cmp
outsl
test
adc
rorb
stc
dec
sub
iret
cld
adc
mov
mov
jno
and
aaa
shl
cld
add
filds
iret
and
inc
ret
rcrl
fwait
loopne
out
push
or
setb
and
mov
push
cmp
sbb
bts
mov
int
les
push
in
pop
sbb
shrb
inc
push
aaa
insl
outsl
insl
pushf
js
pop
stos
cmpsb
push
out
pop
push
sub
mov
add
sahf
push
adc
push
test
dec
aam
mov
rolb
mov
imul
add
mov
jne
negl
add
fs
add
and
cmpsb
push
pop
popa
mov
outsb
hlt
movsb
xor
xchg
mov
dec
sbb
jo
pop
cmp
pop
xchg
mov
stc
and
add
mov
jle
fildl
popa
or
adcb
push
popa
sbb
out
push
loopne
adc
add
dec
xchg
cmpsb
out
mov
fistpl
xchg
push
mov
inc
arpl
dec
xor
add
popa
sbb
dec
cmp
sbb
ret
dec
adc
jle
push
inc
into
sub
sub
or
and
and
jmp
mov
dec
sub
dec
sbb
add
into
dec
add
hlt
scas
or
in
outsl
mov
inc
inc
dec
fucomi
and
filds
aam
pop
and
jecxz
daa
xor
sbb
ror
stos
xor
imul
xchg
jbe
fsubl
inc
xchg
pop
sbb
add
adc
lret
daa
push
and
push
mov
inc
outsb
adc
add
stos
lea
loopne
adc
ret
sub
sub
push
rorb
test
fdiv
pop
inc
mull
xchg
push
subl
mov
push
cmpsb
adc
pop
inc
aam
cld
sub
jno
adc
mov
loop
rcll
js
sub
mov
sahf
call
inc
mov
pusha
nopl
test
sub
fwait
hlt
inc
pop
pusha
sub
inc
adc
xor
lret
daa
or
jno
add
xchg
mov
sbb
push
xor
mov
aaa
mov
lret
repnz
int3
add
rcll
iret
add
nop
mov
adc
repnz
add
mov
xchg
cmp
aad
lret
and
adc
jmp
adc
pushf
xor
inc
inc
inc
mov
nop
adc
pop
pushf
xor
cmp
dec
and
and
and
daa
mov
dec
andl
divl
jmp
addr16
xor
add
dec
sahf
and
add
dec
in
pop
pop
in
or
and
jp
and
xor
shll
xor
mov
inc
mov
add
mov
cmp
cmpsl
add
cmpsl
mov
inc
mov
iret
push
push
jp
mov
into
sbb
cmp
dec
push
mov
lahf
sub
mov
test
fs
push
cmp
mull
mov
cmp
iret
and
call
loop
jge
lcall
mov
aaa
popa
jnp
in
enter
out
loop
icebp
popf
or
out
decl
pop
lahf
xchg
test
add
mov
repz
cmpsl
mov
sbb
sub
dec
cmp
add
cmp
sub
mov
repz
or
popa
or
lret
mov
test
cs
mov
cmp
xchg
test
adc
push
jl
cltd
fnstsw
xchg
sti
mov
imul
ljmp
adc
int
test
daa
orb
ret
fcoml
push
sarl
push
movl
aam
xchg
clc
sub
adc
push
and
aas
cmp
add
pop
adc
scas
adcl
pop
mov
fimull
push
lea
adc
add
stos
pop
xor
jmp
jmp
in
push
cmpb
cmp
aam
fcmovbe
sbb
xorb
sub
push
aad
sub
mov
enter
inc
and
jl
jge
mov
dec
scas
dec
xor
enter
sub
mov
adc
or
stos
xchg
xchg
add
dec
cmpsl
dec
add
aam
pop
mov
addl
lds
push
pop
mov
and
jge
addb
pop
decl
aas
and
adc
cmc
jns
mov
cmpsb
push
adc
out
and
dec
xor
xchg
xor
rorb
out
test
pop
pop
rcrl
mov
shll
out
jne
cmpsb
xchg
or
fstps
fbld
in
adc
movl
in
sbb
cmp
mov
dec
inc
inc
or
or
pop
xchg
push
or
cmp
mov
adc
mov
loopne
lods
mov
hlt
sub
shrb
rorb
adc
clc
and
or
mov
jbe
sbb
shlb
push
cmc
mov
lock
pop
sub
shlb
cld
add
xchg
cld
and
inc
and
mov
jecxz
movsbl
inc
hlt
dec
rol
cmp
or
jmp
adc
sarl
mov
adc
lret
adc
fimull
rorb
insb
jmp
arpl
nop
jns
inc
and
pop
mov
sbb
test
or
aaa
sub
cmp
or
into
or
loop
adc
dec
rcr
cmp
pop
cltd
stos
nop
or
dec
stos
or
xchg
sub
jo
mov
mov
xchg
dec
and
mov
dec
pusha
test
xor
jg
dec
add
push
mov
and
mov
or
and
inc
mov
add
cmpsb
es
inc
fnsave
icebp
loope
adc
mov
mov
mov
pop
repnz
mov
push
pop
jae
push
sub
jge
addb
or
and
and
push
pop
dec
js
lock
rclb
push
lahf
and
sub
lcall
jl
cmp
fadds
adc
pop
xchg
mov
pop
jb
aam
daa
mov
mov
or
xlat
jo
divl
jnp
push
mov
inc
and
add
push
and
mov
scas
add
jbe
icebp
and
push
lcall
mov
pop
aaa
jae
cmp
push
lret
inc
add
inc
add
or
loop
mov
lods
dec
loope
fistl
shrb
sbb
test
sbb
xor
lock
push
mov
add
xor
aaa
and
push
dec
inc
cmpsb
mov
or
mov
or
xchg
data16
das
adc
in
lods
xchg
jecxz
push
inc
outsl
and
cmp
push
es
add
subl
jbe
add
pusha
pop
test
inc
shl
leave
sbb
sub
pop
int3
dec
xchg
dec
loope
jae
mov
adc
loop
jg
adc
rclb
pushf
fwait
scas
jb
movb
sub
pushf
jnp
ret
inc
cwtl
pushf
pusha
lahf
cltd
and
je
add
frstor
je
mov
dec
jno
test
push
ud1
out
add
addl
xchg
ja
in
ret
inc
push
adc
outsb
sbb
stos
icebp
in
bound
pop
mov
popa
into
dec
fabs
add
cltd
popf
rol
lock
bound
push
mov
test
lea
add
xor
mov
push
push
add
mov
xor
dec
cmp
sub
dec
dec
sbb
and
xor
imul
and
in
sbb
sbb
xchg
int
dec
jecxz
aad
mov
mov
out
dec
and
ret
cmp
xchg
rolb
test
xchg
mov
mov
and
bound
insb
test
imul
xor
cwtl
add
ret
popa
aam
xor
inc
cwtl
mov
enter
xor
push
lret
mov
loop
cs
cmovne
push
push
or
mov
mov
pop
fwait
leave
daa
sbb
xchg
cmp
jmp
inc
loopne
dec
lea
xchg
dec
test
dec
loope
and
xorl
sub
and
shll
or
and
dec
adc
push
scas
add
dec
and
xor
pusha
dec
cltd
xor
mov
cli
cs
lahf
xchg
testl
cmpb
dec
and
leave
adc
xchg
sti
je
push
je
lods
mov
arpl
and
sti
ret
xchg
or
xchg
mov
sub
push
xchg
sti
jecxz
aam
lock
xchg
bound
movsl
gs
xchg
xor
loop
mov
sub
nop
add
push
or
xor
imul
xchg
lock
cmp
in
into
cmc
nop
add
xor
hlt
arpl
adc
jle
dec
dec
mov
jp
sbbl
adc
push
repz
and
rorl
add
xchg
rcrb
int3
addb
jmp
fnstenv
dec
add
roll
sbb
inc
add
add
insb
frstor
lret
mov
js
xchg
pop
push
fnstenv
push
rclb
insl
sarl
cmc
nop
rcl
sub
sbb
mov
rcll
inc
lcall
icebp
cli
lds
jns
add
inc
xlat
jae
cs
rcl
jp
icebp
and
sbb
ret
lods
ja
imul
test
stos
add
xor
and
mov
testl
lret
add
dec
clc
jns
jmp
jo
sub
jbe
pop
mov
mov
xchg
and
outsl
or
shlb
lahf
lods
ret
xor
add
fsubs
adcb
add
out
inc
jae
push
repnz
xor
push
mov
adc
ret
mov
sbbl
add
xchg
and
and
imul
cmp
xlat
sbb
add
imul
push
and
lods
bound
iret
adc
xor
clc
push
push
sub
loopne
push
pushf
jb
jne
cmp
cmc
or
data16
sbb
cmpsl
cmp
sbb
sub
outsb
outsb
pop
ja
push
cli
in
int3
les
dec
sbb
dec
and
and
cmc
hlt
mov
imul
imul
or
sub
push
sub
nopl
repnz
sub
test
add
inc
mov
xchg
pop
fistpl
push
jge
and
das
mov
loope
add
sbb
cltd
jae
orl
cmp
jo
and
scas
cmc
add
mov
inc
mov
dec
add
fmuls
lahf
fnstsw
jle
shrb
xor
xchg
int
insb
lret
xchg
subb
or
lods
add
jmp
subb
movsb
push
cmp
or
popf
gs
add
mov
cmp
sahf
mov
jb
push
add
into
addr16
outsl
lea
cmp
insb
jmp
add
xchg
add
xor
lods
roll
mov
sbb
insb
aas
add
outsl
add
mov
rol
gs
popa
mov
xor
pusha
in
add
cmp
mov
sahf
sbb
andb
leave
cli
sub
pop
stc
loop
dec
pusha
dec
ret
add
cwtl
cwtl
insl
cmp
add
dec
cmp
cmp
aas
imul
jns
fistpl
add
jp
add
add
sub
daa
mov
or
fsubrs
jns
inc
addr16
je
movsl
das
movsb
js
pop
fcoms
jns
pushf
and
pop
orl
dec
clc
mov
das
lret
add
outsb
xor
pop
pop
and
sbb
iret
je
or
mov
and
cmp
mov
pusha
in
lret
movsl
add
adc
sbbb
pop
cmp
sbb
sbb
dec
int
inc
cmp
rcrl
in
inc
mov
popf
sbb
fldt
xchg
add
or
scas
sub
iret
add
and
mov
push
div
enter
mov
mov
idivl
add
dec
loopne
xchg
mov
push
dec
aad
hlt
rclb
ret
add
sbb
lock
add
dec
pop
xchg
add
adc
jle
xchg
sbbb
sbb
adc
lcall
cwtl
cltd
add
fs
pusha
jmp
pop
mov
leave
pushf
add
sub
popf
fmul
daa
adc
jge
lods
jecxz
jno
push
cld
ret
lret
push
dec
cmpleps
ss
pushf
push
sbb
or
subl
loope
scas
cmp
popa
xor
inc
pop
dec
mov
test
movsb
pop
test
out
fidivs
outsb
out
mov
enter
es
scas
insb
loopne
add
pop
pop
fnstenv
xchg
scas
insb
jge
outsl
sarl
mov
mov
aaa
sahf
add
out
sbb
sahf
je
imul
adc
pop
ret
sbb
jns
loopne
shlb
je
or
and
nop
adc
push
add
xchg
mov
sbb
add
sar
adc
push
cmp
das
int3
sub
inc
stos
add
aad
add
pop
out
mov
cmp
pop
dec
scas
enter
add
mov
fsubp
inc
imul
insl
xor
jp
jp
cmp
ja
jbe
add
adc
sub
aad
outsl
ja
mov
gs
mov
inc
popf
frstor
jmp
in
dec
xchg
nop
pop
lock
cmp
or
mov
sub
fnstenv
and
stos
shll
sub
sbb
mov
jmp
and
cld
inc
fadds
loopne
jge
or
sub
mov
jmp
cltd
add
xchg
rorb
sbb
ja
or
fstl
push
out
aaa
sbb
sarl
add
and
repz
js
push
cs
aam
adc
inc
gs
loop
xor
icebp
aaa
mov
ja
or
adc
dec
jbe
add
jnp
mull
das
cld
inc
loopne
cmp
daa
add
and
in
ds
or
iret
fadd
cmp
rcl
adc
adc
fsubs
push
sbb
pop
adc
adc
es
pop
or
movsb
mov
enter
add
add
lods
inc
lret
dec
into
shl
jo
mov
inc
inc
mov
push
cmp
inc
imul
sbbb
aaa
add
add
jo
bound
mov
punpckhwd
leave
bound
ret
add
loop
pop
sub
je
test
es
pop
loope
add
je
jns
imul
mov
mov
push
and
or
stos
add
inc
and
inc
or
push
call
je
ret
test
xor
mov
mov
cmp
jecxz
inc
lods
and
fiaddl
pop
repnz
dec
fadds
call
or
add
xchg
inc
cmovbe
adcb
jbe
roll
add
out
mov
je
addr16
icebp
mov
stos
jle
jbe
rcrb
sub
push
data16
mov
popa
pop
arpl
jae
and
aam
adc
mov
push
ljmp
daa
pop
add
add
aad
jne
cmp
pop
dec
jno
insl
cmp
sbb
sbb
mov
cmc
lcall
or
pop
mov
fnsave
and
je
or
push
test
es
adc
jmp
sti
add
test
sub
pop
add
test
rorb
iret
fdivrs
aas
inc
daa
icebp
adc
or
xlat
lods
push
sbb
adc
aad
inc
and
adc
and
cmpb
pop
nop
movsb
int3
rorb
mov
lcall
lea
movsb
sub
xchg
fisubs
arpl
push
ret
into
dec
jg
mov
lret
insl
in
test
sbb
loopne
pusha
gs
xor
outsl
leave
dec
inc
cmp
mov
push
dec
in
jnp
pusha
or
in
lock
outsb
pop
repz
sub
cmp
jb
cmc
inc
pop
xchg
inc
push
xor
and
sbb
and
lret
pop
xchg
mov
jle
out
fldt
xor
jle
xchg
inc
add
add
adc
jmp
mov
das
iret
and
xchg
pop
or
subl
flds
mov
lret
sub
enter
sub
cltd
fnstenv
out
ja
lods
pop
xlat
rolb
mov
and
push
lods
xchg
and
out
push
push
sbb
inc
pushf
xchg
in
ret
cli
ffree
mov
mov
lret
adc
sbb
dec
rcrb
sub
push
adc
mov
insl
xchg
sarb
scas
fidivrl
dec
jno
iret
lock
enter
sbb
flds
imul
ret
loopne
cmpsb
sbb
lahf
and
das
or
mov
sub
add
in
ss
das
and
mov
test
mov
and
call
or
sub
roll
arpl
xor
push
and
add
dec
out
add
and
or
add
pop
add
xor
jp
popl
call
lock
fadd
in
push
pop
xor
xchg
orl
gs
mov
repz
push
loope
pop
sub
xor
popa
push
mov
add
es
or
aad
adc
pop
jg
pop
fcmovb
fildl
bound
xchg
leave
inc
push
int
add
lods
mov
filds
psrlw
jle
and
sub
aaa
sbb
add
mov
mov
aaa
test
je
daa
and
inc
loope
sub
shl
js
mov
rorb
stos
xor
dec
insb
mov
dec
subb
mov
and
das
ret
cmpsl
cmpsb
dec
or
add
dec
js
sbb
scas
stos
or
mov
add
add
in
adc
mov
push
mov
test
push
fistpll
repz
or
add
add
fstl
push
pop
lods
dec
ret
cmp
mov
sbb
inc
loopne
arpl
imul
andb
cltd
es
sbb
fdivrs
insb
mov
insl
test
mov
dec
or
xchg
lcall
xor
addl
push
push
lds
or
inc
imul
lods
out
int3
jb
js
xchg
inc
add
add
inc
fcomps
lcall
mov
or
dec
movsl
adc
jge
dec
iret
dec
push
inc
dec
xor
mov
cmpb
rcrl
fsubrs
lock
cmpb
or
add
mov
cmp
adc
rorb
sahf
or
rol
adc
fs
in
push
mov
pop
xchg
sbb
xchg
jp
dec
pop
popa
mov
leave
popf
aaa
loope
mov
movsl
inc
sub
xchg
adc
xor
stos
jo
and
mov
mov
mov
icebp
cltd
ret
lret
sub
lds
jae
adc
cmp
pop
mov
inc
push
mov
dec
jge
js
test
loope
pop
dec
lods
add
arpl
xor
and
cmpsb
or
mov
push
jle
clc
in
dec
push
xor
xlat
cmp
jecxz
movsb
lock
xor
in
lea
insl
aaa
movsb
out
out
mov
fsubs
cmp
jo
stc
and
and
dec
inc
push
sub
aaa
add
add
das
inc
mov
in
mov
mov
aas
into
lret
das
mov
test
cmp
cmp
ja
mov
dec
mov
fwait
pop
jo
rolb
cmp
dec
outsb
lds
lock
inc
nop
jl
inc
pop
sub
cmp
sbbb
mov
clc
aaa
jmp
dec
popa
ljmp
xchg
and
mov
xor
fisttpl
stc
jmp
push
je
and
add
lea
mov
or
push
mov
push
fidivl
inc
aaa
cmp
int3
jp
add
stos
inc
movsl
xchg
cmp
sub
stc
sbbb
popa
arpl
loope
arpl
sbb
in
push
test
fucomi
push
or
movb
enter
das
xlat
scas
cmpsb
dec
sub
cmp
xchg
sub
xchg
add
mov
or
and
mov
insl
jne
lods
or
ja
dec
or
mov
pop
mov
mov
call
aaa
les
sub
enter
push
push
inc
mov
mov
lods
and
xchg
movsl
movsl
dec
in
out
mov
lcall
or
or
ja
nop
push
and
es
pop
xor
ror
adc
and
mov
fwait
xchg
jmp
flds
push
gs
cmpsl
ja
cmpsb
loopne
xor
mov
popf
nop
sbb
sub
das
adc
add
in
mov
mov
add
sub
cmp
xor
jo
ret
mov
int
inc
ljmp
leave
les
jle
mov
stos
and
jo
adc
out
mov
sbb
mov
or
add
add
iret
adc
adc
fnstenv
test
test
push
cli
mov
xor
push
cmp
pusha
mov
or
mov
or
sbb
dec
pop
jg
orb
xchg
dec
push
pop
mov
mov
xchg
lds
fwait
dec
out
mov
nop
test
into
mov
push
push
sub
sub
in
mov
ficoms
fs
mov
or
dec
imul
es
cs
and
cltd
or
push
add
sbb
lods
mov
cmp
or
mov
and
inc
fildl
add
dec
add
jmp
lods
add
lahf
clc
push
inc
aam
lock
addr16
and
mov
enter
mov
and
cmp
test
pop
iret
mov
jmp
js
fisubs
adc
add
dec
inc
push
pop
sub
movsl
jo
jp
or
dec
fwait
pop
scas
cmp
xor
xor
loope
inc
cmp
iret
dec
popa
cmp
rorb
or
push
sub
adc
loop
leave
jb
test
lcall
mov
sbb
dec
les
sub
xchg
loope
imul
xor
mov
orb
cmp
ljmp
dec
adc
xorl
test
mov
jno
cmp
shlb
mov
movsl
xchg
dec
mov
outsl
mov
dec
rcll
bound
and
cmpsl
inc
add
mov
daa
enter
insl
popa
and
sbb
push
push
ror
mov
outsl
adc
movsl
and
add
enter
hlt
insb
sub
jno
movsl
das
sahf
test
mov
jmp
jo
pushf
pop
repnz
cmp
dec
cmpsb
add
mov
lods
outsb
push
out
jbe
pop
je
add
add
into
push
ja
sub
inc
in
ja
cs
or
cs
es
xchg
outsb
arpl
aas
imul
pop
shrb
sarb
rcrb
add
dec
and
scas
aad
shr
pop
das
sub
faddl
jg
sub
je
adc
ficomps
adc
ret
sar
jne
or
movsl
sub
xor
cmpsl
xchg
ret
andb
or
inc
shll
dec
cmp
dec
cmp
std
sub
push
sub
ret
or
and
ss
lret
cmpsb
add
and
scas
xchg
mov
jecxz
and
push
iret
int
daa
jo
xchg
adc
pusha
scas
lahf
movsb
popl
xlat
pop
lret
cmp
sahf
mov
add
dec
sub
push
enter
add
mov
imul
mov
mov
mov
pop
push
pop
dec
cmc
pop
popa
test
into
mov
mov
ss
adc
in
pop
mov
cld
mov
inc
adc
shrb
test
call
adc
orl
imul
or
clc
mov
lods
iret
cmp
icebp
push
or
imul
les
inc
inc
lock
xchg
test
adc
lods
lock
or
out
ret
jle
cwtl
clc
push
cmp
xor
imul
add
sbb
dec
pop
or
or
and
frstor
and
and
lret
and
outsb
push
test
xchg
clc
pop
decl
cmpsl
jg
sub
mov
adc
test
and
mov
insl
ljmp
and
add
lahf
ds
scas
ret
insb
fwait
daa
xchg
xchg
loopne
sbb
mov
dec
arpl
mov
cld
add
sub
imul
jmp
xchg
pusha
and
push
ja
adcb
or
mov
mov
push
and
sahf
sbb
pop
or
adc
pop
or
pop
sub
and
mov
sahf
lret
or
clc
sbb
rcr
bound
cltd
outsl
or
push
cltd
add
inc
fs
pushf
push
or
or
and
call
sbb
lret
cmpsl
or
in
pushf
mov
xchg
rcrl
out
je
je
mov
add
push
inc
jb
popa
xor
pop
and
rolb
or
add
test
rorb
add
push
mov
stc
movsl
add
sahf
aam
lahf
add
lods
jno
imull
js
and
and
add
mov
ret
loope
mov
sub
sub
cmp
and
notl
popa
lock
imul
pusha
mov
push
jae
adc
sub
insl
mov
sub
scas
fstpt
cmp
loope
insl
cmp
add
sub
or
out
push
or
test
jno
ja
add
pop
sub
mov
popa
push
in
fisubrs
xor
call
push
nop
xchg
std
outsb
mov
cltd
aam
test
loopne
hlt
or
push
lock
push
and
jecxz
in
add
add
adc
inc
imulb
std
xor
std
add
fdivrs
xor
stc
fld
add
lods
jbe
cmpb
sub
sbb
jmp
add
fldenv
popf
xor
aad
daa
pusha
cmp
jp
pop
test
leave
sbb
sbb
xchg
insb
push
mov
or
mov
outsb
jb
or
xor
push
pop
mov
into
xchg
jo
scas
daa
loop
nop
mov
pop
mov
jp
push
pop
adc
xor
or
imul
nop
or
fwait
insl
xlat
xor
mov
add
cmpsl
mov
mov
adc
dec
shll
add
add
and
add
ss
dec
mov
fwait
push
mov
dec
int
das
insb
rclb
in
and
or
faddl
arpl
add
or
push
int
testl
test
aad
ljmp
dec
push
fistpll
or
ret
ffree
add
mov
imul
cmpsl
stos
test
mov
ja
rcll
sub
sub
nop
adc
fstps
jbe,pt
pop
icebp
add
and
cmp
je
xchg
jno
add
int
or
scas
and
arpl
lods
xlat
adc
scas
insl
out
mov
fdivrl
stos
jns
sbb
push
sbb
xchg
aaa
test
je
mov
add
jae
or
and
shrb
pop
add
loope
lock
push
iret
xchg
cmp
xor
outsl
loopne
into
sbb
pop
enter
clc
add
pop
jbe
jp
add
std
stc
adcb
testl
andb
and
jo
fcmovnu
rcrb
jno
add
pusha
int3
test
xorb
loop
ljmp
mov
sub
push
mov
push
lcall
push
addl
xchg
inc
xchg
or
mov
rcll
loope
xlat
jne
adc
icebp
add
cs
and
sahf
sbb
sbb
add
pop
inc
push
or
add
ljmp
and
adc
mov
add
add
push
popa
inc
sarb
adc
cmp
inc
sub
sbbb
imul
and
pop
int
les
jo
inc
sub
adc
pop
xchg
xor
push
xor
ror
inc
or
or
pop
xchg
mov
sbb
sti
push
dec
rcrb
mov
jno
push
sub
cmp
and
mov
or
jl
push
jb
add
inc
add
fwait
sub
inc
addb
dec
pop
icebp
mov
adcb
sti
shlb
mov
cld
or
cli
cmp
push
add
mov
push
inc
subl
je
cs
mov
addr16
pop
jle
mov
std
ds
pop
stc
mov
mov
sub
idivb
or
jns
repnz
sub
push
add
sbb
xchg
or
in
rcl
mov
imul
inc
and
and
add
outsl
frstor
mov
orb
xchg
ss
adc
mov
pop
in
add
xchg
test
xor
mov
jbe
loope
sbb
pop
push
mov
fimull
lret
shlw
add
add
sbb
dec
sti
sub
xchg
adc
push
xchg
cmp
je
arpl
adc
scas
push
add
ret
sbb
push
inc
jg
pop
ret
iret
fdivrp
sbb
lret
push
or
sbb
addr16
mov
mov
int3
ror
scas
pop
scas
sub
cs
cltd
add
mov
scas
mov
iret
jns
xor
adc
fcomps
lods
pop
mov
cmp
pop
gs
xor
adc
cmp
sub
dec
adc
mov
or
cltd
and
sub
inc
or
out
outsb
or
cmp
out
and
adc
push
cmp
cmp
or
test
mov
jno
inc
or
cmp
push
jle
cmc
xor
adc
rcrb
inc
orb
cmp
cmp
mov
jne
mov
aam
ret
lock
cmp
loop
mov
ret
loopne
scas
and
and
sbb
sbb
pop
bound
pop
into
rorb
popf
loope
and
lods
add
cmp
cmp
scas
lahf
les
aad
add
addb
push
fcmovne
sub
dec
ja
or
andb
push
inc
xor
outsl
add
mov
xlat
or
push
fimuls
dec
or
mov
adc
pop
xor
repz
mov
pop
pop
cmpsb
rol
inc
inc
cmp
iret
add
mov
mov
mov
mov
sub
out
fst
push
mov
pop
xor
or
xor
add
jno
sbb
push
frstor
jb
daa
addb
push
out
add
jecxz
add
add
push
adc
sub
sub
mov
je
shrb
ret
mov
xor
addl
pushf
rolb
or
and
add
imull
lret
leave
add
lods
mov
repz
add
push
add
cmc
inc
add
cmpsb
pushf
dec
inc
lret
dec
cmp
push
ficompl
daa
mov
add
test
push
test
adc
add
jns
add
xchg
and
addr16
inc
push
or
cltd
dec
pop
pop
add
or
and
jnp
imul
arpl
popa
cs
cmpsl
xor
mov
or
cmp
adc
iret
fisubrs
cmpb
inc
bound
jmp
dec
cmp
sbb
int3
push
mov
cmp
clc
jp
pop
filds
jo
xchg
add
ror
ret
push
jle
mov
push
sahf
pop
mov
bnd
mov
cmc
mov
imul
mov
pop
shll
jmp
ja
sbb
imul
xor
lahf
mov
scas
int3
push
dec
and
rorl
inc
ret
cwtl
push
or
push
outsl
aaa
mov
insb
je
in
ret
fisubs
xor
and
cmp
and
mov
add
cmp
push
and
push
and
sub
mov
arpl
xor
dec
inc
popa
add
add
inc
inc
dec
jg
cmp
ja
stos
dec
or
into
daa
push
adc
mov
xor
and
dec
stos
inc
xchg
mov
movsl
shrl
es
mov
jno
and
and
xor
push
inc
xchg
movsb
and
movsb
les
inc
mov
inc
ret
inc
sbb
ficoms
adc
push
mov
aas
add
popfw
dec
jp
stos
rcrb
and
push
xor
fsubs
jp
adcb
movq
call
sub
pop
mov
or
inc
adc
xchg
lcall
inc
cs
xchg
and
mov
mov
sbb
add
cmp
testb
lods
sub
inc
rolb
adc
imul
cs
inc
and
xor
push
add
xor
adc
loope
mov
xchg
data16
daa
add
mov
movsl
xor
dec
dec
adc
push
jbe
inc
jae
lock
sti
lahf
jge
and
insb
xor
mov
les
add
pop
mov
mov
popa
icebp
jl
jl
call
xor
fldenv
in
add
movsl
and
add
adc
push
enter
mov
xlat
in
add
lock
push
lds
sub
sub
mov
xchg
push
dec
dec
add
dec
adc
test
arpl
sbb
sbb
arpl
push
adc
ret
dec
dec
jle
mov
xor
scas
sbb
pop
mov
addb
pop
adc
add
pop
pop
pop
aam
loope
or
xchg
lods
pop
jg
shll
inc
cmp
cmpb
popa
pop
and
mov
jb
pop
and
add
mov
mov
push
inc
in
mov
or
fiaddl
push
mov
adc
popa
gs
popa
sub
fmuls
inc
xorl
dec
out
mov
lret
push
add
xchg
jae
jp
sub
in
enter
das
add
cs
bound
jno
sbb
fstpl
pop
cmp
shr
inc
cmpb
add
lret
jae
lret
ja
push
inc
ror
push
ja
mov
lahf
and
sti
aam
mov
push
cld
sbb
sarb
in
mov
mov
lods
lret
push
xchg
mov
fs
add
ja
adc
nop
sub
pop
mov
shll
add
adc
adc
adc
inc
sbb
nop
js
sub
sub
mov
add
pop
or
pop
ja
jae
xor
pop
sahf
test
sub
out
and
and
mov
fcomps
cmp
mov
popa
mov
mov
push
lret
lea
or
push
sbb
mov
test
push
lods
and
add
movb
add
jmp
push
mov
shll
dec
jl
inc
jp
imul
push
xchg
mov
scas
pop
lods
sbb
mov
addl
adc
test
shlb
inc
pop
ficomps
push
mov
mov
xchg
das
daa
cmp
sub
pop
dec
pusha
aam
ss
ret
add
add
xlat
push
jb
or
xor
adc
ret
dec
mov
xor
aaa
xor
mov
popa
pusha
sub
cmpsl
iret
push
testb
cmp
sarl
mov
or
lods
adc
lods
rclb
push
aas
mov
or
and
mov
xchg
jo
iret
xchg
sub
sub
mov
jbe
dec
imul
imul
test
mov
xchg
add
jne
mov
leave
mov
inc
rcll
stos
mov
jne
or
test
xchg
and
and
dec
outsb
in
lods
adc
jo
dec
sub
cs
test
dec
pop
sub
mov
mov
and
int3
icebp
or
call
aas
int
sbb
cmpsl
push
insb
popf
into
inc
cwtl
test
icebp
push
mov
ret
add
add
popf
or
popf
icebp
sar
jl
ljmp
push
cmpsb
lock
adc
loope
mov
aam
sti
jno
inc
or
in
or
stc
pop
sbb
jno
xchg
or
cs
and
pop
add
xchg
adc
jl
mov
xchg
pop
lea
or
test
xchg
jno
popa
add
sub
or
bound
mov
sub
bound
push
pop
out
xor
jle
push
cld
mov
push
scas
inc
sbb
jno
fstpl
loope
dec
or
mov
sbb
ja
inc
add
pusha
adc
mulb
mov
std
lea
dec
jl
or
daa
mov
sub
pop
xchg
pushf
es
add
push
mov
lock
adc
shl
push
sbb
mov
push
sub
push
or
add
pop
and
add
ss
mov
sub
jg
data16
jbe
sbb
aaa
imul
jmp
cli
loopne
add
psrld
pop
hlt
mov
mov
pusha
sub
or
or
pop
sub
add
mov
stos
fnstsw
stos
add
orb
ds
pop
cmp
cmp
sbbb
adc
mov
inc
cmp
adc
jecxz
push
mov
sbb
sti
sbb
iret
int
inc
and
loopne
inc
pop
xor
jnp
cmp
iret
pusha
or
enter
pop
mov
mov
inc
xor
or
mov
lds
popa
sub
dec
xlat
inc
cs
push
popa
insl
cmp
dec
icebp
push
js
ss
ret
mov
adc
and
add
xchg
in
jp
out
pop
xor
test
fildl
adc
sarl
scas
lods
pop
cmpsl
xor
and
scas
movsb
test
shlb
in
sbbl
dec
inc
dec
jmp
push
xor
or
xchg
mov
sub
cs
fwait
out
popa
test
pop
adc
in
add
jecxz
adc
fldenv
dec
add
cmp
movsl
outsl
xchg
mov
inc
pusha
or
fstpl
or
and
test
adc
add
mov
clc
cs
adc
lods
cmp
iret
xchg
dec
sub
mov
jae
ja
dec
add
jg
shll
xchg
data16
jmp
gs
sub
loope
push
test
push
pop
adc
cmp
xor
sub
rolb
jno
lock
xor
scas
loope
out
dec
popa
or
aad
int3
push
mov
and
jns
push
clc
add
adc
scas
lds
sub
or
mov
lods
in
popf
sbb
inc
mov
lods
pushf
rcrl
push
les
inc
pop
cmp
clc
jb
imul
lea
mov
jnp
ret
mov
test
or
fsubrs
dec
push
fnsave
adc
je
inc
addr16
hlt
cld
ficoms
sub
ret
gs
sbb
dec
inc
loope
movsb
test
cmp
or
sub
mov
imul
xor
xchg
fcmovne
mov
sbb
imul
mov
jmp
mov
into
nop
or
ljmp
pop
sbb
jmp
pusha
hlt
xor
icebp
sbbl
insl
inc
sub
daa
bound
repz
outsl
rcll
enter
inc
stos
lds
test
dec
sub
and
sbb
inc
clc
lret
popf
movsb
fmull
cwtl
cltd
inc
sub
mov
mov
jns
scas
mov
lods
mov
test
rol
add
sub
testb
inc
leave
leave
or
mov
and
add
sbb
jne
cmpsb
adc
xchg
jo
cmpsb
jbe
scas
pop
and
outsb
subl
in
andl
je
sub
sbb
cmp
fsub
push
jp
leave
adc
xchg
aam
pop
adc
add
or
and
lret
mov
enter
gs
mov
pop
cwtl
xor
ficoms
add
cmp
inc
push
xor
popl
fldl
pop
inc
pop
dec
test
add
mov
data16
mov
dec
arpl
clts
lods
mov
subl
fcomps
mov
push
stos
add
fwait
scas
sub
mov
insl
push
and
andl
dec
sbb
xor
cmp
into
das
add
mov
test
fcmovb
test
push
and
pop
sub
cmp
add
sbb
jle
les
jo
pop
and
jnp
test
or
test
add
pop
jbe
popf
bound
testl
enter
ret
roll
loop
shlb
mov
imul
adc
xlat
sub
xorb
xor
sbb
xchg
cmp
sbb
arpl
dec
popf
inc
test
add
adc
and
sub
ljmp
popl
sbb
clc
jp
pop
cmp
into
int
and
loopne
inc
out
insl
insl
jl
je
push
sbb
mov
je
addb
fisubrl
nop
fcoms
jle
pop
lds
ret
movsb
xchg
push
loop
ja
popa
dec
jp
lock
add
push
push
inc
inc
out
leave
hlt
cvttps2pi
xor
int3
mov
xchg
jo
inc
push
push
xor
jl
or
or
adc
ficompl
push
out
inc
mov
xchg
sub
cltd
sahf
dec
gs
dec
xchg
pop
loopne
add
aam
incb
sub
and
inc
stos
pop
fsubl
aam
push
and
daa
sbbb
test
nop
sub
out
or
pop
hlt
cmp
xor
ljmp
pop
or
jbe
pop
aaa
or
bound
inc
and
xor
mov
adc
pop
pop
adc
stos
movsb
stos
and
ret
fidivs
mov
sbb
pop
mov
xor
insb
push
test
andl
cmp
lock
mov
push
push
shlb
sub
xchg
mov
testl
ds
pop
xlat
lds
cmp
add
push
dec
leave
inc
popf
add
inc
xchg
cmp
shrl
sbb
mov
push
mov
adc
testl
shl
loopne
jp
jns
mov
mov
and
mov
or
pusha
sub
and
lods
jno
mov
cmp
or
fbstp
fiaddl
popa
sti
push
jp
jmp
sbb
sbb
loopne
add
dec
roll
inc
push
dec
divl
adc
lcall
inc
sub
jae
pop
add
mov
lds
add
test
test
push
dec
ret
sbb
out
pop
sbb
loope
xlat
inc
pop
in
iret
xchg
mov
xchg
xor
mov
lods
add
nop
lock
sub
cmp
adc
iret
mov
mov
roll
stos
inc
cmpsb
fnsave
ja
daa
mov
jnp
fs
jmp
add
sbb
push
aad
pushf
imul
pop
idivb
aaa
dec
xchg
push
daa
add
sub
movsb
pop
addr16
dec
rol
int
mov
and
xchg
das
mov
mov
mov
and
push
and
xchg
mov
mov
lods
aaa
ja
pop
xor
bound
daa
adc
push
rol
mov
sbb
pop
push
push
shlb
and
aam
fwait
pusha
daa
ljmp
xchg
inc
pop
add
pop
out
test
sbb
orb
test
fwait
sub
dec
or
adc
sbb
mov
inc
test
mov
inc
in
push
imul
jne
sbb
iret
test
in
xchg
lods
mov
jmp
rorl
inc
dec
imul
imul
adc
test
inc
andb
jmp
and
jae
add
insl
mov
or
jno
int3
jbe
or
mov
rol
enter
sbb
push
aaa
hlt
mov
loope
pop
or
aaa
in
nop
xorb
fwait
add
jmp
das
lahf
pop
pusha
insb
and
xor
pop
xor
lock
inc
and
xchg
shrl
pop
outsl
sbb
fcmovnbe
add
mov
arpl
scas
and
jp
xor
pop
adc
xchg
jne
into
jno
dec
shlb
sbb
add
addl
inc
leave
lods
mov
mov
xchg
inc
pop
pusha
xor
sbb
mov
sti
sbbb
push
sub
jnp
dec
adc
jecxz
cmpl
test
add
adc
jno
mov
push
cmpl
and
add
repnz
jb
adc
mov
or
adc
lahf
movb
lea
adc
and
pop
daa
mov
sbb
cmpl
sub
mov
mov
xorl
adc
mov
jb
adc
push
add
add
inc
or
pop
xchg
and
or
addl
popa
or
fs
or
rorb
insl
sahf
popa
cmp
cmp
jmp
mov
adc
xchg
fsubrl
out
aad
pop
sub
jno
push
lods
push
inc
ja
mov
sub
mov
adc
inc
rclb
mov
loopne
jo
sbb
lahf
mov
clc
xchg
and
adc
andl
mov
sub
pusha
fnstcw
or
fs
cmp
popa
orb
or
sbb
jg
mov
push
push
pop
jmp
leave
dec
adc
js
jns
inc
or
sbb
inc
add
add
aam
add
popf
push
or
pop
adc
sub
mov
test
popa
ficoms
jl
push
scas
fwait
scas
int
mov
adc
movsl
add
jo
xor
mov
and
sub
and
sub
or
testl
ljmp
jnp
xchg
mov
jmp
sub
mov
loope
add
jle
xchg
push
loop
shlb
add
add
inc
cmc
xchg
into
cmp
sbb
add
bound
sbbb
sbb
nop
bound
cs
pop
sbb
js
popa
gs
sub
pop
pop
dec
pop
test
enter
cli
dec
std
movsb
xor
jne
jmp
and
mov
ret
fsubs
add
sarb
xchg
cmp
pop
ja
inc
adc
es
adc
stos
test
lods
push
add
stc
std
cmpsl
testl
add
movl
pop
jne
cmp
push
std
iret
add
xchg
pop
xor
mov
add
cltd
add
ret
mov
ja
sbb
mov
ret
lock
pop
push
sbb
mov
sbb
daa
mov
ret
pop
or
mov
push
loope
test
push
xchg
mov
inc
jmp
mov
pop
inc
shlb
daa
ret
jns
fs
adc
cld
in
push
or
dec
inc
icebp
push
inc
leave
or
loope
leave
jbe
outsb
adc
jne
rorl
cmp
mov
sbb
mov
out
xchg
inc
xchg
mov
mov
loope
jle
testl
push
fisubrs
sbb
push
and
add
popf
xchg
push
and
jmp
pop
sub
xchg
insl
loop
lds
xchg
xchg
dec
das
add
sub
add
in
and
sub
and
sub
sbb
in
xchg
mov
pop
addr16
clc
loope
add
mov
outsl
push
iret
cmp
add
mov
movsb
xor
hlt
lds
sar
add
adc
dec
sbb
push
lods
add
sub
stos
jnp
add
gs
or
mov
outsb
adc
sarl
or
sbb
dec
adc
js
push
loopne
lock
push
jb
add
mov
mov
mov
loope
divb
jge
sahf
jo
and
adc
cmp
ret
imul
lahf
add
gs
or
fcoml
stos
fwait
pop
mov
mov
mov
xchg
add
add
push
jb
out
shl
add
int
sbb
mov
test
ds
push
add
mov
add
fistpl
aaa
data16
pop
and
cmp
fildll
cmp
or
icebp
test
xchg
mov
inc
ljmp
push
popa
adc
or
add
xlat
xchg
int3
add
mov
sub
add
js
pop
int3
xchg
add
xlat
aam
loopne
and
scas
mov
pop
or
mov
dec
dec
cmp
and
sub
jp
jmp
xor
xchg
or
das
add
scas
enter
add
lods
add
mov
cmp
inc
loopne
pusha
shlb
xor
jp
shl
sub
mov
jne
xor
pop
add
test
dec
clc
mov
add
inc
pop
sarb
dec
data16
xchg
jp
fistpl
aaa
dec
add
leave
xor
push
imul
jl
or
ss
mov
or
add
push
rol
xchg
out
pushf
push
adcl
adc
test
dec
xchg
xchg
or
and
shll
adc
mov
mov
cld
fistpll
adc
sbb
add
mov
pusha
jno
dec
lcall
in
mov
pop
pushf
dec
adc
or
sbb
stc
sub
adc
mov
cmpsl
pop
inc
xor
adc
jne
and
fmuls
sbb
lret
pusha
test
mov
push
inc
xor
add
arpl
out
stc
out
push
or
xor
cld
and
inc
pop
push
dec
adc
cltd
jecxz
sahf
mov
adc
fsubr
and
ljmp
out
add
ret
and
push
ss
adc
clc
jp
iret
imul
aad
xlat
mov
adc
out
incl
or
adc
fildl
ja
mov
pop
mov
movsl
jne
jl
push
lea
xor
loope
and
stos
mul
sbb
fiadds
dec
mov
repnz
test
dec
dec
sbb
loop
mov
mov
add
xchg
or
pop
es
sahf
pop
mov
dec
add
jmp
icebp
inc
mov
jno
outsb
adc
xor
or
mov
cmp
pop
sbb
fidivrl
add
testb
dec
dec
iret
in
roll
push
ljmp
ds
pop
aad
or
sbb
add
sub
adc
ds
or
xchg
add
xchg
shl
enter
add
adc
fmuls
mov
js
outsl
xor
ss
add
pusha
push
dec
cs
scas
or
test
int3
xchg
inc
add
cmpsb
andl
daa
fsubrs
rcrb
sbb
push
mov
xor
or
fnstsw
scas
mov
xlat
test
arpl
and
adc
aam
mov
cmpsl
js
sub
inc
push
sub
lea
and
sbb
xchg
das
pop
test
loopne
pop
insl
cmpxchg
pusha
xor
dec
pop
add
jg
adc
sub
adcl
pop
test
and
jecxz
addr16
je
jno
fstp
or
mov
in
xchg
mov
movsl
aam
mov
sahf
jno
dec
lods
add
enter
xor
adc
das
xor
jne
adc
daa
out
mulb
mov
lret
sub
and
pop
bndldx
dec
cmp
out
out
sti
push
adc
sbb
lds
aas
jns
push
add
in
lcall
and
inc
std
push
es
loopne
xchg
jo
mov
or
push
mov
lret
lods
xor
out
mov
jl
xlat
shrb
xchg
xor
imul
into
insl
dec
loop
sub
mov
dec
pop
loop
inc
or
push
sbb
les
jl
int
loopne
mov
add
out
sti
inc
add
push
jb
cli
sub
add
push
jae
and
mov
pusha
cmp
mov
xor
adc
push
push
fiadds
dec
jecxz
les
bound
dec
imul
loopne
adc
fldt
imul
mov
mov
jo
lock
adc
mov
sbb
scas
shl
or
in
loopne
imul
add
mov
push
jl
pop
in
inc
insb
dec
es
sbb
or
fcompl
sbb
sub
faddl
mov
mov
add
jo
cmc
ds
popf
dec
mov
cmpsl
or
insl
loopne
pop
sbb
sub
les
sub
sar
imul
and
add
cmpsb
sbb
and
sahf
push
jae
inc
xchg
out
dec
sub
into
fbstp
cmpsb
sbb
cmpsb
add
add
inc
movsb
adc
push
les
fwait
push
sbb
lods
jns
pop
add
jb
popa
or
mov
bound
addb
cmp
sahf
gs
addb
lds
loopne
in
nop
je
out
test
adc
xchg
icebp
cmp
mov
dec
push
fists
and
inc
nop
xchg
cmp
sahf
js
adc
aaa
xchg
popf
rorb
hlt
ljmp
add
cmpsl
dec
data16
popf
add
and
push
jmp
xlat
sarl
nop
mov
xchg
sbb
push
lock
lock
movsb
cmp
pop
dec
rorb
add
mov
and
and
rorl
movsb
icebp
mov
jge
add
mov
push
pop
cmp
lods
stos
push
mov
rclb
leave
js
or
adc
add
push
push
or
push
inc
fadds
jmp
sub
adc
push
sbb
in
adc
pusha
jae
push
ret
lods
pop
pusha
sub
test
jb
loopne
push
lcall
imul
adc
pop
adc
xchg
pop
mov
es
add
or
lods
add
and
jbe
aaa
ret
pop
fwait
add
jecxz
mov
add
xchg
pop
jecxz
push
xchg
jl
aam
mov
xchg
and
dec
xchg
xor
sbbb
jbe
shrb
subb
addb
pop
and
fisttpll
or
stos
addb
pop
cwtl
loopne
insl
shll
push
or
dec
mov
lea
xchg
pop
pop
popl
setae
xor
inc
push
sub
cld
ret
mov
or
test
mov
inc
mov
adc
sub
and
mov
icebp
adc
xor
sub
fwait
mov
and
mov
xchg
hlt
or
or
ds
push
sbb
sbb
scas
movl
mov
sti
sub
mov
and
das
and
jge
and
iret
pushf
xchg
clc
cmp
movsl
fidivrs
cwtl
mov
and
xor
mov
arpl
pusha
enter
push
fs
aaa
mov
pop
push
je
push
les
inc
jnp
stos
and
ret
mov
sub
lahf
mov
mov
incl
fsubl
dec
xchg
lock
jge
cmpsl
add
inc
inc
inc
mov
lret
xchg
insl
dec
xchg
aam
add
stos
popf
push
loope
push
lods
mov
outsl
insb
enter
sti
out
add
sbb
sbb
cltd
je
xor
lods
out
and
inc
push
add
sub
dec
mov
sub
icebp
lock
in
lods
pop
aas
push
sbb
bnd
outsb
sub
mov
cmpsl
jmp
pop
mov
ss
clc
je
popf
sahf
sub
inc
dec
mov
mov
pop
icebp
push
xor
mov
jmp
pop
push
sub
fadds
mov
fwait
inc
or
subb
test
loope
aad
inc
pushl
and
fistpl
int3
mov
inc
cmp
push
lock
xchg
mov
adc
es
sub
pop
imul
mov
sub
daa
xlat
pop
mov
popa
xor
jne
lods
movsb
adc
ficompl
jmp
cmp
mov
or
bound
pop
int3
xchg
sub
jnp
and
xchg
test
test
mov
dec
stos
imul
push
fisubrl
sbb
addr16
ss
pushf
pop
add
xor
dec
fmull
outsl
add
movups
mov
dec
inc
mov
std
bound
xor
or
xor
dec
out
test
cwtl
bound
iret
push
mov
dec
imul
shlb
jmp
and
push
push
mov
cmp
scas
test
mov
push
xchg
jbe
fistpl
or
loope
push
cmp
mov
sti
mov
faddl
mov
cltd
ja
enter
or
push
mov
jb
cmp
lock
les
adc
pop
mov
rolb
push
push
clc
or
in
inc
cmp
jb
pop
test
push
popf
jecxz
mov
adc
scas
xor
pop
xchg
fidivrs
cli
mov
push
and
nop
jg
lock
fstps
lods
xchg
popf
je
mov
jle
jo
je
in
iret
sbb
and
dec
pop
dec
lods
inc
dec
sub
arpl
mov
sub
cmpb
clc
lahf
dec
push
jge
push
jae
xlat
inc
pop
add
and
lds
dec
lock
cmp
cwtl
jo
sub
sbb
adc
or
ljmp
pop
fmuls
cmpsl
mov
xor
dec
test
repz
dec
sbb
rolb
and
sahf
push
mov
pop
mov
adc
pop
inc
stos
jecxz
and
xlat
cmpsb
sub
push
sub
sub
and
and
out
or
jno
test
mov
rorb
or
mov
fcmovb
xchg
cs
mov
sarl
aas
jmp
cs
and
jmp
fs
arpl
movsb
xor
sub
int3
ret
out
sbb
ror
je
mov
test
rorb
and
adc
cmp
fwait
jno
addl
xor
orb
xor
outsb
inc
test
xchg
adcl
inc
shrl
test
add
scas
dec
sub
pop
popa
push
fnstenv
jnp
xor
popf
sbb
dec
adc
xor
inc
or
mov
lods
cwtl
add
sahf
mov
xor
out
dec
les
xor
add
add
stos
scas
cmp
inc
fs
rorl
ja
rolb
push
xchg
mov
out
lahf
testb
aad
hlt
lahf
ret
dec
and
pop
int
push
pop
jne
outsl
xor
popa
dec
pop
xlat
jae
push
jmp
mov
fcoml
inc
mov
inc
pop
js
cmpb
das
and
add
xor
shll
xor
inc
or
dec
cmp
cwtl
lock
cltd
cmc
mov
jecxz
inc
add
sahf
sbbb
loope
cmc
sbb
aam
sub
xlat
and
add
lret
adc
fs
mov
sti
or
cmpb
in
push
cmp
jle
xchg
das
dec
dec
dec
inc
push
pop
inc
loope
cmpsl
sub
xchg
jecxz
mov
add
test
inc
repz
scas
ret
fnstsw
sahf
testb
jns
add
pusha
adc
pop
or
add
lds
loop
clc
sub
popa
jmp
call
sbb
sub
push
dec
adcl
outsb
sub
dec
pop
xchg
cwtl
adc
cmp
and
dec
add
push
mov
test
inc
mov
or
bound
decl
cmpsb
les
daa
sub
adc
pop
adc
clc
pop
pop
inc
cwtl
repz
rclb
cs
jl
add
sub
inc
xchg
cs
idivl
mov
sub
sub
pop
or
add
and
mov
sbbb
popa
adc
or
push
push
sbbb
xchg
test
or
sub
inc
int
cmp
fldl
mov
sar
fsubl
xchg
add
fwait
out
push
mov
adc
sbb
xchg
nop
test
mov
daa
xchg
adc
or
arpl
jecxz
jo
shl
adcl
inc
test
sti
fdivs
add
sub
sub
rclb
cmpsb
jecxz
add
inc
and
xchg
add
lret
sbb
roll
jl
mov
mov
imul
inc
dec
sub
sti
or
add
stc
and
and
mov
pop
add
adc
and
ret
dec
cmp
push
xchg
dec
mov
mov
add
add
fcmovbe
pop
and
push
add
ret
mov
ja
jo
iret
mov
aam
jle
mov
add
xchg
test
xor
es
add
lods
aas
add
mov
test
jo
mov
jmp
lds
and
mov
or
dec
mov
xchg
hlt
mov
or
adc
divb
push
sub
sub
pop
dec
clc
jg
pop
dec
adc
leave
xor
sbbb
lret
or
cmp
stos
or
sbb
push
xor
mov
cmp
popa
lock
cmpl
sbb
sub
push
pop
dec
mov
push
das
push
or
ljmp
mov
adc
push
scas
inc
or
daa
sbb
movsb
outsb
std
test
and
aas
cwtl
mov
xor
insb
sub
addr16
test
add
mov
xchg
cmp
sbbb
aam
nop
sbb
pop
push
repz
xchg
add
add
pop
adc
cltd
mov
mov
adc
lds
lods
mov
mov
ret
cld
ss
adc
add
and
add
ret
rolb
std
jmp
hlt
shll
mov
in
sbb
dec
mov
mov
mov
ret
nop
dec
or
xchg
imulb
mov
and
in
shl
xchg
iret
ss
mov
loopne
mov
nop
mov
les
inc
movsl
add
or
arpl
jp
dec
jno
dec
xchg
xchg
or
push
sub
jb
stos
test
jg
mov
or
mov
pop
push
ss
push
imul
mov
push
sub
mov
shll
or
sti
lods
add
lcall
ljmp
add
mov
out
push
adc
mov
push
fld
xchg
dec
sub
or
js
add
leave
shll
push
cmp
enter
maxps
jne
hlt
sbb
mov
aam
xchg
xchg
addl
movsl
sbb
or
adc
mov
inc
and
movsl
sub
pop
pop
cltd
js
subb
pop
jmp
shl
repz
rolb
jp
mov
shrb
mov
jns
and
adc
push
dec
jns
add
inc
cmp
shll
mov
add
sub
cmp
mov
ret
inc
cwtl
or
mov
dec
rolb
mov
fcoms
jne
sub
roll
stc
imul
stos
push
ljmp
sub
scas
inc
sbbb
push
ja
pop
aad
mov
sub
pop
movsl
ret
fsubs
add
mov
rclb
outsl
and
xor
and
inc
fldenv
mull
imul
sbb
jl
fisubs
cmc
shlb
jecxz
dec
pop
repnz
hlt
xlat
std
mov
lock
or
cmp
data16
adc
push
inc
and
and
sbb
cmc
or
lods
jb
jno
sbb
xchg
push
xchg
mull
add
xchg
xchg
sahf
je
xor
mov
lock
jl
jo
jne
xor
add
xorl
fiaddl
in
mov
and
xchg
jmp
adc
push
dec
push
xlat
iret
inc
cmpl
movsl
roll
ja
iret
cmp
movsl
push
mov
test
js
jne
mov
shrl
mov
cmpb
xchg
mov
add
test
loop
ljmp
cmp
xchg
xchg
test
mov
dec
inc
mov
push
mov
add
inc
f2xm1
dec
push
adc
fidivs
jl
jo
jns
jno
xchg
dec
les
cmpl
adc
sbb
data16
adc
xor
out
dec
movups
lock
or
scas
xchg
pop
add
cmp
pop
xor
lock
ljmp
lea
pushf
rorl
ret
adc
ja
dec
ljmp
inc
add
inc
xor
imul
add
and
adc
inc
and
xchg
inc
jp
and
icebp
xchg
dec
popf
adc
pop
xchg
push
mov
pop
pop
lahf
adc
adc
push
call
js
mov
lds
add
iret
xchg
or
sti
sub
lods
jne,pn
jo
add
sub
push
sub
sbb
clc
adc
cs
or
cmpsb
mov
mov
mov
pop
add
fstp
movsl
xchg
punpckhbw
mov
jb
mov
fdivl
cmp
lods
xor
add
xor
aaa
push
adc
xchg
bound
cmp
dec
cmp
insb
es
rorl
add
adcb
fisttpll
in
or
mov
aaa
pop
fs
movb
inc
imul
mov
and
insl
and
cmp
jne
out
adc
cmpsb
jae
arpl
sbb
jae
std
pop
out
outsl
inc
mov
pop
int3
add
das
ds
push
pop
push
pop
pop
das
jo
dec
add
mov
and
mov
in
inc
mov
add
mov
add
cmp
push
push
cmp
xor
xchg
xor
mov
xor
test
sbb
js
mov
daa
dec
out
fadd
jbe
mov
dec
outsb
lock
xchg
xchg
jge
push
leave
inc
lcall
insb
inc
sbb
jmp
inc
mov
mov
in
and
sub
pop
arpl
or
fdivrp
test
iret
test
mov
adc
mov
dec
out
dec
mov
shrb
dec
addr16
xchg
es
movsl
test
sub
jmp
add
out
loope
shrl
shrb
shl
inc
xchg
adc
cmp
cmp
aaa
mov
mov
scas
enter
test
ja
sub
iret
pop
js
enter
jne
add
ds
cmpsb
or
push
xchg
sub
test
mov
lret
fnstsw
adc
sub
loopne
pop
out
fadds
arpl
sub
add
jns
inc
loopne
mull
nop
jp
scas
adc
sahf
ds
subl
es
xchg
add
xlat
out
sahf
and
jnp
xchg
je
mov
dec
sub
adc
int3
xor
in
add
xor
xlat
sbb
out
lods
cmpb
jb
aas
fs
or
mov
or
push
fiadds
outsl
xchg
test
loope
sbb
imul
inc
add
push
jle
xor
loop
aaa
dec
xchg
fcomps
sub
rorb
xchg
aam
jne
mov
mov
xor
pop
sbb
mov
pop
sbb
cltd
jbe
add
rcl
xchg
and
sbb
imul
mov
push
cwtl
sub
ja
sub
or
dec
cltd
int
loop
add
js
lods
and
and
std
sahf
sbb
pop
xchg
add
jle
xor
or
add
loope
ss
push
inc
imul
repnz
pop
cli
lret
pop
pop
push
fmuls
in
movsb
andb
jle
aaa
js
subl
cmp
or
mov
jge
inc
mov
enter
add
loopne
test
sub
push
shrb
pop
and
add
or
pop
jo
es
inc
and
stos
packuswb
sbb
dec
jmp
fdivs
sub
nop
lock
sbb
xchg
push
dec
sbb
sub
cmp
add
aad
add
or
das
inc
dec
jne
gs
xor
xor
mov
inc
addb
xor
test
push
and
cmp
js
fucomip
mov
mov
jp
pop
lret
in
adc
jp
dec
and
xchg
icebp
out
add
pusha
mov
pop
inc
test
sub
xor
out
outsb
and
mov
sbb
std
xor
je
jle
inc
ljmp
add
fcomip
mov
and
jns
mov
add
cmp
test
lock
stos
shl
adc
mov
inc
and
xor
dec
or
cmp
sahf
cmp
dec
inc
lods
sbb
std
sub
jne
mov
pusha
or
les
pop
pop
pop
pop
cmp
stos
out
inc
xor
mov
push
add
mov
repnz
sub
movsl
inc
sbb
dec
mov
test
jle
pop
xchg
and
add
cld
rorb
xor
add
test
lock
mov
sub
daa
jne
wrmsr
imul
jp
mov
and
int
mov
in
xlat
cmp
sarb
dec
test
add
or
sbb
aaa
push
pop
fiaddl
icebp
leave
pop
cmp
and
aad
cwtl
in
or
xor
mov
add
xchg
iret
movsl
cli
rolb
call
inc
ljmp
add
test
jno
and
movb
pop
mov
add
neg
test
xchg
and
andl
adc
xchg
sub
jmp
adc
or
sub
and
icebp
in
movsl
daa
addl
sub
mov
rcrl
xlat
lcall
popa
loope
add
mov
mov
sbb
sbb
push
and
dec
pop
lds
adc
loope
nop
aad
movsl
cmpsl
ret
push
testl
or
dec
prefetchwt1
pop
sbb
aaa
flds
xchg
sub
out
andl
lods
jmp
push
movsl
sarl
jb
rclb
mov
popf
aas
sub
or
inc
mov
das
mov
cmpsb
leave
cmp
xor
aas
fs
xchg
mov
sub
stos
repnz
cmp
iret
add
andl
jno
push
and
adc
xchg
icebp
cmpsb
or
push
xorl
add
pop
mov
in
lds
call
mov
ret
or
dec
sub
pop
mov
rcrl
sbb
or
push
out
in
pusha
xchg
lds
push
inc
aas
sub
adc
sahf
mov
jno
fstl
pusha
cmp
int3
ret
aaa
cmp
pop
fs
fbld
stc
sbb
orl
pop
or
add
jl
pop
xchg
xor
xchg
lock
mov
add
orl
ja
push
sbb
insb
sbb
or
idivb
mov
imul
or
movhps
lcall
lret
pop
xchg
jecxz
pop
pop
in
bswap
add
jp
out
test
les
jne
pop
push
cmpsl
ss
and
sbb
outsl
xchg
je
fwait
rclb
sbb
and
push
fdivs
jno
or
add
cli
dec
xchg
mov
lret
jmp
or
jle
sbb
lock
mov
clc
and
fstps
adc
jo
mov
xor
addl
sarl
aam
and
sarl
mov
add
adc
je
adc
pop
or
adc
jo
int
mov
addr16
and
mov
mov
mov
into
xchg
out
push
iret
xor
sub
and
mov
les
jns
and
pusha
push
stos
fstl
iret
and
adc
lds
imul
in
add
movsb
pop
sub
jne
dec
xor
arpl
cmp
dec
iret
sbb
adc
add
cmp
inc
jg
jp
test
jnp
or
push
int
sbb
push
test
dec
cmpsl
scas
adc
sbb
incb
addl
cmp
and
cmpb
mov
xlat
xor
mov
jnp
mov
sbb
mov
cmp
xchg
pop
lds
imul
add
add
hlt
inc
jge
mov
dec
pushf
dec
loopne
cli
mov
inc
arpl
push
add
rorb
in
mov
ffreep
test
data16
lods
and
jbe
fistpl
adc
test
cmpsl
neg
push
js
sub
pusha
popa
ljmp
out
movsb
int
and
or
mov
fisubs
adc
in
mov
push
iret
add
ret
inc
iret
movsb
mov
call
jecxz
out
push
pop
xor
cmp
or
lahf
and
loopne
jmp
add
push
xor
fisubrs
bound
mov
push
push
sub
sub
popa
test
pop
jg
jne
mov
sub
jb
add
addb
scas
mov
jo
lock
or
clc
inc
or
xchg
es
test
pushf
andb
mov
cmp
xor
or
es
sub
mov
fs
rcr
push
outsl
push
mov
bound
lods
sbb
pop
cs
xchg
fdivrs
jb
lahf
shl
andb
adc
push
inc
sbb
jbe
xor
jne
mov
mov
inc
inc
out
aad
mov
loope
out
lcall
and
inc
xor
sbb
add
call
imul
lock
pop
and
xor
add
add
sbb
inc
int
xor
lahf
cmp
adc
push
adc
jecxz
out
and
movl
inc
push
rorb
pop
cmp
nop
lds
add
push
xchg
and
add
lret
jnp
jbe
add
mov
loopne
adc
or
push
mov
addb
inc
or
add
add
es
dec
add
mov
das
movsb
bound
je
in
mov
negb
es
or
lock
movsl
mov
inc
or
fs
xor
cmp
cmp
les
sub
pusha
adcl
scas
jnp
adc
inc
outsl
movsl
xchg
mov
repz
lea
cmpsl
adc
dec
cmp
aaa
pop
mov
cmp
lret
mov
and
jo
mov
xchg
ja
add
and
es
loopne
adc
sub
inc
clc
or
cmp
add
inc
jbe
clc
clc
test
ficompl
sar
lret
sub
mov
pop
and
aaa
sahf
sbb
rolb
inc
ret
push
loope
iret
lods
fs
adc
mov
mov
out
push
mulb
je
or
and
mov
bound
xchg
sbb
dec
push
jmp
adcb
sub
data16
ja
or
es
cmpsl
lods
push
aaa
add
sub
push
mov
push
sbb
mov
xorb
inc
or
dec
adc
mov
pop
je
mov
scas
orb
movsl
leave
and
add
jg
xor
xchg
mov
shrb
mov
out
fmuls
test
stos
mov
mov
add
inc
ret
test
jo
pop
mov
mov
sbb
mov
mov
pop
push
adc
push
ret
mov
lods
cmp
push
jne
mov
out
xchg
mov
arpl
shl
movsb
pop
inc
cmpsl
push
adc
pop
xor
and
pusha
mov
or
ret
mov
loop
xchg
pop
stos
cmp
sbb
inc
xor
add
mov
frstor
insb
xchg
leave
adc
adc
jae
ss
xor
sbbl
sub
push
push
aaa
popa
das
mov
push
cmp
xlat
and
sub
sub
fst
sub
scas
add
dec
jge
mov
aas
sbb
daa
mov
jne
or
and
jecxz
cmp
ret
sub
adc
xor
js
sbb
xchg
mov
in
adc
push
jecxz
test
sub
nop
ret
out
pushf
movsb
pop
push
shlb
mov
loopne
or
test
dec
sar
dec
sub
std
dec
xchg
sub
aam
stos
inc
loope
adc
mov
sub
and
insl
out
mov
mov
cwtl
push
lcall
add
adc
aam
inc
or
add
inc
in
add
sbb
mov
es
lahf
jp
sbb
addb
call
lahf
or
push
pop
jl
into
mov
mov
lea
mov
cmpb
push
cmpsl
mov
mov
js
fbstp
dec
aas
push
add
and
xchg
add
rcll
pop
ret
pushf
push
xchg
push
push
inc
mov
sub
cmp
or
adc
mov
sahf
mov
fmull
in
dec
adc
push
sub
sub
je
imul
sbb
sahf
pop
es
pop
das
and
shlb
push
mov
aaa
xor
pop
xchg
lahf
and
and
dec
xor
ret
jnp
adc
cmp
dec
or
dec
bound
push
mov
out
sbb
test
daa
lock
pop
and
and
jb
mov
arpl
cmp
cmp
cmp
or
mov
mov
popa
xor
xchg
in
cmp
mov
xchg
mov
mov
insb
cmp
or
xrelease
jp
jae
mov
jo
inc
shl
mov
repz
outsb
nop
scas
daa
lahf
sub
add
orb
and
insl
nop
aaa
mov
or
outsl
push
and
call
push
dec
xchg
imul
loope
jl
in
mov
push
insb
push
iret
xorb
lock
cmp
add
dec
push
push
push
mov
xor
dec
mov
roll
fisubl
adc
in
dec
inc
loopne
lods
add
jmp
jo
rcrl
std
cmp
sbb
dec
pop
cmp
shrb
mov
subl
and
adc
je
dec
sarb
add
jnp
mov
or
iret
les
and
test
pop
fadd
sub
sub
add
hlt
cmpsb
jge
dec
addr16
fnstenv
mov
andl
fnstcw
cmp
out
iret
adc
jno
push
aas
ret
inc
mov
push
clc
orb
jne
jp
sub
push
xor
fwait
mov
jl
subl
pop
aam
cmp
ret
inc
mov
xor
les
xorb
adc
mov
pop
push
lea
sahf
cmp
pop
out
cmpsb
dec
dec
jl
mov
in
clc
mov
add
push
pop
inc
xchg
xchg
pop
mov
and
test
mov
lahf
loope
and
xchg
scas
dec
sub
ds
dec
jmp
in
pushf
xchg
inc
sub
mov
and
mov
or
lcall
xchg
les
mov
pop
mov
cmp
inc
ja
mov
pop
popa
push
sbb
and
pop
pop
js
lea
dec
enter
movb
or
inc
mov
mov
mov
inc
fsubp
lock
das
in
das
cld
or
lock
mov
mov
lahf
cmp
rclb
outsl
inc
je
xchg
jecxz,pt
sub
inc
fwait
jecxz
jbe
cs
push
cmpsl
in
push
add
arpl
test
imul
imul
inc
fwait
adc
cmp
mov
inc
inc
dec
jnp
sbb
lods
fldl
pop
cmp
icebp
sub
adc
sahf
cltd
adc
xchg
mov
push
ret
mov
dec
loop
jne
pop
adcl
mov
xchg
add
inc
addb
xor
ret
cmpsl
inc
lea
fs
mov
push
pushf
mov
test
add
outsb
test
imul
dec
or
imul
in
shlb
push
sub
test
mov
das
push
aaa
push
iret
idivb
add
ljmp
popa
xchg
jne
dec
and
pop
cmc
stos
dec
pop
aad
adc
add
jl
mov
call
mov
test
scas
lods
pop
dec
movl
cli
mov
xlat
mov
sbb
movsb
and
js
mov
arpl
sbb
addl
cmp
lock
xor
les
jae
movsb
pop
test
loope
inc
add
loopne
fsubl
pop
xor
push
xlat
sub
out
dec
mov
adc
cmc
ret
mov
lods
dec
mov
fisubrs
fs
cmp
insb
lods
xlat
dec
add
dec
dec
dec
inc
xchg
loope
xchg
movsb
mov
popf
aam
mov
jae
lret
lea
scas
dec
test
pop
pop
stc
mov
push
test
ret
dec
sub
jne
fdivrs
aaa
sub
inc
mov
sbbb
popf
fwait
or
popf
shlb
inc
or
sahf
mov
je
insb
or
add
dec
adc
inc
or
mov
nop
enter
out
dec
add
cmp
andl
fimuls
push
mov
add
iret
inc
dec
outsl
mov
pop
sbb
gs
inc
inc
push
clc
mov
and
inc
lcall
adc
mov
jo
jp
pop
jbe
mov
out
pusha
jo
shl
ss
insl
push
lods
in
subl
jo
test
dec
fsubs
xor
je
lcall
movsb
pop
pop
add
in
sbb
test
mov
mov
xchg
fbstp
ret
out
add
or
ret
je
add
cmpl
scas
mov
jmp
test
rorb
add
add
lahf
cli
repz
mov
les
adc
mov
pushw
add
mov
rorl
xchg
adc
movsb
cmpsl
mov
xor
or
sub
push
cmpsl
sbb
sti
sub
data16
sub
pop
andb
divl
cmpsb
sti
pop
jmp
mov
inc
xor
movsb
push
and
dec
pusha
imul
xchg
mov
dec
ja
lahf
xlat
popf
inc
fmul
clc
push
dec
xlat
and
cmp
sub
adc
int3
mov
inc
jge
into
sub
lods
sbb
loopne
clc
and
pop
aam
aam
out
sbb
xchg
push
adc
dec
mov
lahf
xchg
push
add
add
push
xchg
addl
xchg
add
hlt
add
jmp
aaa
cmp
push
or
insl
sbb
mov
push
jmp
or
je
and
loop
addb
sub
inc
xchg
insb
inc
inc
jbe
push
mov
fs
or
in
fcompl
daa
jmp
add
sub
jg
sub
rcrl
sbb
jne
push
cmp
push
mov
movb
push
jno
in
or
cmp
push
movsb
pusha
sbb
mov
cwtl
jmp
fldt
jl
mov
jb
mov
iret
outsb
adc
rcr
cmpsl
lret
inc
add
mov
adc
stos
or
addr16
ficoml
out
lahf
sub
inc
das
add
das
add
fs
pushaw
movsl
insl
arpl
mov
mov
dec
or
iret
sbb
add
inc
loope
push
or
mov
stos
cmp
das
mov
jnp
sub
add
sub
stc
cmpsl
or
scas
xchg
es
je
jbe
iret
in
xchg
mov
out
pop
cmpsl
xor
add
push
add
cmp
push
fmul
add
sub
iret
xor
sbb
xchg
mov
stos
int3
or
dec
and
inc
cmp
popa
adc
icebp
mov
jns
jge
cs
push
push
outsl
and
xor
inc
ljmp
xchg
xchg
mov
sub
mov
cs
in
xchg
clc
xor
xchg
ret
iret
mov
leave
imul
fcomps
push
imul
inc
add
mov
dec
add
pushf
sub
mov
dec
jl
pop
fildll
subl
or
sbb
dec
mov
mov
loopne
dec
add
add
js
sbb
je
mov
add
dec
xchg
lock
xlat
dec
sahf
jno
pop
pop
addr16
fadd
mov
lahf
mov
cmpsl
les
push
movsb
test
ljmp
xor
inc
lock
jbe
movsb
or
add
xor
jne
and
or
lret
ja
shl
aad
roll
jno
sbbl
scas
insl
daa
fsubrs
loope
dec
xchg
outsl
xor
or
inc
jno
lahf
xchg
sarl
adc
pop
xor
jb
jno
adcb
sbb
pop
lret
dec
push
jnp
push
and
sbb
jns
add
or
adcl
sbb
mov
ror
imul
pop
dec
mov
sbb
push
dec
mov
dec
subl
mov
cltd
shlb
or
movq
cmpsb
adc
xchg
xchg
test
cmp
xchg
push
dec
inc
inc
inc
in
mov
push
inc
clc
and
icebp
mov
mov
dec
rcrb
daa
sbb
jno
add
cltd
cmp
cmp
mov
addr16
es
lock
inc
cmp
daa
pusha
pop
cs
add
add
and
add
add
mov
mov
js
popa
jmp
xor
inc
mov
jl
les
imul
test
inc
cmp
sbb
or
movsb
dec
loopne
add
aas
jb
xchg
xorl
xchg
dec
out
bound
iret
mov
dec
iret
int3
pop
rorb
add
push
mull
lods
xor
cmp
subb
pop
push
add
out
mov
inc
sbb
rolb
cwtl
or
xchg
loope
and
loope
arpl
xchg
push
xor
xchg
out
add
add
aaa
idivl
xor
cmp
pop
ss
jmp
xlat
pop
or
push
push
shrl
and
inc
bound
or
mov
fsubr
push
cmp
inc
xchg
inc
mov
cmp
cmpsl
adc
lahf
insl
pop
adc
add
add
movb
pop
jecxz
and
push
mov
es
pop
adc
or
pop
adc
pop
sbb
sbb
movl
rol
imul
jecxz
jp
loopne
bound
outsl
xor
daa
xchg
shl
or
daa
iret
xor
adc
and
fs
sbb
adcb
mov
xchg
xor
fadds
pop
add
push
call
mov
mov
push
lds
add
push
inc
shl
and
xchg
in
rcl
frstor
xchg
test
ja
scas
imul
out
into
cmp
int3
sub
push
sub
lock
lods
fists
test
add
jo
outsb
xor
or
inc
and
repz
std
ja
rclb
fiadds
adc
std
jecxz
outsl
out
sub
repnz
inc
sbb
outsb
test
push
jge
js
push
pusha
nop
test
lods
and
cmp
inc
loop
mov
adc
inc
repnz
mov
insb
fcmovnbe
sub
push
jno
sub
out
loope
int
fcoml
inc
aas
xor
iret
or
fwait
imul
sub
xor
in
scas
aam
add
xchg
iret
mov
and
dec
sub
bound
pop
sbb
push
in
fstpt
cmpsl
pop
int3
jge
das
xchg
jno
or
es
xchg
jecxz
mov
fsubrl
and
and
add
fildl
pop
arpl
xor
jecxz
subl
jo
cmp
test
aam
fs
xor
jae
call
inc
sbb
test
sti
mov
out
mov
js
out
mov
push
push
or
pop
inc
int
call
push
mov
pusha
pop
ss
push
jns
cmpsl
mov
add
cld
inc
pop
mov
mov
jge
mov
call
nop
subl
cltd
movsb
push
fbstp
fbld
out
test
scas
ss
mov
push
aaa
imul
ret
mov
stc
xchg
arpl
jbe
pop
sahf
xchg
push
jle
mov
mull
iret
or
mov
sarl
sub
sbb
cmpsl
push
ret
dec
jecxz
jo
mov
test
push
cmp
push
push
add
mov
popa
bound
fucom
test
and
and
aaa
cmp
imul
cmp
jb
push
xchg
lret
xchg
mov
cld
adc
and
sub
mov
test
in
mov
mov
sub
and
push
insl
jecxz
inc
sbbl
aaa
or
iret
pop
cs
andl
sub
lds
scas
aaa
icebp
cmpsb
sbbb
mov
xchg
jl
xor
push
xor
je
add
sub
adc
ss
or
scas
ss
dec
xchg
jecxz
sub
das
leave
sub
add
jecxz
jle
and
pop
ja
sbb
sub
loop
mov
add
add
pop
inc
out
jo
adc
push
outsl
pop
inc
push
lods
pusha
test
int
clc
movsl
dec
or
mov
dec
sub
out
sbb
out
pop
cmp
dec
jns
jnp
mov
fld
add
push
dec
loopne
movups
fnstcw
xor
sti
in
inc
push
inc
mov
arpl
sbbb
pushf
ret
orl
push
hlt
gs
mov
mov
dec
into
push
stos
lahf
enter
add
test
cmc
jno
cmp
rcrb
cmp
pop
fcomps
dec
add
jne
cwtl
jo
pop
stc
sub
mov
sub
pop
out
popa
and
arpl
xchg
lods
push
enter
cli
or
inc
pop
mov
cs
outsl
inc
sbb
add
xchg
jns
cli
fisttpl
cmp
pop
add
dec
add
mov
push
sub
add
in
aaa
or
lea
sbb
shrl
in
in
push
inc
mov
xorl
add
and
cmp
lock
and
push
pop
mov
popa
xor
sub
fsubl
adc
xchg
ja
or
push
fisttpll
ds
push
movsl
xor
ss
lret
aaa
push
ret
add
stos
sub
pusha
push
jo
test
test
fbstp
outsl
dec
inc
pop
shl
repz
xlat
test
or
mov
push
push
jl
lock
inc
adc
pop
add
add
pop
loop
movsb
je
and
loopne
lea
fwait
aam
clc
inc
dec
out
lahf
cwtl
add
and
hlt
lret
notb
fdivl
and
jnp
iret
js
xor
and
cmpsl
dec
scas
fisubl
and
ret
jge
les
adc
mov
xor
dec
ret
sub
push
jb
mov
and
lods
pop
pop
add
sub
pop
push
cwtl
jno
sbb
lds
stos
sub
shlb
sub
adc
push
push
cmp
add
sbb
scas
test
or
sub
sub
add
out
jo
sbb
push
and
add
mov
push
add
sub
sub
pop
jne
mov
inc
js
mov
sub
xchg
and
cmpsl
sti
ret
and
mov
mov
mov
popa
inc
or
pop
sub
pop
push
pop
shlb
xor
fists
and
xorl
add
andl
add
add
sbb
push
and
add
fyl2xp1
mov
movsb
sub
faddl
or
cltd
sub
sub
push
dec
out
pusha
or
inc
fiadds
cmpl
or
loope
pop
enter
das
int3
push
cmpsl
aad
mov
lret
mov
ret
roll
ljmp
xchg
jp
inc
sbb
mov
mov
pop
movsb
xchg
mov
or
pop
adc
nop
jmp
push
inc
in
stos
push
and
loop
add
mov
shrb
add
aaa
subl
pushf
aam
xchg
pusha
rorl
aad
inc
mov
test
push
add
lock
out
dec
je
sbb
push
cmp
pop
and
mov
mov
xor
daa
test
mov
jbe
outsl
add
or
sub
es
push
xchg
fisttps
es
adc
into
jmp
repnz
mov
fistl
mov
xor
mov
scas
gs
adc
add
lock
mov
mov
stos
imul
inc
mov
js
or
inc
call
adc
sbb
das
cmp
inc
fcmovnb
xchg
sub
in
add
xor
fs
inc
jecxz
aam
and
mov
rcr
jnp
push
add
ds
cmp
mov
jp
int3
lret
mov
inc
roll
mov
and
sbb
sbb
cmp
xor
inc
rcrb
cmp
aaa
loopne
popf
xchg
mov
sbb
je,pn
add
in
dec
mov
movsl
push
stos
lods
cmpsb
push
lods
loopne
sbb
and
imul
andl
pusha
and
je
dec
popl
or
add
xorl
add
adc
dec
aas
lahf
jb
pusha
fsts
add
ljmp
lods
rol
inc
add
fidivrs
push
inc
loope
push
pushf
in
inc
mov
lahf
int
xchg
pusha
mov
push
push
aaa
fs
xchg
frstor
daa
add
push
and
pop
ror
into
popa
add
bound
popa
and
push
inc
inc
lret
aaa
movsb
aam
and
dec
fistps
inc
das
or
push
mov
add
add
and
push
filds
ljmp
push
enter
jo
fsubl
outsl
mov
inc
aam
dec
pop
add
push
pextrw
lahf
add
loope
push
ret
adc
jl
add
dec
fucomip
fists
push
jl
jg,pt
mull
and
dec
subb
inc
jl
pop
dec
dec
sbb
push
jl
out
sub
fmull
aaa
jp
fnstsw
pop
inc
sbb
in
mov
jmp
push
inc
std
lock
mov
pop
pop
xchg
arpl
pop
cmp
push
dec
or
jb
rcl
inc
mov
inc
fs
sub
cmp
js
inc
or
mov
loopne
lret
sub
and
dec
pop
sahf
fidivl
and
andl
sbb
cmp
jl
loope
cmp
sub
and
xorb
jae
xchg
push
sbb
lea
add
outsl
xor
inc
sbb
lcall
pop
xchg
lock
pop
fbld
in
hlt
insb
dec
arpl
cmp
das
psrad
push
add
or
mov
hlt
ds
dec
sahf
fisubs
scas
and
sbb
stos
dec
dec
int3
jp
push
push
add
mov
inc
je
mov
cmc
fucomi
stos
call
sub
das
into
in
sbb
insl
cmp
scas
mov
add
into
push
pop
dec
inc
loope
or
xchg
cmpsb
insl
ret
cmpsl
into
in
and
sub
xorb
sub
xor
inc
das
das
lock
call
insb
out
or
loop
ljmp
iret
call
xor
sbb
nop
daa
sahf
into
rcrl
pusha
cmp
dec
fs
ret
sub
jl
mov
test
push
popf
pusha
and
ret
movsb
loopne
jns
add
inc
sbb
pop
mov
sub
aaa
dec
lock
or
xor
cmpsl
inc
daa
imul
mov
mov
mov
movsb
enter
ss
das
rcll
ja
ljmp
cmp
sbb
insl
and
jae
ds
xor
scas
push
or
jnp
xorl
ljmp
jae
add
ret
push
add
pop
xchg
xorl
outsl
int
ds
or
popa
xchg
jo
mov
lods
add
adc
frstor
fstps
loopne
movl
stos
mov
into
lcall
add
or
xlat
dec
inc
mov
push
sbbb
xchg
stc
jl
sbb
lods
mov
test
movsl
pusha
in
call
push
or
pop
test
js
add
mov
hlt
mov
xchg
icebp
fistl
outsb
push
js
jae
adc
inc
in
xor
jbe
mov
outsb
enter
popa
lret
out
sbb
xchg
pop
fldcw
ljmp
ret
pop
jbe
shrl
or
dec
fsubl
imul
into
rcll
out
loope
sub
xor
pusha
enter
sbb
shlb
das
dec
jo
push
in
fbstp
stos
cmp
jecxz
rcrl
ret
imul
mov
loope
fidivl
pop
divb
mov
in
inc
adcb
mov
push
mov
mov
push
inc
dec
jo
stos
loopne
loop
fsubl
xor
hlt
mov
faddp
ficompl
mov
push
xchg
inc
js
and
setno
mov
pop
pop
js
inc
mov
mov
nop
fwait
adc
push
ljmp
loopne
pop
xchg
or
inc
movsb
loope
inc
dec
outsl
andl
or
push
pop
jge
andl
in
push
cmp
pop
sub
or
jo
sbb
fcmove
fadds
xor
pop
mov
fildl
push
mov
lock
sahf
adc
ljmp
jno
pop
mov
insl
idiv
iret
mov
or
add
mov
push
lods
movsb
arpl
xchg
add
mov
lods
stos
jl
outsl
jno
cmc
lret
rcrl
test
xor
mov
inc
imul
dec
sub
pop
add
adc
dec
popa
test
pop
cmp
sbb
bound
cli
addr16
mov
and
jnp
or
shlb
jmp
xor
pop
jecxz
sar
ret
insl
mov
push
sub
adc
adc
ss
mov
xchg
jp
mov
sub
push
bound
adc
push
inc
cmp
xor
jmp
test
dec
les
leave
pop
loope
test
push
dec
outsl
mov
push
loopne
loopne
push
daa
pop
popa
inc
xchg
xor
aaa
test
stos
add
lods
dec
xor
call
or
jp
add
adc
mov
lahf
out
adcl
pop
and
inc
stos
mov
pop
pop
or
jns
xchg
add
pop
xor
ja,pn
ret
or
les
dec
scas
test
push
in
rol
rcrb
lahf
pop
mov
rclb
xor
outsb
test
dec
orl
mov
test
inc
test
cltd
test
sbb
push
pop
testb
add
adc
push
xor
or
test
std
mov
icebp
popf
cmp
sbb
add
clc
xchg
iret
or
sarl
insl
cmp
mov
test
fwait
ret
cmp
negl
xchg
dec
mov
sub
dec
xchg
ret
or
sbb
out
inc
cmp
add
sub
rorl
adc
lea
adc
mov
jecxz
dec
data16
mov
cmp
insl
and
mov
add
shr
sub
adc
mov
sub
fsincos
popf
data16
ret
int
mov
add
aas
leave
out
popf
adc
xchg
rolb
std
or
inc
push
adc
and
mov
mov
fwait
add
sti
push
lock
cltd
xchg
js
aad
ret
inc
fistl
loop
out
and
jle
les
xchg
or
test
testl
sbb
or
dec
pop
inc
jmp
add
shlb
mov
xchg
adc
mov
subl
dec
mov
daa
xor
mov
push
add
rcr
pop
xor
sbb
cmpb
scas
jne
rclb
xor
dec
data16
aas
mov
push
xchg
mov
fcompl
dec
mov
fcoms
adc
sub
repz
sub
mov
add
or
pop
test
jmp
imul
sub
test
xchg
push
arpl
jo
movsl
adc
fistl
ljmp
xchg
add
test
inc
add
cmp
inc
ret
pop
mov
stc
inc
and
in
scas
push
pop
fsubrp
test
add
loop
jmp
sbb
xor
mov
es
mov
jmp
cs
call
shlb
jg
addr16
sub
add
fs
loop
out
jb
adc
sbb
std
cltd
sub
sub
mov
je,pt
sahf
scas
mov
push
jmp
sarb
pop
and
dec
imul
mov
mov
outsb
add
dec
pop
sbb
or
sti
stos
rorl
sub
or
dec
loopne
sbb
rorb
xorl
jo
cld
insl
xor
xor
xchg
adc
pop
add
ret
out
or
or
xor
lock
pusha
xchg
ds
inc
fstl
pop
or
dec
push
dec
xchg
daa
cmc
inc
fildl
xor
or
push
jno
pop
jecxz
adcb
pop
mov
test
add
dec
in
inc
enter
mov
mov
mov
push
aad
push
xchg
les
das
jnp
jne
xor
mov
add
dec
test
pop
cmp
ja
out
mov
jle
out
add
mov
cmp
mov
xchg
repz
mov
xor
movsb
je
and
inc
in
inc
mov
or
add
push
insb
popa
int
and
push
push
ret
les
arpl
mov
dec
pusha
aaa
sbb
xor
test
cmc
scas
cmp
jb
inc
pop
mov
lret
jbe
stos
test
dec
pop
scas
xlat
nop
shrl
push
pop
jecxz
aad
lea
iret
fcomps
dec
dec
mov
sbb
xor
jns
fwait
dec
ret
outsl
mov
pop
mov
lcall
lret
and
loop
xchg
popa
pop
sbb
sbb
add
or
cmp
xchg
imul
dec
daa
sbb
pop
into
jbe
push
mov
insl
xchg
leave
cmpsb
inc
adc
push
shrb
icebp
or
push
pop
xlat
rcr
insl
nop
dec
sbb
mov
mov
js
mov
pop
mov
cmpxchg
scas
mov
jne
lods
insl
mov
xchg
iret
loopne
mov
or
ss
bound
push
inc
das
movsb
psrad
and
add
hlt
sahf
push
dec
fwait
mov
es
cs
js
call
call
xor
lds
and
outsb
xchg
jmp
add
xor
nop
sub
and
add
flds
cmp
and
add
adc
lods
fbstp
xor
sub
pop
mov
gs
mov
mov
pop
imul
inc
ret
sub
inc
rcll
xor
fwait
jns
cmp
stos
dec
or
lret
push
pop
xchg
cltd
push
push
push
in
imulb
and
lods
out
jle
shl
js
xor
in
out
add
pop
xchg
jb
leave
mov
test
out
in
mov
sahf
dec
mulb
xchg
or
mov
aaa
roll
inc
pop
mov
loopne
les
lods
sbb
loopne
mulb
loopne
js
xchg
int3
mov
pop
rorb
shll
jo
loope
and
jnp
adc
dec
cmc
add
sbb
lcall
fwait
xor
loopne
sbb
cmp
sub
repz
pop
adc
gs
dec
add
jnp
mov
dec
and
shlb
testl
icebp
aad
mov
dec
mov
jecxz
and
cwtl
jmp
ss
outsl
sbb
jae
lods
in
dec
sub
out
ss
inc
movsl
lods
inc
jmp
sub
insb
push
fimuls
out
jp
lock
mull
pop
mov
mov
mov
fiaddl
mov
int
loopne
xor
fiadds
lock
or
sbb
repz
incl
mov
pop
bound
jl,pt
ret
xchg
push
ds
fisubrs
add
shlb
shll
loopne
shlb
arpl
xlat
mov
shrl
sub
xchg
icebp
jo
outsl
push
hlt
mov
mov
andb
negb
add
inc
or
popf
imull
sahf
add
sti
stos
aam
jo
outsb
sbb
iret
inc
and
pop
dec
jo
aad
and
hlt
cmp
jae
and
into
sbb
lock
scas
sbb
push
mov
xchg
sbb
test
out
jmp
sbb
push
and
lods
jg
mov
inc
push
lock
pop
cmp
ret
add
push
pop
xchg
add
shll
and
add
stos
divb
imul
or
xchg
fdivs
mov
push
daa
sarl
mov
or
popa
push
pop
rorl
dec
cmp
mov
movsl
jne
sbb
add
mov
rclb
aaa
pop
sar
sbb
lock
loopne
cmp
clc
and
xlat
ret
and
push
outsl
cmp
fs
addl
outsb
popa
in
rorl
ror
push
mov
mov
dec
dec
sti
das
mov
xchg
xchg
leave
ret
lret
xchg
add
jp
jbe
iret
repnz
test
cmpsl
sbb
sub
add
js
cwtl
jo
cmp
push
lahf
or
xchg
jmp
jp
inc
add
cmp
pop
cmp
or
movsl
fistps
xor
adc
add
adc
jg
or
mov
inc
shll
jmp
pop
addr16
mov
in
mov
enter
ds
pop
andb
push
sbb
add
outsb
loopne
jge
imul
dec
cmpl
pop
cmp
movsb
ror
loopne
enter
outsb
xchg
clc
out
in
jno
mov
mov
icebp
mov
jb
xchg
push
jb
mov
std
lods
loopne
into
dec
in
mov
enter
push
and
push
lock
push
fistps
push
cmp
movsb
add
pop
push
test
or
cltd
jp
stos
or
xlat
xchg
add
adc
mov
xor
pop
inc
mov
dec
call
dec
ljmp
mov
push
or
loop
fdiv
push
insb
test
js
push
and
lock
ja
and
xor
arpl
xchg
mov
push
xchg
hlt
shl
ds
test
push
xchg
daa
scas
out
add
xor
dec
xor
mov
cmpsb
dec
gs
push
sbb
jno
pop
push
and
xor
gs
jecxz
pop
mov
subl
fidivs
inc
call
xor
adc
mov
xchg
sub
ljmp
test
or
or
lods
push
test
xorb
push
loope
jl
jp
lea
test
jb
ja
ret
mov
mov
dec
icebp
and
adc
fimuls
xchg
dec
sbb
and
mov
sbb
das
add
loope
test
lock
out
push
push
mov
clc
mov
pop
vcvttps2uqq
sbbb
js,pt
repnz
inc
jle
adc
ret
pop
xchg
dec
es
inc
pushf
lea
add
push
adc
mov
mov
push
das
lods
pop
and
lret
bound
xchg
inc
sbb
pop
test
ret
push
in
shlb
xchg
iret
and
andb
jne
into
mov
pop
inc
addb
test
fistl
sub
mov
xchg
push
in
adc
cmp
xchg
mov
loop
fwait
cmp
test
fcmovnbe
jge
cmp
mov
cs
cmp
enter
pop
dec
pop
shl
mul
and
push
and
inc
lods
pop
mov
xchg
shl
pushf
in
adc
sbb
fcomps
push
xor
fwait
or
and
sub
jmp
or
imul
lods
ja
adc
enter
data16
or
aaa
iret
dec
pop
xor
sbb
xlat
xchg
push
into
or
adc
and
sbbl
scas
or
enter
out
pop
pop
test
fnstsw
sub
aam
mov
xchg
pop
mov
arpl
orl
cmpsb
jae
or
loop
ret
jnp
inc
adc
or
mov
jmp
xchg
ljmp
rcll
add
xor
jbe
shrb
add
fists
popf
test
add
and
push
xor
imul
aad
xchg
movl
lcall
pop
mov
cwtl
adc
mov
lret
xchg
sub
xchg
ret
sub
add
mov
loop
pop
mov
mov
and
add
cltd
xor
ds
xchg
dec
lods
lcall
mov
mov
jp
inc
dec
pop
inc
xlat
xchg
mov
inc
push
mov
ret
push
or
movb
loopne
sbb
ret
cmpsb
or
insb
lods
gs
push
xchg
or
arpl
fsubrs
sbb
pushf
shrl
pop
add
out
or
rcl
sbb
sub
dec
test
pop
cmovo
lea
sub
inc
movsl
nop
and
cmpsl
cmpsl
jo
pop
push
lods
lock
pushf
les
mov
sti
inc
push
fwait
cmp
hlt
jo
cltd
scas
lds
mov
sbb
jno
push
iret
add
sub
loope
mov
pop
inc
mov
xchg
mov
outsl
xchg
sub
xchg
popa
insl
test
dec
jmp
inc
pop
mov
cmp
lods
out
in
mov
jae
in
hlt
inc
std
bound
cmp
lret
sub
fbld
addr16
mov
outsl
add
jnp
jl
mov
rep
test
movl
push
xchg
or
bswap
mov
lcall
add
and
test
stos
test
xchg
shl
jmp
in
fbstp
xor
sub
jp
and
fistl
sub
cmp
dec
div
pop
out
add
nop
out
std
rcrl
xchg
popa
and
jp
and
sbb
mov
out
or
push
call
stos
es
rorl
adc
es
rcrb
loope
jl
push
call
inc
int3
xchg
fildll
jbe
jae
lds
loope
or
xor
ja
dec
xor
insl
sub
test
xor
dec
es
and
shl
shrl
or
fdivs
ja
sahf
push
push
ljmp
cmp
inc
out
xchg
pop
sbb
leave
out
pop
pop
jne
bound
repz
sub
xchg
ljmp
pushf
popa
push
shll
cmp
cmpsl
imul
add
es
or
stos
sub
mov
inc
mov
xchg
add
test
sub
sbb
adc
mov
push
addl
pushf
cmp
pop
shrb
nop
sub
xlat
movsb
jp
adc
ret
das
or
cli
addb
mov
lock
ss
sub
xchg
xchg
jmp
out
dec
xchg
adc
js
push
push
popa
movsb
sbb
lret
add
push
mov
add
add
outsl
sub
cwtl
lret
fiaddl
sti
inc
or
xor
pop
pushf
jp
addr16
popf
ret
xchg
jle
inc
cltd
xchg
cmp
push
cmp
aam
icebp
and
push
mov
pusha
add
faddl
adc
into
mov
inc
gs
ja
iret
fisttpl
rol
inc
sub
add
sub
lock
or
mov
inc
stc
adc
icebp
inc
and
icebp
lds
cmp
outsl
xor
test
fdiv
leave
sub
adc
pop
or
add
aas
add
in
sbb
pop
or
cmp
mov
or
stos
sub
adc
add
fldl
aaa
je
adc
pop
mov
and
sub
cmc
mov
and
hlt
mov
fadds
int3
and
and
dec
jo
dec
cltd
and
pop
notb
loopne
and
imul
add
stos
loop
add
repz
inc
mov
addl
cld
iret
out
add
popa
pop
js
fldcw
pop
xor
dec
clc
push
movsb
cmp
aad
pop
cmp
jmp
test
sub
mov
and
testb
jge
inc
adc
xchg
iret
cmp
pop
das
imul
call
inc
loopne,pn
xchg
adc
ss
rcrl
sub
imul
jno
adc
sub
or
mov
dec
andb
je
adcl
sti
xchg
xor
outsl
shrl
jmp
adc
sbb
sbb
sub
popw
popf
sub
movsl
ret
or
add
pop
ret
add
sarl
jmp
and
popa
lock
ss
add
dec
in
adc
jo
and
loop
fwait
and
int3
insl
pusha
lds
mov
jne
cli
jns
nop
loopne
nop
add
shlb
test
aaa
xor
or
dec
ds
push
push
jp
call
mov
pop
jp
dec
mov
movsl
imul
push
mov
mov
insl
loop
out
jb
out
es
arpl
out
mov
bnd
xchg
gs
shrl
into
andb
dec
enter
add
jb
cltd
jne
lock
les
mov
adc
and
shrb
mov
cwtl
les
push
movsb
adc
and
out
pop
repz
out
jnp
inc
mov
nop
xor
push
shlb
inc
cmpsb
mov
sub
mov
xchg
or
cmp
push
mov
enter
cmp
and
mov
jo
dec
inc
inc
out
jo
stos
data16
mov
xchg
add
mov
in
xor
push
dec
scas
push
mov
in
das
adc
jo
fcmovne
enter
cmp
call
mov
jb
add
sbb
negl
pushf
mov
mov
mov
mov
shl
mov
or
sbb
and
sub
inc
sub
or
arpl
lcall
cmp
xor
mov
ret
rolb
jnp
aaa
mov
movsl
insb
xor
adcl
adc
adcl
mov
aam
mov
stos
push
jl
mov
sbb
jmp
adc
push
test
adc
fnstsw
inc
sbb
movsb
outsl
cltd
xor
sbb
jne
jp
fwait
loopne
mov
mov
jb
sbb
pop
sub
mov
sti
inc
xor
cmpsb
movsb
hlt
sub
dec
subl
lock
pop
xchg
lock
dec
mov
arpl
push
mov
jno
adc
push
in
aas
mov
push
mov
xorb
ret
iret
iret
add
xor
and
sbb
fwait
cmp
cli
fcompl
inc
into
inc
or
dec
jle
iret
and
leave
adcb
aam
enter
xor
mov
and
pusha
xor
pop
lret
dec
pop
enter
insl
test
push
popf
addr16
test
sub
test
movsb
mov
in
adc
push
out
shrl
mov
test
add
sub
or
ds
test
das
arpl
jge
xor
popa
sbb
jle
sbb
call
cmp
fcoms
cmp
rorb
pop
sub
fiadds
lds
lods
jecxz
add
adc
aaa
add
mov
push
or
jmp
and
add
lods
dec
fwait
xchg
orl
test
jbe
push
xchg
or
push
repnz
fldl
gs
pusha
or
push
jno
jne
lret
inc
popa
jnp
mov
fidivrl
fwait
cmp
mov
sti
mov
or
fistps
and
mov
lahf
inc
add
add
add
in
or
daa
arpl
bound
lods
inc
rclb
mov
or
leave
sbb
add
seto
pop
and
outsl
mov
std
sbb
imull
pushf
sbbb
and
fdivl
jmp
xchg
es
push
pusha
es
mov
xor
push
imul
and
jg
add
and
testl
clc
rolb
mov
pop
ficoml
push
push
push
or
mov
stos
add
rclb
cmp
pop
call
mov
jg
test
sub
dec
sahf
and
mov
jge
inc
sub
sti
sbb
sbb
sti
clc
loop
cmp
or
mov
iret
les
repnz
inc
in
cltd
cli
mov
xor
sub
adc
or
mov
add
sbb
insb
stos
and
xlat
test
jg
cmpsl
enter
xchg
aas
push
sub
shrb
sub
mov
les
lret
pop
mov
lea
push
out
sub
pop
test
pop
test
jg
lds
fdivs
loope
and
inc
andl
push
inc
pop
dec
je
cmp
rcl
inc
rcrb
jb
xor
inc
aas
cld
loope
test
jecxz
fidivrs
sbb
sbb
sub
loopne
or
sub
pop
add
nop
xchg
popa
sbb
mov
and
cmp
cmp
stc
out
pusha
xchg
add
or
xor
test
mov
mov
pusha
inc
hlt
sbb
or
sbb
mov
arpl
push
push
jbe
movsb
pop
add
dec
push
push
pop
icebp
cld
sub
adc
test
in
shll
adc
cmp
es
adc
mov
or
cmp
pop
fdivp
xchg
pop
popf
adc
dec
shll
or
scas
inc
pop
sbb
cltd
iret
loopne
pop
or
jne
fldt
or
xor
pop
push
push
inc
cmp
and
mov
out
cmp
pop
dec
adc
mov
pusha
test
mov
lahf
mov
iret
cli
pusha
subl
xor
or
insb
inc
adc
cmp
in
cmpsl
cmp
pop
pop
mov
out
loope
mov
add
out
int3
mov
or
xor
cwtl
sub
imulb
inc
cmp
adc
lock
push
movsl
loope
push
mov
mov
lret
jb
pop
or
popa
sub
divl
jns
add
xchg
lock
test
frstor
mov
movsl
iret
outsl
jno
pop
movsl
lds
jmp
mov
dec
aad
push
xchg
mov
inc
inc
mov
cltd
pop
jp
inc
js
cmp
jno
adc
add
fdivs
cmc
popa
in
sbb
popa
adc
inc
nop
js
push
fadds
sahf
rcrb
mov
pop
cmpsl
sahf
xchg
dec
pop
add
pop
push
adc
cltd
call
dec
mov
icebp
lea
addr16
stos
pop
lahf
mov
shlb
and
dec
imul
adc
push
sbb
movsb
in
fbld
sub
ljmp
ret
shlb
xor
jge
xor
addr16
out
dec
adc
inc
push
iret
xchg
pusha
arpl
push
inc
fwait
jo
inc
lock
push
dec
or
pop
add
mov
pop
imul
ds
loope
push
push
mov
sub
xchg
xchg
lods
out
mov
and
int
add
mov
aaa
dec
cli
sub
jae
arpl
inc
and
rolb
jecxz
sub
cmp
fwait
inc
aad
aas
fmuls
cmpl
push
add
movsl
lea
dec
mull
es
xchg
subb
and
and
nop
inc
xchg
aam
aas
or
mov
mov
jnp
adc
xchg
sub
andl
and
stos
jb
cwtl
outsb
push
and
loop
lret
lods
mov
nop
mov
sbb
out
mov
mov
dec
fnstenv
outsb
gs
cmp
lret
lods
mov
lds
jns
lret
int
test
in
and
popa
mov
lcall
gs
mov
mov
xchg
push
rorl
jae
fwait
nop
enter
in
or
or
pop
nop
orl
cmp
jecxz
cmp
xor
push
jb
push
mov
sbb
adc
subb
mov
ja
inc
add
add
mov
stos
iret
xorb
jne
test
clc
jne
add
gs
ret
pop
stc
shlb
adc
inc
jne
sbb
and
lahf
sbb
fs
cltd
insb
cmp
and
in
dec
xor
or
sub
and
out
xor
ret
dec
cmc
mov
and
dec
add
xchg
in
sbb
mov
pop
inc
or
pop
outsl
adc
loopne
jmp
or
js
imul
popa
jl
push
in
and
mov
and
call
jg
and
mov
mov
test
daa
xor
adc
inc
jl
loopne
mov
das
add
mov
cld
sbb
insb
clc
xor
or
movsb
das
add
sahf
add
adc
lret
std
in
and
sbb
cmpsl
fstps
add
adc
in
mov
add
xchg
lahf
arpl
add
push
inc
xor
shrb
pop
mov
jb
push
push
pop
push
sub
je
and
lret
iret
movsl
into
ret
pop
scas
shlb
lret
sub
rcrb
insl
or
es
fimuls
int3
dec
dec
arpl
mov
inc
rorl
fbld
je
dec
out
sti
ret
ret
rorl
cmpl
adc
mov
outsl
in
cld
andb
ds
lods
cmp
push
sub
les
push
jb
popa
dec
xchg
xchg
and
jbe
push
sarb
inc
insb
imul
sti
js
iret
xchg
inc
jno
ljmp
sbb
movb
clc
sub
push
xlat
mov
fisubs
mov
sbb
cmp
sbb
stos
push
push
sbb
sbb
dec
lret
and
adc
xchg
add
mov
adc
push
or
in
leave
sub
xor
sub
fwait
pushf
out
mov
addl
mov
sub
add
es
jno
mov
mov
or
ret
jo
sub
js
ret
test
dec
imul
pop
jb
and
clc
pop
sub
sub
mov
push
hlt
ret
sbb
inc
push
hlt
jecxz
or
or
scas
ss
shrb
in
inc
adc
jbe
jle
pop
pop
stos
push
mov
jmp
xorl
cmp
mov
test
loopne
push
or
dec
ja
ljmp
adc
in
movsb
pusha
adc
cltd
addb
popa
sub
ljmp
jmp
push
orl
rcr
sub
movsl
mov
loope
test
inc
sub
add
push
ret
xchg
rcrl
add
aaa
sti
das
xor
sub
cmp
dec
push
mov
rclb
mov
test
xor
mov
or
lcall
fcmovnbe
or
lret
cmp
jno
sbb
adc
aam
cmp
cmpsl
mov
push
pcmpeqd
lods
sbb
jns
loopne
and
ja
cltd
pop
mov
sub
fstps
or
mov
adc
xchg
or
ds
rcrl
dec
fildl
inc
sbb
fadds
add
adc
imul
test
std
mov
jae
es
pop
outsb
shl
add
add
cmc
cmp
pop
mov
call
xor
iret
cwtl
push
lods
mov
imul
pop
rcrb
lahf
pop
inc
mov
sub
jge
sub
inc
xchg
push
mov
imull
imul
mov
mov
insl
cmpsb
in
mov
aad
nop
jg
adc
lds
sarl
sub
add
test
outsl
fmul
add
push
sbb
mov
push
dec
add
mov
xchg
stos
xchg
and
mov
or
sub
nop
inc
push
popf
shlb
inc
and
push
aad
push
or
fldenv
lock
sub
xchg
jo
push
inc
out
mov
scas
fs
lcall
pop
add
into
rcrb
lods
fists
out
push
push
xchg
subl
sbb
jbe
repnz
jg
jb
imul
in
nop
pop
push
testl
mov
sub
fdivrs
or
add
inc
mov
add
inc
mov
mov
imul
mov
sbb
cmp
push
pop
pop
or
inc
cmp
pop
sub
imul
sbb
push
icebp
jno
test
dec
jge
push
leave
push
movsl
lods
add
jecxz
rorb
lds
dec
or
sti
sbb
fwait
pop
cmc
cs
add
push
imul
jmp
sub
rorb
xchg
movsl
jecxz
push
cmpsl
movsl
daa
sub
fbstp
adc
imul
jbe
mov
lea
shr
aas
test
xor
xchg
or
mov
pusha
inc
fs
fs
mov
mov
orl
mov
and
push
xchg
jb
popf
out
xchg
add
shll
push
cmpsb
in
add
cmp
movsl
adc
push
sbb
add
jmp
aaa
sub
mov
mov
sbb
inc
lret
xchg
lret
es
scas
icebp
or
pop
daa
imul
lret
js
push
sbb
and
cmpsl
aam
add
and
mov
insb
add
inc
xor
mov
js
sahf
daa
sbb
xchg
cmp
je
push
xchg
in
fs
lret
sub
add
sbb
inc
andl
imul
cs
or
pop
cmpsb
or
adc
bound
mov
in
data16
push
pop
pop
sahf
pop
adc
insl
js
or
mov
test
stos
mov
es
xchg
andb
cmp
mov
ds
shrb
es
or
ret
dec
jns
lock
inc
arpl
ja
int
xor
ja
push
mov
popl
jmp
inc
fsubs
imul
add
dec
imul
loopne
ja
sub
add
inc
fstpl
mov
xor
je
add
mov
add
xor
popf
dec
lret
push
shlb
shr
scas
and
adc
dec
mov
push
popa
fwait
sub
sub
add
aaa
add
pop
aas
roll
cmp
jmp
rcr
imul
hlt
subl
js
out
movsl
xchg
jmp
mov
test
cmpsl
imull
loope
lahf
mov
xchg
insl
mov
or
mov
lret
cmpsl
add
and
push
test
imul
or
mov
rcrb
sbb
je
and
pop
cltd
inc
popa
push
mov
push
and
lods
inc
fs
add
adc
or
dec
mov
outsb
icebp
mov
das
inc
xchg
clc
cltd
lock
rolb
inc
inc
xor
mov
cli
ret
imulb
sbb
in
fidivs
cld
outsb
cmpsl
adcl
aas
add
fldenv
push
or
scas
popa
das
rol
cs
inc
pop
por
jle
aaa
rorl
jns
push
pop
and
xchg
jo
call
xchg
cmp
add
test
pop
and
xor
imul
mov
jae
xor
insb
ret
push
lods
xchg
or
cmp
dec
inc
lods
popf
mov
popf
push
lods
lahf
mov
stos
or
push
dec
sbb
fidivs
js
cmpsl
fcoms
push
daa
mov
hlt
shlb
xor
es
loopne
xor
das
push
int
adc
push
cmpsl
pop
daa
adc
mov
push
xor
cmp
in
pusha
sub
subb
aas
cmpsl
jmp
movsb
dec
fs
es
dec
rcrb
add
xor
mov
add
or
pusha
inc
scas
nop
pop
das
into
lods
cmp
jnp
add
pop
das
enter
adc
insb
xchg
add
mov
push
cmpb
ficoms
pop
adc
cli
or
aaa
jo
scas
bound
jbe
mov
cmovg
sbb
and
fildl
pop
dec
sub
ljmp
mov
xorl
push
inc
mov
mov
fs
loop
setno
popf
xchg
repz
mov
sub
pop
fldl
stos
cmp
push
popa
movsl
cltd
out
call
sbb
sub
jbe
mov
fmull
or
xchg
add
dec
pop
inc
adc
push
pop
movsb
mov
inc
push
cltd
push
cmpsb
pop
or
mov
add
mov
and
xchg
popw
sbb
ret
shlb
les
in
stos
in
and
cmp
inc
push
mov
pop
dec
sbb
mov
dec
and
in
cmc
add
or
inc
cmp
in
jle
mov
add
incb
or
dec
xor
shll
pop
imull
insl
push
and
mov
jp
mov
push
lret
push
inc
mov
inc
add
loop
or
call
test
mov
xor
or
jnp
and
mov
cmp
inc
std
out
inc
adc
sbb
push
out
sbb
adc
fs
inc
enter
add
clc
add
ja
mov
mov
aas
push
mov
or
movsb
fnstcw
mov
mov
mov
mov
and
es
xchg
lahf
adc
in
pop
mov
fwait
sbb
mov
je
jne
inc
sub
imul
subl
mov
or
mov
pop
and
jnp
mov
lods
xlat
in
stc
stc
mov
aas
mov
lret
and
mov
adc
sub
and
rep
dec
out
cmpsl
aad
mov
push
les
add
jl
jo
jno
push
movsl
lcall
outsl
in
push
xchg
xor
adc
scas
add
adc
push
mov
xor
adc
lcall
xchg
jae
mov
hlt
aas
jne
rcrl
inc
iret
scas
mov
add
lods
addb
test
out
inc
xorb
clc
insb
daa
xlat
es
xchg
outsb
inc
sbb
jo
call
lock
and
xchg
arpl
sti
sub
lret
push
cmpsl
mov
stos
dec
xchg
sbb
or
add
mov
lret
and
mov
adcb
out
pop
imull
and
inc
pop
xchg
add
and
and
daa
js
cmpsb
inc
dec
jecxz
or
pusha
jns
sub
mov
int
inc
lds
gs
mov
dec
sbb
or
test
test
mov
rclb
fsubrp
outsb
ret
insl
add
add
cmpsb
inc
jmp
je
xorb
aad
lods
dec
mov
cmpb
sbb
xor
mov
int
js
movsl
inc
xor
in
imul
es
sbb
es
add
in
mov
sbb
jmp
dec
pop
filds
cmc
ja
pop
nop
pop
adc
sub
fsubr
mov
outsb
mov
push
cmp
push
repnz
loopne
cmp
and
push
mov
add
dec
and
xchg
out
lds
pop
mov
pop
pop
push
inc
mov
testb
test
iret
gs
cmpsl
pop
movsl
mov
or
mov
sahf
push
fwait
xor
cld
jg
mov
iret
cs
inc
scas
popa
mov
inc
push
xor
addr16
out
cmc
js
xchg
cmc
inc
scas
movsl
out
fbstp
test
cmpsb
call
ja
jmp
out
mov
addr16
cltd
mov
mov
mov
fwait
movsb
loop
xchg
ss
jo
mov
leave
cmpsb
imul
mov
add
test
stos
imul
je
jp
imull
icebp
addb
sarl
push
std
icebp
lods
out
loope
aas
je
jmp
in
lods
mov
psubsw
pop
imul
shll
sbb
push
mov
cmp
mov
test
mov
push
mov
fnsave
leave
pop
or
adc
push
mov
xlat
stos
stos
xor
fidivs
testl
adcb
inc
imul
ret
xchg
adcl
fs
mov
push
loope
popa
popf
add
pop
and
mov
dec
mov
and
cmpsl
pop
jo
xchg
stos
push
fcmovnu
cmp
and
mov
adc
xchg
mov
mov
xlat
insl
icebp
mov
inc
push
cmp
and
arpl
push
int
int
lock
inc
jns
pop
xchg
pop
dec
popa
scas
cmp
xchg
mov
fadd
ret
dec
dec
test
imul
arpl
mov
inc
xchg
mov
dec
dec
push
inc
jmp
lds
test
leave
xchg
fcoms
mov
mov
cltd
or
dec
insl
test
push
dec
pop
xor
push
and
mov
inc
pop
pop
sbb
lret
repnz
insl
mov
sub
test
jb
jnp
shrl
add
loopne
xor
push
mov
sahf
ds
pop
test
xchg
xor
xor
xor
and
jno
xchg
dec
mov
sbb
clc
insb
adc
ror
iret
mov
adc
pop
sbb
aaa
mov
rclb
mov
jae
gs
cld
mov
loope
popa
ss
add
adc
sub
fucom
inc
sbb
pusha
cs
mov
clc
lahf
push
add
and
mov
movsl
out
arpl
lods
enter
xor
jo
inc
sbb
push
aad
enter
inc
add
int
and
popf
adc
rorb
icebp
mov
ja
fisubrl
mov
or
xor
jne
push
xor
or
xchg
pop
pop
jb
outsb
pop
idivl
xor
cmpsb
jne
inc
dec
int
sbb
shlb
test
adc
movsb
mov
dec
jp
and
add
aas
dec
xor
daa
cmpsl
stos
rorl
cli
mov
sahf
dec
imul
iret
jo
or
mov
loope
pop
sbb
xor
cmpsb
mov
mov
fldt
sbb
adc
cwtl
pop
jae
negl
in
add
ror
adc
aam
mov
loopne
rcrl
imul
dec
adc
repnz
iret
mov
xor
xor
jb
pop
hlt
xchg
mov
add
sbb
popa
and
sub
out
lods
inc
pop
aas
pusha
jo
push
in
js
addl
sbb
das
lret
out
adc
testl
fcmovb
add
imul
gs
jl
leave
popw
add
push
js
mov
pop
cmpsl
dec
xor
inc
jmp
movsl
sbb
andb
add
add
inc
in
fdivr
iret
imul
inc
lcall
pop
and
jmp
imul
aam
xor
mov
jo
adc
fsubrs
pop
test
sbb
and
add
mov
lods
jecxz
mov
xchg
cmp
loopne
lret
dec
pop
lahf
fs
jp
inc
iret
mov
fcoms
adc
cmp
pop
scas
pop
sbb
pop
dec
lock
xor
cmc
push
clc
and
xchg
mov
sbb
dec
push
mov
dec
adc
pop
adc
divb
ret
subl
out
adc
sbb
das
pusha
fbstp
add
xor
mov
andb
push
fldcw
inc
lcall
sbb
out
ljmp
rclb
cmp
leave
add
arpl
lret
mov
leave
dec
shlb
push
icebp
add
adc
pop
test
fdivrs
add
jnp
outsl
pop
inc
add
cld
test
dec
aam
daa
pop
fldl
out
xor
inc
xor
add
and
cmp
mov
pop
mov
mov
and
adc
mov
and
dec
add
mov
scas
xchg
lods
sub
cmpsl
andl
or
adc
dec
and
adc
arpl
push
cmp
or
in
push
ficoms
xchg
jo
loope
pop
add
pushf
cmp
dec
pop
loopne
adc
sbb
jle
mov
cmc
xor
pop
push
lods
int
ret
push
adc
jo
lods
adc
inc
push
iret
jno
cmp
test
fildl
lock
xchg
xor
and
aad
fdivrs
rolb
shlb
xor
mov
fistpll
orl
jo
jnp
mov
mov
out
push
aam
add
jecxz
es
and
adc
push
inc
sbb
or
mov
lahf
xor
es
lret
sbb
test
clc
out
or
jns
jo
fdivl
or
andl
or
push
push
add
adc
dec
jl
cmp
into
ret
lods
sbb
popa
mov
or
popa
daa
or
jno
push
pop
xor
aam
jmp
leave
ficoms
xlat
pop
jnp
sbb
leave
xlat
movsb
fldl2e
pop
fnsave
add
push
in
pop
pusha
scas
add
or
push
add
xor
roll
out
add
mov
push
enter
jecxz
jecxz
dec
add
andl
or
leave
and
jno
ss
push
lret
subb
fisubs
call
mov
filds
out
xor
sbb
and
daa
jecxz
push
fwait
ljmp
mov
cmp
movsl
lods
xor
dec
jl
fnsave
jns
lea
shll
push
lds
scas
sbb
push
movb
mov
int3
lods
add
fmulp
add
mov
lock
pop
lahf
or
push
xor
pop
jo
sub
lret
sti
inc
or
mov
add
and
sub
push
add
dec
adc
inc
aaa
mov
test
es
mov
xor
dec
fcomps
addl
push
subb
adc
pop
and
xchg
and
xor
sqrtps
popf
ret
add
inc
pop
and
iret
add
es
pusha
mov
push
int
mov
adc
mov
mov
xor
push
jl
add
stos
xor
pop
std
das
pop
mov
movb
sub
clc
nop
cmp
jecxz
push
imull
lods
pusha
iret
fcompl
mov
add
or
sub
jle
and
add
orl
int
xchg
test
and
nop
pop
xchg
loope
add
push
xchg
outsl
bound
popf
outsb
push
fs
mov
inc
faddl
mov
jl
lds
sbb
adc
fsubs
loopne
inc
imul
dec
pop
mov
mov
lcall
js
unpckhps
ret
and
xchg
test
inc
negb
jle
pop
dec
and
add
mov
test
cmpsb
mov
cmp
pop
add
or
jno
add
or
test
aaa
mov
push
sti
add
and
or
orl
adc
xor
dec
ret
mov
sbb
mov
pop
sub
int3
sbb
ror
ret
mov
lods
ret
xchg
incl
repnz
push
iret
mov
jb
add
pop
push
vpshufd
xchg
and
and
jl
les
sahf
xchg
pop
jbe
stos
pushf
pop
aad
push
xchg
popf
ja
test
ljmp
stc
sarb
test
sbb
in
movsb
mov
outsb
or
adc
add
adc
sub
inc
popl
dec
pop
mov
lea
sub
movsb
addr16
mov
or
cmp
sahf
xor
or
into
xor
sahf
mov
ss
int
xchg
ret
jo
fmuls
sbbb
enter
mov
push
or
pop
sbb
fcmovnu
test
insb
inc
inc
out
int3
test
push
and
je
xchg
shrl
cmp
adc
sub
lret
push
scas
cmpsl
outsl
imul
outsb
addr16
mov
sub
inc
fwait
and
dec
mov
push
xchg
cltd
je
ss
add
je
sbb
xlat
mov
ficompl
and
out
mov
ds
or
adc
xchg
je
shlb
pop
cmp
rcll
es
fiaddl
sbb
adc
les
adc
or
std
daa
cmpsb
icebp
clc
inc
or
lock
movsb
sub
popa
jl
sub
dec
pop
mov
or
mov
or
sbb
push
popa
and
movsb
in
or
jns
mov
xchg
popa
xor
inc
cmp
jbe
adc
lret
xchg
aas
add
push
popa
sub
jge
add
cmp
stos
adc
mov
xchg
flds
inc
inc
cltd
pusha
cli
icebp
aas
mov
xchg
les
mov
xor
dec
in
or
movsb
stos
xchg
nop
sub
sub
push
sbb
mov
and
sub
clc
loopne
push
push
or
arpl
in
icebp
imul
insl
aam
sub
ja
pop
push
rclb
hlt
movsl
inc
loopne
xchg
xchg
inc
xor
dec
xor
lcall
jns
inc
mov
negb
bound
mov
xchg
popa
jbe
out
add
faddl
adc
dec
sub
inc
out
iret
add
test
cmp
fs
rcrb
or
sbb
addr16
add
addr16
add
into
fnstsw
rclb
push
int
or
adcl
js
fsubrs
fsubrs
push
ljmp
xor
inc
jnp
imul
xor
cld
test
stos
ja
jbe
scas
adc
sahf
jmp
das
inc
pop
fcmovnu
and
cmp
sub
or
lock
or
add
xor
insb
in
fistps
xchg
ss
aam
daa
jo
les
sbb
xor
lret
fisttpll
xchg
xor
add
pop
jnp
shl
adcl
ds
popa
ret
or
sbb
adc
lock
imul
mov
xchg
or
aas
sbb
push
rcrb
fiadds
imul
xor
sbb
mov
or
fwait
add
sub
mov
pop
inc
lock
addr16
or
adc
scas
je
sub
pop
xor
inc
out
sub
push
jb
popf
popf
fisttps
add
xor
sbb
mov
add
scas
outsl
and
pop
ret
sub
mov
pusha
cmpsl
test
xchg
call
xlat
ret
hlt
sbb
and
popa
js
xor
and
mov
mov
es
nop
jecxz
arpl
push
test
pop
or
mov
cmp
jb
or
and
mov
adc
sbb
ret
mov
aas
dec
add
cld
add
jbe
sub
cmpsl
dec
pop
jmp
mov
inc
lods
lds
sbb
xor
inc
outsl
inc
stos
inc
sti
stc
add
adc
das
push
inc
popa
adc
and
mov
ret
outsb
aas
mov
or
or
lret
into
xor
mov
dec
ja
call
add
mov
aaa
jno
pop
jle
or
in
inc
cwtl
rcrb
and
les
inc
push
je
movsb
dec
inc
inc
lea
sbb
and
imul
jne
lret
int
jae
ret
aam
sub
and
lret
sbb
cmpsb
pop
xchg
jle
lret
mov
push
cmc
fidivrl
cmp
cmp
ss
dec
shlb
mov
mov
adc
cmp
lods
nop
add
sub
stos
jae
xor
movsl
lea
mov
mov
mov
sub
sbb
push
adc
xor
sub
or
sub
cmp
das
or
das
orl
xchg
push
subb
orb
sbb
sarb
int3
mov
sbb
push
pusha
je
pushf
out
hlt
ret
dec
sarl
jp
mov
xor
sbb
pushf
ja
pop
mov
js
mov
sbb
xor
dec
pop
add
mov
test
push
daa
dec
nop
pop
sbb
pop
mov
inc
ljmp
aam
pushf
es
dec
add
sbb
pushf
setne
jae
lret
xchg
pushf
fwait
imul
leave
std
lcall
xchg
inc
int3
mov
lods
xorb
xchg
xor
sub
mov
or
dec
mov
addl
push
dec
push
xchg
push
xchg
ret
orb
dec
ret
xlat
iret
xchg
add
mov
sub
sbb
sbb
mov
xchg
cmpb
arpl
test
fcmovb
add
out
sti
mov
push
pop
push
pop
xchg
cmp
add
add
cmc
dec
dec
push
jle
adc
add
or
jb
mov
xchg
mov
jo
mov
push
xchg
in
adc
fs
daa
jnp
xchg
aam
jmp
shlb
lea
inc
or
sarb
push
xchg
bound
rcrl
adc
jecxz
dec
mov
dec
nop
add
adc
mov
popa
arpl
mov
add
fnstenv
dec
jae
xchg
add
xchg
pop
mov
sub
mov
cmpsl
arpl
inc
lods
xchg
xchg
lahf
arpl
adc
lods
enter
iret
ja
lahf
add
dec
fcomps
aaa
pop
push
dec
mov
mov
lea
aad
add
xchg
popa
cld
mov
xor
nop
add
add
mov
xchg
adc
stc
push
or
push
fs
xchg
nop
sub
sarl
cwtl
sti
push
out
pusha
jne
cmc
or
aad
jmp
jb
push
lods
cmp
xchg
jne
xchg
and
test
and
ja
mov
xchg
clc
ret
sub
cltd
xorb
or
popf
xchg
pop
les
data16
push
fwait
pop
mov
subl
decb
adc
movsb
mov
jns
sbb
pusha
xchg
sub
sbb
cmp
flds
push
pop
xorl
push
inc
mov
mov
and
or
cmp
jle
push
scas
sbb
push
scas
xor
adc
add
fiadds
dec
iret
aas
cmp
mov
sbbl
push
mov
mov
mov
add
ljmp
mov
iret
mov
push
lahf
inc
sub
adc
sbb
addb
lea
fcomps
cmp
push
adc
test
push
mov
rcl
adc
ljmp
lret
mov
xor
lahf
push
cmpsl
add
add
or
mov
dec
xchg
popa
sub
push
push
adc
or
push
addl
dec
mov
test
adc
ja
and
sub
sbb
pop
add
lds
dec
pop
imul
iret
push
test
in
hlt
push
mov
fldl
inc
mov
pop
lea
xchg
out
add
arpl
jl
or
add
mov
dec
add
pop
ljmp
adc
sbb
or
arpl
add
das
lcall
mov
sub
push
xor
pop
sub
push
adc
pop
ljmp
inc
aam
daa
xor
mov
jo
pop
add
dec
adc
or
enter
es
mov
pop
das
jp
mov
mov
xor
sub
add
and
bound
sbb
fcoms
dec
pop
stos
adc
addr16
sub
das
adc
mov
push
fidivs
adc
aad
inc
sub
xchg
arpl
lea
sahf
sbb
sub
sbb
dec
lea
inc
xlat
iret
jbe
addps
pop
je
and
sub
imul
adcl
mov
dec
ret
dec
or
add
mov
mov
xchg
dec
cmp
xchg
mov
jo
inc
aaa
rclb
push
jbe
jae
xchg
mov
sbb
js
mov
fistps
popa
sub
lock
ljmp
add
fdiv
add
jle
dec
dec
inc
iret
mov
push
xchg
jns
cmp
cld
mov
pusha
sbb
clc
pop
lods
mov
in
jmp
add
or
loop
sbb
xchg
dec
mov
clc
inc
xchg
dec
lods
jp
ret
pop
mov
mov
lods
popf
fwait
adc
cmc
add
out
dec
out
sarl
out
leave
cmp
andl
push
xor
rol
dec
loopne
lods
mov
out
and
roll
test
addl
add
lods
pop
or
dec
negb
inc
pusha
adc
cmp
cmp
dec
popa
mov
inc
jbe
call
sub
cwtl
addr16
test
movsb
loopne
cld
scas
bound
sbb
or
jno
aaa
xchg
jmp
sub
out
xchg
adc
xor
sub
daa
insb
insb
xor
push
push
mov
sbb
jno
and
sub
jns
jne
pusha
push
add
xor
in
hlt
and
mov
lock
pop
mov
andl
popf
andl
mov
pop
jb
cmp
sbb
push
or
pop
sub
xchg
dec
cmp
enter
xchg
dec
jp
add
jmp
mov
sbb
outsl
adc
xor
stos
push
jbe
push
and
lock
lods
cltd
movsl
das
insl
or
pop
add
cmp
je
xchg
xchg
movsl
push
adc
pop
rclb
ja
out
pop
cmp
hlt
adc
into
xor
inc
jle
sbb
je
subl
and
je
push
xor
dec
cmpl
mov
roll
lahf
loopne
mov
mov
rolb
add
xor
out
fwait
test
lock
push
mov
aam
aad
cmp
xor
mov
adc
xchg
in
xor
js
es
shrl
je
aaa
js
or
push
rol
sub
or
and
push
cmpsl
scas
push
repnz
add
das
data16
sti
fldcw
sub
add
add
fsts
add
test
clc
lds
sub
mov
int
pusha
push
add
cld
in
push
lahf
jns
fldenv
pushl
enter
cmpb
rorb
rcrb
ret
xor
inc
and
bound
int3
or
inc
cmp
push
leave
dec
dec
dec
adc
xchg
shl
outsl
add
sti
ret
std
insl
movsb
add
cmp
test
out
or
or
xchg
cmp
sub
xchg
bnd
pop
rclb
or
ret
mov
adc
js
xchg
loope
sub
scas
aaa
insl
jl
dec
mov
dec
lods
mov
arpl
xor
mov
stos
imul
add
xchg
sbb
rol
lods
xchg
cmc
inc
xor
in
je
and
and
sbb
jge
xchg
xchg
push
lds
lea
js
or
fprem
add
add
pop
dec
pop
mov
mov
ret
dec
ljmp
es
mov
ja
repnz
dec
push
mov
push
push
addb
mov
mov
or
js
inc
insl
sbb
ds
adc
iret
stos
sub
movb
clc
xor
mov
inc
mov
lea
loopne
clc
lock
push
xor
mov
pop
pop
add
in
in
out
jecxz
sub
and
repnz
shlb
mov
mov
sub
addr16
or
push
dec
sub
clc
push
dec
add
jno
fs
pop
adc
fs
cmp
cli
mov
in
dec
pop
lock
iret
sub
and
inc
or
lods
out
push
subb
adc
jecxz
gs
and
sbb
adc
sub
clc
les
imul
sahf
and
xlat
or
mov
and
sbb
adc
inc
aas
and
stos
jae
add
test
xchg
add
movsl
or
xor
or
into
int3
add
sub
add
pushf
or
mov
mov
add
mov
das
xchg
es
shlb
pop
xchg
das
sub
test
mov
sahf
add
pop
ret
and
xor
and
stos
pushf
jbe
sub
aad
lret
cltd
xor
jbe
adc
mov
arpl
fistl
xchg
inc
js
and
xor
lock
jbe
add
iret
xor
fsubrs
add
add
fildll
movb
mov
dec
lds
cltd
add
jne
cmpsl
aam
cs
add
pop
adc
mov
add
push
xchg
lret
inc
xchg
adc
or
push
sti
push
push
sarb
adc
jle
pop
xor
loope
loopne
push
mov
dec
or
sub
pop
or
mov
das
and
mov
sub
or
xchg
mov
sbb
fs
xchg
inc
pop
test
ds
loopne
out
ds
enter
xlat
popa
fwait
insb
lods
into
xchg
outsb
mov
add
movsl
adc
addr16
jl
fs
scas
cmp
push
inc
dec
cmpsl
and
xor
or
incl
dec
mov
fsubr
inc
cld
pop
cmp
sbb
fcoms
push
push
movsb
ljmp
loopne
mov
pop
mov
jne
fcmovne
push
mov
loope
addl
xchg
outsl
loope
orb
sub
movsl
jbe
js
jecxz
cmp
rclb
sbb
iret
pop
mov
mov
fwait
or
push
push
mov
cmc
pop
xchg
mov
sub
test
mov
out
add
adc
xchg
lret
push
cs
test
xor
push
roll
jp
outsb
lret
or
mov
cmp
or
fildl
sahf
ret
in
mov
add
add
inc
xchg
std
test
adcb
and
adc
imul
or
outsl
push
test
testl
xor
icebp
adcl
addl
dec
adc
xor
loopne
cltd
adcl
pop
xchg
sti
fistl
pusha
inc
add
add
mov
push
inc
push
and
xchg
lods
jae
xor
push
mov
add
imul
movsb
mov
andl
xor
lods
pop
mov
les
fildll
and
jb
ret
cmp
insb
and
jno
pop
add
xor
imul
jge
and
adc
cltd
js
in
add
test
sub
dec
jno
cmp
ja
loop
mov
movsb
xchg
insl
push
sub
scas
xchg
jo
sub
ret
dec
mov
xor
xor
pop
xchg
sbb
pop
fadds
cmc
add
enter
test
inc
mov
jae
adcb
sub
pushf
mov
mov
js
or
jno
inc
sbb
dec
or
lds
je
xor
imul
mov
push
mov
sub
pop
inc
inc
mov
cmp
aad
repz
test
cmc
addr16
pop
movb
das
sbb
movsl
int3
push
sub
outsb
and
outsl
aaa
test
cmp
das
in
into
add
jno
push
lods
insl
mov
in
andnps
xchg
or
popa
les
cltd
fs
mov
mov
sbb
sbb
in
or
and
lods
mov
sub
imul
lock
std
cmpl
fsubr
xchg
jbe
and
movsb
inc
mov
int3
cvtps2pi
shlb
stc
call
adc
pushf
dec
jbe
mov
sub
and
add
and
push
rol
addr16
aad
cs
mov
xor
in
add
inc
xor
inc
inc
pop
sti
adcl
aaa
or
mov
je
adc
inc
adc
cmp
int
adc
aaa
add
mov
mov
pop
inc
push
aaa
jge
adc
add
cmp
gs
dec
in
aaa
jmp
adc
xor
pop
ja
lea
jns
push
push
shrb
add
jmp
push
push
xlat
xchg
cmp
sarb
sub
jne
pop
xchg
mov
and
inc
hlt
xor
das
js
les
cmp
scas
int3
inc
mov
jl
and
inc
mov
icebp
mov
mov
shrl
mov
mov
dec
adc
mov
mov
dec
adc
add
sbb
pushf
inc
inc
inc
pop
add
pop
pop
jne
pop
jmp
out
push
icebp
mov
inc
fwait
jo
push
dec
xor
mov
jae
addr16
aaa
inc
jbe
push
or
pop
movsl
and
loopne
dec
scas
es
movsl
scas
fidivs
mov
pop
sub
cmp
or
mov
push
jmp
push
gs
lds
rol
es
iret
repz
ficoml
add
pusha
mov
push
add
inc
inc
loope
push
fstpl
pop
fidivrl
or
shrb
cmp
or
jle
leave
test
inc
bound
mov
sbbl
mov
in
popa
test
sahf
or
dec
test
adc
pop
ret
mov
xor
xor
das
scas
sub
insl
and
dec
sbbl
cmp
cmpsl
sub
and
xor
inc
sbb
test
xor
and
mov
pop
iret
dec
pop
inc
sbb
rcrb
sbb
jle
sbb
inc
iret
cmp
ret
pop
pop
rcl
lea
shrb
mov
ret
aam
dec
add
pop
mov
cltd
mov
inc
or
cmp
add
mov
in
or
jecxz
pop
adc
mov
cmp
pop
adc
aad
sbb
mov
xchg
mov
lods
mov
fsts
mov
mov
or
fdivrl
decl
mov
jle
popa
mov
inc
jecxz
sub
pop
push
sub
orl
sbb
test
inc
ftst
pop
fs
in
or
xchg
cmp
ret
sbb
mov
mov
insb
sbb
mov
fildl
sbb
scas
add
or
cmp
and
movlps
aam
cmp
scas
and
aas
flds
shl
nop
imul
lods
arpl
adc
mul
outsb
out
outsb
jb
xchg
ret
test
imul
andl
pop
loopne
es
jne
add
lea
and
jp
cwtl
dec
fmul
add
cmp
cmp
jb
xchg
dec
movsl
jae
xchg
xchg
fiaddl
aad
or
sub
add
jecxz
push
sub
and
mov
sbb
adc
cmp
xor
cmp
sbb
test
lds
jge
jne
add
mov
xchg
cmp
xchg
stos
rcrb
ljmp
mov
xchg
cmpsl
add
ss
or
mov
mov
pop
inc
xchg
aas
sbb
mov
xchg
iret
cmpsb
lret
sub
sub
daa
xor
push
mov
ds
cs
mov
dec
pop
scas
jnp
mov
mov
lahf
mov
xchg
and
xchg
scas
lock
lods
and
in
sbb
adc
loopne
adc
cltd
mov
pop
fwait
out
mov
sbb
xchg
cmp
adc
pop
call
mov
enter
iret
add
jle
addr16
int
mov
jecxz
in
push
jp
dec
out
mov
call
clc
push
lea
inc
sbb
xor
loope
pop
cwtl
adc
dec
lods
xchg
test
int3
loope
mov
push
ds
repnz
cld
pop
pop
or
add
outsl
fistl
out
push
test
loopne
mov
fildll
push
xchg
push
movb
bound
xchg
sbb
pop
daa
xor
push
shrl
dec
call
or
and
call
sbb
pop
test
rorl
std
jno
notb
bound
xor
scas
dec
pushf
sbb
xor
mov
addl
ja
xchg
or
sbb
push
movsb
sbb
js
push
cltd
int3
ss
xor
cmp
fsub
and
arpl
jno
dec
jae
andb
xor
test
xor
jle
stos
outsb
pop
insb
mov
xor
out
mov
rolb
mov
subb
aaa
lock
mov
les
das
mov
mov
loope
sarl
add
xchg
ror
cmc
repz
outsl
sbb
dec
fs
xor
stos
and
add
sub
lods
xchg
testl
test
mov
fs
add
repz
ret
dec
and
fldl
adc
aad
test
scas
or
xor
jno
pop
cs
or
jo
inc
mov
sbb
add
mov
fcmovnu
insb
sti
ret
push
jp
and
rclb
rclb
ret
cld
or
outsb
or
iret
and
ret
addb
rcrb
daa
add
daa
ds
imul
jns
enter
out
add
shrl
sbb
lods
mull
sub
push
inc
rclb
in
inc
idivb
mov
and
loopne,pn
lahf
push
sti
adc
push
dec
adc
rclb
xor
mov
mov
push
daa
cmp
push
out
leave
add
and
sub
sbb
call
loope
sub
iret
fidivl
add
and
arpl
pusha
movsl
outsl
jmp
or
call
into
xchg
sbb
iret
add
popa
xor
add
fs
cmp
mov
add
or
cmp
rcrb
int
in
sbb
cmpb
jmp
into
jle
popa
aaa
jle
mov
arpl
or
sbb
mov
pop
dec
inc
sub
sub
test
inc
jbe
and
lock
jno
adc
sahf
dec
push
mov
or
es
push
pop
add
pop
sub
inc
lret
adc
jo
inc
insl
xor
jne
jecxz
inc
in
bound
xor
mov
arpl
movsb
shrb
lahf
movsl
jo
insb
xor
mov
inc
pop
xor
aam
stos
mov
loopne
fsubrp
push
test
cmp
repz
push
and
mov
mov
imul
xor
cmp
cmp
mov
inc
dec
xor
add
pop
incb
loop
shll
xor
mov
jne
or
ret
stos
adc
or
je
push
add
roll
sahf
push
dec
test
cmp
mov
aas
mov
aad
or
loop
movsl
xchg
jmp
shll
xorl
cld
mov
in
stos
gs
clc
wbinvd
ja
stc
sbb
int3
sbb
pop
mov
xor
mov
mov
sti
insb
cld
jb
mov
pop
and
and
mov
fucomip
add
dec
jns
inc
cli
xchg
sbbb
rclb
roll
decb
sbb
add
mov
inc
iret
stc
test
xchg
or
or
mov
insb
inc
xlat
mov
fstp
mov
fsubrs
cmpsl
loop
or
or
pop
mov
add
ds
aas
add
subb
jle
jnp
xchg
fdivs
or
xor
enter
movsb
ret
cmp
aad
in
stos
cs
mov
outsb
test
cmpl
sub
iret
shlb
sub
and
ja
repz
sub
outsl
add
test
out
dec
ljmp
rcrl
add
dec
iret
jns
daa
cwtl
rolb
into
rcll
inc
sbb
add
imul
rcrl
jecxz
add
out
bound
push
sbb
repnz
pop
mov
jle
imul
and
enter
adc
pop
add
icebp
adc
loope
and
push
cmpsb
insb
xor
push
sbb
or
cmp
cmp
repnz
cmp
add
fs
pop
cmp
xchg
or
pop
js
add
clc
dec
pusha
jmp
or
push
test
inc
dec
xor
mov
fcoml
xlat
cwtl
push
jbe
add
add
int
xchg
jge
push
sbbb
popa
and
jecxz
jl
jl
xchg
fisubrl
lfs
enter
mov
push
or
dec
pop
inc
movsb
mov
orl
imul
dec
ja
clc
jl
push
push
dec
push
out
aam
dec
movsl
push
or
inc
or
sbb
or
and
inc
int3
jle
in
and
adcl
loop
ret
push
cmp
ret
inc
popa
loopne
addr16
lods
nop
add
mov
fdivl
shrb
daa
xor
je
or
lahf
xchg
test
outsb
add
aaa
in
cmpsb
test
popf
dec
cli
fwait
adc
xor
add
sub
fwait
xor
fsub
outsl
push
sbb
dec
and
mov
stos
aaa
movsl
adc
pop
das
sub
mov
jle
scas
imul
sub
push
xchg
dec
or
ret
test
inc
into
pop
int3
add
shll
adc
pop
lret
push
stc
pop
sbb
scas
ja
les
xor
mov
fcomi
push
and
les
out
sbb
fcoml
fistl
push
and
enter
xor
push
mov
shlb
aad
pop
test
xchg
pop
cwtl
les
out
add
inc
dec
mov
add
popa
sub
add
adc
jg
pop
insb
sub
movsl
pop
pop
into
movl
fstpt
cmpsb
adc
aam
add
cwtl
xor
movsl
mov
pop
push
pop
mov
rolb
inc
in
sub
pop
pop
push
pop
push
add
daa
cwtl
mov
mov
lcall
dec
mov
xchg
add
or
xchg
pushf
and
or
addl
in
inc
add
aas
mov
sbb
push
sbb
pusha
mov
add
xor
jae
pop
subl
dec
fstpl
clc
and
mov
loopne
xchg
push
jbe
cmp
rcrl
in
lret
dec
lock
mov
mov
scas
ffree
cmp
fstl
and
cld
scas
test
and
into
xor
imul
or
add
aas
mov
add
imul
add
and
cmpsb
push
lock
mov
push
add
add
mov
or
insb
ret
aas
mov
push
inc
adc
sbb
mov
add
ljmp
and
mov
hlt
stc
jecxz
adc
cmpsb
lods
add
mov
add
adc
push
enter
jmp
loopne
jecxz
out
cs
or
add
clc
movsb
iret
push
sbb
cwtl
loopne
xchg
mov
std
jle
jp
repnz
and
js
mov
pop
out
in
and
mov
mov
dec
push
icebp
inc
xchg
sbb
das
rcrb
mov
mov
add
nop
jp
mov
cmpb
dec
pop
sbb
mov
inc
adc
xor
mov
or
sub
mov
mov
add
mov
push
das
xor
test
add
or
add
cmp
movsb
push
mov
lahf
add
inc
bound
sub
and
sbb
xor
inc
in
dec
sub
jbe
imul
dec
push
pop
and
dec
repz
and
cmp
in
pop
incl
xchg
pop
xchg
test
mov
dec
imul
cmp
stos
cmpsl
and
pusha
push
and
sbb
pop
add
test
pop
sub
ret
sub
insb
fs
lea
sub
xchg
and
sahf
push
jae
add
sub
mov
and
mov
pusha
adc
sub
dec
inc
test
and
push
sub
and
js
das
or
or
push
inc
test
popa
les
loopne
xlat
dec
cmp
dec
sub
lret
arpl
aad
leave
dec
pop
enter
fmul
mov
ret
test
mov
adc
dec
shlb
dec
push
enter
jns
mov
loopne
mov
dec
rcrb
outsl
es
out
sbb
test
iret
out
stc
lods
stos
xchg
add
xor
add
pusha
adc
sbb
push
adc
sbb
addl
mov
push
subb
xor
inc
loope
dec
frstor
xor
mov
and
aad
movsb
sub
dec
add
popf
mov
jne
fistpll
xor
imul
xor
and
pop
jne
ljmp
rclb
inc
adc
xchg
inc
jbe
gs
cmp
inc
pop
fadds
xor
test
pop
in
jmp
xor
inc
call
xchg
or
movsb
pop
out
je
or
outsl
pop
adc
dec
les
xchg
test
sbb
and
mov
xchg
push
add
fidivl
inc
arpl
scas
mov
aad
jecxz
jae
dec
xchg
adc
sbb
pop
push
inc
fs
add
addb
sub
xchg
xchg
cmpsl
or
dec
in
and
dec
iret
mov
inc
inc
dec
and
and
dec
sbb
loopne
outsb
stos
mov
add
insb
push
call
fldcw
cmp
cs
movsl
lcall
imulb
cmp
sbb
pop
sub
cmpl
into
pop
inc
sbb
testb
adc
inc
cmp
cmp
xor
jle
or
outsl
popf
add
mov
jne
lods
dec
rcr
add
insb
sbb
loopne
xorb
subl
pop
mov
mov
popa
daa
dec
insb
adc
push
mov
lea
adc
mov
sbb
pop
test
xor
push
stos
jno
es
push
push
dec
pusha
leave
add
adc
add
jl
add
stos
sub
push
inc
xor
les
xorl
call
inc
add
addl
mov
inc
data16
xor
mov
or
cmp
lret
dec
dec
ds
popa
mov
movnti
pop
xchg
fs
ja
test
or
add
push
adc
mov
xor
xchg
xor
xor
add
mov
out
orl
fisubl
stos
lock
pop
push
jmp
mov
pop
cmpsb
daa
test
xor
adc
movsl
sbb
pop
xor
or
cmc
jmp
add
and
sbb
ljmp
pushf
add
sti
and
jle
fdivrs
pop
push
sbb
sbb
pop
push
testb
push
add
jg
inc
icebp
jecxz
xor
add
fs
dec
lret
pop
push
mov
xlat
add
lahf
xor
sbbb
dec
pop
cmp
xchg
lods
jbe
inc
iret
xchg
add
rolb
push
movsl
mov
sub
sbb
inc
sarl
cmpsb
xor
push
pop
xchg
xchg
sahf
lods
add
mov
mov
push
mov
scas
dec
xchg
pop
xor
pusha
jmp
lret
mov
mov
roll
lods
nop
cltd
loope
mov
loope
sbb
rol
lahf
pop
pop
rcrb
or
es
jmp
adc
mov
imul
fnsave
adcb
xor
mov
cmpl
cmp
mov
or
out
jle
dec
xor
pusha
inc
add
pusha
ss
fwait
add
push
rorl
inc
sub
cmp
cmpsl
ss
sub
stos
sub
loope
cmp
sbb
repz
mov
cmpl
push
std
push
inc
repz
and
push
cmp
iret
push
lret
ficomps
cmp
add
dec
sbb
jecxz
arpl
sbb
jmp
mov
or
dec
lret
inc
or
in
xlat
insl
jo
loopne
fisttps
and
mov
fwait
test
mov
sti
adc
shrl
add
mov
mov
cmc
repnz
sbb
icebp
fwait
mov
xlat
add
cli
add
lock
inc
rolb
mov
push
nop
jo
dec
xor
push
stos
gs
sbb
adc
rclb
imul
fsts
lret
popa
lret
ja
loopne
loope
and
xchg
pop
aam
clc
test
sub
mov
jne
aad
cmp
mov
pop
rcl
jne
cmp
rclb
lock
out
xchg
push
or
xchg
rclb
arpl
push
cmpsl
imul
push
stos
test
and
in
mov
neg
dec
mov
addb
mov
rcrb
push
add
sub
add
or
xor
push
push
xchg
loopne
andl
add
and
aad
ret
imul
xor
in
cmpsb
jbe
push
and
inc
shll
mov
add
int
xchg
ret
cmp
mov
fldl
push
add
mov
adc
mov
jmp
pop
or
je
pop
or
jno
ljmp
adc
mov
push
sbb
or
orb
mov
outsb
xor
jl
popf
outsl
mov
push
fcomps
loop
rcl
mov
addr16
cmp
jge
fs
push
fnstenv
dec
mov
fs
es
pop
add
sbb
add
xchg
aaa
pusha
sbb
lock
cmpsl
data16
dec
and
adc
cmp
adc
insl
loop
inc
pop
cmp
sbb
call
sbb
lods
xchg
outsl
ss
cmp
adc
mov
cmp
leave
mov
inc
and
xchg
cmp
inc
xchg
push
in
inc
adcl
add
pusha
add
imul
adc
cmc
pop
loop
or
or
push
mov
pop
imul
push
and
xor
inc
sub
ja
ret
sbb
xor
aas
add
or
push
in
std
jmp
sbb
sbb
out
adcb
cwtl
and
adc
inc
es
and
and
test
sbb
mov
lret
ss
insl
pop
test
sub
in
push
sub
push
rcl
adc
pop
imul
inc
or
inc
push
nop
mov
ja
xchg
les
mov
lahf
mov
fs
sub
xchg
xchg
ljmp
and
pop
btrl
dec
inc
adc
or
xor
push
fsts
and
lcall
jge
mov
cmp
mov
int
dec
add
sbb
mov
mov
adc
lcall
addb
xchg
in
pop
imul
sahf
add
popa
push
stc
or
cltd
loopne
arpl
add
es
test
sarb
mov
test
cld
shl
loope
mov
xor
lcall
sbb
mov
push
add
das
push
adc
bound
push
iret
inc
sub
cmp
insb
loope
in
adcb
push
ret
test
sbb
mov
xor
or
add
std
testl
cmp
cmpb
adc
inc
pop
out
scas
xor
or
movsb
mov
sub
scas
xorb
inc
jecxz
add
add
inc
pop
movsl
jmp
dec
cmp
add
aad
mov
inc
in
jo
pop
test
push
mov
lret
adc
add
inc
dec
sbb
mov
mov
loop
repz
and
mov
int3
dec
jg
xorb
lea
or
enter
xorb
loope
testb
movsb
mov
test
idivl
mov
js
popfw
insl
scas
push
int
in
test
pop
jo
js
daa
jle
bound
push
pop
adc
es
sti
mov
dec
loope
mov
scas
xor
push
cmp
push
push
movsb
fs
faddl
aad
test
sub
popa
add
divl
inc
ret
outsl
leave
aam
xor
cwtl
and
addb
lahf
sbb
pop
fcmovnb
pusha
jo
pop
jb
xor
and
hlt
xchg
andl
cmpsl
jb
add
dec
cmp
leave
cs
dec
cmp
scas
add
jno
and
xor
lea
pop
cli
jne
or
sub
or
shr
xchg
roll
add
sub
jno
daa
adc
push
jo
lods
je
icebp
or
mov
pop
or
or
js
add
cld
fcmovbe
movl
sub
fcoml
ret
popf
scas
add
jb
push
rorb
dec
xchg
pop
fiadds
cmp
outsb
xor
fbld
repz
test
lods
add
push
inc
adc
loop
leave
sub
pop
mov
mov
add
mov
xchg
or
and
insl
outsb
xor
push
inc
push
pop
mov
mov
or
xor
push
push
rcll
popf
add
adc
ret
dec
and
jmp
in
scas
mov
sub
rcrl
mov
pop
jne
adc
xor
imul
dec
testb
dec
out
jp
imul
pop
hlt
mov
inc
mov
xchg
and
add
pop
add
xchg
loop
adc
test
push
push
xor
mov
insb
or
cmpsb
jge
push
cmp
ljmp
mov
inc
nop
inc
and
clc
inc
jp
xchg
pusha
aas
rcll
test
scas
mov
dec
outsl
mov
pop
divl
sahf
inc
adcb
mov
cmp
aam
xor
sti
mov
leave
sub
sub
mov
push
filds
fldcw
mov
push
inc
stos
inc
loop
movsl
ljmp
add
or
and
ret
and
ret
lock
add
test
or
mov
add
inc
mov
movsl
mov
es
aas
xchg
insl
mov
and
adc
add
daa
and
xchg
and
les
stos
das
or
out
fcoml
dec
or
movsl
and
xor
ret
sbbl
pop
in
popa
inc
inc
imul
cmp
inc
add
orl
mov
adc
add
cwtl
dec
sbb
jo
ret
subb
in
nop
in
inc
pushl
pusha
sbb
out
push
rclb
push
cs
out
js
or
imul
out
pushf
lret
lahf
ljmp
add
cld
in
xor
ret
or
sub
lods
jge
sbb
or
rcl
pusha
loopne
pop
dec
push
mov
add
push
mov
and
test
jge
add
mov
ds
xor
test
adc
or
jg
jbe
fsubl
negl
and
mov
sub
xlat
ret
popf
rorb
dec
cmp
pop
divl
loopne
add
and
stos
das
adcl
ss
sub
shll
ss
add
daa
aaa
out
dec
movb
cmp
repz
outsl
das
add
and
push
sub
push
add
mov
mov
mov
dec
push
push
rcrl
das
dec
mov
cld
cmc
shlb
mov
clc
push
add
jge
push
inc
xchg
add
pop
adc
cmpsl
lret
and
add
push
sub
adc
jno
fwait
aas
xor
inc
sub
adc
sub
mov
push
pop
push
add
and
and
mov
shlb
add
dec
or
ss
fbld
dec
mov
mov
shl
xchg
fimull
insl
xchg
or
sbb
addl
aam
add
add
clc
cmp
push
inc
into
xor
xchg
jb
mov
rcl
bound
xor
cmpl
jne
arpl
lret
movsl
lods
aam
fldenv
pop
add
les
add
push
cs
gs
and
mov
adc
or
or
cmp
xchg
rolb
call
pop
rorb
mov
outsl
bound
add
inc
adc
adc
popf
mov
fldcw
jmp
fwait
add
popf
fidivrs
enter
and
stos
popa
jp
je
in
cmp
lock
pop
ja
subl
bound
add
and
leave
sbb
xlat
adc
rolb
lods
cmpsl
push
dec
jb
and
sarb
add
jmp
fst
xchg
cs
and
scas
jp
push
insl
add
cli
mov
gs
push
test
ret
cmp
insb
lods
outsl
push
iret
jno
or
xorl
xor
les
leave
mov
xchg
mov
mov
icebp
fsubrl
or
pusha
push
sbb
repnz
jp
fwait
popa
push
fadd
and
pop
rolb
push
add
inc
mov
cmp
xchg
xchg
push
push
mov
push
xor
push
mov
push
iret
sbb
add
lods
inc
push
xorb
mov
rcl
and
cmpsb
pop
sbb
js
add
arpl
jns
rclb
cld
mov
and
cltd
dec
mov
repz
mov
xor
je
jge
sti
pop
pop
sbb
xor
adc
xchg
lods
loope
sub
mov
pop
adc
sub
popa
pop
xchg
mov
sti
dec
adc
add
scas
je
adc
xchg
and
pop
push
jno
sbb
mov
fistpll
jle
dec
mov
xor
xlat
xorl
jno
mov
xlat
mov
fldt
add
mov
add
sbb
jns
fadds
push
xorb
enter
dec
movsl
sub
jae
leave
sbb
dec
loop
arpl
pop
add
xchg
mov
insl
popa
push
or
sbb
cld
dec
push
icebp
sub
mov
movsb
inc
fisubs
movsb
or
sbb
dec
mov
dec
sbb
movzwl
out
push
iret
movsb
pop
shl
in
or
push
dec
enter
add
sti
and
pop
rorb
inc
adc
lods
push
dec
int3
add
add
push
aaa
xor
lret
ja
test
lss
ljmp
rolb
vaddsd
sbb
lock
sbb
jo
mov
je
push
mov
ds
insl
pop
shll
mov
shlb
or
arpl
mov
jns
push
rolb
pop
cmp
and
jmp
xor
mov
test
dec
cli
push
jne
dec
ret
fnstsw
adc
dec
pop
mov
insl
push
mov
add
movsb
add
adc
into
adc
mov
ds
les
mov
loope
push
fucomip
bound
movsl
dec
cmp
in
jp
cli
arpl
cmp
jle
outsl
sbbl
mov
je
mov
rcr
push
jmp
ja
xor
mov
fstpt
pop
add
mov
lods
push
cmpl
cwtl
adc
add
rorl
push
add
cmpsb
into
daa
pop
or
aaa
popf
inc
lret
fcomp
es
inc
push
lret
xchg
pop
pop
pop
jecxz
lods
mov
inc
ja
fildll
repnz
nop
in
rcl
push
fbstp
repz
dec
xor
daa
movsb
lret
mov
mov
inc
sub
loope
pop
enter
or
lret
sub
inc
xor
mov
jo
push
leave
add
or
fdivrs
ret
ljmp
add
lds
push
jne
dec
xchg
sub
xchg
shl
sub
or
test
jecxz
out
pusha
daa
xchg
mov
inc
dec
dec
dec
xchg
sub
cmp
sub
imul
xor
jb
in
ficoms
mov
lods
push
orb
pop
sbb
mov
pop
inc
push
dec
push
and
xor
paddb
aas
jl
mov
push
lods
or
sub
rcrl
movl
adc
cwtl
lock
dec
jmp
mov
scas
and
xchg
mov
xor
enter
cmp
mov
xor
fistpll
cmp
addr16
daa
push
dec
ret
fs
aaa
dec
ret
inc
sub
pop
pop
inc
shl
jbe
mov
sbb
or
add
add
or
pusha
add
dec
aas
ret
xchg
inc
or
add
inc
sbb
pop
hlt
cmp
rolb
lods
out
jecxz
scas
add
loopne
into
idiv
xor
decl
cmp
pop
aam
mov
mov
or
xchg
or
sbb
push
fildl
ret
push
and
fld
test
sbb
inc
push
and
dec
or
cmp
mov
sbb
in
jae
imul
ljmp
das
push
inc
jecxz
je
fldl
hlt
insb
mov
js
call
pushf
pop
push
or
inc
mov
pop
rclb
movb
or
fcmovnb
loopne
jp
cmpsl
or
jp
faddp
push
pusha
push
pop
or
sbb
pushf
mov
xchg
int
imul
cmc
cmp
adc
aas
leave
add
dec
mov
lret
daa
add
dec
loopne
dec
ret
dec
cmp
outsb
jecxz
push
cmp
shrl
xchg
sbb
inc
adc
aad
add
xor
pushf
cmpsl
outsl
inc
fxch
stos
jmp
mov
adc
mov
aad
jae
out
mov
lahf
dec
leave
nop
aas
js
loopne
lret
push
filds
mov
inc
dec
dec
jno
bswap
mov
repz
or
dec
out
or
jnp
das
and
stos
pop
aaa
sub
ret
mov
sub
scas
scas
pop
ds
insl
mov
shlb
push
les
pop
adc
push
add
es
and
sub
xor
aad
and
dec
lea
pop
or
sbb
ja
idiv
cmp
or
popf
aad
test
nop
push
int3
sub
mov
incl
dec
enter
ja
test
and
outsb
pop
xchg
ja
inc
mov
mov
cs
scas
dec
jbe
add
lea
arpl
scas
clc
xchg
xchg
lret
pop
mov
xorl
stos
imul
push
and
mov
sbb
mov
in
push
push
mov
dec
clc
sahf
mov
or
inc
popa
sub
and
insb
call
rolb
jne
pop
xchg
stos
outsl
mov
push
push
pop
push
xchg
ja
in
cs
push
dec
adcl
in
jns
mov
lret
hlt
jbe
ror
es
pusha
jo
addr16
and
or
xor
or
and
xor
sub
xor
aad
push
mov
lahf
dec
test
mov
sub
or
add
sbb
jo
xor
adc
jecxz
cwtl
xchg
cmpl
inc
lcall
dec
iret
out
outsl
mov
dec
jecxz
orl
push
fistl
data16
mov
das
call
sbb
notl
add
loop
dec
les
popa
inc
aad
or
push
rcr
insl
or
xchg
je
xchg
cmpsb
icebp
enter
test
js
cmp
sbb
jbe
stos
pop
cmp
cli
xor
inc
jno
xchg
imul
shrb
loopne
rorb
xorb
and
mov
or
push
inc
mov
jo
cmp
lock
mov
out
jne
and
sbb
sbb
out
inc
movsb
cmp
dec
push
xor
in
push
adc
adc
sub
sbb
inc
inc
push
and
fadds
adc
or
fbld
loope
int3
cmp
inc
sbb
push
mov
xorb
and
rol
dec
sub
loope
test
mov
ret
cmpsb
add
xchg
dec
sub
icebp
and
and
dec
adc
fistl
add
movsb
or
out
add
push
push
add
sbb
xor
mov
adc
iret
mov
mov
inc
idivl
and
xchg
cltd
shll
addr16
mov
dec
ficoml
leave
mov
and
xchg
aam
les
in
sbb
sbb
pop
cmp
cmp
mov
add
push
imul
popf
add
add
xlat
xchg
pop
sbb
enter
push
inc
sar
enter
ss
sbb
fidivrl
dec
mov
or
mov
add
jnp
inc
pop
ds
jb
loope
out
adc
ficoml
adc
push
add
iret
into
rclb
push
push
test
lock
cmp
out
pop
sbb
sbb
push
push
aaa
pushf
xchg
loopne
popf
xor
jmp
shlb
sbb
jnp
dec
pop
scas
mov
pop
lret
sbb
mov
sbb
ret
into
pop
push
adc
inc
and
and
movsb
jle
sti
and
sbb
scas
pop
add
dec
mov
dec
add
and
add
or
jne
and
ss
rolb
xchg
add
push
jns
jp
in
sub
add
scas
cmp
les
cmp
insl
icebp
insl
in
out
push
adc
outsl
popa
or
shrl
push
addb
fadds
xchg
test
xor
sbb
pop
and
or
xlat
dec
and
ja
cltd
cmp
movb
or
push
and
jno
jb
mov
insb
or
mov
inc
lret
mov
dec
push
pcmpgtb
mov
inc
mov
cmp
sbb
pusha
rol
dec
daa
sbb
out
shll
mov
outsb
inc
cmp
icebp
fadd
xor
daa
scas
or
inc
push
int
fistps
inc
shll
or
jecxz
nop
pop
dec
pushf
repnz
sbb
or
out
das
pop
in
mov
shlb
jmp
xor
mov
mov
lds
mov
sarb
fs
icebp
ret
sub
mov
ret
aam
xchg
lock
aaa
test
dec
addb
sarb
dec
cmp
fdivs
ret
testl
cmp
loope
sti
sub
lahf
jmp
mov
mov
je
nop
pop
inc
xor
sub
imul
fldt
fstl
add
movsl
daa
jg
lds
push
sbb
cmp
mov
jno
lcall
repz
popf
scas
fwait
push
jecxz
mov
hlt
or
out
xor
mov
std
in
mov
jle
stc
dec
shrb
in
outsl
mov
fsub
test
xchg
negl
sbb
inc
add
jl
sub
fstpt
xor
jb
sbb
std
ret
leave
mov
cmpsw
out
into
insb
std
dec
subb
addr16
std
jmp
out
push
push
sbb
dec
pop
insb
into
cmp
pop
rclb
adc
or
fimuls
clc
jnp
stos
iret
ret
pop
dec
add
movsb
stc
mov
lock
in
lea
imul
imul
mov
add
incb
jmp
cld
pop
mov
sub
add
mov
jo
pop
push
clc
sub
out
dec
mov
out
daa
xor
jnp
into
push
push
sub
add
push
dec
lret
jp
loopne
add
sub
sub
pushf
or
js
pop
mov
into
sbb
xor
xor
mov
or
add
jmp
subl
sub
sbb
add
push
sbb
daa
hlt
add
roll
xchg
jns
ficompl
fsubrp
movsb
ret
sarb
cmpxchg
push
dec
push
sub
jo
shl
orb
and
and
push
mov
loopne
iret
mov
jbe
jnp
pop
loopne
inc
clc
mov
add
aad
pop
ret
stc
jb
ret
loop
lcall
cmp
dec
xlat
lock
repz
xchg
mov
or
push
fdivl
add
lock
test
pusha
je
inc
aad
dec
jge
pop
outsb
adc
cmp
add
jmp
xor
jns
xlat
or
xor
push
xor
ljmp
xor
call
insb
mov
ja
shlb
or
dec
ja
je
mov
jo
add
pop
and
cmpsb
mov
stos
pop
ja
mov
pop
testb
pusha
cwtl
ret
sub
push
mov
mov
adc
xor
pop
cltd
fwait
add
add
mov
lsl
mov
or
pop
sbbl
xor
mov
mov
add
rcrb
hlt
inc
adc
fnstenv
xor
push
or
aaa
sbb
das
jmp
inc
ficoms
inc
xorl
adc
test
push
into
icebp
fldl
pop
aaa
sub
mov
xor
mov
fmul
lock
loope
sub
daa
add
mov
stos
xlat
adcl
jl
push
out
lds
loope
mov
jecxz
add
add
xchg
pop
sbb
jne
fimull
clc
fidivl
ja
inc
mov
int
dec
ss
dec
add
loope
fcompl
cmpsl
cmc
push
pop
mov
and
aaa
scas
inc
sbb
in
lock
adc
lock
pop
arpl
mov
sbb
fs
jb
or
shll
das
add
or
lret
std
popf
lahf
pop
cmp
jle,pt
outsl
fadds
jns
cmp
cmp
cmpsl
jbe
jecxz
into
inc
bound
lods
lahf
icebp
imul
xchg
add
cs
sub
xchg
loope
mov
cs
fnsave
and
adc
mov
or
rolb
pcmpgtd
lds
cmp
bound
xor
pop
ds
push
sub
sbb
inc
xor
and
jmp
sbbl
lahf
dec
je
jns
push
call
add
jecxz
jo
aad
imul
mov
or
mov
jmp
repnz
out
lret
ss
xor
dec
lock
outsl
divl
add
xor
aad
xor
lods
lahf
repnz
cmc
repnz
xchg
xchg
or
in
aas
jmp
fs
sbb
jle
add
xchg
dec
pusha
push
lock
sub
jns
xor
std
insb
into
push
push
mov
lahf
out
lods
decb
push
pop
lret
rcrl
adc
xor
push
mov
xchg
push
xchg
arpl
and
jge
xchg
daa
mov
imul
sub
out
movsl
rcrl
addr16
roll
into
cs
rcrb
xchg
into
psrld
jb
in
mov
xor
sbb
int3
lret
call
imul
dec
xor
mov
lretw
decl
dec
xor
jge
aas
xor
mov
adc
mov
cmp
xchg
sub
and
jmp
mov
faddl
dec
sub
xor
fidivl
xor
fldl
cld
out
jo
sub
in
out
arpl
pop
outsl
mov
dec
fstps
imul
mov
pusha
mov
pop
xor
shll
es
fwait
mov
inc
cmp
lret
insl
sbb
stos
sbb
dec
ret
jnp
pop
pop
divl
inc
xor
lahf
cmc
mov
je
pop
xchg
mov
pop
mov
out
loop
push
jp
imul
cs
fwait
loope
xchg
loopne
add
mov
ljmp
rorl
into
mov
imul
xlat
outsl
stc
cld
pop
into
add
add
add
mov
out
jg
ret
adc
or
add
mov
loope
dec
sarb
pushf
loope
dec
mov
sbb
mov
lock
into
cli
ds
cmp
push
repnz
ljmp
movsb
shll
add
ret
aad
pusha
addl
mov
inc
aas
xor
in
mov
stos
lcall
add
fimull
ljmp
sub
gs
lret
sbb
paddsb
sbb
push
fdivrl
xlat
sub
push
jmp
jmp
xchg
fisubrs
test
push
sub
sub
push
mov
sub
test
in
mov
jecxz
test
adc
jmp
pcmpgtw
or
xchg
mov
iret
dec
ja
lods
fstp
sbb
dec
mov
rorl
scas
fwait
xchg
jne
cmpsb
push
mov
rclb
cmpsl
cs
sbb
xor
add
ja
shll
xor
hlt
ds
sbb
int
mov
dec
jne
push
clc
call
in
xor
add
sub
sub
jp
mov
xor
daa
cmp
lods
mov
jnp
aas
pop
ljmp
out
sub
jae
add
push
or
fsubrp
fidivl
pop
jecxz
jmp
pop
in
xor
pop
gs
cmp
jns
shrl
jmp
sbb
in
sbbl
mov
rcl
in
cmp
pop
mov
mov
or
addr16
pop
cmpsb
icebp
andb
pop
pop
incb
adc
hlt
push
outsb
dec
ds
imul
lods
test
add
jnp
outsl
pop
pop
jbe
ljmp
push
in
adc
jmp
dec
cmp
cmp
push
cmpl
add
cmp
sub
aaa
ret
xor
mov
cltd
fcomip
add
iret
shr
cmp
jge
add
sbb
mov
daa
cli
iret
pop
rolb
xor
rcrl
rcrb
mov
pop
or
inc
scas
mov
in
mov
sbb
movsl
mov
sub
jb
mov
xor
lods
jecxz
cmpl
cli
lret
and
and
pop
lods
push
and
rolb
and
sbb
and
dec
xchg
repnz
rorl
mov
mov
jno
inc
cmp
mov
cmp
mov
in
mov
add
flds
add
or
jmp
inc
mov
jbe
pop
iret
jecxz
xchg
leave
pop
add
rcll
or
pop
mov
lock
sub
sub
push
mov
aas
push
dec
or
xchg
call
loopne
cmp
mov
mov
xor
cmc
mov
add
ret
xchg
iret
ficoml
popa
mov
mov
in
mov
inc
lahf
xchg
repnz
and
ret
mov
pop
cli
loopne
in
adcb
inc
daa
xor
inc
jae
cs
rsqrtps
shlb
or
pop
mov
inc
push
sbb
or
sti
arpl
clc
fnstenv
rcrl
add
pop
inc
mov
mov
xor
or
dec
enter
inc
gs
inc
sbb
mov
sbb
out
rorb
and
movsb
mov
sbbb
lea
stos
xchg
int3
jg
rorl
inc
nop
inc
lds
inc
out
cmp
pop
dec
rorl
mov
mov
and
sbb
push
inc
sbb
and
xor
fcmovb
push
sub
ret
push
stos
jne
add
mov
lea
pop
cmp
add
mov
push
sti
inc
pop
jmp
outsb
lods
int
jnp
jle
nop
sub
sub
ja
aas
mov
adc
inc
fildl
pusha
mov
jmp
scas
push
push
test
sti
imul
dec
and
sbb
retw
jne
inc
push
sbbl
insb
addl
push
pop
leave
shll
jnp
sbbb
sbbl
add
xchg
xchg
movsl
push
mov
aaa
lret
sahf
stos
sub
mov
hlt
scas
cmp
in
mov
ret
fwait
lret
imulb
fsts
push
add
pop
testl
aam
jge
push
add
jmp
iret
mov
ds
push
fidivs
std
mov
jp
push
jecxz
inc
xchg
jno
data16
sub
add
or
fwait
xor
imul
dec
sbbl
adc
movb
gs
add
das
in
and
mov
pop
jl
pop
pop
dec
add
add
lret
in
dec
mov
pop
les
shlb
dec
dec
push
testl
jl
add
or
in
aam
mov
aaa
sub
clc
daa
add
sarb
sti
lahf
pop
add
xchg
aaa
dec
xchg
mov
imul
jno
or
pop
jne
addr16
add
lock
adc
gs
adc
cmpsb
adc
rcll
leave
lea
dec
mov
xchg
cmpl
fiadds
rcl
push
add
int
test
xor
xor
pop
adc
mov
cmp
dec
divb
call
in
dec
cmp
insl
pop
sub
push
mov
fbstp
sub
dec
rorb
nop
add
mov
cmp
aam
pop
push
jbe
add
dec
out
lods
mov
jp
out
test
dec
clc
xlat
jae
lahf
cmpsl
push
inc
sbb
xchg
pop
nop
cmp
push
lahf
pushw
xor
jle
push
add
insl
inc
sbb
rcr
jno
mov
std
es
sbb
orl
jmp
stos
push
mov
add
std
adcb
test
rcrb
bound
and
or
or
xchg
xchg
adc
cld
dec
dec
fadds
test
sub
decl
ret
into
scas
push
sub
sbb
mov
stos
fwait
jmp
jo
mov
fdiv
aad
and
add
shll
jg
adcl
xchg
push
and
sti
dec
inc
xor
dec
ss
sub
and
mov
mov
pop
icebp
xor
mov
inc
push
out
js
mov
mov
fdivrl
xor
mov
xlat
add
push
mov
les
sbb
out
scas
lcall
std
lock
push
pop
inc
pop
sbb
xchg
xor
xchg
ret
cmp
test
pop
mov
xchg
test
pop
cmp
stos
inc
fwait
shrl
out
addl
pop
std
inc
out
jmp
pop
jns
xchg
xor
jmp
loope
xor
and
xor
jp
es
mov
add
mov
rol
xchg
aam
in
sti
dec
cmpsl
or
pop
ja
sub
loopne
repz
nop
xor
add
add
mov
stc
inc
pop
ljmp
fildl
cmp
fdiv
sbb
jmp
push
xchg
jnp
sbbl
push
lahf
mov
push
pop
jo
or
cmp
fcoml
js
rcll
mov
fiaddl
mov
data16
jb
xor
add
sbb
je
in
lock
daa
push
pusha
dec
clc
mov
fcompl
mov
btc
negl
adc
in
rclb
ret
jnp
pop
lret
and
pop
ret
xor
incl
push
push
xchg
jecxz
cs
mov
and
fwait
aam
addr16
push
je
inc
fisubs
jmp
ret
rolb
out
fwait
lock
das
nop
lock
das
add
in
out
popa
ret
pop
or
adc
inc
inc
mov
inc
jnp
stos
icebp
fidivrs
jnp
jmp
lods
pusha
pushw
mov
xlat
sbb
sbb
insb
into
pop
nop
fldl
xchg
adc
xchg
add
scas
cmp
mov
jnp
jne
mov
bound
and
enter
test
outsl
dec
jl
mov
sub
push
xor
orl
add
cltd
xchg
jo
mov
test
or
inc
popa
sub
mov
push
xor
add
std
in
cli
fidivrs
xor
out
popf
lcall
lcall
mov
mov
dec
or
out
mov
dec
aaa
pushf
lret
cli
dec
stc
adc
or
mov
mov
clc
add
adc
mov
out
xchg
inc
push
dec
mov
add
cli
jns
int
cmp
jb
cmp
jmp
orb
dec
push
sarl
aaa
ret
jo
test
int
test
pop
pusha
dec
or
or
cltd
test
test
jb
xor
ds
jns
add
add
push
push
xor
sahf
mov
cmc
das
sub
lea
test
push
push
xchg
aaa
in
pop
aaa
mov
dec
mov
dec
cmpsl
dec
lret
stos
adc
sub
jo
ss
xchg
cltd
pop
xor
and
arpl
add
sub
xor
or
sub
enter
hlt
pop
mov
cmp
pop
insb
adc
xorl
push
das
aas
add
cwtl
jmp
pop
pop
hlt
xchg
push
xlat
or
lret
push
inc
jl
xlat
pop
xchg
adc
xchg
fisttpl
cld
sbb
or
add
push
adc
push
hlt
mov
pop
or
mov
or
cld
gs
dec
pop
mov
imul
std
je
and
dec
outsb
lds
cwtl
leave
fiadds
adcb
mov
mov
mov
mov
mov
mov
push
movsl
sbb
sub
ja
mov
cmpsb
inc
sbb
pop
lock
or
negl
scas
or
mov
jo
xor
mov
and
xchg
inc
stos
pop
lds
rcrl
add
xchg
xor
push
mov
in
push
or
out
cmp
repz
movsb
insl
add
pop
fidivrs
sahf
ret
pop
inc
and
arpl
mov
subl
mov
pop
rcrl
add
cmpl
addr16
cmpxchg
mov
movsl
shll
add
sbb
test
lcall
arpl
cltd
add
inc
aaa
rcr
pop
shlb
enter
xor
mov
jecxz
repnz
xor
pop
add
int
cmp
xor
pop
xchg
cmp
cmp
mov
jo
fsubrs
add
in
cmp
add
sbb
and
jno
add
push
out
sbb
push
mov
les
mov
imul
sbb
popa
popl
xor
in
xchg
pop
xor
cmp
mov
dec
push
or
mov
nop
push
adc
fidivs
push
mov
andb
or
es
jno
stos
pop
jg
bnd
scas
ret
ljmp
loop
roll
or
je
push
imul
aam
les
insl
outsl
xor
mov
xlat
into
mov
cmp
inc
fsubrl
test
inc
inc
out
push
pop
loope
sub
call
dec
jge
jp
aas
xor
jp
mov
sbb
into
add
in
adc
pop
enter
dec
add
sub
js
push
lret
outsb
adc
dec
mov
ds
mov
adc
out
sbb
mov
add
lahf
xchg
in
mov
adc
jg
rolb
xchg
idivl
sub
aad
pop
or
mov
sarl
mov
les
adc
nop
movsl
das
pop
pop
pop
mov
adc
imul
xchg
dec
mov
mov
sbb
add
jno
push
pop
mov
cmp
or
jecxz
adc
dec
les
dec
pop
insl
popa
lahf
xchg
push
sub
pop
stos
or
mov
aaa
inc
inc
aad
add
push
shrl
lods
mov
push
mov
outsl
dec
dec
sbb
insb
cmc
add
pop
rorl
daa
repz
bound
mov
adc
jmp
pop
or
orl
inc
aad
aam
dec
imul
popf
or
movsl
scas
rcll
shll
or
rol
or
pop
xchg
pop
bound
push
fdivl
mov
insl
arpl
xchg
inc
adc
arpl
pop
or
or
cmp
inc
xor
je
adc
mov
movsb
jmp
sbb
pop
dec
sbb
inc
mov
add
int
inc
shrl
scas
mov
sbb
adc
pop
xlat
mov
ja
inc
sub
pop
inc
mov
jge
in
inc
xchg
xchg
in
pushl
leave
fmulp
mov
push
fldl
aas
ret
adc
inc
pop
inc
int
sbb
dec
in
mov
int
pop
sub
daa
gs
and
or
sub
add
arpl
frstor
or
pop
mov
mov
sub
out
or
loop
cltd
xor
out
and
or
mov
jno
sbb
add
or
filds
arpl
add
mov
idivl
push
adc
and
dec
or
add
test
stos
fs
daa
icebp
or
gs
test
in
mov
pop
add
hlt
or
mov
rcll
sti
jne
popa
imul
arpl
or
pop
movsl
xchg
adc
xchg
push
or
imul
mov
sbb
push
jle
lock
loop
ljmp
popf
jge
aas
jge
daa
lea
loope
push
push
stos
mov
adc
push
fildll
push
xchg
sbb
andl
inc
push
loopne
mov
add
add
mov
sahf
jge
out
subl
jnp
jns
icebp
clc
pop
in
or
xchg
pop
xchg
adc
lea
fsubrs
fbld
mov
jge
xor
xchg
fwait
add
outsl
sti
out
in
ret
add
push
rcll
insl
cmp
movsl
xor
add
jge
frstor
repnz
cli
fldenv
aaa
mov
push
es
in
aam
lcall
push
push
add
test
or
jae
notl
test
xor
xlat
cltd
jg
in
imul
pop
lods
lds
pop
in
add
or
pop
roll
and
adc
inc
loop
push
imul
push
xchg
jo
sbb
and
outsb
fwait
mov
xchg
je
cmp
inc
das
cmp
jecxz
jmp
inc
inc
sahf
imul
sub
je
jbe
inc
outsl
int3
data16
pushf
adc
inc
ljmp
iret
add
loopne
mov
mov
xor
push
fwait
mov
jp
dec
or
subb
push
jb
ja
add
jl
ret
lock
movsb
inc
je
aaa
jp
add
adc
jae
or
insb
push
dec
loop
cmp
hlt
mov
sub
fisubs
out
orl
sahf
push
add
mov
dec
lds
xchg
pushf
andb
data16
add
xchg
xor
and
cmp
in
jo
inc
outsb
dec
add
mov
and
jns
scas
ret
js
or
dec
ds
xchg
push
sub
sahf
cltd
jl
cld
jne
pop
push
aaa
cmpb
mov
pop
xchg
in
push
bound
push
mov
mov
in
ds
test
sub
insb
lcall
pop
faddl
xor
add
cmp
or
in
jne
popa
xchg
pop
mov
ja
add
test
cmp
pop
enter
push
test
sbb
push
push
dec
mov
push
adc
test
js
shlb
test
testl
fwait
push
add
xor
or
out
je
cltd
incb
lods
sub
xchg
add
push
test
add
sarb
push
cs
mov
mov
cmp
dec
popf
xor
inc
adc
add
jle
add
fnstsw
cmp
cld
pop
fwait
pop
sarl
das
or
or
in
test
clc
cld
dec
jl
or
push
push
or
xor
sbb
add
in
movsb
test
mov
mov
cmp
xchg
test
test
sbb
pushf
stos
xor
insb
push
je
push
sub
popa
add
mov
rorl
mov
inc
inc
cmp
hlt
add
mov
add
repnz
dec
mov
les
pop
dec
add
add
push
mov
pusha
jg
lock
xchg
test
in
mov
xor
mov
mov
faddl
stos
fdivl
inc
pop
imul
add
xor
add
add
add
cmp
aad
je
dec
cmc
lock
push
cli
mov
push
lahf
sbb
sbb
ljmp
push
sub
repnz
jno
dec
jl
add
loop
sbb
pusha
je
je
cmp
cwtl
cmp
les
adc
std
pop
xchg
dec
mov
jae
cmpsb
aaa
pop
in
mov
cmp
add
fwait
pop
mov
and
dec
push
mov
movsb
ljmp
add
xor
stos
xor
adc
pop
push
imul
pusha
js
mov
cmpsl
cmpsl
enter
outsb
dec
dec
aad
mov
xchg
inc
arpl
push
or
xchg
and
stc
dec
jmp
nop
jnp
cld
push
push
dec
pop
cmpsb
xor
imul
addl
mov
call
jg
dec
add
test
subl
or
jb
and
sub
dec
mov
fstpt
test
fmuls
cmpsb
mov
lcall
push
jae
fstl
out
xchg
dec
imul
outsl
jl
notb
lods
fs
dec
enter
lods
lret
aam
movb
jp
jo
in
push
and
test
mov
dec
mov
and
adc
pop
lock
mov
add
test
fadds
push
sub
scas
jno
loope
cli
out
and
or
ja
inc
add
xorb
sti
dec
or
lods
out
xchg
out
fimull
or
das
shlb
jo
fidivrl
scas
cli
rcr
movsb
mov
cmp
lock
bound
adc
push
clc
loope
push
pop
xchg
stc
clc
shll
and
add
sub
push
xor
cwtl
or
pop
lret
dec
cmp
sbb
add
stc
xor
jecxz
add
dec
bound
push
push
pop
mov
mov
movsl
dec
inc
jbe
daa
inc
fs
jle
testb
inc
imul
test
in
dec
scas
hlt
sub
adc
imul
lret
push
adc
mov
mov
decl
push
cmp
into
stos
push
test
jp
mov
sahf
inc
je,pn
push
negb
cs
shll
pop
lcall
xchg
enter
stos
fmul
cmpsb
adc
sub
jmp
rclb
push
jmp
add
es
dec
ljmp
or
fistps
jne
xor
mov
enter
popf
and
or
inc
push
xor
lock
mov
call
dec
add
jmp
cltd
mov
mov
aam
push
and
pop
int3
xor
div
aaa
sub
or
mov
mov
pop
fs
pop
dec
cld
mov
sub
jnp
cld
test
mov
loopne
testb
mov
imul
inc
rcl
fsubrp
mov
xor
popa
mov
bound
mov
add
xchg
cmp
sbb
imul
jbe
stos
jo
push
jns
mov
adc
loopne
add
pushf
jnp
jecxz
cmp
mov
out
scas
push
call
std
dec
lahf
imul
mov
dec
mov
mov
xor
adc
mov
mov
add
sbb
push
leave
es
cwtl
xor
push
inc
xor
jbe
cmc
sti
shr
xor
jnp
loop
out
mov
insb
adc
ret
jp
pop
dec
fisubs
mov
mov
add
mov
xchg
add
push
push
out
pusha
jnp
jo
lret
clc
xchg
mov
xor
mov
dec
add
jo
sub
dec
aas
data16
dec
ss
out
dec
push
loopne
in
xchg
test
push
xor
imul
push
sbb
sahf
xor
ret
and
jbe
rcr
data16
xchg
mov
dec
into
lahf
shl
popf
ds
iret
loope
loop
pop
push
dec
fwait
pusha
sub
jne
sub
popf
idivl
or
bound
and
cmp
mov
aaa
mov
std
loopne
shlb
push
jp
sbb
js
cmc
daa
push
mov
pop
sahf
mov
xchg
jbe
sub
or
enter
stos
jp
or
sub
inc
fwait
pop
dec
mov
iret
add
xchg
mov
aaa
or
mov
in
and
negl
push
add
cmp
mov
dec
adc
or
jmp
mov
push
or
bound
xorb
ret
mov
mov
mov
jne
mov
pop
cwtl
add
or
pop
pop
mov
fwait
or
insb
je
mov
stos
xorl
loopne
adc
sub
mov
jl
cltd
shrl
mov
add
int
mov
and
sbb
mov
roll
mov
sti
popa
cmp
je
icebp
adc
jns
cmp
sub
cmp
imul
cmp
sbb
fdivs
ret
adc
pop
test
imul
or
xor
ja
and
or
pop
mov
ds
ljmp
xorb
shrl
ret
dec
cmp
add
fwait
mov
add
mov
xchg
cmp
adc
or
pusha
call
sbbl
out
inc
jo
or
repnz
add
mov
in
cmp
sbb
mov
cmp
jbe
movsb
xchg
jg
mov
cs
cmp
sub
mov
mov
call
into
popa
lahf
xchg
and
mov
insb
js
or
pop
add
test
call
fs
clc
movsb
xor
leave
in
ret
mov
pop
inc
push
inc
push
insb
sahf
push
inc
daa
mov
sti
add
push
rcrl
push
or
shrb
popa
jnp
in
hlt
js
or
sbb
sahf
pop
fstl
sbb
add
push
pop
inc
cs
xchg
and
mov
mov
loopne
or
dec
xchg
fisubs
stos
js
int3
leave
push
push
mov
inc
loopne
xorl
sbb
in
aaa
mov
fs
in
jecxz
lods
add
sub
sub
mov
mov
dec
inc
xor
jmp
pop
xor
das
add
fdivl
lock
inc
ficomps
lret
scas
mov
jp
jmp
mov
dec
sbb
pop
mov
lods
jge
or
lret
insl
loop
push
mov
xchg
jo
mov
adc
insb
jae
xchg
mov
inc
sbb
aam
mov
dec
daa
int
inc
insb
mov
in
imul
pop
ret
out
std
cmp
cmp
jge
sbb
dec
loope
rorl
pop
mov
mov
add
cmpsl
add
cmpsb
in
dec
cmp
lock
loopne
es
mov
std
jns
lods
sbb
or
add
aad
push
pop
fisttpl
sbb
test
cmp
cld
mov
dec
jmp
ss
and
les
jle
push
in
stos
pushf
push
mov
icebp
dec
mov
mov
sarb
adc
in
pop
sub
add
lea
in
adc
loope
hlt
fs
and
sub
jae
cmpsb
inc
xor
jmp
shr
push
xlat
jo
jg
loop
int3
mul
lods
les
dec
mov
cmp
push
fiadds
ljmp
push
push
in
mov
insl
push
mov
sub
mov
cmp
fwait
push
popa
cmc
gs
nop
inc
cmpsb
insb
insl
mov
cmpsb
rorb
push
cwtl
iret
mov
dec
scas
jmp
mov
fnstenv
daa
add
or
push
and
cli
stc
add
rclb
sbb
dec
fisubs
mov
inc
arpl
cs
sub
xor
test
fadds
sub
test
sbb
jp
scas
jmp
std
adcl
inc
sub
xchg
xchg
sahf
ds
hlt
repnz
iret
outsl
jle
push
inc
popf
cs
out
sbb
inc
mov
lret
test
or
pop
ficoms
orb
insl
pop
cwtl
and
inc
xor
fs
hlt
push
ja
rclb
add
sub
xor
inc
andl
cltd
cld
test
in
jecxz
push
mov
mov
push
lock
adc
and
adc
ret
jnp
mov
push
aad
push
add
cmp
add
scas
hlt
cmp
outsb
pop
dec
test
fimull
cltd
xchg
sbb
js
jg
mov
and
sub
mov
cwtl
lahf
fcmovnbe
push
fmull
adc
mov
jl
xchg
cmp
jle
dec
push
xchg
mov
test
jnp
inc
fnstenv
xor
push
stos
push
and
push
dec
mov
jne
lods
jge
xchg
sbb
adc
xchg
cmc
lods
cmp
pop
loop
pop
loopne
rcrl
xor
ds
subl
dec
mov
push
push
ljmp
shr
jecxz
xor
out
push
pop
loopne
jge
cmp
adc
sub
mov
mov
int
xchg
insb
lret
stos
add
jge
push
ret
push
lock
cmp
out
test
xor
in
mov
fiadds
adc
ds
pusha
mov
xlat
push
movsl
cmp
mov
in
xor
jbe
add
ret
sbb
test
jle
mov
jle
push
cmpb
jbe
lcall
push
xchg
add
dec
pandn
call
sub
rcrl
imul
out
push
orb
xchg
sar
lock
jl
add
das
pop
out
test
popf
cmpsb
movsl
or
mov
out
adc
jp
xor
cmc
jbe
sub
mov
xor
inc
cmp
mov
add
inc
pop
push
ret
push
jl
stos
insl
mov
jmp
add
jg
mov
cmp
leave
aam
adc
mov
outsb
sbb
nop
fdivl
mov
or
pop
jecxz
call
out
cli
add
loop
stos
xor
out
pop
xor
sub
fdivrl
xor
lods
xor
add
jle
mov
push
mov
push
sub
out
jl
call
jno
adc
or
aam
loopne
mov
addl
fs
pusha
imul
jle
pushf
ja
add
pop
loope
xchg
jnp
jl
fisubl
orb
sbb
cmp
in
add
push
mov
cmp
jno
push
jo
movsb
adc
icebp
std
lods
call
jmp
into
das
adcl
sbb
sbb
movsl
jbe
in
es
sub
and
and
leave
dec
es
xor
je
out
mov
lock
sbb
sub
push
xchg
mov
add
mov
adc
adc
xor
xlat
xor
aam
jecxz
mov
out
scas
mov
pop
bound
mov
test
das
pop
fiadds
scas
ss
jb
dec
inc
inc
repz
adc
mul
clc
test
das
push
jp
loop
daa
not
dec
movsb
bound
sub
ljmp
int
push
xor
jecxz
cmp
lock
push
in
hlt
xchg
insl
sub
cs
out
decb
inc
lock
xchg
xor
ja
shrb
andl
push
add
push
sarb
addr16
dec
push
aam
lret
ljmp
test
or
add
iret
mov
lds
loop
jecxz
shlb
push
pushf
stos
pop
jl
mov
pop
int
enter
xor
push
mov
pop
jo
je
icebp
hlt
jecxz
push
jmp
jno
cmpsb
pop
int3
icebp
mov
pop
or
xor
lret
mov
push
jns
insl
push
es
pop
loop
insb
pushf
mov
cmpsb
cmp
cmc
cmp
sub
adc
dec
sbb
mov
mov
clc
jmp
push
jns
or
orb
addr16
add
mov
xor
xor
xchg
lods
inc
sub
pop
sub
jo
mov
out
or
xchg
clc
addb
xor
xchg
pminub
inc
lcall
in
xor
aaa
shll
mov
stos
push
and
pop
loope,pn
inc
xor
insl
repz
jo
mov
sub
pop
push
xchg
data16
mov
push
mov
test
push
inc
fdivrs
and
pushf
push
pop
mov
dec
mov
dec
or
pushf
inc
aam
fidivl
sbb
xchg
mov
mov
hlt
or
ret
pop
orl
gs
push
je
inc
pop
cld
or
rcrb
mov
loop
bound
xor
dec
in
mov
jge
pop
lea
push
push
imul
lea
fcompl
xor
jg
fmul
ficomps
outsl
inc
cmp
addl
lock
dec
sbb
cmp
enter
jge
stos
js
jno
sub
cli
lea
shlb
push
popa
mov
test
das
xchg
out
aad
dec
iret
xlat
mov
mov
push
imul
mov
loop
je
leave
fisubs
dec
or
jge
and
and
jge
pushfw
test
sub
push
loop
adc
or
xchg
hlt
daa
movsb
adc
jb
push
loope
inc
push
mov
stos
aam
insl
aad
jl
mov
adc
mov
fmull
mov
out
movsl
mov
sub
clc
scas
and
pop
xchg
cltd
pop
ljmp
data16
shrb
lock
addb
loopne
jl
lret
add
or
lods
jne
push
jo
push
std
addr16
push
ljmp
xlat
je
mov
or
repnz
sbb
ret
adc
mov
mov
out
mov
out
scas
push
adcb
mov
and
mov
lcall
or
lock
aam
pop
inc
push
divb
pop
and
push
push
inc
in
xchg
dec
xchg
dec
inc
and
cmovge
cmc
jae
cmp
fbstp
push
mov
pop
and
sbb
xchg
xor
add
mov
add
ficomps
mov
clc
mov
in
ret
jo
sbb
cmp
add
or
bound
xor
incl
mov
dec
add
adc
dec
test
pop
cmp
lcall
add
or
pop
mov
ja
cmpsl
in
js
mov
lods
push
mov
scas
mov
mov
and
scas
mov
mov
sbb
push
mov
movl
cwtl
clc
cmp
push
mov
repnz
in
loop
out
mov
stc
mov
je
mov
xchg
test
loopne
push
xor
pop
int3
mov
jg
jne
insl
filds
jp
lret
add
shrb
dec
push
push
adc
inc
call
dec
repz
sbb
pop
dec
pop
lea
mov
xor
lret
repz
fisttpl
cmpsb
es
xchg
push
mov
arpl
hlt
xor
out
mov
jno
jbe
pusha
jle
fidivl
sar
arpl
loop
mov
adc
cmp
movsl
stos
and
cld
mov
jl
ljmp
xchg
push
mov
inc
sbb
sti
dec
mov
lds
cmp
dec
pusha
adc
add
lods
stos
mov
xchg
push
repz
cmpl
adc
in
rolb
mov
pop
push
orb
gs
leave
call
andb
add
sub
out
or
daa
jg
inc
or
enter
fcomi
mov
lds
mov
and
pop
repnz
stos
rorl
pop
fdivrs
inc
mov
das
call
xchg
xchg
and
xchg
push
es
lret
jbe
push
mov
es
jg
and
xchg
and
sar
jo
inc
and
fsubrl
test
insb
pop
and
jo
xchg
cli
push
ljmp
cs
dec
popf
dec
stos
push
cli
in
outsl
jbe
inc
fisttps
xchg
std
test
push
mov
xchg
fs
xchg
or
or
pop
je
out
mov
pop
sbb
sbb
loopne
pusha
movl
out
scas
adc
hlt
rcl
icebp
daa
clc
mov
jne
jmp
cmp
jl
bnd
and
scas
pop
rcll
call
cmp
sub
scas
mov
sbb
ja
or
cmp
cmp
inc
xchg
jecxz
das
mov
mov
xchg
shrl
rorb
push
push
sub
fcoms
push
lahf
inc
orb
adc
and
mov
jle
cmp
mov
fs
inc
sub
push
test
push
aaa
xor
add
lcall
xor
xchg
dec
stos
xor
mov
sub
mov
fbstp
or
dec
add
dec
dec
adc
push
mov
cmp
hlt
xchg
sub
sub
loope
sbb
inc
push
mov
push
cmp
cmp
mov
inc
jbe
sbb
adc
lret
jbe
std
xchg
test
jo
or
test
ljmp
outsl
je
adc
pop
mov
and
sarl
clc
daa
pop
jno
stc
lcall
jns
and
cmp
shrb
mov
pushf
inc
popf
mov
push
xchg
pop
rolb
or
fnsave
pushf
fisubs
mov
cmp
mov
hlt
dec
push
pop
iret
pop
cmpl
push
loopne
and
inc
pop
icebp
mov
ficoms
loop
in
mov
out
sti
push
icebp
lret
les
add
cmpsl
inc
icebp
fdivp
faddl
mov
lret
jns
stos
mov
push
inc
mov
mov
data16
push
mov
inc
ss
aam
lret
outsb
int
in
leave
sub
sub
lret
or
ret
pusha
int3
pushf
dec
flds
sarl
sub
xchg
les
pop
pop
adc
mov
fs
add
jle
pop
lret
adc
xchg
clc
inc
jmp
pop
ss
xchg
aad
stos
dec
mov
mov
into
adc
stos
loopne,pt
imul
mov
dec
dec
test
jmp
jbe
gs
cwtl
outsb
jns
loopne
mov
xor
fucom
add
sub
sub
mov
stos
mov
mov
cmp
lock
es
daa
movsl
and
repnz
pushl
inc
jae
negb
mov
and
daa
and
add
push
cmp
dec
mov
int3
imul
jmp
xchg
iret
clc
stc
cli
sub
ljmp
aam
add
ret
stos
loopne
fwait
push
add
sti
sub
pusha
rcrl
test
lock
popl
mov
shrl
sub
or
andl
aaa
scas
sbb
push
fisttps
add
ret
hlt
sub
sahf
sbb
adc
aam
std
xchg
pop
imul
pop
int
sbb
jbe
and
rolb
adc
insb
pop
loopne
jae
sub
rol
data16
je
lock
divl
pop
push
cmp
xchg
push
sbb
loop
xor
and
cltd
or
scas
clc
cmp
mov
fisttps
xchg
icebp
sti
push
push
mov
cltd
call
pop
out
and
cmp
cld
clc
dec
sub
repnz
popf
pop
outsb
xor
inc
rclb
mov
dec
mov
sub
addl
cld
pop
stos
repz
mull
adc
fnstcw
add
push
data16
dec
pusha
or
dec
out
mov
xchg
adc
mov
lods
fisubl
push
xchg
mov
jno
xorb
xchg
pop
push
in
repnz
push
repnz
shlb
mov
insl
mull
mov
adc
cld
mov
sbb
shrb
fisttpll
mov
xchg
mov
push
push
in
es
stc
insl
insl
sub
inc
adc
jnp
add
jl
out
insb
rep
decb
rcll
ss
sub
adc
out
push
ficompl
sub
les
bound
aas
scas
cmpsb
js
rorb
inc
pop
cmp
es
adc
loop
lods
call
jns
mov
sbb
adc
xchg
mov
push
insb
cmp
pop
or
xchg
stos
es
dec
imul
mov
cmp
mov
push
std
lcall
dec
loop
xchg
cmp
enterw
es
push
loopne
pop
xor
xchg
repz
pop
push
repnz
ljmp
loopne
dec
inc
out
lock
loop
mov
int3
notb
shll
jecxz
loopne
adc
xor
cmpsl
and
sbb
xchg
dec
lds
cltd
movsb
sti
psubb
sub
mov
sub
dec
stos
dec
xchg
scas
out
add
outsb
xor
inc
pushf
mov
adc
in
arpl
or
jne
mov
mov
out
hlt
inc
shll
int3
mov
push
sub
lea
xor
push
cmp
mov
test
bound
sub
jnp
in
cmp
add
dec
sub
clc
int
int3
or
std
loope
pop
sub
and
mov
push
aaa
sbb
adc
push
xor
loopne
pop
add
inc
cmpsl
testl
movsb
dec
mov
loop
mov
pusha
xchg
and
pop
jne
mov
test
and
sarb
mov
mov
daa
jg
into
mov
cmp
hlt
push
mov
cmpsb
stos
shll
hlt
fidivrl
xchg
scas
ds
xchg
jle
adc
push
mov
push
in
push
pop
xlat
popa
add
pop
dec
idivl
stos
add
imul
pop
dec
xor
mov
add
aaa
fs
sbb
into
mov
orl
ljmp
std
mov
pop
and
aad
out
dec
outsb
jle
jl
pop
adc
mov
adc
lcall
push
pavgb
subl
or
out
clc
enter
insl
clc
cmpsl
enter
pop
cld
xor
outsl
xor
mov
lea
rcll
mov
movsb
cmpsb
lock
inc
lcall
or
jo
out
test
out
xchg
cwtl
mov
push
mov
les
fsubr
pop
data16
push
test
add
xor
ljmp
outsb
mov
aad
xor
push
pop
adc
cmpsb
fs
pusha
add
jg
inc
add
jb
stc
scas
sub
das
shrl
stc
or
or
aam
enter
outsb
setl
pop
imul
cmp
sub
push
sarl
push
and
hlt
push
cmpsb
add
pop
pop
sahf
fadds
in
add
mov
stos
fisubrl
stos
sub
dec
je
add
mov
add
mov
ss
out
adc
add
hlt
sub
dec
mov
mov
cmc
ds
sti
inc
repnz
rclb
aam
and
imul
jo
adc
and
push
imul
push
cmp
xchg
pushf
rcl
outsb
push
adc
fists
cmpb
push
mov
cmc
outsb
mov
cmp
int3
mov
mov
cltd
in
push
movsl
sahf
mov
dec
movsb
out
mov
dec
outsb
and
outsl
lcall
adc
leave
cltd
sarb
and
cmp
or
sbb
fmul
jo
inc
inc
test
icebp
pop
fiadds
es
imul
cmpsb
sub
addr16
in
and
data16
outsl
xchg
add
je
fcmovnbe
adc
dec
mov
jbe
jo
test
xor
sub
mov
sub
dec
sbb
enter
mov
xlat
inc
or
sub
sbb
js
std
in
test
jbe
loopne
sub
push
mov
push
out
adc
or
xchg
pop
jnp
sub
getsec
les
and
mov
sbb
cmp
dec
daa
mov
fcmovnu
mov
adc
xor
push
cmpsl
jo
mov
ret
and
pop
mov
lcall
or
mov
lea
jne
or
fimull
or
mov
dec
lock
lret
out
rclb
fimull
add
or
sub
xor
outsl
jo
jne
sub
aas
sbb
push
mov
pop
daa
addr16
frstor
in
xor
and
xlat
jge
dec
and
stos
ss
mov
mov
mov
lahf
xlat
out
out
or
and
and
dec
mov
inc
push
sub
dec
xchg
jnp
or
or
mov
or
and
sbb
push
daa
lret
pop
daa
int
xor
int
ss
jge
sbb
cltd
cmovae
insb
loopne
frstor
cmpsl
das
mov
orl
out
repz
iret
jp
int
mov
int3
popl
pop
ja
fstpt
pop
int3
push
mov
mov
dec
mov
mov
sub
xchg
push
cmp
sahf
push
enter
jnp
lret
or
push
cmpsl
mov
xor
test
iret
jnp
sahf
fisubrs
inc
fmul
sbb
or
lret
pop
jg
dec
push
inc
pop
xor
jecxz
cmpsb
or
mov
out
sub
out
scas
inc
mov
pop
pop
leave
mov
or
imul
leave
and
popf
and
leave
aaa
xchg
fsubrl
imull
push
dec
neg
jmp
pop
or
or
dec
and
pushf
pop
or
jle
lret
add
out
pop
shll
xlat
fldl
comiss
outsl
mov
test
sbb
push
movsl
das
gs
and
xchg
lret
xor
sub
data16
fwait
pop
arpl
insb
pop
and
mov
mov
or
sub
jl
repnz
xlat
das
add
cmp
lods
push
pusha
aad
push
mov
mull
adc
aad
scas
xchg
mov
inc
ficomps
xor
or
outsb
mov
notb
pop
movhps
ja
cmp
stos
adc
cmp
adc
daa
and
aam
sahf
ljmp
or
repz
or
shll
pop
jae
out
jecxz
les
push
cmp
aam
cmpsl
or
fldcw
xchg
add
aaa
out
or
and
cmp
shlb
xor
testb
jo
jg
mov
or
gs
add
in
sti
or
das
ret
arpl
xor
or
movsl
sar
push
insb
in
sbb
lahf
sbb
or
repnz
shrl
addr16
mov
pop
jmp
repz
decl
das
ficoms
aaa
iret
push
insb
xlat
fbld
push
add
and
fbstp
in
add
add
out
mov
or
xlat
jmp
inc
sti
mov
fstpt
xchg
pusha
fildll
fst
sbb
adc
or
dec
cmc
cmp
pop
push
push
mov
stos
adc
andl
call
and
shll
ficomps
adc
or
fidivs
or
testl
orl
fldl
or
xlat
popf
and
sahf
fstl
movsb
sti
dec
mull
dec
cmp
cmpsl
sbb
jecxz
into
jnp
fnstsw
jp
dec
jmp
or
mov
or
data16
lret
pop
xchg
fmull
andl
mov
lahf
dec
out
pop
sti
cltd
iret
cmpsl
shl
jno
loopne
mov
gs
jns
mov
fstpt
mov
jns
daa
loope
add
popa
cmp
jmp
ljmp
shll
cmp
rorl
pop
xchg
or
jbe
ficompl
mov
mov
xlat
loopne
push
sbb
or
mov
adc
mov
cmp
leave
push
sbb
pop
pop
add
xchg
jg
mov
or
movl
inc
push
in
jbe
adc
dec
in
sbb
dec
push
into
dec
cwtl
and
push
xor
pop
inc
add
jne
lock
dec
push
add
ss
add
pop
mov
call
add
imul
ss
adc
bound
xchg
adc
or
rclb
xor
js
xchg
fwait
sub
mov
add
or
xor
cwtl
cmp
std
repnz
mov
adc
outsb
call
fisubl
push
and
jl
loopne
mov
je
and
xor
repnz
pop
xchg
daa
lea
and
enter
aaa
mov
clc
lret
push
notl
add
push
fiaddl
add
push
xor
jp
imull
sbb
pop
outsl
push
push
in
movsb
jmp
add
in
push
or
jle
cmpsl
xchg
pop
loop
xchg
outsb
xor
es
loope
jecxz
cmc
pop
ficoml
adc
sub
hlt
inc
jno
outsb
jo
inc
in
lods
popf
or
outsl
aaa
ret
insb
adc
mov
cld
adc
mov
roll
xorl
loopne
jns
mov
mov
or
js
fisubrs
enter
mov
test
cmp
and
mov
movsb
ss
pop
mov
fisubrl
dec
xor
orb
add
xchg
out
lds
xchg
mov
popa
inc
xor
aaa
lret
jo
mov
mov
mov
sub
mov
adc
adc
rcrl
adc
or
lahf
adc
popa
sbbb
mov
adc
sub
add
out
mov
test
icebp
dec
dec
xor
arpl
inc
lods
shll
js
jne
mov
rolb
pusha
adc
mov
xchg
lea
add
inc
out
cmp
rcll
xchg
mov
jbe
add
push
or
cmpsl
adc
lods
rcr
sub
mov
cwtl
pop
sbb
dec
mov
lods
sti
xorb
jbe
push
fwait
repnz
call
jmp
fists
ds
mov
daa
scas
js
fwait
mov
popa
mov
xchg
push
jns
mov
push
jnp
jp
ja
dec
xor
jno
jmp
popf
push
icebp
mov
or
xor
mov
mov
aam
xchg
insl
cltd
loopne
in
aaa
mov
stos
mov
inc
nop
mov
fs
gs
mov
dec
mov
ds
jnp
stos
arpl
xor
cmp
mov
and
mov
cmp
aaa
cmp
add
mov
sbb
mov
bound
mov
xchg
add
cltd
in
xchg
rcl
cli
cltd
sub
jg
adc
and
loopne
sbb
xchg
mov
mov
cmpsl
and
fsubrs
and
jne
cwtl
pushl
pop
and
lret
das
mov
and
or
pop
in
xor
sbb
aaa
imul
pop
jb
in
fsubrp
lods
das
jns
push
pop
inc
mov
push
xchg
das
add
xchg
sub
jne
inc
cmpsb
arpl
sbb
xor
loope
pushf
add
push
and
adc
adc
andl
mov
fistl
adc
add
xor
cmp
imul
jae
sbb
sub
jne
xchg
and
xchg
loopne
sbb
add
add
in
push
shll
out
cmp
pop
das
das
test
das
push
mov
add
pop
sub
jb
iret
adc
inc
ja
push
mov
das
sbb
insb
inc
jg
outsl
xchg
mov
es
dec
xchg
pusha
stos
push
mov
xor
rorl
pop
int3
cmc
repz
add
fwait
jmp
daa
lahf
jmp
pop
jne
addl
out
mov
and
mov
or
out
addl
and
mov
test
xchg
and
cmp
cs
cmp
cmpb
xor
addr16
sbb
push
and
mov
pop
insb
dec
pop
fwait
mov
mov
dec
or
xchg
adc
mov
pop
xor
stos
lock
popf
adc
and
sub
mov
or
sbb
add
movsl
inc
jne
shll
stos
jnp
sub
mov
adc
and
jo
jl
scas
push
dec
xchg
inc
pop
add
pop
and
jae
mov
outsb
or
pop
mov
jge
adc
inc
sub
pop
shlb
dec
mov
stos
xchg
mov
or
sub
adc
sbb
jno
sbb
jecxz
push
pushf
leave
jmp
xor
in
inc
ja
das
mov
jp
sub
or
fmuls
and
mov
or
add
mov
mov
or
xchg
das
pop
test
mov
sbb
sbb
mov
inc
aad
daa
fdivp
outsb
js
imul
pop
imull
in
jo
test
lea
inc
and
cmc
and
mov
hlt
insl
and
fsubrs
xor
out
sbb
ds
das
mov
jl
add
in
int
add
adc
sbb
scas
lock
fistps
cmpsl
ja
inc
fidivl
jne
jmp
fnsave
inc
inc
xor
dec
loopne
outsb
pop
test
mulb
cwtl
mov
push
mov
sbb
adc
push
xor
mov
xlat
push
mov
add
pusha
lds
cwtl
jns
dec
or
pop
xchg
in
mov
cmp
xchg
repz
flds
mov
xchg
out
add
inc
and
push
xchg
or
and
das
fdivr
test
push
dec
and
repnz
mov
in
cmp
xor
xchg
cmp
es
mov
aas
and
jb
movsl
sarl
mov
xchg
out
push
inc
jnp
and
nop
mov
jg
ret
outsb
sbb
out
pop
sub
cmp
and
xchg
and
dec
aaa
shll
idivb
sub
ljmp
mov
inc
test
insb
rorl
inc
mov
fcoml
je
andl
das
out
pop
aaa
shll
rcr
mov
or
insb
sub
pop
jbe
cmp
or
inc
outsb
loopne
testl
out
jg
lds
xor
daa
aaa
sti
jle
dec
fldenv
popf
push
gs
pop
arpl
dec
inc
mov
dec
mov
mov
jmp
jmp
xchg
das
sub
out
inc
xor
lock
mov
mov
xor
mov
pop
jo
and
sbb
aam
and
fmull
and
sbb
sub
pop
dec
inc
sub
jne
cmc
dec
jbe
pop
push
cltd
push
sub
mov
mov
aaa
outsl
mov
cmp
pop
and
pop
jne
mov
shrl
jbe
out
xor
inc
lods
je
mov
sbb
mov
jg
inc
in
popf
popa
or
or
sub
adc
fs
stc
cmpsl
jae
and
stc
and
outsl
or
fwait
pop
sbb
lods
in
aaa
insl
js
mov
iret
push
aam
and
bound
bound
dec
dec
fmull
xor
addb
pop
aaa
xchg
dec
js
jmp
jbe
mov
insb
jge
and
sub
rcll
movsl
jbe
movsl
outsl
insl
lods
int
cmp
mov
loop
or
and
add
lahf
cmp
push
enter
aaa
fs
call
fbld
loope
in
es
push
daa
xorb
mov
inc
in
lods
push
sbb
ja
cmp
outsl
or
and
cmpsb
dec
adc
jb
xchg
dec
xor
leave
addr16
add
push
push
adc
ja
xorb
out
cli
cmp
shll
dec
mov
orl
push
sbb
repnz
jmp
xor
push
insl
scas
stos
jg
dec
shll
mov
xchg
mov
in
loope
mov
xchg
inc
sub
fwait
mov
daa
inc
xor
push
sub
jmp
out
push
imul
stos
rcll
and
sub
cmp
jbe
icebp
fstpt
and
gs
inc
sbb
xor
jecxz
popa
push
call
or
jecxz
cmpsb
push
jl
mov
xor
in
jge
outsb
test
dec
addr16
sbb
daa
shlb
fidivs
jecxz
push
mov
inc
cmpsl
dec
jns
nop
scas
adc
jne
dec
jecxz
pusha
test
outsb
xchg
imul
test
loop
jecxz
int
xor
sub
pop
cmpxchg8b
jecxz
xchg
mov
inc
xchg
gs
pushl
sbb
mov
inc
aaa
rcr
jecxz
sub
pop
dec
rcll
aaa
notl
insb
adc
xchg
repnz
dec
mov
leave
ret
add
jg
ja
pop
ja
pop
pop
aas
fbstp
popa
pop
mov
pop
cmpsl
lock
jns
add
inc
cmp
loop
ja
outsl
aaa
xor
gs
push
xor
add
decl
dec
fstps
loop
sub
shrb
jno
fistpll
jg
pop
lcall
xchg
cmpb
jle
mov
xchg
loope
das
or
out
daa
scas
sub
xor
xor
push
stos
out
mov
add
sbb
dec
mov
fimuls
xchg
jecxz
scas
pop
mov
fsubp
fisttpl
and
inc
mov
pop
cmp
cltd
sbb
jmp
ret
sbb
or
xor
xor
outsl
xor
popa
arpl
lods
fmull
imul
or
leave
push
lret
mov
dec
mov
dec
or
pop
add
push
and
mov
stc
and
arpl
stos
and
adc
sarb
xorl
add
lods
ljmp
push
dec
push
mov
mov
into
pop
mov
test
imul
push
das
xor
dec
mov
les
pop
pop
aaa
adcl
shrb
add
mov
push
cmpsl
dec
ret
int
movsb
clc
dec
mov
inc
add
stos
adcl
mov
dec
adc
fists
mov
jo
mov
ja
sbb
inc
ja
mov
xor
outsb
and
xor
jle
sbb
adc
fstp
bsr
sbb
cmp
aaa
aas
add
outsb
jecxz
mov
adc
sub
divb
stos
push
xchg
lods
add
adcl
and
add
dec
jg
jns
ret
dec
out
jae
xor
mov
xor
cmp
jo
fidivrl
mov
dec
fwait
call
jecxz
sub
mov
and
push
push
flds
fnstenv
leave
mov
in
xor
aas
ds
lods
cs
sbb
inc
js
fildll
out
dec
or
out
add
sbb
mov
mov
or
cmp
pop
pusha
out
and
ja
mov
jb
mov
mov
daa
imul
push
mov
mov
dec
pop
jo
push
dec
sbb
add
out
add
pop
iret
sub
jne
sti
mov
out
lahf
add
add
out
cmp
std
roll
scas
mov
adc
je
ja
jno
test
stos
je
jnp
inc
and
lret
and
adc
sub
sbb
sbb
xchg
sub
or
lcall
inc
add
or
jnp
sub
or
dec
roll
mov
and
cmp
es
stos
mov
dec
stos
lods
xor
pop
mov
xchg
and
or
jb
outsb
test
outsb
loopne
fwait
jecxz
arpl
mov
sbbl
lea
roll
std
insl
or
add
push
clc
mov
ja
shr
lods
andl
lds
popf
inc
shl
in
xlat
aaa
in
mov
mov
fwait
sbb
addl
subl
jae
mov
test
ret
mov
imul
xchg
pop
adc
loopne
addb
cmp
in
pusha
or
mov
rorb
aas
pop
add
aaa
push
xchg
xchg
cmp
hlt
sub
sbb
out
ret
inc
test
daa
bound
mov
cmp
dec
xchg
xchg
lea
arpl
jp
rcrl
mov
jae
adcl
xchg
adc
adc
adc
mov
iret
adc
sbb
inc
mov
mov
in
in
sub
jge
push
jno
outsb
sbb
pop
in
add
bound
int
jge
pop
imul
test
in
jecxz
xor
fbld
addr16
in
imul
or
cmp
pop
add
test
and
mov
add
fwait
es
mov
mov
xlat
imul
dec
and
push
imul
cmp
fcoml
adc
insb
lock
inc
ret
push
imul
mov
insb
aad
adc
mov
inc
loopne
fldl
and
iret
jo
xchg
aaa
add
and
sarl
test
and
xchg
imul
or
test
adc
inc
add
push
jmp
jmp
outsb
xor
insl
or
jbe
jge
shr
stos
sub
pop
jae
aaa
adc
and
into
jle
inc
sbb
test
or
push
mov
addb
jmp
pop
hlt
sti
jne
mov
jle
cmpb
loopne
jmp
jmp
std
mov
jmp
inc
xor
cmp
jge
loop
pop
pop
and
ljmp
ljmp
movl
mov
je
xchg
outsb
aaa
cpuid
out
sub
leave
fs
ljmp
dec
test
lock
in
pop
int3
mov
cmpsb
jp
adcl
mov
les
push
mov
mov
andl
jecxz
mov
xchg
xchg
int
ljmp
or
imul
add
and
add
push
pop
adc
push
and
inc
dec
cwtl
mov
xor
ss
es
movsb
pop
aas
test
pop
cmp
xchg
inc
jg
mov
pop
or
sbb
data16
mov
push
sbb
mov
xchg
mov
adc
ja
fcmovb
xchg
add
dec
das
dec
jge
or
daa
popa
mov
jg
imul
mov
mov
sub
xor
mov
stos
mov
pop
or
mov
mov
das
xchg
sbb
fmull
or
cwtl
lret
in
dec
mov
jg
ffree
push
test
daa
sar
sbbb
inc
rcll
xchg
dec
int3
mov
add
lea
mov
or
push
pop
out
add
mov
add
jbe
sbb
dec
mov
cmpsl
push
in
push
xor
in
aad
dec
and
cmp
addl
inc
adcl
sub
jbe
stos
inc
adc
pop
mov
add
ret
mov
cmovge
insl
jne
cmpsw
loopne
or
loopne
inc
adcl
inc
jno
rorl
push
fcoms
cltd
sbb
or
inc
xor
sub
xor
lret
arpl
popf
xor
cmpsb
push
ss
pushf
sub
sbb
nop
sbb
rolb
push
testl
mov
push
movsl
lahf
xchg
adc
addr16
xchg
orl
loopne
cmp
or
ret
push
test
loope
scas
add
adc
daa
lea
xor
stos
lret
outsl
push
pop
int3
xchg
in
xchg
movhlps
xchg
test
in
orl
movl
xorb
testl
lock
rcll
cmp
mov
js
add
add
daa
notb
aas
testb
add
and
push
mov
out
data16
fstl
loop
inc
insb
sbb
pop
add
fdivr
mov
movsl
js,pn
arpl
bswap
pop
lahf
cmpl
push
add
stos
in
xor
mov
hlt
cmpsb
js
add
test
inc
mov
pop
test
sub
in
jl
jmp
stc
inc
add
sbb
int
xor
imul
push
rorl
fsubrs
add
jge
movsl
lock
cmc
lds
xor
scas
out
cmp
adc
cmp
sbb
aaa
sbb
arpl
icebp
sbb
adc
ret
movq
stos
inc
fwait
sarb
pop
pop
push
ficoms
inc
dec
xorl
sub
cmp
mov
sti
jecxz
scas
aaa
inc
inc
lcall
ja
jno
test
lds
mov
jb
mov
scas
adc
dec
add
or
sti
or
push
movsl
and
test
lahf
pop
popf
outsl
add
xchg
lret
das
shl
jmp
cmpsb
add
fistpl
jb
cmp
sub
cmp
xor
dec
cs
pcmpgtb
xor
mov
outsb
pop
jne
pmuludq
popa
mov
pop
hlt
xchg
gs
and
into
sub
std
jne
push
sbb
push
jno
hlt
and
pop
or
xor
ja
lods
adc
jmp
lret
scas
add
jp
adc
leave
cmpsl
mov
push
jmp
jae
or
adc
out
mov
sbb
mov
push
pop
push
lahf
sbb
out
xchg
popa
pop
fisttps
cmp
mull
call
xor
jae
mov
test
cmc
ret
mov
adc
add
std
cmpb
cli
stos
and
and
repz
xor
imul
das
mov
xor
inc
adc
sub
inc
add
movsl
sub
imul
mov
sub
pop
popa
ljmp
mov
adc
je
or
pusha
sbbb
xchg
aad
lods
mov
mov
xchg
dec
fwait
dec
jl
fcoml
jecxz
icebp
jmp
or
pop
pop
jmp
push
sub
outsl
mov
sti
mov
cmp
fwait
aaa
mov
or
adc
aad
push
push
repnz
movsl
and
stos
cmpl
and
sub
push
push
dec
das
jno
bnd
out
outsl
adc
and
movsb
cwtl
clc
push
test
push
cs
fistl
xor
jle
dec
dec
loop
and
sub
lret
mov
pop
jbe
jno
adc
stos
fadd
cmp
insb
add
dec
mov
out
mov
sub
mov
les
sbb
pop
jbe
mov
lret
xchg
or
mov
push
add
outsl
pop
xchg
test
xchg
loop
xor
jp
out
int3
aaa
jmp
rcll
scas
mov
mov
and
or
jbe
push
jecxz
and
xchg
int
mov
jae
insl
pop
movsl
ljmp
addr16
or
pusha
rclb
test
adcl
imul
lods
inc
icebp
stc
inc
xor
and
mov
xorl
sbb
aam
add
push
pop
icebp
xchg
pop
sti
arpl
insb
imulb
mov
xchg
sub
xchg
or
outsl
fwait
gs
in
loope
aaa
push
movsb
daa
in
xchg
mov
sub
mov
sub
ds
sbb
sbb
sbbl
std
sub
cs
or
sbb
lret
stc
popf
sbb
pop
daa
mov
lds
mov
inc
orl
xor
aaa
dec
mov
fdivp
out
and
mov
fstl
fsubrs
bound
mov
or
fmulp
es
inc
or
in
sbb
sbb
lods
pusha
push
shlb
xchg
repz
lock
push
mov
mov
dec
mov
repz
popf
inc
stos
pop
or
sbb
shrl
das
sbbl
jo
loopne
inc
cltd
lock
or
adc
gs
in
inc
stc
push
and
add
or
dec
or
xchg
sub
repz
es
int
test
push
mov
call
jnp
or
xor
inc
xchg
pop
mov
mov
mov
leave
pop
jo
jl
test
fcmovbe
int
or
dec
pop
dec
jnp
or
subl
imul
ja
popf
outsl
sbb
inc
jo
mov
jecxz
push
jno
push
sbb
aaa
adc
out
dec
dec
enter
repnz
dec
stc
xor
idivl
lods
xlat
call
fimull
xor
decb
out
xchg
dec
adc
lahf
sbb
inc
seto
loope
add
jo
lahf
outsl
jbe
shlb
sbb
pop
arpl
cmp
pop
popf
lds
jge
sbb
sub
xor
mov
inc
test
mov
push
sbbb
jecxz
jo
add
pusha
rorb
sub
pusha
addb
nop
xchg
adc
shll
in
mov
cmp
pop
ret
sub
jecxz
cmpsl
lcall
icebp
lods
and
std
inc
and
mov
rcll
and
arpl
lods
add
ret
std
push
jo
pop
sub
xchg
std
jmp
rcr
mov
xchg
sbb
dec
xchg
jns
mov
std
sub
mov
arpl
jne
jbe
mov
inc
lea
mov
cmp
popa
loope
inc
inc
jmp
fstp
add
dec
adc
icebp
xor
sub
pop
sbb
xchg
loopne
mov
jge
mov
jecxz
mov
lea
mov
and
mov
test
jbe
xchg
fcmovnb
inc
arpl
and
dec
test
push
das
jecxz
andb
std
mov
pusha
out
sbb
xor
push
sar
dec
movsl
stos
inc
or
add
or
mov
add
jno
jae
mov
fstpl
out
xor
push
xor
mov
popa
pusha
pop
push
je
fists
sbb
adc
inc
cwtl
or
stc
insb
arpl
and
cmp
adc
mov
add
jmp
mov
mov
popf
adc
mov
inc
mov
xor
push
jno
daa
pop
inc
pop
xor
fisttpll
cmpsl
ret
and
or
add
xor
mov
shll
mov
jl
int
popf
and
aad
ds
or
mov
ljmp
jmp
xchg
mov
wbinvd
pop
aaa
xchg
xchg
inc
stos
cltd
pop
jnp
imul
fldl
inc
ret
push
popf
out
mov
xor
pop
mov
clc
mov
jg
dec
pop
pop
into
je
dec
test
dec
jo
insb
fwait
lahf
xchg
push
push
loopne
jge
outsl
mov
push
or
lahf
popa
or
into
jle
mov
or
out
push
mov
jnp
adc
bound
add
add
aas
mov
mov
jmp
imull
pop
inc
sbb
arpl
movsl
in
ficoms
jmp
pop
addr16
sub
xchg
and
and
in
jbe
pop
gs
adc
xchg
pop
ja
adc
mov
mov
lea
rcll
sbb
rcrb
sti
adc
inc
in
fdiv
or
mov
ds
inc
fwait
inc
sbb
or
shr
addr16
xchg
jmp
mov
jge
std
pop
push
sub
imul
and
adc
ret
seta
jge
xchg
fwait
sbb
sbb
xor
sub
cmp
outsb
arpl
and
pop
outsb
sbb
setns
xchg
in
and
jge
lea
mov
testl
jmp
fwait
or
dec
adc
ret
scas
mov
xchg
dec
jnp
xchg
and
js
add
jl
mov
pop
out
sbb
sub
or
and
cmc
and
jno
fsubs
aaa
push
pop
add
and
and
pop
and
xchg
out
push
inc
dec
fcoml
mov
jmp
mov
divps
cs
and
xchg
pop
adc
push
push
xor
adc
andl
aaa
or
adc
and
lcall
or
push
lods
xor
sahf
push
dec
inc
inc
jbe
insl
dec
pop
xor
push
es
inc
push
ja
int
xor
cmp
adc
push
outsb
sub
push
mov
xlat
lcall
inc
push
inc
dec
shrb
jno
jp
adc
ja
lds
mov
dec
xlat
loopne
insb
sub
clc
pop
dec
inc
dec
add
fldln2
in
pop
ret
cmpsb
movsl
jb
pop
sarb
inc
inc
test
jb
imul
mov
inc
inc
inc
jle
jl
cmpsb
push
dec
jp
fisttps
inc
add
fs
arpl
shl
or
leave
jno
out
int
mov
and
ja
inc
movsb
js
outsl
lret
jg
jp
jbe
ds
mov
xorb
push
ja
push
push
bound
dec
jnp
push
sub
sahf
dec
dec
pop
mov
fmuls
cli
imul
pop
and
movsb
jle
or
mov
fs
push
push
mov
xchg
mov
push
setp
push
mov
dec
gs
sub
jo
xor
push
pop
fs
mov
mov
inc
push
sub
insb
push
outsb
dec
push
inc
push
and
inc
inc
loope
cmp
inc
push
dec
inc
push
repnz
jae
dec
push
ljmp
pop
adc
fs
dec
out
outsl
sahf
inc
popf
jo
jae
add
je
bound
adc
lea
dec
jl
pop
testl
adc
pop
add
push
cmp
cmovb
xor
cmp
and
cmp
dec
pop
xor
sub
pop
movsb
ret
lcall
cmp
orl
dec
stos
nop
xor
or
mov
xor
jo
icebp
pusha
cs
push
or
int
popa
jne,pn
xchg
mov
adc
js
inc
orl
dec
stc
rcll
sbb
jge
push
dec
dec
clc
push
mov
xchg
cld
mov
push
or
imul
push
stos
cmp
add
push
in
int3
xor
int3
fs
push
inc
push
add
mov
mov
aam
pop
inc
push
or
ds
fdivs
movsb
xchg
dec
insl
pusha
iret
xchg
adc
xchg
sbb
mov
call
sub
cmp
test
shll
mov
jbe
jge
cld
out
mov
and
popf
mov
outsl
addr16
pop
xor
out
or
cmp
hlt
inc
push
sub
sub
inc
dec
xchg
cmp
push
stos
push
sbb
jp
rorl
test
or
push
pop
and
lcall
inc
rol
sub
pop
jmp
push
cmp
inc
add
imul
xchg
jne
adc
rclb
mov
push
lods
sbb
mov
dec
push
testb
inc
pop
mov
inc
adc
ficomps
int3
mov
jno
ja
pop
pop
pop
push
or
xchg
rorl
sbb
pop
sbb
lock
push
push
je
insb
popa
aad
and
cmp
sub
dec
xchg
les
push
push
mov
push
mov
pop
push
adc
inc
jae
shl
xor
bound
and
into
pop
fiaddl
pop
in
add
add
and
inc
js
addr16
xlat
mov
xor
leave
js
inc
inc
push
mov
insl
lock
push
inc
addr16
jae
mov
mov
ss
inc
push
inc
add
out
outsb
mov
fisubs
pop
inc
mov
sbb
fiaddl
neg
add
jl
fldl
arpl
fidivrs
xor
fdivrl
ficoml
xchg
jmp
or
mov
adc
bound
jne
pop
loopne
outsb
add
fistps
sbb
dec
pusha
stos
xor
pop
sbb
fsubs
push
jecxz
add
andl
mov
loopne
adc
mov
mov
lock
fsub
es
add
mov
dec
sub
imul
add
push
cmc
add
jae
push
and
loope
and
sbb
cmp
inc
add
add
inc
pop
nop
xchg
in
inc
add
mov
add
mov
loope
push
jb
adc
jl
sar
pop
push
sub
lods
in
jbe
dec
outsb
outsb
adc
lret
outsb
adcb
sbb
or
pop
adc
adc
push
mov
wbinvd
mov
add
push
fisubrs
jno
inc
xchg
test
mov
fistps
rcll
out
mov
movsb
cmp
icebp
or
int
clc
out
mov
ljmp
jmp
sbb
pop
push
mov
and
lea
rcll
mov
mov
pusha
nop
mov
cmp
push
mov
fs
jg
adc
xchg
and
loop
inc
add
push
pusha
fbld
lret
subl
mov
mov
xchg
xor
stc
add
je
call
pop
addr16
fisubrs
pop
int
gs
or
jo
pusha
icebp
js
mov
imul
repz
loope
icebp
jmp
stos
mov
repnz
xchg
xor
fninit
mov
pop
or
scas
lods
add
add
loope
inc
lcall
clc
fdivs
push
add
data16
out
mov
xor
mov
hlt
push
push
int3
in
ret
mov
fucom
insb
subl
fbstp
in
out
add
or
or
das
add
jle
cwtl
loop
loopne
and
inc
mov
add
clc
insb
mov
clc
icebp
lods
loop
push
fstp
scas
fldcw
push
hlt
mov
fs
jbe
cld
loope
out
je
jb
jecxz
jae
mov
add
pusha
or
inc
data16
movsb
add
fistpll
and
add
add
je
mov
insb
and
dec
adc
add
push
sbb
pop
lods
loop
and
push
repnz
addr16
lods
pop
mov
sti
ud0
add
add
sti
xor
sti
sbb
mov
addr16
or
jp
cmp
or
sarl
dec
mov
push
sets
adc
adc
mov
or
outsb
in
push
pmulhw
fdiv
inc
pop
pop
sahf
adc
fcomps
testl
add
movsl
rorb
jmp
call
add
or
roll
mov
mov
lcall
loop
rcl
fucom
mov
int
mov
adc
mov
std
fbstp
dec
shr
push
sbb
lcall
popa
add
popl
js
jnp
jmp
cmp
mov
in
fistps
ret
out
sub
push
loopne
sub
fnstenv
add
int
sti
ss
shr
in
add
xlat
nop
shl
arpl
add
inc
lahf
push
test
fisubs
add
lods
arpl
cmp
and
std
pop
push
sub
loope
adc
lahf
mov
outsb
in
add
mov
push
in
lret
mul
xchg
mov
lcall
shlb
xlat
inc
or
and
push
fidivrl
or
cli
outsl
dec
inc
mov
mov
dec
sbb
mov
mov
inc
inc
add
mov
and
sarl
add
inc
mov
or
jno
mov
das
mov
or
pop
xor
xor
addr16
outsl
mov
scas
rorl
and
inc
cmovae
adc
jmp
test
mov
lahf
mov
loopne
jnp
cmpl
or
jnp
mov
add
data16
mov
fidivl
push
or
fadd
push
pminub
cltd
push
mov
jno
imul
add
sbb
jo
movsb
outsb
cltd
pop
jne
ljmp
inc
dec
test
and
mov
inc
mov
mov
test
or
movsl
mov
insb
adc
pusha
stc
addr16
push
xchg
or
clc
mov
add
orb
lea
dec
orl
data16
outsl
cmp
jge
movsb
cmp
jns
mov
scas
mov
jno
inc
lcall
ds
lods
leave
pusha
data16
adc
shrb
add
fisubs
mov
rorb
push
arpl
fnsave
outsb
push
push
mov
pop
add
pop
push
lods
adc
adc
push
jb
in
shl
xor
pop
xchg
push
xchg
mov
xor
test
jecxz
push
pushl
cmp
daa
rcrl
sti
aad
insb
xor
jne
stc
inc
lods
fcmovne
into
outsb
push
hlt
jmp
dec
popa
lds
js
pop
fiaddl
lock
cmp
cmp
out
and
aaa
bound
das
arpl
or
add
stos
test
js
jne
or
jo
mov
addr16
sub
in
jmp
dec
dec
lea
repnz
lods
pop
pop
pop
mov
pop
stc
sbb
push
xchg
sbb
popa
clc
lods
inc
mov
or
xor
cmc
jne
out
adcb
add
pop
mov
lea
addr16
jno
sahf
adc
xor
xchg
out
fdivrl
fldcw
gs
lods
xor
loopne
aaa
outsb
das
in
jo
test
sbb
add
jbe
push
dec
jno
fisttps
shll
add
pushw
or
mov
imul
push
sbb
mov
push
add
push
sub
aas
cmp
cmp
dec
inc
loopne
roll
cmpsl
add
push
gs
mov
loopne
or
stos
movsb
sbb
pop
fs
popa
aad
mov
adc
adc
clc
add
and
bound
lods
cmp
dec
cmp
test
push
ja
and
add
fmull
dec
pop
xchg
roll
pushw
arpl
clc
aam
mov
data16
push
inc
popa
dec
pushf
leave
push
sbb
xchg
fdivr
popa
outsb
inc
or
push
sub
xchg
xor
nop
and
pop
pop
jo
pushf
shrb
push
mov
dec
jo
push
add
out
cmp
scas
pop
test
xor
aad
dec
xor
cli
sbb
sbbb
and
pusha
or
arpl
loop
jo
aad
jecxz
mov
insl
add
push
stos
inc
jno
orb
test
cmovbe
cmp
roll
int
test
outsb
pop
sbb
inc
push
add
and
jg
dec
pusha
or
mov
rcll
imul
js
push
mov
xchg
in
mov
pop
or
testb
push
jl
push
mov
dec
cmp
pop
jle
add
es
insb
imul
jmp
push
pop
je
or
push
pop
jbe
add
pop
enter
orb
gs
daa
out
dec
addl
test
ret
aas
adc
lods
push
inc
sti
push
dec
mov
jmp
push
mov
incb
roll
shrl
jae
ja
ds
arpl
sub
outsl
aad
mov
dec
fcmovnbe
inc
dec
movsb
push
pop
mov
xchg
sub
loopne
push
aas
or
fs
sbb
shll
cld
push
xchg
cltd
repz
loope
jne
daa
js
xor
filds
popa
push
cmp
daa
shlb
push
out
das
mov
ss
cltd
cmp
mov
xchg
lods
addb
addr16
inc
sbb
mov
dec
inc
and
add
and
and
loopne
and
cwtl
mov
es
outsb
dec
shrl
inc
add
xchg
inc
pop
add
subl
jp
push
jmp
out
push
push
stos
push
dec
out
sub
cmp
mov
out
jne
push
mulb
add
add
add
ljmp
inc
and
sub
fdivs
repnz
cs
inc
inc
push
rcrb
dec
ret
addl
out
mov
cmp
dec
loopne
sarb
sbb
push
es
mov
dec
mov
es
dec
and
mov
mov
inc
add
fstp
lods
mov
sbb
aaa
js
das
dec
push
jb
add
pop
jnp
xchg
dec
inc
mov
rdpmc
sbb
pop
jno
outsb
sbb
dec
insb
or
lret
or
mov
les
push
adc
ret
cld
cmp
hlt
rol
leave
jae
daa
outsl
cld
jg
fldl
ja
xchg
xchg
push
outsb
and
fidivrs
pop
test
inc
xchg
repnz
aas
fstpl
sub
push
dec
inc
mov
inc
push
cmp
sbb
outsb
push
js
cmp
movsb
int
lock
or
inc
dec
fiaddl
sti
mov
clc
dec
xor
js
inc
mov
inc
or
fs
sbb
inc
push
dec
inc
xor
xorl
push
mov
inc
inc
cmp
pop
add
xchg
cmp
jno
mov
nop
mov
lcall
cs
add
inc
loopne
xchg
mov
jo
jb
push
push
add
mov
push
gs
fs
fucomi
in
bound
pop
data16
outsb
add
adc
jae
nop
nop
mov
loope
inc
je
and
loop
dec
xor
xor
cli
push
jnp
imul
mov
cwtl
roll
aad
lock
adc
jo
inc
loopne
push
sbb
inc
pop
call
mov
add
push
mov
adc
lods
mov
test
cmp
fs
cmp
dec
mov
adcl
mov
sbb
movsl
mov
insb
mov
sub
pusha
stos
sub
push
imul
sbb
xchg
push
and
sbb
adc
fbld
push
lods
sbb
inc
add
fstl
mov
inc
and
insl
shll
inc
push
lods
adcb
mov
xor
sbb
orb
inc
das
push
stos
test
gs
push
push
adc
jg
adcb
push
adc
daa
inc
sub
or
or
adc
dec
pop
or
jge
icebp
ja
dec
add
xlat
mov
aad
jge
inc
mov
push
lea
daa
in
imul
aas
stos
push
aad
pop
fwait
mov
mov
and
add
ja
pop
mov
dec
gs
lret
lods
rcl
and
mov
fisttps
je
les
pop
aas
or
cwtl
push
and
push
push
and
lret
arpl
add
push
ja
addb
sbb
xchg
jbe
mov
das
push
push
or
popf
sti
mov
rolb
xor
lahf
sub
lahf
push
pop
mov
xor
jbe
test
adc
push
and
lods
sti
mov
loopne
daa
cmpsb
and
xor
sbb
ja
or
sub
stc
sbb
or
xor
mov
dec
scas
gs
jno
sub
or
shrl
cs
inc
mov
cmc
ss
push
imul
insb
mov
movsl
add
fsubrp
into
sub
pop
cmc
add
pop
inc
adc
mov
or
jl
jo
ret
and
or
add
bound
dec
test
cmp
inc
pop
lds
cmp
and
mov
xlat
mov
mov
mov
lcall
pop
or
fdivl
push
sbb
pop
sbb
push
jo
fiaddl
jle
xchg
fdivrs
adc
ja
xchg
add
movsl
dec
pop
xlat
push
insb
lcall
xor
xor
cmpsl
fsubr
xor
mov
adc
jge
shll
pop
sbb
add
mov
pop
addr16
mov
fsubl
jae
jnp
pop
dec
lock
pop
adc
adc
jo
mov
vmovq
xchg
fxch
or
add
ror
das
add
add
aas
es
and
imul
popa
and
in
jnp,pn
daa
inc
lret
mov
mov
ljmp
inc
push
pop
adc
ret
xchg
out
cmp
xchg
movsl
xor
mov
out
nop
and
push
or
mov
notb
inc
dec
inc
js
inc
adc
push
sub
cmp
sbb
inc
icebp
jmp
add
inc
mov
pop
rcr
sbb
push
mov
cmpsb
mov
mov
dec
or
pop
or
jbe
push
xlat
out
or
inc
out
push
fadds
daa
mov
mov
fstl
sub
sub
add
jns
push
int
mov
shlb
icebp
mov
push
outsb
shrb
adc
enter
lods
int
adc
sub
or
jmp
dec
popa
and
push
daa
pop
pop
pop
xchg
into
nop
js
sbb
inc
mov
dec
pop
daa
or
sub
and
rcr
lds
dec
push
out
or
shrl
push
inc
mov
mov
stos
subb
pop
lahf
push
test
push
and
or
lret
push
xchg
stos
cs
push
dec
inc
jns
movsl
insb
push
ja
inc
jne
sbbb
inc
add
add
or
lcall
adc
push
nop
xor
lcall
cmp
pop
cld
pop
mov
xchg
cmp
sub
jo
sbb
add
and
push
xor
in
cmp
pop
dec
lret
add
cmp
sbb
sub
and
shll
sub
outsl
js
gs
and
adc
js
fstps
cld
clc
test
cmp
cmpsb
push
inc
bound
icebp
or
idivb
and
jg
add
push
inc
mov
les
sub
sub
dec
sub
cmp
and
movb
setg
pop
add
push
leave
movl
sbb
push
pop
lret
mov
iret
leave
pop
and
mov
jmp
push
adc
mov
push
xor
add
and
rcll
lods
and
mov
mov
lea
mov
fisttps
jecxz
xor
inc
pop
fisttpll
in
inc
inc
sub
xor
sti
jae
lods
cmpsb
aam
jne
mov
fwait
push
or
sbb
adc
sbb
mov
test
lods
inc
inc
out
subb
rclb
test
popa
sub
mov
popf
mov
shrb
dec
adc
xchg
sub
dec
imul
sbb
mov
mov
sbbl
iret
pop
sbb
mov
mov
lds
add
add
fnsave
push
xor
and
je
xor
or
or
pop
cltd
les
inc
stos
outsl
cmpsl
push
and
jg
in
add
ljmp
ss
push
repz
stos
pop
stos
xor
push
pop
aas
push
push
or
enter
and
xchg
mov
inc
inc
jecxz
pop
jo
mov
movsl
add
bound
push
mov
dec
mov
mov
xor
dec
movsb
sub
push
jge
sub
push
mov
stos
jno
mov
push
xchg
sbb
add
push
inc
cmc
xchg
mov
push
mov
adc
scas
xor
mov
jmp
and
shrb
or
sub
push
insl
inc
mov
adc
stos
and
shrl
outsl
je
mov
ret
sub
call
mov
adc
mov
dec
enter
rolb
stc
jg
add
sub
test
sbb
inc
add
int3
popf
xchg
cmc
mov
popf
lods
inc
and
xchg
cmp
lods
data16
inc
lret
stos
fcmovbe
movsb
adc
and
nop
das
adc
lret
arpl
leave
fldcw
notb
xchg
jnp
xchg
xchg
test
cltd
mov
push
enter
aaa
cmp
fs
dec
xchg
leave
addr16
mov
int3
dec
in
adc
fmul
pop
fsubs
mov
inc
xchg
call
fcoms
jnp
mov
add
jg
daa
fsubrs
cmpsl
ss
out
inc
iret
leave
bound
cltd
pusha
das
roll
jo
jmp
scas
mulb
divl
bound
clc
aaa
cmp
xor
xchg
cmpsb
inc
push
add
aas
addl
inc
imul
mov
aaa
adc
push
jnp
fidivl
inc
hlt
daa
adc
push
and
xchg
push
add
mov
adc
lock
ss
and
dec
data16
imul
popf
dec
fbstp
lds
in
add
shrl
dec
out
or
and
pop
push
add
mov
lds
int3
cmp
outsb
fs
dec
in
add
gs
jne
cmc
js
adc
rcl
add
aas
mov
aaa
and
dec
add
popa
pop
repz
jo
mov
call
cmp
push
fdivp
into
in
xchg
inc
jnp
add
daa
mov
lret
sub
ljmp
cmp
cmp
push
cs
aas
xlat
mov
jnp
pop
or
push
scas
leave
mov
dec
push
std
push
xor
lds
aas
jns
dec
dec
mov
pusha
pusha
aaa
mov
or
shll
fs
outsl
pop
push
lss
add
add
cmp
insb
ficoml
add
gs
cmpb
xor
ja
adc
das
jl
dec
jmp
insl
mov
pop
push
push
mov
jbe
add
mov
cmp
or
jns
negl
push
sub
dec
pop
xchg
fistpll
js
lea
mov
shlb
or
sub
add
xchg
int
mov
xchg
add
sub
xorl
mov
mov
in
psubw
imul
jb
je
arpl
insb
outsl
arpl
dec
lods
std
mov
fs
imul
sbb
jmp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
daa
push
idivl
fstpt
test
push
imul
fs
jae
pop
fistpl
testb
pop
gs
popa
outsb
or
inc
jne
cmp
mov
push
es
js
sbb
mov
mov
es
popa
and
bound
fstps
push
mov
push
sub
outsl
jo
inc
imul
jo
inc
push
jae
cli
rorl
in
push
gs
jne
jns
xchg
or
repnz
jg
inc
outsb
jne
dec
gs
push
dec
into
enter
mov
dec
ret
mov
or
cmpsl
popf
ss
xor
int
insl
xchg
aam
cmp
fisubrl
push
gs
pop
jge
jg
pop
je
dec
gs
jo
cs
cmpb
je
outsb
push
stos
adc
pop
jo
in
addr16
push
or
decb
outsl
jb
adc
jno
outsb
imul
push
pop
pop
outsb
addr16
cmc
push
or
fistl
mov
sbb
xchg
ljmp
jae
insb
popa
jns
mov
mov
mov
mov
mov
adc
jae
dec
je
dec
jo
sbb
les
xchg
sbb
int
xchg
incl
dec
add
add
pop
inc
sub
add
sbb
fs
jno
push
sbbb
pop
add
fidivs
mov
out
fldcw
packuswb
add
mov
jl
stc
push
and
rolb
inc
inc
es
lock
fs
add
outsl
subb
push
pusha
inc
inc
push
inc
hlt
pop
add
fucom
insl
bound
push
rolb
or
rcll
imul
add
mov
add
fwait
ror
sbb
test
iret
add
fidivl
dec
or
mov
das
jl
push
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
