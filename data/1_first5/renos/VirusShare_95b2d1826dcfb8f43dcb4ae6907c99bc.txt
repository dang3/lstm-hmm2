xor
idiv
ret
lea
jmp
mov
pop
cmpb
or
ror
and
rolb
mov
or
enter
movsb
xor
and
and
inc
dec
push
xor
adc
pop
sbb
add
cld
pusha
xor
and
clc
hlt
lock
in
call
xor
push
mov
push
push
call
pop
das
push
mov
jbe
in
add
mov
mov
push
push
sbb
nop
or
jle
pop
pop
pop
ret
das
mov
mov
mov
repnz
mov
arpl
ret
nop
aaa
lock
mov
push
push
xor
cmpl
je
repnz
imul
lcall
push
dec
test
jb
inc
lock
add
rorb
mov
cmpb
je
or
std
das
clc
mov
and
xor
mov
dec
cld
mov
and
xor
jnp
sbb
lock
icebp
add
es
imul
hlt
mov
cmp
jbe
mov
cmp
jae
mov
repz
jne
fcomi
mov
jae
pop
in
sti
ret
decb
mov
or
add
divl
push
sti
jnp
cld
add
ja
outsl
aaa
or
addl
push
lea
lea
jb
sub
push
mov
popa
or
jge
add
push
lock
sub
jae
jmp
or
adc
out
pop
add
int
push
and
ja
mov
nop
pop
imul
cltd
inc
mov
inc
dec
dec
xchg
mov
jg
mov
cmp
js
mov
mov
lea
mov
mov
lea
mov
inc
jae
lea
cmp
outsl
call
jge
lea
mov
inc
dec
and
jne
lea
mov
or
fs
lea
dec
mov
in
call
lea
dec
mov
cmc
inc
les
mov
pushf
dec
es
aaa
mov
mov
xor
ja
lea
mov
dec
push
cmpl
lea
ljmp
clc
jb
mov
lea
dec
mov
dec
dec
cmp
jge
ljmp
sub
mov
jno
mov
pop
sub
inc
mov
mov
or
out
mov
inc
inc
dec
inc
dec
mov
neg
fildll
add
sub
cmpsb
mov
push
cmp
idivl
jbe
cltd
shll
push
mov
stos
jne
movhps
das
jl
mov
push
lret
cltd
scas
push
xchg
arpl
xchg
jl
jb
lea
push
inc
shl
jl
dec
push
mov
adc
and
xchg
imul
mov
adc
jecxz
mov
lea
adc
jo
mov
inc
dec
inc
bound
mov
mov
inc
mov
insl
dec
inc
inc
in
add
mov
scas
mov
jns
mov
dec
dec
ds
lock
pop
test
or
sub
popa
pushl
dec
cmp
jns
mov
lea
dec
inc
inc
cmp
ja
sti
fildl
leave
iret
repz
dec
xchg
in
cmp
jb
sti
in
pop
add
call
dec
pop
jae
fistpl
mov
mov
lea
dec
xchg
sbb
adc
dec
xchg
mov
inc
sti
push
clc
pop
cmp
ds
jle
rcll
dec
pop
leave
mov
mov
hlt
mov
mov
adc
dec
dec
fstpt
dec
cmp
js
inc
add
out
mov
jp
lea
jne
xchg
arpl
xor
jmp
sbb
cwtl
jns
adc
inc
idiv
outsl
mov
fdivl
mov
mov
sbb
ret
insb
xlat
das
adc
iret
dec
mov
mov
mov
mov
mov
xchg
lcall
pop
push
lds
cld
in
jg
push
sub
movsb
fld
mov
out
into
testb
scas
repz
lcall
test
inc
pop
loopne
fmull
jns
fstpt
aam
popa
aam
add
xor
fcomp
loopne
into
sbb
jmp
imul
mov
stos
out
das
cld
outsl
mov
iret
stos
jg
and
mov
ja
jo
outsb
cmp
mov
out
mov
test
xlat
push
pop
cli
pop
jb
faddl
out
stos
in
inc
mov
inc
mov
dec
call
push
clc
jg
sti
xchg
int
jns
into
dec
jle
aas
mov
mov
inc
inc
lock
mov
dec
adc
cmp
jb
ss
sarb
mov
sarb
ss
es
loope
outsb
inc
popa
scas
inc
hlt
jae
lods
cmpb
pop
or
mov
inc
sbb
pop
ret
push
shl
or
jno
je
adc
fwait
or
pop
and
dec
sti
dec
push
fstpt
std
mov
in
mov
mov
cmp
cmp
std
testb
popl
xchg
in
mov
sbb
mov
into
cmp
fwait
sahf
inc
pop
enter
das
xchg
pop
popa
les
mov
pop
les
pop
jle
mov
aas
jns
dec
jbe
cmp
scas
inc
jmp
mov
jb
inc
fucom
or
sahf
mov
imul
push
jbe
out
add
dec
dec
mov
das
jg
mov
ss
mov
pop
inc
movsb
add
divb
ss
inc
inc
adc
mov
and
mov
mov
pusha
movsb
imul
inc
popa
lods
pop
int3
insl
lods
mov
sub
ficomps
xchg
test
movsb
inc
pop
fldenv
pop
sbbb
fists
fstps
ja
test
pushf
add
inc
mov
loope
jle
inc
mov
nop
mov
orl
call
sbb
add
jl
sti
int
and
add
push
pop
addb
js
mov
jns
cmp
dec
lock
adc
and
test
in
iret
mov
jo
nop
pinsrw
add
nop
movsl
mov
jae
jp
sub
dec
loopne
dec
pop
insb
fs
fnstenv
push
push
fucomi
or
sub
inc
pusha
je
push
xor
xor
pusha
mov
out
cmp
push
pop
es
int
jns
dec
add
dec
repnz
and
mov
stc
inc
inc
dec
daa
daa
daa
addr16
dec
push
push
pop
push
cmp
daa
pop
pusha
roll
loope
inc
inc
and
enter
pop
or
cmp
xor
mov
cmp
lret
add
out
fldcw
xor
add
mov
into
or
jns
sub
xor
arpl
nop
clc
mov
jle
cmp
and
test
and
inc
into
into
push
and
sub
insb
push
add
ret
sbb
cmp
notl
or
adc
or
pop
add
sbb
fxch
sub
int
adc
lcall
cmp
hlt
add
and
int
mov
inc
stc
fisubs
push
add
adc
in
mov
xchg
cmp
js
or
adcl
cmp
insl
inc
out
rcr
jns
pushf
popf
faddl
loopne
push
or
add
int
jnp
or
enter
insb
sub
mov
inc
in
incl
mov
cmc
mov
cs
add
add
mov
add
int
rdmsr
add
xor
add
cmp
pop
out
scas
jmp
xor
cmp
xor
mov
pushl
aaa
xor
xor
xor
or
add
xor
out
mov
pop
push
gs
incl
xor
xor
xor
cmp
cmp
js
into
pop
fildl
cmp
xorl
ss
idivl
add
add
test
andl
xor
xor
das
ss
sti
cmp
cmp
out
mov
iret
repz
addr16
loope
out
cmp
push
sub
cmp
loop
clc
imull
imul
push
incl
lsl
out
cmc
sub
pop
sub
pop
sub
and
add
in
in
dec
push
aad
xchg
bound
adc
add
stc
std
xor
out
fistps
sub
cmp
push
mov
mov
xchg
mov
sbb
dec
mov
adc
out
mov
ja
dec
dec
rcll
and
or
sub
cmpsb
and
fsubrs
dec
stos
jno
and
jle
in
mov
mov
mov
push
enter
aad
sub
pop
pop
mov
and
fnstsw
je
cmovle
pop
aaa
pop
in
jle
cmp
sbb
in
push
aad
popa
fistpll
push
sub
jmp
fnsave
pop
in
cmpsb
cmpsl
and
pop
mov
out
pop
add
and
test
loop
jecxz
orb
mov
adc
nop
adc
dec
mov
fxch
inc
cmpsb
dec
mov
stos
dec
cmpsb
es
mov
adc
xchg
fldcw
mov
sub
jbe
sbb
in
push
cmpb
outsb
adc
adc
or
sub
bound
gs
xlat
or
push
stos
daa
idiv
scas
and
push
sbb
es
fistl
sahf
daa
sbb
lods
jne
push
jnp
pop
mov
data16
ljmp
mov
pop
pop
pop
es
lcall
sub
mov
repnz
jnp
fnstcw
pop
lods
movsb
outsl
mov
dec
or
pop
sub
cmp
iret
movsl
xchg
in
pop
sub
stos
adc
jecxz
lea
loop
mov
or
lret
jbe
push
movsl
fwait
or
and
cmpsb
pusha
lea
cpuid
xor
dec
adc
push
fisttpl
mov
mov
inc
lea
cmp
fnstenv
and
jle
fs
push
sbb
or
xor
jle
loop
idivb
addr16
imul
popa
inc
gs
test
sub
sbbl
pop
mov
and
and
insb
outsb
mov
or
mov
into
scas
mov
loope
pop
out
loop
ljmp
insb
sub
pop
fnsave
jb
into
sub
lock
sub
out
xchg
insb
adc
inc
enter
add
pusha
gs
mov
push
pusha
in
pop
aad
add
lahf
pop
mov
cmp
adc
repnz
or
inc
or
xchg
sbb
mov
mov
inc
nop
out
bound
jb
mov
jo
out
stos
mov
fwait
adcb
sub
pop
inc
movsb
cmpsb
or
xchg
mov
mov
add
pop
or
jne
arpl
shl
or
shlb
or
movlps
insl
aad
push
jne
hlt
fwait
call
stos
imul
add
fsubs
cmpsb
push
nop
sub
movzwl
dec
test
or
adc
movl
inc
jns
add
mov
inc
ret
or
stos
adc
mov
add
cmp
or
jmp
jb
add
je
invd
sbb
subl
push
mov
jmp
sub
inc
xchg
or
sbb
out
dec
pop
pop
xor
sbb
rcll
push
call
in
jne
cmp
inc
ret
outsl
popa
fs
imul
inc
jns
adc
push
push
push
outsb
insl
popa
jo
in
call
gs
inc
imul
popa
insb
inc
insb
insb
outsl
arpl
push
insb
jmp
pushl
outsl
jbe
dec
gs
outsl
cmp
push
lea
je
jb
inc
fs
jae
dec
or
jecxz
ficompl
jbe
xor
or
movl
cmp
stc
push
dec
push
mov
pop
js
xchg
push
sbb
in
adc
add
push
in
push
pop
dec
jbe
pop
ljmp
push
ret
cmp
rcrl
pop
dec
push
or
loopne
jge
sahf
xchg
or
sbbb
mov
ljmp
or
push
popa
mov
fmuls
rorl
addr16
js
mov
pop
add
push
mov
call
sti
sub
test
addr16
jb
fs
pop
cmp
leave
add
adc
mov
and
inc
enter
pusha
mov
dec
mov
adc
pop
je
adc
fidivs
push
or
ret
clc
add
adc
loop
and
ljmp
inc
pop
icebp
ja
push
clc
adc
cli
add
add
jne
dec
lock
lea
enter
js
aas
mull
mov
adc
sbb
xchg
daa
and
push
and
jbe
sbb
push
xor
or
adc
mov
cmp
xchg
and
and
xchg
cmp
jae
adc
xor
test
dec
push
stc
mov
or
sub
orl
int
outsl
shlb
jl
cmc
ja
push
xchg
xchg
setl
add
mov
adc
cmpl
mov
push
pushf
add
pop
ss
shl
rcl
rolb
cli
lock
sbb
pop
es
and
push
adc
cwtl
out
ret
push
or
fists
add
std
add
out
mov
outsb
popa
imul
jne
pop
push
or
jb
aam
sub
add
addl
mov
xor
imul
add
test
add
or
mov
fstl
and
add
add
outsb
fs
insb
je
jns
outsl
jb
xchg
mov
jno
push
inc
addr16
imul
addr16
incl
push
imul
addr16
inc
imul
jp
ja
fs
jo
mov
popa
in
jl
popa
sbb
inc
jo
sbb
outsb
andl
je
fs
insb
ficomps
outsb
jge
inc
sti
add
add
pop
mov
hlt
nop
movhps
ja
mov
jne
sub
jmp
lock
mov
sub
jge
cltd
xor
mov
in
push
xor
rclb
mov
in
in
clc
sub
mov
jl
call
add
pop
test
or
subl
mul
jbe
ret
movb
test
jo
test
in
sbb
ret
int3
fs
jmp
sub
sbbb
pop
lock
jne
inc
popa
clc
add
mov
jmp
mov
sub
ficoms
adc
push
inc
nop
cld
jb
test
mov
in
cs
iret
iret
lods
pop
insb
aam
add
inc
adc
or
or
mov
rcll
sbb
mov
je
lret
xor
je
test
adc
ret
mov
sbb
test
push
enter
sub
mov
arpl
or
inc
inc
cmp
add
mov
jns
xchg
test
mov
or
scas
decl
int
lds
data16
pop
ja
xor
div
jnp
stos
ret
mov
or
xor
adc
sub
inc
or
adc
mov
cmp
push
cmpsb
cmpsb
inc
scas
call
adc
mov
jl
jg
sahf
mov
popf
push
mov
add
or
cld
pop
mov
mov
mov
pop
rclb
jmp
mov
nop
stos
outsl
jecxz
push
jne
sti
pop
mov
cmp
aad
test
push
sarb
loopne
jbe
inc
ds
push
xor
mov
inc
push
inc
test
mov
adcl
or
mov
sub
pushf
mov
inc
mov
nop
inc
gs
jb
in
push
and
je
data16
fs
and
adc
and
insb
insb
and
ljmp
insl
jns
gs
pop
sbb
inc
jb
jo
pop
and
incl
outsb
outsl
je
xor
outsl
imul
and
cmp
and
xlat
fsts
inc
cmp
push
add
push
adc
sti
mov
out
mov
or
test
pop
decb
add
adc
or
and
inc
fadd
add
xchg
jge
popf
jnp
add
daa
daa
and
fcomp
or
or
add
or
xchg
pop
adc
add
popf
sub
xchg
std
mov
mov
imul
add
add
lods
rorb
js
inc
push
mov
add
mov
mov
push
push
inc
inc
pop
push
add
push
stos
in
jg
jle
arpl
je
dec
sbb
inc
or
sub
sub
cld
lahf
pop
add
cmc
add
sysret
push
std
in
ja
prefetchw
xlat
add
xchg
std
loope
push
dec
divl
addr16
add
mov
insl
and
jae
mov
pop
inc
seta
ss
lcall
sbb
pop
mov
insb
fwait
and
cli
jecxz
outsl
sub
sub
std
xlat
push
or
fcomi
mov
flds
xor
roll
je
js
and
pusha
iret
adc
or
sbb
es
add
or
sbb
inc
bound
pop
aaa
cmp
arpl
aaa
or
add
mov
in
and
add
push
sarl
xchg
mov
or
insl
cmp
jg
frstor
adc
idivb
outsl
dec
add
or
xchg
int
lock
and
sub
testb
push
add
mov
lret
adc
add
xchg
sbb
sub
add
jbe
cmp
enter
mov
push
inc
cwtl
push
inc
push
jns
xlat
and
ss
sbb
insb
pusha
neg
outsb
add
or
cmp
stc
sub
in
daa
fbstp
xor
push
sub
sbbb
push
loope
and
inc
adc
inc
cs
cwtl
and
jecxz
out
ret
dec
scas
inc
mov
dec
sub
jge
and
loopne
dec
fnstenv
dec
or
mov
arpl
xor
pop
pop
enter
pusha
or
js
xchg
or
sbb
das
mov
adc
mov
xchg
push
jae,pt
and
adc
insb
fs
mov
pushl
lods
add
add
mov
sub
push
sbb
add
add
jbe
jae
adc
sti
or
add
imul
sbb
ret
pop
repz
mov
sbb
push
xchg
sbb
sti
ds
pop
sbb
pushl
inc
jno
incl
add
aaa
je
jo
arpl
or
cmpl
shll
fwait
test
mov
repz
fisttps
fcmovnu
xor
aaa
sub
xchg
bound
add
jle
adc
add
mov
into
inc
dec
push
add
inc
or
adc
faddl
jne
cltd
adc
xchg
mov
push
xor
lods
adc
push
je
fstp
fnsave
jle
and
pop
xchg
add
mov
and
add
iret
sahf
shlb
jle
loopne
jecxz
xor
push
das
mov
jge
arpl
add
mov
xor
mov
std
mulb
and
fsubrl
sub
mov
dec
stos
inc
out
add
jl
add
pop
and
sti
xchg
add
and
sahf
xchg
add
int3
add
dec
fadd
jbe
insb
push
or
push
clc
fldl
aad
in
push
test
movsb
lret
sub
jnp
adc
fcoms
or
cwtl
sbb
idiv
ficomps
imul
push
cmp
in
xlat
inc
ret
mov
pop
in
adc
aaa
sub
xor
testl
inc
fldt
out
dec
mov
xlat
mov
jbe
push
sub
pusha
lods
or
sub
cmpsb
pusha
mov
pop
fwait
loope
sbb
out
jle
jg
mov
and
aaa
out
fsubs
sbb
mov
loope
popa
cmc
js
clc
inc
xchg
push
prefetch
or
fisubrl
lods
inc
mov
ss
sbb
jg
inc
push
pop
dec
lods
jns
jbe
das
insb
je,pn
sub
lods
push
jl
xchg
mov
mov
je
cmpsb
add
cmp
arpl
sbb
scas
jne
outsb
outsl
jmp
in
jae
xor
jle
aas
add
jg
cmp
cmp
out
pop
mov
ss
leave
add
mov
pop
sbb
fildl
inc
mov
cmp
push
out
in
ds
jbe
and
dec
js
pop
dec
pop
stc
push
push
dec
daa
cmp
cmp
fists
in
sti
sub
push
or
idivl
mov
xor
add
cmp
dec
push
fists
ficoml
paddsw
test
mov
daa
loopne
mov
dec
sbb
jle
push
or
jo
aaa
fsubrs
enter
or
psadbw
or
jp
inc
xor
jle
aam
sbb
insl
mov
sbb
dec
cmc
fsubrs
or
push
add
ret
push
js
subl
xchg
push
popa
rcr
add
hlt
jl
das
jmp
outsb
xchg
sbb
add
cmp
jg
jbe
sbb
gs
mov
add
roll
jge
je
dec
inc
jp
jl
popa
imul
pushf
add
dec
sub
mov
dec
sub
pop
inc
dec
fmuls
jle
cmp
fisubrl
jecxz
popf
hlt
lods
in
negl
jge
mov
lock
sahf
jnp
and
out
sahf
fdiv
fiaddl
xchg
inc
lods
sub
cmp
lds
jo
push
sbb
pop
inc
sub
push
dec
jp
das
push
es
sbb
pop
add
inc
mov
out
sub
mov
sub
xor
sub
divl
pop
xchg
jne
sub
out
arpl
xlat
lds
fdivrl
xchg
xchg
inc
lods
out
clc
mov
ss
sub
jl
leave
shlb
in
stos
insb
gs
mov
cli
cmpb
xor
inc
mov
sbb
out
fadds
push
add
out
lret
inc
fistpl
lea
xor
outsb
loope
in
popa
fildll
scas
dec
pop
popaw
xor
neg
pop
pop
je
push
das
fists
icebp
aaa
or
push
add
mov
push
push
cmp
ror
aad
mov
or
fildll
in
stos
push
dec
push
daa
add
mov
iret
add
icebp
add
pop
jg
addr16
push
push
lret
and
je
ret
fidivs
lods
or
xchg
js
jmp
in
xor
push
ret
aaa
push
xchg
pusha
cmp
outsl
es
cs
sbb
jno
add
push
cwtl
inc
cmp
add
push
push
sbb
jns
mov
push
sti
inc
outsl
push
cmpsl
arpl
dec
addr16
pop
in
mov
jnp
add
jne
rol
decl
je
jle
push
mov
sub
jne
mov
daa
cmp
fists
sbb
xchg
sub
sub
pushf
and
jle
pop
xlat
xor
std
or
les
lret
movsl
dec
add
mov
push
sub
xor
and
insl
pop
fildl
and
fadds
or
cmp
divb
add
fimuls
mov
mov
and
fldenv
sub
push
pusha
mov
rorl
dec
ja
push
ret
adc
mov
mov
xor
mov
ret
ss
ja
movsb
dec
sbb
jnp
push
or
daa
in
enter
js
sub
fcomps
fwait
out
test
mov
imul
das
inc
xor
addr16
cwtl
xchg
push
add
mov
or
jno
push
push
xor
popl
jns
movsb
sub
sar
cmp
jno
fwait
dec
das
push
sub
movsb
das
and
jmp
push
fwait
inc
mov
push
xchg
mov
mov
imul
subb
xlat
imul
inc
in
and
les
iret
lahf
and
adc
jno
push
mov
mov
movsb
inc
add
ljmp
imul
and
out
out
test
jp
xchg
mov
pusha
push
sbb
je
fmull
fcomi
jmp
and
sbb
xlat
push
int3
mov
add
icebp
mov
dec
jecxz
xor
in
outsb
pop
cmpb
fmull
add
fadds
repz
sub
cmp
loope
push
nop
ss
mov
mov
insb
fsubr
scas
xchg
int3
cmpb
adc
scas
fiaddl
adc
push
and
rorl
push
adc
cmp
and
sub
dec
or
push
test
add
cmpsb
or
imul
aas
dec
daa
lret
fdiv
add
pusha
push
xlat
fistl
lcall
adcl
mov
xchg
add
or
sub
shrl
cmp
inc
fidivl
lock
inc
loopne
pop
cs
mov
outsb
jbe
dec
sub
outsb
pop
mov
dec
xchg
jp
dec
cmp
bound
nop
fsubs
or
cmp
gs
subl
add
xlat
jbe
mov
pusha
lods
and
and
out
mov
push
iret
mov
rcrb
inc
aaa
cwtl
orl
lods
inc
fdivs
adc
je
js
and
fsts
add
shll
adcb
xor
test
imul
es
rcll
popa
lret
test
scas
add
xlat
jo
push
jno
dec
xor
jne
sub
pop
fadds
iret
ret
mov
icebp
sub
xchg
mov
push
ss
ja
pop
mov
pop
out
pop
pop
ds
pop
stos
loope
clc
ret
daa
js
aas
outsb
push
cli
lahf
scas
fisubl
iret
in
clc
push
sub
or
sahf
mov
mov
inc
sub
lahf
xchg
insb
push
cli
aad
jp
out
roll
jo
aam
fwait
mov
jnp
add
cmp
insb
pop
in
andb
test
dec
ficoml
mov
rcll
xchg
in
mov
add
iret
cmp
push
mov
sbb
popf
rcrl
or
fs
lcall
test
mov
cmc
push
test
clc
mov
cmp
das
sub
or
pop
dec
aaa
sti
sbb
jne
insb
sub
jo
rclb
xor
decl
mov
aad
and
pop
dec
call
jecxz
out
fisttpl
movsb
xor
fdivrl
mov
jl
rclb
add
insl
xchg
inc
mov
jbe
sub
das
cmp
popa
loope
aam
jle
or
sub
mov
sub
mov
aaa
xchg
xor
sbb
xor
mov
xchg
mov
cld
xchg
out
sub
cltd
je
loopne
sbb
testl
cmp
inc
xor
scas
ja
dec
insl
das
into
jle
sti
mov
loope
mov
or
pop
je
in
jge
in
pop
es
add
cmpsl
sbb
into
mov
pop
lret
jnp
in
push
mov
dec
scas
jbe
inc
arpl
pop
mov
rorb
das
lods
out
verw
push
add
das
sbb
loope
lcall
test
adc
aas
xchg
xor
in
mov
and
popl
xchg
add
cmc
in
xor
sbb
insl
jl
push
xchg
push
in
mov
test
dec
or
loopne
cmp
pop
aas
mov
fiadds
add
pop
pop
arpl
addl
push
pop
mov
push
jns
push
cmpsl
push
inc
insb
imul
push
lds
push
and
out
sub
cmp
loop
ret
ret
cmp
mov
mov
inc
xchg
pop
movl
mov
sahf
std
sub
dec
movl
pop
pushf
mov
sbb
or
push
lock
test
data16
pop
inc
movb
daa
pop
inc
sbb
adc
incl
fsts
add
dec
xchg
push
popf
dec
pop
dec
daa
sarb
daa
stos
pop
in
hlt
shll
jns
dec
add
pop
inc
cmp
test
pop
xchg
and
pop
cmp
mov
push
xchg
roll
and
das
or
push
jo
push
sbb
lods
imul
aaa
push
scas
jge
lock
mov
sub
dec
or
sub
outsb
inc
call
outsb
in
xor
mov
xor
jb
frstor
sub
pop
ljmp
mov
adc
mov
adc
testl
popf
add
sarb
push
cmp
pop
les
aas
cmpsl
pop
add
fcomps
stos
and
push
push
in
sub
lea
xor
shrl
sbb
insb
std
mov
fnstsw
cmpsl
pop
fstps
adc
add
adc
lock
sbb
push
fimull
adc
dec
adc
insb
iret
add
mov
sbb
in
mov
cmpl
cmp
sub
and
jp
push
int3
enter
jecxz
faddl
and
xchg
es
cmp
xlat
lea
cs
fdivrl
out
in
ja
and
push
and
std
mov
sbb
loopne
mov
cltd
pusha
outsb
int
lret
ret
mov
sbb
mov
daa
test
inc
sbb
inc
in
sub
cmp
inc
in
test
pop
pusha
sbb
add
pop
jo
sbb
add
or
jno
mov
mov
mov
aaa
popf
adc
and
jle
push
cmpsb
fisttps
testl
js
adcl
push
pushf
or
adc
add
xchg
popa
pushf
mov
nop
aas
fisubrl
bound
fmull
lock
mov
int3
das
das
int3
jae
js
add
cmp
adc
sub
pop
xchg
and
fstpl
cs
fsubrs
in
fbld
jp
xorl
sbb
dec
pop
sbb
je
lcall
js
xchg
push
popa
fwait
mov
pushf
pop
imul
mov
mov
loopne
rclb
popa
hlt
jp
add
scas
mov
jne
insl
iret
push
xchg
push
cmp
lcall
cmp
sbb
pushf
ret
aad
dec
push
xchg
or
int
imul
dec
aam
fdivl
popa
mov
push
add
adc
add
daa
hlt
mov
xor
ficompl
stos
lcall
fsubrl
popa
mov
or
xlat
xor
cmpsl
pop
mov
pop
mov
jae
sub
inc
cmp
mov
add
mov
and
out
out
iret
pop
pop
xor
cmp
ds
cmp
push
cmp
pop
popf
aam
emms
fisubl
mov
faddl
jns
cmpsb
and
fildl
rcl
xor
out
xchg
sub
add
psubusb
jecxz
mov
or
shll
in
mov
pop
in
lret
and
test
mov
add
xlat
divb
push
das
fldenv
dec
aad
push
sbb
sbb
inc
insl
add
inc
xchg
mov
add
sbb
xchg
mov
outsb
xor
mov
daa
lods
fcoms
and
imul
cmpsl
stos
mov
xor
dec
out
std
sbb
shr
sub
bound
sbb
das
inc
sbbb
lock
and
xor
ficompl
std
xor
lods
push
test
int3
add
test
xor
mov
or
pop
xor
rorb
in
xchg
cmp
push
dec
fs
xor
das
mov
or
and
cld
cmp
or
add
adc
pop
testl
adc
mov
je
and
loopne
dec
test
pop
jo
dec
mov
or
ds
xor
rcrl
xor
push
ljmp
scas
sub
jp
test
sbb
or
mov
lock
xor
jg
add
mov
es
pop
roll
cltd
into
jae
test
cwtl
call
mov
push
iret
sbb
mov
dec
cmpsb
aaa
shll
pop
pop
aaa
popa
pop
leave
lahf
add
aaa
sti
mov
cld
call
lahf
leave
cltd
packuswb
es
fdivrs
cmp
and
clc
sub
or
push
cmp
xor
jne
negl
pop
xchg
nop
or
and
push
hlt
dec
enter
idivb
add
jl
rorl
outsb
and
mov
loope
out
loope
add
lret
lea
xchg
sub
loope
xchg
rolb
cmpsl
ss
adc
jp
repnz
and
or
jge
xlat
jp
andb
popa
cmp
jg
or
mov
mov
sbb
push
inc
jle
and
or
or
mov
and
lret
int
cmp
aaa
test
sbb
xor
mov
mov
dec
loopne
ret
xorb
sub
loopne
out
adc
loopne
mov
pop
push
lret
push
jbe
add
pop
bswap
fdivrs
std
lret
ffree
mov
cmp
push
jo
mulb
push
jbe
xchg
push
ja
inc
mov
pop
addr16
movsb
fildll
dec
pop
loope
into
mov
sbb
out
and
int3
rcll
ja
aaa
push
insl
shll
call
rcl
mov
or
jmp
jo
fldlg2
or
std
and
add
iret
mov
jecxz
call
jnp
add
adc
push
out
xor
je
lret
add
in
imul
and
adc
lock
pop
repnz
or
movsb
inc
or
lods
idivb
cmpsb
dec
scas
or
push
sub
sbb
imul
adc
mov
pop
inc
stos
cs
loope
or
sub
outsb
fldt
sub
inc
jecxz
push
dec
push
cs
sbb
int
mov
xorb
sbb
sbb
inc
daa
or
and
or
add
pop
gs
leave
imul
pop
sbb
push
pop
dec
sbb
mov
push
outsb
pop
or
push
add
or
pop
fisubrl
add
push
pop
or
or
arpl
push
insb
add
add
inc
sub
roll
xchg
dec
push
push
cwtl
jmp
push
add
and
arpl
ja
fadds
mov
sbb
jle
std
cli
test
inc
pop
and
shlb
or
cmpsb
pop
xchg
jl
iret
add
ss
mov
imul
ds
lret
fldl
bound
or
ret
movsl
shl
js
jae
lret
push
cmp
mov
fwait
jnp
sbb
fdivrs
jl
and
out
fs
fistps
es
add
ds
jbe
orb
and
xchg
imul
inc
and
jle
jo
popf
out
daa
outsb
ds
repz
in
xor
in
pop
int
imul
pop
dec
pop
cld
ds
in
push
pop
jle
movl
out
mov
sahf
adc
es
mov
daa
pop
into
mov
pop
lods
pop
push
imull
jle
add
or
add
cwtl
hlt
jmp
mov
sbb
add
add
mov
fidivs
add
fs
sahf
scas
mov
pop
fwait
or
scas
popa
jge
lods
loopne
add
movsb
mov
jmp
scas
xchg
mov
pop
xor
data16
into
pop
mov
mov
lahf
mov
xchg
sub
bound
jne
aaa
dec
or
mov
mov
pop
pop
add
out
pop
mov
inc
sbb
sbb
add
sub
mov
test
leave
pop
pop
js
iret
mov
out
pop
mov
push
add
outsb
cmc
das
mov
jne
fimuls
sub
mov
iret
inc
test
or
iret
pop
adc
outsl
ret
imul
pop
dec
js
bound
sbbb
ret
imul
mov
sub
mov
out
test
mov
js
xor
cmp
in
ja
lret
pop
or
xchg
mov
pop
xor
subb
push
inc
call
push
pop
pusha
and
sub
das
adc
xchg
add
das
mov
aaa
inc
stos
and
aam
outsb
inc
and
scas
mov
lods
aaa
and
cmp
mov
mov
addb
dec
pop
pop
lock
int3
icebp
or
and
add
into
mov
outsb
and
and
or
or
or
aas
sub
divl
test
push
pusha
pop
sbb
das
imul
das
out
xchg
icebp
xchg
mov
das
test
sbb
sub
sub
pushf
xorb
add
add
and
pop
inc
and
and
or
mov
mov
pop
imul
stos
sub
mov
and
jg
push
iret
push
pop
daa
sub
add
push
xor
in
outsl
out
imul
sbb
mov
push
sub
das
dec
dec
pop
cmp
daa
popa
push
sub
mov
cmp
and
push
pushf
bound
loop
push
in
add
push
mov
call
testb
push
or
nop
add
stc
cmp
xor
xchg
mov
dec
test
pop
loope
test
pop
loop
ret
sub
push
roll
icebp
dec
xor
jp
je
ret
mov
rorl
ffreep
dec
xchg
ret
dec
ret
test
jp
addl
bound
pop
and
test
popa
or
ret
dec
cs
jmp
xchg
int3
mov
ss
ret
add
xor
sbb
mov
int3
int
sbb
xor
sub
imul
jo
mov
cmc
orl
je
call
jae
push
loope
cmp
pop
pusha
pop
lds
jp
call
and
add
iret
lods
sbb
adc
test
jp
sbb
sbb
and
adc
push
inc
iret
fcmovne
roll
in
cli
push
nop
dec
hlt
mov
fadds
mov
movsb
test
loopne
fistps
dec
xor
icebp
loop
test
iret
pop
lea
add
dec
sbb
mov
adc
daa
lods
push
pop
cmpsl
mov
test
mov
and
add
push
xchg
xor
testl
push
rol
in
mov
mov
aad
add
int3
cmpsb
movsb
in
mov
insb
push
inc
dec
sarl
int3
popw
and
pop
and
adc
das
add
adc
or
bound
push
lea
mov
das
outsl
pop
xor
sub
aaa
sub
pop
mov
add
std
ss
sbb
xor
int
daa
xchg
lods
js
test
mov
subl
stos
pop
pop
inc
mov
and
call
inc
sbb
fsubrs
or
mov
push
sbb
incb
jns
adc
sbb
and
push
push
es
ret
mov
cmp
into
aaa
js
cmpsl
es
es
scas
dec
push
call
jg
insb
xor
add
and
or
outsl
insb
fildl
fiaddl
insl
stos
daa
aaa
add
adc
xor
sahf
push
cmp
leave
pop
shlb
scas
push
sbb
enter
lret
pop
sub
jo
adc
sbb
add
sbb
dec
leave
js
jge
or
ficompl
or
pop
loope
fst
add
cmp
xor
decl
xchg
sbb
jmp
test
icebp
sub
sbbl
push
push
jle
inc
fisttpll
and
iret
call
sub
popf
popa
jmp
push
jg
out
jecxz
daa
insl
cmp
jp
jge
jle
add
xor
loope
sbb
push
stos
push
xlat
jge
ljmp
out
jns
or
outsl
cmp
push
push
dec
xor
loopne
inc
popf
movsb
push
mov
sub
lods
fistl
xor
imul
mulb
or
rcl
adc
mov
lret
sbb
add
iret
add
pusha
mov
int3
lcall
addb
xchg
cmp
cmp
add
cld
mov
test
push
aas
push
adc
adcb
fwait
adc
aad
bound
sub
adc
dec
rolb
mov
arpl
fisubs
jo
mov
scas
pop
inc
js
or
fnstsw
push
xor
dec
xchg
into
sub
ret
jg
mov
test
lds
addr16
rol
jecxz
xchg
adc
lret
pop
dec
xor
inc
jno
and
adc
das
lahf
add
xor
inc
mov
add
movsb
mov
sarb
ret
into
mov
sub
aad
mov
xlat
xor
fmuls
in
into
addr16
es
or
pop
mov
mov
xor
or
pop
sbb
cld
dec
xor
sub
mov
and
pushf
cmpsb
adc
fdivrp
test
fldl
aad
cmp
movsb
jecxz
fisubrl
lock
add
sahf
xchg
add
stos
dec
ljmp
or
test
xchg
jp
sub
sahf
add
push
xchg
jns
push
mov
cld
and
and
lods
scas
sub
mov
or
icebp
inc
sarb
push
and
scas
mov
repnz
and
js
aaa
inc
stos
fldl
jecxz
in
test
sahf
int
cmp
or
adc
into
inc
mov
mov
or
jle
jne
fimull
mov
imul
aas
jmp
mov
fstl
sar
bndldx
pushf
lret
push
shrb
push
data16
dec
iret
fsubrs
lods
jns
push
stc
cmpl
inc
mov
inc
lcall
or
mov
es
jae
sub
and
sbb
sub
out
aas
addl
lret
fldcw
pop
mov
or
sbb
sbbl
out
pop
jo
dec
xor
test
sti
icebp
pop
push
push
fsubs
push
inc
add
sub
pop
xor
pop
inc
xchg
sarl
lret
vmovss
mov
movsb
hlt
jo
lds
jo
xlat
sbb
lods
das
cmp
add
push
imul
and
in
push
sbb
sbb
jle
pop
adc
sbb
stos
out
jecxz
movaps
in
dec
mov
inc
dec
gs
loope
add
push
es
repz
and
sbb
stos
mov
pusha
ret
push
popf
mov
rcll
fsubrs
jbe
jo
gs
push
xor
and
sub
add
fwait
pop
push
dec
stos
or
pop
adc
adc
das
or
aas
sub
sub
and
or
add
sub
push
adc
jbe
mov
bound
pop
pop
xor
mov
mull
iret
dec
int
mov
dec
ficompl
into
out
xchg
jmp
mov
lock
jmp
xchg
stos
aam
jle
repz
xchg
mov
pop
orb
jne
test
out
add
xchg
fisttpll
loopne
push
fisubs
int
lcall
mov
outsb
jno
rorb
or
xchg
and
insb
add
loope
mov
daa
cmp
aad
call
dec
xor
iret
mov
xchg
jno
pushf
mov
push
repnz
cmp
rcll
and
and
subl
and
ret
rorb
bound
mov
in
dec
inc
push
gs
bound
adc
call
xor
inc
push
lahf
add
push
lock
and
mov
sbb
loope
jmp
sub
xchg
es
pop
es
fidivs
mov
aaa
out
rcrl
rolb
divb
arpl
into
aad
les
fiaddl
iret
loopne
ss
in
movsl
push
inc
sbb
in
cmpsl
pop
jae
jl
das
js
jmp
movsb
daa
bound
sub
inc
lcall
mov
lock
popf
fs
mov
jo
sbb
xor
call
aas
push
jb
lods
pushf
adc
pusha
out
sbb
pop
push
pop
dec
sbb
mov
push
sub
test
inc
push
cmp
pop
mov
daa
dec
test
mov
adc
add
mov
fldenv
fs
push
cmpl
push
sarl
fs
loop
add
jnp
cmovs
or
xor
sub
outsb
ret
mov
mov
arpl
cmp
inc
cmp
and
dec
pop
rolb
cmpl
std
inc
jno
data16
mov
xor
dec
daa
fcoml
mov
xor
test
adc
xorb
js
insl
daa
imul
add
mov
inc
js
outsl
adc
jge,pn
jecxz
cmp
mov
mov
sub
test
or
mov
sbb
loopne
movsb
insl
pop
and
stos
xchg
dec
and
loop
es
mov
lock
stos
cs
aam
ret
pusha
movsb
adc
lret
cmp
mov
daa
push
inc
xlat
ss
test
arpl
and
sbb
push
jge
shlb
jo
jbe
pop
je
cmpsl
imul
or
adc
addr16
push
mov
xchg
int3
inc
popa
add
jmp
jp
sub
mov
pop
cmpl
fists
sbb
jne
loopne
das
pop
pop
xor
add
je
testb
out
rep
add
pusha
mov
sub
fldcw
mov
int
les
out
xlat
mov
mov
xor
mov
and
fiaddl
sbb
bound
scas
sbb
mov
sub
inc
lea
jle
xchg
dec
les
lock
les
and
gs
or
lods
fistps
sub
push
mov
jle
pop
fdivrs
lods
andb
jp
push
adc
scas
es
add
add
out
test
pop
cmp
loopne
movaps
dec
loop
loope
rorb
orl
jge
mov
in
inc
call
sbb
jno
and
leave
add
push
mov
mov
cmpsl
enter
sbb
stos
in
lret
inc
and
or
inc
lock
sbbl
cmc
test
add
pusha
test
fisubrs
test
das
cltd
cmpl
pop
mov
pusha
inc
je
xchg
push
xchg
jo
xor
sti
pusha
inc
icebp
ss
aad
add
mov
xchg
add
add
jbe
roll
popf
pop
in
lds
fdivl
inc
lods
sub
pop
mov
cli
shrl
cld
cmpsb
pop
sti
jbe
imul
bound
lods
sti
aas
fadds
mov
adc
fstpl
dec
jmp
filds
adc
or
and
jne
pop
repz
loopne
add
imul
aad
out
inc
and
mov
lods
ret
jmp
popa
sub
scas
stos
pop
sub
pop
mov
imul
lods
in
xor
dec
shll
rolb
or
adc
roll
pop
ret
rol
jnp
mov
jp
cltd
cld
scas
or
sbb
or
adc
pop
int3
jge
fildl
outsb
ret
push
out
push
aas
inc
add
xor
je
push
jne
jmp
jecxz
lret
xor
imull
xorl
push
sub
in
adc
add
push
mov
mov
jns
or
inc
pop
pop
cs
pop
and
mov
jno
fs
sub
out
jge
add
adc
add
ret
adc
xor
push
jp
pop
mov
mov
nop
and
mov
fadd
adc
push
mov
inc
adc
out
aas
mov
imul
cmp
dec
imul
jno
mov
xchg
or
in
in
cmp
out
je
jne
cmc
call
aam
xor
std
aam
enter
scas
mov
and
dec
inc
add
popa
pop
les
repz
jne
in
push
xor
add
test
or
ret
cmpsl
pop
push
pop
mov
or
adc
cmpsb
sub
pop
out
shrl
test
xor
add
stos
mov
mov
push
inc
divb
movsb
lds
sbb
push
arpl
fsts
ljmp
jno
mov
in
out
imul
inc
cmp
cmp
js
jp
pop
shll
inc
daa
xorb
shrl
or
push
loopne
mov
inc
sub
xor
adc
ds
lahf
or
addr16
sbb
out
repz
jo
and
fmul
pushf
rorl
jge
les
lahf
les
jmp
mov
and
push
mov
sbb
in
push
mov
outsb
jae
add
inc
sub
mov
add
inc
negl
add
mov
dec
pop
xchg
daa
mov
fdivrs
xchg
out
sub
xchg
mov
or
and
mov
ret
cli
fwait
ja
lret
mov
test
mov
xchg
ret
add
sbb
out
inc
adc
or
outsl
sbb
shrl
scas
stc
cwtl
imul
or
scas
xchg
mov
add
test
lods
xor
xor
mov
test
int3
and
jp
and
add
sbb
pop
cmc
push
sub
les
ficoml
das
call
mov
push
jbe
push
cmp
xor
data16
pop
cmp
xor
cmp
scas
xor
cmp
sbb
adc
outsl
and
enter
icebp
add
outsl
xlat
pop
jecxz
outsb
insl
es
or
mov
notl
int3
lods
loope
jg
sbb
mov
or
push
push
cwtl
mov
jmp
ret
fnstenv
jg,pn
sub
inc
sbb
push
aaa
pop
adc
addr16
shll
mov
aam
insl
daa
arpl
into
pop
mov
sarl
outsl
add
int
jmp
push
xor
ja
aas
ss
inc
jle
sub
xor
imul
fs
xor
or
rdmsr
inc
test
leave
mov
or
sbb
inc
out
sbb
and
push
inc
pop
dec
sbb
jecxz
sub
popa
mov
xor
out
jmp
test
mov
insb
out
push
pop
and
and
and
pusha
iret
or
and
pop
inc
testl
test
and
jbe
add
repz
cmp
popf
or
and
in
or
inc
outsl
sub
addr16
sti
addb
sbbl
ljmp
pusha
xorl
add
xor
push
or
or
adc
mov
iret
or
cmp
addl
test
xor
test
xlat
sbb
jecxz
adc
test
in
jle
ret
or
push
mov
arpl
add
dec
xor
xor
push
cmp
push
insb
mov
push
cmpsl
and
popa
dec
lahf
adc
nop
jmp
xchg
xor
out
fs
push
mov
jecxz
mov
ret
push
sbb
les
fnstenv
fcmove
jge
notl
popa
xchg
push
cwtl
adc
cmp
mov
adc
cmp
inc
xchg
ret
jo
inc
or
sbb
pop
fwait
and
out
out
cmp
adc
mov
dec
pop
dec
cmp
xor
out
int
and
in
pop
jmp
fucomi
mov
imull
jne
push
fstps
adc
sti
scas
popa
adc
flds
and
aaa
ret
cwtl
popa
outsl
push
dec
push
push
cmp
aas
pcmpgtb
insb
cmp
adc
xlat
hlt
cmp
aad
inc
mov
jne
inc
push
push
sbbl
fistl
cmpxchg
push
jo
pusha
jge
or
mov
mov
adc
rclb
fwait
mov
mov
xor
aas
adc
mov
pusha
insl
out
dec
add
aaa
add
leave
xor
pop
cmp
addr16
aas
and
arpl
fwait
pushf
dec
cmp
inc
add
imul
xor
xor
int
and
lods
or
jg
xchg
and
fcomps
leave
cmpxchg
pop
inc
es
sbb
adc
imul
mov
and
push
dec
inc
xor
push
pop
mov
aad
jl
xchg
sahf
jg
orl
jnp,pt
cmpsl
clc
push
in
cwtl
mov
je
or
fdivrs
inc
jge
fsts
mov
xchg
in
test
xchg
or
cmpl
icebp
test
lea
fadds
cmp
mov
cmp
or
xchg
pushf
mov
lahf
pop
push
rcl
jmp
and
rorb
pop
sub
and
mov
and
cs
aaa
out
js
insl
rcll
push
hlt
sub
popf
mov
aad
shl
fbstp
mov
push
mov
mov
xor
and
mov
inc
scas
add
xor
test
push
fs
pop
adcb
pop
cwtl
cld
push
andb
fcmovne
mov
call
add
shrd
and
fcmovnu
mov
nop
cmp
cmpsl
scas
out
xorb
fisubrl
mov
xorl
or
outsb
stos
addr16
jle
push
or
pop
rcrl
sbb
jo
cmpsb
or
jnp
xor
add
lods
lods
aad
add
insl
aad
shrb
adc
imul
into
scas
and
push
loop
mov
jg
inc
gs
stos
lsl
and
add
rclb
and
call
fldt
movsl
mov
jge
arpl
xchg
test
add
in
out
xchg
xor
push
int
xchg
ret
add
jo
inc
jb
jle
adc
stos
lret
mov
cmp
add
mov
xor
ret
and
dec
xchg
add
lcall
iret
add
mov
adc
lods
push
lds
add
push
push
jge
lahf
test
rcr
cmp
lret
inc
fsubr
add
push
lea
imul
int3
push
in
addr16
imul
lds
sbb
inc
or
pop
adc
or
pop
mov
pop
sbb
dec
adc
fistl
add
ja
and
int
add
sbb
ss
jmp
adc
jle
sbb
cmpsb
lret
dec
fwait
jbe
stos
lds
js
dec
pop
out
test
mov
jmp
fstpt
mov
dec
mov
add
lds
test
scas
imul
push
jmp
pop
mov
ret
xchg
leave
stos
xor
jnp
js
stos
jg
xchg
sbb
jg
mov
pop
rorl
es
or
jnp
in
sbb
fadds
inc
inc
pop
test
daa
adc
mov
shlb
lods
pusha
pop
add
dec
jb
pop
sub
mov
roll
fmuls
jle
cld
mov
insb
sub
ss
adc
test
out
ja
gs
pop
xchg
pushf
inc
in
mov
enter
test
andb
sub
jg
pop
adc
inc
xor
inc
inc
movb
or
clc
mov
or
test
mov
das
inc
std
and
push
add
test
cmpl
loop
stos
mov
fistl
sbb
jecxz
jno
lcall
mov
bound
jle
cmp
sarb
cmp
adc
enter
bound
dec
pusha
push
cmp
or
aad
xchg
xorl
mov
cmp
and
ss
sbb
sub
inc
sbb
insl
and
adc
scas
fs
dec
mov
loope
push
fdivrl
ret
add
dec
pop
xlat
sahf
add
push
idivl
inc
int3
insb
push
sbb
rclb
ret
cwtl
and
mov
inc
mov
push
mov
ja
and
mov
aaa
arpl
pop
divps
and
inc
jae
inc
aas
daa
and
xchg
xor
and
les
pop
dec
ret
or
mov
cwtl
xchg
mov
ffree
dec
or
and
js
imul
repz
ss
scas
dec
test
add
scas
sub
add
jo
add
scas
ret
push
into
add
or
adc
movsb
and
xchg
sbb
fs
xor
cld
jmp
dec
mov
xchg
xchg
ret
rcrb
lods
mov
ja
and
dec
and
push
fsubs
push
inc
mov
and
shll
sbb
sbb
xor
xor
or
insl
lods
out
fisttpl
add
test
popa
xor
aaa
test
cmpsb
jg
hlt
stos
and
xlat
push
mov
ror
lds
dec
dec
iret
sub
sbb
lea
les
adc
xor
dec
bound
or
test
sbb
push
lock
mov
inc
aas
lods
inc
sub
jb
add
je
add
mov
inc
hlt
and
leave
cmp
or
shll
nop
stos
lret
jle
add
add
lahf
mov
clc
sbb
sub
sbb
shrb
mov
pop
ljmp
xchg
sbb
das
ret
add
inc
inc
sti
mov
rclb
arpl
xchg
mov
test
loopne
xadd
or
lock
pop
loop
sbb
sbbl
push
imul
inc
cs
fisttpll
pop
inc
andl
stos
cmovae
int
test
cld
ljmp
jae
adc
push
lds
fiaddl
inc
xchg
xchg
add
and
in
sub
adc
into
arpl
push
test
iret
adc
es
cmp
push
lret
fdivr
std
arpl
les
mov
xchg
outsb
inc
mov
push
iret
jle
jge
pop
push
xor
ret
and
scas
push
push
cwtl
sub
xor
push
cmp
bound
sbb
sbb
ja
push
das
lods
xor
stos
pop
push
aam
fisttpll
movsb
aad
mov
bound
adc
xor
and
xor
jl
cwtl
xor
das
mov
arpl
add
pop
ret
jne
xor
iret
fsts
iret
mov
das
sahf
and
mov
mov
and
rorl
cmc
mov
das
pop
mov
fdivrs
in
in
shlb
inc
add
inc
jb
outsl
iret
dec
or
sub
and
cwtl
jno
push
mov
roll
adc
push
sub
test
out
mov
nop
cmp
add
es
addr16
jae
popa
xchg
sti
mov
mov
hlt
lcall
lock
rorl
cmc
shrl
pop
call
xchg
push
ds
xchg
sub
and
push
arpl
daa
push
pop
mov
mov
cmp
rclb
ljmp
or
paddq
outsb
jno
jl
add
loop
mov
dec
push
cmp
fldt
les
cmpsl
icebp
daa
in
aam
in
mov
jbe
addr16
popa
jle
push
sbb
push
cmp
movl
xor
push
add
bound
insl
xchg
and
repnz
pop
and
iretw
jne
popf
gs
mov
adc
dec
shlb
xchg
test
lea
lcall
pop
in
xchg
or
sbb
das
or
sub
test
xor
mov
dec
addps
cltd
mov
sbb
and
sbb
dec
hlt
push
pop
xchg
fdiv
xchg
loopne
test
push
iret
inc
sub
and
mov
cmp
pop
push
scas
stc
xor
call
pop
pop
call
or
mov
cmc
inc
xchg
mov
into
scas
and
dec
mov
sub
xor
fsubs
jp
dec
iret
inc
xchg
shrd
cmc
cmp
outsb
cmp
sub
movsl
orl
mov
mov
sub
cmp
pop
dec
imul
sub
xchg
cmp
dec
inc
aas
xchg
fdivs
dec
out
mov
int
andl
sbb
cmp
andb
push
adc
sbb
fsubs
cs
subb
cmp
dec
or
lcall
loope
lods
cmp
fbld
imul
pop
sub
add
clc
daa
dec
call
scas
sahf
xchg
sbb
jecxz
iret
mov
or
aam
ret
and
scas
jge
movsl
push
add
jne
add
mov
add
inc
bound
ret
lods
cmp
sub
or
sub
add
mov
xor
lret
test
rcrb
or
mov
hlt
test
in
mov
sar
out
pop
mov
lahf
rcrl
adc
pop
iret
int3
and
lcall
mov
aad
xor
popf
add
cmp
adc
push
dec
jg
or
push
xchg
or
xchg
mov
scas
lcall
test
js
jp
mov
sub
addl
adc
dec
cli
push
push
dec
rorb
and
jle
les
test
subl
and
or
test
mov
cld
xchg
sbb
add
testb
jne
push
xorb
mov
dec
test
mov
addl
lods
and
in
mov
or
addb
or
push
xchg
repz
inc
es
sbbl
and
cmp
cmpl
out
loop
push
arpl
xchg
lock
ficompl
adc
pop
mov
xor
fistpl
enter
pop
adc
stos
mov
jecxz
sub
pop
lods
pushf
sbb
push
or
jo
push
sbb
pop
orl
sarb
push
les
ficomps
inc
cs
xchg
add
in
orl
push
push
lahf
lcall
mov
jl
mov
xlat
mov
pop
pop
push
inc
ret
insl
adc
test
jo
aas
cmove
cmp
movsl
mov
or
fdivs
shlb
sub
mov
mov
xor
sub
sbb
cmp
and
or
sbb
stc
add
dec
scas
and
push
add
cmp
sbb
into
and
mov
mov
enter
sbb
adc
insl
sbb
or
in
fwait
jecxz
cld
rcll
fcomip
lds
cs
pop
das
ds
sbbl
dec
push
sbb
sub
dec
inc
xor
dec
cmpsb
ret
popa
cmpb
pop
jle
cmp
jmp
mov
stos
jg
popa
test
mov
fcoms
les
and
into
dec
lds
scas
fdivs
into
push
xor
adc
push
cwtl
sti
push
loope
or
test
daa
mov
push
mov
imul
call
ja
adc
pop
mov
call
lods
sbb
popa
cmpsb
ss
jl
add
jo
xchg
mov
push
ja
xchg
and
int
jl
and
pop
rorl
inc
inc
loopne
aaa
push
cs
das
xchg
das
cmp
das
xchg
and
xor
xchg
pop
and
stos
ror
orb
sub
and
loopne
or
andb
cmpsl
sub
jae
cli
and
fcoms
outsb
xorb
stos
xor
mov
sbb
add
dec
pop
mov
ret
pop
xchg
inc
sub
cmp
jo
sbb
ljmp
mov
push
aad
push
xorb
mov
loop
cmp
sbb
mov
aam
push
and
push
jle
cmp
int3
cmp
frstor
xor
inc
push
xor
pextrw
cmp
jl
push
mov
notb
jbe
jo
mov
add
push
xchg
pop
fisttpll
lea
test
jo
aaa
sar
or
xor
sub
xor
sub
jbe
lahf
mov
jnp
add
jge
enter
mov
and
cmp
nop
add
out
in
ret
push
adc
imul
sbb
sbb
incb
out
mov
jmp
andl
ljmp
notl
jo
jp
pop
xor
call
lds
dec
hlt
in
or
popa
push
or
xor
jbe
jmp
add
sub
arpl
andl
and
lods
hlt
inc
and
xor
adc
icebp
mov
test
add
idiv
cmp
data16
and
add
test
das
inc
jns
out
test
out
fisttpll
mov
sub
mov
icebp
xchg
js
xor
loopne
pop
arpl
sbb
jae
ret
xlat
sub
dec
sub
into
mov
sub
cwtl
push
stos
push
sub
mov
ss
in
test
push
out
cmp
das
jno
dec
push
rcll
inc
mov
push
pop
addl
lock
add
imul
add
mov
cmp
fnsave
mov
add
aad
popa
andb
aam
push
or
adc
mov
cltd
lcall
outsl
mov
xor
cmp
xchg
jnp
adc
or
stos
std
shl
add
pop
sbb
xor
sbb
push
int3
add
loope
jp
push
jecxz
int3
and
fs
jb
push
and
mov
cmpsb
cli
add
repz
rcr
mov
xchg
push
and
pushl
dec
icebp
dec
shll
inc
add
popa
fs
loopne
pusha
xor
sbb
adc
and
ljmp
pop
popa
sbb
and
dec
adc
push
adc
dec
cmp
test
cmpl
mov
and
movsl
bound
js
add
xor
inc
cmp
xor
scas
lock
jb
add
js
cwtl
inc
mov
pop
add
cltd
ret
scas
jb
mov
or
ret
jns
mov
pop
gs
mov
mov
push
jmp
scas
and
call
xchg
bound
pop
addl
lock
adc
aaa
ss
jb
lods
add
xor
xor
daa
push
mov
inc
jns
lock
add
push
sub
push
insl
jns
rorl
pop
jmp
xlat
push
xlat
andl
insl
insl
xor
das
dec
popa
sub
or
aad
loop
sub
sub
jp
loopne
cmpsb
mov
das
inc
push
xor
mov
ficompl
or
in
pop
mov
inc
adc
into
pop
push
pop
sub
inc
notl
int
sub
dec
sti
mov
fsubl
arpl
add
jnp
mov
sbb
add
adc
dec
xchg
fstpt
push
mov
imul
lods
adc
adc
pop
jmp
dec
sub
or
in
addl
push
or
mov
xorl
insb
test
adc
int3
add
fcoms
call
jne
enter
sub
xchg
test
or
jne
loopne
ret
or
add
test
iret
xchg
loope
in
cmpsb
sbbb
mov
sbb
push
lret
sub
jne
mov
xor
mov
cmp
clc
mov
xchg
sbb
mov
and
mov
cld
inc
sub
push
adc
or
jle
fiadds
or
and
rol
pop
insb
in
jns
add
dec
inc
icebp
xchg
cmp
xor
and
xor
cmp
inc
inc
dec
cli
js
shrl
mov
inc
xor
lods
je
inc
shr
xchg
dec
mov
sbb
out
and
sarb
sbb
imulb
loop
out
pusha
or
dec
mov
push
mov
fidivrl
es
ret
pop
subb
add
xor
push
jb
mov
sub
fldt
or
push
sub
shl
jns
fcomip
hlt
int3
sub
and
xchg
pop
hlt
lods
cmp
and
stos
sbb
push
mov
shl
nop
popa
iret
sub
jge
push
sbbb
test
fisubs
mov
mov
cmp
iret
xor
push
jle
aam
xor
and
push
jno
ja
add
pop
sbb
jne
mov
jl
mov
movsl
aaa
je
and
cli
jo
out
pop
push
aaa
sti
js
divb
jle
sarl
dec
push
lods
stos
loopne
add
mov
sub
mov
push
mov
mov
add
adcb
fbstp
shll
add
sbb
leave
lahf
inc
xchg
int
inc
sub
inc
inc
xchg
shll
cwtl
jae
in
das
popa
xor
js
lock
sti
inc
arpl
adc
pop
sbb
push
pop
xor
pop
int
jnp
mov
sbb
jbe
cmc
pop
adc
xlat
sub
sub
dec
in
mov
notl
setl
xor
aad
inc
subl
push
xor
or
add
dec
sub
xchg
movsb
ret
push
mov
pushf
pop
pushf
pop
imul
mov
mov
lret
es
movsb
cmp
xchg
out
scas
fcmovne
sbb
in
pop
fmul
rorb
mov
icebp
ljmp
lcall
popf
jno
das
int3
lret
imulb
add
lret
lret
mov
mov
ss
incl
cmp
or
test
jl
andb
and
shl
loopne
lods
ret
scas
incl
add
mov
imull
test
jne
leave
notb
mov
inc
lcall
xchg
popl
nop
stc
xchg
push
loope
lods
sbb
jmp
push
add
add
mov
jmp
add
mov
jl
rorl
pop
jbe
and
and
int3
icebp
icebp
pop
sarb
out
movl
dec
out
jno
adc
stos
sbb
lahf
push
test
shlb
insb
add
mul
cmp
out
mov
insb
sub
jbe
fwait
and
mov
jmp
jp
aaa
test
sub
sbb
sbb
dec
cmp
dec
jle
rcll
ja
rolb
xchg
xor
add
es
sbbl
inc
jb
mov
int3
xor
sbb
imul
subb
sub
jb
test
xor
mov
push
jle
push
dec
xchg
jnp
bound
repnz
orb
xor
das
mov
les
je
hlt
cwtl
adcb
shlb
push
xor
mov
repz
leave
xor
jg
cmpsl
cli
mov
loope
clc
xor
mov
aam
inc
sub
clc
sub
xchg
cmpl
mov
leave
add
popf
imul
pop
sub
pusha
test
mov
scas
inc
jle
add
pusha
lret
jle
std
jg
jbe
dec
subl
cmp
pop
imul
shlb
push
sbb
dec
dec
jbe
call
inc
sub
js
xchg
daa
xor
jp
add
mov
mov
sahf
inc
xlat
arpl
cmp
pusha
dec
jo
in
inc
pusha
and
ss
sbb
inc
stc
mov
inc
cmpsb
inc
inc
adc
sub
inc
inc
xor
inc
lock
pop
shll
aam
loopne
add
cwtl
or
adc
jo
pop
mov
ja
pop
sbb
add
push
pop
and
pushf
loopne
sbb
and
push
test
outsl
out
and
lahf
jl
mull
mov
add
test
adc
lods
and
xchg
js
jnp
mov
lods
jmp
pop
cwtl
lods
mov
xchg
xchg
sub
jns
in
cmp
xchg
mov
mov
lea
in
or
xchg
inc
sub
stos
cwtl
dec
out
aad
inc
jle
dec
rclb
repz
mov
jl
ror
and
pop
out
fstps
repnz
imul
popa
mov
xlat
lock
push
xlat
subb
out
stos
and
imul
sbb
divb
mov
sbbb
out
cmpsl
aaa
jae
mov
ljmp
call
push
add
call
pop
movb
in
mov
or
or
mov
jge
and
xchg
xchg
adc
jp
add
or
test
clc
inc
sub
sbb
mov
fdiv
push
das
jmp
jecxz
pop
divl
mov
out
xor
adc
add
xchg
ror
decl
testl
aam
sub
lcall
jge
sti
sbb
xchg
iret
and
or
and
xlat
mov
sar
sahf
mov
mov
push
push
in
movsb
pop
add
aam
std
push
and
loopne
inc
inc
mov
lds
lds
fcoms
loopne
cmp
xchg
ja
sub
into
mov
mov
mov
push
insb
sbb
xchg
mov
test
push
xchg
orb
adc
dec
adc
aad
pop
outsl
pop
sub
lahf
call
push
dec
lea
mov
mov
mov
mov
es
cwtl
mov
cmp
add
dec
mov
clc
mov
lods
call
pop
push
sub
test
pop
push
fstpt
pop
rcll
or
xchg
sbb
test
inc
dec
mov
data16
loope
mulb
faddp
pushf
and
leave
ret
xor
push
aam
dec
add
push
loop
mov
arpl
sbb
mov
cmpsl
cmp
fdivl
sbb
add
fadd
mov
cmp
push
cmp
push
push
jne
cmpl
stos
push
add
push
outsl
shl
lods
and
and
push
mov
jmp
rolb
lock
mov
mov
jae
pop
mov
test
das
add
pop
sub
out
ds
xchg
adc
sbb
sbb
adc
jge
test
adc
or
in
icebp
xchg
fwait
jbe
push
jle
sub
add
and
int3
push
mov
imul
sbb
pusha
lds
xor
outsb
and
sahf
adc
call
inc
rcrl
mov
ja
addb
sub
jno
andl
test
negb
cwtl
mov
inc
and
pop
xor
mov
xchg
and
roll
ljmp
loope
cwtl
test
pop
popa
inc
mov
xchg
sbbl
das
xchg
add
sub
or
xor
iret
jo
daa
mov
pushf
cmp
sbb
lods
loopne
adc
mov
lds
ficoms
ret
add
es
sub
mov
sub
mov
lock
stos
scas
push
fisttps
jl
adc
mov
mov
push
sub
lahf
lcall
dec
dec
mov
movsb
jecxz
test
add
mov
rcrb
sbb
or
add
mov
and
cmpsl
sbb
loopne
loopne
cmpsl
sub
inc
scas
jb
cmp
push
xor
xchg
repz
test
jle
call
cltd
ds
sub
adc
pushf
inc
xlat
mov
and
sub
or
jmp
loopne,pn
scas
push
mov
movsb
fidivl
inc
test
xorl
mov
daa
add
xchg
stos
xchg
mov
mov
out
lret
add
pop
das
test
xchg
aad
in
mov
pop
pop
adc
inc
inc
xor
movl
cs
cmpsl
mov
loop
xchg
pop
or
inc
xchg
or
mov
stos
lret
add
inc
xor
push
outsl
pop
push
add
add
jl
sbb
inc
mov
dec
push
push
xor
lods
xchg
pop
cltd
or
add
mov
sbb
cmc
cmc
mov
mov
cltd
jo
shll
sbb
or
scas
test
sub
push
push
je
cmp
js
loope
xor
sahf
xor
pusha
cmp
cld
push
orb
mov
adc
jg
push
int
mov
jle
sbb
stos
aaa
mov
into
nop
mov
out
inc
lods
adcl
sti
jnp
push
adc
or
sub
mov
mov
xchg
adc
das
push
repz
int3
sub
adc
mov
xor
xor
push
adc
and
pop
popf
sub
cmp
sti
sbb
adc
pop
lds
test
fiadds
ds
dec
and
or
aam
pop
jns
cmp
mov
mov
adc
shll
mov
sbb
pop
inc
js
xchg
lcall
cmp
adc
stc
cmpsb
mov
cmp
add
leave
aad
add
pop
or
pop
adc
or
ret
pop
stos
ficomps
mov
rclb
mov
and
xchg
and
ss
je
test
dec
cmp
filds
jle
add
sub
add
push
inc
mov
shlb
filds
xchg
jg
cmp
pop
mov
in
sbb
insb
out
push
daa
pop
lcall
inc
adc
add
pop
and
dec
push
pop
adc
stos
mov
pushf
add
jnp
lods
inc
in
fldt
stos
or
or
stos
and
adc
scas
cmpsl
lcall
mov
and
jg
scas
or
nop
out
sub
mov
loopne
in
cltd
dec
and
inc
add
je
fistpl
xor
rclb
test
mov
cmp
fsubr
mov
aad
aas
pushf
xor
daa
jmp
sbb
add
fildl
clc
daa
push
jnp
add
add
add
cmp
testb
leave
add
pop
ret
add
add
sub
sub
js
add
add
adc
jl
subl
test
add
inc
add
xor
push
adc
cmp
mov
add
sbbb
sahf
movsb
fwait
cmp
das
sub
daa
inc
sub
sub
popf
mov
sub
shl
sbb
mov
sub
fwait
sbb
shll
iret
out
aas
mov
sahf
sbb
push
dec
sub
inc
mov
shlb
ja
dec
and
inc
movsb
addr16
jg
mov
test
sub
mov
jmp
pop
imul
dec
shlb
int3
pop
mov
idiv
inc
sbb
in
in
lods
out
xor
cmp
jnp
rolb
xor
mov
or
das
sub
xchg
sub
icebp
push
xchg
mov
pop
jae
pusha
add
gs
in
scas
popa
into
inc
cwtl
push
ljmp
add
push
je
ret
stc
xchg
mov
ret
shl
ja
lcall
inc
push
xchg
and
mov
mov
xchg
dec
fs
sub
fxch
push
xchg
ret
mov
leave
xchg
push
divb
insl
cld
mov
fdivl
mov
inc
lret
add
sub
sbb
add
fimull
jle
iret
mov
out
adc
icebp
into
orl
mov
movsl
scas
popf
bound
lcall
jbe
xlat
xchg
mov
scas
cmpsl
and
lcall
adc
test
or
insl
into
jbe
pop
mov
and
sub
sub
mov
mov
pusha
sbb
ret
mov
xchg
sub
addl
addl
repnz
aam
and
cltd
rolb
dec
shrb
test
jle
cmp
leave
loopne
add
cmp
xchg
adc
outsl
xchg
sub
sbb
sbb
mov
sbb
adc
add
mov
iret
sub
add
add
rclb
dec
mov
mov
jns
dec
loopne
loope
and
cmp
orl
stos
mov
negb
mov
mov
pop
ficompl
pop
add
add
dec
sub
sahf
and
add
push
rorl
pop
push
les
fimuls
xor
jl
loope
inc
fsubl
dec
or
aaa
cli
add
into
in
sbb
mov
adc
mov
inc
sbb
or
mov
xor
cmp
loope
xor
push
sbb
pop
dec
mov
fs
mov
imul
pop
out
inc
stc
imul
and
mov
sub
testb
dec
aam
mov
or
aaa
or
jb
xchg
fildl
outsl
push
inc
mov
push
les
jge
add
cmp
sbb
pop
ret
or
dec
movsb
adc
insl
out
mov
adc
dec
dec
mov
int3
std
mov
adc
stos
sti
push
mov
xchg
jae
or
data16
adc
add
roll
pop
adc
loope
call
movsl
push
iret
shrl
xchg
data16
inc
sub
or
adc
fimuls
xchg
adcb
sbb
xchg
ret
aam
sub
jl
inc
sub
and
popa
dec
add
data16
jbe
and
test
rcll
sbb
cmp
dec
mov
ret
cmp
and
and
popa
nop
push
add
cmovae
into
cmpsb
mov
and
adc
subb
dec
and
sbb
push
mov
xor
call
sbb
add
subl
test
cs
in
add
test
xor
mov
xorb
into
cli
adc
inc
movsl
dec
scas
bound
xor
testb
push
inc
popa
mov
or
mov
pop
cmp
loop
adc
loopne
dec
xor
rcrb
adc
dec
dec
cmp
in
mov
adc
cmpsl
xor
test
xorb
lds
lock
cmp
jb
mov
mov
or
jp
je
cs
pop
sahf
stos
sub
jne
idivl
and
dec
pop
ret
stos
daa
test
mov
ret
mov
dec
test
jmp
dec
test
out
nop
adc
pop
push
aas
and
sbb
mov
lock
xchg
loop
mov
mov
arpl
movsb
push
xchg
lds
jbe
mov
and
insb
cmpsl
or
aad
lahf
inc
sub
iret
pusha
fwait
insl
sbb
ljmp
call
pop
xchg
cs
inc
dec
push
jo
mov
inc
xor
adc
lods
dec
sub
xchg
inc
std
push
inc
xchg
jno
xor
outsl
mov
or
sub
stos
add
dec
dec
and
jl
aas
jo
inc
gs
jge
sub
fidivrl
sub
dec
fwait
add
inc
imul
inc
lret
leave
in
cmpsb
inc
mov
js
pop
dec
stos
push
shlb
shrb
popa
cmp
add
adc
inc
cmp
cmpsl
sbb
inc
aaa
test
push
imul
xor
adc
lods
mov
adc
jnp
popf
push
xlat
andb
movl
fsub
repz
add
xchg
enter
sbb
fadds
insb
mov
dec
push
jle
inc
in
es
dec
jle
mov
scas
outsl
flds
inc
or
xchg
daa
or
stos
mov
dec
push
mov
mov
lods
ja
cld
test
add
pop
out
add
xchg
mov
push
xchg
push
lock
imul
rcrb
pop
push
inc
sbb
inc
xorb
fdivrl
pop
adc
mov
jle
roll
jg
pop
mov
add
or
push
sub
or
push
roll
and
cmpsl
lods
mov
xchg
sbb
push
popf
mov
fmuls
push
mov
mov
mov
inc
pop
mov
and
mov
and
or
lock
daa
repz
mull
mov
mov
cmpsl
or
lahf
xchg
jmp
in
add
dec
inc
movsb
and
bound
or
int
push
mov
fistpll
add
add
lret
push
lcall
xor
testb
pop
cmp
cwtl
push
popa
or
mov
sub
pop
inc
insb
dec
pop
test
adc
mov
test
mov
lods
stos
and
cmp
addl
dec
sub
pop
dec
cmp
mov
lods
loopne
inc
mov
sahf
stos
push
mov
je
and
mov
push
and
push
and
add
ret
popf
push
mov
cmc
call
and
add
pop
cs
add
push
mov
sahf
test
rcll
cwtl
mov
cltd
insb
xor
imul
in
inc
adc
into
mov
xor
dec
or
jmp
sti
xchg
and
and
ja
sub
sub
jmp
xchg
cmpsl
mov
cmp
outsl
xchg
sub
pusha
adc
add
pop
xchg
scas
inc
das
add
test
or
ret
adc
dec
and
insl
push
aaa
stos
push
ljmp
fsubr
scas
or
dec
shll
mov
outsb
and
ja
and
inc
ds
lahf
iret
add
hlt
and
rolb
adc
adc
ds
mov
pusha
hlt
stos
pop
dec
out
scas
repnz
mov
adc
hlt
test
push
lahf
insl
push
lea
daa
jge
xor
in
nop
aad
add
dec
xorl
pop
jge
pop
mov
inc
xchg
lds
sub
jbe
cmp
push
add
pop
lds
dec
pop
jo
data16
clc
mov
pusha
xor
pop
dec
lahf
add
popa
xchg
js
add
push
pop
out
repnz
sub
movsb
inc
mov
xchg
imul
pop
push
sbb
shll
icebp
mov
aas
mov
inc
cmp
dec
mov
pop
push
mov
sub
mov
inc
jp
aas
in
mov
sbb
xor
add
cs
xchg
lds
shrb
push
xchg
outsw
lret
shrb
mov
mov
xor
add
fisttpl
negb
aam
mov
into
es
pushf
push
js
dec
inc
jle
iret
jg
lea
jnp
add
jno
pop
mov
mov
outsl
and
dec
mov
stos
pop
adc
imul
rclb
pop
repnz
shr
push
add
xor
push
xchg
pop
in
push
push
push
mov
je
sbb
shll
add
pop
pop
adc
inc
adc
andb
push
xchg
dec
nop
mov
das
fwait
aam
jb
popa
dec
call
mov
push
iret
xchg
nop
or
jb
movsb
xchg
inc
add
sarb
les
pop
pop
icebp
int3
add
xor
push
push
xor
pop
test
test
jmp
inc
ja
fs
mov
and
cmpsb
cwtl
rorb
xchg
mov
mov
cmp
rolb
xor
test
and
push
fists
outsb
cmpsb
clc
sbb
into
leave
ss
es
jne
lock
enter
jnp
int3
add
shl
and
inc
push
add
jle
mov
xchg
movsb
and
divb
push
jp
pop
ljmp
jl
and
inc
rol
push
pop
xor
push
mov
ja
movb
imul
push
lcall
rol
shrl
mov
jl
add
jl
jo
push
in
std
push
arpl
sbb
iret
xor
cwtl
xchg
add
popf
filds
sub
cmp
je
mulb
sub
sub
lds
or
adc
ficompl
insl
mov
or
pushf
push
pop
lea
xchg
push
int
shl
and
mov
enter
sbb
lea
rdpmc
mov
nop
mov
push
mov
daa
mov
hlt
mov
mov
daa
add
les
aas
add
xor
jns
ds
js
and
inc
xlat
aad
mov
sbb
jge
stos
and
add
jmp
dec
xchg
add
cmp
or
xchg
add
movsb
enter
sbb
leave
lahf
shlb
add
jge
pop
sub
call
loopne
fcomps
mov
pusha
push
add
movsb
push
or
cs
push
inc
jae
add
xor
sbb
mov
mov
sub
xor
or
push
or
data16
icebp
pop
push
rorl
das
xor
in
sbb
ret
add
add
or
jp
xchg
adc
bound
test
push
mov
enter
out
mov
or
mov
push
mov
scas
mov
adc
loope
mov
dec
push
or
orl
ljmp
pop
fnstsw
outsb
or
jne
mov
xchg
enter
pop
push
loopne
faddp
test
scas
and
pop
xchg
cmp
loopne
mov
dec
fadd
and
push
jmp
stos
into
aaa
cmp
jge
xchg
mov
loopne
mov
sub
ret
and
sbb
frstor
pop
cld
mov
stos
into
add
xor
or
adc
add
lcall
and
movsb
sbb
cmpsl
call
adc
cmpsl
cmp
jmp
fdivr
stc
fld
mov
push
dec
xor
js
jle
outsb
xor
fcoml
loopne
shlb
shrd
mov
loop
mov
sti
push
sbb
sahf
ljmp
mov
iret
dec
mov
int3
addb
shrl
push
pop
xor
pop
pop
or
pop
pop
nop
mov
mov
xor
xchg
jne
sub
add
mov
pop
or
fwait
jno
shlb
aaa
or
or
cmp
push
xchg
xchg
mov
mov
sbb
out
iret
dec
and
pop
push
cmp
xchg
inc
fs
xchg
or
daa
xchg
dec
push
bswap
cmpsl
fldenv
mov
cmpsl
mov
and
popa
sbb
and
jg
mov
cmpsl
pop
add
mov
stos
cmpsl
dec
inc
outsl
pop
and
out
or
add
pop
push
arpl
mov
sub
in
std
inc
in
xchg
stos
sbb
imul
add
xchg
test
sbb
inc
addb
pop
xor
mov
enter
push
jp
and
int3
mov
lds
pop
aam
aad
lods
xor
hlt
pop
insl
sub
adc
adc
add
xor
add
mov
adc
add
je
or
push
cmp
or
stos
aaa
sbb
repnz
daa
rorl
jp
mov
mov
stos
add
inc
lods
std
mov
jno
mov
popa
insb
lock
add
or
dec
xor
inc
dec
mov
mov
leave
or
push
dec
out
sub
stos
push
icebp
orb
dec
dec
add
fisubs
xchg
push
lock
inc
push
pop
daa
adcb
int
sbb
xor
jae
fldcw
loope
dec
adc
addl
aam
cmp
loop
lcall
dec
dec
push
jge
stc
stc
std
add
add
mov
mov
push
add
lds
inc
adc
ret
xchg
fisttps
jnp
jo
pop
xlat
xor
add
jmp
leave
lds
lea
and
fsubrl
test
sbbb
inc
mov
out
lret
push
shrb
pop
sbb
hlt
add
adc
mov
nop
push
dec
xchg
sub
aam
xchg
mov
inc
and
aaa
test
lods
xor
rclb
jno
or
lds
pop
leave
cmp
lods
cmp
les
or
cmp
xor
pop
xor
add
mov
or
div
adc
mov
cmpl
jno
push
shll
inc
fwait
inc
mov
les
sub
push
shl
add
fcmovnbe
in
out
inc
sbb
dec
inc
lcall
enter
mov
xor
repnz
sbb
cmpsb
rclb
divl
repz
das
and
test
jnp
push
adc
ja
mov
das
scas
jp
adcb
pop
leave
ljmp
or
push
and
xor
in
jg
test
stos
jo
push
inc
bndstx
addb
mov
add
sub
or
mov
aaa
and
popf
mov
data16
mov
scas
mov
push
in
pop
lret
sti
cld
and
dec
sbbb
mov
lahf
push
repnz
sub
sbb
or
fbstp
ds
mov
rcll
ja
je
and
stos
cltd
mov
and
jl
into
xchg
push
lds
loopne
scas
cmp
pushf
fcompp
cmpb
lcall
rcrl
push
dec
jno
or
sbbl
imul
jno
pop
roll
and
xchg
enter
mov
dec
jl
scas
mov
pop
rol
dec
adc
xchg
and
mov
mov
or
into
insb
inc
jg
pop
test
je
pop
ret
mov
lret
ja
loop
mov
stos
and
out
adc
jo
inc
jbe,pn
loopne
inc
out
jne
push
cmp
outsl
scas
add
int
and
sbb
mov
ds
mov
xor
adc
pop
loopne
push
dec
mov
or
cmp
mov
xchg
pusha
popa
mov
mov
push
xchg
push
or
mov
add
lock
dec
jnp
mov
mov
dec
dec
pop
sbb
mov
mov
cmc
rorl
mov
jo
pop
cmpsl
cmpsb
ss
ret
sbb
pusha
and
sub
js
dec
popf
xchg
pop
mov
mov
push
xchg
pop
or
arpl
add
adc
or
gs
mov
adc
and
dec
adc
pop
mov
adc
inc
neg
mov
pop
out
dec
jmp
pusha
lods
cmpl
pop
shrl
aam
mov
xor
adc
and
xchg
xor
rcll
shll
pusha
ss
repnz
orb
mov
test
xor
testb
ficoml
dec
das
mov
loopne
hlt
sahf
add
or
cwtl
and
stos
flds
xor
hlt
lods
push
cmp
inc
iret
dec
and
cs
test
inc
int
mov
ret
orb
adc
cmp
mov
pushf
scas
push
dec
cmpsl
addr16
inc
jns
xor
inc
icebp
jge
mov
mov
cmc
je
imul
lea
add
int3
dec
add
aad
les
mov
push
scas
nop
or
movsb
ret
adc
sbb
andb
loop
or
mov
or
add
scas
loopne
pop
or
int
mov
lcall
loope
jmp
add
lds
inc
cld
xchg
cmp
push
dec
sub
fs
sbb
xchg
sbb
repz
dec
ret
out
ficompl
jb
orb
or
sub
mov
shll
sbb
arpl
cmp
add
dec
inc
out
outsb
movsl
or
and
inc
subb
push
sub
and
add
fwait
and
jge
mov
orl
iret
mov
mov
pusha
cmc
mov
and
xchg
dec
insl
push
aam
push
loopne
mov
js
lock
jb
ljmp
imul
addb
mov
and
pusha
xchg
and
mov
icebp
xchg
shlb
push
xchg
out
add
dec
xchg
adc
aas
fiadds
sbbl
aas
or
dec
outsl
push
int
gs
sbb
mov
cmp
sub
fs
mov
mov
mov
scas
stos
outsb
rcrb
loope
mov
adc
fs
test
adc
cmpl
popf
push
and
call
push
xchg
cld
xchg
dec
xor
aaa
add
lcall
and
enter
cli
inc
or
cwtl
ret
cld
push
cmp
ljmp
dec
and
addr16
push
or
jne
add
sub
mov
mov
pop
dec
test
test
inc
xlat
xchg
cmpsl
adc
add
mov
cmp
xchg
push
jo
adc
mov
lods
sub
fnstsw
sbb
mov
push
xorl
mov
mov
loopne
inc
rolb
and
and
sub
add
jo
push
lds
loope
dec
popf
mov
push
jl
ret
js
fisttps
add
test
cmpl
xor
ds
xchg
cmp
lcall
outsl
add
ret
in
dec
daa
cmp
rorl
sahf
xorl
add
scas
les
repz
push
loopne
jae
add
imul
sbb
in
xchg
xchg
insl
fmuls
in
mov
loop
addr16
adcb
push
xchg
add
and
movsl
mov
cmp
xchg
xor
ds
sti
jns
mov
and
test
pop
add
mov
add
mov
fdivr
push
and
add
outsl
repz
dec
test
and
push
push
je
inc
xor
add
sbb
and
ret
lret
and
mov
push
push
cmpl
inc
push
and
ds
fmulp
fldl
mov
andb
rcrb
pop
ljmp
mov
cmp
xchg
stc
mov
imul
add
jecxz
fsubr
jge
push
lcall
cs
and
add
stos
and
fisttpl
xor
bound
imull
ljmp
mov
sbb
jg
push
adc
mov
into
orb
pop
xor
xorl
add
mov
js
scas
jae
add
out
cmp
iret
dec
jbe
pop
jp
sbb
shrl
inc
add
adc
jo
insb
add
xor
and
inc
shlb
shll
mov
out
ljmp
push
xor
push
les
fnsave
rolb
sbb
inc
aaa
mov
lods
ljmp
sub
sub
hlt
ret
pop
mov
mov
mov
pop
xor
mov
add
data16
mov
xor
inc
cmpsb
mov
adc
je
mov
int
xchg
data16
test
adc
dec
mov
test
jbe
cmp
ds
adc
jmp
fsubrl
mov
lret
test
test
test
je
aam
add
sub
bound
jbe
enter
mov
shlb
movq
or
fldt
aam
add
inc
or
ljmp
pop
dec
push
mov
add
es
int3
shlb
jl
rolb
pop
ja
iret
addl
idivl
push
mov
in
loopne
mov
lds
cwtl
mov
mov
movsb
jo
dec
xor
sahf
inc
xchg
pop
adc
dec
push
mov
adc
xor
imul
adc
jle
sub
xchg
or
incb
out
shl
xor
shr
outsb
jp
pop
shlb
out
sub
out
sub
push
lahf
loope
mov
and
test
push
jl
cmpl
loop
test
add
adc
loop
add
je
ljmp
mov
xchg
sbb
sbbb
push
aad
add
jno
and
and
aad
xchg
mov
decb
jp
push
add
roll
sbb
je
and
test
sub
and
int
roll
mov
cmp
xchg
pusha
sbb
aas
push
jle
lahf
jo
cmpl
sbb
mov
jne
aaa
add
or
icebp
adc
xchg
popl
rcll
pop
xchg
push
pop
adc
xor
and
and
cmpsl
or
sub
stos
push
push
mov
or
shrl
subl
mov
xor
pop
dec
add
adc
test
stos
push
out
rcl
xor
mov
sbb
dec
push
stos
test
push
ret
mov
loope
inc
lret
cs
aaa
push
xorl
inc
sbb
adc
xchg
and
leave
adc
lods
pop
and
sbb
push
fildl
insl
outsl
add
insl
hlt
out
and
leave
rolb
cmp
add
add
push
pop
fisttpl
mov
stos
pop
divl
pop
orb
cmp
jbe
out
movsb
sbb
scas
mov
pop
add
pop
sub
andb
inc
test
xchg
js
lds
xor
dec
in
sbb
xor
adc
jbe
push
lret
sub
dec
xchg
dec
dec
xorb
adc
call
scas
cmp
sub
or
adc
stos
cmp
lret
int3
insb
inc
pop
cmc
add
out
inc
sti
or
ret
das
shll
push
in
repnz
pushf
les
push
mov
mov
frstor
push
xorb
insl
movsb
mov
mov
adc
iret
sbb
jge
fwait
adc
outsb
sbb
sahf
or
push
divl
mov
int3
sub
icebp
sahf
mov
add
sahf
add
add
rcrb
lock
out
addr16
mov
notl
lock
cmp
es
out
and
dec
inc
int3
jb
aad
aad
pop
cmc
test
repz
cltd
test
mov
aad
repz
ja
cmp
xchg
test
bound
int
ficoms
out
xor
inc
xlat
sti
adc
mov
and
in
jo
pop
adc
ja
mov
mov
nop
mov
ds
into
fadds
test
inc
in
ss
jae
mov
adc
fisttpll
enter
and
fmuls
jo
pusha
inc
fs
pusha
or
add
xchg
ret
push
adc
les
push
lds
jb
inc
lahf
test
dec
inc
or
mov
iret
btl
cmp
push
xlat
sbb
push
ljmp
pop
xchg
mov
das
xchg
imul
inc
sub
mov
mov
lret
inc
mov
movsb
enter
shll
daa
jl
jno
inc
in
lods
sbb
inc
mov
daa
cmp
inc
cli
add
std
cmp
test
sbb
ljmp
lods
or
push
adc
fildl
mov
jmp
shll
dec
mov
jg
sbb
add
lds
mov
mov
inc
out
cmpsl
push
mov
pop
dec
or
pop
inc
add
orb
out
imul
dec
jle
test
push
test
jae
mov
cli
dec
pop
jo
adc
inc
jo
mov
cmc
adc
jo
dec
push
mov
and
pusha
jnp
sbb
sbb
xor
or
out
mov
orb
shrb
int3
inc
insb
ja
mov
js
je
add
dec
adc
pusha
mov
cmp
aaa
dec
test
xchg
pop
xchg
or
int3
subb
mov
mov
jp
adc
cmc
inc
sbb
push
mov
jge
mov
push
or
xchg
sub
mov
jcxz
push
maxps
pop
push
sub
add
xchg
or
and
mov
pop
ret
mov
data16
lock
xor
mov
mov
push
sub
push
mov
adc
mov
aaa
adc
rcrl
sbb
outsl
aam
stos
and
mull
fdiv
repz
fldt
and
jmp
sbb
les
mov
jg
jae
test
ljmp
push
stos
mov
notl
mov
jle
lea
loope
imull
movsl
dec
lds
push
mov
or
jb
inc
jb
inc
sbb
mov
sbb
add
dec
lods
push
das
sbb
orl
push
adc
sbb
mov
mov
loopne
test
outsb
xchg
and
push
add
jmp
sbb
push
sbb
gs
sub
or
and
dec
fistpll
add
shlb
adc
xlat
fcmovnbe
adcb
pop
fwait
aad
mov
add
add
xchg
aam
lods
push
dec
xor
mov
aam
ds
add
aam
jno
mov
lods
js
stos
pop
or
xchg
adc
mov
fsubl
adc
subb
into
pop
fadds
lahf
fnstcw
mov
fstl
add
test
ret
add
inc
icebp
cs
pop
daa
test
loopne
adc
out
inc
mov
add
pop
mov
sub
out
jae
test
inc
lock
xor
mov
filds
andb
movb
and
repnz
stos
imul
jl
and
dec
sbb
push
popa
lock
push
es
jp
jno
pop
and
xorb
or
and
lds
cmpsb
test
sbb
mov
pop
sbb
push
sub
sbb
xor
mov
adc
add
movsb
mov
loop
push
and
gs
adc
inc
cmp
sub
loopne
adc
mov
push
xchg
loopne
gs
dec
cs
pop
iret
add
pop
jo
pop
jbe
movsb
xor
je
push
popa
shl
cwtl
cmp
mov
sub
and
add
cmc
or
xchg
jmp
ljmp
jnp
mov
adc
mov
ja
lret
push
inc
test
push
fwait
iret
cmp
adc
jmp
push
andb
dec
rclb
lret
cmpsl
or
icebp
adc
jne
mov
adc
sbb
inc
mov
jo
shr
pusha
push
jb
add
jbe
jmp
and
dec
inc
inc
or
add
add
ja
or
sub
lcall
jl
sub
mov
add
movsb
mov
mov
and
xchg
adc
jo
jns
movsb
out
andl
xchg
add
ret
jbe
push
lock
and
xchg
and
adc
es
push
into
mov
dec
test
pop
sbb
es
push
sbb
and
insl
inc
pusha
mov
stos
es
aaa
cltd
daa
pop
dec
loop
and
in
mov
xchg
pop
add
mov
mov
stos
xor
xchg
add
js
popf
xor
mov
add
repz
jo
sbb
mov
xor
lock
imull
dec
adc
mov
movsb
pop
add
rclb
sub
mov
sub
arpl
push
or
faddp
or
orb
and
loope
xchg
cmp
adc
pop
mov
and
rolb
repz
sbb
or
sub
out
js
jo
and
mov
cmp
pop
sbb
push
lds
jns
das
scas
adc
stos
push
loope
inc
pop
iret
jmp
pop
dec
push
outsl
ljmp
aas
lods
sub
push
lahf
fdivl
lods
push
pop
and
sub
rorl
mov
outsl
mov
adc
add
adc
imull
cmp
and
pop
popa
sub
or
lods
or
push
pmaxsw
jne
jb
cmp
jne
jmp
add
sbb
into
shr
mov
pop
mov
pusha
adc
jmp
cs
lods
jns
pop
jo
xor
outsb
pushf
scas
mov
fimuls
outsb
lods
adc
les
popa
jnp
mov
ds
aas
sub
sub
cs
or
push
or
dec
outsl
mov
add
sub
jne
aaa
adc
pop
cmp
daa
xor
jg
iret
mov
das
fistpl
loope
arpl
adc
sbb
push
mov
adc
inc
imul
mov
cmpsb
cmpsb
divl
lock
xor
xor
sbb
dec
lret
or
ret
pop
adc
and
mov
out
cli
daa
fidivs
mov
lods
push
dec
data16
scas
and
sbb
mov
xchg
or
jne
test
lea
das
outsb
mov
scas
mov
pop
test
scas
jb
imul
adc
push
jge
sub
jbe
adc
lods
insb
sbb
pop
and
mov
cmp
dec
lods
mov
shll
and
das
adc
lret
in
fisttpll
jo
lods
push
add
sbb
mov
addr16
xlat
mov
jne
insl
pop
add
cmp
ficoms
pop
pop
add
and
mov
scas
repz
jbe
push
movsb
aaa
inc
sbb
push
sub
test
nop
or
ja
mov
es
hlt
push
and
inc
ficoml
ror
fistpll
or
jbe
cmpsb
adc
roll
pop
ret
lods
xchg
push
inc
sbb
and
int3
dec
or
or
push
lods
fsubrl
push
int3
pop
daa
jp
xor
pop
xlat
or
sbb
hlt
mov
cmp
aam
or
test
fisubrs
xchg
imul
or
pop
scas
mov
sbb
jecxz
pop
add
push
sbb
and
xchg
mov
inc
ret
sub
popa
dec
das
push
out
adc
or
movsb
pop
lods
inc
bound
and
inc
int
push
mov
addr16
and
mov
outsl
std
dec
into
cmp
dec
add
into
fdivl
enter
sub
lods
jnp
xor
fs
movsb
daa
dec
int3
jp
es
iret
popa
mov
inc
xlat
insb
or
jns
imulb
jnp
in
sub
jge
cli
and
pop
add
xchg
pop
insl
ss
sub
pop
pop
and
inc
or
xchg
pop
xchg
call
adc
vdivpd
push
les
shll
dec
js
ret
jns
inc
aad
push
fidivl
popa
sub
fsubr
adc
gs
call
add
outsl
stos
xchg
les
loopne
xor
dec
out
and
cmp
push
mov
enter
shlb
sbb
in
add
add
sub
fucom
std
mov
pop
adc
xor
add
nop
cld
dec
adc
ret
cmp
dec
bswap
push
out
add
add
lods
mov
call
loop
xor
xor
mov
xor
mov
loop
cmp
and
fldt
test
cmp
xchg
pop
push
cs
sub
dec
push
jge
xchg
notb
ja
jnp
fisttps
mov
sub
pusha
add
inc
adc
mov
iret
inc
rorb
push
fstps
xor
inc
cmc
scas
push
xchg
mov
or
pusha
inc
add
mov
and
fs
and
out
pop
and
jp
jo
dec
add
lods
inc
ja
ja
jle
out
lds
out
adcb
jb
movsl
cmp
into
xor
dec
jnp
push
loope
pop
call
and
int
stos
and
push
packsswb
mov
cmpsl
dec
out
mov
push
jg
shrb
push
xchg
ja
sub
pop
jno
dec
movsb
pop
popf
test
cmpl
es
fucomi
jno
sub
push
mov
cwtl
das
push
stos
xlat
into
iret
jb
inc
sbb
jp
addr16
cmp
sub
aas
xchg
push
mov
into
lock
movsb
jno
mov
add
test
and
pusha
dec
dec
pop
push
ret
dec
das
push
decb
out
fwait
lock
inc
cmc
xor
je
testl
enter
addr16
xchg
ds
inc
mov
aaa
and
mov
loope
jmp
imul
jnp
sub
sbb
int
out
adc
and
push
mov
repnz
je
mov
inc
stos
xchg
inc
andl
jmp
popa
mov
jae
cmpsl
gs
test
scas
push
cmpsb
push
xchg
add
adc
iret
cli
push
and
stc
addl
cmp
sar
xchg
ss
sarb
push
and
jae
out
std
mov
scas
adc
push
in
push
clc
adc
mov
and
sub
mov
jbe
jbe
and
xlat
add
jge
hlt
lods
sbb
xor
adc
push
xor
ud0
and
sbb
pop
mov
icebp
push
sub
sub
icebp
shlb
ret
adc
dec
jo
fdivrp
sarb
test
xchg
xor
mov
cli
inc
cmp
and
mov
fisubs
sahf
push
int3
aad
adc
gs
inc
jo
xor
xor
or
ret
adc
lahf
out
push
sbb
sub
scas
mov
push
arpl
scas
aaa
imul
aad
xlat
mov
adc
pop
adc
js
xor
xchg
push
test
sub
dec
int
test
ljmp
ud1
cmpsl
push
jns
sub
loop
shlb
jo
jg
and
shrl
js
insl
sub
loopne
xor
fadds
xchg
add
nop
mov
cmp
or
xchg
pop
in
and
out
negl
dec
pop
or
cmpsb
and
pusha
xor
out
xor
fxch
xor
sbb
inc
add
nop
xchg
aam
subl
or
or
inc
push
gs
icebp
xchg
cmp
pop
inc
mov
and
nop
ret
adc
add
adc
fadds
fisubrs
adc
jno
dec
iret
addr16
pop
subl
xor
jb
fs
lods
sub
stc
mov
mov
inc
pop
in
jle
and
add
sbb
jge
sbb
mov
jp,pn
and
add
adc
jmp
iret
shrl
jae
pop
sbb
dec
sbb
pop
rolb
and
aas
mov
pop
les
adc
inc
ret
pusha
test
jae
rcr
lds
imul
inc
nop
stos
xor
add
add
inc
add
jecxz
popa
ret
sti
mov
sbb
sbb
repz
imul
orb
repnz
add
outsb
pop
popa
xor
push
pop
cltd
xchg
cmc
xor
jo
pushf
lock
push
mov
arpl
loope
loop
push
xchg
mov
push
sbb
inc
nop
mov
add
xor
pop
mov
out
push
aam
pop
aas
sub
sbb
jae
popa
fdivrs
scas
xor
pusha
fsubs
adc
sbb
mov
push
adc
pop
jo
and
jp
dec
xchg
loopne
insb
shrb
adc
stos
imul
lea
addr16
out
mov
cmp
sahf
enter
push
fwait
cmp
sbb
rorl
bnd
pop
mov
mov
mov
adc
loopne
sarl
push
push
add
cs
dec
jp
cmpsb
or
jo
outsb
xor
mov
mov
fwait
push
dec
inc
orb
or
jns
aad
and
inc
sub
jge
inc
sub
sbb
dec
pushf
out
inc
cmp
jno
xchg
sub
shlb
pop
stos
fiadds
add
decl
cwtl
push
inc
push
mov
ss
movsl
fcompl
adc
jg
jge
jns
push
sub
arpl
movsb
or
lea
add
dec
ljmp
or
jmp
jb
mov
adc
movsl
jnp
jno
or
and
dec
mov
sub
filds
push
int3
inc
lds
andl
daa
jne
mov
add
adc
data16
mov
pop
fimuls
lock
and
add
xor
in
and
jne
and
jno
loopne
push
inc
les
and
pop
cwtl
mov
adc
repnz
mov
stc
xchg
test
subl
fisttpll
mov
xchg
jne
jns
movsb
push
adc
bound
push
jo
adc
pop
adc
or
sub
xlat
jae
mov
lock
mov
test
pop
shll
subb
sub
xorl
fdivl
mov
mov
fisubl
dec
push
push
sub
sbb
sub
insl
cmpsb
mov
push
fnstcw
cmp
adc
fst
aas
stos
pop
sti
push
xchg
aas
stos
pushf
or
rclb
xchg
push
dec
push
subb
jo
and
sahf
push
daa
push
lahf
aas
outsb
xor
or
add
push
cmpsl
add
sti
xor
jo
es
or
shrb
test
pop
xor
xor
mov
or
scas
or
fnstsw
insl
adc
xchg
add
xchg
loope
or
in
pop
adc
adc
cmp
daa
or
addr16
out
mov
fwait
sbb
dec
mov
lods
jmp
inc
jmp
ds
push
cmp
pop
jnp
jb
jle
dec
adc
xlat
push
iret
jae
std
sarb
mov
iret
xor
vunpckhps
mov
je
or
rcrl
pusha
shrb
mov
or
je
jo
ret
add
repnz
sbb
add
icebp
hlt
push
roll
xchg
add
mov
add
add
add
std
jle
mov
dec
fildll
das
and
dec
jle
inc
imul
rcrb
stos
cmp
pop
ret
call
mov
push
in
mov
sub
lods
xchg
mov
cmp
xchg
shlb
addr16
out
push
sub
mov
lods
out
into
jl
ret
xlat
add
xor
pop
sub
test
idivl
lods
jae
mov
inc
add
pop
imul
jecxz
lret
inc
movsb
and
mov
pop
aas
call
lahf
or
mov
xor
mov
and
inc
jmp
cmp
mov
ret
pop
fcoms
in
or
inc
inc
xor
bound
push
and
jp
mov
fmuls
inc
and
insl
cmp
mov
push
repnz
dec
pusha
ret
cmc
dec
or
mov
or
mov
fadd
ret
test
mov
pop
mov
iret
or
mov
and
adc
lods
mov
iret
call
mov
shlb
cs
scas
test
inc
cltd
fmulp
aad
scas
daa
icebp
and
sub
fsubrl
ret
push
mov
iret
fidivl
fcmovbe
adc
add
sub
xchg
sbb
ja
in
and
and
sub
enter
stos
xor
repz
push
iret
lcall
pop
push
dec
sarb
inc
ljmp
mov
and
dec
cltd
scas
mulb
and
mov
inc
in
mov
icebp
adc
shrl
adc
ljmp
testl
mov
popf
ret
dec
add
sub
mov
pop
adc
pop
fistl
orb
sub
sbb
add
cmp
daa
cmpsl
dec
jno
adc
xchg
popf
hlt
es
nop
push
inc
scas
push
mov
sbb
or
cmpsl
aas
xor
cmp
lods
imul
push
call
add
data16
jo
and
lods
fistpl
push
mov
dec
lds
outsl
loopne
inc
lret
outsb
lret
fs
lret
lret
iret
outsb
and
popa
add
xchg
int
xchg
aad
leave
cmp
ljmp
mov
pusha
enter
aad
sbb
mov
aad
mov
scas
es
cwtl
aad
mov
lock
out
scas
hlt
add
mov
rclb
iret
xor
movsl
sbb
mov
adc
jo
or
rcll
sbb
sub
icebp
mov
out
stos
rcrl
sbb
mov
testb
pop
adc
mov
xchg
mov
jg
shll
add
into
les
je
sub
mulb
mov
xchg
outsl
fs
cmp
arpl
or
push
add
loop
ja
adc
dec
jge
adc
fs
add
mov
ficoml
cmp
movsb
add
mov
sbb
into
dec
mov
and
pop
inc
dec
mov
mov
xor
sub
or
cmp
cmp
jnp
mov
mov
clc
ljmp
inc
leave
js
aad
mov
insl
jb
loop
inc
sub
push
add
push
and
inc
je
inc
and
adc
test
jbe
and
xor
cmp
test
stos
mov
lods
es
xor
add
nop
fwait
mov
orl
inc
adc
or
lock
addr16
xor
jne
mov
xor
lahf
sbb
mov
push
xchg
lahf
add
pop
sub
inc
inc
jae
mov
and
pop
lock
cwtl
mov
xor
jle
rclb
xchg
je
adc
mov
in
dec
and
ret
pop
dec
jecxz
push
scas
sbb
pop
push
cs
sbb
sbb
mov
orl
es
sbb
and
pop
adc
xchg
inc
leave
lcall
push
jge
cli
sub
in
push
fmuls
push
jl
jns
into
xor
sub
adc
out
jo
outsl
les
fnsave
pop
in
xor
ficoml
adc
sub
into
sbb
lock
lret
push
loope
enter
rclb
xchg
fdivs
push
cmp
sbb
cmc
cmp
jo
sub
arpl
sbb
es
call
jge
jge
pusha
rcll
add
and
mov
lock
add
xor
and
in
inc
sub
adc
sub
and
jo
sti
stos
jmp
inc
fidivs
push
out
shll
jae
cmp
jne
xor
ja
scas
xchg
cmp
xor
add
push
out
sbb
xchg
xor
pusha
mov
cmp
cmpsb
rclb
pushl
or
adcb
inc
gs
xlat
bound
xor
fsubp
repnz
pop
icebp
jle
fmul
push
movsl
pop
aam
cmp
jne
es
jbe
inc
lret
in
test
test
adc
or
cmp
data16
jo
test
pusha
into
int
and
int3
pop
cmp
sbb
mov
mov
sub
jle
push
push
insl
bound
inc
add
xchg
xchg
mov
pop
pop
lea
iret
scas
das
push
das
or
push
inc
aam
inc
rolb
ljmp
adc
sbb
js
gs
mov
mov
mov
jge
das
sub
test
sti
and
cltd
pop
jl
fisubl
add
stos
mov
fcoml
push
xchg
inc
adc
jle
call
adc
or
push
mov
pushf
add
cli
scas
add
add
mov
add
popa
push
xchg
push
sub
inc
ja
das
test
or
das
xorl
enter
cmp
and
xchg
jae
iret
pop
shlb
lcall
ret
or
or
mov
mov
pop
push
xchg
ret
cmp
and
sub
mov
in
xchg
sbb
sahf
xchg
mov
mov
icebp
xchg
mov
fmul
lcall
popf
pop
mov
jo
sbbb
or
es
adc
es
nop
shrl
stc
cmp
pop
adc
cli
dec
jne
add
xor
cld
stc
add
pop
push
or
push
pop
push
sbb
jp
inc
sti
xor
sbb
add
scas
push
cmpsl
sbb
shrl
pop
lret
sub
push
into
pop
xchg
sub
data16
mov
or
cltd
pusha
movsb
leave
xor
dec
lock
aaa
sub
rcll
mov
add
add
orl
sti
inc
sbb
sub
pushf
sub
jno
push
mov
pop
popa
add
ret
cli
sub
sub
mov
mov
adc
add
jg
push
pop
inc
pextrw
test
aad
xchg
into
rclb
inc
xor
mov
jle
mov
and
aaa
loopne
inc
jne
ret
push
iret
or
mov
jbe
xor
push
inc
scas
nop
add
push
bound
or
sub
aad
inc
mov
imul
adc
inc
or
aam
pop
mov
xchg
call
pop
aas
push
sbb
out
fwait
sbb
xor
icebp
mov
mov
push
add
lock
shlb
xor
and
push
and
sub
pop
sub
mov
dec
loop
mov
roll
lods
loopne
push
or
add
das
and
test
inc
and
or
sbb
divb
sub
jle
push
add
mov
and
push
xchg
aam
mov
add
dec
add
and
xchg
pop
mov
inc
cltd
cld
sub
adc
or
inc
and
push
add
daa
and
push
cmp
pop
mov
jns
vmovntps
in
sub
lods
stos
add
int3
fstpl
es
test
cmp
sbb
test
std
inc
rorb
mov
sbb
andb
jg
xchg
add
lods
push
and
sbb
sub
xchg
xchg
and
shlb
jle
adc
stos
inc
repz
mov
xor
loopne
xchg
sub
lahf
add
fs
pop
call
cwtl
aad
loopne
sbb
js
jl
pusha
add
add
push
scas
or
pop
push
mov
add
pop
fbstp
add
inc
xchg
mov
jo
fwait
mov
or
aad
lea
sub
jge
and
sti
scas
psllq
sti
mov
stos
and
inc
movsb
lcall
fsubrl
jle
scas
push
inc
scas
push
mov
bound
sbb
lret
sti
cli
arpl
in
cmp
mov
and
andb
popa
jbe
xchg
jecxz
pop
into
enter
loopne
rorl
scas
sub
adc
or
push
jge
jo
jns
mov
jp
push
inc
or
rcr
movsb
sub
aad
sub
xlat
push
movsb
sbb
sbb
pop
pop
leave
loope
shll
insb
and
push
call
aam
je
mov
xchg
push
pop
and
sbbb
xchg
aam
lret
cmp
fistl
andl
inc
lds
sub
cltd
test
lock
pop
inc
xchg
mov
lods
rolb
xchg
popa
arpl
and
js
adc
mov
jns
sbb
cmpsb
push
or
loope
or
push
test
mov
lcall
push
shll
cmp
jo
cmpsb
pop
cmpsl
dec
jne
sbb
push
pusha
push
roll
mov
xchg
pop
fldt
or
rcll
lock
insb
pop
testl
mov
xor
fcmovne
fnsave
sbb
or
call
xor
fsubrs
push
mov
mov
mov
pop
xchg
push
pushl
imul
repnz
gs
bound
xchg
sub
roll
jo
push
sbb
mov
jo
ret
or
add
add
inc
movsb
stos
dec
sahf
pop
jo
mov
scas
add
leave
mov
js
daa
movsb
scas
pop
test
iret
inc
dec
and
xor
inc
pop
arpl
adc
xor
add
call
jo
add
iret
int
push
cmp
mov
leave
mov
pop
jg
jae
addb
daa
pop
xchg
push
push
xor
pop
dec
out
pop
dec
rolb
js
fadds
dec
add
xor
je
add
push
sahf
sbb
xor
and
je
inc
inc
test
rcll
xlat
xor
jg
adc
clc
jb
jle
jbe
shrb
call
mov
push
inc
lret
or
push
jbe
sub
mov
push
push
dec
in
mov
pop
push
popa
sbb
mov
or
ja
or
mov
or
pop
push
mov
add
jbe
inc
sbb
add
pop
lret
lock
pop
jp
adc
sub
dec
and
fs
pop
adc
mov
or
xchg
mov
inc
push
clc
clc
add
add
or
sbb
push
imul
mov
mov
and
sbb
sub
xchg
push
push
inc
push
mov
inc
out
sbb
aaa
movsl
mov
cmp
push
cmp
push
adcb
xchg
pop
jmp
adc
pop
movsl
sbb
pop
stos
stos
data16
andl
mov
inc
jg
mov
inc
adc
sbb
imul
sbb
mov
aam
js
mov
xor
es
mov
xor
or
cwtl
push
add
fcomps
jnp
mov
mov
xor
mov
aam
cmpps
jnp
subl
scas
iret
out
popf
in
ficomps
push
xchg
jmp
test
fdivrl
orl
inc
jae
fucomp
pop
imul
icebp
or
enter
dec
mov
outsl
mov
movsb
sbb
pop
les
fwait
loope
inc
cwtl
popf
test
fwait
loop
adc
push
sbb
iret
sub
je
adc
lock
lds
xchg
fimull
add
sub
mov
jb
fidivl
xor
lret
mov
sti
sahf
push
scas
dec
adc
mov
cmp
loope
jmp
sub
ljmp
or
xor
pop
and
lcall
stos
mov
aas
xchg
bound
repnz
es
and
outsb
mov
cs
push
pop
push
pop
bound
xchg
adc
push
inc
sbb
cmp
fstl
loopne
xor
pop
hlt
adc
mov
add
test
dec
ucomiss
mov
xchg
jns
jg
fwait
int
sub
or
test
cltd
shrl
mov
inc
mov
negl
in
frstor
aam
cli
stos
dec
mov
mov
mull
jns
std
push
push
sub
inc
inc
mov
add
faddp
adcb
add
inc
xchg
mov
loop
aaa
lcall
imul
and
lods
cli
adc
loopne
push
pop
jle
hlt
outsb
and
jns
insb
add
mov
arpl
pop
and
lahf
mov
add
inc
fmull
inc
insb
sub
pusha
ja
jmp
pop
xchg
pop
pop
iret
sub
push
pushf
rolb
call
testl
push
loopne
push
mov
mov
pop
push
jno
sarb
xchg
or
lea
fwait
and
andb
mov
sbb
inc
in
fiadds
inc
adc
insl
inc
popa
loop
in
add
dec
pop
loopne
jnp
add
scas
mov
rclb
add
js
push
out
lret
daa
inc
push
mull
mov
or
shrb
daa
or
scas
xchg
adc
insl
adc
ss
in
jae
push
das
ljmp
and
pushf
test
and
or
sub
das
pop
je
add
jg
mov
xlat
int
or
or
mov
dec
and
outsl
imul
mov
push
hlt
sbb
inc
sub
pop
pop
lds
sub
cmp
sarl
lods
jmp
inc
outsb
ja
add
or
div
sti
lods
and
int3
mov
mov
inc
adc
lock
mov
aam
ficoml
sub
pop
add
mov
xchg
sti
cmp
xor
xorl
push
mov
repz
fwait
imul
sub
aaa
cmpsb
and
mov
and
sub
adc
xor
mov
cmp
jae
inc
jecxz
push
and
xor
ret
sbb
cmpsb
scas
pusha
jo
js
add
inc
inc
lea
inc
repnz
js
add
ret
jge
cwtl
aam
shll
out
dec
ss
mov
mov
in
xor
sub
cmpsb
das
jbe
inc
fildl
in
pop
push
add
xchg
push
push
je
js
sub
in
scas
mov
pushf
xchg
lods
in
jp
add
inc
fildl
lahf
and
xchg
adc
mov
stos
lock
lret
push
mov
stos
jo
or
add
mov
aas
sahf
xor
stos
push
sbb
lock
test
gs
scas
out
das
and
or
sbbb
mov
pop
push
and
fists
cmpb
push
notl
nop
or
inc
adc
movl
ss
adc
push
test
popl
subl
sub
xchg
push
test
mov
inc
xor
dec
inc
mov
mov
add
xchg
ret
push
int
pop
and
fisttpll
bound
aas
adc
push
loopne
pop
inc
mov
inc
or
rcrb
and
es
mov
add
jae
mov
movsb
pop
pop
cmp
sub
pop
jne
mov
notl
jge
shll
ss
xchg
mov
jmp
or
xchg
pop
in
loopne
stos
cmp
jo
cs
push
xchg
les
int
out
or
or
xchg
push
cmp
jae
xlat
std
lds
out
into
push
loopne
mov
imul
push
sbb
imul
cmpsl
push
addb
mov
xchg
lods
mov
and
jecxz
xlat
loopne
aaa
sti
popf
mov
call
sub
add
xor
adc
popf
jnp
jge
mov
or
stos
adc
and
pushf
cmp
and
je
push
xchg
push
lock
lahf
push
xor
fsts
add
and
or
lock
imul
jp
out
or
out
add
movsb
sbb
sbb
inc
lcall
mov
add
inc
mov
or
sub
icebp
popa
push
arpl
loopne
test
pop
dec
jae
or
dec
push
into
in
ds
aad
xlat
cmpsb
arpl
data16
in
movsl
dec
adc
fnstenv
enter
inc
adc
stos
inc
sub
jnp
jmp
ljmp
das
rclb
es
mov
dec
jl
adc
sbb
popa
iret
jnp
ret
imul
call
aas
bound
lahf
pop
inc
movsb
and
pop
out
sbb
push
xchg
sbb
outsl
sub
sbb
out
aaa
mov
call
addr16
addr16
sub
out
lods
sub
lds
or
add
sub
adc
out
mov
nop
jne
fbld
mov
xor
pop
mov
mov
or
cmp
inc
push
loope
mov
movsb
xor
push
jbe
roll
sub
mov
shll
dec
cmp
and
pop
sbb
pop
mov
cmp
xor
mov
cmp
push
and
push
pop
popf
ds
loop
jle
pop
sub
pop
and
pop
xor
push
or
sbb
add
or
inc
scas
int
mov
dec
push
xor
mov
mov
cmpsb
adc
xor
cmp
jne
jno
outsb
dec
jae
in
pop
lods
loope
dec
es
loopne
insl
fadds
aaa
sarb
push
mov
inc
mov
xor
mov
pop
test
cmpb
addr16
mov
cmp
ss
jl
add
xor
sub
xorl
jae
iret
jbe
add
push
ret
fidivs
and
data16
dec
pop
and
scas
sub
adc
aam
and
lock
imul
and
pop
xor
ret
imul
stos
adc
in
xor
and
daa
cmpsl
sbb
jp
or
imull
cwtl
push
dec
mov
scas
bound
xor
add
inc
add
adc
imul
mov
lds
loope
push
inc
call
sub
inc
jno
out
mov
or
enter
adc
xchg
in
stos
lods
mov
adc
testl
int3
stos
mov
sbb
insl
out
mov
pop
sub
sbb
fadds
adcl
lods
loopne
loopne
pop
pop
ret
add
mov
lahf
xchg
insl
sub
dec
lahf
pushl
lds
or
xlat
xor
sub
mov
rclb
imul
movsl
mov
fildll
call
bound
push
insb
cld
push
pop
add
push
into
sub
outsl
jmp
ss
out
push
sub
sbb
push
dec
push
inc
outsb
xor
dec
bound
in
pop
cmpsl
and
mov
sub
cmc
arpl
adc
pop
lcall
push
xor
sub
jp
outsl
data16
dec
mov
data16
mov
mov
sbb
jb
aaa
out
and
ror
flds
insb
in
pop
fldt
jecxz
cs
jae
out
jle
xor
sub
add
enter
shlb
and
call
mov
scas
xor
mov
in
xchg
mov
out
mov
cmp
aad
and
push
add
in
int
ja
repz
imul
es
push
out
add
out
push
icebp
add
dec
scas
xor
mov
insb
arpl
dec
in
push
js
mov
xchg
sahf
lds
lcall
into
cmp
scas
jle
ficoml
mov
add
adc
and
das
push
mov
mov
stos
xor
mov
lods
inc
loop
xchg
fmull
cmp
sub
or
or
push
pop
xchg
cmp
mov
jg
add
mov
sbb
mov
pop
daa
cmp
popf
loop
or
pushf
push
mov
arpl
inc
mov
xor
pop
fcmovnb
inc
js
and
loope
mov
add
mov
sahf
fbstp
jecxz
ja
push
add
iret
mov
js
gs
cwtl
dec
xchg
shl
mov
jae
jno
mov
stos
mov
sub
jnp
lods
in
cmc
ret
jl
out
sub
xchg
mov
sbb
hlt
sbbl
inc
and
ret
dec
xor
sub
movb
xor
push
mov
sbb
enter
cmp
lock
enter
pop
sub
dec
popa
jae
outsb
push
mov
mov
xor
ret
fisubrl
cwtl
in
and
cmp
cmp
ds
xor
fmuls
lods
addl
pop
inc
xchg
push
sbb
dec
add
xor
dec
lret
stos
xchg
test
rcrb
iret
cli
aam
mov
or
scas
mov
jp
fisubrl
mov
cmp
sti
lock
mov
cmp
ud1
insl
xlat
sbb
fwait
sldt
das
xchg
outsb
imul
es
cwtl
imul
xor
fildl
xchg
js
mov
pusha
rcl
jle
xchg
lea
pop
xor
addl
push
jnp
and
push
iret
fmull
sbb
out
inc
inc
push
fisttpl
jge
mov
inc
push
pusha
loop
mov
jmp
cmp
addr16
pop
test
ss
xor
push
clc
mov
andb
or
xchg
add
popl
addr16
ret
xcrypt-cfb
mov
jbe
jns
data16
insl
jge
xor
clc
rcrl
or
jmp
cmp
mov
lock
enter
add
xchg
fistpl
into
lods
idivl
lds
add
mulb
jb
add
mov
cmp
lcall
or
xchg
inc
insb
ss
jp
ljmp
pop
and
or
sbb
cmp
ret
dec
ret
dec
push
sub
adc
xlat
pop
or
or
cli
in
pop
add
ds
insl
lock
in
sti
and
and
and
inc
gs
mov
inc
iret
sub
fcompl
sbb
add
test
repz
jne
es
icebp
mov
nop
sub
es
cmc
adc
fldenv
stos
adc
imul
mov
mov
cmp
cmp
xchg
bound
insb
or
dec
pusha
iret
sub
add
das
in
dec
inc
loop
push
mov
pop
hlt
dec
jb
arpl
decl
and
ljmp
push
push
cwtl
dec
loope
cs
mov
push
leave
cmp
pop
mov
shll
and
dec
sbb
scas
adc
sbb
mov
sub
fcom
dec
divl
hlt
jb
ds
and
sub
shl
and
xor
xchg
push
jle,pn
xor
lea
cmp
les
fwait
mov
cmp
sbb
pop
xchg
dec
popa
lret
adc
cltd
or
call
jo
and
push
xor
out
sti
addl
pop
roll
data16
sbb
add
ds
jmp
cwtl
adc
mov
add
int3
push
inc
pop
mov
mov
pop
xor
inc
jbe
cld
inc
add
or
bound
mov
sub
test
sbbl
jae
mov
xorb
add
arpl
push
add
pop
adc
and
outsl
push
adc
shlb
loopne
mov
aam
inc
or
sahf
sbb
add
fstpt
and
cmp
sub
adc
inc
ja
jmp
xchg
cs
fldt
sbb
mov
and
sub
dec
insl
and
sti
sub
loope
push
stos
pop
mov
push
sub
test
adc
xchg
daa
push
pop
dec
fnsave
xor
in
scas
sbb
vsubss
xchg
or
xchg
mov
pop
mov
pusha
add
gs
fisttpll
mov
xchg
test
out
and
daa
lock
out
add
sbb
inc
mov
in
and
add
and
repz
cmpsb
lret
push
mov
ret
lcall
cmp
jmp
out
shrl
add
out
jb
outsb
cld
ja
add
add
xchg
cs
aaa
push
sbb
mov
cmp
unpcklps
pop
lods
jne
xor
mov
ja
les
mov
ljmp
or
outsb
imul
sub
cmp
into
pop
or
int
addl
sub
das
sahf
xor
mov
fdivl
or
lock
inc
jmp
adc
in
in
lahf
js
loopne
jecxz
mov
stc
insb
lods
fmull
inc
movsb
xor
sbb
dec
lds
stc
call
push
cmc
mov
push
pop
shrb
or
push
inc
insb
pushf
cmp
aaa
adc
daa
lea
scas
scas
rcll
inc
insb
iret
xchg
insb
fs
aad
fsubs
rol
sbb
sbb
negb
popa
out
setae
sbb
add
cwtl
mov
lods
inc
into
addr16
sub
jo
daa
xor
mov
xchg
mov
fiadds
imul
mov
fnstcw
xchg
and
insl
inc
int
xor
and
lock
inc
sbb
aas
iret
psrld
xchg
lods
les
cmp
clc
or
arpl
dec
push
xchg
fadds
pop
dec
pop
leave
pop
or
je
and
add
fmull
and
scas
test
outsl
adc
ror
jmp
arpl
outsl
pusha
cld
mov
pusha
pop
fs
jbe
sbbb
and
pop
push
jle
mov
xchg
out
cmp
cmp
mov
aam
pop
in
jge
sbb
jle
add
mov
ja
cld
cltd
dec
ret
push
mov
add
stos
shl
loope
testl
xor
push
inc
fistps
xchg
imul
and
xchg
out
add
shrl
or
adc
add
movsl
aad
push
inc
ret
test
aad
jo
and
mov
push
push
adc
sahf
andb
pop
mov
and
ss
aas
xor
pop
add
stos
sub
push
loop
adc
xchg
jmp
lcall
push
inc
sbbb
movsb
sbb
push
mov
ret
and
push
loopne
jns
adc
or
sub
scas
xchg
int3
inc
mov
int3
fs
add
js
leave
sbb
xchg
in
push
dec
insl
cmpsb
adc
sbbb
mov
out
xor
xchg
mov
add
mov
dec
fwait
xchg
ds
jmp
sub
push
aas
out
shll
push
push
out
stos
and
xchg
imul
add
andb
and
test
mov
in
fwait
ret
addr16
cwtl
or
cmp
stc
pop
inc
jbe
push
cmp
xchg
adc
push
push
sbb
cmpsb
sub
inc
cmp
mov
pop
test
inc
daa
mov
or
das
push
and
mov
mov
pusha
nop
pop
sub
and
pop
push
sti
rcl
ds
int3
mov
leave
enter
or
jmp
pop
xor
ljmp
xor
aam
movsl
popa
xor
lahf
mov
jp
cmp
mov
mov
sub
adc
andb
cmpsl
popa
or
js
dec
ret
repz
pop
xor
pop
mov
pop
stc
into
ja
daa
push
dec
dec
dec
fisubs
ret
in
cmc
or
nop
mov
jno
loop
nop
sbb
call
das
dec
test
inc
push
jno
cmpsb
lret
adc
movsb
pop
pop
inc
les
push
enter
and
mov
test
mov
cwtl
ss
nop
fimuls
adc
pop
pop
iret
inc
dec
es
js
pop
test
pop
pop
jle
rorb
inc
pop
inc
loopne
xchg
pop
stos
cmc
add
pop
or
adc
inc
movsl
popf
push
adc
jo
test
mov
jbe
je
movsb
movsl
repnz
std
xor
jnp
pop
imull
movsb
pop
enter
mov
lcall
sub
xor
adc
inc
pushf
inc
lods
pushf
lds
push
inc
sbb
mov
jo
shrl
add
or
pop
pushf
cmc
lock
test
cmpsb
mov
add
xchg
dec
push
push
sbb
decb
stos
mov
mov
int3
mov
adc
and
mov
pop
cld
sbb
dec
int3
cld
sub
jge
xor
sbb
out
sub
int
mov
loope
inc
xlat
in
push
int3
add
push
es
add
xor
out
adc
sub
push
jo
adc
add
jp
sbb
dec
and
imul
arpl
test
ljmp
and
add
into
pusha
movsb
setae
daa
aam
es
inc
sbbb
dec
loop
les
fisubs
cmp
ljmp
cmpsb
testl
or
mov
pop
add
js
jp
in
mov
xchg
cmp
fcmovnbe
fsubs
in
ss
add
mov
mov
dec
xor
sub
js
push
popa
in
sub
dec
and
pop
or
add
push
inc
fcomp
js
push
jns
mov
call
jl
cmc
inc
aam
adc
inc
leave
add
jp
int3
push
lcall
and
sti
and
movsb
loopne
inc
jl
adc
arpl
aas
push
push
or
jecxz
inc
inc
xor
push
cmp
lods
and
nop
cmp
shrl
repz
lods
cwtl
inc
jb
jmp
shlb
movsb
push
sub
fisttpl
je
imul
sbb
fsts
insl
imul
mov
push
iret
orb
fnstsw
out
jno
sub
mov
and
pavgb
imul
scas
daa
or
or
scas
adc
pop
push
outsl
ds
adc
loopne
stos
and
ds
test
aas
add
roll
lret
xchg
push
and
setg
adc
or
sub
inc
and
lret
inc
and
jb
push
lock
pop
fldenv
pop
mov
daa
pusha
inc
push
fsub
jle
addr16
pop
cmp
es
mov
mov
inc
test
inc
aas
lock
ret
orps
pushf
ss
mov
adc
add
push
mov
ret
sub
sbb
movsb
sub
stos
notb
adc
mov
mov
loopne
push
bound
add
pop
test
sub
push
mov
cmp
xor
adc
mov
dec
mov
sub
addr16
sub
mov
pop
dec
or
sub
fwait
mov
mov
xchg
lods
push
cmp
fstpt
jl
push
aaa
and
ljmp
test
or
nop
mov
pop
xor
and
jnp
inc
cmc
pop
mov
or
arpl
lret
ljmp
pop
bound
mov
imull
cmp
xchg
and
push
aas
jl
jge
xchg
pop
andl
push
add
sbb
in
mov
jmp
adc
lea
xor
xor
lds
mov
aaa
daa
push
xchg
loope
orl
add
push
cwtl
adc
adc
sahf
inc
ret
pop
in
push
push
jl
repz
push
aaa
fldcw
inc
shlb
xchg
shlb
inc
aad
lcall
adc
xchg
ljmp
bound
lock
lods
data16
sarl
adc
roll
daa
and
jp
inc
pushf
jl
mov
add
jp
pop
sub
andl
pusha
push
pop
push
inc
cs
ret
out
and
loop
ss
mov
ds
lea
out
xchg
mov
popl
bound
dec
lret
aas
adc
or
fdivr
sub
por
push
shll
adc
subl
sub
out
pop
add
out
or
or
push
pop
or
vandps
or
pushf
add
mov
pop
cmp
lds
pop
mov
cli
or
jnp
sub
add
push
lahf
inc
mov
pop
jb
push
pop
fwait
mov
dec
call
sub
add
xlat
push
add
fmul
lcall
sbb
movsl
daa
add
add
mov
sub
push
add
mov
and
dec
andb
fsubrs
or
add
and
push
dec
in
push
push
add
test
mov
add
test
sbb
dec
aam
add
cmpsb
popa
data16
bound
inc
add
stc
pusha
add
mov
fisttpll
and
and
pop
cmp
sbb
xchg
out
jg
in
or
mov
add
iret
mov
cwtl
xchg
jecxz
push
out
cmp
aaa
and
cmc
push
daa
dec
frstor
jmp
enter
mov
in
push
adc
and
push
insl
addr16
mov
mov
dec
mov
sbb
dec
iret
js
stos
add
jge
stos
mov
movsb
das
mov
cmp
mov
push
xor
punpckhbw
dec
ret
or
and
ds
fmull
cmp
shlb
jl
pushf
hlt
bound
jle
push
xchg
and
ret
xchg
jnp
jnp
ja
push
jle
outsb
lds
clc
sbb
and
movsb
fsubr
outsl
push
inc
scas
test
in
mov
push
xor
rcll
add
cmc
test
mov
add
aam
lods
and
loop
cmc
dec
sub
pop
repz
push
sbb
jno
and
push
or
mov
and
in
andb
sub
and
or
cmp
add
data16
push
shll
subl
iret
cmpsb
jle
pop
dec
mov
pusha
scas
inc
in
add
stos
cwtl
adcb
popa
mov
mov
adc
push
cmp
ljmp
or
xor
nop
push
mov
adc
test
xchg
loopne
daa
call
push
jmp
add
add
ret
imul
fildll
ret
pop
js
sub
inc
cmp
das
pushf
test
dec
faddl
es
push
inc
insl
or
inc
xchg
imull
xor
cmpsl
and
mov
negb
lods
sub
sub
out
jo
dec
pop
mov
pusha
sbb
cmp
clc
ret
mov
or
stos
jbe
rorl
xor
cmp
inc
cmp
inc
sub
arpl
adc
sti
iret
movsb
jg
andb
mov
add
push
xchg
sub
call
add
jg
add
jle
and
xor
mov
gs
sti
or
or
push
mov
pop
adc
test
xchg
loop
jmp
test
cmp
inc
outsl
stos
insb
and
mov
pop
push
lods
mov
sbb
or
gs
pop
pop
and
fldl
out
sbb
lds
fsubl
pop
leave
inc
add
sbb
sbb
fsubr
push
adc
and
jle
arpl
movsl
arpl
pop
je
jo
test
lds
and
jns
and
jo
loop
mov
arpl
lahf
add
push
and
mov
mov
pop
sbb
xor
push
pop
jne
sbb
inc
xor
or
jne
icebp
push
add
movsb
call
push
add
mov
push
cmp
xor
int3
cli
push
push
roll
push
pop
sub
mov
inc
jg
add
adc
push
std
or
pop
xchg
xchg
ret
jp
sub
add
xchg
jo
scas
jo
inc
adc
adc
bts
stos
into
mov
jb
mov
mov
iret
and
and
xor
and
xlat
vhaddpd
push
out
jb
pop
cmp
xor
and
mov
add
shrl
sbb
es
and
in
repnz
pop
lret
cmp
fwait
sub
cmpsl
cmp
and
jle
pushf
lds
frstor
sbb
popa
fstpt
data16
inc
xchg
call
cmp
mov
test
outsl
or
dec
pop
mov
or
inc
or
pop
mov
pop
mov
xchg
adc
push
mov
lcall
inc
iret
inc
mov
fimuls
adc
notb
sti
adc
inc
cli
out
addl
je
aas
imul
pop
adc
add
mov
hlt
sub
cmpsb
pushf
aas
and
outsl
mov
sub
cmp
cmp
dec
add
lret
iret
iret
and
into
sbb
iret
dec
adc
orb
xchg
loope
push
imul
sbb
mov
fnstenv
mov
ja
cmp
xchg
outsl
sbb
add
sti
jb
inc
nop
into
adc
fwait
push
int
xchg
sub
sahf
lret
add
mov
pop
or
jl
and
cs
cmp
cmc
push
adc
fs
sub
les
and
push
push
leave
xchg
arpl
dec
ljmp
pusha
sbb
mov
xchg
shl
bnd
mov
xchg
pop
fwait
mov
xor
mov
push
add
sub
stc
pop
imul
inc
or
mov
adc
nop
lods
or
popf
dec
cmp
adc
dec
add
jns,pn
mov
xor
mov
loope
lret
xchg
push
inc
loop
adc
fadds
loop
sub
mov
rcrb
jne
std
mov
push
out
fwait
and
jno,pn
or
cwtl
shll
lcall
rorb
dec
mov
lods
mov
jmp
stc
notb
iret
in
add
add
mov
jp
bsr
filds
push
mov
mov
ss
adc
sbb
pop
push
jns
xor
scas
mov
bound
xor
or
jl
adc
dec
aaa
xchg
loope
add
pavgw
mov
mov
jo
and
mov
fwait
adc
rol
shr
adc
sub
aam
push
or
ds
aaa
aaa
stos
xchg
cmp
fs
and
mov
mov
xchg
aas
pop
sbb
cmc
std
push
lods
in
push
sub
fsub
mull
jno
mov
nop
pop
add
or
ret
fwait
xor
in
add
mov
sbb
xchg
int
mov
xchg
jnp
add
bound
jp
push
fsub
xor
adc
andb
pop
lock
pop
sub
rcrl
lock
gs
dec
add
add
sbb
pusha
sti
mov
jo
add
jl
pop
sub
xor
outsb
in
insl
insb
add
inc
jle
dec
mov
cmpsl
sub
rol
loop
dec
les
loop
xchg
add
sub
arpl
or
cmp
in
orl
repz
push
adc
inc
outsb
mov
popa
mov
mov
in
lahf
inc
int
dec
inc
scas
add
push
lret
xchg
mov
nop
push
aad
ja
out
xchg
add
test
aad
xor
push
lahf
jb
push
push
xchg
cld
push
fs
inc
jno
pop
pop
or
mov
xchg
inc
into
push
punpckhbw
adc
aad
dec
jecxz
cmpsl
insb
mov
insb
out
xor
cmp
inc
scas
xor
cmc
arpl
lods
stos
fadd
test
pop
sub
lods
stos
pop
rclb
mov
inc
sub
cmp
cs
sub
bnd
and
jne
dec
or
mov
sti
pushf
pop
xchg
jno
adc
add
mov
loopne
fs
sarb
or
ljmp
into
add
and
jle
sbb
and
jbe
and
push
sbb
js
gs
stos
xor
adc
hlt
mov
adc
idivb
jns
je,pn
mov
and
xor
imul
xchg
rcrl
ljmp
push
jne
mov
cmpb
sbb
or
ret
mov
mov
cmp
cmp
cmp
stos
jb
cs
lcall
or
fildll
rolb
xor
fnstcw
add
fwait
xor
cmpsl
jnp
inc
jo
sub
push
adc
stos
jp
mov
add
loop
popa
orl
xor
dec
add
xor
jge
stos
bound
mov
xor
andl
inc
pop
mov
shll
cmp
sub
cwtl
pop
xor
dec
sub
mov
iret
loop
push
push
and
inc
pop
or
jle
es
pusha
shr
ret
add
iret
xchg
inc
jecxz
sub
jl
lret
sbb
test
xchg
or
in
inc
push
or
cltd
out
and
inc
pusha
cmp
cmp
or
sub
mov
addl
push
les
cmp
adc
mov
mov
popa
inc
xlat
jb
adc
or
or
jo
mov
ja
test
add
sti
sahf
sub
mov
xchg
inc
inc
test
adc
fidivs
mov
das
adc
cltd
and
or
movsl
push
cli
ret
xor
std
jne
cmc
mov
ss
sbb
add
cwtl
add
inc
cmp
jo
lcall
out
outsl
popf
adc
arpl
push
push
sbb
push
lds
outsl
test
inc
or
jp
xlat
sbb
fsubr
inc
push
and
xor
test
mov
adc
sbb
and
jmp
mov
and
hlt
push
and
js
mov
ja
int3
jns
test
xchg
jle
jbe
shlb
push
rcrl
jle
cmp
inc
push
or
ja
or
add
mov
add
pop
cmp
push
shlb
rcrb
aaa
push
pop
sub
cmp
add
fisubl
lock
cwtl
test
sub
addb
jmp
lods
fadds
push
insb
lds
pop
jns
mov
jecxz
xchg
jnp
ja
lret
adc
jl
adc
data16
fwait
mov
subb
sbb
mov
push
cmp
cs
or
xchg
pusha
pop
adc
ja
push
push
or
xorl
jbe
fs
add
mov
shlb
mov
sub
nop
mov
inc
xor
movntq
adc
and
and
mov
fs
and
lret
xor
insb
inc
iret
add
push
test
push
inc
dec
in
fnsetpm(287
pop
adc
push
jmp
cmp
sub
lea
mov
das
pop
sub
sbb
pop
out
dec
shl
dec
imull
testl
clc
jl
fmuls
add
and
arpl
sysret
xor
cmp
push
andb
push
aaa
sbb
movl
icebp
mov
push
aad
mov
lods
add
lret
or
fs
add
mov
xorb
push
sub
inc
push
cmc
cmp
js
lods
sub
push
shll
sbb
pop
test
push
pop
das
sbb
repnz
test
push
mov
stos
sub
push
insb
dec
push
loop
out
popa
mov
push
fmull
xorb
mov
cmp
xchg
jbe
out
aaa
adc
add
add
aas
inc
ftst
cmpsb
imul
sub
mov
sub
push
subl
fnstcw
rcl
dec
mul
das
sbb
sub
ficompl
les
insb
cmp
hlt
push
lret
movsl
or
xchg
inc
mov
cmpsb
and
sbb
and
cmp
jb
andl
pusha
cmpsb
sarl
push
je
lods
xchg
subb
sub
adc
shl
inc
xor
xchg
loope
cmp
cmc
test
inc
adc
js
subl
add
nop
dec
lcall
push
dec
add
inc
outsl
movsl
inc
out
lds
add
xorb
and
nop
fiaddl
mov
lods
lods
call
mov
rorb
out
add
sbb
sbb
add
int
xchg
xchg
push
xchg
jno
add
lock
mov
shr
pusha
nop
push
add
inc
inc
and
std
sub
out
mov
or
lods
gs
stos
add
or
mov
sub
pop
and
add
in
or
push
mov
aad
adc
mov
pop
std
imul
sbbb
xlat
inc
and
outsb
inc
int3
sbb
pop
sbb
inc
add
pop
add
and
lock
adc
mov
jl
test
daa
sub
rcr
pop
fldt
jle
inc
cmovo
xchg
fists
xorb
push
sbb
movlps
das
xor
rcrb
add
xor
adc
insl
ljmp
or
pop
in
nop
and
push
xchg
imul
add
mov
xor
mov
add
or
cmp
jo
sbb
dec
ds
mov
cmpsb
mov
stos
subb
ret
ret
pop
xor
sarl
push
jne
pop
inc
adc
cwtl
push
mov
and
test
adc
adc
sub
stos
or
push
mov
scas
cmc
std
cmp
mov
xchg
xor
or
add
les
add
inc
mov
scas
pshufw
push
sbb
pop
pop
push
loope
mov
xor
adc
lret
mov
xor
das
add
dec
and
xchg
les
rclb
xchg
cwtl
repz
mov
lret
fcompl
mov
jo
push
test
jmp
dec
push
xchg
dec
mov
push
je
push
adc
pop
inc
xchg
leave
adc
dec
rclb
daa
int
adcl
out
call
dec
imul
js
mov
add
mov
sub
mov
mov
fcmovbe
rclb
cwtl
pop
es
fwait
scas
popa
inc
pop
mov
pop
rorb
add
not
and
mov
adc
mov
and
adc
xchg
movsb
add
mov
mov
or
pop
xor
add
andl
out
decb
jbe
or
sbb
je
dec
xor
fistpll
sbb
and
cli
test
adc
les
mov
xor
fwait
shll
mov
das
lcall
inc
mov
xlat
pop
add
je
fsin
pop
and
pop
inc
and
push
les
mov
jo
inc
adc
and
or
sbb
inc
pop
sub
sarb
les
and
mul
cwtl
add
out
push
rcrl
lret
push
add
inc
push
dec
pushf
imul
mov
mov
rclb
mov
loop
aad
xchg
mov
pop
sbb
jp
jno
fs
out
sub
cmp
addb
stos
daa
test
in
popa
pop
pop
mov
lods
nop
arpl
sbb
cmp
lcall
popf
xchg
mov
sub
inc
adc
lods
ja
test
pop
adc
or
add
out
int3
and
in
out
fisubs
out
les
sarb
xor
in
add
push
xor
faddl
add
popa
sbb
and
and
push
mov
inc
add
push
outsb
pop
and
jbe
imul
mov
xchg
mov
add
aaa
push
ja
fldl
and
mov
insl
inc
nop
sub
std
inc
adc
xor
adc
out
push
inc
inc
jp
cmp
ret
iret
pop
or
fisttps
inc
sbb
repz
push
jl
int3
or
rol
filds
pop
xchg
add
pop
scas
mov
daa
or
adc
mov
pop
inc
rolb
add
dec
andl
sub
les
pop
xchg
sbb
pushf
push
inc
sub
mov
pusha
push
fucomi
es
adc
jle
daa
push
xor
aam
sub
popa
leave
add
movsb
adc
imul
pop
mov
sub
jne
ja
mov
xchg
adc
push
xor
iret
add
cmp
dec
inc
and
enter
mov
shr
mov
mov
cmp
fisttps
repnz
shrb
cltd
loopne
mov
subb
das
test
gs
into
fmull
pop
push
aas
mov
fnstsw
add
out
dec
add
or
mov
pop
loop
mov
fistl
inc
sbb
sbb
pop
andl
lcall
fwait
shlb
iret
dec
cmp
add
sub
cmp
pushf
sub
mov
shl
xor
sub
cmpsl
sti
dec
sub
lret
out
fwait
or
and
mov
mull
add
xchg
mov
inc
inc
clc
xchg
mov
cwtl
and
mov
js
jle
adc
jl
inc
mov
inc
insl
push
inc
roll
push
mov
in
sub
sbb
mov
push
out
mov
push
xchg
leave
test
ret
fimuls
lods
mov
inc
fcompl
push
and
pop
rorl
sub
sbb
mov
cmp
dec
outsb
das
mov
adc
sarb
dec
push
lock
or
popa
dec
movsb
dec
aaa
adc
retw
lcall
iret
push
das
js
inc
xor
cmp
mov
arpl
mov
mov
es
add
mov
ret
mov
es
jg
or
mov
add
lret
rcll
mov
cmp
inc
test
pop
push
int
orl
das
leave
pop
mov
push
sbb
sahf
test
jb
mov
xchg
in
stos
inc
inc
out
mov
adc
mov
daa
scas
mov
add
jb
out
push
mov
sub
ljmp
jb
bound
cs
mov
pop
jb
add
mov
out
pushw
daa
bound
ret
cmp
mov
daa
loop
cmpsb
imul
out
call
xor
ds
bound
xor
push
add
pop
pop
sbb
mov
mov
push
in
leave
sbb
loopne
sbb
sub
ret
lock
xcrypt-cfb
cmpsl
mov
out
sbb
int
jp
sbb
jo,pt
lds
mov
daa
das
inc
mov
insl
andb
xchg
fdivl
add
lock
pop
shrl
sti
sbb
roll
les
push
mov
lret
movsb
mov
mov
xchg
cmpsb
loopne
or
add
es
xor
and
ss
or
cmpb
and
dec
push
adc
mov
xchg
push
xor
pusha
sub
pop
pop
pop
push
inc
je
scas
aam
testb
xchg
adc
fxch
aaa
inc
inc
aaa
add
fnstenv
gs
ljmp
aaa
jbe
inc
sbb
call
push
xchg
sub
dec
and
dec
add
ret
loop
mov
inc
sbb
pusha
sbb
sub
adc
cmp
lds
movl
inc
ror
pop
cmpsl
psubb
inc
in
fidivs
pop
jb
aaa
mov
pop
mov
xor
aam
pop
push
je
roll
sub
and
and
or
adcb
push
pop
add
jmp
mov
pop
adc
mov
push
or
notb
adc
inc
xor
and
cmp
xor
rorl
int
dec
xorl
jp
outsb
xchg
stc
mov
mov
outsb
push
lods
pop
cmpsl
out
pop
and
addb
outsb
in
mov
sbb
xlat
fwait
push
jbe
test
iret
icebp
ljmp
mov
neg
mov
xchg
dec
mov
and
loop
and
inc
cmp
push
insb
repz
aad
jp
add
mov
or
mov
pop
adc
mov
stos
fucom
addb
adc
adc
and
add
mov
fcmovne
in
sbb
push
xchg
mov
cmp
or
out
adc
xchg
or
cmp
adc
stos
test
iret
inc
mov
sbb
mov
sbb
mov
cwtl
daa
jp
cmp
adc
dec
andb
sbb
mov
fadds
or
push
sub
fsts
mov
xchg
adc
cmp
je
add
call
shrb
cs
mov
lods
push
and
push
mov
xor
loope
rolb
adc
ror
push
lods
mov
idivb
mov
push
scas
ss
mov
adc
push
scas
add
cli
pop
shll
sahf
sbb
push
mov
adc
ret
mov
lods
call
aas
jle
int3
pop
in
cmp
loopne
popa
test
fldcw
int3
jo
cmp
scas
lods
repnz
mov
push
gs
mov
and
and
push
in
lods
cs
mov
mov
adc
sub
sarb
sbb
daa
add
lcall
lret
loop
sbb
lods
cli
adc
jmp
and
aas
sub
addl
inc
pop
cwtl
and
sbb
push
sub
mov
or
jmp
out
mov
dec
sub
es
and
addb
jl
mov
inc
mov
sub
inc
das
outsb
sub
jge
les
xlat
stos
xchg
jbe
xor
and
inc
jno
cmpsb
and
fs
mov
adc
cmp
mov
cmp
push
xchg
cmp
pusha
inc
jno
mov
clc
sub
mov
push
mov
leave
sbb
sub
out
sub
bound
test
xchg
add
add
xor
jmp
xor
call
mov
mov
or
push
jmp
ja
fs
dec
and
push
and
xchg
inc
shlb
push
clc
sbb
cmp
sbb
jae
fdivrs
mov
xor
in
sub
bound
mov
xchg
sub
and
dec
or
add
push
inc
or
inc
lret
and
movsb
cld
push
pop
push
pop
mov
inc
lds
pusha
adc
and
xchg
daa
repz
jbe
stos
mov
xor
daa
inc
jo
push
or
pop
xor
lahf
and
int
cmp
mov
aad
xchg
loope
pop
rcll
push
je
pop
mov
push
out
xor
jns
es
add
sbb
stos
fwait
mov
in
nop
sbb
add
test
add
push
movsb
sub
adc
or
fidivrl
jno
sub
inc
test
sbb
or
push
inc
pop
cmp
fnstcw
sub
push
out
lret
sbb
lcall
adc
test
ror
aam
cmp
cwtl
pop
and
pusha
mov
adc
adc
and
lds
cmp
gs
mov
or
int
cltd
ss
mov
jne
sub
in
or
arpl
dec
rcll
or
xchg
aad
add
push
pusha
mov
mov
xchg
jno
decl
popa
outsl
mov
adc
clc
mov
push
jo
imul
sub
add
jg
and
add
aas
pop
push
add
inc
mov
mov
cmp
stos
cmpsl
mov
sbbb
mov
push
nop
les
jns
add
js
jae
xchg
xchg
jg
or
jnp
pushf
es
xchg
mov
push
push
cs
aam
mov
gs
sbb
jp
sbbb
inc
xor
mov
and
xchg
xor
lds
ljmp
jae
insb
pop
hlt
test
outsl
nop
sbb
push
or
pop
mov
and
mov
adc
dec
rolb
movsb
cmp
dec
or
popf
sub
test
bound
scas
xchg
mov
and
cmpsl
addr16
or
fisttps
mov
add
inc
xor
lock
push
sbb
sbb
mov
ret
outsb
and
mov
jl
les
add
mov
or
mov
inc
int
mov
sub
addr16
out
lds
mov
cs
ja
adc
pop
add
cmp
inc
testl
int3
pop
stos
xor
and
mov
xchg
sub
rclb
push
cmp
mov
cmp
and
adc
adc
pop
les
loopne
ljmp
mov
aaa
pop
scas
pop
lret
xchg
inc
pop
push
mov
mov
pop
sub
adc
shrl
lods
lret
rolb
ja
imul
adc
mov
and
xchg
rcrl
adc
mov
sbb
dec
test
add
add
scas
and
sbb
outsb
cmp
sub
outsl
and
dec
or
movsb
dec
mov
adc
dec
rolb
dec
xlat
das
adc
dec
ret
cmp
push
leave
test
inc
ss
mov
pop
mov
inc
dec
pop
adc
sub
dec
pop
adc
aas
or
fs
cmpl
test
push
enter
jg
out
push
xor
and
mov
xor
jge
push
sub
and
addr16
and
add
push
push
iret
push
adc
lods
push
sti
sub
lods
cld
add
lds
dec
inc
mov
sub
ret
pop
mov
in
jg
icebp
mov
inc
add
js
std
sahf
sub
and
sti
add
push
aaa
cmp
push
jge
ficomps
roll
jo
mov
nop
add
and
jmp
pop
mov
mov
mov
adc
push
and
sub
sub
and
fnstenv
pop
add
scas
sbbl
mov
jno
push
adc
mov
insb
rorb
int
dec
faddl
xchg
dec
jnp
adc
test
xlat
mov
xor
fwait
add
out
add
mov
jb
jno
sub
mov
cmpsl
adc
addr16
adc
xchg
je
push
inc
or
sbb
pop
add
mov
add
push
popf
adc
add
ret
lods
loope
lock
mov
dec
shr
bound
dec
pop
push
and
movsl
and
stos
pop
add
dec
mov
stos
xor
lock
ss
and
popa
push
hlt
pusha
and
and
popf
and
lret
sbbl
and
sbb
je
mov
mov
sub
jp
mov
and
and
lret
cmp
and
pop
ds
jo
cmp
lock
jns
inc
and
jl
mov
pusha
mov
push
mov
and
mov
js
lret
cmp
and
push
sbb
adc
fdiv
mov
and
mov
repnz
aas
test
data16
lea
jae
add
push
sbb
adc
je
cmp
push
cmp
aaa
popa
push
pop
dec
add
adc
and
xorb
inc
xor
dec
sub
fisttpl
scas
ljmp
push
mov
fs
xlat
or
loope
ss
hlt
aam
add
or
push
lret
lcall
int
rcll
and
stos
fwait
loope
mov
loop
nop
mov
mov
and
into
cmp
fwait
mov
mov
in
dec
loope
insl
test
movsb
sbb
adc
adc
dec
clc
stos
sbb
jp
nop
or
mov
jecxz
inc
addr16
inc
insb
xchg
push
and
dec
inc
outsl
ljmp
adc
loop
lods
jp
pop
cmp
adc
rcl
adc
loope
scas
test
out
xor
stos
scas
jae
sub
xchg
and
pusha
inc
iret
xor
les
fcmovnbe
std
movsb
and
pop
xor
dec
add
push
sub
xchg
and
and
sub
mov
jg
adc
add
mov
sbb
push
and
pop
mov
int
and
adc
fimull
push
cmpsb
xchg
or
hlt
sub
dec
adc
push
inc
sbb
or
test
addl
sub
in
push
adc
mov
fiadds
stc
rcl
mov
insb
stos
aaa
mov
cmp
push
das
mov
fwait
xor
int
cltd
add
adc
and
sbb
pop
adc
xchg
scas
push
cmp
mov
or
inc
pop
push
movb
movsb
sbb
lods
mov
jp
add
ret
pop
dec
jb
pop
add
js
punpckldq
mov
add
stos
inc
lods
jecxz
xor
arpl
setle
mov
mov
xor
lock
das
loopne
xlat
dec
addr16
push
les
push
pop
sub
loopne
cmpsb
cmp
mov
jo
add
add
inc
jno
sub
mov
mov
jbe
js
ja
mov
push
int
inc
ret
inc
jl
mov
pushf
sahf
xchg
adc
and
daa
and
subl
loope
lds
fwait
stos
fisubs
popf
jge
sub
hlt
cltd
mov
xchg
adc
xor
xchg
sbb
lret
mov
mov
mov
loopne
or
cmpl
jae
xchg
mov
lea
cmp
fsubl
xor
nop
out
jmp
jp
and
xchg
or
test
cmp
dec
mov
sub
test
loopne
sub
sub
loope,pn
sub
es
inc
sub
and
arpl
add
pop
sub
pop
ret
sbb
mov
ret
add
lcall
mov
xchg
sti
mov
cmpxchg
popf
and
xor
or
mov
xchg
mov
leave
push
fwait
add
testb
push
jle
fadds
stos
cli
jmp
add
or
stos
imul
out
cmpsb
add
lahf
adc
daa
aaa
lods
mov
cmovb
nop
or
push
adc
add
in
push
fisttpll
or
mov
out
sub
cmp
ss
sbb
xchg
xchg
sub
push
sub
aam
xchg
add
dec
push
add
pop
ja
dec
sbb
pop
sbb
jge
outsl
jl
inc
mov
arpl
adc
aad
jge
lcall
sahf
loop
je
sub
stos
inc
int3
ss
ret
jle
outsl
in
sbb
mov
or
loop
cmpxchg
jg
iret
mov
mov
mov
dec
in
and
push
ffree
int3
add
fbld
cmp
repnz
adc
mov
or
loop
bound
stos
les
mov
scas
decl
loop
imulb
out
or
inc
sarb
cmpsl
xor
pop
jmp
outsl
fdiv
aam
adc
sub
add
pop
aam
sbb
cltd
and
mov
cmp
jbe
lds
es
mov
cltd
out
aad
sbb
jle
sbb
mov
sahf
sahf
scas
inc
ja
adc
inc
int
jb
stos
add
mov
adc
xorb
adc
xchg
loope
jnp
add
or
int3
add
mov
pop
xor
cmpsl
sbb
add
ss
sbb
adc
sbb
or
xor
pop
cmp
push
idiv
ljmp
push
roll
lock
fildll
nop
out
inc
pop
test
call
popa
loope
push
int3
shlb
dec
addr16
test
aaa
jge
dec
xchg
daa
divb
mov
push
add
scas
inc
ja
adc
push
cmp
dec
xchg
loop
cmp
pushf
sub
mov
xchg
mov
test
xor
or
push
sbb
push
es
and
push
lock
pop
lret
sti
xchg
into
xchg
je
leave
add
xorb
inc
bound
and
loopne
or
cwtl
fs
pop
add
in
cltd
adc
addr16
add
push
adc
pop
push
push
scas
stos
bound
lods
aaa
daa
fstps
ficoml
ja
adc
xor
inc
xlat
mov
fistl
popl
mov
ja
loopne
mov
add
xor
add
mov
pop
xchg
adc
xor
cmpsb
pop
les
sahf
inc
fwait
scas
and
lcall
test
iret
mov
call
sbb
mov
and
addb
test
out
adc
test
jle
and
shll
movsb
adc
rol
mov
jo
xor
mov
in
fnstsw
scas
fdivl
inc
push
lds
xor
sti
into
mov
icebp
sub
xchg
rolb
add
xchg
imul
jo
test
pop
scas
imul
out
stos
push
je
std
sub
sbb
les
mov
xchg
push
jb
les
add
xor
test
fistpl
testb
popf
add
jno
pop
lods
sbb
dec
fdivs
je
cmp
xlat
sbb
out
and
cwtl
inc
lock
js
sub
lods
gs
mov
inc
pop
adc
pop
sub
shll
cmpsb
xchg
inc
lcall
fsubs
xor
mov
adcb
or
sub
jge
push
cwtl
jo
bound
adc
push
and
sub
nop
cmp
sub
add
mov
out
mov
sub
inc
fldt
pop
push
insl
mov
and
mov
mov
or
adc
aaa
cmp
push
sub
adc
jnp
leave
fs
mov
jo
pop
sti
and
xor
adc
push
sub
add
dec
in
add
sbb
add
inc
iret
cmp
jo
adc
add
mov
sub
fsubrl
fmull
in
loop
sbb
mov
lea
push
push
xlat
pushf
jo
jp
cmpb
or
push
lock
cmp
xor
dec
sub
mov
add
adc
mov
aad
addl
les
xor
out
push
les
lahf
cmp
sbb
sub
push
outsl
mov
repnz
adc
adc
cmc
das
add
sahf
or
addr16
mov
arpl
cwtl
dec
add
daa
out
popa
das
and
dec
out
sub
out
and
dec
mulb
fimull
mov
push
pop
xlat
sub
fs
inc
out
test
mov
les
cmpxchg
push
out
pop
int
adc
je
add
mov
sub
lret
mov
mov
mov
in
mov
sysret
rcrl
add
scas
push
out
inc
mov
xor
loopne
adc
into
xchg
jb
je
jnp
push
fwait
insl
adc
cmpsl
dec
inc
and
add
mov
mov
sub
movsl
inc
add
and
jmp
idivb
popa
mov
jb
cltd
rorl
push
dec
stos
imul
xor
jnp
push
pop
mov
pop
addr16
jge
ljmp
jnp
popl
fnstenv
aas
jbe
int3
adc
iret
ja
scas
xchg
in
sbb
fnstcw
lahf
dec
adc
mov
jge
mov
mov
adc
and
cwtl
add
sub
add
cmp
inc
or
or
daa
sub
lcall
rorl
sub
cmp
movsb
mov
or
daa
or
sbb
dec
fldpi
int3
enter
add
pop
in
das
sub
add
xlat
orb
xlat
or
mov
ffreep
mull
adc
add
test
add
js
int
cmp
nop
and
sbb
sub
push
push
xor
into
das
push
jne
or
js
divl
in
or
rolb
arpl
loope
inc
cmp
or
insb
pop
sub
popa
ss
sbb
jne
dec
add
jle
es
pop
inc
mov
and
push
dec
mov
xor
stos
into
movsb
pusha
int
push
test
cmp
fwait
mov
lock
popf
test
aaa
pop
mov
pop
jmp
enter
lock
inc
mov
add
sbb
filds
push
xchg
je
xchg
mov
mov
sbb
mov
mov
stos
pop
mov
popf
cltd
push
daa
jecxz
sbb
add
push
shrb
add
std
sub
pushf
sbb
rolb
mov
fsts
pop
bound
ds
xchg
addb
lahf
jecxz
mov
push
sarl
xor
sbb
out
testb
fadds
leave
ret
sub
mov
aaa
mov
popa
arpl
popa
pop
xchg
and
movhps
arpl
mov
int
inc
mov
fbstp
fidivs
mov
or
loop
and
and
fisubl
or
sbb
sub
les
out
xchg
aad
dec
adc
and
popf
and
or
mov
push
mov
xchg
xor
cmp
das
and
setbe
out
mov
out
orl
insl
sub
dec
adc
out
scas
mov
mov
leave
and
sbb
xchg
test
xor
call
and
mov
mov
dec
push
jmp
sub
in
and
push
int3
or
in
adc
or
inc
ljmp
sbb
or
out
cmc
sbb
fidivs
ss
pop
mov
aad
in
xchg
cmpb
xor
or
mov
leave
sbb
adc
jecxz
or
repz
mov
inc
lahf
outsl
push
into
sahf
bound
dec
mov
pusha
or
xlat
or
cmp
adc
in
sub
divb
subl
sti
cmp
out
lea
push
inc
nop
daa
sub
and
adc
lds
js
pop
das
lret
les
popf
xlat
sbb
mov
xchg
dec
dec
adc
sahf
stos
pop
rcrb
aas
push
jbe
into
xchg
pop
test
je
or
cmp
into
orb
loopne
shl
mov
xchg
sub
mov
stc
stos
sbb
push
mov
lahf
add
jns
inc
xchg
into
push
mov
xor
push
xchg
cmp
and
xor
mov
testb
mov
hlt
das
pop
sti
into
xor
push
mov
sti
lret
lret
fidivs
outsl
adc
sahf
fsubrs
addr16
push
pushf
addl
mull
test
pop
add
xchg
jnp
je
call
push
fwait
xor
sub
sub
and
inc
mov
aad
mov
mov
sbb
add
ret
loope
into
outsb
pop
in
cmc
stc
stos
mov
stos
pop
sbb
repnz
pusha
pop
movsl
add
pop
jbe
data16
sti
das
adc
pop
pop
push
mov
adc
or
xchg
out
add
add
adc
loop
inc
js
int3
pop
add
lods
pop
xor
or
xchg
adc
push
hlt
inc
mov
movsl
cld
jnp
sub
rolb
pop
notl
sbb
add
gs
out
rcl
adc
add
add
lret
sbb
cli
sub
mov
sub
pusha
or
bound
xor
add
ds
rolb
movsl
push
ret
and
cmp
add
push
mov
ret
int3
dec
xchg
jnp
jle
testl
sbb
rcr
insb
xor
mov
inc
mov
adcb
adc
loopne
add
pop
xlat
inc
aaa
test
add
xchg
popa
ret
fdiv
xlat
dec
inc
lea
fcom
movsb
pop
push
xchg
aas
das
mov
into
and
popa
pop
cmp
xchg
ss
fadds
in
idivl
pop
loop
fsubs
ljmp
idivb
pop
stos
test
aaa
data16
add
cwtl
das
add
out
and
mov
mov
inc
push
xchg
arpl
inc
and
lea
adc
cmp
inc
jbe
sbb
xor
mov
mov
in
mov
adc
into
xchg
push
pop
pop
sub
and
jbe
pop
dec
xor
sub
into
fmull
cmpsl
push
jmp
xchg
inc
xchg
sbb
nop
xchg
addl
imull
incl
push
test
adc
pushf
cwtl
mov
adc
push
mov
adc
lret
xchg
or
pop
sub
push
adc
sub
mov
lock
dec
mov
pop
dec
fxch
stos
mov
lret
pop
scas
add
sbb
push
xchg
movsl
in
sub
lret
xchg
int
sub
or
mov
or
filds
sbb
outsl
es
add
push
fmull
popa
sbb
sub
mov
pop
jecxz
or
adc
push
or
push
push
inc
push
ss
fsubrl
dec
or
mulb
adc
bound
sti
or
jmp
insb
nop
jg
push
out
sub
fs
or
add
fucomi
jge
or
push
mov
sub
fbstp
dec
and
daa
cmp
sbb
push
mov
insl
mov
sbb
adc
adc
out
xor
dec
add
add
or
pop
in
pop
cmp
add
push
add
add
and
insl
mov
jno
inc
minps
iret
out
push
fidivs
mov
out
jae
jge
unpckhps
or
mov
int3
cli
arpl
arpl
mov
pop
xchg
mov
adc
jl
pop
aam
jae
insl
out
or
sub
cmp
adc
sbb
imul
add
insb
lods
das
fstpl
ljmp
and
fbld
int
adc
pmaddwd
ja
std
xor
test
mov
push
adc
popf
or
adc
pop
and
xchg
xor
inc
pushf
cld
movsl
into
add
into
movsb
inc
sarb
mov
mov
bound
repz
stos
lea
push
pop
jno
mov
fadd
psrld
stos
mov
add
pop
push
xchg
add
stos
clc
mov
sbb
mov
std
mov
mov
lods
dec
pop
xchg
aas
xor
mov
jns
mov
out
jle
mov
out
fnsave
jmp
mov
rcl
incb
stos
adc
outsb
jle
mov
test
cwtl
pushf
push
mov
jns
add
aam
pop
push
mov
sbb
push
dec
outsl
cmpsl
loop
and
outsl
ffreep
mov
push
popf
add
add
mov
testl
xchg
sbb
adc
out
hlt
stos
subb
add
push
pop
xchg
cs
mov
adcb
mov
adc
inc
add
aaa
insl
lea
jnp
test
scas
ret
jmp
data16
fcoms
inc
addl
add
aas
or
scas
mov
cmp
aas
adc
mov
inc
shrl
fimull
jg
or
mov
xchg
rep
or
dec
int
mov
out
test
xor
adcl
or
mov
int
mov
adc
inc
std
dec
cmovae
xchg
push
cwtl
fs
rcrb
add
add
adc
js
pop
and
lret
out
test
aam
out
mov
mov
data16
jo
hlt
add
add
pop
pop
fidivrl
and
pop
in
cs
ret
test
in
lea
lret
cmp
push
and
push
ja
adc
push
dec
scas
fcomps
add
xchg
inc
add
in
sub
icebp
cld
inc
mov
add
cmp
push
insb
jecxz
jecxz
cli
mov
test
orl
popl
cs
bound
lahf
outsb
or
mov
andl
out
and
mov
add
sbb
lcall
mov
xchg
sub
xchg
cs
cltd
int
cmpsl
xor
and
rol
and
and
stos
push
and
dec
mov
clc
xor
push
sbb
lock
std
bound
stos
sbb
sub
pop
rdtsc
pop
loopne
push
in
movsl
dec
mov
lea
mov
mov
xor
fadds
xlat
mov
mov
adc
dec
push
mov
ljmp
out
sahf
pop
sbb
roll
dec
mov
jo
mov
or
jae
popa
iret
mov
aam
fdivl
int
add
add
xchg
xor
int3
inc
cld
imul
mov
mov
inc
dec
pop
gs
in
in
fbstp
xchg
in
and
lods
add
call
ret
mov
push
movsl
aas
push
pop
push
les
ljmp
fdivp
adc
mov
and
mov
aaa
repnz
shl
addr16
insl
lret
dec
movsl
xchg
push
xchg
add
sbb
insb
xor
subl
or
sahf
jnp
movsl
push
pop
push
call
movsb
push
jae
fistl
addl
push
loopne
mov
xor
mov
test
mov
or
int3
push
add
ss
std
lds
rorl
sub
enter
imul
add
pop
jo
loop
push
popa
jle
mov
mov
shl
xor
scas
mov
fstps
sti
add
jae
in
insb
int
inc
mov
xlat
cli
sub
mov
inc
cmp
int
mov
rcl
cmp
cmpsb
dec
jge
popa
jo
dec
mov
mov
xchg
fmul
sub
mov
roll
mov
nop
cld
int
ficoml
call
stos
mov
and
outsb
mov
stc
lds
cmpsb
pusha
loopne
insb
fbld
jns
or
sub
insl
xor
fcoml
jnp
pusha
mov
sub
insl
sub
pop
aam
jmp
movl
adc
xor
mov
push
sub
ret
mov
mov
int
rep
mov
jbe
fistps
arpl
gs
pop
into
pusha
xlat
push
lds
jnp
xchg
cmpsb
cmp
sbb
cmp
jecxz
sbb
adc
lret
ret
xchg
outsb
and
dec
sbb
mov
push
shll
pop
mov
pop
sbb
es
mov
mov
outsl
daa
adc
outsb
push
test
push
add
out
outsl
or
jmp
lds
inc
scas
repz
xchg
mov
iret
fdivl
jb
push
stos
lds
mov
sarb
xor
ret
adc
and
push
adc
fnstsw
das
inc
popf
shll
jmp
ss
xchg
ret
sbb
pushf
insb
xchg
cmc
jbe
pop
xchg
mov
add
jne
or
insb
sub
cmpsl
pop
sub
mov
ret
flds
ja
dec
insl
icebp
scas
pop
mov
in
sub
adc
inc
add
js
mov
fnstcw
popa
notl
inc
pop
xor
fs
loopne
cmp
mov
imul
fisttpl
push
fisttpll
adcl
dec
jnp
not
iret
sti
popa
add
movsb
cmp
stos
clc
mov
mov
jge
add
pop
add
call
mov
lret
sub
mov
test
jns
fcmovbe
es
mov
repnz
sbbl
fiaddl
es
outsl
mov
or
xchg
fistps
xor
mov
test
jbe
pop
fildl
outsb
and
jge
stos
mov
fisttpll
pop
xor
pop
jo
xor
out
xor
mov
int3
xchg
das
xchg
push
xchg
jge
xlat
imul
cmpsb
cld
test
push
ret
push
dec
test
and
daa
jmp
rcll
aaa
shr
xor
test
ds
inc
shlb
xchg
stos
jl
test
ss
dec
mov
movsl
and
mov
inc
xor
test
int
outsb
jp
aaa
xor
addr16
add
gs
ret
push
mov
cmpsl
fidivl
mov
shrb
clc
pop
jbe
lock
sbb
mov
mov
pop
sbb
pusha
mov
push
sbb
shll
stos
pop
lea
test
add
aas
jbe
mov
jae
ljmp
adc
cmp
popf
add
push
leave
divl
loope
xor
dec
sbbb
xchg
daa
rcr
or
mull
jbe
or
gs
push
jbe
fistpl
leave
pop
adcl
aad
fbstp
cwtl
pop
xchg
xor
jg
adc
test
cmp
jbe
aas
test
or
pop
fsubl
fcompl
icebp
sbb
pop
iret
or
xchg
push
fdivrp
jle
mov
mov
mov
dec
cmp
out
mov
into
sub
out
lcall
fldt
push
cmpsl
rclb
cltd
push
mov
jb
sbb
out
std
outsl
cmp
sarb
mov
lcall
aad
inc
fnstenv
lods
pushf
sub
mov
mov
jb
or
fisubs
push
stc
add
sti
xor
adc
sbb
ljmp
in
insl
sar
and
leave
push
dec
cmc
je
mov
jl,pn
lret
fdivr
add
mov
sub
insb
mov
xor
add
pop
outsl
notb
out
jecxz
andb
jecxz
sub
lcall
mov
push
xchg
add
in
lea
dec
add
xchg
subb
mov
jnp
les
jo
sbb
dec
aam
jp
in
pop
sub
lds
insb
inc
sbb
pushf
das
dec
loopne
sbb
mov
fstp
out
mov
lcall
pop
cmp
cmpsl
fcomp
push
imul
sbb
add
in
or
and
or
sbb
mov
push
xchg
mov
insl
test
orl
cmp
xchg
lods
fs
cs
fldt
aas
cmp
push
mov
mov
shll
xor
cmpsl
push
loope
ret
movb
das
andl
lock
and
mov
shlb
inc
aaa
jbe
je
xchg
or
jecxz
jo
ret
out
call
bound
cs
sub
rcrb
dec
pop
xchg
test
dec
addr16
fcomps
popf
pop
rolb
or
cmp
stos
insb
subl
lea
fdivrl
fs
sub
insl
add
or
cmp
incl
push
fwait
inc
and
sahf
add
mov
mov
loop
cli
das
mov
stc
mov
imul
enter
jge
scas
cmp
sbb
adc
fldt
cmpsl
sub
addr16
jmp
cmp
movb
jp
push
pop
in
xorb
ds
in
push
push
bswap
aam
cld
test
nop
lods
and
jne
cmp
stc
pop
ja
xor
loop
sbb
or
ret
lods
fadd
xor
fs
scas
arpl
cmp
sti
sub
xchg
add
stc
adc
add
jecxz
test
pop
adc
mov
jmp
pop
sbb
cmp
pop
fwait
pop
xor
insl
adc
and
fcmovbe
add
xchg
cltd
mov
jle
pop
movl
cmpsl
out
andl
adc
sub
xchg
ror
pop
sbb
sbb
mov
ret
or
cmpsb
sbb
xchg
or
outsb
outsl
pop
imul
xchg
pop
and
insb
sti
sbb
push
add
mov
mov
mov
fmuls
fcmove
mov
nop
push
adc
popa
pop
and
inc
rol
dec
jecxz
jmp
sub
pop
sbb
jae
push
hlt
xor
int
sbb
pop
les
dec
inc
scas
mov
pop
sbb
jbe
xchg
sbb
mov
jbe
cmpsb
in
sub
jae
mov
repnz
and
shrb
sbb
or
jns
fldenv
jp
lcall
ljmp
fstps
pop
fdivl
mov
mov
fsubs
sub
imul
cmpsl
inc
pop
cmp
int3
jle
jnp
push
pop
mov
lds
and
push
mov
pop
lahf
aas
shrb
or
scas
adc
ret
ss
insl
adc
loopne
push
pop
xchg
and
add
test
mov
scas
js
add
adc
hlt
aaa
dec
sub
jnp
jae
add
mov
aas
adc
mov
incl
jo
mov
jo
stc
iret
cs
call
and
xchg
and
adc
mov
shl
inc
adc
mov
mov
loope
jo
xlat
jae,pn
ss
push
mov
adc
sub
or
loope
cli
inc
movsb
movsb
in
add
aad
adcl
mov
out
sub
lcall
fdivrs
inc
enter
cmp
test
sbb
out
fst
insb
std
test
nop
mov
jmp
bound
decl
out
ja
fldenv
xchg
adc
push
fidivl
sarb
mov
push
mov
aas
and
mov
stc
test
jecxz
mov
ds
add
mov
addr16
xor
test
jecxz
fildl
test
adc
adc
adc
lods
push
shrl
mov
sbb
add
jo
lret
negb
shrl
inc
fwait
inc
pop
aad
sbb
cmpsb
test
fsubrp
push
sub
sub
fnsave
in
xchg
idivb
mov
xor
ret
dec
icebp
and
lds
xor
jo
sub
outsl
jo
pop
add
popf
mov
iret
cmp
cmc
out
xor
mov
pop
xchg
lahf
push
mov
mov
mov
cmp
pop
popf
inc
cli
cmp
add
add
data16
ds
test
outsl
js
movsb
push
imul
es
adc
aad
and
fidivl
lock
adc
fnstsw
cmp
and
fs
test
ret
sbb
sbb
testl
lds
je
mov
jo
cmp
leave
dec
mov
jmp
sub
stc
and
adc
les
dec
je
jae
mov
aam
dec
jns
test
ss
mov
fwait
pop
sub
mov
in
mov
sbb
ret
rcl
xchg
xchg
xchg
sub
mov
bound
pop
test
ja
imul
add
push
mov
jb
fcomps
dec
nop
lahf
lahf
pop
mov
sti
and
mov
dec
push
push
xchg
add
push
mov
js
sbb
cmp
jne
mov
jl
adc
mov
test
sbb
push
push
aaa
clc
lods
cmc
pop
loopne
out
sbb
push
sub
hlt
ret
push
ret
sbb
sbb
in
lods
mov
popl
fsubp
adc
push
fiaddl
xor
loop
add
jbe
inc
nop
fisubs
xchg
in
add
xchg
iret
out
pusha
pop
xchg
jge
cmp
daa
test
out
mov
ss
pop
mov
push
shll
data16
cld
movl
cmp
loop
pop
test
jns
mov
imul
sarl
push
insl
push
and
cwtl
pop
cmp
xchg
sbb
rolb
inc
or
sub
adc
adc
movl
sbb
sbb
push
add
aam
dec
add
outsl
insl
ret
or
mov
das
in
adc
rorl
xchg
inc
pop
outsl
je
pop
and
rcr
es
push
cmpsb
testb
xchg
fcomps
mov
xchg
cmc
inc
push
int
mov
ficomps
js
decl
outsb
outsb
push
add
imul
ret
mov
stos
enter
je
xor
jl
js
pusha
adc
clc
mov
or
mov
imul
xchg
shlb
clc
pusha
fldt
lds
mov
and
cmp
mov
mov
in
in
sub
in
cmovnp
lods
repz
mov
xchg
jnp
pusha
stos
fiaddl
out
mov
cmpxchg
leave
fs
sub
movzbl
mov
lret
lret
movsb
or
xchg
pop
rcl
adc
and
xchg
scas
dec
sbb
lret
mov
mov
sbb
orb
in
push
daa
andb
xlat
fmul
jbe
sbb
in
mov
add
add
loop
xchg
das
shrb
adc
pop
add
pushf
mov
or
add
sahf
pop
dec
movsl
jge
in
loope
shrb
ss
jmp
fisubrs
inc
mov
pop
cmp
adc
push
xchg
movsb
mov
adc
push
jae
mov
push
mov
push
mov
lea
stos
scas
and
fcom
xor
std
daa
dec
es
fildll
imull
call
fnstsw
push
out
test
sahf
cmp
jle
ja
mov
pop
fwait
push
pop
jge
adc
das
add
lds
mov
pop
addr16
cmp
int
xchg
mov
mov
imul
movsl
add
adc
pop
shll
push
push
popa
jae
shlb
dec
lret
xchg
cmc
mov
push
out
cmp
clc
mov
mov
mov
and
or
mov
pop
or
mov
xchg
sub
xchg
pop
mov
jnp
jge
shlb
adc
add
lea
or
lock
test
pop
lcall
lret
mov
mov
add
clc
lea
aad
add
daa
jo
jnp
xchg
pusha
cmp
cld
addl
or
pop
xor
sti
cmp
insb
lret
add
mov
push
loopne
push
fwait
cmpsl
push
xor
pop
mov
mov
jbe
pop
lods
mov
adc
jbe
je
daa
es
inc
int
out
mov
push
sub
lds
lret
leave
add
vphadddq
or
cmp
jo
aaa
ret
aas
test
push
and
stos
mov
outsb
add
jbe
clc
inc
mov
mov
dec
lahf
fcoml
push
cmp
pop
into
dec
adc
sbb
mov
jne
adc
inc
cmp
cmp
ss
inc
std
xor
jle
scas
pop
dec
lds
fldenv
ljmp
lock
jp,pn
jbe
pop
pop
jp
mov
and
repz
adc
mov
pop
mov
adc
mov
test
js
fisttpll
int
mov
add
divb
mov
icebp
ss
inc
fisubrs
mov
or
or
scas
rolb
adc
xchg
xchg
push
iret
rol
pop
or
leave
xchg
daa
add
popa
shlb
add
leave
jmp
add
cld
movsl
mov
pop
xlat
jae
fldt
mov
enter
movsl
xchg
repz
stos
loope
lock
sub
mov
jecxz
hlt
adc
test
jo
mov
std
dec
imul
jg
sarb
in
shrb
sbb
test
jb
sub
jns
push
xor
sbb
jne
adc
in
or
loope
cmp
jne
clc
and
push
ret
shrl
adc
inc
push
ret
gs
popf
movsb
lods
fwait
jns
sbb
pop
fsubl
cmpsl
push
or
sbbl
xor
out
push
adc
addb
mov
mov
lret
out
pop
orl
sub
aam
in
clc
in
jne
ret
or
mov
scas
jl,pn
fadd
mov
mov
adc
inc
cs
sbb
lea
lea
xchg
xor
cmp
clc
js
repnz
dec
leave
pusha
or
jbe
flds
jmp
lea
loopne
cltd
leave
push
mov
fnsave
das
pop
loope
sbb
pop
subb
push
cwtl
nop
add
sbb
cli
outsl
inc
xlat
cld
enter
fwait
mov
add
or
sbb
fcomps
pushf
inc
in
adc
sub
push
jecxz
mov
test
out
inc
add
fistpll
cmp
lret
jmp
aad
insb
sbb
insb
add
sbb
cmp
mov
test
out
jecxz
scas
and
stos
xor
sbb
cltd
repnz
pusha
repnz
mulb
mov
mov
xor
aam
test
xor
dec
les
aam
popf
cmc
pushf
mov
je
negl
mov
pcmpgtd
ja
inc
lcall
cmc
adc
ds
lcall
sti
pop
popa
jp
pop
loope
adc
mov
jge
or
aam
inc
pop
cmp
or
pop
rol
aaa
jle
xor
aad
fildl
call
xchg
mov
jecxz
jb
xlat
cmp
rol
sti
fldt
push
add
xchg
mov
add
call
jns
dec
leave
adc
mov
push
push
loop
mov
dec
in
fldenv
insl
mov
jecxz
mov
mov
enter
mov
sbb
adcl
mov
push
jne
int
push
adc
push
int3
sbb
adc
xchg
nop
add
sub
xchg
sub
sbb
add
sbb
push
xor
dec
inc
mov
arpl
pusha
scas
push
test
add
xchg
sub
insl
faddl
lock
fnsave
adc
xor
xchg
sub
adc
or
mov
cwtl
cmpsb
mov
lods
orl
hlt
ret
add
pop
xor
ficomps
fidivs
pop
and
dec
test
test
xchg
test
xchg
inc
insl
jecxz
imul
aas
add
sbb
aaa
popa
loopne
call
mov
sahf
into
jl
notb
add
jnp
mov
pop
cmp
mov
mov
test
inc
aaa
push
inc
jg
jmp
mov
mov
clc
out
mulb
ret
or
test
aas
mov
pop
cmp
ds
pmuludq
mov
dec
aad
and
or
xchg
xchg
fiadds
pusha
push
mov
ror
jnp
cmp
aaa
sar
mov
cmp
icebp
xor
dec
jbe
jmp
inc
shll
aaa
scas
cs
jno
mov
xchg
sbb
popa
lret
xor
outsb
int3
and
mov
fidivrl
insl
jo
sti
and
mov
ljmp
mov
test
cmp
xor
call
xor
cmp
in
jo
fcmovbe
inc
fistl
push
adcl
mov
and
dec
push
fimuls
shrb
cltd
fnstenv
pop
shl
cmp
inc
lock
cli
jbe
adc
mov
cmp
outsb
or
xlat
inc
sarl
sub
or
stos
adc
or
ffreep
mov
cmp
adc
fsubl
jle
sub
aaa
lock
or
mov
out
gs
ss
mull
mov
into
or
sub
add
xor
sbb
adc
pop
arpl
sbb
daa
add
and
pop
cmp
aad
imul
lea
sub
push
aaa
xor
pop
or
insb
lods
add
or
aaa
negb
mov
orl
add
pop
iret
lea
sti
sbb
or
insl
scas
loopne
inc
xor
mov
aaa
notb
jnp
dec
adc
testl
mov
xlat
divb
icebp
add
lods
mov
pop
daa
pop
or
xchg
add
fwait
push
mov
cmp
add
repnz
mov
sub
xor
xor
xor
loopne
mov
or
adc
inc
pop
xchg
mov
lret
add
inc
dec
testl
addr16
addr16
pop
inc
pop
or
sbb
xor
xchg
mov
add
testb
repz
sub
jge
xchg
jae
in
sub
ds
sahf
or
push
fsubr
jnp
mov
jecxz
cmp
sbb
sbb
daa
xlat
cmp
push
cmp
jae
pop
jmp
stos
aam
cmp
fsubrs
cmp
pop
mov
negl
pusha
and
fistl
jnp
adc
cmp
xor
cmp
add
arpl
popf
or
inc
adc
pop
push
scas
pusha
xchg
or
in
fsubs
xchg
cmp
xchg
fwait
mov
in
insb
out
inc
repz
lret
and
fistpll
cmp
xor
jnp
dec
mov
or
pop
adc
out
jnp
ja
cmpsb
and
popf
sbb
jmp
movl
mov
sub
in
divl
push
add
adc
or
adc
cmp
add
add
daa
stos
add
and
negb
ret
cmp
xor
mov
fimuls
mov
mov
and
popl
ss
xor
out
adc
dec
or
pop
or
pop
cs
stc
bound
pusha
into
into
mov
addr16
outsl
fmulp
iret
add
jg
ss
sbb
jmp
push
push
pop
add
push
sti
lcall
xchg
mov
out
xchg
xor
jbe
sbb
or
jge
out
add
aaa
add
add
bound
stos
ja
jnp
or
dec
push
xor
bound
jae
xchg
insl
jle
pusha
fs
add
or
or
add
sbb
push
ja
addr16
sub
into
or
dec
sarb
and
mov
push
mov
add
add
xchg
pop
or
add
iret
cmc
mov
sbb
push
adcl
jl
mov
fiaddl
outsb
or
int3
rol
push
outsl
add
outsl
in
cmp
scas
add
add
movl
daa
add
sub
stos
add
sbb
jle
int
mov
inc
sbb
sbbl
or
roll
stc
inc
add
add
push
mov
fcomp
iret
shll
popf
add
add
add
sbb
out
daa
mov
or
out
mov
adc
inc
lock
int
loop
add
or
xor
fisubrs
aas
jnp
jo
mov
xor
rcrb
sbb
daa
ret
push
pop
stos
cmpsb
push
sbb
sbb
sub
out
mov
mov
scas
inc
push
outsl
inc
dec
mov
pop
or
adc
pop
jbe
fadds
or
fnclex
push
or
add
xor
div
xor
fists
sub
out
sub
push
xor
adc
test
fs
dec
aaa
or
add
call
or
mov
cmp
popf
aaa
push
adc
xor
lcall
sbb
mov
mov
add
dec
ret
jle
ret
mov
test
adc
adc
or
and
inc
movsb
xor
test
call
sub
cmp
insb
fadd
jg,pt
lds
push
mov
mov
add
or
cmove
mov
push
push
cmpsl
dec
xchg
mov
mov
addr16
and
cmp
xchg
add
push
leave
shll
fcoml
fildl
or
fdivs
and
pop
sbb
inc
push
or
rcr
xor
sti
mov
jbe
add
jp
inc
and
xchg
fcomps
sub
push
push
out
imul
and
mov
leave
and
cmp
mov
andb
xlat
lea
cmp
adc
pop
out
dec
and
xchg
das
pop
jnp
adc
xor
sbb
sbb
orb
or
mov
add
mov
enter
cmp
dec
sub
push
sbb
xchg
inc
cmc
push
out
gs
nopl
and
jl
or
and
lods
sbb
sub
jg
adc
push
push
out
xor
in
popf
xor
jno
pop
xchg
xor
xchg
adc
stc
or
lea
cmp
std
mov
rorl
inc
xor
mov
or
xor
mov
testl
inc
cmp
add
arpl
popa
scas
aam
sbb
xchg
or
push
xlat
lahf
int
sub
int
mov
outsl
fs
add
adc
or
cmp
cmp
dec
dec
inc
inc
inc
rcrl
pop
mov
jo
sub
sbb
mov
dec
or
fcomps
mov
push
test
jl
out
jmp
fmuls
popf
insl
fsubs
push
lret
xchg
inc
inc
into
lahf
inc
fwait
rcr
mov
inc
scas
jle
jne
inc
mov
rorb
mov
arpl
and
lcall
loope
popa
and
sbb
pop
fs
cmpsl
pop
pusha
insl
insb
popa
jp
cmp
pop
and
stos
lfs
or
negl
leave
jb
and
jno
ficoms
cmp
mov
xor
jae
bound
aad
add
fldenv
pusha
sub
shll
pusha
sarl
pop
or
push
cmpsb
leave
cmp
ret
sarb
mov
ret
mov
cmp
push
pop
lcall
rorl
xchg
enter
out
shr
sbb
js
cld
es
and
lret
roll
popf
bound
fcomps
add
inc
dec
inc
and
adc
push
or
ja
loopne
out
or
or
inc
in
mov
out
or
stos
lea
adc
adc
movsb
and
or
add
pop
ret
out
test
cwtl
and
mov
push
xchg
and
ret
negb
sbb
imul
fbld
cmp
sub
xor
xlat
inc
cmp
int
inc
add
pop
lret
pop
cmp
dec
pop
iret
cld
sbb
add
sbb
mov
mov
cmp
aas
adc
sbb
or
test
adc
push
jg
mov
push
js
pop
sarl
in
enter
mov
je
xchg
icebp
mov
jp
xchg
sbb
lds
xchg
in
pop
or
popa
mov
jmp
adc
jmp
or
mov
mov
dec
adc
push
xchg
jo
test
add
pop
iret
shll
and
adc
or
sub
mov
ds
addb
push
adc
leave
xchg
orl
rcrb
fbld
and
and
mov
bound
push
jge
and
in
cmp
and
dec
or
pop
lea
or
sub
movsb
pop
sbb
sbb
sbb
sbb
stos
mov
sub
mov
adc
movsb
mov
int3
fsubs
jno
and
xchg
mov
pushf
xchg
hlt
xor
pop
testb
sbb
faddl
test
aas
adc
jnp
in
fwait
jge
iret
jno
daa
adcl
sbb
sti
fildl
imulb
dec
jp
fisubl
and
jmp
xor
or
mov
mov
ja
sbb
inc
or
ret
inc
aas
and
add
mov
pop
xchg
dec
jns
xchg
xchg
cmp
aam
xchg
jns
outsl
nop
or
push
add
adc
mov
push
fadds
pop
sub
pop
insb
mov
sub
sbb
push
adc
sbb
mov
inc
sbb
xchg
fimuls
jge
out
mov
add
mov
pushf
push
ljmp
mov
and
and
lds
push
ja,pn
add
dec
in
sti
sbb
sti
ficompl
sub
and
les
xchg
insb
div
push
mov
or
loope
inc
in
adc
es
insb
test
adc
fsqrt
mov
ja
inc
pop
jnp
add
ja
in
xor
dec
pop
ret
push
and
jmp
lods
adc
sar
sbb
in
and
and
adc
fabs
mov
inc
lahf
pop
push
sub
and
or
testb
mov
adc
sub
iret
bound
ja
in
shrb
add
xor
es
jae
fwait
lods
xchg
adc
jle
ja
sbb
or
adc
and
test
add
mov
adc
sub
outsl
dec
xchg
mov
mov
and
int
mov
insl
iret
das
inc
in
and
push
nop
pop
or
and
pop
dec
out
cmp
js
leave
js
adc
jmp
adc
out
mov
imul
sbb
ret
movsl
mov
outsl
test
push
and
jmp
ret
mov
rcl
iret
xor
test
push
pop
and
jge
mov
mov
cmp
jo
je
incb
inc
or
test
mov
or
imul
or
and
adc
into
jnp
lret
push
nop
nop
and
add
xor
and
xchg
mov
cwtl
or
dec
and
dec
mov
xchg
les
xlat
ds
dec
dec
mov
mov
fistpll
push
pop
add
xor
fsubl
cltd
push
dec
xchg
cmp
ljmp
repz
mov
jle
nopl
fsubrp
add
xor
jg
fidivs
out
enter
add
mov
mov
sbb
sbb
pusha
shlb
icebp
fdivs
pop
in
testl
pop
xlat
sbb
xchg
sti
cs
sbb
outsl
sahf
cmp
jo
push
jns
mov
add
gs
cmpsl
push
push
mov
das
pop
push
adc
push
adc
mov
xor
add
add
add
push
add
xchg
sub
pop
es
out
fstpt
sbb
dec
add
jecxz
and
sbb
fdivl
mov
sbb
movb
in
or
xor
sbbb
xor
pusha
sub
pushaw
and
add
icebp
or
push
or
pop
movsl
mov
mov
cs
cmp
cmp
or
pop
fildll
scas
mov
or
xor
add
daa
sar
mov
xchg
jg
mov
arpl
arpl
fimuls
push
push
shrb
daa
or
add
cmp
dec
adc
roll
stos
cmpsl
out
daa
iret
push
adc
mov
mov
divl
sbb
ret
add
add
loopne
add
mov
cmp
pushf
mov
movsl
push
sbb
sbb
cmp
pusha
popa
inc
jo
sahf
xor
outsb
xchg
stos
ljmp
dec
push
lods
loopne
mov
mov
push
xlat
inc
js
push
xor
dec
xor
jb
add
fisttpll
pop
inc
dec
push
push
cld
and
push
pop
xlat
sbb
jno
inc
xor
cmp
ret
pop
or
push
sbb
adc
mov
xor
out
addr16
fcmovbe
pop
xorb
jg
inc
pop
sbb
scas
loope
jns
cmp
cmp
ja
inc
jne
dec
je
insl
iret
push
mov
pop
push
pop
push
mov
mov
dec
jle
mov
mov
adc
in
shlb
data16
inc
imul
jbe
mov
dec
dec
pop
inc
addr16
ss
add
cmp
add
adcb
xchg
in
in
mov
inc
js
divb
fstpl
mov
outsb
jne
sbb
push
sbb
adcl
jbe
faddl
inc
ja
add
sbb
ja
sbb
jg
sbb
leave
andb
popa
and
jl
add
lods
shlb
jnp
add
push
adc
adc
mov
adc
faddl
inc
jae
dec
push
or
mull
testl
mov
movsb
or
mov
mov
out
ret
push
adc
loope
addb
testl
add
jp
addr16
fidivs
add
or
cld
cld
add
jo
cwtl
jne
cld
arpl
sti
addr16
sti
sahf
ret
jns
repz
arpl
test
xchg
adcb
cltd
sti
pop
xchg
push
mov
xor
popa
mov
mov
or
mov
mov
je
out
fs
add
adc
rcrb
aaa
sbb
cmp
push
add
ret
add
xor
cmpb
xchg
arpl
jnp
add
adc
cltd
pop
cmpsl
dec
jnp
add
jmp
and
nop
fisubl
sbb
popa
je
push
inc
pusha
push
xchg
xchg
int3
cwtl
lea
js
pop
xor
fildl
lret
cld
test
test
pushf
insb
test
arpl
mov
jbe
out
sbb
dec
inc
cmp
jbe
pop
ret
cli
stc
jns
add
add
xor
pop
sarb
outsb
outsb
repz
and
mov
psadbw
inc
negl
cmp
inc
add
cmp
test
pop
cwtl
dec
jb
add
cli
lods
xlat
loope
icebp
sbb
test
xchg
push
xchg
ss
sbb
data16
xchg
js
jns
pop
xchg
adc
sti
hlt
cmpsl
pop
xchg
push
add
cmp
or
add
fs
mov
or
outsb
xor
inc
push
xor
mov
inc
in
js
lret
cmp
dec
ljmp
and
mov
pop
je
jb
cmp
jno
stc
and
xchg
pop
lret
call
push
sub
clc
arpl
or
jae
rclb
lods
cltd
stc
idiv
add
insb
push
inc
pop
rep
xchg
test
jg
gs
mov
shll
jmp
jno
or
cmp
jns
or
pop
sbb
icebp
jl
imul
sbb
cwtl
or
jne
and
and
jne
insw
fdivl
daa
and
js
sar
jo
inc
jle
and
and
cwtl
sbb
test
or
sbb
push
sbb
adc
mov
xor
and
mov
adc
popa
sbb
mov
jecxz
push
xchg
and
dec
sub
adc
and
lcall
pop
jbe
test
lcall
cmp
adc
sbb
adc
sbb
test
adc
jne
mov
fwait
add
pop
push
mov
push
imul
dec
testb
lds
push
shll
sub
or
popa
dec
cwtl
into
push
sub
repnz
mov
in
or
cmc
jg
push
sbb
out
rcrb
test
into
mov
jmp
call
push
inc
out
sub
or
or
imul
add
mov
pop
push
lret
pop
push
imul
imul
inc
movsb
aaa
ja
add
inc
add
nop
pop
mov
xchg
std
sbb
or
orl
je
or
in
lock
xor
sbbl
or
hlt
icebp
clc
addr16
test
cwtl
inc
add
mov
fs
adc
popf
bound
sbb
jbe
and
pop
pop
inc
test
add
scas
jecxz
mov
and
push
pop
fwait
cltd
cmp
cmp
aam
js
popa
mov
jge
pop
pop
loope
addl
xchg
push
shlb
push
movsb
pop
xchg
jae
push
popf
sbb
add
lea
push
lock
stos
sbb
ss
mov
and
push
stos
mov
jae
fsubs
test
push
mov
push
dec
dec
test
cli
sbb
sbb
and
ret
scas
add
je
jne
in
jmp
lds
push
dec
and
out
xchg
daa
mov
add
pop
mov
push
pop
mov
xor
xchg
dec
xorb
popa
mov
add
inc
cmp
sbb
dec
adcl
fisttpl
inc
in
pop
ja
dec
cmp
inc
popa
ret
hlt
aad
dec
repz
sub
jmp
out
sbb
adc
dec
daa
movsb
sub
mov
push
divps
push
mov
test
ret
mov
js
dec
push
or
jne
ret
push
mov
insl
divb
jbe
sub
pop
or
cmpsb
lds
cmp
pop
js
push
push
nop
pop
fimull
pop
ret
xchg
fisttpl
cltd
push
push
loopne
xlat
mov
andb
or
or
nop
mov
mov
popa
and
inc
jae
xchg
mov
inc
sbb
scas
mov
sub
mov
add
inc
std
inc
insb
cmp
add
out
jns
inc
inc
push
dec
push
imul
outsb
arpl
mov
jmp
xor
adcb
mov
ss
dec
xchg
jbe
and
movsl
push
mov
sbb
paddsw
mov
stos
gs
lahf
inc
sbb
sbb
mov
and
out
and
pop
mov
sbb
or
lea
scas
sub
sarb
inc
add
outsb
mov
outsb
mov
push
cmp
sbb
sbb
push
ja
orps
cmp
dec
inc
pop
inc
into
mov
dec
pop
push
xchg
clc
aaa
jae
in
mov
sbb
pop
push
insb
push
loopne
cli
or
add
imul
inc
xchg
pop
je
out
out
and
push
push
push
mov
pop
push
das
imul
ret
jb
es
add
lock
sub
aam
aad
ficomps
jmp
cmp
or
mov
fs
mov
addr16
imul
push
inc
fs
shrb
mov
push
pushf
imul
or
sub
pop
dec
scas
xorl
cmpsb
add
std
add
testb
imul
popa
or
or
sub
push
cmp
xor
and
mov
add
sbb
mov
cmp
or
push
cmp
mov
daa
jge
inc
sbb
inc
movsl
adc
jl
insb
je
fs
cltd
and
add
arpl
ja
pop
mov
lods
pop
adc
jae
push
data16
add
outsl
scas
jbe
xor
adc
pop
jbe
push
mov
push
outsl
push
lret
dec
imul
xchg
push
push
dec
jge
pop
xchg
inc
dec
add
sbb
and
cmpsl
push
dec
pop
sbb
mov
lods
inc
and
rcr
pop
out
jae
inc
mov
lock
dec
sbb
inc
and
enter
or
mov
flds
push
adc
lods
or
push
bound
lret
push
push
lea
or
adc
mov
andb
mov
lods
adc
push
push
ljmp
or
or
add
mov
test
adc
aam
dec
or
or
jae
push
add
add
add
add
sti
cmp
dec
add
lds
cmp
add
lret
call
cmp
xchg
add
or
fwait
mov
bound
jl
mov
test
mov
mov
push
ja
xchg
fsts
jb
add
enter
jne
imul
pop
popf
adc
adc
mov
jmp
pop
cmp
dec
mov
pop
pop
cld
pop
push
push
les
into
fcoms
add
sbb
sbb
add
iret
out
xor
stc
add
mov
inc
addps
cwtl
adc
add
pop
xor
and
mov
shlw
fisttpll
lcall
inc
dec
sbb
mov
fwait
pop
dec
sbb
test
aaa
test
adc
inc
notb
inc
adc
push
das
or
insb
jbe
movsl
bound
and
lds
add
mov
xor
nop
test
pop
inc
mov
mov
push
inc
and
dec
pop
mov
jbe
inc
daa
fistl
or
aas
scas
jnp
lret
cld
cmp
xor
cmc
and
out
cltd
mov
cmp
dec
inc
inc
adc
xor
mov
fadd
sbb
dec
pop
push
test
ss
sbbl
pop
add
mov
sbb
lea
shrl
push
dec
aad
jae
sbb
add
insl
pop
cmp
sbb
dec
inc
pop
loope
jb
pop
or
pop
mov
dec
das
push
inc
dec
imul
dec
dec
call
push
in
pop
imull
jo
sbb
xchg
push
add
in
insl
pop
inc
pop
es
divl
mov
jo
loope
add
jbe
data16
mov
call
mov
pop
popa
dec
inc
add
mov
ja
xchg
mov
lcall
xor
adc
dec
fs
repnz
into
push
sbb
popf
adc
or
inc
inc
xor
repnz
cmp
xchg
add
push
fcmovb
outsb
dec
sub
add
pop
push
inc
mov
adc
inc
adc
adc
or
pop
pop
cltd
mov
sbb
inc
dec
xchg
mov
sbb
sbb
cmpsb
mov
mov
push
jae
inc
fnstenv
inc
inc
out
dec
fcompl
mulb
ds
push
daa
mov
xor
xchg
pusha
push
sbb
sbb
imul
sub
stc
sub
mov
sbb
adc
dec
add
in
push
clc
and
pusha
push
insl
pop
or
sbbl
cltd
dec
jecxz
sbb
fisubrl
out
shl
and
inc
aaa
pusha
adc
or
jae
pop
int3
imul
push
jnp
call
cmpsl
inc
push
jmp
lods
test
xchg
les
test
mov
sbb
daa
ds
insb
add
add
adc
mov
mov
and
inc
dec
decl
xor
or
and
or
sub
dec
dec
push
out
add
add
jnp
popf
out
push
pop
imul
mov
pop
jbe
sti
inc
sbb
inc
cmp
test
pop
bndstx
inc
inc
insb
enter
pcmpgtd
jns
xor
dec
xchg
popa
pop
lods
add
dec
cmp
inc
push
inc
nop
lret
mov
inc
and
ror
scas
xor
into
or
gs
jbe
orb
sub
mov
and
ljmp
or
adc
sub
inc
jbe
cmp
outsl
dec
inc
sub
xchg
pop
test
sbb
fsubr
daa
in
outsb
add
pop
cmovs
dec
mov
pop
enter
movhps
insb
jnp
pop
and
sahf
repz
dec
mov
pop
enter
adc
mov
mov
dec
cmp
cmp
stc
adc
dec
aas
mov
insb
add
and
jl
adc
test
add
add
in
add
sub
push
inc
adc
in
test
xor
push
repnz
jle
mov
gs
mov
aas
cltd
lea
mov
fmuls
jb
aas
das
xchg
iret
pop
fmuls
xchg
sub
or
inc
or
sbb
pop
adc
cmpsl
and
sub
lcall
lret
mov
push
and
ds
push
push
xchg
push
adc
add
fs
add
mov
sub
loope
sbb
dec
icebp
add
lods
add
adc
mov
aas
or
clc
mov
add
int3
push
jb
je
inc
add
paddusb
push
roll
inc
js
mov
test
pminub
js
jge
je
jns
ss
push
imul
or
cmovge
jne
gs
popa
outsb
fs
push
adc
jb
outsb
je
iret
mov
push
dec
outsb
outsw
or
int
insl
popa
imul
negb
jnp
outsb
jne
inc
outsl
jb
popa
je
inc
adc
mov
sub
dec
popa
and
jo
fucom
fisubl
lret
shll
jnp
jg
test
outsl
jo
mov
fwait
jns
fsubs
push
outsl
adc
jae
lcall
push
gs
mov
mov
mov
or
lods
lea
dec
gs
sqrtps
pop
pop
int
jo
stos
sbb
inc
into
fcoms
sub
dec
add
iret
push
in
jl
xchg
imul
int
jge
outsb
in
sub
loopne
pushf
mov
fwait
mov
push
sbb
jnp
popa
sub
and
outsl
ja
xchg
sbb
sbb
cmpb
je
pusha
addr16
inc
adc
scas
adc
inc
ja
sbb
inc
into
or
imul
inc
popa
addr16
inc
mov
out
push
jns
arpl
lcall
mov
dec
inc
dec
inc
push
out
test
push
leave
cmp
outsl
mov
rcr
push
arpl
addr16
fistpll
pop
loopne
dec
mov
adc
aas
enter
push
inc
add
dec
add
add
pop
inc
sub
add
jae
add
sbb
dec
push
add
adc
pop
aaa
imul
add
pop
mov
mov
mov
fwait
pop
xor
add
push
push
xor
hlt
add
fwait
dec
add
add
inc
inc
cwtl
dec
cmp
fsubs
dec
les
mov
mov
add
out
dec
xor
in
jbe
rolb
or
push
add
shrb
negb
jbe
add
pusha
daa
add
mov
in
jo
add
sub
push
jae
es
xchg
jo
inc
cmp
add
inc
popa
pop
mov
add
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
