jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
movb
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
movw
call
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
push
call
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
movw
push
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
call
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
call
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
incb
cmpb
jne
pop
pop
pop
ret
lea
push
mov
add
movb
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
movw
call
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
movw
push
call
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
push
call
incb
cmpb
jne
pop
pop
pop
ret
push
mov
add
mov
mov
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
add
add
mov
mov
mov
mov
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
mov
cmp
je
jmp
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
xor
divl
test
jne
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
mov
cmp
je
jmp
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
mov
cmp
je
jmp
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
call
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
sub
mov
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
push
mov
mov
xor
call
mov
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
mov
mov
mov
call
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
push
mov
mov
xor
call
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
lea
mov
push
mov
jmp
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
sub
add
add
mov
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
mov
mov
call
mov
mov
mov
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
mov
movl
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
pop
ret
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
dec
lock
inc
lock
jb
mov
jl
mov
jbe
mov
adc
mov
or
mov
adc
mov
cs
sub
mov
imul
int3
inc
xor
test
lcall
mov
lcall
add
lcall
out
and
int3
inc
xor
in
imul
int3
inc
xor
shrl
lcall
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
ret
lods
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
lods
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
lods
int3
cmp
int3
mov
or
inc
sub
or
les
int3
int3
int3
outsb
les
ret
lods
int3
std
push
inc
ffreep
lods
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
lods
int3
std
or
les
lods
int3
inc
aaa
std
or
ret
lods
int3
inc
dec
enter
std
push
inc
ffreep
lods
int3
inc
dec
enter
std
or
ret
lods
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
enter
std
push
inc
ffreep
lods
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
movl
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
mov
call
mov
cmpl
je
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
cmp
je
mov
subb
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
xorb
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
incl
mov
cmp
jne
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
push
mov
push
call
mov
pop
ret
nop
push
mov
add
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
movb
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
mov
pop
ret
nop
push
mov
add
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
call
call
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
call
test
jne
mov
jmp
movw
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
call
lea
mov
pop
ret
mov
push
mov
add
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
push
call
mov
call
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
pop
ret
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
mov
mov
lea
call
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
ret
lea
ret
lea
xchg
out
jp
loope
add
sbb
int
pop
sub
or
add
mov
push
add
faddl
add
rolb
add
add
mov
jbe
js
std
movsl
dec
push
in
jge
std
pop
gs
add
mov
dec
add
add
or
outsb
xor
lcall
add
add
nop
add
js
push
add
add
sbb
mov
les
add
mov
or
and
pop
add
push
es
add
add
repz
rcl
add
arpl
add
add
cwtl
add
add
add
in
mov
in
int
es
inc
roll
add
test
sarl
add
int3
test
idivb
inc
cmp
and
inc
fiadds
add
clc
add
add
add
add
adc
push
adc
push
push
repnz
push
addb
int3
sbb
lcall
cmp
icebp
add
cmp
add
rorb
push
push
cmp
push
dec
mov
cmp
lret
add
dec
mov
aad
cmpsb
out
pop
add
movsl
lea
mov
add
add
cmp
in
int
mov
ljmp
inc
mov
pop
int
mov
add
add
dec
loope
or
add
add
mov
add
inc
loop
pop
add
jae
popl
scas
cld
jg
xor
inc
cmpsl
add
pop
and
pop
add
add
into
jmp
repz
scas
add
cmc
add
xchg
add
add
xlat
push
add
and
add
lret
bound
cmp
add
ret
cmp
mov
andb
adc
stos
fbstp
inc
lods
sti
popf
gs
add
in
pop
cltd
hlt
adc
test
lcall
popf
jno
jle
addr16
add
in
std
add
fmuls
xor
push
add
cmp
and
aad
inc
in
push
add
add
and
add
int
clc
shlb
mov
imul
jno
inc
add
ds
add
xor
filds
mov
aad
sbb
adc
pop
add
popl
lods
add
orb
dec
sub
addl
add
roll
daa
pop
nop
xchg
mov
add
push
or
dec
dec
dec
mov
mov
push
push
xor
add
and
add
gs
aas
inc
add
pop
add
stos
add
mov
pop
les
loopne
inc
stc
xchg
ret
lods
add
jmp
sub
inc
jp
add
add
sbb
mov
cmc
cmp
hlt
adc
sub
enter
cmp
sahf
add
out
cltd
add
call
inc
addr16
xor
outsb
pushf
mov
inc
pop
or
dec
mov
pop
test
cmpsl
ljmp
add
arpl
add
imul
add
rorl
cld
in
cs
out
push
jmp
add
in
fidivl
jb
adc
sub
sbb
jp
out
add
mov
add
shr
str
fwait
aam
add
ja
jns
pusha
add
mov
inc
loopne
add
add
stos
add
mov
add
stos
add
inc
add
incl
imul
or
dec
mov
push
aaa
push
mov
mov
jno
pop
sub
ja
arpl
dec
sub
rorl
or
pushf
dec
fwait
loopne
pop
push
xchg
push
mov
mov
ss
cmpl
test
xor
cmpsl
jp
sub
add
mov
testb
fisubs
out
jne
or
aas
pop
in
test
rcr
add
cmp
sarl
das
iret
push
cmpl
out
dec
scas
popf
jns
sub
xor
repnz
insb
clc
add
jnp
and
adc
mov
out
xchg
xchg
pop
mov
sarb
push
fdivrs
or
push
shlb
das
test
inc
sbb
sbb
imul
imull
or
xchg
jecxz
movhps
repz
leave
hlt
nop
sbb
xor
or
cmpsl
lock
xchg
jmp
aaa
add
or
add
add
int3
insl
int3
mov
mov
ficomps
xor
lret
scas
fwait
cld
or
cmp
sti
movsb
aas
xchg
sti
push
xchg
dec
mov
in
inc
cmc
in
pop
jne
daa
mov
mov
push
mov
mov
dec
jno
xchg
push
icebp
lcall
movsl
movb
pop
repz
sub
lds
push
jae
inc
imul
push
mov
int3
js
sbb
push
dec
clc
loope
jg
sub
push
lret
cmp
cld
and
jns
call
sar
test
mov
or
sbb
or
test
test
sub
stc
jg
fwait
mov
lcall
cmp
roll
out
sub
xor
cmc
cmp
test
sub
xorb
xor
cmpsb
sub
sbb
push
add
cmp
or
ja
aam
pop
lret
rcrl
fmuls
outsb
mov
cmc
leave
push
push
xor
pop
inc
loop
jo
stc
pop
cmp
inc
xchg
inc
adc
mov
bound
jle
cmp
xchg
pop
cmp
cmp
nop
cmp
mov
or
jg
gs
dec
mov
inc
in
adc
jecxz
mov
mov
add
xorb
or
sub
xlat
aam
shrb
mov
adc
in
lods
or
and
xor
aad
lahf
mov
push
jg
dec
aaa
in
inc
and
jno
mov
jl
repz
xchg
xchg
mov
and
and
ret
mov
cmp
or
add
jmp
mov
mov
push
dec
mov
aas
ffreep
inc
jb
int3
dec
dec
fs
divl
jp
lahf
popa
cld
std
cltd
in
cwtl
push
std
xor
ds
andl
in
pop
scas
nop
cs
sbb
lock
imul
dec
add
and
and
sarl
rcr
insl
ss
orb
popf
cmpsl
mov
sarl
pop
or
cld
sti
cmp
sub
and
cmpsl
mov
pop
cmp
shrb
icebp
fs
repz
es
mov
out
jbe
or
les
mov
lods
push
ja
mov
pop
lcall
jmp
pop
pxor
add
add
push
loop
mov
aad
push
or
or
test
fcoms
xchg
les
xchg
xchg
mov
inc
sbb
sbb
popf
test
add
inc
imul
adc
jmp
imul
mov
out
repz
xor
dec
sbb
cmp
or
dec
xchg
fwait
cmovbe
jne
test
bound
bound
jecxz
jns
jnp
in
or
ja
ljmp
or
jnp
adc
push
pop
or
cmpsb
repnz
in
xchg
dec
cmp
jmp
in
pop
fbld
xor
xchg
inc
aas
dec
jmp
cli
pop
in
or
xor
mov
pop
popf
mov
jge
push
je
pushf
stos
inc
std
in
and
mov
jnp
xchg
fstpt
popf
ds
mov
stos
adc
jne
iret
out
pop
ret
jbe
fcmovb
pop
inc
inc
std
mov
jecxz
push
push
fwait
das
xlat
or
jecxz
push
inc
pop
xchg
fcmovu
loop
xchg
mov
sbb
ficompl
fcmovnb
xchg
lock
shrb
mov
inc
addr16
lahf
lock
fistl
stc
inc
and
fnstcw
out
daa
sbb
or
or
sub
add
out
pop
out
inc
pop
sti
jecxz
fdivrp
cwtl
insl
xor
and
mov
cmpsl
cmp
fildl
push
in
loop
sbb
cwtl
in
sub
enter
daa
mov
mov
inc
xchg
nop
jno
rcll
xchg
xchg
inc
dec
loopne
add
aam
ljmp
mov
lahf
dec
aas
jecxz
sbb
push
or
add
sbbl
movsb
sub
and
fldt
inc
and
push
mov
sahf
aam
cmp
cmp
adc
fdiv
add
adcb
sbb
jle
add
lea
imul
int
je
sub
mov
lcall
out
fdivrl
xchg
sub
jnp
outsb
pop
adc
add
shrb
ds
leave
rorb
scas
mov
data16
cmpsb
push
ret
cmp
ret
lret
xchg
mov
xchg
in
shll
aam
daa
dec
push
sahf
or
xor
movsl
xchg
and
loop
mov
in
fs
cwtl
adc
inc
push
mov
lods
add
push
mov
xchg
dec
fwait
cli
insl
shrb
push
cmp
jecxz
or
int3
into
lods
mull
sti
shr
pop
mov
sbb
cs
imul
jmp
sbb
ret
jae
xlat
adc
xchg
sub
movsl
sub
sbb
sti
aam
imul
mov
xchg
xchg
dec
cli
inc
xor
inc
out
inc
push
push
repz
pushf
jmp
lea
pop
call
sbb
pop
cmp
dec
adc
pushf
dec
push
inc
sarl
scas
inc
ja
jae
jle
repz
xchg
dec
fcmovnbe
mov
jecxz
dec
and
mov
mov
cwtl
adc
mov
jne
mov
sbb
push
dec
dec
lock
xchg
inc
pop
push
fiadds
lock
das
push
mov
or
adc
rorl
movsb
insl
sbb
xchg
mov
and
mov
jbe
lds
and
inc
add
rolb
daa
push
aam
inc
rol
xchg
lods
es
mov
jns
mov
aaa
xchg
inc
popf
or
popa
push
fistpl
mov
sub
cmp
xor
dec
arpl
add
loop
arpl
cli
test
push
movsl
mov
push
sub
icebp
fimuls
js
test
lds
pop
adc
dec
sbb
cltd
fsubs
stos
in
lret
mov
pusha
add
nop
incl
mov
gs
or
aas
shll
push
stos
mov
ret
cli
dec
mov
mov
xchg
push
nop
add
xchg
pop
or
int3
xchg
fwait
ds
push
fidivl
or
mov
mov
aad
out
inc
inc
lods
bound
movsl
in
add
xchg
inc
sahf
pop
mov
ja
sub
idivl
addr16
dec
jp
aam
mov
mov
inc
mov
iret
dec
push
das
cmp
repnz
aad
leave
incb
filds
push
xchg
pop
ss
xchg
lds
adcl
out
dec
mov
mov
mov
mov
and
out
sub
hlt
jle
cmpsb
dec
push
aad
dec
adc
std
jns
mov
repz
inc
dec
jle
jae
sub
or
pop
subb
pop
mov
jge
imul
mov
andb
sbb
push
mov
cltd
inc
js
push
movsb
div
es
data16
xchg
inc
and
and
cs
aaa
addl
add
int3
inc
out
pop
sub
and
mov
lcall
pop
xchg
and
xorb
rcll
jb
jbe
addr16
adc
int
adc
add
jno
cld
xor
sbb
insb
loope
mov
mov
and
sahf
adcl
pusha
xchg
push
fmuls
mov
cmpsb
or
icebp
pop
icebp
test
pop
arpl
imul
or
sbb
cmp
pop
ds
cmp
mov
aad
jge
test
arpl
xchg
sbb
pop
sti
add
arpl
add
mov
mov
pop
cltd
push
sub
fsubrl
inc
mov
outsb
mov
and
jmp
fistpll
mov
mov
mov
mov
jecxz
jne
mov
lds
cmp
jle
sub
push
and
xchg
in
dec
sbb
mov
std
sub
sahf
stos
sbb
cmc
push
stos
pop
xor
mov
mov
lods
loop
pop
add
int
pushf
fs
jle
adc
dec
ss
jle
lods
ljmp
out
lds
mov
fwait
enter
pop
or
arpl
testb
loopne
outsl
push
pop
sarl
adc
inc
popf
imul
xlat
cmp
sbb
decb
xlat
push
pop
adc
outsb
imul
ret
imul
negl
addr16
xchg
aad
dec
push
nop
or
dec
cmc
mov
inc
dec
ficomps
les
test
sbb
aas
cmc
xor
scas
xor
call
cwtl
dec
lock
out
xor
adc
mov
enter
sbb
testb
xchg
sbb
jb
xchg
je
cmpsl
gs
push
icebp
movsl
in
cltd
std
out
jmp
int
jb
bound
adc
sarl
rcrl
mov
mov
loope
dec
sub
mov
sbb
add
mov
pop
idivb
enter
gs
adc
sarb
or
or
mov
cmp
pop
jns
pop
rclb
mov
aam
in
ret
and
dec
es
xchg
fldl
ljmp
test
ljmp
imulb
dec
mov
ljmp
shrd
insl
cltd
cld
cltd
lcall
mov
adc
dec
jmp
inc
inc
xchg
jns
sbb
push
or
pop
call
adc
out
in
add
add
jns
dec
jmp
add
mov
fidivl
bound
jl
incb
mov
pop
pop
pop
lahf
mov
mov
dec
dec
add
or
and
fwait
insl
mov
jne
aas
xchg
mov
ret
and
pop
bound
scas
mov
sbb
xchg
popl
mov
pop
fs
or
paddusb
adc
jp
add
arpl
jnp
cld
hlt
fimuls
add
cmp
and
mov
ljmp
xchg
nop
jp
and
adc
popf
out
pop
push
sbb
push
repnz
stos
daa
cs
push
jae
insb
cmp
aad
fcmovne
jl
jns
scas
push
sbb
out
js
pop
iret
movsb
addr16
ret
loopne
dec
enter
push
clc
jae
std
sbb
or
nop
inc
pop
mov
mov
data16
inc
sbb
xchg
cmp
sahf
fldcw
mov
push
add
in
push
or
sti
iret
hlt
jno
ret
arpl
roll
stc
cli
jge
push
sbb
sub
aaa
inc
jns
or
xchg
sahf
pushl
pop
pop
mov
fiadds
lods
xor
fistl
scas
cmp
and
call
movsb
loopne
fcoms
in
outsb
jbe
xor
in
mull
aas
enter
daa
mov
add
cmpsl
fwait
and
dec
mov
dec
mov
int3
jbe
in
mov
xchg
push
mov
or
push
mov
cs
pop
sbb
js
movsb
jp
mov
dec
in
js
mov
cmp
cmp
loop,pt
adc
mov
gs
fadd
out
jbe
mov
add
lea
int3
ljmp
pop
push
cwtl
pop
sahf
pop
sbb
lcall
inc
fwait
adc
aam
push
outsb
push
movsb
test
movsb
mov
addb
jg
adc
mov
shrb
and
and
gs
cmp
out
adc
lret
stos
shl
jge
or
test
push
insb
sbb
xchg
cmpb
andb
fs
dec
adc
gs
lods
rol
je
outsl
xor
out
mov
xor
iret
icebp
pop
cmp
mov
ds
jb
loope
std
pusha
inc
loopne
and
lock
add
mov
mov
add
pop
mov
push
xor
cmp
mov
xor
loope
or
out
fnstsw
xor
decb
mov
loope
push
push
lahf
inc
pop
decb
arpl
jnp
pop
std
shl
aas
popa
xchg
add
scas
lea
nop
inc
call
pop
stos
pop
mov
mov
pushf
lahf
mov
jmp
mov
pop
inc
out
xor
aas
mov
mov
dec
leave
test
jecxz
cmpsb
aam
test
lret
std
mov
adc
mov
aad
and
mov
das
pop
subl
scas
fcomi
mov
pop
xchg
push
ljmp
adc
mov
shrb
test
shrl
ret
test
ret
insl
jmp
cmpsl
dec
push
js
cmpsl
scas
mov
mov
in
test
jl
xor
jne
mov
and
js
mov
cwtl
adc
shrb
jecxz
sub
fisttpl
ret
mov
pop
es
lret
sub
into
xchg
shr
ljmp
shrb
mov
xor
mov
cmp
add
rcll
mov
pop
and
dec
push
inc
dec
test
pop
jle
push
gs
scas
inc
pop
roll
cwtl
pop
stos
cwtl
xchg
dec
shlb
xchg
xchg
pop
incl
mov
or
shlb
fldenv
leave
sub
mov
pop
out
ja
mov
pop
inc
das
imul
fwait
pushf
push
sbbb
sub
mov
ret
cmp
fldt
jns
fnstsw
test
pop
xchg
fidivs
sub
in
aaa
aas
addr16
inc
jp
out
mov
push
mov
xor
adc
in
test
add
sahf
fistpll
add
popf
add
xorl
out
adc
mov
push
xor
cmp
push
test
jnp
nop
arpl
xchg
xchg
push
arpl
sbb
add
push
ret
pop
jg
inc
bound
push
adc
push
in
fmull
push
loope
inc
xlat
in
sbb
xchg
mov
or
imul
push
lds
popf
faddp
mov
cltd
mov
leave
add
adc
mov
dec
cltd
inc
sub
lods
sbb
cs
add
imul
xor
push
fs
mov
fsubrp
lret
loopne
push
dec
pusha
jo
push
outsl
scas
pop
and
and
ds
cs
fstl
stos
mov
in
jo
ficoms
enter
daa
scas
mov
pop
jno
mov
or
sub
mov
daa
and
jns
lahf
cmpsl
push
dec
test
outsb
idivb
inc
jns
cld
cmpsb
adc
rcrl
cmpsb
js
sbb
loope
je
push
bound
loope
shl
sub
inc
add
xchg
das
xchg
ds
mov
imul
jmp
insl
stc
push
lds
xor
mov
ljmp
lcall
xchg
sub
lcall
fdivrl
dec
sub
hlt
mov
test
lods
popf
andb
push
sarl
mov
and
mov
push
in
xchg
ja
push
lret
sbb
cmp
hlt
shlb
rcr
sbb
insl
sbb
jp
mov
sbb
data16
in
aaa
xor
mov
outsl
outsl
test
loop
outsl
stc
cmp
or
push
gs
ss
mov
xchg
mov
icebp
out
cmp
xor
cmpsb
imul
cmp
sub
gs
int
int3
in
pop
bswap
push
adc
push
clc
adc
imul
push
xor
cmp
xlat
shlb
sub
mov
pop
int3
sti
loope
in
lods
sub
aad
mov
nop
sarb
inc
outsb
push
dec
fstps
rcrb
repz
xchg
lds
cld
call
xchg
in
pop
push
push
inc
pushf
dec
xchg
xor
push
inc
test
cli
hlt
xor
inc
enter
pop
dec
sbb
adc
inc
push
icebp
je
xchg
lock
cmp
std
xor
pop
movsb
mov
and
aaa
addl
psadbw
pop
lea
pop
cmp
mov
mov
loope
pop
leave
dec
mov
mov
sarl
and
insl
rcrb
dec
or
xor
mov
mov
mov
mov
shlb
adc
pop
mov
mov
sub
rcl
push
es
ret
inc
and
es
rcr
fbld
clc
bound
xchg
add
nop
ljmp
movsb
lods
adc
push
mov
xchg
sbb
xchg
js
push
lea
add
dec
dec
test
jg
dec
pusha
lds
pop
push
dec
mov
lea
aam
sbb
push
rcrl
xor
stos
mov
outsl
aas
add
scas
and
and
sbb
pop
and
or
testl
mov
int3
in
inc
mov
rol
pop
ja
lcall
mov
dec
movsb
fwait
lret
loop
push
ret
syscall
jne
mov
mov
fldlg2
out
fisubrs
mov
inc
xchg
in
fcomip
xchg
sub
xlat
sub
call
push
xchg
jle
mov
idivb
mov
mov
cmp
in
or
lcall
xchg
nop
push
jecxz
xchg
or
addl
out
test
popf
cmp
addr16
jo
rep
or
sbb
insb
psllq
jnp
push
cltd
jle
jns
push
stos
lcall
bound
ret
es
mov
pop
inc
insl
stc
aad
pop
insl
fs
cmpsl
xorb
xor
push
push
mov
xchg
adc
repz
pop
fisubrs
scas
pop
scas
stos
mov
mov
sbb
aad
mov
xchg
adc
leave
jnp
xor
pop
les
sub
inc
out
mov
notb
add
dec
add
mov
int3
add
mov
fimuls
mov
and
bound
cmp
dec
call
push
and
enter
dec
enter
daa
scas
fidivl
jno
dec
add
cmp
daa
pop
push
pusha
outsb
xor
popa
lea
push
decl
test
cmp
inc
or
cmpsb
xchg
sbbb
call
pop
and
push
loope
add
inc
out
sub
add
inc
outsb
test
pushf
sub
mov
shlb
xor
ja
lahf
int
rorl
pop
push
pop
out
cmp
repnz
lret
fsubrl
int
sub
add
push
push
cmp
and
out
mov
stos
jno
stc
out
test
jle
push
into
fwait
mov
fsubrs
sti
test
pusha
and
popf
mov
cmp
jecxz
aad
xchg
pop
dec
cmc
lods
sbb
xor
mov
pop
ss
jo
stc
bnd
fs
push
mov
ss
hlt
lods
lahf
icebp
decb
lea
cli
cmp
xor
dec
cmp
loopne
or
sahf
iret
into
cmp
or
loopne
mov
sbb
jp
xlat
imul
cmp
data16
jge
sbb
scas
pop
xchg
cmovns
sub
aas
and
les
pop
rolb
nop
nop
fwait
add
adc
mov
sbb
inc
les
xchg
mov
lret
call
adc
adc
rclb
pushf
cmc
dec
in
jmp
loopne
pop
fwait
loopne
hlt
in
inc
jecxz
lret
cli
dec
jb
movsb
pusha
dec
mov
dec
je
mov
scas
and
and
and
mov
adc
adcl
sub
shll
ds
insb
das
out
test
mov
cmp
rcl
sub
dec
jecxz
insl
mov
mov
xchg
mov
xchg
out
cld
shlb
lret
push
xchg
fisttps
insl
or
mov
ljmp
outsb
addr16
push
lds
iret
orb
push
stos
fnstsw
enter
out
xchg
aas
push
sub
add
loop
mov
fldt
dec
jno
mov
push
mov
push
addr16
and
cmpsb
jl
cltd
aas
pusha
roll
in
addr16
fldenv
test
push
enter
ss
pop
add
or
adc
stc
dec
add
shll
mov
pop
or
andb
sti
cmp
iret
cmpl
out
std
jbe
fidivl
mov
pop
rolb
push
sbb
fwait
cli
xor
push
ljmpw
divb
mov
in
jns
push
cs
and
addr16
loopne
sub
jecxz
nop
addr16
leave
push
mov
movsl
xor
ret
stos
jle
in
in
pusha
xor
outsb
add
mov
pop
adcl
rcrb
sbb
stos
cmpb
insb
jp
fidivrl
pop
or
push
icebp
add
adc
sub
sarl
pop
in
pop
pop
inc
js
push
jae
or
push
push
push
or
dec
xchg
push
inc
aad
aas
fisubl
xor
sbb
jp
imul
xor
aaa
add
shl
aam
leave
repnz
repnz
popa
leave
repnz
arpl
pop
sarb
aaa
sbb
aaa
jg
ss
pop
lea
arpl
icebp
int3
out
or
pop
out
sbb
cs
gs
in
lahf
icebp
scas
aad
push
and
fstpt
cmp
sahf
push
jo
std
jbe
inc
and
lods
push
enter
daa
lods
jg
cmp
xchg
jno
pop
xlat
jl
fldl2t
dec
or
dec
push
inc
sub
xlat
and
mov
lahf
in
lds
push
subb
xor
inc
xchg
push
cmpsb
sbb
lea
js
sti
jns
pop
cmp
mov
sub
mov
cmp
pusha
dec
ds
pop
sub
pop
aas
je
stc
pushf
movsb
subb
pop
add
add
xor
or
push
arpl
sub
jp
pop
xchg
adc
out
mov
movsl
mov
mov
test
lds
jg
push
arpl
jo
or
add
leave
lret
mov
push
fcomi
dec
mov
scas
shrl
leave
sbb
mov
jae
popa
xor
xor
loop
cmpsb
cmp
mov
lds
movsb
iret
xor
fcmovne
push
lods
xchg
and
mov
inc
cli
insb
repnz
cmp
xor
or
sti
into
sbb
inc
loopne
stos
mov
dec
daa
lcall
scas
mov
push
rcll
add
lea
sbb
ljmp
sub
test
mov
das
and
mov
repz
adc
jb
jbe
push
dec
jno
and
xchg
repz
ds
les
dec
repz
mov
xchg
dec
add
lea
and
pop
mov
rcrl
imul
pop
incb
jmp
pushf
fisubrs
shlb
inc
pop
sarb
cltd
stos
xorb
icebp
dec
fldenv
jecxz
das
pop
mov
cs
orl
mov
das
mov
subl
pushf
mov
jge
mov
mov
popa
cs
jle
das
lds
mov
notl
imul
mov
testb
repnz
cmp
cmpsl
lods
arpl
fldenv
mov
std
imulb
mov
in
and
dec
mov
pop
cmc
fstpt
shlb
rcl
aam
mov
ret
pop
and
cwtl
frstor
jne
xchg
jle
xor
jbe
cmc
popa
leave
in
out
ljmp
mov
push
push
fwait
push
or
sbb
add
sbb
test
leave
mov
mov
fimuls
and
xchg
aas
into
sbb
ds
dec
popf
int3
pop
stos
fdivp
stos
cwtl
daa
lods
out
js
mov
std
imul
jmp
loopne
add
ret
push
repnz
loopne
mov
rcl
mov
dec
xor
dec
int
mov
hlt
cmp
or
ret
sub
push
or
and
pushf
pop
fbld
mov
jns
add
xchg
lret
aam
mov
pop
jl
cli
mov
addr16
pop
jp
enter
jns
mov
jle
adc
mov
in
and
pusha
rolb
pushf
xchg
ss
jmp
mov
icebp
xchg
out
sub
popf
mov
mov
sti
dec
stos
repz
fisubs
scas
push
insb
in
nop
jnp
insl
mov
add
int
adc
mov
cmp
pop
and
inc
sub
jae
in
mov
or
lds
inc
push
ljmp
ret
sbb
outsl
aad
je
adc
mov
mov
xchg
repnz
push
dec
arpl
mov
push
ret
push
sbb
push
aaa
test
ljmp
int3
fisubl
pop
adc
xchg
adc
test
loop
scas
mov
in
mov
cmp
sub
jge
jbe
enter
daa
lods
test
cmp
divl
in
jl
leave
call
push
es
movsl
mull
ficompl
or
shrb
iret
push
jo
es
cmpsb
fwait
movsb
mov
js
xchg
sbb
sahf
jbe
push
aam
loope
int3
das
sub
sub
outsb
sub
adc
cli
and
pop
cwtl
add
adc
lahf
add
jge
xor
dec
std
loopne
int
fcomps
adc
repz
loop
orb
nop
push
cmp
xor
test
out
xorb
jg
lret
lods
push
sub
pop
ja
aam
lds
and
lret
sub
inc
std
xor
aas
pushf
ljmp
popf
mov
cmp
xor
and
js
int3
maskmovq
pusha
flds
fs
es
xchg
insl
mov
mov
sub
mov
mov
lahf
dec
stc
xor
mov
cmp
push
xor
mov
dec
dec
cli
gs
or
popf
stos
imul
adc
movsl
fwait
imul
pop
add
and
je
sbb
and
jns
sub
sbb
in
lcall
push
and
aad
pop
inc
nop
push
shlb
idivl
fnstcw
cmc
mov
repz
fistl
mov
jno
cmpb
adc
std
pop
outsb
jnp
adc
jle
dec
cmp
jmp
jo
cs
pop
inc
add
inc
sbb
cmpb
pusha
mov
dec
movsl
xchg
jb
inc
insl
fsubp
and
fdivrp
sub
jo
je
jge
sbb
ret
dec
shlb
movsb
pop
and
lock
lret
movsb
push
inc
mov
scas
inc
call
shll
and
into
adc
stos
dec
cli
dec
inc
cmpsl
stos
dec
cmp
inc
mov
jns
xor
shll
in
cs
adc
mov
sub
aam
sbb
in
or
adc
pop
clc
adc
xchg
mov
repnz
loopne
aaa
lods
push
adc
mov
dec
out
push
call
pop
nop
add
ret
lods
jl
test
dec
mov
shlb
pop
xor
dec
in
mov
sarl
push
cmp
jnp
xor
mov
rep
xchg
ret
out
incb
add
cltd
jmp
dec
or
xchg
ret
sbb
xchg
hlt
out
mov
add
and
insl
push
decl
ret
mov
movsl
or
cmp
fwait
pop
and
jne
in
mov
xchg
aam
jnp
sub
mov
cli
in
scas
lcall
dec
push
sub
fstps
lret
jnp
mov
jno
mov
in
mov
dec
in
ret
imul
fsts
jns
lds
sub
out
sbb
mov
sub
notb
insb
push
je
jnp
aas
jb
sub
add
adc
mov
ret
ss
pop
mov
inc
mov
jae
adc
lock
pop
stc
push
roll
fcmovb
inc
lret
xchg
sbb
mov
mov
test
lds
adc
es
popf
mov
mov
sbb
call
mov
sub
pop
fstpl
shlb
lods
or
mov
in
lds
cmp
xchg
movsb
fidivs
xor
mov
adcl
lock
xlat
xchg
movsb
xchg
jg
push
push
dec
jne
lock
imull
daa
stos
push
sbb
cmpsb
hlt
enter
out
jl
lea
dec
jmp
xchg
movsl
and
lahf
and
xor
lcall
cmpsb
push
jno
pop
fistpl
js
ret
adcl
xor
mov
lods
sub
jb
cmp
scas
ds
daa
mov
aad
test
aad
sbbb
ljmp
mov
pushf
mov
pop
xor
pop
xchg
or
push
sbb
xchg
fsubrl
int
sub
movsb
outsb
or
outsb
mov
jg
inc
jmp
add
mov
push
mov
leave
xchg
and
sub
cmp
loopne
test
ja
rcl
sbb
fadd
sahf
jge
repnz
add
xor
outsw
jmp
sub
stc
pop
sbbb
and
adc
lods
push
addr16
mov
pusha
out
pop
sbb
rcrb
xor
mov
pop
or
out
add
and
lret
mov
xchg
adc
in
out
imul
clc
add
add
pop
push
pop
sbb
pusha
xchg
xlat
int3
xlat
inc
sub
xchg
xor
push
jl
in
add
mov
cmp
aad
mov
push
dec
das
js
inc
mov
push
aaa
les
cltd
xchg
sarl
sub
std
dec
mov
pop
and
push
adc
ss
pushf
imulb
jmp
or
xchg
inc
mov
inc
xor
xchg
xlat
sbb
dec
sbb
and
mov
jecxz
xor
jno
std
sarl
and
das
sti
fidivs
test
push
dec
mov
movsl
jg
lods
mov
dec
sub
xorl
in
sahf
mov
frstor
shll
pop
mov
sbbb
stos
mov
jp
pop
mov
cld
push
jg
lret
mov
aad
and
jg
mov
xor
pop
rolb
cmpsl
sub
pop
aam
cltd
jmp
es
and
clc
dec
rorb
cld
ret
push
ljmp
lods
rolb
sub
xlat
xchg
xchg
loope
push
ret
and
add
xor
cltd
in
call
mov
sub
dec
push
aam
test
je
xchg
mov
mov
pop
add
aam
jbe
cmp
ds
add
sbb
cwtl
lcall
ficompl
or
cmp
rcll
xchg
mov
mov
inc
add
pop
pop
inc
and
or
mov
fwait
xchg
jb
in
mov
xchg
pop
out
pop
sbb
pop
jns
push
or
pop
icebp
adc
mov
mov
sub
aam
xor
or
daa
jp
loop
mov
lea
mov
dec
push
cld
jno
and
test
push
mov
fistps
xchg
lods
xchg
fsubl
out
xchg
push
lods
fldl
mov
mov
mov
insb
mov
xor
fstpl
pop
insb
mov
aam
jle
xchg
dec
push
popl
iret
fidivrs
ret
dec
pop
xchg
cmp
jae
jl
push
mov
pop
or
mov
daa
pop
fidivrl
push
xchg
jo
imul
lahf
imul
scas
aaa
ret
and
int3
mov
cmpsb
xchg
add
fiadds
dec
leave
push
jl
hlt
xor
xchg
inc
cmp
push
jge
aam
sbb
and
or
adcb
mov
sub
ficoms
xchg
xor
std
mov
xchg
and
clc
je
and
mov
in
popa
lea
repnz
cwtl
daa
stos
xchg
adc
jmp
fnstenv
in
and
movsl
add
mov
mov
mov
shrb
xchg
inc
inc
or
cmpsb
mov
push
inc
js
test
sbb
inc
push
dec
cmp
sub
or
ds
es
mov
add
push
fwait
xchg
sub
lea
addb
cld
insl
mov
or
int
outsl
pop
sub
popa
pop
adc
pop
call
sub
pop
mov
outsb
jo
lret
pop
inc
subb
sub
mov
jns
mov
clc
pop
and
inc
pop
push
ficompl
sti
cmp
fwait
inc
in
mov
cmpsb
shrl
mov
xlat
and
enter
mov
lock
lret
loop
jle
stc
into
lret
and
in
jmp
movsb
dec
mov
cmp
dec
mov
and
mov
cli
add
call
sub
xchg
adc
into
les
xlat
gs
iret
out
loopne
out
pop
stos
iret
call
imul
add
cmp
insb
inc
jge
xlat
or
mulb
jo
cmp
pop
mov
aad
jle
nop
pop
rclb
dec
mov
sub
fldcw
fistpl
xchg
or
cmpb
js
add
aam
stos
adc
dec
pushf
mov
fldt
jmp
fwait
sbb
and
aas
jbe
pop
jb
cli
push
dec
xchg
icebp
sub
inc
jecxz
sbb
mov
daa
ja
ljmp
mov
inc
pop
xor
daa
rcr
or
pop
imul
in
das
bound
inc
mov
sbb
andb
add
ljmp
adc
dec
lock
sahf
mov
out
jmp
scas
lret
bswap
test
mov
mov
pop
push
movl
sub
lret
mov
ret
or
or
adc
fmulp
xchg
cmp
ljmp
imul
scas
inc
xchg
fstpt
les
aaa
pop
cmovbe
sub
repnz
cltd
sbb
test
enter
mov
test
add
sbb
nop
jmp
pop
lods
cwtl
jmp
gs
mov
adc
add
or
cmp
dec
jb
xchg
mov
jl
in
insb
xchg
xchg
in
mov
jns
sub
dec
cmpsb
pop
popa
inc
mov
lods
dec
fwait
mov
sub
repnz
mov
outsl
push
out
cmp
lods
bound
push
jns
in
and
ljmp
mov
mov
sub
iret
dec
popf
or
popa
jp
incb
mov
lret
mov
jp
sub
sub
arpl
xchg
scas
cmp
jmp
sbb
imul
mov
stos
stos
dec
jmp
and
xor
imul
adc
aas
xor
xchg
cmp
bound
inc
movsb
push
call
push
jbe
or
ss
inc
rorl
inc
xchg
mov
sub
inc
cmp
scas
lcall
rcrb
inc
aad
repnz
leave
into
dec
add
jle
shlb
mov
cmp
push
jge
xor
sbb
xor
or
cmc
mov
int3
fwait
insl
add
neg
fidivrs
enter
and
scas
push
dec
lcall
mov
inc
push
lods
mov
jbe
popa
arpl
dec
adc
daa
test
sarl
ficoml
jl
xchg
dec
scas
outsb
push
iret
mov
movsl
or
test
push
daa
sbb
stos
jecxz
lds
cmovae
sbb
cmpsb
and
ss
sub
js
fdivl
pop
cmp
or
pusha
sub
cmpl
xlat
in
adc
mov
jne
mov
sbb
in
xor
jo
inc
jo
int
nop
cmpsl
sub
pop
jb
xchg
adc
lcall
adc
addl
outsb
rcrl
xchg
add
xchg
jg
cmp
or
xor
in
popf
je
fucom
fidivrs
push
dec
xchg
testl
repz
mov
and
into
lcall
mov
shrl
jae
test
fs
push
loopne
lcall
jg
mov
out
add
shlb
mov
jg
aas
mov
jp
cmpsl
adc
loopne
and
pop
leave
bsr
cltd
sbb
arpl
cli
adc
xchg
out
add
test
gs
sbb
clc
enter
iret
sub
push
mov
fcmovnb
xchg
sti
fs
jg
out
aad
test
nop
loop
or
test
inc
loopne
cmp
in
int
test
pop
cltd
xchg
push
dec
inc
out
mov
repz
nop
pxor
loop
adc
push
pushf
dec
push
sub
mov
daa
xlat
inc
xchg
inc
dec
inc
push
push
aas
adc
xchg
dec
dec
or
or
push
inc
pop
mov
clc
fcomps
pop
jb
mov
push
dec
xchg
test
fstpt
lret
or
int3
mov
pusha
mov
das
inc
add
mov
rcrl
xchg
rcll
hlt
notb
mov
dec
jmp
pop
cmpsl
test
adc
movsl
clc
icebp
lds
test
test
and
mov
sub
jno
cmpsl
shr
dec
adc
aam
lret
pop
sbb
out
jmp
clc
les
xchg
jp
jne
inc
in
popa
and
sub
xchg
mov
and
cwtl
push
jns
sbb
movsl
daa
xor
add
jne
test
xchg
insl
xor
pop
xor
rolb
sbb
mov
stos
push
rcll
out
add
add
push
push
lahf
fcompl
jae
or
mov
hlt
inc
adc
jmp
add
xor
fcmovnb
inc
push
dec
sti
or
mov
dec
push
xchg
jnp
jne
lds
mov
std
push
sbb
iret
cli
sub
popa
cs
in
jb
xchg
pop
bound
mov
stos
sub
lret
or
jp
int
mov
xor
push
push
fmuls
sbb
in
std
mov
fistps
rcll
pop
rorl
pop
outsl
or
cmpsb
mov
xor
ljmp
and
je
insb
xchg
imul
jle
fsubr
push
push
loop
adc
push
pushf
dec
add
mov
pop
add
push
jae
sbb
push
cmp
xchg
push
push
je
mov
cmp
mov
scas
std
xchg
lods
and
ja
in
in
jl
test
mov
inc
jne
leave
add
push
inc
inc
aas
sbb
repz
sbb
shrl
aaa
cmp
and
add
inc
int3
xchg
pop
ror
clc
ficomps
or
lds
scas
xor
push
and
bnd
das
sub
cmp
jno
sti
dec
or
mov
jnp
enter
daa
test
cmp
aas
int
jno
mov
mov
ss
inc
push
mov
test
add
jo
push
add
push
sti
or
inc
bound
cmpsb
cmpsl
mov
js
popa
pop
lcall
loope
adc
int3
inc
aad
pop
inc
lea
cli
fsts
adc
data16
aam
pop
orb
inc
sbb
fsubrs
adc
push
or
or
pop
adc
lcall
ret
inc
sub
dec
test
fcompl
sbb
fnstsw
rcrl
adc
mov
xchg
push
mov
push
repnz
cmp
push
loopne
fidivrs
adc
xchg
testl
sbb
or
and
sahf
data16
push
cmc
push
andb
mov
mov
int3
stc
cmp
hlt
fs
mov
das
add
ss
sub
inc
icebp
add
cli
imul
cmp
xor
jb
cmp
gs
jne
pop
call
add
imul
test
callw
sbb
adc
popf
xlat
mov
shrl
jns
mov
xchg
cmpb
stos
in
mov
xor
lods
dec
dec
adc
fstps
cmp
les
mov
lea
sbb
outsb
add
xchg
ret
lret
pushf
testl
cmp
scas
test
push
dec
xlat
inc
test
add
dec
and
int3
jecxz
mov
mov
addr16
lods
mov
mov
int
mov
jae
dec
jl
inc
fldt
sub
mov
pop
xlat
lock
les
mov
mov
and
mov
add
fisubrs
in
dec
out
shll
fmuls
icebp
pushf
ret
sub
aam
out
lret
in
add
mov
inc
pusha
mov
nop
int
rol
rorl
loopne
xor
sub
imul
loop
pushl
mov
popa
cmp
out
lods
add
sbb
mov
imul
sub
add
movsb
add
mov
pop
test
int
push
imul
test
fcomps
sbb
rcl
jmp
push
pop
add
push
out
addr16
add
insb
es
jnp
inc
xor
fdivs
sahf
adc
loope
idivl
out
jmp
ja
sub
dec
mov
inc
out
xchg
or
imul
das
ljmp
fcoms
neg
pop
bound
push
jns
adc
in
mov
xchg
push
scas
mov
sub
lds
addr16
ds
mov
mov
or
cld
or
lds
add
fbstp
add
push
dec
loope
mov
jecxz
in
mov
daa
popf
dec
orl
mov
stos
xor
dec
and
mov
iret
jnp
cs
jle
insl
cmpsb
push
fwait
mov
push
iret
sti
fcomps
jl
push
pop
aaa
sbb
mov
push
mov
or
sub
aaa
inc
iret
loopne
ficoml
hlt
sub
add
scas
pusha
lock
popa
cltd
std
rclb
xor
leave
mov
jl
arpl
push
mov
sbb
imul
in
mov
pop
or
push
dec
xor
push
pop
push
test
addr16
ja
out
and
sub
repnz
push
enter
push
lret
jge
jno
push
sub
add
push
xchg
stos
ret
movsl
sbb
enter
loope
lahf
xor
test
int3
sbb
or
pop
pop
ja
inc
js
inc
pop
fsts
push
dec
enter
inc
sub
loopne
cmp
push
ja
sbb
popa
adc
inc
enter
mov
inc
sbb
int3
xor
fdivrl
add
mov
lret
and
movsb
cvtpi2ps
cmp
test
dec
cmp
sarl
dec
das
mov
pop
push
mov
sbb
mov
jle
and
and
cmp
int3
push
xchg
test
movsb
shll
inc
mov
sbb
int3
cmc
sbb
mov
outsl
addr16
jno
stos
sub
fs
iret
push
adc
inc
ss
loope
lods
lock
out
mov
add
cmp
jl
or
ss
insl
push
frstor
dec
sbb
pop
pop
pushf
pushf
adc
sbb
adc
ljmp
imul
insl
add
dec
stos
out
enter
in
fimuls
lods
je
in
mov
add
pop
sub
inc
shl
aad
es
cwtl
std
lods
dec
stos
mov
push
and
dec
repz
xor
mov
shr
jmp
call
jae
and
pushf
mov
adc
movsl
mov
ret
aas
push
and
jb
pop
and
clc
int
je
cmp
outsb
imul
ret
fldlg2
std
insl
inc
mov
fsubrs
mov
dec
addr16
xchg
cmp
sbb
mov
mov
lock
fisttps
mov
inc
mov
push
shl
xor
fldt
and
dec
loope
shll
or
icebp
jae
loope
jg
lret
pop
inc
nop
mov
cld
mov
jmp
adc
scas
xchg
rclb
sar
stos
dec
jecxz
mov
test
mov
sub
sub
popa
push
aas
sub
addr16
mov
mov
or
hlt
add
add
add
cltd
sar
test
fsts
test
dec
out
jmp
addl
push
sub
add
xor
out
lret
add
xchg
lcall
scas
fnsave
not
inc
or
mov
inc
mov
in
stc
mov
stos
data16
ja
sub
dec
jg
push
or
or
inc
fdivr
push
fistl
mov
push
mov
int3
pop
cmc
aad
jns
fwait
in
in
inc
push
xchg
movsl
inc
or
fs
or
mov
lahf
jp
xchg
mov
fs
mov
sbb
mov
aas
ret
mov
fists
cmp
jmp
jle
jge
jl
mov
popf
je
mov
push
push
push
pop
and
pop
insb
addr16
jnp
rcr
jle
repnz
push
loop
fwait
adc
insb
iret
pop
imul
jo
pop
outsb
pop
xor
lds
cmp
mov
sbb
push
dec
rcll
inc
jecxz
xchg
int3
les
clc
xchg
scas
imul
test
call
cmp
mov
sub
jae
xor
push
arpl
mov
jg
inc
cmpsl
lods
sbb
cld
aaa
mov
mov
int3
pop
sub
fisubs
dec
inc
jo
adc
scas
out
sbb
cmp
cmp
dec
jbe
stc
popf
in
std
clc
daa
enter
daa
cmpsb
jb
cmp
add
adc
push
js
jmp
cmp
les
std
dec
cwtl
test
xchg
loope
inc
sub
cmpsb
lods
cmp
js
push
test
sbb
inc
loope
mov
mov
sub
ds
push
adc
sbb
test
xor
add
pop
add
xor
adc
int
dec
in
sub
daa
pop
push
jp
lcall
sub
xorb
outsb
cld
popf
inc
test
ljmp
push
or
mov
incb
out
out
cmp
xchg
inc
testl
jne
mov
dec
mov
pop
jl
sahf
lods
mov
cmc
in
pop
xor
jbe
outsl
inc
xchg
stc
stos
pop
gs
or
adc
and
ss
pop
lods
xlat
push
xor
test
push
cli
shll
enter
ja
rcrb
into
push
out
scas
gs
xchg
aaa
loopne
push
mov
call
mov
es
adc
xchg
or
les
data16
cmp
sbb
xchg
pop
xlat
pop
imul
pop
xor
in
sbb
nop
sti
or
xchg
call
jl
nop
jae
mov
inc
sbb
dec
repz
popa
out
xchg
mov
cmp
call
or
popf
in
adc
mov
dec
fadd
jmp
jl
jne,pn
lods
inc
sub
mov
aas
repnz
sbb
fs
outsl
pop
inc
je
sti
add
jge
xchg
push
stc
std
adc
mov
inc
jae
xchg
push
jecxz
xchg
mov
mov
push
and
fcmovnb
mov
xchg
mov
jns
lock
cmp
mov
clc
mov
push
roll
in
mulb
inc
insl
icebp
inc
ret
loope
cmpsl
movsl
movsb
mov
icebp
dec
sub
mov
mov
stos
and
xchg
rcl
inc
fsubrs
cmpsl
aam
jbe
add
adc
pop
fnsave
xlat
fsts
fwait
mov
xlat
mov
mov
shl
mov
or
cmpleps
jne,pt
cltd
divl
and
jecxz
push
icebp
mov
add
xchg
sti
sbb
cwtl
mov
stos
and
or
mov
mov
outsb
or
outsb
xor
popf
std
mov
out
mov
gs
ja
stos
hlt
dec
jb
or
or
sbbl
enter
dec
sbb
mov
jns
enter
sub
hlt
adc
adc
mov
subb
mov
aaa
dec
mov
fstpl
in
mov
repz
lahf
loopne
inc
inc
inc
xchg
dec
mov
or
stos
out
cmp
popf
fwait
cmpl
movsb
cmc
xchg
xchg
adc
push
push
mov
rcl
cltd
jnp
cmp
call
adc
push
mov
mov
xor
pop
movsl
cmp
and
jae
mov
cmpb
push
int
nop
test
xchg
and
outsb
imul
lock
es
lds
pop
ror
bound
jge
push
leave
stos
add
cmp
inc
dec
pop
loope
call
xor
or
les
pop
pop
call
pop
xor
vfnmsub213sd
adc
and
cmp
mov
call
mov
push
enter
daa
movsl
aaa
fidivrl
fdivr
dec
jno
fimuls
rorb
push
pop
je
movsl
sub
mov
sarl
dec
jge
rolb
test
pop
dec
addl
mov
pop
vhaddps
std
push
pop
push
ja
push
shlb
jne
loop
or
fstpt
arpl
sahf
adc
notl
pushf
addb
sbb
add
xor
test
push
xchg
incb
loope
das
pop
lea
lcall
sub
sub
test
pop
fisttpl
test
subb
jns
or
xacquire
mov
rol
and
mov
push
jmp
inc
sbb
xor
testl
mov
pusha
insl
mov
movsb
cmp
mov
sahf
dec
test
cmc
stos
jl
xor
subb
cmpsl
loop
mov
and
movsb
adc
mov
repz
mov
arpl
out
test
xor
or
or
lret
dec
ds
fcmovu
lahf
pop
inc
cmp
imul
xchg
adc
push
mov
mov
cmp
lods
mov
sub
cmp
in
xchg
sub
or
and
nop
dec
aad
dec
imul
je
shl
aad
outsb
repz
jecxz
arpl
mov
andl
fucomip
add
mov
inc
pop
push
cltd
es
inc
mov
lods
push
fcomps
inc
mov
ret
inc
cmpsl
dec
aas
xchg
shl
cmpsl
test
out
jg
push
jecxz
jecxz
lahf
xor
leave
inc
mov
cwtl
xchg
inc
push
mov
cmc
adc
out
loope
cmp
inc
xor
mov
lahf
in
lock
pop
das
mov
push
ds
mov
mulb
dec
and
cmpsl
movsb
sub
mov
and
vandnps
insb
lret
cmp
pusha
mov
and
and
movsl
sarb
dec
adc
sbb
push
ret
fsts
repnz
fstp
out
mov
xchg
jbe
ret
subb
inc
mov
hlt
push
cmp
in
rorb
and
add
sbbl
popa
aam
push
mov
dec
mov
jno
xchg
mov
sbb
jp
add
insl
pop
add
out
nop
mov
add
mov
int
xor
adc
lcall
ljmp
pop
and
or
mov
dec
gs
inc
lods
xchg
out
or
shll
mov
jle
jne
push
lods
out
xchg
mov
sbb
cltd
inc
in
fs
inc
das
and
sub
mov
mov
ljmp
ja
push
mov
divb
fmull
mov
in
sbb
pusha
test
dec
inc
push
xchg
into
cmp
jmp
adc
mov
lcall
popf
ret
mov
out
sbb
addr16
insb
cmp
imul
sbb
aaa
rcll
push
ror
sbb
pop
fdivrl
loope
xor
or
aaa
jno
push
dec
ds
fisubrl
jae
dec
in
repnz
sbb
imulb
xor
mov
sar
or
or
arpl
mov
jge
push
mov
or
xchg
cli
int3
xor
push
pop
into
sbb
jmp
xchg
cmp
lds
scas
lods
or
and
lods
jg
or
xchg
movsb
fs
push
aaa
pusha
add
imull
enter
daa
movsb
cmpb
or
popa
jno
fninit
jl
sbb
dec
repnz
cmc
push
ds
sub
outsl
popf
mov
push
mov
adc
daa
pop
push
inc
sahf
jne
cmpsb
mov
add
push
pusha
js
aaa
push
pop
xchg
rcr
push
mov
mov
movsb
ljmp
lret
loop
jno
rcrb
out
push
add
pop
cmpsb
dec
sbb
mov
push
xor
jle
adc
xchg
jl
pop
shr
or
rcrl
xor
jecxz
fdivs
sub
stc
fldcw
or
test
or
dec
mov
mov
inc
push
jle
lahf
cmp
test
nop
and
popa
jmp
cmp
std
and
add
jl
shl
fisttpl
out
sahf
repnz
cld
cmc
jb
arpl
xor
outsl
add
das
loop
lods
xor
orl
mov
lods
movsl
push
inc
mov
mov
out
scas
mov
aaa
lea
jecxz
cmp
push
xor
cs
stos
gs
dec
pushf
loopne
jg
pop
mov
imul
jecxz
add
jno
data16
jo
sbb
std
or
xlat
test
cvtpi2ps
dec
mov
repnz
sti
mov
cs
cmpsb
aad
push
outsb
nop
sub
mov
enter
aas
push
cmp
idivl
fcomip
pushf
gs
xchg
es
add
pop
or
adc
imul
pop
jbe
arpl
or
fs
inc
icebp
lret
xor
jnp
pop
outsb
stos
je
pop
pop
jecxz
pop
aaa
int3
test
icebp
cwtl
dec
shrl
mov
pusha
mov
cmpl
int
and
add
xor
lock
std
dec
das
pushf
lret
jmp
mov
and
or
mul
decl
dec
shlb
jbe
movsb
scas
xchg
icebp
clc
es
xor
lret
test
in
mov
mov
or
xor
or
dec
sub
inc
aam
add
cmpsl
es
mov
out
xor
jmp
cs
mov
out
ljmp
stc
lods
lods
fidivs
repnz
mov
pop
cmp
xchg
test
and
add
cltd
mov
mov
or
ja
mov
and
or
cltd
jbe
xchg
add
adc
inc
rcrl
push
pop
scas
push
stc
out
repz
add
fmuls
push
loop
xor
xor
pop
xchg
xorl
ret
mov
in
dec
xor
pop
fisttpl
ja
aas
gs
pop
adc
inc
inc
inc
mov
sbb
fwait
sarb
push
loopne
jne
or
out
jae
inc
bound
or
pop
xchg
xchg
mov
sub
mov
mov
jp
gs
mov
inc
sarl
and
mov
in
ficompl
fcomip
pop
jl
mov
int3
xlat
xchg
fildll
mov
sub
sub
sbb
stos
stc
pop
and
cltd
insb
test
dec
jnp
pop
push
jle
cmp
mov
xchg
adc
cmp
enter
adc
roll
jae
shl
push
or
jae
sahf
jno
push
lret
mov
call
stc
push
in
imul
lock
in
fnstcw
sar
sbb
repnz
dec
hlt
inc
sbb
inc
inc
dec
daa
inc
jge
pop
mov
stos
push
fdivl
cmc
push
sub
jne
sbb
int3
sbb
js
fimuls
inc
jo
mov
sbb
mov
sarb
ret
movsb
out
imul
or
aas
enter
daa
mov
inc
imul
jg
dec
popa
lret
and
jns
ss
and
lea
lahf
sbb
push
jbe
test
repnz
iret
inc
sub
and
or
add
hlt
push
and
push
mov
jecxz
into
cmp
inc
jmp
test
stos
jge
lods
mov
scas
and
subb
sbb
mov
add
mov
sbb
fmul
fmul
push
or
sysret
mov
ljmp
xchg
lods
sub
mov
sub
gs
push
jg
arpl
push
xchg
sbb
and
sub
out
clc
add
fdivrs
jbe
lret
mov
mov
xlat
jmp
call
insl
div
cmp
dec
xor
sub
outsl
jecxz
xchg
loop
jmp
fsubl
fsts
mov
push
enter
mov
out
pop
pop
cli
push
lock
jmp
ror
pop
xor
pop
rol
adc
pop
and
adc
cmc
adc
mov
jno
aam
ja
pop
sbb
cmp
je
les
sub
lods
cmp
pop
xchg
leave
sti
adc
xchg
aad
sarl
nop
add
add
daa
or
fldcw
cmp
jmp
shl
imul
xchg
jmp
addr16
call
mov
rcrl
pushf
adc
dec
pushf
dec
fldt
jmp
pop
mov
sahf
test
mov
or
jb
iret
insl
stos
jb
popa
mov
aam
cmp
push
jecxz
jecxz
iret
subl
cwtl
pop
stc
scas
mov
dec
xchg
adc
jae
adc
rcr
push
xchg
inc
pop
fmulp
and
lock
decb
das
jnp
pop
mov
sbb
popf
repnz
out
insl
cmpsb
pop
sub
cmpsl
mov
mov
icebp
iret
pop
loope
stos
rcr
sbb
jle
adc
lock
sub
pop
rcr
push
movsl
sub
xor
ret
hlt
cs
es
data16
es
clc
es
hlt
dec
in
ljmp
push
mov
cmp
xchg
int3
ret
dec
push
fwait
pop
add
fbstp
mov
pushf
mov
test
add
push
cmp
dec
mov
sahf
test
adc
sbb
inc
hlt
shll
icebp
shrl
add
repz
xchg
cld
out
inc
or
xor
mov
lock
ja
dec
fwait
dec
dec
pop
outsb
inc
ficoml
cmp
addr16
mov
mov
icebp
jecxz
push
mov
cmp
es
mov
lahf
xchg
loope
inc
mov
and
add
or
lock
insb
data16
jl
mov
aam
sub
cmp
in
ljmp
fists
repnz
je
ss
stos
sti
loop
mov
ljmp
push
icebp
xchg
push
fs
stos
stos
jno
in
xchg
fsubrl
jnp
adc
arpl
js
jb
fmulp
fadd
ret
jmp
dec
mov
inc
icebp
insl
out
jae
pop
stc
push
lret
sti
add
xchg
xor
inc
ficoml
mov
loop
movsb
xchg
or
pop
gs
dec
mul
lds
ret
rcrb
test
sahf
sti
xor
jbe
cmp
hlt
mov
out
arpl
mov
movsb
jge
mov
lcall
fmuls
loopne
out
int3
or
pop
fisubrs
jae
xor
aad
es
push
scas
and
jno
jns
or
push
aad
movsl
jbe
movb
movsb
jecxz
lret
daa
mov
jp
jno
inc
pop
jl
mov
dec
sar
rorl
add
test
movsl
nop
xchg
dec
push
popa
test
mov
push
into
cmpsb
mov
sbb
dec
pop
adc
aam
cs
loopew
das
sub
dec
cmp
jns
jmp
int3
cli
aas
adc
mov
push
inc
lret
enter
add
xor
pop
icebp
fwait
lcall
push
hlt
inc
pop
or
ss
insl
fsubrl
test
sub
dec
and
dec
in
push
mov
test
mov
into
xlat
mov
inc
xchg
and
bound
repnz
cmp
jae
lods
testl
sub
mov
scas
jbe
pop
popa
pop
sahf
cmp
mov
add
stc
xor
leave
loop
pop
mov
fs
inc
adc
cwtl
lret
nop
jmp
mov
or
orl
mov
or
ret
adc
loopne
cld
cmp
inc
notl
pop
mov
jg
adc
adc
sbb
jae
pop
xlat
add
sub
movsb
in
enter
idivb
aad
mov
and
scas
bound
adc
mulb
repz
xchg
lods
shrb
mov
or
or
cmp
aam
push
pushf
stc
sbbb
aam
cs
loopne
dec
pop
inc
daa
dec
ja
outsb
dec
xchg
fs
dec
dec
or
data16
jmp
ror
xor
cwtl
ret
mov
shrl
stos
bound
fildl
pop
or
lock
das
pop
rclb
js
adc
sarl
imulb
insl
lea
enter
hlt
mov
cmpsb
mov
cld
hlt
lret
xchg
orl
test
mov
dec
inc
or
mov
pop
sub
cmpsl
clc
aam
into
and
cmpl
fisttpll
mov
popa
adc
ljmp
jge
sbbl
push
sub
pop
pop
inc
xchg
adc
push
jbe
adc
fsts
mov
cltd
sarl
test
outsb
dec
mov
notl
sub
and
dec
push
sbb
rorl
scas
mov
stos
fnstsw
popa
add
push
pop
dec
pushl
sbb
xchg
xor
mov
mov
repz
jp
daa
pop
push
js
ja
loop
dec
ds
scas
inc
jno
or
mov
fwait
cs
lods
jne
jl
mov
or
xor
sub
pop
jnp
or
xchg
xor
test
sub
cmpsl
sbb
add
jp
daa
pop
mov
fistl
mov
inc
jnp
dec
dec
in
mov
pusha
jns
mov
xchg
inc
inc
mov
pop
out
xchg
jne
jmp
inc
push
stos
out
bound
aaa
xor
mov
mov
inc
add
insb
jle
gs
mov
jle
fmul
push
inc
push
loop
dec
iret
add
xor
inc
push
pop
andl
imul
mov
xchg
push
leave
aas
dec
fcmovb
adc
jg
adc
imul
lds
lcall
leave
mov
icebp
hlt
in
arpl
jns
push
mov
cmp
and
lea
jae
je
pop
in
stc
add
js
repz
mov
jp
xor
xor
int
dec
adc
and
lcall
add
imull
jbe
pop
pop
in
orb
lds
in
cmp
push
jl
ret
addr16
aas
repz
push
out
jnp
inc
bound
inc
test
lahf
pop
mov
push
sbb
mov
jge
icebp
push
mov
fisubs
popa
pop
push
pop
push
hlt
imul
in
loope
xor
sub
cmp
fldenv
adc
arpl
pop
insl
insl
cltd
adcb
rolb
stc
xor
ficoms
sub
jmp
pop
mov
repz
mov
sub
cltd
outsb
jmp
push
test
lret
test
pop
mov
stc
int
add
mov
and
test
cmc
dec
cltd
cmp
cs
and
inc
sahf
mov
sarl
sbb
pop
sahf
fildl
imul
out
mov
loop
add
cmp
daa
je
pop
lahf
sti
incl
lods
pop
jle
mov
loop
addb
rorb
mov
or
in
into
mov
sarb
loopne
fnstenv
pop
shll
imul
sarb
xor
jge
negl
scas
mov
lods
sub
and
in
xor
sbb
jae
popf
xchg
sbb
aad
add
mov
push
mov
fstps
out
repz
xchg
outsl
mov
fsubrp
lret
call
into
pop
pop
nop
push
adc
ret
movsb
mov
cs
iret
mov
inc
lods
mov
or
fwait
dec
ret
je
int3
inc
jecxz
aaa
sahf
aad
mov
push
lea
jge
xorb
pop
std
addl
movsl
fidivl
cltd
push
cmp
das
cmp
jg
mov
insb
cmpsl
and
mov
ror
lret
mov
insl
je
int3
dec
ret
inc
cmpsl
mov
pop
jnp
jge
mov
add
xchg
lret
not
insb
mov
mov
and
lea
mov
imul
sub
shlb
mov
ret
adc
fnsave
clc
pushf
push
push
ljmp
cmpsb
lods
out
aam
mov
sbbb
pop
and
push
push
mov
add
out
test
jg,pn
popf
aas
pop
push
shrb
test
call
sbb
loopne
pusha
int
pop
scas
jle
stos
int3
ljmp
push
sub
sub
mov
aam
xlat
xor
popa
orb
xor
mov
testb
and
mov
cli
mov
xor
iret
inc
or
adc
pop
lcall
push
lods
shrb
adc
shr
adc
mov
addr16
sbb
in
xchg
das
xchg
jg
loopne
mov
adcb
mov
mov
jp
xchg
add
lods
inc
xchg
xor
xchg
pusha
adc
push
fists
sub
push
jmp
jg
sub
out
dec
mov
pop
lcall
loop
sub
and
je
insb
jmp
leave
aam
test
int3
inc
adc
pop
jnp
xchg
sub
cmp
mov
inc
sbb
cmp
or
mov
in
inc
dec
dec
mov
xchg
lcall
test
out
adc
mov
lea
sbb
and
std
xchg
add
and
arpl
or
cmp
fistpl
aaa
xor
push
add
dec
mov
pop
dec
ud2
fidivs
test
jo
push
jg
sub
mov
insb
cmpsl
pop
cmp
test
push
jae
mov
in
shlb
rcl
daa
mov
divl
imul
popa
push
lret
movsl
dec
sub
fcmovnbe
movsl
lahf
js
xchg
push
out
adc
test
push
inc
cmovae
mov
cmpsb
mov
ja
js
call
lods
push
out
loope
pop
jbe
and
pop
cmp
inc
mov
adc
sbb
imulb
int3
cwtl
pop
andb
sub
into
jae
test
dec
and
test
pop
or
clc
lcall
inc
faddl
xchg
outsb
dec
pop
sahf
test
scas
xorb
add
jnp
pop
mov
fstl
je
addb
and
jmp
clc
lock
mov
push
pop
pop
mov
jmp
sahf
jle
inc
cmc
mov
xlat
outsl
adcb
stc
hlt
icebp
xchg
fs
pop
pop
adc
imul
pop
mov
out
jg
cli
add
xor
outsl
mov
ret
or
push
sub
gs
jno
loopne
leave
xlat
pop
loopne
fstl
add
hlt
imul
jb
add
clc
popf
data16
sbb
jmp
in
xchg
sub
repnz
mov
sahf
and
sti
and
mov
scas
cs
xchg
into
jge
inc
add
inc
mov
inc
les
jle
fcomps
lea
pop
inc
movl
mov
cmpb
dec
cli
jmp
sbb
inc
push
mov
xlat
aas
lods
pavgb
pop
inc
dec
cmp
je
pop
xchg
jecxz
push
fadd
loopne
popa
pop
cwtl
cmp
sub
mov
pop
sbb
je
fneni(8087
push
and
dec
mov
cmp
cmp
das
sbb
fsubs
inc
dec
les
mov
xchg
div
push
in
pop
int3
in
dec
mov
mov
icebp
push
lret
sub
lret
gs
mov
adc
pop
mov
mov
lock
aam
call
inc
adcl
notb
dec
flds
hlt
pop
push
lods
pop
and
mov
mov
push
push
sub
mov
add
testl
insb
test
push
sbbl
test
push
xchg
rcrb
fildll
sbb
pop
adcl
mov
add
inc
mov
pushl
push
xor
ficoml
or
or
xor
js
mov
stc
fsubrs
pop
icebp
pushf
ja
xchg
je
and
incl
bound
fwait
mov
test
push
repz
jns
out
out
cli
mov
mov
pop
jne
xchg
into
test
jl
mov
push
or
lods
jp
sbb
pop
push
mov
and
and
sub
dec
pusha
scas
test
inc
xchg
in
dec
push
jmp
or
andl
out
lods
rcrl
and
and
and
idivb
jnp
lret
daa
jle
inc
jne
shrl
test
adc
fistps
hlt
je
adc
out
push
adc
fisttps
add
and
fisubrl
adc
sub
inc
and
ret
aad
js
test
xchg
cmc
shrb
mov
outsl
nop
clc
leave
je
xor
cmpsb
arpl
and
pop
daa
ret
jge
loope
sbb
loope
or
test
movsl
iret
fmul
leave
fisubs
ficomps
in
xor
out
ljmp
out
cmp
inc
mov
jbe
loop
in
dec
aas
ret
mov
out
cmp
dec
lcall
push
mov
sbb
mov
movsl
push
push
ret
and
int
xchg
cli
xchg
push
ret
test
push
mov
and
scas
jp
js
push
ja
rorl
push
cmp
loope
movsb
icebp
sub
jnp
cmp
imul
rcrb
fucomip
sub
testl
jne
add
push
sub
in
ss
fidivrl
pop
xchg
lcall
mov
das
push
sub
dec
incb
sarl
std
jg
adc
cmp
repnz
mov
and
insb
lcall
insb
sub
rcl
lret
sbb
ljmp
sbb
outsl
cmc
push
std
into
xor
mov
pop
stc
stos
dec
jle
push
in
adc
jns
test
in
sub
mov
jecxz
out
cmp
test
push
sub
in
xchg
lods
or
jbe
test
or
je
loopne
into
fistps
insb
and
xlat
das
cmp
add
jno
inc
add
push
loopne
and
imul
test
dec
mov
or
sti
rcl
fnstsw
aad
ror
jo
push
dec
mov
xor
or
dec
repz
adc
xchg
cmc
mov
mov
movl
pop
push
pushf
cli
jno
jmp
loopne
sub
js
js
xchg
aas
dec
clc
cmp
cltd
cmpsb
arpl
dec
sbb
jecxz
fwait
adc
fldt
std
movsl
sbb
cwtl
repz
inc
mov
xor
mov
push
xor
mov
jo
pop
push
mov
xchg
or
div
dec
mov
stc
sbb
imul
je
inc
sub
cmpsl
sahf
sub
mov
sub
adc
mov
in
inc
mov
cmpsl
scas
mov
sub
push
aam
jae
ret
xor
out
add
popa
ffree
push
push
clc
adc
push
das
popa
or
stc
lods
les
mov
cmp
call
pop
jnp
pop
popa
xchg
add
pop
and
cli
stos
mov
or
dec
daa
aad
test
ds
in
mov
rorl
js
pop
add
cwtl
in
out
loop
inc
add
pop
cmpl
adc
xor
scas
jle
xor
outsb
andb
fisttpll
pop
orb
and
outsb
inc
les
or
leave
cmp
mov
sbb
mov
into
clc
out
into
jmp
bound
icebp
out
in
cmpsl
add
sbb
mov
sub
cwtl
push
push
jp
xchg
sub
add
out
nop
mov
das
in
jnp
pusha
dec
cmp
fisttps
pop
fsubr
add
push
xchg
orb
les
dec
mov
pusha
jae
stos
cmp
pushf
jae
mov
xchg
leave
jle
imul
cli
daa
iret
push
mov
es
xor
jae
sub
or
jg
inc
inc
inc
in
fcmovu
mov
loope
push
shll
scas
fucomi
rol
and
rolb
sbb
stos
leave
jmp
fdiv
mov
arpl
mov
jge
or
sbb
xorb
and
xor
les
cmp
int3
mov
jns
cmpsl
inc
scas
fidivrs
fcmove
jo
mov
scas
out
ljmp
test
movsb
cmpsb
dec
rclb
shlb
adc
xor
add
cmp
mov
pop
dec
mov
push
nop
mov
mov
adc
lahf
mov
jecxz
xchg
pushf
sub
push
jmp
jo
cmpsb
lds
out
pop
popa
sub
mov
mov
push
inc
movsl
loope
adc
sub
mov
cmp
lret
xor
hlt
fisttpl
or
sbbl
inc
jg
sbbb
cmpsl
popa
repz
enter
dec
roll
xchg
xchg
lcall
repnz
xchg
xchg
sub
cmp
sub
in
mov
mov
adc
push
mov
xchg
pinsrw
sub
cmp
pop
rcrl
idivl
lret
pop
roll
clc
sbb
test
or
cmc
sbb
shlb
clc
inc
push
loop
sub
bound
fs
dec
add
enter
cmpxchg
mov
jg
cli
imul
sub
push
out
or
cmc
mov
push
fcmovne
loopne
out
pop
push
fnstenv
adc
push
sbb
mov
add
ret
pushw
negb
sbb
pop
insb
iret
xlat
decl
mov
je
sti
cmp
incb
sbb
aad
ss
dec
mov
sbb
flds
mov
repz
cmp
lea
call
add
sub
pushf
movsl
imul
lea
push
inc
xchg
inc
xchg
aas
ljmp
dec
daa
sti
je,pn
insl
jno
cmc
mov
fiadds
add
mov
mov
jge
dec
stos
fisubl
fstpt
push
das
pop
or
xchg
lock
sub
das
or
mov
mov
pop
and
int3
cmp
mov
aaa
out
insl
sub
dec
mov
add
popf
dec
inc
mov
add
xorb
lret
inc
stc
fisttpll
mov
fsub
sar
pop
pop
sub
out
aam
push
enter
mov
fucomp
stos
adc
dec
mov
das
cmpsb
in
xor
mov
lods
das
aas
sbb
jmp
and
xchg
cmpsl
add
insl
aas
cltd
scas
add
or
les
ffree
dec
mov
xchg
xchg
sbb
loop
add
mov
lods
stos
cltd
adc
pop
add
jp
mov
mov
cli
xor
data16
and
mov
mov
call
mov
cmp
pop
adc
push
dec
inc
int
rorl
adc
xchg
xor
jne
adc
and
add
bound
sub
jbe,pt
outsb
cs
xchg
insb
push
mov
add
sub
xchg
jecxz
addr16
xor
jp
sbb
mov
ret
mov
cmp
fidivrl
in
xchg
outsl
pusha
in
adc
lods
jo
xchg
xchg
es
jmp
mov
xor
out
enter
and
mov
lahf
fildll
or
insb
sub
into
jnp
sbb
push
popa
xchg
jbe
mov
inc
or
pop
pop
push
stos
inc
sub
jae
pop
mov
lcall
push
lds
ficoml
imul
xor
imul
scas
rclb
shlb
mov
adc
xor
arpl
les
pop
fistpll
sbb
or
daa
aaa
outsl
out
or
dec
aas
add
dec
xor
pop
mov
ficomps
nop
xor
pushf
and
and
sti
cltd
movsb
xor
push
jbe
cmp
in
sbb
push
enter
daa
popf
out
xchg
cmp
stos
jno
mov
jl
cmp
dec
sti
je
push
jae
dec
movsl
pusha
rcrb
lahf
aad
jbe
push
xchg
push
mov
cli
inc
xchg
lods
pop
std
sub
js
push
push
cld
nop
loope
cmpsl
pop
sub
push
cmp
sub
jnp
into
adc
iret
in
sti
vpshld
dec
in
dec
add
add
xor
sbb
rcrl
pop
test
gs
xchg
push
out
faddl
jge
outsb
ja
mov
test
sti
push
jg
jno
mov
stos
inc
mov
adcl
mov
pop
mov
sbb
cmc
idivl
sbb
cmpsb
rcrl
pop
mov
sahf
sbb
jns
sahf
addr16
mov
jecxz
les
push
mov
outsl
sbb
lahf
aaa
stc
sbb
data16
fcoms
xchg
fs
mov
add
jl
jns
pushf
in
xor
or
or
insl
dec
stc
in
andb
pop
cmp
cmp
ficoms
push
and
mov
inc
sbb
lcall
sub
enter
dec
in
fildll
or
and
mov
dec
popa
and
inc
test
les
shlb
lea
and
test
adc
xor
iret
lock
inc
jmp
dec
inc
scas
lock
mov
pop
jb
subl
je
cmc
push
jecxz
adc
adc
cmp
dec
mov
repnz
hlt
fcompl
push
inc
lock
movsb
push
das
mov
inc
mov
addr16
and
rclb
roll
aad
idivb
xchg
rorl
enter
rep
mov
fnstcw
cld
lods
stc
jecxz
mov
mov
fs
and
stc
imul
rcl
or
lret
test
ret
dec
mov
or
out
adc
movsl
clc
mov
scas
xchg
outsb
fnsave
cmpsb
jge
popa
cmp
lods
lcall
mov
jbe
mov
mov
shlb
jmp
jns
adc
mov
ljmp
cmc
ja
test
int3
mov
clc
imul
pop
pop
mov
stos
mov
out
test
testl
push
ljmp
pushf
push
sbb
push
xchg
mov
add
mov
std
fwait
ja
adc
inc
repz
xor
sbb
jne
outsb
pop
mov
mov
out
mov
mov
jns
cs
stc
or
mov
shlb
mov
and
mov
pop
mov
xlat
adc
xchg
xchg
dec
mov
adc
bound
popaw
inc
jmp
insb
mov
and
lret
popf
cli
sbb
ficomps
cli
and
push
pushf
insb
xchg
mov
jle
xchg
and
mov
gs
adc
xchg
ret
repz
xchg
clc
inc
inc
xor
jae
sub
or
jne
add
inc
xchg
movsb
fiaddl
xchg
xor
imul
mov
xchg
mov
outsl
push
repnz
pop
jecxz
dec
sbb
arpl
dec
jge
or
jno
xor
sbb
and
int3
mov
pop
add
in
dec
xor
mull
push
and
adc
movsb
mov
inc
cmp
adc
add
mov
daa
pushf
pop
add
mov
rcll
inc
insb
sbb
aas
mov
push
scas
mov
addr16
and
loope
hlt
pop
cmp
clc
hlt
test
jg
dec
inc
push
cmp
cmpsb
lret
int3
mov
js
fnstenv
pop
mov
add
imul
inc
pop
xor
pop
sub
ds
imul
sbb
fwait
shrb
outsb
jne
repnz
add
cmpb
add
mov
rcl
std
xor
sub
xchg
lcall
out
fdivl
cltd
mov
andb
test
xor
jg
and
mov
fdivr
mov
mov
add
jle
mov
lods
push
add
jb
adc
pop
idiv
xchg
lret
daa
shrl
rcrb
xor
sahf
or
cmc
stos
adcl
cld
jmp
sar
and
fs
mov
mov
fucomp
mov
jnp
ret
cli
iret
jle
xor
dec
in
cmpsb
test
into
imul
dec
push
push
pop
pop
mov
cwtl
imul
inc
xor
pop
mov
sbb
aad
dec
xlat
jge
bound
sbb
dec
fdivrp
ficomps
cmp
lret
dec
mov
add
pop
dec
rcr
inc
xlat
daa
inc
fldcw
rclb
repz
mov
rcrl
call
add
je
sahf
push
add
fmulp
adc
iret
pop
cs
dec
xor
push
loopne
leave
mov
aas
sub
push
jb
mov
int
repz
mov
in
sar
lcall
mov
inc
mov
xor
nop
push
fistpl
sahf
mov
xchg
das
xchg
inc
mov
mov
add
rcll
inc
idiv
jmp
imul
push
adc
icebp
mov
leave
cld
fcoms
and
jmp
push
pop
add
jmp
sub
fidivrs
ret
fnsave
mov
aaa
or
ret
cmp
ljmpw
push
cmpsl
add
repz
mov
stos
pushf
vmread
lahf
cltd
sbb
mov
aas
sbb
in
enter
lds
inc
adc
adc
push
out
or
add
pop
xorb
ret
lds
adc
pop
mov
add
imul
ja
sub
sbb
sti
rorb
dec
aad
push
faddl
jne
xor
fildl
out
imul
bound
mov
ret
push
in
aaa
outsb
xchg
or
clc
mov
lock
mov
gs
dec
push
mov
jg
mov
scas
sbb
sbb
in
repnz
pusha
sbb
jmp
pop
xchg
cmp
test
jmp
fisubrl
out
mov
popf
and
out
mov
sbb
std
mov
ss
jp
jle
xchg
mov
adc
ror
outsl
mov
push
pop
lret
inc
jb
ds
fnsave
fists
and
adc
lock
inc
ret
cs
andl
push
je
imul
scas
add
lds
cmp
mov
mov
and
hlt
cwtl
pop
icebp
arpl
cmp
in
sbb
cld
dec
or
push
push
int3
jne
jo
xor
adc
xor
push
ds
scas
adcl
cmp
les
push
push
jbe
pop
fsubr
ljmp
daa
fwait
inc
gs
xchg
mov
pushf
adc
jl
jo
dec
fxch
cmp
and
loop
mov
push
push
hlt
fsubrs
dec
outsb
lret
inc
movsl
add
cmpsb
dec
fsts
dec
outsl
jl
popa
inc
lds
int
sahf
push
loope
cmp
sub
test
xlat
shrl
rolb
lods
hlt
addb
push
add
int3
mov
lock
sbb
scas
fsubr
pop
addl
lcall
popa
push
fsubrl
outsl
xchg
cmp
not
cmpb
pushf
mov
cmp
into
dec
shll
jl
push
pop
and
cmp
nop
ja
idivl
adc
inc
aad
mov
or
sahf
lods
mov
xor
or
out
fisttpl
jle
es
xchg
or
mov
ss
hlt
out
in
mov
jae
out
pop
add
add
xor
call
or
int
gs
push
mov
xor
xor
dec
imul
push
negl
adc
xlat
mov
cmp
mov
mov
mov
lea
aad
out
and
dec
pop
sahf
xchg
inc
ljmp
les
mov
xchg
add
lea
aaa
inc
movl
cmp
pushf
cmpsb
dec
sub
lret
cs
movb
je
in
and
mov
cmp
out
je
add
and
std
inc
in
cwtl
fcomip
movsl
mov
push
rorl
or
imul
pop
mul
cld
mov
xchg
and
call
sub
jae
fsubl
aad
les
icebp
testb
insl
fimuls
dec
cmpsl
lcall
icebp
xchg
mov
add
jle
nop
adc
repnz
lods
mov
and
ja
mov
ret
rolb
ret
insb
and
fstpl
popa
clc
cmc
rcll
les
addr16
lods
jo
sarb
fs
add
insl
push
jae
ja
xlat
dec
jmp
pmulhw
cltd
push
in
test
xchg
sbb
push
push
and
test
stos
xchg
xchg
rolb
shrl
pop
pop
mov
in
data16
out
outsb
dec
xchg
add
lret
jnp
decl
aas
decb
mov
aaa
xor
mov
mov
or
mov
outsb
aas
ja
pop
dec
jecxz
push
xchg
mov
or
or
mov
push
jg
aas
jne
pop
mov
ss
out
out
dec
pop
addr16
fs
cld
adc
btcl
enter
xchg
sbb
test
in
addr16
push
sbb
notb
mov
push
mov
dec
xchg
loope
cmpl
xchg
aaa
push
pusha
mov
xor
or
xchg
or
mov
xchg
add
xorl
movsl
out
push
insl
popf
dec
mov
mov
pop
fsubl
or
add
dec
popf
dec
insb
imul
jnp
dec
and
jnp
xchg
push
ss
adc
mov
into
jg
ret
pop
pop
add
movsl
inc
dec
cmpsb
dec
jae
cmp
push
jecxz
lds
imul
inc
inc
dec
dec
fisubrl
andb
push
stos
imul
scas
sub
lds
and
repnz
aaa
mov
hlt
jecxz
xor
jg
inc
imul
mov
lods
dec
out
add
testb
mov
int3
pusha
movsl
loop
arpl
rcr
inc
pusha
xchg
xor
lods
call
inc
and
ss
xor
movsb
shrb
mov
in
sarl
mov
lcall
jno
ja
jl
dec
add
and
movsl
jne
cltd
and
std
lahf
xor
push
loope
std
test
adc
adc
rcrl
pop
jb
sarb
rcll
or
subl
cmp
sub
push
fdivrs
icebp
repz
ds
push
adc
pusha
xchg
jg
sbb
sbb
ret
jno
lods
cs
xor
xlat
mov
sbb
mulb
sub
loopne
pop
add
push
xchg
push
mov
sub
iret
outsb
mov
and
pop
mov
jg
xchg
dec
mov
shll
mov
lea
into
sarl
cmp
dec
sub
idivl
ror
pop
and
rcr
repz
aas
aaa
sbb
adc
cmc
cmp
xchg
xor
outsl
mov
cmp
stc
ds
sbb
xchg
adc
sarb
mov
mov
jns
sub
xor
out
cmp
mov
test
into
hlt
and
gs
pop
pop
loopne
adc
pop
lcall
imul
and
add
in
adc
cmp
test
sti
std
add
ret
add
mov
and
jae
mov
stos
aad
repz
jle
cwtl
inc
std
and
les
sbb
mov
jnp
les
lock
and
pop
add
repnz
add
mov
ret
out
xor
inc
pushl
aas
mov
cmp
jb
add
cli
je
xchg
jecxz
mov
adc
call
push
sub
mov
xchg
test
arpl
adc
js
pop
cltd
adc
pusha
lock
test
das
push
xchg
mov
mov
push
and
fldt
testb
dec
mov
add
pop
ja
cld
cs
out
lret
pushl
je
or
adc
mov
inc
mov
out
mov
adc
ret
sti
roll
es
and
imul
sub
cwtl
popa
jle
fldcw
add
jne
or
dec
inc
or
ss
jl
and
imul
lahf
fbstp
adc
sbb
test
jns
xchg
push
sbb
jl
rol
cwtl
scas
pop
pop
add
stos
push
mov
out
sar
out
add
out
dec
ljmp
lock
add
xor
and
mov
or
ret
push
mov
ds
ja
adc
dec
ds
or
push
fwait
cmpsb
push
jns
and
fidivl
jecxz
mov
movsl
inc
out
sub
out
jns
fsts
in
nop
adcb
lods
shrb
jg
or
jp
push
loop
mov
xchg
xlat
dec
data16
hlt
in
loopne
pusha
push
sub
sub
xlat
in
jp
int
test
mov
outsb
ret
push
jb
push
inc
jb
jl
xchg
and
insb
call
jnp
jmp
sub
jge
push
adc
inc
mov
pop
cmp
dec
inc
push
pop
mov
push
cmpsb
sub
push
shl
ficompl
lock
aaa
and
add
xor
ljmp
cli
sub
mov
popa
hlt
or
sub
dec
in
insb
aas
push
jge
cmp
or
imul
or
in
add
jmp
int3
dec
jl
pop
xchg
cmp
fsubrp
pop
xorl
inc
fucomi
and
nop
cmp
cmp
push
pushf
cmp
jbe
push
lock
mov
xchg
les
cltd
stos
fnstcw
cmp
cmp
dec
add
jl
hlt
sbb
push
jecxz,pt
jl
leave
and
xor
or
xchg
push
loopne
std
inc
ret
gs
push
dec
xlat
pop
cltd
inc
sub
fisttps
pop
dec
scas
popf
push
repnz
loope
pop
pop
sub
cmp
cmp
add
out
cmp
cmp
sbb
filds
in
xor
jge
jbe
popa
int
lcall
mov
push
in
xor
xor
sub
clc
outsb
add
test
scas
cwtl
xorb
jg
push
inc
mov
fwait
push
mov
mov
push
or
cltd
ja
push
jne
idivl
fcoml
dec
inc
fld
je
sti
mov
mov
sbb
ja
cmc
decl
add
cltd
push
test
mov
xchg
stc
cmc
out
pusha
sti
rclb
shrb
ss
and
cs
xor
cli
push
js
cmp
jo
or
repnz
into
xlat
jo
gs
mov
xchg
xor
leave
enter
dec
mov
movhps
pop
frstor
xchg
test
cmp
movsb
stos
sub
jns
mov
mov
push
sti
jmp
enter
jecxz
mov
jae
dec
xchg
inc
adc
fsts
les
shl
xorl
lea
sub
mov
xchg
pop
mov
aad
jecxz
and
mov
movl
jne
aas
add
cmpsb
cmovns
jle
aam
pavgw
outsb
in
fstl
std
and
cwtl
push
ds
mov
push
cmp
push
sub
sub
pop
mov
fsubrl
mov
push
das
xor
push
mov
mov
push
pusha
test
popf
insl
lods
sbb
cmpsl
cwtl
mov
mov
xor
pop
arpl
outsb
sub
mov
and
and
gs
sub
popa
cli
add
sbb
mov
ret
mov
xor
push
aam
pop
xchg
push
fucomi
jb
lea
pop
insb
lods
inc
orb
cwtl
mov
xchg
xchg
inc
leave
push
sub
test
xor
pop
mov
sbb
jmp
loop
loop
push
xchg
sbb
xchg
or
pop
pop
aam
stos
inc
add
out
xor
xchg
add
add
xchg
dec
fsubrs
js
adc
pop
adc
mov
push
and
pop
lcall
lcall
inc
rolb
or
mov
and
lds
out
in
jb
out
or
pop
jns
pop
mov
and
push
arpl
push
adc
clc
add
andb
mov
jmp
dec
dec
adc
in
xor
xchg
mov
leave
jmp
cwtl
and
data16
stc
and
mov
sub
and
sti
insb
inc
adc
inc
inc
mov
dec
xchg
push
les
nop
iret
mov
insl
ret
sbb
inc
pop
mov
mov
or
popa
repnz
inc
sbb
ficoml
mov
xchg
mov
xor
mov
and
scas
sub
xchg
mov
daa
pushf
sti
mov
mov
inc
leave
mov
jl
jns
cmp
push
sbb
jge
rorb
in
aaa
sub
or
dec
mov
insl
daa
push
pop
rcll
lea
cld
jo
jns
scas
and
inc
and
test
lahf
jecxz
movsb
call
adc
jmp
sub
daa
cwtl
and
cmp
out
and
xchg
dec
adc
loop
xchg
movsl
subl
mov
outsb
lahf
jo
repnz
xchg
test
stos
js
inc
push
cld
fisubl
rolb
pop
mov
loop
lods
xor
sub
cmp
cmp
sub
adc
push
insl
jb
les
stos
sbb
push
add
out
mov
cmp
sub
mov
stos
lcall
mov
sub
fldt
mov
test
orb
bound
xor
int3
and
dec
insb
push
adc
addr16
rcll
stc
push
jle
inc
sbb
rorl
jge
adc
fistpl
scas
xor
and
dec
mul
stc
lods
xchg
in
jmp
or
pop
aad
ss
jmp
lods
jns
mov
out
cli
fwait
jmp
xor
sub
loop
bound
push
into
mov
jns
loopne
push
jbe
fdivs
ljmp
aas
dec
adc
push
xchg
add
lret
mov
cmp
fwait
pop
xlat
jns
ja
test
mov
pop
sti
lcall
aad
sub
nop
insl
insl
push
dec
cmp
jge
and
mov
mov
out
fs
pushf
repz
lret
pop
xchg
dec
in
fmuls
push
lods
mov
pop
push
call
pushf
cmpsl
fwait
push
xchg
jns
fisttps
xchg
inc
mov
movsl
inc
xor
les
fidivs
xor
jecxz
fmuls
std
ss
cs
adc
xchg
mov
cltd
mov
adcl
movsl
dec
pop
fisttps
cwtl
push
lods
lock
das
das
adc
or
cli
xor
jmp
testb
xchg
mov
dec
xchg
das
shlb
push
cmp
or
pop
cld
test
fucom
push
mov
fidivrs
pop
loope
mov
cmpb
shl
jle
sub
outsb
lret
add
es
idiv
fst
jne
clc
scas
xchg
add
in
sub
lods
xor
mov
mov
es
add
fldcw
pmuludq
testl
stc
mov
inc
mov
mov
cmp
dec
clc
movsb
test
rclb
xchg
sub
ja
dec
shrl
jmp
mov
or
xchg
inc
mov
adc
outsb
add
stos
ljmp
pop
xor
in
pop
or
stos
bound
push
cmp
xchg
mov
mov
lahf
testl
mov
pop
inc
or
stos
and
push
and
mov
push
add
out
dec
bound
jle
in
cmp
xchg
inc
movsb
sbb
sti
cmp
sub
jne
cmp
negl
aas
mov
push
imul
dec
arpl
test
and
fbld
leave
xchg
test
fcoms
jno
out
stc
mov
mov
sbb
scas
and
hlt
jno
repnz
add
mov
adc
jno
iret
jmp
add
pop
cmpsl
into
mov
jae
into
mov
sub
or
jb
and
int3
ja
mov
xor
xchg
in
sub
xorl
push
test
rcll
insl
mov
pop
or
sub
pop
hlt
les
arpl
out
jge
daa
dec
sbb
xchg
aaa
jmp
push
add
ss
and
lock
xor
xor
mov
xor
and
xor
movsb
jae
cmpsb
push
cmp
test
in
xchg
daa
xchg
and
and
jl
leave
pop
dec
xchg
scas
dec
push
lds
push
and
std
lahf
pop
mov
test
jbe
adc
imul
mov
mov
push
and
in
out
in
lahf
push
ds
sub
adc
icebp
cmc
xor
push
mov
xchg
pop
outsb
add
dec
cmpsl
xor
inc
pop
cld
outsl
mov
sub
outsl
sub
and
push
mov
push
fwait
cli
jp
xchg
push
test
clc
cmp
jg
loop
mov
int3
lock
shll
sti
jo
push
adc
jae
jl
in
mov
cmpsb
add
mov
mov
sahf
cmp
xorb
or
outsl
push
mov
loop
movsb
arpl
andb
adc
sbb
popf
and
outsl
mov
inc
imul
into
or
cmp
scas
mov
rorl
into
popf
in
lods
pushf
enter
inc
pop
idivl
call
adc
out
add
test
sbb
cld
jle
xlat
mov
xchg
mov
popa
xchg
sar
dec
adcl
cs
inc
nop
dec
jnp
dec
fwait
movl
ret
les
and
xchg
or
cmp
call
jle
loop
sbb
pop
addr16
push
pop
pop
jmp
scas
cmpsb
cs
sahf
addb
cmpsb
inc
push
scas
and
inc
int
jb
icebp
das
dec
push
or
repz
mov
fucomp
imul
mov
mov
pop
nop
subl
push
pop
fildl
push
jg
pop
mov
lock
das
out
or
aas
mov
mov
pop
cli
testb
insl
jp
dec
dec
xchg
data16
xchg
mov
mov
jecxz
cs
scas
add
dec
push
scas
and
fwait
mov
pop
lahf
mov
rol
fs
lahf
add
ret
test
es
mov
clc
ljmp
ljmp
adc
rolb
mov
and
push
ffreep
cmc
rcpps
pop
mov
cltd
xor
test
sub
pop
subl
xchg
loop
rol
ret
pop
icebp
dec
stos
and
cltd
out
cli
rolb
add
mov
decl
push
scas
or
xor
jl
xchg
cmc
mov
pop
mov
ja
inc
push
dec
scas
dec
bound
loopne
or
mov
fwait
xor
in
push
or
je
mov
or
jns
inc
pushf
in
or
xchg
xchg
jne
mov
scas
sbb
jo
test
jp
lcall
pop
xorl
or
stos
in
xor
and
filds
push
out
mov
push
mov
insb
aas
in
fsubrl
in
sbb
pop
test
aad
popf
and
lods
jnp
dec
imul
lahf
push
push
sbb
iret
dec
mov
ret
mov
inc
jne
sub
mov
flds
movsl
inc
ds
fidivl
cmp
test
out
imul
cs
repz
rol
pop
ljmp
pop
fs
mov
sub
inc
jne
loopne
mov
sbb
sbb
or
cmp
add
fisubs
pop
pop
leave
mov
xor
sbb
scas
fisubs
and
push
mov
or
push
fcoms
xchg
inc
jbe
lods
and
insl
daa
dec
enter
daa
xchg
mov
hlt
jno
jb
jl
icebp
push
dec
add
call
movsl
xchg
pusha
adc
jmp
mov
sub
pop
push
push
inc
into
cmpsl
inc
jo
pop
cmpsb
fucom
mov
push
stos
mov
pop
or
movsb
push
int3
jb
into
pushf
ss
les
cmp
sub
adc
int3
xchg
xchg
popl
movsl
rcrb
int3
test
fdivr
shlb
fwait
adc
mov
inc
fwait
sub
mov
pop
mov
lcall
ret
fdivl
jge
sub
xchg
test
jnp
les
outsb
jg
scas
lock
xor
mov
xchg
sub
or
inc
push
push
je
cmp
aaa
pop
divl
or
in
sarl
mov
out
xor
dec
rcrl
push
sbb
xor
or
loop
xchg
add
adc
sar
lods
inc
sysret
mov
test
out
pop
jne
add
mov
cmp
or
or
adc
orb
mov
mov
pop
push
lret
inc
rcrl
mov
rolb
pushw
mov
sbb
aaa
imul
xlat
imull
repnz
int3
cmp
sti
clc
lret
sbb
aad
lock
cli
fwait
roll
mov
les
sbb
xchg
shlb
jo
mov
mov
adc
ljmp
mov
push
pushf
std
testb
jne
sub
movsl
and
inc
pushf
jmp
push
aas
loop
lock
adc
xchg
pushl
jbe
insl
add
divb
or
xchg
mov
pop
in
mov
xchg
and
mov
mov
mov
mov
lock
push
addr16
into
inc
lcall
sbb
and
sub
xor
movsl
notb
xchg
mov
mov
out
xchg
hlt
sub
mov
xchg
mov
mov
xor
and
ss
dec
rclb
es
sbb
ret
aaa
mov
frstor
test
xchg
daa
shlb
lret
inc
sub
push
add
dec
add
movsl
leave
push
mov
rcl
add
dec
cltd
addr16
test
cmp
and
call
test
ja
xchg
push
adc
outsb
fcomps
lock
adc
es
push
xor
ljmp
mov
in
xor
shl
mov
pop
outsl
inc
mov
adc
pop
rorl
data16
test
rcrl
pop
cmpsl
jne
not
mov
push
mov
movsl
inc
mov
jns
mov
in
xor
mov
xchg
mov
imul
addr16
loope
jp
out
adc
mov
ja
dec
dec
repnz
xchg
in
insb
and
mov
mov
jmp
stc
fs
cmp
arpl
pop
push
push
popf
or
mov
push
xchg
stc
int3
stos
dec
or
rol
insb
cmpb
jnp
clc
add
sahf
mov
adc
xchg
pop
adc
rcrl
push
mov
xchg
or
sarb
aad
sub
xchg
xchg
push
pop
sbb
adc
in
scas
push
and
sarb
mov
lods
icebp
ds
sbb
hlt
pop
sub
cmc
sbb
inc
js
mov
sbb
or
aaa
addr16
popf
or
int
int3
negl
cli
pop
dec
sub
xor
je
push
scas
mov
cltd
dec
cmp
mov
out
fdivrs
cmp
mov
cmc
in
push
jl
enter
daa
xchg
cmpsl
mov
or
lret
in
cld
dec
jae
cs
mov
movsl
cwtl
jb
and
mov
add
add
push
or
xchg
push
iret
cmpsb
pusha
test
pop
xor
add
inc
jmp
push
sub
in
and
cmp
ds
and
shlb
jge
xorb
sbb
dec
jg
jecxz
repnz
jne
andb
stc
xor
sub
mov
push
dec
push
and
fnsave
subb
add
flds
fistps
stc
jg
jge
mov
int
mov
cmpsb
int
sbb
cmp
repnz
mov
lret
xchg
rolb
dec
mov
add
sbb
sbb
sbb
xor
pop
dec
outsl
adc
pushf
xchg
shl
push
mov
adc
insb
ss
mov
mov
mov
es
xor
jmp
cmp
cmp
cmp
arpl
nop
gs
dec
dec
pop
xor
xchg
int
scas
testb
inc
adc
mov
mov
cmp
sbb
ss
sub
arpl
dec
stos
add
aaa
scas
dec
sti
cmpsl
jg
cmp
fstl
pop
je
inc
pop
sub
fnstenv
cmp
les
pop
cmc
xchg
xchg
addb
sub
call
jl
les
hlt
and
pushf
test
and
fs
icebp
or
mov
xchg
nop
aas
sub
sbb
or
je
or
jl
aam
stc
in
std
sub
cwtl
inc
mov
mov
repnz
dec
in
mov
mov
enter
in
sbb
and
das
lods
jnp
mov
pop
add
and
into
mov
not
and
dec
fdiv
dec
xchg
fistpll
xchg
in
cld
add
mov
mov
and
rol
cmp
frstor
inc
shrb
xor
lock
icebp
ljmp
and
sbb
dec
loope
clc
pusha
imul
jns,pt
popa
icebp
xchg
dec
lods
repnz
hlt
mov
scas
aaa
gs
xchg
and
movups
sbb
orl
test
xchg
mov
add
in
inc
dec
sub
sub
xchg
aam
je
leave
pop
mov
mov
add
mov
ror
add
insl
enter
pop
shlb
insl
cmp
push
pop
or
bswap
mov
sbb
push
mov
shl
push
ja
dec
les
xor
dec
shrb
push
or
jne
je
mov
jo
out
test
bound
xchg
jns
leave
in
lods
mov
mov
repnz
sub
negw
dec
movsl
mov
mov
jle
out
aas
dec
aad
dec
in
or
ffreep
orl
stos
add
xchg
int3
jbe
mov
mov
mov
icebp
sbb
xlat
aad
insb
in
cltd
fdivrs
gs
jle
dec
ss
loopne
adc
iret
or
ret
mov
inc
mov
xorb
adcb
push
orb
aam
inc
cmp
rcr
xchg
ljmp
imul
jnp
mov
loop
rclb
shl
add
iret
hlt
movsl
jnp
arpl
out
jnp
arpl
mov
sbb
push
test
mov
incl
and
inc
int3
loop
sti
pop
jge
mov
xor
iret
mov
scas
pushf
push
push
xlat
cmp
insl
movsb
adc
adcl
xorb
jge
cmp
lds
xchg
xor
cmp
sub
jno
enter
mov
adc
outsb
xchg
cmp
pop
testl
roll
lock
xlat
jae
inc
mov
andl
jp
pop
xchg
loope
and
fwait
in
or
xchg
ds
lods
adc
orb
popl
scas
orb
adc
pop
mov
cmp
inc
mov
sub
aaa
pop
cld
pusha
aaa
lcall
add
mov
push
bnd
push
cmp
jg
push
jnp
jne
add
pop
or
rolb
mov
cmp
lods
mov
cmc
fs
lret
test
bound
mov
jns
sahf
and
pusha
xor
pop
and
xchg
in
stc
mov
fs
push
adc
imul
adc
xor
cli
addr16
mov
cmp
inc
dec
or
adc
into
inc
cmp
rcrl
and
out
inc
adc
mov
imul
or
data16
xchg
lods
mov
aad
jne
push
mov
mov
cmpsb
ss
pop
mov
adc
dec
mov
clc
adc
les
ret
push
inc
pop
lea
xlat
call
sti
push
sbbb
fistl
xchg
xor
pushf
push
mov
out
imul
inc
mov
call
sub
jo
int
fdivs
pop
jecxz
inc
stos
cld
mov
cld
mov
mov
sub
mov
xchg
dec
dec
fadds
dec
pop
imul
mov
in
lock
addr16
mov
xor
pop
enter
mov
notb
aam
insl
das
pop
jle
addb
mov
push
xor
mov
mov
insb
insb
sub
cld
jnp
sarb
push
aam
adc
ret
push
mov
or
mov
fwait
das
inc
xchg
movsl
add
ljmp
push
lods
pop
jne
mov
inc
sbb
mov
repnz
jo
mov
xchg
insb
pop
cltd
aad
cmp
jae
jmp
push
cmpsl
dec
testl
outsb
int
cmp
sbb
out
lret
xor
pop
pop
push
cmp
and
mov
add
pop
xor
push
xlat
or
xor
mov
pop
xchg
pop
pop
mov
ja
sbb
mov
sub
sbb
fwait
shrb
push
hlt
stos
fwait
jne
push
clc
mov
mov
or
std
aaa
jns
jns
in
jnp
xchg
addb
sub
popa
dec
test
mov
jp
cmp
mov
push
jns
push
sub
mov
or
repz
jecxz
adcl
pop
cmp
inc
out
jg
popf
pop
dec
mov
adc
add
out
pop
test
arpl
xchg
sub
in
lea
fwait
cld
adc
dec
iret
addr16
adc
clc
xchg
xchg
pop
sbbl
jae
dec
insb
push
cmp
or
enter
mov
pop
lock
inc
repz
imul
scas
scas
sbb
fcmovb
in
outsl
inc
shrb
sub
push
test
leave
or
cmc
arpl
lcall
cmpsb
test
push
or
push
push
int3
int
sti
pop
lods
cmp
xor
sub
jecxz
jnp
cs
jl
xor
pop
movsb
lahf
inc
pop
push
jbe
add
sbb
in
and
jle
jg
and
xchg
cmp
mov
push
sub
jl
popa
dec
dec
push
sarl
push
sbb
movsl
cmpsb
ret
mov
or
cmpsb
and
test
mov
jmp
pop
pop
sbbl
js
mov
lds
inc
loope
and
cmp
ljmp
pop
loope
lahf
cmp
sbbb
xchg
add
or
xor
or
mov
xor
jnp
sub
push
divl
fdivl
sbb
outsb
push
sub
test
cmp
adcb
xchg
mov
popf
fisttps
mov
movsl
adc
pop
dec
mov
fsubrs
shl
mov
fcmove
add
imul
loope
mov
adc
sahf
cmc
test
subl
daa
arpl
stc
aas
push
loopne
mov
jmp
mov
mov
push
xor
jb
or
lcall
cmp
sbb
or
cmp
gs
rcrb
adc
movsb
je
cmc
test
add
push
cmpsw
repnz
call
pop
push
mov
or
cmp
sbb
sub
pop
xor
fstps
sbb
or
shrl
jp
mov
jmp
mov
pop
jmp
notl
cs
outsl
sbb
jl
inc
mov
pop
adc
testb
jecxz
je
push
cmp
lcall
std
jns
js
mov
shlb
inc
cltd
addl
pop
pop
push
add
mov
das
imul
mov
lea
rcrl
sti
aas
insl
push
push
mov
cmpsl
xchg
aad
mov
aas
cmpsl
mov
pop
inc
xlat
lret
or
xchg
mov
xor
pop
es
rorb
add
sub
mov
ret
in
mov
sub
fstl
xchg
xchg
in
test
and
lret
lea
mov
push
mov
push
dec
aad
bswap
jmp
cwtl
cltd
or
add
test
and
dec
sti
adc
fiadds
imul
in
and
pop
or
stos
fdivrp
lcall
repz
mov
mov
xor
inc
or
and
test
mov
and
mov
inc
gs
ja
imul
dec
dec
add
dec
mov
out
sub
jne
sahf
fwait
mov
out
out
inc
cli
clc
bound
fstpt
rclb
xchg
shll
mov
pop
subb
cmp
jp
jg
mov
pop
into
mov
les
dec
fwait
mov
mov
filds
mov
xchg
movsb
fsts
cwtl
push
ljmp
sbb
sahf
popf
xorb
push
outsb
cmp
mov
pop
sub
ret
enter
sahf
jle
sbb
adc
mov
iret
and
ret
xchg
pop
mov
fidivrs
ret
pop
out
sti
movsb
or
inc
mov
xor
inc
sbb
jmp
push
movq
sbb
scas
jg
faddp
je
fwait
ror
addr16
cmpsb
rol
leave
jg
aas
hlt
cmp
arpl
inc
pop
inc
cmpl
sbb
arpl
push
jno
int3
mov
jmp
pop
xor
test
push
scas
pop
pop
pusha
and
outsl
cmp
push
cmp
lds
or
or
movsl
pushf
daa
xchg
into
je
mov
scas
cmpl
addr16
xor
adc
push
push
lahf
sub
cmpsb
push
jns
movsl
test
insl
imul
stos
scas
aam
je
add
add
push
push
jb
loope
inc
add
shr
imul
xor
cmp
sbb
fwait
xorb
jne
add
jecxz
xlat
in
lret
ss
cs
loop
add
inc
pop
cli
pop
mov
dec
popa
paddusb
dec
add
sbb
outsb
mov
test
xor
xorb
hlt
xorl
bound
and
cmp
and
lcall
test
mov
je
sahf
push
cmpsl
ret
rorl
mov
jnp
mov
sti
and
sub
in
mov
lods
jecxz
pop
mov
or
jno
sbb
int
ret
xor
gs
cmp
leave
mov
cld
push
jge
or
pop
gs
daa
mov
pop
es
push
test
adc
mov
test
lock
cmp
fwait
xchg
xlat
repz
mov
mov
js
in
mov
fdivr
movsb
out
aad
sub
dec
dec
jbe
iret
inc
xchg
xor
insb
hlt
les
push
and
sub
xchg
call
stc
aam
pop
pushf
adc
pushf
test
mov
cs
imul
jb
xlat
sahf
mov
pop
xor
jb
cmp
dec
mov
js
jecxz
mov
movb
sar
and
in
mov
or
pop
sbbl
int
int
mov
xchg
xor
scas
das
dec
repz
inc
nop
xor
shrl
negb
push
dec
js
lea
cmp
xchg
cld
xchg
push
mov
movsl
push
mov
cmp
xlat
shl
in
jg
jb
aam
pop
fadd
jae
jb
stos
dec
xchg
fnstsw
je
xchg
and
ljmp
jg
xor
mov
rorl
es
or
cs
cmpsl
add
push
fiadds
sub
push
sub
movsl
or
cmp
mov
sarl
les
gs
int
dec
out
jmp
lock
add
adc
xor
ret
mov
mov
xor
ljmp
ja
ds
adc
test
fwait
push
in
imul
push
dec
xor
out
and
bound
scas
jns
into
xchg
repnz
xchg
and
test
or
popf
addr16
cltd
jecxz
out
push
mov
stc
cmpb
mov
in
cmp
fbld
rcrb
jmp
and
aas
xor
imul
cmpsl
jbe
mov
xchg
repnz
stos
adc
mov
sbb
aad
cs
jnp
inc
nop
jle
or
mov
fcoms
std
sub
iret
and
add
pop
icebp
pop
jo
lods
fucomip
jae
and
cmp
mov
cmpsl
jae
cmc
into
or
jmp
imul
or
sti
mov
shl
ret
mov
stc
cs
leave
notb
hlt
xchg
arpl
sub
jge
inc
fwait
sbb
mov
cmpsb
or
out
pop
int3
mov
pop
aaa
fiadds
xchg
adc
loopne
sbb
or
fistpll
mov
xchg
jbe
dec
and
lock
enter
daa
xchg
jecxz
cmp
test
jno
push
and
mov
jp
push
pop
push
dec
movsl
mov
fbld
lock
ret
dec
idivb
in
sahf
cmc
push
cmp
inc
cmp
xor
sub
pop
inc
push
and
inc
test
sub
xchg
imul
pop
sbbl
daa
lret
xchg
rclb
iret
out
pop
add
sbb
fildll
add
gs
xor
mov
mov
jge
sbb
jns
inc
lcall
sbb
mov
sub
test
outsb
sbb
lcall
or
jg
in
mov
ds
mov
mov
cmp
and
cwtl
push
and
data16
fcomp
mov
lret
scas
shrl
sbb
xchg
jno
or
cmc
aaa
test
xor
and
loop
cli
or
lods
dec
test
mov
xor
ss
pop
add
aam
sbb
jo
cmp
jl
xor
push
fnstcw
dec
adc
into
out
pop
movsb
gs
mov
and
ret
popa
lahf
sub
loop
adc
dec
lret
mov
lods
popa
rcrb
testb
xor
sub
mov
mov
jecxz
cltd
sti
arpl
js
fdivs
sub
std
imul
fcomp
or
pop
mov
stc
test
lahf
dec
sbb
jnp
daa
js
xor
jmp
adc
pop
xchg
and
lea
xchg
adc
inc
aas
daa
cmp
cmp
data16
mov
dec
xor
je
icebp
jno
mov
cs
std
mov
cwtl
sub
inc
insb
mov
pop
dec
cltd
mov
pop
push
xchg
jg
or
das
sub
test
sti
lods
mov
mov
movsl
leave
insl
in
push
dec
jae
and
insl
sbb
push
cld
mov
jmp
mov
mov
push
mov
pop
xchg
adc
mov
shrb
adcb
add
jbe
cs
ja
in
mov
dec
hlt
jp
bound
popa
dec
adc
sahf
sub
out
and
mov
lret
push
add
add
lea
pop
cltd
jp
inc
test
mov
dec
leave
sbb
xchg
stos
addr16
loop
pop
pop
sub
mov
xor
add
loopne
inc
jne
xor
inc
inc
or
cmp
mov
es
rcrb
ss
ja
xchg
lcall
fisubs
fwait
dec
jb
push
fisttpll
jne
pop
xor
out
add
in
mov
in
fildll
icebp
divb
mov
das
addr16
outsl
jp
sub
inc
mov
add
popa
xchg
add
fldenv
pusha
les
sub
inc
hlt
mov
jmp
lock
add
into
out
movsl
jmp
mov
sar
dec
stos
xchg
insb
cltd
arpl
jnp
lock
xchg
push
cld
mov
stos
iret
test
jecxz
xor
int3
pop
sub
nop
jae
ja
push
orl
arpl
neg
inc
cmp
fisubrl
inc
aas
sbb
xchg
inc
icebp
mov
xorb
pushl
repnz
shl
insl
sub
hlt
rorl
inc
xchg
jge
in
sbb
sarl
add
mov
mov
pop
cmp
lcall
fsubr
scas
sbb
jp
pushf
adc
cmp
lea
jbe
jbe
cltd
push
in
xlat
orb
jo
mov
nop
jl
cmp
bound
jl
inc
xchg
dec
sahf
je
push
cli
push
inc
and
movsl
xchg
push
pop
jb,pn
in
fists
sub
lret
cmpsb
out
dec
out
clc
mov
pop
adcb
push
jge
loope
jmp
sub
cmp
cmp
push
lcall
pop
or
out
jecxz
mov
mov
sbb
fbstp
jne
repz
push
mov
int
inc
int
clc
into
push
lcall
outsb
fdivl
mov
mov
xchg
outsb
jle
mov
data16
jg
enter
fcompl
mov
repnz
fs
test
sub
ja
in
fcmovu
cltd
pop
js
icebp
mov
lret
insl
rol
mov
push
sbb
add
cmc
inc
fidivs
repnz
add
loop
adc
stc
fs
inc
adc
insl
push
lods
mov
mov
out
aas
sub
xor
lahf
and
into
sar
xchg
fldl
pop
pop
shlb
adc
sbb
negl
add
xchg
mulb
inc
sbbl
jno
jnp
inc
pop
aaa
mov
dec
imul
adc
mov
pop
movsb
out
nop
inc
or
dec
xor
je
mov
pop
mov
mov
stc
sub
negb
mull
pop
add
pop
pushf
call
ret
dec
clc
inc
xchg
roll
icebp
sarb
pushf
jns
jb
pop
dec
test
mov
sbb
or
std
cwtl
call
decl
orl
lret
negb
mov
hlt
jnp
call
aam
mov
mov
cmp
mulb
rorl
in
and
insl
lret
lcall
pop
mov
icebp
xlat
pop
cld
fsubl
lret
push
pop
jae
jmp
frstor
fmul
pop
pop
js
mov
mov
sub
aas
aam
hlt
xor
xchg
push
scas
es
or
or
call
xchg
mov
adc
lods
or
mov
xchg
adc
sub
fdiv
cwtl
paddsb
dec
cltd
mov
mov
mov
icebp
xchg
push
mov
cltd
dec
xor
test
dec
bound
movhps
retw
pop
or
stos
stos
dec
out
out
scas
insb
bound
hlt
fsubs
imul
or
sub
lea
cmp
pop
ja
adc
jb
dec
push
mov
inc
or
leave
cmc
fwait
jl
dec
push
cmpb
mov
das
movsl
out
sub
xchg
stos
jns
mov
in
stos
xchg
mov
mov
and
ja
addr16
lea
jp
lea
mov
adc
repnz
inc
imul
pop
repz
fistps
mov
jge
jb
mov
dec
fsub
jno
or
mov
adc
add
dec
cmp
insb
add
bnd
push
mov
cld
clc
dec
push
inc
rolb
jecxz
pop
ret
bound
test
inc
ret
jae
or
push
or
mov
das
inc
mov
ficompl
mov
push
cmp
xchg
scas
test
pop
or
pop
mov
lahf
test
leave
in
xchg
hlt
sbb
scas
arpl
repz
mov
inc
sbb
xorb
int
or
je
adc
insl
mov
fimuls
out
xor
xchg
bound
idivl
inc
and
xchg
idivl
push
scas
jecxz
lret
sbb
push
mov
sbb
push
daa
in
mov
adc
cmp
mov
adc
jl
cmp
dec
or
mov
ret
and
lods
jae
xchg
test
into
dec
sub
cmpsb
jb
pusha
pop
pop
int
js
mov
push
adc
outsl
jbe
sub
mov
cmp
inc
ds
adc
leave
or
sbb
in
sub
sub
dec
add
and
or
test
jae
fildl
ja
jno
call
mov
filds
outsb
loope
xchg
cmp
jl
adc
xor
iret
std
bound
jae
addb
mov
push
sbb
divl
inc
rol
pop
dec
in
mov
sbb
imul
imul
outsl
dec
shrb
in
sbb
sub
xor
out
and
mov
pop
lods
cwtl
in
mov
mov
psubd
lea
xchg
bound
pop
and
gs
and
sub
repnz
out
push
hlt
adc
pop
mov
adc
and
popf
fcoml
data16
adc
aam
pop
xlat
mov
shrb
fstps
mov
mov
xor
decb
cmc
rcll
xchg
fcmovu
inc
into
adc
fnstcw
sub
repz
mov
xchg
and
pop
sub
jno
mov
jbe
mov
adc
test
jle
cs
adcl
aas
cmp
mov
inc
in
je
fstl
or
jb
mov
cmp
fldl
outsl
insb
or
call
pop
lcall
lock
insl
dec
das
out
dec
mov
imul
push
rcrl
or
insl
mov
mov
out
add
sarl
and
pop
lret
sti
scas
mov
repz
outsb
mov
xchg
popa
scas
rcrb
cwtl
sub
cli
aam
mov
or
xor
jbe
xor
clc
ret
xchg
loopne
jg
lock
popa
jnp
jb
je
lock
negb
xchg
pop
cmovnp
rcrb
stos
lret
popa
mov
mov
stos
dec
xchg
stos
jmp
mov
dec
xchg
aaa
fst
jle
lods
pop
mov
mov
out
adc
add
in
incl
inc
scas
xor
push
adc
xor
xchg
ds
xor
ja
sar
dec
inc
mov
or
inc
test
push
and
jne
mov
sbb
mov
jnp
jns
pushf
icebp
in
jo
xchg
or
mov
add
dec
mov
addr16
dec
das
jp
movsb
out
icebp
mov
mov
sbb
dec
daa
cmp
in
jmp
pusha
cli
ror
jle
dec
xchg
lock
add
je
cmp
cmp
hlt
pop
sbb
icebp
and
xchg
aad
insl
mov
cmp
lahf
jnp
or
jle
pop
inc
push
mov
adc
aam
ret
fistps
inc
mov
int
inc
jae
out
push
pop
sbb
or
das
jg
inc
ss
fs
hlt
jl
sbb
dec
pop
imul
scas
or
lds
inc
repnz
bnd
leave
pop
lds
hlt
addr16
stos
arpl
loope
lea
jge
pop
sbb
out
aaa
mov
adc
add
or
fsubrp
and
xor
icebp
cld
outsl
scas
mov
cmp
shr
push
bound
add
fnstenv
xchg
in
movsl
mov
test
mov
mov
jno
sub
popf
add
jl
mov
movsl
leave
loopne
and
inc
adc
lds
jg
rorb
xor
inc
inc
call
mov
pop
inc
hlt
push
js
jl
pop
add
subl
lods
loope
and
add
and
lea
cld
repz
movsb
dec
movsl
jp
faddl
test
xchg
pop
sub
adc
add
xlat
std
mov
sub
and
pop
test
lcall
popf
fmull
in
in
inc
outsl
enter
xor
push
fwait
add
fnstcw
dec
mov
pop
pop
and
mov
sbb
bsr
jae
lret
xadd
jnp
mov
jbe
sbb
cwtl
xchg
mov
xor
adc
loop
jecxz
stc
rorb
or
hlt
adc
xchg
cmp
mov
test
out
mov
nop
xor
sub
lds
into
cwtl
fwait
cs
jmp
adc
adc
mov
imul
pop
add
add
outsb
cmpsl
sbb
jo
mov
daa
push
mov
in
and
out
jo
sub
aad
stos
lds
repnz
mov
sbb
fnstenv
sbb
xchg
call
add
push
inc
pop
push
mov
jns
in
dec
into
cs
xchg
ds
inc
xchg
outsl
aas
fcmove
std
jb
dec
mov
je
push
adc
in
xor
push
out
std
mov
popf
cli
mov
add
mov
jno
pop
dec
push
fldt
jae
pop
cmp
aam
lock
adc
das
jns
mov
and
and
test
shrl
mov
insl
cltd
mov
lods
cmpsl
lea
icebp
jb
sbb
xor
mov
mov
dec
mov
mov
repnz
popf
xchg
sub
ss
ficoms
es
repnz
inc
clc
std
in
ja
pop
cli
es
dec
lods
fists
mov
sbb
xchg
lahf
daa
adc
outsl
dec
rsm
or
add
pop
and
pop
cmpsl
or
gs
cmp
sub
test
xor
xchg
or
rcl
fdivs
pusha
jae
stos
mov
out
jne
jo
push
lret
sub
aaa
xor
or
or
in
dec
mov
das
xchg
mov
in
inc
std
ja
mov
dec
cmp
inc
cmp
cltd
rcrb
jle
jne
fdivr
mov
insl
cmp
popf
jg
bound
lods
jns
sub
push
aaa
pop
xchg
pop
lds
cltd
sub
sub
inc
cmpl
in
xchg
inc
jp
outsl
jno
enter
fstl
mov
scas
sub
sti
enter
cs
xchg
movsb
pop
fistps
xor
xchg
push
rorl
xorl
out
loopne
popf
inc
stos
mov
sub
stos
loopne
adc
js
inc
insb
fisubrl
enter
inc
mov
push
shrl
xchg
imul
cmp
push
je
int
icebp
inc
fsubrs
scas
jae
add
push
lret
or
stos
and
fcmovb
popf
call
sbb
out
push
imul
scas
outsb
jbe
lds
cmc
lods
rclb
mov
inc
lods
mov
hlt
mov
fldenv
jp
inc
nop
pop
jb
nop
and
imul
push
push
or
movsl
add
popf
int3
dec
daa
jge
int3
nop
fimuls
dec
ret
stos
subb
cs
cmp
movsb
loope
push
push
std
jb
lret
in
mov
lret
enter
daa
lea
cmp
fdivrs
ret
sti
push
push
mov
adc
and
lahf
lds
push
cwtl
or
js
lea
inc
ja
lahf
cmpsb
js
fs
insl
call
pop
aas
and
xor
popf
clc
xor
imulb
adc
jg
xchg
fxch
mov
mov
add
lcall
sub
lock
jne
inc
lcall
pop
fdivl
mov
test
repz
or
push
imul
adc
push
xor
jb
fisubrl
fmul
cmc
mov
lret
push
rorl
inc
sbb
lret
push
sahf
xchg
xchg
add
inc
loop
cwtl
and
mov
out
in
inc
adc
lods
data16
mov
inc
jbe
insb
lds
cli
int3
fsubrs
xor
xor
or
add
into
jnp
aaa
gs
loopne
jge
pop
sub
ljmp
mov
mov
mov
scas
insb
sbb
dec
sub
cmpsl
sub
fwait
or
xor
sti
pop
les
push
jg
aad
ret
xor
push
ja
hlt
pop
fld1
in
fstl
xlat
repz
pop
xor
call
je
pop
sbb
jmp
pushf
add
test
and
arpl
sub
pop
aas
jns
nop
jb
xchg
xchg
dec
push
enter
sbb
jecxz
lock
adc
imul
push
scas
adc
dec
inc
cli
xchg
fistpl
mov
mov
pop
mov
das
movsl
rolb
mov
daa
lret
mov
idivl
imul
push
insl
andb
dec
pop
pop
shlb
cs
icebp
dec
dec
lods
cld
pop
cld
lock
mov
in
and
test
aas
jo
add
fs
push
sbb
ds
cmp
fldl
mov
aas
ljmp
std
lods
dec
popa
add
stos
std
xor
out
das
push
insl
lret
or
jno
push
jecxz
test
pop
xorl
gs
cmc
test
test
xchg
enter
xor
stos
js
icebp
out
fcom
cs
inc
cmp
incl
aaa
xor
or
in
mov
xchg
mov
xor
pop
test
ja,pn
sbb
xchg
inc
aam
rorl
sbb
imul
cmc
mov
sub
gs
mov
test
ds
mov
and
sub
ds
addr16
pop
gs
out
outsb
mov
xor
mov
pop
dec
fisttpl
mov
in
add
pusha
xor
or
bound
addl
lock
mov
into
inc
dec
stos
push
mov
and
insl
test
arpl
push
sbb
adc
iret
add
jg
jge
push
pop
add
push
inc
jecxz
adc
data16
push
cld
mov
fisttps
push
xor
in
je
inc
xchg
mov
mov
dec
aad
rorl
pushf
shrb
mov
cwtl
or
movsb
hlt
std
fucomp
arpl
inc
xchg
jmp
cmp
ja
jle
push
fdivl
dec
adc
add
test
cmp
mov
fidivs
inc
jge
mov
pop
jo
insl
pop
scas
xchg
inc
enter
idivb
xor
movsb
insb
in
lds
pop
fnstenv
inc
push
in
jae
nop
enter
daa
mov
mov
rcr
scas
jno
mov
sbb
pop
push
xchg
xchg
xlat
test
and
mov
jg
imul
push
das
sub
cmpsb
sti
hlt
dec
pop
xchg
out
mov
sbb
pop
jle
mov
adc
or
sub
push
adc
xorl
adc
pop
decl
cmp
and
aad
repnz
xor
sbb
in
repz
hlt
mov
push
pop
dec
sbb
sub
pop
outsb
or
sub
nop
jle
mov
pop
cwtl
mov
cmp
mov
pop
pop
and
push
xchg
cmp
test
xchg
imul
inc
pusha
lret
iret
rcrl
mov
ret
insb
sahf
cmp
cmc
sbb
les
pop
loop
cmpb
outsl
pop
adc
xchg
divb
jle
pop
lods
dec
cs
mov
dec
push
cli
pushl
icebp
cmp
cmp
or
pop
test
stc
in
loopne
std
in
dec
pop
inc
adc
mov
adc
pop
add
das
data16
xchg
sbb
test
xlat
insl
add
or
pop
imul
sbb
sti
into
mov
jbe
xchg
aad
inc
mov
mov
nop
inc
pop
leave
mov
pop
sbb
call
jno
xchg
outsb
mov
xchg
call
repz
pop
into
mov
adc
leave
pushf
stos
outsl
xchg
jmp
cs
cs
inc
loop
cmp
test
aas
sbb
jb
adc
dec
test
int3
je
ss
jecxz
rcr
adc
xor
cwtl
aam
or
std
adc
mov
pop
andl
cmp
mov
inc
push
xchg
cmp
test
add
mov
mov
cmpsb
mov
insl
outsb
or
jmp
cmpsl
mov
jne
insb
xor
icebp
and
sbb
adc
mov
outsb
and
inc
imul
aam
mov
cmp
repz
sbb
int
dec
es
cmp
clc
jae
dec
xchg
popf
insb
mov
popa
rcrb
mov
mov
pop
push
fidivrs
sub
cmp
add
xchg
test
mov
add
test
dec
int3
mov
test
push
xchg
jmp
sbb
sarl
fistl
mov
ds
addr16
cmp
cmpsb
add
pusha
subl
mov
jne
addl
xor
cli
inc
mov
xor
arpl
ja
or
and
bound
mov
cmp
or
jae
jge
mov
cld
inc
out
pop
aaa
lods
bound
xor
das
xlat
in
rclb
pop
xchg
fwait
sub
cmp
mov
jp
and
mov
lods
lds
cmpsb
fisttpll
pop
ss
and
pusha
lret
movsl
inc
xchg
imul
xchg
out
fldl
jge
lcall
add
stos
movb
cmpsb
test
insb
mov
pop
jnp
mov
jle
inc
xor
adc
mov
call
pop
cmp
dec
inc
out
leave
sbb
push
push
fwait
movsl
or
mov
push
cli
fisubl
mov
mov
imul
scas
xor
mov
rolb
inc
bnd
inc
leave
sar
hlt
dec
and
arpl
out
jge
outsb
out
xor
aaa
fucomp
outsb
or
fistpl
and
sbb
aam
push
push
push
jo
inc
mov
jae
js
jnp
inc
cmp
int
movsb
divl
dec
push
out
push
sti
jbe
rorl
enter
daa
mov
pop
jno
inc
jns
push
push
rorb
adc
imul
test
add
push
ds
mov
mov
jae
cli
sbb
inc
xchg
int
cmpsb
jle
mov
js
lret
lcall
data16
or
jmp
inc
cmp
cmp
ds
sub
shlb
ret
ljmp
jno
add
dec
scas
xor
push
stc
int
sahf
nop
sub
faddl
jae
sub
mov
into
push
scas
jb
fmull
push
outsb
insl
mov
dec
sub
or
jbe
mov
add
mov
mov
mov
jb
and
jno
cmp
inc
and
imull
mov
mov
testl
or
cmc
loope
enter
jnp
lret
daa
shl
mov
xchg
pop
fs
jbe
adc
je
sarl
lods
xor
mov
mov
ljmp
aas
jnp
loop
sarb
mov
or
stos
mov
add
loop
imul
adc
movsb
imul
xchg
fnstenv
dec
sbb
sarb
sub
aas
es
gs
sti
jge
and
cltd
add
nop
mov
out
dec
pinsrw
sbb
fsts
push
repz
dec
xchg
xor
dec
call
jb
pop
xor
xchg
pushf
push
and
jmp
inc
add
out
jmp
imul
push
dec
cld
fdivp
je
cmpsb
jecxz
cmc
in
pop
mov
std
mov
pop
cwtl
repnz
ss
mov
dec
sbb
ret
imul
mov
out
scas
jbe
das
arpl
xchg
cmp
push
divb
popa
insl
dec
popf
mov
push
adc
cmpsl
mov
push
icebp
testl
lret
andb
and
ffreep
mov
adc
shlb
adc
fbstp
dec
ret
pop
or
es
repz
cmpb
sbb
xchg
fsubr
sub
xlat
add
btc
add
mov
je
notb
mov
inc
add
xchg
mov
test
mov
mov
test
xor
lea
mov
mov
pop
popa
xor
stos
push
shl
out
sahf
loope
add
jnp
int3
jle
pop
xor
movsl
adc
cli
inc
divl
orb
mov
roll
jnp
loopne
push
mov
or
das
dec
adc
sub
in
inc
or
xchg
fwait
movsl
in
scas
inc
add
in
mov
loope
out
cmp
lahf
jns
cmpsl
mov
xchg
dec
std
lock
jns
sub
xor
aaa
addr16
mov
dec
aas
mov
cmp
pop
dec
mov
pop
in
test
pusha
les
adc
xchg
cmp
repz
mov
jo
and
sub
mov
dec
add
stos
cmp
mov
mov
ljmp
stos
jp
push
cmpsb
cmp
cli
mov
gs
popf
pop
jb
dec
inc
stc
push
xorb
xor
or
sbb
sti
fcmovu
pop
dec
xchg
push
cmpsb
jge
lods
int3
mov
jl
scas
xchg
pop
lds
outsb
mov
ds
pusha
leave
aaa
stos
into
hlt
xchg
mov
cmp
jge
imul
aaa
pushf
jns
or
fisttps
int3
adc
push
jmp
fidivs
in
pop
sahf
inc
jo
cs
scas
push
add
and
and
mov
enter
call
pop
in
inc
ljmp
mov
xchg
cmp
dec
lahf
jno
in
jl
imul
addr16
add
and
dec
jp
adc
pop
test
lds
inc
and
mov
pop
loop
and
or
aas
push
jge
loope
dec
or
jge
cmp
jle
ds
sti
adc
adc
jp
dec
ret
pusha
inc
mov
xor
push
jecxz
dec
pop
stos
sub
mov
pop
repnz
ficoml
mov
fildll
dec
add
rcrb
orb
insl
jg
jno
mov
sbb
inc
and
and
inc
movsb
cmp
sti
pop
in
imul
lret
das
rorl
mov
pop
xchg
sbb
xor
cmpb
xor
enter
xchg
loop
icebp
in
scas
popa
fldenv
cmp
ss
aaa
lods
sbb
mov
out
imul
orb
mov
add
or
into
and
andl
cmp
adc
inc
or
jmp
mov
push
sub
sbb
sti
movsb
sub
jmp
pushf
sub
out
mov
shrb
sti
sub
out
mov
addr16
insl
dec
outsb
enter
inc
clc
cld
call
xchg
hlt
loop
lea
aam
fadds
icebp
js
pop
xor
in
adc
adc
jmp
and
inc
lock
inc
inc
scas
mov
jb
movsb
enter
insl
je
imul
pop
mov
std
pop
cld
mov
jnp
mov
adc
add
or
and
or
das
inc
cmc
test
cld
cmp
aam
in
jl
mov
mov
mov
dec
push
int
cmpsl
mov
mov
into
add
cld
fiadds
add
out
cltd
daa
mov
xor
lock
xor
sub
out
aam
mov
scas
es
insl
daa
test
mov
ljmp
insl
lods
mov
mov
movsl
jb
xchg
mov
push
or
es
add
sbb
test
incl
inc
or
lcall
xchg
outsb
add
shll
outsb
jecxz
or
clc
stos
inc
mov
test
xchg
dec
mov
xor
sub
jno
adc
pop
xchg
mov
cmp
or
and
js
fxch
divb
insb
rorb
and
or
sub
push
jno
jne
scas
sub
sbb
mov
pushf
or
cmpsb
in
cltd
rclb
movsl
rcrl
sub
das
mov
addr16
movsb
divl
mov
and
xchg
mov
or
dec
fistps
push
push
xchg
xorps
jmp
jge
pusha
subl
cltd
popf
fists
mov
stos
lods
or
lret
data16
movsb
jno
into
mov
jns
aad
das
iret
sbb
in
pop
test
mov
loopne
xor
or
xchg
jae
inc
mov
fcomp
lea
sbb
mov
inc
scas
cli
jg
lds
jae
sarb
repnz
imul
fisubrs
inc
pushf
aas
sarl
loope
test
jae
pop
mov
add
mov
pop
cmpb
sbb
fnsave
mov
imul
cmp
loope
or
mov
icebp
in
sub
xchg
enter
daa
mov
xlat
cmp
jno
lods
bnd
push
test
push
das
int
movsl
in
ret
enter
inc
dec
add
fs
movsl
out
xchg
push
nop
clc
aas
inc
mov
push
cmpsb
test
in
pop
or
js
jecxz
pop
cmp
fs
dec
popa
loope
lods
jbe
shr
cmp
add
adc
jmp
inc
push
into
mov
xchg
rcrl
push
mov
cmpsb
sub
int
jno
push
push
pop
jno
mov
push
pop
sub
fsub
pop
out
cmp
mov
xor
lods
sbb
mov
loope
mov
jl
int
pushf
push
cmp
xor
imull
pop
imul
add
pusha
mov
jmp
sahf
and
cmc
outsl
jp
xor
pop
outsl
mov
cwtl
loop
jbe
stc
rclb
adc
ss
jmp
mov
push
jne
xor
and
or
mov
into
pop
iret
dec
gs
mov
into
testl
adc
jne
imul
xchg
add
xor
xor
mov
or
data16
addr16
cmp
mov
fistpl
xor
fists
aad
adc
dec
int
inc
inc
inc
push
cmpsl
fld
cltd
adc
or
repz
fists
mov
add
out
pop
adc
pusha
pushf
lods
push
mov
lods
mov
inc
ja
loop
lret
aas
cmc
jmp
or
test
jecxz
or
sbb
dec
leave
cwtl
add
mov
mov
xor
icebp
add
ss
insb
icebp
fbstp
gs
das
and
mov
mov
adc
push
sub
xor
psadbw
outsl
xchg
insl
sbb
jno
dec
sbb
cmpsl
mov
mov
movsl
fucomip
cld
or
lret
pop
shrb
and
adc
sub
rorb
push
aam
fs
jp
lea
inc
pop
mov
sbb
test
and
jnp
pop
jbe
ljmp
shrb
sbb
xchg
add
pop
jne
adc
cltd
xor
test
lahf
pop
mov
add
push
or
dec
add
js
xchg
xchg
add
hlt
mov
test
subb
mov
stos
add
adc
or
ror
mov
xchg
mov
ds
leave
push
mov
ja
in
dec
stc
cltd
jle
xor
outsb
fwait
lds
ret
push
cmc
popa
jne
ficomps
mov
call
mov
sub
or
aad
or
call
xor
or
aas
add
mov
lahf
mov
jmp
mov
sbb
dec
jns
jp
adc
xor
cmp
rcll
pusha
in
xchg
dec
inc
pop
cmpl
pop
out
push
setge
pop
xchg
mov
lret
stos
pop
mov
cs
icebp
mov
jnp
inc
or
shlb
or
iret
jl
pop
ret
inc
pop
loopne
adc
or
xchg
js
cltd
das
jl
jnp
out
push
xor
sbb
mov
xchg
xchg
push
sbb
test
imul
int3
scas
pop
fs
mov
int
mov
in
sub
and
out
lds
pop
cmp
cltd
ret
jge
or
sbb
stc
aaa
sbb
push
jge
add
mov
int3
out
cltd
pop
mov
fidivrs
xor
adc
imul
setg
cwtl
repz
fcmovnu
sub
xor
psubusb
enter
daa
mov
fistpll
lahf
xchg
leave
jno
lcall
push
fcomps
rcrb
and
int
pusha
dec
jns
mov
sub
pop
in
inc
inc
test
pop
xor
jo
jp
mov
fmul
pusha
loope
xor
sub
xor
cmp
pop
stos
ds
pop
movsl
adc
pop
xchg
mov
or
into
fists
jb
aam
in
or
imul
push
sub
cli
xlat
pop
lock
int
rcll
push
fmull
mov
test
enter
push
mov
jl
and
pop
ss
inc
cmp
das
mov
imul
adc
sbb
mov
dec
mov
sahf
cli
pusha
cmc
fisttpl
outsl
push
xor
stc
sbb
js
fwait
mov
add
mov
dec
lods
jmp
lock
addr16
xlat
cli
lret
push
xor
cwtl
cmp
sbb
or
mov
gs
enter
pop
call
int3
fidivrl
adc
or
fsubl
ret
mov
cmp
mov
imul
int
cmpsb
push
and
mov
fdivr
add
push
aad
push
hlt
nop
sbb
xchg
cmc
fsincos
pusha
cmpsl
les
push
repz
sub
xchg
jp
test
into
push
mov
out
dec
mov
adc
ss
xchg
fadds
inc
in
jne
xchg
divb
pop
fisttpl
dec
sbb
jecxz
stc
test
xchg
jns
cmpsb
addl
mov
xor
xor
xor
pop
cmova
mov
shl
lock
mov
push
jno
ficoms
mov
idivb
xchg
mov
dec
inc
incl
xchg
dec
mov
jl
es
xor
stc
lret
int
orl
mov
xor
jo
or
and
sub
jle
aam
jnp
ret
or
jb
inc
test
clc
pop
jp
xchg
cltd
andl
popa
sbb
cmp
popa
push
sbb
jmp
pop
xchg
dec
xor
push
mov
sbb
in
dec
add
cmp
test
xchg
lds
lret
aaa
repz
push
enter
add
sbb
nop
movsb
pop
bound
stos
and
mov
int3
imul
add
lcall
or
xchg
hlt
mov
dec
add
ja
loopne
dec
in
mov
pop
adc
jmp
jnp
cwtl
mov
gs
or
out
xlat
lea
or
clc
jmp
xchg
xchg
ss
fnstenv
pop
add
or
std
test
in
stos
mov
repz
les
mov
in
cwtl
mov
xchg
mov
jge
xor
out
adc
out
xchg
mov
mov
or
stos
xchg
out
and
pop
rep
pop
fucomi
jnp
mov
dec
push
jnp
insl
adc
in
ret
push
pop
pop
cmpb
test
out
push
pop
sahf
mov
push
scas
mov
imul
mov
mov
scas
sarb
inc
mov
shl
or
aaa
add
leave
pushf
xchg
cld
hlt
je
xchg
arpl
ljmp
jp
negl
push
adc
aaa
flds
or
fimull
int
dec
int3
shll
pop
loopne
push
fisubs
dec
xor
outsb
mov
in
cmp
sub
movsb
and
lahf
jbe
nop
sbb
enter
daa
xchg
mov
jno
stos
les
std
dec
test
pop
movsl
cli
jb
and
jns
lahf
jg
rclb
dec
mov
xchg
sub
es
inc
rcrl
jo
push
div
js
dec
aaa
pop
mov
cld
mov
sub
dec
sbb
out
ljmp
in
test
xlat
adc
call
sbb
int
xor
or
in
ret
cli
ss
outsl
sbb
adcb
fdivl
and
push
test
nop
sbbb
jg
jl
mov
xchg
decl
daa
sub
and
rcrl
inc
gs
fsubrs
lret
imull
in
rcll
mov
lods
jge
sbb
repz
imul
adc
iret
pop
loop
push
cmp
rcrl
iret
adc
cmp
int
subb
add
out
mov
adc
lds
cmc
loope
or
fs
int
andb
xlat
loopne
lods
jecxz
out
cmp
imul
jecxz
add
mov
int
lods
push
int
test
dec
sub
mov
adc
and
jl
clc
clc
dec
mov
jno
add
xor
inc
les
ficoml
add
xchg
cmp
and
dec
cmp
outsb
clc
ja
dec
or
adc
arpl
jmp
dec
test
jb
and
out
mov
rcrl
popa
xchg
fdivrs
jecxz
sub
in
std
dec
lcall
mov
insb
pop
sbbl
into
pop
mov
and
sbb
mov
fistpll
adc
and
inc
and
push
adc
sarl
idivb
in
insl
ljmp
cmpsl
xchg
arpl
push
add
lret
cmp
pushf
mov
cmp
or
cmp
sub
inc
lret
out
ret
cwtl
push
es
xchg
mov
push
clc
lcall
ljmp
sbb
int3
or
mov
nop
cmp
push
stc
cmovae
pop
cltd
mov
fsubrl
mov
jge
dec
iret
xchg
icebp
test
xchg
stos
xchg
lea
shll
pop
scas
pop
or
lahf
inc
out
sub
add
out
mov
cli
and
push
sahf
dec
or
leave
fdivs
in
xchg
xchg
mov
or
sti
ja
pusha
dec
dec
fildll
mov
and
dec
fwait
and
movsb
push
cmp
jne
push
aas
lock
mov
movsl
bound
push
jns
repnz
in
aam
xchg
test
push
sub
and
addr16
lret
jp
scas
dec
mov
pop
imul
gs
aas
clc
xchg
in
movsb
pusha
rolb
mov
jbe
mov
jmp
fsubrp
cmp
or
xlat
popf
push
xchg
push
mov
dec
test
nop
and
pop
mov
and
leave
sarl
popf
push
ret
adc
cmp
cmp
loope
out
jb
pop
dec
aas
cs
and
inc
xor
pop
or
push
cs
fisubl
jp
imul
fwait
scas
and
inc
vmovntps
rorb
inc
repnz
sub
arpl
shrb
mov
and
aaa
cwtl
in
or
ljmp
mov
int3
jo
add
add
scas
into
mov
and
cwtl
cmp
aam
scas
outsb
pop
push
jns
jle
lahf
popa
pop
in
fstl
enter
daa
xchg
or
jno
loopne
jl
adc
hlt
pop
dec
push
fdivs
cltd
lods
mov
sahf
pusha
cld
push
pop
mov
test
icebp
mov
push
cmpsb
or
cmp
cmp
clc
or
ds
dec
sub
cmp
popf
inc
mov
adc
jl
mov
adcb
add
mov
push
out
dec
lret
cmp
pop
out
jmp
cli
push
bound
fsub
inc
jecxz
or
outsb
pop
or
xorb
dec
mov
mov
aaa
lods
mov
daa
and
cli
push
push
cmp
out
mov
adc
pop
arpl
shrl
mov
cmp
das
cmc
enter
mov
je
sahf
aas
push
stc
mov
xchg
fs
sbb
lods
int3
sbb
adc
lods
mov
mov
out
pop
sbb
xor
jns
and
or
js
into
mov
push
and
pop
push
lods
leave
adc
loope
sub
dec
add
cli
sbb
out
adc
out
imulb
mov
iret
push
in
jl
inc
sti
call
cmc
inc
aad
fs
nop
rcrl
dec
ljmp
fldcw
les
and
repz
xchg
add
xor
les
xlat
pop
add
mov
pop
lds
pushf
lods
adc
jmp
cmp
cs
mov
inc
sbb
jb
cmp
dec
dec
into
pop
je
les
pop
movsl
es
call
cwtl
ss
lahf
mov
push
daa
subl
add
into
add
jbe
push
das
mov
fadds
fdivs
hlt
loope
shll
inc
mov
insl
shl
mov
sbbl
sahf
sbb
cld
mov
lret
stos
adc
mov
and
and
out
lods
pop
scas
fcmovbe
mov
rcl
movsb
pop
ret
daa
sbb
xor
xchg
ss
clc
aad
notb
sti
cli
ja
dec
and
aaa
loope
mov
xor
jno
push
dec
cpuid
inc
sub
sahf
push
lret
js
test
mov
mov
ret
test
out
insb
xchg
add
lea
pop
mov
jl
out
lea
cmp
add
xor
cltd
scas
divl
test
inc
adc
push
inc
mov
inc
lahf
imul
arpl
inc
cmc
jmp
or
mov
push
fisubs
mov
out
xchg
mov
loopne
data16
push
in
cmp
call
mov
mov
test
sbb
and
inc
mov
sbb
mov
addr16
dec
and
in
sbb
or
xchg
pop
mov
cmp
sub
pusha
out
insb
mov
add
push
stos
js
xor
xor
sub
mov
jle
rorb
or
adc
jno
cltd
or
fcompl
mov
cltd
jae
xorl
loop
rorb
addb
ficompl
inc
xchg
add
imul
mov
lds
out
sub
jae
frstor
leave
mov
arpl
inc
test
pop
jge
stos
test
aaa
push
or
add
jle
cmpsl
cs
pop
outsb
test
cmpsb
dec
lcall
out
xor
in
ret
xor
aad
cmp
mov
in
ljmp
test
adc
cmp
jno
cmp
and
dec
arpl
stc
movsl
or
setg
cld
repz
mov
mov
lret
pop
movsl
push
and
push
jg
loope
mov
jmp
ds
and
adc
push
icebp
in
rcll
mov
jae
arpl
add
stos
mov
sbb
imul
pop
insl
aas
test
out
out
push
mov
ds
sub
adc
mov
fidivrl
pop
mov
xchg
xchg
mov
adc
mov
fistpll
and
push
jl
dec
pop
xor
mov
push
cmc
lret
or
mov
cmc
ret
jl
cmc
mov
xor
hlt
and
mov
or
inc
repz
adc
inc
xchg
ss
mov
scas
mov
test
xor
fs
cmp
lock
lahf
dec
into
xchg
xchg
gs
cli
loopne
mov
pop
and
inc
aad
pop
es
add
insb
adc
or
sbb
and
xlat
es
scas
mov
out
sub
imul
sub
mov
dec
dec
sbb
inc
mov
imul
mov
dec
xchg
ret
cs
lea
sub
mov
leave
pop
mov
fsts
scas
dec
cmc
pushf
pop
mov
mov
cmp
rolb
stc
or
lret
out
jno
divl
and
je
sub
jecxz
popa
mov
std
fwait
ja
cwtl
icebp
cmp
mov
or
mov
popf
push
fcmovnbe
or
pop
clc
jmp
lock
popf
sub
mov
pushf
and
shrl
out
add
lods
dec
aaa
and
test
mov
add
xchg
sbb
lods
sti
mov
addl
subl
mov
stos
es
sahf
cwtl
fnstsw
xchg
push
mov
dec
popa
popa
or
lods
mov
jae
mov
push
jl
push
inc
jno
smsw
jb
mov
mov
push
aad
test
push
mov
dec
popf
stc
cmp
lods
mov
jecxz
in
dec
pop
arpl
jecxz
lock
out
lock
add
sbb
inc
outsl
xor
push
mov
xor
cmp
adc
pop
xchg
xor
subb
dec
lds
lcall
push
jg
outsl
subl
bound
inc
jns
lock
in
idiv
xchg
and
jae
adc
push
or
xlat
aas
addr16
fidivrl
cmp
mov
jecxz
mov
movsb
addr16
add
cli
arpl
and
cs
jmp
je
mov
adc
add
mov
xchg
mov
and
call
jnp
pusha
jbe
jge
xchg
push
push
loopne
adc
cmp
clc
daa
js
adc
movsl
sbb
ja
adc
mov
xor
fistpl
sub
aad
or
sub
scas
loop
imul
mov
jo
inc
mov
adc
leave
add
hlt
push
inc
arpl
cmp
mov
jge
std
push
sbb
mov
or
sub
xchg
sub
pop
insl
aam
fimuls
out
xor
jg
sbb
mov
bound
jmp
call
push
pop
ljmp
stos
arpl
enter
daa
test
mov
jno
mov
jl
pusha
sub
push
sahf
arpl
movsl
punpckhwd
and
push
lock
faddl
or
js
dec
push
xchg
mov
cmpsb
adc
and
ja
js
mov
cmp
into
iret
loope
mov
mov
sti
cmp
adc
xor
pop
xor
repnz
lahf
sahf
xor
shr
jne
mov
sub
pop
lcall
inc
fdivrl
or
sub
xchg
mov
test
pushf
xor
mov
mov
mov
and
and
sbb
dec
sahf
in
cmp
pop
clc
out
in
add
jnp,pt
rcl
jns
insl
adc
sahf
push
in
cmc
push
inc
shlb
pop
outsl
in
pop
loop
push
xor
clc
xchg
cmpsl
fs
push
test
dec
call
test
inc
mov
das
mov
xchg
lret
lahf
xor
ljmp
push
jmp
into
jbe
dec
xor
loopne
shrb
pop
inc
push
mov
sbb
imul
pop
xchg
add
mov
std
sbb
pop
xor
xlat
arpl
sub
imul
push
inc
jmp
inc
sarl
mov
pop
aad
cmp
nop
mov
dec
test
or
cltd
es
in
les
stos
repz
cs
xchg
and
mov
sbb
data16
adc
divb
jmp
pop
arpl
fwait
xchg
xchg
inc
sbb
jno
adc
jb
cmp
dec
cmp
call
arpl
sub
xor
inc
cmp
cwtl
lods
dec
dec
mov
testl
sbbl
cmpsl
fildl
pop
pop
fwait
and
xchg
lock
xchg
das
jl
js
dec
push
or
or
add
mov
test
insl
lahf
aad
dec
xor
cmpsl
adc
mov
fadds
cld
loopne
push
lret
mov
mov
leave
shlb
in
in
mov
insb
or
insb
push
cld
ret
inc
xor
es
ljmp
adc
xchg
xchg
xchg
ljmp
fsubrs
mov
mov
gs
push
and
in
fldl
inc
aad
test
lods
into
mov
jecxz
push
xlat
push
stos
dec
add
les
sub
sbb
inc
sarl
xchg
stos
filds
or
add
xchg
mov
xlat
int
dec
jnp
or
and
fwait
mov
dec
lods
in
mov
cmp
ja
testl
and
ret
or
pop
jl
mov
and
and
xchg
movsb
stos
mov
push
xor
push
mov
bound
xlat
jns
aam
xor
mov
xchg
jb
adc
stc
cmp
adc
jcxz
movsl
jp
or
jnp,pn
mov
inc
and
in
cmp
mov
sbb
jmp
aas
in
orl
jb
xchg
pop
jp
leave
cwtl
mov
jp
xchg
push
add
or
insb
or
jle
sahf
cltd
push
xchg
scas
lret
es
iret
push
inc
rol
aad
pop
repz
jns
inc
bound
in
cmp
push
mov
rolb
xchg
mov
fcomps
pop
int3
push
imul
ljmp
out
mov
sbbl
hlt
mov
fildl
jge
xor
sbb
or
or
push
add
mov
icebp
pop
pushf
sub
xor
fcmovb
add
adc
cmp
sbb
pop
jbe
shr
xchg
shlb
subl
jno
push
jb
jbe
call
push
subl
lods
and
add
push
jg
test
push
jno
inc
or
cmc
jnp
repz
js
or
pop
mov
pusha
push
shl
loope
rep
sub
sti
push
cmp
insl
fistl
or
dec
out
int
dec
sbb
adc
xor
xchg
or
cmp
mov
aaa
shr
imul
dec
cmp
lods
jecxz
cmpsb
sub
test
test
dec
add
out
daa
ret
into
mov
bound
mulb
mov
sbb
inc
push
dec
cltd
mov
pusha
jne
fcomps
stc
fcomi
movsb
outsb
popa
lret
jmp
mov
xor
enter
cmc
inc
imul
xchg
xlat
or
ret
mov
loop
fadd
stc
scas
faddl
adc
lods
insb
and
mov
pop
xor
xor
dec
mov
jge
add
pop
sbb
cmp
loopne
pop
negb
sub
imul
pop
adc
sub
sbb
cwtl
cmpsl
mov
sub
mov
mov
mov
xchg
cmc
mov
adc
nop
fs
icebp
dec
pop
push
fiadds
frstor
push
loope
les
test
dec
pop
daa
xchg
dec
lods
jne
xor
call
push
sub
arpl
rcrb
arpl
xor
rolb
and
jle
lods
mov
dec
mov
lods
je
stc
je
mov
in
jmp
lock
xor
dec
or
dec
jae
cmpsl
pop
cmp
aas
lock
cmpxchg
xchg
das
pop
daa
mov
std
xlat
sub
rorl
mov
xchg
cmpsl
and
mov
scas
hlt
mov
or
test
clc
cmp
jb
mov
lcall
pop
or
pop
sub
scas
pop
aam
fsts
es
ja
fldl
mov
dec
xchg
aam
mov
popa
jle
lods
js
out
cmpl
pusha
push
sti
mov
outsb
add
outsb
mov
jl
fiadds
lcall
test
jg
xchg
cwtl
mov
xchg
fst
pop
mov
stos
mov
add
push
mov
pushl
add
mov
mov
cs
lret
mov
divb
dec
dec
stos
mov
std
fistps
jno
dec
cmp
std
sub
out
xor
lahf
bound
jge
in
sbb
mov
sub
or
mov
loop
fidivrs
xchg
cmp
mov
mov
mov
test
lret
aaa
shl
cmp
sub
fcomip
jne
xchg
aam
mov
xchg
or
jae
sbb
leave
mov
inc
xchg
push
stos
rcl
icebp
and
int3
insb
jae
sarl
or
push
fsubp
cmp
ror
dec
iret
mov
sahf
ret
jb
sub
jae
aam
push
sub
push
sub
movsl
fidivl
mov
sbb
mov
imul
int
in
xlat
sarb
mov
push
xchg
out
ss
hlt
jmp
je
adc
jo
mov
xchg
jge
dec
sbbb
cli
fnstenv
xchg
ss
sarb
int3
push
in
pop
fimuls
lods
jmp
scas
dec
test
mov
movsb
ficoml
mov
clc
jbe
cs
jns
add
sub
daa
cmp
cmp
inc
test
jl
cld
sbb
push
fs
movsl
sbb
inc
add
test
jbe
push
sbb
and
pop
sbb
js
out
dec
pop
hlt
jbe
push
mov
lcall
cmp
sbb
sub
or
call
icebp
mov
loopne
sbb
sbb
clc
add
iret
aaa
xor
mov
sti
rcrb
mov
aad
ljmp
push
mov
sbb
sub
call
cs
dec
ds
jecxz
fisubrs
mov
fldenv
mov
insb
pop
and
lods
movsl
push
push
or
fcom
lea
arpl
lret
loop
add
in
ss
xchg
cwtl
xchg
cmc
loopne
out
xor
lretw
cmp
loop
int
stc
data16
ss
xchg
adc
inc
out
ss
loopne
push
pop
cmp
popa
nop
std
frndint
xor
sarl
cmp
in
insl
sti
into
cmp
movsb
gs
mov
or
adc
popa
xor
cld
sub
loopne
cmp
push
outsl
cmp
scas
popa
xlat
jecxz
cltd
sub
cwtl
xchg
in
sub
fwait
sti
movsb
sub
aam
fcmovbe
add
nop
dec
data16
inc
lds
flds
jno
push
test
xchg
or
insb
lea
pop
lret
sbb
pop
int3
cli
adc
sub
and
ljmp
lock
jb
cmova
jl
je
pop
shl
cltd
sub
fdivrp
nop
jno
cwtl
and
rorl
orl
lods
jbe
loope
divb
loop
pop
das
cmp
mov
and
rcrl
test
pop
insl
insl
push
outsb
dec
sub
cmpsl
cmpl
icebp
xchg
icebp
cld
ss
ljmp
lds
mov
sub
rclb
sub
sub
movsl
leave
aam
call
mov
xlat
jae
adc
adc
outsl
movsl
lods
jecxz
push
mov
mov
dec
jmp
fsts
nop
incl
ljmp
test
xor
push
pop
cmpsb
leave
dec
sarb
cli
xchg
sbb
sbb
fsubr
shr
pop
or
shrb
rorb
outsb
sahf
repz
cmp
sub
dec
mov
push
mov
mov
mov
test
lcall
push
scas
or
or
fwait
push
and
push
push
into
jne
adc
sbb
adc
pop
jns
mov
sti
xchg
adc
adc
scas
lea
pop
pop
insb
loopew
je
pop
into
test
loope
insb
mov
imul
inc
jmp
pop
fists
aam
xchg
cmpsl
pop
mov
xchg
aad
pop
andl
add
fwait
xchg
adc
lock
push
adcl
inc
push
enter
or
fidivrs
add
out
mov
and
mov
iret
adc
lds
inc
pop
nop
mov
push
out
mov
shrl
xlat
xor
nop
and
mov
push
imul
xlat
lds
xchg
rclb
repnz
hlt
ss
sahf
arpl
jmp
inc
mov
inc
jge
dec
loopne
cmpb
push
les
mov
stc
fcmove
push
adc
fidivs
scas
out
push
mov
jo
out
jp
sub
sub
cmp
cmp
rep
gs
push
add
add
in
pusha
es
jp
daa
adcl
jno
add
jl
mov
pop
add
inc
xchg
or
mov
aam
push
jl
ja
pop
ds
push
call
shll
cmpsb
pushf
sub
pop
inc
std
lds
gs
push
cmc
or
mov
jb
sbb
cmp
outsl
scas
ds
test
adc
ret
jl
dec
cltd
xchg
dec
mov
mov
mov
sbb
sub
mov
or
adc
popa
ret
mov
outsb
dec
inc
flds
sti
dec
lods
jg
incb
sahf
sbbl
js
mov
xadd
inc
test
push
push
jmp
cmp
mov
out
pop
gs
pushf
out
mov
sbb
es
cmpsl
jo
xor
dec
outsl
add
fdivr
sbb
js
adc
leave
sub
pop
lret
push
lods
cmp
mov
pop
cli
xor
xor
pop
cmp
cld
int
pop
push
sbb
gs
jae
loopne
lods
and
adc
adc
adc
lret
outsl
loop
data16
std
sbb
push
dec
mov
and
insl
sub
mov
mov
xchg
xlat
out
sti
push
mov
idivl
nop
sbb
dec
lds
inc
fnstcw
les
jp
jmp
stc
aaa
incl
push
inc
bound
or
mov
push
xchg
les
inc
scas
mov
fdivrs
in
jle
jb
pop
dec
mov
adc
ret
xor
loop
cwtl
pop
mov
rclb
mov
push
andl
xchg
rorl
test
mov
pop
ljmp
xor
aam
imul
shrl
cmp
insl
push
outsb
inc
dec
and
orb
icebp
pop
paddb
adc
mov
out
and
in
mov
shl
mov
aam
dec
ret
bnd
pop
and
push
xor
xchg
push
inc
in
ljmp
jae
dec
addb
or
inc
xchg
cmp
adc
jge
mov
std
sub
cltd
ljmp
mov
cltd
mov
and
test
outsb
out
xchg
aad
roll
into
pop
paddq
stos
lods
dec
sbb
add
mov
ret
pushl
xor
mov
rol
dec
lahf
cmp
add
ja
xor
dec
xchg
leave
cmp
or
push
int3
fwait
cmp
aad
jne
fs
mov
and
jns
jns
lcall
pop
cmpsb
push
mov
push
stos
sub
add
pop
jp
mov
sbb
mov
in
in
push
insl
pusha
je
sbb
xor
and
testb
xorl
xchg
popf
ds
js
sub
adcb
imulb
mov
or
stos
mov
pop
push
insb
jne
adc
mov
nop
pop
cwtl
and
addr16
cmp
or
jmp
cwtl
loop
fsubrs
jmp
mov
jo
pop
andl
jne
ss
shrb
fcomip
jl
cmc
leave
ffree
pop
hlt
adc
inc
inc
mov
cmpb
pop
sbb
xchg
leave
aaa
adc
or
int3
ds
dec
pop
sub
xorb
mov
jno
int3
jns
cmp
cld
mov
lock
push
jbe
int
in
inc
das
dec
enter
daa
subb
aaa
lds
jl
call
cmp
movsl
sub
xchg
and
xchg
negl
test
mov
sahf
inc
mov
jae
pop
push
outsl
nop
pop
jb
dec
push
adc
loope
jl
sub
das
mov
insl
jb,pt
mov
rcrb
inc
inc
addb
int
xchg
mov
lret
xor
fst
or
aam
test
lods
pop
call
adc
mov
sub
gs
mov
push
cld
out
jg
and
mov
cmp
out
push
pop
inc
cs
dec
jae
mul
outsl
in
lret
fadd
xor
mov
sbb
sahf
fimuls
nop
cmc
outsb
icebp
xlat
xor
dec
inc
loop
dec
enter
shlb
adc
jno
lods
and
mov
pop
out
jmp
cli
arpl
dec
cmp
xchg
lret
or
add
add
fsub
inc
sbb
loope
fs
jo
bnd
push
in
xchg
add
sub
sbb
dec
jns
xlat
popa
je
sub
pop
mov
mov
sti
add
inc
aad
cwtl
adc
and
gs
jmp
dec
fnstenv
scas
repz
into
pop
lea
out
cmpsb
test
out
cld
pop
xor
adc
sub
aad
cs
aad
inc
imul
mov
aam
cmpsb
mov
dec
sbb
xchg
jecxz
or
cmp
enter
fwait
mov
lret
cmpsl
pushf
hlt
cmpl
cltd
loope
daa
inc
mov
inc
mov
lock
inc
jae
clc
shll
and
push
and
das
mov
notb
sbb
imul
cmpsl
jg
cmp
icebp
xor
jnp
mov
orl
mov
dec
pop
push
sbb
sub
jge
aam
add
cmp
cmp
jnp
pop
clc
aaa
in
add
lods
inc
jbe
aam
lods
mov
pop
inc
mov
xorl
paddusb
sti
add
pop
std
cltd
and
sahf
test
lea
jecxz
push
mov
inc
xor
aas
adc
xchg
mov
push
fwait
mov
das
add
movsb
cli
out
push
push
push
xor
xchg
test
loop
mov
pop
cmp
daa
or
ja
dec
cwtl
dec
test
inc
jg
cmpsl
or
or
insb
outsb
ficompl
mov
dec
jne
pop
pop
mov
in
out
iret
aad
bound
cmp
pop
and
xchg
xchg
scas
xchg
push
mov
xor
or
xchg
inc
fildll
jp
pusha
fs
inc
mov
add
xchg
test
shll
cmp
ficoml
in
scas
fists
pop
out
popf
gs
push
add
stos
sub
and
into
push
jnp
inc
cld
jle
stos
adc
aam
adc
in
iret
shl
or
pop
iret
pop
jle
jb
fnsave
mov
je
inc
or
fs
loop
mov
jmp
imul
scas
fmuls
lds
dec
ror
jg
pop
aaa
shl
iret
jp
leave
push
jge
hlt
int3
pop
or
or
inc
mov
mulb
inc
enter
out
or
loop
int3
sub
cmpsl
pop
pop
dec
rcr
js
loop
movsb
jecxz
jo
push
fisubl
pop
cmp
cmp
mov
jnp
insb
push
mov
lret
cs
enter
daa
jg
dec
cmp
aaa
jno
inc
cmpb
dec
std
cmp
or
shll
and
inc
cs
ja
mov
test
jle
mov
cmpsb
mov
pop
mov
aad
insb
pop
mov
xor
out
loope
inc
jne
out
call
inc
ds
insl
insl
adc
jns
xor
sbb
sbb
lea
inc
jp
int
inc
bound
and
testl
sbb
push
ret
sub
sub
cmp
test
jg
xor
jne
inc
je
mov
sbb
and
arpl
push
pop
or
into
fadds
cmc
mull
test
lret
mov
add
cmpl
xor
mov
aas
fiadds
mov
pop
jnp
jle
ret
mov
inc
lods
or
mov
out
out
cmp
dec
xor
mov
decl
cmp
into
in
movsb
gs
adc
sbb
mov
adc
mov
adc
popa
push
add
fdivrs
stc
and
xlat
mov
sbbb
imul
cmp
sub
nop
shlb
adc
inc
cmc
mov
les
lods
xrelease
xchg
push
pop
or
int
cwtl
call
data16
adc
stc
or
mov
daa
pop
jmp
sbb
xor
jp
inc
fmul
jnp
sub
stc
shl
dec
nop
cmp
jb
pusha
jecxz
pop
mov
cmp
stos
cwtl
push
dec
inc
mov
dec
add
push
xchg
mov
aad
out
xor
into
mov
scas
or
das
xlat
push
push
mov
fsin
mov
rorl
push
insl
and
dec
sbb
inc
cmpsl
jle
mov
icebp
or
cmpsb
cld
mov
dec
lret
mov
jp
adc
and
and
mov
xchg
scas
rorb
pop
add
arpl
es
frstor
aam
xchg
rcrb
mov
popa
jmp
shrd
mov
enter
testb
inc
add
mov
outsl
test
push
mov
addr16
dec
pop
xor
pusha
lods
jb
cmpsb
sbb
sbb
loop
shr
mov
cmp
mov
inc
out
inc
xor
add
mov
pushl
out
push
jb
mov
dec
mov
pop
mov
push
pop
loop
cwtl
ja
out
cmp
popf
lret
aaa
and
jmp
push
push
cs
jne
cs
mov
mov
stc
in
xchg
push
jns
dec
xchg
in
cmp
xchg
std
les
mov
test
clc
adc
fisubrs
jp
mov
mov
mov
mov
out
push
mov
in
pop
mov
fildll
push
and
add
xor
out
xor
popf
mov
lret
mov
inc
mov
scas
and
lahf
and
sbb
jle
push
mov
adc
mov
ret
mov
cmp
inc
jge
divl
mov
jo
sbbl
fidivrl
xchg
inc
xchg
mov
fisubrl
jmp
scas
cmp
shl
mov
and
hlt
pop
xchg
lods
arpl
dec
inc
mov
mov
or
nop
jp
or
lahf
int3
adc
jne
xchg
ficomps
cmp
jo
inc
xor
fcoml
jle,pn
xor
jnp
push
icebp
jnp
jbe
cmp
in
adc
popa
out
jle
ret
sbb
jl
and
ljmp
loope
and
popf
lahf
xchg
dec
xor
add
inc
outsb
daa
push
dec
xor
inc
fadds
and
mov
pop
js
inc
add
lock
loope
ss
sub
jbe
cmp
dec
ja
insb
fcomp
rclb
subb
sbb
dec
xor
pop
push
xor
lds
pop
lcall
sahf
stc
sbb
out
xchg
sbb
fdivrl
sub
loop
je
in
add
orb
inc
jne
mov
mov
pop
mov
icebp
jge
jb
test
cmp
mov
scas
sub
lock
fmull
stos
xchg
cld
push
cli
xor
pop
outsl
push
jb
loop
pushf
dec
stc
inc
fcmovb
or
inc
sub
nop
lods
out
sub
mov
dec
out
jl
leave
data16
int
push
cmp
cmp
or
mov
xchg
loopne
cmp
pushf
jl
or
imul
sub
sbb
mov
out
sbb
mov
adc
sub
xchg
mov
aam
adc
pusha
xor
sbb
cmp
dec
loop
cld
inc
adc
js
and
les
mov
xchg
sbb
je
xor
call
in
dec
pop
cwtl
popa
loopne
adc
pop
pushf
add
sub
in
lods
clc
inc
inc
out
mov
in
aas
lret
jb
and
dec
pop
push
je
ss
ds
dec
std
sub
insl
cwtl
push
mov
dec
out
dec
or
pop
pop
insl
or
mov
adc
lock
testl
mov
nop
mov
das
rcrl
ffreep
insl
or
scas
dec
adc
ljmp
pop
dec
icebp
loop
cld
loop
out
lret
and
es
cltd
mov
rolb
pop
sub
imul
out
rcr
leave
andnps
lods
push
sbb
xchg
push
inc
popa
add
mov
dec
fsubl
cvttps2pi
push
inc
jge
setp
cmp
test
xor
imul
test
stos
pusha
xchg
mull
inc
scas
ret
fdivp
stos
jns
aas
out
movsl
xchg
jl
mov
add
cmpsb
out
xchg
lods
js
inc
mov
or
and
mov
pop
mov
mov
popf
rcrb
ja
adc
dec
push
mov
or
pop
into
fwait
lret
push
test
jne
test
mov
mov
push
bound
adc
scas
xchg
dec
cmp
leave
dec
push
sub
repz
addr16
xor
mov
incb
mov
fbld
mov
cmp
push
pusha
inc
outsb
inc
fisttps
inc
iret
jmp
add
cwtl
out
clc
cs
mov
imul
adc
and
jmp
xor
nop
das
jle
jmp
stc
adc
inc
mov
xchg
push
insb
ret
adc
mov
pop
jae
add
or
pop
jmp
push
pop
rclb
pop
stos
fwait
imul
scas
sahf
sbb
lds
lcall
jne
adc
inc
loopne
hlt
bound
arpl
clc
inc
rcrb
add
test
insb
push
inc
aaa
dec
mov
mov
int3
pushl
icebp
fidivrs
cmpsl
lods
jo
xor
movsl
jae
and
icebp
cmp
adcb
cli
and
cld
mov
enter
push
cmp
push
cmc
jno
jg
dec
fildl
movsl
inc
push
pop
and
popa
lahf
mov
in
enter
cmp
mov
test
addr16
mov
test
nop
pop
fst
jno
dec
push
add
das
cltd
mov
or
xlat
adc
mov
cmpb
imul
je
add
add
push
lret
int
push
popa
sub
sarl
jle
jbe
jno
in
fsub
ret
ret
sub
mov
test
jle
jg
movsb
loop
ljmp
mov
in
and
dec
cmp
jp
out
push
adc
mov
clc
insb
mov
sbb
push
popa
sahf
jno
cmc
ret
lret
mov
outsl
std
or
loop
xchg
inc
stc
stc
clc
or
xchg
inc
cld
adc
imul
fcmove
mov
es
inc
jb
cld
lret
xorb
cmp
mov
fwait
repnz
stos
mov
bound
loopne
out
pop
sbb
xchg
insb
imul
dec
inc
add
addr16
sbb
cli
jle
xlat
push
sub
mov
aas
cmp
sti
setg
aad
js
nop
xchg
dec
inc
insl
sub
mov
js
lea
and
add
lea
repnz
fs
notb
mov
ljmp
push
or
inc
push
adc
aas
imul
xor
je
aas
xor
in
and
inc
push
jp
rorl
mov
shll
jle
sti
dec
cmc
test
fisttpl
gs
adc
bound
test
or
dec
pop
cmp
xlat
ret
scas
shl
push
pusha
negb
jmp
dec
psubsb
cmpsl
jl
sarl
sbb
cld
or
das
ja
les
or
pop
shlb
or
aam
sbb
mov
push
loop
lock
cmp
pusha
mov
dec
add
test
sbb
lods
cli
mov
mov
insb
sub
xchg
push
push
adc
sbb
psubw
and
dec
sbb
test
fidivl
sub
mov
aad
ja
push
cmp
xchg
sub
pop
mov
mov
out
or
pop
add
cmc
sbb
pushl
pop
push
or
xor
repnz
bound
mov
pop
xchg
push
ja
mov
push
inc
inc
cmp
mov
mov
jne
xchg
mov
mov
mov
orb
pop
lcall
or
dec
sub
out
push
jp
xorb
setb
mov
add
dec
sbb
repnz
pusha
loopne
aas
fildll
aam
sar
rclb
pop
add
sub
popf
ficompl
inc
mov
mov
push
dec
and
push
xchg
insb
cmc
adc
jnp
pop
pop
jle
jbe
push
mov
adc
popa
loop
lock
lods
sub
pop
je
or
mov
lea
ja
dec
xor
inc
and
cmpsl
fisubl
ret
pusha
mov
scas
add
lds
negl
mov
enter
mov
mov
add
ret
sub
jge
mov
pop
aaa
push
mov
or
sbb
dec
into
adc
ljmp
fisubs
lahf
xor
push
xor
test
inc
and
mov
cmp
xchg
int3
mov
in
jecxz
inc
enter
daa
jl
out
cmp
ds
mov
dec
dec
int
push
mov
mov
and
stos
enter
fldcw
fists
xor
pop
add
pop
js
pusha
push
pop
outsb
xchg
loop
inc
lcall
xor
sarb
out
pop
adc
or
cmp
push
mov
sbb
repz
aas
shll
mov
xor
mov
xchg
sbb
pop
in
fs
jo
nop
sub
xchg
outsb
cmp
adc
adc
sbb
mov
jecxz
mov
arpl
nop
mov
push
fs
xor
incb
cli
sub
lds
sbb
push
test
mov
aad
push
mov
movsl
push
loop
mov
ret
fs
inc
xchg
adc
imul
insb
ja
imul
out
cli
das
in
xor
pop
cmp
cs
or
movsl
in
gs
mov
adc
and
adc
mov
pushf
data16
pop
les
xor
cmp
jl
in
stos
arpl
sti
mov
pop
loopne
stos
xor
xchg
test
repz
hlt
int
xchg
sahf
test
call
jecxz
lock
decb
mov
or
cs
mov
push
add
inc
sub
aas
or
orb
outsb
je
fwait
popf
jecxz
icebp
cmp
inc
fimull
std
jp
dec
cwtl
test
push
jae
mov
adc
insl
add
jl
mov
mov
ds
add
lock
jb
je
insl
mov
aad
and
popf
xchg
shll
mov
pop
xchg
shrl
cmp
dec
or
pop
mov
nop
enter
sbb
mov
sbb
pop
in
dec
rolb
stc
sub
fwait
ret
mov
mov
fstl
outsb
mov
xchg
lea
ljmp
pop
lods
xlat
jns
dec
dec
sbb
popf
je
push
clc
stos
addps
xchg
add
cltd
std
out
test
add
out
xor
dec
pusha
test
popa
add
sbb
cmp
daa
pop
data16
stos
push
cmp
add
adc
mov
or
dec
divl
scas
test
gs
stc
pop
adc
clc
ja
in
dec
push
mov
mov
fwait
sub
pushf
push
cmp
fdivs
lret
cmp
je
cmpsb
inc
push
jns
lcall
ljmp
sub
jmp
test
jp
cmc
xorl
mov
cltd
lcall
out
xchg
lret
pop
jbe
cltd
ljmp
xchg
xchg
pop
addl
mov
add
mov
std
ret
sub
push
ljmp
push
lock
push
iret
cmp
iret
xchg
ror
dec
leave
lcall
test
inc
sahf
cli
mov
pop
mov
andb
or
push
push
inc
mov
clc
test
sbb
jmp
lcall
in
shlb
and
xlat
stc
mov
sbb
or
clc
sub
jnp
pop
inc
addr16
dec
stc
rcrb
mov
adc
add
fs
int3
aad
pop
pop
adc
inc
fiadds
add
jo
dec
fsubrs
stos
inc
mov
movsb
cmpsl
or
push
ficomps
jbe
inc
mov
lret
enter
daa
jnp
cmpl
fisubrs
jl
xor
femms
cltd
mov
movsl
dec
arpl
and
test
repz
push
outsb
scas
ret
test
stos
mov
xchg
and
sub
pop
lods
jle
loope
fcoml
sub
push
cmp
xorl
out
adc
in
pop
popl
dec
nopl
into
clc
xor
and
push
mov
int
push
iret
sub
or
pop
arpl
into
lcall
push
sub
push
outsb
popf
cltd
icebp
test
mov
mov
lds
stos
mov
lahf
push
push
push
rorl
cwtl
add
lock
sbb
pushf
insb
push
lret
or
or
sbb
loopne
or
push
shll
andb
mov
sbb
fs
lahf
sbb
adc
subl
repnz
pop
pop
pop
cli
bound
fstpt
out
or
aad
into
jno
hlt
gs
in
loopne
jl
pop
pop
jns
adc
stos
or
std
or
leave
mov
sbb
jo
mov
pushf
jecxz
sub
mov
out
insl
ret
leave
push
xor
repnz
enter
stc
dec
jmp
fld
lret
mov
aad
xchg
popa
ret
imul
ss
mov
movsb
adc
sub
stos
in
cs
cltd
add
inc
inc
scas
xchg
aas
cmpsl
push
push
jb
push
rorl
dec
je
dec
icebp
jecxz
push
adc
inc
sarb
aas
out
out
mov
insb
repz
stos
subl
lock
push
pop
mov
lock
sbb
das
push
mov
leave
mov
in
lret
test
imul
mov
and
cmpsl
jp
in
iret
xor
addr16
jl
arpl
and
jo
ret
mov
add
adc
add
pop
rcl
lcall
mov
jg
ret
dec
cmc
lret
sti
jnp
repz
pop
cmp
fucomip
in
mov
popa
inc
testl
mov
in
jecxz
rorl
fwait
add
jno
xor
mov
xor
mov
stos
dec
mov
sbb
mov
insl
lahf
rorl
arpl
jle
inc
xor
into
ja
add
sub
test
outsb
int
xor
or
push
pop
xor
je
mov
push
pop
test
mov
cld
xchg
or
inc
mov
inc
jb
and
push
adc
fists
jne
jno
mov
xlat
dec
out
sub
mov
cmp
push
jns
push
or
outsl
dec
dec
xchg
cmp
gs
pop
pop
sub
in
push
ficoml
jl
mov
mov
sub
and
jbe
in
sbb
pusha
push
dec
leave
fucomip
mov
jmp
bound
pop
out
pop
popa
popf
sub
sbb
stos
imul
insb
lret
adc
jnp
inc
xor
insb
or
push
lea
stos
fnsave
scas
or
ret
adc
loop
xchg
inc
test
mov
push
inc
jp
or
lret
or
and
push
xchg
ror
sbb
inc
cmp
cmp
cmc
add
sbb
cmp
push
add
mov
outsb
mov
test
inc
add
arpl
sbb
jge
xor
sbb
movsl
add
pusha
mov
add
ret
int3
rolb
inc
out
xchg
fisubs
mov
js
inc
push
mov
or
cmp
stos
in
movsb
xor
imul
mov
add
add
imul
sarb
dec
sub
iret
movsl
push
add
and
xor
push
inc
pop
out
test
jne
out
inc
adc
imul
cld
shlb
adc
loope
pop
stc
sub
hlt
call
ds
pusha
aam
mov
cmpsb
rol
jb
out
hlt
cmpb
sbb
lret
or
mov
adc
sub
mov
and
jbe
inc
fsub
jg
sub
shr
outsb
add
mov
cmpb
lahf
mov
divb
inc
push
push
cmpsb
cmp
stos
add
negl
mov
mov
or
fwait
jl
sbb
gs
mov
jecxz
sbb
jmp
les
dec
loop
stos
cmp
fs
in
and
xor
lods
mov
mov
jns
pop
das
xor
xchg
xor
cmp
jne
or
into
push
popa
les
adcb
jne
adc
imulb
fsubs
enter
pop
imul
movsb
and
mov
mov
mov
mov
xorb
sbb
cs
in
inc
pmullw
fcoml
dec
pop
jns,pn
pop
mov
std
mov
les
and
rorb
mov
pop
or
pushf
mov
lahf
jmp
add
inc
pusha
movsb
push
pop
sbb
inc
xchg
stos
jb
jns
dec
jecxz
test
adc
mov
std
enter
cli
or
pop
xor
addl
xchg
fidivrl
or
mov
arpl
mov
insb
cltd
fldenv
dec
dec
rcl
das
lods
mul
adc
insl
movsl
decb
add
push
mov
ds
in
cld
mov
in
lret
filds
lahf
mov
or
sub
lock
gs
pop
cs
frstor
sbb
xchg
or
ljmp
lods
cmp
mov
aad
jne
sub
push
scas
pusha
pop
movhps
add
xchg
pusha
jle
es
pop
push
jne
push
dec
or
test
push
cmp
jno
stos
shll
fdivrs
xor
into
add
or
or
cmp
or
stc
in
xor
mov
xchg
lret
mov
mov
ja
enter
jge
inc
or
cmpsb
fwait
xchg
out
jne
jnp
mov
adc
or
int3
mov
scas
cli
mov
xchg
mov
cmc
loop
lcall
mov
fildll
stos
fldcw
iret
jp
test
mov
fwait
and
dec
dec
in
inc
jno
mov
mov
or
xchg
aas
fs
jmp
sub
adc
out
sahf
in
dec
fidivrl
and
jnp
das
stos
fcoml
insb
ss
jnp
pop
inc
jle
aad
push
pop
inc
push
adc
push
sbb
out
fstps
daa
roll
push
push
push
inc
outsb
or
inc
cmp
fidivrl
lock
pop
jns
imul
pop
scas
sub
cli
lds
notb
adc
fiadds
push
push
hlt
mov
xchg
lret
mov
jge
push
cwtl
sbb
jo
dec
cli
cmpsl
or
cltd
add
imul
jb
inc
fimuls
sub
jo
mov
scas
and
xchg
and
add
movsb
mov
inc
out
push
ds
cwtl
pop
gs
daa
jns
pop
cmp
xor
or
inc
orl
pop
movsl
pop
add
and
sbbl
inc
mov
inc
and
sti
cmpsb
mov
jne
jns
imul
out
pop
sub
and
sub
movsl
mov
adcb
push
jmp
rcrb
test
pop
test
add
out
xor
xchg
dec
add
int
xor
sub
jns
lcall
jbe
xchg
data16
sub
add
shr
jg
mov
ss
pushf
insb
mov
and
push
xor
data16
or
lret
rol
xor
mov
xchg
add
fbld
xor
cmc
lds
xchg
mov
adc
fcmovnu
rorb
xchg
fidivs
ja
cwtl
lods
jb
int3
mov
out
test
cli
enter
add
add
cmp
shll
inc
into
aaa
sub
adc
jle
pop
cltd
jne
adc
and
mov
xchg
adc
or
out
js
cmc
cmc
es
out
pop
xlat
sbb
mov
jmp
enter
pop
decb
cmpsl
aad
lds
dec
mov
mov
fnstenv
mov
popa
mov
xchg
out
repz
push
arpl
pusha
cmpsl
pop
pop
pop
hlt
xchg
adc
pop
pushf
pop
popa
shr
loope
cs
addl
ret
cwtl
push
aas
in
mov
dec
pop
std
jl
xor
pop
jecxz
ljmp
outsl
ja
cwtl
mov
mov
sub
cmp
dec
inc
testl
or
or
mov
aad
lock
or
mov
and
and
and
mulb
add
insl
mov
repz
js
nop
mov
adc
pop
mov
mov
es
lds
pop
inc
pop
ret
fildll
xchg
pop
repz
xor
ret
push
sub
jbe
dec
fisttpll
insb
xchg
dec
or
popa
jne
pop
lods
cmpsb
sub
sarb
jb
push
push
mov
pcmpeqw
add
pop
insb
test
or
loop
dec
jno
repz
dec
inc
xchg
jmp
sar
add
pop
sub
and
jb
xchg
shl
add
popa
mov
ljmp
add
pop
enter
sti
test
outsb
pusha
pop
mov
inc
push
lods
dec
sub
jmp
or
popf
push
fwait
mov
and
jne
ljmp
call
push
jns
mov
in
dec
inc
xchg
xlat
sbbb
sbb
dec
sub
ficompl
push
fadds
jp
xchg
imul
fs
mov
test
into
add
inc
neg
sub
mov
jmp
clc
pop
scas
subl
jmp
ss
jno
jbe
xchg
mov
mov
addr16
and
test
cmc
jnp
cmp
enter
push
adc
pop
iret
insb
pushf
dec
ret
movsl
pop
push
fdiv
inc
mov
rclb
or
roll
inc
and
jo
adc
mov
sub
sti
inc
scas
lea
lds
add
gs
adc
dec
leave
xchg
lea
fnstenv
fwait
inc
iret
fstps
jge
push
mov
adc
aaa
or
clc
or
test
cmpsb
add
int3
xchg
lock
mov
push
dec
xor
ret
add
scas
add
xor
movsb
dec
mov
push
lret
popf
and
addr16
in
jg
and
clc
lret
js
jns
iret
mulb
add
fimull
lahf
push
push
inc
sahf
xchg
movsl
arpl
and
mov
lahf
push
mov
les
or
inc
xor
lret
pop
insb
pop
mov
xchg
push
pop
push
add
pusha
shl
vcvttsd2si
sub
cmp
arpl
mov
shlb
lret
das
test
jecxz,pt
add
jo
xor
pop
lods
cltd
fdivrl
movsb
stc
dec
sub
cmpb
std
cli
fwait
push
and
push
cmp
sbb
sbb
data16
and
test
xor
out
cmp
jg
into
jb
mov
mov
xchg
jl
int3
outsl
inc
push
jo
aad
lea
pop
fsubs
sub
lret
test
jno
sbb
fisubrl
cmc
cmpsb
pop
mov
outsl
pop
cmp
scas
stc
mov
mov
dec
mov
bound
mov
pushf
jl
push
jo
out
pop
dec
cli
sti
push
adc
xlat
sub
or
sti
into
sbb
jnp
test
mov
adc
scas
imul
negb
data16
dec
sbb
and
xchg
xlat
pop
push
dec
sub
je
mov
push
push
cld
sti
jp
lock
xor
sub
adc
int
fisttpl
ret
pop
inc
xorl
fldcw
or
les
repz
cmpsb
lea
cld
push
fists
sbb
adc
ljmp
ja
inc
cs
sbb
inc
outsb
xlat
insb
inc
xchg
sub
jb
pop
stos
dec
roll
test
jecxz
sbb
std
push
in
ret
aaa
xchg
mov
xor
mov
add
xorl
jmp
cmp
lret
pop
aas
inc
xlat
mov
popl
das
lock
adc
mov
shll
pop
imulb
xor
push
pop
dec
test
cmpsl
ja
nop
mov
in
jmp
cld
in
cmp
mov
mov
xor
pusha
inc
mov
pusha
and
push
stc
pop
sub
xchg
ret
stc
push
jb
stc
xchg
mov
out
clc
divps
ljmp
cltd
lods
adc
adc
xchg
mov
dec
xor
aam
test
cltd
fxch
pop
test
adc
push
sti
repz
dec
fcom
mov
pop
fstps
sbb
aaa
pop
rorl
sbbl
test
imul
push
add
jl
das
decl
loopne
xor
or
iret
cmp
mov
xchg
mov
jno
and
decl
pop
ja
mov
dec
inc
aaa
push
push
or
daa
sub
enter
mov
test
aam
pop
cmc
jns
push
pop
in
dec
gs
es
mov
or
int
scas
or
cmpsb
mov
jp
lret
inc
xchg
or
mov
mov
cmp
enter
mov
inc
filds
bound
movsl
divb
cmpl
cmp
ds
push
stc
pop
in
ret
and
fsubrl
xor
fisubrs
jle
test
adc
sub
addr16
test
xchg
cld
jae
enter
sub
or
cmp
mov
lahf
cwtl
rcr
cmpsl
test
pop
pop
imul
sbb
mov
test
mov
cld
int3
repnz
jnp
or
test
and
sbb
sub
jge
cmp
aaa
leave
das
in
cmp
add
ret
or
shlb
mov
jo
imul
testl
scas
push
sbb
jbe
add
in
xchg
cltd
enter
daa
ja
push
cmp
addr16
fcomp
enter
mov
jne
gs
and
xor
and
out
push
mov
dec
or
incb
push
test
dec
cmpsb
js
iret
inc
pop
test
rcrl
inc
test
fidivs
pop
adc
push
push
mov
mov
cmp
add
dec
nop
xor
icebp
int
mov
sbb
lcall
xchg
fsub
scas
mov
outsb
sub
incb
or
xchg
mov
push
inc
mov
jl
and
adc
jae
lds
fcompl
inc
negl
and
roll
mov
sahf
cltd
icebp
das
cmc
insl
or
xor
mov
outsl
aaa
in
lock
xchg
int3
stc
inc
and
or
dec
scas
sahf
ss
lods
cmpsl
lods
inc
mov
in
push
mov
sub
scas
xor
movsl
adc
or
mov
dec
loopne
xchg
xchg
pop
xlat
adcl
sub
mov
add
hlt
mov
cmp
xlat
cwtl
test
mov
shll
push
enter
les
nop
test
lahf
dec
jnp
movsl
inc
xchg
out
fldenv
stos
fdiv
lcall
lea
and
pop
add
adc
adc
in
daa
mov
push
fildl
shlb
aas
and
lret
sbb
dec
dec
mov
je
push
daa
jecxz
mov
push
cmp
cwtl
sub
bound
xor
orl
mov
ds
loop
mov
aas
lods
mov
das
iret
imul
mov
sbb
or
shll
pop
dec
and
test
cmpsl
jbe
inc
mov
ret
dec
xor
lret
sub
dec
mov
in
lods
and
sti
sub
pop
jg
adc
and
sub
movsl
aam
xor
ret
mov
es
iret
fstp
out
cli
clc
dec
out
xchg
enter
mov
adc
jl
movsl
mov
adc
push
aas
pop
adc
xor
jb
mov
and
test
cmp
pop
dec
aas
insl
call
xchg
cmp
cmpsb
in
into
pop
mov
dec
mov
add
xchg
ja
ljmp
or
and
mov
je
dec
mov
mov
jnp
dec
prefetch
into
push
pop
or
test
adc
test
push
hlt
fnstenv
cmpsb
xchg
bound
sahf
out
fwait
popf
test
sahf
jbe
sub
rol
popf
addr16
std
daa
jp
rcll
sbb
jo
mov
sub
dec
outsl
jbe
in
adc
pusha
adcb
xchg
mov
loope
xchg
mov
cmp
cmp
push
mov
cmp
fldcw
mov
add
ja
mov
inc
fdivrl
leave
push
xor
or
iret
sub
adc
xor
jae
add
push
dec
dec
xor
push
push
dec
or
push
repnz
sbb
rcrb
push
jmp
scas
push
outsl
test
sarb
sub
mov
call
mov
inc
jbe
aad
add
push
xchg
mov
aaa
mov
pop
or
mov
int3
insb
xchg
sbb
into
out
xor
xor
jns
pop
scas
mov
and
movsb
pop
xchg
jbe
adc
inc
enter
daa
jbe
fdivrs
xor
dec
int
movsl
ss
dec
in
js
or
mov
dec
xchg
lahf
mov
cmpsl
push
lea
inc
push
mov
pop
fsubs
out
iret
mov
pop
call
cli
ljmp
mov
cmp
mov
adc
sub
repnz
xchg
add
adc
lods
mov
add
andb
jnp
cmpsb
pop
call
mov
pop
fisubs
xor
arpl
imul
pusha
fcoml
and
test
inc
jno
and
inc
jg
mov
cmp
jmp
and
stc
insb
push
jbe
xor
xchg
sahf
xchg
notl
mov
rcrl
rorl
mov
sahf
cmp
push
xor
aaa
cmpsl
outsl
push
mov
ret
stc
cli
mov
insl
adc
fsubl
dec
test
out
lahf
inc
cli
popa
inc
outsb
xor
icebp
ljmp
dec
xchg
gs
inc
call
pop
testb
imul
xchg
test
mov
mov
xlat
xlat
ss
out
call
mov
sti
fadds
or
aad
fnstenv
sbbl
dec
fisubl
inc
test
out
pop
fidivl
mov
xchg
xor
pop
lea
call
fnsave
pop
xor
fs
or
pushf
pop
sub
jmp
sbb
add
lcall
ret
jb
push
or
je
test
mov
push
jbe
std
adcl
addr16
mov
inc
push
dec
bound
fistl
dec
sub
es
push
popa
addr16
movsb
lcall
lock
dec
in
shlb
jne
xchg
mov
lcall
lret
fwait
jp
mov
adc
cmc
jge
mov
sahf
mov
mov
aam
xor
pop
nop
xlat
jmp
into
fldl
jmp
jecxz
pop
js
ljmp
loope
out
adc
mov
clc
xchg
inc
scas
jge
sbb
add
dec
jge
inc
sbb
test
stos
xchg
push
xorl
test
mov
cld
mov
cmp
sbb
push
push
out
mov
xor
mov
pusha
decl
add
mov
cmp
mov
ja
add
les
sbb
ja
mov
test
jns
or
mov
fwait
inc
out
push
push
out
xor
mov
mov
int3
bound
sbb
aaa
in
inc
push
xchg
les
loope
aad
fwait
ss
jb
addr16
inc
jp
insb
pop
mov
mov
mov
push
bound
push
sbb
xchg
int
pusha
sbb
jne
xchg
mov
bnd
pop
push
sahf
sbb
mov
popf
jmp
push
mov
ja
lret
stos
test
mov
mov
push
scas
jnp
outsb
dec
jle
add
push
jns
pop
adc
jo
iret
mov
adc
cmc
rorl
inc
loopne
in
jae
cmpb
in
or
xor
lea
jge
fimull
jmp
adc
fmuls
mov
sbb
mov
xchg
fistpll
or
or
hlt
mov
fwait
dec
inc
fcomps
jge
mov
sbb
aaa
inc
jne
or
lahf
das
add
pushf
int3
push
cmp
push
bound
xor
aam
and
sbb
scas
dec
movsb
jmp
inc
jge
adc
test
jmp
xchg
cmp
mov
jl
mov
dec
push
inc
aaa
push
jmp
mov
js
test
lahf
lods
andl
test
insb
rorb
cmpsb
sarb
adc
or
push
vunpckhps
daa
mov
adc
pop
lahf
cmpsb
pop
test
enter
ljmp
cmp
loop
xchg
int
mov
ds
pop
mov
lcall
inc
fdivrl
and
cmp
and
fnstenv
cmp
insl
dec
frstor
stc
and
push
jns
dec
cmp
push
mov
notl
shrl
lret
dec
shll
lock
xor
sti
inc
mov
mov
adc
pop
push
stc
mov
pushf
fs
xchg
fsts
in
fdivr
cmpl
push
pop
push
out
add
or
cmp
mov
adc
ret
in
gs
pop
adc
out
adc
push
outsb
adc
pop
ret
add
lds
sbb
shrb
sahf
sub
mov
in
xchg
mov
jne
fwait
cmp
pop
into
cli
dec
cmp
addl
dec
fsts
loop
in
mov
xchg
repz
call
pop
imul
pop
shll
or
ret
jmp
or
cs
xchg
roll
push
aas
popa
ds
jb
ss
dec
ss
ret
push
mov
pop
es
std
or
xchg
sbb
pop
dec
dec
add
pop
sub
out
lock
stc
mov
das
shrb
xor
insl
sub
inc
dec
out
imul
jno
data16
gs
lret
or
orb
shrl
mov
movb
push
test
ret
cmpsb
adc
andb
mov
shlb
ljmp
int
push
jecxz
mov
test
jno
mov
and
psllw
xchg
cltd
jle
push
test
or
xor
push
inc
loope
dec
or
cwtl
mov
pushf
push
jecxz
lock
movsl
rcll
pop
adc
out
and
sub
int
jne
sub
xor
cmp
xor
clc
jle
add
mov
xor
ja
xchg
dec
cmc
lock
or
mov
pushf
push
mov
adc
fnstenv
idivb
jns
sbb
xchg
adc
mov
mov
pop
or
mov
addr16
out
scas
lret
sbb
mov
pop
push
dec
xor
ljmp
movsb
pop
or
mov
icebp
subl
out
pusha
les
out
in
push
mov
stos
stos
sbb
mov
dec
jnp
pop
imul
mov
adc
xor
ret
fstpl
sbb
inc
jmp
shlb
xchg
push
aad
add
lods
jecxz
inc
sbb
pop
fidivrl
jne
lret
sbb
imul
lds
movsb
shl
adc
pusha
sbb
lcall
cmp
inc
fcmovne
pop
jge
inc
mov
dec
cmpsl
aaa
push
pop
movsl
or
pop
stos
add
jae
int3
inc
mov
sti
fidivrs
mov
das
push
sub
and
imul
push
pop
scas
dec
jbe
xchg
jnp
sbb
fmul
in
imul
nop
pushf
cmp
mov
outsl
dec
ret
push
into
xor
movsl
jg
xor
lahf
int3
aam
push
xor
mov
call
dec
push
outsb
adc
cmpsb
inc
xor
pop
cmp
add
add
pop
data16
lods
push
gs
loope
dec
mov
mov
pushf
ds
xchg
mov
shl
jecxz
and
xchg
sbb
les
xor
or
es
mull
pop
mov
sbbb
sub
in
outsb
push
das
adc
dec
in
sbbb
jg
add
cmpsl
mov
mul
mov
fisubl
or
cmp
or
fsubl
lret
cmp
mov
lahf
pop
sahf
orb
cmc
ret
xor
jno
outsl
aam
adc
hlt
push
stc
push
cmp
adc
aam
ss
xchg
jp
cmc
or
mov
clc
out
out
mov
xor
push
add
inc
mov
cmpsb
je
mov
jl
pop
xor
iret
adc
hlt
imul
cmp
data16
sbb
or
daa
in
sub
sub
dec
in
add
add
mov
das
nop
cmp
std
inc
iret
cmp
inc
jns
lock
xchg
mov
popa
lea
mov
fninit
sbbl
mov
xchg
jmp
mov
dec
inc
mov
sbb
inc
into
aas
add
int3
jb
xchg
testl
dec
pushf
jecxz
sbbb
dec
enter
and
mov
ret
jne
or
filds
cmp
fcomi
jae
pop
lret
pop
jg
xchg
pop
enter
das
insb
xchg
loop
jns
adc
mov
jge
divb
cmp
movsb
mov
and
cmpsl
jae
fidivrs
dec
dec
pushf
cld
nop
mov
les
add
mov
fcompl
rcrb
push
aam
sub
xor
cltd
xor
dec
xchg
clc
sti
imulb
xchg
test
lret
bound
mov
fidivrs
mov
aad
push
push
rorb
inc
add
dec
pop
cltd
mov
xchg
push
mov
dec
je
cmc
test
pop
aaa
xchg
das
nop
sbb
fistpl
stos
iret
lock
jecxz
add
call
push
jno
jg
lahf
or
or
xchg
idivb
jmp
dec
ja
sar
dec
call
xor
fwait
mov
aas
addr16
lock
or
cltd
bound
mov
jns
push
jmp
cmp
into
xchg
bound
mov
or
imul
or
fidivrs
mov
sbb
mov
cmp
in
imul
push
adc
ffreep
popf
sahf
xchg
xor
in
out
inc
rolb
scas
push
popf
cmp
mov
cmc
xor
ljmp
fwait
mov
cltd
push
pop
cld
adc
dec
jne
pop
push
popf
pop
arpl
dec
inc
notb
dec
push
cwtl
insl
fmull
sub
inc
xchg
in
xchg
and
pop
imul
out
vpunpcklbw
mov
mov
movsb
leave
call
sub
arpl
sbb
jge
mov
cmp
or
sub
int3
sub
rorl
clc
call
xor
inc
sbb
adc
inc
movsb
push
push
push
push
pop
push
jbe
add
fbstp
mov
cmp
das
pop
jno
test
jl
daa
push
dec
xor
ja
mov
aas
movsl
xchg
and
pop
lahf
jmp
sbb
push
fstp
test
add
hlt
inc
std
jp
cmpsb
pop
adc
mov
xor
movsl
mov
push
test
shrl
xor
cmp
out
mov
sarb
fs
std
push
lahf
sbb
daa
add
push
pop
xor
and
push
xor
sub
push
ss
pop
outsb
jno
jl
inc
push
xlat
and
fcoml
insb
mov
test
dec
faddl
pop
pop
or
lretw
cli
mov
jb
and
inc
mov
jg
cmp
enter
xchg
push
lret
sbb
ficoms
sbb
lods
adc
mov
mov
outsl
mov
xchg
loop
push
mov
add
adc
pop
mov
fsubl
jne
push
pop
out
cli
imul
or
cmp
subl
mov
adc
mov
loopne
icebp
jmp
push
lret
sbb
imul
lea
inc
clc
adc
arpl
cmp
sbb
xchg
adc
dec
pop
clc
mov
insl
and
stos
loope
or
sub
nop
adc
push
dec
idivl
loop
sbb
jle
fld
sti
mov
mov
mov
jp
pop
loop
pop
dec
ds
adc
leave
xor
xor
dec
inc
adc
and
lahf
imul
frstor
sbb
rcr
je
popf
add
jp
and
pop
loop
std
pop
pop
cwtl
pop
in
sahf
mov
jb
mov
pop
xor
dec
and
fstps
jns
mov
or
lock
out
jnp
dec
push
out
mov
insl
repz
cmp
mov
xor
cmpsl
jb
mov
addr16
mov
cld
mov
pop
or
or
mov
sti
cmp
sub
popf
aam
and
pop
mov
fnsave
dec
clc
ss
xor
test
shlb
lods
sub
cmc
mov
lret
xchg
sbb
jg
stos
jo
imul
add
and
cltd
in
fcompl
fisubs
iret
mov
push
lret
dec
fcmovnb
shrl
mov
add
pop
imul
out
out
loop
xchg
inc
push
add
lock
data16
or
adc
xor
outsl
and
adcb
and
pop
cmpsb
cld
mov
mov
ds
sub
mov
fwait
iret
adc
jne
mov
mov
shl
out
and
vcvtsd2usi
sub
in
das
aam
mov
cmp
push
and
mov
movsl
fwait
jp
cmpsb
mov
jne
enter
add
sti
mov
in
push
add
aaa
dec
xchg
add
and
xchg
mov
movups
dec
jae
popf
pusha
mov
cmc
push
xor
in
stos
add
push
and
pusha
xchg
insb
and
jnp
xorl
gs
push
dec
aaa
xor
iret
cmpsb
scas
adc
imul
lcall
jae
xchg
mov
pop
pusha
inc
or
mov
xor
xchg
js
imul
lcall
push
shlb
sub
and
push
cmp
leave
pop
dec
repz
fwait
movsl
xor
add
inc
loope
mov
sbb
push
aaa
test
and
xor
int3
sbb
pop
mov
add
jo
xchg
in
cmp
shlb
jge
cmp
enter
insl
adcb
xchg
loop
in
jmp
add
daa
jb
inc
cmp
and
jno
mov
push
pop
mov
push
xchg
xor
movsl
lea
lret
sbb
jp
fldcw
test
int
inc
mov
sti
cmpsb
dec
ja
mov
pop
js
mov
pop
in
aam
mov
fisubrs
scas
sarl
dec
iret
pop
ds
inc
pop
adc
cwtl
test
xor
mov
xor
outsl
scas
int
dec
fsubrl
bound
pop
fimull
add
cs
mov
sub
out
roll
mov
jg
mov
push
mov
inc
add
and
ds
cmp
cmpl
push
jl
lret
push
shll
mov
or
out
sahf
enter
push
add
outsl
xchg
cwtl
in
loop
xchg
stc
xchg
in
lea
addr16
sbb
dec
mov
or
out
dec
test
sub
pop
xchg
cmp
scas
testb
les
gs
dec
xchg
loopne
jns
pop
jb
mov
imul
add
divl
data16
pop
sbb
add
xlat
shll
clc
sub
cmp
fcoms
push
incb
add
jno
sbb
out
addr16
push
loope
inc
cmc
jbe
fnstenv
xchg
pop
repz
insl
xchg
cmp
cmp
pusha
sbb
fldenv
cld
adc
sbbb
imul
cwtl
rol
inc
aaa
inc
stc
aas
or
xor
ljmp
inc
and
into
sbb
std
add
shlb
mov
movsl
jno
icebp
pop
outsl
cmp
stos
push
fistl
jecxz
adc
pop
mov
push
sub
xchg
ret
mov
mov
and
bound
sub
idiv
fisubrl
movsl
mov
cmpsl
jno
out
mov
negb
cld
out
jo
push
xor
mov
out
mov
sbb
jnp
inc
push
test
mov
aas
ret
push
cmp
or
push
fstpl
cmp
ljmp
out
lods
xchg
popf
mov
mov
arpl
push
xchg
xor
push
cmp
and
push
test
nop
cmp
loop
dec
inc
rolb
xchg
jb
sbb
enter
jbe,pn
adc
out
stos
lods
xchg
add
push
inc
out
add
or
mov
mov
cmpl
pop
popa
sbb
ja
negb
dec
into
or
inc
shll
imul
push
push
lcall
mov
stos
cmp
add
bound
jns
movsl
stc
in
es
xchg
add
mov
pop
xor
mov
into
rcrl
jp
and
mov
adc
mov
in
cltd
xor
mov
cli
xchg
xlat
push
jmp
test
adc
lret
stos
adc
mov
jae
xor
cld
pop
pop
insb
mov
cmp
outsl
push
push
xchg
push
repnz
mov
add
xchg
pop
rol
cwtl
inc
or
out
jb
dec
push
push
fs
push
lahf
xor
ja
ficoml
xor
iret
and
mov
cltd
push
inc
outsl
pop
mov
pop
sbb
hlt
out
add
adc
jge
push
or
xor
aaa
inc
xor
add
add
int3
add
jno
ljmp
xor
inc
jne
scas
sbb
push
cmp
cmp
jbe
cmp
aad
gs
jno
sub
xor
jp
loop
lahf
jl
jmp
dec
js
mov
and
mov
push
lods
mov
test
cwtl
mov
test
int3
adc
mov
dec
js
imul
push
dec
stos
loope
daa
inc
sub
add
cmp
cmp
jg,pt
test
pop
adc
shlb
pop
cmp
pop
inc
sbb
popw
xor
jb
int
dec
add
fnsave
test
pop
xor
jbe
test
pop
sub
mov
repz
pusha
mov
enter
pusha
ja
cltd
in
and
mov
ret
fdivrs
loop
notl
adc
lret
dec
rorl
mov
ja
sbb
cmp
pop
cmc
pop
pop
mov
neg
ret
pusha
jmp
lods
in
loop
lea
sbb
test
sub
ss
scas
lods
stos
jns
mov
inc
out
lds
xor
scas
pop
or
pop
into
dec
fsubrl
gs
jp
push
push
ds
xchg
push
adc
sar
imul
imul
or
repnz
mov
outsb
xchg
sub
mov
inc
ficoms
sti
inc
arpl
daa
xor
mov
insl
inc
dec
mov
roll
arpl
fldlg2
push
clc
les
sarl
jmp
xor
fistpl
in
pop
imul
jnp
add
jno
cs
pushf
stos
inc
pop
pop
testl
test
jb
fistpl
je
cmp
jecxz
fidivrl
outsb
enter
xchg
cwtl
lea
mov
pop
ret
mov
or
dec
stc
mov
fildl
or
jmp
stos
std
das
or
shll
fstpt
jae
pop
sahf
sub
fwait
mov
lcall
repz
cmpsl
jo
jns
int
repnz
int
repnz
adc
adc
mov
pop
and
popf
dec
imul
not
rclb
jmp
aam
pop
jo
loop
mov
mov
ret
cmp
aam
ljmp
lods
fmuls
mov
adc
xchg
stos
icebp
jns
popa
jb
and
add
xchg
lret
test
adc
push
push
and
dec
test
es
xchg
add
pop
mov
ja
out
lods
pop
add
cmp
xor
pop
or
dec
stos
xor
xor
jle
xchg
aam
sbb
xchg
ja
into
cmc
dec
shrl
inc
pop
push
es
sbb
and
cmp
jo
mov
cltd
es
loopne
jmp
notl
adc
mov
xchg
dec
pop
lock
mov
sub
mov
shll
xchg
jp
push
push
mov
js
mov
sub
dec
rorl
pusha
and
sbb
and
xchg
stos
xchg
sub
push
in
testl
scas
and
mov
mov
and
adc
insb
stc
mov
jnp
mov
sub
adc
clc
inc
iret
fs
ret
mov
xchg
sahf
inc
pop
push
js
inc
icebp
jp
loope
jae
and
push
sbb
fimull
sub
es
sbb
jl
imul
scas
movsl
mov
clc
rcrb
mov
lods
sub
leave
dec
pop
jp
xor
inc
inc
out
xchg
jge
jp
sbb
mov
aaa
add
cli
or
inc
mov
pop
and
mov
cwtl
jge
add
mov
jo
addr16
clc
mov
loop
cmp
mov
jmp
inc
add
jbe
add
shlb
daa
jo
push
cmp
mov
mov
mov
push
pop
add
inc
and
loopne
lahf
dec
dec
stos
push
jg
movsb
test
arpl
adc
fsubrs
mov
push
stos
xchg
loope
push
jnp
xor
cmp
rcl
dec
call
in
pushf
sbb
xorb
cmp
mul
out
add
nop
mov
push
add
mov
pop
int
xor
sub
addl
pop
push
lcall
fcoml
jecxz
fidivrs
xlat
flds
hlt
jnp
mov
out
mov
and
mov
sbb
push
mov
cmp
stc
ficomps
shrl
mov
cmp
inc
mov
mov
sbb
xchg
sahf
push
cmp
xor
popf
outsl
push
sub
loop
xchg
stc
inc
aam
mov
imul
lods
xchg
mov
hlt
out
mov
or
out
cmp
test
mov
cmp
gs
cwtl
pop
mov
push
xchg
ds
imul
push
add
ret
nop
aaa
popf
sbb
stc
or
xlat
push
cmp
sub
jne
in
scas
clc
cltd
sti
bnd
dec
push
lret
aad
mov
dec
adc
pop
inc
sbb
jp
sbb
lods
repz
push
xchg
ret
test
pop
xlat
cmc
push
pop
vpsrld
and
xor
cs
pop
addr16
cmpsb
inc
std
inc
insl
xchg
add
jl
aad
push
addr16
mov
je
xchg
push
mov
mov
loope
aaa
mov
imul
fs
inc
ds
insl
mov
dec
test
das
call
mov
push
and
insl
shr
push
push
testb
adc
mov
cmpsl
outsl
cli
inc
mov
movsb
repnz
jmp
lret
xor
repnz
and
cmp
xchg
shr
xlat
lods
sub
rcl
push
mov
jno
push
es
jmp
mov
xchg
cmpl
sbb
lods
imul
xchg
mov
icebp
imull
push
cmp
bswap
adc
inc
lret
jecxz
xchg
popa
ds
in
mov
lret
push
push
adc
scas
dec
adc
xchg
xchg
outsl
in
or
pop
adc
push
mov
mov
out
nop
add
push
sbb
incl
jb
lret
dec
pop
or
xchg
fsubl
mov
add
xlat
adc
ja
sub
dec
mov
and
out
dec
cs
inc
rcrb
loopne
gs
arpl
mov
lcall
mov
jns
mov
in
cmovge
jae
subl
mov
addr16
dec
inc
jp
xor
mov
mov
icebp
mov
dec
movsb
out
in
push
stos
pusha
mov
push
sub
pop
ds
xchg
sbb
xorl
add
push
mov
scas
stos
pop
jno
and
mov
mov
jl
jle
pop
iret
push
and
mov
iret
ret
in
ret
movb
vmwrite
lock
pop
or
movsb
lock
or
adc
add
mov
xchg
jge
inc
sbb
cmc
xor
inc
lods
scas
or
vmovd
mov
ljmp
leave
les
jl
mov
inc
ljmp
sbb
movsl
jns
roll
iret
int3
pop
fisubrs
rorb
imulb
scas
xlat
push
jne
jecxz
cmp
movsl
and
mov
scas
in
sahf
or
daa
outsl
jns
cmp
outsl
cwtl
jl
jmp
push
cmp
xchg
out
and
mov
push
push
push
icebp
test
cs
and
pushl
js
xchg
les
mov
mov
in
sub
pop
fnstcw
push
pop
or
adc
sub
sti
or
orb
sbb
push
pop
xor
push
je
ror
inc
decb
pop
push
or
lcall
mov
aas
cmc
adc
xorl
outsb
inc
xor
jmp
out
loope
sub
mov
cmp
mov
cmpsl
xor
push
mov
gs
mov
mov
lret
pop
sarl
enter
and
je
mov
cmc
movsl
inc
in
xor
cld
push
loop
push
or
sti
ljmp
mov
movsl
lods
js
cli
mov
and
out
cmp
mov
cmp
sub
iret
into
adc
gs
mov
mov
imul
add
ja
adc
pop
sbb
xor
xlat
nop
xchg
mov
sbb
pop
sti
mov
jno
aad
pop
or
xorb
inc
xlat
fstps
mov
daa
adc
repz
pushf
xchg
test
lea
adc
push
add
pop
adc
imul
add
fidivrs
inc
sub
fisttpl
jb
data16
add
jns
and
and
mov
mov
cwtl
add
mov
push
mov
add
leave
jb
fistps
rcrb
fidivs
mov
andb
push
in
dec
sbb
sarl
aaa
push
test
jmp
xchg
push
inc
dec
leave
or
inc
mov
jnp
dec
cld
addr16
test
movsb
dec
or
es
mov
ja
mov
mov
lahf
mov
adc
ret
add
sbb
xchg
mov
imul
clc
push
xchg
shrb
ljmp
shrb
fiadds
push
mov
xchg
push
pop
les
push
insb
rcrl
or
inc
push
test
test
in
xchg
mov
pop
cmp
pop
adc
movsl
fwait
out
jb
or
outsl
test
jmp
mov
pusha
or
adc
xor
dec
xor
mov
es
xchg
out
inc
ja
or
dec
cmpsl
jl
inc
xchg
or
inc
fwait
mov
std
jne
mov
xchg
out
sahf
movsl
and
sbb
repz
repz
xchg
in
stc
test
mov
aas
sub
test
push
addr16
out
loopne
jl
shrl
mov
pusha
dec
mov
in
int3
shlb
aad
fistps
mov
push
dec
outsb
xchg
out
and
out
or
push
or
push
xor
stos
int
das
and
xor
outsl
jnp
add
jle
inc
and
push
mov
iret
and
ret
push
inc
sub
pusha
jecxz
addr16
or
mov
pop
in
outsb
adc
xchg
aam
sbbl
sub
push
stos
or
lds
cmpsl
rclb
ds
jmp
scas
hlt
add
xor
in
leave
jo
leave
imul
sbb
add
les
add
mov
ja
jmp
dec
fdivs
jo
mov
mov
nop
and
sbb
cmp
xchg
dec
push
loope
aad
out
mov
enter
daa
outsb
lcall
addr16
jl
inc
rorb
inc
testl
test
hlt
cmp
xchg
pop
push
and
int
push
stc
sbb
shlb
sbb
rolb
pop
loopne
dec
push
xchg
loope
dec
or
or
sarl
add
adc
rolb
rolb
fs
add
loopne
xor
xchg
stos
aaa
cmpsb
int
stos
shrl
dec
shll
lcall
pop
fsubr
testl
outsb
movsb
fcomi
test
lea
xor
mov
mov
fwait
mov
xchg
and
addl
adc
fsubrs
dec
testl
mov
shrl
mov
mov
popa
cmc
insb
lret
and
or
jbe
push
rorb
loop
push
mov
mov
and
xchg
adc
sahf
push
lods
pop
jmp
mov
aas
addr16
stc
sbb
xor
stos
outsl
or
xlat
scas
gs
mov
pop
out
jle
adc
fs
adc
push
push
xchg
pop
and
outsl
cmpsl
pop
xlat
iret
pop
add
xchg
and
in
test
push
nop
rolb
aad
xchg
mov
rcrb
jo
xchg
js
les
cmp
repz
addr16
xchg
dec
inc
pop
lea
and
aad
loop
enter
subb
jmp
or
cs
inc
inc
inc
mov
mov
jmp
ja
mov
jecxz
xchg
fld
outsb
cmpsb
stos
std
pushf
jbe
cwtl
mov
cwtl
inc
mov
cmp
fisttpl
mov
xchg
mov
dec
ljmp
push
aas
mov
add
movsl
and
mulb
testb
fldt
pop
pop
dec
clc
mov
mov
push
sbb
cld
xchg
jnp
lret
adc
jno
adc
adc
xchg
mov
rorb
gs
fdivp
and
and
es
int3
fnstsw
ret
pop
mov
xchg
jmp
and
int
lods
aas
cmpl
fdiv
outsl
mov
jg
sub
mov
mov
mov
inc
mov
adc
mov
pop
dec
fdivp
enter
ja
adc
loop
shll
dec
pop
stos
imul
jl
fildl
mov
incl
push
push
xor
push
mov
out
mov
dec
pop
int3
ja
insl
add
mov
inc
sbb
pop
mov
push
adc
jne
jne
mov
fnstcw
jge
adc
dec
dec
jns
add
in
dec
push
xchg
cmp
jge
stc
jo
sub
mov
push
lods
jp
push
pop
mov
sbb
cmp
popf
pop
dec
push
mov
into
movsl
xlat
pusha
cmc
aaa
jne
jge
scas
xchg
and
jmp
mov
dec
adcl
out
adc
mov
outsl
repz
stos
inc
ficoml
and
bound
mov
jle
sbb
push
rcll
leave
lahf
push
iret
adc
jecxz
lods
in
imul
jae
cld
push
sub
or
or
fisubl
adc
xchg
sub
imul
scas
into
ret
mul
cmpsl
shlb
div
movsl
xchg
mov
mov
add
adc
jp
dec
cld
testl
cmp
sbb
scas
aaa
aas
sub
add
gs
scas
inc
sbb
push
adc
xor
lods
mov
scas
xchg
add
cmp
movsb
inc
scas
scas
push
xor
clc
jbe
adc
pusha
enter
daa
insl
aas
clc
cmp
jne
jno
mov
jmp
lret
or
push
add
movsl
mov
push
and
mov
test
out
inc
push
mov
fsubr
das
pop
dec
movsb
das
js
or
push
add
sub
mov
cmp
outsl
adc
fcomip
or
outsl
fcomip
sbb
push
mov
ret
cli
or
int
cmp
and
push
repz
mov
sub
fwait
outsb
pop
jns
test
out
adcb
scas
jg
mov
adc
lds
out
xchg
iret
lahf
cmp
sub
testl
xor
shrl
mov
jno
sahf
negl
cmc
xor
shrl
cmpsl
jbe
stc
mov
inc
jmp
adc
ss
loopne
lods
inc
fnstcw
and
push
dec
lds
sub
inc
xor
out
push
cld
push
or
xor
into
fistl
mov
rclb
xor
ret
pop
or
inc
ret
insl
sub
pop
push
add
and
stos
rclb
sub
inc
imul
aas
imul
jns
mov
cld
aad
sub
nop
ss
dec
dec
xor
filds
sbb
enter
cmp
daa
or
or
add
pop
push
lods
jmp
adc
adc
mov
dec
push
inc
cmp
inc
mov
push
scas
jb
rorb
out
mov
je
arpl
jno
sar
inc
mov
cwtl
jns
xchg
mov
pop
ret
mov
pop
test
repz
xchg
xchg
mov
push
fdiv
pop
adc
pop
mov
mov
andl
ret
xchg
dec
xchg
in
pusha
inc
enter
shll
mov
icebp
sub
pusha
cld
mov
jge
hlt
inc
cli
and
or
mov
popa
test
sub
ljmp
lcall
clc
cwtl
add
xchg
ds
pop
ljmp
movsb
lods
stos
push
stos
mov
pushf
into
mov
push
int
cli
psubsw
jge
jns
ds
ss
lret
pop
mov
pop
lahf
nop
dec
inc
jnp
test
hlt
sbb
mov
dec
rorl
int3
pop
imul
out
cmp
jns
mov
cld
mov
and
pop
or
insl
data16
mov
mov
xchg
xchg
js
or
popa
adc
push
testb
dec
inc
mov
mov
mov
leave
loope
jne
xchg
push
mov
push
mov
bound
or
inc
mov
in
jecxz
xchg
mov
leave
sub
sahf
cmpsb
imul
adc
mov
mov
mov
dec
dec
lods
jge
aad
sub
scas
test
pushf
sub
jmp
jl
les
pop
mov
popf
dec
mov
sbb
mov
mov
xchg
outsl
pop
insb
movsl
mov
insb
jle
call
mov
movsb
ds
loopne
addr16
cmpsb
pop
in
fs
inc
mov
jae
loopne
push
in
xchg
stos
or
test
inc
adc
out
fcmovbe
leave
fists
mov
lea
lret
xor
lds
add
lret
test
mov
clc
ja
leave
sub
adc
pop
addr16
arpl
inc
repz
sbb
fcoms
xor
or
pop
xor
pop
aad
int3
ficoms
cmp
je
mov
cmp
inc
adc
int3
push
and
xchg
out
insl
scas
ret
in
push
jmp
shlb
insb
push
cmp
lcall
cmp
movsl
mov
out
push
push
insb
lahf
std
adc
test
popl
loop
out
shll
adc
js
movsb
repnz
pop
inc
cwtl
push
xor
sub
add
arpl
sbb
cs
adc
mov
lock
addb
add
cmpb
mov
mov
sub
pop
aam
xchg
lcall
out
inc
jns
sub
mov
or
orb
xorb
out
jg
xor
mov
inc
inc
and
ss
in
mov
lret
cmp
incl
outsb
mov
in
sbb
jmp
lock
cli
or
xor
orl
hlt
push
stc
and
mull
mov
ficoms
inc
mov
jo
out
iret
pop
cli
pop
sbb
cmp
and
or
pop
into
mov
push
push
loopne
push
scas
pop
sub
aam
loopne
imul
ja
add
mov
pushf
push
imul
dec
mov
mov
pop
stos
adc
scas
jmp
and
sbb
insb
nop
adc
js
or
incl
les
mov
xchg
into
xchg
stos
lea
dec
call
roll
pop
cs
movsl
pushf
or
pop
jecxz,pn
popa
inc
ret
inc
fldcw
movsb
aas
clc
pop
mov
mov
mov
add
xor
jecxz
xlat
je
pop
std
ljmp
mov
test
clc
addl
inc
out
jecxz
cld
mov
mov
mov
mov
outsb
mov
and
mov
es
testb
sti
dec
mov
mov
mov
add
cld
call
inc
push
mov
in
fisubl
movsb
pop
loop
aam
jge
xor
fwait
sub
sbb
lods
mov
es
mov
lds
test
mov
adc
cmp
mov
stc
xchg
push
rorl
dec
out
out
add
addb
mov
dec
lods
loop
test
pop
into
xchg
fwait
sbb
test
shll
pop
pop
push
sahf
stos
inc
test
out
fwait
mov
add
rol
mov
xor
arpl
sbb
xchg
mov
mov
ret
idivl
addb
dec
lods
or
fwait
sbb
sbb
jne
push
mov
jmp
or
cmp
inc
sbb
jns
add
loopne
mov
sub
cltd
push
mov
jp
enter
out
mov
lods
xchg
lods
dec
xor
repnz
cmpl
sub
mov
ja
jmp
inc
lock
out
jnp
popf
jno
cmpb
cmpsl
mov
and
setg
sub
jle
test
mov
iret
aas
iret
push
ret
fistps
pop
icebp
inc
dec
sub
push
mov
sub
add
jne
xchg
pop
xchg
fnstenv
push
imul
shrl
shl
and
dec
mov
sub
push
inc
mul
sbb
cmpl
adc
aaa
mov
jl
add
pop
int3
test
pop
add
fidivs
sub
bound
scas
push
mov
push
lret
movsb
push
loop
push
into
pop
xchg
jbe
mov
popa
enter
daa
imul
jno
lcall
test
mov
pop
and
cmpsb
mov
push
sahf
or
test
pop
je
inc
jne
loop
ficoms
out
data16
rolb
pop
popf
add
adc
loope
lods
fsubrs
dec
aas
cmp
into
call
adc
xchg
shll
ja
loop
xchg
pop
cld
sbb
clc
xor
dec
xchg
xor
add
int
or
sub
ljmp
pop
mov
sub
xor
outsb
int
filds
dec
push
sbb
rsm
leave
mov
mov
mov
sbb
and
adc
or
add
mov
lret
push
rcll
repnz
and
sahf
cmp
mov
fildll
arpl
stc
xlat
lods
mulb
push
adc
sahf
aad
and
jg
adc
mov
out
pop
sar
xchg
and
or
sbb
or
in
ror
mov
pop
imul
gs
pop
dec
sbb
adc
pop
aam
lods
jge
add
decl
add
in
xlat
mov
mov
loopne
jg
adc
pop
in
sti
pop
sbb
mov
nop
in
xor
dec
out
ucomiss
das
sub
ss
add
push
cmpsl
lret
jb
xchg
xchg
out
sub
mov
repnz
loope
jl
test
mov
imul
test
cs
pop
adc
mov
outsb
aas
xchg
rolb
jmp
dec
fmul
push
je
lock
repnz
ja
cmp
out
jmp
push
mov
pop
ss
jnp
adc
fwait
xor
pop
xchg
lahf
lock
leave
aas
mov
popf
inc
test
jne
sbb
shrl
arpl
xor
cmpsl
push
out
pushl
xlat
call
xor
pusha
jae
mov
out
mov
repz
pop
rolb
std
add
adc
cli
ret
cmp
inc
mov
gs
clc
push
popa
pushf
xchg
mov
sub
lods
andb
mov
push
repz
push
mov
cmpsl
lock
add
push
pop
test
cmc
imul
adc
das
test
push
xchg
sbb
mov
xchg
stos
xor
add
xorb
outsl
aam
ficoml
xor
imul
mov
jle
xorb
insl
dec
jae
leave
inc
loop
and
fwait
inc
mov
cvtdq2ps
movsl
std
push
mov
int
out
sbb
mov
mov
cld
in
adc
xchg
sub
mov
inc
scas
sub
xchg
sub
jp
das
jb
sub
es
sbb
call
in
mov
xlat
xor
ficompl
cli
jmp
adc
push
addl
cltd
out
fisttps
popf
cwtl
mov
jb
sub
imul
and
insb
jnp
int
mov
pusha
jle
pop
xor
adc
adc
sahf
push
dec
ret
rcrb
addl
jae
jo
push
jae
mov
lea
inc
adc
out
cmp
xchg
xor
pop
sbb
ret
adc
clc
scas
negl
lds
cmp
sahf
inc
leave
pop
fisubl
hlt
repz
hlt
arpl
repnz
stc
fstps
jge
insl
sbb
dec
aaa
jl
push
or
call
stc
pop
xor
lahf
out
pop
xor
mov
sahf
outsl
and
sub
movsb
loop
jmp
sbb
cmp
in
and
enter
daa
push
out
cmp
mov
xchg
dec
sbb
rorb
lods
pop
movsl
lds
adc
lea
jo
add
push
push
jno
mov
mov
roll
cs
cmpsb
popa
push
mov
js
xchg
mov
faddl
push
lods
jns
ret
sub
push
cmp
xchg
cmpl
and
shlb
test
subb
out
add
jo
xor
in
inc
cmp
mov
cmp
pop
shrb
aas
lcall
inc
fcoml
lahf
sbb
or
mov
subb
jg
and
orl
sahf
xchg
lcall
fcomps
xor
dec
lcall
sub
fwait
rcrl
pop
and
loopne
aam
mov
lods
xor
outsl
mov
loop
arpl
stc
mov
inc
fs
mov
push
inc
mov
lods
sti
cli
or
adc
jle
xor
out
or
into
test
gs
jmp
pop
push
js
xchg
push
imul
sbb
dec
test
data16
iret
xchg
pop
int3
out
lret
leave
pop
sub
lods
mov
xor
sbb
or
xor
sbb
scas
aad
push
mov
dec
dec
xchg
out
inc
lea
pusha
les
test
cmp
xchg
push
mov
sub
rorl
aam
xchg
and
adc
sahf
xchg
loopne
cs
cld
testl
jge
jb
dec
adc
iret
aas
je
xor
jecxz
lahf
jmp
std
cmp
cs
stos
add
mov
lret
inc
mov
xchg
leave
dec
data16
fcmovne
loope
pop
sub
lock
lods
das
and
fisubl
fdiv
xchg
and
add
pop
notb
subl
jb
mov
pop
cmpsl
imul
fdivp
scas
pop
cmp
mov
mov
jbe
mov
adc
inc
sub
in
aam
mov
leave
es
adc
clc
dec
insl
lds
fwait
pop
popa
into
cmp
lods
jmp
mov
mov
fwait
push
enter
inc
clts
testb
lret
mov
jl
push
movsl
add
jp
dec
test
loopne
xchg
push
negb
mov
sbb
stos
and
orl
std
test
mov
shrl
ret
movsl
or
xchg
rolb
cmp
emms
stos
and
dec
pushfw
mov
or
cmpsb
insl
fwait
jbe
sti
push
mov
out
insb
dec
lock
inc
xchg
out
stc
cli
lds
mov
mov
xchg
js
shll
outsl
std
push
addr16
mov
mov
inc
gs
mov
sbb
pusha
popa
mov
xchg
outsl
jno
jmp
frstor
xlat
out
mov
popf
mov
aaa
mov
stos
or
shll
mov
js
out
add
jle
or
push
int
notb
xor
xlat
dec
ret
js
mov
inc
sbb
jae
sbb
js
hlt
fs
push
xchg
sub
xchg
xchg
sbb
xor
scas
pop
int3
mov
adc
sbb
xor
icebp
push
je
mov
push
arpl
aas
std
jge
pop
xor
or
aaa
cmp
or
pop
jecxz
pop
test
pop
bound
popf
fidivrs
jno
mov
cmp
adc
out
cmp
lods
sbb
insl
movsl
push
insb
enter
xor
or
sbb
lods
popa
add
imul
shll
xchg
jl
sbb
dec
xchg
mov
movsl
int3
inc
test
sub
stc
push
inc
pop
shrl
lock
rolb
and
pop
jmp
ljmp
leave
negl
sub
pop
aad
jo
fnstcw
xchg
or
rorb
mov
cmpb
cld
add
out
xor
mov
or
push
sub
icebp
pusha
lcall
xor
inc
jno
sub
jbe
test
xor
jg
movsl
lss
xchg
mov
sbb
loope
push
popf
and
cmp
push
clc
or
or
lret
ret
int3
xchg
mov
cmpsl
inc
sbb
ss
cmc
dec
push
in
xor
lret
imul
fyl2xp1
inc
out
fs
add
mov
jno
lods
loop
icebp
mov
dec
out
add
xor
js
decl
fs
addr16
gs
sub
cs
xor
xchg
lea
pop
sarb
adc
test
and
sbb
xchg
inc
lcall
out
mov
fwait
loope
sti
mov
clc
jbe
lock
nop
mov
sbb
inc
mov
inc
jmp
imul
xor
lea
rcr
push
das
mov
dec
test
xor
lcall
inc
push
inc
push
movsb
add
aas
aad
or
sbb
xchg
dec
lret
je
int3
sbb
adc
repnz
jge
push
std
fbld
lds
jl
outsl
orl
push
push
test
mov
push
int3
lock
cli
mov
xchg
or
and
sbb
adc
xlat
insl
cld
ret
xchg
dec
stos
cmp
mov
test
cld
imul
mov
push
mov
xor
mov
add
cmp
ret
pop
add
cmpsb
insb
push
fwait
popf
clc
test
daa
ljmp
or
out
aam
sub
mov
cmp
xchg
add
jbe
cltd
adc
push
test
mov
pop
addr16
push
jo
test
add
xchg
push
int
push
aam
stos
adc
outsl
out
call
flds
adc
xorl
test
enter
pop
jo
mov
sahf
rolb
test
xor
ja
sbb
dec
pop
pop
or
cs
fwait
movsl
adc
movsb
cld
jne
imull
out
fsub
popa
bound
fdiv
in
xchg
aad
xor
insb
sub
mov
cmp
loope
jp
sbb
mov
cli
fmull
or
in
mov
sbb
sbb
xchg
inc
cmp
jmp
test
push
sbbl
adc
data16
out
cmpl
jg
cmp
lret
jns
insb
push
add
jnp
cmp
push
movsl
dec
push
adc
or
adc
iret
pop
bound
sub
je
outsl
mov
mov
stos
or
jno
mov
fisubl
sbb
jns
imul
subl
aaa
xor
repnz
add
push
arpl
sbb
jge
lahf
aas
sbb
aas
sbb
cli
jle
or
jnp
push
dec
sbb
inc
adc
xchg
ficomps
add
jae
xchg
scas
lock
sub
xchg
xchg
fstpt
out
adc
sub
mov
fwait
and
out
xor
enter
daa
push
pop
lods
jno
jne
jl
pop
cmp
test
jb
andl
or
xchg
push
pop
ja
test
mov
xchg
daa
cmpsb
addr16
inc
pop
adc
into
pop
pop
push
fisubrl
not
loope
push
jnp
mov
loope
pop
outsb
fnstcw
mov
lcall
xchg
add
and
scas
out
add
mov
xor
cmpsb
cld
leave
clc
push
int
jo
sub
stos
xchg
sarb
dec
lcall
jmp
in
imul
shrl
xlat
fildl
sahf
mov
xorl
cmp
push
and
mov
fcom
xchg
sub
lret
hlt
rcrl
mov
xchg
sbb
dec
mov
push
xor
xor
bound
loop
mov
lea
jp
out
push
add
lods
leave
fidivrl
out
pop
dec
cli
sub
mov
or
ret
sbb
dec
mov
loopne
sbb
pop
test
movlps
bound
xchg
popf
data16
dec
sbb
rcll
xlat
dec
sbb
cmp
inc
mov
push
pushf
lods
sti
push
int3
bound
sub
aaa
pop
add
jge
mov
inc
mov
sbb
fildl
enter
out
fidivl
fsubr
movsb
push
iret
flds
pop
cli
cmp
mov
gs
in
outsl
sahf
cmp
scas
inc
inc
std
mov
jb
mov
dec
inc
mov
jno
pop
cmp
std
xchg
cwtl
and
icebp
mov
cld
xor
loope
xchg
dec
cmp
jne
sub
shlb
and
das
loopne
les
dec
enter
test
leave
pop
negb
push
inc
dec
cmpsb
sahf
cmpsl
bound
cwtl
pop
xor
stc
mov
xchg
or
lret
lods
pushf
and
and
adc
inc
pop
push
xchg
repz
jl
aam
xchg
test
jmp
dec
mov
clc
mov
sub
popa
cld
inc
sbb
sahf
les
sub
push
adc
pop
pinsrw
fadds
dec
test
loope
mov
pop
push
sub
test
insl
mov
xchg
mov
sbb
mov
sbbl
stos
add
daa
inc
or
add
xor
mov
aas
sbb
bound
mov
mov
mov
pop
scas
sbb
sub
call
or
imul
ss
jne
or
mov
jne
out
mov
and
xor
fadd
pmulhuw
rorl
mov
es
cmp
pop
addr16
mov
sahf
mov
cs
aas
dec
cld
mov
jbe
mov
out
popf
pusha
xchg
sub
fbstp
fbstp
adc
xchg
subl
and
mov
jmp
hlt
adc
loop
jmp
jnp
sbb
push
pop
repz
jmp
sbb
mov
out
pop
imul
mov
jp
mov
push
mov
popa
movsb
push
popl
fs
xor
xchg
les
pushl
lds
jnp
rclb
mov
xchg
ljmp
aam
repnz
push
add
jle
inc
aaa
mov
mov
loop
xor
pop
shlb
rolb
xor
into
jo
scas
iret
pop
add
daa
cmp
cmp
cmp
push
or
jbe
js
in
orl
daa
addr16
mov
xor
jno
push
icebp
jl
jno
dec
les
push
push
jecxz
movsl
push
and
lret
lahf
pop
jns
push
ljmp
push
xchg
inc
mov
push
cmpsb
ljmp
js
push
call
push
stos
dec
loope
adcb
into
xorb
jns
int
rcl
add
repz
and
negl
in
enter
add
pushf
in
cwtl
mov
sub
or
lcall
fcoml
ja
outsb
pop
sub
popa
cmpb
adc
cli
mov
sbb
lret
arpl
cmp
mov
push
testl
pop
mov
or
jle
in
mov
mov
fnstsw
xor
or
loop
adc
xchg
adc
ret
inc
ss
and
mov
addb
pop
xor
inc
lods
cmp
inc
stos
or
jg
gs
lea
loopne
sbbb
and
adc
int
imul
fdivl
add
jp
sub
cmp
add
mov
or
jno
aas
sti
sbb
aad
clc
sbb
imul
inc
mov
fsts
jae
les
mov
out
cmp
xchg
popf
fldcw
jne
mov
test
or
pop
lods
ret
loope
pushf
pushf
out
cmp
push
mov
inc
gs
mov
in
aas
adc
jl
shll
je
stc
jae
cs
mov
sbbl
sub
enter
fisttpl
mov
inc
cmpl
xor
push
mov
adc
loop
jnp
subl
xchg
sub
add
push
and
inc
pop
shll
push
iret
insl
lret
dec
mov
loope
mov
xor
lret
sbb
mov
and
stos
and
outsl
sahf
xchg
rclb
hlt
sub
mov
dec
ret
js
cmpsl
lods
movsl
xchg
dec
bound
xchg
mov
daa
pop
popa
adc
adc
outsb
xor
xchg
jo
push
push
out
sub
add
les
test
cmc
mov
ljmp
scas
inc
ret
test
add
xchg
jecxz
rcll
adcl
insl
jno
stos
repnz
out
out
mov
pop
add
mov
xor
fcoms
mov
movsb
mov
pop
push
dec
ja
xchg
lret
in
xchg
lea
or
add
fwait
add
mov
andb
xchg
sti
bound
dec
and
data16
xchg
gs
mov
pop
test
andb
addr16
sbb
xchg
mov
ficompl
mov
arpl
dec
lahf
hlt
dec
in
test
pusha
xor
neg
push
test
dec
jmp
ds
dec
cmpl
out
cmc
insb
popf
xor
jle
sub
push
sub
stos
outsl
xchg
and
popa
movsb
insb
daa
and
jnp
mov
jne
mov
loop
iret
sbb
mov
es
jae
mov
adc
push
push
jno
fiaddl
rcr
xchg
mov
sbb
andb
aad
lds
pushl
mov
ljmp
hlt
pop
stc
or
ret
add
shr
sbb
jmp
aaa
js
dec
or
add
int3
sbb
ds
out
shll
fisubs
or
jo
sub
scas
push
outsl
and
aad
movsb
push
mov
mov
in
mov
call
cmp
jno,pt
mov
or
out
push
cmp
movsl
loope
xchg
and
pusha
hlt
lahf
jle
push
push
mov
jge
push
push
xchg
cltd
inc
inc
adc
pop
pop
bound
cwtl
gs
fdivs
push
adc
sub
sub
cmp
lcall
scas
push
rcr
fstpt
push
sub
xor
jle
sbb
addr16
inc
dec
xor
aas
dec
test
int
es
sub
cmp
xor
inc
mov
faddl
fsubrl
ljmp
test
push
sarb
cmp
mov
inc
sub
mov
push
mov
mov
push
cmpsb
and
cmp
inc
mov
testl
inc
mov
adc
sbb
enter
pop
xchg
cmc
movsb
and
xor
int3
leave
outsl
push
ljmp
mov
adc
cs
movsl
lods
xchg
dec
fimull
inc
fucomip
cli
xchg
repz
cmc
std
or
fs
into
adc
gs
xchg
loopne
clc
outsb
pop
out
sbb
rcrb
push
imul
xchg
add
out
enter
inc
xor
xlat
jp
sub
rclb
mov
fmull
test
push
aad
dec
mov
dec
lret
inc
pop
test
mov
jbe
fcoml
call
int
std
pop
pusha
or
adc
push
push
pushf
or
clc
movsl
cs
repnz
jnp
lea
mov
lea
in
dec
das
cmp
shl
cmp
cmpsb
std
aam
push
cwtl
xchg
xor
mov
ds
mov
movl
xchg
pop
mov
inc
mov
imul
iret
arpl
sahf
mov
mov
mov
push
loop
add
mulb
insl
mov
out
pushf
and
cmpsl
gs
mov
or
cld
ljmp
mov
jmp
mov
mov
jne
out
aam
mov
xlat
es
jo
fnsave
sbb
xor
lret
mov
pop
imul
lods
xchg
push
fistpll
xchg
outsl
pop
xchg
mov
in
push
lret
jb
cmp
mov
movsb
mov
xchg
loope
mov
xor
push
add
test
ficomps
sbb
in
insl
out
std
pop
sbb
stos
loope
shr
in
aaa
add
bound
mov
xor
test
inc
xor
outsl
shlb
cmpsl
call
mov
and
sbb
inc
aad
cmp
sbb
push
cmp
mov
mov
hlt
xchg
out
jne
fldenv
jbe
jns
jbe
in
dec
cmpsb
xchg
mov
sub
adc
stos
sub
jnp
mov
lds
jns
stos
mov
sub
fstps
in
jle
pusha
int
ja
jne
or
add
adc
out
pushf
dec
popf
pop
lea
mov
addr16
jmp
insb
xchg
insl
pop
jnp
sub
push
jmp
into
cmpsl
iret
jns
ds
sbbb
icebp
inc
nop
in
jae
jge
push
inc
lock
or
loop
mov
fidivrl
dec
cmp
inc
cltd
imul
push
lds
and
mov
repnz
arpl
hlt
push
xlat
arpl
pop
icebp
inc
or
jge
mov
pushf
aaa
aaa
loope
or
xlat
add
jmp
addr16
push
hlt
lock
jge
xor
test
and
dec
adc
bound
leave
xorl
sub
movsb
mov
cltd
cmp
pop
cmp
xchg
and
adcb
push
sbb
push
and
popa
push
nop
mov
test
sbb
xchg
xor
cmpsb
lock
or
or
jnp
pop
inc
inc
push
sub
les
repnz
and
lret
iret
sbb
mov
je
mov
addl
cltd
push
add
push
lea
cmp
adc
xchg
dec
fmuls
mov
das
adc
cltd
xor
fsubr
push
loop
fnstenv
xor
pop
mov
test
jmp
sub
out
jg
lret
dec
mov
pushf
ja
call
and
and
cmc
push
push
test
scas
fadds
jecxz
testl
adc
shll
inc
mov
push
sub
dec
fwait
popa
sahf
sqrtps
cmc
imul
xor
mov
add
stc
and
mov
adc
insl
scas
ss
cwtl
lods
jle
push
mov
popa
in
inc
test
cli
les
sub
cmp
push
mov
into
repz
dec
or
lds
rolb
test
outsl
test
add
push
lea
jl
sbb
cmp
xlat
push
icebp
daa
sub
dec
imul
ja
push
dec
or
aad
pop
pop
nop
push
int3
mov
inc
in
dec
push
flds
pop
jg
lea
cmpsb
lea
push
call
dec
icebp
pusha
pop
adc
pop
adc
jb
jmp
sub
cs
jno
inc
jae
fiadds
out
sarb
push
push
inc
dec
cmpsb
jb
je
jbe
jecxz
and
movb
int3
or
push
and
mov
dec
std
scas
je
mov
xchg
lock
jle
push
lea
outsl
rcrl
dec
xchg
xor
arpl
jo
cwtl
xchg
dec
xchg
aas
cmpsl
imul
xor
in
adc
test
outsb
and
loope
xchg
lods
mov
mov
aam
push
push
ret
xchg
jge
es
out
fstpl
push
jns
ss
ljmp
les
dec
les
incb
push
movsl
or
psraw
adc
mov
out
fwait
test
sahf
mov
mov
je
sub
cmpsb
add
fimuls
xchg
sbb
les
pop
ret
pop
les
push
push
inc
add
jge
imul
pop
sbb
int
inc
insl
push
mov
stos
dec
dec
mov
loopne
movsl
ja
and
inc
insb
jl
or
mov
hlt
push
loope
xchg
jne
lcall
push
mov
frstpm(287
cmp
in
xchg
add
aam
push
pop
jbe
repnz
or
inc
les
jp
pop
repz
sahf
ss
mov
add
lods
in
or
xor
fists
mov
cli
repnz
xchg
aam
lods
sbbl
out
mov
lahf
mov
cmpsb
fnsave
stos
dec
addb
fimull
sarb
and
mov
test
jl
hlt
iret
fdivs
cmp
pushf
mov
inc
fwait
stos
pop
jae
jle
push
add
or
pop
jmp
inc
or
fisubrl
xchg
cmp
sbb
fcoms
lods
jmp
cmp
mov
cmp
mov
jb
repnz
ror
leave
loope
jbe
mov
add
inc
or
or
dec
xchg
cmc
sbb
or
or
lea
jb
repz
repnz
loopne
dec
fcmove
fisubrs
or
fistl
insb
inc
mov
cmp
and
movsb
and
or
divl
jbe
enter
shlb
sbb
cmp
push
or
nop
inc
jl
movsl
test
ja
push
lcall
das
add
lahf
mov
fimuls
out
outsb
inc
pop
cltd
inc
cmpsb
jae
minps
push
pop
push
mov
sbb
dec
cmp
push
inc
ds
rorl
adc
xchg
shrl
sbbb
sbb
and
or
aad
push
int
insl
jle
sbb
mov
int3
mov
stc
cwtl
lret
shlb
fcompl
xor
outsb
and
test
mov
fnsave
pop
push
sub
movsb
fldl
lods
mov
adc
mov
cwtl
leave
lret
daa
shll
mov
sahf
mov
jne
xor
sbb
repnz
loop
xchg
stc
fsubrs
fs
and
adc
test
dec
lods
gs
fmull
inc
scas
out
divl
xorb
in
cmp
sbb
adc
loopne
es
adc
cmpsl
imul
cmp
mov
push
inc
sbb
mov
jmp
sub
scas
clc
in
mov
popa
sti
notl
aad
and
nop
jmp
add
inc
fninit
fnstenv
int3
vsubsd
outsb
xchg
out
adc
sbb
inc
pop
mov
adc
xorb
and
cs
lahf
hlt
inc
cli
mov
aas
aas
lock
jb
out
dec
sbb
mov
jecxz
mov
sar
and
lcall
aad
outsb
mov
out
cmpl
push
int3
pop
sti
sbb
lock
mov
es
fsubs
jb
rcrl
push
fldcw
jb
dec
xchg
repnz
cmpsl
arpl
mov
mov
std
lret
imul
jl
outsl
pop
int3
sar
ror
test
sub
pop
mov
ret
and
popa
lock
fiaddl
xchg
jne
inc
ljmp
dec
lods
insl
cmp
mov
inc
mov
imul
push
add
stos
cltd
and
insl
xchg
mov
mov
outsb
dec
in
or
or
sbb
rcr
push
rcrl
xor
stos
mov
cmp
add
lret
scas
sbb
mov
lods
or
pop
pop
fwait
jge
ja
scas
cmp
nop
ret
inc
add
arpl
adc
nop
inc
sub
test
cmp
cmp
or
xor
cltd
jns
mov
dec
xchg
push
pusha
jnp
xchg
scas
sbb
jno
push
addr16
push
repz
mov
mov
mov
mov
and
jbe
in
pushf
fsubs
pop
jb
mov
mov
popa
ds
jmp
lahf
sahf
rolb
inc
fwait
popf
test
subb
cmp
ds
sbb
mov
jle
add
adc
test
aaa
push
sub
pop
shll
dec
jae
les
or
fcom
out
inc
mov
ficompl
sar
xchg
xchg
mov
subl
jb
lds
lret
mov
xchg
hlt
add
inc
arpl
pop
aam
push
sub
jge
dec
hlt
sbb
test
mov
or
mov
int3
fstl
cmpsl
fimuls
xor
cmp
jns
dec
inc
jl
jae
mov
add
movsb
scas
into
in
inc
or
jb
xchg
enter
daa
arpl
mov
jl
or
push
loope
imul
fstpt
cmp
dec
xchg
mov
mov
std
inc
in
inc
jl
test
pop
rorl
loop
dec
adc
pop
xchg
jge
push
cmpb
xchg
es
push
lods
imul
shrb
outsl
jp
subb
addr16
movsb
xor
mov
cwtl
cmp
int
out
sub
pop
lcall
dec
faddl
out
sub
or
test
aam
andb
dec
mov
in
dec
mov
xor
mov
in
pop
cwtl
outsb
push
scas
cmp
cmp
js
lods
testl
mov
sbb
push
lods
cmc
stc
jae
xor
addb
mov
mov
repz
pop
jb
jp
cmp
cmp
lods
dec
and
mov
xchg
mul
inc
pop
sbb
sub
xchg
xor
jno
add
into
mov
add
loopne
pop
inc
insb
into
adc
stos
imul
jl
add
rcrl
aaa
fwait
jns
cmp
dec
and
test
sub
jae
leave
xor
sbb
dec
and
adc
not
lcall
dec
out
dec
inc
adc
push
les
inc
xor
adc
mov
dec
ljmp
cmp
inc
fucomi
adc
dec
cs
ret
add
cmpb
adc
dec
dec
xchg
leave
scas
je
inc
in
push
cmp
popl
jo
leave
cmp
mov
jle
mov
outsb
adc
ror
lret
fistl
and
pop
sahf
mov
mov
or
lock
jb
cmp
out
mov
cmc
jg
shr
jb
imul
aaa
cmp
inc
mov
cmpsl
bound
jb
adc
imul
lret
fadds
xchg
and
pop
shll
jmp
popa
rcrb
cs
xchg
jb
ret
mov
cmp
mov
sahf
lahf
clc
out
lods
xchg
mov
fs
add
mov
fldt
mov
add
ds
setg
jle
pop
inc
test
xor
xor
dec
cltd
xchg
test
out
out
mov
out
shll
dec
pop
sbb
out
push
pop
cmp
mov
pop
call
xor
mov
ret
xor
arpl
mov
mov
sarl
dec
mov
dec
or
or
les
fwait
mov
pusha
mov
inc
xchg
mov
enter
mov
bound
popa
idivb
aam
in
clc
loop
mov
mov
sub
insb
pop
fwait
addr16
jp
mov
jp
push
adc
dec
sub
in
roll
pushf
dec
stc
sub
jmp
push
add
js
push
mov
and
or
push
loop
insb
rorl
jnp
incb
jle
pop
in
mov
or
iret
xchg
hlt
mov
fwait
mov
pop
or
adc
push
mov
or
push
push
out
inc
or
fcmovbe
mov
xchg
call
jg
imul
mov
les
jl
enter
sahf
leave
iret
gs
hlt
dec
ljmp
adc
fstps
and
out
or
xchg
jl
mov
clc
sbbb
insl
fsubrp
fisttpl
das
in
jo
fmull
sub
and
addr16
add
movsb
cmp
pop
jbe
xchg
jp
pop
pop
mov
mov
cmp
pop
xchg
jno
test
add
dec
nop
sbb
movsl
std
add
lahf
cli
pop
push
or
stos
test
jge
in
jl
xchg
cmpsb
jns
push
pop
cli
data16
js
jbe
pop
aam
fsubrl
mov
loope
jne
sub
add
cmp
mov
mov
rorb
aad
into
popf
mov
inc
or
jmp
xor
or
sub
push
mov
lret
lcall
int3
fsubr
scas
push
sub
and
test
fisubrs
jg
xchg
test
dec
jmp
mov
xchg
je
push
iret
clc
push
mov
movsb
cmp
xor
testl
out
shl
in
mov
lods
sbb
clc
out
cmc
shrb
xor
loop
inc
add
inc
pop
inc
fs
jmp
ss
cmpsl
lods
xor
inc
mov
pop
mov
cli
pop
inc
mov
push
pop
ja
sub
push
int3
sbb
mov
gs
fstps
pop
enter
push
mov
adc
jne
add
adc
mov
pusha
push
cmp
mov
ret
imul
jmp
dec
mov
mov
sti
test
xor
sbb
loope
jnp
lahf
and
sub
and
cmpsl
push
les
in
notl
js
fwait
call
leave
lods
pop
pop
sub
cmc
adc
inc
jmp
push
sbb
inc
or
add
out
dec
aas
cs
jb
mov
cli
je
es
jns
push
xchg
dec
push
std
jo
cbtw
andb
mov
test
cmpsl
dec
mov
repz
inc
inc
scas
mov
pop
adc
inc
test
repnz
xchg
mov
call
cmp
repnz
leave
insl
dec
hlt
mov
cmpsl
popa
sbb
lret
icebp
data16
cld
xchg
insl
xchg
lret
inc
fwait
popa
mov
push
in
mov
adc
shlb
sub
ret
aam
add
ret
inc
arpl
cmp
jp
or
lahf
sub
daa
ja
popa
xchg
pop
lods
inc
mov
mov
sbb
push
cltd
push
ss
bound
mov
add
pop
cltd
xchg
or
mov
repnz
push
mov
call
icebp
xchg
lret
cmp
add
stos
popf
jne
out
jns
test
into
loope
push
add
push
mov
or
and
or
sbb
jmp
mov
adc
and
inc
xor
pop
or
xchg
fwait
out
test
push
lret
jne
scas
loopne
jns
je
icebp
mov
test
xchg
sub
add
out
xchg
lock
mov
sub
sub
addr16
ja
xorb
out
mov
push
fisttpll
out
in
dec
pusha
cmp
push
fcomip
xlat
scas
xchg
pop
js
jmp
xor
ljmp
idivl
jns
arpl
xchg
stos
movsb
pop
pop
and
insb
ds
jnp
ja
jle
mov
adc
or
lcall
inc
hlt
mov
jae
sbb
push
dec
shrl
push
mov
fiaddl
mov
sbb
xchg
cld
imul
scas
jb
push
lds
movsl
shl
lret
mov
mov
inc
hlt
xchg
clc
mov
inc
adc
hlt
jge
bound
sbb
xor
push
or
stos
adc
int3
mov
or
and
ficoms
push
ja
or
cltd
aas
or
lock
adc
or
jbe
sub
in
inc
add
enter
daa
popa
xor
cmp
jno
pop
adc
dec
decl
ret
push
cmpsl
mov
movsl
add
mov
add
cld
lahf
sbb
fsts
lea
test
dec
call
jae
cld
cli
sti
pop
and
pop
pop
adc
xchg
push
mov
cmp
cmp
add
ds
mov
ja
out
shlb
fsubrs
sub
in
xor
das
sub
add
addr16
xor
ljmp
test
pop
dec
lods
cmp
push
cmc
mov
fcompl
aad
outsb
stos
xor
test
roll
inc
xor
mov
inc
test
dec
mov
insb
push
mov
cmpb
or
and
ja
sarl
mov
rcrb
push
nop
dec
sahf
fwait
stos
cwtl
cmc
xchg
xor
sbb
stc
std
insb
or
mov
sbb
gs
js
mov
adc
out
inc
movsl
cli
nop
push
mov
cmp
bound
into
jg
pop
gs
loopne
subb
sub
cmpsb
add
adc
ret
mov
dec
xchg
xchg
mov
sbb
outsb
icebp
fcmovbe
add
sub
pop
mov
repz
sti
xor
dec
push
popa
jp
sub
push
jp
in
dec
movsl
out
mov
les
vandnpd
leave
fdivl
fists
push
mov
jo
ds
xlat
cltd
pushf
fs
cs
jno
lock
inc
add
dec
aas
int
jb
lock
mov
je
pop
cli
jecxz
mov
mov
pop
aaa
mov
mov
call
jno
test
xchg
in
push
mov
adc
das
stc
nop
mov
mov
or
jo
outsl
bound
dec
addl
mov
cmp
jecxz
lret
mov
cmp
mov
test
pop
sub
mov
sub
in
ret
shlb
cmp
mov
adc
sub
lcall
lods
scas
das
lods
mov
inc
call
or
shlb
fiaddl
pop
js
lret
test
outsl
push
sbbb
lret
xchg
sub
pop
outsl
sub
mov
cwtl
add
jmp
and
or
stos
dec
mov
mov
xchg
int3
cltd
mov
dec
icebp
xchg
or
or
sbb
fwait
sbb
jmp
xchg
mov
push
shr
ret
pop
bound
lods
jae
fyl2x
shl
lea
shll
mov
rorl
bound
shlb
jp
jecxz
mov
aad
mov
jb
and
in
aaa
fldenv
push
das
fists
mov
mov
xchg
add
enter
out
scas
ds
push
movsb
dec
mov
mov
adc
insb
test
mov
jle
fisubrs
push
dec
push
mov
call
inc
ret
or
jae
movl
cld
push
adc
decb
dec
or
xor
cmp
xchg
xchg
xchg
xor
mov
fxch
scas
aad
outsb
imul
pushf
in
repnz
lcall
pop
push
arpl
pop
mov
cmp
jge
les
sbb
aam
or
jae
add
outsb
mov
pop
or
sbb
mov
sub
imul
dec
and
cmpsl
jae
movsb
push
icebp
rcll
xchg
jbe
xor
jae
adcb
cmp
in
lock
jnp,pn
outsb
leave
sub
mov
jne
or
pop
and
fwait
mov
test
adc
jl
lcall
pop
dec
roll
push
sub
and
in
adc
xchg
jae
rolb
stc
adc
lods
inc
mov
inc
andb
sbb
int
sub
sbb
inc
dec
jle
loope
outsl
int
stos
out
pop
enter
lds
mov
sub
std
test
pop
mov
jbe
jg,pt
aad
mov
insb
or
xchg
xor
push
mov
rcrl
test
out
lret
rcll
dec
mov
sbb
xor
fs
cmc
dec
dec
divb
add
pop
outsl
inc
or
loop
mov
jns
push
mov
ds
lods
add
xchg
mov
scas
and
aas
jg
cli
ret
push
add
jmp
xorb
stos
scas
nop
into
fiaddl
sub
jo
pop
mov
sub
gs
pop
cwtl
data16
sbb
test
cld
inc
sub
mov
mov
pop
aas
xor
loop
ret
jp
inc
aad
addl
inc
dec
and
fsts
sarb
xchg
repnz
xor
push
clc
xor
pop
xchg
jl
adc
cmp
ud1
fists
mov
sbb
inc
sbb
mov
jb
pop
test
sbb
je
jmp
jecxz
dec
add
cwtl
inc
mov
cwtl
clc
rcrb
shll
mov
cmp
int
dec
xchg
das
stos
cmp
lock
or
jl
cmc
add
mov
fidivrl
jb
mov
and
push
call
cmpsl
pop
lret
xor
icebp
adc
sub
in
sub
jmp
and
call
dec
nop
rcrb
xchg
jbe
mov
js
clc
sbb
popa
push
es
mov
fstpl
idiv
xchg
mov
xchg
jno
add
or
and
lods
sbb
mov
arpl
enter
rcll
cli
bsf
mov
cltd
add
cld
mov
cmp
push
inc
mov
xorb
test
xor
sbb
xchg
pop
sbb
shrb
aas
outsl
cmpsb
add
add
cmpsl
pushl
dec
sti
outsb
or
and
das
mov
mov
xor
pop
xchg
icebp
ja
push
int3
dec
in
cltd
inc
pop
dec
test
fwait
dec
aam
push
adc
jne
mov
mov
push
pop
out
scas
rorl
bound
mul
in
cwtl
sbb
mov
jo
or
test
sub
or
push
in
xchg
adc
mov
lods
std
dec
aam
lods
in
mov
pusha
outsl
rclb
xchg
lods
sbbl
xchg
lret
aad
andl
test
inc
out
in
out
inc
push
loope
movsl
stos
mov
and
pushf
xchg
jnp
mov
jle
jo
adc
stc
xor
mov
jnp
aam
and
scas
ret
shrb
jae
test
push
aam
jno
cli
hlt
dec
push
xchg
jmp
pop
xchg
in
cld
mov
imul
scas
cmp
shrb
or
das
gs
xor
cmpsb
hlt
sub
mov
inc
sbb
or
sbb
push
aaa
mov
xchg
add
jp
gs
mov
pop
cmp
lods
into
cmpsl
xor
cmpsb
jae
scas
gs
mov
mov
jo
add
jbe
mov
in
push
stc
stc
enter
daa
pop
imul
jl
loop
dec
fldl
push
insl
ljmp
ss
lahf
push
inc
cld
push
xorb
push
ficoms
inc
sub
xor
js
adc
icebp
push
xchg
loope
ljmp
inc
cmpsb
nop
ds
jno
adc
fsts
in
jns
mov
popf
dec
adc
mov
movsb
xor
int
mov
sub
add
lcall
add
sub
and
sub
test
mov
xchg
inc
adc
jge
mov
incb
mov
ja
xchg
and
iret
push
mov
push
fsubs
testl
xchg
insb
mov
sbb
sahf
loope
sbb
adc
cmp
outsl
pop
sbb
loop
int
stc
imul
fiadds
mov
inc
adc
lods
call
loope
out
cmp
push
push
cmp
pusha
mov
into
inc
outsb
push
gs
xchg
loopne
jne
pop
mov
in
imul
pop
scas
add
nop
inc
dec
mov
fld1
lret
cmp
jecxz
xlat
orb
mov
leave
insl
xchg
sti
xchg
inc
adc
popf
ret
test
mov
ds
xor
pop
dec
arpl
pop
mov
sub
xlat
jecxz
repz
xchg
mov
les
cmp
dec
pop
inc
mov
adc
faddl
into
pop
imul
roll
popf
stos
test
cmp
mov
or
xor
daa
xor
jecxz
pop
adc
fwait
ljmp
mov
xchg
mov
popa
add
xor
testl
push
pop
sub
pop
lock
pop
subl
scas
jo
mov
xor
std
shrl
pop
call
insl
add
dec
jns
mov
arpl
in
icebp
jmp
sbb
pop
dec
xlat
lret
xchg
jo
mov
dec
and
addl
shr
fisubl
cmpsl
fiadds
aam
movsl
repz
lock
push
les
clc
clc
rcrb
jae
mov
ret
jecxz
popa
lret
std
mov
test
mov
test
xor
xchg
fimull
sbb
add
sbbl
test
rorb
push
hlt
push
dec
out
cmpsb
test
sbb
xchg
cmp
into
int
pop
lds
mov
out
mov
aaa
sub
pop
or
call
jb
xor
orl
pushf
imul
jo
mov
fistpl
cmp
loopne
cmp
inc
imulb
out
jnp
push
mov
pop
jne
inc
in
mov
movsl
lock
mov
push
bound
xor
in
lret
xchg
mov
dec
sub
fimuls
pop
sarb
mov
ficoms
inc
dec
std
mov
push
jg
dec
mov
mov
aaa
cmp
xor
xchg
adcb
sbb
xchg
cmc
jg
mov
mov
test
cli
popf
insb
sbb
mov
and
pop
stos
std
xchg
and
mov
jnp
jl
jle
xor
push
fiaddl
adc
cmpsb
mov
out
jnp
out
add
pop
jae
sbb
xor
aas
push
dec
inc
push
test
sahf
lea
sbb
mov
in
fwait
mov
mov
cmc
mov
sbbb
leave
stos
or
hlt
ja
stos
arpl
add
inc
sbb
ss
aaa
jo
cmp
hlt
and
int3
je
rcrb
xchg
jnp
and
add
clc
scas
cmpsb
js
and
sbb
adc
lods
int3
push
roll
mov
enter
daa
pop
lret
std
jno
jno
jl
push
dec
dec
mov
push
push
cmc
test
and
int
lahf
jbe
mov
adc
test
xchg
cmp
xchg
stos
and
cltd
pop
rorb
std
loope
pop
cli
sub
arpl
cmc
pushf
int3
ds
mov
mov
insb
orb
add
mov
gs
addr16
int
mov
rolb
jne
lcall
jne
lcall
outsb
aam
stc
test
lock
subb
mov
les
mov
sbb
push
mov
mov
fcomps
subb
aas
daa
lret
pop
roll
mov
pushf
sbb
mov
cmc
fdivl
xor
sub
stc
and
imul
mov
xchg
lods
iret
test
mul
cmp
int
xor
sbb
cld
into
sub
fsubl
sbb
add
pusha
rclb
push
das
imul
movsb
cmp
cld
mov
data16
or
pop
mov
pop
sub
jecxz
in
xor
call
inc
fcom
std
pop
add
ret
inc
jno
pushf
flds
mov
repz
adc
lea
in
cld
xchg
sub
pop
clc
xchg
add
lock
pushf
gs
jmp
out
cs
mov
pop
inc
push
mov
mov
jb
into
push
dec
out
das
je
add
jecxz
aaa
adc
sahf
push
jg
or
addr16
outsb
push
lock
in
mov
pushf
addb
xchg
in
fistpl
pop
int
sub
scas
ret
xchg
ret
outsb
mov
jo
pop
and
scas
jb
js
ret
mov
jmp
dec
and
xchg
gs
ret
cld
inc
ds
add
xor
push
pop
pop
xchg
sub
test
ret
jg
xchg
es
adc
sbb
xchg
out
cmc
add
repz
lods
out
cltd
repz
test
xor
push
mov
outsb
adc
cltd
outsl
xchg
es
jmp
loopne
leave
int
dec
dec
push
push
test
lcall
add
pop
into
pop
jo
xchg
stos
pop
shl
out
add
cmpl
jno
push
xor
mov
xor
mov
xchg
sti
mov
std
jmp
lods
dec
lret
inc
lea
daa
or
aad
fwait
stos
xor
push
push
pop
loope
rolb
in
ss
insl
stc
and
mov
std
in
push
dec
xchg
sub
in
mov
xchg
ljmp
push
bound
addr16
imul
mov
mov
xor
ret
add
xchg
push
pop
stos
jmp
popa
imul
out
sub
xchg
cs
mov
pop
push
in
jo
sub
enter
ljmp
jle
dec
imul
or
jns
add
jno
fcmovnb
cli
xchg
jmp
inc
call
sti
stos
push
pop
imulb
enter
mov
sbb
ficoml
mov
sbb
pop
lods
imul
lods
lds
mov
mov
aad
mov
and
leave
arpl
pusha
jecxz
loopne
sub
aaa
das
xchg
out
out
lgdtl
push
test
xchg
xchg
std
ficomps
mov
xor
pop
cmp
scas
test
push
cmp
call
xchg
mov
jbe
or
fdivrl
enter
daa
pop
scas
and
xor
push
dec
mov
hlt
sub
and
lahf
xchg
pushf
bound
movsl
lods
test
je
cmpsl
inc
inc
xlat
test
or
inc
pop
mov
or
outsb
push
pop
push
loope
in
mov
push
add
cmp
loop
xchg
loope
rorb
mov
or
imul
dec
cwtl
sub
sub
xorl
pop
inc
imul
ficomps
push
push
sub
faddl
stos
sub
cmp
test
repnz
hlt
jg
fsubs
mov
mov
popa
ficoms
push
rcrl
fcomp
js
idiv
or
lret
xchg
rcr
test
sbb
inc
lods
cmc
mov
or
outsl
fldl
loop
test
stc
inc
fs
xchg
outsl
adc
ss
movsb
mov
mov
or
cmp
jnp
pop
mov
xor
and
test
jecxz
inc
call
and
shl
adc
pushf
jecxz
movl
dec
fcoms
cmp
sbb
xor
mov
lahf
inc
out
push
lock
jecxz
add
inc
loope
nop
out
sti
dec
and
or
cmp
inc
in
add
or
cmp
lea
xor
ja
jnp
inc
xor
sub
pushf
adc
cmp
mov
push
inc
stos
divb
inc
outsb
aaa
cmp
dec
jge
jb
aad
dec
pop
cs
mov
les
fwait
std
mov
push
cwtl
sub
push
mov
jmp
mov
pop
mov
dec
push
push
pop
fldt
push
mov
jne
xor
jne
data16
daa
and
aaa
mov
rol
push
cltd
insl
ror
aaa
dec
outsl
pop
and
leave
ja
icebp
cltd
mov
cld
insl
add
lret
jb
dec
mov
fbld
mov
aad
rclb
mov
aam
mov
ret
push
xor
es
fst
mov
clc
dec
test
xchg
cs
dec
popa
stc
and
lods
pop
gs
mov
cmpsl
cld
push
jge
xor
fldenv
repnz
cmpsb
lea
mov
sahf
stos
push
mov
fisttps
shll
xchg
sbb
jl
cmpsl
pop
sbb
stos
dec
adc
add
push
fimuls
call
rcl
xor
cmova
pop
jne
xor
daa
mov
xchg
add
mov
mov
icebp
or
ljmp
inc
and
lcall
xchg
stc
imul
xchg
dec
adc
jae
mov
in
sub
xchg
jnp
mov
push
mov
or
addr16
test
mov
dec
cmp
outsb
inc
dec
jge
dec
in
shrl
inc
mov
dec
xchg
es
aaa
jmp
sub
test
out
in
popf
mov
push
xor
das
xor
fistps
insb
push
popa
sub
push
test
pop
gs
push
popf
scas
iret
rclb
popa
ret
lahf
pop
push
popa
inc
repz
push
push
sbb
jo
xor
xor
xchg
repnz
and
aaa
scas
popa
cmp
dec
sarb
mov
sub
shl
sub
arpl
inc
and
lods
sbb
fistpll
ficompl
jnp
dec
scas
pop
pop
lds
shlb
mov
cmp
js
add
addl
movsb
jl
dec
push
outsl
push
push
jbe
loop
in
ret
xchg
pusha
enter
daa
pop
sbb
cmp
mov
xchg
jl
negl
dec
sub
push
push
out
movsl
daa
sub
pop
mov
lahf
mov
addr16
sti
insb
lea
aas
jo
inc
pop
xchg
cmpsb
mov
pop
in
push
js
out
pop
dec
cli
shrl
enter
movsb
movsb
sub
cli
mov
push
and
pop
je
adc
push
fmuls
mov
sbbl
dec
pop
add
shl
addl
pop
sub
lret
test
in
lcall
sbb
ret
push
outsb
lcall
and
data16
mov
popf
in
stos
mov
mov
mov
push
fisubl
jo
sub
les
cmp
xchg
add
mov
ss
inc
outsl
fldt
sbb
jnp
sahf
lret
cmc
push
xor
push
outsl
mov
sub
into
fs
xor
ss
fwait
sbb
popf
jmp
mov
cli
dec
sub
pop
and
cmp
adc
or
pop
into
out
loope
gs
pop
pop
loopne
sti
mov
sbb
mov
imul
and
dec
sbbb
and
cltd
sub
mov
and
sahf
add
incb
jge
aad
push
jno
shl
dec
xorb
xchg
lods
push
fldcw
jecxz
clc
adc
repz
test
loop
jp
repnz
pop
pop
or
sahf
jecxz
pushf
mov
dec
cmp
inc
xor
sahf
aas
call
adc
je
fs
jecxz
xor
std
pop
inc
add
int
pop
mov
into
repz
dec
add
pop
call
scas
mov
jns
lock
sbb
mov
fimuls
rcll
push
idivb
push
cmpsl
pop
pop
mov
cld
cmp
mov
lret
loope
movsl
mov
pop
jg
stos
pop
ja
push
push
inc
pop
les
mov
fs
sub
jmp
es
inc
fcmovu
not
leave
clc
or
xchg
insl
call
shll
insl
lcall
lahf
fdivrs
jge
ss
pop
loop
push
add
in
test
pop
sbb
dec
frstor
sbb
mov
add
sbb
mov
rcr
cmp
mov
out
lret
in
add
jo
mov
xor
mov
xor
sbb
mov
lds
mov
jae
adc
dec
mov
push
mov
jne
fwait
or
xorb
popa
mov
sbb
adc
mulb
insb
jno
in
pop
add
lret
mov
adc
or
out
addr16
fwait
xorl
push
repz
adc
shlb
orb
pusha
popf
xchg
stc
add
jmp
testl
or
and
fisttpll
jno
imulb
shl
jnp
gs
pop
mov
adc
push
and
das
aad
ret
lret
pop
mov
mov
jae
andl
loopne
sbb
mov
ss
or
fidivl
xchg
loope
adc
imul
lods
scas
les
stos
rclb
scas
bnd
cld
leave
adc
pop
arpl
repnz
es
and
inc
jo
aaa
lods
lods
out
or
jmp
add
ja
int3
xor
gs
adc
out
jo
push
fs
inc
leave
int3
and
xchg
dec
cmp
shr
pop
mov
inc
jbe
das
pop
in
stos
xchg
ds
daa
pop
add
jne
pop
enter
sti
dec
dec
cltd
jmp
stc
movsl
cs
and
push
lea
push
cs
or
mov
cmpsb
push
jp
pop
or
xchg
pop
testl
sub
cmpl
and
xorl
decl
lds
sbb
lds
iret
xchg
push
imull
mov
dec
int
ret
outsl
cmp
lcall
fcompl
ret
inc
outsb
std
test
test
jo
incl
mov
dec
movsb
mov
jno
and
ret
push
popa
sti
cmp
push
es
jl
xor
sub
rorl
divl
insl
dec
aad
xor
fidivs
leave
sub
out
dec
or
fs
jecxz
repnz
ss
add
outsb
mov
jno
out
pop
cli
ret
xor
outsb
pop
cmp
dec
ret
add
into
roll
gs
stos
dec
loopne
dec
bound
mov
cmp
or
pop
jp
add
aaa
add
sarb
call
mov
jne
insb
sti
dec
js
sub
or
sarb
dec
dec
fbstp
scas
fldenv
js
repz
sbb
lea
sub
insl
sub
inc
outsb
xor
xchg
adc
push
sbb
data16
jmp
and
jbe,pn
adc
inc
movsb
rcrl
xchg
jb
cmpb
dec
vpcmpeqb
xchg
mov
loop
cmp
cmpsl
adc
std
add
mov
cmc
bound
sub
mov
pop
mov
dec
mov
xchg
das
xor
add
mov
dec
mov
or
add
or
enter
inc
adc
pop
or
shl
inc
ss
ret
or
lret
push
lcall
mov
adc
out
outsl
pop
pop
jecxz
cmpsl
shlb
cli
fldt
or
aam
sbb
sub
add
rorb
movsb
fstpl
fcomps
clc
mov
daa
sub
dec
mov
mov
mov
adc
pushf
xchg
les
jmp
xchg
es
add
test
aad
out
mov
mov
push
adc
icebp
dec
addl
xorb
sbb
les
pop
jno
push
out
movsb
and
mov
xor
dec
inc
pushf
xor
fimuls
mov
enter
lret
aam
pop
outsb
jecxz
fmul
push
dec
mov
cwtl
dec
or
add
fwait
aaa
jle
push
aas
gs
jne
mov
out
or
bound
stos
xchg
in
fsubrl
sbb
sub
inc
mov
jp
inc
clc
mov
loopne
mov
or
jb
inc
jae
in
stc
arpl
popa
scas
pop
adcl
ret
xor
sbb
popf
or
pop
push
sbb
lret
stos
leave
add
and
pop
push
jle
push
push
push
divb
pop
iret
mov
lahf
pop
ret
inc
or
jae
sub
jmp
push
add
and
push
adcb
cmp
imul
inc
scas
daa
ret
cld
cmpsb
inc
shlb
mov
leave
xchg
dec
hlt
mov
xorl
sub
sbb
jg
aaa
insb
std
sub
shr
add
hlt
int3
and
std
pop
and
insb
fiadds
leave
xorb
incl
and
das
and
and
movsb
xchg
adc
push
or
icebp
and
xchg
jne
enter
daa
pop
jbe
cmp
clc
std
jno
sub
jno
or
push
fsubrl
lods
and
rol
mov
adc
or
hlt
ss
cmpsb
xchg
cli
push
pop
xor
fwait
js
pop
inc
pop
int3
js
push
ret
or
xor
sub
loope
cmp
in
adc
and
pop
dec
cmc
sbb
stos
sbb
xor
jae
fs
aas
into
sub
ds
pop
ret
lcall
pusha
faddl
jne
push
outsb
adc
aas
enter
push
jg
mov
out
mov
loopne
and
lock
cmp
or
cmp
cmp
mov
rcrl
scas
sbb
adc
clc
adc
and
mov
loop
sbb
stc
inc
lock
sbb
fwait
ss
jecxz
lods
imul
out
scas
dec
cli
cmc
cltd
loopne
or
mov
test
or
into
mov
es
mov
in
pop
cmp
adc
mov
adc
adc
add
popf
lds
xchg
aas
sbb
or
and
mov
popf
pop
mov
loopne
data16
cld
scas
stc
decb
aad
lds
ja
mov
cli
imul
mov
les
das
push
repz
xchg
xchg
test
inc
lea
mov
int3
pop
les
pop
adc
pushf
adc
jmp
mov
mov
inc
push
jmp
aas
es
and
dec
ret
push
lahf
je
sbb
jecxz
aas
je
stos
sbb
cwtl
pop
aas
ss
pop
rorl
and
dec
push
push
jp
mov
mov
lret
lock
das
adc
mov
dec
push
repnz
mov
testb
test
imul
push
lods
ss
out
dec
cmp
mov
adc
mov
popf
mov
rorb
inc
pop
sub
or
mov
ja
es
inc
cmp
inc
shll
shlb
jmp
lret
push
pop
popa
imul
fwait
mov
and
or
push
push
jl
psadbw
add
mov
dec
pop
push
test
and
push
imul
dec
ljmp
xchg
jbe
sbb
sub
sub
shrl
push
sti
add
cmpsb
xor
in
jle
xor
test
or
mov
mov
lret
andl
jmp
sbbb
mov
push
fwait
popw
pop
push
loop
shll
adc
mov
jl
out
jmp
sbb
fiaddl
rclb
lds
aas
push
addr16
sahf
outsl
mov
pusha
dec
mov
jnp
pop
dec
lds
pop
mov
mov
xchg
lahf
jle
jmp
lea
iret
out
iret
popf
das
pop
pop
mov
pop
sar
stos
cmp
push
and
mov
jle
cmp
adc
hlt
adc
in
pop
mov
inc
sub
stc
in
adc
popa
jae
sbb
push
pop
testb
lret
adcl
fs
out
stos
imul
loop
mov
lds
fldcw
mov
and
xlat
leave
incb
hlt
out
cmp
arpl
lahf
inc
sub
leave
jge
addr16
mov
shlb
or
adc
pop
push
inc
mov
stos
jo
xor
enter
add
push
and
push
jne
test
xor
dec
adc
in
js
mov
pop
push
call
cmp
adcb
mov
jl
jg
dec
ja
mov
movsl
cmp
ss
fwait
add
je
push
test
mov
mov
pop
pop
mov
pop
or
push
dec
lret
mov
int
pusha
ljmp
scas
lret
sti
scas
fwait
and
xor
sbb
or
xor
mov
ss
dec
sub
jbe
inc
imul
push
lods
or
fdiv
jnp
sub
in
add
xor
jg
mov
ja
jl
push
mov
mov
push
push
int
cmp
and
lret
js
xor
imul
and
cmc
mov
mov
out
loop
bound
and
pop
xlat
xor
cli
mov
test
xor
insl
adc
cmp
or
jmp
lret
xor
pop
jns
dec
adc
or
adc
add
add
inc
fldenv
data16
ret
add
rcl
mov
sub
adc
pop
in
dec
call
outsl
lret
pusha
jecxz,pn
push
push
dec
popf
ret
shlb
adc
dec
les
cmp
repz
jmp
xchg
inc
test
lea
cmc
jnp
arpl
in
inc
mov
pop
ja
adc
push
dec
jmp
pop
jecxz
cmp
adc
cmp
inc
fidivrl
bound
sti
sub
in
or
outsl
jecxz
lods
push
lods
pop
clc
std
dec
int3
fistps
or
pop
mov
cmp
mov
jmp
pop
and
jne
lcall
add
add
sbb
add
sub
push
jg
pop
lret
out
pop
divl
xchg
enter
inc
lret
gs
cs
xchg
mov
lret
and
ret
ffree
push
jno
sub
test
popa
ret
dec
insb
aaa
es
hlt
iret
clc
xor
or
xor
fisubrs
fstps
xchg
push
pop
jbe
jmp
mov
add
cmpsl
pop
cltd
and
test
orl
dec
push
xchg
test
mov
mov
test
rcr
sub
jae
add
xor
hlt
push
add
shll
mov
jge
inc
imul
mov
into
inc
mov
pop
movsb
decl
dec
mov
dec
or
fwait
cli
fwait
xchg
test
push
test
cmp
add
mov
dec
aam
enter
mov
pop
pop
in
fnstsw
mov
lret
mov
cmp
mov
mov
lods
sbb
les
pop
dec
or
cld
in
scas
shlb
pop
and
or
xchg
jb
bnd
pop
cwtl
dec
orl
and
pop
xchg
popf
push
in
mov
lcall
and
jnp
insb
add
sbb
pop
lret
push
test
es
in
iret
dec
sub
pop
mov
pop
xor
lcall
dec
xchg
push
sub
or
and
sbb
mov
insl
xchg
dec
orl
loopne
subl
out
and
je
and
jne
hlt
cmp
sub
pop
xor
ljmp
ljmp
add
popa
sbb
pop
dec
fimuls
jmp
jo
nop
dec
scas
loopne
sub
les
mov
pop
rcll
push
stos
daa
fnstenv
iret
es
pop
jecxz
enter
daa
pop
in
cmp
mov
push
scas
ljmp
out
mov
movsl
inc
push
and
arpl
inc
xchg
xchg
test
imul
inc
adc
leave
cmpsb
xchg
push
mov
lret
rcrb
fcoml
dec
pop
xor
loope
call
mov
vmwrite
adc
and
test
test
push
ljmp
mov
adc
int
out
sub
add
pop
xchg
insl
push
add
fcompl
add
mov
orb
jg
adcb
repz
fbstp
xchg
sub
shrb
cmp
addl
lret
movsl
ror
mov
shll
xchg
xchg
xor
ja
outsl
cmp
aas
loop
fmull
insb
lds
adc
sub
ss
loopne
cmp
out
mov
push
out
cli
pop
mov
fdivrl
lock
or
lcall
gs
sbb
cwtl
cmp
das
imul
sub
stos
ret
std
push
sub
xor
imul
in
mov
xor
pop
imul
sbb
cmpsl
sti
and
cld
mov
jecxz
clc
mov
repz
pop
xchg
or
add
fimuls
mov
lret
cli
je
pushf
addr16
popa
jmp
inc
sbb
lahf
and
inc
dec
mov
inc
cmc
into
js
fs
jge
sahf
push
call
je
sbb
mov
cli
std
test
cwtl
shrb
jp
push
cmp
in
cmpsb
rcr
sbb
pop
pop
lahf
xor
out
rol
dec
das
rclb
mov
out
mov
lcall
in
pop
dec
push
outsb
cmp
enter
int3
push
sub
inc
dec
aas
lret
popf
sbbl
bound
pop
inc
pop
outsb
shlb
jl
aam
mov
in
pop
pop
xchg
fstl
and
xchg
ljmp
mov
mov
jnp
loop
cltd
mov
pushf
lfs
imul
cmc
mov
test
ss
mov
out
sahf
push
pop
insb
outsl
dec
mov
scas
mov
sbb
push
shrl
xchg
test
jb
cs
repz
push
lcall
fmul
add
sub
mov
xchg
orl
mov
shll
mov
pop
es
je
dec
jl
aaa
inc
pop
inc
pop
or
movsl
sbbb
add
push
or
pop
sub
bound
jecxz
dec
sub
in
pop
add
mov
pop
js
xor
popf
inc
jp
jo
mov
int3
aas
mov
pop
test
shl
push
jne
fbld
popa
or
test
fadds
sbb
popf
jge
out
mov
fldenv
stos
and
inc
and
sbb
inc
jnp
push
aam
movsb
call
in
fwait
call
fld
insb
sub
pop
addr16
movsb
inc
sub
cmp
in
inc
xchg
pushf
jmp
inc
jg
pop
fiaddl
outsl
mov
jle
scas
push
scas
mov
xchg
jae
rolb
push
mov
fistps
hlt
test
rolb
fdivrs
push
pop
sbb
daa
std
aaa
test
daa
in
sbb
loopne
pop
mov
pop
fdivp
fwait
jno
mov
jbe
scas
mov
loope
cmp
pop
ret
adc
push
cli
inc
sbb
in
ret
in
inc
jo
enter
daa
push
loope
cmp
xor
xor
dec
push
lret
lea
test
loopne
dec
mov
and
inc
cmp
sbb
test
ss
inc
mov
xor
pop
cmpsl
in
mov
or
adc
push
subl
cmp
xor
shlb
sub
adcb
in
push
insb
addl
push
mov
movhps
pop
shll
adc
cmp
inc
lds
jmp
ljmp
and
test
and
jg
dec
xchg
mov
loope
mov
push
and
push
jb
adc
fcomp
cmp
hlt
idivl
in
lret
stc
shll
mov
cmp
cmc
dec
in
xor
sub
stc
and
fs
jl
fdivs
ss
ss
lods
and
mov
ss
jo
mov
mov
test
and
ficomps
adc
xor
lds
das
sti
and
adcl
push
pop
gs
test
xlat
js
xor
fsubl
int
fstpl
in
and
das
mov
sbb
out
sub
nop
or
dec
pop
pop
pop
inc
imulb
cmp
das
dec
fdiv
dec
xchg
int
cmp
pop
lock
adc
fstpl
dec
pushf
adc
test
inc
sub
inc
aad
lahf
inc
adc
jo
add
jb
inc
dec
sub
adc
push
push
mov
std
popf
cltd
ficomps
mov
xchg
mov
mov
mov
inc
insl
push
inc
aas
shlb
mov
das
scas
lds
mov
jno
repz
mov
jb
or
insb
xchg
movsl
pop
cmpsl
push
icebp
mov
mov
or
in
mov
jp
into
pop
clc
mov
pop
push
and
sbbl
pop
incb
sbb
mov
push
lods
mov
mov
sub
xchg
ljmp
adc
fmull
out
sahf
push
pop
xchg
loopne
and
movlps
sbb
cltd
lock
jae
push
push
jb
dec
pop
sbb
xchg
loop
ljmp
pop
sbb
stos
call
add
idivl
gs
dec
sti
xor
int
or
pusha
stos
xor
mov
ret
xchg
push
insl
mov
sbb
shlb
mov
dec
outsl
lret
push
inc
scas
adc
orl
lcall
xor
out
xchg
sub
jns
hlt
ret
cs
xchg
push
dec
mov
sub
xor
insb
jp
out
mov
mov
mov
enter
iret
jb
in
cmc
ss
loop
mov
xchg
sbb
sub
jl
and
and
popf
movsb
popf
push
push
sbb
mov
insb
xlat
inc
fdivrs
cmp
lods
dec
push
adc
adc
out
or
inc
ret
aaa
pop
sahf
sbb
xor
jl
push
scas
in
or
pop
pop
roll
cwtl
mov
xchg
cld
jg
sbb
sti
xor
dec
jns
mov
push
lds
aad
rcrb
add
sbb
insl
leave
arpl
arpl
iret
cmp
push
inc
xor
fwait
ss
xchg
or
popf
int3
int3
xor
pop
push
ficoms
ficoml
scas
sahf
lahf
mov
ljmp
movsb
mov
test
jbe
jle
in
sub
cwtl
jg
push
clc
cmp
sub
jl
jl
dec
les
pop
movsl
push
bound
lahf
outsb
or
pop
mov
fcmovu
mov
inc
xor
test
popf
test
pop
into
hlt
popa
js
sub
push
sub
loope
loop
sub
lahf
jns
insl
loop
xor
not
mov
popl
xchg
andb
sbb
lret
inc
sbb
jg
xchg
push
sbb
out
mov
xchg
push
mov
mov
repnz
pop
sub
rcll
sbb
testb
push
movsb
mov
inc
mov
mov
in
and
sbb
cmp
divl
divl
call
xor
mov
fcmovnu
sahf
pushf
push
mov
xor
pop
sub
imul
rcll
adc
sbb
lods
pop
or
mov
pop
push
cli
shll
cmp
xlat
cmp
add
into
inc
test
gs
cmpsl
loopne
and
pop
push
lret
mov
js
inc
adc
ret
cmpsb
add
data16
stc
cmp
inc
sti
xlat
mov
cmp
dec
mov
mov
mov
sti
mov
stos
pop
aad
ret
jecxz
dec
dec
mov
adc
fnstcw
push
test
xchg
nop
loop
lea
call
mov
and
aas
pushf
mov
xlat
lods
cs
lods
inc
sub
xor
mov
mov
dec
je
jb
jecxz
mov
mov
xor
inc
push
xor
inc
outsb
inc
mov
mov
cmpl
mov
jbe
sbb
cmp
mov
cmpsl
push
lock
inc
mov
sub
pop
shl
jb
notb
cltd
insl
and
push
dec
jo
cmpsl
push
xor
mov
jp
sbb
lcall
mov
shll
sbb
popf
lahf
rclb
pop
sub
and
out
in
ret
mul
sbb
pop
mov
imul
out
fwait
ljmp
push
lods
inc
and
xchg
mov
daa
mov
push
jp
aad
jb
inc
add
sub
daa
arpl
test
test
loope
xor
test
push
push
xchg
stos
jo
popf
ret
ret
rcr
ret
cmpsl
pop
enter
rorl
out
sbb
imul
add
mov
dec
xor
dec
test
popf
lcall
rorl
xchg
das
xchg
mov
aad
insb
ja
ja
dec
pop
inc
inc
insb
fmull
dec
nop
push
outsb
adcb
sub
cmp
bound
push
mov
out
xchg
xchg
movsb
pop
mov
sub
sub
xor
mov
fwait
mov
aaa
push
xchg
dec
mov
clc
in
cs
fbld
adcb
popl
cmpl
fstpl
adc
nop
push
push
mov
stos
or
cmc
insb
inc
aam
jnp
in
jle
pushw
push
pop
xor
adc
popa
iret
imul
jbe
inc
xchg
nop
jae
jp
push
jb
inc
or
xchg
pop
jg
jge
adc
jmp
mov
sbb
std
cmc
imul
add
cmp
mov
insl
enter
push
hlt
sbb
arpl
pusha
cmpsb
jge
lret
movsb
jp
aaa
daa
dec
pop
or
xor
dec
repz
int3
mov
ficomps
aaa
cmp
ss
sbb
jo
jg
scas
jge
cmp
cmp
lock
cwtl
dec
into
jbe
andl
dec
sub
inc
cmp
test
xor
dec
xor
dec
cmp
movsl
pop
je
and
lahf
lea
clc
test
int3
sub
inc
mov
dec
fstps
fcomip
js
pop
pop
mov
pop
loope
xchg
xchg
sub
and
push
sub
shlb
push
mov
cmp
add
pop
mov
inc
aam
int
push
int3
sub
sub
cmp
and
push
or
hlt
fcompl
inc
mov
test
and
mov
loope
mov
nop
mov
clc
cmp
fld
sub
flds
push
fdivs
lret
fcmovnbe
fld
nop
insb
fisttpl
out
push
sahf
aas
cmp
cmc
fistpl
pushf
xor
jne
outsl
aad
cmpsl
loop
adc
xchg
adc
mov
ss
je
out
push
mov
xor
xor
hlt
sub
xor
aas
or
stc
into
and
xchg
dec
out
rcrb
adcl
dec
and
outsl
mov
adc
add
popaw
xor
sbb
xor
xlat
divb
ret
mov
test
jnp
sti
fisubs
aad
mov
pop
dec
sbb
inc
sbb
mov
lock
les
xchg
repz
in
push
xor
call
cmp
repnz
inc
popa
sub
jmp
inc
out
enter
jecxz
pop
inc
inc
andb
xchg
xor
pusha
imul
lcall
mov
negb
add
mov
mov
dec
lods
pop
test
movsl
xor
mov
mov
lock
jle
insl
xor
mov
fildll
and
mov
sarl
cmp
notb
push
and
cmpsl
push
sti
and
push
sbb
lret
ljmp
and
xchg
lods
pop
pop
popf
out
aad
sub
stos
sub
imul
xchg
andl
ss
fisttpll
stos
and
ss
es
ljmp
loopne
mov
je
repz
in
pop
xchg
outsb
dec
jbe
push
pop
push
psrlw
xchg
add
add
sub
mov
mov
push
movsb
fnstenv
test
pop
mov
sbb
inc
shll
mov
stos
shrb
add
sub
out
xchg
xor
push
xor
loope
mov
fidivrl
pop
nop
adc
ja
mov
test
xor
imul
mov
inc
mov
inc
jb
bound
jg
jns
jb
in
shlb
mov
andl
es
addr16
mov
bnd
cmpsl
sti
enter
loopne
cmpsb
leave
jbe
xchg
stos
lods
in
lret
adc
cmp
xchg
xchg
mov
inc
xor
orl
out
adc
mov
xchg
orl
xchg
lods
xor
jnp
push
fwait
jle
adc
push
mov
insb
outsl
iret
enter
movsl
cs
pop
or
push
inc
dec
fwait
dec
jae
mov
push
or
or
test
ficompl
repz
sarb
sub
lds
les
rclb
mov
rolb
hlt
mov
arpl
cmp
inc
cmp
jge
fcompl
sbb
cmp
out
mov
jb
and
loop
int3
int3
mov
pop
fs
add
jo
mov
cmp
cmp
loopne
movsb
aam
loop
out
and
cld
dec
in
sti
outsb
aad
inc
push
bound
push
lock
jno
jle
jl
dec
outsb
dec
mov
into
sti
movsl
pop
ljmp
lods
js
push
xchg
sti
lcall
movl
xorl
inc
push
and
xchg
push
loope
insb
fldt
jne
cmp
pop
mov
jbe
gs
inc
mov
cmpsl
orb
sbb
lret
scas
popa
push
xor
cmpsb
nop
add
in
sub
ja
pop
mov
cmp
or
fmull
lods
sub
fwait
cltd
test
jbe
cmpb
mov
xor
inc
adc
mov
push
fmul
xor
insl
cmp
divl
js
shll
jae
jge
out
sbb
cwtl
sahf
loop
xor
xor
adc
mov
adc
push
lret
dec
js
xlat
or
adc
jle
ss
mov
mov
outsl
cli
daa
xorl
xchg
push
sbbl
push
test
mov
cmp
ljmp
data16
sbb
insl
out
sub
sub
ror
in
bound
sti
push
adc
push
push
aad
sbb
dec
js
lock
das
jge
fldenv
mov
push
repz
ss
push
clc
cmp
lret
mov
push
push
adc
call
jmp
jnp
sub
xchg
inc
push
and
jecxz
aas
loopne
push
jb
cmp
lea
repz
pop
imul
mov
jnp
cwtl
mov
pop
jmp
imul
dec
cwtl
inc
and
aam
sub
adc
mov
xlat
pop
lock
xchg
das
dec
jo
mov
xchg
cli
xor
stos
rorw
and
insl
out
inc
and
cmpsl
push
inc
mov
icebp
sub
cld
lock
imul
sbb
dec
and
sub
pop
pop
mov
inc
out
sub
aam
inc
icebp
ret
adc
sub
in
pop
mov
ljmpw
enter
sbb
xor
mov
mov
mov
xor
scas
wrmsr
pusha
add
push
xor
xchg
aas
popa
test
dec
jne
loopne
or
cmp
push
les
or
xchg
fisubrs
sbb
dec
test
mov
xor
jecxz
mov
in
cld
xor
dec
idivl
cmpsl
inc
les
fucomip
aaa
or
jae
mov
fnstsw
enter
clc
ja
mov
dec
dec
das
incl
and
repz
fwait
cmp
push
mov
add
mov
out
and
ja
and
inc
in
sahf
adc
mov
push
das
sub
and
insb
addr16
pusha
jp
test
mov
push
loopne
fwait
lahf
mov
mov
in
int3
and
cmpsl
fbld
xchg
xchg
lret
and
popa
cltd
and
and
sbb
dec
mov
aad
xchg
stos
out
sbb
xchg
insb
sbb
jnp
xorl
xor
mov
pop
rol
daa
pop
jmp
pop
inc
imul
jae
inc
ss
clc
test
push
jnp
dec
fimull
mov
sbb
jl
imul
rol
lods
push
mov
outsb
cmp
mov
adc
leave
enter
mov
or
popf
bound
test
jge
rorl
sbb
push
bound
movsl
mov
xor
jns
mov
pop
insb
inc
mov
jl
sub
jo
xlat
shrl
mov
mov
adc
addr16
clc
jmp
enter
daa
push
std
outsb
cmp
jbe
jno
filds
dec
adc
orl
les
jp
ficomps
xchg
int
mov
ja
inc
fisttpll
cmpsb
es
pop
inc
bound
pop
test
push
push
dec
loope
addr16
sub
lahf
dec
cmp
inc
ds
repz
adc
sbb
nop
out
pop
jae
sbb
fisttpll
mov
cmp
xchg
int
popf
icebp
sub
mov
cmp
lcall
mov
sub
add
test
jb
jg
nop
lea
inc
lcall
imul
imul
mov
push
fsubrs
cld
jae
je
push
lret
cwtl
sarl
push
sbb
cmpb
imul
pop
outsl
xchg
adc
out
cld
stc
jle
bound
ss
or
xor
cli
pop
push
mov
cmp
out
or
pop
into
jmp
push
loopne
les
pop
xor
outsb
adc
aam
pop
bound
add
stos
out
addr16
sbb
test
rcl
insl
enter
mov
in
int
jb
lds
xlat
aad
fcmovb
nop
je
imul
xchg
andl
pop
pusha
mov
sbb
sbb
add
xor
cmp
mov
adc
and
add
mov
imul
clc
aas
jg
fnstenv
dec
mov
add
and
jecxz
enter
and
std
cmp
into
cwtl
ja
int3
mov
mov
mov
mov
dec
cmp
fildl
push
addr16
into
in
inc
mov
add
jge
sub
xor
movsl
clc
jne
fstl
js
dec
fisttpl
dec
xchg
cmpsl
push
adc
fcomip
fdivrl
sbb
lret
enter
add
mov
fistpl
sub
outsb
adc
inc
mov
popf
es
adc
clc
xchg
push
mov
ljmp
shrb
sbb
sub
mov
or
jg
xorb
int3
mov
dec
mov
loop
push
sub
lret
dec
mov
xchg
cmp
mov
scas
shl
popf
mov
stos
sahf
mov
out
inc
out
test
arpl
lret
pop
das
or
and
mov
mov
loopne
push
add
pop
push
xchg
dec
ja
fidivl
dec
cmp
inc
or
fcomps
push
push
jne
rcrb
into
mov
test
jns
jg
in
roll
xor
xor
or
insb
addr16
mov
mov
iret
push
mov
test
mov
in
xor
pusha
dec
es
ffreep
mov
leave
jmp
sbb
fwait
subl
out
and
popf
inc
mov
push
adc
lods
stos
popa
test
and
arpl
jnp
jns
jle
dec
jl
loopne,pn
adc
daa
or
xchg
pop
ret
inc
pop
jp
sbb
lock
or
mov
push
lds
fdivr
inc
cli
adcb
add
call
adc
cwtl
imul
scas
aas
cmc
push
lds
in
mov
ja
data16
clc
leave
aas
jge
hlt
sti
cs
loop
dec
inc
inc
jp
jge
scas
fcompl
aad
push
aaa
adc
or
mov
adc
outsl
pop
fwait
cmc
pushf
ficomps
mov
xor
inc
and
scas
sbb
outsl
cmp
sahf
sub
test
jno
cmp
in
leave
mov
enter
daa
push
mov
cmp
adc
jl
outsb
dec
sbbb
hlt
iret
into
movsl
insl
add
and
sub
cmp
test
sub
cmp
test
stc
jbe
xor
fwait
pop
les
imul
xchg
pushf
push
cmp
in
ds
insb
add
clc
test
mov
pop
enter
push
add
adc
xor
cmpsl
xor
out
cmp
ret
pop
mov
add
fcompl
push
mov
js
les
lock
cmp
mov
sub
and
pusha
or
loop
dec
cmp
jecxz
jne
xor
outsb
lret
add
jmp
mov
or
sahf
sub
int
cld
daa
shrl
insl
loop
stc
pop
stc
mov
inc
fs
push
jge
mov
and
and
xor
inc
cli
repz
rcrl
fcoml
push
into
int3
lods
aaa
gs
sbb
ficomps
stos
jle
dec
ret
imul
add
shr
sbb
jecxz
cmp
mov
inc
sub
adc
mov
cmp
out
xor
aad
ds
dec
jecxz
dec
lods
test
push
mov
rol
mov
repz
call
sarb
pop
pop
dec
adc
rcrl
cs
cs
ficomps
inc
js
cmpsl
inc
xchg
in
aas
push
fsubl
dec
jnp
sub
mov
adc
mov
sar
xor
cwtl
xor
sbb
mov
push
sbb
mov
push
or
mov
pop
lock
das
or
movsb
mov
add
push
and
lcall
pop
out
insl
mov
cmpsw
push
push
pop
icebp
jae
cld
inc
xor
mov
or
icebp
fsubl
cli
stc
shlb
and
aam
mov
ret
xor
fnstsw
inc
clc
roll
in
jecxz
jae
push
jle,pn
testb
lods
repz
add
sbb
out
test
add
inc
cltd
add
mov
fucomip
push
in
pop
enter
mov
stc
and
sarl
fnstenv
stos
lea
test
xchg
stc
add
or
in
xchg
xor
in
add
mov
jecxz
ret
ja
pop
shll
ja
scas
mov
cs
mov
or
inc
inc
fidivrs
and
adc
mov
loope
loopne
lds
in
aaa
out
loopne
sub
sub
pop
cmp
mov
inc
jp
or
icebp
stc
or
movsb
mov
xchg
cli
mov
fldenv
aaa
test
jmp
in
std
xor
add
popf
addr16
add
push
push
addb
js
out
dec
dec
jnp
xor
jle
shll
adc
and
pop
mov
push
inc
insb
mov
lret
fbld
pushf
pop
loopne
jle
out
inc
jns
xor
xchg
scas
in
mov
mov
mov
scas
mov
cwtl
inc
shlb
repnz
mov
hlt
inc
jge
arpl
sub
jp
mov
pop
sbb
or
cmpsl
adc
jne
lret
faddp
std
and
mov
flds
leave
push
aaa
movsb
jne
in
aam
dec
jbe
and
in
mov
mov
xor
mov
mov
jl
mov
dec
out
xchg
mov
movsl
je
adc
mov
push
lahf
or
pop
push
or
mov
push
clc
adc
inc
sti
lods
andb
je
js
jo
pop
add
sub
cli
add
add
pop
sub
outsb
clc
cmp
iret
cmp
fisttps
jg
roll
mov
lahf
in
xor
addr16
xor
jl
dec
sub
sub
and
gs
test
dec
cmpl
test
adc
mov
push
mov
mov
lea
push
in
pop
cmp
sahf
cmp
lret
mov
in
mov
mov
xor
jb
lret
xchg
cmc
divl
call
loop
fisttps
fs
sbb
or
sub
mov
push
cli
rorb
cwtl
or
cmp
adc
and
gs
in
loopne
jmp
mov
and
dec
mov
pop
add
in
sti
insw
inc
imul
inc
dec
xlat
bnd
sub
mov
sti
and
arpl
xchg
mov
nop
sub
dec
xchg
xchg
inc
inc
push
mov
inc
repz
decb
dec
fadds
cmp
pop
addps
adc
push
pushf
adc
out
jmp
scas
inc
cs
sub
mov
cmpsb
aas
mov
add
jbe
in
cmpl
pushf
cli
mov
pop
std
xchg
cwtl
in
push
mov
je
mov
xorl
rcr
popa
ljmp
leave
mov
lock
testl
mov
mov
add
negb
sbb
dec
xor
loopne
push
aas
in
sub
cs
jno
xchg
lret
cmpsb
sbb
mov
jno
and
std
mov
test
sub
jle
aam
mov
ret
ret
es
mov
xchg
or
lea
lret
popa
or
xchg
scas
into
or
mov
push
rorl
add
pop
jecxz
push
push
mov
push
mov
cmpsb
dec
mov
test
xchg
lret
xchg
popa
sbb
mov
nop
cmp
pop
aam
stos
jl
mov
add
cltd
addr16
incl
inc
or
pop
ljmp
jb
xchg
js
mov
jl
jnp
push
push
popa
dec
and
sub
les
or
sbb
fwait
or
jae
jne
mov
out
rolb
jns
sbb
stos
xchg
das
nop
jl
sub
adc
addr16
sub
mov
xor
mov
bound
dec
and
and
filds
cld
lods
xchg
or
xor
inc
jbe
xchg
mov
in
addl
inc
popf
mov
mov
xchg
mov
stos
inc
fchs
and
jnp
insb
pop
out
jnp
or
push
and
mov
xor
iret
inc
or
pop
call
imull
push
inc
cmp
or
stc
adc
inc
clc
mov
xchg
push
fstpl
jno
imul
scas
add
push
sarb
add
or
cmp
sub
pop
or
pop
pop
inc
inc
jp
jge
psubw
dec
jmp
dec
or
mov
pop
int3
dec
mov
fisubs
call
jo
repnz
mov
cmp
das
hlt
movsb
add
xor
imul
push
cmp
cmp
out
scas
jno
fldcw
rcrl
dec
pop
nop
inc
push
mov
stos
shlb
dec
xchg
cwtl
lahf
sub
into
push
fbld
mov
inc
mov
scas
jmp
pop
mov
cmp
pop
inc
loope
push
fisubl
loope
xor
sub
adc
cmp
inc
adc
scas
lcall
xchg
shrb
add
adc
xor
and
int
and
mov
into
ja
cmc
jbe
push
mov
pop
in
je
inc
outsb
ds
ljmp
das
mov
mov
inc
jno
and
icebp
push
call
stos
dec
fcomps
mov
mov
ret
lret
popa
roll
pop
sbb
mov
xor
call
scas
stc
and
dec
fs
adc
stc
xor
lods
jno
mov
das
loope
das
aas
sbb
repz
lods
xor
cmp
push
or
js
gs
ret
icebp
loopne
sbb
pop
nop
out
xchg
hlt
sbb
adc
and
add
hlt
add
daa
mov
pop
xor
xlat
xor
sub
testb
jle
sub
push
xchg
stos
sub
nop
add
adcl
add
les
xrelease
xchg
and
mov
mov
mov
pop
ret
adc
push
scas
jmp
bnd
mov
cmpsb
inc
xchg
mov
aas
pop
and
jb
mov
dec
imul
mov
xchg
enter
jbe,pn
cwtl
test
xchg
mov
cs
mov
or
orl
push
repnz
xor
test
add
enter
and
xchg
je
inc
flds
ror
and
mul
jns
insl
mov
mov
cmpsl
dec
lcall
test
lret
adc
into
xchg
and
cwtl
mov
pop
cmp
mov
dec
push
jae
and
test
jge
push
stc
or
jno
xchg
lret
fcomps
clc
inc
xchg
imul
and
lods
leave
adc
jp
xchg
mov
mov
shrd
add
test
test
mov
sbb
fwait
push
jae
xchg
dec
lock
sahf
test
sub
xchg
je
sbb
ret
popf
shl
mov
shrl
lds
or
and
xor
xchg
leave
or
pop
xor
add
mov
jmp
cs
ja
loop
dec
adc
ret
inc
test
lahf
cli
fwait
cmp
sbb
inc
out
jne
cld
xchg
mov
add
pop
ljmp
in
and
xchg
jle
xchg
in
sbb
or
or
in
mov
sbb
mov
shll
in
mov
rcr
pop
and
xchg
fisttpll
push
jmp
jnp
pop
adcl
ret
popf
mov
xor
rcll
and
or
and
outsb
jnp
bnd
mov
adc
jae
jae
mov
dec
ja
pop
jbe
inc
andb
push
add
mov
push
ja
dec
ficompl
cmp
sbb
imul
push
outsl
inc
rcr
push
sub
push
repnz
pop
leave
movsb
add
fcoml
fadds
test
jge
xchg
and
push
push
adc
mov
pop
cmp
aad
ror
cmp
rcr
imul
push
jns
scas
mov
mov
out
xor
rep
mov
push
jb
adc
daa
add
enter
daa
dec
pop
xor
cli
jle
jno
lret
xor
addr16
int
xor
popf
clc
in
movsl
adcb
out
lahf
inc
aam
push
mov
cli
test
mov
add
pop
iret
cmpsb
xor
pop
fists
ret
cwtl
xor
orl
add
das
mov
cmp
ds
imul
adc
or
paddsb
add
xchg
aam
or
imul
aaa
cld
mov
adc
insb
sub
dec
outsb
mov
fsubp
addb
jg
pop
ja
aam
or
and
push
push
and
pop
sbb
jmp
test
adc
cld
divl
xchg
lret
mov
sbb
dec
sbb
sahf
adc
cmc
test
mov
outsl
loop
inc
stc
fildl
inc
mov
mov
lods
pop
fiadds
out
cmp
mov
inc
faddl
pop
xchg
mov
or
xor
push
and
scas
xchg
pop
adc
adc
cmp
adc
push
fiaddl
pop
inc
in
data16
js
dec
lret
sarb
mov
xlat
jo
movsb
sub
mov
jns
mov
dec
adc
aam
loopne
popf
dec
push
jb
inc
mov
je
xchg
xchg
in
into
lea
in
ss
pop
jne
daa
adc
jbe
pushf
push
stc
jmp
cli
ja
sbb
outsb
inc
call
dec
xor
nop
daa
dec
loopne
xchg
je
jo
jecxz
cmpb
aad
lods
cwtl
arpl
mov
insl
mov
mov
in
das
daa
sub
mov
mov
movsb
sbb
add
das
cmpsl
faddl
mov
shll
rcrl
orl
insl
jb
mov
sub
push
mov
pop
adc
cld
into
fxch
test
cmpsb
and
xor
leave
rcrb
fsubs
pop
push
not
jae
mov
loopne
cmp
hlt
mov
lea
cmpb
xchg
mov
pop
sti
popa
cmp
mov
mov
mov
sub
ja
and
or
add
pushf
pop
test
push
mov
insl
adc
dec
push
add
xchg
xchg
and
sarl
arpl
stos
pop
add
add
iret
imul
sub
xor
fisubs
shlb
clc
data16
mov
pop
xacquire
rolb
dec
pop
cmp
or
inc
mov
push
jecxz
mov
imul
pusha
out
jle
xchg
loopne
jns
dec
pusha
in
xchg
push
xchg
int
ret
mov
xor
sub
or
xor
int
jp
icebp
loop
mov
pop
mov
inc
mov
dec
out
je
cmpsl
lods
pop
pusha
mov
dec
fcoms
xor
xor
pop
test
mov
sub
mov
adc
lret
fimull
and
insb
das
fisttpl
jle
fcoms
xchg
icebp
adc
push
add
push
ret
rcrl
push
inc
lea
mov
or
out
popf
mov
fcmove
or
xchg
mov
movsb
sbb
cmp
sub
lret
out
mov
push
icebp
or
mov
mov
daa
leave
sbb
hlt
daa
pusha
test
push
test
inc
dec
dec
aam
test
push
scas
aaa
pusha
repz
mov
int3
and
movsb
pop
push
push
out
stos
mov
xor
mov
stc
scas
xchg
adc
sub
cmp
lds
jbe
pop
dec
in
gs
enter
daa
dec
cli
repnz
fildll
pop
lock
cmp
pop
push
addb
mov
or
andl
int
xchg
mov
push
pop
imull
cmpsb
mov
ficompl
fidivrl
mov
sarb
loope
imul
cmp
daa
inc
ds
xchg
adcb
add
cmp
movsb
sbb
add
popa
xor
sub
outsb
popa
int
cwtl
dec
sub
lods
leave
lcall
mov
dec
lea
add
icebp
test
jbe
pop
cltd
in
adc
mov
mov
scas
frstor
inc
in
push
out
cld
sti
cmp
iret
imul
andb
shll
push
sbb
pop
movsb
cmc
dec
and
xor
jecxz
out
mov
stc
xchg
cmp
fs
test
cmc
cmc
scas
ss
push
sub
sub
andb
cli
xchg
cmp
nop
xchg
or
mov
pop
adc
gs
lods
mov
xchg
add
lcall
adc
loope
add
iret
mov
testb
jo
push
cmp
into
jecxz
scas
loopne
sub
stos
pop
mov
in
xchg
sti
xor
lock
mov
nop
mov
pushw
mov
adc
xchg
pop
cmp
and
test
lea
lods
mov
xchg
pop
sub
gs
adc
fldcw
jge
movsb
inc
xchg
not
inc
add
test
lcall
dec
push
adc
int
fsub
movsl
fcoms
std
jl
mov
mov
xor
xorl
add
fucomi
incb
std
jns
mov
dec
lock
test
das
xchg
mov
mov
pop
push
lods
imulb
insl
pop
mulb
and
sbb
call
xchg
repnz
mov
dec
and
into
fmul
pop
jbe
dec
shr
xchg
sub
fs
aam
adc
es
sub
sbb
in
mov
dec
push
ljmp
loop
lahf
mov
mov
flds
cmc
xchg
pop
cmp
push
push
cmpsb
std
punpckhdq
jp
and
cltd
fbstp
test
xchg
mov
jp
push
stc
or
mov
adc
cmc
xlat
rcrl
xor
mov
sahf
stos
dec
rcrb
sbb
push
insb
sti
add
mov
lcall
push
jle
xor
mov
addl
lods
jne
ja
and
loope
std
test
or
xchg
mov
push
xchg
mov
xchg
inc
pop
out
pop
ja
bound
cld
mov
in
pop
lcall
mov
repz
add
jp
mov
and
mov
dec
lret
in
push
adc
lret
sbb
pop
jp
xchg
subl
sub
rcll
push
out
inc
mov
add
mov
dec
mov
in
and
cs
insb
lcall
jle
subb
jl
adc
pop
loop
ret
and
push
jbe
cwtl
out
dec
jae
clc
pushf
push
mov
inc
or
push
clc
inc
jne
pminub
and
imul
imul
aam
xlat
xor
adc
mov
add
out
hlt
jb
imul
ret
inc
push
pusha
inc
jge
dec
xlat
sbb
aaa
pop
add
or
cmc
inc
add
js
int3
punpckldq
pop
xchg
test
xor
or
mov
adc
fs
mov
adc
in
dec
in
test
and
int
pusha
mov
mov
fs
stos
pop
mov
arpl
and
lock
test
push
test
and
and
aaa
and
pop
sub
adc
pop
push
and
mov
loope
ds
sub
sti
cltd
cmp
dec
adc
aas
push
into
cltd
and
sbb
mov
pop
push
xor
ret
icebp
test
movsl
pop
xor
out
push
shll
fdiv
jecxz
sub
mov
test
testl
jg
repnz
adc
in
and
scas
mov
icebp
outsl
popf
cmp
mov
lret
push
rorl
mov
sub
sbb
xor
cmc
adc
add
jecxz
loop
jge
stc
dec
sbb
cmp
adc
ss
push
jle
addb
sub
inc
cli
mov
sub
popa
push
or
pop
int
cmp
add
mov
jmp
and
pop
in
repnz
or
int3
ds
mov
cmp
nop
mov
or
xlat
out
mov
sub
pop
mov
dec
dec
and
fildll
mov
adc
std
aad
xchg
xchg
xchg
dec
mov
inc
mov
fcmovnu
test
and
popf
push
loopne
cmc
pusha
push
xchg
imul
jmp
dec
call
xor
or
fisttpl
or
push
add
loopne
mov
fs
push
leave
push
aas
cmp
dec
dec
into
movsl
add
ja
mov
dec
shll
and
cwtl
fldcw
mov
jbe
mov
jmp
or
mov
fistpl
or
mov
dec
mov
mov
mov
mov
out
xchg
shll
mov
mov
xchg
adc
stc
cmp
icebp
or
insl
lret
bound
mov
and
imul
or
sub
test
es
jp
fldl
clc
clc
dec
or
ljmp
fldt
test
inc
xchg
cmpsb
jmp
push
sub
pop
inc
add
lods
ficompl
sbbb
push
mov
sub
data16
sbb
inc
sahf
shr
sbb
sbb
cwtl
das
xchg
add
add
or
xor
js
dec
pushf
stc
mov
bnd
mov
push
lea
inc
xchg
xchg
orb
lcall
sub
and
imull
out
cmp
pop
bound
or
imul
pushf
mov
sub
gs
lods
fldenv
mov
stos
fistpll
and
or
mov
punpcklbw
rorl
lods
pop
xchg
push
jecxz
jmp
fmull
add
out
cmp
popf
sub
fistl
roll
and
xchg
insb
add
dec
bound
int
push
fadd
sbb
add
xor
rcr
ret
int3
pop
les
add
xchg
pop
lods
push
dec
sub
and
inc
hlt
fidivl
dec
xchg
fisttps
push
push
loope
adc
mov
pop
and
shrb
xchg
mov
pop
loop
leave
or
hlt
mov
mov
pop
jge
addl
mov
add
cld
cmp
fdivp
scas
mov
jo
test
scas
push
js
and
mov
int3
push
pop
sbb
int
push
in
xor
enter
daa
dec
enter
addr16
jno
je
jl
cltd
jb
sbb
and
inc
mov
movsl
xchg
stos
sub
mov
sub
push
sub
in
push
out
fcoml
cmpsb
mov
cmp
pop
ds
psraw
sub
icebp
call
mov
mov
clc
fwait
ljmp
dec
or
add
sbb
lahf
or
movsb
and
lcall
inc
fsubl
sub
outsb
lret
test
and
push
out
mov
jb
mov
push
and
mov
hlt
push
lcall
jno
imull
clc
ja
fbstp
sbb
push
arpl
fisubl
xor
test
outsl
lods
aas
push
loop
data16
sahf
dec
fs
add
adc
lahf
cltd
lods
or
outsl
pusha
out
dec
leave
cli
mov
mov
iret
or
mov
gs
movsb
pop
or
jae
inc
xor
imul
icebp
push
add
mov
nopl
mov
mov
int
jne
pop
in
mov
pop
adc
aad
adc
nop
jno
pop
dec
jo
jo
dec
lcall
movsl
repz
in
xchg
outsb
testl
mov
xchg
push
jg
push
test
or
mov
lcall
int3
lods
aas
fcomp
sbb
andb
inc
fildll
je
leave
push
jecxz
push
ffreep
aam
push
std
lret
cwtl
xchg
fistpl
mov
inc
sbb
gs
dec
lock
pop
inc
xchg
push
mov
xor
xchg
das
inc
out
mov
dec
push
not
push
cmp
imul
push
fs
daa
test
dec
sbb
and
sub
fcomi
loopne
iret
cld
dec
loope
lret
rcll
lock
lret
sbb
hlt
mov
mov
hlt
rclb
sub
aam
push
ret
lea
out
es
vpackuswb
xchg
xchg
pop
mov
dec
popa
sbbb
lods
jne
lds
pop
pop
dec
xchg
in
add
or
movaps
mov
in
imul
test
pusha
push
push
jg
mov
mov
ja
loope
sbb
repz
test
fwait
jle
roll
jl
jbe
fisubrs
sti
cmp
add
or
lcall
jge
or
mov
int
mov
cmc
adc
mov
and
add
jns
dec
loopne
addb
sbb
mov
fwait
clc
push
insl
push
int3
cmp
jne
scas
jb
dec
rcrl
out
sbb
in
ss
fnstcw
faddl
hlt
loop
xchg
mov
and
xchg
or
pop
shlb
and
adc
repz
lea
push
jg
mov
int3
leave
fistps
xchg
lret
popa
mov
adcl
out
lods
les
rclb
push
int
jae
xchg
in
and
mov
jnp
mov
add
pop
ja
adc
cs
pop
fcmovne
ret
in
pop
sti
ret
scas
mov
sub
fcoml
adc
jnp
push
inc
shrb
inc
testb
add
out
fcoml
rcrl
scas
hlt
sub
inc
jne
mov
stos
ja
leave
sbbb
or
dec
arpl
and
call
test
repnz
pop
aaa
popf
cwtl
and
std
pop
incb
xor
cmc
int3
in
repnz
in
scas
push
xor
ret
scas
xor
lock
inc
pusha
cmp
xchg
movsl
push
scas
imul
in
sbb
fldenv
dec
cmc
lea
mov
jno
cmc
cmp
dec
mov
sahf
push
sub
adc
push
ficompl
lahf
ret
cwtl
jb
inc
sub
mov
icebp
das
cmpsb
loop,pt
pop
jnp
inc
js
fnstcw
push
ret
loope
push
sub
mov
sbb
adc
cmc
cs
push
sbb
xor
jb
jmp
push
int
inc
test
int
js
sub
rcrl
xor
int3
lcall
sbb
pop
push
loopne
sub
mov
jg
out
fstl
and
in
mov
adc
divl
loope
add
mov
insb
pusha
mov
pop
repnz
shll
mov
and
adc
jecxz
popf
mov
cmc
mov
adcl
test
fs
int
orl
mov
in
out
pop
inc
cli
repnz
mov
addb
add
gs
loopne
cmp
pop
sub
adc
std
jl
adc
ja
add
outsl
and
in
loope
orb
inc
sbb
icebp
les
in
and
rorl
pop
dec
aad
hlt
test
dec
iret
pop
cmpsb
inc
fsts
les
lods
jmp
lea
mov
negb
bound
gs
out
push
mov
jp
popa
cmpsb
jmp
inc
sub
cmpsl
inc
push
jecxz
aas
ja
aaa
jb
adc
je,pt
cmp
sarb
xlat
xor
jno
jp
dec
loope
mov
nop
pushf
mov
add
cmp
xchg
mov
jnp
inc
pop
out
jg
jae
out
outsl
or
cltd
mov
add
xor
rcll
inc
divb
subl
push
stc
cmpsl
dec
sbb
cltd
icebp
mov
jns
jae
lret
lret
inc
rorl
cmpsl
sub
shl
hlt
shlb
call
aam
gs
ret
sbb
pop
add
fisttpll
test
xchg
pushf
cmp
ljmp
or
mov
inc
xor
add
repnz
xchg
lcall
cltd
test
lock
cmp
inc
cmpps
sahf
test
ret
jb
into
sbb
rcl
lcall
stos
push
mov
pop
cmp
stos
imul
ds
mov
or
push
xchg
mov
clc
sub
mov
fidivrs
mov
inc
ret
or
subb
outsl
outsl
mov
push
mov
out
cli
nop
les
xchg
in
movsl
jbe
or
pop
mov
or
or
jmp
xchg
jp
push
xor
push
int3
xchg
mov
mov
mov
pusha
es
fistpll
je
jmp
jb
xchg
rorb
mov
or
scas
stos
stc
dec
lods
and
cli
insb
fildl
jle
inc
arpl
mov
adc
fldl
arpl
pop
xor
dec
inc
mov
jmp
xchg
or
fistpl
in
lcall
sbb
mov
imul
dec
scas
push
sub
insb
fistps
popa
push
pop
mov
incb
leave
testl
les
add
inc
pop
pop
cmp
xchg
jae
lods
sbb
or
fwait
je
enter
shrb
std
fidivs
mov
adc
sbb
cmp
and
leave
cmp
sub
sti
push
jbe
movsl
dec
in
add
daa
dec
cmpsb
push
cmp
fcmovnu
jno
lcall
clc
adcb
or
clc
movsl
movsl
add
loop
cmp
xor
pop
push
test
cltd
inc
in
adc
shll
js
sbb
pop
mov
fimull
mov
pop
cmp
mov
cmpsb
push
adc
sarb
jnp
or
mov
and
add
repnz
xor
jg
mov
imull
lcall
lcall
movsb
fdiv
fisttps
push
cmp
cmp
or
test
mov
jmp
mov
popa
mov
jne
and
mov
cli
andb
test
mov
adc
lret
mov
or
fcomps
aas
dec
lea
push
jb
outsl
push
nop
loop
jg
outsb
popl
inc
xchg
adc
jmp
les
lods
mov
add
cli
and
fnop
cmp
int
or
in
inc
gs
xor
pop
dec
sbb
out
lock
roll
sub
sti
sbb
mov
push
and
mov
nop
mov
jl
int3
ret
lea
