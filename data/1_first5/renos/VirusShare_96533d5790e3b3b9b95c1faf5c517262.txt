pushf
pushf
jl
jmp
mov
mov
leave
test
in
enter
adc
in
in
or
outsl
cld
setae
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
dec
outsb
mov
enter
nopl
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
insb
push
dec
dec
pop
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
ljmp
mov
push
push
call
pop
ret
lea
mov
mov
mov
mov
ljmp
enter
nop
push
mov
add
mov
mov
mov
add
add
test
div
ja
sarb
xchg
dec
test
jb
inc
lock
fidivrl
repz
rorb
cmp
or
je
in
jg
repnz
mov
and
xor
mov
dec
cld
mov
and
xor
faddl
pop
aas
lock
icebp
add
ja
mov
dec
hlt
mov
js
clc
sub
cmp
adc
add
repz
jne
cmp
rcrl
xchg
mov
mov
ja
add
add
cld
pop
pop
dec
fstpl
fdivr
in
mov
test
add
mov
std
mov
lock
lea
lea
in
jo
sbb
jge
add
mov
adc
in
ret
addb
je
fadds
leave
inc
jnp
mov
mov
adc
mov
and
adc
sub
mov
idiv
mov
and
cmp
js
add
xor
mov
inc
jl
sub
xchg
xor
mov
mov
lea
add
xchg
inc
xor
lea
or
lea
xchg
test
jne
cmp
and
mov
aam
sti
fistpll
xchg
xor
inc
jno
and
or
mov
test
decl
fs
or
aad
xlat
inc
adc
dec
pushf
jae
pop
mov
call
out
test
jae
or
inc
cmp
jo
xchg
mov
lcall
outsl
adc
sub
xor
inc
dec
je
lret
and
mov
and
mov
subl
fst
or
decl
repz
lods
pop
out
icebp
jo
or
or
push
int
jmp
adc
js
jmp
flds
add
outsb
xchg
decl
clc
or
xor
xchg
testb
rorl
sti
cmp
lock
lea
fsubrp
and
add
shll
fdivr
pop
insb
into
lea
or
imul
add
xchg
into
sub
xor
mov
jmp
sahf
mov
mov
aaa
jg
add
js
mov
mov
dec
add
xor
sahf
outsl
xor
inc
mov
sbb
adc
inc
dec
dec
add
les
push
in
lock
mov
neg
push
cmc
mov
inc
mov
mov
xchg
mov
add
jmp
xchg
mov
or
mov
xchg
clc
jmp
jno
lea
xchg
mov
jmp
dec
xchg
jbe
dec
xor
xchg
incl
jmp
mov
adc
inc
mov
dec
jmp
mov
sbbb
sbb
or
inc
push
jg
call
mov
sub
dec
jne
mov
jmp
jne
or
das
clc
loop
mov
dec
or
xlat
jg
fbld
les
daa
insl
adc
dec
jbe
fisttpl
cld
decl
sbb
inc
mov
cmp
adc
push
or
lahf
aad
ja
fxtract
mov
adc
je
adc
pop
pop
pop
mov
mov
sbb
mov
mov
xchg
push
cmp
jmp
inc
fcoms
pop
sahf
cmpsl
sbb
loopne
jl
xchg
rcr
mov
lds
out
mov
in
sub
std
sti
int3
cmp
mov
test
test
mov
inc
sahf
sahf
inc
and
push
in
mov
mov
xchg
mov
or
adc
mov
mov
incl
sub
or
sbb
out
lea
ret
testb
ds
adc
call
cltd
jno
int3
add
and
repz
adc
and
adc
mov
ret
push
insb
jo
mov
js
cmp
push
loop
flds
mov
dec
jg
negb
dec
xchg
adc
cli
mov
mov
add
pusha
mov
sbb
add
mov
sbb
push
icebp
aaa
xor
inc
cli
xor
incb
repz
push
jbe
inc
cld
adc
sbb
sbb
stos
incl
mov
xchg
fdiv
mov
xchg
sahf
add
or
ss
xor
add
jno
jmp
sub
lcall
adc
mov
cmp
jle
jns
add
lea
testb
mov
out
and
and
call
or
xlat
adc
sahf
out
leave
outsl
push
aas
sub
jb
les
and
xchg
or
incb
fnstcw
lret
add
mov
xor
ds
fwait
cmp
dec
loope
mov
jmp
jmp
js
lahf
dec
pop
push
lcall
cld
dec
call
lret
hlt
push
mov
je
sub
mov
popf
outsb
or
jo
lods
and
aaa
jge
rcrl
inc
xchg
fisttpll
ja
in
dec
loop
mov
push
jnp
pop
pop
cmpl
into
test
xchg
mov
pusha
mov
xchg
dec
mov
sbb
lock
push
lcall
mov
jmp
xor
cmp
in
ficoml
cmp
jne
insb
pop
cld
add
adc
loop
pusha
incb
scas
repz
mov
dec
dec
push
jmp
in
bound
loope
add
and
mov
js
cmp
jp
out
mov
lock
fisttpll
add
in
clc
pop
mov
lea
mov
cmp
pusha
push
jle
mov
addl
in
dec
lock
pushl
stc
cmp
sbb
sub
adc
lea
jmp
and
mov
jmp
adc
rorl
lcall
mov
mov
mov
stc
jb
jno
mov
ret
lock
js
or
or
pop
cmc
sub
mov
loop
std
inc
inc
or
jo
ja
push
pushl
mov
inc
add
lea
adc
test
rorl
xchg
leave
add
sbb
je
add
into
cmpsb
jmp
fmuls
mov
rcl
adc
int
or
or
das
xor
xor
add
add
adc
xor
cmp
push
xor
xor
xor
sub
sarb
add
jge
dec
inc
enter
dec
clc
sbbb
test
test
push
les
addl
inc
or
add
popa
cmp
xor
inc
xchg
cltd
push
push
ss
gs
in
mov
test
mov
fmuls
push
rcl
out
or
dec
pop
cmovp
inc
or
xchg
and
cmp
jne
pop
out
arpl
push
shlb
into
or
stc
pop
adc
inc
pop
ss
pop
je
push
mov
lods
mov
or
jge
pushf
mov
imul
sub
dec
mov
mov
fldt
sbb
jmp
jmp
mov
enter
xchg
lea
pop
faddl
push
and
xchg
mov
inc
outsb
ret
leave
pop
fisttpll
jno
pop
adc
shlb
jo
jns
in
cwtl
push
xchg
cmp
int
in
cwtl
test
add
in
pushf
sub
das
sbb
xor
mov
pusha
sbb
lock
test
mov
addb
dec
push
mov
push
add
out
js
dec
js
pop
je
out
out
sub
or
and
pop
inc
arpl
cmp
jns
dec
cld
sbb
out
nop
push
and
fiadds
sub
adc
fs
ds
adc
ds
dec
add
jns
out
repnz
negl
pop
cmpsb
ja
bnd
inc
jb
push
mov
popa
nop
xchg
cmpsl
xchg
pop
pusha
xor
inc
and
movsb
imul
enter
inc
dec
fs
je
fists
pop
hlt
xchg
mov
inc
mov
sbb
insb
call
and
push
inc
lcall
icebp
and
cmpsb
in
sahf
or
or
sbb
xor
push
call
inc
cmc
popa
mov
mov
add
jg
icebp
cmpsl
insl
jmp
mov
inc
push
pop
jmp
sub
xchg
jmp
jl
push
loopne
in
in
jp
sbb
push
or
fldl
es
sub
fmuls
ljmp
mov
adc
cmovb
lcall
mov
cld
xor
mov
repz
adc
jg
aaa
mov
inc
mov
pop
in
xor
mov
add
jne
jle
or
push
pop
mov
xchg
or
loop
push
test
push
outsb
jmp
mov
je
jecxz
pop
xchg
cmpsb
sarb
xor
aad
push
xchg
out
adc
sub
sub
push
ss
sub
xor
push
sbb
in
stos
and
jecxz
xchg
cmp
pop
lcall
mov
movsl
adc
sbb
enter
sbb
cmp
or
fcoms
stos
movsl
and
xchg
das
add
add
add
xor
fcomi
or
aaa
xor
cmp
aaa
xor
lods
adc
repnz
aaa
add
xor
lcall
xor
sub
mov
cmp
jp
add
mov
outsl
into
xor
cmp
xor
cmp
neg
outsl
pop
xor
cmp
pop
add
mov
jge
xor
inc
outsb
or
jmp
lea
inc
adc
cmpsl
mov
hlt
loope
sub
dec
and
push
js
xor
or
mov
mov
sub
dec
movsl
mov
test
and
mov
dec
test
lods
sbb
les
rcrb
mov
xor
xchg
das
cmpxchg
lea
add
inc
add
add
rcr
lods
test
call
outsb
or
xchg
adc
daa
sbb
inc
movsb
ds
cmpsb
test
sub
pop
sub
movsl
and
sub
mov
sub
adc
packuswb
push
jb
xchg
push
sub
sub
inc
enter
push
stc
pop
cmp
mov
data16
jp
imul
lea
push
add
dec
pop
adc
xchg
sub
nop
hlt
adc
je
cmp
repnz
stc
adc
sahf
mov
std
outsb
call
into
fldcw
mov
and
insb
sbb
cwtd
iret
jmp
xchg
pop
xchg
jno
xor
xlat
and
adc
mov
sub
in
sub
pop
xchg
cs
in
repnz
push
into
push
nop
stc
int3
inc
cs
dec
sbb
push
or
push
ret
jl
push
mull
dec
in
cmp
fwait
inc
clc
cmp
dec
xor
lret
cmp
add
inc
inc
add
rorb
cmp
xor
xchg
dec
pop
cmp
xor
xor
fmulp
xor
pop
inc
std
shrb
xor
xor
jg
cmp
mov
mov
mov
rep
pop
pop
xor
out
pop
stc
jbe
jmp
je
pop
movsb
jne
xor
cmp
negb
inc
sti
mov
xor
fmull
std
xchg
mov
fs
hlt
sub
and
jge
mov
test
andb
jle
call
rorb
scas
mov
add
push
sbb
ljmp
lods
loopne
gs
mov
and
cmp
jne
in
jmp
push
jge
adc
loop
movzwl
add
push
in
mov
add
sbbl
outsb
decl
jne
jo
pop
out
fcomp
ss
jne
sahf
repz
arpl
lahf
adc
push
dec
push
add
sbb
je
aaa
jg
sub
xor
jmp
or
jmp
xlat
sti
mov
add
sub
pop
int3
hlt
jl
pop
add
push
add
jl
jmp
add
outsl
xor
shll
mov
push
test
add
incl
imul
pop
sti
sub
adc
push
push
push
pop
rcrb
lds
ret
pusha
negb
testb
lods
xor
inc
sbb
xor
xchg
and
dec
addr16
lock
jno
mov
mov
adc
and
je
stos
jne
add
aad
adc
push
pop
mov
je
mov
xor
test
sbb
pop
aas
or
cmc
test
mov
xor
bound
inc
mov
loopne
pop
push
inc
adc
push
jg
push
sbb
sbb
fiadds
adc
lock
iret
ja
insl
pop
adc
in
xor
lcall
loopne
jle
xchg
fucomip
push
pop
enter
push
imul
insl
jg
fsubr
push
ficoml
hlt
testb
sbb
jbe
adc
adc
mov
mov
arpl
push
les
inc
jo
popa
inc
adcl
xlat
jl
jne
adcl
or
inc
sbb
mov
push
jle
push
mov
mov
xlat
hlt
rclb
push
loopne
push
sbb
inc
mov
in
ret
ret
xor
pop
jle
cmp
decb
jne
or
insl
je
clc
inc
dec
add
xchg
mov
insl
sbb
sbb
inc
push
and
and
loopne
jae
adc
push
dec
sahf
das
fsubp
inc
add
mov
in
mov
loope
dec
stos
jg
push
or
ds
pop
jmp
dec
pop
clc
dec
rol
add
mov
pushl
shl
jne
test
jne
jo
daa
pop
mov
push
inc
imull
hlt
xchg
subb
pop
mov
inc
push
es
push
je
test
add
inc
add
mov
mov
adc
hlt
or
inc
sarl
sbb
adc
fidivs
xchg
push
cmpl
pop
add
mov
or
xchg
or
pop
pop
shlb
push
push
push
cmp
jle
sbb
or
push
jl
cmp
iret
inc
dec
xor
jno
sbb
or
stos
or
mov
mov
push
shrb
add
mov
adc
dec
das
inc
gs
jb
arpl
fs
jae
push
dec
outsl
popa
fs
imul
loope
jns
xchg
dec
jo
outsb
push
push
insb
outsl
jle
pushl
dec
popa
outsb
fs
add
imul
addr16
bound
arpl
outsb
insl
popa
jo
imul
inc
adc
je
popa
insb
inc
insb
out
insl
scas
outsb
arpl
pop
inc
or
inc
inc
bound
push
inc
jo
fwait
jle
inc
outsb
je
aaa
inc
pop
and
xchg
mov
inc
js
orl
stos
or
or
mov
cmp
xor
mov
xor
fdivrs
xor
push
mov
mov
dec
push
orl
out
cmpxchg
cmp
es
dec
xor
push
dec
aam
pop
inc
sub
cmp
out
add
and
xchg
js
jge
adc
add
dec
mov
jbe
mov
fistpll
push
mov
movl
mov
ret
adc
scas
dec
inc
or
sub
js
mov
xchg
and
adc
xor
xchg
sbb
inc
dec
sub
inc
dec
dec
es
gs
dec
dec
call
dec
js
or
add
stos
push
sub
les
lret
xor
jge
orl
add
in
shlb
push
inc
mov
sahf
fs
cld
in
xchg
rcrb
cmp
dec
lock
shr
ss
and
js
cmpsb
mov
orb
jl,pn
xor
aaa
repz
xchg
cmp
sub
dec
or
incl
cmc
lock
loopne
adc
pop
test
scas
sarb
mov
lea
xor
cmpsb
in
adc
je
pop
push
cmp
push
adc
insb
inc
and
data16
decl
jne
pushf
cmpsb
push
cld
pop
and
pop
mov
adc
out
push
cmp
jl
std
shr
popf
push
pop
sub
inc
rorb
lret
cmp
sbb
mov
inc
add
push
test
and
ds
jb
jmp
inc
xor
push
js
cmp
sub
inc
push
push
inc
leave
inc
pop
inc
and
push
inc
mov
jbe
jne
movsl
add
pop
cmp
fsubr
scas
gs
repnz
fmul
push
sub
flds
cmpsb
cs
xchg
pushf
mov
cmp
adc
cmpl
or
adc
mov
lahf
push
pop
dec
and
imul
add
ja
out
jb
outsb
or
add
add
mov
popf
add
sub
es
and
push
jle
ljmp
gs
addr16
jb
es
outsb
add
cs
insb
int3
add
inc
sti
je
stos
sub
adc
nop
pop
out
es
pop
sbb
mov
add
hlt
xchg
jo
sub
jne
mov
push
xchg
jp
xor
sbb
rorb
pushf
sbb
and
pop
jle
roll
sbb
imul
pop
xor
jb
pop
and
jne
jmp
ret
into
mov
push
je
mov
ja
dec
clc
mov
cli
sahf
cld
cld
sbb
add
inc
xor
add
fpatan
dec
dec
push
pop
or
ficoml
dec
mov
push
sbb
cmpsl
and
xchg
dec
dec
mov
add
add
or
call
test
mov
cmp
inc
fisttps
dec
inc
enter
dec
nop
nop
push
inc
mov
xchg
nop
sub
or
adc
mov
pop
lods
push
inc
sub
adc
adc
test
in
adc
add
and
push
les
fadds
dec
push
pop
mov
nop
dec
les
rorb
xor
add
and
xchg
sub
push
push
cmpsl
incl
pop
cmp
sbb
inc
pop
aad
add
jns
push
ja
out
icebp
add
mov
add
pop
mov
pop
roll
push
jne
loop
sbbl
clc
mov
lea
xor
cmpw
jb
add
test
pop
inc
push
push
xchg
prefetchnta
lods
sub
addb
test
bound
cltd
jae
and
or
push
xchg
sti
inc
icebp
push
leave
inc
push
pop
xor
repnz
and
pop
or
pop
dec
cmp
inc
push
dec
in
subl
ret
sbbl
leave
pop
roll
mov
in
mov
fdivl
mov
xchg
dec
iret
jecxz
cmc
outsl
and
add
imul
cmp
dec
pop
pop
sbb
leave
aad
outsb
daa
addb
cs
sbb
les
aad
dec
outsb
xchg
out
clc
or
sbb
dec
sbb
pop
daa
insl
sbb
outsb
das
adcl
das
aaa
push
jmp
inc
cld
das
sbb
xchg
fdivs
pop
push
in
in
jo
xchg
mov
and
mov
mov
cld
push
jb
mov
push
pop
pop
and
jb
adc
das
pop
cmp
jo
sahf
adc
push
cmp
and
inc
aaa
pop
jne
and
nop
stos
dec
test
and
loope
pushf
nop
int
repz
adc
daa
push
jnp
cmp
pop
add
dec
in
mov
daa
xchg
inc
aas
fimull
popf
in
cmp
gs
jb
sub
mov
mov
xchg
ja
pushf
in
pop
lcall
dec
movsl
sarl
addr16
push
mov
sbb
add
inc
mov
int
pshufw
push
addr16
mov
aaa
pop
pop
fwait
pop
push
ffreep
sahf
dec
mov
pop
inc
fistps
in
popf
popf
jbe
outsl
repnz
mov
popf
jbe
mov
mov
mov
cmpsl
jbe
push
aaa
mov
je
adcb
daa
int3
push
aam
dec
mov
sub
add
aas
jae
ret
aam
lock
pop
cmp
add
fsubs
pop
adc
inc
lret
bound
in
sub
push
pop
cmp
push
cmp
cmpsl
xor
add
cmpsl
mov
mov
daa
call
mov
daa
mov
aaa
call
adc
cmp
enter
push
fnstenv
or
fcoms
pop
add
mov
add
bound
imulb
aaa
mov
leave
flds
xor
nop
xor
cmp
dec
jb
and
loope
and
rorl
outsl
jns
sbbb
xchg
in
add
push
enter
push
jbe
insl
push
jge
dec
xchg
xchg
das
out
int
popf
bound
push
aas
bound
xchg
movsb
das
add
fwait
js
lahf
lods
push
xor
fldl
shl
push
pop
jnp
fcmovne
out
and
pop
jp
add
mov
js
dec
add
and
add
push
add
push
in
mov
daa
add
ja
sub
rorb
mov
sub
cmp
xchg
add
add
add
and
filds
add
enter
add
add
add
add
in
cmpb
inc
inc
or
push
jg
jle
push
push
dec
or
jno
cmp
inc
inc
or
das
add
add
jmp
jb
repnz
push
sahf
repnz
or
std
pop
gs
add
xchg
or
ds
loopne,pn
adc
cmp
in
gs
push
xchg
push
bound
add
mov
sub
es
shrb
shl
mov
add
inc
imul
mov
adc
mov
or
out
test
scas
mov
outsl
xor
and
bound
lcall
xor
in
jmp
ja
push
arpl
mov
into
xor
rcr
sti
or
xor
ja
push
pushf
and
mov
cmp
xchg
out
mov
sbb
ja
les
dec
jno
jb
mov
sbb
pop
in
and
mov
push
mov
add
add
push
xchg
sub
orb
or
inc
jmp
aas
sti
fcoml
xor
inc
and
mov
jbe
jg
mov
negl
inc
xor
xor
mov
xor
imul
fstpt
inc
pop
shrl
imul
xorl
insb
and
push
xor
add
lods
add
out
xchg
push
test
xchg
sbb
inc
and
movsl
or
shrl
pop
dec
fistpl
popa
ja
leave
aad
mov
inc
mov
push
das
sbb
push
or
aas
adcb
roll
or
sub
add
mov
push
lds
cltd
pusha
insl
xor
testl
ret
movzbl
fidivrl
xchg
jmp
xchg
dec
mov
mov
test
int
ss
mov
movsl
mov
stos
sub
xor
imul
mov
mov
and
test
add
push
bound
test
push
call
shll
adc
imul
xchg
xchg
add
imul
push
sub
xor
sbb
sbb
push
add
dec
inc
addl
dec
outsl
mov
test
push
inc
and
add
and
and
cmp
pop
or
inc
pop
test
iret
arpl
push
inc
iret
movsb
or
lods
dec
adc
stos
or
mov
insl
xor
inc
mov
adc
bound
outsl
xchg
mov
adc
pop
pop
dec
or
push
cmp
push
mov
push
and
aaa
xchg
frstor
rol
stos
or
dec
scas
aad
mov
test
push
movsb
or
popa
xor
rorl
test
daa
push
mov
lods
cmpsb
aad
cmp
jo
xor
mov
ljmp
adc
aaa
pop
mov
lcall
adc
jmp
xlat
xor
adc
adc
aam
pop
movsl
fstps
andl
sbb
icebp
ja
adc
lods
ret
test
mov
sbb
rclb
sbb
test
xor
insl
sbb
mov
insl
jne
push
inc
or
push
ret
mov
jno
sbb
mov
inc
mov
dec
dec
jno
fistpl
and
cmp
lods
cs
and
inc
lds
push
mov
pop
adc
add
mov
add
push
aad
fwait
or
pop
pop
adc
stos
sub
pop
roll
fildl
arpl
sub
lcall
cmp
push
and
icebp
or
std
mov
lods
movsl
or
or
xchg
push
add
and
dec
sbb
dec
or
lret
inc
lret
aas
xor
test
es
incl
push
add
add
popa
adc
subl
cmpsb
adc
add
loope
dec
adc
pusha
xlat
add
bound
into
add
cmp
lret
jge
ret
mov
mov
imull
add
ss
stos
and
lcall
xor
adc
out
mov
mov
inc
das
xchg
movsb
pop
sub
neg
jae
dec
loop
dec
das
inc
pop
cs
aaa
imul
xor
sbb
in
mov
cmp
repnz
shlb
adc
and
arpl
cli
daa
stos
roll
and
mov
testl
xchg
fmulp
outsl
mov
jne
and
into
mov
mov
ds
inc
das
mov
out
jbe
andl
xor
popf
mov
dec
fisubrs
divl
inc
xchg
add
or
ja
lods
inc
movsl
call
adc
insb
cmp
movsl
aas
xchg
add
mov
lret
jecxz
push
pop
mov
shll
mov
inc
dec
sbb
es
fldcw
add
add
jo
movl
jge
mov
inc
ljmp
xchg
scas
jge
outsl
jbe
iret
repnz
clc
out
sub
idivb
pop
lea
cmpsl
movsb
pop
push
sbb
imul
mov
cltd
loopne
adc
or
jnp
xor
dec
push
lret
or
ffreep
sub
rcll
movsl
jecxz
sahf
sti
or
lds
push
xchg
xor
and
bound
xchg
push
inc
push
outsb
sbb
add
jb
jbe
shll
mov
mov
dec
lock
inc
inc
jle
repnz
xchg
popa
dec
xchg
adc
dec
add
ja
or
inc
and
int3
push
or
sbb
push
ss
cmp
inc
xor
mov
push
add
jecxz
imul
adc
jbe
icebp
xchg
lods
jnp
movsl
sbb
dec
popa
orb
out
orb
xchg
stos
lds
mov
sbb
orb
inc
cmc
xchg
mov
add
ljmp
xor
mov
addr16
adc
mov
out
push
mov
jbe
repz
sub
psrad
stos
pushf
ss
pop
out
xchg
cmpl
jge
daa
div
out
mov
cli
lret
repnz
adc
sbb
in
cli
stc
je
divb
mov
sub
mov
inc
icebp
ret
pop
push
mov
rolb
sbb
popa
shll
into
inc
fidivrl
mov
and
sbb
stos
ffree
and
stos
imul
inc
and
jae
stos
shll
sbb
xor
out
daa
ss
add
mull
jae
addr16
inc
sbb
xchg
cmp
xchg
dec
xchg
push
pop
add
or
mov
and
sbb
jno
adc
jbe
shrb
cmp
or
bound
mov
or
rorl
and
mov
stos
rclb
inc
loope
mov
jbe
mov
jp
andl
jg
jnp
cmp
sbb
cmp
add
out
or
inc
stos
movsb
jbe
movsb
xlat
mov
jp
adcl
mov
push
out
xor
lcall
xchg
shr
pop
cmp
test
pushf
jne
push
dec
jmp
cmc
jb
adc
lret
addb
dec
jo
pop
scas
fdivrl
pusha
or
cmp
aaa
sbb
ss
or
pop
bound
in
shrb
mov
or
daa
add
test
ret
loopne
add
inc
add
mov
jmp
shrl
push
add
popa
sbb
mov
loopne
sbb
inc
and
scas
lahf
mov
push
adc
lods
push
jb
pop
fdivl
mov
insb
ds
and
and
or
pop
inc
jle
sub
cld
add
leave
and
push
pop
into
loope
fcmovnb
push
mov
data16
pop
addr16
cltd
pushf
shr
xchg
adc
xchg
add
negl
in
subl
test
or
fisubs
push
dec
cmp
popf
add
ja
and
daa
adc
or
add
stc
jno
sub
dec
scas
enter
dec
or
in
push
cltd
add
in
fidivrs
cmp
add
sub
sub
push
test
jl
shlb
lea
adc
mov
lret
cmp
scas
push
and
push
add
aaa
add
cmp
fmuls
inc
aaa
mov
mov
ljmp
dec
xor
popf
push
push
ret
fistpl
jae
and
ret
dec
outsb
out
scas
ret
mov
xor
sarb
xlat
clc
imul
mov
pusha
cmp
dec
mov
push
push
push
push
into
add
or
scas
add
je
jb
mov
jnp
jnp
lods
sbb
adc
call
mov
outsl
mov
sbb
and
fwait
divb
mov
fdivrp
sti
adc
imul
inc
movsb
jb
icebp
xchg
clc
xlat
xchg
mov
je
jl
dec
mov
push
add
jmp
jp
or
or
add
and
aas
cmpsl
aad
jno
imul
sbb
mov
subl
add
cld
rcr
xchg
clc
loop
push
fidivrs
fisubl
out
add
pop
mov
cmp
mov
dec
lret
and
mov
inc
shlb
out
stc
jecxz
adc
inc
faddp
cwtl
and
pop
test
es
fs
lret
ja
stos
jecxz
xchg
test
inc
cmc
lret
je
ja
cmp
jmp
stc
pop
and
fadd
lret
push
cld
out
ds
dec
and
xor
les
sarb
cmp
sub
sub
sub
movl
sbb
xchg
scas
inc
cmp
loope
xchg
inc
mov
jg
sbb
pop
jne
sub
pusha
jle
add
shr
pop
and
fiaddl
int
jno
push
inc
je
push
cmp
stos
enter
xchg
jl
sbb
mov
fisubs
jo
loopne
mov
aad
lret
cmpb
jl
cmovno
pop
or
and
jge
jne
lds
jnp
push
add
pop
cmpsl
in
add
push
pop
loopne
xchg
in
fnsave
add
stos
add
in
mov
or
pop
stc
add
push
popa
push
cs
xlat
call
push
mov
cmpsb
push
dec
add
lock
and
mov
add
mov
jle
ltr
js
jbe
cmp
ja
lret
add
add
add
subl
jmp
xor
push
sbb
aam
jmp
ljmp
in
adc
data16
jnp
popf
fisubrs
adc
jno
in
std
icebp
scas
dec
call
leave
sbb
icebp
scas
jge
insl
fisubrs
shrl
int
add
sbb
nop
mov
fimull
lcall
scas
into
repnz
jp
scas
idivl
push
js
stc
add
pushf
lock
stos
loop
test
adc
or
add
jg
loopne
rorl
pusha
or
pop
je
fistps
fwait
dec
popf
inc
jp
xchg
fst
cs
ss
or
idivl
movl
lock
out
or
inc
daa
xor
jecxz
xor
and
mov
orl
jo
insb
fcompl
jp
insb
and
rorl
clc
mov
xchg
stos
push
dec
in
lret
in
cmp
daa
stos
repz
xchg
cmp
pop
aaa
dec
sarb
fisttpll
out
and
cli
pop
addb
sbb
mov
in
ret
add
jge
xchg
test
jns
or
pop
aaa
pop
insl
cmp
jmp
data16
cmpsl
lret
and
sbb
add
sbb
and
clts
and
into
pop
push
pusha
jmp
add
add
bound
adc
cmp
sub
add
fisubs
jl
cmp
cmp
jle
ret
push
aam
mov
pop
fcmovnb
lods
fisubs
aam
sbb
sbb
push
adc
mov
or
jl
and
loop
jp
xor
cmpb
fldl
cmpsb
cli
sbb
enter
out
push
jae
xchg
call
addb
xchg
mov
mov
dec
xor
and
xor
cmp
shrb
int3
stos
or
in
and
or
outsb
sbb
inc
ja
das
int
cmp
cmpsb
or
jno
aaa
cmpsl
mov
sub
push
lock
pop
lret
loop,pt
add
mov
aam
push
out
adc
rolb
mov
pop
lcall
cwtl
cld
roll
mov
daa
lret
jbe
insl
call
cmp
rolb
sarl
cmp
orb
insb
mov
add
xorb
dec
or
mov
jp
int
ds
push
mov
fwait
loope
pop
dec
cs
data16
cmp
jmp
sub
xor
and
repz
xor
loopne
fsubp
push
xchg
arpl
fsts
add
xchg
ds
sbb
ret
and
mov
pop
mov
je
mov
jnp
mov
mov
clc
mov
or
fmuls
sbb
loop
je
clc
mov
inc
stos
mov
cmp
addr16
xlat
popf
mov
pop
outsl
test
sbb
adc
sti
ret
jnp
repnz
adc
cmp
es
leave
jle
jle
push
fdivrl
movq
xor
push
rol
pop
xor
lret
aas
pusha
or
mov
mov
jp
cmp
xchg
int3
icebp
ret
jb
shr
xabort
and
jno
add
js
sbb
adc
popa
mov
test
andl
jle
inc
xchg
addl
and
sbb
push
push
add
mov
xor
clc
fimull
aaa
and
out
mov
inc
add
and
mov
scas
icebp
in
imul
cmp
test
jo
jp
push
cmp
jmp
outsl
test
ret
push
sub
cmpsl
jnp
pop
faddl
int
jne
loope
push
push
ret
rcrl
xor
and
push
loopne
or
push
lock
pop
adc
add
sbb
push
adc
mov
push
rcrb
loope
add
je
sbb
fildl
cmpsb
xchg
std
or
mov
and
xor
lds
mov
aas
or
out
aam
cmp
jno
jp
adc
aaa
ljmp
loope
rolb
mov
imul
inc
div
loopne,pn
add
sub
pop
pop
and
xchg
inc
xchg
jp
jo
dec
push
sbb
add
std
cmp
dec
xchg
sti
mov
pop
rcrb
in
or
je
subb
das
fidivs
leave
xorb
aam
mov
add
adc
cmp
mov
ja
shrl
js
push
jecxz
aad
cmp
loop
cld
imul
lea
dec
adc
and
ss
out
adc
insl
jmp
fs
fists
ljmp
popf
mov
es
scas
xchg
clc
push
orl
loope
test
mov
orl
push
fs
mov
out
inc
pop
add
lods
dec
lea
xchg
mov
jle
mov
sub
and
pop
adc
lds
xor
cmp
cmp
cmc
ror
fmuls
xor
iret
mov
push
cmpsb
add
mov
push
into
pop
ficoms
stc
push
iret
mov
jmp
jg
lret
cmp
lock
mov
jno
cmp
push
and
loop
out
cwtl
paddw
mov
push
mov
add
add
inc
add
roll
and
cmp
fildl
dec
pop
js
fnsave
movsl
mov
iret
shll
jno
jae
adc
lea
cmp
mov
push
sbb
jl
add
xor
xor
ret
push
xchg
jne
cld
pop
fcomip
mov
jbe
rclb
adc
sbb
add
insb
bnd
dec
in
rcll
out
loope
in
xchg
sub
sarb
jg
cmp
test
cli
clc
test
mov
jle
or
aas
jne
test
pop
mov
call
cmpsl
inc
xchg
dec
daa
jb
xor
fdiv
push
or
std
cmpsl
and
fidivrs
add
xor
xchg
mov
es
add
popl
test
setg
jo
adc
add
call
out
mov
inc
fwait
repz
nop
and
loope
es
test
sub
addr16
push
je
xchg
pop
pop
xor
insl
syscall
sub
mov
ja
and
sarb
pop
icebp
inc
and
and
lods
jp
xor
cmp
testl
outsl
lret
or
cmp
xchg
into
cmp
subl
add
sbbl
jmp
and
popf
push
add
jb
mov
js
inc
mov
je
mov
gs
pushf
lcall
stc
inc
jo
inc
fstp
jb
out
sub
test
cmc
addr16
xchg
and
pop
sub
rcrl
sub
in
sbb
and
jmpw
pusha
and
cmpsl
int3
enter
fucom
loop
fimuls
xchg
mov
loopne
add
add
add
or
imull
xchg
pushf
xor
jmp
popa
orl
pop
jae
xor
xor
add
imul
xchg
add
js
sbb
adc
lds
push
ret
mov
fldl
and
mov
jg
push
xchg
jp
test
ret
sahf
xchg
scas
repz
out
add
mov
movsl
aad
es
pop
adc
pop
cli
jne
ficomps
addr16
stos
mov
das
out
shrb
js
sub
xor
idivb
mov
and
push
sarb
push
xchg
aaa
outsl
mov
cmp
cmp
nop
jge
xchg
cmpsb
sarb
adc
sub
fdivp
jno
push
movsb
jo
xchg
jb
sub
mov
cmp
sub
mov
xchg
sub
mov
mov
enter
push
sub
cmp
addr16
out
stos
icebp
lock
and
jns
js
cmp
push
cmp
es
jl
insl
cmp
add
fisubrs
or
or
and
inc
jb
push
mov
aaa
lret
scas
loopne
inc
clc
sbb
das
xchg
faddp
data16
into
repnz
cld
loopne
daa
sbb
movb
ret
or
js
bound
dec
sbb
add
clc
pop
jecxz
mov
movl
cmp
and
xchg
cmp
in
cltd
cmp
jno
push
xor
es
pop
and
iret
outsb
cmp
push
push
sahf
xor
xchg
inc
mov
rclb
adc
popa
sub
es
clc
add
mov
pop
push
xchg
loopne
pop
sahf
push
jmp
movsb
roll
loopne
pop
lods
push
les
leave
dec
repnz
or
addr16
add
push
mov
aad
aad
xchg
mov
inc
and
int3
jns,pn
jno
mov
roll
fnsave
jne
icebp
in
pusha
nop
ljmp
or
pushf
ret
mov
loope
mov
fisttps
sub
stc
bound
inc
add
sbb
insl
aam
lahf
cmp
rcrb
push
cmp
lods
pop
cli
lds
cli
rcrl
push
inc
lods
push
pop
push
loope
xchg
fnsave
out
les
sub
das
jnp
clc
add
ja
adc
rcl
aam
gs
aaa
jmp
jo
jae
sahf
jmp
aas
das
cld
cltd
cmpb
mov
add
mov
push
popf
add
xor
add
inc
dec
in
pop
and
scas
pushf
add
mov
xchg
adc
mov
mov
adc
push
jno
xchg
add
fsubl
and
sbb
jnp
jbe
imul
in
int
push
out
fscale
dec
lahf
add
adc
pop
das
fucom
xor
pop
popa
add
in
adc
and
jge
testl
push
jmp
xchg
aas
sbb
sbb
inc
push
js
push
fcoml
or
add
mov
js
push
mov
cmpb
or
pop
push
jno
stos
and
pusha
xor
or
lock
fldt
sahf
mov
ja
lret
push
mov
fcmove
push
cmp
dec
hlt
and
scas
cmp
add
test
dec
imul
xlat
mov
mov
fnstenv
into
pop
scas
lods
cwtl
sbb
pusha
xchg
add
mov
push
dec
add
pop
lret
adc
mov
rcrl
jb
in
mov
inc
sbb
pushf
add
cltd
inc
out
mov
mov
jnp
lret
pop
pushf
pop
ret
or
icebp
or
imul
lea
and
lds
rcr
add
es
xor
jo
scas
push
rolb
push
fsubp
mov
int3
imul
push
pop
sub
xor
loopne
ja
shlb
or
lods
lods
push
or
mov
pop
jp
enter
hlt
sub
adc
mov
aaa
into
add
and
or
add
ljmp
mov
jno
ljmp
int
cmp
gs
scas
pop
test
xchg
sub
jo
lret
ficomps
stos
inc
pop
aas
cmp
or
std
push
insb
cli
xor
jno
bound
lock
xor
imul
pop
or
data16
push
push
imull
cmc
mov
mov
push
in
add
mov
and
cmp
pop
sub
ljmp
lret
mov
imul
dec
xchg
and
mov
push
subb
nop
imul
sbb
or
in
addr16
cmc
iret
mov
pop
mov
and
or
or
loopne
mov
scas
push
int
add
mov
xchg
add
scas
addl
adc
dec
mul
sbbb
inc
sub
sub
ja
jo
sub
popa
aaa
lea
fisttpll
shlb
xor
adc
addb
add
out
push
je
cmpsl
repnz
sbb
fcompl
loopne
adc
daa
adc
jns
mul
jle
and
add
and
lock
jbe
scas
pusha
andb
add
das
daa
and
mov
lahf
cmc
stos
mov
sub
fstl
mov
pushf
push
lock
xchg
arpl
stos
aad
test
jecxz
push
jne
mov
inc
call
inc
loop
xor
lahf
push
fnstenv
fstps
jo
add
mov
ds
xor
xchg
repnz
sahf
dec
lods
cmp
test
call
cmpsb
inc
xchg
jne
xchg
xchg
loop
cmp
subl
les
push
lock
je
cmpsl
sub
addr16
pop
test
and
dec
push
pop
mov
gs
rcl
xor
jmp
lret
dec
test
mov
loope
and
mov
push
ror
lds
or
std
shll
aam
shll
cmp
cmp
add
movsb
push
cmc
mov
pushf
jmp
shr
andl
jb
and
lret
jae
out
mov
fsubrl
add
pop
adc
inc
sub
lds
dec
pop
xor
push
lret
sub
fiaddl
das
iret
in
push
mov
add
jle
sbb
xchg
sub
or
add
scas
cltd
loope
daa
sahf
xchg
and
sub
push
adc
icebp
mov
and
pop
and
popf
test
xchg
stos
out
sub
cmp
or
sub
bound
dec
ljmp
xchg
dec
push
movsl
test
loopne
jbe
xorl
out
sub
call
pop
loope
pop
repz
rcrl
xchg
mov
in
sub
mov
inc
dec
out
cmp
and
cwtl
pop
and
clc
add
and
shrl
cmp
add
std
and
flds
cmp
movsb
fldenv
xchg
mov
pop
mov
leave
outsl
or
in
insl
xlat
sbbb
mov
test
int
lret
and
xor
outsb
mov
mov
clc
into
inc
pusha
mov
or
and
inc
add
minps
or
icebp
adc
jne
jp
pop
cmpb
mov
sbb
jl
ljmp
jno
jbe
mov
mov
mov
mov
inc
cld
loopne
iret
mov
jno
rorb
js
jecxz
xor
or
dec
aaa
insb
mov
ljmp
ret
xchg
lret
sbb
inc
add
nop
add
pop
add
mov
and
hlt
es
pop
lahf
jp
or
inc
stos
mov
pusha
lock
mov
scas
cmpsl
cmc
dec
hlt
mov
and
jecxz
jmp
xchg
jbe
sbb
or
mov
movsb
push
pop
and
div
icebp
pop
add
push
je
cmp
test
adc
pop
call
roll
pop
add
lock
add
push
pop
cmp
mov
sbb
loope
ret
xchg
les
push
call
pop
aam
test
inc
cmpsb
pop
in
stos
mov
add
incl
push
scas
lock
scas
into
or
adc
cltd
into
repz
ret
add
xchg
int
add
jp
rorl
sub
mov
ds
push
xchg
shl
in
mov
xorb
loope
je
or
push
dec
jge
dec
and
popa
popf
mov
inc
jb
testl
lods
mov
xlat
scas
rol
dec
add
cmp
jge
mov
aaa
scas
push
xchg
mov
xor
movsb
or
mov
and
fdivl
adc
jg
jp
dec
subb
mov
jmp
lcall
mov
sbb
ljmp
sbb
mov
pop
dec
xor
rcl
xchg
fistl
xchg
mov
or
arpl
push
mov
nop
add
mov
icebp
mov
imul
or
bound
cmp
out
jge
enter
mov
push
bnd
pop
cmp
lods
push
fsubrl
jl
sbb
dec
ret
pop
fdivl
loopne
and
push
iret
jmp
test
sub
push
loopne
pop
sub
mov
pusha
pop
idivb
xchg
decb
loope
adc
repz
jl
sub
shrl
popa
sbb
jmp
add
cmp
sahf
nop
pop
pusha
sbb
pop
enter
add
xchg
frstor
test
hlt
lods
inc
outsb
repnz
pop
mov
and
mov
outsb
lret
sbb
or
in
aad
mov
enter
sbb
mov
add
add
and
or
push
fwait
cmpsb
or
cmp
mov
pop
lret
xchg
outsb
adcl
add
mov
pop
enter
mov
fs
lods
xchg
or
jb
and
mov
data16
mov
ds
sub
mov
mov
sti
scas
sub
adc
ror
mov
shlb
adc
test
mov
out
andl
cmpsb
xor
sti
mov
adc
je
sub
jno
cmpsl
aam
ficomps
fisubl
stc
or
and
in
inc
cmp
lods
adc
daa
pop
les
push
ret
or
add
mov
pop
es
int
test
inc
ret
sub
cwtl
add
xchg
int3
cs
out
push
loopne
icebp
sahf
xor
fwait
hlt
fsub
cmpsb
adc
mov
mov
and
add
xchg
push
inc
sub
or
movsb
das
adc
add
add
cmp
fbstp
shll
add
sub
mov
bnd
pop
fldl
movsb
frstor
mov
imul
aad
aas
aam
daa
xor
mov
fimuls
mov
insl
fsub
jb
and
jp
out
ljmp
jge
and
shlb
add
lock
push
fwait
fwait
test
pop
loope
psrad
inc
daa
jno
push
mov
stos
aas
pop
in
xchg
xchg
xor
push
pop
or
insl
and
sbb
mov
popa
add
xchg
outsl
rolb
cltd
fisubl
ret
cmp
add
jno
out
mov
inc
adc
sub
dec
cmp
mov
test
mov
enter
arpl
mov
lret
fstl
aad
lea
enter
pop
adc
adc
sbb
pop
push
jbe
xor
lock
sahf
push
lods
mov
add
loope
sbb
in
fsub
fnstcw
xor
lss
xor
ret
sbb
or
pop
cmpsb
dec
cmp
lock
lcall
push
or
cmp
loop
out
inc
xchg
enter
xchg
push
xchg
cmp
fnsave
fildl
scas
out
pop
push
outsb
stos
jge
shrl
push
imul
adc
mov
mov
dec
inc
hlt
sub
clc
inc
loop
inc
jns
fisubs
mov
popa
mov
mov
jecxz
fucom
sbb
add
push
fbstp
test
rolb
mov
insb
negl
ja
pop
ret
in
push
add
xor
rcl
sub
bound
and
jecxz
mov
movl
bound
xlat
and
mov
aad
cmp
mov
fisubs
inc
sahf
push
fiaddl
adc
or
sub
xor
jl
push
push
adc
movsl
xor
testb
sbb
popa
add
jbe
xchg
cmpl
or
fidivrl
sahf
call
insb
xchg
push
jp
pop
sbb
adc
jge
jle
pop
mov
push
lret
lods
rorb
fs
mov
xchg
jns
aas
adc
or
dec
cmp
cmpsb
mov
loop
ja
push
jge
sub
cld
push
and
test
std
in
pop
mov
jo
add
pop
ja
jo
or
jl
dec
mov
cltd
cmp
jp
je
cmpsb
stos
push
into
scas
add
xor
insb
or
and
stos
rorb
jl
insb
hlt
pusha
push
push
jl
stos
mov
jl
sbbb
popa
pop
test
fwait
and
jbe
aam
pop
rcll
mov
or
and
sbbl
in
jns
add
mov
addb
mov
mov
push
shrl
push
xchg
push
pop
sub
mov
inc
nop
loop
aam
pop
xlat
sub
test
mov
xor
inc
js
adc
push
das
dec
adcb
adc
cmp
push
gs
pop
adc
inc
nop
mov
repz
es
sti
mov
inc
mov
cmpsl
loop
cs
fdivrl
mov
push
xor
in
into
popa
mov
inc
xorb
and
adc
inc
stc
mov
adc
add
ds
out
adc
lret
aaa
rol
mov
jge
xor
or
imul
repnz
push
sti
dec
xor
repnz
repz
push
cs
imul
mov
mov
fmull
and
xchg
popa
insb
sub
sub
push
cmp
inc
push
xor
fadds
inc
mov
sbb
sbb
and
or
dec
push
out
mov
jno
pop
jge
pop
inc
ret
es
lret
xchg
sub
and
pop
sarb
jo
adc
movsb
add
rclb
cmp
gs
mov
xor
lods
aaa
orb
or
repnz
cmpsb
mov
sub
ljmp
add
mov
push
jge
mov
cs
and
mov
and
mov
adc
popa
mov
ljmp
or
rolb
imul
mov
aam
inc
push
jns
shl
rcrl
lret
add
leave
xor
xchg
lcall
js
mov
addb
fsubl
lret
mov
loope
sbb
mov
mov
cmp
les
hlt
fs
sbb
fmuls
enter
xlat
js
cmp
and
sbb
sub
fimull
addl
out
cmp
push
xlat
daa
mov
add
mov
pop
cmp
pop
loopne
adc
push
lret
add
push
repnz
mov
xchg
jo
add
nop
jno
sbb
and
mov
jp
sub
xchg
loopne
jp
xchg
dec
loop
sbb
push
loope
jl
adc
and
cmp
adc
push
pop
sub
cmpsl
outsb
faddp
into
add
jo
inc
roll
divb
sbb
sub
push
mov
dec
mov
xor
ficomps
fildll
and
aam
xlat
int
fadds
mov
add
and
push
xchg
push
inc
insb
in
test
and
js
cmp
movsl
fsubl
dec
ret
fists
jnp
rolb
cmp
inc
scas
loope
jp
sarb
adc
daa
lock
bound
scas
ja
push
xlat
xorb
cmp
push
dec
and
dec
sbb
int
js
pop
pop
cs
fnstcw
add
ret
adc
dec
mov
adc
and
lock
clc
std
and
jne
mov
dec
sbb
leave
scas
into
xor
in
sub
gs
imul
mov
add
or
sub
jmp
movsl
add
lods
add
bound
es
lock
in
ss
rorb
dec
jnp
push
enter
xor
leave
pop
dec
mov
lret
and
inc
cmc
jo
jl
movsl
add
out
rcrb
xor
and
call
jnp
loop
sub
dec
loopne
cmp
pop
clc
add
add
pop
xchg
gs
lds
daa
into
sti
inc
in
cmpl
ss
xor
jecxz
js
call
and
sbb
add
mov
xchg
arpl
js
sub
mov
xlat
js
sbb
in
dec
mov
test
cvtps2pi
dec
es
jle
data16
icebp
loopne
mov
sbb
mov
dec
inc
cmpsl
out
aam
ja
and
or
push
out
add
es
dec
pop
frstor
popf
popf
dec
movsl
lret
test
shll
loopne
fs
jecxz
ret
add
or
push
scas
and
cs
cwtl
sbbl
pop
mov
ss
test
call
mov
movsl
mov
repz
sub
jno
iret
add
hlt
or
test
push
aam
xchg
insl
push
xchg
out
pop
out
mov
mov
or
sub
jb
push
sahf
insb
add
out
mov
or
jne
add
jge
mov
imul
inc
rclb
adcl
xor
dec
xchg
ret
dec
call
xor
divb
push
jo
ret
loopne
mov
daa
cwtl
sti
jno
jb
mov
leave
repnz
popa
pop
xchg
cmpsl
add
and
pusha
stc
xor
stos
js
push
mov
push
ja
xchg
lret
fistps
xchg
shrb
subl
add
loope
mov
sbb
or
add
xchg
xor
cmpsl
mov
das
lret
popf
pop
orb
fists
loop
inc
test
push
jge
mov
lahf
xor
lcall
or
in
or
jge
mov
je
inc
cmp
pop
or
cmpsl
shlb
js
sub
rclb
mov
ret
xchg
xchg
jno
loope
push
add
ja
pop
fs
rolb
cmp
cmp
push
jge
icebp
lods
and
leave
inc
mov
cmpsb
daa
sub
add
or
je
stc
adc
shll
mov
jnp
cmp
xor
pushf
sahf
inc
lret
popf
scas
mov
sub
push
pop
add
insl
mov
fisttpll
ja
lcall
loopne
xchg
push
or
arpl
lcall
add
lret
add
dec
push
in
cmp
sub
paddusw
or
nop
or
xchg
or
sub
sbb
outsb
lock
test
mov
jns
rol
ds
cmp
daa
xor
cli
dec
add
xchg
and
mov
es
push
fs
iret
loope
inc
mov
inc
cli
je
push
cmpb
loopne
sar
mov
lahf
call
insl
addr16
arpl
in
push
mov
mov
popa
stos
shll
imul
add
sub
or
in
ja
daa
into
or
lods
call
addl
add
pushf
add
push
loopne
mov
mov
sbb
adc
into
lret
cmp
or
fisubrl
stos
jg
out
sbb
ret
in
addr16
mov
sarb
es
mov
clc
sub
out
and
mov
sti
xchg
inc
lcall
sbb
mov
mov
cmp
push
jno
xchg
sysret
and
add
fsts
in
gs
popf
push
push
push
or
imul
out
jmp
mov
sub
rcrl
push
cmp
xor
xor
jns
or
cs
jmp
mov
test
push
addb
test
cmc
inc
sub
es
xchg
mov
push
mov
sub
lret
subb
add
inc
stos
push
dec
leave
jae
or
jecxz
ficompl
lods
lcall
faddp
rclb
jns
loop
push
jno
fwait
leave
ficoml
decl
cmp
ljmp
pop
fimull
jp
loopne
lods
in
std
or
test
hlt
add
cmpsl
sbb
jnp
mov
arpl
adc
lods
sub
loop
adc
inc
mov
data16
out
jnp
push
repnz
shl
mov
xor
sbb
jb
dec
mov
orl
xchg
sub
ljmp
call
xchg
subl
inc
arpl
inc
shll
ret
jge
jmp
jge
sbb
push
add
sub
mov
andb
lret
stos
mov
pushf
outsb
addl
fsubrs
xor
add
pop
into
xor
hlt
or
jnp
push
mov
xor
popa
and
and
xlat
lret
ret
xor
add
faddl
jge
sahf
mov
fs
popa
lret
jge
aaa
add
aaa
cmp
aas
movb
jle
in
sarl
test
adc
pop
shl
test
dec
js
xchg
mov
pop
loope
and
or
sub
cmp
test
rorl
push
mov
js
es
adc
adc
inc
in
loopne
lcall
lret
movsb
xor
mov
pop
fldl
xchg
mov
mov
outsl
call
add
jne
mov
loopne
into
and
imul
call
sub
lds
sbb
jge
shrl
or
cmp
inc
clc
ljmp
or
popa
or
xor
mov
scas
dec
hlt
or
call
mov
mov
fucom
or
mov
clc
movsl
imul
add
test
pop
add
fwait
or
adc
setg
sub
mov
or
adc
or
adc
imul
xchg
jae
sbb
das
push
pop
inc
jl
icebp
insl
ja
sub
sub
inc
movsb
es
mov
add
rcll
rcll
hlt
adc
mov
and
hlt
push
and
add
rol
dec
sbb
jns
pop
push
lock
aam
sbb
add
fsubrl
icebp
cs
rcrb
ja
outsl
call
add
and
cmp
and
inc
mov
xorl
dec
inc
insl
pushf
imul
js
shll
mov
in
push
lahf
lret
popa
js
inc
pop
jg
roll
fsubrl
divl
pop
cli
mov
xor
or
xchg
loopne
es
and
andb
and
hlt
cmp
clc
pop
adc
push
xchg
fsubrs
pop
sbb
testl
int3
push
pop
sub
inc
adc
mov
mov
pop
push
add
lahf
frstor
mov
mov
pop
and
mov
pop
xor
mov
sub
icebp
push
xchg
xchg
stos
mov
push
xor
imulb
sbb
lods
xchg
test
sbbl
sbb
call
aad
insl
push
arpl
lret
push
mov
insb
add
aam
jle
pop
rorl
cmc
outsl
ret
sbb
ret
mov
test
leave
adcl
dec
aaa
ljmp
ret
les
add
jns
jb
clc
imul
lret
mov
xlat
xchg
jb
fnsave
jns
add
cmp
adc
and
add
push
cmp
cs
rolb
loopne
mov
cmc
jo
or
pop
xchg
out
inc
push
dec
stos
mov
or
mov
test
sub
lods
push
popl
js
test
cmp
pop
fisubs
cmp
sbb
push
popf
or
hlt
pop
dec
shll
dec
test
mov
stc
mov
add
xchg
push
or
stos
arpl
push
popa
mov
sub
xchg
dec
mov
scas
cmp
jbe
add
sub
movsl
adc
popa
xchg
insb
pop
loop
hlt
xor
filds
xchg
inc
sub
inc
mov
into
loopne
aad
push
push
and
cmp
or
xchg
popf
das
jne
push
mov
dec
out
rorb
add
rcrb
out
leave
sub
add
mov
jb
push
loope
xor
jno
push
fisttpl
adc
rcll
into
and
adc
mov
aad
sub
push
jns
mov
fsubrs
cmp
xor
lret
xor
jbe
loope
inc
inc
test
pop
push
and
push
push
and
leave
cmc
add
rorl
xor
jo
dec
fcoml
pop
outsl
push
cmp
mov
xchg
sub
jb
rclb
test
not
and
mov
loope
sub
inc
rclb
jns
gs
jno
and
xor
mov
jo
and
icebp
fwait
lahf
mov
ret
test
in
cltd
test
ret
mov
add
lcall
mov
adcl
ret
lea
call
push
jo
inc
xor
jle
xchg
push
adc
pop
mov
mov
cmp
sub
xchg
push
mov
cli
movsb
add
cmp
and
sbb
xor
arpl
imul
adc
pand
mov
add
ja
repz
and
ljmp
sub
inc
outsl
js
mov
inc
mov
loopne
in
call
xchg
push
ret
wrmsr
mov
cli
jo
cmc
sub
loop
lods
lock
mov
stos
test
out
aas
and
adc
das
test
pop
sbb
xchg
mov
leave
pop
js
loope
add
movsl
push
or
cmpsl
daa
push
mov
dec
push
aam
cmp
iret
lret
pop
sub
int
push
scas
daa
mov
inc
lahf
loop
push
push
idivb
cs
mov
dec
insl
and
shll
in
rclb
and
cmp
into
outsb
test
pop
cmp
sarb
dec
sub
rcrb
and
js
jno
cmpsl
inc
sub
in
mul
pop
inc
add
push
or
rcl
jmp
cmc
mov
dec
mov
cwtl
adcl
inc
or
ds
inc
cmp
and
dec
mov
jne
jp
pop
and
inc
pop
xchg
pop
pop
pusha
outsb
xor
add
inc
fwait
push
sub
push
sar
loope
mov
popl
int3
mov
sub
pop
jle
cwtl
sub
mov
and
jnp
ret
xchg
mov
je
inc
lea
in
jno
and
nop
push
jno
imul
paddq
mov
adc
mov
mov
insl
add
icebp
je
imul
icebp
push
sub
xor
std
jne
add
or
in
jae
lock
aas
mov
sub
out
jo
cmp
jo
ds
and
andnps
loop
nop
out
mov
orb
inc
xchg
repz
jp
out
pop
xorl
js
add
test
out
sbb
repnz
gs
mov
fdivl
scas
fwait
jne
xor
popa
add
xchg
and
addr16
xor
push
dec
fxch
out
fcomp
imul
push
fwait
mov
add
lret
dec
add
xchg
inc
das
dec
xor
mov
fldl
mov
sbb
mov
adc
jnp
shlb
xor
hlt
inc
jmp
mov
adc
popa
jno
adc
adc
xor
insl
loope
xchg
dec
mov
je
stos
pop
dec
das
dec
or
and
xchg
fistl
imul
sbb
ret
or
mov
mov
stc
xchg
xchg
xchg
push
sti
add
jnp
xor
push
pop
inc
cmc
jnp
mov
test
and
or
and
lret
sub
pop
insl
cmp
ljmp
gs
int3
jno
ret
mov
mov
xchg
mov
mov
ret
fmul
adc
in
jl
outsl
sub
jl
xchg
jge
inc
adcl
mov
add
xchg
test
test
add
jne
lods
mov
push
jge
xchg
and
lods
jo
jnp
add
pop
mov
stos
jmp
fcmove
mov
or
mov
push
mov
jb
push
mov
shrb
aas
mov
dec
dec
and
push
loop
andb
lods
in
xor
xchg
pop
xchg
hlt
ret
scas
mov
push
sbb
ja,pn
daa
jge
add
in
enter
inc
jecxz
je
or
cmpsl
in
mov
pop
pop
adc
inc
outsb
inc
add
mov
cmpl
pop
xchg
js
xchg
xor
mov
dec
jmp
cmpb
adc
fdivrl
in
add
mov
add
rorl
inc
loop
mov
mov
test
inc
push
scas
lret
in
shr
adc
add
inc
sub
jo
frstpm(287
daa
ds
push
and
inc
inc
and
ds
xor
ret
add
test
or
idivb
inc
cltd
daa
sub
icebp
sbb
aas
repz
pop
cmp
mov
fsts
pop
pop
push
and
loope
mov
leave
or
add
sub
push
jl
cli
in
inc
imul
jp
push
xorb
inc
sbb
push
jno
ficompl
cmp
add
icebp
ss
inc
sbbb
push
inc
jg
lret
std
aas
faddl
fnsave
pusha
int3
cli
lret
out
adc
sahf
mov
cmp
add
pusha
out
icebp
push
dec
int
adc
pusha
imul
and
jnp
mov
adc
push
movb
xchg
mov
fnsave
lods
mov
jo
jp
mov
sub
cmp
jp
adc
loope
mov
ret
orb
cs
sbb
imul
pop
cmp
cltd
push
jns
add
and
mov
push
hlt
lret
and
clc
push
subl
in
xchg
rorl
lcall
cmp
xor
add
loopne
pop
inc
ja
pop
enter
sbb
jne
mov
xor
addb
adc
rolb
divl
mov
lock
mov
sbb
insb
xor
mov
jne
fs
sbb
inc
xor
xor
push
push
imul
inc
movsb
popf
pop
rorb
pusha
jne
ud2
call
lods
icebp
lret
in
cmpsb
dec
mov
test
or
pop
pop
sub
adcl
jns
hlt
sbb
repnz
inc
aad
dec
enter
push
and
inc
inc
xor
sti
dec
lea
lea
push
dec
cmp
lea
cmp
cs
in
cmp
mov
inc
jecxz
push
iret
dec
in
cmp
jne
scas
push
sarl
in
out
adc
add
xchg
aam
stos
sub
movsl
js
jl
xchg
xor
and
push
dec
sub
testl
push
inc
xchg
outsl
add
push
sbb
ljmp
mov
test
cmp
clc
and
cltd
iret
jno
andl
sub
adc
ret
push
loope
mov
outsl
mov
test
xor
daa
jecxz
adc
add
inc
icebp
mov
dec
cmpl
xchg
adc
or
xchg
test
mov
inc
cmp
test
lahf
inc
imul
cmp
pop
xchg
int
add
sbb
das
sub
jg
in
add
and
fisubl
lea
xchg
inc
mov
popa
icebp
or
sub
aad
mov
pop
jne
lret
test
dec
cltd
or
adcl
ljmp
cmp
outsl
outsb
sbb
jp
fbstp
punpckhwd
mov
in
sbb
xlat
or
call
dec
xor
mov
mov
arpl
jecxz
sbb
mov
mov
cmpsl
inc
popa
jo
sub
and
out
popf
andb
adc
ficompl
jns
pop
imul
xchg
jbe
mov
add
cmp
lods
movsl
sbb
mov
sbb
fiaddl
aad
lds
cs
push
test
cmp
sbb
out
sub
aam
pusha
sbbl
and
sub
shll
lcall
scas
push
push
es
sbb
add
lds
ror
and
push
scas
call
mov
sahf
scas
leave
sbb
cmp
popl
sbb
ja
in
xor
dec
cmpsl
adc
dec
push
ret
test
lods
pop
insl
xor
ret
ja
scas
inc
lahf
jns
xor
mov
mov
enter
sub
in
lds
add
lret
inc
arpl
lock
adc
repz
arpl
dec
inc
push
push
lret
add
mov
lods
push
inc
in
vmread
xchg
imul
ret
xor
fcomp
adcb
subb
jp
les
mov
add
shll
and
fwait
lods
mov
jge
test
add
int
mov
push
push
addr16
jbe
in
push
and
mov
sbb
test
push
mov
scas
xor
push
rcl
or
addr16
mov
fisttpll
push
push
xor
jg
lcallw
or
xchg
jne
cmp
hlt
scas
iret
ret
add
out
and
iret
insb
pusha
mov
or
and
outsb
loopne
push
xor
mov
pop
add
or
jbe
add
ror
push
jne
cmp
xor
es
pop
push
and
mov
bound
and
mov
xchg
push
sub
into
imul
xor
dec
sub
sbb
adc
fnsave
pop
data16
ljmp
hlt
mov
or
test
fisttps
aad
clc
es
inc
loope
ss
dec
sub
ja
jge
fldt
or
fimull
add
mov
jp
cld
sbb
or
sub
xchg
test
int3
ror
nop
loope
mov
lcall
push
inc
mov
or
les
fld
cmc
js
lods
popa
scas
pop
add
sub
movsl
fs
les
and
sbb
inc
mov
repz
push
sahf
push
in
and
test
dec
shrl
fs
push
enter
ja
arpl
in
or
mov
mov
mov
daa
mov
repz
int3
add
jp
adc
pop
xor
addr16
outsb
mov
out
movsb
pop
adc
mov
mov
mov
adc
and
sahf
cli
push
scas
jb
xchg
je
and
add
inc
fwait
jno
lea
mov
out
xchg
sbb
das
je
and
rcrb
out
jnp
pop
scas
pop
test
mov
sbb
cmpsb
add
sbb
xchg
call
jecxz
add
jb
add
pop
push
pop
mov
dec
hlt
addl
aad
xchg
mov
mov
pop
dec
test
add
mov
sbb
loop
cmp
sbb
pop
cmp
mov
jge
xchg
sub
mov
pop
loopne
aad
sub
add
into
les
add
je
orb
int3
aaa
mov
icebp
mov
lods
mov
loopne
pop
mov
push
repnz
subb
push
pop
sbb
mov
loope
inc
xchg
sub
mov
mov
aas
mov
ja
cwtl
mov
lret
jnp
jp
and
add
rclb
add
xor
jo
push
and
aaa
leave
in
mov
mov
push
add
enter
xchg
jmp
lret
bswap
adc
xchg
testb
mov
mov
mov
ds
sub
inc
xor
lock
xlat
pop
adc
rcl
loop
add
jo
repz
cli
ror
pop
into
sub
jne
lods
dec
add
rcl
cmp
inc
pop
scas
rcrb
push
dec
xchg
adc
xchg
aam
push
lahf
loop
or
arpl
add
inc
lds
push
lods
dec
addr16
ja
stc
mov
loop
adc
cltd
mov
add
jo
xchg
adc
xorb
mov
gs
push
pop
test
add
test
std
push
or
pusha
jno
mov
outsb
sti
popf
mov
jle
dec
mov
je
pusha
inc
lret
or
adc
jecxz
pop
jnp
dec
mov
inc
andb
sub
ret
push
jno
or
test
mov
xchg
ja
loop
inc
add
add
sub
xor
das
jns
mov
daa
ud0
and
fsts
and
fwait
sub
add
hlt
mov
lock
mov
stos
hlt
sub
and
cltd
pop
popl
cmc
mov
pop
cmp
pop
das
pop
aaa
or
scas
adc
pop
lret
clc
mov
test
inc
roll
rolb
pop
ja
lea
and
faddp
test
xchg
out
daa
std
mov
mov
shrb
lock
fisubl
mov
sub
testb
adc
sbbb
adc
jns
movsb
loop
xor
ja
aam
add
push
or
add
ja
sub
sub
fcmovnbe
xlat
push
les
sti
call
push
leave
adc
jbe
fadd
rolb
leave
in
idivl
sbb
jnp
lock
divl
adc
popa
fs
jecxz
xor
adc
dec
les
mov
insl
mov
andl
fs
stos
ret
mov
lret
jle
pop
xchg
movsb
push
addl
sub
add
in
xchg
dec
inc
mov
mov
mov
sub
and
inc
sbb
add
dec
imul
stos
repnz
add
fsubrl
daa
stos
cmpsl
rolb
mov
add
out
aaa
xlat
test
ficoms
sub
sub
scas
test
xor
les
pusha
bnd
test
es
sbb
pusha
cs
add
xchg
mov
bnd
jmp
sbb
daa
push
stos
scas
test
and
in
test
sub
jno
xor
inc
xchg
pop
in
into
sub
dec
push
fisttpll
jbe
jnp
fnsave
pop
push
mov
adc
mov
pop
adc
sarl
xor
inc
sbb
or
add
stos
mov
addb
sbb
sub
mov
jo
xor
mov
fnsave
adc
ja
div
insl
mov
faddl
imul
jnp
movsl
or
das
dec
or
insl
xor
shll
les
mov
pop
notb
test
test
into
popf
divb
or
pop
jo
sbb
adc
js
sbb
ds
lock
scas
dec
rolb
mov
mov
test
jo
mov
mov
ds
pop
or
leave
mov
xchg
jo
or
mov
pop
add
xchg
pop
or
cmc
jmp
scas
lock
pop
inc
pop
subb
stos
in
push
scas
mov
pusha
jno
pop
notb
mov
sbb
in
mov
shr
rolb
movsb
ljmp
aam
into
sbb
repnz
out
stos
xchg
push
pop
cmp
hlt
into
jo
int
jecxz
sbb
flds
cmp
jg
xchg
jl
cmp
je
jecxz
cli
das
push
insb
imul
into
jle
adc
loopne
loopne
xchg
inc
aaa
fs
push
dec
or
loopne
psubsb
loop
imul
mov
in
call
xor
popa
inc
inc
push
xchg
mov
lret
push
sbb
pop
sahf
ror
xchg
mov
in
sub
pop
xor
lcall
cwtl
dec
fldl
mov
pop
cmp
scas
add
sbb
ljmp
fs
pusha
rclb
lcall
daa
movsb
jl
mov
cwtl
sbbl
jmp
xchg
into
ret
std
adc
outsb
loopne
gs
inc
and
jle
sbb
aas
lcall
adc
xchg
dec
mov
fwait
test
adc
xchg
and
dec
xor
and
inc
mov
shlb
loop
and
push
cmpsl
nop
imul
xchg
add
cmp
push
mov
sbb
cltd
jl
xchg
fucom
repnz
and
fstl
in
adc
hlt
leave
cmp
xchg
inc
mov
jl
xor
in
outsl
or
repz
pop
xor
inc
lock
dec
call
outsb
jae
add
pop
push
fidivrs
add
and
mov
testb
pop
je
adc
jg
xchg
cmp
xchg
dec
mov
xor
or
add
cmp
mov
lret
mov
xchg
xchg
adc
in
push
es
mov
and
shlb
leave
sub
and
xchg
cli
cmp
and
jb
in
add
jnp
mov
lcall
inc
aaa
int
js
jno
adc
pop
push
ret
cld
inc
cwtl
jns
dec
cli
push
loopne
xor
lods
fisubrs
inc
das
loope
mov
mov
stos
adc
pop
jmp
icebp
faddp
dec
and
out
sbb
fwait
andb
jno
fimull
and
jne
ret
sub
loope
xor
test
dec
fmuls
jo
sbb
xchg
sub
cmpsl
ss
dec
sbb
mov
xchg
pusha
xchg
or
cli
and
jle
xchg
mov
and
add
imul
fiadds
cmp
sub
rorb
push
test
inc
sbb
test
out
lock
push
mov
shlb
jmp
xchg
jg
test
add
mov
pop
adc
mov
cmp
push
fimull
inc
jo
bound
movsb
in
adc
adc
test
mov
imul
cmp
inc
and
mov
ret
and
call
or
notl
push
sub
pop
adc
sbb
orb
adc
push
rclb
icebp
ja
bsr
shlb
or
or
pop
pop
out
sbb
aad
out
ret
inc
scas
jge
addr16
rcl
mov
imulb
sub
lock
das
int3
push
cmp
adc
pop
and
mov
pusha
sub
into
in
lcall
dec
cmpsl
mov
inc
into
and
push
jno
and
fdivs
popa
testb
mov
sub
xor
push
push
daa
add
push
pusha
add
mov
test
scas
cmp
push
inc
push
jmp
inc
jle
into
mov
lcall
addl
sbb
xlat
push
in
mov
repnz
jae
testb
mov
cli
add
loop
cmp
sbb
add
or
outsb
add
cmp
dec
leave
and
sahf
mov
mov
loope
xorl
filds
jbe
mov
mov
add
pusha
mov
lds
das
fdivs
test
test
repz
mov
lret
enter
mov
dec
aas
lret
sub
movsb
mov
dec
add
sbbl
aad
lods
jge
les
pop
jecxz
mov
add
or
and
sub
dec
cmp
fwait
out
scas
ds
adc
std
lahf
addb
cmp
xor
jmp
jl
fs
repnz
data16
hlt
lea
stos
sub
pop
dec
add
xchg
jns
and
inc
mov
and
lcall
cmc
pop
push
lret
in
or
enter
xchg
scas
inc
cmp
insl
call
push
sub
repnz
into
mov
push
out
and
jecxz
cmp
pop
loopne
add
stos
fbstp
fdivrs
jecxz
in
out
jne
jmp
mov
test
aaa
mov
shl
pop
push
mov
sbb
sti
dec
popa
insb
cmp
iret
and
mov
xor
pop
addr16
fiadds
or
sbb
mov
fstl
test
cs
mov
xchg
jle
sub
or
and
sub
and
daa
ljmp
pushw
push
ljmp
mov
and
out
dec
lcall
sbb
cltd
jg
out
and
push
push
xchg
test
sbb
lret
mov
or
lcall
aad
test
data16
repnz
mov
fldl
shrb
xorb
xchg
daa
out
movsl
ja
cmp
mov
mov
jno
cmp
ror
or
out
xor
adc
push
leave
mov
push
xchg
sub
pop
xor
aaa
lcall
adc
loopne
sti
ds
sub
mov
adc
sub
jne
addr16
data16
ret
adc
dec
sub
pop
sahf
jp
lods
inc
scas
mov
dec
add
imul
ds
xchg
inc
jno
fnstsw
inc
add
mov
add
cwtl
pop
sub
sbb
lret
out
aam
cli
push
ss
lahf
out
jle
mov
lahf
data16
jae
mov
mov
std
jb
mov
and
fnsave
inc
add
loopne
mov
sub
mov
inc
lret
popf
lcall
je
lds
loopne
xchg
cmpsb
or
mov
stos
dec
popl
neg
repnz
add
incl
add
insb
and
clc
and
push
inc
mov
in
xor
adc
notb
push
dec
jmp
lret
xor
cmpsb
xor
adc
sarb
mov
cmp
or
mov
cwtl
cmp
fst
std
sbb
xor
orb
pop
mov
push
daa
pop
xor
fcmovnu
and
bound
sbb
lahf
ret
movsb
inc
loop
adc
inc
lea
das
scas
jmp
push
sbb
mov
lods
scas
fisubl
xorb
jmp
mov
loope
xchg
add
inc
sub
jne
fistpl
jb
nop
inc
sarb
adc
xor
xadd
xor
pop
adc
add
sbb
mov
add
stos
cmp
xor
xchg
movsl
xchg
adc
and
jns
lea
add
add
mov
call
xor
jle
adc
xchg
pop
jecxz
ror
lea
mov
add
shl
push
in
lret
mov
into
add
and
sbb
pop
jns
dec
xor
cmpsl
inc
decl
lds
add
or
cmp
jns
aad
arpl
sbbl
je
ja
push
or
adc
scas
inc
inc
arpl
cmp
and
sub
scas
cwtl
mov
scas
mov
pushf
movl
les
inc
hlt
jno
inc
imul
add
cs
add
mov
les
push
jp
iret
repnz
lahf
clc
lods
xchg
test
mov
push
enter
mov
push
in
andb
mov
dec
xlat
add
icebp
ljmp
jmp
cmp
push
mov
sahf
sub
ljmp
add
push
jp
pushf
xchg
rcrl
add
mov
mov
fucomi
sbb
jns
lock
or
sub
adc
outsb
lods
sbb
dec
bound
xchg
imul
or
push
sbb
loopne
xchg
jge
mov
push
fcoms
int
push
push
mov
jnp
push
mov
shl
add
rolb
xor
jno
shl
sbb
loop
mov
sbb
dec
and
cmp
sub
int
ret
push
iret
push
stos
sbb
cmc
inc
cmp
ret
add
xor
push
sti
add
cmp
mov
ds
push
ss
mov
stos
jle
jo
xchg
mov
sbb
insb
js
loopne
push
add
bound
mov
push
pop
lcall
out
mov
fs
add
out
mov
pop
pop
mov
aad
fisubs
mov
stc
mov
lret
pop
movsl
nop
add
test
jge
pusha
or
shl
loope
dec
out
mov
sbb
pop
int3
cmp
sub
daa
mov
enter
es
add
fcmove
cmpsl
jmp
adc
dec
xchg
sub
pop
sar
clc
dec
dec
pop
loopne
pop
ljmp
nop
std
push
jge
or
jo
pushf
hlt
xor
pusha
in
mov
fidivrl
fwait
sbb
aad
dec
push
mov
jnp
mov
push
add
push
cmp
leave
and
mov
bswap
push
inc
mov
sarb
or
and
mov
cmc
pop
xor
pop
filds
cli
imul
clc
outsb
add
mov
jle
dec
aad
push
jnp
sarl
cmp
adc
stos
inc
sub
jae
fidivrs
addr16
fisttpl
push
pop
mov
sbb
lret
loope
sbbl
jb
test
mov
pusha
fistl
clc
dec
mov
mov
out
jle
sub
stos
lods
mov
lock
gs
jge
inc
jns
insl
xchg
es
dec
sbb
xlat
je
mov
fldl
mov
xlat
jno
add
sub
mov
pop
mov
add
and
xor
jecxz
xchg
nop
xor
or
inc
mov
mov
dec
ret
pop
pop
inc
push
sub
add
xchg
jae
outsb
pop
cmpsb
sub
mov
push
and
cwtl
shll
ljmp
dec
mov
call
lods
es
push
cs
mov
sub
mov
fldcw
cmp
pop
into
and
sub
xorb
out
cwtl
lahf
push
mov
adc
inc
mov
or
xor
bswap
shll
xor
aas
addr16
cmp
inc
sbb
stos
les
rcll
xchg
mov
ret
mov
pusha
xorl
mov
stos
jl
out
ljmp
mov
mov
xorl
pop
rolb
cwtl
sub
mov
ss
ffree
clc
xor
mov
cs
jg
push
ret
pop
out
adc
in
dec
xor
mov
adc
and
aam
adc
or
add
cmp
push
xchg
imul
mov
ret
pop
push
xchg
xor
pop
push
or
call
and
std
jne
pop
mov
adc
movsl
loopne
dec
pusha
and
mov
addr16
mov
movsb
push
sbb
into
pop
pop
sahf
mov
pushl
push
mov
mov
xor
and
mov
add
mov
dec
loopne
jno
xchg
cwtl
jno
cld
test
jl
les
stc
ret
jmp
adc
jno
jno
and
push
xchg
add
mov
loopne
leave
sar
and
lock
pop
cmpsl
xchg
mov
sub
sbb
mov
jo
inc
scas
dec
mov
or
or
mov
and
ret
repz
inc
pop
and
push
test
jnp
push
clc
cmpsl
loop
aas
ds
mov
jmp
pop
jl
adc
push
add
sub
aad
ret
add
or
fmull
bound
fdivl
cltd
dec
push
or
or
inc
add
or
add
das
stc
inc
hlt
adc
cmp
or
dec
pop
cwtl
ret
movsl
push
xor
xor
movsb
sub
imul
add
mov
xchg
add
loopne
jnp
scas
jg
rclb
ret
ret
jo
and
insb
add
push
inc
hlt
inc
sbb
cli
mov
dec
shrl
shll
adc
jecxz
jge
std
mov
loop
insl
jg
ffreep
testb
cld
pushf
loopne
rol
fiadds
or
mov
cmc
add
loop
ret
cmpsb
sub
fcompl
cmpl
push
and
ror
add
cmpsb
xor
loope
xchg
leave
popa
test
adc
ret
loopne
dec
mov
test
mov
inc
imulb
in
adcb
cmp
jle
or
mov
into
fs
add
and
fdivrp
add
lret
aaa
mov
je
lret
sbb
movsb
xchg
push
fidivrl
pop
add
jno
add
clc
lcall
inc
fcompl
or
test
jnp
stos
xchg
sti
shl
pusha
xor
loopne
adc
lret
and
addb
orb
mov
jg
js
add
lret
mull
pop
out
ret
adc
test
mov
pusha
or
lock
mov
jnp
cltd
push
and
test
mov
mov
or
mov
push
rcll
add
sarb
add
hlt
inc
or
fistpll
cmpsl
mov
inc
sbb
shlb
pop
cmpsl
gs
dec
push
outsb
loope
addl
sbbb
mov
shrl
inc
out
pop
dec
push
xor
push
cli
rolb
or
add
and
stos
sbb
outsl
sub
aam
xchg
mov
daa
or
mov
push
or
lcall
cwtl
or
jbe
in
push
jle
ret
shrb
pop
push
movb
mov
or
sbb
gs
scas
push
cmp
sahf
cmpsl
push
pop
mov
jmp
push
mov
js
aam
rorb
hlt
xor
mov
fs
sahf
ror
fdiv
add
mov
inc
scas
xchg
outsb
lret
xchg
inc
dec
push
cmpsb
xor
mov
jno,pt
push
push
jle
fisttpl
sti
sub
or
clc
jp
aas
and
jnp
nop
xorb
pop
aad
shlb
sbb
cmp
jbe
out
inc
fwait
movsl
push
jl
or
insl
xchg
mov
bound
setnp
shr
enter
cwtl
and
xchg
jno
call
inc
adc
pop
and
mov
out
sub
gs
mov
rorl
dec
cmp
mov
xchg
clc
mov
sbb
jmp
ljmp
in
mov
jmp
fs
rorb
jmp
test
js
jb
adc
scas
faddl
call
bound
jle
idivl
aam
push
in
loop
mov
or
sub
scas
ljmp
jne
outsl
push
nop
mov
push
ret
pop
pop
jb
imul
xor
or
movsl
out
cwtl
and
test
push
dec
lretw
dec
sbb
loopne
loop
sub
push
jmp
inc
and
cmp
stos
adc
xor
jbe
rclb
scas
sub
sbb
cmp
mov
adc
fs
jle
sbb
mov
push
rorl
and
mov
push
add
sbb
fmuls
push
adc
push
sub
cmp
add
push
test
cs
or
xor
ret
scas
mov
inc
jb
stos
cltd
movsb
pop
sub
dec
movsl
sbb
loop
mov
jbe
xor
add
sub
ss
and
mov
xchg
aad
lret
je
shlb
lock
dec
sbb
push
rorb
movsb
in
add
test
cwtl
test
stos
movsl
add
or
scas
dec
add
stos
push
inc
sub
sbbb
cmc
aas
inc
bound
scas
test
aad
test
loope
cmp
pop
add
cmp
fadds
fwait
mov
sbb
fildll
lock
int
rcrl
pop
idivl
fstp
push
dec
imul
insl
fstp
add
int3
or
and
test
xchg
icebp
inc
stos
adc
xor
jp
fisubrs
pop
xchg
in
pop
test
add
test
sbb
popa
scas
mov
dec
xor
leave
jmp
adc
and
sub
adc
ss
push
push
fs
fadds
adcl
add
subl
ficoms
test
xor
sti
stos
or
call
int3
push
sbb
xor
gs
leavew
clc
jmp
sub
jne
lcall
and
jnp
mov
jmp
sahf
popa
aad
inc
gs
sahf
sub
mov
jb
lahf
jo
adc
shlb
jmp
push
test
sub
je
test
mov
mov
cltd
out
negb
and
xchg
pusha
or
lret
mov
rcll
jg
daa
push
ret
xchg
mov
adc
in
test
movsl
adc
pop
addr16
fstl
sub
lret
rcr
lret
jle
add
or
sub
dec
mov
mov
sub
scas
cmpsl
pop
aad
dec
dec
push
jnp
mov
loopne
fsts
imul
daa
mov
inc
or
push
cmp
leave
lret
add
inc
pop
cmpsb
shll
icebp
jecxz
mulb
cltd
iret
jl
sub
cmp
ljmp
cmp
push
ljmp
or
jmp
inc
mov
pop
imul
movsl
xchg
jecxz
jge,pt
popf
cmp
sub
popf
and
out
xchg
int3
pop
mov
sub
stos
mov
mov
fcoms
add
mov
mov
fimuls
sbb
add
xchg
add
cmp
pusha
stos
test
jnp
or
xor
jmp
call
jne
outsl
and
inc
jns
add
sub
add
in
push
pop
cmp
pop
sub
push
test
jcxz
sbb
std
test
mov
test
or
fsubl
test
or
test
adc
inc
sarl
rclb
lock
sti
lock
movsb
and
pusha
pop
push
cmp
imul
loop
test
cmp
fldl
dec
mov
add
cmc
push
ret
add
push
and
sahf
test
sub
int3
adc
roll
pop
mov
and
lret
ss
scas
add
add
push
dec
add
sub
sub
ja
or
roll
jecxz
orl
clc
push
and
xor
rcll
ficoms
mov
mov
pop
pop
cli
inc
enter
lret
pop
and
push
fisubrl
mov
jb
sub
push
test
stos
mov
inc
and
and
sbbb
mov
xchg
cmp
lock
dec
and
dec
or
shlb
cmp
push
movsl
cmc
adc
pop
jmp
mov
sub
sbb
mov
cmp
jbe
mov
cmp
rol
sbb
filds
lock
xor
add
jecxz
pop
inc
jle
push
lret
addr16
out
fistps
fstpl
ficomps
or
mov
xlat
adc
add
sbb
loope
adc
adc
xchg
cmpsb
xchg
jp
mov
adc
sahf
mov
test
ljmp
pop
in
movsl
sbb
gs
mov
or
cltd
adc
push
je
jns
lds
add
push
sarb
inc
and
lret
mov
mov
add
mov
mov
mov
xor
dec
xor
mov
add
inc
push
sbb
cmc
jg
and
or
sub
shlb
mov
lahf
push
pop
and
push
iret
rol
loopne
and
mov
xchg
fwait
sub
sub
adc
subl
leave
out
lds
push
cltd
subl
adc
movaps
jo,pn
cld
sub
cmpsl
hlt
or
rolb
push
mov
test
and
je
cmp
pop
jmp
xchg
imul
insl
ret
xchg
jne
in
addb
addb
orl
mov
and
jno
les
and
sahf
sub
add
jae
add
mov
js
inc
adc
fnsave
xorl
inc
imul
xor
cmovnp
imul
hlt
adc
movsb
jg
add
or
inc
pushf
rcll
mov
sarb
clc
movsb
mov
xor
and
lret
insl
nop
clc
ret
jb
pop
loopne
mov
lret
mov
mov
pop
add
pushf
sub
hlt
mov
jmp
adc
and
jg
and
xor
js
and
out
cmpsl
outsl
pusha
sub
lcall
andb
pop
inc
pop
push
push
jb
cmp
enter
add
mov
mov
jmp
rorl
sub
cmp
data16
cmpsl
outsb
aam
into
loope
push
ficoml
inc
or
test
mov
es
xorl
pop
loop
rolb
add
jnp
es
hlt
lock
mov
test
add
jle
push
add
jle
cmp
and
insl
ret
mov
cmpsl
imul
mov
jl
dec
jecxz
mov
es
jecxz
add
insb
scas
push
fnstcw
sbb
sub
dec
lret
sub
std
jb
and
add
ss
ret
shll
adc
mov
cmpb
cmp
add
xchg
popf
leave
xor
xorl
cmp
cmp
cmp
mov
test
xchg
imul
outsb
lods
push
add
inc
mov
fcmove
inc
add
xorb
popf
scas
adc
in
pop
ret
sbb
adc
cmp
shlb
in
ja
setbe
and
sub
push
cltd
and
or
aam
faddl
sti
verr
xor
mov
inc
into
dec
sbb
push
sub
lret
sub
jecxz
push
aad
sub
aam
fsubrl
mov
mov
xchg
mov
insl
push
sbb
mov
leave
mov
xor
sub
fildll
lock
clc
aaa
je
orl
clc
and
sbb
push
or
add
pop
or
sbb
in
lret
pop
mov
or
adc
popf
and
cmp
cmpsl
insl
sub
fldt
sbb
cmp
ret
mov
les
mov
mov
add
mov
or
insb
clc
enter
xchg
mov
pusha
mov
adc
divl
shlb
movsl
addl
cmp
and
sbb
es
adc
lock
xrelease
testb
add
ret
cltd
xchg
adc
icebp
sbb
sub
and
in
and
lods
iret
add
mov
test
sub
dec
inc
loopne
mov
jp
cmp
sbb
jae
mov
sub
or
stos
mov
push
adc
shlb
in
dec
movhps
mov
xchg
sahf
jo
pop
push
sbb
cmpsl
ret
sub
pop
push
and
sbb
lcall
sub
xchg
add
mov
and
lds
pop
pop
bnd
push
jl
mov
jbe
pop
es
pop
das
inc
xchg
mov
test
sub
call
fstl
outsb
fldcw
dec
fs
rol
sarb
int3
pop
add
push
push
dec
or
leave
sub
popf
rcl
mov
shlb
and
jge
in
mov
movsb
xchg
mov
lret
mov
fisttpl
inc
adc
pop
pop
sbb
pop
shlb
xor
mov
jmp
or
mov
dec
jp
aas
aaa
sub
cs
or
cmp
sahf
add
js
adcl
and
add
xchg
ds
aam
add
cld
sub
pop
loopne
mov
outsl
enter
fs
mov
cmp
add
or
in
das
test
mov
lar
shr
in
push
mov
lret
jmp
aad
fcoml
fisubrl
add
lds
mov
cmpsb
jmp
test
in
data16
dec
leave
sbb
and
and
jb
push
cmp
add
dec
fmull
ds
jp
push
sub
js
jne
jp
add
push
mov
int3
ljmp
sub
leave
add
roll
movsl
icebp
icebp
jo
lahf
push
mov
jbe
cmc
add
xorl
jnp
js
add
pop
inc
xor
jmp
sti
nop
lcall
add
clc
xchg
rcll
stc
movsl
lret
push
stos
lock
or
xor
inc
mov
ljmp
push
popa
fyl2x
and
je
or
and
loop
push
dec
clc
je
mov
jbe
loopne
jo
test
addl
push
jl
mov
push
dec
push
imulb
adc
fcoms
adc
add
shrl
mov
add
pop
outsb
sub
dec
mov
filds
xchg
pop
rol
pop
and
iret
inc
cmp
or
xor
addr16
fdivs
pop
mov
sahf
mov
jno,pn
jmp
ret
scas
ret
pop
push
xor
or
xor
pop
add
je
and
push
out
and
xchg
push
mov
test
add
aam
das
scas
insl
stc
stos
mov
cmp
sti
jbe
dec
loope
xchg
dec
iret
mov
ficomps
mov
push
add
std
cmpsl
push
adc
lock
jg
ss
inc
pop
push
inc
es
add
jno
leave
lds
loopne
pusha
pop
les
push
mov
pushf
data16
jo,pn
inc
stos
adc
and
les
sub
xor
lods
jecxz
or
jmp
xor
out
data16
xor
and
lea
push
xor
pop
inc
add
pop
adc
setae
mov
hlt
in
dec
mov
xor
push
sarb
ret
cmp
push
mov
or
jnp
es
add
cmp
loopne
subb
pusha
js
xor
lcall
in
je
add
dec
mov
inc
icebp
ds
pusha
ret
nop
push
or
mov
das
push
and
xor
pusha
xor
mov
leave
cmp
int3
push
stos
fcmovne
inc
cmp
mov
fs
test
inc
jae
subl
les
inc
lret
sti
lret
shlb
es
push
mov
sahf
hlt
mov
and
add
imul
int
xchg
std
mov
inc
std
sub
shl
cmp
cmc
repnz
std
aam
loop
insb
push
lock
xchg
add
lds
mov
fxch
add
adc
jnp
sbb
push
cmp
push
fcmove
repz
xor
xchg
pop
mov
fidivrs
jnp
enter
jge
mov
cmc
je
mov
std
pop
mov
pop
sub
or
adc
clc
shrb
or
mul
mov
mov
push
jl
dec
add
ret
jmp
cmp
rorl
push
cmp
orl
ljmp
popf
fcoms
jg
fldl2t
hlt
pop
jecxz
ficoml
lods
shlb
lahf
cmp
jge
jg
add
mov
fdivrl
ss
add
xchg
aas
jo
test
xor
push
cmc
dec
cs
sbb
add
and
shrl
inc
cs
xchg
loope
add
test
xor
cmpsl
pop
xor
inc
fadd
xchg
lret
xchg
dec
ret
mov
outsl
fidivrl
jo
or
mov
out
stos
push
into
aas
cmc
je
dec
frstor
inc
sub
jge
xchg
mov
out
cmp
add
add
loope
xchg
xor
push
outsb
and
lret
iret
test
jmp
lock
ds
mov
sub
imul
sub
and
sub
shl
pusha
push
add
and
cltd
jnp
std
lea
jecxz
jmp
push
sub
sbb
jo
cli
jge
sub
pop
in
mov
xor
mov
adc
enter
jo
jne
paddq
and
into
jmp
test
scas
mov
bound
inc
test
xor
and
fbstp
jns
mov
movsl
jmp
pop
pop
xchg
add
faddl
jg
xchg
or
sahf
in
cmpsb
inc
enter
call
ds
fmul
jge
dec
shrl
push
test
pop
test
fstl
jl
sub
xor
aad
gs
addr16
inc
pop
mov
xchg
cmp
sbb
je
cmp
mov
mov
mov
icebp
icebp
leave
adc
and
sahf
sub
cld
or
sub
fistl
xlat
and
aam
rcrl
adcb
cmp
and
jmp
sbb
push
js
xchg
jge
jmp
adc
cmp
mov
add
cmpsb
push
fnstcw
ret
jns
inc
addr16
inc
jecxz
rcrb
lea
dec
lds
es
fsub
mov
push
rol
movsb
out
insb
inc
mov
and
pusha
sbb
lock
addl
cli
push
add
fucom
and
cmp
mov
daa
sbb
adc
lds
fidivs
jge
pop
mov
xor
aad
in
insb
js
adc
bound
pop
lods
and
jno
lret
push
fmul
mov
lcall
sub
sub
adc
push
subb
ljmp
aaa
sarl
sub
mov
sub
shll
mov
mov
cmp
lea
cmc
sti
add
xchg
mov
inc
push
xchg
shlb
push
ret
sbbl
fidivs
add
pop
popf
sub
pop
js
mov
cmpsl
jle
add
loope
sub
inc
cmp
lret
imul
dec
cmp
icebp
push
xor
lret
jnp
loopne
xor
rdmsr
or
mov
add
mov
mov
loop
int3
or
es
lock
push
jl
or
loop
filds
fnstsw
enter
ja
cmp
xchg
or
lcall
xlat
adcb
inc
lods
push
fcoms
push
lret
cmp
loopne
jp
pushw
sub
and
imul
mov
fisttpl
xchg
loopne
repz
or
xor
and
xor
push
xor
test
push
and
ljmp
xor
jecxz
in
rolb
jnp
rorb
add
test
shll
cmpsl
popa
scas
mov
out
mov
lock
xor
fiaddl
jno
pop
and
and
mov
jne
jle
xchg
xchg
inc
imulb
out
sub
lret
adc
sub
paddw
orl
push
push
or
or
xor
push
pop
repz
jle
and
jne
pop
sti
addr16
scas
or
pop
sbb
xchg
mov
jmp
loop
jmp
or
or
sub
icebp
cmpl
outsl
mov
lds
arpl
push
mov
addr16
and
gs
lret
cld
adc
cmp
imul
lret
pop
inc
pop
xchg
enter
daa
dec
pop
mov
ljmp
or
add
pop
shl
sti
faddl
dec
xor
daa
sbb
rorb
sub
pusha
test
add
xchg
or
push
pop
pop
test
add
lods
push
shll
add
sub
adcl
push
and
sbbl
xchg
push
iret
scas
enter
lods
add
inc
es
add
loopne
inc
inc
or
pop
dec
loopne
pop
insb
jecxz
mov
ret
pop
daa
lret
jecxz,pn
mov
data16
pop
mov
jbe
or
jg
xchg
movsl
test
rcrl
adc
pop
daa
cmp
sub
jl
pop
orb
or
pop
adc
rolb
mov
pushf
ret
mov
rorl
cmp
loop
cmc
loop
punpckhwd
repz
cmp
leave
or
sub
pop
popa
sub
or
rcll
xchg
lcall
mov
js
test
iret
imul
shlb
je
mov
pop
jp
rclb
dec
adc
addr16
test
xchg
xor
push
cmp
iret
shrb
mov
fadds
sub
mov
loop
xchg
pop
add
imul
dec
imul
mov
or
add
pop
les
rcll
rcrl
aas
ljmp
in
or
jge
dec
imul
mov
ss
jo
fidivl
ja
adc
cmp
inc
push
pop
test
mov
mov
into
ret
shll
and
stos
stos
stc
sbb
lret
pop
and
bound
push
ds
dec
cmp
xchg
mov
cmp
or
pop
and
sub
pushf
mov
mov
sti
mov
inc
add
aam
icebp
aam
hlt
cmc
or
daa
shll
iret
jmp
cmc
orl
adc
jb
mov
lock
lods
cmp
stc
inc
dec
jb
subl
add
adc
or
adc
test
xchg
adc
mov
push
jecxz
adc
sub
mov
stos
ljmp
outsl
sub
sbb
rorl
test
push
pop
adc
jecxz
mov
xlat
rolb
into
mov
dec
jo
dec
xchg
push
mov
cltd
pop
addr16
sarl
scas
inc
and
jo
xchg
mov
test
or
out
xor
outsl
push
sub
imul
mov
jno
sbb
roll
call
frstor
sbb
adc
add
jno
lods
rolb
xor
add
outsb
gs
add
dec
push
pop
cmp
sbb
mov
inc
and
lock
add
fdiv
es
mov
sub
imul
rcrb
inc
outsl
mov
inc
sub
aas
inc
popf
fsts
inc
sbb
push
ret
outsl
outsl
adc
es
push
icebp
cmp
repnz
into
mov
cmc
add
mov
stos
pop
fs
popa
and
push
stos
and
add
sub
or
mov
data16
cmp
inc
out
add
ss
js
inc
into
jae
xchg
push
stos
or
lods
sbb
jns
loope,pt
adc
ljmp
sbb
adc
push
addr16
sub
stos
sbb
test
mov
shlb
lock
xor
mov
js
fwait
cmp
cmp
scas
rcl
mov
adc
movsl
mov
adc
lret
gs
fimuls
mov
in
jb
fdivrs
xor
in
and
frstor
daa
push
pop
dec
cmp
fldcw
xorl
dec
nop
sub
xchg
test
dec
rcrb
jo
pop
and
rorb
sub
sbb
or
adc
shl
leave
loopne
pop
pop
pusha
mov
scas
es
xor
popw
dec
test
xor
out
add
xor
xchg
pop
clc
jno
ret
sti
pop
pop
ja
xor
movswl
std
jnp
scas
add
cmpsl
xchg
mov
cmc
sub
xor
and
daa
cmp
fbstp
pop
cld
jno
mov
inc
ficompl
fsubl
add
push
jb
adc
repz
jl
jl
cmp
sbb
idivb
and
xchg
lcall
cli
jecxz
jl
cmp
or
sub
shlb
mov
cmp
pop
insb
and
pusha
dec
jg
pop
jg
mov
jge,pt
or
sti
push
pop
add
out
push
jo
mov
outsl
shl
and
mov
dec
adc
lret
sub
pop
mov
loopne
ss
sbb
jl
push
cltd
loop
lcall
inc
andl
mov
jle
lret
jecxz
dec
sub
jecxz
push
insb
add
mov
test
psrad
bound
rorb
test
jo
add
test
xchg
loope
jmp
dec
sub
cmp
add
arpl
add
inc
ret
cmp
push
mov
test
adc
adc
sbbl
dec
das
sbb
out
cmpsl
shrb
inc
cmp
adc
and
add
sbb
shlb
je
jecxz
rcrl
add
pop
cs
in
jo
out
dec
enter
xor
push
mov
repz
xchg
imul
or
jnp
dec
arpl
and
push
sbb
repnz
jecxz
mov
mov
and
std
xor
push
rcl
int3
cs
adc
aad
pop
mov
arpl
mov
rcll
xor
andl
add
xchg
arpl
and
add
cmpsb
jo
sub
aaa
cmp
mov
inc
pusha
dec
inc
shlb
sub
inc
jge
jo
jne
lds
cs
lret
and
sbb
push
repz
adcb
psubb
dec
and
pop
push
push
fcmovbe
xor
or
jge
jae
lods
movb
add
jb
dec
sub
inc
cmp
test
push
loope
mov
mov
stos
pop
push
dec
push
and
or
pop
mov
xchg
push
mov
and
adc
in
sub
out
dec
dec
cld
sbb
and
xchg
test
cmp
pop
sub
or
stos
repnz
test
jbe
xchg
add
xor
xor
lods
inc
push
and
scas
out
mov
cmc
add
cmp
movsb
or
add
pusha
andl
mov
arpl
dec
xchg
add
sbb
sbb
ret
aad
lret
xor
test
xor
pop
add
jnp
jnp
lods
leave
cltd
mov
inc
roll
inc
hlt
or
lock
aad
dec
cmp
cs
je
test
lea
call
sbb
cmpsl
dec
pop
incb
mov
and
xor
mov
arpl
jne
fbstp
icebp
repz
xchg
dec
mov
mov
dec
xchg
rcl
aad
in
xor
scas
shrb
out
and
jo
mov
push
lods
cli
inc
aam
mov
or
sbbb
dec
repz
lret
mov
in
ss
and
aas
sahf
xorl
in
leave
les
add
push
cli
int
mov
dec
jge
dec
pop
cltd
lds
or
ss
sahf
aam
dec
cwtl
or
addl
dec
and
or
into
rcrb
xchg
inc
xchg
inc
pop
add
push
mov
add
je
movsl
xchg
ret
nop
adc
clc
mov
gs
jne
inc
test
subb
xlat
push
mov
add
dec
cld
dec
mov
or
dec
mov
or
mov
sub
and
xor
cmp
aas
shrb
ret
out
incb
or
push
and
fwait
xor
adc
das
inc
add
mov
das
cmpsb
xor
jns
cmp
jno
mov
mov
ficomps
push
inc
xor
adc
or
add
imul
or
add
lds
add
mov
add
imul
cwtl
xor
adc
inc
ljmp
pop
pop
xor
jge
stos
loopne
pusha
mov
mov
and
or
inc
lock
mov
add
mov
mov
bswap
jecxz
jbe
push
inc
sub
pop
mov
xchg
cmp
xchg
icebp
mov
cmp
push
add
ds
cltd
mov
pop
jg
fstl
scas
outsb
gs
scas
call
lret
push
cmpb
sbb
ud2
sub
or
sbb
aam
sbb
popa
rorl
movsl
movsb
mov
pop
cmpsl
xlat
clc
xor
ljmp
pushf
pop
je
sbb
fisubl
push
rcl
xchg
adc
lods
dec
adc
mov
lea
mov
mov
xor
mov
lret
ja
cmc
and
sub
sbbl
outsl
js
and
dec
sub
or
push
add
loopne
xchg
subl
and
nop
adc
add
or
sbb
cmp
add
nop
push
add
mov
sub
mov
mov
test
mov
je
ret
ja,pt
xor
add
xchg
mov
fldl
xor
adc
xchg
pop
fisubs
sbb
push
stos
int3
insl
lret
add
push
add
lret
cld
pusha
shll
fidivs
dec
xchg
mov
test
sbb
fmull
cld
and
dec
leave
pop
imull
shll
pop
jp
xchg
jp
je
dec
jmp
push
push
and
dec
pop
call
aam
das
jge
pop
cmp
sbbl
push
fisubs
addr16
push
cs
jno
imul
je
ret
iret
fwait
xchg
push
stos
inc
inc
fcoml
or
inc
push
and
pop
push
cli
out
into
cmpsb
lcall
adc
cmpb
or
xchg
fimuls
or
inc
insl
lcall
sub
sbb
sub
and
ss
inc
aaa
push
push
sbb
fsubs
sub
das
repnz
xor
andb
xorb
adc
jmp
je
xchg
and
add
or
jge
lcall
dec
pop
rolb
push
dec
jae
or
lods
mov
sub
jg
sub
ficoml
xchg
mov
xor
pop
mov
pop
notb
add
push
adc
sub
fsubr
scas
shrl
dec
movsl
sub
mov
pop
sub
sbb
pushf
fiadds
pushf
adc
rolb
lock
ret
pop
mov
in
nop
js
imul
arpl
adc
notl
js
add
pop
xchg
mov
add
dec
stc
add
filds
jbe
or
cmpl
push
or
mov
movsl
mov
lock
dec
jae
stc
cmc
enter
sbb
stc
inc
add
imul
sbbl
test
pusha
andl
push
and
jno
mov
push
bound
rclb
sbb
in
out
dec
fcompl
leave
mov
push
pop
xchg
mov
and
test
dec
inc
sub
mov
mov
mov
sbb
push
stc
scas
sbbw
cmpsb
popf
xor
dec
xor
dec
mov
ja
cmpsl
adc
xor
rcrb
std
add
in
push
cmp
in
push
xchg
js
aam
sbb
rorb
stos
addr16
sub
aad
daa
mov
push
call
ret
fmull
insb
lldt
add
or
mov
sahf
lods
jae
jae
pop
inc
xor
pop
dec
popa
and
daa
movsl
push
dec
dec
std
add
and
aad
sub
sbb
inc
pusha
aad
retw
in
aaa
add
inc
mov
sub
and
jns
sub
aad
push
inc
push
adc
sbb
icebp
push
jle
testb
mov
inc
loope
mov
jmp
pop
pop
fmuls
push
or
pop
ss
and
cmp
cmpsl
inc
fmull
inc
inc
add
and
ds
push
sbb
cli
adc
sbb
das
and
or
adc
inc
aaa
fnsave
jp
pop
dec
dec
test
outsb
movsb
sbb
xchg
add
inc
insb
jg
or
mov
dec
int3
lret
sub
or
es
arpl
lret
test
add
xor
add
cmp
xor
jo
xchg
jecxz
popf
jo
clts
sub
or
jb
xor
in
sub
ds
fiaddl
aas
es
xchg
cmp
das
hlt
outsl
out
sub
pop
adc
push
add
pop
outsl
adc
int
dec
adc
and
data16
aam
ret
push
cltd
je
aad
push
decb
and
dec
out
add
movsl
into
xor
inc
imulb
repnz
push
in
fdivrl
sbb
mov
mov
mov
ret
popf
sbb
dec
push
and
jbe
sbb
sets
test
mov
xchg
loope
ret
shll
sbb
cmp
jns
jbe
lcall
rcrb
loopne
dec
adc
jae
push
insb
add
sbb
lcall
sub
add
test
out
lods
addr16
faddp
outsb
add
lds
loop
outsb
sbb
mov
or
lret
mov
add
add
insb
and
jnp
das
fwait
inc
sbb
add
push
lea
add
add
and
lret
adc
movsl
or
ja
mov
aad
aad
and
inc
mov
outsb
add
lret
inc
dec
push
cmp
test
mov
add
roll
cmp
js
pushf
xor
js
mov
add
pop
dec
and
movsl
sub
and
outsb
jge
setno
rclb
bound
std
ss
mov
aaa
outsl
jnp
imul
mov
mov
shrb
mov
inc
inc
add
das
xor
lods
pusha
sbb
aas
sbb
add
orb
mov
dec
inc
or
mov
cmp
inc
leave
cmpsl
in
add
adc
or
xchg
leave
lds
cltd
pop
lods
lock
adc
adc
inc
icebp
imul
cs
jb
idivl
sub
push
and
rcrl
or
sbb
cmp
scas
fisubs
pop
mov
pop
call
test
mov
or
lock
out
or
loope
cmp
gs
sbb
sbb
add
mov
paddsb
xchg
inc
cmp
outsb
and
shlb
mov
mov
stos
pop
push
das
mov
inc
inc
pop
dec
sub
jno
jo
pop
push
inc
ret
dec
loope
dec
add
lods
or
xor
jmp
and
pop
add
lods
adc
ror
cmp
ror
ljmp
ror
lods
in
dec
inc
sub
jecxz
movsb
adc
jnp
paddq
add
stos
repnz
inc
jmp
sbb
add
ja
adc
cmp
gs
push
jbe
dec
hlt
fwait
popa
push
add
gs
cwtl
cmp
test
ret
aas
sbb
out
test
rorb
jno
cs
inc
bound
outsl
loop
or
fmull
xchg
aad
sarl
in
ds
pop
scas
cmp
and
inc
mov
mov
das
sbb
mov
cmp
cli
mov
outsl
push
js
adc
add
ret
ja
clc
sub
cs
or
mov
or
data16
outsb
pop
dec
bound
cmp
pop
loop
or
inc
lret
push
pop
mov
add
sbb
push
or
pop
fmulp
icebp
cmpsl
xor
xorb
int3
xchg
enter
or
adc
sbb
and
stos
fdivrs
adc
outsl
sarb
add
and
xchg
push
movsl
test
jl
add
loope
sub
pop
or
aam
push
jbe
ret
sub
test
pop
push
sub
repnz
jge
inc
loope
fs
in
xchg
adc
test
cmpsb
sub
sbb
aas
movsl
add
sbb
add
andl
mov
jecxz
or
jmp
lcall
mov
scas
sbb
add
sarl
fiadds
bound
pop
jne
pop
jge
xchg
test
mov
les
test
setb
inc
add
xchg
mov
sbb
add
or
push
mov
insb
jbe
sbb
dec
mov
dec
mov
cmp
mov
or
cli
jp
xchg
xchg
adc
lods
pminub
sbb
add
jge
pop
dec
sub
push
push
scas
rol
popf
push
xlat
out
jl
mov
jl
cltd
imul
nop
pop
jge
xchg
call
jg
mov
or
pop
push
xor
or
mov
and
add
add
xchg
ficompl
cld
sbb
stc
sbb
lds
add
xchg
ja
shlb
ds
or
pop
inc
push
dec
ficoms
dec
mov
mov
inc
sub
add
mov
outsl
cli
insb
mov
jbe
test
js
or
mov
cmpsl
cmp
aad
inc
push
dec
cmp
add
test
icebp
sub
je
jo
loope
cmpsl
push
adc
jae
jne
mov
inc
test
call
inc
inc
or
cmp
addb
pusha
pusha
sub
test
rcrb
in
add
dec
stos
daa
loope
mov
inc
jno
xor
sbb
lahf
pop
or
or
aam
roll
xchg
test
xor
sbb
push
test
or
pop
push
into
push
sub
adc
lock
sub
add
inc
sub
xchg
adcl
sbb
das
and
loopne
and
or
dec
cli
inc
mov
pop
jge
inc
dec
enter
lcall
xchg
faddl
shl
jnp
bound
test
lahf
inc
test
xor
pushf
jb
movsb
push
rolb
jbe
jl
push
pop
lret
cmc
mov
mov
xchg
js
jo
sub
xchg
inc
rcrl
pop
imul
clc
mov
jno
lea
loope
pop
rclb
mov
mov
dec
and
imul
sub
xchg
adc
leave
adc
enter
loope
jmp
shlb
sbb
and
push
pushl
mov
mov
arpl
push
addr16
test
test
adc
dec
sbb
mov
int
test
je
imul
mov
jno
ret
les
add
movsb
jmp
pusha
mov
fcoml
adc
pop
inc
test
stc
pop
jle
sub
push
xorb
xchg
push
dec
dec
pop
adc
adc
push
push
shll
movsb
adc
xor
daa
mov
sbb
js
bswap
jne
test
mov
cmp
xor
ret
xchg
in
mov
mov
scas
shlb
or
out
and
out
sbb
pop
lea
std
jne
mov
pop
pop
pop
push
pop
mov
testb
adc
movsl
and
pop
add
sti
lret
sbb
idivb
test
enter
dec
cmp
xor
scas
lea
mov
enter
ret
leave
imul
xor
lret
mov
push
xchg
mov
imul
aam
mov
and
in
jnp
int3
mov
sub
std
das
test
push
mov
pop
push
arpl
int3
ja
int3
sbb
leave
insb
xor
iret
xchg
mov
cmp
and
into
cs
in
es
out
push
call
pop
test
lods
dec
or
jb
sub
hlt
std
or
in
push
and
xchg
imul
sub
repz
sbb
inc
xchg
in
xor
sub
cltd
fistps
nop
sub
mov
xor
into
ds
aaa
push
js
mov
stos
cmp
push
pop
js
mov
and
arpl
outsb
leave
or
xor
push
cmp
mov
stos
adc
loope
aas
test
xchg
and
pop
sahf
adc
sbb
pop
fistps
cld
or
xchg
adc
or
mov
imul
jae
ret
push
pop
fsub
es
mov
test
pop
popf
jmp
lock
or
inc
pop
test
adc
mov
or
cli
call
inc
fwait
xlat
repnz
mov
js
push
jge
adc
dec
loope
cs
xchg
test
into
pop
dec
jnp
xorl
aad
xchg
mov
inc
pop
lea
ror
xchg
test
and
leave
sbb
push
adc
push
out
cmpsb
xchg
andl
mov
xor
adc
and
and
js
das
push
es
sbb
mov
cmpsb
mov
mov
sub
sbb
bound
cli
or
pop
inc
dec
cmp
adc
dec
mov
jne
gs
pushf
es
gs
cmpsb
push
dec
lods
xchg
or
mov
jnp
ret
fildl
inc
pop
sub
fwait
sahf
cmc
lea
sbbb
faddl
pusha
lret
fcomps
adc
xor
add
adc
push
pop
icebp
stos
mov
add
rcl
cmp
loope
bound
ret
add
pop
mov
rorb
sub
and
push
addr16
and
adc
and
xchg
jp
push
xchg
push
or
and
insl
sub
jle
adc
aam
mov
and
dec
sub
cmp
pop
xchg
xchg
push
inc
and
loope
add
scas
mov
xchg
loopne
xor
das
pusha
mov
dec
jne
add
jae
lret
mov
fwait
jb
popf
cmp
pop
addr16
lret
push
leave
mov
dec
sbb
rol
dec
addl
jnp
sbb
arpl
int
iret
cwtl
mov
imul
sbb
stos
push
mov
stos
add
dec
jne
xchg
mov
xchg
movsl
pop
pop
cmp
fldl
jecxz
in
cmp
push
sub
popa
cltd
jno
inc
mov
xchg
or
push
not
adc
popa
leave
incb
pop
clc
cmc
int3
pop
sarb
loopne
push
rcr
outsl
jp
cs
sub
add
jl
fmuls
sbb
dec
sarb
test
xor
loopne
pop
jne
xor
mov
ret
or
add
mov
xchg
pop
ret
sub
insb
les
add
add
push
jmp
rcrl
xchg
xor
dec
addl
mov
ret
das
popf
pop
outsl
mov
lret
sbb
inc
or
scas
sub
mov
std
fsubrl
lea
jge,pn
mov
pushf
push
imull
adc
xor
and
test
adc
mov
inc
jmp
pop
pop
lcall
imul
sbb
pop
dec
hlt
shll
stos
nop
add
loope
xchg
jmp
and
lahf
pop
arpl
inc
sub
adc
lea
gs
or
nop
dec
mov
add
mov
xchg
inc
ljmp
bswap
fistpl
dec
cmp
cwtl
out
sbb
data16
sub
loopne
imul
xchg
in
sub
xchg
or
or
icebp
inc
cmp
add
add
movsl
xchg
jp
add
sbb
cmp
lret
mov
dec
sbb
test
insl
pop
ljmp
mov
lea
mov
xor
mov
xchg
pop
aas
bnd
insl
mov
push
stos
pop
inc
ja
push
lods
test
cmpl
jb
or
leave
sbb
mov
movsb
add
xor
dec
or
outsl
insl
mov
lock
jge
and
dec
movsl
xchg
nop
mov
xor
in
push
sbb
out
inc
cmp
pusha
adc
adc
push
cmp
cmc
dec
outsb
and
fcmovnb
movsl
js
cmp
pop
scas
sbb
mov
test
push
jae
daa
std
mov
xor
mov
xchg
xchg
std
fildl
cmpsl
jae
inc
inc
cwtl
pusha
fnstcw
rol
dec
loope
mov
test
divl
jno
mov
xor
loopne
hlt
xchg
fldl
push
sbbb
xor
lcall
adc
js
inc
shll
loope
ja
rcll
ja
xchg
ret
fistl
push
sbb
mov
int
lods
jb
rcr
add
pop
ss
add
ja
mov
pop
jne
roll
sbb
pop
fimull
mov
cmp
sbb
pop
rolb
jo
or
xchg
adc
sar
es
lock
xorps
or
dec
mov
mov
or
sbb
pop
push
mov
mov
lret
jo
in
jnp
and
popa
add
icebp
pop
push
pop
jae
jbe
ljmp
push
in
out
push
imul
or
pop
loopne
les
mov
pop
sub
pop
dec
jnp
in
mov
pop
pop
xlat
jno
push
lea
cmp
popa
pop
sub
adc
jno
xchg
sahf
js
ret
push
xorl
testl
and
mov
frstor
into
adcl
sub
dec
dec
ffreep
and
imul
inc
div
je
insl
std
int3
push
and
shll
and
xor
pushf
dec
flds
idivl
mov
movb
push
sub
daa
addb
or
nop
jno
std
stc
push
push
inc
inc
ljmp
cmp
fisubrl
jno
xchg
cli
sti
loope
xor
cmp
daa
inc
mov
xor
ror
sysenter
xor
add
adc
icebp
jo
andl
rolb
xchg
cltd
dec
ljmp
jecxz
outsl
rcrl
adc
js
push
sbb
dec
les
daa
clc
out
add
shl
nop
stos
push
arpl
jae
add
jo
cmpsl
or
and
cmp
lcall
ret
adc
insb
cmc
jmp
std
and
push
mov
shlb
jge
arpl
push
and
popa
or
cmp
push
in
push
ljmp
mov
cli
jno
stos
daa
sbb
inc
ret
into
pop
and
inc
xlat
mov
mov
push
cmp
push
lods
cmc
mov
inc
lods
jo
add
scas
or
xchg
inc
inc
bound
test
add
jecxz
or
add
mov
lcall
int
adc
fadds
ret
cs
into
ss
aam
fmul
jno
fs
scas
cmp
pop
fcoms
cmc
inc
ror
arpl
mov
cmp
or
pusha
imul
int
add
jp
lods
mov
ret
in
fnstenv
dec
cli
and
push
scas
loope
pop
mov
into
rorb
adc
lock
xchg
jmp
and
pop
xor
shll
sbb
test
xchg
sub
add
xorb
ret
out
mov
jle
aaa
cmpsl
adc
push
dec
outsl
mov
fs
int
mov
or
cmpsb
mov
lea
ret
loope
das
stos
and
out
jno
imul
jb
cltd
js
inc
or
out
fsubrs
cs
sub
mov
dec
movsb
ret
xor
adc
cmc
cltd
cmp
lock
or
call
xor
and
inc
lret
dec
mov
push
lock
dec
jp
test
push
daa
push
hlt
mov
adc
test
stos
push
aaa
add
mov
or
in
xor
fsubrl
dec
cmp
mov
add
ja
test
mov
inc
xor
ljmp
pop
xor
in
es
lret
das
scas
pop
nop
pop
inc
mov
div
xor
jbe
jae
jb
cmp
sbb
add
push
inc
outsl
add
jno
cmpsb
std
jo
jecxz
lret
jbe
jb
aas
pop
clc
jno
imul
pmulhw
jg
add
sbb
call
test
add
ret
sub
or
les
pop
adc
outsl
push
aas
pop
push
and
pop
roll
mov
or
popa
sahf
xorb
jns
lock
scas
inc
arpl
and
imull
ret
sbb
ret
loopne
pop
lret
or
jl
or
mov
xorl
movsb
and
xchg
roll
mov
mov
lret
ficomps
xor
mov
fmull
andb
je
sub
jo
insb
out
inc
shrb
xor
add
cmp
movsl
push
ret
lea
enter
and
pop
xor
sbb
sbb
sbb
jle
je
add
mov
add
cmp
add
call
xchg
or
xchg
sub
cmpsl
insb
dec
test
mov
mov
xchg
dec
mov
pop
mov
adcl
mov
sahf
add
sbb
mov
les
and
sahf
in
push
jecxz
insb
sarb
shl
mov
inc
sbb
or
stos
mov
or
push
pop
leave
lret
push
push
shl
sahf
pop
add
jo
push
mov
or
aad
lock
push
xchg
jmp
call
mov
xor
fimull
jmp
adc
inc
pop
pop
cmp
and
mov
loope
adc
dec
arpl
sbb
mov
and
sbb
fidivs
sub
or
and
push
arpl
push
jle
and
mov
cli
gs
sub
mov
add
inc
dec
push
add
pop
mov
rcll
add
xchg
aaa
leave
cmp
pop
xor
xlat
sub
jl
outsl
mov
dec
shlb
mov
loopne
pop
push
cmp
loopne
scas
pop
pop
and
add
loope
jne
jle
cli
cmp
adc
push
dec
push
inc
xor
adc
adc
and
inc
push
test
pop
sbb
testb
xor
in
jb
mov
dec
and
jp
pop
mov
jnp
jnp
add
sub
sub
mov
cmpsb
sbb
outsl
or
jno
in
sbb
lret
pop
mov
mov
rol
cmp
push
mov
adc
cmp
sbb
fisttps
imul
stos
or
imul
sbbb
jp
sub
pop
pop
or
xor
out
mov
and
je
and
loop
mov
xchg
xor
ret
pop
mov
xchg
mov
lret
mov
test
pop
inc
test
rolb
and
push
push
xor
mov
jnp
push
push
jp
loopne
test
or
testb
add
test
sbb
or
popa
jecxz
mov
mov
jnp
cmp
sahf
mov
movsl
idivb
hlt
ret
add
push
bound
bound
adc
ss
sbb
setnp
jl
sub
andb
jg
inc
mov
sbb
scas
pusha
pushf
call
out
testb
loopne
jmp
xor
mov
inc
sub
dec
add
sub
mov
jo
inc
outsl
pop
jb
aam
je
xchg
sub
hlt
sbb
cmpsb
ss
cmp
inc
pop
pop
sub
clc
fdivs
test
mov
movsb
rclb
and
or
inc
or
das
sbb
sbb
add
fildl
movb
jecxz
or
mov
inc
fistl
adc
pusha
fstl
add
add
jo
push
sub
inc
int
add
imul
adc
jnp
gs
push
dec
sbb
in
sbb
pop
cmp
iret
jecxz
test
dec
lds
jge
and
pushf
inc
lods
movaps
push
inc
adc
dec
add
cmp
mov
ror
nop
pop
fsubrs
addl
add
pop
test
cwtl
fmull
addl
xor
sbb
rcr
mov
test
xlat
add
push
aad
add
add
fisubl
add
rorb
pop
data16
add
sbb
jg
xor
gs
lods
or
mov
sub
and
xchg
dec
inc
out
movsl
insb
inc
lret
movsw
aam
adcb
xchg
aam
insl
inc
mov
mov
jmp
cmp
mov
pushf
sbb
xor
inc
dec
mov
cmc
xor
add
mov
add
fld
or
out
add
mov
cmp
loope
mov
scas
movsb
push
dec
ret
ljmp
insb
shlb
popf
sbb
test
gs
or
lret
repz
outsl
popf
pusha
out
push
lods
push
enter
sub
inc
mov
mov
jecxz
adc
ret
fs
or
cld
pop
inc
sbb
aam
sti
enter
cld
mov
inc
jmp
jge
add
cmp
repz
pushl
push
out
push
jae
daa
sbb
out
shrb
mov
and
dec
je
sti
lock
ljmp
push
xchg
push
insb
loop
dec
push
fs
movsl
xor
inc
pop
sbb
xor
mov
xorl
test
imul
lret
dec
jmp
cmp
sbbb
xor
adc
add
fisubs
or
rolb
and
lds
sbb
or
sbb
stos
jae
cltd
sbb
and
sbb
out
int
push
loopne
cs
insb
sbb
mov
dec
lret
add
stc
lea
dec
and
addr16
insb
mov
jns
imul
jbe
ds
jecxz
push
aaa
dec
or
sub
mov
in
sbb
jge
and
adc
orb
testb
push
xor
shrb
dec
add
sub
mov
loopne
jo
cmp
or
jne
mov
add
or
jmp
push
orl
and
mov
mov
outsb
lret
sbb
push
out
roll
sbb
xor
test
sub
push
jmp
sub
jno
sub
movsb
cwtl
mov
inc
add
adc
jno
and
test
mov
sub
mov
clc
sar
inc
inc
je
xor
jle
pusha
popa
xor
test
stos
outsb
iret
lock
aam
les
push
add
in
push
sbb
add
adc
dec
add
mov
cmp
loop
in
rorl
scas
sarb
push
pop
xchg
imul
mov
leave
push
push
movsl
mov
push
push
pop
mov
fstpl
jecxz
jnp
sub
test
jle
and
in
pop
hlt
ret
push
sbb
movsl
and
lcall
scas
test
cmpsl
jno
int
addb
add
fsubrs
or
mov
stc
stos
sbb
push
scas
out
icebp
adc
subl
inc
sub
movsb
cmp
imul
mov
inc
cmp
ret
xchg
dec
mov
aam
outsb
jnp
jecxz
adc
or
or
add
ja
mov
dec
jno
popa
loope
sub
adc
jbe
pop
jge
jge
test
and
popa
adcl
mov
shll
inc
mov
dec
or
lods
sbb
stc
aad
cmpl
cmp
andl
cmp
pop
dec
lds
data16
add
mov
and
push
push
cltd
test
int
sub
add
ret
xor
std
or
adc
or
out
xor
push
inc
jge
mov
mov
or
pop
inc
stc
pusha
mov
outsb
cltd
fcomps
lods
flds
cltd
ficoms
fbld
add
jecxz
or
incl
xor
jno
mov
jo
subb
xorb
jb
cld
dec
xchg
pop
aad
xchg
mov
jb
das
add
idivl
insb
ret
shll
je
addr16
js
dec
inc
sub
jne
add
jp
adc
sbb
adc
mov
ret
loope
or
out
cmp
adc
rclb
ljmp
mov
adc
jnp
xchg
mov
inc
or
dec
adc
das
and
ret
and
adc
xor
cmc
push
scas
mov
bound
and
das
rcll
xor
insb
pop
mov
and
adc
jp
fldenv
fistpll
mov
test
lods
adc
add
push
int3
sub
push
or
das
mov
xchg
pop
pop
dec
or
add
dec
inc
lock
fs
scas
mov
mov
sbb
jecxz
inc
add
and
adc
andl
cmpsl
mov
push
inc
inc
inc
roll
sbb
in
std
add
vunpckhps
cmp
test
cmp
arpl
movsl
pop
loop
push
pop
push
jp
sbb
icebp
inc
pop
or
mov
xor
adc
dec
andl
in
sbb
test
mov
cmp
ss
mov
jp
pop
inc
mov
jne
sub
jno
sbb
mov
les
loope
inc
xor
cmpb
cmp
inc
jb
dec
dec
test
cmpsb
jnp
push
sub
lahf
cmp
or
cmp
mov
nop
bound
mov
dec
jp
and
and
outsb
inc
add
add
adc
pop
movb
cs
jo
arpl
lock
fisttpl
lock
clc
xor
cmp
push
cmp
sbb
pop
push
cltd
add
mov
inc
sub
sbb
test
leave
sbb
icebp
rcll
mov
and
inc
or
sbb
mov
mov
mov
andl
add
dec
stos
insl
test
xor
xchg
mov
push
negb
push
inc
imul
adc
xchg
pop
shlb
sbb
push
pop
dec
xorl
push
and
pop
push
fnstenv
sbb
fists
scas
mov
lock
sub
push
or
adc
or
fadds
sub
out
xchg
or
inc
fidivrs
shrl
insb
xor
mov
xchg
sub
inc
add
pop
clc
pop
jo,pn
scas
cmp
cmp
sbb
mov
nop
ds
adc
daa
mov
hlt
test
aaa
decb
aad
xchg
cmp
dec
sbb
push
mov
pop
push
inc
aaa
insb
push
lret
sub
mov
dec
push
mov
push
test
pop
jmp
ret
pop
push
cmp
sbb
lcall
add
cli
mov
cmp
jl
mov
adc
test
pusha
add
repz
add
xor
pop
adc
xor
test
push
jne
cmpsb
scas
dec
or
jno
push
jno
shlb
bound
ja
jae
test
cs
notl
push
mov
sbb
cmpsb
ret
add
aam
lods
lods
insl
cmp
hlt
stc
adc
and
xchg
sub
movsl
shll
mov
mov
jecxz
popf
pop
mov
add
insb
jl
cmp
sbb
pop
sarb
bound
outsl
dec
add
loopne,pn
mov
cmp
fs
dec
insb
mov
movsb
jno
test
adc
xor
shl
push
cmp
or
sbb
dec
add
in
mov
loope
lock
repz
dec
adc
push
mov
bound
test
and
cmc
ret
movsb
add
fimuls
loope
or
cmp
out
and
das
or
aaa
push
mov
pushf
aam
sub
adc
add
loop
fdivs
inc
cmpsl
cmp
call
test
push
pop
ret
notb
std
int3
push
sti
mov
ret
xchg
call
aam
test
mov
aad
clc
adc
cmp
and
or
push
ret
adc
sti
inc
push
lret
repnz
cwtl
test
test
sarl
push
mov
cmp
les
sets
xchg
mov
in
in
mov
xchg
sbb
pop
or
cmpsl
pusha
xchg
mov
mov
and
ret
ds
in
int3
jp
pushf
pop
arpl
cld
test
sub
pop
add
or
add
inc
outsl
mov
sbb
lret
aaa
inc
aaa
pop
add
and
stos
mov
stos
push
sti
test
or
pop
mov
dec
sub
sbb
ljmp
orb
les
loopne
rorl
movsl
pop
push
mov
push
or
push
jmp
mov
or
jmp
add
pop
mov
or
jl
mov
mov
pusha
cmp
pop
add
out
cmpsb
pop
inc
push
jno
dec
sbb
movb
xor
cwtl
test
add
fsubr
inc
stos
xorb
xchg
test
das
out
jno
movsb
shrl
mov
dec
and
push
leave
fstpt
push
and
rcrl
lahf
dec
test
push
lahf
mov
sbb
imul
movsb
movsl
sub
stos
imul
mov
mov
fnstenv
daa
ret
mov
push
pop
cmpsl
dec
decl
out
push
pop
push
mov
lcall
std
pusha
push
popa
adc
and
mov
pushf
imul
nop
arpl
cmp
add
mov
push
mov
cmp
lret
pop
dec
push
gs
jge
add
movsb
leave
dec
lcall
and
insl
ret
and
xchg
dec
enter
stos
inc
dec
sub
mov
scas
jo
lret
sarb
repnz
dec
and
sub
lock
sbb
xchg
pop
pop
fnstsw
movsb
adc
push
lcall
mov
insb
mov
dec
pop
call
aas
in
jae
test
add
push
jae
pop
pop
sub
adc
popf
push
or
loopne
xor
jae
stc
sub
icebp
xchg
mov
adc
inc
ficoml
pop
mov
pop
jnp
mov
xor
bound
cwtl
mov
outsb
add
jmp
pop
or
mov
dec
rolb
inc
mov
lds
lahf
movsl
jb
pop
xlat
sub
jnp
inc
lock
mov
dec
neg
das
xlat
mov
dec
inc
fnstsw
add
test
lcall
out
ret
xchg
mov
inc
cmp
aad
cs
sti
mov
push
mov
subl
and
popa
out
stos
lea
mov
repnz
lods
mov
pop
subl
xor
adc
sub
dec
or
push
xor
sahf
sub
or
mov
or
mov
dec
and
ljmp
stos
es
add
movsl
aas
adc
orb
dec
jnp
imul
or
and
sub
or
mov
mov
icebp
xchg
push
xchg
jg
cwtl
je
mov
das
or
inc
stos
mov
sub
movsb
mov
scas
jo
rclb
stos
xchg
jo
mull
rorb
and
or
mov
rcrb
xchg
dec
and
sbb
mov
sub
rorb
daa
aad
or
mov
fs
lahf
test
js
test
outsl
addl
mov
ret
ds
jl
mov
sbb
mov
jae
pop
adc
sub
dec
and
out
mov
add
jge
test
cmpl
adc
mov
sbb
push
leave
lcall
pop
ret
jae
inc
push
push
sbbl
cmp
ss
inc
push
push
sbb
adc
xchg
daa
push
pop
shlb
mov
mov
das
ja
rolb
popf
push
subb
scas
adc
sub
adc
jnp
dec
jmp
jnp
inc
cmp
psubd
xchg
and
insl
sbb
push
pop
or
sub
push
lds
and
adc
int
adc
dec
push
js
sbb
adc
into
into
ret
pop
add
lcall
shrb
inc
daa
dec
pop
dec
pop
popf
ffree
pop
adc
js
lds
add
jns
loopne
sub
xchg
xor
mov
stos
or
sub
adcl
jecxz
dec
es
das
sbb
push
xor
inc
fcomps
and
push
cmp
stc
mov
addb
repz
psubb
pop
arpl
popf
shlb
fildll
xor
xchg
sbbb
xchg
test
lods
loope
or
mov
dec
add
add
mov
pop
outsb
aam
in
test
test
sub
or
test
pop
outsb
push
inc
movsl
pop
inc
cmp
dec
and
push
roll
lock
ret
enter
sbb
xor
add
data16
cmpsl
in
int3
or
cmp
rcll
mov
pusha
xchg
and
or
xchg
je
daa
rorl
lock
je
ret
adc
sub
mov
ja
stos
and
loopne
stc
outsl
ljmp
bound
lret
xchg
inc
lods
pusha
xchg
and
addr16
cmpsl
mov
sub
out
ss
mov
inc
loopne
mov
fwait
adc
inc
add
repnz
mov
ss
adcl
lock
ret
cli
adc
jecxz
aaa
and
sbb
shl
es
pop
sbb
pop
add
and
shll
outsb
sub
dec
jbe
mov
sub
jae
fwait
xor
sbb
xor
aam
push
stos
xchg
push
stos
pop
and
jl
rcrb
in
shlb
dec
xchg
add
add
cmpsl
loop
aam
xchg
push
inc
mov
stos
dec
sub
add
fwait
push
cmc
jo
sti
lcall
rorl
pushf
mov
insb
psubq
jno
jecxz
ljmp
adc
push
shrb
setp
add
jecxz
sub
sahf
push
das
xchg
push
sahf
int3
sti
add
mov
adc
cmp
mov
xchg
daa
in
repnz
fucomp
ret
adc
test
stos
sahf
in
jecxz
loope
xor
aad
fnstsw
pusha
lods
jns
das
pop
xor
stos
cmc
dec
jge
andl
bound
mov
dec
mov
mov
xchg
loope
cli
loopne
xchg
cld
mov
fwait
ja
inc
cli
pop
cmp
jmp
mov
mov
add
adc
inc
repnz
pop
add
and
cmp
ss
pop
ljmp
xor
xor
shrb
jo
sarb
inc
es
fsubrs
mov
jnp
pop
jmp
jo
cmp
and
das
loope
aas
js
cs
es
and
scas
cmpsl
pop
mov
pop
inc
iret
fwait
jge
dec
xchg
xor
sbb
shlb
outsl
cwtl
jbe
xor
dec
lret
jle
jle
sub
jb
inc
sbb
inc
pop
lea
add
ret
lret
push
adc
lret
add
sbb
cli
adc
push
shrb
or
and
pop
sub
cli
dec
adc
xlat
aam
mov
outsb
fs
and
dec
sarb
das
in
sub
push
xchg
push
sbb
insl
push
call
les
mov
xor
xchg
sub
cmp
lods
pop
testb
adc
adc
pusha
cmp
leave
cli
inc
int3
adc
push
xchg
movsl
sub
sub
and
or
jmp
jecxz
xor
jae
dec
and
jmp
xor
jecxz
cmp
pusha
mov
ja
leave
pop
xchg
rcll
daa
add
aas
jmp
pop
lods
rcl
and
lret
scas
and
and
and
push
mov
cs
std
test
ja
push
cltd
sub
cmpb
ss
push
pushf
mov
test
aam
ss
pop
adc
hlt
test
aam
fs
fldcw
push
or
or
popf
jnp
sub
sbb
test
into
mov
adc
push
shll
mov
inc
and
in
andb
pusha
sub
dec
stos
or
or
ror
and
jne
stos
dec
and
xchg
add
jge
nop
inc
xchg
arpl
dec
mov
or
fs
pop
imul
pop
pop
mul
sub
pop
fcmovnb
cltd
lods
adc
jl
xchg
or
mov
or
push
sti
movsl
dec
adc
jb
xor
inc
ss
stos
test
gs
push
leave
mov
test
js
mov
dec
aaa
add
sub
mov
repz
add
fs
loop
dec
leave
and
test
xorb
mov
scas
dec
sti
sbb
fwait
push
xchg
pop
mov
or
lods
fdivl
ljmp
rcr
inc
loopne
pop
shrd
sbb
jmp
and
mov
mov
inc
dec
fmuls
and
cmp
xchg
adc
popa
dec
xlat
cli
sub
add
testb
imul
xlat
push
or
test
sbbb
mov
xchg
and
push
sub
stos
repz
aas
add
es
sbb
mov
cli
sbb
xor
out
jo
and
xor
hlt
mov
push
gs
mov
xchg
sbb
movsl
mov
adc
jo
out
or
lea
add
cmp
ds
sub
sub
push
sub
rolb
xor
sbb
push
ret
sub
dec
daa
das
imul
mov
insl
mov
sub
mov
loopne
add
mov
add
mov
in
addb
sub
fmul
sarb
call
add
sbb
aad
xchg
lods
lds
push
dec
jne
cmp
loop
scas
mov
dec
mov
into
push
loopne
sbb
or
pop
lock
lss
mov
xor
push
lds
mov
mov
test
mov
or
loope
sub
insl
pop
adc
inc
adc
inc
push
dec
pop
inc
xor
test
ja
cld
xchg
lret
push
cmp
push
mov
mov
je
jne
mov
sub
push
or
or
daa
jne
and
pop
or
out
call
xor
push
inc
add
adc
adc
pop
rorb
pop
sti
xor
mov
js
xchg
int3
and
sub
jo
cmp
inc
and
sbb
pop
int
ror
mov
ret
test
inc
insl
cmpsb
lods
xlat
adc
arpl
loope
sub
sub
test
add
int3
mov
aad
arpl
jo
mov
dec
jae
ljmp
icebp
jp
pop
clc
test
mov
pop
ljmp
mov
inc
add
scas
dec
xrelease
push
push
pop
and
std
icebp
das
sbb
cmc
shlb
mov
xchg
lea
ljmp
movsl
sub
sub
dec
sub
lret
push
add
in
xor
mov
sub
cmpsl
adc
ds
stos
or
and
movsl
es
movsb
lods
and
sub
call
xor
push
add
jecxz
or
add
imulb
loopne
nop
loopne
push
add
lret
and
mov
pushw
insb
adc
int
mov
jmp
mov
xlat
ret
or
cmp
gs
inc
mov
outsl
pop
aam
cltd
jp
sub
jb
or
xchg
js
sub
mov
mov
cmc
mov
or
sti
mov
jl
pop
add
pop
rcrb
mov
sbb
mov
sub
out
push
add
fdivrl
cmp
mov
push
jae
bound
mov
sbb
lds
pop
or
inc
inc
fwait
add
cmpsl
mov
popa
pop
je
daa
repz
xor
into
push
aaa
or
xlat
sub
xor
xor
movsl
popa
mov
je
mov
jae
popf
push
xchg
imul
mov
and
fiaddl
bound
dec
sbb
lods
push
mov
add
cmp
ljmp
or
dec
mov
xor
push
clc
sub
int
mov
pop
push
jo
aas
cmp
xor
add
filds
inc
inc
int
or
push
push
push
fstpl
push
cmp
ds
cmp
xchg
testl
repz
je
out
icebp
jmp
test
out
jo
mov
jl
sbb
fwait
addr16
and
sub
inc
sti
icebp
jmp
and
mov
sub
mov
fcomp
scas
cmp
decb
cmp
dec
cmpsl
call
dec
mov
in
lods
mov
je
push
sub
dec
sub
out
sbb
ret
inc
in
nop
mov
ret
add
add
jns
lcall
cmp
cmp
mov
fwait
add
bound
add
pop
mov
jecxz
xchg
adc
xchg
mov
les
icebp
rcrl
mov
lods
das
cmp
lock
pop
lret
jbe
or
cmp
xor
sbb
mov
cmpb
jno
movsb
push
cmp
je
ss
adc
jp
or
jo
lcall
jg
iret
inc
sbb
fcmove
dec
insl
lret
lahf
xor
test
adc
push
call
jmp
mov
frstor
fs
sbb
add
push
lods
jmp
les
cmp
add
faddl
mov
add
lahf
test
inc
mov
pop
ret
push
pop
xchg
push
outsb
ror
ss
clc
dec
push
mov
and
xor
and
adc
xor
shll
pop
dec
mov
ss
and
add
and
inc
ja
jno
shrl
add
adc
test
cs
and
rorb
cmp
test
xchg
cmp
sbb
and
pop
pushf
or
xchg
cmp
sub
jo
inc
fsubrl
movsb
mov
or
and
popf
mov
pop
fcom
add
dec
and
adc
and
test
ret
inc
mov
mov
dec
sti
sub
dec
inc
repz
inc
inc
ret
das
jb
mov
ss
dec
inc
bound
in
or
jo
push
mov
dec
sarl
sub
sbb
add
hlt
mov
lret
arpl
fildll
and
sub
dec
sti
divl
mov
sub
test
cmp
push
add
addl
push
clc
push
pop
shl
xchg
sub
or
xor
fisubs
add
and
push
inc
gs
or
scas
xor
ret
add
sub
dec
loope
jo
or
jae
dec
pop
add
dec
inc
fmuls
add
mov
ss
mov
cs
adc
adc
jnp
test
add
dec
ret
lret
shlb
add
jb
dec
ret
mov
jne
loope
shlb
jmp
and
or
cmp
mov
fnsave
shlb
int
xor
pop
gs
xchg
inc
shlb
cli
xchg
mov
push
xchg
aad
inc
call
js
rorb
ss
fwait
les
je
sarb
movsb
ss
pop
add
test
push
enter
int
movsl
fiaddl
adc
pop
cmp
ja
push
pop
pop
adc
inc
inc
pop
sbb
movsb
mov
and
xchg
orl
mov
je
sbb
lods
mov
mov
sbb
sahf
dec
in
sub
dec
adc
xor
aaa
stos
add
jo
imul
test
mov
or
test
lea
leave
or
fstpl
pop
cmp
cltd
andb
adc
mov
mov
cltd
adc
popf
sub
mov
in
ret
cmp
lret
fwait
pavgw
js
rcll
jge
fs
arpl
ss
dec
mov
scas
pop
jb
xor
outsb
cmp
add
jno
leave
test
mov
inc
push
cs
fidivs
cmc
pop
sub
insl
cmp
jbe
jno
lock
jno
or
pop
sbb
dec
insb
ret
jnp
inc
sbb
cmpsl
fdiv
ljmp
push
pop
in
jbe
fnstenv
adc
fs
pop
and
mov
and
loope
insb
shrb
leave
cmpb
dec
stos
xor
pop
pop
paddq
in
aas
scas
xchg
insb
adc
sbb
sub
andb
xchg
movsl
push
addb
or
or
in
pusha
cmp
lock
or
adc
repz
mov
add
xlat
cmp
ret
add
push
stos
leave
xchg
add
mov
mov
jns
and
xchg
imul
shlb
ss
mov
aad
and
mov
sbb
xlat
pop
add
das
es
out
mov
leave
pop
outsb
call
mov
insl
pop
jae
mov
jnp
adc
addb
inc
add
and
dec
mov
xchg
or
les
je
adc
cmp
mov
subb
pop
pop
jnp
ja
lods
cli
lret
and
xlat
xchg
out
or
clc
pop
sbb
outsl
and
lock
aad
sub
mov
push
push
test
repnz
mov
dec
add
stos
push
adc
outsb
pop
arpl
or
pop
pop
movsl
aaa
dec
push
pop
sbb
sub
sbb
andl
cmp
push
jmp
jle
shll
aam
push
jo
jl
inc
push
je
daa
hlt
xchg
push
sub
mov
hlt
dec
and
pusha
loopne
cli
push
popa
cltd
fwait
mov
mov
fs
es
sub
jl
jae
mov
lret
je
out
cmpsb
pop
add
cmp
lods
mov
cmp
mov
lcall
sbb
fstpl
and
push
test
pop
push
push
fisubrs
cwtl
lea
mov
dec
sub
xchg
xchg
inc
jno
bound
mov
xor
jle
dec
xchg
lea
je
fnstenv
daa
and
push
adc
add
popa
shl
and
adc
jbe
and
push
inc
je
movl
push
stos
mov
xor
pushf
mov
test
rcll
jmp
push
mov
push
jb
data16
pop
std
loopne
mov
cs
cli
adc
push
sub
jmp
mov
ljmp
sub
arpl
loop
jb
scas
cmp
add
mov
sub
pop
mov
inc
sbb
mov
iret
add
push
loopne
and
imull
lret
xchg
bound
jl
lcall
ret
xchg
sbb
xor
pop
mov
ds
pop
add
hlt
or
cmpsl
jle
fists
xor
stos
dec
arpl
pop
jecxz
cmp
ret
aad
hlt
add
lock
sub
cmp
and
mov
pusha
xchg
push
rolb
mov
popa
outsb
js
repnz
jp
jecxz
pop
jp
test
pop
mov
xor
popf
mov
mov
push
cltd
dec
and
aad
sbbb
insb
push
and
ret
fs
dec
cltd
xchg
adc
push
les
sbb
push
rcrb
ljmp
nop
pop
inc
sbb
inc
add
xor
insl
stos
cmc
dec
cmpsl
adc
outsb
xchg
sub
mov
aaa
dec
movsl
mov
addr16
and
je
add
insl
inc
adc
roll
test
movsl
dec
ret
sub
movsl
lcall
mov
out
or
xchg
mov
stc
addr16
xor
jnp
inc
fwait
movsl
jns
sbb
xchg
mov
and
je
xor
or
stos
add
pop
popf
jp
inc
push
popf
inc
and
sub
mov
add
push
in
jb
mov
cmpsl
je
and
jp
addr16
jo
dec
push
addb
int
push
arpl
sub
dec
mov
les
dec
inc
mov
inc
rolb
lret
stos
mov
insb
and
psubusb
test
or
push
jb
das
pop
add
push
addl
xorb
or
fisttpl
icebp
fwait
bound
mov
divb
push
cltd
js
sub
in
mov
push
push
dec
sub
pop
cltd
lds
outsl
pop
push
and
or
sub
jno
jbe
cmpsl
mov
fs
mov
mov
jne
sub
mov
and
xchg
sbb
sbb
mov
vpaddsb
imull
xchg
test
in
ljmp
fs
or
into
mov
test
xchg
sbb
cmp
ret
mov
insb
addl
fs
inc
dec
mov
add
imul
stc
pop
loop
cmp
xchg
mov
xchg
pop
mov
mov
xchg
inc
pop
cmp
dec
xor
mov
lcall
mov
rolb
and
dec
xchg
out
push
and
dec
cmpsb
adc
std
enter
fistps
mov
outsl
xlat
outsb
inc
stos
add
add
rcrb
lea
jns
insl
fisttpl
mov
add
cmp
adc
or
sbb
sub
enter
push
cmp
imul
pop
sbb
mov
cmpsl
add
fwait
and
shll
cmp
punpckhwd
fs
outsl
sahf
outsb
aad
add
or
inc
or
adc
out
shl
push
sbb
jo
push
les
movsb
jle
fisubrs
ljmp
inc
mov
pop
sub
jecxz
jb
into
xor
js
dec
cmp
bound
lret
and
xchg
imul
push
cmp
sti
add
repz
das
cmp
fwait
loopne
push
adc
push
or
cmp
mov
inc
stos
mov
aaa
jne
xor
testb
cmc
adc
xor
mov
jnp
std
mov
flds
add
stc
mov
sbb
lahf
jmp
cli
cli
and
loop
out
mov
mov
and
xor
mov
mov
jp
ljmp
cmp
in
loopne
mov
loop
jp
cmp
in
in
adc
out
cmc
or
and
ljmp
lcall
lods
fnstsw
ret
dec
xlat
aam
dec
mov
sub
jbe
lds
lods
lock
add
push
sub
movsl
xchg
cwtl
adc
scas
xor
pop
push
fimuls
sub
outsl
dec
outsl
ja
daa
inc
sbb
jmp
jmp
daa
fneni(8087
and
and
lcall
push
mov
insl
pop
bound
xlat
xor
push
ds
or
sbb
xchg
push
inc
push
fimull
push
out
iret
xor
in
and
mov
sbb
add
test
popf
dec
dec
xchg
inc
js
jle
testl
jle
adc
xchg
lods
push
mov
jb
lret
scas
jbe
test
push
addr16
push
add
inc
or
nop
adc
inc
add
cmc
sub
jle
in
hlt
nop
shll
push
push
and
lret
dec
cmp
xchg
mov
push
mov
add
dec
sub
add
in
imul
jno
addb
push
test
outsb
insl
pop
aam
sbb
add
add
nop
push
into
loope
repnz
enter
sub
mov
mov
pop
mov
idiv
jae
push
pop
push
cmc
jbe
xor
push
addb
cmp
push
dec
fsubrl
sbb
mov
rolb
pop
shr
andl
mov
or
mov
scas
cmp
movsl
mov
mov
addr16
scas
adc
insl
repnz
xor
xchg
lret
sbbb
test
mov
cmp
and
jns
jo
stos
test
jg
mov
in
xor
cmpsl
push
data16
jnp
and
or
xchg
and
xchg
sub
cmc
mov
ret
rcl
adc
call
push
cli
sub
push
pop
adc
mov
and
lret
jne
mov
jae
jbe
pusha
cmp
leave
ss
mov
out
add
pop
test
adc
jb
dec
fs
repz
sbb
rcll
call
cmpsl
lret
fisubrs
nop
sahf
popa
mov
test
dec
dec
in
push
mov
iret
pop
dec
and
aad
push
mov
sbb
cmp
lea
jp
ja
pop
adc
sub
lea
cmp
aam
in
jbe
jne
lods
mov
or
sub
xlat
or
aas
je
pop
lret
pop
sbb
and
or
push
pop
enter
mov
mov
aas
xchg
cmpsl
aaa
call
cld
sub
jnp
xor
sub
test
inc
mov
call
sbb
sbb
in
aad
dec
xchg
pop
fdiv
ret
in
sarb
pop
or
xchg
call
mov
or
lods
orl
jb
aam
sbb
dec
orl
loope
lea
out
mov
mov
and
icebp
xchg
hlt
sbb
ljmp
ret
dec
lret
and
xorl
clc
popa
stc
xchg
inc
jo
add
jnp
xlat
cmp
iret
and
xchg
cmp
fists
mov
xor
adc
jbe
xlat
or
jl
lods
mov
bound
mov
xor
sbbb
sbb
popf
mov
int3
or
jno
xchg
fsubrl
lock
test
push
fildll
add
sub
cmc
iret
dec
stos
push
adc
mov
js
rorb
lret
adc
lods
dec
mov
stos
and
daa
jp
dec
sub
jl
jmp
fidivl
loop
xchg
and
lret
cmpsl
push
cld
sbb
push
mov
icebp
lcall
pop
movsb
add
cmp
sub
lds
xchg
xor
pop
pop
insb
hlt
jb
inc
iret
das
lea
xchg
jl
sbb
push
mov
cmp
pop
pusha
xchg
mov
push
pop
in
rcl
test
iret
ret
push
test
dec
es
pop
int3
out
add
mov
sbb
outsb
cmpsb
push
adc
das
sbb
jns
scas
mov
xchg
je
sub
cmp
dec
xor
test
fcoml
aad
cld
repz
xor
or
jno
loope
dec
pop
pop
test
test
inc
gs
cld
jl
out
mov
loopne
xchg
mov
push
sbb
jecxz
jae
jae
xor
int3
add
push
sbb
outsl
mov
xor
addl
divb
push
mov
arpl
xchg
cli
and
bound
sub
pop
shr
pop
mov
jnp
push
nop
add
mov
aad
ja
xor
lds
test
test
gs
cltd
jecxz
fsubrs
or
fisubl
fstps
inc
cmp
mov
push
shr
ss
fwait
imul
movsl
je
fdivrl
movl
mov
sub
pop
rcr
and
cmpsb
mov
push
xchg
sub
xor
mov
cmovno
mov
xchg
pop
inc
mov
addr16
sub
outsb
dec
inc
imul
shrl
sub
clc
push
iret
push
xor
lods
dec
push
push
jne,pn
sbb
add
mov
sbb
push
mov
addr16
ret
repnz
sub
add
mov
push
pusha
rcr
int3
test
incl
inc
imul
loopne
pop
or
popa
adc
cmp
mov
add
add
std
inc
in
xorb
push
and
cmp
jge
mov
dec
fisubrl
sub
cmpsb
icebp
inc
dec
add
sbb
adc
jno
outsb
fstl
push
and
test
addr16
mov
sbb
out
adc
aas
mov
cli
add
clc
jb
mov
shl
jge
sbb
xor
xor
and
pusha
popf
pop
cwtl
dec
push
es
dec
arpl
adc
sti
add
or
jno
pop
roll
insl
leave
push
inc
jne
dec
shlb
stc
scas
pop
xchg
lea
dec
call
jno
das
jb
and
add
push
mov
add
push
ror
xor
sbb
and
into
orl
inc
ret
adc
flds
je
je
mov
add
adc
cli
xchg
xchg
xchg
mov
pop
lcall
fimuls
inc
mov
push
xchg
inc
fldcw
sub
cmp
test
push
push
mov
or
cmp
or
mov
icebp
ret
jne
aam
ret
rclb
jge
addb
fidivrs
lahf
pop
add
mov
ja
dec
jne
in
pop
outsb
push
orl
js
xchg
add
mov
sbb
and
movsl
nop
gs
inc
loope
and
or
xchg
lds
cmp
xor
outsb
loop
inc
cmp
adc
inc
stos
pop
and
xor
add
dec
sarb
lock
loope
cmp
cld
enter
jmp
xor
dec
aam
test
cld
jns
dec
popf
fmulp
lock
fmuls
mov
jl
adc
fiaddl
lods
pop
stc
test
add
pusha
data16
std
dec
cmpsl
mov
mov
cmpl
dec
cld
into
add
sbb
ffree
jae
xchg
mov
lds
mov
xchg
fimull
adc
cmp
lods
or
neg
xchg
dec
add
sub
cld
lods
les
dec
pop
jo
adcl
lcall
imul
test
xchg
stos
and
nop
in
add
or
jo
and
push
jge
xchg
sbb
or
adc
or
andl
ret
clc
pop
ds
in
dec
cmp
je
mov
jb
movsb
sub
in
inc
scas
stos
sub
lahf
imul
push
add
jnp
daa
fs
dec
inc
mov
mov
jmp
incl
int3
mov
or
mov
xor
jno
cwtl
dec
dec
dec
test
sbb
in
fstl
sbb
add
or
outsb
sbb
int3
rol
test
addr16
jo
outsl
out
test
cmp
lret
xor
xchg
lahf
shr
xor
shlb
or
fs
or
sub
add
xchg
or
notl
sub
push
hlt
sti
cmpl
add
xlat
stos
xor
push
cmp
add
xchg
sub
jae
xlat
out
dec
adc
and
out
mov
test
pop
lock
mov
pop
sub
lock
es
and
ja
mov
adc
lods
adc
lock
dec
sbb
insb
cmpsb
adc
lcall
mov
mov
mov
lahf
lds
mov
dec
adc
in
out
das
int3
js
sub
nop
in
flds
or
loope
outsb
insl
imul
loope
cmp
fidivl
sbb
mov
in
sbb
xlat
push
xchg
mov
dec
outsb
loop
jb
adc
stos
sub
rcr
cmpsl
jmp
xchg
ret
jl
movb
dec
cmp
dec
pusha
add
jno
mov
adc
out
popl
std
add
ljmp
add
and
ljmp
sti
das
or
cltd
push
xchg
nop
push
fsubl
push
add
rcrb
or
add
pop
xchg
or
rorb
lcall
leave
inc
xlat
sub
push
or
jnp
test
je
adc
mov
hlt
pop
adc
scas
call
add
sbb
sub
push
aas
hlt
fsubl
add
cmpb
or
lock
cmp
jp
xlat
aaa
or
call
jne
jno
cmpsb
inc
cmp
pop
sbb
dec
insl
mov
push
mov
mov
push
lahf
mov
addr16
pavgb
xor
popf
adc
and
shlb
sub
push
sub
dec
clc
add
sbb
out
insb
jp
fwait
sahf
mov
in
cmp
push
and
xchg
dec
outsl
popa
pop
imul
into
adcb
mov
vpaddw
cmpsl
loop
sub
or
ret
icebp
rorl
lods
or
sub
rcl
pop
push
jne
iret
popa
jp
and
leave
js
pop
in
lret
jmp
mul
lock
push
cld
test
cmpb
popf
roll
sbb
jge
mov
sub
out
sti
ja
add
cmp
xchg
imulb
jle
jecxz
pop
or
cmovae
testb
pop
xor
pop
or
stc
jo
lret
imul
xor
push
sub
insb
nop
xlat
cmp
fwait
xchg
es
and
add
push
movsb
push
pusha
xchg
cltd
loopne
mov
iret
push
loope
fnstsw
cli
cwtl
arpl
pop
nop
mov
jne
insl
sub
pop
xchg
jae
mov
data16
clc
pop
and
test
pusha
ficoml
xchg
mov
push
and
subb
ds
ljmp
mov
stc
push
test
dec
fidivl
imul
xor
popf
lock
xor
insb
aaa
push
or
fs
cmpsb
dec
insl
insl
lret
sub
cmp
and
adc
loope
and
push
mov
movsb
testl
sbb
dec
mov
sub
iret
xor
push
mov
mov
jge
dec
stos
adc
leave
lock
loopne
xor
and
ljmp
imul
jg
cmp
xor
rcr
dec
adc
lcall
int
mov
es
xor
mov
push
xor
sbb
out
lods
icebp
inc
je
fs
scas
mov
add
and
fmull
stos
sub
xor
adc
mov
adc
insl
add
pusha
cmp
lods
rorb
shl
push
mov
sub
xor
cmp
stos
or
mov
mov
fsubrs
mov
push
bound
jecxz
addr16
lret
imul
add
ljmp
push
mov
push
mov
adc
lds
call
clc
or
xor
cmp
sub
test
or
jno
lds
jle
mov
fwait
outsb
mov
cmpsl
jp
in
rolb
xor
lds
lcall
cmp
in
push
push
pop
fnstcw
cmp
mov
cmp
rcrl
repnz
cs
movsb
xor
cwtl
sub
inc
leave
shlb
test
outsl
js
add
imul
es
or
add
mov
mov
mov
popf
testl
xor
test
pop
sti
cli
mov
and
sarl
pop
or
test
popa
jg
inc
cmpsl
fs
jno
bound
cmp
fiaddl
jno
cmp
test
mov
cmp
lret
dec
dec
cmp
and
xchg
xor
and
pop
scas
in
xor
xchg
subl
mov
cltd
pop
push
xor
add
cmp
js
inc
sub
sti
sbb
cwtl
mov
cs
loop
es
ja
aam
sbb
leave
xor
pop
out
push
xchg
je
push
xchg
add
jecxz
xor
cmpsb
call
push
loope
xchg
cmp
cmpsl
fwait
push
fwait
sbb
jecxz
sbb
add
aas
lahf
add
scas
add
les
addb
test
push
cmp
add
out
ret
ficompl
xchg
push
testl
push
adc
int
xchg
xchg
jo
inc
js
int3
out
loopne
jl
jmp
push
inc
or
xor
pop
push
mov
mov
mov
imul
stos
movsb
flds
stos
pop
fwait
mov
add
cmp
push
dec
insl
ret
hlt
fldcw
push
pop
jp
ss
adc
jp
pop
sbb
int
cmpsl
and
imul
mov
jmp
jl
mov
pop
dec
and
out
push
xor
cmp
cli
add
sbb
std
fnclex
addb
xor
cwtl
or
lock
and
imul
sbb
sbb
push
fcoml
jnp
inc
sbb
mov
test
cmp
or
and
imul
pop
xchg
mov
xlat
xor
fisubrl
xor
xor
mov
lret
popf
pop
dec
mov
jns
add
sbb
test
add
call
cld
add
adc
test
gs
ljmp
lret
xor
cmp
xchg
sub
sbb
nop
jo
xchg
fs
sbb
jbe
jmp
loop
ds
dec
inc
test
stos
dec
ja
cs
jae
sub
lods
ret
repnz
and
fs
stos
dec
pop
and
fs
sbb
xchg
js
daa
push
xchg
push
addr16
hlt
fmulp
mov
jo
jg
pushf
xor
ljmp
loop
cmpl
or
int
cld
mov
out
adc
jne
pop
int
arpl
sub
jno
push
jne
jg
dec
lods
cmp
and
mov
inc
test
hlt
test
sbb
in
pop
push
push
out
js
add
ret
mov
jno
lods
pop
dec
and
xchg
aaa
hlt
pop
imul
aas
adc
lock
and
or
mov
dec
mov
insl
lods
inc
and
xchg
fwait
fwait
or
sub
jmp
scas
push
ljmp
dec
pushf
enter
and
push
sbb
loope
rolb
imul
pop
es
aaa
sub
jecxz
clc
and
xchg
cmc
mov
in
loope
or
push
add
popa
ja
popa
lods
and
bound
adc
dec
cld
fsubs
dec
in
fcmovb
test
jb
xchg
out
call
dec
into
fstps
pop
dec
jp
clc
ljmp
shlb
cmp
cmpsl
sbb
jmp
ret
pop
sbb
xor
pop
bound
mov
popa
mov
jp
loopne
mov
shlb
pop
sahf
jns
and
push
lods
imul
push
js
in
push
add
cld
push
aam
insb
ret
fsubp
ret
sub
cmpsb
sub
sbb
cmp
rcrl
movsl
xor
xor
rcll
dec
or
sbb
gs
dec
loop
sbb
sbb
jge
xlat
rorb
cs
sub
jg
mov
js
pushf
stos
or
inc
pop
out
jecxz
loop
inc
icebp
push
sbb
sarb
jb
jecxz
sub
add
cmp
sub
push
insl
insb
popa
popa
adc
mov
xchg
dec
loope
push
adc
mov
lret
mov
add
and
jp
adc
push
arpl
adc
bound
scas
gs
lods
out
xchg
ret
push
fwait
push
or
adcl
pushf
mov
add
mov
add
test
dec
cmc
push
rcr
hlt
dec
mov
dec
loope
mov
push
and
fistpl
shr
popa
mov
pop
out
mov
push
imul
test
sub
xor
xor
mov
outsl
repz
cmp
lret
fs
lods
lea
mov
mov
adc
movsl
lcall
cmp
inc
pop
sub
adc
divl
outsb
mov
cmp
add
bnd
pop
ljmp
jo
aas
inc
lret
enter
loopne
bound
pop
pop
loope
ja
lock
jns
mov
jnp
popa
out
jnp
and
or
push
roll
sub
sbb
addr16
sbb
sub
pop
sti
lock
jmp
mov
call
sbb
ds
btl
mov
fdivl
or
scas
ret
mov
loope
cmp
daa
das
mov
dec
stos
jbe
xchg
shrb
cmp
inc
dec
sub
test
test
dec
and
imul
shrl
movsb
mov
inc
add
stos
das
ss
and
mov
dec
pop
or
sbb
pop
dec
mov
sub
mov
xchg
cmp
sub
cmp
cmp
pop
mov
inc
push
inc
and
jo
cli
shll
mov
or
and
rclb
ds
add
roll
jl
js
jno
pop
lahf
add
push
std
out
sub
cs
stos
inc
fs
mov
cmp
sub
fiaddl
test
into
test
aam
xor
add
jb
daa
jl
jp
mul
out
or
sub
adc
and
mov
addb
pushf
mov
inc
or
out
dec
fptan
ds
lea
and
xchg
add
and
mov
dec
icebp
or
xor
insl
popf
shr
or
adc
jmp
mov
loope
aad
nop
rcl
mov
push
and
adc
xchg
aam
jae
jmp
adc
mov
sub
mov
xlat
call
xchg
push
add
or
fwait
push
lret
ja
test
fld
daa
fs
sub
adc
sbb
xchg
push
sub
push
xchg
inc
ret
das
add
adc
bound
jg
std
sub
push
in
adc
shrb
pop
addb
mov
testl
jge
mov
dec
cmpsb
sub
and
das
and
aam
test
loope
xor
insb
psubw
mov
pop
inc
cmpsl
enter
adc
push
push
out
jp
fcoml
cmp
jne
test
daa
xor
pop
cmpsl
into
or
dec
in
popf
dec
jl
shlb
jecxz
and
popa
xor
pop
cmpl
loope
aas
test
cmp
popf
and
push
and
sbb
dec
imul
ljmp
fdivs
mov
stos
fsubl
add
inc
ret
jecxz
pop
cmp
jg
dec
ljmp
ja
test
xchg
xchg
mov
lret
test
rcr
and
cmp
push
add
add
test
adc
sub
ja
fs
or
jbe
jg
jb
lahf
popa
or
pop
bound
sbb
es
adc
lret
jmp
cmpb
or
adc
sbb
add
adc
inc
pop
add
sub
ja
inc
pop
and
push
xchg
cmp
xor
imul
in
lods
sbb
mov
leave
fsubl
and
data16
sub
insl
adc
frstor
mov
inc
clc
and
rolb
popf
or
xchg
movsb
add
add
mov
jmp
lret
mov
xchg
scas
sub
out
fldcw
test
sub
push
pop
idivb
add
pop
std
repnz
icebp
or
aas
out
orb
hlt
add
cmpsb
shlb
stos
jne
or
and
add
xchg
adc
or
adc
cmp
inc
dec
je
pop
or
xlat
and
lcall
add
vmwrite
and
inc
pop
and
decl
cmpl
mov
push
pop
std
sub
add
adc
sbb
scas
sub
fadd
dec
shlb
es
push
add
pop
rcrb
dec
lahf
add
test
arpl
pop
cmp
and
movsl
or
cmp
mov
enter
fxtract
xchg
test
xchg
inc
lds
cmp
in
loopne
arpl
mov
sub
pop
lahf
fcoml
mov
mov
sub
shll
test
or
sahf
xchg
mov
dec
sub
jb
mov
adc
xor
pushf
mov
ficoms
insb
aad
mov
sbb
mov
fdivs
int3
in
pop
push
lods
adc
movsl
cli
lods
inc
in
jmp
enter
sahf
pop
and
mov
fiadds
inc
data16
mov
les
sbb
add
insb
loopne
and
cwtl
mov
add
inc
jge
sub
lock
push
sbb
andl
fldcw
repz
xor
pop
dec
xor
inc
mov
sbb
inc
movsb
and
shl
lea
je
pop
mov
mov
push
dec
push
pop
push
insl
push
adc
dec
shlb
or
popa
push
fcomp
adc
jns
cmc
mov
jae
scas
inc
ja
dec
inc
pop
sbb
push
xchg
mov
push
xchg
pop
cmp
mov
inc
jno
movsb
es
adc
sub
xchg
out
xchg
or
cmpsl
sbb
mov
ret
sbb
sub
loopne
shrl
xchg
xor
cmp
pop
test
sbb
aaa
mov
or
mov
pop
mov
jns
hlt
das
jne
and
mov
push
cmp
mov
add
test
dec
dec
or
mov
dec
cmp
sbb
mov
adc
push
cli
icebp
dec
pop
mov
and
push
imull
call
adc
jbe
repz
xor
jb
or
cltd
dec
jge
inc
inc
inc
jge
mov
out
rcrb
ret
or
clc
mov
xchg
xchg
hlt
jo
add
aaa
sti
xchg
inc
or
roll
add
pop
sub
push
cmp
fimull
aas
dec
xchg
add
jb
ss
jo
add
and
sub
mov
bound
xorb
mov
or
lods
mov
in
mov
test
subl
inc
sub
and
adc
aad
fmuls
adc
lret
sub
mov
sbb
sub
xchg
ds
cwtl
or
cmp
sub
adcl
and
popl
cmpsb
add
movntq
mov
push
iret
xchg
xchg
loope
test
push
jns
stos
mov
fldenv
iret
sub
push
jnp
test
dec
sub
mov
in
add
je
jae
arpl
pop
sbb
pop
ret
adc
adc
mov
pop
and
ret
add
popf
sbb
add
adc
and
add
cmp
inc
cltd
mov
fbstp
mov
sbb
xorl
cmc
or
xor
ljmp
xchg
out
xchg
mov
sub
cli
cmp
or
cmpsl
inc
divl
mov
mov
or
push
add
sbb
and
pop
mov
sbb
cmpsl
add
xchg
mov
cld
or
incb
inc
adc
popa
int
or
popf
aam
push
or
imul
sbb
pop
mov
inc
je
icebp
loopne
sbb
cs
sub
add
mov
add
and
cmp
cld
inc
push
shlb
push
imul
add
psubd
push
dec
mov
inc
jge
js
adc
leave
sub
movsl
pop
xor
dec
mov
adc
test
pop
loop
xor
icebp
and
pusha
lret
lods
inc
dec
add
xchg
ds
loop
push
push
into
mov
ret
dec
aam
fiaddl
inc
int3
add
mov
iret
data16
pop
inc
stos
dec
popa
add
pusha
adcb
or
insb
xchg
cmp
and
xchg
sbb
in
loopne
enter
mov
and
sbb
sbb
mov
and
mov
or
mov
mov
ret
and
insl
test
frstor
rolb
dec
or
cmp
loopne
add
icebp
fiaddl
test
incb
push
adc
jp
cmpsl
or
popf
loopne
or
scas
scas
dec
ja
cmp
ja
stos
xchg
ds
movsb
add
test
fwait
add
popf
xor
pop
movsb
popl
shlb
cmp
gs
sub
push
in
in
mov
push
daa
jle
add
out
inc
movsl
cmp
icebp
xchg
and
and
xchg
js
push
cmpsl
pusha
xor
push
dec
inc
and
mov
rcll
pusha
nop
mov
ss
or
pop
xchg
mov
push
or
movsb
sti
xor
mov
aas
pop
nop
mov
fsts
inc
rcrl
jno
lods
or
adc
lret
sbb
cmp
jb
sbb
push
dec
sbb
sbb
dec
int
and
shld
out
fcompl
inc
js
aaa
add
cli
lret
add
sub
sbb
mov
sub
call
sti
or
dec
pop
imul
or
cwtl
js
outsl
pusha
cmp
inc
rcl
add
add
test
cmpsl
mov
pop
stos
sub
adc
xchg
repz
sbb
or
sarl
xlat
and
push
ret
jl
cmp
push
adc
lcall
add
xor
imul
cmp
inc
add
adc
push
cmpsl
pop
lahf
lock
daa
mov
out
pusha
int
mov
test
and
sub
push
xchg
and
add
add
js
pop
or
gs
sar
mov
lods
iret
sbbb
das
pusha
or
xor
sbb
push
es
js
aas
sub
dec
mov
rorl
dec
sub
movsb
cwtl
pop
cwtl
pusha
mov
cmpsb
pusha
mov
mulb
mov
cmp
or
add
mov
inc
mov
mov
or
adc
mov
sbb
sbb
dec
mov
push
add
fwait
and
scas
popa
mov
sbb
aad
fs
sti
ret
ret
mov
arpl
and
jae
rcr
inc
or
pop
adc
xchg
adc
es
mov
sbbb
pop
xorb
mov
push
bound
adc
pminsw
and
jae
rcrb
rorl
imul
in
cmpsb
fisubl
cmp
mov
xor
jns
or
and
or
push
aas
ss
and
add
pop
iret
jp
xchg
push
insb
xlat
stc
push
mov
mov
fildl
xchg
loopne
push
dec
mov
xor
rcl
sbb
sbb
icebp
movsl
aaa
data16
sub
cmpsl
pusha
gs
jns
and
inc
add
ret
and
dec
add
sbb
movl
push
and
pop
mov
mov
repnz
inc
imul
into
jne
xor
sti
es
ret
push
stc
mov
add
movsb
and
inc
fwait
mov
lret
nop
mov
add
or
inc
or
dec
mov
mov
pop
mov
test
loope
arpl
js
js
dec
jg
loope
push
sbb
push
cmp
xchg
ret
loope
mov
or
inc
add
fwait
rcrb
stc
insl
sbb
cli
imul
insb
loope
adc
ficompl
add
and
inc
adc
jge
xor
or
cmc
mov
dec
cli
xchg
xchg
les
fcmovbe
call
cli
stc
xchg
daa
push
lds
push
movsb
xor
xlat
mov
adc
mov
inc
sbb
icebp
push
cmpb
jno
and
pop
push
mov
add
inc
sbb
jbe
mov
in
sti
inc
imul
mov
sub
pop
sub
fldenv
leave
pop
pop
adc
leave
push
stc
add
sbbb
mov
scas
push
jg
nop
add
adc
push
rcrl
sbb
xchg
sbb
int3
fistpl
jnp
insb
call
jo
ret
mov
aad
cmp
stc
lea
jno
adc
and
xor
lea
xlat
out
lods
fsubrp
mov
sbb
sub
movsl
hlt
and
push
int
fistl
je
imul
int3
push
scas
jno
or
lret
mov
loope
mov
mov
push
cmp
ljmp
lea
adc
add
pop
scas
dec
add
pop
dec
pop
add
adc
js
rcl
ja
mov
sbb
into
cs
sub
mov
pop
add
mov
jp
ljmp
sub
test
add
clc
fsubrs
outsb
movsb
mov
sub
loopne
bound
xor
push
incb
fildll
sbbb
inc
mov
sub
faddl
int3
sub
imul
push
mov
mov
mov
push
adcl
dec
jne
add
dec
xorb
loope
cwtl
jne
and
ficoms
push
cmpsl
into
add
and
mov
adc
in
js,pt
xor
data16
add
push
addr16
adc
out
sbb
and
jle
mov
lret
dec
fcoms
or
loopne
fwait
fwait
mov
lods
sbb
cld
sbb
fstpt
aad
lret
sub
mov
add
xor
jb
sub
pop
ja,pt
ja
mov
mov
cmp
mul
outsb
push
insl
xor
test
neg
cli
cmc
xchg
test
dec
pusha
loopne
adcb
dec
subl
icebp
sub
ds
stos
push
aam
rol
arpl
lods
xchg
jge
dec
mov
lods
lea
jo
push
andl
addr16
mov
dec
xchg
jne
out
cltd
scas
xchg
dec
sub
pop
adc
test
clc
push
mov
in
popf
jno
mov
xor
rclb
xor
xchg
lcall
mov
sti
js
imul
sbb
push
and
xchg
pop
mov
jmp
in
lcall
fwait
dec
mov
into
mov
fisttpl
sub
xchg
adc
sbb
jge
adc
shrl
repnz
ss
dec
je
mov
aaa
cmp
js
out
dec
or
fwait
pop
lcall
sub
popf
ret
adcl
and
or
push
shlb
inc
adc
pop
movsb
xor
fnsave
mov
adc
inc
inc
imul
push
or
mov
xlat
jae,pn
in
mov
add
add
stos
mov
cmp
xor
dec
cmp
jne
push
jb
mov
mov
or
inc
pop
out
add
dec
xchg
xor
popf
mov
cmp
xor
or
jne
jge
fsubrs
sub
cmp
call
fsubp
mov
and
inc
stc
sarb
outsl
stos
and
sbb
mov
test
or
dec
pop
or
push
adc
sbb
cmp
push
pop
gs
jge
in
cmp
lea
sbbb
cld
mov
xor
sbb
jne
jg
icebp
int
loop
add
rolb
push
push
aaa
pushf
push
rcrb
push
sbb
rorb
movsl
add
jne
mov
pop
jecxz
sub
sub
arpl
cmpsb
mov
sbb
into
mov
cmp
push
imul
aaa
dec
and
dec
xor
push
sbb
jmp
daa
and
repz
int3
fiaddl
push
sub
imul
pop
xor
loopne
loope
hlt
mov
jbe
add
rclb
fstl
pop
sahf
adc
add
mov
mov
lock
push
jp
and
or
sbb
add
outsl
je
scas
gs
xchg
dec
dec
xchg
adc
pop
mov
outsb
ds
jno
sub
fimuls
push
or
adc
repnz
and
dec
push
insb
adc
sbb
lods
js
or
and
sub
sub
pop
jnp
mov
cwtl
fsubl
inc
ds
inc
mov
cwtl
mov
sub
or
loop
push
sub
sub
inc
pop
inc
sub
cld
add
lret
add
insb
sub
fdivr
pop
jp
scas
pop
in
xor
add
mov
or
jne
fdivr
cmp
js
sub
add
jl
rcrl
dec
push
clc
xchg
shrb
fwait
mov
scas
lahf
and
cwtl
cmp
xor
xchg
lret
mov
jne
cmpsb
aaa
xor
cwtl
jns
xor
test
push
dec
lcall
adc
fistpl
dec
arpl
mov
xchg
scas
and
dec
pop
rcr
fmul
inc
in
shll
in
cvtps2pi
lock
push
push
sub
dec
push
pop
sbb
ror
stos
in
push
add
or
adc
loopne
scas
xlat
mov
push
ret
add
sbb
loopne
aam
les
int3
sbb
addb
int
adc
pop
cmp
cwtl
loopne
pop
addr16
out
fadds
push
jmp
push
and
arpl
cmpsb
jno
add
lds
aam
sub
mov
mov
arpl
sbb
add
ret
cli
dec
leave
pop
ss
xchg
cmc
or
jns
movsl
sub
jmp
xchg
dec
mov
pusha
cmpsb
and
les
jo
adc
ficomps
xor
xor
fisubl
adc
xor
call
xor
cmp
jne
addl
pop
sbb
arpl
es
clc
mov
sub
push
lret
add
mov
xor
out
rcll
addl
bound
inc
cmpsl
jg
xor
arpl
cmp
nop
and
xor
popa
loop
jns
add
ljmp
fsubl
cmpsb
mov
push
jnp
lcall
outsb
adc
jae
mov
xlat
mov
or
scas
popa
hlt
pop
pop
xchg
fnsave
and
stos
and
sbb
jnp
lock
inc
push
lock
add
lds
shrb
rol
xchg
jns
jmp
dec
aam
or
ljmp
pop
rorb
or
push
outsb
dec
sbb
pop
rorl
jg
xlat
sub
insl
arpl
into
xchg
iret
add
pop
sti
iret
jg
mov
fisubs
add
inc
cmp
sbb
push
in
loopne
cmc
ss
lock
ja
or
xchg
mov
dec
loopne
xchg
pop
lret
movsl
xor
mov
mov
push
js
add
cmp
jne
orb
fldcw
fs
aaa
js
jp
outsl
imul
mov
dec
subb
jnp
scas
ret
adc
add
rcl
rol
nop
sub
scas
aad
xor
and
xchg
ret
or
pop
cmp
jecxz
jge
jnp
stos
popf
sbb
das
insb
shlb
push
int
sub
push
mov
adc
adc
lcall
lret
push
lea
mov
mov
jne
adc
das
mov
push
push
adc
fs
push
push
push
jmp
mov
push
and
pop
push
jge
or
imul
outsb
iret
loope
sub
dec
test
or
or
xchg
ret
cmpl
jb
lds
mov
nop
and
mov
inc
lret
enter
lds
jle
mov
cltd
mov
xor
jno
or
jecxz
or
push
jl
mov
push
dec
sub
sbb
jo
ret
or
and
cmp
call
dec
fs
cld
jo
aas
inc
pop
lret
lret
std
scas
cli
in
mov
or
loopne
and
add
inc
xchg
test
add
sar
lret
lea
jecxz
jmp
cltd
mov
xchg
mov
mov
adc
pop
cmpsl
and
xchg
aam
out
lea
je
and
nop
stos
xchg
scas
jno
std
mov
jo
fldt
pop
push
mov
mov
orb
jecxz
pop
sub
sbbb
cmp
push
and
hlt
cmp
xor
dec
call
add
dec
clc
js
shll
je
pop
or
pop
stos
push
cs
aad
popa
mov
push
and
jno
and
shrl
jmp
inc
mov
xchg
mov
add
cmp
inc
daa
orb
shll
test
out
mov
repz
loope
adc
inc
inc
or
mov
pushw
mov
lret
mov
shlb
lret
fldl
loop
xchg
cs
lods
je
dec
add
or
or
inc
icebp
popf
test
shll
popf
clc
mov
pop
outsb
xchg
push
cmp
call
int3
mov
adc
loop
push
int
imul
sbb
ret
shl
ret
bound
dec
cmp
jae
popf
sbb
es
pop
sbb
in
sub
out
ret
mov
cs
mov
cwtl
outsb
push
lds
push
ret
add
push
mov
or
pop
js
mov
xlat
xor
or
fcmovu
stos
and
outsb
loope
jne,pt
rorb
shlb
adc
xor
frstor
mov
sbb
xchg
push
ja
adc
loopne
shlb
sub
pop
aas
mov
mov
arpl
scas
cmp
jno
adc
cmp
dec
inc
or
inc
push
cmp
add
psrlq
mov
add
gs
xor
fistpll
loope
sub
push
sub
std
mov
mov
and
test
inc
sbb
add
inc
jg
stos
ret
scas
push
hlt
mov
icebp
mov
mov
xor
test
dec
arpl
push
mov
xor
scas
add
jecxz
pop
ds
int3
xchg
cmp
popf
jno
cs
jecxz
inc
ret
xlat
or
or
and
jmp
mov
pusha
and
aad
push
or
roll
lods
and
sbb
mov
addr16
pop
cmp
mov
shrl
pusha
cmc
or
mov
movsb
cltd
pusha
cmp
aas
ret
push
das
shlb
sbb
adc
pop
jmp
sarl
xchg
and
or
pop
mov
cltd
add
xchg
push
xor
xchg
pop
jb
jae
fisttpl
loop
xor
inc
das
mov
xchg
or
dec
add
push
pop
or
and
sbb
cwtl
mov
adc
movsb
and
fwait
out
jbe
aad
add
mov
clc
clc
pop
add
xchg
and
push
push
jb
fiadds
adc
xor
adcb
movsl
lahf
add
fidivs
sbb
and
leave
and
movsb
addb
lret
lock
roll
push
ret
xor
push
pop
cmp
mov
daa
inc
mov
cltd
push
dec
xchg
jno
test
xor
cmp
mov
ds
xor
cmpb
leave
lret
in
frstor
or
cmp
icebp
or
popf
mov
sbb
insl
arpl
shrl
test
add
inc
sub
fs
pop
fldl
adc
orl
dec
enter
dec
adc
and
inc
orb
bound
dec
push
mov
int
aam
dec
xchg
sub
mov
inc
into
pop
cli
xchg
insl
sub
dec
push
dec
scas
pop
push
lahf
adc
movsb
out
jmp
pop
rcll
xlat
pop
pop
jnp
dec
stos
test
push
adc
in
jbe
jae
test
inc
add
mov
inc
jae
cs
xchg
scas
out
xor
xorl
je
add
adc
mov
loopne
fisubrs
call
sahf
rcrb
adc
xchg
cs
xchg
jo
sahf
sbb
stc
pop
out
pop
leave
push
lret
loopne
jmp
std
inc
add
cmp
and
xchg
mov
sbb
jecxz
fildl
xchg
and
push
pop
daa
add
lods
pop
add
icebp
sahf
imul
sahf
iret
sbb
or
int
pop
xchg
scas
xor
cmpsl
xlat
pop
ror
cmp
push
sahf
movsb
add
cmpb
jecxz
sub
pop
push
sarb
and
add
sarb
adc
loop
stos
insw
add
push
lea
mov
imul
or
scas
xchg
xor
cmpsl
fst
pusha
ret
outsl
mov
xchg
add
nop
bound
sbb
cmpsb
clc
ljmp
sbb
int3
std
pop
mov
pop
mov
insl
lret
add
das
dec
pop
incb
and
aad
dec
ficomps
xor
hlt
aad
xchg
mov
ss
push
add
jge
or
pop
outsl
push
or
test
add
xor
loop
cmp
fisubrl
in
ret
push
xchg
sti
push
lret
hlt
pop
or
ret
inc
mov
fwait
roll
test
movsb
repnz
sbb
dec
push
fisttpll
lock
mov
xor
jmp
addb
loop
cmp
mov
mov
cmp
ss
sbb
pop
sbb
xchg
jno
mov
cmp
loop
add
popa
scas
or
and
mov
repz
xchg
jo
add
adc
xchg
push
mov
ljmp
jo
mov
mov
and
sbb
nop
xchg
pop
out
test
movsb
and
mov
nop
mov
loopne
push
push
or
pushf
loopne
out
adc
mov
and
or
jge
dec
loope
fildll
sbb
push
daa
mov
leave
push
insl
sbb
push
pop
xchg
dec
jo
mov
sub
es
push
jo
mov
or
push
fistpl
insl
pop
sti
mov
cmpsl
insl
fdivs
pop
repz
scas
push
es
add
xchg
rol
daa
and
or
shlb
push
sbb
es
addl
test
negl
outsb
leave
and
test
cld
sbb
lret
clc
js
add
sti
pop
mov
dec
test
xorb
dec
pop
mov
sub
or
push
or
sbb
loop
sbb
sbb
lods
xor
cmp
mov
adc
cmp
orb
nop
sub
in
dec
rol
sbb
sub
out
fmul
pop
push
rcrl
fs
cmp
xchg
bound
sub
jp
cmp
add
scas
out
push
insl
add
fprem
cltd
and
sbb
inc
push
outsb
adc
cltd
push
rorl
sbb
xchg
xor
scas
and
rcll
out
insl
xchg
push
or
xchg
jl
jle
cmpsl
cmp
inc
subb
fldenv
mov
sub
stos
push
dec
lock
dec
test
mov
sub
and
mov
in
sbb
fsubrl
imul
or
jl
push
loope
add
int
rcr
nop
insl
rcl
sub
sbb
adc
pop
lds
mov
sbb
xor
or
add
xchg
mov
add
pop
inc
jnp
test
xchg
movsb
arpl
push
sub
pop
imul
int3
jle
sub
idivl
pop
cmc
xchg
popa
adc
icebp
pop
sbb
sbb
lods
sbb
adc
pushw
push
cli
and
popf
idivl
roll
cltd
sub
aas
mov
mov
jno
sbb
add
ret
shrb
push
jne
pop
sbb
ja
push
loopne
movsb
popf
cmp
fnstcw
je
fisubrl
in
cs
lret
fdivl
mov
in
sub
mov
mov
clc
cmc
push
mov
jl
jmp
add
icebp
pop
xchg
jmp
loopne
popa
inc
out
jne,pt
sbbb
sub
adc
xchg
stos
cwtl
mov
dec
mov
push
jecxz
and
push
add
jo
add
out
sub
bound
test
and
stc
adc
push
add
pop
pop
or
jg
movsb
lahf
leave
add
lods
add
fcompl
cmc
push
sub
add
add
jg
and
or
jo
jecxz
in
fld
sbb
push
lret
push
sub
addb
or
cmp
push
add
insl
sbb
loopne
jbe
jnp
repnz
bound
add
or
push
add
es
and
sbb
and
jecxz
sub
loopne
cmp
jle
imul
repz
jbe
sbb
mov
ljmp
or
repz
out
in
add
add
imul
push
mov
in
rcl
jp
add
out
add
sbb
sub
out
lock
or
shrb
repz
pop
dec
orb
cmc
repz
add
push
add
jp
pusha
jne
add
push
shll
adc
or
ja
and
jne
ds
adc
imulb
xlat
add
repz
pop
outsl
bound
dec
popf
outsl
fwait
push
arpl
cmp
mov
pop
subb
push
or
fldcw
std
cmp
add
and
add
ja
orb
push
push
add
pop
adcb
push
push
popa
sarb
dec
add
xor
jmp
stc
push
push
call
sbb
push
fmul
mov
push
movl
add
inc
rorb
loopne
jnp
ret
push
icebp
ret
xchg
push
jecxz
cmp
jp
cli
add
into
in
insb
xchg
js
and
pop
push
and
adc
addb
or
mov
or
in
mov
and
and
add
push
addr16
call
sbb
inc
arpl
cmp
lods
jo
inc
and
and
fdivrs
mov
jge
or
sbb
icebp
test
sbb
xchg
mov
dec
or
adc
pop
shlb
dec
stos
and
fwait
pop
vmread
inc
pop
push
sbb
add
push
das
dec
or
mov
movsb
pop
sbb
repnz
in
ljmp
push
push
xchg
mov
or
leave
sub
cmp
rorl
mov
xor
mov
test
daa
pop
pop
rorb
stc
fstps
inc
inc
dec
fisubrl
jmp
dec
jl
nop
adcb
outsb
or
inc
cmp
sbb
xor
and
xchg
xor
xor
push
icebp
pushf
iret
cmp
inc
sbb
ljmp
pop
mov
test
add
sbb
dec
in
loop
xchg
notl
pop
cltd
test
imul
mov
stc
pop
sub
ss
and
push
shrb
and
xchg
adc
push
clc
push
or
and
iret
lahf
jo
sahf
or
add
cs
js
jns
sub
adc
add
dec
notl
mov
shrb
jno
incb
mov
mov
push
test
outsb
xchg
lds
mov
pop
imul
decl
fcoml
gs
movsl
out
gs
fcoml
roll
xchg
rcrl
fisubrl
push
xor
je
sub
aam
shlb
mov
add
dec
outsl
test
pop
sub
test
cmpsb
lock
inc
cmpb
inc
inc
dec
dec
fildl
adc
mov
rorb
dec
imul
jmp
dec
mov
call
jno
scas
addr16
fbld
aas
pop
sbb
bound
sub
call
mov
mov
icebp
les
pop
sbb
mov
shlb
ljmp
push
adc
mov
sub
scas
insl
lcall
cltd
int3
mov
mov
fsub
push
pop
fsts
int
jae
inc
insl
cmpsl
popf
dec
outsb
push
test
xabort
sbb
dec
in
push
dec
push
sbb
push
repz
faddp
xorb
insb
das
mov
adc
sbb
jecxz
pop
mov
sub
mov
inc
mov
sbb
test
mov
lcall
or
cmp
or
lea
rolb
insb
push
jge
add
rorb
xchg
fcmovu
ret
jbe
cmpsl
or
fisttpll
mov
adc
sub
push
dec
test
je
sbbl
sbb
cs
into
push
test
arpl
mov
outsb
sbb
mov
clc
push
mov
fdivrp
mov
lds
test
ss
jns
cmp
into
sub
scas
adc
add
mov
clc
rorb
mov
sbb
out
out
cmp
cmp
fs
cld
add
mov
aad
roll
std
int
dec
fadds
or
scas
in
sahf
clc
adc
into
int
sbb
inc
aam
pop
arpl
cmp
jnp
add
inc
inc
add
imul
ficomps
loop
jp
xorb
in
push
xchg
add
dec
js
mov
sbb
sbb
adc
loopne
dec
das
cltd
rol
push
testb
jge
mov
stos
jg
popf
pop
adc
imul
inc
pop
push
sti
or
xor
add
cmp
fsubrs
or
mov
dec
arpl
or
inc
stc
mov
aad
mov
dec
lret
popa
cmp
data16
scas
fwait
ss
and
push
and
loop
ret
inc
lea
adc
pop
mov
or
outsb
push
cmp
cmp
dec
xor
loopne
dec
xchg
add
lock
sbb
jns
adc
std
mov
mov
add
sbb
add
pop
lea
std
jge
sti
cmp
push
push
pop
fwait
inc
inc
xor
sbb
add
add
inc
adc
fwait
mov
jo
or
add
imul
in
iret
int
leave
fnsave
add
aaa
insl
or
add
popa
test
sahf
add
jge
xchg
add
mov
jge
cwtl
rcrb
out
xor
and
daa
jp
cmp
xor
mov
push
dec
lcall
add
ss
adc
sbb
xchg
into
les
adc
cmpsl
inc
inc
insb
mov
outsl
popa
cmpsb
stos
push
add
fistl
adc
lret
add
push
sub
loope
test
push
push
sbb
rclb
imul
and
mov
xchg
ror
mov
adc
addr16
pusha
mov
add
flds
test
xor
jnp
test
popf
loope
gs
fimuls
or
mov
daa
ret
jle
inc
leave
sbb
push
jp
or
insl
adc
add
in
add
xchg
xchg
fistl
or
shlb
cmp
and
outsl
jmp
add
ja
sub
mov
jecxz
mov
sti
shll
mov
xlat
ljmp
repz
test
jecxz
sub
jo
push
in
daa
jne
imul
loopne
sbb
mov
push
lock
sbb
and
aam
cs
xchg
or
stos
ja
test
push
mov
add
push
inc
imul
sahf
sub
pusha
popa
push
add
or
push
shll
dec
imul
rcl
adc
sub
xchg
mov
les
movsl
cmp
jl
cmpsl
mov
daa
mov
pop
pop
fiadds
movsl
mov
dec
mov
lods
mov
mov
aad
sbb
loopne
xchg
repz
lcall
iret
cmp
mov
insl
lahf
push
xor
push
pop
add
xchg
cmp
and
xchg
mov
sti
rorb
mov
std
fcomps
loopne
ss
inc
push
push
cmpsb
add
xorl
pop
movb
gs
adc
push
fnstenv
andl
aam
mov
and
cld
daa
rcl
scas
mov
fs
xor
movsb
push
ds
jne
and
repnz
call
movsb
pop
mov
add
dec
leave
enter
inc
sbb
adc
sbb
mov
pop
loopne
mov
xchg
mov
loope
das
mov
pop
sub
inc
push
stos
mov
mov
push
movsb
js
stos
scas
jnp
add
test
sbb
adc
popf
hlt
leave
inc
dec
add
mov
jmp
imul
and
push
and
jo
psubb
icebp
lret
mov
mov
lret
pop
xor
jbe
ss
cs
or
faddp
mov
lahf
xlat
loopne
sbb
fcoms
mov
in
inc
mov
sbb
push
xchg
mov
cmpsb
xor
ret
mov
pop
xchg
push
cmp
jo
cmpsb
push
mov
add
test
mov
adc
jecxz
sub
int3
lret
dec
cmp
in
sti
bound
mov
or
movsl
lret
fldl
inc
pop
enter
mov
push
xchg
es
dec
and
in
popa
pop
add
xchg
push
or
mov
imul
scas
fisubrl
rorl
fidivl
and
aam
js
icebp
bound
sti
clc
js
xlat
cmpsl
sub
push
in
mov
bswap
pop
mov
add
test
sbb
sbb
cwtl
rolb
ret
xchg
xchg
add
cld
cmp
sub
jbe
nop
jb
jae
das
sub
sbb
adc
sahf
inc
repnz
bound
je
mov
jmp
push
hlt
adc
xchg
and
stos
fwait
fs
cwtl
jbe
sbb
inc
push
push
lret
lods
or
jl
scas
fwait
and
shll
es
pop
ds
sbbl
in
jno
test
adc
icebp
clc
jno
cmpsl
pop
push
push
aas
icebp
hlt
insl
fcmovbe
mov
pop
mov
mov
or
mov
cmp
into
mov
dec
push
or
fstl
sub
lret
shlb
je
mov
aam
cs
and
aad
jl
xor
sub
hlt
mov
inc
lods
push
loopne
sahf
hlt
insb
aad
jne
jle
xor
sbb
push
fcmovnbe
mov
push
lea
jl
push
mov
mov
je
js
jb
sbb
in
popf
lock
xor
pop
xor
sbb
and
dec
inc
je
pop
sub
loopne
pop
popa
pop
adc
andb
sbb
fwait
popa
test
popa
adcl
pop
int
pop
push
in
cmpl
push
fadds
push
sub
ja
adc
dec
and
jl
adc
add
jno
jl
xor
dec
leave
test
adc
jge
inc
loopne
cltd
jo
or
inc
adc
push
stos
add
add
sub
rorl
add
test
pop
push
mov
add
sub
lock
lret
test
leave
inc
add
sbb
mov
inc
pop
loop
xlat
out
xor
les
pop
gs
xchg
sbb
pop
add
lds
xchg
or
roll
out
cmp
xor
push
push
mov
jge
or
mov
outsl
adc
cld
mov
and
pop
cli
rolb
xor
stos
sub
xor
adc
jae
mov
add
pop
ficompl
aaa
xchg
test
lods
xchg
add
les
rolb
push
insb
repz
fldl
add
adc
dec
inc
movsl
outsl
and
nop
cmp
xchg
aas
inc
add
mov
jno
cmp
cld
inc
lods
xor
push
add
ret
imul
pop
pop
sbb
pop
fmull
popa
mov
fwait
in
xchg
shll
cmp
pop
push
push
rclb
pop
jae
test
mov
push
hlt
lret
jno
mov
insb
cmc
dec
push
cltd
adc
sub
adc
inc
inc
sbb
inc
test
xor
das
xchg
cmp
out
sub
ror
jno
sbb
push
push
imul
ljmp
mov
push
pop
outsl
push
push
ljmp
push
dec
xchg
or
push
outsl
dec
movsl
xchg
xchg
push
xor
xchg
adc
inc
arpl
push
cmc
xor
xor
xchg
lret
push
add
push
loope
lret
aam
shll
out
subb
je
dec
jecxz
cmp
nop
mov
sub
out
push
popf
and
sub
icebp
mov
mov
dec
movsl
ljmp
push
mov
outsl
cmp
repz
push
push
lcall
lock
lea
and
ja
adc
or
lock
fsubrs
mull
cltd
add
adc
sbb
adc
jecxz
sub
jae
inc
test
imul
rcr
aam
push
aas
xchg
or
xorl
sbb
inc
fs
jno
in
sbb
mov
mov
mov
test
imul
loope
sbb
mov
or
pop
mov
popa
gs
add
xchg
loope
scas
and
out
faddl
test
and
pop
push
add
add
call
or
mov
and
movsb
add
imull
sahf
dec
ljmp
insl
popf
xor
sbb
inc
jae
mov
and
mov
je
or
mov
adc
add
aas
sbb
xchg
adc
aam
add
or
inc
test
jns
add
adc
aaa
aas
test
mov
adc
or
mov
add
xchg
movsb
arpl
inc
insl
rorl
xchg
stc
push
push
xchg
pop
cli
jo
in
iret
push
ficoms
lret
test
push
in
ljmp
push
add
push
lret
test
movsl
dec
notb
dec
sub
and
dec
in
imul
xor
jne
repnz
sahf
adc
sub
mov
imul
pop
cld
shl
adc
add
iret
xchg
adc
cmc
sti
enter
xchg
rcl
out
and
or
push
add
insl
inc
dec
das
jmp
jp
insl
or
ret
xchg
push
jne
loop
xor
lea
push
dec
sub
mov
je
mov
out
and
sarl
inc
in
push
andl
pop
test
popf
xchg
xor
movb
pushl
sub
icebp
lods
and
or
cmp
or
sbb
aad
mov
and
and
push
inc
or
mov
add
jno
test
jge
popa
lea
in
lods
adc
fldl
fidivrl
mov
xchg
jecxz
or
pop
clc
push
fistpll
xor
and
xorl
mov
fbstp
mov
jp
fcmovne
jp
mov
mov
xor
mov
pop
xor
bound
inc
inc
mov
lcall
adc
sub
xlat
mov
mov
xor
mov
or
movsb
adc
cmpl
mov
or
mov
cmp
pop
subb
mov
lahf
inc
js
movsl
pop
xor
lods
pop
dec
jecxz
jge
inc
aaa
fildl
push
arpl
dec
mov
or
sbb
rcl
daa
xchg
pop
dec
sbb
sbb
jmp
loope
popf
sbb
fadds
test
rcrl
test
xor
adcl
push
mov
cli
push
mov
icebp
inc
dec
insl
cmp
xor
xor
or
and
jl
xor
mov
and
xor
push
ja
cmp
ret
leave
and
pop
push
and
xor
sub
addr16
lcall
popf
enter
inc
cmpsb
test
loope
leave
pop
jecxz
sbb
orb
inc
loope
jmp
or
loopnew
xlat
jp
xor
test
ss
xlat
mov
call
sub
push
pop
mov
jo
xchg
repnz
aaa
or
push
pop
add
daa
or
popl
add
sbb
sbb
stos
mov
dec
or
imul
lret
fwait
jae
lret
test
ljmp
xchg
ss
push
pop
push
jnp
arpl
push
into
arpl
icebp
sbb
or
dec
out
dec
xorb
cmc
pushf
sbb
mov
cmp
xchg
pop
xchg
mov
sbb
loopne
in
and
add
mov
repnz
aam
and
test
fmuls
xchg
cmpsb
cmp
sub
sub
inc
xor
jecxz
pop
sbb
cmp
pop
andb
xor
adc
pop
adc
loope
push
lret
jge
push
xchg
popa
scas
fadd
push
jne
lret
inc
cmp
hlt
int3
ss
dec
add
fcom
enter
imul
dec
outsl
dec
clc
pop
cmp
push
sbb
lods
xor
push
cld
loop
and
enter
mov
jnp
or
push
push
imul
dec
sub
sbb
mov
sbb
repz
cltd
testl
stos
fnstcw
and
ret
pop
insl
mov
push
cwtl
mov
or
rcl
arpl
adc
inc
sti
js
push
or
pop
push
jecxz
add
add
psubsb
xor
and
sbb
lods
rorl
sbb
adc
sbb
xchg
dec
fcomps
jnp
arpl
adc
inc
push
add
sbb
xor
movsb
mov
mov
lahf
scas
mov
fstp
in
jp
pop
jecxz
int3
loop
aam
sbb
lret
lahf
jo
or
add
add
cmpb
fadds
imul
sbb
movsl
xor
pop
ljmp
fisttpll
sbb
adc
pop
adc
fcmovb
fisttpll
mov
sub
push
add
and
add
cltd
sbb
test
daa
jo
add
bound
jns
stos
popa
mov
dec
call
fnsave
and
push
in
adc
les
sbb
sub
sbb
jg
xor
pop
adc
stos
rcl
or
shll
xchg
add
and
fisubl
scas
imul
nopl
ret
jbe
pushl
lret
mov
or
sbb
mov
lret
mov
inc
and
and
movsl
test
mov
fnstcw
pusha
mov
sub
dec
mov
mov
aaa
adcb
f2xm1
add
test
add
rorb
xlat
ret
mov
push
fstpt
mov
pop
push
icebp
daa
push
inc
pop
mov
pop
push
or
aad
inc
cwtl
addb
pop
lcall
sarb
adc
xchg
and
jg
pop
test
sbb
sbb
xchg
jge
or
outsl
xchg
and
nop
pop
fwait
sub
jmp
lahf
or
rcrb
bound
adcl
add
mov
in
stos
and
mov
imul
pop
stos
lds
les
add
addb
nop
or
test
pusha
stos
adc
add
xchg
push
pop
dec
jo
pop
sbb
cmp
jecxz
mov
inc
iret
add
orb
mov
in
jb
dec
ss
lock
jo
lds
xor
insb
imul
add
adcb
lock
dec
mov
xlat
push
inc
insl
imul
fbld
xchg
subl
and
inc
out
dec
add
loop
and
jle
sbb
data16
cmp
mov
sub
cltd
pop
test
cltd
dec
das
jmp
xchg
inc
ss
mov
sahf
movsb
out
inc
jl
push
ret
loop
sbb
fbld
mov
push
xchg
sbb
enter
cmp
xor
cmpsl
outsl
lret
adc
inc
push
add
mov
addr16
mov
mov
outsl
and
mov
test
and
inc
mov
xor
sub
fimull
loope
adc
aaa
cmp
cmc
inc
dec
jne
das
dec
pushf
jp
xor
pop
daa
mov
lret
lock
adc
fisubl
inc
xorb
ja
xor
stos
mov
test
push
gs
xor
inc
push
jbe
add
jle
sbb
sbb
pop
pop
ljmp
aam
mov
xchg
push
jb
adc
lock
push
pusha
call
rorb
adc
push
rorb
jno
dec
add
sub
jp
pop
adc
sub
xor
push
xor
push
or
xorl
add
imull
stc
cltd
adc
mov
scas
mov
cmp
test
addr16
mov
roll
outsl
jge
add
dec
push
pusha
and
fdivs
lret
das
ror
pusha
pop
outsl
mov
dec
test
mov
cmove
fisubrs
sahf
in
stos
cmc
mov
lret
xchg
cmp
inc
scas
push
lahf
pop
movsb
xor
sbb
js
in
add
xor
filds
xchg
adc
mov
lds
inc
xor
je,pn
sbb
sub
jecxz
or
mov
xchg
sbb
aas
jne
addb
and
pop
ljmp
cmp
xor
push
or
into
test
jno
inc
sbb
loop
adc
adc
scas
mov
cmp
lcall
repz
adc
mov
das
iret
cmp
cmc
jb
jnp
inc
sbb
mov
mov
xor
add
ds
fldl
fstps
push
das
ret
ss
mov
xchg
ret
mov
pusha
ffree
pop
sbb
sbb
rolb
fdivrl
sahf
dec
and
repz
jo
inc
das
add
ret
jecxz
xor
push
adc
sbb
xchg
jge
roll
je
test
pop
adc
push
push
pop
pop
test
std
lret
xchg
cmpsl
ljmp
sbb
sahf
ss
sbb
fimuls
es
leave
xor
mov
add
rolb
aas
xchg
mov
and
mov
xchg
fmuls
pop
fstps
and
and
cmpl
insb
jne
movsl
jl
mov
dec
sbb
dec
lock
fimuls
dec
sbb
sub
xor
or
lock
js
adc
les
push
jmp
jecxz
lods
fstps
mov
lahf
jp
dec
cmpsb
outsl
pop
and
outsb
add
or
bound
bswap
inc
inc
sub
push
inc
pop
lods
mov
arpl
lahf
pushw
mov
sbb
add
jecxz
pop
inc
clc
push
sbb
xor
mov
fdivr
push
mov
mov
pushf
test
pop
sti
inc
cwtl
cltd
loopne
ljmp
push
inc
fcmovb
jge
and
mov
stos
ja
lret
sbb
sub
dec
arpl
sub
and
xchg
adc
mov
add
push
push
leave
test
test
pop
push
fsubr
mov
jbe
shll
pushf
pop
insb
pop
imul
adc
xor
fadds
adc
scas
inc
jl
add
lcall
adc
cs
inc
add
mov
cltd
fcomps
loope
insl
outsb
mov
in
push
gs
cs
loop
xchg
inc
aaa
mov
or
aaa
daa
adc
pop
push
push
popa
lret
lock
ljmp
out
in
movsb
fstl
push
push
insb
ja
pop
les
lret
xchg
xor
inc
mov
aaa
adc
mov
je
mov
sbb
xor
adc
addr16
add
or
iret
popa
add
sub
sbbl
inc
add
ficomps
fsubl
xor
add
sub
sub
mov
js
test
push
ret
test
outsb
int3
adc
outsl
mov
out
xor
imul
scas
jecxz
pop
es
and
and
push
adc
cmpsb
inc
bound
jno
ret
cmovae
cmc
ljmp
mov
add
cmp
lret
leave
sub
test
loopne
sbb
adc
or
xor
ss
in
mov
ja
clc
ss
out
adc
cmp
lods
xchg
push
int3
adc
adc
sub
xor
push
repz
pop
test
mov
in
sub
fs
rcrb
pop
adc
sub
mov
and
pop
xchg
orb
outsl
addb
popl
push
mov
data16
and
jecxz
push
mov
push
push
mov
cmpsl
daa
repnz
test
ljmp
push
sbb
cmc
push
sub
divl
mov
lds
mov
insl
cmp
sub
xor
and
add
sub
adc
dec
xor
rcr
xor
pop
stos
mov
or
lret
and
xlat
adc
inc
dec
mov
dec
xor
data16
roll
shrl
inc
movsl
adc
or
xor
inc
in
cltd
mov
push
icebp
clc
or
test
mov
popa
inc
shll
aaa
or
addr16
push
gs
inc
in
into
mov
pop
or
faddl
adc
xchg
mov
xchg
and
scas
pop
and
fs
xchg
add
add
adc
mov
sarb
aaa
xchg
out
dec
insl
dec
repz
lcall
jl
cmpsl
sub
daa
xchg
mov
test
test
out
inc
test
mov
iret
and
pop
jae
js
gs
xchg
negl
add
pop
dec
xor
fsubl
daa
pop
icebp
popa
jl
scas
push
sub
movsb
add
fmuls
pop
leave
inc
pop
loop
pop
roll
adc
aaa
aad
or
push
inc
insl
xchg
addr16
inc
lretw
popf
mov
aas
lods
mov
sub
sub
jno
xchg
mov
add
and
inc
pop
scas
lret
cmc
dec
pop
ss
and
push
gs
xchg
inc
add
pushf
inc
or
sub
test
lods
jo
xchg
jle
push
mov
inc
frstor
adc
loopne
test
mov
icebp
inc
imul
xchg
add
stc
dec
and
sub
inc
adc
add
lcall
shlb
lret
clc
roll
mov
push
or
mov
push
fildl
inc
movsl
shrb
lea
lahf
ss
shlb
fsubrs
sub
pop
and
jge
loopne
pop
xchg
movsb
xchg
mov
lods
movsl
mov
iret
push
sbb
mov
testb
test
sub
jnp
sub
pop
rcrb
adc
jne
pop
outsl
or
popa
sub
sbb
loopne
js
cli
stos
stos
jl
mov
stos
insb
xchg
es
lock
push
je
push
and
add
jo
pop
adc
push
push
jp
cmp
sbb
ljmp
xor
or
shr
andl
add
ret
aaa
in
ds
icebp
mov
jmp
pop
mov
lock
cmp
fisubl
and
push
and
adc
into
dec
fs
inc
or
add
ja
push
push
inc
mov
push
sub
add
xchg
xor
rcll
rolb
jbe
xchg
mov
cmp
jbe
dec
int
mov
test
push
or
pop
sub
and
lret
das
xchg
jno
outsw
mov
cs
push
mov
out
push
fisubrl
fs
fs
mov
lea
loopne
shrl
pop
clc
push
sbb
dec
insl
sub
push
sahf
adc
jmp
inc
lret
and
adc
cmp
dec
iret
mov
pushf
push
sahf
jbe
sbb
pushf
fdivs
in
or
sub
xor
aaa
into
imul
out
add
sub
stos
and
imul
add
push
cs
rcrb
or
jne
imul
adc
jmp
sbb
push
xchg
hlt
mov
aad
aad
mov
rorb
push
xor
adc
pop
call
scas
xchg
ds
ss
in
add
pop
aad
hlt
push
mov
mov
fisttpll
test
insl
lret
dec
sbb
jbe
in
inc
cmp
xor
xor
inc
je
pushf
push
add
pop
ret
xchg
icebp
or
inc
in
inc
outsl
fs
mov
inc
dec
xor
pop
lds
cld
lock
add
mov
ret
push
adc
push
pop
add
jb
lahf
jno
adc
jbe
into
push
adc
lret
add
ret
pop
jg
loopne
adc
shr
lea
sarb
ret
daa
and
lock
xchg
test
sub
add
testl
mov
call
ror
push
dec
and
mov
add
ret
ret
inc
inc
lahf
movsb
int3
pop
gs
mov
mov
bound
and
jae
dec
sub
shrb
fwait
lods
add
add
shll
inc
insb
and
inc
pop
into
pop
sbb
or
adc
imul
sbb
fs
fadd
pushf
lea
add
mov
mov
jnp
mov
dec
mov
rcl
sbb
ss
xchg
pop
xor
out
pop
and
and
inc
and
loope
push
mov
xor
adc
adc
mov
mov
mov
or
mov
and
mov
jp
out
loop
testb
lcall
and
xchg
sub
ja
faddl
jo
mov
fldenv
pop
andb
push
adc
mov
mov
enter
xorb
cmp
push
xchg
das
cmpsl
mov
icebp
insl
je
mov
je
jmp
jo
in
jp
out
fs
sub
fs
jle
jne
sbb
adc
loop
add
test
xor
stc
and
adcl
add
scas
or
jp
rolb
imul
xchg
pusha
addl
jae
arpl
xor
mov
or
aam
add
pop
mov
aam
add
push
xchg
icebp
and
xlat
mov
mov
jnp
add
lods
popf
inc
call
in
or
lcall
jo
xor
jmp
fcoml
xorb
or
loopne,pt
repnz
add
test
daa
bound
fdivl
push
dec
xor
loop
mov
sbbl
es
dec
xchg
mov
dec
pop
push
mov
or
shrl
cli
sub
repnz
cmpsb
std
mov
into
xchg
hlt
mov
shlb
and
sar
lock
inc
pop
cltd
sti
add
or
loope
mov
xor
push
mov
insb
sbb
jno
enter
mov
cmp
push
daa
jno
data16
mov
in
and
mov
gs
mov
jo
fnstenv
decb
test
mov
test
repnz
aas
int3
lds
test
and
lods
movsb
das
dec
add
push
dec
cmp
sub
sbb
mov
adc
adc
fildll
and
ljmp
sub
mov
push
mov
inc
test
cmp
dec
pop
cmpsl
mov
inc
fcomps
adc
std
push
scas
insb
sbb
add
or
sbb
mov
jg
add
mov
ret
fwait
and
lock
sbb
arpl
cmp
out
mulb
ds
and
cmp
ror
repz
sub
fnsave
or
lret
aaa
cmp
xor
xor
or
fimuls
dec
jg
arpl
loope
adc
sbb
jno
sbb
or
jne
adc
jns
xchg
outsl
ret
sbb
sub
out
or
and
das
cmp
inc
add
mov
inc
ss
ret
lods
loope
mov
sub
inc
roll
cmp
xor
xchg
push
pop
stc
test
sub
pop
xchg
pusha
xor
pop
add
loope
ret
adc
mov
xchg
hlt
and
inc
push
xchg
rolb
jb
movsl
addb
and
in
movsl
dec
sbb
mov
lods
jg
addb
sub
and
sar
shl
xchg
push
xor
push
in
jne
test
mov
leave
lods
add
fcmovu
dec
cs
pusha
or
aad
sbb
cmp
sub
jle
sarb
jle
into
hlt
or
ret
mov
lahf
pop
test
push
push
add
cmpsl
test
sbb
popf
mov
inc
mov
arpl
and
mov
pop
pop
in
fcmovb
test
mov
rorl
xchg
adc
js
call
les
inc
paddw
lods
loope
repnz
cmp
dec
dec
std
and
adc
rcl
xchg
ret
push
adc
movsb
mov
int3
cltd
aam
shll
dec
test
ret
popf
pop
shll
jnp
mov
jmp
xchg
mov
dec
maxps
fs
mov
and
in
popa
adc
add
push
adc
fwait
push
test
inc
test
mov
lret
adc
dec
add
mov
test
pushl
mov
jl
or
das
mov
push
or
ja
test
sti
pop
pop
outsl
adc
or
aam
and
push
dec
notb
loop
cmpsl
cs
dec
add
pop
sub
jmp
cmp
xchg
mov
stos
ret
mov
orb
xchg
push
sahf
sub
test
jnp
ss
fdivrl
addl
scas
mov
jp
push
sbb
mov
jno
mov
xchg
lcall
cmc
inc
lret
jp
inc
ret
inc
outsb
ja
aam
xchg
xor
test
sub
add
rolb
jge
leave
lock
add
fadd
and
sub
jbe
lret
imul
cmp
aas
and
dec
pop
out
out
shl
jbe
fmuls
sti
cmc
push
add
cmpsb
jge
cld
test
adc
aaa
push
test
jge
popa
aam
loope
fcompl
inc
gs
cld
push
xchg
xor
xor
dec
cmp
sbb
cmpsb
push
fbld
or
ds
pop
adc
stos
test
adc
movsb
cld
scas
and
jmp
xchg
mov
mov
test
in
clc
push
outsl
sub
jle
add
add
xor
daa
fdivs
and
mov
sub
adc
stos
dec
clc
arpl
imul
movsl
das
mov
cmovb
movsl
adc
aam
dec
pop
inc
and
in
lods
add
push
mov
rcrl
jmp
in
test
enter
push
sbb
mov
xor
cltd
or
rol
jb
addr16
andb
cmp
sub
fldl
cmpsb
shr
sub
push
mov
out
push
lods
push
sub
lret
dec
loope
lcall
sbb
jl
andl
sbb
js
daa
mov
add
icebp
inc
leave
and
mov
dec
xor
cmp
and
mov
adc
jnp,pt
mov
sub
push
sbb
push
or
cs
jae
mov
push
pusha
sub
pop
jb
cld
loopne
sbb
or
lock
out
push
and
test
inc
popf
and
mov
push
and
xor
adc
and
or
sbb
sbb
dec
pop
ja
outsl
jbe
nop
cmpsb
pop
cmp
add
addl
push
punpcklwd
sub
insb
lds
sbb
push
pop
xor
aad
shlb
test
pop
sbb
add
ds
xchg
adc
push
mov
fiaddl
lock
mov
arpl
mov
xor
dec
jle
xor
adc
leave
enter
out
push
addr16
jmp
mov
lcall
adc
call
adc
add
fs
ret
insb
gs
sbb
iret
adc
adc
das
cmpsl
hlt
add
icebp
rcl
adc
testl
mov
das
push
pop
pop
inc
mov
addb
inc
inc
fs
andb
sub
push
xlat
mov
imul
dec
movsb
rcr
iret
cltd
rorl
cmp
mov
mov
mov
xlat
xchg
fdivrs
add
rclb
or
xchg
loop
adc
add
stos
add
fstp
movsl
push
shl
mov
mov
sub
cmp
add
mov
stos
and
add
jecxz
xchg
cmp
aam
jnp
mov
ret
lahf
or
mov
test
out
leave
xchg
dec
pop
xchg
in
inc
jecxz
cmp
fadd
loopne
lahf
aam
sbb
lods
mov
jp
sti
xor
xchg
shrb
ds
and
inc
inc
xchg
stc
or
xchg
cmp
xor
out
cmp
aam
or
mov
shll
sub
push
jp
sub
mov
xchg
xor
cmp
rcrl
out
push
jbe
dec
sbb
les
mov
adcl
inc
fucom
cmpsb
fwait
imul
inc
add
jo
and
orb
pop
rolb
pop
ret
inc
cmp
fisttpl
imul
add
mov
ss
lahf
das
jae
arpl
pop
fsubs
xchg
imul
ret
pop
pop
mov
roll
addl
adc
sbb
xchg
cmpsl
pop
call
mov
ds
dec
pop
push
ss
or
dec
cli
sbb
xlat
aaa
loope
xchg
or
push
sub
dec
add
mov
cmc
dec
pop
lret
fstpl
sub
mov
je
aam
mov
orl
adc
ret
adc
jp
dec
mov
jmp
dec
sbb
push
test
jno
sub
cmpsb
sub
pop
inc
jo
jb
adc
jae
xor
and
shll
mov
push
and
fistps
xor
sahf
mov
push
sub
jo
adcb
or
scas
lods
and
dec
mov
lods
add
xchg
push
adc
popf
jo
in
cmpsl
rolb
mov
adc
lret
and
leave
fldl
fsubrs
adc
inc
xlat
clc
inc
adc
pusha
sub
sbb
sub
mov
pop
enter
push
movsl
inc
or
sub
sarb
inc
insl
loopne
mov
push
cmp
xchg
jle
and
dec
push
jmp
mov
test
sub
or
ret
push
or
add
imul
dec
dec
sarb
add
mov
xor
ret
xor
stos
and
loopne
xchg
scas
mov
mov
test
mov
or
adc
inc
sti
fistpl
scas
pop
add
xchg
cmp
adc
outsb
fwait
mov
je
popa
mov
imul
ljmp
adc
test
add
insb
inc
mov
loope
push
push
popa
bound
lds
inc
push
add
and
and
cmp
cmp
pusha
adcl
jp
cmp
lods
xorb
sub
es
lock
or
xchg
push
mov
jmp
add
adc
ds
mov
scas
adc
ror
insl
outsl
cmp
mov
jb
test
test
sub
jmp
push
aas
add
and
pop
dec
rcr
pop
push
lret
out
sub
lret
push
outsb
push
xor
dec
js
sahf
sti
arpl
push
imulb
fwait
xchg
in
or
pop
cld
pop
inc
or
popa
push
scas
les
lret
sbb
lods
ss
test
stc
in
lcall
cltd
clc
mov
mov
stc
xchg
or
lret
ds
adc
xchg
adc
add
cmp
add
xchg
xchg
push
ret
outsb
hlt
jg
mov
das
icebp
and
dec
and
ficompl
fdivr
daa
das
push
add
aaa
add
jno
mov
sarb
jns
jb
mov
sub
mov
add
gs
subl
cmp
fcoms
jle
xor
flds
push
inc
jne
clc
test
stos
jl
jno
adc
test
test
mov
fs
add
aad
and
lret
das
cmp
roll
aad
addb
fsubrs
sub
inc
dec
iret
mov
gs
jl
mov
addr16
push
fsubrl
outsl
ds
cmp
rolb
fdivl
push
mov
cmpsl
popa
add
or
sub
addb
push
sbb
popf
loopne
mov
movsb
add
pop
out
xchg
outsb
push
imul
jno
xor
jmp
xchg
xor
test
aas
add
lret
add
and
mov
inc
jge
dec
cld
cmp
aaa
loope
ret
fidivrs
add
mov
sbb
mov
adc
mov
leave
inc
and
sub
pop
sbb
test
jmp
cmc
test
or
sbb
sub
jo
add
mov
sbb
mov
sbbl
sbb
rclb
rol
sarb
mov
lock
insl
mov
lock
or
jmp
std
jns
sahf
adc
sbb
or
movsl
and
jae
mov
pop
inc
lcall
fwait
mov
xor
mov
mov
decb
sub
test
fld
lock
dec
pop
fdivs
pop
xchg
lahf
mov
sti
add
pop
add
rcrb
loop
fiadds
xlat
int
lods
sarl
dec
or
dec
add
inc
push
push
push
push
jg
pop
repnz
mov
or
mov
test
test
fildl
jnp
cmp
add
sbb
ja
je
inc
ret
je
mov
sbb
lahf
mov
xchg
xor
test
pop
xchg
cmpsl
push
or
call
test
insl
std
dec
or
lock
rcl
cmp
insb
test
es
rcr
lcall
bound
fidivl
cmp
adc
sub
and
jecxz
xchg
aaa
loopne
ljmp
stc
add
jle
sub
test
loope
js
add
cmpsb
stc
lea
xorl
push
call
loopne
call
daa
je
jp
cwtl
jecxz
push
stc
inc
leave
dec
pop
jg
loopne
dec
rclb
sahf
pop
insl
hlt
fildll
dec
mov
sbb
jecxz
jno
fidivl
icebp
push
push
push
mov
loope
mov
imul
jecxz
push
mov
mov
mull
jmp
adc
push
pop
outsl
inc
sti
and
icebp
andl
ret
sbb
xchg
dec
ret
add
adcb
jmp
es
adc
sbb
arpl
push
inc
or
sbbb
and
shll
loop
cmp
cmp
popf
sub
dec
cmp
addl
and
and
out
cmp
icebp
fmulp
movsb
lcall
punpcklwd
add
js
rcll
dec
insl
pusha
pop
mov
push
fistpll
addl
push
int3
mov
cmp
and
add
ret
ljmp
roll
rcr
inc
mov
sbb
dec
fadds
jno
popl
inc
cmp
fnsave
push
fmuls
inc
mov
mov
ds
mov
rorl
inc
and
xchg
xor
sarb
lds
in
out
mov
push
xchg
fnstenv
mov
rcrb
sub
clc
popa
mov
icebp
inc
rolb
imul
sbb
fsubr
mov
stc
ss
lahf
es
dec
and
repnz
dec
or
xor
inc
mov
sbb
enter
adcb
and
cmp
dec
or
test
addl
and
adcl
adc
mov
lahf
ret
fidivrl
nop
popf
or
mov
inc
xchg
lock
push
add
roll
push
push
or
or
sub
xchg
movb
vshufps
je
or
pop
daa
xor
out
pop
call
lret
adc
dec
cmp
xchg
mov
cmp
sub
add
movsb
ficompl
cmp
dec
pushf
dec
xor
popa
mov
fistl
into
shrb
mov
pop
aam
add
adc
or
mov
rorl
lods
insl
rorb
addr16
ss
lret
xchg
lock
xchg
sarl
pop
xchg
and
push
sbb
sarb
enter
dec
or
lcall
mov
arpl
add
pushf
xor
mov
ljmp
ret
pop
fxch
loop
dec
dec
cwtl
addr16
fcmovnu
mov
jecxz
into
push
les
cli
or
aad
popf
mov
aam
adc
pop
inc
fisubl
imul
sbb
fildl
scas
add
xor
or
loopne
xor
in
outsb
sub
lret
xchg
push
inc
mov
test
push
mov
and
and
or
cmp
out
cld
adcl
loope
popa
adc
mov
mov
add
mov
mov
aas
mov
jmp
gs
aam
add
dec
test
and
dec
push
push
out
ret
and
call
js
out
jo
call
xor
pop
jae
and
adc
fdivr
mov
jae
mov
inc
sub
sub
mov
stc
mov
pop
and
test
pop
sbb
pop
inc
pop
xor
inc
ret
adc
and
xor
sbb
arpl
mov
fs
xchg
inc
pop
sbb
adc
insl
call
jo
sbb
popa
leave
fists
or
imul
mov
inc
pusha
xor
mov
mov
dec
in
xor
sti
cmpsb
and
dec
inc
xchg
in
sub
in
cli
inc
mov
mov
sbb
push
punpcklbw
xchg
dec
in
lret
push
sbb
mov
xor
ret
inc
sbb
push
pop
loop
fistpll
dec
add
or
push
fnstsw
dec
jmp
pop
or
sub
adc
or
pop
mov
mov
hlt
sarb
pop
xor
adc
lods
adc
or
bound
lret
and
inc
scas
sbb
push
jb
loop
stos
fs
add
dec
xchg
inc
adc
int
or
test
addl
adc
pand
test
sti
out
adc
and
sahf
push
dec
dec
aas
inc
call
sub
pop
add
outsb
mov
frstor
fstps
imul
mov
sub
das
out
push
cmc
xor
pop
sub
mov
cmp
adc
or
lret
sub
dec
dec
dec
push
xchg
or
lock
mov
fisttps
stos
dec
jecxz
cmp
mov
mov
outsb
sbb
xchg
mov
jecxz
repz
mov
jmp
in
lock
push
lret
aas
adc
scas
test
add
scas
ret
data16
inc
cwtl
addr16
je
xchg
or
leave
pop
daa
addl
rcrl
jl
mov
stos
adc
mov
push
mov
sub
stos
mov
lahf
in
js
and
gs
cmp
inc
shlb
insb
fwait
xchg
mov
jns
cmp
dec
movsl
cmp
or
inc
sub
rcrb
inc
dec
dec
test
push
fbstp
mov
lret
adc
aad
popa
or
sar
push
nop
rcrb
xor
imul
test
fnstcw
in
push
orps
pop
adc
test
add
push
fiadds
cmpsl
push
inc
mov
sub
mov
cmp
dec
and
inc
es
add
adc
and
loop
xlat
adc
aad
divb
pusha
mov
jo
cli
add
imul
call
ss
sbb
and
mov
fldl2e
jmp
mov
jno
push
jae
pop
jp
sbb
jecxz
mov
cmp
fmulp
push
mov
test
inc
sub
fcompl
inc
pop
cmpsl
jg
xor
adc
arpl
xchg
jb
push
mov
loop
test
movsl
push
stos
xor
cli
adc
add
das
cmc
stos
faddl
sub
jl
mov
mov
movsb
inc
mov
jle
inc
imul
and
into
pop
ja
lods
adc
sbb
push
ret
loope
loope
pop
sub
xor
or
or
add
add
insb
or
mov
sub
nop
and
dec
cli
and
fldl
push
and
adc
inc
popf
pusha
inc
mov
cmp
sub
daa
and
pop
xor
das
sbb
pop
js
addl
add
xchg
inc
sbb
or
push
lods
push
sub
jg
add
andl
add
and
js
inc
jbe
and
lods
adc
jle
or
add
lds
sub
cmp
sbb
mov
or
mov
dec
lock
push
in
popa
push
mov
outsb
incb
mov
popa
pusha
adc
lahf
and
mov
push
lds
outsl
add
lret
shll
or
roll
mov
adc
xchg
mov
test
bound
jae
icebp
out
jne
scas
cmp
lcall
outsb
cmp
mov
push
vcvttpd2dqx
or
mov
cs
xchg
pop
test
ss
rorb
pop
es
outsb
mov
pop
nop
out
add
cs
or
dec
dec
jge
sbb
push
mov
nop
pop
sbb
loopne
hlt
mov
addr16
cmp
popl
pop
neg
push
das
daa
push
push
add
shr
fwait
repnz
sub
test
sub
mov
pop
test
cmp
sarl
ficoms
imul
sub
xchg
lds
imul
and
lods
orl
and
jno
shr
andl
pop
fisttpl
cmp
mov
jns
sbb
inc
mov
lahf
cmc
cmp
xor
jmp
outsl
mov
mov
push
cmpsl
outsl
iret
pushf
sub
mov
mov
add
scas
pop
jnp
inc
test
jmp
mov
vpmacsww
mov
scas
mov
stos
cwtl
jb
stos
dec
ret
sub
cs
sub
mov
push
add
mov
add
sub
adc
nop
pop
js
or
or
dec
adc
clc
in
mov
push
adc
jo
rcrl
and
cmpsl
inc
push
lcall
and
cltd
dec
shll
mulb
stos
inc
cmp
push
mov
jnp
push
or
adc
and
add
and
cwtl
xchg
aam
sbb
dec
outsl
cwtl
sbb
in
nop
pop
adc
sub
jle
gs
pop
ret
sub
ret
or
mov
sarb
aam
cld
add
pop
mov
jg
add
inc
cmpl
mov
mov
lret
ret
or
xorl
xchg
cltd
xor
test
dec
inc
paddsw
dec
lock
add
fwait
repnz
es
push
ret
andl
sub
nop
add
cmp
xor
rclb
jo
mov
es
and
dec
movsl
adc
out
add
jnp
testb
adc
scas
imul
test
add
fwait
add
push
repnz
or
ja
ljmp
inc
adc
push
adc
mov
add
popa
adc
sub
mov
es
and
ret
cmp
xor
and
imulb
push
arpl
in
imul
dec
mov
loopne
test
jno
lods
cmp
faddl
sbb
nop
mov
sub
hlt
js
in
add
xor
pop
jb
xor
push
cmp
inc
push
or
dec
rorl
cmp
andl
loope
push
mov
and
dec
lret
inc
loope
jb
or
and
cwtl
dec
jecxz
mov
outsl
lret
sbb
popa
sbb
std
nop
lret
dec
cwtl
leave
imul
imul
fsubrl
les
pushf
es
adc
lret
test
xorb
and
push
cwtl
adc
fwait
cmc
lret
push
lcall
ret
add
sbb
ss
xlat
aaa
mov
add
mov
test
xchg
pop
das
add
ret
inc
dec
int3
test
adcb
pop
fisubrs
sub
ss
bound
push
mov
lret
out
or
pop
ficomps
sub
xor
add
les
jb
and
cmp
lret
test
js
cmpsl
sub
xlat
lcall
xor
clc
and
adc
jo
mov
cmp
xchg
popa
insl
mov
or
xor
xchg
xor
inc
in
mov
xchg
pop
cmp
jnp
and
mul
dec
mov
sbb
add
stos
test
sbb
sbb
push
or
pushf
imul
test
daa
sub
mov
mov
mov
lods
add
rorl
aad
fdivrs
adc
lret
and
add
test
orl
fmuls
out
shr
adc
mov
in
call
and
cmp
pop
jp
pop
inc
hlt
les
xor
and
test
call
and
jo
rclb
mov
aaa
mov
pop
les
leave
loope
mov
andl
push
popa
xchg
mov
mov
je
push
xchg
pop
rorb
cmp
mov
vcvtss2si
rorb
adc
mov
pop
push
add
dec
and
dec
and
sub
pop
inc
pop
ljmp
xor
jecxz
aaa
and
dec
and
mov
fwait
orl
jo
cmp
repnz
pop
cli
rorb
mov
push
sbb
adc
cld
dec
loope
movb
mov
xchg
adc
movsl
lret
mov
pop
push
lods
popa
prefetchwt1
xor
sahf
leave
push
rol
sub
out
dec
mov
and
or
mov
fptan
xchg
jno
add
dec
dec
cmpb
pop
mov
imul
jno
adc
imul
out
das
cmp
push
sbb
jecxz
ret
and
xor
mov
lret
mov
repz
push
jno
push
aaa
sub
jecxz
sub
adc
or
inc
test
jmp
fbstp
xor
bswap
push
daa
sbb
add
rcrb
lds
mov
adc
rclb
add
xchg
push
sub
and
iret
fidivrs
inc
imul
cs
sub
adc
je
loopne
dec
dec
sub
push
mov
ret
test
mov
xor
and
dec
lods
inc
push
push
or
dec
xor
flds
pop
jne
jbe
xchg
fnstsw
enter
insb
add
mov
jo
ds
mov
int
pop
xchg
ret
leave
xor
sbb
inc
bound
jge
arpl
mov
sbb
push
int3
dec
add
sbb
add
adc
add
fldz
ss
and
je
sbb
sub
push
or
aad
jmp
sub
or
pushf
mov
fxch
inc
jmp
es
sbb
mov
xor
ret
cmpsl
add
ret
int
add
lret
lcall
pusha
aas
popa
mov
jae
jge
xchg
jge
addr16
fcoms
les
cmp
and
mov
cld
pop
pop
push
adc
push
push
mov
lcall
fcmovnb
lcall
or
orl
or
or
aas
push
cli
jnp
push
dec
and
push
aas
pop
inc
adc
and
adcl
dec
pop
jmp
xchg
adc
and
ret
cltd
aam
flds
pusha
add
movsb
addl
imul
and
xchg
jo
addb
mov
mov
aam
push
lahf
and
pop
push
cmp
call
inc
cmp
imul
pop
jl
sub
insl
movb
in
add
es
lock
cmc
mov
movsb
and
jge
shll
sbb
xor
sub
dec
sbb
outsl
xor
fstpt
test
lea
cmc
and
inc
adc
in
add
outsl
shrl
mov
inc
jb
popa
pop
add
dec
inc
and
sbb
int
push
repnz
fisttps
fs
push
jae
lcall
pop
adc
cld
das
ret
test
pop
shlb
mov
jecxz
movsb
adc
adc
push
test
push
mov
xchg
pushf
lret
or
vmovlps
jnp
ret
push
rorb
inc
lret
and
fildl
arpl
sbb
or
test
or
subl
adc
adc
leave
xacquire
pop
push
push
add
add
loopne
push
add
xchg
cmc
pop
jmp
mov
mov
jmp
sub
mov
and
insl
pop
cmc
les
and
push
cmpsb
mov
movsb
cmp
cmp
adc
cmpsb
adc
xor
sub
xchg
frstor
mov
pusha
lods
dec
push
sbb
push
shlb
or
mov
add
xlat
sbb
aaa
ja
and
push
cmp
xchg
pop
add
sub
or
add
inc
jmp
or
jo
adc
mov
dec
loope
cmp
mov
pop
mov
cmp
inc
call
mov
cmp
gs
or
fcmovbe
aam
call
inc
ror
cltd
mov
or
jecxz
inc
jle
inc
adc
das
and
or
lds
mov
cmc
xor
ror
and
inc
sub
jmp
out
pop
or
jne
pop
jnp
mov
add
pop
or
cmp
dec
push
insl
ret
sub
push
pop
adc
xor
pop
mov
sub
movsb
push
mov
sbb
add
pop
test
and
loope
popa
andb
jo
and
lret
dec
add
inc
or
aad
cmp
rol
mov
add
in
add
push
inc
pop
shr
rol
call
add
pop
mov
in
inc
sub
push
jbe
add
mov
sbb
in
push
sbb
push
mov
insb
xchg
ljmp
in
adc
add
out
arpl
je
jge
push
pusha
and
cmpb
push
andl
xlat
popa
and
insb
dec
push
add
jns
loop
clc
dec
pop
add
test
aam
dec
xchg
jns
xor
js
or
inc
adcl
xor
lods
and
shll
lea
push
das
out
hlt
mov
aad
add
lea
imul
lock
or
in
fwait
inc
mov
mov
fwait
xor
test
sar
mov
mov
or
push
das
pushf
cmp
lret
dec
sub
push
bsr
frstor
cltd
js
out
repz
in
pop
push
inc
inc
jle
sbb
stos
inc
cmp
std
cmpsl
outsb
push
dec
popa
loop
push
jb
cmp
iret
inc
add
push
fwait
insb
cmp
jns
lret
sub
mov
sbb
bswap
xchg
ljmp
test
in
insb
es
movb
fdivrl
mov
jecxz
in
lahf
pop
imul
test
sahf
xor
test
mov
fwait
mov
loope
jae
inc
das
loop
ror
cmp
ds
jae
push
mov
dec
test
ljmp
sub
xorl
mov
movsl
es
mov
lea
adc
jns
aas
shrl
lcall
mov
mov
mov
call
shll
dec
add
push
push
adc
add
mov
xchg
lret
or
aam
mov
or
lods
jns
mov
sub
call
inc
cmp
xchg
and
add
pop
dec
dec
and
daa
xchg
fwait
dec
adc
mov
mov
and
test
movsb
es
call
mov
mov
add
movsb
sub
ds
or
addr16
add
ret
mov
sbb
cmc
fwait
dec
add
xchg
js
sbb
cmpsb
sub
popa
or
popa
or
sub
arpl
add
and
jl
daa
icebp
mov
fnsave
cld
and
cmp
pop
inc
fldl
add
pop
cwtl
out
mov
inc
jp
jg
ljmp
out
loope
bound
inc
lret
push
xor
test
or
push
mov
dec
push
cmc
dec
jge
test
sahf
cmp
add
cs
fstl
jl
sbb
jb
and
movsb
push
or
xor
test
sub
add
sbb
out
mov
test
rcl
jae
dec
pop
rorb
outsb
aaa
leave
pop
pop
sub
cmp
mov
imul
push
imul
xor
pushf
fcmovnu
add
jp
adc
jecxz
adc
and
mov
pushf
add
jecxz
mov
les
aaa
outsb
sbb
xlat
out
cmpsl
inc
and
insb
pop
mov
mov
jno
and
mov
xchg
xchg
or
add
mov
xor
nop
dec
push
or
jo
sbb
push
jns
dec
sahf
sub
pop
mov
leave
test
or
fnsave
stos
mov
adc
adc
pop
fwait
add
and
shll
ffree
cmp
fldenv
mov
fldt
add
sbb
mov
dec
scas
lea
repz
lock
mov
lea
flds
cmp
sbb
push
clc
lea
ret
ret
inc
and
roll
fidivrs
lods
jo
xlat
cmpsl
sub
loope
fxch
ds
or
pop
sbb
dec
inc
cmc
dec
movsb
add
mov
and
add
cmc
pop
sbb
lcall
sub
dec
daa
inc
pop
add
jecxz
test
add
sbb
jg
test
mov
push
lret
inc
repz
or
add
lcall
mov
inc
or
mov
push
arpl
mov
sub
outsb
push
in
mov
add
test
push
xor
in
pop
cmp
adc
cmp
pushf
push
je
lcall
pop
stos
sbb
mov
sbb
sti
ficompl
push
and
sbbl
mov
adc
fbstp
mov
xchg
sbb
gs
les
cld
push
je
dec
lcall
or
sub
cmp
xor
add
adc
mov
sub
mov
cmp
lret
dec
pop
in
orb
lds
adc
or
xchg
outsb
jge
fdivr
or
mov
inc
add
fsubrs
mov
stos
adc
aam
sub
pop
movsl
mov
cmp
cs
add
push
add
loope
xchg
js
xor
lods
xchg
adc
xchg
mov
cli
adc
repz
push
sbb
cmp
movsb
fnstcw
stos
sub
and
mov
insb
sbb
push
mov
jg
out
adc
mulps
fstpt
push
sub
xchg
adc
mov
ljmp
add
insl
xorb
popa
cmp
shrl
pop
add
add
rclb
daa
je
xor
inc
aaa
sti
add
mov
add
xchg
xor
xchg
cs
sbb
stos
adc
cwtl
push
js
repnz
and
inc
arpl
xlat
cmpsl
sahf
pushf
jne
mov
mov
inc
sub
push
shr
xor
out
adc
fidivl
xor
cmp
ret
test
int3
add
mov
sbb
test
in
aad
aaa
into
jnp
fistpl
push
xchg
wrmsr
imul
inc
jecxz
adc
sbb
xor
sbb
xor
inc
outsl
xor
add
xchg
rorb
pop
aaa
jo
xchg
andb
and
or
jecxz
mov
movsl
and
je
add
xor
inc
and
fcompl
mov
xchg
add
cwtl
icebp
add
bound
mov
js
sub
push
out
out
data16
and
fcomps
dec
xchg
sbb
mov
ja
mov
pop
and
add
mov
mov
pop
sbb
pop
ffreep
xchg
js
push
or
push
scas
inc
lds
icebp
inc
lea
scas
xor
mov
pushf
pop
daa
lods
pop
stos
aad
sbb
loop
pop
ror
pop
dec
stos
incb
jae
xor
inc
pop
mov
outsb
push
pop
jmp
stos
ret
mov
popa
fwait
lods
adc
jbe
push
lock
dec
daa
mov
or
clc
aaa
ret
dec
and
jp
adc
data16
enter
pop
pop
orb
mov
cmp
dec
ficoml
adc
sbb
mov
add
mov
pusha
dec
and
and
add
in
adc
inc
aaa
cmp
arpl
or
mov
add
add
into
lods
jmp
ja
xchg
push
jne
scas
gs
out
add
mov
jnp
xorb
pusha
test
in
fdivs
das
repnz
hlt
add
jno
or
push
fcom
test
enter
cltd
jns
insl
xor
xorb
mov
pop
out
stc
sub
xchg
add
mov
rcrb
lea
arpl
cmp
sbb
arpl
out
inc
mov
pop
push
leave
push
push
push
pop
xor
pop
es
lock
cmp
scas
jo
sti
mov
push
fsubs
loop
iret
lahf
add
add
in
mov
or
sbb
or
fnsave
dec
mov
popa
dec
cmp
xchg
pop
scas
imul
mov
aas
mov
adc
fnsave
cli
fisubl
mull
or
cmp
xor
xor
or
pop
pop
xor
std
rol
das
movsb
add
dec
push
sysret
daa
out
in
scas
test
xor
inc
pusha
pop
cmpl
add
push
pop
lret
pop
xorl
lcall
adc
test
push
inc
cmpb
jnp
mov
xor
adc
bound
push
add
in
cwtl
sub
mov
and
int
xor
dec
mov
popf
add
pushf
fwait
add
stos
test
adc
aad
shrl
push
lods
xor
xchg
jae
fs
mov
lret
xorl
in
xchg
push
inc
sbb
push
hlt
mov
push
cltd
pop
addl
out
cmpsl
adc
dec
ret
push
or
push
cmc
nop
and
and
cmp
pop
movsl
loope
sbb
pusha
add
pop
in
push
testb
jae
mov
cmp
rorl
mov
nop
insb
outsl
pop
mov
int
mov
out
and
push
push
xorl
push
stos
add
xor
xor
stos
cmpsl
mov
xlat
push
mov
ret
mov
xchg
dec
dec
shl
or
sbbl
jl
mov
cs
scas
cmpsb
add
movsl
pop
dec
popa
pop
lea
xor
inc
adc
cli
mov
ss
dec
sub
pop
mov
in
dec
or
test
inc
pop
dec
mov
adc
sbb
adc
test
pop
cmp
in
out
lea
xchg
add
mov
sub
scas
aaa
mov
mov
push
push
popf
jb
nop
sbb
sub
adc
xlat
xor
adc
inc
mov
movsl
fisttpll
fnstcw
and
adc
loop
sub
and
jnp
adc
xchg
jno
clc
xchg
add
cmpsb
cmp
bound
popa
stos
call
mov
mov
roll
add
lcall
cs
loopne
lret
lret
xchg
xor
push
lret
push
jle
or
test
mov
dec
jecxz
cltd
push
aas
test
or
or
outsl
inc
add
jge
mov
push
cmpsb
sahf
sub
mov
inc
jecxz
jp
sti
fcompl
jno
aaa
pop
loop
push
push
push
sub
add
or
les
xchg
lock
mov
rcr
jge
test
or
jge
inc
add
in
mov
insl
loop
cmp
or
sub
in
jb
mov
test
mov
testb
stc
sbb
test
sub
sahf
lret
dec
sbb
fldenv
sahf
popf
xor
mov
fistpl
cltd
cmp
sub
xchg
jae
xlat
mov
fcomi
sub
pop
rcrb
loopne
sbb
fstps
mov
lock
and
and
pop
cmp
mov
sub
in
aam
jno
push
hlt
sbb
mov
or
mov
addl
sub
loop
pop
xchg
filds
stos
jp
loopne
stos
lret
dec
ss
inc
mov
pop
cld
fidivs
es
mov
in
and
mov
pop
sbb
pop
mov
dec
or
add
push
dec
das
adc
cltd
bound
cmpsl
ficoml
fildll
adc
push
sub
mov
ficomps
cmpl
mov
cmp
das
mov
pop
cmpsb
xor
lods
mov
in
sbb
adc
jl,pn
jo
mov
fwait
cmpsl
dec
jne
jnp
lds
arpl
dec
pop
fidivrs
and
cltd
and
mov
jnp
xor
pop
dec
pop
xor
dec
mov
cmp
mov
pop
in
push
mov
repnz
push
rcrb
adc
mov
mov
push
mov
cmp
pusha
mov
ds
outsb
js
jb
cmp
outsb
mov
or
add
gs
jnp
dec
pop
pop
adc
test
mov
setp
cmp
inc
mov
inc
push
fsubrp
cmpsb
add
scas
xchg
shl
sbb
scas
xchg
push
mov
mov
mov
pop
lea
push
pushf
loop
insb
rcl
xchg
scas
xorb
loop
sbb
mov
das
mov
ja
ficomps
adc
dec
inc
xchg
ds
xchg
cmpsb
and
xchg
mov
cmp
add
outsb
stos
lret
pop
and
xchg
in
cmp
mov
cli
dec
sbb
sub
adc
dec
lods
lea
push
lahf
adc
mov
dec
push
ret
sub
cmp
jae
in
cs
mov
js
in
cmpsb
cmovb
mov
mov
add
loop
out
pop
lods
in
sbb
lcall
cmp
add
stos
jge
fldenv
inc
mov
xchg
mov
add
mov
lds
xchg
popf
ss
sbb
stos
dec
xchg
out
jge
outsb
push
repnz
jg
pop
int
jno
out
sbb
ret
jo
mov
in
push
adc
mov
je
push
fldl
test
sub
test
test
ds
mov
fisttpl
mov
nop
data16
push
mov
seto
xchg
sbb
sub
push
push
push
cmpsl
outsb
or
pop
or
jb
xor
add
popf
aam
push
pop
sub
fs
cltd
bound
inc
loope
mov
mov
jne
or
push
icebp
addr16
imul
jg
push
mov
scas
ret
scas
cmpl
ds
idivl
dec
outsl
mov
lcall
push
and
pusha
push
popa
xor
loop
fldenv
ss
xor
movsl
testb
cmp
xchg
in
repnz
xlat
push
sahf
adc
divb
push
mov
cs
mov
js
in
call
addr16
jecxz
mov
or
inc
andb
add
ja
push
out
add
xor
scas
insl
and
out
fs
xor
test
and
xlat
jne
rcrb
pop
ds
xchg
add
add
sub
mov
xor
pusha
sti
nop
fldenv
jbe
xchg
shlb
cltd
jo
lcall
loope
mov
je
insb
orb
sti
xchg
nop
rcrl
cltd
in
fs
arpl
sub
add
in
pushf
mov
xchg
fnsave
sbb
adcb
movsl
xchg
popf
dec
fsubs
je
add
dec
add
xchg
lcall
in
mov
pop
js
cs
xchg
adc
dec
or
repz
imul
pop
es
dec
divl
mov
push
pop
mov
and
pop
pop
jl
addb
push
dec
xor
mov
ja
pusha
sbb
add
es
je
sarb
shl
jae
inc
adc
push
sub
mov
aam
sub
fwait
das
sbb
mov
push
inc
cmp
push
cmp
adc
sbb
pop
mov
imul
jne
pop
enter
bound
push
sub
or
dec
push
mov
jno
jp
or
ljmp
lock
add
mov
inc
add
ficoml
sub
push
mov
dec
jnp
pop
and
xor
std
push
rclb
test
mov
xchg
stos
and
add
fwait
mov
sbb
and
dec
push
fldt
add
mov
mov
xchg
adc
pop
ret
rcl
shr
icebp
sub
std
xchg
stos
divl
ljmp
pop
jmp
dec
cld
add
inc
sub
mov
out
mov
sub
jb
sub
pop
je
roll
inc
lea
ja
lds
xchg
rcrl
and
adc
jbe
add
cmpsb
push
fisubrs
fstps
mov
add
jb
movsl
iret
aam
mov
and
jne
and
and
sbb
mov
jno
mov
dec
and
out
inc
sub
sti
push
and
cs
pop
and
ret
ror
fs
mov
dec
push
sbb
cmp
xchg
shll
dec
xor
loop,pn
aas
adc
fisubs
mov
mov
sub
mov
add
mov
add
push
es
jmp
add
adc
mov
int
sbbb
iret
lods
and
mov
int
adc
int
loope
adc
cwtl
sub
push
sub
dec
rolb
stos
adc
mov
stos
hlt
stos
sub
test
adc
das
leave
imul
cwtl
cmp
outsl
loopne
xor
test
rcll
pushf
ss
xchg
sub
sbb
in
push
and
in
xchg
push
vcvttpd2dqy
cwtl
mov
test
out
test
sbb
js
and
in
xor
and
test
jp
push
xor
cld
jb
pop
mov
and
sub
adc
xchg
adc
rol
ret
jae
rorl
adc
insl
fcomp
orl
jl
lret
mov
fldl
xor
stos
jnp
enter
sbb
xchg
mov
pop
loopne
out
js
mov
cmpsb
add
adc
xor
pop
add
pop
fdivrp
mov
loope
test
add
jae
loop
loop
sbb
push
mov
cmp
pop
mov
loop
fisttpll
xchg
ss
cs
ss
aam
mov
sub
xchg
sub
jle
cmpsl
add
mov
push
divb
inc
add
jae
test
cmp
and
pusha
lock
ljmp
and
sbb
in
adc
mov
mov
pop
adcb
and
pop
add
jmp
test
rcrb
dec
jl
dec
mov
insl
add
imul
pop
outsl
shrl
cmp
lahf
sbb
push
lcall
inc
fs
pop
sub
dec
jo
test
outsb
mov
stc
test
sbb
in
sbb
push
pop
mov
hlt
rcrl
pop
inc
loopne
and
sbb
lret
cld
sub
and
les
mov
js
pop
shll
and
and
ss
stos
cmp
mov
adc
mov
push
scas
sahf
frstor
jo
xchg
xchg
push
mov
sbb
cmp
repz
cs
cmpsl
mov
adc
adc
push
iret
add
mov
out
sbb
mov
shrb
loope
add
out
adcl
stc
hlt
ret
add
xorb
movsl
adc
lock
dec
cmpsl
or
and
imul
icebp
mov
cmpsl
mov
pusha
loop
mov
push
stc
inc
mov
xor
mov
lock
mov
adc
mov
mov
add
pop
sbb
jne
shll
pop
and
sbb
cmp
or
jnp
adc
shrb
adc
mov
adc
loop
les
hlt
aad
popa
push
cmp
adc
ds
add
or
add
add
add
jno
or
pop
movl
fists
es
add
loopne
clc
add
testb
cmp
rol
jmp
mov
push
aam
or
cmp
xor
and
or
and
inc
jo
pop
sbb
fldcw
in
out
adc
and
pop
inc
push
jg
and
inc
cmp
outsl
adc
sar
icebp
xchg
add
aam
mov
popf
stos
add
cs
xchg
add
rolb
push
mov
add
out
jo
nop
xor
jbe
loopne
pop
pop
cmpsl
lods
pop
push
outsb
add
sti
stc
addb
lds
cli
xor
fidivs
repnz
shl
ret
mov
add
inc
push
mov
pop
sbb
test
sarl
dec
pop
xchg
inc
xorb
stc
insb
into
add
xor
cmc
sbb
test
cmp
push
adc
pop
add
pop
std
add
addb
in
xchg
add
daa
and
icebp
push
mov
mov
push
add
fsubl
leave
inc
idiv
pop
add
outsl
or
insb
and
imul
nop
les
inc
idiv
aas
adc
push
xor
rcl
inc
cmp
push
fmuls
sar
sbb
aam
stos
dec
std
fsubl
movsl
into
xchg
int3
stos
add
pop
pop
or
incb
test
lret
add
es
add
push
js
incl
add
push
xchg
add
cmp
aaa
adc
in
test
mov
stos
inc
insl
daa
dec
mov
jecxz
call
sub
js
loop
pop
pusha
inc
add
mov
adc
and
cmp
dec
scas
add
mov
sbb
aas
pop
mov
sub
cwtl
pusha
lds
out
jae
and
adc
call
mov
add
fidivs
es
sub
xchg
jns
aaa
dec
and
jb
pop
jbe
shlb
adcb
and
loopne
mov
js
lods
push
ret
adc
dec
inc
ss
rorb
aad
sbb
mov
daa
jecxz
and
or
push
lea
sub
mov
mov
les
dec
stos
pop
or
scas
mov
test
loop
sbb
ja
push
sub
or
ret
cmp
mov
or
fidivrl
mov
cmp
repz
and
les
xor
aaa
sub
jo
iret
push
mov
mov
push
iret
loopne
add
scas
cmp
cltd
shrb
sbb
pop
dec
test
pop
outsb
lahf
test
sbb
push
fmul
xchg
adc
mov
cmp
loopne
loopne
adc
ss
jmp
sub
adc
dec
sarb
negl
js
sub
lret
dec
xchg
adc
jp
push
or
add
cmp
cmc
inc
insl
ljmp
pop
xchg
sub
insl
mov
data16
pop
adc
xorb
sbb
rolb
and
cmp
add
subl
je
xchg
jmp
xor
fldl
inc
and
inc
ret
mov
push
sub
lret
lock
add
inc
or
jmp
sbb
test
adc
and
lret
fistl
adc
inc
xor
dec
cltd
int
lahf
sbb
push
loopne
push
jge
cmp
jnp
pop
and
sbb
xorl
movsl
mov
call
das
lea
jle
rorl
or
add
popa
mov
dec
push
push
bound
popf
cmp
scas
fcomps
gs
out
mov
daa
jecxz
test
mov
push
xchg
in
fidivs
dec
sbb
cltd
lcall
pushf
or
jge
mov
push
hlt
cmpsb
adc
jno
push
or
mov
test
jne
lods
js
popa
jae
call
inc
jl
adc
das
lock
stos
pusha
xchg
ja
mov
lock
scas
and
popa
pop
xor
xchg
shl
aas
in
lods
test
mov
push
rcl
mov
inc
pop
pop
jnp
lds
cmc
push
mov
push
hlt
in
addb
pop
push
popa
out
daa
call
popa
lret
sti
in
adc
shlb
add
loopne
adc
jno
inc
xor
jmp
imulb
jecxz
or
stos
adc
mov
fadd
leave
fnstsw
addl
dec
xchg
shlb
add
jne
call
addr16
test
std
xchg
test
mov
aam
pop
data16
or
push
xchg
cmp
movsb
xchg
outsb
lahf
and
ficomps
into
call
adc
imul
fcmovnb
sub
iret
sub
and
ja
inc
or
ss
add
fdivl
stos
dec
push
mov
ss
xor
pop
fwait
in
and
aad
sbb
lock
xor
leave
mov
mov
ror
pop
or
inc
orl
idivl
pop
and
fstpt
add
xchg
mov
pop
loop
movsl
rolb
push
or
inc
fimuls
addb
sbb
jnp
add
test
rol
dec
inc
pushf
xchg
mov
add
add
jp
inc
in
add
add
ret
loope
faddl
lock
or
inc
cmp
rol
into
insl
dec
push
xchg
inc
mov
loope
mov
pop
lea
sarb
sbb
inc
add
or
dec
daa
or
scas
bound
nop
stc
or
and
outsb
sbb
insb
test
xchg
sahf
sbb
movsl
dec
shlb
out
pop
popa
test
shr
pop
orb
dec
test
and
or
sbb
push
cwtl
push
jnp
push
cld
xchg
adc
sub
sbb
add
popf
mov
dec
sbb
push
pop
pop
test
pop
test
dec
js
pusha
adc
mov
xchg
inc
stos
push
stos
xchg
out
lret
cmpb
dec
mov
push
aas
dec
inc
adc
xor
cmpsl
popa
or
test
adc
sbb
inc
jns
fldl
adc
cmp
lret
xor
adc
sti
js
loop
es
cli
lret
lea
sbb
inc
scas
pop
mov
subl
pop
es
jne
andl
insb
and
cwtl
jbe
ss
movsb
jmp
pusha
push
sub
dec
add
push
add
adc
or
mov
pop
scas
enter
pusha
adcl
jmp
dec
cli
icebp
shrl
xor
push
insl
or
inc
pusha
sti
and
mov
mov
push
js
jb
sbbb
inc
mov
mov
or
inc
push
cmc
adc
xor
xchg
pop
inc
mov
add
dec
or
icebp
fdivs
dec
pop
lcall
stos
or
gs
nopl
ficomps
inc
push
ds
or
cmp
jmp
xchg
outsl
mov
js
cs
js
shr
sub
xchg
xlat
mov
mov
pop
lret
mov
insb
xor
adc
ret
pop
into
add
and
sub
or
fistpl
cli
push
mov
mull
add
out
leave
rolb
std
add
mov
or
sbb
lahf
pop
ds
lods
es
push
dec
imul
mov
mov
add
push
xlat
sub
orl
cwtl
iret
mov
pop
sbb
jg
enter
sahf
std
and
sbb
jb
add
iret
out
loopne
dec
insb
fcomi
pop
push
mov
ss
mov
and
test
lods
shll
popa
xor
pop
and
pop
pusha
or
add
out
or
sub
add
or
or
mov
and
out
test
nop
jno
dec
das
ljmp
js
dec
insl
loop
inc
mov
jge
imul
iret
mov
jl
dec
ret
jg
sgdtl
adc
add
mov
addb
mov
mov
out
loope
das
xchg
add
jb
add
jp
les
push
adcl
icebp
push
mov
popa
add
add
js
mov
jbe
pop
push
xor
rcr
or
cmp
lea
pusha
fsubl
and
and
lahf
daa
add
stos
xor
sub
push
jne
mov
pop
aaa
test
mov
fstpl
roll
jmp
cmp
sub
push
test
lahf
cmp
andl
jne
add
jb
clc
fwait
lret
daa
bound
jae
or
loopne
pop
push
fdiv
mov
inc
push
jl
jge
aas
pop
push
cmp
popa
add
es
rorb
repnz
xor
xchg
fs
lret
adc
or
movsl
sub
sbb
xlat
dec
pop
adc
js
cli
jl
aam
pop
pop
sbb
bound
ret
clc
fildll
pop
add
cmp
adc
or
or
and
jecxz
je
fwait
mov
cmp
and
int
call
aaa
pop
xchg
add
cld
pusha
cmc
xchg
add
shlb
lds
or
mov
sbb
pop
sbb
cs
adc
shrl
mov
and
inc
call
test
jl
aad
je
nop
loopne
xchg
xor
jns
sbb
fwait
or
and
out
sbb
add
gs
pop
movntq
mov
dec
imul
sub
out
xchg
push
stos
xchg
xchg
push
xor
loope
movsb
mov
xorb
add
mov
lods
xlat
add
clc
and
dec
and
cmpsl
push
insl
testl
ret
sbb
or
in
aad
addr16
mov
push
inc
out
xchg
xchg
dec
popf
mov
inc
mov
mov
adc
push
mov
or
movsl
or
jbe
push
add
daa
fmul
mov
push
mov
fs
roll
xor
test
mov
adc
or
nop
sub
add
fxam
adc
mov
sbb
inc
movsb
and
mov
out
sub
push
cs
popl
add
aaa
es
adc
jp
loope
lret
push
dec
aaa
jl
dec
or
xchg
sbb
lret
inc
frstor
pusha
xorb
lock
push
adc
inc
lret
push
pop
ja
mov
fdivl
outsl
stos
adc
out
daa
fadds
jg
rclb
movsb
pop
mov
ret
or
adc
arpl
cmovs
outsb
jmp
pop
mov
or
xor
lret
dec
lretw
pop
inc
or
out
dec
mov
push
leave
rorb
or
add
scas
sbb
inc
sbb
mov
adc
stos
or
or
lea
ja
xchg
enter
cmpsl
mov
in
push
pop
test
hlt
loope
call
mov
roll
jns
test
pop
and
sub
jbe
pop
sub
pop
add
add
mov
sub
cmpsl
movb
pop
push
lock
pushf
daa
xchg
scas
jbe
push
xchg
addr16
add
addb
dec
or
dec
insl
jne
test
or
xor
fld
ds
sbb
mov
std
bound
pop
rcrl
adc
add
inc
sub
jle
loopne
jg
incl
jno
sub
cmp
dec
sub
and
push
call
fcmovnbe
or
jo
cmp
scas
dec
scas
jae
add
add
mov
sbb
push
jno
fmull
mov
adc
subl
divl
clc
xor
dec
jl
pop
or
push
or
pop
xchg
je
dec
dec
push
lcall
add
cvttps2pi
dec
or
sub
or
add
mov
jne
pop
and
cmp
in
mov
push
imul
xlat
add
adc
shrb
mov
les
and
xchg
push
repz
dec
adc
or
xchg
push
cwtl
and
leave
add
dec
sbb
xor
test
pop
sub
addr16
std
imul
bound
mov
push
adc
lods
cmp
in
xor
add
xchg
and
pushf
dec
adc
test
mov
lret
push
jae
outsl
insl
mov
pushf
movsl
inc
push
out
dec
mov
inc
daa
inc
popf
arpl
push
xor
mov
orb
mov
fbld
xchg
aam
lock
test
mov
cmp
sti
or
push
test
pushf
lds
es
inc
jmp
stc
pop
xor
lret
cmp
inc
and
mov
repnz
and
xchg
lods
sub
pop
enter
mov
icebp
cmp
je
or
or
push
and
test
adc
cmc
arpl
push
or
nop
test
aam
sub
mov
fsubp
mov
dec
addr16
mov
andb
testb
jne,pn
xchg
gs
xor
xor
mov
jns
push
add
push
xchg
das
cld
jmp
or
cs
cmp
movsl
adc
pop
mov
mov
jbe
inc
jge
inc
shl
pop
or
adc
xchg
or
mov
jl
negb
mov
repnz
insl
imul
shlb
stos
roll
aas
mov
lock
jecxz
pushf
ds
movsb
jnp
xchg
subb
inc
xchg
inc
movsl
xchg
pop
mov
int
mov
lret
jmp
aaa
xor
mov
or
xchg
lods
push
loopne
fstp
dec
push
xchg
outsb
xor
adc
jg
enter
pop
push
pop
das
pop
add
xchg
mov
clc
jb
xchg
dec
pop
and
insl
cmp
pushf
in
dec
ror
mov
bound
pop
sbb
bound
xlat
fmulp
cs
aam
fistpl
add
inc
jnp
jnp
sub
adc
dec
or
pop
insb
xchg
adc
bound
cmpsl
lods
sub
cmp
jno
scas
mov
int3
lret
mov
pop
imul
data16
mov
add
lods
add
add
insl
mov
push
stc
add
jne
add
xchg
xchg
call
xchg
js
xchg
mov
sbb
cmpsb
sbb
sbb
mov
sub
mov
fs
dec
fdiv
mov
jb
push
mov
test
gs
leave
mov
mov
lods
sub
adc
test
dec
jns
pop
add
add
xchg
xor
jne,pt
push
cmpsb
cli
call
jae
push
loopne
testb
add
pop
sub
cmpsl
xchg
aad
mov
mov
lds
inc
inc
outsl
sbb
inc
fdiv
jb
lret
lods
inc
push
insb
dec
int3
jns
sub
dec
mov
sti
cmpsb
into
cmp
insb
gs
in
pop
mov
hlt
popa
pusha
inc
popa
jmp
pop
jae
in
in
repz
ljmp
inc
xchg
sahf
lea
mov
or
add
dec
lock
xchg
mov
out
cltd
std
xlat
lcall
leave
insb
add
insb
aaa
test
es
pop
sub
pusha
jecxz
push
and
or
sbb
jo
xchg
sbb
or
sub
cmp
add
mov
mov
dec
push
dec
stos
push
popa
push
orl
push
or
push
add
jmp
loope
enter
pop
in
sub
fwait
mov
inc
and
push
pop
popf
movl
lret
dec
sbb
push
loopne
enter
sbb
pusha
or
jle
pop
loopne
cmpb
push
xchg
xchg
sbb
xchg
sbb
gs
packssdw
lea
add
sub
fldl
outsl
popf
adc
sbb
sbb
jo
xchg
jno
or
sub
adc
lret
sub
arpl
dec
inc
outsb
or
sbb
or
dec
xchg
aam
inc
sarl
dec
add
add
add
daa
mov
and
loop
add
push
push
sub
push
ja
xchg
pop
add
xor
add
enter
pop
push
loop
mov
adc
inc
mov
test
movsl
aad
cmpsl
stc
add
sub
orl
pop
sbb
or
dec
add
jo
cmp
imul
out
loopne
test
adc
cmc
push
adc
cmp
and
add
add
dec
and
rcrl
adc
movsb
or
xor
fmull
adc
jmp
popa
adc
push
adc
push
push
pop
sbb
push
xor
and
mov
lock
xchg
jnp
jge
mov
xchg
rcl
lret
into
cmp
mov
inc
mov
and
ret
aaa
add
add
xchg
andl
daa
ja
mov
das
les
push
loopne
mov
and
lock
sbb
and
ds
shrl
add
sbb
hlt
lret
push
mov
lods
dec
lcall
pop
and
mov
movsb
sbbb
sarb
push
dec
mov
xchg
dec
cld
lret
adc
mov
sub
jecxz
or
mov
inc
aam
test
push
mov
add
movsl
adc
and
push
dec
mov
mov
arpl
cli
cmp
lods
sbb
adc
push
inc
sub
xchg
inc
daa
movsl
enter
add
mov
jb
aad
push
push
push
xchg
push
mov
loop
xor
shll
pop
cmp
push
das
jne
leave
xor
out
nop
or
sub
push
mov
mov
movsl
cld
fidivs
sbb
jne
sub
inc
cmp
sbb
fisttpl
xchg
xchg
pop
and
pop
loope
sub
adc
lods
inc
pusha
add
sbb
out
fstl
aad
shlb
gs
pop
pop
inc
jo
mov
ret
sbb
jns
dec
pop
test
lret
js
in
pop
jne
imul
dec
shrb
loope
lret
dec
jp,pn
ret
cwtl
call
cmp
dec
rclb
pop
add
xor
loopne
test
sbb
mov
repz
cmp
adc
mov
cmc
push
addr16
lds
repz
or
mov
inc
insb
xlat
test
cmp
or
leave
shrb
aaa
mov
push
or
ret
pop
xorl
or
shlb
or
jg
adc
fsub
mov
adc
imul
dec
cli
cmpb
pop
loopne
loope
pop
xor
mov
xor
and
or
adc
mov
repnz
xor
popa
and
dec
cmp
pop
and
xor
adc
jo
mov
sbbl
int
lret
push
dec
or
jl
in
test
sbb
jge
push
and
icebp
popa
sub
pop
add
test
inc
test
pop
inc
mov
xchg
jns
pop
add
ds
mov
inc
imul
adc
roll
inc
bound
out
pop
int
jecxz
adc
push
ds
mov
sub
and
or
add
mov
mov
sub
jno
insb
in
clc
push
pop
cmp
in
mov
movsb
mov
or
or
sbb
fstl
inc
popa
jne
fcoml
jne
les
or
pop
and
lret
cli
test
iret
mov
in
cmpb
mov
dec
icebp
inc
movsb
or
lret
hlt
insb
add
repz
ret
arpl
in
dec
shlb
movsl
aaa
aas
sbb
dec
lcall
aas
push
add
imul
sbb
pop
hlt
lcall
inc
xchg
cmp
sarl
ss
push
mov
pusha
aaa
ss
fst
pop
and
add
mov
pop
push
fs
sub
or
sbbb
scas
dec
xchg
add
adc
pop
out
xchg
divl
js
xor
xor
andb
jmp
fcmovnu
push
adc
pop
cmp
pop
jnp
ljmp
lea
add
pop
sub
ljmp
in
and
xor
jge
push
dec
mov
ret
adc
test
mov
cmpsl
hlt
add
push
mov
cwtl
inc
das
movsl
xchg
xchg
sub
adc
ds
mov
mov
jne
sub
or
jl
sbb
jbe
sbb
std
cmp
pop
mov
ret
cli
jecxz
in
ljmp
inc
sbb
out
imul
pop
lret
and
xor
cmp
add
lock
and
cmc
sub
push
adc
add
xor
inc
loope
int3
jge
test
daa
testb
mov
inc
imul
ret
aam
pop
in
addl
dec
jne
pushf
mov
stc
popa
cmp
nop
mov
in
aam
dec
stc
cmp
addr16
shrb
or
mov
add
pop
or
mov
and
add
out
inc
inc
sub
xor
mov
add
shl
test
mov
das
icebp
in
es
fidivs
and
push
lret
jne
sub
xor
in
test
lds
adc
dec
ffree
or
push
mov
or
mov
dec
xchg
lock
jp
pop
pop
adc
push
ficompl
mov
or
pusha
lahf
sub
cmp
mov
enter
aam
sub
pushf
pop
jnp
sub
sub
pop
shll
outsl
out
push
xor
dec
pop
fstpl
pop
add
stos
aas
and
xchg
es
adc
test
mov
outsl
je
lock
jo
popl
lcall
cmp
jmp
iret
addb
inc
xor
fcoml
pop
xor
test
mov
cmp
lahf
or
es
and
inc
xchg
or
in
adc
add
addr16
dec
in
repz
lret
shl
add
cmp
popa
push
xorb
sbb
jbe
adc
jnp
jp
out
push
and
push
shrl
pop
mov
in
add
jnp
cmp
test
js
adc
int
insb
add
les
lret
pushf
mov
clc
ja
in
or
movsl
and
jae
mov
pop
cmc
aas
roll
sub
inc
sub
adc
dec
push
pop
mov
mov
call
xorb
insb
mov
lods
icebp
dec
rorb
lods
jo
mov
jp
dec
push
repz
sbb
loopne
outsl
mov
outsb
pop
pop
xchg
daa
xchg
cmp
xor
cmpl
push
pop
inc
or
jo
jmp
mov
out
ficoml
divl
lods
mov
out
sbb
jns
push
aaa
sub
notl
js
jne
jne
push
pusha
test
xor
mov
xor
mov
push
pusha
test
ret
push
jecxz
das
add
arpl
add
data16
xchg
loopne
sub
pop
xor
leave
xchg
fisubrl
jp
or
fcmovb
dec
aad
add
dec
add
push
or
mov
dec
jg
sbb
mov
test
or
and
nop
or
push
cltd
xor
rcrl
pop
push
lods
jb
ret
dec
dec
leave
or
dec
jmp
ja
xchg
shlb
rol
imul
cmp
adc
or
arpl
test
xchg
jnp
test
lock
mov
mov
xor
add
mov
push
sbb
and
inc
leave
outsb
add
jnp
mov
nop
les
jmp
pop
fs
jb
rcrb
int
push
lahf
pop
push
cwtl
push
cli
xor
in
aaa
and
call
xor
cmp
dec
sub
jl
sbb
imul
mov
jbe
cltd
inc
fdivs
push
roll
xor
sbb
pop
cld
shlb
pop
dec
pop
add
push
xchg
loop
mov
in
mov
lds
sub
adc
sub
cmp
push
gs
add
cmp
fisubrl
xlat
icebp
jecxz
jne
sbb
es
addl
add
and
cmp
sbb
sub
mov
sub
lahf
pop
adc
and
pop
scas
les
add
imul
add
cli
push
stos
vmread
mov
scas
sbbl
loope
cltd
xchg
ret
jl
and
adc
pop
mov
mov
test
orb
test
mov
add
and
test
in
jp
cmp
add
int3
cwtl
add
insb
cmp
hlt
inc
xchg
aad
lret
lods
insl
movsl
test
xchg
push
bound
mov
add
sarl
orb
push
ret
aad
and
dec
roll
sbb
les
or
xchg
shlb
add
lret
or
mov
inc
cltd
mov
inc
cld
fiaddl
daa
mov
loope
adc
mov
dec
mov
sbb
idivb
and
test
loop
xchg
loop
bound
push
adcb
push
pop
andb
push
ret
dec
cmpsl
ljmp
add
sbb
mov
loope
movsl
dec
xor
mov
popf
fdivrl
adc
aas
push
rcll
adc
subb
jmp
fstpl
test
mov
rorb
mov
sarl
lock
sub
js
adc
pop
cmp
cmc
dec
negb
jno
loopne
sub
test
insb
sbb
push
je
pop
mov
adc
dec
xchg
inc
das
mov
add
sbbl
mov
sub
jg
jge
rorb
cmp
sub
pop
inc
frstor
lret
ret
cmpsl
jg
dec
daa
jbe
dec
adc
push
cmp
lods
adc
popa
pop
dec
in
lock
or
iret
or
orl
jb
mov
int3
popa
subl
push
fstps
or
cmp
mov
add
mov
outsl
sub
test
mov
pop
shlb
js
and
daa
hlt
adcb
shlb
push
mov
cmp
subb
add
push
and
add
in
sbb
sub
mov
sbb
pop
sub
js
rolb
inc
hlt
sar
inc
mov
insl
xchg
cmp
mov
sbb
movsw
das
loopne
inc
mov
or
testl
rcr
mov
jp
jne
leave
add
cmpsl
sbb
sub
outsb
imul
insb
or
clc
aas
dec
loopne
inc
insl
adc
ret
stc
stos
icebp
mov
sbb
mov
and
int3
push
dec
shl
ret
inc
test
push
cmp
fdivl
cmp
pop
xchg
jne
inc
popa
pop
jg
into
inc
push
xchg
out
dec
fwait
inc
xor
outsb
stos
mov
mov
inc
inc
gs
fmuls
mov
gs
jns
ret
pop
loope
popf
shll
outsl
xor
in
stos
jno
sbb
bts
out
mov
mov
bound
and
jno
in
mov
sahf
popf
mov
jae
cmp
arpl
adc
loope
ficoml
inc
imul
and
push
cs
xor
sbb
mov
push
icebp
cwtl
sub
lods
jae
jne
push
and
add
ljmp
or
jo
dec
icebp
and
or
enter
sub
xchg
mov
sub
cmp
mov
ret
mov
sub
and
insb
jle
loope
test
in
inc
stos
aas
jmp
ret
sub
push
cmp
mov
and
ret
outsl
lds
lret
inc
and
adc
push
and
and
or
adc
imul
push
jnp
fsubl
mov
add
dec
mov
jnp
mov
mov
jb
xor
push
popa
jge
clc
test
jge
xchg
sbb
pop
push
dec
lea
icebp
in
xchg
push
and
scas
add
bound
in
cwtl
sub
and
add
lret
adc
pop
push
mov
hlt
add
dec
xchg
test
xchg
inc
cltd
and
inc
xor
test
jge
dec
fiaddl
inc
or
lea
xor
sub
inc
mov
cmp
loopne
jne
cmpsb
or
push
lea
or
jmp
sbb
or
push
xor
test
and
cmpsb
adc
lock
xor
xchg
pop
ficompl
push
pop
add
cmp
mov
pop
lods
xor
sbb
test
add
xor
loop
leave
ja
mov
aam
mov
vandps
rcrb
enter
sbb
int3
je
lret
add
and
jmp
insb
sbb
lock
adc
mov
and
dec
cmp
lea
cs
xchg
inc
adc
inc
jp
lods
or
pop
xorl
movsb
inc
sbb
stos
sbb
clc
sub
js
mov
jo
orl
pop
cmpsb
pop
sbb
into
sub
cwtl
fs
movsb
add
or
test
or
dec
pop
push
xor
int
or
push
sub
stos
repnz
mov
push
push
es
fucomip
dec
pop
ja
xor
xor
stos
jb
dec
popf
pop
ss
pop
adc
cs
addr16
or
shll
dec
cmpsl
dec
xchg
lret
adc
or
cmpsb
jp
cli
cwtl
lcall
push
aaa
mov
int3
or
cmp
scas
push
fisubrl
rclb
sub
aam
enter
into
sbb
xor
sub
fidivl
sbb
push
cmp
mov
leave
jmp
dec
push
in
rcll
pop
mov
inc
loope
mov
and
pop
add
ljmp
rcrl
push
rolb
lea
cmp
sbb
loope
repnz
popa
or
fimuls
dec
xor
leave
ret
sti
mov
xchg
mov
lahf
scas
xchg
pop
and
mov
insb
push
addr16
adcb
fcmove
inc
or
mov
add
xchg
sbb
pop
mov
lcall
addl
shrb
nop
sbb
inc
xchg
xchg
nop
push
lods
fisttps
jmp
and
out
and
cmp
pop
fnsave
dec
mov
mov
enter
ret
jmp
jecxz
add
xchg
add
push
test
jnp
sub
adc
lock
and
and
lea
popf
pop
shlb
shlb
jmp
or
xchg
adc
cmp
cmp
add
movl
push
inc
pop
gs
cmp
cmpl
ljmp
icebp
rolb
and
ss
fists
inc
push
xchg
sbb
or
fs
mov
jmp
push
lret
punpckhdq
filds
stc
xchg
add
aam
sti
shlb
mov
cli
mov
mov
pop
addr16
mov
aas
fs
imul
aad
mov
leave
adc
scas
mov
scas
jmp
inc
or
mov
in
adc
lods
cmp
xchg
and
out
add
sbb
test
xor
or
or
cmpl
mov
cmc
xor
pushf
stos
cmp
icebp
xchg
rcrb
jecxz
into
in
out
adc
xchg
cltd
sti
in
xor
xlat
stos
mov
or
pop
aam
mov
jp
icebp
outsb
xor
jp
push
push
aaa
loope
sbb
outsb
popf
iret
aam
fildl
or
fisttpl
lahf
or
jae
xchg
outsb
mov
and
cmpsb
mov
fildl
xchg
je
adc
pop
push
add
test
dec
or
xchg
jno
aad
into
mov
scas
or
testb
movsl
fiaddl
out
outsb
push
lret
movsb
adc
fstps
sub
imul
loopne
stos
push
js
and
jmp
lret
insl
call
mov
mov
nop
xchg
in
xchg
outsb
lret
pop
cmp
pop
cmp
cltd
stc
mov
outsb
ja
jne
out
in
ret
jecxz
stos
pop
outsb
pop
pop
push
pop
sbb
outsl
mov
clc
shll
cli
rcr
and
pop
adc
mov
dec
add
jg
in
cmp
sbb
mov
cmc
sub
pop
mov
jmp
stc
sub
sub
adc
or
push
xchg
shrb
add
orb
push
adc
lea
fcomp
fbstp
xor
outsb
xor
xchg
jle
and
cmp
js
test
and
inc
fwait
sub
sub
ljmp
inc
xlat
xchg
xchg
rolb
pop
out
xchg
xchg
shrl
pop
enter
loope
cld
std
in
pop
rolb
popa
pusha
fisubrs
in
xchg
xchg
stos
add
bound
jl
outsb
add
push
add
stos
lcall
jo
sub
add
xchg
adc
and
mov
dec
sbb
adc
test
xor
add
pop
mov
xchg
aas
addr16
fnsave
sub
pop
add
mov
scas
xor
dec
inc
push
add
and
into
adc
lock
sarb
test
inc
movsl
adc
adc
sub
or
mov
xchg
mov
push
ret
inc
and
sub
pop
rclb
mov
out
cmpb
push
daa
les
and
push
dec
out
in
push
mov
adc
pop
cmp
pop
mov
push
addr16
push
jecxz
mov
inc
pusha
roll
in
add
xchg
dec
call
pop
and
jmp
test
sub
jnp
ja
andl
rorl
jae
cmpsl
xor
rcrl
roll
cmpsl
idivl
sbb
mov
iret
test
fs
mov
xor
je
xchg
xor
sarb
and
outsl
xchg
dec
sub
fisubl
shrl
mov
pop
loope
lds
xchg
fiadds
push
scas
xchg
lret
fidivrl
mov
xor
pop
arpl
sbb
add
arpl
lret
int
outsl
sbb
leave
aas
sbb
xchg
jecxz
sbb
adc
js
cmp
add
mov
clc
cmp
test
aas
imul
andl
rcrb
adc
loop
sub
call
lods
scas
xchg
mov
mov
mov
sub
outsb
rclb
inc
sbb
mov
aaa
into
orl
loope
lods
lods
pushf
mov
out
ljmp
scas
xchg
cmc
mov
mov
hlt
addl
push
das
add
pop
es
mov
fdivr
pushf
sarl
popf
mov
aaa
test
mov
lret
mov
stos
cmp
jnp
ret
shrl
hlt
leave
scas
jo
push
xlat
sbb
xchg
sbb
or
scas
icebp
pusha
lock
js
inc
pop
inc
inc
sub
add
loopne
adc
or
jl
push
mov
mov
mov
inc
xor
ror
nop
adc
insl
call
insb
scas
or
clc
mov
je
jmp
and
data16
stos
adc
dec
test
nop
mov
test
mov
pop
cmp
out
xor
adc
movl
add
sbb
lret
mov
shlb
data16
mov
es
mov
rolb
mov
lods
int
add
xorb
ss
jge
fcmovbe
or
push
pop
add
cmp
pop
lret
jle
xchg
sub
adc
jno
enter
arpl
imul
dec
cmp
fsubs
scas
call
fcoms
in
outsb
push
sbb
dec
loope
rcrl
mov
inc
fisubs
test
push
sub
outsl
daa
inc
dec
pushf
mov
lahf
fldl
movsb
adc
roll
pop
jge
sahf
or
mov
xchg
outsl
and
add
mov
and
cmc
mov
insl
xchg
test
test
push
push
push
aas
aad
jnp
fisubrs
push
xchg
test
adc
or
xor
scas
pop
pusha
cs
into
adc
ja
lret
add
es
sub
and
test
jge
cmp
daa
sub
cmpsl
sti
dec
ss
lea
fildl
sbb
adc
popf
jmp
call
stos
and
adc
mov
xor
lcall
or
adc
out
push
insl
lcall
fnsave
xchg
or
or
and
stc
push
sbb
int
add
xorl
and
sbb
inc
and
add
mov
inc
daa
nop
mov
xor
lret
lret
ret
and
pusha
fcmovb
jbe
mov
movl
mov
frstpm(287
mov
sbb
inc
popa
popa
call
mov
jo
out
mov
arpl
outsb
js
add
push
adcl
mov
add
rcrb
jb
ret
incb
xchg
lret
out
mov
pop
mov
sbb
es
push
lods
ret
adc
lcall
push
add
enter
xchg
or
adc
add
xchg
cmp
mov
gs
or
stos
mov
or
fisubrl
pop
or
sti
or
jo
pusha
call
adc
add
push
pop
pusha
push
bound
pusha
push
sbb
mov
xor
je
sbb
leave
pop
aaa
fs
xchg
mov
daa
sbb
rol
aad
cmp
pop
and
insl
push
or
sbb
insl
or
xchg
lret
pop
addl
jnp
aam
pop
ret
mov
pusha
push
jne
add
enter
test
add
or
add
xorb
lret
jp
aam
insl
jne
movsb
daa
sub
aam
lcall
add
imul
or
add
fstpl
sub
lea
ret
add
or
jno
xchg
adcb
aad
xorb
push
inc
dec
xchg
jmp
dec
push
rcll
lcall
lret
imul
dec
imul
rcrl
dec
mov
icebp
roll
fisubrs
xchg
ljmp
inc
inc
pop
arpl
push
insl
add
inc
jl
sbb
push
sub
sbb
push
cs
jmp
dec
aas
add
sub
and
dec
rcrb
sub
sub
rcll
daa
pop
push
xor
dec
jne
mov
mov
gs
add
imul
inc
sub
inc
ret
in
test
xor
les
ret
xor
imul
xor
cmpsb
lods
pop
adc
fisttpl
lods
add
test
clc
add
addr16
lods
arpl
mov
notl
mov
inc
xchg
jnp
xor
movl
mov
xchg
lret
sub
fcmovnb
and
fsubr
test
mov
test
and
push
insb
rcl
push
jp
ret
insb
addr16
dec
into
orl
jo
mov
aaa
xchg
inc
mov
cmp
mov
mov
andl
mov
lods
cmp
addl
dec
flds
add
addl
sbb
es
lods
std
rorl
test
mov
xorl
pop
test
and
pop
jmp
call
and
scas
xchg
pop
lret
pop
ds
push
sbb
jbe
nop
add
sbb
jno
sub
jmp
push
xchg
mov
jecxz
test
insl
and
add
clc
pop
repnz
push
inc
dec
and
mov
and
loopne
push
add
lods
mov
pop
lods
or
lret
mov
pusha
mov
and
or
add
or
xor
xchg
movsl
sub
nop
mov
cli
lret
cmpsl
lea
mov
add
les
pop
add
fsubs
lods
mov
push
pop
or
jle
and
adc
loope
jo
sbb
inc
inc
test
fbld
rcrb
test
sub
sbb
pop
add
push
inc
cmpl
adc
fbld
addl
fimull
cmp
push
adc
jg
shrl
xor
or
mov
sbb
xchg
mov
clc
sbb
or
and
sub
pop
arpl
sbb
mov
movsb
push
lea
dec
dec
mov
scas
push
ret
or
sbb
jp
adc
push
lret
sub
xchg
xchg
aad
sbb
ret
in
bound
mov
mov
int
fdiv
sbb
add
push
xor
or
mov
push
lds
push
ret
or
out
dec
movsl
add
mov
jo
cltd
and
and
jle
scas
es
sub
aad
dec
jl
dec
pop
push
jmp
fwait
pop
lods
mov
push
fdivrs
dec
and
fwait
cmp
ret
mov
cmp
and
sbb
leave
pop
scas
inc
ror
add
sbb
adc
sub
stos
aas
add
shlb
mov
sbb
imulb
xchg
dec
int
sub
lods
add
sbb
cs
imul
jmp
ja
jno
fcmovnb
add
jecxz
add
xchg
dec
sbb
xor
mov
rorb
fcmovnbe
int3
adc
push
out
dec
dec
imul
les
flds
fidivl
and
inc
and
into
inc
imul
adc
jae
and
cmp
mov
or
xchg
int
adcl
add
fistps
ret
imul
xlat
lahf
add
inc
frstor
mov
imul
and
cmp
mov
mov
shrb
or
xchg
xor
xchg
push
popa
shl
sbb
in
and
jmp
and
out
push
movsb
jnp
mov
and
xor
das
inc
jecxz
fs
mov
push
mov
ljmp
xor
mov
or
rcrb
les
dec
es
jo
pop
xor
adc
movsb
lahf
addl
mov
fs
ret
add
xor
xchg
int
fwait
popl
jl
lock
push
dec
add
xor
loopne
mov
jge
or
and
xchg
rol
lds
dec
mov
aas
xchg
fs
sbbb
fwait
lahf
lods
lods
add
mov
xor
into
out
ret
jnp
inc
pop
jns
pop
or
xchg
ss
gs
pop
gs
ret
popa
repz
adc
dec
cmp
scas
aad
lock
imul
add
lods
popf
xchg
and
rcll
mov
out
icebp
xor
xor
pop
mov
xchg
jmp
ljmp
push
sbb
in
sub
or
push
and
push
into
dec
and
jno
cmp
jp
mov
enter
js
movsl
rsqrtps
jb
xchg
outsb
lods
in
movsb
cltd
ret
js
xor
jno
mov
in
test
hlt
rol
ret
and
push
mov
mov
xchg
mov
scas
xor
or
sub
aas
xadd
mov
fsubl
mov
jge
cmp
gs
add
inc
les
inc
sbb
dec
cmp
pop
jae
and
adc
lret
js
mov
inc
push
dec
addl
mov
jmp
xor
adc
push
daa
popa
shll
sbb
sub
dec
push
add
xor
jmp
cmp
movsl
mov
cmpsl
mov
dec
mov
out
addr16
sbb
mov
leave
sub
imul
mov
outsl
int
imul
testl
add
mov
xchg
add
dec
xchg
rcrb
clc
xchg
adc
adc
adc
sub
lret
adc
and
iret
add
jecxz
dec
xchg
ljmp
movsb
icebp
lods
sub
loope
imul
clc
test
mov
or
mov
mov
jle
icebp
shlb
push
pusha
icebp
out
xor
iret
push
insb
cmc
lret
popa
jb
add
shrb
sub
xor
sub
adc
add
mov
adc
lret
lcall
or
out
mov
arpl
cmp
inc
into
outsb
push
sub
es
sbb
mov
dec
stos
sbb
je
subb
push
out
cmpsl
push
sub
dec
jns
or
or
data16
inc
pusha
or
xchg
mov
pusha
push
nop
add
pop
mov
or
ja
cmpsl
mov
gs
inc
dec
push
fcomp
fistps
stos
pusha
cmp
imul
popf
add
push
inc
fistl
out
add
and
add
adcl
and
lods
outsl
mov
mov
cmp
notb
add
in
aaa
and
xchg
dec
test
aas
pop
mov
clc
sbb
push
test
add
scas
jp
aas
jecxz
dec
xchg
addr16
into
mov
xchg
push
lret
rorl
sbb
scas
jle
dec
test
sub
pop
test
push
inc
and
sbb
push
mov
lret
add
ss
iret
stos
and
pop
and
sbb
xchg
test
mov
inc
xor
enter
mov
push
fdivrs
imul
inc
inc
pop
pop
ljmp
sub
aam
rclb
inc
xor
fnstcw
outsb
bnd
fldl
daa
add
pop
mov
fmull
pop
hlt
movsb
add
xchg
dec
mov
and
and
pop
or
mov
sbb
dec
mov
xchg
nop
cli
orl
mov
aad
jbe
les
xorl
push
sub
imul
loop
lods
or
jno
in
mov
push
mov
push
pop
fs
outsb
pusha
push
sub
out
sub
mov
pop
fisubl
mov
mov
cli
pop
cld
cs
dec
push
push
mov
jno
jbe
mov
sbb
or
test
lret
add
es
das
sbb
add
cmp
or
mov
adc
mov
das
adc
push
push
adc
mov
xchg
xor
mov
outsb
xor
cmp
test
push
lret
dec
jl
adc
mov
xor
or
les
sbb
adc
and
mov
sbb
lods
loop
inc
or
xchg
mov
je
inc
cmp
mov
cltd
xor
test
cmpsl
and
lods
inc
cmp
jmp
pop
mov
rcll
inc
mov
inc
loopne
push
push
std
inc
add
mov
test
fadds
dec
addl
rolb
hlt
fisubs
andb
jmp
ror
das
cmp
xor
jle
in
xchg
test
ja
es
aas
arpl
jae
push
test
inc
or
jnp
mov
in
sub
je
pop
mov
xorl
fwait
jnp
jge
add
ljmp
mov
xor
imul
dec
rcrl
nop
aam
ret
pop
jne
orl
pop
mov
cvttps2pi
jns
movsb
jo
lea
cmp
add
sti
mov
mov
pop
sub
mov
pop
push
icebp
and
call
mov
dec
xor
insb
pushf
adc
mov
lods
lds
push
rorl
cmp
mov
mov
or
xor
mov
inc
shrl
insl
popa
mov
mov
mov
lods
faddl
leavew
or
push
mov
mov
mov
loopne
mov
aaa
popa
push
mov
scas
inc
ficoms
xor
dec
add
add
ljmp
push
dec
mulb
adc
mov
pop
dec
jo
adc
jge
xor
fwait
mov
jnp
sbb
push
imul
dec
inc
ljmp
cmp
push
icebp
or
inc
push
push
outsb
rolb
idivl
lods
inc
cmpsb
sub
push
subl
cmp
mov
pop
mov
movb
or
bound
pusha
popf
push
adc
arpl
sub
outsl
jmp
cmp
pop
pop
hlt
lea
lcall
cmp
lcall
xchg
lds
movsl
mov
loope
inc
sub
pusha
mov
add
ret
mov
xor
push
mov
xor
push
sbb
sub
movsb
adc
jb
pop
mov
ja
outsl
lds
xor
mov
xchg
xchg
or
jnp
mov
jg
iret
push
cmpsl
mov
lahf
data16
outsb
ljmp
mov
les
fnstsw
xchg
into
mov
pusha
push
push
jb
jp
es
fnstcw
add
jle
pop
dec
sti
cmp
mov
enter
aas
inc
lahf
dec
add
pushl
in
fmull
cmp
pop
push
fisttpll
pop
cwtl
inc
pusha
loope
lea
int3
push
fwait
mov
movsb
xchg
jo
cwtl
or
enter
test
or
bound
jl
mov
fsubl
add
mov
sub
daa
cmpsb
lods
ret
bound
in
shr
test
jno
aaa
dec
inc
mov
and
test
fwait
and
insb
icebp
mov
add
add
mov
popf
pop
mov
mov
cmp
clc
imul
sub
rcrb
sub
dec
jbe
dec
faddl
movsb
jnp
xchg
mov
xchg
adc
and
xchg
loope
cmpb
fs
jo
inc
iret
and
push
adcb
das
test
ss
inc
ret
mov
ljmp
xor
sbbb
in
bound
je
loop
inc
sub
xor
lret
sub
pop
or
das
xor
int3
rclb
mov
sub
and
rorb
mov
inc
sub
in
adc
inc
repz
add
movsb
jne
adc
or
lock
rcrl
inc
xchg
and
xor
das
xchg
sub
lods
xchg
push
xor
bound
inc
outsl
ret
arpl
push
jne
and
jmp
je
mov
pop
or
add
jl
mov
push
lds
jno
loopne
scas
fstps
orl
inc
sub
push
ret
dec
push
aam
or
sbb
pop
dec
and
sbb
inc
ret
add
and
or
dec
mov
mov
mov
jmp
subl
insb
bound
add
pop
mov
pop
adc
repnz
sbb
mov
cmp
pop
je
cmp
xor
pusha
lock
xchg
es
push
fildl
dec
mov
sbb
roll
pop
jo
rcrl
stc
enter
mov
jle
mov
add
push
je
inc
or
adc
xchg
fwait
mov
andl
test
dec
xor
sub
in
addb
pop
or
add
mov
add
test
sahf
inc
inc
imul
sbb
and
dec
jmp
adc
faddl
add
nop
lods
push
subl
push
ret
or
dec
dec
pop
dec
xchg
cmp
scas
xchg
add
add
add
push
aaa
inc
push
xor
cmp
mov
cmp
push
add
mov
cmp
cmpsb
dec
out
js
add
ret
cmp
push
jecxz
sub
xor
add
stos
push
inc
inc
aas
xor
pop
aas
lret
dec
push
push
sbb
and
or
or
add
bound
imul
frstor
lods
ret
imull
cmp
add
xor
inc
fisubrs
or
push
scas
push
aas
hlt
js
test
ds
add
xchg
mov
pusha
and
loopne
xor
dec
mov
loope
pop
mov
rorl
xor
push
mov
pusha
gs
adc
loop
xor
mov
sbb
ret
add
mov
push
push
cmp
sbbb
je
aam
ret
cmp
movsl
push
insl
sub
pushf
ss
loope
sub
sahf
out
cmp
mov
in
int3
add
xor
icebp
dec
xlat
arpl
sbb
push
xchg
pop
orl
mov
ljmp
sbb
lret
dec
cmc
xchg
mov
add
xor
mov
cmpsl
adc
sub
inc
stos
cmp
or
int
lret
xor
jbe
cmp
mov
fcom
mov
mov
call
and
push
clc
jo
lahf
inc
sbb
into
push
negl
sti
dec
in
lods
xor
inc
pop
lahf
inc
mov
sbb
call
pop
out
aam
movsb
push
imul
mov
xor
sub
lahf
xor
push
out
dec
pushf
xchg
mov
test
sub
jns
hlt
add
cmp
test
jo
roll
dec
or
je
mov
mov
std
lahf
fstps
or
sub
and
inc
adc
and
or
out
dec
clc
inc
and
mov
sub
scas
mov
lods
or
and
paddusb
xchg
popa
add
push
inc
rcl
enter
sbb
xor
mov
add
mov
lcall
faddl
mov
insb
lret
and
xor
and
pop
popa
and
xchg
subb
scas
rcl
mov
cld
lods
nop
pop
sbb
mov
lds
imul
les
shrl
adc
in
adc
cmpsl
pop
add
add
and
je
aad
cld
fs
loop
sub
pop
pop
ss
hlt
inc
add
icebp
lret
xor
mov
and
stos
ret
aam
inc
push
mov
sub
pop
xchg
hlt
sub
and
aam
out
and
insl
or
sbb
rcrl
sbb
jae
and
push
jg
outsl
mov
cmp
xor
mov
inc
loopne
ret
and
fistl
daa
mov
xor
adc
mov
inc
fucom
jno
mov
jecxz
ret
lods
loop
sbb
js
lret
js
scas
xchg
insl
dec
imul
push
pusha
xor
xor
xor
shlb
fimuls
adc
mov
cli
add
hlt
push
test
xor
dec
and
loope
es
stos
lahf
xchg
push
pmulhuw
jl
test
loop
loope
jb
sbb
adc
xchg
xor
xor
pop
shlb
lods
dec
dec
add
mov
in
nop
je
mov
lcall
jl
lods
xor
jg
fucomi
pop
shr
pop
aas
add
fwait
xchg
xor
int
xchg
repnz
cmpsl
jp,pt
aaa
pop
ret
cmp
lods
push
and
xchg
fs
es
sahf
xor
pop
mov
add
shll
push
mov
and
xchg
push
mov
pop
shll
imul
xchg
cmp
popf
jno
fnsave
xor
jp
shrb
ja
aaa
cmc
test
xchg
out
add
sbb
mov
ret
push
lahf
sbb
dec
and
xchg
push
inc
fwait
pusha
fstps
jge
push
add
mov
sbb
add
push
hlt
xlat
mov
adc
cmp
jae
sub
pop
add
scas
or
paddd
rcll
and
xor
jge
jge
dec
lahf
lret
in
add
jl
sbb
xor
add
loope
jmp
stc
xchg
imul
cltd
aam
call
rol
nop
sti
jb
dec
imul
cmpsb
leave
hlt
movsl
sbb
test
dec
in
into
pop
je
shlb
adc
dec
lock
mov
dec
subl
daa
lock
mov
sbb
mov
inc
or
sub
jne
mov
jne
lods
push
lock
and
inc
mov
js
inc
jmp
je
push
adc
mov
pop
rorb
ret
mov
lods
sub
sub
cmp
cli
add
mov
dec
adc
add
add
xor
push
gs
jno
sbb
adc
mov
push
mov
push
add
mov
lret
scas
js
imul
adc
cli
cmp
xchg
cmp
jle
jp
ret
dec
imul
pop
push
mov
pop
shr
pop
pop
mov
mov
add
and
xor
sbb
fwait
pop
sub
aas
cmp
ret
mov
imul
mov
xor
loopne
movsl
das
out
sub
dec
roll
push
xor
dec
popa
add
sub
adc
jb
nop
mov
and
inc
and
cmp
aas
ret
or
gs
iret
xor
inc
sub
enter
mov
add
sub
fcoms
ds
push
and
lods
aas
ret
loopne
insl
adcl
stos
mov
push
fistpl
das
xchg
jo
cmp
pmuludq
fldl
push
cli
xchg
inc
or
jmp
jnp
adcl
rep
push
xchg
mov
jo
imul
movsb
mov
adc
popf
pop
ror
and
dec
inc
xchg
and
jo
dec
jl
add
mov
cli
lock
and
jo
jge
lods
addl
fadds
jl
into
int
xchg
int3
shr
jge
push
sarb
inc
add
cmp
cmp
xchg
pop
push
lcall
in
sti
xchg
inc
push
push
ja,pn
fimuls
push
mov
std
mov
xor
jmp
mov
cs
pop
les
sub
adc
dec
sbb
repnz
loopne
movsl
lret
data16
in
dec
jb
pop
jmp
push
hlt
test
xchg
sbb
inc
add
dec
push
or
andb
cmp
mov
add
lret
adc
mov
jmp
jns
cmp
add
sbb
sarb
cs
nop
xchg
pop
cmp
movsl
lahf
es
aaa
push
dec
xor
ret
cmpsl
and
mov
loop
test
pop
dec
sahf
or
arpl
aam
add
push
inc
js
insb
sbb
inc
divl
pushf
sbb
cmc
dec
jecxz
add
popf
xor
jb
add
sbb
adc
jne
push
pop
xlat
int3
adc
leave
cmpl
add
push
aas
arpl
and
add
and
sub
adc
imul
stos
dec
sbb
add
ret
mov
jns
mov
add
push
int
fbstp
mov
cmpsl
sti
stos
add
pop
mov
ss
pop
sub
imul
mov
lds
hlt
sbb
adc
push
fildll
or
out
sbb
inc
shrb
pop
push
sub
ss
jp
and
outsl
scas
cmp
or
cltd
sub
stos
das
inc
fwait
shrb
adc
add
out
cli
add
movb
mov
adc
sub
dec
jl
outsb
jo
mov
shll
lods
femms
cli
add
add
loope
lock
pop
mov
mov
cmp
pop
xor
test
jns
lret
rorb
js
adc
cmc
mov
sbb
shr
cmpsb
ret
xchg
out
xor
lret
hlt
add
inc
sbb
mov
movsl
and
and
enter
test
iret
enter
jg
xchg
nop
js
loope
adc
adc
or
sbb
cmc
enter
push
mov
jae
dec
js
clc
or
cmpl
push
or
shlb
scas
neg
clc
cmc
add
or
jo
ds
cmp
add
sbb
pop
rcrl
test
pop
fs
inc
add
mov
sbb
jo
sub
or
stc
adc
outsb
loopne
daa
hlt
mov
adc
adc
adc
push
lret
pop
pop
loope
aam
sbb
shll
insb
lcall
sub
inc
cli
and
test
mov
in
sbb
or
fdivl
aas
xchg
mov
pop
jb
sbbb
das
inc
cwtl
push
rolb
lret
cmp
or
shlb
inc
cs
mov
insb
arpl
in
push
push
pop
dec
and
pop
test
jno
fiaddl
push
in
mov
and
nop
inc
shlb
add
cltd
movsl
sbbb
jb
add
inc
pop
mov
add
push
pusha
add
mov
lret
out
lahf
pop
adc
and
bound
sbb
jmp
lcall
add
and
and
inc
mov
jno
test
pushw
pop
daa
ja
rolb
mov
mov
xchg
add
sbb
mov
and
dec
daa
sbb
push
adc
mov
clc
adc
in
mov
pop
xchg
popa
cld
cmc
cmp
sub
ret
filds
cmp
mov
popa
enter
mov
rorb
pop
addr16
roll
mov
inc
shl
xor
leave
in
sub
xchg
add
cld
dec
insb
add
mov
movsb
loopne
dec
adc
xor
push
cwtl
xchg
leave
mov
ret
jbe
xor
sbb
scas
push
push
pop
and
push
sub
mov
imul
movsl
icebp
adc
pop
xor
dec
pusha
insb
push
mov
inc
daa
pop
or
xor
shlb
adc
cmp
ret
cmp
test
mov
lret
cmp
shrb
loopne
adc
in
or
in
or
inc
insb
xchg
loopnew
and
sbb
popa
movsl
rcrb
push
jae
lea
dec
addr16
mov
bound
lret
jne
xchg
hlt
std
adc
sbb
add
imul
xchg
into
and
fsubl
push
ss
sub
push
daa
je
pop
pusha
adc
push
mov
add
lret
xchg
and
sbb
mov
inc
mov
jae
mov
cmpsb
cmp
in
pop
out
or
mov
cli
lret
shlb
gs
lock
push
mov
and
xorb
out
out
cvtps2pd
adc
sub
and
jbe
mov
inc
adc
mov
pusha
daa
add
ret
dec
mov
lret
loope
and
or
sub
mov
cmp
sub
roll
xchg
add
dec
ret
cld
mov
ret
leave
popa
push
and
shll
loopne
int
stos
sahf
xchg
inc
aas
andb
dec
inc
or
add
mov
andb
xchg
or
jno
loopne
cmp
lock
or
xor
mov
fidivl
mov
imul
sub
add
imul
xchg
cmc
test
and
xchg
and
and
sub
jne
sbb
pop
sbb
fwait
ss
arpl
xor
xor
fisttpll
and
or
sub
rorb
inc
mov
add
sbb
enter
jmp
adc
push
mov
pop
aam
addr16
xchg
mov
push
sbb
mov
imul
or
mov
je
adc
jg
test
xor
ffreep
shlb
xor
lret
sbb
mov
in
sbb
test
sub
mov
or
jg
pop
les
arpl
xor
mov
sbb
inc
fimull
in
add
sarb
or
int3
dec
add
orl
sbb
imul
inc
es
add
cmc
add
test
daa
scas
inc
and
mov
sub
loope
nop
push
in
jg
pop
cmc
movsb
mov
ss
sti
mov
inc
push
pop
mov
mov
inc
push
and
aad
ja
xor
cwtl
mov
sbb
xchg
aam
add
push
jbe
andl
enter
inc
aaa
pop
ss
mov
xor
fdivl
sub
pop
adc
jg
cmp
fldl
cmpsl
fisubs
xorb
aam
insb
adc
aas
and
imul
pop
xchg
jb
add
stos
out
xlat
or
adc
push
les
and
les
and
inc
sbb
std
lret
or
test
and
subb
cmc
cmp
cmp
std
outsb
jecxz
enter
pop
je
outsb
pusha
stos
das
int3
push
jge
aaa
mov
inc
sub
jp
pop
lods
or
ja
xlat
mov
in
mov
and
insb
or
mov
inc
push
fcmovnbe
popa
add
sbb
repz
xchg
std
push
push
das
xor
test
fs
aaa
add
add
icebp
pop
pop
orb
mov
xchg
add
dec
inc
movsl
cmp
and
push
push
ret
jb
push
dec
adc
jo
int
xchg
iret
lret
inc
mov
dec
mov
das
pushf
mov
jg
inc
adc
pop
shlb
fadd
add
add
dec
push
orb
test
call
cmp
dec
movsb
pop
and
incb
mov
jbe
roll
and
and
dec
cmp
pushf
push
inc
dec
ss
xchg
sub
cli
jmp
fwait
loope
cmpsb
out
imul
int
nop
lret
sbb
or
lahf
sub
add
mov
pop
dec
daa
mov
lea
mov
or
stos
cwtl
and
lret
add
out
fidivrl
shll
ja
enter
xorb
add
das
adc
or
fidivl
aam
mov
leave
aad
dec
jmp
addb
rclb
adc
jecxz
pop
xor
mov
inc
gs
dec
pop
popf
cmp
fnstcw
mov
nop
fldenv
pmaddwd
or
add
add
jl
xor
leave
lock
xor
out
jle
gs
test
mov
inc
mov
add
out
jo
adcl
test
scas
pop
sbb
inc
or
fadds
adc
imul
out
dec
add
or
pop
pop
push
push
call
mulb
ficomps
fmull
xchg
jmp
inc
ss
add
jns
sub
mov
sub
jle
pop
dec
add
jne
pop
orb
movsb
loope
xlat
jno
int
adc
inc
loope
sub
xor
mulb
push
adc
sub
xchg
add
dec
lods
or
fsts
out
in
repz
sub
cltd
or
xchg
out
xchg
mov
mov
adc
dec
sbb
xchg
cmp
sbb
roll
mov
or
mov
pusha
fs
movsb
inc
shlb
loope
push
dec
sbb
mov
aam
dec
mov
adc
or
xchg
dec
add
adc
mov
call
push
dec
add
fwait
shrb
fs
lcall
mull
xlat
insb
popa
aad
lods
or
inc
push
sub
xchg
fisttpl
cltd
and
jne
js
out
outsl
les
xor
call
pushl
cmp
mov
pop
xor
sbb
and
jno
push
cmpl
xlat
sbb
inc
xchg
in
les
test
xchg
aam
shl
mov
and
mov
das
sbb
outsl
jnp
fisubs
push
out
inc
adcb
mov
push
sbbl
pop
testb
push
adcb
xor
ret
sbb
push
aas
mov
dec
pop
and
and
sub
jp
adc
scas
fisubrl
loopne
adc
stos
ret
out
out
sub
jae
adc
cmp
je
lret
fistpll
add
mov
push
add
rcll
dec
lret
jmp
call
les
inc
cmp
push
pop
mov
je
pop
pop
cmp
push
fwait
adc
cmp
fidivl
xlat
and
sub
repz
xchg
or
and
add
jno
jbe
lods
and
adc
insl
add
fdivrs
sbb
add
push
or
ljmp
xor
add
xorb
cld
mov
inc
mov
movsl
pop
aaa
mov
ss
dec
lods
sub
test
or
arpl
xchg
test
sbb
nop
mov
gs
clc
and
sub
xchg
cmp
adc
and
movsl
into
and
inc
add
inc
inc
mov
aas
sbb
js
ljmp
es
jp
add
add
shlb
pop
out
add
jl
cmpsl
loopne
xchg
cmp
insl
push
rclb
push
das
jle
add
jecxz
andl
pop
out
xor
lods
cmpsl
divb
or
fucomp
and
xchg
add
xorb
sub
sub
jb
mov
cmp
xchg
in
in
cmpsb
pusha
adcb
or
enter
xchg
sub
lahf
add
cmpb
icebp
sahf
mov
je
add
mov
test
fwait
inc
mov
rcrb
test
int3
loopne
and
jbe
faddp
std
iret
lret
fbstp
sbb
lret
rclb
jnp
addr16
add
xchg
xor
ror
cmp
inc
aad
mov
mov
sbb
xchg
push
scas
inc
mov
xchg
rcrb
test
add
gs
ret
inc
shrb
aas
xchg
cmp
add
or
ja
call
mov
hlt
mov
xchg
jecxz
push
and
and
jo
je
jo
jnp
jecxz
jne
sbb
sub
pop
adc
loop
ljmp
push
adc
jmp
ja
ja
push
mov
sbb
cmp
add
cmp
sub
clc
mov
gs
cli
mov
xchg
lcall
lcall
out
add
add
addl
lret
sbb
in
popa
loope
jne
fnstsw
jae
cwtl
fstps
in
and
sub
andb
cmpsl
lds
arpl
cmp
add
scas
cld
add
sub
scas
loop
add
push
clc
jae
ljmp
inc
andb
dec
call
fidivl
orb
sbb
ret
inc
rolb
stos
mov
or
mov
or
andb
push
dec
cld
xchg
popa
je
mov
xchg
mov
inc
in
dec
mov
gs
mov
sbb
lock
stos
cmp
loop
mov
rolb
cmpsb
ret
adc
sub
inc
and
rcr
inc
xchg
xchg
add
xchg
xor
pusha
xchg
or
mov
mov
fisubrs
push
out
cmpsb
adc
rolb
push
mov
inc
mov
jno
imul
mov
add
bound
adc
stos
jge
push
das
dec
shr
mov
pushf
movsl
out
adc
mov
enter
cmp
add
jo
mov
inc
lret
lea
mov
popa
mov
sub
push
int3
add
es
mov
inc
jne
pop
sbb
add
add
xor
sbb
adc
add
inc
pop
sub
jno
xor
mov
push
cltd
mov
sahf
mov
push
orb
loope
adc
pop
sub
pop
add
add
and
push
sub
test
cs
fs
and
daa
ucomiss
fsubrs
scas
fsubrl
pop
mov
insb
sbb
adc
inc
aas
push
loopne
les
adc
cmpsb
dec
mov
add
mov
inc
stos
or
pop
dec
roll
sub
sbb
adc
mov
test
push
fidivl
loopne
and
push
pusha
inc
mov
je,pt
push
out
pop
inc
test
lret
add
jmp
cmp
ret
mov
jmp
xor
mov
repz
insl
std
adc
daa
and
arpl
xor
push
pop
mov
inc
stos
push
ret
pop
popa
mov
mov
loope
inc
pop
shr
jge
sbb
cmp
pop
movsb
andb
add
arpl
out
stos
push
cmp
and
cs
pusha
das
add
inc
int
mov
adc
stos
xchg
cltd
jmp
repz
icebp
fildll
pop
xchg
jge
sarb
mov
lret
sub
push
adc
lret
sti
or
jbe
les
jecxz
rcl
xor
mov
mov
add
push
or
mov
rolb
je
rorb
push
dec
stos
push
sub
jo
mov
mov
sub
pop
ds
adc
cmp
dec
imul
sbb
jp
scas
add
jle
daa
imul
dec
repnz
jmp
imul
insb
pop
ss
shlb
pop
mov
clc
iret
mulb
add
arpl
add
lock
jb
inc
sub
mov
xchg
pop
aas
rol
mov
mov
stos
push
sub
dec
jmp
lds
mov
adc
es
pop
pushl
fidivrl
push
adc
or
pop
push
mov
test
pusha
jnp
inc
inc
add
je
and
and
add
stos
push
sbb
jb
lods
add
movsb
xchg
nop
clc
and
inc
scas
fiadds
js
jge
fcmovbe
int
int
repnz
add
scas
add
and
adc
push
xor
insl
add
nop
sbb
imul
push
dec
xorb
sbb
mov
test
clc
negl
ret
mov
fmull
sbb
and
jno
aam
lock
sub
adc
sti
add
rolb
cmp
push
rcll
ja
and
jbe
rolb
add
das
xchg
and
in
adc
test
fmul
xor
bound
xchg
push
and
cmc
dec
stos
out
repnz
mov
icebp
sbb
push
mov
sbb
add
lds
lods
push
xlat
mov
pop
fs
add
ljmp
add
dec
inc
cmp
push
push
mov
jb
mov
test
ljmp
ret
sbb
imul
hlt
and
xchg
xchg
jp
xchg
lret
sub
jmp
fistpl
sbb
cmp
adc
hlt
test
inc
hlt
add
jge
sbb
add
push
out
repnz
int
and
and
aaa
jbe
mov
sub
xchg
mov
mov
adc
fisttpll
shrl
adc
add
sub
and
pusha
inc
inc
push
push
xchg
into
adcl
mov
test
loope
loop
les
xor
fs
jb
popa
flds
mov
inc
add
cmp
roll
mov
cs
mov
jne
jmp
loopne
pushf
pop
cmp
cmp
or
mov
jae
or
dec
inc
jl
inc
popf
mov
and
rorl
sbb
mov
int3
push
add
jecxz
or
in
cmp
xor
pop
sbb
insb
popf
adc
sub
pop
cmp
adc
or
xor
pop
rcll
es
pop
cmp
mov
pop
sub
les
iret
in
loopne
jmp
outsl
and
lods
xor
lret
test
pop
jne
ss
and
roll
and
test
dec
cs
cmp
adc
jecxz
repnz
add
push
int
popa
inc
in
pushf
add
fs
cltd
cwtl
pusha
or
push
cmp
fadds
js
mov
das
add
sub
lods
adcl
add
add
aad
es
adc
scas
push
pop
inc
sub
test
sub
stos
es
outsl
adc
push
push
subb
adc
es
mov
cwtl
jb
or
mov
sub
aas
or
add
sub
ja
cmp
push
jo
or
mov
test
pop
mov
inc
mov
cmpl
and
sbb
add
jmp
cmpsb
arpl
stos
cmp
dec
in
push
or
jle
jne,pn
sbb
jae
xor
divb
cmpsb
push
ret
cmp
pop
mov
call
sub
test
jns
adc
xchg
rolb
jno
sub
daa
or
add
sub
imul
fs
jle
jo
stos
add
dec
mov
dec
sub
rcll
mov
lret
adc
add
test
es
add
ficomps
pushf
inc
add
sbb
out
shlb
pop
scas
mov
and
loopne
push
add
or
hlt
cmc
inc
bound
dec
mov
scas
mov
clc
push
rcll
js
daa
sub
inc
jmp
mov
adcb
jp
add
mov
add
add
les
loope
das
ss
or
push
mov
int3
xchg
sbb
push
rolb
insb
inc
sub
decb
aad
call
dec
and
sbb
lahf
sub
cmp
arpl
cmp
jne
inc
push
mov
fdivl
add
lods
test
or
loopne
rcll
test
pop
in
movsl
xchg
ss
cld
mov
insb
xchg
popa
and
cmpb
or
fisttps
mov
loop
dec
lea
xor
loope
aas
inc
cmp
insb
xor
push
movsl
cmp
inc
adc
push
sbb
add
xchg
insl
int3
adc
push
outsb
or
mov
cmp
sub
shrb
push
xchg
fdivrl
mov
ret
add
or
mov
jle
and
and
imul
sub
gs
lea
lret
or
clc
enter
cmp
fadd
sbb
push
inc
push
xor
add
int3
push
dec
arpl
pop
xor
stos
and
and
mov
or
push
dec
and
or
push
sbb
or
and
adc
cwtl
push
sub
or
pop
sub
push
pop
mov
jle
mov
pusha
fsubrl
lahf
mov
push
fcompl
dec
loope
cmp
ljmp
xchg
or
mov
or
fimull
orl
pop
inc
sbb
xchg
clc
jp
adc
inc
pop
or
pop
bound
xor
dec
testl
add
inc
das
popa
dec
loop
adc
xor
cmp
rorb
mov
adc
dec
jns
sbb
mov
pop
movsl
test
les
xchg
std
inc
stos
push
inc
mov
outsl
adc
xchg
ret
sub
loop
or
addr16
or
mov
sarb
jae
pop
fnstcw
adc
cmpsl
jo
pop
xchg
rcll
adc
fwait
lods
subl
divl
in
adcl
movsb
xchg
cs
xchg
inc
sub
or
and
test
mov
loop
dec
popa
mov
je
sub
test
into
cwtl
sahf
insb
sbb
insl
pushf
outsl
lods
dec
int3
jo
cld
push
andl
inc
imul
arpl
loope
cmpsl
inc
jno
sbb
adcb
ror
or
movsl
inc
push
addr16
lea
pop
jae
push
movsl
sub
ljmp
cmp
dec
das
sub
mov
movsl
pop
stos
mov
inc
sbb
sti
cmp
mov
data16
push
dec
addr16
outsl
and
in
hlt
cmc
test
dec
out
jb
or
xchg
sbb
fs
das
mov
jl
test
adc
out
sbbl
mov
sbb
xchg
xor
dec
jg
mov
push
into
xchg
mov
push
movsb
add
in
pop
nop
lret
adc
or
jg
aam
mov
movhps
aad
ds
adc
cmpb
adcb
xchg
mov
or
das
jne
and
xorl
clc
adc
repz
sub
popf
stos
xor
jge
add
sub
cld
or
cmc
cmp
mov
adc
dec
jne
into
fdivl
test
mov
aad
push
and
mov
jo
sub
mov
mov
xor
xchg
adc
fwait
xchg
or
sbb
lcall
xchg
cmp
cltd
and
lds
lea
lret
add
xor
cmp
pop
xor
jno
aaa
jb
lea
pop
fwait
test
and
push
filds
xor
roll
mov
out
sub
shrl
shll
hlt
leave
aaa
scas
fwait
inc
sub
nop
cmp
fbld
lret
sbb
mov
add
sub
jnp
xlat
lret
jne
mov
mov
sub
test
add
rclb
cmp
mov
ffree
adc
adc
or
cs
lods
shl
loop
xchg
in
ljmp
sub
lret
aad
add
test
push
or
dec
roll
push
scas
cmp
insl
inc
lods
adc
cmc
std
ret
jmp
ds
xchg
inc
add
cltd
pop
addl
sbbb
iret
lret
inc
aaa
cli
call
icebp
sbb
fnsave
push
leave
sti
xor
cli
inc
aaa
in
and
or
test
outsb
push
jb
inc
jecxz
rcll
add
inc
and
jo
rcll
dec
sub
test
mov
roll
xlat
xchg
jbe
inc
scas
or
in
push
or
push
mov
jge
cmp
pop
rcrb
xchg
xor
xchg
xchg
in
fisubrs
sbb
into
dec
shrl
mov
or
and
mov
or
jno
inc
add
jae
in
or
cltd
cs
add
enter
fs
jne
out
fstpl
add
adc
adc
jecxz
stos
or
and
lret
cmovs
push
andl
aam
pop
lret
jmp
mov
sarb
jo
mov
xor
sbb
inc
pop
test
ret
sub
pop
add
sub
insl
test
xorb
int3
ljmp
mov
test
test
or
jbe
arpl
subl
push
add
mov
movsb
lods
pusha
test
mov
mov
sbb
iret
push
sub
ffree
push
insl
and
mov
divl
dec
jns
inc
fistpl
js
jno
and
adc
or
xor
pop
dec
inc
cmp
add
sarb
or
adc
test
insb
mov
arpl
inc
clc
inc
lret
je
fildl
jno
and
testl
xor
pop
clc
dec
push
fst
pop
xor
sub
push
or
push
nop
push
adc
push
int
shl
outsb
xchg
dec
pop
mov
push
add
into
icebp
in
or
mov
xor
outsl
xlat
and
es
lret
adc
in
push
push
pop
negb
sub
pusha
adc
aam
dec
clc
mov
sti
mov
dec
hlt
mov
dec
into
sbb
scas
addr16
xchg
xor
aas
fadd
xchg
inc
xchg
icebp
mov
rorb
push
incl
jne
roll
imul
mov
and
jmp
pop
test
aam
add
ficoms
add
or
testl
ret
xor
roll
rorl
imulb
ds
fidivrs
fs
dec
dec
pop
pusha
mov
and
push
pop
dec
jmp
fimull
cwtl
mov
js
or
cmp
loopne,pt
mov
insb
sbb
fwait
inc
mov
pop
add
sub
add
popa
sarl
ds
rclb
mov
dec
mov
cmp
frstor
mov
lods
jmp
jecxz
xor
clc
rorl
sub
and
push
sbb
pusha
movsb
int3
repnz
and
sub
jns
push
cmpsl
add
xor
les
pusha
pushf
add
jbe
jnp
sub
mov
push
das
inc
xchg
jmp
es
jp
lea
aas
test
dec
hlt
hlt
xchg
mov
xchg
fimuls
or
cs
jg
psubsw
jno
xchg
cli
dec
insb
xor
or
test
adc
add
xchg
cli
mov
rol
lret
sub
lret
push
loopne
cmp
fidivl
into
cmp
push
lods
sahf
stc
ret
les
pop
sarb
xchg
test
sbb
mov
push
mov
sub
and
or
xor
push
adc
dec
and
rolb
ret
lds
and
xchg
xor
hlt
aad
and
int
dec
or
pushl
and
test
test
jecxz
add
mov
dec
ljmp
ret
mov
xor
cld
mov
cvtps2pi
xchg
mov
or
test
nop
jo
inc
pop
mov
jge
cmp
jo
mov
iret
imul
sub
add
fs
outsb
dec
inc
jmp
push
fmull
and
xchg
cltd
xchg
push
or
cmp
xlat
bt
imulb
mov
cmpl
inc
dec
stos
push
and
jae
mov
adc
jo
mov
xchg
test
arpl
loop
xchg
mov
and
mov
xchg
jmp
dec
leave
cmp
xor
jno
jb
fstl
mov
in
adc
orl
xchg
sub
mov
cmp
dec
dec
jmp
mov
mov
pushf
mov
into
ds
rorb
lcall
push
add
sbb
dec
inc
and
mov
js
jb
insb
add
pop
mov
test
inc
jae
aas
shll
rcll
ja
mov
jb
lret
xchg
pop
aam
and
mov
cltd
xchg
pop
sbb
dec
push
cmp
xor
xlat
inc
ficompl
shlb
cmp
pusha
push
and
mov
addr16
test
leave
push
mov
cmc
or
sub
arpl
inc
loop
pop
cmp
mov
jg
inc
sbb
sahf
mov
pop
jp
xor
xchg
dec
jg
je
cmp
pop
enter
popf
out
sbb
ret
add
ljmp
adc
mov
imul
clc
andl
add
fistps
shr
or
imul
cmp
test
shll
fisubl
imul
or
es
cmp
adc
sbb
mov
dec
adc
dec
ret
cmp
clc
subb
jge
popa
loope
icebp
test
lret
shl
mov
pushf
rcr
addr16
fisubrl
out
lock
sub
or
in
pusha
stos
and
mov
inc
rcr
and
sbb
sbb
and
fnstenv
push
xor
pop
push
push
jnp
inc
out
add
stos
push
das
jno
push
jecxz
inc
fadds
adc
sub
in
add
mov
and
cs
or
xchg
and
xchg
scas
xchg
and
movsb
push
orb
mov
xor
insb
in
jecxz
sub
fisubs
and
add
nop
pop
xor
pusha
push
imul
xchg
jno
test
lcall
fwait
test
mov
adc
sub
mov
pop
lods
and
cltd
or
add
jecxz
mov
adc
loope
dec
or
xor
xlat
fwait
loope
or
ror
dec
ret
adc
xor
lea
push
add
mov
icebp
inc
pop
cmp
xchg
mov
inc
adc
sbb
or
outsb
lret
roll
test
inc
sub
jno
loope
clc
mov
std
in
iret
sbb
stos
insl
push
jno
sub
lret
adc
mov
jo
cmc
leave
or
sbb
mov
inc
leave
movl
mov
rorl
jo
add
test
cmp
sbb
cmp
add
js
stc
stc
xchg
jo
jo
cmp
rol
inc
popa
add
scas
mov
cmp
or
scas
add
xchg
pop
cmp
push
and
leave
sbb
jle
pop
outsb
movsl
mov
cmp
xchg
push
fistpll
sbb
and
adcl
arpl
mov
cmp
pusha
inc
inc
cwtl
xchg
push
jle
sbb
test
pop
adc
outsb
stos
push
jle
or
xor
shll
test
push
fisttpl
mov
loope
sub
stos
daa
mov
jne
adc
or
inc
and
insl
pop
xchg
jno
mov
mov
add
mov
sarl
stos
sub
call
pop
stos
fbstp
sub
outsb
sbb
mov
enter
test
das
cmp
cmp
dec
or
mov
pop
loope
ret
cwtl
or
inc
iret
or
rolb
in
lcall
cs
inc
test
shrb
test
pop
rolb
sub
stos
and
cmpsl
sub
sbb
xchg
ss
xchg
or
mov
lock
or
add
pop
xor
icebp
sub
mov
lahf
pushf
data16
adc
push
inc
loope
jbe
out
sbb
call
jg
inc
aaa
cs
fadds
lret
dec
or
lods
rolb
pop
dec
sbb
mov
add
add
sbb
add
jno
xor
ret
cmp
fldcw
inc
push
dec
sbb
adc
test
pop
cmc
adc
and
test
add
xchg
fxch
stos
imul
pop
and
fimull
addr16
pop
loope
test
or
push
dec
jl
test
mov
shlb
outsl
xchg
jecxz
addr16
cmpsl
movsl
arpl
js
movsb
loopne
cmp
and
mov
xchg
cmpb
or
lea
pusha
jo
sub
enter
sub
std
add
arpl
loopne
sbb
test
and
loopne
pop
mov
jo
inc
and
test
les
and
dec
test
test
push
add
ss
out
into
fs
ds
sbb
mov
loope
add
push
push
lahf
and
add
add
out
sbbb
fadd
repnz
jb
adc
shr
cmp
loopne
or
jb
and
add
sbb
cmp
and
call
or
cltd
aam
or
les
jbe
mov
sbb
lds
sbb
push
sbb
adc
sarb
into
push
test
inc
sbb
add
inc
fildl
cmpsb
mov
pop
xor
jmp
addb
into
repz
jns
add
inc
sbb
daa
adc
adc
dec
inc
rorl
fwait
inc
test
inc
fstps
xlat
push
lahf
xor
cmpl
pop
ss
test
les
cmpsb
rolb
xlat
sbb
loopne
dec
rolb
out
or
lods
jne
loopne
arpl
xor
mov
cmpb
sbb
inc
cmp
sub
outsb
xchg
pop
jbe
add
xorb
xor
sbb
jo
insb
jecxz
inc
inc
jb
ret
adc
sbb
mov
psrld
in
popf
ret
sub
jle
jbe
insl
inc
mov
jp
andl
inc
add
popa
jp
ja
dec
lret
mov
mov
std
add
pop
inc
adc
cmp
stos
mov
mov
mov
insl
add
add
or
lahf
fstpt
add
fsubs
pop
rcr
inc
popa
add
imul
adc
mov
sbb
push
into
ret
aam
addb
daa
xchg
out
add
insb
outsl
cmp
stos
les
out
add
das
aam
bound
jmp
sbb
and
mov
push
aam
cmp
fstpt
inc
xor
into
mov
or
push
subb
cmp
lds
in
cmpb
mov
mov
jnp
rclb
inc
mov
or
sbb
or
mov
stos
adc
add
mov
pop
loopne
adc
push
lahf
and
dec
or
in
sbb
xchg
xor
mov
sbb
pop
and
xchg
lea
sbb
pop
fldcw
and
add
inc
cmp
pop
pop
sbbl
sbb
xchg
aaa
sbb
cmp
pop
and
jnp
cli
xchg
js
inc
add
mov
xchg
sub
dec
cmp
xchg
lea
inc
bound
xor
ret
ja
mov
loopne
popf
or
xchg
cmpb
mov
addl
push
inc
loop
or
adc
lock
stos
push
xchg
adc
pop
and
pushf
mov
addl
and
jg
stos
sbb
sbb
rcll
fstps
dec
je
adc
bound
mov
add
mov
push
jp
loopne
mov
and
sub
jne
js
sub
inc
insb
adc
arpl
stc
or
jo
stc
sbb
add
xchg
push
les
add
rcrb
cltd
jnp
pushf
dec
or
push
adc
pusha
cmp
cld
or
stc
hlt
or
es
xchg
add
xchg
aas
movsl
push
adc
cmp
and
and
dec
data16
dec
add
mov
rorl
outsb
or
cltd
sbb
lahf
xchg
mov
jle
and
inc
test
mov
sub
mov
stos
add
inc
aad
sub
push
cli
xchg
test
std
addl
loop
cmc
mov
test
push
js
sub
pop
xor
inc
shll
inc
fcomip
cmp
ret
ss
movb
xchg
fidivl
dec
push
dec
mov
mov
shrb
dec
pop
adc
fwait
cmpsb
test
add
add
cltd
int3
pop
jns
push
sahf
sub
fimuls
insl
jl
add
lods
pusha
mov
andl
xchg
jp
ffree
or
es
dec
test
lock
pop
addr16
fadds
pusha
popa
sbb
shll
stos
addr16
push
push
lahf
add
mov
dec
leave
bound
sbb
jmp
xchg
ss
adc
sbb
push
xchg
lock
daa
mov
sbb
cs
dec
mov
dec
mov
add
adc
fidivrl
and
outsb
cmp
shrb
sbb
push
fiaddl
test
ret
js
sbb
andb
push
inc
dec
std
cmp
adc
hlt
int
push
adcl
stos
pop
stos
sub
pushf
mov
xchg
gs
xor
xchg
sub
mov
test
and
loop
push
xor
and
flds
shlb
add
insb
add
add
add
pushf
add
das
es
xor
xor
mov
loop
pop
adc
das
sbb
js
test
loopne
scas
push
cwtl
pop
inc
rcr
push
scas
lock
pop
cld
and
jae
mov
adc
mov
daa
sbb
nop
add
push
ljmp
js
mov
mov
clc
test
mov
add
add
jb
mov
add
sbb
jge
sub
out
mov
and
mov
daa
rolb
add
adc
sbb
adc
mov
mov
orb
scas
mull
sub
gs
xor
cs
mov
pop
ret
push
cmp
xchg
popa
jp
pop
sbb
sbb
add
inc
pop
sub
daa
push
inc
sub
push
leave
and
gs
push
js
fcomps
mov
addr16
push
push
js
addr16
cs
push
adc
add
mov
mov
cmp
jae
icebp
jno
daa
sbb
adc
and
aam
lds
sub
fmulp
aad
inc
sbb
cmp
pop
sbb
xor
inc
stc
icebp
push
leave
pop
in
ss
and
mov
inc
iret
dec
movl
lds
mov
sbb
pop
cmp
in
in
popa
xor
jns
jo
mov
lea
add
mov
es
add
sub
test
jo
cmpsb
adc
frstor
or
jecxz
cmpsl
push
addb
sub
mov
ret
ss
rorb
push
sub
sbb
leave
cwtl
mov
add
aad
out
aaa
mov
fildl
adc
mov
add
adc
mov
mov
lods
add
adc
adc
xor
sub
fdivl
pop
jmp
jo,pt
xchg
pop
aam
js
push
sbb
or
imul
and
add
shl
xor
sbb
adc
hlt
push
out
adc
lret
jnp
mov
movsb
pop
adc
push
shll
jns
jge
or
sbb
lea
cmp
and
lret
xchg
repnz
xchg
cmp
outsb
jno
inc
pop
mov
popa
test
sbb
xchg
adc
push
in
mov
jo
cmp
pop
repz
gs
add
fnstcw
fnstsw
and
xchg
leave
stos
fwait
data16
adcb
lret
xor
dec
inc
pop
or
dec
les
cmpl
push
popa
cli
mov
inc
outsl
sbb
mov
dec
in
negl
lock
fmull
add
pop
inc
js
jge
aad
add
and
cmpsb
insb
mov
add
mov
and
popa
and
leave
xchg
adc
dec
out
jo
bound
pop
or
jne
mov
rol
xor
sti
adc
push
cmp
andb
in
inc
xchg
sahf
or
mov
xchg
data16
mov
imul
stos
add
mov
daa
and
xor
xchg
mov
jno
sub
outsl
js
xchg
mov
push
fsubr
mov
mov
mov
add
cmpsb
mov
fdivr
dec
mov
pop
pop
idivl
add
test
mov
inc
add
into
xlat
inc
push
adc
push
cmpb
loope
ja
fmull
push
dec
loop
push
test
sub
add
inc
loope
and
movsb
scas
push
adc
sub
hlt
scas
test
push
and
and
addl
mov
push
adcl
imul
orl
mov
test
popa
inc
jo
lods
xor
cs
cmp
jmp
bound
or
dec
sub
and
push
pop
scas
in
jp
adc
lret
orl
repnz
pop
cmp
mov
lea
jnp
lcall
adc
es
dec
jns
pop
mov
dec
or
bound
test
push
push
movsl
adc
mov
xchg
mov
popf
popf
or
add
or
or
fcoms
imul
adc
mov
loope
test
clc
and
fcoml
sub
pusha
orb
inc
dec
and
inc
iret
scas
addl
dec
push
in
gs
stos
in
push
push
and
jo
mov
jno
mov
ja
mov
rolb
lods
pushf
ret
xchg
xlat
test
movsb
sub
lret
push
test
call
scas
push
or
inc
sub
test
movsb
add
loopne
mov
and
rorl
in
test
nop
rcl
loope
aad
xor
es
mov
mov
sub
aas
es
jl
sub
xor
mov
xchg
and
mov
insl
stc
lods
mov
nop
add
adc
fadds
mov
inc
clc
enter
rorl
mov
gs
and
in
faddl
push
add
stos
xchg
sub
pop
and
or
mov
cmpsb
faddl
and
jecxz
sub
dec
push
jmp
xchg
inc
dec
jl
mov
xor
adc
les
and
nop
inc
call
std
sbb
sbb
fsubl
fildl
adc
iret
lea
popl
mov
cmp
ja
xor
lret
xor
ljmp
push
jmp
and
xor
mov
clc
test
sbb
dec
sbb
dec
sbb
mov
mov
and
mov
jns
pop
nop
stos
lcall
fstl
loope
inc
sti
dec
loopne
loopne
sub
mov
aam
cwtl
addl
xor
inc
in
iret
mov
and
adc
ss
fdivs
lea
mov
and
shr
push
cwtl
inc
or
cmpsl
cmp
out
dec
push
adc
rcrb
mov
sub
mov
or
or
sbb
test
sbb
outsb
xchg
xor
add
ret
out
sbb
push
popf
icebp
iret
xchg
cmp
dec
jmp
call
pop
sbb
sub
icebp
inc
fiaddl
pop
mov
ss
imul
adc
add
inc
or
adc
mov
shl
xor
jne
xchg
das
test
jl
test
shrb
xlat
add
xchg
xorl
push
clc
pop
iret
add
jbe
and
leave
sbb
sbb
push
sbb
mov
loope
adc
inc
inc
mov
loopne
push
or
dec
loop
mov
sub
adc
push
mov
inc
adc
les
adc
push
popl
sbb
push
mov
and
jb
pop
negl
or
jnp
lret
fwait
ret
scas
and
adc
nop
enter
cli
loop
cmp
inc
xor
cmp
fs
iret
lds
call
and
or
jg
test
xchg
inc
movsb
mov
inc
push
ret
shlb
mov
stos
xchg
rcrb
cmp
inc
test
out
mov
xor
bound
dec
mov
sbb
fwait
jp
addb
inc
and
test
and
test
popa
adc
sub
js
xchg
in
lret
add
scas
lods
adc
test
lds
push
sarl
out
xchg
jp
sbb
jl
lods
pop
movsb
pop
sbbb
popa
pusha
jns
popf
lods
jae
inc
inc
or
mov
jbe
xchg
inc
jne
mov
or
mov
mov
sub
fadd
adc
ret
in
push
inc
jo
and
and
mov
xchg
jmp
je
mov
jmp
mov
inc
and
and
jne
arpl
or
jmp
ret
mov
loop
add
dec
sbb
mov
xchg
cmc
dec
jmp
popf
inc
mov
loope
adc
lods
inc
add
out
arpl
xchg
fcmove
push
mov
inc
add
pcmpeqb
and
add
lret
pop
repz
dec
inc
xor
xor
push
call
jmp
sahf
sti
or
jns
rcrb
pop
and
mov
jo
fmull
lcall
mov
jbe
and
inc
inc
push
inc
xchg
add
ljmp
mov
jns
xchg
xor
push
inc
stos
dec
cmpsl
cld
mov
andb
stc
pop
dec
popf
es
xor
inc
sbb
mov
rep
test
xor
mov
leave
loopne
cs
sub
pop
mov
dec
cmp
xchg
dec
pop
add
or
lret
sbb
xchg
cmp
add
lods
xchg
or
das
sbb
addl
loop
mov
add
or
and
in
cs
ret
jo
test
loop
movsb
add
sbb
mov
and
stc
jno
xor
fcomps
add
push
mov
sarb
jp
cmp
pop
std
lea
inc
cmp
inc
in
loopne
mov
xchg
aas
push
in
lret
rorl
add
cmp
pop
movsb
lret
int3
and
jo
jnp
jo
jno
shrb
xor
or
mov
ljmp
push
in
and
fsincos
aad
lahf
aam
cmp
pop
ret
or
mov
lods
stos
xor
cmova
shll
gs
jmp
mov
push
xchg
push
push
fiadds
push
dec
mov
dec
out
cmpsb
test
lcall
adc
adc
pop
cmp
arpl
insl
data16
loope
jbe
shlb
out
ret
stos
or
add
jb
ljmp
fdivrs
mov
and
cmpsb
cs
test
pop
dec
xchg
and
adcl
adc
inc
push
cli
push
jo
inc
ds
and
pop
inc
add
jecxz
pop
sub
cmp
mov
inc
lods
aas
test
mov
dec
or
sbb
push
inc
sub
add
jne
loope
xlat
sub
test
or
adc
sbb
xor
add
and
movsl
fcmovnb
repnz
aam
sub
lcall
add
add
fsubrs
adc
into
in
fstl
testb
mov
lret
pop
fcomps
popa
testl
add
jnp
push
pop
sbb
sbb
ffreep
xor
mov
jo
bt
lcall
test
cmp
adc
jecxz
mov
push
add
dec
push
sub
push
and
sahf
lea
fisubrl
adc
jbe
icebp
outsl
jno,pn
adc
dec
movsl
test
faddp
das
adc
sar
ret
push
adc
inc
sbb
cli
adcl
sub
out
xchg
sbbl
fmulp
out
mov
jp
and
fstpt
jle
rcrl
sahf
pop
jg
jnp
je
movsl
repnz
movsb
loopne
mov
push
scas
xor
mov
rcr
or
subl
push
mov
pusha
imul
add
jne
bound
lahf
test
push
jnp
mov
es
into
bound
xchg
shlb
cmp
test
xchg
jo
into
fsubs
mov
push
and
fisubrs
fldenv
cmp
push
imul
cmpsl
jne
push
ret
rolb
arpl
imul
int
adcl
in
jmp
aam
aas
mov
xor
mov
sub
pop
or
loop
lea
scas
jno
movb
sbb
mov
ljmp
test
cmc
ret
pop
or
bound
stc
sbb
push
or
xchg
cs
sub
push
lret
enter
fbld
xor
add
scas
lds
cmp
scas
lods
lods
pop
push
rcll
roll
pop
pop
test
xor
lret
icebp
xchg
mov
rcrb
xor
out
adc
add
adcb
leave
dec
dec
push
add
leave
add
shlb
icebp
sub
stos
add
or
adc
sub
xchg
mov
stos
and
add
mov
or
add
mov
adc
lods
popa
andb
inc
pavgw
add
dec
daa
movsb
repz
cltd
mov
enter
pusha
shl
push
jecxz
or
and
icebp
popf
mov
jo
mov
movsl
add
sub
and
ss
jg
push
sbb
js
jbe
adc
lods
pop
cld
push
and
jb
push
xchg
xchg
xchg
pop
add
or
mov
sub
pop
aaa
sub
pusha
mov
and
adc
arpl
pop
push
gs
sub
push
lcall
add
pop
or
les
jno
and
ret
fcomps
pavgw
push
add
pusha
inc
add
test
shll
pop
shrl
mov
push
add
xor
jmp
sti
out
pusha
inc
xchg
test
shrb
lret
arpl
insl
std
fsubl
adc
cli
inc
cmp
and
addl
xor
lea
lea
icebp
out
lret
jo
mov
test
adc
adc
mov
push
movsb
push
mov
mov
push
or
cwtl
sub
dec
mov
push
add
movl
dec
sti
pop
cs
xorl
or
add
daa
dec
bound
and
adcb
mov
dec
jmp
xchg
add
or
add
add
mov
inc
xor
and
jo
ret
sti
sahf
sbb
stc
je
dec
loop
adc
and
sub
xor
leave
sub
inc
add
xchg
repz
cld
test
aas
iret
cmp
fwait
xchg
or
stos
and
out
pop
sarb
mov
xor
xchg
dec
lock
and
imul
xor
jmp
dec
or
cwtl
mov
cmp
pop
movl
test
fwait
jo
jbe
mov
mov
add
mov
pop
mov
test
add
cmpl
leave
std
aad
mov
rcrb
sub
arpl
pop
pop
and
dec
add
dec
inc
bound
jno
mov
and
nop
dec
jp
or
push
les
xor
add
out
inc
sbb
call
add
lock
sub
mov
inc
jb
lds
hlt
xor
mov
xchg
xor
mov
inc
xchg
push
jo
hlt
dec
adc
add
shlb
xor
sbb
pop
mov
fnstcw
mov
adc
pop
movsb
xchg
push
pop
and
out
add
or
das
rcl
xchg
stos
mov
pop
pop
mov
stos
cmp
adc
aaa
mov
punpcklwd
ret
icebp
andb
andl
stos
and
insb
and
add
or
pop
mov
mov
adc
lahf
xchg
imul
lea
xor
mov
imul
and
adc
and
dec
test
pop
xor
or
add
addr16
sub
add
mov
xchg
sbb
cwtl
mov
add
push
mov
cld
pop
fildl
out
mov
jno
push
or
push
or
divl
arpl
insl
sbb
cmp
hlt
aad
mov
or
inc
push
negl
imul
stos
sbb
jno
mov
inc
and
jbe
xor
or
rcrl
rclb
and
or
inc
cmp
add
sahf
lock
add
or
xor
pop
rclb
in
and
push
js
cmp
test
sbb
test
inc
sbb
imul
mov
jecxz
xchg
nop
mov
mov
adc
push
inc
mov
repnz
add
fsubrp
add
xor
push
imul
lcall
cmp
insb
or
test
cltd
push
xor
out
dec
cmp
pop
xor
aaa
out
add
frstor
mov
xchg
cmp
xor
xor
adc
sbb
cmp
loop
push
stos
lcall
test
cmp
cs
cmpsl
rolb
icebp
and
lahf
fists
sar
add
lret
popa
popf
and
std
mull
sbb
pop
mov
enter
pusha
adc
andl
dec
add
adc
sahf
rcrb
inc
dec
dec
rclb
and
pop
test
gs
jecxz
movups
jb
xorl
data16
or
jp
insb
jno
shlb
push
sub
xchg
add
or
xor
push
mov
loope
fisttpll
scas
and
add
dec
data16
sbb
xchg
jmp
dec
jne
push
dec
sub
scas
inc
dec
push
scas
adc
inc
cmp
cmovo
leave
fwait
test
aad
out
pop
daa
adc
dec
sub
orb
inc
push
xorl
pop
dec
notl
and
add
shrb
inc
jge
dec
cwtl
movl
dec
rclb
scas
cmpsb
inc
sub
repnz
add
mov
and
insl
lock
cmpsb
mov
ret
decb
mov
movsb
inc
ret
ss
es
outsl
inc
mov
mov
mov
add
inc
xor
xor
cmp
push
lcall
jns
pop
scas
lret
dec
xor
repnz
mov
sub
and
or
std
lds
imul
dec
lret
sahf
cli
add
xchg
or
ss
dec
movsb
sbb
push
mov
and
test
fsubrs
and
sti
mov
xor
outsb
out
or
les
nop
mov
mov
add
push
icebp
and
sub
inc
xchg
mov
flds
xchg
cmp
mov
mov
jo
xor
push
fnstenv
push
or
sub
icebp
dec
or
mov
cmp
mov
dec
add
fs
add
sub
jns
dec
pop
sbb
mov
or
and
jecxz
mov
in
push
out
int
xor
daa
cmp
mov
fcoms
sahf
mov
cs
test
cmpb
adc
mov
adc
mov
call
adc
dec
bound
add
jb
pop
aaa
add
dec
test
mov
aas
jne
clc
jl
icebp
adc
jmp
sub
sti
fdivl
ret
jo
ret
pop
inc
push
jecxz
add
jecxz
mov
sbb
xchg
push
add
pop
and
in
ljmp
and
add
lret
dec
lahf
and
rorb
mov
and
test
insb
inc
inc
ja
out
push
add
flds
lret
xchg
lds
sti
push
leave
mov
and
xor
lds
jnp
lock
sub
jge
arpl
out
mov
and
sbb
xor
pop
scas
jae
or
loopne
mov
mov
inc
inc
rcrl
xor
mov
or
dec
fwait
xchg
mov
mov
push
or
pushf
inc
mov
lods
lock
frstor
adc
cmp
mov
sti
js
mov
inc
jecxz
aaa
sbbb
loopne
sbb
add
test
dec
dec
add
in
loopne
jecxz
add
ret
loope
icebp
or
fsub
sbb
ljmp
add
addr16
xchg
loope
push
add
out
adc
in
and
push
or
mov
jb
mov
fistpl
and
add
jne
mov
push
lds
xchg
inc
gs
dec
pop
add
jae
dec
aad
stos
or
or
or
testb
inc
testl
mov
stos
xcrypt-ecb
cmpsl
mov
dec
popa
popf
ret
loope
push
mov
arpl
jne
lret
sbb
das
shll
aam
add
cmpsb
mov
in
fdivrl
lods
dec
xchg
ss
das
pusha
and
mov
pusha
cmp
movsb
dec
or
shrl
sbbl
inc
stc
icebp
xchg
movsl
mov
sbb
pusha
mov
sahf
mov
ret
add
ret
aam
bswap
adc
xchg
and
sub
xchg
dec
clc
leave
push
cs
dec
mov
jns
addl
pop
pop
arpl
cmp
add
ret
and
adc
adc
or
or
and
shll
test
jecxz
pop
xor
je
insl
insb
inc
and
and
movsb
stos
jmp
aam
sub
fs
xchg
mov
fmull
imul
out
mov
insl
push
fildl
jg
pop
ss
xchg
shlb
cmp
pop
adc
inc
jo
mov
and
push
xor
adc
cmp
ret
pop
inc
and
pop
adc
add
sub
xchg
ret
push
bnd
pop
mov
mov
shrb
xchg
aaa
sbb
in
dec
inc
adc
push
out
outsb
jno
ret
scas
hlt
push
aam
ss
gs
ret
xor
pop
push
inc
add
sbb
mov
cs
mov
sbb
mov
aad
or
fmuls
pop
and
or
dec
cmp
push
add
xchg
lret
aas
push
mov
mov
jne
pop
call
outsl
rclb
fidivl
xchg
jmp
fisubs
xor
and
and
push
lock
shr
call
sub
jecxz
cmp
ret
fisubl
mov
insb
or
add
xor
into
pop
adc
mov
xchg
xchg
cmp
mov
pop
leave
ss
fcmovnbe
loop
std
test
daa
add
insb
sarb
sahf
scas
scas
and
les
push
mov
dec
gs
sub
push
mov
test
fcmovbe
pause
lcall
mov
test
cmpsb
nop
and
add
sbb
in
lahf
outsb
mov
divb
repz
cmp
adcb
sub
or
imul
jecxz
xchg
inc
adc
push
or
xor
inc
icebp
mov
and
clc
adc
test
jbe
in
scas
loope
add
loopne
xor
out
xor
rcrb
cmpsb
add
jecxz
add
sbb
js
mov
out
fmulp
or
cmp
in
gs
add
jecxz
push
mov
es
mov
xorb
pushf
popa
aam
lods
xchg
shrb
int
adcl
out
add
mov
fldenv
add
xor
lret
add
in
ror
and
ret
pop
dec
repnz
mov
andb
add
jae
mov
and
mov
das
shll
sub
dec
push
and
les
add
dec
shl
aam
call
outsl
fwait
and
addb
negb
adc
mov
or
inc
dec
mov
inc
xchg
sub
aad
test
jl
add
std
lret
xor
jo
roll
and
dec
mov
dec
arpl
clc
or
sti
lods
mov
stos
cmp
popa
dec
scas
icebp
add
push
and
jg
shr
popa
xor
sub
out
shl
jnp
add
jbe
outsb
and
adc
cmp
call
enter
shlb
lods
adc
cmp
fimull
and
ret
loop
inc
add
fdivl
push
dec
je
mov
dec
imul
loope
loopne
fcompl
xor
add
jl
xchg
sbb
ljmp
shll
sub
dec
les
add
sti
adc
cwtl
and
push
ret
mov
cmp
adc
sub
loop
jmp
aad
push
xchg
push
mov
cmp
sub
inc
add
ss
dec
jno
je
push
add
pop
xor
fistps
pop
sbb
popa
xchg
out
loope
dec
out
lods
mov
in
or
loop
dec
cmc
loopne
push
pop
mov
cmc
cli
imul
add
mov
out
loopne
xor
ret
push
fsts
add
pushf
ljmp
adc
cmp
xor
and
add
jp
lcall
enter
mov
xor
addb
jle
and
pop
sbb
enter
sbb
nop
dec
imul
movb
xchg
std
pop
sbb
das
cvtdq2ps
cmp
sbb
jge
in
and
xchg
add
sti
cmpsl
push
adc
movsl
daa
fnstenv
cli
js
mov
fs
fisubl
fucom
mov
jae
jl
jl
addb
enter
inc
icebp
lods
dec
sbb
jo
cmp
mov
cmp
dec
pop
in
es
sbb
dec
push
fbstp
inc
xchg
lret
jg
scas
push
cs
fidivrs
sub
push
ljmp
push
or
xor
jo
int
hlt
lods
je
fwait
add
mov
ljmp
data16
pusha
push
outsl
jmp
inc
pop
mov
clc
add
test
push
fs
xchg
sub
or
jl
jmp
sbbb
xor
lods
add
adc
data16
cmp
xor
shrb
xlat
outsl
inc
ja
push
inc
std
adc
sub
and
call
xor
les
xor
lods
xlat
add
push
cli
pop
lret
push
xlat
push
pushf
popf
push
dec
jo
adcb
outsl
es
inc
or
xor
jmp
arpl
jl,pt
les
dec
cs
jbe
js
jns
push
pop
je
ret
rorb
sbb
cli
inc
js
push
mov
mov
out
ret
add
dec
or
add
dec
pop
pop
add
dec
int3
xor
xor
sbb
es
shlb
push
sub
xchg
xchg
xchg
xchg
xchg
inc
lock
outsl
xchg
pop
mov
add
jae
in
lods
jecxz
mov
movsl
jmp
jp
into
insl
hlt
rcll
and
jl
daa
test
sub
cmp
in
add
pop
rcll
pop
adc
jo
das
idivl
neg
xchg
cmp
push
in
add
ja
ja
lret
fdivrl
dec
insl
pop
loopne
test
add
xor
lahf
dec
push
fidivl
test
test
test
addr16
mulb
adc
vmread
js
xor
js
icebp
add
daa
adc
inc
pop
js
je
cmp
daa
lret
rorl
cmp
call
repz
sbb
add
popa
inc
xchg
cmpsb
adcb
ficompl
sahf
inc
xchg
js
sahf
and
xor
xor
out
add
dec
test
enter
pusha
xor
in
and
pop
ret
jecxz
repnz
ljmp
js
xor
sub
test
pop
bound
jo
push
sbb
cvtps2pd
sti
sub
sbb
test
or
add
and
sbb
or
or
adc
addr16
push
inc
and
lret
jbe
sbb
sub
inc
mov
mov
adc
inc
pop
outsl
repnz
jle
arpl
and
subb
ds
xor
or
inc
sub
mov
fisttpl
movsl
jl
rcrb
mov
repz
arpl
loop
mov
addb
or
fisubrs
push
add
rorb
inc
mov
stc
xor
imull
mov
xchg
mov
dec
xor
stos
add
cmpsl
dec
pop
test
loope
aad
fsubs
and
scas
fcomps
movl
sti
vpminsw
cld
mov
orb
and
and
push
sbb
dec
and
xchg
roll
adc
jge
int
loope
fwait
test
fistps
outsl
push
in
inc
and
xor
mov
pushf
lock
sub
push
ljmp
push
jmp
pop
jecxz
lds
cltd
aam
push
xor
mov
dec
xor
adc
bound
mov
lock
mov
mov
add
xor
cmp
sbbl
imul
adc
add
add
push
nop
jo
adc
fcompl
faddl
sub
push
ret
mov
push
dec
sbb
pop
mov
insl
cmp
imul
and
js
dec
fldcw
jb
iret
fs
lret
sbb
je
loopne
and
ret
add
mov
mov
je
jl
add
xchg
jecxz
jecxz
jo
popa
fs
ficoms
outsl
loop
sub
ret
stc
popa
add
rcrl
add
or
mov
mov
inc
dec
or
sahf
mov
xor
popf
test
jns
out
add
aas
stos
mov
jb
call
cmp
or
and
enter
popa
xchg
dec
imul
inc
adc
sub
add
sub
imul
sub
xchg
pop
aaa
mov
stos
loope
inc
ja
jno
adc
cltd
add
dec
cmp
shrl
mov
mov
fxch
cld
fisubrs
jecxz
add
lret
or
ficompl
popa
ret
add
mov
mov
pop
mov
imul
inc
push
sahf
out
inc
data16
push
lret
pop
imul
pop
cmpl
mov
rclb
pop
out
add
push
test
mov
mov
hlt
inc
cmpsb
cmp
or
test
cmp
sbb
sbb
pop
mov
jl
add
adc
mov
or
xor
pop
xchg
fdivs
pop
ljmp
add
nop
or
and
sbb
dec
and
adc
jl
addr16
movsb
mov
mov
adc
push
adcl
int3
inc
sub
adc
cwtl
mov
cmp
pop
into
aaa
adc
push
push
mov
inc
push
cmp
and
ljmp
xor
ljmp
sti
hlt
add
lret
ss
and
add
xchg
jo
loopne
jp
mov
jge
mov
sbbl
mov
fsubrl
aas
add
loop
das
or
test
push
js
mov
and
pop
push
loop
clc
movsb
aas
adc
loope
stos
rcrb
cmc
adc
sub
jnp
inc
mov
sahf
mov
cmp
adcb
and
pop
nop
test
sub
push
xchg
or
pop
add
mov
pushf
or
cmpsl
push
lods
push
movsl
inc
inc
bound
mov
and
add
test
cs
mov
xor
andl
cmp
cs
push
test
mov
call
or
jne
sbb
cmp
icebp
fmuls
emms
mov
add
addl
dec
mov
xor
add
dec
pop
jne
popf
out
pop
loope
xor
pavgw
jg
jge
and
jp
pop
mov
mov
test
leave
ret
push
ljmp
insl
and
mov
cmp
push
jo
pop
sbb
cmp
push
addr16
push
inc
int
lock
xchg
push
movlps
cltd
js
sbb
push
out
in
popa
mov
push
cs
loopne,pt
ret
shll
lret
jb
lods
addl
push
roll
mov
push
imul
cli
pusha
sub
mov
pop
jge
ret
push
jno
test
js
dec
cmp
mov
iret
leave
frstor
rcrb
bnd
push
fldl
lahf
xchg
mov
call
push
out
pop
mov
ljmp
jb
push
loope
add
inc
sbb
jl
adc
xchg
mov
dec
add
mov
lods
inc
sub
lock
xchg
test
or
scas
cli
jb
xor
dec
jb
inc
mov
icebp
movsb
insl
hlt
mov
leave
sbb
jae
jp
push
daa
xchg
adc
mov
lret
loope
mov
xor
lret
adcb
pop
sahf
imul
dec
xlat
add
and
loopne
aam
mov
add
sub
or
inc
movsb
xchg
mov
and
xorl
out
pop
movsb
push
jg
or
sbb
int3
icebp
xor
negl
add
cmp
ret
jg
pusha
ljmp
movsb
ss
in
pop
inc
les
and
icebp
dec
rcl
xchg
andl
shll
add
xlat
std
fildll
adc
push
ficoml
jb
xchg
notb
xor
sarl
mov
cmp
js
jo
jp
xchg
mov
add
leave
mov
loop
ds
in
adc
and
fnstcw
mov
ret
cmpl
jo
dec
loopne
xor
add
mov
and
push
push
scas
push
push
adc
adc
cli
addr16
in
and
sbb
add
sub
aas
pusha
mov
xor
or
test
or
pop
adc
ficompl
movsl
xchg
movb
push
mov
es
adc
xchg
fs
xchg
jmp
or
insl
mov
sbb
imul
aad
shl
cmp
adcb
insl
and
jecxz
adc
andl
gs
push
ss
outsl
scas
pop
sbb
pop
leave
jo
fsubl
push
ret
fwait
cs
inc
push
xchg
inc
ss
and
add
lret
lret
popa
add
adc
mov
jo
mov
dec
dec
aam
inc
inc
sbb
push
cs
xchg
lea
mov
add
mov
lahf
dec
fdivrl
and
das
cmpsb
dec
or
mov
out
rcrb
inc
xor
fisubrs
fxch
jmp
scas
das
add
mov
sub
inc
getsec
pop
add
call
or
out
aad
pusha
cmpsl
mov
jbe
rclb
sbb
jle
xchg
stos
and
dec
jmp
mov
sbb
cmpsl
xchg
push
aad
loope
add
adc
jno
jo
mov
es
scas
es
sub
mov
mov
dec
cmp
fcoml
mov
add
mov
xchg
jecxz
in
adc
mov
jne
add
jo
iret
dec
adc
enter
fldt
sub
or
insl
adc
xor
fs
lahf
inc
aas
or
push
xchg
sub
subb
and
dec
sub
aas
adc
out
ljmp
dec
add
push
jl
inc
dec
lock
cmp
mov
jge
pop
jbe
rolb
xchg
loop
mov
jb
lahf
pop
ror
lds
stos
nop
jb
jno
daa
scas
subl
mov
jge
cmp
mov
icebp
sbb
sub
lea
sbb
dec
mov
sti
pop
fdivs
inc
sub
iret
mov
or
lcall
arpl
add
mov
fcoml
loop
fdivr
dec
and
mov
mov
mov
jb
xorb
dec
cmp
jns
test
lea
add
shrl
xor
dec
ret
push
cmp
push
or
inc
pop
inc
das
outsb
movsl
sbb
push
lret
addb
arpl
push
dec
icebp
sub
jle
cwtl
cmp
fisubrl
pusha
inc
mov
adc
sbb
pop
pop
imul
adc
fs
repz
stc
ds
mov
inc
jecxz
stos
stc
sbbl
pop
adc
ret
imul
add
movsl
xor
xor
push
es
adc
push
xchg
aaa
xchg
or
test
gs
add
insl
dec
dec
mov
mov
cmpsl
mov
iret
sub
fdivr
das
into
xor
xchg
rorb
popf
fs
outsl
inc
mov
mov
gs
dec
stos
cmpsb
in
xlat
mov
xchg
adc
pushf
mov
sbb
inc
movsb
adc
xlat
jae
test
es
mov
add
push
jnp
imul
and
jle
mov
adc
mov
mov
loop
js
jmp
std
lods
cmpsl
cmp
pop
scas
mov
and
incl
inc
sub
mov
and
mov
lcall
mov
pop
xor
bsf
lahf
xchg
jbe
inc
adc
sahf
adc
pop
mov
xlat
adc
mov
adc
dec
add
adc
or
push
xor
daa
add
test
and
popa
gs
repz
sti
mov
mov
adc
lret
xorb
push
daa
cmpsl
aam
shl
adc
fldl
cmp
inc
int
insb
ret
mov
sbb
xor
mov
or
push
mov
repz
jecxz
andb
push
jo
xchg
movsl
xor
fisubs
movsl
pop
fwait
inc
or
insb
lock
andnps
cmp
repnz
push
das
outsb
lea
jb
out
and
ds
xchg
pop
add
test
sbb
add
inc
insl
push
insb
js
inc
or
jmp
fwait
inc
sub
mov
shlb
dec
int
adc
add
mov
loopne
cmpsl
arpl
mov
or
bound
push
orb
sbb
aad
call
mov
mov
xchg
aas
adc
and
push
pop
aam
inc
add
rorb
push
sbb
insb
dec
inc
or
mov
out
je
inc
insl
or
js
int3
or
push
loop
xor
mov
cwtl
adc
imul
dec
xchg
mov
sbb
pop
xchg
mov
insb
test
mov
sub
xchg
sub
test
aad
mov
les
adc
rcll
jmp
mov
dec
clc
arpl
xchg
push
pop
sti
repnz
test
popf
ret
cmp
xchg
pop
xchg
or
inc
jmp
aam
mov
sub
lret
push
xchg
rcl
push
in
in
in
pop
or
mov
rcll
xchg
fsubrl
shl
outsl
aaa
and
and
pushf
sbb
inc
js
mov
hlt
cmpb
lret
icebp
mov
xlat
and
pop
dec
enter
mov
or
sbb
mov
lret
cli
inc
mov
mov
nop
push
shr
inc
inc
jl
pop
js
ret
mov
sbb
or
adc
into
and
imul
lcall
or
pop
fidivs
outsl
xchg
sbb
xor
insb
enter
adc
outsl
mov
shrb
pop
fs
rorl
inc
sbb
sbb
xchg
popa
addr16
or
lods
fcmove
in
pushf
xchg
mov
mov
pop
xchg
popa
popa
xchg
popa
xchg
push
sub
push
stos
and
add
lahf
xchg
out
scas
jne
add
ffree
les
push
dec
aam
popf
inc
mov
daa
jae
add
sbb
or
adc
pop
jg
rclb
addb
or
pop
cli
and
mov
imul
sub
pop
cmp
pop
lods
call
sub
nop
sbb
sbb
jl
fsub
or
and
xchg
icebp
loope
cmp
mov
leave
pop
inc
add
data16
pop
cmpsl
xor
xor
aad
push
add
adc
ret
mov
cmp
clc
scas
fidivl
mov
inc
test
aad
inc
in
lea
loope
or
in
lods
or
les
insl
mov
xor
gs
add
std
pop
inc
sub
push
jae
inc
inc
mull
push
inc
test
and
sti
mov
stos
xchg
mov
adc
orl
cmp
xchg
lea
les
imul
fcmovbe
cmp
jbe
scas
mov
or
mov
andb
rolb
insl
les
leave
pop
orl
sahf
lods
lret
jp
gs
lock
inc
jmp
sti
ret
nop
fcmovb
hlt
es
xchg
jg
inc
and
shlb
add
fwait
push
add
repnz
xor
cmp
and
mov
arpl
pop
push
push
pop
mov
lret
sti
je
push
dec
lds
adc
or
adcb
push
pop
jl
ret
add
das
sub
dec
add
subl
ljmp
jg
push
sbb
movd
les
mov
nop
inc
sbb
enter
das
inc
inc
in
clc
and
mull
sub
ds
outsl
mov
testl
cmp
in
gs
dec
mov
bound
push
pop
or
outsb
jo
ljmp
fwait
stos
push
in
sahf
in
add
in
xchg
ds
adc
mov
lret
cs
test
psllw
mov
mov
mov
nop
add
popf
adc
add
push
loope
jo
sub
notl
fistpll
push
jbe
outsl
jne
jns
or
ret
push
imul
inc
in
xor
aas
aam
ret
mov
inc
fadd
and
adcl
jae
add
add
xor
mov
and
popf
mov
test
mov
push
cs
aam
or
add
mov
cli
and
test
dec
ds
cwtl
call
test
sub
mov
jecxz
inc
and
inc
cwtl
sbb
fidivl
sub
movsl
insl
add
jno
addb
ret
cmpl
xor
xchg
jbe
jns
fnstenv
js
pop
je
loop
sbb
inc
loop
add
push
and
out
push
xor
jne
dec
movsl
xor
cwtl
cmp
sbb
mov
nop
les
bound
das
mov
lret
das
add
or
jecxz
lods
mov
cmc
out
aas
mov
sbb
rorb
xorl
xchg
push
sarb
movsl
repz
dec
add
push
movsl
mov
iret
movsl
fadds
lcall
and
adc
and
scas
mov
and
cmc
or
pop
lea
push
clc
sub
loopne
sbb
xchg
or
aam
add
fdivr
push
pop
adcb
dec
ss
xchg
pop
jae
or
mov
adc
fst
xchg
lock
inc
xchg
xor
lret
mov
push
add
sarb
dec
adc
stc
scas
push
xor
jo
ret
adc
int
dec
fbstp
sahf
adc
jecxz
and
jb
sub
sbbb
rcr
xor
push
and
sbb
rorb
aam
mov
and
shll
mov
cmp
dec
adcb
pop
jb
push
test
dec
daa
cmpsl
or
movsl
inc
ja
imul
ja
data16
in
mov
movl
insb
arpl
subl
movsl
xor
xor
cmpsb
arpl
adc
adc
mov
insb
adc
xchg
add
andl
out
mov
call
inc
mov
mov
push
inc
add
loope
dec
fisubrl
insl
loop
adc
ret
cld
and
cmp
xor
pop
sti
push
mov
int3
xor
add
jecxz
loope
cmp
adc
fistpl
mov
adc
inc
pusha
xor
pop
sarl
pop
sub
fisttpll
sbb
fs
fldl
cmp
mov
insb
adc
mov
push
mov
addr16
adc
ljmp
cmp
pop
stc
lahf
mov
mov
clc
mov
sub
push
xorb
push
ret
test
dec
xchg
int3
mov
shrb
or
test
mov
mov
sbb
and
xchg
test
mov
sub
or
push
sub
mov
fimuls
add
popf
add
ja
xor
scas
dec
xchg
mov
jmp
xchg
fs
mov
add
cmp
sbb
xor
sub
add
mov
js
out
and
inc
xorl
sar
fwait
ljmp
das
and
es
shlb
lcall
jne
inc
sub
shlb
cmpb
sbb
mov
add
lea
jno
ret
das
cmp
add
insb
sbb
sub
mov
mov
arpl
test
nop
inc
or
mov
xchg
xor
loop
lock
sub
sbb
jne
jns
or
nop
ss
cmp
aas
ss
add
sar
dec
add
pusha
cmp
negl
jmp
cmpb
xlat
or
rcrl
ss
push
jbe
icebp
ss
ljmp
add
sbb
add
sub
daa
jp
cmpsl
orb
fadds
cmc
add
jnp
push
mov
mov
xor
or
push
cmpsl
in
inc
outsl
xchg
pop
cmpsb
pop
test
lcall
test
rcrb
sbb
je
andl
cwtl
dec
test
sub
dec
push
jbe
mov
and
movsb
jbe
sub
int
stos
xchg
sti
or
sbb
stos
pop
test
mov
es
cmp
or
rdpmc
decb
jnp
fidivrl
xchg
or
jno
in
out
fcmovne
imul
sbb
mov
icebp
sbb
rcrb
add
sbb
xchg
add
inc
mov
inc
add
fwait
add
or
das
xchg
sbb
sbb
dec
in
mov
inc
test
xchg
ret
sub
adc
insl
mov
lret
add
clc
xchg
xlat
bound
fbld
jo
pop
jnp
jo
adc
inc
xchg
pop
add
test
jne
add
dec
lcall
add
add
icebp
je
fsubs
and
sub
out
cmp
mov
out
push
pop
insb
xor
or
loope
and
negb
xchg
pusha
jo
mov
mov
cmpsl
mov
shr
out
lea
pushf
adc
stc
scas
fsubrl
push
xor
mov
adc
inc
fidivs
test
aas
test
push
push
pop
imul
shlb
fidivl
xor
aaa
xor
cwtl
lret
cltd
pusha
mov
mov
xchg
pop
aas
and
cmpsb
lock
xchg
faddl
adc
inc
ljmp
pop
rclb
mov
push
add
sbb
and
cmc
loopne
jb
pop
ss
add
mov
jo
lea
rcr
jg
pop
cmp
rorb
jns
jo
xor
or
cmp
pop
je
adc
testl
out
scas
es
test
add
icebp
bound
aaa
xchg
or
int3
cmpsb
push
mov
add
repz
jg
pop
xchg
ret
mov
ss
lcall
push
sbb
push
gs
jne
rolb
xchg
adc
fsubrs
mov
mov
addl
lods
cmp
mov
or
test
daa
push
leave
leave
sar
lods
jecxz
or
cld
cmp
cmpsl
inc
loope
adc
mull
push
nop
filds
xor
aas
das
pop
sub
push
lea
push
add
jmp
mov
testb
push
ja
adc
orps
sbb
mov
sub
inc
mov
dec
cmp
xlat
pop
mov
mov
push
jo
das
mov
ja
imul
push
and
in
push
mov
movsl
into
lcall
stos
mov
arpl
aam
ss
leave
das
loopne
lds
cwtl
mov
cltd
xlat
sub
xor
or
loopne
ss
out
xchg
sbb
sbb
xlat
fdivl
pop
sbb
pop
cmp
outsl
enter
pop
pop
mov
sbb
int
mov
or
add
iret
insb
jp
xor
pop
xchg
daa
add
mov
xchg
sub
or
cmp
rclb
pop
sub
dec
add
pop
pop
inc
and
inc
cmp
inc
fldl
pop
notb
jp
mov
sbb
add
mov
add
repnz
and
cmpsb
jne
pop
pop
addr16
jl
push
scas
add
push
pop
and
cld
test
and
push
xor
les
ja
inc
jno,pn
les
out
enter
or
pushf
push
test
call
outsb
jno
jp
je
dec
pusha
pop
je
cmc
cld
lret
push
outsb
push
add
jge
add
dec
or
and
dec
push
cs
sahf
cmp
int
xchg
lods
inc
test
sahf
mov
inc
in
sbb
imul
xor
push
iret
jb
push
icebp
inc
sbb
aam
ret
push
mov
jb
int
push
cmp
add
pop
push
add
jl
or
ss
lods
and
push
popa
inc
insl
sbb
popf
sti
in
cld
push
es
in
pop
jbe
xor
daa
out
xacquire
and
in
ss
movsb
rcrl
adcl
sbb
cmpsb
enter
inc
mov
push
ljmp
jae
and
adcb
pop
pop
fwait
sar
leave
push
xchg
dec
add
adc
ret
jg
push
dec
stos
cmp
test
lret
addr16
pusha
inc
insb
sub
js
push
test
adc
jo
orl
pop
fldl
mov
rolb
lea
xchg
mov
cmpl
xchg
push
nop
outsb
or
imul
xor
and
mov
mov
loopne
add
sbb
xchg
adc
and
les
xchg
and
inc
sbb
lods
jbe
call
push
stos
jns
xchg
jo
and
jge
cmpsl
jge
js
fdivrl
and
push
mov
shrb
lods
pop
sub
lahf
scas
mov
jae
mov
sub
and
xor
or
fldcw
jb
or
and
jo
mov
sbb
xlat
mov
aad
aas
mov
sub
jnp
jnp
inc
xor
movsb
xchg
add
dec
dec
ss
mov
push
mov
sbb
jbe
xor
ja
leave
fwait
xor
test
andb
adc
cmp
push
aaa
scas
test
inc
addr16
es
sub
pusha
jecxz
mov
sbb
jge
sub
add
pushf
and
lahf
scas
insb
xor
fidivs
jl
ja
xchg
addr16
fcomps
pop
add
aaa
add
dec
sub
sub
jg
and
jbe
loopne
mov
or
lret
ds
push
fld
add
mov
jo
cmp
lret
mov
lcall
fidivl
add
les
idivb
fidivl
std
das
les
add
orb
mov
dec
je
mov
loopne
adc
and
faddl
sbb
xchg
test
inc
push
call
mov
xlat
jb
pushf
mov
loope
shl
in
cmpsl
xor
int3
fldenv
loop
lods
lret
xchg
aaa
lret
add
jle
mov
aad
xchg
nop
add
xchg
loopne
or
jae
pop
je
leave
shl
pop
xor
popf
cmpl
aad
inc
sbb
dec
push
pop
test
movsb
shrb
sbb
mov
and
lret
pop
in
shlb
mov
pushf
mov
sub
adcb
xor
lods
lock
add
flds
inc
pusha
movsl
movl
sbb
lods
or
dec
and
mov
test
out
stos
jb
or
test
movsl
fimuls
push
adc
stos
inc
call
inc
add
xchg
testl
testl
pusha
push
push
dec
addr16
xchg
orl
fisubrl
mov
add
cmp
or
nop
add
data16
mov
ret
imul
or
add
mov
out
arpl
and
popa
imul
xorb
cmp
adc
inc
xchg
add
lahf
xchg
fimuls
mov
jecxz
xchg
jnp
push
shrb
sub
jae
or
lock
jne
leave
outsl
lock
fs
aam
inc
push
mov
and
bound
sub
xlat
and
nop
je
std
shll
mov
out
mov
mov
mov
jbe
ds
push
jo
cmp
testb
mov
movsl
inc
in
or
jae
pop
es
mov
dec
lock
in
fs
jae
mov
sub
adc
mov
pop
sub
nop
jae
and
add
add
mov
sbb
mov
xchg
add
inc
es
mov
inc
insl
inc
inc
enter
outsl
popa
and
add
in
adc
movb
ficompl
sbb
stos
push
add
adc
and
lods
loope
mov
adc
add
mov
in
imulb
add
hlt
mov
fistpl
dec
pop
jae
das
jnp
xchg
adc
xchg
scas
lods
lods
inc
orb
les
xchg
add
inc
pop
dec
add
pop
jb
pop
lods
and
popa
test
dec
push
dec
js
or
mov
lret
adc
dec
xorb
cmc
test
pop
sbb
add
mov
push
rorl
int
and
xchg
add
fldl
mov
adc
add
ds
sti
test
lret
outsb
dec
and
inc
adc
jl
je
push
xchg
ficomps
jecxz
pusha
xchg
mov
or
mov
into
push
cs
and
xor
clc
loope
jne
test
adc
aas
data16
ret
and
daa
mov
sti
fwait
push
jae
xchg
sahf
add
test
pop
mov
lock
ja
xor
je
mov
and
adc
test
loop
mov
dec
gs
pop
out
jp
ret
xlat
push
xchg
cmc
push
add
loope
lock
mov
int3
dec
adc
adc
mov
push
or
arpl
into
stos
in
sbb
mov
shrb
inc
rcrb
rcr
into
sub
sbb
bound
subb
popf
add
sbb
push
dec
ja
in
ljmp
mov
pop
push
outsl
pop
and
adc
das
add
cmp
js
sbb
out
inc
xchg
insb
mov
dec
add
cmpsl
cli
pop
rcrb
sbb
cmp
andl
mov
std
stos
xchg
das
pop
jno
mov
add
dec
add
sub
xchg
and
or
lock
add
inc
aaa
iret
in
dec
adc
add
push
cmpl
aaa
mov
sbb
push
or
xlat
es
jmp
gs
jp
mov
orl
cwtl
repz
add
mov
out
out
enter
data16
or
in
lods
pop
das
mov
xor
jb
pop
xchg
inc
outsb
xchg
rcr
lock
mov
cmp
daa
push
mov
sbb
or
into
adc
sub
dec
lret
xchg
dec
cld
mov
add
or
inc
out
popa
ss
imul
insl
and
and
adc
xor
in
and
mov
push
cltd
cs
std
xchg
out
push
xchg
inc
jbe
aas
mov
les
mov
add
test
sub
iret
jp
dec
loopne
incb
sub
cmpsb
shlb
push
mov
sbb
nop
push
lods
and
lds
inc
and
sub
pop
cmp
arpl
cli
popa
loope
add
cmp
xorb
adcb
jo
adcl
vmwrite
xchg
inc
sbb
mov
or
cmp
mov
inc
arpl
sbb
int
and
shrd
mov
loope
xchg
xor
add
inc
pslld
lahf
pop
push
jmp
dec
cmp
mov
cmp
jmp
mov
fstl
push
in
fs
lds
push
inc
xchg
or
iret
ja
inc
sub
sub
push
add
pop
in
lods
or
cltd
shlb
or
sub
pop
out
pushf
rcll
push
rcr
jne
cmpsb
adc
in
inc
xchg
sbb
lret
sahf
jp
int3
adc
es
rorl
add
jb
sub
ja
cmpsl
andl
add
mov
leave
in
imul
dec
or
dec
and
jle
or
jg
fisubrs
andl
and
lds
lods
push
mov
cmpsl
and
add
lcall
scas
jno
add
inc
mov
adc
es
xor
fldcw
jle
xor
or
add
cmp
leave
sbb
loope
lea
add
fidivl
xor
out
mov
push
das
addl
xchg
outsb
add
in
jp
sbb
negb
leave
add
inc
ret
outsb
outsb
mov
lods
dec
ja
loop
les
ljmp
sbb
loopne
push
inc
stc
or
inc
add
lret
shrb
sub
xlat
and
adc
mov
mov
adc
push
xchg
mov
loop
sarb
clc
xchg
push
push
sub
xor
and
jle
cmpsb
xor
push
adc
add
das
rcll
lock
scas
ret
push
js
fimuls
mov
scas
rolb
mov
popf
sub
push
dec
lret
mov
push
aam
add
jnp
popf
adc
mov
nop
or
add
ret
addr16
xchg
mov
push
ret
roll
ja
jb
pop
sbb
and
outsl
jne
ret
xor
push
mov
aaa
lret
sbb
rorl
pop
fs
aaa
nop
js
icebp
adc
cmpl
or
movsl
jge
ret
sub
lahf
test
dec
imul
lahf
or
les
inc
mov
mov
pop
adc
daa
mov
movsb
jne
adc
cmpsl
ja
dec
mov
ret
pop
inc
add
mov
or
je
dec
inc
adc
sub
iret
enter
cltd
mov
cs
aas
inc
insb
jecxz
cmpsl
dec
lea
push
inc
test
clc
mov
outsb
cmp
int
leave
mov
movb
lods
pop
xor
and
lret
xchg
dec
daa
addl
sbb
lret
pop
add
inc
dec
sub
js
pop
mov
push
cmpl
sub
das
lret
pop
les
scas
adc
inc
cmpb
pop
or
mov
ret
andl
adc
pop
or
push
enter
aaa
outsl
imul
sub
fcmovnbe
mov
lahf
push
jns
jp
shlb
cmc
rcrb
mov
jp
push
dec
mov
rolb
stc
jo
pop
inc
lds
fildl
xchg
fstps
lcall
ja
test
sbb
je
jnp
shrb
add
cs
clc
sub
sub
push
jp
mov
fdivl
stos
pop
or
fildl
cltd
jge
cmp
rcr
pusha
sbb
xor
inc
jb
add
sub
inc
and
roll
adc
adc
inc
push
mov
xchg
pop
push
pop
xchg
mov
xor
ljmp
in
lods
out
or
jno
jmp
inc
lods
in
pop
add
xchg
arpl
xchg
adc
mov
push
or
sbb
and
sbb
jp
fdivs
push
jmp
adcb
pop
xor
movsl
adcl
add
push
imul
dec
cmc
loop
stos
pop
add
mov
adc
dec
mov
add
pusha
dec
lds
dec
fs
adc
or
add
arpl
mov
push
hlt
mov
sub
sbb
shll
cmpsb
and
out
jb
testl
in
int
xchg
fsubrs
lahf
ja
addr16
jbe
sub
pop
pop
xchg
movsb
xor
and
gs
loope
bound
sbb
pop
lret
push
les
inc
insl
ficoms
loope
addr16
xchg
jle
xor
repnz
stos
push
mov
std
and
cmpsl
pusha
or
scas
add
sub
scas
push
das
mov
outsb
jmp
xor
pop
cli
mov
fdivr
std
mov
and
loope
dec
ret
test
push
pop
lret
add
out
mov
jno
loopne
add
mov
in
jb
mov
pop
call
jle
jecxz
int
lcall
stos
imul
scas
mov
push
outsb
jae
mov
icebp
mov
or
ljmp
enter
jns
or
pop
lcall
push
and
test
dec
stos
mov
add
jne
pop
xlat
jmp
adc
sub
push
sub
icebp
adc
pop
dec
sub
rorl
pop
mov
sub
fdivrs
hlt
ret
xchg
pop
sbbl
sahf
or
jbe
divl
in
cli
add
push
inc
or
jl
arpl
out
push
add
push
lcall
bound
or
xor
and
insl
add
sub
movl
adc
dec
add
and
push
xor
dec
loop
aad
pop
rclb
cwtl
rol
pop
add
mov
sub
pop
cmp
push
jnp
shl
das
and
cmp
adc
add
push
xor
jle
ret
cs
mov
lds
movsb
lock
pop
xor
aaa
cli
xor
pop
xor
xchg
sbb
cli
frstpm(287
adc
inc
mov
rorb
xchg
cmp
sbb
xchg
fsubrp
mov
push
push
inc
test
lods
rolb
ss
in
arpl
push
sub
mov
jl
mov
fnstsw
adc
outsl
test
push
xorb
lock
popa
popf
call
inc
sbb
sub
jnp
sahf
add
mov
decl
xchg
jp
or
test
cli
pop
je
mov
lds
popa
mov
loope
jae
mov
stos
dec
jnp
hlt
sub
mov
and
out
mov
pop
divl
adc
js
adc
movsl
popa
gs
aaa
lea
nop
movsl
popf
mov
or
xor
shlb
dec
cmp
jmp
sub
in
xchg
cmp
push
add
stos
xchg
int
xchg
push
orb
stos
dec
fnstcw
push
call
and
or
push
mov
dec
push
scas
lret
fimull
add
or
sbb
data16
dec
cmp
int3
lcall
xor
and
add
ljmp
sbb
js
test
xor
xor
mov
cmp
ljmp
mov
pop
inc
xchg
xchg
fistpll
cs
pushf
pop
and
dec
ret
inc
int
mov
arpl
push
pop
pop
mov
pop
sbb
test
pusha
mov
mov
inc
push
sarl
pusha
pop
test
xchg
bound
adc
and
in
cmp
jo
test
movsb
adc
mov
add
fisubrs
mov
scas
cmpsl
loop
xlat
xor
or
mov
fwait
test
cmp
incl
lret
fcomps
or
call
cmpsb
clc
mov
int3
adc
rclb
loopne
adc
dec
push
sahf
gs
in
xchg
dec
dec
jbe
imul
lock
sahf
jmp
test
shl
pop
enter
mov
pop
pop
adc
mov
cmp
add
push
add
sbb
ret
pushf
scas
sti
jo
jp
cld
arpl
xchg
jns
shl
xchg
dec
loope
nop
iret
in
mov
mov
pop
add
cli
and
movl
add
data16
jne
mov
enter
or
int
mov
jecxz
sar
sub
loop
not
add
les
push
sbb
pop
mov
es
push
dec
jns
pop
fcoms
push
lcall
aad
mov
insl
xor
push
sub
push
paddsw
clc
add
fldcw
or
movsb
xchg
pop
fnsave
jno
loopne
xor
mov
jecxz
ret
inc
adc
in
xor
add
add
test
dec
sub
jge
mov
rolb
pop
daa
nop
mov
orl
and
lods
insl
popa
dec
fs
jmp
dec
ret
or
and
sub
lods
mov
loopne
outsl
rorb
adc
add
xor
jae
mov
clc
mov
je
mov
incb
sub
add
gs
and
jno
ret
sbb
nop
mov
and
and
xor
andl
jg
orl
mov
test
push
and
jecxz
in
xor
mov
in
dec
lods
fnop
repnz
cmp
stos
mov
mov
sub
and
movsl
and
xor
shll
adc
fidivrl
or
or
pop
push
loop
push
mov
jb
jno
xor
xchg
xchg
cmp
push
stos
add
xchg
out
xchg
icebp
pop
jae
mov
sub
movsb
xor
fxrstor
aad
gs
sbb
es
add
jle
pop
sarb
push
test
xor
inc
lcall
or
lret
add
push
gs
pop
add
jo
inc
inc
adc
ret
adc
add
add
push
jb
xor
push
out
jb
mov
icebp
xchg
mov
push
or
adc
adc
inc
aam
adc
std
call
addr16
adc
push
jp
js
sub
xorl
repz
xchg
add
test
dec
pop
dec
pop
dec
enter
insb
negb
and
pop
dec
dec
pop
inc
ret
icebp
dec
pop
adc
leave
out
mov
jle
push
cmp
adc
adc
sub
addb
gs
and
or
imul
add
or
xor
in
lods
pushf
dec
les
sub
dec
dec
les
sbb
hlt
nop
mov
jb
aaa
js
test
mov
adc
mov
fcomps
js
add
inc
cmpsl
push
test
gs
dec
mov
aam
test
mov
push
push
and
jne
addb
and
jo
mov
jbe
rolb
addl
rolb
add
dec
or
rol
adc
xchg
gs
and
insb
es
pop
pop
sbb
adc
test
or
xor
jmp
and
dec
lret
jae
je
sbb
and
add
je
dec
fidivl
popa
clc
xchg
inc
rcrb
mov
mov
adc
jne
pop
cmc
inc
mov
add
push
inc
dec
add
adc
insl
mov
andl
adc
xchg
mov
sub
loopnew
inc
jae
pop
sub
mov
adc
push
xchg
hlt
pop
xchg
jbe
push
mov
or
inc
jno
lea
fmull
int3
and
add
rolb
pop
icebp
mov
cmpb
and
fsts
lods
scas
adc
or
inc
test
iret
enter
sahf
outsl
or
mov
inc
ret
mov
xor
and
jmp
sub
push
and
fwait
out
fnsave
mov
das
aad
xchg
and
orl
and
das
ss
clc
rcrl
aas
sbb
jo
popf
fucomip
sbb
cwtl
imul
dec
cwtl
loope
lret
and
cmpl
shl
pcmpeqd
push
nop
add
aaa
cld
daa
cmpb
and
push
enter
xchg
pusha
lods
push
repz
or
xchg
xchg
es
adc
add
pusha
loope
add
push
mov
xorl
mov
adc
or
jecxz
and
dec
jns
and
and
pop
jno
mov
push
sbb
cltd
xor
je
popl
mov
xchg
xor
dec
add
mov
dec
cltd
movsl
dec
push
pop
sub
adc
push
int3
inc
push
in
add
dec
lock
xchg
ds
ja
cwtl
or
lret
fsts
gs
enter
stc
stos
bound
mov
sub
sbb
daa
cmp
xlat
inc
mov
sarb
adc
lea
push
mov
lret
inc
push
cltd
lock
fisubs
insb
add
psrlw
or
ret
push
jecxz
adc
add
cltd
out
popf
push
mov
inc
sbb
jno
add
push
cwtl
js
roll
add
es
pop
adc
sub
sbb
sub
sbb
and
push
ds
insb
and
lods
push
xchg
push
imul
dec
cmpsb
popf
bound
insl
testl
adc
movsl
pop
xor
ret
xor
adc
sub
dec
xchg
jnp
mov
cmp
movsb
bound
ret
and
inc
ss
js
cli
xchg
or
add
imull
cmpsb
scas
xchg
sbb
sahf
sbb
add
adc
add
mov
shll
cltd
filds
xchg
sahf
orl
sbb
out
pop
mov
or
inc
push
popa
dec
ret
add
out
not
popa
xor
sub
xchg
sub
stos
inc
cmp
pop
sub
mov
cmp
popl
push
pop
pop
lahf
dec
in
shlb
xchg
mov
mov
adc
cmpsb
test
roll
movsl
dec
lret
cmpsl
or
movsl
jmp
fnstcw
fdivrl
addr16
push
dec
cmpsl
mov
inc
pusha
fstpt
shlb
lods
shrl
add
push
adc
nop
fnstsw
and
xor
movsb
sub
xchg
stos
mov
dec
cs
lods
cltd
add
cmp
sub
push
mov
int3
js
sbb
scas
and
shll
cmp
jp
mov
and
xchg
cmp
xchg
in
jae
sub
push
stos
or
and
frstor
imulb
cmp
push
insb
and
lea
xor
movsb
and
inc
and
adc
add
rolb
arpl
mov
ret
xor
sub
xchg
xchg
xor
or
inc
and
test
or
or
push
sub
daa
add
mov
push
push
push
xchg
mov
out
mov
pop
cli
js
dec
sub
nop
gs
aam
add
jp
inc
mov
aam
inc
out
loope
sub
rcl
and
shrb
sbb
mov
pop
and
hlt
push
test
jle
or
dec
jns
andb
rclb
mov
and
sub
adc
stc
jmp
sub
jno
ss
ja
loope
adc
add
inc
mov
mov
in
jmp
inc
fcomps
pushf
inc
push
loopne
jl
inc
popf
or
stc
push
and
xor
shlb
xchg
xchg
out
jecxz
jg
mov
push
sub
insl
test
pushf
add
jo
inc
push
shll
pop
pop
or
xchg
rorb
pop
sub
mov
sub
lret
add
cmp
dec
rorb
fsub
xchg
xor
mov
arpl
pusha
push
and
sbb
ret
mov
ss
sbbl
mov
bound
xchg
jmp
dec
sub
mov
std
xor
repnz
jo
push
push
xchg
add
mov
mov
test
ds
add
pop
push
mov
inc
fsubs
cli
sahf
js
fisubs
xor
push
push
aaa
inc
push
insb
out
loope
add
mov
jecxz
pushf
push
loopne
scas
mov
push
sbb
sbb
push
cli
xchg
stc
jge
pop
lock
loope
enter
dec
or
sbb
mov
imul
outsl
and
rcrl
dec
ret
dec
xchg
testb
add
pusha
fldl
int
jbe
xchg
add
xchg
xor
or
mov
or
int
mov
nop
or
pop
jge
cmpsb
jecxz
loope
push
mov
mov
sahf
test
mov
ljmp
repz
xchg
adc
aad
fdiv
lods
or
and
fimull
and
sbb
cmp
dec
enter
std
inc
or
sbb
cmc
rolb
pop
pop
outsl
xor
adc
jno
jo
xor
inc
jg
cmp
sub
and
or
aaa
cmc
in
js
mov
inc
dec
gs
xor
dec
orb
adc
notb
sarb
inc
js
subl
adc
mov
sarb
sbb
fistl
lock
dec
insl
jp
mov
gs
adc
xchg
sahf
mov
xor
hlt
test
es
xor
add
je
addr16
mov
popa
rorl
adc
nop
fadd
dec
mov
mov
jno
dec
push
lahf
rcr
xchg
mov
dec
clc
mov
and
dec
push
shrb
stos
lds
push
popf
mov
push
xchg
cltd
mov
push
mov
popf
mov
or
movsb
push
sub
nopl
clc
push
xorl
lcall
push
and
jae
ss
push
popf
out
ds
test
ficoml
mov
pop
fiadds
adc
loopne
push
mov
lods
jge
shl
or
loope
or
lret
loop
add
pop
sti
jg
push
pop
xchg
movsb
and
in
sub
sbb
aas
in
and
pop
mull
add
scas
insb
dec
insl
sbb
sbb
pop
xor
xchg
je
bound
jne
push
loope
mov
and
cli
add
mov
jmp
inc
popa
add
lahf
dec
sahf
addl
shl
or
push
pop
sbb
and
cmp
jl
hlt
add
loope
adc
mov
xor
add
lds
dec
or
push
arpl
pop
xor
lret
fwait
mov
pop
stc
xchg
sub
inc
lretw
je
sub
push
dec
rclb
insb
loopne
pop
sub
cmpsl
mov
sbb
mov
pop
test
addr16
push
pop
xchg
ljmp
test
xor
negl
loopne
ror
leave
cli
inc
das
add
sbb
and
push
das
or
mov
andb
shlb
mov
dec
jmp
test
insl
std
lret
mov
mov
jnp
test
and
push
pop
and
inc
lret
leave
adc
int3
push
push
or
push
fisubs
sbb
fisubs
cli
xchg
mov
hlt
and
mov
lahf
enter
in
shrb
mov
loop
sub
pusha
add
sub
negb
sbb
pushf
inc
and
out
cmp
mov
out
adc
xchg
ret
jae
or
clc
mov
xchg
inc
jbe
mov
mov
lods
and
ss
xor
add
outsl
dec
mov
inc
xchg
fwait
inc
je
shlb
cmc
lea
scas
mov
inc
push
out
inc
movsb
and
jo
sub
pop
and
and
into
flds
push
inc
mov
cmc
inc
iret
push
in
add
dec
shl
cmc
add
mov
rcll
pop
add
push
add
into
sub
loope
insl
push
fadd
fisttps
mov
fnstenv
xchg
lret
push
add
cs
sbb
les
mov
pop
and
repnz
add
fstpl
push
clc
test
loope
dec
arpl
js
inc
imul
add
sbb
test
dec
stos
inc
add
sub
insb
mov
es
lea
bound
mov
popa
test
test
jo
imul
outsb
mov
inc
out
add
into
inc
add
hlt
push
es
add
pop
mov
out
or
aaa
pop
das
movsl
pop
sbbb
lods
adc
loope
jo
lret
add
sbb
cmp
test
jae
jmp
dec
push
loope
aaa
or
xchg
dec
movsb
loopne
xor
cs
data16
adc
push
ljmp
aaa
into
pop
es
add
in
lds
aaa
cmpsl
popf
stc
imul
cmp
loopne
outsl
jns
hlt
cmpsl
or
lods
and
rolb
arpl
insb
inc
in
sahf
pop
movsb
lds
adc
bound
inc
inc
or
das
xchg
add
stos
xchg
push
inc
add
mov
outsb
cltd
shrb
mov
out
mov
idivl
nop
dec
cmp
imul
sub
fiaddl
loopne
in
addr16
inc
mov
jp
pop
or
test
lcall
popa
xor
clc
test
test
cmpsb
jbe
adc
or
push
lret
adc
call
pop
sub
mov
ret
mov
xor
add
add
sahf
testl
sbb
loop
test
pusha
adc
or
call
cmp
cmp
cs
mov
movsb
rclb
push
sub
inc
insl
pop
inc
js
adc
shl
cmp
movsb
xor
mov
xor
jo
pop
aas
or
push
stc
lret
add
subps
jne
js
mov
adc
jl
or
push
jno
sub
jo
jo
std
ds
mov
push
inc
mov
ljmp
pop
cmpsl
push
sysret
xchg
fildl
cmpsb
xorb
pop
and
in
in
cmp
cmpsl
jne
and
pop
sbb
popa
adc
adc
jecxz
stos
mov
orl
adc
inc
and
dec
sbbb
adc
aam
fsubl
push
sub
inc
pop
loopne
mov
pop
sbb
dec
bound
call
sub
add
cltd
fbld
jne
xor
push
dec
cmpsl
test
iret
push
popf
sbb
adc
adc
sub
insb
jns
sbb
lret
js
int3
movsb
test
add
jmp
mov
xchg
push
js
add
sub
fmuls
fs
add
jg
adc
inc
push
jns
dec
rorb
fstp
loope
or
add
inc
jmp
and
das
add
sub
pop
leave
sbb
scas
xchg
add
stos
ret
pop
dec
aad
add
push
and
test
bound
addb
icebp
jbe
and
or
loopne
pop
test
roll
or
addr16
xor
mov
push
clc
fldenv
adcb
xor
sub
add
in
dec
mov
lods
cmp
add
dec
push
add
mov
xchg
push
aas
xchg
add
jo
mov
lea
jnp
add
add
push
pusha
addb
pop
pop
inc
adc
sbb
int
mov
sub
xor
clc
pusha
rol
add
mov
sub
xchg
inc
das
loop
loopne
das
mov
cmc
mov
inc
jns
mov
fsubl
test
xor
or
xor
jecxz
mov
mov
daa
push
clc
nop
adc
stos
adc
cmp
cltd
or
dec
rolb
and
xor
xor
sub
or
mov
addl
lret
mov
sbb
and
data16
sbb
addb
push
push
test
loopne
push
inc
add
mov
gs
imul
mov
cmp
adc
mov
mov
mov
daa
shl
xchg
ret
xor
and
push
mov
and
adc
pop
imul
aaa
test
loopne
sub
test
add
or
xchg
fsubr
push
rcll
mov
lcall
or
sub
filds
jmp
pushf
add
mov
sbb
adc
mov
shlb
ds
nop
xchg
cmp
pop
inc
arpl
icebp
and
insb
add
test
sub
int
add
js
push
test
adc
lret
xchg
push
jl
mov
outsl
mov
lds
xor
inc
pop
fiaddl
andl
ret
mov
xchg
xchg
call
lods
mov
adc
xor
adc
pop
add
mov
ja
clc
rol
lcall
fsubrl
or
dec
mov
or
arpl
icebp
ror
pushf
cmpl
mov
ljmp
pop
inc
ss
mov
xchg
add
xor
add
cmp
std
xchg
mov
push
icebp
xchg
lock
andl
and
or
jno
jmp
or
sbb
sbb
jo
in
ret
dec
je
adc
arpl
mov
cmpl
mov
jg
in
mov
push
add
es
dec
xchg
adcb
xor
sbb
dec
xchg
push
pop
push
jp
lcall
fstps
rorl
pop
cmpsb
jmp
lret
es
sbb
add
adc
rcl
sbb
bound
nop
adc
pusha
gs
movsl
lsl
push
loope
adc
test
xor
fstpt
orl
pop
mov
mov
mov
add
push
sub
add
clc
adc
pop
pop
out
lret
mov
mov
inc
imul
mov
dec
sarb
dec
std
dec
sub
gs
mov
mov
add
inc
pop
cmp
xchg
dec
cmp
dec
add
popa
lahf
inc
mov
inc
insb
movsb
add
mov
sahf
in
jo
mov
or
add
inc
and
test
xor
add
test
sarb
jge
nop
and
aaa
cmp
movsl
pop
ds
jns
pusha
inc
or
loopne
add
lds
push
ds
add
aaa
inc
mov
xor
sub
fstps
fdivrl
mov
test
scas
hlt
lods
daa
addl
xor
jne
mov
add
dec
adc
js
fs
and
xor
and
test
nop
mov
jno
xor
loope
loop
aad
imul
cmp
jo
or
add
loope
adc
aad
das
es
cwtl
jle
and
pop
jo
jmp
cld
and
dec
cmp
lcall
movsb
insb
clc
inc
mov
jl
cmp
mov
mov
cmp
pop
mov
and
roll
jne
icebp
push
orl
subb
dec
mov
rcrb
jp
pop
inc
cmp
xor
imul
pop
jge
xor
sbb
shll
aaa
hlt
adc
jno
imul
or
pop
xor
adc
mov
add
inc
jnp
sbb
sbb
adc
outsl
insb
and
mov
ficoms
lret
cmp
test
popa
add
xchg
xor
ret
loopne
mov
shlb
arpl
push
es
in
aaa
gs
add
stos
sub
popf
or
or
mov
cmp
insl
add
sub
pop
loop
xor
bound
mov
jge
imul
jno
lcall
dec
decb
les
fiadds
mov
inc
cmpsl
mov
shlb
mov
or
sbb
rcll
fmul
mov
cmp
dec
and
gs
into
push
xchg
push
cltd
add
inc
insl
add
sbb
push
insl
popf
popf
movsb
fiaddl
outsb
rcrb
inc
add
add
xor
add
js
mov
test
jecxz
loope
or
test
xchg
and
lea
mov
insl
and
clc
sbb
lret
cltd
push
and
inc
lret
sahf
cltd
push
push
aas
push
xchg
sbb
xchg
shl
push
add
imul
mov
clc
mov
mov
add
je
enter
mov
xor
or
mov
or
out
outsb
sbb
add
ds
inc
or
lods
xchg
sub
add
mov
hlt
cmpsb
ljmp
popw
mov
mov
fwait
movups
add
sub
in
arpl
push
into
push
pop
inc
inc
push
mov
pop
sbb
adc
sbb
fiadds
pushf
add
cmp
cmpsl
inc
arpl
cwtl
popa
and
es
pop
jbe
cmp
mov
mov
xor
mov
adc
sbb
sahf
test
or
movsb
xor
std
add
dec
pop
sbb
lds
mov
and
xchg
push
inc
shll
and
es
and
fiaddl
ret
and
cwtl
jp
loop
pop
popf
pop
dec
stos
pop
mov
push
sbb
jp
mov
and
mov
mov
in
mov
jl
inc
mov
mov
jb
mov
test
aas
sbb
push
add
push
addb
ret
stc
push
loopne
add
insb
call
mov
lods
xor
add
adc
add
and
xor
insb
andl
xor
mov
inc
out
aaa
scas
xor
rcrl
fnstsw
insb
mov
add
push
sbb
orl
push
add
sub
mov
or
mov
movsl
sbb
sahf
lahf
imul
adc
inc
mov
lret
fistpll
test
mov
push
pop
andl
ret
dec
sub
inc
pop
ss
and
dec
negb
or
int
fldcw
push
and
sbb
jne
pushf
xor
xchg
add
and
pop
jne
test
rcll
leave
add
push
mov
sti
pop
mov
mov
lret
xor
add
jo
jo
and
mov
sub
jae
cmp
pusha
sub
xor
pop
aaa
pop
xchg
in
notl
lock
les
enter
sbb
or
rorb
add
es
bound
fdivp
jns
stos
add
aad
mov
add
push
or
mov
pop
push
pop
adc
stos
cmp
test
loope
dec
cmpsb
add
and
imul
dec
je
ret
sub
xchg
mov
mov
dec
mov
sub
outsl
xchg
cmp
cmp
lret
nop
and
popa
mov
push
pop
add
jecxz
test
in
push
xor
lcall
shll
test
dec
cmp
popf
movsb
cltd
jb
les
addr16
pop
jno
lods
pushl
sbb
lods
mov
in
dec
adc
lret
outsb
push
ret
aas
mov
ret
loopne
dec
and
xor
push
and
test
xchg
pusha
jno
add
sbb
or
add
xchg
loope
lock
and
mov
loope
jge
mov
dec
out
push
clc
push
adc
add
push
mov
test
xchg
int
push
rolb
pusha
shrl
xchg
pop
leave
inc
leave
test
xchg
or
xchg
inc
inc
or
mov
xor
push
push
fisubl
lret
sbb
testl
fisttpl
popf
xchg
add
cs
xor
outsl
pop
ljmp
add
xchg
pusha
sahf
or
std
sbb
sbb
dec
push
testb
xor
or
mov
in
jg
arpl
push
mov
and
daa
fbld
int3
push
mov
sub
adc
iret
cmpsl
add
ret
sbb
cmp
push
xorl
cmp
push
sti
adc
push
jns
je
flds
mov
insb
or
int3
fbstp
xchg
sbbb
mov
loop
or
lods
add
add
or
ret
mov
and
imul
xchg
cmp
jbe
xor
or
bound
arpl
fmuls
popf
je
push
dec
orl
mov
gs
popa
cltd
push
test
push
push
add
or
cmp
sub
mov
ja
mov
lods
xor
mov
pop
sbb
inc
pop
inc
imul
cmp
mov
cs
and
outsl
pop
ss
test
loope
arpl
mov
jno
or
xchg
in
push
xchg
and
mov
and
enter
addl
pusha
hlt
int3
loopne
mov
dec
pop
add
mov
mov
jbe
add
inc
loope
xchg
adc
arpl
mov
and
jp
orb
pusha
jl
or
push
dec
add
movsb
xchg
dec
outsl
mov
cmp
add
mov
stos
test
js
mov
iret
outsl
or
shrb
or
inc
inc
mov
arpl
je
fsubrs
out
nop
xchg
or
xorl
jb
lods
sub
mov
adc
lcall
mov
sub
inc
into
inc
int
add
popf
add
addl
adc
mov
fadds
sub
xchg
mov
adc
insl
or
std
lods
push
and
std
jae
sub
inc
arpl
test
xor
pop
ret
imul
pop
push
mov
pop
push
mov
jae
aas
sub
fsubrs
and
mov
pusha
fldl
idivb
mov
ds
nop
push
ret
add
adc
dec
repz
lods
sub
lret
mov
add
pop
pusha
gs
mov
mov
cwtl
jg
imull
fidivrl
into
int3
inc
fadds
loope
sub
or
movb
mov
insb
push
push
arpl
rep
dec
rol
add
mov
add
jmp
pop
or
push
and
cmpsb
jbe
imul
xlat
cmp
add
cmc
lods
sub
xor
daa
add
xor
fsin
pusha
je
mov
pushf
add
xlat
sub
pop
inc
and
xchg
inc
jl
leave
mov
xchg
out
pop
lret
mov
xlat
nop
mov
lcall
or
mov
sbb
leave
add
leave
lret
sahf
pop
cmp
and
les
addl
push
aas
cs
and
push
loopne
inc
adc
xchg
push
faddl
aaa
inc
popa
xchg
add
jmp
xchg
dec
xor
push
add
test
push
or
cmp
loopne
daa
pop
insb
add
leave
xchg
and
iret
aaa
movsl
adc
pushf
cltd
sub
aaa
test
cmp
adc
inc
icebp
lds
andl
xlat
test
movsl
aam
xor
rorl
mov
cmp
xchg
stc
sahf
jno
mov
jns
xchg
js
inc
lcall
bound
add
and
or
movsl
je
imul
dec
lret
adc
test
sbb
push
or
add
jo
movsl
sbbl
mov
pusha
sbb
and
xchg
adc
jnp
pop
pop
ja
sarl
jno
cmp
cli
sbb
xor
sbb
cmp
mov
adc
scas
sbb
add
jns
nop
rcrl
arpl
out
push
out
xchg
mov
jmp
add
rorb
adc
pop
mov
bound
mov
inc
inc
or
jp
xor
dec
pop
loopne
inc
push
inc
scas
jno
add
and
mov
or
xchg
xorl
rol
lods
fstl
push
data16
pusha
lds
pushf
mul
adc
pop
adc
inc
stos
roll
add
or
or
xor
mov
in
add
push
xor
push
test
add
stos
mov
add
or
shl
leave
dec
lret
push
adc
inc
sbb
cli
mov
xor
lea
sbb
jo
in
jae
xor
fstpt
outsl
lahf
and
nop
fld
push
idivb
ret
sub
repnz
into
test
scas
adc
xlat
mov
ljmp
fldt
and
scas
push
popa
xchg
fisubl
loop
cmp
and
sbb
xchg
push
add
and
pop
add
stos
or
xchg
imulb
andb
cmpsb
ja
pop
lret
sahf
or
je
rolb
jecxz
and
scas
cmpsl
sub
push
sbb
inc
push
bound
and
lret
inc
pop
icebp
gs
jecxz
push
and
call
mov
adc
push
sarb
dec
popa
xchg
mov
test
stos
out
jns
jns
lods
adc
push
fwait
inc
mov
aam
jno
mov
xor
incl
mov
sbb
xchg
pop
jl
fisttpl
inc
rorl
sub
and
stc
mov
icebp
rcrb
insl
arpl
cmp
xor
clc
sbb
imul
cmpps
add
cmc
lcall
push
sub
test
dec
sarb
mov
inc
mov
mov
inc
addr16
push
sbb
clc
mov
rcll
dec
and
xchg
loop
xchg
les
fmull
inc
mov
movsb
lods
gs
sbb
or
enter
outsb
add
pop
jo
xchg
shlb
inc
jl
mov
and
add
cmp
mov
gs
mov
cltd
int
xchg
mov
or
imul
pop
imul
dec
dec
lret
roll
cmp
nop
mov
sub
adc
xchg
ljmp
pop
mov
jb
loopne
jno
add
aas
mov
xchg
imul
bound
add
push
push
pop
outsb
mov
mov
xchg
in
ret
insl
push
repz
and
mov
sub
cli
add
iret
add
jno
rcrb
pop
push
pop
inc
cwtl
dec
rcrb
and
scas
add
xchg
punpckhwd
notb
lret
and
incl
ss
xchg
shlb
xor
xchg
sbbb
cmp
movsl
cmp
inc
push
icebp
dec
out
cli
cmpsl
mov
push
js
lods
cmp
out
jae
add
mov
inc
sub
loop
push
ds
and
dec
adc
dec
inc
add
mull
sbb
cmp
scas
adc
pop
jb
test
mov
sbb
jb
cmpsb
mov
pushf
dec
rcll
dec
jo
sbb
mov
cmc
roll
mov
xchg
mov
xor
jnp
gs
in
jmp
rcrb
jg
lcall
test
and
pushf
add
push
jno
add
subb
push
mov
push
sar
outsl
push
les
test
fmuls
cmp
fs
out
add
mov
adc
mov
inc
pop
push
rorb
push
sub
gs
mov
inc
lods
sub
jbe
test
sbb
pop
push
mov
inc
addr16
add
push
mov
sbbl
xor
sbb
lea
jecxz
mov
cmp
pop
mov
test
cmp
xchg
adc
movsb
adc
sbb
loop
mov
mov
jnp
xor
add
mov
lret
cmp
repnz
add
and
add
jno
popf
ret
pop
mov
inc
loop
movsb
dec
or
pop
aad
pusha
inc
dec
pop
dec
adc
and
clc
fcompl
xor
shlb
pop
mov
jbe
push
pop
xchg
dec
loope
push
ja
cmp
dec
arpl
inc
cli
add
add
loopne
shll
adc
jecxz
xchg
mulb
jbe
push
pop
dec
jo
dec
lock
jg
or
mov
lret
adc
das
ss
insl
sbb
cmc
sub
mov
jp
test
add
inc
jge
mov
cmpsl
pop
jae
mov
mov
outsb
jne
add
dec
or
jnp
mov
outsl
shlb
pushf
xor
and
mov
insl
push
test
aam
cmpl
call
mov
cmpsb
inc
arpl
cmpsl
or
ret
aas
mov
sbb
pop
dec
sar
lahf
xor
in
cli
jp
popa
test
outsb
xchg
int3
sub
add
or
and
loop
mov
lret
mov
dec
mov
inc
je
in
into
arpl
js
nop
cmpsl
test
das
xor
inc
popa
out
inc
mov
mov
jg
adc
xchg
sahf
aas
mov
pop
fwait
loope
enter
rdmsr
outsb
add
mov
mov
xchg
lods
pop
sub
adc
addb
mov
mov
pop
test
mov
add
fsubrs
or
cmp
sbb
dec
xchg
mov
arpl
and
jno
cmpsl
mov
cmpb
icebp
or
ret
add
data16
scas
push
mov
lods
push
xor
inc
es
sub
adc
mov
lds
mov
roll
jns
pop
or
adc
add
jno
sbb
and
adc
adc
adc
push
pop
icebp
add
pop
pop
scas
add
xchg
push
es
adc
fiaddl
inc
insl
in
jbe
icebp
fs
mov
cmp
call
inc
sbb
mov
imul
fdivs
mov
cmp
and
adc
push
pop
dec
jne
dec
rorb
stos
fistl
jmp
subl
pusha
popa
inc
loopne
in
and
nopl
sub
cmp
add
movsb
pop
hlt
add
lret
add
sub
adc
les
dec
insb
sbb
sbb
pop
sahf
test
xor
jnp
pop
adc
call
pop
dec
add
pop
lods
push
or
inc
std
mov
sub
fucomi
scas
sub
subb
mov
or
inc
or
lret
push
mov
jne
jmp
insb
arpl
xchg
scas
xor
and
jno
dec
mov
adc
push
outsl
push
pop
jns
out
movsb
arpl
lahf
movsl
ds
out
rol
dec
add
push
push
imul
pop
loop
jmp
sbb
inc
push
jb
fisttps
mov
arpl
inc
sub
popa
jl
es
and
es
xchg
test
les
or
lret
push
sub
push
sbb
ds
out
ss
les
xchg
sbb
ret
sub
js
in
xor
sub
cmp
dec
mov
or
bound
std
jno
push
rorl
pop
xchg
add
scas
mov
iret
in
pop
inc
jo
in
jno
int
add
cmp
xchg
scas
or
bound
cmp
and
das
pop
gs
clc
pop
push
movsl
mov
and
sbb
sbbb
popa
loop
lret
enter
jmp
lcall
push
mov
sub
aas
das
leave
sti
loop
jbe
sar
push
adc
das
fcmovnb
or
or
cmpl
flds
add
or
and
test
add
jns
call
test
add
sbb
mov
arpl
mov
mov
and
jge
pop
mov
jo
or
fsubrs
adc
cltd
dec
push
push
sarl
mov
movsl
xor
sbb
sti
or
inc
jne
stos
pop
cmpsb
push
popa
mov
pop
push
dec
or
jae
js
jmp
int
push
mov
hlt
mov
test
ja
and
sahf
test
rclb
jge
mov
pop
and
outsl
scas
int3
adc
or
cmpsl
out
sbb
addl
cld
ud2
cmp
mov
or
addr16
test
xchg
test
negl
dec
ret
daa
push
jmp
aaa
dec
andb
ret
xchg
mov
fbstp
bound
xor
dec
mov
ss
nop
jb
bound
push
adc
push
orl
xchg
mov
add
gs
adc
xor
std
pop
outsl
jno
js
mov
and
dec
shl
inc
and
push
les
int3
inc
aas
sub
push
jae
add
sub
add
in
movsb
test
in
adc
push
push
xor
mov
jnp
push
insl
popf
inc
scas
cmp
enter
scas
dec
xchg
movsb
push
loopne
arpl
mov
cmpb
mov
add
add
xor
jmp
test
ds
sbb
jns
or
repz
loopne
in
int
rolb
fimull
int
pusha
jecxz
frstor
movsl
push
sub
and
sbb
stc
pusha
ret
leave
adc
jg
cs
js
jo
or
mov
push
rorl
sub
jle
lods
daa
inc
fwait
aas
addb
inc
sub
test
pop
xchg
mov
test
nop
and
xchg
jle
dec
daa
cwtl
outsl
jge
pop
sub
pop
andl
push
prefetchwt1
sbb
fs
mov
icebp
and
mov
cmpsl
jge
jmp
inc
add
xchg
cs
inc
clc
test
pop
jp
psubd
pop
sbb
xor
es
call
push
and
mov
mov
fmul
sti
xchg
daa
push
mov
cmpsl
mov
andb
jl
shrl
ret
aam
pop
ret
mov
int3
inc
push
mov
faddl
lcall
std
mov
or
pop
sub
and
orl
xor
inc
inc
sbb
inc
frstor
push
fadd
aam
pop
xchg
mov
pop
push
nop
lods
add
mov
add
test
add
js
inc
or
jo
adc
cmp
xor
jl
sbb
pop
dec
test
pop
addb
shrb
rcrl
inc
loope
inc
dec
jecxz
sbb
xor
dec
push
mov
add
sbb
fsubrl
lds
sbb
testb
pop
pop
aam
imul
mov
enter
xchg
sahf
and
imul
adc
and
xchg
sub
and
adc
ret
sub
xchg
lret
popa
pop
ss
pop
and
insl
mov
adc
sbb
push
pusha
adc
mov
add
dec
push
test
mov
mov
in
push
adc
push
lods
lds
sti
insb
cmpsb
cmpsb
push
or
inc
imul
and
and
sbb
test
jae
adc
jb
call
jecxz
xchg
insb
xchg
pop
sub
add
add
cmp
cld
dec
popa
inc
adc
add
mov
out
js
adc
sub
movsl
fwait
jae
add
add
daa
push
add
push
pop
sti
jo
inc
ret
add
popa
jl
popa
sub
fcomp
push
enter
add
sub
jp
xchg
scas
cmpsl
lret
mov
aam
stos
pushf
or
pop
mov
int3
dec
add
imul
pop
push
push
mov
jmp
pop
inc
loopne
and
test
insb
loope
loop
xchg
jo
mov
lahf
sbb
push
push
mov
adc
out
add
scas
std
mov
mov
inc
adc
xchg
mov
ret
adc
ficoms
iret
hlt
xlat
and
adc
shlb
int3
movsb
out
lods
xor
test
sti
jp
mov
and
push
push
mov
bsr
add
imul
imul
sub
and
bound
int
adc
mov
in
xchg
lea
xchg
adc
lcall
jne
fnsave
in
lds
es
dec
xchg
cmp
adc
cmp
push
das
push
scas
add
dec
adc
mov
movsl
and
cmp
adcb
jge
jp
inc
adc
xor
and
inc
imul
lea
mov
xchg
push
jbe
mov
das
adc
mov
pop
mov
jo
sbb
mov
mov
popa
mov
cmp
mov
out
or
mov
insb
lret
jnp
cmpsb
test
add
push
push
jbe
cs
mov
jp
and
sbb
add
imul
loop
cmp
movsl
leave
sub
dec
dec
repz
inc
cmp
div
mov
jl
cmp
mov
inc
and
jne
xor
pusha
and
mov
ret
clc
add
dec
lcall
xor
ja
in
lahf
xchg
scas
sbb
xchg
repnz
jns
mov
pop
sbb
ja
test
mov
popa
and
and
dec
loope
sarb
cmpsl
add
pusha
faddl
push
lret
nop
xor
repnz
xchg
xor
std
insl
and
je
mov
cs
out
xchg
mov
or
dec
mov
mov
mov
mov
cmpsb
icebp
jb
jns
xor
mov
jae
jb
out
adc
lcall
test
and
faddp
xchg
adc
sub
lcall
setnp
mov
jb
sub
mov
xchg
jb
pop
inc
into
and
pop
cmp
and
fwait
ss
sbb
sbb
data16
add
rcrb
into
sub
addb
pushf
outsl
add
mov
xor
cs
push
daa
push
pop
lret
jl
test
push
rol
shlb
outsb
sbb
movsl
adc
test
push
pop
loop
and
imul
sub
andl
and
dec
inc
and
sbb
adc
push
dec
es
mov
dec
out
fldl
jle
xchg
add
dec
xchg
fisttpll
adc
fiadds
xchg
ficoml
mov
or
cmc
xchg
call
cmpb
pop
sbb
or
cmp
adc
push
mov
in
add
loopne
fiadds
add
incb
inc
fnsave
jmp
adc
xor
mov
and
add
out
add
ret
sub
lret
inc
cmpl
mov
cmpsb
pusha
pop
mov
dec
jge
mull
add
inc
sub
lret
das
nop
cltd
outsb
rol
cmp
shlb
rdpmc
cmpsl
popa
inc
loopne
inc
dec
jae
into
cmp
ds
rorb
and
sahf
loope
fisttpll
adc
movhps
lret
jnp
mov
adc
js
pop
dec
lcall
andl
mov
ss
jmp
dec
and
push
add
pop
flds
and
int
sub
or
fs
hlt
pop
loope
imul
lea
and
mov
shr
xor
ror
or
pop
sub
pop
ja
leave
rolb
mov
adc
in
add
test
cmp
xor
adc
scas
pop
aad
xor
dec
cmpsl
and
mov
mov
or
mov
adcl
loopne
inc
lea
gs
lret
pop
jl
xor
cmp
sub
int3
adc
cmp
add
mov
cmp
fimuls
pop
sahf
mov
and
jno
cmp
test
mov
ret
or
enter
sbb
jl
nop
bound
popa
add
add
pop
add
xor
unpckhps
cmc
mov
fwait
inc
or
push
cmovp
sbb
dec
xor
or
push
xchg
cmp
stos
insb
adc
sbb
and
icebp
and
outsl
rclb
xor
dec
mov
pop
ret
movsl
and
sbbl
sbb
add
sub
sbb
in
ss
fnsave
repz
xchg
or
shll
sub
mov
cmp
aad
mov
aam
in
aad
push
mov
cli
test
jns
xor
adc
and
jb
aad
mov
and
add
push
add
and
vprotw
test
dec
loopne
fsubp
mov
sbb
loope
sbb
iret
add
mov
addb
sbb
add
inc
jae
and
addb
jmp
jmp
or
enter
ljmp
imul
loope
mov
clc
xchg
jmp
stc
ss
sub
mov
in
push
add
push
mov
and
ljmp
psraw
dec
jnp
xchg
inc
adc
cwtl
dec
ret
xor
std
mov
je
cmp
outsb
jb
mov
cmp
xchg
iret
cwtl
mov
and
repnz
adc
int
cmc
mov
pop
lods
adc
sbb
sbb
add
lret
push
out
add
mov
add
dec
call
push
add
clc
xor
loop
xchg
stos
sahf
add
inc
xor
rclb
pushf
add
outsb
push
fcoml
xchg
cli
fs
ficoms
inc
pop
dec
sub
into
daa
scas
in
add
add
stc
mov
test
mov
fwait
lods
add
outsl
stos
jae
sti
mov
insb
test
push
push
xor
pop
cmpsb
fmulp
out
add
and
fldl
psrad
xchg
sub
mov
fisttpl
inc
fscale
mov
jnp
loope
add
out
add
dec
shr
add
sub
push
mov
sub
test
ret
loope
js
arpl
xor
sbb
sub
dec
xor
sub
mov
adc
pop
and
loop
incl
pop
mov
inc
shlb
pop
aam
sbb
mov
pop
push
dec
mov
das
aam
pop
or
pop
mov
andl
push
jb
jg
pop
or
and
and
loope
adc
mov
add
xchg
ret
flds
add
cmp
adc
in
jecxz
test
jg
dec
mov
lret
data16
fs
or
mov
das
xor
pop
push
movsl
fisttps
ja
mov
mov
add
ja
ss
hlt
popf
push
adc
jecxz
es
mov
mov
outsb
int
jo
adc
jmp
loopne
loop
stc
sbb
loope
inc
testl
popa
jo
fsubl
jne
fcmovu
push
imul
aad
js
pop
adc
rorl
adc
ret
cmp
cmp
jmp
loopne
bound
cmc
stc
push
cmc
rclb
push
push
and
popa
add
loop
push
in
lahf
cmp
imul
inc
testl
roll
es
sbb
or
cmp
sub
jne
lret
sbb
sub
lcall
add
rolb
sbb
sub
stos
adc
out
adc
and
inc
lret
ret
dec
sub
rcl
jo
dec
jns
outsl
rol
fldenv
xchg
test
push
add
and
clc
cmp
xor
es
rcrl
pushf
or
sbb
cmpsl
ret
xchg
push
mov
xor
insl
and
pop
fcmove
arpl
and
ret
mov
std
mov
inc
inc
and
stos
sub
dec
inc
aaa
insb
popf
sahf
xchg
shll
nop
ss
or
pop
mov
out
sbb
dec
xchg
jmp
popf
jbe
les
adc
xor
clc
dec
xlat
xor
subl
fwait
loopew
ror
or
cmp
add
push
subl
out
je
lret
movsb
cmpsb
jnp
add
lret
xchg
adc
sub
lea
inc
fisttpll
xchg
jnp
xor
and
sbb
push
or
sbb
stos
imul
inc
or
imul
nop
push
xchg
xchg
mov
cwtl
mov
xchg
iret
lret
aad
inc
push
sbb
lret
sbb
adc
fstpl
dec
sbb
push
fadd
mov
call
or
arpl
das
sbb
xchg
pop
cmp
adc
ret
lcall
out
sub
push
dec
aad
addl
lret
aad
outsl
insl
xchg
in
sbb
add
ret
aad
lods
cmp
push
outsb
cmpl
scas
inc
sbb
out
int3
push
mov
xor
fwait
loop
add
into
push
add
mov
push
iret
mov
icebp
push
fs
rolb
or
pusha
out
loop
inc
aad
jnp
sahf
popf
xchg
xchg
nop
jb
adc
lret
gs
enter
lea
insl
dec
ljmp
pop
std
push
lcall
out
cmp
loopne
xor
dec
outsb
mov
sbb
add
lret
in
data16
in
or
xor
mov
ret
or
push
dec
or
shll
dec
pushf
addb
repnz
jmp
dec
shr
jle
jo
and
push
ljmp
mov
mov
lea
xlat
outsb
and
jge
pusha
test
mov
cmp
xor
mov
enter
lods
lods
jbe
cli
fsubrs
fucomp
xor
lea
push
mov
mov
and
iret
sub
push
adc
pop
mov
ja
adc
jecxz
imul
xchg
inc
mov
mov
inc
xchg
sbb
xchg
adc
push
add
inc
mov
les
jnp
lret
xor
shll
xchg
add
mov
cmpsb
mov
arpl
lds
int
pop
and
jnp
lcall
loopne
push
popa
and
mov
icebp
cmp
sahf
insl
out
pop
dec
outsb
xor
jns
cwtd
sbb
xchg
pop
sub
cmpsb
cmc
xchg
jns
jge
pop
xor
sbb
jnp
stc
int3
add
sahf
inc
pop
jp
fidivrs
lret
pop
mov
out
pop
pop
adc
sub
adc
repnz
push
popf
push
cli
add
push
xlat
fcomps
js
jae
cmpsb
imul
insb
xlat
xchg
popa
push
minps
or
iret
or
mov
vmptrld
xlat
imul
and
test
jl
sbb
lods
rcrl
mov
add
rcll
imull
mov
ret
dec
loopne
aaa
subb
mov
cli
adcb
cmp
cmp
or
add
mov
cmpsb
jmp
shrl
push
fcmovb
mov
insl
fisttpll
add
jbe
mov
push
pop
mov
insb
sbbb
cmp
into
add
fs
dec
cmpsl
dec
or
pop
imul
dec
mov
cmpsl
xchg
rorb
ja
daa
popa
xchg
je
dec
mov
aad
and
daa
ret
pop
aad
and
jbe
jp
add
and
add
sbb
sbbl
jg
enter
xor
sarl
jb
xchg
rcll
aas
stc
rclb
mov
adc
add
popa
push
mov
out
enter
rol
and
int3
inc
and
ret
inc
in
gs
bound
mov
mov
loop
xor
cwtl
jb
adc
loope
mov
sti
lods
std
mov
inc
shl
sahf
or
jecxz
aaa
in
dec
roll
push
cmp
or
lret
je
stos
loopne
movsb
pop
gs
jno
cmpsb
notb
adc
ja
sbb
push
sbbl
cmpsb
pop
bound
pop
ds
xchg
push
ljmp
add
scas
nop
out
sub
adc
pop
inc
test
addr16
jl
lret
lock
sbb
push
aam
sbb
popf
dec
roll
push
sahf
aas
cwtl
rolb
xor
lret
stc
cmpsl
adc
add
out
cwtl
xor
ret
xlat
lods
ljmp
shll
adc
pop
jg
or
and
add
cltd
pop
sbb
cmpsl
inc
iret
loope
cld
je
je
inc
bound
pop
push
dec
add
push
adc
sbb
testl
repz
jmp
xchg
test
pushf
add
add
dec
stos
add
lahf
popf
jp
mov
dec
xchg
fiaddl
ds
mov
inc
in
mov
addr16
popf
mov
sarb
lret
inc
movsb
add
js
mov
lcall
fbld
cmp
jo
jo
in
pop
cltd
mov
sub
popf
and
fwait
add
ret
out
lcall
out
sbb
xchg
mov
xchg
std
adc
orl
xchg
cmp
cmp
lock
rcll
fiadds
fnstsw
shll
and
mov
adc
inc
cmp
mov
cmp
out
pop
push
lcall
pop
loop
xor
je
add
sbb
mov
or
push
adc
divb
into
pop
int3
jne
sub
or
xor
mov
dec
or
pop
cmp
arpl
negl
hlt
dec
add
jge
cmp
mov
gs
sahf
lahf
mov
jp
adc
gs
push
nop
notb
xchg
sbb
pop
outsl
or
mov
cmpsl
repz
outsb
mul
test
cmc
pusha
adc
push
fstps
pop
inc
pop
sub
inc
js
roll
add
loopne
inc
ljmp
loop
ja
xchg
mov
xor
sub
push
xchg
add
stos
pop
add
mov
jecxz
jge
inc
ja
xor
movsl
loop
cwtl
sub
dec
out
sub
push
or
ror
sbb
mov
adc
xchg
stos
sahf
in
cmp
push
bound
inc
pop
or
mov
push
adc
dec
movb
loopne
add
in
pop
subl
xor
rcl
cmp
and
imul
mov
jae
scas
cs
cmc
xchg
iret
push
or
lea
shrl
js
or
roll
imul
jne
loope
or
addb
ljmp
scas
add
imul
mov
mov
sub
xlat
adc
sbb
adc
and
dec
sub
sub
sub
jnp
in
jbe
roll
adc
or
add
movsb
ja
and
int3
xor
cltd
aaa
mov
or
add
xchg
mov
jg
add
jno
iret
movsl
sarb
or
cmp
loopne
lea
lock
in
ret
fadds
sbb
and
scas
add
je
lea
loopne
stos
jo
cmp
sbb
mov
mov
add
mov
xor
mov
sbb
sbb
sbb
fisubrs
mov
xchg
jbe
sbb
or
pop
stos
push
cmp
adc
push
mov
fsubrl
cmp
scas
sub
je
add
shll
jo
add
mov
xor
test
jo
sub
pop
scas
imul
xchg
mov
jg
sahf
iret
rolb
sbb
stos
jnp
outsb
fwait
push
movsl
loope
jmp
dec
mov
lcall
loop
ret
aas
and
xor
test
mov
cmp
mov
dec
jmp
sti
cltd
lcall
sub
pushf
sbb
dec
pop
aaa
jo
add
push
out
inc
inc
imul
add
out
jl
add
pop
add
mov
sbb
push
pop
arpl
ja
inc
mov
inc
filds
jle
into
push
rclb
push
and
popa
movsl
bound
imul
pop
in
leave
push
out
adc
pop
fcomps
jbe
xchg
xor
inc
stos
repz
xchg
mov
cmp
cmp
xor
addb
push
or
test
stos
mov
sbb
adc
push
ret
jp
push
adc
push
push
inc
lcall
arpl
ljmp
lea
mov
sub
cmp
out
jns
fmuls
hlt
adc
jge
mov
ret
aam
dec
xchg
or
add
add
sbb
addl
dec
mov
jns
mov
push
and
enter
mov
or
icebp
into
test
pop
addr16
mov
mov
mov
jae
jp
aaa
and
add
es
sbb
dec
scas
cmp
jle
das
fwait
pop
mov
inc
jnp
mov
cmp
popw
pop
sbb
ror
pushf
ret
jge
js
rcrb
adc
pop
mov
sbb
pop
cmp
xor
repnz
test
inc
add
pop
and
loop
loop
lods
mov
push
out
add
or
push
jp
dec
sbb
icebp
mov
movsl
jmp
imull
pop
sub
xor
je
pusha
xchg
push
das
cli
pop
outsl
mov
add
hlt
adc
mov
xor
insl
in
push
sub
shll
sahf
jp
push
pop
scas
dec
inc
popf
fimuls
xor
dec
lret
cmc
ss
mov
push
add
inc
js
inc
stos
lret
dec
cmp
lods
push
pop
and
fdivs
inc
mov
xchg
jno
push
shrb
out
mov
push
sub
dec
jb
verr
lret
xchg
mov
inc
add
inc
sbb
mov
cmp
fdivl
pop
fs
test
dec
scas
pop
push
xor
sbb
jne
push
sbb
add
notb
pop
xchg
push
imul
out
out
dec
jnp
pusha
dec
icebp
loope
mov
rcrl
adc
push
aaa
inc
adc
bound
arpl
inc
jl
add
mulb
jno
fdivl
repnz
xor
lods
adc
cwtl
jbe
cmp
mov
insl
mov
loopne
pop
push
pop
ss
ds
mov
adcl
aam
iret
std
dec
mov
sahf
gs
popa
jb
and
sub
idivb
test
inc
or
and
push
push
loopne
repz
or
ret
mov
scas
dec
cli
lret
sbb
mov
negl
loop
outsl
and
pop
xchg
jo
or
jbe
fsts
add
aam
push
fmull
loopne
or
pop
fwait
adc
mov
leave
leave
pop
loop
push
mov
lahf
cmp
test
add
imul
testl
std
pop
and
clc
ljmp
or
lret
xor
cltd
cmc
pop
fcomps
out
cmp
shll
rolb
bound
jno
gs
mov
add
push
pushf
jnp
les
bound
test
xchg
mov
pop
adc
sub
jg
js
lock
mov
mov
and
imul
mov
sub
mov
fists
adc
ljmp
adc
pop
sbb
cmp
jg
subb
ss
stos
add
mov
push
lods
repnz
incb
rolb
lods
cmp
in
dec
aam
ret
aaa
inc
lea
insb
mov
cmp
inc
or
add
pop
sub
jge
popa
popa
push
inc
add
xor
mov
mov
scas
sbb
cmp
out
cmc
sbb
or
and
subb
pop
lds
iret
addr16
das
test
data16
mov
jns
int
call
icebp
cmp
outsb
sub
movsl
jmp
pop
mov
or
jbe
push
jns
fists
xlat
sbb
mov
push
cli
push
adc
imul
ds
mov
cltd
scas
pop
xlat
stos
cmp
sahf
ds
jae
lock
and
mov
jbe
mov
ret
sti
dec
or
mov
ljmp
lahf
pop
inc
insb
clc
cmpsb
mov
add
bndldx
addr16
cmp
jb
push
fistpll
ffreep
fbstp
mov
and
add
push
push
cltd
sbb
ret
pusha
push
insl
insl
outsb
or
adc
inc
js
out
dec
lods
add
mov
lret
shll
lock
lret
mov
out
das
ret
and
cmp
add
popf
rcrb
xor
hlt
xor
cmp
inc
add
test
xor
push
or
jmp
mov
jno
loope
popa
gs
pop
mov
nop
ret
bound
lock
cmp
ljmp
das
add
pop
xchg
jnp
adc
es
inc
add
int
mov
test
jmp
xchg
push
pushf
rclb
rorb
push
dec
in
xlat
movsl
imul
mov
out
ss
rol
inc
test
push
add
sbb
xchg
cli
add
mov
jo
inc
test
out
fldl
and
add
xor
cmp
mov
sbb
ljmp
mov
lods
cmp
rcl
mov
mov
jecxz
insb
adc
lods
pop
pushf
pop
dec
sahf
xchg
sahf
insl
test
xchg
in
stos
push
in
ret
sub
les
lea
ljmp
mov
xchg
loopne
out
and
push
shl
hlt
ja
nop
dec
pop
jg
loop
popa
mov
and
dec
inc
sbb
dec
dec
push
push
mov
ret
mov
and
xchg
lods
push
sbb
jo
orl
pop
sti
mov
out
sub
addr16
sub
lds
add
loope
add
cmpsb
push
dec
xor
and
add
xchg
or
dec
jp
jge
stos
adc
and
dec
sub
mov
rolb
push
xchg
mov
imul
pusha
pop
mov
mov
adc
xchg
inc
popa
pop
lret
add
cmpsb
push
cmpsb
jbe
mov
jge
clc
push
push
or
mov
push
sub
xor
sbb
xchg
xchg
mov
lret
xchg
adc
mov
imul
std
jbe
lret
jnp
lret
dec
lret
jno
lret
jmp
jb
add
stc
insl
hlt
fsubrs
fmull
mov
ljmp
shll
and
adc
dec
leave
push
pushf
mov
imul
push
in
int3
or
pop
pop
imul
or
sub
mov
pop
mov
mov
push
mov
test
data16
mov
cmp
and
dec
icebp
pop
je
popl
lods
push
sahf
sub
outsb
xor
mov
fld
ds
mov
ret
sub
add
std
add
adc
mov
outsb
scas
xorb
orl
push
or
shlb
shlb
or
movsl
inc
xor
or
dec
adc
addr16
pop
stos
pop
xor
mov
loop
outsl
pop
mov
lds
pop
xchg
fstpl
push
xlat
add
cmc
es
pop
push
mov
dec
and
inc
ja
arpl
add
js
pop
mov
out
ljmp
inc
mov
rol
arpl
cli
cmp
cld
out
pop
or
lock
pop
adc
mov
pop
push
insb
xchg
mov
addr16
sub
mov
jae
insb
add
call
cmp
popf
add
and
push
imul
lock
shll
mov
cmpsl
add
out
push
mov
testl
dec
lock
mov
and
in
loopne
adc
loop
mov
stos
add
and
fstps
xor
shlb
shll
inc
sbb
mov
or
and
imul
adc
pop
out
inc
bound
roll
adc
mov
sbb
cmp
dec
repz
mov
pop
ja
popa
cmp
dec
push
xchg
out
xchg
push
push
sbbl
xor
ds
lods
and
ds
push
cmp
test
cmp
sbb
cli
dec
pop
sbb
mov
sti
insb
dec
lock
pushaw
lea
jb
jp
or
movsb
dec
inc
push
pop
lock
cmp
jnp
mov
popa
addr16
aas
popa
movsl
pop
stos
jecxz
mov
and
rol
jb
inc
xchg
cmpsl
mov
mov
sar
xchg
and
and
aas
cld
stc
and
cld
enter
jl
ss
call
aam
icebp
in
rorl
sbb
jns
dec
cmp
mov
mov
lea
mov
pop
pop
aas
fs
xchg
add
test
xchg
jg
gs
es
add
repnz
pusha
push
leave
or
push
sbb
arpl
enter
or
push
cmp
mov
test
pusha
and
fisttpll
test
jo
and
xor
cmp
jbe
subl
adc
mov
ja
imul
clc
in
pop
call
lret
mov
loopne
mov
fldt
push
xor
xchg
pop
and
test
push
pop
rcrl
shl
fdivl
mov
lret
mov
mov
sub
aam
enter
lcall
push
push
loope
test
insl
pop
pop
ret
loopne
push
test
jo
and
jle
xor
xcrypt-ecb
cmpsl
mov
add
push
and
repnz
add
cmp
push
mov
xorb
sti
test
mov
mov
aaa
nop
xor
xchg
sti
rorl
pop
hlt
outsl
jo
test
mov
rcll
stos
lret
bound
ja
jbe
bound
jnp
sub
and
popf
or
pop
add
js
add
fstpl
mov
ljmp
cmc
das
sub
pop
pop
rcr
cmp
push
sub
push
pop
cli
jbe
mov
dec
mov
loope,pt
call
cli
aad
and
sti
dec
inc
loopne
lahf
add
jl
rcll
fidivl
test
add
xchg
mov
push
jg
cmp
movb
inc
cmpl
and
fwait
jmp
cmp
inc
ja
stos
mov
xchg
inc
lcallw
mov
iret
cmc
ficomps
jo
test
andb
lret
add
mov
mov
les
leave
push
cli
dec
push
pop
aaa
push
and
cmp
stos
inc
loope
jne
add
or
jp
and
pop
xchg
mov
js
push
pop
add
in
adc
faddl
popf
sub
js
loop
aas
pusha
lcall
bswap
mov
mov
mov
xor
mov
test
mov
mov
inc
add
mov
and
ss
arpl
js
xor
and
jne
stos
fcoml
mov
inc
pop
mov
xchg
push
pop
cmc
repz
adc
mov
mov
fdivl
sbb
inc
iret
fsubrl
push
mov
dec
mov
cmp
jne
loope
ret
mov
sbb
mov
jmp
add
push
pop
mov
jl
add
movsl
aad
push
xor
aad
orl
test
jae
inc
fcmovnb
add
mov
sub
adc
adc
mov
outsl
or
lods
lea
push
dec
mov
xor
push
ret
mov
push
mov
pop
pop
add
test
lds
fists
pop
push
roll
jge
mov
mov
sbb
cs
cmp
cmc
lahf
mov
rcrl
add
pop
adc
push
or
inc
adc
loope
fisubrl
leave
sbb
add
popa
stos
inc
sub
pop
imul
imul
int
dec
or
outsl
outsl
fsubrs
pop
inc
mov
add
lret
int
inc
addl
mov
and
xor
push
loopne
jge
push
andl
add
add
push
pop
push
cmpsb
inc
mov
arpl
lds
add
xchg
test
mov
mov
ffreep
stos
dec
xor
dec
notl
add
adc
push
xor
pop
inc
or
push
pop
xor
push
test
or
test
inc
mov
fisubrl
sbb
push
andl
adc
mov
mov
add
mov
mov
pop
inc
and
inc
mov
inc
push
stos
and
imul
lods
scas
aad
or
inc
or
push
lea
dec
mov
push
mov
test
lahf
push
pop
mov
push
sub
mov
cmpsb
dec
or
popa
and
add
xor
push
popa
or
or
add
cmp
mov
push
or
sub
sbb
lds
add
test
dec
cmp
bound
push
sub
push
mov
lahf
rorl
loop
loopne
ror
or
aad
mov
stc
add
mov
mov
or
addb
sub
popf
sub
sub
outsl
xchg
xchg
mov
push
jge
pusha
push
and
push
ret
sbbb
mov
xor
jge
jecxz
add
movsb
cltd
cltd
pop
adc
add
stos
pusha
mov
or
pop
sbb
mov
push
adc
pop
pop
aam
add
adc
inc
adc
ret
jnp
sbb
jne
sub
mov
mov
test
xchg
cmp
push
ret
xchg
mov
push
aad
xchg
daa
adc
mov
psubw
add
inc
pop
add
xor
mov
scas
lds
xor
mov
sub
lahf
adc
pop
adc
xor
push
lds
insl
xor
mov
addl
adc
adc
fildll
push
push
popa
xor
pop
stos
dec
mov
mov
in
ud1
dec
jge
jns
and
or
mov
or
and
stos
jl
mov
jle
or
or
cs
idivb
dec
into
fidivs
imul
or
adc
ja
outsb
push
jl
add
add
mov
mov
out
sti
mov
pop
outsl
into
and
sbb
sub
jl
add
cmp
and
mov
add
in
xor
jbe
cmpsb
rclb
or
dec
cs
or
outsb
testl
dec
push
inc
dec
out
sbb
jnp
jge
cmp
and
dec
or
dec
pop
jbe
jle
mov
add
jb
pop
adc
ret
xlat
jne
cmp
es
dec
push
lcall
js
and
bound
loope
or
or
jge
or
dec
or
or
dec
adc
jge
sub
xchg
inc
or
imul
inc
das
mov
xchg
ret
mov
jg
push
add
movsb
or
rorb
gs
add
inc
cli
sbb
add
in
sarb
or
dec
cmpsb
add
int3
mov
decb
sbb
jle
mov
das
mov
inc
in
adc
pop
xchg
add
movl
dec
sbb
xor
mov
cmp
push
push
fidivrl
negb
pusha
push
popa
mov
mov
dec
pop
mov
push
stc
or
cmp
sbb
das
push
add
cmp
and
fimull
int3
push
rorb
clc
dec
iret
push
insb
lock
push
add
mov
pop
int3
es
mov
mov
mov
sarb
or
loopne
push
pop
pusha
or
jp
loope
mov
mov
or
cmp
mov
enter
es
xor
inc
adc
shlb
dec
push
cs
scas
push
sub
test
inc
jl
or
int
sbb
add
jge
and
pop
sub
divb
cmpsl
fistl
out
adc
push
jb
push
cmp
jbe
adc
sub
scas
shll
or
push
adc
int
and
push
push
or
out
xlat
fistpll
mov
int
pop
repnz
add
add
ficoml
std
jnp
aam
pushf
sbb
adc
roll
lea
mov
fucomip
adc
es
bound
xchg
add
jbe
dec
add
push
out
ja
mov
jo
mov
pop
inc
xor
cmp
mov
aam
or
mov
notl
negb
push
lods
ret
into
pop
add
xchg
jno
cmpb
add
sub
xchg
pop
bound
loopne
mov
mov
loopne
sbb
cmp
adc
decb
push
stos
mov
call
add
adc
lds
and
stos
mov
fdiv
pushf
insl
jne
sbbb
outsb
roll
les
pop
sbb
push
add
mov
fcmovnb
and
mov
push
test
and
mov
mov
outsb
and
sub
stos
and
repnz
insb
adc
dec
loope
xor
rolb
mov
dec
outsb
inc
sbb
jmp
lcall
add
je
in
xor
mov
cmpsb
push
rorl
clc
ljmp
push
jae
insb
data16
adcb
in
mov
inc
mov
mov
add
imulb
nop
les
lods
mov
in
sti
nop
scas
mov
in
push
adcb
lods
jbe
push
adc
sahf
into
xor
stc
mov
mov
mov
ror
cmp
pop
out
sti
lea
movb
cwtl
mov
cld
and
and
js
addr16
mov
imul
pop
adc
subb
shlb
jle
jle
xchg
jg
xor
pop
aaa
fs
sub
fcmove
push
xchg
sbb
fisubrl
and
or
xor
jg
lcall
je
xchg
cli
cmp
cli
inc
dec
decl
and
mov
int3
loopne
mov
loope
movsl
inc
push
cli
iret
test
and
lcall
insb
cmp
mov
sub
in
icebp
dec
bnd
inc
jno
adc
cmp
xchg
sbb
imul
and
mov
pop
das
popa
testb
push
insl
dec
pop
push
mov
je
adc
into
sbb
test
sarb
inc
ja
insl
sub
mov
push
outsl
or
pop
in
or
mov
push
sub
sbb
arpl
inc
xlat
ja
pop
cli
jp
xchg
loop
or
xchg
jb
mov
sar
cwtl
int
mov
cli
jmp
sarb
mov
jl
xlat
aas
inc
out
clc
and
les
dec
jmp
call
in
lret
pusha
rorl
jp
mov
pusha
out
xlat
enter
or
push
test
sbb
push
mov
aam
icebp
sahf
inc
dec
lods
push
call
lods
xchg
je
js
sub
sub
out
or
cmp
ss
rolb
divb
or
cmp
cmc
mov
xor
fcmovu
dec
in
les
jmp
jp
clc
mov
ja
rcl
push
insb
out
fadds
jl
fistpl
xchg
adc
adc
xlat
jbe
push
subb
aaa
rclb
jmp
shrb
mov
push
mov
mov
jno
xor
xchg
inc
inc
sbb
xchg
fucomip
xchg
enter
fcomi
jno
cmp
pop
jo
add
inc
sub
jecxz
faddl
das
cmp
xchg
cmc
inc
cmpsb
cmp
inc
les
xchg
fcomps
jns
cmp
mov
ret
jno
inc
push
pushf
or
sbb
lds
jp
jmp
out
pop
mov
fwait
push
sbb
add
mov
rorl
les
ret
daa
pop
loop
mov
or
lahf
hlt
hlt
clc
push
lock
je
mov
fiadds
ds
ds
imul
ja
jne
pop
inc
push
test
pusha
pop
cmc
fcoml
or
xchg
xchg
stos
nop
add
mov
mov
shl
or
push
xor
adc
pop
pop
mov
pop
cs
sti
out
or
ret
ljmp
in
sbb
icebp
repz
scas
jbe
sub
mull
jg
adc
test
inc
daa
jl
mov
mov
or
ret
popf
movsb
outsb
sbb
in
pop
dec
dec
push
andb
inc
inc
inc
add
pushf
flds
xchg
and
jbe
sub
in
shl
test
ds
mov
push
icebp
ljmp
xlat
cmpsb
nop
cmc
mov
jge
xchg
push
sbb
or
mov
mov
lds
scas
mov
cmp
push
mov
xchg
mov
add
fidivs
lock
add
add
lods
test
push
cwtl
outsb
call
js
icebp
loop
cmp
xchg
cmpsb
cld
jmp
pop
push
push
rcr
ja
add
sar
cmp
rclb
pop
repnz
sbb
push
test
cmp
ret
or
mov
or
outsl
or
je
mov
sub
pop
in
hlt
shll
cmpsl
sbb
rcrb
jbe
pop
scas
fwait
fstp
icebp
mov
or
push
fsubl
movsb
bound
fidivs
xor
insb
and
xchg
imul
dec
or
mov
jle
jp
insb
lods
mov
mov
fiaddl
xor
jns
jg
inc
pop
jmp
in
enter
fsubrs
in
or
dec
out
and
iret
jo
or
clc
add
xor
sbb
insl
mov
xchg
or
push
push
fnstenv
add
popl
dec
ss
cs
ds
inc
rol
cmc
mov
das
cmpsb
ds
dec
hlt
push
cmc
xchg
dec
push
int3
jle
mov
fcomps
inc
inc
mov
sbb
imul
mov
mov
inc
pop
inc
push
movsl
mov
rcll
add
repnz
in
mov
push
js
inc
notb
dec
dec
loope
in
lahf
mov
and
js
push
aam
js
into
loopne
mov
pusha
adc
adc
add
bound
mov
push
mov
testb
pop
call
fsubrl
shlb
dec
stos
xchg
or
cmovne
cmpl
xchg
movsl
jae
dec
in
ret
ret
xchg
call
movb
out
push
in
lret
mov
mov
insb
ret
cmc
icebp
sbb
shlb
stos
hlt
mov
test
pop
push
sti
xorb
mov
cmpsl
xchg
imul
cmp
ret
icebp
cltd
sbb
test
mov
pop
rorb
jo
and
adc
xor
pop
insl
int
or
arpl
inc
cwtl
cld
lods
pop
or
pop
mov
in
ret
divb
insl
js
pop
sbb
or
pop
rclb
push
inc
mov
and
test
popa
shl
push
pop
insl
rcrb
jbe
lcall
jl
mov
jb
je
xlat
dec
inc
and
mov
push
nop
inc
xor
add
cmpsb
dec
sti
jo
mov
jnp
jo
fsubrs
ja
mov
add
pop
jge,pn
enter
call
fs
fdivr
je
enter
sahf
or
or
scas
jae
sbb
sub
mov
cmp
sahf
clc
xchg
or
cmp
sub
inc
pop
cs
add
mov
jo
jo
mov
je
and
dec
mov
lods
push
push
scas
push
ljmp
cltd
jb
pop
push
js
fists
sub
sbb
or
les
adc
mov
jae
cmp
push
and
lds
cli
cmp
or
sub
int
pop
addb
pop
dec
es
push
roll
loope
add
and
cmpsb
mov
sbb
testb
jns
pop
lock
aas
call
lahf
xchg
pop
and
and
dec
push
mov
xchg
pop
les
repnz
mov
add
mov
jl
repz
ss
pushf
aaa
nop
mov
test
out
push
adcb
or
pop
inc
sbb
insb
clc
cmp
push
dec
mov
movlhps
ret
cltd
mov
out
daa
in
into
cltd
call
sbb
push
and
imul
mov
sti
and
pop
mov
or
je
ds
and
mov
pop
addr16
push
loop
sub
imul
ja
inc
call
roll
inc
xchg
icebp
inc
mov
push
mov
mov
sub
loopne
aaa
movsb
inc
pop
loopne
sbb
sbbb
outsb
xor
imul
push
rcrl
iret
aad
lods
icebp
add
imul
mov
mov
sbb
push
xor
jne
push
pop
xchg
popf
pop
insl
outsb
sbb
call
lods
shr
dec
sarl
std
ret
mov
fadds
mov
pop
cwtl
xlat
xor
push
and
mov
cmp
xchg
mov
or
ja
cld
and
repnz
js
xor
movsb
jp
inc
sub
cmp
sarb
test
xor
std
jns
jno
mov
and
mov
sahf
push
xchg
les
xchg
int3
into
push
out
pop
insl
loope
pop
pop
sub
imull
pop
push
xorb
push
fcoml
sub
je
cmp
and
inc
shrl
cld
xor
mov
out
jnp
adc
push
add
dec
mov
cld
fimuls
sbb
incl
cmp
jge
xchg
in
sbb
lds
cmp
adc
mov
testl
pop
mov
lcall
mov
dec
js
rcll
lods
xor
sarl
dec
push
xchg
and
pop
mov
jp
push
xor
popa
pushf
jl
rorb
dec
sub
fimuls
xor
push
repz
sbb
dec
mov
add
inc
jae
scas
inc
push
xlat
imulb
pop
jb
nop
sbbb
pop
jne
inc
sarl
jo
into
cmp
fwait
sbb
ds
add
add
inc
mov
test
add
orb
pusha
push
mov
lods
add
xor
les
fsubrs
mov
and
add
shrb
pop
test
mov
lret
mov
and
sub
ud0
mov
dec
dec
scas
or
jbe
into
and
cmc
inc
pop
lock
xchg
pusha
inc
jp
sahf
push
insb
xchg
cld
loopne
or
pop
jmp
test
inc
push
mov
sti
iret
jo
add
add
decl
leave
xor
incb
sub
add
mov
inc
sub
inc
xor
insl
or
jmp
sti
mov
dec
arpl
subl
pop
mov
icebp
xor
das
mov
pop
fs
xor
xchg
xchg
nop
mov
push
jno
mov
sub
and
mov
push
je
and
and
scas
mov
stos
aam
sub
push
mov
aad
push
fwait
mov
mov
jp
jo
dec
add
ret
mov
stos
push
mov
movsl
lcall
hlt
mov
jmp
stc
mov
orb
push
pop
pushf
ljmp
lock
mov
sbb
cmp
fs
push
pushf
hlt
xor
stos
and
popf
jno
dec
aad
dec
dec
popa
lcall
lods
rcrb
psubb
negb
sti
out
movsl
xor
out
or
dec
bound
clc
pop
outsl
js
mov
push
dec
sbb
fcmovne
adc
ret
rcrl
inc
lcall
int3
add
int3
pop
mull
jl
stos
mov
dec
mov
in
outsl
inc
xchg
cmpsb
pusha
and
inc
jle
and
xchg
cmp
push
jmp
mov
lcall
out
xchg
add
sbb
imul
mov
mov
leave
inc
jns
mov
pusha
popf
pop
mov
lock
jns
fs
cmc
and
sub
leave
jp
stos
aas
adc
xchg
inc
stc
pop
adc
push
or
push
cmpsl
pop
push
lea
add
add
cmp
push
push
ljmp
xor
sti
aam
in
mov
idivb
in
pop
xchg
sub
nop
sub
sbb
sub
hlt
jo
adc
mov
js
jbe
fstpt
pop
xor
push
sub
push
jns
push
adc
and
aad
jp
or
sub
dec
sub
dec
add
push
pusha
xchg
cmpsl
cmpsl
push
cmp
ficomps
jp
loopne
push
setg
lock
into
xor
dec
dec
pop
mov
xabort
lea
pop
ret
cmpsb
sti
loopne
cmpsb
icebp
xchg
stc
mov
push
dec
jnp
push
sbb
aam
dec
pushf
add
and
or
mov
push
shl
lods
mov
adc
add
sub
jp
lock
bound
iret
lods
adc
idivb
sub
cmp
and
cmp
shl
inc
ror
cmp
dec
dec
push
pusha
pop
inc
ret
scas
bound
lcall
inc
shlb
aad
movsl
xchg
out
jo
outsb
leave
cmp
aas
push
push
push
and
nop
bound
outsb
pop
jno
add
js
mov
push
std
rcr
loopne
pop
clc
sub
sub
or
pop
fidivl
pusha
or
xchg
adc
or
dec
mov
pop
xchg
ljmp
push
shrl
sbb
mov
mov
mov
xor
roll
xor
ds
lods
nop
adc
enter
popf
shrb
sbb
movsb
outsl
scas
push
aaa
pop
or
sub
mov
dec
in
jno
fstps
loopne
mov
mov
je
mov
and
jae
inc
sbb
mov
out
mov
ret
mov
fcoms
adc
ljmp
dec
imul
push
mov
pop
ja
fs
push
lock
es
stos
pop
inc
mov
and
out
or
add
loop
out
and
rorb
xor
or
adc
aas
pop
pop
into
inc
addr16
loopne
arpl
lret
lcall
addr16
nop
negl
cmp
out
mov
sahf
push
imul
push
adc
ds
mov
mov
sub
pop
cmp
jo
popa
sarb
push
pusha
mov
xor
push
into
in
pop
push
insl
push
fldt
xchg
movsb
dec
sbb
push
jb
push
sub
jbe
rclb
or
test
insb
sti
loop
add
inc
rolb
mov
push
gs
test
pop
pop
jb
add
bound
mov
and
in
add
shrl
dec
jmp
sub
fidivrl
fcom
stos
adc
hlt
mov
mov
mov
rclb
je
cmp
add
cmp
sub
mov
jbe
dec
mov
loop
fdiv
inc
out
mov
sub
inc
std
int3
cmp
xchg
les
cmpl
cmp
inc
mov
adc
fmuls
lock
add
push
int3
subl
mov
push
cmp
dec
add
jg
push
sub
push
dec
or
popa
xchg
pusha
cmp
cli
loopne
imul
xor
fs
adc
ss
xchg
sahf
sahf
jmp
andl
ret
push
jne
int3
int3
mov
scas
insl
and
mov
mov
rcl
lds
cmc
or
adc
sub
push
pop
out
xchg
das
push
testb
adcl
adc
add
pop
xor
pop
cwtl
pop
mov
or
adc
fs
testl
fsubrs
jmp
pusha
mov
pop
add
xchg
loopne
popa
fcomi
scas
stos
outsb
sub
in
mov
scas
test
dec
ss
jecxz
pop
in
fcompl
gs
mov
xchg
jl
ret
stos
out
aam
pop
adc
mov
ficoml
mov
lcall
jmp
loope
ret
push
inc
push
movsl
add
ja
sbb
and
mov
stos
lret
xchg
les
filds
insb
mov
sti
sub
aam
push
push
or
xlat
lods
pcmpgtd
push
or
ljmp
and
jae
lock
sbb
insb
inc
sub
pop
or
xchg
push
in
es
pop
and
mov
mov
outsl
stos
cmc
add
mov
add
push
or
xchg
xchg
or
arpl
xchg
lcall
push
inc
adc
ljmp
rcl
sub
testb
sub
jo
jecxz
orb
mov
add
xor
fimuls
dec
xlat
out
mov
pop
cs
xor
pop
ja
mov
mov
into
jo
inc
orl
mov
inc
cmpl
rcrb
imul
inc
popa
adc
jb
cmpsb
cwtl
inc
xor
mov
test
ja,pn
iret
inc
pop
loope
inc
ret
lock
scas
push
loopne
dec
sbb
out
mov
cmp
mov
mov
aam
clc
mov
adc
js
dec
test
cli
adc
orl
push
inc
pop
stos
push
sbb
ss
jl
test
pop
fcomps
adcb
ret
mov
lahf
scas
lea
inc
imul
and
sti
pop
push
fbstp
jbe
pop
sbb
mov
lds
push
lods
or
fisubl
lock
scas
sub
sub
cli
jns
or
in
pop
mov
movsb
neg
or
pop
lret
ds
lock
push
sub
mov
out
mov
inc
jecxz
rol
sbb
jno
push
fcoms
int3
ja
cld
cmc
leave
sub
lret
lret
sbb
jo
mov
pop
subl
mov
je
in
test
sub
inc
push
es
popf
fwait
inc
inc
int3
pop
jp
iret
xchg
xchg
test
pop
jns
xchg
mov
inc
mov
adc
stos
pusha
xchg
ret
dec
repnz
insb
pop
mov
dec
or
sub
lcall
dec
loopne
adc
xor
pop
cmpsb
call
stos
sub
neg
fisubs
outsb
xchg
andb
jmp
add
push
add
lret
add
push
lock
ss
inc
xchg
into
lahf
fwait
loop
inc
inc
jmp
jmp
shl
loop
cs
inc
push
jle
add
int3
dec
push
fcompl
xor
add
les
inc
pop
add
sbb
sub
mov
and
call
mov
sbb
add
adc
std
rorb
fmuls
xchg
mov
out
clc
loopne
xchg
mov
adc
cs
add
insl
inc
xchg
adc
add
fdivrs
js
movsb
push
and
bound
jo
inc
xchg
pusha
pop
scas
dec
push
das
push
push
fimuls
icebp
in
out
sbb
add
scas
call
je
lds
fisubl
cwtl
pop
xorb
ja
enter
push
jo
insb
push
jp
push
mov
icebp
jecxz
fsubrl
jle
mov
shlb
sbb
or
test
addb
or
inc
rclb
cmpb
je
repnz
cs
adc
adc
inc
xor
lds
sbb
mov
mov
pop
cmpsl
mov
cmp
insl
push
inc
shll
xchg
addl
mov
data16
push
bnd
shlb
fistpl
das
in
pop
inc
pop
jge
mov
inc
jl
mov
mov
leave
jno
cmp
icebp
pop
scas
mov
xor
inc
fidivrl
sbb
je
adc
add
mov
nop
inc
ds
sbb
mov
or
jnp
push
cmp
sub
daa
jge
pop
add
jmp
xor
cltd
inc
outsl
add
xor
push
jo
js
pop
mov
sbb
leavew
xchg
mov
cmp
lret
jno
sbb
xchg
mov
aad
fnstsw
dec
dec
xchg
mov
lock
cltd
ss
mov
scas
push
add
daa
out
sbb
pop
sti
sub
je
les
mov
lahf
test
cld
ljmp
add
inc
and
leave
cmp
push
aam
push
mov
mov
mov
push
and
ss
insb
loopne
cwtl
add
daa
mov
mov
enterw
mov
lcall
outsb
dec
pop
sub
mul
loopne
test
push
lret
adc
dec
pushf
lcall
push
popa
xchg
xor
add
mulb
and
cmp
inc
out
movsl
add
jmp
cmp
push
popf
lcall
add
roll
test
push
ret
cmpb
mov
mov
add
ds
shr
and
into
lret
pop
pop
mov
movsl
mov
xchg
int3
movsb
jo
sub
cmpb
mov
sbb
outsl
xchg
adc
cwtl
push
cmp
push
cmpb
rcll
add
out
xor
jge
pop
aaa
rclb
imul
and
pop
lret
pop
mov
into
out
mov
push
inc
inc
aaa
push
push
push
shl
inc
loopne
pop
daa
mov
adcb
stos
arpl
pop
out
inc
cmp
outsb
fmuls
pop
mov
aam
andb
je
mov
dec
call
js
mov
es
jl
into
gs
dec
add
add
lods
fisttps
push
jl
sub
andb
sub
es
test
sti
and
shl
loopne
add
movsb
add
negb
mov
dec
sar
int3
mov
cmp
std
mov
add
add
inc
mov
cmp
jmp
fcoms
fidivl
inc
out
mov
add
ds
in
mov
adc
call
bound
push
sub
push
mov
out
xor
pop
mov
rolb
outsl
idivb
sub
dec
out
add
ds
lahf
push
cld
mov
push
je
data16
mov
js
loopne
inc
out
mov
or
mov
ljmp
int3
cmpsl
sbb
rcll
mov
cmp
std
je
add
cmp
cmp
fcomp
mov
jp
insb
add
push
stos
leave
cmc
jge
jo
sub
xchg
jl
sub
cmp
add
ret
inc
and
xchg
push
loope
rolb
pop
ret
or
push
ljmp
mov
popa
inc
and
mov
push
les
pop
cmpsb
rcll
out
pop
mov
std
or
repz
cmc
int
or
retw
cmp
and
push
orl
sub
movsl
cmp
adc
lret
subl
ss
movsl
sbb
mov
pusha
ret
rcrl
mov
jp
pop
dec
pop
add
fcomp
or
pop
in
xor
xor
test
loopne
addb
sub
roll
daa
and
bnd
push
sub
shlb
sub
sub
inc
mov
jecxz
popf
clc
test
jp
xchg
mov
dec
hlt
cwtl
or
or
adc
push
pop
mov
adc
or
xor
pop
das
icebp
jbe
push
insl
pop
dec
pop
outsb
cwtl
or
add
ljmpw
clc
pushl
jge
in
fs
xchg
rcrl
add
lret
insb
dec
push
lock
mov
or
inc
enter
add
dec
enter
dec
inc
stc
inc
add
sub
pop
ret
rcrb
mov
sahf
int3
sbb
out
cmp
pop
and
imul
in
jge
add
inc
add
inc
add
sbb
add
cmpsl
stc
jo
test
xchg
je
sbb
jnp
jbe
leave
mov
cs
insl
in
add
push
shll
out
push
jo
sbb
lods
dec
shlb
mov
push
push
scas
shlb
mov
jle
bound
popa
movsb
and
imul
lret
lret
dec
out
add
pop
call
adc
inc
sub
add
sub
subb
testl
aaa
mov
push
push
sbb
je
pop
jl
pop
and
pop
and
adc
arpl
adc
dec
ret
mov
enter
jecxz
jl
push
xchg
test
rorl
dec
out
lea
lcall
lea
clc
pop
mov
fst
sub
dec
pop
andb
imul
cmpsb
jge
gs
outsb
mov
lret
fwait
cmp
aad
cs
fwait
mov
push
insl
lds
jp
ret
and
and
jbe
and
and
xchg
fdivrs
inc
or
mov
loope
inc
mov
lea
fidivrl
push
or
test
gs
dec
inc
jno
cmp
push
jae
pop
push
dec
adc
or
adc
es
jne
test
int3
xor
cmp
aam
sbb
dec
and
pop
or
loope
pushf
loope
dec
shrl
dec
sahf
and
out
add
lcall
out
sbb
lahf
sbb
sub
inc
inc
pop
xor
insl
outsl
lods
dec
mov
lcall
clc
inc
push
or
sbb
mov
das
lcall
ficoms
loop
inc
push
sub
add
xchg
mov
xchg
lret
fdiv
shl
test
out
sub
imul
icebp
adcb
loop
add
mov
out
loope
mov
jbe
mov
cmp
popf
ficomps
push
jo
mov
pop
jl
inc
scas
arpl
add
push
pop
or
pop
mov
jmp
adc
jo
lahf
inc
loope
xor
nop
in
pop
push
icebp
aaa
lods
xor
push
lods
and
pop
jg
cmc
add
push
dec
faddl
add
imul
push
dec
bound
rorl
lods
dec
ss
cs
lods
xchg
fisubrs
pop
pop
insl
jge
xor
ds
rclb
mov
adc
jo
inc
js
pop
das
aad
fistps
imul
das
sub
sbb
mov
mov
fistpll
pop
lods
inc
adc
mov
jo
cs
inc
movsb
cwtl
add
les
mov
aad
pop
sub
and
arpl
add
cld
xor
sbb
hlt
push
inc
sbb
stos
add
fidivrl
out
mov
fcmovb
cmpsl
sub
xchg
gs
insl
lods
mov
jecxz
int3
loopne
cs
into
jl
pusha
push
push
mov
inc
or
aad
cmp
lahf
fiaddl
dec
fimull
cmp
enter
dec
inc
fisubrs
dec
mov
sub
mov
jg
mov
xlat
sub
push
out
push
scas
popf
das
enter
out
inc
into
outsl
jne
pop
lea
pop
inc
movsl
push
adc
and
cmp
pop
push
lods
jno
mov
pop
outsl
inc
scas
clc
adc
cld
xlat
adcb
sub
and
int
push
adc
les
inc
mov
cmc
jbe
mov
adc
mov
dec
ret
add
mov
in
mov
mov
fcomi
xor
js
mov
outsb
insl
dec
das
push
test
pusha
mov
mov
jnp
pop
adc
mov
pusha
fisubs
aad
pop
or
sub
addb
cmp
pop
nop
add
scas
mov
sbb
fsubl
mov
adc
or
mov
call
adc
int
outsl
jl
and
ret
add
jb
add
pop
shlb
ja
bound
push
add
call
or
divb
dec
cmp
rcrb
mov
js
inc
call
jmp
mov
fldcw
and
rorb
test
add
aaa
inc
sarb
loope
push
mov
ret
mov
pop
jne
imul
outsb
imul
loope
push
negl
addr16
loope
cmp
push
lock
jb
lds
sub
and
add
fidivrs
shlb
add
push
inc
ret
into
jecxz
insb
mov
jo
popf
push
mov
stc
pushf
push
inc
fidivrl
outsb
add
add
sbbb
push
xchg
sbb
sub
fsubs
xor
pop
dec
imul
pop
mov
daa
fisubs
clc
push
shl
repz
push
xchg
repnz
or
lock
pop
xchg
xor
xor
jg
ds
jo
push
fmuls
jbe
repnz
pop
push
clc
or
pop
sbb
dec
fcom
hlt
and
and
jnp
pop
add
ss
mov
jl
mov
je
jecxz
jb
mov
sbb
mov
fldl
js
xchg
push
outsb
testb
js
cmpb
mov
popa
and
or
xor
cmp
out
fwait
jne
add
or
adc
inc
xor
loopne
and
jb
xchg
ja
cmpsl
fidivl
cmp
or
sbbl
xchg
or
daa
sbb
es
or
mov
sahf
data16
xlat
sub
ss
adc
jnp
push
or
sbb
ds
adc
lret
lret
daa
sub
ret
add
jnp
adc
xor
pop
inc
fidivrs
aaa
mov
xor
bound
dec
and
cmpsb
sbb
daa
xchg
popf
jge
pusha
dec
das
or
sahf
lret
or
aaa
jnp
jnp
or
sub
jle
dec
or
push
cmp
ret
mov
lcall
xor
mov
sub
inc
pop
sub
xchg
scas
inc
sub
sub
adc
push
iret
loope
vmovntps
push
cld
and
dec
sub
jnp
outsl
mov
jg
mov
mov
ss
ja
adcl
out
push
dec
xlat
sbb
xor
sbbl
into
sub
adc
fwait
sub
daa
cmp
adc
xor
in
movsb
bound
jbe
jle
inc
push
outsl
mov
xor
sub
jbe
jb
rol
add
sub
inc
testl
pusha
sbb
jbe
jne
das
stos
cs
mov
xchg
das
loop
cli
or
or
add
ds
femms
fisttpll
pop
data16
or
cmpsb
mov
mov
cli
inc
ror
cmp
icebp
sub
or
aaa
jo
in
jle
ja
cltd
add
orps
xor
mov
sub
and
sbb
pop
sub
rcrb
jle
or
gs
or
dec
mov
push
aaa
sti
or
push
js
test
adc
test
push
pop
idivl
xor
xor
and
jle
rcl
sub
dec
add
jle
das
xor
mov
pop
incl
xchg
mov
in
loopne
insl
push
push
xor
fistpll
or
pop
inc
mov
sbbb
sti
out
jne
loop
bnd
and
xlat
mov
xor
push
or
in
test
scas
and
fdivp
cs
or
ljmp
adc
xor
xor
cmp
mov
add
push
inc
or
fldpi
daa
scas
or
push
xchg
mov
pop
fidivl
or
push
jo
fidivs
or
pop
data16
pop
mov
sbb
or
into
inc
fimuls
ss
dec
test
aam
dec
dec
jp
outsl
adc
out
popa
cmp
aaa
mov
xchg
negb
add
push
xlat
sbb
or
pop
push
or
xor
xor
outsl
jmp
push
cwtl
xor
mov
pop
xchg
push
inc
pminsw
divb
inc
mov
into
xor
jnp
dec
pop
pop
ficoms
xor
clc
cmp
sub
or
push
xor
jno
cmp
or
shr
or
inc
or
popf
cmp
jmp
int3
out
cmpsl
js
mov
cmp
adc
push
push
jp
das
cmp
call
mov
adc
cmp
outsb
pop
mov
pop
ljmp
out
jmp
jbe
xor
pop
cmp
jmp
lret
mov
or
dec
cmpsb
das
mov
xchg
xchg
pop
loop
out
pop
decb
lret
lock
sbb
sbb
cmp
add
xchg
ja
cwtl
pop
cmp
int3
xor
inc
dec
or
mov
xor
xchg
or
fldl2t
sub
inc
lcall
aaa
jb
pop
xchg
sub
xchg
add
ds
ds
dec
in
lods
sub
jne
mov
fnsaves
xorb
sbb
dec
jge
cmpsl
sbb
ds
cmpsl
lret
sub
cwtl
mov
or
adc
data16
xor
inc
dec
mov
mov
int
dec
cmp
mov
cmp
cmp
jae
js
lods
test
pop
shlb
js
bound
cmp
ret
push
or
xchg
lods
sbb
xchg
dec
sahf
mov
xchg
ffreep
cltd
lret
sub
cmp
mov
shlb
sub
loop
pop
imul
bound
jmp
or
cmp
es
call
mov
and
mov
pop
xor
daa
ja
xor
xchg
adc
cs
mov
xor
or
popa
cs
pop
add
ja
nop
fcmovnu
insl
inc
or
daa
or
sub
mov
inc
cmp
push
fadds
pop
xor
decb
cmp
and
mov
loopne
idivb
add
cmpsl
push
neg
or
sub
imul
jns
stos
xlat
out
in
dec
aad
addl
sbbb
ljmp
sub
lock
test
nopl
test
push
pusha
inc
ja
sahf
mov
lods
adc
add
fbstp
mov
sahf
push
sbb
xor
or
mov
nop
das
jns
sub
negl
fmul
add
dec
mov
or
or
add
dec
or
xlat
sbb
dec
and
ja
inc
inc
insb
incl
inc
add
add
jnp
jge
dec
push
popl
push
mov
adc
fisttpl
lods
lods
push
aad
aaa
test
xchg
dec
add
pop
adc
in
mov
xor
cmp
rolb
bound
imul
fs
mov
inc
push
bnd
aaa
inc
push
movsb
insl
cld
daa
sbb
ljmp
jo
mov
adc
pop
jnp
loopne
mov
xor
cs
push
out
bound
test
stc
jmp
mov
cmpsb
push
mov
xchg
cwtl
pop
xor
cmp
mov
insl
les
and
gs
add
mov
movsb
fs
jecxz
lods
inc
test
or
xchg
xchg
mov
or
jecxz
jae
adc
je
daa
push
sub
cmp
add
and
jbe
imull
and
aas
jg
lea
bound
cwtl
in
xor
scas
inc
es
mov
dec
int3
sbb
push
jo
fmull
and
in
add
rcrl
or
jmp
cs
lret
imul
std
mov
mov
fnstsw
cld
mov
lds
sbb
fldz
jne
adc
add
add
xchg
add
xchg
arpl
fucomp
and
inc
test
imul
jb
das
adcl
stos
mov
inc
cmpsb
sub
or
mov
test
push
aaa
in
stos
add
sbb
jne
pop
cmpb
add
pop
mov
pop
inc
aam
daa
and
inc
rolb
dec
and
gs
lea
pop
adc
repnz
outsl
or
icebp
xchg
and
pop
xchg
jge
fstpt
into
jbe
testb
into
cmp
out
nop
lea
bound
pop
jp
sub
lcall
push
ljmp
pop
adc
pop
arpl
xor
mov
inc
and
sub
inc
and
cltd
movsl
and
out
sbb
xchg
xchg
jne
mull
ljmp
enter
add
cmp
push
std
sub
dec
pusha
adc
mov
and
in
push
sub
adc
mov
and
or
loopne
mov
outsl
into
rol
pusha
xor
movsl
data16
fldt
mov
sbb
push
clc
lahf
and
fidivrs
stos
lret
insl
stc
dec
out
jo
repz
outsl
mov
pop
sbb
dec
jo
insb
cmp
xlat
pop
andl
sub
xor
xchg
xchg
mov
mov
test
dec
insl
add
push
xor
addl
rorl
adc
cmp
lret
or
or
and
and
loop
add
fwait
push
cmp
mov
and
repz
xlat
jne
jne
adc
stos
loopne
stos
add
mov
mov
mov
xchg
sub
lock
mov
sbb
or
xor
push
ds
xor
mov
add
sbb
mov
das
sbb
xlat
and
dec
repz
or
orl
inc
adc
int
frstor
fstpl
and
fisubs
add
stc
mov
pop
mov
cmc
and
adc
and
loopne
add
fdiv
out
out
jae
idivb
and
cmp
es
xor
fwait
sub
es
adc
int3
les
pusha
sub
jp
test
ds
insb
or
or
inc
xor
fimull
pop
loope
cmpsb
adc
dec
data16
es
hlt
mov
jle
mov
inc
add
dec
ror
push
hlt
mov
icebp
mov
sbb
bound
mov
cmp
out
xor
push
pop
roll
popa
xlat
sub
icebp
mov
xchg
int
cwtl
adc
test
or
fisubs
lods
add
adc
xlat
icebp
sub
loop
xor
xchg
mov
sarb
out
or
div
mov
xlat
push
or
jmp
and
out
cwtl
push
adc
fcoms
sarb
ret
loope
sahf
loope
add
mov
mov
dec
add
xor
adc
pop
add
sbb
mov
fistpll
loopne
and
sbb
push
out
mov
cmpsb
imull
mov
push
jle
test
lods
ret
aaa
cs
mov
xor
sbb
daa
pushf
add
fisttps
mov
into
mov
popa
out
xlat
or
dec
inc
orb
scas
ror
mov
and
inc
jne
in
and
mov
and
addr16
xchg
cmp
sbb
fisubrs
jne
sub
rolb
mov
arpl
fs
inc
pop
mull
ret
xor
or
popf
sbb
clc
dec
popf
aam
fistl
add
stos
test
adc
add
std
lea
mov
in
mov
dec
pop
in
jne
jle
add
and
mov
sbb
ret
push
inc
stos
sub
sbb
je
sub
xchg
push
aad
or
fwait
mov
add
insb
aaa
ret
rolb
mov
je
push
test
adc
insl
xor
mov
lret
les
sub
test
xchg
in
pop
fistpl
iret
inc
add
test
cs
xchg
mov
in
popa
mov
and
push
aam
add
mov
hlt
stos
adc
mov
mov
daa
ret
mov
hlt
test
outsl
sarl
mov
movsl
dec
push
jo
dec
dec
imul
mov
icebp
jb
pop
mov
popa
imull
imul
jg
inc
adc
mov
int
ret
jae
push
mov
fs
sbb
das
lds
icebp
jnp
jns
mov
insb
std
sbb
jno
xchg
cmc
repz
sbb
adc
adc
pushf
in
sbb
arpl
sbb
stos
in
xchg
sbbl
popa
sub
lods
mov
popa
rorb
inc
adc
out
push
mov
sub
rolb
jae
mov
mov
repnz
mov
xorl
cmpsl
bound
add
cmpsl
fstp
push
jecxz
cmc
out
mov
loop,pt
pop
sub
or
ljmp
mov
cli
lods
sub
push
pop
adc
xor
ja
pop
cltd
push
ss
jbe
adc
pop
jnp
pop
scas
aad
pop
lods
lret
push
cmp
push
ljmp
data16
shll
push
inc
jb
and
incl
cmp
dec
fbld
xor
sub
mov
sub
mov
lock
xor
fnstsw
mov
repnz
and
repz
xor
gs
das
jb
ss
cwtl
xlat
loope
aaa
sarl
icebp
adc
neg
rol
cli
jno
add
xlat
cli
dec
adc
in
cmp
fcompl
sti
cs
outsb
fisubl
sub
sti
test
in
mov
cmp
sti
fisubrs
or
sbb
sarl
bound
mulb
ja
xchg
sti
sti
pop
ss
mull
inc
imul
dec
test
cmc
sbb
sbbb
ja
mov
je
cmpsb
push
mov
in
pop
fsubrl
dec
fisubrl
mov
lret
dec
mov
jae
out
out
xchg
jne
lcall
jp
add
sti
dec
jo
imul
push
pop
fbstp
and
jae
dec
and
divl
sub
mov
es
sbb
xor
ds
push
xor
mov
sbb
add
mov
push
in
sti
les
xchg
das
jmp
lret
orl
test
test
es
mov
setno
or
cmpb
jbe
ss
jno
aaa
jmp
or
adc
loop
bound
lret
mov
movl
aad
cmp
jmp
daa
push
stc
out
aam
testb
adc
inc
mov
ret
inc
and
push
imul
cmp
fnstenv
pop
outsb
cltd
pop
xor
dec
lods
mov
adc
sbb
jecxz
stc
dec
js
mov
mov
mov
mov
in
mov
pop
dec
adcl
iret
mov
xor
inc
cmp
sbb
out
jnp
sbb
test
sti
stc
mov
sub
fdiv
fldl
shrl
xchg
fnsave
bound
sbb
and
or
jo
fdivrl
jae
push
sbb
lea
cmp
adc
icebp
and
xchg
jp
sbb
push
decb
jo
imul
outsb
out
push
push
cltd
pop
and
xchg
jg
out
add
pop
adc
adc
loope
das
sub
mov
pop
pop
mov
add
repz
fisubrl
jae
mov
lahf
fwait
fwait
inc
movsb
and
test
shl
inc
mov
pop
xor
pop
icebp
sub
outsl
inc
sar
pop
imul
add
mov
jg
mov
ss
xchg
mov
mov
pop
stos
pop
cmp
mov
js
or
scas
or
jge
or
jg
hlt
xchg
insl
lock
sub
aad
jge
lret
or
sbb
cmpsl
mov
fxch
roll
jae
sub
sub
outsl
iret
or
pop
xor
in
outsl
adc
test
es
dec
dec
stos
adc
fstpl
push
and
rol
imul
push
mov
cmp
mov
push
dec
xchg
imul
call
cli
inc
sbb
insb
jo
push
xchg
fisubrs
or
jo
adc
sbb
inc
add
sbb
out
xchg
and
rol
mov
inc
or
inc
pop
in
out
add
mov
into
mov
imul
scas
popa
jecxz
sub
or
jns
cld
mov
ss
testl
imul
movsl
push
mov
jecxz
push
fwait
ficoml
push
xor
sub
iret
fnsave
movl
cmp
push
cmp
out
and
imul
push
in
pop
outsb
movsl
inc
stos
inc
std
lock
xchg
sub
mov
std
push
jo
lahf
xchg
stos
push
insl
out
sbb
jno
jge
push
mov
sbb
add
fsubp
lcall
adc
push
sbb
insl
rcr
inc
sub
xorb
loop
cmp
add
xchg
into
dec
mov
or
fcmovnu
sub
lea
adc
push
mov
fs
sbb
xchg
ss
lods
jbe
cmp
jo
or
loopne
dec
or
int
ret
fists
xchg
mov
mov
and
xor
outsl
bound
cmp
pop
pop
test
mov
mov
cmp
jle
int
into
fiaddl
cmp
icebp
pop
bound
jae
jmp
pop
or
sub
pop
ja
mov
adc
rclb
mov
dec
mov
mov
inc
ljmp
sbb
add
fsubrs
adc
cmp
or
xchg
insl
movsb
adc
mov
stos
adc
ds
sbb
fsts
or
mov
es
nop
push
cmp
ret
mov
icebp
test
or
jge
jne
xchg
jg
sbb
pop
sbb
lea
rolb
popa
adc
and
sub
test
std
inc
sbb
dec
dec
xchg
mov
mov
jmp
xchg
outsb
mov
addb
cmpsb
jmp
jne
fcoms
andl
cmp
push
or
and
les
std
jns
jno
lods
jmp
inc
mov
push
push
test
mov
leave
sti
mov
sbb
sub
mov
sbb
rcrb
fs
inc
and
imul
fwait
jmp
imul
cmp
loope
movb
push
mov
add
sub
cmp
arpl
xchg
xchg
jno
mov
xor
scas
jle
and
ja
lahf
dec
jge
push
ret
out
test
mov
shrl
fdivl
sub
pop
or
arpl
mov
mov
mov
and
add
outsb
add
aas
jmp
out
pop
adc
jecxz
sub
mov
and
ljmp
push
push
mov
pop
fnstenv
mov
push
xor
rcrl
add
jmp
imul
cmp
test
scas
ss
pusha
sti
ss
jne
jge
int
cmpsl
subl
or
lock
bound
loope
test
push
sub
js
ja
insl
jbe
cmp
add
insl
add
push
repz
and
jne
imul
mov
inc
mov
rorb
or
pop
jbe
mov
lds
mov
cwtl
loope
loope
mov
out
cltd
negl
mov
lds
shll
mov
shll
int
and
ja
dec
cmp
xor
rcll
test
add
xchg
adc
pop
xor
adc
cmp
sbb
sbb
jnp
jl
mov
cltd
notl
out
mov
push
sub
outsb
out
add
popa
sbb
jl
movsb
mov
mov
or
outsb
inc
setae
fidivl
sti
adc
sub
inc
loope
sub
gs
out
test
pop
sbb
mov
vaddsd
sarl
les
lahf
mov
push
out
and
pushf
movsl
or
sub
cmpsb
inc
jle
xor
pusha
or
daa
mov
inc
jmp
les
je
dec
rcrb
loop
dec
add
push
add
jne
jae
sub
adc
push
xchg
adc
mov
stos
adcl
and
pop
mov
xchg
xchg
std
mov
jbe
in
dec
mov
in
add
rorb
inc
add
loopne
mov
xchg
push
mov
add
cmp
pop
add
pop
jg
loop
jnp
or
cmpsb
add
xor
jb
sbb
pop
xor
icebp
add
test
push
cmp
imul
jns
add
test
insb
or
stos
pop
ss
aas
push
or
imul
or
popa
sub
dec
movd
add
push
cltd
add
jmp
jecxz
jae
cmc
add
xor
pop
jmp
inc
jo
int
dec
mov
mov
iret
or
rorb
ret
dec
lods
stos
movsl
gs
dec
sbb
xchg
jne
fcoml
sub
arpl
xchg
out
movsl
adc
aas
and
jecxz
or
shll
sub
or
cmp
adcl
out
add
les
das
sub
or
adc
xor
adc
and
inc
sbb
cmp
add
dec
add
leave
push
ja
dec
push
pop
sarl
les
pop
xor
jb
push
popf
vpavgb
sub
mov
cmp
push
es
push
cltd
jnp
insl
ja
btr
push
insb
add
imul
movsb
shr
pop
sub
jecxz
cmpsl
mov
or
xor
cmpsl
fwait
in
les
sbb
insl
cmc
inc
xor
shll
rclb
and
inc
inc
xchg
push
ret
jge
jecxz
xor
ret
cmp
sub
sbb
lods
dec
aaa
sbb
mov
arpl
dec
mov
xor
jno
lods
loope
push
daa
das
inc
imul
mov
mov
mov
loope
stos
lds
mov
xchg
adc
mov
mov
cmpsl
lock
mov
sub
adc
incl
xchg
addr16
xchg
ja
in
mov
sub
mov
push
test
mov
int
cmp
and
push
lods
outsb
scas
fnstsw
pop
es
lea
in
sbb
imul
repnz
xor
sbb
jns
nop
cmp
sub
pop
adc
fwait
rorl
mov
and
shrb
out
lods
loopne
sbb
sub
mov
push
repnz
or
xchg
mov
lahf
sbb
mov
imul
loop
idivb
or
mov
mov
or
lret
inc
adc
jbe
add
add
mov
ja
mov
pop
xor
call
and
mov
aaa
call
shl
pop
mov
sub
add
push
jmp
or
stc
outsb
sarb
popf
xor
and
es
sub
pop
loopne
xchg
push
sbb
and
lds
inc
scas
jmp
sbb
test
outsl
sub
xchg
jne
bound
test
push
imul
out
push
test
inc
popf
pop
js
fnsave
push
lret
ret
ret
shl
jp
ljmp
stos
aam
jae
sbb
mov
dec
jb
add
or
pop
loope
xlat
ss
xor
lods
push
in
jno
jge
popa
xor
lret
scas
add
pop
cmp
pop
scas
and
cmp
dec
cmpsl
addb
push
gs
adc
adc
sti
outsl
add
push
xchg
jno
sahf
fnstsw
repz
inc
mov
push
outsb
and
fldt
add
xor
in
xor
mov
fiaddl
dec
push
inc
cmp
mov
and
dec
inc
sbb
jnp
popw
adc
ss
ds
push
push
adc
inc
sub
sub
jb
dec
xor
fisttpll
movsb
jno
js
add
push
xor
pop
mov
jmp
jnp
rol
in
in
add
sarb
jb
pop
pop
mov
test
and
cmp
stos
mov
dec
adc
sub
xchg
cmp
in
movsb
cmp
les
sub
cmpsl
mov
es
popa
test
xor
outsl
cmpsb
xor
xor
and
stc
xor
inc
xor
loopne
sub
jb
fidivs
or
push
sbb
scas
mov
or
loop
sub
sub
fwait
xchg
jae
cmp
rcrl
dec
lea
push
outsl
adc
adc
pop
sbb
stos
mov
stos
mov
jb
ja
or
xchg
testl
xlat
xor
test
jbe
jbe
cltd
sub
adc
sti
push
mov
push
jb
sbb
inc
sbb
into
into
xor
mov
inc
int3
xor
das
ret
cli
lods
inc
arpl
cmp
push
ss
xor
mov
loopne
test
cli
inc
cwtl
add
js
orb
ljmp
xorl
pop
xchg
cmpsl
inc
mov
pop
sbb
xchg
jae
mov
jp
or
subb
mov
stc
and
jl
test
push
repnz
pop
jnp
mov
xchg
fsubrl
jmp
test
call
stos
loope
jae
loope
iret
out
sbb
scas
and
and
ja
pop
dec
xor
add
mov
push
scas
pop
loope
cmp
imul
xor
int3
fisubs
push
jns
int3
sub
push
xchg
int3
jne
daa
cmp
icebp
inc
mov
jno
jo
iret
mov
out
mov
mov
push
jecxz
pop
dec
pushf
sbb
aaa
arpl
pop
rol
cltd
mov
add
mov
roll
inc
ror
and
insb
fcompl
mov
add
shlb
fptan
test
lea
iret
outsb
xor
ja
rcl
out
fsubr
and
jo
out
int
in
dec
std
jns
sbb
add
sbb
add
pop
adc
adcb
popf
sub
pop
dec
loope
jno
pop
push
xchg
push
push
xchg
mov
subb
adc
repnz
jb
xorl
and
test
jmp
jbe
push
fildl
and
pop
and
xor
clc
add
repnz
mov
adc
push
xchg
sti
test
es
or
sbb
leave
bound
jge
ret
mov
fistpll
shrb
mov
ret
rolb
mov
insb
mov
jbe
adc
jmp
aam
jno
rorb
inc
sub
aad
xchg
jbe
xor
xor
fistps
test
jbe
jmp
movsb
movsb
cmp
mov
sub
rolb
out
insb
pop
xor
lea
lea
adc
add
dec
jle
movsb
das
mov
fbstp
mov
xor
add
pop
mov
fstl
loop
ss
out
lcall
cmc
mov
inc
jnp
sahf
push
out
xchg
cmp
pop
jecxz
sub
sbb
mov
je
aad
lods
jno
and
ljmp
sarb
adc
mov
mov
roll
xchg
out
mov
pop
mov
test
es
push
out
popf
psrlq
inc
jo
jne
or
push
jbe
push
xchg
adc
adc
inc
adc
outsl
divl
sub
ja
cwtl
mov
loop
movsb
std
mov
mov
jmp
rcrl
dec
cld
mov
repz
insb
enter
mov
cltd
jl
sbb
loop
mov
jne
sub
adc
mov
into
sub
or
push
jecxz
nop
loopne
leave
sub
dec
lcall
in
or
xchg
lea
call
mov
jne
aaa
dec
dec
sbb
imul
add
mov
loopne
loope
imul
pusha
push
outsl
nop
push
aad
xor
xor
jbe
and
cmp
std
mov
sub
adc
dec
and
sbb
sbb
cmp
loope
subl
jb
outsb
ja
jns
inc
lret
xor
mull
data16
or
jp
test
stos
aaa
xchg
dec
jo
ffreep
or
push
sub
jns
cmpsb
addr16
lds
cmpsb
iret
pop
sbbb
repz
xor
push
mov
rcrb
jbe
sbb
and
and
outsl
je
outsb
es
jg
cmp
jp
sub
or
jo
movsb
cltd
mov
repnz
jl
dec
sub
jne
mov
cwtl
pop
fisubrs
mov
into
push
imul
hlt
mov
cmp
pusha
imul
mov
testb
or
sbb
lds
and
mov
flds
fwait
adcb
dec
cmp
dec
pop
imull
cwtl
pop
jb
jp
mov
into
and
es
mov
dec
movsb
insb
test
out
fwait
or
push
aam
adc
fdivl
add
or
insb
negb
mov
or
shrl
inc
or
jle
cmp
inc
mov
inc
or
into
cmp
dec
movsb
or
pusha
aaa
push
mov
insb
addl
xchg
mov
inc
xlat
or
add
subl
add
fucomp
idivl
mov
or
rcrl
mov
hlt
or
cld
jbe
sbb
mov
dec
orl
or
jbe
jge
sbb
ficoml
je
mov
lret
push
adc
lcall
mov
scas
sti
push
out
inc
aaa
insb
pop
jl
fists
pop
sbb
push
and
cmp
rcr
lea
pop
fiaddl
dec
pop
int3
daa
or
mov
lock
push
das
fwait
mov
or
push
jno
iret
ljmp
xchg
ss
add
jge
sbb
cmp
fcomps
inc
jg
add
and
sub
sbb
push
mov
or
scas
imul
pushf
mov
sub
rcrb
sub
cmp
sub
mov
or
cld
pop
cmpsl
lcall
xchg
push
add
inc
mulb
jns
sub
or
sub
and
jge
in
xor
xor
mov
aaa
or
mov
aaa
rcr
mov
mov
and
push
cmp
je
loopne
dec
push
sbb
enter
push
push
dec
dec
dec
sub
add
jbe
iret
add
inc
dec
popa
dec
push
sub
push
in
push
push
out
arpl
push
sbb
fstps
sahf
test
lret
pusha
inc
and
ficomps
inc
jb
push
mov
fidivl
pop
dec
lret
push
es
dec
imul
test
and
imul
adc
outsb
dec
or
mov
jae
rcrl
add
repz
mov
imul
je
idivl
push
jmp
inc
inc
or
xor
xor
repz
ja
movsb
into
push
jne
mov
inc
inc
dec
push
imul
push
or
or
and
inc
add
add
add
ds
outsl
mov
ds
sub
jbe
jne
fildl
dec
inc
push
push
and
push
push
mov
xor
cmp
jecxz
sahf
lcall
bound
ja
mov
dec
jbe
repnz
pushf
ret
push
data16
cmp
stos
and
cli
insb
cmpsb
pop
push
fidivl
sub
jo
pop
dec
inc
inc
outsb
int
outsl
inc
iret
jp
nop
rclb
inc
jbe
out
jns
jns
test
push
int
das
sbb
fldl
pop
sub
ret
inc
flds
testb
fs
pusha
dec
mov
test
fidivrl
push
sbb
mov
dec
sbb
dec
pop
or
insb
mov
loopne
aaa
and
ja
fs
mov
mov
jo
outsb
xor
fistl
sbb
jmp
push
xor
outsb
dec
incb
loope
mov
inc
push
jle
arpl
and
inc
lea
mov
inc
xchg
inc
inc
cmpsb
dec
jmp
xlat
fidivrl
inc
inc
dec
push
inc
sbb
fldl
inc
popf
dec
mov
test
imul
ficoms
dec
es
addb
push
pop
aas
loope
movsb
shl
hlt
xor
push
mov
add
adc
bound
jo
inc
xchg
push
xchg
inc
insb
dec
inc
jo
add
xchg
fildl
adcl
dec
fnstenv
xor
adc
add
jno
inc
xchg
xor
cmpsb
pusha
mov
inc
addr16
outsb
or
push
fistpl
dec
dec
les
push
sahf
sub
push
inc
dec
or
add
lahf
xor
rorl
dec
push
movsl
sub
pushf
push
push
xchg
fsave
jl
out
sub
add
popa
cmpsl
or
sbb
leave
addb
sub
inc
out
sbb
inc
sub
fs
inc
push
icebp
jbe
jbe
pop
and
incb
push
adc
or
test
popa
cmc
rol
xchg
xorb
ret
push
dec
ss
and
jle
mov
ss
adc
add
ja
xchg
xor
xor
jo
popa
and
pop
sub
adc
pop
adc
jb
sbb
pop
stos
roll
mov
push
pop
and
inc
cmpsb
inc
jle
popl
dec
push
add
mov
fisttpl
pop
sub
pop
cmp
fs
lods
inc
xor
ja
push
cmp
movsb
insb
inc
aas
movsl
inc
jne
addr16
cmpsl
ja
cmpsb
mov
or
dec
shrb
jo
popa
add
data16
mov
push
arpl
adc
add
inc
jno
add
pop
add
mov
push
jbe
mov
cmpsb
outsl
mov
outsb
jno
fs
dec
jae
dec
push
or
jo
sub
packuswb
mov
mov
les
insl
or
jo
adc
mov
cwtl
testb
insb
pop
inc
and
test
jns
scas
popa
subl
arpl
jbe
and
negb
pop
sbb
add
mov
in
scas
addb
jecxz
lods
out
mov
cmp
jge
inc
push
sub
cmp
jle
inc
bound
je
ljmp
lret
adc
push
jbe
ss
push
jecxz
pop
jnp
daa
inc
shlb
repnz
fcompl
or
ja
inc
dec
add
xchg
fstpl
repnz
add
mov
icebp
je
or
pop
mov
bound
jmp
jae
imul
add
ja
ret
and
jbe
inc
pop
cs
pushf
enter
push
iret
xchg
xchg
sub
jl
divl
mov
insb
add
pop
in
sub
sub
inc
or
fisttps
insb
and
loope
cmp
pop
es
in
or
add
mov
mov
subl
mov
jl
stc
add
pusha
push
xchg
mov
cmp
loop
or
adc
adc
bound
and
add
push
dec
cmpsb
inc
andb
sbb
sbb
adc
inc
add
sbb
lds
adc
pop
nop
popf
or
add
adc
inc
lds
sbb
repz
imul
lods
ds
sub
mov
out
cli
rep
setle
or
sarl
add
stos
cli
jp
adc
add
cli
rorb
and
scas
sbb
icebp
in
ret
icebp
mov
repz
lock
out
bound
mov
ss
call
sbb
aad
fcmovnu
xchg
fcmovu
adcl
fld
addb
iret
fldl
fisubrl
mov
rcrl
gs
adc
arpl
or
push
daa
jo
call
add
or
clc
orl
adc
xchg
push
ja
cmc
cwtl
ds
inc
cmp
gs
call
mov
and
sbb
mov
std
jge
loope
sbb
adc
push
pop
cwtl
out
in
cmp
cmp
xor
push
int3
cld
call
add
add
repnz
adc
std
cmc
mov
cld
iret
int
test
inc
fcomi
out
jo
dec
icebp
add
leave
jns
jbe
test
jmp
jb
imul
cwtl
jg
es
inc
inc
in
mov
stos
ljmp
imul
repz
aaa
jbe
xor
inc
andb
jecxz
pusha
push
xorps
cli
leave
in
test
adcl
stos
mov
xor
xchg
jge
test
add
leave
xchg
cs
add
pusha
addr16
jecxz
test
lock
xor
popf
jecxz
push
cmp
dec
jo
push
mov
dec
add
mov
inc
cmp
out
adc
pop
sbb
mov
adc
adc
call
out
pop
cmpsb
mov
shlb
add
mov
sbb
shl
je
and
icebp
std
or
js
add
testl
push
out
imul
stc
nop
fstpl
and
stos
testl
add
add
cmp
pop
in
or
mov
push
jmp
icebp
aaa
repz
rol
in
imul
push
clc
mov
adc
jnp
inc
push
mov
pop
fdivl
dec
js
adc
bound
xchg
arpl
outsl
pop
aam
cwtl
mov
or
fs
jmp
jmp
xchg
out
in
adc
jne
push
imul
and
or
jo
lahf
ja
or
into
mov
pop
jo
in
or
aad
inc
iret
out
andl
jecxz
and
xor
xchg
or
popa
mov
pop
popa
inc
cmpsb
sbb
add
xchg
push
nop
in
aad
add
dec
adc
iret
or
iret
push
outsl
mov
leave
popf
int
adc
pop
aad
ss
mov
xor
hlt
rorb
mov
adc
cmp
mov
stos
dec
insl
popf
popf
sbb
pop
mov
subl
ss
aas
popl
xchg
mov
adc
push
cmc
insl
lea
adc
mov
or
imul
daa
jo
adc
push
cmpsl
mov
or
adc
inc
mov
add
ss
fimull
or
stos
or
adc
sub
add
inc
adc
adc
mov
push
loope
pop
shrl
adc
addl
pop
adc
loopne
adc
dec
mov
pop
adc
push
mov
sbb
sub
mov
lahf
shl
scas
push
dec
insb
adc
dec
inc
mov
pop
icebp
orl
js
xchg
inc
loopw
sbb
inc
push
and
dec
negl
sbb
sub
or
shll
adc
sub
arpl
cmc
and
cmp
dec
pop
xchg
push
push
fwait
or
sarb
push
pusha
add
inc
push
or
dec
popf
mov
dec
das
jne
push
and
sub
jno
push
lea
dec
arpl
dec
clc
lahf
push
outsb
pushf
or
inc
orb
lcall
aaa
andl
and
imul
ret
pop
pop
insl
shl
jae
popl
push
rolb
dec
add
shrl
cmp
or
int
enter
pop
push
jno
mov
lea
xor
popa
adc
les
arpl
lahf
push
divl
push
mov
lods
mov
or
xchg
push
mov
aaa
xor
mov
push
cmp
es
inc
mov
lods
shrb
and
sbb
mov
fwait
mov
sarb
mov
push
shll
popl
aam
dec
jecxz
xchg
or
pop
mov
mul
mov
sbb
stos
outsl
data16
pop
adc
not
fdivs
loope
fcmovnb
push
push
mov
daa
outsl
add
out
xchg
xchg
icebp
cmc
xlat
clc
push
sub
in
popa
push
add
pusha
sbbl
xchg
sti
mov
sti
rcl
jno
pop
pop
stos
outsb
dec
pop
lret
es
mov
push
addr16
out
add
icebp
and
sbb
scas
cmp
inc
das
mov
push
das
jl
xor
sbb
or
mov
dec
orl
dec
rcll
jl
sub
mov
inc
pushf
pop
mov
dec
jne
push
sbb
sbb
mov
mov
xorl
inc
rcll
sbb
pop
dec
out
adc
jp
pop
push
addr16
loopne
pop
fcoms
xchg
cmp
lret
popa
jb
sub
mov
inc
inc
inc
bound
jnp
fdivr
inc
dec
xor
ret
jg
arpl
jmp
add
sbb
lods
mov
cmc
les
js
add
adc
pop
dec
insb
xchg
dec
pop
gs
adc
pop
adc
push
inc
test
xchg
sti
push
mov
dec
dec
push
inc
push
addb
test
adc
repnz
data16
push
push
xor
add
pop
loopew
es
dec
int3
sub
adc
out
and
lea
mov
add
dec
pop
add
push
lods
jmp
and
popa
jle
adc
sbb
imul
pop
xchg
int
push
test
repz
movb
mov
cmp
push
pop
data16
push
and
imul
push
sbb
sub
xchg
jbe
popa
and
int
pop
pop
sbb
mov
imul
push
sbb
das
mov
or
ds
push
outsl
out
adc
sub
push
addr16
int3
arpl
mov
adc
jb
lds
push
mov
or
adc
sbb
imul
xor
fldcw
mov
cmp
inc
testl
add
and
push
adc
fsubrs
and
and
popa
icebp
les
pop
loopne
daa
pop
in
movsl
cltd
mov
ret
or
movsl
push
jecxz
sbb
roll
adc
std
fsub
mov
and
dec
mov
arpl
and
xor
aad
sbb
scas
popa
jb
adc
or
adc
sbb
icebp
loopne
cmp
insl
out
and
add
test
push
andb
jl
fwait
ds
pop
pushf
push
push
dec
leave
cmp
test
push
and
push
test
jo
test
xchg
dec
aam
sbb
sub
cmp
dec
mov
clc
pop
sbb
pop
pop
ret
and
push
inc
stos
cmp
adc
push
cmp
sbb
sar
dec
sbb
or
sbb
insb
dec
mov
out
jo
add
fsubrl
aaa
das
fcmovnb
add
inc
movsl
xor
in
add
push
mov
jae
popf
mov
je
push
pop
push
inc
sub
out
mov
inc
xor
aad
addl
dec
rcll
jo
push
adc
xor
sub
and
mov
imul
ficompl
add
loope
xchg
jbe
cmp
dec
popf
push
aas
sbb
into
aad
push
pop
push
inc
xor
and
loope
ja
jge
leave
dec
scas
dec
mov
movsb
and
rorl
xor
js
cwtl
jo
mov
and
sub
jge
inc
js
add
pop
loopne
pop
stos
sub
dec
test
mov
add
faddl
jmp
push
jp
cmp
or
adc
addl
push
inc
aad
mov
inc
lcall
mov
and
fnstcw
push
xor
pop
sbb
ss
push
dec
cmp
and
dec
cmp
inc
inc
loopne
jge
push
dec
insl
push
push
ret
inc
mov
ss
dec
and
xor
adc
das
dec
addr16
mov
or
push
mov
neg
push
frstor
and
push
dec
dec
push
js
icebp
xchg
jne
daa
rolb
xchg
jne
adc
mov
add
add
add
cmp
in
mov
push
dec
inc
dec
arpl
and
outsl
mov
popf
and
int3
add
arpl
call
or
xor
or
inc
sbb
sbb
pop
sbb
push
dec
sub
out
lods
bound
add
or
stos
xchg
mov
std
adc
gs
inc
add
cmp
xor
dec
adc
ret
adc
movb
bound
or
and
mov
inc
imul
or
and
add
add
add
aas
mov
push
repz
inc
leave
int
pop
dec
or
sub
mov
adc
inc
leave
fwait
mov
push
lods
arpl
sub
push
test
test
add
sbb
mov
dec
push
add
pop
push
aad
lcall
push
sbb
pop
adc
fcoms
cwtl
inc
jae
adc
inc
fbstp
dec
mov
xor
adc
arpl
mov
sti
fisttps
push
dec
xor
dec
stos
bound
call
mov
ficompl
fists
pop
sub
leave
aad
stos
aad
dec
adc
pop
jae
sub
dec
xchg
xor
pop
out
sub
add
mov
pop
or
addb
adc
adc
rcrl
inc
push
adc
sub
mov
push
push
pop
inc
ljmp
stos
addl
add
pop
jo
cltd
adcb
cmp
add
adc
sub
mov
mov
push
leave
popf
push
xchg
sbb
scas
pop
iret
pop
push
adc
xor
lea
cmp
dec
test
and
scas
pop
test
and
mov
sbb
mov
ljmp
inc
lods
pop
sub
push
push
imul
das
push
xor
sub
adc
aad
lods
inc
sub
and
inc
push
bound
mov
test
sub
adcl
xchg
adc
mov
push
adc
movsl
cmpsb
push
andl
sub
lods
xor
add
adcb
mov
sub
push
add
inc
push
mov
add
adc
mov
pop
adc
or
add
lods
movsl
sbb
cmc
mov
sbb
in
mov
mov
sub
mov
mov
dec
lods
aad
push
xchg
push
das
in
lds
mov
mov
dec
stos
or
push
mov
inc
stos
mov
jno
scas
push
test
and
sbb
mov
insb
lods
push
test
xchg
inc
stos
rcrb
call
adc
add
test
mov
mov
aad
inc
inc
add
or
cmpsl
inc
xor
push
jno
push
xor
sub
popa
xor
adc
sbb
push
inc
sub
mul
aam
push
mov
sbb
fisttpll
shrl
std
adc
xlat
xlat
add
test
das
fstl
mov
aad
sbb
pop
inc
pop
add
mov
daa
fxch
bound
dec
testl
out
out
add
cmpsl
push
outsb
mov
aaa
mov
xor
mov
and
ficoms
sbbb
sbb
cmp
pop
push
or
push
es
clc
or
cmpsb
cmpsb
mov
adc
or
push
dec
negl
and
jg
addps
xor
jl
loopne
mov
outsb
insb
sti
sub
sarb
pop
pusha
mov
sbb
sbb
add
fwait
cwtl
or
js
sbb
pop
ljmp
and
sub
cmpsl
or
pop
push
cld
sbb
jle
sub
add
dec
and
adc
shl
test
push
call
out
xor
cmp
jae
add
cmp
loop
in
push
aaa
lret
in
jb
pop
pop
add
cltd
aam
cwtl
lea
pop
inc
inc
inc
add
lock
xor
out
jb
inc
jge
sbb
orl
mov
orb
in
sbb
or
out
clc
shl
add
scas
test
mov
in
je
ds
jl
and
sbb
sahf
shlb
push
pop
dec
fdivrs
outsl
sub
es
push
int
lock
dec
and
or
daa
je
mov
adc
faddl
inc
sqrtps
mov
dec
pop
push
and
js
lcall
adc
fwait
ret
call
sbb
jns
data16
sub
adc
mov
test
sbb
adc
pop
mov
jmp
and
sbb
push
jge
fs
add
push
add
adc
inc
sbb
dec
insl
add
mov
dec
pop
xor
sbb
pop
loope
mov
lods
add
cmp
xchg
inc
mov
es
test
and
xchg
mov
add
mov
pop
and
push
xchg
mov
xchg
addl
jno
mov
test
addr16
dec
dec
insb
out
loopne
mov
loop
pop
jns
inc
dec
test
fstpl
cli
push
cwtl
pop
stc
mov
inc
add
push
inc
inc
push
jbe
sbb
inc
fs
jbe
rorb
sbb
mov
mov
pop
iret
cld
lcall
sbb
mov
adc
xor
sub
out
xchg
ret
cs
add
mov
xor
sub
loop
fs
inc
cmpsl
nop
addb
mov
add
pop
inc
test
inc
sub
push
or
inc
add
movsl
or
gs
mov
iret
loop
add
fisttpl
inc
inc
sbb
pop
xor
adc
sbb
add
add
jo
enter
mov
and
inc
adc
dec
movl
or
adc
and
and
out
xchg
ja
aas
mov
bound
jo
insb
gs
out
imul
adc
push
negl
jle
push
push
lods
rorl
sbb
stos
add
aad
gs
lock
outsb
iret
sub
repnz
sub
sub
aam
mov
rolb
add
push
addl
mov
sbb
jl
add
in
dec
cmp
inc
test
sub
lods
adc
rorb
lods
inc
lds
add
cmp
ret
jge
or
inc
daa
ret
sbb
mov
aam
adc
fisubrl
mov
adc
sbb
sbb
xchg
or
mov
fldt
inc
mov
aam
stc
push
ja
xchg
or
xchg
pop
add
xchg
and
outsb
lods
sub
arpl
xor
sbb
lds
or
or
push
outsl
pop
push
pop
inc
sub
xor
imul
iret
subb
imul
push
mov
fmuls
fst
xor
test
push
cmpsl
adc
dec
add
aam
and
shl
or
repz
and
pop
mov
imul
inc
add
dec
add
and
mov
inc
sub
mov
push
call
sub
addl
std
adc
test
test
sub
stos
roll
mov
xchg
or
pusha
inc
dec
mov
rolb
add
adcb
xlat
stos
dec
mov
xor
mov
sbb
add
stos
repz
and
popf
sbb
adc
push
stc
pop
mov
mov
inc
mov
push
cltd
leave
mov
xchg
sub
sub
adc
dec
sbb
xor
pop
cmpsl
xchg
test
aam
sbb
mov
and
ret
adc
aam
pop
mov
adc
insb
aad
push
lds
sub
xchg
mov
mov
and
ret
xchg
mov
imul
pop
or
mov
ljmp
xor
and
lds
add
dec
add
mov
jnp
subb
adc
and
jmp
add
popa
mov
and
gs
xor
lods
and
repz
sub
bound
and
jecxz
fsubrs
or
and
adcb
sbb
push
pop
pop
dec
aad
jb
and
pop
roll
xchg
mov
mov
push
ffree
push
or
inc
add
fldenv
adc
mov
mov
add
push
and
and
test
inc
xor
imul
mov
add
mov
shlb
repz
fsubr
cld
cmp
fwait
out
sbb
xor
sbb
and
push
les
nop
stos
or
add
push
mov
xchg
inc
or
add
fsts
inc
adc
clc
out
add
loopne
add
add
in
rcrb
dec
or
add
jo
in
sbb
outsl
jmp
adc
gs
jns
je
insl
push
imul
sbb
jne
je
popa
outsb
addr16
inc
das
jbe
inc
dec
mov
inc
jne
push
in
inc
dec
shrb
dec
fs
mov
jne
push
outsl
insb
gs
outsb
jo
je
jne
data16
inc
js
dec
pop
sti
jnp
pop
xchg
mov
jne
popa
fiaddl
mov
insl
or
inc
and
scas
fs
mov
push
xchg
push
and
outsl
daa
mov
mov
mov
lods
insl
or
je
jns
andb
jns
pop
pusha
pop
xorb
dec
sbb
dec
or
imul
jle
insb
dec
popa
sbb
jo
mov
repnz
in
push
cmp
gs
sbb
scas
sub
loop
dec
gs
decl
sahf
fsts
aas
or
dec
outsl
je
xchg
fsub
jns
push
jae
lcall
adc
int3
pop
push
adc
add
mov
mov
lods
inc
adcb
inc
adc
negl
mov
movsl
dec
jb
icebp
sbb
outsl
push
jo
pusha
add
and
jb
xor
sub
add
and
push
subb
pop
sub
mov
dec
mov
lcall
inc
and
in
insl
subl
popa
call
andl
test
ja
loop
sub
pop
push
pop
sub
lock
inc
arpl
arpl
sub
addr16
and
jae
push
push
sbb
lcall
loope
out
and
pop
xor
jo
jns
out
les
lds
aas
bound
bound
cmova
leave
int3
mov
push
add
repnz
adc
stos
sub
scas
inc
es
xor
in
lcall
push
or
je
lock
push
add
fdivrp
pusha
add
xchg
and
xchg
push
add
lock
inc
sub
add
push
add
push
mov
push
ljmp
and
mov
clc
add
push
add
add
jg
outsl
mov
cmp
add
or
aaa
dec
fmull
or
or
imul
mulb
add
add
xchg
add
pop
inc
sub
loopne
mov
xchg
mov
pop
lods
add
negl
enter
inc
pop
add
mov
idivb
push
push
sbb
insl
inc
packuswb
add
mov
js
adc
and
in
sub
inc
dec
inc
inc
in
filds
add
sub
fwait
loopne
push
inc
pusha
arpl
in
pop
mov
inc
push
push
or
nop
sbb
add
jns
sub
push
lock
push
or
dec
mov
mov
dec
into
push
mov
and
xchg
dec
push
outsb
ficoms
push
add
inc
push
and
xchg
test
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
