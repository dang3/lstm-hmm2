jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
mov
mov
mov
dec
jne
cmp
jo
mov
mov
mov
mov
xchg
mov
xchg
inc
mov
xchg
lea
dec
inc
mov
cmp
je
jmp
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
xor
divl
test
jne
lea
cmp
jo
lea
xchg
mov
xchg
xchg
xchg
dec
inc
dec
jne
mov
lea
dec
dec
mov
mov
mov
lea
mov
lea
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jo
mov
lea
mov
xchg
lea
mov
mov
mov
inc
inc
inc
mov
mov
mov
lea
mov
mov
dec
inc
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
xchg
lea
lea
lea
inc
inc
dec
dec
jne
mov
lea
dec
dec
mov
cmp
je
jmp
cmp
jo
mov
mov
mov
lea
mov
dec
inc
lea
mov
lea
lea
lea
xchg
inc
dec
je
xchg
xchg
lea
dec
dec
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jge
mov
mov
lea
mov
lea
mov
mov
dec
dec
inc
lea
mov
mov
mov
mov
mov
xchg
mov
dec
dec
mov
cmp
je
jmp
cmp
jo
mov
mov
mov
lea
mov
dec
inc
lea
mov
lea
lea
lea
xchg
inc
dec
je
xchg
xchg
lea
dec
dec
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jo
mov
lea
mov
xchg
lea
mov
mov
mov
inc
inc
inc
mov
mov
mov
lea
mov
mov
dec
inc
inc
mov
sub
mov
cmp
jp
lea
xchg
cmp
jg
lea
mov
mov
lea
lea
xchg
dec
mov
mov
lea
xchg
xchg
mov
push
mov
mov
xor
call
mov
lea
cmp
jo
lea
xchg
mov
xchg
xchg
xchg
dec
inc
dec
jne
mov
lea
dec
dec
mov
mov
mov
lea
mov
lea
mov
mov
mov
call
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
xchg
lea
lea
lea
inc
inc
dec
dec
jne
mov
lea
dec
dec
push
mov
mov
xor
call
mov
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
mov
mov
mov
dec
jne
cmp
jo
mov
mov
mov
mov
xchg
mov
xchg
inc
mov
xchg
lea
dec
inc
lea
mov
push
jmp
cmp
jp
lea
xchg
cmp
jg
lea
mov
mov
lea
lea
xchg
dec
mov
mov
lea
xchg
xchg
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
mov
mov
mov
lea
mov
dec
inc
lea
mov
lea
lea
lea
xchg
inc
dec
je
xchg
xchg
lea
dec
dec
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jge
mov
mov
lea
mov
lea
mov
mov
dec
dec
inc
lea
mov
mov
mov
mov
mov
xchg
mov
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
push
mov
add
movl
mov
mov
mov
push
mov
push
call
test
je
movl
movl
mov
push
mov
push
call
lea
cmp
jo
lea
xchg
mov
xchg
xchg
xchg
dec
inc
dec
jne
mov
lea
dec
dec
mov
mov
mov
lea
mov
lea
movl
movl
mov
push
mov
push
call
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
add
xor
xor
xor
add
push
mov
add
mov
mov
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
xchg
lea
lea
lea
inc
inc
dec
dec
jne
mov
lea
dec
dec
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
lea
cmp
jo
lea
xchg
mov
xchg
xchg
xchg
dec
inc
dec
jne
mov
lea
dec
dec
mov
mov
mov
lea
mov
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
lea
xchg
cmp
jg
lea
mov
mov
lea
lea
xchg
dec
mov
mov
lea
xchg
xchg
mov
mov
mov
movl
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
mov
lea
mov
xchg
lea
mov
mov
mov
inc
inc
inc
mov
mov
mov
lea
mov
mov
dec
inc
inc
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
aam
hlt
pop
aam
hlt
stos
aam
hlt
cwtl
aam
hlt
sahf
aam
hlt
mov
mov
jb
mov
adc
hlt
data16
hlt
push
aam
hlt
push
nop
bound
sbb
hlt
jge
or
mov
js
mov
jge
or
push
jl
mov
jge
or
loope
andb
jge
or
rcll
bound
sbb
push
push
mov
insb
bound
sbb
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
push
mov
hlt
ss
std
push
mov
hlt
ss
jp
or
or
push
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
push
mov
repz
pmuludq
hlt
jl
or
xor
mov
push
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
push
mov
mov
pmuludq
hlt
push
cld
push
mov
ret
xor
std
push
mov
ret
and
cld
push
mov
incl
add
repz
pmuludq
hlt
push
std
push
mov
ret
xor
cld
push
mov
jp
add
jl
adc
xor
std
push
mov
jp
add
ret
and
cld
push
mov
jl
add
ret
xor
std
push
mov
jp
adc
push
mov
ret
xor
cld
push
mov
incl
add
ret
and
std
push
mov
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
push
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jge
mov
mov
lea
mov
lea
mov
mov
dec
dec
inc
lea
mov
mov
mov
mov
mov
xchg
mov
dec
dec
movl
cmp
jp
lea
xchg
cmp
jg
lea
mov
mov
lea
lea
xchg
dec
mov
mov
lea
xchg
xchg
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jo
mov
lea
mov
xchg
lea
mov
mov
mov
inc
inc
inc
mov
mov
mov
lea
mov
mov
dec
inc
inc
mov
mov
call
mov
cmpl
je
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
mov
cmp
je
mov
subb
mov
mov
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
nop
xorb
nop
cmp
jo
mov
lea
mov
xchg
lea
mov
mov
mov
inc
inc
inc
mov
mov
mov
lea
mov
mov
dec
inc
inc
incl
mov
cmp
jne
cmp
jo
mov
mov
mov
lea
mov
dec
inc
lea
mov
lea
lea
lea
xchg
inc
dec
je
xchg
xchg
lea
dec
dec
inc
mov
call
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
mov
mov
mov
dec
jne
cmp
jo
mov
mov
mov
mov
xchg
mov
xchg
inc
mov
xchg
lea
dec
inc
push
mov
push
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
dec
jne
cmp
jo
mov
mov
mov
mov
xchg
mov
xchg
inc
mov
xchg
lea
dec
inc
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
lea
cmp
jo
lea
xchg
mov
xchg
xchg
xchg
dec
inc
dec
jne
mov
lea
dec
dec
mov
mov
mov
lea
mov
lea
movb
cmp
jle
mov
lea
lea
mov
lea
lea
mov
lea
lea
inc
lea
lea
lea
mov
xchg
xchg
inc
dec
dec
mov
mov
pop
ret
push
mov
add
call
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
call
call
call
test
jne
mov
jmp
movw
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
xchg
lea
lea
lea
inc
inc
dec
dec
jne
mov
lea
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
jae
mov
mov
mov
xchg
mov
mov
lea
mov
inc
inc
inc
dec
jne
lea
dec
mov
mov
xchg
lea
mov
mov
push
call
cmp
je
lea
cmp
jo
lea
xchg
mov
xchg
xchg
xchg
dec
inc
dec
jne
mov
lea
dec
dec
mov
mov
mov
lea
mov
lea
push
call
mov
pushl
call
cmp
jp
lea
xchg
cmp
jg
lea
mov
mov
lea
lea
xchg
dec
mov
mov
lea
xchg
xchg
mov
mov
pop
ret
add
je
jae
add
sbbl
jne
movl
cmp
jo
mov
mov
mov
lea
mov
dec
inc
lea
mov
lea
lea
lea
xchg
inc
dec
je
xchg
xchg
lea
dec
dec
inc
mov
mov
mov
lea
call
cmp
jo
mov
lea
mov
xchg
lea
mov
mov
mov
inc
inc
inc
mov
mov
mov
lea
mov
mov
dec
inc
inc
ret
mov
ret
lea
mov
push
js
add
popf
add
add
mov
ss
dec
mov
ljmp
clc
cmpsl
add
pusha
loopne
sarl
jge
jae
mov
scas
mov
mov
inc
or
lcall
add
push
cmpsb
add
add
cltd
adc
add
not
jmp
add
add
add
scas
add
mov
enter
dec
jmp
mov
fwait
jmp
add
mov
cli
mov
fwait
push
add
add
test
jnp
loopne
mov
sub
add
jo
push
add
mov
pusha
jle
bound
scas
das
inc
scas
sub
add
sar
push
cmp
jno
fs
movb
adc
xlat
jl
je
mov
mov
testl
lret
stos
cmp
add
xchg
add
xlat
lea
add
mov
push
outsb
rorb
jmp
popa
inc
fsubl
push
add
add
add
adc
aaa
add
sbb
dec
loope
dec
sbb
addl
aam
or
xchg
rcl
add
sti
and
mov
add
add
fcompl
test
add
fldl
xlat
adc
mov
inc
jns
add
fcomps
xor
add
add
xchg
add
pushf
jecxz
lds
popa
add
sub
dec
adc
cmp
or
lods
pop
out
lar
add
mov
mov
add
pushf
ss
xchg
add
sbb
adc
add
xchg
ret
cmp
add
fsubrp
pusha
add
movb
sbb
xchg
and
popa
lret
sub
add
cmp
push
lcall
push
pop
popf
aas
add
add
adc
mov
add
js
mov
stos
and
outsl
add
add
jp
out
popl
or
push
imul
in
add
add
cmpsl
cld
add
lcall
std
cmp
data16
clc
add
jle
repnz
xor
xchg
add
pop
sub
push
je
cld
popa
add
push
lahf
add
add
dec
mov
daa
js
mov
in
je
add
mov
add
jbe
add
outsl
add
pop
dec
adc
jl
add
pop
push
sbb
add
enter
dec
pop
inc
icebp
fcoml
fmull
add
ficompl
push
iret
xchg
add
add
or
pop
dec
inc
pop
pop
and
add
imul
and
add
lods
fs
negb
sbbl
cmc
pop
add
leave
add
faddl
and
cmpsl
inc
add
mov
add
add
mov
adc
add
mov
add
out
add
mov
nop
faddl
or
add
add
mov
xor
add
nop
add
and
mov
leave
xchg
jl
bnd
add
pop
repz
mov
mov
xlat
dec
adc
pop
add
int
rcrb
int
in
leave
rcll
adc
stos
add
aaa
insl
in
aam
or
int
pop
adc
inc
dec
sbb
fabs
and
andl
push
pop
cmp
push
add
add
push
stos
sbbb
addb
sbb
out
addr16
pushf
adc
push
add
jecxz
iret
sbbb
pop
leave
clc
add
sbb
mov
in
shll
and
clc
add
sarb
or
add
insl
popf
imul
in
push
xchg
mov
adc
mov
ret
inc
pop
rcll
push
hlt
out
or
aaa
gs
in
jns
mov
inc
rolb
xor
ficoml
or
add
stc
pop
ljmp
cmp
inc
add
pop
clc
mov
movsb
adc
push
xor
pop
jge
sbb
inc
imul
sub
or
mov
dec
jl
add
psllq
push
ja
xchg
inc
jl
scas
sbb
and
fnstsw
addb
cwtl
repnz
inc
sbb
pop
cmpsb
int3
loope
in
rclb
enter
daa
jno
sarb
or
sub
push
ss
in
jg,pt
pop
movsl
xchg
xchg
push
cmp
lahf
sub
mov
test
outsl
fstl
out
andl
pop
and
sbb
xor
mov
and
add
jmp
mov
outsb
jnp
push
adc
jae
out
cmp
cli
add
mov
fwait
xor
push
test
inc
int
xchg
push
sub
fstps
pop
lock
lcall
jb
fimuls
sbb
push
out
frstor
aas
subb
and
push
repz
adc
sub
cmp
ds
notl
or
and
or
adc
movb
push
or
mov
mul
sbb
loop
or
lea
add
bound
mov
and
push
add
pusha
mov
repnz
inc
xor
pop
daa
jle
gs
and
push
pop
cmpsl
pop
xchg
loope
adc
pop
push
imul
mov
xchg
pushl
cmp
jmp
mov
mov
sub
pop
and
hlt
lret
pop
aad
ret
lret
dec
mov
rolb
add
fldlg2
imul
jecxz
gs
gs
mov
pop
es
scas
pusha
or
dec
stc
bound
mov
addr16
pop
cmp
inc
push
sub
aas
fldl
lret
jb
mov
push
and
xchg
fwait
test
std
cmpsl
popl
lea
mov
push
rorb
xchg
loop
cld
adc
lret
aaa
jge
push
mov
lock
mov
das
or
mov
fistl
icebp
aam
dec
cld
ret
loop
adc
insl
les
cmpsl
jo
pop
mov
int
pop
lods
das
dec
mov
adc
mov
cmp
aas
rclb
adc
test
xchg
insl
adc
push
push
das
or
les
scas
xchg
inc
dec
ljmp
test
mov
bound
lods
mov
stos
xchg
pop
push
popa
stc
outsl
aas
sub
sub
in
xor
in
pop
mov
xchg
sub
or
test
int
xchg
mov
js
push
hlt
or
cmp
test
add
imul
inc
cmc
xor
test
adc
mov
frstor
xchg
dec
or
jno
pop
pop
sbb
inc
ja
leave
imul
test
mov
cmp
jne
xchg
inc
mov
mov
icebp
divl
adc
cltd
lds
mov
loopne
push
mov
pop
addr16
lret
jp
cmp
stc
pop
add
fwait
gs
jle
pop
outsl
in
test
mov
and
xchg
stos
hlt
dec
jmp
pop
lea
jae
cmp
push
loope
sbbl
mov
stos
out
push
and
sub
sbb
adc
scas
movsl
in
out
push
fsubr
adc
jg
iret
fs
or
hlt
xor
arpl
in
inc
out
jb
and
adc
lods
incl
sti
sbb
ljmp
out
ret
sbb
std
fiadds
les
mov
lods
or
dec
in
movsb
mov
lret
loop
popa
nop
and
std
xchg
jmp
xorb
and
or
inc
add
pop
pop
jge
cmpsl
mov
push
pop
mov
xor
fwait
outsb
ljmp
add
push
arpl
sbb
mov
mov
jo
cmpb
cmp
jno
sub
jge
cmp
mov
movsl
fwait
or
and
daa
xchg
lahf
dec
and
push
jg
out
test
jp
shlb
push
dec
and
mov
cmp
mov
js
sbb
push
sub
fcoml
add
stos
adc
dec
inc
fisttps
ss
sbb
aaa
in
mov
shr
and
push
mov
xchg
pop
and
das
lcall
cld
mov
mov
inc
iret
dec
sahf
push
test
sbb
hlt
jo
and
xchg
mov
xor
rolb
cmp
stc
shll
out
lret
pop
shll
push
or
jmp
cmc
fiadds
xor
pop
outsl
push
push
loop
movsl
gs
inc
cmpsl
outsl
adc
add
int
xchg
push
icebp
lods
xchg
jle
mov
push
in
out
cli
imul
sub
xor
dec
je
repnz
jne
dec
cmc
out
gs
or
adc
add
sbb
xor
xchg
ret
sbb
stc
jae
xlat
push
mov
sub
sub
pushf
pop
mov
jmp
pop
in
push
mov
aad
das
mov
movsl
push
push
dec
adc
insl
inc
sbb
popa
fldenv
xchg
test
jecxz
mov
push
in
sbb
push
notl
xlat
mov
pop
bound
fs
in
cmc
lods
repnz
cmpsb
es
aas
jl
mov
in
dec
mov
adc
pop
dec
shr
and
testb
cltd
cwtl
dec
cld
dec
mov
xchg
fimull
sub
lret
xor
mov
dec
lock
scas
shrl
call
fldt
aam
inc
loope
jno
or
adc
movsb
dec
into
fucomp
cmpsl
outsl
xor
fs
movsb
fisubrl
xor
mov
pop
push
sub
pop
mov
shr
ss
sub
push
test
pop
lea
adc
das
fucomp
jbe
clc
out
sbb
ljmp
sbbb
stos
mov
mov
xchg
icebp
lcall
int3
sub
add
sub
or
mov
mov
nop
dec
adc
popf
test
loop
xchg
andb
pop
add
or
push
cwtl
fwait
pop
dec
dec
push
loopne
xchg
add
push
jecxz
incl
push
xor
sub
xchg
in
push
adc
sahf
push
loopne
jae
or
pop
xlat
sti
push
ja
and
inc
inc
out
xor
mov
and
dec
movsb
xchg
jg
ret
mov
mov
xlat
bound
pop
and
lret
xchg
out
inc
jbe
add
fldl
jp
jb
mov
push
shrb
jne
dec
daa
data16
dec
aad
sarb
fistpll
stc
cs
jge
in
jmp
and
pop
push
movsb
push
popf
aad
or
icebp
leave
mov
sub
sbb
mov
imul
scas
or
dec
adc
mov
pusha
ret
mov
bound
arpl
xlat
mov
ljmp
push
xchg
inc
dec
fidivrl
or
fldenv
pop
dec
cmp
imul
jp
and
repnz
leave
out
movsb
sub
hlt
push
xchg
mov
jge
add
sbb
mov
insb
add
sahf
mov
dec
in
stos
pop
push
cmp
jecxz
jo
je
scas
xlat
repnz
and
js
push
loopne,pn
inc
cmp
andl
lret
push
xor
outsl
mov
cmp
loop
sub
jbe
cmp
sbb
movsl
mov
daa
xchg
lahf
addr16
push
push
mov
test
test
adc
pushl
test
in
pop
mov
ds
loope
int3
adc
aas
mov
sub
popa
add
sub
inc
sti
and
orb
sbb
pop
test
push
inc
out
push
mov
sub
add
pop
push
out
dec
out
push
xor
std
sbb
sahf
mov
push
test
mov
and
mov
xchg
ds
mov
sbb
mov
add
inc
adc
cmpl
pop
sarl
mov
aas
notl
ret
cmp
cmp
fwait
or
repnz
into
adc
cmp
lods
jmp
ret
loop
jb
stc
sti
mov
add
jge
sub
loopne
lods
js
arpl
dec
js
cli
xor
insb
in
sbb
pop
sti
mov
pusha
call
loopne
rolb
adc
and
les
mov
repz
sbb
sbb
xor
mov
sub
cmp
mov
or
cmpsl
mov
mov
add
nop
cmpb
jae
addr16
jbe,pn
fstps
enter
and
mov
test
imul
lea
mov
add
adc
pop
dec
dec
iret
mov
jle
cli
pop
inc
sub
mov
mov
sub
dec
add
repz
jl
sarl
add
test
addr16
cmc
pushf
pop
cwtl
add
and
lret
add
loopne
lret
movsb
mov
mov
jb
mov
into
mov
mov
sbb
mov
dec
in
mov
adc
and
xchg
jo
insl
xchg
sbb
leave
xor
cmpsl
outsb
xchg
dec
mov
jnp
sbb
mov
and
rorl
inc
sarb
mov
test
test
mov
pop
aad
push
xchg
fstl
lods
adc
and
xchg
shrb
popa
pop
mov
adc
jp
jns
jb
notb
pop
dec
lods
movntps
push
add
sbb
push
add
mov
mov
xlat
dec
ja
dec
test
mov
xchg
out
repz
dec
je
pop
sub
sub
fwait
mov
sbb
andl
add
lret
jmp
adc
push
xchg
xchg
or
cmpsl
lock
clc
mov
mov
testl
lock
dec
cmpsl
jnp
inc
xchg
sub
xchg
enter
mov
fidivl
push
bound
push
xchg
out
mov
out
fdiv
sub
test
movsl
addr16
enter
or
rcr
jnp
iret
in
jnp
lods
and
xor
in
das
pop
pusha
pop
sbb
fistps
mov
jmp
sub
stos
lea
addr16
cld
sbb
mov
xor
stos
int
pop
and
pop
sbb
imul
scas
imul
push
es
fcmovu
iret
and
ret
repz
jbe
icebp
hlt
repz
or
rorl
xor
inc
fisubrl
xor
aam
pop
ja
adc
dec
inc
cwtl
lds
push
rclb
cmp
push
enter
xchg
movsb
mov
lahf
push
loope
sub
jle
jge
out
lods
sbb
pop
aaa
andb
add
popa
dec
pop
scas
movsb
push
and
xor
push
mov
and
aaa
cld
cmp
push
mov
cmpsb
push
xlat
mov
test
stos
enter
daa
outsb
aad
cmp
cmp
jno
ja
sub
inc
imul
mov
inc
movsl
test
cmp
lahf
xchg
cli
push
and
loopne
add
push
cmp
repz
aaa
inc
or
js
push
pop
loopne
popf
push
add
out
ljmp
outsb
movsb
or
pop
je
add
rorb
pop
cvtps2pi
fs
mov
cmp
incb
mov
pusha
int
out
subl
clc
lcall
pushf
mov
jmp
xor
jb
mov
cld
pop
xchg
jg
stos
fdivs
mov
icebp
rcll
adc
sub
jb
outsl
jnp
testl
lock
pusha
cmp
ret
cwtl
cmpsl
into
clc
xchg
cmc
insb
out
bound
or
std
outsl
push
imul
data16
stc
mov
mov
dec
lahf
push
or
pop
xchg
sub
mov
out
jp
cli
stc
pop
inc
xor
add
sti
push
jns
nop
mov
sbb
daa
stos
mov
out
pop
adc
ret
mov
les
mov
repz
mov
xchg
dec
dec
xchg
sbb
outsl
push
cmpsb
xlat
iret
sarl
xchg
mov
mov
mov
int
or
sbb
mov
shlb
jl
xchg
lret
pop
je
rclb
outsb
cmc
das
lea
faddp
aad
mov
cmp
dec
mov
in
pop
popf
hlt
fildl
sub
inc
mov
std
mov
dec
ja
push
rorl
ret
fwait
std
pushf
stc
add
pop
xchg
adc
push
insb
test
xchg
xchg
pop
lret
adc
xchg
jecxz
das
cmpsb
lock
mov
fisubrs
pushf
ret
das
dec
es
fwait
adc
sbb
dec
les
xor
mov
push
mov
jns
out
sub
sub
pop
xchg
lea
sub
js
test
jmp
push
cltd
mov
fs
pop
sbb
lcall
ljmp
test
add
aad
sub
push
repnz
jp
loopne
cltd
incl
xor
or
mov
xor
cmp
xchg
mov
dec
or
out
scas
fwait
mov
and
ss
add
add
xor
sahf
or
adc
jle
arpl
stc
incl
mov
dec
inc
sub
push
jnp
sbb
nop
dec
mov
or
push
cwtl
dec
mov
loopne
out
jge
push
bound
ror
xchg
mov
outsl
adcl
out
fisttps
or
mov
adc
mov
mov
jnp
negb
jle
or
in
or
cmc
jle
fistpll
fistl
dec
or
cmp
jae
dec
sti
push
sub
in
and
cmpl
inc
pop
int3
and
inc
sbb
cld
test
inc
ret
loop
into
icebp
ficoml
testb
es
xor
jb
lods
inc
stc
hlt
adc
inc
lock
lcall
pop
mov
fisubl
rcll
sub
xor
cmpsb
jge
fsubrp
fsubrp
inc
shlb
add
leave
mov
dec
movsb
inc
cmpsb
cmpsl
push
xor
mov
jge
mov
add
aas
es
add
cwtl
xor
sahf
dec
lret
je
push
add
icebp
jo
mov
mov
mov
jmp
pop
inc
xor
inc
push
cltd
adc
insb
rcll
enter
daa
insl
jp
cmp
mov
jno
xor
sub
in
cmp
out
movsl
mov
int
mov
gs
push
clc
es
test
fwait
jge
xor
mov
cli
sbb
sti
jo
pop
pop
mov
std
subb
test
popa
xchg
aaa
outsb
pop
test
adc
fistpll
mov
jle
sbb
jo
and
mov
xchg
push
xlat
int
subb
leave
jg
pop
push
scas
mov
push
loope
xchg
mov
pushf
popa
sahf
test
push
adcb
sti
jg
sbb
mov
pop
dec
mov
int
fs
loop
adc
ss
outsl
leave
cmp
sub
testl
xor
cmp
adc
into
fcmovnb
shl
fstpt
arpl
outsl
in
inc
inc
loop
test
xchg
adc
std
movl
sbb
xor
and
push
out
add
sub
cld
xor
xor
out
xchg
mov
jmp
mov
insb
sarb
loopne
xchg
test
or
movsb
lcall
sub
repz
rcrb
stos
cmp
xlat
push
sub
mov
pusha
fdivl
cmpb
aam
jbe
ss
dec
xor
cs
push
mov
mov
mov
cmp
cltd
lea
pusha
inc
call
push
push
ficoms
xlat
push
add
push
fstpt
push
lcall
insb
xchg
aas
pop
scas
jb
lahf
inc
dec
out
dec
loopne
xchg
pop
testb
std
inc
cmp
cwtl
jns
fnstenv
mov
aas
sub
sbb
lret
addb
hlt
out
ss
jbe
lock
sbb
das
test
test
jle
pop
mov
test
aam
es
dec
mov
faddp
mov
sub
lods
stos
gs
mov
mov
xor
fbld
mov
jno
popa
in
sub
shlb
test
scas
fstp
pusha
ret
cwtl
imul
adc
ljmp
lea
xchg
cmp
out
xchg
movb
psubsw
add
cltd
ss
jle
jmp
mov
js
cmp
dec
inc
mov
cmc
xchg
xchg
rorl
cwtl
or
xchg
cltd
fwait
jmp
push
lods
add
movsl
ret
or
and
mov
or
add
in
fiaddl
mov
mov
jl
mov
or
ja
push
mov
inc
mov
mov
mov
and
dec
dec
pop
jmp
pop
mov
mov
sbb
int3
bound
push
jns
test
xchg
jl
mov
pop
pop
jno
mov
int
addr16
aam
jp
push
stos
mov
and
add
jle
xlat
clc
in
inc
sahf
pusha
nop
cmc
mov
pushf
add
xchg
mulb
daa
inc
inc
sub
jae
sub
popf
dec
movsl
fstpt
scas
push
imull
outsl
or
sbb
icebp
lahf
imul
push
clc
rcrl
movsb
xchg
loopne
inc
ret
cmp
movsl
and
arpl
inc
repz
sbb
push
aad
adc
ja
aam
dec
xchg
addb
pop
aad
pushf
ficoms
xchg
xchg
ror
sarb
clc
push
dec
leave
sub
mov
jbe
cmp
xor
xlat
mov
and
stos
outsb
scas
add
imul
jmp
push
out
inc
xor
pop
add
scas
je
xlat
and
dec
cmp
sbb
cmp
out
sbb
push
lods
or
mov
mov
shll
or
cmp
mov
movsl
mov
pop
and
xor
lret
scas
hlt
test
cmpsb
imull
xchg
jle
mov
push
sub
ss
pop
pop
rcll
jo
aas
loope
lds
adc
sub
cld
outsb
push
push
adc
mov
or
addb
and
and
test
sub
pop
aam
mov
push
cmp
xor
add
test
lds
mov
inc
lods
mov
es
adc
and
pop
fsub
xor
int
xor
push
stc
movsl
sar
cmpsl
cmp
cmp
into
mov
sub
xor
push
xor
mov
in
stc
and
jmp
loop
leave
add
xchg
std
pushfw
and
lods
sub
xchg
xor
dec
or
xor
sbb
in
pop
add
scas
xchg
mov
pop
push
fldcw
loopne
cwtl
or
mov
mov
les
fdiv
in
inc
xchg
into
movsb
imul
clc
xlat
dec
add
sub
enter
insl
pushf
or
jmp
xlat
inc
jecxz,pn
ljmp
ds
dec
nop
stos
fildl
stos
push
fcos
xchg
cmp
add
rol
je
push
jb
std
call
roll
pop
cmpsl
je
adc
fldt
pop
jecxz
leave
inc
ret
inc
insl
aas
clc
bound
dec
gs
and
int
shll
cmp
cmc
cmp
pop
test
xor
pop
mov
movsb
adc
mov
sar
cld
call
lods
pop
mov
pushf
mov
out
cmpsb
jle
adc
mov
je
fadd
lods
mov
fsubrs
into
pop
dec
mov
leave
xchg
add
lods
adc
pop
or
cmp
fcomps
aam
dec
shlb
clc
sub
test
hlt
gs
shll
push
pop
xor
fldl
dec
lea
test
outsb
fistpl
push
stos
inc
xchg
daa
out
fwait
mov
sub
fildl
add
push
mov
xchg
add
dec
lods
and
mov
cmp
shll
lahf
or
or
lea
insb
adc
inc
ret
dec
add
mov
mov
adc
in
enter
mov
mov
insb
xchg
mov
ret
fsubp
ja
mov
xor
mov
lods
jmp
dec
xor
push
mov
outsb
or
cmp
stos
cmp
cld
fcoms
inc
daa
lahf
xorl
out
dec
int
mov
inc
lcall
pop
and
insb
adc
jnp
mov
cwtl
dec
in
out
pusha
sub
pop
xchg
leave
push
jmp
dec
mov
push
push
mov
mov
add
mov
stos
es
and
mov
nop
scas
xchg
push
xchg
push
aas
icebp
sbb
jg
jl
aas
ljmp
sbb
mov
inc
divb
dec
or
add
inc
xchg
mov
dec
xchg
fldenv
jo
add
mov
lds
pop
pop
mov
dec
insb
push
leave
mov
jbe
dec
cmp
push
sub
xchg
sti
imul
mov
add
and
cltd
dec
test
outsb
cmp
bound
scas
push
push
fsubl
fisttpl
cmp
xchg
lds
addb
nop
cmpsb
fsubp
jl
cmp
enter
daa
imul
data16
in
or
inc
cmp
jns
ds
pop
push
movsl
mov
in
jecxz
jecxz
test
push
test
mov
ljmp
sbb
pop
fwait
imul
push
xchg
push
loope
pusha
iret
fsubr
mov
sub
pop
stos
outsb
int
jp
mov
and
xchg
pop
or
xchg
clc
rcrl
or
mov
sarl
and
pusha
pop
int
dec
cld
sub
movsl
mov
adc
adcb
cld
mov
pop
sbb
dec
mov
test
jae
orb
jg
add
mov
adc
adc
imul
fsubs
arpl
rcll
xchg
or
push
repnz
mov
loopne
xor
fists
loop
mov
stc
xlat
sbbb
lods
mov
add
into
imull
push
fldcw
out
cwtl
add
xchg
fs
in
lds
dec
sti
pop
enter
xchg
fwait
gs
int
clc
lods
pop
dec
idivb
imul
mov
sub
add
dec
jle
mov
sub
mov
mov
mov
xor
lcall
aad
mov
out
sub
fnstenv
icebp
adc
fsub
repnz
rol
ja
rorb
mov
and
loope
stos
adc
or
fistpl
add
dec
inc
hlt
xchg
jne
sub
fsubl
and
cmp
not
cmp
std
xchg
mov
xorl
sbb
push
cld
adc
push
mov
lods
div
bswap
inc
das
inc
xchg
mov
and
add
cmp
popf
mov
jge
dec
mov
call
mov
xlat
pop
dec
lods
cmp
mov
loop
fsubl
aas
jge
pop
rep
inc
rolb
pop
sub
mov
nop
mov
sub
loop
imul
push
enter
mov
popa
mov
ficomps
sbb
cmp
xchg
push
xchg
lret
fimuls
cmpsl
or
cltd
movsb
popa
jp
andl
xchg
jno
test
stc
filds
out
xlat
mov
or
pop
cwtl
fwait
inc
mov
push
bswap
pop
add
lcall
xor
push
or
jmp
lods
xchg
sub
sub
mov
jle
mov
stos
pop
dec
jae
jns
loop
insb
mov
sbb
lock
adc
mov
aam
out
sbb
lret
jns
sarl
xchg
adc
addl
inc
out
scas
shrb
xchg
push
push
jp
outsb
jb
sub
mov
mov
fidivrs
dec
pmulhw
jmp
pusha
push
and
xchg
pushf
cmp
jmp
pop
outsl
jbe
sbb
pop
popf
cwtl
mov
xchg
push
sub
sub
popf
aam
sbb
pop
sbb
adc
fwait
scas
testl
add
ret
pop
pop
push
pop
lods
hlt
repz
jne
jp
jmp
or
jnp
flds
adcb
xor
ror
call
sbb
xlat
pop
int3
lds
fwait
mov
sahf
mov
leave
pop
insl
or
cmp
pushf
jge
orl
or
sbb
jl
mov
sbb
push
lods
or
idiv
aaa
jo
rclb
xor
mov
outsb
adc
cmp
jo
inc
add
pusha
cmpsb
popa
and
mov
push
daa
push
nop
cmp
xor
cmp
aas
mov
je
insb
movsl
lds
lea
lahf
add
ds
jno
sbb
mov
xor
inc
dec
fwait
pop
ret
js
sti
sub
fdivrl
sbb
ret
fcoml
mov
outsb
xor
cmpsb
adc
jo
hlt
or
mov
inc
mov
cmp
sahf
adc
push
lcall
sub
push
mov
lcall
dec
mov
popa
sbb
push
sahf
loopne
mov
mov
subb
jg
sbbb
rol
xchg
stos
pop
fs
push
adc
divl
fs
or
pop
testl
cli
shrl
cmp
into
test
push
cmc
mov
mov
outsl
mov
adc
mov
data16
mov
mov
add
data16
mov
mov
cli
lds
and
sti
or
sbb
sbb
imul
aas
loopne
aad
pop
push
ljmp
fildl
pop
xchg
out
orb
push
lret
sub
adc
pop
xor
xlat
lret
inc
loope
push
xor
pop
pushf
popa
ja
jmp
lret
pop
cs
repz
dec
scas
jp
lea
imul
lock
jecxz
sub
lea
sbb
cmp
lret
rol
int
xchg
loop
adc
xchg
add
lods
fcmovne
or
pop
sub
cmp
fildll
xor
aas
fsubs
jb
sub
mov
rol
pop
out
notb
push
std
cmp
stos
ljmp
mov
xchg
cld
mov
rorl
fistps
and
aaa
xchg
mov
or
adc
es
adc
adc
imul
shl
xchg
shrl
lods
movsb
mov
dec
flds
fisubrl
pop
adc
rcr
gs
or
cmp
push
push
movsl
aad
ss
dec
aam
xchg
sti
adc
sbb
popa
into
in
push
pop
insb
fimull
out
popa
mov
xchg
fwait
hlt
push
push
pop
cmc
inc
clts
adc
cmp
cltd
fisttpl
and
mov
fwait
mov
push
test
xchg
sbb
or
or
jge
fwait
jbe
adc
mov
lods
add
notb
std
ffreep
xor
push
mov
xchg
js
ss
test
mov
ja
pop
dec
dec
data16
in
inc
jns
mov
push
das
dec
divb
jns
mov
xchg
pop
cld
ficoms
jns
outsb
xor
pop
fsub
jecxz
mov
outsl
rorb
icebp
cltd
addr16
les
mov
mov
insb
out
leave
jnp
lds
jle
divl
ljmp
xor
xchg
outsl
rolb
inc
fs
outsb
jae
push
bound
js
stos
push
imul
stos
or
xchg
and
add
and
push
int
adc
bnd
pop
pop
mov
cmp
mov
push
inc
cld
mov
push
xchg
out
loope
xchg
xchg
int3
pop
jg
pop
bound
jmp
lds
inc
or
sbb
idivb
icebp
xor
movsb
insl
pop
sub
jbe
rol
or
sbb
das
out
cmp
or
cmp
jl
xor
xchg
mov
cwtl
std
xor
sbb
adc
add
cmp
jg
push
lock
inc
xchg
dec
jnp
in
nop
in
or
jl
imul
out
lcall
cmp
fistpll
xchg
divl
and
leave
sub
inc
jle
test
pop
and
out
fst
push
lock
mov
rcll
test
flds
jl
inc
or
sbb
movsl
add
dec
mov
xor
inc
mov
ja
data16
test
lods
insb
hlt
push
popf
jb
int
lods
mov
pop
push
lods
dec
lcall
testb
test
adc
not
jg
add
dec
fisttpl
jo
jne
mov
add
cmp
push
testl
cmpb
lcall
sub
addr16
cmc
dec
jbe
xor
sarl
loop
mov
inc
mov
mov
xlat
repnz
and
cmp
mov
jg
dec
inc
pop
cli
clc
lcall
fwait
cmp
aas
out
gs
mov
pop
mov
adc
test
and
jle
imul
xchg
pop
or
push
cmpsb
data16
stos
jne
insl
adc
or
stos
jmp
jmp
cs
and
lock
nop
mov
aaa
dec
inc
mov
xchg
bound
xchg
jecxz
push
call
lea
jp
push
ljmp
xor
js
push
cmp
pop
int3
aam
inc
push
xchg
sub
mov
jb
lret
and
adc
adc
pop
notb
in
std
fbld
cwtl
gs
pushf
mov
popf
lcall
ja
cld
imul
mov
jne
lock
das
add
mov
xchg
fists
aad
lods
ret
pop
push
adc
cmpsb
cmp
stos
bound
mov
test
mov
push
fildl
mov
push
int
mov
xor
shrb
repnz
hlt
push
push
sahf
cli
clc
test
cmp
sub
add
popa
in
les
push
stos
adc
inc
out
les
adc
loop
xor
and
add
adc
fdivs
daa
push
mov
in
sahf
pop
scas
dec
loope
jge
repnz
xchg
aad
shrl
jl
lods
jae
fwait
movsl
cmp
push
push
adc
add
pop
icebp
lcall
lea
enter
xor
add
mov
hlt
sbb
ja
pop
repz
pop
push
roll
insl
mov
cli
das
lea
mov
sub
out
fdivrs
bound
scas
popf
xchg
test
stos
sbbl
imul
push
xor
mov
mov
adc
mov
sbb
insb
push
pop
fistpll
jecxz
jle
xchg
mov
icebp
and
cld
xchg
cmp
xchg
inc
fwait
test
push
adc
outsl
add
xchg
push
stc
fcomps
mov
scas
push
stos
dec
stos
jg
andb
sub
sbb
adc
imul
int3
scas
mov
xlat
inc
adc
into
xor
pop
jge
ret
ficompl
mov
movsl
arpl
push
and
mov
inc
adc
and
xchg
pop
int3
inc
ljmp
sbb
mov
loopne
movsb
lcall
add
sbb
mov
sub
jge
and
ret
es
cli
jns
or
adc
push
jge
jl
jae
dec
not
sub
jb
xor
jae
pushf
scas
lock
cmp
call
jecxz
and
mov
enter
daa
push
cwtl
push
jno
call
push
cmp
sbb
rorl
ret
push
sbb
inc
int
push
pop
cld
test
shlb
cmp
int
mov
leave
pop
push
pop
adc
xor
pop
into
movsl
push
jbe
loope
or
sub
xchg
outsb
testb
adc
es
jno
into
mov
sbb
pop
inc
and
inc
int
mov
sub
push
bound
shl
lcall
popa
mov
pop
mov
sahf
es
cmp
in
cmp
mov
sti
fs
orb
ljmp
fcom
jnp
test
sbb
pop
mov
or
cs
dec
cmp
xor
imul
fadd
add
adc
mov
pushf
data16
shrb
pop
xor
inc
pop
cmp
sub
clc
xor
outsb
in
push
repz
sti
push
pop
insb
gs
or
ret
mov
adc
inc
imul
jg
repz
or
sarl
sub
pop
dec
mov
mov
lcall
int
aad
stos
mov
dec
or
or
jb
fidivrl
jecxz
fcmovb
andb
call
iret
xchg
and
in
repz
push
fldt
mov
scas
inc
ficoms
adc
je
jae
outsb
nop
cld
dec
inc
push
mov
shll
shl
lcall
cwtl
and
lods
mov
divl
outsl
sarb
and
and
lods
pop
mov
arpl
mov
call
bound
loopne
mov
mov
mov
push
pop
sub
inc
insl
jecxz
jb
cmpsb
addr16
outsb
mov
pop
insb
push
rorl
mov
push
and
pop
push
jo
rolb
aad
push
int3
repz
int3
cmp
mov
mov
mov
movsb
sub
jne
add
cli
xchg
and
add
out
daa
jae
xchg
sub
fcoml
pop
and
les
add
fsubs
jo
dec
inc
add
bound
add
mov
stos
dec
test
pop
sub
sbb
leave
sarl
cmp
fcompl
clc
movsl
sbb
pusha
std
fiaddl
sub
cmp
out
xor
decb
aas
adc
jo
push
dec
sub
push
cmp
pop
scas
add
ja
xchg
xor
inc
cmpsl
jle
mov
imul
aaa
mov
jl
out
mov
fisubs
push
js
fcoms
xchg
subl
mov
or
clc
insl
jp
fsubrl
mov
mov
pop
jnp
les
in
push
pusha
xchg
jb
fbstp
mov
push
jmp
jp
xor
mov
jmp
or
mov
adc
loop
add
ljmp
pop
xchg
xor
jmp
aaa
iret
mov
xchg
pop
idivl
jns
aam
pusha
arpl
mov
or
in
dec
aaa
inc
cmp
xchg
xor
sub
faddp
jo
lds
pop
rol
push
push
or
xchg
leave
inc
leave
jl
xor
or
jbe
pop
adc
dec
jg
jle
repnz
mov
mov
add
mov
dec
gs
xchg
push
push
xchg
xor
into
ja
scas
iret
stc
andl
push
or
push
xchg
push
cmpsb
ljmp
enter
daa
addr16
cmp
dec
repz
jns
sub
adc
fstpl
lea
pop
hlt
sbbl
popa
in
fldl
xor
push
pop
aaa
sahf
les
mov
scas
push
sub
pop
xor
cmpsl
sub
bound
pop
pop
adc
int
mov
repz
gs
fistps
in
lcall
out
push
mov
pushf
lock
ret
sti
lcall
add
jecxz
sahf
leave
lret
and
cmpb
popf
mov
sti
or
xchg
adc
mov
sub
movb
mov
lret
dec
shl
jae
push
pop
decb
mov
cs
cmc
fstpl
lds
cmpsb
adc
imul
stc
mov
pusha
adc
adc
sub
adc
add
int3
cli
pop
mov
sub
sti
sbb
pop
incb
lock
loopne
stos
pop
pushf
adc
sub
imul
repnz
repz
test
xchg
popf
call
push
cmp
add
sub
mov
ja
rcrb
mov
nop
pop
jnp
dec
imul
inc
fsts
and
jecxz
jp
movb
jg
test
ret
jecxz
lods
orl
fistl
rcrb
je
inc
gs
inc
pusha
stos
jge
adc
or
dec
mov
cmp
shll
loope
std
sub
scas
test
mov
and
mov
dec
sbb
inc
dec
out
mov
int3
or
jnp
lahf
das
mov
lcall
imul
lods
je
insl
lret
dec
mov
sbb
mov
xor
pop
lods
sub
mov
mov
pop
loope
mov
outsl
jns
rclb
gs
roll
bound
push
out
test
dec
gs
clc
cli
jo
xchg
mov
cmpsb
dec
popa
adc
scas
stos
repnz
out
mov
inc
xchg
jo
mov
mov
fiadds
jmp
sti
cltd
sbb
xor
jge
mov
movsb
jne
dec
scas
xchg
test
cmpsl
push
xchg
mov
push
or
fildl
push
fwait
sub
add
inc
mov
mov
mov
jge
mov
std
in
pop
lret
fcomip
mov
jmp
mov
ja
xchg
push
dec
aas
jmp
inc
sarb
push
fmuls
lahf
mov
pop
mov
xor
xchg
pop
lret
pop
hlt
jns
sbb
xchg
ds
in
cmp
dec
out
les
and
and
orb
pop
aad
js
mov
insb
daa
js
jnp
push
jle
stos
pop
in
out
pusha
xor
fists
mov
call
les
jae
or
popf
xor
and
sub
gs
jecxz
stc
adc
sbb
pop
imul
mov
addl
mov
imul
dec
adc
pop
jns,pn
hlt
pop
mov
arpl
jns
or
addr16
inc
push
sub
fiaddl
pop
xchg
mov
int3
sbb
push
pop
out
cld
call
lds
and
ljmp
movsb
push
xchg
aad
pop
cs
lcall
jge
push
fstpl
cmp
aaa
js
out
or
add
jl
jo
dec
aam
mov
cmp
cs
sub
push
scas
scas
in
add
mov
test
push
push
lret
filds
sbb
cmpsb
insl
stos
in
mov
andps
insw
sbb
lods
out
jno
cs
sub
jg
cmp
sbb
movsl
loope
shlb
cmpsl
adc
mov
nop
addr16
mov
xor
sahf
dec
xchg
mov
pop
sbb
int3
imul
and
pop
faddl
adc
ljmp
adc
fsubl
push
inc
test
sbb
insl
mov
pop
dec
and
adc
cwtl
int
imul
into
adc
lcall
inc
mov
cltd
int3
sbb
repz
sahf
insb
lret
mov
aam
fdivrs
xchg
push
mov
and
adc
mov
cmp
inc
jno
testl
add
push
xchg
jnp
or
xchg
dec
into
adc
das
cmc
movsb
inc
std
xor
shll
push
lcall
push
jge
movsb
mov
xchg
data16
jmp
push
mov
into
adc
inc
sbb
xor
jo
in
fsub
test
enter
test
fisubl
cmp
out
fstl
sarb
imul
mov
mov
pusha
test
sbb
inc
cwtl
mov
sub
dec
and
or
jecxz
cs
lock
nop
xor
dec
lret
inc
or
xor
cmp
and
cmp
and
rol
int
inc
pop
pusha
leave
mov
cmp
dec
adc
mov
xor
inc
jnp
scas
aas
mov
xor
ret
lods
dec
das
rorb
push
dec
sub
add
test
and
std
aam
std
cwtl
xchg
sbb
push
cmp
mov
sub
ljmp
mov
scas
cmp
jecxz
sahf
daa
xor
orl
mov
ss
xchg
ret
pop
shll
das
aas
jmp
dec
pushf
inc
xchg
cmpsl
gs
lret
mov
or
sti
lods
xchg
gs
mov
xchg
pop
push
and
inc
jmp
dec
shlb
xchg
ljmp
mov
mov
loop
push
mov
pop
fnsave
aad
xor
inc
dec
ljmp
fistpl
mov
out
in
add
dec
push
lret
jb
fcom
cltd
mov
xchg
es
mov
cmpsl
dec
dec
dec
push
inc
lcall
cmovo
insl
xchg
enter
mov
insl
dec
test
xor
cmpsl
inc
add
loopne
jns
sub
or
pop
in
inc
aad
mov
loopne
adc
insb
pop
and
push
push
dec
xor
pop
inc
aad
push
mov
inc
inc
dec
addb
mov
sti
in
out
jne
mov
jns
dec
add
or
push
or
js
out
imul
fcomp
or
add
lds
jp
fnsave
xchg
les
and
aaa
jle
and
in
loope
pusha
int
pop
fbstp
aad
mov
xchg
imul
jae
enter
jmp
mov
addr16
fcomps
and
mov
cmpsl
imul
push
jmp
push
iret
jns
mov
pop
gs
push
hlt
push
lea
out
inc
or
je
loop
or
mov
adcb
and
fiadds
in
out
lds
add
fidivrl
cmp
divb
push
test
int3
jbe
push
scas
jge
inc
rcrb
hlt
test
aaa
aaa
fcompl
add
sbb
jl
sub
dec
inc
cmp
xor
test
push
scas
jecxz
and
cmpb
xor
inc
iret
cmp
cmp
movsb
mov
enter
daa
gs
cmp
push
and
popf
xchg
and
imul
popf
outsb
mov
nop
adc
movsb
add
jge
xor
xchg
xchg
adc
push
pop
test
push
js
jb
pop
pop
ret
xchg
lods
cmc
loope
div
fsubr
ljmp
pop
jecxz
adc
mov
mov
mov
sub
sbb
push
mov
fcmovnb
and
add
test
sbb
sub
ljmp
cltd
and
mov
cmc
insb
sbb
xor
xor
in
out
cmpsl
pop
jg
add
call
ss
adc
cmp
cmp
add
int3
testl
adc
cmp
insb
pop
or
cmp
repz
jns
imul
cmp
jb
xchg
cmpsb
popa
stc
and
sbb
mov
mov
dec
lods
jle
testl
les
xor
push
adc
inc
sbb
sti
ja
and
lret
sti
xor
jecxz
loopne
int3
ficomps
fwait
pop
adc
xchg
pop
xchg
aam
repz
mov
out
fdivrp
cmp
insb
xchg
sub
add
mov
adc
or
jmp
dec
sub
sbb
mov
je
sub
xchg
mov
std
call
dec
lods
ds
adc
mov
dec
std
test
mov
aam
pop
jecxz
inc
jae
pop
inc
xchg
mov
aas
push
ret
shll
sub
and
scas
mov
dec
popa
cmpsb
mulb
xchg
std
jnp
sub
push
and
mov
mov
adc
adc
mov
lret
mov
mov
lock
mov
push
lods
aam
outsl
cmpsb
mov
add
mov
inc
insl
cwtl
dec
push
dec
xchg
data16
cmpsb
fstpt
loope
mov
mov
mov
inc
and
loope
cmp
lods
xchg
test
stc
mov
fwait
test
popf
mov
shll
push
je
xchg
fstpl
mov
dec
ljmp
dec
pop
ret
cmc
lods
stos
shlb
out
push
cmp
ljmp
bound
adc
mov
mov
stos
fwait
ret
dec
jge
add
mov
adc
jo
or
xchg
jo
popa
jns
push
loope
cs
jge
or
sbb
xchg
xor
or
inc
xchg
add
inc
pop
mov
sub
adc
and
scas
push
mov
mov
add
pop
jae
dec
mov
inc
out
push
dec
movsb
fildl
jns
sbb
sbbl
out
xchg
repnz
decl
jbe
ja
les
mov
adc
insb
std
in
jnp
add
in
xor
jp
fists
test
cli
add
lds
leave
ja
add
sub
cmpsb
pop
outsb
stos
dec
lcall
sbb
outsl
test
aam
scas
dec
jns
push
xor
adc
iret
fmul
fadd
jne
out
pop
pushf
fildll
hlt
mov
pop
arpl
or
or
pop
xchg
dec
inc
or
mov
insb
xchg
xchg
cmp
int3
repnz
dec
add
daa
lds
in
mov
nop
mov
leave
loope
xchg
movsb
and
enter
xor
push
outsl
jge
adc
jg
testb
inc
xchg
add
lahf
jl
mov
in
push
scas
out
insb
fidivs
loopne
or
lret
not
push
out
cld
inc
pop
movsb
cmp
mov
or
fs
cmp
xchg
les
add
sub
lret
cmp
sti
jo
inc
ret
out
int3
add
das
dec
pop
lahf
mov
cmp
or
xchg
aas
xor
movsl
jb
aad
sub
js
lods
dec
pop
push
sbb
push
jl
loope
mov
sub
pop
ret
outsb
adcb
mov
pop
dec
adc
sbbb
pop
sbb
add
and
das
mov
int
mov
sub
stc
pop
int3
inc
inc
lcall
jbe
int
or
jns
cmp
mov
lock
xchg
mov
or
pop
mov
fs
sbb
sub
mulb
popa
cmp
mov
xchg
test
mov
cmpb
pop
or
add
cmc
xor
jae
xchg
mov
loop
mov
stc
fdivr
mov
add
and
lods
gs
out
inc
ljmp
mov
and
sti
mov
xor
repnz
pop
and
add
js
mov
les
and
xchg
out
repz
mov
data16
sub
popa
mov
pop
sbb
sti
into
pushf
aad
out
jmp
sbb
sbb
mov
or
add
pop
cs
mov
lea
push
ds
lret
mov
je
adc
jae
dec
call
inc
cmpsb
pop
sti
mov
inc
mov
sub
lock
fdivl
sbb
imul
mulb
xchg
xchg
cwtl
or
or
cmp
push
cmp
adc
lret
imul
data16
xchg
mov
es
aam
outsb
ret
and
xor
dec
xchg
sbb
cmpsl
arpl
icebp
mov
nop
movsb
mov
xlat
mov
and
jl
test
int3
lods
push
sub
outsl
pusha
test
pop
gs
aaa
mov
fnstsw
inc
jmp
ljmp
test
subb
push
adc
cmovo
and
mov
mov
lods
pop
xor
jo
test
cld
cmpsl
xchg
ret
rcrl
or
lods
mov
test
add
cwtl
pushf
and
das
or
inc
lods
in
or
xchg
push
sub
mov
sarb
fwait
fs
cmovno
pop
xchg
mov
and
and
jg
ret
leave
sub
xor
bound
iret
jns
mov
xchg
lahf
aad
sub
add
cmc
push
inc
sub
jno
outsb
addr16
nop
jl
adc
pop
mov
sub
jnp
repz
jle
bnd
jmp
pusha
add
movsl
xchg
popa
popf
clc
jmp
cmpsb
cmp
les
in
enter
test
jmp
add
and
jg
sbb
fcom
imul
lock
ja
xchg
adc
xor
aaa
insl
mov
pop
rorl
push
hlt
add
inc
arpl
out
inc
push
ja
or
fdivrs
mov
add
int3
jl
jmp
dec
aaa
push
sarb
in
jecxz
push
leave
pop
test
inc
push
inc
sub
adc
lret
inc
sbb
ret
mov
or
out
jl
and
push
loope
jmp
push
fnstenv
dec
fisttpll
jae
stos
cmp
add
inc
in
dec
lret
xchg
iret
in
jb
iret
enter
daa
arpl
cmp
adc
jno
and
sub
mov
stos
imul
and
cmp
fistpl
mov
add
push
sbb
fdivr
sub
cwtl
dec
jno
rcll
cmp
pop
xchg
clc
mov
mov
faddl
sub
cmp
adc
insl
icebp
xchg
outsl
xchg
mov
sub
in
or
and
int
sub
pop
dec
and
push
inc
mov
mov
mov
jmp
aas
mov
andb
and
mov
lds
push
mov
ss
inc
cmp
js
jecxz
test
lret
or
cmp
lret
rorl
pop
jecxz
into
mov
xchg
in
xor
mov
mov
in
insb
stc
pop
mov
fdivr
data16
push
lods
dec
jecxz
mov
mov
out
cli
sub
jo
jp
shr
add
adc
xor
shlb
xlat
pop
inc
inc
int3
adc
stos
imul
push
imul
test
push
stos
cmp
mov
xlat
test
mov
mov
push
ffree
jmp
mov
rcl
dec
ret
jp
dec
out
popa
inc
adc
cmp
je
stc
xor
push
and
lea
les
xchg
or
dec
movsl
cmpsl
pop
jns
jp
cmp
mov
in
pop
sahf
and
inc
subl
inc
jb
xchg
lods
dec
xchg
pop
cltd
and
jbe
shr
cmp
call
cwtl
into
lcall
insl
add
imul
lret
fdiv
push
mov
xchg
ja
lret
sub
lock
push
das
cmp
mov
fucom
mov
ret
mov
xor
mov
add
dec
lea
cmpsl
bound
mov
popl
push
lods
fsubs
mov
cli
lret
jp
mov
jmp
in
lahf
pop
ljmp
cld
jnp
mov
and
fucom
mov
js
mov
fsubrp
mov
leave
popa
outsl
adc
pop
sbb
shrb
push
mov
mov
push
pop
lds
setg
clc
cltd
pop
xchg
inc
xor
sbb
xchg
fdivrl
aam
test
mov
sbb
sti
sbb
cs
lods
fwait
mov
iret
scas
add
mov
call
adc
add
jnp
ja
std
xchg
mov
inc
mov
pop
push
das
enter
fwait
dec
or
cmp
cmp
dec
sub
xchg
jne
leavew
mov
iret
dec
out
adc
bound
xorb
imul
cmpl
out
sbb
rolb
addr16
jp
clc
mov
movsl
insb
shll
push
jle
inc
sbb
aam
xchg
xor
fucomip
call
cmpsl
les
cltd
ficoms
mov
add
mov
and
imul
fs
dec
imul
push
push
mov
xchg
sbb
xchg
cvttps2pi
fwait
push
test
add
dec
mov
add
or
or
push
sti
call
fcmovbe
dec
les
enter
stos
sbb
loop
in
xchg
rcr
fwait
mov
ss
add
iret
clc
movsb
cmp
push
xchg
pop
lahf
jbe
es
jge
lcallw
aaa
je
loopne
sub
jl
pop
imul
xor
jo
jecxz
scas
sub
jb
push
xchg
jge
mov
cmpsb
jns
push
in
pop
and
mov
andb
cltd
cmp
xor
jno
imul
cmp
add
lea
gs
cli
xor
push
or
das
test
adc
cmc
xor
sbb
cli
imul
pop
aam
and
ss
jp
into
fsubr
inc
sbb
cmpsb
jno
outsb
dec
push
enter
stos
rorb
aas
into
mov
push
sbb
bound
and
pop
gs
mov
int
xchg
adc
out
lret
lcall
jp
mov
xlat
imul
inc
jle
jg
in
je
stos
ret
dec
jle
fs
mov
ss
inc
cmp
xor
inc
mov
lret
add
sub
jb
int3
xchg
into
pushf
cmp
and
dec
cltd
cmp
adcb
stc
inc
xor
shrb
mov
lods
xor
sub
inc
lret
pop
jg
xor
jnp
mov
inc
xor
mull
cmp
loopne
ljmp
push
mov
imul
sbb
mov
sbb
xor
add
jmp
jno
loopne
or
cmp
roll
aad
sub
adc
bound
and
cli
cmp
jge
jns
inc
xchg
popf
or
adc
leave
addr16
pop
sub
adc
test
inc
push
xchg
pop
inc
mov
inc
or
inc
out
aas
cs
repz
cwtl
daa
dec
or
and
fcom
sarl
popa
imulb
mov
cwtl
orb
mov
test
subl
push
mov
jge
lock
mov
das
sbb
pusha
mov
xchg
jne
aam
cmp
ret
inc
outsb
es
xchg
insl
dec
mov
dec
mov
jnp
popa
push
mov
pop
or
cmp
sbb
imul
pop
or
jmp
sub
mov
test
cmp
jecxz
or
push
ficoml
daa
imulb
popa
xchg
inc
stos
popf
pusha
outsb
out
jns
gs
shl
ret
push
ss
paddd
sub
dec
mov
cltd
xchg
pop
jno
and
sub
mov
cmpsl
dec
mov
insb
test
ret
xchg
xchg
test
sbb
jb
ror
testb
mov
push
lret
add
into
test
push
pop
add
or
mov
scas
xchg
lock
mov
mov
int3
pop
adc
inc
dec
sub
inc
xor
mov
add
pop
dec
push
xchg
sbb
mov
call
andb
ret
fs
xchg
xor
cmc
or
sti
xchg
mov
or
cmpsl
addr16
jp
mov
mov
les
ds
and
jle
nop
push
in
lods
mov
cmp
leave
fcomip
mov
xchg
pop
xlat
push
fbstp
ret
inc
mov
addr16
push
dec
loop
popf
testl
push
arpl
aas
and
sbb
sub
scas
jb
loop
add
int
iret
cmc
mov
ret
mov
hlt
xchg
scas
add
clc
xchg
inc
adc
lret
or
into
or
loop
test
adc
mov
rcrb
dec
std
ficoms
add
std
fadd
repnz
leave
inc
in
sti
movsb
lds
mov
mov
dec
sbb
sbb
aaa
xor
dec
add
aas
xchg
jl
gs
dec
jns
push
cmpsl
pop
jo
testb
scas
or
cltd
pop
or
lock
dec
inc
or
cmpsb
cld
leave
cmp
inc
dec
enter
daa
popa
outsb
enter
cli
jno
shl
sub
push
test
call
js
movsl
add
sahf
and
push
or
sbb
jp
fsubr
xchg
test
pop
fiadds
push
pop
icebp
pop
and
add
adc
insl
push
and
xchg
sub
cltd
or
imulb
pusha
jne
ja
xchg
shlb
pop
stc
sub
mov
sbb
jge
mov
jo
and
int
enter
icebp
sub
lcall
orb
insl
sahf
fwait
sbb
dec
xor
pop
cwtl
xchg
jg
lea
mov
fisubrl
adc
mov
xchg
cmp
out
hlt
mov
lret
cmp
jl
xchg
cmp
jns
or
out
into
jg
xchg
cmc
xchg
cmpsl
mov
fldl
adc
cli
flds
dec
lahf
shlb
pop
and
in
mov
inc
andb
sub
in
repz
sti
xor
test
push
push
sbb
ja
loopne
adc
add
icebp
add
cli
repz
daa
into
xchg
das
popa
jg
mov
cmp
cmc
xlat
add
sub
jmp
add
jmp
jp
cs
data16
ja
nop
jp
adc
movsl
or
inc
cmp
fstps
je
push
xchg
jecxz
inc
pop
xchg
pop
scas
fists
mov
jge
dec
scas
sahf
pop
fistpll
push
xchg
pop
in
lea
shl
inc
add
fbstp
iret
orl
frstor
mov
rorl
icebp
in
pop
mov
jle
adc
add
add
lret
mov
xchg
mov
xor
popf
fsubrs
mov
dec
lods
addr16
sbb
rolb
es
dec
lods
dec
subl
mov
cmp
xchg
mov
inc
xlat
std
and
dec
dec
jbe
sub
rolb
std
sub
sub
mov
ds
push
subb
clc
pop
inc
mov
ljmp
sub
xchg
stos
mov
cmp
push
adc
minps
lret
cs
cltd
lret
xor
popa
or
mov
cmovge
pop
ret
test
xchg
ljmp
add
mov
sbb
pop
movsl
add
jmp
jle
xor
out
in
mov
xchg
aas
fldt
mov
cmpsl
insb
mov
int3
subb
icebp
xchg
cmp
sub
icebp
cmp
jne
mov
or
bound
lret
mov
fld
push
xchg
add
adcl
mov
mov
dec
shrb
stos
and
mov
dec
jp
test
pusha
mov
in
lcall
adc
lret
cmp
jge
jae
jns
push
adc
dec
popf
push
cmpsl
movsl
mov
mov
xchg
push
and
or
mov
aad
les
shll
sbb
iret
push
pusha
mov
shrl
loope
aas
arpl
out
inc
pop
mov
or
dec
mov
inc
or
sub
sahf
adc
fidivs
jl
rorb
sarb
fdivrl
sub
nop
jle
xchg
les
fwait
mov
aaa
repnz
clc
or
jb
add
mov
add
xor
push
mov
pushl
xor
scas
call
imul
adc
inc
lcall
in
daa
dec
or
cmpb
cmp
pop
jo
in
mov
ds
imul
and
push
scas
in
test
sub
xor
aad
loope
mov
les
js
pop
or
push
test
push
rorl
push
ja
inc
test
sub
add
mov
xor
mov
push
andb
sbb
or
xchg
out
and
int
mov
out
xchg
sub
jge
pop
enter
lds
push
dec
mov
mov
adc
xor
sarl
test
add
xorb
jg
xor
push
dec
je
cmp
movsl
fs
cmc
jmp
or
add
addr16
test
loop
lret
jo
adc
idivl
mov
or
mov
dec
insl
lea
add
push
outsl
inc
movsl
psrad
repnz
mov
fstl
pushf
das
add
data16
data16
lods
add
pop
out
mov
imul
xlat
out
pop
xchg
dec
sti
loop
repz
jp
test
sub
mov
pop
mov
mov
imul
inc
xor
pop
xchg
repnz
sbb
test
ja
sub
or
jno
popf
jmp
jle
xchg
inc
aad
and
nop
push
dec
inc
dec
add
cmpsb
inc
dec
ret
out
xchg
and
je
mov
jmp
cwtl
xchg
clc
lea
xchg
call
js
pop
xchg
cmp
inc
test
cmpsl
cmpsl
inc
push
jmp
aas
insb
adc
jb
cmp
dec
stc
lods
push
and
xchg
lods
rcr
push
mov
mov
pushf
std
mov
mov
mov
pop
mov
pop
cmp
sbbl
jnp
mov
sub
clc
adc
das
fdivrs
adc
add
ffree
popa
pop
andl
sbbb
jle
fwait
cmpsl
pop
add
pop
icebp
adc
subl
mov
cmc
sub
dec
sub
sbb
add
mov
add
mov
xorl
test
aad
jno
aaa
ljmp
aam
sbb
insl
stos
jnp
pop
out
aas
sahf
setne
aam
in
and
push
add
sbbl
add
mov
jbe
test
xchg
pop
rcrb
lahf
pop
not
ja
orl
lcall
add
add
cmp
xor
or
mov
and
mov
mov
pop
xchg
lds
add
in
cmc
inc
pop
jnp
mov
loope
and
aam
jne
shrl
out
scas
insb
bound
leave
fs
lret
or
andl
pop
sub
pop
std
cs
inc
mov
insb
adc
mov
jle
inc
in
jmp
pusha
outsl
pop
aad
das
jnp
xchg
lods
loopne
jmp
shl
bnd
iret
adcl
mov
popf
inc
icebp
mov
push
xor
lods
mov
and
jno
push
stos
out
cmp
sub
xchg
mov
jo
mov
pop
ret
ljmp
enter
sbb
or
out
insb
inc
xchg
mov
jmp
xor
in
out
sbb
mov
or
add
fdivrs
xor
sub
mov
cmp
outsl
leave
xor
movsb
fistpl
jo
aam
cmp
mov
push
loopne
aaa
mov
xor
add
mov
gs
jl
stc
inc
dec
fnsave
fs
cmpsb
jp
scas
movl
sbb
push
fimuls
cmpsb
add
sti
in
push
mov
andl
lret
jno
adc
sub
lods
push
cmp
fistpll
cmc
pusha
fldenv
shll
adcb
test
xor
call
movsb
inc
push
pop
outsl
movl
pop
xchg
xchg
lock
adc
out
fsubr
push
test
jae
push
outsb
jno
movsl
adc
fstps
cmpb
sbb
mov
and
aaa
push
mov
notl
sub
mov
sub
or
mov
sbb
sahf
loope
push
adcb
popf
mov
fnsave
fidivrs
adc
mov
pop
fsubs
testl
leave
cmp
ja
or
or
into
inc
sbb
lahf
xor
dec
outsl
pop
mov
loop
in
xor
imul
xor
andl
mov
fimull
inc
out
js
cli
neg
leave
xor
xchg
ja
leave
sar
xchg
in
adc
popf
mov
gs
data16
mov
lret
adc
rcll
xlat
pop
leave
repz
jle
sbb
in
xlat
addb
mov
mov
inc
adc
ljmp
nop
xor
loopne
pop
push
sub
lret
je
sbb
cmpsb
stos
dec
fwait
cmp
lea
mov
mov
adc
iret
push
fcmovne
es
pop
sub
mov
inc
cmp
jb
fisubl
and
cmc
mov
div
jmp
std
gs
lahf
cwtl
mov
push
mov
pop
ja
cli
nop
sbb
pop
arpl
xchg
fistpl
pop
and
out
and
push
gs
mov
mov
faddl
ret
lock
les
insl
add
cmp
cmpsl
pop
movsb
scas
mov
jmp
lods
test
aas
mov
xchg
push
mov
addr16
shr
cmp
sub
movsb
add
push
add
rolb
mov
andb
lret
mov
pop
lds
shr
mov
leave
cmp
sbb
bndstx
cmpl
add
adc
dec
out
pop
test
ret
rolb
push
clc
in
ror
shl
ficompl
cli
push
mov
mov
pop
shll
call
int
xor
hlt
or
repz
roll
stc
xchg
mov
das
test
xor
dec
xlat
pop
inc
neg
insl
mov
push
ljmp
stc
imul
out
mov
bound
jg
inc
jb
xchg
xchg
sub
xorl
sub
pop
stc
pop
addr16
sbb
imull
out
jmp
and
pusha
or
pop
xchg
xorb
inc
frstor
pop
push
xchg
mov
popf
insb
pop
sbb
and
stos
std
adc
and
push
pop
imul
scas
fwait
mov
push
fistl
sahf
clc
or
adc
jp
out
inc
pop
out
lcall
mov
inc
sbb
lods
or
mov
loopne
sahf
dec
mov
inc
loopne
int3
je
cmc
pop
addr16
fidivrs
outsl
rolb
mov
cmp
leave
stos
sahf
cmp
push
rcl
dec
jbe
xor
jge
mov
xchg
aaa
jo
jp
hlt
pop
push
jl
add
push
push
movsb
add
add
out
cmpsb
adc
and
and
adc
inc
sbb
mov
jg
in
cmc
or
enter
daa
pop
add
movsb
jno
in
sub
mov
out
ds
test
rcll
push
push
jo
test
inc
sbb
jecxz
fs
loopew
pop
xchg
scas
sarl
out
rolb
pop
push
sbb
loope
or
fcompl
inc
xor
inc
mov
mov
addr16
orb
mov
rcrb
and
pop
push
mov
in
sub
dec
test
xor
lcall
repz
ficompl
xchg
cld
insl
sahf
test
sbb
loop
mov
lods
pop
in
and
mov
enter
pop
pusha
adc
mov
cmp
pop
addr16
aas
and
mov
jbe
fdivs
or
movsl
fs
fcompl
imul
sub
repz
fildl
cld
shll
iret
insb
insb
mov
into
mul
cmp
or
xor
dec
sti
inc
adc
inc
push
les
cmpb
fidivrs
xor
push
inc
imul
sar
ss
mov
sarb
pop
and
mov
inc
fwait
mov
imul
mov
jmp
inc
nop
or
dec
ret
inc
jno
jmp
je
mov
jecxz
ret
sahf
push
inc
lea
lock
lds
jecxz
lock
push
repnz
int
scas
inc
and
inc
inc
push
dec
mov
jb
lods
lds
imul
lods
cmpsb
fcom
js
xor
or
mov
outsb
aaa
xchg
mov
fistpll
in
fwait
add
inc
push
xor
add
push
mov
in
mov
lods
and
das
xchg
pop
sub
sbb
leave
mov
mov
sub
insl
jmp
outsl
fisubl
xchg
movsb
dec
icebp
ret
lods
out
lock
test
adc
mov
xchg
sarb
testl
mov
fmuls
push
leave
fsubrl
test
jg
xchg
out
jo
ljmp
jnp
jo
js
pop
mov
popa
xchg
out
xlat
lds
pop
pop
mov
add
in
xor
inc
pop
mov
mov
push
jl
cmp
xchg
rcl
dec
es
lods
xchg
fwait
stos
pop
aaa
push
push
int3
add
cmp
dec
xor
dec
nop
in
dec
pushf
xchg
sub
inc
mov
and
mov
std
shrb
dec
lret
inc
lea
mov
mov
in
jne
imul
xchg
movsb
loopne
mov
mov
dec
addl
out
clc
movsb
sub
push
mov
inc
test
mov
lods
dec
insb
ljmp
jle
cmp
in
mov
push
adc
mov
mov
jae
inc
jmp
popf
xchg
xor
cmp
sti
push
pop
shlb
stos
jo
sbb
enter
mov
ret
xchg
dec
push
and
pop
iret
jno
loopne
cli
ss
hlt
ret
arpl
scas
leave
or
mov
aam
ficoml
loopne
fwait
hlt
inc
int3
pop
sub
pop
xchg
sarb
push
stc
sub
addr16
lcall
jg
repnz
add
and
add
push
or
cwtl
cld
jge
xor
int3
repz
aaa
das
xchg
mov
add
fnsave
dec
mov
mov
jecxz
pop
inc
mov
and
enter
mov
mov
inc
loop
cmpsb
or
enter
daa
pop
ljmp
scas
fldl
sub
pushf
inc
cmp
mov
and
lahf
xchg
ja
push
sub
test
dec
jle
xor
cmc
push
pop
mov
je
pop
paddb
loope
lahf
push
faddl
and
push
movsb
sbb
push
fstl
test
bsf
or
mov
inc
inc
and
daa
push
shr
int
mov
sub
roll
es
push
push
pop
lods
mov
movsl
cltd
sbb
out
xor
daa
mov
test
dec
add
cmpb
hlt
mov
sahf
loope
mov
mov
ss
xor
fcomp
pop
mov
incb
stc
lret
mov
fcom
outsb
cmp
loopne
divl
int3
into
or
das
cmc
mov
adc
fucom
and
sub
inc
adc
jns
add
cmpsl
cmc
lods
mov
fwait
mov
sub
out
add
pop
icebp
mov
test
in
lahf
popf
arpl
out
lcall
gs
dec
and
jb
pop
pop
std
stos
pop
adc
scas
mov
repz
insb
add
pop
ret
xlat
lods
stos
sub
jmp
mov
adc
push
lods
and
aad
test
out
mov
and
daa
inc
test
pop
fnstcw
xor
push
push
loope
mov
es
ja
pop
movl
adc
in
push
fldt
sar
stos
inc
outsb
fistpll
dec
fcomps
pop
rcll
lods
cmpsb
rol
xor
jnp
mov
adc
push
out
mov
pop
mov
cld
insl
sbb
mov
pop
mov
repnz
or
das
jne
cmp
daa
hlt
out
aam
out
pop
ret
push
cmp
push
insl
rclb
mov
mov
cltd
daa
data16
pop
mov
mov
movsb
mov
mov
movsl
mov
rclb
mov
test
cltd
jmp
insb
fst
mov
clc
dec
movaps
fldenvs
stc
push
pop
sbb
or
push
dec
jmp
jge
inc
psubusw
mov
test
loopne
xor
fdivp
mov
ret
dec
mov
ret
push
cmp
mov
sti
mov
mov
cmp
fnstenv
jmp
sub
movsl
leave
call
sub
rorb
or
xchg
jnp
jle
insb
loopne
mov
mov
in
push
dec
mov
or
mov
cs
dec
jge
clc
jne
ret
or
dec
scas
cld
bound
push
jns
scas
xchg
sub
scas
adc
cmp
mov
mov
addr16
out
mov
mov
ret
jnp
lcall
in
ss
pusha
inc
decl
mov
xchg
es
push
jmp
repz
insl
push
mov
mov
mov
push
stos
jecxz
ljmp
in
lahf
imul
scas
popa
insb
push
adc
iret
shlb
jp
or
sbb
or
inc
addb
push
or
xor
in
sbb
test
xchg
repnz
int3
dec
test
pop
vmovss
rol
and
jnp
mov
sbb
shl
sub
leave
cltd
dec
jle
jl
sub
and
jge
mov
xchg
aaa
out
or
popf
stos
add
xchg
jl
push
ss
sub
stos
push
push
xchg
insb
xor
mov
popa
scas
fs
xchg
and
adc
push
aas
cmpsl
mov
cmpsb
mov
in
ret
pop
enter
pop
daa
pop
push
cmpsb
cmp
fs
cli
dec
sub
push
cmp
out
ds
arpl
daa
lea
and
clc
lahf
mov
insb
push
sti
lret
sub
push
cmp
xor
jl
pop
in
fdivrl
dec
jo
dec
jne
push
inc
add
daa
fdiv
pop
add
inc
cli
outsb
lcall
shrb
fwait
vprotd
mov
xchg
sbb
insl
mov
or
and
lea
les
xor
pop
les
mov
test
push
sbb
cmpsb
inc
sahf
lret
test
xor
and
push
jg
out
mov
int3
daa
mov
inc
mov
jg
cli
adc
sub
stos
daa
fcoms
jno
lret
test
cmp
sub
or
xchg
into
out
nop
popa
cmc
push
lea
outsb
cltd
in
mov
dec
stc
nop
and
xor
sbb
lods
popf
lods
hlt
mov
push
and
lret
pop
xchg
in
or
sti
sahf
scas
loope
push
insb
int3
gs
jp
loopne
inc
dec
pop
sbb
sub
adc
cmpsl
clc
mov
repz
gs
nop
xchg
sbb
xchg
mov
xlat
cmp
inc
add
mov
bound
adc
xchg
nop
sarl
adcb
fldcw
pushl
loop
sarl
imul
sub
pop
pop
inc
mov
sahf
sbb
fistpl
pop
adc
mov
inc
mov
test
call
lock
mov
fcmovbe
push
and
idivb
leave
xor
int
jle
cmc
cmp
cld
cwtl
mov
lret
loope
and
pop
or
mov
pushf
mov
das
push
xchg
mov
ficomps
aam
jne
ret
popf
gs
dec
adc
insl
mov
ljmp
cltd
mov
cld
jl
icebp
jo
jecxz
lds
mov
out
and
and
push
popf
ja
in
shlb
sub
fdivl
dec
in
cmp
not
or
xorl
xchg
insl
arpl
fldenv
outsl
popa
adc
ja
pop
out
aaa
add
adc
xchg
jge
sbb
imul
mov
adcb
ja
fs
mov
dec
sbb
fwait
test
clc
sub
imul
rcl
into
sti
or
dec
mov
or
adc
pushf
add
jo
scas
bound
inc
aaa
cmp
shrl
in
push
fwait
xchg
lret
mov
adc
pop
jae
js
sbb
inc
mov
insl
mov
les
mov
and
out
sub
mov
jns
inc
aas
xchg
testl
adc
dec
sub
andb
test
notl
rorb
adc
sbb
in
pop
jns
fcmovne
sbb
stos
cmp
xchg
stc
arpl
inc
rolb
jae
into
pop
push
loopne
mov
mov
fldl
inc
stos
push
cltd
insl
and
pop
cmp
imul
mov
push
scas
add
out
iret
das
lock
ret
mov
hlt
pop
jmp
inc
es
or
mov
insl
inc
orl
xchg
dec
mov
int3
xor
nop
fisubs
lds
jno
xchg
lret
mov
and
jnp
jnp
adc
push
push
mov
mov
push
sbb
ds
lods
cmpsl
in
or
ljmp
adc
push
stc
jl
xor
adc
inc
fs
or
les
hlt
inc
gs
cmpsb
push
dec
jg
stos
push
sbb
addb
inc
cmp
cmp
sti
fcmovb
cmp
les
movsl
cs
andb
xchg
shl
movsl
push
into
sbb
add
inc
sbb
push
inc
sub
mov
mov
js
mov
imul
fwait
sbb
outsb
std
mov
adc
inc
mov
add
xor
mov
sub
dec
jl
mov
int
add
mov
inc
popf
lahf
lcall
cltd
mov
sbb
sbb
and
test
push
cmp
sbb
sahf
push
mov
cs
mov
fs
dec
adc
jge
ss
xchg
imul
or
xchg
lret
add
push
outsb
add
fs
or
outsb
push
into
shl
sub
xor
xor
xor
outsl
fwait
sbb
loop
sub
adc
mov
add
push
call
mov
cwtl
mov
cli
ret
xor
loope
in
jne
cmp
dec
and
gs
or
arpl
cwtl
fwait
adc
cs
imul
pop
in
xchg
shrl
sbb
rcrb
adc
jl
sbb
mov
dec
mov
mov
jbe
mov
nop
pushf
cmp
dec
fists
inc
stos
scas
push
fldenv
dec
and
loop
leave
cmpsl
popa
lret
lea
aad
inc
sub
pop
adc
adc
inc
and
sub
mov
or
aas
sbb
mov
inc
movsb
cwtl
enter
mov
dec
dec
pop
andb
testb
fdivr
add
sbbl
jg
mov
hlt
jno
mov
and
ret
and
lret
push
add
inc
mov
stos
sub
mov
mov
mov
xchg
outsl
mov
out
dec
cmc
ret
sub
pushf
es
pushf
insl
sahf
mov
cmpsl
pop
dec
add
das
divl
inc
test
dec
mov
adc
lds
out
mov
pop
jecxz
lret
pop
jge
and
test
mov
aaa
xlat
cli
push
adc
push
fstpl
fcmovnbe
clc
mov
mov
xchg
popa
daa
lea
dec
mov
out
rcrl
les
push
xor
add
dec
or
adc
xor
adc
jb
enter
addl
lods
xor
xchg
orl
jo
xchg
mov
aaa
test
cmp
cmp
decl
and
lcall
in
shll
repnz
mov
cs
sub
jle
mov
lret
sarb
fdivrs
jne
lods
jg
test
out
or
into
bound
jge
xchg
ret
xor
or
nop
xchg
sub
inc
mov
addr16
cmpl
insb
sub
movd
inc
insb
in
pop
add
test
xor
out
jmp
or
out
or
push
mov
shr
in
loopne
push
sbb
leave
stos
leave
adc
or
shll
scas
daa
icebp
popf
push
neg
js
or
or
xor
jle
mov
push
push
sub
and
sub
adc
push
xor
and
and
inc
mov
pusha
mov
into
ljmp
xchg
or
push
or
adcb
std
ljmpw
or
jmp
add
test
pop
ljmp
fcoml
xor
insl
push
lds
sahf
cli
jl
icebp
hlt
sub
add
inc
fldenv
xchg
cmp
enter
daa
pop
mov
cmp
aaa
fbstp
mov
mov
mov
pop
movsb
shrl
gs
and
pushf
lock
mov
ja
add
test
xor
std
mov
pop
xor
or
mov
jne
xchg
loope
xor
faddl
pop
sub
pop
push
pusha
outsb
addr16
and
pop
arpl
fcoms
mov
xorb
in
lret
int
orb
push
jbe
negl
xchg
push
push
iret
scas
mov
nop
jge
dec
popa
sahf
adc
faddl
sbb
jg
pop
mov
add
adc
adc
adc
cmp
or
je
cmp
xchg
lret
cmc
rcrl
pop
or
into
mov
mov
xor
imull
inc
adc
loop
addr16
xchg
lea
dec
insb
add
test
data16
lods
imul
scas
jge
cmp
push
cli
cmc
fsubs
or
in
loopne
pop
sti
cld
pop
and
dec
push
inc
gs
add
loopne
decl
pop
adc
adc
lret
push
cmpsb
bnd
sti
xchg
test
int
pushf
hlt
sub
or
xlat
mov
sbb
mov
adc
in
add
sbb
nop
ja
jo
ds
movsb
add
je
rolb
jecxz
lret
stos
dec
repnz
gs
rorl
pop
std
or
dec
xlat
push
push
sub
mov
insl
dec
inc
inc
cmp
aas
es
clc
add
and
mov
shll
mov
cwtl
pop
imul
and
sub
mov
shlb
lret
lock
jg
adc
cwtl
mov
dec
and
mov
subb
push
adc
push
dec
pusha
jecxz
cmpsl
pop
jnp
mov
push
and
lods
fwait
push
inc
mov
xor
stc
mov
add
or
into
test
cwtl
ja
push
mov
push
aad
add
inc
les
xchg
jmp
js
mov
push
inc
pop
sbb
aaa
stos
adc
xchg
xchg
or
dec
push
push
add
psadbw
or
jl
in
mov
lret
rorb
dec
ljmp
xchg
xor
sbb
out
roll
cmp
fwait
dec
mov
loop
fadds
cmpsb
stc
add
in
xor
arpl
rcrl
in
stos
lahf
xchg
push
int
mov
jmp
jnp
dec
xchg
mov
mov
mov
jne
es
jne
aaa
xor
jmp
cmp
xchg
lea
adc
adc
sub
aas
xchg
lcall
fnsave
mov
ror
insb
xchg
icebp
sarl
sarb
sub
pusha
adc
cmpsb
xchg
lahf
fstpl
xchg
add
aad
fisubl
push
pushw
das
bound
push
pop
dec
mov
and
jbe
test
icebp
and
push
cmp
jnp
iret
in
js
ret
sub
loopne
hlt
out
icebp
pop
arpl
sub
mov
push
orl
xchg
imull
sub
fisubrs
mov
sub
cmc
popa
xor
and
mov
push
pop
sbb
data16
jge
ljmp
sub
inc
or
inc
call
dec
ja
lret
push
mov
mov
in
add
xchg
cmp
mov
inc
adcl
js
ja
pop
js
daa
pop
cmpsb
pop
cmp
mov
mov
imul
stc
and
fsub
xor
je
clc
test
ja
mov
ss
ret
pop
pop
mov
js
push
in
or
inc
push
int
loope
push
inc
fdiv
adc
or
sbb
insl
out
sar
xor
pop
sub
jp
out
dec
mov
pop
pop
and
inc
xchg
sbb
jge
pop
inc
and
lcall
pop
mov
fmull
jle
mov
test
jg
sbb
xchg
decl
and
sub
cmp
or
lret
scas
shll
cmp
push
inc
or
cwtl
dec
cmc
mov
cmpsl
xchg
outsl
pop
push
stc
mov
cmp
cmp
dec
les
xor
pop
mov
inc
cli
sub
push
sti
stos
push
sti
outsl
mov
push
loopne
jnp
pop
jns
adc
mov
jle
xchg
sbb
les
mov
repz
ss
inc
mov
sbb
inc
add
xlat
cli
mov
mov
mov
or
pusha
shl
nop
push
icebp
adc
fldl
rclb
mov
adc
add
daa
jecxz
aaa
xchg
lods
lods
adc
arpl
push
movl
popf
adc
jmp
pop
cld
mov
pop
push
inc
fiaddl
or
fidivl
arpl
mov
add
testb
outsb
cwtl
adc
sub
mov
cld
cld
sbb
xor
mov
icebp
mov
jne
cs
icebp
add
mov
add
aam
add
dec
ja
es
ret
push
insl
insb
adc
adc
xchg
pop
cmc
icebp
cmc
mov
dec
mov
pop
sub
and
and
popf
fst
frstor
adc
jno
and
mov
aam
push
cwtl
jmp
pushf
clc
xor
mov
ljmp
pop
adc
inc
out
hlt
sub
xor
jmp
rcrb
cmc
inc
rcrl
fwait
inc
mov
into
dec
dec
push
or
test
pusha
sub
test
fsubs
lahf
or
jb
fwait
xchg
scas
popa
push
test
sub
sarl
xor
inc
or
push
in
aam
xchg
mov
aad
js
movsb
mov
movsb
out
ja
mov
dec
mov
cmp
out
dec
or
int
lods
push
inc
out
enter
mov
fimull
pop
iret
in
push
xlat
adc
sub
cmp
cmpsl
jp
in
popa
mov
ja
insb
add
cmc
jnp
fidivrs
addl
push
pusha
lods
mov
cwtl
xchg
jb
sbb
mov
inc
pop
idivb
test
and
popf
push
call
stos
push
lcall
and
cs
sbb
or
imul
or
in
inc
imul
mov
iret
dec
inc
test
pop
xor
insb
hlt
cmp
insl
arpl
test
sub
mov
adc
shlb
xchg
dec
jbe
int3
idivb
sub
xchg
or
shl
mov
je
scas
leave
jne
mov
bnd
pop
sbb
sbb
adc
ljmp
add
push
pop
dec
out
mov
xor
and
xlat
and
pop
fnstcw
pop
movsb
andps
addr16
adc
mov
xchg
es
pop
cmpsb
arpl
pop
push
jp
pop
pop
inc
cmp
cld
xchg
jno
aad
sub
outsl
cmp
and
ds
and
negl
inc
repz
add
push
mov
stc
and
pop
or
js
jg
pop
dec
addb
or
test
sub
cli
add
mov
sub
stos
les
incb
fnstenv
sbb
push
sarb
xchg
sub
test
pop
shrb
push
add
inc
mov
cld
push
sbb
call
add
dec
mov
lea
mov
out
cmp
popf
adc
repz
cmp
and
stos
lret
pop
ror
cmp
pop
cmp
and
cli
cmc
xchg
and
xchg
mov
or
sub
insb
cwtl
adc
jp
add
mov
lods
cmp
mov
out
sbb
cli
pop
testl
sti
pop
push
cmp
xchg
adc
loopne
or
pop
cwtl
sbb
adc
imul
mov
or
cmp
pop
and
imul
stc
pushf
addr16
aad
push
cs
cs
push
xor
cmpsl
sahf
pop
nop
sub
test
pop
test
jecxz
out
mov
push
lea
call
mov
mov
cli
addr16
in
jge
fistpl
pop
sub
movsb
fldl
imul
xchg
adc
fs
cmp
in
dec
mov
shll
mov
rcll
push
test
inc
std
testb
rclb
xchg
mov
mov
cld
inc
data16
popf
out
insb
mov
sub
rol
inc
das
shrb
jmp
lea
mov
push
fdivr
ret
fldcw
push
insl
push
mov
dec
push
xchg
dec
cmpsl
push
insl
cld
mov
int3
jns
lods
jno
or
jnp
push
and
sarb
inc
loop
shlb
sahf
test
lods
aas
mov
cmp
push
pop
jnp
fstl
mov
xchg
imul
popa
insb
lods
imul
stos
repz
inc
xchg
cltd
popa
in
in
mov
add
xchg
fs
mov
fnstsw
rol
ret
dec
mov
push
das
xchg
inc
cli
sbb
int
shrl
test
or
jl
fwait
fcoms
add
fcoml
jb
xchg
pusha
pop
or
push
sub
mov
xor
pop
pop
or
xchg
dec
jl
mov
pop
js
mov
pop
adc
dec
in
repz
jne
jns
mov
xor
cmpsl
imul
sub
dec
incl
sbbl
pop
sub
xor
fdivrs
mov
aas
es
insb
out
jnp
decl
in
addl
inc
mov
out
xchg
inc
daa
jmp
sub
test
or
cmp
sahf
lock
fstps
push
and
je
mov
imul
lret
stos
push
adc
adc
insb
int
addr16
test
arpl
aaa
push
or
pushf
xchg
pop
inc
jg
mov
sbb
xchg
movsl
bound
pop
mov
push
fdivp
or
xchg
push
imul
xor
repnz
mov
inc
movsb
xor
push
push
cli
adc
jbe
jnp
jge
rcrl
sbb
push
ljmp
es
add
push
dec
push
ss
push
test
jl
jle
jne
mov
add
push
repnz
push
arpl
inc
mov
add
inc
xor
daa
push
sbb
cmp
popf
jno
cmpsb
adc
dec
mov
mov
and
movsl
dec
pop
stos
and
mov
lahf
dec
out
push
sbb
sbb
lds
cmpsl
lock
or
push
push
add
ja
lret
faddl
xchg
sub
icebp
shrb
push
mov
cmp
xor
jecxz
test
adc
sbb
xchg
mov
fnstsw
mov
movsb
or
pop
push
lcall
cmpsb
mov
cmpsb
sahf
stc
xor
test
jmp
pop
mov
shl
push
cmc
fs
jne
mov
fnstcw
cmp
js
lahf
lret
aaa
shll
cmp
xchg
jecxz
xchg
adc
into
pop
or
cmc
dec
or
outsl
pop
les
loop
test
stc
and
mov
adc
add
pop
jmp
lods
and
mov
clc
fs
mov
xor
or
mov
pusha
gs
inc
shl
adc
ret
pop
mov
cmp
das
pop
push
imul
and
sbb
mov
pop
mov
mov
adc
jmp
push
add
add
pop
aad
iret
xchg
or
or
jp
inc
testb
sbbb
jecxz
fistpl
in
out
pop
xchg
pop
ds
inc
pop
fstpl
push
data16
into
fildl
or
scas
mov
inc
adc
add
and
dec
sub
dec
and
mov
shll
testb
sbb
cwtl
mov
test
sub
and
lret
or
nop
mov
mov
sub
andl
push
mov
ret
push
jl
insl
cmp
insb
dec
push
int3
or
push
sub
mov
mov
in
mov
sahf
inc
xchg
and
pop
in
pop
pop
sub
sub
test
mov
loop
push
push
cmp
clc
stos
xchg
notb
sbb
fbld
test
subl
pop
push
xchg
loopne
int3
push
lahf
jg
movlps
add
adc
stc
xor
jb
mov
aam
sahf
dec
pop
pop
test
fbstp
sbb
dec
outsb
roll
pop
xchg
fwait
repz
lret
ss
add
add
stos
shlb
out
stc
or
repz
sti
and
inc
mov
int
mov
sbb
stos
ja
scas
int3
dec
outsl
lret
scas
stc
imul
and
xor
je
bound
sbb
xchg
pop
jns
adc
subl
out
pushf
ljmp
xor
jns
test
push
mov
sub
jnp
in
jle
pushf
jns
outsl
pop
mov
filds
fwait
xchg
sbb
roll
test
push
scas
hlt
pop
popf
movsb
mov
adc
nop
cmpsb
stos
xchg
xor
jne
push
xor
adc
pop
adc
test
or
fadd
jg
and
insb
lods
hlt
iret
hlt
xor
into
faddl
cmp
push
push
fidivl
or
cld
jb
int3
int3
or
ficoms
mov
lods
mov
sbb
add
arpl
inc
push
dec
jae
jbe
or
addr16
insl
mov
push
testl
jl
xchg
mov
cwtl
cmpsb
push
push
std
jne
fnstenv
scas
sahf
cmp
int
push
add
cmp
sub
mov
sub
xchg
nop
add
sub
divb
insl
lea
xor
movsl
push
test
mov
push
in
mov
mov
cwtl
js
xor
mov
pop
into
mull
pop
enter
push
test
loope
xchg
sbb
repnz
fisubrl
adc
mov
mov
andb
sbb
jle
lret
push
add
sub
mov
fwait
lcall
lods
mov
push
sbb
sbb
mov
sbb
mov
es
mov
sbb
rorl
adc
out
mov
fs
negl
aaa
rcrb
call
addr16
cmp
out
repz
call
xchg
cmc
adc
cld
xor
test
stc
fisubrl
adc
cli
aad
je
xchg
popa
lods
pop
int3
cli
mov
pop
jne
shl
xor
in
mov
mov
fcomps
or
pop
sub
adc
out
imul
scas
std
xor
cmp
loope
mov
push
sub
andb
clc
and
xor
insb
fcmovbe
xor
sbb
dec
mov
mov
fnstcw
sub
jecxz
adc
mov
sbb
aam
out
mov
in
adc
and
mov
stos
hlt
inc
pop
xor
clc
xchg
aas
mov
cwtl
imul
xlat
and
add
shl
cmp
mov
cwtl
inc
push
or
test
cmpl
push
lret
jnp
out
pop
pushf
lcall
mov
movsl
mov
sub
aam
add
es
xchg
dec
dec
xchg
add
push
outsl
mov
jp
jnp
inc
jl
mov
rol
and
mulb
pop
jle
rclb
adc
push
aaa
mov
sbb
iret
cmp
cli
sahf
fucom
push
clc
in
xlat
xchg
out
cwtl
ljmp
fs
enter
shll
stc
out
sbb
pop
pop
push
jp
mov
add
lret
daa
mov
xor
pop
out
rcl
cltd
xchg
jle
dec
xchg
adc
arpl
popf
and
fnsave
js
and
push
outsb
icebp
test
add
xorb
xor
or
dec
mov
mov
mov
mov
aad
sub
jb
dec
lahf
out
inc
lods
cltd
mov
mov
add
dec
popa
mov
xor
out
rorl
jns
xor
xchg
mov
aas
and
jnp
sub
sub
jmp
jp
push
cld
mov
cmp
insb
inc
sub
jnp
popl
in
xchg
popf
pusha
jge
jno
gs
mov
jae
out
inc
or
mov
popf
lret
rolb
push
push
add
stos
or
sbb
xchg
inc
imul
inc
push
pop
aad
adc
xchg
imul
jecxz
sbb
inc
arpl
scas
lods
or
xchg
add
inc
jge
out
jmp
cmpsl
xor
mov
push
pop
push
bound
fidivs
push
movsb
lds
cmp
xor
insl
movsl
pop
leave
fimull
movsb
dec
stos
dec
push
cwtl
sbb
jb
call
sbb
jl
jg
cwtl
add
jge
xor
mov
dec
ljmp
xor
lods
scas
jge
and
cmp
add
cmpsb
and
dec
in
adc
pop
enter
daa
push
mov
sti
jno
mov
sub
ja
cmp
adc
push
sbb
and
lahf
lea
scas
test
mov
lahf
aam
inc
jecxz
pop
cmc
loop
js
jbe
pop
pop
subb
iret
loope
dec
add
sub
sub
dec
pop
or
addr16
xorb
insb
sbb
scas
pusha
mov
scas
pop
and
push
flds
imul
push
mov
pop
lcall
mov
sbb
aas
stos
mov
sbbb
cmpsb
mov
rolb
dec
adc
int
ss
xchg
mov
shl
lds
lret
pop
rcll
sbb
outsl
jg
into
and
cmc
fstpt
jp
aad
push
loop
lahf
ret
call
pop
add
subb
add
lods
out
sbb
out
inc
sbb
hlt
push
xor
je
mull
insb
sti
addr16
sti
int
gs
loopne
dec
sbb
mov
pop
imul
imul
sbb
loope
pop
inc
fidivrl
xor
loope
ret
mov
push
xor
cs
jl
sbb
sbb
es
sbb
cld
f2xm1
jecxz
popl
lea
pushf
data16
cmp
adc
and
dec
lods
xor
popf
or
movsl
xlat
inc
inc
inc
sub
inc
in
sub
aas
add
jge
and
test
sarl
push
jae
xchg
add
std
jmp
mov
add
dec
mov
loop
push
lret
inc
cld
lds
lret
ljmp
mov
xor
das
insl
into
inc
mov
filds
aam
push
inc
ret
xchg
adc
loop
pop
insl
or
repnz
inc
mul
cmpsl
push
xor
push
mov
mov
in
enter
or
popf
leave
jo
sub
sub
xor
add
fisttpll
scas
dec
clc
and
xchg
es
aam
popa
mov
test
stos
rclb
outsb
in
add
push
loope
psrlw
mov
pop
shlb
mov
fimull
ds
in
aas
jl
mov
push
sbb
in
shll
dec
or
xchg
std
fwait
push
in
mov
adc
outsl
add
dec
xchg
xor
out
adc
mov
mov
adc
mov
dec
pop
nop
stc
fnsave
mov
lea
push
dec
mov
pop
jp
mov
dec
lods
out
inc
or
cli
jns
inc
std
xchg
test
orl
out
filds
div
or
popf
push
addr16
sarl
aad
cmpsl
outsb
lret
insb
lods
mov
jnp
cld
push
jle
add
in
cs
sbb
xchg
mov
push
dec
inc
dec
adc
jae
push
in
push
xor
call
jo
xchg
cld
mov
and
imul
scas
jns
int
mov
repz
iret
enter
movsl
int
pop
or
mov
arpl
gs
cmp
sub
lcall
pushf
xor
int3
mov
mov
fnstenv
lds
cmpsl
stos
rclb
mov
shlb
push
xchg
push
movsb
aam
fstl
add
jbe
mov
mov
jmp
mov
add
cmp
dec
mov
jge
xor
pop
lods
cmp
adc
outsl
cmp
mov
push
xchg
pop
xchg
inc
dec
sub
addr16
sti
xor
enter
daa
push
sub
sti
hlt
mov
cmp
int3
push
cmp
push
pop
jbe,pt
or
fbld
push
xchg
pop
push
test
scas
fsubs
stc
icebp
xlat
add
mov
js
lock
inc
iret
jnp
cmp
dec
loope
pop
fmull
imul
mov
rclb
inc
inc
out
popl
dec
movsl
orb
sbb
sbb
and
inc
leave
push
fcompl
scas
sub
push
aam
mov
and
pusha
sti
arpl
lock
loop
lock
pop
sbb
pop
adc
mov
mov
xlat
add
adc
dec
and
es
cmp
insl
and
mov
lret
pop
daa
sti
mov
and
or
ficoml
cmc
mov
movsb
ret
outsl
mov
shl
push
jmp
or
ljmp
data16
fisubrs
mov
stos
inc
cli
daa
movsb
sbb
adc
sbb
bound
sti
push
mov
and
add
pop
adc
xchg
adc
dec
sub
repz
adc
sbb
insl
push
xor
jnp
mov
adc
sub
aad
mov
adc
add
das
sbb
fldenv
repz
jecxz
dec
std
mov
fcomps
mov
nopl
push
cmp
dec
cwtl
sbb
fcmovnbe
in
pop
sub
nop
inc
popa
stos
in
aas
loopne
fs
sbb
dec
lea
xor
mov
sbb
mov
std
xchg
decb
mov
push
mov
subl
mov
mov
ret
je
mov
das
dec
or
xchg
aam
jnp
ret
adc
clc
cmc
insl
out
add
inc
jmp
pop
mov
sub
dec
lods
sbb
fists
and
sub
scas
pop
mov
mov
xchg
test
lds
loopne
jl
addr16
outsl
out
mov
xchg
gs
ljmp
mov
push
xchg
jle
scas
mov
dec
xchg
mov
xor
wrmsr
jnp
add
cltd
xchg
xchg
sub
sub
mov
fisttpll
dec
push
pop
mov
or
push
xchg
cltd
sbbb
or
or
jmp
fwait
andb
add
dec
mov
aad
aad
mov
int3
xchg
inc
and
mov
dec
jo
ja
xchg
dec
dec
mov
push
fdivrl
jb
dec
js
bnd
lods
sahf
mov
jg
out
and
bound
cli
xor
cs
out
scas
aas
sub
and
addr16
sub
shlb
sbb
out
outsb
cs
in
das
push
mov
push
fbld
sub
popa
lods
insb
inc
push
imul
mov
sbb
xchg
aad
lahf
stos
out
pushf
xchg
and
adc
imul
sbb
out
int3
adc
inc
scas
iret
daa
jae
ret
insb
pop
inc
mov
inc
arpl
sub
inc
idivl
or
mov
cmp
std
dec
fimull
add
int3
sti
mov
jb
fidivrs
lds
add
mov
adc
enter
pop
sahf
mov
ss
jbe
js
jge
push
xchg
sbb
add
push
or
sahf
add
inc
jl
add
adc
push
adc
xor
ljmp
and
nop
inc
push
bound
mov
es
mov
loop
fmulp
aas
cmp
cmp
mov
jno
push
sub
imulb
ds
loop
movsl
data16
push
jp
data16
lret
sub
test
mov
mov
pop
inc
gs
pop
test
dec
push
enter
je
repz
outsb
adc
andl
pop
mov
sbbb
sbb
xor
mov
shlb
divl
push
mov
sub
sbb
cmp
lcallw
mov
testb
dec
sahf
test
mov
adc
mov
imul
test
mov
jne
bound
push
cld
imul
rcr
jecxz
divl
lret
out
mov
std
insl
or
sbb
cmc
imul
jb
xchg
stos
sub
out
hlt
stc
call
adc
scas
addb
mov
data16
mov
js
out
cwtl
out
pop
xchg
fidivl
ljmp
sti
lds
incb
das
mov
xor
adc
adc
pop
jne
les
test
xchg
fnstcw
inc
sbb
test
push
xlat
je
pushf
sub
inc
enter
sub
mov
jg
je
or
jecxz
inc
inc
and
je
sahf
test
mov
or
cmp
mov
dec
adc
fildl
xor
into
pop
ss
icebp
ror
jl
xchg
jg
cli
jb
sub
add
push
and
out
out
frstor
negb
addr16
mov
test
pop
jl
addl
lret
enter
add
mov
sub
lock
inc
imul
insb
jmp
dec
std
imul
movsb
aad
call
adc
cmpsl
push
push
clc
mov
decl
lods
mov
add
push
movsb
lds
ljmp
pop
ror
push
sbb
test
sbb
mov
fstl
sub
xchg
jge
xchg
movsb
sub
ljmp
icebp
pop
leave
pop
fldcw
inc
push
jecxz
cld
cmp
push
or
sub
addr16
cltd
int3
testb
pcmpeqb
loopne
stos
dec
mov
int
xchg
and
mov
pop
shl
nop
int
ficomps
mov
scas
and
push
push
flds
add
arpl
incl
out
xor
out
or
mov
in
mov
and
add
pop
push
jnp
ja
aad
dec
cmp
inc
or
mov
test
dec
pop
popa
lcall
les
add
loope
fistl
xchg
sbb
subl
out
repnz
sbb
stos
addr16
jp
or
mov
inc
mov
jnp
and
jle
cmp
pusha
dec
insl
cmpsl
ffreep
xchg
pop
xchg
fs
or
pop
cmpsl
mov
jae
push
sbb
mov
sarl
lds
dec
stos
popa
daa
jmp
lds
fs
xchg
push
imul
scas
aas
and
push
addl
xchg
ret
cmp
hlt
sti
in
arpl
into
and
leave
cmp
add
mov
xchg
pop
sbb
int3
js
push
pop
fwait
and
ficomps
and
aas
rorb
mov
leave
aas
adc
movsb
ljmp
jbe
jge
xor
sbb
mov
aaa
fs
cmp
pop
inc
jnp
adc
mov
in
dec
or
push
hlt
jle
xor
inc
sub
sbb
jne
outsl
stos
cmp
push
pop
inc
insb
inc
dec
cmpsb
test
dec
int
cmp
stos
cmp
pop
jno
fisubrs
repz
cmp
nop
ss
cmp
adc
add
subl
mov
mov
test
mov
in
push
dec
js
ljmp
sub
mov
sar
or
mov
std
add
push
loope
and
jmp
push
loop
lods
int
jge
sub
shll
mov
les
push
sub
mov
sti
sbb
ljmp
ss
xor
test
mov
cli
mov
dec
stos
adc
mov
cmp
jecxz
iret
divl
out
add
mov
push
rcll
cmp
stos
stc
or
out
cmc
xor
cld
cmp
out
push
loop
sbb
mov
adcb
test
mov
and
lods
mov
cs
xor
out
cli
lea
test
ror
in
cmp
je
scas
fs
inc
gs
int3
cmp
sbb
pop
push
test
adc
imul
cmpsl
les
mov
xchg
pushf
in
aad
aam
or
xlat
mov
test
mov
imul
nop
aad
mov
rorl
enter
pop
hlt
fsts
ret
imul
xor
mov
or
add
sub
outsb
pop
adc
xor
pop
jno
scas
inc
js
cld
inc
xchg
lods
movsl
aas
push
aaa
insl
jae
jnp
mov
xchg
loopne
sub
jp
pop
jbe
std
loopne
mov
mov
cmp
sbb
inc
mov
mov
mov
mov
mov
aaa
das
or
dec
mov
adc
pop
ret
xor
mov
mov
mov
cmpsl
push
mov
mov
lods
repz
mov
icebp
mov
mov
cli
aam
shlb
aaa
mov
dec
leave
cmpsl
mov
sub
push
in
imul
shrl
xchg
jecxz
shr
lods
inc
popa
divb
pop
stos
lea
out
test
sti
lock
out
add
add
add
aam
inc
mov
jecxz
inc
dec
and
test
cmp
sbb
sub
cmp
jg
leave
sbb
fsubp
leave
push
cli
arpl
cli
je
add
adc
xor
jg
in
cs
loopne
jno
dec
filds
mov
rcrl
ja
test
xor
mov
repz
jne
sahf
cmc
mov
push
ljmp
in
jns
dec
push
xchg
in
push
xor
out
sub
dec
or
popa
jb
mov
xor
push
lock
loop
insb
out
movsb
insl
jnp
jle
ret
xchg
pop
in
pusha
jmp
mov
xchg
aaa
in
jmp
insb
sbb
jae
fs
push
jle
stos
popf
addr16
add
stos
aam
xlat
and
nop
or
loop
imul
scas
mov
fcmovb
adc
cmp
pop
mov
mov
inc
xor
arpl
mov
xchg
or
jle
or
fidivl
loopne
int3
arpl
mov
lds
sbb
in
out
repnz
inc
push
jne
int
aam
and
jle
cwtl
jge
out
jnp
nop
clc
xor
and
pop
or
roll
cmpsl
dec
add
fadd
stc
dec
out
add
in
dec
xor
mov
je
and
xchg
pusha
cmp
push
clc
dec
testl
mov
in
mov
sbb
xor
ficoms
xchg
push
sub
jg
sub
lds
fistpll
movsl
je
inc
and
in
push
or
push
lods
das
imul
lret
xor
mov
pop
xchg
ja
js
xlat
outsb
pop
add
mov
add
fmull
sub
iret
adc
rorl
sbb
sbb
sbb
inc
aas
and
stos
add
push
fsubrs
cmp
loopne
lcall
mov
ds
sbb
or
into
test
fisubrl
xor
xor
xor
inc
fs
ljmp
cmpsb
push
cmp
sahf
and
div
add
lret
or
in
in
cmp
sub
or
test
into
scas
inc
stc
cmc
negl
xor
ret
outsl
push
aaa
cmp
stc
insl
dec
loope
dec
ja
add
clc
xchg
adc
lods
mov
mov
xchg
js
out
add
rolb
in
mov
incb
inc
ret
xor
and
sub
jno
movsl
repz
or
mov
push
lods
movsl
xlat
repnz
cmp
adc
pusha
jmp
cltd
xchg
push
pop
pusha
aad
sub
nop
sub
adc
mov
inc
push
adc
je
cmp
js
rol
lea
jbe
cmp
push
pop
rclb
pop
push
gs
pop
shr
popa
adc
cmpsb
inc
ljmp
inc
mov
cld
aas
mov
in
dec
repnz
into
sarl
adc
lahf
test
cwtl
in
push
mov
add
mov
xorl
lret
cmpsb
test
and
lock
aaa
das
jmp
pop
mov
aam
out
ret
ret
es
xchg
insl
movsb
fadd
dec
xor
sub
mov
lods
mov
fstpt
jo
aas
and
std
add
shlb
aaa
sub
xchg
pop
test
mov
imul
movsb
or
clc
or
pusha
xchg
and
ljmp
int
pop
imul
or
pop
xchg
mov
push
dec
stos
outsl
add
stos
inc
xor
or
sbb
addb
mov
test
cmp
xchg
jae
sbb
inc
rcll
icebp
cmp
popf
loop
add
cltd
cs
incl
icebp
or
in
dec
in
stc
dec
xchg
das
nop
xchg
mov
or
push
fs
jl
stos
ja
add
and
inc
inc
cmp
lret
cld
xor
sbb
cmp
jne
lods
xorb
sbb
bound
lea
lock
xchg
movsl
out
aad
sub
adc
addr16
mov
fidivl
aad
pop
push
das
jnp
pop
push
jle
aas
out
cltd
mov
test
sbb
or
mov
jae
mov
push
inc
dec
mov
cmp
push
xchg
add
mov
repz
or
imul
scas
add
xchg
hlt
adc
es
push
pop
call
xor
out
inc
inc
leave
js
add
insl
inc
clc
dec
pop
fisubrl
dec
xchg
push
leave
int3
dec
pusha
mov
stc
enter
test
lds
add
mov
out
sub
cmpl
sar
jge
xchg
loope
dec
rcr
aaa
loop
mov
add
jmp
jl
call
leave
push
mov
adc
sti
stc
shrl
pop
aam
cmp
add
ret
cwtl
dec
inc
mov
cmpsb
scas
mov
xor
xor
mov
cmp
sub
sub
xchg
push
cmp
xor
hlt
and
dec
lahf
sub
ret
push
filds
jb
movsb
pop
repnz
mov
in
adc
push
pop
mov
mov
aas
push
pop
sub
sbb
and
hlt
repnz
sub
outsb
ds
adc
scas
and
jl
push
adcb
iret
mov
cld
ret
and
test
mov
mov
mov
lcall
les
cmc
insb
sahf
outsb
std
jbe
inc
dec
stos
andb
movsl
jg
mov
mov
fisubs
xor
adc
pop
popf
stos
divl
pop
cmp
adc
cmp
addl
xchg
daa
stos
cmc
mov
or
outsl
xor
mov
and
lock
pop
add
fbld
negb
sti
and
push
pop
out
jp
cli
pause
push
xor
jae
push
sti
shlb
push
gs
es
push
popa
jne
nop
leave
add
hlt
ja
imul
and
mov
movsb
sbb
pop
fwait
loopne
xor
iret
sub
jne
mov
mov
fldl
cs
sahf
aad
sbb
mov
inc
jnp
mov
je
pop
push
jecxz
testl
lea
inc
sbb
mov
repnz
ret
adc
cmc
xor
nop
lods
test
mov
push
inc
xchg
cmc
inc
int
cmp
pop
jl
jb
nop
test
cmp
shlb
lret
mul
or
cwtl
test
mov
shrl
mov
or
orl
xchg
mov
or
das
enter
and
cmpsb
aam
pop
sub
es
insb
insl
mov
loop
dec
aad
mov
test
dec
mov
xchg
lods
dec
and
cwtl
clc
sbbl
fwait
mov
dec
mov
sub
mov
mov
lock
push
jae
xchg
fcmovne
clc
inc
and
cmp
test
lret
stos
imul
out
outsl
hlt
clc
xchg
shll
shrd
add
sti
add
mov
mov
jmp
or
test
rol
xchg
das
add
iret
sbb
out
clc
or
fwait
inc
fwait
cmp
mov
inc
push
sub
mov
clc
jmp
push
test
or
repnz
pop
test
shrl
addr16
aaa
adc
ja
fnsave
inc
iret
je
mov
rorl
inc
dec
add
xchg
jne
pop
out
fisttps
out
lahf
push
ljmp
xchg
jnp
jo
adc
jne
sub
or
dec
jno
or
lea
jnp
popf
push
jle
mov
in
sbb
pop
std
pop
xchg
jmp
adcb
jae
dec
in
push
add
mov
jbe
fists
xchg
jp
mov
icebp
sbb
sub
push
mov
adc
icebp
iret
mov
call
push
fmul
in
mulps
push
and
ss
inc
ja
xchg
ficompl
cli
popa
xchg
pop
aad
int3
cmp
pop
sub
xchg
fimuls
fcoms
rcr
push
mov
pop
cmp
movsb
xchg
test
push
jb
xchg
jbe
mov
jge
sbb
push
cmp
aaa
mov
pop
mov
aad
inc
jl
fcoml
int
mov
popf
cmpsl
mov
jo
addb
push
pop
and
push
and
push
mov
add
push
cmpsb
xor
adc
enter
daa
dec
xchg
jo
cli
mov
movsb
sub
jecxz
cmp
pushf
push
and
ja
and
pop
out
lahf
inc
scas
test
test
in
xor
add
jb
aam
and
sbb
pop
orl
out
fcompl
cmp
outsb
mov
or
rorb
push
dec
subb
shlb
call
mov
and
in
aaa
mov
lcall
xchg
mov
je
lret
rcrl
jae
loop
aam
mov
mov
aad
jne
imul
scas
add
jo
jmp
rcrl
sarl
and
into
jne
xor
test
imul
xchg
in
outsl
psrlq
stc
fcmovnbe
sbb
add
and
push
nop
lods
pop
mov
jnp
js,pn
cli
es
loope
inc
dec
cmpsb
in
jns
pop
sti
addl
movsb
imul
adc
jo
imul
sub
repz
jo
xchg
in
inc
sbb
xchg
push
adc
jo
leave
sub
mov
push
mov
mov
leave
jp
es
nop
loopne
int
push
lea
mov
push
fnstcw
add
andb
jecxz
or
lret
pop
stos
lea
mov
pop
jne
adc
imul
fstpt
dec
fildl
cmpsl
lahf
inc
call
movsb
mov
dec
loopne
and
insl
dec
rcrl
dec
mov
std
aad
ret
cwtl
arpl
sbb
sub
scas
cld
in
lret
test
mov
mov
fidivl
add
das
cmpsl
ja
mov
sub
ret
loopne
shlb
cmpb
ss
sub
dec
mov
mov
pop
adcl
shrb
mov
push
mov
mov
push
add
rcrb
aaa
xor
pop
xor
test
sub
jmp
sub
incl
nop
clc
andb
ljmp
mov
stos
pop
out
in
out
shlb
adc
sbb
lods
ud2
mov
insl
push
test
es
in
mov
in
fucomp
dec
push
dec
dec
test
sti
testl
ds
lahf
or
sbb
fwait
imul
add
iret
xor
xor
mov
fidivs
ds
int
add
lahf
jecxz
pop
repnz
inc
ja
cmp
dec
pop
cmp
mov
inc
and
dec
out
fnstenv
testb
jle
xor
jns
sbb
sub
mov
addr16
or
scas
or
inc
xor
mov
xchg
insb
das
xor
jnp
mov
and
cmpsl
adc
das
fistpll
daa
jo
mov
jmp
lea
jae
and
aam
fsubl
mov
mov
outsb
push
adc
and
xlat
fs
iret
xchg
imul
push
scas
lret
sbb
cmc
adc
dec
iret
add
cmp
pop
push
int3
pop
push
out
daa
pop
sbb
inc
dec
cltd
mov
rcll
add
inc
mov
addr16
fcmove
out
xchg
mov
cmc
int3
and
sbb
orl
shl
sbb
mov
fcmove
sbb
jne
rcll
jge
add
sarl
aaa
pusha
stc
je
and
mov
jl
movsb
decl
cmp
push
xor
xor
mov
daa
scas
xchg
popa
xchg
orb
cmp
cs
test
sbb
cmp
dec
xor
adc
inc
push
xchg
sub
xor
cmp
shlb
movsl
mov
and
lcall
xchg
lahf
jge
lock
xchg
jge
pop
push
inc
mov
pop
sarb
push
xor
loope
push
fmull
sbb
push
adc
outsb
add
rclb
xchg
cmp
dec
cmpb
mov
data16
inc
outsl
sti
push
out
dec
outsl
int
fstpt
scas
daa
jbe
mov
dec
lcall
outsb
mov
aad
orl
sahf
mov
testl
adc
mov
test
loopne
sbb
inc
adc
rcrb
mov
xchg
lods
fmul
push
mov
das
pop
pop
lret
mov
cmp
cmpsl
insb
or
fcmove
pop
ret
cmc
dec
inc
bound
push
es
loop
out
stc
xchg
pminub
sbb
in
fidivl
data16
add
sub
mov
stos
in
in
xor
xor
iret
gs
adc
into
sbb
imul
rorb
xchg
test
inc
sbb
iret
xor
inc
sub
sub
mov
adc
mov
jge,pn
and
insl
pop
pop
nop
mov
andl
fnstenv
pop
je
fwait
pushf
jecxz
arpl
into
mov
lea
or
mov
mov
adc
nop
dec
sbb
scas
fucomi
sub
std
call
cld
inc
add
or
dec
push
mov
cmp
push
imul
push
jae
mov
sub
mov
aas
sahf
cld
repnz
and
repz
dec
lock
scas
inc
das
xchg
lahf
mov
loopne
dec
aam
dec
std
ret
outsl
adcl
pop
mov
adc
daa
xchg
icebp
xor
cmpsl
mov
fyl2x
adc
into
pop
jge
jbe
jne
out
lock
push
ja
test
dec
mov
vorps
sbb
fstpl
sub
mov
icebp
ljmp
xchg
pop
and
out
xor
fmull
push
push
sub
jp
mov
cltd
filds
or
out
xchg
mov
test
mov
mov
rcll
imul
nop
push
add
ljmp
xor
jg
or
mov
ficoms
xchg
sbb
xor
pop
dec
adc
lods
pop
ja
and
inc
std
fildl
mov
mov
lock
dec
shr
adc
bound
sbb
outsb
stos
mov
xorl
aas
out
adc
sub
add
xor
lods
dec
data16
sti
push
mov
leave
lcall
jle
outsl
jl
scas
imul
fistps
dec
xchg
add
jmp
cwtl
gs
mov
push
mov
fwait
popf
add
in
mov
jae
mov
loope
sbb
jno
imul
mov
xchg
pop
movsb
adc
loop
iret
popa
std
pop
ret
xor
cmpsl
xor
mov
arpl
scas
insb
or
push
cmpsb
inc
jne
sbb
dec
and
or
int3
mov
fimuls
pop
push
rclb
cli
mov
add
jns
movsb
mov
fdivl
jge
rcrb
sbb
aaa
pop
fisttpll
pop
hlt
leave
add
stos
jge
mov
dec
stos
xorb
sbb
jo
leave
and
adc
aaa
cs
and
outsb
inc
aaa
sub
cmpsb
cmp
enter
daa
dec
pop
xor
pusha
cli
aas
jno
mov
aad
xlat
cmp
dec
movsl
nop
ja
and
rcrb
pop
loope
test
sti
jle
xor
shl
pop
sub
js
pop
ljmp
push
das
pop
loope
icebp
sti
fdiv
jp
sub
mov
adc
aas
fsubrs
cmp
iret
mov
cmpsb
mov
sbb
and
faddl
icebp
mov
mov
pop
xor
cmpsb
fistl
adc
mov
add
sbb
lahf
das
test
fisubrl
jg
dec
sbb
adc
adc
ss
testl
fmuls
cmpl
dec
insb
fstpt
js
or
lret
cmp
cmc
adc
outsl
int
push
loop
pushf
out
dec
out
xchg
adc
mulb
jnp
push
data16
sub
subb
sub
sar
mov
and
hlt
scas
repnz
dec
movsb
jmp
adc
cli
loopne
imul
in
int
adc
popa
imul
int
repz
stos
clc
xchg
imul
sbb
or
sbb
out
xor
sub
push
mov
rclb
loopne,pn
int
mov
fcoms
adc
inc
mov
insb
fldcw
fs
mov
jb
roll
or
daa
rcl
xor
lret
dec
std
adc
mov
sbb
jp
inc
sbb
inc
push
nop
cmp
jb
lret
into
cmp
out
fcmovnbe
mov
repnz
adc
fsts
mov
jno
mov
ljmp
sbb
pop
mov
mov
outsb
jnp
mov
and
adc
xchg
mov
or
jmp
insl
inc
and
dec
pop
mov
outsb
mov
or
pop
lods
or
icebp
mov
cld
add
and
imul
rol
fimuls
test
push
mov
fldl
or
clc
mov
xchg
push
cmp
ljmp
inc
pop
lret
jne
stos
cmp
out
cwtl
pop
mov
sub
js
add
dec
lods
cltd
push
les
dec
push
mov
bnd
dec
and
or
xchg
sbb
add
in
adc
or
xchg
mov
leave
and
push
add
add
addr16
and
sbb
in
imul
imul
mov
inc
mov
push
mov
dec
in
pop
icebp
inc
xchg
enter
push
nop
jp
lods
pop
stc
jne
iret
jbe
lock
out
cmp
xor
push
jns
ret
out
or
lcall
lods
adc
jp
jp
mov
sbb
cmp
cli
mov
and
es
lock
fistpll
xchg
push
inc
adc
and
roll
dec
jae
movsl
jg
dec
cmp
popf
sub
mov
mov
stos
adc
lret
shrd
jae
adc
add
push
fsubrs
adc
shl
ret
ficomps
mov
cmpsl
lret
arpl
pushf
inc
push
cmp
lahf
daa
pop
push
hlt
xchg
adc
xor
xor
cli
sar
pop
mov
dec
fdivp
push
sub
pop
add
shrb
stos
mov
pop
shl
or
shld
push
pop
out
jbe
movsl
sub
testl
or
int
add
mov
dec
sbb
test
addr16
scas
push
adc
test
pop
cmp
nop
leave
push
out
adc
cmpsb
mov
or
sbb
stos
daa
dec
add
jno
out
sub
dec
dec
cmp
mov
sbb
mov
jno
movsb
jl
push
sub
nop
test
push
jns
xor
fs
sbb
cmp
xchg
xchg
lods
pop
sub
loope
call
add
xor
mov
adc
sbb
mov
mov
pop
mov
and
push
hlt
movsl
xchg
int
loop
sub
es
push
sbb
cmp
sahf
cli
addr16
test
mov
xchg
enter
inc
arpl
xchg
das
clc
push
adc
adc
inc
pop
jmp
lods
sub
popa
rcr
sarb
out
or
test
push
das
ret
test
outsl
lods
fidivl
stc
add
adc
sub
add
lods
data16
adc
lods
or
xchg
push
cli
mov
adc
in
mov
lret
ss
gs
jmp
pop
or
cmp
imul
sbb
repz
into
xchg
jge,pn
sbb
inc
and
sub
scas
out
mov
imul
mov
mov
nop
jno
mov
jo
push
inc
in
cs
mov
pop
jecxz
fistps
aam
loope
push
pop
shr
rol
mov
fstps
dec
lock
dec
mov
pop
inc
add
inc
cmp
leave
jb
inc
inc
dec
inc
jb
and
ds
push
add
sub
lret
cwtl
xchg
ret
mov
popf
insl
andl
xor
sarl
mov
jns
mov
pop
sub
adc
cmp
inc
and
jno
sarb
orl
jge
mov
dec
sbb
cmpsl
dec
imul
loopne
cmp
jne
mov
sbb
mov
mov
inc
rclb
enter
cmpsl
mov
stos
popa
push
jg
ret
or
xchg
pop
aaa
in
ljmp
ss
jbe
dec
stos
daa
jno
out
sti
imul
or
or
sub
filds
in
or
cltd
dec
movsb
data16
test
addr16
cmc
fs
dec
mov
test
out
pop
xchg
add
into
roll
jl
dec
mov
fwait
clc
jle
push
int3
cmpsl
jg
and
ret
iret
lcall
pop
cld
or
out
in
fsts
mov
mov
mov
and
movsb
ja
je
dec
loopne
sub
sub
sub
repz
dec
nop
add
jne
rclb
out
sbb
into
bound
out
outsl
jns
scas
iret
xchg
cmpsl
loopne
adcl
out
jnp
sub
stc
test
stos
pusha
xchg
jp
lods
push
mov
xchg
pop
insb
jo
imul
xlat
jle
std
cltd
in
inc
mov
mov
fwait
mov
sub
sbb
scas
add
jae
dec
add
adc
pop
popf
push
les
push
int
sbb
and
mov
xor
imul
stos
scas
hlt
pop
out
push
pop
sbb
iret
pop
divb
pop
sti
adc
cmpsl
arpl
inc
inc
push
aaa
testl
jae
popf
push
test
in
jmp
xchg
rolb
mov
stos
push
or
sub
movsb
mov
gs
scas
xor
jbe
xor
sahf
sbb
sbb
mov
aaa
popf
xchg
pop
or
pop
mov
xor
dec
mov
push
sub
scas
jo
popa
and
cmp
cmp
add
inc
push
cld
pop
cmpsb
ds
in
sbb
enter
daa
dec
xor
movb
jno
push
adc
repnz
cld
ds
push
sahf
pop
stos
and
lahf
ret
jae
push
and
test
adc
mov
loopne
test
js
inc
repnz
jge
jecxz
inc
inc
je
mov
cmp
sub
cmp
mov
xchg
aad
shl
mov
push
ss
xor
lret
sarl
mov
pushf
pop
push
testl
insl
sub
jp
pop
xor
js
outsl
cmp
shl
sbb
cmc
cmp
popf
and
test
sbbl
cmp
and
mov
loopne
fs
xchg
xor
sbb
ljmp
pop
sub
pop
icebp
mov
jbe
sarl
xchg
lret
test
into
add
mov
mov
mov
outsl
mov
mov
stc
mov
adc
scas
int
cltd
and
data16
dec
lods
hlt
and
mov
sub
xchg
xor
dec
sti
sti
cmp
cmp
rcrb
pop
orb
cmp
adc
pop
int
les
idivl
xchg
icebp
push
xchg
xor
xlat
insb
push
sub
fisubl
push
and
lcall
xchg
add
iret
jbe
inc
ficoml
iret
je
lock
jecxz
add
xlat
cmpl
call
xor
fcompl
and
adc
sub
fstpt
rcrl
jns
inc
sub
test
push
stos
or
ja
divl
hlt
jge
mov
sub
rcll
cmp
std
jno
pusha
cwtl
dec
enter
mov
cmp
cmpsb
fmul
inc
sub
mov
lcall
outsl
adc
das
and
shlb
add
pushf
ffreep
sbb
fbld
add
push
insl
push
lcall
dec
pop
dec
mov
mov
xchg
lods
loopne
cs
inc
mov
mov
rcl
push
shlb
lret
and
test
test
push
inc
push
pop
fisttpll
psubsb
jl
imul
jae
stos
push
jp
out
pop
imul
push
jecxz
push
ja
stc
lcall
or
jbe
stc
xchg
jns
dec
repz
pusha
xchg
pop
sbb
mov
or
pop
cmpsl
fwait
daa
pushf
addr16
outsl
fimuls
add
sub
ds
jg
lret
or
pushf
icebp
xchg
or
mov
fisubs
daa
dec
rcll
inc
ret
mov
cld
push
dec
dec
jae
sbb
cmp
out
cli
sub
leave
movsl
sub
xchg
jb
adc
loopne
adc
rcrb
push
adc
jp
xchg
mov
or
fcomi
jnp
popa
add
in
int3
xchg
pusha
xor
xchg
cld
shll
adc
lods
jae
xor
push
shr
mov
mov
or
out
stos
stc
lret
jge
ja
insb
dec
and
scas
push
push
mov
adc
clc
mov
xor
hlt
push
mov
arpl
cs
pop
test
sti
push
repnz
ficompl
das
jae
rolb
neg
aaa
adc
shlb
mov
pop
mov
movsb
inc
and
std
cmp
xor
jge
push
adc
lods
add
aaa
pop
and
or
lcall
or
xchg
push
or
lahf
xor
sbb
aad
and
jecxz
cmp
js
test
inc
in
xchg
cmpsb
shll
add
enter
daa
dec
loope
cmp
sbb
jno
or
loope
mov
xchg
popa
movsl
movsl
test
in
add
lahf
loop
cmpsb
push
rcll
add
imul
mov
lds
js
xorl
mov
jno
mov
jbe
sub
sub
nop
movsb
sbb
fadds
aas
mov
inc
orb
push
sbb
test
mov
sub
and
push
cli
iret
jmp
sub
push
fcompl
movb
aas
je
sahf
inc
aad
test
filds
mov
mov
lret
jne
xchg
fs
jge
adc
mov
ss
imulb
mov
or
mov
cmp
in
or
dec
into
in
sbb
xor
jns
outsl
push
sbb
adc
fwait
stc
outsb
bound
add
sarl
fstpt
xrelease
aad
sub
call
xor
mov
nop
fbstp
jl
or
xchg
xchg
loopne
sub
pop
dec
testb
pop
push
imul
push
repz
sub
mov
sti
sbb
mov
int3
sub
mov
shrl
or
cltd
aad
fcoml
dec
jnp,pn
inc
in
push
divb
imul
push
lea
in
call
mov
ret
sbb
dec
xchg
enter
xor
out
inc
mov
xor
aad
aas
push
lods
lock
fsubr
dec
xor
mov
shll
lcall
bound
mov
push
adcl
mov
jp
cmp
lock
das
add
mov
mov
or
sbbl
cmc
lods
xor
adc
shll
xchg
test
icebp
mov
cmpb
ljmp
cmp
pop
repnz
jne
cmp
adc
ljmp
mov
mov
pushf
fnsave
fwait
inc
xchg
fstpt
icebp
popa
scas
dec
stos
pop
int3
scas
mov
add
pop
mov
push
mov
cld
movsb
add
pop
lret
cltd
mov
jecxz
mov
sti
add
pop
int
test
jbe
xchg
mov
shl
mov
or
sti
xchg
fwait
push
jge
push
adc
stc
add
push
fwait
ljmp
or
or
jecxz
in
mov
xchg
pop
loope
mov
icebp
test
cltd
ja
xlat
in
dec
inc
pop
pop
loopne
dec
lcall
push
xor
jne
add
mov
mov
std
bound
jns
inc
pop
xchg
cmp
lret
inc
mov
sub
out
xor
addr16
xor
in
adc
jnp
cmp
jle
pop
and
mov
pusha
shll
xor
fs
icebp
jae
bound
push
xchg
je
popf
lahf
movsb
cmpb
scas
cli
stos
insb
test
out
pop
inc
movsl
imul
inc
scas
mov
movsb
lret
adc
pop
ret
jo
imul
arpl
inc
inc
pop
aas
or
push
cmp
inc
jno
fimull
push
xchg
addr16
int3
mov
mov
stc
mov
repz
mov
in
push
repnz
sbb
movsb
int
pop
push
dec
popf
or
test
sub
push
cmp
or
jnp
pop
dec
jmp
dec
addr16
int
out
mov
xor
js
int3
scas
icebp
cmp
cmp
jbe
push
push
loop
inc
jae
sbb
call
push
stos
cmp
inc
jno
je
andl
inc
ds
xchg
mov
push
lahf
add
push
movsb
cmp
test
daa
pop
scas
xor
or
pop
leave
pusha
pop
js
pop
popf
pop
sti
insb
pop
push
and
xor
mov
out
outsb
repz
mov
shrb
inc
data16
jbe
push
and
mov
das
mov
lea
mov
int
sbb
sub
pushf
sbbb
repnz
mov
mov
sahf
jecxz
loopne
cmc
mov
jnp
sub
aam
mov
mov
sarb
xchg
ss
mov
fdivs
sbb
ljmp
shll
or
mulb
xor
jge
outsl
dec
push
mov
movsl
jp
stc
and
mov
add
in
jb
ret
mov
out
inc
mov
pop
subl
fwait
xor
gs
das
mov
mov
mov
adc
dec
jecxz
leave
add
repz
xchg
ja
les
notb
xlat
ljmp
mov
insb
or
sub
cs
sti
sbb
rolb
sbb
addl
jne
flds
adc
lock
push
fisttpll
lea
dec
xor
xor
jnp
cmpsl
les
adc
adc
mov
and
flds
pop
sub
cmovne
mov
lock
mov
movsb
jb
out
mov
and
add
shl
and
divb
jns
cwtl
lds
add
subl
jle
lret
push
mov
mov
outsb
insl
lock
mov
mov
jae
aam
into
inc
ret
cmp
and
push
dec
subl
subb
dec
ret
icebp
mov
daa
outsl
pop
mov
xor
or
adc
mov
or
jo
test
std
push
enter
faddl
test
ljmp
or
stos
hlt
xlat
or
and
test
ret
push
cltd
mov
ret
add
sbb
xor
adc
xchg
jne
xchg
lcall
shll
push
sbb
jo
mov
rorl
out
or
push
test
push
push
mov
jno
mov
pop
or
jl
imul
test
add
xchg
sbb
pop
mov
mov
pop
push
mov
ja
dec
bound
adc
es
ficompl
mov
adc
shll
mov
mov
jns
push
cwtl
xchg
or
jb
decb
out
andl
or
in
addr16
pop
jp
jg
mov
aam
insb
mov
fidivrs
fmuls
mov
sbb
roll
xchg
pusha
pop
stos
pandn
ja
xchg
mov
mov
inc
iret
out
jae
aam
push
pop
outsl
push
popf
push
mov
mov
xor
stos
das
dec
sbb
add
adc
hlt
jg
adc
mov
cmp
call
pop
mov
mov
jne
pop
jmp
sbb
mov
sbb
pop
mov
int3
cmpsb
xchg
pop
jno
push
fidivrs
sahf
lds
push
rclb
mov
leave
in
add
push
fwait
mov
jbe
xchg
aad
xchg
mov
sbb
pop
shlb
fcmovbe
push
add
btcl
dec
pop
loope
shlb
cli
jo
pop
cwtl
scas
shlb
daa
cmp
pop
mov
sbb
ds
add
in
iret
push
jg
or
test
pop
pop
mov
ret
push
sub
gs
cmp
jb,pn
sbb
movsl
mov
and
or
lahf
and
push
ja
mov
pop
lret
xchg
test
mov
pop
lock
pop
cmp
pop
push
movsb
inc
loope
sub
fmull
sub
dec
xor
push
jae
adc
xchg
cli
subb
xor
mov
mov
xchg
pushf
sub
jmp
hlt
lahf
js
nop
add
pop
mov
lock
dec
mov
mov
jno
jl
sub
decb
mov
mov
sbb
call
iret
enter
popl
fdivs
push
xor
test
pop
add
cmp
data16
cli
add
into
stos
jbe
cmc
imulb
jmp
sub
loop
xor
stc
fsub
jbe
outsb
aaa
dec
add
in
data16
lods
test
push
xor
daa
fidivrl
xor
adc
in
data16
dec
xor
inc
and
gs
shl
mov
pop
mov
adc
sbb
aam
mov
add
bound
pop
mov
and
sub
dec
mov
pop
cmp
jmp
loop
iret
flds
nop
stos
dec
in
popl
fnstcw
cmp
incl
add
out
cld
adc
mov
stc
pop
pop
and
adc
or
fisttpl
lcall
iret
sahf
add
inc
arpl
addr16
push
xor
into
cmp
dec
and
mov
in
mov
idiv
jb
std
data16
adc
mov
jo
add
test
lret
aad
mov
mov
mov
out
lock
mov
sub
aam
in
ret
leave
pop
fldenv
mov
fs
push
gs
cmpsl
inc
cmp
dec
icebp
cmp
add
and
xor
aaa
inc
mov
xor
loopne
repnz
mov
test
cmpsb
mov
aaa
neg
add
clc
pop
jo
xchg
pop
dec
sub
aad
sahf
popa
fcompl
pop
and
out
xchg
sub
je
xor
movsb
adc
cmp
push
xor
xchg
int
mov
jno
dec
sub
lods
test
dec
lds
cmp
fld
or
mov
or
add
mov
mov
or
movsb
in
and
xor
mov
std
gs
nopl
ja
dec
jne
lods
add
mov
mov
cmp
jne
lds
out
xchg
imul
mov
xchg
in
lea
outsl
out
shll
inc
orl
cmpsl
mov
outsb
mov
fdivl
jnp
cmp
aam
mov
pusha
testl
icebp
jmp
fisubrl
sub
mov
push
sbb
clc
popf
in
adc
mov
leave
orl
ret
sbb
lahf
arpl
call
push
cmp
cmp
fwait
pop
push
ret
sti
pop
xlat
mov
nop
arpl
mov
or
dec
fisubrl
outsl
or
pop
mov
int3
xchg
inc
repz
mov
movsl
cli
lds
dec
data16
mov
divl
clc
movsb
jecxz
jg
ljmp
jge
pop
lcall
out
pusha
or
xchg
sbb
negb
jl
dec
call
push
mov
call
jo
sbbl
xchg
mov
inc
xchg
into
ret
imul
add
scas
daa
inc
or
cmp
aam
sub
jg
cmp
movsb
and
mov
js
push
dec
sbb
test
cmp
push
in
dec
mov
pop
inc
pop
js
shll
psubusb
out
pop
fdiv
out
sub
andb
mov
fidivrs
popa
popa
and
inc
jg
sbb
add
and
cmc
vcvtps2dq
push
sub
add
lcall
jno
insb
iret
repz
mov
test
xchg
sbbb
into
jg
aas
es
test
mov
sbb
fs
in
adc
mov
fwait
cmp
in
add
push
loope
rcl
cmpl
ror
ljmp
in
add
loop
loop
and
stc
xchg
lcall
aad
sub
insb
pop
lods
nop
loopne
mov
lock
clc
cmp
xchg
xor
sub
hlt
sti
stc
hlt
arpl
in
mov
fcoml
lock
cmpsl
inc
ficoms
pop
xchg
imul
xchg
sub
iret
mov
adc
insb
or
xlat
push
dec
push
mov
ret
jmp
mov
xor
nop
mov
mov
lahf
fptan
insb
xor
jecxz
cmp
jecxz
cmp
call
shrl
pop
or
imul
aaa
jnp
pop
jb
push
inc
inc
xor
inc
ror
aas
repz
jb
mov
mov
rcll
or
cwtl
cmp
icebp
mov
cmpsl
lcall
cmpsl
xchg
cld
xchg
enter
and
fistpl
das
lahf
mov
mov
loope
jp
lret
dec
out
pop
adc
cltd
insl
stos
cmp
push
cmpsl
inc
cmp
mov
adc
mov
into
data16
or
mov
dec
frstor
mov
in
iret
push
mov
ret
mov
jge
dec
mov
xchg
cwtl
fisttpl
dec
xchg
and
lcall
rolb
out
ljmp
push
dec
dec
jns
add
jle
pusha
mov
add
mov
dec
xchg
push
dec
xor
xchg
call
shl
mov
jl
jecxz
cmp
sti
inc
enter
in
add
fs
xor
adc
in
out
mov
mov
mov
mov
lret
ja
lret
lahf
test
mov
mov
lahf
push
jne
mov
aad
jbe
mov
adc
jae
xchg
sahf
xchg
ret
daa
mov
int3
je
sub
loopne
push
cmpsb
cwtl
mov
mov
or
jnp
pusha
adc
mov
pusha
xchg
je
fbstp
or
jmp
in
inc
jae
test
popf
adc
pop
mov
or
and
pop
popf
sbb
or
push
push
andb
movsl
hlt
iret
cli
sub
pop
push
pusha
dec
hlt
jg
cwtl
arpl
stc
xchg
or
mov
inc
out
jnp
fisubl
into
xchg
insb
cwtl
jae
jl
lcall
push
jbe
int
dec
mov
dec
dec
inc
leave
rol
inc
movsb
outsb
enter
mov
cmp
call
fnsave
pop
jecxz
mov
add
mov
sub
fistps
cltd
arpl
mov
or
sbb
sahf
cmp
movsb
dec
inc
and
test
popf
sarb
inc
int
cmp
jae
jno
or
sub
insb
push
cmp
mov
pusha
out
movsl
rol
and
and
sbb
dec
lods
add
cmp
scas
lret
pop
pop
mov
js
push
cmp
push
mov
std
fsubl
jnp
outsb
sbb
cwtl
adc
cmp
outsb
xor
xor
cld
push
pop
and
xchg
sbb
ret
sub
test
lcall
cmp
sbb
sahf
int3
pop
inc
test
loope
jg
dec
mov
mov
mov
adc
pop
ss
adc
cmpsl
dec
sbb
daa
cld
aaa
lret
add
imul
lcall
push
repz
test
jno
out
dec
loop
inc
sbb
dec
cmc
dec
adc
aaa
xor
fs
pushw
ficompl
lods
ja
orb
lcall
aad
loope
cmp
push
sti
test
decb
sub
ret
loopne
xchg
mov
push
mov
imul
fimull
repz
xchg
rcrb
test
lret
mov
pop
sub
xchg
mov
insl
adc
jmp
mov
in
aad
fsts
dec
stos
mov
inc
cmp
mov
sub
and
mov
out
pop
lea
xchg
lods
add
jae
sbb
pop
dec
jb
pop
push
pop
adc
xchg
aas
xchg
movb
add
mov
adcb
cwtl
notb
xor
out
xor
dec
jns
lret
imul
mov
pop
shl
mov
sbb
cwtl
mov
aam
push
dec
ret
out
and
iret
loope
xchg
loopne
dec
cld
out
cmpsl
inc
mov
mov
lods
notl
xchg
mov
inc
inc
and
outsb
push
rolb
mov
test
jno
mov
mov
push
fstl
sar
xchg
xchg
mov
ljmp
adc
cmp
dec
mov
xchg
xchg
pop
aam
sub
punpckldq
dec
add
mov
xor
nop
shll
scas
inc
dec
divb
test
je
xchg
mov
mov
or
lret
adc
pop
add
ret
lcall
inc
xor
sub
in
push
out
xchg
xchg
sahf
mov
ficompl
jle
jns
test
ss
xchg
add
inc
mov
in
mov
daa
xor
dec
loop
jle
push
data16
push
push
arpl
inc
add
and
jmp
subl
jg
jmp
bound
fstpt
movsl
cld
push
jp
movsl
into
mov
pop
mov
jnp
dec
cltd
jle
mov
pusha
sub
push
inc
xchg
sbb
jmp
lock
or
popf
cmp
xor
push
and
inc
jno
ret
dec
mov
popf
rcl
inc
xchg
movsl
push
leave
imul
iret
pop
inc
sahf
ret
and
rorl
push
arpl
scas
or
inc
lret
movsb
inc
insl
jo
ficompl
cmpsl
or
addr16
loop
movsb
fisubs
dec
lds
div
shr
in
popa
mov
leave
dec
movsl
pusha
movsb
stc
add
mov
xchg
jge
push
cmpsb
sbb
aaa
pop
mov
or
das
inc
jl
icebp
inc
movsb
push
jnp
or
in
sbb
lods
xchg
cmp
hlt
rclb
in
inc
scas
iret
fsubs
test
enter
daa
inc
adc
jno
popa
in
sub
xor
sbbl
enter
hlt
mov
mov
test
push
jg
xor
lods
pop
jb
adc
mov
js
jp
pop
imull
pop
loope
lcall
mov
iret
fistl
pop
das
or
imul
mov
test
leave
and
push
or
outsb
sub
mov
inc
lcall
adc
sbb
insb
popa
sahf
outsl
xchg
loopne
adc
lahf
orb
jg
pop
dec
mov
push
mov
orps
adcl
bound
adc
cmp
bound
dec
mul
inc
adc
or
aas
cmp
shrb
into
push
scas
cmp
dec
sub
fwait
push
out
loop
cwtl
push
stc
add
mov
add
ficoml
lods
pop
sbb
pop
or
out
shl
and
fbstp
lods
int
in
cmpsl
daa
fdivr
push
enter
mov
insb
loopne
lahf
imul
push
je
fcomip
jne
rep
cmp
iret
mov
cmp
out
mov
repnz
mov
sbb
mov
aad
adc
dec
or
and
fldenv
adc
jo
jmp
jmp
push
test
sub
gs
jae
jne
outsl
push
cli
dec
pop
jecxz
fistl
push
fiaddl
ds
inc
neg
adc
xor
test
push
cwtl
dec
xchg
int3
and
mov
xor
xchg
fs
pop
movsb
sub
divb
call
addl
bound
mov
mov
lods
add
das
pop
jl
mov
dec
fstl
aam
and
jbe
nop
adc
js
testl
push
icebp
rcrl
bound
mov
jecxz
mov
and
inc
scas
std
pop
sti
pop
rcrb
les
mov
popa
enter
popa
push
aam
fstsw
pop
clc
rolb
xchg
push
xchg
cs
jp
and
pop
stos
mov
sub
imul
add
shrl
cltd
into
mov
xor
or
pusha
xchg
jl
dec
pop
xchg
fldt
insb
lods
sbb
fwait
popf
or
nop
pop
fwait
inc
pop
stos
push
inc
sub
add
imull
xor
push
in
jbe
mov
jbe
mov
inc
lds
inc
push
lds
or
mov
mov
push
jne
das
xchg
mov
ret
sub
xor
or
aaa
mov
xchg
xor
addl
aaa
pushf
sub
jl
movsb
in
jp
les
pop
int3
shrl
jnp
test
in
push
cld
pusha
enter
je
cmp
jmp
sti
add
aad
movsb
push
gs
popf
bound
mov
xchg
pop
and
nop
negb
fs
scas
test
aad
adc
nop
iret
mov
into
enter
repnz
adc
and
xlat
sbb
push
in
call
popf
xchg
sbb
jns
sub
int3
mov
rolb
int
add
repnz
leave
shrl
test
adc
mov
jle
syscall
mov
or
xor
or
mov
push
pop
dec
or
jo
outsb
in
scas
dec
jp
and
or
stos
outsb
ret
push
inc
lret
ds
cmpsb
sarl
in
imul
enter
daa
inc
fstpt
cmp
pop
push
jno
fiadds
cmp
inc
cwtl
movsl
iret
int
and
movsl
lods
push
ret
ja
test
pop
sbb
xor
ds
mov
vmread
ret
cmpl
sub
xchg
clc
lret
test
inc
outsb
loop
inc
adc
repnz
cmpb
sbb
lea
push
xor
or
stc
int
popf
lea
jl
inc
pop
lods
mov
lcall
jne
sub
addl
cwtl
mov
jg,pn
outsb
iret
mov
adc
mov
add
xchg
mov
or
sahf
ss
xor
cmp
sbb
or
jbe
rcll
mov
into
mov
into
ss
insl
cmc
adc
jo
idivb
pop
loop
and
stc
mov
xchg
add
adc
inc
mov
mov
mov
and
cli
push
xlat
push
xor
mov
sti
push
fcoms
dec
pop
pop
gs
adc
loopne
shlb
add
daa
adc
mov
les
gs
repz
sbb
out
out
sub
mov
ret
ds
add
pop
fisttpl
xor
pop
dec
push
mov
je
xor
jecxz
jo
in
cmp
lea
movsb
arpl
stos
notb
es
addr16
je
dec
or
fcmovnb
xchg
inc
ficompl
inc
adc
shrb
jb
jo
dec
std
dec
mov
sarl
lock
pop
std
add
cwtl
insb
and
mov
decl
sbb
cltd
call
mov
xorb
data16
cmp
std
mov
push
test
mov
es
rcr
pop
ror
dec
repnz
iret
mov
cwtl
ljmp
xchg
or
mov
push
scas
les
lods
nop
arpl
sub
adc
mov
push
mov
loope
push
xchg
push
xor
lahf
and
clc
or
lret
xchg
push
mov
lods
popa
cmp
add
into
jg
stos
lahf
sub
adc
mov
mov
xor
test
cltd
add
fimuls
xchg
popf
shrb
jmp
push
sbb
jae
sar
into
leave
or
sub
fwait
jo
lret
or
add
clc
call
out
scas
or
aad
in
push
cs
xor
repz
sti
jnp
ja
bound
inc
jecxz
inc
mov
add
mov
and
adc
into
pop
aas
jns
gs
or
sub
push
inc
mov
mov
adc
addr16
jp
xchg
stc
mov
arpl
jnp
imul
pusha
arpl
mov
xchg
shll
ret
lea
