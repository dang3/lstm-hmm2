call
mov
push
mov
inc
dec
dec
cmp
jp
mov
mov
mov
or
add
add
out
add
mov
or
inc
dec
dec
dec
lea
and
dec
and
jl
inc
dec
inc
mov
xorl
cmp
clc
jo
inc
inc
inc
daa
add
pop
fcmovnu
mov
js
mov
xor
or
jmp
inc
dec
mov
inc
inc
inc
push
call
dec
sub
jp
mov
cmp
jl
mov
mov
idivl
inc
mov
inc
lea
out
jg
js
lock
cmp
jbe
dec
mov
jl
sbb
push
mov
pop
sbb
ja
inc
inc
mov
and
outsl
outsl
cmp
mov
pop
pop
push
divb
dec
ret
nop
push
mov
push
orl
lcall
ret
jmp
mov
pop
int3
enter
push
sarb
mov
push
sbb
movsb
push
sbb
pushf
cwtl
xchg
sbb
aam
fmull
fists
call
mov
insl
loope
add
dec
xor
and
clc
enter
jecxz
ret
loop
fs
mov
lea
mov
cmp
jno
inc
cmp
add
sub
outsb
jecxz
and
ja
inc
or
cli
mov
or
in
mov
cmpsb
push
pop
sahf
sbb
jg
push
outsl
pop
lea
inc
dec
push
outsl
aas
incb
inc
mov
push
xor
cmp
jne
ja
outsl
out
dec
mov
adc
fmuls
sbb
frstpm(287
inc
add
jp
xchg
fldcw
mov
mov
pop
jle
lcall
in
dec
adc
jge
pop
mov
dec
mov
jbe
fidivrl
pop
mov
or
dec
dec
movl
clc
pop
fdivl
inc
mov
push
add
and
inc
jne
shrl
cmp
inc
lea
jl
dec
cmp
sbb
add
or
mov
fldt
mov
mov
adc
xor
mull
dec
inc
inc
pop
mov
mov
or
inc
loopne
inc
hlt
fcmovu
hlt
out
pop
incb
adc
mov
add
in
jp
mov
out
fisttpl
mov
faddl
pop
loope
sti
gs
sub
pop
dec
inc
inc
inc
push
xchg
dec
mov
sub
stc
jmp
cs
xchg
sbb
fistl
mov
dec
dec
dec
fcomp
hlt
movb
xchg
adc
stos
mov
lret
jg
nop
call
je
jae
repnz
out
jns
push
out
lock
push
lsl
cmp
jbe
cmp
dec
cmp
xor
adc
insb
mov
xorl
add
add
out
dec
imul
jmp
std
inc
cmp
cmp
inc
mov
out
jle
in
fwait
loop
adc
int
mov
ss
mov
cmc
sub
rcll
pop
xor
or
mov
ja
cmp
mov
pop
mov
shl
adc
cmc
push
mov
fdivrp
jg
fdivrs
mov
xchg
mov
jbe
add
sub
sti
idivb
pop
pop
movsb
fdivs
push
dec
mov
je
pop
mov
xor
into
std
jbe
dec
aaa
dec
std
outsb
lds
bound
jge
outsb
fistps
pop
mov
mov
lds
lcall
jg
mov
jmp
add
cmc
dec
mov
mov
mov
dec
mov
jbe
xchg
popf
add
xor
fstp
mov
add
mov
out
jbe
pop
mov
sub
pop
test
lcall
mov
dec
sub
fs
aaa
addl
mov
mov
loop
mov
push
mov
fsubr
test
inc
inc
subb
adc
arpl
fdiv
sub
jb
pop
xlat
sub
jb
mov
divl
push
mov
xor
sbb
sbb
inc
adc
or
mov
pop
mov
jg
test
sbb
vmovaps
dec
dec
dec
ss
pop
pop
fadd
mov
sub
test
pop
sbb
xchg
xor
imul
pop
stc
lea
or
dec
cmp
cli
mov
adc
repnz
mov
inc
xor
dec
inc
mov
mov
jle
xor
mov
jg
lss
mov
xor
pop
add
jp
mov
outsb
fistpl
dec
and
arpl
mov
mov
insb
fstps
or
repnz
insl
jae
imulb
dec
popa
faddp
in
lods
push
subb
and
into
push
jbe
jbe
and
imul
mov
sbb
insl
xchg
int
cmpsb
addr16
mov
lea
repnz
repnz
pop
fst
fcmovnb
xchg
cmp
nop
sbb
divb
cmpsb
insb
adc
psllw
dec
or
notb
push
std
pop
lds
xchg
lahf
dec
and
add
loop
or
and
enter
testb
fdiv
das
mov
mov
mov
push
adc
or
xchg
fdivl
mov
into
adc
mov
cli
jg
in
cmp
mov
dec
xor
xorl
cld
jg
and
pop
and
inc
push
loop
pop
ret
lea
sbb
or
mov
mov
pushl
shl
jne
test
jne
or
hlt
jmp
adc
add
insl
and
mov
sbb
call
sub
xor
push
cmp
xor
adc
mov
pop
incl
dec
test
jb
shl
add
lock
mov
inc
ret
or
xchg
pop
mov
decl
rcll
cmp
cmc
sarb
xor
pusha
pop
js
mov
movsl
je
jno
sub
mov
fdivl
cmp
jle
push
fs
cmpsb
adc
popa
fwait
dec
cmp
out
xchg
xor
adc
add
sbb
pushl
or
adc
dec
in
jne
ljmp
dec
outsl
popa
fs
imul
ljmp
call
push
push
push
imul
insb
insb
outsl
xchg
cld
cmpl
outsl
je
arpl
xchg
sub
bound
dec
fs
imul
in
mov
push
inc
outsl
jb
pcmpgtw
das
int3
mov
loope
decl
mov
mov
mov
repnz
mov
js
sub
mov
das
or
push
fdivs
adc
hlt
add
test
pop
ret
inc
repnz
dec
test
xchg
mov
fistps
repz
push
mov
cld
cmpb
je
or
fisttpl
outsl
imul
mov
dec
cld
mov
and
xor
or
icebp
nop
add
and
and
mov
cmpl
mov
aas
jns
negb
inc
adc
mov
leave
pop
xor
repz
jne
pushf
call
ror
adc
je
push
inc
iret
push
fcoml
xor
jno
mov
sub
mov
mov
in
test
mov
xor
in
push
and
sub
xor
test
add
sbb
cmp
cmp
sub
mov
xchg
mov
dec
mov
nop
out
inc
mov
jns
pop
mov
push
imul
dec
fisttps
arpl
sub
pop
imul
js
mov
hlt
pop
imul
jle
outsw
jns
dec
movsl
jg
mov
es
add
imul
outsl
ja
mov
arpl
jle
inc
jbe
add
jb
add
cmp
scas
sub
adc
cwtl
cmpb
les
inc
orb
cltd
mov
ret
mov
incl
inc
sub
and
call
mov
fcomp
jl
mov
cmp
inc
xlat
std
call
test
inc
ljmp
pop
or
mov
std
sbb
and
jno
xchg
push
out
sub
dec
inc
je
andb
dec
cld
jp
lea
cmp
dec
pop
cwtl
or
dec
add
jmp
jo
hlt
subl
fcoms
fcompl
loopne
jne
sbb
fstps
inc
cs
rcl
cmp
addb
sub
fisubrl
sub
dec
cmp
jg
pusha
cld
addb
mov
inc
jle
inc
dec
scas
in
out
or
adc
lret
add
fucomp
and
inc
inc
mov
inc
int
sub
int3
popa
add
es
daa
push
and
push
hlt
push
push
mov
jl
sbb
je
in
enter
jg
outsl
hlt
fcmovnb
faddl
adc
or
add
gs
in
insb
mov
cld
pusha
mov
cmp
jnp
xchg
out
iret
daa
jbe
mov
outsl
sub
add
popa
xchg
daa
mov
adc
fstpl
jge
sbb
sub
addl
or
pop
dec
sub
hlt
test
or
push
dec
mov
xchg
add
nop
sbb
or
xchg
xchg
jl
xchg
outsl
push
in
rolb
leave
adc
es
push
xchg
jecxz
into
std
push
or
add
mov
insb
adc
cld
cmp
lock
cltd
lea
lock
adc
xchg
push
aam
loop
jbe
les
push
and
mov
mov
gs
and
or
outsl
daa
and
test
and
clc
lock
loopne
stc
les
inc
and
in
in
adc
popa
mov
xchg
wrmsr
cmp
jae
adc
lret
inc
cs
popa
in
jne
or
xor
insb
mov
push
shlb
add
test
ja
pop
push
push
outsl
push
cmp
in
pop
lods
sbb
or
and
sbb
cmp
adc
mov
in
push
pushf
add
dec
or
pop
leave
dec
sbb
pop
call
mov
or
pop
push
push
sub
inc
dec
cmp
in
icebp
inc
and
sub
dec
inc
xchg
pushf
fdivl
pop
mov
flds
imul
mov
int3
pop
dec
lods
cmp
pop
enter
cmpl
je
aam
inc
xchg
rcrl
mov
imul
mov
pop
mov
insb
std
add
add
add
mov
outsb
je
insb
cs
push
ja
outsb
subb
test
sub
les
mov
jne
sbb
movsb
fdivr
shrb
cmp
loope
hlt
cltd
and
aam
hlt
nop
cld
or
xor
mov
sub
imul
adc
aad
inc
dec
add
decl
dec
jne
mov
mov
and
sub
add
int
mov
clc
add
xchg
rcrb
hlt
testb
cmpb
test
cli
mov
or
add
add
mov
stc
cltd
xchg
sub
sbb
sub
sub
or
mov
jne
das
add
ret
dec
jmp
push
mov
xor
rolb
shl
sbb
mov
xchg
sbb
lock
mov
mov
xlat
outsb
cmp
cmpb
pop
sub
fmuls
or
sbb
test
sub
adc
mov
sub
push
enter
xor
jle
repnz
in
subb
add
mov
cmp
cwtl
lods
lret
push
enter
fwait
cmpsb
mov
or
adc
push
jp
mov
xchg
cmp
pop
lock
mov
or
add
in
or
nop
loopne
mov
inc
push
sub
cld
leave
imul
lret
cmp
mov
add
xchg
loop
sbb
xlat
sbb
cwtl
mov
data16
xor
adc
rolb
dec
rcrb
or
push
xchg
add
sub
push
in
outsb
pop
xchg
dec
out
cltd
mov
jecxz
xchg
out
daa
mov
scas
mov
cmp
xor
ret
shll
sub
aam
fs
dec
or
inc
imul
ss
jmp
rclb
mov
ds
lods
xor
jle
mov
clc
leave
sahf
and
sub
lret
mov
or
into
mov
stc
jge
divl
mov
inc
mov
cmp
xchg
cmovno
out
cwtl
in
inc
mov
cmp
adc
test
inc
ljmp
and
dec
pop
xor
mov
stos
push
jmp
outsl
xchg
cld
mov
push
addl
fmuls
test
jle
jle
mov
insb
das
inc
mov
je
clc
fstpt
jmp
clc
cmc
cmp
mov
rcrl
out
mull
inc
mov
in
imul
jle
stos
mov
andl
stos
dec
popf
push
dec
cmpb
mov
xchg
adc
fisubrl
ret
jns
xchg
outsb
sub
xchg
aad
mov
mov
loopne
pop
push
adc
push
call
sub
and
clc
add
rolb
or
inc
pop
lret
push
xchg
mov
adc
movb
pop
push
pop
aaa
in
inc
test
sbb
stos
add
push
nop
arpl
add
dec
mov
xchg
ret
aam
ret
mov
push
mov
sub
mov
out
fiaddl
jnp
mov
cmp
push
adc
mov
mov
pop
push
mov
rol
add
sbb
sbb
repz
sbb
sub
add
add
sub
aam
cwtl
jns
pop
xchg
or
add
imul
fwait
jl
pop
add
fcomps
or
fmull
shll
add
mov
add
add
or
add
out
or
jg
lcall
dec
or
or
inc
add
dec
sbb
add
lods
jmp
inc
add
fists
pop
or
dec
add
add
or
fnstcw
jae
or
or
sub
outsb
xchg
mov
add
and
xcrypt-cbc
cmpsl
push
cwtl
add
push
mov
jnp
add
stc
add
add
sbb
testl
in
in
adc
sahf
icebp
in
add
cs
pop
jnp
xchg
notl
adc
lret
mov
mov
aad
pop
sbb
mov
lds
sub
mov
fsubrl
mov
adc
mov
mov
xchg
mov
rcrl
testb
out
sbb
dec
mov
fists
push
sbb
pop
jns
fs
cwtl
sub
out
fmul
das
pop
jnp
sub
add
lret
ja
cwtl
xor
sub
lret
and
insl
or
psrlw
mov
and
or
shrb
cmp
lea
sub
push
jecxz
data16
push
das
and
arpl
enter
pop
sbb
das
pop
mov
sub
cmp
bound
je
add
xchg
and
add
adc
cmp
mov
push
or
arpl
lea
fiadds
mov
lret
pop
lds
jne
and
sub
dec
cmp
push
ret
xchg
rorl
adc
sub
xchg
int
sub
pop
rclb
arpl
pop
pop
adc
rcrb
shll
inc
icebp
cs
dec
push
jg
dec
jnp
cmp
push
dec
adc
adc
sahf
aad
xchg
dec
frstor
pop
imul
jecxz
add
addr16
jnp
or
cmp
movsb
cmp
add
imul
cli
or
fldt
icebp
ret
pusha
cmp
sub
out
notl
ret
test
mov
or
mov
gs
fdiv
push
add
or
in
ret
jns
add
test
and
xchg
xor
or
into
test
push
loop
xchg
adc
lret
inc
inc
les
out
push
adc
js
mov
gs
imulb
mov
test
rclb
cwtl
rclb
adc
xchg
movsl
insb
and
les
popa
pop
rclb
gs
pop
mov
ret
addr16
fxch
or
loop
das
loop
xchg
outsl
in
jle
mov
pop
mull
xor
jl
add
add
push
inc
cmp
in
cwtl
ret
testl
sub
pop
add
mov
sbb
xor
aad
or
sbb
inc
add
fstpl
fmuls
mov
inc
sarb
and
repz
mov
notl
pop
or
cmp
cs
adc
push
bound
and
mov
fnstsw
test
jl
scas
adc
jne
gs
daa
mov
sti
ja
pop
imull
pop
filds
std
add
sub
outsb
add
ds
popf
jo
aaa
cmp
and
xchg
sbb
filds
sub
add
push
pop
mov
mov
bound
adc
out
mov
test
daa
add
xor
mov
mov
stc
test
mov
xchg
stos
jmp
out
movsl
push
or
std
enter
jecxz
jmp
scas
js
mov
popf
push
jmp
and
cmp
mov
test
push
fcmovbe
icebp
xchg
sarb
cwtl
fcmovu
add
add
cmp
aam
push
pop
and
outsb
je
mov
add
insl
test
xlat
mov
and
insb
in
aas
shl
push
popa
fdiv
push
jns
stc
sbb
pop
pop
rcll
fst
testb
pop
cmpsb
cmp
je
inc
imul
jmp
loop
inc
add
rcr
or
sub
mov
pop
add
pop
mov
jb
mov
add
add
fadd
inc
bound
fdivrs
inc
xchg
jnp
sbb
nop
dec
stc
mov
movb
mov
daa
fcomp
push
pop
or
imul
scas
cmpsb
iret
sub
adc
cmp
inc
inc
inc
mov
add
ja
cmp
and
pop
pop
jae
xorb
xchg
stos
mov
pop
fsubp
sbb
xor
mov
ss
sub
push
adc
add
loope
fildll
mov
cmp
sub
cmp
js
jns
add
cmp
jbe
sbb
sub
icebp
sbb
jno
or
jo
jp
fstpt
jecxz
sbb
je
pop
mov
pop
sbb
mov
jb
outsb
pop
xlat
dec
and
sub
mov
cmp
fwait
sbb
sbb
jae
jno
dec
sbb
repnz
add
add
cs
ret
sbb
cmp
cmpsl
sahf
loope
cmp
int3
pop
in
xchg
icebp
aam
inc
addr16
sbb
jge
push
xor
data16
and
outsb
arpl
add
shlb
aaa
xor
loop
dec
jl
rclb
arpl
cmp
mov
addr16
mov
ja
sbb
jb
outsl
test
xchg
pop
dec
movsl
mov
call
mov
hlt
add
mov
push
cmp
xchg
popa
sbbb
pop
out
mov
pop
mov
popa
push
add
shll
popa
cmp
es
not
aad
pusha
out
jae
add
icebp
mull
icebp
daa
aam
divb
push
aam
add
and
hlt
xchg
mov
arpl
mov
inc
call
mov
jp
or
imul
add
jae
jae
or
rcl
jbe
xlat
jle
imul
jmp
stos
fldcw
mov
fsubrl
pop
jb
sub
rol
or
mov
adc
popa
jne
mov
xor
fsubs
int3
mov
sbb
icebp
push
das
cmp
sbb
add
out
jae
jae
je
fmull
je
jns
arpl
push
xchg
mov
std
mov
xlat
nop
sub
xchg
mov
fidivrs
xchg
ja
sub
jl
loopne
mov
inc
into
ret
pop
jl
push
mov
cs
shr
mov
mov
pop
outsl
push
mov
aas
enter
arpl
test
mov
pop
dec
test
add
xor
call
sbb
push
add
mov
push
sbb
dec
cmp
xlat
fisttps
cwtl
jge
mov
bound
push
ret
lcall
popf
inc
mov
ss
xor
in
leave
jne
mov
into
cmpsl
sbb
or
sub
sub
jno
inc
sub
and
bound
jo
testb
jae
jmp
test
xor
jmp
shrl
pop
outsb
adc
or
out
xchg
stc
clc
iret
fidivrl
dec
daa
out
orb
mov
or
aaa
js
pop
cmp
pop
pushf
fmull
xor
jb
popf
jno
mov
mov
pop
dec
divb
mov
adc
mov
pop
jo
setae
iret
inc
dec
push
int3
add
imul
dec
push
jnp,pn
inc
gs
fwait
outsl
stc
sbb
xchg
jmp
xchg
mov
push
fadds
push
or
xchg
lahf
mov
mov
dec
sub
icebp
push
pop
inc
cmp
enterw
in
lods
xlat
push
cmpsb
and
mov
addr16
sbb
and
xchg
xchg
sub
fdivrs
pop
insb
mov
push
vmwrite
adcl
jbe
mov
cwtl
icebp
sub
sub
jnp
fmuls
lock
insl
clc
mov
xchg
fidivrs
mov
xor
adc
addb
adc
insb
push
mov
sub
loop
sbbl
pushf
ret
enter
or
subl
jnp
sub
ret
sub
adc
das
rcrl
into
fadds
lcall
sbb
je
xorl
xorl
lret
aad
mov
dec
pop
jp
or
shlb
mov
jg
je
lea
dec
push
or
xchg
out
fstl
sbb
sbb
cmp
jp
cs
lcall
push
outsl
cmp
pop
aaa
test
jb
rolb
pop
cmp
xlat
add
pop
icebp
and
mov
adc
sub
ss
fwait
lods
adc
mov
mull
add
push
stc
popa
sub
arpl
addr16
js
mov
scas
scas
sub
outsl
dec
insb
lret
stos
aaa
jae
cmp
or
movsl
aam
outsb
mov
adc
bound
dec
out
inc
jno
adc
sub
and
mov
xor
mov
jp
je
loop
mov
xor
test
mov
jge
add
fmuls
dec
xor
mulb
cmp
xlat
lods
inc
ficoml
lcall
mov
cmp
pop
std
lock
stos
jae
xor
data16
and
rol
xor
push
adc
es
dec
sub
mov
rdtsc
dec
dec
jnp
fisubs
push
out
add
sub
stos
push
and
dec
ret
pop
push
das
inc
and
aam
mov
add
sub
lods
pop
pop
push
jne
jbe
stos
addr16
pop
rorl
adc
xor
dec
fisubrl
iret
pop
insb
ffree
xchg
mov
jmp
das
ljmp
ds
xlat
fwait
cld
sbb
mov
in
shl
add
inc
mov
shll
lock
dec
ljmp
bnd
jns
scas
dec
pop
das
fs
fisttpl
pop
jae
aad
sub
push
outsl
in
sbb
jnp
rclb
loopne
jo
jg
jmp
in
outsb
lcall
cmpsb
sbb
cmp
xchg
aad
ljmp
test
sub
ret
loope
xchg
sbb
adc
and
add
lcall
fdivl
rorb
filds
ss
ss
adc
int
div
mov
iret
loope
shl
xchg
aam
adc
stos
mov
add
cmp
sbb
jae
cmp
shr
jnp
neg
adc
adc
addl
dec
xchg
mov
pop
jbe
scas
dec
add
pop
movsb
flds
and
jnp
dec
xor
mov
add
xchg
mov
xor
push
add
pop
jg
push
pop
bound
ret
add
rorl
daa
add
outsb
jnp
xor
mov
and
cmp
outsl
xchg
mov
inc
addr16
push
jmp
scas
cmpsb
repnz
je
xchg
lea
fsubrl
mov
or
popa
pusha
lret
sbb
daa
or
pusha
xor
jne
call
ffreep
mov
es
movsl
aas
out
imul
pop
aad
adc
add
sbb
sbb
int
addr16
mov
mov
xor
and
sub
out
or
pop
loopne
xchg
mov
jle
fwait
int3
jnp
or
jmp
cmp
mov
and
mov
jge
pushf
dec
fstpl
or
daa
jge,pn
and
xor
lock
adc
fs
push
adc
mov
xchg
mov
mov
mov
es
jge
pusha
adc
call
out
aad
js
add
scas
aas
mov
jne
subb
inc
pop
jge
shrl
dec
fsts
lock
xor
ret
xlat
mov
outsl
enter
clc
mov
inc
icebp
pop
mul
jne
enter
xor
adc
jbe
outsl
adc
jl
jnp
ret
mov
xchg
pop
data16
loopne
jecxz
push
cmpsl
cmp
outsl
adc
jp
mov
aad
pop
out
and
mov
xchg
xor
in
mov
xorl
sub
mov
mov
jge
sub
not
insb
rcrb
sub
sbbl
pop
out
cmp
shll
xor
int
pop
jns
jge
xchg
add
aaa
cmpsl
ja
loop
fs
pop
ret
addr16
arpl
mov
cmp
hlt
mov
pop
ret
cmpsl
xchg
inc
jmp
das
sahf
stos
outsl
je
mov
jl
test
das
mov
pop
sarb
mov
lea
stos
in
add
roll
scas
adc
in
rcr
push
xor
sbb
inc
aaa
mov
adc
or
fcomps
mov
addr16
clc
adc
sbb
cmc
cmp
mov
cmp
dec
int3
ror
rclb
arpl
jle
xchg
lcall
pop
jl
mov
rcl
push
ficompl
or
inc
sbb
dec
cmpsb
mov
test
mov
pusha
sub
push
sub
sub
int3
jb
push
push
adc
adc
push
jp
xchg
or
sub
sub
mov
cmp
jae
sbb
xchg
add
mov
shll
setnp
nopl
rcll
xchg
bound
std
sbb
adc
call
sub
aaa
out
fisubl
lea
outsb
xor
stos
jb
jmp
or
pop
lods
jge
mov
inc
negb
jno
in
mov
sub
loope
cmp
xchg
xor
lcall
sbb
dec
push
roll
inc
xchg
mov
mov
cld
inc
jmp
je
xchg
daa
and
push
shlb
divb
aam
in
sbb
les
test
shlb
adc
rorl
pop
loop
mov
lcall
fmul
decb
sub
sub
mov
mov
xorb
aam
iret
dec
xchg
adc
sbb
into
jne
les
or
lret
shlb
cmp
mov
outsb
and
pop
mov
inc
add
sbb
bound
jnp
std
arpl
cmpsl
test
lods
in
jo
mov
jnp
ret
xchg
inc
mov
stc
daa
mov
pop
add
mov
mov
jecxz
pop
sahf
xor
ret
inc
sub
aaa
sub
arpl
jmp
sbb
mov
jns
pusha
sbb
inc
enter
fbld
jbe
push
pop
sub
dec
aaa
aaa
push
push
cwtl
insl
rol
or
jg
jbe
lea
das
jge
push
call
aad
or
lahf
ds
cwtl
and
push
adc
sarl
into
orb
pop
es
inc
loop
sub
dec
mov
into
ljmp
test
add
loope
test
mov
sub
test
movsb
mov
fcomps
or
ret
nop
cmpsb
loop
ss
fsubrs
insl
push
or
xor
test
cmp
and
and
push
mov
ret
and
mov
movsb
fs
fxch
shrb
and
lcall
add
xchg
and
div
mov
xor
fdivrs
iret
push
mov
das
or
and
or
inc
pusha
or
mov
xchg
and
mov
fisubrl
pop
and
das
shlb
sbb
bound
add
pop
pusha
adc
xor
mov
sbb
shlb
sub
sbb
rolb
loopne
xor
jae
adc
loop
push
loop
movl
mov
out
aas
movsl
pop
push
lods
mov
arpl
cmp
xchg
adc
nop
sbb
cmp
push
mov
cmovb
xchg
scas
jmp
inc
pop
xchg
and
and
xor
inc
mov
mov
and
dec
shlb
pop
push
fdivl
or
sub
bound
xchg
jge
or
adc
jne
push
lods
mov
shrb
add
cld
imul
movsb
in
jecxz
in
lahf
ret
pop
or
ret
jo
vmovupd
pushf
shrl
daa
mov
xchg
pop
push
add
pop
xchg
add
pop
and
lock
mov
shlb
push
push
mov
sbb
jl
fwait
or
inc
mov
mov
enter
iret
ror
int
sub
pop
adc
ret
mov
pop
or
and
sahf
aam
and
sub
inc
enter
xor
xor
mov
pushf
stos
rcll
shr
mov
push
into
cmp
pop
push
outsb
aam
add
out
xchg
pop
sub
add
xor
gs
or
xor
outsb
mull
mov
mov
and
xchg
cwtl
mov
popa
xor
xor
inc
dec
ljmp
insl
fwait
push
scas
cmp
sub
in
ss
cmp
mov
jmp
insl
fnsave
dec
adc
test
gs
daa
das
bound
add
shlb
mov
or
mov
shrb
mov
ja
test
inc
add
adc
cmp
fwait
push
add
sub
push
imul
rorw
sub
popf
call
xor
daa
push
pop
jne
push
sub
pop
mov
arpl
loop
dec
xchg
jmp
jo
cmp
or
mov
push
cmp
negb
popw
mov
ret
ljmp
daa
dec
adcb
leave
xor
dec
add
inc
popa
push
popa
mov
scas
subb
lods
pop
add
push
rcrl
jo
push
xor
daa
popf
sub
hlt
inc
or
test
inc
insl
ret
mov
sti
cwtl
adc
in
jne
sbb
cld
stos
shll
pushf
in
push
mov
push
sbb
outsl
ljmp
jmp
or
aad
or
mov
adc
mov
fildl
call
cwtl
cltd
jo
dec
dec
iret
pusha
dec
mov
xor
ret
in
sub
fs
jo
sub
sub
xor
pop
mov
add
pop
mov
mov
gs
pusha
cmp
in
stos
rcr
scas
cmpsl
fucom
adc
shrb
in
lock
xor
add
sub
inc
sub
inc
cmp
loope
sbb
sbb
pminsw
and
mov
dec
sub
xchg
int3
mov
outsb
and
fwait
mov
inc
roll
or
push
adc
das
inc
out
clc
addb
sub
lcall
ret
inc
sub
sbb
xor
jmp
negb
int3
cmp
dec
push
add
int3
push
nop
fidivrl
test
or
pop
enter
dec
push
aaa
cwtl
sub
jnp
pop
mov
cmp
shl
push
int3
and
push
pop
sub
inc
arpl
imul
imul
xchg
repz
mov
in
movsl
mov
shlb
push
sbb
movsl
enter
push
xchg
enter
jbe
inc
pop
or
mov
mov
loope
push
aaa
fisubs
pop
xchg
jae
adc
je
dec
push
pop
dec
mov
ss
call
mov
xor
in
mov
mov
cmpsb
sbb
push
push
shll
mov
repnz
shlb
cld
cmp
js
lret
loope
cld
mov
push
cmp
sbb
aas
mov
test
or
scas
and
lods
fwait
aad
push
daa
pushf
mov
pop
or
addr16
cmp
push
mov
dec
cli
fnsave
les
fadd
mov
xor
movsl
jb
adc
jb
jo
dec
sarb
mov
pop
je
push
pop
js
loopne
cmpsb
mov
xor
xor
lds
dec
cs
inc
lds
xchg
push
mov
and
pop
cs
out
sbbl
xor
cmp
sub
or
das
pushf
fisttpll
insl
ja
test
sub
pop
sbb
pop
xchg
sub
add
add
ljmp
gs
fadd
adc
inc
cmpsb
jge
mov
repnz
cmp
add
add
out
rol
js
pop
mov
sub
push
sub
and
repnz
mov
scas
shlb
jo
dec
sub
mov
ret
mov
rcr
dec
std
cld
jns
aam
andl
inc
jns
lock
stos
pop
pop
fists
sub
pinsrw
std
push
and
cmp
mov
dec
add
mov
ret
pop
mov
mov
dec
test
mov
dec
dec
icebp
popf
ja
es
lea
push
sbb
and
or
scas
inc
mov
adc
push
xorb
jmp
inc
mov
or
pop
push
push
jnp
daa
adc
mov
pusha
mov
unpcklps
rcl
pop
test
nop
sbb
mov
push
push
stc
push
push
push
pop
and
push
or
adc
sti
ljmp
push
add
into
call
push
or
into
pop
arpl
push
mov
fstl
add
lock
lcall
add
test
push
lods
mov
and
inc
shrb
mov
push
push
out
and
cmp
aaa
jae
add
pop
cmp
call
pop
mov
lods
scas
insb
ja
das
and
push
lcall
in
and
xorl
dec
inc
pop
mov
and
mov
gs
or
mov
push
pusha
inc
mov
adc
enter
add
inc
adc
sti
mov
insb
dec
pop
je
jecxz
shrb
jnp
ret
aam
pop
mov
sbb
shrl
adc
pop
jb
cmp
xor
outsl
sbbl
mov
jae
fs
cmp
call
or
or
scas
incb
jns
bound
in
xchg
jae
cmp
xorb
or
pop
xchg
mov
jmp
and
jns
cmp
call
bound
fstps
insb
js
call
mov
sub
jmp
jg
je
lds
or
pop
push
dec
xchg
sub
imul
push
dec
add
mov
adc
in
jo
insl
xor
cmc
adcb
daa
fcomps
ret
fs
insl
push
pop
in
cmp
jp
loop
mov
aad
loopw
or
add
adc
push
jl
mul
add
mov
pop
jnp
dec
pop
xchg
ret
mov
jle
out
out
or
xchg
or
insb
adcb
jl
sub
lret
inc
out
mov
xor
cs
mov
add
iret
mov
mov
mov
cwtl
icebp
xchg
faddl
add
push
sahf
jnp
mul
jp
js
mov
das
pusha
ret
repz
bnd
and
fchs
push
out
aam
daa
in
push
xchg
rep
mov
inc
test
mov
shrb
add
jb
pusha
inc
jbe
repz
in
ret
sbb
testb
sbb
inc
repz
fs
daa
les
fdiv
shr
call
imull
repnz
ss
js
incl
xor
push
fidivs
arpl
out
ss
jg
mov
push
adc
mov
dec
std
cld
aad
sub
inc
dec
jnp
push
cld
inc
outsb
ss
cmpsb
add
ja
ret
int
push
jbe
sti
andl
imul
stc
sub
jo
mov
push
dec
jne
pop
movsb
and
dec
push
insb
mov
call
xor
rcll
dec
pop
sbb
outsl
mov
loopne
orl
cmc
lds
cwtl
cmpsb
cmp
popa
out
in
adc
insl
xrelease
loop
pop
inc
adc
xchg
mov
shll
xor
sub
int
adc
in
add
dec
inc
cmp
nop
sub
pushf
or
or
xorl
es
stos
adc
addb
pop
mov
and
js
sbb
setge
add
orl
jecxz
pop
cmp
mov
mov
addr16
jp
sub
call
loop
loop
cmpb
outsb
or
loop
and
xor
and
mov
push
jmp
xchg
test
xchg
mov
mov
sbb
mov
mov
sarl
xchg
sbb
sub
aad
test
sbb
pop
incb
add
pop
rorl
popa
mov
gs
js
add
xor
cs
mov
mov
in
and
add
sub
inc
leave
cwtl
mov
and
fwait
int3
popa
cmp
dec
leave
dec
mov
fs
cli
stos
jecxz
mov
dec
test
loop
add
or
add
jmp
cmp
int3
and
sbb
mov
jle
xchg
add
pop
mov
cmp
adc
daa
or
lds
nop
or
or
mov
adc
mov
jg
xor
test
pop
jns,pn
add
stc
jb
popa
rcrl
inc
ret
loope
xchg
adc
sub
rcr
cmp
sub
test
data16
out
ret
in
rclb
push
in
add
data16
mov
dec
arpl
data16
test
inc
popa
psrlq
pop
mov
out
add
mov
movsb
daa
inc
cmpsl
popa
pushf
repnz
lahf
movb
lret
test
pop
push
xor
sbb
jle
or
xor
and
xchg
out
lods
cmpsl
xor
adcb
scas
push
in
pop
pop
fdiv
js
add
cmpsb
shrl
sub
mov
and
mov
test
je
mov
mov
add
xlat
cwtl
shl
push
pusha
movsl
clc
and
js
test
sub
ret
lds
xchg
popa
cmp
mov
cmp
es
sbb
stc
mov
in
sub
xlat
pop
in
or
and
jo
fstl
test
xchg
int
mov
div
aas
dec
aaa
push
cwtl
xchg
aad
cmpsb
das
mov
add
and
outsb
stos
push
imul
xlat
sti
rcpps
jne
pop
das
aam
scas
xchg
xchg
or
push
add
sub
jg
sarb
sub
pusha
repz
pushf
xor
jmp
insl
adc
rcll
mov
adc
ss
out
add
add
and
lea
filds
adc
add
out
mov
xor
pop
push
or
arpl
mov
and
cmp
push
aad
mov
pop
daa
movaps
outsb
ret
addb
loopne
aad
adc
in
jg
adc
mov
cs
ret
jg
ds
mov
leave
stos
adc
pop
sub
mov
xor
and
cmp
pushf
inc
xchg
dec
pushf
push
and
daa
lea
and
shl
inc
pop
and
ret
fsubp
jns
sub
and
jg
shlb
xlat
js
out
cmp
jbe
sub
push
test
adc
in
add
div
add
sbb
adc
sub
sbb
cmc
jno
leave
mov
mov
add
faddl
cmpsb
or
call
pop
sbb
testl
adc
fdivs
mov
or
rcr
inc
xchg
int3
aad
ret
shlb
push
push
inc
in
add
pop
jns
cmp
mov
xchg
jnp
jecxz
lahf
mov
mov
dec
xor
mov
xor
add
mov
dec
pop
and
jae
and
leave
push
mov
mov
icebp
xor
mov
loope
or
roll
lahf
jmp
add
aam
arpl
and
jb
sub
and
pusha
pop
mov
pusha
out
jge
ficomps
push
lods
dec
inc
outsb
add
cmpsb
push
jne
push
cmpsb
data16
mov
test
push
dec
xlat
addr16
mov
mov
mov
dec
jecxz
int
pop
lock
jbe
push
jo
xlat
popa
or
in
inc
mov
xor
aas
data16
cmp
and
leave
inc
hlt
mov
push
icebp
adc
outsb
fsubl
jae
aas
or
lahf
inc
mov
inc
setle
inc
jno
fs
fildl
add
addl
push
rcll
sbb
nop
inc
push
pushf
shlb
pop
push
sub
mov
xor
add
mov
dec
or
jnp
mov
les
gs
mov
pop
xorl
push
or
add
add
daa
insb
pop
cmpsl
es
jo
jo
idiv
cmp
fs
xchg
fdivs
adc
mov
xchg
flds
lea
xchg
subl
adc
sbb
lret
fmul
mov
sub
inc
addr16
inc
loope
or
push
inc
add
das
xor
rorb
inc
stos
ret
and
arpl
out
add
add
mov
mov
mov
sub
pop
cmp
xlat
pop
jne
shll
xor
sbb
roll
mov
popa
insb
in
cwtl
lock
adc
loopne
and
inc
mov
imul
les
aaa
lds
mov
jl
sub
sbb
jl
add
cmp
push
in
inc
add
inc
cwtl
fadd
adc
test
and
xor
test
cmp
pop
daa
data16
sbb
ret
sbb
xor
sbb
xor
inc
sahf
inc
mov
or
clc
sbb
pop
lock
push
push
movsb
xchg
orb
jl
jo
xor
dec
sbb
in
sbb
push
adc
or
dec
dec
xchg
test
adc
out
mov
test
rcrl
mov
in
bound
bound
mov
pusha
lcall
rcrb
sbbl
cmpsb
and
mov
js
inc
aad
push
pop
cmpl
and
test
mov
js
inc
mov
cltd
and
outsl
aaa
mov
jbe
mov
mov
cmp
jo
adc
jle
or
push
mov
pop
pop
dec
cli
adc
cmp
push
je
or
sbb
loopne
repz
sbb
sbb
fisubrl
pop
mov
sub
mov
jb
in
mov
mov
sbb
mov
xlat
lret
pop
lret
xor
push
pop
xchg
sub
push
push
jmp
int
adc
sbb
sub
push
xor
rclb
stos
ja
inc
pop
xor
mov
jb
ds
mov
xor
push
or
xchg
mov
push
inc
pusha
and
inc
sub
xor
push
cmc
rorl
pop
fiaddl
xchg
movsl
pusha
out
loope
jae
sbb
xor
add
pusha
or
mov
or
in
mov
sub
mov
test
sbb
or
mov
js
sbb
adc
test
lcall
outsl
mov
int
loop
daa
add
popa
test
lea
xchg
jge
faddl
rol
cmp
test
sub
xchg
pop
lods
cltd
cmp
mulb
inc
jb
popf
sbb
dec
pushf
es
or
or
or
aaa
fistpl
rorb
pop
in
cmp
rorb
sbb
pop
inc
inc
andb
xchg
sbb
les
push
fistpll
dec
add
mov
cmp
fstp
inc
cmp
mov
ret
inc
xchg
jmp
shlb
ds
push
pop
ljmp
cmpsb
mov
add
cmp
push
dec
add
add
add
adc
daa
push
jnp
or
dec
or
fs
add
sub
imul
cmpsb
insb
adc
shlb
mov
loop
sub
das
mov
rolb
xor
mov
add
adc
lods
xchg
jnp
xchg
shrb
add
nop
sti
or
mov
push
jo
xor
inc
xor
shrl
jecxz
push
sub
push
pop
aam
addr16
mov
ljmp
inc
pop
mov
bound
lcall
fnsave
dec
lret
je
daa
jmp
jl
cwtl
aaa
adc
sbb
ja
lods
xchg
add
shr
add
add
xor
aas
fdivrs
loop
cmp
and
je
loope
xor
lock
mov
ret
adc
mov
jl
ret
mov
xchg
cmp
and
sub
jl
jne
jge
adc
popa
fstpl
and
ljmp
ret
pop
xchg
sub
pushl
xchg
mov
fsubs
xor
andb
sub
mov
sbb
dec
icebp
popf
or
mov
sub
ret
mov
cmpsl
imul
add
ja
das
mov
xor
push
out
test
rorb
inc
sbb
ficomps
adc
das
int3
stos
jmp
sub
jb
movsl
jl
pusha
mov
inc
adc
stc
pushf
xor
mov
jl
and
sub
arpl
mov
popa
inc
call
jl
popa
jp
adc
inc
mov
lahf
adc
int
movsb
add
dec
adc
dec
ss
scas
xchg
jp
push
lods
cmp
add
shl
push
flds
sarl
mov
mov
lods
jp
xlat
cmpsb
mulb
sahf
xchg
add
xchg
sub
gs
mov
fcompl
jp
sub
data16
aaa
and
xchg
xchg
cmp
mov
push
jmp
and
sbb
jge
pop
xorl
jnp
fists
lds
dec
out
xchg
mov
call
push
jo
js
sbb
fmuls
cmp
xor
jl
dec
pop
jns,pn
xor
add
mov
add
and
shrl
insl
pop
xchg
or
mov
cmp
mov
or
imul
mov
add
rorl
js
cmpsl
mov
sbb
inc
shrl
lods
stos
aas
jae
cwtl
repz
or
add
ret
jl
add
dec
aam
pop
les
popa
in
rcrb
mov
hlt
add
icebp
jge
mov
dec
push
pop
aaa
cmp
adc
adc
fisubs
mov
frstor
and
loope
sub
js
insl
addr16
jl
pop
gs
aam
add
add
fcmovnbe
sbb
pusha
js
shlb
shl
push
out
dec
int
aad
insl
jne
xchg
mov
jb
push
sub
aas
add
and
adc
orl
je
call
sub
jmp
sahf
jmp
test
popa
dec
or
out
stc
imul
inc
pop
scas
mov
xlat
sbb
hlt
mov
and
add
adc
cmp
xchg
or
xchg
cmpl
inc
stos
out
popa
pusha
or
orb
cmp
into
inc
sbb
mov
sbb
es
cwtl
mov
and
sbb
stos
or
in
mov
or
pop
xchg
fistpll
clc
aam
andb
movsb
adc
xor
sbb
rorl
pop
or
lods
mov
cs
pusha
testb
insb
lret
dec
ss
leave
xchg
in
out
jne
call
lods
mov
dec
ret
in
pop
test
jp
test
pop
sahf
push
push
inc
ret
xor
jl
test
arpl
or
push
sub
jb
cmp
adc
shrd
aam
cltd
pop
scas
cmp
shlb
add
jne
sub
add
add
adc
xchg
dec
pop
addr16
mov
ror
push
std
xchg
fdivrs
sbb
dec
jge
inc
mov
dec
outsl
push
jno
mov
push
in
xchg
add
and
xor
test
outsb
ljmp
pop
shrl
into
sub
iret
sub
or
push
mov
push
call
jbe
dec
jne
jbe
jge
add
xchg
inc
dec
sbb
jge
inc
das
and
mov
shrl
ss
jo
imul
xchg
jge
aaa
push
pop
pop
and
mov
add
adc
pop
es
mov
inc
dec
cltd
fiadds
into
or
mov
mulb
cmpl
sar
outsb
add
fisubs
xchg
adc
in
addl
and
or
jmp
inc
adc
mov
fld
adc
bound
fidivs
and
movsb
pop
xorb
jns
push
rorb
mov
aad
or
adc
adc
adc
cwtl
lock
inc
sbb
push
jp
bound
sub
jmp
xchg
test
and
adc
arpl
loop
popa
outsb
sub
jbe
add
shll
adc
in
push
les
sbb
rorl
sahf
adcl
fcom
roll
pop
mov
jbe
xor
roll
adc
mov
sti
and
push
sar
ljmp
insb
pop
loop
inc
das
inc
out
mov
imul
jmp
in
cmpsl
push
xor
xchg
lods
insb
movb
mov
push
in
std
mov
push
sti
shrb
mov
stc
test
or
bound
iret
out
add
mov
inc
sub
hlt
add
xor
gs
jmp
sahf
mov
lods
sbb
mov
out
mov
mov
call
add
sahf
adc
inc
and
lret
cwtl
shrb
or
je
fildl
jno
push
jne
andl
xor
cmpsl
lcall
push
call
or
out
rolb
mov
or
sub
shl
xor
push
pop
aas
fsts
mov
push
push
add
mov
push
inc
mov
imul
add
adc
sbb
lcall
inc
xchg
imul
add
popf
adc
adc
add
mov
jbe
adc
jns
push
lds
imul
out
mov
cmp
dec
xchg
loopne
lods
and
inc
je
daa
adc
popa
pop
shll
push
push
mov
aas
mov
lret
and
xor
push
scas
out
xor
inc
xchg
add
xchg
outsb
cmpl
les
lods
add
push
dec
icebp
add
pop
fildl
xor
lock
jl
push
pop
ret
mov
adc
pop
push
insl
daa
lods
jle
mull
jne
js
lock
cmp
incb
and
out
mov
push
dec
inc
cmpsl
push
and
and
stos
js
mov
into
loopne
out
sti
neg
cmp
enter
pusha
push
jle
and
mov
mov
xor
push
jmp
inc
daa
dec
and
mov
lret
pop
mov
inc
mov
js
xor
add
repnz
mov
cwtl
shlb
movsb
inc
xor
lock
mov
push
add
push
mov
in
bound
mov
out
dec
hlt
cmp
sbb
ja
pop
sub
enter
shll
mov
xor
mov
sub
test
icebp
hlt
pushf
stos
adc
out
int
clc
in
jl
adc
out
or
rcrb
pop
shlb
xor
or
ljmp
pop
mov
js
push
xchg
mov
pushf
loop
test
cmp
addb
dec
cmp
scas
pop
or
fimull
adc
mov
push
loopne
pop
filds
and
imul
mov
and
and
cmpsl
es
lea
test
daa
inc
and
mov
add
bound
and
add
cltd
jecxz
xchg
daa
sbb
les
idivb
dec
xor
mov
inc
cmpsb
aas
push
aaa
or
sbb
xor
mov
daa
xor
ret
fwait
lea
inc
inc
xchg
popa
xchg
mov
pop
inc
js
iret
int
sub
adc
stos
aad
mulb
cmp
jp
xchg
pop
dec
gs
mov
mov
push
and
dec
jb
fdivs
cmp
adc
mov
sub
push
push
xor
dec
xchg
iret
mov
mov
pop
jecxz
push
testl
adc
out
ret
inc
push
out
mov
pop
pusha
fstl
mov
outsl
cs
int3
xor
mov
sub
and
mov
sub
js
fcos
mov
or
mov
xor
add
sbb
pop
insb
or
fldenv
jnp
push
in
fwait
icebp
call
fucomi
jbe
dec
push
addr16
inc
lret
sub
fists
daa
es
es
inc
js
and
iret
aaa
loope
jnp
jecxz
mov
in
or
sbb
add
xlat
push
xor
dec
dec
cmp
adcl
mov
ja
mov
sbb
dec
dec
push
and
add
xor
xlat
and
cmpsl
int3
dec
jb
jl
neg
inc
xor
testl
pop
int3
fdivs
mov
aaa
inc
cwtl
xor
outsb
dec
ret
out
or
je
mov
sub
or
arpl
stos
push
lret
gs
dec
jg
or
mov
and
mov
fsubs
mov
jmp
or
adc
mov
aad
push
pop
mov
in
int
leave
mov
mov
stc
or
mov
xorl
jbe
addr16
setnp
fiadds
lahf
pushf
test
lods
fwait
cltd
xchg
xchg
jnp
jns
arpl
dec
xchg
fld
xchg
data16
and
aam
sub
add
dec
lahf
out
outsb
jecxz
fwait
mov
pop
xchg
pop
mov
cmp
dec
sti
push
jl
xor
or
neg
pop
sbb
lret
scas
xor
in
idivl
cs
and
lret
bound
sbb
dec
pop
in
inc
cwtl
adc
pop
pop
sbb
or
fs
fldt
xor
xor
cli
or
add
jno
pop
mov
xor
je
push
dec
jbe
negl
loopne
cld
pop
je
or
imul
or
ret
sarl
aaa
sub
jnp
jno
out
add
push
add
cmp
ret
loope
and
adc
jno
int
adc
xor
xchg
jo
cmp
aaa
fidivrl
sbb
movhps
mov
push
popl
sub
test
jnp
mov
mov
cmpsb
std
je
outsb
fldenv
jge
add
push
jae
dec
jo
imul
xchg
mov
push
outsl
adc
cwtl
or
gs
in
pop
insb
adc
xchg
cwtl
popf
lock
jnp
sbb
dec
jg
xor
xchg
sbb
jno
arpl
push
jno
sbb
fs
or
insb
loop
mov
adc
xor
scas
push
ret
inc
jno
dec
xor
jg
pop
inc
lcall
icebp
outsl
pop
ja
xor
lret
loop,pt
mov
filds
cmp
and
sbb
mov
mov
cmp
or
lods
jns
jo
scas
pop
popa
adc
mov
sbb
mov
sub
aad
xor
rclb
aam
mov
les
rcr
aad
push
jno
cmp
push
mov
pusha
jge
pop
jo
inc
push
mov
lods
dec
and
pushf
push
stos
mov
das
arpl
sub
jne
aad
mov
or
push
xor
adcb
sub
xor
xchg
xor
push
les
in
xchg
sub
push
add
lock
push
shrl
jl
cmp
popa
mov
pop
push
xor
mov
pop
cmp
push
test
mov
and
jb
das
scas
insl
orb
repz
pop
scas
lcall
pop
mov
mov
mov
stos
pop
fs
lods
jl
roll
xchg
out
loop
in
rclb
mov
dec
sbb
iret
cmpsl
sbbb
cmp
out
xchg
movb
adc
test
mov
inc
out
pop
mov
cmp
adc
xor
sahf
mov
subl
inc
sbb
iret
sub
add
aaa
pop
out
les
outsb
in
xor
add
insl
inc
mov
xor
je
pusha
leave
and
jne
and
rcll
and
lock
adc
aas
lock
and
xor
inc
sbb
add
push
imul
popf
in
in
mov
cmpsl
adc
xor
into
lcall
pop
fwait
jnp
dec
iret
sub
and
je
mov
pop
inc
jnp
ret
and
fs
sbb
movsl
sub
jnp
push
jae
call
int
imul
sub
pop
or
pop
je
dec
mov
mov
ret
loope
les
mov
xlat
xor
jl
jne
es
loope
push
adc
push
daa
or
xor
inc
les
jo
jmp
insl
test
and
leave
mov
lods
adc
push
leave
cltd
pop
outsb
insb
in
ja
outsl
popa
insl
imul
xor
push
cld
adc
gs
add
pop
addb
and
pushf
add
jge
or
pusha
inc
fimuls
stos
es
sbb
mov
lods
pusha
and
stos
stc
inc
inc
out
push
pushf
call
push
lret
shlb
sub
or
shl
and
push
cli
adc
push
push
jo
orl
mov
push
int3
pop
sbbl
shlb
jo
bound
cmp
adc
mov
cmp
pop
aaa
addl
xor
xor
add
xor
push
push
ficomps
cmc
lods
js
cmp
mov
mov
mov
xchg
std
push
das
aas
push
nop
or
outsb
jo
jae
jo
jns
mov
mov
add
push
stc
imull
insb
mov
jl
cmpsb
fs
aaa
fsubr
mov
jns
jg
fwait
sbb
adc
add
shlb
mov
dec
int
sbb
and
arpl
jl
sbb
scas
pop
pop
or
pop
pop
pop
ret
add
out
mov
pop
push
add
push
inc
rcrb
mov
lock
xchg
sbb
push
ret
mov
dec
rorl
sahf
aaa
mov
pop
and
mov
or
and
andb
jae
mov
imul
pop
pop
int3
sub
lret
add
and
push
stc
xchg
mov
loopne
cmp
pop
shll
pop
mov
insl
xchg
cmpsl
popa
adc
mov
loope
xchg
push
xchg
test
mov
jbe
int3
pop
or
or
sub
int3
dec
lds
fcom
test
cmp
jb
mov
mov
sbb
daa
add
adc
push
cld
jg
mov
std
push
addr16
xchg
ret
push
dec
jp
dec
dec
lahf
or
shr
sub
imul
outsb
iret
pop
popa
int3
mov
xchg
js
xor
dec
adc
push
jmp
or
sbb
arpl
xchg
xchg
aad
and
mov
sub
call
icebp
pop
sbb
leave
xorb
iret
outsl
lock
test
jnp
fdivs
adc
fiaddl
inc
lock
jnp
fldcw
es
sbb
push
inc
inc
sub
mov
cmp
dec
lahf
add
js
sbb
rcrb
jle
sahf
fiadds
adc
mov
aam
push
mov
cs
mov
push
daa
test
push
xchg
shrb
sub
jbe
cmp
cmp
leave
sbb
sti
jns
clc
push
insl
xchg
lcall
cmp
xor
sbb
pop
cmp
daa
imul
outsb
sub
shll
aad
cmpsb
rclb
mov
ret
fsubrs
push
subb
andl
or
add
push
jne
push
or
push
push
repnz
push
or
jo
rclb
add
aam
loop
xchg
leave
jb
xor
aad
pop
scas
jecxz
ret
push
or
and
aad
jo
mov
data16
call
add
mov
lret
das
xchg
sbb
daa
push
xor
hlt
fimuls
dec
arpl
and
arpl
add
stos
out
cmp
adc
and
scas
jp
ficoml
fldenv
dec
jp
xchg
and
inc
jecxz
fisttpll
rcll
pushf
mov
pop
xorl
aam
stos
imul
xchg
jno
sbb
sub
sbb
dec
dec
leave
sub
and
adc
stos
push
inc
xor
dec
fs
shrb
and
iret
rorl
add
stos
or
jbe
out
cwtl
iret
sbb
popl
pop
and
movsb
leave
in
pop
sub
hlt
and
out
fwait
add
popf
sub
or
jecxz
adc
mov
dec
mov
les
mov
hlt
mov
fbstp
popl
dec
xchg
pop
out
or
push
or
aaa
sahf
adc
push
add
add
test
sahf
ror
sub
mov
xor
adc
dec
add
or
addb
pop
jae
mov
jnp
jno
add
fimuls
sahf
and
add
lret
add
and
xor
add
dec
mov
andb
xlat
ret
int
roll
jmp
repz
das
dec
stc
dec
cmp
xchg
xchg
hlt
mov
ffreep
cwtl
sub
frstor
xchg
sti
ljmp
dec
dec
call
pop
cmp
rcll
lahf
scas
cmpsb
or
fs
movsb
mov
pop
add
in
fidivrs
addl
cmc
add
sub
jo
xchg
lea
pop
or
sub
push
jecxz
and
sbb
popf
mov
or
xor
adc
add
push
sbb
and
fmull
dec
add
adc
das
pusha
or
mov
loop
jmp
lock
hlt
fildl
pop
dec
add
add
adc
popa
test
subb
imul
and
clc
inc
xchg
ret
cmp
lret
jecxz
add
push
push
scas
sahf
aam
adc
test
mov
dec
dec
mov
jne
sub
adc
mov
in
add
cmpsb
push
add
cmp
cmpsb
xor
cmp
shll
shlb
andb
jnp
movsl
inc
pusha
out
pop
mov
jno
jne
into
lret
pop
dec
bound
mov
dec
ja
leave
bound
inc
xor
lods
mov
loop
into
jo
cmpsl
jmp
pop
xor
lret
aaa
jae
pop
leave
push
xchg
inc
jnp
add
sbb
push
ror
push
inc
add
test
mov
xchg
aad
mov
cmp
jecxz
push
aas
pop
addl
sahf
or
pusha
fwait
aam
cmpsb
sbb
or
sahf
mov
jo
arpl
mov
int3
adc
shll
pop
add
push
loopne
imul
cmpsl
bound
add
pop
mov
or
push
aaa
aaa
movsb
push
add
nop
mov
iret
jno
pop
add
shlb
xchg
mov
es
aad
jl
lods
push
sub
je
decb
push
in
imul
push
mov
movsl
cmp
jle
add
daa
xchg
movsb
or
aaa
addl
hlt
lods
cmpsl
pop
rcrl
xor
daa
xor
push
jnp
or
jle
cmp
cmp
xchg
xchg
pusha
andl
pop
or
and
sbb
sub
dec
movsb
add
pop
sbb
jo
jnp
push
inc
les
mov
nop
imul
mov
cmc
or
add
sub
inc
mov
and
rorl
call
pop
cmc
aaa
inc
scas
dec
mov
pop
and
shlb
lahf
add
xchg
aad
sbb
jp
scas
rcr
sub
stos
cmp
push
mov
jmp
sub
mov
lret
jb
add
push
fisubrl
pop
icebp
add
and
xchg
mov
jmp
outsl
mov
imul
mov
dec
jb
movsb
add
fs
jno
or
pusha
jb
fisubl
mov
pop
dec
and
add
xor
or
rorl
add
xor
sub
imul
sbb
xchg
cmp
inc
inc
push
ljmp
jns
push
sbb
mov
ss
xchg
mov
cmpsb
mov
xor
mov
les
sti
xchg
das
or
lods
or
cmc
scas
pop
mov
adc
aam
xchg
xor
inc
or
jmp
testl
cmp
xor
incb
or
xor
add
sub
aad
addb
test
fdivs
add
cmp
add
cmp
push
mov
xor
push
sbbl
stc
push
xor
rol
and
xchg
mov
dec
push
pop
not
fadd
cmp
lcall
fwait
icebp
xchg
inc
dec
cmpb
mov
xchg
add
bound
rclb
pop
xor
sub
jbe
xchg
shll
xchg
clc
mov
pop
adc
dec
aad
sub
test
pop
fmul
cwtl
jne
lods
cs
lods
cmp
cmp
lcall
sbbb
imul
mov
adc
popf
push
ljmp
jp
cmp
lret
cmp
inc
xchg
adcb
out
mov
sbbb
mov
addr16
sbb
cmpsb
add
or
and
inc
andb
mov
xchg
sub
loopne
and
loopne
push
loope
cld
inc
ret
or
imul
js
js
scas
xchg
add
out
ret
cmp
outsb
out
dec
pop
or
mov
add
jg
dec
in
sbb
mov
scas
aaa
and
test
ds
test
sub
push
negb
dec
mov
leave
test
lock
fcomip
cmp
lds
data16
or
cs
sub
bnd
aam
popa
mov
pop
mov
push
mov
in
mov
xor
jp
bound
sbb
fs
push
jb
imul
and
push
add
sbb
sbb
pusha
mov
or
cmc
sbbb
sbb
inc
lcall
les
out
mov
push
loopne
mov
and
jns
dec
push
pop
pop
daa
dec
mov
mov
outsl
sub
cmp
xchg
or
sar
cmp
dec
iret
jl
and
fidivrl
int
dec
push
mov
mov
cmpsl
push
repz
movsb
icebp
ja
xchg
adc
add
scas
pop
xor
xchg
dec
das
xchg
sub
shlb
sbb
mov
mov
add
mov
or
add
mov
or
sbb
iret
jecxz
and
mov
cmp
test
stos
mov
stos
sbb
add
xor
push
pop
pop
in
jp
js
leave
cmpsb
scas
movsl
or
jp
and
mov
cmp
jo
xchg
push
xor
enter
cmp
push
daa
pop
pop
sbb
mov
fs
sub
fistpl
add
and
sbb
sub
mov
jnp
or
inc
inc
icebp
sbb
pusha
and
out
push
out
addb
popf
sub
mov
hlt
sub
stos
xchg
pusha
pusha
divl
push
test
push
mov
lods
adcb
out
pop
in
lret
cmp
icebp
fsubrs
push
adc
inc
sub
push
cmc
sbb
push
dec
out
adc
inc
cmp
dec
dec
shll
sub
mov
pusha
inc
mov
xchg
loopne
mov
jb
shr
ret
int3
inc
repnz
sahf
inc
lcall
xchg
jo
scas
imul
mov
in
mov
gs
add
jecxz
rolb
das
andb
aad
sbb
sub
movsb
sti
add
mov
dec
push
cwtl
xchg
sbb
loopne
subb
adc
imul
push
mov
mov
inc
sti
mov
fmuls
daa
test
mov
mov
icebp
int
dec
les
cmp
rcrb
and
mov
mov
mov
push
mov
sub
out
rcrb
rorl
sbb
jge
sub
call
ror
dec
rcl
and
iret
sbbb
ret
and
pop
mov
insl
mov
pop
fwait
bound
mov
jge
out
xor
shl
mov
mov
cwtl
in
push
mov
or
nop
fwait
jl
insl
xor
mov
add
ds
cs
orb
dec
xlat
cmp
add
inc
xlat
movsl
in
xor
data16
jmp
into
or
ret
mov
sub
lds
shll
sbb
arpl
mov
sbb
and
cmc
mov
push
pop
fldcw
aam
fistps
dec
push
leave
rorb
push
adc
jno
inc
mov
xlat
fiaddl
or
add
repnz
push
gs
cwtl
add
sub
push
mov
or
popa
dec
das
mov
es
xor
mov
mov
xor
sub
lods
roll
or
sbb
inc
or
sub
gs
ljmp
mov
mov
in
in
push
mov
add
push
loopne
das
push
les
js
je
add
dec
mov
ret
popf
add
loop
jge
pop
andb
cmp
mov
mov
sub
mov
fwait
shll
popa
inc
push
test
xchg
test
cmp
xor
mov
mov
mov
or
inc
aam
add
push
pop
lahf
jle
stos
adc
ret
push
inc
stos
xchg
sbb
or
test
or
hlt
inc
inc
push
ud1
inc
insb
dec
je
mov
or
movsl
adc
mov
inc
insb
pop
dec
or
or
es
and
xchg
loope
mov
movl
loopne
ret
popa
add
pop
js
dec
test
arpl
inc
cmp
xor
add
jo
rorb
sub
loope
sub
and
sub
pop
shl
js
inc
add
aam
daa
negl
xchg
mov
xchg
aam
dec
add
xchg
pop
in
je
adc
adcb
sbb
add
push
lock
dec
xor
xchg
xor
pop
xchg
adc
sub
pop
movhps
dec
pop
outsl
adc
nop
arpl
jl
popf
mov
outsb
push
cmp
xchg
xchg
aas
mov
ds
push
test
pop
pop
push
mov
push
mov
cmp
sub
cmpsl
and
add
sub
sahf
and
adc
and
sbbb
sbb
inc
push
inc
cmp
add
xlat
les
and
lcall
inc
push
jb
sbb
jo
or
and
push
sahf
dec
inc
push
pop
sbb
addl
sub
add
xorb
and
adc
ss
ja
stos
pop
add
push
test
jae
subb
add
mov
lds
inc
outsl
adc
lret
nop
fisttpll
mov
add
inc
in
inc
dec
mov
aad
adc
jmp
push
pushf
test
mov
push
stos
push
sti
xchg
mov
mov
pop
xchg
roll
fisttps
ljmp
mov
shlb
je
push
xchg
mov
cmpsb
test
or
push
hlt
addb
inc
dec
hlt
arpl
adc
mov
lods
in
add
js
rcrb
push
sarl
dec
inc
mov
call
sub
push
or
mov
mov
cmp
and
mov
fistps
adc
aas
inc
inc
adc
mov
int
push
add
xor
lods
stc
nop
sbb
fildl
leave
arpl
shlb
and
xor
xchg
outsl
aaa
add
fdivrl
in
pop
xchg
mov
scas
and
sub
add
nop
sbb
jg
call
outsl
dec
ror
jl
lock
out
lds
sbb
or
mov
jne
xchg
pop
sysenter
sbb
sbb
js
sub
sbb
add
rcrb
pushf
inc
arpl
ret
xlat
sub
jecxz
jmp
cmp
fstpt
cmp
bound
mov
jmp
mov
adcb
add
inc
mov
fcoml
inc
rolb
mov
and
jl
xor
adc
call
call
sub
cmp
test
sbb
daa
jg
lods
inc
push
pop
mov
insl
daa
inc
hlt
jecxz
mov
jno
mov
mov
inc
or
fsubs
xchg
and
jbe
sub
jmp
xchg
jne
xor
into
neg
push
rcrb
and
or
mov
or
inc
mov
fisubs
or
add
ja
add
adc
sbb
ds
insl
loopne
cmp
loop
loope
aaa
mov
fwait
adc
dec
icebp
xor
pushf
cmp
les
xor
pusha
stc
test
xor
enter
and
andl
xor
cli
ss
adc
xlat
filds
cmp
shll
cmp
dec
lret
setg
mov
das
mov
in
shrb
or
cmp
fildl
and
add
jp
adc
fildl
jnp
das
les
push
shlb
shl
xor
mov
sbb
mov
push
xchg
addb
pop
ljmp
shlb
ljmp
insl
or
stc
push
jmp
pusha
jecxz
jge
cmc
sbb
xchg
jbe
and
add
rcr
push
inc
ret
or
or
scas
loop
mov
dec
add
ljmp
push
rcll
push
pop
out
out
mov
cmp
and
fadds
push
sarb
push
xlat
push
adc
pusha
xchg
fsubrl
aas
mov
jae
xorb
sbb
adc
add
jbe
ret
arpl
das
xor
sbb
test
cld
sub
lds
cmp
jo
mov
stos
mov
push
mov
jb
mov
aas
xor
jle
cmpsl
clc
faddl
das
or
int3
or
scas
rcrl
pop
pushf
cmp
or
ret
leave
adc
mov
cmpsl
out
add
adc
dec
fadd
dec
gs
pop
adc
pop
jmp
mov
or
imull
inc
xchg
aad
adc
push
push
pop
fimull
movsb
lock
fistps
sti
loopne
mov
call
sbb
xchg
pop
sbb
inc
cwtl
xor
and
jne
mov
push
fidivs
pop
sub
mov
mov
mov
lahf
ret
cmp
icebp
and
pop
cmp
xlat
inc
mov
adc
pop
call
cmp
daa
sbb
mov
sbbb
mov
lock
xchg
push
scas
cmp
sbb
in
loope
pushf
int3
inc
adc
scas
int
bound
mov
xchg
subl
sti
push
and
pop
cmp
test
add
jb
loopne
xchg
dec
pushl
pop
adc
adc
xor
shrl
mov
cld
rcrl
ret
push
cltd
xor
xchg
push
imul
int3
pop
ljmp
xchg
inc
or
sub
add
sahf
in
sub
mov
add
mov
cmp
mov
movsb
repz
clc
xor
pop
bound
fisubs
subl
imul
inc
flds
out
xor
rep
dec
cmp
rorb
in
int
insl
adc
and
daa
or
lds
inc
mov
push
daa
mov
mov
push
pushf
or
sbb
mov
cmp
loopne
mov
add
test
jle
mov
xor
mov
mov
rorl
sti
inc
lods
mov
jo
mov
jne
mov
sahf
inc
sbb
xor
imul
loopne
sbb
lea
leave
mov
loope
movsl
push
pop
mov
jne
shrb
lar
push
fistl
cmpsb
sbbl
jmp
ret
int3
push
push
cmp
mov
xchg
mov
jbe
pop
pop
jno
mov
repnz
pop
pop
imul
fbld
jae
rcrb
push
and
cmp
mov
popf
pop
mov
mov
das
mov
push
and
mov
dec
rcl
push
adc
pop
das
lcall
shr
pop
outsl
push
pusha
int3
or
xchg
sbbb
or
sbb
call
sbb
mov
scas
lds
shrl
mov
dec
cmp
lock
hlt
mov
popf
add
faddl
mov
ljmp
pop
lods
stos
add
mov
je
sub
adc
add
outsb
out
rolb
jo
aad
jp
sub
add
pop
enter
cmp
cmpsl
fistps
cmpsl
inc
xor
add
imul
scas
loop
adc
lret
inc
in
or
xor
icebp
lock
in
ficomps
sub
push
mov
rcr
mov
scas
and
jb
mov
add
stos
jns
xchg
xchg
mov
aaa
ret
or
lods
or
dec
mulb
mov
xor
jno
sti
and
es
sub
loope
adc
mov
outsl
pop
mov
movsb
jne
fldl
mov
mov
adc
adc
cmc
int3
mov
adc
push
mov
push
inc
sbb
pusha
mov
xchg
xor
insb
or
int
int
aaa
mov
mov
insb
adc
test
popa
push
xchg
inc
aaa
insb
and
sbb
and
and
and
out
cltd
pusha
pop
inc
pop
push
ja
push
xlat
push
fdivs
pop
add
notb
lds
pop
pop
pop
je
add
stos
push
cld
fstps
adc
jl
call
mov
subl
xor
lods
call
mov
faddl
and
aas
enter
or
or
sub
mov
pop
das
mov
xchg
cmp
adc
dec
or
fisubl
mov
push
adc
scas
push
sahf
fsubs
add
notl
stc
les
push
push
into
ds
clc
mov
pop
jnp
adc
mov
mov
lods
sub
mull
into
aaa
push
loopne
insb
ss
sub
xor
stc
mov
pop
or
pop
sub
adc
pop
cmp
pop
inc
mov
xchg
jmp
in
je
int3
mov
and
loop
bound
jp
push
sub
mov
sub
sbb
xor
xor
stos
inc
icebp
jo
xor
add
mov
mov
xchg
fsubrs
push
lret
es
pop
fdivs
xor
cmp
int3
test
les
aas
mov
jo
sbb
rorl
sbb
and
cmp
pop
sub
or
pop
rorl
icebp
xchg
adc
out
inc
dec
cmp
push
stos
push
sbb
outsb
xor
and
adcb
push
push
arpl
shll
lock
push
sbb
shll
leave
sbb
add
push
adc
jge
daa
push
insl
mov
mov
xor
out
outsl
imul
ljmp
dec
aaa
push
mov
xor
inc
mov
pop
repz
test
mov
adc
int3
into
xchg
mov
pop
and
enter
mov
xorl
bound
xchg
fucomp
int3
push
or
mov
sti
fisubs
adc
fistps
xchg
xlat
ror
xchg
and
icebp
rcrl
sbb
ljmp
hlt
inc
lods
add
pop
stc
popl
or
xchg
inc
cmpl
je
jmp
adc
in
ret
mov
daa
sub
sub
pusha
adc
dec
mov
add
mov
ret
hlt
pop
nop
mov
pop
pop
push
jg
pop
int3
sbb
clc
std
adc
or
inc
cmp
inc
das
cmp
or
mov
popa
jb
test
sub
rcll
fiaddl
sub
pop
shlb
test
sarb
pop
xlat
je
xchg
mov
mov
inc
dec
mov
mov
or
sbb
cmp
sub
adc
ret
mov
iret
xorb
cmp
push
sub
xchg
sub
rcrb
push
lods
pop
stc
nop
xchg
test
mov
lahf
push
or
jp
ret
les
pop
les
sub
and
iret
inc
cmp
pop
lds
fisubrs
xchg
push
and
addl
pcmpgtd
loope
sub
loop
mov
std
lds
sub
sbb
and
mov
rcll
nop
xor
enter
cmp
and
repz
test
loope
inc
sbb
sub
lret
sbb
out
mov
mov
out
pushf
pop
xchg
lods
sbb
lea
mov
in
dec
aas
js
adc
and
test
daa
and
mov
mov
add
lea
adc
enter
hlt
cmp
je
es
xor
mov
jbe
or
mov
mov
add
aam
jns
stos
js
shrb
and
dec
mov
and
pop
cwtl
rcll
jnp
insl
iret
dec
cmp
stos
das
aam
fs
pop
iret
ret
cli
int
js
mov
and
push
cmp
rcrl
add
roll
pop
mov
or
mov
adc
outsl
mov
ds
cmpsb
inc
jnp
scas
lea
mov
cmp
int
popl
mov
inc
mov
jp
inc
les
stos
mov
rcll
adc
and
push
inc
push
and
sub
lods
jecxz
inc
mov
push
inc
and
negl
mov
adc
inc
sub
cmp
and
push
mov
rorb
aad
int
xchg
in
leave
test
movsb
xchg
dec
xor
adc
lret
or
push
xchg
xchg
sub
nop
pop
lret
in
or
cmpsl
dec
mov
jno
xlat
mov
les
roll
inc
mov
adc
enter
adc
xchg
xchg
bound
icebp
fisttpll
xchg
mov
cmp
outsl
lcall
aas
jns
movsb
andb
sbb
cwtl
adc
xchg
push
test
es
xchg
pop
sti
xchg
mov
mov
sbb
push
sub
inc
lahf
jnp
sti
int3
loopne
add
loopne
add
lock
int3
mov
cs
jnp
push
lds
cs
lods
or
lock
pusha
adcl
stos
xchg
sub
lods
sar
pop
je
fwait
cmp
jbe
push
mov
shlb
repnz
jnp
push
and
dec
push
mov
xchg
data16
xchg
mulb
lretw
insb
xor
test
push
out
inc
sbbb
or
inc
roll
jle
and
addr16
and
mov
mov
xor
pop
xor
ret
sub
popa
push
inc
lods
mov
mov
jl
and
outsb
lret
jnp
xor
mov
xor
lcall
sbb
cmp
ja
jb
fcomi
js
cmp
test
adcb
xor
in
sub
jge
pop
cmp
pushf
and
add
push
rol
jnp
faddl
sub
lds
enter
je
adc
mov
mov
push
dec
push
mov
fsubp
adc
sub
shl
sarb
adc
push
lahf
add
pop
pop
mov
cmpsb
sub
call
cmp
scas
push
movsb
faddp
xor
push
shlb
push
adc
addr16
loop
lahf
cld
mov
aam
in
mov
dec
and
hlt
sahf
xor
out
jae
stos
repnz
sbb
das
or
pop
aad
in
xor
xchg
push
lret
stos
sub
and
xor
inc
inc
ret
shlb
or
sbb
cmpl
lcall
xchg
mov
sub
mov
adcb
dec
out
insb
les
or
mov
push
addr16
mov
cs
std
rol
and
xchg
xchg
stos
sbb
lret
add
pop
rclb
mov
add
add
cmp
push
adc
div
cmp
sbb
mov
push
jmp
leave
cmp
cmpsl
gs
loope
mov
adc
mov
stc
pop
clc
es
enter
xchg
outsl
mov
add
dec
icebp
jge
add
inc
rcrb
in
jne
inc
ret
cli
add
jmp
rorb
call
mov
les
xchg
jge
pop
iret
push
dec
shlb
mov
sarb
xor
popa
adc
or
add
push
push
mov
aaa
shrb
lock
cld
or
rorb
inc
fmull
cmp
push
fldt
divl
scas
leave
in
jae
push
cltd
aaa
jb
dec
mov
jl
dec
orb
test
adc
push
cmp
pop
daa
inc
mov
inc
testb
outsl
inc
add
add
add
inc
mov
or
ret
adc
xor
out
test
pop
xor
inc
adc
push
jnp
adc
add
in
popf
mov
in
insl
leave
inc
xchg
movsb
sub
pop
mov
dec
jp
xchg
clc
pop
xor
popa
int
mov
jno
sbb
stc
icebp
add
mov
sbb
test
or
enter
jb
mov
pop
scas
jmp
inc
int3
insb
mov
loop
add
mov
or
xchg
lods
add
push
enter
std
sbb
ret
out
push
and
sub
inc
insl
popf
or
sbb
pop
inc
cmp
mov
or
mov
pop
scas
adc
daa
and
inc
xor
rorl
xor
rcrb
je
sbb
pop
roll
inc
sub
ljmp
mov
push
push
add
mov
add
or
clc
xlat
out
arpl
das
cmp
inc
jp
popf
mov
cmp
into
push
loopne
push
lea
or
dec
jo
rclb
outsb
cmp
dec
stos
sti
in
sub
adc
xchg
das
cmp
mov
pop
add
in
mov
mov
xchg
aad
test
adc
xchg
icebp
mov
jno
mov
ror
data16
repz
xor
push
xchg
inc
int
call
lret
and
and
xchg
xorl
sar
mov
les
roll
pop
adc
jno
pop
jb
push
int3
inc
popf
std
pop
inc
mov
lds
mov
mov
jle
xchg
xchg
hlt
push
fnsave
cwtl
repnz
and
mov
fildl
xchg
and
pop
mov
xchg
mov
test
and
scas
push
aam
aam
sarl
movsb
stos
push
jbe
adc
les
rolb
xor
sub
jmp
lcall
sub
and
in
jnp
loope
pusha
mov
xor
mov
jg
add
fisttpll
fldt
adc
ret
xchg
ret
nop
stos
ss
aam
dec
jg
cmp
push
pusha
dec
clc
ja
ret
add
lods
mov
movsb
call
ret
xchg
jmp
xor
cmpsl
repz
jmp
mov
and
dec
pop
rorl
mov
xor
jo
orb
mov
int
pusha
cmc
sbb
and
shll
fwait
lock
and
add
and
mov
and
test
adc
aad
xor
sub
iret
pusha
jmp
arpl
dec
dec
mov
and
or
push
xor
notb
int3
sbb
lock
adc
adc
sarb
push
mov
addl
xchg
popa
and
mov
fdivrs
push
jo
dec
add
sbb
sbb
and
mov
mov
xor
shlb
lret
test
in
pop
frstor
dec
dec
dec
js
push
lret
sub
sahf
mov
mov
or
dec
dec
push
lret
sub
fildll
das
sbb
jae
fisubrl
ret
xor
fcomp
les
push
lds
xor
les
cwtl
adc
testb
pop
aaa
pop
in
pop
sbb
xchg
fsubrs
fstpt
xor
xchg
add
dec
pop
and
pop
popa
mov
rorl
js
addb
sub
pop
cmp
xchg
aam
popl
dec
adc
cmp
push
xor
fs
lods
leave
push
cs
mov
push
int
push
stos
adc
cwtl
push
add
lock
xchg
in
jp
daa
jmp
mov
sbb
dec
push
adc
sub
mov
out
in
mov
cld
mov
test
popa
sbb
stc
hlt
lcall
daa
out
xlat
cmp
inc
mov
jmp
aad
xchg
pop
adc
push
popf
mov
xchg
or
dec
es
and
xchg
push
mov
mov
hlt
sbb
pop
xchg
arpl
mov
addr16
popf
mov
rolb
mov
cmp
dec
mov
mov
lods
shrl
and
pop
call
dec
es
or
mov
out
adc
lret
lea
divb
xor
rclb
clc
cli
into
outsb
inc
roll
int
mov
inc
or
push
pusha
in
popf
xor
mov
pusha
cwtl
sbb
lds
pop
push
outsl
and
inc
int
sahf
es
ja
not
inc
je
arpl
or
cmpsl
mov
and
add
lods
and
xchg
dec
arpl
pop
mov
lods
cmp
aad
andb
nop
aas
ja
rol
adc
dec
fnstsw
push
mov
or
out
xchg
xchg
in
sub
sub
fisubrs
sbb
jmp
lock
mov
push
cld
mov
mov
fisttpl
inc
iret
and
xchg
insb
or
cmpsl
test
jecxz
sbb
mov
mov
jle
scas
insl
ret
mov
cwtl
inc
xchg
repz
pop
lret
xor
daa
pop
sub
stos
xor
dec
add
cs
and
cmp
lds
js
in
and
jo
fcomps
mov
pop
or
inc
fisubrs
in
lds
xchg
filds
mov
xor
inc
dec
cwtl
shlb
xchg
push
xchg
mov
add
ret
fimull
xlat
flds
add
sub
xchg
les
ret
aaa
aaa
and
loopne
inc
scas
push
mov
test
stos
cmpsb
ret
lods
divl
stos
xchg
test
test
mov
mov
add
mov
pop
push
aam
push
and
pop
ja
add
inc
mov
inc
adc
mov
xlat
test
sbb
mov
xchg
sarl
int
stos
sub
dec
dec
cld
push
lods
mov
adc
in
add
or
inc
fdivrl
or
push
in
cmp
std
or
pop
jmp
sbb
push
add
icebp
lock
das
add
cmp
adc
cwtl
mov
mov
aaa
dec
sbb
inc
test
xor
xor
js
xlat
jmp
data16
int3
or
and
ret
int
pop
mov
mov
add
dec
cltd
lock
out
pop
or
xor
push
aas
push
test
sahf
iret
xor
js
and
dec
int
ja
insb
iret
mov
leave
iret
in
movsl
pop
or
test
xor
arpl
movb
jno,pn
xor
xchg
sbb
adc
scas
rorb
adc
je
pop
loope
loope
jbe
mov
fwait
sub
jmp
cmp
aam
cmp
sbb
loope
call
push
adc
push
movsl
pushf
push
push
je
ret
mov
push
push
daa
sbb
adc
nop
enter
xor
dec
sbb
gs
adc
add
call
and
into
jo
mov
ljmp
gs
xor
add
dec
mov
inc
fdiv
and
in
add
shlb
xchg
rol
pop
cwtl
imul
fwait
lret
in
xchg
test
jne
jne
fldenv
cmp
dec
and
pop
add
push
cmp
and
xor
jp
and
pop
aam
mov
ficomps
cwtl
sub
rcll
xchg
lock
gs
cmpsb
js
sarb
or
cmp
outsl
and
mull
imul
mov
mov
jp
sbb
fadd
push
inc
in
repnz
data16
fsts
mov
xor
sub
adc
push
aam
shrb
aad
sub
jp
jno
sbb
bound
adc
add
jns
mov
scas
jae
jp
sbb
xor
or
les
xchg
pop
pop
inc
dec
sbbb
mov
push
inc
sbb
sub
or
bound
sti
fwait
add
xchg
jno
push
pop
scas
push
adc
lods
cwtl
sub
sub
lcall
sbb
jbe
cld
or
xorb
mov
sbb
mov
dec
push
jne
mov
mov
test
inc
roll
or
test
jne
stc
mov
or
pop
popf
mov
scas
lret
cmp
or
outsl
pusha
sbb
or
xor
ds
mov
jnp
stos
loop
mov
mov
sub
or
pop
add
mov
cmpsb
cmc
jo
repnz
xchg
ret
sbbb
push
cmp
lds
mov
and
mov
ja
stc
xor
jns
cmp
stc
xchg
cmp
lds
cmovle
add
inc
stos
pop
pop
hlt
mov
adc
mov
inc
popa
sbb
and
push
jae
mov
stos
mov
cwtl
gs
es
cs
cmp
cmp
cltd
sub
out
xor
and
mov
and
jmp
add
jb
call
jno
mov
xchg
or
dec
rcrb
aas
std
jb
dec
inc
jle,pn
aas
arpl
pop
lcall
lock
mov
adc
clc
mov
ret
fists
aad
das
mov
ret
imul
jno
add
test
iret
inc
inc
in
pusha
adc
xor
add
loope
mov
popa
xor
mov
clc
mov
and
out
xor
inc
rorb
adc
cld
cwtl
xchg
adc
lcall
push
sub
mov
jo
adcl
cmp
aad
andl
jnp
cmp
add
out
ret
jl
outsb
fwait
jbe
je
jge
lcall
daa
rorb
xlat
push
mov
push
adc
shl
jmp
ret
fwait
adc
movsb
pushf
mov
mov
aas
mov
cmc
xchg
inc
mov
negl
test
sbb
cmp
adc
jp
stos
mov
sbb
sbb
imul
mov
movsb
popa
xor
and
dec
mov
xchg
add
mov
xor
cmp
and
mov
fld
les
xchg
cmp
jnp
add
insb
pop
jl
push
std
mov
xor
and
xor
dec
jbe
das
iret
mov
iret
mov
cmp
mov
pop
sub
jmp
stos
xchg
sti
icebp
adc
push
push
in
pushf
adc
add
pop
mov
jbe
pop
pop
sbb
mov
sbb
pop
mov
div
das
mov
push
fstps
dec
adc
adc
adc
inc
mov
dec
cwtl
add
sbb
frstor
cwtl
mov
pop
mov
adcb
in
add
repz
mov
shr
inc
sbb
xchg
mov
push
add
jmp
icebp
sub
mov
cmpsl
pop
push
mov
cmpb
xchg
push
ret
aad
ret
mov
shrb
mov
jp
lahf
shrb
shll
sbbb
mov
jnp
mov
push
sbb
les
lahf
pop
xor
pop
cld
inc
test
xchg
add
aaa
nop
xor
add
or
lcall
or
adc
xor
mov
int
je
in
sub
xchg
daa
es
jo
mov
stos
out
cmp
nop
add
sub
sub
add
scas
push
push
sahf
sbb
fstpl
imul
push
call
or
adc
cmp
mov
xchg
add
int3
int3
imul
out
xor
shll
pop
push
pop
sarl
mov
iret
popf
pop
adc
ljmp
stos
mov
leave
nop
lods
jns
hlt
xlat
roll
aam
addb
mov
ret
cmp
mov
jnp
inc
inc
or
in
push
lods
and
xchg
pop
push
inc
cmpsl
and
jnp
pop
dec
dec
push
sub
mov
aaa
jne
mov
jnp
cmp
call
pop
loopne
int3
and
mov
pop
jns
cmp
push
adc
and
mov
dec
lcall
xor
lret
cmpsl
gs
and
inc
push
push
ficoml
aam
dec
lcall
ret
lahf
gs
stos
and
push
or
inc
imul
xchg
pop
mov
leave
jnp
mov
fs
and
add
pop
and
and
or
cmpsl
mov
cmp
xor
xchg
fs
xchg
or
and
cmp
jns
subb
add
movsb
int
daa
cmp
stos
sub
arpl
repz
xchg
sbb
mov
and
or
dec
mov
jnp
sub
sub
cmp
push
in
inc
add
adcl
lds
leave
add
push
adc
jmp
push
xchg
imul
iret
mov
cmc
xchg
or
rolb
add
push
xor
xchg
addr16
das
mov
cwtl
add
dec
movsb
adc
out
xor
shlb
xor
rcll
adc
pop
add
insl
mov
sub
jae
movsb
loopne
pop
xchg
or
push
cmp
add
dec
loop
stos
arpl
mov
call
hlt
stos
scas
call
sub
pop
and
sub
or
cmp
fisttpll
test
push
mov
cwtl
repz
xchg
push
and
mov
pop
aaa
loopne
loopne
outsl
inc
in
xchg
dec
and
rclb
lods
or
lea
mull
aad
adc
xor
push
inc
push
add
cwtl
sbb
add
xchg
pop
shrl
popf
popf
or
or
fadd
push
mov
outsb
jbe
call
xchg
lds
jne
mov
mov
jnp
sbb
sbb
js
aaa
scas
sbb
imul
jl
dec
jne
pop
xorl
xor
es
xor
bound
xorb
push
xor
and
aaa
aam
std
pop
sub
shrl
aam
cmp
sub
jle
sbb
inc
sub
cmp
add
stos
sub
xor
pop
jg
push
dec
or
sub
ljmp
xor
mov
jg
xor
ss
adc
sub
push
jb
test
daa
ja
mov
or
shrl
inc
out
push
or
xor
call
pop
pop
insl
repz
and
ljmp
mov
adc
push
jmp
xor
pop
enter
xchg
and
jecxz
xor
cmp
pop
xor
jbe
aaa
test
sbb
adc
aam
lcall
pop
cli
jle
pusha
dec
push
out
xchg
aam
rorl
cmpsl
mov
xchg
xor
mov
xor
mov
and
add
dec
or
mov
leave
jp
xchg
adc
add
jmp
adc
add
cmp
cmpsb
mov
sbb
push
xchg
sub
sub
sub
adc
es
xchg
dec
fidivs
mov
add
lds
xchg
ret
add
and
movl
insb
stos
test
jo
dec
or
cmpsb
and
call
out
mov
dec
addb
jecxz
and
mov
mov
aas
xor
or
aam
mov
popf
in
and
adc
outsl
lea
test
push
ja
out
or
sahf
rcr
add
pushf
das
std
mov
testl
in
xor
or
mov
dec
or
aam
mov
inc
aaa
ret
addr16
and
insb
sub
test
inc
xor
push
adc
or
lret
jb
fucomi
cmp
push
rorb
push
and
ds
adc
scas
jp
xor
and
mov
hlt
adc
scas
pop
xor
jp
mov
mov
das
sbb
out
mov
pop
ret
mov
adc
lds
cwtl
mov
rclb
adc
dec
adc
pop
fimull
push
int
aas
cmp
mov
dec
sbb
popa
adc
and
or
aad
out
sub
shlb
stos
add
sbb
add
jle
subb
int
sbb
gs
fistl
and
adcb
push
add
lret
mov
out
mov
or
jne
add
inc
inc
or
ss
mov
pop
adc
inc
cmp
filds
xchg
movsb
mov
aaa
outsl
sub
xor
cmp
and
sbb
inc
inc
xchg
inc
lret
subb
clc
aas
push
xor
and
js
test
test
mov
add
stos
into
sbb
push
mov
mov
mov
inc
or
ret
pop
sub
xor
push
inc
adc
insl
bound
xchg
loopne
test
and
xchg
add
sbb
cli
and
js
mov
xchg
xchg
addb
jge
push
stos
inc
xchg
enter
sbb
xor
popa
inc
dec
insb
call
xchg
test
inc
enter
sub
and
mov
sbb
daa
push
jmp
ljmp
xchg
cwtl
push
out
aad
cmp
mov
sub
ljmp
jne
add
in
add
sbb
xchg
icebp
es
sbb
and
or
push
add
mov
faddl
ljmp
sub
mov
mov
sbb
iret
inc
imul
fldl
dec
xor
add
sbb
or
cmp
aaa
dec
push
scas
push
xchg
or
je
mov
xor
pop
lea
js
xchg
add
fucom
and
cmp
jecxz
out
mov
cmpsb
push
je
mov
jo
xchg
daa
adc
and
rcrl
mov
sub
loope
pop
adc
cmp
push
lock
jmp
js
fdivs
jl
mov
mov
push
lahf
lea
pop
call
adc
xor
bound
or
les
ret
mov
ljmp
test
mov
loop
das
lret
mov
add
dec
cltd
push
ficoml
jae
dec
es
or
jnp
ret
or
push
jnp
push
inc
sub
xor
leave
incb
sti
outsl
ret
sbb
movsb
rolb
shll
leave
lret
movsl
sbb
add
mov
adc
xchg
lret
xchg
push
push
outsl
in
stos
in
mov
mov
outsl
lahf
aad
fldenv
fsubl
adc
push
lds
rolb
dec
movsb
or
aaa
popl
and
test
lea
lcall
rorl
pop
inc
out
or
movsb
xchg
mov
hlt
enter
inc
mov
pop
in
add
sub
xorb
ret
push
or
mov
mov
push
sahf
push
arpl
cmc
movsb
pop
movb
cmp
pop
sub
popf
in
mov
inc
push
cmc
push
js
sub
shl
and
jg
ficomps
mov
pop
mov
inc
mov
and
les
xor
fdivs
jge
mov
jg
mov
xchg
shrl
add
out
daa
xchg
mov
data16
cmp
push
and
inc
daa
adcl
jne
pusha
fwait
mov
inc
mov
push
mov
dec
test
nop
js
in
or
push
cmp
push
divb
lods
xor
rolb
pushf
fisttpl
inc
or
push
adc
iret
sbb
stos
xor
scas
sub
fmull
inc
fistpll
movsb
sub
inc
jl
lods
cwtl
jg
sarb
cmp
test
cmp
jp
rorb
pop
mov
jl
test
lahf
push
sbb
and
sbb
cmp
jno
adc
fs
inc
push
xor
sbb
xchg
shl
fisubl
jne
jge
das
push
jge
add
ret
arpl
pop
jb
sbb
or
pop
movsb
add
add
stos
xchg
cmp
mov
dec
sbb
xchg
orb
or
shlb
inc
pop
or
add
dec
jne
xchg
flds
icebp
add
or
fldcw
insb
mov
jno
pop
sub
sbb
or
dec
mov
iret
mov
xor
orb
push
in
test
fucomi
add
cmpsb
sbb
add
or
cmp
adc
pop
shlb
mov
aam
or
aad
imul
adc
rorl
lods
mov
int3
test
loop
xor
jns
rolb
adc
mov
test
aad
inc
add
sbb
aaa
add
sub
and
lahf
and
lret
shll
and
pop
mov
fldcw
or
adc
and
xchg
pushl
mov
sub
test
mov
hlt
mov
lahf
sbb
jns
push
add
push
ret
jg
push
push
sbb
mov
and
push
jl
xchg
lods
jge
jmp
inc
jle
inc
adc
or
jl
and
jl
sbb
xor
pop
pop
jmp
xor
jge
test
jge
sti
repz
sub
cmp
aaa
ret
lret
mov
cmp
add
and
pusha
mov
mov
fisubs
inc
ret
push
add
or
sbb
popf
test
adc
pop
sub
xchg
add
or
sub
xchg
xor
fldcw
es
mov
mov
xor
fstpt
cltd
jb
test
jmp
xor
adc
into
out
pop
and
mov
push
pop
jae
test
or
ja
cmp
loope
popf
push
scas
mov
sbb
sub
icebp
and
shll
push
loopne
mov
je
mov
jecxz
aam
add
push
xor
js
lahf
inc
push
sbb
xor
adc
adc
sahf
sti
js
or
outsb
mov
jge
push
sbb
mov
xadd
push
fmull
mov
sarl
hlt
mov
mov
adc
js
aam
or
pop
imul
xor
mov
inc
sbb
jae
jns
jecxz
jb
int
adc
mov
cs
pusha
xchg
sbb
and
mov
je
sub
lock
and
sub
cmp
test
push
inc
inc
sub
xorl
mov
xchg
es
or
mov
adc
push
cmp
push
xor
and
or
adc
mov
xor
adc
pop
inc
data16
xchg
adc
lds
xor
jae
scas
ljmp
mov
scas
ds
cmpl
xchg
inc
sysret
arpl
or
jb
ret
xlat
adc
mov
mov
sbbb
lock
add
push
adcb
shl
adc
test
jmp
ret
and
popa
mov
imul
cmp
rcpps
ss
loopne
xchg
jae
sbb
aam
mov
ret
sub
out
adc
xchg
push
inc
jecxz
sahf
pop
inc
inc
scas
icebp
shrl
rolb
mov
inc
mov
mov
and
adcb
add
mov
xor
pop
ret
add
ljmp
or
xchg
hlt
jecxz
add
sbb
inc
int3
xor
xor
leave
ret
or
inc
sub
add
daa
mov
stos
jae
scas
ror
push
inc
mov
push
sarb
dec
adc
pusha
push
push
mov
pop
jge
jge
add
jbe
gs
push
in
pushf
add
or
jo
mov
sbb
sub
in
adc
test
xchg
adc
mov
mov
inc
fnstsw
imul
aad
inc
xor
adc
xor
inc
aam
faddl
mov
lret
or
or
mov
push
mov
and
stos
jae
popa
add
in
mov
cld
xor
dec
aad
sbb
push
adc
jl
or
xchg
jmp
ljmp
pop
nop
mov
pushl
inc
push
push
jl
add
orl
stos
in
add
ss
or
outsl
cltd
aaa
dec
inc
mov
dec
fcoms
mov
push
and
mov
add
fisttpll
into
fwait
add
pop
notl
push
cmp
movl
and
andb
pusha
jnp
xchg
bound
push
push
push
jmp
lret
testl
cs
adc
ret
out
std
xlat
ret
leave
and
jno
daa
sbb
or
pop
aas
lahf
cmpsb
loop
ret
pop
js
arpl
mov
jge
pop
jae
test
adc
inc
cmp
pop
xor
and
jae
mov
out
adc
stos
fwait
adc
jge
pop
rcl
and
adc
xlat
testb
cmp
inc
pop
dec
cmc
fnstcw
test
es
jo
jge
pop
cs
push
add
loopne
adc
imul
push
and
add
xchg
jo
fstps
mov
mov
mov
jae
shll
jge
sub
sbb
mov
mov
mov
movsl
popa
xchg
divl
movsl
xor
mov
les
mov
lock
jno
cmp
sub
idivl
mov
and
sarl
test
jmp
pop
push
push
xchg
or
sbb
rcrl
loop
sbb
sub
sbb
daa
cmp
fxtract
push
sub
mov
lods
out
pop
aam
call
mov
stos
push
filds
xor
adc
cmp
push
add
inc
js
and
or
arpl
jae
cwtl
inc
les
cmpsl
lcall
push
nop
cmpl
xchg
cmp
mov
scas
mov
xchg
mov
clc
sbb
inc
daa
sbb
mov
pop
push
push
adc
mov
ja
daa
call
cwtl
stos
sbb
mov
in
loopne
jae
iret
sub
mov
push
mov
ljmp
stos
xchg
fwait
sbb
aam
out
xchg
test
lock
jp
insb
cmp
int3
in
jl
js
dec
es
pop
mov
lcall
jae
add
pop
sti
pop
jg
and
ljmp
cli
pop
sub
cmpsl
ja
jnp
push
jmp
or
jmp
subb
cmp
sbb
scas
and
add
sub
mov
and
or
mov
fstpt
jns
fldcw
fimuls
pop
xchg
mov
jmp
lock
push
aam
lods
xor
adc
add
rcl
adc
outsl
sbb
emms
pop
pop
call
adc
lock
leave
push
popa
push
movsl
faddl
scas
mov
sbb
popa
xlat
rcl
fwait
stos
dec
or
in
in
jo
jbe
aaa
js
sub
dec
dec
sub
mov
pusha
inc
outsb
imul
jno
jno
mov
push
pop
xor
inc
lods
xchg
mov
inc
sub
je
test
in
fimull
and
cmp
insb
push
mov
frstor
xchg
mov
jge
xlat
mov
les
pop
mov
clc
imulb
jno
add
add
roll
inc
ljmp
adc
push
pop
add
scas
lea
push
lea
xchg
sub
add
sbb
or
les
bound
jb
sbb
add
test
test
mov
mov
rorb
lds
push
add
lods
ficompl
pop
pushf
pop
sbb
mov
dec
mov
pop
inc
mov
jecxz
push
scas
shrl
cmp
movsb
lods
mov
inc
mov
ljmp
loop
sbb
stos
inc
repnz
ljmp
jecxz
imul
mov
cltd
sahf
sub
int3
lret
repnz
pop
dec
aam
pop
pop
das
daa
lahf
and
cmpl
mov
and
mov
sub
push
push
aas
popa
sub
mov
sub
ficompl
bound
mov
aaa
sbb
js
mov
pop
or
xchg
adc
cmpsl
in
test
adc
mov
sahf
inc
cmp
jmp
shll
xchg
push
xchg
mov
add
and
call
aad
lea
mov
popf
shl
and
testl
dec
sbb
mov
add
mov
dec
lds
mov
adc
mov
jmp
xor
lret
bnd
cwtl
jne
xchg
add
daa
loopne
add
test
aad
jne
mov
adc
mov
mov
and
popa
and
stc
ljmp
outsl
stos
mov
jns
add
test
adc
sub
add
das
mov
xchg
cld
cli
mov
rcll
stos
std
icebp
daa
loop
pop
push
mov
outsl
cmp
aad
jo
push
int
inc
cmc
or
std
xchg
shrl
subb
lods
sub
rcrl
dec
pop
in
inc
stos
sbb
sub
sbb
outsl
or
push
sub
subl
pop
cwtl
adc
jns
int3
filds
in
jb
mov
add
push
xor
out
dec
jge
dec
roll
iret
out
dec
xchg
push
mov
notl
mov
fwait
mov
jo
fsubs
mov
les
pop
push
scas
arpl
cmp
outsb
lret
repnz
shlb
xor
enter
xchg
cmp
out
add
push
popf
hlt
shlb
push
pop
adc
jno
push
or
sbb
xor
ja
xor
js
fdivrs
insl
xchg
jg
add
inc
adc
fwait
xchg
mov
inc
xchg
jmp
test
push
xchg
stc
add
push
pop
push
cmp
mov
mov
dec
jecxz
add
xchg
mov
and
and
or
into
dec
mov
xchg
dec
fiadds
movsb
push
sbb
imull
dec
push
lock
cmc
mov
jmp
mov
adc
repnz
clc
es
fstl
mov
aam
je
testl
jmp
push
mov
xor
orl
btr
xchg
orl
andb
and
push
insb
mov
pop
push
daa
inc
out
movsl
xchg
in
cmp
popf
pop
mov
es
shrl
sarl
inc
xchg
cmp
mov
into
push
shll
sub
into
sbb
stos
ret
cmp
jle
addb
jae
rclb
lcall
arpl
inc
daa
ret
sub
mov
js
test
cmp
jb
pushf
test
sbb
cs
ds
mov
xor
mov
sbb
rorl
test
add
mov
inc
cld
sub
and
push
cs
jp
sub
ret
mov
dec
enter
aad
sub
or
cmpsl
mov
adc
cwtl
push
mov
mov
pop
pop
aas
bound
in
pop
in
mov
sub
add
adc
sbb
inc
roll
push
inc
mov
adc
or
out
dec
cmpb
sti
cwtl
xor
in
and
outsb
insl
out
bound
inc
or
inc
xchg
es
cmp
pop
rcrb
mov
push
mov
cmp
cmpsl
ret
js
data16
ret
push
sbbl
pop
xchg
fidivl
mov
inc
add
mov
repnz
es
sub
or
shlb
stos
sub
imul
fwait
sub
das
sbb
inc
je
dec
stos
mov
and
pop
or
mov
cs
push
xchg
add
cld
ss
xlat
push
es
mov
js
dec
jns
cmp
jp
dec
mov
xchg
stos
xchg
dec
cmp
cmpb
shr
ss
dec
or
push
adcl
xor
push
lock
inc
add
lret
insb
shll
jb
push
or
les
int3
loop
loop
ret
test
mov
cmp
jo
or
and
mov
call
adc
aam
inc
pop
fildl
je
mov
and
jl
xchg
stos
pop
inc
ret
push
add
mov
jb
jb
pop
in
imul
or
stos
sub
and
dec
sub
cmpl
or
movzwl
dec
sub
or
arpl
cmpl
xchg
and
dec
scas
mov
scas
fwait
mov
jmp
inc
hlt
and
insb
inc
xchg
push
and
loop
ds
test
mov
push
loopne
push
out
push
adc
mov
jp
and
xor
daa
mov
ret
sub
fdivr
mov
or
sub
push
shll
or
int3
push
fcmovnu
icebp
mov
mov
push
hlt
sub
out
push
mov
xchg
daa
inc
je
faddl
sbb
es
mov
cmpsb
or
pop
adc
or
mov
push
notl
xchg
flds
pop
fildll
jle
int
sbb
das
xor
sahf
jbe
push
lret
ljmp
sbb
pop
mov
cmp
mov
sub
push
xchg
mov
inc
sub
pop
inc
mov
out
push
ret
push
jge
xchg
adc
shlb
cmpsb
push
daa
mov
and
xchg
sbbb
arpl
sub
or
add
jp
xchg
add
xlat
fcmove
jo
and
cmp
test
sbb
or
adc
pop
pop
jg
pop
test
mov
andl
pop
roll
push
adc
adc
add
dec
push
mov
out
adc
sub
add
cli
pop
je
adc
popa
add
ljmp
mov
movsl
adc
test
mov
fmulp
in
add
repnz
cmp
cwtl
cmp
leave
ret
mov
roll
es
aas
cmpsl
mov
leave
js
fists
lahf
lret
dec
loope
loope
adc
add
pop
xor
fmuls
cmp
push
adc
mov
cld
in
data16
iret
addb
shr
pusha
push
clc
sahf
idiv
xor
test
fisttpll
stos
testl
nop
addl
lods
mov
stos
orl
fldenv
xor
sub
pop
dec
pop
pop
sbb
bound
jmp
test
imul
scas
adcb
or
inc
jp
jecxz
push
sub
mov
fwait
or
gs
inc
insb
mov
sbb
aam
mov
mov
nop
loop
mov
or
cmp
xor
imul
sbbl
inc
sub
jo
cmc
pop
test
or
std
dec
addr16
data16
jp
jnp
sub
add
into
xchg
or
add
mov
inc
or
add
lds
enter
cmpl
and
push
cmp
sub
loop
std
jg
mov
push
push
divl
cmp
add
cmp
fisubrs
sbb
mov
mov
jbe
push
push
push
or
mov
nop
mov
rcll
mov
sub
imul
add
xor
sub
jns
cs
pop
lods
jl
jbe
sbb
push
stos
sbb
adc
mov
imul
pop
rcr
pop
sub
aam
mov
jecxz
cmpsl
fsubs
notl
pop
imul
into
pop
dec
add
mov
push
popf
push
mov
inc
lods
and
adc
sbb
or
add
add
fmul
xor
xchg
pusha
mov
sbb
dec
mov
push
cwtl
adc
mov
xchg
outsb
inc
jne
push
jo
pop
xchg
sub
add
mov
jp
inc
mov
test
sbb
push
pop
in
cmp
ret
sbb
push
push
pushf
push
ret
js
daa
mov
cmp
divb
pusha
adc
and
mov
in
add
lahf
lds
pushf
int3
cmp
push
scas
pop
sub
test
add
jne
cld
dec
add
sarb
ljmp
ret
fldcw
mov
add
jp
lret
mov
cmp
cmpsb
movsl
test
jmp
shll
xlat
add
movsl
aas
jecxz
jl
inc
jle
mov
inc
sbb
cli
inc
leave
adc
mov
dec
outsl
pop
lods
sbb
dec
dec
xchg
pop
fisttpl
mov
dec
dec
add
xchg
stos
sbb
or
mov
xchg
or
idiv
inc
inc
mov
test
cmp
rcrl
mov
stos
fdivl
fisttpl
loop
mov
add
fisubs
loope
pop
mov
inc
dec
mov
mov
stos
xchg
test
inc
rcll
arpl
push
mov
ljmp
call
daa
mov
jns
scas
out
aad
mov
outsl
js
jo
js
ret
sahf
add
rcll
jnp
loopne
sbb
and
imul
pop
xchg
enter
data16
test
fdivrs
ret
lret
les
sub
mov
push
mov
jae
mov
out
sbb
inc
push
mov
jl
cmp
jno
pop
cs
add
xor
mov
jnp
cli
pop
or
mov
andb
outsl
xor
test
cmpsb
data16
int
cmp
xorb
mov
sbb
adc
rorb
out
push
or
out
inc
divl
add
push
jle
sbb
pop
jge
xor
pop
add
test
and
mov
cmp
cmp
push
xor
push
jge
adc
pop
push
mov
push
in
imul
mov
test
dec
mov
sbb
or
scas
divl
pop
xor
pusha
and
jmp
push
out
daa
cmpsb
cld
sti
rolb
loope
sbb
push
pushl
idivl
mov
mov
in
mov
outsb
mov
and
add
aam
out
sbb
mov
jb
loopne
mov
push
jmp
in
cmpsl
inc
into
stos
jp
xor
inc
add
mov
push
mov
xchg
rorl
cmp
jo
cli
add
or
xchg
push
mov
push
and
sub
in
rcrl
cmpsl
jecxz
jbe
pop
xorb
xor
adc
pop
xor
pop
scas
sti
ret
lahf
push
sbb
aaa
mov
cmp
mov
xchg
insl
sbb
mov
or
push
cmp
push
iret
mov
mov
mov
adc
mov
xchg
das
push
or
data16
pop
sbb
xchg
cs
gs
jmp
pop
jmp
jle
adc
subb
and
inc
mov
cmp
push
das
mov
ljmp
adc
or
mov
bound
outsl
lahf
dec
arpl
sbb
packsswb
adc
cmp
fs
scas
pusha
cmc
insb
mov
aaa
pop
xchg
xor
pusha
ljmp
adc
and
in
sbb
cmp
in
fsubrl
and
pop
ret
pusha
adc
jno
lea
jne
outsl
jnp
pop
sub
movsb
sub
lret
sbb
sub
sub
jae
fistl
rorb
shrl
sbb
insl
pop
push
lahf
lea
and
mov
bound
mov
push
mov
mov
push
sub
mov
add
and
fsubrp
push
and
outsl
push
add
dec
push
mov
mov
mov
push
enter
push
out
xlat
inc
mov
bound
scas
fmuls
mov
push
mov
cli
add
and
jnp
xor
and
jbe
ds
dec
cmovo
dec
inc
roll
mov
gs
lahf
arpl
add
adc
add
jne
fs
adc
aam
negb
js
inc
cmpsb
cmp
push
iret
popf
mov
push
cmpsl
js
lock
pop
jne
addr16
dec
mov
stos
cmp
mov
and
in
jnp
push
jb
notb
fwait
add
popl
mov
push
adc
jne
loop
or
cmp
push
and
inc
xchg
test
pop
js
and
xchg
adc
xchg
sbb
add
cmp
ret
jmp
ret
jmp
out
call
cmp
data16
mov
daa
and
jle
cmp
push
das
cmpsb
lock
xchg
call
sbb
inc
ss
scas
notl
in
push
and
pusha
daa
add
xchg
sub
scas
shlb
les
adc
mov
sub
in
out
jecxz
test
cmp
popf
aam
repnz
pushf
push
inc
les
mov
adc
es
cmp
xor
pop
lds
jl
push
addr16
xlat
adc
pop
icebp
sub
cmp
mov
inc
rorb
jl
jp
stos
pop
xor
xor
add
in
ja
inc
push
leave
jl
push
orb
cmp
add
int3
enter
xchg
adc
xor
mov
in
mov
mov
inc
lahf
subl
push
das
andb
shr
lods
push
inc
bswap
test
and
mov
mov
ret
rcrl
xchg
loope
lahf
insb
or
daa
mov
mov
sbbb
mov
ret
nop
inc
push
or
cmp
ror
mov
shl
arpl
sarl
pop
dec
sub
mov
push
inc
lods
cmp
xchg
xor
outsl
insb
ret
mov
and
lods
pop
xchg
scas
not
push
push
test
jl
shrl
cmpsb
leave
mov
std
cwtl
jnp
je
adc
ljmp
pop
cmp
popa
pusha
jnp
jl
dec
pop
jb
lahf
push
or
pop
push
cmp
adc
adc
jns
das
adc
inc
add
sub
lods
push
jbe
xor
push
mov
cltd
inc
adc
andl
sub
mov
push
loope
stos
sub
faddl
or
jnp
jp
fdecstp
xor
push
dec
push
testl
rorb
pop
dec
mov
js
daa
mov
xchg
xchg
pop
add
imul
push
push
out
mov
scas
imul
js
xor
ret
not
add
lahf
adc
lods
dec
pop
call
or
dec
outsl
imul
addr16
imul
sbb
cli
js
push
lret
aam
push
dec
pop
xchg
mov
mov
lds
mov
out
lods
mov
scas
pop
pop
jno
push
inc
insb
outsb
stc
popf
je
mov
cmp
sub
sub
jno
jle
adc
pop
add
ret
jmp
mov
jp
cmp
lods
jecxz
mov
push
pop
fnstcw
pusha
jp
adc
cwtl
bound
insb
daa
xchg
imul
das
mov
adc
arpl
lea
pop
or
xor
das
fsubs
out
pop
insl
es
sbbb
stos
pop
or
push
mov
in
jp
pop
add
daa
rol
adc
popa
sarb
scas
sub
pushf
jecxz
les
in
or
jmp
subb
nop
xchg
imull
cmc
and
mov
or
sub
mov
test
fdivrl
mov
mov
bound
fmull
sbb
sbb
cmpsb
mov
outsb
test
and
popf
jno
sub
jge
pop
repnz
test
mov
lods
addr16
add
call
mov
insl
std
or
push
jmp
mov
mov
ret
and
cs
jge
adc
or
and
mov
jmp
lret
popf
push
adc
fisttpl
fstps
adc
pop
mull
insb
cwtl
lahf
mov
jnp
sbb
mov
and
cltd
pop
pop
pop
and
inc
push
dec
mov
jne
stc
jae
ds
insl
fcoml
cli
ljmp
xchg
mov
pop
inc
inc
pop
jo
pushf
pop
mov
adc
jae
sub
stos
xor
or
cmp
dec
pop
cmp
mov
test
and
inc
mov
addr16
inc
test
adc
ret
dec
cmc
test
jbe
cmp
adc
inc
fmuls
pop
dec
sbb
jo
scas
mov
ljmp
jo
jno
iret
mov
fstps
addr16
mov
enter
inc
and
mov
aaa
sub
or
call
loopne
and
push
jecxz
push
jge
stos
inc
mov
cmovs
dec
mov
enter
cs
and
push
iret
and
pop
adc
andl
xor
cmp
and
dec
dec
jp
mov
ret
mov
andl
add
pop
cmp
mov
aaa
and
add
lods
mov
dec
push
cmp
push
inc
inc
and
mov
pop
dec
call
dec
dec
push
lock
xor
ds
xor
sarl
sti
cli
mov
xchg
cmp
adc
fs
or
imul
sbb
push
add
adc
push
int3
mov
repnz
int3
push
or
push
loop
xchg
push
push
jb
ljmp
mov
sbb
push
rorl
and
adc
in
mov
push
xor
mov
push
xchg
pop
dec
inc
in
fists
mov
xor
push
stos
adc
aam
mov
sbb
addb
mov
mov
ret
and
aad
push
mov
mov
adc
add
inc
push
bound
cmp
sbb
pop
jbe
pop
add
outsl
fldl
mov
cmc
mov
aaa
test
add
push
add
jno
mov
cwtl
lods
andl
xchg
nop
stos
icebp
cmp
lods
mov
or
dec
orb
lods
pop
mov
mov
das
push
call
sbb
mov
sbbl
or
xor
mov
adc
push
les
clc
mov
cmpsb
imul
xchg
jl
xchg
mov
mov
sub
lock
lods
sub
add
cmp
mov
lods
and
xor
mov
pop
mov
lret
xchg
mov
in
scas
fnstcw
add
mov
xchg
mov
cmp
insl
xor
lcall
and
mov
push
lahf
hlt
sbb
mov
loop
mov
push
pop
jmp
xchg
mov
arpl
je
adcb
dec
cmp
mulb
xor
push
iret
test
and
leave
dec
sub
mov
mov
mov
add
sbb
pop
dec
adc
inc
cmpsl
movsl
movsb
jbe
mov
es
or
push
addr16
xchg
or
lds
xchg
mov
insl
daa
mov
add
pop
test
pop
add
sub
fsubs
outsl
subb
inc
inc
in
cmpsl
outsl
mov
lods
jecxz
xor
jbe
cmc
push
sub
jecxz
cmp
pop
add
es
mov
inc
add
lret
sahf
mov
mov
xor
pop
sub
aam
ds
push
lods
mov
adc
pop
jp
gs
aam
mov
mov
in
movsl
pop
mov
add
add
jge
orb
daa
add
jp
cwtl
sub
sbb
pop
or
das
js
mov
and
mov
mov
testb
ret
cli
mov
push
pop
stos
push
push
clc
xchg
cmp
dec
add
outsl
scas
stos
and
jne
dec
pushf
mov
xor
icebp
cmp
add
adc
add
adc
incl
inc
add
and
sbb
adc
mov
mov
call
cwtl
mov
mov
test
push
mov
or
add
push
nop
ret
outsl
fsubrs
push
lock
roll
cmp
add
stos
fcomps
sub
add
fistpl
les
ja
movl
pop
or
mov
fmulp
sub
mov
fisttpll
mov
or
aas
jnp
cmpsl
sbbb
inc
pop
mov
mov
mov
jl
jl
les
xor
inc
mov
pop
dec
repnz
test
lret
adc
xor
sbb
outsl
sbb
imull
and
push
jbe
cwtl
rolb
mov
inc
adc
or
mov
jo
push
mov
mov
test
mov
mov
ja
rclb
mov
push
mov
insb
jge
bound
push
cmp
xor
aaa
mov
xchg
push
sar
jp
out
dec
add
loope
lods
pop
subb
push
adc
out
ficoml
sarb
push
icebp
and
dec
arpl
notb
mov
dec
mov
fcmovnb
add
cli
ljmp
imul
push
cmpsl
and
push
not
xor
mov
push
jne
jb
enter
int3
int
or
add
jb
bound
clc
xchg
push
xor
bound
cmpsb
or
push
xchg
or
sub
add
mov
or
jbe
add
jmp
mov
mov
jns
stc
ficoml
sti
mov
push
push
rcrl
sbb
movb
mov
mov
and
xchg
cmp
in
xchg
stos
imul
push
fucomip
inc
out
arpl
out
js
daa
sbb
rorb
inc
or
sahf
mov
and
repz
lcall
andl
and
imul
add
push
xchg
aaa
faddp
push
cmp
add
pop
movsl
and
sub
daa
adc
cmp
addr16
fcompl
sub
repz
sub
xor
mov
push
sub
ret
jno
adc
sarl
add
xchg
cmp
repz
rol
or
push
mov
push
mov
sub
cmp
ret
out
or
jb
dec
sub
xor
cmp
aad
adcb
xor
or
jo
push
and
fcomps
inc
add
mov
push
and
incb
aam
or
inc
and
sub
shlb
mov
imul
bound
outsb
or
push
sbb
std
xchg
iret
clc
or
aad
inc
cli
push
dec
jl
aad
and
lock
jmp
or
inc
rcll
daa
mov
jnp
push
sub
adc
lea
lret
jnp
jns
sbb
mov
fsubs
mov
add
sarb
mov
mov
into
fbstp
jecxz
outsb
fsubrs
mov
les
push
je
les
adc
js
mov
jp
shrb
sahf
sbb
or
inc
imul
or
inc
les
cwtl
dec
adc
dec
mov
adc
pop
rcrb
and
jl
or
sbbb
mull
sti
fistps
add
outsl
adc
es
xchg
mulb
ja
cld
ja
jb
xchg
push
xchg
movsb
pop
jnp
and
mov
and
xchg
add
or
addl
daa
icebp
sbb
xchg
mov
pop
int3
mov
cmp
pop
inc
cmp
mov
sti
jge
int
sub
and
sub
push
xor
je
jnp
lods
fs
decb
rol
rolb
mov
mov
inc
adc
add
lds
dec
pop
out
add
add
dec
or
and
sbb
andb
sbb
lods
int
jg
fdivrl
add
mov
adc
sbb
aaa
nop
or
rcrb
dec
inc
test
ljmp
aam
stc
xor
push
pop
xor
jb
popa
and
mov
xchg
jnp
lods
mov
jmp
js
in
loope
cmpsl
sub
ja
sti
or
jecxz
xor
pop
cmp
loopne
pop
outsb
pop
push
mov
and
add
mov
cmc
lods
lds
test
pop
inc
sub
inc
xor
add
pop
subb
inc
pop
or
pop
sub
push
push
push
adc
jae
adcb
xchg
stos
enter
mov
out
sub
arpl
mov
push
xor
in
stos
add
push
xor
xchg
in
push
lds
adc
lret
lahf
fimull
mov
sbb
jp
xor
push
scas
jae
les
or
sysret
cmp
fsub
mov
lods
mov
mov
arpl
or
shlb
push
pop
popa
add
dec
mov
mov
leave
loop
push
mov
add
lds
or
inc
mov
je
mov
xchg
mov
mov
lods
xor
aam
jp
xor
xor
dec
es
cmpsb
pop
adc
adc
pusha
aam
xor
pop
xor
mov
jmp
inc
nop
or
mov
cmpsb
inc
xchg
push
data16
ret
add
push
aad
fwait
xchg
dec
xor
imul
add
xor
ret
jo
jo
fwait
xchg
lds
pushf
dec
icebp
dec
mov
scas
sti
dec
sbb
xchg
push
cltd
and
mov
mov
inc
pusha
push
and
push
fwait
and
pushf
adc
mov
adc
test
andb
aaa
in
adc
aam
dec
jmp
pop
and
fldenv
jecxz
jp
xor
fisubrs
adc
out
cmp
add
inc
adc
mov
dec
push
outsb
jle
mov
fiadds
cmp
xlat
or
cmp
sbb
adc
mov
js
inc
add
test
js
jns
sbb
imul
movsb
xchg
sbbl
mov
add
push
test
imulb
adc
mov
in
movsb
fmuls
or
push
mov
loop
cmp
adc
add
sahf
daa
data16
inc
adc
adc
subl
daa
test
icebp
inc
hlt
cmp
jge
iret
or
inc
sub
mov
stc
add
add
xlat
pop
or
and
movsl
xchg
add
sbb
and
sbb
movsb
bound
mov
iret
add
adc
jp
rorl
mov
mov
ret
mov
inc
push
rorb
js
jge
mov
or
jge
mov
cs
push
sbb
ret
js
dec
sbb
outsl
add
fimuls
movsb
and
int
mov
push
mov
fimuls
daa
add
and
faddp
repz
sub
pop
into
sbb
test
inc
notl
outsb
out
lock
aam
add
sub
mov
pop
fcomps
outsb
xchg
into
xor
push
insb
ss
xchg
and
insb
or
test
mov
or
sahf
adc
mov
dec
cld
js
hlt
inc
or
xchg
mov
mov
in
adc
lds
shlb
aam
test
add
mov
or
and
add
aaa
push
jns
dec
mov
inc
into
add
push
xchg
and
xchg
and
nop
subl
cli
scas
jmp
mov
mov
add
adc
rcrb
je
cmp
push
cmp
add
pop
cmp
sbb
cmp
jle
inc
test
inc
cmp
jbe
sbb
fsubrl
mov
sbb
je
loopne
mov
push
in
es
fisubrs
invd
testb
cmp
add
cwtl
mov
and
adc
xchg
jb
xchg
call
pushf
jno
inc
loope
rolb
es
sbb
or
pop
sahf
inc
cmp
and
and
jmp
movsb
jp
aad
push
add
movsl
mov
lea
ljmp
int3
and
mov
aam
and
push
or
xchg
pop
jg
sub
les
add
xor
in
xor
sub
icebp
lods
out
jl
dec
leave
add
and
push
or
mov
xchg
enter
subl
and
shrl
jae
stos
cs
js
inc
mov
cld
fiadds
je
repz
aam
pop
mov
lret
scas
lock
fwait
mov
sahf
xchg
call
aad
adc
push
lret
mov
push
jnp
inc
aad
cwtl
add
cmp
adc
mov
jbe
adc
and
xor
xchg
sbb
mov
mov
dec
imul
rcrl
xlat
movsb
pop
push
xchg
data16
in
loopne
popf
aad
cli
enter
test
mov
or
xchg
dec
outsb
pop
xor
rclb
push
and
dec
mov
and
cmc
jnp
xor
test
pushl
cvtpi2ps
bound
sbb
inc
int
and
and
into
push
push
push
pushf
inc
sub
lcall
ss
fistpll
adc
aad
sub
jb
jae
xor
mov
mov
and
and
fwait
mov
dec
pop
scas
into
or
add
call
repz
cmp
lahf
add
fdivrl
call
adc
cld
push
cmp
mov
jmp
or
or
inc
jmp
cmp
sbb
iret
add
jne
icebp
jb
sbb
and
sub
jecxz
iret
test
fwait
lock
cltd
es
bound
mov
lods
call
adc
push
adc
add
and
jne
shl
jae
idivl
iret
shlb
cmpsb
jnp
push
mov
aas
cmp
sbb
push
sub
out
test
mov
dec
cmp
mov
sub
mov
dec
inc
or
mov
xor
std
jp
mov
shrl
mov
xchg
stos
sbb
dec
fmuls
or
pushf
pop
push
iretw
adc
and
daa
and
ds
loop
fucomip
insl
sbb
ret
lods
xor
sbb
pushf
mov
sub
xor
shl
fldz
or
push
inc
popa
je
je
mov
xchg
mov
adc
inc
inc
test
sbb
in
cmp
fld
add
subl
add
pop
add
mov
push
mov
add
andl
push
maskmovq
mov
dec
out
or
test
aam
xor
mov
or
push
pop
push
sbb
scas
jae
adc
and
ja
test
out
xor
repz
daa
lods
bound
loop
rcll
jge
sub
sbbb
popf
adc
or
dec
xlat
subl
xor
adc
push
shll
cmp
add
push
mov
jmp
sub
dec
sub
adc
insb
adc
jge
gs
fsubl
jae
and
cmp
mov
ja
jl
push
add
mov
cmp
sarl
jo
aam
sub
pop
subb
mov
mov
push
int3
sub
dec
or
add
inc
cmp
pop
gs
add
pop
xor
cmp
cmp
pop
sbb
jnp
pop
mov
aam
aad
add
lock
fmull
adc
xlat
addl
lock
mov
movl
inc
outsl
adc
jmp
xor
mov
push
and
fsubs
add
add
and
cmp
and
push
hlt
mov
popf
add
fmuls
cmp
inc
fisubs
fcomps
leave
ret
push
or
imul
lcall
push
mov
jge
mov
adc
inc
xor
jl
stos
mov
inc
jl
mov
pop
aas
dec
pop
or
inc
inc
inc
and
xchg
ds
in
or
insl
imul
adc
pop
add
loope
dec
pop
jbe
cmc
out
rolb
shlb
ret
cwtl
or
scas
adc
pop
icebp
or
and
pop
cmp
into
mov
aad
or
mov
lock
mov
and
push
sub
aad
mov
sub
dec
jmp
sbb
xchg
dec
sub
cmp
sbb
in
enter
mov
ljmp
dec
xchg
push
pop
inc
jl
adc
or
fwait
imul
sub
sarl
lods
ret
jl
jl
adc
mov
mov
mov
sbb
cltd
jmp
mov
xor
pop
rorl
xchg
adc
hlt
rorl
out
js
js,pt
pop
jp
fstpt
sub
xchg
push
scas
jmp
cmpl
sbb
lods
fcomi
adc
cmp
out
clts
xlat
xchg
fidivs
rclb
mov
sbb
loop
cmp
test
adc
je
inc
sub
rorl
xchg
pxor
sbb
or
sbb
les
test
push
call
mov
and
jmp
sbb
push
insb
sbb
mov
test
lock
fwait
push
cmp
dec
xchg
pop
cmp
jnp
dec
sbb
add
adc
clc
add
sahf
adc
push
jo
test
and
sbb
or
xchg
int3
call
pop
inc
pusha
or
enter
in
push
or
mov
mov
mov
xor
inc
fmuls
add
xchg
adc
cmp
inc
lret
idiv
dec
sub
adc
mov
cwtl
sbb
or
cs
and
lods
mov
mov
mov
mov
or
cmpsl
mov
add
adc
imul
addb
andb
push
fistl
shlb
lods
or
mov
xor
push
or
enter
insl
mov
cmp
push
sahf
insb
pop
mov
inc
in
push
inc
test
nop
out
stos
push
je
pusha
gs
mov
mov
push
in
test
mov
je
out
adc
jnp
hlt
lods
push
sub
dec
ret
xorl
shr
and
dec
add
mov
or
clc
sub
out
push
js
sub
adcb
repnz
gs
sbb
add
cmp
in
push
aaa
mov
and
outsl
add
xor
and
mov
pop
andl
adc
cmp
mov
inc
mov
or
push
shl
inc
mov
sti
and
fldcw
mov
loopne
imul
pop
push
mov
adc
or
jbe
mov
and
inc
push
mov
sub
xor
scas
stc
adc
rorb
mov
popf
xlat
fdivr
and
mov
fisubl
and
repz
and
orl
leave
adc
clc
ret
mov
loopne
inc
sub
imul
dec
inc
jmp
mov
and
out
hlt
adc
sub
xchg
rclb
sub
push
pusha
jns
dec
adcb
movsl
jnp
and
rorl
mov
popf
add
pusha
bound
pop
pop
into
lahf
sbb
movsb
out
pop
push
addr16
fisubs
bound
push
or
ss
inc
xchg
push
adc
mov
add
aas
jne
cmp
inc
xor
mov
gs
mov
jo
fwait
pop
sbb
xorl
aas
and
bound
lret
mov
cmpb
test
pop
sahf
xchg
jg
mov
or
mov
sub
fisubrl
aaa
cld
js
xlat
mov
cwtl
xor
ds
mov
aas
jns
and
mov
jo
sub
mov
loopne
sbb
sub
scas
inc
inc
arpl
jne
mov
jne
cmp
pusha
cwtl
int
aam
loopne
and
or
add
cmp
rcrb
mov
cmp
adc
ljmp
jl
mov
mov
sub
sub
jl
jo
pusha
mov
loope
xor
xchg
sar
xchg
je
xlat
popa
xor
popf
push
adc
loopne
stc
dec
sbbb
loopne
sbb
add
test
mulb
js
mov
inc
sbb
stos
add
and
or
cmp
fsub
mov
xchg
or
add
xor
xor
cwtl
int
fimuls
mov
and
sbb
mov
jne
cmp
push
xchg
loope
sbb
push
jge
inc
cmp
jmp
push
adc
cmpsl
or
lcall
mov
xor
pusha
add
imul
push
mov
xchg
sub
jmp
rorl
addl
ret
add
inc
fisubl
add
int
add
add
cwtl
mov
scas
ja
xchg
adc
dec
add
mov
bound
push
inc
addb
push
mov
cmp
jl
push
aas
mov
and
adc
test
test
sbb
push
xor
dec
and
sarb
push
je
sbb
fs
pop
jnp
jp
aaa
push
push
sarl
xchg
inc
nop
pop
aas
pop
mov
inc
sar
daa
loopne
adc
in
fdivrl
lcall
fistl
jmp
ret
pop
pop
jnp
push
outsl
cmpsb
test
es
mov
sbb
cmpsl
jp
mov
inc
int
add
sub
movsb
mov
mov
inc
mov
sub
dec
jmp
push
aam
jne
insb
js
push
cmp
mov
fadds
and
xor
les
inc
xchg
adc
cmp
jmp
mov
lret
sub
ret
in
shrl
mov
popa
push
and
xchg
add
arpl
inc
int
data16
push
sub
sbb
in
in
aas
inc
das
xor
cmp
in
insl
ss
mov
popf
mov
insb
fwait
push
or
aam
jae
cmpsw
xchg
movq
insl
inc
les
cmp
inc
mov
dec
mov
inc
mov
and
test
insl
cmpsb
pop
jl
addb
aas
push
std
je
cmpb
pushl
pushf
shr
xchg
push
mov
jae
inc
cmp
mov
dec
jbe
ret
pop
call
ret
data16
fistl
bound
pop
mov
or
or
inc
mov
jo
arpl
inc
and
jne
add
or
add
ja
mov
inc
test
cltd
jp
dec
hlt
or
xor
jl
adc
into
mov
sub
bound
adc
inc
jnp
mov
inc
lret
mov
sbb
xor
addl
push
das
or
xchg
mov
add
xchg
pop
cmp
mov
fcoms
push
mov
inc
inc
dec
and
loopne
jb
adc
and
dec
rolb
pop
pop
adc
pop
jle
jns
mov
push
adc
xor
fcomp
pop
aam
or
mov
rcl
stos
or
insb
or
ss
sub
js
push
pushf
dec
xchg
mov
adc
aad
mov
pop
sahf
test
mov
shrb
mov
mov
sub
popa
int
adc
pusha
pop
psubsb
sub
or
mov
inc
adc
and
outsb
daa
outsl
jo
ret
aaa
sbb
pop
mov
rcr
insl
addb
inc
ret
jno
adc
les
adc
and
fildll
ljmp
mov
adc
js
mov
cmc
xor
addb
xor
ficoms
push
aam
mov
pop
das
and
xor
std
std
das
rcl
scas
jae
add
sarl
and
inc
pop
inc
xor
add
push
out
add
sbb
xor
add
js
mov
fwait
or
pop
or
call
adc
ret
data16
push
and
or
push
sub
leave
or
popf
adc
or
int3
sbb
or
cmpl
adc
rcrl
inc
mov
addb
xchg
push
mov
ret
and
sbb
sub
xchg
fsubr
xchg
add
pop
imul
sub
xchg
js
and
xor
adc
sbb
xor
aad
mov
jb
repz
sarl
pusha
sbb
and
jmp
aad
data16
add
xchg
mov
xchg
sub
xchg
arpl
and
and
lret
push
inc
mov
sbb
push
mov
and
sub
into
push
sub
sbb
xchg
inc
xor
sahf
ficoml
sbb
movsb
test
in
jle
push
cmp
les
adc
idivl
in
mov
mov
aas
cld
cmp
push
insl
nop
jg
cmp
cmp
sbb
inc
sbb
scas
cwtl
inc
leave
mov
mov
xchg
call
push
pushf
mov
xchg
inc
rcrb
jb
shl
imulb
les
pop
test
int3
adc
pop
and
sbb
fcompl
pop
ret
mov
sbb
push
insl
cmp
dec
clc
stos
sub
cmp
std
adc
nop
sub
sub
or
pusha
inc
cmp
enter
mov
add
adc
mov
into
jmp
bound
cmp
testl
hlt
cwtl
fs
adc
cmp
mov
mov
and
fisubrs
add
push
aad
je
jecxz
adc
idivl
sub
fs
push
add
popa
adc
shll
data16
push
mov
adc
roll
aad
add
mov
jmp
push
xchg
ja
mov
ficomps
add
ret
mov
cmpsl
jle
pop
aaa
inc
pop
int
and
push
roll
sbb
mov
push
pop
add
movnti
jb
roll
popa
mov
push
lock
push
sbb
testl
sub
cmp
sub
dec
mov
pop
xchg
mov
popa
add
add
push
push
movsb
adc
jmp
fstl
fsubrl
xor
sbb
ret
lret
inc
out
inc
push
add
sub
mov
cmp
jp
and
adc
mov
cld
adc
mov
imul
out
and
inc
repz
adc
ret
xor
cmp
mov
loopne
cmc
or
mov
pushw
add
push
cltd
test
mov
xchg
xor
cmp
mov
std
xchg
add
mov
push
pop
dec
cs
int
inc
cmp
or
dec
std
out
adc
jg
stc
add
inc
mov
ffree
jle
adc
out
test
add
imulb
sub
test
cmp
pop
ret
sti
mov
add
cmc
sub
jmp
leave
pop
orl
test
push
sub
pop
mov
cmp
jl
jno
dec
xchg
add
or
inc
jmp
mov
xor
cmp
imul
daa
dec
inc
push
xchg
xor
pop
fdivs
pop
aam
aam
jo
adc
xchg
add
adc
or
js
jno
add
and
jo
mov
adc
icebp
add
or
push
daa
add
les
jl
js
fists
stos
es
xor
enter
adcl
xor
mov
jle
push
rcr
dec
add
push
call
loop
mov
and
jnp
pop
shrb
aad
mov
ljmp
ljmp
mov
sub
mov
xchg
loop
mov
xchg
push
rcl
xchg
or
dec
and
mov
xchg
cmc
psubsb
orl
rcl
push
xor
push
aas
xor
jne
repz
pop
mov
pusha
dec
imul
imul
jae
jb
mov
dec
loope
inc
lret
jge
xor
outsl
lods
mov
or
and
ja
aad
lahf
sub
cmp
push
sub
sti
es
and
dec
sti
int3
fisttpll
or
push
loope
gs
mov
les
push
movsl
pop
pop
icebp
jge
cli
push
cmpsl
and
cli
int
cmp
xlat
mov
sti
ss
sub
mov
aas
jg
cmpsl
dec
mov
sub
out
jnp
arpl
fisttpl
jecxz
mov
jo
mov
cmp
out
and
fidivs
push
xchg
cmp
mov
xchg
jne
out
push
pop
jnp
cmp
dec
sub
daa
cmp
or
ret
ljmp
or
ds
outsl
dec
hlt
mov
cmpsb
scas
sub
clc
lods
mov
insb
testl
sarb
daa
mov
push
in
dec
push
pop
xchg
cld
mov
lret
out
popa
cmp
cmpsl
jge
stos
push
add
cmp
je
push
ret
pop
add
jecxz
mov
enter
mov
mov
outsb
xlat
xchg
loope
rol
pusha
test
je
ljmp
sub
xchg
inc
outsl
into
and
add
fidivrs
mov
dec
stos
mov
rorl
inc
test
xlat
ret
ror
cmp
sbb
imul
jp
dec
mov
inc
enter
add
jbe
xchg
mov
mov
xchg
inc
sub
sub
jne
lret
adc
jno
ljmp
mov
add
cmpsb
adc
dec
pusha
dec
lcall
mov
or
xor
mov
xor
addb
hlt
mov
call
jl
or
mov
notl
test
push
lcall
push
ret
cmp
and
jge
jecxz
xchg
push
push
add
xchg
mov
shrb
mov
dec
jae
dec
mov
mov
mov
loope
ret
movswl
ja
outsb
lret
mov
fst
lret
cwtl
xor
sub
sbb
jno
mov
xchg
xchg
cltd
aaa
or
bnd
cmp
jnp
or
add
and
leave
cmpsl
pop
xchg
pop
mov
and
cmp
sbb
pop
pop
mov
jno
call
add
test
dec
cmp
xchg
xor
repnz
mov
mov
daa
je
adc
ljmp
add
push
jmp
jns
jp
and
int
stc
scas
int
and
sub
mov
andb
sub
cmp
xor
imul
dec
adc
rclb
pop
xlat
pop
and
ds
mov
cmp
adc
cltd
and
test
jne
mov
in
rclb
xchg
fistpl
mov
mov
adc
and
insb
fucom
jbe
jle
adc
popa
test
push
sti
ljmp
pushf
lret
cli
add
push
daa
pusha
cwtl
and
sbb
inc
pop
mov
pop
movsb
adcl
mov
cli
sub
xchg
sub
lock
jns
mov
xor
test
pop
fcompl
push
cmp
fnstenv
xchg
pop
cmpsl
lret
cmc
insb
push
arpl
addl
test
or
cwtl
add
pop
test
and
shrl
adc
mov
adc
add
add
sti
push
push
or
jmp
aaa
rclb
jno
or
and
fistpll
addr16
fucomp
and
in
cltd
xor
jnp
push
inc
out
mov
xor
aad
je
ret
hlt
mov
stc
pop
lahf
es
xchg
sbbl
xor
pop
fcomps
sub
sub
push
rcll
push
or
push
pop
call
sti
sub
or
fs
loope
or
or
or
loopne
fistpll
add
mov
and
jo
xlat
dec
inc
sub
add
out
shl
hlt
pop
rol
cmp
xlat
dec
int3
shl
rorl
xor
jl
js
outsl
popf
mov
ss
sti
cmp
int3
push
mov
sub
in
jge
pop
push
psubusw
add
add
dec
in
mov
ret
jecxz
pop
mov
pop
in
sub
or
loope
fdivs
loopne
and
pop
mov
sub
xor
cli
cltd
xor
lret
les
rcrb
jle
adc
call
adc
push
lahf
cwtl
jecxz
stc
sbbl
mov
add
aas
iret
sbbb
mov
or
jnp
mov
and
xor
pop
lahf
imul
and
in
dec
or
lock
jns
jo
mov
cmp
test
or
push
or
lea
push
push
jp
jnp
lcall
mov
popa
sub
aam
hlt
rcll
arpl
shl
fwait
pop
cmp
jge
loopne
xchg
std
sub
sbbl
mov
bound
add
adc
inc
jecxz
insb
mov
mov
cmpsb
mov
push
aad
arpl
loope
and
jecxz
or
xor
scas
pop
push
stc
mov
pop
jp
rol
xlat
xchg
cld
push
mov
lds
aas
jl
fsubrl
pop
shr
sahf
or
jae
int
mov
dec
xor
fcom
loope
lret
push
sbb
popa
ss
bound
mov
shll
ret
xchg
loopne
and
hlt
pop
cmp
push
outsb
dec
cli
cmc
dec
adc
adc
lcall
dec
adc
in
xchg
xchg
and
add
mov
xchg
push
pop
lahf
inc
ja
ffreep
dec
dec
jp
or
rorb
mov
out
xor
or
adc
icebp
sbb
pop
dec
add
repnz
push
sbb
xor
mov
inc
jp
les
lcall
adc
pop
popf
mov
or
fwait
sub
das
jns
sbb
imul
mov
mov
ds
add
add
push
test
sahf
push
loopne
add
mov
dec
sub
pushf
fisubs
pop
inc
cmp
push
jmp
push
out
jae
xchg
sbb
xlat
andl
cmp
in
mov
das
cmp
cmc
add
test
jp
dec
jbe
inc
ja
in
les
dec
sbb
arpl
pop
pop
cmpsl
leave
stos
pop
sahf
mov
ds
push
xchg
jmp
in
ds
adc
mov
pop
mov
fcompl
sbb
test
rcll
and
hlt
sbb
xor
mov
add
jae
aam
pushf
fwait
push
add
dec
dec
xor
sbb
cmp
xor
test
mov
loope
or
jo
sub
dec
push
cwtl
mov
mov
arpl
add
sahf
mov
push
push
xchg
sbb
pop
movl
adc
insl
nop
sbb
pop
les
pop
insl
mov
js
dec
lahf
rolb
cld
bound
call
aas
data16
into
mov
pop
or
sbb
and
imul
xchg
push
int3
cltd
mov
cmp
and
sbb
mov
nop
jne
mov
out
pop
out
cmc
pusha
jo
mov
xchg
out
xlat
jecxz
add
mov
jae
lods
insl
pop
fisttps
xchg
sbb
mov
scas
jg
and
mov
inc
xchg
sub
jecxz
or
out
mov
xchg
mov
pop
pop
rorb
leave
addb
shlb
mov
loopne
sbb
hlt
sbb
push
mov
lods
popa
pop
lret
cwtl
repnz
sbb
or
cmp
mov
xlat
iret
das
jge
mov
add
inc
ljmp
and
iret
ret
cmp
mov
shll
inc
test
cmp
sub
dec
add
loopne
push
in
pop
pcmpeqw
lahf
pop
add
mov
sbb
lahf
mov
icebp
jno
or
mov
add
loop
fists
pop
and
pop
add
test
sbb
aam
dec
fisttpll
lahf
scas
inc
idivl
sarb
pop
xor
loopne
push
lock
dec
inc
dec
inc
sub
pop
mov
lcall
mov
movsl
ss
dec
xor
mov
and
add
xor
xor
mov
cmc
sub
es
mov
adcl
and
es
stos
xchg
repz
adc
icebp
adc
cltd
ret
cwtl
push
test
lret
das
stos
mov
inc
aaa
test
je
inc
cmc
loop
loopne
loope
or
pop
inc
xor
into
cmpsl
xchg
jp
mov
int
ret
adc
jecxz
adc
xor
xchg
xor
and
sub
outsb
movsb
addr16
mov
in
stos
mulb
sbb
sub
lods
mov
push
mov
xchg
imul
cmp
xlat
inc
jb
or
jae
mov
into
add
pusha
inc
loopne
adc
cmp
inc
dec
xchg
ds
cmp
push
ret
sbb
sub
popf
pop
movsb
push
push
sbb
dec
outsl
dec
jmp
xlat
rorb
cmp
adc
mov
hlt
inc
and
add
daa
aam
nop
jmp
outsl
push
add
xchg
cmpsl
xor
sub
or
shrl
es
imul
dec
adc
movsb
imul
js
mov
roll
ret
inc
add
add
pop
aas
fildll
pop
pushf
es
mov
mov
xor
and
out
loop
add
add
repnz
mov
out
addb
push
cmp
and
push
dec
mov
fwait
push
jl
test
aad
std
push
cmp
add
push
or
aad
loopne
inc
and
faddp
push
hlt
dec
repnz
adc
jl
sarb
push
xchg
out
xchg
es
dec
ja
lock
lock
adc
insl
push
jmp
xchg
mov
out
mov
mov
ret
cmc
cwtl
sbb
pop
cmpsb
iret
mov
mov
cmpsb
call
cmp
dec
sub
rorl
mov
xor
mov
mov
lock
clc
call
clc
sarl
cmc
jns
mov
jecxz
jp
xor
shlb
cs
cmp
ret
cmp
mov
xchg
cmp
aam
fidivrs
movsb
xor
jo
shr
mov
shll
adc
scas
sbb
mov
jl
aad
pop
or
cld
subl
scas
daa
repnz
push
mov
mov
cli
sub
jbe
je
int
push
test
js
repz
sub
mov
lea
push
sbbb
inc
sub
inc
in
xchg
repnz
inc
outsl
scas
and
popa
cmpsl
lret
sub
add
push
loope
rcl
mov
cmp
jecxz
int
pop
cmp
or
or
cmp
cvttps2pi
loope
ret
inc
cmpsb
jp
push
dec
test
push
js
xchg
push
add
aas
mov
loope
jle
xchg
js
int3
push
rolb
sub
add
shll
fwait
xchg
sub
clc
jb
rorb
inc
mull
jb
push
out
jb
cmp
xor
mov
mov
stos
sub
shlw
pop
adc
cmp
and
sbb
int
pop
imul
xchg
fisubs
jae
jno
out
xchg
xabort
xor
jno
xor
add
les
shlb
sbb
mov
dec
xor
adc
dec
repnz
pop
test
xchg
mov
pop
jecxz
jne
mov
mov
es
js
pop
fbld
xor
loopne
testb
adc
push
andb
inc
insl
cmp
add
and
ret
sarl
lret
dec
mov
add
dec
add
lock
les
int3
jbe
pop
and
outsb
rep
push
mov
pop
lods
fdiv
xchg
adc
pop
test
adc
cltd
int3
gs
adc
es
punpckldq
cmp
xor
bound
ds
mov
shr
out
js
insl
das
jbe
pop
cmp
pop
or
xchg
mov
iret
add
or
sbb
xor
aaa
push
mov
call
ret
add
jnp
popf
jo
adc
daa
dec
push
inc
adc
sbb
mov
and
add
inc
sub
pop
shrl
adc
push
loop
jmp
xor
sub
sbb
mov
push
jl
pop
test
test
mov
cmp
mov
and
push
into
inc
and
xlat
or
call
inc
sbb
addl
dec
push
lret
bound
cmp
mov
pusha
jb
pop
push
test
out
sub
dec
sub
cmp
push
sub
stos
es
jle
dec
inc
push
xor
push
xor
flds
sbb
mov
xchg
xor
cmovs
mov
lret
pop
scas
bound
shlb
dec
inc
rcll
shrl
adc
orb
push
fsubl
fs
lods
jo
add
sti
std
dec
loop
movl
pop
jg
cmp
xor
negb
icebp
cmp
pop
sub
xchg
test
test
jne
movsl
pop
inc
mov
icebp
adc
and
mov
cmp
xor
adc
sub
loop
push
lock
bound
jmp
cmp
scas
and
jmp
cmpl
cmp
xchg
pop
and
inc
mov
arpl
les
mov
imul
js
adc
dec
inc
gs
rcrb
outsl
addb
adc
inc
or
cli
xor
cmp
pop
adcb
nop
mov
aam
sbb
fwait
inc
cmp
aad
mov
jle
fwait
scas
mov
pop
movl
sti
sbb
rclb
and
mov
push
jbe
pop
sbb
push
dec
lods
stos
add
jp
cmp
and
adc
dec
je
xor
ret
inc
dec
jno
xchg
into
push
sbb
push
inc
sarl
pop
push
cltd
fiadds
test
pusha
push
cltd
pop
sub
pusha
je
nop
jnp
or
sub
pusha
icebp
xor
cmp
lds
test
sahf
int
add
out
shlb
pop
test
inc
int
shll
js
cmp
ljmp
mov
sbb
add
aam
mov
mov
pop
sbb
pushf
add
xor
cmp
sbb
dec
shll
out
add
adc
add
imul
jnp
cmp
ficompl
mov
mov
push
pop
push
inc
movsb
jae
adc
inc
inc
adc
sub
dec
lds
or
lret
mov
sbb
bound
insb
sbb
sbb
imul
fdiv
mov
mov
inc
mov
push
daa
adc
sub
mov
ret
add
xchg
or
stos
adc
adc
xchg
stos
js
sbbl
call
cmp
adc
and
and
sub
adc
push
cmp
rorb
cs
push
andb
mov
push
mov
aaa
rcll
fwait
or
cmpsb
outsb
push
and
cmpb
sbb
gs
rclb
push
mov
or
and
jmp
ja
jmp
mov
or
inc
ljmp
pop
mov
cmp
push
inc
cmp
push
inc
mov
add
test
xchg
cwtl
jne
add
int
inc
shl
arpl
or
add
mov
xor
shll
inc
add
mov
sub
ljmp
dec
insl
adc
inc
ljmp
rolb
aam
loopne
inc
xlat
mulb
test
stos
jl
or
stc
inc
rorl
mov
test
and
inc
dec
fbld
test
sti
sub
sbb
cmp
data16
lea
adc
push
and
mov
inc
adc
sbb
push
jl
jo
sub
loopne
mov
cmpsb
add
ljmp
mov
mov
int3
jo
inc
repz
enter
daa
push
add
xchg
push
shrb
cmp
xchg
add
mov
fisubrs
mov
inc
in
inc
mov
inc
fisubl
xchg
cmpsb
push
aaa
leave
loopne
jo
test
sarb
jbe
cmp
mov
and
xchg
bound
sbb
jge
jmp
adc
jmp
scas
mov
cli
push
popf
sahf
jecxz
add
push
ret
adc
aad
popf
adc
mov
mov
inc
cli
jbe
xchg
xlat
adc
roll
sub
scas
adc
in
out
ja
jle
ret
je
dec
fisubrl
mov
cmp
lcall
sub
mov
cmp
cmp
test
or
test
mov
xlat
push
and
loopne
lds
loopne
push
orb
mov
xchg
sub
loopne
cmp
xor
mov
xor
stos
push
inc
imul
pop
add
and
jp
and
mov
add
add
pop
push
sbb
cmc
xor
mov
xchg
and
enter
daa
ret
lahf
jno
dec
clc
sbb
cmp
insb
push
and
dec
add
xchg
std
xor
inc
addb
or
push
adc
push
adc
xor
popf
arpl
or
pushl
mov
mov
fdivrp
or
sbb
popf
sbb
sbb
jecxz
out
dec
orl
sub
in
or
sarb
mov
out
xor
bound
or
xchg
xor
adc
andl
pop
leave
leave
dec
test
jp
push
mov
rol
jo
andl
pop
ss
jmp
addl
dec
sbb
shrl
cmp
loopne
jp
sub
mov
and
dec
test
pop
xchg
mov
lahf
mov
cmp
sbb
js
dec
add
dec
sub
mov
or
pusha
mov
lock
add
adc
lret
adc
sbb
push
add
loope
negl
aaa
jnp
ret
xchg
cwtl
pop
testb
ret
in
push
repnz
call
inc
jb
add
xor
jae
push
mov
inc
popa
push
fwait
inc
test
nop
or
stos
adc
mov
fwait
lds
mov
popf
out
and
add
xchg
es
pop
movsb
and
sub
adc
xchg
jmp
pop
push
icebp
adc
push
mov
and
jo
push
cmpsb
test
ja
cmp
push
out
push
les
negl
inc
sbb
xchg
dec
add
push
xlat
out
rclb
js
out
mov
xor
mov
ss
xchg
jecxz
cmp
fnstsw
stos
data16
pop
jge
xchg
and
mov
jbe
popa
inc
lock
push
mov
or
or
fsubr
add
cltd
mov
mov
pop
pop
rcrl
pop
imulb
mov
inc
out
cmpsl
adcl
xor
add
sbb
pop
or
addr16
je
pusha
int3
clc
mov
add
sbb
loop
jge
cmp
rol
out
push
inc
xor
and
mov
in
sbb
mov
push
hlt
xchg
xor
lds
sbb
lods
jb
pop
mov
inc
in
push
sbbb
mov
jp
fsubs
shll
fdivl
sahf
aam
loop
and
pop
je
pop
cmp
addr16
xlat
mov
loopne
stos
rcll
aad
cmp
jae
sub
loopne
inc
not
sbb
sub
sub
gs
in
pop
insb
push
add
sbb
sbb
xchg
push
or
icebp
adc
push
addb
out
les
aam
insb
stos
psrld
xor
inc
test
or
or
sarb
insb
and
add
mov
in
adc
shrl
lods
lds
jle
mov
fldt
jmp
xor
sbb
movl
aas
scas
rclb
mov
in
rorl
ja
lahf
rcrl
xchg
xchg
fs
push
mov
in
pop
rcrb
ret
sub
add
sbb
add
fsts
stos
adc
mov
in
mov
stos
pop
inc
rclb
ret
or
out
dec
cmpb
mov
inc
dec
movsl
sub
lds
xchg
push
popf
arpl
pop
jge
and
jmp
pusha
addb
mov
adc
or
inc
shrl
mov
jl
imul
ret
and
shl
or
mov
mov
cmpsl
mov
mov
data16
jo
andb
fwait
add
and
pusha
scas
and
ss
lret
cld
or
das
or
dec
cmp
imulb
push
xchg
xor
in
push
cmp
pusha
dec
pop
in
add
and
adc
pop
pop
outsl
mov
add
outsb
pop
push
out
je
or
and
scas
cmp
sbbb
sbb
outsl
stos
add
aad
add
cwtl
xor
lret
xchg
inc
inc
sub
pop
mov
stos
outsl
mov
ret
scas
add
and
int
jne
sub
or
mov
sub
or
jne
ret
pop
xor
sarl
shr
jnp
movsb
out
pop
push
mov
daa
bound
pop
xor
push
inc
and
aam
mov
inc
popf
sub
mov
sarl
pop
push
popl
pop
and
dec
cmpsl
and
jg
push
mov
mov
pop
inc
inc
pop
dec
movsb
sbb
sbb
insl
or
dec
jge
xor
add
sbb
jae
inc
mov
insl
or
sub
pushf
jno
movsl
movsb
or
adc
pop
sbb
add
mov
inc
adc
xchg
scas
push
aaa
mov
movl
mov
dec
jg
add
inc
aam
adc
jle
jp
mov
lea
jle
or
repz
test
lds
dec
fidivrs
mov
sbb
jp
mov
lock
inc
jne
xchg
mov
pop
jns
or
js
mov
xchg
push
lea
in
jecxz
push
test
les
lahf
mov
and
ret
lahf
test
and
push
push
pop
daa
xchg
mov
mov
cs
outsb
xchg
inc
add
stos
push
push
sbb
orb
aaa
pop
inc
pushf
jne
inc
adcl
aad
aam
or
xor
push
push
add
pop
add
cwtl
jmp
mov
dec
mov
pop
fdivrl
push
into
popf
or
dec
jo
sub
int3
xor
mov
xor
aaa
test
cwtl
int
test
dec
xchg
jmp
rorl
insb
mov
add
cmp
xor
mov
dec
jbe
mov
mov
testb
mov
mov
and
inc
sub
sbb
repz
sbb
pusha
rcr
push
adc
and
and
adc
mov
in
insl
mov
xor
dec
lcall
add
ret
test
aas
pop
adc
mov
push
movsb
clc
or
adc
inc
movsl
dec
rcll
push
rcll
or
loope
adc
rcll
and
aam
push
inc
xchg
mov
dec
add
xor
sub
xchg
test
and
call
xor
cmpsb
shr
mov
xor
loop
loopne
mov
lds
jb
xor
inc
ffree
and
pop
stos
in
xchg
into
stos
and
mov
insb
jb
test
mov
in
sarl
in
mov
ja
pushf
jne
adc
sub
stos
push
push
shlb
pop
lcall
js
and
test
inc
and
loopne
inc
inc
add
adc
lods
sub
pop
or
movsl
insb
sbb
adc
and
and
add
mov
jecxz
mov
push
mov
daa
jecxz
push
add
jmp
add
out
rorl
sub
mov
xor
jnp
lods
add
movsb
andl
sub
sub
orl
lds
lods
or
test
add
jb
mov
or
dec
in
jecxz
mov
mov
sub
mov
or
pusha
movsl
or
mov
fldcw
push
xor
pop
jbe
add
jmp
aaa
fwait
or
lret
add
cmpsl
push
mov
pop
jno
fildll
fcmovbe
mov
jns
or
jno
mov
bound
mov
fiadds
and
je
arpl
fcmovnb
mov
add
add
adc
rolb
dec
rcll
xchg
hlt
add
aas
sbb
xchg
insl
lea
imul
scas
int3
orb
cwtl
push
dec
movsb
paddusb
dec
inc
lret
jp
cmp
adc
mov
pop
mov
testl
sbbl
movsl
arpl
jmp
adc
add
jp
icebp
ret
sbb
sub
cmp
jecxz
add
add
cmp
push
icebp
and
xchg
sub
arpl
dec
roll
adc
adc
jb
xor
sub
les
add
cmp
es
pop
aas
sbbb
adc
cmpsl
daa
into
add
movsb
cli
adc
or
or
push
push
cmp
lcall
ja
or
ficoms
pop
and
pusha
cwtl
and
test
iret
and
pop
add
mov
add
int
lahf
call
cwtl
jge
adc
cmp
sub
cmc
cs
add
sbb
aam
xor
popf
inc
pop
sub
inc
xor
add
addr16
or
loope
aas
jp
inc
cmp
and
or
inc
pop
sbb
adc
and
ljmp
loop
cmp
cmpb
repnz
je
in
adc
and
pop
lahf
push
dec
mov
rorb
int3
mov
adc
popl
or
fstpl
mov
add
jne
rolb
mov
push
push
ds
jl
xchg
push
adc
cltd
adc
gs
test
xor
and
push
inc
add
sub
in
shlb
hlt
mov
decb
mov
xlat
js
add
and
mov
sbb
adc
pop
mov
inc
imul
js
pop
pop
push
js
js
jnp
mov
sbb
imul
and
xchg
and
and
sbb
mov
adc
bound
and
mov
push
je
in
push
cmp
and
mov
scas
pop
push
sub
and
les
push
pusha
add
pop
inc
adc
mov
js
jge
test
and
je
inc
les
mov
inc
add
or
inc
mov
icebp
iret
or
js
scas
psrad
aam
loop
sub
fsts
in
sub
push
mov
lods
and
movsl
daa
je
pop
inc
mov
fadds
pop
mov
fsubs
and
add
data16
push
dec
or
push
sbb
mov
insb
push
rclb
jbe
pop
push
int3
ret
pop
mov
mov
idivl
loop
jle
push
add
inc
inc
pop
lcall
aad
jl
xor
push
pop
push
and
aad
mov
test
mov
adc
pop
cmp
mov
pop
into
out
push
daa
leave
lea
adc
icebp
add
outsl
test
mov
ret
lea
mov
flds
or
imul
sub
jecxz
sub
mov
out
xor
mov
ret
bound
sbb
push
int3
clc
das
mov
mov
push
insl
mov
dec
push
xor
out
ja
sub
mov
xchg
pop
lock
bound
dec
xchg
cmp
inc
xchg
and
pop
add
shlb
test
pop
fcoms
and
fbstp
inc
int3
mov
fadds
and
sarl
iret
or
loope
or
push
mov
xor
inc
pop
mov
push
xchg
mov
pop
push
pushf
jmp
movsb
adcb
mov
xor
in
icebp
mov
popf
fstps
xor
rorl
sbb
stos
popa
sub
cmp
and
notl
std
lds
ja
shrb
push
ret
aad
xor
sub
lods
pop
or
push
cmp
adc
add
arpl
xchg
lods
and
test
mov
sub
aad
adc
fwait
add
dec
ror
out
add
orl
iret
dec
xor
sub
bound
adc
xchg
ret
lcall
add
mov
sub
and
fstpt
push
xor
xor
push
shll
test
add
ja
mov
pop
jl
mov
lock
sub
lds
ret
out
jne
pop
xchg
out
mul
xlat
jmp
ss
cmp
inc
xchg
mov
je
adc
shll
loope
mov
push
inc
ret
or
movsb
mov
mov
push
les
pop
popa
aam
mov
in
add
pop
jp
mov
inc
lea
mov
jmp
mov
add
fcoms
lods
jae
cmc
aas
aaa
mov
xor
inc
mov
cmp
test
push
stos
jge
pusha
adc
clc
pop
test
adc
pop
icebp
sub
xor
lret
test
mov
imul
adc
iret
push
dec
mov
sbb
sbb
or
scas
inc
fwait
and
aam
out
adc
movsb
ret
mov
cwtl
xchg
mov
sbb
je
jbe
push
push
mov
icebp
add
pop
adc
or
bound
mov
inc
stos
push
movsb
test
inc
fisubs
cmc
js
mov
mov
xor
push
shrl
and
adc
or
test
inc
sub
add
stos
lret
inc
mov
xchg
pop
inc
aad
out
push
and
adc
mov
mov
mov
stos
mov
cmc
adc
sbb
aad
pushf
hlt
jmp
ret
ja
movsb
dec
scas
test
inc
sahf
mov
or
movsb
cmp
mov
add
xor
push
dec
mov
aad
jle
int3
es
sub
adc
std
outsl
jmp
repnz
mov
xchg
call
or
into
arpl
dec
add
sub
sti
pop
xor
lods
mov
fs
lea
shll
adc
xchg
jno
ljmp
loopne
inc
cmpb
add
lcall
or
adc
in
add
les
xor
mov
sub
and
stos
insl
push
std
daa
mov
inc
jnp
cwtl
sub
test
and
icebp
stos
xor
fstps
lock
jnp
mov
mov
das
push
xchg
call
add
popa
push
sub
nop
xchg
push
add
xchg
mov
pop
shlb
fs
pop
push
or
dec
jno
loopne
sbbb
sti
int
andb
sbb
adc
sub
scas
daa
in
add
jnp
psubd
stos
push
add
jl
add
add
xor
xchg
ret
add
push
cmp
ffreep
lahf
cmp
adc
push
sub
jp
xchg
inc
loop
inc
sbb
out
and
sub
mov
pop
xor
popa
inc
test
int
add
jne
add
sbb
outsl
int
fbld
lahf
bnd
lcall
push
sbb
or
xor
loopne
cmp
cmp
scas
cmp
in
dec
or
add
es
and
sub
je
inc
sbb
sbb
push
and
and
push
mov
add
mov
nop
and
xor
add
ja
inc
mov
add
sub
in
mov
ret
xchg
scas
adc
sbb
dec
mov
xchg
lcall
pop
xor
or
aad
cmp
lret
dec
cwtl
fisubl
les
mov
enter
xor
test
mov
mull
push
cmp
testb
jb
push
addr16
je
mov
xor
ret
dec
mov
xor
push
jl
sbb
sbb
mov
nop
out
pop
lods
es
lret
inc
les
popa
fisubrl
add
sbb
add
pop
mov
add
mov
movsb
mov
test
adc
or
mov
xor
xor
pop
mov
sti
in
xor
in
or
dec
adc
push
add
sub
dec
push
dec
ss
add
adc
clc
les
bound
adc
shll
ret
pusha
xchg
std
adc
dec
adc
adc
in
push
add
scas
add
js
lcall
ret
mov
push
jo
mov
cmp
push
lods
fldcw
nop
inc
jno
into
sub
sub
aam
mov
pop
jge
jge
xor
mov
jae
push
and
or
push
out
jo
xor
cmpsl
add
inc
cmovne
or
xchg
xchg
cmpsl
fs
in
icebp
subb
cltd
add
adc
mov
ss
je
iret
cs
jecxz
test
in
and
mov
jp
push
loopne
sub
imul
add
and
push
xor
das
or
stos
and
dec
popa
das
loopne
mov
aas
cli
stos
xor
fdiv
cmp
xchg
sbb
push
push
mov
fisttpll
push
cmp
or
inc
xor
inc
dec
dec
lock
stos
xchg
add
cmp
push
scas
lock
das
mov
sub
xchg
add
les
xchg
jl
jbe
sbb
mov
fistl
xchg
int
add
jno
jnp
lds
cmpsl
and
gs
add
mov
adc
and
push
in
push
dec
push
aad
or
or
scas
stos
push
nop
andb
mov
inc
adcl
std
test
insl
lock
in
dec
jne
dec
jae
xchg
mov
and
mul
outsl
or
push
mov
scas
frstor
stos
add
scas
loop
adc
pop
xchg
ss
xor
and
lret
in
jle
add
cmp
push
jns
addr16
int
xchg
es
daa
insl
sbbl
fwait
adc
cmp
jecxz
loop
mov
fnsave
sub
push
or
mov
in
inc
adc
cmp
sub
add
loopne
dec
fsubr
inc
enter
push
sti
fmuls
inc
inc
dec
lods
mov
ret
jo
shlb
add
xchg
stc
xlat
loop
loope
add
or
in
sarb
into
or
rol
mov
int3
loop
scas
stc
outsb
adc
or
rclb
and
push
add
test
jnp
or
ja
push
mov
movsl
push
sub
addb
inc
loop
xchg
mov
xchg
jno
adc
idivb
xchg
sub
addr16
popa
pop
push
adc
dec
lcall
sub
push
cmc
cmp
adc
das
test
jo
adc
xor
pushf
and
sbb
cmp
xchg
es
stc
dec
inc
ret
addl
push
ret
xchg
jmp
adc
pusha
rol
dec
outsl
or
mov
jb
inc
mov
jmp
add
aam
mov
loopne
adc
xchg
pop
daa
add
call
insl
stos
add
test
bound
adc
mov
inc
cmp
jne
insl
scas
pop
xlat
adc
adc
or
mov
movsb
mov
out
mov
pop
mov
cld
cmc
jne
mov
imul
pop
cs
call
pop
push
push
arpl
mov
add
sbb
mov
outsb
daa
mov
push
jbe
mov
mov
pop
mov
push
xchg
repz
mov
inc
fcmovu
inc
cwtl
icebp
leave
adc
or
mov
xorb
cmp
ret
xor
insl
roll
jb
push
adc
lret
mov
pop
inc
sub
sbb
call
cvtps2pi
call
inc
scas
pop
shll
arpl
adc
pop
adc
ss
jnp
adc
sub
lret
add
inc
jl
loopne
cmpsl
push
aas
mov
scas
cs
jp
push
ljmp
mov
and
sbb
inc
xchg
mov
xor
bound
push
js
int
scas
push
add
pushf
data16
mov
sbb
addr16
add
mov
mov
push
inc
scas
mov
push
mov
adc
call
adc
push
xor
adc
sub
xchg
ss
daa
jle
push
mov
xor
and
call
mov
cli
stos
cwtl
adc
or
xchg
jns
inc
mov
sub
shrl
and
lock
and
mov
call
jl
push
cmc
inc
pop
ret
test
xor
cmp
lea
frstor
or
inc
ficomps
pop
lret
call
cmp
cmp
ret
cmp
cmc
test
add
fldl
rcl
js
and
adc
cmp
fs
pop
je
mull
add
testl
jns
xor
pop
pop
cmp
xor
or
dec
test
cmp
add
sbb
adc
insl
insl
in
mov
repz
push
cmp
push
je
mov
jle
mov
test
mov
xor
cmp
cmp
adc
xor
mov
seta
cs
adc
and
jge
push
lret
mov
mov
jmp
sub
jle
add
cmp
pushf
add
dec
add
hlt
or
mov
clc
xlat
sub
cmp
dec
jge
xor
inc
or
call
inc
jo
stos
mov
dec
sub
sahf
loope
dec
dec
xchg
pop
cli
mov
es
adc
out
pusha
aas
push
int3
rolb
or
inc
jo
bound
adc
popa
and
sub
addr16
stos
xor
test
and
mov
cmp
jg
mov
cmp
ret
sub
shlb
mov
push
daa
mov
pop
jb
or
dec
mov
test
pop
aad
adc
sub
cmp
sbb
mov
cmp
adc
adc
pop
or
les
shlb
nop
mov
dec
sbb
and
inc
dec
jae
push
adc
aam
icebp
xor
add
rcr
pop
jmp
cmp
push
insl
cmpsl
mov
or
into
push
mov
jns
icebp
cmp
adc
xchg
popf
add
push
loopne
and
xor
into
sub
outsl
mov
lds
fldt
fs
push
sbb
scas
push
loope
loop
loopne
inc
loop
mov
sub
clc
dec
add
or
repz
dec
aaa
or
push
adcb
dec
adc
aaa
xchg
and
enter
sub
pop
add
inc
jb
sti
mov
aaa
jp
sub
js
mov
and
or
xor
ret
and
loopne
inc
sub
js
dec
ret
addr16
sete
lds
push
pop
notl
js
mov
movsb
push
xor
inc
aam
call
int3
pop
mov
push
dec
rorl
rorb
leave
and
iret
data16
outsl
xor
and
xchg
mov
xor
scas
xor
sub
jge
pop
lods
add
mov
fldt
sub
add
je
lret
push
mov
hlt
andl
mov
jo
push
shlb
aad
push
mov
jecxz
mov
add
mov
sti
mov
pop
and
adc
imul
jmp
add
or
pop
out
mov
jno
sub
aam
add
and
add
pop
cwtl
inc
shll
sbb
mov
or
ja
jl
add
test
dec
es
sbb
jmp
sub
sub
add
pop
orl
int
mov
add
aam
lods
bound
gs
sub
push
mov
push
gs
or
faddl
int
dec
sti
je
or
dec
adc
pusha
pop
push
mov
stos
sub
sub
stos
mov
stos
add
jl
adcl
add
jb
pop
imul
add
and
addr16
cwtl
adc
add
inc
loop
loopne
mov
jmp
shrb
xchg
mov
or
shrl
pop
daa
mov
or
sub
lcall
push
testb
fmuls
pop
popa
xchg
mov
mov
jns
sub
jnp
insb
sub
dec
and
sub
push
inc
rorb
xor
mov
test
dec
adc
cli
scas
shlb
mov
inc
sub
add
mov
dec
sbb
inc
xor
adc
push
hlt
mov
loopne
jecxz
add
das
mov
lcall
and
jnp
sbb
outsb
aad
aad
pusha
ret
mov
xlat
xor
mov
addb
mov
or
mov
dec
test
insl
mov
fdivr
mov
bound
insb
inc
fstl
xor
addr16
jmp
movsb
mov
push
rcll
call
xor
mov
jnp
rcl
dec
cmp
aas
mov
lods
lds
inc
cmpsb
xchg
sbb
jbe
mov
dec
dec
inc
shrb
lds
mov
fdivrl
pop
cmp
lahf
add
icebp
xor
add
pop
push
mov
jb
lods
loopne
push
mov
xorb
dec
sub
xor
dec
xor
shrb
call
mov
mov
xor
dec
mov
mov
sbbl
jmp
fwait
mov
and
pop
aam
add
lods
inc
aad
xlat
call
inc
or
pusha
call
adc
scas
sub
std
mov
cmp
stos
mov
outsl
dec
std
mov
outsb
push
cmp
mov
icebp
inc
jge
push
xor
jl
inc
and
dec
scas
xor
andb
sub
aam
mov
jp
imul
test
mov
xchg
xor
sbb
inc
hlt
gs
jbe
adc
pusha
lcall
sub
xchg
dec
and
mov
xor
aaa
or
mov
sbb
mov
and
push
pop
or
push
jns
mov
cmp
push
dec
fcoms
add
or
xor
loop
xchg
jb
loope
stos
aad
push
push
add
sarl
les
cmp
cmp
mov
cli
dec
add
dec
pusha
push
xchg
xorl
inc
xor
outsl
add
or
sbb
adc
mov
les
aas
leave
stos
bound
pop
pop
sbb
cmp
rcll
es
inc
stos
adc
mov
mov
add
fcmovb
push
mov
mov
je
adc
or
mov
and
mov
add
jnp
mov
add
jp
ret
pop
lret
into
andl
sub
sbb
je
loopne
sub
test
mov
pop
jb
pop
jae
mov
jecxz
jbe
ja
sbb
js
sub
add
jge
cmp
jae
fwait
xchg
das
rcll
push
pop
sub
xchg
jecxz
addb
add
mov
inc
clc
or
mov
andl
push
out
sub
xchg
nop
sub
mov
mov
xchg
cmp
sahf
lahf
inc
test
fwait
xchg
push
sub
mov
insb
lods
and
adc
imul
push
xorl
cwtl
inc
repnz
jo
lret
and
and
in
jmp
js
orl
jecxz
cmp
cmp
ja
sub
out
rclb
lods
mov
clc
mov
xchg
jecxz
xor
sub
shll
inc
test
roll
stc
ja
inc
and
mov
xlat
sti
mov
out
mov
add
inc
inc
mov
xor
ret
ret
mov
push
movb
les
pop
jne
sub
sbb
icebp
inc
add
lock
call
pushl
mov
cs
add
adc
and
xor
addb
loop
aaa
and
in
or
scas
cmp
popa
add
pop
mov
mov
add
gs
bound
jl
mov
loopne
test
testl
and
and
jbe
shl
into
mov
mov
mov
aam
lcall
popf
cmpsb
push
ret
or
push
xchg
add
addb
inc
sub
jle
inc
add
cmp
outsl
dec
fisttps
fadds
out
and
mov
andb
shrl
xlat
sahf
and
fildl
adc
push
rclb
cmp
add
mov
add
add
push
cmp
test
sbb
mov
sub
add
add
pop
inc
sub
push
mov
mov
scas
and
and
addb
mov
push
icebp
sub
imul
lea
sbb
popa
adc
xor
psubq
and
aaa
sub
mov
xchg
push
sub
frstor
sub
adc
xchg
mov
adcl
shlb
pop
in
ss
and
sub
adc
mov
ret
int
xchg
add
aad
xchg
int3
mov
rolb
jnp
jge
fildll
or
ret
and
outsl
movsl
jmp
loop
in
and
jmp
jnp
pop
adc
xor
or
cmp
gs
loope
inc
fstpl
cmpsb
fmuls
in
arpl
adc
xlat
push
pushf
addl
sub
icebp
mov
test
jg
enter
dec
jo
call
mov
adc
mov
xor
call
push
das
push
out
jge
and
scas
jae
outsl
or
aam
daa
add
sub
xor
and
fadds
push
mov
fcomi
ja
inc
cltd
fcmovbe
xchg
xor
les
push
fisttpl
inc
lock
push
push
push
sub
mov
mov
shrb
bound
andl
add
pusha
mov
or
and
mov
xchg
adc
loop
mov
scas
inc
test
int3
sub
les
adc
lods
pop
push
adc
pop
and
push
insb
sbb
push
jmp
cmpsb
lock
iret
lldt
lods
lret
jl
shlb
xor
mov
xor
jge
jnp
adc
inc
lds
sub
loop
int3
mov
lcall
adc
sbb
mov
inc
cmpsl
bound
je
or
mov
adc
sarb
xor
outsb
pop
dec
or
andb
mov
pop
and
ljmp
aad
gs
xor
push
fs
hlt
scas
push
add
dec
shlb
aad
insl
xor
sbb
loop
mov
out
mov
mov
dec
fsubs
ficoml
jne
pop
mov
mov
aad
lret
js
adc
cmovne
mov
loop
insb
sub
lcall
or
sbb
or
icebp
and
mov
inc
sbb
pop
test
cmp
sbb
cmp
icebp
mov
mov
movsb
cmp
lcall
or
xlat
loopne
xor
mov
imul
and
js
ljmp
mov
pop
shlb
xor
push
data16
fsubs
mov
lds
bound
adc
popa
pop
push
outsl
sbb
lock
in
loop
push
add
lret
sub
inc
daa
ret
sub
add
xor
sarb
imul
sbb
mov
sub
jl
and
pop
out
ret
pop
add
and
insb
adcl
int3
sub
mov
mov
nop
inc
je
adc
sub
and
mov
and
dec
dec
push
inc
sbb
xchg
stc
jg
pop
icebp
push
out
insl
test
popf
push
inc
adc
daa
xchg
movsb
lods
dec
cmc
pop
jp
stos
pusha
sbb
lods
pop
add
call
and
addr16
add
pop
push
push
xor
imul
dec
subb
inc
rcr
shr
jnp
clc
jb
add
cld
ret
adc
push
je
sub
mov
xchg
push
jge
loop
out
sub
stos
push
pop
add
call
shr
jo
and
jbe
mov
out
not
add
push
jl
xor
jge
mov
cmc
and
sbb
add
addl
jp
decb
mov
adc
pushf
sbb
and
and
leave
aam
add
test
dec
ss
pop
inc
rcrb
jmp
daa
and
push
aam
das
pop
adc
call
mov
push
stos
pop
ds
mov
add
inc
cmp
xor
das
ss
push
jnp
insb
fwait
int
mov
push
inc
movsb
js
mov
outsb
inc
jb
outsb
loop
inc
fsubs
dec
lahf
je
sbb
add
cltd
loop
pop
cmc
and
out
mov
cwtl
xchg
inc
push
mov
push
stos
xchg
sbb
mov
inc
dec
and
test
andl
pminsw
xchg
dec
sbb
adc
or
xchg
scas
and
sbb
sub
push
push
nop
cmpsb
mov
xor
shlb
or
xor
adc
add
push
mov
adc
or
enter
mov
adc
inc
dec
ljmp
sub
sub
orl
adc
fwait
inc
fwait
scas
or
sub
ja
fidivs
daa
icebp
add
insb
movsb
das
or
pop
pop
xchg
sub
add
aad
push
popa
pop
rcrb
xchg
mov
push
add
lock
loope
shrl
cmp
test
jp
in
push
add
and
jb
cmc
xchg
mov
pushf
loopne
push
or
dec
adc
push
es
ss
or
shrb
jbe
lahf
mov
outsl
stc
fwait
js
sbb
rorb
inc
lods
push
pop
out
fs
sub
test
in
inc
les
jb
jp
jne
pop
ss
xchg
inc
add
mov
add
pop
xor
cmp
push
cmp
xchg
in
add
mov
sub
cmp
mov
dec
shlb
mov
aaa
push
ror
mov
fisubs
pop
push
sub
or
xchg
xchg
call
insb
ja
inc
arpl
stos
jmp
dec
add
sub
mov
add
cmp
xchg
cmpsb
fs
add
jge
jnp
lods
mov
pop
roll
mov
in
imul
mov
addr16
js
pop
pusha
jno
sbb
xchg
dec
sub
lods
push
daa
cmpb
sbb
adcl
aam
adc
jmp
in
in
jne
and
jnp
mov
addb
mov
orb
push
pushf
loopne
or
fidivs
inc
lcall
enter
push
dec
mov
jl
jmp
or
sub
fldcw
pusha
inc
scas
mov
or
or
jae
movsb
sub
fdivs
mov
lods
or
imul
sub
loop
dec
int3
mov
icebp
ljmp
sub
dec
shlb
mov
and
cmpsb
gs
add
pushf
push
les
mov
xor
les
orl
sbb
dec
imul
shr
mov
mov
mov
add
add
or
mov
andb
xchg
dec
mov
mov
aaa
mov
cmp
push
sub
mov
imul
fbld
dec
cmp
jecxz
fadd
jnp
inc
jmp
sbb
jne
lods
data16
pop
xchg
mov
adc
rcr
mov
and
addr16
adc
inc
fldcw
adcb
std
sbb
stos
pop
mov
testb
cmpsl
fwait
mov
out
add
cmp
jp
jb
adc
pop
jmp
subb
pop
ja
mov
clc
push
shld
mov
sub
sbb
lret
imul
imul
xchg
mov
addr16
jae
aaa
sti
mov
sbb
aam
push
xchg
add
mov
mov
add
into
adc
fcoms
fsubrp
fdivrl
ja
push
pop
push
mov
cli
sub
aas
push
subb
mov
out
mov
sub
xlat
mov
fimuls
popa
addb
outsb
call
negl
fmull
jmp
addr16
mov
jle
call
sbb
movsl
aas
xchg
or
sbb
mov
jnp
ds
outsl
pop
pop
popfw
jp
push
repnz
push
jge
pop
addr16
dec
sub
icebp
adcb
rcl
mov
push
inc
mov
adc
and
gs
inc
inc
sti
cmp
adc
dec
cmpsb
jnp
xor
mov
push
sub
cmp
adc
jl
inc
adc
loopne
inc
icebp
dec
incl
add
nop
mov
xor
adc
xlat
je
mov
mov
iret
and
sbb
mov
mov
dec
pop
xor
adc
pop
or
inc
ror
lret
jecxz
jb
out
sbb
inc
aam
push
xchg
inc
jl
dec
or
lods
or
or
outsb
mov
jbe
popa
aaa
jns
mov
in
mov
btc
or
inc
insb
pop
jg
jmp
inc
ja
lods
mov
arpl
sub
lea
sti
lret
and
shlb
adc
or
cmpsl
or
call
mov
fldcw
lds
sub
and
adc
adc
sub
push
pop
fsts
mov
sti
mov
jnp
daa
push
dec
cmp
cltd
or
pop
cmp
cmpb
das
outsb
add
fwait
jg
ret
lcall
cmp
mov
jp
lcallw
or
and
cmp
leave
add
mov
jnp
aam
xchg
add
call
dec
mov
test
adc
popf
arpl
adc
cmp
dec
push
cmp
out
cmp
sub
sbb
push
loopne
sub
sub
mov
pushf
push
mov
push
cwtl
jge
test
pusha
push
roll
jmp
test
rorb
xlat
dec
lock
adc
push
imul
xchg
out
test
loop
cmpsl
and
cmp
or
daa
adc
jne
inc
and
je
pusha
rcr
sub
xchg
dec
sbb
xor
js
pop
mov
lods
cwtl
dec
add
jge
push
loope
mov
rolb
mov
sub
xchg
addr16
or
aad
insl
pop
cmp
push
daa
cmpb
pop
inc
jle
int3
nop
add
push
adc
and
icebp
sub
adc
mov
pop
icebp
clc
and
pop
in
ds
add
shll
and
push
cmp
stos
dec
or
sub
dec
test
sub
pop
xchg
mov
or
push
add
pop
or
push
sti
add
and
adc
pushf
jmp
dec
stos
pop
cmp
jo
add
and
cmp
xor
js
jge
xor
pop
add
adc
out
je
fwait
lds
daa
jle
push
xor
push
jbe
js
xchg
sbb
ror
cmp
stos
fucomi
fsubr
mov
inc
jo
xchg
out
jne
dec
inc
aam
jne
test
popf
xor
dec
pop
out
mov
div
push
xchg
jbe
addb
push
and
notl
mov
xor
push
or
pop
stc
xchg
xor
in
int
fildl
dec
pop
push
in
lret
adc
push
xchg
mov
insl
ret
push
add
cmp
in
or
and
jl
arpl
pop
and
adc
mov
clc
cmp
mov
and
push
cmp
mov
jmp
add
push
into
in
jno
in
aad
mov
push
push
ret
int3
mov
js
xchg
cmp
sbb
mov
fistpl
fs
xor
dec
inc
out
pop
xor
outsl
adc
xor
mov
daa
xor
push
add
add
sbb
fsubrs
or
and
xor
jge
or
enter
mov
ret
mov
sub
nop
test
popf
into
pop
jae
fxam
fdivrl
push
inc
out
fstp
or
push
xlat
test
inc
add
or
push
xchg
jp
int
jp
pop
push
mov
push
imul
mov
xor
lret
shlb
mov
push
push
push
mov
decb
insl
cmp
fisubrs
add
mov
sub
mov
pop
adc
shr
out
addb
sub
mov
adc
sbb
mov
cmp
shll
cmpl
fwait
std
lds
ret
pop
mov
xor
jae
arpl
push
call
cltd
pop
stos
sbb
pusha
mov
push
lds
sahf
bound
and
rorb
mov
lods
fcomps
push
mov
or
lret
mov
call
jmp
adc
xor
sub
pop
xor
sub
andb
daa
es
leave
movaps
cltd
fwait
jo
inc
fisttpl
test
cmp
int
aaa
jle
push
dec
xor
shr
mov
mov
push
int
sbb
int
in
jnp
js
xor
imul
or
mov
dec
dec
cmp
pop
icebp
es
in
pop
sarb
outsb
test
push
jnp
dec
dec
mov
fwait
add
ret
push
arpl
aaa
ss
sub
pop
imul
dec
and
or
ret
stos
sti
sahf
sub
mov
rcr
pop
pop
jg
mov
mov
ret
fidivrs
arpl
add
sbb
or
xchg
out
cmpsb
neg
sbb
mov
and
mov
nop
loopne
push
xchg
push
cwtl
jmp
lea
aam
fsts
cmovnp
inc
and
xchg
loop
out
jae
mov
out
push
push
xchg
lock
shlb
inc
sbb
sub
adc
je
add
cmp
xor
jbe
adc
lods
push
adc
cwtl
dec
cmp
jae
jnp
push
and
daa
shll
mov
mov
mov
jae
mov
xchg
int
imul
imul
lock
mov
loop
push
dec
inc
xchg
inc
mov
mov
bound
mov
or
inc
loop
xchg
test
xchg
idivl
orl
outsb
imul
sub
testl
hlt
inc
push
fcmovnu
jl
fimuls
xchg
jb
ret
mov
push
outsb
xchg
xor
icebp
je
dec
mov
xor
xor
nop
loope
loop
daa
xchg
or
adc
or
mov
adc
mov
ja
fstpt
push
outsb
push
dec
mov
push
and
adcb
call
jp
fsub
xchg
mov
lret
daa
loope
imul
scas
ja
inc
hlt
int
pop
jge
call
add
mov
sbbl
jb
or
adc
cmp
test
or
xor
addb
jmp
mov
es
inc
jnp
xor
pop
adc
and
repz
enter
fbstp
fcompl
je
adc
lret
sub
push
add
or
jmp
cs
das
pop
arpl
idivl
popa
sbb
nop
lods
cmpl
imul
mov
testl
mov
pop
insb
and
cs
pop
sbb
inc
outsb
pop
push
fdivl
out
or
pop
fildll
movsb
mov
ficomps
dec
pop
shrb
mov
push
xchg
sbb
and
es
sbb
mov
xor
test
loopne
cmpsb
sti
xor
dec
sbb
sti
mov
lods
jbe
sti
ret
xor
shrl
cmpsb
inc
mov
xchg
mov
fcmovu
push
imul
adc
cwtl
js
imul
aam
cli
or
daa
push
addr16
jecxz
mov
xchg
sahf
mov
add
push
leave
shlb
adc
in
roll
sbb
stos
stos
mov
xchg
movsb
test
or
ret
aam
adc
shl
nop
pop
xchg
stc
add
jecxz
arpl
pop
cmpb
add
fisubs
test
push
push
movsb
dec
sbb
pusha
dec
call
cmp
cmp
xorl
arpl
jmp
aam
xchg
ret
and
cmpsl
cltd
mov
dec
ret
dec
out
xor
mov
jmp
sbb
inc
fmulp
and
dec
mov
or
dec
inc
mov
adc
fwait
xor
mov
push
clc
mov
js
insb
push
mov
out
sub
and
sbb
dec
mov
pushf
mov
das
adc
imul
fwait
sbb
ficomps
sub
or
fisttpl
pop
add
cli
jg
fstps
imul
dec
adc
ljmp
ss
sti
mov
or
jmp
adc
fwait
popf
jns
test
and
decl
push
repz
sbb
and
cmova
xor
jle
sti
push
ret
sbb
or
push
or
xchg
mov
and
ret
cmpsl
ljmp
cld
xor
js
daa
std
mov
lcall
je
hlt
push
add
sbb
test
andl
setnp
ja
cmp
cli
enter
ja
aam
das
rorb
inc
pushf
ret
add
sahf
ret
test
fistps
mov
sbb
inc
ret
sub
dec
mov
pop
xchg
stc
adc
xchg
or
dec
sbb
sahf
add
aam
lods
test
push
pop
mov
test
es
mov
mov
movsb
scas
fistpl
sbb
xor
pop
and
fdivrs
and
or
mov
mov
xchg
gs
cmp
fldpi
es
lods
push
pop
mov
push
aaa
std
and
or
and
sub
js
mov
sbb
les
insb
xchg
cltd
mov
imul
test
mov
dec
xorb
push
mov
mov
adc
imul
sbb
data16
rorb
xchg
nop
js
pop
jno
rorb
aad
sbb
xchg
push
sbb
cmp
andb
push
dec
enter
and
ja
ljmp
cmpsl
mov
sbb
xchg
push
enter
mov
mov
rcl
ret
add
xchg
lock
pop
push
data16
push
fildll
out
jmp
push
in
mov
fmul
inc
nop
or
idivl
add
out
movq
test
lret
cmp
push
or
les
testb
add
ficompl
in
or
lret
sub
mov
and
sbb
xchg
cwtl
add
roll
xor
xchg
push
shll
ja
and
loopne
adc
sbb
aam
fcmovb
cmpsb
std
add
cwtl
inc
jo
pop
mulb
popa
or
adc
imul
sbb
sbb
ret
push
daa
cmp
aam
mov
adc
sbb
jp
xchg
in
popa
mov
mov
xor
test
js
mov
cmpsl
pop
mov
fcom
popf
adc
imul
sti
data16
and
jl
lods
xchg
aam
sub
pop
xor
mov
ret
xorb
ret
cwtl
nop
insb
inc
jge
cmp
cmpsl
and
nop
cmc
lods
mov
imul
mov
test
adc
or
sbb
out
adc
fcmovu
sti
push
daa
pop
imul
xchg
jne
xchg
dec
hlt
or
dec
call
fcomip
mov
cli
loope
and
aas
adc
sahf
cmp
add
jo
into
popa
sbb
mov
rolb
pop
mov
andl
mov
and
andb
scas
negb
mov
or
jb
sbb
xchg
xor
dec
jmp
cld
pusha
aam
jne
gs
stc
adcb
shr
jmp
arpl
test
das
push
pop
incl
inc
and
inc
or
adc
mov
jne
mov
jae
adc
or
mov
pop
jae
and
addb
lea
sub
mov
jne
inc
pop
xor
decb
das
fmuls
aam
dec
sub
repz
xor
testb
pop
pop
jmp
jp
stos
push
cmc
fadd
and
adc
push
sub
int
mov
sub
mov
and
or
push
jno
xchg
mov
leave
dec
dec
sub
push
mov
or
arpl
pushf
stos
outsl
and
push
leave
pop
or
fwait
insl
sbb
insl
mov
sarb
pop
or
lea
sub
in
fwait
pop
cmp
daa
add
ja
test
outsb
push
stc
testl
push
sbb
orb
sub
and
xor
and
lock
jbe
push
ljmp
and
iret
xor
lret
adc
add
imul
add
addr16
mov
xor
pop
cmpsl
adc
cwtl
jnp
fcompl
test
sahf
stos
pop
pmulhw
push
cmc
pop
int3
adc
nopl
jl
outsb
popa
imul
imul
cmpl
xor
adc
adc
sub
fisubs
pop
and
xor
sub
outsl
stos
adc
sbb
lds
icebp
or
xlat
jnp
sbb
xchg
adc
cmp
es
or
xor
outsl
sub
fcomps
sbb
sub
aaa
or
cmp
and
insb
ds
pop
mov
adc
push
ret
js
into
mov
push
lods
leave
sbb
or
mov
addr16
out
sub
insb
dec
push
bound
jnp
or
jae
pop
jmp
adc
add
and
pushf
jno
fucomp
int
pop
movsb
ftst
sti
add
daa
cmp
fs
bound
sbb
in
pop
fldt
into
lock
jle
in
orb
popa
lcall
cmpsl
fnstsw
cmpsb
inc
mov
or
mov
dec
pop
xor
ja
push
lcall
mov
cmp
add
int3
adc
jg
dec
or
ds
add
jbe
in
add
sahf
dec
fiadds
andb
push
xor
push
inc
adc
subb
je
mov
adc
les
rcll
mov
xor
dec
jne
das
pop
mov
mov
ja
push
pop
jg
add
sbb
xchg
ror
add
add
test
test
aam
sarl
mov
adc
mov
push
loope
jp
inc
fnsave
lods
mov
inc
adc
mov
ja
ss
and
mov
mov
mov
push
xorb
lss
and
push
loopne
xchg
pop
dec
adc
int
sub
cmp
pop
push
or
xor
cmp
pop
pop
pushw
mov
jnp
pop
nop
push
add
scas
fcmovnu
cmp
les
mov
in
fcmovnu
cmp
mov
call
push
mov
adc
insl
in
sbb
push
cmp
mov
int3
fnstsw
mov
push
pop
shll
mov
ss
stc
data16
ljmpw
lods
jecxz
add
fsubrs
push
lods
int3
in
xchg
jbe
movsb
xor
xor
out
es
adc
scas
jo
dec
test
fildl
subl
sub
dec
xchg
and
xchg
push
or
lods
rol
leave
sub
or
clc
or
lock
shrl
dec
dec
push
jae
adc
push
sbb
sbb
repnz
lret
loop
adc
add
adc
sbb
or
popf
incb
shrl
push
xchg
jno
sbb
xor
hlt
mov
jbe
hlt
xchg
sub
dec
mov
jmp
notb
xorl
mov
xor
ja
data16
fnstsw
and
sub
insb
ds
ja
cmpsl
ja
pop
cltd
jno
test
or
cmp
dec
movups
mov
pop
loope
mov
push
jae
mov
mov
mov
call
pop
push
bound
hlt
js
push
jp
push
or
cmpb
xlat
sub
pushf
out
jmp
movsl
lea
mov
cmp
mov
sub
repz
andl
jecxz
and
pop
cld
lret
pop
js
repz
sub
xor
in
sahf
jae
mov
outsl
mov
rol
out
xchg
inc
mov
sbb
test
ret
pop
lret
sub
inc
test
xchg
xchg
cmp
stos
test
nop
mov
jns
call
int3
xchg
xchg
mov
lock
mov
and
xor
jle
in
aaa
fistps
or
dec
cli
ret
orl
in
or
sbb
scas
or
clc
inc
or
inc
adc
cmp
not
adc
and
divl
pop
mov
add
cltd
or
sbb
dec
sub
leave
or
cmp
pop
jl
je
lds
mov
rorl
add
pop
push
cmp
lea
mov
cwtl
jge
repnz
mov
cmpsl
jp
mov
xor
clc
xor
in
lods
mov
push
add
inc
mov
inc
pop
jl
imul
mov
push
fildll
scas
xchg
add
push
cmp
jb
popa
mov
pop
popf
fwait
jne
aad
sub
add
mov
push
and
mov
mov
push
mov
leave
jg
jp
dec
leave
dec
cltd
shlb
add
xchg
jmp
imul
xor
jb
fisubrl
test
dec
mov
aas
cmp
mov
mov
pop
adc
dec
and
push
stc
out
test
jmp
adc
push
or
into
ss
icebp
sub
ficoml
ret
add
jnp
aad
pop
mov
sub
push
bound
cmp
pop
shrl
mov
mov
fcompl
mov
jnp
int3
cmpb
cmp
inc
sub
popa
jecxz
pop
jne
rol
xchg
jo
cwtl
xchg
push
or
jae
inc
lods
adc
xchg
push
ret
mov
outsb
daa
shll
inc
cld
dec
sbb
scas
dec
daa
daa
push
addr16
push
cmp
sub
add
mov
mov
xor
cmp
adc
pop
jbe
loopne
xor
loop
jle
shll
movsl
shl
ss
imul
jae
stos
jnp
and
cmpsb
mov
fidivl
cld
mov
ljmp
repz
pop
sub
mov
ss
pop
inc
fnstenv
mov
in
cmp
and
sub
or
and
es
pop
fstpt
or
and
adc
adc
and
and
jns
cmpsb
pop
pop
test
lret
aas
ja
daa
push
loopne
jo
int
mov
pop
adc
jl,pt
xorl
push
addr16
jg
and
movd
cld
cmpsl
sbb
int
pop
pop
addr16
es
push
lahf
mov
nop
shlb
xor
data16
mov
pop
aas
imul
jne
int3
and
sub
xor
mov
pop
loopnew
jb
fisubrl
mov
fsubp
ret
lods
and
imul
cmp
insl
push
mov
or
pop
push
call
test
and
out
insl
jle
es
cmp
lahf
je
fcmovnu
mov
sub
jnp
imul
mov
add
jne
bound
roll
jno
jb
jl
mov
test
popa
pop
push
std
stos
sbb
ffreep
push
and
mov
xchg
push
mov
test
test
adc
xchg
outsl
cwtl
cs
div
sbb
mov
jl
pop
xor
mov
outsl
loope
push
out
loopne
pop
inc
rolb
cmp
test
in
sub
jae
neg
jbe
jecxz
sub
dec
clc
pushf
adc
call
and
mov
cmpsb
pop
outsl
or
jne
lahf
or
gs
rcll
mov
imul
xchg
xlat
insl
sti
add
add
mul
fsubl
sub
push
jle
aaa
scas
loope
mov
inc
lods
cmpsb
je
jnp
push
push
mov
popa
xlat
sbbb
stc
imul
lahf
inc
push
sbb
out
jl
ja
sbb
sahf
push
hlt
or
lea
jg
cltd
mov
push
xor
lock
dec
jno
pushf
sub
jg
pop
fidivrl
pushl
in
xlat
mov
int
icebp
pop
xor
sarl
mov
daa
and
adc
sti
int
in
mov
fdivrs
jmp
pusha
adc
add
cmpsl
rcl
dec
add
adcl
pop
aam
cld
xchg
add
or
lcall
fiadds
push
adcl
loopne
cmp
hlt
dec
sbb
lds
es
leave
xor
xor
cmpb
sub
xchg
push
aaa
add
cmp
add
out
cmp
jno
jge
jge
mov
inc
ret
ret
out
cmpl
adc
push
xor
xlat
hlt
insb
inc
lahf
adc
pop
jne
loopne
push
test
iret
push
jb
aas
pop
bound
cmp
pop
xor
test
mov
pop
shll
dec
negb
mov
mov
mov
push
jge
or
or
dec
push
fs
movsb
jg
push
jge
test
xor
fists
js
jno
vpmacsswd
inc
cmpsl
stos
push
inc
repz
cmp
pushf
inc
mov
xchg
inc
sahf
pop
pop
test
and
loop
leave
push
js
add
cmpsb
and
movsb
sub
iret
inc
sub
clc
pop
push
leave
stos
fistpll
insb
pop
xchg
dec
add
divl
in
mov
mov
dec
lea
je
imul
addr16
jle
cmc
idivb
jmp
sub
shll
jae
imulb
mull
cld
popf
push
imul
cmp
add
mov
mov
push
cmp
cmp
cmp
scas
ret
xchg
push
pop
rol
les
pop
pop
push
pop
pushf
addb
push
inc
movsb
cmp
dec
dec
sbb
push
adc
frstor
push
int3
out
and
pop
mov
mov
add
cs
jae
int3
shrl
icebp
mov
lods
xchg
imul
cmp
jnp
push
jp
xor
mov
and
ja
inc
pop
lcall
jb
pop
in
add
cmpb
out
sub
in
movsb
subb
add
sarb
aam
fcmovnb
mov
stos
jne
or
test
mov
sbb
insb
loop
rclb
adc
push
mov
or
das
addr16
mov
mov
jl
mov
xchg
jg
movsb
sarl
andb
aas
jmp
adc
imul
ljmp
es
outsb
fmull
addr16
out
daa
xchg
loope
stos
scas
mov
adcl
mov
pop
insb
cmp
xlat
xchg
sbb
pop
ret
scas
adc
lret
jns
and
add
outsl
hlt
mov
rcrb
loop
fwait
push
jo
outsl
or
fistpll
pop
je
fsubr
mov
adc
mov
fisubrl
jns
fadds
popf
cmpb
and
cltd
pop
sub
loop
mov
sbb
mov
vucomiss
inc
ror
insb
ss
insl
sarl
sbb
negl
daa
jp
insb
push
add
loopne
je
outsl
mov
pop
adc
jmp
xor
sbb
ret
sbb
test
jae
jmp
repnz
ja
stos
inc
inc
shl
mov
int3
jl
sbb
std
dec
push
das
fsubrs
pop
pop
sar
lcall
inc
mov
icebp
loop
rcr
push
mov
stos
loopne
fcmovnu
or
and
mov
pop
pusha
stos
dec
cmp
movsb
lock
call
imul
cltd
mov
in
sti
adc
push
arpl
clc
dec
test
cmp
stos
test
dec
aaa
fsubrs
in
ss
adc
test
sub
sub
cwtl
or
jmp
fldl2t
mov
pushf
lea
mov
mov
mov
pop
jne
repnz
mov
xor
pop
notb
pop
xabort
pop
cmp
mov
adc
fnstsw
push
aas
add
cmc
aas
push
cmp
insl
pop
sub
xchg
cmp
call
inc
icebp
xchg
pop
mov
sub
dec
stos
pop
test
popa
test
outsl
shll
ret
aas
dec
cli
shl
lds
xchg
ss
jecxz
fimull
sub
loop
into
int
call
pop
push
push
jnp
fdivs
imul
pop
test
clc
inc
push
mov
in
mov
dec
sbb
xor
jmp
insl
xchg
or
adc
popa
fcmovnu
fidivl
pop
mov
shrl
fisubs
mov
mov
xchg
lcall
data16
mov
jmp
loop
pop
mov
adc
je
sbb
gs
cwtl
cmp
ror
jle
jl
pop
xchg
and
mov
shrb
mov
push
adc
or
addr16
mov
cwtl
add
mov
call
in
ljmp
roll
cmpsl
and
call
xchg
cmp
pop
imull
cmp
cmp
push
mov
out
sbb
add
mov
mov
push
popf
sbb
inc
add
xchg
push
pop
cmp
mov
jle
scas
pusha
pop
mov
js
xchg
sahf
add
mov
fsubl
repz
push
xchg
rcrl
jae
push
sbb
inc
pop
xor
or
inc
loop
dec
out
inc
mov
mov
mov
mov
sub
pushl
mov
xchg
xchg
loop
cmpsl
imul
jmp
scas
and
pushf
cmp
jmp
add
scas
lcall
lods
pop
mov
or
sub
rcll
imul
filds
mov
ds
cmp
in
popa
xor
sbb
sbb
test
lds
int3
shrb
and
js
fmull
int
mov
inc
ss
scas
or
and
jle
notl
mov
sbb
int
lahf
add
fisttpl
repz
jnp
int
mov
jecxz
sub
rolb
jo
ret
or
hlt
ss
push
mov
fcoml
xlat
outsb
lock
int3
xchg
pop
aad
cmp
cmp
imul
or
insb
mov
jo
rcl
cld
rorb
push
das
pop
add
repnz
and
xchg
out
shll
arpl
push
pop
mov
leave
decl
or
pop
mov
and
outsb
mov
ljmp
call
push
push
and
mov
loope
scas
rcrl
and
sub
leave
add
bound
sub
mov
minps
stc
add
pop
js
clc
mov
iret
xor
outsb
cmpsb
push
stc
mov
add
pop
add
jb
mov
inc
pop
daa
fwait
sub
jno
jecxz
ljmp
adc
or
cli
in
mov
je
mov
cs
test
push
loop
hlt
pusha
push
xchg
in
addr16
or
sti
mov
mov
jbe
lock
addb
sbb
out
and
pop
mov
dec
xor
fcomps
xchg
rcl
fwait
xchg
aad
jno
xor
jo
cmp
add
testl
sbb
jl
add
adc
adc
cltd
pop
jecxz
sub
push
push
push
jle
mov
fcomip
adc
daa
push
mov
xor
es
rorl
adc
push
mov
out
data16
inc
inc
push
cmp
lock
or
push
in
sbb
add
rcrl
inc
divl
or
daa
push
imul
stc
daa
lahf
lahf
in
or
xchg
ds
sub
lock
stos
hlt
imul
pop
push
lds
lcall
jge
adc
ret
andl
pop
dec
cltd
ret
dec
sbb
inc
mov
imul
cs
push
fmulp
bound
fistps
xchg
inc
cmp
retw
xchg
pop
xchg
mov
pop
dec
stc
mov
stc
jo
icebp
mov
dec
xor
icebp
pop
pusha
fcoms
sbb
out
js
nop
add
arpl
imul
mov
cmpsb
mov
ret
rorb
sysexit
insl
pop
imul
bnd
ret
ffree
shll
in
or
sbb
cmp
fcmovnu
sbb
mov
loope
fcmovu
cs
leave
cmc
and
rcr
push
aaa
mov
mov
and
sahf
inc
adc
stos
lds
mov
fldt
jno
pusha
xor
jg
fwait
orl
aaa
mov
lcall
jo
data16
shlb
roll
das
outsl
cmpb
push
fimull
jb
scas
int3
outsb
add
sub
lock
enter
out
mov
sub
sub
mov
xchg
sub
push
dec
ss
cld
mov
lock
or
add
jnp
and
imul
xchg
lahf
leave
push
and
mov
sub
pop
dec
add
jb
jbe
adc
ljmp
push
lahf
push
xor
xchg
arpl
in
adc
out
lret
nop
jns
inc
and
mov
dec
or
mov
pop
sub
cmp
lock
and
ret
mov
sub
pusha
and
test
call
dec
std
mov
test
mov
mov
stos
add
pop
or
sahf
or
mov
dec
pop
in
stos
daa
mov
cmp
sub
pushf
insl
xchg
xor
pusha
lahf
mov
adc
insb
ljmp
mov
cmpsl
repnz
push
pop
subl
outsb
or
stos
dec
and
cmpsb
adc
outsb
xchg
mov
mov
dec
inc
xor
dec
dec
jbe
mov
sbb
adc
jmp
hlt
sbb
jge
jg
adc
or
in
xchg
fcoml
add
cmc
pusha
cmpsb
into
into
je
cmp
popa
inc
adc
and
hlt
inc
cmp
mov
cld
nop
inc
inc
mov
outsb
loopne
shrb
loope
and
or
lcall
sbb
bnd
or
sbb
push
jne
mov
divl
pop
addr16
jg
cltd
pusha
and
mov
and
daa
or
adc
rcr
add
jl
jecxz
cld
into
dec
cmp
push
mov
xchg
out
imul
cmp
adc
ja
les
cmpsb
ds
mov
sub
es
mov
mov
inc
loopne
push
add
push
aad
sub
insb
js
dec
or
test
and
push
shr
jecxz
xchg
mov
movl
pop
mov
pop
cmc
adc
dec
clc
lahf
jnp
mov
loope
mov
jge
iret
out
mov
jae
or
jbe
mov
push
adc
cmpl
rcr
mov
xor
jne
adc
ret
sub
and
fsubrp
movsl
data16
rolb
jg
gs
or
and
ret
outsl
inc
test
imul
cmpsl
cmpsl
push
push
xor
xchg
jbe
lock
fldl
out
scas
lret
outsb
fstl
push
dec
pop
stc
push
dec
addr16
cmp
ss
mov
add
les
mov
pop
movups
pop
add
pop
mov
fchs
pop
out
xorb
stos
imul
sbb
fisttpll
clc
aam
dec
mulb
lahf
dec
inc
scas
std
mov
xor
xor
lea
inc
mov
xchg
sub
add
fadd
les
add
adc
addr16
mov
rclb
aaa
mov
mov
loope
cmp
xor
or
rolb
dec
xor
mull
adc
dec
mov
xor
jb
push
insb
cmp
mov
test
popa
daa
mov
hlt
outsb
push
mov
sub
jnp
loopne
dec
jp
and
sti
popa
cmpsb
jp
js
pop
mov
adc
dec
stc
xor
mov
int
push
test
shl
mov
xchg
stc
addr16
sub
ds
fstpl
arpl
popa
mov
sub
xor
push
inc
nop
aaa
aam
add
insl
cmpsl
scas
out
xchg
inc
or
in
dec
or
jle
push
push
cltd
cmp
clc
inc
sbb
or
ret
pop
mov
out
out
xor
cmp
jo
orb
xor
inc
mov
cmpsl
popf
push
mov
pop
fdivr
ficompl
jbe
inc
lahf
mov
das
mov
fldt
xor
pop
jnp
dec
ja
mov
dec
inc
scas
scas
mov
cmp
dec
pusha
clc
mov
push
movsb
jae
pop
movsb
aam
cmp
or
push
mov
dec
pop
outsb
cmp
add
sbb
nop
xchg
outsb
mov
add
repz
in
cmp
aam
jg
and
sahf
rcrb
mov
pop
cmp
lahf
cmc
rcrl
fadds
sahf
out
sub
movzbl
mov
inc
pop
xchg
cwtl
sbb
outsl
or
adc
lret
testl
dec
sbb
gs
out
loope
lods
imul
mov
loope
inc
mov
iret
inc
rol
mov
dec
sub
push
xchg
adc
rcll
mov
cmp
iret
andb
cmp
fdivrl
fucomi
nop
add
ret
mov
pop
dec
sbbb
push
dec
cwtl
imul
sub
pop
scas
jle
cmpl
mov
inc
and
movsb
in
mov
int3
cs
fimull
push
dec
hlt
rolb
call
or
out
mov
lods
xchg
or
mov
jge
aaa
sarb
pushf
lea
and
cmc
imulb
cmpl
repnz
mov
xor
lret
push
jne
inc
ja
inc
in
or
ss
mov
jl
in
jl
adc
xor
loopne
out
js
cmp
jbe
jmp
icebp
ret
xor
cld
add
xchg
shl
push
aaa
sub
or
stos
inc
dec
pop
fistpl
or
xorl
xchg
fcomps
mov
inc
xor
je
repz
movsl
cmc
add
xchg
movsb
or
sbb
and
xchg
repnz
shr
mull
fnstenv
pusha
fmul
jbe
rol
push
mov
mov
ds
cmp
cmp
mov
fdivrs
ficoms
dec
iret
mov
cmp
in
or
jno
dec
das
dec
stos
mov
ljmp
fsubrs
popf
lock
xor
xchg
inc
popa
inc
shrb
sbb
mov
in
or
into
lods
jnp
int
imul
cmp
mov
js
pop
xchg
pop
out
cmp
sahf
pop
inc
ficoms
pop
adc
mov
lret
int
mov
cmpsb
in
addl
and
aas
mov
in
add
movsl
push
imull
or
xor
jne
mov
cltd
imull
ret
and
lods
mov
pusha
out
push
psubq
ja
int
or
mov
test
sti
or
rcll
inc
xor
shrl
aaa
xlat
inc
lret
pushf
dec
pop
adc
js
lock
or
les
cmp
fdivrs
or
xor
pusha
pop
cmpsl
fidivl
cmc
aam
das
mov
iret
repnz
adc
jo
jnp
adc
gs
test
inc
aaa
mov
push
add
jne
xor
inc
dec
mov
faddl
test
sbb
scas
mov
pop
bound
pop
aam
adc
std
mov
and
ljmp
xor
jle
ljmp
outsl
and
hlt
mov
cltd
sub
loope
push
sbb
fildl
lea
scas
popf
daa
cwtl
inc
mov
mov
rol
out
mov
xlat
push
mov
mov
cmpsb
adc
xchg
adc
clc
loope
jo
ja
mov
divps
jle
inc
ret
adcb
xchg
cltd
cwtl
in
stos
cmpsl
scas
mov
add
mov
sarb
loopne
sbb
bound
sub
lods
mov
int3
lret
and
cmp
jl
dec
pushf
cld
inc
xchg
int
jb
add
aas
push
mov
mov
mov
shrb
pop
pushf
out
push
ret
jge
leave
idivl
rcr
mov
mov
jmp
pop
mov
scas
ja
roll
inc
shrb
inc
loop
jp
or
push
xchg
adc
mov
pop
fbstp
jle
fisubrl
loopne
mov
xor
sbb
adc
jmp
jecxz
sti
addb
cmpsb
outsl
or
lret
push
subb
dec
cmp
stc
imul
iret
sbbl
cmp
cmp
iret
xchg
jae
outsl
or
adc
jge
scas
setnp
mov
sub
jle
cwtl
imul
outsb
sbb
popf
lea
or
adc
mov
mov
push
sub
sbb
mov
sarb
mov
divl
dec
aas
andl
fisttpl
gs
pop
jge
in
fdivrs
pop
addr16
ja
cmp
lcall
rcr
sub
cmp
add
ds
das
cmp
add
cmp
dec
js
cmc
cmp
repz
or
mov
dec
mov
xor
fadd
pop
fs
cmp
fiadds
sub
mov
into
loop
cmpl
sbb
daa
xor
int3
xor
cmp
movl
cmp
or
add
imul
xor
jns
fmuls
pop
pop
stos
add
inc
insb
mov
pop
mov
xor
arpl
jg
push
lcall
jg
testb
push
xor
daa
or
add
outsb
data16
sbb
insb
jg
xor
pop
sub
and
sbb
loope
xchg
xchg
out
adc
insb
or
xor
pop
xchg
pushf
int
out
adc
adc
insl
adc
jbe
insb
int3
popf
inc
pop
sub
mov
jae
pop
mov
or
imul
flds
cwtl
inc
jns
push
adc
ja
or
test
or
mov
popf
insb
in
aas
or
clts
push
xor
pop
jg
jb
into
push
dec
cmp
rorl
xchg
push
mov
fistpl
mov
add
cmp
in
insb
bound
pop
int3
xor
or
pop
inc
or
imulb
and
shrl
mov
outsl
xor
out
or
insb
mov
cmp
aaa
push
add
aaa
mov
jnp
sub
outsl
mov
cmpsl
or
arpl
lret
cmp
aaa
addr16
jae
xchg
aaa
dec
js
pop
fdivl
or
adc
out
mov
or
and
paddusb
inc
xor
in
jne
aad
jecxz
push
dec
push
dec
cmp
sub
sub
xchg
xchg
testb
sub
mov
xor
xor
adc
in
jae
xor
push
add
mov
xchg
das
or
icebp
mov
sbb
int3
xor
enter
push
sbb
fwait
sti
push
jbe
or
or
hlt
dec
mov
sub
mov
mov
jae
popa
pop
dec
or
inc
jb
mov
fstps
les
or
inc
into
mov
int3
mov
fwait
pxor
hlt
push
jae
ja
adc
mov
popf
inc
or
or
dec
jbe
nopl
pop
add
or
iret
sbb
es
pop
xchg
add
out
xchg
arpl
das
rcll
cmp
or
aas
pop
daa
je
sarl
mov
and
cwtl
jmp
test
out
ja
push
shrb
sub
mov
jl
jg
or
jmp
insl
or
add
adc
mov
dec
adcb
or
lea
sbb
inc
pusha
mov
cltd
adcl
and
fimuls
sub
ucomiss
repz
sbb
popl
imul
push
lahf
push
insl
movntq
or
xor
pop
push
push
push
push
push
sub
fwait
insb
or
sbb
sbb
mov
adc
jl
int3
shlb
push
sbb
scas
sbbl
mov
lahf
and
mov
in
test
xchg
imul
mov
divl
cmp
adc
or
inc
sub
xor
jne
add
das
cmpsb
or
and
subl
addr16
pop
out
cmp
mov
cmpl
xchg
dec
xchg
or
jnp
arpl
cmp
outsb
sbbb
add
xchg
sbb
add
cltd
cli
in
cmpsl
jg
lods
mov
sbb
sbb
push
add
testb
xchg
xor
cltd
imul
popa
jbe
sub
adc
mov
xchg
insb
fstps
and
sub
add
or
dec
xchg
mov
sub
sub
dec
aam
sub
or
inc
movsb
notl
leave
bound
adc
mov
andb
mov
fcomps
jmp
movsl
outsb
cmp
mov
fldcw
xrelease
or
inc
jp
loop
mov
dec
scas
ret
es
and
js
gs
sub
dec
test
jmp
or
je
mov
xchg
dec
dec
dec
sub
push
and
stos
mov
js
push
xchg
jg
fs
aaa
or
gs
mov
pop
stc
mov
mov
push
mov
lods
push
jnp
mov
out
fnstenv
mov
je
xchg
int
movsl
insb
dec
dec
and
lret
fisubs
aad
mov
mov
popa
mov
punpcklwd
adc
mov
in
aas
pop
cmpb
push
mov
mov
mov
and
cwtl
adc
pop
aam
cld
sbb
push
ss
xor
xchg
and
push
rcrb
jle
adc
sahf
push
pusha
sub
nop
stos
xchg
xlat
insb
outsb
or
fwait
inc
add
int3
push
jmp
addl
push
jp
ss
andb
mov
cmpsb
imul
ja
mov
mov
into
stos
fisubs
pop
sub
push
jmp
xchg
or
jns
or
jne
test
dec
mov
sbb
lret
pop
testl
cs
mov
pusha
insl
mov
sub
stos
inc
data16
das
and
and
fldenv
enter
push
lds
jbe
cltd
clc
adc
lcall
cwtl
je
sarl
and
por
mov
cmp
pop
xchg
and
mov
and
lret
adcb
xchg
hlt
or
push
or
inc
push
shlb
fcoms
dec
add
ja
add
sbb
subb
pusha
fs
fisubrs
xor
test
outsb
enter
loope
scas
xorl
mov
ja
mov
mov
leave
pop
adc
fadds
ds
ret
xor
add
xor
dec
mov
add
into
bound
cwtl
mov
adc
lcall
xchg
push
or
xchg
mov
out
arpl
and
lods
popa
dec
sbb
xchg
or
jnp
aad
push
sarl
dec
mov
mov
popa
xor
stos
sub
int3
jmp
sub
push
push
js
fwait
dec
push
and
push
cmp
push
mov
add
pop
mov
and
mov
xchg
inc
cmp
mov
or
push
test
sbb
xchg
shl
sub
enter
fstl
ror
bound
sub
xchg
in
inc
add
addl
push
sub
fdivrs
lea
sub
push
or
sub
arpl
push
cmpsb
xor
and
popf
jnp
shrb
or
jbe
inc
mov
popa
pop
jnp
push
fmul
lcall
bound
jmp
test
mov
add
test
mov
leave
xchg
sub
sub
insb
or
or
stos
dec
xchg
push
clc
adc
test
pop
mov
xchg
push
push
sub
cltd
test
mov
lahf
and
or
add
and
jmp
std
aaa
mov
enter
push
mov
cmp
cld
mov
adc
mov
xor
and
scas
push
xchg
mov
mov
and
or
sub
and
push
sbb
in
pop
fadd
jno
aam
adc
pusha
js
bound
sub
mov
mov
add
inc
push
or
or
xor
sub
shlb
ror
movb
sub
pop
and
lea
jbe
orb
add
test
sti
ja
ret
in
es
mov
aaa
jmp
mov
push
add
mov
add
push
mov
aaa
fstps
jnp
push
addl
add
negb
lcall
push
in
sbbw
sbb
adc
xchg
loopne
cmp
aaa
fwait
push
sub
lea
dec
dec
or
movsl
ret
jae
cmc
movsb
lret
mov
imul
dec
mov
dec
dec
jp
sahf
mov
pushf
and
add
outsl
sbb
push
xchg
sbb
dec
add
mov
frstor
sbb
arpl
andl
add
insb
mov
insl
jb
xor
outsl
adc
je
nopl
adc
xor
sub
test
add
mov
cmpsl
das
mov
lcall
xchg
cmp
xchg
or
scas
jmp
sbb
xchg
adc
sub
push
sti
fstps
mov
andl
sbb
nop
mov
into
inc
add
inc
mov
xchg
dec
mov
inc
push
int3
xchg
sub
stos
and
insb
imul
sub
cmp
scas
lods
sti
and
ucomiss
arpl
call
sub
add
mov
out
pop
fstpt
xor
dec
bnd
insb
nop
sub
dec
jbe
adc
es
jb
jp
xchg
daa
or
jns
mov
and
add
out
imul
xor
xchg
je
cs
mov
or
fs
xchg
inc
leave
jb
inc
dec
cmp
push
icebp
and
inc
shrb
daa
xchg
mov
mov
movsl
push
jns
in
inc
xchg
adc
xchg
inc
insl
jp
fmuls
push
dec
pusha
popa
out
std
sub
mov
outsl
aam
fmull
pop
and
and
sbb
addr16
xchg
sti
xchg
in
aam
pop
push
xchg
inc
xor
or
dec
movsl
sbbb
add
shll
xchg
cwtl
hlt
sub
or
mov
lods
fildll
pop
notb
xor
adc
dec
cwtl
sbb
mov
mov
sbb
add
lds
push
sub
mov
pop
mov
stos
add
fsubrs
test
sahf
add
push
ss
sub
in
dec
pop
mov
or
sbb
jnp
mov
imul
scas
fxch
or
in
push
dec
sbb
fidivrs
sub
jp
adc
lock
into
fisubrl
pop
and
fsubs
sbb
mov
int3
inc
aam
es
popf
shlb
fsubs
lret
les
add
xor
add
pusha
push
mov
ficoms
and
ficomps
xor
call
or
aaa
sub
or
ret
jecxz
sub
sub
pop
push
inc
sbb
sub
mov
xchg
sbb
mov
push
int
mov
xchg
dec
mov
fnstenv
add
push
in
scas
sbbb
add
int
movsl
test
mov
adc
test
icebp
inc
sbb
and
test
addb
daa
rolb
les
push
mov
mov
xchg
pop
cwtl
pop
sbb
mov
dec
and
mov
adc
mov
adc
int3
push
fwait
jo
fld
jmp
test
sub
idiv
leave
call
sub
add
lods
and
xchg
negb
and
and
xor
pop
testb
xcrypt-cbc
cmpsl
adc
fcomp
pusha
arpl
sub
or
sub
mov
sbb
sbb
and
loope
cmp
cmp
sbb
add
adc
mov
xchg
aad
lret
cmp
mov
jg
lods
fcomp
mov
and
push
iret
pop
adc
xchg
inc
adc
sbb
inc
inc
jmp
or
scas
and
das
sbb
inc
enter
enter
ret
pop
add
xchg
dec
dec
mov
sbb
cmpsw
xor
lahf
repz
or
rclb
push
or
push
mov
sub
xor
pop
lods
insl
fsubs
ret
cs
movhlps
or
notb
out
mov
das
lcall
push
cmp
and
cmp
sbb
enter
jecxz
push
movups
cmpxchg
rorl
mov
scas
sbb
fs
and
push
xchg
bound
xchg
xor
and
inc
adc
dec
sub
test
or
inc
mov
jp
std
lahf
or
lcall
pop
mov
xor
pop
pop
stos
xchg
cmp
inc
inc
mov
cmpb
pop
cmp
cltd
cmp
insb
cmp
ljmp
push
lods
and
fistl
movsb
div
fs
nop
and
loope
or
push
cmp
in
fisubrs
add
inc
insb
daa
dec
pop
insl
sub
xchg
rorl
dec
pop
dec
js
jg
mov
add
push
adc
push
lods
lret
sub
insb
inc
and
addr16
adc
mov
mov
rol
sbb
in
leave
push
fwait
xorb
scas
push
bound
sub
int3
inc
mov
imul
popf
cmp
add
daa
pop
add
fisubrl
lds
stc
add
mov
jg
mov
pop
add
cmp
imul
je
lods
test
mov
pop
add
outsb
mulb
jp
or
inc
mov
std
jo
adc
cmpsl
adc
pop
mov
xor
sbb
jne
inc
sahf
jne
imul
push
push
mov
jnp
lods
add
add
push
popa
dec
mov
push
or
cwtl
imul
hlt
sti
cmp
add
add
sbb
fldcw
jns
adc
pop
push
pushf
popf
lock
lahf
outsl
or
xchg
add
icebp
inc
idivl
fucomp
insb
or
sbb
mov
jbe
push
push
and
mov
jge
pop
jle
sbb
imul
push
cmp
cmp
and
sti
push
xchg
mov
out
repz
xchg
or
or
jae
xor
pop
int
push
movsb
sbb
mov
arpl
stos
mov
adc
xor
ja
mov
inc
push
push
ja
jae
adc
add
sub
add
pusha
mov
dec
out
jnp
aam
mov
xlat
mov
add
outsb
jg
dec
inc
andl
mov
jecxz
sub
adc
fstl
push
sbb
hlt
je
lods
mov
inc
inc
jmp
outsl
insl
xchg
gs
mulb
pop
push
dec
inc
sub
add
movsl
mov
xor
sub
pop
jae
xlat
and
dec
dec
pop
pop
xor
jae
add
imull
inc
cmc
cmp
les
icebp
jno
adc
je
jp
scas
mov
add
adc
pushf
pop
fwait
jmp
neg
je
xchg
xchg
xchg
dec
jle
dec
xchg
iret
cmp
rcll
pop
imul
jge
dec
cmc
out
int3
inc
jbe
dec
add
mov
pusha
pusha
ret
cltd
xchg
je
fcomip
push
mov
inc
dec
int3
inc
dec
push
icebp
sbb
popa
jae
push
jmp
dec
jbe
add
pop
or
mov
pop
insb
in
pop
mov
mov
sahf
add
inc
pop
shrl
and
shrb
xlat
mov
jnp
pop
bound
jno
mov
loop
pop
popf
dec
orb
call
rcl
xchg
mov
cmpb
fs
xor
inc
aas
dec
cmp
fwait
sbb
or
sahf
sbbb
cmp
push
popa
pop
or
int
into
push
sbb
or
mov
sarl
sub
test
xchg
pop
imul
mov
mov
es
jo
xacquire
pop
and
mov
ret
loopne
inc
fs
fdiv
dec
sub
sub
mov
mov
fadds
sbb
test
push
lcall
push
nop
pushf
xchg
sub
push
lock
cs
mov
int3
popf
push
inc
lahf
add
mov
add
push
pop
push
sub
jnp
ja
cmp
rol
or
push
aas
cwtl
push
mov
pop
imull
adc
dec
adc
and
in
jle
jecxz
loope
mov
lds
ret
rcll
mov
push
mov
lods
pop
and
out
out
mov
inc
ja
mov
dec
outsl
in
sbb
pop
outsl
imul
pop
dec
add
pop
ret
mov
sti
add
cmpsb
cld
test
and
add
xor
inc
ret
sbb
cwtl
xor
add
mov
imul
pop
jno
jge
dec
dec
xchg
cmp
pop
jl
movb
pop
enter
icebp
sahf
add
mov
adc
fsubs
ret
xor
or
jnp
add
mov
dec
jno
imul
cwtl
fwait
test
mov
or
cltd
jns
fsubs
pop
sahf
mov
imul
adc
or
xorl
push
jae
mov
pop
dec
dec
push
iret
xor
es
lods
mov
scas
mov
sarl
rsm
popa
xor
in
movsb
ret
sub
movsb
jae
lods
dec
jmp
add
push
out
xchg
subl
dec
pop
jb
adc
push
js
push
xor
scas
or
pop
xrelease
aaa
test
dec
hlt
xchg
or
sub
sbb
push
mov
pop
push
sbb
cmpsb
subb
pop
push
lock
mov
add
push
adc
push
lcall
mov
jp
mov
out
xchg
lcall
jae
xchg
rorl
add
jg
xchg
xchg
dec
inc
fbstp
push
inc
imul
dec
inc
inc
mov
mov
add
enter
lods
adc
jb
rolb
or
xchg
adc
std
jns
dec
ret
cli
adc
ret
decl
sub
push
out
int
mov
push
mov
or
sbb
or
mov
imul
xchg
mov
daa
adc
data16
add
pop
daa
fisubrl
fs
loop
jae
in
xor
mov
jae
cmp
popf
cmpsl
iret
xor
dec
fs
test
addb
fmuls
push
in
xor
rorl
shrb
pop
or
dec
and
xor
leave
xor
es
add
inc
mov
mull
mov
cmp
add
fwait
andl
daa
jo
icebp
xorb
movsl
jecxz
loop
nop
js
cmpsb
popa
mov
mov
jp
push
in
shrb
in
loopne
xchg
jp
pop
pop
loop
inc
pop
leave
dec
mov
mov
sub
je
mov
add
inc
pusha
jnp
xor
leave
and
xchg
shll
sbbl
dec
call
bound
and
out
aas
sbb
loop
inc
inc
jbe
push
jae
inc
imul
mov
adcl
das
adc
jge
andl
xor
xlat
mov
dec
cmp
cmp
xor
pop
mov
dec
mov
xchg
cmc
xchg
sbb
sbb
adc
jb
mov
jge
pop
lds
mov
xorb
loope
pusha
mov
sbb
dec
inc
sbb
outsl
out
add
cwtl
xor
xchg
xchg
xor
loope
lcall
dec
cwtl
dec
mov
nop
xchg
stc
fidivrl
xor
loope
je
sbb
add
inc
packsswb
sbb
je
inc
adc
add
dec
arpl
jl
xchg
shlb
mov
mov
or
sbb
xchg
mov
jno
mov
pop
xchg
lock
lods
add
jmp
pop
jbe
pusha
lock
scas
mov
inc
inc
dec
adc
arpl
fdivs
test
pop
jno
xchg
push
pop
repnz
mov
and
push
bound
mov
js
push
dec
repnz
loope
sub
add
nop
inc
xor
fidivl
adc
dec
mov
loop
cmp
fs
ja
lods
sbb
mov
dec
out
inc
daa
rcrb
xchg
inc
push
jp
out
cs
and
fcomps
mov
add
or
imul
and
pop
inc
popf
pop
pop
xchg
lods
fisubs
lds
adc
addl
and
mov
cmp
mov
push
xchg
pop
add
sub
mov
dec
ror
es
sub
test
pop
adc
je
addr16
jle
jg
sbb
sub
pop
pop
dec
inc
dec
bound
sub
add
cmp
jne
dec
inc
dec
cmp
stos
shll
push
sbb
cmp
rorl
out
pop
push
jnp
mov
adc
ss
sub
imul
pop
or
daa
add
aas
addr16
inc
cmp
sub
fwait
add
inc
sub
push
inc
lock
scas
inc
aaa
inc
push
dec
mov
mov
jg
movsb
fimull
mov
inc
outsl
adc
dec
rolb
cli
jns
dec
jge
mov
pop
xchg
sub
lock
pop
cmp
mov
pop
sbb
ret
std
mov
dec
inc
sbb
popa
xor
pop
je
inc
pop
cmp
inc
inc
inc
push
dec
inc
sub
pop
aaa
jmp
sbb
inc
sbb
pushl
scas
scas
lock
pop
sub
cmp
aas
insb
sti
push
dec
aam
addr16
inc
inc
pop
jp
jne
cmc
sbb
add
dec
push
push
lds
je
cmp
or
add
lock
arpl
bound
idivl
jle
sub
into
shr
cwtl
pop
inc
inc
addr16
fistpl
mov
sub
pop
mov
jae
push
xchg
or
dec
lds
mov
mov
outsl
dec
dec
outsl
jp
jae
lret
pop
jecxz
pop
dec
dec
and
xor
xchg
pushf
pop
loop
or
hlt
pop
cmp
inc
sub
in
mov
decl
outsb
mov
shlb
dec
add
fst
dec
xor
mov
ret
pop
jo
mov
push
leave
cmp
mov
mov
data16
bound
outsl
es
inc
mov
fisubs
push
sbb
add
imul
cmp
xlat
bound
pop
insl
xor
xor
xchg
js
jae
and
or
pop
fistpl
jecxz
mov
fcompl
sbb
lods
inc
add
sti
add
sub
push
ss
scas
sti
adc
pop
outsl
jg
adc
fmuls
sub
rorb
data16
cwtl
or
adc
pushf
xchg
sbb
js
and
mov
push
addr16
call
gs
mov
inc
xchg
loope
xchg
test
in
sub
add
pop
cmpl
cwtl
push
jne
pop
jmp
jnp
pop
out
js
dec
jbe
int3
int3
cmp
rcr
pop
cmpsl
mov
addr16
add
push
loopne
jne
mov
sbb
mov
rclb
pop
or
rcrl
xchg
pop
dec
mov
fdivs
dec
mov
orb
loopne
jo
and
xor
fcomps
xchg
jnp
jo
xor
ljmp
fnstenv
mov
out
jecxz
and
add
inc
jl
mov
mov
inc
pop
bound
sbb
mov
pop
aam
jnp
adc
jbe
inc
pcmpgtw
mov
xchg
dec
xor
shrl
movsb
js
jbe
sbb
mov
dec
sbb
das
or
add
imul
inc
add
sbb
fs
inc
add
mov
mov
je
movsb
and
cli
mov
dec
in
inc
popa
or
pop
adc
push
or
sbb
jg
or
into
insl
add
cld
inc
sub
lods
inc
icebp
int3
mov
adc
fsubr
jg
int
cmpsl
inc
bound
push
push
scas
push
into
dec
in
dec
dec
sbb
sbbb
loopne
daa
test
push
int
push
xor
xchg
sbb
dec
fwait
dec
ds
sub
pop
ss
pop
dec
mov
pop
mov
ret
pop
idivb
dec
daa
test
insb
xchg
add
and
dec
and
testl
nop
mov
xchg
cmp
adc
inc
inc
add
int3
inc
push
nop
mov
pusha
scas
mov
or
push
frstor
sub
pop
pop
aad
xchg
sbb
or
loopne
or
cmp
icebp
mov
lret
xor
test
pmulhw
daa
adc
stos
or
or
mov
aas
pop
jl
or
add
loopne
mov
fs
jle
xor
add
push
add
cli
push
push
or
aad
push
ret
cmp
push
lods
jno
sahf
lahf
lahf
jmp
or
or
or
les
fs
adcl
aad
gs
pusha
add
or
jge
mov
loop
adc
or
adc
sbb
daa
test
sbb
or
inc
test
xor
sbb
or
and
add
push
cwtl
add
xchg
cltd
add
add
fnsave
sbb
sbb
lret
pop
jmp
adc
sbb
jg
push
test
add
test
add
ja
mov
xor
scas
jbe
xchg
data16
fisubrl
and
mov
pusha
cwtl
push
out
ja
add
nop
add
mov
dec
fsubrp
mov
inc
push
stos
pusha
pop
pop
mov
cmp
and
and
cmc
mov
in
cmp
adc
dec
sbb
add
lret
cmp
sbb
add
add
xchg
xchg
dec
test
push
mov
mov
add
test
fmul
pusha
and
subb
addr16
lcall
push
cmp
sbb
push
adc
add
push
nop
cmp
mov
arpl
inc
dec
dec
xchg
les
jl
stos
mov
pop
je
jp
or
dec
aad
sub
mov
out
inc
frstor
add
pop
or
orb
mov
mov
or
jnp
push
das
fwait
lret
dec
ret
cmp
shll
sub
popa
adc
pop
pop
inc
push
insb
shrl
dec
sub
jp
pop
add
sbb
mov
mov
adc
inc
mov
pop
push
sub
cwtl
pop
inc
dec
sub
scas
inc
adc
mov
add
xor
dec
int3
pop
jge
jnp
testb
mov
dec
add
sbb
fisubrl
add
ja
imul
inc
adc
sbb
mov
sbb
lret
in
sub
cmc
test
mov
ds
mov
sbb
sub
clc
jle
adc
in
fsubs
mov
jecxz
xlat
xor
sub
inc
add
orl
bound
incl
inc
leave
mov
mov
jecxz
pop
xlat
jge
ret
cmp
pusha
dec
sbb
adc
aaa
cltd
and
jle
add
cli
sbb
es
cmp
pop
xor
fcompp
jnp
mov
push
push
sahf
xchg
pop
cmpsb
cmp
add
pop
dec
cs
adc
mov
pop
jne
jb
jnp
dec
cmp
loop
or
in
or
add
pop
inc
out
sub
xchg
popf
dec
dec
outsb
push
dec
dec
cld
stos
pushf
ret
loope
dec
scas
push
or
dec
inc
dec
cwtl
jae
insl
testb
cmp
loop
inc
pop
mov
dec
dec
testl
mov
push
mov
lret
mov
int
dec
sarb
mov
jecxz
cli
sti
ret
add
out
adc
pushf
and
addl
fsubp
add
rol
cmp
cmp
test
adc
adc
mov
adc
ret
imul
xor
fxch
or
jl
xor
insb
bound
cld
gs
push
mov
mov
mov
push
pop
sub
mov
dec
or
insl
sbb
sub
dec
jbe
or
or
mov
mov
xchg
xchg
sbb
aad
and
and
mov
insb
mov
fldenv
lock
cwtl
addr16
dec
sub
and
lds
gs
add
sbb
or
pop
fmul
test
lods
push
test
mov
adc
adc
sbb
fwait
mov
mov
sub
subl
sbb
imul
cmp
cmp
inc
add
xchg
scas
insb
or
daa
ljmp
pop
fxtract
and
or
sbbl
pop
cmpsb
xchg
pop
enter
das
xchg
cmp
nop
getsec
xchg
pop
notb
push
enter
xchg
imul
into
pop
pop
jae
and
cwtl
lock
pop
xchg
movsl
mov
mov
xor
mov
push
lret
sub
fnstcw
das
in
mov
xor
xor
cli
adc
or
imul
cld
dec
mov
xor
aaa
xor
add
in
jnp
in
xchg
inc
fwait
push
pop
jns
and
pop
rclb
repz
and
js
jns
aam
in
pusha
xchg
mov
add
scas
xchg
xchg
push
pushf
daa
inc
mov
mov
stos
or
jbe
arpl
lods
add
lods
lret
and
arpl
add
xchg
jle
and
in
mov
xor
pop
xchg
das
addps
mov
orb
aad
sbb
scas
in
insb
mov
adc
lods
and
stos
sarl
or
fldenv
mov
dec
mov
jecxz
jecxz
in
pop
out
xor
pop
nop
sub
add
bswap
pop
fsub
popl
ljmp
dec
scas
in
nop
or
pop
or
sbb
pop
jbe
push
nopl
or
adc
js
xchg
mov
adc
xchg
mov
or
push
and
push
in
stos
or
pop
in
test
sbb
mov
dec
mov
and
addr16
in
adc
mov
xor
icebp
fldt
mov
xor
push
jb
lods
jl
mov
adc
or
xchg
xchg
cmpsb
in
clc
or
lea
lret
push
ljmp
add
fs
add
rorb
ljmp
or
insb
jae
jb
popa
je
inc
push
xchg
inc
ss
js
pop
test
gs
add
das
outsl
pop
adc
jae
imul
fs
popa
addr16
mov
sti
push
cmovge
outsb
fs
adc
jb
outsb
je
out
mov
dec
adc
insl
and
fisubrs
out
pop
imul
out
dec
inc
adc
mov
stos
inc
gs
bound
inc
cmp
jae
lock
imul
and
aas
int
cmp
mov
dec
inc
lods
std
xor
adc
lock
popa
data16
push
imul
popf
cmp
mulb
inc
data16
xchg
clc
xlat
inc
mov
insl
mov
jne
push
outsl
ja
fcmovnbe
pop
ret
imul
and
add
sahf
add
lock
or
sbb
add
pop
or
add
and
mov
sti
mov
xor
xchg
or
movups
sub
and
or
prefetcht0
ja
aaa
notl
cmp
add
add
mov
xor
add
mov
add
add
push
xchg
cmp
pop
inc
jg
insl
scas
and
add
sbb
in
mov
push
cmp
add
sti
sarw
add
sbbl
mov
int
add
and
pop
dec
shl
add
aaa
sub
inc
inc
pop
das
nop
jmp
jle
mov
and
pusha
inc
inc
push
inc
fadds
into
movl
mov
stc
rcr
add
ss
xchg
cs
cmp
sbb
out
mov
cmp
popf
popf
sti
lock
add
jae
cmpb
daa
sbb
outsl
mov
add
mov
add
and
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
