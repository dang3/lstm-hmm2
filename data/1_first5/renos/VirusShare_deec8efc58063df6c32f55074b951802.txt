jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
cmp
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
movw
movzwl
push
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
pop
pop
ret
mov
push
mov
push
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
movw
movzwl
push
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
pop
pop
ret
mov
push
mov
add
mov
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
mov
add
mov
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
add
add
mov
mov
mov
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
push
mov
add
mov
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
cmp
je
jmp
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
xor
divl
test
jne
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
cmp
je
jmp
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
cmp
je
jmp
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
sub
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
push
mov
mov
xor
call
mov
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
mov
mov
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
push
mov
mov
xor
call
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
lea
mov
push
mov
jmp
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
sub
add
add
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
mov
call
mov
mov
mov
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
movl
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
outsb
out
mov
loop
mov
adc
mov
sbb
mov
push
out
mov
xor
mov
sub
mov
xor
mov
into
repnz
enter
imul
int3
inc
xor
test
test
xor
mov
test
xor
add
test
xor
out
mov
xor
in
imul
xor
shrl
test
xor
leave
imul
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
ret
mov
xor
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
mov
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
mov
xor
mov
or
inc
sub
or
les
int3
int3
int3
outsb
les
ret
mov
inc
ffreep
mov
pop
enter
int
out
cmp
int3
int3
outsb
ret
mov
insb
les
mov
aaa
std
or
ret
mov
enter
std
push
inc
ffreep
mov
enter
std
or
ret
mov
aaa
inc
pop
enter
std
or
les
enter
std
push
inc
ffreep
mov
pop
enter
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
movl
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
cmp
je
mov
subb
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
xorb
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
incl
mov
cmp
jne
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movb
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
mov
pop
ret
lea
push
mov
add
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
lea
mov
pop
ret
mov
push
mov
add
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
push
call
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
pop
ret
add
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movw
movzwl
push
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
movw
movzwl
push
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
movw
movzwl
push
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
movw
movzwl
push
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
movw
movzwl
push
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movw
movzwl
push
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
mov
mov
lea
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
ret
mov
ret
lea
add
adc
or
lret
test
mov
xchg
push
inc
icebp
popl
add
push
jl
add
fidivrl
xchg
rorl
pop
test
sbb
inc
pop
pop
pop
add
scas
imul
cmp
push
and
add
addb
fwait
or
add
js
adc
lret
test
movsl
add
sbb
loope
lock
add
mov
test
dec
fadds
mov
sbb
mov
add
add
loopne
push
adc
loope
aaa
pop
nop
addl
clc
add
nop
add
add
add
pop
or
mov
movsb
mov
ret
sarl
jecxz
mov
int
add
mov
xchg
and
add
das
fs
xor
add
xchg
pop
add
add
mov
mov
filds
xchg
bound
mov
mov
movsb
jge
add
add
sub
dec
inc
arpl
test
jmp
xchg
push
add
add
inc
xchg
in
add
add
xchg
add
das
push
popa
pushf
ror
jns
add
adc
ficompl
add
add
pop
sub
mov
clc
add
in
cmp
sub
add
mov
or
in
stos
xor
jge
mov
inc
aad
cmpsb
add
mov
shll
or
sbb
lcall
lods
jno,pn
call
aam
leave
test
push
mov
add
daa
mov
lods
adc
cltd
mov
sbb
in
sub
sbb
xchg
adc
mov
xor
add
add
inc
add
cs
jno
xchg
mov
add
add
aaa
dec
stos
fdivrl
test
shlb
mov
add
cmp
cwtl
inc
rolb
dec
daa
add
lods
push
add
and
or
add
pop
popf
bound
add
jp
insb
popf
sahf
pop
mov
add
add
inc
insb
add
add
into
loopne
add
xor
adc
add
out
sub
lcall
xchg
pop
sar
dec
test
ja
ret
out
test
sbb
add
add
add
add
repnz
cmp
mov
add
mov
mov
sub
sbb
mulb
mov
and
push
adc
add
mov
pop
jo
mov
xor
jmp
cmpsb
loope
adcb
shll
xor
test
jle
jmp
ja
jp
push
sbb
and
pop
lea
add
aaa
add
inc
sub
inc
dec
xchg
out
jl
add
fsubs
jl
adc
popa
outsl
or
jge
dec
int
fiaddl
ja
lret
mov
jns
out
jo
sti
add
cmpsb
jl,pt
add
cld
jmp
add
rep
pop
pop
div
inc
test
pop
inc
loop
add
mov
jnp
js
or
fucomp
add
popw
jo
mov
mov
add
push
cmc
xor
mov
shlb
out
jp
jns
in
xchg
add
ja
imul
xor
add
inc
mov
add
cmp
outsb
or
loope
loope
xchg
fcoms
sbb
jecxz
test
dec
add
add
repnz
mov
jbe
jmp
pop
ror
dec
incb
mov
adc
or
add
js
add
lahf
xchg
add
add
fxch
add
xchg
rorl
mov
fcmovnb
sbb
movsb
and
pop
jnp
push
push
jle
in
or
adc
sub
insl
ret
mov
mov
nop
jae
pop
stos
push
out
pop
or
es
xchg
inc
add
ficompl
ret
jg
out
imul
scas
or
inc
rorb
jne
adc
mov
std
lcall
sbb
lods
add
jge
pop
add
cmp
cmp
add
xor
mov
add
addb
scas
daa
mov
scas
xorl
mov
movsb
popf
sbb
push
fdivr
outsl
jbe
dec
cld
in
clc
mov
xchg
daa
fcos
in
cmp
jno
jle
jl
push
out
dec
imull
push
aas
dec
mov
and
sbbl
xchg
es
and
pop
cmpsb
xchg
jno
pop
fldpi
je
pop
xor
pop
push
cltd
repz
dec
sbb
add
out
ds
cmp
add
jnp
push
movsl
je
subb
sbb
mov
xor
out
mov
lahf
int
loope
sub
jl
pop
sarl
push
sub
lret
lea
xor
mov
int
mov
or
mov
and
and
ss
cmp
inc
sub
idivl
cmp
dec
adc
mov
rorl
jmp
cmc
aas
push
pop
xor
outsw
fnstenv
loop
sbb
stc
xor
jl
adc
ljmp
shlb
mov
pop
out
cltd
sub
test
fdivl
pusha
mov
cmp
dec
or
jmp
into
pop
cmp
gs
add
pop
lret
mov
adc
cwtl
popa
imul
inc
out
inc
dec
and
aad
cmp
cmp
popa
not
jp
sbb
jbe
inc
mov
lret
push
mov
out
jl
aad
js
shlb
dec
sbb
out
dec
fsts
icebp
repz
xchg
or
lea
popa
mov
pop
not
ficoml
and
test
call
cwtl
jg
inc
in
cmpsb
inc
pop
adc
aas
inc
lods
stc
jb
aad
dec
mov
lock
jecxz
js
sub
insb
mov
mov
jo
sub
std
cmpl
inc
xor
imul
add
lock
lcall
jp
xor
addl
roll
dec
push
insl
in
rcrb
hlt
mov
jne
test
cltd
repz
scas
jecxz
mov
lods
je
inc
cmp
pop
mov
pop
sub
icebp
push
dec
aam
mov
clc
test
push
ja
fucomp
out
adc
xchg
stos
cmpsb
ljmp
mov
mov
fsubrs
xchg
shrb
sub
aad
mov
cltd
add
test
mov
test
sbb
ljmp
xchg
pop
sbb
and
pop
mov
pop
inc
int
stos
test
dec
add
inc
dec
decl
inc
or
arpl
mov
dec
adcl
push
ja
in
inc
dec
or
addl
jo
fmull
fwait
adc
and
and
out
dec
inc
sbb
aas
mov
jns
pusha
push
in
mov
jecxz
clc
insb
xlat
sub
mov
xchg
mov
mov
dec
mov
push
push
dec
mov
in
lahf
lret
pusha
sub
int
mov
inc
xchg
repnz
jg
fcom
fildl
push
pop
jp
lds
sbb
lret
mov
lock
scas
jge
add
test
adc
insl
iret
int3
mov
ret
and
inc
lahf
sbb
std
push
test
cwtl
inc
push
adcb
xchg
into
mov
sbb
inc
imul
scas
insl
sub
mov
and
addr16
leave
repnz
xchg
and
hlt
mov
sub
inc
scas
sbb
jge
mov
aaa
push
dec
or
xchg
xchg
add
jl
int3
jbe
pop
pop
add
push
xor
mov
and
cmp
test
sub
aam
jbe
repnz
fbld
enter
daa
fdivrs
cmp
sub
das
mov
dec
dec
and
and
andl
mov
sub
cs
jmp
movb
sahf
cmpsb
pop
fidivrl
js
pop
cs
lret
push
fcomp
loope
nop
imul
jne
ds
mov
rclb
dec
popl
and
sahf
xor
add
mov
cmp
divl
int
daa
bound
pusha
test
pop
inc
inc
jle
fnstsw
xchg
push
test
dec
fcompl
push
outsb
cmpsb
and
test
bnd
inc
or
mov
or
fidivs
push
push
lods
lahf
cmp
add
int
cmp
lret
push
rorl
mov
movsl
sbb
imul
pop
scas
stc
outsl
mov
xchg
pusha
stc
in
sbb
mov
pop
push
cmp
lcall
mov
lret
out
repz
call
cmp
cmp
mov
jnp
gs
icebp
loopne
pop
mov
adc
mov
adcl
rolb
xor
pop
scas
lds
add
je
jmp
push
hlt
in
ss
xchg
sti
jbe
adc
mov
daa
int3
mov
lods
pop
dec
jl
pop
inc
arpl
dec
fxch
xor
pause
sub
jae
call
aas
jbe
pop
stos
hlt
mov
jp
pop
pushf
out
mov
cs
aaa
rolb
cmp
jne
movsl
aas
in
inc
jb
loope
dec
xor
je
sbb
jecxz
sub
std
jbe
push
cwtl
push
xor
iret
mov
sub
sbb
insb
aad
fistpl
test
mov
cwtl
dec
lock
ja
das
push
mov
push
mov
outsb
sbb
rcl
pop
lret
xor
dec
push
loop
xlat
adc
dec
iret
daa
cld
lret
sbb
push
and
inc
dec
cmp
shlb
push
test
call
pop
stos
ret
pop
xor
fstps
aas
clc
out
imul
jno
ljmp
and
aad
sti
lcall
push
inc
fsubl
add
scas
dec
test
pop
lock
fisttpl
dec
cmp
cmp
xchg
mov
mov
and
pop
bnd
stos
jae
mov
xlat
sub
add
pop
movsl
sub
stos
lret
adc
ljmp
movsb
icebp
mov
push
mov
mov
fildll
ja
test
dec
cld
jno
inc
xchg
lods
and
push
test
push
test
pcmpeqw
outsw
mov
popa
inc
out
daa
jne
enter
lock
xchg
xchg
sub
mov
mov
jp
ficompl
mov
jmp
ss
insb
xchg
inc
in
adc
fbld
loop
jmp
mov
bound
out
pop
movsl
popf
std
das
repz
pop
sbb
stos
mov
inc
fs
in
std
out
jnp
roll
push
dec
fdivs
sbb
xor
ret
fs
out
add
test
scas
cs
insb
movsl
pop
or
sbb
jbe
cmp
fiaddl
dec
or
sbb
pushf
dec
imul
scas
rol
call
rolb
and
inc
mov
je
add
stos
arpl
jp
inc
mov
lea
icebp
sub
scas
lods
loopne
sub
add
paddb
jae
fidivs
add
jo
sub
scas
aas
xchg
or
xlat
sbb
xchg
test
push
jp
jbe
jo
enter
daa
xlat
jne
cmp
xchg
enter
inc
jl
loop
dec
aad
rorl
iret
movsl
lret
and
punpcklbw
cli
and
push
mov
pop
inc
and
pop
pop
daa
dec
fs
sbb
push
int3
add
idiv
je
daa
loopne
cmp
enter
gs
adc
xor
ja
arpl
das
adcb
pop
add
outsb
xor
cmp
insb
int
push
leave
sub
addr16
lcall
sbb
adc
outsb
or
jbe
jmp
push
cmp
mov
cwtl
lock
movsb
test
cmp
bound
push
cwtl
xor
xchg
jle
fdivrs
aas
lret
rol
mov
sbb
sahf
jns
shl
int
outsl
xor
int
loop
inc
sti
stc
mov
jns
adc
fdivs
mov
test
out
sar
cli
push
inc
out
xor
inc
pop
cmp
mov
or
inc
pop
into
xchg
loopne
add
adc
iret
rclb
scas
add
mov
sbb
cmp
jge
clc
and
pop
in
cmpsl
mov
mov
imul
outsb
std
push
nop
mov
dec
fcmovnb
mov
and
flds
pop
or
scas
ljmp
dec
push
mov
fsts
sub
mov
enter
jnp
pushf
xchg
cwtl
into
jmp
xchg
cs
inc
push
call
cmpl
mov
test
test
nop
je
pushf
ret
sbb
xor
or
or
subl
sbb
test
mov
stos
addr16
das
ljmp
icebp
sbb
and
sbb
testb
loopne
rorl
loop
jnp
push
icebp
and
aaa
lret
mov
mov
dec
iret
int
rolb
hlt
inc
sub
mov
aam
mov
ret
call
xor
clc
sub
sub
popa
ljmp
adc
pop
jl
mov
push
mov
push
pop
outsl
out
setae
push
add
adcl
xchg
pop
test
sahf
push
js
lahf
pop
push
test
fbstp
lods
push
roll
mov
imul
mov
testb
adc
dec
adc
xor
lahf
or
cmp
mov
push
pop
lret
jecxz
pop
lcall
dec
out
aad
inc
cs
jbe
mov
stc
fwait
jae
inc
push
dec
mov
xor
push
cmpsl
shlb
push
pop
jns
dec
je
jnp
in
aad
les
adc
mov
addr16
inc
jp
push
mov
lcall
dec
dec
lds
out
in
pusha
bound
xor
out
ja
cwtl
push
lret
jmp
outsb
add
subl
popf
and
sub
cwtl
or
and
or
push
mov
jnp
mov
jle
pusha
sbb
cmp
iret
mov
or
xor
jae
push
hlt
or
xchg
subb
mov
es
jl
inc
sbb
leave
ljmp
movsl
mov
xor
lds
pop
add
lcall
hlt
dec
cmp
arpl
adc
jge
cmp
sbb
shll
sbb
or
movb
in
daa
int3
dec
bound
ficoms
xchg
jl
add
jo
daa
pop
scas
push
xor
movsb
ds
xchg
push
leave
push
lret
mov
mov
daa
test
adc
icebp
jl,pn
or
inc
dec
sbb
call
rcrb
and
push
fs
out
fisubrl
insl
cli
or
push
cmpl
cltd
cmpsb
sbb
push
sarl
outsl
cmp
dec
sbb
push
mov
cmp
fiadds
mov
adc
or
inc
pop
bound
sbb
popa
add
and
xor
mov
incl
or
pop
sub
push
mov
xor
xor
mov
jb
sub
subb
lret
add
in
jg
fidivrl
cpuid
pop
mov
lfs
fs
leave
push
push
testl
jl
divl
jmp
sarl
mov
nop
icebp
sbb
stc
push
cmc
xchg
fidivrs
outsl
jbe
sub
scas
and
inc
fs
testb
testl
mov
xor
inc
adc
xor
inc
jp
mov
mov
into
rcl
gs
pop
loopne
mov
xor
imul
add
hlt
iret
adc
pop
xchg
cli
sbb
ja
mov
sub
sbbl
in
or
je
cmp
in
mov
hlt
nop
arpl
lret
inc
mov
jecxz
mov
lahf
xchg
adc
int3
pushf
xor
cmp
push
scas
adc
sahf
inc
pushf
cmp
xor
cs
lret
inc
fdivr
and
xchg
aas
and
xchg
jb
xchg
out
dec
pop
insl
inc
je
jo
jecxz
push
adc
ss
mov
cwtl
hlt
popa
mov
ds
add
jmp
fcomi
test
xchg
mov
cmp
push
insb
gs
push
pop
mov
xor
or
push
shll
jnp
rclb
mov
push
push
cmpsl
aad
push
mov
cli
mov
lret
sti
push
das
shlb
mov
mov
aam
or
fistpll
frstor
mov
xchg
addr16
aam
or
popa
sbb
in
lods
adc
mov
inc
add
xchg
cmpsl
pop
adc
adc
adc
cltd
cmpsl
sti
xor
lock
into
mov
pop
lahf
test
cld
in
jge
in
sbb
dec
xor
dec
stos
push
and
xor
pop
sub
xchg
xchg
jmp
jmp
test
or
and
push
xchg
mov
mov
push
ss
ja
lods
imul
inc
inc
or
jecxz
fwait
mov
je
jne
cmp
mov
pusha
shr
in
ds
clc
mov
jns
mov
cmpsl
xchg
and
insl
mov
leave
in
sub
stos
sbb
pop
jge
mov
adc
mov
out
in
push
mov
std
jl
std
adcb
push
xchg
cmp
cmp
cmp
out
mov
popf
dec
mov
mov
xlat
jge
stos
mov
dec
and
idivb
ret
jnp
pusha
bnd
sbb
flds
pop
adc
and
iret
jmp
jae
pop
push
push
xchg
inc
shlb
xchg
data16
push
repnz
mov
adc
inc
fisubrl
push
sbb
lret
imul
int
pop
dec
mov
mov
in
mov
mov
arpl
and
jge
push
sbb
push
aaa
cmpsl
add
or
pop
loop
lret
fldt
aaa
mov
mov
popf
xor
mov
leave
scas
std
cli
cld
and
js
cmp
in
leave
adc
push
sbb
pusha
jbe
movsl
dec
in
xchg
mov
enter
daa
aad
add
dec
xchg
dec
jno
or
push
mov
push
lret
or
insb
and
pop
sbb
inc
cs
dec
call
xor
jne
daa
js
push
enter
test
loope
subl
pop
rcrl
adc
out
pusha
and
mov
add
es
stos
rclb
cmp
sub
mov
stc
lcall
push
fcompl
sbb
mov
sbbb
and
stos
mov
bound
mov
or
movsl
and
pop
push
pop
lret
loop
mov
xor
pop
lret
int
adc
stos
mov
sub
sbb
sub
jp
imul
inc
cmp
stc
adc
fs
popa
adc
arpl
iret
mov
or
out
sbb
je
stos
xor
ret
or
mov
into
mov
inc
mov
pop
jne
sbb
imul
aas
mov
addl
sbb
mov
lahf
xlat
jbe
shrl
lret
mov
in
ja
mov
jnp
sbb
nop
sarb
cltd
jo
inc
pushf
daa
loopne
jo
test
lds
std
mov
mov
call
mov
mov
adc
lds
mov
cmc
inc
arpl
inc
inc
aas
rcl
jb
cmp
xchg
loop
je
cltd
pop
jecxz
shl
cmp
mov
imul
mov
sbb
xchg
subb
and
mov
xchg
lock
test
mov
pop
inc
test
adc
sarl
xchg
popa
insl
mov
mov
mov
shl
inc
xchg
test
mov
andl
repz
shrb
cmpsb
add
xor
fld
push
jae
bound
ljmp
jmp
ljmp
sbb
xor
mov
fs
xchg
out
cltd
ret
push
aad
xchg
sqrtps
or
cltd
ficoms
push
test
and
dec
insl
cmp
ss
xlat
lock
push
not
mov
dec
pop
repz
dec
stos
inc
xchg
add
lods
and
scas
xor
dec
xor
pusha
bt
cmp
pop
decl
xor
sbb
repz
test
sahf
enter
and
sarl
push
xchg
and
mov
jge
out
les
mov
jns
lret
xchg
scas
lret
in
mov
es
sub
cmpsb
fsubl
jp
pop
jno
daa
inc
out
lock
dec
adc
mov
cmp
add
ret
xchg
xlat
ds
add
pop
or
or
and
pop
popf
jb
jecxz
iret
xchg
adc
push
jbe
stos
sti
adc
insb
sub
into
ss
push
push
and
imul
dec
fiadds
ret
dec
pop
mov
pop
inc
lret
cmp
gs
push
mov
dec
or
lea
sbb
jl
adc
sbb
add
mov
jl
stc
inc
mov
cmpsb
je
rcl
cmpsb
mov
inc
bound
leave
sar
add
in
andb
xor
or
jge
jge
sbb
mov
or
inc
jmp
int3
and
ficomps
xchg
xor
addps
fdivl
push
cmp
bound
addr16
jbe
pop
sub
jnp
dec
enter
daa
aam
leave
cmp
adc
inc
lahf
jl
ss
and
push
scas
mov
mov
lahf
sub
lods
push
adc
repz
pop
in
inc
into
scas
shll
js
shl
pop
enter
fsubrp
loope
adc
xor
dec
pop
jecxz
testb
xchg
or
rol
xor
cli
or
inc
sbb
adc
adcb
jns
push
test
out
int
and
sub
pop
cmp
inc
lcall
push
fmul
aaa
pop
sub
pusha
fldt
cs
test
pop
adc
fdivrs
mov
or
dec
mov
mov
push
adc
fsubr
inc
add
xor
or
cmpsl
xor
mov
fwait
insb
sbb
addl
and
adc
shll
loop
test
fs
jmp
adc
aas
sbb
and
out
cli
cmpsl
iret
shlb
stos
insb
cmp
sbb
or
cli
into
xchg
mov
add
rcrl
cli
xor
sub
imul
rcl
add
jnp
fs
cmc
sbb
in
mov
xlat
mov
push
sub
clc
cmp
loop
fsincos
xchg
mov
aad
jmp
pop
dec
clc
dec
outsl
inc
scas
idivl
fldenv
sti
inc
repz
and
xchg
xchg
pop
mov
dec
jl
cmp
pop
jbe
mov
dec
sub
xlat
adc
stos
cmp
inc
ljmp
aas
pusha
jmp
jb
push
adc
cld
lods
je
adc
es
cmp
cmp
cwtl
cmp
inc
mov
adc
jmp
movsb
subl
mulb
stos
xchg
mov
addr16
das
int3
xchg
xchg
push
rol
and
or
push
hlt
jl
push
inc
cmpsl
insl
outsl
sarl
ret
cmpsl
rcr
fidivrl
test
hlt
cld
jo
ss
fnstcw
xlat
mov
sbb
lods
imul
jl
les
aam
add
xchg
mov
leave
add
xchg
in
jnp
icebp
mov
dec
outsb
shrd
cltd
mov
xor
lahf
push
cmpxchg
aam
sub
adc
insb
push
mov
xchg
xchg
push
out
ds
aam
xchg
test
repz
jnp
jl
xor
rorl
setg
or
out
arpl
mov
insb
sub
cmp
daa
or
or
je
xor
icebp
movsl
mov
pop
add
fdivl
pop
lret
mov
adc
repz
fwait
add
nop
jne
lcall
mov
sbb
in
jge
xchg
ret
mov
notb
or
dec
jp
out
jle
fwait
sbb
mov
stos
in
mov
xchg
fbld
sub
loope
out
xchg
iret
cmp
sbbl
out
loop
popf
cltd
rolb
jge
push
push
repnz
stos
outsb
call
push
insb
cwtl
xlat
int3
jnp
lcall
jle
addr16
mov
ds
cmpsl
mov
dec
pop
ret
xorl
push
js
push
push
sti
push
pop
fcmove
ss
adcl
out
scas
pop
stos
or
sub
xchg
lahf
mov
xchg
push
or
hlt
xor
lods
arpl
insb
inc
mov
jae
sbb
push
addr16
sub
pop
int3
or
subl
pop
xor
jo
mov
and
cmpsb
pop
cmp
dec
movsb
filds
arpl
or
in
bound
enter
daa
rcll
jno
cmpsl
or
jg
xchg
or
push
xchg
daa
dec
movsl
out
xor
cli
mov
leave
push
out
cmpsl
test
loop
push
inc
pop
cltd
cmpsb
cmpsb
mov
pop
ret
ret
jns
arpl
add
mov
sub
in
cmp
mov
lods
adc
popf
push
dec
fbstp
sbb
les
dec
stos
push
dec
jp
int
ficomps
mov
add
adc
jae
xor
daa
scas
outsb
xchg
xchg
jecxz
das
lea
jg
push
in
mov
or
sbb
xor
cmp
test
mov
lret
mov
mov
fists
sbb
add
jmp
rcpps
mov
loop
add
stc
jg
nop
fs
notl
ljmp
lods
cmp
dec
mov
mov
jmp
xor
and
cmc
int
jg
imul
repnz
pop
xor
xchg
arpl
sti
and
fstpl
hlt
add
aad
sbb
sub
fcmovbe
hlt
popa
xor
sub
mov
dec
mov
repnz
sarl
nop
hlt
sbb
sub
and
fidivs
inc
repz
lret
pop
xchg
jmp
call
mov
pop
dec
adc
out
mov
cs
fwait
test
mov
cld
mov
aas
incl
test
and
cmp
jecxz
xchg
mov
std
mov
imul
fiadds
xchg
add
rcr
inc
mov
dec
pusha
in
mov
xchg
dec
lock
icebp
mov
stos
aad
mov
int
inc
and
push
xor
pop
inc
adc
cltd
outsb
out
push
shrb
cmpsl
shrb
sbb
jg
or
fsub
lret
dec
lret
andb
push
mov
pop
pop
mov
and
mov
jge
ret
and
inc
es
jno
clc
push
pop
pusha
xchg
and
nop
ljmp
aaa
lods
or
jb
shl
inc
mov
jl
xor
sbbb
out
mov
mov
dec
repz
stos
repz
dec
cmp
xor
ss
shll
lahf
pop
dec
adc
ljmp
lds
mov
bound
mov
mov
xor
xlat
shlb
pusha
jne
mov
xchg
js
mov
popf
out
pop
icebp
sahf
fwait
das
mov
push
xlat
pop
test
mov
hlt
pop
out
adcb
jns
fadds
xchg
adc
mov
cmp
sub
pushf
and
jp
fbstp
inc
icebp
mov
dec
fildl
in
and
pusha
into
mov
mov
jmp
lcall
out
es
rcrb
push
xchg
repnz
stos
loope
or
inc
mov
insb
add
sub
popf
cmc
mov
cld
push
push
scas
mov
adc
jmp
push
lahf
or
dec
mov
pop
cli
mov
inc
loope
mov
clc
sti
push
cmp
or
addl
inc
jp
or
xchg
fdivs
gs
enter
je
scas
mov
repz
or
repnz
std
leave
mov
sub
fs
sarl
lea
sbb
mov
in
and
add
cmc
xlat
pop
sbb
push
ficomps
xchg
sbb
fadds
and
sbb
push
add
insl
mov
dec
or
cmp
shlb
mov
loope
fwait
jno
sub
jl
repz
dec
add
je
mov
xchg
out
lahf
push
jbe
mov
dec
test
mov
xchg
cmpsb
sub
movsb
pop
ljmp
pop
inc
xchg
loope
das
adc
mov
cmp
clc
popf
adc
js
jbe
ds
xor
dec
sbb
sub
pop
test
mov
int
jnp
sub
pushf
pop
cmp
cmpxchg
fcompl
leave
sub
push
xor
outsb
clc
in
scas
test
out
push
xor
mov
inc
push
mov
test
arpl
sti
sbb
arpl
divl
jmp
rcl
rorb
jnp
test
inc
cmc
mov
movsl
xor
outsl
repnz
and
cli
mov
stc
sbbb
nop
adc
insl
les
sub
mov
and
test
mov
dec
cli
or
mov
inc
or
cmp
dec
push
cvtps2pd
pop
shrb
mov
imul
icebp
cwtl
add
ss
pushw
xor
cmp
jp
xor
mov
mov
jns
in
xchg
ror
nop
iret
dec
mov
addl
into
fsts
push
jb
push
dec
xchg
sbb
in
lea
bnd
cmp
or
jbe
adc
je
jno
in
jno,pn
dec
inc
clc
xor
inc
pop
cmp
aas
sahf
and
dec
sti
sbb
jecxz
fcoml
inc
jno
std
pusha
shl
cwtl
mov
shlb
roll
mov
inc
sub
mov
jb
pop
das
mov
lds
test
outsb
and
clc
dec
shrl
push
insl
cmp
dec
icebp
cmpsl
sar
daa
mov
push
cmp
cld
mov
in
fistpl
mov
jp
fst
and
sub
dec
fcmovnb
mov
loopne
jmp
insl
jp
clc
push
dec
lods
xchg
arpl
gs
add
mov
int
xchg
xchg
ret
test
push
data16
movd
cmpsl
add
add
cltd
addl
jo
mov
dec
xchg
push
insl
cmp
xchg
test
cmp
xchg
rcrl
jmp
popa
mov
stos
or
aad
add
pop
xchg
jmp
cmp
add
adc
adc
lea
xchg
sub
pop
inc
cmp
adc
arpl
push
loop
and
sti
or
repz
fwait
pop
jne
push
jp
sahf
jne
mov
mov
dec
int
popa
fsubr
bound
jns
aad
in
push
pop
xchg
pusha
mov
int
pop
sub
xchg
mov
mov
mov
mov
mov
jae
pop
dec
mov
jmp
pusha
imul
xchg
mov
jecxz
iret
imul
lods
jae
ja
cmp
stos
fstp
popf
out
inc
mov
shll
stos
push
mov
and
insb
outsb
mov
jl
testb
adc
test
pop
sub
xor
inc
in
inc
xchg
jae
add
jp
sbb
cmp
push
or
sbb
xchg
das
test
aas
sbb
jmp
pop
pop
lds
dec
out
shlb
mov
cmp
aaa
leave
ss
cli
arpl
or
xorb
or
mov
mov
and
daa
pushf
int3
jecxz
arpl
movsb
dec
fiadds
js
out
sbb
aaa
cmp
dec
mov
jbe
cmc
dec
int
push
cmp
jbe
inc
in
xor
in
mov
adc
shll
mov
adc
mov
jl
aas
xor
mov
push
push
adc
and
aas
add
mov
dec
push
js
les
cmp
pop
adc
daa
js
mov
pop
subl
xorl
cmp
push
ds
mov
vrcpps
mov
popf
aas
in
add
sbb
xchg
add
xchg
xor
mov
pop
int
cld
sub
pop
mov
push
movsb
push
in
cmpsl
fmul
iret
test
add
cmp
test
jmp
pusha
mov
lods
lea
jns
adc
xchg
addr16
push
gs
bound
push
inc
sub
jb
in
lret
add
insb
sbb
mov
lahf
add
cmc
ja
jnp
xlat
shll
lea
data16
push
repnz
mov
xrelease
add
cli
inc
mov
xor
push
xor
and
das
jmp
gs
aad
loopne
adcb
outsb
jo
lret
fcomps
add
inc
call
cmp
push
sub
hlt
pushf
mov
and
sti
mov
out
aad
pop
cli
nop
stos
pop
sub
cli
into
inc
call
mov
repz
js
fbld
iret
cwtl
std
call
mov
sbbb
xchg
xchg
pop
jmp
or
aam
dec
inc
jg
xor
fistpl
cmp
loopne
dec
jb
dec
je
or
clc
push
stos
std
pop
add
insl
icebp
push
mov
sub
mov
mov
xor
pop
test
loope
call
mov
sbb
pop
das
imul
mov
cmp
pop
sar
mov
negb
sbb
insl
and
testl
rcl
mov
sub
je
lret
es
dec
mov
adc
jge
mov
cltd
pop
xchg
cmc
lcall
pop
outsl
pop
ret
inc
sub
in
and
mov
mov
jl
mov
jle
popa
lea
push
mov
lock
inc
push
inc
test
int
filds
or
lock
test
jo
mov
mov
xor
xchg
mov
test
cmp
xchg
pop
jnp
pushf
add
pop
lahf
and
stos
cld
mov
out
mov
add
sbb
pop
incl
out
xor
orl
rcll
lahf
popf
scas
mov
mov
roll
negb
imul
sarb
jle
mov
sub
or
leave
call
push
sbb
lcall
inc
xchg
jmp
jns
jne
in
loopne
xchg
scas
icebp
outsb
mov
pop
cmp
jle
fmull
xchg
mov
addr16
xchg
jp
loope
mov
jnp
mov
loop
in
dec
mov
sbb
pusha
add
xor
addb
jmp
xor
addl
mov
cs
popf
push
pop
sarl
jg
stos
mov
ja
fldcw
sti
sub
jle
add
adc
sub
iret
les
ret
jmp
push
xchg
aam
mov
pushf
int
orl
push
js
js
call
fiadds
sbb
aas
clc
imul
mov
test
sarb
fs
mov
leave
lods
subb
adc
jge
subb
inc
cmp
jge
scas
negb
lret
outsl
mov
or
mov
pop
jns
push
fsubp
stos
mov
lods
jge
jo
test
xchg
and
out
enter
adc
mov
mov
pop
mov
data16
rcl
cmp
pusha
jno
mov
cli
dec
fisubrs
movsl
sti
sbb
lret
stos
cs
test
inc
push
pop
cmp
push
inc
and
cmpsb
das
outsb
popf
pop
cmp
js
sbbl
and
loope
fnstenv
adc
add
cmpb
scas
add
adc
adcb
fcompl
push
test
add
xor
xchg
add
test
cmp
pop
cmp
mov
cmp
pop
fdivl
sub
adc
outsb
mov
cwtl
repnz
cmpsl
mov
dec
nop
mov
call
aaa
and
inc
cmp
fnstcw
lret
ret
roll
lret
mov
xchg
sahf
out
adc
ds
xor
cmp
loop
mov
stc
movsb
ret
pop
fs
adc
aas
mov
mov
subl
xchg
into
out
push
sti
cli
jae
inc
xor
sub
mov
push
or
and
gs
mov
pop
adc
adc
imul
pusha
add
lret
sub
fsqrt
sub
sub
loopne
in
mov
cmp
push
jne
sub
cli
aad
inc
pop
nop
test
cwtl
dec
je
xchg
aas
push
flds
jmp
repz
xchg
mov
ja
call
aaa
pop
mov
adc
pusha
xor
dec
fildll
aaa
jp
inc
push
movsl
and
mov
aas
fsubl
jb
mov
dec
jmp
dec
and
pop
cmp
dec
in
std
scas
push
fcompl
inc
jecxz
mov
pop
out
dec
les
adc
sbb
adc
lock
inc
das
dec
mov
mov
repnz
mulb
insw
or
dec
scas
cmp
cmpsl
iret
cs
icebp
add
mov
lret
xchg
adc
and
sbb
es
mov
in
mov
aam
out
ret
roll
pop
fisttpll
fnstsw
loope
adc
mov
jp
lods
dec
add
mov
adc
and
sbb
jle
sub
incl
and
ret
les
pushf
adc
repz
dec
jo
and
ja
sbb
cmp
pop
dec
addr16
jmp
cli
out
out
push
and
xor
jnp
mov
out
fimull
out
daa
xor
jle
mov
imul
ja
push
mov
xchg
inc
das
inc
dec
stos
pop
or
jae
fwait
mov
fsub
jne
or
inc
out
pop
je
bound
xchg
jns
mov
aas
xchg
sahf
mov
gs
xor
lea
das
and
mov
arpl
mov
push
inc
cmovle
repnz
lahf
mov
fistps
sub
jmp
sti
jo
adcl
xchg
popf
xor
jmp
mov
mov
insb
inc
icebp
inc
jnp
outsb
lcall
loop
adc
int
iret
and
ret
movsb
pop
lahf
mov
jae
in
jnp
test
or
hlt
mov
inc
divl
pminub
ljmp
lcall
dec
and
rcrb
mov
fbstp
leave
and
sub
pop
adc
arpl
push
jge
fstpl
xchg
and
and
orb
jmp
scas
int3
mov
aam
fimuls
or
jo
das
outsl
scas
aaa
cwtl
mov
outsl
jo
cmp
out
movsb
or
arpl
je
jbe
dec
jno
addr16
enter
daa
iret
in
cmpl
imul
dec
dec
imul
sbb
test
lahf
fadds
xor
or
adc
jmp
cmpsb
mov
test
js
pop
add
or
scas
fs
cmp
es
adc
or
push
pop
sbb
sbb
mov
test
jae
mov
xor
push
mov
xchg
adc
pop
jecxz
jecxz
fsubrl
mov
test
imul
fisttpl
mov
iret
pop
and
inc
clc
cmp
xchg
int
div
cmc
pop
lret
sub
lcall
sbb
xor
add
aam
fcompl
stc
pop
pop
mull
rclb
es
ss
cli
fldcw
or
mov
scas
push
sub
cmpsb
jns
xor
and
cmp
mov
and
cmc
sahf
int
and
cmpsb
loopne
cmc
mov
adc
scas
imul
dec
les
andl
stos
xchg
cmp
mov
sub
inc
fsubl
stc
bound
decb
add
cmpsb
xchg
push
nop
pusha
cmpsl
in
rcl
lcall
enter
push
push
xlat
adc
scas
lea
or
pop
cmc
mov
adc
test
ds
cmp
lcall
inc
push
mov
dec
pusha
pop
and
jecxz
dec
add
dec
int
std
push
bswap
cwtl
jecxz
inc
mov
and
sub
andl
push
out
aas
sbb
pop
fimull
mov
xor
lock
mov
test
aad
rcrl
xchg
jo
repnz
adc
cmpsl
into
or
lcall
pop
ret
lret
add
jnp
push
repnz
mov
xlat
sub
jge
xchg
ret
mov
ret
pusha
and
es
or
jb
ljmp
lret
ljmp
lods
lods
mov
mov
mov
cwtl
cmp
not
lds
mov
add
leave
dec
cltd
sub
xchg
mov
fisubl
rclb
dec
xlat
inc
sbb
idivb
xchg
sarl
jg
stos
fcmovu
add
push
xchg
movups
incl
cmp
fcmovb
or
stc
xor
mov
mov
insb
shrl
pop
jb
cmp
dec
xchg
inc
out
mov
icebp
sbbl
jmp
rcrl
std
lcall
shll
xchg
dec
nop
push
mov
shl
sub
mov
repz
pop
pop
mov
outsl
cs
rclb
test
sahf
inc
pusha
cmp
fistpll
cmp
jmp
shlb
and
jecxz
xor
xor
xor
mov
and
dec
out
jnp
je
jle
fsts
lret
adc
test
iret
adcb
xchg
xor
sub
inc
or
lods
push
inc
scas
stc
or
outsl
lret
adc
xchg
xor
or
pop
inc
imul
mov
shlb
mov
xor
test
fwait
sbb
arpl
or
jge
mov
call
or
aas
int3
movsb
leave
and
xlat
xchg
nop
fisubrs
mov
jo
lret
push
jmp
and
and
jle
xchg
and
push
inc
notl
jp
in
in
mov
daa
into
mov
cmp
cmpsl
cmpl
dec
mov
push
cltd
movsl
or
and
mov
xchg
push
add
inc
fstl
xchg
sub
xor
sahf
cmp
rcll
pop
inc
xor
push
push
loope
adc
ljmp
ds
cmp
push
shl
jbe
mov
or
mov
jo
sub
push
cwtl
jp
pop
push
or
or
xor
cs
cmpsl
pop
add
push
ljmp
sub
add
mov
shr
jp
fsubrl
jg
movl
sbb
mov
xor
ret
push
outsb
aas
movsb
cmp
dec
jb
imull
sub
xor
mov
stc
sbb
mov
mov
xor
arpl
outsl
outsb
xor
loop
sbbb
adc
mov
jne
xchg
cmp
lods
mov
push
arpl
lods
roll
xor
lahf
inc
or
inc
sbb
sub
xchg
pop
dec
ficoms
sbb
imul
fcoml
sbb
dec
xchg
mov
sub
add
movsl
xor
mov
push
jo
in
dec
pop
nop
cmp
dec
xor
cli
inc
and
fyl2x
mov
les
cli
int3
repz
or
and
sub
stos
xor
ffree
adc
rcrb
mov
imul
adc
cmp
xor
aas
sbb
mov
xlat
or
je
jecxz
jecxz
movsl
out
dec
sub
std
cld
jmp
cwtl
sahf
adc
mov
jbe
xorl
cmp
pop
jge
cmpsb
mov
push
pushf
lock
das
push
push
jp
lret
jb
mov
fadd
cs
shrl
call
jbe
dec
movsb
jle
cmpsl
int
adc
inc
shrl
mov
scas
cld
jb
jno
jae
sub
lea
xchg
mov
negb
pop
sub
iret
add
out
add
neg
pop
fstpl
ret
pop
mov
sahf
popa
rcr
outsl
lods
pop
lahf
mov
pop
xor
adc
sbb
pminsw
mov
cltd
pop
int
test
push
outsb
push
jns
gs
ds
test
mov
mov
mov
ret
mov
pop
mov
pushf
sahf
out
mov
push
add
push
outsb
jmp
pop
mov
push
sti
fs
idivb
xor
cmp
sbb
xchg
inc
pop
sub
pop
inc
dec
jp
jp
jge
dec
or
inc
and
sbb
lds
push
lcall
adc
sbb
bound
das
stc
in
cmp
xchg
pushf
lds
sub
subl
sub
sub
sbb
sub
dec
dec
inc
and
pusha
aad
test
xchg
add
ret
test
mov
jp
mov
jmp
adcl
insb
sbb
push
iret
scas
xor
and
jbe
jnp
repz
xor
adc
adc
inc
add
sar
pop
or
les
in
push
or
or
ljmp
fiaddl
mov
xchg
mov
sbb
test
imul
rol
push
xchg
rclb
test
leave
adc
sub
repnz
mov
lods
dec
and
and
jge
out
push
sbb
outsb
mov
or
pusha
mov
pop
push
adc
jecxz
add
jo
js
scas
cmc
inc
lahf
and
cmp
movsb
and
jbe
and
int3
insl
lods
enter
daa
int
cli
cmp
movsl
push
jno
loopne
jl
mov
icebp
push
jecxz
push
movsl
adc
cmp
fcomps
test
movsb
inc
inc
mov
clc
cmpsb
mov
test
mov
jg
test
cli
cli
loope
out
sub
ljmp
jmp
push
adc
mov
add
leave
sbb
push
push
add
es
pop
fisubl
sub
aaa
stc
lcall
sbb
shll
pop
sub
jg
mov
mov
pop
sbb
mov
loope
and
sti
sub
jno
jnp
sbb
dec
imull
loope
repz
xchg
mov
push
sbb
aam
sahf
xlat
and
xor
pop
outsl
dec
mov
loop
aaa
mov
fs
sbb
les
ss
push
lods
cmpsb
mov
add
out
cli
or
dec
xor
cmp
jo
or
add
mov
test
daa
pop
insl
ja
adc
mov
outsl
adc
std
sahf
add
scas
cs
xchg
loopne
pop
push
cmp
stos
jmp
mov
iret
mov
sbb
xchg
jp
aad
data16
push
aas
rorl
ret
xchg
inc
xor
loopne
sub
les
dec
cwtl
xchg
jmp
sub
imul
cmpsl
dec
cmp
mov
mov
adc
daa
sbb
jmp
mov
cs
in
jg
fwait
aas
inc
inc
sahf
pop
data16
mov
dec
sahf
dec
je
stos
loope
xor
mov
push
stc
inc
std
mov
lock
mov
xchg
ljmp
pop
divps
jle
mov
lock
sbb
in
inc
mov
pop
xchg
mov
or
shll
mov
jae
rcr
dec
lahf
jge
cmpsl
int3
push
arpl
mov
cld
popf
xchg
lret
loop
jle
aam
mov
mov
adc
sbb
test
mov
ret
jle
mov
jp
arpl
rolb
sahf
xor
imul
pop
lods
mov
stc
mov
es
push
lods
ja
cmovns
add
xor
xchg
or
test
mov
imul
pop
dec
movsl
push
gs
and
sbb
call
insb
cmpsb
ds
dec
sub
mov
add
test
sahf
xor
pop
xor
sbb
xchg
mov
lock
call
sarl
imul
loopne
ljmp
call
xchg
mov
cmp
out
mov
push
push
jns
pusha
cmpsl
in
push
push
xchg
jmp
mov
sub
jle
pop
addr16
jp
cmpsb
imul
sahf
shll
cld
push
in
mov
pusha
jo
ret
xor
jmp
pop
mov
out
aas
out
popf
stos
xchg
cmpsl
or
ss
xchg
jne
and
test
jnp
lret
insl
jle
jg
push
pop
cwtl
cwtl
adc
jbe
mov
push
in
inc
and
ret
jae
inc
mov
or
gs
roll
scas
cwtl
fidivl
jmp
xchg
push
jmp
scas
adc
sti
sbb
stos
ds
mov
inc
leave
mov
hlt
cmp
mov
inc
shrl
sbb
inc
cmp
mov
add
xchg
pushf
int3
jp
lret
pop
fidivs
fs
out
adc
sub
dec
cmp
jbe
lods
scas
xchg
push
ffreep
xchg
jbe
cmp
pushf
push
js
int3
pop
int3
cmp
push
fwait
jno
cmp
imul
xor
movb
and
and
and
call
test
outsl
fwait
js
inc
jae
cmpsb
cmp
push
pop
aam
xchg
jb
pop
mov
stos
push
loope
fst
sub
fbstp
ds
jmp
fst
lcall
andb
sbb
in
add
and
icebp
cmp
int
fildll
and
lea
xor
inc
lcall
push
and
sub
or
adcb
imul
pop
mov
int
mov
push
jae
lock
popa
push
je
scas
cmp
lds
imull
add
rcrl
mov
xor
popa
lret
jnp
jp
jae
pop
jb
xor
in
loop
and
stc
xor
fs
fistpll
ss
sub
mov
aad
out
arpl
aas
jmp
mov
adc
mov
cmp
outsl
loopne
cmp
pop
mov
stos
adc
dec
jle
sahf
test
int
mov
jle
jl
lcall
jg
xlat
lods
add
inc
mov
cmp
mov
movsb
aad
jecxz
nop
icebp
sub
dec
lock
hlt
fstps
les
inc
div
inc
shll
rcr
cmp
and
xor
adc
test
jmp
pop
or
ret
sti
xchg
cmp
inc
mov
and
jb
inc
clc
dec
je
movl
push
cmp
test
cmp
sub
and
push
or
ret
add
lock
jecxz
das
les
icebp
mov
into
inc
jecxz
repnz
push
roll
xor
insl
cmpsl
sub
lcall
mov
pusha
mov
inc
lret
push
sub
adc
test
pop
xor
mov
adc
sbb
jl
adc
push
or
es
sbb
clc
mov
inc
xchg
fnsave
lods
ljmp
jecxz
cmc
mov
lcall
xchg
insl
push
test
out
push
mov
rcrb
or
mov
int3
dec
push
jnp
dec
or
repz
out
outsl
xchg
inc
sbb
sub
ret
mov
ljmp
int
add
mov
inc
hlt
xor
xlat
cmpsl
or
xchg
int3
xor
dec
mov
jne
fnstcw
mov
lods
mov
mov
stos
or
lret
bound
dec
sub
jne
sarb
fwait
roll
bound
xor
xchg
xchg
cmp
ss
enter
xchg
sub
ss
push
mov
or
cmpsb
js
cmp
sub
arpl
sbb
xchg
test
cltd
jne
daa
call
push
out
scas
push
shll
enter
xchg
stos
push
in
inc
and
jo
lock
pusha
jnp
sbb
loopne
lahf
inc
sub
pop
and
mov
shlb
jmp
sub
lods
in
js
nop
loopne
repz
repz
addr16
xchg
cmp
imul
insb
lds
sub
mov
sub
leave
add
hlt
mov
popf
inc
stos
test
cmp
push
mov
sbb
in
add
lcall
adc
outsb
xor
inc
adc
mov
jnp
mov
xchg
mov
push
cs
push
jbe
and
lcall
daa
lret
mov
jno
mov
lret
or
mov
shl
xor
jle
mov
idivl
push
cmp
cmpsb
mov
imul
push
and
pop
std
pop
nop
push
or
fisubrs
test
or
xor
adc
jne
repz
xlat
lcall
jne
dec
sbb
cmp
outsb
xorl
pusha
test
int
mov
addl
hlt
or
fmul
pop
mov
outsb
lods
push
cmp
subb
and
jle
aad
cmp
out
pop
push
push
ja
insb
cmp
sbb
imul
xchg
add
frndint
sbb
idivb
sbb
test
cmc
and
mov
or
ds
aaa
sbb
inc
adc
dec
ss
lds
notb
cli
jb
fidivl
and
mov
aas
into
xorl
loopne
iret
push
pop
stos
jecxz
adc
repnz
and
pushl
sbb
add
xlat
in
jecxz
sub
dec
mov
in
movsl
fs
mov
cld
stc
aad
les
nop
int3
es
dec
rolb
insb
sbb
xchg
pop
jbe
xor
mov
adc
mov
call
mov
imul
pop
xor
xchg
pop
clc
jmp
push
pop
cs
in
inc
test
cmp
jb
lock
dec
cmp
inc
je
cmp
jecxz
inc
mov
push
cmc
aas
std
icebp
cld
inc
repnz
bound
pop
rorl
data16
mov
adc
lock
ret
push
das
mov
xchg
push
mov
jge
pop
rcl
push
test
mov
mov
dec
xchg
aaa
push
cmpsl
lret
mov
aaa
dec
sti
cld
repz
iret
mov
pop
out
pop
shrb
push
cli
in
out
pop
sub
cmp
pop
and
ret
pushf
cmp
adcb
clc
out
out
xchg
sbb
add
popa
pop
je
lods
pusha
cmp
mov
xchg
mov
cmp
imul
jg
cltd
add
sahf
test
push
sub
push
ret
dec
jae
pop
test
push
jl
into
sbb
sbb
push
pop
mov
imul
fmulp
pop
add
mov
mov
cmpsb
or
fdivrp
xor
rcr
mov
js
out
mov
pop
shlb
sbb
adc
cmp
mov
mov
push
out
popa
inc
jne
daa
jmp
es
xor
mov
adc
push
xchg
mov
and
call
push
stos
sub
xchg
jp
rolb
lea
push
mov
jl
testl
pop
xchg
pusha
cmpsb
cmpl
jl
jl
nop
mov
xchg
repnz
out
pusha
mov
inc
xchg
nop
popf
clc
lahf
pop
mov
mov
and
dec
dec
insb
pop
repz
jnp
xor
push
out
push
adc
sub
mov
pop
mov
lock
cmp
jae
inc
push
push
inc
cmpsl
or
pop
mov
ficompl
jb
xchg
nop
inc
das
sbb
test
jb
sub
xlat
cmp
in
jp
loope
cmpsb
mov
jle
scas
leave
ja
hlt
ror
frstor
sarb
inc
fstps
jge
xor
sbb
fstl
or
adc
int3
push
xchg
xor
fidivs
mov
mov
and
cmp
xor
cmp
jbe
movl
xchg
mov
dec
cmp
adc
arpl
mov
push
mov
movsl
and
aam
lahf
bound
cmp
push
add
int3
lods
cmpsb
inc
and
in
mov
pop
cmp
or
and
push
sub
inc
xchg
cmp
cmpsl
dec
ds
flds
rclb
loope
sbbl
mov
adc
xor
pop
lcall
mov
lods
lcall
or
jbe
in
mov
popa
outsb
adc
flds
dec
nop
lock
sahf
xor
cmc
fisubrs
and
hlt
push
push
jp
out
test
cmp
outsl
imull
stos
xchg
rorl
sbb
mov
pop
xor
aas
daa
xor
outsl
ljmp
stc
out
out
lds
mov
into
ss
or
pop
js
mov
in
out
add
movsl
mov
xor
and
cmp
fldt
into
fs
mov
inc
and
jae
push
pop
lret
adc
xchg
filds
add
pslld
cmp
imul
dec
mov
in
adc
ds
insb
sar
cld
stos
fcmovbe
or
mov
dec
scas
les
inc
insl
inc
jnp
int
inc
les
ficomps
loop
jns
xor
mov
call
xor
pop
je
pusha
adc
push
jmp
cli
inc
cs
loope
xor
inc
out
fs
aas
xchg
xchg
gs
roll
mov
or
lods
jecxz
lods
rol
pop
and
cwtl
inc
xor
mov
stos
push
adcl
out
or
sub
or
inc
mov
lds
dec
mov
iret
mov
cmp
xor
or
arpl
and
div
xor
insl
jne
jmp
nop
repnz
adc
push
add
lret
das
push
scas
mov
pop
and
mov
ja
sarb
pushf
mov
ret
sub
cltd
fnsave
jnp
xchg
pop
mov
ljmp
sub
lret
les
clc
push
jecxz
in
push
sti
stos
fsts
add
data16
dec
add
xchg
pop
test
mov
insl
push
test
fimuls
lret
push
jbe
xchg
xchg
sbb
dec
adc
sbb
inc
shl
mov
cs
stos
jns
pop
cmp
and
mov
pop
xor
stos
inc
mov
jnp
fdivrs
sbb
es
adc
inc
repz
push
pop
push
xchg
mov
jne
icebp
mov
pop
fwait
data16
fsubrl
in
lcall
in
addr16
outsl
jo
sub
jp
pop
mov
mov
jmp
sub
aad
in
inc
xchg
pusha
inc
mov
fistps
dec
xchg
dec
cmpsb
jle
xchg
xchg
mov
lret
scas
out
jmp
and
lret
sub
and
mov
jnp
or
jle
pop
cs
sub
dec
push
iret
pop
dec
ljmp
fldcw
inc
sbb
dec
add
push
push
enter
jb
push
icebp
iret
stc
fcmove
ret
and
sbb
ja
imul
scas
cmp
loopne
jae
jae
cld
and
gs
repnz
cli
leave
out
push
jnp
push
mov
or
jge
adc
call
repnz
add
add
int3
cmp
mov
ficomps
fdivl
clc
stc
ljmp
loope
mov
movsb
dec
jne
push
int3
jle
jbe
cmp
push
enter
daa
leave
outsl
fidivrl
lods
mov
cli
sub
mov
sub
cmc
repz
outsl
fsubrs
and
int3
rcrl
je
test
shrb
inc
repz
jmp
les
pop
dec
mov
sub
jnp
mov
loope
fwait
test
add
inc
ja,pt
pop
adc
sub
pop
xchg
or
fwait
rcrb
cmpsl
push
shlb
pop
sub
out
mov
sub
xor
adcb
sahf
fsubl
aad
sub
in
jae
cmpsb
test
stc
andb
jg
popf
xorl
fwait
jno
shl
xchg
and
push
dec
cmp
notb
imull
aas
lret
faddp
and
xchg
mov
adc
sahf
arpl
sbb
xor
loop
push
xlat
stc
movsl
push
or
rcll
add
xchg
mov
xlat
shl
test
ss
fsubrs
cmp
cld
or
sbbb
lcall
push
xor
iret
adc
inc
mov
jo
adc
mov
sbb
and
sbb
jbe
adc
push
push
cmpsb
pop
arpl
jnp
mov
pop
dec
jbe
push
mov
nop
sbbb
or
push
dec
flds
inc
les
out
mov
sbb
pop
jl
call
mov
mov
adc
aas
push
cs
ficoms
inc
or
jb
ljmp
les
jecxz
pop
xchg
pop
rcll
xchg
call
mov
outsb
or
stos
jg
dec
xor
enter
sbbb
mov
lock
sar
popa
cmp
mov
repz
shll
clc
divb
jecxz
insl
pop
popa
or
inc
pop
cmpsl
enter
inc
jbe
icebp
in
cld
dec
testb
pusha
fldt
mov
xchg
clc
dec
rorb
push
mov
ret
mov
mov
clc
fs
aad
lcall
popa
inc
cmp
and
mov
or
sub
inc
in
rclb
stos
fimull
lds
add
bound
sub
fnsave
dec
cmp
dec
inc
pop
lock
pop
ret
sub
xor
xor
pop
divl
stos
je
out
movsb
cmpsl
das
add
icebp
cs
cld
mov
dec
or
push
pop
xor
xlat
pop
mov
jle
lds
aam
gs
mov
cmp
imul
decl
dec
sub
xor
and
mov
cmc
sub
bound
pop
jns
mov
adc
int3
or
mov
push
or
mov
sarb
stos
cmpsb
mov
stos
jecxz
hlt
sbb
mov
js
mov
nop
test
fistpll
sub
jle
xor
push
jecxz
inc
mov
popf
inc
dec
es
or
stos
pop
xchg
and
movsl
in
insb
xor
stc
jnp
stos
jmp
xor
push
je
sbb
lock
iret
mov
or
and
inc
dec
push
daa
jae
jbe
push
fld
sub
push
aas
adc
cmp
or
xchg
xor
inc
cmp
ret
cmovae
cli
fiadds
mov
and
inc
leave
gs
lods
hlt
imul
cli
inc
fistps
adc
jmp
mov
mov
or
push
add
mov
fists
fdivrp
fsubs
jo
or
scas
push
xor
and
cmp
push
movsb
fdivs
jbe
es
enter
daa
enter
fisttps
shll
lds
mov
adc
push
push
fistl
and
lcall
fdivl
push
fwait
push
mov
cmpsb
inc
add
jo
xlat
js
mov
lcall
and
insb
std
ret
cmp
out
ds
rolb
mov
hlt
xchg
xchg
push
xchg
xor
adc
je
out
adc
sahf
pop
xor
je
or
sbb
fmul
dec
sbb
insb
cmp
test
cmp
cmpb
jg
mov
add
jecxz
mov
out
in
push
cmpb
fdivs
ss
lret
sbb
mov
jae
sbb
xchg
pusha
cmc
jbe
push
xor
jnp
loop
iret
pop
imul
adc
inc
ss
lods
sub
mov
push
mov
cmpsl
mov
cli
or
xor
repnz
or
sbb
push
mov
js
or
adc
jle
jp
add
ds
int
data16
dec
cmp
xchg
lea
sbb
mov
sub
xchg
dec
sti
lret
incb
cld
aad
rclb
pop
cwtl
rorb
fdecstp
inc
xchg
nop
mov
les
repz
lea
mov
push
sbb
fimull
push
pushf
xchg
outsl
shr
nop
cs
mov
fiadds
neg
aas
aam
lods
jb
and
and
test
jg
out
pusha
aad
std
out
sbb
add
fwait
mov
dec
jp
inc
aam
dec
sbb
insb
fisttpl
mov
repz
scas
das
inc
cmpsl
xchg
mov
stos
push
lock
push
jle
ret
idivb
fldt
cmp
dec
xchg
cmpsl
xchg
les
mov
and
lret
or
fsubrs
mov
mov
shlb
sti
sub
cld
aam
insb
inc
ret
dec
fiaddl
or
fldl
dec
sub
flds
ljmp
leave
lods
mov
icebp
in
mov
mov
pop
mov
and
mov
shlb
aaa
xor
pop
push
or
push
dec
test
add
outsl
mov
sbb
and
pop
mov
push
mov
pop
and
rcrb
add
xchg
lcall
add
lahf
mov
inc
pop
and
andl
cmp
ja
test
sub
push
inc
pop
cmpsl
bound
xchg
repnz
xor
inc
push
fdivrs
stc
mov
pop
mov
bound
mov
adc
mov
cltd
call
sub
gs
enter
xchg
jp
scas
hlt
mov
mov
mov
leave
cmp
dec
pushf
aad
in
inc
cmp
push
inc
fists
outsl
scas
jmp
push
lahf
popf
orl
ficompl
into
subl
int
and
cltd
insb
pushf
in
jnp
or
jle
dec
push
mov
mov
push
ret
mov
push
push
dec
jae
sub
pushf
xor
int3
pop
cli
inc
out
and
fidivl
xorl
inc
imul
jns
add
stos
lds
enter
fiadds
scas
mov
fsub
enter
lea
mov
sbb
mov
or
dec
and
or
sahf
lods
pop
and
pusha
fisubs
ja
jo
xor
scas
das
lahf
lea
pop
push
repz
push
push
jne
pushf
cmp
fbstp
enter
daa
gs
cmp
cmp
test
cwtl
jl
push
xor
in
and
mull
mov
ds
xchg
sbb
adc
cmpsb
lret
pop
xchg
mov
rcll
jl
push
mov
cmpsb
sub
push
cmp
adc
ds
mov
shl
push
lret
and
cmp
inc
dec
cltd
add
out
scas
xor
jae
insb
pop
xchg
int
push
lea
mov
pop
pop
scas
dec
hlt
lcall
test
ja
outsb
sub
or
cmp
sbbb
mov
mov
insb
mov
stc
enter
xor
sub
cmp
insb
and
imul
jae
lret
add
in
cmpsb
lds
dec
sbb
test
bound
outsl
xchg
ret
mov
andl
adc
sbb
add
cmpsb
sarl
xor
cmp
or
pop
fcmove
or
pop
adc
inc
ljmp
filds
imul
add
pushf
or
sarl
in
addr16
call
xchg
jge
int
out
push
cmpsb
mov
gs
aad
xor
dec
lret
jmp
fnstenv
test
pop
mov
adcl
pop
popf
call
scas
in
push
pop
lea
in
inc
jae
jmp
fldcw
mov
icebp
inc
lds
in
inc
inc
pop
test
jae
shll
pop
dec
sbb
pop
jecxz
jge
arpl
std
in
cwtl
mov
cmpsl
test
inc
xor
sbb
insl
test
mov
sbb
jmp
mov
xor
das
pop
sbb
mov
popa
aaa
dec
and
xchg
repz
rcrb
popf
js
sub
dec
dec
sbbl
xchg
inc
cld
lahf
push
add
jl
pusha
mov
leave
cwtl
and
mov
mov
shlb
icebp
shrb
test
dec
xlat
pop
ret
fcoms
mov
stos
cmpsl
push
xchg
sbb
dec
ljmp
lods
or
xchg
mov
dec
stos
inc
xchg
rcrb
mov
add
and
cltd
loopne
test
jp
jecxz
mov
into
push
dec
rdtsc
xlat
test
push
addb
in
shll
push
pop
dec
adc
mov
push
aas
add
daa
jae
cmp
js
xchg
lea
push
pusha
cli
xor
cs
mov
test
mov
dec
xor
dec
pop
mov
inc
sahf
push
lcall
jnp
ret
stos
mov
out
mul
out
xchg
daa
mov
in
cmpsb
xchg
lds
pop
sub
pusha
dec
jns
es
jp
gs
jmp
scas
sbb
jg
cwtl
in
push
mov
adc
data16
and
jmp
push
lahf
sbb
out
test
popf
xchg
sbb
or
mov
mov
sub
pop
lea
insb
pop
fisttpll
shll
mov
push
add
sahf
iret
jp
bnd
dec
pop
mov
test
and
sbb
mov
push
outsb
xchg
sbb
lock
cwtl
inc
ret
imul
push
scas
arpl
rorb
mov
lret
leave
push
daa
inc
hlt
incl
ljmp
push
into
sbb
test
pop
or
sti
add
mov
dec
adc
fiadds
ss
or
scas
push
adc
and
and
movsb
out
das
jne
mov
push
dec
in
sbb
cs
es
cmp
sub
jg
popa
jl
sub
jno
sbb
push
and
sub
lahf
fisubrs
test
xor
inc
mov
scas
mov
js
xor
push
mov
sub
add
cmp
imul
adc
mov
mov
jle
jl
sub
loopne
xor
jle
das
lahf
mov
inc
push
sub
xchg
movl
jae
test
mov
rcl
dec
insl
mov
jne
test
into
ret
xorb
mov
cmpsl
jg
shrl
into
and
stc
stos
push
xchg
push
fsubs
push
push
lret
aas
shr
sbb
xlat
scas
negb
jnp
ja
dec
mov
shll
cs
outsl
pop
dec
loop
ficoms
stc
lret
fs
pop
mov
in
dec
cltd
ss
or
mov
or
std
cli
jno
push
inc
std
cmp
pop
orb
jo
into
lock
dec
gs
mov
and
mov
call
adc
fldl
in
out
mov
outsl
cmp
pop
jns
daa
testl
mov
mov
dec
std
decb
pop
jecxz
adc
dec
sub
sub
lods
fldcw
add
push
jl
xchg
inc
mov
lea
pop
call
sub
imul
cwtl
jecxz
pushf
in
dec
sub
adc
adc
push
das
inc
pop
fnstcw
aas
adc
add
movsb
adc
add
popf
cmc
shufps
std
xor
rcrl
mov
mov
jmp
sub
out
loop
xchg
sub
mov
je
lock
add
decb
mov
xor
out
shll
testb
subb
dec
dec
jl
inc
cmpsl
lds
ss
push
xchg
cld
lret
lret
jmp
insl
mov
scas
xchg
and
lods
and
out
xchg
adc
sub
fwait
aam
xchg
pop
ret
addr16
cld
es
lret
je
xchg
push
call
adc
lods
ja
mov
mov
pop
or
push
stos
and
loop
pop
add
push
sbbb
sbb
mov
nop
push
xchg
or
jbe
loopne
inc
je
xchg
push
ror
and
pop
clc
mov
je
int
jbe
into
adc
fstps
xor
dec
lds
fidivrl
fcoms
mov
xchg
sub
ret
pop
or
inc
xor
mov
negl
push
mov
jle
in
xchg
or
aad
xor
sub
and
cmpsb
movsl
and
mov
xchg
adc
and
imul
or
dec
addr16
sarb
shrb
mov
movsl
icebp
in
iret
nop
pusha
lods
inc
out
fstl
arpl
xchg
jmp
jp
out
iret
lret
popf
mov
repnz
loope
stos
mov
mov
insb
jb
dec
jnp
sbb
push
dec
xchg
adc
addl
jge
lds
xchg
arpl
push
and
or
ret
inc
in
mov
ficompl
and
sbb
xchg
sbb
je
lds
mov
push
sbb
or
arpl
and
jne
sbb
fcoml
xchg
insl
fimuls
das
notl
cmp
xlat
int3
out
pop
pop
jle
mov
out
xor
bnd
mov
ret
mov
and
push
or
sbb
add
aam
jns
xchg
daa
lds
cmp
lahf
jno
mov
jl
imul
movsl
dec
and
pushf
lahf
std
mov
inc
test
cld
adc
inc
das
push
xchg
cmpsb
shlb
js
pop
inc
pop
ja
subb
mov
xchg
pop
sub
mov
adc
xchg
push
mov
adc
and
movsb
sbb
es
xor
xchg
aam
test
mov
fstps
stc
movsb
std
fmul
mov
sub
sub
outsb
pushl
xchg
test
cmp
sub
std
mov
andl
std
dec
mov
dec
in
push
mov
loop
mov
data16
lret
test
subb
ret
sbb
pop
out
lret
pop
in
sbb
xlat
loop
xor
stc
cmpl
adc
mov
xchg
insl
stc
lods
ficoms
mov
inc
int3
out
cltd
aad
movsb
mov
cmp
leave
jbe
filds
into
rcll
gs
in
jp
sbbl
adc
adc
mov
jp
adc
push
sbb
bound
xlat
in
xor
jb
mov
daa
aas
dec
sti
xlat
cltd
js
stos
arpl
aad
inc
or
mov
addr16
int3
mov
les
mov
in
fildl
xchg
add
lea
sbbl
repz
adc
imul
xchg
ret
js
xchg
or
aas
mov
jnp
inc
push
or
je
mov
imul
adc
jbe
push
mov
mov
lock
fnstsw
cmpsl
fistl
pop
dec
mov
sbb
das
fldl
bound
mov
mov
inc
sub
insl
clc
and
dec
ja
fsubl
adc
mov
inc
mov
cld
cmc
xchg
ror
pop
adc
mov
xchg
and
sarl
or
fadds
cmp
test
ret
neg
es
inc
jmp
clc
push
in
xchg
xchg
jg
ljmp
cmp
sbb
mov
pop
fsubp
push
test
dec
cmovno
mov
pop
or
push
push
cmp
dec
fstl
clc
xchg
outsl
in
sbb
xorb
mov
mov
out
xor
mov
push
and
js
dec
xor
mov
add
push
xor
aad
mov
mov
mov
shl
ja
es
add
push
and
push
push
push
shrl
mov
repz
mov
jbe
mov
testb
divl
mov
mov
push
push
loope
push
mov
mov
mov
mov
mov
push
sbb
sbb
insl
lods
cmp
fstl
xchg
outsb
and
jmp
mov
and
push
imul
loop
scas
mov
push
sbb
stos
sub
jbe
xchg
lds
leave
push
jle
cmp
adc
iret
cmp
pop
cld
mov
inc
jnp
add
in
push
in
add
cmp
add
fimull
xchg
lcall
imul
scas
sub
ljmp
xlat
inc
mov
jo
inc
xchg
add
xchg
push
push
arpl
nop
inc
jmp
ja
scas
or
movsb
xchg
aaa
push
push
and
and
add
aaa
outsl
int3
rcl
pop
pop
lods
sbb
fimuls
shll
scas
int3
add
and
pop
sarb
sub
add
add
stos
divb
push
popf
in
jmp
jg
je
xchg
les
cmp
xor
jl
jns
dec
adc
nop
push
fisubrs
movsl
dec
fildl
and
into
cmpsl
lahf
sbb
fs
inc
mov
test
push
mov
aaa
pop
cmpsb
push
sub
pop
or
jbe
out
adc
push
jne
loope
cmpsb
mov
pop
scas
cmp
arpl
ds
adc
jb
push
jo
popa
cmp
ficomps
ljmp
xor
pushf
mov
das
int
fwait
and
cld
jne
pop
sub
pop
lcall
fdivrl
nop
sub
scas
pop
outsb
in
test
out
filds
enter
in
push
mov
repz
push
mov
mov
fcomps
inc
pop
lret
add
lods
cmp
sbb
adc
sahf
xchg
sbbb
jmp
dec
loop
mov
inc
fs
aam
adc
inc
das
lods
mov
adc
xor
xlat
add
xor
sub
mov
xor
dec
jecxz
into
mov
sub
jno
sbb
adc
pop
adc
inc
imul
fiaddl
add
sbb
popf
dec
lret
addr16
sub
sub
adc
xchg
leave
push
sti
xchg
add
mov
lahf
nop
leave
inc
mov
xor
fistps
and
orb
movb
or
cli
and
pop
cmpsb
push
pop
adc
bound
ss
fstpt
push
inc
xchg
or
jb
imul
mov
je
jp
jecxz
mov
insb
lods
std
addb
mov
faddl
sbb
lea
enter
inc
cltd
and
mov
and
lock
push
sbb
mov
mov
mov
dec
inc
xor
fdiv
testb
cmp
cmpsl
ret
stos
in
mov
sbb
cld
and
or
leave
and
mov
push
mov
pop
arpl
shrb
add
lods
psubw
test
adc
jg
clc
mov
inc
xchg
aad
ljmp
add
pop
popa
mov
movsl
adc
push
pusha
sub
jbe
add
inc
cltd
test
addl
nop
push
pop
fisubl
dec
inc
fwait
dec
test
jmp
xchg
lock
rcrl
std
stos
pop
sbb
out
xchg
js
add
js
callw
sbbl
mov
imul
mov
mov
jnp
shlb
in
dec
clc
fsubs
arpl
sahf
fwait
lock
jne
out
mov
fs
xchg
push
lahf
bound
add
jmp
in
add
sahf
mov
lcall
push
push
and
sub
jp
ret
outsb
cmp
mov
test
inc
in
in
sbb
fists
test
xchg
inc
jae
jmp
jg
pop
orl
out
jp
popf
or
jns
inc
add
sahf
ja
insb
dec
mov
movsl
jle
sbb
push
xlat
rcll
aaa
xchg
out
iret
xchg
ret
push
xor
mov
push
test
or
sbb
mov
jno
xchg
icebp
jbe
sbb
test
scas
mov
dec
lds
add
mov
ret
dec
fmul
mov
aaa
and
stos
push
inc
out
ljmp
dec
add
or
scas
push
int3
mov
inc
xor
sub
xorb
xchg
sti
scas
stos
cmpb
loop
frstor
sbb
test
add
sar
test
outsl
imul
cmp
add
jno
aad
jl
pop
lret
adc
push
shll
and
out
push
push
int3
test
xchg
loop
inc
dec
bound
cmpsb
sbb
js
bound
pop
cmc
fsts
pop
jns
loope
loope
sub
les
ljmp
adc
dec
cmp
iret
mov
orb
add
scas
adc
cmp
fcom
js
repz
xchg
pop
sub
out
stos
stos
fcompl
cmpsl
or
sub
testb
lds
push
addb
adc
cmp
jbe
ss
mov
out
and
push
sbb
cmp
pop
scas
jae
in
shrw
adc
or
cmp
pop
pop
xor
shll
add
movsb
loop
jnp
stc
out
bound
adc
jle
sbb
rorb
mov
xor
xor
rorb
or
in
gs
lret
inc
ret
pop
mov
scas
mov
adc
mov
add
push
xor
fdivrs
sub
pop
mov
std
daa
inc
sti
xor
and
adc
inc
push
roll
pop
les
addr16
lea
xchg
call
stos
into
or
pop
cli
inc
adc
leave
imul
outsb
mov
ds
aam
loope
mov
ret
out
lods
loopne
in
mov
cmp
leave
jecxz
cmc
sbb
std
sub
loope
cmpsl
gs
hlt
dec
xchg
xor
sbb
inc
jle
jle
sti
mov
xchg
mov
xchg
or
fwait
add
mov
cmp
iret
fst
dec
imul
fimuls
dec
insl
aas
mov
ja
pushf
icebp
out
bnd
dec
pop
push
mov
xchg
negl
dec
push
pop
sarb
cmpsl
sub
data16
ja
out
ret
adc
lds
cwtl
sbb
fldl
pop
clc
movb
ljmp
sti
lods
mov
pusha
mov
ficoml
xchg
in
scas
pop
push
cmp
ud0
scas
add
rcrb
outsb
in
mov
cld
xchg
push
stos
dec
stos
xchg
xchg
sub
out
popa
rcl
mov
inc
stos
push
inc
stc
out
notb
push
add
xchg
jmp
pushl
sbb
repnz
xor
lret
jge
outsb
mov
sbb
repz
jge
ss
ja
sub
dec
jmp
out
inc
cli
mov
fwait
pop
cmpsl
mov
pop
addr16
cmp
jmp
popf
vcvtps2uqq
xor
push
push
int3
mov
push
scas
sub
dec
addb
and
shll
test
mov
or
mov
jle
xor
outsb
xchg
adc
inc
jmp
dec
out
sbb
mov
pop
adc
cmc
insl
cltd
push
test
shrb
mov
imulb
out
lea
jle
out
or
add
pop
iret
mul
push
jnp
jl
push
cmp
sbb
mov
push
imul
or
xor
outsl
fidivl
push
add
inc
jne
ljmp
lds
mov
mov
push
mov
leave
das
lea
sub
arpl
push
icebp
cld
or
sbb
aaa
aam
mov
add
dec
sti
int3
test
cli
pop
or
lret
xor
jne
jbe
mov
push
cmp
push
adcb
jmp
in
mov
cli
data16
ret
cmp
mov
jecxz
loope
mov
push
movsb
lock
pop
jae
and
or
push
jmp
lods
adcb
inc
xchg
cmpsb
pop
jns
pop
pop
in
and
inc
lret
mov
mov
sub
add
cltd
insb
pop
ds
mov
cltd
shrb
imul
and
jbe
hlt
lock
pop
push
cmp
push
int
jno
sub
test
pop
sub
push
je
fmul
xchg
shrb
push
add
sub
jg
mov
mov
mov
dec
add
fidivrs
xchg
push
xchg
mov
fcoms
inc
and
mov
push
roll
mov
cmp
and
inc
xor
dec
outsl
loop
enter
imul
sbb
ret
pop
dec
xchg
lods
xchg
push
les
mov
adc
cmp
adc
stos
into
jl
imul
pop
loopne
lea
adc
dec
or
adc
sub
aas
lcallw
test
adc
cmc
xlat
and
loopne
lret
ret
inc
inc
mov
push
adc
adc
ljmp
xchg
aad
cmpsb
ja
inc
add
out
les
xchg
cmp
fsubs
sub
sub
xchg
mov
pushf
cltd
icebp
jae
popa
push
mov
mov
inc
lea
aas
mov
or
inc
fimuls
push
push
je
out
jmp
fnstcw
jb
pop
std
sarb
jo
mov
or
or
and
cmp
test
mov
arpl
and
jp
jp
pop
mov
hlt
xor
rcrl
mov
adc
dec
push
dec
imul
leave
pop
cld
jbe
cwtl
lret
cmpsl
test
xchg
leave
adc
xchg
push
pop
push
popf
rclb
inc
sub
pop
lods
aam
fsts
sbb
sar
add
stc
ljmp
fwait
lods
and
sarb
fdivrp
xchg
xor
rorb
pop
sub
cltd
repz
test
test
push
popf
jns
dec
adc
test
mov
xchg
xor
shrl
aaa
jb
movsb
sbb
stos
std
das
mov
pop
stos
xchg
add
scas
sti
and
push
mov
dec
or
xor
inc
mov
xchg
mov
lcall
ja
aas
push
dec
fidivs
xchg
dec
push
stc
mov
fwait
dec
test
push
stos
xor
add
shll
push
pop
bound
jns
rcrb
push
or
std
push
adc
inc
inc
ret
and
push
test
sbb
add
loope
dec
out
mov
in
fwait
pusha
pusha
sbb
in
fists
mov
jmp
adc
push
sahf
popf
push
mov
ja
ret
ficompl
cmp
and
sbb
in
jnp
push
jle
mov
in
adc
imull
push
or
mov
mov
icebp
pop
jae
add
or
scas
sbb
inc
jmp
mov
popa
sbb
aam
imul
scas
push
sbb
rcl
inc
mov
imul
hlt
jbe
mov
inc
hlt
or
movsb
pop
cld
sbb
jae
aaa
xchg
sub
or
adc
add
jnp
pop
cmp
push
jb
jle
push
mov
jo
mov
add
jns
mov
movsb
movsl
mov
xchg
jbe
aaa
xor
mov
pop
mov
shll
jno
orb
or
dec
pop
cmp
push
xchg
and
pop
enter
or
mov
je
push
sub
loope
imul
pop
andl
lret
push
pushf
mul
icebp
ret
fsubrl
adc
ds
cmp
xlat
rcrl
aad
xorb
fistps
incl
sahf
jmp
sub
cltd
pop
test
cltd
mov
add
sub
iret
ljmp
mov
cmpb
xor
sub
fdivp
pop
mov
xchg
mov
loope
and
outsb
adc
into
imul
bound
cmpsb
rcr
scas
mov
sbb
sahf
jnp
std
cmc
out
jle
xchg
test
stc
pop
fcoml
test
or
js
shll
jle
lods
jp
mov
testl
xor
hlt
or
dec
cmpsb
xchg
dec
pop
loope
add
rcrl
mov
cmp
unpcklps
movb
push
dec
sbb
sbb
dec
pop
adc
sub
sbb
in
shll
sti
xchg
jo
aaa
mov
dec
nop
pop
pop
pop
dec
add
add
fnstcw
and
sub
push
xchg
prefetchwt1
lea
pop
fsubrp
imul
test
cwtl
pop
mov
jmp
pushf
inc
in
test
push
sub
add
pop
inc
out
ror
inc
loop
jmp
jb
cmc
push
dec
loop
mov
jecxz
dec
dec
jne
loope
ja
sub
jb
lds
bound
dec
mov
add
rorl
out
mov
cltd
sbb
jge
sbb
mov
stos
jmp
mov
jmp
loope
dec
lods
jne
xchg
sub
cmpsl
shlb
fst
test
popf
les
cld
mov
fimuls
and
sub
xchg
push
shlb
notb
ret
xor
out
fstl
rcll
jp
fisubl
repnz
lods
mov
mov
pop
mov
mov
jp
jns
icebp
sarl
bsr
sub
cmp
aam
test
dec
push
pusha
ja
dec
jns
imul
int3
sub
roll
int
stos
in
loopne
out
mov
dec
iret
add
pop
lahf
push
pop
dec
xor
fimull
dec
adc
xchg
mov
shll
push
inc
inc
sub
jae
in
pop
fwait
jge
lahf
push
dec
lock
jne
cmpsb
push
mov
xor
out
xor
fsubl
cltd
push
jns
mov
daa
xchg
lahf
cmpsb
mov
sub
inc
xchg
cltd
and
mov
repz
mov
stos
cmc
dec
rcr
lahf
in
or
fbstp
add
ss
es
loopne
addb
popa
mov
jle
les
add
xchg
stos
imull
and
movsl
lods
insb
mov
jnp,pn
daa
lods
jle
jne
push
lods
xchg
out
adc
ror
mov
inc
mov
or
cmpsl
xchg
xchg
xchg
adcl
repz
adc
inc
pop
inc
push
inc
lcall
cmp
scas
mov
lock
mov
lret
mov
and
sbb
loop
arpl
cli
inc
idivl
dec
cli
cltd
sbb
iret
aaa
push
loope
or
pop
xchg
add
ljmp
imul
xor
sub
scas
dec
pop
jp
or
sarl
pop
ret
movsb
movsb
xor
dec
jbe
rcrb
js
pusha
fadds
ja
into
jno
add
dec
into
jae
push
push
sub
jnp
enter
cmp
pop
mov
xchg
loopne
push
repz
inc
cli
jns
cmpsb
pop
xchg
jae
test
arpl
les
push
mov
cmpsb
sub
clc
idivl
testl
stos
rcr
decb
inc
pushf
inc
sbb
xchg
or
xor
and
sub
sub
pop
sub
inc
lcall
and
adc
in
mov
out
xor
push
fldenv
jg
dec
and
fwait
movaps
ja
push
cwtl
lds
cmp
mov
xchg
mull
xchg
inc
lret
jae
mov
sbb
stos
daa
cmc
scas
mov
xor
dec
popf
outsl
mov
in
mov
adc
jbe
xor
loop
loop
aaa
lods
popa
ja
mov
adc
xor
mov
or
stc
or
imul
pop
add
jp
movsb
and
imul
sbb
push
data16
push
cli
cmp
js
sub
add
ds
sti
inc
nop
out
pop
out
mov
nop
xor
int3
addr16
sub
sub
repz
les
dec
xchg
shl
mov
cmpsb
jge
call
daa
and
fstl
mov
mov
mov
add
inc
jbe
je
std
pop
lcall
loopne
dec
pop
or
jecxz
pop
or
js
or
push
adcl
mov
scas
mov
cmp
cmp
pop
addr16
fnstenv
fmuls
ret
adc
mov
jbe
cmp
notb
and
dec
pop
or
cmpsl
mov
dec
xor
jecxz
cld
int3
inc
xor
test
jge
pop
and
enter
test
js
clc
test
and
fdiv
mov
shrl
es
imul
ja
jle
shrl
mov
in
outsb
and
lods
stc
lcall
inc
shll
rcl
push
int3
xor
nop
dec
add
xchg
movsl
aad
mov
push
and
sub
loopne
fldcw
addr16
jg
repz
cltd
inc
pop
cli
push
fisubrl
pop
scas
pop
add
in
insl
call
adc
push
sub
sbb
cltd
cmp
mov
addr16
dec
loopne
inc
mov
mov
fwait
lods
negb
xchg
pop
movsb
mov
bnd
jb
bound
and
push
xchg
out
xchg
pop
mov
arpl
or
add
jp
pop
mov
add
mov
inc
cmp
nop
pusha
dec
cli
inc
fisttps
mov
jmp
stos
int
addl
sbbl
inc
out
stos
push
es
cmpsl
and
pop
jnp
test
and
notb
stos
cmp
ret
mov
inc
jo
mov
insb
jae
push
push
mov
push
or
movsb
std
roll
sbb
fcmove
mov
inc
sbb
je
imul
dec
lds
adcl
cvtsi2sdl
hlt
or
fisubs
fistpl
jge
shrb
aaa
sbb
adc
jbe
loope
inc
add
lock
int3
imul
fidivrs
in
jo
xor
adc
lahf
sbb
cmp
mov
push
loop
add
mov
stc
enter
daa
mov
or
jno
rorb
cmp
fsqrt
movsl
jb
test
push
les
bound
pop
test
mov
mov
cmpsb
loop
push
pop
iret
leave
adc
arpl
icebp
jbe
push
pop
loope
lods
sub
mov
cmp
test
adc
mov
xor
sbb
imul
je
push
test
xlat
int
in
arpl
and
cmpsl
dec
cmp
push
add
cs
mov
lods
test
fwait
cmp
jne
mov
jecxz
mov
xor
mov
and
and
nop
push
cmp
inc
jns
mul
icebp
jno
cmp
xor
sbb
add
sahf
rcl
cmc
jne
inc
xor
cli
data16
jns
stc
lret
in
fs
and
ss
pop
cmp
mov
push
stos
cli
in
lret
xor
loop
cmp
aam
or
test
and
inc
fsub
sbb
xchg
pop
pop
mov
jns
sub
adc
xchg
pop
add
and
cld
sbb
les
xlat
loopne
out
and
mov
test
jae
jge
cmc
aad
int3
xor
ret
cld
mov
fldcw
pushf
inc
mov
mov
scas
sbb
or
repnz
cmpsb
lock
xchg
ficoms
stc
orl
pusha
pop
jmp
imul
cs
inc
std
mov
sbb
aas
imul
jb
add
je
adc
jecxz
scas
iret
jnp
or
cwtl
xchg
les
fidivrl
push
dec
pop
test
das
das
pop
or
imul
pusha
mov
mov
sbb
and
dec
sbb
not
cmpsl
sbb
dec
pop
and
cmpsl
mov
js
icebp
dec
es
lret
hlt
fidivl
and
arpl
pop
pop
fcomip
ror
outsl
adc
pop
push
cmp
mov
or
movsb
cmp
fucom
pusha
pop
clc
mov
or
adc
repz
mov
mov
cmp
push
cmpsl
mov
inc
add
fs
cwtl
cwtl
push
test
xchg
dec
inc
sbb
test
xor
sbb
cmp
pop
movsl
stos
out
lret
out
sbbb
add
mov
jns
cs
stos
or
and
xor
test
mov
pushf
roll
and
add
xchg
sub
and
inc
push
test
or
outsl
jb
fildl
push
xchg
dec
xor
mov
movl
jns
dec
pop
in
cmp
mov
mov
sub
cmp
shlb
jle
lock
cld
mov
dec
xchg
mov
mov
mov
xchg
add
pusha
ljmp
xchg
pusha
or
xchg
jbe
flds
fs
cmp
loope
push
cmpb
stos
fucomp
pusha
and
into
out
pop
jo
jnp
out
dec
jle
lret
cli
push
cmp
pop
iret
jb
and
mov
pop
inc
pop
int3
inc
mov
test
ja
pop
or
pop
dec
xor
test
jne
movsb
inc
scas
sbb
xorl
addr16
lds
outsl
shlb
jmp
bound
leave
or
data16
push
mov
mov
jge
imul
icebp
jbe
aaa
rcr
out
aam
stc
add
int3
push
cwtl
cmp
xchg
xchg
ficomps
out
xor
loope
lds
xor
sarb
ret
inc
cmp
push
xor
jbe
cs
in
push
daa
sub
push
push
popa
daa
mov
nop
and
aaa
adc
or
xor
push
xor
jns
jns
mov
push
lahf
xchg
lods
push
xor
movsb
inc
push
mov
sbb
divb
mov
push
xchg
scas
pop
xor
push
push
fucom
ss
fistpll
push
scas
bound
clc
mov
lods
mov
mov
insb
pop
dec
sbb
int3
add
inc
add
inc
gs
inc
in
jne
jp
and
fdivrp
dec
pop
cmp
or
fcmovnu
jp
fisubrl
ret
outsb
mov
add
mov
jg
mov
in
mov
pushf
mov
ret
add
mov
push
push
sahf
iret
stc
cmp
lcall
negl
stos
add
mov
mov
xchg
cmp
test
cwtl
stc
mov
mov
loop
cmp
andb
dec
adc
adc
mov
lods
das
daa
mov
out
adc
cli
or
or
mov
fwait
jl
or
popa
loopne
ja
pop
ds
cmc
imul
pop
mov
data16
leave
mov
cmp
test
xlat
pop
sbb
sub
dec
sbb
adc
adc
mov
cmp
aad
sarl
es
and
pop
inc
push
cmp
mov
or
repz
ljmp
je
or
fmull
inc
and
clc
jbe
push
push
mov
jmp
add
cs
add
inc
xor
addr16
push
fimuls
inc
je
mov
jle
pop
std
insb
test
mov
xor
int
pop
andl
mov
loopne
lods
data16
inc
adc
mov
shr
pop
and
jg
rcr
ss
sbb
insl
dec
lds
dec
push
into
sub
jbe
test
and
push
lret
arpl
mov
and
sub
out
mov
sahf
imul
aam
pop
rol
fildll
push
daa
daa
sub
or
test
in
and
mov
sarl
popa
inc
or
iret
mov
mov
mov
pop
push
subb
pminub
add
jbe
or
test
aam
push
test
jnp
test
xor
sbb
dec
psrlw
xlat
in
push
add
sbb
call
pop
loope
andl
mov
mov
mov
int3
pop
fldl
iret
ja
mov
dec
stos
sbb
inc
in
mov
fwait
or
push
ss
jne
jmp
mov
mov
out
int
lock
rorb
jns
sbb
in
inc
sub
or
push
or
or
sbb
jp
mov
mov
stos
mov
lahf
inc
dec
jp
mov
pusha
test
jp
int
in
xchg
xor
push
xchg
inc
popa
sbb
out
or
sbb
and
adc
and
sbb
lret
jnp
clc
pop
jle
fs
and
ror
mov
pop
jge
faddl
push
jae
loope
push
cmp
or
lcall
fidivl
jo
xchg
sti
aam
sbb
arpl
xchg
xor
scas
faddp
dec
nop
rolb
mov
mov
gs
xorb
hlt
mov
or
inc
add
dec
jge
cli
jl
lods
dec
sub
and
outsb
in
add
imul
fdivrp
xor
xor
cmp
loope
in
data16
ss
cmp
ret
movsb
rcll
mov
inc
and
adc
in
cmp
je
push
jnp
daa
mov
leave
int
push
mov
jl
sbb
push
adc
aas
movsl
add
and
lahf
cmc
into
push
or
addr16
push
sub
inc
cmpsl
cmc
cld
cmpsb
call
jl
js
pop
jnp
outsl
fstpl
loope
cmp
sub
mov
aas
sbb
adc
outsl
jne
cmpb
sbb
mov
sub
int
adc
cmpsb
or
push
sub
incb
movsl
scas
lcall
lahf
sbb
cmp
xlat
outsb
pop
outsb
movb
pop
scas
jg
rol
mov
movsb
cmp
add
mov
mov
and
int3
lds
mov
push
xchg
fdivrs
cmp
lret
inc
sarl
mov
cmp
pop
or
xor
in
out
outsl
cmp
xor
stc
cmp
fs
adcl
push
push
ss
iret
cmp
push
aad
mov
pop
sbb
xor
rcrl
and
or
pop
into
jmp
add
jns
loopne
and
pop
pop
cltd
rcll
sbb
xor
adc
jp
add
or
sbb
cmp
sub
test
mov
mov
jg
xchg
aad
sbb
cmp
dec
subl
fstps
inc
scas
repz
xchg
sbb
cltd
xchg
call
movsb
sbb
mov
adc
and
jmp
rol
cs
xor
inc
or
mov
aas
test
fidivrl
je
shrb
movb
xor
outsb
mov
mov
add
cmpl
andb
aad
es
pop
js
mov
xchg
and
add
mov
insl
xor
dec
or
lahf
mov
stc
pop
mov
lret
shl
mov
add
jmp
add
mov
pop
add
xchg
pop
sub
lds
cmp
cmp
outsb
nop
outsb
es
test
fnsave
test
xchg
mov
loop
inc
xchg
loopne
pop
scas
mov
mov
lods
out
xchg
xchg
adcb
cmp
jp
mov
mov
push
in
mov
mov
hlt
mov
fs
insb
div
dec
adc
shl
in
mov
rcr
mov
insb
stos
test
jae
dec
fsubs
add
or
xor
xor
or
mov
xchg
dec
test
ja
pop
jne
popf
enter
mov
or
addr16
fwait
cmp
cli
push
fnstenv
jne
leave
add
out
lods
xor
jns
mov
xchg
fcomi
push
mov
mov
rorl
lods
jbe
sbb
add
cmp
dec
push
xchg
mov
mov
dec
pop
cli
and
movsl
movsb
fldenv
bound
push
dec
enter
imul
xchg
and
push
add
push
imul
ret
cmp
and
xchg
insb
xor
out
jle
icebp
test
insb
inc
adc
jae
xor
pop
ret
mov
inc
shll
adc
xorl
std
fildl
or
adc
push
dec
in
xchg
push
lea
imul
lds
or
mov
or
leave
stc
fucom
hlt
in
mov
arpl
mov
sbb
push
aaa
dec
in
cmpsl
or
fmull
int3
sub
pop
and
jl
xor
xchg
add
scas
les
and
mov
movsb
pop
inc
lds
mov
jge
inc
in
and
enter
daa
mov
mov
jno
sub
jecxz
repnz
mov
adc
xchg
cmp
fildl
test
pop
or
cmpsb
imul
inc
stos
sahf
js
mov
pop
scas
jg
addb
outsl
nop
sub
popf
cmp
sub
cmp
adcb
fwait
add
popa
mov
int
jnp
dec
push
fldcw
aam
out
and
fcompl
or
sub
sub
mov
js
ret
jg
add
mov
push
sbb
mov
sbb
push
movsb
test
rcr
jne
add
sbb
add
mov
pop
sbbl
sahf
mov
dec
hlt
mov
ret
pushf
pop
inc
stc
lock
xchg
fs
enter
ljmp
std
dec
mov
and
outsl
sbb
xor
or
into
jo
gs
in
pop
jl
pusha
adc
cmp
imul
in
cld
add
fsubl
inc
sti
sbb
jne
xchg
xlat
popf
leave
xchg
sub
add
ljmp
out
and
jmp
add
loopne
inc
inc
ja
iret
fxch
adc
fcomip
xor
hlt
xchg
fidivrs
call
and
ds
adc
jbe
pushf
fwait
inc
jmp
gs
repz
imul
mov
xor
jmp
xchg
sub
jecxz
inc
pushf
movb
cwtl
les
and
adcl
std
fstpt
cs
addb
inc
dec
dec
das
mov
dec
mov
ds
and
ficomps
sahf
add
je
dec
loopne
cmpsl
mov
cs
rol
dec
cld
js
test
inc
adc
mov
or
and
xor
mov
rolb
sub
xchg
pop
aam
push
jo
std
cmp
sub
cwtl
add
arpl
in
int
jae
mov
js
lods
movsl
and
mov
iret
sub
push
cmp
cwtl
mov
add
arpl
cmp
das
cmp
dec
jl
mov
xchg
jnp
dec
xchg
pop
shll
vmread
inc
stos
xchg
rcrl
add
push
add
xor
std
mov
xor
add
mov
movsl
or
test
pop
push
and
jge
lock
nop
sub
sbb
jecxz
jnp
lods
fwait
push
cmc
xchg
jne
or
mov
mov
mov
jns
mov
rcll
insb
popa
sub
sub
jle
sbb
leave
jp
lods
out
mov
or
mov
std
adc
or
lods
add
pop
fisttps
jmp
jne
or
mov
add
into
out
inc
mov
inc
fs
xchg
lret
cmp
repz
push
sbb
jnp
pop
hlt
jle
jb
push
subps
iret
popl
ret
and
inc
ficomps
jae
imul
imulb
xchg
push
jecxz
imul
test
mov
ret
cmpsb
vpcmpeqd
jbe
popa
mov
pop
inc
adc
jo
sub
cmp
mov
inc
push
sub
sbb
scas
int
or
push
dec
add
jae
int3
adc
sub
inc
mov
ret
push
sub
jmp
jmp
movsb
out
mov
jbe
cmp
or
daa
enter
daa
mov
push
or
mov
dec
jg
stc
adc
fnstcw
and
das
xchg
push
scas
mov
sub
xchg
inc
lds
cmpsb
out
int3
pop
pop
imul
pop
in
push
mov
loope
lret
fcmovnu
movsl
cmp
stos
ds
jmp
inc
shlb
adc
ss
pop
hlt
add
out
jp
mov
call
int
outsl
sub
pop
mov
push
push
push
pop
inc
dec
fdivrl
and
mov
addr16
pop
in
jg
cmp
mov
xor
mov
sub
mov
push
cmpsl
inc
push
fdivs
test
neg
nop
mov
shll
mov
lods
ficomps
sbbb
dec
adc
xor
popa
or
das
mov
mov
ljmp
xor
jle
in
inc
mov
jno
cli
mov
xor
or
push
pusha
gs
cmp
mov
mov
ret
inc
adc
add
mov
add
cld
data16
stos
fstpl
mov
lods
xlat
fsub
in
lock
push
jmp
sti
lods
stos
dec
decb
dec
cmpsl
aad
stc
push
nop
jl
sub
out
inc
mov
flds
xor
jecxz
adc
add
jle
mov
jno
call
mov
test
push
add
mov
aaa
inc
sbb
test
jb
test
je
fcompl
movb
out
cwtl
jg
xchg
mov
push
mov
sub
lock
jmp
cs
xchg
mov
mov
adc
lock
imul
mov
sub
jnp
mul
or
insl
gs
inc
inc
out
mov
sub
cmpsl
cltd
ja
mov
add
mov
imul
adc
cmp
pop
inc
lods
pop
rclb
sub
add
sub
mov
mov
jle
mov
sahf
adc
xchg
or
push
ljmp
lret
lods
adc
mov
repnz
xchg
and
xchg
push
adc
ss
divl
add
sarl
mov
push
mov
dec
jecxz
test
mov
sub
inc
rorl
push
adc
out
push
arpl
add
ljmp
stc
sbb
xor
mov
out
xchg
sub
pop
push
or
ja
cmp
dec
cmpl
mov
scas
or
scas
xchg
pop
insb
and
mov
in
out
push
sub
pop
push
jns
pop
cmpsb
in
dec
pop
xchg
jns
xchg
pop
dec
pusha
or
cmp
sub
mov
jecxz
mov
insb
ja
dec
and
movsl
in
lret
push
or
lods
pop
push
jmp
mov
andl
push
popf
push
daa
and
jl
xchg
insl
into
jmp
or
bnd
scas
or
call
xchg
ljmp
ret
ss
and
test
jae
xchg
xchg
orl
push
bound
jb
dec
in
xchg
xchg
add
sbb
add
imul
scas
pop
mov
fadd
xchg
push
mov
mov
cmp
scas
push
mov
out
adc
adcl
lret
inc
or
dec
jge
sbb
aaa
int3
or
or
sub
jnp
xorl
fsubp
out
mov
jo
inc
mov
subb
push
jno
movsb
jb
sbb
in
and
jl
in
icebp
push
outsb
enter
daa
mov
test
push
jl
cmpsl
push
dec
push
pop
adc
sbb
push
push
subl
push
mov
dec
inc
push
aad
cmpsb
jno
jmp
xchg
mov
js
es
sub
cmp
loope
dec
mov
inc
mov
sbb
test
out
add
add
mov
jno
add
sarl
push
hlt
and
push
insl
mov
pop
and
aaa
lcall
push
fsubl
stc
icebp
sub
mov
test
test
clc
xchg
push
jg
ja
mov
dec
sub
mov
test
push
stos
push
sbb
jmp
std
negl
sub
sar
mov
sbb
add
xor
sub
add
aam
pop
mov
fs
adc
mov
mov
ss
mov
inc
lret
cli
aad
outsl
xor
inc
cmp
dec
nop
or
and
mov
loopne
mov
inc
adc
into
lock
int3
nop
add
xchg
cmp
int
xlat
sbb
xor
sarb
sub
mov
jns
notl
sahf
sub
fnstcw
out
lock
lea
call
fs
and
aas
adc
ret
fnstcw
cs
mov
inc
lahf
mov
aas
xchg
jb
test
dec
and
je
loope
jecxz
dec
mov
add
stos
arpl
mov
cmp
negb
sbb
pop
mov
add
lock
popf
shrl
jb
push
mov
mov
jo
mulb
nop
insl
in
popf
dec
inc
inc
aad
mov
xlat
icebp
jle
cld
into
bound
lret
pop
mov
les
push
inc
pop
bound
shr
pop
push
sub
sbb
aam
pop
adc
sbb
xor
frstor
fisubrs
xchg
dec
pop
jne
lahf
or
popa
sahf
jbe
lods
jnp
xchg
mov
adc
scas
cmp
out
or
xchg
add
imul
cmp
mov
scas
rcll
pop
or
loope
test
out
add
sbb
and
pop
cld
rorl
out
jno
scas
add
xchg
dec
aaa
xchg
int
decb
and
std
mov
stos
es
mov
leave
mov
ja
insb
inc
dec
jbe
das
inc
dec
or
or
xchg
xchg
fwait
movb
ret
jne
mov
xor
bound
cmpsl
jns
mov
in
mov
push
mov
sub
aas
cltd
push
or
adc
sbb
mov
aam
int
jns
push
mov
pushf
xchg
dec
push
xchg
push
in
repz
cltd
fisttps
insb
xchg
jg
fucomi
testl
adc
repz
popf
pop
mov
mov
jl
and
pop
jnp
sbb
push
inc
push
popf
data16
lds
or
es
in
inc
hlt
leave
cltd
jae
add
les
mov
xchg
push
jle
xchg
push
mov
imul
scas
push
fadd
jecxz
pop
shrb
repnz
push
into
inc
jl
fstps
jge
sbb
sbb
pop
mov
xchg
or
add
xchg
int3
jmp
inc
pop
mov
inc
fimuls
loopne
jo
jg
scas
popa
push
jmp
cmp
notl
std
int
push
mov
xor
in
fcoms
loopne
mov
mov
jno
fldenv
jl
sarl
dec
xlat
jl
push
lahf
cwtd
movsl
pushf
jne
and
test
jle
push
les
inc
jecxz
shlb
nop
xchg
js
cmp
pop
imul
push
inc
sub
test
outsb
ja
sarb
inc
xlat
adc
fildl
inc
or
in
sbb
mov
push
pop
xor
push
push
pop
dec
int
dec
stc
sub
mov
lcall
test
rcr
shrl
xlat
pusha
outsb
mov
adc
adcb
fnstsw
mov
mov
xchg
mov
mov
lret
fs
mov
mov
es
mov
negl
enter
pop
rcll
sbb
fwait
jle
xchg
out
cmc
pop
sub
pop
orb
push
stc
adc
into
xchg
adc
adc
mov
cmp
pushf
pop
push
out
cltd
mov
add
scas
cmp
adc
stos
into
ja
frstor
lea
loopne
sahf
or
xorl
repz
out
sarl
xchg
add
call
fsts
sbb
or
sub
cs
sub
or
das
decb
adc
addr16
xor
std
jb
inc
mov
sbb
stc
jns
repz
arpl
ja
call
mov
mov
adc
scas
push
pushf
pushf
lcall
sbb
pushf
inc
daa
push
loop
mov
add
sub
dec
dec
lcall
jecxz
cmp
lea
std
scas
shll
cmc
stos
call
mov
rorb
xor
dec
mov
popa
mov
push
f2xm1
push
out
das
push
call
xor
inc
arpl
shll
fcomi
addr16
insl
int3
out
lcall
stos
stos
mov
push
stos
add
lret
mov
adc
nop
or
and
add
sub
sub
aad
aam
and
ret
stos
lret
mov
jg
int3
roll
adc
jbe
mov
ljmp
jb
out
mov
xchg
stos
test
mov
cmp
clc
lahf
lgs
rcrb
fsub
mov
push
js
jmp
test
iret
mov
loopne
pop
sbb
sarl
loope
pop
cmpsl
and
fs
daa
out
aam
pop
add
mov
clc
mov
or
dec
mov
xchg
sbb
pop
test
stc
dec
imul
mov
gs
and
sub
leave
bound
mov
in
dec
inc
xchg
pop
cmpl
es
testb
add
addr16
insl
jp
ds
mov
pop
adc
mov
arpl
pop
cmpsl
in
sub
mov
fildll
sbb
out
and
mov
jbe
sub
inc
sahf
cmp
hlt
adc
fwait
cmpsb
mov
loope
xlat
jnp
movsl
sbb
push
in
fcoml
mov
sbb
ret
or
inc
decb
or
ss
add
inc
pusha
loopne
fidivl
push
sbb
aaa
and
inc
push
sub
push
push
rol
movsb
mov
push
decl
hlt
sbb
jbe
call
popf
push
jge
pop
add
push
sbb
or
push
int3
sub
rcr
xor
xor
add
or
movsb
or
in
movsb
mov
push
or
jbe
pop
push
in
mov
jo
daa
mov
outsb
mov
push
push
jl
rol
dec
inc
xlat
mov
movsl
mov
xor
lahf
nop
in
sbb
imul
jb
insl
cmpsb
ja
ljmp
out
pop
stos
jecxz
push
pop
inc
loope
mov
sub
hlt
mov
ds
adc
mov
add
fiadds
add
xchg
nop
xor
das
in
int
adc
rclb
and
repz
fs
fdivrl
sub
outsb
push
fiadds
sbb
cmp
std
mov
adc
int3
bound
and
in
push
mov
insl
cmp
popa
fidivrs
sbb
ror
loop
xchg
shrl
fisttps
jecxz
sahf
shrb
out
repnz
pop
scas
loop
or
mov
movlps
call
lods
cltd
xchg
mov
jae
cli
cmp
xor
in
or
mov
cmpsl
loopne
scas
inc
pop
clc
test
adc
and
adc
adc
sti
cmc
add
sahf
int
dec
and
cmp
sbb
cltd
pop
sub
dec
fistl
mov
xchg
sti
mov
clc
aaa
aad
mov
nop
or
mov
data16
pop
jg
jo
add
fiadds
ffreep
pop
push
in
or
call
pushf
inc
or
jmp
pop
inc
jg,pn
fwait
inc
scas
jmp
and
les
dec
adc
inc
je
in
jecxz
push
nop
mov
std
push
ss
cwtl
mov
push
mov
adc
jmp
dec
int3
mov
fstpt
xchg
pushf
xchg
mov
adc
lock
sbb
xor
idivl
into
mov
mov
imulb
or
dec
ss
xlat
cmpsl
mov
cli
mov
sub
dec
cld
and
add
mov
cltd
and
mov
out
leave
rclb
xor
ret
cmp
es
add
clc
dec
xor
leave
sbb
ljmp
xchg
lods
push
out
mov
pop
les
xchg
stc
pop
add
mull
unpcklps
outsb
add
shrl
cltd
sbb
and
xor
pop
dec
sbb
std
inc
sub
sbb
xchg
rorl
inc
cmp
push
lea
aaa
add
mov
mov
stc
or
shrl
mov
mov
inc
mov
aas
inc
shlb
pusha
dec
dec
pop
mov
inc
ja
or
rorl
fwait
and
and
or
out
out
dec
out
pop
jno
bound
jns
jns
pop
in
dec
adcl
or
mov
jp
addl
push
sbb
int3
adc
enter
daa
lahf
jg
xchg
sub
in
das
xchg
add
in
std
rorl
stc
mov
jle
pop
push
cmp
mov
mov
repnz
dec
lret
adc
inc
jle
cmp
add
adc
lahf
iret
or
ret
xor
sbb
jae
test
push
int3
mov
int3
push
fisttps
fisubl
setno
adc
scas
xor
arpl
icebp
adc
shl
mov
repnz
movsb
and
dec
mov
ret
arpl
sti
cwtl
inc
adc
dec
sbb
gs
aaa
or
add
or
sub
pop
adc
jns
rolb
xor
pop
cmp
scas
pop
lods
push
and
outsb
jecxz
jbe
dec
movsb
adc
mov
pop
cld
lahf
jbe
div
in
cmpsb
int
enter
daa
mov
in
inc
fidivrs
sbb
jl
cmpsl
pop
dec
mov
mov
movsl
stos
movsl
repz
nop
pop
lahf
scas
xor
cli
mov
test
push
inc
insl
inc
add
inc
cmpsb
cli
xchg
js
and
pop
jmp
jp
loope
sahf
cld
sub
dec
loopne
push
pop
cmpl
popf
xor
xchg
jle
popl
add
mov
jl
insl
outsl
jle
in
add
pushf
jnp
int
mov
sahf
pop
lahf
inc
addr16
adc
daa
sub
dec
add
outsb
imul
xchg
jg
inc
or
mov
mov
pusha
and
mov
jno
je
pop
fcomps
pusha
neg
outsl
outsl
lret
test
mov
popa
sbb
rcrl
into
push
xor
or
subl
adc
popa
out
lods
sbbb
xchg
sar
cli
outsb
lds
out
rolb
in
dec
or
jae
into
cmp
outsl
mul
hlt
shll
pop
mov
pshufw
sub
outsl
add
mov
sbb
pushf
cmp
xlat
fmuls
pop
mov
add
lods
xchg
ret
or
dec
retw
nop
call
bswap
inc
in
add
repz
std
inc
xchg
lods
shlb
inc
mov
pop
sahf
hlt
daa
pop
mov
xchg
jmp
lds
loop
mov
inc
lock
loope
arpl
mov
je
out
jecxz
fisubrs
xchg
jge
std
std
mov
imul
call
inc
xchg
orl
or
cmpsl
outsl
js
and
daa
mov
das
shl
or
loop
add
push
and
or
in
mov
insl
lcall
cmpsl
mov
cli
mov
add
cld
dec
mov
cld
mov
inc
and
cmp
cmp
mov
out
outsb
sub
and
ret
enter
mov
sbb
clc
mov
mov
popa
jecxz
lods
mov
push
sbb
xchg
inc
push
jg
push
jae
out
sti
shlb
test
popf
ret
mov
pop
pop
push
decb
jg
ds
dec
and
sbb
push
shl
lret
loop
std
aas
shrb
lcall
add
aam
ljmp
mov
xor
bnd
xchg
mov
cmp
outsb
adc
mov
jle
pop
popf
pop
cli
jle
ja
and
dec
dec
xchg
xchg
inc
push
mov
ficompl
stos
into
in
xchg
ss
inc
inc
mov
lds
jns
movsb
lahf
in
sahf
mov
mov
test
adc
adc
push
jp
js
mov
mov
pop
mov
movsl
sbb
scas
shrl
ret
fbld
out
in
fcoml
xchg
into
cmp
out
addb
subl
fs
push
js
or
and
push
add
fs
lods
lods
jle
inc
push
jb
ret
adc
push
iret
push
push
ret
rcrb
rolb
xchg
jae
loop
push
loopne
or
testl
aas
xchg
pop
rorl
imul
das
scas
xchg
sbb
lds
test
xor
repnz
jge
leave
ret
je,pt
scas
lds
arpl
adc
inc
adc
sarb
aaa
enter
insb
loope
add
cmp
lods
pushl
fidivs
in
jecxz
fdivl
mov
scas
pop
adc
lret
cmp
dec
test
test
or
in
lea
inc
daa
mov
mov
jno
lret
mov
in
mov
and
mov
dec
or
and
jle
push
int
jns
cmp
loope
imul
push
pop
jp,pn
js
divl
sub
jbe
out
lods
fldcw
jp
cmp
hlt
jns
adc
cmpsl
adc
insb
fwait
add
add
out
in
xor
xor
cmp
mov
adc
mov
aaa
pop
push
push
xchg
adc
mov
sub
cmp
outsb
int3
stos
bound
fs
jp
sub
inc
push
sahf
mov
lret
and
mov
push
mov
lock
xlat
push
clc
notl
jmp
lods
mov
mov
cmc
je
sub
jo
sub
mov
out
cmp
mov
mov
lods
xchg
lea
adc
xor
movsb
cmp
lret
sbb
pusha
xchg
into
and
shll
loopne
or
pop
ss
fsubr
sub
add
add
mov
sbb
xlat
xor
xlat
pop
cmp
sub
push
xor
push
pop
stos
in
insb
dec
cs
sbb
mov
jnp
nop
ret
add
mov
int
fstps
push
pinsrw
or
push
pop
into
xchg
jo
inc
lea
mov
pop
jo
adc
or
rcrb
icebp
in
inc
pop
and
lods
mov
aas
add
dec
dec
fildl
jecxz
xchg
push
xchg
mov
dec
cwtl
es
call
mov
bound
mov
out
push
pop
lds
mov
das
out
cli
fisubs
mov
and
fldt
push
jmp
mov
in
jne
sub
clc
cmpsl
mov
pushf
mov
fcmovbe
cld
cld
jp
push
lret
mov
pushf
std
and
and
cwtl
shlb
mov
sub
and
push
shrb
inc
adc
xchg
inc
cmp
ljmp
lods
lods
daa
inc
dec
mov
mov
adc
psrld
add
or
xchg
test
jns
mov
lret
roll
out
add
xchg
outsl
sbb
jns
cmp
or
stos
xor
jb
std
jmp
add
repnz
dec
push
fwait
xor
repz
std
mov
test
xchg
into
es
mov
in
ja
arpl
movsl
dec
or
pusha
cwtl
fwait
subb
dec
or
mov
lret
pop
out
bound
movsb
jns
xchg
jbe
inc
test
mov
adc
or
pop
jnp
adc
and
mov
dec
cmpsl
mov
xchg
dec
xchg
arpl
pusha
pop
adc
lds
cmp
jmp
cltd
iret
mov
jmp
mov
mov
mov
mov
loopne
push
insb
and
cmpl
jge
push
mov
fiadds
ret
in
xor
xchg
mov
pusha
sbb
push
ja
or
jb
add
icebp
cmp
leave
int
xchg
mov
mov
repz
mov
scas
negb
cmp
sbb
xchg
dec
mov
hlt
cli
inc
adc
adc
and
sbb
data16
jne
stos
out
gs
xchg
cmpsb
ficomps
stc
ficoms
and
adc
hlt
scas
fstl
mov
pop
lret
out
cmp
jne
movsb
sub
jl
clc
add
jbe
mov
je
mov
sub
ljmp
fisubrl
jl
int3
insl
dec
xchg
jle
push
sub
mov
mov
mov
lahf
in
int
push
mov
int3
dec
push
lods
inc
lods
inc
pop
lcall
push
in
js
pop
push
pop
addr16
fsubrl
jge
loope
loope
sub
jl
cmp
xor
adc
inc
int3
pop
popl
out
adcb
rcrl
jl
add
daa
aam
mov
mov
int
mov
aad
popf
jmp
lcall
adc
jge
leave
sub
cmp
test
xor
mov
mov
lahf
mov
and
push
mov
sahf
or
xchg
insb
lock
das
lret
out
shl
or
sbb
add
cmc
cmp
xor
push
subb
popa
loop
sub
pop
fs
cmp
sub
or
ret
xor
mov
sbb
cli
aam
xor
decb
iret
fidivs
add
jae
sub
pop
push
stos
out
mov
sub
dec
fistl
cmp
arpl
lcall
mov
sub
mov
sbb
sti
je
mov
dec
jns
or
jmp
imul
lea
adc
pushf
pop
mov
inc
mov
pop
out
pop
pushf
dec
push
or
cs
or
inc
movsb
cmp
aas
mov
testl
loop
jecxz
xchg
fadd
cltd
imul
mov
jge
mov
test
jmp
cmp
adc
xor
ror
das
int
push
mov
aas
jle
and
add
lahf
xor
divb
pop
insl
push
aad
cmpsl
mov
iret
mov
mov
dec
cld
movsl
cltd
lret
lret
dec
mov
std
and
jno
push
pop
std
push
sbb
sub
jne
ret
out
xchg
ret
mov
add
mov
fimuls
jle
xchg
sub
mov
les
fs
xor
push
mov
cltd
mov
stos
cmp
test
test
sbb
insb
sbb
lods
daa
rcll
loop
and
clc
out
pusha
jecxz
add
or
daa
repnz
or
xor
dec
and
inc
mov
jo
divl
sub
xor
adc
mov
aam
icebp
aaa
mov
pop
shlb
out
movsb
xchg
push
jmp
jns,pt
and
push
dec
fidivs
ret
or
pushf
fsubl
pop
mov
out
andb
pushl
mov
push
aam
dec
jne
sub
fstpl
xchg
sbb
jmp
fs
subl
leave
popf
push
lret
pop
mov
idivb
add
testl
pop
jnp
les
jle
stos
and
xlat
mov
iret
sub
ret
rcrb
jmp
sub
stc
jae
and
adc
jle
push
pop
stos
ja
jl
dec
xchg
or
sbb
xchg
in
cld
add
pop
lds
or
mov
mov
sub
and
xor
fistpll
adc
sbb
shlb
inc
ret
push
lahf
repz
outsl
int3
andb
pop
popf
lahf
jb
mov
outsl
in
outsl
jecxz
scas
mov
mov
movsb
mov
ficoms
outsl
in
jbe
xchg
enter
daa
mov
sbb
jno
and
dec
add
and
push
cmp
shlb
mov
and
push
jae
push
test
ja
jmp
cmpsb
adcl
xor
js
push
rcll
cmpsb
xor
push
or
fldt
push
add
sub
ds
int3
lea
and
aas
pusha
ror
sub
sbb
jno
mov
pushf
xor
sub
in
in
adcb
sub
jnp
or
pushf
fsubrl
int
sub
daa
outsb
xchg
lcall
lcall
mov
adc
sub
and
push
mov
push
fmuls
stc
notl
and
mov
aas
sbb
cmpsl
push
sahf
ret
cmc
add
outsl
adc
cmp
xor
data16
test
xchg
fs
jns
jnp
mov
push
dec
mov
mov
add
cli
pop
ss
xor
pop
cmp
add
into
out
fwait
gs
and
mov
pushf
adc
push
mov
dec
xor
repnz
inc
les
sbb
dec
fldl
xlat
xchg
sub
sub
cmp
in
inc
adc
sti
jbe
sar
fdivr
aad
sarb
jns
adc
sbb
inc
flds
sbb
jae
divb
repz
je
stos
lret
sub
sbb
test
mov
adc
adc
jmp
xchg
fwait
or
inc
lret
inc
inc
fisttpll
jb
sar
in
push
je
faddp
jecxz
sarb
std
repnz
cwtl
pushf
jnp
mov
test
mov
sub
js
and
pop
or
mov
loopne
lock
or
lods
jo
mov
testb
shr
mov
in
insl
dec
pop
and
cmpsl
mov
test
mov
cld
rclb
lret
mov
shll
pop
fsubl
sbb
dec
rcr
push
sbb
movsb
adc
aam
sbb
ret
jne
fldenv
inc
cmp
fisttpll
int3
das
xchg
lds
ljmp
push
lods
std
jmp
mov
out
sub
adc
ret
push
mov
adc
xchg
mov
jo
push
inc
xchg
jns
mov
lock
loop
xchg
out
jecxz
xchg
shr
mov
shrl
into
movsl
add
sub
test
pop
std
das
xor
add
xor
pop
test
mov
gs
ja
dec
sub
inc
sarl
or
inc
mov
loopne
sti
push
xchg
pop
mov
mov
sbb
out
adcl
jle
test
in
mov
mov
fildll
add
adc
and
and
mov
jnp
pop
mov
adc
adc
in
punpcklbw
sub
xchg
jno
hlt
jmp
das
repz
add
inc
fstpt
xor
idivb
insb
clc
movsb
fdivrs
jne
jle
int3
or
inc
out
adc
jno
iret
xchg
add
xchg
mov
mov
hlt
mov
sub
push
fadds
fmuls
push
out
fisubrl
lods
adcb
rolb
mov
repz
rorb
mov
repz
xlat
leave
sub
out
arpl
in
adc
push
imul
cli
pop
adc
add
or
add
aaa
enter
lret
pop
int3
or
pop
or
jmp
jo
cltd
cmp
cmp
push
movsb
aas
mov
push
xchg
sbb
xchg
in
inc
jmp
sub
cmp
cmpsl
shlb
add
jl
inc
jmp
push
icebp
inc
movsl
mov
and
and
inc
in
and
push
inc
into
inc
cmp
subl
fxam
xchg
pop
in
subb
je
xor
ja
ficoml
jns,pt
fists
std
imul
cmpb
push
add
das
mov
sub
mov
test
scas
int
dec
cli
sub
pop
jecxz
fwait
mov
outsb
push
pop
sbbl
outsb
cmc
jg
test
sahf
push
xorb
inc
mov
xchg
jbe
cmpsb
loope
mov
inc
add
push
xlat
cmp
mov
sbb
or
not
mov
rcrl
in
mov
mov
sahf
gs
mov
xor
lock
loop
hlt
lods
stc
pop
out
arpl
and
lret
ss
rolb
sbb
mov
lods
out
jno
cli
cmp
sbb
pop
lret
pop
daa
into
leave
ret
adc
loopne
imul
fistl
adc
mov
add
inc
in
or
nop
xchg
xlat
aam
mov
mov
lods
scas
and
js
aad
adc
nop
push
arpl
inc
and
mov
repz
jo
mov
adc
call
lcall
adc
movsb
icebp
jmp
or
sbb
mov
mov
fists
jb
push
jl
fs
je
das
pop
jecxz
push
faddp
lahf
and
mov
push
popa
cltd
mov
push
xchg
mov
addl
xchg
pop
scas
aam
mov
mov
ja
fwait
das
mov
jno
dec
test
mov
test
sarl
xchg
jnp
ss
aad
sbb
leave
stos
mov
pop
inc
add
sti
loope
lret
sub
mov
and
cmpsl
xchg
in
cmp
bound
fwait
movsl
sub
daa
pop
ja
add
mov
enter
mov
cmp
jbe
cld
xchg
add
sub
les
jecxz
push
lret
in
mov
pop
jae
push
jmp
pop
pxor
sti
add
dec
cltd
sub
dec
test
push
fwait
mov
test
mov
pop
repz
cmp
xchg
inc
rcrl
xchg
lcall
test
icebp
lret
out
es
test
add
notrack
sub
or
xchg
xor
sarb
mov
rclb
arpl
jbe
xor
adc
sub
inc
push
test
out
imul
lods
stc
sub
bound
cmp
addr16
jns
das
add
pop
xor
icebp
int3
push
mov
add
sub
cld
adc
add
push
pop
jnp
mov
test
adc
add
pusha
shrb
and
cmp
jmp
cli
cmpb
mov
xor
movsl
loope
push
je
pop
stos
inc
add
and
sub
jle,pt
loope
push
mov
adc
pop
loope
out
iret
ret
mov
inc
inc
and
jae
jno
push
fwait
repz
jecxz
or
cmpsl
push
sub
mov
mov
pop
scas
pop
aam
lds
pusha
mov
inc
jmp
leave
lahf
movsb
xchg
hlt
mov
and
iret
sbb
pop
movsb
or
sub
loopne
pop
xchg
icebp
pop
sti
aaa
js
fdivl
jo
fs
jp
imul
pop
in
cmp
shlb
punpckhwd
scas
in
sub
enter
daa
mov
arpl
inc
fwait
jge
dec
pop
ret
jl
cmp
dec
loopne
jmp
movsl
int
adc
cmc
lcall
sbb
push
or
cmpsb
mov
push
js
or
and
pop
push
inc
in
loope
push
shrl
js
cmp
jl
adc
fcom
cmp
adcb
sbb
xor
xor
push
mov
imul
int
push
mov
sbb
dec
lcall
add
jle
dec
sub
iret
cwtl
outsb
pop
pop
inc
test
xchg
test
mov
dec
jecxz
sbb
rolb
and
push
push
ret
cmp
ret
cs
notl
jmp
dec
mov
xor
mov
cmc
nop
ret
fmull
jb
pop
es
push
sbb
int
out
sbb
push
ss
out
lods
add
dec
mov
shl
arpl
xor
sahf
and
xchg
or
fsubs
jp
loopne
mov
pop
mov
dec
adc
mov
lds
push
add
push
push
sbb
ret
xlat
add
adc
sub
test
int
sbb
jmp
incb
aad
mov
fisttpl
fldl
xor
stc
les
sbb
dec
jo
xchg
jl
jno
dec
stos
fwait
call
sbb
pop
cmp
repnz
pushf
dec
or
jmp
dec
call
inc
fsub
inc
inc
ja
push
aas
jle
fwait
jb
adc
je
shll
leave
push
aaa
mov
cmpsb
sbbb
mov
mov
and
cmpl
xchg
sbb
pop
push
and
bound
scas
das
push
cmc
mov
lea
adc
rorl
xor
sbb
ljmp
ficompl
dec
cld
es
fwait
lret
xchg
in
mov
lds
add
pop
loop
rolb
aam
mov
es
jge
fstp
clc
mov
pushf
xchg
inc
mov
ljmp
push
lods
shl
fstpt
sub
mov
push
xchg
mov
add
sbb
test
xor
mov
and
dec
dec
subb
sub
pop
es
sbb
pop
rcrl
xchg
out
mov
add
pop
popf
incl
and
gs
ds
repz
xor
jns
mov
ret
mov
fstps
push
dec
ja
lcall
add
cld
or
jo
ds
push
fidivrl
jne
and
mov
mov
fsubl
xor
xchg
daa
or
sub
or
addr16
inc
jp
fdivs
shrl
aaa
dec
push
jae
in
dec
pusha
leave
loop
filds
pop
xchg
pop
mov
jne
lds
adcl
out
push
aam
in
mov
mov
das
stos
mov
adc
cmp
fildll
xchg
jnp
and
out
aad
sbb
popf
push
mov
inc
xchg
lahf
ret
pop
pop
adc
lock
jmp
pop
pop
push
or
pop
in
inc
fldpi
aad
xchg
pop
push
xchg
xadd
lahf
xlat
imul
mov
andb
test
repnz
enter
pop
lahf
hlt
es
arpl
add
sbbl
jo
adc
adcl
pop
adc
int3
inc
mov
sub
dec
fisubs
push
add
inc
outsl
scas
pop
sbb
test
xor
movsb
push
cli
xor
inc
pop
jbe
sub
in
adc
push
daa
mov
xchg
cmp
jno
xor
jl
add
dec
dec
shlb
sub
shll
nop
jb
lahf
imul
mov
or
sub
inc
pop
int3
cmpsb
or
enter
sub
pop
arpl
loope
adc
cmpsb
cmp
bound
mov
not
shlb
imul
decl
add
xchg
cs
ds
imul
and
mov
sub
fiadds
mov
xchg
adc
jg
inc
je
push
cmp
mov
stos
and
int
lds
ss
jle
push
notl
dec
xchg
inc
dec
dec
cmp
inc
pop
sahf
stos
pop
jae
push
pop
in
aaa
insl
jl
loop
mov
int
loop
pop
mov
sub
lods
ljmp
out
fstps
cli
mov
iret
mov
out
xor
mov
mov
divb
loopne
push
adc
adc
adc
leave
sub
adc
js
add
mov
sbb
mov
xlat
push
jb
sub
inc
mov
andl
orl
mov
sar
or
dec
cmc
inc
adc
dec
iret
fldcw
adc
sbb
imul
and
adc
cwtl
pop
repz
out
cmp
jo
pushf
hlt
inc
leave
jmp
dec
pop
cs
pop
inc
pop
push
inc
xchg
dec
aas
sbb
or
dec
push
bswap
je
lret
mov
fsubrs
mov
movsl
mov
std
out
fistpl
bound
mov
adc
cmp
fcmovnb
in
jbe
hlt
arpl
mov
push
xor
sub
mov
mov
sbb
pop
rcr
cli
out
jg
dec
insl
add
sbb
sbb
mov
or
jp
lret
push
test
and
fldl
pop
jns
sub
push
xchg
sub
aam
or
ret
and
loope
into
dec
insl
fldl
mov
ljmp
mov
call
mov
loopne
add
sub
xor
push
lods
out
push
nop
repz
dec
jmp
stos
ret
lea
shl
jmp
pop
pushl
stos
fmull
out
in
dec
scas
add
jns
hlt
jmp
xchg
mov
mov
loop
xor
xchg
mov
fwait
mov
pop
add
ja
jb
dec
add
mov
fwait
insl
loopne
push
jge
test
cmp
ss
and
mov
test
jb
xchg
pop
dec
mov
out
sub
bnd
adc
mov
ss
mov
ret
dec
add
stos
in
clc
xchg
pusha
or
xchg
ljmp
xchg
nop
sahf
lods
and
pop
out
mov
lods
mov
repnz
scas
stos
daa
xor
push
cmpsl
add
jnp
and
jns
cmp
insb
jecxz
js
fcmovne
movsb
sti
jecxz
rorl
stc
inc
push
ja
jae
shrl
or
inc
pop
mov
fimull
inc
xchg
sub
dec
xor
xchg
mov
xor
pslld
hlt
jno
sahf
arpl
in
inc
daa
mov
and
sub
popa
or
mov
add
push
or
fiadds
aam
lea
outsl
scas
cmp
and
or
movsb
loopne
stos
push
add
jbe
hlt
loop
notl
or
adc
aaa
daa
mov
adc
cmpsl
lahf
out
jno
jl
jl
movsb
jae
mov
adc
fistpl
cmp
sub
lahf
mov
xchg
test
mov
add
sbb
js
or
push
push
xor
js
cmp
out
mov
loop,pt
mov
mov
jl
fcoml
xorb
sbb
mov
add
mov
xor
cmp
jnp
cwtl
adcl
xchg
jle
aad
cmp
sbb
mov
aam
cmpsb
sub
mov
outsb
push
call
push
addb
outsb
jg
test
mov
push
scas
mov
aaa
and
mov
aad
cmp
cmp
lret
mov
jecxz
and
lods
mov
push
loopne
xor
dec
movsb
loop
and
jo
jecxz
jns
mov
push
adc
pop
lods
shll
lret
out
ror
cli
shll
jns
iret
and
xlat
or
iret
scas
into
jb
cmc
gs
aam
loopne
add
pop
lock
or
push
adc
fnstenv
data16
mov
cmp
and
xchg
cmp
sub
mov
mov
out
adcl
mov
jno
aas
das
out
in
xchg
dec
push
mov
inc
pop
subb
movsb
pop
les
repz
into
inc
lea
test
call
pop
ljmp
adc
fcompl
or
mov
push
sub
lods
xor
cmp
jb
ss
dec
leave
cmp
jecxz
jp
test
lods
std
mov
xor
mov
cmpsb
mov
xor
dec
and
cmc
fcomi
add
pop
xchg
cltd
mov
mov
sbb
sub
mov
es
ret
test
out
jmp
mov
fcoml
cmpsl
scas
into
es
in
call
lret
jne
aas
mov
in
mov
cwtl
test
shrb
movaps
aam
dec
ret
mov
pusha
es
mov
sahf
clc
daa
movsl
adc
sbb
fucomp
lods
test
xor
mov
xor
push
jl
or
or
xchg
add
xchg
test
xchg
push
push
movsl
mov
test
shrb
jns
sbb
out
mov
stos
lret
les
add
xchg
jns
incl
cmp
xor
call
dec
xchg
in
mov
pop
pop
dec
mov
into
ret
jg
inc
das
popf
daa
or
lock
and
jne
cmpsb
les
ljmp
lret
jns
xchg
dec
in
adc
fimuls
cmp
in
fwait
cmp
loop
jp
ljmp
daa
fcoms
dec
in
xor
add
and
inc
add
jg
imul
mov
xchg
pop
sub
out
ftst
popf
adc
push
es
xor
lret
pop
cld
and
or
movsb
mov
jle
fmuls
push
arpl
adc
push
mov
iret
add
ret
cmpsl
pop
jg
fiaddl
das
jae
out
push
in
out
lret
push
xlat
add
xchg
mov
scas
inc
imul
cli
lds
adc
sarb
mov
leave
add
sbb
mov
sbb
inc
sub
jge
dec
in
out
mov
or
enter
jp
int3
sbb
bound
pop
push
fsubrp
psubw
cmp
scas
pop
mov
and
ret
cs
push
movsb
imul
jbe
xor
fiadds
or
cmp
scas
push
jno
in
adc
and
jns
push
jge
pop
movsl
loop
mov
lahf
cmpsl
cld
push
push
xchg
arpl
test
outsb
sbb
cmpsb
adc
movsb
js
out
pop
loope
mov
push
pop
loope
pop
xchg
sub
call
xor
add
add
cmp
orb
stos
add
das
and
mov
mov
sbbl
sub
arpl
lcall
push
sub
dec
inc
outsb
sbbl
mov
mov
test
mov
js
and
loopne
cmp
hlt
and
not
in
or
sarl
mov
hlt
sahf
sbb
mov
xor
outsl
outsl
outsl
sbb
loop
repz
outsb
fildll
ss
addl
xchg
out
push
lods
cli
push
pusha
imul
lahf
adc
jg
into
push
pop
scas
gs
insl
loopne
enter
pop
cltd
adc
add
xchg
add
hlt
or
je
mov
sub
mov
pop
jo
sti
loope
mov
lods
insb
xchg
outsl
nop
shlb
inc
outsb
pop
fstps
hlt
data16
call
jge
leave
call
xchg
clc
std
pop
push
insb
mov
pushf
dec
cmp
push
xchg
pop
cs
cmp
insl
movsl
int3
inc
enter
pop
loop
jb
xchg
pusha
dec
inc
push
xchg
je
mov
loope
stos
or
std
cwtl
inc
ror
loopne
cmp
or
addl
mov
fistpl
loope
pop
cmp
in
mov
shl
jecxz
shrl
pop
pop
mov
mov
mov
outsl
sarl
adc
add
adc
or
andl
mov
sbb
cmpsl
bound
in
mov
outsb
dec
adc
adc
pop
mov
out
sti
insb
fldcw
ja
pop
aam
dec
es
inc
hlt
add
aam
out
fstl
aaa
clc
int
xchg
add
movsb
ljmp
jmp
adc
xor
xchg
pop
gs
js
pop
push
push
jno
packssdw
scas
cltd
or
and
xor
push
push
lret
xchg
dec
mov
out
push
push
xchg
call
dec
rcrl
aad
stos
mov
mov
add
scas
add
mov
or
stos
jb
xchg
popf
stc
mov
int3
mov
mov
shlb
ja
scas
fimull
add
mov
ss
lret
ss
push
ret
push
shll
cld
inc
mov
mov
iret
bound
xchg
jns
cli
shl
xor
inc
xchg
sub
fwait
inc
sub
call
and
adc
sbb
shlb
subb
xchg
mov
xchg
nop
dec
jmp
or
out
insb
mov
cmp
or
jo
jae
or
dec
gs
seta
jnp
push
jle
mov
adc
cs
fmull
pop
mov
add
fidivl
inc
push
push
cmpsl
inc
xor
iret
shrl
fisubrl
data16
mov
add
stos
int
lds
ret
and
xchg
cwtl
scas
leave
jnp
imul
call
pop
inc
sub
ss
sbb
or
add
in
int3
add
sub
cwtl
pop
fimuls
xor
scas
testb
cmp
std
repnz
notb
and
lahf
in
lds
enter
daa
scas
out
cmpsb
cmp
xorb
cmp
jnp
push
pusha
mov
movsl
jmp
jno
lahf
addr16
push
xorl
dec
push
cmp
sub
xchg
sub
pop
retw
push
js
pop
loope
and
loope
ss
sub
mov
cmp
inc
sub
adc
inc
push
jl
lcall
sbb
xor
xor
add
ja
push
int
vmovaps
jb
lcall
fsubrl
jno
sub
inc
inc
test
jae
jg
jnp
mov
das
push
mov
mov
sub
mov
pop
ret
cmp
scas
dec
or
lret
dec
rcll
mov
sbb
cmp
lods
lea
dec
push
outsl
dec
in
dec
loop
hlt
stc
repnz
stc
jnp
adc
xor
lods
lahf
in
mov
inc
out
push
mov
cmp
xor
lds
test
fdiv
lahf
into
cmp
int3
loopne
mov
or
jp
cmp
loop
adc
cltd
mov
dec
push
les
inc
popa
sbb
scas
mov
ja
movl
in
les
sar
mov
ror
or
int
add
fwait
in
dec
adc
fiadds
repz
jp
mov
in
enter
push
pop
or
pushf
cmc
repnz
or
fcomip
inc
hlt
pop
and
shll
jb
sub
dec
mov
sbb
cwtl
jecxz
out
scas
jmp
movsb
cwtl
decb
aam
std
adc
adcl
subl
jle
dec
lock
das
out
lods
mov
inc
inc
cmp
ror
fwait
leave
testb
insl
mov
push
lods
cmpsl
lods
adc
mov
xchg
sbb
rclb
mov
sub
mov
jle
ror
cmpsb
mov
aam
jmp
mov
fnstsw
push
clc
popf
mov
xchg
aas
data16
ljmp
push
lods
jg
dec
mov
mov
xchg
or
cmp
add
adc
test
xlat
mov
rcrl
clc
dec
push
xchg
or
xchg
les
adc
popa
test
stos
test
push
addb
movsl
sub
rcll
mov
xor
mov
test
loopne
xor
iret
ljmp
lea
icebp
dec
fidivrl
xchg
inc
pop
add
or
rclb
xchg
jne
mov
mov
out
out
mov
push
popf
in
dec
jle
jl
mov
cmp
or
cmpsl
imul
int
mov
flds
jge
mov
push
orb
inc
in
pop
std
pusha
xor
add
xchg
arpl
mov
iret
fsub
pop
je
popf
arpl
lods
mov
scas
ja
stos
add
and
inc
dec
jnp
mov
jle
xchg
add
jne
adc
or
leave
ret
int3
pop
in
rcr
inc
js
lret
jae
fimuls
or
dec
idivb
inc
aad
sub
popa
sub
dec
push
aas
imul
mov
shl
addr16
in
cmp
repnz
hlt
push
push
mov
int3
mov
jge
add
sbb
aaa
jg
sbb
negl
add
fcmove
out
lods
or
fisubrs
dec
pop
xor
in
orl
cmc
pop
xor
pushf
xor
movsb
xorl
jbe
or
in
lods
dec
and
add
daa
lods
xchg
lahf
cmp
xor
cmp
jl
jge
dec
or
push
inc
jno
movsl
lock
data16
in
jnp
cmp
aam
jmp
pop
jp
xchg
ds
cmpsb
sbb
lcall
dec
out
js
pop
pop
pop
push
cmp
test
mov
cmp
mov
ds
arpl
adc
pop
and
stc
xor
scas
push
add
fcmovnu
std
add
daa
mov
add
xor
cmp
int
push
sub
ficoms
pop
xchg
daa
rcrb
xchg
cmpsl
inc
add
mov
in
test
cmp
jg
jmp
mov
jmp
inc
mov
mov
push
rcll
cmp
push
testl
mov
test
sbb
jp
sahf
aaa
notl
cmc
jae
xor
out
cmp
jb
test
insb
inc
adc
lcall
daa
jecxz
mov
iret
cli
insb
idivb
push
mov
or
jl
sbb
imul
inc
loopne
mov
pop
dec
mov
hlt
imul
popa
inc
pop
add
sbb
ljmp
sub
lods
xchg
mov
das
leave
adc
aas
bound
aad
iret
adc
dec
jno
fiadds
sbb
repnz
jge
jbe
push
xchg
dec
testl
xchg
mov
inc
adc
xor
pushf
mov
lock
sarb
jnp
xchg
inc
incb
aas
cltd
aas
fwait
jb
lock
je
hlt
jecxz
add
mov
addl
cwtl
mov
inc
pop
mov
xchg
fadds
in
and
jge
lcall
repnz
mov
aad
lock
bound
mov
test
cltd
rcll
add
testb
fs
lcall
mov
imul
pop
lret
ret
mov
or
je
dec
mov
cmc
outsl
enter
out
test
ret
pop
stc
jo
fimull
cmp
fstps
xchg
jle
movsb
ljmp
mov
jnp
mov
push
lds
or
scas
enter
popa
cltd
jbe
filds
xchg
mov
dec
test
adc
enter
dec
shll
stos
orb
js
icebp
add
in
jmp
in
add
lea
sub
mov
mov
rclb
inc
pop
dec
xchg
mov
dec
int
mov
insl
pop
or
xchg
fwait
sub
insl
jne
fdivs
pushf
icebp
jle
cmpl
jns
mov
in
in
xchg
lret
test
mov
and
cli
jg
or
mov
addr16
sarl
or
mov
lea
jle
in
dec
clc
sub
adc
imul
ss
psubsw
and
fwait
out
out
int3
popf
mov
push
out
cvtpi2ps
scas
xchg
insb
in
jo
xchg
shll
add
inc
push
adc
insb
or
int
ret
mov
and
fildl
mov
mov
sub
jno
push
push
incb
xchg
ret
sbb
adc
je
subl
or
test
cmp
cld
leave
imul
arpl
fistpll
mov
sbb
into
ss
ds
lcall
and
ret
popa
cmp
rcl
cld
xor
inc
xchg
scas
mov
jo
mov
sub
push
or
dec
push
mov
mov
pop
enter
daa
lods
mov
test
sbb
jp
push
push
es
movsl
negl
cmp
xchg
aam
lahf
add
pop
push
or
test
iret
je
inc
es
cmpsb
fwait
push
lcall
mov
loope
add
and
fnstcw
mov
insl
jnp
stos
add
sar
pop
mov
add
dec
sbb
in
outsl
add
mov
leave
std
movsb
imul
test
pop
adc
cli
lcall
adc
sub
jne
test
pop
xor
mov
aam
lods
xlat
push
mov
mov
xor
shrb
aam
stos
cmp
and
fildll
inc
add
sarl
dec
mov
icebp
dec
sahf
fidivrl
test
cmp
sbb
decb
sbb
mov
fdivr
pusha
lea
cmpxchg
adc
mov
jmp
insl
movsl
xchg
mov
icebp
cli
lahf
dec
add
sub
bound
cli
jb
mov
xor
decb
into
sbb
cmp
popf
mov
insb
out
sbb
and
fsubrl
mov
and
jge
fdivrl
rcrb
and
lea
mov
lcall
push
xchg
aad
int3
adc
rorb
fcompp
aas
test
sbb
xchg
push
test
into
call
adc
pop
outsb
jg
adc
cld
pushf
dec
fiadds
jmp
pop
and
push
inc
add
mov
aas
cmp
push
dec
movsl
inc
mov
jecxz
arpl
mov
jle
sub
push
cwtl
je
repz
mov
mov
pop
add
inc
inc
fldt
sbb
or
fcomi
hlt
scas
dec
das
movsb
out
mov
scas
imul
and
pop
outsl
shll
and
into
flds
dec
cli
scas
in
stos
mov
inc
aam
cld
sub
xchg
lret
xor
push
mov
jns
and
in
mov
adc
shlb
sub
aam
and
es
and
ffree
lret
adc
mov
popa
loopne
shrd
mov
decl
xchg
push
call
stos
jmp
cltd
lods
xor
mov
hlt
rorb
jl
test
fmulp
xchg
xor
shll
xchg
jb
xchg
out
fstpt
add
add
jo
cmp
xor
add
mov
mov
mov
aad
dec
mov
add
dec
inc
mov
mov
fwait
pop
jbe
push
lods
mov
int3
mov
jne
out
jnp
ja
push
cmp
jns
or
in
rolb
sbb
cmp
loope
cltd
or
add
addr16
fistpll
jg
mov
movsl
in
mov
in
or
dec
jo
xchg
in
ss
push
xchg
or
jg
jns
cmpsb
xchg
xchg
mov
sbb
es
inc
push
sub
cli
adc
insb
push
sbb
inc
xchg
movsl
jle
and
outsb
adc
dec
ret
push
pop
pop
inc
outsl
inc
mov
push
lock
mov
push
rcrl
fcmovb
dec
or
mov
fcomp
scas
aam
aam
inc
outsl
loope
es
adc
mov
leave
loopne
loopne
call
mov
jge
dec
aad
rorb
jl
std
and
or
ret
mov
int3
lds
in
fidivs
xor
mov
pop
nop
and
int
cmp
mov
movsb
xchg
mov
int3
jbe
scas
inc
in
jp
nop
enter
daa
stos
imul
jl
xor
dec
jmp
lret
push
movsl
xchg
andl
and
arpl
sbb
xlat
mov
push
lcall
cmpsb
push
xor
mov
daa
rclb
inc
push
loope
fwait
sbb
mov
mov
ds
imul
add
mov
xor
aad
push
sbb
push
add
outsl
enter
mov
int
shrb
test
pop
xchg
push
sub
push
and
fsubrl
jno
sub
out
outsb
or
loop
orb
ja
add
leave
mov
out
fwait
in
clc
and
jmp
push
xlat
xchg
xlat
cmp
loopne
mov
lret
fcmovnb
out
scas
mov
sub
sahf
jge
push
cmc
add
jl
jmp
push
loop
xor
stc
pop
xor
fs
ss
je
lods
push
pop
lahf
mov
push
out
jno
cli
rcrb
add
sub
jmp
in
into
loope
enter
sub
cmp
xchg
adc
jno
imul
lea
stc
aam
pop
loop
sbb
pusha
cli
sbb
int3
jmp
sub
cltd
lods
mov
add
add
dec
aad
sub
cli
dec
das
or
inc
mov
add
les
shl
xchg
roll
lea
mov
mov
pop
and
adc
push
pushf
notb
add
ficompl
xchg
scas
inc
xor
xor
xlat
lods
adc
sbb
sbb
test
test
xor
cmp
mov
mov
shrl
xor
das
pop
lds
lods
adc
mov
stc
and
icebp
dec
cvttps2pi
or
mov
gs
push
and
test
mov
mov
insl
outsb
je
dec
cmc
push
push
cmpsl
stos
rcll
aas
insb
out
icebp
pop
out
cld
push
and
mov
sbb
and
jg
scas
pop
xor
rolb
shrl
push
inc
mov
ret
jl
lods
es
adc
out
popl
clc
dec
rclb
push
std
popa
notl
lods
shr
mov
and
pop
push
ret
add
movntq
cltd
in
addl
ljmp
cmp
dec
xchg
into
pop
sbb
jo
sar
sbb
stos
jbe
fsubrp
ds
cs
sbb
fdivrp
sahf
xor
or
in
inc
xor
mov
ss
dec
sarl
mov
push
mov
sbb
inc
and
inc
fwait
xchg
push
dec
jbe
jne
aas
mov
fisubrl
bound
add
in
adc
das
mov
jne
sub
aam
pop
or
jp
out
mov
rcll
jg
mov
dec
push
inc
lods
in
cmp
pusha
push
xchg
pushf
fistps
and
in
jo
add
jl
out
inc
int3
popf
fsubs
push
insb
int3
push
stos
fldenv
insb
mov
sub
jle
fidivl
movb
adc
int
ret
adc
out
pop
inc
cltd
pop
sub
push
mov
sbb
mov
cmp
fidivrl
adcb
jnp
imul
scas
aaa
pop
jp
int3
add
mov
fiadds
hlt
xor
arpl
popf
pop
jge
enter
fld
aaa
mov
test
add
idiv
int3
mov
pop
pop
jae
or
xor
std
xchg
scas
jb
andl
shrl
pop
xor
jbe
xor
enter
daa
stos
lcall
add
add
mov
push
in
gs
add
xchg
push
mov
imull
gs
loopne
inc
fidivs
cmpsb
mov
dec
xor
jmp
repz
push
sub
add
sub
xor
ds
mov
mov
mov
sub
push
sbb
xchg
shll
test
adcl
sub
mov
adc
lcall
mov
sub
loop
jo
pop
test
int3
dec
subb
push
push
push
sub
out
xor
ficoms
inc
push
mov
fcomps
mov
push
shrl
mov
sub
and
sub
mov
jbe
lret
loop
add
fs
rcrl
cmp
rorb
addl
add
sbb
cmp
rorl
push
mov
inc
jg
ror
mov
adc
out
lock
add
incl
fwait
loope
xlat
or
pop
sub
cmp
in
jo
mov
dec
std
idiv
pop
rolb
nop
pop
mov
dec
mov
xor
lods
add
sahf
lcall
repz
xchg
xchg
into
lcall
pop
icebp
adc
in
pop
aam
rclb
sbb
sub
mov
mov
sub
rdtsc
inc
dec
or
jb
jle
dec
xchg
movsl
mov
jecxz
out
cli
mov
sbb
mov
scas
push
mov
dec
sub
dec
cmpsb
lret
mov
or
imul
orl
bound
stos
mov
push
aad
notb
insl
push
pop
xor
lock
cmp
jb
push
icebp
out
sbb
lods
lret
mov
mov
scas
and
sbb
loop
push
pop
movsl
rcrb
xchg
imulb
dec
fwait
inc
aam
lods
dec
ret
or
arpl
in
clc
mov
xchg
cmp
ljmp
mov
mov
inc
repnz
xchg
cmovbe
test
test
pushf
jge
in
stos
dec
mov
xor
loope
mov
push
test
stos
gs
pop
out
mov
xchg
ss
sar
xor
into
or
xchg
push
pushf
xor
adc
mov
fistl
mov
jns
mov
dec
cmpsb
and
inc
mov
push
or
push
repnz
jne
mov
mov
push
adc
cmp
or
in
stos
or
inc
dec
shrl
scas
or
pop
add
inc
add
mov
lret
adc
dec
ss
movsl
in
movsb
shlb
inc
ret
fistpll
jecxz
xchg
scas
shrb
jns
sbb
cmp
cli
popf
incl
aad
mov
lock
stos
dec
add
hlt
imul
jnp
andb
or
add
iret
cmp
out
pop
leave
inc
adc
jae
sahf
push
jbe
mov
xor
xchg
dec
inc
inc
rcrl
arpl
imul
repz
scas
lcall
rcrb
inc
imul
into
add
hlt
jle
mov
inc
cmp
dec
jge
daa
ja
dec
cmp
repz
stc
mov
int3
fwait
adc
fidivrs
cmp
jo
add
xor
cmp
xor
mov
and
mov
daa
test
aad
jno
xchg
jl
ss
movl
ja
or
pop
and
jns
popa
mov
clc
test
xor
sub
lock
sub
js
inc
xchg
pop
pop
dec
mov
or
das
sub
and
std
xlat
inc
inc
adc
mov
cmp
jne
xor
mov
sub
or
xor
inc
outsl
inc
xor
int
test
sub
ret
xor
lcall
faddl
out
outsb
shl
imul
or
fwait
mov
ficompl
xor
or
frstor
sbb
push
lods
testl
roll
mov
popf
sbb
out
outsb
sahf
ret
rorl
cmc
adc
mov
test
or
test
fs
test
loopne
std
ss
xor
and
mov
out
sbb
cli
cmp
out
aas
fisttps
add
inc
gs
test
pop
leave
mov
jge
arpl
rcll
mov
add
pop
shll
xchg
mov
xchg
or
add
dec
xor
sub
push
mov
in
fldt
sti
sti
mov
adc
loop
int
in
sbb
loopne
ljmp
lret
xchg
cs
xchg
push
pcmpgtb
repz
push
nop
and
xchg
sbb
jae
adc
jmp
fsubs
cs
imul
push
loope
adc
adc
mov
and
lods
jecxz
sbb
mov
in
dec
cwtl
movsl
es
mov
xchg
mov
xchg
dec
xchg
dec
outsb
fstpt
push
aad
or
cld
mov
aam
lock
xchg
push
mov
rcll
and
pop
rcll
add
xchg
or
dec
jmp
dec
cmpsl
test
int
movsl
cld
sbb
lds
cld
test
fdivr
mov
aaa
repz
mov
add
jno
not
in
shll
sub
nop
aam
out
xchg
ret
lcall
fnstsw
xor
jp
test
popa
and
int
mov
push
jbe
push
jns
jns
movsl
mov
dec
cltd
push
sub
mov
jge
push
test
adc
or
xchg
pop
cmp
xchg
insl
jae
test
adc
stos
push
daa
adc
add
push
repnz
xor
or
xchg
xor
shll
test
xor
icebp
ja
rcrb
cltd
fists
push
jl
or
inc
mov
push
xchg
mov
lea
sbb
jns
loop
in
xchg
xchg
mov
mov
or
jp
shll
mov
cmp
lods
in
jno
pusha
cmp
inc
fistps
or
pop
jne
xchg
call
inc
shl
cmpsb
xor
repz
xorps
cwtl
insl
stos
mov
test
insb
xchg
or
adc
and
push
push
push
add
push
mov
iret
pushf
ret
iret
pop
add
pop
inc
scas
out
ret
out
push
push
cmp
or
mov
movsb
inc
push
mov
mov
ficomps
xor
imul
push
scas
std
add
dec
cmpsl
mov
test
hlt
leave
mov
fsubrs
loopne
aas
fstl
repz
aaa
cmp
jnp
mov
jmp
int3
xchg
shll
push
ficomps
mov
lds
jo
xchg
pop
scas
xor
fwait
and
jbe
cmp
fdivl
cmp
ret
push
sti
and
mov
outsl
mov
call
mov
cmp
roll
jno
repz
aas
jbe
dec
ss
or
mov
add
xchg
push
push
xchg
push
sti
das
test
cmpsb
cmpsl
push
out
pop
push
bound
bound
out
pop
lcall
loope
inc
je
int3
ljmp
cli
sbb
in
shlb
cld
aam
popa
orb
in
out
mov
add
sar
xor
dec
test
jo
lods
pop
adc
lcall
mov
sub
sub
outsb
ss
fiaddl
ficomps
cld
mov
cwtl
push
mov
dec
jns
jl
test
push
loopne
cmpb
dec
scas
testl
and
rcrl
rcrl
jne
sahf
ljmpw
icebp
xor
in
outsl
mov
sbb
sbb
stc
cmp
jmp
cmp
cmp
das
aam
sub
loope
inc
push
inc
out
xor
imul
push
jnp
jb
sub
gs
pop
sub
out
adc
imul
mov
cmpsb
decl
call
lds
adc
mov
dec
sub
cli
mov
inc
and
mov
test
loope
dec
movsl
rolb
inc
fstps
out
sub
mov
xchg
repz
inc
and
dec
xchg
call
bswap
mov
adc
int
pushf
mull
cs
leave
testb
dec
inc
test
lea
loopne
dec
adcl
mov
enter
pop
cwtl
pusha
push
sbb
and
or
push
xchg
mov
lock
test
das
and
pop
mov
jle
js
mov
scas
into
insl
and
jo
out
xor
fcoms
icebp
pushf
notl
cld
aam
int3
lret
in
push
or
xchg
mov
mov
nop
popa
xor
rolb
cmp
add
loopne
jne
sub
frstor
dec
clc
call
push
xchg
mov
rorl
add
mov
mov
rcll
test
leave
mov
cltd
mov
test
mov
pop
dec
mov
aaa
test
cmp
xchg
rcrb
inc
cli
push
sar
sbb
pop
add
lahf
stos
inc
cld
add
addr16
lds
insb
or
xor
sbb
add
xchg
les
mov
out
dec
imul
fmuls
dec
cmp
cltd
push
or
lidtl
cmp
jne
dec
cmp
imull
bound
mov
sbb
mov
add
push
xchg
push
orl
lret
pop
and
lds
add
push
dec
mov
in
std
mov
test
push
cmc
in
mov
lret
fbstp
in
xchg
push
mov
xchg
mov
addb
and
jle
cs
push
sub
sub
and
or
cld
mov
jnp
andb
mov
push
fwait
adc
jb
sti
insb
pusha
ret
call
inc
mov
and
pop
or
sub
mov
ficoml
sub
sbb
dec
stos
imul
scas
pusha
xor
lds
mov
xchg
stos
pop
mov
xlat
cltd
enter
pop
hlt
adc
dec
arpl
cmp
inc
inc
sub
sbb
jg
or
mov
mov
mov
loopne
mov
xor
movsb
scas
btc
cmp
jmp
loop
dec
add
jbe
imul
mov
fwait
daa
cmpsl
inc
or
jb
pusha
jno
test
movsl
cld
pop
push
xchg
out
or
sahf
sub
lahf
lds
sub
or
lock
loope
cmpsb
sub
xchg
pop
ja
ret
test
pop
fldenv
out
push
test
inc
jo
sub
test
push
test
std
adc
inc
lods
lods
xor
andb
ficompl
and
lock
int3
xlat
inc
int
jae
sub
cs
pop
cmp
lcall
mov
sub
nop
aaa
outsb
cltd
cwtl
fiaddl
stc
cmp
jnp
dec
mov
mov
mov
cwtl
push
jecxz
mov
fmul
jp
test
imul
xor
lcall
ror
or
mov
xor
lcall
stos
scas
inc
stc
repz
fs
repz
jle
add
insl
movsl
mov
lock
mov
cmp
xchg
mov
xor
push
xchg
and
or
mov
into
insl
dec
pusha
gs
cmp
pop
pop
xor
aas
popf
mov
fnsave
add
adc
cmp
xlat
enter
in
loop
mov
mov
leave
sti
pop
jl
inc
adc
xor
stos
xor
push
les
lcall
mov
pop
call
mov
mov
in
pop
push
and
jmp
fs
sbb
inc
movsl
xor
inc
mov
mov
jb
loopne
dec
clc
xorl
mov
cmp
cwtl
sbb
mov
mov
lahf
dec
dec
addr16
xchg
push
pushf
pop
push
pusha
loope
out
sub
mov
jae
mov
inc
outsb
cld
and
sbbl
sbb
sbb
dec
loope
sahf
cmpsl
cmpsb
mov
mov
jae
cmc
cld
jmp
sbb
pop
xchg
pop
mov
jo
mov
scas
push
rclb
jne
aam
jo
ret
mov
dec
adc
mov
xchg
clc
cld
scas
ljmp
icebp
lods
insb
add
mov
scas
out
xchg
xchg
mov
fcoms
fadds
arpl
add
test
test
or
dec
out
fisttpll
xchg
hlt
adc
rcll
xchg
pop
lods
push
stos
xor
pusha
add
xchg
stc
lcall
inc
add
notb
or
outsb
pop
xor
pop
and
in
push
mov
stos
lret
sub
dec
jg
fiaddl
fstpt
fwait
inc
xor
jne
ret
lods
mov
aaa
mov
cmc
pop
lret
jns
dec
stos
in
addr16
movsl
adc
mov
mov
rolb
addr16
mov
jp
mov
leave
cwtl
sub
fadd
dec
fistpll
lods
in
aaa
mull
xlat
or
xchg
sub
hlt
xchg
jle
mov
lods
pop
jl
je
loopne
imul
cli
stos
movsl
push
mov
cmp
push
jnp
daa
jl
xlat
adcb
ja
push
push
mov
pop
mov
pop
outsb
or
inc
vpmaddwd
lahf
test
or
cmpsl
pop
inc
inc
dec
in
fiaddl
pop
xchg
int3
clc
imul
imul
adc
call
sbb
mov
sub
dec
hlt
pop
or
notb
inc
jge
fwait
xchg
sbb
fidivl
mov
nop
addb
dec
jnp
pop
into
lea
sbb
xor
imul
cmp
cmp
popa
das
push
cltd
and
in
std
in
ror
fimuls
idivb
movsl
in
jno
cmp
jl
jb
dec
adc
push
js
movsl
and
repz
fidivs
push
std
sarl
mov
push
xchg
add
out
cmpsb
lods
pushl
js
mov
mov
bound
movsl
sub
icebp
push
cmp
scas
popa
adc
sbb
std
xchg
fs
xorb
sbb
add
bound
xlat
jo
and
sub
cmp
push
mov
rcrl
lahf
push
adcb
faddl
or
outsb
cld
loope
test
pop
popa
adcb
jg
push
pop
mov
and
sbb
cmp
cmp
xchg
aas
testl
test
jl
pop
rcr
sahf
lods
negl
in
hlt
xor
pop
std
outsl
inc
sbb
stc
stos
adc
int
mov
mov
outsl
lods
xlat
inc
push
cmp
repz
shrl
jno
xor
cmp
fwait
into
push
xor
gs
pop
mov
aas
sbb
jl
adc
ljmp
in
iret
add
sbb
out
std
mov
cmp
jg
sub
int
shlb
or
aad
lock
jae
int3
dec
or
cmc
inc
sbb
mov
mov
lret
repz
xor
lcall
xchg
or
mov
dec
pushf
dec
adcb
jne
cmp
inc
mov
addl
push
adc
dec
outsl
adc
jecxz
aaa
fcmovnb
sbb
std
adc
mov
cmpsl
mov
xchg
mov
test
rcr
adc
pop
cmc
sbb
jns
push
sbb
cld
mov
clc
jno
and
xchg
cmp
mulb
adc
cmp
cmpsl
movsl
mov
mov
cld
sub
lret
lret
cltd
loop
imul
aam
into
ja
shlb
mov
es
or
jbe
mov
outsl
adc
fnsave
cmp
aaa
nop
mov
popa
push
inc
lods
xlat
push
ret
mov
shrl
sub
or
or
ret
add
stc
jnp
mul
stos
test
mov
push
icebp
andb
popf
push
test
arpl
xchg
sti
sbb
int3
test
pop
ja
stos
and
xor
sub
loope
add
dec
push
xor
enter
mov
rorl
scas
xchg
add
fstps
dec
jb
insb
inc
adc
pop
add
jb
test
jne
popf
push
mov
add
bound
jl
in
dec
test
hlt
jmp
popf
sub
mov
xchg
in
jmp
jns
mov
fninit
mov
and
pusha
or
add
jmp
dec
lods
mov
or
jg
das
add
popf
fwait
ja
mov
cmpsl
test
and
hlt
insb
shlb
jnp
xchg
push
jle
scas
ret
rcrb
mov
mov
pop
movsl
in
cwtl
inc
rolb
jae
pop
xchg
push
addb
push
int
sti
mov
sbb
sti
cmc
imul
das
scas
shrl
outsl
mov
ror
jne
rorl
leave
stos
mov
call
inc
dec
and
sbb
mov
ja
jae
aad
add
clc
pop
int3
inc
mov
pop
pop
cmp
fiadds
aam
sbb
scas
int
pop
and
icebp
xchg
movsb
fstps
push
call
adcb
in
sub
daa
movsl
dec
jnp
fdivr
gs
adc
jl
cs
dec
addl
movsl
sub
ficomps
rol
push
test
pop
outsb
pop
inc
pavgw
cmpsb
xor
js
popa
sti
pop
push
mov
loope
xor
or
sbb
arpl
fwait
mov
shl
jns
icebp
jnp
addb
sbb
sub
jp
push
push
dec
mov
sub
jmp
and
xchg
push
insl
sub
dec
outsb
pop
pop
push
test
pusha
subb
sub
clc
xchg
mov
or
mov
cmc
lret
xchg
push
jmp
cmp
inc
cwtl
shl
jae
lret
push
shll
mov
dec
je
mov
dec
cmc
stos
lock
jnp
outsl
and
cmpsl
stc
popa
nop
stos
fs
mov
ss
mov
mov
mov
test
jle
or
ss
cs
or
push
pushf
gs
mov
loopne
ret
inc
int3
rclb
in
lret
jnp
adc
mov
add
aad
jno
xchg
sbb
ret
xlat
inc
cmc
mov
mov
xchg
mov
decb
or
dec
test
add
imul
fld
fwait
mov
repz
pop
xchg
arpl
and
fists
mov
test
popf
std
adc
je
pushf
clc
stos
int3
jmp
add
inc
mov
lret
mov
jb
jp
dec
out
pushl
ss
jae
leave
or
std
mov
movsl
mov
or
mov
sbb
cmp
xchg
negb
iret
or
jno
scas
das
mov
in
popa
mov
pop
cli
pop
rorl
push
add
inc
sbb
shll
jno
push
and
push
pushf
lcall
jecxz
and
and
mov
in
mov
sbb
inc
push
ret
lods
sub
repnz
mov
clc
mov
pop
xchg
jbe
mov
push
xchg
popa
sbbl
mov
hlt
pop
xchg
ds
push
in
repnz
icebp
add
in
cltd
cs
mov
test
push
mov
sub
test
aad
xchg
lahf
outsl
sbb
int
add
xchg
insl
stos
adc
push
out
nop
stc
push
add
mov
popa
cltd
xor
pop
xor
mov
jmp
ljmp
pop
and
cmpsb
daa
dec
xlat
sbb
or
and
and
data16
fsubl
out
xchg
push
bound
add
fs
mov
mov
push
mov
or
xor
push
data16
pop
adc
mov
mov
movsl
imull
test
jl
aam
push
xchg
into
mov
fists
add
out
sbb
mov
out
jns
mov
and
mov
jnp,pt
mov
cwtl
push
jo
cld
adc
mov
mov
pop
pop
fdivl
inc
fisttpl
inc
jae
pop
sub
or
popf
xor
dec
push
jno
lods
fidivrs
jp
ficompl
xchg
ljmp
cmc
xchg
negb
ret
mov
rolb
div
cmc
arpl
sbb
int
jge
pop
mov
out
outsb
add
add
jo
pop
lea
xor
xor
pop
test
out
and
in
or
andl
mov
xchg
enter
daa
movsb
xchg
mov
or
outsb
jno
jl
mov
jns
or
das
fdivr
and
mov
mov
cmp
sahf
inc
sahf
dec
push
cmpsb
mov
or
inc
outsb
js
fwait
lahf
pop
xchg
in
push
movsb
fsubp
mov
dec
sub
dec
daa
cmp
jns
xchg
es
sar
cmp
sbbb
sbb
insl
xchg
add
inc
fidivs
dec
cli
cli
adc
xchg
sub
pop
or
pop
lcall
xchg
pop
pop
sub
dec
hlt
outsb
ret
test
jg
orb
jg
mov
inc
lcall
test
or
cmp
adc
std
test
add
addb
idivl
sbb
aam
cmc
jb
mov
adc
outsl
add
daa
loop
xor
movsl
clc
adc
push
ss
mov
mov
adc
dec
cli
aaa
imul
cmp
hlt
icebp
or
xchg
cmpsl
into
push
fdivrp
gs
rorl
maxps
adc
sarb
loop
mov
xor
sbb
std
jo
xlat
test
inc
sub
push
mov
repnz
data16
cs
call
nop
sub
test
enter
aas
fistpl
loopne
sti
repz
cmp
xchg
es
aad
ljmp
or
sbb
es
inc
pushf
mov
hlt
xchg
cmp
jnp
cmp
das
inc
icebp
scas
scas
aas
xor
arpl
adc
pop
je
inc
xor
fwait
repz
pop
push
cwtl
dec
aaa
and
jnp
jp
jge
fmuls
push
jb
cmp
mov
popf
lods
lock
loope
das
pushf
pop
xchg
mov
gs
and
mov
rcr
mov
mov
dec
rclb
mulb
movsb
mov
icebp
clc
pop
js
adcb
mov
xor
cld
mov
mov
sahf
repnz
or
push
ret
gs
es
xor
jmp
pop
clc
jmp
mov
mov
xchg
ljmp
push
lods
lods
subb
mov
mov
test
mov
andb
add
cltd
gs
testb
push
push
ja
inc
dec
and
jne
cltd
fisubl
xchg
arpl
adc
mov
stos
push
imul
and
add
fdivs
std
push
jbe
xor
mov
or
pushl
psllq
in
adc
mov
mov
inc
inc
js
or
jg
fwait
ror
into
push
les
jne
jg
mov
rolb
out
jae
pop
bound
roll
sub
adcb
loop
sub
mov
cmc
addr16
cld
jp
imul
sub
mov
sub
mov
push
in
dec
fs
inc
sbb
fcomip
stos
es
mov
cmpb
fisttps
subl
and
xor
pop
jl
sbb
mov
and
std
pop
and
cmp
test
sbb
mov
jle
push
mov
std
adc
into
sub
enter
adc
jae
movsl
fs
or
shrl
sbb
inc
lret
into
ficompl
mov
sbb
cli
push
imul
scas
in
sbb
in
sar
movswl
xor
repnz
or
cwtl
insb
xchg
hlt
inc
inc
or
inc
dec
jmp
jge
adc
sbb
sbb
or
fildl
dec
rcrl
lcall
pop
mov
mov
mov
scas
mov
daa
cmp
mov
movsb
out
popl
xchg
adc
or
in
mov
jp
iret
dec
or
mov
dec
data16
das
add
fmull
push
pop
push
and
movsl
ss
and
jno
lahf
sbb
lods
push
jbe
mov
pop
int3
push
repnz
cmpsb
ss
inc
js
imul
loope
test
cmp
fwait
lret
lods
out
sub
cmc
shrb
mov
subb
sbb
inc
mov
xor
push
jg
fmuls
jg
xlat
hlt
jb
mov
and
faddl
adc
and
es
mov
mov
pop
stos
mov
dec
xor
sub
push
out
mov
mov
test
lcall
clc
jnp
sbb
xchg
jmp
xchg
mov
cmc
cmp
int
xor
jp
jecxz
cmp
stc
iret
jns
repnz
ss
lods
lods
mov
orl
push
imul
inc
lea
or
mov
cmpsl
loopne
sbb
pop
cmpl
mov
mov
adc
lods
push
add
bound
jle
sbb
cmp
les
sub
loope
in
pop
xor
loop
push
lret
fiaddl
nop
add
push
inc
push
lahf
cs
jmp
pop
repz
lea
or
aad
dec
mov
fs
mov
in
jp
dec
jg
jmp
lods
jle
sahf
in
dec
inc
rcl
inc
or
pushf
aas
iret
add
aam
sbb
cwtl
jecxz
mov
iret
inc
cmp
or
mov
bound
adcl
leave
fistl
arpl
push
divb
daa
loop
das
jnp
out
mov
sbb
shrl
mov
imulb
stos
jae
cmpsb
sti
jg
int
bound
xlat
lea
cld
stos
fs
sbb
or
mov
sarb
rcr
mov
or
adc
arpl
hlt
add
frstor
leave
clc
es
popa
inc
ljmp
out
lods
sbb
mov
cmp
ficoms
jmp
pandn
add
lcall
into
es
push
cmp
fisttpll
xor
test
je
xchg
pop
sbb
inc
daa
shll
xchg
mov
out
push
inc
xor
repz
inc
call
xchg
jb
shlb
loope
sbb
pop
xchg
inc
jb
rol
outsl
pop
xchg
jge
ja
arpl
inc
fimull
or
insl
or
push
addr16
jne
xchg
mov
aad
out
push
push
bound
cmpl
mov
mov
xor
mov
out
sub
lods
aas
add
jp
jo
mov
mov
mov
aam
in
imul
pop
jae
pusha
ficomps
fists
xchg
xchg
je
fsubrp
sub
rcll
call
popf
adc
mov
stos
jno
aad
xchg
adc
jnp
mov
sarl
adc
jp
jo
ret
xor
imul
jae
sub
lret
mov
adc
inc
dec
iret
mov
xchg
sub
loop
lret
scas
dec
cmp
sbb
add
jbe
fs
bsf
mov
ljmp
jge
jge
lods
pop
sbb
cmp
mov
sub
push
fucomi
int3
or
pop
jmp
rcr
das
mov
xor
aad
nop
scas
push
sbb
inc
inc
mov
jns
push
movsb
jp
out
aad
sub
dec
mov
cltd
cwtl
dec
enter
daa
mov
jle
jno
je
jl
pop
daa
dec
rclb
push
add
jnp
cmp
je
lahf
cmp
add
push
mov
loop
cmpsb
mov
adc
lret
ja
adc
add
pop
shl
mov
out
push
cmp
jp
int3
ds
mov
push
fisubrl
addb
inc
add
jb
xor
jmp
fwait
pop
dec
int
pop
in
sub
sbb
or
sbb
push
jg
sub
mov
jmp
jg
mov
cli
mov
addr16
and
lret
stos
fidivrs
jae
push
lret
iret
shll
add
pop
mov
sahf
cmp
cmpsl
xor
and
mov
loop
xchg
int
jge
nop
adc
insb
std
ss
aam
mov
insl
sub
andl
ja
insb
cli
xor
into
fcompl
gs
or
loopne
loopne
pop
mov
and
test
add
adcl
movsb
lret
jae
cmpsl
xlat
add
sub
xchg
pop
mov
enter
les
je
mov
and
cmc
dec
xchg
inc
gs
gs
in
repz
xchg
lods
test
lea
jo
or
fists
aam
je
stc
es
jmp
sub
dec
cmp
inc
daa
xor
aas
outsb
fisubrs
jb
call
lods
je
mov
shufps
ss
mov
cmpsb
cwtl
ret
mov
aad
mov
xchg
incb
inc
fildl
pushf
int
rcr
mov
xor
das
pop
fs
mov
aam
mull
and
sarl
imulb
insl
lea
cmpsl
mov
sbb
icebp
cmpsb
in
cld
push
jb
xchg
mov
movsl
into
and
repnz
cwtl
pop
dec
aam
shlb
pop
out
aam
repnz
adcl
fisttpll
adc
popa
je
xchg
xor
scas
popa
movb
cmp
mov
pop
mov
mov
mov
mov
mov
add
fsts
sub
std
icebp
es
repnz
mov
mov
jns
out
or
dec
pop
add
dec
stos
fisttpll
out
add
push
aas
jg
xor
mov
jb
fs
repnz
repz
and
pop
push
fcompl
ja
test
ds
inc
jno
mov
pop
das
cmp
or
test
mov
out
dec
out
xor
aam
mov
bound
pop
xchg
xor
xor
out
rorb
jg
add
jp
sub
addl
dec
dec
xor
cld
jmp
lods
aas
fbstp
add
pop
lcall
inc
fidivrl
out
es
aaa
sub
mov
mov
inc
in
lods
dec
lret
lock
jle
sbb
push
inc
lds
iret
xor
movb
cld
push
sbb
push
mov
or
push
lods
pop
inc
leave
push
js
lds
mov
sbb
dec
inc
imul
test
xor
mov
in
repnz
cmp
cltd
hlt
or
arpl
in
push
sbb
test
sbb
sub
pop
icebp
xchg
add
mov
pop
sbb
mov
mov
enter
test
and
push
les
xor
gs
and
pusha
jbe
pop
arpl
cmpb
daa
mov
data16
xchg
fnsave
dec
aas
inc
orl
inc
inc
and
xchg
lahf
pop
inc
call
test
mov
inc
dec
adc
scas
pop
popa
dec
push
js
rorl
push
or
mov
xchg
andb
gs
les
arpl
stos
adcb
mov
xor
mov
test
int
mov
mov
mov
xor
out
mov
aad
push
test
scas
jle
test
mov
jge
mov
xor
ficompl
into
mov
dec
testl
or
mov
incl
sbb
mov
fildl
cmc
or
outsl
mov
test
or
adc
fidivs
incl
sbb
mov
xor
sbbb
rorb
cmp
cmp
jnp
lods
into
mov
inc
jl
inc
mov
push
adc
jbe
imul
hlt
insl
add
insl
mov
scas
push
lcall
imul
jae
or
xchg
pop
sbb
nop
mov
jmp
inc
js
rcr
pushf
rorb
add
pop
repz
push
lea
in
dec
call
mov
rcrl
xchg
in
adc
negb
jmp
push
push
inc
iret
add
aas
or
pop
jne
ret
je
lock
or
aad
test
push
subl
push
int3
add
push
pop
xchg
addl
jl
mov
fs
and
es
xchg
scas
lock
fsubrl
cmp
mov
mov
mov
ror
lahf
xor
scas
aad
insl
je
jg
ret
test
cmpsl
mov
pop
push
icebp
jge
ljmp
sub
fmul
jge
enter
jmp
pop
imul
and
stc
je
aam
aad
ret
adc
es
rcrl
je
add
pushf
mov
xchg
jb
int3
ljmp
lea
mov
andb
push
push
insl
in
setge
aas
cltd
or
inc
mov
adc
push
shrb
pop
mov
test
arpl
xchg
and
repz
mov
stos
int3
ds
sbb
jne
push
pushf
inc
add
jecxz
call
iret
sbb
call
jmp
or
testb
mov
or
lock
push
sbb
inc
or
or
pop
push
int3
push
lods
add
jne
mov
sub
pusha
xchg
bound
inc
jns
clc
and
xchg
jg
sbb
into
jbe
or
scas
jp
lcall
lods
jmp
mov
xlat
stos
in
jmp
dec
fists
out
sbb
xchg
push
popf
sbb
call
popf
pop
mov
lret
mov
loop
dec
stos
push
stc
mov
insb
jmp
sbb
imul
cmp
sub
test
add
cmp
jae
push
and
push
andl
inc
dec
pop
jl
js
mov
sbb
das
sub
scas
adc
sub
rorb
mov
sbb
es
std
inc
fdiv
and
push
sub
push
std
sbb
sub
jecxz
xor
aaa
or
filds
push
jge
int3
fisubs
in
jne
shll
mov
enter
push
and
cmp
cmp
push
jae
mov
in
addr16
jg
shlb
daa
mov
add
jno
push
jl
inc
out
dec
scas
add
movsl
dec
pushf
mov
lahf
js
aaa
push
out
xchg
stos
test
push
data16
mov
pop
mov
js
dec
cli
pop
xchg
jno
push
ljmp
and
pop
cmp
fwait
jp
adc
loop
cs
fiaddl
andb
cmp
repnz
pop
test
mov
mov
pop
or
lcall
mov
sub
add
dec
sahf
xchg
test
cltd
xorb
sbb
mov
mov
and
push
clc
in
cmp
jmp
or
lret
mov
mov
aas
call
cmc
mov
xor
mov
loop
pop
push
stc
hlt
movsl
push
fs
jg
adc
sub
jo
pop
adc
js
add
xor
mov
aad
ljmp
gs
in
loopne
lods
add
loopne
outsl
adc
je
adc
adc
xchg
jp
push
int3
cmp
adc
jmp
add
mov
sahf
enter
jle
mov
and
xchg
mov
dec
inc
cwtl
xor
aaa
and
or
pop
repz
xchg
xor
mov
inc
mov
cmc
pop
rclb
stos
adc
repnz
or
inc
push
cs
inc
pop
add
lods
mov
inc
dec
cmp
push
je
jl
jecxz
fwait
leave
fadds
aaa
cwtl
cmp
mov
inc
xor
fstps
dec
aam
sbb
loopne
push
pop
xchg
das
mov
lods
mov
cmp
das
sbb
mov
inc
cld
push
and
loope
rcrl
jl
div
sbb
ror
mov
sahf
mov
icebp
push
inc
cld
sub
mov
mov
test
mov
mov
inc
rcrb
or
lock
aam
or
ret
mov
push
mov
fwait
sarb
clc
xlat
mov
xchg
mov
mov
dec
fldl
lods
pop
enter
pop
inc
mov
mov
dec
lock
out
mov
out
inc
stos
repnz
movsw
mov
pop
into
push
andl
ror
test
mov
out
sbb
scas
jl
mov
es
pop
daa
mov
out
jg
testb
fwait
pushl
inc
xor
pop
or
aaa
mov
lret
mov
stc
pushf
inc
mov
push
outsl
ja
stos
mov
pop
add
xchg
inc
or
das
imul
jb
dec
mov
pop
add
out
insl
ja
cli
ds
sar
mov
xchg
into
jge
mov
stos
test
mov
test
popf
mov
iret
jp
mov
pop
mov
and
ljmp
cmp
pusha
scas
outsl
sub
xchg
in
ror
jmp
or
pop
out
jno
popf
test
pop
mov
and
xchg
fisubrl
sbb
push
movsl
idivb
pop
fwait
jle
mov
push
rcrl
das
adc
jcxz
rep
xor
pop
out
test
inc
adc
inc
jae
xor
adc
jmp
push
call
ljmp
jmp
xor
js
lahf
lds
fs
mov
outsl
adc
leave
je
mov
insb
and
arpl
lock
pop
jmp
jge
aad
sbb
cmc
in
or
add
movsl
add
leave
andb
sbb
addr16
inc
movsb
scas
pop
ret
ljmp
cmp
data16
push
ret
jbe
cmpsb
stc
in
dec
xor
daa
lahf
mov
push
jno
sbb
dec
sbb
cmc
mov
push
push
and
int
xchg
mov
push
ret
test
push
movl
pop
scas
outsb
sbb
push
pop
rcrl
push
cmp
mov
cmp
lods
mov
rcrb
ret
jno
sub
mov
lock
push
xlat
in
cld
int
into
sti
sub
cli
jne
xchg
sub
jecxz
sub
sub
xchg
jecxz
fwait
test
adc
dec
jg
test
das
mov
add
and
xor
fsubs
sub
shr
mov
stos
cwtl
sahf
and
xor
ss
inc
insb
xor
stos
cld
and
push
or
ss
xchg
sbb
out
push
xor
sarl
cmp
cmp
into
test
push
gs
data16
mov
pop
incl
data16
mov
imul
mov
add
sub
sbb
and
add
rorb
mov
or
idiv
shrl
lret
fnstsw
adc
mov
mov
inc
add
lds
xchg
cmc
andb
rol
movl
mov
cli
adc
xchg
cs
or
mov
jl
dec
mov
jb
sub
mov
mov
jecxz
outsl
ss
fldt
outsb
cwtl
repz
outsb
mov
pop
cmpsb
xorl
int
pinsrw
std
sbb
xchg
stos
das
testl
dec
and
aas
push
shrl
out
xor
pop
xchg
dec
mov
cmp
inc
icebp
sub
push
cld
push
in
lret
aam
testb
pusha
lock
cmpsl
inc
loopne
sub
sub
xchg
sbb
add
loopne
add
nop
ffree
inc
xor
adc
sbb
rorb
popa
or
jmp
mov
jg
xchg
call
aas
cmp
pop
cmc
filds
ret
fsubrl
cltd
js
filds
loope
push
inc
movl
movb
sbb
lods
std
pop
add
in
into
out
loop
mov
add
sar
pop
pop
xor
xor
mov
cld
mov
ds
xorb
and
push
dec
pop
jecxz
inc
ss
xchg
insl
iret
fwait
mov
pop
popa
jne
mov
out
into
jg
bound
movsl
cs
lret
pop
xchg
sbb
sbbb
cwtl
mov
incb
jp
xchg
pop
mov
pop
mov
nop
testl
in
out
and
fisttps
mov
push
xor
add
les
lods
push
icebp
mov
pusha
xchg
and
rolb
insb
mov
in
jle
scas
es
sbb
adc
fiadds
ret
jo
es
fiaddl
out
paddd
or
jg
mov
fcmovu
movsb
stos
xchg
test
dec
imul
insb
lds
dec
cmpsb
rolb
mov
leave
jmp
adc
mov
mov
inc
pop
dec
or
add
aaa
mov
scas
or
xor
cmp
dec
int3
mov
call
fidivrs
dec
xor
fwait
jmp
and
cmp
movsb
cmpsb
insl
jb
adc
pop
jbe
xchg
call
enter
daa
sahf
push
cmpsl
cmp
lock
dec
mov
ret
add
and
dec
or
xchg
and
push
jmp
inc
test
push
pop
js
sbb
pop
adc
shrb
inc
shl
push
dec
stc
sub
sub
cmp
pminub
hlt
mov
mov
adc
out
add
ret
and
scas
cmpsl
and
mov
pop
push
stos
ds
cmp
sub
jge
test
inc
out
in
je
jg
push
sbb
imul
and
out
add
pop
xor
das
lret
inc
roll
inc
sbb
fnstenv
cmc
sbb
inc
xor
and
outsl
ds
jge
lods
push
fs
and
ss
shld
jge
adc
imul
cmp
testl
push
dec
pushf
loopne
lret
add
adc
rolb
adc
add
cmp
shll
jnp
inc
repz
jmp
cmp
in
je
inc
sti
adcb
add
aad
stos
in
nop
dec
mov
sub
jg
flds
faddp
and
repz
xchg
push
jae
call
add
das
notl
xor
sbb
std
mov
add
inc
xchg
and
or
dec
daa
scas
je
xchg
in
cmc
xchg
std
dec
stos
sbbl
enter
fs
dec
stos
jle
fstpt
movsb
rcrb
adc
lock
setnp
lahf
int3
mov
mov
add
lock
sarl
sti
cmp
dec
mov
shll
pop
shl
add
cwtl
lret
inc
dec
fimull
frstor
sub
sar
jecxz
sub
lcall
mov
mov
fucomp
sahf
pop
clc
dec
in
lea
xor
popa
and
lods
das
jecxz
mov
jmp
xchg
sbb
inc
jle
mov
icebp
cmp
add
scas
mov
dec
mov
mov
sbb
vpcmpgtw
mov
mov
fsubrs
inc
sub
cld
add
test
mov
dec
xor
ljmp
nop
mov
lcall
idivl
cmp
insl
lea
pop
xor
jge
or
jg
fwait
ljmp
jne
test
mov
sbb
out
lods
xchg
jmp
and
and
ds
outsb
push
daa
xchg
insb
and
mov
enter
jle
or
inc
mov
and
mov
testl
mov
mov
in
or
in
push
fildll
stos
sbb
sti
jge
xchg
mov
or
out
mov
mov
lahf
fisttpl
stos
mov
mov
insb
sub
jge
adc
inc
push
popa
or
adc
fdiv
ret
add
pop
jg
sub
sub
lcall
push
lds
adc
sti
fsub
imul
scas
ds
lds
lcall
adc
in
hlt
add
lock
pusha
and
jge
syscall
sbb
divb
outsl
sti
push
daa
dec
popf
add
jl
int3
lahf
mov
fstp
pop
mov
pushf
or
and
scas
aam
xor
inc
push
pusha
dec
or
in
sbb
mov
mov
sahf
daa
popf
add
jno
call
loope
sti
enter
push
movsl
pusha
inc
xchg
and
sub
push
cmp
mov
push
inc
xchg
inc
pop
std
and
js
lds
dec
lds
add
sub
push
jge
in
sbb
jnp
fs
iret
shlb
jmp
scas
in
sbb
jmp
mov
out
repnz
add
push
fmulp
rorl
pop
test
inc
push
xchg
mov
faddl
shll
outsb
ja
jns
test
filds
mov
cs
mov
aaa
lret
pop
add
push
add
jle
push
loopne,pn
xor
lret
add
outsb
xchg
mov
pop
sbb
int
sahf
loopew
cmc
jecxz
bound
push
cwtl
push
outsl
sbb
and
stc
sbb
push
adc
insb
lods
not
or
jl
push
cli
pushf
jmp
cmp
mov
into
dec
cmp
out
mov
dec
pop
cmp
shrl
pop
je
add
mov
cltd
sbb
lcall
sub
pusha
mov
xor
and
jno
test
mov
popa
mov
inc
les
fnstcw
test
sub
movsb
pushf
xchg
jnp
into
lea
xchg
test
push
pop
jmp
out
xchg
jnp
in
cs
inc
scas
aam
aas
mov
jb
add
inc
je
sbb
jecxz
in
loope
fscale
repz
cwtl
imul
mov
and
sahf
adc
dec
xchg
out
fldt
push
pop
mov
push
mov
push
in
lock
mov
das
mov
repz
addr16
ja
ljmp
lcall
scas
sub
cmpsl
pushf
pop
movsl
mov
fnstenv
xchg
lret
mov
bound
in
inc
mov
in
loope
rcll
mov
cltd
test
ret
dec
bound
fstl
fcompl
clc
mov
xchg
outsb
icebp
jmp
popa
cmp
jae
mov
sub
xchg
jbe
arpl
pusha
imul
jmp
mov
test
fwait
add
int3
out
jp
cmc
imul
divb
les
clc
insl
in
mov
sub
das
out
test
xor
add
jle
xor
movsl
or
shlb
add
sbb
mov
popa
mov
dec
std
xchg
or
cmpsl
fwait
sbb
mov
cmp
cmpxchg
scas
pop
bound
loop
in
sub
xchg
mov
test
or
int
jp
pop
insb
mov
or
pop
loopne
mov
insl
dec
mov
test
pusha
xorb
int3
test
in
jmp
insb
loop
adcl
daa
out
inc
ljmp
call
jmp
and
mov
jnp
mov
insl
push
test
ret
or
ret
ficompl
lods
dec
inc
xor
jae
std
notb
pop
je
or
jne
pop
inc
inc
cmpsb
aas
fiaddl
xchg
xor
push
sbb
push
mov
scas
mov
cli
sbb
mov
add
push
or
hlt
dec
cmp
add
arpl
jge
add
sbb
jmp
adc
sbb
jae
push
push
int3
mov
jge
add
xor
xor
testl
ljmp
js
push
scas
push
fbstp
aad
in
add
dec
enter
daa
pushf
insb
sarb
mov
add
jle
push
mov
push
repnz
movsl
addr16
sbb
inc
xor
cmp
push
mov
push
jg
pop
inc
push
push
lcall
sarb
es
dec
push
outsl
inc
xchg
jno
rol
jmp
ds
scas
lea
stos
cmc
les
repnz
out
sub
add
loop
xor
and
int
inc
data16
push
pop
add
pushf
lcall
and
xor
subl
pop
test
movsb
push
andb
mov
mov
pop
mov
mov
daa
jne
mov
xor
add
push
cmp
aad
mov
std
lcall
scas
test
ljmp
push
cmc
stos
mul
xor
jge
loop
int3
mov
fs
xchg
aas
ss
dec
and
fucom
movsl
mov
push
outsb
out
mov
xlat
xor
in
and
into
lods
sub
dec
mov
dec
cmp
pop
pop
push
xlat
adc
fldcw
divl
shlb
add
arpl
xor
sbb
aad
aaa
xlat
jge
sbb
mov
in
dec
jp
sti
fsubrp
sbb
inc
js
aad
rorb
shlb
xlat
stos
and
scas
cmp
les
imulb
xchg
ds
icebp
lea
in
outsb
call
add
pop
sahf
sbb
fiadds
nop
pushf
sti
js
jmp
and
cs
mov
inc
jb
xchg
inc
leave
xchg
data16
sub
jb
inc
out
dec
adc
cmc
jecxz
test
in
jo
lcall
mov
pop
testl
xorb
pushf
mov
pop
push
repnz
mov
sti
push
lock
adc
das
xchg
aad
mov
push
shll
push
xchg
rcll
aas
idiv
lods
xchg
insl
notl
in
cmpsl
fwait
xor
icebp
mov
in
cld
fdivs
jge
and
jge
inc
out
and
xchg
push
pop
add
daa
shlb
aad
fs
push
ret
fisttpll
mov
aaa
std
ljmp
lods
mov
sbb
out
popa
push
fcmovnu
lods
add
inc
outsl
mov
mov
lods
vmread
jp
sbb
ljmp
mov
adc
mov
dec
pop
adc
xchg
jae
stos
push
rcll
mov
je
ja
xchg
out
or
jge
hlt
sbb
add
mov
xor
outsb
les
push
mov
add
pop
pop
pop
mov
mov
dec
lock
hlt
xchg
push
jns
dec
sub
push
fmull
jmp
out
imul
bound
fs
ja
in
pop
adc
or
mov
sub
mov
out
sti
fnstcw
jmp
inc
mov
fldl
movsb
dec
mov
data16
sbb
fucomip
in
mov
jmp
decb
out
ja
popf
and
and
sbb
add
insb
add
insl
jnp
into
sbb
xlat
fstl
test
iret
outsl
push
add
ja
pop
lret
cmc
cmpsb
inc
ds
loopne
and
fisttpl
lock
inc
ret
inc
int
testl
lea
push
mov
add
test
addr16
and
mov
mov
fdivs
hlt
cwtl
inc
cld
arpl
sub
outsb
fsub
sbb
adc
add
xchg
jne
das
pop
xor
pop
fisubs
cmp
push
and
scas
andl
cmp
pop
movsb
inc
jl
push
and
jbe
and
cmpsl
add
daa
fwait
pop
out
fwait
xor
inc
fidivrs
gs
fldenv
mov
cmp
test
outsb
push
jbe
loop
jge
adc
push
push
js
test
dec
xchg
add
movsl
fmul
cmpsb
dec
popf
int
dec
arpl
js
stos
add
int
lcall
insl
jno
cmp
cmp
aaa
ds
adc
test
push
cmpsl
inc
addb
push
add
lock
lock
sub
push
lcall
sti
lahf
sub
mov
test
out
stos
jg
jo
mov
mov
fs
inc
mov
push
pop
in
cmp
nop
fcmovne
idivl
lret
or
pusha
call
sahf
lods
out
cmc
jno
xor
or
movsl
loop
stos
add
fs
jb
adc
xor
ss
mov
fisttpl
jp
lock
add
mov
cmp
es
or
adc
call
leave
mov
imul
stos
sub
jmp
sbb
sbb
adc
and
mov
inc
xor
mov
mov
imul
sub
pop
xor
xlat
inc
les
lret
outsl
stos
xchg
add
or
lods
fwait
inc
movl
jo
pushf
cmpsb
in
jmp
sti
or
mov
cmpsl
inc
stc
jecxz
inc
in
int
push
divl
scas
out
mov
inc
jecxz
push
lahf
std
inc
fstps
fistps
mov
push
clc
or
dec
dec
fcmovne
pop
imulb
dec
mov
or
lock
mov
aad
mulb
lds
insl
fiadds
push
cmpsl
lcall
icebp
xchg
cld
add
sbb
and
das
insl
push
pop
and
xchg
ja
fsubrl
ret
test
aam
or
ret
insb
negl
adc
aaa
clc
pop
ss
in
jmp
ljmp
jecxz
jo
movsb
mov
push
test
xchg
add
jge
jae
testl
punpckhwd
cltd
push
cwtl
push
mov
lods
or
out
dec
ret
sahf
dec
test
imul
pop
sbb
shrl
push
pop
mov
pop
stos
data16
out
outsb
mov
jnp
icebp
add
pop
outsl
decl
ret
test
mov
jno
pop
mov
or
lock
outsb
mov
pusha
dec
jecxz
sbb
xchg
out
or
lods
into
fwait
ja
sub
jg
lret
jne
int3
leave
mov
sarb
dec
out
data16
in
ficoms
xor
sub
test
addr16
imul
mov
sahf
xchg
in
dec
cmpl
pusha
mov
leave
fisttps
out
xchg
or
in
loopne
ljmp
jne
out
sbb
popf
dec
cmpsl
into
mov
pop
lock
and
pushf
insb
imul
in
pop
jle
int3
rclb
pop
adc
into
iret
into
adc
ret
and
jecxz
inc
dec
lret
dec
or
jg
cmp
pop
loopne
inc
arpl
stos
jecxz
xchg
loopne
test
cld
cmc
add
adc
lds
rol
orl
repnz
mov
nop
hlt
jecxz
lods
arpl
pop
fidivrs
xchg
cmp
cmp
popa
fisttpll
add
add
dec
adc
cmp
fiadds
pop
xor
lods
int3
jecxz
bound
and
mov
sbb
ja
jbe
in
in
shrl
sti
daa
lcall
jno
stos
adc
dec
dec
je
push
sbb
inc
movsl
jne
sbb
lahf
xor
fistl
cmpsl
and
adc
out
cmpsb
rcrl
scas
js
lods
jg
or
sub
loope
insb
fisubrs
stos
je
icebp
inc
std
ds
jge
test
adc
pusha
jnp
popl
test
sbbb
push
sbb
ja
add
push
sbb
pop
push
xor
mov
nop
int
pop
inc
sub
inc
out
add
cmc
push
xchg
cmp
mov
outsb
mov
xchg
pop
sbbb
jg
sub
inc
aad
mov
mov
and
cmpsl
mov
cmp
dec
nop
aad
jnp
xor
rcr
mov
sbb
push
loop
cmp
xor
outsl
mov
mov
mov
aad
adc
xchg
shrd
in
mov
jns
rcll
xor
out
cmp
xor
or
in
xchg
shll
pop
lcall
imul
inc
add
js
mov
sbb
dec
cmc
jo
sti
adc
ret
add
mov
and
sti
cmp
scas
decb
xchg
nop
mov
mov
mulb
std
cmpsl
pop
fstps
adc
xchg
les
inc
lock
adc
sub
pop
add
sbb
mov
lds
xchg
xchg
sbb
mov
inc
lcall
aas
push
fwait
jb
push
adc
fisttpll
jecxz
nop
jne
ljmp
cwtl
lcall
mov
xchg
into
andl
lret
int3
adc
pop
insb
mov
jnp
lock
imul
cmpsl
push
pop
mov
sbb
hlt
cmp
testb
dec
mov
adc
mov
pop
stos
mov
lret
incl
jbe
stc
mov
mov
inc
dec
out
rorb
add
mov
cmp
ret
sti
cmpsl
jno
xchg
jmp
outsl
clc
cmp
lods
ljmp
adc
push
mov
jne
out
dec
mov
sti
sub
add
dec
daa
cltd
mov
mov
inc
mov
adc
push
arpl
inc
sub
rol
int3
fcomps
rep
push
add
std
add
out
add
sub
je
or
pop
xor
dec
outsb
mov
or
push
pop
sub
cmp
inc
mov
cld
cmp
push
pop
fwait
cmpsb
cmpsl
negb
and
jne
push
and
sub
test
sbb
push
xchg
test
hlt
mov
jno
sub
jg
cmpsl
addr16
jge
jp
push
ret
mov
push
pop
mov
mov
adc
in
push
xchg
adc
fildll
in
xchg
xor
xlat
mov
cmpl
pop
popf
outsl
dec
add
push
push
bound
sub
jnp
cmp
inc
push
jge
pushf
adc
ficompl
xchg
loope
push
sub
jae
sti
int
cmpsb
in
pop
or
out
push
inc
roll
ficompl
setno
pop
lea
cmpsl
lret
imul
push
pop
rorb
mov
popa
js
leave
ds
hlt
hlt
cs
dec
arpl
add
mov
sbb
or
call
int3
dec
and
pop
xchg
mov
xor
or
xchg
jno
inc
cmp
in
mov
pop
jg
push
pushf
or
js
mov
idivb
cltd
mov
cltd
jno
xor
jl
cwtl
rorl
mov
incl
jge
sbb
hlt
lahf
push
int
push
mov
cmpsb
test
loopne
push
inc
ret
cmp
cmpsb
push
adc
pop
cltd
xor
sub
dec
ret
cmp
sub
mov
repnz
inc
mov
sarb
fmul
gs
and
sub
daa
mov
add
or
xor
push
iret
jbe
int
mov
inc
pop
sbbl
sub
xor
jae
dec
cmc
mov
test
and
xorb
jg
jmp
mov
pop
mov
mov
je
and
inc
jle
or
lea
push
fnstcw
cmp
addr16
jae
je
lock
das
sbb
sahf
repz
sti
xor
jmp
inc
stc
cmc
js
fs
pop
adc
sarb
mov
mov
xchg
pop
out
cltd
jo
push
lods
out
cmp
adc
or
inc
into
xlat
mov
gs
cs
push
jb
pop
mov
dec
inc
imul
xor
xchg
dec
rcrb
mov
xlat
cmp
clc
mov
mov
sti
jmp
mov
scas
lds
mov
push
xor
mov
xchg
push
cli
lret
les
mov
xchg
xchg
adc
movl
mov
pop
jmp
testl
inc
sbb
aas
add
sub
je
xorb
in
mov
dec
cwtl
push
mov
out
in
cmp
inc
sti
jle
sub
mov
mov
cwtl
das
xor
cmp
mov
mov
repnz
test
popf
insl
lods
or
dec
fwait
lock
mov
xor
ror
outsb
jg
mov
gs
mov
popa
mov
sbb
push
out
aam
mov
dec
es
cwtl
jae
push
pminsw
popa
popa
xchg
mov
lods
inc
and
mov
cwtl
hlt
jbe
xchg
mov
data16
add
or
test
jne
adc
lods
lods
dec
xchg
popa
pop
test
ds
xchg
icebp
loopne
les
imul
out
xor
xchg
add
add
mov
xor
insl
mov
mov
push
inc
adc
in
adc
dec
leave
ds
inc
shlb
fwait
aad
push
push
lds
jne
inc
pop
mov
push
in
out
or
xchg
pop
add
rorl
sbb
mov
push
arpl
jp
dec
addr16
adc
mov
mov
jecxz
add
xor
dec
push
cmpsl
in
popa
fwait
pusha
in
pop
xchg
fisttps
add
into
les
cwtl
dec
mov
mov
xor
fidivrl
stos
out
fdivl
insb
inc
mov
jnp
fwait
int
rcll
adc
push
mov
mov
pop
jo
popf
inc
pop
loopne
jae
sub
push
imul
lret
inc
inc
xor
xchg
mov
ficompl
sub
inc
scas
sub
or
shlb
mov
repnz
enter
aam
jns
xchg
arpl
sub
jge
mov
sbb
xchg
or
push
ret
add
mov
and
shll
xor
pop
mov
and
sub
lahf
xchg
mov
push
jmp
loopne
jmp
sbb
mull
cwtl
cmp
outsl
xor
jno
loope
jl
sbb
push
loop
in
movsl
sbb
and
nop
sbb
mov
ficoml
pushf
inc
push
rorb
jp
pop
shlb
outsb
stos
pop
mov
push
xor
mov
cmp
test
adc
push
push
or
ds
dec
sbb
lahf
add
adc
cmp
int
add
sub
pop
xchg
pop
add
jno
popf
push
enter
movntps
outsb
data16
leave
test
orb
mov
push
dec
mov
jb
mov
mov
push
adc
or
shll
lret
mov
mov
dec
enter
popa
sahf
xchg
adc
cmc
and
sbb
mov
dec
jnp
stc
lods
dec
mov
pop
test
xor
jns
jns
not
in
out
repz
fwait
out
mov
cmp
lret
bound
jg
movsl
in
in
loopne
add
pop
fmuls
adc
push
adc
je
add
movsl
sbb
sar
xlat
jns
out
sub
cld
in
imulb
sti
lcall
aad
popf
xchg
nop
insl
push
xchg
mov
jp
repz
lahf
mov
mov
adc
call
out
adc
xchg
mov
jmp
sbb
fisttps
inc
mov
in
aas
movsb
pop
add
fidivs
and
jecxz
lods
add
jne
std
ss
cwtl
adc
mov
lods
out
fildll
adcl
stc
stc
pop
fists
inc
lock
xor
adc
mov
cli
jmp
repz
xorl
cmpsl
cmpsl
dec
xchg
xchg
sbb
mov
or
cld
cld
test
addr16
fnstsw
jb
shll
dec
and
add
adc
shl
add
aam
xchg
or
sbb
fsubs
cltd
mov
push
xchg
test
clc
lock
lods
addr16
lods
mov
out
es
mov
fldenv
or
adc
pmuludq
rcrb
xlat
insl
mov
push
xor
aas
sub
cwtl
cmpsl
test
xor
xchg
cmp
iret
shrl
jne
mov
stos
xor
out
xchg
test
sbb
inc
ljmp
xchg
xor
jo
or
pop
push
xor
ja
mov
adc
mov
lahf
pop
cwtl
ja
sbb
dec
mov
xchg
std
or
dec
fwait
add
cs
push
cwtl
lock
cmp
bound
xor
mov
jle
inc
js
mov
std
lret
sub
jne
mov
divl
jp
daa
add
das
xor
mov
nop
outsb
in
shrb
fbld
mov
test
imul
lds
outsl
sbb
lods
out
mov
lret
push
insl
push
sbb
out
and
cwtl
cmpb
xchg
arpl
push
or
fs
push
pop
iret
jmp
or
lods
cmpsl
rcrl
subb
mov
xchg
or
fdivl
incl
fcoml
xchg
in
lcall
xlat
adc
roll
mov
repnz
mov
hlt
les
inc
jb
jg
or
add
outsb
sbb
aaa
jmp
outsb
test
pop
dec
aas
int3
and
pop
lock
fidivs
ja
xor
mov
enter
shrb
in
movsb
jae
push
jbe
loopne
in
xchg
and
cmp
mov
jl
insl
lods
dec
xchg
add
push
vcvtdq2ps
dec
les
push
xchg
push
pop
outsl
mov
push
jbe
or
stos
lea
out
test
pop
leave
pop
sti
push
sub
loope
inc
adc
out
sarb
rep
ds
outsb
cmp
jge
mov
and
adcb
sbb
jo
xor
sbb
xor
int
sub
sub
xor
lcall
popf
faddl
pop
jae
leave
mov
shrl
test
jbe
mov
push
arpl
ja
mov
sti
inc
xor
adc
jge
push
call
jo
mov
stos
cli
shll
adc
sahf
cmp
cmc
lea
iret
outsl
push
inc
sub
fldt
insl
stc
arpl
cmpsb
fs
push
adc
fbstp
popf
jmp
jbe
repnz
sbb
jbe
push
cli
into
or
xor
cmp
or
mov
mov
loopne
cmpsl
arpl
shrl
imul
or
and
dec
fcompl
cld
loop
xlat
mov
mov
mov
popa
cmp
cmc
addr16
nop
dec
pop
cmp
pop
and
test
fld
lods
leave
les
icebp
repz
aaa
xchg
xchg
or
xor
jle
pop
sbb
xchg
aad
push
add
cs
loop
inc
adc
xchg
aas
inc
popa
test
dec
push
das
or
repz
cmp
enter
shlb
subl
stc
dec
fildl
lcall
imul
das
out
mov
int
mov
dec
and
sti
call
testb
insl
jp
fisttpll
lret
xchg
lds
mov
jecxz
inc
cld
scas
cmpsb
popa
lret
dec
mov
outsb
and
fwait
fwait
jno
lahf
sbb
rol
call
cwtl
aam
mov
or
sbb
insb
incb
clc
ljmp
ljmp
fsubrs
es
ficoms
sub
fbld
mov
pop
xor
jl
push
fists
mov
js
pop
inc
push
test
mov
lods
sbb
out
rol
imulb
pop
xchg
test
cli
adc
add
aaa
cwtl
dec
decl
cld
int3
xor
mov
sbb
push
pop
xchg
add
pop
push
hlt
ja
pop
lcall
adc
or
sub
fwait
xor
jnp
or
add
jno
dec
mov
sub
aas
bound
sti
pop
in
xor
xchg
xchg
dec
and
aam
cli
or
xchg
addr16
js
call
jbe
mov
or
das
dec
movsbl
pusha
and
filds
mov
jmp
jne,pn
subl
fdivl
and
mov
pop
cltd
imul
adc
pop
push
adc
mov
mov
lea
iret
dec
inc
sub
mov
incl
jae
pop
add
or
push
lahf
pushf
inc
ds
sub
test
add
scas
repz
lds
xchg
rcrb
mov
pop
call
hlt
cmovg
arpl
adc
jge
gs
sbb
jl
aaa
test
mov
int3
aas
roll
hlt
adc
int3
or
aaa
pop
pop
sbb
sbb
sbb
jg
fdivrp
outsb
and
aad
cmp
jns
push
mov
jbe
jno
in
insl
sbb
enter
daa
xchg
mov
cmp
enter
cmpsb
sarb
pop
dec
add
or
test
movsl
xchg
aam
and
mov
lahf
scas
and
push
sub
adc
push
inc
repnz
leave
jmp
pop
push
lahf
push
js
jle
pop
or
adc
rcrb
loope
rclb
cmp
jo
adc
int3
jbe
popl
sub
int3
cmp
fsubs
mov
fwait
in
mov
aaa
mov
push
sbb
pop
inc
call
push
repnz
adc
sub
fimull
sub
lret
test
inc
add
lods
jg
inc
in
mov
mov
mov
lahf
mov
and
lods
jmp
push
cmp
sti
imul
sub
divl
movsb
lret
test
mov
or
sbb
mov
fsubl
and
shr
jecxz
ss
loop
or
stc
sbb
andb
adc
xchg
adc
in
or
out
xor
cli
add
dec
xor
mov
or
fs
adcb
mov
or
out
pop
xor
adc
std
imul
xor
pushw
jbe
sbb
aaa
pop
jae
test
sbb
int3
fdivl
sti
clc
push
jmp
sbb
push
nop
and
popa
inc
dec
adc
les
pop
repz
adc
xchg
shl
popa
lea
sbb
std
negb
sarb
pushf
std
lcall
movsl
push
mov
imul
aas
loop
fnstenv
call
dec
je
add
insl
fsubs
std
test
mov
mov
or
cmpl
xor
shlb
movb
das
into
sbb
mov
inc
dec
arpl
xor
pop
insl
popa
mov
mov
cmc
mov
mov
cmp
mov
js
and
ss
pop
mov
add
sub
cmp
ret
aaa
adc
es
pop
lods
frstor
js
clc
and
in
ljmp
cli
lods
xchg
mov
add
leave
push
mov
gs
add
cltd
addr16
test
shll
and
sti
test
xchg
sbb
rcrl
loop
stos
adc
mov
add
push
sbb
xor
cwtl
or
xor
xor
cmc
inc
mov
pop
xor
mov
adc
sbb
dec
mov
mov
inc
fwait
aam
push
scas
popf
jecxz
cmp
mov
ss
bound
addr16
in
push
sti
xchg
in
mov
xchg
xchg
addr16
cmc
nop
jp
lret
adc
cmp
ja
repz
repnz
loopne
pusha
mov
add
mov
mov
out
xchg
stc
mov
cmp
cmp
pop
sbb
mov
xchg
or
andb
sti
mov
jnp
dec
push
jle
loop
push
cltd
push
jge
xchg
cltd
aas
iret
test
ja
pop
adc
testl
or
shlb
inc
fisubrl
inc
xchg
xchg
xchg
push
xchg
sbb
mov
imul
xor
push
addr16
fildll
sarb
mov
lods
jne
leave
sbb
mov
arpl
in
addl
jae
pop
xchg
xor
aaa
addr16
or
add
int3
test
adc
jbe
jns
mov
les
dec
outsl
scas
mov
sbb
mov
push
fmuls
mov
mov
cmp
enter
daa
xchg
mov
xlat
jno
mov
jb
jae
add
mov
movsl
cwtl
out
and
out
add
fistl
pop
inc
ljmp
push
cmpsb
pusha
insb
jo
xor
fs
inc
lcall
push
sub
loope
xorl
in
ds
rclw
cmpsl
daa
das
loope
loop
ja
xchg
sbb
add
xor
inc
andb
int
sub
add
jge
lcall
mov
sub
pop
stos
outsb
xchg
push
test
inc
cmp
stc
adc
mov
push
scas
mov
lret
sbb
push
sbb
add
mov
ret
and
ss
adc
sbb
loopne
sarb
decb
imulb
cmc
sbb
jns
sub
outsl
adc
and
stc
rcrl
pusha
adc
and
aas
mov
push
pop
out
sbb
cli
xor
xorb
pop
cmp
loope
or
insb
repz
sub
pop
xor
sbb
adc
xor
mov
test
cmp
adc
ss
sub
imul
in
aaa
push
idiv
cmpsl
sub
cmp
sub
mov
mov
dec
pop
or
pop
lods
dec
fnstenv
out
mov
repz
inc
and
repz
jl
pop
pop
cmp
adc
cli
jnp
test
pusha
jmp
pop
mov
or
repnz
and
mov
aas
cmpl
dec
push
shlb
sub
jecxz
push
fadd
stc
test
movsb
cwtl
inc
and
inc
xchg
adc
mov
es
dec
in
inc
cmp
in
jbe
enter
in
pop
lock
sub
lods
pmullw
pop
mov
and
repnz
jg
hlt
not
in
insl
dec
shr
dec
xchg
test
mov
xchg
sbb
add
or
mov
and
shrl
dec
shrb
std
sub
push
jns
push
adc
and
test
clc
pusha
iret
int3
xchg
cmp
ljmp
jno
repnz
mov
and
cmp
xchg
pop
in
adc
push
sahf
movsl
flds
aad
push
in
in
sub
mov
sbb
jno
pop
mov
int3
stos
add
out
rorb
add
insl
lods
mov
dec
fwait
inc
xor
icebp
test
push
orps
xor
xchg
sarb
cmc
pushf
sbb
rolb
ja
arpl
xchg
ss
inc
sbb
decl
and
push
dec
pcmpeqw
call
je
test
adc
sahf
jns
js
in
shll
xor
sbb
pop
data16
popf
ss
test
pop
mov
out
cwtl
dec
aad
and
mov
cli
adc
les
mov
stos
mov
arpl
loop
add
xor
gs
add
cmp
xlat
or
insb
in
cmp
dec
jle
popl
push
loopne
mov
iret
or
popf
ret
and
out
inc
mov
out
and
sbb
or
dec
cmp
inc
cmp
out
fcmovu
fstps
ljmp
imul
imul
xchg
insb
lahf
mov
add
push
leave
xchg
pop
out
movsl
lahf
mov
inc
jnp
or
jmp
and
sbb
add
adc
int3
loop
leave
pop
jge
mov
xor
iret
outsb
test
and
cmp
jnp
pop
movsb
adc
xchg
push
daa
stc
cmpsb
jbe
out
mov
cmp
stos
daa
xchg
inc
jl
cmp
push
jl
popa
movsl
dec
loop
xchg
push
outsb
lahf
pop
lea
pop
fistpl
in
les
test
xlat
xchg
cmpsb
inc
mov
mov
jecxz
ficomps
pop
sarb
add
xchg
inc
loope
pop
loopne
sub
and
or
adc
sub
popl
mov
mov
jmp
add
xorb
adc
inc
dec
test
pusha
imull
or
sub
cld
je
lcall
mov
mov
sub
fwait
test
push
xchg
test
daa
cmp
pop
jg
in
mov
pop
inc
mov
pop
xor
inc
enter
js
dec
pop
nop
fsubrs
js
lret
iret
shll
mov
int
sahf
and
nop
cmc
loop
lods
xor
in
sbb
xchg
imul
fs
mov
adc
cmp
push
sub
adc
xchg
es
sbbl
addr16
inc
xor
bound
out
or
push
push
gs
loopne
or
pop
adc
or
imul
fimuls
data16
dec
sbb
lods
add
xlat
jne
or
mov
mov
cli
xchg
pop
add
aad
mov
push
dec
mov
jl
fldenv
add
repz
sub
or
pop
sti
addr16
ss
out
push
inc
push
jmp
push
ss
stos
mov
inc
mov
xchg
lcall
flds
jecxz
adc
cld
dec
xor
cwtl
cld
repnz
add
jge
sub
sub
adc
mov
mov
pop
sbb
jl
sub
mov
sbb
nop
mov
pop
in
cmpsl
ror
xchg
notb
cwtl
add
sti
mov
cmpsl
xchg
sbb
mov
push
fnstcw
cltd
aad
mov
sbb
insb
push
xor
sarb
and
test
cmp
mov
pop
into
movsl
int3
xchg
mov
fwait
xchg
leave
xchg
movsl
push
mov
popa
or
lods
pop
sbb
fcoml
inc
popa
std
xchg
cmc
mov
test
jo
data16
and
mov
dec
sbb
push
test
pop
fildll
cmp
sub
lret
fs
pop
pop
test
out
and
add
mov
out
bound
pop
ficoml
or
xchg
jb
jle
mov
das
aaa
mov
mov
mov
outsb
dec
mov
cmpsb
or
mov
pushw
hlt
out
mov
lret
pop
mov
test
arpl
fiadds
jno
fcompl
jo
pop
xchg
sub
popa
mov
addr16
pop
jp
cmp
mov
adc
mov
push
jg
dec
mov
jle
pusha
repz
sub
jno
mov
lods
sbb
gs
push
popf
pop
lret
lret
push
adc
add
daa
insb
pop
jb
jnp
jmp
jle
xor
daa
punpckhbw
inc
sub
ret
in
pop
orl
xchg
push
addr16
and
push
cmp
pop
or
enter
mov
and
sbb
xor
dec
scas
sbb
ret
vpavgw
mov
push
sub
leave
or
lock
andb
int
jle
movsb
jge
popf
xchg
pop
adc
or
dec
sbb
int
cmp
pusha
fidivrs
pop
jo
movsl
jecxz
sarb
xor
push
jbe
xlat
jbe
fisttpll
in
and
mov
daa
xchg
push
sbb
outsb
in
lods
jno
pop
inc
jl
add
mov
push
pusha
into
movsl
cmpsb
ss
mov
pushf
call
cmpsb
je
jmp
fwait
push
mov
mov
push
pop
orl
cmp
sbb
lds
mov
sub
push
push
fldcw
loop
cltd
ret
pop
lds
lahf
int3
mov
sbb
adc
xor
xor
fidivrs
int
mov
sub
xchg
fs
mov
sub
mov
pop
test
scas
jnp
adc
mov
adc
mov
jns
push
pop
or
adc
push
xchg
add
movsl
sar
test
test
aas
sbb
push
dec
cmc
test
gs
shrl
loop
out
stc
aas
add
mov
ss
cwtl
scas
mov
mov
out
jno
cli
lcall
cmp
mov
sub
stos
loopne
add
pop
jae
mov
mov
pop
outsb
adc
test
fisubs
mov
sbb
call
jno
sub
adc
mov
or
mov
incb
jl
nop
mov
push
dec
pop
lds
addb
les
loope,pt
sbb
shll
jp
push
pop
jmp
repnz
jmp
dec
or
into
mov
inc
xor
jne
mov
stos
or
jp
dec
inc
xchg
add
jle
lcall
std
jns
or
les
mov
xchg
push
fildl
jl
push
dec
loope
jnp
inc
lock
xchg
das
imul
mov
in
rcl
sbb
mov
push
dec
jge
sub
mov
aas
fisttpl
lret
or
mov
mov
sub
scas
mov
sbb
rorb
mov
and
aam
mov
ret
in
jmp
sub
popf
fstl
jmp
xchg
in
fsubr
and
ds
pop
rcrl
enter
xchg
mov
es
cmp
xor
dec
mov
lahf
add
lret
jle
shll
push
movsb
dec
sti
or
les
aas
sbb
lock
shll
jl
pop
or
ss
fimuls
out
xchg
lods
add
mov
dec
pop
xor
imul
mov
jbe
ds
xchg
ss
mov
inc
leave
cwtl
ja
jg
dec
jnp
xchg
xorl
out
jg
push
xchg
test
mov
lret
dec
out
inc
mov
jno
and
sbb
dec
xchg
shll
sub
jo
mov
addr16
jp
and
xchg
out
mov
les
mov
pusha
mov
filds
dec
jmp
jmp
pop
mov
out
xchg
popf
subb
push
push
cmp
mov
xchg
ljmp
or
loope
jle
lds
adc
xchg
daa
iret
mov
ret
fcompl
pop
dec
inc
mov
jmp
push
sti
mov
or
inc
and
inc
cmp
lods
fiaddl
mov
sbb
mov
imul
mov
je
sbb
leave
pop
lret
pop
mov
leave
jg
mov
cmp
arpl
adc
inc
cmpl
mov
movsb
ja
or
movsl
adc
pop
fstpt
addr16
test
mov
and
mov
jmp
pusha
push
push
lds
jnp
or
jmp
jp
bound
xchg
loop
cmp
loop
jl
jge
dec
rclb
movsl
lods
je
and
push
sub
push
jns
dec
test
insl
fldl
jmp
cmpsb
jmp
mov
sub
add
jl
pop
jbe
loope
jne
sub
or
imul
fcmovnbe
cmp
mov
sbb
xor
lret
cli
repz
push
xchg
sub
xor
pop
cli
xor
iret
fsubl
repz
insl
data16
mov
stc
cmpsb
xorb
mov
mov
pop
inc
mov
test
mov
sti
and
leave
push
and
cmp
and
push
lret
xchg
rcll
ja
pop
enter
sub
cmc
jo
jo
cmp
push
outsl
mov
shl
mov
scas
cmp
lea
stc
shr
in
fdivr
lods
jecxz
decb
jno
ss
int
sub
add
sub
into
or
mov
fwait
shl
or
pop
xchg
mov
adc
and
roll
lock
ret
data16
cmp
repz
sub
shll
js
fdivr
mov
xchg
movsb
sub
aad
mov
and
test
mov
les
sub
sub
cmp
stc
call
adcb
movsl
push
pushf
test
pop
hlt
xor
mov
inc
xlat
subb
pop
enter
mov
dec
je
pushf
and
test
repnz
and
cwtl
jb
ret
mov
and
sbbl
jno
sahf
pop
mov
dec
mov
sbb
xor
push
das
dec
shlb
mov
inc
inc
sbb
fildl
insb
insb
pushf
pop
out
std
cld
mov
cmpsl
xchg
cmp
mov
push
jb
cld
xchg
sbb
ja
xchg
mov
sbb
mov
cmc
shl
jno
sub
test
push
jg
ret
jae
pop
es
or
pop
clc
adc
ficoml
xchg
push
mov
ss
lods
xor
mov
lea
jmp
ucomiss
loopne
mov
shlb
test
cmp
jne,pn
bound
call
sbb
mov
pop
mov
shrl
jmp
fs
add
test
xor
inc
les
mov
jecxz
mov
and
mov
ljmp
ja
push
dec
dec
outsb
shlb
inc
loope
lea
out
insb
fwait
push
inc
addr16
cmp
inc
jne
mov
inc
out
and
frstor
in
jns
xorb
repnz
mov
xor
push
lds
icebp
lods
fdivrs
jle
mov
sub
in
xor
dec
jle
fsub
shrb
fbld
test
aam
jmp
and
adc
out
ds
ficompl
stos
adc
insb
and
fldcw
push
jle
dec
loopne
mov
movsb
adc
adc
and
mov
icebp
or
sahf
jae
stc
mov
or
mov
mov
test
sbb
add
imul
rol
sti
sub
shl
xchg
mov
stc
mov
leave
testb
hlt
xchg
or
adcl
rolb
mov
or
and
mov
mov
fiadds
cmpsb
js
loopne
hlt
scas
cmp
lock
dec
adc
movsb
mov
ljmp
adc
in
lock
jnp
jne
sbb
xchg
testl
jl
lret
das
into
push
push
pop
dec
das
movsl
mov
adc
lock
cwtl
lahf
dec
push
pop
push
dec
jp
test
cmp
pop
cmpsb
insb
push
or
push
ret
js
vmovhpd
int3
push
mov
adc
aaa
idivb
sbb
inc
ds
out
adc
adc
lahf
add
aaa
sbb
xchg
or
mov
mov
int
push
jge
pop
pop
jns
xlat
lcall
pop
fmull
cld
dec
outsb
sbb
mov
orb
jg
js
mov
ret
je
jne
cmp
and
mov
and
pop
adc
fsubrp
aam
xor
and
out
leave
shrl
mov
mov
sahf
or
cmp
aaa
clc
fidivs
xchg
sbb
xchg
mov
cmp
lods
out
fs
or
ss
lret
lds
aam
push
jo
dec
cli
add
sarl
or
arpl
out
arpl
gs
push
sub
pop
mov
xchg
popa
and
adc
jno
add
mov
lods
and
idivb
pop
pop
mov
sub
nop
mov
in
jecxz
add
arpl
paddd
cs
fsubrs
mov
aad
imul
and
les
pop
insl
xchg
lahf
adc
call
js
xor
dec
out
sbb
fwait
jnp
pushf
push
std
test
and
cmp
aas
fwait
incb
and
aas
std
call
push
dec
xor
fbstp
xchg
jecxz
in
push
movb
out
sub
pop
push
test
leave
xorl
mov
pop
push
fsubrs
mov
jg
das
sub
mov
sti
mov
cmpsb
sarl
imul
jae
cmpsl
nop
adc
insl
and
icebp
in
sub
cld
mov
xlat
lret
out
out
or
mov
cmp
daa
mov
dec
sub
mov
ret
add
adc
cs
fucom
xor
pop
dec
xchg
shlb
sub
inc
bound
jbe
mov
lret
push
add
sbb
int
mov
xchg
repz
lea
push
lock
dec
leave
or
test
sbb
xchg
scas
jp
rclb
and
inc
stos
mov
jne
add
fld
fcos
les
mov
sbb
dec
or
icebp
add
mov
es
mov
mov
stos
add
popa
outsb
mov
or
ret
mov
push
fisttpll
sub
add
stc
bound
and
jge
jecxz
outsl
lds
mov
scas
jne
ds
in
or
mov
jp
cs
mov
mov
aad
in
fldenv
filds
pop
xchg
dec
jg
jmp
lock
add
out
imul
mov
rorb
jo
xchg
sbb
insb
cltd
pop
add
sbb
cld
adc
adc
mov
mov
pop
sub
inc
mov
mov
popa
dec
aad
or
call
inc
cmp
fisubrl
je
sbb
sub
cwtl
jo
scas
inc
xor
and
lcall
or
dec
inc
test
shll
adc
sub
inc
xchg
fistpl
mov
lret
aaa
and
nop
or
xchg
add
or
mov
imul
fisubs
out
xchg
jo
shlb
sbb
and
push
cmc
aaa
movsb
inc
dec
or
arpl
jbe
pop
dec
in
xlat
je
enter
daa
nop
nop
xor
jno
push
and
cmp
sahf
enter
lods
jno
mov
adc
push
mov
test
add
xor
cmpsb
out
push
scas
pop
clc
jge
js
popl
pop
andb
loope
pop
shrl
fmul
cmp
cmpsb
mov
inc
subl
shr
cwtl
mov
sbb
xchg
sub
xor
xor
push
jbe
int
cmp
sub
xor
clc
add
cld
push
loopne
xor
inc
sub
jge
test
inc
jg
pop
mov
mov
test
mov
push
push
and
push
sub
fwait
cmp
cltd
imul
icebp
out
lret
ja
ret
insb
or
rorb
sahf
scas
sub
cmc
cmp
xor
jmp
jo
xchg
loopne
add
fs
push
fs
push
add
jb
or
iret
xchg
sbb
outsl
push
stos
cli
xor
test
inc
cmpsl
or
jge
into
rolb
gs
pop
loopne
push
xchg
cli
out
adc
cwtl
imul
gs
data16
add
bound
sarb
cltd
dec
jno
jae
inc
pop
jmp
dec
btc
loope
ljmp
nop
inc
lock
xor
and
les
mov
int
xchg
bound
adc
mulb
idivl
pop
add
push
pushf
decl
notl
enter
dec
aas
pushf
or
les
cmpsl
and
ja
jg
mov
dec
std
outsb
rcrb
add
mov
aam
dec
lds
fcmovnbe
dec
rcrl
enter
xchg
lock
push
or
xchg
mov
or
mulb
in
xor
dec
outsb
jnp
cmpsl
outsb
mov
icebp
les
mov
lret
push
scas
jle
aas
and
es
js
xor
mov
xor
pusha
xor
ret
xchg
sub
es
inc
fisttpll
add
clc
xchg
mov
adc
popa
fs
adc
xchg
xchg
adc
push
call
add
insb
cwtd
mov
dec
test
lds
push
mov
out
xor
xor
sub
sbb
sbb
daa
lcall
stos
mov
iret
add
hlt
mov
mov
or
push
and
sub
mov
ja
out
push
xchg
dec
push
mov
orl
bts
addb
jne
xor
fildll
bound
sbb
jns
push
xchg
xchg
mov
push
mov
dec
addr16
mov
fbstp
xchg
nop
mov
sbb
es
push
pusha
pop
xlat
ret
fistps
clc
xchg
sbb
rcll
adcl
out
or
popf
cmc
lcall
adc
les
dec
insb
dec
insb
add
cmpl
and
cmp
push
inc
xor
adc
jne
ret
jns
pop
pop
pushf
inc
ret
jae
loope
push
inc
pushf
pop
or
mov
ss
mov
push
ficompl
pop
xchg
popf
orb
push
and
imul
cmp
or
jg
sbb
or
lahf
or
leave
in
popf
hlt
sbb
cli
arpl
mov
jge
pusha
jnp
inc
dec
jno
loope
outsl
or
repnz
adc
dec
inc
push
xor
xchg
inc
xor
das
adc
mov
push
mov
mov
inc
sbb
in
mov
je
daa
lods
sbb
cmp
dec
jno
dec
mov
inc
dec
or
add
movsl
ret
and
xchg
je
xchg
jge
repnz
adc
cmpsb
inc
pop
cvtpi2ps
pop
shll
out
and
rcll
mov
test
outsl
stos
shrb
push
xor
jbe
out
gs
ja
mov
xor
sbb
sub
cmp
dec
xor
add
xor
xor
adc
mov
sub
incb
ja
push
push
push
jmp
or
mov
mov
xor
jg
inc
dec
mov
xor
bound
mov
and
and
stc
push
sub
pushf
fcoms
divl
dec
int3
rcrl
mov
sbb
shl
fldl
xor
lcall
in
stc
sbb
iret
adc
bound
mov
ljmp
lret
out
push
cmp
inc
xor
insb
pop
or
inc
into
mov
popa
gs
loopne
pushf
pop
out
mov
adc
cmp
mov
add
xchg
aam
hlt
xlat
mov
push
mov
mov
test
aad
imul
dec
xchg
outsb
aaa
inc
into
cwtl
pusha
fnstcw
cmp
xchg
push
repz
test
lea
clc
call
jbe
and
and
pushf
stos
lock
cs
lds
sub
jb
mov
mov
xchg
jecxz
ror
or
std
adc
mov
mov
push
and
push
push
and
adc
cmpsb
rcrl
inc
mov
es
lock
push
ds
out
mov
mov
adc
cld
mulb
fsubrl
sub
dec
cmpsl
mov
mov
fwait
push
mov
pop
push
cld
mov
stos
xor
jae
stos
pop
xchg
cmc
pop
addr16
aam
jecxz
ret
and
add
xor
movsl
fnsave
mov
adcb
cmpl
mov
mulb
ficoml
or
cmovnp
xor
cltd
call
out
or
jbe
call
test
fldenv
ret
sarl
out
mov
jbe
lcall
add
bswap
mov
xor
mov
sbb
xchg
lret
mov
xor
dec
inc
ret
cmpsb
xor
lret
fwait
stos
sbb
push
and
jne
adc
cmpsb
out
mov
cmp
notl
in
xchg
ret
cmp
or
mov
addr16
popa
xor
subb
mov
subb
dec
daa
jge
in
pop
mov
movsl
lahf
fistpll
addr16
lock
jmp
xchg
and
out
hlt
sbb
popf
sbb
mov
push
push
stos
push
stos
insl
rcll
outsl
in
jnp
pusha
loope
pop
mov
aas
adc
push
out
xchg
stc
push
inc
int
inc
jae
mov
cmp
das
jecxz
inc
ss
fimull
and
xchg
hlt
mov
sbb
repnz
imul
scas
or
push
shlb
add
repnz
hlt
addr16
arpl
pop
inc
lea
rcrl
dec
pop
aaa
mov
pop
pop
add
jl
xchg
sahf
cmp
jmp
inc
xor
icebp
loopne
scas
and
ret
cmp
je
movsb
push
xchg
push
add
and
dec
movsl
in
movsl
mov
enter
daa
mov
cmp
sub
pop
insl
jl
cmpsb
mov
or
rorb
leave
push
and
and
lahf
cmpsb
or
push
lds
dec
push
cltd
push
and
inc
call
add
add
push
pop
fabs
xchg
sub
mov
dec
ds
add
movsb
sub
std
cmp
repnz
mov
adc
popf
xlat
shll
mov
sub
test
lcall
outsl
fmull
inc
pop
outsb
inc
mov
test
jbe
jg
das
xorb
repnz
mov
xorl
xorb
mov
imull
mov
shl
push
mov
sbb
sahf
hlt
divb
cmc
mov
mov
outsl
cs
loop
addr16
stc
rol
loopne
pop
dec
add
xor
pop
shrl
lds
out
shl
cli
cltd
mov
xor
mov
or
fbld
gs
iret
loopne
hlt
test
adc
or
hlt
adc
adc
data16
sbb
pmulhuw
sub
adc
xor
jo
test
xor
pmullw
pop
adc
bound
fnstenv
cmp
repz
sub
stc
repz
cmc
sbb
push
dec
pushf
push
sub
jmp
sahf
xor
mov
or
aas
fisubl
jb
rcrl
or
sub
push
stos
and
mov
add
mov
jne
ja
int
pop
in
cmp
cs
pop
cmp
dec
xchg
lock
cmc
jnp
or
inc
mov
pushf
test
cmp
test
outsb
insl
cltd
mov
dec
fs
mov
icebp
jb
xor
pushf
mov
roll
lods
pop
mov
rcl
cs
sub
in
aam
add
scas
cmpsb
and
mov
adc
pop
push
mov
std
push
pushf
xchg
pop
push
jmp
arpl
les
hlt
mov
lahf
fwait
nop
push
xchg
push
jns
stos
mov
pop
cltd
pop
pop
adc
lcall
mov
test
sbb
cs
or
pop
pusha
pop
xchg
stos
mov
out
jne
mov
add
jmp
mov
adc
cmpsb
xor
adc
mov
das
dec
fs
in
stos
scas
ja
leave
lods
dec
cmp
inc
cmp
cmp
mov
mov
jne
push
xorl
push
sbb
in
pop
and
pop
cltd
mov
cltd
in
cmp
repz
pop
or
adc
in
movsl
clc
jp
jae
mov
adc
mov
out
add
or
xor
out
mov
fistps
mov
jmp
push
testl
out
movsb
sbb
sub
cmp
aas
or
js
or
push
jnp
sub
jle
sti
jae
rcrl
sti
iret
mov
fsubrs
int
movb
jae
fmuls
or
stos
test
mov
mov
shll
sbb
xchg
pop
imul
scas
outsb
mov
sbb
push
mov
repnz
xor
sarb
hlt
mov
add
inc
nop
and
sbb
cmp
add
xchg
dec
lret
pop
pop
and
mov
xor
dec
sbb
push
mov
cmp
movsb
loope
and
shrl
lret
in
mov
es
daa
lea
cmp
xchg
xor
enter
jmp
pop
push
mov
xchg
and
lahf
push
cwtl
xchg
dec
test
fs
inc
ja
mov
pop
insl
repz
js
dec
pop
aas
cmp
push
push
push
loope
sub
sub
lds
ds
addr16
adc
jg
decl
cmovno
mov
sub
loop
adc
lcall
sub
hlt
pop
jne
xchg
lcall
pop
fdivl
loopne
outsb
cmpsl
rolb
sbb
xorb
ss
jae
mov
clc
mov
xor
and
repz
xor
lret
imull
lods
fwait
lret
sub
mov
push
add
repnz
imul
push
sub
add
outsl
or
sbb
stc
mov
mov
cmp
lods
data16
mov
cmpsb
xchg
insb
fld
cli
int3
faddl
cmp
cmp
or
pop
pop
into
jnp
sbb
ljmp
sub
outsb
fwait
imul
inc
add
jae
sbb
dec
mov
loop
add
fs
sub
pop
sbb
push
ret
pushf
aad
aaa
xlat
nop
xor
xor
fld1
cwtl
hlt
fnsave
add
xor
sbb
lea
test
addr16
data16
je
cltd
pop
sbb
inc
adc
cmp
pushf
add
jmp
cs
and
gs
pop
mov
and
jns
test
dec
push
jl
je
ds
jecxz
les
adc
std
arpl
cwtl
sbb
dec
mov
pop
call
orl
sahf
fistpl
add
cbtw
mov
into
data16
lods
stos
das
movsl
data16
mov
xlat
add
shl
dec
int3
imul
sbb
pop
or
mov
insl
mov
dec
andb
mov
sub
and
test
sar
rolb
nopl
inc
add
aam
jne
ret
ds
inc
cmp
mov
clc
cmp
sti
xchg
pop
test
popa
test
add
mov
out
fists
scas
gs
sbb
sbb
push
xchg
sub
jmp
push
cld
push
dec
gs
cmpsb
call
or
sub
push
pop
or
dec
stos
js
xor
fcomps
insb
add
inc
sbb
cmp
fs
or
mov
mov
mov
xor
mov
test
push
ja
xor
inc
aam
mov
arpl
push
imul
stos
mov
movaps
jl
inc
push
jns
push
sub
test
adc
mov
call
pop
or
dec
inc
addr16
insl
lret
bnd
lahf
push
sti
mov
mov
in
hlt
sbb
cmc
jne
pusha
xor
fistpll
cmp
bound
xchg
sbb
bound
cli
lahf
jnp
push
jbe
fcompl
into
push
sub
and
adc
ja
or
dec
push
push
sbb
xchg
adc
iret
add
ret
aaa
pop
add
pop
inc
jecxz
divb
cmp
or
and
dec
jg
je
xchg
xchg
mov
or
imul
ror
push
lds
add
add
cwtl
xchg
or
movsb
cmp
std
add
inc
xchg
lods
jg
aaa
dec
add
ja
mov
or
adc
int3
cmp
pop
cmc
dec
fidivs
mov
mov
jo
push
gs
xchg
aam
and
into
fstpt
xor
push
lahf
fstpt
or
sbbb
pop
adc
daa
mov
cmp
fidivrs
xor
mov
dec
pop
pop
mov
xchg
push
movsl
xlat
sbb
and
xchg
in
in
imul
push
das
dec
dec
inc
push
xchg
sahf
cmpsb
sti
mov
js,pt
subb
adc
sbb
mov
cwtl
sub
mov
cld
ds
icebp
xchg
adc
pop
jecxz
cmp
insb
andb
mov
add
and
mov
hlt
pop
frstor
sub
sub
hlt
rol
lcall
dec
fsub
xchg
jo
imulb
loop
test
jg
adc
or
out
cmp
dec
lods
push
xor
jbe
orl
lret
cltd
rcrl
leave
mov
pop
xor
sbb
xor
push
in
pop
shl
sub
mov
outsl
xorb
push
shrl
mov
arpl
xor
loopne
cmp
loopne
or
dec
jnp
stc
pop
xchg
loopne
loope
pop
dec
mov
adc
sbb
andb
add
lea
sub
sbb
test
in
insl
adc
jg
sbb
or
into
pop
mov
aad
mov
nop
mov
xor
push
incb
dec
xchg
fstps
shl
call
inc
jno
outsb
addl
repz
jecxz
into
mov
adc
inc
pushf
stos
adc
jmp
xorb
loop
out
inc
jns
and
jb
xchg
std
dec
test
mov
add
std
or
stos
cwtl
aam
xorl
gs
push
das
pop
sub
mov
mov
lock
jp
das
test
push
mov
mov
psrlq
mov
insl
bound
dec
mov
insb
cmp
icebp
and
jae
mov
lret
adc
mov
and
inc
dec
jmp
rcl
xor
sub
or
adc
repz
int
push
es
das
mov
jae
dec
xchg
popf
sbb
dec
add
lods
mov
daa
mov
pop
rorb
sub
sbb
xchg
add
cltd
lea
test
fildll
cwtl
adcb
insb
push
dec
int3
test
jnp
xor
xor
fcmovnbe
aas
roll
insb
dec
stos
addr16
xor
cmp
aam
sbbl
fildll
xor
xorl
mov
xor
push
out
pop
arpl
dec
sbb
and
imul
or
pop
sbb
push
or
pcmpeqw
icebp
push
mov
and
bound
or
jecxz
in
in
xchg
cli
iret
dec
mov
pop
xchg
cmp
addr16
cltd
jp
adc
xor
mov
cli
gs
rcrb
jg
lret
mov
fldt
xchg
imul
addr16
out
mov
out
andnps
mov
hlt
stos
stos
or
insb
mov
outsl
jnp
or
mov
pop
cltd
inc
adc
pushf
jae
pop
push
cs
jp
cmp
jno
insb
loopne
push
push
pop
outsl
or
mov
sub
daa
shr
stc
sbb
sbb
push
sahf
imul
scas
xor
or
and
xchg
stos
mov
jmp
clc
leave
shrb
arpl
stos
sarl
ficomps
xor
xchg
aaa
mov
cmp
shld
aad
pop
and
xchg
mov
add
sub
jnp
sbb
ljmp
push
out
sub
push
xchg
ss
pop
mov
add
cmp
aas
aad
or
xor
dec
leave
sub
push
imul
iret
and
in
push
ds
test
cli
ds
xchg
mov
xor
mov
das
xlat
pop
mov
push
loope
ds
mov
ds
outsl
sti
adc
xor
push
sbb
xor
and
pop
xor
sbb
call
mov
lcall
mov
mov
dec
outsb
insl
out
test
repz
in
mov
jg
or
mov
test
mov
xchg
mov
push
aaa
xor
push
fadds
mov
lods
test
lret
insl
shll
lret
sbb
xor
loope
xor
mov
pop
stc
testl
adc
dec
lock
lods
xor
cld
mov
jno
cli
xor
xor
imul
or
out
jae
add
aas
pop
imul
push
int3
aam
push
mov
adc
test
add
xchg
mov
push
int3
cmp
mov
enter
imul
jge
scas
cltd
inc
addr16
xchg
dec
nop
mov
jecxz
sbb
xchg
push
stos
and
repz
xchg
xor
stc
inc
call
jb
and
stc
mov
movsl
jne
pushf
push
pop
jmp
lcall
imul
jge
mov
loope
adc
xchg
push
je
lret
adc
enter
cld
std
mov
imul
je
mov
int3
xchg
cmpl
cmp
mov
data16
mov
icebp
lock
pop
mov
mov
inc
ds
jbe
rcll
dec
subl
jbe
cmpsl
mov
sarl
add
lret
cmpb
pop
jbe
and
fbld
shlb
les
ret
pop
loopne
es
mov
je
clc
scas
jge
xchg
fdivr
push
ljmp
movsl
lods
and
xchg
mov
je
add
xrstors
dec
add
sbb
test
xlat
cmc
mov
pop
cltd
push
and
dec
xor
test
inc
test
sbb
inc
inc
pop
popa
aad
stos
push
daa
xchg
out
sahf
and
push
add
adc
jle
mov
or
sti
and
movsb
sub
cmp
cmpl
out
jge
or
mov
inc
add
jb
jbe
xor
scas
mov
out
loope
cmp
push
in
cmpsb
push
xchg
dec
rorl
bound
mov
addr16
mov
jl
mov
cmp
pop
dec
mov
cwtl
in
sbb
pusha
data16
test
xchg
cmp
sbb
push
bnd
mov
mov
out
repz
popf
mov
sub
dec
adc
stos
cmp
sti
and
mov
jnp
push
lods
jle
mov
adcl
mov
mulb
scas
inc
stc
cmp
lret
adc
or
sbb
push
fcmovu
pop
jns
push
fcmovb
sbb
jo
imul
subl
jno
shlb
xchg
repnz
leave
aaa
pop
hlt
xchg
loop
arpl
sbb
and
in
adc
pushf
lea
or
jecxz
add
mov
adc
lcall
jle
xor
pop
adc
scas
push
xchg
out
push
movsb
daa
cmp
in
lods
push
cmp
cwtl
imul
inc
fisubrs
push
popa
lods
daa
mov
enter
or
jecxz
dec
jl
shld
mov
lret
movsl
in
mov
sub
loopne
push
adc
test
lds
leave
cmpsb
add
dec
pop
loop
vmread
pop
cld
lock
testb
sub
and
cmp
rclb
adc
adc
out
neg
pop
orb
sbb
rolb
adc
xor
mov
jecxz
je
push
fsubrl
ficompl
scas
pop
repnz
in
lcall
fdivl
pop
adc
dec
push
je
shl
mov
scas
pop
lret
orb
in
jg
add
mov
mov
inc
mov
push
cmp
cmp
sti
jnp
imull
arpl
mov
jmp
jmp
mov
sahf
addb
cmc
test
mov
outsl
stos
pop
outsb
loop
jne
stc
scas
adc
or
jno
jg
add
mov
mov
jle
imul
repnz
cmpsb
cmp
je
push
into
and
xor
pop
fs
xor
jle
mov
pop
adc
leave
sub
popf
adc
xorb
inc
lock
dec
jle
cmp
or
xlat
jmp
mov
repz
mov
rclb
jle
sub
sub
mov
nop
addr16
rorl
aam
sub
sub
and
mov
cmpsb
arpl
fsubrs
inc
pop
xor
adc
cld
inc
sbbl
or
push
inc
scas
stos
fdivrl
push
cmp
addr16
jae
std
je
xor
sbb
lret
lock
mov
inc
mov
shl
ds
push
test
pop
pop
leave
shll
jp
test
or
das
inc
mov
xlat
fnstcw
mov
enter
in
fcomi
mov
pushf
insl
xor
xor
cmpsl
mov
shlb
icebp
into
cmp
cld
fisubrs
jecxz
cmp
test
pop
pop
xor
cmp
sub
lcall
jmp
sbb
ret
xor
popf
xlat
clc
jmp
add
ljmp
movsl
lods
mov
pop
mov
movsl
mov
xchg
mov
ss
sahf
mov
push
aas
fstps
loope
pop
mov
jbe
push
inc
int3
inc
dec
lcall
xchg
addb
add
xor
in
inc
hlt
inc
out
add
xchg
add
xchg
xor
sbb
sbb
or
imul
and
lds
xchg
mov
mov
fldcw
cli
dec
push
movl
int
fwait
xchg
fimull
push
push
mov
jne
and
inc
mov
pusha
bound
aad
dec
mov
test
sub
das
out
stos
addr16
test
mov
cmp
mov
stos
add
xchg
into
mov
or
push
fistps
out
xchg
pand
jmp
jge
push
subl
xor
fisttps
mov
stos
lods
adc
in
dec
insb
xchg
inc
jnp
clc
add
into
out
push
in
and
adc
mov
mov
mov
es
test
fcompl
push
clc
orl
mov
sbb
mov
xchg
cmpsl
mov
ja
and
jp
xor
sbb
mov
jge
repnz
in
scas
mov
hlt
arpl
add
sbb
mov
mov
lahf
sub
pop
adc
ficomps
xchg
xor
mov
std
fisubl
mov
imul
push
mov
jns
sub
scas
enter
daa
mov
mov
jno
loope
jl
sti
pop
dec
cmpsl
adc
push
das
adc
movsl
in
add
enter
inc
fbstp
in
xchg
nop
sbb
inc
mov
fsubs
or
ja
xchg
pop
cmp
shrb
cmp
sub
xchg
outsb
cmp
dec
notl
jmp
imul
xchg
jne
add
or
push
pop
jae
cmpsb
in
mov
int
shrb
push
repz
jno
iret
lcall
sahf
fsub
decl
outsb
xor
add
and
les
sub
cmc
mov
dec
ret
and
adc
cmp
daa
sbb
add
imull
insb
jge
jg
or
mov
lea
scas
xchg
fwait
sahf
and
pop
xor
push
outsl
mov
jle
gs
fs
int
rcl
ss
lods
test
lods
pop
out
sbb
nop
jmp
test
jecxz
daa
into
pop
adc
gs
decl
loopne
fstpt
adc
stc
imul
pop
add
or
jae
out
cmp
add
xlat
sub
sub
out
pop
cmpsl
sub
js
sti
fldt
fists
jmp
inc
push
stos
dec
int
roll
push
fld
dec
inc
les
insb
add
jno
cwtl
xchg
mov
mov
call
jo
aaa
pop
out
jb
push
outsb
pushf
lods
stos
cmp
cwtl
push
scas
lods
imull
out
inc
lret
aas
cmc
jge
jb
aas
xchg
dec
ljmp
jecxz
fldl
inc
into
std
incl
cwtl
add
sahf
mov
push
test
arpl
sbb
aaa
pop
insb
xor
in
gs
lahf
das
and
fsubs
mov
cmpsl
and
dec
into
shll
xchg
push
div
xor
dec
dec
add
mov
mov
movsl
adc
lret
pop
es
mov
xchg
or
adc
shrb
and
aam
mov
jp
cmpsl
es
and
clc
and
rclb
mov
add
lods
idivb
mov
enter
add
int
fabs
addr16
cwtl
jecxz
xor
and
xlat
push
push
or
mov
test
idiv
xchg
ret
adc
mov
fisubrs
add
stc
fdivr
add
cmpsb
pop
xor
je
xor
stos
xchg
mov
ds
mov
xchg
add
ja
clc
jmp
inc
xor
mov
fwait
lds
push
cmc
ror
jne
push
xchg
mov
int3
push
out
clc
cld
jmp
das
mov
jns
cmp
aad
add
call
and
or
mov
pop
jp
divl
sti
pop
cmpl
push
xchg
in
push
or
and
fistpll
sub
xchg
loop
mov
ds
xchg
dec
data16
push
push
lcall
jns
push
lret
stos
pop
movsb
repnz
stos
loope
icebp
pop
push
jle
add
push
xor
jl
mov
vhaddps
ret
out
pop
loopne
fadds
scas
jae
imul
push
xor
fcmovnu
inc
mov
xchg
inc
stc
sbb
sub
imul
sti
scas
pop
test
lds
mov
mov
in
mov
and
adc
arpl
pop
lods
jge
cwtl
sbb
divl
sbb
das
or
adcl
out
test
mov
rcr
inc
xchg
xor
adc
xor
and
push
movsb
cwtl
pop
jns
fldt
in
bswap
cmp
dec
lcall
cmp
into
in
lahf
mov
and
adc
movsl
repz
mov
lahf
pusha
loop
push
mov
das
test
pop
or
inc
inc
pop
and
xor
cld
pop
jp
mov
loope
push
das
cmp
lods
sbb
pop
mov
cli
rol
ds
mov
dec
subb
sbb
xchg
in
jb
aam
in
loopne
imul
pop
lock
int
dec
push
mov
add
mov
sub
sbb
scas
lods
test
daa
jg
or
mov
mov
jle
inc
decb
cmp
jno
shl
jmp
pop
cmp
jnp
cmp
fwait
in
ds
cmc
ss
sbb
lret
outsl
push
mov
stc
sbb
outsl
fmull
mov
hlt
mov
mov
cli
lret
and
xor
xor
mov
xchg
into
ljmp
loopne
lods
cs
enter
int3
pop
imul
xor
dec
xchg
cmp
pop
xlat
imul
sbb
cmpsb
mov
sti
mov
incb
das
mov
nop
sbb
jno
inc
push
adc
add
adc
mov
inc
cld
xor
cs
dec
call
out
pop
out
pop
lcall
pushf
push
fcmovu
jmp
jp
cs
mov
jb
inc
in
jo
xchg
ret
push
mov
popa
add
jecxz
int
and
std
cmpsb
jne
cwtl
rcr
mov
js
mov
cmp
addl
jle
fisttpl
fstps
mov
mov
inc
jle
shlb
add
mov
push
xor
ss
roll
push
xchg
insl
add
dec
inc
arpl
mov
jl
or
xor
xlat
lret
int
sahf
mov
xchg
or
mov
jo
or
and
fisubrs
sbb
cwtl
aam
lahf
cmc
ret
or
es
xorb
inc
pushf
insb
clc
pop
fmulp
xchg
cltd
xchg
add
popa
sbb
aam
popa
stos
dec
mov
jmp
sbb
mov
in
pmulhuw
cltd
imul
mov
jnp
push
lret
sti
rorb
cld
test
sub
xchg
adc
sti
rcr
les
pop
bound
loope
and
popa
out
cmpb
lcall
jb
add
dec
xor
sub
mov
inc
and
inc
pop
dec
addr16
ja
hlt
ja
in
jmp
or
lea
hlt
call
icebp
jne
in
mov
in
imul
ret
jns
popf
pusha
out
xchg
ss
inc
mov
mov
sub
out
jle
in
imul
xchg
mov
into
frstpm(287
sbb
repnz
aaa
jl
fists
jle
mov
jne
xor
adc
out
push
cmp
mov
push
or
push
and
insb
pop
jg
jnp
divl
adc
dec
push
jnp
sbb
mov
push
iret
fstpt
ret
out
pop
pop
ss
sbb
cmpsl
jae
pop
mov
pop
bound
loop
cmc
push
scas
out
outsl
pop
xchg
push
repz
push
and
inc
incb
mov
aaa
test
hlt
je
pop
arpl
mov
fidivrs
movsl
scas
sbb
js
aaa
fsts
or
fimuls
int
push
int3
rcr
mov
loopne
pop
fisubs
loop
insb
jmp
ret
leave
and
imul
movsb
and
mov
pop
push
test
negb
inc
daa
xchg
dec
jno
filds
lret
dec
test
in
push
cmc
or
and
pop
scas
lahf
jg
test
mov
cmpsl
test
es
push
inc
shll
cmpsb
mov
je
std
scas
xor
mov
add
daa
adc
sub
icebp
push
cmp
ds
adc
mov
jge
addb
incb
cmpsl
pusha
sub
enter
subl
pop
fiaddl
outsl
sub
lcall
xchg
fdivl
leave
cmp
sbb
in
test
sub
stos
adc
lods
adc
shll
adc
inc
sub
fsubrs
push
imull
jmp
or
sub
cltd
cmc
std
adc
and
arpl
loop
mov
movsl
fs
in
adc
ss
cmpsb
lods
rclb
adc
rcl
cli
jg
xor
stc
daa
cmp
test
sarl
gs
clc
loopne
xchg
add
jae
adc
cmp
adc
pop
test
adc
orb
lods
mov
xlat
test
jno
dec
xor
mov
adc
inc
sti
cmp
and
and
add
clc
fdivl
dec
mov
mov
les
and
paddq
xchg
cmp
jbe
call
outsb
or
pop
dec
adc
adc
xchg
sbb
mov
les
bound
aas
xor
push
jb
or
dec
fdivs
je
aam
jecxz
add
and
cmp
cwtl
jnp
cmc
mov
xlat
jo
add
sbbl
sbb
pop
mov
xor
sbb
mov
and
rcl
push
mov
insl
ljmp
cmpsl
xchg
jl
imul
icebp
push
xor
jle
cmp
push
and
dec
aad
pop
into
cmp
repz
sub
hlt
iret
aam
or
ret
cwtl
cmp
es
pop
cmp
push
pop
clc
lcall
ljmp
jecxz
int3
lods
mov
lds
mov
nop
scas
mov
jae
cmovae
add
je
test
add
push
mov
dec
iret
mov
test
cmc
xchg
pop
xchg
mov
pop
or
repz
add
out
mov
cli
mov
xor
mov
xor
add
xchg
mov
or
ja
je
dec
fbstp
addb
sahf
or
stos
popa
fwait
and
xor
cmp
add
fisttpl
push
and
out
mov
bound
cmpsl
jns
cmpsb
scas
in
clc
cmc
xchg
test
mov
push
mov
or
mov
jp
mov
mov
push
lret
mov
clc
dec
pop
dec
aas
cmp
in
sbb
pusha
shr
add
jbe
push
xchg
mov
jmp
ficoms
dec
sbbl
or
inc
popf
push
mov
leave
mov
pusha
stos
add
xchg
pushf
insb
ja
jnp
sbb
mov
loope
adc
push
iret
cmp
push
pop
dec
repz
inc
and
sbb
or
pop
daa
mov
xor
stos
xchg
lods
inc
nop
sbb
das
sbb
pop
sub
enter
or
rcll
mov
in
mov
xchg
push
jge
xor
sbb
pop
shlb
cwtl
clc
lahf
or
out
aad
fsubl
mov
and
fiadds
aad
xor
leave
cmpl
into
dec
movsb
and
sbb
movsb
scas
xchg
cmp
lods
inc
jbe
and
dec
ds
dec
daa
xchg
cmp
adc
jl
mov
dec
hlt
lods
jb
fdiv
dec
movsl
add
pop
and
hlt
adcb
and
icebp
fisubs
pusha
shlb
cmpsb
or
xor
js
inc
movsl
pop
clc
sbb
add
loop,pt
sub
fbld
mov
pop
cmp
jl
xor
xchg
jp
sbb
mov
xor
str
add
push
sub
icebp
incb
out
std
fistps
bound
fsub
jmp
sub
test
in
test
out
mov
dec
sbb
mov
mov
ret
mov
dec
mov
push
inc
enter
movb
addr16
xor
mov
notb
or
repz
les
xor
xlat
or
sahf
ret
lahf
stc
mov
stos
adc
sbb
lods
mov
cmc
mov
jae
cli
xor
jno
and
loop
xor
icebp
into
mov
and
out
loopne
mov
push
inc
cmp
jb
shrl
mov
xor
add
fcompl
out
cltd
xlat
out
iret
sub
add
in
jl
jp
call
cmp
nop
sarl
xor
xchg
rolb
xor
les
inc
repz
push
xchg
add
cld
cmp
call
in
ds
add
outsl
adc
mov
lods
mov
jmp
mov
cs
dec
inc
or
push
inc
sbb
pusha
aas
rclb
jb
mov
stos
je
call
mov
fisubrl
std
hlt
mov
mov
mov
or
dec
mov
movsl
adc
jbe
xor
mov
pop
cmpb
add
shl
stc
jno
rcl
dec
dec
cmp
xchg
cmpsl
test
mov
sub
mov
aaa
lret
stos
addr16
in
and
out
aad
scas
pop
cmp
aas
sbb
push
pop
or
enter
cmp
iret
mov
cmc
clc
aad
fwait
xchg
pop
cmp
popa
dec
mov
lods
aaa
test
mov
xor
sub
push
decb
mov
fildl
xlat
sub
test
xchg
add
push
sti
cmp
lret
add
xchg
push
cmpsb
rorl
dec
shrl
outsb
add
add
mov
int3
xor
clc
sub
sub
xchg
mov
je
ja
ja
dec
rorb
orl
out
jne
shll
push
xor
inc
pop
jns
push
inc
in
pop
mov
mov
jle
sub
sbb
jl
in
sarl
dec
mov
mov
push
addr16
lahf
dec
and
sti
pusha
insl
insl
rcr
xchg
pop
jb
pop
ds
jmp
test
pop
ss
xor
popf
jnp
aas
mov
xchg
stos
js
push
and
mov
sbb
pop
sbb
adc
push
or
mov
iret
cltd
mov
push
pop
test
xor
pop
push
loop
cmp
mov
xchg
imul
pop
jmp
add
jecxz
faddp
dec
movsl
aam
sub
xor
fucomp
jmp
hlt
or
lea
scas
popf
inc
test
sarb
rcrl
dec
adc
push
sbb
sbb
sti
or
int3
cmpsl
rclb
ds
cmpsb
mov
xor
and
dec
scas
lods
rolb
in
inc
cld
cmp
movsb
cmp
or
jbe
push
in
ficoms
daa
test
mov
cmp
push
insl
dec
jl
hlt
mov
arpl
movsl
push
mov
daa
fsubl
xor
jo
mov
or
subl
ret
cmpsb
nop
push
loop
movsl
pop
inc
js
push
push
push
addl
aad
sub
mov
cmpb
push
outsl
rclb
aam
shll
dec
sbb
addl
ja
pop
add
mov
inc
int
pop
and
inc
sbb
pop
insl
push
jg
out
dec
push
mov
loop
sub
loopw
mov
dec
jp
popl
jg
sub
push
xchg
orl
sahf
xor
or
aam
dec
fsubs
imul
dec
cltd
roll
mov
dec
pop
sahf
scas
rolb
fcmovnu
fldcw
dec
push
loop
sbb
inc
cmpsl
lods
fs
jb
cld
pop
mov
push
jle
lods
sahf
dec
adc
out
cltd
scas
cli
fs
cmp
in
cwtl
jl
dec
xchg
lea
lahf
mov
ds
loopne
xchg
pop
pop
and
lds
adc
scas
adc
xor
ror
fstpl
and
and
xor
xor
out
sti
xchg
add
int
sub
nop
scas
mov
dec
dec
scas
or
fldenv
loopne
rep
dec
les
arpl
das
call
insb
cmc
or
mov
mov
scas
jg
pushf
pop
popa
jmp
ds
cmp
push
inc
xchg
insl
cmovo
scas
xor
jno
jb
movsl
in
dec
aaa
mov
shl
xor
lret
std
fwait
imul
pushf
addr16
and
call
dec
gs
popf
cmc
adc
pop
clc
inc
xchg
mov
or
lock
das
popf
mov
xor
jg
popa
shrl
mov
add
insl
mov
test
cmpsl
test
mov
add
cmp
mov
mov
mov
lret
fs
rcrb
arpl
mov
inc
es
bound
fnstsw
jae
xchg
push
iret
dec
ljmp
and
idivl
push
lock
push
inc
push
jmp
add
add
mov
mov
add
push
adc
adc
in
jb
jle
movl
in
arpl
stos
lock
out
lock
movsl
add
aad
xor
in
or
push
repz
cmpsl
mov
xchg
push
mov
adcb
ja
cmp
xchg
mov
mov
icebp
fwait
cmpl
mov
lret
je
cmc
bound
scas
jns
movsb
adc
add
mov
and
mov
sbb
sub
push
cmp
addr16
mov
mov
pop
ds
clc
mov
in
outsb
cld
pusha
or
fbstp
and
xchg
je
ja
jp
xchg
out
int3
dec
popf
mov
push
adcb
add
inc
or
in
jnp
mov
jle
add
push
push
test
sbb
test
adc
pop
mov
jae
fnstcw
or
std
aas
hlt
inc
sub
lock
pop
sbb
xchg
int3
mov
cmc
pop
inc
sahf
mov
xor
test
add
jp
push
fs
hlt
or
inc
stos
dec
sarb
icebp
pushf
sbb
jnp
push
cli
or
sub
add
or
push
fimuls
pop
xor
jg
cmpsb
scas
mov
iret
and
popa
shll
mov
cli
in
stos
push
cmp
xor
xor
test
repnz
jmp
adc
cmp
push
movsl
paddusw
lahf
fcoml
push
add
shrl
xchg
inc
jle
pop
cmpsb
adc
daa
pop
int3
imul
scas
and
pop
jbe
add
loope
in
cwtl
sub
xor
in
out
xor
xor
ja
xor
cmpb
iret
add
ret
pop
xor
xchg
imul
shlb
mov
sub
lcall
hlt
fdivrl
lods
std
sub
ljmp
fcoms
pop
subb
lahf
mov
movsb
std
mov
sub
and
push
jecxz
dec
bound
mov
pop
shl
xor
lret
push
rcl
pop
mov
xor
cltd
pusha
and
cmc
push
mov
mov
lret
les
pop
fs
jbe
adc
addr16
push
adc
xchg
adc
out
inc
outsb
cli
xchg
iret
sub
ret
push
mov
or
aas
out
into
jbe
lahf
gs
or
aad
pushf
pop
inc
in
adc
cli
xor
adc
cmpb
ret
push
and
dec
cmp
xor
gs
sub
lahf
int
push
in
sti
inc
adc
popf
aad
scas
jae
mov
adc
lret
lahf
sbb
in
les
repz
push
xchg
xchg
hlt
lret
call
jmp
xor
and
push
sub
jmp
mov
cs
xlat
or
mov
inc
push
push
sub
adc
aad
pop
rcr
cmp
or
jecxz
xor
push
std
inc
xor
mov
or
mov
dec
cmp
mov
fildl
sbb
sub
push
das
jl
pop
mov
inc
sbb
and
and
insl
testb
insl
lahf
leave
xor
xor
pusha
mov
fdivs
cld
loopne
movsb
lret
mov
and
sbb
loop
in
orl
hlt
adc
insb
inc
std
ret
inc
or
fstp
dec
icebp
clc
dec
ja
xchg
xchg
ljmp
js
das
lods
or
pop
sub
gs
push
and
pusha
adc
cltd
inc
mov
test
rolb
adc
cmp
cmc
sub
stc
leave
arpl
jae
adc
mov
add
lods
out
push
sarl
add
jbe
call
push
xor
fisttpl
cmp
mov
jns
mov
dec
jno
mov
cmp
loopne
inc
or
inc
and
or
cld
ficomps
and
mov
mov
cmp
bound
pop
sarl
cwtl
and
sub
xchg
jb
ds
sub
or
rcrl
jcxz
cmp
psllq
mov
mov
call
scas
cmp
scas
push
xchg
add
sahf
xchg
aas
or
or
test
xchg
jp
ss
add
or
and
xor
jnp
es
mov
and
adc
or
push
fiaddl
pop
repz
inc
inc
xchg
in
mov
or
js
pop
inc
stos
sahf
push
fidivrl
or
sbb
jo
imul
rol
pop
fcoml
fisttps
repnz
leave
js
hlt
mov
scas
popl
jmp
jge
sub
sbb
outsl
mov
aad
aaa
or
pop
xchg
add
aam
int3
jge
xor
push
neg
in
xlat
cmpsb
xor
fisubrl
jmp
adc
mov
mov
inc
push
push
data16
jbe
push
sti
in
xchg
mov
enter
daa
addl
sahf
nop
test
jl
call
int
subl
and
inc
lahf
sti
sub
push
outsl
push
andps
testl
mov
imul
cmp
mov
fsubrl
jae
andl
sub
lahf
std
cmp
mov
adc
or
loop
or
lahf
sbb
or
mov
xor
push
cmp
int
outsb
xor
aaa
and
pop
imul
push
loopew
fsub
dec
ljmp
bound
pop
aaa
cmpsl
add
jne
daa
push
notb
jbe
push
inc
andb
lret
dec
pop
or
sbb
mull
and
outsb
das
cmp
cmp
cmc
sbb
divb
xchg
mov
in
push
pusha
adc
scas
nop
outsb
fs
das
fcoml
lcall
lods
insb
pop
ret
jbe
out
jno
cli
lret
xor
bnd
into
pop
pop
pop
gs
adc
jo
rcrb
mov
mov
adc
cmpsb
xor
push
repz
data16
out
mov
pop
jg
cmp
jne
sub
mov
inc
in
mov
call
inc
aad
mov
nop
fcoml
pop
jmp
inc
mov
mov
push
xchg
dec
les
adc
dec
xchg
dec
jo
lea
call
test
push
int3
pop
sbb
adc
out
pushf
scas
xor
jmp
ljmp
mov
or
aas
scas
push
ja
lods
cmovbe
mov
mov
das
xchg
std
jmp
push
int3
mov
jp
mov
push
ret
xor
adc
pop
ds
jmp
cmp
xchg
mull
std
mov
and
mov
rorl
sarl
dec
sub
stc
dec
mov
scas
sub
lret
clc
mov
mov
xor
mov
movsb
pop
or
inc
sarb
test
sub
arpl
aam
std
pop
ret
aam
andb
cmp
fldl
scas
xor
xchg
cmp
ljmp
jae
js
dec
mov
lcall
push
sti
xchg
movswl
cld
cltd
jl
testl
loopne
dec
imul
test
jecxz
xchg
pushf
mov
pop
mov
fucomi
mov
sbb
and
push
add
pushl
call
or
sahf
jno
jge,pn
xchg
cwtl
mov
notb
ja
fwait
push
dec
stos
leave
and
mov
rcrb
sahf
lret
sar
xor
push
bound
xor
xchg
shrl
jp
jge
loopne
add
or
pop
loopw
and
xchg
stos
mov
imul
push
mov
dec
lret
jnp
in
push
es
ds
xchg
fcomip
or
xchg
aam
dec
jmp
or
sbbl
inc
popf
lock
stos
mov
inc
cmpsb
adc
jne
mov
jnp
pop
or
mov
push
ficoms
adc
mov
iret
mov
adc
cmp
mov
inc
push
jae
jae
test
push
sub
or
repz
inc
sub
and
jb
addr16
or
ficomps
cs
imul
cmpsl
push
sarb
mov
mov
jmp
outsl
arpl
xchg
sub
mov
push
jge
inc
sub
lds
aaa
xchg
mov
sub
shrb
push
inc
aad
imul
dec
and
scas
dec
cmp
out
pop
inc
push
movsb
fidivrl
push
mov
jle
stos
repnz
in
jns
insb
enter
daa
adcb
cmp
inc
xchg
jno
dec
cmp
jecxz
mov
mov
movsl
sbb
sub
push
test
sub
push
sbb
hlt
cmp
sbb
adc
pop
hlt
mov
lea
sub
fcoml
ds
out
adc
call
test
and
pop
sbb
mov
xlat
xor
test
sti
xchg
adc
sahf
dec
push
sub
imul
daa
xchg
push
mov
mov
rep
call
ror
loopne
loop
jb
mov
pop
les
sahf
nop
mov
orl
fcom
icebp
sti
mull
jmp
and
or
add
xchg
rcrl
fcmovu
sahf
cwtl
dec
cmc
loopne
pushf
xor
dec
shrb
into
mov
ljmp
fnstsw
fists
jmp
pop
mov
push
push
das
mov
and
std
frstor
jno
mov
or
rorl
cmp
xlat
gs
sub
loopne
xor
pop
sbbb
imul
ja
pop
sub
sbb
rcll
stos
xlat
jecxz
xor
mov
mov
sub
sti
movsb
xorb
mov
aam
aas
mov
jge
flds
out
les
mov
sbb
scas
xchg
or
push
lea
mov
lret
aad
mov
in
pushf
pop
pop
mov
cs
adc
xchg
push
aas
dec
mov
jb
xchg
gs
sub
xchg
je
addl
std
nop
gs
cwtl
and
cli
mov
push
xor
pop
loopne
dec
pop
loope
mov
mov
popa
lock
shrl
inc
frstor
mov
fsubl
xchg
adc
pop
shr
test
out
insl
insl
dec
icebp
dec
sub
loop
orl
cld
mov
mov
pop
and
push
push
and
sub
jbe
loop
mov
ret
arpl
movsl
fistl
cmp
xchg
adc
je
cmpsb
mov
and
mov
repz
orb
pop
cmp
ljmp
test
push
out
mov
in
push
pop
push
dec
shrb
add
sbb
loopne
shr
mov
stos
mov
add
add
outsb
subb
adc
jmp
or
dec
out
les
pop
mov
push
dec
mov
pop
mov
ja
ret
scas
dec
dec
sahf
icebp
dec
inc
push
xor
push
je
push
push
lret
mov
sbb
out
adc
bound
push
jns
outsb
sbb
xchg
adc
pushf
mov
cmpsl
jle
mov
test
or
out
fmull
mov
and
inc
in
pop
das
pusha
fnstcw
jecxz
adc
xchg
cmpsl
loope
jmp
aad
cltd
andl
cwtl
out
push
sub
lock
subl
inc
push
test
mov
or
mov
push
pop
jle
orb
out
adc
and
pop
popa
inc
inc
inc
pop
mov
jae
notb
out
jle
or
outsb
cmp
test
mov
icebp
inc
sbb
mov
push
scas
adc
inc
rclb
repnz
xchg
leave
pop
jp
adc
arpl
mov
mov
sbb
fadds
add
add
push
mov
pop
cli
repnz
fidivs
repz
xor
nop
rcll
les
cmp
cmp
cmpsl
insl
movsb
gs
push
add
cmp
pop
gs
pusha
sbb
and
addr16
cmp
ljmp
push
in
inc
fsubr
movsl
and
dec
and
push
or
pop
repnz
cltd
inc
sub
fcomps
icebp
arpl
leave
pop
pop
xor
aam
add
push
sub
out
pop
cmp
ret
out
ds
leave
mov
rol
pusha
inc
dec
sub
mov
add
mov
xor
pop
push
int
or
leave
pop
imul
daa
push
adc
add
imull
mov
test
xor
gs
mov
sahf
pop
jno
in
pop
mov
xor
push
push
scas
pop
cmp
mov
repnz
stos
jns
pop
imul
sbb
mov
cmc
cmpsl
in
xor
ret
outsl
adcl
stc
sbb
pushf
stos
adc
popf
or
pop
loop
cmp
mov
sub
xor
xor
cmp
mov
pop
ret
inc
out
loopne
nop
loop
mov
ror
imul
out
add
pop
data16
sbb
push
scas
outsb
xlat
and
mov
mov
mov
xchg
jnp
sti
push
testl
xchg
sbb
lds
sbb
test
jl
cmp
popa
xchg
out
jmp
mov
dec
call
push
dec
stc
adc
add
pushf
add
and
adc
sbb
xor
mov
adc
dec
mov
cmp
jecxz
int
xor
inc
cwtl
fstpl
mov
in
mov
mov
dec
addl
test
shl
cmp
leave
cld
mov
imul
stos
leave
dec
shrl
ja
push
clc
dec
and
loopne
andb
icebp
pop
cli
inc
cld
popa
addb
jns
mov
sub
mov
dec
pop
mov
sub
pause
aam
outsb
faddp
repnz
es
in
fstl
clc
cld
sti
cmc
xchg
push
push
mov
popa
mov
mov
loopne
xchg
xchg
cmp
ds
mov
lock
add
std
mov
cltd
ljmp
mov
insl
cwtl
push
and
dec
cmp
test
shrb
test
repnz
test
stos
lods
pushf
lahf
out
jl
fldl
mov
clc
xor
or
in
mov
push
in
pop
mov
insb
pushaw
ja
inc
jo
xchg
int
inc
call
ret
cmp
sbb
mov
nop
mov
pop
dec
out
lock
std
or
dec
and
sub
jp
mov
adc
sub
add
inc
loopnew
jp
rcl
mov
popf
mov
xchg
xchg
dec
xchg
roll
pusha
je
push
fbstp
lret
jp
jmp
mov
icebp
push
out
ret
ds
mov
push
ret
stos
mov
xor
mov
scas
inc
jnp
adc
insb
jmp
push
je
stos
ret
mov
cwtl
mov
addr16
jle
push
mov
push
mov
jbe
mov
clc
push
sub
xchg
mov
xchg
sbb
and
scas
jne
lock
lret
lret
mov
stc
sti
leave
fnsave
hlt
xor
pop
inc
mov
jmp
or
sbb
cli
inc
aaa
adc
cld
add
cmovno
ds
fstps
imul
xor
jmp
mov
and
std
cli
cmp
mov
movsb
lock
push
push
syscall
jbe
xchg
sub
enter
daa
addb
aaa
leave
mov
inc
xor
pop
dec
mov
jno
sub
cmc
lahf
pop
mov
iret
jne
push
pop
pop
push
mov
cmpsl
inc
mov
aaa
push
pop
push
rcrl
je
cmpsb
loope
mov
sub
rorl
cmp
ret
push
rcrb
fadds
addb
lock
jae
xor
sbb
adcl
pop
pop
call
sbb
fsub
pop
push
sub
pop
test
add
push
loopne
jg
mov
mov
in
mov
fnsave
mov
push
cmp
dec
xlat
mov
lret
out
xor
mov
mov
icebp
sahf
ficoms
cmc
outsb
gs
mov
loop
loop
shr
stc
aam
aaa
fs
icebp
adc
xor
mov
sbb
cli
arpl
cmp
ss
or
push
into
add
out
gs
push
dec
loopne
add
rcrb
aad
imul
adc
add
std
xor
add
sbb
dec
fnstsw
popa
mov
sub
and
push
lods
sti
add
es
sbb
dec
aad
or
nop
cmc
sub
adc
gs
mov
mov
repz
xchg
cltd
lea
sub
or
out
scas
pop
xor
adc
jmp
jmp
sub
inc
fildll
aas
mov
jb
xor
fidivs
sub
mov
xchg
cmp
std
fisubrs
call
mov
fmulp
mov
cs
dec
xor
shr
pop
daa
mov
inc
and
cmc
das
clc
push
inc
mov
and
sub
cli
inc
mov
insl
cmp
dec
push
dec
cmpsl
jg
es
xor
loopne
mov
inc
xchg
sbb
and
mov
and
mov
xor
cwtl
and
test
fnstsw
inc
clc
aaa
push
inc
xchg
xchg
jg
ljmp
mov
mov
and
cmc
paddusb
sbb
dec
sub
mov
xor
push
jecxz
mov
mov
cmpsl
sbb
sbb
xchg
rcll
cld
mov
fwait
adc
filds
popf
add
movsb
fdivrp
call
add
fwait
test
or
dec
shll
int
pop
push
inc
xchg
mov
pop
daa
insl
icebp
ja
bound
inc
jg
in
lods
fwait
fwait
insb
ret
mov
and
push
mov
iret
enter
imul
jns
rcll
xchg
scas
addr16
inc
hlt
jecxz
xchg
cmpsl
fimull
std
cli
aas
filds
jge
movsl
mov
jbe
mov
add
dec
je
in
fwait
pop
pusha
mov
fisttps
inc
xchg
dec
jmp
jmp
imul
inc
fildl
gs
addr16
add
stos
sub
and
jb
jnp
xchg
outsl
jle
out
mov
dec
cltd
adc
fxch
sarl
ret
xor
psllq
jno
and
push
je
dec
or
fs
inc
cmpsl
mov
fcoms
add
adc
cli
pop
ror
xor
iret
decb
leave
push
xor
sub
aas
inc
mov
ljmp
ror
jne
mov
push
int3
sub
pop
fidivrs
cli
xor
inc
dec
scas
out
push
and
cmp
jle
mov
lret
mov
enter
daa
jg
or
push
hlt
jno
jbe
jl
rcll
or
inc
mov
lahf
ja
adc
test
jle
sbb
cmpsb
mov
adc
pop
mov
outsl
push
jmp
loope
jnp
sub
mov
fs
xchg
mov
adc
jns
mov
sbbb
daa
sbb
mov
xor
mov
inc
ds
int
cmp
pop
sub
lcall
and
push
movsl
sub
sub
jnp
cltd
xorb
lods
jg
fldl
inc
clc
dec
mov
shll
arpl
jp
pop
rcll
cmp
add
add
mov
mov
ror
sbb
sbb
mov
xor
jo
outsl
aas
jb
loop
pop
out
stc
mov
and
pusha
adc
ja
ss
ljmp
pop
out
push
lret
mov
sub
or
les
gs
mov
pop
filds
aaa
push
scas
imul
test
add
pushf
icebp
sbb
test
fwait
sub
test
inc
sbb
in
imul
cmp
popf
adcl
jns
fldl2e
jmp
clc
xrelease
inc
xchg
push
fisttpl
call
data16
in
adcl
pop
lret
cmp
out
jno
mov
outsb
inc
fsubrs
dec
jb
push
rorl
in
add
arpl
xor
std
test
cwtl
push
mov
mov
pop
pop
mov
stos
dec
pop
aas
mov
out
mov
pop
lret
mov
and
repz
mov
fnstenv
pop
rorl
push
notb
cmp
dec
sbb
cmpsl
jle
cmp
or
mov
sbb
mov
mov
pop
mov
mov
stos
mov
xchg
imul
arpl
test
scas
push
frstor
cmp
shrb
shr
and
lret
popa
jmp
push
lods
and
ret
mov
les
push
fiaddl
cmp
add
aas
ret
cltd
pop
es
test
stc
mov
cmp
push
cmpsb
mov
dec
test
adc
xchg
out
shr
hlt
pop
gs
clc
stos
mov
out
inc
jbe
add
mov
xchg
movsb
xor
aam
or
jnp
mov
pop
xor
dec
movsl
xor
pop
add
dec
ja
mov
or
push
fwait
fwait
xorps
push
jb
jne
mov
scas
sti
cmp
sbb
addr16
aad
inc
pop
jle
std
cwtl
pushf
mov
dec
test
jl
pop
or
jbe
fiadds
mov
mov
bound
mov
pop
dec
push
sti
and
rcrb
stos
das
scas
fildll
test
in
push
xchg
ss
adc
adc
and
fistpl
mov
iret
mov
rcl
mov
pop
or
jnp
fistpl
push
cli
or
adc
sbb
iret
xor
xchg
pop
push
in
ja
jge
sti
jae
ja
push
aaa
stos
push
adcl
dec
fidivrl
fwait
scas
xchg
fs
scas
sbb
insb
jb
data16
or
add
mov
and
hlt
leave
lret
nop
push
hlt
pop
mov
arpl
les
int
jge
xchg
rcrl
mov
imul
xchg
cmp
sbb
pop
int3
adc
jecxz
xchg
inc
xor
mov
jo
and
mov
cmp
lahf
rclb
dec
jl
mov
aad
adc
lds
jle
xor
popf
sbb
inc
jl
leave
push
dec
insb
push
push
lock
mov
jno
or
push
cmc
pop
imul
fcoms
cmpsb
and
jp
js
movsb
out
pop
lock
xchg
push
jae
loope
push
sub
sbb
cmp
xchg
sbb
rclb
subb
sbb
std
mov
xor
cltd
rcl
pop
pop
lods
int
test
lods
pop
out
sub
push
sbb
fdivrl
roll
outsb
je
mov
orb
inc
or
mov
fmull
lret
and
roll
pop
adc
cmp
mov
ret
lret
lret
pop
shll
mov
cmp
sbb
mov
xor
and
push
call
stc
inc
mov
adc
fisubs
lods
out
and
mov
out
out
adc
leave
push
xor
xor
jl
test
mov
gs
jo
loopne
push
bound
xor
or
imul
dec
xchg
add
xchg
stos
or
and
xor
mov
sub
sub
mov
aam
lret
sti
pusha
xchg
pusha
cmp
sbb
sbb
or
ret
and
xchg
orb
push
pop
push
sbb
pop
call
in
bound
gs
adc
sbb
pushf
add
jge
cs
icebp
or
in
repz
dec
ret
jb
test
dec
pop
push
mov
mov
leave
mov
or
cwtl
push
cmp
out
mov
addl
pop
add
push
ljmp
into
test
dec
mov
pop
mov
nop
push
aaa
and
bound
neg
mov
lock
adc
test
jge
jb
ss
icebp
loop
ret
pop
sub
and
and
mov
dec
inc
pop
cmpsb
push
loop
pop
pop
push
sub
push
ret
lahf
iret
cmp
out
icebp
add
xchg
punpckldq
popa
add
xor
lahf
jno
dec
and
push
inc
popa
mov
lcall
cltd
and
xchg
push
imul
stos
test
push
sub
and
sti
dec
roll
sub
adc
shr
movsl
fxch
add
fimull
int
inc
xor
lcall
loop
xchg
inc
mov
popf
ss
mov
cltd
addb
leave
or
cld
rcrb
testb
loopne
lcall
xchg
mulb
je
jns
leave
pusha
in
arpl
dec
push
popf
mov
adc
arpl
pusha
or
xchg
fldl
jmp
jecxz
scas
mov
xor
mov
fistpll
dec
cmp
cltd
in
imul
fisttps
les
jmp
add
incl
cmpsl
mov
cmp
jg
mov
call
ja
jnp
in
jle
sub
test
sbb
or
in
ret
or
outsb
mov
mov
int
mov
mov
enter
cmc
inc
movsl
pop
inc
pop
das
xchg
mov
dec
mov
scas
sahf
pusha
ret
loope
rolb
inc
mov
jne
out
inc
xchg
pushf
hlt
bound
inc
shlb
jge
and
sbb
aaa
dec
rcll
add
flds
mov
fcmovu
mov
sbb
jo
adc
scas
movsl
pop
lods
and
movsl
jne
xchg
jp
push
inc
push
or
in
in
cld
xchg
jle
adc
mov
cmp
push
xchg
jno
inc
jmp
js
bound
fisttps
rcrl
jle
inc
push
and
inc
lahf
mov
fwait
push
enter
cmp
push
adc
add
sbb
pop
ffree
iret
js
push
pop
das
lods
sub
scas
cmpsl
loope
jle
sub
jnp
cmp
adc
xchg
das
sub
cmpb
pop
sbb
sub
xor
pop
imul
icebp
out
int
cli
add
sbb
dec
lcall
out
fsub
cmpsl
sub
cmpsl
outsb
xlat
inc
cld
test
bound
ljmp
mov
or
and
ret
ret
cmp
jp
shl
push
sub
clc
mov
jge
loop
jbe
mov
cmc
ret
aas
push
xor
popf
mov
stc
stc
lods
adc
jp
je
in
imul
lods
into
mov
jo
aaa
out
pop
cli
cld
iret
cltd
xor
sahf
or
out
jb
stos
stc
pop
bound
into
pop
sbb
sbb
adc
insl
sti
add
sub
inc
cmp
cmp
loop
xlat
push
aas
xchg
sub
and
mov
aas
sti
psllq
incb
in
int
xchg
mov
inc
add
inc
and
in
fstps
in
lea
dec
xchg
fcmovne
rorl
pop
push
in
cmp
dec
orl
mov
dec
jmp
dec
adc
push
dec
rolb
jg
push
clc
add
jb
das
add
jle
jo
or
jecxz
movsl
cmpsl
movb
std
roll
test
cs
mov
fs
cmc
dec
repnz
cmpsl
pop
adc
shll
test
adc
mov
inc
sahf
sbb
out
shl
repnz
negb
ret
in
lock
scas
dec
cmovl
jl
mov
icebp
mov
mov
and
les
ret
add
mov
mov
xchg
stc
inc
iret
ret
cs
es
icebp
sar
call
sbb
ljmp
out
cli
pop
jb
fwait
cmp
mov
push
xchg
mov
psubw
leave
add
test
test
bound
sub
rorl
sbb
test
mov
ficompl
pop
les
rcrl
out
push
xor
add
decb
xor
pop
xor
bound
mov
call
je
pop
stc
ja
jle
call
or
bound
stc
cmc
daa
push
cltd
fwait
aad
cmpsl
sti
test
out
insb
sub
bound
add
jns
cmp
xchg
fwait
sub
sub
out
sub
jp
xchg
shufps
dec
push
mov
in
gs
loopne
hlt
fildll
sbb
xchg
int3
sbb
out
clc
sbbb
rorb
mov
pop
fisubs
decl
push
jnp
mov
jle
mov
rcll
hlt
inc
push
iret
lock
pop
ret
enter
cmove
ja
push
mov
and
fwait
inc
and
inc
fisubl
test
imul
add
mov
mov
enter
mov
shll
loopne
ret
in
std
jge
xchg
out
sbb
and
push
pushf
mov
jp
push
dec
add
ljmp
fisubs
xchg
push
pop
insb
scas
test
add
mov
stos
fistl
mov
mov
jecxz
ror
or
push
daa
jl
mov
jno
loopne
jl
push
pop
dec
dec
and
mov
inc
popf
add
cmpsl
loope
lahf
aam
das
push
fwait
mov
test
fistpll
out
sub
xlat
pop
add
out
xchg
ljmp
sahf
or
and
loop
xor
cmpb
xor
rorb
rcll
adcb
sbb
ret
add
arpl
xor
stc
jmp
or
subl
orb
in
imul
mov
fcoml
xchg
sub
cmp
mov
jg
insb
movsb
mov
addr16
mov
push
sti
and
ljmp
xor
adc
cmc
rorl
mov
adc
ret
push
mov
outsl
fdivrl
lret
loop
aas
sar
mov
cli
fs
imul
scas
push
repnz
mov
push
lods
out
and
xor
xor
rolb
or
jmp
fneni(8087
lods
mov
mov
outsb
imul
filds
add
cli
data16
and
sbb
xor
fldcw
mov
stos
pop
jb
mov
pushf
mov
nop
popa
pop
cli
dec
mov
out
inc
pop
into
repz
mov
test
xchg
xchg
xchg
jecxz
arpl
push
les
mov
scas
in
mov
lcall
sub
clc
aas
or
xchg
jb
ljmp
push
mov
insb
movb
jp
cs
test
mov
icebp
fmuls
adc
adc
fstpt
pop
mov
sahf
mov
je
lock
mov
je
shlb
decb
fst
ss
dec
negb
add
xor
or
mov
mov
nop
cld
sbb
lret
add
cmp
hlt
inc
and
in
xchg
add
xor
aam
dec
sbb
mov
js
fstl
bound
and
xchg
lea
jns
sti
popa
xor
fisubrs
popf
pop
mov
popf
call
mov
add
cltd
std
lcall
mov
test
sub
dec
cmp
dec
test
lds
sbb
inc
repz
fs
pop
push
hlt
stos
push
lea
add
adc
jae
out
adc
repz
repnz
shll
xchg
sbbb
inc
push
gs
adc
ja
stc
stos
dec
push
movsl
sbb
or
pushf
xchg
fwait
sub
jne
outsb
ds
mov
xchg
jge
dec
leave
ret
bound
dec
or
in
mov
ljmp
sub
jmp
cltd
cmp
dec
stc
xorb
aam
mov
fucom
in
dec
pusha
jnp
lods
lock
jmp
xchg
mov
addl
jno
add
mov
std
xlat
mov
and
push
sub
inc
jnp
inc
push
jle
cmp
push
iret
lods
inc
adc
jns
iret
dec
pop
loopne
sar
pop
stos
pop
add
push
jae
pop
jns
sub
or
push
into
cmp
adc
push
cld
call
sbb
lea
scas
fs
push
lds
add
mov
sbb
hlt
clc
dec
mov
dec
ljmp
in
mov
aaa
int
pop
or
push
add
cwtl
adc
aad
sbb
xor
fiadds
inc
jo
sub
int3
and
jge
movsb
cmpsl
sub
jnp
orb
in
lret
enter
daa
jnp
add
ss
jno
mov
lcall
cmc
sub
dec
xlat
mov
inc
icebp
push
push
outsb
xor
test
stos
jmp
inc
test
cmpsb
scas
insl
push
pop
sub
inc
js
mov
pop
lods
and
loope
adc
cmp
xlat
sarl
and
fs
in
cmpsb
popl
int3
loop
cltd
push
test
jo
into
push
jne
int
dec
shrb
pshufw
push
xchg
pop
sbb
fdivrl
adc
dec
stc
lcall
jnp
sbbb
cwtl
mov
dec
dec
mov
jmp
and
test
cmp
lock
negl
cmp
mov
movsl
push
sahf
or
lds
outsl
mov
pushf
pop
stc
addr16
mov
adc
pop
inc
ss
inc
out
movsb
add
pop
jno
cli
bound
in
stc
mov
cmc
sub
jo
dec
loopne
pusha
stos
pop
pop
or
jl
lds
adc
movsb
pusha
add
pop
mov
out
mov
xchg
lock
cmp
in
pushf
negl
mov
push
mov
adc
push
add
leave
xchg
in
repnz
cmp
fisttpll
jge
inc
dec
shlb
les
test
sub
or
jb
pop
mov
fistl
adc
mov
stos
cs
fucom
inc
fsts
aas
cmpsl
stos
into
jb
fidivrl
insb
mov
jecxz
sub
movb
std
and
pop
cwtl
aas
push
mov
adcb
data16
subl
xchg
pop
push
mov
sbb
pop
add
push
push
cld
mov
mov
sub
mulb
lahf
out
dec
add
add
mov
addr16
sar
arpl
iret
mov
jns
mov
add
xlat
orl
mov
test
jo
push
ds
clc
pop
mov
mov
in
mov
popa
inc
sub
mov
mov
sub
in
repnz
shrl
movzwl
add
cmp
xor
and
push
imul
test
mov
jg
xchg
jno
rorl
pop
pop
adc
cli
stos
inc
xchg
out
into
mov
jle
sub
int3
ljmp
shll
cmp
xchg
cwtl
dec
mov
push
push
and
cmp
dec
inc
mov
push
or
stos
gs
push
in
sti
push
fists
mov
mov
mov
cmp
or
outsl
outsl
bound
xchg
and
sub
in
inc
fisubrl
jl
xchg
mov
pop
pop
mov
sub
pop
dec
jecxz
jnp
jae
gs
push
xor
ljmp
jmp
bound
mov
popf
sub
push
cmp
iret
stos
imul
insb
lret
mov
jnp
cltd
push
jle
mov
push
push
add
stos
rcll
lahf
int
shll
pop
loop
stc
inc
test
xchg
push
inc
ds
push
and
adcb
jmp
imul
inc
scas
cmp
sbb
cmp
push
in
mov
outsb
and
mov
arpl
fldl
cmc
daa
jmp
aaa
mov
pop
add
cmp
shl
pop
inc
inc
nop
fisubs
cs
jo
pop
bound
ds
repz
pop
mov
xor
jbe,pt
dec
in
mov
jecxz
add
repz
jp
xor
imul
lods
jl
xor
dec
sub
cmp
jl
inc
movsl
push
jne
and
adc
lahf
adc
adc
jne
xchg
inc
adc
jp
xor
pop
push
call
cld
xor
pop
in
and
push
cltd
mov
push
cwtl
sub
cwtl
test
rcrl
ds
movsb
cmp
rclb
out
cmpb
sbb
jle
add
aam
xor
in
ja
adc
int
inc
pop
sub
pop
mov
jbe
xlat
fsub
and
ds
outsb
add
dec
test
es
cmpb
and
ficompl
scas
leave
sub
push
imul
addr16
negl
adc
mov
aas
inc
mov
mov
sbb
xlat
outsl
lcall
stc
push
loope
fs
rcl
xor
jp
mov
jge
popa
in
pop
inc
sar
xchg
aaa
xchg
sub
outsb
or
into
push
movsl
ja
ja
and
jecxz
jnp
jp
rcll
ss
imul
or
push
or
xlat
fistpl
sbb
sbb
sti
sbb
imul
cmp
nop
pop
in
or
pop
ret
pop
ljmp
scas
xor
xchg
and
testb
rcll
loope
xor
or
adc
pushf
mov
scas
jmp
push
fildll
jns
mov
pusha
sbb
aas
inc
daa
shll
std
lock
jecxz
adc
jmp
shlb
dec
add
cwtl
cli
sub
imul
addl
outsb
fcmovnu
adc
stc
dec
dec
mov
repz
mov
div
mov
insb
dec
cmp
js
ja
aam
or
in
repnz
dec
add
pop
mov
ds
jno
mov
lret
fists
insl
jns
and
sub
shrb
sbb
pop
push
out
add
repz
frstor
and
cltd
insl
into
xchg
or
ljmp
pop
lods
cmp
mov
mov
sub
mov
scas
inc
movhps
add
mov
mov
arpl
push
jne
inc
dec
or
imull
and
jp
jno
dec
shll
jl
stos
xor
out
sbb
inc
rol
decl
mov
dec
xor
mov
mov
imul
mov
mov
aas
dec
xorl
fwait
xchg
push
cld
out
pop
mov
hlt
and
int3
ljmp
cli
mov
scas
sub
fisttps
inc
jp
sti
mov
mov
fwait
js
dec
mov
in
mov
pusha
mov
mov
xchg
aas
call
cs
sub
call
jg
dec
into
push
mov
jnp
pop
stos
fcompl
adc
push
jnp
mov
jle
sbb
push
pop
mov
dec
iret
or
sub
inc
mov
pushf
jae
hlt
notl
push
add
pushw
sub
xlat
out
fidivrl
and
sbb
sbb
fsubrl
mov
fisubl
repnz
push
or
mov
arpl
add
sbb
aaa
dec
push
dec
or
mov
rdmsr
adc
stos
cmp
icebp
fimuls
in
dec
push
fdivs
xchg
dec
scas
and
push
cmp
in
movsb
mov
pop
popf
jbe
add
in
cwtl
push
or
aad
daa
jns
cmp
pushf
ds
dec
jl
pop
mov
push
pop
lahf
lret
movsl
pop
ja
and
and
xor
jno
adc
popf
test
inc
dec
out
inc
mov
loop
pop
jns
mov
dec
or
sub
add
imul
mov
ds
aas
adc
fwait
aaa
push
popl
adc
sbb
cmp
pop
or
xor
imul
enter
sub
pop
popa
lea
dec
or
push
int
cmp
xchg
or
sub
inc
cmp
rcl
out
jg
pop
pop
mov
stos
jne
pushf
and
and
pop
in
out
mov
data16
lret
pop
rcll
xchg
jne
sahf
out
sahf
push
nop
xchg
cmc
and
pop
fnstcw
loop
hlt
ljmp
jo
adc
jno
lods
jb
jae
pop
push
repz
cltd
sub
enter
add
insb
cmp
jp
or
je
into
aaa
jno
gs
shl
jle
int3
pop
cltd
or
adc
cmpsl
insl
imul
out
cmc
mov
mov
out
inc
xlat
sbb
mov
mov
jmp
mov
lret
dec
inc
decb
push
aad
cmp
nop
repnz
cmp
or
ss
fnstenv
pop
les
test
lea
pop
imul
add
inc
pusha
mov
lods
adc
ret
rcrb
xor
inc
inc
out
or
jl
aas
in
xchg
jb
push
les
mov
je
int3
mov
dec
loop
std
outsl
imul
mov
jbe
sub
mov
sbb
pop
sbb
or
pop
pushf
out
xchg
adc
mov
pushf
mov
add
shll
cmp
mulb
enter
sub
dec
sti
psraw
xor
loope
cld
mov
int
mov
add
mov
inc
repnz
jge
in
sub
push
outsb
inc
es
sbb
mov
rclb
int
popa
jne
les
push
jmp
xchg
jb
push
mov
jge
jne
mov
cltd
mov
fs
cmc
add
cmp
insb
test
scas
cmp
sbb
push
sar
ss
addr16
stos
and
je
xchg
push
lock
popa
xchg
lods
loopne
xor
and
addr16
test
outsb
and
mov
inc
int3
sbb
xchg
xchg
dec
sub
jnp
mov
inc
push
fwait
mov
push
push
and
pop
sub
call
dec
sti
jns
fs
test
xchg
xlat
push
shll
out
pop
or
sbbb
add
loop
in
imul
fs
mov
test
inc
sub
imul
adc
jmp
clc
sbb
cs
mov
outsb
cld
popf
jbe
pop
mov
mov
imul
pop
lods
cmp
xchg
jnp
xchg
lea
ja
push
movsb
ror
adc
adc
insb
xor
push
nop
mov
mov
cmpsb
movsb
push
leave
aas
repz
shll
and
and
mov
pusha
imul
jae
lea
rolb
mov
adc
ror
xchg
inc
int
add
sub
pop
jge
dec
sbb
mov
or
xchg
add
push
sahf
fsubrp
fwait
divb
ret
call
jp
fs
cmp
jmp
dec
mov
push
lret
jno
jbe
sub
in
jg
imul
cs
js
or
iret
cli
lods
jno
mov
add
repz
inc
loop
movsl
arpl
mov
lahf
push
xor
push
out
enter
pop
push
or
inc
xor
cmp
mov
cmc
loope
push
punpckhdq
mov
cmp
sub
into
pop
cmp
mov
ds
mov
shlb
bound
sahf
leave
rcrb
xchg
int
and
cltd
mov
fisubrs
xorb
lcall
pop
fdivrl
shrb
test
out
and
jg
bound
mov
sub
mov
shrl
inc
mov
jo
jp
std
insl
fsubs
ret
neg
loope
lret
add
jno
push
sbb
cs
imulb
cmc
cmpsb
jnp
xor
xchg
outsl
pop
sarl
test
dec
stc
mov
cmpsl
fs
lds
ss
nop
push
mov
mul
push
jae
cli
sti
push
fnstenv
xlat
pop
and
scas
das
or
in
into
sbb
pcmpgtw
push
dec
pop
mov
dec
mov
stos
rclb
add
cmp
jg
sbb
and
inc
xlat
pop
push
sub
js
mov
push
stc
push
sti
jp
mov
xor
aad
xchg
nop
int
cmovg
lea
mov
fldcw
addr16
les
pop
xchg
stos
mov
call
fbld
adc
push
pusha
pushf
pop
jne
jmp
fxch
cs
pop
roll
jecxz
xchg
invd
aas
test
dec
sarl
pop
jecxz
out
xchg
push
ss
std
push
loopne
cwtl
jo
leave
mov
inc
or
jno
ret
insl
mov
cmp
jge
aas
test
mov
add
lock
xchg
das
lock
sti
mov
fisubl
out
jb
sbb
insl
jae
rorl
mov
ja
stc
mov
in
pop
ds
in
sbb
mov
inc
and
pusha
and
jnp
push
jge
sub
stos
xor
stc
es
stc
dec
sbb
clc
cmpps
imul
popa
mov
xor
enter
dec
cmpsl
xchg
mov
add
aam
ret
xchg
and
test
call
lret
dec
fadd
xor
mov
in
mov
rorl
or
adc
mov
out
divl
aas
add
jl
decl
push
xor
mov
push
xor
loopne
mov
jno
cmp
pop
pushl
ja
rorb
inc
aaa
xchg
or
lret
int3
fwait
in
inc
push
enter
mov
mov
push
mov
or
in
outsl
lret
xchg
bound
pop
inc
jnp
int
sahf
or
or
xlat
icebp
cmpl
lds
pop
mov
dec
mov
pusha
out
sub
inc
icebp
dec
xchg
in
sub
movsl
stos
push
xchg
ret
outsb
dec
cmpl
mov
popf
mov
rcll
jo
stos
ret
and
mov
jnp
xor
jle
enter
push
xor
cmp
arpl
lret
jle
ret
inc
pop
xchg
pop
inc
lret
jae
pushf
das
push
mov
push
push
das
jne
cmp
cmp
lods
int3
fisubl
stos
test
pop
cld
jge
out
aam
scas
lock
mov
mov
nop
sub
leave
or
or
arpl
stos
mov
ljmp
aaa
leave
inc
ljmp
pop
mov
andl
ficoms
lds
push
dec
outsl
scas
bound
notl
ret
fdiv
movsb
roll
lock
enter
xchg
repz
daa
ja
xchg
cmp
imul
inc
jl
xor
jne
fimull
and
cmpsl
repnz
jnp
push
mov
js
div
inc
sarl
cmp
js
xor
test
xlat
pop
loope
in
sub
sub
cmp
mov
lods
jb
adc
push
xor
aad
mov
rcrl
jne
jno
sub
xor
pop
in
ss
xchg
mov
pop
pop
and
lcall
mov
out
inc
sub
cmp
arpl
or
fbstp
mov
add
push
jae
pop
cmp
fdivrl
negl
sub
roll
sbb
cld
cmp
cltd
xor
cld
xor
fwait
push
outsl
aaa
sbb
stc
inc
flds
insl
sub
dec
andb
jno
lods
inc
xchg
lea
push
shll
cli
repz
scas
mov
cmp
mov
fcmovne
std
in
mov
mov
xlat
adc
punpckhwd
add
add
mov
xchg
cmp
xlat
cwtl
cwtl
out
jl
xor
in
roll
sub
cmp
push
cmp
nop
test
inc
dec
jnp
addb
fldenv
into
movsb
repz
xchg
insl
jno
lea
test
pop
adc
pop
jge
inc
adc
jg
mov
daa
jmp
inc
pop
mov
jp
inc
mov
lea
and
push
dec
dec
push
stos
jecxz
bound
std
mov
xor
mov
jecxz
mov
jg
orl
push
loopne
addr16
lahf
pop
loop
enter
test
lret
dec
subl
std
out
mov
xchg
ror
sbb
test
sarl
lods
add
icebp
jmp
pop
mov
ret
orb
lods
outsb
lret
sub
adc
and
sti
push
clc
pop
jg
mov
sub
stos
aam
push
loop
mov
aad
jl
jle
nop
clc
dec
dec
insl
xchg
enter
mov
inc
adc
cld
loop
ds
xor
aas
inc
push
rdpmc
jl
add
fmuls
mov
adc
push
mov
popa
shrl
cmp
sbb
and
stos
add
cmp
xchg
pop
xor
xor
add
push
mov
je
push
mov
mov
adc
adc
inc
into
xchg
shrb
mov
imul
jne
push
cmp
cmpsb
sbb
jns
push
cmpsb
in
rcrl
mov
mov
cmp
sub
shlb
xchg
adc
mov
xor
mov
call
mov
inc
pusha
xorb
jnp
xchg
mov
xchg
aad
mov
popa
out
loope
popf
les
push
cmp
fldcw
mov
insb
ja
or
sbbl
jmp
iret
sub
or
pop
js
pop
mov
daa
adc
push
dec
adc
push
push
pop
fcmovbe
pop
loope
sbb
fcomps
stos
add
push
pop
scas
push
mov
lds
fdivrs
repnz
sbbl
adc
leave
jge
cli
outsb
sbb
and
or
mov
aam
adc
insb
cmp
pop
jmp
mov
xor
jns
pop
scas
mov
cmpsl
ss
dec
sub
bnd
jbe
in
dec
js
enter
daa
jbe
leave
cmp
cmpl
in
pushf
push
or
jno
dec
and
mov
push
lea
fstl
or
fldt
pop
out
ret
push
pop
call
xchg
loope
repz
mov
mov
lea
sbb
shl
inc
adc
sub
push
bound
add
xchg
sbb
push
xor
ret
pop
lods
jne
jb
xchg
sub
mov
lcall
mov
xchg
mov
sub
ja
outsb
mov
andb
jg
idivb
mov
out
insb
mov
loopne
and
int
push
jbe
mov
cltd
fcoms
popa
out
rcrl
push
mov
jl
sub
mov
cmp
sub
xor
scas
xor
sbb
outsl
push
xor
inc
stc
cli
jae
fs
push
adc
mov
xchg
mov
and
popa
inc
pop
xor
xchg
int3
or
and
loopne
push
gs
mov
movsl
pop
mulb
jecxz
mov
test
adc
insl
xor
xchg
add
cwtd
sbb
xchg
adcl
out
in
iret
mov
sub
xchg
sti
fcoms
js
adc
push
dec
addr16
cmp
dec
inc
inc
test
mov
div
into
int3
or
lea
call
fldl
dec
adc
ds
pushf
pop
rcr
jmp
insl
dec
cs
push
push
inc
lret
jno
aas
ret
jb
xchg
imul
stos
je
int
jecxz
sbb
push
cmp
std
fs
cwtl
out
in
addr16
push
mov
js
dec
bound
push
fistl
mov
mov
mov
xor
scas
mov
mov
dec
test
and
mov
add
lock
push
insl
inc
or
xor
cmpsl
jne
pop
mov
lcall
lret
fwait
into
iret
mov
push
and
mov
sahf
dec
int3
shl
jl
sub
jle
xchg
ret
pop
add
jmp
fldl
fnstsw
test
xchg
pop
mov
mov
popa
mov
fwait
sub
popa
push
xchg
xchg
inc
and
sbb
setb
add
int3
clc
cltd
inc
shl
test
jle
push
xorl
subl
cmp
dec
bound
mov
out
mov
lcall
mov
rorl
mov
pop
mov
ja
add
jne
adc
rcll
inc
lods
fimull
cmp
push
xor
sbb
or
pop
mov
cmp
mov
es
push
stos
mov
mov
inc
or
stc
addr16
jne
jnp
shlb
adc
push
mov
dec
push
pop
dec
in
inc
shlb
aaa
jge
test
loope
mov
jmp
pop
inc
sbb
mov
jo,pt
mov
notl
aad
stos
test
shll
mov
stos
sahf
jnp
ret
mov
push
jns
fs
push
dec
iret
mov
insb
ret
mov
xchg
pop
loope
ss
mov
or
xor
cmc
inc
popf
xchg
push
fimull
sbb
cwtl
imul
mov
mov
jbe
mov
or
mov
pop
arpl
outsl
sti
inc
fsubs
cmpl
daa
xor
or
mov
push
int3
push
loope
pop
cs
lahf
xor
aam
cmp
sbb
arpl
jmp
sbb
jbe
pop
in
in
xor
pusha
enter
daa
jne
xchg
cmp
aad
xchg
adc
rclb
dec
push
lcall
js
push
and
repnz
lahf
lods
adc
jmp
icebp
dec
cld
push
insb
hlt
popa
inc
fistpll
enter
xchg
js
insb
bound
daa
out
push
fidivl
lds
movsl
sub
push
jnp
cmp
cmp
repz
adc
pop
orl
xlat
lcall
inc
sub
xor
lock
loop
mov
sub
xor
pop
pop
lret
repnz
fdivrl
jbe
outsb
out
adcl
jg
inc
popf
mov
fisttpl
insl
jae
and
clc
push
push
jns
mov
fcoms
test
lret
mov
mov
sub
pop
pushf
lds
sti
mov
xor
in
scas
loop
adc
stc
mov
and
xlat
adc
lods
and
addl
push
dec
iret
mov
addr16
sbb
xor
cmp
inc
or
sub
lcall
pop
adc
jb
imul
cltd
pop
add
fnstcw
rorb
xlat
push
andl
mov
xchg
pusha
mov
xchg
and
fwait
jle
aad
out
nop
pop
mov
dec
cmp
mov
xchg
lcall
insb
pop
xchg
repz
popf
shrl
mov
pop
jecxz
pop
adc
add
add
inc
pop
jp
push
push
enter
sahf
aas
popa
rcrb
dec
ss
inc
je
jne
jecxz
push
in
pop
ljmp
mov
lods
sub
ss
dec
dec
movsb
ret
fcmovnb
mov
dec
mov
mov
lock
mov
jmp
and
in
rcrl
mov
insl
sub
cmp
adc
cmpsl
je
icebp
mov
jno
movsb
dec
or
mov
insl
and
xor
popf
pop
mov
dec
shrb
insl
and
aam
test
ret
cmpsb
call
sbb
sub
fs
inc
arpl
ljmp
hlt
lods
push
xchg
mov
test
xchg
mov
psllw
clc
add
xor
je
xor
push
inc
movsl
mov
or
cld
insb
xchg
clc
rcll
pop
adc
stos
loopne
or
and
add
int
pop
ljmp
xor
xchg
xor
xor
xchg
sbb
mov
jp
jo
aad
scas
pop
xor
inc
ja
fwait
xchg
hlt
or
div
or
popa
xchg
fwait
jno
mov
mov
cmp
filds
cmpxchg
mov
bound
iret
fsub
mov
inc
xchg
adc
jge
and
ss
sbb
aam
lret
jp
iret
scas
mov
je
mov
scas
stos
dec
xor
pop
daa
pusha
mov
fwait
add
mov
xchg
and
fiadds
inc
and
popf
adc
mov
mov
or
mov
cld
insb
dec
mov
jle
jae
push
shrb
adc
adc
iret
call
mov
pop
sub
cmpsl
inc
jmp
and
add
mov
or
lods
inc
test
sbb
jbe
cmp
inc
xchg
lret
sbb
xor
scas
sbb
ret
iret
xchg
mov
pusha
mov
mov
add
or
or
cmp
sbb
cs
push
jb
or
pop
js
add
mov
stos
adc
jns
hlt
xor
das
cli
mov
jl
dec
and
sbb
pushf
push
pop
xorl
pop
mov
sbb
jecxz
in
push
daa
je
in
cmp
xlat
test
push
dec
ret
push
into
jne
movsl
jg
fisubl
jg
jns
int3
push
ja
call
jno
inc
outsb
in
cmpsb
inc
cmc
in
cmp
adc
data16
add
fsubrs
loope
jge
sub
sub
cmp
cltd
lret
ds
aad
adc
loop
mov
and
movsl
sub
cmc
sbb
js
add
add
xor
loope
movsl
xchg
insb
sub
pop
fsub
adc
adc
fsubr
imull
outsb
push
jae
test
testb
cltd
push
aad
ljmp
pop
push
and
push
mov
fmuls
lock
lret
xchg
inc
dec
jecxz
sbb
repz
sahf
adcb
ret
xor
push
pop
outsl
aam
or
hlt
fistpl
push
pop
insl
adc
test
ss
pop
outsb
lods
cmc
pushl
out
add
movl
xor
or
adc
frstor
repnz
test
pop
xor
mov
imul
adc
data16
scas
cmp
cmp
mov
add
push
sti
xor
mov
mov
out
cwtl
mov
inc
iret
mov
jp
lock
stos
rep
push
aad
mov
xor
push
xor
fcomi
je
xchg
push
aam
jbe
sahf
pushf
mov
inc
jmp
adc
cs
pop
mov
inc
add
aas
add
jb
adc
int
stos
jno
jecxz
push
adc
pop
push
jmp
cwtl
pop
push
mov
xlat
arpl
int
sub
hlt
movsb
pop
lret
arpl
xchg
shlb
lock
cwtl
das
insb
sub
mov
mov
mov
shrl
inc
call
dec
loop
daa
cmpsl
jae
pop
mov
dec
addl
pop
pushf
lret
jns
mov
and
int3
inc
mov
rcrb
jmp
sbb
push
ret
xor
pop
mov
dec
jnp
clc
sti
pop
mov
test
dec
popa
call
inc
add
cmpsl
and
mov
shl
lret
or
add
sarb
test
mov
mov
and
push
pop
xchg
je
pop
test
shll
inc
out
sbb
psubsw
sbb
andl
add
call
in
xor
fimull
stos
and
fisubrs
mov
jl
ss
jmp
pop
ja
out
dec
call
decb
cmp
mov
addl
adc
lock
inc
dec
imul
add
in
mov
xchg
bound
push
mov
iret
loope
imul
lahf
jp
loop
mov
dec
mov
insl
sbb
jl
in
fistpll
ffreep
xor
xor
inc
xchg
out
gs
out
jae
popf
cmp
mov
cmc
dec
jne
mov
ljmp
aas
loopne
mov
jle
xchg
push
push
pop
cmp
cmpsl
call
cmp
pop
lcall
divb
lret
xor
or
sub
aam
fwait
xchg
cltd
stos
xchg
and
cmp
imul
xlat
vpaddq
rorb
xor
iret
shlb
repnz
fcmovne
call
dec
bound
out
xchg
inc
fisubrs
jge
mov
sbb
fisubs
or
pop
cli
int3
sub
adc
push
xor
mov
sbb
inc
popf
ret
cmp
jnp
movsb
lcall
xchg
push
push
xor
jbe
lds
add
jae
mov
jno
mov
lods
dec
xor
lods
push
mov
inc
movsl
xchg
rcrb
push
popa
xchg
test
add
inc
std
dec
sti
cmpsb
and
pop
arpl
in
pop
movsl
popf
pop
push
lods
fndisi(8087
repz
ret
aad
cmp
xor
sarb
clc
xchg
cmp
repnz
test
pop
xor
push
and
sub
mov
test
jl
adcb
jecxz
xchg
and
mov
dec
test
mov
jle
pop
icebp
push
mov
lods
jge
data16
mov
xchg
cld
and
sbb
jg
mov
enter
xchg
jle
lret
push
rcr
repnz
sbb
sahf
and
jnp
xor
push
outsl
mov
aas
loop
fptan
stc
pop
sbb
add
adc
jecxz
lods
fcoml
out
push
jno
cli
cli
outsl
xchg
xor
xchg
or
cmpsl
into
mov
loopne
aad
pop
push
pop
mov
sbb
mov
push
mov
mov
sbb
dec
fcomip
xlat
xchg
jns
sub
lock
insl
leave
mov
loope
ds
in
nop
adc
push
notl
mov
loop
push
sti
loop
repz
xchg
jns
cmp
mov
fdivrp
pop
test
dec
inc
mov
int
pop
pushf
pop
sqrtps
and
scas
inc
adc
pop
inc
sbb
dec
aas
lahf
jmp
jb
movsb
inc
dec
and
mov
jecxz
fiaddl
std
pop
sub
pop
push
add
mov
jmp
fs
dec
and
xchg
cli
pop
outsb
mov
xchg
lock
shrl
mov
insl
cmpsl
push
and
sub
sar
and
mov
es
dec
fisttpll
mov
pop
jbe
cld
mov
mov
mov
ljmp
sti
int3
or
outsl
adcb
mov
loopne
les
imul
xor
ljmp
jmp
sub
pop
mov
lret
xchg
sbb
push
push
stos
push
sbb
scas
jmp
dec
cltd
in
nop
js
fimuls
lods
push
lret
dec
xchg
xchg
inc
adc
pop
imul
addb
aam
jmp
jnp
rol
cli
or
xchg
xor
xchg
shlb
push
pop
mov
cmpsb
pusha
or
mov
dec
fldt
insb
or
jmp
push
negl
enter
mov
lret
add
fsubrl
xchg
mov
adc
push
push
or
loopne
adc
and
data16
mov
push
pusha
out
imulb
loop
movsb
xchg
add
int
js
fstl
jecxz
out
aaa
xor
gs
push
xor
lods
stos
add
mulb
in
fs
and
out
jnp
xlat
aam
repz
rclb
adc
iret
cmpsb
inc
mov
imul
inc
add
shll
gs
or
mov
inc
push
fisubl
adc
sbb
test
imul
mov
push
inc
test
mov
in
repnz
rcrb
fwait
leave
das
arpl
push
xchg
mov
arpl
jne
cmc
aaa
test
rorb
clc
jmp
fcmovne
sbb
adc
mov
inc
jmp
jo
jp
scas
cmp
dec
cmp
jl
movsb
mov
push
jbe
cmpsb
push
in
jmp
push
clc
cmp
sub
jl
ret
jg
mov
ja
movsl
lea
and
sbb
push
fnstenv
adc
incl
std
mov
mov
lret
js
push
push
pop
in
add
movsb
shl
cwtl
std
sub
push
out
cmp
ljmp
pop
sti
rcrb
fistl
mov
add
mov
xor
xor
sub
int
fisubl
das
push
cs
fdivrl
mov
mov
inc
outsb
sbb
xlat
test
dec
adcb
xchg
mov
bound
dec
mov
and
xchg
push
sbbb
pop
rcr
sbb
notl
fmulp
push
out
shll
mov
scas
fistps
out
imul
je
xor
inc
loop
or
stc
inc
add
test
fldcw
ss
loope
lods
ret
cmove
push
arpl
cli
sub
xchg
dec
cmp
push
cwtl
or
sbb
insb
mov
gs
mov
loope
jb
aad
out
insb
and
add
adc
pop
out
ror
outsl
data16
cmp
cmp
mov
fdivrs
and
xchg
sbb
incb
and
jno
iret
nop
out
dec
mov
inc
cmc
cli
fnstenv
mov
cmc
xchg
cmp
ljmp
out
fnstcw
pop
cld
sbb
adc
fistps
lds
cs
push
scas
inc
cwtl
inc
pop
inc
aaa
es
aas
ds
add
push
jge
inc
data16
mov
popa
std
add
cwtl
ror
xor
icebp
pop
adc
dec
push
dec
mov
pop
adc
sbb
xchg
cmpsl
inc
das
sub
int
and
inc
and
dec
xor
dec
ss
cld
add
fstpl
iret
cmpsl
jno
ja
lcall
cld
out
out
lret
push
mov
and
add
xchg
sbb
add
push
fstps
ret
push
push
xor
or
sahf
clc
jno
imul
push
aad
lods
xchg
inc
nop
mov
in
leave
inc
xchg
arpl
iret
push
xchg
mov
add
test
lcall
fldenv
push
lea
dec
test
or
sbb
int3
mov
pop
bound
pop
adc
pop
stos
lods
ficompl
dec
ficompl
add
and
incl
xchg
sbb
cltd
adc
mov
cmpl
lret
pop
popa
jg
ja
or
dec
into
adc
inc
shrl
fwait
cmpsb
adc
lcall
mov
jp
add
out
bound
jns
pop
test
push
dec
push
xchg
add
mov
lret
jnp
aaa
andb
pop
call
jp
and
bsf
xor
dec
fisubrs
in
or
rcr
add
xchg
xlat
out
sub
test
rolb
lret
outsb
xor
mov
into
mov
and
mov
mov
jnp
adc
push
mov
push
xchg
cmpb
add
or
pop
shll
or
fwait
jae
repz
push
mov
push
cltd
mov
push
dec
rcll
pop
jp
imul
arpl
fistpl
sbb
inc
push
xor
pop
popf
lods
leave
mov
hlt
out
outsl
arpl
andb
aam
loope
xor
mov
add
ss
add
pop
ljmp
xor
inc
pop
leave
scas
sbb
and
push
cmp
pop
icebp
push
hlt
pop
pcmpeqd
cld
adc
rorb
lcall
rclb
loop
cmp
jge
paddusb
push
ja
movsb
movsl
xchg
xchg
out
push
lahf
sub
push
lods
xor
test
cwtl
fistps
sbb
jmp
pop
mov
call
pop
and
xor
loope
pop
xchg
sub
movsb
xchg
cmp
lea
jg
jle
pop
mov
cmp
fbstp
mov
mov
xor
ss
int
inc
loope
fstl
cld
lcall
xchg
fsubr
sub
call
test
mov
xchg
lods
int3
mov
dec
pop
mov
mov
or
and
jg
cmp
ds
mov
lret
rorl
mov
sbb
sahf
imul
xor
ret
cmp
hlt
push
loop
jo
stc
lea
adc
xor
lods
stos
insl
leave
mov
xchg
out
mov
push
insb
or
sbb
dec
and
mov
loopne
cli
cli
pop
xchg
lcall
imul
adc
push
add
inc
or
sbb
mov
sbb
cs
mov
inc
addb
daa
roll
mov
push
xchg
inc
or
adc
in
lret
adc
sub
fsts
insl
lea
sahf
call
pop
jg
pop
scas
movsl
lea
jnp
pushf
mov
xchg
jmp
lds
inc
pop
int3
mov
aas
fnstsw
jb
pop
scas
dec
adc
xorb
jecxz
scas
add
xor
cwtl
xlat
outsb
mov
jo
mov
or
adcl
js
pop
mov
pop
mov
pop
jl
in
comiss
ja
mov
fcomi
test
ret
fwait
mov
insl
lock
push
cmpsl
jo
mov
int
icebp
int
es
adc
dec
mov
jle
sbb
lret
mov
cmp
cmp
dec
mov
aam
cmp
ret
loop
dec
mov
les
js
lods
lahf
xor
push
mov
sub
jl
mov
adc
imul
mov
mov
test
xor
mov
lcall
test
mov
cwtl
in
bound
mov
inc
push
pop
mov
lret
mov
add
cmp
insb
xor
or
add
mov
xchg
jno
push
pop
sbb
divb
loop
dec
shrl
push
rcrl
sub
mov
pop
mov
jge
out
loopne
lret
xchg
cmp
jp
in
xchg
pop
xchg
dec
das
sub
push
ror
or
movsl
imul
mov
mov
cmpb
in
mov
pandn
or
xchg
stos
sbb
jmp
push
adc
out
sbb
mov
mov
inc
stos
out
jmp
adc
pop
jnp
push
cmp
mov
push
fdivrl
ror
adc
pop
or
inc
pop
cmp
loope
lea
cltd
imul
or
hlt
xchg
es
imul
scas
movsl
add
rcrb
mov
lods
scas
xor
dec
or
shll
cs
inc
out
add
outsb
es
adc
rorb
fiadds
add
lcall
in
push
fiadds
sub
jo
dec
dec
scas
clc
sbb
and
popw
cmp
insb
and
aam
jbe
lds
enter
daa
jo
push
jno
xor
cmpsl
das
push
dec
jle
adc
movsl
fwait
sbb
repnz
dec
fstl
jg
sub
arpl
cmpsb
dec
pop
outsb
pop
fsubs
int3
pop
bound
cmp
sub
lret
cmpsl
mov
lcall
mov
test
negb
xor
push
aam
mov
das
int
sub
sub
ss
fdivs
lcall
cwtl
fcoml
mov
test
add
insb
jg
movzbl
lret
aam
mov
aas
push
and
push
mov
jle
fdivr
inc
repz
aas
repnz
or
mov
pop
sbb
inc
clc
fwait
sahf
push
jle
cmc
ficoms
subl
ja
inc
or
stc
inc
mov
mov
cmp
xchg
das
xchg
mov
dec
rcrl
xor
sub
or
subb
mov
stos
lds
mov
jl
bound
mov
xchg
sti
pop
sbb
stc
jo
xlat
push
dec
int
mov
test
jb
repnz
mov
aad
add
dec
adc
or
pop
jl
and
push
les
mov
test
out
xchg
ret
popf
call
xlat
or
pop
in
adc
add
pushf
pop
ret
out
mov
push
lahf
cwtl
inc
cmpsb
mov
inc
insl
js
aas
jl
fnsave
mov
mov
cmp
xlat
stos
es
in
push
xchg
xchg
cwtl
dec
jns
mov
stos
in
xlat
outsl
aam
sub
jl
mov
sbb
adc
mov
into
lock
mov
mov
xchg
mov
out
not
ljmp
ret
lea
