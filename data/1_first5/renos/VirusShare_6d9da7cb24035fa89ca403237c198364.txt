mov
adc
or
push
je
imul
add
push
mov
cmp
mov
in
jns
xchg
xchg
xchg
lock
cmp
jno
lea
sub
fucomi
decl
cmp
je
lea
push
and
add
xchg
or
or
cmp
jl
mov
ja
inc
inc
dec
mov
in
add
mov
lea
mov
sbb
mov
push
dec
push
call
dec
aam
jnp
sbb
lahf
insl
outsl
das
fadds
push
sbb
sbb
and
xchg
sbb
xchg
and
jb
lea
notl
int
mov
mov
call
fistpll
and
or
mov
or
loopne
fstp
out
mov
xor
sub
lea
or
mov
add
xchg
or
insl
lcall
nop
jmp
rolb
mov
enter
test
jl
je
orl
insb
cwtl
mov
arpl
xor
bound
mov
inc
inc
xor
inc
aas
in
std
decl
add
inc
outsb
xchg
cwtl
lsl
lods
std
decl
add
ret
add
push
lcall
lcall
aaa
lcall
int
xor
xchg
or
ss
inc
int
lret
test
inc
add
and
lret
sbb
or
int
sbb
adc
adc
into
lret
jne
dec
pop
bswap
and
and
in
mov
outsb
xor
lret
push
pop
and
and
sub
fsincos
mov
sbb
repnz
and
cs
and
fcomp
or
and
cld
xchg
mov
inc
mov
dec
mov
aaa
aaa
dec
popa
fstpt
repnz
popf
sub
and
mov
cs
int3
xor
insl
cmp
or
and
into
add
into
inc
mov
into
and
push
aaa
out
loop
xchg
fisttpl
and
or
jge
lret
xor
jo
out
or
push
mov
addr16
je
dec
adc
mov
sub
ds
dec
out
lret
sbb
push
mov
mov
aaa
sub
sub
stos
inc
mov
je
ss
stc
adc
int3
and
add
scas
or
jle
stc
or
xchg
jmp
mov
and
aas
mov
mull
and
push
mov
loop
sbb
mov
test
add
pop
orb
ret
out
cmc
lret
les
int
sarb
xor
inc
and
mov
push
cwtl
and
sbb
or
mov
ficompl
je
and
adc
das
fcmovnu
fstp
push
mov
ret
inc
xor
jno
ja
mov
cmp
jb
or
add
or
dec
push
xor
and
push
inc
adc
ret
push
rorl
lret
inc
add
pop
adc
or
adc
insl
ret
jbe
and
xor
ss
jo
lea
sub
sti
sbb
dec
fnstsw
push
xor
pop
hlt
and
cmp
movl
push
pop
je
jnp
pop
fnstenv
lret
mov
jb
test
lcall
insb
pop
or
cltd
and
push
mov
idivb
adc
pop
fisttpll
popa
xchg
bound
insb
sbb
gs
xor
aaa
inc
dec
dec
out
xchg
insl
xorb
lds
jbe
mov
mov
inc
arpl
je
mov
mov
and
ds
lock
xor
and
and
dec
sbb
mov
cmp
cmp
pusha
mov
mov
lahf
fwait
cmp
jmp
mov
out
les
sub
dec
sub
xchg
mov
aas
cmp
cmp
stc
jle
or
ds
into
fnstcw
cmp
xor
jb
std
cmpsb
loope
adc
int3
cmp
cmp
pop
clc
mov
ja,pt
and
add
jg
dec
hlt
mov
mov
mov
xor
divl
test
jne
or
popa
outsl
adc
jmp
adc
insl
and
mov
jns
inc
and
mov
fbstp
pop
clc
mov
add
pushl
adc
mov
push
dec
test
jb
inc
cld
fistps
clc
in
movl
add
mov
mov
fisttps
lods
or
xchg
mov
add
outsl
jbe
xor
sti
daa
mov
or
add
in
xchg
add
sub
cmp
push
mov
jmp
and
test
adc
dec
jb
cmp
out
sbb
mov
dec
rcll
add
sbb
mov
scas
or
adc
dec
in
jne
jg
inc
ret
dec
outsl
popa
fs
imul
adc
push
imul
jb
je
arpl
jb
gs
mov
outsl
add
decl
call
dec
mov
adc
and
mov
lds
mov
and
pop
leave
cmp
loop
or
sahf
insl
xor
xchg
pop
loop
or
nop
jl
push
pop
ja
dec
dec
adc
inc
lock
push
jge
mov
cmp
es
or
loope
mulb
lcall
mov
sbb
add
push
push
push
cmp
sahf
mov
cmp
sub
cltd
mov
xor
mov
xchg
xchg
mov
dec
mov
push
mov
in
je
and
sbb
gs
dec
gs
pandn
test
inc
outsb
fs
jns
adc
imul
test
pushl
outsl
jle
dec
outsl
insl
addr16
pmuludq
adc
mov
lock
cmpb
pop
jbe
or
push
xor
add
sub
cmp
cs
cmp
and
cmpsb
mov
lahf
loopne
or
lods
push
add
push
call
add
jge
mov
fstpt
loope
xor
jl
repz
mov
fcoml
sbb
sub
das
mov
sub
fadds
loope
inc
adc
xor
xchg
or
jl
sbb
lock
insb
cmpb
xchg
icebp
shl
mov
inc
jp
mov
fwait
or
cmp
jnp
cmp
mov
adc
jge
xchg
leave
inc
push
push
test
xchg
inc
shlb
sub
outsl
sti
data16
jge
je
xor
sbb
add
dec
dec
movzwl
call
pextrw
cmp
cmpsl
sbb
call
mov
lea
mov
test
push
jmp
scas
xchg
pop
xchg
nop
fstpl
loope
sub
cmpb
inc
arpl
fucom
divb
fcomp
cmp
fsubrl
cmp
pop
push
or
fsubrl
sbb
sub
push
mov
sti
add
jmp
jbe
sbb
roll
xor
or
in
add
push
push
cld
sub
hlt
mov
int3
cmp
adc
push
fsubp
mov
sub
es
orb
or
xor
dec
xor
mov
pop
adc
ret
pop
cmp
imul
sti
test
or
cmp
imul
aam
das
sbb
mov
or
xor
lret
rorb
ds
and
cmp
add
fbstp
popa
scas
xchg
ret
ret
shll
and
fildl
sub
inc
mov
and
je
gs
and
popa
insb
dec
daa
daa
and
movsl
and
clc
in
mov
and
or
pop
dec
leave
jl
sbb
call
mov
pmullw
ss
adc
ret
push
loopne
jne
inc
pop
push
inc
or
cmp
hlt
insb
mov
push
aam
in
fsubs
ja
fldenv
inc
adc
cmp
loopne
pop
lods
sbb
or
and
sbb
cmp
adc
mov
in
push
pushf
add
pop
or
xchg
call
leave
pop
sbb
and
loopne
in
gs
sub
pop
or
and
push
push
mov
sbb
or
adc
sub
jl
cmc
sbb
add
sub
push
adc
dec
es
xor
pop
sbb
pop
mov
add
outsb
imul
push
pushl
pusha
push
pop
sub
mov
jg
out
or
test
das
aaa
fwait
sti
xor
add
add
outsb
gs
enter
fs
insb
or
out
out
aas
jne
movb
mov
add
dec
mov
fmull
jnp
nop
cld
xor
mov
sub
mov
push
sbb
or
fcom
out
mov
fisttpll
mov
adc
imul
in
add
out
add
clc
mov
enter
out
idiv
or
call
fsubrs
cmpb
ret
jle
push
sub
shlb
cltd
ret
int3
movb
add
ficoml
dec
clc
inc
or
sbb
ficoml
cmpsb
imul
mov
incb
cmpsl
in
push
gs
je
in
cmpb
fisttpll
and
jmp
or
sbb
mov
jge
and
hlt
sbb
hlt
mov
adc
inc
lock
mov
and
sahf
and
lock
adc
sbb
cwtl
mov
stos
add
clc
decb
xor
sahf
hlt
mov
add
xor
mov
hlt
test
js
xor
cld
shrb
mov
xchg
scas
jne
mov
pop
clc
mov
jbe
test
jbe
loopne
xor
add
imul
push
movsl
adc
xchg
mov
fldenv
insb
es
flds
std
cli
dec
jp
pop
push
js
or
mov
dec
aaa
push
sbb
hlt
mov
stos
loope
fmuls
xlat
jge
out
add
lcall
add
pop
xchg
popa
loope
add
xchg
xor
lret
and
movsb
aaa
les
scas
add
mov
test
cmpsl
scas
add
js
mov
int
sbb
in
xor
or
add
ljmp
dec
ud2
outsb
or
add
cmp
dec
fwait
aam
add
push
push
sahf
outsb
mov
arpl
sbb
cmpsb
out
cs
pop
je
add
fists
fwait
lock
push
cs
add
sub
add
sbb
sahf
or
or
repz
push
gs
dec
sub
lods
and
enter
cmpxchg
add
leave
or
add
jp
arpl
jo
dec
ss
daa
gs
or
test
lret
push
xchg
sbb
mov
or
and
xor
pop
mov
addl
adcb
push
sbb
adc
mov
std
cmp
mov
xor
cwtl
and
lahf
xchg
data16
sub
cld
sub
adc
mov
ja
cmc
add
cld
add
or
push
cli
sub
dec
mov
ret
jns
cltd
and
add
sahf
stos
pop
mov
test
sbb
add
mov
testl
jecxz
or
push
insl
fcmovnu
add
add
and
ds
or
negb
add
adc
sbb
aad
das
jne
and
add
add
jnp
fiadds
loopne
pop
inc
out
in
pop
push
mov
loop
sub
int3
ljmp
mov
std
out
add
pop
jl
mov
bsr
cmc
add
xlat
ja
add
pop
add
ja
xchg
add
clc
andb
popf
insl
stc
pop
mov
add
add
mov
add
fucomp
out
pop
das
sub
push
test
mov
cld
cmp
inc
outsl
fisttpll
rolb
or
add
mov
sub
ljmp
push
mov
add
cmpsb
stos
pop
and
out
add
ret
add
insl
cwtl
cs
clc
or
add
add
dec
add
repnz
fildl
pusha
push
shlb
push
mov
mov
dec
mov
orb
sahf
or
lea
mov
add
popf
testb
add
xchg
into
jno
dec
adc
fwait
xor
out
sub
aaa
xlat
sbb
out
rolb
mov
gs
xlat
dec
mov
fwait
popa
imul
sbb
daa
idivb
cmp
add
mov
add
add
sahf
and
push
mov
dec
add
push
xor
fsub
pop
mov
popf
sub
fwait
push
add
lahf
lods
test
xor
add
push
shlb
fsubs
arpl
pop
and
push
mov
outsb
clc
add
mov
test
and
ja
xchg
divb
mov
jp
in
mov
mov
xchg
outsl
insb
in
adc
in
insl
js
sbb
pop
addl
xor
mov
push
jp
test
daa
popf
jge
mov
and
lods
outsl
add
movb
mov
pop
negl
scas
add
mov
xchg
iret
add
jnp
fcompl
pop
dec
cmp
movsb
push
popa
add
add
cmpsb
mov
push
or
fstpl
out
testb
inc
sti
cmp
inc
arpl
push
mov
pop
data16
aam
sbb
fidivrs
sub
and
inc
cmp
imul
jbe
mov
inc
fcmovnb
roll
dec
or
cwtl
mov
lock
jmp
adc
inc
mov
movsl
test
jae
fildl
sbb
xchg
stos
xor
das
imul
inc
clc
pop
outsb
fisttpll
and
mov
mov
mov
loop
mov
push
fildl
shrl
mov
mov
in
mov
xor
xor
mov
mov
addl
and
les
push
add
pop
cld
sbb
mov
xchg
xor
pushf
add
scas
sti
in
mov
sbb
repz
dec
lods
gs
push
fdivs
push
add
add
andl
xorl
aas
push
xchg
orl
add
mov
test
data16
iret
dec
in
sbb
mov
mov
fdivrp
lcall
stos
test
ds
clc
mov
and
mov
outsl
mov
std
rsqrtps
int3
aaa
ss
int3
push
mov
jb
add
ljmp
pop
xchg
xchg
cli
xlat
test
dec
jp
or
arpl
mov
pop
mov
imul
stos
outsl
popa
imul
or
jmp
jmp
push
loope
imul
jle
lock
inc
xor
cmp
dec
mov
fisubs
mov
xor
mov
mov
lods
sub
testb
adc
xchg
gs
xor
lea
jbe
jecxz
dec
lret
insb
int
mov
inc
je
out
add
insl
jo,pn
adc
pop
adc
aam
add
rolb
es
cwtl
jecxz
sub
insl
jecxz
adc
xchg
shr
int
mov
mov
xor
add
aaa
jne
test
mov
and
cmovns
mov
dec
sbb
adc
mov
jmp
jae
stc
fst
fprem
sbb
jbe
ljmp
pop
mov
hlt
fs
jae
dec
pop
inc
sub
mov
sub
xlat
cmc
shll
rcrl
mov
adc
xchg
jns
mov
push
add
mov
add
pop
fiaddl
xor
fstp
ss
aad
inc
aaa
push
sbb
out
pop
sbb
cld
pop
shll
push
repz
je
roll
lea
shlb
ss
push
adc
ja
es
jo
adc
jno
in
inc
mov
mov
cmpl
cmp
push
xlat
cmp
pop
test
push
arpl
or
fisubl
mov
negb
test
jbe
insb
mov
or
js
mov
stos
out
push
es
cli
hlt
fadds
mov
dec
or
push
bound
les
js
xor
cmp
jle
int
fidivs
push
orl
dec
insl
inc
mov
icebp
add
cmp
fiaddl
push
lcall
movsb
cltd
cli
loopne
push
mov
dec
xor
or
daa
jecxz
sbb
imul
out
mov
push
jne
testl
test
mov
lcall
mov
xchg
mov
xchg
hlt
or
inc
sarb
roll
ret
fcmovnbe
hlt
xor
je
clc
mov
cmp
xchg
es
sub
test
cld
mov
cld
mov
pop
push
jns
cvtps2pi
test
adc
int3
jecxz
imul
sub
out
mov
xchg
or
popa
leave
pop
mov
xchg
dec
in
imul
ljmp
dec
fidivl
mov
jne
pusha
std
inc
ret
fisttpl
ja
test
dec
insb
pop
incb
push
jo
mov
repnz
pop
sbb
fbstp
jno
fdivrl
fistpll
clc
popf
sub
sub
or
movsb
sbb
dec
test
js
js
out
shl
stc
and
pop
lcall
imulb
or
jnp
scas
out
sbb
lds
pop
xchg
bsf
sbb
das
or
popa
test
scas
je
push
sub
roll
sarl
xchg
push
loop
or
xchg
sarl
jb
call
mov
mov
jnp
mov
mov
cmp
cmp
cmp
and
adc
rcl
hlt
inc
jnp
in
bound
mov
jle
inc
sub
daa
push
js
repnz
jge
xlat
scas
mov
sbb
jmp
shr
dec
pop
or
cmp
sarb
mov
loopne
jbe
or
mov
or
inc
push
iret
jne
or
adc
cmp
imul
jo
inc
ja
imul
mov
movsl
scas
fisttpl
das
mov
out
or
cli
repz
shll
sbb
or
mov
inc
dec
sbb
lock
in
loop
fistpll
mov
and
stos
mov
out
call
lahf
jmp
lcall
dec
and
adc
cmp
pop
adc
mov
test
pop
mov
jecxz
fnstcw
mov
bswap
dec
pop
mov
mov
test
and
insb
ret
insl
ja
or
rcrl
mov
cmpb
out
or
fsts
dec
xchg
lods
pop
insl
cmp
push
fwait
mov
jbe
aad
dec
inc
xor
add
inc
sbb
inc
pop
aaa
in
ljmp
pop
dec
push
icebp
inc
mov
dec
and
loop
inc
push
xchg
pop
pop
data16
inc
add
arpl
mov
push
pusha
dec
scas
or
popa
push
sub
jge
pop
cmpsl
fdivs
xchg
mov
sarb
mov
push
pop
data16
je
and
hlt
divb
cs
aad
popf
pop
pop
cli
in
xlat
fistl
and
or
mov
inc
inc
aam
fisttpl
xor
mov
push
pop
dec
xchg
dec
out
mov
adc
ret
mov
push
pop
pop
sbb
movsb
aad
es
popf
jnp
rcr
cmpsb
cltd
aam
xor
arpl
pop
stc
sti
mov
cld
inc
pop
or
mov
popa
test
mov
sbb
cli
mov
mov
jmp
ds
and
inc
test
int3
inc
minps
xchg
sahf
cmp
cmp
cmp
dec
rcrl
sbb
sbb
sub
push
popf
jle
into
pop
pusha
sub
xor
sbb
push
mov
mov
rcr
push
fisubl
hlt
mov
aad
push
test
jecxz
sbb
and
jb
ret
loope
and
adc
xchg
jb
dec
xchg
shl
or
imul
xchg
stc
fs
jo
mov
or
sti
pop
fnsave
mov
shlb
inc
mov
iret
jo
mov
adc
pushl
mov
cmp
push
adc
call
fs
pop
stos
adc
sahf
movsl
ja
xor
cmpsl
jbe
xor
addl
lods
movsb
test
add
hlt
scas
pop
jne
hlt
inc
or
repz
mov
mov
ss
jno
mov
and
mov
imulb
mov
repnz
xchg
les
or
dec
lret
andl
test
cmp
and
in
pop
mov
dec
in
mov
mov
xor
push
lods
popa
mov
pushl
push
inc
mov
mov
jmp
dec
push
pop
fcoms
fstl
lret
pop
pusha
loope
and
mov
cli
stos
mov
mov
xchg
dec
sbb
fidivrl
inc
rorl
push
fisttps
in
sub
and
xlat
inc
pop
dec
ffree
inc
sub
hlt
popf
fimull
add
insl
ret
ja
imul
mov
div
pop
fstl
adc
xchg
pop
fwait
jecxz
sar
push
jge
xchg
idivb
and
adc
xor
pop
push
mov
iret
pusha
xor
insb
lret
jp
loope
in
xchg
mov
loope
je
mov
pusha
mov
xor
mov
mov
dec
sub
aad
xor
stos
lcall
jmp
hlt
adc
push
mov
xchg
cli
shll
test
cld
or
or
adc
mov
in
jo
imul
fldl2e
inc
loopne
cmp
cmp
mov
int
jg
scas
and
dec
fwait
sbb
inc
lods
jne
das
fs
xor
inc
xlat
inc
pop
sbb
sarb
push
repz
shrl
int
jae
and
fbstp
xchg
es
sarl
jge
into
jmp
fstp
daa
or
lea
insb
inc
add
inc
sbb
cmp
jnp
fistpll
test
xchg
or
popf
dec
or
push
add
scas
xor
cmpsl
cmp
call
cmp
lret
mov
adc
inc
movsb
popf
dec
dec
std
sarb
sbb
js
inc
out
jb
testl
pop
pop
mov
dec
pusha
or
mov
scas
xor
pop
jo
outsb
insl
jne
test
xchg
sub
out
insb
arpl
lcall
and
mov
lods
in
sbb
or
mov
inc
or
subl
test
push
cld
les
leave
fucomip
pop
cltd
xchg
xor
sbb
mov
xor
es
mov
push
rolb
out
push
mov
pop
jp
notl
clc
dec
out
roll
or
dec
sub
add
push
add
dec
or
shr
daa
in
ret
daa
or
lock
repnz
out
jmp
mov
cld
inc
test
lahf
jle
dec
loope
and
fwait
dec
push
add
sub
test
popa
push
mov
out
jo
sub
ficompl
mov
insb
inc
outsb
sbb
push
cmp
aam
decl
pop
xlat
lock
pushw
sub
test
push
inc
jbe
mov
rcll
pop
mov
xor
and
imul
syscall
mov
push
jbe
push
in
push
test
out
add
xchg
sub
push
rcrb
adc
inc
mov
jne
inc
loope
push
mov
xchg
add
xlat
dec
imul
lock
mov
pusha
in
lret
jb
add
fisubrl
outsl
lock
jae
xchg
clc
inc
faddl
add
mov
aam
out
clc
push
pop
mov
fidivrs
mov
fcompl
xor
imul
std
shrl
jmp
push
cmpsb
push
mov
in
pop
mov
sahf
pop
xchg
test
ret
jp
xchg
jbe
lahf
sbb
jl
stc
xchg
iret
cmpsb
inc
or
rcl
dec
cmp
jne
popf
aam
mov
enter
enter
into
inc
bnd
push
loopne
pop
mov
mov
or
push
test
xor
notl
xor
dec
and
loopne
clc
dec
sub
in
push
test
neg
jl
daa
mov
mov
mov
movsb
mov
lods
jne
cld
sub
ljmp
sti
sbb
cmc
int3
in
push
mov
mov
int3
jmp
hlt
xor
insb
lods
pop
pop
pushf
push
iret
and
imul
jg
jae
mov
jmp
mov
call
je
sub
xchg
push
sub
add
ss
mov
lea
and
sar
mov
xchg
int
push
fstpl
nop
imul
int
lods
gs
fs
push
sbb
shll
dec
hlt
push
rcrb
adc
test
enter
pop
stc
ror
gs
sub
jmp
jp
or
ja
mov
stos
mov
push
subb
push
xor
mov
mov
mov
pop
aas
push
outsb
pusha
mov
outsb
call
or
jmp
mov
js
jecxz
or
adc
pop
fstl
insl
loop
jne
fadds
fisttpl
cmpsb
adc
daa
cmp
sti
sbb
pop
sarl
in
lds
and
push
out
sub
add
outsl
xor
cmpsl
mov
repz
adc
mov
push
out
fs
rol
dec
ret
gs
shl
sbb
push
inc
shlb
fs
mov
dec
roll
lea
outsb
add
fdivrl
add
jmp
out
pusha
repnz
inc
pop
and
inc
pop
sti
sbb
out
xor
xor
ffreep
lods
xor
rcr
mov
push
dec
mov
test
ds
ljmp
movsl
jg
repz
jne
mov
pop
dec
out
jecxz
inc
pusha
xor
fwait
jmp
pcmpeqb
out
or
dec
aad
xchg
and
fdivs
sahf
clc
hlt
mov
or
sahf
lcall
and
mov
sti
mov
mov
les
repz
mov
sub
dec
or
mov
fstl
mov
cmp
push
daa
push
loope
push
add
sbb
mov
jecxz
shl
ljmp
mov
inc
inc
sti
in
inc
fisubrl
pop
pop
icebp
sub
xchg
cmpsb
imulb
adc
xor
xchg
lods
fs
or
imul
mov
shll
insl
sbb
insb
cwtl
lret
cli
jo
push
jl
cmp
add
adc
cmp
dec
jmp
sbb
sahf
dec
pop
jp
xchg
hlt
mov
nop
lock
or
pusha
stos
xchg
cmp
lods
or
cmp
jbe
popf
loop
push
arpl
mov
call
push
pusha
aad
xor
xchg
sbb
xchg
lods
aad
ret
in
sgdtl
mov
pop
pop
mov
inc
inc
push
mov
cmp
adc
idivl
jne
fildl
bound
xchg
cmp
hlt
stos
lcall
popf
fstl
cmc
adc
push
loop
pop
sar
sub
push
jmp
or
mov
test
and
loopne
pop
adc
push
jb
je
inc
ficompl
fimuls
and
subl
sbb
jg
shl
outsb
stc
mov
mov
jo
mov
xor
dec
push
inc
jae
dec
dec
and
and
xor
loope
pop
xor
add
cmp
pushf
dec
cmp
pop
jl
lret
inc
hlt
push
int3
leave
hlt
test
adcb
lcall
test
jbe
or
adc
pushl
sbb
push
cmpl
push
inc
jge
cli
jno,pt
mov
cmp
aad
mov
pop
jae
in
fcoml
push
cmpsl
sub
pop
rcl
hlt
mov
jl
loop
push
aaa
cmpsb
mov
jle
add
gs
ret
mov
outsl
out
dec
mov
out
js
stos
fdivp
add
pop
adc
hlt
mov
inc
add
mov
sub
pop
jno
mov
jecxz
ljmp
orl
push
inc
sub
scas
test
mov
inc
popa
xlat
cmp
mov
adc
add
mov
xchg
fcmovne
sub
add
add
lcall
pusha
adc
leave
imull
insl
out
jecxz
imul
push
mov
xchg
test
jmp
scas
call
shrb
adc
sub
stos
push
jnp
mov
ds
dec
add
rol
push
std
lds
sti
xchg
ss
test
shrb
adc
jne
loope
cmc
xchg
adc
dec
out
mov
mov
sahf
js
ljmp
cmpsb
in
test
gs
and
js
xchg
les
adc
mov
or
scas
lods
xlat
push
inc
int3
sbb
out
call
fwait
sub
xor
push
cmc
movsl
inc
sbb
jnp
cltd
ret
mov
add
loop
or
fisttpll
fs
sbb
jae
sbb
mov
or
adc
aaa
or
adc
dec
jg
or
int
add
jecxz
es
xchg
jg
and
das
mov
daa
bound
call
inc
roll
mov
pop
aad
mov
pop
xlat
fldenv
lods
and
mov
pusha
fs
jl
push
fstpl
loopne
cli
stos
out
xor
arpl
mov
sbb
or
call
movsb
fiaddl
lds
mov
fcmovb
pop
in
fstp
test
mov
ss
cmp
jecxz
jle
inc
arpl
cmp
lods
adc
fst
ret
pop
outsb
xor
fdivs
or
sarl
out
scas
mov
roll
call
push
mov
sbbb
out
pop
push
shl
jg
arpl
sub
pop
adc
sbbl
mov
aas
add
and
dec
lret
lods
mov
or
push
xchg
jle
cmp
popl
sbb
xchg
sub
push
test
add
jl
inc
test
jno
in
enter
mov
and
lea
aaa
int3
and
popf
in
xchg
cmp
dec
shl
sub
sub
int
mov
sbb
jo
fsubrs
ljmp
outsl
cmpsb
test
add
adc
and
aad
rolb
xor
pusha
jle
mov
aam
xor
push
lret
jo
movq
push
add
jmp
fdivrl
rorl
js
in
jmp
setbe
shrb
sbb
mov
sarb
sub
jns
jle
mov
or
int3
jmp
dec
std
icebp
rcll
daa
out
pop
sti
clc
shl
xchg
jg
test
mov
lahf
lods
out
push
aad
call
cmp
jnp
mov
mov
jnp
in
call
insb
push
out
pop
scas
cmp
cwtl
pop
int
ret
insb
mov
cmp
adc
ja
pop
mull
xchg
hlt
dec
jl
dec
inc
bound
cmp
xor
dec
mov
push
push
es
pop
scas
jnp
shl
frstor
dec
or
rorb
adc
pop
mov
pop
pop
jne
inc
lcall
clc
fdivrs
lea
popa
mov
push
in
inc
xchg
aam
xchg
pop
loopne
jae,pt
fcompl
sbbl
fstl
mov
jbe
mov
cmp
lahf
inc
adc
dec
xchg
pop
lahf
bound
ds
mov
sbb
dec
xchg
mov
repz
andl
cmp
mov
pusha
dec
xorb
push
jecxz
xlat
lock
and
stc
xchg
xchg
mov
sahf
push
jb
and
jo
sbb
mov
cwtl
das
inc
lret
cs
jbe
int
xor
mov
xor
call
xchg
cld
in
call
inc
or
mov
push
pusha
mov
pop
sti
int3
lea
mov
add
inc
scas
rcrb
sub
insb
add
pop
add
popf
mov
or
xchg
add
cmc
test
push
lret
xor
pop
sbb
xor
push
pushf
sub
pop
data16
xchg
push
clc
lds
jne
lahf
fcomps
mov
repnz
mov
push
std
in
bound
sub
leave
dec
mov
pop
outsl
xchg
out
cli
inc
pminub
xor
sub
flds
adc
lahf
call
aad
mov
or
push
dec
mov
jmp
jl
addr16
mov
add
lods
shll
cmp
lds
sub
notb
pop
jmp
je
push
push
js
shll
mov
push
fsubrl
sub
test
and
in
loop
jle
shr
lds
lret
dec
sbb
jo
pop
mov
icebp
or
xchg
xor
mov
jp
jae
mov
sbbl
pop
add
rorb
rcll
push
cmpsb
lret
jae
jge
hlt
andb
mov
mov
mov
fidivrs
push
push
mov
sub
jle
out
pusha
push
testl
cmp
ret
mov
jno
repnz
mov
jmp
subb
sbb
inc
add
inc
push
xlat
mov
add
sbb
cmp
fsubrs
or
loop
inc
xchg
push
fdivrs
adc
pop
fcoml
xchg
mov
sbb
cmp
lea
pop
mov
xchg
fidivrs
xchg
inc
test
repz
cmp
sbb
insb
out
jmp
mov
xchg
add
xchg
ds
call
dec
mov
pushf
cli
into
jo
xor
lret
test
mov
insb
pop
pop
ret
pop
js
mov
sbb
sbb
push
lods
fcmovnbe
scas
mov
test
mov
push
cltd
jg
or
xor
mov
ljmp
leave
scas
out
mov
inc
lods
cmc
inc
xchg
and
cmp
das
aam
popa
rcrb
rcll
scas
pusha
cmp
cmp
clc
stos
rolb
flds
adc
pop
lcall
cltd
jle
lods
popa
ret
dec
sub
filds
and
lcall
addl
xchg
mov
jbe
subps
push
fcompl
cld
push
adc
xchg
into
mov
ja
mov
xchg
jns
dec
push
lods
push
bound
lret
jbe
jle
shrb
xchg
pop
clc
mov
loope
inc
call
and
dec
sti
mov
cltd
loop
fimull
dec
jl
add
add
dec
je
loopne
push
hlt
or
bsr
sub
mov
ret
dec
xchg
std
lcall
or
adc
or
or
sbb
mov
call
xlat
scas
pop
xchg
push
cmpsb
fucom
adc
pop
jo
mov
push
fbld
jo
inc
jmp
adc
sbb
popa
jecxz
push
add
test
adc
cmc
jne
sbb
xchg
pop
in
mov
fchs
inc
dec
outsl
jo
rsm
cwtl
stos
fstpl
dec
and
sbb
xor
lahf
add
stos
int
cltd
cmpsb
cmp
add
test
imul
sub
xor
push
jno
xchg
adc
rclb
push
dec
addb
jmp
ljmp
les
mov
dec
and
cltd
inc
jno
ss
ret
ss
xchg
push
aam
sub
jae
push
push
jge
roll
or
popf
mov
mov
jp
jge
adc
lock
adc
lret
pop
jp
inc
loop
ficoms
adc
sub
rolb
scas
into
push
sub
je
inc
lock
cmp
jge
xor
xchg
mov
pop
ud2
aam
and
cmp
pop
inc
clc
jo
fistl
sbbb
jmp
outsb
gs
insl
jl
sbb
pop
cmp
push
cwtl
xchg
mov
jo
jne
sbb
stos
sbb
out
mov
and
jno
add
sub
testb
mov
ret
jne
out
inc
push
test
ljmp
xchg
ds
mov
dec
mov
push
push
pop
mov
jecxz
jge
ret
sub
leave
sbb
cs
jmp
aad
sub
inc
fcom
aad
fmull
icebp
out
adc
sub
pop
inc
jbe
ret
sub
cmp
push
push
sub
call
sub
fidivrl
movhps
sbb
dec
out
mov
sahf
out
mov
stos
jmp
fistpl
xchg
adc
mov
jne
jb
jp
lret
fsubs
mov
dec
jecxz
sarb
xor
mov
jne
leave
sub
xabort
jae
and
or
inc
sbb
es
add
shlb
dec
scas
leave
jnp
dec
popa
and
inc
pop
stc
and
mov
sahf
or
hlt
aaa
loope
aam
push
inc
add
aam
scas
push
sub
inc
push
cmpsb
mov
ficoms
inc
jbe
out
jp
fisttpl
leave
push
and
dec
xchg
aas
cmpsb
ds
cmp
inc
test
or
mov
lods
lea
test
pop
cwtl
mov
aas
daa
scas
inc
sbb
fsubs
fdivrs
aaa
clc
jne
cmpsl
popa
movsl
cmp
xor
je
mov
cmp
jb
in
sbb
addb
mov
mov
test
sbb
testb
add
lds
imul
mov
adc
mov
clc
adc
test
add
ja
loope
cmpsb
scas
jl
push
and
add
mov
pushf
iret
pop
shll
cmp
sbb
mov
mov
jnp
rcll
push
pop
xorb
dec
test
lcall
aad
push
test
popf
popa
and
cmp
sub
std
mov
stos
fstpt
push
fnstenv
hlt
arpl
adc
pop
cmp
add
xor
jo
imul
sub
xor
decb
jne
jecxz
popa
and
inc
out
push
push
mov
cmp
in
loopne
mov
cmc
fnstcw
xlat
lret
sbb
mov
lea
mov
cli
cmp
das
loop
jecxz
iret
pop
pushl
and
cmp
int3
pop
cmp
adc
or
xor
shlb
pop
adc
jle
sub
dec
lods
jo
xchg
out
push
stos
sti
out
out
jo
mov
lret
sti
dec
xlat
mov
cwtl
test
sbb
or
mov
imul
xchg
mov
xchg
fstps
add
cmpsb
addr16
xchg
pusha
fwait
mov
notb
jae
push
imul
dec
mov
int3
inc
mov
fstpt
fwait
inc
sbb
mov
out
sub
mov
lcall
xor
add
pop
lahf
insl
lods
mov
ja
sbb
cld
clc
mov
imul
xor
pmaxsw
lahf
push
sbb
ljmp
in
jns
mov
mov
movsb
dec
dec
ja
out
sbb
add
ljmp
in
mov
out
xchg
inc
lods
pop
mov
jp
adc
push
cmp
and
fidivs
cmp
cmp
popf
adc
pop
aas
xchg
loopne
mov
addr16
jg
pop
inc
push
xor
jl
std
jo
cltd
ret
push
inc
imul
xor
mov
mov
cmc
mov
inc
adc
xor
outsb
loope
mov
imul
fdivr
pop
sbb
fs
arpl
sbb
pop
lea
sarb
jecxz
fwait
push
dec
mov
mov
add
and
cmc
insb
loopne
pop
das
push
or
pop
movsb
jge
je
loopne
dec
inc
sbbl
xchg
mov
aas
aad
mov
jno
cmp
mov
out
add
les
in
push
psrad
sub
stos
aam
fcmovnu
push
jg
push
mov
xlat
rcl
aad
in
push
and
or
scas
dec
dec
aad
outsb
outsb
aam
xor
sti
add
pusha
pop
push
stos
sbb
cmc
jae
cmp
sarb
mov
mov
lahf
mov
nopl
jo
sub
mov
gs
jae
je
pop
fcompl
mov
and
push
sysexit
sub
mov
std
push
jne
jne
mov
negb
mov
mov
push
or
fldt
in
lahf
test
lea
test
adc
loop
sbb
sbb
pop
xor
test
dec
movsl
stos
mov
loope
in
push
adc
shlb
xchg
fadds
imul
insb
mov
cltd
mov
sti
jmp
jp
lds
insl
jo
mov
hlt
jbe
pop
and
mov
mov
mov
and
outsb
loope
jae
fwait
notl
jp
jecxz
addl
test
stos
es
mov
push
stos
mov
and
mov
mov
test
imul
jecxz
jmp
mov
icebp
jo
xor
mov
fst
adc
data16
out
loop
adc
add
pop
mov
inc
add
mov
cltd
loopne
dec
xchg
out
orb
push
xor
cmpsl
adc
mov
xchg
push
cmp
sub
cli
rcrl
data16
repnz
mov
or
sarb
xchg
stos
xlat
pop
clc
aad
test
push
inc
clc
or
sahf
stc
mov
add
dec
adc
jmp
dec
cmovge
sbb
fcoml
aas
xor
mov
test
jecxz
mov
test
pop
mov
nop
pusha
fwait
js
cmp
push
pop
cmp
divb
push
sti
shrl
inc
cmp
mov
mov
test
clc
fdivrl
xchg
es
das
xlat
in
xchg
call
or
sbb
dec
gs
inc
inc
loope
ja
mov
paddusb
mov
mov
clc
mov
pop
mov
xor
push
imull
jp
fcmovnb
cmp
repnz
or
rorb
xor
das
loope
imul
in
cmp
cmp
lea
das
xchg
outsb
int
and
and
xor
sub
mov
test
mov
leave
xchg
clc
sbb
shl
test
xchg
imul
pop
dec
adc
or
sub
lret
sub
movsl
or
mov
in
sbb
je
mov
dec
pop
sbb
loopne
or
hlt
inc
cmp
fwait
enter
mov
pushf
scas
ffreep
loope
rorl
addl
xor
fadds
out
test
mov
lock
imul
test
jb
jmp
sbb
xlat
jae
pop
cmp
cs
loope,pt
mov
push
push
adc
dec
imul
shr
sbb
mov
call
mov
repz
dec
sarb
push
mov
xchg
dec
xchg
adcl
pop
cmp
in
jle
sub
addl
les
fdivrl
scas
pop
in
cli
pop
xchg
adcl
push
filds
std
lret
repz
mov
jb
lock
and
jnp
pop
loopne
cmp
call
jae
fnstenv
aas
dec
jg
clc
mov
xchg
daa
push
dec
pop
pop
adc
loop
int
std
lcall
mov
mov
mov
mov
sbb
dec
jmp
imul
clc
stos
loope
xor
shrl
dec
pop
inc
sub
hlt
jmp
loope
mov
xlat
test
jne
mov
dec
dec
int
push
ret
lahf
test
push
jb
xor
push
outsb
mov
mulb
fcoml
cld
cli
call
mov
cmpsl
arpl
or
push
push
sbb
mov
ffreep
xchg
jns
or
cwtl
ds
sbb
fsubrl
in
xchg
sub
or
lahf
clc
out
lds
mov
mov
add
insb
dec
int
cmp
jge
add
into
jbe
stos
mov
mov
fildll
sbb
mov
fisubrl
sbb
mov
aas
xchg
inc
repnz
aas
not
lock
cmc
stc
sbb
xlat
lock
mov
imul
xchg
mov
mov
daa
aad
inc
call
stos
mov
jne
fs
stos
jmp
cmp
aad
xchg
dec
cs
hlt
lock
cwtl
sbb
xchg
mov
icebp
notb
or
lahf
mov
mov
out
add
call
mov
in
add
es
adc
sbb
out
dec
fwait
je
dec
jne
adc
loope
insb
in
jbe
mov
ja
inc
cwtl
fsubr
loope
push
push
fpatan
pop
roll
imul
in
mov
js
fiadds
sbb
cwtl
add
pop
mov
daa
mov
xchg
test
inc
pop
cmp
sub
xchg
pandn
lea
rorl
rcr
sbb
int
jmp
or
data16
pop
cmp
jbe
cltd
stos
add
sarb
xchg
jae
les
ficoms
pop
mov
aas
loopne
adc
les
or
es
sbb
mov
mov
add
sbb
ret
rcl
outsb
movsb
adc
je
mov
jg
fisubl
and
xchg
imul
lcall
cwtl
stos
mov
data16
mov
pusha
mov
or
sbb
stos
pop
push
andl
inc
into
adc
std
adc
fs
dec
cmp
sub
xchg
jnp
dec
test
inc
inc
inc
aad
sti
in
testb
ret
mov
xchg
int
mov
loope
mov
mov
jle
inc
cmp
push
dec
and
movsl
add
pop
ss
mov
jnp
cs
jmp
mov
sbb
mov
shl
or
fistl
lcall
mov
cmc
jns
xchg
bound
mov
jo
jae
mov
mov
xchg
js
jg
adc
clc
xor
in
xchg
ja
fimuls
sub
pop
mov
dec
mov
test
in
push
bound
pop
add
cmp
pop
out
sub
mov
imul
mov
jecxz
xor
cli
fcomi
adc
adc
mov
inc
lods
pop
fs
push
sbb
arpl
mov
pop
lds
or
icebp
roll
cmpsb
bound
not
add
or
rcrb
inc
outsb
ds
xor
jne
jne
inc
sbb
mov
rcrb
adc
or
push
xchg
or
fcmovne
and
inc
fnstcw
in
mov
icebp
hlt
cmp
xchg
mov
mov
fildll
cli
std
mov
pop
jle
sbb
pop
pop
cld
cmpsb
xchg
sub
pushl
fcomp
sbb
fstpt
cwtl
fdivrs
mov
and
adc
jge
xchg
lahf
ja
fcomi
jge
adc
inc
adc
push
mov
sbb
push
mov
in
mov
xor
ljmp
push
ss
sbb
xchg
jecxz
cltd
jnp
js
dec
out
scas
cmp
cli
outsl
jp
jge
xor
shl
mov
int
jp
out
xor
push
icebp
in
sbb
xor
clc
popf
sbb
mov
les
call
or
pop
jbe
inc
push
ret
mov
clc
xchg
jo
imul
xchg
sbb
xor
jbe
out
cli
call
xchg
cmc
jne
xchg
inc
sbb
mov
mov
mov
pop
mov
cmp
aad
or
data16
shlb
cwtl
push
fdivs
sahf
lret
add
sahf
mov
fcomps
loopne
ds
pushf
mov
pushl
pop
paddw
pop
xchg
jns
mov
xchg
dec
les
hlt
mov
loopne
out
dec
push
mov
jo
sub
ret
and
or
pop
push
mov
ret
adc
lods
adc
lret
shl
cli
mov
cmpsl
mov
out
shll
xlat
popf
or
out
push
fcomps
inc
ja
fistl
mov
imulb
add
sti
xor
add
shrb
adc
sub
ds
jg
lds
hlt
push
cs
insl
and
push
fimull
fcomi
sbbl
mov
cmp
cmp
mov
call
pop
add
faddl
aaa
pop
pop
dec
jae
add
ljmp
scas
aaa
pop
loopne
xchg
hlt
sub
bound
fiadds
pop
xchg
mov
fcmovnu
fmull
outsl
cmp
push
sti
loope
inc
loopne
ret
out
adc
testl
and
fbstp
push
or
inc
scas
sub
popf
inc
xor
stc
add
lods
fdivrp
pop
mov
stos
pop
sbb
testb
pop
lock
or
les
fdivrs
icebp
popf
jae
adc
ss
sbb
adc
js
pop
mov
sbb
cwtl
shll
cmpsb
es
mov
pop
test
rcrl
mov
jge
add
xchg
ret
sahf
mov
clc
and
ret
lock
ljmp
sbb
dec
fnsave
inc
pushf
mov
mov
hlt
repnz
out
mov
flds
outsl
jne
jmp
sbb
cmc
iret
adc
xor
push
mov
mov
ret
movsl
jl
lock
cs
cmpsb
cmpsb
and
dec
pop
and
lds
cmp
jge
sahf
dec
stc
sbb
pop
insl
iret
shrb
cmp
add
lock
jge
sarb
inc
je
push
pop
inc
mov
test
add
mov
jb
push
test
mov
loope
js
insl
bound
in
lcall
out
leave
jmp
cmp
daa
adc
fistpll
int
test
shrl
xor
jb
sbbl
test
sub
out
mov
jp
add
push
pusha
mov
cmc
sbb
push
fldt
and
nop
adc
fistl
outsb
insl
aaa
cmp
mov
jle
orl
mov
inc
gs
pop
cli
jae
xchg
mov
and
fsubp
and
mov
lret
icebp
xor
call
dec
sbb
popl
sub
push
cmp
or
sarl
outsl
ss
dec
int3
cmpsl
cmp
movq
pusha
test
cmpsb
je
push
xlat
cmpsl
out
xor
inc
call
pop
fstpt
pop
dec
sbb
push
jge
imul
xlat
mov
xchg
iret
push
dec
scas
pop
cmp
xlat
jg
or
popa
inc
add
scas
push
push
and
arpl
sub
and
push
adc
cmp
repz
rcll
fldl
hlt
add
mov
lods
fninit
mov
mov
ljmp
mov
icebp
mov
pop
mov
lcall
adc
cltd
mov
lods
add
pop
sbb
into
inc
mov
stc
jno
xor
mov
out
sbb
and
mov
mov
pop
mov
jae
and
pop
aad
arpl
in
jbe
pop
fcoml
pop
je
push
push
in
sbb
mov
pop
call
test
call
lcall
cmp
jo,pn
mov
outsb
adc
jge
ds
cmp
inc
loope
dec
daa
loope
and
push
js
cmpsb
arpl
ljmp
pushf
inc
inc
fisttpl
loop
ret
cmp
movsb
lret
xchg
mov
test
mov
movq
in
xor
mov
pop
into
lcall
cmpsb
push
fisttps
popa
rorl
add
jmp
mov
ljmp
xlat
mov
fidivs
mov
popa
rorl
andb
sbbl
clc
lahf
jb
jecxz
or
sub
jne
pop
negl
insl
fcmovnu
sbb
sti
loop
pop
mov
ljmp
add
xlat
sbb
pop
pop
nop
or
sar
mov
movsl
lds
lock
xor
sbb
sbbl
jmp
jp
sub
scas
jmp
cmp
mov
adc
xor
out
cmp
push
mov
fs
cmp
jo
pop
ja
stc
cmp
xchg
insl
loope
rorb
mov
adc
jbe
and
pop
xor
std
mov
test
test
loopne
mov
and
jge
loope
mov
mov
cld
mov
hlt
popa
pop
mov
je
push
clc
xor
mov
mov
cmp
mov
mov
xor
shl
dec
sub
fdivp
loopne
jge
arpl
jg
and
mov
lcall
hlt
sbb
push
or
cmc
inc
cmpsb
ret
mov
hlt
ds
jae
mov
xchg
mov
rcrb
lgs
dec
push
cltd
cmp
jle
push
adc
int
push
xchg
mov
adc
xchg
push
pop
or
scas
sbb
int
fimull
and
sbb
or
push
rorb
gs
sub
jne
inc
adc
aad
cmp
imul
push
inc
movb
mov
xor
push
pop
lahf
lret
lods
push
dec
jg
jecxz
or
jne
stos
lock
dec
jg
lock
insl
les
das
cmc
push
adc
mov
je
pop
clc
out
jl
jo
arpl
stos
dec
lods
mov
dec
or
leave
pop
lea
fsubrs
push
pusha
orl
cmpsl
incl
cmp
loopne
ficoms
or
dec
cmpsb
xchg
rcrl
mov
cmpsb
loope
cli
jp
push
rcll
movsl
inc
xlat
dec
inc
xchg
lret
pop
fmull
inc
loop
xchg
cld
xorl
xor
add
jb
test
push
sbb
lret
xor
lcall
inc
scas
dec
jg
popf
call
pop
xor
jg
fstpt
xchg
lea
jl
or
push
mov
mov
clc
adc
sbb
jb
jo
mov
mov
jmp
cltd
mov
rcrb
jle
cmp
jo
push
push
js
test
in
pop
lret
loope
ss
pushf
arpl
fimuls
ret
sbb
mov
lcall
rcr
rolb
inc
pushf
add
iret
push
icebp
mov
cmp
cmpsl
mov
add
adc
loopne
mov
hlt
stos
dec
ja
jge
bound
cmp
fsubp
push
in
push
mov
push
jno
mov
jp
cmpsb
and
test
test
push
mov
outsb
aas
stos
mov
jmp
lar
loop
cmp
xchg
pop
jmp
inc
ja
mov
dec
repz
mov
scas
cmp
icebp
xor
adc
out
mov
dec
pop
test
xchg
push
or
xor
lret
pop
ror
push
mov
mov
jae
aaa
sbb
mov
and
test
mov
repz
pop
xor
jo
mov
lret
fdivl
jle
outsl
insb
ret
movsl
lcall
sub
divl
dec
cmp
pop
push
outsl
xorb
movzbl
pop
leave
ja
mov
cmp
sub
cmp
lldt
pop
add
adc
ficoms
ds
js
sbb
sbb
lock
fcomp
jne
mov
ficoms
dec
scas
jmp
hlt
mov
sbbb
pop
fisubrl
mov
mov
out
xchg
cli
sbb
sub
jbe
jnp
xchg
popa
stos
cld
sti
push
cmpsb
flds
xchg
xor
lods
pop
pop
or
jb
dec
mov
popf
jle
push
push
jno
mov
pop
push
call
mov
ja
xchg
jnp
popa
sbbl
in
fmuls
sbb
les
mov
cmp
aam
or
and
jecxz
push
xchg
dec
hlt
iret
aas
icebp
in
test
add
lds
pop
xor
pop
fadds
mov
arpl
pop
pop
imul
rolb
push
mov
cs
ficompl
xchg
mov
cmp
lods
stc
jne
sbb
fistpl
andl
push
ja
ljmp
es
out
leave
jle
clc
ljmp
adc
insl
pop
dec
pop
jns
add
shlb
pop
push
sub
jge
js
jbe
popa
mov
inc
shrb
sbb
adc
dec
dec
mov
ja
sbb
push
dec
test
pop
int
mov
push
xor
jg
adc
jmp
xchg
jo
dec
imul
jl
ja
inc
or
scas
xchg
out
ljmp
repz
movsl
add
lcall
xchg
mov
in
cmpsl
int
jo
test
ficoms
popa
inc
repz
jns
push
adc
insl
in
and
cmpsl
or
push
out
clc
loopne
inc
xor
pop
mov
mov
in
popa
add
lock
mov
mov
out
fwait
jl
adc
fldcw
scas
popf
or
movb
mov
mov
pop
fidivrs
sbb
lcall
xchg
lock
je
lea
or
movl
popf
sub
out
push
addr16
cmp
ds
sub
sti
aam
cltd
mov
jge
sbb
push
inc
mov
and
or
rcll
sbb
mov
sub
aas
mov
in
das
jo
push
ds
popf
clc
or
and
push
inc
xor
jmp
out
push
and
inc
idivb
sbb
mov
sbb
in
mov
inc
jne
adc
call
scas
mov
add
jge
insb
cli
das
mov
and
mov
mov
push
fimull
add
adc
cmc
cmp
and
xor
shl
sahf
fdiv
pop
mov
jne
negl
xor
push
pop
jae
sub
scas
push
mov
xchg
sub
ljmp
adc
inc
mov
cmpl
sbb
jmp
cmp
cli
adc
push
daa
sbb
jecxz
xchg
cltd
inc
fisubs
scas
scas
pop
sub
and
mov
loope
ss
push
xchg
aaa
add
jae
mov
testb
inc
xlat
add
fwait
movsb
inc
lcall
scas
ret
xchg
mov
xor
outsb
mov
jg
and
or
fidivl
sub
lock
outsb
sbb
inc
out
xchg
pop
fstl
and
and
jmp
popa
mov
insb
jnp
mov
cmovg
sub
call
clc
pop
lcall
hlt
sub
les
push
in
into
aas
mov
ljmp
and
cli
cli
fsubl
mov
sub
sahf
orb
xor
repnz
repz
xchg
nop
outsb
mov
test
pop
inc
or
jne
cwtl
xchg
sahf
jle
cmp
orb
sub
daa
pop
pop
push
pop
pop
js
mov
push
notb
loopne
push
jl
mov
push
fcoml
mov
dec
std
and
shll
test
hlt
jmpw
sbbl
cmpsl
cmp
inc
mov
inc
hlt
adc
mov
int
xor
stos
clc
hlt
xor
lahf
fdivl
fidivrl
push
mov
sarb
xchg
lahf
ret
sti
subb
fidivl
ret
sbb
sti
and
jae
adc
iret
scas
adcl
pop
lret
push
inc
adc
mov
jge
rorb
xchg
push
or
xor
enter
pop
mov
daa
jo
insl
jg
call
cmp
pop
imul
sub
cmp
lods
push
ss
xor
fnstenv
out
cmpsb
jmp
pop
push
mov
or
or
mov
sbb
push
out
dec
mov
xor
outsb
jnp
sti
test
pop
rclb
je
mov
add
push
rcrl
pop
rcrb
stc
or
mov
outsl
sub
aas
xor
dec
mov
popf
add
pop
lods
xorb
bound
insb
sbb
xchg
and
push
mov
pop
das
adc
adc
pusha
pop
push
cmp
push
nop
push
jl
mov
pushf
sbb
jmp
pop
mov
add
jne
sbb
jge
and
loope
jecxz
out
jno
data16
sbb
incb
and
xchg
insb
sbb
add
mov
out
mov
shl
outsb
dec
frstor
push
push
sub
clc
fsubr
outsl
cmpl
in
aas
cmpl
movsl
repnz
or
mov
rclb
imul
cmp
push
loopne
rorb
not
pop
sub
out
popfw
rolb
jge
xlat
adc
shrl
sarl
jnp
jbe
dec
lcall
fmull
loopne
mov
out
mov
ja
xchg
scas
mov
repnz
sahf
add
push
xorl
gs
adc
mov
lcall
in
xchg
pop
inc
jg
daa
rcrb
adc
sub
rolb
out
rcrl
sub
mov
inc
xlat
inc
ja
call
mov
sbb
int3
mov
inc
jno
pop
jne
mov
xlat
mov
ds
scas
or
fdivl
jo
iret
repz
lcall
xor
ja
xlat
xor
scas
cmpsb
sbb
mov
fcmove
mov
hlt
xor
into
setge
cmp
cmpsl
ret
ficomps
std
lret
or
add
dec
out
push
xchg
fistpl
pop
ja
imul
js
mov
testb
xor
xlat
add
lods
pop
aaa
sbb
scas
sbb
xlat
mov
outsl
or
cmc
xchg
movsl
je
loop
ljmp
jmp
cmp
pop
insb
fimull
inc
ja
cmp
and
ret
in
sub
mov
and
ud0
inc
adc
sub
loop
mov
repz
mov
xlat
lahf
stos
mov
pop
push
jae
dec
push
data16
sbb
push
jge
pop
fstps
sahf
das
cmp
adc
and
xchg
jge
mov
shrl
jb
imul
stos
movsl
testb
test
in
mov
ss
insb
mov
fldl
out
in
in
xchg
mov
sbb
mov
fwait
mov
sahf
mov
pushf
ret
mov
in
sahf
loope
rclb
ds
iret
outsl
jp
sbb
in
enter
jbe
fsubp
subb
in
inc
stos
stc
mov
call
outsb
push
sub
imul
jmp
scas
inc
flds
test
inc
mov
and
pop
loop
imul
push
aam
adc
insl
fsub
adc
ret
adc
and
sbb
pop
ret
int
mov
outsb
sbb
push
lods
sbb
outsl
lods
out
loop
cmp
mov
mov
ret
icebp
enter
xchg
leave
dec
cli
cmpl
cli
mov
mov
shl
aaa
mov
rolb
aam
xchg
lcall
fnstenv
into
jecxz
mov
mov
mov
dec
xchg
aaa
scas
sbb
fs
dec
add
lahf
jbe
out
ljmp
mov
bound
movsb
ljmp
pop
pusha
xlat
pop
dec
repz
jl
ret
cli
mov
jle
and
mov
aaa
imul
push
loop
or
inc
xlat
jnp
pop
iret
les
lds
outsb
sbb
mov
push
les
int
push
je
or
xor
cmpsl
insb
mov
jnp
movsb
jb
cmp
sbb
sbb
hlt
pop
jp
mov
test
insb
push
test
push
stc
hlt
cmpl
lea
scas
idivl
sarl
insl
pop
lcall
jmp
jmp
dec
xchg
xchg
and
add
arpl
adc
mov
int3
loope
inc
rorb
jle
ficoml
mov
inc
push
cmp
xchg
xchg
inc
enter
add
popa
mov
clc
sub
popa
std
nop
call
xor
movsb
xchg
push
dec
and
xor
xchg
outsl
std
xchg
mov
fldenv
push
sub
cmp
pop
ss
xlat
adc
and
adc
fldt
arpl
inc
xlat
jne
xchg
clc
pop
or
testl
test
cmpsl
or
mov
imul
adc
outsb
ret
mov
dec
cmc
jl
negl
mov
pop
js
pop
mov
insl
and
inc
call
shlb
cmp
rcr
in
push
xor
push
pop
pop
jmp
mov
jae
jmp
jge
inc
adc
outsl
jns
pcmpeqb
or
pop
insb
inc
adc
mov
std
push
cmp
or
data16
fs
lcall
cmpb
mov
mov
testl
iret
pusha
mov
scas
push
fcmovbe
xchg
subl
fmul
jbe
daa
jg
pop
lods
jecxz
mov
aaa
imul
or
mov
sbb
loop
cmc
popa
movsb
mov
inc
cmp
das
mov
imul
call
or
bound
in
les
xchg
push
call
scas
ss
cmp
jb
in
inc
xchg
xchg
xchg
or
inc
cmp
cli
mov
icebp
cmp
call
clc
mov
jp
jl
fdivrl
push
cmp
in
rorb
mov
pop
mov
sti
mov
add
insl
fisttpll
jo
mov
adc
push
sub
jmp
fstpt
jp
or
addb
add
fcmovb
div
inc
jae
in
stos
rcll
pop
mov
mov
aas
push
stc
inc
jle
mov
push
call
filds
int
clc
push
add
pop
int
inc
pop
cmp
cmpsl
dec
sahf
popa
inc
pop
lahf
in
pop
testl
icebp
pop
bound
or
sbb
mov
sub
cs
call
mov
or
pop
push
dec
cld
flds
ret
xchg
lods
mov
in
xor
sub
and
adc
mov
sub
loopne
cmp
dec
pop
xchg
andb
fsubr
jns
sarl
mov
push
ffree
mov
jns
js
gs
or
scas
sbb
popf
sti
xor
and
sbb
mov
push
push
mov
fcoml
pushf
hlt
popa
and
inc
into
out
jns
movl
jg
sahf
mov
loopne
pop
gs
arpl
add
iret
push
out
test
and
pop
decb
add
jne
rcrb
push
adc
mov
jne
xor
or
inc
mov
cs
dec
inc
clc
loop
jae
lret
add
mov
mov
int
sub
xchg
popf
loope
movl
in
insl
fildl
leave
std
push
inc
rcrb
sub
into
outsl
and
mov
cmp
aas
imul
inc
loopne
cli
cmp
outsb
dec
leave
mov
lock
add
cmp
lods
jle
insb
je
call
mov
ror
mov
mov
js
inc
inc
in
std
not
mov
cmp
std
popl
orl
sub
cli
mov
mov
xchg
mov
mov
and
dec
mov
fwait
push
cltd
xchg
hlt
lds
pop
mov
jns
std
sbb
inc
sbb
loop
adc
dec
test
fistl
mov
lret
out
shlb
enter
fimuls
jle
mov
cs
mov
hlt
push
push
add
dec
loopne
out
mov
ret
sar
bnd
and
mov
cmp
int3
mov
cmc
nop
cmpl
add
cmp
insl
pop
push
test
cmc
push
inc
push
mov
cli
push
insb
cmpsb
pop
hlt
add
ss
cmp
lret
jl
dec
mov
mov
in
pusha
jecxz
ds
push
das
push
mov
ret
fldl
stos
mov
xchg
mov
mov
or
sub
or
cmp
push
sarl
mov
add
popl
mov
push
mov
fdivrp
daa
add
inc
sub
stc
sbb
xor
or
push
push
mov
je
pop
jae
sbb
fistpl
in
sub
mov
mov
outsb
sbb
addr16
pop
lahf
bound
pop
jne
jg
pop
pop
dec
push
xor
dec
adc
rol
ficomps
and
jnp
push
adc
ljmp
mov
jecxz
fdivrs
scas
insl
movsl
inc
jge
imul
jae
jb
andb
cmp
sub
stos
imul
inc
scas
or
movsb
test
pop
ja
rcll
cmp
jmp
jne
dec
mov
mov
dec
nop
push
xchg
adc
std
pop
out
pushf
inc
ss
cmc
lds
popf
nop
adc
inc
sub
sti
lods
bound
push
insb
jl
mov
lock
sbbb
add
shrl
fs
out
pop
loope
shrb
lret
sbb
pop
jns
iret
call
and
push
sub
sbb
push
or
das
mov
sub
dec
add
sbb
pop
sbb
insb
mov
xor
jmp
adc
push
push
sti
xchg
stos
sbb
js
push
mov
sub
dec
arpl
scas
lret
xor
mov
insb
push
rorl
push
jnp
out
mov
fstl
jmp
mov
outsl
pop
sbb
out
js
mov
xor
xchg
mov
ds
fsubr
pop
cmpb
pop
mov
mov
pusha
in
push
jg
inc
jnp
dec
push
int
sub
into
out
and
divb
pushf
mov
iret
xchg
dec
jae
inc
cmp
mov
xchg
hlt
sbb
add
fidivrs
mov
adc
push
xchg
sbb
out
aaa
and
fdivl
cmpsb
jecxz
std
sub
arpl
xchg
xchg
rclb
test
mov
sbb
int3
enter
mov
jmp
mov
je
adc
and
sti
xchg
and
mov
ljmp
fmuls
idiv
mov
lods
or
ss
inc
xor
cmp
xchg
sbb
shl
je
mov
shlb
int3
inc
pop
hlt
pop
mov
daa
mov
lretw
push
cmp
sbb
fmulp
sbb
scas
add
outsl
xchg
popf
mov
mov
adc
sti
push
aam
fwait
mov
add
arpl
pop
dec
lods
jg
jne
pop
mov
pushf
shr
mov
orl
jns
aad
xchg
loope
sbb
into
imulb
push
js
cmp
push
das
xor
out
div
add
pop
push
cmpsb
nop
in
mov
mov
mov
test
fsubr
or
pop
lea
mov
pop
popf
dec
orl
jl
pop
push
lret
lock
imul
or
fisubl
inc
mov
test
jbe
test
popa
int
mov
sbb
into
pop
gs
inc
jnp
inc
popf
or
sti
jge
jb
pop
inc
je
fs
jmp
jb
cmp
add
jmp
mov
mov
das
lcall
and
or
stos
push
outsb
ficoml
jo
xchg
out
add
fsub
push
mov
test
dec
xchg
shlb
mov
xchg
ret
testb
ror
jne
in
lret
lcall
cs
xor
stos
mov
adc
mov
and
cmpsb
rcll
andb
jge
es
cmp
pusha
sub
jmp
push
mov
inc
enter
jne
mov
cmp
movsl
lds
push
mov
sub
add
test
jmp
xchg
je
ljmp
mov
push
cmp
outsb
addb
xchg
popf
add
rorb
dec
out
ja
shrl
in
xchg
jno
stos
cmp
add
fiaddl
inc
adc
rcrl
push
pop
mov
adc
das
dec
dec
mov
jbe
not
sub
pop
xchg
adc
pop
rcrl
aad
inc
call
inc
jg
add
jae
addr16
outsb
lock
ljmp
or
cmpsl
and
xor
mov
daa
mov
enter
ret
outsb
add
mov
sub
cmp
jbe
or
cs
jmp
xchg
shlb
push
cltd
jle
or
ss
pop
cmp
xor
imul
push
test
call
std
dec
mov
xchg
cmc
cmp
cltd
sub
ljmp
jo
fnstcw
outsb
imul
cmc
sbb
gs
inc
cmp
cmc
cmp
cmp
push
xchg
pop
mov
rclb
inc
mov
jmp
aas
ror
jo
movl
xchg
mov
add
frstor
mov
sti
bound
mov
or
adc
jecxz
cli
sbbb
push
scas
ss
push
rcrb
out
fsubrs
and
fistpl
and
cwtl
push
sbb
xchg
sbb
mov
mov
adc
push
or
pop
sahf
mov
or
ljmp
loope
je
iret
mov
lods
jne
fcomp
xchg
push
cmp
je
pop
push
lret
xchg
mov
mov
push
xchg
push
mov
adc
sahf
stc
jle
mov
jb
into
xor
pop
pushf
inc
xchg
pop
cwtl
and
pcmpeqd
enter
ficomps
cmp
sti
or
ret
insl
imul
ds
cltd
insb
call
fisttpl
xor
mov
sub
stos
loope
push
mov
xlat
roll
pop
shlb
push
mull
jl
mov
mov
and
jns
insl
test
pop
dec
or
mov
pop
popa
popf
push
adc
scas
fsubrl
sbb
imul
je
sbb
cwtl
insb
sub
add
push
add
mov
std
jecxz
js
inc
les
xor
in
or
push
inc
mov
mov
pop
cmpsb
filds
dec
stos
sub
fwait
cmp
and
shrl
push
pop
sbb
bound
sarl
jnp
sti
add
lock
sbb
insb
and
arpl
jb
fisubrs
push
ja
notl
cwtl
ds
xchg
pop
add
fdivl
aaa
int
ljmp
lods
or
xor
xor
scas
lret
and
ret
sbb
pushf
push
pushl
jbe
loope
xor
ret
inc
gs
lea
cmp
and
xor
jnp
xor
mov
je
sub
sub
and
push
push
pusha
inc
pop
fmuls
flds
scas
popf
es
mov
mov
into
dec
pop
or
int3
mov
adc
xchg
imull
mov
or
pop
cmp
push
add
rcll
inc
stos
das
cmp
xchg
aaa
adc
lea
or
dec
adc
addr16
or
pusha
std
inc
frstor
pop
je
cs
cmp
cli
inc
mov
xor
mov
sbb
mov
enter
loopne
mov
xchg
rcl
lret
mov
xor
jbe
xchg
or
inc
mull
jae
push
xor
xchg
jno
sub
adcb
mov
jle
movsb
and
mov
xchg
jbe
sub
popf
int
subl
testb
test
loope
cmp
sub
jp
pop
rcr
inc
lods
outsb
jecxz
loop
jne
dec
pushf
test
shrb
jmp
ficomps
sbb
hlt
mov
aas
push
dec
sbb
out
xchg
mov
scas
push
loop
shlb
lock
lds
aas
out
movsl
jo
cmp
or
mov
lods
ss
cmp
sub
je
sbb
mov
fsubrl
push
repz
mov
cmp
mov
mov
and
jmp
mov
rcll
mov
mov
jle
sbb
xchg
stos
bound
mov
clc
pushf
sbbb
leave
ret
push
cmpsb
xchg
mov
insb
adc
and
fst
sub
imul
xchg
mov
dec
movsl
aam
pop
mov
adc
icebp
aam
popf
cltd
test
test
arpl
subb
mov
pop
jb
mov
or
scas
out
andb
insb
xor
xchg
mov
test
out
mov
sbb
and
adc
shll
inc
mov
movsb
rcl
out
scas
scas
stos
in
in
sub
les
sahf
jge
push
adc
pop
testl
clc
mov
out
xchg
js
int3
das
mov
prefetch
inc
inc
lret
cmp
stc
mov
sti
ljmp
inc
inc
icebp
ja
shlb
pop
xchg
lds
test
mov
pop
jge
out
adc
push
mov
divb
add
sbb
pop
adc
imul
shl
xchg
mov
mov
or
test
stos
ss
push
add
outsl
inc
push
jmp
sbb
pop
add
or
and
mov
mov
cmp
clc
addr16
push
adc
out
rolb
push
rcl
mov
xor
dec
clc
stos
jg
cmc
hlt
cmpsb
or
in
xor
cmc
lds
xor
arpl
aad
push
mov
push
nop
mov
data16
mov
sub
cmp
mov
loope
add
jns
lods
jnp
jmp
arpl
add
movsl
mov
ja
pushf
cmp
push
add
mov
mov
jae
cli
jp
pop
fcoms
sbb
xor
sbb
jp
lahf
adc
or
ret
sbb
movsb
mov
shlb
inc
shlb
ret
mov
int
xor
lcall
lcall
xchg
addb
jl
mov
imul
mov
xor
je
mov
add
scas
in
ret
stos
loope
push
daa
push
adc
mov
add
dec
imul
fcoms
mov
sti
jmp
xor
outsl
jp
xchg
scas
jo
xor
and
pop
xchg
sbb
dec
or
sbb
sahf
mov
or
js
sub
ljmp
mov
lods
push
dec
cmp
imul
out
pop
mov
lods
inc
sbb
xor
mov
or
mov
nop
or
out
push
and
sbb
pop
inc
add
pusha
fbstp
jecxz
ss
add
push
pop
in
test
cmpsb
das
mov
push
adc
les
cmc
shll
cmp
shrb
jp
mov
neg
adc
xchg
mov
dec
cmp
frstor
ljmp
jmp
sbb
arpl
or
dec
aas
push
popf
je
aas
jb
ret
in
call
push
mov
fwait
sbb
sbb
mov
or
dec
popa
push
mov
or
pop
std
loope
inc
clc
mov
xchg
daa
pop
insb
xchg
sbb
adc
shrl
cmp
mov
test
cs
jns
call
jge
cmp
jno
pop
shlb
adc
lret
cmp
rcrl
dec
and
cmc
ljmp
std
aas
hlt
jmp
stos
sahf
add
jo
aaa
pop
or
inc
fsubs
fidivl
push
in
push
les
int
sbb
jne
pop
sub
jp
pop
fsubl
dec
idivl
cmp
push
mov
dec
jnp
adcl
inc
ja
mov
xchg
das
push
cmovns
mov
mov
and
stos
test
adc
jns
mov
or
xor
out
cmp
icebp
xchg
mov
sbb
pop
fstpl
dec
dec
pop
das
mov
add
in
jmp
pop
inc
sbb
shl
aaa
sub
daa
push
out
into
fwait
out
aad
cmpsl
xchg
xor
scas
push
ret
pop
insl
loop
add
cmp
and
dec
insl
add
rorb
jl
fcoms
cmp
xor
cltd
loopne
push
ljmp
insb
cmp
and
jb
cmp
leave
rclb
dec
jae
mov
std
adc
mov
outsb
mov
aas
xchg
js
add
mov
stos
and
mov
test
jnp
cwtl
sahf
pop
sub
test
jnp
xor
imul
add
mov
xchg
and
loopne
mov
mov
outsb
aas
mov
or
adc
push
daa
hlt
xlat
pop
push
lret
sbbl
cmc
sarl
out
imul
not
jne
sub
inc
xor
push
inc
jg
aas
jnp
nop
jo
xor
repz
pop
pop
mov
movb
lods
enter
fstp
aaa
sbb
mov
cmp
aad
mov
push
inc
pushf
add
push
mov
or
pop
daa
enter
stos
pop
dec
pop
xchg
and
fidivs
cmp
mov
mov
jno
push
loopne
pop
movsb
rorl
push
lahf
lds
cmp
add
stc
mov
insl
push
xorl
loop
cmpsl
pop
loop
iret
push
fdivrs
add
mov
mull
data16
pop
add
xchg
sub
jno
mov
sub
insl
or
ja
cmp
jp
mov
jnp
in
pop
mov
add
fldcw
icebp
addr16
xor
sbb
roll
mov
xor
mov
mov
mov
or
lock
das
leave
sbb
lret
xchg
out
inc
fisttpl
sbb
cmp
mov
or
adc
clc
inc
push
cmpsb
push
ja
js,pt
mov
loopne
pop
push
xor
aam
mov
adc
cmc
xor
mov
push
ja
add
lea
lods
mov
je
loope
jge
add
xor
cmp
cli
push
cmp
es
std
jbe
movsb
ja
mov
notb
mov
cli
cltd
outsb
adc
bound
icebp
test
xchg
or
je
repz
and
jnp
popa
in
adc
mov
jne
pusha
inc
in
push
je
sub
dec
mov
jnp
stos
fldenv
mov
in
int3
mov
cmp
fstpl
sti
sbb
inc
mov
lahf
imul
cmc
sbb
pop
loop
xor
sbb
test
jle
add
into
fisttpl
adc
test
adc
xchg
xlat
pop
arpl
pop
into
cli
dec
push
cmc
test
hlt
rcll
jnp
mov
mov
out
add
mov
leave
sarb
mov
cmp
cmp
loopne
mov
pop
xchg
or
data16
jb
and
xchg
adc
sbb
push
mov
or
xor
mov
lahf
out
addr16
sbb
aad
jge
bound
mov
int
push
hlt
lret
cs
and
out
shlb
addl
shll
call
insl
mov
cwtl
add
inc
add
jge
push
sbb
cmp
mov
xlat
aas
xchg
xchg
and
ljmp
popf
and
out
add
push
test
ret
iret
push
out
add
cmp
sub
push
sub
std
outsb
int
fidivrs
or
cltd
add
pusha
aas
dec
and
fs
insb
cld
insl
mov
loopne
je
aad
xor
das
std
dec
popf
insl
push
fsubr
lcall
lods
jo
jns
insb
out
sub
popf
inc
cmp
sbb
or
xchg
sub
sti
sahf
loop
sub
xchg
push
pop
ret
add
rcll
mov
pop
mov
pop
iret
test
cmp
push
imul
push
imul
push
loop
xlat
repnz
xor
inc
jns
pusha
mov
popa
idivl
addr16
popa
pop
mov
lahf
add
pusha
jg
pushf
test
lcall
mov
mov
push
sarl
data16
dec
setge
maxps
popf
cmc
nop
ficompl
stos
jne
mov
pop
sti
sub
and
push
xchg
jle
mov
push
clc
xchg
adc
mov
std
push
cmp
and
ds
push
fimuls
sbbb
or
dec
mov
dec
mov
insl
mov
push
xchg
jge
xchg
jge
jecxz
repnz
mov
cli
movsl
sti
or
and
insl
mov
xchg
jne
clc
insb
popa
insl
jae
outsl
pop
ljmp
test
cmp
sub
xchg
xor
sbb
push
adc
cmp
roll
sub
dec
popl
fimull
gs
sub
pop
cmp
or
pop
jno
cmpsb
cmp
sti
add
lods
sbb
jle
pop
mov
dec
iret
insl
cmc
mov
inc
sbb
mov
jns
sti
pop
outsl
xchg
imul
loopne
repz
jne
fwait
push
xlat
in
lret
lods
add
out
jmp
call
jl
ficompl
scas
lds
arpl
jns
loopne
pop
add
enter
leave
fisttps
or
xchg
stc
mov
dec
pop
outsb
movsb
xor
xlat
mov
je
sub
push
addr16
mov
jle
fidivs
xchg
push
call
dec
mov
js
inc
jb
sbbl
dec
jnp
jge
fldl
vrsqrtps
fldt
push
ret
inc
insl
cmp
bnd
mov
cmp
and
inc
imul
dec
pushf
mov
das
outsb
xchg
cmp
jle
mov
mov
movsl
int3
scas
out
mov
arpl
scas
dec
dec
cmc
stos
clc
std
jecxz
aas
jl
ds
loope
ret
fidivrl
jmp
icebp
aam
sub
pop
pop
push
xchg
movsl
das
enter
push
xchg
icebp
sbb
push
fdiv
rcll
jnp
fs
xor
shr
stos
cmp
insl
out
sbb
btl
cwtl
stos
and
cmp
outsl
bound
xlat
repz
sub
pop
aas
xor
ja
xchg
shlb
in
add
mov
in
nop
pop
jo
out
xchg
clc
jecxz
imul
call
inc
push
scas
loope
sbb
sahf
or
add
cs
inc
iret
pop
fldl
adc
mov
addl
je
jns
divl
push
sbb
aad
outsl
push
out
in
lcall
in
jg
mov
les
cmpsb
insl
imul
jl
out
mov
rolb
lahf
lahf
inc
fsubrs
mov
add
das
es
repnz
or
loop
test
mov
mov
arpl
insl
std
insb
ror
sub
adc
andl
jmp
out
fsub
mov
vmovddup
hlt
fadd
push
int
jecxz
fs
jb
popf
push
aas
clc
insb
icebp
in
stos
or
dec
adcl
jno
xor
cmp
addr16
jge
pop
inc
xlat
mov
dec
sub
xorb
cmp
loop
repnz
arpl
je
xchg
loope
xor
scas
int3
jno
push
push
or
cld
pusha
mov
jbe
in
fdivrl
scas
enter
add
je
pop
xor
shr
jae
cld
sbb
add
aas
cmp
pop
shlb
or
je
fnstcw
dec
jge
jb
in
in
mov
or
jecxz
push
jns
cli
loopne
jno
inc
stos
mov
and
cmp
jns
push
movl
xchg
cmpps
jne
test
adc
jo
inc
xchg
mov
pop
and
jnp
in
pushf
loope
pop
incl
jle
sub
addr16
pop
outsl
xchg
mov
ds
enter
mov
xor
imul
lock
in
cmpb
sub
pop
pop
aaa
inc
lds
imul
iret
scas
xor
shlb
movsb
nop
int
in
pop
ds
inc
aaa
aaa
sbb
push
cld
adc
cmp
clc
sub
mov
pop
mov
mov
leave
jne
fcmovu
decb
xchg
mov
pop
xor
adc
push
test
stc
in
mov
jmp
jge
push
ds
add
mov
outsb
mov
pop
or
in
push
je
shrb
imul
or
jb
sti
outsl
sti
mov
xorl
xor
sub
xchg
mov
lea
aam
fbld
testb
dec
int3
sti
dec
hlt
sub
aad
pop
mov
push
pop
pushf
int3
xor
ret
subb
aaa
push
or
sbb
rclb
lret
sahf
sbb
arpl
clc
sbb
int3
stos
or
data16
lods
mov
xchg
popa
jle
loope
scas
stc
cmc
and
cli
inc
mov
jmp
lret
fs
xchg
mov
or
hlt
pop
in
insb
lock
jg
outsl
mov
xor
lods
pop
test
int
xlat
cmp
sub
andl
push
sbb
je
stos
std
test
ret
xchg
neg
jnp
add
push
addr16
cli
push
mov
xor
cwtl
push
xor
es
stos
imul
shrl
ret
clc
push
aas
adc
jno
pop
xor
push
and
pop
push
test
mov
dec
call
ds
scas
or
or
ja
xor
mov
lahf
mov
cmp
cmp
rolb
in
mov
dec
push
fcmovnu
popa
inc
in
xchg
pop
or
mov
xchg
xchg
adcl
xchg
fldcw
dec
cmp
ljmp
stc
ficoml
jbe
or
pop
xor
mov
cmp
negl
flds
aam
inc
push
loope
jns
mov
jge
xchg
pop
pop
mov
dec
test
mov
ss
dec
insb
mov
lock
mov
cmp
xor
rol
ss
sbb
movsb
or
add
arpl
push
insl
push
or
push
xchg
mov
subl
test
mov
and
cmc
lcall
or
mov
test
mov
xor
push
fs
loope
popa
fidivrl
push
outsb
inc
mov
mov
push
cmp
xor
lcall
ficompl
or
into
roll
dec
in
inc
inc
cmp
mov
jmp
loopne
mov
repnz
fdivs
xor
fs
xchg
jmp
mov
push
sbb
dec
pushf
push
mov
inc
bound
cwtl
outsb
out
dec
cld
xor
test
cmp
mov
int3
jecxz
lds
adc
lahf
pop
pop
push
sub
mov
xor
ljmp
pusha
cwtl
sbb
testb
mov
int
ljmp
add
sbb
jle
sbbb
mov
dec
add
ss
mov
push
jb
je
int
pop
push
test
sti
add
lret
insb
mov
and
and
mov
mov
jo
inc
jmp
add
adc
pop
mov
nop
fisubrs
pop
sbbl
push
inc
jnp
and
dec
inc
push
cld
mov
cld
inc
jl
inc
mov
shlb
jbe
inc
sbb
in
inc
push
aaa
std
pop
bound
leave
pop
push
push
mov
insb
add
popf
add
rorl
pop
push
ret
xor
pop
mov
pop
pusha
sub
sbb
adc
add
adc
fnstcw
inc
sub
test
ss
pop
lfs
es
sub
jns
lock
push
fldcw
andl
test
ljmp
rol
pop
sbb
leave
insl
test
hlt
push
dec
and
and
cmp
cmp
mov
and
push
sahf
addr16
pop
lds
inc
pop
cmp
jno
ret
rcll
mov
out
popa
mov
lds
adc
or
cld
rcll
mov
xchg
scas
lcall
jle
jge
ret
lods
dec
pop
jl
lcall
push
mov
int
lock
jo,pt
cmp
jp
add
mov
pop
cmp
jne
dec
mov
fisttpll
push
ret
inc
mov
popf
jmp
pop
jns
jnp
xchg
mov
adc
aam
test
xchg
loopne
mov
mov
arpl
paddq
sub
repnz
xor
loop
xchg
jo
int
fs
lea
rclb
mov
add
rcrl
ret
cmp
push
out
orl
das
repz
je
fadds
lock
in
jp
mov
cmp
je
sbb
inc
push
push
ljmp
mov
dec
in
js
insb
mov
adc
push
push
testb
xchg
ret
scas
scas
outsl
je
xchg
int3
pop
dec
mov
add
pop
inc
jo
push
movsl
in
mov
pop
cltd
add
cmp
mov
or
cs
mul
in
pop
mov
adc
pop
pusha
mov
add
shlb
xor
das
outsb
adc
mov
stos
push
idivl
icebp
insb
shrl
or
and
add
inc
jg
xchg
mov
xor
in
lds
pop
fwait
mov
outsb
push
pop
sbb
outsb
sbb
inc
out
jns
fcmovnb
xor
xchg
add
jb
call
sub
add
inc
rep
loopne
mov
faddl
addr16
popa
fimull
mov
jle
lret
xchg
lock
jp
inc
or
sub
adc
pop
jp
xchg
jle
jge
andps
push
xor
xchg
push
add
les
imul
sub
or
inc
pop
mov
push
pop
cmc
and
push
pusha
sti
fisubrl
cmp
call
mov
mov
mov
clc
scas
mov
or
int3
xor
ret
xlat
aam
cli
test
rolb
out
mov
sbb
dec
inc
cmp
rcrb
mov
push
pop
mov
data16
fst
ds
or
aad
inc
inc
pop
je
xchg
mov
hlt
ret
daa
pop
xor
adc
insl
loope
dec
dec
pushf
push
adc
inc
push
out
fldenv
mov
xor
push
lods
mov
fcomps
ds
adc
pop
mov
mov
or
adcb
test
test
call
lahf
ss
inc
sub
call
xchg
test
sub
shrl
fldl
gs
or
bnd
mov
jo
movsb
mov
add
pop
aas
pop
xchg
push
fildl
mov
jle
in
jg
ficomps
sbb
push
aas
fcoms
ficoml
inc
fwait
cs
cmp
js
push
jg
inc
arpl
add
cmp
jo
cli
add
sti
fdivs
popf
jmp
cmp
ret
inc
or
adc
loopne
inc
xorl
and
call
xor
cmpsl
lods
not
insl
pop
or
and
movsl
inc
inc
divb
jecxz
outsl
jp
adc
dec
popl
mov
aam
shlb
jnp
test
rolb
or
cmp
mov
jecxz
xchg
dec
lods
push
scas
mov
data16
or
sub
sub
push
cmpl
or
xor
cmp
or
jae
mov
lods
fcom
add
sbb
pop
cmp
mov
pushf
adc
rorl
sub
lods
pop
jmp
insb
xchg
add
loop
cmp
test
lret
int
and
repnz
popf
fldt
mov
cmpsb
jp
push
fcoml
sbb
out
inc
in
xchg
out
mov
add
inc
and
pop
inc
ja
adc
cmp
das
jbe
inc
mov
mov
jg
jge
orl
lret
into
mov
jp
jbe
mul
ss
xchg
sub
inc
inc
push
sti
sub
inc
xor
pusha
jl
cs
fisubs
or
scas
jmp
pop
sub
xchg
loope
out
std
mov
call
inc
adc
fs
pop
call
aaa
and
rorb
lock
ficoms
dec
xlat
or
jg
xchg
gs
shlb
add
int3
dec
fisubl
mov
fstpl
sbb
mov
mov
lods
lcall
out
jnp
aaa
cwtl
mov
inc
xchg
mov
mov
xchg
mov
jg
mov
imul
cmp
push
addr16
popf
popa
add
push
sbb
xchg
fisubs
jno
mov
sub
push
loop
dec
test
ja
ret
mov
lret
cmpb
insb
dec
mov
inc
fcomip
rcr
subb
pop
aad
scas
mov
dec
fidivrs
or
mov
out
out
pop
sub
in
and
mov
cmc
xor
ret
pop
xor
roll
add
fistl
mov
cmp
testl
sbb
nop
gs
aaa
sbb
pop
outsb
enter
call
and
mov
dec
cmp
popw
mov
shlb
jne
jmp
jno
out
push
jo
outsb
in
notb
aam
sbb
mov
xlat
mov
sbb
mov
insl
sub
cld
cli
inc
lods
clc
in
emms
or
fdiv
xchg
lock
pop
inc
push
mov
or
aam
inc
cs
push
mov
in
xchg
adc
pop
mov
cmp
sti
jno
jge
and
mov
inc
cmpsb
ljmp
sarl
fldt
cld
js
adc
xchg
insl
inc
int
insl
std
test
and
pop
jl
hlt
xor
int
inc
and
mov
aad
dec
sub
pop
pop
and
push
std
dec
lods
pop
jle
scas
mov
mov
fimull
pop
mov
and
mov
adc
mov
andb
sbb
fucom
push
push
aaa
ret
fsubrs
xor
pop
pop
fisubrs
jbe
shlb
cmp
int
adc
xchg
mov
sarl
jl
aas
mov
push
xchg
cli
sbb
xchg
pop
test
pop
adc
lcall
jbe
xchg
sub
push
ret
pop
xor
jno
xor
data16
cli
sub
jp
mov
cmp
jge
sbb
mov
sub
and
and
not
push
adc
mov
push
adc
push
mov
loope
xor
sti
lret
mov
sub
add
mov
clc
cmpb
inc
outsl
mov
push
mov
inc
xchg
xchg
lea
mov
inc
data16
mov
pop
mov
mov
cltd
outsl
aaa
ljmp
loop
ss
ljmp
dec
push
pop
inc
cmp
scas
dec
test
icebp
aam
pop
js
xchg
mov
and
adc
testl
add
and
icebp
mov
clc
push
iret
insl
mov
jne
pop
xchg
mov
scas
xchg
jns
adc
cltd
pop
add
push
xchg
scas
jg
add
lods
mov
jbe
push
xor
jnp
sti
roll
mov
shl
arpl
adc
cltd
jae
cwtl
call
gs
pop
arpl
xchg
notl
xor
and
arpl
cltd
js
jno
popa
jge
sbb
call
dec
xor
push
fimull
aad
sub
fdivs
pusha
outsb
sbb
stos
fs
shl
loope
xor
or
jp
ljmp
dec
jecxz
shlb
cmc
mov
xchg
sbb
in
insb
aas
js
imul
push
push
repz
xchg
mov
stos
xchg
nop
cli
pusha
ss
mov
lods
pop
ret
jmp
jmp
je
pusha
addb
jl
cltd
idivb
loopne
das
outsl
cli
popa
sbb
sbb
mov
xchg
jb
xchg
or
lahf
pop
xor
add
mov
stc
pop
stos
jmp
sbb
mov
imul
ret
insl
pop
pusha
inc
mov
xchg
dec
add
dec
punpcklbw
jecxz
sub
orb
iret
mov
pop
lea
dec
std
push
sahf
scas
outsb
jne
lret
cmp
lcall
pslld
loopne
jl
ret
pusha
fs
into
xchg
icebp
mov
fstl
cmpl
dec
fnstenv
fstps
stos
or
dec
lcall
xchg
sbb
outsb
fwait
jbe
jg
jo
stos
push
flds
andl
xor
sub
sti
out
jno
push
insl
cmpsb
and
dec
imul
cmpsl
fmuls
sbb
jl
movsl
icebp
sub
jnp
sub
leave
or
adc
ds
jne
pop
fnstsw
adc
insb
xor
sbb
mov
or
fsubrs
inc
pop
ret
push
movsb
sbb
inc
cli
push
mulb
in
sti
push
insl
xchg
daa
push
jge
in
aaa
xchg
mov
stos
js
lods
sub
lcall
mov
mov
pusha
jnp
imul
jle
push
into
rolb
lret
or
jg
rolb
cmp
add
cmp
mov
lret
xchg
movsb
xor
shlb
inc
push
std
enter
sbb
push
stos
jge
dec
jge
mov
jb
imul
xor
xor
hlt
push
movaps
and
push
adc
outsl
jnp
mov
in
cmc
mov
pop
andl
and
cmp
loope
adc
mov
ror
gs
mov
jns
jle
cltd
fucomp
push
lods
sub
jb
data16
fadd
js
in
xchg
sbb
rcl
pop
mov
cli
out
sub
mov
insb
sub
ficoml
or
mov
cld
rorb
mov
xchg
fadd
test
iret
cmc
in
cmpsl
push
fistpll
fcmovu
cmp
scas
div
inc
or
add
add
icebp
jo
inc
add
imulb
xor
popa
pop
xlat
xchg
popa
mov
xchg
or
lahf
xchg
and
add
sti
je
cltd
addr16
jg
outsl
adc
mov
xchg
popf
loope
push
inc
call
mov
aad
or
xor
outsb
adc
out
dec
in
loop
lcall
inc
mov
mov
sbb
pop
fisttps
cs
mov
jecxz
pop
jmp
xor
pop
pop
ret
ret
test
jae
mov
or
stos
sbbb
add
in
pusha
ljmp
sbb
inc
xor
std
leave
outsl
and
std
call
lods
adc
ret
in
adc
popa
xlat
lea
jg
mov
pop
repnz
loope
ret
xor
iret
std
loope
dec
add
pop
mov
or
cmp
scas
dec
movl
out
mov
dec
ret
outsb
into
adc
inc
xchg
push
pusha
pop
insl
testl
dec
adc
aam
sub
jg
sbb
adc
shlb
dec
pop
xor
sub
lret
aam
push
cmp
mov
push
xchg
mov
jl
sub
xor
stos
loope
add
and
cwtl
dec
je
pop
ja
pop
ljmp
cmpsb
fstpt
jbe
push
and
cmp
ljmp
inc
mov
lods
das
xor
out
int3
adc
inc
outsb
pop
mov
inc
cmc
push
loop
xor
cmp
ss
pop
stos
sub
ss
das
sbb
mov
adc
int
divl
repnz
fcmovu
fiadds
jmp
or
add
sub
jl
sub
sbb
outsb
aas
nop
rol
repnz
cs
insb
xlat
ss
dec
call
lods
add
push
add
cld
addr16
mov
fcmovnbe
sahf
fldt
mov
xor
pop
push
ds
inc
pop
xchg
cwtl
dec
jbe
inc
mov
jnp
pop
leave
add
jbe
les
jp
mov
ss
cmp
jle
insl
xchg
or
inc
rcrb
popf
jg
in
les
aam
pop
xor
xchg
push
mov
inc
icebp
rclb
jmp
mov
lcall
jp
mov
xorl
mov
int
xchg
xorb
cli
xchg
push
loopne
mov
add
jge
dec
out
les
mov
mov
pop
and
push
js
push
lods
out
mov
xchg
push
sahf
imul
mov
jb
lock
xlat
fisubrl
ret
jmp
cmp
repnz
jne
decb
shlb
cmovbe
rorl
jne
jge
inc
icebp
int
lds
mov
jp
or
push
xor
in
mov
lcall
out
pop
jl
imul
lret
add
in
sub
mov
ret
xor
setle
shrb
jl
loope
fdivrl
xchg
enter
ja
mov
clc
jnp
rorl
cli
cmp
jne
jae
xlat
jge
sbb
mov
or
dec
xchg
ret
call
mov
pop
dec
loope
fwait
out
adc
jnp
add
clc
rcr
sbb
add
stos
call
ds
pusha
inc
ret
dec
cld
cli
movsb
sbb
nop
out
pandn
je
sub
sbb
xor
adc
push
dec
cld
mov
cmp
xlat
scas
jno
ljmp
adc
jbe
std
sbb
sahf
popa
or
clc
shrl
inc
cmp
adc
scas
push
push
shlb
lcall
inc
adc
scas
mov
ds
ss
adc
dec
jg
leave
adc
pop
std
dec
leave
fwait
sbb
jnp
rcl
sbb
mov
fcoml
xchg
push
shlb
cli
icebp
inc
jb
push
loope
pop
mov
jns
inc
mov
dec
xchg
out
mov
dec
dec
xor
mov
inc
pop
jl
xor
add
add
xchg
xchg
sub
push
inc
nop
out
out
pop
pop
jnp
call
xchg
mov
sahf
xorb
pop
sbb
bswap
movsl
loop
fidivs
adc
xlat
hlt
lds
jle
push
mov
adc
cmpl
dec
in
jo
lea
jle
xor
subb
outsl
inc
mov
enter
dec
lret
fistpl
pop
xlat
loopne
loopne
into
push
lcall
bound
ja
or
paddb
mov
sbb
movsb
int
xchg
in
sub
shlb
push
push
fidivl
lahf
notb
push
ret
xorl
orb
sbb
loop
and
or
shrb
adc
sub
in
mov
insb
mov
ret
lock
sbbb
mov
jo
fdivrl
cmp
filds
xchg
mov
cmp
or
jo
and
stos
pop
push
fcompl
loope
not
scas
jnp
add
test
or
or
add
push
dec
jae
lds
xchg
adc
mov
loope
jne
lret
mov
cmpl
lret
out
bnd
jmp
xchg
imul
loope
pop
jg
loope
push
mov
or
std
jno
insl
loopne
and
sbb
push
ror
adc
in
cld
sub
and
jecxz
inc
inc
dec
adc
bound
mov
xor
push
stc
and
push
aam
xchg
cmp
xor
pusha
pop
and
mov
scas
cwtl
inc
pop
push
movsl
leave
mov
mov
and
cmpb
sahf
pop
push
faddl
ljmp
push
mov
mov
and
inc
dec
fcmovbe
mov
ljmp
ljmp
out
mov
xchg
repz
scas
fbstp
add
adc
testb
sub
mov
das
ljmp
adcb
adc
pop
cmp
sbb
lock
shrb
fisttpll
ja
and
xor
pop
xchg
shlb
in
inc
mov
inc
in
inc
pop
clc
arpl
sbb
or
in
xchg
sub
leave
push
gs
xchg
pop
fcomps
insb
mov
test
lea
cltd
mov
pop
mov
jle
ja
insb
sbb
xor
jp
pop
dec
mov
int
pushf
test
jl
push
pusha
mov
and
inc
jne
jmp
mov
shrl
cmc
and
fprem
mov
sbb
or
push
jbe
loopne
lret
push
scas
mov
dec
cmp
cmc
imul
and
and
insb
and
sbb
push
pop
sbb
js
fs
xchg
push
push
and
aaa
lret
lds
fldl
aam
or
shll
sbb
cmp
push
mov
mov
sti
ljmp
adc
push
fstpl
fdivrl
adcl
lret
jae
sbb
cs
clc
movsb
push
jbe
ret
jae
adc
js
arpl
add
pop
pop
mov
jbe
jp
in
xchg
repz
fcomps
and
sub
cmp
mov
adc
outsl
sub
pop
dec
cltd
adc
jnp
scas
loope
mov
sub
jp
fsubrs
arpl
push
lods
test
icebp
mov
stc
lods
imul
fwait
xor
pop
adc
pop
pop
adcb
addl
std
leave
jb
ljmp
xorl
pop
daa
in
mov
cmp
fsubl
fcoms
pusha
scas
loope
shrb
fnsave
mov
lret
jnp
popf
das
cmp
cmpsb
cmp
mov
daa
jbe
call
shrl
imul
imul
sti
lea
icebp
xchg
mov
ja
lahf
movsl
out
or
cmp
pushf
loop
imul
outsb
add
add
test
in
mov
add
stos
mov
push
push
ljmp
cmpsl
xchg
addr16
call
outsl
mov
xlat
xchg
movsl
xor
jecxz
jno
jnp
pop
cwtl
adcb
iret
dec
sub
inc
ss
add
cmp
ljmp
adc
into
xchg
inc
jmp
or
push
into
or
push
jo
pop
lods
xlat
je
lods
lds
jne
jno
sub
jle
shl
push
fnstsw
fadds
jle
fimuls
out
dec
stos
xor
std
dec
in
inc
lret
push
sub
mov
xchg
inc
push
popf
pop
testl
xchg
lahf
jne
dec
aam
push
jl
pop
mov
loop
aas
mov
in
imul
in
pop
mov
ss
sbb
push
aad
sahf
ljmp
mov
dec
inc
inc
cmp
hlt
dec
loop
ds
fidivrl
push
mov
sbb
fsub
subl
div
rorl
xchg
cltd
mov
cmpsb
mov
xor
mov
pop
lods
popa
je
insl
add
lahf
xchg
and
cmp
adc
push
loopne
jb
insb
mov
mov
jp
mov
xlat
cmc
test
cld
and
add
adc
lock
inc
push
loop
add
mov
rorb
jmp
sarl
fdivp
call
cmpsl
nop
add
loop
fcomp
pop
fmulp
inc
pop
in
dec
mov
sbb
xor
mov
sub
sahf
aam
push
int
mov
or
xor
sbb
sub
aaa
inc
push
cmp
aad
cmp
and
add
mov
cmc
test
mov
fistpl
sahf
lahf
insb
stos
cmpsl
loop
imul
xchg
mov
xchg
mov
pop
mov
xor
addr16
testl
xchg
daa
pop
outsb
je,pn
cs
adc
mov
inc
cmp
inc
pop
mov
lret
aam
rol
jns
xchg
sbb
adcl
adc
sbb
repnz
push
cmpsb
sbbb
rolb
mov
repnz
dec
pop
je
pushf
push
mov
ss
mov
fmul
jno
cli
int
adcb
mov
lret
sbb
add
shll
pop
cmp
int
sarb
fmuls
xchg
mov
push
inc
cli
xchg
jns
pop
adc
fildll
xchg
rcr
call
xor
cli
inc
jecxz
jne
xchg
imul
or
shll
pop
mov
mov
shl
daa
outsb
loopne
out
or
outsb
jae
int
lret
xlat
imul
les
mov
push
pop
pop
loope
decb
loopne
subl
xor
js
in
fwait
ljmp
daa
ror
jg
cli
fistps
add
add
rcll
mov
roll
dec
xchg
jp
dec
into
call
push
dec
fwait
xchg
in
add
pop
mov
adc
mov
pop
push
scas
jo
mov
add
sub
mov
push
mov
decb
add
aas
xchg
jne
cmp
and
inc
sub
dec
jmp
push
jo
ret
mov
xchg
jb
pop
je
mov
mov
js
jmp
cs
enter
icebp
ror
loope
jecxz
push
cli
cmp
in
ja
cmp
test
clc
rcrb
push
into
cmp
jecxz
mov
adc
call
push
stos
push
stos
outsb
add
bound
fdivp
jbe
inc
test
inc
lsl
test
xchg
pop
mov
dec
ja
dec
pop
xchg
sub
sbb
sbb
scas
adc
sti
sti
push
xor
pop
stc
mov
stos
mov
in
js
out
cmp
fstps
sub
adc
into
lea
ds
test
push
xlat
fst
inc
in
lods
jl,pt
mov
in
test
adc
subl
lcall
xor
shrb
sbb
and
movsl
mov
out
xchg
fldt
mov
ror
jmp
pop
cmp
cmc
push
push
and
ds
mov
jbe
nop
jge
sbbb
jno
insl
pop
xchg
js
dec
or
dec
fildll
cmp
scas
das
push
test
arpl
sti
push
inc
fdivrs
cs
push
cld
mov
outsl
sbb
hlt
icebp
jnp
cmp
mov
insl
cltd
loop
pop
jge
fsubp
iret
mov
jl
sbb
cmp
lock
cld
sbb
shll
cmp
jnp
add
adc
insb
inc
popf
out
push
shr
test
cmp
sub
mov
mov
adc
mov
into
ret
cmpl
jle
jle
jno
and
and
out
mov
movsl
push
push
jb
xor
outsb
loope
cmp
and
inc
inc
cmp
pop
add
loope
out
ror
clc
pop
mov
outsb
pushf
scas
or
aaa
or
fcomip
cmp
mov
cmp
adc
sbb
subl
add
dec
movl
push
out
lock
loope
stc
push
clc
jae
pop
push
scas
jmp
test
sarb
xorb
xor
aas
ljmp
fs
mov
sbb
push
or
movsl
cwtl
push
mov
enter
sbb
enter
jecxz
cmp
mov
push
mov
inc
movsb
add
stos
lret
lods
pop
jp
fnstcw
mov
or
xor
fdivrs
rolb
scas
dec
cmp
xlat
push
jg
or
adc
in
shl
shl
pop
das
clc
dec
std
xchg
out
imul
mov
mov
sbb
push
test
sarb
insl
add
sahf
repnz
stos
sbb
push
adc
orl
stos
iret
nop
jp
scas
or
jb
cmp
cmp
sbb
sbb
inc
dec
mov
shrl
hlt
or
adc
rol
daa
and
jmp
pop
movsb
in
scas
es
fldcw
aaa
ds
add
icebp
add
mov
xchg
add
sti
lahf
xchg
scas
jnp
jmp
and
push
jge
lods
jae
xor
mov
sahf
imul
sbb
sbb
test
cs
push
xor
fsubrp
pushf
and
das
pop
js
fsubr
mov
aam
ljmp
pop
mov
dec
idivl
dec
pop
insl
cmp
call
orb
xchg
mov
and
fdivrs
jnp
mov
mov
fbld
pop
or
xlat
and
outsl
test
mov
pop
inc
mov
cltd
pop
add
scas
jbe
mov
ja
js
pop
outsl
mov
mov
jne
loop
sbb
inc
ja
into
cmp
cmc
mov
testb
outsl
loope
rcr
push
cmpsl
dec
cmp
rorl
xor
and
add
cmp
fs
lahf
mov
mov
insl
pop
pop
mov
in
cmpb
or
jl
popf
push
lret
out
lahf
or
leave
mov
ljmp
xchg
mov
jb
lea
lret
xor
mov
jmp
jge
sbb
mov
mov
insl
sahf
mov
stos
arpl
jmp
dec
jbe
mov
pop
dec
ss
je
mov
mov
bound
and
mov
or
ja
push
cmp
out
and
adc
ficoms
int3
aas
movsl
cmp
leave
shrb
cli
stos
es
not
add
push
ret
push
add
jo
cld
mov
cmp
xor
popf
push
jge
aam
xchg
jnp
jb
pcmpeqb
jecxz
dec
add
cli
shll
inc
dec
ret
push
cmpsl
cmc
lods
add
into
jge
or
pop
mov
add
icebp
jno
nop
xor
outsb
ficoml
pop
sub
and
imul
mov
ficomps
rol
jge
xor
scas
dec
jle
jo
inc
inc
add
insb
rep
dec
xor
add
outsb
hlt
outsl
adc
mov
fiadds
mov
adc
sahf
pop
in
push
or
jns
push
mov
push
jmp
xchg
push
or
out
mov
add
adc
aam
std
hlt
test
jo
jecxz
adc
pop
mov
sbb
les
mov
pop
sbb
lods
scas
and
ret
lret
vmulsd
jno
xor
ds
mov
jge
stos
data16
icebp
add
ret
push
add
mov
notb
xor
lret
mov
and
xchg
push
fwait
mov
pop
ja
xchg
fs
jne
or
es
xor
pop
lret
or
cmova
mov
mov
push
dec
movsb
pop
in
fldenv
xor
cmp
mov
mov
inc
xchg
cmp
pushf
js
fsubrl
and
or
popa
or
inc
movsb
xlat
pop
ds
sbb
add
in
pop
lods
shlb
sub
cmp
inc
xor
insb
fcom
push
jae
repnz
jl,pt
cmp
rorb
in
fdivp
fstpl
push
in
lods
dec
lret
popa
add
dec
rol
lock
jl
jl
scas
loopne
loop
inc
and
out
sbb
inc
scas
add
rcrb
fcoms
dec
inc
mov
iret
scas
subl
fwait
push
divb
fldl
in
js
test
int
sti
ss
or
push
push
insl
testl
orb
bound
sub
sahf
call
push
std
popf
xor
dec
lods
or
ja
lret
addl
sbb
dec
movsb
fsubl
dec
cs
inc
cmpsl
imul
outsl
cmp
in
mov
push
pop
pop
mov
inc
fisubrl
mov
adc
ss
popf
ja
or
mov
out
mov
packssdw
lock
sbb
aam
in
jmp
out
in
divl
xor
scas
adc
mov
and
lds
sbb
or
fcmovne
dec
sbb
nop
enter
jne
fs
imul
pop
mov
jmp
int
cmp
loopne
mov
test
jecxz
pop
stos
repz
mov
jl
jmp
add
mov
push
push
jle
mov
icebp
cmp
test
mov
dec
bound
adc
jbe
xchg
hlt
imulb
imul
add
in
mov
es
push
ret
fs
ficomps
aas
stos
popa
not
iret
ss
into
orl
insb
pushf
inc
test
pusha
rcll
mov
inc
cmp
movsb
cmp
mov
mov
and
imull
pop
push
rorl
icebp
shll
adc
sub
sarb
sub
mov
jb
xor
into
movsl
inc
cmp
ret
fbstp
aam
inc
in
lock
mov
iret
pop
or
fnsave
insb
mov
mov
mov
lret
xlat
ljmp
xor
clc
add
pop
add
out
sub
addb
cmp
pop
int
getsec
pop
dec
insb
and
lods
jnp
sbb
push
shll
testl
and
push
sahf
or
cmp
outsb
add
mov
or
data16
sbb
xchg
insb
call
and
fwait
movsl
mov
or
pop
in
and
aaa
dec
lock
jp
lcall
mov
insl
loop
cwtl
and
aam
inc
xlat
push
aad
ja
xor
mov
mov
in
fmull
mov
fisubl
lods
into
in
movd
pop
daa
es
dec
cmp
aam
orl
and
ret
sbb
push
dec
pop
mov
lods
int3
mov
add
or
mov
adc
push
adc
sbb
xchg
loope
sysret
mov
ja
xchg
mov
cs
test
or
sub
scas
jnp
inc
testl
test
mov
jo
mov
icebp
movb
arpl
sbb
push
stos
fldenv
lds
lods
mov
xor
leave
mov
xchg
iret
sbb
out
add
pop
push
jecxz
cld
pop
loope
addr16
addr16
mov
mov
add
mov
ficompl
cli
out
add
jge
out
imul
gs
add
insl
repnz
push
loope
jnp
add
lds
gs
mov
mov
es
out
jmp
cs
scas
adc
mov
imul
sbb
xor
mov
pop
sbb
subl
add
roll
in
push
aaa
mov
pop
ja
insl
sub
fisubrl
cmpsb
dec
leave
cld
dec
cmp
pop
cwtl
dec
and
push
aad
imul
jne
cmc
push
mov
cmp
jp
dec
lret
inc
and
mov
inc
inc
rorl
mov
mov
cmp
cwtl
mov
sbb
add
push
iret
xchg
mov
icebp
add
cmp
lcall
inc
cmp
fs
hlt
xor
or
xchg
cmp
int
subl
xchg
jge
and
xlat
test
xor
sbb
mov
cs
imul
lea
adc
push
pushf
sub
sbb
fcompl
sub
add
mov
call
jmp
out
inc
mov
outsl
outsb
dec
iret
inc
data16
ds
cmp
mov
int
cltd
xor
fadds
cmp
lahf
mov
xor
mov
mov
movsb
mov
std
mov
js
xor
push
cmp
mov
add
mov
and
out
das
mov
jle
mov
out
mov
scas
xorb
out
push
nop
fsubrl
aam
shlb
pop
xchg
jne
mov
or
loope
ja
scas
cmp
mov
push
sub
orl
adc
or
outsl
inc
mov
pushf
aam
inc
fcmovnb
int
add
pop
sub
popa
mov
sub
push
gs
xor
xchg
pushf
aas
dec
outsb
jle
mull
mov
push
dec
and
lods
jge
pop
cmc
mov
stos
lcall
imul
fisttpl
push
call
pop
insb
adc
aad
jb
push
adc
sbb
sub
push
inc
in
sahf
xor
xor
mov
in
mov
scas
stos
jmp
pop
loopne
pop
dec
and
cs
cmp
shrb
jmp
sahf
sar
jne
mov
xchg
cli
or
ja
lds
mov
aad
cmp
inc
and
dec
jp
loope
fiaddl
std
aaa
push
push
aad
iret
in
xor
int
mov
mov
xor
imul
pop
jp
and
or
or
lock
push
xlat
aam
inc
jmp
dec
std
bound
xchg
mov
call
lock
rclb
int3
in
sub
outsb
fst
addb
inc
sbb
inc
ds
mov
add
mov
push
mov
sub
push
div
test
ds
xor
pop
les
into
jl
icebp
fcmovnbe
loope
into
pop
sbb
push
rorb
xchg
dec
sbb
fdivrl
lock
movsb
mov
orb
loop
hlt
mov
xchg
add
inc
loope
dec
jecxz
push
je
cmpsb
fcmovnbe
popf
jmp
push
jge
dec
shl
aaa
mov
push
pop
inc
out
sahf
test
test
les
dec
adc
mov
pushf
data16
push
movsl
push
xchg
ds
dec
jb
lods
xor
scas
push
loope
stos
adc
fs
cs
mov
mov
sbb
add
and
push
imul
mov
mov
mov
xlat
leave
jo
cmp
mov
and
sbbb
orb
pop
lock
bnd
cli
fmuls
pop
cmpsl
xor
add
push
jmp
mov
std
psubsw
pop
icebp
jle
clc
js
lock
inc
out
pop
and
imul
lcall
mov
xor
add
shrb
repz
jno
push
fildll
pushf
out
jbe
insl
push
mov
pop
popf
clc
rorl
mov
cmpsl
cmpsl
cmp
xor
ljmp
fstps
iret
cmpsl
in
adc
arpl
movsl
cmp
inc
adc
std
rolb
mov
dec
fildl
cmp
mov
xchg
std
sub
sub
xchg
dec
inc
shlb
pop
xchg
adc
xor
adc
je
sti
inc
es
dec
pop
test
lea
test
adc
paddw
fdivr
add
inc
jl
push
jae
xchg
in
shlb
mov
scas
out
rcrb
jmp
out
push
sbb
nop
sbb
xchg
shlb
pusha
jns
mov
sbb
xor
daa
lret
out
and
adc
mov
es
gs
fcomi
sbb
jbe
fcomp
mov
xor
insl
mov
add
fwait
sbb
dec
les
inc
stc
inc
fwait
or
lock
repnz
pop
mov
fsubs
adc
mov
data16
repnz
push
lahf
call
in
rcrl
sbb
fcom
nop
ja
pop
popf
stos
lods
aam
mov
jmp
xchg
mov
mov
pop
and
mov
dec
sarl
fdiv
and
jmp
imul
fmull
fisttps
dec
fnsave
xorb
pop
cmp
idivl
fucomip
mov
push
push
mov
loope
jmp
outsl
scas
cltd
mov
jle
in
xor
inc
mov
lods
aad
stos
dec
imul
push
cld
xlat
lds
pop
subb
mov
fidivrl
pop
mov
inc
sub
call
add
andl
or
call
and
out
loopne
cmpl
cmpsb
push
sub
mov
ret
or
jne
repz
mov
cmp
xlat
or
aas
sub
mov
movsl
add
dec
sar
fisttps
enter
mov
out
mov
ss
imul
ja
test
mov
xchg
out
cwtl
sub
jl
scas
pushf
lea
mov
fs
add
insb
lds
mov
movsb
popl
xlat
push
push
nop
sti
subb
out
imul
push
xchg
out
arpl
push
cmp
clc
cmp
xchg
negb
icebp
sbb
add
bound
arpl
push
mov
or
inc
daa
mull
adc
mov
push
jp
fistpl
cmc
stos
jno
dec
jns
jmp
mov
xor
sbb
cmp
xor
inc
jae
call
js
or
adc
inc
mov
add
sbb
into
imul
jle
cmpsb
neg
repnz
mov
xchg
int
cli
ds
hlt
cmp
loope
xchg
mov
sbb
aas
xchg
hlt
pop
in
in
mov
mov
loope
sub
push
pop
pop
jo
mov
stos
cmpsb
pop
xor
inc
push
dec
pusha
sbb
lds
dec
ljmp
jmp
fidivs
or
in
cltd
cmp
adc
sbb
fcomps
mov
xor
jge
icebp
jno
mov
cmc
mov
cmc
mov
xlat
mov
jmp
loopne
and
cmp
addr16
sti
inc
stos
jbe
mov
xor
xchg
sub
or
push
push
jne
jae
sub
mov
imul
mov
aaa
fildl
push
sbb
xor
aaa
cmp
jb
lcall
lahf
nop
cmp
jecxz
pop
ja
mov
fidivrs
sbb
sbb
call
cmpl
cmc
aam
add
cmp
lods
dec
mov
popa
mov
mov
scas
pop
scas
and
into
jmp
cmp
loop
xchg
jnp
cmp
jge
das
shrl
or
xlat
inc
push
clc
lods
push
mul
add
in
lods
call
jecxz
out
push
lds
pusha
or
or
insl
inc
jmp
fcmovnbe
cltd
mov
adc
xchg
fwait
sti
pop
push
or
push
sbb
daa
and
ret
push
aad
jae
xor
jnp
fidivs
push
leave
arpl
mov
sbb
mov
xchg
andb
xchg
addr16
aam
or
pop
add
and
pop
ficomps
push
popa
mov
cltd
push
add
out
rcrb
add
orl
mov
fwait
add
stos
les
repnz
pop
jnp
fistpl
cmp
popa
or
fcmovnu
push
fiadds
enter
lret
arpl
aas
push
insb
xchg
stos
daa
jns
push
scas
out
test
xorb
push
xlat
dec
jmp
cld
fisttpll
push
ficoml
cs
rol
dec
jbe
repz
jbe
insb
push
movl
xor
and
orb
xorb
movsl
dec
arpl
mov
cmp
cli
xchg
xor
dec
mov
push
pop
ficomps
aas
mov
jmp
jo
in
sbbl
fwait
sub
xor
jnp
jne
add
pop
pop
repz
inc
pop
adc
xor
mov
sbb
inc
fmull
push
or
rcr
roll
inc
popf
pop
mov
cmp
mov
jne
mov
mov
inc
sbb
sbb
std
popl
jp
xor
icebp
out
mov
test
std
cmp
imul
sbbb
jle
shrl
std
jecxz
cli
or
das
jecxz
adc
imul
and
sub
js
cmp
jp
test
inc
sbb
xchg
push
mov
pop
xchg
add
inc
das
cmp
mov
fucomp
leave
sub
mov
das
sahf
jge
and
jbe
jbe
je
or
leave
int
and
aad
pop
int
ljmp
ja
cmp
sti
jp
int
inc
pop
lods
sbbl
dec
inc
push
push
cld
jecxz
xchg
scas
test
sub
ss
push
xchg
arpl
pop
fdiv
inc
sbb
shl
cmp
repnz
rcll
sub
jne
dec
cmc
mov
add
jg
pusha
xor
les
dec
cld
lds
ret
jmp
jno
mov
sbb
outsb
cvttps2pi
cmp
je
adc
psadbw
sub
push
cmpl
mov
or
xchg
icebp
push
stc
mov
xchg
in
and
or
inc
xchg
inc
gs
jnp
dec
add
fstps
sbb
push
mov
dec
mov
stc
sub
jp
pop
jb
lds
cmp
popa
add
arpl
add
inc
les
jb
and
rcrb
mov
push
scas
fimull
mov
ds
je
push
movsl
xor
int3
cli
lock
into
loopne
dec
fldcw
inc
cmpsb
mov
push
fdivr
lds
mov
pop
test
mov
cmp
mov
rolb
adc
sbb
sarl
mov
mov
jecxz
lcall
in
outsb
insb
lcall
or
mov
xor
cli
sbb
or
add
adc
jl
je
sbb
test
test
mov
jmp
sub
inc
push
mov
dec
negb
lods
cld
cwtl
mov
jbe
add
lods
hlt
dec
roll
mov
gs
sarb
clc
adc
out
pop
pop
leave
fimuls
jecxz
add
jle
push
int
inc
xchg
lret
and
inc
cs
insl
dec
jo
mov
nop
outsl
dec
mov
popa
or
dec
cld
lret
dec
push
inc
test
adc
pop
out
jmp
jmp
and
roll
iret
dec
push
fildll
jnp
lods
pop
xlat
xchg
xchg
je,pn
stc
cmp
int3
pop
aad
xchg
rsm
pop
scas
xchg
push
rclb
cmpsb
je
hlt
inc
mov
jnp
hlt
aas
push
outsb
pop
pop
pusha
sbb
pop
mov
xchg
cmp
mov
and
ljmp
sbb
cmp
mov
xchg
mov
jmp
sbb
ja
repnz
pop
addr16
or
sub
jle
rolb
fdivl
movb
icebp
scas
or
pop
loopne
push
jb
or
outsb
jae
arpl
or
cmp
xor
std
mov
adc
popa
scas
jmp
mov
addr16
sbbl
cs
cmp
icebp
jmp
xchg
jns
icebp
les
sbb
push
roll
sub
pop
jp
cmp
add
subl
xor
cmp
mov
sbb
jbe
imul
loope
sti
dec
pop
mov
lahf
mov
jl
repz
sbb
sbb
or
add
cmp
sbbl
sbb
mov
mov
adc
pop
fcmovnbe
scas
mov
pusha
inc
sbb
mov
scas
mov
inc
mov
test
push
jno
aam
inc
dec
inc
arpl
jne
enter
dec
rorb
insl
adcb
jge
jle
jmp
mov
std
mov
stos
or
hlt
and
push
lock
pop
jb
sub
mov
popa
sbb
es
adc
ds
sbb
lods
test
ret
mov
or
call
pushf
adc
mov
fs
loope
inc
std
pop
add
dec
out
jae
in
loope
sbb
mov
pop
orb
mov
ja
xor
sti
les
jbe
push
mov
or
icebp
push
mov
loop
pop
or
jge
lock
shlb
push
call
out
dec
pop
mov
shlb
mov
sbb
data16
js,pt
or
fimull
call
test
lods
sub
pushf
push
test
aaa
loope
lcall
lahf
jmp
in
or
mov
inc
lods
imul
jle
lcall
scas
out
jbe
jno
lcall
ja
aaa
adcb
fcmovnbe
add
sub
lcall
into
fs
out
andb
outsb
or
repnz
add
dec
das
imul
js
jecxz
cld
shl
adc
jmp
insl
cmp
clc
sbb
xor
dec
mov
testb
aaa
fsubrl
mov
popa
mov
mov
imul
mov
cld
aas
sbb
sub
xchg
inc
lcall
fwait
jmp
push
xor
pop
std
imul
mov
movsb
pop
mov
popf
repnz
data16
imul
mov
gs
test
xchg
cmpsb
pusha
sub
testl
jno
pop
mov
aam
aaa
mov
and
fs
sub
xor
rorl
lds
cli
jo
pop
inc
inc
add
jle
mov
lods
les
loop
mov
mov
clc
sbb
mov
pusha
cmpl
xchg
lret
inc
mov
fbld
jae
pushf
into
add
push
adc
ds
inc
mov
shrl
fnclex
sub
xor
and
jae
xchg
int
pop
adc
jne
add
das
icebp
push
out
jg
cli
and
xor
inc
clc
aad
pop
ret
lock
inc
cmpl
mov
or
lds
mov
iret
adc
jle
decb
addr16
loop
xlat
xchg
les
lahf
xor
std
aad
and
mov
loope
rolb
orl
movsl
jns
mov
fs
mov
ss
stos
scas
daa
cmp
mov
movsl
in
in
and
out
filds
out
pop
dec
sbb
jmp
pop
std
adc
cmovge
sbb
mov
mov
call
mov
lods
jle
cli
das
repz
sti
into
mov
xor
dec
icebp
or
push
fwait
mov
lret
std
cmpsl
cmp
repz
nop
or
out
and
clc
mov
pop
cmp
or
je
call
mov
imul
cmp
dec
sbb
fldenv
jae
fistpl
xchg
lret
or
pop
mov
mov
test
repz
sbb
pop
loopne
xchg
pop
xchg
es
push
nop
ffree
mov
movq
jp
in
jbe
outsl
and
jecxz
imul
daa
jne
ljmp
rcl
loop
mov
or
sub
adc
popa
in
popa
sub
dec
aaa
dec
pop
in
adc
inc
push
mov
jne
insl
jge
cld
pop
call
mov
adc
xchg
cmp
cmp
icebp
loop
dec
lds
pop
cmp
lret
push
xchg
lahf
js
jmp
mov
imul
test
dec
inc
xabort
adc
rorl
cmp
sub
jnp
mov
mov
add
roll
xor
pusha
xchg
stos
mov
xchg
sub
sub
pop
sbb
push
movsl
or
cmp
ja
lea
push
mov
jge
ja
dec
sbb
fs
in
xor
adc
mov
jge
dec
rcrl
stos
ds
mov
push
add
push
mov
mov
jne
mov
push
rolb
mov
int
cmpsl
mov
pop
movb
insb
fcmovne
cmp
movsbl
cmp
aas
add
mov
andb
mov
lods
rorb
icebp
ret
ret
shll
adc
cmp
adc
fdivp
xor
in
mov
lret
push
cmp
aad
pop
lret
cwtl
push
xchg
insl
sbb
xchg
push
jno
push
aad
outsb
xlat
lods
cmp
jb
enter
js
cmp
ss
inc
push
in
mov
outsb
and
dec
sbb
ret
fsubs
mov
pop
sub
xor
std
sbb
pop
push
or
addr16
mov
pop
cmp
es
mov
sbb
xor
dec
andl
push
or
mov
pop
call
in
aam
popf
scas
sbb
add
push
and
stos
push
sbb
push
xor
add
out
push
sti
xchg
jae
dec
or
add
std
rcrb
or
sbb
sbb
push
outsb
cmp
into
in
dec
rcr
xor
mov
std
stos
xor
jbe
add
loopne
xchg
or
ret
mov
loop
lea
mov
pop
inc
inc
shlb
mov
pusha
pop
adc
mov
daa
insl
ret
inc
leave
aam
cmp
push
and
js
mov
imul
pop
mov
dec
pushf
outsb
push
or
cmp
pusha
jbe
jge
inc
lock
jp
xchg
push
push
pop
mov
jmp
inc
pop
push
iret
push
mov
clc
cmp
lods
xbegin
and
mov
dec
outsb
in
pop
mov
mov
mov
scas
sbb
popf
hlt
shl
sbb
pop
aam
scas
jle
repz
test
stos
pop
or
movsl
in
add
fldl
lods
add
aad
cs
pop
and
fs
jecxz
cmpsb
out
pushf
lock
cmp
ds
clc
clc
bound
cld
fdivs
testl
insb
inc
enter
call
or
popf
cli
ljmp
jmp
cmpb
sbb
fnstsw
ret
xchg
into
pop
push
jo
jg
sahf
enter
push
cmp
mov
add
sub
mov
cmc
aad
push
xchg
xor
aad
nop
adc
mov
fstps
pop
xor
clc
pop
add
mov
stos
mov
icebp
mov
int3
lcall
aam
enter
jl
scas
loop
sbb
add
inc
aam
rcll
jbe
aaa
bound
lcall
adc
daa
inc
jmp
js
inc
jnp
sub
aam
or
inc
dec
push
pop
adc
jne
mov
insb
pop
aaa
jb
aam
mov
sbb
mov
xor
mov
cwtl
xchg
xor
pop
lahf
sbb
sbb
mov
or
cmp
add
or
loopne
lock
cmp
cmpsl
inc
inc
out
jmp
add
dec
mov
mov
imul
inc
mov
fisttps
push
and
xlat
sbb
mov
mov
scas
repz
imul
in
jbe
sub
push
test
jo
dec
frstor
adcb
sbb
pushf
add
insl
adc
in
sbb
sbb
scas
mov
fidivl
js
mov
mov
out
or
lcall
loope
push
inc
pop
inc
ret
push
cmp
ret
fstl
imul
stc
cmp
popl
fsubrl
adc
push
xor
inc
outsl
scas
mov
inc
mov
mov
cmp
pop
int
dec
sub
scas
popf
mov
dec
cli
dec
cmpsl
iret
inc
jne
fisubrl
mov
cmp
jge
ds
lret
and
mov
out
cmpsl
ret
ds
gs
addl
gs
daa
pop
lret
sbb
mov
sti
cmp
sarl
cli
xor
or
imul
pop
scas
ljmp
mov
icebp
icebp
or
inc
inc
je
into
dec
cmp
in
pushf
loope
nop
pop
sbb
jo
loopne
jle
xchg
das
adc
sub
sub
mov
or
sbb
orl
popf
fucomi
jo
push
xor
hlt
xchg
insb
inc
sbb
ss
mov
fwait
mov
ficoml
cmp
adc
je
jnp
mov
rorb
sub
stos
ljmp
fstps
cmp
adc
mov
subb
scas
mov
cmp
adc
jecxz
fstps
inc
mov
inc
jmp
lahf
call
xor
cmpb
cmp
addl
sbb
div
jl
dec
jmp
push
sbb
aaa
inc
out
cmpb
es
insb
jno
mov
xlat
jne
sbb
jp
shl
loope
rcl
sub
cmc
cmpsl
insb
or
pop
mov
shll
push
inc
insb
add
je
push
xor
in
mov
mov
pushl
lret
mov
push
fildl
iret
stos
push
inc
sub
je
scas
into
es
addr16
mov
out
scas
ljmp
inc
mov
add
loopne
xor
mov
cmpsl
dec
call
mov
pop
pusha
fisubl
mov
push
ret
scas
mov
scas
fisubrs
out
mov
mov
out
xor
or
cmp
popa
fwait
dec
mov
jno
or
xchg
hlt
pop
pop
sbb
scas
push
jne
ret
scas
sbb
inc
jno
pop
xor
xor
in
lret
jp
mov
in
sbb
inc
outsl
or
lods
sti
push
adc
fmul
movsl
outsb
sahf
xchg
insl
call
lret
jo
arpl
orb
pop
test
cmp
call
jno
pop
mov
xorb
mov
mov
mov
shll
fisubrl
inc
dec
jns
faddl
and
sbb
dec
jne
sub
add
inc
ljmp
cmpsl
sarb
pop
jp
adc
test
stos
outsl
cwtl
ret
adc
fwait
xor
idiv
or
rclb
sahf
sub
movsl
test
ret
test
je
sbb
cmp
inc
mov
loop
cmpsl
repnz
pop
or
mov
aaa
jl
mov
cli
test
ja
inc
aam
xchg
mov
fcomps
lret
adc
mov
mov
sbb
adc
push
or
out
movsl
mov
adc
and
jno
js
mov
jb
sahf
into
aad
outsl
pop
je
inc
addr16
pop
sbb
fst
scas
lret
sbb
dec
push
adc
push
nop
jg
fdiv
nop
andl
or
stos
pop
ret
rcr
add
fucomp
pop
dec
sahf
add
fadds
lods
lcall
push
sub
icebp
ret
xor
push
mov
push
mov
inc
mov
xor
pop
push
adc
jle
xchg
imul
mov
jno
lods
insl
or
imul
fidivs
pop
popf
mov
cs
in
loop
xor
es
jmp
cmpsl
lds
xchg
lahf
xor
popa
cwtl
lahf
add
fldl
xor
xor
pop
or
cmp
mov
les
fld1
lods
cmpsb
or
test
sub
js
cmp
cmp
push
xchg
jg
mov
xchg
lcall
dec
mov
or
mov
pop
and
mov
in
lea
ds
cmpsb
in
cmc
scas
mov
add
push
mov
inc
cli
or
insl
jmp
and
rcll
or
in
mov
mov
mov
add
xlat
cmp
pop
filds
fdivp
cld
push
cwtl
stos
pop
cmp
xchg
jbe
mov
xchg
add
sub
rcr
test
inc
stos
push
les
orl
adc
dec
hlt
jmp
fst
mov
shrb
int3
fidivrs
or
call
enter
test
adc
jp
mov
sub
inc
mov
jbe
push
add
cmp
daa
xlat
jle
movsb
and
dec
jmp
xchg
xor
cmp
icebp
rol
push
or
push
pop
cmp
clc
mov
out
mov
cmp
icebp
popl
push
rcll
testb
sbb
test
stc
sub
or
inc
sbb
insb
sbb
sbb
fwait
dec
dec
outsl
mov
aam
push
xchg
xchg
cltd
mov
jns
cmpsb
subl
cmp
pop
insl
and
enter
inc
shrl
or
js
ret
shll
mov
nop
movsl
mov
adc
or
add
mov
out
stc
adc
pop
rcrb
mov
lods
aas
cmp
inc
and
adc
add
dec
je
sub
xlat
xchg
pop
fisttps
inc
add
xorb
ret
fucomp
push
adc
sub
adc
test
or
push
lock
mov
jb
cmpsl
pop
fcoml
subl
in
shll
mov
mov
je
or
loope
jecxz
push
gs
dec
lahf
test
enter
push
or
outsb
cmovl
cs
jno
fcomps
hlt
mov
sub
inc
aaa
imul
fcoms
lret
int
stos
pop
dec
or
lods
mov
adc
jg
in
popa
xchg
pop
add
arpl
shll
adc
adc
or
loop
clc
push
push
aad
sahf
or
adc
add
aad
sub
sbb
pop
xchg
adc
jmp
inc
push
sub
ret
sbb
xchg
mov
fs
icebp
test
push
add
xchg
fimull
movsb
sub
ret
cmp
stos
mov
mov
push
sub
push
mov
pusha
add
in
test
nop
loopne
and
and
fs
lock
fcompl
out
lahf
sbbb
filds
mov
cmpsb
ds
xor
imul
and
std
mov
rcrl
pop
push
negl
les
outsl
push
cmp
inc
push
lods
push
jmp
push
clc
mov
adc
notl
in
jg
jmp
lods
stos
mov
mov
cmp
xchg
xor
mov
inc
hlt
mov
adc
icebp
fcomp
imul
add
xchg
not
push
cli
sahf
or
jne
add
cmp
lods
lock
mov
test
add
rorl
fidivs
fdiv
int
push
repz
shrl
out
sbb
pop
sub
cmc
ljmp
out
mov
push
shl
in
add
push
add
mov
ds
daa
loop
and
cli
stos
xchg
leave
sahf
aaa
pop
jbe
adc
xchg
outsl
out
fmuls
pop
add
jno
mov
fistpl
rclb
push
je
js,pt
loope
cmpsl
sbb
test
je
iret
sub
icebp
and
xchg
add
push
pop
sub
or
xor
fwait
push
test
inc
sub
lods
not
xor
dec
shll
lcall
jbe
dec
out
roll
xchg
inc
out
jns
mov
arpl
jno
sub
or
mov
cmp
sbb
fsubs
pusha
pop
and
in
adc
push
rorl
insl
insl
pop
inc
mov
shrb
mov
insb
outsb
fcmovnb
cli
int3
and
cmc
inc
repnz
add
push
int
push
test
xor
or
sti
rcrb
sarl
jbe
cmc
xchg
movsl
aaa
mov
xor
cmpsb
enter
and
lret
jge
notb
and
aad
mov
xor
push
jg
popa
adc
jg
lock
movsl
adc
jmp
shrb
dec
in
pop
call
or
pop
sub
pop
mov
cmpsl
sbb
aaa
addr16
and
mov
mov
pop
in
sbbb
popa
fs
into
loop
test
loopne
aad
pushf
fnstcw
fcmovnbe
push
sub
xorl
mov
push
pop
jnp
outsb
test
fimull
sbb
pop
fbld
xor
lret
inc
mov
dec
out
jne
push
and
cmpsl
mov
mov
mov
movq
add
clc
mov
push
sbb
dec
pop
mov
xlat
inc
testb
je
sbb
imul
xor
add
sbb
jne
jge
nop
and
mov
sub
push
stos
ss
loope
cmp
sarl
jbe
jge
sbb
jge
pusha
xlat
ss
pop
roll
and
jns
pop
sbb
ret
xchg
xor
or
jle
sti
sarb
movsl
adc
popf
ss
mov
fidivl
sub
pop
push
adc
sub
out
sub
addr16
mov
mov
loopne
fstpl
mov
inc
pop
cs
out
mov
orb
adc
and
xor
mov
out
ret
xchg
xor
xchg
cmp
xor
cmp
out
in
or
stos
inc
sahf
sti
test
cmp
insl
push
lahf
repnz
test
arpl
mov
xchg
sbbb
mov
outsl
sar
loop
addr16
pop
cld
dec
adc
dec
sbb
or
aam
insl
nop
mov
add
out
fsubl
adc
aad
mov
out
or
dec
je
inc
mov
data16
scas
fcmovnbe
and
sbb
test
mov
sbb
pop
jge
pop
pop
clc
mov
push
hlt
jge
insl
das
fisubs
mov
pushf
mov
ror
aaa
addl
or
pop
in
or
adc
jg
pop
add
pop
insl
fimull
cmp
pop
xorb
in
pop
push
add
push
add
jmp
idivl
loop
mov
mov
aam
pop
arpl
dec
sbb
mov
ret
mov
nop
rcrb
mov
into
xchg
inc
or
or
push
pop
xlat
add
pop
sbb
and
xchg
movsl
mov
xchg
adc
push
mov
inc
xchg
sub
mov
mov
out
fnstsw
stos
lea
lock
adc
push
sbb
xor
add
xchg
sbb
sti
sbb
cltd
mov
cmp
loop
cmp
mov
out
aad
or
inc
std
js
add
jb
and
test
pop
pop
push
out
in
dec
mov
out
xchg
inc
cmp
movsl
call
and
xchg
and
loope
out
mov
cmpb
cmpb
xchg
inc
pmuludq
filds
jmp
out
mov
pop
fisttpll
clc
adc
fmuls
mov
enter
aad
mov
scas
fisttpll
cmp
cld
mov
scas
stos
into
rolb
imul
jp
inc
or
adc
ljmp
cmp
ds
push
or
and
add
adc
adc
sbb
push
gs
push
jb
popf
loopne
and
popa
mov
push
mov
xchg
outsb
leave
aad
out
push
orl
cmp
daa
adc
imul
bswap
mov
sbb
stos
sbb
dec
movb
mov
push
imul
ja
jle
inc
outsl
fstpl
jecxz
mov
out
cmpsb
fisttpl
pop
aas
iret
test
arpl
loope
int3
or
mov
xor
sub
jmp
popa
jbe
pop
stos
push
pop
mov
int
push
mov
mov
pop
pop
mov
xor
jmp
lcall
jmp
insb
std
sti
jnp
ljmp
jo
jmp
inc
insl
clc
xor
pusha
shr
popa
jle
ljmp
aas
pop
mov
loope
roll
mov
cmp
outsb
pushf
mov
ss
jne
push
push
or
jae
rcr
rol
pop
ja
inc
xchg
int3
add
or
pop
dec
dec
aam
fwait
jg
gs
push
sarb
pop
arpl
cmc
jno
sub
inc
inc
xchg
push
jmp
push
je
dec
iret
adc
pop
and
jno
xchg
fwait
loope
adc
not
push
xchg
stos
popf
or
cmp
ja
pop
jmp
mov
jo
cmc
loope
mov
into
int3
inc
loopne
pop
mov
insb
xchg
push
or
dec
dec
repz
pop
dec
loopne
cmc
add
ljmp
popa
out
jecxz
dec
ljmp
pop
push
sub
sub
cmp
mov
loop
sbb
or
loopne
setbe
jbe
push
and
enter
cmp
mov
mov
mov
lahf
out
insl
loopne
mov
mov
daa
push
hlt
push
negb
push
pop
cmp
lea
jge
mov
mov
pop
repnz
outsb
push
lret
hlt
in
pop
xchg
repz
xchg
fadds
pop
inc
pop
pop
inc
pop
and
adc
call
fcmovne
arpl
lcall
mov
call
cmc
jns
adcl
jp,pt
test
jo
push
add
adc
fisttps
imul
pop
pushf
xorl
push
or
insl
cmp
xchg
ret
xor
leave
add
jo
dec
mov
mov
adc
or
mov
mov
rolb
int3
ja
movsb
ds
sub
xor
sahf
ljmp
or
enter
mov
dec
dec
xchg
cmp
xchg
jge
in
aam
es
aad
out
jge
pop
mov
incl
pop
push
add
loop
mov
jbe
mov
pushf
sbb
es
xchg
sarb
icebp
pop
aad
mov
fwait
testb
idivb
push
addb
sub
inc
mov
mov
adc
add
lret
je
adc
cmp
insb
cmp
sbb
inc
sahf
call
jb
push
mov
lds
lods
jnp
mov
cmp
std
roll
enter
aaa
bound
or
movsb
in
repnz
pusha
ret
loope
mov
sub
out
divb
or
or
mov
xchg
mov
sbb
jecxz
or
cmpsb
sbb
icebp
ja
and
jns
sti
push
push
call
mov
mov
sbb
rcl
sub
in
mov
sahf
ret
je,pt
out
sahf
aas
inc
sub
rorl
push
ret
imul
xor
lock
movb
cld
add
or
scas
dec
es
mull
fbld
and
mov
cmp
and
mov
stc
push
mov
mov
scas
decl
pop
stos
mov
fisttpl
inc
xchg
pop
jmp
pop
jmp
adc
enter
jne
jge
rolb
or
popl
cwtl
adc
test
mov
xchg
in
jp
add
xor
mov
mov
cmpsl
jp
ss
xor
inc
into
aad
inc
inc
movsb
adc
mov
ds
cmp
inc
sbb
cmp
imul
les
and
jmp
aas
je
sub
lock
lret
add
outsb
sbb
xchg
fildll
das
xlat
jge
mov
pusha
sbb
fistl
inc
test
cli
inc
push
dec
in
js
sub
mov
xchg
mov
clc
lds
sbb
shlb
mov
xor
mov
test
dec
push
clc
ljmp
dec
call
add
inc
pop
jg
pop
jmp
jp
jne
jbe
ss
push
ja
std
fcmovbe
xor
ret
outsl
lea
cli
cli
xchg
inc
ret
ret
mov
enter
lahf
loopne
mov
rcr
mov
fiadds
jmp
sub
mov
dec
addr16
shl
push
mov
mov
fisubrl
pop
xchg
fs
inc
je
dec
shlb
add
ficoml
push
sbb
outsb
insl
push
xchg
les
jnp
cld
push
sbb
mov
in
push
cmc
xchg
mov
lret
sub
add
inc
or
mov
adcl
mov
or
das
or
dec
outsb
xchg
jnp
inc
loope
lcall
cmpsb
into
cs
pop
lret
mov
sbb
mov
push
shll
ljmp
dec
aaa
mov
jbe
movsl
test
mov
push
lahf
inc
sub
push
xlat
ret
test
cmp
ja
loop
inc
jno
sub
jnp
fwait
sbb
xor
repz
push
mov
mov
stos
leave
notb
shrl
fidivrs
hlt
dec
sub
les
xor
xchg
hlt
mov
lds
jl
imul
outsb
jle
in
in
popa
pop
inc
push
outsb
xor
sub
bnd
and
and
test
decl
mov
enter
cli
add
xchg
pop
loopne
cmp
dec
push
fdivs
fwait
mov
ds
sub
push
stos
and
std
mov
addb
mov
sbb
cmc
and
and
cmp
push
hlt
and
cmp
adcl
shlb
sub
mov
or
push
in
push
fadds
pop
out
clc
cmpl
pop
adc
insl
xor
fstl
xchg
or
aaa
push
fnstsw
mov
pushf
mov
fs
loope
je
andb
dec
out
stc
mov
sbb
fcmovnbe
ret
push
mov
push
jmp
shl
jns
ds
push
stos
sub
ret
mov
pop
push
fiadds
add
lcall
rorb
movsb
dec
mov
cmp
ljmp
dec
pop
rcr
enter
cmc
and
inc
cltd
xlat
loop
mov
das
icebp
xor
pop
das
stos
inc
jne
ljmp
sti
add
cmp
push
scas
mov
or
pop
cs
lret
icebp
lock
outsl
push
jb
loop
ret
insl
fsubrl
std
cli
mov
xchg
mov
dec
pop
out
rclb
jg
popa
cmp
int3
mov
ficomps
jge
insl
fmul
cmp
scas
jmp
cli
imul
arpl
jbe
loop
mov
pop
je
test
push
es
jle
push
pushf
call
cmp
inc
cmp
inc
je
repz
sbb
mov
out
decl
addr16
cmpsb
jbe
mov
mov
je
xor
mov
add
pusha
dec
adc
loope
pop
pop
lea
cmp
jp
popa
ret
cmp
out
jecxz
mov
cmc
sub
aad
hlt
jo
test
mov
out
ret
es
pop
repnz
jae
orb
sbb
loope
call
inc
mov
clc
jmp
shrl
fisubrl
cmp
repz
dec
pushf
mov
add
sbbb
mov
xchg
loope
jecxz
cli
push
mov
jnp
cwtl
bnd
xchg
lods
fs
in
push
dec
call
fistpl
sub
popa
das
jecxz
lods
outsl
add
loope
scas
movsb
and
frstor
sub
test
ljmp
mov
xor
push
std
mov
pusha
sub
shlb
push
cwtl
in
ror
pop
popa
js
mov
dec
std
aas
add
bound
or
adc
dec
and
push
cli
hlt
test
movsl
cli
lock
pusha
js
loope
dec
fstpt
cmp
inc
je
sbb
push
jbe
xlat
aaa
daa
sbb
ficompl
sub
cmp
mov
sbb
push
scas
retw
adc
dec
pop
pusha
jnp
rclb
add
xchg
mov
outsl
pushf
rorb
mov
outsb
mov
sarb
mov
add
movsb
dec
xchg
add
inc
js
push
push
out
aaa
xchg
mov
push
out
ds
and
fidivrl
pop
jae
fstp
rclb
pop
jo
cld
and
dec
jno
jbe
hlt
js
fdivrl
cld
jl
pop
add
pop
int3
shlb
push
push
jle
repz
insl
mov
sbb
adcl
push
mov
imul
ficoml
faddl
loopne
xor
mov
push
cli
mov
dec
iret
cmpb
sub
pop
push
xchg
push
jmp
in
stc
jno
pop
cs
mov
lahf
clc
movsb
push
xchg
popf
push
mov
jg
inc
lods
in
inc
xlat
fcomip
inc
dec
dec
aam
in
outsl
in
jg
loop
mov
mov
or
std
cmpsl
push
ds
and
cmp
fwait
in
insl
pop
insb
bound
iret
popf
pop
jb
out
mov
sbb
adc
repz
xor
call
rcll
mov
hlt
pusha
or
pop
and
loopne
jns
in
inc
dec
mov
popa
pop
add
jl
repz
sbb
mov
push
mov
mov
daa
sbb
push
pop
mov
test
rorl
outsb
insl
sbb
clc
mov
push
mov
pop
mov
jecxz
vpaddsw
pop
xchg
in
add
nop
dec
dec
jge
test
stos
xchg
cmpb
stos
sarb
inc
bnd
xor
mov
lock
sbb
or
mov
shll
mov
mov
push
xchg
xchg
arpl
push
fisubl
inc
cli
jnp
or
dec
addb
iret
jecxz
mov
shrl
or
shr
cmp
ja
push
pop
fwait
jns
dec
xor
lret
mov
fmull
scas
mov
mov
lock
lock
mov
mov
push
loop
out
push
inc
mov
inc
fsubr
push
pop
push
sub
mov
fnstenv
stos
call
mov
scas
in
cmpsl
xlat
and
pop
pop
push
jl
inc
cltd
and
test
add
add
xchg
jge
jne
test
subb
mov
or
pop
rolb
mov
enter
int
pop
popa
repz
ds
loop
popf
mov
mov
mov
subb
clc
rclb
shrl
or
int
mov
push
repnz
adc
jle
cmc
cmc
cmp
xor
enter
pop
mov
sbb
add
daa
sub
fwait
mov
sbb
das
push
add
mov
jl
sbb
scas
orl
push
fstp
or
rcrb
jle
lods
mov
and
push
aas
sbb
push
insb
mov
movsl
out
imul
mov
push
mov
shlb
xor
push
enter
jl
cli
and
adc
xchg
mov
jne
add
movb
div
hlt
push
mov
test
jb
stos
in
sbbb
pop
int3
enter
sbb
adc
mov
mov
hlt
fidivrs
cmp
or
nop
mov
sub
mov
ljmp
inc
push
mov
pop
or
pop
push
jno
scas
cmp
push
lds
lods
insb
xorb
imulb
adc
and
not
mov
outsl
sub
jg
cmpsl
ud2
dec
mov
pop
mov
pusha
mov
jae
adc
popa
outsb
out
or
mov
das
adc
or
aaa
mov
mov
pop
push
dec
pop
sbb
jg
shlb
shlb
add
popf
scas
fcomps
mov
and
inc
gs
jmp
rcr
mov
sub
fidivrl
call
fmull
xchg
pusha
cmpb
or
icebp
fsubl
sub
inc
and
rolb
cwtl
imul
jno
adc
jbe
shl
loop
mov
insb
fdivl
mov
cmc
fsubrp
jmp
sbb
push
setle
into
mov
fimull
fstpl
frstor
pusha
cli
adc
jno
loope
daa
mov
cmp
or
scas
pop
inc
mov
sub
xchg
outsb
sbb
das
push
lcall
mov
aas
mov
out
add
mov
add
sahf
mov
popf
pop
clc
rclb
push
mov
pop
pop
in
divl
imulb
sbb
push
mov
ror
addr16
mov
adc
std
pop
push
inc
ret
mov
loopne
mov
jg
jl
int
adc
cmp
pop
sbb
fcmovbe
and
dec
mov
jge
lds
inc
dec
dec
jo
insb
dec
and
dec
mov
js
pushf
sub
add
icebp
push
mov
notl
mov
push
jmp
or
test
xor
fadds
adc
lret
pop
repnz
inc
lahf
aaa
push
sbb
jp
mov
mov
jnp
sbb
adc
rcr
mov
ds
jecxz
shll
pop
cmp
popf
icebp
hlt
out
adc
das
jb
clc
test
dec
iret
or
fwait
jo
add
out
nop
out
outsb
cwtl
sub
loop
and
adc
jl
pop
add
int
push
clc
call
jecxz
and
shlb
mov
cld
int
cmp
std
jne
and
inc
jo
pop
mov
bound
mov
fistpl
cltd
repnz
push
das
sub
cld
add
jmp
arpl
push
sbb
ret
int
fidivrs
cmp
addr16
aam
in
rcrb
movsl
push
jge
push
sti
add
mov
jle
shr
shll
movsl
rcr
add
rorl
mov
icebp
or
jle
push
xor
or
incl
ds
mov
jbe
lea
insb
cli
stos
stos
shrb
add
dec
sub
imul
push
call
or
jae
jmp
fwait
jmp
je
mov
sbb
dec
aam
mov
inc
jne
add
lds
shrb
in
out
pusha
not
call
mov
sub
call
push
sti
shlb
test
cmc
shlb
rcrb
and
or
orl
jmp
mov
or
inc
fstps
je
fbld
lahf
inc
inc
pop
or
ret
pop
js
ret
mov
loope
jne
nop
in
dec
outsb
fsubl
ret
test
mov
in
sbb
mov
push
imul
mov
push
leave
leave
stos
cwtl
adc
cmp
adc
add
testl
ret
xchg
dec
jb
mov
push
jp
cmpsb
das
ret
mov
scas
lods
testb
pushl
ret
negb
or
test
outsl
cmp
scas
imul
ja
mov
push
mov
inc
jo
stos
shlb
arpl
imul
xchg
add
fdivr
test
mov
push
xchg
lods
sbb
mov
xchg
mov
sbb
mov
int
test
test
push
pop
stc
pushf
aam
rol
out
loopne
int
sub
xlat
sbb
inc
mov
push
scas
outsb
push
std
inc
add
ja
or
pop
cmp
sub
lcall
cmc
cmp
ret
mov
jns
loopne
repnz
ja
mov
pusha
enter
or
pushf
xchg
je
xchg
inc
pop
mov
jno
ret
push
jge
sbb
push
sahf
cmp
lods
das
ss
sub
sbb
or
add
scas
shr
xchg
xor
mov
pop
scas
or
xor
leave
dec
xorl
pop
out
mov
cmp
leave
jno
sub
sbb
in
jmp
test
rcr
or
push
cmp
inc
cli
mov
cmp
push
in
les
xchg
mov
inc
jnp
ss
xchg
test
mov
lods
pop
jae
cmpsl
pop
out
add
pop
dec
add
jmp
adc
mov
jbe
push
dec
loop
mov
subl
mov
sar
cwtl
xor
sti
or
cs
cmp
loop
aad
adc
jnp
arpl
mov
fwait
lods
inc
sub
clc
call
xchg
xchg
mov
icebp
cmp
mov
mov
inc
scas
fildll
mov
mov
je
xchg
or
add
loope
aaa
cmp
imul
mov
adc
jo
in
jbe
pop
into
sahf
bound
fidivl
fildl
shll
lret
out
fisubl
mov
shll
add
push
insb
outsb
sti
add
or
adc
ret
mov
xor
pop
clc
fsubl
adc
mov
sub
fstpt
iret
cmp
and
insb
ficomps
sub
mov
repnz
hlt
icebp
call
jmp
cmp
cmpl
lea
jle
imul
xor
jge
addr16
xchg
push
aaa
pop
stos
sbb
inc
push
sbb
mov
mov
aaa
cmp
cld
sub
mov
inc
inc
jle
outsb
or
push
ds
push
cli
and
fidivrs
adc
xchg
movsl
test
aas
mov
push
mov
cli
inc
fs
setl
cmp
mov
ds
jae
mov
insb
ss
call
data16
cmp
popa
outsl
and
jecxz
daa
push
cmp
sarb
sbbb
shl
or
test
sub
mov
sub
xor
nop
inc
mov
cld
mov
shl
icebp
dec
mov
testb
dec
mov
cmp
and
xchg
xor
in
add
sti
add
xor
adc
pop
or
dec
or
xchg
push
jmp
popa
and
push
sahf
sahf
xchg
cli
push
enter
inc
mov
popa
mov
je
das
jbe
add
adc
loopne
push
pop
daa
jae
andb
movsl
or
adc
lea
ja
add
dec
je
dec
cmpsl
and
push
out
cmpsb
ljmp
cli
pushf
cmp
push
dec
lock
cmpsb
push
fistpl
cmp
bound
mov
mov
xchg
ja
and
mov
movsb
cmp
out
pop
cmp
sbb
add
push
mov
push
or
lret
int
mov
sub
pop
push
mov
and
xor
ss
xchg
sub
adc
test
aas
inc
mov
fmuls
out
jnp
mov
in
push
dec
mul
in
les
mov
push
inc
cmpl
add
aad
out
ret
scas
daa
pop
les
jbe
movsl
pop
push
lea
int
cmpsb
jp
mov
nop
dec
outsb
mov
adc
mov
inc
and
pop
aam
movsl
pop
cs
gs
sub
bound
notb
sbb
shl
out
lock
scas
int3
sbb
shl
call
movsb
sbb
push
insb
mov
lods
cmpsb
inc
inc
xor
jbe
cmc
fdivr
adc
popa
or
rorl
inc
pop
sub
mov
xchg
xlat
add
and
xchg
cmp
xchg
out
xchg
bound
push
fiaddl
pop
xor
neg
cmp
mov
jb
aam
call
out
and
xchg
xor
push
sahf
std
lea
inc
arpl
in
and
fsqrt
add
fidivrs
arpl
ljmp
mov
mov
mov
cmc
aas
lret
xchg
arpl
jo
iret
hlt
push
mov
pop
cmc
outsb
insb
jle
push
addr16
stc
mov
dec
in
xchg
lcall
pop
adc
dec
aad
std
loopne
jo
addr16
xchg
roll
mov
mov
push
inc
lock
fadds
xchg
dec
jns
mov
and
pop
loopne
push
cmp
dec
aad
mov
fsubrs
add
lcall
jle
subl
loop
movl
rorl
int3
jbe
mov
xchg
ret
push
ja
lret
push
mov
ljmp
leave
insl
push
jmp
push
pop
mov
into
lods
mov
or
popf
sbb
push
mov
cmp
mov
repz
jecxz
mov
mov
fdiv
adc
mov
or
jp
insw
lcall
cmpsb
loop
xor
out
pop
jae
adc
popa
mov
xchg
pop
xor
cmp
mov
inc
push
popf
dec
cmp
pop
add
fsts
cmovge
popf
push
sbb
shlb
out
mov
jmp
movsl
push
imull
mov
std
cmc
push
mov
cmp
or
arpl
mov
insl
mov
push
mov
ret
sti
push
pusha
imul
repnz
leave
mov
aad
pop
xchg
pop
mov
push
lds
insl
add
ljmp
jbe
jmp
ljmp
and
nop
mov
ljmp
in
je
or
cmp
mov
add
mov
dec
imull
div
adc
in
mov
xchg
lret
ret
or
orl
mov
pop
test
push
test
mov
mov
cmp
aam
imul
int
cld
cmp
push
test
mov
or
jle
lods
sahf
xchg
inc
insb
and
push
push
loopne
adc
pushl
pop
cmp
dec
or
mov
add
pusha
pop
lock
mov
mulb
adc
jg
jo
cmc
out
js
dec
and
into
adc
or
pop
int3
mov
lcall
sahf
sbb
push
sbb
int
pop
cltd
jle
xchg
out
sub
scas
pop
addr16
inc
test
mov
outsl
rcrb
mov
pop
insb
push
xchg
cli
sub
loope
mov
cmp
fsubrs
mov
mov
jo
addr16
inc
fldt
jne
test
or
cltd
je
orb
mov
stos
dec
das
vmwrite
fisubrs
lahf
sub
in
fnstsw
dec
jecxz
jnp
mov
ret
es
pop
inc
ja
dec
dec
gs
in
es
mov
fneni(8087
lea
outsb
xor
fs
push
in
call
push
fstl
xor
inc
fstpt
fiadds
ret
pop
lcall
mov
adc
mov
mul
orl
mov
int
mov
xchg
jnp
addr16
mov
push
enter
xchg
cltd
sbb
rcrb
mov
pop
push
add
mov
mov
mov
and
jne
imul
pusha
dec
in
mov
addl
sub
xchg
pop
popf
add
cwtl
imul
je
add
shlb
lods
cmp
jle
repnz
icebp
cmc
cmp
pop
cmpsb
test
push
push
push
js
jg
sub
rolb
fnstsw
loopne
sahf
push
iret
push
jle
outsl
pushf
jle
or
dec
sbb
fimull
push
mov
cmpsl
mov
sti
shll
xchg
lods
je
cmp
arpl
lock
icebp
and
das
adc
jmp
rclb
dec
push
cwtl
inc
enter
arpl
ret
test
es
imul
mov
cli
inc
dec
fwait
push
out
imul
jmp
rclb
inc
and
fdivl
cmp
pop
repz
dec
or
sub
int3
sub
in
inc
jo
mov
sbb
outsb
inc
cmp
cmpsb
ret
aam
xorl
mov
cld
push
aaa
cwtl
push
adc
hlt
or
in
mov
nop
movsb
xchg
arpl
mov
sahf
jp
popa
dec
or
push
sbb
cmpsl
mov
adc
insb
mov
repnz
mov
iret
cmc
les
fstpl
jae
gs
icebp
cmc
push
test
jmp
pop
mov
inc
jl
cld
fdivrs
and
call
fisubrl
loop
sar
jmp
bound
dec
add
sub
mov
lock
nop
xor
or
les
movsl
mov
movl
out
imul
mov
sub
xchg
jo
xor
and
sub
ja
sbb
shrl
mov
filds
cmc
mov
loope
inc
paddb
or
mull
pop
scas
loopne
mov
push
inc
xlat
xor
cmp
lahf
mov
pop
mov
dec
outsl
inc
xchg
push
gs
stos
jnp
leave
push
adc
ja
aam
popa
imul
adcl
mov
xor
add
test
ljmp
test
inc
push
adc
outsb
int
lds
je
fbstp
mov
test
sbb
or
pop
pop
lods
push
stc
jne
js
jp
mov
mov
jecxz
and
sub
pop
in
insl
pop
cmp
and
es
cmp
movsl
aam
in
clc
add
bound
mov
das
mov
insb
xlat
mov
das
out
jbe
ss
sub
lret
loopne
dec
stc
cmpsl
or
mov
jecxz
ljmp
popf
push
stos
xlat
mov
cwtl
dec
imul
add
daa
mov
mov
in
cwtl
test
out
mov
fmull
fstpt
mov
rorl
leave
mov
and
das
adc
add
dec
pop
outsl
popf
fs
js
lods
int3
dec
divl
test
test
add
test
and
xchg
or
mov
leave
and
scas
sbb
mov
fcomps
push
cmp
mov
stos
inc
adc
loope
fcmovb
test
out
in
add
sti
dec
pop
aam
push
mov
push
test
jmp
prefetchw
ds
and
test
add
push
out
ljmp
int
add
dec
insb
ljmp
cmc
cltd
push
jo
push
lcall
je
jmp
imul
mov
ds
xor
fidivl
in
mov
mov
inc
call
mov
jp
jae
push
out
cmp
xchg
iret
daa
sahf
push
fwait
dec
lret
hlt
pop
loopne
ja
les
stos
jl
push
adc
push
cmp
mov
hlt
mov
divl
mov
xchg
in
cmc
lods
pop
icebp
mov
push
push
mov
mov
daa
add
pop
in
jmp
adc
mov
pop
stos
adc
xorl
mov
xchg
push
scas
mov
mov
or
clc
push
mov
cmp
push
inc
in
rclb
rclb
jmp
xor
test
rcrl
arpl
mov
sub
notl
add
fprem1
cmc
mov
push
jge
test
xor
sbb
sub
xor
int
jl
mov
out
or
pop
lcall
test
jo
sbb
sbb
jl
iret
aas
cmp
adc
push
or
xchg
ss
xor
or
loope
push
sarb
mov
fs
movaps
jb
cli
add
pop
fcoml
repz
mov
lods
cmp
mulb
fisubl
popa
sub
stos
repz
or
cld
adc
sbb
dec
pop
loopne
or
xor
push
xlat
test
iret
xchg
mov
xchg
push
sti
dec
sbbb
loop
in
add
out
or
or
icebp
cmpsl
aaa
out
sub
into
mov
jno
int3
fisubrl
push
popf
add
or
or
inc
inc
jae
leave
in
sub
lods
xor
or
fiadds
mov
test
pop
add
sbb
das
nop
lock
mov
int3
nop
cs
ss
and
sbb
sub
das
dec
ljmp
mov
cmp
mov
add
mov
fstp
arpl
aam
cmp
inc
add
jle
mov
icebp
or
xor
mov
push
push
xchg
mov
je
fdivl
leave
imull
sub
arpl
cmp
jecxz
fistpl
mov
clc
loop
xchg
scas
xchg
xchg
repz
cmp
fadd
pushf
sub
lcall
cltd
dec
mov
pusha
pop
sahf
cmp
imull
mov
pop
cmp
out
lock
aaa
or
gs
mov
adc
dec
out
out
je
jbe
int
push
dec
lock
enter
in
xlat
repz
roll
lock
push
arpl
fcmovnb
std
js
xchg
or
stc
shr
outsb
insb
jo
jb
repz
cmp
dec
out
repnz
pushf
iret
ss
adc
cmp
rcr
lds
outsl
jns
push
jmp
aad
loopne
les
pop
xchg
sub
jne
add
icebp
mov
daa
or
sti
scas
jecxz
mov
pop
add
pop
xor
fsubs
aas
test
fldt
cmp
sbb
aaa
jbe
fdivrs
nop
out
mov
cld
add
shlb
add
or
or
jge
dec
adc
sbb
mov
lahf
jno
aam
push
inc
je
push
scas
je
jp
addb
xor
je
mov
push
cvtpi2ps
decl
outsl
and
clc
cmp
adc
imul
sbb
mov
pusha
leave
dec
fsubrl
fimull
imul
inc
inc
test
popl
or
fsub
push
inc
jl
cmp
and
nop
mov
imul
sahf
xor
sub
mov
push
cmp
inc
int3
xchg
aaa
sbb
mov
push
int
xchg
pop
pop
inc
cmp
jp
sbb
push
mov
sbb
mov
and
aaa
out
push
jno
mov
aas
fstpt
aad
loopne
sub
loope
jp
push
jge
xor
xchg
imul
pop
icebp
scas
jno
dec
jle
cmpsl
cli
test
pop
pop
lods
jge
loopne
pop
clc
inc
aam
xor
loope
rcrb
push
sarb
imul
sti
and
sub
sub
cmp
jb
lea
cmp
xchg
out
into
movsb
inc
icebp
scas
popa
xor
fdiv
iret
rdmsr
pop
lcall
sbb
cmpsl
jb
popl
mov
mov
es
dec
js
rcrl
popl
lods
mov
frstor
dec
aam
push
xchg
cs
mov
cmc
pop
ljmp
arpl
adc
xor
mov
loopne
popa
dec
push
push
lock
into
sarl
adc
cmp
inc
iret
sub
xchg
subl
scas
adc
push
cmpb
sti
insl
ret
filds
ret
xchg
mov
push
cmp
addr16
scas
push
sub
dec
stos
jnp
xor
and
pop
xchg
mov
lcall
xchg
xchg
pop
je
jle
add
mov
dec
lock
lea
inc
xchg
test
pop
fdivl
xchg
jne
lret
movsb
cmp
stc
xor
lahf
in
jmp
lods
push
or
xchg
xchg
add
jge
clc
ret
and
or
sbb
jmp
add
inc
arpl
sbb
clc
ljmp
jl
cld
mov
in
dec
cmpsl
clc
mov
rcrb
mov
movl
in
jnp
cmp
ret
jns
lock
jge
out
push
jl
hlt
addr16
add
arpl
sbb
test
xor
imul
add
mov
in
ret
setle
dec
xchg
mov
cmp
outsb
adc
jecxz
add
idiv
jns
hlt
imul
inc
push
adc
jl
std
das
pop
and
scas
pop
mov
mov
xchg
sub
push
mov
mov
pop
lret
aam
adc
rorb
and
rclb
das
push
jmp
fsubrl
push
loopne
stos
sub
xor
popa
or
mov
mov
jl
inc
mov
xorl
add
sbb
add
jnp
dec
insl
mov
sbb
xchg
push
dec
xchg
scas
add
adc
mov
out
xor
push
xor
mov
in
mov
lds
test
sarl
popa
push
ds
inc
ss
nop
inc
ret
ret
out
push
test
xchg
jnp
jp
andl
enter
out
jnp
es
out
inc
insb
or
inc
call
loope
lods
in
arpl
pop
mov
iret
cmp
in
add
ss
push
stos
pop
add
or
lgs
xor
mov
outsb
and
xchg
cli
adc
mov
lahf
fdiv
testb
cmp
cmp
rorb
ja
data16
pop
lea
testl
test
or
xlat
mov
or
dec
shll
jmp
cmp
mov
dec
jmp
cmc
jne
imul
mov
pop
rorl
push
call
fdivl
stos
mov
sbb
mov
jb
orb
push
cmp
rcrb
outsl
mov
pop
pop
xchg
sub
test
lods
cmpsb
xchg
xlat
xor
sub
jp
jmp
xor
sbb
shrl
push
imul
sub
icebp
push
pop
in
pop
ja
cs
push
leave
mov
sub
add
xchg
jne
aas
stc
dec
push
outsb
daa
add
sub
mov
push
inc
lods
mov
insl
sbb
sti
inc
and
fsubrs
loop
cmpsl
pop
sub
dec
push
icebp
xlat
test
push
xor
and
add
push
aam
push
push
xor
mov
jmp
push
repnz
mov
in
push
or
insl
add
jmp
gs
mov
clc
adc
mov
cmp
in
iret
mov
fcomps
es
adc
les
push
mov
xor
scas
je
jmp
pusha
sti
jmp
push
inc
ds
arpl
push
mov
cmc
lods
test
arpl
out
movsl
sbb
xlat
cmp
sbb
lods
lcall
fs
mov
pop
pop
push
push
test
fisubl
pop
shrl
xchg
enter
jnp
test
scas
cli
push
pop
int3
push
xlat
cmp
dec
lret
data16
aad
push
insl
mov
addr16
je
arpl
fs
call
hlt
pop
aad
lods
jo
mov
inc
into
jge
dec
ja
stos
pop
mov
pop
or
insb
add
add
pushf
outsb
cmpsl
cmpsl
inc
mov
dec
dec
jno
cmp
xchg
and
pop
int
aam
arpl
nop
push
add
imul
add
lods
cmp
sbb
sbb
outsl
js,pt
fsubs
mov
mov
pop
sbb
inc
dec
sbb
pop
ja
decl
adc
sbb
push
or
out
mov
xor
cli
enter
scas
and
divb
lret
popa
outsb
adc
call
xchg
inc
mov
lock
das
dec
jl
loopne
push
stc
cmc
lock
mov
loop
insl
push
mov
adc
and
mov
push
fnstenv
mov
stos
and
pop
lock
cltd
jo
inc
nop
sub
mov
mov
and
inc
jb
xchg
pop
or
dec
add
push
push
and
or
push
cmc
lds
xlat
adc
js
mov
dec
add
arpl
outsw
push
add
fwait
call
dec
dec
icebp
or
call
out
or
loopne
and
cld
and
in
test
or
fwait
push
inc
into
rol
ljmp
fisttpll
mov
jecxz
and
aam
leave
mov
dec
fadds
sarb
std
lock
leave
lea
add
lahf
mov
jge
jno
das
lods
and
fndisi(8087
mov
and
mov
cmc
sub
add
xor
adc
mov
stos
loopne
pop
jmp
adc
mov
movsb
add
outsl
xchg
mov
loope
sub
sbb
and
fsub
jp
stos
stc
popa
inc
jmp
sub
jge
push
push
js
lcall
jmp
sbb
test
fwait
inc
out
cmpsl
scas
xchg
aad
sub
rorb
adcl
xor
jp
popl
fiaddl
insl
sar
inc
pop
or
jle
inc
adc
mov
push
fcom
cmc
lock
add
jl
mov
ljmp
push
loopne
jbe
xor
jecxz
push
push
xor
xlat
test
push
mov
add
test
lock
cmpsl
repnz
and
cmp
xchg
loopne
loop
sbb
xchg
ja
enter
pop
orb
mov
adc
les
movsb
imul
push
mov
dec
lahf
mov
cmp
sub
dec
xor
iret
push
mov
mov
ja
push
xor
btc
inc
seto
daa
and
sahf
lock
call
stc
jg
mov
add
inc
cltd
dec
sbb
orl
clc
xorl
xor
pop
dec
shl
adc
hlt
dec
scas
imul
add
xor
mov
push
mov
outsl
sti
shrb
clc
mov
sbb
sbb
sub
dec
push
rclb
xchg
mov
cli
push
cld
cmp
imul
xor
jb
jno
push
push
jno
pop
and
sub
cmp
in
out
adc
pop
sti
pop
xchg
jecxz
gs
cmp
je
pop
call
mov
fisttpll
xor
insl
hlt
cwtl
inc
add
out
jp
xor
jmp
mov
daa
out
fsubs
stc
adcl
aas
lock
dec
mov
out
ror
pop
loop
mov
and
imul
and
cltd
fildll
mov
cmpsb
cmpsb
movsb
mov
cmp
daa
mov
inc
inc
mov
push
sbb
pushf
mov
xor
mov
stos
xchg
xchg
mov
cmc
cmp
xchg
mov
mov
data16
inc
outsb
pop
arpl
orb
or
jl
push
and
mov
xchg
lods
sub
sbb
mov
add
mov
inc
push
xchg
jp
in
imul
xchg
roll
adcl
mov
mov
je
dec
shlb
insl
cmp
int
mov
push
push
ss
cmpl
lret
arpl
movsb
lods
mov
mov
mov
lods
pop
jecxz
cmpsl
insl
mov
imul
push
xchg
inc
lea
dec
xchg
bound
lods
sbb
jmp
xchg
jo
rorl
push
mov
dec
fs
std
mov
cmc
aam
mov
in
mov
and
test
cmp
adc
xchg
test
fwait
push
inc
push
dec
or
push
aas
mov
xor
mov
jecxz
nop
jae
dec
mov
lock
or
push
call
scas
sub
imul
cmp
pop
aas
mov
arpl
mov
imul
or
ss
test
mov
cmp
inc
lcall
mov
stos
fisubrl
cmp
aas
icebp
mov
dec
add
mov
push
mov
js
dec
into
in
cmovb
mov
aaa
js
cmp
cmp
jns
dec
lret
andb
sub
sub
jbe
push
stc
nop
sub
xchg
or
aad
lods
mov
dec
xor
lods
push
jl
push
cmpsl
call
jle
mov
ljmp
mov
sti
pop
jp
inc
inc
adc
pop
aaa
xor
sub
mov
pop
hlt
dec
icebp
add
sbb
movl
popa
scas
ds
cmp
mov
loop
lret
ljmp
int3
jl
in
je
stos
jnp
mov
aam
insb
sbb
ds
push
cmp
data16
fwait
imul
loope
and
pop
loope
cmpl
xchg
mov
xchg
aad
and
lods
imul
cmp
jae
pop
push
stos
xchg
out
jne
test
lods
ja
cmpsl
call
jo
add
sub
pop
test
shll
pop
ja
ret
xchg
out
and
test
data16
push
test
ret
pop
sbb
xchg
sbb
mov
push
pop
jmp
cltd
scas
pushf
mov
mov
punpcklbw
mov
or
or
sub
sub
lods
or
fsubs
jno
stos
scas
leave
xor
out
std
sbb
call
outsb
mov
iret
xor
ret
jnp
faddp
popw
pop
mov
sub
test
jg
imul
mov
sbb
push
sbb
jge
mov
addr16
cmp
cld
cmp
lahf
sbb
cmp
in
aad
insb
xchg
lods
lcall
pop
jo
or
notb
test
mov
pop
movsb
and
or
adc
jb
cli
mov
sub
cmpsl
das
adc
dec
xor
scas
push
sahf
sahf
cmp
pop
push
sbb
mov
mov
jne
test
mov
cmp
icebp
insl
clc
jl
clc
mull
int
pop
sbb
div
jno
add
mov
call
push
sub
test
pop
lods
add
jmp
popf
xor
cmp
inc
icebp
xor
xor
js
dec
fadds
adcl
push
adc
mov
inc
mov
inc
mov
jb
fildl
out
std
rcr
ror
fs
push
jmp
les
mov
mov
mov
lds
mov
jmp
aam
jno
push
push
sbb
mov
ret
fdiv
js
add
in
fdivl
ss
jmp
mov
sti
adc
roll
mov
push
cmp
dec
outsb
pop
sub
push
mov
rorl
stos
cmpl
into
cmp
sub
jbe
fadds
jge
daa
add
dec
add
into
sub
push
cltd
add
add
mov
mov
sbb
fs
outsb
scas
stos
jbe
and
dec
ficompl
inc
int3
mov
or
dec
push
mov
std
clc
shr
call
out
leave
and
pop
movl
lahf
jle
fnstsw
ror
aad
test
add
inc
cmp
xchg
mov
fdivl
fucomp
jne
mov
nop
testb
mov
aam
fwait
inc
aaa
xlat
adc
ljmp
jle
dec
fs
sbb
into
and
jbe
rolb
addr16
cmpsl
push
mov
insb
sbb
and
cmp
dec
jb
jmp
rclb
repz
in
lea
mulb
cmp
mov
inc
jl
lds
jg
call
add
shrb
testb
loope
or
ret
or
sbb
or
pop
outsl
cld
or
mov
jecxz
mov
pusha
pop
sbb
in
sbb
and
lret
stos
dec
divb
lock
push
or
inc
dec
jne
jno
mov
mov
adc
out
pop
jne
sbb
mov
adc
sti
fidivrs
cwtl
add
jo
outsb
xchg
out
mov
pop
or
hlt
jle
cmc
and
mov
push
lcall
popf
stos
jnp
and
test
xor
rcrl
aaa
push
sbb
and
and
mov
data16
mov
lods
mov
sub
divps
xor
pop
xchg
pop
popa
loope
sahf
ds
add
mov
movsb
cmpsb
sbb
inc
clc
in
xlat
cltd
insl
xlat
dec
and
adc
fidivrl
sahf
xchg
outsb
daa
movsb
xor
mov
jle
dec
cmpsl
loop
out
jae
scas
jp
xchg
cwtl
rolb
jmp
arpl
push
mov
test
aam
pop
adc
in
test
mulb
out
or
ficompl
cld
jo
test
arpl
sti
popf
ds
movsb
mov
add
ficoml
xchg
mov
push
call
std
add
repnz
mov
xchg
jae
xor
push
sbb
inc
inc
xor
lahf
or
loop
cmpsl
sbb
inc
subb
pushf
or
stos
movsb
loope
ja
daa
push
pop
or
in
prefetchw
hlt
xor
adc
jge
sbb
dec
cmpsl
outsl
mov
pop
aad
jnp
adc
stc
pop
xchg
aam
lea
ja
cmpsl
decl
mov
pop
clc
adc
cli
cmp
cmpb
inc
xchg
xorb
pop
inc
cmp
in
sub
mov
add
pop
push
push
insl
outsl
dec
or
dec
aam
test
mov
pop
int
ss
jno
sahf
in
push
sahf
fcoms
cmp
fists
inc
xlat
andb
jmp
inc
mov
jne
insl
lock
jmp
xchg
push
pop
iret
sti
ljmp
xchg
push
push
sbb
femms
iret
je
jbe
jmp
inc
mov
cmp
ljmp
cltd
push
and
and
inc
fildl
sarb
rcrb
mov
ret
or
mov
adc
cmc
scas
cmc
les
ds
int
pop
push
push
into
jo
and
xchg
lret
sti
loopne
lods
jo
push
popa
fiadds
cmpl
xor
push
lds
ds
mov
scas
loopne
lret
add
shrb
cmp
sub
lods
notb
dec
xchg
pushf
xor
jns
stos
scas
call
andl
arpl
test
inc
mov
lods
movsl
xlat
cs
sbb
clc
adc
mov
lcall
addr16
fwait
push
fisubrl
repz
xchg
cmp
push
cmp
mov
mov
mov
cmp
mov
adc
bound
cmc
sub
lahf
sbb
mov
in
fnstenv
sahf
outsb
fs
mov
mov
mov
or
adc
add
loopne
fidivl
push
xchg
push
push
adc
in
mov
cmp
in
add
xchg
sub
or
jmp
rorl
inc
scas
cwtl
inc
arpl
inc
and
lods
loopne
shlb
icebp
jne
or
inc
cmp
aaa
clc
and
icebp
mov
addr16
je
movl
fs
inc
pop
lret
jmp
fstpl
in
or
adc
add
jns
pop
mov
shlb
leave
into
fs
cli
jg
mov
pop
rol
es
lcall
or
cmpsl
mov
loope
scas
test
dec
fninit
into
dec
push
push
int3
pop
aaa
pop
daa
push
sbb
or
or
jno
sbb
mov
scas
and
push
jb
xchg
dec
jo
and
movsl
les
dec
popa
negl
dec
mov
lcall
mov
test
mov
loop
imul
push
or
jle
or
or
rcrl
neg
outsl
mov
rolb
int
and
push
dec
mov
sub
js
pusha
mov
imul
inc
mov
inc
js
loop
sub
push
mov
cmc
mov
jl
mov
xlat
cld
imul
clc
or
or
stc
test
inc
xchg
mov
push
jp
sbb
mov
loopne
inc
push
fnstsw
test
lds
andb
aad
popa
mov
ficoms
call
not
mov
popa
daa
sub
inc
shlb
push
jno
sbbb
fistl
jle
in
test
pop
ss
scas
outsl
adc
arpl
stc
pop
testl
push
jp
mov
sub
pop
push
sbb
pop
sbb
or
cmc
rol
lahf
jno
jnp
mov
popf
and
add
mov
cmp
sbb
push
imul
jnp
cmp
cmpsb
shl
pusha
adc
out
inc
jp
mov
xchg
sub
scas
loope
fimull
cld
cmp
pop
or
mov
adc
ss
or
cmp
inc
mov
mov
ret
jb
pushf
stos
or
lahf
jge
lret
jp
das
idivl
sbb
and
cmp
pushf
lahf
js
call
fstl
lea
cmp
jge
fldl
lcall
lods
pop
cmp
cmp
es
lea
xor
jbe
hlt
jge
push
sub
pop
scas
fdivrs
mov
jne
ret
cmp
stos
lcall
shlb
jae
push
or
ret
addr16
mov
cmp
push
inc
shll
outsl
xchg
insl
mov
loopne
fcompl
mov
sbb
notb
lods
cmpsl
mov
inc
nop
cmp
xchg
out
push
cmp
mov
sub
fsub
lahf
push
int3
mov
xor
cmp
sub
jcxz
dec
sbb
inc
cmc
sti
insl
sub
mov
mov
pop
cmp
pop
cwtl
push
scas
pop
mov
mov
and
jne
add
adc
mov
out
jmp
mov
clc
mov
aaa
mov
icebp
inc
leave
inc
mov
or
ret
enter
cmc
mov
lods
jmp
xor
pop
mull
jl
push
jecxz
imul
ret
bt
testl
std
nop
push
in
lods
jns
add
sbb
sbb
dec
daa
data16
paddusb
push
pop
inc
cmovae
jo
xor
mov
mov
and
pop
sbb
les
push
cli
cmpb
or
dec
xchg
ds
scas
int
mov
add
xor
aas
int
sti
sbb
dec
subl
jno
cmc
and
hlt
call
mov
mov
xchg
mov
sbb
mov
repnz
es
mov
aam
fbld
push
dec
sbb
pop
js
jae
mov
subps
fildl
jnp
cli
std
fs
call
xor
fsubrs
ja
js
in
js
shr
adc
or
dec
jne
andb
das
add
cmp
xchg
aaa
pop
mov
cmpsl
arpl
jno
pop
dec
stc
aam
mov
ljmp
out
addl
xor
xlat
aam
out
fldt
ret
push
in
cmpl
shlb
adc
test
mov
pop
mov
lock
clc
outsb
mov
xor
dec
pop
aam
xchg
ret
int
fwait
call
pop
aad
ret
inc
mov
or
and
enter
fimuls
aaa
movsb
insl
ljmp
mov
cs
mov
jno
sbb
das
add
xlat
test
xchg
popa
push
orl
xchg
push
xlat
push
pcmpgtd
inc
xlat
jno
loopne
rolb
stc
std
cmp
iret
pop
lahf
aam
push
push
icebp
and
dec
mov
or
sub
inc
adc
xor
jne
inc
push
add
fadd
pop
inc
call
repnz
insl
jmp
mov
mov
scas
stos
jo
or
test
add
inc
nop
orl
inc
xlat
cs
push
push
movsl
xchg
testl
pop
fs
loopne
cmpsl
xchg
mov
ud2
leave
sub
push
popa
lret
pop
lret
incl
and
xchg
out
xlat
lods
lret
lods
lret
idivb
dec
pop
divl
incl
pop
push
xchg
icebp
lea
ljmp
shl
insl
adc
out
out
pop
cld
xchg
mov
movsb
or
sbb
add
jl
dec
lds
sahf
jbe
notb
movsb
inc
gs
das
test
dec
push
lods
xchg
or
dec
rcpps
xlat
mov
lret
mov
cmp
mov
cltd
adc
lret
mov
mov
mov
pop
pop
mov
std
pop
loopne
ret
nop
mov
mov
lds
adc
mov
and
pop
xchg
push
aam
stos
jp
jb
mov
mov
pop
add
sbb
sbb
adc
lock
lock
cmc
xchg
adc
sub
adc
push
jmp
xlat
outsl
adc
inc
rorl
xor
xchg
imul
pop
xchg
jb
add
ret
orl
mov
mov
mov
enter
popa
in
out
dec
out
fisubrs
aas
xchg
mov
xor
sub
xchg
pop
xchg
jle
xchg
xchg
mov
xchg
mov
adc
sahf
mov
add
shrl
fst
cs
es
hlt
fcmovnb
add
xchg
mov
dec
insl
sub
insl
cs
sarl
dec
sbb
adc
lods
filds
ljmp
push
mov
inc
mov
cmp
xchg
inc
pop
int3
gs
xchg
pop
popf
lods
xchg
sub
lods
call
insl
and
shrl
pusha
aas
nop
outsl
fmulp
cmp
fwait
rcrb
sub
sahf
daa
push
cmp
jne
fninit
pusha
fisubs
pop
ret
pop
scas
dec
jae
xor
mov
mov
push
mov
jnp
mov
mov
pop
bound
jbe
mov
and
mov
ror
inc
xor
mov
scas
daa
cmp
lret
loop
mov
loop
inc
cli
jle
pusha
mov
jno
pop
push
sub
add
push
les
cmp
into
mov
sub
fucomp
ljmp
adc
push
mov
mov
pop
fdivr
daa
xchg
push
xor
cli
mov
loop
mov
push
mov
ret
mov
sub
mov
jne,pn
fdiv
andl
cli
arpl
je
cltd
push
xchg
or
mov
xchg
imul
jb
add
mov
mov
sub
test
addb
mov
xor
pusha
add
shl
sub
loop
adc
add
out
scas
popf
and
pop
stos
inc
mov
pop
ret
cmpb
or
sub
rcl
test
dec
pop
mov
push
shll
sub
cmp
in
sbb
cmp
mov
je
faddl
call
mull
dec
loopne
lods
jecxz
sub
lods
repz
add
std
je
lret
pop
insb
inc
inc
ret
jae
cmc
es
mov
sbb
pushf
and
cwtl
add
popf
dec
xchg
out
mov
xchg
inc
test
pop
bound
hlt
mov
jg
and
pop
aam
test
mov
test
xor
pop
push
pushf
cmp
cmpsl
pop
mov
subb
pop
mov
lock
sti
inc
loopne
sbb
test
pop
cmp
inc
ret
mov
sub
mov
mov
dec
into
cmp
lahf
pop
outsl
cmp
jb
and
dec
outsl
frstor
cli
ss
sbb
shlb
bound
insl
cmp
push
push
pop
outsl
pop
movsb
xchg
stos
pusha
lret
imul
test
and
mov
cmp
inc
insb
js
dec
dec
loopne
and
sti
sbb
inc
xchg
clc
test
mov
outsl
jp
shrb
push
andl
lock
xchg
movsb
into
push
mov
call
arpl
adc
popf
scas
or
jnp
fcmove
scas
pop
sbb
mov
push
pop
test
inc
xchg
mov
imul
insb
imul
outsb
push
in
pushf
imul
jbe
insl
mov
add
lock
dec
insb
mov
push
inc
adc
push
out
push
arpl
sbb
iret
and
add
ja
test
pop
jmp
push
sbbb
lods
test
pop
shlb
div
inc
fst
xor
scas
mov
adc
push
push
insb
fwait
sti
clc
or
hlt
es
leave
mov
jle
pop
outsb
lock
dec
test
push
je
inc
or
add
stos
mov
test
sub
push
cmpb
inc
stos
or
inc
fsubrs
xor
stc
mov
test
xchg
push
add
stos
aam
rorb
inc
push
pop
bnd
mov
ljmp
scas
cmp
or
sarl
aaa
es
push
pushf
bound
int3
cli
mov
and
inc
lods
and
call
mov
or
mov
jno
mov
pop
hlt
leave
js
les
mov
lock
xor
and
enter
mov
mov
fiaddl
fidivrs
mov
cli
jno
dec
lock
lds
shll
mov
loope
insl
fcoms
daa
xchg
test
mov
sbb
and
lock
pop
sub
pop
bound
jnp
out
sbb
into
adc
xchg
xlat
mov
gs
pop
test
stos
xchg
insl
xlat
jne
fidivs
pop
daa
pop
push
jecxz
jp
inc
sbb
jg
fstpt
jmp
sbb
dec
inc
or
cmp
jne
jp
mov
jmp
jnp
dec
inc
imul
call
int3
lcall
push
std
test
call
or
mov
test
jnp
mov
dec
push
and
xchg
int
xor
and
ficompl
pop
lock
push
scas
pop
pusha
lods
subb
mov
addr16
and
push
push
dec
js
xorb
out
test
inc
pop
inc
inc
outsl
inc
andl
push
fists
je
push
test
icebp
mov
pushf
add
cmp
mov
mov
lahf
fdivl
into
jnp
fwait
out
daa
and
jbe
jle
jmp
aas
push
cmc
shll
out
inc
jg
inc
mov
mov
or
cmp
or
mov
insb
aam
scas
xchg
mov
cli
fcmovnu
aad
xor
scas
dec
lock
notl
pop
xlat
lock
in
lea
jecxz
jne
adc
imul
test
in
and
dec
loope
cmp
pop
sbb
call
adc
in
ja
add
jbe
cs
icebp
fdivrl
rorb
sbb
loopne
mov
lock
sbb
stc
scas
xor
outsb
dec
sub
lods
idiv
cltd
imul
in
cmc
xchg
imul
pop
pusha
mov
jge
jb
test
cmpsb
scas
pop
pushf
jecxz
or
pop
mov
testb
gs
or
std
cltd
xchg
pop
sbb
les
mov
les
xchg
pop
add
in
lea
sti
fdivrs
xor
mov
clc
call
outsb
sbb
pcmpeqd
lcall
push
cmpsl
jns
push
daa
rcll
mov
outsb
pusha
mov
adc
mov
push
jl
inc
call
sbb
iret
xchg
aam
jbe
cmp
mov
push
mov
fcompl
sbb
inc
imul
or
sbb
lock
enter
push
gs
cmp
rolb
and
lock
push
pop
push
mov
jl
xorb
inc
inc
ret
push
lods
xchg
xor
and
sub
sbb
sbb
rolb
clc
mov
inc
fbstp
mov
loopne
es
in
sub
push
clc
jl
sub
psubd
jnp
mov
psubusw
lea
mov
jno
mov
mov
mov
lret
js
mov
xchg
outsb
xor
jp
aam
mov
es
out
sahf
sub
loopne
out
ja
sbb
stos
pop
mov
cli
lods
lea
pusha
adc
adc
dec
dec
mov
repz
xchg
icebp
inc
sbb
xor
movsb
lahf
mov
mov
ret
out
xchg
insl
mov
jecxz
das
pop
mov
fldenv
clc
sub
dec
jcxz
lret
mov
add
movb
rclb
cmp
or
cmpl
and
pop
inc
add
mov
push
cmpsb
ret
xchg
xlat
aad
push
into
js
mov
xchg
cmp
mov
daa
add
pushf
or
aas
cmp
int3
popa
mov
divb
cmpl
mov
je
mov
scas
jmp
push
or
sub
stos
cmpsl
xchg
xor
inc
out
cli
into
lds
adc
push
imul
push
adc
xor
push
aad
push
mov
push
dec
xchg
dec
sbb
dec
pop
cmp
loope
fstl
cltd
jnp
cmpb
or
mov
push
icebp
xchg
mov
addb
pop
add
ret
hlt
push
push
int3
fimull
test
scas
pop
xchg
aam
xor
ljmp
or
pusha
add
mov
pop
in
lods
test
stos
push
push
xchg
stos
in
pop
addr16
xor
push
pop
push
push
mov
xor
and
repz
fwait
pop
loope
pusha
lods
fdivrs
cmpb
lea
mov
je
pop
mov
and
inc
pop
add
pusha
sub
cli
aad
nop
popa
inc
ret
imul
vpackuswb
movsb
inc
cld
sbb
roll
mov
lods
test
mov
fs
or
hlt
and
cmpb
jge
or
aam
xchg
pop
ret
inc
and
cmpsl
push
outsb
mov
fdivrs
cmp
inc
test
es
pop
inc
fucom
fcmovnbe
stc
push
enter
push
xchg
js
jge
inc
or
rorb
call
lcall
repnz
xor
mov
pop
mov
ss
push
dec
push
subl
sbb
mov
sub
in
data16
adc
ljmp
dec
sahf
shll
jl
shr
rclb
and
fimull
aad
cmpsb
mov
imul
lock
lock
cmp
les
rolb
add
push
in
push
scas
cltd
cmp
decl
rclb
jb
push
push
cli
adc
push
sub
enter
in
imul
lods
insb
fisttpll
shll
aas
daa
jp
je
scas
sbb
pop
dec
dec
idivb
jo
ss
int
or
outsl
inc
mov
push
lcall
xchg
cmp
std
xchg
aad
rolb
iret
lcall
dec
push
and
jmp
sbb
cmpl
rolb
inc
ja
filds
popl
movsb
decb
test
stos
scas
dec
insb
aaa
mov
popf
jge
fidivs
icebp
mov
jo
mov
cwtl
popf
xor
movsb
or
mov
push
loop
shll
popf
test
mov
hlt
mov
or
or
pop
sbb
inc
push
popf
loopne
pop
insb
add
int3
sbb
fiaddl
insb
sub
ds
push
inc
mov
cmp
std
ljmp
sbb
sbb
and
in
xchg
dec
cmp
das
jno
dec
ljmp
rcrl
out
test
test
mov
sbb
xchg
adc
fcmovbe
xchg
adc
inc
loopne
mov
out
stos
cmpsb
ret
push
cld
sbb
or
lock
dec
imul
loopne
jp
xor
subb
popf
xchg
inc
dec
pop
sbb
push
dec
jp
push
pop
jbe
cmpsl
aas
add
cmc
lds
adc
call
fldl
call
mov
or
aaa
les
imul
aad
inc
pusha
clc
jecxz
lock
pop
adc
dec
xor
mov
mov
sbb
fst
stos
inc
push
push
cmp
movb
das
mov
jmp
dec
in
ret
push
push
dec
shll
lock
xor
inc
ja
xchg
or
dec
add
rorl
rclb
outsl
nop
sub
sarb
adcb
fstl
dec
test
adc
mov
xchg
lds
fidivs
sarb
cmp
popf
dec
js
jge
cmp
and
inc
jg
cmp
dec
fimuls
vcvtpd2dqx
fiaddl
mov
pop
fwait
sarb
arpl
sahf
sub
adc
jecxz
scas
xchg
sahf
adc
xchg
jne
adc
xor
sub
sub
std
mov
lock
inc
jae
or
ljmp
stc
test
cld
add
push
in
mov
mov
pop
push
mov
loop
add
dec
enter
inc
push
push
cmova
imul
jge
mov
cmp
sahf
dec
adc
andl
fcom
jno
push
pop
loopne
movsb
cmp
in
push
or
fnstsw
sub
jmp
ror
push
dec
mov
popa
pop
dec
mov
adc
pop
lahf
mov
cmpsb
sbb
pop
fcmove
fistl
pushf
jmp
insb
and
inc
iret
mov
lock
jge
push
dec
int3
adc
xor
mov
stos
mov
push
pop
subl
test
fistpl
fdivrp
mov
inc
test
xchg
and
ret
mov
mov
cmpsl
clc
call
imul
movsl
push
mov
jge
jecxz
fidivrs
out
sbb
adc
les
mulb
xchg
ljmp
mov
lea
je
cltd
setge
imul
mov
pop
dec
mov
stos
mov
sbb
mov
out
pop
call
push
icebp
sub
pop
mov
insl
fcomps
add
jae
sbb
fdivrs
roll
mov
and
fwait
mov
lahf
or
or
adc
xchg
fsubl
jecxz
add
lock
sub
mov
xchg
fidivrs
es
ljmp
mov
scas
movsl
pushf
hlt
test
test
xchg
pop
and
scas
subb
cmovg
mov
pop
xor
xor
fdivrl
sub
dec
add
mov
ret
test
mov
sbb
cltd
xor
clc
xchg
cmc
popa
leave
inc
pop
int
sbb
scas
mov
insb
cmp
xlat
sub
xchg
sti
ret
ret
daa
pop
or
imul
sbb
sub
push
mov
adc
orl
xor
add
cmpxchg
xchg
dec
jns
les
std
ja
clc
xor
xor
xor
fiaddl
fldl
in
push
add
or
inc
xchg
int3
cmp
into
jge
jnp
clc
dec
arpl
jne
aas
add
sub
shll
sub
push
pop
pop
xchg
inc
adc
jbe
int3
or
mov
mov
xor
cmc
add
adc
jge
cmp
and
pushf
enter
push
xchg
out
mov
add
pop
or
inc
loopne
mov
jp
jae
mov
sbb
ljmp
push
in
subl
or
pop
out
imul
sbb
mov
sub
push
call
jb
push
mov
add
lds
and
mov
mov
inc
mov
test
addr16
xchg
scas
test
or
fwait
imul
ror
pop
dec
push
xor
jo
add
lea
stos
ss
xchg
jnp
add
stc
or
cmpsb
or
xorl
sub
shlb
push
cmpsl
push
or
push
lods
jnp
or
xor
arpl
add
outsb
fstpt
inc
iret
jnp
insl
jge,pt
loope
cmp
sbb
jmp
add
mov
mov
mov
ret
iret
outsl
dec
adc
mov
dec
adc
dec
inc
je
or
data16
loopne
aad
sbb
and
mov
ja
push
dec
add
ljmp
getsec
cli
decb
and
imul
jo
mov
xor
ficoml
insb
jo
out
js
mov
sbb
cmp
inc
cmp
add
xor
popf
xchg
xchg
mov
lds
icebp
insl
mov
jp
jb
dec
nop
lock
ljmp
arpl
sar
or
jmp
and
dec
aas
push
hlt
jne
push
add
mov
dec
or
jmp
cltd
rcr
stos
mov
rclb
repz
mov
jbe
jg
lea
daa
fstpl
shrd
xchg
and
jmp
jg
fsubs
sbb
arpl
cmp
aad
loope
insl
rol
inc
out
out
sbb
lret
lret
pop
mov
std
iret
pop
outsb
imul
addl
dec
add
cs
icebp
scas
and
mov
roll
mov
cmpsl
out
imul
mov
pop
fildll
nop
mov
out
push
adc
imul
jnp
push
roll
in
cs
lods
mov
jmp
push
push
into
es
leave
mov
lock
sbb
jmp
mov
test
rol
rolb
pop
adc
push
lock
aaa
xor
push
iret
sbb
adc
cmp
cmp
adc
or
xchg
jp
adc
dec
dec
ud2
popf
jmp
lods
pop
dec
add
mov
subb
cwtl
in
pop
inc
and
pop
pop
push
aam
sub
cmp
out
mov
aam
jmp
xchg
cmp
jae
jg
push
xlat
jbe
sub
in
lahf
and
icebp
cli
add
mov
sub
push
and
xor
scas
or
lods
xchg
insb
cli
sbbb
mov
jne
mov
jns
and
test
orl
jmp
mov
ds
int3
aam
or
dec
stc
daa
imul
ficoml
sub
xlat
cltd
int3
xchg
mov
dec
sbbb
push
jle
arpl
lret
jl
into
cli
xor
pop
xorb
data16
xchg
outsl
aam
sub
cwtl
insb
stos
mov
mov
outsb
push
rcrl
cmp
jo
js
sbb
pop
hlt
aaa
lret
sqrtps
ss
fstpt
dec
jb
sub
sub
movsb
in
xchg
insl
push
mov
pop
int
cli
test
out
mov
pop
lock
pushl
enter
lahf
mov
ss
pushf
cltd
push
aam
hlt
cli
bound
mov
out
and
xlat
inc
cmp
jecxz
pushf
add
adc
fisttpl
jae
imul
scas
add
sub
push
clc
cmp
mov
sahf
sbb
shll
sbb
dec
add
and
jmp
mov
lds
mov
add
cmp
or
fcmovne
adcb
mov
jge
scas
out
pop
je
enter
cmc
popf
and
push
xchg
mov
inc
aad
sbb
and
loope
mov
pushf
or
cli
ret
sub
dec
sbb
sbb
sarl
xchg
jbe
mul
cmp
mov
push
cmp
scas
outsb
pop
xor
add
push
js
scas
xor
mov
adc
sbb
or
sub
xchg
or
push
xor
mov
loop
dec
es
out
jle
pop
add
mov
pop
aas
mov
xlat
push
sbb
xorl
mov
arpl
pop
sub
pop
and
ret
pop
push
pop
cmp
lret
imull
sbb
sub
imul
bound
jno
mov
insl
fsubrl
jecxz
pop
pop
xchg
sar
inc
cmc
dec
add
pop
push
out
movd
in
sub
push
jnp
or
ud0
mov
add
add
add
push
jg
hlt
inc
inc
or
inc
jmp
inc
xor
sub
clc
or
test
inc
pop
pop
sahf
cwtl
xor
and
cmp
pop
xchg
dec
icebp
je
ja
or
mov
xchg
es
xor
icebp
push
je
cmp
out
mov
lahf
push
push
fdivl
lcall
mov
mov
mov
pop
mov
bndldx
popf
xor
pop
out
rol
ret
pop
sti
xor
push
pop
jae
and
cli
inc
push
push
sub
pop
mov
ja
sub
bsr
jp
pop
mov
pop
es
xchg
mov
sub
inc
push
test
pop
repnz
xlat
cmpsl
adc
xor
ja
xor
mov
sarl
je,pn
fcomps
dec
ljmp
jno
add
fstpl
cmp
jo
sub
aas
mov
test
lret
fcomps
js
mov
movsb
aad
inc
add
insl
lea
pop
mov
sbb
popf
andb
mov
jns
in
jns
mov
rolb
dec
call
add
mov
je
popf
pop
test
mov
test
fimuls
cmp
adc
and
mov
jg
aam
stc
mov
je
xchg
stos
sbbl
dec
fistl
std
fisttpl
inc
push
ja
add
cli
je
sub
add
pop
popf
pop
add
shrb
jg
mov
rol
fsubl
std
or
sub
push
stos
mov
mov
jno
aam
pop
aaa
std
ljmp
or
out
inc
ficoms
xor
scas
dec
inc
mov
shl
loop
dec
notl
and
mov
pop
xchg
or
rcl
jle
imull
and
add
movl
add
icebp
popf
mov
mov
xchg
push
pop
and
bound
mov
push
test
pop
pop
add
call
mov
push
mov
pop
test
add
fcmovnb
out
xor
int
subb
inc
lock
mov
movsl
inc
adc
add
lods
push
ficomps
xor
lods
dec
repnz
sbb
pop
int3
xor
fdivr
push
pop
mov
bound
or
inc
cmp
jp
mov
mov
sbb
fdivs
jb
pop
jmp
fcomip
imul
cwtl
inc
aaa
cmp
sub
mov
dec
out
inc
mov
popf
aam
test
pop
clc
roll
unpckhps
icebp
lds
adc
inc
stos
fdivrs
into
call
out
xor
pop
mov
jae
sarl
and
cmp
xor
js
addps
popa
subl
push
fs
subl
aas
shlb
push
repz
xchg
add
outsl
int
adc
addr16
addr16
lds
testl
bound
add
adc
repz
stos
inc
fs
mov
jae
jns
cmpsl
xchg
push
arpl
mov
and
fldz
mov
in
adc
stc
mov
cmp
jae
cmpsb
ds
adc
jae
push
sub
xchg
ret
sub
fst
nop
rorl
jle
push
pop
ds
sub
movsb
push
dec
push
cld
pop
daa
lds
xlat
pop
mov
lcall
hlt
jp
add
popa
adc
insb
fisttpll
subb
adc
fcmovne
loopne
sete
add
ss
cwtl
mov
mov
push
aam
adc
push
lock
les
jo
adc
into
out
fdivrp
dec
inc
cmc
sahf
jo
ds
pop
push
pop
adc
inc
jne
push
xor
push
xchg
in
cmpsb
js
stc
fcompl
rcrl
dec
jbe
xchg
adc
mov
roll
in
repnz
jge
mov
je
jl
add
lock
push
jp
inc
xlat
xor
cmp
inc
cmovns
cmp
or
inc
cmp
in
adc
hlt
dec
pop
mov
push
xorl
adc
sti
xlat
jns
inc
push
rorl
sahf
mov
psadbw
mov
mov
add
imul
outsl
sbb
adc
cmp
ret
sub
push
pop
adc
aam
cmpsb
jecxz
dec
inc
xchg
add
decb
loopne
loopne
loop
das
pop
test
push
jbe
std
dec
pop
xlat
add
xchg
pop
popf
ja
insb
pop
loop
cmp
push
gs
adc
insl
and
mov
std
je
in
mov
push
xor
cs
cwtl
fucomi
push
adc
add
dec
xlat
xor
cmp
shll
out
adc
xchg
es
outsb
out
add
sbb
xchg
xchg
test
shr
push
add
scas
or
cltd
fwait
in
cmp
clc
addl
pop
in
pop
mov
inc
repz
out
mov
cs
or
sub
outsl
jae
add
mov
jne
cmp
rorb
mov
out
inc
and
jno
xor
mov
pop
xchg
sbb
lahf
add
imul
enter
sub
outsl
xchg
test
test
je
sbb
adc
cli
xchg
es
lods
cmp
popf
iret
int3
mov
test
inc
testb
pop
sub
movsl
cld
in
add
pop
mov
push
cmc
shr
insb
or
sbb
lock
fwait
mov
out
xchg
icebp
push
ldmxcsr
rcr
xlat
sbb
int
fistpl
adc
ss
xor
ja
or
xorl
stos
jecxz
addr16
and
sbb
add
and
in
mov
cs
scas
dec
ret
mov
pop
mov
lea
push
rorl
cmp
lea
enter
xorb
hlt
int3
mov
sahf
add
call
out
shl
xchg
fistpl
or
ja
movsl
push
ret
sub
cmp
jne
add
pop
daa
push
stc
movsb
das
push
inc
sbb
fldcw
push
inc
push
lods
cmp
shll
sbb
inc
repz
cmp
popa
mov
sub
lods
adc
es
jbe
les
inc
push
ret
adc
mov
jg
push
icebp
gs
fcmovu
outsl
jmp
xchg
ret
xchg
cmp
jle
cmpl
push
jns
test
cmpsb
sbb
lods
xchg
xlat
sbbb
cld
xor
xor
pop
jg
xchg
mov
je
mov
stos
push
adc
sti
adc
enter
icebp
lret
push
jns
jne
sbb
pop
sti
into
add
cmp
popl
push
loop
mov
pop
mov
ja
and
loope
clc
test
jg
incb
cld
ljmp
inc
jo
add
xor
and
push
push
fistpl
cmp
add
cli
loopne
lea
and
cmp
dec
mov
jae
xor
call
push
in
out
push
es
xchg
cmp
out
fdivrs
imul
and
notl
clc
xor
adc
mov
jne
sub
xor
cli
pop
inc
inc
mov
orl
imul
push
jmp
sti
ficompl
arpl
mov
in
stos
mov
das
into
int
aam
aam
jnp
shl
push
adc
test
clc
jle
lea
and
sub
dec
jge
mov
int
out
and
fdivs
push
jl
xor
cmp
pop
inc
lea
mov
add
out
test
add
popf
dec
xor
sub
push
aaa
ljmp
cwtl
cli
mov
addl
dec
push
jmp
stos
je
sarb
hlt
shrb
movsl
dec
or
push
jb
ljmp
xchg
call
insb
clc
jmp
dec
xor
movsb
loop
pop
lods
dec
mov
xchg
xor
repz
popa
push
cmp
and
loopne
pop
fsts
jbe
in
out
push
ficomps
adc
mov
rolb
insb
cmp
test
popf
xchg
insl
jge
dec
inc
sbb
pop
das
xchg
pop
ret
add
xor
push
fidivrl
xor
cmp
fcomps
sbb
es
sub
roll
xlat
push
sub
mov
hlt
dec
lahf
add
sti
iret
fisttpl
mov
test
adc
out
fnstsw
adc
sbb
and
push
rcrl
dec
cmpsl
push
cld
sub
aam
xor
fdivs
cmp
sti
insb
inc
push
xchg
fsubr
dec
pop
xlat
xchg
mov
adc
insl
cld
push
es
jbe
mov
out
enter
in
sbb
sbb
inc
mov
ret
out
xchg
mov
add
dec
fdivr
xchg
mov
popa
push
pop
and
faddl
mov
jl
insl
mov
pusha
sub
adc
adc
xchg
and
lea
mov
xlat
adc
inc
cmp
jae
inc
and
or
lods
addr16
and
fwait
and
jno
ljmp
jmp
cli
sub
out
inc
ljmp
sbb
arpl
insl
sbb
or
lahf
enter
stc
mov
mov
and
mov
mov
popf
shlb
add
xchg
mov
mov
cmp
movsl
inc
mov
push
mov
jae
cmp
mov
imul
shll
std
xor
push
mov
cmpl
mov
sahf
adc
decl
je
iret
jno
mov
jae
jne
xlat
pop
jge
test
rcll
inc
jb
dec
mov
mov
loope
push
fistps
mov
push
add
mov
inc
and
test
add
push
cmp
fiaddl
clc
cmp
push
aas
popf
jnp
push
mov
shll
andl
or
aad
cmpb
call
cmp
mov
inc
push
adc
ret
mov
pop
in
jmp
jo
ljmp
jne
sbbb
pop
adc
push
jb
loopne
iret
lock
dec
cmc
testb
incb
and
jl
xor
loope
sbb
mov
insb
xchg
sbb
adc
call
sbb
dec
push
insb
fistpll
ret
push
and
mov
inc
repz
pop
jle
aad
pop
lds
popf
pop
faddp
in
jne
mov
or
mov
push
dec
lret
jno
jae
pop
add
imul
imul
mov
cld
cmc
mulb
test
mov
push
in
and
cmp
or
mov
inc
mov
scas
outsl
fwait
cmpsl
add
cmp
std
mov
es
sub
mov
sub
jbe
xchg
sti
std
stos
push
shrl
jl
insl
icebp
pop
das
std
icebp
mov
cmp
mov
loopne
add
cmpsl
or
pop
ret
xchg
adc
push
xchg
mov
inc
movsb
ret
mov
stos
cmp
pop
dec
gs
sub
cli
dec
cltd
inc
test
int3
repnz
push
in
push
push
das
hlt
sub
sub
and
xchg
fnsave
jmp
mov
dec
ljmp
mov
inc
bound
push
mov
sbb
rcll
xchg
cmp
adcb
and
cmp
mov
mov
xchg
sub
jns
push
jbe
popa
sub
js
mov
mov
mov
lea
xchg
mov
jecxz
and
shlb
jne
cmp
lock
mov
mov
pop
fdiv
or
inc
nop
cmpsb
jbe
test
sbb
cmp
lcall
in
mov
inc
dec
sub
pop
sti
fstpt
mov
mov
or
in
cmc
xlat
xchg
inc
push
inc
mov
loop
rclb
add
or
stos
fcompl
jg
call
push
loope
dec
pop
push
dec
mov
sub
cmp
pusha
add
push
mov
xlat
test
icebp
mov
cltd
cmp
shll
dec
xchg
pop
push
or
xor
xor
mov
dec
inc
scas
push
xlat
and
pop
xor
sub
dec
cmp
sbbb
cltd
cli
cmp
dec
fs
push
lret
int3
leave
mov
shr
sbb
sub
cmp
aaa
mov
mov
sub
lods
add
mov
xchg
mov
icebp
gs
mov
push
add
xor
mov
icebp
in
mov
push
cltd
jp
inc
add
out
cld
push
addl
outsb
arpl
inc
adc
jecxz
and
sub
ret
loope
aam
nop
ljmp
mov
rcl
icebp
dec
push
in
lds
sub
lahf
mov
decl
movsb
testb
inc
scas
scas
xchg
adc
mov
pushf
insb
jo
sbb
pop
mov
rol
aaa
xlat
popa
pop
or
mov
mov
push
adc
jo
pop
fidivrs
jbe
push
sub
fwait
pop
mov
jl
xor
pop
sub
faddl
xchg
test
jle
lock
or
cltd
xlat
inc
jne
dec
sbb
fcoms
fst
in
or
cmp
adc
popf
mov
mov
mov
loope
and
adc
inc
out
lea
fwait
cmpsb
repnz
arpl
mov
int
jmp
in
xchg
sbb
push
das
arpl
mov
jne
xor
adc
pushf
mov
pop
and
sbb
hlt
inc
lret
out
push
leave
lret
lods
mov
mov
insl
in
call
out
xchg
and
mov
dec
cltd
push
jbe
xchg
mov
sbb
out
xor
pop
lahf
push
xor
sub
xor
mov
test
inc
xor
pushf
sub
jnp
bound
aam
mov
inc
inc
push
stos
imul
stos
jp,pn
adc
rcr
ds
hlt
test
mov
insb
inc
mov
imul
push
jno
pop
xor
inc
out
pop
pop
cmp
rolb
and
mov
scas
popf
loopne
cmpsl
pand
pop
jle
in
jg
jecxz
jp
cmp
pop
cld
xchg
fmulp
addr16
test
mov
out
ljmp
aas
sahf
mulb
pop
push
mov
aas
cld
ljmp
ds
lods
lock
dec
clc
fimuls
mov
or
pop
int
mov
sbb
mov
jmp
dec
aad
pop
inc
addl
stos
loop
or
shl
test
fsubrs
lahf
mov
sar
daa
mov
jge
shr
mov
jno
adc
cwtl
mov
add
xchg
jmp
inc
cmp
cmp
and
shlb
and
clc
fstl
sbb
adc
roll
push
pop
pop
xchg
and
or
fldcw
inc
sbbb
xchg
int
mov
lods
xchg
fdivr
add
repnz
add
push
cmpsl
clc
inc
push
arpl
mov
lds
mov
lcall
std
orb
fsubp
data16
pop
popl
bswap
mov
mov
stos
dec
idivb
adc
mov
out
sub
jl
inc
mov
mov
jle,pn
leave
sahf
push
dec
das
push
mov
repnz
in
test
movsl
pushf
call
or
xchg
jecxz
mov
icebp
lahf
pop
mov
cmp
dec
mov
pop
mov
test
sysenter
cmp
sbb
or
jbe
into
hlt
cli
mov
sub
dec
inc
rorl
adc
pop
test
inc
mov
mov
cmp
mov
cmp
aas
fmull
rorb
or
xor
into
adc
pop
fadds
cvtdq2ps
shlb
pop
adc
pusha
outsl
loop
lea
popa
sub
mov
aam
mov
xor
icebp
mov
jne
ret
cmp
dec
sti
cmpsb
fdivl
ret
jmp
test
call
or
mov
pop
test
jae
outsl
mov
push
push
sbb
popf
in
sar
xchg
inc
enter
inc
outsl
js
mov
push
xchg
xchg
lock
add
mov
xchg
data16
loopne
enter
test
popa
adc
inc
fisttpll
xchg
sbb
insw
lods
aam
cmp
faddl
sbb
mov
sub
inc
push
pop
or
nop
push
mov
cmp
lock
pop
cmp
lds
call
xor
add
fldt
jne
add
fwait
jae
pop
out
scas
mov
mov
stos
in
pop
adc
sub
fldl
adc
jno
das
ljmp
ret
dec
out
xor
fadds
enter
mov
xor
cmpl
cmp
div
test
xor
jg
or
or
clc
push
loopne
les
pop
mov
adc
ds
das
inc
fisubrs
ds
lea
mov
notl
lahf
js
imul
mov
jo
cmp
push
pop
je
lock
xchg
mov
mov
sbb
call
outsl
pop
lret
sbb
sbb
out
aas
scas
loopne
mov
rolb
xor
fwait
mov
test
mov
sbb
cmc
test
mov
adc
dec
fnstsw
push
cs
je
pop
imulb
ret
or
out
shr
fadds
imul
aad
mov
je
test
sbb
lret
cmp
popf
jge
jecxz
insb
fucomi
lock
mov
test
push
iret
or
mov
das
cmp
sahf
jle
jge
ss
add
jge
mov
xchg
sbb
ljmp
jne
ret
sbb
cmpsl
test
push
mov
jbe
mov
mov
pushf
pop
fbstp
or
idiv
ja
cmpsb
es
rolb
jle
bound
call
pop
cwtl
pop
insl
punpcklbw
popa
das
loop
loope
loope
fs
adc
cmovp
mov
mov
or
fstpl
mov
push
or
adc
mov
dec
loopne
scas
cmp
mov
aas
jle
inc
dec
test
mov
xor
imul
pop
mov
cmp
jne
adc
cwtl
and
dec
pop
jl
mov
xchg
mov
and
add
idivb
push
dec
xor
es
push
rorl
movsb
stos
adc
call
lea
cld
sub
cmpsb
mov
rolb
repz
push
jnp
aad
ficomps
pop
sti
iret
std
adc
jmp
dec
daa
push
mov
push
mull
out
mov
mov
int
loope
out
pop
fcompl
dec
jmp
jno
icebp
popa
cmpb
push
cmpl
jnp
sbb
dec
xchg
mov
dec
dec
push
jnp
adc
mov
xorl
pop
jg
dec
jb
cmp
add
iret
popa
mov
cmc
and
cmc
cmp
mov
loop
lock
sub
xor
cmp
jl
leave
push
mov
data16
mov
es
sbb
loopne
mov
popf
aas
in
sub
shll
adc
fsubs
in
cmp
sbb
mov
in
jno,pn
outsl
iret
inc
in
mov
push
lea
jg
daa
xchg
wrmsr
ret
mov
cmpl
aad
sub
cmpsl
dec
hlt
inc
lods
stc
aam
sbb
xchg
sbb
mov
push
test
sub
adc
arpl
in
ds
mov
fidivl
mov
js
leave
mov
xor
sarl
fdivs
jns
xorb
lret
cwtd
lods
mov
jne
jbe
aas
std
or
xlat
cmc
mov
stc
push
adc
insl
push
jb
adc
ljmp
pop
add
out
sbb
fistpl
push
cmp
push
call
sahf
cmp
mov
or
test
pop
fs
push
push
lret
xchg
pop
jl
out
mov
xor
xchg
data16
sbb
sub
hlt
xor
jae
push
and
rcll
cmp
mov
push
sub
shr
pop
rorb
push
or
mov
ds
jecxz
push
vminss
mov
mov
push
clc
lods
xor
outsl
inc
imul
xor
scas
sub
scas
pop
jne
mov
frstor
insb
inc
or
xor
fstpt
mov
pop
or
pop
scas
mov
adc
pop
cld
mov
scas
xchg
sub
roll
dec
and
or
std
sti
mov
ficomps
and
in
loopne
in
and
movsb
inc
pop
dec
cld
jo
adc
sbb
jp
icebp
insb
pop
clc
jo
push
mov
cli
stc
xor
shrl
pop
or
inc
daa
jbe
scas
adc
es
sub
aas
clc
je
jnp
jmp
xor
dec
or
adc
cmpsb
std
inc
mov
in
clc
mov
bound
cmpsb
clc
mov
iret
into
mov
icebp
mov
cmpsb
out
pop
scas
jns
arpl
dec
pop
fdiv
sarl
push
std
mov
cld
jnp
mov
outsb
dec
repz
lods
inc
mov
lcall
xchg
jle
jge
fcoms
jl
push
sbb
or
nop
mov
sbb
and
out
xchg
mulb
test
dec
dec
mov
movsl
add
xor
popf
push
jmp
loopne
std
jno
int3
add
add
lahf
add
sahf
or
mov
int
inc
add
push
xor
aaa
pop
pop
mov
push
int
cmp
imul
xchg
jp
sub
mov
testl
cld
pop
clc
outsl
sbb
xor
test
pop
cwtl
cltd
into
inc
add
scas
xchg
xchg
mov
leave
push
mov
pusha
or
into
paddb
cmp
dec
leave
fwait
sbb
sub
mov
ljmp
leave
pop
mov
xor
mov
mov
rorl
fs
inc
mov
inc
xchg
xchg
ljmp
stos
fcmovb
sti
jmp
jg
adc
push
lret
out
in
xor
in
and
push
rclb
movsb
fs
inc
mov
pop
popf
pop
pop
push
mov
adc
mov
adc
mov
cmp
sarb
sbb
sub
pop
fcoms
out
dec
mov
adc
mov
mov
mov
cltd
push
mov
jge
lea
add
or
or
cmp
fsubr
das
mov
call
push
insl
shlb
cmp
clc
adc
shl
pop
and
enter
and
data16
test
pushf
outsb
scas
lods
movb
movsl
movsl
and
pop
fdiv
lds
jg
out
mov
mov
rep
mov
mov
jle
iret
jmp
push
sahf
sub
lods
push
mov
loope
mov
daa
movsl
js
mov
orb
mov
mov
fimull
insb
jo
mov
out
repnz
mov
pusha
popa
push
rcr
in
cltd
sbb
dec
test
mov
adc
xchg
mov
data16
out
int
insl
sbb
jp
stos
sahf
out
sbb
mov
data16
sbb
jge
and
cld
stos
jecxz
sub
repz
insb
cmpsb
imul
sti
xor
cmp
cmp
icebp
mov
daa
xchg
pushf
test
loop
outsb
in
rep
pop
pop
ja
adc
jle
inc
jae
ret
mov
pop
sbb
and
repnz
mov
cmpsl
adc
mov
ss
push
cmp
popa
xchg
nop
lahf
ds
sbb
out
lahf
outsb
arpl
jae
and
mov
icebp
jbe
add
mov
sub
sub
jl
jg
pop
lods
icebp
xchg
rorb
lahf
ja
lods
inc
adc
loopne
mov
pop
cli
mov
cs
arpl
cmpsl
imul
jne
mov
fnstsw
gs
lea
inc
pop
mov
jae
sbbb
adcb
pop
xor
aaa
xchg
rcl
push
lods
sub
ljmp
lea
daa
fistpl
je
jmp
mov
push
ds
sub
scas
add
je
fisttpl
jns
ret
pop
adc
cmp
add
xchg
push
stc
ret
outsb
sahf
push
and
outsb
imul
sbb
pop
fidivs
jb
push
js
jnp
or
xchg
jmp
xchg
out
es
daa
mov
inc
inc
js
push
jno
imul
pop
outsb
aaa
mov
jbe
jmp
mov
fnstsw
cwtl
or
loope
loope
jae
add
stos
popl
test
pop
lea
add
xchg
mov
int3
pop
adc
cmp
adc
xor
sbb
pop
mov
inc
shll
and
push
je
jle
or
stos
pushf
xchg
mov
fistps
pop
mov
lret
dec
pop
fildll
mov
stos
or
mov
imul
and
jae
jmp
testl
pop
add
add
mov
fdivrl
mov
jl
enter
cld
sub
mov
jecxz
ljmp
repz
push
xor
adc
inc
mov
xor
cmpsl
mov
xchg
test
shl
rcl
dec
mov
loopne
nop
adc
and
push
lcall
adc
addl
inc
xchg
adc
imulb
jno
insb
ficompl
gs
jp
fisttpl
pusha
dec
repz
xor
sub
jno
xchg
push
js
lret
sarb
pusha
or
xchg
mov
inc
call
fwait
mov
cmp
xchg
clc
lret
shll
sub
shlb
loopne
jmp
out
mov
scas
stos
scas
loope
dec
or
cmpb
add
jnp
jb
jg
pop
pop
cmp
loop
insb
ss
sub
test
outsb
pop
and
cmpsb
cmpl
loop
jno
jbe
pop
xchg
insb
das
imul
dec
xchg
add
outsb
and
mov
std
lahf
jp
loopne
inc
mov
jmp
mov
outsb
repz
inc
out
jmp
daa
adc
jp
dec
call
jo
cmpsb
cmpsl
push
and
iret
push
lcall
mov
mov
push
xlat
popa
pop
clc
mov
xor
push
mov
or
pop
dec
test
shll
push
sahf
push
pusha
ret
push
mov
call
sub
sbb
lret
das
push
lock
lock
std
in
pop
push
inc
or
and
out
lret
add
popa
sti
inc
fisubrs
cltd
int3
aam
cli
pop
and
and
dec
jne,pn
mov
mov
aas
das
pushf
add
inc
shlb
ljmp
cmc
mov
fistpl
jle
push
int3
mov
mov
sbb
inc
in
js
outsb
mov
mov
clc
shlb
xchg
popa
subl
sbb
pop
xlat
pop
ljmp
adc
or
fcmovb
mov
adc
test
sbb
adc
cld
and
mov
jns
inc
inc
mov
pop
int
pop
movsb
mov
outsl
add
dec
jb
das
jmp
das
js
rcr
ret
lret
inc
sarl
cmp
dec
lret
stc
sysret
mov
push
mov
sbb
cld
jecxz
cmpsl
sbbb
popf
sbb
clc
icebp
push
mov
push
insb
xchg
xchg
xor
xor
inc
nop
cwtl
sbb
mov
ss
cmp
pop
or
or
jmp
add
or
imul
dec
cmp
fdivrl
xchg
jle
jmp
daa
adc
mov
xor
fimull
cmpsb
hlt
jp
or
faddl
push
sbb
stc
adc
xlat
mov
sbb
pop
test
inc
icebp
mov
outsl
inc
jns
repz
push
outsl
rorb
xor
push
aaa
int3
mov
clc
ljmp
jbe
mov
pop
jne
mov
out
cli
xchg
jnp
pop
inc
or
sbb
push
xchg
jnp
popa
adc
sbb
aam
cmpb
dec
roll
dec
sub
xlat
xor
mov
dec
xchg
sarb
adc
arpl
jne
icebp
pop
daa
and
addl
cmpsl
ret
mov
aam
cmp
pushf
lock
cmp
jg
fmull
or
push
add
dec
xlat
aad
add
fildl
push
aam
add
cmp
aas
nop
outsb
imul
pushl
ljmp
jge
fnsave
fdivrp
jns
xor
or
sbb
mov
scas
out
movsb
fstps
rclb
add
sbb
dec
mov
test
push
mov
jne
in
hlt
or
shrl
outsb
out
push
xchg
dec
cld
in
push
push
out
int
pushf
push
int3
test
movsl
sbb
ret
xor
inc
mov
adc
loopne
sbb
scas
mov
orb
iret
sbb
test
sbb
cmp
xlat
xor
idivb
fdivrs
scas
sti
repz
add
push
pop
lds
adc
out
mov
bound
mov
mov
inc
fisttpll
and
cmc
std
dec
stos
ds
xlat
jl
and
les
pusha
xchg
push
xor
pusha
fs
push
and
incl
sbb
and
mov
jno
aas
loope
and
add
aam
stc
cmpsb
scas
jne
cmpl
xchg
cmp
ljmp
pop
sbb
push
push
sbb
xor
mov
inc
jnp
lods
sub
rclb
sub
inc
inc
push
jae
push
xchg
stos
divl
sti
imulb
insl
sub
imul
add
loope
mov
jmp
mov
rcrw
sbb
pusha
movsb
mov
xchg
cwtl
dec
push
es
aaa
cmp
sarb
js
test
push
out
mov
and
ja
pop
push
push
dec
sbb
and
lock
insl
jle
push
adc
fdivs
dec
inc
fdivl
imul
fsubrs
add
and
mov
push
jb
out
and
mov
out
mov
stos
imul
or
loopne
mov
and
aam
sub
in
in
jp
je
movsl
xchg
inc
push
jo
rolb
mov
push
inc
lahf
xchg
iret
jg
fisttpll
push
repz
lea
es
adc
cmp
clc
cwtl
cli
pop
in
sub
adc
cmpb
mov
repz
dec
repnz
mov
mov
ss
mov
sbbl
aas
cmc
insb
pop
mov
iret
addb
dec
les
scas
pop
rolb
not
in
lods
dec
dec
mov
icebp
int
xlat
lods
sub
and
cmc
cmc
pop
js
push
cmp
loope
andb
inc
sbb
pop
or
fmuls
cmp
add
xchg
lds
jp
cwtl
jns
lahf
mov
test
adc
mov
pushf
xor
cmpsl
xorl
fwait
test
out
mov
mov
push
add
or
shl
lock
push
popf
arpl
fisttpl
or
fwait
out
ret
fbld
mov
or
cmp
fcompl
and
adc
inc
sub
and
mov
sti
mov
cmp
inc
dec
enter
jbe
xlat
inc
inc
cmpb
pop
cmp
sub
lds
outsl
inc
icebp
adc
cmp
lock
das
in
mov
dec
js
dec
sbb
cltd
inc
or
push
in
test
in
cmpsb
or
enter
mov
stc
adc
je,pn
mov
pop
jae
jle
mov
xlat
dec
sbb
ret
dec
je
mov
pop
push
mul
add
pop
dec
imul
xchg
cli
orl
loope
movsl
pop
movsl
nop
add
push
call
loop
dec
hlt
mov
adc
push
icebp
or
aaa
shll
les
rol
jb
fcoml
add
enter
stos
mov
enter
sub
loope
loop
lods
fcmovnu
outsb
adc
jl
fwait
adc
mov
stos
out
push
pushf
das
xor
fndisi(8087
popa
xchg
enter
mov
pop
maxps
test
adc
cltd
test
imull
mov
loopne
ds
mov
dec
pop
js
je
aas
loop
into
mov
popf
jge
test
push
mov
dec
fdivs
mov
mov
sbb
pushf
jge
icebp
or
je
xchg
pop
gs
push
ret
int
fstp
jne
subl
mov
fisubrl
call
es
add
xchg
add
adc
lds
xchg
dec
xchg
mov
push
mov
jne
cmpsl
movsb
mov
jbe
push
sub
jg
shrb
loopne
or
and
inc
mov
mov
cld
xor
jl
std
dec
es
lret
jae
scas
shrd
sbb
outsl
push
or
sub
jne
xchg
cmp
nop
pusha
push
dec
xchg
pop
arpl
fcompl
scas
js
shll
lret
push
loopne
sbb
js
test
inc
loop
call
scas
aam
lea
pop
scas
popa
in
cmp
imul
push
pop
js
or
jp
push
mov
fsub
stos
es
push
ss
ss
into
jbe
mov
popa
insb
clc
push
xchg
sub
mov
rcr
adc
rclb
sub
xor
add
xor
push
clc
aas
stos
xchg
push
into
in
pop
push
shlb
cwtl
mov
xchg
dec
into
xchg
mov
popf
xchg
xchg
fisttpl
inc
je
repz
dec
lock
mov
adc
xchg
je
mov
jno
push
jb
cli
cmp
rorl
add
or
xchg
mov
stos
dec
pushf
inc
outsb
lock
push
fwait
push
push
outsl
movsb
scas
lods
jnp
mov
in
jecxz
lods
pop
movsb
sub
mov
ds
xorl
leave
dec
jl
push
test
cwtl
xchg
dec
push
aaa
xor
loop
and
xor
inc
xchg
sti
sbb
popf
rorl
push
jmp
push
and
out
imul
push
cmpsl
push
adc
inc
fdivrl
std
out
aad
adc
fdivs
cmpl
and
sbb
lock
mov
leave
cld
push
mul
ret
out
and
pop
lret
jnp
fucomi
xlat
addr16
mov
inc
sbb
mov
sub
mov
lcall
fwait
dec
mov
imul
pop
pop
push
cmpsb
fidivs
outsb
dec
mov
sahf
call
outsb
mov
mov
frstor
mov
jno
cmp
negb
mov
xor
cmc
aad
test
xchg
mov
mov
jp
jp
pusha
sub
ja
xchg
call
adc
mov
xchg
arpl
adcl
call
sub
dec
and
pop
xchg
inc
jbe
clc
shll
and
xchg
movsl
pop
adc
mov
mov
ror
jne
dec
sub
scas
cmp
sub
xchg
jb
push
add
pop
mov
dec
lods
lock
ljmp
adc
aas
mov
xor
mov
mov
mov
loop
dec
inc
jmp
mov
or
sbb
dec
sbb
and
pop
push
cmpsl
cmp
div
test
cmp
data16
sub
sbb
mov
push
int
add
adc
aas
xchg
xchg
in
and
push
dec
mov
cmp
add
mov
imul
je
int
mov
mov
push
stos
or
xchg
loope
push
mov
ret
xor
call
add
cmp
push
fiaddl
mov
leave
mov
pop
dec
rcrl
fsubl
adc
sbb
adc
inc
inc
sbb
lock
das
pushf
inc
dec
mov
mov
in
pop
sub
jecxz
xlat
hlt
sbb
jecxz
push
cmpsl
mov
popl
xor
xor
mov
popf
lret
fsub
xchg
repnz
imul
ja
cmp
jno
cmpsb
adc
push
xor
cmpsl
sbb
cmc
mov
mov
cltd
sbb
out
test
data16
pop
out
and
mov
iret
xor
js
sbb
xlat
sub
mov
add
aam
mov
popf
cltd
xchg
lret
jne
sahf
js
cwtl
jecxz
stos
iret
repz
loop
pop
jb
xchg
add
push
int
cmp
cli
mov
sub
mov
test
pop
cmp
inc
into
faddp
in
popf
pop
pop
sarl
mov
cltd
push
lea
mov
or
sbb
push
and
and
inc
cld
cmpsl
adc
or
pop
sbb
and
int
and
push
cltd
mov
jg
call
fldt
dec
roll
mov
outsb
jo
idiv
xor
push
mov
lcall
mov
jae
sbb
popf
adc
add
mov
pop
aad
dec
jnp
lar
loopne
pop
lcall
js
loope
lret
jne
and
int3
andb
cltd
push
setge
and
aam
scas
in
fstl
lcall
jge
int3
in
aam
add
out
mov
cmp
add
cmc
jne
push
loop
add
fildll
sahf
xor
test
add
pop
jl
adc
les
pop
push
shrl
pop
mov
sbb
push
daa
sbb
push
dec
adc
add
sub
add
lock
add
sub
mov
sahf
sbb
popf
push
mov
dec
aaa
and
mov
pop
leave
sahf
cmp
sbb
push
fdivrl
lods
xlat
shlb
mov
push
jne
std
or
jo
xor
push
jbe
stc
mov
add
stos
lock
loop
cmpsb
pop
add
push
movsb
cmp
in
fucomp
jns
jmp
mov
mov
adc
lds
jecxz
jne
fsubrl
jl
pop
xchg
inc
mov
test
into
out
jns
xchg
mov
fcoml
je
push
insl
lea
mov
rcrb
insb
fdivrl
gs
adc
js
mov
mov
in
jle
sti
sbb
out
xchg
imul
dec
xchg
sbb
push
inc
outsb
pushf
fldl
mov
fbld
inc
ret
dec
lea
iret
das
or
inc
nop
mov
sbb
push
test
or
sub
loope
jne
or
lods
cmpsl
push
adc
out
mov
pop
adc
cmp
adc
inc
jo
lcall
sbb
and
cmp
adc
in
pop
mov
mov
jns
arpl
sbb
sub
xor
cmpsl
sub
out
in
test
sbb
rcrl
int
dec
dec
mov
jne
sti
inc
sub
lret
cmpsl
stc
push
ss
sbb
jne
jp
mov
mov
outsl
out
adc
daa
jns
gs
mov
jecxz
scas
shlb
std
jmp
ret
cs
fs
add
cmp
jmp
inc
mov
negl
int3
inc
add
xlat
cmc
shlb
dec
shlb
pushf
jne
shll
inc
mov
bound
mov
mov
cmp
mov
or
push
incl
cwtl
scas
inc
cmp
jl,pn
jge
jnp
ret
dec
mov
add
lock
jmp
push
in
sbb
cmp
fstpt
popa
jo
mov
test
out
enter
xlat
cltd
mov
dec
mov
iret
cwtl
inc
cli
loopne
rolb
in
pop
imul
shr
stos
jle
ljmp
lock
je
dec
cld
push
int3
push
and
cmp
inc
xlat
inc
push
jge
mov
sub
ds
add
rorl
cmp
push
test
xor
cvtdq2ps
cmp
lock
out
jne
pop
in
dec
push
pop
add
cmp
push
test
pusha
sbb
or
ljmp
test
cld
inc
sbb
push
xor
test
shlb
loope
mov
adc
lcallw
xlat
jne
sbb
jae
out
ret
test
add
xchg
iret
add
loope
dec
sbb
ds
imul
lret
xchg
imul
push
mov
lea
or
mov
mov
jno,pt
mov
xor
xlat
xchg
stos
fnsave
pusha
rcrb
add
mov
jecxz
and
jne
ret
jecxz
adc
xor
xor
cmp
lock
shlb
fisubl
push
add
lret
mov
inc
add
adcl
mov
xchg
stos
inc
xchg
cmp
outsb
mov
xchg
xor
mov
popf
cmp
leave
jp
mov
mov
push
shlb
xchg
jle,pt
mov
les
jecxz
adc
cwtl
xor
stc
xor
and
push
xchg
out
in
andb
push
icebp
adc
or
pop
jae
cmp
jae
mov
stos
cmp
outsb
sbb
inc
sahf
or
pop
outsb
cmp
ja
fucomi
mov
xor
rcrb
pop
adc
ret
mov
jg
rclb
loope
ds
popa
bound
inc
arpl
lea
fsubl
cmpsb
iret
xchg
mov
fisttpl
xor
in
mov
std
outsb
and
adc
cmp
mov
inc
stc
rclb
dec
add
into
insb
shll
dec
aam
jecxz
clc
outsb
push
mov
jbe
mov
loopne
dec
inc
dec
push
lea
icebp
in
dec
stos
or
sbb
push
leave
daa
mov
mov
ret
add
mov
fsubr
aas
in
mov
ficompl
inc
div
out
stos
jl
mov
into
push
iret
dec
fld
in
aam
sbb
push
jbe
test
mov
lods
dec
sbb
arpl
clc
mov
mov
mov
cmp
sbb
mov
cmp
push
fisubs
ljmp
pop
mov
push
jb
xchg
jge
pop
je
ror
push
sub
dec
lcall
rclb
insl
pop
push
lods
sub
inc
jno
aam
clc
lds
aas
pop
bound
cmp
jne
push
ds
jl
fildl
aas
mov
mov
dec
mov
cmp
insl
fwait
mov
mov
and
cmp
stc
js
jb
or
lahf
and
mov
push
cmpsl
movsb
ss
lock
std
mov
ret
mov
enter
insl
fndisi(8087
jnp
lahf
adc
test
pop
pop
dec
test
test
call
sbb
insb
push
ljmp
mov
dec
rolb
sub
mov
mov
mov
add
mov
push
imul
std
xor
in
inc
mov
xor
or
jecxz
xchg
and
and
fldl
xchg
add
mov
push
mov
cmp
in
adc
xor
jae
sub
sahf
dec
test
cmp
xor
ret
mov
std
add
adc
adc
cmp
mov
cltd
dec
shll
sbb
shlb
push
lcall
cmp
cltd
dec
maskmovq
stc
dec
xchg
xor
mov
jno
mov
inc
imull
dec
mov
mov
xchg
mov
push
mov
xlat
jbe
imul
test
mov
add
sbb
ret
mov
adc
xchg
fldenv
pop
xorl
jne
cmp
pushf
jge
sbb
mov
pop
clc
sbbb
nop
pop
mov
inc
popa
inc
orb
and
pop
push
jo
ds
fwait
add
orl
jecxz
insl
out
sbb
sub
lahf
add
subl
sub
out
mov
stos
sbb
data16
and
ficoml
sbb
xchg
inc
mov
cmp
aaa
pushf
push
add
jl
bound
inc
pop
pop
outsb
cmp
mov
repnz
mov
xor
pop
dec
pop
pop
xchg
rol
ja
sub
push
lods
push
add
add
push
test
je
mov
add
icebp
inc
rorl
cmc
daa
fwait
dec
frstor
adcb
lret
cmp
ja
shrb
mov
jb
push
xchg
ss
sub
test
xchg
cs
or
jmp
add
xchg
xchg
cs
mov
xchg
loope
xor
fnsave
pop
sti
mov
mov
out
cmp
cmpsl
sub
xchg
mov
loop
mov
mov
lret
scas
push
in
cmc
mov
xchg
test
xor
in
fsubr
adc
inc
aad
or
cmp
push
cmp
data16
jnp
cmpsb
sbb
and
cmp
les
add
js
pop
xor
xchg
daa
mov
rolb
cmp
adc
negl
inc
les
mov
faddp
jo
cltd
icebp
mov
jmp
add
mov
push
test
pop
mul
in
lods
push
inc
push
test
sbb
aam
lods
lock
lock
and
mov
fcompl
pop
or
fstpl
cmc
push
ljmp
push
cld
mov
sub
jmp
in
jbe
xchg
rcl
mov
mov
outsb
loop
sti
mov
stos
lock
repz
mov
sub
out
sbb
mov
jp
push
cmc
jge
add
cwtl
int3
ficoms
rolb
and
out
adc
stos
popf
cmp
addr16
push
inc
mov
test
dec
call
test
gs
or
imul
mov
xchg
int
lock
movsb
jnp
scas
dec
xor
fst
cltd
jo
scas
lods
mov
mov
enter
test
mov
jne
cli
loop
or
test
cmpsl
xchg
xor
dec
push
cmp
dec
adc
out
mulb
std
xor
or
std
cmp
jle
push
adc
shll
cwtl
stc
pop
cld
ljmp
push
inc
sbb
pop
shlb
call
xchg
xor
push
push
and
dec
dec
dec
mov
inc
insb
dec
push
cld
mov
mov
xchg
in
mov
js
sub
gs
adcb
in
or
dec
inc
adcb
es
loopne
cmp
lret
dec
xchg
dec
iret
js
je
shlb
js
stc
mov
fiadds
cmp
cmp
pop
sub
push
adc
xchg
xchg
sti
push
jo
pop
adc
xchg
lock
test
mov
dec
mov
loopne
inc
mov
pop
cltd
xchg
push
inc
mov
mov
fldenv
push
mov
aad
hlt
mov
rcrl
insw
loop
mov
mov
pop
pop
inc
mov
fidivrl
jbe
push
mov
cmpsl
jl
push
adc
sub
cmp
sub
sbb
mov
push
push
mov
idivl
or
push
pop
sbb
mov
cld
loop
pop
rolb
push
xchg
mov
into
pop
sub
mov
adc
rorl
inc
outsl
push
xor
es
mull
jge
int
or
lods
adc
dec
test
mov
cmp
mov
mov
rorb
dec
and
add
mov
pop
push
or
adc
in
arpl
mov
push
shr
inc
lds
ja
lret
fcmovne
adc
pop
pop
xlat
pop
push
scas
jo
stos
cwtl
cmp
or
test
sbb
xchg
call
repz
cmp
pop
aas
jo
push
outsb
dec
cmp
fildll
ljmp
inc
int3
hlt
xchg
in
and
sbb
fldl
xchg
insb
imulb
adc
imull
jns
divl
loope
shr
jb
and
dec
in
imul
scas
adc
sti
cs
ljmp
test
mov
push
mov
movsl
je
push
stos
pop
mov
lea
lds
jnp
enter
cmp
pop
in
cli
js
mov
repnz
cmp
sbb
cmp
faddl
push
sbb
pop
push
test
sub
mov
sti
test
sarb
pop
fmuls
push
or
mov
mov
push
or
in
push
dec
jnp
pminub
push
nopl
jne
jle
sub
mov
pop
fbstp
sub
pop
mov
cmp
out
mov
insl
stos
mov
ljmp
adc
mov
cmp
push
lret
syscall
push
aaa
mov
and
pop
add
shrl
out
dec
sar
out
inc
sub
xor
inc
mov
ds
mov
inc
jge
aas
mov
insb
movl
movsl
or
jbe
movsb
push
out
mov
nop
in
shrl
cmpsl
jno
fucomp
arpl
addl
pop
push
sbb
clc
enter
mov
sti
adc
fisttpll
add
push
xchg
adc
cmpb
push
mov
shl
pop
or
shll
movsb
and
adc
ja
rclb
mov
add
cld
push
inc
inc
shlb
xor
pop
aas
js
sbb
dec
sub
mov
ljmp
or
xor
in
add
into
mov
xchg
pop
xchg
inc
imul
outsl
jae
insb
mov
lods
es
and
mov
in
and
xor
push
xor
mov
test
pop
test
adc
sub
mov
mov
xchg
mov
mov
daa
push
xor
outsl
and
mov
movsl
pop
inc
jmp
imul
pop
sbb
mov
add
jle
add
lods
test
mov
sub
mov
dec
cmp
cmovno
out
popf
jno
add
fisttpl
outsb
loop
xchg
nop
int
and
btsl
call
dec
pop
ffreep
nop
or
daa
addb
pop
movsl
outsb
jnp
test
mov
jmp
ss
push
push
inc
xor
push
stos
pusha
ds
fidivrs
ret
push
or
enter
andb
pop
lods
jecxz
test
and
inc
push
arpl
pop
imul
dec
loop
jne
imul
subl
mov
je
jne
sub
cmpsl
or
pop
je,pt
scas
lds
lea
jmp
inc
sahf
add
adc
fisttps
cmp
das
fucomp
sbb
inc
fadds
and
mulb
cli
pop
or
adc
js
insl
cmp
pop
dec
add
cmp
fidivs
xor
mov
es
adc
or
sub
cmp
push
xor
mov
cld
outsl
mov
popa
rcr
mov
test
inc
inc
dec
popf
cli
scas
sbb
or
dec
lahf
xchg
mov
or
xor
mov
xchg
pop
push
test
pop
cmp
icebp
pop
push
pop
in
or
bndldx
jp
inc
inc
fwait
push
jo
add
and
xchg
jbe
in
xchg
or
jnp
in
pop
rcl
jge
fsubrs
pop
mov
mov
out
fsts
sub
aam
scas
popf
test
sbbl
rcrb
xlat
into
rcr
push
jp
mov
xchg
popl
dec
loope
cmp
or
mov
test
addb
sbb
nop
pop
jo
lods
std
pop
push
ds
ss
insb
push
pop
pusha
push
gs
cltd
and
sub
inc
cld
outsl
add
push
push
jge
ficompl
sbb
mov
idiv
iret
addb
push
fwait
mov
cmp
mov
push
cmpsl
add
lock
push
stc
sbb
mov
movsl
fld1
aad
fstp
lock
inc
cmpb
hlt
push
xor
mov
test
and
cmp
jle
repz
cwtl
mov
popa
imul
mov
push
pushf
jp
cmp
dec
lcall
aaa
cmpsl
or
adc
ss
push
push
fildll
into
in
mov
les
dec
and
dec
sarb
imul
mov
pop
push
shll
inc
rcpps
lcall
cmp
daa
dec
rclb
mov
and
hlt
add
pop
loop
mov
jp
mov
cmp
xchg
mov
nop
lods
icebp
mov
or
call
push
lods
or
mov
sub
call
lock
pop
and
pop
xchg
into
mov
pop
adc
xlat
jmp
cld
aad
es
or
mov
insl
inc
mov
mov
adc
ret
cli
xchg
imul
add
insl
and
je
pop
insb
repnz
fmuls
mov
out
sbbb
mov
sarl
xchg
jl
push
ja
popa
cmpsb
idivl
fidivl
outsl
insl
fidivs
aas
push
mov
inc
sub
and
addr16
push
and
call
sub
push
bound
pop
rcrl
inc
ss
pop
outsl
imul
mov
sbb
pop
mov
mov
mov
sbb
sahf
xchg
xorb
scas
sti
hlt
test
sub
pop
mov
mov
push
lds
aam
pop
mov
push
mov
orb
addl
sub
fstpt
inc
addr16
cli
call
lods
pop
push
mov
dec
push
or
inc
insl
xchg
mov
pushf
or
adc
mov
sahf
push
dec
push
and
jge
pop
adc
mov
pop
push
in
mov
cmc
out
pop
cmp
or
pop
inc
outsb
add
iret
das
mov
sbb
movsl
mov
inc
dec
loopne
jmp
test
pusha
and
mov
mov
push
add
lahf
mov
ja
pop
das
push
cmp
add
fmull
cmp
sub
mov
or
pop
mov
popf
push
hlt
mov
sbb
mov
xchg
addr16
cmp
sub
bound
sbb
push
pop
sbb
lods
mov
dec
je
inc
inc
or
push
out
pop
xor
inc
cmp
add
stos
jns
leave
mov
push
inc
jae
jno
stc
mov
test
lods
and
je
xchg
outsb
aas
inc
mov
les
push
int
lret
inc
inc
inc
mov
sarl
ret
mov
inc
push
fnsave
in
or
lret
mov
mov
int3
fbld
std
inc
ja
fcomps
add
xor
add
js,pt
dec
insl
out
cmp
insb
daa
adc
push
jae
cmp
cs
insb
mov
pusha
adc
fimull
inc
ret
push
pop
leave
push
je
mov
jle
pop
jg
mov
xchg
jle
and
push
frstor
movd
lods
push
adc
and
in
ds
jl
mov
stos
push
mov
loope
dec
add
sbb
xchg
lods
inc
mov
sbb
push
jmp
arpl
jb
lock
mov
out
inc
in
aas
xchg
push
les
push
adc
int3
mov
test
cwtl
cwtl
and
je
ffree
xor
out
fs
popa
jg
jp
cmp
jge
sbb
sbb
sbb
and
push
jg
loop
inc
xlat
and
add
movsl
xchg
pop
and
js
orl
mov
xor
push
pop
enter
or
and
shll
fidivrl
jge
jne
adc
cs
lea
lds
jne
dec
inc
imul
loop
pop
out
enter
insb
and
movsb
aaa
adc
xor
lock
inc
push
data16
adc
inc
xlat
in
pusha
loope
inc
fcmovne
orb
xor
sub
jbe,pt
dec
ret
mov
fnstsw
cmc
fcoml
mov
push
inc
dec
ss
fwait
push
test
js
arpl
jmp
xlat
in
lods
inc
xchg
sub
add
ret
test
lock
icebp
cmc
mov
fisubl
popa
sbb
stos
adc
movsbl
sbb
jne
mov
or
ret
cmp
imul
sub
idivl
stc
mov
fsubrl
out
andl
push
fisttpl
inc
add
sbb
adc
mov
scas
lea
cmp
inc
mov
inc
sti
mov
call
mov
mov
clc
jae
mov
test
adc
cmp
jle
fidivrl
incw
scas
in
xlat
ficoml
in
fisubrs
imul
and
mov
sub
lods
ja
mov
jecxz
jb
xchg
push
inc
cli
push
pop
btc
jbe
add
jle
or
mulb
jnp
test
cli
mov
icebp
out
mov
popa
pop
pop
insb
fnstsw
sub
dec
jmp
xor
push
push
bnd
jge
jno
ret
mov
cmp
mov
std
fadds
mov
mov
stos
pop
sbb
shrb
lret
mov
rclb
mov
adc
dec
or
leave
ficomps
cld
sti
jle
push
js
inc
nop
pop
cmp
mov
lock
sti
push
or
ljmp
sbb
mov
mov
leave
push
xchg
cmp
das
divl
inc
pop
lods
add
sti
xchg
test
in
sub
sahf
test
fisubl
cmp
inc
imul
rclb
fwait
outsl
and
jg
adc
add
or
jmp
aam
sbb
cli
dec
and
dec
test
orl
push
dec
cld
sbb
mov
jl
mov
or
xor
xor
dec
enter
mov
jp
push
dec
inc
addl
imul
cmp
xor
clc
icebp
es
in
mov
push
les
mov
in
aas
fidivrl
mov
push
dec
jb
lock
jmp
push
daa
push
aad
lahf
clc
mov
and
cli
mov
imul
ss
mov
xchg
push
lcall
test
imul
xchg
addb
fisubrl
ds
bnd
mov
jo
lcall
aas
cmc
or
fdivrs
inc
inc
xlat
icebp
cmpsl
loop
mov
mov
addr16
pop
in
ss
icebp
push
pusha
sbb
mov
adc
out
ss
add
add
adc
mov
pop
sub
cmpsb
pop
mov
inc
inc
fucomip
fcmovnb
out
mov
in
pop
ss
clc
cli
loopne
mov
outsl
shl
sbb
inc
xlat
shlb
icebp
addl
adc
sub
xor
cmc
fisubs
jge
cld
shlb
pop
insl
jg
std
adc
or
mov
lea
mov
rcrl
lea
jns
aam
lcall
xchg
out
stos
adc
or
sub
xchg
inc
pop
jp
inc
out
adc
scas
scas
jg
sub
in
add
or
cmpsl
in
pop
cmc
test
cmpsl
push
sbb
ret
negb
mov
aaa
gs
ljmp
cltd
jne
push
add
pop
fwait
mov
fiadds
aam
or
das
push
inc
jnp
icebp
divb
jne
rorb
cmp
lea
cltd
mov
xor
pop
push
ss
and
movsb
and
iret
adc
cmp
mov
mov
adc
in
mov
and
dec
dec
push
das
push
push
scas
es
mov
scas
outsb
nop
dec
push
pop
lret
rorl
mov
adc
jle
sti
sbbl
xor
ret
jg
push
js
addl
loop
out
cmpsl
lcall
pop
into
jo
addl
pop
sbb
mov
es
mov
leave
lcall
rorb
inc
je
push
dec
pop
cmp
ljmp
aam
fisttpl
and
test
popa
sub
adc
prefetch
mov
mov
pop
pop
jbe
fbstp
mov
inc
jnp
sub
hlt
rcr
idivb
xor
jnp
out
push
jle
cmpsl
clc
or
xor
xor
outsl
push
out
imul
stos
mov
test
pop
mov
arpl
test
pushf
iret
rolb
push
xlat
ror
je
repz
outsb
mov
out
dec
into
mov
cmpsl
ljmp
mov
call
cli
aas
in
add
pop
sub
out
leave
insb
adc
aam
mov
push
jae
xor
sbb
dec
inc
out
xor
in
rcrl
arpl
shlb
pop
xor
mov
cmp
je,pt
xchg
xchg
pop
jbe
sbb
insl
out
fld
xor
test
sbb
sar
idivb
cmp
stos
jnp
andl
movsl
sub
fcmovbe
shl
andb
mov
je
cmc
call
pop
cmpsb
or
mov
rcrl
jo
pop
cs
aaa
mov
or
popl
rcrl
dec
add
push
jne
lea
mov
lret
outsl
imul
aaa
je
cmp
pop
fstpl
movsb
mov
test
jge
mov
push
and
aad
mov
xor
lds
mov
xor
dec
pushf
jmp
inc
and
js
cmpl
lods
mov
or
mov
insb
outsl
jp
test
hlt
mov
add
or
mov
cmpsb
sarl
push
lcall
add
cmp
jno,pt
fwait
sbb
test
mov
test
js
in
jnp
mov
imul
hlt
daa
jmp
xor
add
mov
je
lods
jnp
jle
lret
aad
sub
mov
mov
add
cmp
ret
mov
aam
add
gs
movsb
fdivs
ret
aaa
fstpl
aaa
xorl
fcmovnu
xchg
in
or
stos
push
loopne
mov
add
pusha
ja
xor
and
xor
mov
ret
and
jle
ret
push
xor
jp
xor
fisttpll
push
ljmp
mov
add
mov
add
adc
in
or
push
ljmp
gs
insb
mov
ss
in
imul
rolb
fnsave
stc
ss
inc
xlat
add
jmp
pop
nop/reserved
ret
ret
add
sub
cmc
ljmp
fs
cmpsl
mov
xor
xor
pop
hlt
sub
lea
jmp
xor
std
in
ds
lret
in
arpl
movsl
test
inc
cmc
imul
shll
jg
popa
jnp
inc
pop
pop
adc
js
test
xor
cs
mov
sbb
or
insb
loop
outsb
mov
dec
mov
xchg
inc
xor
ds
hlt
shrl
or
out
test
insb
sbb
mov
lock
test
es
cmc
inc
pushf
add
xor
ds
xchg
cmpsb
lock
mov
inc
movsb
test
imul
leave
shr
add
mov
xchg
imul
pop
mov
adc
pop
scas
inc
out
push
outsb
icebp
fsubrp
xchg
das
sbb
mov
push
xchg
mov
xchg
mov
je
mov
or
jnp
jp
dec
jne
push
push
and
js
jmp
insl
cwtl
pop
push
loop
dec
leave
and
inc
xchg
mov
test
jnp
sti
shrl
push
std
into
lods
mov
xor
pop
pop
test
jmp
push
div
sbb
hlt
push
xchg
xchg
bound
mov
lods
adc
mov
jp
inc
and
jl
gs
jno
lcall
scas
mov
sbb
mulb
mov
mov
dec
pop
sbb
xchg
icebp
pop
inc
loope
test
pop
and
pop
inc
test
loope
aad
test
push
in
inc
scas
mov
adc
test
dec
lret
push
rclb
cld
xchg
cmp
push
pop
loop
aaa
clc
cmpsl
push
in
push
mov
scas
sbb
not
ljmp
popa
sbb
jp
ret
lcall
negb
jecxz
xor
lcall
jae
cmp
fwait
dec
cmpsl
mov
and
mov
jb
movsb
sbb
add
jle
data16
ffree
daa
push
stos
xor
inc
sub
jbe
ss
add
mov
mov
add
rcll
fwait
jbe
sti
ret
andb
fnop
mov
ret
adc
add
cmp
fsubrp
scas
pop
clc
sub
push
lret
popf
scas
mov
rorl
aam
mov
rolb
lds
cli
les
cmc
aas
fs
xchg
ror
out
out
rorl
fnstcw
pop
adc
add
mov
inc
push
stc
mov
lret
loop
cmp
inc
xchg
les
lods
dec
mov
or
pop
or
dec
shl
push
ret
mov
or
cmpsl
lds
adc
mov
or
inc
mov
repnz
jbe
add
mov
sar
in
sbb
div
cmc
dec
sub
sbbl
or
stos
cmp
popl
loope
push
std
mov
ret
xchg
inc
lcall
addb
dec
inc
das
syscall
hlt
mov
js
mov
adc
lods
mov
jae
mov
hlt
mov
rcrl
movsl
mov
ss
movsl
jp
dec
push
sub
out
in
inc
dec
aaa
sub
xchg
enter
shll
orl
and
scas
mov
sub
outsb
sbb
mov
inc
loop
pop
mov
jno
add
mov
or
push
xor
push
add
lcall
mov
mov
es
xorb
sbb
adc
repnz
dec
inc
xchg
popf
icebp
std
mov
mov
add
imul
mov
mov
cmpb
xor
push
dec
xlat
mov
js
push
popl
or
jecxz
addr16
lcall
out
lret
push
pop
hlt
shlb
lock
dec
stos
imul
add
cmp
mov
mov
sub
mov
xchg
cmp
dec
xor
dec
nop
jnp
out
cmpsb
loope
popa
out
fstpt
fucomi
out
push
mov
daa
int
or
neg
cmpsl
xor
inc
icebp
stos
stos
sti
lock
addl
xor
loop
jp
push
add
or
pop
pop
mov
fcmovne
sub
dec
insb
clc
clc
add
ret
sub
icebp
test
cmc
pop
dec
ss
fstps
addr16
out
inc
fwait
mov
jle
add
pop
lcall
or
test
outsb
push
into
andl
stc
js
out
mov
imul
dec
lea
cmpsl
and
mov
clc
js
lods
scas
test
imul
jns
mov
mov
out
movl
scas
jmp
stos
pop
inc
mov
lock
jge
hlt
pop
fwait
lods
ret
icebp
jnp
in
and
jo
sub
mov
stc
mov
sti
inc
andl
paddsb
roll
iret
das
shrb
pusha
jo
xchg
pop
cwtl
jle
movq
sub
xchg
mov
out
mov
mov
lds
jmp
mov
arpl
ljmp
xchg
pop
pop
jne
push
aad
aas
jp
stc
stos
iret
imulb
jns
fidivrl
inc
ret
pop
push
sbb
mull
mov
loopne
stc
arpl
rorl
or
push
sub
mov
fcmovnbe
movsl
stc
les
cmp
inc
pop
or
mov
sbb
pusha
fnstcw
lods
sbb
sti
xor
rcr
adc
or
xor
lret
push
push
jge
cmp
adc
rcrl
xor
pop
add
fs
shrb
inc
push
lcall
xchg
sbb
xchg
push
jge
pop
ficomps
xchg
and
inc
orl
jmp
inc
aaa
xlat
out
out
in
fwait
adc
repnz
inc
add
mov
push
pop
lahf
mov
sub
arpl
dec
or
adc
shll
fwait
into
xchg
sub
insb
adc
call
jno
std
mov
stos
or
mov
scas
and
fisttpl
sahf
add
sbb
out
data16
test
je
into
add
sbb
les
repz
test
xchg
jp
test
scas
rol
cmc
les
mov
push
push
cmp
jp
push
jns
sahf
mov
loop
adc
adc
add
mov
push
insb
mov
push
popl
lret
xchg
cmc
sub
mov
js
outsb
cmpb
out
mov
inc
aam
adc
cltd
sbb
push
inc
jge
inc
test
push
arpl
and
rolb
scas
pusha
add
mov
or
rcll
mov
mov
jne
add
push
xor
mov
mov
cli
fs
inc
pop
pop
or
jge
jno
mov
mov
in
xor
loop
fldt
scas
and
mov
or
loope
add
fs
add
jp
stos
je
dec
je
dec
adc
rorl
mov
fldt
pop
mov
inc
movsb
cs
push
cmp
xor
sub
cmp
add
jle
aam
shll
cmp
pop
jp
dec
loope
sti
hlt
subb
insb
fwait
dec
popf
imul
jnp
pusha
adcb
cmc
orl
xchg
xor
pop
xor
add
inc
cltd
adc
sarl
push
lods
sti
cmpsb
stos
pushf
sub
bound
sahf
mov
xor
pop
inc
mov
mov
lock
clc
mov
cmpsb
dec
fdivrl
insb
fimull
jb
lahf
push
lds
pop
in
jmp
lods
xchg
push
mov
mov
add
fcompl
movb
xchg
mov
xchg
fildl
daa
les
fsubrp
and
push
clc
aam
adcl
push
shlb
sub
push
cmc
jbe
mov
dec
dec
fisttpll
xor
cmp
inc
mov
in
and
mov
cmp
xchg
daa
mov
push
shl
add
mov
push
stos
roll
daa
adcb
mov
sarb
xchg
xchg
jae
fistps
hlt
subb
insl
jge
aam
enter
mov
jnp
pcmpeqw
aaa
test
scas
sub
inc
cld
pop
push
cmp
pusha
mov
pushf
cmpsb
mov
mov
mov
sbb
xlat
mov
icebp
push
rorl
pop
aaa
push
cmp
imul
jmp
inc
xchg
stc
test
add
sahf
rcrl
das
push
mov
sub
je
mov
orb
push
mov
mov
add
adc
pop
lahf
lcall
jb
data16
add
aas
es
sub
mov
ret
sbb
or
pusha
mov
or
notl
inc
mov
push
je
pop
lds
pop
xor
mov
fcomi
insb
fistpl
jecxz
test
fwait
inc
int
xchg
test
lods
jne
xor
cmp
mov
cmp
xorb
push
in
mov
lret
test
jmp
mov
add
inc
mov
xor
iret
cmpb
mov
or
pop
add
shl
mov
and
lds
je
hlt
scas
ljmp
jge
add
hlt
push
add
aad
and
outsl
pop
in
pop
bound
fisubrs
pop
fidivs
daa
add
outsb
lods
pop
cmc
or
xor
sarl
js
icebp
ja
mov
jmp
ljmp
inc
sub
xorl
push
and
mov
addr16
cmp
daa
daa
scas
or
mov
in
shlb
vmwrite
pusha
adc
stc
aas
push
jl
in
repnz
or
lds
mov
sub
popa
ja
or
mov
ret
lock
fdivl
addr16
pop
adc
dec
cmc
sub
sahf
push
roll
enter
push
mov
xchg
sbb
push
mov
pop
aam
xchg
mov
shlb
xor
inc
xor
out
jle
loope
cmc
dec
repnz
arpl
jg
mov
fisttps
mov
inc
scas
sub
cltd
cmp
lcall
sbb
mov
xchg
mov
jmp
icebp
adc
dec
fisttps
mov
jbe
xchg
sub
das
push
sbb
iret
pop
mov
lock
cmc
dec
rclb
enter
mov
mov
sbb
mov
pop
pop
push
add
div
fistpll
test
in
adc
inc
insl
mov
call
jmp
pop
aas
int3
fsubrs
jl
pop
pop
std
mov
hlt
cmc
xor
ficomps
push
sbb
inc
ss
push
mov
xchg
xchg
hlt
jae
xchg
jmp
roll
rolb
mov
add
repnz
jns
push
adc
aaa
push
cmp
lcall
ss
pop
lahf
mov
push
shl
sbb
shr
add
outsb
fs
lcall
inc
sbb
or
and
dec
sub
lock
popa
adc
scas
fcomi
fsubrl
int
pop
sbb
jmp
xchg
js
imul
adc
enter
pop
lea
dec
arpl
ljmp
aam
jg
enter
in
add
cmp
inc
jae
or
mov
sbb
mov
xor
adc
insl
mov
adc
xchg
sub
cmc
std
popf
lcall
insb
out
adc
mov
std
jae
mov
mov
xchg
or
cmp
mov
xor
stos
mov
xchg
mov
test
call
mov
insb
pop
cld
sar
cmpsb
stos
sub
push
sti
aad
shl
jmp
jae
mov
outsl
test
sub
push
dec
mov
jp
mov
fucomi
cli
add
repz
ret
mov
jge
and
cmpsl
rcl
xchg
pop
push
rclb
mov
fs
mov
into
pop
push
sub
scas
mov
mov
cli
mov
je
in
jns
insl
leave
jae
outsl
mov
sbb
js
std
push
cli
mov
in
inc
add
outsb
cmp
sbb
call
inc
xchg
adc
add
pop
jne
lock
xor
push
mov
stc
inc
ds
mov
adc
rorb
icebp
pushf
insb
aas
fidivs
daa
out
sti
mov
mov
push
sbb
shl
push
add
dec
push
ficoml
test
xchg
imul
sub
jle
jo
jge
test
pop
sarl
cwtl
hlt
imul
lea
sub
xchg
gs
push
xchg
push
cli
sbb
ret
add
cmc
cmp
mov
call
and
sti
inc
sbb
fwait
sbb
les
sti
rcl
mov
mov
flds
inc
lds
int
pop
aam
out
adc
push
jmp
cmp
xchg
xor
jno
mov
lods
das
lcall
mov
lret
adc
xor
scas
push
ds
pop
add
jno
hlt
outsb
xchg
inc
and
adc
push
cmc
call
mulb
stos
xbegin
rcl
mov
sub
hlt
insb
popf
and
jmp
in
roll
inc
push
sbb
pop
inc
leave
testb
jb
lods
dec
sbb
ret
into
push
ja
pop
fcomps
mov
cmp
mov
loop
not
sbb
pushf
xorb
insb
insb
xchg
push
push
sub
mov
ljmp
xchg
push
je
aas
aam
sub
rcrl
imul
fistps
cmpsl
jle
push
pop
ljmp
add
sub
adc
loop
imul
out
scas
mov
fsubs
test
out
inc
ret
pop
aas
lea
stc
jae
or
lock
fadds
xor
test
mov
inc
push
and
jo
mov
andl
jne
mov
ret
cwtl
add
push
insb
movsl
inc
xchg
loop
je
cli
loopne
mull
inc
cmp
fnstsw
add
push
pop
adc
pop
jl
ljmp
mov
adc
loop
mov
ret
cli
push
mov
incb
sbb
daa
fsubrs
scas
fisttpll
pop
ljmp
inc
mov
jb
in
dec
push
jbe
sbb
adc
fcomip
loope
lock
out
push
sti
xchg
jecxz
icebp
sbb
dec
dec
mov
xlat
out
lds
ljmp
repnz
sub
std
push
cmpsl
xchg
icebp
xor
jae
inc
push
sub
scas
jmp
loopne
test
into
fisubl
test
je
flds
cmpsb
pop
mov
xchg
sbb
push
xlat
mov
inc
add
notb
fdiv
xor
cltd
jl
pop
cmp
aam
fnstsw
lods
mov
push
shlb
jne
mov
mov
pop
outsl
jmp
jmp
sub
sbb
inc
add
pop
daa
mov
stc
int
andl
lods
sub
loope
mov
bound
mov
cmp
cmpsb
popa
cltd
ret
push
out
push
xor
dec
or
pop
sbb
int
lcall
hlt
lds
sbb
inc
and
call
mov
cs
insb
addr16
lock
loope
jle
sbbb
jo
js
mov
ss
in
stos
and
push
jg
dec
lods
add
repnz
add
xor
mov
ss
shlb
mov
jle
mov
sar
loopne
ret
pop
ficompl
out
pop
fiadds
dec
stos
outsl
fsubrs
rcrb
jnp
das
cmp
subl
xor
sub
sub
sub
xchg
jp
lds
push
pop
or
pop
push
les
cmp
mov
add
in
xlat
lret
jge
xchg
jnp
sub
dec
cmpb
leave
sti
ret
pop
adc
jbe
jno
aad
andb
cltd
daa
fwait
clc
jge
and
adc
push
out
in
or
shlb
sub
mov
push
cli
mov
xchg
hlt
xchg
push
push
fbld
add
icebp
out
in
fdivs
rolb
iret
xchg
movsl
sarb
shlb
ret
popa
mov
pop
xor
pop
inc
sbb
cmp
jbe
and
mov
mov
shll
rorl
push
addr16
std
call
fstl
mov
sahf
sbb
mov
inc
cmpsb
lea
inc
aas
in
mov
cld
scas
cmp
dec
mov
mov
adcb
xor
mov
rolb
xchg
enter
and
add
mov
stc
pusha
ret
enter
mov
xchg
xchg
lea
xchg
push
jbe
cmpsl
and
insl
dec
dec
cmp
add
pop
call
ret
popf
or
inc
cmpsb
nop
mov
mov
mov
sub
cmp
mov
lods
xlat
bound
mov
pop
insl
cmp
fldcw
in
int3
lea
inc
repnz
loop
mov
repz
push
negl
js
orl
adc
out
imul
pop
cmp
push
mov
mov
rcl
adc
adcb
fchs
pop
sbb
jl
or
mov
sub
orl
sub
int3
add
cli
cmp
daa
mov
ds
clc
stos
pop
and
ljmp
sti
jmp
mov
imul
cld
mov
shll
xor
sbb
loope
add
cmpl
in
js
jp
and
xchg
jg
mov
xor
xor
fs
or
paddsb
int3
shl
loope
subl
inc
dec
or
popa
and
fwait
xchg
jbe
cli
cmpsl
das
fdivl
call
cmp
subl
fwait
out
loop
sbb
adc
pop
loopne
jge
rcl
and
and
push
mov
adc
movsl
scas
scas
dec
lods
out
lcall
cmp
mov
call
cmp
cmp
movsl
pop
jg
in
in
adcb
mov
inc
cmc
jo
and
insl
cmp
ljmp
add
add
loop
dec
into
push
adc
ret
cmp
test
or
push
sahf
cmp
cmc
pusha
movsb
dec
cmp
add
push
mov
push
addr16
and
mov
jne
aas
sub
push
mov
cmpsb
insl
outsb
aam
test
out
rorl
ret
sub
mov
shll
movsb
loopne
ret
data16
cmpsl
push
inc
inc
ret
jmp
nop
inc
out
sbb
jmp
adc
adc
jle
call
cmp
xchg
cmp
loope
jge
aad
out
js
pop
les
divb
aaa
out
xchg
js
mov
lcall
fs
push
aaa
pop
clc
sub
lock
scas
flds
inc
mov
fwait
sbb
cwtl
fucomi
idiv
push
ja
pop
mov
sbb
xchg
loope
roll
jmp
shl
pop
inc
out
mov
into
sbb
mov
imul
scas
dec
jg
push
je
jge
mov
cli
aaa
in
hlt
in
ret
dec
adc
popf
inc
xchg
insb
dec
aam
ss
insb
or
vandps
pop
mov
xchg
test
push
outsb
jmp
adc
dec
mov
out
mov
lock
cmp
cmpsb
mov
or
sub
jbe
xchg
push
das
xlat
mov
in
ds
xor
test
sbb
push
inc
sub
fadds
aam
mull
test
xlat
loope
and
or
xor
filds
xchg
mov
jbe
jo
adc
xor
push
icebp
mov
and
sahf
insl
js
sub
imul
pop
add
enter
mov
enter
or
and
out
mov
cld
and
shrl
sbb
testb
jp
sahf
fcoms
and
stc
mov
rcll
lock
rcr
loope
cld
dec
fcomps
lock
xor
mov
push
mov
push
sbb
inc
rcrb
insl
mov
dec
pop
fwait
adc
ror
jecxz
pop
call
inc
or
dec
push
notb
call
je
adc
adc
dec
sbb
sbb
sbb
stos
sbb
cmpsl
inc
ret
arpl
loop
mov
xchg
mov
call
clc
sbb
in
mov
ret
adc
lea
mov
cmp
pop
cmp
xchg
pushf
xchg
sbb
add
add
xchg
jmp
push
mov
leave
shlb
inc
insl
shll
sbb
subl
sbb
mov
mov
scas
test
mov
dec
test
inc
xor
data16
in
adc
idivl
insl
fcompl
cmc
add
mov
fs
jmp
mov
pop
xchg
mov
mov
push
je
stc
inc
dec
es
nop
fildl
jnp
push
pop
mov
mov
add
sbb
popf
stc
dec
ret
push
xor
aas
dec
mov
adc
add
mov
fstpl
int
or
fildl
jbe
fistl
sbb
aaa
in
sub
xor
call
mov
dec
adc
popf
movsb
mov
ljmp
mov
add
aas
adc
das
push
adc
xchg
or
dec
je
xor
dec
mov
mov
aam
pop
rolb
lock
loopne
movsl
or
aaa
dec
cmp
dec
divl
scas
hlt
inc
scas
enter
pop
addr16
cs
jne
jge
mov
sub
jo
adc
push
js
je
outsb
push
adc
pop
sbb
in
mov
pop
dec
jne
adc
xchg
fistl
daa
mov
cmc
pop
xchg
out
mov
jbe
lock
test
mov
push
out
faddl
cmp
jo
jb
push
dec
dec
and
fisttpll
insl
add
inc
dec
cmp
pushf
inc
xchg
orl
cmc
mov
jne
sbb
les
add
add
pop
ja
sub
dec
xor
dec
ljmp
int
sbb
loope
mov
dec
add
adc
jbe
andb
incl
pop
shlb
push
jl
repnz
adc
aad
sbb
mov
es
js
and
mov
pop
mov
gs
fistpl
push
pop
out
or
cli
push
lret
test
hlt
push
scas
test
and
hlt
pusha
cmp
int3
pop
ds
aad
push
paddd
xchg
fimuls
cmpsb
or
icebp
arpl
std
mov
cld
mov
xor
cmp
push
jb
sbb
jne
loope
push
stc
ds
jmp
pop
mov
inc
out
xor
inc
add
mov
sub
sti
call
adc
mov
sbb
outsb
mov
test
ret
mov
imul
jns
ss
mov
dec
or
dec
dec
insb
mov
xchg
xchg
or
cmp
push
or
insb
pop
loope
aad
cld
sub
pop
or
adc
sbb
inc
push
repnz
je
mov
clc
aas
push
mov
mov
jbe
mov
push
adc
loope
test
and
xchg
or
ljmp
jmp
sahf
mov
insl
mov
sbbb
sbb
add
jge
movsl
sub
and
lret
and
sbb
scas
cmp
and
lds
pop
fcompl
and
fcompl
jne
mov
arpl
fistpl
ljmp
inc
out
inc
mov
imul
daa
stos
jmp
scas
lcall
cmp
scas
imul
scas
xor
movsl
and
pop
sbb
jae
mov
xchg
sbb
cmp
fsubs
xchg
ja
in
or
imul
pop
adc
mov
cmp
sahf
sar
adc
sub
scas
int3
out
int3
movsb
sbb
cmp
mov
lods
pop
sbb
xor
out
inc
or
mov
faddl
insl
subb
lock
ds
cmp
push
xlat
sbb
xor
push
adc
mov
inc
jmp
mov
xor
jno
jmp
cwtl
repnz
xchg
imul
cmp
and
shl
or
scas
movsl
data16
rolb
sub
test
aam
cld
pop
dec
fidivrs
mov
aam
lret
xorb
stos
aaa
xchg
sarl
dec
add
js
ljmp
inc
cmp
and
cli
sub
shll
xor
cmp
iret
daa
or
pop
add
js
pop
adc
imul
mov
popa
push
xlat
mov
test
mov
mov
push
mov
push
movsb
or
xchg
clc
xor
or
out
roll
jae
sbb
xchg
out
push
imul
testl
aas
test
xlat
jns
das
loopne
push
aam
pop
add
push
add
test
scas
xor
jno
dec
std
pop
fdivs
push
cmpsb
frstor
cli
jmp
stos
scas
add
cmpsb
mov
and
mov
imul
xchg
push
jmp
lods
roll
iret
mov
minps
in
mov
loope
cmc
rclb
mov
iret
mov
jge
mov
lcall
mov
mov
pop
jbe
mov
xchg
push
xchg
add
pop
xor
aam
fbstp
xchg
outsl
mov
ret
clc
cmp
mov
xchg
sbb
aam
decl
xor
sti
test
fidivrs
sbb
jecxz
stos
adc
daa
jmp
test
mov
jmp
push
mov
mov
lret
sub
push
xor
inc
call
add
xchg
xchg
arpl
les
sub
adcb
mov
fcomps
sbb
popa
mov
jle
lcall
rorl
in
xchg
xchg
fbld
jmp
lods
cmpb
pop
mov
pusha
mov
mov
int3
pop
xor
lock
divl
lock
cs
cmp
jg
mov
dec
test
sub
fcomi
sub
int3
imul
jo
mov
aaa
cld
hlt
push
jmp
sbb
fstps
push
xlat
mov
push
jne
inc
notb
jne
cmpsl
shrb
sahf
in
or
in
mov
aaa
and
or
dec
repz
add
sbb
out
pop
inc
scas
inc
ds
dec
lret
or
xor
and
cld
push
les
dec
lock
aaa
jne
adc
out
mov
leave
data16
loope
imul
bnd
daa
lock
cmp
push
pop
push
push
cs
xchg
iret
push
xchg
adc
inc
inc
xor
jecxz
push
idivb
pop
arpl
ja
and
arpl
inc
mov
add
fistps
jmp
mov
mov
notl
jle
adc
xchg
mov
aad
xchg
cmp
pushf
jg
fs
jp
cli
inc
call
inc
push
pandn
nop
test
mov
pop
imul
mov
dec
popa
loop
mov
xchg
xor
mov
outsl
and
fdivs
mov
rcr
cmpsl
mov
jmp
ss
icebp
repz
lret
jl
mov
xchg
inc
fisubrl
ljmp
imul
xlat
jb
mov
sbb
std
mov
sub
mov
mov
lock
push
inc
xor
je
adc
dec
push
dec
inc
xor
test
pop
stos
sbb
and
out
lods
mov
mov
mov
xchg
ds
and
push
mov
sti
pop
push
push
cmp
out
sbb
and
ret
mov
xor
in
cmp
popf
push
das
xchg
roll
mov
loope
rorl
shrb
pop
test
mov
sbb
add
sarl
inc
sub
xor
sub
pop
or
mov
push
push
testb
or
dec
cmc
inc
or
in
dec
and
.byte
mov
adc
or
push
je
imul
add
push
mov
cmp
mov
in
jns
xchg
xchg
xchg
lock
cmp
jno
lea
sub
fucomi
decl
cmp
je
lea
push
and
add
xchg
or
or
cmp
jl
mov
ja
inc
inc
dec
mov
in
add
mov
lea
mov
sbb
mov
push
dec
push
call
dec
aam
jnp
sbb
lahf
insl
outsl
das
fadds
push
sbb
sbb
and
xchg
sbb
xchg
and
jb
lea
notl
int
mov
mov
call
fistpll
and
or
mov
or
loopne
fstp
out
mov
xor
sub
lea
or
mov
add
xchg
or
insl
lcall
nop
jmp
rolb
mov
enter
test
jl
je
orl
insb
cwtl
mov
arpl
xor
bound
mov
inc
inc
xor
inc
aas
in
std
decl
add
inc
outsb
xchg
cwtl
lsl
lods
std
decl
add
ret
add
push
lcall
lcall
aaa
lcall
int
xor
xchg
or
ss
inc
int
lret
test
inc
add
and
lret
sbb
or
int
sbb
adc
adc
into
lret
jne
dec
pop
bswap
and
and
in
mov
outsb
xor
lret
push
pop
and
and
sub
fsincos
mov
sbb
repnz
and
cs
and
fcomp
or
and
cld
xchg
mov
inc
mov
dec
mov
aaa
aaa
dec
popa
fstpt
repnz
popf
sub
and
mov
cs
int3
xor
insl
cmp
or
and
into
add
into
inc
mov
into
and
push
aaa
out
loop
xchg
fisttpl
and
or
jge
lret
xor
jo
out
or
push
mov
addr16
je
dec
adc
mov
sub
ds
dec
out
lret
sbb
push
mov
mov
aaa
sub
sub
stos
inc
mov
je
ss
stc
adc
int3
and
add
scas
or
jle
stc
or
xchg
jmp
mov
and
aas
mov
mull
and
push
mov
loop
sbb
mov
test
add
pop
orb
ret
out
cmc
lret
les
int
sarb
xor
inc
and
mov
push
cwtl
and
sbb
or
mov
ficompl
je
and
adc
das
fcmovnu
fstp
push
mov
ret
inc
xor
jno
ja
mov
cmp
jb
or
add
or
dec
push
xor
and
push
inc
adc
ret
push
rorl
lret
inc
add
pop
adc
or
adc
insl
ret
jbe
and
xor
ss
jo
lea
sub
sti
sbb
dec
fnstsw
push
xor
pop
hlt
and
cmp
movl
push
pop
je
jnp
pop
fnstenv
lret
mov
jb
test
lcall
insb
pop
or
cltd
and
push
mov
idivb
adc
pop
fisttpll
popa
xchg
bound
insb
sbb
gs
xor
aaa
inc
dec
dec
out
xchg
insl
xorb
lds
jbe
mov
mov
inc
arpl
je
mov
mov
and
ds
lock
xor
and
and
dec
sbb
mov
cmp
cmp
pusha
mov
mov
lahf
fwait
cmp
jmp
mov
out
les
sub
dec
sub
xchg
mov
aas
cmp
cmp
stc
jle
or
ds
into
fnstcw
cmp
xor
jb
std
cmpsb
loope
adc
int3
cmp
cmp
pop
clc
mov
ja,pt
and
add
jg
dec
hlt
mov
mov
mov
xor
divl
test
jne
or
popa
outsl
adc
jmp
adc
insl
and
mov
jns
inc
and
mov
fbstp
pop
clc
mov
add
pushl
adc
mov
push
dec
test
jb
inc
cld
fistps
clc
in
movl
add
mov
mov
fisttps
lods
or
xchg
mov
add
outsl
jbe
xor
sti
daa
mov
or
add
in
xchg
add
sub
cmp
push
mov
jmp
and
test
adc
dec
jb
cmp
out
sbb
mov
dec
rcll
add
sbb
mov
scas
or
adc
dec
in
jne
jg
inc
ret
dec
outsl
popa
fs
imul
adc
push
imul
jb
je
arpl
jb
gs
mov
outsl
add
decl
call
dec
mov
adc
and
mov
lds
mov
and
pop
leave
cmp
loop
or
sahf
insl
xor
xchg
pop
loop
or
nop
jl
push
pop
ja
dec
dec
adc
inc
lock
push
jge
mov
cmp
es
or
loope
mulb
lcall
mov
sbb
add
push
push
push
cmp
sahf
mov
cmp
sub
cltd
mov
xor
mov
xchg
xchg
mov
dec
mov
push
mov
in
je
and
sbb
gs
dec
gs
pandn
test
inc
outsb
fs
jns
adc
imul
test
pushl
outsl
jle
dec
outsl
insl
addr16
pmuludq
adc
mov
lock
cmpb
pop
jbe
or
push
xor
add
sub
cmp
cs
cmp
and
cmpsb
mov
lahf
loopne
or
lods
push
add
push
call
add
jge
mov
fstpt
loope
xor
jl
repz
mov
fcoml
sbb
sub
das
mov
sub
fadds
loope
inc
adc
xor
xchg
or
jl
sbb
lock
insb
cmpb
xchg
icebp
shl
mov
inc
jp
mov
fwait
or
cmp
jnp
cmp
mov
adc
jge
xchg
leave
inc
push
push
test
xchg
inc
shlb
sub
outsl
sti
data16
jge
je
xor
sbb
add
dec
dec
movzwl
call
pextrw
cmp
cmpsl
sbb
call
mov
lea
mov
test
push
jmp
scas
xchg
pop
xchg
nop
fstpl
loope
sub
cmpb
inc
arpl
fucom
divb
fcomp
cmp
fsubrl
cmp
pop
push
or
fsubrl
sbb
sub
push
mov
sti
add
jmp
jbe
sbb
roll
xor
or
in
add
push
push
cld
sub
hlt
mov
int3
cmp
adc
push
fsubp
mov
sub
es
orb
or
xor
dec
xor
mov
pop
adc
ret
pop
cmp
imul
sti
test
or
cmp
imul
aam
das
sbb
mov
or
xor
lret
rorb
ds
and
cmp
add
fbstp
popa
scas
xchg
ret
ret
shll
and
fildl
sub
inc
mov
and
je
gs
and
popa
insb
dec
daa
daa
and
movsl
and
clc
in
mov
and
or
pop
dec
leave
jl
sbb
call
mov
pmullw
ss
adc
ret
push
loopne
jne
inc
pop
push
inc
or
cmp
hlt
insb
mov
push
aam
in
fsubs
ja
fldenv
inc
adc
cmp
loopne
pop
lods
sbb
or
and
sbb
cmp
adc
mov
in
push
pushf
add
pop
or
xchg
call
leave
pop
sbb
and
loopne
in
gs
sub
pop
or
and
push
push
mov
sbb
or
adc
sub
jl
cmc
sbb
add
sub
push
adc
dec
es
xor
pop
sbb
pop
mov
add
outsb
imul
push
pushl
pusha
push
pop
sub
mov
jg
out
or
test
das
aaa
fwait
sti
xor
add
add
outsb
gs
enter
fs
insb
or
out
out
aas
jne
movb
mov
add
dec
mov
fmull
jnp
nop
cld
xor
mov
sub
mov
push
sbb
or
fcom
out
mov
fisttpll
mov
adc
imul
in
add
out
add
clc
mov
enter
out
idiv
or
call
fsubrs
cmpb
ret
jle
push
sub
shlb
cltd
ret
int3
movb
add
ficoml
dec
clc
inc
or
sbb
ficoml
cmpsb
imul
mov
incb
cmpsl
in
push
gs
je
in
cmpb
fisttpll
and
jmp
or
sbb
mov
jge
and
hlt
sbb
hlt
mov
adc
inc
lock
mov
and
sahf
and
lock
adc
sbb
cwtl
mov
stos
add
clc
decb
xor
sahf
hlt
mov
add
xor
mov
hlt
test
js
xor
cld
shrb
mov
xchg
scas
jne
mov
pop
clc
mov
jbe
test
jbe
loopne
xor
add
imul
push
movsl
adc
xchg
mov
fldenv
insb
es
flds
std
cli
dec
jp
pop
push
js
or
mov
dec
aaa
push
sbb
hlt
mov
stos
loope
fmuls
xlat
jge
out
add
lcall
add
pop
xchg
popa
loope
add
xchg
xor
lret
and
movsb
aaa
les
scas
add
mov
test
cmpsl
scas
add
js
mov
int
sbb
in
xor
or
add
ljmp
dec
ud2
outsb
or
add
cmp
dec
fwait
aam
add
push
push
sahf
outsb
mov
arpl
sbb
cmpsb
out
cs
pop
je
add
fists
fwait
lock
push
cs
add
sub
add
sbb
sahf
or
or
repz
push
gs
dec
sub
lods
and
enter
cmpxchg
add
leave
or
add
jp
arpl
jo
dec
ss
daa
gs
or
test
lret
push
xchg
sbb
mov
or
and
xor
pop
mov
addl
adcb
push
sbb
adc
mov
std
cmp
mov
xor
cwtl
and
lahf
xchg
data16
sub
cld
sub
adc
mov
ja
cmc
add
cld
add
or
push
cli
sub
dec
mov
ret
jns
cltd
and
add
sahf
stos
pop
mov
test
sbb
add
mov
testl
jecxz
or
push
insl
fcmovnu
add
add
and
ds
or
negb
add
adc
sbb
aad
das
jne
and
add
add
jnp
fiadds
loopne
pop
inc
out
in
pop
push
mov
loop
sub
int3
ljmp
mov
std
out
add
pop
jl
mov
bsr
cmc
add
xlat
ja
add
pop
add
ja
xchg
add
clc
andb
popf
insl
stc
pop
mov
add
add
mov
add
fucomp
out
pop
das
sub
push
test
mov
cld
cmp
inc
outsl
fisttpll
rolb
or
add
mov
sub
ljmp
push
mov
add
cmpsb
stos
pop
and
out
add
ret
add
insl
cwtl
cs
clc
or
add
add
dec
add
repnz
fildl
pusha
push
shlb
push
mov
mov
dec
mov
orb
sahf
or
lea
mov
add
popf
testb
add
xchg
into
jno
dec
adc
fwait
xor
out
sub
aaa
xlat
sbb
out
rolb
mov
gs
xlat
dec
mov
fwait
popa
imul
sbb
daa
idivb
cmp
add
mov
add
add
sahf
and
push
mov
dec
add
push
xor
fsub
pop
mov
popf
sub
fwait
push
add
lahf
lods
test
xor
add
push
shlb
fsubs
arpl
pop
and
push
mov
outsb
clc
add
mov
test
and
ja
xchg
divb
mov
jp
in
mov
mov
xchg
outsl
insb
in
adc
in
insl
js
sbb
pop
addl
xor
mov
push
jp
test
daa
popf
jge
mov
and
lods
outsl
add
movb
mov
pop
negl
scas
add
mov
xchg
iret
add
jnp
fcompl
pop
dec
cmp
movsb
push
popa
add
add
cmpsb
mov
push
or
fstpl
out
testb
inc
sti
cmp
inc
arpl
push
mov
pop
data16
aam
sbb
fidivrs
sub
and
inc
cmp
imul
jbe
mov
inc
fcmovnb
roll
dec
or
cwtl
mov
lock
jmp
adc
inc
mov
movsl
test
jae
fildl
sbb
xchg
stos
xor
das
imul
inc
clc
pop
outsb
fisttpll
and
mov
mov
mov
loop
mov
push
fildl
shrl
mov
mov
in
mov
xor
xor
mov
mov
addl
and
les
push
add
pop
cld
sbb
mov
xchg
xor
pushf
add
scas
sti
in
mov
sbb
repz
dec
lods
gs
push
fdivs
push
add
add
andl
xorl
aas
push
xchg
orl
add
mov
test
data16
iret
dec
in
sbb
mov
mov
fdivrp
lcall
stos
test
ds
clc
mov
and
mov
outsl
mov
std
rsqrtps
int3
aaa
ss
int3
push
mov
jb
add
ljmp
pop
xchg
xchg
cli
xlat
test
dec
jp
or
arpl
mov
pop
mov
imul
stos
outsl
popa
imul
or
jmp
jmp
push
loope
imul
jle
lock
inc
xor
cmp
dec
mov
fisubs
mov
xor
mov
mov
lods
sub
testb
adc
xchg
gs
xor
lea
jbe
jecxz
dec
lret
insb
int
mov
inc
je
out
add
insl
jo,pn
adc
pop
adc
aam
add
rolb
es
cwtl
jecxz
sub
insl
jecxz
adc
xchg
shr
int
mov
mov
xor
add
aaa
jne
test
mov
and
cmovns
mov
dec
sbb
adc
mov
jmp
jae
stc
fst
fprem
sbb
jbe
ljmp
pop
mov
hlt
fs
jae
dec
pop
inc
sub
mov
sub
xlat
cmc
shll
rcrl
mov
adc
xchg
jns
mov
push
add
mov
add
pop
fiaddl
xor
fstp
ss
aad
inc
aaa
push
sbb
out
pop
sbb
cld
pop
shll
push
repz
je
roll
lea
shlb
ss
push
adc
ja
es
jo
adc
jno
in
inc
mov
mov
cmpl
cmp
push
xlat
cmp
pop
test
push
arpl
or
fisubl
mov
negb
test
jbe
insb
mov
or
js
mov
stos
out
push
es
cli
hlt
fadds
mov
dec
or
push
bound
les
js
xor
cmp
jle
int
fidivs
push
orl
dec
insl
inc
mov
icebp
add
cmp
fiaddl
push
lcall
movsb
cltd
cli
loopne
push
mov
dec
xor
or
daa
jecxz
sbb
imul
out
mov
push
jne
testl
test
mov
lcall
mov
xchg
mov
xchg
hlt
or
inc
sarb
roll
ret
fcmovnbe
hlt
xor
je
clc
mov
cmp
xchg
es
sub
test
cld
mov
cld
mov
pop
push
jns
cvtps2pi
test
adc
int3
jecxz
imul
sub
out
mov
xchg
or
popa
leave
pop
mov
xchg
dec
in
imul
ljmp
dec
fidivl
mov
jne
pusha
std
inc
ret
fisttpl
ja
test
dec
insb
pop
incb
push
jo
mov
repnz
pop
sbb
fbstp
jno
fdivrl
fistpll
clc
popf
sub
sub
or
movsb
sbb
dec
test
js
js
out
shl
stc
and
pop
lcall
imulb
or
jnp
scas
out
sbb
lds
pop
xchg
bsf
sbb
das
or
popa
test
scas
je
push
sub
roll
sarl
xchg
push
loop
or
xchg
sarl
jb
call
mov
mov
jnp
mov
mov
cmp
cmp
cmp
and
adc
rcl
hlt
inc
jnp
in
bound
mov
jle
inc
sub
daa
push
js
repnz
jge
xlat
scas
mov
sbb
jmp
shr
dec
pop
or
cmp
sarb
mov
loopne
jbe
or
mov
or
inc
push
iret
jne
or
adc
cmp
imul
jo
inc
ja
imul
mov
movsl
scas
fisttpl
das
mov
out
or
cli
repz
shll
sbb
or
mov
inc
dec
sbb
lock
in
loop
fistpll
mov
and
stos
mov
out
call
lahf
jmp
lcall
dec
and
adc
cmp
pop
adc
mov
test
pop
mov
jecxz
fnstcw
mov
bswap
dec
pop
mov
mov
test
and
insb
ret
insl
ja
or
rcrl
mov
cmpb
out
or
fsts
dec
xchg
lods
pop
insl
cmp
push
fwait
mov
jbe
aad
dec
inc
xor
add
inc
sbb
inc
pop
aaa
in
ljmp
pop
dec
push
icebp
inc
mov
dec
and
loop
inc
push
xchg
pop
pop
data16
inc
add
arpl
mov
push
pusha
dec
scas
or
popa
push
sub
jge
pop
cmpsl
fdivs
xchg
mov
sarb
mov
push
pop
data16
je
and
hlt
divb
cs
aad
popf
pop
pop
cli
in
xlat
fistl
and
or
mov
inc
inc
aam
fisttpl
xor
mov
push
pop
dec
xchg
dec
out
mov
adc
ret
mov
push
pop
pop
sbb
movsb
aad
es
popf
jnp
rcr
cmpsb
cltd
aam
xor
arpl
pop
stc
sti
mov
cld
inc
pop
or
mov
popa
test
mov
sbb
cli
mov
mov
jmp
ds
and
inc
test
int3
inc
minps
xchg
sahf
cmp
cmp
cmp
dec
rcrl
sbb
sbb
sub
push
popf
jle
into
pop
pusha
sub
xor
sbb
push
mov
mov
rcr
push
fisubl
hlt
mov
aad
push
test
jecxz
sbb
and
jb
ret
loope
and
adc
xchg
jb
dec
xchg
shl
or
imul
xchg
stc
fs
jo
mov
or
sti
pop
fnsave
mov
shlb
inc
mov
iret
jo
mov
adc
pushl
mov
cmp
push
adc
call
fs
pop
stos
adc
sahf
movsl
ja
xor
cmpsl
jbe
xor
addl
lods
movsb
test
add
hlt
scas
pop
jne
hlt
inc
or
repz
mov
mov
ss
jno
mov
and
mov
imulb
mov
repnz
xchg
les
or
dec
lret
andl
test
cmp
and
in
pop
mov
dec
in
mov
mov
xor
push
lods
popa
mov
pushl
push
inc
mov
mov
jmp
dec
push
pop
fcoms
fstl
lret
pop
pusha
loope
and
mov
cli
stos
mov
mov
xchg
dec
sbb
fidivrl
inc
rorl
push
fisttps
in
sub
and
xlat
inc
pop
dec
ffree
inc
sub
hlt
popf
fimull
add
insl
ret
ja
imul
mov
div
pop
fstl
adc
xchg
pop
fwait
jecxz
sar
push
jge
xchg
idivb
and
adc
xor
pop
push
mov
iret
pusha
xor
insb
lret
jp
loope
in
xchg
mov
loope
je
mov
pusha
mov
xor
mov
mov
dec
sub
aad
xor
stos
lcall
jmp
hlt
adc
push
mov
xchg
cli
shll
test
cld
or
or
adc
mov
in
jo
imul
fldl2e
inc
loopne
cmp
cmp
mov
int
jg
scas
and
dec
fwait
sbb
inc
lods
jne
das
fs
xor
inc
xlat
inc
pop
sbb
sarb
push
repz
shrl
int
jae
and
fbstp
xchg
es
sarl
jge
into
jmp
fstp
daa
or
lea
insb
inc
add
inc
sbb
cmp
jnp
fistpll
test
xchg
or
popf
dec
or
push
add
scas
xor
cmpsl
cmp
call
cmp
lret
mov
adc
inc
movsb
popf
dec
dec
std
sarb
sbb
js
inc
out
jb
testl
pop
pop
mov
dec
pusha
or
mov
scas
xor
pop
jo
outsb
insl
jne
test
xchg
sub
out
insb
arpl
lcall
and
mov
lods
in
sbb
or
mov
inc
or
subl
test
push
cld
les
leave
fucomip
pop
cltd
xchg
xor
sbb
mov
xor
es
mov
push
rolb
out
push
mov
pop
jp
notl
clc
dec
out
roll
or
dec
sub
add
push
add
dec
or
shr
daa
in
ret
daa
or
lock
repnz
out
jmp
mov
cld
inc
test
lahf
jle
dec
loope
and
fwait
dec
push
add
sub
test
popa
push
mov
out
jo
sub
ficompl
mov
insb
inc
outsb
sbb
push
cmp
aam
decl
pop
xlat
lock
pushw
sub
test
push
inc
jbe
mov
rcll
pop
mov
xor
and
imul
syscall
mov
push
jbe
push
in
push
test
out
add
xchg
sub
push
rcrb
adc
inc
mov
jne
inc
loope
push
mov
xchg
add
xlat
dec
imul
lock
mov
pusha
in
lret
jb
add
fisubrl
outsl
lock
jae
xchg
clc
inc
faddl
add
mov
aam
out
clc
push
pop
mov
fidivrs
mov
fcompl
xor
imul
std
shrl
jmp
push
cmpsb
push
mov
in
pop
mov
sahf
pop
xchg
test
ret
jp
xchg
jbe
lahf
sbb
jl
stc
xchg
iret
cmpsb
inc
or
rcl
dec
cmp
jne
popf
aam
mov
enter
enter
into
inc
bnd
push
loopne
pop
mov
mov
or
push
test
xor
notl
xor
dec
and
loopne
clc
dec
sub
in
push
test
neg
jl
daa
mov
mov
mov
movsb
mov
lods
jne
cld
sub
ljmp
sti
sbb
cmc
int3
in
push
mov
mov
int3
jmp
hlt
xor
insb
lods
pop
pop
pushf
push
iret
and
imul
jg
jae
mov
jmp
mov
call
je
sub
xchg
push
sub
add
ss
mov
lea
and
sar
mov
xchg
int
push
fstpl
nop
imul
int
lods
gs
fs
push
sbb
shll
dec
hlt
push
rcrb
adc
test
enter
pop
stc
ror
gs
sub
jmp
jp
or
ja
mov
stos
mov
push
subb
push
xor
mov
mov
mov
pop
aas
push
outsb
pusha
mov
outsb
call
or
jmp
mov
js
jecxz
or
adc
pop
fstl
insl
loop
jne
fadds
fisttpl
cmpsb
adc
daa
cmp
sti
sbb
pop
sarl
in
lds
and
push
out
sub
add
outsl
xor
cmpsl
mov
repz
adc
mov
push
out
fs
rol
dec
ret
gs
shl
sbb
push
inc
shlb
fs
mov
dec
roll
lea
outsb
add
fdivrl
add
jmp
out
pusha
repnz
inc
pop
and
inc
pop
sti
sbb
out
xor
xor
ffreep
lods
xor
rcr
mov
push
dec
mov
test
ds
ljmp
movsl
jg
repz
jne
mov
pop
dec
out
jecxz
inc
pusha
xor
fwait
jmp
pcmpeqb
out
or
dec
aad
xchg
and
fdivs
sahf
clc
hlt
mov
or
sahf
lcall
and
mov
sti
mov
mov
les
repz
mov
sub
dec
or
mov
fstl
mov
cmp
push
daa
push
loope
push
add
sbb
mov
jecxz
shl
ljmp
mov
inc
inc
sti
in
inc
fisubrl
pop
pop
icebp
sub
xchg
cmpsb
imulb
adc
xor
xchg
lods
fs
or
imul
mov
shll
insl
sbb
insb
cwtl
lret
cli
jo
push
jl
cmp
add
adc
cmp
dec
jmp
sbb
sahf
dec
pop
jp
xchg
hlt
mov
nop
lock
or
pusha
stos
xchg
cmp
lods
or
cmp
jbe
popf
loop
push
arpl
mov
call
push
pusha
aad
xor
xchg
sbb
xchg
lods
aad
ret
in
sgdtl
mov
pop
pop
mov
inc
inc
push
mov
cmp
adc
idivl
jne
fildl
bound
xchg
cmp
hlt
stos
lcall
popf
fstl
cmc
adc
push
loop
pop
sar
sub
push
jmp
or
mov
test
and
loopne
pop
adc
push
jb
je
inc
ficompl
fimuls
and
subl
sbb
jg
shl
outsb
stc
mov
mov
jo
mov
xor
dec
push
inc
jae
dec
dec
and
and
xor
loope
pop
xor
add
cmp
pushf
dec
cmp
pop
jl
lret
inc
hlt
push
int3
leave
hlt
test
adcb
lcall
test
jbe
or
adc
pushl
sbb
push
cmpl
push
inc
jge
cli
jno,pt
mov
cmp
aad
mov
pop
jae
in
fcoml
push
cmpsl
sub
pop
rcl
hlt
mov
jl
loop
push
aaa
cmpsb
mov
jle
add
gs
ret
mov
outsl
out
dec
mov
out
js
stos
fdivp
add
pop
adc
hlt
mov
inc
add
mov
sub
pop
jno
mov
jecxz
ljmp
orl
push
inc
sub
scas
test
mov
inc
popa
xlat
cmp
mov
adc
add
mov
xchg
fcmovne
sub
add
add
lcall
pusha
adc
leave
imull
insl
out
jecxz
imul
push
mov
xchg
test
jmp
scas
call
shrb
adc
sub
stos
push
jnp
mov
ds
dec
add
rol
push
std
lds
sti
xchg
ss
test
shrb
adc
jne
loope
cmc
xchg
adc
dec
out
mov
mov
sahf
js
ljmp
cmpsb
in
test
gs
and
js
xchg
les
adc
mov
or
scas
lods
xlat
push
inc
int3
sbb
out
call
fwait
sub
xor
push
cmc
movsl
inc
sbb
jnp
cltd
ret
mov
add
loop
or
fisttpll
fs
sbb
jae
sbb
mov
or
adc
aaa
or
adc
dec
jg
or
int
add
jecxz
es
xchg
jg
and
das
mov
daa
bound
call
inc
roll
mov
pop
aad
mov
pop
xlat
fldenv
lods
and
mov
pusha
fs
jl
push
fstpl
loopne
cli
stos
out
xor
arpl
mov
sbb
or
call
movsb
fiaddl
lds
mov
fcmovb
pop
in
fstp
test
mov
ss
cmp
jecxz
jle
inc
arpl
cmp
lods
adc
fst
ret
pop
outsb
xor
fdivs
or
sarl
out
scas
mov
roll
call
push
mov
sbbb
out
pop
push
shl
jg
arpl
sub
pop
adc
sbbl
mov
aas
add
and
dec
lret
lods
mov
or
push
xchg
jle
cmp
popl
sbb
xchg
sub
push
test
add
jl
inc
test
jno
in
enter
mov
and
lea
aaa
int3
and
popf
in
xchg
cmp
dec
shl
sub
sub
int
mov
sbb
jo
fsubrs
ljmp
outsl
cmpsb
test
add
adc
and
aad
rolb
xor
pusha
jle
mov
aam
xor
push
lret
jo
movq
push
add
jmp
fdivrl
rorl
js
in
jmp
setbe
shrb
sbb
mov
sarb
sub
jns
jle
mov
or
int3
jmp
dec
std
icebp
rcll
daa
out
pop
sti
clc
shl
xchg
jg
test
mov
lahf
lods
out
push
aad
call
cmp
jnp
mov
mov
jnp
in
call
insb
push
out
pop
scas
cmp
cwtl
pop
int
ret
insb
mov
cmp
adc
ja
pop
mull
xchg
hlt
dec
jl
dec
inc
bound
cmp
xor
dec
mov
push
push
es
pop
scas
jnp
shl
frstor
dec
or
rorb
adc
pop
mov
pop
pop
jne
inc
lcall
clc
fdivrs
lea
popa
mov
push
in
inc
xchg
aam
xchg
pop
loopne
jae,pt
fcompl
sbbl
fstl
mov
jbe
mov
cmp
lahf
inc
adc
dec
xchg
pop
lahf
bound
ds
mov
sbb
dec
xchg
mov
repz
andl
cmp
mov
pusha
dec
xorb
push
jecxz
xlat
lock
and
stc
xchg
xchg
mov
sahf
push
jb
and
jo
sbb
mov
cwtl
das
inc
lret
cs
jbe
int
xor
mov
xor
call
xchg
cld
in
call
inc
or
mov
push
pusha
mov
pop
sti
int3
lea
mov
add
inc
scas
rcrb
sub
insb
add
pop
add
popf
mov
or
xchg
add
cmc
test
push
lret
xor
pop
sbb
xor
push
pushf
sub
pop
data16
xchg
push
clc
lds
jne
lahf
fcomps
mov
repnz
mov
push
std
in
bound
sub
leave
dec
mov
pop
outsl
xchg
out
cli
inc
pminub
xor
sub
flds
adc
lahf
call
aad
mov
or
push
dec
mov
jmp
jl
addr16
mov
add
lods
shll
cmp
lds
sub
notb
pop
jmp
je
push
push
js
shll
mov
push
fsubrl
sub
test
and
in
loop
jle
shr
lds
lret
dec
sbb
jo
pop
mov
icebp
or
xchg
xor
mov
jp
jae
mov
sbbl
pop
add
rorb
rcll
push
cmpsb
lret
jae
jge
hlt
andb
mov
mov
mov
fidivrs
push
push
mov
sub
jle
out
pusha
push
testl
cmp
ret
mov
jno
repnz
mov
jmp
subb
sbb
inc
add
inc
push
xlat
mov
add
sbb
cmp
fsubrs
or
loop
inc
xchg
push
fdivrs
adc
pop
fcoml
xchg
mov
sbb
cmp
lea
pop
mov
xchg
fidivrs
xchg
inc
test
repz
cmp
sbb
insb
out
jmp
mov
xchg
add
xchg
ds
call
dec
mov
pushf
cli
into
jo
xor
lret
test
mov
insb
pop
pop
ret
pop
js
mov
sbb
sbb
push
lods
fcmovnbe
scas
mov
test
mov
push
cltd
jg
or
xor
mov
ljmp
leave
scas
out
mov
inc
lods
cmc
inc
xchg
and
cmp
das
aam
popa
rcrb
rcll
scas
pusha
cmp
cmp
clc
stos
rolb
flds
adc
pop
lcall
cltd
jle
lods
popa
ret
dec
sub
filds
and
lcall
addl
xchg
mov
jbe
subps
push
fcompl
cld
push
adc
xchg
into
mov
ja
mov
xchg
jns
dec
push
lods
push
bound
lret
jbe
jle
shrb
xchg
pop
clc
mov
loope
inc
call
and
dec
sti
mov
cltd
loop
fimull
dec
jl
add
add
dec
je
loopne
push
hlt
or
bsr
sub
mov
ret
dec
xchg
std
lcall
or
adc
or
or
sbb
mov
call
xlat
scas
pop
xchg
push
cmpsb
fucom
adc
pop
jo
mov
push
fbld
jo
inc
jmp
adc
sbb
popa
jecxz
push
add
test
adc
cmc
jne
sbb
xchg
pop
in
mov
fchs
inc
dec
outsl
jo
rsm
cwtl
stos
fstpl
dec
and
sbb
xor
lahf
add
stos
int
cltd
cmpsb
cmp
add
test
imul
sub
xor
push
jno
xchg
adc
rclb
push
dec
addb
jmp
ljmp
les
mov
dec
and
cltd
inc
jno
ss
ret
ss
xchg
push
aam
sub
jae
push
push
jge
roll
or
popf
mov
mov
jp
jge
adc
lock
adc
lret
pop
jp
inc
loop
ficoms
adc
sub
rolb
scas
into
push
sub
je
inc
lock
cmp
jge
xor
xchg
mov
pop
ud2
aam
and
cmp
pop
inc
clc
jo
fistl
sbbb
jmp
outsb
gs
insl
jl
sbb
pop
cmp
push
cwtl
xchg
mov
jo
jne
sbb
stos
sbb
out
mov
and
jno
add
sub
testb
mov
ret
jne
out
inc
push
test
ljmp
xchg
ds
mov
dec
mov
push
push
pop
mov
jecxz
jge
ret
sub
leave
sbb
cs
jmp
aad
sub
inc
fcom
aad
fmull
icebp
out
adc
sub
pop
inc
jbe
ret
sub
cmp
push
push
sub
call
sub
fidivrl
movhps
sbb
dec
out
mov
sahf
out
mov
stos
jmp
fistpl
xchg
adc
mov
jne
jb
jp
lret
fsubs
mov
dec
jecxz
sarb
xor
mov
jne
leave
sub
xabort
jae
and
or
inc
sbb
es
add
shlb
dec
scas
leave
jnp
dec
popa
and
inc
pop
stc
and
mov
sahf
or
hlt
aaa
loope
aam
push
inc
add
aam
scas
push
sub
inc
push
cmpsb
mov
ficoms
inc
jbe
out
jp
fisttpl
leave
push
and
dec
xchg
aas
cmpsb
ds
cmp
inc
test
or
mov
lods
lea
test
pop
cwtl
mov
aas
daa
scas
inc
sbb
fsubs
fdivrs
aaa
clc
jne
cmpsl
popa
movsl
cmp
xor
je
mov
cmp
jb
in
sbb
addb
mov
mov
test
sbb
testb
add
lds
imul
mov
adc
mov
clc
adc
test
add
ja
loope
cmpsb
scas
jl
push
and
add
mov
pushf
iret
pop
shll
cmp
sbb
mov
mov
jnp
rcll
push
pop
xorb
dec
test
lcall
aad
push
test
popf
popa
and
cmp
sub
std
mov
stos
fstpt
push
fnstenv
hlt
arpl
adc
pop
cmp
add
xor
jo
imul
sub
xor
decb
jne
jecxz
popa
and
inc
out
push
push
mov
cmp
in
loopne
mov
cmc
fnstcw
xlat
lret
sbb
mov
lea
mov
cli
cmp
das
loop
jecxz
iret
pop
pushl
and
cmp
int3
pop
cmp
adc
or
xor
shlb
pop
adc
jle
sub
dec
lods
jo
xchg
out
push
stos
sti
out
out
jo
mov
lret
sti
dec
xlat
mov
cwtl
test
sbb
or
mov
imul
xchg
mov
xchg
fstps
add
cmpsb
addr16
xchg
pusha
fwait
mov
notb
jae
push
imul
dec
mov
int3
inc
mov
fstpt
fwait
inc
sbb
mov
out
sub
mov
lcall
xor
add
pop
lahf
insl
lods
mov
ja
sbb
cld
clc
mov
imul
xor
pmaxsw
lahf
push
sbb
ljmp
in
jns
mov
mov
movsb
dec
dec
ja
out
sbb
add
ljmp
in
mov
out
xchg
inc
lods
pop
mov
jp
adc
push
cmp
and
fidivs
cmp
cmp
popf
adc
pop
aas
xchg
loopne
mov
addr16
jg
pop
inc
push
xor
jl
std
jo
cltd
ret
push
inc
imul
xor
mov
mov
cmc
mov
inc
adc
xor
outsb
loope
mov
imul
fdivr
pop
sbb
fs
arpl
sbb
pop
lea
sarb
jecxz
fwait
push
dec
mov
mov
add
and
cmc
insb
loopne
pop
das
push
or
pop
movsb
jge
je
loopne
dec
inc
sbbl
xchg
mov
aas
aad
mov
jno
cmp
mov
out
add
les
in
push
psrad
sub
stos
aam
fcmovnu
push
jg
push
mov
xlat
rcl
aad
in
push
and
or
scas
dec
dec
aad
outsb
outsb
aam
xor
sti
add
pusha
pop
push
stos
sbb
cmc
jae
cmp
sarb
mov
mov
lahf
mov
nopl
jo
sub
mov
gs
jae
je
pop
fcompl
mov
and
push
sysexit
sub
mov
std
push
jne
jne
mov
negb
mov
mov
push
or
fldt
in
lahf
test
lea
test
adc
loop
sbb
sbb
pop
xor
test
dec
movsl
stos
mov
loope
in
push
adc
shlb
xchg
fadds
imul
insb
mov
cltd
mov
sti
jmp
jp
lds
insl
jo
mov
hlt
jbe
pop
and
mov
mov
mov
and
outsb
loope
jae
fwait
notl
jp
jecxz
addl
test
stos
es
mov
push
stos
mov
and
mov
mov
test
imul
jecxz
jmp
mov
icebp
jo
xor
mov
fst
adc
data16
out
loop
adc
add
pop
mov
inc
add
mov
cltd
loopne
dec
xchg
out
orb
push
xor
cmpsl
adc
mov
xchg
push
cmp
sub
cli
rcrl
data16
repnz
mov
or
sarb
xchg
stos
xlat
pop
clc
aad
test
push
inc
clc
or
sahf
stc
mov
add
dec
adc
jmp
dec
cmovge
sbb
fcoml
aas
xor
mov
test
jecxz
mov
test
pop
mov
nop
pusha
fwait
js
cmp
push
pop
cmp
divb
push
sti
shrl
inc
cmp
mov
mov
test
clc
fdivrl
xchg
es
das
xlat
in
xchg
call
or
sbb
dec
gs
inc
inc
loope
ja
mov
paddusb
mov
mov
clc
mov
pop
mov
xor
push
imull
jp
fcmovnb
cmp
repnz
or
rorb
xor
das
loope
imul
in
cmp
cmp
lea
das
xchg
outsb
int
and
and
xor
sub
mov
test
mov
leave
xchg
clc
sbb
shl
test
xchg
imul
pop
dec
adc
or
sub
lret
sub
movsl
or
mov
in
sbb
je
mov
dec
pop
sbb
loopne
or
hlt
inc
cmp
fwait
enter
mov
pushf
scas
ffreep
loope
rorl
addl
xor
fadds
out
test
mov
lock
imul
test
jb
jmp
sbb
xlat
jae
pop
cmp
cs
loope,pt
mov
push
push
adc
dec
imul
shr
sbb
mov
call
mov
repz
dec
sarb
push
mov
xchg
dec
xchg
adcl
pop
cmp
in
jle
sub
addl
les
fdivrl
scas
pop
in
cli
pop
xchg
adcl
push
filds
std
lret
repz
mov
jb
lock
and
jnp
pop
loopne
cmp
call
jae
fnstenv
aas
dec
jg
clc
mov
xchg
daa
push
dec
pop
pop
adc
loop
int
std
lcall
mov
mov
mov
mov
sbb
dec
jmp
imul
clc
stos
loope
xor
shrl
dec
pop
inc
sub
hlt
jmp
loope
mov
xlat
test
jne
mov
dec
dec
int
push
ret
lahf
test
push
jb
xor
push
outsb
mov
mulb
fcoml
cld
cli
call
mov
cmpsl
arpl
or
push
push
sbb
mov
ffreep
xchg
jns
or
cwtl
ds
sbb
fsubrl
in
xchg
sub
or
lahf
clc
out
lds
mov
mov
add
insb
dec
int
cmp
jge
add
into
jbe
stos
mov
mov
fildll
sbb
mov
fisubrl
sbb
mov
aas
xchg
inc
repnz
aas
not
lock
cmc
stc
sbb
xlat
lock
mov
imul
xchg
mov
mov
daa
aad
inc
call
stos
mov
jne
fs
stos
jmp
cmp
aad
xchg
dec
cs
hlt
lock
cwtl
sbb
xchg
mov
icebp
notb
or
lahf
mov
mov
out
add
call
mov
in
add
es
adc
sbb
out
dec
fwait
je
dec
jne
adc
loope
insb
in
jbe
mov
ja
inc
cwtl
fsubr
loope
push
push
fpatan
pop
roll
imul
in
mov
js
fiadds
sbb
cwtl
add
pop
mov
daa
mov
xchg
test
inc
pop
cmp
sub
xchg
pandn
lea
rorl
rcr
sbb
int
jmp
or
data16
pop
cmp
jbe
cltd
stos
add
sarb
xchg
jae
les
ficoms
pop
mov
aas
loopne
adc
les
or
es
sbb
mov
mov
add
sbb
ret
rcl
outsb
movsb
adc
je
mov
jg
fisubl
and
xchg
imul
lcall
cwtl
stos
mov
data16
mov
pusha
mov
or
sbb
stos
pop
push
andl
inc
into
adc
std
adc
fs
dec
cmp
sub
xchg
jnp
dec
test
inc
inc
inc
aad
sti
in
testb
ret
mov
xchg
int
mov
loope
mov
mov
jle
inc
cmp
push
dec
and
movsl
add
pop
ss
mov
jnp
cs
jmp
mov
sbb
mov
shl
or
fistl
lcall
mov
cmc
jns
xchg
bound
mov
jo
jae
mov
mov
xchg
js
jg
adc
clc
xor
in
xchg
ja
fimuls
sub
pop
mov
dec
mov
test
in
push
bound
pop
add
cmp
pop
out
sub
mov
imul
mov
jecxz
xor
cli
fcomi
adc
adc
mov
inc
lods
pop
fs
push
sbb
arpl
mov
pop
lds
or
icebp
roll
cmpsb
bound
not
add
or
rcrb
inc
outsb
ds
xor
jne
jne
inc
sbb
mov
rcrb
adc
or
push
xchg
or
fcmovne
and
inc
fnstcw
in
mov
icebp
hlt
cmp
xchg
mov
mov
fildll
cli
std
mov
pop
jle
sbb
pop
pop
cld
cmpsb
xchg
sub
pushl
fcomp
sbb
fstpt
cwtl
fdivrs
mov
and
adc
jge
xchg
lahf
ja
fcomi
jge
adc
inc
adc
push
mov
sbb
push
mov
in
mov
xor
ljmp
push
ss
sbb
xchg
jecxz
cltd
jnp
js
dec
out
scas
cmp
cli
outsl
jp
jge
xor
shl
mov
int
jp
out
xor
push
icebp
in
sbb
xor
clc
popf
sbb
mov
les
call
or
pop
jbe
inc
push
ret
mov
clc
xchg
jo
imul
xchg
sbb
xor
jbe
out
cli
call
xchg
cmc
jne
xchg
inc
sbb
mov
mov
mov
pop
mov
cmp
aad
or
data16
shlb
cwtl
push
fdivs
sahf
lret
add
sahf
mov
fcomps
loopne
ds
pushf
mov
pushl
pop
paddw
pop
xchg
jns
mov
xchg
dec
les
hlt
mov
loopne
out
dec
push
mov
jo
sub
ret
and
or
pop
push
mov
ret
adc
lods
adc
lret
shl
cli
mov
cmpsl
mov
out
shll
xlat
popf
or
out
push
fcomps
inc
ja
fistl
mov
imulb
add
sti
xor
add
shrb
adc
sub
ds
jg
lds
hlt
push
cs
insl
and
push
fimull
fcomi
sbbl
mov
cmp
cmp
mov
call
pop
add
faddl
aaa
pop
pop
dec
jae
add
ljmp
scas
aaa
pop
loopne
xchg
hlt
sub
bound
fiadds
pop
xchg
mov
fcmovnu
fmull
outsl
cmp
push
sti
loope
inc
loopne
ret
out
adc
testl
and
fbstp
push
or
inc
scas
sub
popf
inc
xor
stc
add
lods
fdivrp
pop
mov
stos
pop
sbb
testb
pop
lock
or
les
fdivrs
icebp
popf
jae
adc
ss
sbb
adc
js
pop
mov
sbb
cwtl
shll
cmpsb
es
mov
pop
test
rcrl
mov
jge
add
xchg
ret
sahf
mov
clc
and
ret
lock
ljmp
sbb
dec
fnsave
inc
pushf
mov
mov
hlt
repnz
out
mov
flds
outsl
jne
jmp
sbb
cmc
iret
adc
xor
push
mov
mov
ret
movsl
jl
lock
cs
cmpsb
cmpsb
and
dec
pop
and
lds
cmp
jge
sahf
dec
stc
sbb
pop
insl
iret
shrb
cmp
add
lock
jge
sarb
inc
je
push
pop
inc
mov
test
add
mov
jb
push
test
mov
loope
js
insl
bound
in
lcall
out
leave
jmp
cmp
daa
adc
fistpll
int
test
shrl
xor
jb
sbbl
test
sub
out
mov
jp
add
push
pusha
mov
cmc
sbb
push
fldt
and
nop
adc
fistl
outsb
insl
aaa
cmp
mov
jle
orl
mov
inc
gs
pop
cli
jae
xchg
mov
and
fsubp
and
mov
lret
icebp
xor
call
dec
sbb
popl
sub
push
cmp
or
sarl
outsl
ss
dec
int3
cmpsl
cmp
movq
pusha
test
cmpsb
je
push
xlat
cmpsl
out
xor
inc
call
pop
fstpt
pop
dec
sbb
push
jge
imul
xlat
mov
xchg
iret
push
dec
scas
pop
cmp
xlat
jg
or
popa
inc
add
scas
push
push
and
arpl
sub
and
push
adc
cmp
repz
rcll
fldl
hlt
add
mov
lods
fninit
mov
mov
ljmp
mov
icebp
mov
pop
mov
lcall
adc
cltd
mov
lods
add
pop
sbb
into
inc
mov
stc
jno
xor
mov
out
sbb
and
mov
mov
pop
mov
jae
and
pop
aad
arpl
in
jbe
pop
fcoml
pop
je
push
push
in
sbb
mov
pop
call
test
call
lcall
cmp
jo,pn
mov
outsb
adc
jge
ds
cmp
inc
loope
dec
daa
loope
and
push
js
cmpsb
arpl
ljmp
pushf
inc
inc
fisttpl
loop
ret
cmp
movsb
lret
xchg
mov
test
mov
movq
in
xor
mov
pop
into
lcall
cmpsb
push
fisttps
popa
rorl
add
jmp
mov
ljmp
xlat
mov
fidivs
mov
popa
rorl
andb
sbbl
clc
lahf
jb
jecxz
or
sub
jne
pop
negl
insl
fcmovnu
sbb
sti
loop
pop
mov
ljmp
add
xlat
sbb
pop
pop
nop
or
sar
mov
movsl
lds
lock
xor
sbb
sbbl
jmp
jp
sub
scas
jmp
cmp
mov
adc
xor
out
cmp
push
mov
fs
cmp
jo
pop
ja
stc
cmp
xchg
insl
loope
rorb
mov
adc
jbe
and
pop
xor
std
mov
test
test
loopne
mov
and
jge
loope
mov
mov
cld
mov
hlt
popa
pop
mov
je
push
clc
xor
mov
mov
cmp
mov
mov
xor
shl
dec
sub
fdivp
loopne
jge
arpl
jg
and
mov
lcall
hlt
sbb
push
or
cmc
inc
cmpsb
ret
mov
hlt
ds
jae
mov
xchg
mov
rcrb
lgs
dec
push
cltd
cmp
jle
push
adc
int
push
xchg
mov
adc
xchg
push
pop
or
scas
sbb
int
fimull
and
sbb
or
push
rorb
gs
sub
jne
inc
adc
aad
cmp
imul
push
inc
movb
mov
xor
push
pop
lahf
lret
lods
push
dec
jg
jecxz
or
jne
stos
lock
dec
jg
lock
insl
les
das
cmc
push
adc
mov
je
pop
clc
out
jl
jo
arpl
stos
dec
lods
mov
dec
or
leave
pop
lea
fsubrs
push
pusha
orl
cmpsl
incl
cmp
loopne
ficoms
or
dec
cmpsb
xchg
rcrl
mov
cmpsb
loope
cli
jp
push
rcll
movsl
inc
xlat
dec
inc
xchg
lret
pop
fmull
inc
loop
xchg
cld
xorl
xor
add
jb
test
push
sbb
lret
xor
lcall
inc
scas
dec
jg
popf
call
pop
xor
jg
fstpt
xchg
lea
jl
or
push
mov
mov
clc
adc
sbb
jb
jo
mov
mov
jmp
cltd
mov
rcrb
jle
cmp
jo
push
push
js
test
in
pop
lret
loope
ss
pushf
arpl
fimuls
ret
sbb
mov
lcall
rcr
rolb
inc
pushf
add
iret
push
icebp
mov
cmp
cmpsl
mov
add
adc
loopne
mov
hlt
stos
dec
ja
jge
bound
cmp
fsubp
push
in
push
mov
push
jno
mov
jp
cmpsb
and
test
test
push
mov
outsb
aas
stos
mov
jmp
lar
loop
cmp
xchg
pop
jmp
inc
ja
mov
dec
repz
mov
scas
cmp
icebp
xor
adc
out
mov
dec
pop
test
xchg
push
or
xor
lret
pop
ror
push
mov
mov
jae
aaa
sbb
mov
and
test
mov
repz
pop
xor
jo
mov
lret
fdivl
jle
outsl
insb
ret
movsl
lcall
sub
divl
dec
cmp
pop
push
outsl
xorb
movzbl
pop
leave
ja
mov
cmp
sub
cmp
lldt
pop
add
adc
ficoms
ds
js
sbb
sbb
lock
fcomp
jne
mov
ficoms
dec
scas
jmp
hlt
mov
sbbb
pop
fisubrl
mov
mov
out
xchg
cli
sbb
sub
jbe
jnp
xchg
popa
stos
cld
sti
push
cmpsb
flds
xchg
xor
lods
pop
pop
or
jb
dec
mov
popf
jle
push
push
jno
mov
pop
push
call
mov
ja
xchg
jnp
popa
sbbl
in
fmuls
sbb
les
mov
cmp
aam
or
and
jecxz
push
xchg
dec
hlt
iret
aas
icebp
in
test
add
lds
pop
xor
pop
fadds
mov
arpl
pop
pop
imul
rolb
push
mov
cs
ficompl
xchg
mov
cmp
lods
stc
jne
sbb
fistpl
andl
push
ja
ljmp
es
out
leave
jle
clc
ljmp
adc
insl
pop
dec
pop
jns
add
shlb
pop
push
sub
jge
js
jbe
popa
mov
inc
shrb
sbb
adc
dec
dec
mov
ja
sbb
push
dec
test
pop
int
mov
push
xor
jg
adc
jmp
xchg
jo
dec
imul
jl
ja
inc
or
scas
xchg
out
ljmp
repz
movsl
add
lcall
xchg
mov
in
cmpsl
int
jo
test
ficoms
popa
inc
repz
jns
push
adc
insl
in
and
cmpsl
or
push
out
clc
loopne
inc
xor
pop
mov
mov
in
popa
add
lock
mov
mov
out
fwait
jl
adc
fldcw
scas
popf
or
movb
mov
mov
pop
fidivrs
sbb
lcall
xchg
lock
je
lea
or
movl
popf
sub
out
push
addr16
cmp
ds
sub
sti
aam
cltd
mov
jge
sbb
push
inc
mov
and
or
rcll
sbb
mov
sub
aas
mov
in
das
jo
push
ds
popf
clc
or
and
push
inc
xor
jmp
out
push
and
inc
idivb
sbb
mov
sbb
in
mov
inc
jne
adc
call
scas
mov
add
jge
insb
cli
das
mov
and
mov
mov
push
fimull
add
adc
cmc
cmp
and
xor
shl
sahf
fdiv
pop
mov
jne
negl
xor
push
pop
jae
sub
scas
push
mov
xchg
sub
ljmp
adc
inc
mov
cmpl
sbb
jmp
cmp
cli
adc
push
daa
sbb
jecxz
xchg
cltd
inc
fisubs
scas
scas
pop
sub
and
mov
loope
ss
push
xchg
aaa
add
jae
mov
testb
inc
xlat
add
fwait
movsb
inc
lcall
scas
ret
xchg
mov
xor
outsb
mov
jg
and
or
fidivl
sub
lock
outsb
sbb
inc
out
xchg
pop
fstl
and
and
jmp
popa
mov
insb
jnp
mov
cmovg
sub
call
clc
pop
lcall
hlt
sub
les
push
in
into
aas
mov
ljmp
and
cli
cli
fsubl
mov
sub
sahf
orb
xor
repnz
repz
xchg
nop
outsb
mov
test
pop
inc
or
jne
cwtl
xchg
sahf
jle
cmp
orb
sub
daa
pop
pop
push
pop
pop
js
mov
push
notb
loopne
push
jl
mov
push
fcoml
mov
dec
std
and
shll
test
hlt
jmpw
sbbl
cmpsl
cmp
inc
mov
inc
hlt
adc
mov
int
xor
stos
clc
hlt
xor
lahf
fdivl
fidivrl
push
mov
sarb
xchg
lahf
ret
sti
subb
fidivl
ret
sbb
sti
and
jae
adc
iret
scas
adcl
pop
lret
push
inc
adc
mov
jge
rorb
xchg
push
or
xor
enter
pop
mov
daa
jo
insl
jg
call
cmp
pop
imul
sub
cmp
lods
push
ss
xor
fnstenv
out
cmpsb
jmp
pop
push
mov
or
or
mov
sbb
push
out
dec
mov
xor
outsb
jnp
sti
test
pop
rclb
je
mov
add
push
rcrl
pop
rcrb
stc
or
mov
outsl
sub
aas
xor
dec
mov
popf
add
pop
lods
xorb
bound
insb
sbb
xchg
and
push
mov
pop
das
adc
adc
pusha
pop
push
cmp
push
nop
push
jl
mov
pushf
sbb
jmp
pop
mov
add
jne
sbb
jge
and
loope
jecxz
out
jno
data16
sbb
incb
and
xchg
insb
sbb
add
mov
out
mov
shl
outsb
dec
frstor
push
push
sub
clc
fsubr
outsl
cmpl
in
aas
cmpl
movsl
repnz
or
mov
rclb
imul
cmp
push
loopne
rorb
not
pop
sub
out
popfw
rolb
jge
xlat
adc
shrl
sarl
jnp
jbe
dec
lcall
fmull
loopne
mov
out
mov
ja
xchg
scas
mov
repnz
sahf
add
push
xorl
gs
adc
mov
lcall
in
xchg
pop
inc
jg
daa
rcrb
adc
sub
rolb
out
rcrl
sub
mov
inc
xlat
inc
ja
call
mov
sbb
int3
mov
inc
jno
pop
jne
mov
xlat
mov
ds
scas
or
fdivl
jo
iret
repz
lcall
xor
ja
xlat
xor
scas
cmpsb
sbb
mov
fcmove
mov
hlt
xor
into
setge
cmp
cmpsl
ret
ficomps
std
lret
or
add
dec
out
push
xchg
fistpl
pop
ja
imul
js
mov
testb
xor
xlat
add
lods
pop
aaa
sbb
scas
sbb
xlat
mov
outsl
or
cmc
xchg
movsl
je
loop
ljmp
jmp
cmp
pop
insb
fimull
inc
ja
cmp
and
ret
in
sub
mov
and
ud0
inc
adc
sub
loop
mov
repz
mov
xlat
lahf
stos
mov
pop
push
jae
dec
push
data16
sbb
push
jge
pop
fstps
sahf
das
cmp
adc
and
xchg
jge
mov
shrl
jb
imul
stos
movsl
testb
test
in
mov
ss
insb
mov
fldl
out
in
in
xchg
mov
sbb
mov
fwait
mov
sahf
mov
pushf
ret
mov
in
sahf
loope
rclb
ds
iret
outsl
jp
sbb
in
enter
jbe
fsubp
subb
in
inc
stos
stc
mov
call
outsb
push
sub
imul
jmp
scas
inc
flds
test
inc
mov
and
pop
loop
imul
push
aam
adc
insl
fsub
adc
ret
adc
and
sbb
pop
ret
int
mov
outsb
sbb
push
lods
sbb
outsl
lods
out
loop
cmp
mov
mov
ret
icebp
enter
xchg
leave
dec
cli
cmpl
cli
mov
mov
shl
aaa
mov
rolb
aam
xchg
lcall
fnstenv
into
jecxz
mov
mov
mov
dec
xchg
aaa
scas
sbb
fs
dec
add
lahf
jbe
out
ljmp
mov
bound
movsb
ljmp
pop
pusha
xlat
pop
dec
repz
jl
ret
cli
mov
jle
and
mov
aaa
imul
push
loop
or
inc
xlat
jnp
pop
iret
les
lds
outsb
sbb
mov
push
les
int
push
je
or
xor
cmpsl
insb
mov
jnp
movsb
jb
cmp
sbb
sbb
hlt
pop
jp
mov
test
insb
push
test
push
stc
hlt
cmpl
lea
scas
idivl
sarl
insl
pop
lcall
jmp
jmp
dec
xchg
xchg
and
add
arpl
adc
mov
int3
loope
inc
rorb
jle
ficoml
mov
inc
push
cmp
xchg
xchg
inc
enter
add
popa
mov
clc
sub
popa
std
nop
call
xor
movsb
xchg
push
dec
and
xor
xchg
outsl
std
xchg
mov
fldenv
push
sub
cmp
pop
ss
xlat
adc
and
adc
fldt
arpl
inc
xlat
jne
xchg
clc
pop
or
testl
test
cmpsl
or
mov
imul
adc
outsb
ret
mov
dec
cmc
jl
negl
mov
pop
js
pop
mov
insl
and
inc
call
shlb
cmp
rcr
in
push
xor
push
pop
pop
jmp
mov
jae
jmp
jge
inc
adc
outsl
jns
pcmpeqb
or
pop
insb
inc
adc
mov
std
push
cmp
or
data16
fs
lcall
cmpb
mov
mov
testl
iret
pusha
mov
scas
push
fcmovbe
xchg
subl
fmul
jbe
daa
jg
pop
lods
jecxz
mov
aaa
imul
or
mov
sbb
loop
cmc
popa
movsb
mov
inc
cmp
das
mov
imul
call
or
bound
in
les
xchg
push
call
scas
ss
cmp
jb
in
inc
xchg
xchg
xchg
or
inc
cmp
cli
mov
icebp
cmp
call
clc
mov
jp
jl
fdivrl
push
cmp
in
rorb
mov
pop
mov
sti
mov
add
insl
fisttpll
jo
mov
adc
push
sub
jmp
fstpt
jp
or
addb
add
fcmovb
div
inc
jae
in
stos
rcll
pop
mov
mov
aas
push
stc
inc
jle
mov
push
call
filds
int
clc
push
add
pop
int
inc
pop
cmp
cmpsl
dec
sahf
popa
inc
pop
lahf
in
pop
testl
icebp
pop
bound
or
sbb
mov
sub
cs
call
mov
or
pop
push
dec
cld
flds
ret
xchg
lods
mov
in
xor
sub
and
adc
mov
sub
loopne
cmp
dec
pop
xchg
andb
fsubr
jns
sarl
mov
push
ffree
mov
jns
js
gs
or
scas
sbb
popf
sti
xor
and
sbb
mov
push
push
mov
fcoml
pushf
hlt
popa
and
inc
into
out
jns
movl
jg
sahf
mov
loopne
pop
gs
arpl
add
iret
push
out
test
and
pop
decb
add
jne
rcrb
push
adc
mov
jne
xor
or
inc
mov
cs
dec
inc
clc
loop
jae
lret
add
mov
mov
int
sub
xchg
popf
loope
movl
in
insl
fildl
leave
std
push
inc
rcrb
sub
into
outsl
and
mov
cmp
aas
imul
inc
loopne
cli
cmp
outsb
dec
leave
mov
lock
add
cmp
lods
jle
insb
je
call
mov
ror
mov
mov
js
inc
inc
in
std
not
mov
cmp
std
popl
orl
sub
cli
mov
mov
xchg
mov
mov
and
dec
mov
fwait
push
cltd
xchg
hlt
lds
pop
mov
jns
std
sbb
inc
sbb
loop
adc
dec
test
fistl
mov
lret
out
shlb
enter
fimuls
jle
mov
cs
mov
hlt
push
push
add
dec
loopne
out
mov
ret
sar
bnd
and
mov
cmp
int3
mov
cmc
nop
cmpl
add
cmp
insl
pop
push
test
cmc
push
inc
push
mov
cli
push
insb
cmpsb
pop
hlt
add
ss
cmp
lret
jl
dec
mov
mov
in
pusha
jecxz
ds
push
das
push
mov
ret
fldl
stos
mov
xchg
mov
mov
or
sub
or
cmp
push
sarl
mov
add
popl
mov
push
mov
fdivrp
daa
add
inc
sub
stc
sbb
xor
or
push
push
mov
je
pop
jae
sbb
fistpl
in
sub
mov
mov
outsb
sbb
addr16
pop
lahf
bound
pop
jne
jg
pop
pop
dec
push
xor
dec
adc
rol
ficomps
and
jnp
push
adc
ljmp
mov
jecxz
fdivrs
scas
insl
movsl
inc
jge
imul
jae
jb
andb
cmp
sub
stos
imul
inc
scas
or
movsb
test
pop
ja
rcll
cmp
jmp
jne
dec
mov
mov
dec
nop
push
xchg
adc
std
pop
out
pushf
inc
ss
cmc
lds
popf
nop
adc
inc
sub
sti
lods
bound
push
insb
jl
mov
lock
sbbb
add
shrl
fs
out
pop
loope
shrb
lret
sbb
pop
jns
iret
call
and
push
sub
sbb
push
or
das
mov
sub
dec
add
sbb
pop
sbb
insb
mov
xor
jmp
adc
push
push
sti
xchg
stos
sbb
js
push
mov
sub
dec
arpl
scas
lret
xor
mov
insb
push
rorl
push
jnp
out
mov
fstl
jmp
mov
outsl
pop
sbb
out
js
mov
xor
xchg
mov
ds
fsubr
pop
cmpb
pop
mov
mov
pusha
in
push
jg
inc
jnp
dec
push
int
sub
into
out
and
divb
pushf
mov
iret
xchg
dec
jae
inc
cmp
mov
xchg
hlt
sbb
add
fidivrs
mov
adc
push
xchg
sbb
out
aaa
and
fdivl
cmpsb
jecxz
std
sub
arpl
xchg
xchg
rclb
test
mov
sbb
int3
enter
mov
jmp
mov
je
adc
and
sti
xchg
and
mov
ljmp
fmuls
idiv
mov
lods
or
ss
inc
xor
cmp
xchg
sbb
shl
je
mov
shlb
int3
inc
pop
hlt
pop
mov
daa
mov
lretw
push
cmp
sbb
fmulp
sbb
scas
add
outsl
xchg
popf
mov
mov
adc
sti
push
aam
fwait
mov
add
arpl
pop
dec
lods
jg
jne
pop
mov
pushf
shr
mov
orl
jns
aad
xchg
loope
sbb
into
imulb
push
js
cmp
push
das
xor
out
div
add
pop
push
cmpsb
nop
in
mov
mov
mov
test
fsubr
or
pop
lea
mov
pop
popf
dec
orl
jl
pop
push
lret
lock
imul
or
fisubl
inc
mov
test
jbe
test
popa
int
mov
sbb
into
pop
gs
inc
jnp
inc
popf
or
sti
jge
jb
pop
inc
je
fs
jmp
jb
cmp
add
jmp
mov
mov
das
lcall
and
or
stos
push
outsb
ficoml
jo
xchg
out
add
fsub
push
mov
test
dec
xchg
shlb
mov
xchg
ret
testb
ror
jne
in
lret
lcall
cs
xor
stos
mov
adc
mov
and
cmpsb
rcll
andb
jge
es
cmp
pusha
sub
jmp
push
mov
inc
enter
jne
mov
cmp
movsl
lds
push
mov
sub
add
test
jmp
xchg
je
ljmp
mov
push
cmp
outsb
addb
xchg
popf
add
rorb
dec
out
ja
shrl
in
xchg
jno
stos
cmp
add
fiaddl
inc
adc
rcrl
push
pop
mov
adc
das
dec
dec
mov
jbe
not
sub
pop
xchg
adc
pop
rcrl
aad
inc
call
inc
jg
add
jae
addr16
outsb
lock
ljmp
or
cmpsl
and
xor
mov
daa
mov
enter
ret
outsb
add
mov
sub
cmp
jbe
or
cs
jmp
xchg
shlb
push
cltd
jle
or
ss
pop
cmp
xor
imul
push
test
call
std
dec
mov
xchg
cmc
cmp
cltd
sub
ljmp
jo
fnstcw
outsb
imul
cmc
sbb
gs
inc
cmp
cmc
cmp
cmp
push
xchg
pop
mov
rclb
inc
mov
jmp
aas
ror
jo
movl
xchg
mov
add
frstor
mov
sti
bound
mov
or
adc
jecxz
cli
sbbb
push
scas
ss
push
rcrb
out
fsubrs
and
fistpl
and
cwtl
push
sbb
xchg
sbb
mov
mov
adc
push
or
pop
sahf
mov
or
ljmp
loope
je
iret
mov
lods
jne
fcomp
xchg
push
cmp
je
pop
push
lret
xchg
mov
mov
push
xchg
push
mov
adc
sahf
stc
jle
mov
jb
into
xor
pop
pushf
inc
xchg
pop
cwtl
and
pcmpeqd
enter
ficomps
cmp
sti
or
ret
insl
imul
ds
cltd
insb
call
fisttpl
xor
mov
sub
stos
loope
push
mov
xlat
roll
pop
shlb
push
mull
jl
mov
mov
and
jns
insl
test
pop
dec
or
mov
pop
popa
popf
push
adc
scas
fsubrl
sbb
imul
je
sbb
cwtl
insb
sub
add
push
add
mov
std
jecxz
js
inc
les
xor
in
or
push
inc
mov
mov
pop
cmpsb
filds
dec
stos
sub
fwait
cmp
and
shrl
push
pop
sbb
bound
sarl
jnp
sti
add
lock
sbb
insb
and
arpl
jb
fisubrs
push
ja
notl
cwtl
ds
xchg
pop
add
fdivl
aaa
int
ljmp
lods
or
xor
xor
scas
lret
and
ret
sbb
pushf
push
pushl
jbe
loope
xor
ret
inc
gs
lea
cmp
and
xor
jnp
xor
mov
je
sub
sub
and
push
push
pusha
inc
pop
fmuls
flds
scas
popf
es
mov
mov
into
dec
pop
or
int3
mov
adc
xchg
imull
mov
or
pop
cmp
push
add
rcll
inc
stos
das
cmp
xchg
aaa
adc
lea
or
dec
adc
addr16
or
pusha
std
inc
frstor
pop
je
cs
cmp
cli
inc
mov
xor
mov
sbb
mov
enter
loopne
mov
xchg
rcl
lret
mov
xor
jbe
xchg
or
inc
mull
jae
push
xor
xchg
jno
sub
adcb
mov
jle
movsb
and
mov
xchg
jbe
sub
popf
int
subl
testb
test
loope
cmp
sub
jp
pop
rcr
inc
lods
outsb
jecxz
loop
jne
dec
pushf
test
shrb
jmp
ficomps
sbb
hlt
mov
aas
push
dec
sbb
out
xchg
mov
scas
push
loop
shlb
lock
lds
aas
out
movsl
jo
cmp
or
mov
lods
ss
cmp
sub
je
sbb
mov
fsubrl
push
repz
mov
cmp
mov
mov
and
jmp
mov
rcll
mov
mov
jle
sbb
xchg
stos
bound
mov
clc
pushf
sbbb
leave
ret
push
cmpsb
xchg
mov
insb
adc
and
fst
sub
imul
xchg
mov
dec
movsl
aam
pop
mov
adc
icebp
aam
popf
cltd
test
test
arpl
subb
mov
pop
jb
mov
or
scas
out
andb
insb
xor
xchg
mov
test
out
mov
sbb
and
adc
shll
inc
mov
movsb
rcl
out
scas
scas
stos
in
in
sub
les
sahf
jge
push
adc
pop
testl
clc
mov
out
xchg
js
int3
das
mov
prefetch
inc
inc
lret
cmp
stc
mov
sti
ljmp
inc
inc
icebp
ja
shlb
pop
xchg
lds
test
mov
pop
jge
out
adc
push
mov
divb
add
sbb
pop
adc
imul
shl
xchg
mov
mov
or
test
stos
ss
push
add
outsl
inc
push
jmp
sbb
pop
add
or
and
mov
mov
cmp
clc
addr16
push
adc
out
rolb
push
rcl
mov
xor
dec
clc
stos
jg
cmc
hlt
cmpsb
or
in
xor
cmc
lds
xor
arpl
aad
push
mov
push
nop
mov
data16
mov
sub
cmp
mov
loope
add
jns
lods
jnp
jmp
arpl
add
movsl
mov
ja
pushf
cmp
push
add
mov
mov
jae
cli
jp
pop
fcoms
sbb
xor
sbb
jp
lahf
adc
or
ret
sbb
movsb
mov
shlb
inc
shlb
ret
mov
int
xor
lcall
lcall
xchg
addb
jl
mov
imul
mov
xor
je
mov
add
scas
in
ret
stos
loope
push
daa
push
adc
mov
add
dec
imul
fcoms
mov
sti
jmp
xor
outsl
jp
xchg
scas
jo
xor
and
pop
xchg
sbb
dec
or
sbb
sahf
mov
or
js
sub
ljmp
mov
lods
push
dec
cmp
imul
out
pop
mov
lods
inc
sbb
xor
mov
or
mov
nop
or
out
push
and
sbb
pop
inc
add
pusha
fbstp
jecxz
ss
add
push
pop
in
test
cmpsb
das
mov
push
adc
les
cmc
shll
cmp
shrb
jp
mov
neg
adc
xchg
mov
dec
cmp
frstor
ljmp
jmp
sbb
arpl
or
dec
aas
push
popf
je
aas
jb
ret
in
call
push
mov
fwait
sbb
sbb
mov
or
dec
popa
push
mov
or
pop
std
loope
inc
clc
mov
xchg
daa
pop
insb
xchg
sbb
adc
shrl
cmp
mov
test
cs
jns
call
jge
cmp
jno
pop
shlb
adc
lret
cmp
rcrl
dec
and
cmc
ljmp
std
aas
hlt
jmp
stos
sahf
add
jo
aaa
pop
or
inc
fsubs
fidivl
push
in
push
les
int
sbb
jne
pop
sub
jp
pop
fsubl
dec
idivl
cmp
push
mov
dec
jnp
adcl
inc
ja
mov
xchg
das
push
cmovns
mov
mov
and
stos
test
adc
jns
mov
or
xor
out
cmp
icebp
xchg
mov
sbb
pop
fstpl
dec
dec
pop
das
mov
add
in
jmp
pop
inc
sbb
shl
aaa
sub
daa
push
out
into
fwait
out
aad
cmpsl
xchg
xor
scas
push
ret
pop
insl
loop
add
cmp
and
dec
insl
add
rorb
jl
fcoms
cmp
xor
cltd
loopne
push
ljmp
insb
cmp
and
jb
cmp
leave
rclb
dec
jae
mov
std
adc
mov
outsb
mov
aas
xchg
js
add
mov
stos
and
mov
test
jnp
cwtl
sahf
pop
sub
test
jnp
xor
imul
add
mov
xchg
and
loopne
mov
mov
outsb
aas
mov
or
adc
push
daa
hlt
xlat
pop
push
lret
sbbl
cmc
sarl
out
imul
not
jne
sub
inc
xor
push
inc
jg
aas
jnp
nop
jo
xor
repz
pop
pop
mov
movb
lods
enter
fstp
aaa
sbb
mov
cmp
aad
mov
push
inc
pushf
add
push
mov
or
pop
daa
enter
stos
pop
dec
pop
xchg
and
fidivs
cmp
mov
mov
jno
push
loopne
pop
movsb
rorl
push
lahf
lds
cmp
add
stc
mov
insl
push
xorl
loop
cmpsl
pop
loop
iret
push
fdivrs
add
mov
mull
data16
pop
add
xchg
sub
jno
mov
sub
insl
or
ja
cmp
jp
mov
jnp
in
pop
mov
add
fldcw
icebp
addr16
xor
sbb
roll
mov
xor
mov
mov
mov
or
lock
das
leave
sbb
lret
xchg
out
inc
fisttpl
sbb
cmp
mov
or
adc
clc
inc
push
cmpsb
push
ja
js,pt
mov
loopne
pop
push
xor
aam
mov
adc
cmc
xor
mov
push
ja
add
lea
lods
mov
je
loope
jge
add
xor
cmp
cli
push
cmp
es
std
jbe
movsb
ja
mov
notb
mov
cli
cltd
outsb
adc
bound
icebp
test
xchg
or
je
repz
and
jnp
popa
in
adc
mov
jne
pusha
inc
in
push
je
sub
dec
mov
jnp
stos
fldenv
mov
in
int3
mov
cmp
fstpl
sti
sbb
inc
mov
lahf
imul
cmc
sbb
pop
loop
xor
sbb
test
jle
add
into
fisttpl
adc
test
adc
xchg
xlat
pop
arpl
pop
into
cli
dec
push
cmc
test
hlt
rcll
jnp
mov
mov
out
add
mov
leave
sarb
mov
cmp
cmp
loopne
mov
pop
xchg
or
data16
jb
and
xchg
adc
sbb
push
mov
or
xor
mov
lahf
out
addr16
sbb
aad
jge
bound
mov
int
push
hlt
lret
cs
and
out
shlb
addl
shll
call
insl
mov
cwtl
add
inc
add
jge
push
sbb
cmp
mov
xlat
aas
xchg
xchg
and
ljmp
popf
and
out
add
push
test
ret
iret
push
out
add
cmp
sub
push
sub
std
outsb
int
fidivrs
or
cltd
add
pusha
aas
dec
and
fs
insb
cld
insl
mov
loopne
je
aad
xor
das
std
dec
popf
insl
push
fsubr
lcall
lods
jo
jns
insb
out
sub
popf
inc
cmp
sbb
or
xchg
sub
sti
sahf
loop
sub
xchg
push
pop
ret
add
rcll
mov
pop
mov
pop
iret
test
cmp
push
imul
push
imul
push
loop
xlat
repnz
xor
inc
jns
pusha
mov
popa
idivl
addr16
popa
pop
mov
lahf
add
pusha
jg
pushf
test
lcall
mov
mov
push
sarl
data16
dec
setge
maxps
popf
cmc
nop
ficompl
stos
jne
mov
pop
sti
sub
and
push
xchg
jle
mov
push
clc
xchg
adc
mov
std
push
cmp
and
ds
push
fimuls
sbbb
or
dec
mov
dec
mov
insl
mov
push
xchg
jge
xchg
jge
jecxz
repnz
mov
cli
movsl
sti
or
and
insl
mov
xchg
jne
clc
insb
popa
insl
jae
outsl
pop
ljmp
test
cmp
sub
xchg
xor
sbb
push
adc
cmp
roll
sub
dec
popl
fimull
gs
sub
pop
cmp
or
pop
jno
cmpsb
cmp
sti
add
lods
sbb
jle
pop
mov
dec
iret
insl
cmc
mov
inc
sbb
mov
jns
sti
pop
outsl
xchg
imul
loopne
repz
jne
fwait
push
xlat
in
lret
lods
add
out
jmp
call
jl
ficompl
scas
lds
arpl
jns
loopne
pop
add
enter
leave
fisttps
or
xchg
stc
mov
dec
pop
outsb
movsb
xor
xlat
mov
je
sub
push
addr16
mov
jle
fidivs
xchg
push
call
dec
mov
js
inc
jb
sbbl
dec
jnp
jge
fldl
vrsqrtps
fldt
push
ret
inc
insl
cmp
bnd
mov
cmp
and
inc
imul
dec
pushf
mov
das
outsb
xchg
cmp
jle
mov
mov
movsl
int3
scas
out
mov
arpl
scas
dec
dec
cmc
stos
clc
std
jecxz
aas
jl
ds
loope
ret
fidivrl
jmp
icebp
aam
sub
pop
pop
push
xchg
movsl
das
enter
push
xchg
icebp
sbb
push
fdiv
rcll
jnp
fs
xor
shr
stos
cmp
insl
out
sbb
btl
cwtl
stos
and
cmp
outsl
bound
xlat
repz
sub
pop
aas
xor
ja
xchg
shlb
in
add
mov
in
nop
pop
jo
out
xchg
clc
jecxz
imul
call
inc
push
scas
loope
sbb
sahf
or
add
cs
inc
iret
pop
fldl
adc
mov
addl
je
jns
divl
push
sbb
aad
outsl
push
out
in
lcall
in
jg
mov
les
cmpsb
insl
imul
jl
out
mov
rolb
lahf
lahf
inc
fsubrs
mov
add
das
es
repnz
or
loop
test
mov
mov
arpl
insl
std
insb
ror
sub
adc
andl
jmp
out
fsub
mov
vmovddup
hlt
fadd
push
int
jecxz
fs
jb
popf
push
aas
clc
insb
icebp
in
stos
or
dec
adcl
jno
xor
cmp
addr16
jge
pop
inc
xlat
mov
dec
sub
xorb
cmp
loop
repnz
arpl
je
xchg
loope
xor
scas
int3
jno
push
push
or
cld
pusha
mov
jbe
in
fdivrl
scas
enter
add
je
pop
xor
shr
jae
cld
sbb
add
aas
cmp
pop
shlb
or
je
fnstcw
dec
jge
jb
in
in
mov
or
jecxz
push
jns
cli
loopne
jno
inc
stos
mov
and
cmp
jns
push
movl
xchg
cmpps
jne
test
adc
jo
inc
xchg
mov
pop
and
jnp
in
pushf
loope
pop
incl
jle
sub
addr16
pop
outsl
xchg
mov
ds
enter
mov
xor
imul
lock
in
cmpb
sub
pop
pop
aaa
inc
lds
imul
iret
scas
xor
shlb
movsb
nop
int
in
pop
ds
inc
aaa
aaa
sbb
push
cld
adc
cmp
clc
sub
mov
pop
mov
mov
leave
jne
fcmovu
decb
xchg
mov
pop
xor
adc
push
test
stc
in
mov
jmp
jge
push
ds
add
mov
outsb
mov
pop
or
in
push
je
shrb
imul
or
jb
sti
outsl
sti
mov
xorl
xor
sub
xchg
mov
lea
aam
fbld
testb
dec
int3
sti
dec
hlt
sub
aad
pop
mov
push
pop
pushf
int3
xor
ret
subb
aaa
push
or
sbb
rclb
lret
sahf
sbb
arpl
clc
sbb
int3
stos
or
data16
lods
mov
xchg
popa
jle
loope
scas
stc
cmc
and
cli
inc
mov
jmp
lret
fs
xchg
mov
or
hlt
pop
in
insb
lock
jg
outsl
mov
xor
lods
pop
test
int
xlat
cmp
sub
andl
push
sbb
je
stos
std
test
ret
xchg
neg
jnp
add
push
addr16
cli
push
mov
xor
cwtl
push
xor
es
stos
imul
shrl
ret
clc
push
aas
adc
jno
pop
xor
push
and
pop
push
test
mov
dec
call
ds
scas
or
or
ja
xor
mov
lahf
mov
cmp
cmp
rolb
in
mov
dec
push
fcmovnu
popa
inc
in
xchg
pop
or
mov
xchg
xchg
adcl
xchg
fldcw
dec
cmp
ljmp
stc
ficoml
jbe
or
pop
xor
mov
cmp
negl
flds
aam
inc
push
loope
jns
mov
jge
xchg
pop
pop
mov
dec
test
mov
ss
dec
insb
mov
lock
mov
cmp
xor
rol
ss
sbb
movsb
or
add
arpl
push
insl
push
or
push
xchg
mov
subl
test
mov
and
cmc
lcall
or
mov
test
mov
xor
push
fs
loope
popa
fidivrl
push
outsb
inc
mov
mov
push
cmp
xor
lcall
ficompl
or
into
roll
dec
in
inc
inc
cmp
mov
jmp
loopne
mov
repnz
fdivs
xor
fs
xchg
jmp
mov
push
sbb
dec
pushf
push
mov
inc
bound
cwtl
outsb
out
dec
cld
xor
test
cmp
mov
int3
jecxz
lds
adc
lahf
pop
pop
push
sub
mov
xor
ljmp
pusha
cwtl
sbb
testb
mov
int
ljmp
add
sbb
jle
sbbb
mov
dec
add
ss
mov
push
jb
je
int
pop
push
test
sti
add
lret
insb
mov
and
and
mov
mov
jo
inc
jmp
add
adc
pop
mov
nop
fisubrs
pop
sbbl
push
inc
jnp
and
dec
inc
push
cld
mov
cld
inc
jl
inc
mov
shlb
jbe
inc
sbb
in
inc
push
aaa
std
pop
bound
leave
pop
push
push
mov
insb
add
popf
add
rorl
pop
push
ret
xor
pop
mov
pop
pusha
sub
sbb
adc
add
adc
fnstcw
inc
sub
test
ss
pop
lfs
es
sub
jns
lock
push
fldcw
andl
test
ljmp
rol
pop
sbb
leave
insl
test
hlt
push
dec
and
and
cmp
cmp
mov
and
push
sahf
addr16
pop
lds
inc
pop
cmp
jno
ret
rcll
mov
out
popa
mov
lds
adc
or
cld
rcll
mov
xchg
scas
lcall
jle
jge
ret
lods
dec
pop
jl
lcall
push
mov
int
lock
jo,pt
cmp
jp
add
mov
pop
cmp
jne
dec
mov
fisttpll
push
ret
inc
mov
popf
jmp
pop
jns
jnp
xchg
mov
adc
aam
test
xchg
loopne
mov
mov
arpl
paddq
sub
repnz
xor
loop
xchg
jo
int
fs
lea
rclb
mov
add
rcrl
ret
cmp
push
out
orl
das
repz
je
fadds
lock
in
jp
mov
cmp
je
sbb
inc
push
push
ljmp
mov
dec
in
js
insb
mov
adc
push
push
testb
xchg
ret
scas
scas
outsl
je
xchg
int3
pop
dec
mov
add
pop
inc
jo
push
movsl
in
mov
pop
cltd
add
cmp
mov
or
cs
mul
in
pop
mov
adc
pop
pusha
mov
add
shlb
xor
das
outsb
adc
mov
stos
push
idivl
icebp
insb
shrl
or
and
add
inc
jg
xchg
mov
xor
in
lds
pop
fwait
mov
outsb
push
pop
sbb
outsb
sbb
inc
out
jns
fcmovnb
xor
xchg
add
jb
call
sub
add
inc
rep
loopne
mov
faddl
addr16
popa
fimull
mov
jle
lret
xchg
lock
jp
inc
or
sub
adc
pop
jp
xchg
jle
jge
andps
push
xor
xchg
push
add
les
imul
sub
or
inc
pop
mov
push
pop
cmc
and
push
pusha
sti
fisubrl
cmp
call
mov
mov
mov
clc
scas
mov
or
int3
xor
ret
xlat
aam
cli
test
rolb
out
mov
sbb
dec
inc
cmp
rcrb
mov
push
pop
mov
data16
fst
ds
or
aad
inc
inc
pop
je
xchg
mov
hlt
ret
daa
pop
xor
adc
insl
loope
dec
dec
pushf
push
adc
inc
push
out
fldenv
mov
xor
push
lods
mov
fcomps
ds
adc
pop
mov
mov
or
adcb
test
test
call
lahf
ss
inc
sub
call
xchg
test
sub
shrl
fldl
gs
or
bnd
mov
jo
movsb
mov
add
pop
aas
pop
xchg
push
fildl
mov
jle
in
jg
ficomps
sbb
push
aas
fcoms
ficoml
inc
fwait
cs
cmp
js
push
jg
inc
arpl
add
cmp
jo
cli
add
sti
fdivs
popf
jmp
cmp
ret
inc
or
adc
loopne
inc
xorl
and
call
xor
cmpsl
lods
not
insl
pop
or
and
movsl
inc
inc
divb
jecxz
outsl
jp
adc
dec
popl
mov
aam
shlb
jnp
test
rolb
or
cmp
mov
jecxz
xchg
dec
lods
push
scas
mov
data16
or
sub
sub
push
cmpl
or
xor
cmp
or
jae
mov
lods
fcom
add
sbb
pop
cmp
mov
pushf
adc
rorl
sub
lods
pop
jmp
insb
xchg
add
loop
cmp
test
lret
int
and
repnz
popf
fldt
mov
cmpsb
jp
push
fcoml
sbb
out
inc
in
xchg
out
mov
add
inc
and
pop
inc
ja
adc
cmp
das
jbe
inc
mov
mov
jg
jge
orl
lret
into
mov
jp
jbe
mul
ss
xchg
sub
inc
inc
push
sti
sub
inc
xor
pusha
jl
cs
fisubs
or
scas
jmp
pop
sub
xchg
loope
out
std
mov
call
inc
adc
fs
pop
call
aaa
and
rorb
lock
ficoms
dec
xlat
or
jg
xchg
gs
shlb
add
int3
dec
fisubl
mov
fstpl
sbb
mov
mov
lods
lcall
out
jnp
aaa
cwtl
mov
inc
xchg
mov
mov
xchg
mov
jg
mov
imul
cmp
push
addr16
popf
popa
add
push
sbb
xchg
fisubs
jno
mov
sub
push
loop
dec
test
ja
ret
mov
lret
cmpb
insb
dec
mov
inc
fcomip
rcr
subb
pop
aad
scas
mov
dec
fidivrs
or
mov
out
out
pop
sub
in
and
mov
cmc
xor
ret
pop
xor
roll
add
fistl
mov
cmp
testl
sbb
nop
gs
aaa
sbb
pop
outsb
enter
call
and
mov
dec
cmp
popw
mov
shlb
jne
jmp
jno
out
push
jo
outsb
in
notb
aam
sbb
mov
xlat
mov
sbb
mov
insl
sub
cld
cli
inc
lods
clc
in
emms
or
fdiv
xchg
lock
pop
inc
push
mov
or
aam
inc
cs
push
mov
in
xchg
adc
pop
mov
cmp
sti
jno
jge
and
mov
inc
cmpsb
ljmp
sarl
fldt
cld
js
adc
xchg
insl
inc
int
insl
std
test
and
pop
jl
hlt
xor
int
inc
and
mov
aad
dec
sub
pop
pop
and
push
std
dec
lods
pop
jle
scas
mov
mov
fimull
pop
mov
and
mov
adc
mov
andb
sbb
fucom
push
push
aaa
ret
fsubrs
xor
pop
pop
fisubrs
jbe
shlb
cmp
int
adc
xchg
mov
sarl
jl
aas
mov
push
xchg
cli
sbb
xchg
pop
test
pop
adc
lcall
jbe
xchg
sub
push
ret
pop
xor
jno
xor
data16
cli
sub
jp
mov
cmp
jge
sbb
mov
sub
and
and
not
push
adc
mov
push
adc
push
mov
loope
xor
sti
lret
mov
sub
add
mov
clc
cmpb
inc
outsl
mov
push
mov
inc
xchg
xchg
lea
mov
inc
data16
mov
pop
mov
mov
cltd
outsl
aaa
ljmp
loop
ss
ljmp
dec
push
pop
inc
cmp
scas
dec
test
icebp
aam
pop
js
xchg
mov
and
adc
testl
add
and
icebp
mov
clc
push
iret
insl
mov
jne
pop
xchg
mov
scas
xchg
jns
adc
cltd
pop
add
push
xchg
scas
jg
add
lods
mov
jbe
push
xor
jnp
sti
roll
mov
shl
arpl
adc
cltd
jae
cwtl
call
gs
pop
arpl
xchg
notl
xor
and
arpl
cltd
js
jno
popa
jge
sbb
call
dec
xor
push
fimull
aad
sub
fdivs
pusha
outsb
sbb
stos
fs
shl
loope
xor
or
jp
ljmp
dec
jecxz
shlb
cmc
mov
xchg
sbb
in
insb
aas
js
imul
push
push
repz
xchg
mov
stos
xchg
nop
cli
pusha
ss
mov
lods
pop
ret
jmp
jmp
je
pusha
addb
jl
cltd
idivb
loopne
das
outsl
cli
popa
sbb
sbb
mov
xchg
jb
xchg
or
lahf
pop
xor
add
mov
stc
pop
stos
jmp
sbb
mov
imul
ret
insl
pop
pusha
inc
mov
xchg
dec
add
dec
punpcklbw
jecxz
sub
orb
iret
mov
pop
lea
dec
std
push
sahf
scas
outsb
jne
lret
cmp
lcall
pslld
loopne
jl
ret
pusha
fs
into
xchg
icebp
mov
fstl
cmpl
dec
fnstenv
fstps
stos
or
dec
lcall
xchg
sbb
outsb
fwait
jbe
jg
jo
stos
push
flds
andl
xor
sub
sti
out
jno
push
insl
cmpsb
and
dec
imul
cmpsl
fmuls
sbb
jl
movsl
icebp
sub
jnp
sub
leave
or
adc
ds
jne
pop
fnstsw
adc
insb
xor
sbb
mov
or
fsubrs
inc
pop
ret
push
movsb
sbb
inc
cli
push
mulb
in
sti
push
insl
xchg
daa
push
jge
in
aaa
xchg
mov
stos
js
lods
sub
lcall
mov
mov
pusha
jnp
imul
jle
push
into
rolb
lret
or
jg
rolb
cmp
add
cmp
mov
lret
xchg
movsb
xor
shlb
inc
push
std
enter
sbb
push
stos
jge
dec
jge
mov
jb
imul
xor
xor
hlt
push
movaps
and
push
adc
outsl
jnp
mov
in
cmc
mov
pop
andl
and
cmp
loope
adc
mov
ror
gs
mov
jns
jle
cltd
fucomp
push
lods
sub
jb
data16
fadd
js
in
xchg
sbb
rcl
pop
mov
cli
out
sub
mov
insb
sub
ficoml
or
mov
cld
rorb
mov
xchg
fadd
test
iret
cmc
in
cmpsl
push
fistpll
fcmovu
cmp
scas
div
inc
or
add
add
icebp
jo
inc
add
imulb
xor
popa
pop
xlat
xchg
popa
mov
xchg
or
lahf
xchg
and
add
sti
je
cltd
addr16
jg
outsl
adc
mov
xchg
popf
loope
push
inc
call
mov
aad
or
xor
outsb
adc
out
dec
in
loop
lcall
inc
mov
mov
sbb
pop
fisttps
cs
mov
jecxz
pop
jmp
xor
pop
pop
ret
ret
test
jae
mov
or
stos
sbbb
add
in
pusha
ljmp
sbb
inc
xor
std
leave
outsl
and
std
call
lods
adc
ret
in
adc
popa
xlat
lea
jg
mov
pop
repnz
loope
ret
xor
iret
std
loope
dec
add
pop
mov
or
cmp
scas
dec
movl
out
mov
dec
ret
outsb
into
adc
inc
xchg
push
pusha
pop
insl
testl
dec
adc
aam
sub
jg
sbb
adc
shlb
dec
pop
xor
sub
lret
aam
push
cmp
mov
push
xchg
mov
jl
sub
xor
stos
loope
add
and
cwtl
dec
je
pop
ja
pop
ljmp
cmpsb
fstpt
jbe
push
and
cmp
ljmp
inc
mov
lods
das
xor
out
int3
adc
inc
outsb
pop
mov
inc
cmc
push
loop
xor
cmp
ss
pop
stos
sub
ss
das
sbb
mov
adc
int
divl
repnz
fcmovu
fiadds
jmp
or
add
sub
jl
sub
sbb
outsb
aas
nop
rol
repnz
cs
insb
xlat
ss
dec
call
lods
add
push
add
cld
addr16
mov
fcmovnbe
sahf
fldt
mov
xor
pop
push
ds
inc
pop
xchg
cwtl
dec
jbe
inc
mov
jnp
pop
leave
add
jbe
les
jp
mov
ss
cmp
jle
insl
xchg
or
inc
rcrb
popf
jg
in
les
aam
pop
xor
xchg
push
mov
inc
icebp
rclb
jmp
mov
lcall
jp
mov
xorl
mov
int
xchg
xorb
cli
xchg
push
loopne
mov
add
jge
dec
out
les
mov
mov
pop
and
push
js
push
lods
out
mov
xchg
push
sahf
imul
mov
jb
lock
xlat
fisubrl
ret
jmp
cmp
repnz
jne
decb
shlb
cmovbe
rorl
jne
jge
inc
icebp
int
lds
mov
jp
or
push
xor
in
mov
lcall
out
pop
jl
imul
lret
add
in
sub
mov
ret
xor
setle
shrb
jl
loope
fdivrl
xchg
enter
ja
mov
clc
jnp
rorl
cli
cmp
jne
jae
xlat
jge
sbb
mov
or
dec
xchg
ret
call
mov
pop
dec
loope
fwait
out
adc
jnp
add
clc
rcr
sbb
add
stos
call
ds
pusha
inc
ret
dec
cld
cli
movsb
sbb
nop
out
pandn
je
sub
sbb
xor
adc
push
dec
cld
mov
cmp
xlat
scas
jno
ljmp
adc
jbe
std
sbb
sahf
popa
or
clc
shrl
inc
cmp
adc
scas
push
push
shlb
lcall
inc
adc
scas
mov
ds
ss
adc
dec
jg
leave
adc
pop
std
dec
leave
fwait
sbb
jnp
rcl
sbb
mov
fcoml
xchg
push
shlb
cli
icebp
inc
jb
push
loope
pop
mov
jns
inc
mov
dec
xchg
out
mov
dec
dec
xor
mov
inc
pop
jl
xor
add
add
xchg
xchg
sub
push
inc
nop
out
out
pop
pop
jnp
call
xchg
mov
sahf
xorb
pop
sbb
bswap
movsl
loop
fidivs
adc
xlat
hlt
lds
jle
push
mov
adc
cmpl
dec
in
jo
lea
jle
xor
subb
outsl
inc
mov
enter
dec
lret
fistpl
pop
xlat
loopne
loopne
into
push
lcall
bound
ja
or
paddb
mov
sbb
movsb
int
xchg
in
sub
shlb
push
push
fidivl
lahf
notb
push
ret
xorl
orb
sbb
loop
and
or
shrb
adc
sub
in
mov
insb
mov
ret
lock
sbbb
mov
jo
fdivrl
cmp
filds
xchg
mov
cmp
or
jo
and
stos
pop
push
fcompl
loope
not
scas
jnp
add
test
or
or
add
push
dec
jae
lds
xchg
adc
mov
loope
jne
lret
mov
cmpl
lret
out
bnd
jmp
xchg
imul
loope
pop
jg
loope
push
mov
or
std
jno
insl
loopne
and
sbb
push
ror
adc
in
cld
sub
and
jecxz
inc
inc
dec
adc
bound
mov
xor
push
stc
and
push
aam
xchg
cmp
xor
pusha
pop
and
mov
scas
cwtl
inc
pop
push
movsl
leave
mov
mov
and
cmpb
sahf
pop
push
faddl
ljmp
push
mov
mov
and
inc
dec
fcmovbe
mov
ljmp
ljmp
out
mov
xchg
repz
scas
fbstp
add
adc
testb
sub
mov
das
ljmp
adcb
adc
pop
cmp
sbb
lock
shrb
fisttpll
ja
and
xor
pop
xchg
shlb
in
inc
mov
inc
in
inc
pop
clc
arpl
sbb
or
in
xchg
sub
leave
push
gs
xchg
pop
fcomps
insb
mov
test
lea
cltd
mov
pop
mov
jle
ja
insb
sbb
xor
jp
pop
dec
mov
int
pushf
test
jl
push
pusha
mov
and
inc
jne
jmp
mov
shrl
cmc
and
fprem
mov
sbb
or
push
jbe
loopne
lret
push
scas
mov
dec
cmp
cmc
imul
and
and
insb
and
sbb
push
pop
sbb
js
fs
xchg
push
push
and
aaa
lret
lds
fldl
aam
or
shll
sbb
cmp
push
mov
mov
sti
ljmp
adc
push
fstpl
fdivrl
adcl
lret
jae
sbb
cs
clc
movsb
push
jbe
ret
jae
adc
js
arpl
add
pop
pop
mov
jbe
jp
in
xchg
repz
fcomps
and
sub
cmp
mov
adc
outsl
sub
pop
dec
cltd
adc
jnp
scas
loope
mov
sub
jp
fsubrs
arpl
push
lods
test
icebp
mov
stc
lods
imul
fwait
xor
pop
adc
pop
pop
adcb
addl
std
leave
jb
ljmp
xorl
pop
daa
in
mov
cmp
fsubl
fcoms
pusha
scas
loope
shrb
fnsave
mov
lret
jnp
popf
das
cmp
cmpsb
cmp
mov
daa
jbe
call
shrl
imul
imul
sti
lea
icebp
xchg
mov
ja
lahf
movsl
out
or
cmp
pushf
loop
imul
outsb
add
add
test
in
mov
add
stos
mov
push
push
ljmp
cmpsl
xchg
addr16
call
outsl
mov
xlat
xchg
movsl
xor
jecxz
jno
jnp
pop
cwtl
adcb
iret
dec
sub
inc
ss
add
cmp
ljmp
adc
into
xchg
inc
jmp
or
push
into
or
push
jo
pop
lods
xlat
je
lods
lds
jne
jno
sub
jle
shl
push
fnstsw
fadds
jle
fimuls
out
dec
stos
xor
std
dec
in
inc
lret
push
sub
mov
xchg
inc
push
popf
pop
testl
xchg
lahf
jne
dec
aam
push
jl
pop
mov
loop
aas
mov
in
imul
in
pop
mov
ss
sbb
push
aad
sahf
ljmp
mov
dec
inc
inc
cmp
hlt
dec
loop
ds
fidivrl
push
mov
sbb
fsub
subl
div
rorl
xchg
cltd
mov
cmpsb
mov
xor
mov
pop
lods
popa
je
insl
add
lahf
xchg
and
cmp
adc
push
loopne
jb
insb
mov
mov
jp
mov
xlat
cmc
test
cld
and
add
adc
lock
inc
push
loop
add
mov
rorb
jmp
sarl
fdivp
call
cmpsl
nop
add
loop
fcomp
pop
fmulp
inc
pop
in
dec
mov
sbb
xor
mov
sub
sahf
aam
push
int
mov
or
xor
sbb
sub
aaa
inc
push
cmp
aad
cmp
and
add
mov
cmc
test
mov
fistpl
sahf
lahf
insb
stos
cmpsl
loop
imul
xchg
mov
xchg
mov
pop
mov
xor
addr16
testl
xchg
daa
pop
outsb
je,pn
cs
adc
mov
inc
cmp
inc
pop
mov
lret
aam
rol
jns
xchg
sbb
adcl
adc
sbb
repnz
push
cmpsb
sbbb
rolb
mov
repnz
dec
pop
je
pushf
push
mov
ss
mov
fmul
jno
cli
int
adcb
mov
lret
sbb
add
shll
pop
cmp
int
sarb
fmuls
xchg
mov
push
inc
cli
xchg
jns
pop
adc
fildll
xchg
rcr
call
xor
cli
inc
jecxz
jne
xchg
imul
or
shll
pop
mov
mov
shl
daa
outsb
loopne
out
or
outsb
jae
int
lret
xlat
imul
les
mov
push
pop
pop
loope
decb
loopne
subl
xor
js
in
fwait
ljmp
daa
ror
jg
cli
fistps
add
add
rcll
mov
roll
dec
xchg
jp
dec
into
call
push
dec
fwait
xchg
in
add
pop
mov
adc
mov
pop
push
scas
jo
mov
add
sub
mov
push
mov
decb
add
aas
xchg
jne
cmp
and
inc
sub
dec
jmp
push
jo
ret
mov
xchg
jb
pop
je
mov
mov
js
jmp
cs
enter
icebp
ror
loope
jecxz
push
cli
cmp
in
ja
cmp
test
clc
rcrb
push
into
cmp
jecxz
mov
adc
call
push
stos
push
stos
outsb
add
bound
fdivp
jbe
inc
test
inc
lsl
test
xchg
pop
mov
dec
ja
dec
pop
xchg
sub
sbb
sbb
scas
adc
sti
sti
push
xor
pop
stc
mov
stos
mov
in
js
out
cmp
fstps
sub
adc
into
lea
ds
test
push
xlat
fst
inc
in
lods
jl,pt
mov
in
test
adc
subl
lcall
xor
shrb
sbb
and
movsl
mov
out
xchg
fldt
mov
ror
jmp
pop
cmp
cmc
push
push
and
ds
mov
jbe
nop
jge
sbbb
jno
insl
pop
xchg
js
dec
or
dec
fildll
cmp
scas
das
push
test
arpl
sti
push
inc
fdivrs
cs
push
cld
mov
outsl
sbb
hlt
icebp
jnp
cmp
mov
insl
cltd
loop
pop
jge
fsubp
iret
mov
jl
sbb
cmp
lock
cld
sbb
shll
cmp
jnp
add
adc
insb
inc
popf
out
push
shr
test
cmp
sub
mov
mov
adc
mov
into
ret
cmpl
jle
jle
jno
and
and
out
mov
movsl
push
push
jb
xor
outsb
loope
cmp
and
inc
inc
cmp
pop
add
loope
out
ror
clc
pop
mov
outsb
pushf
scas
or
aaa
or
fcomip
cmp
mov
cmp
adc
sbb
subl
add
dec
movl
push
out
lock
loope
stc
push
clc
jae
pop
push
scas
jmp
test
sarb
xorb
xor
aas
ljmp
fs
mov
sbb
push
or
movsl
cwtl
push
mov
enter
sbb
enter
jecxz
cmp
mov
push
mov
inc
movsb
add
stos
lret
lods
pop
jp
fnstcw
mov
or
xor
fdivrs
rolb
scas
dec
cmp
xlat
push
jg
or
adc
in
shl
shl
pop
das
clc
dec
std
xchg
out
imul
mov
mov
sbb
push
test
sarb
insl
add
sahf
repnz
stos
sbb
push
adc
orl
stos
iret
nop
jp
scas
or
jb
cmp
cmp
sbb
sbb
inc
dec
mov
shrl
hlt
or
adc
rol
daa
and
jmp
pop
movsb
in
scas
es
fldcw
aaa
ds
add
icebp
add
mov
xchg
add
sti
lahf
xchg
scas
jnp
jmp
and
push
jge
lods
jae
xor
mov
sahf
imul
sbb
sbb
test
cs
push
xor
fsubrp
pushf
and
das
pop
js
fsubr
mov
aam
ljmp
pop
mov
dec
idivl
dec
pop
insl
cmp
call
orb
xchg
mov
and
fdivrs
jnp
mov
mov
fbld
pop
or
xlat
and
outsl
test
mov
pop
inc
mov
cltd
pop
add
scas
jbe
mov
ja
js
pop
outsl
mov
mov
jne
loop
sbb
inc
ja
into
cmp
cmc
mov
testb
outsl
loope
rcr
push
cmpsl
dec
cmp
rorl
xor
and
add
cmp
fs
lahf
mov
mov
insl
pop
pop
mov
in
cmpb
or
jl
popf
push
lret
out
lahf
or
leave
mov
ljmp
xchg
mov
jb
lea
lret
xor
mov
jmp
jge
sbb
mov
mov
insl
sahf
mov
stos
arpl
jmp
dec
jbe
mov
pop
dec
ss
je
mov
mov
bound
and
mov
or
ja
push
cmp
out
and
adc
ficoms
int3
aas
movsl
cmp
leave
shrb
cli
stos
es
not
add
push
ret
push
add
jo
cld
mov
cmp
xor
popf
push
jge
aam
xchg
jnp
jb
pcmpeqb
jecxz
dec
add
cli
shll
inc
dec
ret
push
cmpsl
cmc
lods
add
into
jge
or
pop
mov
add
icebp
jno
nop
xor
outsb
ficoml
pop
sub
and
imul
mov
ficomps
rol
jge
xor
scas
dec
jle
jo
inc
inc
add
insb
rep
dec
xor
add
outsb
hlt
outsl
adc
mov
fiadds
mov
adc
sahf
pop
in
push
or
jns
push
mov
push
jmp
xchg
push
or
out
mov
add
adc
aam
std
hlt
test
jo
jecxz
adc
pop
mov
sbb
les
mov
pop
sbb
lods
scas
and
ret
lret
vmulsd
jno
xor
ds
mov
jge
stos
data16
icebp
add
ret
push
add
mov
notb
xor
lret
mov
and
xchg
push
fwait
mov
pop
ja
xchg
fs
jne
or
es
xor
pop
lret
or
cmova
mov
mov
push
dec
movsb
pop
in
fldenv
xor
cmp
mov
mov
inc
xchg
cmp
pushf
js
fsubrl
and
or
popa
or
inc
movsb
xlat
pop
ds
sbb
add
in
pop
lods
shlb
sub
cmp
inc
xor
insb
fcom
push
jae
repnz
jl,pt
cmp
rorb
in
fdivp
fstpl
push
in
lods
dec
lret
popa
add
dec
rol
lock
jl
jl
scas
loopne
loop
inc
and
out
sbb
inc
scas
add
rcrb
fcoms
dec
inc
mov
iret
scas
subl
fwait
push
divb
fldl
in
js
test
int
sti
ss
or
push
push
insl
testl
orb
bound
sub
sahf
call
push
std
popf
xor
dec
lods
or
ja
lret
addl
sbb
dec
movsb
fsubl
dec
cs
inc
cmpsl
imul
outsl
cmp
in
mov
push
pop
pop
mov
inc
fisubrl
mov
adc
ss
popf
ja
or
mov
out
mov
packssdw
lock
sbb
aam
in
jmp
out
in
divl
xor
scas
adc
mov
and
lds
sbb
or
fcmovne
dec
sbb
nop
enter
jne
fs
imul
pop
mov
jmp
int
cmp
loopne
mov
test
jecxz
pop
stos
repz
mov
jl
jmp
add
mov
push
push
jle
mov
icebp
cmp
test
mov
dec
bound
adc
jbe
xchg
hlt
imulb
imul
add
in
mov
es
push
ret
fs
ficomps
aas
stos
popa
not
iret
ss
into
orl
insb
pushf
inc
test
pusha
rcll
mov
inc
cmp
movsb
cmp
mov
mov
and
imull
pop
push
rorl
icebp
shll
adc
sub
sarb
sub
mov
jb
xor
into
movsl
inc
cmp
ret
fbstp
aam
inc
in
lock
mov
iret
pop
or
fnsave
insb
mov
mov
mov
lret
xlat
ljmp
xor
clc
add
pop
add
out
sub
addb
cmp
pop
int
getsec
pop
dec
insb
and
lods
jnp
sbb
push
shll
testl
and
push
sahf
or
cmp
outsb
add
mov
or
data16
sbb
xchg
insb
call
and
fwait
movsl
mov
or
pop
in
and
aaa
dec
lock
jp
lcall
mov
insl
loop
cwtl
and
aam
inc
xlat
push
aad
ja
xor
mov
mov
in
fmull
mov
fisubl
lods
into
in
movd
pop
daa
es
dec
cmp
aam
orl
and
ret
sbb
push
dec
pop
mov
lods
int3
mov
add
or
mov
adc
push
adc
sbb
xchg
loope
sysret
mov
ja
xchg
mov
cs
test
or
sub
scas
jnp
inc
testl
test
mov
jo
mov
icebp
movb
arpl
sbb
push
stos
fldenv
lds
lods
mov
xor
leave
mov
xchg
iret
sbb
out
add
pop
push
jecxz
cld
pop
loope
addr16
addr16
mov
mov
add
mov
ficompl
cli
out
add
jge
out
imul
gs
add
insl
repnz
push
loope
jnp
add
lds
gs
mov
mov
es
out
jmp
cs
scas
adc
mov
imul
sbb
xor
mov
pop
sbb
subl
add
roll
in
push
aaa
mov
pop
ja
insl
sub
fisubrl
cmpsb
dec
leave
cld
dec
cmp
pop
cwtl
dec
and
push
aad
imul
jne
cmc
push
mov
cmp
jp
dec
lret
inc
and
mov
inc
inc
rorl
mov
mov
cmp
cwtl
mov
sbb
add
push
iret
xchg
mov
icebp
add
cmp
lcall
inc
cmp
fs
hlt
xor
or
xchg
cmp
int
subl
xchg
jge
and
xlat
test
xor
sbb
mov
cs
imul
lea
adc
push
pushf
sub
sbb
fcompl
sub
add
mov
call
jmp
out
inc
mov
outsl
outsb
dec
iret
inc
data16
ds
cmp
mov
int
cltd
xor
fadds
cmp
lahf
mov
xor
mov
mov
movsb
mov
std
mov
js
xor
push
cmp
mov
add
mov
and
out
das
mov
jle
mov
out
mov
scas
xorb
out
push
nop
fsubrl
aam
shlb
pop
xchg
jne
mov
or
loope
ja
scas
cmp
mov
push
sub
orl
adc
or
outsl
inc
mov
pushf
aam
inc
fcmovnb
int
add
pop
sub
popa
mov
sub
push
gs
xor
xchg
pushf
aas
dec
outsb
jle
mull
mov
push
dec
and
lods
jge
pop
cmc
mov
stos
lcall
imul
fisttpl
push
call
pop
insb
adc
aad
jb
push
adc
sbb
sub
push
inc
in
sahf
xor
xor
mov
in
mov
scas
stos
jmp
pop
loopne
pop
dec
and
cs
cmp
shrb
jmp
sahf
sar
jne
mov
xchg
cli
or
ja
lds
mov
aad
cmp
inc
and
dec
jp
loope
fiaddl
std
aaa
push
push
aad
iret
in
xor
int
mov
mov
xor
imul
pop
jp
and
or
or
lock
push
xlat
aam
inc
jmp
dec
std
bound
xchg
mov
call
lock
rclb
int3
in
sub
outsb
fst
addb
inc
sbb
inc
ds
mov
add
mov
push
mov
sub
push
div
test
ds
xor
pop
les
into
jl
icebp
fcmovnbe
loope
into
pop
sbb
push
rorb
xchg
dec
sbb
fdivrl
lock
movsb
mov
orb
loop
hlt
mov
xchg
add
inc
loope
dec
jecxz
push
je
cmpsb
fcmovnbe
popf
jmp
push
jge
dec
shl
aaa
mov
push
pop
inc
out
sahf
test
test
les
dec
adc
mov
pushf
data16
push
movsl
push
xchg
ds
dec
jb
lods
xor
scas
push
loope
stos
adc
fs
cs
mov
mov
sbb
add
and
push
imul
mov
mov
mov
xlat
leave
jo
cmp
mov
and
sbbb
orb
pop
lock
bnd
cli
fmuls
pop
cmpsl
xor
add
push
jmp
mov
std
psubsw
pop
icebp
jle
clc
js
lock
inc
out
pop
and
imul
lcall
mov
xor
add
shrb
repz
jno
push
fildll
pushf
out
jbe
insl
push
mov
pop
popf
clc
rorl
mov
cmpsl
cmpsl
cmp
xor
ljmp
fstps
iret
cmpsl
in
adc
arpl
movsl
cmp
inc
adc
std
rolb
mov
dec
fildl
cmp
mov
xchg
std
sub
sub
xchg
dec
inc
shlb
pop
xchg
adc
xor
adc
je
sti
inc
es
dec
pop
test
lea
test
adc
paddw
fdivr
add
inc
jl
push
jae
xchg
in
shlb
mov
scas
out
rcrb
jmp
out
push
sbb
nop
sbb
xchg
shlb
pusha
jns
mov
sbb
xor
daa
lret
out
and
adc
mov
es
gs
fcomi
sbb
jbe
fcomp
mov
xor
insl
mov
add
fwait
sbb
dec
les
inc
stc
inc
fwait
or
lock
repnz
pop
mov
fsubs
adc
mov
data16
repnz
push
lahf
call
in
rcrl
sbb
fcom
nop
ja
pop
popf
stos
lods
aam
mov
jmp
xchg
mov
mov
pop
and
mov
dec
sarl
fdiv
and
jmp
imul
fmull
fisttps
dec
fnsave
xorb
pop
cmp
idivl
fucomip
mov
push
push
mov
loope
jmp
outsl
scas
cltd
mov
jle
in
xor
inc
mov
lods
aad
stos
dec
imul
push
cld
xlat
lds
pop
subb
mov
fidivrl
pop
mov
inc
sub
call
add
andl
or
call
and
out
loopne
cmpl
cmpsb
push
sub
mov
ret
or
jne
repz
mov
cmp
xlat
or
aas
sub
mov
movsl
add
dec
sar
fisttps
enter
mov
out
mov
ss
imul
ja
test
mov
xchg
out
cwtl
sub
jl
scas
pushf
lea
mov
fs
add
insb
lds
mov
movsb
popl
xlat
push
push
nop
sti
subb
out
imul
push
xchg
out
arpl
push
cmp
clc
cmp
xchg
negb
icebp
sbb
add
bound
arpl
push
mov
or
inc
daa
mull
adc
mov
push
jp
fistpl
cmc
stos
jno
dec
jns
jmp
mov
xor
sbb
cmp
xor
inc
jae
call
js
or
adc
inc
mov
add
sbb
into
imul
jle
cmpsb
neg
repnz
mov
xchg
int
cli
ds
hlt
cmp
loope
xchg
mov
sbb
aas
xchg
hlt
pop
in
in
mov
mov
loope
sub
push
pop
pop
jo
mov
stos
cmpsb
pop
xor
inc
push
dec
pusha
sbb
lds
dec
ljmp
jmp
fidivs
or
in
cltd
cmp
adc
sbb
fcomps
mov
xor
jge
icebp
jno
mov
cmc
mov
cmc
mov
xlat
mov
jmp
loopne
and
cmp
addr16
sti
inc
stos
jbe
mov
xor
xchg
sub
or
push
push
jne
jae
sub
mov
imul
mov
aaa
fildl
push
sbb
xor
aaa
cmp
jb
lcall
lahf
nop
cmp
jecxz
pop
ja
mov
fidivrs
sbb
sbb
call
cmpl
cmc
aam
add
cmp
lods
dec
mov
popa
mov
mov
scas
pop
scas
and
into
jmp
cmp
loop
xchg
jnp
cmp
jge
das
shrl
or
xlat
inc
push
clc
lods
push
mul
add
in
lods
call
jecxz
out
push
lds
pusha
or
or
insl
inc
jmp
fcmovnbe
cltd
mov
adc
xchg
fwait
sti
pop
push
or
push
sbb
daa
and
ret
push
aad
jae
xor
jnp
fidivs
push
leave
arpl
mov
sbb
mov
xchg
andb
xchg
addr16
aam
or
pop
add
and
pop
ficomps
push
popa
mov
cltd
push
add
out
rcrb
add
orl
mov
fwait
add
stos
les
repnz
pop
jnp
fistpl
cmp
popa
or
fcmovnu
push
fiadds
enter
lret
arpl
aas
push
insb
xchg
stos
daa
jns
push
scas
out
test
xorb
push
xlat
dec
jmp
cld
fisttpll
push
ficoml
cs
rol
dec
jbe
repz
jbe
insb
push
movl
xor
and
orb
xorb
movsl
dec
arpl
mov
cmp
cli
xchg
xor
dec
mov
push
pop
ficomps
aas
mov
jmp
jo
in
sbbl
fwait
sub
xor
jnp
jne
add
pop
pop
repz
inc
pop
adc
xor
mov
sbb
inc
fmull
push
or
rcr
roll
inc
popf
pop
mov
cmp
mov
jne
mov
mov
inc
sbb
sbb
std
popl
jp
xor
icebp
out
mov
test
std
cmp
imul
sbbb
jle
shrl
std
jecxz
cli
or
das
jecxz
adc
imul
and
sub
js
cmp
jp
test
inc
sbb
xchg
push
mov
pop
xchg
add
inc
das
cmp
mov
fucomp
leave
sub
mov
das
sahf
jge
and
jbe
jbe
je
or
leave
int
and
aad
pop
int
ljmp
ja
cmp
sti
jp
int
inc
pop
lods
sbbl
dec
inc
push
push
cld
jecxz
xchg
scas
test
sub
ss
push
xchg
arpl
pop
fdiv
inc
sbb
shl
cmp
repnz
rcll
sub
jne
dec
cmc
mov
add
jg
pusha
xor
les
dec
cld
lds
ret
jmp
jno
mov
sbb
outsb
cvttps2pi
cmp
je
adc
psadbw
sub
push
cmpl
mov
or
xchg
icebp
push
stc
mov
xchg
in
and
or
inc
xchg
inc
gs
jnp
dec
add
fstps
sbb
push
mov
dec
mov
stc
sub
jp
pop
jb
lds
cmp
popa
add
arpl
add
inc
les
jb
and
rcrb
mov
push
scas
fimull
mov
ds
je
push
movsl
xor
int3
cli
lock
into
loopne
dec
fldcw
inc
cmpsb
mov
push
fdivr
lds
mov
pop
test
mov
cmp
mov
rolb
adc
sbb
sarl
mov
mov
jecxz
lcall
in
outsb
insb
lcall
or
mov
xor
cli
sbb
or
add
adc
jl
je
sbb
test
test
mov
jmp
sub
inc
push
mov
dec
negb
lods
cld
cwtl
mov
jbe
add
lods
hlt
dec
roll
mov
gs
sarb
clc
adc
out
pop
pop
leave
fimuls
jecxz
add
jle
push
int
inc
xchg
lret
and
inc
cs
insl
dec
jo
mov
nop
outsl
dec
mov
popa
or
dec
cld
lret
dec
push
inc
test
adc
pop
out
jmp
jmp
and
roll
iret
dec
push
fildll
jnp
lods
pop
xlat
xchg
xchg
je,pn
stc
cmp
int3
pop
aad
xchg
rsm
pop
scas
xchg
push
rclb
cmpsb
je
hlt
inc
mov
jnp
hlt
aas
push
outsb
pop
pop
pusha
sbb
pop
mov
xchg
cmp
mov
and
ljmp
sbb
cmp
mov
xchg
mov
jmp
sbb
ja
repnz
pop
addr16
or
sub
jle
rolb
fdivl
movb
icebp
scas
or
pop
loopne
push
jb
or
outsb
jae
arpl
or
cmp
xor
std
mov
adc
popa
scas
jmp
mov
addr16
sbbl
cs
cmp
icebp
jmp
xchg
jns
icebp
les
sbb
push
roll
sub
pop
jp
cmp
add
subl
xor
cmp
mov
sbb
jbe
imul
loope
sti
dec
pop
mov
lahf
mov
jl
repz
sbb
sbb
or
add
cmp
sbbl
sbb
mov
mov
adc
pop
fcmovnbe
scas
mov
pusha
inc
sbb
mov
scas
mov
inc
mov
test
push
jno
aam
inc
dec
inc
arpl
jne
enter
dec
rorb
insl
adcb
jge
jle
jmp
mov
std
mov
stos
or
hlt
and
push
lock
pop
jb
sub
mov
popa
sbb
es
adc
ds
sbb
lods
test
ret
mov
or
call
pushf
adc
mov
fs
loope
inc
std
pop
add
dec
out
jae
in
loope
sbb
mov
pop
orb
mov
ja
xor
sti
les
jbe
push
mov
or
icebp
push
mov
loop
pop
or
jge
lock
shlb
push
call
out
dec
pop
mov
shlb
mov
sbb
data16
js,pt
or
fimull
call
test
lods
sub
pushf
push
test
aaa
loope
lcall
lahf
jmp
in
or
mov
inc
lods
imul
jle
lcall
scas
out
jbe
jno
lcall
ja
aaa
adcb
fcmovnbe
add
sub
lcall
into
fs
out
andb
outsb
or
repnz
add
dec
das
imul
js
jecxz
cld
shl
adc
jmp
insl
cmp
clc
sbb
xor
dec
mov
testb
aaa
fsubrl
mov
popa
mov
mov
imul
mov
cld
aas
sbb
sub
xchg
inc
lcall
fwait
jmp
push
xor
pop
std
imul
mov
movsb
pop
mov
popf
repnz
data16
imul
mov
gs
test
xchg
cmpsb
pusha
sub
testl
jno
pop
mov
aam
aaa
mov
and
fs
sub
xor
rorl
lds
cli
jo
pop
inc
inc
add
jle
mov
lods
les
loop
mov
mov
clc
sbb
mov
pusha
cmpl
xchg
lret
inc
mov
fbld
jae
pushf
into
add
push
adc
ds
inc
mov
shrl
fnclex
sub
xor
and
jae
xchg
int
pop
adc
jne
add
das
icebp
push
out
jg
cli
and
xor
inc
clc
aad
pop
ret
lock
inc
cmpl
mov
or
lds
mov
iret
adc
jle
decb
addr16
loop
xlat
xchg
les
lahf
xor
std
aad
and
mov
loope
rolb
orl
movsl
jns
mov
fs
mov
ss
stos
scas
daa
cmp
mov
movsl
in
in
and
out
filds
out
pop
dec
sbb
jmp
pop
std
adc
cmovge
sbb
mov
mov
call
mov
lods
jle
cli
das
repz
sti
into
mov
xor
dec
icebp
or
push
fwait
mov
lret
std
cmpsl
cmp
repz
nop
or
out
and
clc
mov
pop
cmp
or
je
call
mov
imul
cmp
dec
sbb
fldenv
jae
fistpl
xchg
lret
or
pop
mov
mov
test
repz
sbb
pop
loopne
xchg
pop
xchg
es
push
nop
ffree
mov
movq
jp
in
jbe
outsl
and
jecxz
imul
daa
jne
ljmp
rcl
loop
mov
or
sub
adc
popa
in
popa
sub
dec
aaa
dec
pop
in
adc
inc
push
mov
jne
insl
jge
cld
pop
call
mov
adc
xchg
cmp
cmp
icebp
loop
dec
lds
pop
cmp
lret
push
xchg
lahf
js
jmp
mov
imul
test
dec
inc
xabort
adc
rorl
cmp
sub
jnp
mov
mov
add
roll
xor
pusha
xchg
stos
mov
xchg
sub
sub
pop
sbb
push
movsl
or
cmp
ja
lea
push
mov
jge
ja
dec
sbb
fs
in
xor
adc
mov
jge
dec
rcrl
stos
ds
mov
push
add
push
mov
mov
jne
mov
push
rolb
mov
int
cmpsl
mov
pop
movb
insb
fcmovne
cmp
movsbl
cmp
aas
add
mov
andb
mov
lods
rorb
icebp
ret
ret
shll
adc
cmp
adc
fdivp
xor
in
mov
lret
push
cmp
aad
pop
lret
cwtl
push
xchg
insl
sbb
xchg
push
jno
push
aad
outsb
xlat
lods
cmp
jb
enter
js
cmp
ss
inc
push
in
mov
outsb
and
dec
sbb
ret
fsubs
mov
pop
sub
xor
std
sbb
pop
push
or
addr16
mov
pop
cmp
es
mov
sbb
xor
dec
andl
push
or
mov
pop
call
in
aam
popf
scas
sbb
add
push
and
stos
push
sbb
push
xor
add
out
push
sti
xchg
jae
dec
or
add
std
rcrb
or
sbb
sbb
push
outsb
cmp
into
in
dec
rcr
xor
mov
std
stos
xor
jbe
add
loopne
xchg
or
ret
mov
loop
lea
mov
pop
inc
inc
shlb
mov
pusha
pop
adc
mov
daa
insl
ret
inc
leave
aam
cmp
push
and
js
mov
imul
pop
mov
dec
pushf
outsb
push
or
cmp
pusha
jbe
jge
inc
lock
jp
xchg
push
push
pop
mov
jmp
inc
pop
push
iret
push
mov
clc
cmp
lods
xbegin
and
mov
dec
outsb
in
pop
mov
mov
mov
scas
sbb
popf
hlt
shl
sbb
pop
aam
scas
jle
repz
test
stos
pop
or
movsl
in
add
fldl
lods
add
aad
cs
pop
and
fs
jecxz
cmpsb
out
pushf
lock
cmp
ds
clc
clc
bound
cld
fdivs
testl
insb
inc
enter
call
or
popf
cli
ljmp
jmp
cmpb
sbb
fnstsw
ret
xchg
into
pop
push
jo
jg
sahf
enter
push
cmp
mov
add
sub
mov
cmc
aad
push
xchg
xor
aad
nop
adc
mov
fstps
pop
xor
clc
pop
add
mov
stos
mov
icebp
mov
int3
lcall
aam
enter
jl
scas
loop
sbb
add
inc
aam
rcll
jbe
aaa
bound
lcall
adc
daa
inc
jmp
js
inc
jnp
sub
aam
or
inc
dec
push
pop
adc
jne
mov
insb
pop
aaa
jb
aam
mov
sbb
mov
xor
mov
cwtl
xchg
xor
pop
lahf
sbb
sbb
mov
or
cmp
add
or
loopne
lock
cmp
cmpsl
inc
inc
out
jmp
add
dec
mov
mov
imul
inc
mov
fisttps
push
and
xlat
sbb
mov
mov
scas
repz
imul
in
jbe
sub
push
test
jo
dec
frstor
adcb
sbb
pushf
add
insl
adc
in
sbb
sbb
scas
mov
fidivl
js
mov
mov
out
or
lcall
loope
push
inc
pop
inc
ret
push
cmp
ret
fstl
imul
stc
cmp
popl
fsubrl
adc
push
xor
inc
outsl
scas
mov
inc
mov
mov
cmp
pop
int
dec
sub
scas
popf
mov
dec
cli
dec
cmpsl
iret
inc
jne
fisubrl
mov
cmp
jge
ds
lret
and
mov
out
cmpsl
ret
ds
gs
addl
gs
daa
pop
lret
sbb
mov
sti
cmp
sarl
cli
xor
or
imul
pop
scas
ljmp
mov
icebp
icebp
or
inc
inc
je
into
dec
cmp
in
pushf
loope
nop
pop
sbb
jo
loopne
jle
xchg
das
adc
sub
sub
mov
or
sbb
orl
popf
fucomi
jo
push
xor
hlt
xchg
insb
inc
sbb
ss
mov
fwait
mov
ficoml
cmp
adc
je
jnp
mov
rorb
sub
stos
ljmp
fstps
cmp
adc
mov
subb
scas
mov
cmp
adc
jecxz
fstps
inc
mov
inc
jmp
lahf
call
xor
cmpb
cmp
addl
sbb
div
jl
dec
jmp
push
sbb
aaa
inc
out
cmpb
es
insb
jno
mov
xlat
jne
sbb
jp
shl
loope
rcl
sub
cmc
cmpsl
insb
or
pop
mov
shll
push
inc
insb
add
je
push
xor
in
mov
mov
pushl
lret
mov
push
fildl
iret
stos
push
inc
sub
je
scas
into
es
addr16
mov
out
scas
ljmp
inc
mov
add
loopne
xor
mov
cmpsl
dec
call
mov
pop
pusha
fisubl
mov
push
ret
scas
mov
scas
fisubrs
out
mov
mov
out
xor
or
cmp
popa
fwait
dec
mov
jno
or
xchg
hlt
pop
pop
sbb
scas
push
jne
ret
scas
sbb
inc
jno
pop
xor
xor
in
lret
jp
mov
in
sbb
inc
outsl
or
lods
sti
push
adc
fmul
movsl
outsb
sahf
xchg
insl
call
lret
jo
arpl
orb
pop
test
cmp
call
jno
pop
mov
xorb
mov
mov
mov
shll
fisubrl
inc
dec
jns
faddl
and
sbb
dec
jne
sub
add
inc
ljmp
cmpsl
sarb
pop
jp
adc
test
stos
outsl
cwtl
ret
adc
fwait
xor
idiv
or
rclb
sahf
sub
movsl
test
ret
test
je
sbb
cmp
inc
mov
loop
cmpsl
repnz
pop
or
mov
aaa
jl
mov
cli
test
ja
inc
aam
xchg
mov
fcomps
lret
adc
mov
mov
sbb
adc
push
or
out
movsl
mov
adc
and
jno
js
mov
jb
sahf
into
aad
outsl
pop
je
inc
addr16
pop
sbb
fst
scas
lret
sbb
dec
push
adc
push
nop
jg
fdiv
nop
andl
or
stos
pop
ret
rcr
add
fucomp
pop
dec
sahf
add
fadds
lods
lcall
push
sub
icebp
ret
xor
push
mov
push
mov
inc
mov
xor
pop
push
adc
jle
xchg
imul
mov
jno
lods
insl
or
imul
fidivs
pop
popf
mov
cs
in
loop
xor
es
jmp
cmpsl
lds
xchg
lahf
xor
popa
cwtl
lahf
add
fldl
xor
xor
pop
or
cmp
mov
les
fld1
lods
cmpsb
or
test
sub
js
cmp
cmp
push
xchg
jg
mov
xchg
lcall
dec
mov
or
mov
pop
and
mov
in
lea
ds
cmpsb
in
cmc
scas
mov
add
push
mov
inc
cli
or
insl
jmp
and
rcll
or
in
mov
mov
mov
add
xlat
cmp
pop
filds
fdivp
cld
push
cwtl
stos
pop
cmp
xchg
jbe
mov
xchg
add
sub
rcr
test
inc
stos
push
les
orl
adc
dec
hlt
jmp
fst
mov
shrb
int3
fidivrs
or
call
enter
test
adc
jp
mov
sub
inc
mov
jbe
push
add
cmp
daa
xlat
jle
movsb
and
dec
jmp
xchg
xor
cmp
icebp
rol
push
or
push
pop
cmp
clc
mov
out
mov
cmp
icebp
popl
push
rcll
testb
sbb
test
stc
sub
or
inc
sbb
insb
sbb
sbb
fwait
dec
dec
outsl
mov
aam
push
xchg
xchg
cltd
mov
jns
cmpsb
subl
cmp
pop
insl
and
enter
inc
shrl
or
js
ret
shll
mov
nop
movsl
mov
adc
or
add
mov
out
stc
adc
pop
rcrb
mov
lods
aas
cmp
inc
and
adc
add
dec
je
sub
xlat
xchg
pop
fisttps
inc
add
xorb
ret
fucomp
push
adc
sub
adc
test
or
push
lock
mov
jb
cmpsl
pop
fcoml
subl
in
shll
mov
mov
je
or
loope
jecxz
push
gs
dec
lahf
test
enter
push
or
outsb
cmovl
cs
jno
fcomps
hlt
mov
sub
inc
aaa
imul
fcoms
lret
int
stos
pop
dec
or
lods
mov
adc
jg
in
popa
xchg
pop
add
arpl
shll
adc
adc
or
loop
clc
push
push
aad
sahf
or
adc
add
aad
sub
sbb
pop
xchg
adc
jmp
inc
push
sub
ret
sbb
xchg
mov
fs
icebp
test
push
add
xchg
fimull
movsb
sub
ret
cmp
stos
mov
mov
push
sub
push
mov
pusha
add
in
test
nop
loopne
and
and
fs
lock
fcompl
out
lahf
sbbb
filds
mov
cmpsb
ds
xor
imul
and
std
mov
rcrl
pop
push
negl
les
outsl
push
cmp
inc
push
lods
push
jmp
push
clc
mov
adc
notl
in
jg
jmp
lods
stos
mov
mov
cmp
xchg
xor
mov
inc
hlt
mov
adc
icebp
fcomp
imul
add
xchg
not
push
cli
sahf
or
jne
add
cmp
lods
lock
mov
test
add
rorl
fidivs
fdiv
int
push
repz
shrl
out
sbb
pop
sub
cmc
ljmp
out
mov
push
shl
in
add
push
add
mov
ds
daa
loop
and
cli
stos
xchg
leave
sahf
aaa
pop
jbe
adc
xchg
outsl
out
fmuls
pop
add
jno
mov
fistpl
rclb
push
je
js,pt
loope
cmpsl
sbb
test
je
iret
sub
icebp
and
xchg
add
push
pop
sub
or
xor
fwait
push
test
inc
sub
lods
not
xor
dec
shll
lcall
jbe
dec
out
roll
xchg
inc
out
jns
mov
arpl
jno
sub
or
mov
cmp
sbb
fsubs
pusha
pop
and
in
adc
push
rorl
insl
insl
pop
inc
mov
shrb
mov
insb
outsb
fcmovnb
cli
int3
and
cmc
inc
repnz
add
push
int
push
test
xor
or
sti
rcrb
sarl
jbe
cmc
xchg
movsl
aaa
mov
xor
cmpsb
enter
and
lret
jge
notb
and
aad
mov
xor
push
jg
popa
adc
jg
lock
movsl
adc
jmp
shrb
dec
in
pop
call
or
pop
sub
pop
mov
cmpsl
sbb
aaa
addr16
and
mov
mov
pop
in
sbbb
popa
fs
into
loop
test
loopne
aad
pushf
fnstcw
fcmovnbe
push
sub
xorl
mov
push
pop
jnp
outsb
test
fimull
sbb
pop
fbld
xor
lret
inc
mov
dec
out
jne
push
and
cmpsl
mov
mov
mov
movq
add
clc
mov
push
sbb
dec
pop
mov
xlat
inc
testb
je
sbb
imul
xor
add
sbb
jne
jge
nop
and
mov
sub
push
stos
ss
loope
cmp
sarl
jbe
jge
sbb
jge
pusha
xlat
ss
pop
roll
and
jns
pop
sbb
ret
xchg
xor
or
jle
sti
sarb
movsl
adc
popf
ss
mov
fidivl
sub
pop
push
adc
sub
out
sub
addr16
mov
mov
loopne
fstpl
mov
inc
pop
cs
out
mov
orb
adc
and
xor
mov
out
ret
xchg
xor
xchg
cmp
xor
cmp
out
in
or
stos
inc
sahf
sti
test
cmp
insl
push
lahf
repnz
test
arpl
mov
xchg
sbbb
mov
outsl
sar
loop
addr16
pop
cld
dec
adc
dec
sbb
or
aam
insl
nop
mov
add
out
fsubl
adc
aad
mov
out
or
dec
je
inc
mov
data16
scas
fcmovnbe
and
sbb
test
mov
sbb
pop
jge
pop
pop
clc
mov
push
hlt
jge
insl
das
fisubs
mov
pushf
mov
ror
aaa
addl
or
pop
in
or
adc
jg
pop
add
pop
insl
fimull
cmp
pop
xorb
in
pop
push
add
push
add
jmp
idivl
loop
mov
mov
aam
pop
arpl
dec
sbb
mov
ret
mov
nop
rcrb
mov
into
xchg
inc
or
or
push
pop
xlat
add
pop
sbb
and
xchg
movsl
mov
xchg
adc
push
mov
inc
xchg
sub
mov
mov
out
fnstsw
stos
lea
lock
adc
push
sbb
xor
add
xchg
sbb
sti
sbb
cltd
mov
cmp
loop
cmp
mov
out
aad
or
inc
std
js
add
jb
and
test
pop
pop
push
out
in
dec
mov
out
xchg
inc
cmp
movsl
call
and
xchg
and
loope
out
mov
cmpb
cmpb
xchg
inc
pmuludq
filds
jmp
out
mov
pop
fisttpll
clc
adc
fmuls
mov
enter
aad
mov
scas
fisttpll
cmp
cld
mov
scas
stos
into
rolb
imul
jp
inc
or
adc
ljmp
cmp
ds
push
or
and
add
adc
adc
sbb
push
gs
push
jb
popf
loopne
and
popa
mov
push
mov
xchg
outsb
leave
aad
out
push
orl
cmp
daa
adc
imul
bswap
mov
sbb
stos
sbb
dec
movb
mov
push
imul
ja
jle
inc
outsl
fstpl
jecxz
mov
out
cmpsb
fisttpl
pop
aas
iret
test
arpl
loope
int3
or
mov
xor
sub
jmp
popa
jbe
pop
stos
push
pop
mov
int
push
mov
mov
pop
pop
mov
xor
jmp
lcall
jmp
insb
std
sti
jnp
ljmp
jo
jmp
inc
insl
clc
xor
pusha
shr
popa
jle
ljmp
aas
pop
mov
loope
roll
mov
cmp
outsb
pushf
mov
ss
jne
push
push
or
jae
rcr
rol
pop
ja
inc
xchg
int3
add
or
pop
dec
dec
aam
fwait
jg
gs
push
sarb
pop
arpl
cmc
jno
sub
inc
inc
xchg
push
jmp
push
je
dec
iret
adc
pop
and
jno
xchg
fwait
loope
adc
not
push
xchg
stos
popf
or
cmp
ja
pop
jmp
mov
jo
cmc
loope
mov
into
int3
inc
loopne
pop
mov
insb
xchg
push
or
dec
dec
repz
pop
dec
loopne
cmc
add
ljmp
popa
out
jecxz
dec
ljmp
pop
push
sub
sub
cmp
mov
loop
sbb
or
loopne
setbe
jbe
push
and
enter
cmp
mov
mov
mov
lahf
out
insl
loopne
mov
mov
daa
push
hlt
push
negb
push
pop
cmp
lea
jge
mov
mov
pop
repnz
outsb
push
lret
hlt
in
pop
xchg
repz
xchg
fadds
pop
inc
pop
pop
inc
pop
and
adc
call
fcmovne
arpl
lcall
mov
call
cmc
jns
adcl
jp,pt
test
jo
push
add
adc
fisttps
imul
pop
pushf
xorl
push
or
insl
cmp
xchg
ret
xor
leave
add
jo
dec
mov
mov
adc
or
mov
mov
rolb
int3
ja
movsb
ds
sub
xor
sahf
ljmp
or
enter
mov
dec
dec
xchg
cmp
xchg
jge
in
aam
es
aad
out
jge
pop
mov
incl
pop
push
add
loop
mov
jbe
mov
pushf
sbb
es
xchg
sarb
icebp
pop
aad
mov
fwait
testb
idivb
push
addb
sub
inc
mov
mov
adc
add
lret
je
adc
cmp
insb
cmp
sbb
inc
sahf
call
jb
push
mov
lds
lods
jnp
mov
cmp
std
roll
enter
aaa
bound
or
movsb
in
repnz
pusha
ret
loope
mov
sub
out
divb
or
or
mov
xchg
mov
sbb
jecxz
or
cmpsb
sbb
icebp
ja
and
jns
sti
push
push
call
mov
mov
sbb
rcl
sub
in
mov
sahf
ret
je,pt
out
sahf
aas
inc
sub
rorl
push
ret
imul
xor
lock
movb
cld
add
or
scas
dec
es
mull
fbld
and
mov
cmp
and
mov
stc
push
mov
mov
scas
decl
pop
stos
mov
fisttpl
inc
xchg
pop
jmp
pop
jmp
adc
enter
jne
jge
rolb
or
popl
cwtl
adc
test
mov
xchg
in
jp
add
xor
mov
mov
cmpsl
jp
ss
xor
inc
into
aad
inc
inc
movsb
adc
mov
ds
cmp
inc
sbb
cmp
imul
les
and
jmp
aas
je
sub
lock
lret
add
outsb
sbb
xchg
fildll
das
xlat
jge
mov
pusha
sbb
fistl
inc
test
cli
inc
push
dec
in
js
sub
mov
xchg
mov
clc
lds
sbb
shlb
mov
xor
mov
test
dec
push
clc
ljmp
dec
call
add
inc
pop
jg
pop
jmp
jp
jne
jbe
ss
push
ja
std
fcmovbe
xor
ret
outsl
lea
cli
cli
xchg
inc
ret
ret
mov
enter
lahf
loopne
mov
rcr
mov
fiadds
jmp
sub
mov
dec
addr16
shl
push
mov
mov
fisubrl
pop
xchg
fs
inc
je
dec
shlb
add
ficoml
push
sbb
outsb
insl
push
xchg
les
jnp
cld
push
sbb
mov
in
push
cmc
xchg
mov
lret
sub
add
inc
or
mov
adcl
mov
or
das
or
dec
outsb
xchg
jnp
inc
loope
lcall
cmpsb
into
cs
pop
lret
mov
sbb
mov
push
shll
ljmp
dec
aaa
mov
jbe
movsl
test
mov
push
lahf
inc
sub
push
xlat
ret
test
cmp
ja
loop
inc
jno
sub
jnp
fwait
sbb
xor
repz
push
mov
mov
stos
leave
notb
shrl
fidivrs
hlt
dec
sub
les
xor
xchg
hlt
mov
lds
jl
imul
outsb
jle
in
in
popa
pop
inc
push
outsb
xor
sub
bnd
and
and
test
decl
mov
enter
cli
add
xchg
pop
loopne
cmp
dec
push
fdivs
fwait
mov
ds
sub
push
stos
and
std
mov
addb
mov
sbb
cmc
and
and
cmp
push
hlt
and
cmp
adcl
shlb
sub
mov
or
push
in
push
fadds
pop
out
clc
cmpl
pop
adc
insl
xor
fstl
xchg
or
aaa
push
fnstsw
mov
pushf
mov
fs
loope
je
andb
dec
out
stc
mov
sbb
fcmovnbe
ret
push
mov
push
jmp
shl
jns
ds
push
stos
sub
ret
mov
pop
push
fiadds
add
lcall
rorb
movsb
dec
mov
cmp
ljmp
dec
pop
rcr
enter
cmc
and
inc
cltd
xlat
loop
mov
das
icebp
xor
pop
das
stos
inc
jne
ljmp
sti
add
cmp
push
scas
mov
or
pop
cs
lret
icebp
lock
outsl
push
jb
loop
ret
insl
fsubrl
std
cli
mov
xchg
mov
dec
pop
out
rclb
jg
popa
cmp
int3
mov
ficomps
jge
insl
fmul
cmp
scas
jmp
cli
imul
arpl
jbe
loop
mov
pop
je
test
push
es
jle
push
pushf
call
cmp
inc
cmp
inc
je
repz
sbb
mov
out
decl
addr16
cmpsb
jbe
mov
mov
je
xor
mov
add
pusha
dec
adc
loope
pop
pop
lea
cmp
jp
popa
ret
cmp
out
jecxz
mov
cmc
sub
aad
hlt
jo
test
mov
out
ret
es
pop
repnz
jae
orb
sbb
loope
call
inc
mov
clc
jmp
shrl
fisubrl
cmp
repz
dec
pushf
mov
add
sbbb
mov
xchg
loope
jecxz
cli
push
mov
jnp
cwtl
bnd
xchg
lods
fs
in
push
dec
call
fistpl
sub
popa
das
jecxz
lods
outsl
add
loope
scas
movsb
and
frstor
sub
test
ljmp
mov
xor
push
std
mov
pusha
sub
shlb
push
cwtl
in
ror
pop
popa
js
mov
dec
std
aas
add
bound
or
adc
dec
and
push
cli
hlt
test
movsl
cli
lock
pusha
js
loope
dec
fstpt
cmp
inc
je
sbb
push
jbe
xlat
aaa
daa
sbb
ficompl
sub
cmp
mov
sbb
push
scas
retw
adc
dec
pop
pusha
jnp
rclb
add
xchg
mov
outsl
pushf
rorb
mov
outsb
mov
sarb
mov
add
movsb
dec
xchg
add
inc
js
push
push
out
aaa
xchg
mov
push
out
ds
and
fidivrl
pop
jae
fstp
rclb
pop
jo
cld
and
dec
jno
jbe
hlt
js
fdivrl
cld
jl
pop
add
pop
int3
shlb
push
push
jle
repz
insl
mov
sbb
adcl
push
mov
imul
ficoml
faddl
loopne
xor
mov
push
cli
mov
dec
iret
cmpb
sub
pop
push
xchg
push
jmp
in
stc
jno
pop
cs
mov
lahf
clc
movsb
push
xchg
popf
push
mov
jg
inc
lods
in
inc
xlat
fcomip
inc
dec
dec
aam
in
outsl
in
jg
loop
mov
mov
or
std
cmpsl
push
ds
and
cmp
fwait
in
insl
pop
insb
bound
iret
popf
pop
jb
out
mov
sbb
adc
repz
xor
call
rcll
mov
hlt
pusha
or
pop
and
loopne
jns
in
inc
dec
mov
popa
pop
add
jl
repz
sbb
mov
push
mov
mov
daa
sbb
push
pop
mov
test
rorl
outsb
insl
sbb
clc
mov
push
mov
pop
mov
jecxz
vpaddsw
pop
xchg
in
add
nop
dec
dec
jge
test
stos
xchg
cmpb
stos
sarb
inc
bnd
xor
mov
lock
sbb
or
mov
shll
mov
mov
push
xchg
xchg
arpl
push
fisubl
inc
cli
jnp
or
dec
addb
iret
jecxz
mov
shrl
or
shr
cmp
ja
push
pop
fwait
jns
dec
xor
lret
mov
fmull
scas
mov
mov
lock
lock
mov
mov
push
loop
out
push
inc
mov
inc
fsubr
push
pop
push
sub
mov
fnstenv
stos
call
mov
scas
in
cmpsl
xlat
and
pop
pop
push
jl
inc
cltd
and
test
add
add
xchg
jge
jne
test
subb
mov
or
pop
rolb
mov
enter
int
pop
popa
repz
ds
loop
popf
mov
mov
mov
subb
clc
rclb
shrl
or
int
mov
push
repnz
adc
jle
cmc
cmc
cmp
xor
enter
pop
mov
sbb
add
daa
sub
fwait
mov
sbb
das
push
add
mov
jl
sbb
scas
orl
push
fstp
or
rcrb
jle
lods
mov
and
push
aas
sbb
push
insb
mov
movsl
out
imul
mov
push
mov
shlb
xor
push
enter
jl
cli
and
adc
xchg
mov
jne
add
movb
div
hlt
push
mov
test
jb
stos
in
sbbb
pop
int3
enter
sbb
adc
mov
mov
hlt
fidivrs
cmp
or
nop
mov
sub
mov
ljmp
inc
push
mov
pop
or
pop
push
jno
scas
cmp
push
lds
lods
insb
xorb
imulb
adc
and
not
mov
outsl
sub
jg
cmpsl
ud2
dec
mov
pop
mov
pusha
mov
jae
adc
popa
outsb
out
or
mov
das
adc
or
aaa
mov
mov
pop
push
dec
pop
sbb
jg
shlb
shlb
add
popf
scas
fcomps
mov
and
inc
gs
jmp
rcr
mov
sub
fidivrl
call
fmull
xchg
pusha
cmpb
or
icebp
fsubl
sub
inc
and
rolb
cwtl
imul
jno
adc
jbe
shl
loop
mov
insb
fdivl
mov
cmc
fsubrp
jmp
sbb
push
setle
into
mov
fimull
fstpl
frstor
pusha
cli
adc
jno
loope
daa
mov
cmp
or
scas
pop
inc
mov
sub
xchg
outsb
sbb
das
push
lcall
mov
aas
mov
out
add
mov
add
sahf
mov
popf
pop
clc
rclb
push
mov
pop
pop
in
divl
imulb
sbb
push
mov
ror
addr16
mov
adc
std
pop
push
inc
ret
mov
loopne
mov
jg
jl
int
adc
cmp
pop
sbb
fcmovbe
and
dec
mov
jge
lds
inc
dec
dec
jo
insb
dec
and
dec
mov
js
pushf
sub
add
icebp
push
mov
notl
mov
push
jmp
or
test
xor
fadds
adc
lret
pop
repnz
inc
lahf
aaa
push
sbb
jp
mov
mov
jnp
sbb
adc
rcr
mov
ds
jecxz
shll
pop
cmp
popf
icebp
hlt
out
adc
das
jb
clc
test
dec
iret
or
fwait
jo
add
out
nop
out
outsb
cwtl
sub
loop
and
adc
jl
pop
add
int
push
clc
call
jecxz
and
shlb
mov
cld
int
cmp
std
jne
and
inc
jo
pop
mov
bound
mov
fistpl
cltd
repnz
push
das
sub
cld
add
jmp
arpl
push
sbb
ret
int
fidivrs
cmp
addr16
aam
in
rcrb
movsl
push
jge
push
sti
add
mov
jle
shr
shll
movsl
rcr
add
rorl
mov
icebp
or
jle
push
xor
or
incl
ds
mov
jbe
lea
insb
cli
stos
stos
shrb
add
dec
sub
imul
push
call
or
jae
jmp
fwait
jmp
je
mov
sbb
dec
aam
mov
inc
jne
add
lds
shrb
in
out
pusha
not
call
mov
sub
call
push
sti
shlb
test
cmc
shlb
rcrb
and
or
orl
jmp
mov
or
inc
fstps
je
fbld
lahf
inc
inc
pop
or
ret
pop
js
ret
mov
loope
jne
nop
in
dec
outsb
fsubl
ret
test
mov
in
sbb
mov
push
imul
mov
push
leave
leave
stos
cwtl
adc
cmp
adc
add
testl
ret
xchg
dec
jb
mov
push
jp
cmpsb
das
ret
mov
scas
lods
testb
pushl
ret
negb
or
test
outsl
cmp
scas
imul
ja
mov
push
mov
inc
jo
stos
shlb
arpl
imul
xchg
add
fdivr
test
mov
push
xchg
lods
sbb
mov
xchg
mov
sbb
mov
int
test
test
push
pop
stc
pushf
aam
rol
out
loopne
int
sub
xlat
sbb
inc
mov
push
scas
outsb
push
std
inc
add
ja
or
pop
cmp
sub
lcall
cmc
cmp
ret
mov
jns
loopne
repnz
ja
mov
pusha
enter
or
pushf
xchg
je
xchg
inc
pop
mov
jno
ret
push
jge
sbb
push
sahf
cmp
lods
das
ss
sub
sbb
or
add
scas
shr
xchg
xor
mov
pop
scas
or
xor
leave
dec
xorl
pop
out
mov
cmp
leave
jno
sub
sbb
in
jmp
test
rcr
or
push
cmp
inc
cli
mov
cmp
push
in
les
xchg
mov
inc
jnp
ss
xchg
test
mov
lods
pop
jae
cmpsl
pop
out
add
pop
dec
add
jmp
adc
mov
jbe
push
dec
loop
mov
subl
mov
sar
cwtl
xor
sti
or
cs
cmp
loop
aad
adc
jnp
arpl
mov
fwait
lods
inc
sub
clc
call
xchg
xchg
mov
icebp
cmp
mov
mov
inc
scas
fildll
mov
mov
je
xchg
or
add
loope
aaa
cmp
imul
mov
adc
jo
in
jbe
pop
into
sahf
bound
fidivl
fildl
shll
lret
out
fisubl
mov
shll
add
push
insb
outsb
sti
add
or
adc
ret
mov
xor
pop
clc
fsubl
adc
mov
sub
fstpt
iret
cmp
and
insb
ficomps
sub
mov
repnz
hlt
icebp
call
jmp
cmp
cmpl
lea
jle
imul
xor
jge
addr16
xchg
push
aaa
pop
stos
sbb
inc
push
sbb
mov
mov
aaa
cmp
cld
sub
mov
inc
inc
jle
outsb
or
push
ds
push
cli
and
fidivrs
adc
xchg
movsl
test
aas
mov
push
mov
cli
inc
fs
setl
cmp
mov
ds
jae
mov
insb
ss
call
data16
cmp
popa
outsl
and
jecxz
daa
push
cmp
sarb
sbbb
shl
or
test
sub
mov
sub
xor
nop
inc
mov
cld
mov
shl
icebp
dec
mov
testb
dec
mov
cmp
and
xchg
xor
in
add
sti
add
xor
adc
pop
or
dec
or
xchg
push
jmp
popa
and
push
sahf
sahf
xchg
cli
push
enter
inc
mov
popa
mov
je
das
jbe
add
adc
loopne
push
pop
daa
jae
andb
movsl
or
adc
lea
ja
add
dec
je
dec
cmpsl
and
push
out
cmpsb
ljmp
cli
pushf
cmp
push
dec
lock
cmpsb
push
fistpl
cmp
bound
mov
mov
xchg
ja
and
mov
movsb
cmp
out
pop
cmp
sbb
add
push
mov
push
or
lret
int
mov
sub
pop
push
mov
and
xor
ss
xchg
sub
adc
test
aas
inc
mov
fmuls
out
jnp
mov
in
push
dec
mul
in
les
mov
push
inc
cmpl
add
aad
out
ret
scas
daa
pop
les
jbe
movsl
pop
push
lea
int
cmpsb
jp
mov
nop
dec
outsb
mov
adc
mov
inc
and
pop
aam
movsl
pop
cs
gs
sub
bound
notb
sbb
shl
out
lock
scas
int3
sbb
shl
call
movsb
sbb
push
insb
mov
lods
cmpsb
inc
inc
xor
jbe
cmc
fdivr
adc
popa
or
rorl
inc
pop
sub
mov
xchg
xlat
add
and
xchg
cmp
xchg
out
xchg
bound
push
fiaddl
pop
xor
neg
cmp
mov
jb
aam
call
out
and
xchg
xor
push
sahf
std
lea
inc
arpl
in
and
fsqrt
add
fidivrs
arpl
ljmp
mov
mov
mov
cmc
aas
lret
xchg
arpl
jo
iret
hlt
push
mov
pop
cmc
outsb
insb
jle
push
addr16
stc
mov
dec
in
xchg
lcall
pop
adc
dec
aad
std
loopne
jo
addr16
xchg
roll
mov
mov
push
inc
lock
fadds
xchg
dec
jns
mov
and
pop
loopne
push
cmp
dec
aad
mov
fsubrs
add
lcall
jle
subl
loop
movl
rorl
int3
jbe
mov
xchg
ret
push
ja
lret
push
mov
ljmp
leave
insl
push
jmp
push
pop
mov
into
lods
mov
or
popf
sbb
push
mov
cmp
mov
repz
jecxz
mov
mov
fdiv
adc
mov
or
jp
insw
lcall
cmpsb
loop
xor
out
pop
jae
adc
popa
mov
xchg
pop
xor
cmp
mov
inc
push
popf
dec
cmp
pop
add
fsts
cmovge
popf
push
sbb
shlb
out
mov
jmp
movsl
push
imull
mov
std
cmc
push
mov
cmp
or
arpl
mov
insl
mov
push
mov
ret
sti
push
pusha
imul
repnz
leave
mov
aad
pop
xchg
pop
mov
push
lds
insl
add
ljmp
jbe
jmp
ljmp
and
nop
mov
ljmp
in
je
or
cmp
mov
add
mov
dec
imull
div
adc
in
mov
xchg
lret
ret
or
orl
mov
pop
test
push
test
mov
mov
cmp
aam
imul
int
cld
cmp
push
test
mov
or
jle
lods
sahf
xchg
inc
insb
and
push
push
loopne
adc
pushl
pop
cmp
dec
or
mov
add
pusha
pop
lock
mov
mulb
adc
jg
jo
cmc
out
js
dec
and
into
adc
or
pop
int3
mov
lcall
sahf
sbb
push
sbb
int
pop
cltd
jle
xchg
out
sub
scas
pop
addr16
inc
test
mov
outsl
rcrb
mov
pop
insb
push
xchg
cli
sub
loope
mov
cmp
fsubrs
mov
mov
jo
addr16
inc
fldt
jne
test
or
cltd
je
orb
mov
stos
dec
das
vmwrite
fisubrs
lahf
sub
in
fnstsw
dec
jecxz
jnp
mov
ret
es
pop
inc
ja
dec
dec
gs
in
es
mov
fneni(8087
lea
outsb
xor
fs
push
in
call
push
fstl
xor
inc
fstpt
fiadds
ret
pop
lcall
mov
adc
mov
mul
orl
mov
int
mov
xchg
jnp
addr16
mov
push
enter
xchg
cltd
sbb
rcrb
mov
pop
push
add
mov
mov
mov
and
jne
imul
pusha
dec
in
mov
addl
sub
xchg
pop
popf
add
cwtl
imul
je
add
shlb
lods
cmp
jle
repnz
icebp
cmc
cmp
pop
cmpsb
test
push
push
push
js
jg
sub
rolb
fnstsw
loopne
sahf
push
iret
push
jle
outsl
pushf
jle
or
dec
sbb
fimull
push
mov
cmpsl
mov
sti
shll
xchg
lods
je
cmp
arpl
lock
icebp
and
das
adc
jmp
rclb
dec
push
cwtl
inc
enter
arpl
ret
test
es
imul
mov
cli
inc
dec
fwait
push
out
imul
jmp
rclb
inc
and
fdivl
cmp
pop
repz
dec
or
sub
int3
sub
in
inc
jo
mov
sbb
outsb
inc
cmp
cmpsb
ret
aam
xorl
mov
cld
push
aaa
cwtl
push
adc
hlt
or
in
mov
nop
movsb
xchg
arpl
mov
sahf
jp
popa
dec
or
push
sbb
cmpsl
mov
adc
insb
mov
repnz
mov
iret
cmc
les
fstpl
jae
gs
icebp
cmc
push
test
jmp
pop
mov
inc
jl
cld
fdivrs
and
call
fisubrl
loop
sar
jmp
bound
dec
add
sub
mov
lock
nop
xor
or
les
movsl
mov
movl
out
imul
mov
sub
xchg
jo
xor
and
sub
ja
sbb
shrl
mov
filds
cmc
mov
loope
inc
paddb
or
mull
pop
scas
loopne
mov
push
inc
xlat
xor
cmp
lahf
mov
pop
mov
dec
outsl
inc
xchg
push
gs
stos
jnp
leave
push
adc
ja
aam
popa
imul
adcl
mov
xor
add
test
ljmp
test
inc
push
adc
outsb
int
lds
je
fbstp
mov
test
sbb
or
pop
pop
lods
push
stc
jne
js
jp
mov
mov
jecxz
and
sub
pop
in
insl
pop
cmp
and
es
cmp
movsl
aam
in
clc
add
bound
mov
das
mov
insb
xlat
mov
das
out
jbe
ss
sub
lret
loopne
dec
stc
cmpsl
or
mov
jecxz
ljmp
popf
push
stos
xlat
mov
cwtl
dec
imul
add
daa
mov
mov
in
cwtl
test
out
mov
fmull
fstpt
mov
rorl
leave
mov
and
das
adc
add
dec
pop
outsl
popf
fs
js
lods
int3
dec
divl
test
test
add
test
and
xchg
or
mov
leave
and
scas
sbb
mov
fcomps
push
cmp
mov
stos
inc
adc
loope
fcmovb
test
out
in
add
sti
dec
pop
aam
push
mov
push
test
jmp
prefetchw
ds
and
test
add
push
out
ljmp
int
add
dec
insb
ljmp
cmc
cltd
push
jo
push
lcall
je
jmp
imul
mov
ds
xor
fidivl
in
mov
mov
inc
call
mov
jp
jae
push
out
cmp
xchg
iret
daa
sahf
push
fwait
dec
lret
hlt
pop
loopne
ja
les
stos
jl
push
adc
push
cmp
mov
hlt
mov
divl
mov
xchg
in
cmc
lods
pop
icebp
mov
push
push
mov
mov
daa
add
pop
in
jmp
adc
mov
pop
stos
adc
xorl
mov
xchg
push
scas
mov
mov
or
clc
push
mov
cmp
push
inc
in
rclb
rclb
jmp
xor
test
rcrl
arpl
mov
sub
notl
add
fprem1
cmc
mov
push
jge
test
xor
sbb
sub
xor
int
jl
mov
out
or
pop
lcall
test
jo
sbb
sbb
jl
iret
aas
cmp
adc
push
or
xchg
ss
xor
or
loope
push
sarb
mov
fs
movaps
jb
cli
add
pop
fcoml
repz
mov
lods
cmp
mulb
fisubl
popa
sub
stos
repz
or
cld
adc
sbb
dec
pop
loopne
or
xor
push
xlat
test
iret
xchg
mov
xchg
push
sti
dec
sbbb
loop
in
add
out
or
or
icebp
cmpsl
aaa
out
sub
into
mov
jno
int3
fisubrl
push
popf
add
or
or
inc
inc
jae
leave
in
sub
lods
xor
or
fiadds
mov
test
pop
add
sbb
das
nop
lock
mov
int3
nop
cs
ss
and
sbb
sub
das
dec
ljmp
mov
cmp
mov
add
mov
fstp
arpl
aam
cmp
inc
add
jle
mov
icebp
or
xor
mov
push
push
xchg
mov
je
fdivl
leave
imull
sub
arpl
cmp
jecxz
fistpl
mov
clc
loop
xchg
scas
xchg
xchg
repz
cmp
fadd
pushf
sub
lcall
cltd
dec
mov
pusha
pop
sahf
cmp
imull
mov
pop
cmp
out
lock
aaa
or
gs
mov
adc
dec
out
out
je
jbe
int
push
dec
lock
enter
in
xlat
repz
roll
lock
push
arpl
fcmovnb
std
js
xchg
or
stc
shr
outsb
insb
jo
jb
repz
cmp
dec
out
repnz
pushf
iret
ss
adc
cmp
rcr
lds
outsl
jns
push
jmp
aad
loopne
les
pop
xchg
sub
jne
add
icebp
mov
daa
or
sti
scas
jecxz
mov
pop
add
pop
xor
fsubs
aas
test
fldt
cmp
sbb
aaa
jbe
fdivrs
nop
out
mov
cld
add
shlb
add
or
or
jge
dec
adc
sbb
mov
lahf
jno
aam
push
inc
je
push
scas
je
jp
addb
xor
je
mov
push
cvtpi2ps
decl
outsl
and
clc
cmp
adc
imul
sbb
mov
pusha
leave
dec
fsubrl
fimull
imul
inc
inc
test
popl
or
fsub
push
inc
jl
cmp
and
nop
mov
imul
sahf
xor
sub
mov
push
cmp
inc
int3
xchg
aaa
sbb
mov
push
int
xchg
pop
pop
inc
cmp
jp
sbb
push
mov
sbb
mov
and
aaa
out
push
jno
mov
aas
fstpt
aad
loopne
sub
loope
jp
push
jge
xor
xchg
imul
pop
icebp
scas
jno
dec
jle
cmpsl
cli
test
pop
pop
lods
jge
loopne
pop
clc
inc
aam
xor
loope
rcrb
push
sarb
imul
sti
and
sub
sub
cmp
jb
lea
cmp
xchg
out
into
movsb
inc
icebp
scas
popa
xor
fdiv
iret
rdmsr
pop
lcall
sbb
cmpsl
jb
popl
mov
mov
es
dec
js
rcrl
popl
lods
mov
frstor
dec
aam
push
xchg
cs
mov
cmc
pop
ljmp
arpl
adc
xor
mov
loopne
popa
dec
push
push
lock
into
sarl
adc
cmp
inc
iret
sub
xchg
subl
scas
adc
push
cmpb
sti
insl
ret
filds
ret
xchg
mov
push
cmp
addr16
scas
push
sub
dec
stos
jnp
xor
and
pop
xchg
mov
lcall
xchg
xchg
pop
je
jle
add
mov
dec
lock
lea
inc
xchg
test
pop
fdivl
xchg
jne
lret
movsb
cmp
stc
xor
lahf
in
jmp
lods
push
or
xchg
xchg
add
jge
clc
ret
and
or
sbb
jmp
add
inc
arpl
sbb
clc
ljmp
jl
cld
mov
in
dec
cmpsl
clc
mov
rcrb
mov
movl
in
jnp
cmp
ret
jns
lock
jge
out
push
jl
hlt
addr16
add
arpl
sbb
test
xor
imul
add
mov
in
ret
setle
dec
xchg
mov
cmp
outsb
adc
jecxz
add
idiv
jns
hlt
imul
inc
push
adc
jl
std
das
pop
and
scas
pop
mov
mov
xchg
sub
push
mov
mov
pop
lret
aam
adc
rorb
and
rclb
das
push
jmp
fsubrl
push
loopne
stos
sub
xor
popa
or
mov
mov
jl
inc
mov
xorl
add
sbb
add
jnp
dec
insl
mov
sbb
xchg
push
dec
xchg
scas
add
adc
mov
out
xor
push
xor
mov
in
mov
lds
test
sarl
popa
push
ds
inc
ss
nop
inc
ret
ret
out
push
test
xchg
jnp
jp
andl
enter
out
jnp
es
out
inc
insb
or
inc
call
loope
lods
in
arpl
pop
mov
iret
cmp
in
add
ss
push
stos
pop
add
or
lgs
xor
mov
outsb
and
xchg
cli
adc
mov
lahf
fdiv
testb
cmp
cmp
rorb
ja
data16
pop
lea
testl
test
or
xlat
mov
or
dec
shll
jmp
cmp
mov
dec
jmp
cmc
jne
imul
mov
pop
rorl
push
call
fdivl
stos
mov
sbb
mov
jb
orb
push
cmp
rcrb
outsl
mov
pop
pop
xchg
sub
test
lods
cmpsb
xchg
xlat
xor
sub
jp
jmp
xor
sbb
shrl
push
imul
sub
icebp
push
pop
in
pop
ja
cs
push
leave
mov
sub
add
xchg
jne
aas
stc
dec
push
outsb
daa
add
sub
mov
push
inc
lods
mov
insl
sbb
sti
inc
and
fsubrs
loop
cmpsl
pop
sub
dec
push
icebp
xlat
test
push
xor
and
add
push
aam
push
push
xor
mov
jmp
push
repnz
mov
in
push
or
insl
add
jmp
gs
mov
clc
adc
mov
cmp
in
iret
mov
fcomps
es
adc
les
push
mov
xor
scas
je
jmp
pusha
sti
jmp
push
inc
ds
arpl
push
mov
cmc
lods
test
arpl
out
movsl
sbb
xlat
cmp
sbb
lods
lcall
fs
mov
pop
pop
push
push
test
fisubl
pop
shrl
xchg
enter
jnp
test
scas
cli
push
pop
int3
push
xlat
cmp
dec
lret
data16
aad
push
insl
mov
addr16
je
arpl
fs
call
hlt
pop
aad
lods
jo
mov
inc
into
jge
dec
ja
stos
pop
mov
pop
or
insb
add
add
pushf
outsb
cmpsl
cmpsl
inc
mov
dec
dec
jno
cmp
xchg
and
pop
int
aam
arpl
nop
push
add
imul
add
lods
cmp
sbb
sbb
outsl
js,pt
fsubs
mov
mov
pop
sbb
inc
dec
sbb
pop
ja
decl
adc
sbb
push
or
out
mov
xor
cli
enter
scas
and
divb
lret
popa
outsb
adc
call
xchg
inc
mov
lock
das
dec
jl
loopne
push
stc
cmc
lock
mov
loop
insl
push
mov
adc
and
mov
push
fnstenv
mov
stos
and
pop
lock
cltd
jo
inc
nop
sub
mov
mov
and
inc
jb
xchg
pop
or
dec
add
push
push
and
or
push
cmc
lds
xlat
adc
js
mov
dec
add
arpl
outsw
push
add
fwait
call
dec
dec
icebp
or
call
out
or
loopne
and
cld
and
in
test
or
fwait
push
inc
into
rol
ljmp
fisttpll
mov
jecxz
and
aam
leave
mov
dec
fadds
sarb
std
lock
leave
lea
add
lahf
mov
jge
jno
das
lods
and
fndisi(8087
mov
and
mov
cmc
sub
add
xor
adc
mov
stos
loopne
pop
jmp
adc
mov
movsb
add
outsl
xchg
mov
loope
sub
sbb
and
fsub
jp
stos
stc
popa
inc
jmp
sub
jge
push
push
js
lcall
jmp
sbb
test
fwait
inc
out
cmpsl
scas
xchg
aad
sub
rorb
adcl
xor
jp
popl
fiaddl
insl
sar
inc
pop
or
jle
inc
adc
mov
push
fcom
cmc
lock
add
jl
mov
ljmp
push
loopne
jbe
xor
jecxz
push
push
xor
xlat
test
push
mov
add
test
lock
cmpsl
repnz
and
cmp
xchg
loopne
loop
sbb
xchg
ja
enter
pop
orb
mov
adc
les
movsb
imul
push
mov
dec
lahf
mov
cmp
sub
dec
xor
iret
push
mov
mov
ja
push
xor
btc
inc
seto
daa
and
sahf
lock
call
stc
jg
mov
add
inc
cltd
dec
sbb
orl
clc
xorl
xor
pop
dec
shl
adc
hlt
dec
scas
imul
add
xor
mov
push
mov
outsl
sti
shrb
clc
mov
sbb
sbb
sub
dec
push
rclb
xchg
mov
cli
push
cld
cmp
imul
xor
jb
jno
push
push
jno
pop
and
sub
cmp
in
out
adc
pop
sti
pop
xchg
jecxz
gs
cmp
je
pop
call
mov
fisttpll
xor
insl
hlt
cwtl
inc
add
out
jp
xor
jmp
mov
daa
out
fsubs
stc
adcl
aas
lock
dec
mov
out
ror
pop
loop
mov
and
imul
and
cltd
fildll
mov
cmpsb
cmpsb
movsb
mov
cmp
daa
mov
inc
inc
mov
push
sbb
pushf
mov
xor
mov
stos
xchg
xchg
mov
cmc
cmp
xchg
mov
mov
data16
inc
outsb
pop
arpl
orb
or
jl
push
and
mov
xchg
lods
sub
sbb
mov
add
mov
inc
push
xchg
jp
in
imul
xchg
roll
adcl
mov
mov
je
dec
shlb
insl
cmp
int
mov
push
push
ss
cmpl
lret
arpl
movsb
lods
mov
mov
mov
lods
pop
jecxz
cmpsl
insl
mov
imul
push
xchg
inc
lea
dec
xchg
bound
lods
sbb
jmp
xchg
jo
rorl
push
mov
dec
fs
std
mov
cmc
aam
mov
in
mov
and
test
cmp
adc
xchg
test
fwait
push
inc
push
dec
or
push
aas
mov
xor
mov
jecxz
nop
jae
dec
mov
lock
or
push
call
scas
sub
imul
cmp
pop
aas
mov
arpl
mov
imul
or
ss
test
mov
cmp
inc
lcall
mov
stos
fisubrl
cmp
aas
icebp
mov
dec
add
mov
push
mov
js
dec
into
in
cmovb
mov
aaa
js
cmp
cmp
jns
dec
lret
andb
sub
sub
jbe
push
stc
nop
sub
xchg
or
aad
lods
mov
dec
xor
lods
push
jl
push
cmpsl
call
jle
mov
ljmp
mov
sti
pop
jp
inc
inc
adc
pop
aaa
xor
sub
mov
pop
hlt
dec
icebp
add
sbb
movl
popa
scas
ds
cmp
mov
loop
lret
ljmp
int3
jl
in
je
stos
jnp
mov
aam
insb
sbb
ds
push
cmp
data16
fwait
imul
loope
and
pop
loope
cmpl
xchg
mov
xchg
aad
and
lods
imul
cmp
jae
pop
push
stos
xchg
out
jne
test
lods
ja
cmpsl
call
jo
add
sub
pop
test
shll
pop
ja
ret
xchg
out
and
test
data16
push
test
ret
pop
sbb
xchg
sbb
mov
push
pop
jmp
cltd
scas
pushf
mov
mov
punpcklbw
mov
or
or
sub
sub
lods
or
fsubs
jno
stos
scas
leave
xor
out
std
sbb
call
outsb
mov
iret
xor
ret
jnp
faddp
popw
pop
mov
sub
test
jg
imul
mov
sbb
push
sbb
jge
mov
addr16
cmp
cld
cmp
lahf
sbb
cmp
in
aad
insb
xchg
lods
lcall
pop
jo
or
notb
test
mov
pop
movsb
and
or
adc
jb
cli
mov
sub
cmpsl
das
adc
dec
xor
scas
push
sahf
sahf
cmp
pop
push
sbb
mov
mov
jne
test
mov
cmp
icebp
insl
clc
jl
clc
mull
int
pop
sbb
div
jno
add
mov
call
push
sub
test
pop
lods
add
jmp
popf
xor
cmp
inc
icebp
xor
xor
js
dec
fadds
adcl
push
adc
mov
inc
mov
inc
mov
jb
fildl
out
std
rcr
ror
fs
push
jmp
les
mov
mov
mov
lds
mov
jmp
aam
jno
push
push
sbb
mov
ret
fdiv
js
add
in
fdivl
ss
jmp
mov
sti
adc
roll
mov
push
cmp
dec
outsb
pop
sub
push
mov
rorl
stos
cmpl
into
cmp
sub
jbe
fadds
jge
daa
add
dec
add
into
sub
push
cltd
add
add
mov
mov
sbb
fs
outsb
scas
stos
jbe
and
dec
ficompl
inc
int3
mov
or
dec
push
mov
std
clc
shr
call
out
leave
and
pop
movl
lahf
jle
fnstsw
ror
aad
test
add
inc
cmp
xchg
mov
fdivl
fucomp
jne
mov
nop
testb
mov
aam
fwait
inc
aaa
xlat
adc
ljmp
jle
dec
fs
sbb
into
and
jbe
rolb
addr16
cmpsl
push
mov
insb
sbb
and
cmp
dec
jb
jmp
rclb
repz
in
lea
mulb
cmp
mov
inc
jl
lds
jg
call
add
shrb
testb
loope
or
ret
or
sbb
or
pop
outsl
cld
or
mov
jecxz
mov
pusha
pop
sbb
in
sbb
and
lret
stos
dec
divb
lock
push
or
inc
dec
jne
jno
mov
mov
adc
out
pop
jne
sbb
mov
adc
sti
fidivrs
cwtl
add
jo
outsb
xchg
out
mov
pop
or
hlt
jle
cmc
and
mov
push
lcall
popf
stos
jnp
and
test
xor
rcrl
aaa
push
sbb
and
and
mov
data16
mov
lods
mov
sub
divps
xor
pop
xchg
pop
popa
loope
sahf
ds
add
mov
movsb
cmpsb
sbb
inc
clc
in
xlat
cltd
insl
xlat
dec
and
adc
fidivrl
sahf
xchg
outsb
daa
movsb
xor
mov
jle
dec
cmpsl
loop
out
jae
scas
jp
xchg
cwtl
rolb
jmp
arpl
push
mov
test
aam
pop
adc
in
test
mulb
out
or
ficompl
cld
jo
test
arpl
sti
popf
ds
movsb
mov
add
ficoml
xchg
mov
push
call
std
add
repnz
mov
xchg
jae
xor
push
sbb
inc
inc
xor
lahf
or
loop
cmpsl
sbb
inc
subb
pushf
or
stos
movsb
loope
ja
daa
push
pop
or
in
prefetchw
hlt
xor
adc
jge
sbb
dec
cmpsl
outsl
mov
pop
aad
jnp
adc
stc
pop
xchg
aam
lea
ja
cmpsl
decl
mov
pop
clc
adc
cli
cmp
cmpb
inc
xchg
xorb
pop
inc
cmp
in
sub
mov
add
pop
push
push
insl
outsl
dec
or
dec
aam
test
mov
pop
int
ss
jno
sahf
in
push
sahf
fcoms
cmp
fists
inc
xlat
andb
jmp
inc
mov
jne
insl
lock
jmp
xchg
push
pop
iret
sti
ljmp
xchg
push
push
sbb
femms
iret
je
jbe
jmp
inc
mov
cmp
ljmp
cltd
push
and
and
inc
fildl
sarb
rcrb
mov
ret
or
mov
adc
cmc
scas
cmc
les
ds
int
pop
push
push
into
jo
and
xchg
lret
sti
loopne
lods
jo
push
popa
fiadds
cmpl
xor
push
lds
ds
mov
scas
loopne
lret
add
shrb
cmp
sub
lods
notb
dec
xchg
pushf
xor
jns
stos
scas
call
andl
arpl
test
inc
mov
lods
movsl
xlat
cs
sbb
clc
adc
mov
lcall
addr16
fwait
push
fisubrl
repz
xchg
cmp
push
cmp
mov
mov
mov
cmp
mov
adc
bound
cmc
sub
lahf
sbb
mov
in
fnstenv
sahf
outsb
fs
mov
mov
mov
or
adc
add
loopne
fidivl
push
xchg
push
push
adc
in
mov
cmp
in
add
xchg
sub
or
jmp
rorl
inc
scas
cwtl
inc
arpl
inc
and
lods
loopne
shlb
icebp
jne
or
inc
cmp
aaa
clc
and
icebp
mov
addr16
je
movl
fs
inc
pop
lret
jmp
fstpl
in
or
adc
add
jns
pop
mov
shlb
leave
into
fs
cli
jg
mov
pop
rol
es
lcall
or
cmpsl
mov
loope
scas
test
dec
fninit
into
dec
push
push
int3
pop
aaa
pop
daa
push
sbb
or
or
jno
sbb
mov
scas
and
push
jb
xchg
dec
jo
and
movsl
les
dec
popa
negl
dec
mov
lcall
mov
test
mov
loop
imul
push
or
jle
or
or
rcrl
neg
outsl
mov
rolb
int
and
push
dec
mov
sub
js
pusha
mov
imul
inc
mov
inc
js
loop
sub
push
mov
cmc
mov
jl
mov
xlat
cld
imul
clc
or
or
stc
test
inc
xchg
mov
push
jp
sbb
mov
loopne
inc
push
fnstsw
test
lds
andb
aad
popa
mov
ficoms
call
not
mov
popa
daa
sub
inc
shlb
push
jno
sbbb
fistl
jle
in
test
pop
ss
scas
outsl
adc
arpl
stc
pop
testl
push
jp
mov
sub
pop
push
sbb
pop
sbb
or
cmc
rol
lahf
jno
jnp
mov
popf
and
add
mov
cmp
sbb
push
imul
jnp
cmp
cmpsb
shl
pusha
adc
out
inc
jp
mov
xchg
sub
scas
loope
fimull
cld
cmp
pop
or
mov
adc
ss
or
cmp
inc
mov
mov
ret
jb
pushf
stos
or
lahf
jge
lret
jp
das
idivl
sbb
and
cmp
pushf
lahf
js
call
fstl
lea
cmp
jge
fldl
lcall
lods
pop
cmp
cmp
es
lea
xor
jbe
hlt
jge
push
sub
pop
scas
fdivrs
mov
jne
ret
cmp
stos
lcall
shlb
jae
push
or
ret
addr16
mov
cmp
push
inc
shll
outsl
xchg
insl
mov
loopne
fcompl
mov
sbb
notb
lods
cmpsl
mov
inc
nop
cmp
xchg
out
push
cmp
mov
sub
fsub
lahf
push
int3
mov
xor
cmp
sub
jcxz
dec
sbb
inc
cmc
sti
insl
sub
mov
mov
pop
cmp
pop
cwtl
push
scas
pop
mov
mov
and
jne
add
adc
mov
out
jmp
mov
clc
mov
aaa
mov
icebp
inc
leave
inc
mov
or
ret
enter
cmc
mov
lods
jmp
xor
pop
mull
jl
push
jecxz
imul
ret
bt
testl
std
nop
push
in
lods
jns
add
sbb
sbb
dec
daa
data16
paddusb
push
pop
inc
cmovae
jo
xor
mov
mov
and
pop
sbb
les
push
cli
cmpb
or
dec
xchg
ds
scas
int
mov
add
xor
aas
int
sti
sbb
dec
subl
jno
cmc
and
hlt
call
mov
mov
xchg
mov
sbb
mov
repnz
es
mov
aam
fbld
push
dec
sbb
pop
js
jae
mov
subps
fildl
jnp
cli
std
fs
call
xor
fsubrs
ja
js
in
js
shr
adc
or
dec
jne
andb
das
add
cmp
xchg
aaa
pop
mov
cmpsl
arpl
jno
pop
dec
stc
aam
mov
ljmp
out
addl
xor
xlat
aam
out
fldt
ret
push
in
cmpl
shlb
adc
test
mov
pop
mov
lock
clc
outsb
mov
xor
dec
pop
aam
xchg
ret
int
fwait
call
pop
aad
ret
inc
mov
or
and
enter
fimuls
aaa
movsb
insl
ljmp
mov
cs
mov
jno
sbb
das
add
xlat
test
xchg
popa
push
orl
xchg
push
xlat
push
pcmpgtd
inc
xlat
jno
loopne
rolb
stc
std
cmp
iret
pop
lahf
aam
push
push
icebp
and
dec
mov
or
sub
inc
adc
xor
jne
inc
push
add
fadd
pop
inc
call
repnz
insl
jmp
mov
mov
scas
stos
jo
or
test
add
inc
nop
orl
inc
xlat
cs
push
push
movsl
xchg
testl
pop
fs
loopne
cmpsl
xchg
mov
ud2
leave
sub
push
popa
lret
pop
lret
incl
and
xchg
out
xlat
lods
lret
lods
lret
idivb
dec
pop
divl
incl
pop
push
xchg
icebp
lea
ljmp
shl
insl
adc
out
out
pop
cld
xchg
mov
movsb
or
sbb
add
jl
dec
lds
sahf
jbe
notb
movsb
inc
gs
das
test
dec
push
lods
xchg
or
dec
rcpps
xlat
mov
lret
mov
cmp
mov
cltd
adc
lret
mov
mov
mov
pop
pop
mov
std
pop
loopne
ret
nop
mov
mov
lds
adc
mov
and
pop
xchg
push
aam
stos
jp
jb
mov
mov
pop
add
sbb
sbb
adc
lock
lock
cmc
xchg
adc
sub
adc
push
jmp
xlat
outsl
adc
inc
rorl
xor
xchg
imul
pop
xchg
jb
add
ret
orl
mov
mov
mov
enter
popa
in
out
dec
out
fisubrs
aas
xchg
mov
xor
sub
xchg
pop
xchg
jle
xchg
xchg
mov
xchg
mov
adc
sahf
mov
add
shrl
fst
cs
es
hlt
fcmovnb
add
xchg
mov
dec
insl
sub
insl
cs
sarl
dec
sbb
adc
lods
filds
ljmp
push
mov
inc
mov
cmp
xchg
inc
pop
int3
gs
xchg
pop
popf
lods
xchg
sub
lods
call
insl
and
shrl
pusha
aas
nop
outsl
fmulp
cmp
fwait
rcrb
sub
sahf
daa
push
cmp
jne
fninit
pusha
fisubs
pop
ret
pop
scas
dec
jae
xor
mov
mov
push
mov
jnp
mov
mov
pop
bound
jbe
mov
and
mov
ror
inc
xor
mov
scas
daa
cmp
lret
loop
mov
loop
inc
cli
jle
pusha
mov
jno
pop
push
sub
add
push
les
cmp
into
mov
sub
fucomp
ljmp
adc
push
mov
mov
pop
fdivr
daa
xchg
push
xor
cli
mov
loop
mov
push
mov
ret
mov
sub
mov
jne,pn
fdiv
andl
cli
arpl
je
cltd
push
xchg
or
mov
xchg
imul
jb
add
mov
mov
sub
test
addb
mov
xor
pusha
add
shl
sub
loop
adc
add
out
scas
popf
and
pop
stos
inc
mov
pop
ret
cmpb
or
sub
rcl
test
dec
pop
mov
push
shll
sub
cmp
in
sbb
cmp
mov
je
faddl
call
mull
dec
loopne
lods
jecxz
sub
lods
repz
add
std
je
lret
pop
insb
inc
inc
ret
jae
cmc
es
mov
sbb
pushf
and
cwtl
add
popf
dec
xchg
out
mov
xchg
inc
test
pop
bound
hlt
mov
jg
and
pop
aam
test
mov
test
xor
pop
push
pushf
cmp
cmpsl
pop
mov
subb
pop
mov
lock
sti
inc
loopne
sbb
test
pop
cmp
inc
ret
mov
sub
mov
mov
dec
into
cmp
lahf
pop
outsl
cmp
jb
and
dec
outsl
frstor
cli
ss
sbb
shlb
bound
insl
cmp
push
push
pop
outsl
pop
movsb
xchg
stos
pusha
lret
imul
test
and
mov
cmp
inc
insb
js
dec
dec
loopne
and
sti
sbb
inc
xchg
clc
test
mov
outsl
jp
shrb
push
andl
lock
xchg
movsb
into
push
mov
call
arpl
adc
popf
scas
or
jnp
fcmove
scas
pop
sbb
mov
push
pop
test
inc
xchg
mov
imul
insb
imul
outsb
push
in
pushf
imul
jbe
insl
mov
add
lock
dec
insb
mov
push
inc
adc
push
out
push
arpl
sbb
iret
and
add
ja
test
pop
jmp
push
sbbb
lods
test
pop
shlb
div
inc
fst
xor
scas
mov
adc
push
push
insb
fwait
sti
clc
or
hlt
es
leave
mov
jle
pop
outsb
lock
dec
test
push
je
inc
or
add
stos
mov
test
sub
push
cmpb
inc
stos
or
inc
fsubrs
xor
stc
mov
test
xchg
push
add
stos
aam
rorb
inc
push
pop
bnd
mov
ljmp
scas
cmp
or
sarl
aaa
es
push
pushf
bound
int3
cli
mov
and
inc
lods
and
call
mov
or
mov
jno
mov
pop
hlt
leave
js
les
mov
lock
xor
and
enter
mov
mov
fiaddl
fidivrs
mov
cli
jno
dec
lock
lds
shll
mov
loope
insl
fcoms
daa
xchg
test
mov
sbb
and
lock
pop
sub
pop
bound
jnp
out
sbb
into
adc
xchg
xlat
mov
gs
pop
test
stos
xchg
insl
xlat
jne
fidivs
pop
daa
pop
push
jecxz
jp
inc
sbb
jg
fstpt
jmp
sbb
dec
inc
or
cmp
jne
jp
mov
jmp
jnp
dec
inc
imul
call
int3
lcall
push
std
test
call
or
mov
test
jnp
mov
dec
push
and
xchg
int
xor
and
ficompl
pop
lock
push
scas
pop
pusha
lods
subb
mov
addr16
and
push
push
dec
js
xorb
out
test
inc
pop
inc
inc
outsl
inc
andl
push
fists
je
push
test
icebp
mov
pushf
add
cmp
mov
mov
lahf
fdivl
into
jnp
fwait
out
daa
and
jbe
jle
jmp
aas
push
cmc
shll
out
inc
jg
inc
mov
mov
or
cmp
or
mov
insb
aam
scas
xchg
mov
cli
fcmovnu
aad
xor
scas
dec
lock
notl
pop
xlat
lock
in
lea
jecxz
jne
adc
imul
test
in
and
dec
loope
cmp
pop
sbb
call
adc
in
ja
add
jbe
cs
icebp
fdivrl
rorb
sbb
loopne
mov
lock
sbb
stc
scas
xor
outsb
dec
sub
lods
idiv
cltd
imul
in
cmc
xchg
imul
pop
pusha
mov
jge
jb
test
cmpsb
scas
pop
pushf
jecxz
or
pop
mov
testb
gs
or
std
cltd
xchg
pop
sbb
les
mov
les
xchg
pop
add
in
lea
sti
fdivrs
xor
mov
clc
call
outsb
sbb
pcmpeqd
lcall
push
cmpsl
jns
push
daa
rcll
mov
outsb
pusha
mov
adc
mov
push
jl
inc
call
sbb
iret
xchg
aam
jbe
cmp
mov
push
mov
fcompl
sbb
inc
imul
or
sbb
lock
enter
push
gs
cmp
rolb
and
lock
push
pop
push
mov
jl
xorb
inc
inc
ret
push
lods
xchg
xor
and
sub
sbb
sbb
rolb
clc
mov
inc
fbstp
mov
loopne
es
in
sub
push
clc
jl
sub
psubd
jnp
mov
psubusw
lea
mov
jno
mov
mov
mov
lret
js
mov
xchg
outsb
xor
jp
aam
mov
es
out
sahf
sub
loopne
out
ja
sbb
stos
pop
mov
cli
lods
lea
pusha
adc
adc
dec
dec
mov
repz
xchg
icebp
inc
sbb
xor
movsb
lahf
mov
mov
ret
out
xchg
insl
mov
jecxz
das
pop
mov
fldenv
clc
sub
dec
jcxz
lret
mov
add
movb
rclb
cmp
or
cmpl
and
pop
inc
add
mov
push
cmpsb
ret
xchg
xlat
aad
push
into
js
mov
xchg
cmp
mov
daa
add
pushf
or
aas
cmp
int3
popa
mov
divb
cmpl
mov
je
mov
scas
jmp
push
or
sub
stos
cmpsl
xchg
xor
inc
out
cli
into
lds
adc
push
imul
push
adc
xor
push
aad
push
mov
push
dec
xchg
dec
sbb
dec
pop
cmp
loope
fstl
cltd
jnp
cmpb
or
mov
push
icebp
xchg
mov
addb
pop
add
ret
hlt
push
push
int3
fimull
test
scas
pop
xchg
aam
xor
ljmp
or
pusha
add
mov
pop
in
lods
test
stos
push
push
xchg
stos
in
pop
addr16
xor
push
pop
push
push
mov
xor
and
repz
fwait
pop
loope
pusha
lods
fdivrs
cmpb
lea
mov
je
pop
mov
and
inc
pop
add
pusha
sub
cli
aad
nop
popa
inc
ret
imul
vpackuswb
movsb
inc
cld
sbb
roll
mov
lods
test
mov
fs
or
hlt
and
cmpb
jge
or
aam
xchg
pop
ret
inc
and
cmpsl
push
outsb
mov
fdivrs
cmp
inc
test
es
pop
inc
fucom
fcmovnbe
stc
push
enter
push
xchg
js
jge
inc
or
rorb
call
lcall
repnz
xor
mov
pop
mov
ss
push
dec
push
subl
sbb
mov
sub
in
data16
adc
ljmp
dec
sahf
shll
jl
shr
rclb
and
fimull
aad
cmpsb
mov
imul
lock
lock
cmp
les
rolb
add
push
in
push
scas
cltd
cmp
decl
rclb
jb
push
push
cli
adc
push
sub
enter
in
imul
lods
insb
fisttpll
shll
aas
daa
jp
je
scas
sbb
pop
dec
dec
idivb
jo
ss
int
or
outsl
inc
mov
push
lcall
xchg
cmp
std
xchg
aad
rolb
iret
lcall
dec
push
and
jmp
sbb
cmpl
rolb
inc
ja
filds
popl
movsb
decb
test
stos
scas
dec
insb
aaa
mov
popf
jge
fidivs
icebp
mov
jo
mov
cwtl
popf
xor
movsb
or
mov
push
loop
shll
popf
test
mov
hlt
mov
or
or
pop
sbb
inc
push
popf
loopne
pop
insb
add
int3
sbb
fiaddl
insb
sub
ds
push
inc
mov
cmp
std
ljmp
sbb
sbb
and
in
xchg
dec
cmp
das
jno
dec
ljmp
rcrl
out
test
test
mov
sbb
xchg
adc
fcmovbe
xchg
adc
inc
loopne
mov
out
stos
cmpsb
ret
push
cld
sbb
or
lock
dec
imul
loopne
jp
xor
subb
popf
xchg
inc
dec
pop
sbb
push
dec
jp
push
pop
jbe
cmpsl
aas
add
cmc
lds
adc
call
fldl
call
mov
or
aaa
les
imul
aad
inc
pusha
clc
jecxz
lock
pop
adc
dec
xor
mov
mov
sbb
fst
stos
inc
push
push
cmp
movb
das
mov
jmp
dec
in
ret
push
push
dec
shll
lock
xor
inc
ja
xchg
or
dec
add
rorl
rclb
outsl
nop
sub
sarb
adcb
fstl
dec
test
adc
mov
xchg
lds
fidivs
sarb
cmp
popf
dec
js
jge
cmp
and
inc
jg
cmp
dec
fimuls
vcvtpd2dqx
fiaddl
mov
pop
fwait
sarb
arpl
sahf
sub
adc
jecxz
scas
xchg
sahf
adc
xchg
jne
adc
xor
sub
sub
std
mov
lock
inc
jae
or
ljmp
stc
test
cld
add
push
in
mov
mov
pop
push
mov
loop
add
dec
enter
inc
push
push
cmova
imul
jge
mov
cmp
sahf
dec
adc
andl
fcom
jno
push
pop
loopne
movsb
cmp
in
push
or
fnstsw
sub
jmp
ror
push
dec
mov
popa
pop
dec
mov
adc
pop
lahf
mov
cmpsb
sbb
pop
fcmove
fistl
pushf
jmp
insb
and
inc
iret
mov
lock
jge
push
dec
int3
adc
xor
mov
stos
mov
push
pop
subl
test
fistpl
fdivrp
mov
inc
test
xchg
and
ret
mov
mov
cmpsl
clc
call
imul
movsl
push
mov
jge
jecxz
fidivrs
out
sbb
adc
les
mulb
xchg
ljmp
mov
lea
je
cltd
setge
imul
mov
pop
dec
mov
stos
mov
sbb
mov
out
pop
call
push
icebp
sub
pop
mov
insl
fcomps
add
jae
sbb
fdivrs
roll
mov
and
fwait
mov
lahf
or
or
adc
xchg
fsubl
jecxz
add
lock
sub
mov
xchg
fidivrs
es
ljmp
mov
scas
movsl
pushf
hlt
test
test
xchg
pop
and
scas
subb
cmovg
mov
pop
xor
xor
fdivrl
sub
dec
add
mov
ret
test
mov
sbb
cltd
xor
clc
xchg
cmc
popa
leave
inc
pop
int
sbb
scas
mov
insb
cmp
xlat
sub
xchg
sti
ret
ret
daa
pop
or
imul
sbb
sub
push
mov
adc
orl
xor
add
cmpxchg
xchg
dec
jns
les
std
ja
clc
xor
xor
xor
fiaddl
fldl
in
push
add
or
inc
xchg
int3
cmp
into
jge
jnp
clc
dec
arpl
jne
aas
add
sub
shll
sub
push
pop
pop
xchg
inc
adc
jbe
int3
or
mov
mov
xor
cmc
add
adc
jge
cmp
and
pushf
enter
push
xchg
out
mov
add
pop
or
inc
loopne
mov
jp
jae
mov
sbb
ljmp
push
in
subl
or
pop
out
imul
sbb
mov
sub
push
call
jb
push
mov
add
lds
and
mov
mov
inc
mov
test
addr16
xchg
scas
test
or
fwait
imul
ror
pop
dec
push
xor
jo
add
lea
stos
ss
xchg
jnp
add
stc
or
cmpsb
or
xorl
sub
shlb
push
cmpsl
push
or
push
lods
jnp
or
xor
arpl
add
outsb
fstpt
inc
iret
jnp
insl
jge,pt
loope
cmp
sbb
jmp
add
mov
mov
mov
ret
iret
outsl
dec
adc
mov
dec
adc
dec
inc
je
or
data16
loopne
aad
sbb
and
mov
ja
push
dec
add
ljmp
getsec
cli
decb
and
imul
jo
mov
xor
ficoml
insb
jo
out
js
mov
sbb
cmp
inc
cmp
add
xor
popf
xchg
xchg
mov
lds
icebp
insl
mov
jp
jb
dec
nop
lock
ljmp
arpl
sar
or
jmp
and
dec
aas
push
hlt
jne
push
add
mov
dec
or
jmp
cltd
rcr
stos
mov
rclb
repz
mov
jbe
jg
lea
daa
fstpl
shrd
xchg
and
jmp
jg
fsubs
sbb
arpl
cmp
aad
loope
insl
rol
inc
out
out
sbb
lret
lret
pop
mov
std
iret
pop
outsb
imul
addl
dec
add
cs
icebp
scas
and
mov
roll
mov
cmpsl
out
imul
mov
pop
fildll
nop
mov
out
push
adc
imul
jnp
push
roll
in
cs
lods
mov
jmp
push
push
into
es
leave
mov
lock
sbb
jmp
mov
test
rol
rolb
pop
adc
push
lock
aaa
xor
push
iret
sbb
adc
cmp
cmp
adc
or
xchg
jp
adc
dec
dec
ud2
popf
jmp
lods
pop
dec
add
mov
subb
cwtl
in
pop
inc
and
pop
pop
push
aam
sub
cmp
out
mov
aam
jmp
xchg
cmp
jae
jg
push
xlat
jbe
sub
in
lahf
and
icebp
cli
add
mov
sub
push
and
xor
scas
or
lods
xchg
insb
cli
sbbb
mov
jne
mov
jns
and
test
orl
jmp
mov
ds
int3
aam
or
dec
stc
daa
imul
ficoml
sub
xlat
cltd
int3
xchg
mov
dec
sbbb
push
jle
arpl
lret
jl
into
cli
xor
pop
xorb
data16
xchg
outsl
aam
sub
cwtl
insb
stos
mov
mov
outsb
push
rcrl
cmp
jo
js
sbb
pop
hlt
aaa
lret
sqrtps
ss
fstpt
dec
jb
sub
sub
movsb
in
xchg
insl
push
mov
pop
int
cli
test
out
mov
pop
lock
pushl
enter
lahf
mov
ss
pushf
cltd
push
aam
hlt
cli
bound
mov
out
and
xlat
inc
cmp
jecxz
pushf
add
adc
fisttpl
jae
imul
scas
add
sub
push
clc
cmp
mov
sahf
sbb
shll
sbb
dec
add
and
jmp
mov
lds
mov
add
cmp
or
fcmovne
adcb
mov
jge
scas
out
pop
je
enter
cmc
popf
and
push
xchg
mov
inc
aad
sbb
and
loope
mov
pushf
or
cli
ret
sub
dec
sbb
sbb
sarl
xchg
jbe
mul
cmp
mov
push
cmp
scas
outsb
pop
xor
add
push
js
scas
xor
mov
adc
sbb
or
sub
xchg
or
push
xor
mov
loop
dec
es
out
jle
pop
add
mov
pop
aas
mov
xlat
push
sbb
xorl
mov
arpl
pop
sub
pop
and
ret
pop
push
pop
cmp
lret
imull
sbb
sub
imul
bound
jno
mov
insl
fsubrl
jecxz
pop
pop
xchg
sar
inc
cmc
dec
add
pop
push
out
movd
in
sub
push
jnp
or
ud0
mov
add
add
add
push
jg
hlt
inc
inc
or
inc
jmp
inc
xor
sub
clc
or
test
inc
pop
pop
sahf
cwtl
xor
and
cmp
pop
xchg
dec
icebp
je
ja
or
mov
xchg
es
xor
icebp
push
je
cmp
out
mov
lahf
push
push
fdivl
lcall
mov
mov
mov
pop
mov
bndldx
popf
xor
pop
out
rol
ret
pop
sti
xor
push
pop
jae
and
cli
inc
push
push
sub
pop
mov
ja
sub
bsr
jp
pop
mov
pop
es
xchg
mov
sub
inc
push
test
pop
repnz
xlat
cmpsl
adc
xor
ja
xor
mov
sarl
je,pn
fcomps
dec
ljmp
jno
add
fstpl
cmp
jo
sub
aas
mov
test
lret
fcomps
js
mov
movsb
aad
inc
add
insl
lea
pop
mov
sbb
popf
andb
mov
jns
in
jns
mov
rolb
dec
call
add
mov
je
popf
pop
test
mov
test
fimuls
cmp
adc
and
mov
jg
aam
stc
mov
je
xchg
stos
sbbl
dec
fistl
std
fisttpl
inc
push
ja
add
cli
je
sub
add
pop
popf
pop
add
shrb
jg
mov
rol
fsubl
std
or
sub
push
stos
mov
mov
jno
aam
pop
aaa
std
ljmp
or
out
inc
ficoms
xor
scas
dec
inc
mov
shl
loop
dec
notl
and
mov
pop
xchg
or
rcl
jle
imull
and
add
movl
add
icebp
popf
mov
mov
xchg
push
pop
and
bound
mov
push
test
pop
pop
add
call
mov
push
mov
pop
test
add
fcmovnb
out
xor
int
subb
inc
lock
mov
movsl
inc
adc
add
lods
push
ficomps
xor
lods
dec
repnz
sbb
pop
int3
xor
fdivr
push
pop
mov
bound
or
inc
cmp
jp
mov
mov
sbb
fdivs
jb
pop
jmp
fcomip
imul
cwtl
inc
aaa
cmp
sub
mov
dec
out
inc
mov
popf
aam
test
pop
clc
roll
unpckhps
icebp
lds
adc
inc
stos
fdivrs
into
call
out
xor
pop
mov
jae
sarl
and
cmp
xor
js
addps
popa
subl
push
fs
subl
aas
shlb
push
repz
xchg
add
outsl
int
adc
addr16
addr16
lds
testl
bound
add
adc
repz
stos
inc
fs
mov
jae
jns
cmpsl
xchg
push
arpl
mov
and
fldz
mov
in
adc
stc
mov
cmp
jae
cmpsb
ds
adc
jae
push
sub
xchg
ret
sub
fst
nop
rorl
jle
push
pop
ds
sub
movsb
push
dec
push
cld
pop
daa
lds
xlat
pop
mov
lcall
hlt
jp
add
popa
adc
insb
fisttpll
subb
adc
fcmovne
loopne
sete
add
ss
cwtl
mov
mov
push
aam
adc
push
lock
les
jo
adc
into
out
fdivrp
dec
inc
cmc
sahf
jo
ds
pop
push
pop
adc
inc
jne
push
xor
push
xchg
in
cmpsb
js
stc
fcompl
rcrl
dec
jbe
xchg
adc
mov
roll
in
repnz
jge
mov
je
jl
add
lock
push
jp
inc
xlat
xor
cmp
inc
cmovns
cmp
or
inc
cmp
in
adc
hlt
dec
pop
mov
push
xorl
adc
sti
xlat
jns
inc
push
rorl
sahf
mov
psadbw
mov
mov
add
imul
outsl
sbb
adc
cmp
ret
sub
push
pop
adc
aam
cmpsb
jecxz
dec
inc
xchg
add
decb
loopne
loopne
loop
das
pop
test
push
jbe
std
dec
pop
xlat
add
xchg
pop
popf
ja
insb
pop
loop
cmp
push
gs
adc
insl
and
mov
std
je
in
mov
push
xor
cs
cwtl
fucomi
push
adc
add
dec
xlat
xor
cmp
shll
out
adc
xchg
es
outsb
out
add
sbb
xchg
xchg
test
shr
push
add
scas
or
cltd
fwait
in
cmp
clc
addl
pop
in
pop
mov
inc
repz
out
mov
cs
or
sub
outsl
jae
add
mov
jne
cmp
rorb
mov
out
inc
and
jno
xor
mov
pop
xchg
sbb
lahf
add
imul
enter
sub
outsl
xchg
test
test
je
sbb
adc
cli
xchg
es
lods
cmp
popf
iret
int3
mov
test
inc
testb
pop
sub
movsl
cld
in
add
pop
mov
push
cmc
shr
insb
or
sbb
lock
fwait
mov
out
xchg
icebp
push
ldmxcsr
rcr
xlat
sbb
int
fistpl
adc
ss
xor
ja
or
xorl
stos
jecxz
addr16
and
sbb
add
and
in
mov
cs
scas
dec
ret
mov
pop
mov
lea
push
rorl
cmp
lea
enter
xorb
hlt
int3
mov
sahf
add
call
out
shl
xchg
fistpl
or
ja
movsl
push
ret
sub
cmp
jne
add
pop
daa
push
stc
movsb
das
push
inc
sbb
fldcw
push
inc
push
lods
cmp
shll
sbb
inc
repz
cmp
popa
mov
sub
lods
adc
es
jbe
les
inc
push
ret
adc
mov
jg
push
icebp
gs
fcmovu
outsl
jmp
xchg
ret
xchg
cmp
jle
cmpl
push
jns
test
cmpsb
sbb
lods
xchg
xlat
sbbb
cld
xor
xor
pop
jg
xchg
mov
je
mov
stos
push
adc
sti
adc
enter
icebp
lret
push
jns
jne
sbb
pop
sti
into
add
cmp
popl
push
loop
mov
pop
mov
ja
and
loope
clc
test
jg
incb
cld
ljmp
inc
jo
add
xor
and
push
push
fistpl
cmp
add
cli
loopne
lea
and
cmp
dec
mov
jae
xor
call
push
in
out
push
es
xchg
cmp
out
fdivrs
imul
and
notl
clc
xor
adc
mov
jne
sub
xor
cli
pop
inc
inc
mov
orl
imul
push
jmp
sti
ficompl
arpl
mov
in
stos
mov
das
into
int
aam
aam
jnp
shl
push
adc
test
clc
jle
lea
and
sub
dec
jge
mov
int
out
and
fdivs
push
jl
xor
cmp
pop
inc
lea
mov
add
out
test
add
popf
dec
xor
sub
push
aaa
ljmp
cwtl
cli
mov
addl
dec
push
jmp
stos
je
sarb
hlt
shrb
movsl
dec
or
push
jb
ljmp
xchg
call
insb
clc
jmp
dec
xor
movsb
loop
pop
lods
dec
mov
xchg
xor
repz
popa
push
cmp
and
loopne
pop
fsts
jbe
in
out
push
ficomps
adc
mov
rolb
insb
cmp
test
popf
xchg
insl
jge
dec
inc
sbb
pop
das
xchg
pop
ret
add
xor
push
fidivrl
xor
cmp
fcomps
sbb
es
sub
roll
xlat
push
sub
mov
hlt
dec
lahf
add
sti
iret
fisttpl
mov
test
adc
out
fnstsw
adc
sbb
and
push
rcrl
dec
cmpsl
push
cld
sub
aam
xor
fdivs
cmp
sti
insb
inc
push
xchg
fsubr
dec
pop
xlat
xchg
mov
adc
insl
cld
push
es
jbe
mov
out
enter
in
sbb
sbb
inc
mov
ret
out
xchg
mov
add
dec
fdivr
xchg
mov
popa
push
pop
and
faddl
mov
jl
insl
mov
pusha
sub
adc
adc
xchg
and
lea
mov
xlat
adc
inc
cmp
jae
inc
and
or
lods
addr16
and
fwait
and
jno
ljmp
jmp
cli
sub
out
inc
ljmp
sbb
arpl
insl
sbb
or
lahf
enter
stc
mov
mov
and
mov
mov
popf
shlb
add
xchg
mov
mov
cmp
movsl
inc
mov
push
mov
jae
cmp
mov
imul
shll
std
xor
push
mov
cmpl
mov
sahf
adc
decl
je
iret
jno
mov
jae
jne
xlat
pop
jge
test
rcll
inc
jb
dec
mov
mov
loope
push
fistps
mov
push
add
mov
inc
and
test
add
push
cmp
fiaddl
clc
cmp
push
aas
popf
jnp
push
mov
shll
andl
or
aad
cmpb
call
cmp
mov
inc
push
adc
ret
mov
pop
in
jmp
jo
ljmp
jne
sbbb
pop
adc
push
jb
loopne
iret
lock
dec
cmc
testb
incb
and
jl
xor
loope
sbb
mov
insb
xchg
sbb
adc
call
sbb
dec
push
insb
fistpll
ret
push
and
mov
inc
repz
pop
jle
aad
pop
lds
popf
pop
faddp
in
jne
mov
or
mov
push
dec
lret
jno
jae
pop
add
imul
imul
mov
cld
cmc
mulb
test
mov
push
in
and
cmp
or
mov
inc
mov
scas
outsl
fwait
cmpsl
add
cmp
std
mov
es
sub
mov
sub
jbe
xchg
sti
std
stos
push
shrl
jl
insl
icebp
pop
das
std
icebp
mov
cmp
mov
loopne
add
cmpsl
or
pop
ret
xchg
adc
push
xchg
mov
inc
movsb
ret
mov
stos
cmp
pop
dec
gs
sub
cli
dec
cltd
inc
test
int3
repnz
push
in
push
push
das
hlt
sub
sub
and
xchg
fnsave
jmp
mov
dec
ljmp
mov
inc
bound
push
mov
sbb
rcll
xchg
cmp
adcb
and
cmp
mov
mov
xchg
sub
jns
push
jbe
popa
sub
js
mov
mov
mov
lea
xchg
mov
jecxz
and
shlb
jne
cmp
lock
mov
mov
pop
fdiv
or
inc
nop
cmpsb
jbe
test
sbb
cmp
lcall
in
mov
inc
dec
sub
pop
sti
fstpt
mov
mov
or
in
cmc
xlat
xchg
inc
push
inc
mov
loop
rclb
add
or
stos
fcompl
jg
call
push
loope
dec
pop
push
dec
mov
sub
cmp
pusha
add
push
mov
xlat
test
icebp
mov
cltd
cmp
shll
dec
xchg
pop
push
or
xor
xor
mov
dec
inc
scas
push
xlat
and
pop
xor
sub
dec
cmp
sbbb
cltd
cli
cmp
dec
fs
push
lret
int3
leave
mov
shr
sbb
sub
cmp
aaa
mov
mov
sub
lods
add
mov
xchg
mov
icebp
gs
mov
push
add
xor
mov
icebp
in
mov
push
cltd
jp
inc
add
out
cld
push
addl
outsb
arpl
inc
adc
jecxz
and
sub
ret
loope
aam
nop
ljmp
mov
rcl
icebp
dec
push
in
lds
sub
lahf
mov
decl
movsb
testb
inc
scas
scas
xchg
adc
mov
pushf
insb
jo
sbb
pop
mov
rol
aaa
xlat
popa
pop
or
mov
mov
push
adc
jo
pop
fidivrs
jbe
push
sub
fwait
pop
mov
jl
xor
pop
sub
faddl
xchg
test
jle
lock
or
cltd
xlat
inc
jne
dec
sbb
fcoms
fst
in
or
cmp
adc
popf
mov
mov
mov
loope
and
adc
inc
out
lea
fwait
cmpsb
repnz
arpl
mov
int
jmp
in
xchg
sbb
push
das
arpl
mov
jne
xor
adc
pushf
mov
pop
and
sbb
hlt
inc
lret
out
push
leave
lret
lods
mov
mov
insl
in
call
out
xchg
and
mov
dec
cltd
push
jbe
xchg
mov
sbb
out
xor
pop
lahf
push
xor
sub
xor
mov
test
inc
xor
pushf
sub
jnp
bound
aam
mov
inc
inc
push
stos
imul
stos
jp,pn
adc
rcr
ds
hlt
test
mov
insb
inc
mov
imul
push
jno
pop
xor
inc
out
pop
pop
cmp
rolb
and
mov
scas
popf
loopne
cmpsl
pand
pop
jle
in
jg
jecxz
jp
cmp
pop
cld
xchg
fmulp
addr16
test
mov
out
ljmp
aas
sahf
mulb
pop
push
mov
aas
cld
ljmp
ds
lods
lock
dec
clc
fimuls
mov
or
pop
int
mov
sbb
mov
jmp
dec
aad
pop
inc
addl
stos
loop
or
shl
test
fsubrs
lahf
mov
sar
daa
mov
jge
shr
mov
jno
adc
cwtl
mov
add
xchg
jmp
inc
cmp
cmp
and
shlb
and
clc
fstl
sbb
adc
roll
push
pop
pop
xchg
and
or
fldcw
inc
sbbb
xchg
int
mov
lods
xchg
fdivr
add
repnz
add
push
cmpsl
clc
inc
push
arpl
mov
lds
mov
lcall
std
orb
fsubp
data16
pop
popl
bswap
mov
mov
stos
dec
idivb
adc
mov
out
sub
jl
inc
mov
mov
jle,pn
leave
sahf
push
dec
das
push
mov
repnz
in
test
movsl
pushf
call
or
xchg
jecxz
mov
icebp
lahf
pop
mov
cmp
dec
mov
pop
mov
test
sysenter
cmp
sbb
or
jbe
into
hlt
cli
mov
sub
dec
inc
rorl
adc
pop
test
inc
mov
mov
cmp
mov
cmp
aas
fmull
rorb
or
xor
into
adc
pop
fadds
cvtdq2ps
shlb
pop
adc
pusha
outsl
loop
lea
popa
sub
mov
aam
mov
xor
icebp
mov
jne
ret
cmp
dec
sti
cmpsb
fdivl
ret
jmp
test
call
or
mov
pop
test
jae
outsl
mov
push
push
sbb
popf
in
sar
xchg
inc
enter
inc
outsl
js
mov
push
xchg
xchg
lock
add
mov
xchg
data16
loopne
enter
test
popa
adc
inc
fisttpll
xchg
sbb
insw
lods
aam
cmp
faddl
sbb
mov
sub
inc
push
pop
or
nop
push
mov
cmp
lock
pop
cmp
lds
call
xor
add
fldt
jne
add
fwait
jae
pop
out
scas
mov
mov
stos
in
pop
adc
sub
fldl
adc
jno
das
ljmp
ret
dec
out
xor
fadds
enter
mov
xor
cmpl
cmp
div
test
xor
jg
or
or
clc
push
loopne
les
pop
mov
adc
ds
das
inc
fisubrs
ds
lea
mov
notl
lahf
js
imul
mov
jo
cmp
push
pop
je
lock
xchg
mov
mov
sbb
call
outsl
pop
lret
sbb
sbb
out
aas
scas
loopne
mov
rolb
xor
fwait
mov
test
mov
sbb
cmc
test
mov
adc
dec
fnstsw
push
cs
je
pop
imulb
ret
or
out
shr
fadds
imul
aad
mov
je
test
sbb
lret
cmp
popf
jge
jecxz
insb
fucomi
lock
mov
test
push
iret
or
mov
das
cmp
sahf
jle
jge
ss
add
jge
mov
xchg
sbb
ljmp
jne
ret
sbb
cmpsl
test
push
mov
jbe
mov
mov
pushf
pop
fbstp
or
idiv
ja
cmpsb
es
rolb
jle
bound
call
pop
cwtl
pop
insl
punpcklbw
popa
das
loop
loope
loope
fs
adc
cmovp
mov
mov
or
fstpl
mov
push
or
adc
mov
dec
loopne
scas
cmp
mov
aas
jle
inc
dec
test
mov
xor
imul
pop
mov
cmp
jne
adc
cwtl
and
dec
pop
jl
mov
xchg
mov
and
add
idivb
push
dec
xor
es
push
rorl
movsb
stos
adc
call
lea
cld
sub
cmpsb
mov
rolb
repz
push
jnp
aad
ficomps
pop
sti
iret
std
adc
jmp
dec
daa
push
mov
push
mull
out
mov
mov
int
loope
out
pop
fcompl
dec
jmp
jno
icebp
popa
cmpb
push
cmpl
jnp
sbb
dec
xchg
mov
dec
dec
push
jnp
adc
mov
xorl
pop
jg
dec
jb
cmp
add
iret
popa
mov
cmc
and
cmc
cmp
mov
loop
lock
sub
xor
cmp
jl
leave
push
mov
data16
mov
es
sbb
loopne
mov
popf
aas
in
sub
shll
adc
fsubs
in
cmp
sbb
mov
in
jno,pn
outsl
iret
inc
in
mov
push
lea
jg
daa
xchg
wrmsr
ret
mov
cmpl
aad
sub
cmpsl
dec
hlt
inc
lods
stc
aam
sbb
xchg
sbb
mov
push
test
sub
adc
arpl
in
ds
mov
fidivl
mov
js
leave
mov
xor
sarl
fdivs
jns
xorb
lret
cwtd
lods
mov
jne
jbe
aas
std
or
xlat
cmc
mov
stc
push
adc
insl
push
jb
adc
ljmp
pop
add
out
sbb
fistpl
push
cmp
push
call
sahf
cmp
mov
or
test
pop
fs
push
push
lret
xchg
pop
jl
out
mov
xor
xchg
data16
sbb
sub
hlt
xor
jae
push
and
rcll
cmp
mov
push
sub
shr
pop
rorb
push
or
mov
ds
jecxz
push
vminss
mov
mov
push
clc
lods
xor
outsl
inc
imul
xor
scas
sub
scas
pop
jne
mov
frstor
insb
inc
or
xor
fstpt
mov
pop
or
pop
scas
mov
adc
pop
cld
mov
scas
xchg
sub
roll
dec
and
or
std
sti
mov
ficomps
and
in
loopne
in
and
movsb
inc
pop
dec
cld
jo
adc
sbb
jp
icebp
insb
pop
clc
jo
push
mov
cli
stc
xor
shrl
pop
or
inc
daa
jbe
scas
adc
es
sub
aas
clc
je
jnp
jmp
xor
dec
or
adc
cmpsb
std
inc
mov
in
clc
mov
bound
cmpsb
clc
mov
iret
into
mov
icebp
mov
cmpsb
out
pop
scas
jns
arpl
dec
pop
fdiv
sarl
push
std
mov
cld
jnp
mov
outsb
dec
repz
lods
inc
mov
lcall
xchg
jle
jge
fcoms
jl
push
sbb
or
nop
mov
sbb
and
out
xchg
mulb
test
dec
dec
mov
movsl
add
xor
popf
push
jmp
loopne
std
jno
int3
add
add
lahf
add
sahf
or
mov
int
inc
add
push
xor
aaa
pop
pop
mov
push
int
cmp
imul
xchg
jp
sub
mov
testl
cld
pop
clc
outsl
sbb
xor
test
pop
cwtl
cltd
into
inc
add
scas
xchg
xchg
mov
leave
push
mov
pusha
or
into
paddb
cmp
dec
leave
fwait
sbb
sub
mov
ljmp
leave
pop
mov
xor
mov
mov
rorl
fs
inc
mov
inc
xchg
xchg
ljmp
stos
fcmovb
sti
jmp
jg
adc
push
lret
out
in
xor
in
and
push
rclb
movsb
fs
inc
mov
pop
popf
pop
pop
push
mov
adc
mov
adc
mov
cmp
sarb
sbb
sub
pop
fcoms
out
dec
mov
adc
mov
mov
mov
cltd
push
mov
jge
lea
add
or
or
cmp
fsubr
das
mov
call
push
insl
shlb
cmp
clc
adc
shl
pop
and
enter
and
data16
test
pushf
outsb
scas
lods
movb
movsl
movsl
and
pop
fdiv
lds
jg
out
mov
mov
rep
mov
mov
jle
iret
jmp
push
sahf
sub
lods
push
mov
loope
mov
daa
movsl
js
mov
orb
mov
mov
fimull
insb
jo
mov
out
repnz
mov
pusha
popa
push
rcr
in
cltd
sbb
dec
test
mov
adc
xchg
mov
data16
out
int
insl
sbb
jp
stos
sahf
out
sbb
mov
data16
sbb
jge
and
cld
stos
jecxz
sub
repz
insb
cmpsb
imul
sti
xor
cmp
cmp
icebp
mov
daa
xchg
pushf
test
loop
outsb
in
rep
pop
pop
ja
adc
jle
inc
jae
ret
mov
pop
sbb
and
repnz
mov
cmpsl
adc
mov
ss
push
cmp
popa
xchg
nop
lahf
ds
sbb
out
lahf
outsb
arpl
jae
and
mov
icebp
jbe
add
mov
sub
sub
jl
jg
pop
lods
icebp
xchg
rorb
lahf
ja
lods
inc
adc
loopne
mov
pop
cli
mov
cs
arpl
cmpsl
imul
jne
mov
fnstsw
gs
lea
inc
pop
mov
jae
sbbb
adcb
pop
xor
aaa
xchg
rcl
push
lods
sub
ljmp
lea
daa
fistpl
je
jmp
mov
push
ds
sub
scas
add
je
fisttpl
jns
ret
pop
adc
cmp
add
xchg
push
stc
ret
outsb
sahf
push
and
outsb
imul
sbb
pop
fidivs
jb
push
js
jnp
or
xchg
jmp
xchg
out
es
daa
mov
inc
inc
js
push
jno
imul
pop
outsb
aaa
mov
jbe
jmp
mov
fnstsw
cwtl
or
loope
loope
jae
add
stos
popl
test
pop
lea
add
xchg
mov
int3
pop
adc
cmp
adc
xor
sbb
pop
mov
inc
shll
and
push
je
jle
or
stos
pushf
xchg
mov
fistps
pop
mov
lret
dec
pop
fildll
mov
stos
or
mov
imul
and
jae
jmp
testl
pop
add
add
mov
fdivrl
mov
jl
enter
cld
sub
mov
jecxz
ljmp
repz
push
xor
adc
inc
mov
xor
cmpsl
mov
xchg
test
shl
rcl
dec
mov
loopne
nop
adc
and
push
lcall
adc
addl
inc
xchg
adc
imulb
jno
insb
ficompl
gs
jp
fisttpl
pusha
dec
repz
xor
sub
jno
xchg
push
js
lret
sarb
pusha
or
xchg
mov
inc
call
fwait
mov
cmp
xchg
clc
lret
shll
sub
shlb
loopne
jmp
out
mov
scas
stos
scas
loope
dec
or
cmpb
add
jnp
jb
jg
pop
pop
cmp
loop
insb
ss
sub
test
outsb
pop
and
cmpsb
cmpl
loop
jno
jbe
pop
xchg
insb
das
imul
dec
xchg
add
outsb
and
mov
std
lahf
jp
loopne
inc
mov
jmp
mov
outsb
repz
inc
out
jmp
daa
adc
jp
dec
call
jo
cmpsb
cmpsl
push
and
iret
push
lcall
mov
mov
push
xlat
popa
pop
clc
mov
xor
push
mov
or
pop
dec
test
shll
push
sahf
push
pusha
ret
push
mov
call
sub
sbb
lret
das
push
lock
lock
std
in
pop
push
inc
or
and
out
lret
add
popa
sti
inc
fisubrs
cltd
int3
aam
cli
pop
and
and
dec
jne,pn
mov
mov
aas
das
pushf
add
inc
shlb
ljmp
cmc
mov
fistpl
jle
push
int3
mov
mov
sbb
inc
in
js
outsb
mov
mov
clc
shlb
xchg
popa
subl
sbb
pop
xlat
pop
ljmp
adc
or
fcmovb
mov
adc
test
sbb
adc
cld
and
mov
jns
inc
inc
mov
pop
int
pop
movsb
mov
outsl
add
dec
jb
das
jmp
das
js
rcr
ret
lret
inc
sarl
cmp
dec
lret
stc
sysret
mov
push
mov
sbb
cld
jecxz
cmpsl
sbbb
popf
sbb
clc
icebp
push
mov
push
insb
xchg
xchg
xor
xor
inc
nop
cwtl
sbb
mov
ss
cmp
pop
or
or
jmp
add
or
imul
dec
cmp
fdivrl
xchg
jle
jmp
daa
adc
mov
xor
fimull
cmpsb
hlt
jp
or
faddl
push
sbb
stc
adc
xlat
mov
sbb
pop
test
inc
icebp
mov
outsl
inc
jns
repz
push
outsl
rorb
xor
push
aaa
int3
mov
clc
ljmp
jbe
mov
pop
jne
mov
out
cli
xchg
jnp
pop
inc
or
sbb
push
xchg
jnp
popa
adc
sbb
aam
cmpb
dec
roll
dec
sub
xlat
xor
mov
dec
xchg
sarb
adc
arpl
jne
icebp
pop
daa
and
addl
cmpsl
ret
mov
aam
cmp
pushf
lock
cmp
jg
fmull
or
push
add
dec
xlat
aad
add
fildl
push
aam
add
cmp
aas
nop
outsb
imul
pushl
ljmp
jge
fnsave
fdivrp
jns
xor
or
sbb
mov
scas
out
movsb
fstps
rclb
add
sbb
dec
mov
test
push
mov
jne
in
hlt
or
shrl
outsb
out
push
xchg
dec
cld
in
push
push
out
int
pushf
push
int3
test
movsl
sbb
ret
xor
inc
mov
adc
loopne
sbb
scas
mov
orb
iret
sbb
test
sbb
cmp
xlat
xor
idivb
fdivrs
scas
sti
repz
add
push
pop
lds
adc
out
mov
bound
mov
mov
inc
fisttpll
and
cmc
std
dec
stos
ds
xlat
jl
and
les
pusha
xchg
push
xor
pusha
fs
push
and
incl
sbb
and
mov
jno
aas
loope
and
add
aam
stc
cmpsb
scas
jne
cmpl
xchg
cmp
ljmp
pop
sbb
push
push
sbb
xor
mov
inc
jnp
lods
sub
rclb
sub
inc
inc
push
jae
push
xchg
stos
divl
sti
imulb
insl
sub
imul
add
loope
mov
jmp
mov
rcrw
sbb
pusha
movsb
mov
xchg
cwtl
dec
push
es
aaa
cmp
sarb
js
test
push
out
mov
and
ja
pop
push
push
dec
sbb
and
lock
insl
jle
push
adc
fdivs
dec
inc
fdivl
imul
fsubrs
add
and
mov
push
jb
out
and
mov
out
mov
stos
imul
or
loopne
mov
and
aam
sub
in
in
jp
je
movsl
xchg
inc
push
jo
rolb
mov
push
inc
lahf
xchg
iret
jg
fisttpll
push
repz
lea
es
adc
cmp
clc
cwtl
cli
pop
in
sub
adc
cmpb
mov
repz
dec
repnz
mov
mov
ss
mov
sbbl
aas
cmc
insb
pop
mov
iret
addb
dec
les
scas
pop
rolb
not
in
lods
dec
dec
mov
icebp
int
xlat
lods
sub
and
cmc
cmc
pop
js
push
cmp
loope
andb
inc
sbb
pop
or
fmuls
cmp
add
xchg
lds
jp
cwtl
jns
lahf
mov
test
adc
mov
pushf
xor
cmpsl
xorl
fwait
test
out
mov
mov
push
add
or
shl
lock
push
popf
arpl
fisttpl
or
fwait
out
ret
fbld
mov
or
cmp
fcompl
and
adc
inc
sub
and
mov
sti
mov
cmp
inc
dec
enter
jbe
xlat
inc
inc
cmpb
pop
cmp
sub
lds
outsl
inc
icebp
adc
cmp
lock
das
in
mov
dec
js
dec
sbb
cltd
inc
or
push
in
test
in
cmpsb
or
enter
mov
stc
adc
je,pn
mov
pop
jae
jle
mov
xlat
dec
sbb
ret
dec
je
mov
pop
push
mul
add
pop
dec
imul
xchg
cli
orl
loope
movsl
pop
movsl
nop
add
push
call
loop
dec
hlt
mov
adc
push
icebp
or
aaa
shll
les
rol
jb
fcoml
add
enter
stos
mov
enter
sub
loope
loop
lods
fcmovnu
outsb
adc
jl
fwait
adc
mov
stos
out
push
pushf
das
xor
fndisi(8087
popa
xchg
enter
mov
pop
maxps
test
adc
cltd
test
imull
mov
loopne
ds
mov
dec
pop
js
je
aas
loop
into
mov
popf
jge
test
push
mov
dec
fdivs
mov
mov
sbb
pushf
jge
icebp
or
je
xchg
pop
gs
push
ret
int
fstp
jne
subl
mov
fisubrl
call
es
add
xchg
add
adc
lds
xchg
dec
xchg
mov
push
mov
jne
cmpsl
movsb
mov
jbe
push
sub
jg
shrb
loopne
or
and
inc
mov
mov
cld
xor
jl
std
dec
es
lret
jae
scas
shrd
sbb
outsl
push
or
sub
jne
xchg
cmp
nop
pusha
push
dec
xchg
pop
arpl
fcompl
scas
js
shll
lret
push
loopne
sbb
js
test
inc
loop
call
scas
aam
lea
pop
scas
popa
in
cmp
imul
push
pop
js
or
jp
push
mov
fsub
stos
es
push
ss
ss
into
jbe
mov
popa
insb
clc
push
xchg
sub
mov
rcr
adc
rclb
sub
xor
add
xor
push
clc
aas
stos
xchg
push
into
in
pop
push
shlb
cwtl
mov
xchg
dec
into
xchg
mov
popf
xchg
xchg
fisttpl
inc
je
repz
dec
lock
mov
adc
xchg
je
mov
jno
push
jb
cli
cmp
rorl
add
or
xchg
mov
stos
dec
pushf
inc
outsb
lock
push
fwait
push
push
outsl
movsb
scas
lods
jnp
mov
in
jecxz
lods
pop
movsb
sub
mov
ds
xorl
leave
dec
jl
push
test
cwtl
xchg
dec
push
aaa
xor
loop
and
xor
inc
xchg
sti
sbb
popf
rorl
push
jmp
push
and
out
imul
push
cmpsl
push
adc
inc
fdivrl
std
out
aad
adc
fdivs
cmpl
and
sbb
lock
mov
leave
cld
push
mul
ret
out
and
pop
lret
jnp
fucomi
xlat
addr16
mov
inc
sbb
mov
sub
mov
lcall
fwait
dec
mov
imul
pop
pop
push
cmpsb
fidivs
outsb
dec
mov
sahf
call
outsb
mov
mov
frstor
mov
jno
cmp
negb
mov
xor
cmc
aad
test
xchg
mov
mov
jp
jp
pusha
sub
ja
xchg
call
adc
mov
xchg
arpl
adcl
call
sub
dec
and
pop
xchg
inc
jbe
clc
shll
and
xchg
movsl
pop
adc
mov
mov
ror
jne
dec
sub
scas
cmp
sub
xchg
jb
push
add
pop
mov
dec
lods
lock
ljmp
adc
aas
mov
xor
mov
mov
mov
loop
dec
inc
jmp
mov
or
sbb
dec
sbb
and
pop
push
cmpsl
cmp
div
test
cmp
data16
sub
sbb
mov
push
int
add
adc
aas
xchg
xchg
in
and
push
dec
mov
cmp
add
mov
imul
je
int
mov
mov
push
stos
or
xchg
loope
push
mov
ret
xor
call
add
cmp
push
fiaddl
mov
leave
mov
pop
dec
rcrl
fsubl
adc
sbb
adc
inc
inc
sbb
lock
das
pushf
inc
dec
mov
mov
in
pop
sub
jecxz
xlat
hlt
sbb
jecxz
push
cmpsl
mov
popl
xor
xor
mov
popf
lret
fsub
xchg
repnz
imul
ja
cmp
jno
cmpsb
adc
push
xor
cmpsl
sbb
cmc
mov
mov
cltd
sbb
out
test
data16
pop
out
and
mov
iret
xor
js
sbb
xlat
sub
mov
add
aam
mov
popf
cltd
xchg
lret
jne
sahf
js
cwtl
jecxz
stos
iret
repz
loop
pop
jb
xchg
add
push
int
cmp
cli
mov
sub
mov
test
pop
cmp
inc
into
faddp
in
popf
pop
pop
sarl
mov
cltd
push
lea
mov
or
sbb
push
and
and
inc
cld
cmpsl
adc
or
pop
sbb
and
int
and
push
cltd
mov
jg
call
fldt
dec
roll
mov
outsb
jo
idiv
xor
push
mov
lcall
mov
jae
sbb
popf
adc
add
mov
pop
aad
dec
jnp
lar
loopne
pop
lcall
js
loope
lret
jne
and
int3
andb
cltd
push
setge
and
aam
scas
in
fstl
lcall
jge
int3
in
aam
add
out
mov
cmp
add
cmc
jne
push
loop
add
fildll
sahf
xor
test
add
pop
jl
adc
les
pop
push
shrl
pop
mov
sbb
push
daa
sbb
push
dec
adc
add
sub
add
lock
add
sub
mov
sahf
sbb
popf
push
mov
dec
aaa
and
mov
pop
leave
sahf
cmp
sbb
push
fdivrl
lods
xlat
shlb
mov
push
jne
std
or
jo
xor
push
jbe
stc
mov
add
stos
lock
loop
cmpsb
pop
add
push
movsb
cmp
in
fucomp
jns
jmp
mov
mov
adc
lds
jecxz
jne
fsubrl
jl
pop
xchg
inc
mov
test
into
out
jns
xchg
mov
fcoml
je
push
insl
lea
mov
rcrb
insb
fdivrl
gs
adc
js
mov
mov
in
jle
sti
sbb
out
xchg
imul
dec
xchg
sbb
push
inc
outsb
pushf
fldl
mov
fbld
inc
ret
dec
lea
iret
das
or
inc
nop
mov
sbb
push
test
or
sub
loope
jne
or
lods
cmpsl
push
adc
out
mov
pop
adc
cmp
adc
inc
jo
lcall
sbb
and
cmp
adc
in
pop
mov
mov
jns
arpl
sbb
sub
xor
cmpsl
sub
out
in
test
sbb
rcrl
int
dec
dec
mov
jne
sti
inc
sub
lret
cmpsl
stc
push
ss
sbb
jne
jp
mov
mov
outsl
out
adc
daa
jns
gs
mov
jecxz
scas
shlb
std
jmp
ret
cs
fs
add
cmp
jmp
inc
mov
negl
int3
inc
add
xlat
cmc
shlb
dec
shlb
pushf
jne
shll
inc
mov
bound
mov
mov
cmp
mov
or
push
incl
cwtl
scas
inc
cmp
jl,pn
jge
jnp
ret
dec
mov
add
lock
jmp
push
in
sbb
cmp
fstpt
popa
jo
mov
test
out
enter
xlat
cltd
mov
dec
mov
iret
cwtl
inc
cli
loopne
rolb
in
pop
imul
shr
stos
jle
ljmp
lock
je
dec
cld
push
int3
push
and
cmp
inc
xlat
inc
push
jge
mov
sub
ds
add
rorl
cmp
push
test
xor
cvtdq2ps
cmp
lock
out
jne
pop
in
dec
push
pop
add
cmp
push
test
pusha
sbb
or
ljmp
test
cld
inc
sbb
push
xor
test
shlb
loope
mov
adc
lcallw
xlat
jne
sbb
jae
out
ret
test
add
xchg
iret
add
loope
dec
sbb
ds
imul
lret
xchg
imul
push
mov
lea
or
mov
mov
jno,pt
mov
xor
xlat
xchg
stos
fnsave
pusha
rcrb
add
mov
jecxz
and
jne
ret
jecxz
adc
xor
xor
cmp
lock
shlb
fisubl
push
add
lret
mov
inc
add
adcl
mov
xchg
stos
inc
xchg
cmp
outsb
mov
xchg
xor
mov
popf
cmp
leave
jp
mov
mov
push
shlb
xchg
jle,pt
mov
les
jecxz
adc
cwtl
xor
stc
xor
and
push
xchg
out
in
andb
push
icebp
adc
or
pop
jae
cmp
jae
mov
stos
cmp
outsb
sbb
inc
sahf
or
pop
outsb
cmp
ja
fucomi
mov
xor
rcrb
pop
adc
ret
mov
jg
rclb
loope
ds
popa
bound
inc
arpl
lea
fsubl
cmpsb
iret
xchg
mov
fisttpl
xor
in
mov
std
outsb
and
adc
cmp
mov
inc
stc
rclb
dec
add
into
insb
shll
dec
aam
jecxz
clc
outsb
push
mov
jbe
mov
loopne
dec
inc
dec
push
lea
icebp
in
dec
stos
or
sbb
push
leave
daa
mov
mov
ret
add
mov
fsubr
aas
in
mov
ficompl
inc
div
out
stos
jl
mov
into
push
iret
dec
fld
in
aam
sbb
push
jbe
test
mov
lods
dec
sbb
arpl
clc
mov
mov
mov
cmp
sbb
mov
cmp
push
fisubs
ljmp
pop
mov
push
jb
xchg
jge
pop
je
ror
push
sub
dec
lcall
rclb
insl
pop
push
lods
sub
inc
jno
aam
clc
lds
aas
pop
bound
cmp
jne
push
ds
jl
fildl
aas
mov
mov
dec
mov
cmp
insl
fwait
mov
mov
and
cmp
stc
js
jb
or
lahf
and
mov
push
cmpsl
movsb
ss
lock
std
mov
ret
mov
enter
insl
fndisi(8087
jnp
lahf
adc
test
pop
pop
dec
test
test
call
sbb
insb
push
ljmp
mov
dec
rolb
sub
mov
mov
mov
add
mov
push
imul
std
xor
in
inc
mov
xor
or
jecxz
xchg
and
and
fldl
xchg
add
mov
push
mov
cmp
in
adc
xor
jae
sub
sahf
dec
test
cmp
xor
ret
mov
std
add
adc
adc
cmp
mov
cltd
dec
shll
sbb
shlb
push
lcall
cmp
cltd
dec
maskmovq
stc
dec
xchg
xor
mov
jno
mov
inc
imull
dec
mov
mov
xchg
mov
push
mov
xlat
jbe
imul
test
mov
add
sbb
ret
mov
adc
xchg
fldenv
pop
xorl
jne
cmp
pushf
jge
sbb
mov
pop
clc
sbbb
nop
pop
mov
inc
popa
inc
orb
and
pop
push
jo
ds
fwait
add
orl
jecxz
insl
out
sbb
sub
lahf
add
subl
sub
out
mov
stos
sbb
data16
and
ficoml
sbb
xchg
inc
mov
cmp
aaa
pushf
push
add
jl
bound
inc
pop
pop
outsb
cmp
mov
repnz
mov
xor
pop
dec
pop
pop
xchg
rol
ja
sub
push
lods
push
add
add
push
test
je
mov
add
icebp
inc
rorl
cmc
daa
fwait
dec
frstor
adcb
lret
cmp
ja
shrb
mov
jb
push
xchg
ss
sub
test
xchg
cs
or
jmp
add
xchg
xchg
cs
mov
xchg
loope
xor
fnsave
pop
sti
mov
mov
out
cmp
cmpsl
sub
xchg
mov
loop
mov
mov
lret
scas
push
in
cmc
mov
xchg
test
xor
in
fsubr
adc
inc
aad
or
cmp
push
cmp
data16
jnp
cmpsb
sbb
and
cmp
les
add
js
pop
xor
xchg
daa
mov
rolb
cmp
adc
negl
inc
les
mov
faddp
jo
cltd
icebp
mov
jmp
add
mov
push
test
pop
mul
in
lods
push
inc
push
test
sbb
aam
lods
lock
lock
and
mov
fcompl
pop
or
fstpl
cmc
push
ljmp
push
cld
mov
sub
jmp
in
jbe
xchg
rcl
mov
mov
outsb
loop
sti
mov
stos
lock
repz
mov
sub
out
sbb
mov
jp
push
cmc
jge
add
cwtl
int3
ficoms
rolb
and
out
adc
stos
popf
cmp
addr16
push
inc
mov
test
dec
call
test
gs
or
imul
mov
xchg
int
lock
movsb
jnp
scas
dec
xor
fst
cltd
jo
scas
lods
mov
mov
enter
test
mov
jne
cli
loop
or
test
cmpsl
xchg
xor
dec
push
cmp
dec
adc
out
mulb
std
xor
or
std
cmp
jle
push
adc
shll
cwtl
stc
pop
cld
ljmp
push
inc
sbb
pop
shlb
call
xchg
xor
push
push
and
dec
dec
dec
mov
inc
insb
dec
push
cld
mov
mov
xchg
in
mov
js
sub
gs
adcb
in
or
dec
inc
adcb
es
loopne
cmp
lret
dec
xchg
dec
iret
js
je
shlb
js
stc
mov
fiadds
cmp
cmp
pop
sub
push
adc
xchg
xchg
sti
push
jo
pop
adc
xchg
lock
test
mov
dec
mov
loopne
inc
mov
pop
cltd
xchg
push
inc
mov
mov
fldenv
push
mov
aad
hlt
mov
rcrl
insw
loop
mov
mov
pop
pop
inc
mov
fidivrl
jbe
push
mov
cmpsl
jl
push
adc
sub
cmp
sub
sbb
mov
push
push
mov
idivl
or
push
pop
sbb
mov
cld
loop
pop
rolb
push
xchg
mov
into
pop
sub
mov
adc
rorl
inc
outsl
push
xor
es
mull
jge
int
or
lods
adc
dec
test
mov
cmp
mov
mov
rorb
dec
and
add
mov
pop
push
or
adc
in
arpl
mov
push
shr
inc
lds
ja
lret
fcmovne
adc
pop
pop
xlat
pop
push
scas
jo
stos
cwtl
cmp
or
test
sbb
xchg
call
repz
cmp
pop
aas
jo
push
outsb
dec
cmp
fildll
ljmp
inc
int3
hlt
xchg
in
and
sbb
fldl
xchg
insb
imulb
adc
imull
jns
divl
loope
shr
jb
and
dec
in
imul
scas
adc
sti
cs
ljmp
test
mov
push
mov
movsl
je
push
stos
pop
mov
lea
lds
jnp
enter
cmp
pop
in
cli
js
mov
repnz
cmp
sbb
cmp
faddl
push
sbb
pop
push
test
sub
mov
sti
test
sarb
pop
fmuls
push
or
mov
mov
push
or
in
push
dec
jnp
pminub
push
nopl
jne
jle
sub
mov
pop
fbstp
sub
pop
mov
cmp
out
mov
insl
stos
mov
ljmp
adc
mov
cmp
push
lret
syscall
push
aaa
mov
and
pop
add
shrl
out
dec
sar
out
inc
sub
xor
inc
mov
ds
mov
inc
jge
aas
mov
insb
movl
movsl
or
jbe
movsb
push
out
mov
nop
in
shrl
cmpsl
jno
fucomp
arpl
addl
pop
push
sbb
clc
enter
mov
sti
adc
fisttpll
add
push
xchg
adc
cmpb
push
mov
shl
pop
or
shll
movsb
and
adc
ja
rclb
mov
add
cld
push
inc
inc
shlb
xor
pop
aas
js
sbb
dec
sub
mov
ljmp
or
xor
in
add
into
mov
xchg
pop
xchg
inc
imul
outsl
jae
insb
mov
lods
es
and
mov
in
and
xor
push
xor
mov
test
pop
test
adc
sub
mov
mov
xchg
mov
mov
daa
push
xor
outsl
and
mov
movsl
pop
inc
jmp
imul
pop
sbb
mov
add
jle
add
lods
test
mov
sub
mov
dec
cmp
cmovno
out
popf
jno
add
fisttpl
outsb
loop
xchg
nop
int
and
btsl
call
dec
pop
ffreep
nop
or
daa
addb
pop
movsl
outsb
jnp
test
mov
jmp
ss
push
push
inc
xor
push
stos
pusha
ds
fidivrs
ret
push
or
enter
andb
pop
lods
jecxz
test
and
inc
push
arpl
pop
imul
dec
loop
jne
imul
subl
mov
je
jne
sub
cmpsl
or
pop
je,pt
scas
lds
lea
jmp
inc
sahf
add
adc
fisttps
cmp
das
fucomp
sbb
inc
fadds
and
mulb
cli
pop
or
adc
js
insl
cmp
pop
dec
add
cmp
fidivs
xor
mov
es
adc
or
sub
cmp
push
xor
mov
cld
outsl
mov
popa
rcr
mov
test
inc
inc
dec
popf
cli
scas
sbb
or
dec
lahf
xchg
mov
or
xor
mov
xchg
pop
push
test
pop
cmp
icebp
pop
push
pop
in
or
bndldx
jp
inc
inc
fwait
push
jo
add
and
xchg
jbe
in
xchg
or
jnp
in
pop
rcl
jge
fsubrs
pop
mov
mov
out
fsts
sub
aam
scas
popf
test
sbbl
rcrb
xlat
into
rcr
push
jp
mov
xchg
popl
dec
loope
cmp
or
mov
test
addb
sbb
nop
pop
jo
lods
std
pop
push
ds
ss
insb
push
pop
pusha
push
gs
cltd
and
sub
inc
cld
outsl
add
push
push
jge
ficompl
sbb
mov
idiv
iret
addb
push
fwait
mov
cmp
mov
push
cmpsl
add
lock
push
stc
sbb
mov
movsl
fld1
aad
fstp
lock
inc
cmpb
hlt
push
xor
mov
test
and
cmp
jle
repz
cwtl
mov
popa
imul
mov
push
pushf
jp
cmp
dec
lcall
aaa
cmpsl
or
adc
ss
push
push
fildll
into
in
mov
les
dec
and
dec
sarb
imul
mov
pop
push
shll
inc
rcpps
lcall
cmp
daa
dec
rclb
mov
and
hlt
add
pop
loop
mov
jp
mov
cmp
xchg
mov
nop
lods
icebp
mov
or
call
push
lods
or
mov
sub
call
lock
pop
and
pop
xchg
into
mov
pop
adc
xlat
jmp
cld
aad
es
or
mov
insl
inc
mov
mov
adc
ret
cli
xchg
imul
add
insl
and
je
pop
insb
repnz
fmuls
mov
out
sbbb
mov
sarl
xchg
jl
push
ja
popa
cmpsb
idivl
fidivl
outsl
insl
fidivs
aas
push
mov
inc
sub
and
addr16
push
and
call
sub
push
bound
pop
rcrl
inc
ss
pop
outsl
imul
mov
sbb
pop
mov
mov
mov
sbb
sahf
xchg
xorb
scas
sti
hlt
test
sub
pop
mov
mov
push
lds
aam
pop
mov
push
mov
orb
addl
sub
fstpt
inc
addr16
cli
call
lods
pop
push
mov
dec
push
or
inc
insl
xchg
mov
pushf
or
adc
mov
sahf
push
dec
push
and
jge
pop
adc
mov
pop
push
in
mov
cmc
out
pop
cmp
or
pop
inc
outsb
add
iret
das
mov
sbb
movsl
mov
inc
dec
loopne
jmp
test
pusha
and
mov
mov
push
add
lahf
mov
ja
pop
das
push
cmp
add
fmull
cmp
sub
mov
or
pop
mov
popf
push
hlt
mov
sbb
mov
xchg
addr16
cmp
sub
bound
sbb
push
pop
sbb
lods
mov
dec
je
inc
inc
or
push
out
pop
xor
inc
cmp
add
stos
jns
leave
mov
push
inc
jae
jno
stc
mov
test
lods
and
je
xchg
outsb
aas
inc
mov
les
push
int
lret
inc
inc
inc
mov
sarl
ret
mov
inc
push
fnsave
in
or
lret
mov
mov
int3
fbld
std
inc
ja
fcomps
add
xor
add
js,pt
dec
insl
out
cmp
insb
daa
adc
push
jae
cmp
cs
insb
mov
pusha
adc
fimull
inc
ret
push
pop
leave
push
je
mov
jle
pop
jg
mov
xchg
jle
and
push
frstor
movd
lods
push
adc
and
in
ds
jl
mov
stos
push
mov
loope
dec
add
sbb
xchg
lods
inc
mov
sbb
push
jmp
arpl
jb
lock
mov
out
inc
in
aas
xchg
push
les
push
adc
int3
mov
test
cwtl
cwtl
and
je
ffree
xor
out
fs
popa
jg
jp
cmp
jge
sbb
sbb
sbb
and
push
jg
loop
inc
xlat
and
add
movsl
xchg
pop
and
js
orl
mov
xor
push
pop
enter
or
and
shll
fidivrl
jge
jne
adc
cs
lea
lds
jne
dec
inc
imul
loop
pop
out
enter
insb
and
movsb
aaa
adc
xor
lock
inc
push
data16
adc
inc
xlat
in
pusha
loope
inc
fcmovne
orb
xor
sub
jbe,pt
dec
ret
mov
fnstsw
cmc
fcoml
mov
push
inc
dec
ss
fwait
push
test
js
arpl
jmp
xlat
in
lods
inc
xchg
sub
add
ret
test
lock
icebp
cmc
mov
fisubl
popa
sbb
stos
adc
movsbl
sbb
jne
mov
or
ret
cmp
imul
sub
idivl
stc
mov
fsubrl
out
andl
push
fisttpl
inc
add
sbb
adc
mov
scas
lea
cmp
inc
mov
inc
sti
mov
call
mov
mov
clc
jae
mov
test
adc
cmp
jle
fidivrl
incw
scas
in
xlat
ficoml
in
fisubrs
imul
and
mov
sub
lods
ja
mov
jecxz
jb
xchg
push
inc
cli
push
pop
btc
jbe
add
jle
or
mulb
jnp
test
cli
mov
icebp
out
mov
popa
pop
pop
insb
fnstsw
sub
dec
jmp
xor
push
push
bnd
jge
jno
ret
mov
cmp
mov
std
fadds
mov
mov
stos
pop
sbb
shrb
lret
mov
rclb
mov
adc
dec
or
leave
ficomps
cld
sti
jle
push
js
inc
nop
pop
cmp
mov
lock
sti
push
or
ljmp
sbb
mov
mov
leave
push
xchg
cmp
das
divl
inc
pop
lods
add
sti
xchg
test
in
sub
sahf
test
fisubl
cmp
inc
imul
rclb
fwait
outsl
and
jg
adc
add
or
jmp
aam
sbb
cli
dec
and
dec
test
orl
push
dec
cld
sbb
mov
jl
mov
or
xor
xor
dec
enter
mov
jp
push
dec
inc
addl
imul
cmp
xor
clc
icebp
es
in
mov
push
les
mov
in
aas
fidivrl
mov
push
dec
jb
lock
jmp
push
daa
push
aad
lahf
clc
mov
and
cli
mov
imul
ss
mov
xchg
push
lcall
test
imul
xchg
addb
fisubrl
ds
bnd
mov
jo
lcall
aas
cmc
or
fdivrs
inc
inc
xlat
icebp
cmpsl
loop
mov
mov
addr16
pop
in
ss
icebp
push
pusha
sbb
mov
adc
out
ss
add
add
adc
mov
pop
sub
cmpsb
pop
mov
inc
inc
fucomip
fcmovnb
out
mov
in
pop
ss
clc
cli
loopne
mov
outsl
shl
sbb
inc
xlat
shlb
icebp
addl
adc
sub
xor
cmc
fisubs
jge
cld
shlb
pop
insl
jg
std
adc
or
mov
lea
mov
rcrl
lea
jns
aam
lcall
xchg
out
stos
adc
or
sub
xchg
inc
pop
jp
inc
out
adc
scas
scas
jg
sub
in
add
or
cmpsl
in
pop
cmc
test
cmpsl
push
sbb
ret
negb
mov
aaa
gs
ljmp
cltd
jne
push
add
pop
fwait
mov
fiadds
aam
or
das
push
inc
jnp
icebp
divb
jne
rorb
cmp
lea
cltd
mov
xor
pop
push
ss
and
movsb
and
iret
adc
cmp
mov
mov
adc
in
mov
and
dec
dec
push
das
push
push
scas
es
mov
scas
outsb
nop
dec
push
pop
lret
rorl
mov
adc
jle
sti
sbbl
xor
ret
jg
push
js
addl
loop
out
cmpsl
lcall
pop
into
jo
addl
pop
sbb
mov
es
mov
leave
lcall
rorb
inc
je
push
dec
pop
cmp
ljmp
aam
fisttpl
and
test
popa
sub
adc
prefetch
mov
mov
pop
pop
jbe
fbstp
mov
inc
jnp
sub
hlt
rcr
idivb
xor
jnp
out
push
jle
cmpsl
clc
or
xor
xor
outsl
push
out
imul
stos
mov
test
pop
mov
arpl
test
pushf
iret
rolb
push
xlat
ror
je
repz
outsb
mov
out
dec
into
mov
cmpsl
ljmp
mov
call
cli
aas
in
add
pop
sub
out
leave
insb
adc
aam
mov
push
jae
xor
sbb
dec
inc
out
xor
in
rcrl
arpl
shlb
pop
xor
mov
cmp
je,pt
xchg
xchg
pop
jbe
sbb
insl
out
fld
xor
test
sbb
sar
idivb
cmp
stos
jnp
andl
movsl
sub
fcmovbe
shl
andb
mov
je
cmc
call
pop
cmpsb
or
mov
rcrl
jo
pop
cs
aaa
mov
or
popl
rcrl
dec
add
push
jne
lea
mov
lret
outsl
imul
aaa
je
cmp
pop
fstpl
movsb
mov
test
jge
mov
push
and
aad
mov
xor
lds
mov
xor
dec
pushf
jmp
inc
and
js
cmpl
lods
mov
or
mov
insb
outsl
jp
test
hlt
mov
add
or
mov
cmpsb
sarl
push
lcall
add
cmp
jno,pt
fwait
sbb
test
mov
test
js
in
jnp
mov
imul
hlt
daa
jmp
xor
add
mov
je
lods
jnp
jle
lret
aad
sub
mov
mov
add
cmp
ret
mov
aam
add
gs
movsb
fdivs
ret
aaa
fstpl
aaa
xorl
fcmovnu
xchg
in
or
stos
push
loopne
mov
add
pusha
ja
xor
and
xor
mov
ret
and
jle
ret
push
xor
jp
xor
fisttpll
push
ljmp
mov
add
mov
add
adc
in
or
push
ljmp
gs
insb
mov
ss
in
imul
rolb
fnsave
stc
ss
inc
xlat
add
jmp
pop
nop/reserved
ret
ret
add
sub
cmc
ljmp
fs
cmpsl
mov
xor
xor
pop
hlt
sub
lea
jmp
xor
std
in
ds
lret
in
arpl
movsl
test
inc
cmc
imul
shll
jg
popa
jnp
inc
pop
pop
adc
js
test
xor
cs
mov
sbb
or
insb
loop
outsb
mov
dec
mov
xchg
inc
xor
ds
hlt
shrl
or
out
test
insb
sbb
mov
lock
test
es
cmc
inc
pushf
add
xor
ds
xchg
cmpsb
lock
mov
inc
movsb
test
imul
leave
shr
add
mov
xchg
imul
pop
mov
adc
pop
scas
inc
out
push
outsb
icebp
fsubrp
xchg
das
sbb
mov
push
xchg
mov
xchg
mov
je
mov
or
jnp
jp
dec
jne
push
push
and
js
jmp
insl
cwtl
pop
push
loop
dec
leave
and
inc
xchg
mov
test
jnp
sti
shrl
push
std
into
lods
mov
xor
pop
pop
test
jmp
push
div
sbb
hlt
push
xchg
xchg
bound
mov
lods
adc
mov
jp
inc
and
jl
gs
jno
lcall
scas
mov
sbb
mulb
mov
mov
dec
pop
sbb
xchg
icebp
pop
inc
loope
test
pop
and
pop
inc
test
loope
aad
test
push
in
inc
scas
mov
adc
test
dec
lret
push
rclb
cld
xchg
cmp
push
pop
loop
aaa
clc
cmpsl
push
in
push
mov
scas
sbb
not
ljmp
popa
sbb
jp
ret
lcall
negb
jecxz
xor
lcall
jae
cmp
fwait
dec
cmpsl
mov
and
mov
jb
movsb
sbb
add
jle
data16
ffree
daa
push
stos
xor
inc
sub
jbe
ss
add
mov
mov
add
rcll
fwait
jbe
sti
ret
andb
fnop
mov
ret
adc
add
cmp
fsubrp
scas
pop
clc
sub
push
lret
popf
scas
mov
rorl
aam
mov
rolb
lds
cli
les
cmc
aas
fs
xchg
ror
out
out
rorl
fnstcw
pop
adc
add
mov
inc
push
stc
mov
lret
loop
cmp
inc
xchg
les
lods
dec
mov
or
pop
or
dec
shl
push
ret
mov
or
cmpsl
lds
adc
mov
or
inc
mov
repnz
jbe
add
mov
sar
in
sbb
div
cmc
dec
sub
sbbl
or
stos
cmp
popl
loope
push
std
mov
ret
xchg
inc
lcall
addb
dec
inc
das
syscall
hlt
mov
js
mov
adc
lods
mov
jae
mov
hlt
mov
rcrl
movsl
mov
ss
movsl
jp
dec
push
sub
out
in
inc
dec
aaa
sub
xchg
enter
shll
orl
and
scas
mov
sub
outsb
sbb
mov
inc
loop
pop
mov
jno
add
mov
or
push
xor
push
add
lcall
mov
mov
es
xorb
sbb
adc
repnz
dec
inc
xchg
popf
icebp
std
mov
mov
add
imul
mov
mov
cmpb
xor
push
dec
xlat
mov
js
push
popl
or
jecxz
addr16
lcall
out
lret
push
pop
hlt
shlb
lock
dec
stos
imul
add
cmp
mov
mov
sub
mov
xchg
cmp
dec
xor
dec
nop
jnp
out
cmpsb
loope
popa
out
fstpt
fucomi
out
push
mov
daa
int
or
neg
cmpsl
xor
inc
icebp
stos
stos
sti
lock
addl
xor
loop
jp
push
add
or
pop
pop
mov
fcmovne
sub
dec
insb
clc
clc
add
ret
sub
icebp
test
cmc
pop
dec
ss
fstps
addr16
out
inc
fwait
mov
jle
add
pop
lcall
or
test
outsb
push
into
andl
stc
js
out
mov
imul
dec
lea
cmpsl
and
mov
clc
js
lods
scas
test
imul
jns
mov
mov
out
movl
scas
jmp
stos
pop
inc
mov
lock
jge
hlt
pop
fwait
lods
ret
icebp
jnp
in
and
jo
sub
mov
stc
mov
sti
inc
andl
paddsb
roll
iret
das
shrb
pusha
jo
xchg
pop
cwtl
jle
movq
sub
xchg
mov
out
mov
mov
lds
jmp
mov
arpl
ljmp
xchg
pop
pop
jne
push
aad
aas
jp
stc
stos
iret
imulb
jns
fidivrl
inc
ret
pop
push
sbb
mull
mov
loopne
stc
arpl
rorl
or
push
sub
mov
fcmovnbe
movsl
stc
les
cmp
inc
pop
or
mov
sbb
pusha
fnstcw
lods
sbb
sti
xor
rcr
adc
or
xor
lret
push
push
jge
cmp
adc
rcrl
xor
pop
add
fs
shrb
inc
push
lcall
xchg
sbb
xchg
push
jge
pop
ficomps
xchg
and
inc
orl
jmp
inc
aaa
xlat
out
out
in
fwait
adc
repnz
inc
add
mov
push
pop
lahf
mov
sub
arpl
dec
or
adc
shll
fwait
into
xchg
sub
insb
adc
call
jno
std
mov
stos
or
mov
scas
and
fisttpl
sahf
add
sbb
out
data16
test
je
into
add
sbb
les
repz
test
xchg
jp
test
scas
rol
cmc
les
mov
push
push
cmp
jp
push
jns
sahf
mov
loop
adc
adc
add
mov
push
insb
mov
push
popl
lret
xchg
cmc
sub
mov
js
outsb
cmpb
out
mov
inc
aam
adc
cltd
sbb
push
inc
jge
inc
test
push
arpl
and
rolb
scas
pusha
add
mov
or
rcll
mov
mov
jne
add
push
xor
mov
mov
cli
fs
inc
pop
pop
or
jge
jno
mov
mov
in
xor
loop
fldt
scas
and
mov
or
loope
add
fs
add
jp
stos
je
dec
je
dec
adc
rorl
mov
fldt
pop
mov
inc
movsb
cs
push
cmp
xor
sub
cmp
add
jle
aam
shll
cmp
pop
jp
dec
loope
sti
hlt
subb
insb
fwait
dec
popf
imul
jnp
pusha
adcb
cmc
orl
xchg
xor
pop
xor
add
inc
cltd
adc
sarl
push
lods
sti
cmpsb
stos
pushf
sub
bound
sahf
mov
xor
pop
inc
mov
mov
lock
clc
mov
cmpsb
dec
fdivrl
insb
fimull
jb
lahf
push
lds
pop
in
jmp
lods
xchg
push
mov
mov
add
fcompl
movb
xchg
mov
xchg
fildl
daa
les
fsubrp
and
push
clc
aam
adcl
push
shlb
sub
push
cmc
jbe
mov
dec
dec
fisttpll
xor
cmp
inc
mov
in
and
mov
cmp
xchg
daa
mov
push
shl
add
mov
push
stos
roll
daa
adcb
mov
sarb
xchg
xchg
jae
fistps
hlt
subb
insl
jge
aam
enter
mov
jnp
pcmpeqw
aaa
test
scas
sub
inc
cld
pop
push
cmp
pusha
mov
pushf
cmpsb
mov
mov
mov
sbb
xlat
mov
icebp
push
rorl
pop
aaa
push
cmp
imul
jmp
inc
xchg
stc
test
add
sahf
rcrl
das
push
mov
sub
je
mov
orb
push
mov
mov
add
adc
pop
lahf
lcall
jb
data16
add
aas
es
sub
mov
ret
sbb
or
pusha
mov
or
notl
inc
mov
push
je
pop
lds
pop
xor
mov
fcomi
insb
fistpl
jecxz
test
fwait
inc
int
xchg
test
lods
jne
xor
cmp
mov
cmp
xorb
push
in
mov
lret
test
jmp
mov
add
inc
mov
xor
iret
cmpb
mov
or
pop
add
shl
mov
and
lds
je
hlt
scas
ljmp
jge
add
hlt
push
add
aad
and
outsl
pop
in
pop
bound
fisubrs
pop
fidivs
daa
add
outsb
lods
pop
cmc
or
xor
sarl
js
icebp
ja
mov
jmp
ljmp
inc
sub
xorl
push
and
mov
addr16
cmp
daa
daa
scas
or
mov
in
shlb
vmwrite
pusha
adc
stc
aas
push
jl
in
repnz
or
lds
mov
sub
popa
ja
or
mov
ret
lock
fdivl
addr16
pop
adc
dec
cmc
sub
sahf
push
roll
enter
push
mov
xchg
sbb
push
mov
pop
aam
xchg
mov
shlb
xor
inc
xor
out
jle
loope
cmc
dec
repnz
arpl
jg
mov
fisttps
mov
inc
scas
sub
cltd
cmp
lcall
sbb
mov
xchg
mov
jmp
icebp
adc
dec
fisttps
mov
jbe
xchg
sub
das
push
sbb
iret
pop
mov
lock
cmc
dec
rclb
enter
mov
mov
sbb
mov
pop
pop
push
add
div
fistpll
test
in
adc
inc
insl
mov
call
jmp
pop
aas
int3
fsubrs
jl
pop
pop
std
mov
hlt
cmc
xor
ficomps
push
sbb
inc
ss
push
mov
xchg
xchg
hlt
jae
xchg
jmp
roll
rolb
mov
add
repnz
jns
push
adc
aaa
push
cmp
lcall
ss
pop
lahf
mov
push
shl
sbb
shr
add
outsb
fs
lcall
inc
sbb
or
and
dec
sub
lock
popa
adc
scas
fcomi
fsubrl
int
pop
sbb
jmp
xchg
js
imul
adc
enter
pop
lea
dec
arpl
ljmp
aam
jg
enter
in
add
cmp
inc
jae
or
mov
sbb
mov
xor
adc
insl
mov
adc
xchg
sub
cmc
std
popf
lcall
insb
out
adc
mov
std
jae
mov
mov
xchg
or
cmp
mov
xor
stos
mov
xchg
mov
test
call
mov
insb
pop
cld
sar
cmpsb
stos
sub
push
sti
aad
shl
jmp
jae
mov
outsl
test
sub
push
dec
mov
jp
mov
fucomi
cli
add
repz
ret
mov
jge
and
cmpsl
rcl
xchg
pop
push
rclb
mov
fs
mov
into
pop
push
sub
scas
mov
mov
cli
mov
je
in
jns
insl
leave
jae
outsl
mov
sbb
js
std
push
cli
mov
in
inc
add
outsb
cmp
sbb
call
inc
xchg
adc
add
pop
jne
lock
xor
push
mov
stc
inc
ds
mov
adc
rorb
icebp
pushf
insb
aas
fidivs
daa
out
sti
mov
mov
push
sbb
shl
push
add
dec
push
ficoml
test
xchg
imul
sub
jle
jo
jge
test
pop
sarl
cwtl
hlt
imul
lea
sub
xchg
gs
push
xchg
push
cli
sbb
ret
add
cmc
cmp
mov
call
and
sti
inc
sbb
fwait
sbb
les
sti
rcl
mov
mov
flds
inc
lds
int
pop
aam
out
adc
push
jmp
cmp
xchg
xor
jno
mov
lods
das
lcall
mov
lret
adc
xor
scas
push
ds
pop
add
jno
hlt
outsb
xchg
inc
and
adc
push
cmc
call
mulb
stos
xbegin
rcl
mov
sub
hlt
insb
popf
and
jmp
in
roll
inc
push
sbb
pop
inc
leave
testb
jb
lods
dec
sbb
ret
into
push
ja
pop
fcomps
mov
cmp
mov
loop
not
sbb
pushf
xorb
insb
insb
xchg
push
push
sub
mov
ljmp
xchg
push
je
aas
aam
sub
rcrl
imul
fistps
cmpsl
jle
push
pop
ljmp
add
sub
adc
loop
imul
out
scas
mov
fsubs
test
out
inc
ret
pop
aas
lea
stc
jae
or
lock
fadds
xor
test
mov
inc
push
and
jo
mov
andl
jne
mov
ret
cwtl
add
push
insb
movsl
inc
xchg
loop
je
cli
loopne
mull
inc
cmp
fnstsw
add
push
pop
adc
pop
jl
ljmp
mov
adc
loop
mov
ret
cli
push
mov
incb
sbb
daa
fsubrs
scas
fisttpll
pop
ljmp
inc
mov
jb
in
dec
push
jbe
sbb
adc
fcomip
loope
lock
out
push
sti
xchg
jecxz
icebp
sbb
dec
dec
mov
xlat
out
lds
ljmp
repnz
sub
std
push
cmpsl
xchg
icebp
xor
jae
inc
push
sub
scas
jmp
loopne
test
into
fisubl
test
je
flds
cmpsb
pop
mov
xchg
sbb
push
xlat
mov
inc
add
notb
fdiv
xor
cltd
jl
pop
cmp
aam
fnstsw
lods
mov
push
shlb
jne
mov
mov
pop
outsl
jmp
jmp
sub
sbb
inc
add
pop
daa
mov
stc
int
andl
lods
sub
loope
mov
bound
mov
cmp
cmpsb
popa
cltd
ret
push
out
push
xor
dec
or
pop
sbb
int
lcall
hlt
lds
sbb
inc
and
call
mov
cs
insb
addr16
lock
loope
jle
sbbb
jo
js
mov
ss
in
stos
and
push
jg
dec
lods
add
repnz
add
xor
mov
ss
shlb
mov
jle
mov
sar
loopne
ret
pop
ficompl
out
pop
fiadds
dec
stos
outsl
fsubrs
rcrb
jnp
das
cmp
subl
xor
sub
sub
sub
xchg
jp
lds
push
pop
or
pop
push
les
cmp
mov
add
in
xlat
lret
jge
xchg
jnp
sub
dec
cmpb
leave
sti
ret
pop
adc
jbe
jno
aad
andb
cltd
daa
fwait
clc
jge
and
adc
push
out
in
or
shlb
sub
mov
push
cli
mov
xchg
hlt
xchg
push
push
fbld
add
icebp
out
in
fdivs
rolb
iret
xchg
movsl
sarb
shlb
ret
popa
mov
pop
xor
pop
inc
sbb
cmp
jbe
and
mov
mov
shll
rorl
push
addr16
std
call
fstl
mov
sahf
sbb
mov
inc
cmpsb
lea
inc
aas
in
mov
cld
scas
cmp
dec
mov
mov
adcb
xor
mov
rolb
xchg
enter
and
add
mov
stc
pusha
ret
enter
mov
xchg
xchg
lea
xchg
push
jbe
cmpsl
and
insl
dec
dec
cmp
add
pop
call
ret
popf
or
inc
cmpsb
nop
mov
mov
mov
sub
cmp
mov
lods
xlat
bound
mov
pop
insl
cmp
fldcw
in
int3
lea
inc
repnz
loop
mov
repz
push
negl
js
orl
adc
out
imul
pop
cmp
push
mov
mov
rcl
adc
adcb
fchs
pop
sbb
jl
or
mov
sub
orl
sub
int3
add
cli
cmp
daa
mov
ds
clc
stos
pop
and
ljmp
sti
jmp
mov
imul
cld
mov
shll
xor
sbb
loope
add
cmpl
in
js
jp
and
xchg
jg
mov
xor
xor
fs
or
paddsb
int3
shl
loope
subl
inc
dec
or
popa
and
fwait
xchg
jbe
cli
cmpsl
das
fdivl
call
cmp
subl
fwait
out
loop
sbb
adc
pop
loopne
jge
rcl
and
and
push
mov
adc
movsl
scas
scas
dec
lods
out
lcall
cmp
mov
call
cmp
cmp
movsl
pop
jg
in
in
adcb
mov
inc
cmc
jo
and
insl
cmp
ljmp
add
add
loop
dec
into
push
adc
ret
cmp
test
or
push
sahf
cmp
cmc
pusha
movsb
dec
cmp
add
push
mov
push
addr16
and
mov
jne
aas
sub
push
mov
cmpsb
insl
outsb
aam
test
out
rorl
ret
sub
mov
shll
movsb
loopne
ret
data16
cmpsl
push
inc
inc
ret
jmp
nop
inc
out
sbb
jmp
adc
adc
jle
call
cmp
xchg
cmp
loope
jge
aad
out
js
pop
les
divb
aaa
out
xchg
js
mov
lcall
fs
push
aaa
pop
clc
sub
lock
scas
flds
inc
mov
fwait
sbb
cwtl
fucomi
idiv
push
ja
pop
mov
sbb
xchg
loope
roll
jmp
shl
pop
inc
out
mov
into
sbb
mov
imul
scas
dec
jg
push
je
jge
mov
cli
aaa
in
hlt
in
ret
dec
adc
popf
inc
xchg
insb
dec
aam
ss
insb
or
vandps
pop
mov
xchg
test
push
outsb
jmp
adc
dec
mov
out
mov
lock
cmp
cmpsb
mov
or
sub
jbe
xchg
push
das
xlat
mov
in
ds
xor
test
sbb
push
inc
sub
fadds
aam
mull
test
xlat
loope
and
or
xor
filds
xchg
mov
jbe
jo
adc
xor
push
icebp
mov
and
sahf
insl
js
sub
imul
pop
add
enter
mov
enter
or
and
out
mov
cld
and
shrl
sbb
testb
jp
sahf
fcoms
and
stc
mov
rcll
lock
rcr
loope
cld
dec
fcomps
lock
xor
mov
push
mov
push
sbb
inc
rcrb
insl
mov
dec
pop
fwait
adc
ror
jecxz
pop
call
inc
or
dec
push
notb
call
je
adc
adc
dec
sbb
sbb
sbb
stos
sbb
cmpsl
inc
ret
arpl
loop
mov
xchg
mov
call
clc
sbb
in
mov
ret
adc
lea
mov
cmp
pop
cmp
xchg
pushf
xchg
sbb
add
add
xchg
jmp
push
mov
leave
shlb
inc
insl
shll
sbb
subl
sbb
mov
mov
scas
test
mov
dec
test
inc
xor
data16
in
adc
idivl
insl
fcompl
cmc
add
mov
fs
jmp
mov
pop
xchg
mov
mov
push
je
stc
inc
dec
es
nop
fildl
jnp
push
pop
mov
mov
add
sbb
popf
stc
dec
ret
push
xor
aas
dec
mov
adc
add
mov
fstpl
int
or
fildl
jbe
fistl
sbb
aaa
in
sub
xor
call
mov
dec
adc
popf
movsb
mov
ljmp
mov
add
aas
adc
das
push
adc
xchg
or
dec
je
xor
dec
mov
mov
aam
pop
rolb
lock
loopne
movsl
or
aaa
dec
cmp
dec
divl
scas
hlt
inc
scas
enter
pop
addr16
cs
jne
jge
mov
sub
jo
adc
push
js
je
outsb
push
adc
pop
sbb
in
mov
pop
dec
jne
adc
xchg
fistl
daa
mov
cmc
pop
xchg
out
mov
jbe
lock
test
mov
push
out
faddl
cmp
jo
jb
push
dec
dec
and
fisttpll
insl
add
inc
dec
cmp
pushf
inc
xchg
orl
cmc
mov
jne
sbb
les
add
add
pop
ja
sub
dec
xor
dec
ljmp
int
sbb
loope
mov
dec
add
adc
jbe
andb
incl
pop
shlb
push
jl
repnz
adc
aad
sbb
mov
es
js
and
mov
pop
mov
gs
fistpl
push
pop
out
or
cli
push
lret
test
hlt
push
scas
test
and
hlt
pusha
cmp
int3
pop
ds
aad
push
paddd
xchg
fimuls
cmpsb
or
icebp
arpl
std
mov
cld
mov
xor
cmp
push
jb
sbb
jne
loope
push
stc
ds
jmp
pop
mov
inc
out
xor
inc
add
mov
sub
sti
call
adc
mov
sbb
outsb
mov
test
ret
mov
imul
jns
ss
mov
dec
or
dec
dec
insb
mov
xchg
xchg
or
cmp
push
or
insb
pop
loope
aad
cld
sub
pop
or
adc
sbb
inc
push
repnz
je
mov
clc
aas
push
mov
mov
jbe
mov
push
adc
loope
test
and
xchg
or
ljmp
jmp
sahf
mov
insl
mov
sbbb
sbb
add
jge
movsl
sub
and
lret
and
sbb
scas
cmp
and
lds
pop
fcompl
and
fcompl
jne
mov
arpl
fistpl
ljmp
inc
out
inc
mov
imul
daa
stos
jmp
scas
lcall
cmp
scas
imul
scas
xor
movsl
and
pop
sbb
jae
mov
xchg
sbb
cmp
fsubs
xchg
ja
in
or
imul
pop
adc
mov
cmp
sahf
sar
adc
sub
scas
int3
out
int3
movsb
sbb
cmp
mov
lods
pop
sbb
xor
out
inc
or
mov
faddl
insl
subb
lock
ds
cmp
push
xlat
sbb
xor
push
adc
mov
inc
jmp
mov
xor
jno
jmp
cwtl
repnz
xchg
imul
cmp
and
shl
or
scas
movsl
data16
rolb
sub
test
aam
cld
pop
dec
fidivrs
mov
aam
lret
xorb
stos
aaa
xchg
sarl
dec
add
js
ljmp
inc
cmp
and
cli
sub
shll
xor
cmp
iret
daa
or
pop
add
js
pop
adc
imul
mov
popa
push
xlat
mov
test
mov
mov
push
mov
push
movsb
or
xchg
clc
xor
or
out
roll
jae
sbb
xchg
out
push
imul
testl
aas
test
xlat
jns
das
loopne
push
aam
pop
add
push
add
test
scas
xor
jno
dec
std
pop
fdivs
push
cmpsb
frstor
cli
jmp
stos
scas
add
cmpsb
mov
and
mov
imul
xchg
push
jmp
lods
roll
iret
mov
minps
in
mov
loope
cmc
rclb
mov
iret
mov
jge
mov
lcall
mov
mov
pop
jbe
mov
xchg
push
xchg
add
pop
xor
aam
fbstp
xchg
outsl
mov
ret
clc
cmp
mov
xchg
sbb
aam
decl
xor
sti
test
fidivrs
sbb
jecxz
stos
adc
daa
jmp
test
mov
jmp
push
mov
mov
lret
sub
push
xor
inc
call
add
xchg
xchg
arpl
les
sub
adcb
mov
fcomps
sbb
popa
mov
jle
lcall
rorl
in
xchg
xchg
fbld
jmp
lods
cmpb
pop
mov
pusha
mov
mov
int3
pop
xor
lock
divl
lock
cs
cmp
jg
mov
dec
test
sub
fcomi
sub
int3
imul
jo
mov
aaa
cld
hlt
push
jmp
sbb
fstps
push
xlat
mov
push
jne
inc
notb
jne
cmpsl
shrb
sahf
in
or
in
mov
aaa
and
or
dec
repz
add
sbb
out
pop
inc
scas
inc
ds
dec
lret
or
xor
and
cld
push
les
dec
lock
aaa
jne
adc
out
mov
leave
data16
loope
imul
bnd
daa
lock
cmp
push
pop
push
push
cs
xchg
iret
push
xchg
adc
inc
inc
xor
jecxz
push
idivb
pop
arpl
ja
and
arpl
inc
mov
add
fistps
jmp
mov
mov
notl
jle
adc
xchg
mov
aad
xchg
cmp
pushf
jg
fs
jp
cli
inc
call
inc
push
pandn
nop
test
mov
pop
imul
mov
dec
popa
loop
mov
xchg
xor
mov
outsl
and
fdivs
mov
rcr
cmpsl
mov
jmp
ss
icebp
repz
lret
jl
mov
xchg
inc
fisubrl
ljmp
imul
xlat
jb
mov
sbb
std
mov
sub
mov
mov
lock
push
inc
xor
je
adc
dec
push
dec
inc
xor
test
pop
stos
sbb
and
out
lods
mov
mov
mov
xchg
ds
and
push
mov
sti
pop
push
push
cmp
out
sbb
and
ret
mov
xor
in
cmp
popf
push
das
xchg
roll
mov
loope
rorl
shrb
pop
test
mov
sbb
add
sarl
inc
sub
xor
sub
pop
or
mov
push
push
testb
or
dec
cmc
inc
or
in
dec
and
test
dec
mov
cli
les
shll
je
jl
aam
push
std
cmpsb
xor
frstor
pushf
rcrb
pusha
add
jns
popf
cmp
adc
mov
xchg
leave
mov
movsb
mov
into
mov
jp
inc
cld
dec
xchg
jbe
push
in
mov
or
xchg
dec
mov
mov
mov
insb
stc
or
test
out
negb
lcall
std
lock
jle
scas
dec
enter
inc
mov
inc
loop,pn
jbe
stos
imul
mov
aam
cmp
sub
adc
jl
loopne
jae
mov
movb
lea
xchg
jbe
int3
xchg
and
data16
jno
sub
ret
stc
pop
rorb
cmp
ret
jp
mov
and
insb
mov
jo
xchg
and
inc
pop
add
mov
jecxz
pop
pop
inc
loope
jge
test
out
leave
add
cwtl
ljmp
sbb
or
in
sbbl
push
inc
lret
inc
dec
adc
cmp
test
mov
cs
ds
sbb
les
es
jmp
xor
andl
dec
xchg
xchg
rcrl
add
ja
scas
arpl
ret
loop
movsl
sbb
or
xchg
filds
mov
stc
mov
or
hlt
pusha
or
aam
and
xor
aam
insb
jnp
or
push
popf
sub
pop
loope
aad
shll
test
sbb
movsl
mov
jecxz
arpl
pop
mov
js
cltd
in
hlt
aad
push
add
push
jl
addr16
xchg
fimull
pushf
pop
int
test
add
clc
push
add
ss
inc
lods
push
xor
jmp
ret
cmp
mov
sbb
or
sub
inc
data16
mov
pop
ja
sarl
mov
js
negb
jle
jle
scas
sub
cld
mov
add
lock
test
dec
dec
es
inc
xchg
push
push
movsl
ds
mov
add
cmp
sbb
rolb
out
pop
sbb
jecxz
rolb
cli
jbe
std
lahf
push
adc
aas
inc
pop
movsb
mov
je
xchg
lods
add
lahf
mov
subb
sbb
rcll
add
push
mov
stos
aas
js
mov
pop
ret
scas
fistps
imul
mov
adc
idiv
loope
mov
pop
cmp
or
mov
sbb
in
push
icebp
push
pop
call
sbb
xchg
pop
icebp
mov
pusha
imul
xor
and
in
loopne
sbb
adc
mov
aas
jge
inc
adc
inc
adc
inc
or
mov
repz
xchg
mov
or
arpl
pop
clc
inc
lds
loope
cmp
mov
adc
jo
minps
mov
inc
mov
cmp
inc
sub
and
test
dec
arpl
add
lock
loop,pn
scas
sbb
inc
pusha
adcl
imul
sahf
int3
push
push
mov
in
icebp
mov
mov
stos
sub
push
pop
ljmp
fdivrs
pushf
push
mov
cmp
jnp
mov
pop
daa
cmc
push
xchg
fs
cs
and
or
sub
sbb
jecxz
jmp
out
lret
pop
jmp
push
shll
insb
dec
mov
mov
mov
mov
imul
pop
mov
pop
imul
mov
and
clc
enter
push
cltd
dec
scas
push
mov
in
stos
mov
out
mov
sahf
lahf
je
call
sarb
cmpsb
neg
sub
inc
inc
mov
stos
pop
jae
clc
ds
or
aad
test
in
jmp
test
rcrl
mov
mov
mov
jns
xchg
mov
in
jno
je
call
hlt
hlt
jl,pn
clc
je
test
xchg
push
xlat
out
ja
adc
sbb
subl
clc
ss
pop
subb
repnz
pop
ds
fimull
pop
lahf
fcompl
mov
xor
je
pop
xor
aad
lock
popf
pop
pminub
sub
dec
movswl
cmp
pop
lock
shlb
inc
fwait
jp
addr16
mov
inc
dec
cmp
xchg
sbb
shr
and
popa
lea
insl
push
lds
jnp
cmp
ss
fnstenv
add
add
inc
fcoml
arpl
loop
xor
cmp
ret
or
or
mov
mov
push
outsl
fisttpll
mov
rcrl
shr
inc
lret
mov
addr16
addb
bound
mov
cli
pop
faddl
push
loop
pop
adc
fistps
jle
repnz
ss
inc
xchg
mov
fistpl
mov
pushf
int3
push
sub
clc
mov
sub
test
inc
cld
xchg
loope
stc
cmpsl
mov
pop
js
sti
in
aad
insb
mov
mov
lcall
mov
xchg
mov
testl
iret
arpl
jnp
cmp
and
outsb
xchg
fstl
je
sbb
xchg
js
loopne
popa
sub
call
rcll
flds
pushf
in
mov
dec
dec
das
add
jae
mov
cmovb
jp
dec
sub
mov
cmpsb
in
ljmp
aam
ja
cmp
xlat
std
push
mov
push
fstpt
out
xchg
push
in
addl
pop
pop
xor
xor
loope
cmp
inc
seto
and
pop
add
xchg
shll
clc
fistpl
sbb
jp
or
xchg
add
add
mov
aad
mov
pop
mov
xor
fistpl
mov
push
or
cmp
cmp
dec
mov
mov
jno
cmp
xchg
mov
lock
leave
jecxz
xchg
arpl
adc
inc
in
and
and
pop
outsl
inc
scas
fnstcw
cmp
rcll
repnz
lds
mov
mov
xchg
enter
inc
ja
sbb
sub
jecxz
loopne
xchg
xorb
pushf
jbe
jle
int
and
adc
push
gs
cmp
mov
fldl
fwait
ljmp
scas
lahf
sub
inc
outsb
sbb
push
jl
xchg
jne
repz
loopne
mov
jl
aad
addr16
inc
add
push
mov
fwait
test
push
lret
std
dec
push
movsb
test
cmpsl
mov
or
lahf
push
sbb
cli
data16
jbe
sti
call
add
xchg
jl
lcall
popa
xchg
cmp
lds
insw
or
lds
repnz
sub
shrb
or
sti
roll
enter
or
sub
imull
push
cmp
push
les
sub
nop
dec
dec
clc
neg
clc
in
sar
pop
cmp
pop
adc
mov
fsts
push
dec
cmp
jmp
inc
aad
jge
fldt
jge
sub
mov
pop
push
push
dec
aaa
adc
not
adc
insl
jl
pop
pop
and
imul
cmp
ja
outsb
je
ds
adc
and
fsubp
jg
pop
bound
lret
fsubl
mov
ja
cs
cmp
xchg
loope
push
mov
mov
add
dec
and
add
mov
mov
jbe
mov
addr16
imul
mov
test
sar
adc
or
mov
jno
divb
mov
sbb
test
sti
sarl
cld
je
or
mov
lds
mov
mov
mov
stc
es
test
mov
call
cli
rol
push
cmpsb
pop
jmp
add
aas
fadds
out
add
popf
add
and
rolb
clc
testl
push
lahf
stos
loopne
out
dec
shr
push
mov
xchg
inc
les
mov
popf
push
js
adc
push
dec
loopne
cltd
es
add
or
ds
rcll
loop
arpl
js
or
sbb
xor
rdmsr
inc
jl
xor
mov
cli
iret
andl
loop
mov
sbb
in
leave
pop
jo
push
outsb
cmp
push
sub
mov
pop
mov
dec
mov
lods
cmc
lret
insl
adc
push
icebp
leave
lds
push
mov
popa
xchg
mov
loope
jmp
ljmp
sbb
call
push
inc
je
sbb
aad
mov
int
shll
jne
or
push
push
fisttpl
sub
ljmp
shl
loope
out
jp
xlat
push
mov
sbb
loopne
add
daa
push
jl
lods
push
addr16
shll
aad
arpl
test
out
or
aam
add
addr16
pop
mov
fimuls
push
repnz
sbb
sub
out
or
mov
push
repnz
testl
sub
push
shrl
js,pt
loope
sub
xor
test
mov
movsl
jmp
fcomps
stc
adcb
sbb
mov
lods
mov
mov
mov
out
clc
adc
test
sarl
aam
fsub
jmp
ja
lods
push
push
mov
icebp
addr16
ljmp
sbb
cli
push
adc
mov
movl
in
adc
imul
sarb
xchg
getsec
inc
mov
dec
iret
stos
jae
ret
cmc
mov
jmp
mov
mov
push
mov
pop
lds
test
xchg
insl
sbb
test
mov
xchg
out
fwait
rcrl
xor
jle
xor
mov
sti
loope
shll
push
push
pushf
cmpsl
or
mov
sub
sbb
loop
jmp
push
mov
sbb
adc
out
arpl
into
mov
ficomps
push
mov
fmull
cli
mov
test
cmp
cmp
jg
xor
loope
rcrb
in
flds
add
outsl
lock
inc
adcl
icebp
pop
adc
jns
mov
pop
add
jae
cmpsb
lahf
daa
and
daa
rcl
push
adc
ss
mov
scas
add
nop
sub
mov
in
mov
jge
xchg
mov
xchg
in
xor
lods
jnp
jae
sub
sub
sub
fs
ds
ret
xor
inc
ret
push
cmp
and
in
jno
xchg
je
arpl
cmp
out
cld
int3
jle
aas
pop
pop
mov
sbb
xor
jo
mov
and
push
test
pushf
outsl
ja
out
mov
imul
les
movsb
fsubrl
and
dec
inc
and
xlat
mov
mulb
mov
mov
popa
mov
push
je
mov
aas
lahf
cli
jp
lea
cli
jge
sbb
ret
fiadds
rorl
sub
test
xchg
fcmovnb
rcrb
mull
jo
jle
inc
jl
push
xlat
insl
test
and
mov
fnsave
cmp
mov
sbb
lcall
test
xadd
add
rclb
cld
push
cmc
rcll
mov
lahf
cmp
cmp
or
mov
cltd
sahf
ljmp
call
lcall
idivb
mov
lret
shlb
int
xchg
int3
dec
in
xor
imul
fisubl
adc
movsl
aam
pop
cmp
mov
adc
out
jge
mov
js
rcrl
in
dec
pop
popf
lahf
xor
pop
fistps
inc
out
sub
orb
sub
ret
movsl
mov
sbb
adc
lock
pushf
pop
push
sub
add
push
inc
xchg
adcb
in
inc
cmpl
jp
mov
rol
sbb
sbb
stos
mov
pop
popf
xchg
pop
cmp
mov
jno
jp
repz
cs
adc
xchg
outsl
cmpsl
mov
pop
inc
push
xor
sarl
pop
lds
in
jecxz
push
sbb
and
shlb
push
mov
ljmp
adc
lret
push
test
lcall
dec
addr16
popf
inc
insl
lods
pusha
pop
push
ljmp
icebp
xlat
movb
cmp
fcomi
roll
fwait
jp
aas
cmp
addl
sti
push
or
jle
pop
adc
inc
out
ret
aam
int
out
adc
and
jg
ja
in
lock
ljmp
inc
fst
mov
aaa
sub
mov
iret
mov
pusha
cmp
jb
push
mov
or
mov
fimull
pop
lea
lock
sbb
add
movmskps
mov
test
jmp
das
aam
pop
in
jl
mov
sti
popa
adc
mov
sub
repz
mov
sub
or
mov
in
push
jbe
add
add
clc
cld
push
adc
push
aam
fs
jge
and
lock
hlt
sarl
mov
or
out
mov
mov
fmuls
sbb
jne
add
loope
mov
and
ljmp
fnstenv
call
dec
adc
mov
or
sbb
sbb
jg
inc
jne
jecxz
cli
mov
xchg
ljmp
cli
cmp
stos
jp
adc
mov
pop
mov
jecxz
xor
cmp
mov
mov
insl
daa
mov
cltd
sbb
dec
dec
ljmp
dec
cmc
rolb
xchg
dec
add
inc
push
mov
sbbl
pop
or
sti
mov
jbe
and
insb
mov
mov
push
pop
scas
rcl
in
adc
out
ret
js
push
daa
and
cli
fadds
xchg
lcall
pushf
fdivs
mov
pop
pop
imul
aad
cmp
mov
adc
sti
mov
fidivs
jp
jp
repz
loop
cmp
js
sub
je
jge
pop
inc
adc
es
in
mov
or
in
sbb
cmpb
movsl
pop
fsubr
out
push
out
loopne
bound
pop
jg
xchg
push
movsl
scas
daa
pop
xchg
push
and
adc
mov
mov
pop
cli
mov
popf
mov
sbb
add
out
ja
test
cmc
jmp
mov
std
pusha
cli
test
in
call
test
or
mov
fistl
cmp
push
dec
hlt
pop
push
loop
cmpsb
jmp
and
es
sbb
push
cmp
notl
xor
arpl
insb
pusha
push
and
add
xor
adc
pop
jle
jg
sub
fstl
add
ljmp
cmpsl
xchg
adc
leave
cmp
fcmovbe
jge
cmc
popf
ja
scas
shlb
lock
push
jns
and
mov
out
mov
fisttpl
iret
push
or
sub
inc
test
adc
sub
push
cwtl
adc
fcomps
fstl
jbe
imul
jecxz
fdivrs
mov
and
inc
mov
subl
push
inc
roll
sbb
ja
jecxz
out
cmpb
int
stc
mov
pop
shrl
lcall
jno
outsb
or
sub
or
mov
pusha
add
loope
shrb
sti
xchg
xchg
push
insb
or
xchg
sbb
fidivs
cmc
jmp
idivb
xor
pop
fwait
incl
scas
movd
js
jmp
fwait
popf
ret
lret
leave
aaa
mov
inc
scas
cli
call
add
sub
shr
ds
mov
jns
cltd
inc
lods
jge
lock
xor
jmp
pop
adc
jp
sahf
popa
fwait
sub
sbb
push
lret
daa
cli
lret
jp
pushf
int
sti
adc
xchg
mov
test
push
push
sbbl
pop
loopne
jns
les
aaa
and
call
sbb
out
jbe
out
adc
dec
jg
sbb
jnp
xor
sub
pop
inc
fs
pop
fcoms
or
sti
and
pop
jg
test
jo
leave
aam
into
mov
push
aas
scas
rcll
xor
mov
or
mov
xlat
or
mov
push
and
jmp
xor
in
imul
std
jno
cs
jg
sbb
mov
scas
rolb
out
jg
add
outsb
scas
scas
or
sub
xchg
pop
adc
aad
cmc
dec
dec
scas
dec
pop
mov
arpl
cmp
cld
mov
les
fcmovnbe
cmpsb
mov
sub
sbb
xor
out
clc
ret
iret
adc
jle
in
lret
mov
pop
out
or
inc
xlat
shll
xchg
dec
add
xor
jecxz
out
pop
test
ret
cmpsl
daa
sub
aas
cmp
into
daa
movl
cmpsl
pop
or
cs
or
dec
push
out
dec
mov
jmp
sbb
and
dec
sbb
add
sub
mov
xor
jmp
jmp
test
jge
pop
dec
ds
orl
inc
les
popf
jnp
cmp
cwtl
js
fs
add
wbinvd
ja
int3
mov
scas
mov
pop
adc
pop
and
call
rorl
jg
mov
jnp
lcall
shll
mov
push
je
cmc
push
jle
aam
sub
icebp
js
les
insl
fmuls
jb
stc
outsb
and
mov
push
xor
js
or
imul
xchg
shl
call
sarb
sbb
mov
test
lds
push
adc
stos
lret
add
xor
add
shrl
cmc
jecxz
pop
stos
lea
sub
outsl
adc
cmc
mov
stos
mov
ds
popa
push
pop
push
rcl
xchg
add
inc
ds
out
subb
or
shlb
insb
scas
sub
pop
fbstp
cmp
or
push
sub
mov
add
aad
push
popf
stos
xchg
out
in
jne
cmc
divb
lret
inc
sbb
loopne
dec
movsb
hlt
repz
imul
push
pop
jo
xor
jmp
aam
inc
jp
enter
jbe
mov
test
orl
lods
loope
test
adc
and
or
out
lret
es
pushf
loopne
inc
cmc
inc
icebp
mov
jb
mov
addr16
and
lea
add
push
dec
mov
lock
jb
jb
popf
ffreep
pop
scas
ret
cmp
dec
push
in
loop
mov
xor
add
js
out
sbb
imul
mov
ds
mov
in
fisubrl
fistpl
jbe
adc
jo
jl
push
testb
xor
sub
add
dec
jb
cmpsb
pop
aaa
js
popf
sbb
push
xor
inc
xlat
adc
mov
lahf
cli
mov
sarb
into
xrelease
or
add
cli
add
push
push
test
dec
pop
jecxz
sbb
pop
jbe
add
jne
je
mov
or
mov
out
jbe
hlt
icebp
mov
xor
sbb
aad
bound
dec
sbb
jmp
or
jge
mov
dec
xor
mov
xchg
addr16
enter
stos
inc
cmp
subl
dec
dec
js
aaa
in
push
lea
aas
xor
push
dec
les
insl
das
push
jl
dec
addr16
data16
jge
fisttpl
add
mov
pusha
mov
outsl
cmc
ljmp
sbb
jo
sbb
and
pop
gs
xor
pop
jne
cmp
pop
pop
inc
xchg
cmp
into
rcr
test
push
cmp
push
add
orb
mov
pop
jo
or
mov
leave
inc
stos
gs
dec
fists
inc
jae
in
pop
push
inc
xchg
leave
xchg
loopne
mov
pusha
shlb
pop
div
arpl
mov
gs
sarb
daa
loopne
jecxz
shlb
out
test
clc
fidivrs
xor
push
sub
insb
out
jmp
push
aam
out
ja
je
jne
call
or
popa
sarl
roll
shll
sbb
call
js
icebp
movsl
sahf
mov
pop
in
in
jmp
test
mov
mov
sbb
and
addr16
xchg
ret
fucompp
inc
jl
inc
pop
inc
and
lock
flds
xor
imul
sub
dec
sbb
xchg
ss
sbb
aad
sub
or
stc
dec
jne
out
lea
xor
mov
bound
test
push
lcall
fstp
and
std
jle
jmp
mov
add
insb
js
repz
out
repnz
xor
xchg
xchg
in
mov
mov
pop
sbb
push
insl
mov
imul
aam
daa
es
pop
jb
add
fcom
insl
jl
mov
fstps
lock
aad
subl
sahf
and
xchg
lahf
je
out
sub
stc
push
add
ja
mov
jns
dec
and
sbb
cmp
mov
mov
sahf
test
add
push
mov
mov
fstpl
xchg
fimull
push
jne
sub
rcrb
mov
cmp
mov
cmp
jo
push
jle
mov
out
cli
ja
cmp
sbb
in
mov
movl
in
jne
adc
jmp
imul
pop
and
adc
inc
aam
loopne
cmpl
ljmp
ss
icebp
push
fdivl
cli
fcompl
mov
pop
xchg
sbb
insl
mov
add
or
stc
ret
test
cmp
add
jb
cmpsb
inc
loop
sti
sbb
mov
mov
add
ja
fstp
and
mov
outsl
clc
js
jno
data16
inc
out
jp
test
jo
adc
adc
jge
bswap
mov
fwait
dec
adc
ret
mov
shrl
jmp
mov
loopne
mov
lock
and
sbb
ret
mov
cmpsl
cmp
mov
bound
mov
stos
cmp
fimull
imul
nop
pop
jge
dec
negl
js
mov
lock
mov
sub
cmc
scas
dec
mov
aaa
ds
pop
insb
femms
test
into
je
je
out
nop
add
cli
sub
cmp
mov
jmp
inc
or
pop
push
arpl
rol
cmp
out
loope
je
dec
xlat
divl
jecxz
push
cmp
sub
out
pop
shl
jl
adc
pop
inc
icebp
scas
mov
lcall
add
lods
shl
and
or
repnz
jns
icebp
pop
aam
jp
sub
je
jbe
icebp
pop
mov
pushf
add
mov
int3
leave
in
je,pn
dec
cmp
add
mov
dec
dec
cvtps2pi
push
mov
arpl
stos
shrd
or
mov
das
ret
ds
mov
lret
xor
and
roll
mov
cld
jle
mov
mov
sbb
sbb
hlt
lahf
xchg
mov
and
cli
imul
fs
sbb
push
fcmove
jg
sbb
xchg
jb
jle
jge
xor
or
out
sbb
mov
rcrb
rolb
or
inc
jl
inc
jmp
out
mov
loope
dec
inc
mov
sub
pop
ss
inc
adc
cmp
int
and
fsubs
cmp
data16
fcomps
push
mov
ds
rcrb
jno
xchg
dec
iret
lcall
push
sti
adc
inc
aam
xchg
mov
dec
jnp
mov
pop
jl
inc
mov
out
push
add
repnz
or
dec
pop
xchg
mov
mov
aad
mov
push
gs
test
pop
std
mov
add
loopne
arpl
mov
loopne
and
sbb
mov
adc
sub
dec
negl
push
push
cmp
adc
shr
jp
xchg
jp
jae
push
das
jecxz
iret
mov
cs
cmp
jp
mov
aam
out
or
jecxz
in
dec
jmp
sarl
adc
mov
sahf
sub
add
shlb
scas
aad
sbbl
inc
cmp
in
inc
push
mov
addr16
test
add
jbe
sbb
cli
fs
cwtl
add
and
or
cs
push
xor
add
jnp
shr
negb
push
popf
sub
ljmp
add
andb
push
dec
mov
out
jb
jp
daa
and
je
mov
ja
jne
les
mov
mov
push
fwait
pop
movsb
clc
sbb
sub
add
call
aam
out
fidivl
lea
push
outsl
test
inc
lock
movsl
or
ljmp
mov
jb
mov
arpl
call
in
mov
xor
pop
dec
arpl
icebp
fisubl
lock
pop
lcall
stos
unpcklps
shlb
jg
divl
int
test
jmp
ss
push
pop
and
jo
mov
fstpt
aam
pop
cwtl
jecxz
sub
ds
lea
adcl
jns
dec
fdivrs
sbb
ljmp
adc
jae
xor
pop
lds
jl
cli
pop
mov
ss
jo
call
mov
ficoml
push
pop
inc
jbe
pop
test
sahf
xor
rcrl
adc
or
sbb
sbb
xor
sbb
into
sbb
xor
sbb
icebp
mov
jge
jnp
faddl
fidivrs
dec
shr
sub
mov
testl
mov
fisttps
loope
movsl
and
pop
fistl
xchg
push
sbb
into
les
nop
inc
les
inc
xor
pop
pop
rorl
mov
inc
mov
mov
fucomi
lret
rclb
bound
adc
xor
jnp
popl
lock
sarl
jl
je
mov
mov
and
and
sbb
mov
pop
pop
mov
repz
movsb
jbe
mov
mov
fldl
mov
sbb
xor
or
jp
call
xor
je
mov
ss
pop
int
push
fwait
clc
or
jmp
jp
xorl
cmpsb
cld
adc
sbb
cld
mov
dec
mov
fildl
inc
push
sub
sbb
xor
sub
sub
jnp
imul
push
scas
adc
or
xor
and
pop
inc
cmc
push
in
push
pop
cmp
add
aas
rclb
push
jle
adc
rclb
jmp
aas
inc
dec
jno
fistl
imul
fiaddl
mov
mov
add
sbb
loop
lea
rcl
add
xor
mov
sub
incl
frstor
incb
stos
das
push
es
repnz
dec
push
pop
loop
into
push
sub
pop
push
sbb
inc
adc
test
cmp
jl
hlt
sbb
push
cmp
cmpsl
sub
sbb
push
jge
push
stos
push
je
stc
in
jmp
jmp
jecxz
mov
idivl
repz
popf
lret
jo
hlt
push
jb
loopne
add
cmc
icebp
jnp
stc
dec
push
push
xchg
adcb
xchg
add
pop
pop
push
mov
loope
jne
rol
cs
in
mov
mov
scas
fcomi
pop
cmp
dec
sbb
arpl
xchg
sahf
sub
imul
leave
aad
sbb
push
pop
xor
loopne
mov
mov
out
xor
loop
out
push
sbb
iret
push
pop
jb
clc
ljmp
sbb
addr16
loop
sti
mov
push
mov
pop
pushf
or
insb
sub
add
mov
fnstsw
mov
jge
cltd
out
sub
das
filds
inc
or
mov
stos
push
push
pop
xlat
ds
mov
repz
sbb
or
and
adc
dec
or
mov
stos
and
mov
pop
outsl
or
and
loope
call
js
mov
cltd
gs
xlat
xor
cmp
in
dec
fisttpl
test
movsb
popa
adc
ljmp
rcl
lret
std
cmc
adcl
popa
call
push
jp
fldenv
jg
addl
jle
ja
or
jecxz
mov
mov
add
jne
mov
mull
push
pop
and
popa
adcb
push
mov
dec
aam
xchg
mov
pop
inc
jne
fisubl
vmovdqa
jmp
sub
ret
fwait
mov
mov
test
xor
fdiv
int
mov
aam
je
jne
popf
push
popf
shlb
clc
and
xrelease
lcall
sbb
push
in
roll
subl
idivl
dec
jb
jp
mov
loopne
addl
imul
ja
popf
mov
sahf
adc
push
jp
lock
scas
sbb
push
clc
call
movsb
mov
lret
pop
loop
rorb
mov
mov
add
push
inc
and
mov
outsb
and
or
push
lods
jmp
jl
pop
sbb
and
sbb
pop
cmp
stos
pop
outsl
fistl
pop
mov
jmp
cmpsl
jae
push
ret
jbe
mov
hlt
lcall
test
xlat
xor
push
adc
lock
sub
lahf
clc
jbe
add
cmpb
ret
xor
ljmp
pop
or
stos
cmp
loopne
pusha
fnstcw
test
call
sub
inc
mov
cmp
mov
xchg
pop
sub
mov
xchg
iret
mov
shlb
xchg
scas
fwait
mov
cwtl
int3
enter
jnp
cmp
jmp
jg
fisubl
pop
sub
jb
es
stos
mov
insl
ret
lods
mov
jge
into
in
xor
jmp
or
stc
push
adc
aas
pop
xor
push
fwait
cmp
in
mov
mov
or
les
mov
faddl
push
pop
daa
or
mov
aad
dec
jg
xlat
pop
fs
addr16
shll
dec
in
repz
rcrb
test
sub
fistpl
xor
cmp
and
rorl
movzwl
mov
jno
sbb
jle
stc
mov
add
add
imul
push
mov
mov
stos
lcall
test
rclb
ja
jnp
sub
lock
inc
and
adcb
mov
mov
cmp
movsb
xchg
arpl
icebp
call
mov
sarl
in
fbld
ljmp
push
out
outsb
shlb
mov
pop
xlat
popf
and
test
out
not
dec
cmp
int
sbb
push
xor
xlat
jle
lret
flds
arpl
ds
out
cmp
xor
popf
mov
mov
shr
cmpsl
pop
pop
xchg
mov
or
mov
sub
sarb
push
mov
ljmp
clc
add
in
mov
outsb
pusha
into
xchg
adc
mov
jnp
push
sbb
inc
or
movsl
lods
into
jge
mov
mov
adcb
insl
in
gs
enter
negb
loope
add
rolb
cltd
or
lret
mov
and
mov
lcall
ss
clc
es
out
jle
loope
rcrl
addl
xchg
sti
arpl
or
sbb
add
cmp
js
je
lret
ja
push
mov
sub
mov
push
pop
push
inc
cltd
xor
dec
icebp
cli
mov
jb
loop
fwait
or
pop
sub
js
test
add
cmp
push
inc
push
cmpb
cmp
jl
imul
mov
mov
xchg
arpl
icebp
repnz
fidivl
ret
popf
jecxz
mov
xchg
movl
gs
sti
ss
ds
ret
pop
loopne
pop
jl
sub
mov
sub
negb
cmp
jmp
imul
dec
push
fistl
psubusb
xlat
insl
mov
clc
mov
je
adc
shrb
and
sbbl
pop
addr16
adc
cmpsb
xchg
mov
mov
in
outsb
das
fstl
out
rol
and
pop
insl
fimull
rcl
inc
enter
sahf
cld
cmp
aad
ret
dec
jecxz
sbb
jo
mov
rcrl
jecxz
dec
pandn
push
rclb
adc
jp
cmc
mov
das
stos
push
inc
ja
mov
add
pop
mov
sbb
jp
nop
dec
andb
sbb
les
sbb
push
mov
pop
jo
icebp
mov
loop
sbb
dec
sub
sbb
adc
ficoms
cmp
enter
add
xor
cmp
scas
jg
fwait
aas
mov
rorb
add
aas
cmp
mov
push
inc
test
rolb
clc
fisubs
test
mov
dec
mov
aaa
dec
adc
sbb
mov
test
cmpsl
xorb
std
fldl
daa
imul
fdivp
jae
mov
sahf
dec
stos
push
cmp
addr16
mov
xchg
ficoms
sbb
adc
adc
mov
mov
xor
call
cli
inc
loope
sbb
call
lcall
jno
fcmovu
outsb
inc
push
fcompl
push
pop
dec
repnz
pop
or
xor
inc
pop
cmp
shl
test
movsl
cmova
addl
xchg
sti
dec
inc
fwait
imul
jmp
mov
mov
or
in
or
or
mov
in
xor
xchg
xchg
add
sub
test
test
jmp
xchg
jb
sbbb
out
jbe
into
adc
cmp
ja
test
lcall
ljmp
inc
jne
inc
idivb
into
jbe
lahf
sub
in
lock
or
fsubr
jl
xor
cltd
mov
jl
pop
idivb
imul
scas
lods
or
lods
or
mov
in
ds
cmp
jge
and
push
ds
movzwl
cmpsl
mov
xlat
mov
pop
rcr
add
sub
sub
push
mov
add
icebp
add
push
adc
out
les
shl
scas
inc
sbb
ss
leave
std
out
jbe
mov
mov
loopne
mov
sbb
xchg
cs
addr16
stos
sbb
cmp
arpl
bound
lods
int
pop
ja
mov
mov
jmp
mov
inc
rorb
imul
rorb
mov
ja
inc
addl
test
push
ja
bound
dec
mov
test
lahf
test
loop
mov
sbb
push
mov
test
nop
ljmp
add
imull
shll
mov
aaa
pushf
scas
testl
push
mov
repnz
pop
mov
sbb
push
inc
jno
mov
xor
push
jnp
sub
xor
repz
mul
pop
or
daa
mov
dec
jne
mov
pop
cmp
icebp
test
jno
faddl
mov
ror
sub
mov
sbb
dec
in
sub
cmp
adc
pop
jle
jl
nop
cmp
sti
rolb
add
loope
add
sub
xlat
cmpsb
pop
cmpsb
aaa
adcl
popa
shr
lret
out
adc
pop
in
mov
cld
sub
or
cs
sti
rcll
or
jno
sbb
jmp
mov
mov
jg
or
cli
shlb
add
inc
es
pop
sub
or
scas
out
stos
add
lahf
push
test
cmc
xchg
cmp
aam
pop
pop
cmp
push
push
call
push
mov
or
mov
pop
mov
cli
sub
add
mov
jns
cmp
push
testl
lods
cmpsb
addl
jnp
jle
movsb
jo
in
std
insl
jb
jg
icebp
inc
popa
scas
xlat
popf
mov
xchg
fwait
dec
pusha
mov
add
jo
push
sub
xchg
hlt
call
sarl
fcompl
cmp
leave
dec
daa
inc
jbe
fisttps
sbb
int3
andl
jne
add
mov
jmp
insb
push
jge
xor
jg
sub
ret
xchg
mov
rol
and
into
into
pop
xchg
add
sbb
push
sub
cmpsb
ud0
mov
jg
xchg
inc
cmp
icebp
sub
mov
adc
lods
add
lock
mov
cmpsl
jne
pop
lret
mov
mov
jns
nop
ficompl
add
fdivl
andb
int3
daa
mov
lret
addr16
sbb
cmp
fbld
jnp
ljmp
andl
adc
iret
stos
imull
aas
pop
sbb
xor
sarl
and
adc
imul
mov
pop
sbb
aad
fdivs
xchg
ds
push
fdivrl
mov
mov
and
in
bound
push
je
cmp
inc
dec
outsl
lods
loopne
in
mov
aaa
stc
jo
mov
add
in
mov
mov
lret
xchg
cmp
repnz
lods
shlb
insl
into
inc
sahf
sub
aam
insl
fisubrl
jno
sub
xchg
or
pop
les
std
sbb
pop
test
cwtl
aaa
cmp
lret
dec
and
call
ret
ret
pop
or
sbb
pop
out
add
lea
xchg
adc
pop
xchg
idivb
mov
icebp
jne
andl
sbb
adc
mov
push
icebp
nop
inc
ficomps
in
aas
arpl
stos
add
paddsw
sahf
xchg
fs
repnz
xor
mov
ds
xchg
sbb
sbb
add
cmp
add
addb
dec
sub
xchg
test
std
mov
fisubl
icebp
or
loope
inc
scas
movsl
cmp
pushf
fidivrl
cmp
mov
ss
xlat
lea
jae
mov
rolb
in
out
adc
push
jge
sti
add
fcom
cmp
dec
shll
xor
cmp
cmpb
add
mov
mov
cmpsb
jmp
mov
sub
loopne
dec
cmp
shll
xor
push
sub
popf
les
jmp
aaa
sbb
out
mov
and
int
loope
jns
jbe
cmp
dec
loopne
sbb
push
xlat
jge
mov
roll
cltd
lds
inc
scas
scas
sub
aad
xor
pop
push
outsl
notl
push
mov
rcrb
das
sahf
movsl
movsl
xchg
hlt
sbb
cmc
hlt
loopne
xor
add
dec
fcmovnb
adc
mov
jo
stos
int3
shl
mov
cli
lock
push
push
js
imul
aad
adc
and
fistpl
jg
pop
or
test
pop
loopne
mov
addb
out
roll
inc
mov
cli
inc
inc
sbb
orl
mul
mov
ja
movsl
call
xchg
imul
test
popf
or
mov
rorl
cld
fdivl
push
or
fs
je
out
scas
cmp
nop
mov
xchg
mov
loope
push
popf
cld
adc
cs
jne
jp
pop
adc
sub
out
mov
add
testb
bound
popa
je
jo
icebp
shl
stos
and
lods
pop
fimull
scas
xor
in
fadd
pop
ret
cmpsl
mov
test
push
mov
test
inc
rcrl
stos
testl
cmp
xchg
mov
mov
pop
mov
ret
fdivr
pop
xchg
push
sub
pop
jbe
add
and
cmpsb
mov
sub
jo
pushf
add
jne
dec
mov
das
xchg
aad
cwtl
push
cmp
cwtl
inc
cmp
js
xchg
and
test
jecxz
sbb
outsl
lret
and
roll
sbb
push
or
mov
ficomps
inc
mov
sbb
mov
ret
shll
pop
aas
stos
push
cmovge
add
dec
pop
or
xlat
pop
add
in
jl
call
cmpsb
bound
pop
aam
add
testb
pop
mov
jne
out
and
std
push
jge
decb
xchg
fisttpl
lea
clc
mov
aad
pop
sub
fistpl
mov
sbb
aam
incb
mov
lcall
add
add
rcl
add
dec
mov
movsb
stos
leave
add
mov
mov
pushf
push
jmp
inc
fiaddl
stos
ss
or
pandn
sbb
jl
inc
stos
arpl
add
je
dec
call
xlat
imul
decb
je
jg
leave
cvtps2pd
mov
lods
pop
mov
sbb
into
xchg
es
ds
jo
test
scas
dec
je
test
mov
or
pop
jns
sti
mov
out
std
mov
cmpsl
aaa
sub
outsl
cltd
fists
adc
xchg
popf
mov
inc
push
mov
mov
mov
arpl
adc
popa
lock
clc
mov
jb
xchg
in
lds
mov
rorl
insb
out
int3
cmp
pop
fxrstor
adc
xor
call
bound
xorb
ret
cli
sbb
pop
xchg
and
xchg
pop
aad
xchg
and
scas
jge
lahf
push
cmpsl
loopne
or
loope
mov
jae
test
mov
jne
ret
jmp
add
or
mov
jecxz
adcl
cmp
pushf
sbb
cltd
mov
push
in
fcoms
rolb
out
lock
jae
xchg
enter
inc
lds
push
inc
jmp
shlb
out
mov
jmp
push
or
mov
xchg
aam
fsubrl
jp
push
mov
pop
pop
in
sahf
call
mov
clc
popa
inc
iret
xor
rorb
adc
xlat
pop
imul
rcr
and
ret
inc
imul
roll
imull
dec
adc
mov
mov
or
call
addr16
fs
cwtl
jmp
ret
test
dec
inc
lods
sub
pop
lock
pop
lock
or
aas
pop
mov
mov
jg
push
dec
xor
leave
loop
mov
outsb
jp
ds
pop
repz
or
outsl
call
enter
mov
add
cli
mov
mov
sahf
pop
sbb
mov
push
xor
hlt
jmp
fstpt
cmpsl
sbb
hlt
sarl
adc
fcoms
or
push
add
insl
xor
test
dec
aas
addb
ljmp
pop
push
dec
pop
or
dec
stos
pop
dec
hlt
shlb
pop
fdivl
out
scas
mov
cmc
adc
int3
fistpl
mov
fdiv
sarb
xchg
jno
fucomp
pop
mov
movsl
jmp
jl
cmp
mov
mov
mov
insl
fiadds
out
sub
jae
fstps
mov
shrb
adc
popf
xorl
and
xor
ret
xchg
stc
push
aaa
adc
inc
gs
push
cmovnp
sahf
repz
pop
cwtl
or
int
lret
inc
mov
insb
fmuls
push
shl
jge
jae
xor
mov
mov
sub
sbb
popa
add
test
xchg
out
lahf
mov
fdivrs
cmpsb
div
dec
test
stos
jmp
pop
push
es
dec
mov
jle
jl
fildll
dec
fdivl
jbe
scas
or
cs
jb
xchg
fmull
in
xor
pusha
sti
sahf
mov
xor
mov
shlb
dec
cmc
add
fiaddl
js
adc
outsb
jnp
mov
cmp
faddl
jl
mov
mov
add
call
iret
jae
jb
jo
mov
sbb
sub
js
push
and
sbb
aaa
fld
xchg
sbb
pop
lock
das
scas
stos
out
ss
stos
and
lahf
add
dec
mov
test
ss
idivb
clc
sbb
xor
fiadds
subb
mov
ljmp
sub
outsb
cs
or
inc
ja
stos
scas
push
out
mov
les
jp
dec
cmp
cmp
js
adc
sub
mov
stos
dec
pop
pop
gs
adc
push
sub
mov
fldl
cmpsl
cmp
or
or
pop
ficompl
sub
jle
cli
iret
mov
enter
in
cmp
cmp
mov
cmp
enter
stos
lret
stos
push
repz
arpl
push
lods
in
sbb
mov
add
cmpsb
push
aaa
or
or
dec
dec
dec
sub
add
daa
and
xchg
push
adc
pop
add
popa
jmp
jne
jp
cmp
sahf
sbb
lcall
mul
repz
add
std
mov
jge
mov
aas
adc
je
cmpsb
cmp
inc
jmp
sub
ljmp
mov
insl
xorb
lock
cli
fdivl
aaa
aad
shlb
inc
mov
mov
movsl
in
inc
fstpt
mov
aaa
or
sub
loopew
pop
fcompl
add
mov
cld
das
inc
insl
popf
bound
sbb
xchg
jecxz
dec
jo
or
push
lcall
cwtl
mov
mov
cwtl
pop
jbe
cmp
les
mov
mov
xlat
in
add
mov
and
stc
mov
dec
add
aad
scas
dec
aam
add
mov
hlt
lret
add
pop
sbb
pop
int3
jbe
test
ret
mov
or
or
stos
adc
std
addl
adc
mov
sub
dec
push
mov
je
sbb
popa
jmp
clc
loop
test
stc
push
int3
lods
jne
mov
das
stos
lock
outsl
jno,pt
or
sbb
adc
stc
out
test
push
push
rolb
cmpb
arpl
inc
aad
popa
cmp
fildl
mov
jno
inc
subl
xor
mov
and
cmpsb
cmpsb
mov
insl
inc
hlt
das
arpl
or
and
dec
lret
in
mov
fcmovbe
sbb
movsl
cld
or
jecxz
mov
ljmp
push
push
dec
jge
shlb
mov
repnz
idivl
mov
cmp
imul
mov
cli
fadds
test
sbb
jecxz
aas
std
mov
mov
mov
jno
add
push
mov
mov
or
adc
dec
shrl
add
sub
cli
in
lods
adc
loope
frstor
inc
ja
push
sti
subb
mov
lods
je
sbb
sub
mov
pop
dec
movsb
lods
shrb
push
aam
std
ret
lret
insb
mov
int
test
mov
scas
push
repnz
mov
xor
and
pop
out
mov
add
inc
movsb
les
push
cmc
push
mov
pop
pop
movsb
dec
in
mul
icebp
outsb
insl
push
inc
test
xchg
sub
loopne
mov
idivl
xor
test
pop
into
or
cmp
push
push
jge
movsb
xor
mov
fdivrp
xchg
and
ret
cmp
es
addr16
nop
test
push
mov
adc
lea
xchg
pop
dec
ss
ja
sub
or
test
cld
es
adc
test
push
ficompl
cmp
sub
cli
push
mov
xchg
mov
arpl
push
je
push
or
sub
pop
ret
lods
sbb
xchg
xchg
lea
imul
adc
insl
daa
adc
iret
mov
dec
mov
fimull
fcmovu
pop
in
sub
jp
mov
mov
sub
sub
inc
mov
xchg
clc
outsl
jbe
insl
call
push
or
pop
jmp
mov
cwtl
iret
nop
lahf
adc
push
mov
jo
xchg
pop
in
jnp
insl
popa
repz
add
pop
or
cli
bswap
and
mov
mov
ret
dec
fwait
iret
fs
leave
pusha
and
jle
pop
cmp
std
add
imul
mov
adc
xor
sub
stos
loope
lods
ja
sahf
bound
inc
xor
imul
mov
aaa
pop
iret
xchg
aaa
icebp
and
shlb
adc
xlat
jp
mov
scas
into
loop
int3
inc
mov
dec
mov
adc
sbb
inc
jbe
sbb
adcb
jo
ds
sbb
int
cmp
push
sti
dec
scas
lods
mov
cltd
add
jo
jns
mov
clc
je
jbe
xchg
add
dec
insb
mov
aad
insb
leave
push
mov
lret
jp
daa
aad
mov
loopne
cmp
lcall
mov
dec
hlt
repz
loopne
sbb
aam
in
jl
jb
jl
jnp
dec
xchg
js
int3
rcrb
aaa
push
lea
dec
jo
idiv
clc
aad
lcall
sub
mov
cli
inc
es
push
jnp
or
popa
repz
jbe
cmpsl
scas
ja
inc
ljmp
xor
jae
test
scas
push
sbbb
mov
jae
mov
out
outsl
movsl
testl
and
xchg
inc
aad
push
push
lods
cwtl
dec
cmpsl
test
shll
test
mov
add
testb
inc
inc
fldenv
fcmovnu
cmc
lds
and
adc
inc
std
les
jecxz
in
xor
loopne
aad
pop
sahf
sub
xchg
jmp
shl
mov
clc
shrb
sub
mov
push
sub
ljmp
pop
scas
pcmpeqd
or
mov
mov
or
jecxz
mov
loopne
ds
out
jecxz
movsl
cs
adc
paddb
dec
mov
push
mov
xchg
mov
dec
sbb
inc
xchg
pop
ret
or
pop
push
int3
out
sahf
xorb
cmp
lea
fdivrl
in
jge
mov
dec
cmp
push
daa
mov
fsubs
sbb
outsb
out
mov
sub
push
fs
mov
stos
add
mov
mov
sub
xor
add
add
stos
jnp
in
adc
sub
cmp
lea
jg
cmp
inc
ss
nop
cmp
fnstcw
ss
dec
jl
adc
cmpsl
addr16
add
mov
dec
xchg
sarb
loopne
stos
in
fcmove
fstpt
pop
pop
cs
ljmp
sub
jmp
lock
or
add
mov
xchg
aas
push
or
pinsrw
addr16
roll
add
ss
lahf
rclb
jmp
es
cmove
pop
in
mov
or
xor
add
adc
xlat
test
ss
sbb
loope
xchg
fcomi
or
xchg
cmp
or
jl
pop
in
pop
popa
sbb
push
push
aaa
jg
xchg
mov
mov
sbb
push
les
sub
and
sub
adc
sbbb
add
aas
xchg
incb
xor
cli
dec
faddl
mov
pop
imul
adcb
out
lds
aaa
daa
aaa
cmp
out
faddl
or
dec
dec
das
lds
dec
imul
out
adc
insb
dec
push
push
jge
int3
and
aad
push
mov
add
jecxz
btrl
or
outsb
mov
dec
jecxz
sbb
sbb
iret
jnp
adc
loope
bound
cs
pop
pop
stc
inc
jle
stos
rorl
cltd
call
movsl
sub
push
lret
xor
lea
outsb
call
sbb
ret
sbb
rorb
mov
ljmp
inc
lock
mull
and
fldenv
xor
push
push
gs
mov
test
dec
shrd
and
dec
xor
inc
and
mov
cmpsl
int
lcall
inc
mov
mov
mov
xchg
lret
and
ret
pop
arpl
daa
incb
pop
push
pop
xchg
insb
loope
bound
insb
aaa
xor
stc
dec
outsb
jb
outsl
decl
movsl
xchg
mov
popa
mov
and
mov
int
mov
xchg
sub
inc
sbb
out
insb
rcr
push
jle
add
stos
jo
jl
sbb
fisubrs
clc
loopne
xlat
mov
rcrb
aas
mov
jecxz
orl
mov
out
inc
sbbb
cmpl
aaa
sbb
mov
ret
cmc
jge
dec
mov
cmpsl
arpl
mov
sbb
mov
add
ja
psubsw
cmp
push
push
mov
add
inc
push
adc
daa
aad
lock
adc
add
jo
inc
popf
lcall
fisttpll
andb
fildl
shl
data16
xor
lcall
mov
pop
test
and
fnstcw
dec
pop
div
push
or
addr16
jle
imul
pop
inc
movsb
in
inc
dec
fidivrs
dec
hlt
jmp
dec
movb
adc
stc
inc
pop
cmp
jp
jo
cli
mov
andl
mov
jnp
mov
push
push
mov
mov
push
cmc
and
ret
mulb
pop
cmp
pop
jne
in
test
dec
cwtl
pop
inc
inc
mov
pop
pop
mov
aam
fisttpl
pop
mov
push
sbb
push
movsb
push
dec
stc
or
jno
stos
mov
insb
imul
mov
and
sub
ds
sbb
insb
xchg
pop
dec
pop
dec
xchg
cmp
mov
inc
or
out
inc
mov
jl
add
mov
rorb
xor
cmp
mov
sub
mov
shll
jb
loope
mov
mov
nop
dec
mov
hlt
mov
jmp
subb
or
pop
pop
xchg
mov
lds
pushl
imul
loopne
lods
pop
pushf
int
shl
repz
push
cld
push
inc
or
mov
ds
insb
push
lret
jno
adc
insb
jb
std
sbb
enter
jnp
mov
pop
add
sub
sub
sub
into
mov
scas
xchg
jns
pop
adc
fcomps
sbb
icebp
js
and
aad
jmp
es
hlt
mov
jecxz
jnp
inc
leave
pop
add
addl
xor
push
cmp
outsb
dec
xor
test
je
lea
add
push
xor
push
dec
sbb
loope
clc
icebp
xchg
xor
push
inc
inc
cmp
or
test
sahf
dec
push
movsl
push
cvtps2pi
popf
outsb
mov
int
scas
jne
or
adc
xchg
fwait
cmp
cmp
mov
or
mov
mov
or
hlt
sahf
imul
pop
in
jnp
std
push
ss
sbb
xchg
sub
rcl
or
pop
mov
push
jae
stc
push
mov
cmp
dec
int3
packsswb
lock
or
fs
push
stc
xchg
out
inc
hlt
frstor
push
popa
mov
cmp
or
pusha
xor
jmp
iret
les
push
dec
pusha
or
fbstp
xor
cs
fiaddl
or
push
sub
mov
jae
imul
push
push
in
mov
inc
mov
stc
mov
and
cmpsb
sub
and
leave
cmp
lock
outsb
mov
movsb
gs
push
push
sahf
or
test
dec
lods
xchg
in
sub
std
sub
push
lea
rolb
mov
fidivrs
jl
jmp
fldt
lret
lods
jle
pop
jnp
jmp
aad
pop
xor
aaa
sbb
mov
push
mov
inc
into
cmp
sbb
push
pop
cmp
or
shl
aas
out
add
xor
mov
push
sbb
mov
or
pop
add
and
push
mov
jl
lods
xchg
ror
sbb
and
cli
pop
sub
fisttpl
jp
cmp
mov
mov
das
mov
lcall
sbb
fdivrl
adc
jbe
adc
push
in
lods
jmp
xchg
scas
popa
cwtl
jns
ret
ja
test
cs
push
dec
fistpll
gs
lods
fwait
jnp
inc
stc
jno
mov
mov
daa
xchg
pop
adcb
out
lcall
mov
sahf
stos
test
aaa
insb
jmp
jne
dec
pop
and
push
sbb
inc
stos
roll
inc
inc
cltd
mov
fldl
jne
test
lds
and
xlat
jnp
ret
jae
cmpsb
idivb
aad
inc
ja
mov
js
icebp
icebp
lock
add
push
arpl
insl
test
inc
add
inc
xchg
hlt
push
cmpsl
or
dec
and
or
fs
lret
jno
dec
xor
or
mov
es
mov
mov
xchg
mov
push
mov
sbb
dec
adc
fwait
jnp
ljmp
inc
mov
rorb
pop
das
jecxz
mov
gs
shll
jl
out
lock
sub
add
scas
push
push
mov
rolb
int3
cmc
jg
dec
adc
std
push
mov
inc
mov
pop
fcoms
or
mov
pop
pop
insb
and
pop
pop
cmpsl
inc
xor
movsl
pop
inc
inc
arpl
pop
out
jecxz
jbe
xchg
pop
cmpl
cs
xor
fldl
sbb
jmp
sub
pop
add
std
dec
mov
ret
mov
sbb
xchg
sbb
rcrl
cwtl
movsl
dec
add
insl
stos
xchg
jo
sub
loope
adc
add
push
dec
or
mov
mov
outsl
inc
dec
mov
push
adc
push
je
mov
cmp
outsl
adc
cmp
xchg
and
lea
inc
xor
popf
pop
test
cmc
in
push
jno
push
xchg
add
cltd
mov
int
sub
fwait
add
andl
mov
rol
out
mov
jecxz
loope
adc
mov
fcomps
and
fcmovnbe
lock
fimull
push
mov
rolb
mov
scas
adc
addr16
mov
inc
or
add
cltd
gs
stos
sub
arpl
scas
cmp
dec
int3
xchg
push
pop
or
xor
mov
popa
sub
dec
pop
mov
out
test
adcl
xchg
insl
inc
mov
les
fsubrl
ljmp
push
sub
jge
in
lods
push
fmull
cmp
mov
lds
pop
js
pop
or
push
adc
add
testb
lcall
cmc
aam
mov
cmc
fisubrs
outsl
pushf
sbb
adc
cmc
arpl
cmp
push
and
sbb
jno
ret
xchg
daa
cmp
dec
xchg
fildll
pop
adc
lcall
std
jp
sub
sub
rclb
das
jge
cld
pop
mov
clc
lret
jo
xchg
loope
fnstenv
test
shrl
mov
inc
imul
mov
aad
inc
insl
pop
pop
jb
ja
fldl
insb
imul
nop
test
mov
pop
adc
mov
jno
lods
icebp
xor
sub
cwtl
daa
stos
mov
sub
out
cld
ret
decl
int3
mov
fiadds
mov
jns
pop
mov
push
ficoms
loope
or
jecxz
add
fcmovnb
inc
pop
leave
and
js
stos
iret
adc
push
mov
cmp
adc
adc
jbe
pop
sub
movsb
jle
or
arpl
aam
mov
sub
divl
lcall
sbb
lds
imul
pop
xor
mov
push
xchg
call
push
cs
dec
add
dec
in
xchg
xchg
hlt
popf
test
fisubl
ret
mov
lds
and
insb
mov
sbb
jae
sbb
aad
aaa
pop
fnstsw
jno
ss
ljmp
fdiv
mov
arpl
xor
mov
stos
push
jae
cld
push
jbe
repz
sub
sub
sbb
loopne
mov
xorb
mov
je
sub
lods
sarb
add
mov
fwait
push
add
cld
hlt
jno
mov
iret
mov
mov
es
push
mov
andps
sbb
outsl
ds
test
lock
xor
inc
lock
mov
int3
mov
cmp
jb
movswl
div
lahf
scas
and
pop
or
push
ror
adc
and
and
scas
sub
f2xm1
mov
and
fxch
cld
test
dec
inc
adcl
jecxz
mov
jg
cmp
clc
hlt
jns
in
xlat
jne
outsb
pushf
cld
cld
dec
insb
cmp
mov
push
mov
stc
push
cmp
mov
movsb
mov
loopne
push
fimull
mov
and
push
std
mov
push
mov
dec
test
jmp
shrb
imulb
cli
mov
pushf
or
ficomps
sub
inc
push
sbb
aad
call
sarb
lahf
jp
repnz
sbb
movsb
or
pop
jg
shl
jb
push
dec
out
imul
mov
cmp
shr
mov
lds
jno
dec
jno
mov
push
jmp
dec
xchg
ficompl
shll
scas
add
insb
inc
sbb
out
arpl
ds
enter
mov
imul
aad
jo
mov
or
jecxz
xchg
std
jle
fsubrl
loope
in
fwait
pop
push
mov
xchg
loope
xchg
pop
shll
dec
je
sub
inc
add
js
mov
jne
mov
lods
mov
inc
cmp
faddp
xlat
adc
mov
enter
test
add
and
arpl
mov
or
cmpl
data16
mov
cli
lret
cld
cs
dec
jno
into
inc
aad
rorl
mov
sub
out
mov
pusha
push
imul
mov
xor
and
mov
cmpl
fs
jp
loopne
add
scas
mov
sub
fs
pop
xchg
ss
movsb
cmpsb
mov
aad
push
mov
ja
inc
sub
mov
rorb
mov
dec
jg
fwait
inc
and
ss
comiss
sub
add
pop
shl
inc
stos
outsb
out
mov
pop
pop
xchg
mov
jnp
xchg
add
jae
pop
aad
les
mov
in
orb
xchg
sbb
mov
ljmp
xor
sbb
jne
sti
and
jle
mov
xchg
iret
dec
or
add
add
sbb
cltd
push
jge
scas
jae
mov
push
pop
xchg
jge
mov
test
jne
xchg
mov
cmp
leave
mov
jecxz
in
mov
inc
mov
dec
xchg
pop
outsl
fadds
pop
movlhps
movsb
lcall
cmpb
enter
out
mov
and
in
mov
out
push
pop
push
pop
cltd
lock
frstor
or
lea
test
cs
mov
cmp
mov
fwait
mov
dec
xor
adc
outsl
sti
add
gs
dec
inc
add
lahf
clc
mov
stos
mov
out
xchg
sahf
mov
js
call
or
jp
add
mov
bnd
jl
sub
mov
dec
jle
adc
jnp
pop
pusha
push
xor
jno
int
movsb
jmp
jne
jl
scas
into
add
subb
out
push
arpl
sbb
pop
adc
shll
cmp
push
jp
mov
and
lock
lock
mov
jo
or
lock
out
into
repnz
test
mov
mov
aam
sbb
add
inc
push
push
scas
sub
dec
data16
arpl
pop
repnz
jp
push
ja
xchg
shrl
adc
adc
adc
xchg
jl
sarl
push
clc
push
sub
xlat
test
push
push
dec
sbb
mov
dec
dec
aas
cmp
out
pop
cwtl
lahf
mov
repnz
jbe
in
out
loope
aam
insl
inc
dec
out
aas
xor
leave
daa
inc
leave
scas
outsl
fmuls
sub
mov
outsl
sub
mov
adcb
jg
jmp
mov
add
pop
and
imul
mov
mov
outsl
cmp
jmp
push
xlat
and
sbb
fldl
test
data16
mov
test
ljmp
scas
inc
inc
pop
sbb
fldt
sbb
subb
hlt
mov
cmpsb
andb
fsts
addb
cmp
and
dec
add
mov
sti
xchg
stos
frstor
jp
or
dec
push
mov
daa
or
sbb
mov
xchg
pop
sbb
jne
inc
in
daa
ds
jb
lahf
dec
cs
hlt
add
icebp
cmp
aas
ret
xchg
cmp
fimull
jmp
pop
mov
cmp
and
and
sbb
sub
mov
push
lret
outsb
and
push
outsl
rorb
dec
aaa
movmskps
mov
jecxz
scas
insl
cmp
add
jae
pop
push
sub
das
nop
stos
ret
mov
test
sbb
jl
xchg
out
ja
js
mov
xchg
arpl
inc
ja
loopne
repz
sbb
shrl
jp
mov
lcall
fadds
fisubl
mov
test
or
mov
test
inc
rclb
lret
loope
mov
rclb
pop
inc
sbb
push
loop
and
lret
and
movsb
leave
orb
jl
cmc
inc
cmpsb
fsubl
fldl
divl
in
xor
aaa
cmc
aam
add
xor
js
stc
dec
pushf
fadds
clc
add
cwtl
push
je
ss
adc
mov
fdiv
lock
push
aaa
lret
rorb
mov
xor
mov
movsl
jp,pt
shlb
repnz
adc
jmp
lret
ljmp
cs
fdivrl
cmpsb
scas
movsb
aad
aas
pop
adc
fwait
shlb
rol
pop
cmp
mov
fsub
js
out
in
outsl
and
mov
mov
leave
aam
sub
test
push
cmp
jl
mov
mov
aam
out
out
adc
int
push
sbb
lret
pop
jnp
xchg
cmp
mov
adc
mov
clc
ret
mov
sbb
sub
orl
sahf
test
ret
mov
leave
lds
inc
enter
or
xchg
clc
mov
test
pop
push
aad
js
xor
cltd
jbe
in
aaa
inc
add
sub
lock
je
pop
mov
xlat
sbb
call
fisttpl
scas
jnp
nop
xchg
mov
scas
ret
add
xchg
repnz
js
mov
sub
inc
lods
adc
pop
add
jge
rcl
int3
cmp
sbb
sbb
mov
pop
push
fdivrl
imul
jnp
jle
in
xlat
mov
jp
pop
test
push
mov
pop
cmp
mov
xor
cmp
xor
mov
es
lea
je
push
ljmp
sbb
imul
jp
outsl
js
cmpsl
jge
movsw
and
inc
mov
sbb
pop
cmp
and
rcr
xchg
arpl
icebp
pop
add
lret
dec
ja
xor
cmp
jecxz
xchg
push
sbb
lock
movsl
das
aam
push
push
adc
mov
sarl
mov
in
jnp
jae
pop
inc
in
rcll
es
xor
ret
pop
push
pop
add
mov
xchg
test
fcomp
push
inc
jb
and
xlat
sbb
shlb
call
incb
fucom
push
dec
add
imul
movsl
xor
xor
outsb
push
sti
iret
or
lock
mov
das
lcall
push
pop
clc
sbb
icebp
das
mov
vmwrite
xor
mov
pop
jbe
mov
mov
push
into
jg
inc
sbb
ret
xor
pop
rolb
dec
pop
nop
mov
xchg
shrl
test
mov
ljmp
out
loope
andl
xorb
lods
es
shl
in
pop
dec
pop
insb
lea
out
mov
push
fsubs
jns
pop
and
xor
push
cmp
xor
mov
push
aaa
push
mov
sarb
in
inc
add
leave
shl
out
idiv
push
mov
pop
pop
aas
rcl
and
ret
aad
ret
scas
dec
jge
lahf
test
shl
dec
xchg
daa
mov
mov
adc
cmp
mov
xlat
or
movl
jecxz
aam
sbb
lcall
jbe
jmp
fcmovnb
push
and
enter
into
pop
push
sub
in
ds
sbb
and
mov
sbb
cli
stc
test
insl
insb
sbb
out
cmp
xor
les
sbb
cli
daa
cmp
xlat
adc
xchg
xchg
jl,pt
and
rcl
nop
cmpsl
push
adc
mov
jbe
ja
orl
scas
or
ds
pop
adc
aas
or
movb
mov
scas
sbb
and
popa
mov
rorb
sbb
or
cs
mov
dec
imul
fdivrl
loope
xchg
movsb
iret
bound
sbb
xor
or
or
push
mov
adc
popf
mov
xchg
push
loope
ljmp
out
js
pop
in
mov
mov
xchg
mov
push
test
pop
push
mov
out
and
push
jnp
inc
fbld
fxch
sub
jmp
sbb
cmp
outsl
das
sbb
jns
arpl
in
dec
mov
mov
pop
sbb
inc
add
lea
xchg
idivl
jecxz
das
ljmp
push
loopne
mov
inc
aad
pop
push
inc
mov
jno
in
decb
jg
adc
movl
sarl
in
add
push
fmull
test
jl
mov
sbb
mov
rclb
push
mov
adc
insl
pop
push
pop
call
out
push
inc
or
xchg
jbe
outsl
sbb
les
aas
je
pop
cld
lea
xchg
shll
jecxz
jle
hlt
or
cltd
sub
mov
xchg
insl
cwtl
ds
stc
xor
jns
push
ljmp
add
ficoml
out
imul
pushf
pushf
push
adc
insb
mov
sub
dec
sub
push
and
ds
xchg
inc
xor
xlat
cmp
push
pop
inc
pop
adc
iret
lret
mov
mov
push
xchg
ja
inc
loop
call
mov
adc
mov
mov
rol
or
adc
or
and
push
mov
jne
fisubl
pop
inc
mov
push
push
xor
mov
adc
pop
push
mov
sti
enter
jecxz
sbb
push
cmpsb
sbb
jp
lods
stos
cmp
mov
out
negb
je
jge
rolb
add
loopne
jae
cmc
inc
push
adc
pop
outsb
cmp
out
push
fwait
or
xor
int
jo
inc
lahf
scas
cmp
es
xor
jnp
or
jl
dec
add
adc
jg
xchg
insb
out
clc
dec
and
outsl
xor
int3
stc
inc
sbb
jp
sub
stc
scas
jmp
sbb
mov
xchg
mov
jle
sbb
cltd
cmp
jns
hlt
or
dec
xchg
fldt
inc
leave
inc
outsb
out
aas
enter
ljmp
cmp
inc
or
jnp
inc
ret
notl
sbb
mov
stos
je
fwait
pop
adc
pop
std
popa
xlat
shl
test
mov
and
rcrb
jo
insb
push
test
fcompl
inc
jae
and
pop
or
and
add
subl
scas
andb
cli
xlat
push
rolb
xchg
pop
pop
jl
popa
out
cmp
mov
push
mov
loop
dec
adcb
sti
mov
jno
scas
cmp
pop
xor
lret
aas
xor
pop
sbb
or
mov
jmp
sbbb
mov
or
dec
outsl
cs
pop
mov
mov
mov
mov
test
idivl
das
lret
pop
fmuls
shl
cmc
aam
cmp
cmp
sub
sub
lcall
mov
inc
out
and
loop
push
out
mov
sarl
je
daa
mov
hlt
call
jno
test
jno
daa
pop
sbb
push
sub
adc
outsb
xlat
in
iret
pop
pop
mov
je
pop
push
imul
insl
push
outsb
jbe
mov
push
rcl
fsubl
insl
push
fcompl
pop
sbb
mov
fstps
pop
std
xchg
loope
pop
bswap
pop
pop
inc
dec
cmp
mov
fisttpl
les
loope
enter
lock
or
adc
sarb
clc
mov
or
in
pop
cmp
xlat
clc
dec
das
mov
dec
inc
aam
mov
sbbb
inc
test
shrl
inc
jp
jecxz
inc
arpl
outsb
scas
in
test
xchg
stc
insl
ds
sub
sbb
push
pop
sbb
jno
xchg
aam
push
fld
cwtl
sub
repnz
sub
sbb
adc
sub
push
push
inc
cmp
out
mov
push
es
out
and
shl
inc
xor
mov
push
mov
ds
les
fadds
mov
data16
mov
fsts
movsl
scas
pop
adc
movsl
jae
mov
fwait
aas
incl
insl
popa
aaa
sbb
sbb
lret
in
mov
bound
repnz
sbb
loopne
sub
adc
fsubl
add
mov
xchg
push
pop
sub
dec
and
add
cmp
lds
addr16
cs
cmpsl
arpl
sub
fmull
mov
ja
or
push
jo
push
add
lods
xchg
pop
mov
jno
fcoml
rcl
cmp
enter
in
mov
jae
push
xor
and
sbb
sub
sbb
gs
mov
xchg
sbb
out
jne
inc
sbb
or
adc
ljmp
ja
pusha
push
sbb
mov
loopne
fsubrl
outsl
push
mov
call
fsubl
adc
orl
int
adcb
add
dec
std
test
orl
jge
add
mul
fistl
into
addb
lret
sti
insl
mov
ret
push
fdivr
fcmovb
push
cmp
inc
rorl
mov
sbb
aaa
fimull
addr16
cmpsb
cmpb
sub
je,pt
jo
push
outsl
xchg
adc
mov
fldl
push
pop
mov
in
cmp
push
sub
cmp
add
mov
lret
ja
cmp
test
fistl
inc
adc
push
roll
out
fldl
xorb
addl
in
add
pop
cmp
adc
add
cli
pop
sub
loope
adc
lcall
mov
or
jo
test
test
pop
adc
jbe
dec
xchg
ja
dec
and
and
inc
imul
sbbb
sahf
adc
rcll
push
cmp
pusha
mov
repz
push
jno
add
shrl
cmp
or
rcrl
xor
call
je
outsl
fst
call
mov
push
jne
add
mov
std
inc
jnp
leave
insl
loope
sub
jmp
mov
adc
xor
test
adc
jle
dec
xchg
mov
stos
pop
shrb
int
pop
out
cmp
xor
inc
inc
push
shll
fdivl
push
or
xor
pop
jge
ds
mov
pop
movb
or
popa
repnz
dec
push
scas
xchg
mov
or
loopne
ret
cld
cmp
add
sbb
ret
dec
pop
push
aam
call
add
insb
dec
fistps
inc
ja
xchg
bound
andl
mov
aaa
mov
addr16
popf
push
and
xorb
pop
inc
xor
inc
pop
jl
sti
lods
xchg
int
ds
rcrb
jmp
lds
and
scas
sub
shll
clc
cmpsb
add
push
ja
in
pop
int3
jo
cmp
divl
mov
mov
int
ss
ret
aas
add
push
mov
push
cmp
mov
push
cmpb
mov
scas
fs
sbb
push
movsb
xor
pop
jmp
rolb
or
je
ljmp
and
es
mov
ss
dec
imul
add
sub
scas
lock
lock
cvtps2pi
pop
nop
fdivl
add
mov
and
xor
xor
das
mov
mov
shrb
aaa
inc
loopne
sub
sti
or
fsubrs
cmpsb
das
shrl
adc
fdivs
sbb
add
push
icebp
jae
clc
cmp
or
xchg
loope
push
inc
mov
pop
loop
cmp
jns
pop
pop
fwait
js
popf
gs
cmpsb
stc
add
mov
jecxz
xchg
test
mov
pop
movsb
aas
out
adc
push
or
pop
setg
test
movsb
loop
push
es
or
fistl
fsub
andb
arpl
cmpsb
sbb
into
mov
fwait
xor
repz
mov
lds
leave
bound
aas
mov
jne
int
push
inc
stc
mov
mov
pushf
sub
mov
inc
inc
out
inc
inc
or
lea
addr16
pop
mov
inc
jg
inc
pop
jb
insb
out
cwtl
mov
call
jnp
add
mov
push
inc
push
and
inc
leave
pop
mov
or
testb
inc
adc
mov
popf
xor
xor
imul
sbb
add
ja
mov
push
or
das
inc
and
mul
test
xchg
dec
push
sbb
js
movsl
sbb
out
stos
test
mov
rcll
mov
jge
push
pop
testb
mov
cmpsl
pop
fistl
in
clc
push
fs
jae
mov
lfence
or
lahf
dec
sbb
shlb
adc
pop
mov
xor
sub
jmp
pop
inc
into
adc
incl
in
jmp
adc
test
inc
cmp
loop
into
les
loop
mov
mov
sbb
mov
cmp
aas
lahf
mov
fisubl
test
jmp
orb
test
rep
xchg
sti
mov
xchg
inc
in
dec
js
fcmovu
jb
jge
aaa
pop
mov
add
adc
mov
jbe
fistpl
dec
pop
leave
hlt
das
dec
jl
lcall
cmp
mov
mov
push
lock
pop
out
cli
jg
das
push
mov
pusha
mov
or
mov
adc
mov
sbb
adc
jp
scas
pop
cmp
mov
cmp
ret
test
xor
lahf
scas
cwtl
mov
aam
push
das
popa
test
mov
jo
add
rolb
hlt
jmp
sbb
gs
shlb
scas
xor
subb
fs
jmp
xor
nop
pushf
ljmp
aad
cmpsl
and
out
adc
out
jge
ret
mov
sub
gs
fs
ss
mov
sbb
sbb
dec
andb
xor
inc
adc
jmp
xchg
aaa
dec
call
mov
fstpl
dec
jg
fdivr
inc
pop
cmp
or
xor
out
arpl
out
mov
inc
xchg
cmp
pop
add
jl
ret
fnstcw
mov
ds
lahf
cmp
dec
push
xor
into
jle
fwait
cmp
mov
cs
xchg
mov
bound
ret
scas
sbb
stos
jne,pn
adc
or
cltd
fdivs
repnz
push
adc
mov
repz
adc
jmp
bswap
jge
dec
dec
subb
inc
and
frstor
mov
fucom
mov
outsb
cwtl
mov
mov
bswap
xor
rcll
mov
inc
sub
sahf
lcall
jno
xchg
mov
xchg
lea
mov
sbb
fdivl
bound
addl
pop
mov
or
in
sub
inc
fwait
sbb
pop
and
aam
jns
ret
rolb
imul
out
out
push
jge
test
mov
fmuls
in
outsl
and
inc
xchg
jp
test
cmc
mov
mov
aad
mov
lret
je
jge
insl
test
push
jg,pn
mov
push
mov
inc
sti
stos
adc
subb
std
add
xchg
dec
xchg
add
and
stos
test
add
sbb
sub
sub
or
dec
loope
inc
push
into
mov
mov
std
jbe
stos
icebp
icebp
sub
pop
sub
push
or
orb
fildl
cmpsl
sub
mov
scas
test
clc
loopne
lret
adc
xchg
pop
test
cmp
sbb
shrb
sub
jb
mov
jbe
aam
mov
add
jne
pop
out
sbb
fcomi
bnd
or
jecxz
inc
lcall
ret
popa
stc
mov
into
mov
adc
xor
in
jle
mov
arpl
push
add
pop
mov
loopne
push
pop
pop
adc
mov
push
ja
rclb
xor
imul
cmp
shl
leave
rorb
mov
ljmp
mov
inc
aad
push
test
mov
xchg
and
mov
push
or
push
lcall
cltd
test
mov
cmpsb
xchg
repz
sub
ret
xlat
out
and
xchg
call
lea
pushl
rcl
pop
xchg
cs
add
test
sub
mov
ret
xor
aad
push
add
iret
pop
fdivs
inc
ds
push
sub
ret
scas
pop
or
outsb
lock
mov
adc
push
mov
inc
dec
call
lods
jmp
and
cmp
fwait
sub
loopne
inc
mov
aad
dec
mov
dec
orb
sbb
sahf
mov
out
clc
sub
fsubs
out
mov
add
into
mov
incb
loope
ja
inc
aad
out
adc
sbb
xchg
mov
incl
in
adc
cmp
xchg
mov
into
add
mov
and
pop
push
out
xchg
push
divl
test
into
adc
out
ds
mov
adc
mov
aaa
jne
cmp
bound
cs
lods
xor
ljmp
xor
push
pop
xor
sahf
clc
je
lret
mov
cli
into
push
mov
jmp
mov
xchg
leave
inc
iret
cltd
mov
hlt
sub
pop
add
jnp
roll
aad
inc
inc
pop
lods
inc
mov
aad
aaa
ss
shrl
ljmp
mov
test
leave
subb
push
sti
jns
ss
sbb
push
fs
mov
insb
sub
clc
jbe
mov
push
movsl
push
loope
cmp
jae
aad
add
push
dec
or
sahf
sbb
mov
push
in
xchg
mov
sub
cmp
jg
add
adc
repz
or
sub
icebp
or
xlat
jae
sbb
inc
mov
add
dec
jle
sbb
lea
pusha
push
mull
sub
dec
mov
aad
iret
ja
pop
mov
loope
rolb
inc
popf
movsl
or
cmp
out
into
std
mov
mov
mov
js
push
cmp
hlt
mov
rol
das
dec
outsl
cmp
jne
sbb
lods
outsl
mov
clc
fiaddl
es
add
je
sbb
or
call
call
fucom
jle
xor
sbbl
push
mov
push
mov
sub
popa
or
dec
sub
jle
inc
clc
lods
mov
inc
adc
lahf
mov
sub
adc
inc
adc
icebp
add
daa
mov
xchg
test
mov
jbe
dec
or
orl
jp
sub
mov
imul
ja
push
or
popa
stos
into
pop
das
jns
fidivl
cmp
repz
mov
mov
mov
cmpsb
loopne
icebp
gs
addr16
stos
pop
scas
inc
arpl
lods
sub
loopne
or
lock
int
jl
jp
js
aam
test
sbb
lcall
lods
lea
xchg
adc
add
ss
cmc
jmp
pop
jb
sub
cli
and
push
out
pop
iret
push
popf
jae
adc
mov
mov
dec
into
adc
and
pushf
leave
sub
enter
inc
lock
sti
clc
into
mov
and
add
das
adc
cwtl
push
pop
dec
xchg
xor
stos
xor
cmp
jle
data16
mov
lock
adc
push
out
repz
in
pop
ss
ja
pop
push
seta
mov
push
xchg
test
aaa
insb
nopl
test
loopne
ds
push
popf
pop
clc
dec
das
aaa
mov
inc
pop
xor
shrl
pushf
xor
mov
jle
xlat
lcall
aas
sahf
dec
clc
shlb
pusha
mov
packsswb
pop
and
aas
cmp
imul
add
aaa
sbb
popa
pop
mov
fdivs
push
fcmovnbe
popa
jp
mov
mov
xchg
movsb
cmp
pop
cmp
sub
mov
mov
imul
pushf
ret
adc
stos
sarl
mov
mov
sbb
jmp
addr16
cmp
aaa
mov
lods
or
lods
mov
ss
mov
das
cmp
jmp
mov
jl
adc
cmp
mov
sbb
mov
jnp
dec
out
lock
add
push
mov
sub
leave
cmp
jnp
xlat
mov
mov
call
aam
push
inc
jne
lods
xor
push
cli
jmp
cli
mov
sub
test
mov
xchg
loopne
es
mov
mov
mov
sbb
icebp
hlt
inc
xor
lock
pop
push
inc
fcoml
dec
daa
dec
add
fadd
or
mov
les
scas
test
sub
or
inc
rorb
mov
in
xor
adc
pop
push
mov
pop
les
scas
aad
jge
mov
mov
sbb
ss
in
pop
mov
das
xchg
lahf
sub
cmp
ljmp
cmpsb
stos
cmpsl
in
dec
jg
mov
outsb
inc
pop
dec
fnstsw
mov
xchg
cmpsb
shrl
pop
sbb
pushfw
push
adc
mov
inc
mov
lret
repz
sbb
adc
iret
mov
cli
hlt
fadd
sti
sbb
jb
pop
rcll
jge
dec
inc
pop
nop
inc
sbb
or
sbb
adc
push
or
lock
mov
fidivrl
adc
adc
cwtl
or
inc
fisubl
push
push
mov
stos
out
and
push
inc
sbb
and
xor
sub
add
cmpsb
loope
jo
call
frstor
mov
pop
mov
inc
outsb
push
repz
call
dec
adc
inc
cmpsl
fdivrs
push
push
repnz
repnz
sbb
lods
mov
iret
mov
loop
mov
mov
popf
adc
filds
cli
shlb
outsb
push
cs
fwait
out
push
dec
setno
xchg
dec
push
adc
pop
push
push
fwait
or
mov
repz
sub
popa
mov
je
push
shll
loopne
std
mov
push
mov
mov
pop
adc
pushf
outsl
mov
es
insb
cmc
popa
sub
bound
and
adc
adc
ja
push
test
cmp
je
mov
shll
pusha
out
pop
jne
out
shll
xor
je
dec
mov
rcr
mov
add
popf
dec
mov
mov
sub
test
cmp
push
xor
sti
mov
mov
test
add
pop
jne
in
cmp
lcall
sub
ss
hlt
dec
arpl
inc
fmul
aaa
mov
xor
movsl
test
mov
adc
aas
lds
fisttpl
lahf
out
lret
mov
push
or
inc
lods
loope
movsl
dec
pop
dec
sub
ja
nop
jb
sbb
jg
fisttpll
cmc
out
movsb
cmp
sahf
bound
xchg
mov
stc
add
sbb
aas
cld
addb
test
fnsave
mov
data16
ret
mov
and
test
jns
xchg
inc
add
jne
ficomps
cmp
or
or
mov
inc
js
popf
es
mov
outsl
das
aaa
mov
pop
outsl
push
mov
xor
mov
lahf
test
pop
push
inc
inc
pop
fadd
adc
xchg
repnz
push
add
notl
inc
mov
pop
pop
cmovg
pop
pop
mov
push
adc
in
popa
cmp
pusha
mov
in
cmp
pop
outsb
popa
notb
fstl
mov
lods
dec
push
ja
mov
movsb
xchg
mov
pop
mov
insl
sysexit
aaa
inc
mov
add
mov
outsb
mov
insl
lret
sti
rorb
addl
jns
insl
push
mov
lods
or
std
aam
repnz
es
call
sti
xchg
jnp
xor
stc
lds
sbb
lret
test
jge
or
repz
repz
cli
jmp
mov
and
inc
sub
xlat
mov
or
jae
fdivr
adc
fisttps
or
fwait
mov
outsb
testl
inc
aam
andl
push
lock
push
iret
hlt
out
fstpl
dec
push
jecxz
adcb
pop
push
pop
cmp
jne
sbb
cmp
add
jmp
stos
sti
das
jbe
daa
xor
in
mov
mov
sbbb
fwait
rcll
std
aam
lret
xchg
mov
push
aas
in
cmpsb
adc
cmp
sub
incl
and
or
in
add
jp
js
cmp
xchg
ficoml
jg
xchg
cmpsl
popf
and
mov
subb
mov
fistl
and
fs
pop
jle
and
mov
mov
out
je
mov
lcall
vmaxpd
loopne
arpl
sbb
mov
jecxz
and
pop
mov
pop
popl
adc
jl
sti
popf
inc
add
in
lock
ficoml
popa
not
mov
adc
push
mov
icebp
add
sti
faddl
pop
test
add
pop
lcall
sti
bound
or
push
xlat
hlt
push
out
cmc
adc
push
je
ds
pop
mov
rcr
loopne
jo
addr16
leave
sbb
mov
movsb
jae
loopne
lock
or
push
mov
lds
jns
sub
clc
and
fimull
dec
mov
or
std
movsb
lods
aas
lcall
jecxz
push
xchg
stos
add
jle
pop
pop
push
imul
sbb
movsb
scas
mov
insb
loop
pop
dec
cmpsl
xlat
popa
xlat
lock
push
push
lods
xor
insl
roll
mov
repnz
fwait
add
jnp
inc
xchg
jmp
lcall
jne
outsb
test
lods
data16
pushf
xlat
cmp
lahf
popa
std
mov
jecxz
mov
and
jbe
jae
jbe
ja
shlb
adc
mov
lret
stos
mov
scas
xchg
icebp
pmaddwd
lret
xchg
nop
cltd
rclb
sti
ljmp
dec
flds
mov
mov
mov
lods
push
mov
jge
jge
movl
jge
imul
add
inc
dec
es
mov
lds
sub
scas
sbb
cmp
dec
or
pop
loop
test
cld
cmpsb
jne
insb
cmp
fndisi(8087
faddl
int3
pop
gs
insl
ficompl
xchg
mov
mov
ret
pop
adc
mov
lock
mov
stos
dec
shl
int
sahf
pop
add
jnp
and
into
sbb
jnp
push
sbb
ja
daa
mov
pop
dec
daa
cmovs
sbb
repnz
push
fwait
je
xchg
inc
inc
rcll
push
gs
mov
div
inc
lods
dec
pop
adc
out
cmp
ss
and
cmp
jne
loop
push
mov
aam
jg
mov
sub
scas
divb
pop
scas
loope
sbb
mov
and
pusha
sbb
ds
loop
jns
jmp
fldl
sbb
xchg
ret
sub
cmp
cmpsl
pop
adc
xor
loope
rcr
mov
and
adc
adc
daa
add
ds
ficompl
jle
mov
aam
aam
sbb
mov
mov
adcb
jle
outsl
loope,pn
dec
mov
imul
push
stos
xorl
mov
repz
ss
xorb
sbb
or
fwait
cmp
jae
mov
add
adc
lock
fstps
mov
push
ljmp
dec
je
adc
in
push
imul
or
or
sarb
mov
jmp
add
jb
add
jecxz
push
fwait
ror
mov
js
cmpsb
xor
jmp
shrl
ret
shl
arpl
mov
test
jecxz
dec
pop
adc
das
je
mov
rolb
adc
lock
xorl
in
std
inc
insl
rcl
adc
stos
inc
xor
cmp
rcll
fstpl
sti
jmp
sub
xchg
inc
ss
out
sahf
cwtl
sbb
and
push
mov
cld
pusha
aas
and
int
mov
aaa
icebp
mov
int3
xchg
push
push
fsubl
movups
mov
loop
mov
mov
roll
hlt
jmp
lods
scas
push
out
or
xor
adc
jecxz
subb
sbb
push
jo
add
pop
cmp
fdivr
aam
je
add
and
cli
imul
ret
jmp
pop
adc
cli
ret
rorb
aas
int3
loopne
leave
lock
sbb
sub
mov
pushf
add
sub
xor
inc
rorl
scas
arpl
cli
cwtl
xchg
push
push
jge
xor
push
push
cwtl
xchg
inc
pusha
jecxz
cmp
cmp
fists
fwait
dec
push
outsb
cli
mov
mov
sti
es
mov
ja
lcall
std
dec
insl
mov
js
in
inc
lret
xor
or
data16
sbb
out
fwait
mov
push
mov
test
xchg
je
insb
leave
les
lock
add
mov
mov
lods
xor
int
mov
inc
or
mov
mov
in
push
adc
cmp
ljmp
xchg
or
sbb
cltd
frstor
xchg
sahf
arpl
inc
mov
bound
scas
jnp
iret
mov
mov
mov
add
test
hlt
movl
jb
inc
xor
mov
jbe
movsl
shr
jmp
fidivl
ljmp
mov
xor
sarb
lcall
je
adc
aam
movsl
pop
lret
mov
mov
addr16
push
je
add
mov
sbb
xorb
or
cmp
dec
jg
mov
jae
inc
cmp
or
push
int
jmp
push
movsl
outsb
inc
arpl
sbb
lock
rcrl
cwtl
add
jle
stos
scas
test
rorb
mov
jmp
xchg
sbbb
mov
shrb
pop
push
mov
sahf
jmp
hlt
mov
dec
inc
sahf
ss
scas
loopne
dec
frstor
pop
call
xchg
test
jae
xchg
scas
rcll
sahf
insl
adc
xchg
loope
std
lds
pushf
pop
add
cs
inc
loope
std
sbb
xchg
in
mov
scas
pop
pushf
in
ret
pop
xorb
mov
mov
xchg
das
repnz
add
jl
mov
push
xchg
out
sub
shlb
pusha
push
in
add
ds
cli
call
push
repnz
mov
xor
js
pop
insl
jle
push
push
add
in
push
data16
mov
fsub
test
cmc
addr16
jne
fs
xor
call
inc
leave
xlat
pop
aad
aad
mov
pop
mov
daa
cmp
cltd
test
jle
pop
stc
mov
lahf
arpl
ffreep
fdivl
pop
loop
xchg
pop
mov
jo
dec
lods
lahf
mov
mov
ljmp
push
popa
xor
xlat
push
insb
push
stos
jecxz
das
insb
dec
dec
cmp
mov
scas
clc
cwtl
jp
ss
jge
jle
xor
ljmp
adc
xchg
sbb
mov
jl
ret
sbb
je
inc
cld
orl
jl
add
and
je
dec
lret
ljmp
cmc
sub
shrl
adc
pop
je,pt
add
mov
jl
lods
into
inc
lahf
movb
mov
pop
cmp
rcl
mov
test
pop
outsb
mov
mov
popa
cli
stc
mov
popf
push
leave
pop
mov
inc
rcll
lahf
sahf
iret
jge
push
jo
scas
inc
mov
cmp
andl
sub
daa
push
cld
shrb
mov
dec
loopne
mov
out
scas
or
cmp
push
push
int3
lret
fidivs
mov
shll
insl
popf
lods
test
adc
lea
mov
xchg
out
iret
into
insb
push
push
insl
ss
mov
push
push
mov
aaa
shlb
inc
mov
add
fcoml
push
xchg
mov
dec
and
adc
stos
mov
aas
xchg
jmp
lahf
mov
jg
data16
jmp
imul
pop
add
add
out
push
ss
and
xchg
aam
xlat
pop
scas
cmpsl
int3
in
cmovnp
xorl
push
and
cmpsl
push
movsb
pop
cmp
int
mov
gs
nop
mov
sarb
je
xor
jg
mov
adc
cmpsb
xor
push
outsb
sti
mov
outsl
lea
ljmp
testb
lock
mov
pop
lock
leave
pushf
or
test
ret
pop
dec
or
nop
loopne
sahf
cmp
or
xor
nop
push
insl
dec
sahf
fsubrs
aaa
cmp
or
imul
popf
imul
faddl
jbe
mov
jno
jl
xlat
pusha
jo
adc
cmp
xsaveopt
aam
stos
sbbb
and
add
sbb
and
rcrb
shrl
jmp
je
pop
test
cs
or
aam
dec
add
add
aaa
mov
pushf
aas
sbb
add
inc
adc
and
fdivs
mov
xlat
call
lock
in
fsubr
popa
xchg
push
push
jmp
mov
test
outsb
clc
cmpb
aas
leave
cmp
cmp
xor
inc
sahf
scas
call
sbb
add
das
repz
or
pop
outsl
xchg
stos
fsubr
data16
add
clc
mov
dec
xchg
inc
lcall
clc
shr
sbb
fst
or
inc
mov
mov
mov
sarl
mov
pushf
mov
sar
or
aam
insl
call
xchg
cld
push
jbe
xchg
aam
cmpsl
out
imul
enter
dec
add
adc
loop
mov
out
cmpsl
mov
fidivl
les
and
inc
jbe
pop
sahf
ljmp
sub
or
push
scas
pop
push
jl
lods
jl
lea
jno
call
testl
jg
push
sub
adc
pop
outsb
cmp
repz
add
mov
pop
pop
dec
adc
mov
les
jns
jo
fisubrl
push
pop
sbb
in
cmpsb
je
xchg
cs
scas
fmuls
push
mov
sbb
mov
jne
inc
scas
mov
or
mov
lret
icebp
loope
push
lret
imull
add
adc
rcrb
in
push
add
divb
aaa
inc
mov
jge
and
xchg
loop
loopne
shll
mov
fwait
mov
popl
mov
mov
popf
mov
dec
jle
cmc
jno
movsb
in
lea
fcomps
push
mov
push
cmpl
pop
fmull
push
mov
icebp
adcl
lahf
daa
sahf
jle
push
scas
daa
das
sahf
push
inc
sbb
nop
imul
or
mov
mov
sar
cmp
dec
test
aaa
add
iret
mov
adc
xchg
pop
daa
int3
mov
out
sbb
inc
mov
cmp
inc
add
fwait
and
outsl
popf
xor
popf
xchg
add
ficompl
pop
inc
ljmp
add
lods
add
and
push
adc
or
push
out
push
js
shrl
lcall
pop
jl
mov
jne
adc
mov
stos
aas
adc
cmp
filds
xchg
sti
loopne
daa
adc
push
loopne
push
divb
push
pop
ja
pop
mov
add
aaa
int3
cmp
test
sbb
cmp
cmp
das
pop
adc
shlb
je
mov
push
cmp
pop
mov
fistps
fnstsw
cmpsl
out
aas
jae
icebp
mov
jl
jb
rcrb
out
cmp
jno
movsl
cmp
outsl
and
mov
xchg
outsl
loope
mov
sbb
mov
sbb
pop
xchg
adc
outsb
loope
rcl
sbb
mov
mov
pop
xor
push
mov
fsubrl
cmp
hlt
inc
or
es
aaa
int
in
outsl
cmp
add
shl
rolb
mov
std
call
aas
xchg
xchg
and
jle
or
xchg
jmp
xlat
loope
cmp
lcall
stc
or
loope
dec
arpl
gs
movsb
inc
pop
dec
inc
dec
arpl
sbb
fs
iret
push
push
sbb
sbb
stos
sbb
addr16
ficoms
ret
pop
cltd
adc
aaa
inc
or
inc
int3
mov
icebp
popa
into
cltd
and
push
fistl
xlat
pushf
jo
clc
pop
addb
idivl
pop
or
test
pop
fisubs
test
outsl
int3
lret
pop
jl
ret
and
movsb
cmp
in
clc
mov
mov
pop
jnp
or
ds
rorb
cld
jbe
pop
sti
push
mov
stos
dec
push
fbld
cmp
lods
mov
aas
pusha
lret
scas
adc
xor
xor
es
pop
notl
aas
pop
iret
enter
add
sbb
xor
cmc
rcrb
fcoms
hlt
jne
xchg
daa
mov
mov
xchg
inc
mov
ret
sahf
and
mov
pop
test
xor
sti
rolb
dec
fstl
arpl
push
push
hlt
jmp
mov
negl
dec
push
out
inc
push
pop
mov
arpl
shl
xchg
mov
inc
mov
mov
xor
pop
pop
sahf
sbb
pop
adc
sbb
imul
jno
push
sbb
ljmp
sbb
jo
push
add
lods
outsb
mov
sbb
jne
ljmp
in
mov
ja
inc
ror
inc
es
in
aam
shrl
scas
xchg
fsubrs
mov
gs
shrl
scas
scas
clc
pop
sbb
icebp
push
ja
mov
mov
pop
cmp
ret
and
adc
divl
clc
fs
push
xlat
loope
cmp
and
adc
or
pop
push
push
sbb
sub
push
inc
popf
and
out
adc
cmp
xor
or
add
push
rorl
jecxz
mov
mov
xchg
hlt
sub
hlt
fcmovbe
in
pop
sub
rcrl
ljmp
icebp
adc
aad
inc
subl
adc
or
imul
mov
xchg
movsb
popa
push
out
inc
addr16
adc
push
push
cmp
je
push
cmpsb
dec
and
mov
mov
cli
popf
ds
inc
movsb
sbb
cmp
jno
push
fucom
mov
and
aas
jo
out
or
jae
cld
or
imul
jb
stos
jmp
push
add
pop
int3
neg
xor
sub
stos
mov
pop
divb
addb
sub
mov
inc
loopne
xchg
dec
aas
ret
je
and
adc
shrl
popf
cmp
fildll
call
and
sbb
cmp
roll
add
call
cmp
cli
scas
js
dec
pop
mulb
nop
jb
fistpll
pop
push
je
mov
addl
sbb
ljmp
in
mov
iret
icebp
mov
imul
fs
rcll
cmpb
xor
pushl
mov
jge
jge
subb
inc
out
or
insl
mov
rcrl
jbe
lret
and
adc
sbb
loope
jns
iret
sub
pop
cwtl
cli
sbb
test
mov
mov
dec
cli
daa
jmp
adcl
out
imul
xchg
js
mov
in
xor
sbb
ljmp
dec
fdivrl
push
or
push
cli
fidivl
inc
call
and
or
mov
push
icebp
sub
and
add
cmp
push
out
sub
pop
dec
cmpb
and
mov
stos
push
jns
je
sub
outsl
mov
mov
push
scas
push
lea
ret
xor
aad
inc
push
sbb
lcall
cmpsb
mov
cltd
fcmovnb
xchg
ror
test
or
lea
cmpsb
xchg
dec
mov
out
or
cmc
jg
mov
data16
inc
xor
movsl
mov
or
add
mov
sbb
hlt
adc
cs
jne
mov
jecxz
push
hlt
inc
jl
inc
push
divl
sbb
or
mov
push
add
jbe
mov
pushf
test
cmpsl
ljmp
xchg
or
clc
sarl
mov
pop
fisubs
fnstenv
xchg
sub
scas
mov
fcoml
cmp
dec
push
cmp
fdivrs
mov
adc
xlat
xchg
mov
or
xchg
sub
push
jecxz
jecxz
mov
idivl
pop
mov
cmc
fs
shr
or
popf
pop
dec
in
js
movsl
push
xor
out
xchg
mov
xlat
sbb
mov
add
hlt
xchg
jmp
add
mov
jb
xchg
aas
aas
add
leave
insb
pop
daa
cmpsl
inc
add
inc
outsl
shlb
mov
pop
mov
idiv
fidivl
cwtl
sub
cwtl
fwait
push
insb
cwtl
pop
fucomi
dec
lahf
push
dec
fnstsw
mov
mov
icebp
mov
ja
push
aad
leave
and
inc
cs
out
mov
ds
sbb
cs
sbb
mov
mov
lods
mov
into
sbbb
sbb
ds
lods
ljmp
das
das
es
jbe
cmpsb
pand
fmul
stc
and
push
cmc
pop
lahf
lds
jo
dec
xchg
setle
pop
cltd
leave
inc
jne
in
cmpsb
cmpsl
jbe
lods
dec
movsb
call
push
insb
mov
sub
push
call
xchg
js
mov
cmp
aas
mov
and
daa
mov
push
leave
inc
scas
rol
lea
push
out
outsb
and
xor
stos
sub
push
sbb
or
in
test
cmpsb
push
fisttpll
arpl
es
jmp
call
scas
sub
aam
push
imul
xlat
mov
and
sbb
call
push
out
xchg
lods
sti
pop
lods
scas
push
push
rclb
add
lret
inc
jbe
add
lea
lock
jmp
mov
ficompl
cmp
negl
xchg
in
mov
xchg
out
mov
mov
adc
push
dec
xchg
imul
pop
add
jp
test
mov
push
aas
push
aad
pop
dec
sbb
mov
rcll
js
stos
cmp
sbb
cmp
mov
test
cmovbe
pop
bnd
sub
std
xlat
adc
push
sbb
in
cltd
lcall
inc
mov
pop
fistpll
lcall
xchg
jbe
pusha
inc
rcrl
addr16
mov
push
test
xor
insb
std
mov
loopne
jg
mov
jno
mov
push
cmp
imul
mov
les
jmp
and
in
pop
fstpl
sbb
loope
cli
mov
or
xchg
dec
cmpsb
outsb
outsl
jg
int
pop
lret
aam
lea
jnp
inc
les
mov
push
adc
mov
shl
sub
jne
cmc
push
hlt
sbb
fistpll
xchg
pop
adc
pop
ret
cmp
pop
and
inc
mov
jno
adc
sbb
xor
jp
jge
fcmovnb
divb
mov
cmp
movl
fistl
mov
jmp
jl
les
stos
jge
out
mov
add
icebp
and
jge
aas
dec
mov
sti
cmc
mov
aam
ss
inc
mov
clc
shl
mov
dec
das
and
out
ss
push
enter
leave
stos
movsl
pop
mov
and
sbb
adc
add
mov
mov
inc
mov
dec
movsl
movsl
jge
mov
nop
cld
xchg
vrsqrtss
pop
test
add
pop
fildl
pop
and
cmpsl
mov
xor
add
aas
arpl
dec
fwait
jnp
leave
lds
bndstx
cwtl
lahf
mov
cwtl
xor
cmp
dec
inc
xchg
ja
or
out
popw
sub
nop
add
pcmpeqb
push
mov
jno
gs
call
mov
movsb
loop
insl
pop
out
nop
fimull
dec
int
or
push
out
pop
icebp
push
test
sub
mov
jo
and
cli
jge
jb
add
push
mov
pop
add
push
sub
xor
movl
sub
andb
xor
add
xor
ret
push
jmp
fldenv
xor
adc
sti
xchg
xor
fmuls
stos
sbb
cmp
push
lods
mov
inc
sub
aas
jne
inc
ret
ud1
addl
jmp
rolb
ja
aam
insl
hlt
push
push
shrb
stos
fdivrp
mov
outsl
add
mov
inc
sbb
xlat
popf
cmpsb
mov
clc
mov
push
rorl
enter
in
xor
std
add
add
and
mov
mov
and
loop
pop
jmp
les
and
pop
dec
scas
leave
push
outsl
cmc
adc
mov
mov
pop
push
pop
push
lret
ret
lods
jnp
mov
dec
cmpsl
jmp
inc
pop
shll
shl
xchg
in
dec
mov
mov
mov
out
xor
jbe
dec
fbstp
mov
sti
or
testl
cmpl
push
rep
mov
xor
sbb
leave
push
or
inc
ret
not
pop
xchg
into
push
xchg
testb
add
cwtl
stos
mov
jl
gs
xchg
or
subl
xor
pop
push
push
hlt
sbb
jno
xor
fcmovne
mov
fcoml
dec
or
xchg
mov
scas
push
movsb
push
mov
shr
pop
jne
push
mov
adc
lret
shll
scas
out
aad
sti
adc
sbb
push
sbb
mov
mov
xchg
adc
mov
adc
enter
mov
imul
sub
loopne
pusha
pop
aaa
mov
mov
shr
neg
and
hlt
hlt
pop
lcall
push
fdivs
or
divb
inc
push
add
ljmp
and
icebp
not
lods
test
cltd
repz
jge
jp
dec
fists
inc
in
stos
aad
test
dec
nop
mov
ds
fsubp
mov
mov
cmp
and
sarb
adc
mov
loope
xchg
adc
mov
lea
mov
mov
test
inc
outsl
int3
into
and
jnp
mov
dec
cwtl
mov
rorl
sbb
mov
and
jg
cmpb
push
sbb
movsb
mov
rcll
pop
jae
inc
mov
jecxz
gs
jae
xor
adc
add
pop
push
push
cli
loopne
xor
inc
pop
or
insl
cmpxchg
cmpsl
lock
aad
jmp
add
xchg
and
es
cmp
lock
push
push
dec
daa
mov
xchg
filds
push
les
push
cmp
aad
cwtl
xchg
sbb
lea
mov
sti
insl
push
aaa
push
inc
rorb
in
sub
mulb
repz
aad
sub
rclb
addb
cmc
cmpsb
cmpsb
mov
adc
jae
or
inc
inc
push
mov
pop
jo
cmp
or
inc
inc
in
jnp
mov
cmp
fstps
push
fisubrl
stos
jo
arpl
mov
lahf
lods
pop
adc
jg
lea
and
pop
inc
ja
int3
divb
push
aad
jg
int3
xor
cmc
lock
push
mov
int
mov
cwtl
pop
stc
jmp
inc
lds
mov
test
mov
adc
xchg
jmp
fnstsw
lret
adc
xor
aaa
popf
sub
call
ljmp
aaa
lock
cmpsl
adc
cmp
sub
js
outsb
fdivrl
stos
ret
xchg
push
dec
hlt
sti
fmuls
xchg
shrl
pushf
or
hlt
pop
mov
int3
xchg
iret
outsb
mov
fidivrs
mov
lods
xlat
jge
or
mov
dec
adc
mov
fadds
jecxz
in
loop
aad
div
push
repnz
cmp
pop
or
add
xchg
pop
lcall
andps
mov
pop
add
sbb
inc
aaa
sub
push
jo
jb
addr16
enter
fadd
xor
mov
xchg
test
adc
cmp
sbb
imul
mov
or
imul
sub
in
jp
mov
inc
mov
dec
lock
out
sti
push
popf
or
dec
push
adc
mov
pop
test
repnz
outsl
inc
jle
lret
mov
push
fmull
scas
push
jno
or
loopne
pop
popa
sub
xor
pop
insl
ffree
fdivrs
out
sarl
xchg
imul
add
rcll
stos
test
ftst
or
mov
pop
clc
xorb
and
mov
jmp
mov
cmp
mov
rcr
mov
push
pop
inc
cmp
movsl
adc
dec
mov
or
pop
andb
mov
cmpsb
mov
daa
orb
push
addr16
mov
push
ror
aaa
mov
hlt
fidivl
add
daa
jecxz
pop
pop
aad
cmpsl
aam
stos
sti
in
push
xlat
ja
or
xor
ss
loopne
je
std
push
push
inc
pop
pop
xor
xor
mov
test
mov
aas
add
bound
loopne
mov
add
mov
pop
insb
pop
mov
sub
rcrb
jne
jb
ss
aaa
jge
inc
sbb
fisubl
lahf
test
push
nopl
mov
pop
jmp
jle
sbbl
push
aad
adc
inc
and
inc
rcrb
fidivrs
add
jb
inc
push
dec
inc
aam
stos
rcl
int
xor
adc
in
cmpsl
in
push
mov
loope
fdivl
adc
fdivrl
xor
into
mov
push
pop
sbb
sar
pop
mov
jae
cmpl
inc
push
xchg
sbb
rcrl
dec
mov
lods
sti
aam
lock
cltd
dec
fidivrl
lret
or
aam
jg
lds
sbb
lods
mov
popf
lock
not
or
xlat
sbb
pop
out
jge
out
movsl
andb
or
popf
mov
test
mov
insl
mov
jg
inc
je
test
mov
mov
mov
cmp
cwtl
shrd
inc
das
mov
aam
stos
push
adc
jmp
mov
pop
jnp
stos
lock
xlat
dec
aam
push
mov
icebp
ja
xor
cld
sahf
mov
movsl
jmp
add
inc
add
imull
push
and
add
mov
ja
fs
cmc
add
add
inc
in
outsb
pop
aad
inc
mov
add
pop
call
mov
and
sbb
das
sbb
xchg
pop
mov
stc
push
lahf
shlb
stos
orl
add
daa
je
jg
in
sub
mov
sub
mov
sahf
ret
push
mov
mov
cs
in
mov
push
add
aas
ljmp
call
imulb
ds
add
cmpl
add
xor
es
mov
fldt
adc
inc
mov
push
cmp
xchg
xchg
and
ljmp
mov
iret
imul
call
inc
and
inc
into
rcrl
and
mov
push
inc
lret
into
jo
fcmovnb
cli
push
dec
scas
fcompl
or
sbb
jle
mov
test
call
pushf
adc
mov
shll
adc
inc
shl
cmpsb
inc
std
rorb
mov
push
cmp
cltd
push
das
mov
cli
clc
pushf
leave
clc
shrb
nop
pop
das
dec
jg
mov
outsl
cld
test
fldl
andl
adc
out
loope
outsb
aad
je
leave
jb
in
cltd
loop
inc
icebp
stos
aam
inc
mov
mov
mov
dec
stos
lods
lock
jmp
clc
andl
call
sbb
loopne
dec
rclb
xorb
sbb
and
loope
xchg
pop
test
or
jmp
pop
mov
mov
inc
movsb
push
ss
xor
push
sub
scas
inc
mov
xchg
mov
scas
push
sbb
jbe
inc
and
jno
push
adc
xchg
mov
fildll
in
pop
push
xchg
leave
xchg
ja
test
xchg
loopne
push
pop
jecxz
leave
push
cmp
sub
js
sbb
shll
dec
or
std
mov
push
cmp
les
cmpsl
dec
aas
js
push
inc
test
inc
clc
add
and
jl
fildl
xchg
jecxz
sarl
out
orl
xlat
jbe
icebp
cmpl
lods
adc
cltd
popa
cmpsl
jae
jg
int
cmpsb
mov
fcmovnbe
cmp
push
mov
mov
push
mov
dec
pop
int
int
xor
hlt
aad
pop
mov
sbb
addr16
and
cmp
add
cmpsl
mov
out
daa
call
in
outsb
cli
dec
xchg
sub
adc
xchg
jle
pop
call
xchg
out
adc
je
cli
shrb
cltd
ret
mov
jmp
jle
add
loopne
int3
push
pop
jo
lret
cmp
dec
pop
mov
mov
insb
push
or
ja
push
roll
jecxz
inc
sbb
dec
pop
outsb
lea
cmc
sub
imul
stc
adc
mov
outsb
aas
insb
pusha
repnz
push
add
push
aam
add
mov
adc
fildll
inc
je
aam
lret
lret
xchg
insl
inc
mov
cmc
push
add
subb
fistpl
or
leave
hlt
andl
add
or
mov
notl
jne
sbb
xor
lret
aam
shlb
sub
into
aad
inc
sbb
pop
add
ljmp
sbb
aam
mov
push
test
or
clc
popf
and
pop
sti
ret
clc
mov
nop
out
cmp
out
arpl
inc
mov
rcll
jmp
pop
add
dec
and
inc
in
cmp
push
mov
andb
mov
xchg
mov
es
les
loopne,pt
fdiv
adc
adc
fdiv
test
cld
cmpsl
inc
stos
scas
sbbl
mov
inc
test
sub
push
cmp
mov
icebp
adc
mov
iret
cld
xor
add
sub
xor
adc
fdivrs
les
andb
add
faddp
not
push
andb
test
adc
lea
add
imul
dec
xchg
jb
lcall
ds
dec
xor
add
cmp
mov
divl
icebp
mov
jp
aas
xor
push
sbb
mov
xlat
aam
test
push
adc
sbb
rorb
mov
je
jne
cmpsl
xchg
lret
ja
lods
lret
test
out
sub
lcall
jge
mov
mov
adc
popf
add
adc
push
out
inc
cmc
mov
in
into
loopne
jmp
orl
loopne
jae
out
mov
xor
sbb
inc
mulb
aas
xor
das
xor
and
push
and
add
bound
outsb
push
inc
mov
insb
inc
xchg
inc
out
inc
jge
mov
pop
push
add
add
int3
xor
pop
icebp
jnp
arpl
add
stos
mov
jns
scas
or
inc
sti
les
dec
mov
mov
sahf
mov
sbb
add
outsl
test
xor
dec
loopne
mov
and
xchg
mov
add
adc
repz
add
jg
pop
pop
je
orl
xor
mov
sub
xor
mov
repz
gs
cmp
cmpsl
inc
pop
jno
push
pop
fdivrl
jne
lods
pop
mov
mov
mov
or
xor
hlt
fwait
scas
out
je
ret
xor
or
mov
dec
movsb
mov
dec
sub
cmp
push
jae
mov
or
clc
insl
js
pop
rclb
xor
cmp
cmp
bound
stc
shll
scas
outsb
popf
add
dec
or
outsl
insl
jne
je
imul
mov
cmp
clc
cmc
aam
mov
or
mov
jne
sahf
xor
mov
mov
sub
mov
push
call
divl
ljmp
inc
ds
xchg
aaa
scas
pop
mov
into
fwait
testl
stos
lcall
sbb
xchg
and
or
push
push
mov
jg
mov
dec
and
mov
and
ret
or
lods
xchg
mov
dec
adc
jg
stos
shlb
lock
sub
jne
loopne
out
stos
xor
cmp
push
push
add
sub
inc
fwait
lcall
repz
pop
add
sbb
push
cli
cmpsb
stos
xchg
mov
decl
xor
stos
dec
ror
lret
sbb
push
stos
dec
xor
fnstcw
hlt
ds
or
test
push
cmp
fcmovnbe
pop
jbe
jb
sbb
pop
push
sbb
push
add
push
cmpsb
pop
dec
outsl
or
sbb
mov
cmp
sub
add
xchg
fisttpl
stos
mov
xor
sahf
addr16
lcall
xchg
mov
mov
pop
adc
pop
mov
xchg
bound
add
test
and
leave
sub
fwait
inc
adc
push
fwait
insl
jnp
icebp
mov
bound
cmp
insb
out
mov
imul
push
ret
xlat
lds
decl
out
dec
loopne
stos
ret
mov
mov
shlb
jnp
push
jae
shrl
mov
push
push
sbb
pop
clc
loopne
mov
aam
or
jbe
rcpps
lock
inc
sbb
sbb
mov
insb
pop
loopne
and
push
pusha
inc
xchg
loopne
hlt
aaa
fmull
inc
mov
and
pop
xchg
ficoml
fdivr
lods
mov
mov
nop
mov
add
mov
loope
cmpsl
sti
inc
inc
enter
pop
inc
mov
sub
clc
idivb
sub
dec
movsl
cmp
jle
mov
jb
adc
les
stos
rorb
fs
xor
cmp
in
aas
cmc
pop
inc
jnp
mov
enter
fwait
push
add
pusha
or
mov
xor
aam
add
jno
lea
fdivs
scas
push
mov
sbb
pop
test
lods
add
add
loop
nop
inc
out
xlat
add
pop
sarb
movsb
cmpsb
fucomi
and
aaa
mov
dec
dec
scas
out
xor
and
lret
or
mov
mov
inc
in
jae
cld
sbb
sbb
int3
inc
and
jle
loop
add
mov
dec
dec
pop
sbb
jb
aam
pop
mov
push
jo
cmp
push
lcall
movsb
sahf
pop
outsb
pop
imul
outsb
mov
rorl
test
arpl
sub
push
inc
std
sbbb
and
mov
sbb
sbb
mov
rolb
jmp
push
xchg
scas
jno
lods
jl
fwait
mov
inc
or
insl
pop
dec
pop
jg
pop
dec
jmp
push
in
or
inc
ret
shll
sub
add
push
push
jge
jmp
shrb
sub
imul
dec
xchg
dec
push
ret
fnstsw
fisubrl
hlt
adc
and
imul
adc
or
and
scas
fsubr
xor
xchg
pop
shlb
adc
pop
jp,pt
cmp
fistpll
push
cmc
push
or
fsubrs
xor
andl
es
ror
jecxz
call
insl
jne
ret
test
in
cwtl
pop
popf
je,pt
push
inc
add
ss
dec
cmp
dec
mov
insl
pop
imul
sub
subb
out
inc
inc
ljmp
call
fadd
hlt
mov
xor
add
sub
shll
lock
js
sbb
mov
pop
xor
jne
pop
xchg
and
cwtl
xchg
lcall
insb
in
je
imul
movl
pop
outsl
test
mov
outsl
fcoml
sub
movsb
jle
push
jl
lock
pop
sbb
clc
pop
or
pop
rcll
mov
cltd
jb
mov
and
mov
js
mov
popa
outsl
mov
adc
or
cmpb
sbb
xlat
pop
sbb
and
sub
fisubrl
jge
add
popf
nop
and
loope
repz
popa
push
push
hlt
hlt
inc
adc
outsb
sbb
jbe
sub
add
sub
mov
sbb
or
cmp
cmpb
mov
out
sbb
push
mov
xchg
pop
dec
adc
fisubrl
lods
ret
jp
imul
ds
test
adc
add
ljmp
clc
cwtl
enter
xchg
ja
cmc
sub
and
add
pop
sahf
filds
imul
adc
jg
aad
cwtl
sbb
leave
jnp
sahf
adc
inc
fcmovnb
mov
imul
movsb
jns
push
mov
mov
cmpsb
pop
xorl
jp
repz
inc
sbb
out
arpl
pusha
shl
sub
cmp
js
cmpl
data16
and
xor
fsubr
ficompl
sbb
lds
lds
fimull
jp
mov
push
mov
and
ljmp
int3
orl
dec
aas
imul
mov
out
pop
or
dec
jg
ss
cmp
jbe
push
mov
pop
pop
test
ret
in
orb
push
mov
movsl
addb
lds
in
sub
mov
nop
and
lret
cmc
sub
inc
das
jno
mov
add
pop
push
sbb
mov
push
push
ret
adc
shlb
jge
mov
in
clc
cmp
addl
mov
rcl
and
cs
sbb
pop
lea
call
inc
shr
xchg
rorb
popf
iret
add
add
push
add
xor
out
adc
dec
pop
jnp
lcall
iret
aaa
adc
adc
adc
push
popf
sbb
scas
in
in
sbb
mov
minps
or
xorl
add
dec
pop
fldl2e
sub
outsb
cs
or
test
sbb
fnstenv
adc
ret
xor
jnp
and
pop
inc
cs
pop
repnz
add
filds
sub
gs
in
dec
mov
sbb
push
adcl
mov
pop
addr16
jo
test
out
inc
imul
mov
sbb
jno
xchg
scas
in
and
js
les
das
jns
unpcklps
xchg
mov
adc
mov
xchg
inc
mov
xchg
mov
sbb
arpl
in
test
mov
mov
adc
jnp
cmpsl
sbb
stos
das
add
stos
pop
scas
jb
pop
andb
pop
and
inc
sahf
in
rorl
jns
pop
add
hlt
lds
test
scas
movups
sbb
sahf
lock
mov
iret
or
and
jae
dec
sahf
mov
fisubs
jns
lret
fbstp
pusha
loope
mov
testb
loopne
xor
cmpsl
in
mov
mov
lock
jb
das
in
add
xor
testl
inc
fwait
clc
mov
repnz
add
dec
or
pop
or
gs
jnp
fimuls
outsl
rcrl
or
push
repnz
push
sbb
xchg
sbb
or
sahf
pop
and
xor
sub
sub
sub
enter
sahf
das
cmp
xor
aas
sub
cmp
adc
or
pop
in
inc
or
sti
inc
pop
pop
imul
xor
inc
or
imul
adc
orl
dec
or
pop
cs
das
dec
pop
fldcw
inc
push
adc
pop
pop
jb
lods
pop
add
fcompl
pop
add
insb
sub
test
pop
inc
outsl
repnz
test
movlps
push
jecxz
jg
pop
std
jbe
xchg
dec
push
imulb
mov
in
mov
xorb
push
sub
pop
stc
mov
add
lea
adc
gs
pop
xchg
xchg
cmp
mov
cmp
xchg
pop
adc
sahf
mov
adc
or
lods
adc
in
leave
or
mov
mov
pop
bnd
mov
mov
jne
leave
sub
fstpt
addr16
in
popa
mov
fs
repnz
add
into
add
sarb
shrl
aam
aad
mov
adc
pop
in
lret
adc
fldenv
repz
fsubl
or
insb
ja
inc
loopne
pop
inc
loop
push
mov
pop
ljmp
jnp
out
xchg
out
pop
jmp
inc
jb
das
jge
mov
mov
pop
int
add
popf
hlt
add
cmc
dec
repnz
add
pusha
sti
add
cld
mov
aaa
inc
inc
add
inc
xchg
add
popa
iret
jbe
dec
adc
pop
mov
pop
sub
andps
dec
outsb
pop
roll
mov
sbb
push
nop
add
xchg
adc
insl
movsl
pop
pop
inc
sbb
or
nop
insl
flds
sbb
fsts
jecxz
push
and
pop
fxch
cvttps2pi
repnz
fldt
das
lret
outsb
dec
pop
jl
cld
xor
pop
ss
in
nop
pop
leave
xchg
adc
aaa
jnp
inc
outsl
cmp
or
sub
pop
push
cmp
inc
inc
adc
jnp
inc
inc
push
inc
or
pminub
and
cs
pop
inc
pop
mov
jnp
dec
push
stc
dec
xor
pop
ds
ficoms
in
push
add
mov
pop
dec
dec
pop
add
pop
dec
dec
repnz
imul
add
enter
movsb
imul
aaa
pop
mov
add
push
jbe
ja
in
pop
cltd
jns
loopne
add
das
pusha
addl
test
aad
gs
je
jge
mov
sbb
cld
in
test
outsl
rcll
xchg
adc
bsr
scas
movsb
mov
jbe
adc
mov
jb
inc
cmpsb
aaa
shrl
pushf
bts
pop
cmp
popf
mov
mov
ss
inc
rcrl
sub
inc
fwait
add
xchg
mov
hlt
pop
lret
leave
jecxz
mov
add
pop
mov
jecxz
push
xor
repnz
adc
das
nop
andl
jae
adc
add
insb
jae
mov
outsb
inc
bound
js
inc
insb
insb
outsl
arpl
sub
inc
adc
outsl
sbb
push
imul
cmp
gs
inc
inc
fs
sti
fdivs
cmovge
jne
dec
popa
outsb
fs
mov
fs
push
outsb
imul
insb
outsb
sti
rcrl
xor
sahf
adc
fisubrl
shll
push
outsl
stos
inc
enter
das
push
inc
add
dec
add
add
pop
inc
sub
jae
aas
loopne
popl
add
fiadds
cwtl
adc
imulb
sbb
push
xor
add
add
leave
pusha
cmp
xor
or
mov
das
test
mov
sub
add
add
fs
jl
dec
inc
inc
jecxz
pop
jg
fwait
mov
push
sub
aam
pop
sub
sahf
cmp
inc
push
push
cmp
add
pop
dec
daa
imul
dec
lcall
popf
cmp
add
js
xor
jb
mov
mov
daa
xor
dec
dec
rcrl
test
add
add
add
or
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
