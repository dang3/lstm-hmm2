jmp
mov
jmp
mov
jmp
mov
aaa
cmp
xor
xor
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
lea
push
call
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
lea
push
lea
push
call
lea
push
lea
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
lea
push
lea
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
lea
push
lea
push
call
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
call
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
movl
mov
mov
mov
push
mov
push
call
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
call
mov
pop
ret
add
xor
ss
cmp
add
xor
cmp
xor
cmp
add
add
cmp
xor
xor
xor
add
xor
xor
xor
xor
xor
in
add
mov
mov
cmp
js
mov
mov
mov
lea
dec
dec
inc
lea
mov
mov
lea
xchg
inc
inc
inc
xchg
mov
lea
mov
dec
mov
cmp
je
call
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
mov
xor
divl
test
jne
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
jne
mov
mov
lea
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
cmp
je
jmp
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
mov
cmp
je
call
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
mov
sub
mov
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
push
mov
mov
xor
call
mov
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
jne
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
push
mov
mov
xor
call
mov
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
mov
mov
cmp
js
mov
mov
mov
lea
dec
dec
inc
lea
mov
mov
lea
xchg
inc
inc
inc
xchg
mov
lea
mov
dec
mov
mov
push
add
jmp
mov
mov
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
lea
mov
push
mov
jmp
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
mov
sub
add
add
mov
cmp
js
mov
mov
mov
lea
dec
dec
inc
lea
mov
mov
lea
xchg
inc
inc
inc
xchg
mov
lea
mov
dec
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
jne
mov
mov
lea
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
movl
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
mov
pop
ret
nop
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
sarl
pop
push
cmp
jnp
push
pop
test
push
pop
outsl
cmp
cltd
cmp
mov
cmp
mov
push
pop
mov
jns
pop
sahf
pop
out
add
mov
pop
pop
sahf
pop
out
add
mov
pop
out
add
mov
pop
out
add
ret
jns
pop
sahf
pop
out
add
mov
jns
pop
sahf
pop
out
add
mov
jns
pop
sahf
pop
out
add
scas
jns
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
pop
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
addr16
pop
pop
fstpl
push
addr16
pop
pop
fstpl
pop
sub
mov
lock
xchg
addr16
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
addr16
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
pop
lahf
pop
out
sub
mov
out
lahf
xchg
addr16
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
addr16
pop
push
cmp
pop
pop
pop
mov
sub
mov
addr16
pop
sub
mov
pop
and
mov
addr16
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
addr16
pop
mov
pop
lahf
pop
repnz
mov
addr16
pop
mov
pop
sub
mov
pop
lahf
cltd
and
pop
sub
mov
addr16
pop
mov
and
pop
sub
mov
addr16
pop
and
xchg
and
pop
sub
mov
pop
and
mov
addr16
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
pop
sub
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
push
call
mov
movl
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
jne
mov
mov
lea
mov
mov
mov
mov
call
mov
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
movl
mov
mov
call
mov
cmpl
je
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
mov
mov
call
mov
cmpl
je
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
lea
push
push
mov
sub
push
mov
push
call
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
mov
cmp
je
mov
subb
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
xor
add
mov
xor
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
incl
mov
cmp
jne
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
mov
call
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
mov
push
mov
push
call
cmpl
je
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
cmp
js
mov
mov
mov
lea
dec
dec
inc
lea
mov
mov
lea
xchg
inc
inc
inc
xchg
mov
lea
mov
dec
push
mov
pushl
xchg
push
jmp
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
js
mov
mov
mov
lea
dec
dec
inc
lea
mov
mov
lea
xchg
inc
inc
inc
xchg
mov
lea
mov
dec
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
js
mov
mov
mov
lea
dec
dec
inc
lea
mov
mov
lea
xchg
inc
inc
inc
xchg
mov
lea
mov
dec
cmpb
jne
movb
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
push
call
mov
mov
mov
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
jmp
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
jne
mov
mov
lea
mov
mov
movb
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
mov
mov
pop
ret
add
add
jo
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
call
test
jne
mov
jmp
movw
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
call
lea
mov
pop
ret
mov
push
mov
add
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
call
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
lea
push
lea
push
call
call
call
call
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
lea
push
lea
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
call
lea
push
lea
push
call
lea
push
lea
push
call
call
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
jne
mov
mov
lea
mov
mov
push
call
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
call
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
lea
push
lea
push
call
call
call
call
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
lea
cmp
jno
lea
dec
mov
inc
dec
dec
xchg
mov
mov
mov
lea
mov
mov
mov
mov
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jne
cmp
jae
mov
mov
mov
mov
dec
lea
mov
mov
dec
dec
dec
mov
lea
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
mov
mov
mov
xchg
xchg
mov
dec
dec
jmp
mov
xchg
jmp
lea
mov
mov
inc
inc
inc
lea
lea
push
lea
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
call
lea
push
lea
push
call
lea
push
lea
push
call
call
call
cmp
jl
mov
xchg
xchg
mov
dec
jmp
mov
lea
mov
lea
mov
mov
lea
mov
mov
pop
ret
xor
xor
add
add
cmp
xor
xor
xor
add
add
xor
xor
xor
add
xor
xor
add
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
cmp
jo
mov
xchg
xchg
mov
lea
inc
dec
lea
mov
xchg
mov
xchg
mov
mov
mov
inc
lea
push
lea
push
call
call
movl
mov
mov
mov
push
mov
push
call
lea
push
lea
push
call
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
lea
push
lea
push
call
movl
mov
mov
mov
push
mov
push
call
call
mov
pop
ret
add
xor
cmp
xor
cmp
aaa
add
xor
xor
xor
aaa
add
cmp
xor
xor
aaa
xor
sub
add
mov
cmp
ja
mov
xchg
xchg
lea
mov
lea
xchg
mov
inc
mov
mov
xchg
lea
mov
inc
mov
mov
lea
call
mov
mov
cmp
jle
xchg
lea
lea
lea
mov
lea
mov
mov
mov
mov
inc
mov
mov
inc
ret
mov
ret
lea
push
and
xor
add
ljmp
mov
sahf
ljmp
add
cmp
inc
sub
add
outsl
add
dec
insl
mov
add
es
je
lahf
leave
clc
add
add
sub
mov
adc
nop
add
pop
add
dec
cli
sub
add
pop
sbb
insl
cmpl
mov
add
add
ja
add
cwtl
andb
jbe
push
insl
or
lods
add
stos
adc
dec
in
out
cmp
add
push
push
add
mov
xchg
inc
mov
movsb
mov
add
test
or
inc
sti
outsb
push
dec
cmc
add
test
jno
adc
push
pop
add
and
andl
leave
add
inc
ds
push
sbb
ja
add
clc
jne
rolb
inc
xchg
add
int
add
mull
add
xchg
inc
lcall
add
add
imul
pop
and
push
sub
add
mov
aas
add
add
add
sbb
dec
cmp
cmpsb
mov
dec
add
pushf
dec
push
pop
add
adc
aam
enter
add
sbb
insb
cmp
addl
add
inc
add
dec
sub
inc
stos
out
add
add
add
cmp
cmp
add
add
data16
out
add
push
mov
test
loope
dec
lods
rolb
add
add
ja
cs
cmp
popf
cwtl
mov
cmp
dec
je
int3
hlt
push
ret
std
in
clc
xchg
inc
push
jl
fsubrs
movl
iret
add
into
fs
add
add
adc
fwait
sbbb
fdivrl
add
jb
inc
jmp
pop
add
add
add
cmp
jecxz
hlt
pushf
sub
dec
jnp
repnz
add
add
shrl
add
sub
mov
or
push
sbb
lods
jns
mov
inc
add
mov
dec
adc
add
sub
push
sahf
loope
add
add
jecxz
into
mov
std
mov
or
dec
add
jmp
daa
add
mov
add
lock
fwait
add
loopne
add
mov
mov
add
es
cmpsl
lcall
xchg
sbb
pushf
add
inc
aam
test
dec
fs
aaa
add
dec
das
test
std
jo
shlb
test
pop
fiaddl
bound
cmpsl
shrb
mov
das
jbe
add
sbb
dec
and
jg
mov
fiadds
loope
adc
dec
mov
pop
stos
push
addr16
cli
xchg
xor
add
mov
cwtl
add
xlat
add
add
inc
inc
pslld
or
add
in
add
add
cwtl
or
pop
xchg
shll
fnstenv
inc
and
xchg
inc
push
pop
add
add
js
sarb
add
in
add
sbb
add
lods
add
iret
add
lock
fadd
push
add
add
mov
xchg
xor
fsubl
pop
pop
jae
movntq
add
cltd
stc
jb
test
push
sub
inc
add
les
mov
add
add
add
jmp
fistpll
sldt
adc
rolb
sub
mov
inc
repnz
add
add
flds
add
add
test
or
mov
sub
xchg
fists
adc
gs
hlt
lret
movsl
mov
add
sub
xchg
lods
fisubrl
xchg
sub
adc
xor
mov
pop
scas
scas
inc
inc
shrb
jae
push
cmovbe
test
or
les
xchg
add
xchg
in
push
in
imul
stos
jge
pop
mov
clc
mov
das
add
hlt
sub
cltd
arpl
pop
call
jge
mov
sbb
pop
aaa
mov
dec
or
or
add
sti
int3
mov
dec
push
insl
jo
test
or
scas
mov
and
lea
movsb
stos
cmpsb
add
push
movsl
xchg
enter
daa
pop
cmc
sbb
lret
jno
or
sbbb
fstl
lret
andb
mov
lahf
push
dec
notb
dec
ja
sub
pop
push
ficoms
inc
sub
movsb
mov
xor
cmpsb
mov
inc
mov
loope
push
iret
sub
shl
cmp
outsb
jno
dec
adc
mov
jns
cld
sbb
mov
xor
addb
or
mov
sbb
xorl
lcall
lock
sti
mov
sahf
loope
xchg
test
test
jg
mov
mov
div
and
jno
inc
jo
cmp
xlat
in
adcb
pop
pop
outsl
shrl
adc
fs
pop
into
inc
dec
push
cmc
adc
je
outsl
pop
outsl
loop
imul
fiadds
loop
inc
movsl
subb
popf
or
ds
pushf
cli
divb
int3
cmp
fmull
popf
lahf
je
xor
xor
cmp
stc
pop
mov
orb
leave
stos
lods
adc
push
dec
add
or
sbb
in
arpl
adcb
sub
mov
leave
jmp
jl
ljmp
nop
xor
dec
arpl
inc
pop
push
cmp
lret
xlat
fistpll
addr16
pop
fwait
inc
sti
lea
mov
pop
pop
inc
int3
rcll
fsubr
pushf
mov
cmpsl
inc
pop
sub
inc
popf
xlat
icebp
inc
cmp
cs
or
dec
jo
je
fninit
cmpsb
jmp
div
mov
mov
mov
das
mov
in
scas
mov
lods
ret
push
pop
dec
jg
cs
inc
pop
mov
xor
push
lcall
mov
and
cli
mov
les
cmp
fnstenv
cmpsl
pop
cmc
mov
arpl
dec
icebp
jmp
mov
lret
xchg
mov
mov
mov
sbbl
inc
sub
mov
aaa
push
push
push
imul
dec
clc
rcl
in
xchg
mov
push
cmp
popa
lret
imul
mov
mov
push
lcall
inc
mov
cltd
cmp
nop
mov
mov
mov
fcmovbe
test
fmuls
push
push
jg
into
cmp
lds
mov
add
pop
inc
in
call
jle
xor
fmuls
outsb
mov
add
push
jnp
out
aam
das
rcrb
ja
mov
dec
xlat
ja
inc
notb
xor
dec
mov
cmp
stc
jb
mov
loope
out
mov
lods
bound
fs
mov
xchg
sub
test
repz
out
mov
cli
sbb
ret
mov
jnp
scas
adc
pusha
or
add
jmp
xchg
icebp
daa
xorl
popf
insb
enter
cmp
push
and
mov
insb
jg
out
jmp
fs
push
fisubrl
sahf
lods
test
out
fwait
pop
out
jle
inc
jae
jmp
xchg
or
aas
rcrb
inc
push
adc
ficompl
pop
sub
cmp
imul
fidivrs
xchg
loopne
jne
inc
xchg
cmc
mov
cmpb
hlt
ja
xchg
arpl
iret
mov
jge
loop
sbb
jne
aaa
jo
rorb
hlt
cmp
add
or
int3
je
adc
lahf
hlt
push
push
rcr
xor
add
sub
push
popf
sub
adc
test
push
rcl
add
in
cmc
cmc
push
enter
daa
pop
push
xchg
cmp
sti
stc
jno
fstp
jl
out
dec
dec
and
sbb
add
rorl
adc
push
lods
push
test
test
pusha
rcl
outsb
pop
xchg
push
and
sbbl
mov
nop
sub
cmp
call
stc
adc
mov
aas
orb
add
popf
push
xor
sub
push
mov
dec
repnz
fs
pop
movb
lcall
mov
lcall
sahf
test
xchg
subb
mov
pusha
lret
mov
and
mov
pop
sub
mov
cmp
pop
cmp
idivl
mov
lret
sub
mov
repz
shrb
xor
cmp
and
imul
data16
xor
iret
push
or
aad
in
out
or
cli
sub
jmp
lods
push
or
ds
cmp
loopne
leave
addr16
fisubrs
push
mov
adc
mov
lods
xchg
js
test
pop
ja
xlat
mov
fildll
dec
pop
in
xor
inc
sti
inc
mov
cs
xchg
jno
std
xor
or
movsb
dec
ret
inc
jno
test
add
repz
sahf
bound
adc
mov
cld
push
test
lds
pop
clc
mov
adc
fidivs
gs
sti
jmp
xor
inc
and
hlt
inc
push
les
stos
cwtl
cwtl
jb
push
dec
out
fnstenv
mov
cmp
cmp
inc
std
or
mov
mov
jo
mov
mov
cmc
dec
push
inc
daa
cmc
mov
stos
mov
mov
lock
in
das
xchg
iret
and
jo
lret
stos
and
es
jo
insl
jmp
add
cmpsl
pop
sbb
mov
ret
cld
inc
mov
inc
mov
popf
fiaddl
push
fwait
test
xchg
sub
sbbb
jg
xchg
push
leave
sub
aam
xchg
out
cmpl
loop
lds
in
dec
out
add
pusha
adcl
or
add
jge
test
in
mov
pop
out
xchg
mov
cmp
sbb
lds
pop
jo
adc
push
cmp
add
cmp
cmp
jno
repnz
mov
and
sub
std
mov
std
movsl
jle
lahf
push
pop
dec
lret
inc
lea
movsb
fwait
stos
jle
dec
lcall
mov
dec
xor
insl
add
daa
jns
xlat
add
cs
test
pop
test
sub
push
push
nop
addr16
test
mov
mov
sub
in
sbbb
cmp
lret
testl
xchg
popa
cmpsb
addl
push
pop
push
jl
xchg
fimull
mov
pop
jecxz
stos
jo
hlt
and
fdivr
insb
ljmp
scas
incb
and
adc
mov
ret
lcall
cmp
inc
and
push
test
rclb
fwait
imul
mov
shlb
mov
aad
push
leave
and
hlt
ret
arpl
gs
loopne
adc
int3
enter
and
out
or
int3
pop
iret
or
loope
push
xor
in
xor
pop
js
scas
test
stc
cmp
aam
movsb
icebp
add
and
cmpsb
or
paddsw
sub
daa
pop
cmp
xor
jl
inc
inc
dec
mov
push
sub
insb
jno
lahf
xchg
test
push
sub
test
je
jecxz
inc
mov
pusha
pop
mov
leave
call
prefetchw
or
xchg
in
pop
outsl
sub
shll
aaa
lret
sbb
ffreep
vphaddudq
or
lret
add
push
sar
int
pop
mov
jns
mov
lcall
add
sub
sbbb
sbb
jg
in
mov
pop
pop
mov
mov
and
pop
ss
add
cmp
fidivl
idiv
cwtl
sbb
inc
pmuludq
fmuls
lcall
adc
cmc
mov
inc
outsw
fstl
loop
and
fs
scas
adc
dec
xor
lods
mov
pop
mov
mov
jb
pop
into
test
cmp
sub
notl
jecxz
out
gs
adc
loopne
notb
adc
mov
add
mov
cmp
out
xlat
mov
popf
mov
lahf
ret
out
mov
xchg
inc
or
and
lds
test
sbb
in
add
repz
repnz
jnp
sub
ja
jecxz
inc
shrl
stos
dec
cli
adc
in
adc
jmp
xorl
and
inc
outsb
jae
aas
dec
mov
pop
sbb
je
test
pop
repnz
add
mov
loopne
sub
movsb
mov
ja
sbbl
leave
fldt
dec
out
jne
pop
lock
das
jne
jmp
scas
lea
daa
or
pop
rol
xor
es
insl
sarb
dec
outsl
ret
jmp
mov
cltd
and
cld
insl
sbbb
jb
fidivrl
movsb
jle
mov
movsl
loope
rclb
jp
aam
mov
ret
push
out
push
mov
fst
pop
out
dec
mov
ljmp
cmp
pop
loope
mov
push
roll
jge
popf
psubusw
dec
cltd
cmpsb
jns
test
cmc
push
mov
push
xchg
pusha
sahf
dec
mov
lock
addr16
xchg
dec
sarl
pop
sbb
inc
push
stc
inc
adc
sub
sbb
call
ficoms
or
xor
and
mov
insb
lods
dec
mov
mov
jge
dec
mov
inc
mov
mov
aaa
inc
dec
jge
cmc
jne
int3
push
mov
enter
pop
pop
bound
or
enter
daa
daa
xchg
jnp
push
out
inc
push
sub
dec
inc
mov
lds
mov
mov
or
cmc
ss
in
call
inc
hlt
fstp
mov
xchg
xor
jmp
sub
jno
rcrb
jl
sbb
rorb
ja
nop
push
sahf
mov
int
ffreep
ds
push
fstpl
scas
popa
sbb
push
fstps
shlb
adc
or
mov
inc
repz
hlt
jae
jmp
testl
add
adc
add
iret
xchg
repnz
imul
fisubrs
push
pop
faddp
xor
out
xchg
faddp
jnp
cld
mov
sub
addr16
cltd
mov
aam
dec
xchg
popf
fnstsw
jecxz
sbb
imul
int
int3
dec
sub
pop
push
push
ret
fdivl
mov
cld
scas
fs
and
xor
movsb
jl
pop
push
outsl
and
cmpsb
mov
push
in
ret
inc
jmp
daa
pop
movsb
mov
jno
repz
jl
jae
dec
sub
mov
daa
push
xchg
and
in
add
mov
rcll
or
adc
push
aas
insb
pop
inc
sub
in
leave
or
shl
js
mov
add
in
loope
adc
sub
jbe
cmp
int3
outsb
lcall
shrb
int3
xorb
adc
mov
jnp
les
shrl
hlt
xchg
jo
lcall
pop
fdiv
aas
sub
pop
sahf
lret
test
jge
and
lret
cwtl
or
pop
sahf
fidivs
jns
ss
div
cmp
xchg
shll
ss
jmp
sbb
movl
push
add
outsb
into
ljmp
leave
or
nop
ds
fs
test
mov
test
dec
mov
stos
shl
cmp
out
cli
addr16
xor
cmp
nop
ud2
push
xor
gs
inc
out
loopne
aaa
aaa
pop
sbb
adcb
jecxz
imul
out
xor
dec
and
cmp
fnstcw
mov
or
sti
sahf
push
cmp
aad
dec
jne
shll
dec
addb
fldcw
sub
clc
adc
movsb
divb
loop
shr
cmp
mov
adc
mov
test
jae
inc
xor
aam
mov
inc
aas
call
lods
dec
aad
ljmp
jg
mov
repnz
int
jnp
shr
dec
xor
jp
pop
xor
mov
cmp
mov
movsl
inc
lock
das
push
add
fstpt
ret
rcll
and
insl
mov
jns
push
adc
cld
pop
push
icebp
jo
xor
cwtl
sbb
jne
mov
stos
xchg
push
xchg
or
les
or
addb
enter
cmp
push
dec
cmp
jle
clc
orl
ljmp
clc
lods
lds
out
lret
ror
jge
mov
push
xchg
cmp
pusha
add
movb
add
dec
sbb
cmpsb
test
or
call
rcl
inc
aas
pop
movb
aaa
arpl
push
pushf
dec
repnz
jo
test
xor
ret
or
ret
xchg
xor
adc
mov
scas
mov
jae
mov
dec
mov
and
mov
icebp
popf
fwait
or
or
pusha
icebp
jns
dec
jecxz
fwait
pop
test
sub
inc
jns
pop
xchg
in
push
pop
xchg
lret
out
jo
sub
dec
cli
mov
shrl
mov
lock
mov
popf
xlat
push
jle
cmp
dec
loopne
pusha
fstpt
arpl
test
dec
cmp
loopne
dec
popf
loope
cmp
mov
insl
push
fstl
in
push
ss
and
fsubs
jnp
mov
scas
vandnps
loopne
das
loope
ret
pushf
pop
mov
and
jae
dec
addl
push
or
mov
ss
sbbl
mov
out
dec
add
sbb
fildl
fisubs
lds
mov
xchg
aas
addr16
jnp
out
adc
hlt
pop
ja,pn
pop
leave
and
mov
sbb
xor
lods
cmp
or
pop
jo
shl
int3
xor
mov
push
stc
test
les
xchg
lds
or
push
cmp
lods
pop
movsb
pop
mov
push
mov
xchg
in
stos
inc
pop
enter
daa
pop
xchg
push
cmp
xor
jl
ja
dec
cltd
xor
add
and
adc
push
into
add
test
or
out
mov
popf
pop
or
js
adc
pop
lea
jge
sbb
inc
sub
incl
cmp
gs
outsb
std
popa
jb
and
add
lds
rcrb
jns
movb
and
push
ret
inc
push
mov
mov
pop
inc
outsb
mov
push
ds
fwait
imul
sahf
insl
daa
popl
std
dec
cmp
dec
pushl
mov
cmp
mov
cmp
push
loop
idivl
lret
push
roll
arpl
inc
test
shll
fcomi
xor
xor
imul
dec
cmpsl
pop
stc
inc
and
inc
adc
jle
dec
xchg
shrd
xor
cmp
pop
cli
ret
xor
ficoml
pop
leave
jmp
sub
adc
push
sub
test
clc
pop
cmp
stos
adc
imul
testb
test
jbe
sbb
shlb
jl
adc
xchg
jne
hlt
sti
dec
les
aad
jmp
nop
pushf
out
xchg
dec
filds
inc
stos
lods
inc
fldenv
je
repz
outsb
fmull
insl
xchg
mov
inc
cli
inc
pop
adc
pop
pushf
data16
sub
mov
pop
mov
cmpsl
inc
mov
or
and
dec
dec
mov
je
nop
jecxz
jecxz
testb
xchg
std
add
or
mov
and
adc
mov
dec
sub
add
mov
mov
sbb
add
sahf
das
xor
sub
xchg
mov
and
mov
das
shlb
insl
sahf
je
dec
gs
std
cmpsl
pop
cltd
idivl
inc
mov
aas
lret
push
out
mov
mov
inc
mov
jecxz
leave
shlb
xchg
ljmp
cmpl
ret
sub
jne
adc
fstpl
test
lods
mov
ljmp
push
xor
cmpl
sbbb
xor
seta
cmp
iret
inc
out
cltd
adc
incb
pop
push
xchg
xchg
insb
dec
xorl
xchg
loopne
shrl
aas
push
pop
jno
push
stos
es
push
aas
inc
std
add
mov
decl
clc
xor
lret
xor
mov
repnz
pop
sub
dec
mov
add
or
jg
fwait
aaa
lret
inc
dec
scas
jne
mov
mov
daa
out
or
bound
xchg
xchg
iret
fcom
xchg
sbb
out
adc
mov
aas
addr16
pop
sti
mov
dec
mov
or
fdivrs
sub
jmp
jbe
int3
popw
xchg
int3
inc
aam
mov
mov
inc
push
mov
imul
sbb
cmpsl
stos
leave
and
and
jnp
xchg
daa
sahf
dec
push
mulb
adc
push
iret
mov
add
call
inc
jae
stc
sub
negb
std
into
cmpsl
push
add
fisubrl
aaa
xchg
mov
mov
rcr
movsl
sub
cld
shlb
mov
repnz
cmpsl
dec
xchg
or
mov
dec
xor
dec
idivb
je
sbb
cmp
aaa
insb
mov
or
or
add
ror
pop
nop
pop
and
push
faddl
jo
cmp
and
or
lods
push
or
push
into
in
xchg
and
daa
pop
add
cmp
adc
jno
cltd
fdivrs
movsl
dec
or
pop
movsl
xor
and
lahf
repnz
push
mov
push
sbb
inc
hlt
add
jae
dec
pop
xor
fdivrs
adc
pop
int3
add
push
fucomip
loope
ljmp
mov
das
outsb
pusha
sbb
adc
and
mov
sbb
sub
push
push
lret
int
jmp
sub
cli
cli
pop
ret
lcall
inc
xchg
sub
push
mov
add
sbb
inc
jg
or
inc
and
add
fcompl
xchg
aas
pop
cmp
or
imul
cmp
jns
sti
xor
repnz
mov
cmp
clc
scas
dec
xor
push
outsl
jp
dec
loop
mov
or
fwait
adc
lock
roll
cmp
mov
cmc
mov
xor
dec
mov
or
decb
gs
int
loopne
hlt
mov
inc
adc
mov
mov
xchg
test
jno
or
sub
xchg
push
in
loopne
sti
cld
sti
je
fnstenv
hlt
nop
ja
jecxz
ds
movsl
inc
mov
pushf
pop
les
sub
stos
pop
dec
lea
jp
mov
pop
xchg
adc
pushf
adc
jmp
or
pop
pop
fisubl
inc
mov
jae
jb
mov
mov
pop
jecxz
or
testb
test
rcrb
dec
mov
stos
andl
int
fstpt
in
adc
sbb
das
adc
mov
dec
cmp
and
mov
lret
mov
dec
dec
pusha
js
cmpsl
pop
int3
fs
push
sbb
out
lret
mov
jne
and
mov
mov
rorb
loopne
sub
cmp
ret
mov
sbb
fldl
inc
clc
stc
mov
xchg
jmp
sub
outsb
add
xlat
add
clc
shr
xchg
xor
push
mov
popf
add
sub
dec
inc
iret
test
sbb
fs
dec
ljmp
xchg
add
sbb
inc
cmp
sbbl
stos
adc
sub
ret
add
mov
or
je
xor
repz
xor
out
pop
jmp
or
dec
xchg
xlat
jmp
jmp
loope
fwait
imul
faddl
mov
mov
mov
jns
jb
in
scas
aaa
xchg
push
sub
or
es
addr16
mov
jns
cltd
in
rorb
push
mov
pop
into
imul
jmp
xchg
lahf
sbb
jmp
lea
jg
les
data16
popf
das
or
mov
pop
pop
test
cmp
pop
and
xchg
insb
xchg
push
pop
jnp
and
scas
mov
push
cmp
xor
iret
in
imul
inc
adc
lcall
pushf
inc
or
cmpsb
xchg
inc
sbbl
lock
mull
sbb
addr16
imul
xor
stos
dec
ffreep
orl
ror
jns
cmc
adc
and
leave
lock
out
ss
jns
outsb
jbe
orb
jl
sbb
pop
leave
or
jl
int3
or
out
push
xchg
xor
mov
ret
das
jo
stc
test
xor
push
cmp
mov
jno
adc
out
in
js
sub
pop
or
sub
cld
pushf
dec
jno
and
test
xchg
sahf
and
out
movsl
cmp
popa
and
xlat
jne
adc
int3
test
mov
push
cmp
sbb
js
stos
jbe
or
jo
stc
push
loope
or
jno
pusha
subl
testb
ljmp
jmp
das
sbb
testl
out
jl
push
int
popf
int
dec
mov
gs
pop
pop
inc
cmc
mov
push
lods
jne
fdiv
imul
sub
cld
ljmp
scas
xchg
jg
lret
lds
jl
les
jle
xlat
xchg
sub
idiv
push
pop
lret
sbb
xor
cltd
mov
addl
into
xchg
lds
xor
pushf
outsl
pop
fnstcw
loop
jae
mov
shlb
cmp
nop
mov
push
ret
push
and
mov
adc
cli
sub
xor
fldenv
scas
mov
or
cmpsb
gs
sub
fidivs
pop
jns
cltd
adc
hlt
and
std
cld
add
or
xchg
inc
add
sbb
inc
push
xlat
xlat
cli
aas
fisubrl
divb
imul
stos
testl
pusha
pop
xlat
nop
push
cmpsb
xor
into
jb
rclb
or
adc
add
inc
mov
lods
mov
mov
arpl
mov
inc
inc
jmp
ja
xor
mov
xchg
adc
push
sti
mov
inc
outsl
aas
lds
jb
xchg
std
dec
cmp
inc
je
in
mov
add
testb
stos
cwtl
adc
mov
mov
dec
add
out
mov
cli
sub
jne
movsb
das
icebp
jae
mov
add
roll
jle
es
push
and
lahf
dec
pop
xchg
cmpsl
pop
andl
cmc
mov
cld
sbb
scas
lret
adc
adc
push
mov
and
push
rcr
pop
scas
sub
mov
test
in
dec
cmp
cwtl
ss
xor
in
sub
cmc
popa
push
mov
push
push
push
mov
hlt
fidivl
xchg
push
test
andnps
ja
cmc
inc
mov
test
jge
mov
push
daa
xchg
pushf
mov
jae
test
jne
xchg
pop
cmp
fcomps
inc
stos
add
sbb
add
shll
xor
outsl
or
ret
mov
loopne
mov
js
int
sbb
or
ja
inc
pop
dec
mov
inc
inc
adcb
pop
pop
test
dec
or
out
mov
test
out
enter
mov
repz
fnstcw
xchg
mov
push
out
mov
sub
cmp
loop
inc
leave
cmp
dec
jo
mov
ljmp
in
pusha
lods
xchg
pop
fisttps
addr16
xchg
jb
sbb
mov
mov
orl
inc
push
sub
popf
push
xchg
pop
mov
lcall
and
out
insb
add
jge
add
scas
in
repnz
test
adc
and
iret
dec
xor
ret
jle
xor
stos
jae
sbb
das
mov
or
and
inc
inc
add
fcmovbe
mov
xchg
sbb
lock
les
lds
mov
cmpb
push
mov
hlt
cmp
scas
arpl
sub
jge
xchg
and
jae
mov
ljmp
add
pop
subl
xor
int3
fldt
les
movsb
test
mov
stos
repz
xchg
mov
in
pop
hlt
enter
daa
pop
jo
cmp
fnstenv
jno
into
sti
jl
jnp
dec
out
clc
ds
and
in
xor
push
inc
xor
push
imul
inc
adc
inc
stc
jo
pop
xorb
rcl
ds
dec
xchg
movsl
push
stos
fwait
loope
push
int
cmp
push
pextrw
jge
es
adc
pop
movsl
popl
ret
sbb
jmp
sub
xor
movb
xchg
lahf
sub
mov
push
pop
lods
cmpsb
push
add
stos
fcompl
push
sahf
push
push
js
or
add
jg
mov
jmp
inc
aad
in
mov
and
idivl
cmpl
ror
xor
sbb
add
push
xor
mov
outsl
cmp
lahf
stc
insb
mov
fs
outsb
xlat
adc
hlt
lret
data16
subb
sub
imul
pop
aam
xor
insb
and
and
addr16
xchg
std
xlat
gs
loopne
add
pop
cwtl
dec
cmp
pop
ds
imul
hlt
nop
xchg
or
insb
sbb
andl
push
mov
mov
jmp
cs
add
cmpsl
daa
xchg
sub
lcall
dec
pop
inc
les
xchg
mov
dec
lea
mov
fiadds
jb
mov
out
adc
loopne
pushf
cmpb
push
mov
inc
dec
mov
inc
cmc
or
fs
jb
mov
ss
sbb
jecxz
sub
test
call
cwtl
shrb
mov
push
outsb
mov
out
xchg
dec
in
and
mov
xor
lock
popa
das
shlb
pusha
mov
out
mov
cs
jae
insl
push
cltd
js
push
sub
push
mov
movsb
icebp
int3
jb
cld
inc
lret
lcall
test
fsubs
inc
adc
shlb
push
inc
fnstenv
push
pop
enter
jmp
clc
outsl
loope
xchg
imul
pop
lods
jno
add
out
xchg
push
jbe
xchg
cltd
ljmp
mov
mov
cltd
mov
xor
mov
mov
dec
dec
mov
imul
aaa
sub
shrl
std
jmp
jb
or
sub
or
fmull
xor
sub
jge
xchg
sbb
adc
and
mov
mov
pop
inc
pop
pop
loop
ja
add
dec
jl
xor
mov
or
and
fwait
stc
jl
in
and
push
into
mov
addr16
out
cmpsl
fdivrl
push
test
jns
sbb
jo
cltd
xchg
push
inc
lock
mov
sub
xor
sub
jp
mov
mov
cmp
mov
dec
jle
mul
push
mov
fbld
insl
adc
test
xchg
and
popf
jge
dec
mov
fnstenv
jae
push
mov
insb
insb
or
jnp
mov
aad
lret
xor
adc
add
pop
mov
sub
inc
xor
xor
push
jg
jo
cmpl
xchg
movsl
fcmovnu
sbb
dec
push
fdivp
ja
lds
cmp
mov
jnp
leave
in
add
arpl
dec
inc
jge
cld
and
jecxz,pn
aaa
test
inc
inc
add
pop
hlt
pop
mov
cmp
test
pushl
jle
insb
scas
mov
jge
cmp
or
movsb
xor
adc
in
inc
sbb
enter
daa
push
insl
daa
cmp
inc
jno
lahf
push
jl
iret
or
pop
cwtl
ds
loopne
and
or
dec
pop
test
sbb
aas
test
ss
inc
mov
cmp
pop
cmpsl
cltd
fidivrs
xchg
xchg
pop
mov
loope,pt
mov
jns
mov
mov
shlb
ss
sbb
les
inc
cmpsl
push
shll
sbb
pop
jge
pop
aas
mov
lcall
test
inc
inc
sub
jmp
and
xchg
inc
push
subb
jg
push
dec
mov
jge
mov
scas
mov
and
ss
xchg
hlt
cmp
cmp
dec
idivl
daa
lret
mov
mov
mov
pop
cmp
cmc
dec
adc
xor
xor
je
and
pop
fs
sbb
movsb
loopne
pop
shll
mov
adc
cli
mov
jmp
mov
cmp
divb
mov
fs
or
adc
or
sarl
adc
xchg
movsb
imul
pop
push
xchg
int
repz
mov
sbb
fdivrl
shll
sub
sbb
add
adc
pop
imul
testb
xor
les
dec
cmp
mov
xor
in
xchg
pop
lods
jmp
pop
fnstsw
lret
inc
outsl
jmp
ja
pop
inc
sbb
aad
push
aas
add
push
dec
sub
jbe
push
sbb
testb
dec
cwtl
mov
rorl
es
dec
xlat
mov
inc
mov
loope
pop
shrb
lock
xor
scas
rcrl
mov
jns
sbb
mov
or
dec
push
popa
inc
cmpsl
push
jge
mov
mov
mov
lret
or
pop
mov
into
mov
pop
fisubrl
pop
pop
pop
test
xor
sub
imul
enter
in
out
push
into
mov
mov
jmp
mov
popa
andl
fmull
and
mov
mov
push
lahf
xor
movlps
add
adc
cltd
lock
xor
mov
arpl
pop
sub
cwtl
hlt
int3
xchg
daa
sbb
stos
pop
roll
sbb
push
lret
mov
ds
jbe
dec
pop
xchg
xor
imul
mov
lcall
sbb
jae
outsl
out
inc
scas
xor
or
lcall
fwait
repz
dec
iret
dec
pop
jne
cmp
mov
pop
push
out
xchg
push
in
pushf
jns
loopne
in
sub
xchg
push
adc
jge
xchg
inc
ljmp
leave
sub
add
mov
and
mov
enter
mov
in
and
pusha
loop
push
filds
jns
sbb
jo
jl
fistl
out
add
popf
movsb
dec
adc
sbb
pop
and
push
xlat
ret
test
popa
xchg
push
adc
test
aad
ret
fcomps
add
mov
inc
dec
sbb
or
pop
push
and
and
fidivl
addr16
cld
jmp
sbb
ja
imul
pop
lds
add
rcrb
adc
sbb
es
arpl
gs
iret
cmp
cmpsb
sete
fcmovb
jge
inc
dec
sbb
inc
pop
aaa
push
adc
add
or
and
push
push
cli
jo
lods
out
sahf
stos
std
and
xchg
adc
int
in
mov
je
cmpsb
popf
loopne
in
sub
push
xor
push
out
stos
cmp
xchg
aaa
jl
clc
or
les
xor
pusha
movsl
push
mov
lahf
outsb
loop
push
in
sti
loope
fcmove
or
xchg
inc
xor
rcl
jl
pop
into
mov
push
pop
enter
push
inc
push
loope
dec
jne
adc
dec
cmp
aaa
outsb
in
mov
adc
mov
popf
andb
sbb
mov
pop
adc
adc
sub
sar
pop
mov
scas
ret
push
mov
dec
fdiv
and
sahf
pushf
loop
test
add
sbb
sub
loope
mov
and
out
mov
jecxz
divl
mov
lret
test
cmpsl
pop
push
sbb
daa
dec
inc
popa
inc
cmc
adc
xchg
xor
push
and
fiaddl
rcll
adc
popf
data16
push
pop
mov
mov
stos
ret
gs
cmp
push
mov
add
out
fadds
push
loopne
pop
mov
adc
and
imul
add
xchg
nop
ds
sbb
testl
aas
sub
mov
hlt
pop
sbb
mov
mov
sbb
nop
jecxz
jecxz
mov
lods
dec
fnstcw
dec
sbb
scas
jle
mov
movsl
lea
call
mov
inc
notb
test
setl
and
pop
in
jle
pop
ja
inc
sub
aas
mov
push
pop
dec
lahf
pusha
jb
jne
or
sub
mov
std
inc
add
cwtl
inc
sub
inc
push
xchg
mov
addl
ret
outsl
mov
mov
lock
ret
das
mov
jge
mov
and
add
mov
lock
pop
adc
insl
and
dec
dec
sub
cmpsl
push
shrb
jp
jae
lcall
mov
aad
aas
mov
jle
rcl
push
rsqrtps
push
adc
imull
mov
clc
in
adcb
cmp
popa
lcall
mov
sbb
jecxz
push
jp
mov
jb
add
lret
cltd
daa
dec
leave
test
push
incb
xchg
mov
std
aaa
xchg
popf
rcr
das
mov
jnp
rcll
add
adc
inc
ljmp
mov
or
mov
out
mov
xorl
gs
pop
aad
pop
ja
add
pushl
inc
fsubs
sbb
cwtl
sbb
jo
jne
push
sub
gs
xchg
bound
test
in
push
add
pop
adc
or
outsb
push
addr16
les
cs
mov
xor
mov
aaa
pushf
pop
jle
inc
xor
jbe
push
pusha
jge
mov
xchg
jmp
fucompp
jae
or
cmpl
fcomps
adc
pop
push
push
adc
and
cmpb
insb
inc
push
adc
scas
push
cwtl
out
push
pop
pop
pop
adc
or
stos
fadd
xchg
xchg
push
pop
aad
ret
inc
inc
xchg
or
inc
sbb
or
xchg
sbb
inc
jge
sbb
jmp
and
sbb
jns
imul
xchg
lds
mov
mov
insl
bound
leave
fisubl
lret
jmp
jge
jbe
sbb
in
or
mov
dec
pop
mov
pop
push
cmp
dec
pop
cmp
xor
cld
scas
jge
pop
and
mov
test
sub
sbb
and
jle
dec
jmp
leave
cmp
lds
jl
hlt
jns
xor
jg
pop
mov
mov
lea
mov
rol
jnp
int3
and
sbb
inc
xor
js
lret
xchg
pop
pop
inc
cltd
push
mov
std
sub
pushf
cwtl
cmp
aam
dec
push
test
lret
pop
jb
addr16
xorb
push
sbb
dec
movl
and
push
scas
int
mov
push
pop
cmp
cmp
fcompl
mov
pop
fiadds
lahf
pop
xchg
jg
icebp
push
mov
jge
mov
jbe
int
cmp
fsts
cmp
mov
xchg
notb
lret
mov
mov
cmp
and
cmc
fildl
xor
mov
outsl
aad
cmp
rcrl
xchg
add
fs
in
adc
into
repnz
nop
shrl
test
or
xor
cmpsl
cli
hlt
inc
pushf
xor
loope
pop
test
or
xlat
sti
mov
inc
loopne
sub
adc
in
imul
movl
push
fstpl
xor
xlat
testb
sub
sbb
mov
testl
cs
jl
jl
mov
sbb
sbb
test
lock
les
push
repz
pop
mov
repnz
cmp
in
inc
jge
adc
inc
ret
pushf
push
xchg
ficomps
or
jecxz
movl
sahf
clc
jb
cld
jp
push
popf
je
xchg
movsb
jecxz
shlb
xchg
int
std
jmp
fs
add
mov
cmp
add
lods
fldcw
movsl
jge
mov
aam
lods
cmp
das
insl
aas
aad
inc
bnd
fistps
and
lods
das
sarl
pop
les
loop
pop
insl
or
test
mov
push
xchg
icebp
push
xchg
cld
lds
sub
fsubrl
pop
pop
popf
cli
xlat
shrb
pop
sub
sub
ret
xchg
scas
fisttpll
push
push
clc
and
pop
ljmp
outsb
lods
mov
popa
mov
addb
xchg
outsb
jne
push
push
xchg
inc
psrlw
push
add
fcompl
sub
mov
sub
dec
in
test
test
ret
xchg
sbb
not
xor
aam
jae
subb
or
add
sti
shlb
mov
fs
fisttpll
mov
fbstp
pop
nop
into
cmp
dec
leave
dec
push
lret
das
inc
fsubl
pop
fwait
push
or
xlat
jne
rcrb
mov
cmpl
or
push
jns
pop
adc
xchg
repz
fistpll
addr16
jmp
push
push
loopne
cmpsl
xchg
outsl
mov
lock
jge
ja
sbb
filds
pop
jmp
test
add
xor
xchg
out
mov
xchg
or
out
xchg
inc
xlat
insb
lods
mov
jnp
popf
mov
mov
test
iret
enter
movsl
lret
or
mov
jae
xchg
inc
cmp
in
push
cld
adc
ficompl
cmp
dec
mov
je
fcompp
fisubs
rclb
mov
shlb
leave
push
out
xchg
hlt
mov
jbe
pop
jl
mov
mov
imul
loop
js
mov
test
lret
rorb
fstpl
pop
sbb
out
cmp
int3
xchg
movsb
aam
sub
out
cmpsb
mov
sbb
enter
daa
push
jl
cmp
sarl
cmp
les
dec
mov
icebp
mov
and
cltd
pop
lahf
lods
test
push
xchg
xchg
out
enter
xchg
and
add
pop
add
inc
test
push
mov
loope
fcoms
cmp
cmpsl
fldt
ja
adc
inc
sti
jg
add
adc
cli
mov
add
pop
bound
stc
jb
push
fsubrl
mov
sub
xor
int3
mov
push
pusha
je
fmull
ret
sub
aas
filds
mov
xor
xor
sbb
call
stc
loop
or
fsubrs
divl
lret
aaa
shll
xor
jge
in
imul
push
cmc
mov
fldcw
outsl
mov
jno
push
leavew
stc
dec
xor
rclb
dec
shlb
movsl
sbb
mov
sti
push
cli
daa
subl
fidivrs
mov
lret
jns
in
mov
adc
and
fldl
xchg
cmp
push
push
mov
cmp
xchg
xlat
xor
sbb
and
in
bound
ds
aad
inc
sbb
dec
js
or
sbb
fldenv
mov
les
loop
dec
add
mov
inc
into
call
mov
insb
jmp
push
mov
pushf
adc
sbb
inc
push
faddl
pop
in
aas
loopne
out
jb
xlat
out
dec
out
mov
jecxz
nop
push
subb
daa
sbb
mov
stos
subl
add
arpl
cmp
out
das
dec
jl
mov
xchg
out
and
cmpsl
mov
es
in
aad
inc
jle
cmpsl
push
shl
mov
sub
jns
lock
mov
pop
xorb
jecxz
insb
mov
mov
fiadds
sub
aam
inc
vunpckhps
jg
addr16
or
das
cwtl
mov
xchg
gs
ljmp
adc
sbb
adcb
imul
xor
wrmsr
insb
xchg
add
cltd
xchg
sub
mov
cmc
cmp
push
jo
test
or
sbb
gs
repnz
pop
push
jp
stos
scas
sbb
mov
hlt
add
dec
xor
jmp
xchg
xor
outsl
ljmp
scas
int
pop
cld
negl
inc
add
dec
dec
dec
cmp
push
or
nop
sbb
dec
js
sbb
mov
mov
mov
out
and
jns
adc
pushf
lcall
and
add
or
mov
jp
mov
in
mov
adc
xchg
mov
pusha
mov
cmc
fbld
addr16
popa
test
xchg
dec
imull
out
nop
push
clc
loope
popf
sbb
push
aad
and
scas
jns
insb
sbb
or
iret
repz
fdivl
out
mov
iret
daa
fs
ret
pop
inc
push
movl
sbb
add
or
mov
arpl
into
neg
dec
sub
add
dec
sbb
clc
cltd
imul
ret
lds
js
mov
adc
dec
leave
enter
mov
mov
jbe
inc
adc
jg
sbb
fidivl
aaa
movsl
cs
or
iret
add
sahf
int3
lea
out
adc
out
fmul
test
scas
cmp
mov
test
imul
lock
mov
in
loop
mov
daa
push
mov
jno
dec
cmpsl
jl
push
int3
ds
iret
dec
movsl
data16
and
mov
lret
pop
cltd
push
xor
push
bound
inc
fstp
stos
enter
inc
push
add
push
push
pop
test
loopne
stos
jae
loope
shll
cmp
outsb
adc
or
rcrb
pushf
pop
sbbb
sbb
leave
int3
add
or
enter
popf
int
dec
xor
inc
inc
int
cmp
bound
mov
addr16
ret
imull
cmpsl
mov
test
scas
xor
pushf
xorl
arpl
sub
divl
cmp
sub
mov
shr
sarl
push
sbb
nop
insb
cmc
imul
outsl
xchg
sbb
loop
jecxz
stc
ljmp
bound
es
jae
mov
or
jmp
pop
outsb
ja
ljmp
or
popf
incb
bound
jle
loopne
add
pop
xor
pushf
adc
xchg
imul
movl
cmp
stc
cmp
test
aad
cmp
pop
in
int
jp
mov
or
lcall
aam
inc
inc
sbb
mov
pop
pop
sub
mov
jae
call
cmp
pop
test
inc
cmp
mov
mov
and
or
jl
xor
jg
inc
jb
out
dec
add
aas
je
jecxz
jecxz
xchg
cmpsl
negb
test
std
cmp
and
mov
pop
addl
fildl
push
sub
add
mov
xor
lock
jbe
das
sub
cmp
and
hlt
fcom
frstor
es
sti
fisttpl
add
lret
mov
decl
cld
sbb
ror
stc
inc
mov
ljmp
pop
fldt
ljmp
cmp
aam
mov
mov
insl
out
push
mov
notl
in
pop
popa
fistpll
cltd
mov
inc
lret
xchg
cld
lds
push
or
jg
push
xor
mov
flds
mov
loop
xchg
mov
shl
or
stos
sahf
add
push
inc
daa
add
arpl
inc
incl
cmpsb
xor
mov
out
xor
push
loope
inc
push
mov
hlt
in
mov
push
push
push
dec
cmp
inc
or
out
scas
inc
mov
jne
cld
stos
mov
stc
pop
out
add
ret
push
push
jns
imul
daa
mov
mov
test
adc
or
lcall
call
scas
mov
test
push
es
in
pop
out
dec
sub
pop
xorb
push
push
lock
inc
push
mov
adc
or
insb
sub
jnp
aas
shll
cs
adc
arpl
xchg
ret
and
bound
popa
popf
cltd
jae
xlat
repnz
inc
iret
or
add
fiaddl
es
pop
xchg
pop
sbb
jbe
imul
ficomps
xchg
sbb
xor
xchg
rorb
repnz
repnz
aas
imul
loop
lret
jbe
cmpsl
mov
sbb
mov
aaa
fs
pop
or
mov
int3
js
sbbb
lret
stos
mov
jo
pop
mov
and
in
inc
cmp
lcall
test
cmp
daa
push
sbb
jno
iret
clc
jl
loopne
dec
subb
movsl
insl
cs
and
ss
test
sub
pop
mov
xchg
pop
push
xor
xor
pop
pop
les
loope
repnz
cmp
xor
outsb
js
test
clc
ror
mov
cli
mov
push
or
roll
loop
int
out
sub
out
pop
mov
and
push
push
mov
cld
sub
insl
rolb
lock
aam
xchg
js
mov
test
mov
es
push
sub
lods
subl
fsub
or
divl
cmpb
push
push
jbe
push
lds
sbb
or
cmc
xor
imulb
pusha
outsb
loop
xchg
adc
fs
dec
insb
adc
sub
lods
mov
ret
mov
cli
lea
sub
cmp
punpckhwd
mov
or
gs
xchg
mov
sbb
add
adc
jbe
push
sbb
add
cmp
cmp
movsl
rcl
cmp
mov
cmp
loop
icebp
mov
arpl
ss
and
xchg
cmpsb
and
repz
call
mov
mov
push
loopne
imul
inc
js
add
and
aas
push
call
nop
dec
jnp
xchg
je
pop
xchg
jecxz
fcompl
negb
std
loopne
sti
cwtl
xor
mov
dec
sbb
add
bound
mov
ret
test
repnz
or
sbb
add
dec
and
xchg
cmp
es
insl
mov
and
cmpsl
push
hlt
add
cli
ret
push
icebp
fistpll
inc
lods
dec
lret
aaa
dec
lds
icebp
push
fbld
cli
add
push
sub
adc
ret
xor
push
in
mov
fnstsw
movsl
clc
sarl
lods
ljmp
outsb
lods
repz
sub
test
test
push
out
les
out
xor
jp
rcrb
dec
dec
mov
jle
mov
dec
and
cmpsb
xchg
lods
cli
sbb
pop
sarl
inc
fistpl
add
lea
ss
jle
xchg
jmp
pop
inc
xor
fadds
xor
lea
mov
dec
lods
inc
mov
shr
ja
cmp
dec
cs
inc
mov
shlb
add
dec
andb
cmpsl
cs
push
jle
loope
leave
les
jns
push
ficoms
sub
jecxz
pop
imull
addr16
adc
jecxz
mov
fstpt
mov
repz
scas
or
xchg
adc
hlt
pop
in
xchg
aaa
and
jmp
in
jne
imul
jns
jle
xor
add
and
push
push
scas
stos
aam
aas
and
dec
or
imul
and
adc
sub
ret
fcomps
adc
inc
insb
sahf
in
jae
in
inc
inc
sbb
or
jle
mov
sarl
mov
repnz
scas
pop
out
sbb
iret
imul
faddp
lds
mov
mov
mov
pushf
add
inc
jns
arpl
stc
xor
jl
jge
sbb
aaa
and
add
mov
mov
xlat
sbb
jo
mov
mov
cmp
mov
pop
daa
cmpsb
sub
mov
mov
scas
enter
daa
push
das
add
xchg
sbb
js
jl
sub
dec
out
loope
fbld
movsl
je
mov
lahf
or
mov
test
clc
adc
inc
sti
jns
dec
xchg
outsl
sub
pop
add
dec
push
push
hlt
loope
ljmp
ljmp
fildl
lahf
rcl
shll
sbb
add
arpl
add
int
push
mov
lcall
pop
fmull
subb
xor
jno
test
dec
inc
jg
pop
cmp
xor
mov
and
jae
cmp
sahf
cmc
dec
div
xchg
and
cmpsl
mov
mov
ds
sbb
movsb
into
scas
je
cmc
mull
xor
sub
loop
jnp
stc
insl
fs
fs
sbb
or
insl
sahf
sbb
xchg
or
cli
shlb
js
cmp
xchg
mov
sub
incb
adc
pop
jno
pop
adc
lock
imul
fadds
aas
mov
addr16
push
add
xlat
repnz
mov
mov
gs
add
call
dec
xchg
mov
repnz
test
add
mov
or
dec
test
cmp
adc
adc
mov
adc
cmp
loopne
jge
adc
sub
pushl
aas
mov
mov
xor
cmp
js
mov
lahf
push
data16
xchg
hlt
mov
add
mov
xorl
std
addr16
dec
stos
mov
mov
or
mov
mov
mov
es
adc
insl
movsb
xor
imul
lods
lcall
cmpsb
sub
clc
cmpsb
mov
sbb
shlb
xor
sub
aam
lods
xor
push
mov
loop
movsb
mov
clc
or
call
ljmp
add
sbb
out
or
mov
push
rorl
dec
pushf
stos
add
inc
sub
push
dec
pushl
out
add
push
mov
jp
mov
js
xchg
sbb
jge
nop
movsb
mov
pop
push
dec
stos
jl
daa
push
popf
dec
push
add
cltd
mov
cwtl
xor
ja
or
inc
cmp
sbb
sbb
inc
mov
fadds
mov
jl
mov
dec
and
adc
cmp
adc
mov
inc
fwait
or
data16
jne
mov
mov
sarb
rorb
jns
or
das
xchg
icebp
out
bound
sub
adc
adc
jp
xchg
scas
mov
lahf
add
mov
sbb
cltd
push
int3
pusha
test
arpl
inc
bound
and
push
mov
inc
xchg
pop
popf
mov
adc
cmp
ljmp
repz
insb
pop
jp
jnp
cld
cmp
mov
outsl
mov
ret
adc
call
repz
and
adc
cmpsl
or
stc
rcrb
inc
clc
sbb
push
inc
gs
in
pop
imul
fisubs
lds
pop
mov
cmp
repnz
push
leave
sub
sbb
arpl
sub
jbe
lds
jge
mov
mov
loop
inc
or
mov
dec
int3
dec
add
adc
xor
sti
jge,pn
fdivs
fwait
and
cmp
sbb
push
and
cmpsb
scas
inc
push
in
xchg
out
enter
daa
push
enter
or
jl
dec
in
dec
pop
fdivr
add
stos
movsl
jnp
int
dec
rcrb
push
fistpll
xor
ret
pop
testb
dec
adc
pop
mov
idivb
add
mov
sub
popl
xchg
in
lds
shrb
shrb
sbb
xlat
roll
and
xor
into
mov
sub
pop
test
mov
xlat
cmp
je
push
sahf
outsb
push
test
andb
sub
cmp
mov
out
stos
pop
xor
out
ss
mov
movsl
push
adc
divl
xor
roll
xchg
sbb
push
push
cmc
mov
fldt
hlt
mov
push
xchg
cmp
lock
jno
int3
mov
lret
mov
xor
in
cmp
out
or
push
in
gs
out
inc
loopne
push
outsb
pop
nop
cli
and
hlt
mov
imul
pop
add
shrb
and
cmp
dec
xlat
xor
add
in
jle
ss
push
add
sti
rolb
mov
sub
fbld
scas
dec
hlt
lea
flds
push
les
xrelease
stos
enter
mov
xchg
call
mov
repnz
ret
adc
iret
pop
jmp
ds
pop
mov
mov
inc
int
call
jb
dec
mov
je
dec
pop
jecxz
cmp
loop
std
and
cwtl
test
push
mov
mov
xor
or
sub
nop
into
jae
stos
stos
jmp
lock
fwait
das
enter
and
jge
and
aad
ror
in
out
jno
ljmp
adc
dec
es
mov
test
cld
pushf
in
lahf
lret
adc
lcall
cwtl
in
daa
pop
cmp
sahf
rorb
sub
push
xchg
ret
push
lds
jae
pusha
test
clc
inc
push
aam
popa
jae
ljmp
sbb
mov
outsl
mov
rcll
push
in
add
xchg
add
jno
xchg
movsl
and
jne
test
out
xchg
add
iret
fistps
shl
daa
mov
push
stos
imul
inc
ret
or
or
mov
sar
and
xchg
xor
xor
xor
cld
sub
sarl
mov
aaa
call
decb
push
cmp
iret
lods
rorb
inc
cmp
add
jmp
mov
inc
inc
out
lahf
ljmp
in
sbb
xchg
jle
dec
out
add
in
fisttpll
or
cltd
jp
mulb
mov
xchg
inc
and
mov
lock
mov
in
pusha
pop
push
sahf
fistps
cs
xchg
call
adcl
test
mov
or
jbe
fstl
mov
mov
or
scas
jnp
jl,pt
push
ds
jae
repz
mov
in
pop
pop
bound
jae
int3
cmp
add
or
je
loopne
ja
xor
sbb
xchg
pop
dec
xor
adc
mov
fimuls
inc
dec
in
pop
mov
pop
imulb
movsb
out
jp
fcoml
icebp
arpl
lcall
add
sbb
adc
aaa
mov
jnp
add
ljmp
sub
pop
push
popf
aam
xor
push
mov
scas
mov
mov
out
shll
into
mov
movsb
mov
push
jb
cmpsb
xor
mov
enter
daa
dec
in
cmp
lcall
xor
dec
int
mov
movsl
addb
out
call
push
mov
adc
push
mov
sbb
sub
pop
ffreep
outsl
js
push
and
sbbl
sub
or
outsb
mov
xchg
fcom
mov
jb
fildl
subb
filds
or
ret
int
pop
push
sub
dec
dec
pop
aaa
mov
test
popf
push
adc
push
sub
repnz
adc
test
or
addb
jg
and
mov
inc
pop
mov
dec
scas
and
sub
cmp
adc
shl
jo
push
lret
cmc
rcrl
test
roll
sub
inc
mov
or
inc
push
loop
loop
stc
fucomi
iret
mov
out
data16
inc
lods
pop
mov
mov
leave
mov
sub
cmp
setns
or
dec
dec
icebp
adc
xor
loopne
lcall
lods
inc
imul
push
jp
pop
or
xchg
in
push
sbb
xchg
jae
xlat
jo
pop
sub
mov
jns
jmp
sbb
aad
repz
dec
push
jle
inc
mov
leave
les
icebp
fld
lret
dec
lea
mov
add
cmpsl
aam
or
scas
pushf
push
arpl
mov
mov
mov
call
push
fdivs
sub
dec
loopne
out
je
insb
cmpsb
jecxz
dec
adc
and
sbb
mov
stc
je
sub
dec
dec
das
mov
mov
mov
mov
add
das
cmpsl
call
push
mov
shll
rcrl
dec
repnz
or
iret
dec
sub
xor
xchg
data16
pop
jl
cld
dec
jecxz
mov
push
jnp
mov
push
xor
inc
sub
or
ret
loopne
imul
cmp
xchg
mov
jbe
popa
cmp
lods
xor
out
mov
rcl
pop
xchg
sbb
lcall
jnp
add
mov
push
jnp
jmp
push
xchg
ljmp
jo
jb
jbe
dec
sbb
iret
into
pop
jne
sub
jecxz
jae
or
inc
cmp
xor
das
or
xadd
les
push
lea
lahf
or
pop
repnz
stos
ja
int
dec
pop
push
movsb
inc
dec
mov
mov
gs
out
pushl
fdivl
jle
loopne
jge
and
ss
push
jp
int
pop
out
adc
pop
or
out
popf
scas
pop
out
jp
or
cli
mov
inc
add
jle
add
in
fldenv
fistpll
pop
cs
mov
jae
xor
imul
cmpsl
ds
fmul
pop
mov
adc
mov
and
loopne
flds
scas
lret
lret
dec
shrl
add
sbb
pop
push
loop
push
decl
jae
cmpsb
lods
inc
dec
cmpsb
jge
sarl
push
idivb
into
and
xchg
mov
lret
sbb
mov
imul
mov
lds
mov
cmc
inc
leave
mov
mov
pusha
leave
sbb
dec
hlt
daa
pop
xchg
arpl
push
jbe
mov
jge
lods
test
rcll
aaa
pusha
mov
add
int3
and
negl
mov
xor
mov
sub
addb
movsb
push
rorl
cmpsb
mov
adc
enter
daa
dec
xchg
cmp
dec
sbb
pop
or
dec
cmp
mov
dec
jb
movsl
mov
cmpsb
and
lret
lea
dec
jns
xchg
js
push
pop
repz
inc
test
jg
xchg
lret
push
ljmp
rorb
ljmp
sub
push
inc
cmp
jae
outsb
add
repnz
fs
cmp
test
inc
rcrb
shl
or
out
pop
leave
int
inc
and
scas
cmp
pop
mov
ja
pop
aam
push
push
jmp
dec
or
sub
call
test
mov
jg
movnti
cltd
enter
stos
dec
and
jno
mov
mov
test
das
out
cld
lret
scas
shll
scas
sbb
lock
dec
push
fnsave
push
xchg
iret
loop
arpl
sbb
mov
cmc
shrl
aas
adc
mov
dec
out
cli
pop
pushf
out
xor
or
or
inc
lock
gs
fldenv
into
dec
inc
adc
mov
adc
fstp
add
fwait
std
xchg
test
push
sbb
iret
mov
sub
arpl
in
jmp
jge,pn
dec
aad
test
nop
mov
jb
inc
mov
mov
repz
into
into
ret
test
mov
mov
ss
sub
fistl
pusha
and
pushf
adc
adc
inc
xchg
and
add
xor
lcall
dec
push
cld
repz
loopne
jecxz
movsb
mov
push
div
cwtl
push
dec
push
mov
js
dec
sbb
sbb
push
repnz
pop
in
das
xchg
jnp
loopne
and
fs
shrl
pusha
es
scas
insl
pop
mov
aam
dec
push
xor
xor
jge
repz
adc
hlt
and
into
adc
pop
jbe
add
out
sub
nop
aam
or
js
stc
gs
fstpl
rorl
xchg
int3
ljmp
mov
mov
xor
mov
loop
punpckhdq
jmp
cltd
fbld
pop
test
or
out
mov
cmp
xchg
arpl
xor
lcall
dec
or
push
xchg
call
jmp
aas
xor
cmp
or
repz
mov
pop
mov
adc
mov
xor
mov
dec
cli
push
jl
std
adc
or
adc
fwait
lcall
jne
cmp
out
pop
sbbl
cwtl
js
outsb
ret
jl
ficoms
xchg
sbb
or
aaa
popf
pop
sub
add
xor
jae
insl
mov
ret
popf
sbb
jle
pop
adc
scas
xor
fistps
ret
xchg
addl
sub
dec
xchg
adc
xorl
ret
push
mov
popf
add
rclb
inc
pop
stos
mov
lcall
mov
rclb
mov
iret
popa
out
sti
ret
rcrl
inc
inc
inc
cwtl
ljmp
push
mov
cli
push
jne
cltd
fiaddl
rcrl
imul
test
rclb
push
mov
add
shlb
jb
arpl
pop
mov
push
sti
mov
aaa
pop
das
or
adc
add
or
xchg
push
arpl
xor
or
iret
scas
jne
or
cmp
adc
in
dec
cltd
mov
daa
dec
stos
sarb
pusha
xlat
popa
jno
test
stos
arpl
imul
movsl
nop
inc
push
and
and
pop
push
lea
and
pusha
inc
aaa
in
icebp
pop
push
lcall
cmc
movsb
js
int
pop
incl
stc
loope
stos
shrl
outsb
jle
addr16
mov
add
rcl
aas
lea
or
das
sbb
in
add
add
push
icebp
lret
cli
int
push
and
sub
dec
pop
xor
add
fdiv
pop
arpl
inc
adc
sahf
push
or
test
and
jg
pop
mov
mov
dec
mov
pop
inc
and
into
ss
les
cmp
mov
imul
adc
lret
jo
dec
movsl
mov
test
sbb
lods
addr16
adc
mov
out
lret
sbb
dec
pop
jg
movsb
cmp
inc
sbb
lods
orb
sub
cmp
xor
cmpsl
aas
cmp
fstl
adc
loopne
pusha
sbb
in
jb
insl
cmp
imul
mov
pop
xchg
imul
xchg
sbb
cmp
ss
sub
out
mov
dec
leave
mov
fistpll
loopne,pn
mov
nop
xchg
test
dec
adc
inc
mov
push
fldcw
push
loope
cmc
sub
rcll
inc
call
xor
jle
fldt
stos
pushf
shlb
pushf
mov
or
mov
lock
cmp
fisttps
xchg
cld
je
test
inc
imulb
mov
call
mov
pop
jb
into
sbb
dec
add
das
xchg
mov
mov
ja
lock
xchg
aas
mov
xchg
test
and
test
and
cli
push
insl
inc
or
push
fsubl
stc
push
mov
cld
sbb
jo
mov
adc
mov
xchg
adc
sub
and
data16
repz
clc
clc
pop
test
push
dec
ljmp
ljmp
cmc
inc
out
cwtl
or
pop
adc
cmp
test
cltd
push
pop
mov
mov
xchg
fldl
and
pop
jecxz
je
xchg
sbb
pop
iret
shr
mov
lret
pop
cmpsl
stos
cmp
push
add
add
sbb
xor
int3
push
jg
pop
pop
addr16
adc
pop
push
sbb
dec
in
jp
inc
xchg
cwtl
or
outsb
fwait
leave
inc
rorb
mov
neg
jnp
lock
push
bound
hlt
pushf
in
jo
xchg
imul
out
cwtl
mov
lcall
lods
xchg
push
test
pop
push
sbb
mov
jno
jle
test
mulb
std
dec
fistpll
xchg
push
jg
jmp
fmull
add
pop
push
dec
mov
popf
sub
mov
mov
stos
adc
insl
and
mov
jnp
fwait
aad
xchg
incl
adc
jecxz
shr
ret
or
les
jae
es
inc
push
inc
rorl
in
push
hlt
gs
ficoms
push
int3
jb
adc
push
icebp
mov
dec
mov
sub
mov
pop
jle
leave
or
xor
arpl
sub
jb
jge
sub
mov
or
ljmp
cli
js
pop
mov
push
push
inc
xchg
mov
dec
mov
aas
scas
push
test
test
idivb
repz
xchg
push
pop
out
cmpsb
mov
repnz
enter
daa
dec
push
test
xchg
sbb
cmc
loopne
jl
adc
sbb
mov
arpl
mov
outsl
lahf
movsb
lods
es
sub
subl
mov
sbb
in
js
out
pop
ds
push
jnp
loope
mov
pop
cmp
pushf
outsb
lret
adc
sbb
cmp
loop
dec
sbb
adc
jno
ret
mov
int
dec
jle
movsb
ffreep
pop
mov
lcall
sbb
sub
ja
sahf
cli
aam
test
add
jg
repnz
mov
push
pop
mov
push
and
les
ds
outsl
cmp
inc
sub
and
rcr
dec
mov
mov
movsb
into
push
pop
gs
fimull
in
outsl
lods
dec
xor
in
add
stc
add
push
adc
mov
fimuls
sub
nop
cli
mov
or
out
push
daa
jmp
gs
loopne
pop
or
push
adc
inc
imul
in
and
xchg
cs
mov
jne
xlat
sub
dec
cltd
mov
mov
imul
inc
lds
sti
ficoms
jo
or
jmp
dec
les
mov
aam
lea
aam
mov
arpl
pop
mov
fcoml
push
adc
mov
pop
inc
insl
and
mov
inc
cmp
push
aas
fsub
xor
addb
dec
inc
lret
js
arpl
ret
and
std
lret
cwtl
xchg
xchg
in
mov
mov
push
dec
lock
fisttpl
mov
cmpsb
scas
mov
popa
jb
adc
push
inc
repz
dec
push
outsb
and
inc
leave
roll
push
sub
jge
push
dec
sbb
sti
cmpsl
dec
mov
ljmp
pop
lretw
rcrl
pop
repz
mov
mov
inc
rclb
mov
ret
iret
push
jg
mov
clc
xor
pop
dec
inc
ljmp
js
jne
inc
mov
sti
push
icebp
xchg
in
sub
rorl
sub
movb
add
xlat
test
sub
xchg
jno
dec
mov
pop
xchg
mov
roll
jg
jbe
jnp
daa
shl
push
int3
adc
add
and
lahf
xor
inc
or
imul
or
xchg
stc
gs
and
lea
add
cmp
or
or
xor
dec
nop
das
mov
mov
out
sbb
lods
bound
imul
hlt
xchg
mov
or
stc
sbb
stos
mov
jp
mov
mov
into
and
ljmp
mov
fcomp
fwait
out
cld
xchg
sub
inc
jmp
cmpsl
movsl
mov
push
dec
and
adc
lods
popf
push
insl
ret
mov
int
jg
xchg
xor
out
jnp
in
lock
hlt
pop
xchg
push
pop
mov
es
pop
out
ret
mov
inc
scas
mov
sub
cmp
or
pusha
std
cmc
inc
jae
sub
out
add
rcll
ficoms
outsl
rolb
mov
stos
adc
leave
addb
or
arpl
push
jbe
add
jge
inc
sub
xacquire
popf
and
or
jbe
add
insl
jno
in
je
in
mov
xor
ret
scas
xor
sub
cmp
popl
cmpsb
ds
das
fmul
pop
xchg
daa
dec
xorl
jno
popa
fistpll
out
dec
mov
ds
dec
movsl
sahf
rclb
push
push
jno
ret
movsb
lods
push
popa
test
mov
mov
dec
pop
jnp
sub
pop
jge
push
push
fbld
loope
mov
adc
repnz
xchg
outsb
sub
pop
cmc
push
push
daa
loop
cmc
pop
daa
sbb
push
add
dec
push
inc
push
scas
push
testl
push
pop
xor
lcall
lods
fmull
mov
sahf
popf
xchg
cwtl
test
int3
dec
subb
les
cmp
mov
rcrl
outsl
fldl
andl
mov
lret
lret
shll
mov
pushf
mov
adc
cmc
into
add
sti
cmc
mov
mov
sti
loop
and
stc
mov
call
adc
xchg
cmp
lods
hlt
or
mov
adc
sub
fsqrt
repnz
nop
xor
cld
lods
or
data16
pop
outsb
shlb
loopne
jne
pop
sub
adc
cltd
mov
adc
jae
add
mov
mov
xlat
insb
jnp
sub
nop
mov
and
pop
mov
cmpsb
pop
aad
and
nop
dec
insb
fmuls
adc
lea
fsts
xor
les
js
xlat
mov
lea
jp
xor
or
jle
adc
and
jmp
push
jp
out
faddl
push
xor
pop
adc
ja
pop
jb
mov
dec
mov
xor
int
xor
or
jno
movsl
cwtl
dec
popf
or
mov
and
dec
fisttpl
fstpt
mov
jae
lock
dec
mov
and
add
push
mov
std
xor
push
jbe
add
insl
push
andl
adc
test
cmp
mov
inc
cld
jae
test
inc
jmp
and
lahf
in
pop
roll
pop
shlb
or
repz
lahf
popa
pop
ret
sbb
js
inc
imul
negb
outsb
fs
pushf
cli
ljmp
mov
mov
pop
push
pusha
xchg
xor
test
ja
idivb
test
add
iret
dec
xrelease
test
jle
xchg
rcrl
dec
mov
lcall
stos
push
fcmovnu
push
outsl
dec
mov
cmp
push
xor
aad
or
dec
cmp
jbe
mov
mov
fidivs
ja
je
dec
shrl
inc
ret
or
cmp
jae
insl
jne
inc
je
cmpsb
hlt
sbb
cli
pushf
pop
leave
and
jns
inc
shl
mov
xor
shr
sub
hlt
movsl
fisubl
adcl
mov
cld
out
es
pop
mov
ret
xchg
cmp
es
pop
fistpll
adc
jmp
jb
outsl
and
or
sarl
push
popf
js
xlat
mov
or
mov
jge
mov
jnp
add
scas
push
add
push
data16
adc
jmp
adc
xor
pop
inc
mov
mov
inc
pop
mov
or
fistpl
inc
repnz
pop
xchg
adc
cld
imul
int3
fidivs
jg
lds
shlb
mov
fdivl
div
shl
push
int
arpl
mov
push
add
jge
aas
inc
sbb
mov
or
mov
add
out
int3
shrb
imul
shll
xlat
cmp
jo
cmpl
cmp
scas
movsb
inc
daa
xlat
push
std
mov
in
add
enter
daa
dec
xor
cmp
testl
or
dec
clc
into
mov
aam
push
movsl
movsl
xchg
in
stc
xlat
lahf
loop
inc
push
rcl
leave
test
test
add
mov
outsb
leave
js
fcom
pop
mov
imulb
loope
sti
je
push
aam
cmp
push
jle
fmuls
jle
shl
xchg
or
sbb
xor
dec
in
cli
fdivl
es
sub
daa
cmc
lcall
pop
fdiv
pop
add
push
mov
test
in
or
sub
mov
xchg
mov
jno
and
cmp
xor
fdivrs
sahf
test
dec
mov
cmp
stos
push
negb
aas
xchg
outsb
into
in
pop
cmc
push
scas
sbb
movups
adc
stc
outsb
jnp
fs
adcb
add
lods
ret
mov
cmp
sub
cli
and
inc
cmp
dec
sbb
xor
stos
jl
push
loopne
sbb
adc
xchg
shrb
fcoms
dec
ret
add
xorb
cmp
mov
fucomp
sub
cmp
in
nop
add
sti
in
xchg
add
or
ljmp
insb
and
gs
pop
les
test
fidivrl
movsl
call
mov
sub
jne
adc
jl
imul
push
inc
outsl
dec
xlat
aas
push
pop
aam
sub
mov
mov
divb
std
sbb
cwtl
or
adc
jmp
shr
dec
cmp
jae
mov
fldt
mov
popa
mov
lret
das
add
and
and
jb
shll
xchg
insl
cmc
xchg
cmp
enter
sbb
mov
mov
fcmove
scas
sbbl
mov
bnd
sarb
sbb
xor
ret
stos
insb
xor
add
pop
ds
test
lret
out
and
and
mov
rorl
xchg
jnp
lcall
in
add
adc
cltd
mov
jle
mov
and
dec
pop
ss
test
mov
xchg
pop
int3
sbb
xor
pop
int3
xchg
mov
push
adc
add
push
adc
fldl
or
cmp
xor
sub
cmp
mov
cltd
mov
ja
push
testl
mov
lds
pop
add
or
imul
add
push
std
jns
pop
movsl
in
mov
mov
sub
out
lds
jp
or
test
aad
jle
dec
dec
in
jle
pusha
rcrl
fldenv
xchg
iret
daa
xchg
jmp
cmp
mov
push
xchg
sarl
lahf
dec
je
fcomps
push
dec
rcl
insb
inc
mov
xchg
sub
insb
inc
jge
jnp
faddl
mov
sub
mov
ret
inc
pop
imul
push
inc
pop
pushf
orb
dec
mov
fimull
and
pop
and
lcall
sbbb
pop
cmpl
fidivrl
outsb
dec
js
sahf
mov
inc
jbe
jbe
jge
sbb
dec
aaa
sbb
dec
or
lods
and
pop
xchg
mov
aad
push
out
loope
xor
js
sub
popa
sbb
cmp
mov
push
dec
sahf
out
cmpsb
inc
xor
in
call
std
in
dec
cmp
sub
xchg
jno
iret
or
bound
and
add
mov
push
lahf
add
jle
gs
scas
push
push
cmpsl
or
jae
in
data16
clc
pop
leave
or
pop
sti
jge
push
ret
mov
inc
cmp
outsb
repz
pop
sbb
adc
jmp
push
mov
dec
xor
mov
pop
xor
lea
dec
pop
xor
lcall
out
mov
aaa
or
cmc
add
mov
sub
xchg
jge
in
push
imul
sahf
ss
push
fstpt
jbe
lock
roll
shll
sbb
add
and
xor
mov
outsl
dec
ja
loop
idivl
and
inc
dec
adc
jp
lods
ret
mov
out
xchg
or
pop
pop
shll
pop
and
push
or
js
gs
clc
cmp
mov
push
adc
and
adc
jp
add
mov
sbb
imulb
dec
sub
pop
sub
sti
push
sti
fwait
rol
cs
test
aad
push
adc
lea
add
flds
mov
xor
add
lea
pop
sub
xor
pop
pop
cmpsl
and
pushf
insb
in
xchg
jmp
mov
pop
sub
hlt
inc
aaa
add
inc
mov
inc
jb
lods
dec
stos
dec
add
pop
jecxz
pop
sub
mov
xchg
std
mov
movsl
mov
inc
gs
or
dec
mov
xchg
fcmovnu
adc
adc
and
and
sub
mov
adc
addr16
and
es
fsts
insl
fmull
cmpsl
dec
adc
mov
xorl
push
mov
pop
and
aad
pusha
pop
adc
ret
rorb
dec
inc
aam
xchg
lcall
mov
fstp
sub
clc
in
xchg
xchg
sbb
ljmp
and
adc
xchg
ret
push
cltd
jo
cmovne
add
mov
test
or
dec
ror
test
sub
xchg
sbb
mov
stos
hlt
cmp
add
jno
cwtl
jl
js
jo
sbb
test
into
xor
push
adc
test
sarl
push
xchg
dec
loopne
dec
mov
or
or
push
aad
test
dec
cmp
movsb
jne
cmp
mov
sti
fsubr
mov
sub
add
xchg
and
cmpsl
imul
ss
cmp
addr16
sbb
pop
int
mov
mov
mov
jle
jle
gs
in
lret
mull
mov
or
decb
movsl
cmp
notb
pop
mov
or
mov
dec
stos
cmp
stos
call
es
jns
scas
sbb
or
jo
addr16
cmp
xor
mov
js
mov
imul
cltd
push
dec
inc
pop
div
or
rcl
push
inc
lock
fiaddl
mov
inc
sbb
ljmp
jge
ljmp
sar
mov
movsb
or
in
fwait
hlt
jmp
sub
jbe
pop
xchg
jge
loopne
sbb
xor
aaa
fisubl
or
push
push
add
dec
lret
sub
pop
jno
ret
push
shl
leave
xor
rcll
fisubs
hlt
add
and
mov
fucomip
iret
cmp
popa
daa
dec
and
pop
cmp
jno
mov
int3
dec
aas
idivb
sbb
movsl
mov
nop
and
std
xchg
lahf
and
shrl
sbb
sub
fistpll
sbb
pop
cmp
push
inc
pop
loope
in
sub
mov
cmp
iret
outsb
push
and
rolb
mov
xor
mov
rolb
xor
xlat
or
sub
sbbl
dec
jge
sub
stos
dec
sahf
xchg
test
cmp
xor
call
sub
pushf
lret
enter
pop
ss
pop
adc
xor
aaa
imull
xor
sarl
pop
mov
fistps
cmc
idivb
popa
outsl
sub
in
cmp
in
fs
push
stc
adc
leave
mulb
add
add
out
sub
cli
mov
repnz
or
lods
or
mov
mov
loopne
stos
ds
mov
sub
adc
cld
xor
inc
lea
sbb
xor
in
xlat
sub
shrb
cltd
lds
mov
movsw
inc
sti
dec
shr
cs
xchg
pop
sbb
nop
fstp
xor
inc
adc
xchg
aam
add
loopne
pop
out
gs
call
scas
cmc
fcomps
and
pushf
pop
sbb
mov
iret
or
inc
movsl
fdivl
push
loop
jb
divl
je
jle
jecxz
dec
inc
idiv
aas
aam
data16
jmp
andb
mov
and
mov
clc
add
adc
fisttpl
and
ret
loope
mov
lock
das
rorb
mov
sahf
icebp
push
roll
mov
mov
mov
dec
push
cli
and
mov
cmp
test
hlt
or
jnp
stos
mov
mov
xor
fsubrs
fsubs
aam
stos
cmp
leave
sbb
push
mov
clc
pop
pop
pop
insl
ljmp
lods
and
mov
out
xchg
or
je
stos
shld
cmp
aam
sub
xor
mov
daa
pop
xchg
jle
dec
sub
test
bound
out
in
sbb
addr16
xor
lahf
push
xor
stos
jecxz
pop
push
pop
cmpsl
mov
mov
lcall
mov
ret
inc
fmull
pop
std
iret
xor
fisubs
jmp
lcall
out
lahf
ja
fcompl
inc
xchg
sub
sbb
mov
into
js
mov
adc
xchg
fcmovbe
bound
addl
loope
xchg
idivb
mov
sub
in
xor
jp
pop
adc
mov
dec
in
push
jle
jbe
in
jl
pusha
idiv
mov
xchg
jne
cmp
cmc
nop
mov
rcrl
fcmovu
push
sbb
ja
in
mov
or
leave
xchg
fldt
ret
insb
sbb
int3
jnp
fistl
xorb
adc
fwait
iret
fwait
or
add
out
fidivl
inc
les
push
outsl
fidivl
rcll
mov
adc
lds
cwtl
mov
mov
mov
and
mov
hlt
xor
cld
arpl
mov
popa
sbb
fnstenv
cltd
jg
or
mov
add
jmp
pop
mov
fistl
cs
and
push
inc
movsb
jecxz
dec
push
ljmp
in
mov
mov
add
mov
inc
pop
cmp
int
jl
mov
dec
inc
push
sarb
cmp
mov
dec
lahf
aas
test
clc
test
out
je
xchg
in
cwtl
mov
in
cmp
push
pop
pop
jns
fisubrl
jne
loope
nop
fsubrl
movsb
cmp
cmc
or
popa
push
outsl
rorl
inc
jl
sbb
fwait
and
shll
int
jb
sub
adc
loop
inc
fists
test
xor
add
aaa
sbbb
pop
jg
lock
mov
inc
push
mov
jae
mov
jbe
and
jne
test
fsubr
fdivrs
push
sbb
shlb
inc
sbb
stos
das
into
lea
add
mov
hlt
and
loop
sahf
mov
fs
push
adc
mov
lods
nop
leave
inc
mov
es
push
cli
mov
cmpb
adc
in
jp
fcompl
loopne
cmc
pop
cmpsl
jae
adc
cmc
imul
shrb
xchg
std
lea
sbb
insb
pop
mov
sub
mov
shll
imul
pop
lret
aad
fsts
dec
xchg
add
es
fptan
add
mov
jecxz
lea
xchg
call
movsb
inc
pop
or
in
pushf
ret
jmp
push
add
push
rolb
jl
inc
rolb
repz
jb
ja
dec
cwtl
xchg
je
ds
jge
idivb
lock
mov
jg
mov
les
pop
shrb
mov
stos
mov
into
sbb
fistl
mov
push
stos
fidivrl
sub
adc
xchg
fistps
es
les
rorb
jno
cmpsl
inc
lea
icebp
adc
push
lret
cld
jbe
mov
ds
or
pop
dec
push
adc
mov
push
sub
sub
aam
adc
ret
pop
mov
repz
clc
pop
or
leave
ljmp
sahf
lods
mov
xor
test
call
dec
add
dec
ret
push
cltd
pusha
cmp
ret
mov
adc
dec
pushf
iret
test
sub
xchg
push
sbb
push
cmpsl
shl
sbb
stos
shlb
js
pop
mov
mov
iret
lods
or
lods
andl
xlat
test
leave
ja
pop
jge
lahf
pop
inc
push
insb
push
or
jge
fwait
jecxz
loope
dec
lds
adc
out
jbe
cmp
or
jns
mov
in
repz
xchg
inc
dec
or
int3
add
add
inc
or
popf
push
cmpsb
jmp
lock
add
lret
mov
jnp
in
xchg
test
xchg
imul
xchg
dec
movsb
sub
cmp
sahf
pop
int
sbb
sahf
push
fisttps
loopne
mov
sti
push
or
jns
lds
and
fnop
push
insb
xchg
mov
add
scas
jecxz
jno
sub
adc
pop
add
cli
sbb
scas
adc
inc
in
or
inc
gs
mov
push
out
dec
lcall
adc
sbb
repnz
push
mov
ret
aad
lds
sahf
pop
mov
dec
or
leave
rcrl
adc
jg
jo
xchg
nop
imul
adc
cltd
fisubrs
and
or
ror
jle
pop
iret
and
push
cwtl
pop
xor
mov
icebp
scas
mov
inc
and
jnp
cmp
int
push
cmp
stc
in
popf
mov
sbb
inc
push
add
lds
jno
add
dec
mov
imul
rorl
lahf
pop
mov
push
sbb
sub
inc
and
push
scas
sbb
xor
js
test
pop
mov
pop
add
sub
xchg
mov
pop
mov
sub
cmp
data16
xor
and
push
xlat
jns
cld
add
add
mov
bound
push
mov
scas
sub
push
jmp
repz
push
push
and
sbb
lret
sahf
int3
mov
mov
xchg
xorb
jg
cld
push
mov
call
push
mov
jbe
and
les
cmp
cmpsl
sbb
mov
shrl
mov
sti
sbb
cmp
test
inc
outsl
out
xor
pop
shlb
push
stc
fs
add
pushw
subl
mov
adc
and
jne
xor
fs
loopne
sbb
lock
decb
sbb
loopne
mov
adc
xchg
or
scas
je
add
icebp
add
xchg
shrb
cmp
mov
sub
andb
xchg
insl
sti
test
xor
xchg
pop
jno
movsl
bound
xchg
lea
stos
movsl
mov
fldcw
adc
psllq
repnz
lea
or
pop
rcrb
inc
fs
insl
clc
lret
add
inc
int3
iret
hlt
inc
fstpt
push
jb
sub
dec
sets
and
cmc
out
testb
mov
mulb
mov
bound
mov
out
sub
aaa
xchg
testl
xlat
das
jle
mov
jecxz
and
mov
push
shl
mov
pop
insl
xchg
leave
loop
cld
jnp
cmpsl
inc
adc
icebp
ljmp
lret
imul
mov
inc
or
cmpsb
ror
pop
outsb
fwait
jo
xchg
cmc
aam
shl
ret
out
and
adc
clc
xchg
jmp
es
sti
lods
divl
push
out
dec
pop
rclb
sub
add
add
sbb
int
fnstenv
pop
mov
ljmp
lret
dec
add
lock
roll
add
ret
lcall
xchg
imul
stos
mov
jno
sub
jle
add
ja
ja
pop
push
outsl
inc
mov
ljmp
lret
insb
dec
loop
iret
jne
and
out
push
ret
test
xchg
jns
cmp
in
pop
notl
dec
sub
sub
fisttpl
add
mov
push
popf
mov
daa
adc
jle
jne
in
or
sub
xchg
jmp
imul
out
cmp
jmp
stos
cmp
mov
insb
repnz
jnp
jmp
scas
inc
adc
repnz
iret
pop
xor
ret
pop
inc
pop
in
inc
lock
pop
jae
inc
xor
mov
or
loopne
inc
insl
inc
neg
sbb
xchg
ret
test
ret
xor
imul
cld
lds
aas
cmc
shr
mov
repnz
xlat
ss
dec
decb
lret
arpl
shll
sbb
aaa
pop
inc
adc
scas
mov
add
in
pop
inc
push
push
jnp
into
xor
in
sub
lods
add
movsb
stc
or
push
mov
in
test
enter
daa
inc
arpl
cmp
call
jmp
loopne
or
daa
lods
orl
movsl
enter
hlt
xchg
lahf
jge
add
test
jl
ds
scas
nop
fwait
jb
jp
gs
mov
pop
idivl
push
loope
push
repz
push
fnstcw
or
fldcw
jl
adc
pop
in
xchg
ja
andb
sbb
or
add
add
xor
sub
and
sub
into
sub
shlb
lcall
push
fmull
dec
sub
add
test
sub
dec
mov
outsb
mov
ret
mov
mov
leave
call
adc
mov
test
out
ror
or
or
lea
into
push
dec
xor
xor
ds
icebp
adc
test
rcll
arpl
xchg
dec
subl
and
xor
and
and
lods
es
aaa
sbb
pop
divl
sub
xchg
loopne
xchg
pop
in
adc
imul
jns
add
fwait
mov
cmpl
sbb
loop
xchg
out
fwait
sub
inc
cmp
jnp
test
cmpsl
dec
fdivrp
push
imul
aad
fwait
rcll
or
icebp
fldenv
rol
cli
xor
mov
lea
mov
push
sub
stc
pop
jae
sti
adc
lcall
mov
pop
mov
xchg
xor
adc
adc
dec
xchg
je
mov
data16
stos
std
pop
int
cwtl
mov
sub
test
iret
addl
loopne
mov
mov
mov
lock
das
movsb
das
pop
in
sub
dec
mul
and
cmpsb
into
shrl
lods
xchg
adc
stos
insl
js
lret
dec
negl
sub
mov
rcll
test
lret
fiaddl
mov
dec
maxps
lea
rcrb
dec
sub
out
ret
jbe
adc
mov
fnstsw
sar
rcrb
xchg
push
xchg
je
imul
bound
mov
mov
stos
xchg
fidivrs
xchg
xadd
mov
cltd
into
dec
jle
fsub
dec
mov
scas
popa
xchg
mov
pop
ljmp
xchg
sbb
adc
pop
and
add
inc
xchg
fildl
clc
xor
xor
xchg
xor
push
or
mov
push
mov
inc
lcall
test
movsb
inc
dec
pop
cmp
xor
dec
dec
lds
mov
clc
jns
xor
push
bound
mov
jns
mov
in
adc
xchg
jecxz
sti
out
les
sar
dec
or
adc
jp
mov
cmp
and
pop
mov
bound
in
out
pusha
enter
je
push
xchg
out
movsl
icebp
jmp
xor
cmpw
test
gs
lret
adc
mov
xchg
popa
and
dec
jecxz
pop
push
sbb
cwtl
int
test
pop
push
adc
inc
sub
ret
push
pop
jl
scas
inc
sti
xchg
aad
inc
inc
imul
or
mov
mov
test
sbb
dec
mov
mov
fimuls
cmp
lds
mov
sti
repnz
leave
roll
arpl
xchg
jge
rcr
sbb
fisubl
or
mov
pop
sub
js
xor
aas
mov
scas
and
dec
cmp
cwtl
push
push
xlat
leave
popa
cmpsb
roll
xor
hlt
inc
or
cmp
xor
and
mov
cmpsb
xor
and
mov
ret
mov
test
inc
aas
inc
ja,pt
xor
insl
js
mov
pop
ss
shrb
inc
jp
sub
fisubrl
call
or
adc
bnd
cmpb
sbb
iret
add
sahf
pushf
xor
mov
dec
int
push
lret
mov
lcall
or
clc
scas
in
sub
push
test
inc
jg
pop
lods
mov
shll
aas
pop
shlb
xchg
xorb
std
cltd
cmp
sbb
pushf
dec
lret
mov
xchg
or
add
into
sub
adc
xor
out
outsl
movsb
mov
xor
mov
icebp
adc
pop
or
adc
pusha
lods
inc
jae
mov
and
and
pop
xor
jl
or
xchg
lods
decb
cs
fistpl
pop
add
sbb
fadd
fsubrs
xchg
add
lcall
xchg
inc
inc
cmp
sbb
call
sub
xchg
mov
adc
and
push
jns
cs
mov
xor
mov
dec
push
mov
mov
repz
cmp
in
inc
int
mov
call
stos
and
or
adc
ja
pushf
ret
and
jmp
mov
inc
fisubl
test
rcrb
jb
sub
sbb
jecxz
mov
testb
icebp
std
add
int3
mov
mov
mov
adc
dec
lods
inc
fcmovnb
test
mov
divb
in
fwait
imul
push
mov
push
ret
lret
sarl
jge
xchg
dec
jmp
dec
repnz
leave
cmpsl
inc
mov
fcomi
cwtl
jecxz
cld
mov
push
loope
aaa
fs
and
fmull
inc
shrb
sub
adc
add
push
mov
lahf
lret
or
xchg
push
mov
ljmp
and
mov
adc
mov
push
loopne
add
and
add
sbb
mov
bound
lret
les
jge
mov
inc
jne
xor
out
sar
inc
lods
pop
into
fisubrs
in
mov
pop
xchg
and
clc
push
mov
xchg
lret
shrd
xor
and
fbld
push
mov
push
pop
mov
sti
push
cmp
repz
dec
js
sub
mov
mov
stc
fs
test
push
jne
add
and
out
adc
out
xchg
jle
in
and
xchg
xor
jnp
push
aam
sub
shrl
cmpb
shlb
dec
scas
xchg
pusha
inc
xchg
in
sub
fists
hlt
jbe
rcll
xchg
call
or
xchg
sub
popf
mov
mov
lds
stos
push
inc
cmp
push
mov
inc
jnp
or
push
push
sub
push
iret
pop
push
ret
sbbb
test
pop
jae
mov
inc
outsb
test
push
imul
xchg
jno
add
xor
jnp
push
fisubrs
cmpsl
rcrb
leave
mov
inc
push
mov
cmp
mov
jbe
mov
add
aaa
xchg
sbb
jmp
das
adc
push
mov
inc
aas
clc
xor
lcall
and
mov
cmp
xor
cmp
cmpsb
push
repnz
push
outsb
enter
daa
inc
jns
cmp
cli
jno
js
jl
dec
aas
dec
add
ds
push
or
sub
lahf
mov
nop
outsb
test
adc
jmp
clc
dec
dec
pop
mov
xchg
js
xlat
jne
jne
call
loope
movsl
ds
push
dec
cmp
pushf
outsb
inc
shr
adc
int
out
dec
mov
orb
push
add
mov
xchg
cmp
int
call
sub
fcmovbe
pop
sub
push
lcall
cli
fsubl
gs
test
adc
jg
ss
mov
adc
mov
and
add
cwtl
cmp
fsubs
mull
lret
call
mov
mov
into
sbb
cmc
fnstcw
xor
jae
cmpl
loop
pop
sahf
stc
outsl
neg
adc
data16
addr16
lods
sub
pop
mov
pop
out
jmp
push
xor
xchg
cmp
xchg
pop
or
dec
ss
into
sbb
xor
pop
pop
and
imul
jno
add
dec
hlt
xchg
or
cmp
imul
fsubrs
mov
jge
in
mov
mov
mov
cmp
and
orl
mov
jb
nop
fxch
sbb
or
xchg
out
sahf
jmp
icebp
mov
insl
sub
sbb
sbb
ja
jmp
pop
loop
incb
roll
and
inc
sub
mov
jb
jl
dec
je
pop
je
mov
dec
cmc
inc
testb
std
test
fwait
sbb
mov
sub
dec
fcomi
xor
mov
push
jmp
lock
sbb
das
sbb
dec
mov
mov
insl
and
int
sbb
sbb
inc
insl
inc
or
dec
in
adc
cmpsl
inc
mov
mov
outsl
xchg
dec
cld
lret
dec
loop
mov
cld
shll
ja
inc
pop
lret
pop
lahf
sar
xchg
sub
pop
aam
xchg
jo
push
pop
imul
clc
inc
negb
ljmp
shrb
mov
out
jbe
ds
insb
mov
mov
add
xchg
iret
sbb
out
ret
lahf
pop
cltd
xchg
jg
dec
sub
shrl
push
lret
pusha
cmc
rcll
and
xor
xchg
add
adc
pushl
fs
xor
inc
or
adc
dec
sub
out
cmp
mov
fcomps
jae
or
fwait
cmpsl
ja
addb
sub
or
cmp
mov
mov
jne
mov
mov
out
pop
out
repnz
popa
das
sti
jns
pop
pop
in
test
xchg
xorl
pop
sub
int3
aad
addr16
jp
sti
aad
lds
stos
mov
je
mov
sbbl
in
int
pusha
jmp
fbstp
ja
jmp
lret
sbbl
push
jmp
aad
mov
ja
jne
mov
scas
das
stos
xchg
or
xor
adc
jnp
inc
ljmp
sahf
pusha
repnz
mov
sti
push
rcrl
push
loopne
adc
leave
jae
xchg
xor
xchg
push
or
mov
das
inc
ljmp
xchg
enter
lock
and
insb
scas
lds
or
repnz
ja
leave
scas
adcb
stos
outsl
pop
arpl
nop
icebp
jbe
pop
and
and
sbb
lret
cld
or
int3
fs
sub
inc
pop
mov
and
push
xor
cmc
mov
movsb
and
inc
cmp
addr16
lcall
cmpsb
fsts
in
cmp
enter
daa
inc
dec
aam
xchg
jmp
aam
popa
add
dec
jo
fnstsw
in
arpl
lahf
fimull
loopne
imul
jmp
pop
adc
mov
aaa
xchg
js
mov
leave
push
add
loope
add
sub
repz
mov
hlt
adc
test
inc
scas
push
pop
andb
cmp
into
pushl
xchg
out
int
fstl
sub
xor
stos
ret
pop
lcall
dec
fmull
inc
sub
pop
and
mov
push
mov
or
imul
mov
faddl
mov
xchg
clc
std
mull
mov
pop
rol
lret
mov
in
sbb
cmpsb
jecxz
mov
stc
lds
mov
movsb
stc
es
fs
mov
adc
movsl
subl
ret
sahf
out
fwait
inc
cli
mov
les
cmp
addb
sahf
dec
jmp
enter
jo
jle
pop
imul
jmp
add
movsl
ficomps
xchg
mov
outsl
sub
call
in
cs
rcl
rcrl
dec
es
in
test
flds
les
fidivl
repnz
lea
and
jo
cmpsb
test
orl
sbb
cmp
adc
inc
inc
jae
aas
push
rorb
dec
jmp
imul
jecxz
jge
testb
cwtl
loop
les
andl
dec
push
jae
test
adc
call
mov
outsl
shlb
je
mov
rcrl
lock
sub
outsl
mov
sub
icebp
inc
insl
gs
imulb
lret
daa
mov
mov
popa
jae
mov
ljmp
sub
push
inc
ret
and
push
fucomp
js
clc
andl
pusha
ljmp
and
mov
js
out
fxtract
push
xchg
mov
dec
push
xchg
dec
push
pmaxub
out
cltd
jae
lds
cwtl
and
xchg
rcrl
scas
adc
cltd
movsl
sbb
test
dec
scas
stos
jge
cmp
sub
xchg
add
cs
call
add
xor
lahf
lahf
xor
ret
std
xchg
cwtl
mov
rcrb
pop
jno
pop
ja
xchg
cli
dec
pop
xchg
inc
adc
or
jg
fwait
into
aaa
and
ds
jne
jae
mov
mov
out
rol
pop
hlt
mov
xor
xchg
rcrb
sub
xchg
lods
addr16
jp
ss
mov
clc
push
mov
jecxz
sub
loope
in
xlat
insb
pusha
cltd
mov
or
mov
inc
test
out
pop
push
scas
inc
pop
popf
xlat
outsb
sbb
inc
jb
stos
add
dec
and
insb
sahf
xor
jnp
cmp
scas
rol
inc
push
in
push
adc
and
aad
mov
push
data16
and
inc
sbb
adc
loop
inc
je
outsb
or
cs
inc
imul
jge
pop
mov
xor
fdivp
repz
sub
scas
mov
jmp
hlt
aad
idiv
out
loope
lods
jbe
jo
jge
and
aaa
adc
orb
movsb
sbb
pop
mov
int3
adc
xlat
pop
mov
test
sbb
push
inc
scas
jmp
sub
xchg
movsb
and
loopne
cmpsb
pop
daa
push
in
and
daa
inc
lahf
sarb
les
jno
es
pop
dec
fildll
punpckhdq
and
stos
lahf
stc
daa
inc
push
cmp
push
sbb
cmp
jle
sbbb
js,pt
xor
pop
repz
arpl
insl
scas
loope
xchg
sub
mov
mov
cli
stos
adc
subl
or
stos
cld
sbb
popf
icebp
add
xor
mov
adc
sahf
inc
sub
xor
mov
push
aad
ja
stc
pop
push
sub
sbb
test
nop
jmp
mov
xor
mov
adc
add
cmp
cmp
dec
and
lret
sbb
pop
mov
aam
out
mov
mov
xor
popf
fisubrs
inc
cmp
cmp
outsl
sub
iret
adc
call
daa
lods
cli
and
inc
dec
lahf
out
shll
xor
mov
cmp
inc
rorb
std
int
mov
xchg
gs
loope
loopne
xor
adc
jns
mov
mov
xchg
xchg
popl
push
sbb
into
push
out
loop
xor
mov
aad
in
push
outsb
mov
adc
test
aad
imul
test
inc
cwtl
and
les
scas
inc
repz
stos
lea
adc
pop
aas
iret
js
lret
dec
xchg
pushf
les
xchg
pop
inc
adc
inc
outsl
dec
lods
inc
bound
aas
lods
xor
dec
bound
adc
push
out
std
divl
clc
cwtl
popf
mov
xor
loop
xchg
dec
or
fistl
in
mov
jnp
mov
xor
outsb
das
fprem
nop
mov
sub
andl
jne
es
popf
pop
insl
adc
mov
pop
or
pop
or
icebp
sbb
gs
xchg
or
mov
push
mov
pop
or
pop
sub
jns
ret
mov
mov
fstl
repz
mov
sbb
ljmp
mov
add
cmp
jno
xor
cmp
lcall
add
shll
push
inc
mov
je
test
or
push
sahf
mov
add
add
insb
push
mov
int
cld
add
dec
test
je
sbb
or
or
dec
xor
addr16
push
mov
cmp
mov
sub
or
fisttps
bound
test
push
or
xchg
pop
fwait
std
cld
sahf
dec
push
fs
dec
ret
xor
cld
out
mov
cld
bound
xor
in
inc
xchg
xchg
pop
inc
pop
out
mov
orb
jmp
jp
es
mov
cld
aas
mov
push
pop
cmp
sahf
add
or
xor
push
fcomip
dec
out
xchg
cmp
sub
mov
xchg
pusha
aas
in
xorl
push
jno
rcrl
jmp
mov
mov
jecxz
arpl
adc
stos
jnp
imull
scas
xor
rep
adc
xor
xor
xor
and
inc
daa
in
jae
je
inc
ja
sbb
test
ret
scas
ficompl
out
sbb
call
icebp
ficoms
ss
pusha
mov
cmp
sub
popf
or
arpl
sub
jge
add
xorb
mov
add
push
jp
jmp
dec
xor
stos
hlt
dec
scas
enter
mov
dec
movsb
mov
notb
sbb
cmpsb
fildll
in
pop
xchg
jae
loopne
mov
inc
js
cmp
insl
ret
jno
xor
jl
out
pop
dec
dec
mov
mov
jmp
stos
and
sub
lahf
sbb
push
subps
push
jae
mov
jp
rcl
inc
fwait
jns
sub
test
xor
movsl
push
clc
loope
cs
cmp
enter
inc
adc
pop
xlat
insb
test
add
popf
sbb
call
xor
fistpll
int
inc
or
pop
test
pop
lcall
in
movsb
and
sahf
sahf
xchg
xchg
add
xchg
mov
mov
andl
idivl
ss
fimuls
cmp
or
inc
mull
xor
repz
mov
sbb
repnz
xor
insl
outsl
and
jmp
stc
xchg
mov
or
inc
mov
data16
loope
lret
imul
pop
mov
and
pop
cmp
fadds
ficompl
dec
gs
add
pop
mov
imul
pop
pop
xchg
push
fcmovnbe
sbb
or
sub
jns
mov
mov
pop
daa
cs
cmp
dec
xchg
dec
nop
mov
ret
jae
inc
stos
add
les
sahf
repz
xchg
clc
pop
mov
imul
pop
repnz
sbb
and
inc
jmp
popf
call
inc
idiv
and
aas
dec
xchg
jb
mov
je
mov
jecxz
pop
ja
adc
jne
pop
add
mov
xchg
addr16
test
dec
hlt
mov
xorb
fistpl
jns
add
addr16
adc
jnp
push
je
mov
testb
mov
dec
cs
fsubp
in
aas
imul
mov
hlt
xchg
lret
add
jl
and
dec
out
pop
sub
lahf
sarb
imull
nop
addr16
xor
ret
inc
outsb
das
push
mov
mov
clc
divl
je
push
inc
loopne
insl
inc
xchg
popa
xchg
out
ja
jns
inc
mov
lahf
notl
push
dec
neg
setl
push
add
mov
popl
fidivs
dec
pusha
or
test
fidivs
sbb
dec
jne
push
jge
pop
jp
jecxz
pop
lds
add
fs
add
pop
push
mov
xlat
mov
mov
add
movsl
pop
out
pop
ja
dec
loop
inc
repnz
cmpsl
ret
or
jg
fwait
sub
push
dec
xor
and
jne
mov
mull
fnstcw
bound
outsb
sbb
jo
cmp
js
lret
xchg
outsb
xor
sub
mov
jns
jp
leave
mov
dec
and
mov
shl
jle
dec
inc
in
adc
in
fisttps
mov
xchg
or
fsub
xchg
sub
es
xor
bound
es
push
roll
and
cmp
pop
jnp
jns
scas
cwtl
les
adc
icebp
inc
iret
xchg
or
pop
adc
cli
jae
dec
cmpsb
inc
jp
orl
xchg
into
inc
rcrb
dec
xchg
mov
lds
sbb
or
fidivrs
fists
lds
xchg
push
rorb
mov
jmp
leave
adc
shl
push
popf
arpl
jbe
mull
jb
push
sbb
cmc
cmc
or
mov
inc
je
int3
jmp
cmpsl
ss
int
lcall
mov
pop
and
jnp
cmp
test
cmp
push
bound
pop
in
out
addl
daa
aas
aad
cmp
jns,pt
loopne
adc
loop
jmp
mov
push
iret
movsl
repnz
and
jb
push
loop
call
push
ds
loop
or
push
add
cltd
pop
dec
adc
cmp
jno
jg
cmpsl
pusha
add
lahf
stc
jb
scas
aas
repnz
mov
outsb
shl
lock
cmp
test
sbb
nop
add
mov
push
sbb
jecxz
jecxz
mov
daa
cmpb
fsubs
subl
adc
sahf
inc
rcrl
cmp
inc
jg
mov
xchg
mov
mov
dec
movsl
clc
mov
fadd
cs
mull
mov
mov
xor
inc
xchg
dec
into
movsl
push
mov
cmc
mov
xor
popa
cmp
arpl
stc
dec
jns
fs
adc
adc
push
mov
sbb
push
cli
push
sahf
cmp
mov
into
cmp
inc
jl
stc
pop
lret
std
inc
mov
loopne
test
pop
lahf
inc
mov
neg
mov
test
push
cli
add
or
mov
inc
jge
pusha
push
pushf
sub
adc
sti
jno
sbb
aad
daa
jecxz
nop
push
dec
inc
movsb
and
push
inc
fldcw
cmpl
sti
xchg
lea
xchg
es
pop
movsl
sbbb
sbb
ljmp
repnz
jge
loop
cwtl
dec
mov
jb
rol
push
add
je
adc
jecxz
lods
std
notb
sar
lds
adc
into
mov
add
jo
adc
mov
scas
or
mov
pop
das
xchg
push
andb
pop
push
and
jmp
rorl
jb
es
lahf
insl
loop
dec
dec
fprem
cmpsl
ds
xor
lret
leave
movsb
cld
ja
fwait
lret
je
cmp
and
jecxz
and
rorb
js
xchg
aam
cmp
push
dec
inc
frstor
adc
xor
in
xchg
nop
testb
stos
dec
pop
lods
in
out
mov
add
xchg
mov
std
push
daa
imul
add
sbb
test
imul
sbb
sbb
test
dec
jmp
data16
sbb
fs
pop
and
cmp
adc
mov
add
pop
pushl
cmpl
mov
inc
jno
mov
mov
jmp
cld
inc
mov
cmp
mov
mov
mov
int3
shr
outsb
imul
lods
xchg
adc
daa
loop
in
pop
xchg
in
jmp
cmp
movsb
or
jns
jp
and
mov
jo
mov
xor
cli
jle
cmc
xor
pop
dec
add
scas
mov
xchg
loopne
mov
xchg
imulb
flds
divl
popf
dec
int
mov
add
lods
stos
pop
cmp
mov
fistpll
jnp
mov
dec
push
mov
call
fwait
ret
pop
pop
repnz
cli
jae
arpl
jge
fisttpll
lahf
loope
inc
out
cmp
lahf
das
xchg
and
xchg
sbb
das
mov
xor
inc
cmp
rclb
movsl
divl
repnz
jl
mov
leave
hlt
xlat
mov
dec
jbe
push
and
jno
cs
push
mov
or
add
sahf
cli
int3
aam
scas
pop
inc
movsl
js
mov
xorl
xchg
daa
and
aad
movsb
fnstenv
mov
lcall
push
inc
enter
daa
ds
cmp
or
jl
sub
dec
sub
push
js,pt
movsl
stc
push
mov
xor
push
mov
into
test
or
and
adc
jl
js
or
sbb
add
mov
fsubrs
int
cmp
incb
adc
adc
sub
in
call
sbb
scas
xor
les
jmp
sub
dec
pop
cmpsb
jno
lcall
dec
fdivr
shll
inc
inc
negb
ret
orb
jg
jmp
dec
mov
jo
mov
inc
mov
ss
adc
mov
pop
sub
shll
push
mov
inc
int3
into
mov
call
xor
ljmp
negb
stc
add
repnz
xor
and
mov
mov
mov
xor
jg
or
arpl
loopne
sbb
jbe
lret
imul
mov
xchg
fsub
lcall
sahf
push
lahf
mov
sub
scas
push
mov
xchg
jns
sti
and
fldcw
lods
mov
test
mov
pop
jns
loope
out
les
leave
repz
lret
and
hlt
push
lahf
call
movsl
cli
push
pop
pop
ljmp
lds
cs
sub
jl
inc
mov
jno
mov
or
mov
je
lds
jecxz
inc
jns
cwtl
mov
cwtl
into
or
das
or
mov
fildl
lret
fcmovnu
insl
add
mov
cs
push
lret
jbe
mov
push
cld
and
sbb
cmpsl
add
leave
lock
dec
aam
popa
cmpsl
cmp
xchg
icebp
mov
aas
add
jecxz
stos
mov
jge
dec
mov
xchg
and
push
imul
jle
ret
aam
cltd
cmpsl
ret
pop
imul
mov
notb
push
dec
pop
popa
ret
lods
dec
inc
xor
lods
inc
push
xchg
iret
imul
cvtps2pd
add
mov
cltd
dec
cld
test
xor
cs
test
inc
dec
xchg
mov
test
add
add
stos
cmp
jae
mov
insl
add
lcall
xor
loop
or
xor
mov
push
mov
mov
jbe
mov
xor
mov
add
sub
dec
inc
insl
mov
and
in
dec
cli
lea
mov
mov
out
dec
add
inc
icebp
std
jns
scas
pushf
in
pop
jb
or
jmp
addr16
sub
mov
add
std
ss
sub
clc
fbstp
lahf
dec
mov
mov
in
jecxz
pusha
add
mov
xchg
mov
scas
jmp
rcrl
andl
jb
mov
pop
les
aas
stos
in
stos
rorb
in
insb
dec
ljmp
pop
xchg
fcoml
cmp
cmp
push
je
ret
inc
pop
std
jae
inc
dec
fwait
inc
jae
rcll
mov
clc
inc
gs
fidivl
cmp
sbb
nop
imul
mov
inc
jnp
rol
scas
mov
xor
sub
and
arpl
dec
pop
jge
add
fwait
aaa
psubq
add
popf
int3
mov
addr16
push
xchg
in
adc
mov
mov
and
or
lods
lret
ret
movsb
push
mov
push
add
cmpsb
push
pop
cmpsb
enter
daa
cmp
cli
mov
mov
sarl
bound
ljmp
add
iret
lahf
jne
mov
sti
gs
aam
xor
xor
adc
push
js
sarl
pop
out
hlt
mov
loope
sti
pop
sub
sub
test
out
xchg
mov
adc
out
cmp
cmp
push
sbb
insl
mov
stos
add
xor
pushf
daa
int
mov
and
mov
xor
imul
xchg
adc
daa
rorl
mov
in
mov
xor
and
xchg
sub
inc
fdivrs
mov
lret
mov
mov
mov
into
imul
cmc
subl
outsl
mov
adc
adc
push
loope
adc
fbld
movsb
in
xchg
and
xor
mov
mov
in
cmp
nop
rorl
xlat
inc
cmpsl
incb
fsubs
mov
loopne
leave
mov
frstor
clc
adc
out
adc
cmp
add
loope
fwait
adc
pop
jle
cmp
adc
mov
dec
movsl
sti
iret
push
dec
cs
call
nop
inc
cmpb
in
pop
fstps
jb
les
cmc
repz
add
add
push
lea
cmp
xlat
dec
ljmp
push
add
daa
adc
mov
add
mov
in
into
xchg
and
sub
ret
pushf
dec
dec
or
enter
movsb
and
neg
stos
std
xchg
loop
cwtl
mov
push
mov
sbb
mov
sbb
or
cmpsl
mov
imul
xchg
mov
pop
inc
lret
and
mov
push
sub
insl
mov
mov
cmpsl
cmp
push
mov
jns
movsl
cld
int
test
mov
test
mov
sbb
ret
pop
test
shl
cwtl
repnz
inc
aam
dec
fld
out
iret
push
fnsave
stos
inc
xchg
push
loope
ljmp
mov
mov
enter
push
pop
adcl
pop
out
add
jp
cltd
xchg
test
aaa
push
mov
les
and
dec
xchg
sub
test
xlat
push
xchg
sbb
mov
rcrl
pop
jnp
xchg
stos
sub
add
mov
push
push
push
adc
push
jbe
or
add
mov
int3
jne
mov
sbb
add
fiaddl
add
mov
fwait
mov
subl
in
mov
mov
out
sub
dec
orb
xchg
pop
cmpsl
in
mov
shl
lock
scas
add
pushf
add
aas
mov
jae
mov
push
sub
push
sbb
in
loopne
pusha
mov
cli
ficoml
xchg
and
aaa
xorl
mov
mov
jle
cwtl
stos
inc
mov
and
sub
jnp
xchg
jbe
shl
push
dec
enter
adc
iret
mov
adc
insl
int3
insl
pop
xor
gs
push
cmpb
arpl
inc
addl
push
in
cmp
xlat
mov
sbb
fisubrl
roll
sahf
rcr
jge
clc
ss
repnz
test
insl
mov
arpl
dec
jbe
cmpsb
pop
jge
js
sbb
out
aaa
into
ret
dec
or
sbb
add
pusha
mov
pop
movsl
in
ret
pop
xorb
xchg
and
hlt
jmp
arpl
movsb
fsub
push
dec
lods
in
jmp
inc
in
mov
pop
push
daa
cmp
int
ret
out
jno
into
jnp
arpl
in
ds
push
lcall
jg
pop
inc
lahf
inc
mov
mov
cmp
dec
add
pop
idivb
inc
sub
pop
cs
add
adc
sub
arpl
xor
xor
or
adc
lret
adcb
pop
sbb
cmp
add
ds
xor
dec
push
and
jmp
enter
push
aaa
mov
lcall
add
push
aad
sub
daa
sahf
sub
enter
jge
inc
mov
mov
mov
in
repnz
jnp
and
xchg
outsb
jmp
mov
adc
negl
adc
mov
in
lret
into
dec
cli
jns
dec
mov
add
pushf
sub
sbb
fyl2xp1
jo
jecxz
jno
orl
lods
jge
push
mov
stos
scas
out
fwait
mov
out
int
xor
mov
cmp
jne
or
pusha
data16
sub
insl
mov
cld
adc
adc
jns
mov
movsl
adc
test
call
sbb
cmc
or
xlat
sbb
mov
mov
push
ss
jle
addr16
ljmp
lods
stos
dec
pusha
dec
or
sbb
pop
xor
mov
cmp
add
adc
push
lea
mov
fisubrl
sbb
adc
jnp
mov
addr16
inc
jmp
push
add
push
mov
je
sub
jecxz
inc
adc
push
aas
and
cmp
pop
cwtl
inc
push
fidivl
xor
cmp
enter
cwtl
mov
cmp
into
icebp
das
xor
mov
mov
jl
shl
ljmp
xchg
and
dec
lret
cmpsl
cmp
jp
push
push
cld
clc
lahf
inc
lret
roll
dec
aad
and
mov
add
rol
cli
dec
sub
aam
push
fcmovnb
jge
and
mov
fst
jecxz
clc
jecxz
adcl
or
cmp
and
inc
mov
xchg
pop
mov
push
mov
fnsave
add
pop
cltd
mov
sbb
mov
cltd
cmp
cld
push
popa
test
cld
faddl
lret
add
jecxz
fidivl
pop
inc
pop
push
cld
fisubrs
xchg
inc
pop
add
gs
decl
ds
or
jle
mov
or
rcl
or
dec
adc
add
fwait
add
pop
fwait
call
insl
out
jne
sub
sti
cmp
jns
xor
in
addr16
xchg
stos
nop
add
insl
mov
rorb
cmp
addr16
xchg
mov
pop
enter
cmpb
mov
in
inc
bound
push
imul
jo
xchg
pop
mov
inc
xchg
push
add
push
inc
mov
popf
shrl
mov
mov
inc
pop
and
pop
bound
adc
scas
and
imul
jmp
vpcomq
or
pop
imul
pop
mov
cmp
xchg
addr16
adc
inc
arpl
aaa
ficoml
add
xchg
sub
outsb
sbb
push
sbb
dec
sbb
and
mov
mulb
lret
sub
mov
hlt
mov
dec
jbe
je
jge
iret
xchg
sbb
adc
or
divb
xchg
jbe
pop
aam
stos
push
pop
cld
xor
jb
mov
and
imul
mov
test
cmpsb
outsb
cmpsb
je
mov
push
daa
cmp
cmp
xchg
jno
cmp
dec
jns
jbe
loope
test
add
xchg
push
cs
lock
push
popa
inc
inc
xchg
adc
pop
jmp
xor
sbbl
sahf
push
mov
loope
lea
pop
insl
idivl
loop
push
outsb
pop
dec
adc
movsl
cwtl
repnz
in
andb
add
int3
add
xor
pop
push
daa
pop
cmp
das
es
and
lcall
push
fdivr
adc
sub
sub
xchg
test
mov
jg
orl
outsb
mov
mov
ss
xchg
cmp
mov
dec
negl
lret
repnz
test
sbb
jmp
push
cmc
adc
mov
sub
arpl
scas
cltd
dec
stc
daa
cmp
fs
pop
adc
test
scas
add
lods
mov
lods
test
sbb
fdivr
and
sub
cs
or
js
xor
loopne
pop
pop
pop
sbb
xor
test
adc
outsl
pop
add
iret
push
sbb
xor
xlat
pop
jg
sub
dec
mov
aad
leave
sti
sub
lea
mov
adc
mov
outsl
out
flds
adc
add
pop
scas
stos
lea
pop
call
and
push
pop
jno
sub
aad
adc
lods
mov
inc
cltd
cs
add
daa
aas
addr16
add
mov
jmp
mulb
idiv
loope
daa
cwtl
lcall
jbe
es
subl
fldt
jecxz
pop
lock
out
fldt
adc
gs
lods
test
loope
xor
insl
jle
adc
lds
cmpsl
cmp
mov
daa
cmp
or
xor
mov
xchg
mov
mov
ret
mov
rclb
cmp
aam
scas
pop
ret
or
mov
push
gs
mov
push
popa
pop
sub
lods
nop
mov
in
mov
push
xchg
cld
daa
emms
sahf
or
das
test
cltd
hlt
and
test
dec
mov
mov
xchg
ja
dec
arpl
test
mov
xchg
mov
rorl
push
pop
roll
jmp
add
jmp
sub
shll
cli
cmp
sub
jle
xchg
inc
mov
data16
mov
dec
add
stos
cmc
add
sar
mov
dec
movb
mov
fwait
pop
mov
dec
mov
into
iret
mov
ljmp
stc
cmp
add
lahf
in
push
xchg
stc
shll
sub
movsb
add
and
test
mov
pop
cmc
mov
in
cmp
adc
mov
fildll
ficoms
jmp
and
xchg
add
jae
call
sbb
hlt
stos
sub
jg
mov
stos
jnp
jge
scas
xchg
push
or
adc
clc
iret
outsb
das
sbb
xchg
xchg
pop
pop
mov
inc
mov
inc
mov
or
mov
xchg
inc
loop
and
lret
xchg
or
sbb
scas
imul
pushf
fisubs
push
or
mov
adc
leave
addr16
hlt
add
aad
dec
push
jle
xorl
sbb
jge
dec
loope
or
addr16
int3
cmp
pop
add
push
cmp
mov
inc
pop
cmpsl
jo
scas
add
cmp
test
repnz
push
push
in
or
cmpsb
icebp
cmpsb
pop
in
jno
aad
ret
daa
cmp
cmp
fcmovnbe
jno
je
jl
xchg
aad
call
inc
mov
adc
sar
lahf
shlb
push
add
test
xor
adc
shrl
pop
adc
sahf
js
fwait
mov
push
or
hlt
sub
dec
cmp
xchg
adc
andb
cmpsb
add
cmpb
xor
nop
les
xor
pop
mov
int
fcoms
sub
mov
lcall
xchg
cmpsb
es
push
add
fdivrp
push
cmpb
jg
mov
jle
in
pop
mov
add
xor
hlt
inc
arpl
imul
sbb
imul
jge
and
test
into
adc
imul
pop
enter
cmc
outsl
pop
insl
inc
sub
stc
fiadds
fs
ljmp
xor
leave
lods
dec
loop
mov
inc
out
sbb
mov
cmp
mov
sbb
lods
addr16
aaa
out
insl
loopne
inc
adc
or
add
andb
mov
xchg
in
sahf
sbb
imul
xlat
fwait
and
sub
xchg
in
inc
lret
push
sti
fdivl
push
cs
ss
flds
xlat
cmp
dec
push
shlb
fnstcw
dec
push
repz
popa
push
or
or
nop
rcrl
mov
xchg
ficoms
sub
sti
pushf
jno
test
pop
leave
sbbb
and
xor
inc
pop
pushf
fdivrl
push
inc
add
push
dec
mov
fidivrs
dec
mov
std
mov
cwtl
mov
cmp
mov
mov
dec
jbe
push
fistpl
lret
stos
popf
xchg
lock
enter
in
mov
sub
dec
and
sub
xchg
popl
insl
gs
dec
rclb
cmpsl
cmp
ret
icebp
xor
cld
dec
push
adc
lahf
call
jmp
ljmp
shrb
daa
sub
rcl
sbb
ret
fwait
xchg
das
push
xor
rcrb
clc
pop
push
lcall
fstpl
push
cmp
sti
push
push
out
icebp
filds
jmp
sbb
arpl
inc
or
mov
mov
push
sub
sub
dec
lret
test
add
loope
adc
xor
mov
pop
jl
shrl
inc
rcrb
mov
mov
dec
jle
xor
scas
or
pop
mov
xchg
loop
mov
dec
inc
mov
dec
notb
mov
pop
pop
fwait
inc
shrl
jne
fldcw
out
leave
sub
mov
jns
dec
outsb
in
ror
dec
push
enter
subb
gs
addr16
xor
xorl
pop
dec
call
in
das
pop
pusha
jno
inc
push
xchg
jmp
in
xor
adcb
int
popf
seto
mov
cmp
and
sbb
mul
dec
jnp
xchg
sub
sbb
in
xchg
iret
int
cs
jge
fchs
xchg
inc
je
in
mov
pushf
ss
push
push
inc
inc
popa
out
out
jge
push
xchg
xlat
icebp
lcall
add
or
or
mov
orl
hlt
dec
inc
mull
fwait
arpl
push
jge
sub
aaa
or
push
or
pushf
sti
add
popl
imul
xor
mov
pop
jo
xor
sub
jmp
xchg
inc
add
mov
sbb
and
in
pop
ret
or
mov
xlat
leave
cmp
jno
jl
jl
rclb
push
lods
imul
jmp
movsl
sbb
lock
or
icebp
mov
push
aam
fs
add
repnz
arpl
loope
xchg
shrl
pop
cmp
sub
divl
mov
loope
mov
sub
cld
fdivrl
inc
int3
out
outsb
and
xor
pop
inc
mov
add
repz
jle
add
in
xor
xchg
dec
push
sub
mov
into
pop
and
jns
or
push
lea
fcoml
mov
in
inc
mov
test
scas
adcb
adc
mov
mov
dec
adc
jge
test
aaa
sbb
cmp
es
cmpsl
neg
dec
sub
rcll
sbb
dec
into
testl
outsl
cmp
mov
xchg
cmc
ljmp
mov
data16
mov
mov
mov
xor
push
add
sbb
cld
dec
dec
lret
leave
xchg
loopne
inc
inc
pop
pop
or
adc
jae
imul
out
cmpsl
mov
jp
mov
fiaddl
sub
fwait
mov
stos
jno
sti
mov
loope
inc
ret
mov
mov
xlat
dec
jge
hlt
inc
xor
jge
hlt
es
jns
lahf
repz
push
or
sub
pop
and
pop
xlat
jl
adc
dec
jmp
dec
test
cmp
cmpsl
cltd
push
inc
cmp
dec
aas
movsl
mov
dec
sbb
fs
ss
jecxz
cmp
mul
mov
std
das
int
cwtl
jne
jbe
ljmp
sbbl
lret
adc
fidivs
aad
data16
ror
cmp
mov
ret
add
es
js
dec
sbb
cmpsl
cmp
cld
icebp
aad
sar
jns
cmpsb
lret
push
popa
daa
mov
mov
mov
pop
add
xor
sub
jp
in
mov
push
clc
cs
dec
pop
movsl
clc
xchg
mov
xchg
or
lahf
ljmp
cmp
mov
push
pop
xor
xor
in
xor
cmpsb
pop
cltd
bound
std
mov
scas
aaa
xchg
jge
dec
xor
iret
test
in
xchg
push
sbb
mov
sarl
push
mov
in
jmp
in
lods
add
and
ljmp
xor
shlb
mov
fsubr
dec
mov
add
ljmp
xchg
or
and
adc
fwait
jne
jo
imul
outsb
mov
jno
out
test
stc
bound
jns,pt
dec
mov
inc
imul
xchg
and
out
data16
sub
lcall
jp
out
adc
and
add
lret
jle
xlat
adc
inc
mov
call
mov
out
mov
mov
push
mov
aaa
popf
ss
lahf
mov
jp
inc
stos
push
cli
and
ljmp
jecxz
lods
scas
dec
mov
and
and
sub
xor
mov
xchg
xor
fbstp
xchg
jp
ss
push
loopne
jns
xor
adc
imul
out
fisubrs
adc
rolb
mov
aam
addr16
push
xlat
jns
cltd
ret
push
xchg
jge
add
cmpsl
sbb
dec
and
lret
or
test
xchg
and
push
jnp
pop
popa
scas
mov
add
inc
jo
push
jg
shl
and
jns
aas
xor
movsb
or
mov
mov
cmpsb
testl
jmp
cmp
test
test
movb
ds
test
movsl
and
pop
lahf
adc
push
cmpsl
push
test
lret
add
inc
repnz
push
pop
test
push
js
pop
adc
push
fadds
inc
ja
sub
adcl
adc
cmp
sbbb
sbb
fdivrl
add
outsb
divl
popf
pop
or
xor
dec
int
jg
sub
pop
mov
inc
dec
push
in
pop
fdivr
push
sub
stc
lcall
in
addb
jg
jg
inc
test
dec
push
pop
mov
xchg
mov
and
lahf
cmp
loope
ja
cltd
dec
xchg
lret
push
shrl
pop
sbb
inc
cmp
xor
outsl
sbb
outsb
loop
ljmp
or
adc
clc
leave
lods
sbb
mov
sub
cli
mov
mov
cmp
or
xchg
jne
repnz
loopne
push
scas
pop
js
adc
jge
push
mov
ljmp
out
mov
loope
and
sbb
mov
leave
sub
mov
push
in
insl
sti
cmp
adc
decl
aad
adc
nop
lea
push
dec
fsubl
inc
inc
push
pushf
fldcw
cs
test
dec
adc
lea
xchg
ds
jne
lahf
mov
jnp
fisubrl
pushf
mov
jmp
dec
mov
add
and
aas
inc
dec
out
jb
dec
push
dec
xchg
ror
je
jecxz
jecxz
imul
std
inc
mov
mov
in
mov
lcall
xor
iret
dec
dec
add
ret
repz
cmp
cmp
data16
mov
cmp
lcall
shll
inc
jp
mov
ss
mov
mov
sub
inc
cld
movsb
push
in
lret
jge
jnp
fldt
and
and
and
add
adc
inc
aam
mov
ret
mov
inc
std
fnsave
std
clc
iret
test
xchg
dec
xor
pop
sbb
enter
jae
mov
mov
mov
push
and
adc
xchg
cli
mov
push
dec
adc
xchg
in
xor
rorl
xlat
mov
jge
pop
xchg
les
xchg
add
rorl
test
pop
shlb
sar
ds
mov
add
cmp
push
decl
push
pop
xor
addr16
xor
mov
mov
sbb
mov
mov
mov
dec
fadd
ljmp
sahf
in
movsb
pop
mov
dec
popf
mov
mov
rolb
xchg
sub
pop
mov
in
imul
sub
xchg
loope
addr16
jmp
add
mov
cmp
xchg
jle
sub
in
lods
adc
inc
jnp
pop
jno
xchg
movsl
jle
jmp
cmpl
push
dec
mov
popf
pop
subb
js
stos
andb
and
or
insb
int3
fsubs
xchg
push
adc
stos
pop
mov
iret
mov
pop
ret
push
pop
inc
out
push
inc
mov
inc
jae
mov
or
cld
ss
inc
pop
scas
lahf
xchg
test
push
ficoms
push
lds
rol
bound
mov
adc
pslld
data16
int3
mov
hlt
in
shlb
sti
jne
dec
xor
jge
adc
aaa
mov
or
and
add
mov
imul
jmp
pushl
mov
jo
mov
dec
cmp
add
movsb
xchg
mov
cmpsb
jp
cmp
es
ror
mov
mov
aaa
dec
daa
cmp
jno
cli
and
dec
dec
xor
adc
movsl
sub
and
fistps
jp
in
ret
mov
push
xchg
andl
sbb
pop
xchg
jns
insl
lcall
aas
dec
and
push
bound
pop
fistpl
sahf
lods
xor
jmp
adc
adc
ret
bound
xorb
sbb
dec
das
xor
push
xor
int
sub
sub
jl
lcall
loope
cmpsl
push
add
lret
jo
sahf
pop
jbe
test
jle
leave
loope
jg
mov
pushf
pop
arpl
xchg
lret
mov
ss
jp,pt
pushf
test
pop
xchg
lret
xor
inc
rclb
jge
into
mov
ljmp
divl
loop
pop
add
fs
call
andb
sub
add
mov
jge
out
dec
mov
out
xlat
add
outsb
in
cmp
pop
jge
jno
jbe
adc
stos
pop
loopne
jns
pop
xchg
adc
jp
popa
loope
adc
into
pop
add
rcll
icebp
dec
pop
cmp
loopne
pop
and
sub
sub
cmpl
jg
bound
xor
into
roll
cmp
mov
fld1
les
adc
mov
call
push
lods
outsb
pop
cmp
ljmp
es
pop
mov
xchg
mov
aas
jecxz
aam
push
or
dec
or
je
jecxz
jecxz
insl
jmp
std
jge
fistpl
push
shrl
jns
dec
aaa
jmp
sub
dec
insl
lock
jns
sub
cmp
fldenv
stos
es
xlat
insl
sbb
imul
xor
cld
iret
mov
mov
scas
dec
test
pop
aas
shlb
aas
imul
push
jle
push
fstpl
xor
xchg
mov
pop
ljmp
pop
lods
cmp
sbb
out
sbb
mov
sarb
psllq
add
mov
test
cltd
mov
mov
dec
pushl
test
arpl
sbb
mov
pop
jge
xor
sub
sahf
add
sub
stos
iret
pop
xor
push
or
pop
sub
mov
pop
arpl
mov
jp
js
mov
movsl
mov
movsl
push
or
cld
cmp
das
dec
mov
push
data16
inc
pop
out
data16
and
in
mov
mov
sub
nop
std
fs
or
mov
fimuls
mov
outsb
jae
dec
add
fbld
sti
rclb
pop
or
orl
push
pminub
dec
xchg
mov
clc
call
cltd
and
pop
insb
aaa
adc
inc
jl
scas
adc
cmpsl
push
repnz
scas
adc
ja
iret
ljmp
pop
jle
roll
mov
inc
xchg
fmuls
ja
xor
je
ficoml
add
insb
shrb
neg
repz
add
clc
jno
sarb
mov
jp
pop
leave
inc
xor
das
ret
jmp
xchg
xorl
jge
fmull
aaa
dec
dec
pop
or
jb
add
jp
mov
adc
xor
cmp
adc
dec
fs
cmp
out
push
sub
imul
scas
mov
daa
ss
fdivrl
cmc
xor
jl
cmp
movsb
ds
xchg
aaa
movsl
xor
mov
dec
lea
popa
push
sub
mull
pop
scas
lds
js
insb
lcall
jae
loope
jno
sub
or
cmp
scas
outsb
dec
cmc
unpckhps
shr
pusha
out
and
mov
test
sbbl
test
cmp
test
xor
xchg
sahf
lea
and
push
xchg
inc
pop
fcoml
sub
ss
test
xchg
roll
cli
aad
mov
in
adc
loop
xlat
and
dec
xchg
cmp
push
or
notl
leave
push
lret
fsts
mov
fwait
je
jmp
sbb
cmc
hlt
push
inc
xor
leave
sahf
outsl
and
loop
jns
stc
mov
in
adc
dec
data16
lods
out
out
mov
sub
xor
cmp
cmp
jbe
cmp
loopne
mov
pop
mov
repnz
shrb
sahf
imul
popa
add
xchg
lock
jmp
cmp
ret
rclb
scas
mov
fucomip
in
pop
aam
cwtl
mov
aaa
aad
xlat
leave
nop
inc
dec
adc
or
inc
imul
enter
pop
repz
sahf
push
push
sbb
sub
adc
xor
or
popf
push
aaa
pop
lock
adc
adc
jmp
loope
pop
inc
or
xchg
adc
jb
push
dec
jg
out
je
aaa
nop
jecxz
xchg
push
divb
xlat
pop
cwtl
cmpsb
mov
jnp
in
mov
pop
push
push
dec
and
inc
mov
dec
stos
lock
dec
das
outsb
loop
mov
or
sbb
rcl
or
es
sbb
dec
lods
lret
jg
xor
leave
lret
ja
cld
cli
mov
fistpll
mov
stos
mov
pop
lea
shlb
psubq
inc
pusha
jle
xlat
push
push
inc
rolb
rcrl
inc
dec
addr16
push
ds
mov
cltd
push
jge
cmpsb
xchg
pop
in
int
outsb
rsqrtps
popf
cltd
pop
xchg
or
sub
xchg
in
mov
repnz
test
add
fucom
push
sbb
mov
sarl
cmp
stos
mov
cmp
into
repnz
add
jb
das
decl
pop
xor
adc
lcall
lret
pop
mov
xor
mov
sbb
and
sbbb
in
jne
in
jnp
sbb
inc
ret
fcomps
stos
in
bound
test
sub
mov
leave
jp
aad
mov
outsb
push
mov
pop
mov
dec
cmpsl
and
push
mov
cltd
filds
and
push
lcall
fwait
jb
push
shlb
popf
stos
add
mov
aaa
fucom
stos
push
mov
in
jnp
movsl
xor
cmp
das
iret
dec
mov
ret
sub
mov
mov
jae
aas
mov
mov
pop
push
pop
test
sbb
jae
sub
lea
mov
lds
add
xchg
cmpl
dec
xlat
hlt
jp
mov
xchg
imul
pop
jge
mov
aaa
pop
mov
or
ja
add
jb
int3
pop
hlt
sub
or
push
stos
xor
sub
xchg
jo
scas
pop
sub
cmp
movsb
test
and
cmpsb
xorb
hlt
mov
cmpsb
daa
xor
or
jno
or
mov
and
mov
xor
and
push
push
and
gs
sub
cmp
fldenv
mov
xor
pop
out
or
and
movsb
or
cmp
sahf
mov
adc
xchg
mov
adcb
push
add
add
movsl
push
cmp
sub
and
lcall
inc
fdivr
out
mov
sahf
lahf
jmp
test
loope
jg
and
xchg
mov
push
cmp
xor
ss
jmp
cmp
adc
lods
not
dec
sbb
cmp
shll
mov
mov
sbb
loopne
into
cmpl
cmc
mov
pop
mov
loop
movzwl
jno
mov
ja
lods
clc
movsl
rolw
lods
into
inc
mov
fisttpll
adc
inc
cli
push
cs
xor
nop
cmp
jmp
into
pop
pop
imul
inc
loopne
jmp
adc
decl
adc
neg
add
hlt
fists
aas
scas
push
cmp
or
mov
push
push
loop
inc
inc
sbb
sub
mov
nop
push
add
inc
jl
xchg
fnop
sbb
pop
fcomps
lea
sub
sbb
xchg
pop
mov
push
xchg
pushf
enter
add
lock
call
pop
cmc
inc
cmpsb
aas
and
xor
es
dec
test
je
loopne
jecxz
xchg
sahf
div
cmc
jg
lret
imull
mov
push
adc
fcomp
push
xor
aaa
xchg
fildl
mov
jae
inc
push
xchg
das
dec
fwait
test
mov
sahf
rcl
push
test
insl
call
stos
jge
xor
inc
mov
xor
and
ljmp
mov
pop
lds
jge
cmp
mov
sub
mov
ret
data16
fucomp
cmp
clc
cmp
xchg
push
sub
pop
pusha
push
xchg
stos
adc
push
aaa
out
loopne
mov
push
mov
add
mov
and
mov
xor
mov
sbb
cmp
jp
int
lods
test
xor
mov
rcll
sub
pop
rcr
pop
stos
mov
and
lea
call
push
bound
fisubs
in
outsb
mov
lock
addl
mov
int3
inc
mov
xor
fwait
xor
jmp
cmc
addb
jmp
mov
outsb
lret
cli
pop
bound
mov
mov
in
pop
ficoml
add
leave
or
aad
jp
xor
mov
and
mov
xchg
pusha
in
fmuls
fbld
xchg
push
repz
xchg
in
sbb
push
xchg
jnp
popf
rclb
push
push
jbe
mov
fcomi
mov
ja
adc
or
lahf
xchg
shrb
xorb
adc
xchg
ret
push
pop
in
rolb
stos
js
jae
add
inc
fwait
adc
insl
mov
jae
cld
aam
xchg
mov
iret
sbb
inc
pop
imul
cmp
insb
shlb
push
repnz
xor
adc
arpl
sbb
sbb
fdivl
cltd
xchg
shlb
jge
ret
int3
add
pop
sbb
inc
fs
out
push
cmp
jo
fidivrl
sbb
movsb
xor
aam
mov
add
ss
enter
daa
xor
add
pop
cwtl
repz
lds
mov
sbb
ds
jne
movsl
aas
pop
cmp
aas
dec
adc
mov
mov
rcrl
push
idiv
aas
inc
add
gs
add
jg
js
int
pop
es
push
push
ficoms
loope
sti
inc
sub
fistps
cmp
in
adc
mov
call
mov
add
fildll
xor
or
push
cmp
imul
sub
dec
pop
pushf
cmp
lcall
fsubrl
insl
je
inc
xchg
cmp
sbb
xchg
scas
cmp
js
mov
enter
xchg
lds
int
sahf
notl
xchg
pop
pop
out
mov
cmpsb
clc
sbb
test
cmc
adcb
cmpsb
add
outsl
xchg
cwtl
and
sub
jo
aaa
fiaddl
adc
repz
xchg
sbb
add
and
adc
cli
xchg
xor
leave
sbb
outsb
testb
imul
gs
in
and
inc
pop
cmc
pop
hlt
inc
jae
or
adc
or
jb
pusha
xchg
jbe
dec
sbb
int
mov
sub
jg
in
ret
sti
notb
jmp
mov
lret
pop
rorb
pop
push
flds
mov
les
mov
xor
sub
fwait
jb
push
mov
das
pushf
jae
pop
jmp
test
pop
mov
fs
dec
jnp
inc
rol
aas
rolb
dec
insl
pop
and
pop
jecxz
sarb
divb
sub
std
jb
ds
sbb
or
movsl
jg
mov
jo
orl
dec
and
push
jl
lock
add
das
sub
xchg
jbe
data16
sbb
shrl
push
lds
add
sbb
fnstsw
or
in
cld
push
inc
ret
lret
cmp
sarb
ret
pop
xor
pushf
xor
rcrb
sub
jns
fcompl
ret
cmc
dec
movsl
push
jbe
clc
mov
xchg
ljmp
pop
lods
jge
adc
inc
sbb
xchg
xchg
je
push
nop
subb
pop
add
cltd
jne
and
xchg
or
ror
xchg
popf
ds
clc
mov
fistpl
lea
arpl
int3
shrl
and
inc
stos
clc
ds
adc
pusha
add
test
xchg
incl
shll
xor
fmuls
mov
daa
clc
push
mov
stos
pop
add
dec
test
int3
inc
push
or
push
push
scas
fwait
pusha
lods
xchg
dec
fmuls
jne
dec
or
add
sub
in
stos
adcl
insb
jp
sub
mov
or
cmc
jp
inc
insl
mov
cli
ret
inc
mov
cmc
inc
outsb
jle
cmc
arpl
fs
xchg
pusha
adc
filds
addl
xchg
scas
mov
cmpl
sbb
ljmp
stos
dec
dec
inc
and
mov
jnp
inc
push
scas
cmp
adc
inc
fsts
addr16
iret
pop
jo
ret
outsb
pop
and
jae
pop
adc
or
call
sahf
push
fisubrl
mov
add
imul
lds
pop
mov
jae
push
leave
test
adc
and
jbe
add
xchg
loope
jp
cmpsl
aaa
test
lods
or
popf
nop
add
lahf
int3
in
mov
stc
push
jno
xor
dec
pop
movsl
scas
sbb
and
pop
add
shlb
mov
cmpsb
xchg
in
ret
enter
daa
xor
cmp
movsl
mov
dec
icebp
inc
out
stc
sarl
dec
lahf
stos
jg
push
in
addr16
ret
inc
mov
lods
test
and
jns
gs
push
and
loope
jbe
sub
mov
cmp
mov
adc
jge
sti
aas
enter
xor
sbb
push
addl
and
push
aas
xchg
int
mov
sub
fcmovb
lcall
mov
push
fnstcw
sub
xor
cltd
mov
xor
rclb
call
push
dec
mov
shrb
ss
mov
cmp
mov
push
notl
lret
jmp
mov
push
sbb
mov
dec
dec
xchg
cmc
dec
in
xor
shlb
pop
pop
loop
dec
stc
filds
cmc
adc
ljmp
inc
loopne
decb
cli
mov
mov
cmp
enter
or
gs
shll
adc
pop
test
lods
lret
outsb
icebp
add
sub
xchg
cmp
nopl
xchg
xlat
push
add
mov
sub
cmpsl
push
cs
lock
aad
outsb
rclb
and
inc
mov
out
mov
mov
jecxz
pop
mov
mov
sbb
adc
push
cli
jmp
cld
add
inc
sarl
jnp
fdivrl
cmp
dec
in
sbb
and
cmp
idivb
push
std
sbb
jge
xlat
xchg
mov
mov
les
fninit
pop
lret
int3
cs
sub
test
in
int3
in
mov
add
lods
mov
insl
mov
les
and
cmpsl
xor
in
daa
jl
icebp
cli
cld
jnp
xlat
lret
test
fnstcw
lret
mov
mov
popl
aam
push
cld
ret
test
push
mov
fnsave
mov
aam
test
ljmp
fisubrl
sbb
cmpsb
divl
fmull
push
imul
movq
ret
xorb
sahf
jecxz
mov
or
dec
fwait
enter
push
out
xchg
pop
sbb
or
rol
xor
pop
sub
fwait
push
mov
xor
ret
mov
jmp
push
ljmp
sbb
xor
cmp
insb
mov
mov
mov
out
ja
sahf
jae
fwait
cmp
and
mov
outsb
dec
mov
adc
jno
loop
xor
dec
aam
mov
dec
out
xchg
jno
xchg
out
xor
or
addr16
mov
jp
push
push
mov
test
es
mov
jle
or
imul
pusha
scas
jne
fbld
inc
jmp
jp
xor
sbb
sub
mov
hlt
rcr
stos
rcll
movsl
rorb
jecxz
jl
std
mov
jecxz
push
mov
adc
iret
data16
ret
mov
pop
dec
or
sarl
arpl
inc
mov
iret
scas
push
ficompl
fisubl
out
cmp
std
sbb
imul
pop
loop
fidivrs
cmp
adc
xchg
shr
inc
mov
lods
inc
leave
pop
cwtl
dec
hlt
pop
mov
arpl
adc
psubb
out
loope
xor
negl
add
xchg
imul
jnp
je
push
dec
push
xor
movsl
jmp
outsl
and
mov
xchg
push
gs
js
or
test
enter
daa
xor
cmp
int3
push
jno
stos
sarl
es
pusha
cmp
ds
cmpsl
movsl
dec
das
and
jne
jo
lret
push
cltd
cmp
insl
push
icebp
cmc
inc
dec
sbb
jmp
out
dec
lret
xchg
jge
pop
movsb
push
pop
push
sbb
loope
adc
mov
outsb
fsubs
adc
pop
pushf
aam
sahf
stos
xchg
adc
add
add
clc
xor
jnp
inc
xor
adc
and
lds
out
or
pop
sub
jmp
test
fs
jg
sub
mov
popl
mov
push
cmp
out
es
scas
cmp
inc
in
notl
clc
cmp
adc
pop
shll
sub
cmpsl
xor
into
sub
lock
adc
movsb
xor
outsl
push
sbb
loop
pop
addr16
xchg
lods
fs
pop
add
cltd
mov
dec
sbb
add
stc
ret
adc
fdivr
in
jne
xor
cmc
jae
pushf
insb
cmp
outsl
mov
loopne
pop
lahf
pop
xor
adc
cli
lret
daa
ljmp
adc
mov
jae
inc
int
xlat
xchg
ret
jnp
int3
mov
cwtl
cs
push
jg
cs
push
aad
adc
nop
scas
lcall
mov
loop
jne
jecxz
aam
repz
and
mov
call
cltd
adc
sahf
popa
adc
jge
pushf
leave
mov
cmp
mov
inc
pop
pop
jae
test
cmp
aam
dec
pop
jge
je
rorl
dec
push
aas
idivb
fistpl
and
mov
xor
dec
into
loope
fistl
test
mov
mov
loop
imul
ljmp
mov
nop
pop
iret
rorl
mov
insl
popf
mov
xor
icebp
mov
jne
cmpsb
xor
mov
rcll
pop
pop
fucompp
rolb
stc
fsubrl
adc
ds
mov
out
dec
das
or
clc
xor
cwtl
ljmp
lods
push
je
mov
or
test
push
inc
pop
mov
into
push
and
cltd
jecxz
loopne
test
test
xchg
mov
add
pop
test
aas
adc
sbb
nop
mov
sbb
lods
pop
aam
sub
push
pop
filds
fiadds
or
xor
cmp
fbstp
not
mov
lods
hlt
push
mov
sbb
push
cmp
repnz
dec
mov
dec
or
ds
dec
sahf
cld
enter
mov
mov
cli
bound
lods
jns
aas
push
in
inc
lret
adc
mov
sub
ja
pop
addr16
xlat
jp
mov
or
cltd
mov
roll
cltd
jle
adc
jb
sub
mov
xchg
xchg
cmp
xchg
inc
and
adc
jp
ficoms
popf
inc
mov
mov
xor
push
stos
xor
or
mov
xchg
sub
hlt
and
push
push
mov
iret
lds
rol
ds
dec
pop
xchg
jp
inc
int3
decl
inc
movsb
sbb
or
fidivrs
inc
pop
mov
mov
sbb
cmp
xchg
and
pop
lds
jb
mov
sbb
dec
hlt
cmpsb
sbbb
xor
sub
jp
add
stos
xchg
lret
xchg
int3
ret
xlat
jmp
stos
cmp
push
aaa
aaa
xchg
xor
add
mov
sub
cmp
inc
movsb
aad
pop
push
mov
stos
cmpsb
mov
fs
nop
cli
jno
xchg
in
daa
xor
and
hlt
je
jno
rorl
jl
bnd
iret
out
xchg
ds
insb
inc
movsl
push
push
mov
adc
int3
push
insb
shrl
inc
pop
push
pop
push
inc
fisttpl
xchg
scas
aas
in
pop
jno
push
js
xor
jecxz
ljmp
les
loope
mov
cmp
jo
adc
xor
mov
jecxz
xchg
jg
xor
gs
inc
sbb
int
aad
sub
mov
dec
push
inc
sub
lcall
xchg
and
adc
jns
mov
cmp
mov
cmp
decb
rorb
adc
int3
push
jecxz
sahf
outsb
jg
aam
into
rdtsc
cmp
outsl
xor
stc
dec
jnp
fdivrs
iret
data16
test
push
and
adc
cli
and
xor
aas
cmp
negb
out
mov
loopne
stc
popf
pop
push
lcall
sub
and
xor
lea
adc
jle
jle
rorb
imul
xchg
js
inc
mov
in
add
sti
add
cmpsb
cs
jno
js
sub
jne
push
inc
enter
lods
push
ret
call
repz
incl
das
adc
call
sbb
xchg
sub
adc
aam
pushf
je
in
sarb
pop
je
mov
inc
adc
jmp
popf
pop
jae
inc
int3
adc
je
leave
cmp
pop
sub
jp
std
addr16
enter
xchg
mov
pop
mov
movsb
popa
lds
mov
cld
xor
mov
mov
lock
jle
das
leave
cmpsb
imul
cwtl
movsb
and
jge
rcrl
pop
es
and
sub
out
inc
cmpsl
xor
or
lea
sub
xchg
and
pop
imul
aad
shrb
jmp
inc
ret
mov
insl
mov
test
imul
in
daa
cmp
lock
out
insb
xchg
stos
xchg
push
xlat
push
and
lahf
cvtps2pi
addb
mov
aam
mov
cld
mov
inc
xchg
lea
lret
leave
test
rcr
pop
lds
sbb
shll
or
nop
stos
pop
jg
push
std
arpl
add
pushaw
jmp
xor
inc
cmp
rclb
xor
add
mov
lock
stos
pop
fdivrl
fimuls
rorl
adc
inc
fwait
in
outsl
jae
andl
mov
stos
shr
mov
adc
jns
pusha
or
popf
pop
xchg
psubq
out
adc
or
pop
addr16
popf
inc
jp
mov
mov
mov
es
adc
in
xor
pusha
in
movsb
fnstsw
mov
push
pop
jmp
adc
inc
sahf
push
mov
xlat
aas
mov
jb
lock
cmpsl
cmpl
ljmp
pop
repnz
pushf
mov
iret
and
aaa
ret
jo
enter
xlat
aam
jae
mov
inc
cmpsl
push
decb
pop
loopne
inc
fsubrs
fcmove
xor
sbb
loop
imul
pop
faddp
leave
mov
and
rcrb
jp
insb
into
and
insb
fwait
xor
or
movsb
xor
sub
jbe
fistpll
push
push
sbb
fs
or
mov
int3
scas
mov
lock
sbb
hlt
xor
pop
mov
lods
and
cmpsb
movsb
pusha
mov
push
add
call
in
ja
and
daa
xor
cmpb
roll
addr16
cmpsb
dec
ds
bound
in
and
popf
sub
test
and
int
push
lahf
jno
ljmp
jle
pop
and
dec
push
and
loope
mov
cmp
outsl
outsb
sahf
xor
adc
push
mov
pop
jle
xor
ficompl
mov
mov
cmp
jae
dec
out
cmp
pushf
mov
sbb
cwtl
lret
push
sub
pushf
int3
loop
push
insl
lret
and
test
out
jg
out
push
mov
xchg
inc
mov
push
and
add
xchg
loop
cmp
mov
cmpsl
ror
cli
xor
arpl
mov
add
nop
inc
cmc
sahf
sti
sub
adc
outsl
adc
and
arpl
push
je
lods
push
popa
stos
mov
ljmp
push
aam
xor
icebp
cmp
lret
dec
or
adc
or
mov
loopne
test
push
adc
imul
xchg
sub
scas
repnz
xchg
add
sbb
mov
aam
sub
andl
mov
mov
pop
push
cmp
mov
mov
mov
mov
repz
aas
hlt
lea
stos
jb
xchg
mov
or
xchg
dec
adc
pop
add
mov
inc
sar
inc
sub
add
jb
idiv
dec
dec
sub
je
adc
aam
inc
jle
std
push
divl
mov
push
xchg
mov
jne
dec
movsb
ja
fisttpl
jo
lock
das
test
jbe
test
mov
cmpsb
inc
jge
stos
mov
shll
insl
imul
cmpsl
das
movb
rolb
cld
cld
jno
lret
cmc
adc
repz
push
and
clc
loopne
pop
sbb
pop
sub
addr16
aam
cmp
xor
sbb
ljmp
imulb
addl
mov
repnz
cld
orl
cmc
ret
sub
cltd
push
fstpt
mov
dec
cmpsb
xchg
sbb
mov
jmp
sbb
mov
rol
shlb
sub
stos
dec
xor
push
mov
mov
add
or
add
js
mov
or
shlb
jne
or
mov
rcrl
fmul
xlat
pop
xchg
decl
icebp
and
test
or
mov
jg
fs
repz
lods
sahf
out
jg
cltd
bound
scas
jns
and
in
cs
xchg
pop
sub
xchg
xor
sub
insl
icebp
xchg
addr16
pop
out
jp
pushf
add
cmpsl
inc
push
mov
add
in
inc
repz
jg
dec
xor
xchg
cmp
push
jge
cmc
outsl
xor
fs
popf
xchg
loope
mov
mov
outsb
stos
sbb
inc
insb
and
in
or
push
jecxz
cmp
ror
mov
adcl
ret
dec
pop
dec
clc
inc
loop
pop
jae
push
inc
stos
add
or
aam
push
inc
push
mov
loopne
cmp
pop
in
imul
lahf
fisubrs
lret
lds
fcomps
or
push
repnz
sahf
lods
hlt
cmp
popf
arpl
sbb
imul
loop
lods
sbb
fbstp
and
mov
mov
mov
pop
or
push
std
lock
xor
mov
cwtl
scas
xchg
fwait
push
and
mov
scas
jg
movsb
jmp
xchg
sahf
and
pop
jo
enter
daa
das
lds
cmp
movsl
jno
xchg
mov
dec
lods
test
ds
aas
movsl
inc
and
adc
adc
test
out
push
std
inc
stc
mov
adc
addr16
js
pop
loope
popa
subb
aaa
test
sub
jbe
cmp
shl
outsb
add
xor
jmp
insl
mov
or
xor
in
add
add
or
fiadds
dec
cli
mov
add
pop
pop
js
lcall
fwait
jl
inc
mov
aam
stos
sbb
mov
push
shlb
jbe
and
lret
and
aad
sarl
je
notl
inc
lret
sbb
mov
sbb
adc
aad
xchg
cmc
gs
xor
test
loop
aam
stc
mov
cld
mov
rorw
lods
cmp
mov
push
leave
jbe
xchg
jns
es
add
mov
cs
sub
shll
loopne
outsb
pop
pop
out
adc
or
sbb
into
add
push
ja
sub
cmp
sbb
xlat
push
and
aam
sbb
fnstcw
sti
popa
sahf
xchg
jp,pn
mov
nop
inc
call
addr16
out
negl
out
mov
sub
insl
call
push
mov
pop
aad
push
adc
in
popf
pushf
lret
jmp
test
inc
in
and
dec
pop
sbb
fldt
and
stc
lcall
push
das
testb
push
cwtl
ret
cmc
jl
pusha
adc
addl
lock
out
push
push
mov
leave
cld
lock
fwait
mov
or
xor
stc
xchg
or
push
push
insb
insl
push
cmp
dec
mov
lock
cs
mov
cmp
fdivr
daa
push
inc
lret
fs
mov
out
xchg
mov
aaa
cltd
rcl
jnp
loopne
testl
cltd
push
xchg
inc
jecxz
rcrb
dec
clc
loop
leave
xchg
orb
ljmp
stos
lods
xchg
mov
insl
out
xor
int3
xchg
clc
lahf
lds
ss
por
fldl
adc
jl
mov
test
mov
lret
xchg
cmp
aaa
pop
clc
xchg
stos
sbb
push
rcrl
cli
sub
stos
cmp
testl
mov
out
or
sbb
sbb
add
push
fiaddl
ja
add
or
ret
ljmp
dec
inc
or
dec
sbb
mov
ret
pop
test
cmp
lea
in
and
xchg
lods
cltd
test
adc
push
sub
push
cltd
jp
xor
mov
dec
es
and
jle
out
in
mov
xor
push
fmull
jmp
cmpsb
das
addl
popf
mov
xchg
add
cli
js
lea
insb
movsb
push
jnp
cmp
sub
mov
scas
push
cmp
loop
and
ja
or
out
inc
in
jp
jae
and
mov
or
dec
imul
fisubrl
sbb
sbb
stos
sub
repnz
fimuls
sbb
rclb
mov
adc
leave
sti
cmp
mov
push
or
sbb
jge
inc
test
and
aaa
inc
loop
or
enter
cmp
test
push
loopne
ret
xor
adc
scas
jbe
jb
loop
pop
cmp
mov
push
mov
add
mov
xchg
fidivrl
lea
or
push
dec
sbb
sub
test
add
and
xchg
cmpsb
lahf
inc
outsl
add
test
jb
pop
push
mov
jnp
testl
repz
into
push
pop
mov
incl
es
xor
inc
mov
lds
mov
rol
pop
mov
sbbb
sbb
cmp
fistpll
mov
roll
dec
jns
int
xor
sub
in
and
lcall
int
stos
sahf
mov
sahf
adc
roll
fdivs
xchg
mov
or
sar
sbb
scas
cmp
das
ljmp
testl
cmp
rcll
mov
into
mov
test
adc
loop
xchg
jb
loope
jns
cmc
adc
imul
pop
xchg
mov
out
lret
pop
cli
mov
pusha
ljmp
mov
jb
mov
push
loopne
inc
sbbb
scas
adc
mov
imul
push
mov
xchg
or
sbb
das
mov
xlat
hlt
lods
sub
insl
mov
inc
inc
mov
adc
aad
dec
xchg
sub
xchg
ds
add
leave
bnd
repz
cmpsl
pop
andl
or
and
xchg
inc
stc
pop
mov
cmpsl
pushf
jne
ja
rcrb
inc
je
xchg
inc
arpl
fbstp
ljmp
sub
out
test
sahf
std
pop
int3
inc
cwtl
jle
ret
push
xchg
pop
dec
decb
sbb
nop
mov
rcrl
mov
push
lock
sbb
mov
rclb
mov
mov
subl
mov
repz
or
adc
pop
lret
rcll
outsl
and
or
push
xchg
dec
test
sub
dec
fwait
aam
es
dec
xchg
adc
fisubs
aaa
mov
sbb
jge
ljmp
ret
pop
fs
xchg
mov
rcll
sub
dec
fadd
add
mov
inc
test
pop
inc
mov
and
xchg
adc
std
test
mov
mov
xchg
stos
and
pop
subb
sub
jae
out
stc
add
dec
or
incl
in
xor
mov
mov
mov
pop
ret
dec
ja
imul
fldl
testb
pop
dec
sub
adc
dec
mov
jmp
out
cmp
dec
mov
dec
lcall
cld
dec
cmp
xchg
int
sub
arpl
lcall
jle
mov
std
jle
std
aas
push
mov
shl
mov
fistpll
push
shr
or
push
xchg
jno
jge
adc
push
popf
jecxz
idivb
das
verw
sbb
push
jnp
addl
mov
in
push
jno
and
mov
iret
inc
cli
add
ja
pop
insl
cmpsl
fldl
mov
mov
mov
push
push
fstl
loope
call
sbb
lret
imul
arpl
mov
mov
jo
sbb
dec
dec
jecxz
gs
bswap
jb
jnp
rolb
cmpsl
arpl
inc
je
xor
mov
aaa
jmp
or
lret
neg
int3
outsl
sti
test
push
ret
jp
xor
insb
or
push
inc
loopne
jne
fistpll
sbb
sbb
out
cmpsb
cwtl
jmp
jb
addl
cmp
sbb
cmp
dec
mov
ds
or
movsl
jo
hlt
and
lahf
ficoms
mov
iret
xchg
push
test
jle
mov
lcall
fildll
push
jp
loope
dec
or
add
outsb
sub
push
rcrb
pop
clc
subb
test
pop
xor
pop
add
inc
push
push
insb
enter
stos
sub
pop
mov
push
mov
jne
sub
xor
sahf
mov
arpl
xlat
add
mov
sub
lock
mov
test
dec
and
sbb
fwait
cmp
ljmp
lret
xchg
sub
mov
or
cmc
repz
cli
xor
enter
sub
loop
or
sub
lea
rcll
and
jge
fstps
push
jg
mov
jl
out
push
pop
cli
in
cmpsl
xorl
adc
or
jae
mov
loopne
xor
int
adcl
pop
pop
xchg
adc
mov
add
scas
xchg
lret
mov
fistpll
push
jmp
into
dec
insl
sub
dec
jge
scas
xchg
sti
mov
inc
or
xchg
sub
icebp
mov
inc
adc
xchg
repz
repz
into
xor
xor
lret
loop
call
adc
mov
cmp
adc
sub
jmp
loopne
pop
add
sti
jmp
inc
jle
addr16
sbb
fs
mov
dec
scas
adcb
xchg
add
add
aad
ficomps
je
jo
jne
scas
imul
std
hlt
mov
test
sbb
push
das
inc
repnz
ja
xchg
and
fwait
cmp
xchg
and
pop
out
insl
and
mov
cmpsl
sub
out
pop
fstpl
cld
jge
scas
lret
inc
mov
cs
leave
mov
cmc
shlb
push
popa
sub
mov
and
fidivrs
mov
in
frstor
xor
jae
je
ljmp
mov
push
push
mov
clc
aaa
push
xchg
xchg
mov
add
stos
mov
test
xlat
or
push
mov
dec
add
mov
xchg
sbb
repz
mov
pop
sub
lret
out
add
gs
push
xor
test
stos
subl
mov
fxam
mov
enter
cs
mov
inc
je
rorb
xor
test
adcb
sub
bound
sbb
add
add
xchg
dec
dec
and
jp
cmp
pop
loope
mov
push
jle
mov
rcl
mov
ficoms
test
insb
pusha
push
adc
cmp
xchg
mov
cmp
add
xchg
cmp
sbb
lods
and
mov
outsb
cmpsl
rep
jae
leave
and
lret
sbb
mov
pop
xchg
fldt
mov
mov
iret
mov
int
pop
movsb
or
inc
add
jae
mov
loope
jg
fisubrl
inc
jb
aam
ficoml
lret
sbb
rcll
hlt
adc
push
inc
sbb
rorb
pop
repnz
push
cmpsl
arpl
scas
jbe
fcmovne
jge
ret
xchg
add
aaa
mov
dec
loopne
jp
push
int3
pop
push
jmp
push
cmpsb
sub
fdivl
dec
add
or
cmp
and
movsb
mov
push
aas
jno
cmpsb
sbb
in
adc
enter
daa
sub
cltd
cmp
dec
add
mov
test
ds
push
shld
xor
pop
cli
jg
test
push
mov
test
dec
mov
inc
cmpsb
aam
jge
pop
pop
xor
fwait
js
outsb
cs
push
mov
or
push
les
mov
inc
mov
mov
fcmovnbe
jp
dec
fcoms
addb
sbb
jg
xor
sbb
int
cmp
pop
xchg
cwtl
mov
push
clc
stc
pop
faddl
and
sahf
pop
sub
test
pop
xor
cmpsb
jg
cmpsb
push
mov
sbb
mov
repz
pop
and
mov
cmp
movsl
add
testl
shll
xor
xorb
mov
wrmsr
outsl
mov
dec
loop
jne
stc
loopne
cmpsl
fs
into
out
jae
gs
xchg
add
in
push
scas
mov
sub
or
cli
pop
add
xor
push
pushf
xchg
cs
je
loopne
xor
pop
in
jbe
adc
cmp
adc
sbb
ljmp
sbb
movsl
pushf
pop
xlat
or
sbb
mov
sbb
sti
outsb
mov
push
nop
shr
xlat
dec
push
xor
inc
daa
sub
fnstcw
ret
dec
rep
push
xor
lea
shrl
xchg
rep
pop
out
jo
adc
lahf
sti
pushf
lret
mov
imul
andb
cltd
stos
scas
aas
mov
lods
add
cmp
jecxz
bound
std
stos
xor
cwtl
hlt
push
fs
gs
mov
jb
inc
mov
dec
push
xchg
lods
fldt
mov
lock
lea
and
add
mov
shlb
es
cltd
insl
pop
icebp
mov
cmpsl
sub
mov
shlb
test
test
sub
jg
mov
mov
xchg
insb
int
hlt
mov
sub
xor
xor
test
insl
and
push
fildll
fldl
int
xchg
xor
lock
in
popa
pusha
in
jecxz
aad
inc
mov
pop
ret
sbb
push
rcrl
cltd
sub
sti
dec
mov
push
mov
dec
insb
call
cmc
xchg
xchg
sbb
jo
shll
dec
insb
pop
les
pop
mov
push
sub
xchg
add
addb
xor
arpl
or
lcall
inc
insl
mov
aas
lret
je
push
pop
and
ja
mov
addl
lods
negb
lock
push
jne
je
mov
jp
out
sti
ss
bound
lahf
jo
push
lock
out
cmp
sub
pop
pop
out
mov
jp
xor
mov
insl
mov
addr16
jno
pusha
jmp
adc
jnp
cmp
stc
imul
pop
scas
xorl
xchg
push
jo
iret
popf
xor
jl
ret
push
lods
ret
inc
stos
out
ljmp
and
iret
scas
push
push
cmp
lret
fists
aas
es
iret
push
rol
mov
cltd
pop
fistl
fwait
jae
jle
mov
mov
push
push
adc
fiaddl
push
xchg
cltd
mov
sbb
mov
imul
mov
hlt
mov
arpl
cmpsb
xchg
sbb
or
je
pusha
hlt
cmp
push
mov
jo
cmpl
in
push
aas
popa
aaa
jge
sbb
pop
push
xchg
add
adcb
cli
ja
mov
cld
xor
and
andl
mov
es
mov
test
in
cli
or
enter
daa
sub
cmp
sub
jl
pop
insl
dec
imul
movsl
jle
dec
and
enter
sbb
test
sbb
xchg
inc
xor
fiaddl
pop
pop
pop
push
js
popf
repnz
pop
pop
insb
push
lea
sub
movsb
mov
rolb
outsb
lea
jno
cmpsb
rclb
or
push
cmp
leave
icebp
push
add
dec
icebp
xor
push
push
push
scas
dec
int
xchg
daa
sub
push
pop
adc
lcall
sbb
stos
sahf
int
mov
xchg
or
sbb
add
sbb
and
dec
ss
pop
cmp
pusha
in
testl
rcll
mov
pop
in
sbb
mov
push
cmc
sbbl
iret
loop
adc
sbb
adc
mov
fsubrs
insb
mov
or
pop
cli
push
push
mov
adcb
cmp
popa
mov
movsl
xchg
sbb
mov
sub
mov
scas
sbb
jae
loopne
cmc
add
adc
insb
lock
dec
xchg
push
sti
and
cmp
out
or
dec
orl
mov
repz
test
sti
sbb
push
daa
aad
mov
dec
scas
mov
inc
cmp
fdecstp
xlat
mov
repz
cwtl
aaa
iret
mov
call
adc
sbb
mov
into
and
jmp
dec
rcrl
and
inc
fwait
inc
mov
dec
aas
push
je
jb
fmull
dec
pushf
xchg
push
je
jg
jecxz
push
mov
xchg
pop
push
std
push
cmp
mov
xor
mov
mov
dec
cmp
pop
or
mov
dec
mov
test
lock
xchg
sbb
add
stos
mov
pop
and
es
cmp
out
lahf
in
dec
jne
imul
xchg
mov
lret
and
mov
add
pop
mov
mov
sub
js
aam
cli
scas
ret
cld
dec
dec
push
mov
fistpl
stos
out
jl
pop
ljmp
int3
lods
inc
js
mov
mov
xor
push
inc
lret
addr16
add
ja
mov
divb
mov
pop
clc
xchg
icebp
dec
shll
or
push
push
hlt
sbb
incl
subl
mov
fwait
arpl
push
jnp
xor
mov
push
xor
cmp
push
loop
mov
cs
sbb
sbb
or
cld
dec
xor
dec
or
sti
sbb
ror
enter
mov
loopne
out
ficompl
shlb
push
mov
jae
and
fbstp
repz
jmp
pushf
xchg
push
gs
mov
scas
jp
cwtl
lds
jle
testb
add
pusha
xchg
mov
xchg
pop
stos
sub
rorb
pushw
xor
add
mov
in
arpl
stos
pop
div
and
gs
cmp
jnp
clc
shrl
inc
pop
in
sbb
mov
pop
adc
pop
inc
sbb
push
inc
mov
add
cmp
inc
shl
jmp
xchg
lock
int3
sub
imul
xor
xchg
xor
dec
jl
rol
push
mov
pop
inc
test
mov
packsswb
rorb
jge
aam
sbb
or
push
add
enter
dec
sbb
insb
outsl
repnz
jge
test
xor
movsb
mov
push
loope
and
in
loope
mov
daa
sub
pop
jno
loope
jl
mov
dec
fcomps
xor
push
movsl
test
mov
dec
lods
sub
push
xor
test
in
sbb
sbb
ret
pop
adcb
pop
pushf
mov
loope
push
xchg
sub
shll
lock
and
xor
mov
subb
sbb
dec
mov
outsl
xor
out
in
push
pop
std
mov
push
iret
pop
sub
cmp
lcall
adc
push
icebp
xor
out
es
sahf
mov
enter
stc
inc
jg
cltd
lock
xchg
sbb
lcallw
imul
int3
xchg
cmp
sbb
testl
mov
das
mov
xchg
rcrb
pop
mov
jb
dec
mov
xor
loop
dec
lret
movsl
loop
in
stc
dec
adc
movsl
push
jge
adc
bound
lods
mov
inc
daa
out
sti
cmp
test
xor
jbe
xchg
cs
or
push
fdivr
push
cmpsl
jle
loopne
jno
pop
sub
lds
inc
jo
imul
lret
add
mov
xchg
adc
je
in
add
cmp
xlat
pop
xlat
mov
sub
outsl
jmp
in
lock
aam
int3
int3
arpl
imul
add
push
cmp
dec
test
fldcw
pop
fdivp
inc
ds
cmp
lea
pop
jb
clc
icebp
push
xchg
mov
pop
push
lods
adc
pushf
and
jmp
test
pop
jmp
mov
inc
iret
in
cmc
aas
divb
xor
mov
push
dec
adc
test
not
adc
mov
mov
xchg
dec
fidivl
xorl
aaa
fisttpl
mov
xlat
lock
cmpsb
das
loop
test
mov
call
hlt
mov
jecxz
es
aad
les
addr16
mov
outsb
rorl
adc
lret
dec
jb
lds
loope
lcall
rcrb
into
adc
lret
ret
mov
cmp
xchg
test
clc
or
ljmpw
mov
lods
stos
jg
mov
and
add
push
loope
shufps
add
cltd
cltd
fwait
xor
add
mov
sti
cmc
xchg
mov
test
jnp
xchg
or
sbb
mov
rcr
mov
sub
mov
push
jb
loop
adc
push
mov
adc
adc
pop
xor
xchg
je
gs
xor
lds
mov
pop
stc
lret
fidivs
and
dec
es
rorb
sbb
push
dec
mov
pop
jne
cmpsb
push
mov
pop
push
out
mov
rcl
sub
sbb
mov
and
or
adc
xchg
jnp
lahf
mov
mov
and
mov
dec
ret
cmp
lods
movsl
in
fisttps
fistpll
inc
jmp
popf
adc
push
neg
js
jg
mov
lock
sub
or
insb
cmpsb
dec
jg
and
shrl
lea
adc
dec
test
mov
pop
in
pop
dec
adc
inc
and
push
jae
frstor
inc
mov
stos
push
push
push
push
call
xchg
inc
push
nop
sbb
lcall
cmp
es
sarb
mov
inc
leave
dec
mull
arpl
les
pop
fnstsw
xor
aaa
sti
mov
xchg
aas
cltd
dec
int3
sbb
pop
and
push
dec
push
xor
fmuls
imul
imul
sub
test
cmpsb
movsb
add
in
enter
insl
fcoml
cmp
into
jl
and
ds
in
and
mov
and
and
lahf
loope
repz
add
jle
inc
xchg
push
mov
sub
lods
int3
pop
test
mov
pop
push
jo
loope
add
loope
push
cmp
xchg
lret
outsb
push
sub
adc
or
int3
cmc
pop
cmp
jnp
sbb
inc
adc
in
xor
sarb
jne
out
adc
lcall
pop
faddl
sbb
sahf
inc
mov
insb
addb
jg
sbb
mov
sbb
mov
frstor
insl
icebp
cmc
ficomps
jle
fcom
pop
lret
jae
test
inc
sbb
pop
into
daa
loopne
cmc
rdtsc
inc
xor
mov
loop
ljmp
xor
in
rep
mov
lods
std
out
xchg
out
cli
mov
xchg
push
cmp
iret
lcall
sbb
gs
cltd
dec
loopne
lods
cmp
sub
adc
and
adc
je
add
or
sbb
push
push
ret
lret
mov
xchg
shr
pop
js
sti
jnp
cs
xor
aad
ja
nop
bound
mov
fldenv
les
sub
repz
jl
cmp
hlt
mov
jae
and
adc
adc
pop
fcoms
repz
stos
pushf
int3
mov
mov
sub
pop
xor
aas
xchg
icebp
add
fcmovnbe
hlt
dec
mov
push
movsb
pop
lods
jecxz
sbb
std
lahf
test
mov
pop
pusha
mov
pusha
orl
lcall
inc
inc
pushf
mov
outsl
cmp
test
sbb
push
xor
stc
not
shrl
jmpw
mov
xor
and
sbb
cld
sub
pusha
lret
incb
das
mov
adc
add
xor
arpl
sub
enter
sub
ret
sbb
push
sub
mov
inc
pop
cmpsb
xchg
cli
jns
ljmp
jnp
push
pop
loope
pop
out
out
test
pop
push
stc
or
and
xlat
ja
sarb
or
shlb
pop
in
pop
dec
mov
pushf
popf
xchg
xchg
sbb
push
sub
aaa
pop
xlat
cli
movsl
stos
aam
clc
push
adc
andl
push
cmp
jp
xor
mov
or
ds
je
dec
mov
push
cmp
imul
ja
sbb
sbb
clc
inc
sarb
or
adc
dec
cltd
loope
jne
push
cli
mov
out
out
cwtl
call
fdivrs
jne
in
mov
xchg
xchg
sti
out
mov
and
dec
cmp
mov
adc
rolb
mov
mov
dec
imul
mov
sub
xchg
add
add
add
push
mov
sbb
mov
push
mov
and
sbb
jnp
outsl
ret
scas
jge
sbb
mov
adc
stc
mov
sbb
cmp
jmp
or
das
dec
divl
iret
jmp
or
xor
and
sarb
mov
pusha
mov
xchg
sahf
fisttps
and
out
mov
cmp
cmp
pop
lret
js
divl
cs
add
mov
lds
hlt
dec
xchg
pop
sub
jbe
enter
jne
sbb
mov
sub
fistpl
push
xor
xor
pop
jo
sbb
repz
cmp
xorl
jnp
push
cmpsb
daa
sub
in
scas
lcall
sub
imul
arpl
mov
cmp
movsl
xchg
pop
adc
xorl
push
xlat
xchg
test
jnp
ja
loop
mov
pop
shrb
ficoms
sbb
sub
mov
cmp
js
cmp
in
outsb
mov
repz
out
aaa
push
imul
add
scas
add
lea
add
aam
cmp
lock
movl
in
push
cmpsl
push
push
outsl
fsubrl
jnp
out
mov
sbbb
jg
pushf
mov
fidivrl
mov
hlt
shlb
nop
fnstenv
stos
mov
fcoms
add
and
sbb
sbb
add
inc
cmc
adc
outsl
or
stc
mov
sub
adc
lock
lods
mov
mov
cli
jmp
sbb
pop
or
cmp
inc
inc
or
push
and
gs
nop
loopne
xor
outsl
jg
in
add
fs
jne
add
mov
aas
sbb
xchg
popa
lock
or
jns
push
clc
hlt
in
xor
sub
add
das
xchg
jbe
testl
dec
int3
dec
xor
fstps
inc
jmp
loopne
pop
inc
das
loopne
into
jb
call
popl
les
dec
xor
pushf
ja
and
pop
das
add
cmp
sbb
xor
xorb
sub
mov
jecxz
mov
negb
pop
std
inc
lods
push
mov
mov
dec
andl
gs
mov
mov
fcomi
loopne
xchg
mov
add
and
bound
es
add
dec
cwtd
andl
test
sbb
cs
push
xchg
push
lret
insl
test
mov
pop
jo
mov
adc
rolb
mov
aam
ret
test
test
cld
dec
fucom
sbbb
mov
xchg
cmp
imul
or
out
out
sub
aam
mov
test
cli
add
insl
xchg
test
aam
mov
add
xchg
inc
dec
or
test
push
fildl
imul
std
xor
cwtl
stos
ret
imul
mov
call
test
sti
jg
xor
lea
xor
inc
jl
sbb
mov
adc
mov
outsl
add
outsl
dec
or
push
inc
addr16
xchg
or
fnsave
xchg
adc
jl
fidivs
addr16
mov
mov
xor
jns
pop
and
xor
xchg
and
out
jle
sub
inc
add
jp
push
test
mov
sub
loopne
xor
das
in
fcomip
repnz
xchg
aad
jbe
aad
cmc
xchg
xor
cmpsb
subl
push
jl
aam
int
xor
scas
loopne
push
test
sub
cmp
jnp
push
xchg
scas
loopne
ficoml
jno
adc
adc
ret
pop
pop
mov
sti
inc
cmp
dec
jae
add
pop
or
lods
jle
inc
dec
lods
aaa
ficoml
jmp
xchg
cmc
mov
int
cmpsb
imul
add
mov
adc
pop
repnz
pop
sti
leave
cmp
jg
xchg
popf
cld
arpl
jg
jl
add
pushf
mov
imulb
aaa
jns
dec
or
xchg
sub
insl
inc
jge
icebp
or
or
push
adc
int3
ret
jo
ret
arpl
out
pop
cmp
dec
movsb
inc
xchg
lcall
enter
out
enter
daa
daa
cmp
mov
jl
ja
dec
and
xchg
adc
push
push
mov
stos
adc
push
inc
cs
inc
jno
dec
push
jns
notl
lods
pop
pop
jl
push
and
sub
adc
outsb
sbb
lea
shll
mov
andb
into
add
int
xor
push
arpl
outsl
sub
dec
pop
pcmpeqb
stos
pushf
mov
push
loope
sub
loopne
test
fildll
cmpb
jg
and
mov
int3
test
mov
and
ss
pop
aam
fs
push
fmuls
testl
clc
shll
mov
lods
push
mov
cmc
popf
push
pop
xor
xor
out
pop
loop
xchg
fwait
stc
jae
hlt
fs
adc
data16
xchg
lods
jo
inc
mov
cmp
out
dec
cltd
cli
push
dec
pushf
xor
mov
sahf
or
lahf
incb
andl
xchg
and
or
mov
adc
nop
and
lret
push
add
out
sbb
int3
add
xlat
dec
and
sub
mov
xor
test
cs
in
aad
notb
dec
sub
mov
call
lret
mov
clc
movb
lea
arpl
push
mov
pop
insl
dec
xchg
adc
inc
jmp
push
sub
leave
nop
inc
and
addr16
aas
sarl
jb
mov
dec
je
mov
out
ds
negb
inc
cli
cwtl
fwait
jae
mov
xchg
mov
jecxz
cmpl
pop
pusha
fistl
bound
push
das
mov
lock
cmp
jg
ljmp
addl
shll
jnp
insb
and
mov
dec
popa
nop
pop
cmpsl
lods
pop
mov
repz
stos
lret
fadd
xchg
mov
push
sub
mov
das
jb
rclb
in
daa
sub
scas
xchg
ret
cmp
or
cmp
mov
adc
ljmp
inc
lods
in
fidivrl
dec
enter
add
push
scas
popf
jg
jecxz
xchg
add
add
test
pushf
mov
push
xchg
dec
outsl
dec
shrl
sub
sbb
push
rcl
inc
sbb
sub
add
push
pop
ret
cmpsl
mov
add
pushf
or
lcall
or
lods
xor
xchg
jmp
mov
inc
scas
mov
sub
sbb
inc
fidivs
fwait
ret
mov
xor
fidivrs
out
push
enter
cmp
dec
jecxz
in
test
out
mov
sub
inc
pop
or
jp
cmp
mov
cwtl
mov
jle
pusha
sub
mov
jl
fists
mov
inc
jmp
xchg
jp
cld
fstps
hlt
push
sub
call
test
and
aaa
sarl
imull
scas
inc
dec
rclb
xchg
adcb
xchg
push
iret
fisubl
push
pop
out
fistpll
inc
xor
inc
lds
shrl
xchg
inc
into
pushf
push
xchg
dec
pop
sbb
out
imul
inc
lds
das
shrb
clc
repnz
je
leave
mov
pop
hlt
filds
mov
jbe
divb
shll
aaa
cmp
or
mov
add
pop
int3
fcompl
lock
scas
sub
xor
jmp
xchg
fldenv
jp
int3
cmp
xor
inc
cmp
sub
sbb
daa
es
cmp
fcompl
dec
xchg
dec
mov
movsl
mov
add
lahf
ds
adcl
xor
adc
inc
add
ja
sqrtps
pop
or
xor
push
mov
sub
jg
cmp
sub
adc
pushf
into
mov
mov
rcrb
or
add
aas
and
sub
push
shrw
out
sub
mov
test
add
faddl
test
sahf
sub
pop
test
jb
xchg
pop
test
scas
sbb
xor
mov
lahf
and
int
cmp
pop
cmc
mov
pop
add
rorl
mov
pop
push
into
sarb
xor
or
mov
movsl
rorl
adc
add
push
adc
mov
imul
fmull
mov
and
inc
stos
bound
ror
adc
push
inc
mov
pop
cmpsb
add
imul
jne
add
xchg
and
cmp
cmp
xlat
xchg
daa
sub
mov
inc
add
in
pushf
and
sti
mov
cs
sub
aad
dec
mov
dec
mov
inc
cltd
adc
cmp
les
cmc
repz
test
inc
mov
lea
popf
lea
pop
and
jp
int
sbb
add
xchg
lods
cmpb
bound
jb
aam
dec
out
push
and
push
jecxz
ss
mul
mov
std
xchg
shr
push
fnsave
pop
cli
xor
iret
aas
mov
fildl
push
mov
xchg
shlb
xchg
mov
sub
js
adc
xor
rol
insl
push
es
in
mov
dec
pop
sbb
and
dec
xchg
icebp
lret
cld
stos
arpl
dec
leave
sbb
and
lds
shl
movb
mov
sub
push
jno
pop
fnsave
adc
clc
cmc
mov
xchg
mov
fldl2e
sbb
popa
ljmp
mov
lods
or
ja
int
mov
cmovb
jns
mov
cmp
mov
pop
inc
xchg
outsb
dec
or
and
xchg
aas
cld
sbb
mov
pop
fsubs
push
cmp
add
and
sar
xchg
xor
leave
flds
or
fcoml
xor
frstor
shr
add
in
jg
addr16
dec
dec
repnz
jge
xchg
inc
loope
sub
xor
inc
stos
and
mov
cmpsl
out
xor
ja
jns
adc
in
imul
je
repnz
pop
insl
sub
cmp
test
adc
sub
mov
mov
mov
pop
add
in
imul
xor
movsl
clc
jmp
leave
imul
add
popf
sbb
mov
daa
inc
cmp
sarb
insb
push
test
scas
cmpsb
mov
push
test
andl
and
addr16
and
movsb
hlt
jae
cmp
inc
enter
push
xor
push
dec
adc
xchg
mov
test
sbb
mov
je
dec
xchg
inc
push
sbb
std
rcrl
sub
sub
sub
jbe
mov
or
mov
in
aaa
negl
or
addr16
add
add
pop
fimuls
push
fcmovnb
shll
inc
dec
mov
and
add
movsb
pop
mov
loope
mov
inc
in
fs
cs
and
das
mov
jl
sbb
dec
add
movsl
test
cmp
push
lret
pop
lahf
pop
out
push
push
mov
fsubrl
insb
rol
xchg
add
xchg
test
push
cmpsb
or
sub
rcl
in
imul
adc
ja
jno
addb
xchg
push
add
add
jb
imul
popa
decl
pop
or
push
pop
jae
fsubrl
mov
push
subb
dec
mov
dec
mov
mov
jb
and
scas
test
ret
test
sub
shl
repz
xor
into
mov
xchg
sub
xor
xor
outsl
movsl
jp
loop
or
and
fs
fiadds
data16
mov
repnz
adc
cli
test
push
xor
cmp
decb
in
push
loopne
push
daa
adc
out
mov
jae
add
dec
dec
xchg
jecxz
mov
scas
adc
xlat
mov
push
xchg
mov
pop
inc
mov
pop
pop
mov
cs
rcl
int3
add
nop
into
cmpsl
dec
jmp
insb
push
les
push
repz
cmc
dec
mov
jl
pop
call
mov
rorl
mov
js
popa
jmp
out
pop
pop
sbb
in
inc
xor
mov
adc
jb
cmp
dec
data16
je
add
jecxz
jae
mulb
mov
std
cmp
stos
cwtl
adc
lods
mov
loopne
mov
insl
xchg
mov
cmpsb
int
int3
in
sub
icebp
jp
das
cmp
dec
std
mov
lahf
xchg
or
psadbw
es
mov
dec
push
cmp
and
jmp
icebp
mov
mov
mov
add
and
mov
nop
icebp
sarb
sbb
ret
push
in
push
push
xor
fstpl
jp
xor
aaa
ljmp
cltd
lods
ret
mov
adc
xchg
mov
jg
pop
xor
scas
adc
dec
mov
pop
sbb
push
adc
lods
xchg
test
ljmp
loopne
lods
roll
test
mov
insl
mov
fsubrs
inc
or
xor
cmp
mov
adc
cli
mov
mov
pop
in
in
test
sub
xchg
or
xor
fwait
and
dec
and
clc
pop
mov
in
out
adc
add
jns
loopne
in
cmpsb
push
xchg
ret
mov
add
mov
or
roll
test
jp
mov
idivl
mov
jbe
mov
popf
inc
jne
int
test
sub
notb
mov
xchg
sub
popf
inc
sbb
pop
sub
stc
push
stos
or
insb
mov
mov
push
lock
lods
adc
xchg
cwtl
xlat
popf
ret
sbbb
addl
add
data16
sbb
or
xchg
cli
push
add
insb
xor
fisubrs
jmp
jbe
xchg
shlb
mov
push
inc
sub
mov
fdivr
arpl
pop
jge
push
lods
aaa
mov
fisttpl
add
add
dec
fxch
mov
fwait
pop
or
adc
xor
lahf
jle,pn
sub
and
mov
push
mov
shll
dec
es
push
mov
xchg
cmp
mov
jl
lods
mov
jb
mov
push
mov
xchg
out
cmpsb
xor
and
dec
test
cmpsl
push
pop
xchg
lods
lret
pop
insb
xchg
js
adc
pop
push
cld
pop
push
jne
loope
xlat
sub
aad
cmp
lcall
push
les
sarb
popa
sbb
mov
mov
pop
pop
push
insb
pop
sti
int
repz
fdivrl
mov
lcall
sbb
pop
inc
mov
sahf
jb
xlat
test
or
sub
data16
fisttpl
mov
test
mov
lcall
mov
fs
jge
cwtl
testl
shlb
inc
rcrb
lret
xchg
addr16
jl
xor
lea
jbe
loop
adc
fs
and
jmp
dec
data16
dec
lods
and
push
out
cmp
cli
mov
loop
arpl
cmp
popa
fisttps
scas
inc
and
scas
sbb
sar
or
cmc
or
adc
mov
call
lret
add
lret
sbb
jge
sub
add
dec
mov
in
jb
aaa
sti
out
leave
cs
and
nop
test
cmpsb
pop
inc
mov
inc
jge
pusha
or
sbb
lcall
push
mov
fimull
sub
mov
pop
xchg
xor
cmpsb
add
pushf
and
jmp
jecxz
pop
mov
push
flds
xchg
repnz
mov
fnsave
xlat
ja
fstl
and
sbb
mov
data16
pop
std
loop
test
int3
insb
loopne
xchg
dec
sbb
std
in
dec
test
pand
divl
dec
addr16
inc
add
mov
sub
rcrl
jae
cmc
fisttpll
dec
push
in
lock
and
mov
js
pop
cld
add
mov
xor
aad
mov
or
xchg
inc
push
aam
data16
ret
in
sbb
fnstsw
mov
imul
ljmp
mov
sub
add
jae
fcoml
inc
push
in
str
add
and
in
iret
test
and
mov
push
xchg
test
movsb
xor
test
lock
xchg
repnz
xchg
cmpsb
pop
rcr
repnz
stos
jg
pop
push
inc
push
add
cmp
ltr
mov
ja
ljmp
mov
pop
mov
push
pushf
leave
mov
pop
push
fimuls
sub
ret
jnp
or
dec
xor
push
pop
mov
dec
cmpsb
jne
lcall
repz
bound
mov
in
xor
xchg
adc
add
mov
xchg
sub
xor
dec
andl
rcrl
mov
mov
in
stos
jle
cmpsl
daa
in
mov
ret
rorb
xor
and
int3
jmp
pop
or
ds
mov
jns
lcall
stos
jle
jmp
cmp
cmp
addb
out
push
aaa
push
call
pop
xchg
sub
divl
ret
nop
pop
xchg
outsl
in
inc
data16
test
into
test
or
cwtl
mov
inc
dec
xchg
xchg
push
movsl
in
jns
ja
pop
pop
jge
or
ss
sarb
mov
mov
pusha
xor
ds
mov
mov
mov
aaa
jne
sub
cmc
or
add
inc
push
int3
popf
dec
sbb
fsubl
push
mov
arpl
or
sbb
inc
pushf
xchg
inc
add
xor
or
push
cmp
and
cmp
sar
jl
adc
sub
movsl
mov
sub
mov
fcoml
dec
xchg
test
jb
dec
inc
lods
xor
pop
or
xchg
add
adc
push
flds
and
sub
mov
movsb
outsb
movsl
mov
mov
sub
fiadds
sbb
lea
xor
popf
int
insb
jbe
push
or
lcall
faddl
fs
sub
mov
jmp
cmp
push
mov
sahf
mov
xchg
mov
lea
cmpsl
push
ss
iret
xor
cmp
fxch
push
lods
sahf
rorl
popf
mov
jmp
into
jns
xchg
cmc
mov
adc
loop
dec
xor
dec
or
sub
cmp
not
imul
add
cs
ljmp
cmp
cli
testl
shl
mov
loopne
mov
xchg
adc
mov
lods
pop
hlt
adc
push
add
add
imul
jnp
mov
add
cltd
mov
fldl
sti
xchg
add
cs
mov
aad
mov
pusha
dec
cmpsl
inc
ds
rol
aam
scas
sarl
cmpb
inc
test
push
mov
push
pop
cmp
cmp
into
sub
jmp
fwait
in
pop
pop
js
inc
inc
push
xchg
inc
mov
or
dec
leave
shlb
pop
dec
push
xchg
jl
rclw
mov
imulb
push
cwtl
xchg
push
mov
out
adcl
mov
es
cmpsl
addr16
sti
inc
andb
push
mov
lods
rcrb
insl
es
mov
xor
cmpsl
and
mov
icebp
dec
xor
cld
sub
lret
cwtl
outsb
dec
mov
cmp
mov
stos
mov
adc
mov
repz
mov
dec
push
mov
adc
clc
cmpsb
cmp
test
je
nop
popa
das
xchg
push
lods
cwtl
jecxz
mov
lea
push
sbb
xor
divl
xchg
dec
add
mov
mov
xchg
bound
lahf
mov
xchg
mov
xchg
outsb
sbb
cli
shll
lret
fld
call
push
out
and
ret
mov
std
call
fcoms
or
aas
xor
xor
mov
mov
cmp
ja
mov
pop
inc
pop
dec
inc
or
cmp
dec
jmp
cwtl
jne
mov
cwtl
out
shlb
loope
sub
in
pop
dec
xchg
popa
mov
dec
sub
sub
xchg
rorl
jp
and
mov
rorl
mov
push
stc
arpl
cld
int3
in
scas
sbb
fists
adc
out
in
xchg
sub
movl
nop
jno
mov
in
pop
stos
icebp
cltd
repz
popa
jge
in
xor
mov
or
repnz
addr16
enter
faddl
and
push
addl
xor
xor
xchg
xchg
test
add
out
imul
fisubrs
sbb
rcrb
out
repnz
cmp
scas
sub
arpl
ret
inc
jge
mov
pop
aaa
xor
ret
or
insl
sbb
pusha
pop
xchg
int3
mov
out
push
test
jo
das
mov
and
cmpsl
jecxz
stc
fstpl
cli
in
push
push
je
cmpsb
cmp
gs
daa
and
mov
jl
dec
out
push
cmp
dec
call
lcall
lods
fistl
fisubl
push
cmp
and
sbb
mov
js
inc
in
xchg
cmp
scas
xor
cmp
sub
jl
cmp
rcl
outsb
or
scas
adc
or
jbe
mov
and
add
nopl
dec
inc
xor
mov
jb
jnp
ds
shrb
pop
mov
mov
pop
add
pop
ret
data16
push
push
sahf
mov
sub
addb
jne
pushw
xor
or
in
and
fiadds
ss
sbb
cmpsl
xchg
sub
repz
xor
inc
jp
shll
outsb
sbb
jecxz
cmc
orb
outsl
inc
jp
loop
rcrl
js
fs
xchg
or
jp
lret
jg
mov
sbb
cli
sbb
mov
aaa
or
sub
inc
dec
loopne
xchg
adc
cmpsb
imulb
jmp
ret
inc
adc
and
imul
addl
sub
int3
sub
dec
cmc
data16
inc
sbb
cs
add
dec
push
jmp
inc
in
adc
in
cmp
jbe
add
mov
sub
cmp
add
mov
pop
in
mov
addr16
jns
mov
pop
add
incl
mov
inc
cmpsl
push
stos
aas
out
movsl
out
jb
stos
jmp
lret
mov
je
mov
jecxz
mov
test
cwtl
inc
dec
std
mov
lods
inc
mov
add
sub
dec
dec
jle
push
fildl
lret
push
mov
lods
mov
js
lock
fimull
mov
push
cld
ss
rclb
sti
sahf
repnz
or
setne
mov
icebp
mov
lret
pop
addl
fisttpll
inc
mov
mov
lret
shlb
outsl
sub
xor
ret
add
push
jge
xchg
int
mov
loope
rclb
out
push
lods
add
jbe
cmp
sbb
movsbl
cltd
push
andb
dec
jb
xchg
jo
jb
jle
movzwl
sbb
jnp
rorl
pop
subb
scas
and
mov
xor
cs
xor
sub
mov
sbb
rcll
lods
dec
mov
inc
and
cld
jmp
dec
into
mov
mov
mov
cwtl
bound
jns
sub
in
dec
mov
out
jg
sub
daa
aad
addr16
clc
mov
xor
mov
ret
jle
jle
inc
xchg
in
aaa
dec
pusha
stc
push
xlat
fbstp
dec
jo
lahf
dec
add
add
loopne
push
pusha
adc
adc
push
and
test
sub
mov
jnp
scas
xor
lds
push
adc
clc
add
mov
sbb
outsb
call
rolb
jae
faddl
inc
aam
mov
push
dec
or
fiaddl
scas
xchg
decl
jl
cmp
push
ficoms
movsl
lds
js,pn
mov
adc
dec
call
hlt
push
pop
cmpsb
arpl
cmp
jbe
pop
and
sbb
xlat
xchg
or
subb
negl
rcrl
jl
push
lds
push
or
dec
arpl
pop
subb
mov
xchg
movsb
test
fcoms
ljmp
add
enter
daa
and
cmp
sbb
adc
dec
mov
outsb
movsl
les
mov
push
pushf
sahf
sahf
test
or
jno
ficomps
lret
xchg
dec
js
aaa
bound
rcrl
and
sbb
loope
sub
sub
push
mov
outsb
imul
adc
jecxz
loopne
in
sub
adcb
inc
sbb
and
add
gs
xor
sub
push
jne
or
pop
or
add
push
mov
adc
pop
sbb
fistpl
or
adc
jg
cmpsb
mov
mov
xchg
and
pop
xchg
ss
push
cmp
scas
js
test
cld
mov
mov
sbb
daa
scas
into
aas
pop
cmc
inc
daa
test
addr16
jl
and
push
stc
mov
push
mov
lods
ficompl
xchg
out
rcrl
cli
push
ds
cmp
test
das
pop
xchg
gs
mov
bound
pop
inc
mov
fisubrs
sbb
adc
mov
add
int
out
pop
xchg
sbb
cs
stos
xlat
ret
sub
mov
das
in
mov
jns
repz
pop
cs
pop
aad
rcrl
cmp
pop
inc
clc
in
fstps
popa
les
sbb
push
jmp
lea
loop
or
cmc
adc
push
jp
mov
adc
xchg
dec
jle
inc
ret
aas
lea
pusha
dec
inc
jp
je
in
mov
dec
or
movsbl
xlat
mov
cltd
inc
mov
mov
out
ret
dec
imul
mov
divb
pop
movsb
insb
das
mov
loopne
mov
lret
jne
rorl
ret
lods
enter
mov
inc
jle
cmpsl
and
mov
std
add
subl
mov
dec
enter
and
rolb
test
aam
adc
ret
xchg
cmpsl
mov
jmp
psubb
mov
pop
xor
or
fistpl
out
pushf
test
xchg
fidivl
push
shll
and
sbb
lock
xor
sbb
and
stos
test
js
xchg
or
lods
hlt
mov
pop
das
push
lock
dec
scas
test
sub
xchg
aad
test
pop
and
or
data16
jns
mov
and
xchg
pop
mov
dec
mov
push
inc
mov
les
or
pusha
lret
jne
out
nop
cmc
out
sbb
mov
xchg
ljmp
ljmp
and
inc
jp
dec
mov
sub
pusha
mov
enter
xorl
xchg
mov
adc
xchg
push
sub
mov
adc
ficomps
mov
bound
scas
stos
xlat
dec
int
inc
in
sub
dec
jnp
in
push
scas
xchg
sbb
adc
imul
cmp
or
ret
in
cli
inc
xlat
xchg
push
or
or
push
inc
enter
clc
cs
push
xor
sbb
sub
mov
cmc
and
lds
dec
cmpsl
mov
pushf
push
outsl
leave
jge
fwait
hlt
mov
sub
push
bound
stos
lcall
mov
xchg
or
dec
icebp
add
icebp
jo
leave
jb
push
dec
call
shll
subb
test
mov
cmp
mov
push
rep
push
cmpsb
aas
rclb
out
mov
daa
and
jno
push
xor
jno
or
rorl
ljmp
push
xchg
and
sbbb
xchg
mov
push
shll
scas
mov
mov
js
sarl
adc
mov
sub
jae
cmp
fisubrl
out
adc
mov
push
push
andb
dec
sbb
loop
add
iret
dec
xor
ljmp
sub
lock
pop
mov
sbb
add
sub
sahf
call
xchg
xorb
icebp
jg
dec
divl
sti
shll
push
jg
and
sbb
ret
cmp
imul
in
rcl
jle
cmp
sbb
into
push
cmc
push
sub
ret
outsl
add
inc
stc
je
aad
adc
or
insb
adc
lahf
push
out
or
xor
mov
and
cmp
fsubp
popa
push
pop
pop
pusha
and
adc
hlt
adc
push
mov
sahf
mov
mov
popf
sbb
imul
fisubs
push
sbb
cs
das
aad
jg
nop
adc
aas
mov
fsts
cmpsl
les
or
pop
pop
test
call
xchg
pop
push
add
mov
jmp
pop
sbb
inc
test
cmp
jb
dec
call
je
jp
jecxz
fwait
jne
jb
pop
std
jle
cwtl
mov
push
aas
mov
xchg
mov
pop
fistpll
mov
cmp
jae
loopne
mov
mov
popa
jne
mov
fdivrs
push
jg
rcrl
xor
jmp
dec
ds
mov
aam
outsl
cld
lods
mov
lret
in
or
dec
inc
frstor
or
lods
rcr
and
adc
mov
sarb
fistpl
clc
push
outsl
xchg
xor
cmc
ljmp
cltd
lods
fsts
mov
jmp
pop
push
lods
adc
jmp
add
popf
sbb
sar
test
and
jns
inc
dec
inc
cmp
xchg
mov
pop
and
shll
sub
pop
ficoml
cmp
jae
pop
sbb
add
add
push
cmp
xor
das
cltd
xor
sbb
mov
arpl
mov
inc
or
ja
add
dec
movsb
xor
inc
pop
lcall
or
mov
jne
or
jmp
bound
jbe
push
nop
mov
xchg
dec
sbb
push
sub
sbb
cmp
popf
outsl
mov
pop
add
aad
jle
mov
in
jne
pusha
das
xor
fucomip
mov
xchg
insl
push
gs
mov
in
adcb
or
xchg
push
mov
mov
and
jne
aam
cmp
scas
clc
adc
subl
xchg
test
pop
outsl
jl
inc
xchg
cs
inc
fiaddl
push
inc
mov
ljmp
xchg
xchg
imul
sub
cwtl
adc
sbb
cli
mov
out
aad
leave
hlt
jne
hlt
in
pop
icebp
arpl
pop
std
jbe
fildll
push
loope
sbb
and
aaa
jno
lods
or
enter
xchg
int3
dec
ror
pop
clc
sub
push
sub
cmp
scas
xchg
out
cmp
jnp
movsb
fwait
add
push
inc
mov
std
in
into
pop
or
cmp
inc
daa
pop
mov
cmp
mov
cmpsb
dec
popf
scas
pop
ds
movsb
movsl
rolb
inc
lahf
pop
xchg
mov
test
sahf
add
inc
jmp
std
pop
das
mov
sbb
push
lar
jg
cmpsb
sub
lods
dec
cmp
push
lea
frstor
lds
cmpsb
stos
add
cmp
push
sbb
filds
mov
push
jnp
pop
int
cmp
sub
dec
pop
pop
jo
lcall
stos
fsubrl
inc
adc
sbb
jg
icebp
shlb
jb
cmp
sbb
ss
pop
fsubs
or
inc
inc
xchg
sbb
data16
and
add
and
fwait
into
add
mov
fistps
pop
stc
sub
sub
jbe
scas
add
icebp
mov
enter
test
sbbb
cmpsl
mov
pop
call
inc
loopne
push
std
pop
jg
xchg
push
xor
and
dec
testb
xchg
sbb
cltd
push
jns
movsb
out
out
inc
es
sub
shlb
mov
sti
push
stc
int
stos
enter
nop
add
and
mov
push
fldenv
and
pop
repz
xor
inc
push
sub
push
mov
inc
adc
lret
ret
jae
mov
push
pop
ljmp
inc
clc
outsl
xchg
aas
lret
push
lcall
icebp
out
xchg
pop
jecxz
outsl
movsb
divb
sbb
mov
sbb
out
xor
das
cmp
rcrl
push
push
push
mov
adc
jecxz
ja
mov
mov
loope
ret
mov
lods
insl
ret
dec
cmp
lods
cmpsl
push
xor
in
icebp
stos
fs
cld
xlat
rol
lret
push
pop
cmp
and
inc
movsb
xchg
daa
dec
jmp
sub
push
aam
aam
ret
mov
xchg
push
movb
inc
xchg
addr16
xchg
data16
inc
fmull
lods
inc
jns
mov
bound
icebp
push
xchg
add
lcall
lods
xor
mov
mov
in
test
mov
xchg
mov
rorl
sub
push
jae
daa
add
and
xchg
push
xor
dec
push
cmpsb
lret
xor
psubb
cmpsb
cmp
mov
add
xchg
ja
and
dec
xchg
hlt
movl
cmp
fwait
cmp
jne
movsb
push
mov
mov
xchg
bound
cmp
xchg
popf
into
and
sahf
xchg
sub
sbb
jns
rolb
mov
sub
mov
adc
lahf
in
sub
pusha
lret
fisttps
sahf
rclb
inc
pop
xchg
push
fiaddl
push
or
popf
sub
enter
xchg
push
loopne
enter
jge
jno
adc
jnp
mov
scas
pop
std
mov
adc
js
ror
test
pop
cmpsb
jae
fucomp
inc
fucom
clc
or
push
popa
inc
mov
ficompl
movsb
xchg
add
mov
and
imul
daa
fidivrs
idivl
rolb
push
repnz
dec
leave
imul
aaa
sub
jbe
sarb
jge
or
sbb
jecxz
aaa
xor
rorl
mov
aaa
add
lcall
or
xor
shll
scas
mov
adc
cmp
dec
icebp
movsb
es
push
xchg
in
cmpsb
inc
lods
fucomip
mov
pop
enter
daa
push
push
sti
cmp
xchg
mov
insl
jno
dec
or
or
fdivrs
lock
inc
inc
push
adc
xchg
sub
inc
js
sbb
daa
lahf
test
mov
mov
push
push
ss
or
cmp
xchg
adc
je
popa
orb
xchg
dec
mov
xor
or
int
daa
or
mov
loope
lcall
jae
pop
imul
sahf
inc
cmp
insb
ficompl
jg
pushf
cmp
jmp
imul
cmp
fucomip
pop
idiv
mov
imul
pop
mov
leave
xlat
sbb
ss
call
push
or
js
xchg
outsl
mov
lret
stc
loop
je
sub
xchg
adc
sarb
adc
xchg
bound
out
or
cli
jmp
pop
out
cwtl
fs
dec
stc
paddd
mov
xchg
jo
pop
sahf
hlt
jmp
sub
loope
addb
add
sbbl
jg
shrl
jl
mov
hlt
push
fdivr
add
arpl
or
add
daa
dec
andb
rol
les
addl
aam
inc
call
test
out
adc
mov
aam
les
inc
adc
cs
push
push
jb
mov
sbb
xchg
jecxz
xchg
idiv
xor
std
int3
mov
cwtl
cs
dec
mov
mov
iret
addl
mov
mov
or
mov
cmpsl
fdiv
outsb
xchg
sub
push
xchg
mov
xor
pushf
sarl
and
insl
test
inc
cmp
push
mov
orb
add
test
ret
jl
mov
pop
pop
loopne
fiadds
outsl
sarb
sbb
pop
into
push
aam
mov
ret
aas
mov
mov
clc
int
xchg
xchg
scas
rcr
ljmp
or
cltd
xchg
out
lds
xchg
scas
jb
push
bound
mov
cmp
add
jecxz
das
or
test
or
test
test
xor
xchg
imul
lds
stc
pop
xor
xor
push
push
bound
push
push
add
lods
xor
xor
or
pop
fisubs
jmp
xchg
xor
mov
mov
dec
adcl
dec
pop
or
mov
and
out
sub
mov
enter
mov
in
ret
mov
sub
adc
jp
rorb
fcomps
insl
mov
jg
adc
repnz
incb
pusha
gs
fildll
sub
jmp
and
insl
addl
pushf
push
sbb
or
cld
sub
pop
jae
stos
xor
outsl
insb
stos
mov
jnp
ds
scas
mov
gs
adc
mov
iret
xor
mov
inc
test
das
jae
mov
pusha
or
jp
testb
neg
adc
pop
xchg
pop
add
jnp
inc
imul
jae
fmulp
lds
insb
xor
and
adc
xchg
jl
leave
loop
jle
orb
jbe
ss
mov
aaa
cmpsl
aaa
out
shr
or
add
pop
or
push
repz
xor
sbb
lods
scas
inc
ror
and
ret
mov
loop
loopne
xchg
pushf
in
enter
daa
sbb
inc
imul
int3
jl
int
dec
jnp
in
sti
push
jle
loopne
frstor
sub
gs
push
lock
mov
test
xor
iret
inc
pop
sub
ljmp
js
fadd
pop
iret
fdivrl
lods
sahf
fsubrs
iret
add
mov
rorb
in
sbbb
sbb
hlt
sub
push
sbb
jb
xor
cmpl
pop
add
movsb
repnz
adc
faddl
inc
mov
out
stos
test
cmp
and
mov
jo
mov
pop
mov
and
out
les
mov
or
fcomps
mov
add
rcrl
ja
sbbb
movb
rcrl
int
jmp
sub
adc
pop
or
aas
mov
shlb
inc
pusha
mov
ret
cmc
lret
jo
mov
push
fs
popf
and
mov
inc
lcall
xor
dec
jp
xchg
sti
imul
xlat
mov
and
mov
pop
fstl
scas
or
jo,pn
sbb
add
ficoml
loope
jb
inc
popf
push
fprem
sbb
repz
iret
lea
test
inc
movl
xlat
adc
sbb
pushf
rolb
pusha
pop
xor
add
inc
cs
or
lret
dec
push
clc
push
je
pop
mov
test
shl
cmp
pop
std
jae
cmp
mov
cmpsb
push
mov
xchg
push
dec
adc
push
add
mov
in
leave
or
push
mov
out
push
and
xchg
sub
xchg
mov
insl
nop
mov
dec
das
add
sbb
dec
mov
pop
push
sar
mov
mov
add
jae
pop
gs
add
push
js
aam
out
ret
into
mov
sbb
clc
or
ss
out
or
es
add
push
lret
cmp
mov
sub
xchg
mul
lea
es
setns
daa
cltd
popw
stos
test
push
jne
andb
dec
jne
std
test
inc
and
js
xchg
sarl
sub
jmp
push
mov
add
add
lds
or
out
xor
idivb
sub
stos
mov
js
fbstp
in
dec
jge
cli
inc
in
and
xor
fwait
cltd
lahf
rorb
xorb
add
inc
bound
mov
jns
jbe
in
dec
test
cmp
test
dec
mov
mov
push
shll
adc
mov
out
xchg
stc
jle
lcall
in
sarl
dec
jle
xchg
out
push
jmp
in
lahf
dec
adcl
sbb
mov
pop
dec
shrl
lahf
int3
insb
adc
mov
and
add
adc
jmp
ret
lret
pop
adc
faddl
pop
jae
fstp
inc
jecxz
sbb
cmc
dec
aam
les
fcmovb
int
xchg
mov
ficomps
mov
cld
fiadds
jne
sarb
dec
mov
call
add
hlt
int
jmp
or
push
jbe
lar
or
dec
aaa
scas
sbb
or
repnz
or
pop
test
xchg
sti
divl
ja
subb
jb
inc
fmul
movsb
cmp
push
push
das
ss
std
lret
enter
daa
sbb
ljmp
test
js
ljmp
movsl
out
xor
push
es
je
ds
mov
ljmp
xchg
dec
mov
lods
cmp
movsb
sbb
pop
push
push
adc
inc
xor
les
sub
push
icebp
cmp
dec
movsb
outsb
pop
jne
adc
sub
mov
sbb
inc
cwtl
add
sarb
test
bswap
test
fldt
mov
gs
test
lcall
xor
mov
repz
add
mov
xchg
andb
js
pop
sahf
fisttpl
andb
into
pop
lahf
cmp
push
jo
idivl
or
adc
shrl
cmp
in
xchg
sbb
ss
sub
push
xor
and
push
loop
scas
jns
push
insb
push
fs
mov
adc
dec
data16
in
mov
sbb
xor
xchg
or
lods
pushf
inc
mov
push
loopne
fisttpll
pop
fstl
rclb
inc
adc
and
xchg
mov
stos
mov
xlat
std
call
fldenv
lret
sti
pop
mov
fcmovnbe
dec
sbb
nop
andl
sbb
fldcw
adc
repz
fadd
fs
lea
fsubl
pop
push
or
adc
scas
pushf
jnp
push
pop
adc
inc
repnz
rolb
jge
aas
test
test
dec
xchg
icebp
cld
je
repz
xchg
xorl
sbb
mov
xor
xorl
shr
lock
mov
xchg
pop
lock
cmp
adc
test
sahf
out
and
in
pop
rcl
mov
es
mov
aaa
cmpsl
sbb
inc
mov
xor
jge
mov
cltd
sub
mov
test
push
shlb
jecxz
in
leave
ret
pop
lret
cvtpi2ps
mov
aam
inc
pop
leave
xchg
sub
pushf
test
sahf
iret
lods
test
add
mov
sbb
cmp
push
xor
clc
enter
pop
xchg
cltd
popf
cmpsl
loop
mov
jae
xchg
jle
test
jmp
xchg
pop
dec
sbb
fsubr
rcll
scas
in
negl
nop
push
pop
jae
add
xor
xor
mov
or
out
mov
outsl
outsb
out
mov
xor
leave
ja
cwtl
jne
jo
mov
jnp
and
in
data16
enter
and
xor
roll
jmp
inc
notb
sub
lods
in
jns
xchg
mov
out
shrb
or
jns
addr16
jl
imul
mov
pop
mov
jle
add
pusha
fwait
in
fildll
loope
mov
sti
call
ja
push
mov
mov
mov
popf
cmpsl
imul
fisubrs
insb
orb
test
push
outsl
loopne
adc
add
out
clc
popf
ret
push
pop
dec
leave
lods
inc
mov
inc
add
or
jo
stos
inc
inc
cli
fcmovu
ja
mov
rol
add
inc
mov
and
dec
lds
push
jge
ja
int3
repnz
popa
leave
ror
mov
sbb
arpl
int
jbe
pop
bound
jecxz
sbb
fwait
inc
aaa
insl
call
pop
add
xchg
jg
mov
or
mov
push
test
shlb
mov
lret
xlat
cwtl
cmp
cltd
andl
push
into
jbe
in
push
jb
daa
dec
daa
sbb
cmp
dec
jno
ljmp
pop
push
fdivrl
inc
xchg
shll
fwait
lahf
xchg
pop
jne
mov
test
lret
inc
and
or
scas
in
js
and
pop
dec
push
mov
loope
xor
sub
fidivrl
outsb
mov
dec
mov
add
imul
cmp
xor
adc
mov
xchg
int
cmovs
pop
add
lcall
or
pop
sub
sahf
sub
retw
push
lahf
jg
mov
mov
add
mov
fidivl
shlb
cmp
adc
lcall
or
mov
cmp
sbb
mov
into
xchg
lcall
mov
pop
outsl
pop
add
push
stc
pop
push
jno
lret
adc
je
lods
inc
test
out
call
push
xor
iret
lret
cmp
xchg
repnz
sbb
adc
sahf
loopne
xor
pop
sti
push
dec
adc
mov
adc
imul
sbb
nop
ret
lods
xlat
cmp
jne
rclb
imul
xor
xor
cs
aad
mov
and
inc
push
fldenvs
inc
ret
mov
repz
addr16
dec
lea
ljmp
add
insb
pop
rorl
sub
pushf
es
jbe
xor
jns
inc
fs
mov
inc
push
and
gs
dec
or
mov
dec
jecxz
addr16
test
es
shl
cwtl
pop
nop
xchg
xchg
orl
fisttpl
ret
roll
lock
imul
xchg
shll
and
fwait
sub
and
mov
dec
and
fnstenv
mov
pop
fadds
lret
adc
jns
jb
out
mov
mov
mov
inc
mov
push
ret
in
sbb
pop
mov
fimuls
clc
jle
std
xchg
insb
add
ljmp
mov
cmp
xchg
test
dec
push
repz
sub
push
or
add
jmp
test
or
mov
dec
inc
or
insb
and
lret
mov
xor
fisubrl
ljmp
add
dec
lds
push
xor
fisttps
or
push
xor
sub
mov
mov
mov
pop
out
pop
int
pushf
enter
or
inc
adc
add
inc
jp
fwait
notl
fs
out
mov
aad
out
lret
bound
pop
jns
inc
dec
in
sti
sti
xchg
fnstcw
mov
push
je
sub
add
and
jp
ret
stos
sbb
cs
int3
xchg
test
in
out
pusha
les
xchg
mov
jmp
subb
xorl
or
enter
lods
add
push
faddl
arpl
int
jo
jmp
lods
jnp
jae
scas
out
sbb
mov
adc
lret
push
dec
mov
xchg
mov
inc
leave
daa
dec
jae
in
ds
jmp
push
sub
ret
fisubrl
aad
xchg
pusha
sbb
imul
mov
or
xor
mov
mov
inc
cmp
hlt
arpl
sbb
std
sbb
cmp
add
inc
aam
loopne
jmp
jecxz
testb
mov
lods
jo
push
inc
scas
loop
data16
mov
mov
scas
movsb
push
jno
push
int
out
push
idivl
and
mov
jno
dec
jl
ficoml
enter
fs
in
cmc
das
fsubl
std
xchg
mov
mov
test
xchg
aam
inc
mov
cld
xor
repz
and
mov
mov
inc
cmp
loope
das
pop
sub
cmp
outsb
and
xchg
adc
loopne
dec
popl
xchg
dec
sbb
ss
xor
xor
mov
push
mov
fsubrl
stos
pop
into
pop
or
lcall
ret
faddl
mov
dec
sahf
rolb
test
cli
insb
jg
jae
mov
xchg
in
mov
dec
xchg
mov
das
arpl
dec
daa
jmp
cmp
lret
inc
aas
idiv
push
js
fdivrl
inc
rcrl
mov
into
jp
je
insl
cmc
mov
outsl
in
cmp
jbe
mov
frstor
fs
mov
cld
xchg
roll
addl
cli
mov
mov
cmp
mov
dec
decb
mov
loopne
fwait
out
sbb
inc
adc
mov
popa
outsb
adc
add
add
int3
jb
inc
xor
sbb
lret
ljmp
inc
push
imul
mov
shlb
aaa
mov
dec
popf
mov
jge
pop
fstps
insl
cli
repz
mov
push
cwtl
lea
cs
cmp
clc
adc
dec
pushf
shl
adc
cmp
insl
inc
add
outsl
inc
jg
and
out
push
mov
shrb
or
lods
testb
std
push
ljmp
jns
jns
jecxz
mov
fstpt
orb
push
xor
out
xchg
das
rolb
push
daa
mov
mov
cwtl
pushf
clc
shll
es
sbb
sbbl
sbb
mov
fimuls
cld
scas
aad
lret
jg
cmpl
dec
shlb
push
and
lret
sub
dec
not
jp
adc
jnp
icebp
push
xchg
or
fldl
sbb
ljmp
imul
mov
xchg
lret
xchg
dec
push
into
out
movzbl
add
aam
test
call
sbb
jns
test
repnz
xchg
icebp
or
inc
mov
pop
js
aad
outsl
push
mov
imul
data16
xor
lods
jb
xor
xchg
adc
jbe
push
dec
fdivl
xor
inc
pop
test
jl
dec
push
push
push
inc
test
fcompl
es
les
cltd
jne
pushf
jb
mov
out
test
sbb
jns
and
in
shlb
out
mov
sub
jmp
jp
push
shlb
pop
aaa
push
filds
sbb
call
xchg
pop
dec
sub
push
push
imul
dec
push
es
popf
out
adc
mov
sbb
jno
cld
fistpl
in
xor
xchg
or
ficoms
ljmp
lods
cmpl
inc
aam
jge
lcall
or
movsw
pop
inc
inc
mov
jmp
mov
test
imul
inc
lds
mov
mov
loope
ja
mov
dec
or
sbb
or
cmp
repnz
jmp
out
or
lds
scas
mov
aaa
pop
adc
xor
mov
xchg
scas
rcll
icebp
xchg
jl
push
sbb
push
sbb
jmp
cmp
int
sbb
movsl
jno
xlat
in
inc
xchg
dec
aaa
mov
and
cld
mov
and
aam
push
xor
int3
test
pusha
sub
cwtl
testb
js
mov
loope
mov
push
pop
sub
imul
adc
mov
repz
subb
inc
add
out
xor
nop
lods
int
cmpsl
sub
aad
lcall
rcr
mov
jle
int
and
test
mov
std
xor
push
popa
decb
popa
repnz
pop
ret
xchg
mov
xchg
fadds
inc
or
iret
pop
stc
shl
dec
mov
shll
into
push
ds
sbb
mov
sbb
loop
jecxz
stc
jne
xchg
fs
adc
mov
lods
adc
or
clc
adc
xor
xorb
das
out
std
gs
push
loopne
pop
inc
pop
cmp
adc
sbb
mov
adc
lock
xchg
xchg
pop
mov
sbb
push
cmpsb
cmp
mov
into
popf
mov
or
sti
imul
cld
jp
aad
sub
nop
adc
test
xchg
ret
int
fnstcw
repz
sbb
xlat
mov
jge
add
pop
aaa
xor
adc
in
jl
adc
sub
or
in
inc
xchg
pop
inc
lcall
jb
in
pop
dec
cli
mov
je
adcb
sti
stos
testb
std
mov
cwtl
aad
aad
lret
mov
cmpl
sub
test
outsl
dec
mov
in
or
xor
sub
mov
ret
add
repnz
ret
adc
es
jno
insl
sub
sub
mov
sbb
mov
icebp
mov
cld
fldpi
out
lret
out
scas
cli
mov
cmpb
in
or
rcrb
mov
aam
stc
mov
or
lea
daa
mov
sub
movsl
clc
hlt
sti
push
xchg
ljmp
popa
adc
mov
mov
mov
add
test
cltd
sub
mov
leave
cltd
inc
pusha
inc
test
pop
xchg
int
test
push
push
xchg
pop
sbb
rcrl
movsl
outsl
stos
inc
xor
add
cmpl
mov
add
jb
xchg
mov
fstps
sbb
fs
dec
push
pushf
inc
inc
cmp
sbb
push
fwait
push
pushf
mov
jne
popa
ljmp
cmpsb
mulb
stc
movsl
jns
mov
adc
ja
adc
push
pop
mov
or
sbb
addr16
fdivrs
push
mov
or
cmp
mov
mov
and
mov
xchg
xor
jmp
sbb
mov
jmp
fwait
jbe
and
push
pop
aam
stos
outsl
cs
and
in
in
rol
jnp
push
scas
lods
mov
inc
xchg
iret
or
inc
ret
sahf
pop
lock
inc
fistpll
popf
inc
out
mov
or
loope
jmp
shl
ficoml
test
sbb
fisubrl
imul
push
sub
cmpsl
gs
push
mov
loope
xor
dec
sbb
sub
imul
mov
aaa
stos
add
data16
add
cmp
mov
adc
mov
push
bound
xor
jecxz
jb
mov
inc
lcall
sbb
push
imul
cmpsb
push
push
int3
in
pop
dec
mov
daa
sbb
sti
cmp
cmp
test
jl
push
fimuls
xchg
xchg
stos
or
movsl
add
sbb
pop
movsl
stos
test
sub
or
pshufw
loope
pop
inc
rcr
xchg
jecxz
pop
or
push
pop
ret
lcall
iret
lock
inc
adcl
push
in
inc
aas
and
fsubp
pop
add
lock
clts
nop
pop
sub
sub
pop
fstpl
les
sub
or
int3
adc
orb
cltd
jg
imul
mov
pop
push
mov
or
and
fisubrl
cmp
inc
imul
xor
mov
cwtl
icebp
into
cmp
cmc
inc
or
lcall
loop
pop
inc
stc
sub
xor
push
adc
call
or
imull
cli
sbb
sarl
aaa
dec
or
inc
xchg
push
inc
sub
and
test
pop
pop
rcrl
imul
faddl
push
pop
push
xchg
lret
sbb
inc
cmc
dec
xlat
stc
jns
sub
sti
scas
mov
jbe
inc
sti
sbb
mov
pop
sbb
addr16
lds
mov
xchg
push
pop
in
icebp
repz
jo
dec
lea
jns
call
jg
mov
ljmp
pushf
daa
in
jo
pop
or
inc
push
push
popf
inc
mov
sub
and
pop
jb
divl
dec
jno
in
je
lods
je
iret
stos
aas
testb
std
cwtl
nop
pop
xorb
sti
add
lods
fisttpll
fmuls
imul
es
nop
xchg
mov
mov
jp
pop
and
fwait
cmpsb
rcll
push
sbb
dec
push
imul
mov
mov
lret
pop
imul
cmp
cmpsb
and
adcb
add
adc
jo
push
sub
rcl
adc
faddp
cltd
adc
push
sbb
cltd
clc
das
jo
xchg
sub
or
popa
sub
pop
lods
xor
sti
out
pop
iret
stos
xchg
pop
cld
iret
push
test
sbb
je
insl
add
push
lds
mov
mov
outsb
dec
xchg
add
test
dec
in
xchg
pusha
shr
push
jmp
stos
mov
push
push
call
push
out
pushf
xchg
enter
dec
xor
cmp
outsl
shl
xor
hlt
dec
mov
jnp
sbb
pop
adc
fldcw
dec
cmp
je
xlat
xchg
pusha
or
sbb
fwait
test
decl
sbb
jne
mov
mov
cmp
jmp
jns
movb
pop
mov
sub
cmc
and
addr16
xchg
flds
mov
lods
and
shr
jle
lea
in
push
scas
pusha
pop
fsubs
out
xchg
xchg
add
aas
or
sbbl
push
lods
iret
mov
cmp
adc
push
cltd
inc
sub
adc
sbb
mov
scas
adc
push
mov
repz
imul
ret
in
daa
push
jl
ljmp
inc
repnz
in
repnz
push
aas
xchg
sub
inc
es
gs
sbb
xor
imul
test
rol
icebp
mov
xchg
leave
lods
popa
loopne
inc
mov
int3
jbe
sbb
es
out
push
xor
imul
add
lret
mov
mov
mov
xor
ds
mov
pop
and
movsb
rep
rclb
lds
push
mov
daa
pop
sub
cli
jno
push
mov
lcall
ds
repnz
or
pop
and
jmp
pop
push
fidivl
test
neg
inc
inc
popa
ljmp
jcxz
js
mov
cmpsl
push
cli
shl
aaa
add
mov
jle
bound
fdivrs
jno
rorb
scas
lcall
dec
or
dec
jp
push
xchg
repnz
int
xchg
ljmp
sbb
lods
pop
ljmp
lcall
stos
faddl
insb
sub
stos
mov
sahf
mov
push
pop
jg
mov
and
sub
or
jnp
shlb
mov
adc
cld
fistl
lret
je
and
cld
mov
sbb
pmaddwd
cmc
fldcw
lods
dec
loop
or
jecxz
outsl
idivb
lock
divl
sbb
sbb
testb
dec
mov
pop
cmp
rclb
jne
jne
sub
push
loopne
dec
xor
ja
ficoms
out
dec
and
inc
xchg
enter
and
lea
mov
cmp
xlat
cmp
test
pushf
fcmovne
mov
loope
idiv
leave
cmpsb
hlt
cs
aad
sub
dec
sbb
xlat
inc
mov
flds
push
out
mov
lahf
push
jae
adc
call
mov
and
adc
out
pushf
shlb
arpl
add
inc
xchg
lds
aas
ret
sub
mov
into
dec
call
sub
jecxz
lahf
pop
test
cmp
cwtl
dec
outsl
pop
mov
mov
sahf
subl
inc
ja
ss
mov
ret
aas
lock
adc
outsl
mov
mov
xor
in
popa
dec
es
sub
cli
push
ret
dec
adc
adc
icebp
arpl
xchg
lret
int3
jmp
mov
mov
mov
pop
and
rolb
pop
call
dec
ret
sub
fnstsw
lret
clc
push
ljmp
xchg
push
popa
inc
sub
pushf
imul
pop
call
pop
imul
shll
or
fcmovnbe
fcompl
sarb
xchg
adc
ds
in
sbb
ficoml
pop
ffree
daa
stos
mov
int3
lcall
std
decl
ss
imul
mov
mov
pop
mov
lret
nop
ja
scas
mov
das
or
sbb
or
stc
stos
fwait
mov
into
dec
popl
jne
push
mov
xor
bound
mov
dec
jae
adc
mov
sub
lock
in
push
cltd
movsl
mov
mov
jle
push
shl
das
jecxz
pusha
mov
jg
xchg
fmuls
hlt
jmp
scas
xor
in
rolb
push
outsl
jb
popf
fs
mov
push
fdivs
mov
and
push
loopne
xchg
pop
xor
jb
scas
jae
lock
shr
mov
iret
lret
ret
xchg
pop
pop
rol
inc
cmc
mov
je
cmc
inc
push
push
mov
push
repnz
mov
bound
ficoms
js
fsub
dec
rcr
jmp
xchg
into
div
fisubrl
stc
hlt
dec
fisubs
adc
jge
jno
sbb
movsb
in
dec
shll
int3
mov
cmp
sub
push
sub
fidivl
ret
mov
stos
ss
movsb
jle
lods
push
or
icebp
in
in
inc
out
push
adc
scas
sbb
push
cli
sbb
dec
pop
jl
adcb
lock
movsl
adc
xchg
lahf
sub
lods
jo
test
shrl
inc
lock
pop
mov
fnstsw
hlt
gs
mov
pop
push
mov
cmc
sarl
sub
popa
mov
rorb
popl
loop
and
xor
dec
mov
xor
inc
pop
push
xchg
push
inc
int
mov
bound
jle
sbb
jb
push
fdivl
dec
rcrb
fisubl
ja
inc
pop
jb
fimull
cwtl
mov
xor
and
push
stos
cmp
mov
sub
testl
sarl
loop
lret
jb
into
add
push
aam
jle
push
cmc
xchg
outsl
mov
sbb
out
jmp
stc
lcall
adc
iret
test
insl
bound
cmc
stos
scas
cli
orl
inc
or
and
cwtl
rorb
gs
inc
loopne
add
imul
fdivr
imul
mov
add
rclb
clc
iret
ja
mov
xchg
xlat
ja
jl
pshufw
dec
ljmp
and
mov
mov
xlat
cmp
xor
jns
cli
xchg
out
outsb
repnz
jbe
arpl
xchg
add
jge
test
scas
push
adc
cmp
jge
add
cmc
sahf
cwtl
pop
movsl
add
jmp
mov
bound
pop
dec
pop
ds
je
add
in
xlat
out
adc
xchg
std
add
pop
cwtl
push
sbb
pop
inc
jo
inc
popf
pop
cmpl
adcl
ss
sub
cmpsb
inc
mov
das
dec
mov
push
mov
ljmp
pop
xor
jo
or
ljmp
iret
or
cld
pop
es
lret
cmp
sbb
xorl
movsb
mov
jno,pt
rclb
add
sub
push
repnz
jns
ret
mov
push
push
mov
ret
test
xchg
cmpsl
sti
clc
ljmp
sbb
out
pop
out
fucom
sub
push
cmp
jge
xor
aas
cltd
out
fildl
add
xchg
pop
data16
lock
xchg
mov
popf
test
stos
xchg
push
ret
push
xchg
add
jge
ljmp
xchg
or
stc
jle
or
mov
push
fdivrs
mov
adc
mov
xchg
sbb
push
jae
dec
and
add
stos
insl
fwait
loop
decb
imul
mov
cmp
out
and
rorb
in
je
xchg
fs
xchg
out
jno
sub
jmp
mov
jne
fidivrs
jnp
mov
test
mov
jle
or
in
sbb
pusha
cmp
lea
xchg
stos
mov
jmp
jns
test
xor
in
mov
pop
movsl
adc
enter
inc
aas
pop
insb
add
adc
sbb
push
sbb
sub
ret
xlat
pop
xchg
hlt
aas
inc
add
jae
cmp
or
push
aaa
mov
cmp
xor
jne
shll
imul
fdivp
fucomi
lds
leave
sar
test
sub
add
hlt
fimull
arpl
and
xor
rcrl
movsl
xchg
out
xchg
or
push
sub
or
in
into
mov
push
or
xor
hlt
shll
scas
cmp
jg
cmp
movsb
or
jne
pop
cs
loopne
in
aam
mov
or
fwait
cmp
arpl
lock
dec
repz
mov
and
repnz
andb
mov
sub
imul
mov
cld
js
fiaddl
push
std
jbe
gs
scas
sub
ja
cmp
xor
outsb
pandn
shlb
in
pop
popa
cmp
adcl
arpl
xor
push
addl
and
int
xchg
inc
sub
pop
sbb
lcall
adc
pop
add
xor
mov
sbbb
jg
pop
mov
mov
pop
mov
fidivs
mov
pop
mov
divl
jmp
rcll
mov
mov
into
jecxz
jge
fwait
clc
and
outsl
xchg
sbb
loop
add
push
das
xchg
ficoms
mov
imul
cld
add
push
nop
icebp
cli
mov
hlt
xor
jle
cmp
dec
or
mov
mov
insb
pop
mov
adc
pop
cltd
adc
out
inc
add
cmpsb
add
pop
je
cmp
pop
sbb
sub
and
in
mov
data16
daa
cli
inc
mov
nop
jle
mov
fldcw
jno
mov
and
add
adc
jns
push
call
cld
and
pop
add
mov
pushf
sub
pop
dec
repz
inc
mov
add
jb
push
or
mov
je
sub
notb
xchg
stos
dec
mov
insb
pop
mov
cld
outsl
adc
xchg
or
mov
sbb
mov
sub
lock
testl
lahf
enter
nop
mov
mov
sti
repz
pop
lret
adc
btl
ss
adc
or
cmp
pushf
xor
pop
pop
ret
jmp
fdiv
aam
dec
stos
ret
inc
push
pop
push
fs
and
xchg
out
fucomip
mov
mov
addr16
mov
inc
pop
xchg
xchg
adc
out
add
jne
cltd
push
stc
pusha
test
enter
xor
xchg
add
dec
mov
cli
sbb
jne
shl
push
in
pop
xor
subl
xor
aaa
add
adc
xor
or
xor
mov
andl
jo
mov
push
std
gs
mov
cmp
xchg
enter
adc
jle
push
jg
jne
add
mov
pop
cmpsl
out
add
pop
lret
jg
jns
or
in
out
xchg
xchg
mov
mov
sub
out
icebp
addr16
data16
pop
push
mov
fnsave
mov
data16
xor
mov
sub
lahf
lret
lahf
dec
xchg
jle
cmc
jmp
inc
scas
xchg
cmc
adc
mov
push
popf
je
cmp
fildll
outsb
jnp
mov
scas
cmp
outsl
adc
push
push
iret
mov
jecxz
int3
mov
jecxz
movsl
jnp
inc
sti
cmpsb
jle
daa
aaa
loope
int
pushf
inc
mov
lret
sbb
push
cmc
sbb
cmp
pop
jo
ficomps
rcrl
rclb
outsb
mov
cmp
leave
adc
and
or
jge
mov
sbb
sub
mov
xor
inc
int3
bound
pop
std
mov
push
out
loop
xor
dec
hlt
push
scas
sbb
pop
and
sti
xchg
cmp
mov
lret
push
cmpsl
sbb
arpl
in
mov
rcll
daa
adc
movsb
cmp
lahf
aas
jl
dec
lock
bound
mov
pop
sbb
and
int3
push
push
push
or
test
push
aad
inc
push
adc
pop
fsubl
pop
push
mov
push
or
loope
push
mov
int3
js
mov
cmp
push
mov
shlb
rolb
mov
pop
xchg
test
mov
pusha
inc
xor
imul
loopne
std
sub
mov
jmp
dec
push
fmull
nop
pusha
sub
adc
call
xorl
sub
xor
iret
inc
mov
scas
push
and
or
leave
stos
mov
divl
jno
mov
iret
mov
pop
or
movb
xor
xor
outsl
je
mov
stc
or
xchg
adc
popf
push
data16
xchg
lods
xchg
cs
ljmp
out
mov
rol
fwait
cmp
push
pushf
or
sub
gs
or
lcall
mov
es
adc
subl
add
sbb
sub
dec
cmp
cmc
mov
mov
and
sub
jmp
rcl
adcl
nop
pop
inc
inc
dec
cmp
fabs
les
pushf
pop
repz
mov
jl
push
ficompl
call
jnp
mov
adc
enter
repz
jmp
inc
ret
pop
jmp
push
inc
and
aas
mov
sub
dec
dec
int
je
movsl
test
or
notb
shl
cwtl
jl
dec
mov
pop
movsl
mov
clts
subl
mov
xchg
xchg
cmp
xor
in
lock
int3
pop
das
or
xchg
push
push
lcall
cmpsl
aam
and
es
cmpsl
adc
xlat
mov
call
iret
lret
sbb
mov
in
jne
pop
jl
popf
sarb
cmp
stc
ret
aad
ficoml
mov
fucomp
popa
sub
xchg
and
cmp
popa
mov
xor
sub
out
mov
jge
push
lock
orb
inc
dec
add
cmpsb
cltd
push
mov
push
mov
test
imul
out
xchg
adc
pop
fisubs
stos
outsl
aaa
push
je
fwait
add
or
cmpsb
xor
add
jns
scas
mov
mov
inc
mov
sbb
mov
ja
xchg
inc
xor
or
mov
dec
cmp
test
jecxz
repnz
push
jns
ror
pop
mov
lods
out
pushf
and
loope
mov
jae
imul
ret
xor
test
lock
inc
mov
xchg
fbld
xchg
xchg
push
pushf
jmp
punpckhdq
sbbl
lcall
inc
adc
sbb
and
fsubrs
repz
mov
cwtl
push
cmpsl
push
adc
jb
iret
out
add
js
out
add
xchg
inc
push
mov
jae
add
inc
incb
or
dec
clc
add
outsb
fimull
adc
or
sub
mov
fidivrs
cltd
lds
rol
aas
push
mov
shr
sub
mov
lret
inc
mull
insl
bnd
push
mov
sbb
dec
insb
aaa
fisubrs
or
into
xor
dec
fcmovnu
pop
sub
sbb
shrl
xor
stos
sub
scas
sti
xchg
or
arpl
movsb
pop
push
pop
push
testb
out
jp
mov
lea
adc
cmp
push
xchg
jno
add
repz
fdivr
movsl
repnz
xor
lahf
mov
imulb
and
testb
out
mov
add
js
bound
inc
int
push
shlb
xchg
sbb
sub
divb
cmp
ss
outsb
aad
push
adc
fisttpll
xchg
sbbb
lds
push
adc
mov
fcmovne
inc
and
sub
mov
cmp
ja
fdivl
adc
inc
add
and
mov
mov
mov
and
mov
push
and
adc
cmp
call
fdivrp
lret
pop
sarl
mov
sub
sbb
add
test
mov
mov
push
xchg
cmp
cmpsl
enter
cwtl
push
and
adc
pop
mov
lods
jl
cltd
mov
int3
out
call
sub
stos
or
sub
jle
add
gs
rcrb
imul
mov
imul
fsincos
xchg
cltd
cmp
cmp
ja
xor
push
test
leave
sbb
test
cs
jge
aad
xlat
jbe
xor
in
dec
xchg
insb
mov
mov
imul
lahf
js
fistpl
pop
lea
xor
add
popf
gs
imul
pushf
jle
ret
cmp
inc
mov
adc
fst
aas
aas
jae
jb
cmp
je
jbe
jecxz
sbb
std
stc
cmp
cwtl
aaa
mov
inc
inc
inc
mov
dec
addl
scas
fcmovnb
fnsave
ret
mov
and
push
or
and
sub
push
mov
xlat
not
popf
idivl
insl
xchg
xor
xor
xchg
mov
cld
fcmovnbe
ds
mov
shll
xchg
test
rorb
push
paddq
out
dec
ret
sub
fstl
xchg
xchg
lea
popa
lahf
test
dec
mov
gs
push
and
xchg
mov
jle
cmovg
or
and
mov
bound
mov
jne
test
sar
cmp
mov
mov
in
add
pop
outsl
or
and
incl
xchg
cmp
or
sub
dec
daa
add
mov
test
ret
xchg
xchg
pop
dec
sti
sti
movsl
inc
lret
or
mov
xor
xchg
mov
rcl
out
ret
jp
jns
sbb
in
xchg
push
test
sub
fdiv
cmpsl
addr16
fnstsw
xor
jb
xchg
loopne
adc
xor
dec
pop
dec
pusha
push
mov
filds
filds
jmp
fidivrl
subl
std
push
jnp
cmp
test
mov
and
mov
fnsave
es
out
pop
mov
mov
pop
repz
adc
xor
and
jae
lret
lea
xlat
xchg
or
ret
mov
inc
mov
adc
sbb
sub
aam
and
cmp
cli
sub
hlt
push
push
rorb
mov
es
arpl
inc
mov
mov
adc
jbe
ja
jge
andl
xchg
clc
dec
aaa
and
in
or
sbb
cmp
pop
pop
dec
cs
mov
mov
jo
jne
scas
fcmovbe
mov
nop
cmpl
stos
std
fists
mov
jge
mov
and
cli
ficomps
cmp
xchg
adc
test
jl
imul
stos
jl,pt
enter
ja
aad
add
stc
ja
test
in
lret
sub
fcmovbe
dec
je
pop
sub
push
js
add
pop
test
push
inc
mov
stos
cmp
sub
repz
jmp
psubd
mov
push
mov
sbb
lea
test
out
push
sbb
push
mov
sarb
imul
dec
dec
pop
push
into
js
fcompl
add
push
sahf
call
hlt
pop
xorb
hlt
mov
cltd
test
jge
mov
and
outsl
and
insb
xchg
std
cmp
mov
outsl
into
lret
outsl
rcll
test
xchg
into
mov
out
lock
mov
fcomps
stc
jbe
ds
lock
data16
or
cli
mov
mov
cli
dec
fmull
cmp
fcmove
or
and
or
xlat
inc
loopne
scas
mov
ds
adc
imul
out
add
mov
sbb
mov
dec
inc
sub
leave
int3
mov
clc
mov
xor
mov
js
adc
pop
nop
movhps
push
jge
adc
hlt
xor
es
stos
or
movb
sub
sub
mov
aad
adc
or
pushf
sub
mov
pop
xor
jbe
push
push
cmpsb
jb
jg
dec
cmp
ret
lcall
sbb
fdivr
mov
xchg
mov
stc
and
fwait
add
dec
cs
sbb
ret
lock
fsubrs
lret
mov
les
and
js
shr
mov
sub
mov
dec
clc
pop
stc
cmpsl
adc
mov
xchg
adc
or
jmp
stos
and
and
add
mov
jae
sub
or
dec
ret
repz
in
push
lods
cmpsl
jne
cmp
dec
fcoml
pop
daa
adc
xor
mov
out
imul
push
cmpsb
jne
fxrstor
or
cmp
cltd
ret
and
daa
mov
pop
in
mov
add
test
cs
mov
addr16
sar
lcall
dec
insb
xor
mov
pop
xor
ds
int
movsl
out
fwait
xor
test
cmp
dec
xor
pusha
xlat
mov
or
or
scas
ja
stos
dec
dec
out
jecxz
inc
popa
mov
mov
dec
js
jne
fadd
mov
sub
mov
and
push
jb
jb
push
xchg
mov
xchg
pop
sub
xlat
je
addr16
scas
jp
xor
push
xchg
cmc
lds
js
in
call
aas
fbld
push
out
jmp
movsl
fnstsw
xorl
cltd
popf
daa
ss
ror
push
adc
movsl
and
cmp
push
scas
bound
imul
movsl
inc
retw
xchg
pop
jno
incb
js
adc
ja
add
adc
pop
movsb
int
ds
inc
cmp
fidivl
push
xchg
outsl
out
ret
sbb
mov
imul
in
fiadds
cmpsb
cmpsb
shlb
lods
mov
in
jbe
and
push
mov
arpl
dec
mov
inc
push
sbb
fs
jecxz
call
add
mov
pop
mov
jnp
arpl
jo
rorl
mov
test
mov
outsl
cmp
in
jo
enter
daa
adc
push
cmp
jno
cs
jl
mov
dec
scas
std
mov
lahf
jo
movsl
xor
xor
jo
pop
lahf
leave
pop
lock
int3
jnp
test
mov
popf
nop
push
clc
sbb
push
js
cmp
pop
ret
xchg
les
jae
loope
jnp
sub
jmp
cwtl
inc
inc
outsb
fwait
pop
adc
xchg
js
fnstsw
xor
add
data16
xor
aaa
mov
int
inc
cmpsb
sub
jl
pop
stc
nop
jno
add
xchg
fmull
sub
sahf
mov
pusha
test
fs
pop
jg
mov
sub
hlt
mov
shll
aad
lret
test
fcomps
js
mov
lret
pop
shrl
sbb
in
mov
xor
push
imul
pop
xchg
stc
sub
adc
adc
cmpsl
mov
sub
sbb
mov
out
push
xchg
cli
xorb
xor
nop
cmp
pop
rorb
jmp
add
gs
push
and
int3
stos
pop
xor
adcb
movsb
pop
imul
das
cmpsb
add
sbb
xchg
pop
or
sbb
fimuls
xlat
mov
sub
mov
arpl
sub
aad
xchg
nop
ljmp
inc
sub
div
jns
mov
setle
xbegin
loopne
adc
fisttps
pushf
aam
loop
mov
inc
sbb
push
ds
jb
sub
jge
aas
jb
neg
dec
mov
inc
je
adc
negb
sbb
inc
mov
cwtl
lods
adc
aaa
mov
mov
dec
sbb
jo
and
adc
mov
mov
lock
add
mov
jnp
pop
sarl
fs
scas
xor
sbb
or
xchg
mov
insl
shlb
cld
xor
lret
data16
xor
dec
and
mov
cs
shlb
addr16
popf
fildll
push
jo
add
fs
clc
int3
int
xchg
loop
popf
ljmp
std
lods
push
pop
push
mov
int3
mov
jns
addl
and
test
dec
mov
mov
call
test
xor
cmp
nop
sbb
pop
loop
push
cli
icebp
pop
and
pop
js
add
pop
sub
xor
fs
mov
push
imul
ja
add
loope
roll
adc
xchg
fwait
int
push
jne
out
mov
xchg
mov
bound
inc
cmpb
add
std
and
xchg
out
fs
outsb
ret
shrl
rorb
lret
jp
fists
mov
and
jle
cmc
jne
pop
adc
sbb
shrd
mov
dec
addl
push
add
jecxz
dec
fdivr
mov
push
cmpsb
icebp
stos
pop
adc
and
adc
xchg
scas
push
jl
adc
pop
out
iret
add
dec
ret
pushf
pop
test
adc
fdivs
sub
inc
pop
xlat
and
ret
nop
xor
out
out
mov
sub
xlat
inc
sbb
fcomps
fisubs
pusha
lret
jle
mov
int3
add
xchg
hlt
push
cs
shrb
jbe
xchg
xchg
in
sbb
adc
aaa
mov
jp
add
dec
cmp
push
inc
stos
pop
mov
mov
xor
mov
push
bound
xlat
or
shr
push
jecxz
add
outsl
call
xor
lock
daa
adc
and
sti
aad
xlat
scas
dec
push
clc
adc
movsl
cmp
fwait
and
aaa
clc
lahf
call
mov
test
adcl
inc
dec
push
add
shr
sub
leave
push
js
add
pop
push
push
xor
fsub
inc
sub
push
cmp
or
popf
push
adc
outsb
ret
cmp
jmp
push
mov
sbb
adc
cmc
cltd
mov
int
cmpsl
sub
js
daa
pop
js
add
jl
dec
fdivl
add
add
pusha
and
push
jg
mov
jne
imul
mov
xchg
push
and
sub
ljmp
sbb
mov
lret
inc
roll
mov
jmp
sbb
popa
stos
into
push
int
cmc
jle
xor
jb
fwait
outsl
lock
in
aaa
fs
test
pop
xor
mov
adc
dec
ljmp
mov
shll
das
inc
xchg
mov
or
cmc
push
sub
xor
pop
push
orb
add
adc
adc
mov
xchg
loop
mov
loop
outsl
cmp
aas
ja
icebp
pop
es
scas
out
mov
into
sbb
sti
xchg
mov
ja,pn
sbb
lahf
jae
nop
lds
movl
sahf
xor
cmp
mov
dec
lods
mov
mov
rorl
jbe
pop
ja
lds
mov
lea
mov
int
inc
sbb
lea
add
mov
jl
neg
cmp
inc
mov
out
lret
fcompl
sub
inc
or
push
xchg
fistl
push
mov
fbstp
push
dec
js
in
mov
mov
rorl
clc
test
dec
out
push
cmpsl
pcmpgtd
mov
inc
scas
mov
pop
idivl
aad
je
push
and
and
pop
aam
pop
clc
xchg
mov
sub
gs
aam
push
sbb
adc
push
xor
clc
pop
loop
xchg
and
inc
ljmp
pusha
lods
mov
and
das
cli
movsl
xchg
xchg
mov
loope
add
cmp
pop
and
push
xchg
iret
sub
mov
cmp
shll
aas
sub
add
inc
add
je
xchg
jmp
mov
xor
les
daa
ja
xor
iret
push
mov
xchg
or
notl
jmp
dec
aam
out
xchg
je
pop
cmp
cld
sahf
mov
cmp
mov
sbb
pop
rcrl
stos
stc
jo
sar
in
aas
daa
xchg
adc
sub
int
pushf
outsl
sbb
jp
inc
mov
lcall
mov
retw
in
cmpsb
repz
fistpll
fbstp
push
std
xchg
adc
adc
les
sub
xchg
xor
stos
jp
lock
scas
enter
push
ljmp
push
ret
sbb
xor
cwtl
ret
pop
pop
fildll
cli
inc
inc
pop
and
rolb
sub
push
aaa
mov
fcmovu
inc
cmpsl
xchg
sbb
rcll
imul
js
enter
mov
rcrb
icebp
repnz
lret
test
fs
outsb
hlt
pushf
and
arpl
popf
in
jbe
push
and
sbb
jg
aaa
popa
mov
push
add
pop
test
out
push
push
pop
or
in
push
int3
loop
ja
push
cmp
push
xor
cmpsl
in
ds
loop
jmp
cmp
shld
jno
in
jb
repnz
ret
mov
ds
cld
movsl
inc
inc
sbb
cmpsb
mov
lahf
pop
sub
jb
xchg
test
dec
mov
inc
xchg
pop
pop
pop
lahf
or
js
arpl
pop
inc
push
push
out
loope
insl
imulb
jecxz
cmp
push
adc
dec
mov
fwait
cltd
faddl
int
jl
movsl
push
push
xor
inc
outsl
push
stos
lcall
repz
jae
mull
lcall
mov
pop
mov
sub
push
sahf
sar
sbb
add
jg
mov
mov
je
mov
fstl
rep
xchg
ss
orl
lret
push
rcr
or
sbb
xchg
inc
stc
lahf
xor
and
outsl
iret
mov
mov
fs
dec
or
data16
xor
mov
out
enter
notl
xor
fidivrs
pop
in
decb
je
loopne
inc
mov
outsl
sub
xchg
imul
inc
jb
sbb
test
sbb
push
ret
xor
jge
xor
cmp
push
fsubrp
cmp
int3
fimull
sub
adc
incb
mov
push
les
mov
pop
gs
mov
adc
icebp
ds
mov
sub
leave
negl
pushf
sub
sub
mov
mov
aas
mov
xorl
inc
lcall
jecxz
rcrb
in
pusha
std
xchg
les
cwtl
and
xchg
mov
sub
andl
rcr
jg
les
pop
ret
ret
ret
mov
imul
push
pop
rcr
loopne
es
bound
pop
adc
daa
cld
cmpsl
push
inc
and
sbb
pop
lret
inc
jg
mov
cld
enter
push
pop
pop
std
add
sub
pop
fcom
xor
dec
ret
mov
cmp
fnsave
mov
xchg
pusha
xor
popa
sti
and
mov
xchg
sub
xchg
fsubrs
adcl
push
les
jae
in
cltd
push
int
mov
in
sub
dec
pop
or
xchg
push
sbb
inc
lods
sub
and
pop
xor
or
add
mov
xor
mov
or
add
mov
sbb
jnp
mov
mov
nop
cmp
cmp
xor
sub
cmpsl
push
xchg
jne
xor
mov
lods
aad
ds
and
in
in
mov
xchg
lea
shl
jbe
sub
enter
outsb
fldcw
mov
or
mov
add
cmc
jle
lret
ret
in
fwait
jo
jp
push
pop
stc
xchg
jo
pop
jmp
push
add
andl
xchg
std
popf
pushf
aam
mov
rolb
stos
in
adc
and
xchg
imull
adc
das
lds
or
sti
adc
inc
lret
getsec
ret
add
push
int
inc
dec
pop
pushl
lcall
xchg
adc
and
fimull
adc
sbb
lahf
ljmp
shrl
adc
mov
mov
jb
add
hlt
out
iret
arpl
push
dec
jbe
test
sbb
cmp
add
iret
int3
in
into
pop
pop
scas
jl
inc
pop
and
jnp
cmpsl
jo
repz
push
or
cmp
in
and
push
subl
pusha
in
and
ljmp
in
imul
pop
add
dec
cld
cmp
movsl
dec
adc
and
ret
adc
test
sbb
xlat
push
cmp
pop
xor
pop
sbbb
push
sub
push
sub
xor
movsl
lahf
shrl
cld
pop
adc
and
sbb
jl
popf
sbb
jecxz
mov
adc
xchg
sub
int
push
lret
fwait
xchg
pop
jbe
mov
sbb
dec
push
sub
aad
adc
movsb
test
pop
aas
sbbb
jg
jbe
mov
jp
mov
or
hlt
fwait
ss
cmp
and
out
ficoms
shll
mov
jl
into
sbb
cmc
or
mov
sub
and
syscall
loop
dec
inc
stc
push
push
stos
fldcw
adc
mov
lods
decl
mov
in
dec
loopne
sbb
xor
pop
or
xlat
lds
cmp
mov
mov
imul
loopne
lcall
pop
sub
je
adc
shl
add
and
fldenv
xlat
outsl
jl
sub
jbe
in
movsb
int
sti
lock
xor
sub
movsl
cli
dec
jb
addl
fldcw
push
lcall
mov
lea
call
jne
lret
pop
call
cmp
pushf
aad
inc
jmp
mov
pop
mov
test
ret
pop
stos
aas
pop
sub
jb
xchg
push
dec
pop
fcmovb
je
jae
jecxz
sub
sub
sub
jmp
mov
inc
fadds
fidivrl
aam
scas
pop
mov
stc
mov
fsubp
dec
lock
jnp
das
inc
cmc
dec
mov
mov
inc
or
sub
daa
insl
sbb
scas
dec
in
andl
repnz
cld
mov
test
mov
add
and
mov
sbbb
push
shrb
dec
ss
aas
jmp
das
out
push
mov
pushf
insl
clc
jge
inc
xchg
lahf
and
jg
adc
lods
pop
xchg
jl
aad
cmc
dec
enter
mov
sbb
sub
cmpsl
add
scas
mov
xor
cli
or
jle
loop
stos
lods
cmp
sbb
addl
stos
or
mov
add
stos
dec
arpl
and
jnp
adc
lea
mov
cmpsb
adc
insl
pusha
xchg
and
dec
mov
cli
pop
or
or
pop
jge
dec
mov
shll
xchg
mov
push
adc
sbb
cld
lds
jno
in
js
xchg
fdivrl
jle
idiv
or
ret
cmp
insl
sbb
push
mov
cmp
pop
gs
mov
cli
jle
and
in
hlt
lret
cs
fistps
cmp
xchg
shll
push
dec
sub
mov
mov
pusha
and
and
lahf
out
pop
push
add
stc
inc
scas
out
and
push
cli
push
adc
or
sbb
ljmp
inc
pop
lods
and
inc
adc
mov
inc
xor
xchg
fistl
sub
imul
jp
push
jmp
cmp
shlb
mov
leave
push
xor
hlt
xor
sbb
sub
jge
and
mov
fistpll
loope
xlat
int
add
or
int3
iret
sbb
pop
inc
xor
and
cmp
adc
scas
xor
adc
cmp
cmp
pop
push
shl
add
or
mov
loope
xor
or
fs
jno
cmp
dec
xor
imul
sub
mov
push
inc
sub
fdiv
dec
lahf
inc
add
push
sbb
or
pushf
inc
testl
add
movsb
js
fsub
pop
mov
sub
loope
lock
sub
push
mov
outsb
daa
sbb
sar
inc
sub
loop
sbb
mov
inc
xor
gs
mov
data16
das
ret
sub
and
lcall
pop
fdivl
push
sub
cltd
inc
add
jno
push
mov
mov
mov
xchg
test
and
mov
repnz
dec
pminub
scas
add
lret
imul
or
mov
scas
xchg
into
sti
and
cmc
shrl
xor
addr16
or
mov
add
test
int
lods
out
inc
mov
sub
cli
dec
mov
xor
add
cmpsl
pop
mov
shr
pop
gs
mov
loop
cli
pop
lods
xchg
imul
scas
dec
add
rcll
sbb
lret
xlat
scas
push
test
sbb
adcl
in
pmulhuw
sti
lahf
out
mov
xchg
lea
roll
inc
inc
je
test
les
sub
mov
xor
xchg
adc
lea
or
hlt
push
rcll
ja
sub
push
ss
pusha
shr
inc
fistpl
inc
fimuls
aas
stc
pop
mov
out
fcmovnbe
dec
mov
je
cmp
jecxz
les
imulb
push
std
jecxz
mov
mov
inc
dec
orl
mov
lods
mov
imul
and
jnp
mov
cmpsl
mov
ja
xchg
mov
inc
mov
cmpsl
or
xor
mov
and
lret
and
mov
aam
jmp
sub
imul
adc
sub
aaa
xchg
leave
mov
ret
mov
in
fldl
sbb
clc
mov
pushf
fs
pop
lods
lret
mov
pop
adc
in
jae
jns
or
inc
test
add
mov
in
dec
in
mov
xchg
pop
sbb
fistpll
stos
clc
dec
dec
push
jmp
sub
lds
in
xor
and
fidivl
imul
sbb
mov
lods
add
adc
mov
lods
mull
in
or
xor
dec
insl
jle
jne
or
mov
adc
out
cld
aam
bound
mov
mov
ficoml
jp
ret
push
and
in
jp
movsb
ds
mov
mov
fimuls
in
popf
in
mov
pusha
mov
int3
fistpll
pop
xchg
push
mov
jmp
pushf
mov
adcl
ljmp
push
dec
out
ss
shl
hlt
and
into
or
jmp
testl
notl
in
mov
ret
enter
or
jae
sbb
adc
or
movsl
push
lret
add
and
mov
imul
pop
fidivs
cs
jmp
push
mov
sbb
leave
leave
xchg
jecxz
jge
andb
inc
jbe
inc
lods
jge
push
rcrl
cmp
aaa
sahf
adc
lret
add
and
mov
jbe
push
push
lret
or
adc
xlat
adc
push
xchg
adc
sti
pop
cmpsb
jnp
jb
rep
mov
daa
or
mov
jno
xchg
into
jl
mov
idivl
dec
fwait
movsl
push
fcoms
lahf
fs
mov
test
scas
mov
inc
xchg
fstl
pop
adc
jg
push
divb
pop
decb
fildll
fcoms
loope
out
sub
dec
jne
add
outsb
mov
ja
or
mov
mov
add
aam
movb
xor
int
push
mov
iret
int
and
sbb
je
lcall
sbb
mov
sub
mov
sahf
mov
call
inc
jg
pop
fnsave
inc
arpl
mov
mov
nop
decb
in
cmp
add
scas
add
adc
lahf
xchg
mov
cmpsb
fcmove
outsl
cmc
lcall
outsl
insb
ret
imul
out
stc
shlb
adc
jne
mov
int
mov
sub
out
fiaddl
jg
pushf
xor
dec
mov
push
andl
mov
gs
push
loopne
xchg
int3
cmp
imul
loopne
add
ljmp
jle
sarb
add
lods
pop
sub
rcrb
jp
push
sti
dec
xlat
fs
inc
aad
adc
xor
dec
xor
sub
outsb
mov
add
xchg
push
lea
fimuls
bound
pop
dec
cmpsl
mov
into
sub
jmp
jb
pop
add
inc
bound
dec
inc
stc
dec
pop
aas
cwtl
popl
dec
add
pop
xchg
jecxz
movsb
out
scas
mov
mov
push
xchg
mov
std
pop
mov
idivb
dec
mov
repz
mov
mov
push
sbb
aam
ljmp
add
or
push
ret
xor
cmp
cltd
sahf
es
lea
fisubl
cmpsl
or
mov
mov
push
and
and
les
pop
je
rclb
sub
ds
dec
jae
push
aas
out
frstor
jnp
clc
repz
leave
xchg
sbb
rcl
popa
inc
push
fildll
shrl
mov
aas
rcll
loop
psubsb
sbbb
mov
mov
dec
adc
jecxz
mov
sub
pop
inc
mov
add
call
stos
out
push
push
mov
addr16
lret
pop
jne
xor
scas
dec
or
sub
xor
pushf
or
lahf
adc
mov
jecxz
add
dec
mov
icebp
dec
or
sub
dec
push
sub
jle
and
and
jns
jbe
in
add
xchg
jp
fwait
out
push
mov
mov
xor
mov
add
mov
dec
stos
adc
mov
in
rcl
pusha
dec
das
popf
fistps
mov
clc
adcl
sbb
rcrb
popf
adc
mov
lea
int3
and
and
insb
xor
jle
cmpsb
fdivrs
push
fcomip
repz
imul
fiaddl
mov
dec
or
mov
jo
mov
and
inc
xor
jb
cmpsl
mov
xchg
jns
lods
sbb
add
ficoms
lds
js
mov
imul
leave
inc
mov
pusha
arpl
push
mov
jge
outsb
sbb
aam
or
xchg
dec
int3
movsl
and
pop
movsb
sbbb
lock
subb
and
cmpb
xchg
jbe
ja
sbb
dec
outsl
cmpsb
fisubrs
in
ret
enter
daa
or
cmp
pop
in
sahf
in
dec
dec
pop
xor
movsl
pop
rcr
and
jge
lahf
sub
push
mov
sub
jp
in
inc
adc
xchg
mov
add
pop
cmp
cmp
loope
add
sub
adc
outsb
in
xor
adc
mov
jno
pop
jg
xorb
cmp
xor
test
mov
vmovdqa
cmp
fucomip
faddl
repz
lret
test
sbb
or
sahf
pop
cmp
cmpsl
out
pop
subb
jg
push
add
mov
adc
and
and
inc
mov
cmp
sarb
sub
dec
sbb
mov
mov
popa
pop
into
sarl
popa
je
xor
push
xchg
outsl
dec
and
ja
out
jp
cmc
adc
lods
dec
lods
mov
jbe
ss
push
out
call
test
cmp
movb
test
sbb
subb
sbb
pop
jmp
jnp
rorl
imul
gs
xchg
mov
mov
cmp
in
sub
sub
cmp
in
in
mov
data16
aad
repnz
dec
pushl
inc
lcall
les
loopne
push
in
xchg
cmovbe
fstpl
cwtl
repnz
add
cmp
and
je
jmp
mov
pop
cmpsb
iret
cmp
ja
inc
adc
fstpt
aaa
enter
push
orl
enter
enter
subb
add
jl
dec
mov
imul
leave
outsb
fstpt
iret
pop
mov
jg
mov
mov
int
jecxz
aaa
mov
lds
mov
rcll
nop
test
dec
aad
aas
cmpsl
or
dec
mov
ja
mov
xor
sbb
mov
loop
xchg
mov
xchg
leave
jne
daa
mov
mov
mov
ret
fcompl
sub
add
dec
shr
repz
xchg
pop
pop
lret
ljmp
imul
pop
out
push
outsl
xchg
hlt
mov
enter
bound
mov
dec
out
test
xorl
inc
jecxz
mov
cwtl
test
pop
jnp
xor
and
push
cmp
pop
loope
pop
stos
xchg
mov
das
je
add
sti
es
xor
outsl
xor
and
mov
loop
mov
pop
sahf
movsb
adc
in
dec
xchg
jmp
inc
andb
or
clc
inc
fwait
out
sbb
jne
je
mov
lret
mov
bound
out
adc
aas
les
leave
jo
out
dec
shrl
mov
adc
add
int3
mov
repz
mov
call
push
out
fistpll
push
xchg
mov
movsl
push
xchg
xor
lds
xchg
imul
pop
js
push
int3
stos
inc
stos
mov
xchg
sahf
insb
fwait
fwait
insb
jnp
out
cwtl
scas
pop
popf
scas
push
or
iret
add
pop
repnz
and
mov
mov
or
fwait
jp
inc
mov
push
ficompl
sti
xchg
sarb
imul
inc
lds
les
mov
push
push
hlt
adc
jg
sbb
outsl
jbe
rorb
add
inc
xorb
repnz
or
adc
rorl
push
int3
or
xchg
lods
inc
jo
xchg
sbb
mov
dec
movsb
add
das
cmpsb
sbbl
aaa
daa
or
les
mov
mov
push
dec
mov
mov
xor
lods
pusha
rcrl
xchg
inc
mov
inc
roll
arpl
pop
bound
ficoml
jl
xchg
push
push
dec
loope
inc
dec
sub
scas
into
cmp
mov
adc
nop
scas
or
or
and
loopne
xchg
lock
iret
jle
push
mov
mov
xor
lcall
xchg
fdivl
les
add
lds
mov
test
mov
pushf
icebp
mov
ret
and
mov
pop
cmp
jnp
sub
jmp
mov
mov
imul
sbb
loopne
into
movsb
adc
sub
cli
outsl
sub
xchg
stc
cs
mov
retw
lods
fwait
sbb
arpl
jmp
xor
cmpsb
cmp
adc
or
lds
cmp
adc
lahf
inc
loopne
les
or
out
int3
push
call
add
in
xchg
je
jge
int3
dec
push
cmp
or
imul
sub
popf
mov
push
pop
fdivr
lods
add
cs
leave
aad
aaa
test
out
push
dec
out
add
lods
ljmp
jle
push
and
mov
lcall
call
jno
inc
pop
mov
xchg
adc
pushf
cmp
jb
dec
cmp
push
inc
das
xchg
fs
add
jb
jmp
add
jmp
mov
mov
cmc
cwtl
lret
mov
push
add
test
js
dec
xchg
jno
push
out
mov
push
mov
mov
popf
das
ret
mov
jl
adc
shll
es
or
dec
rolb
andl
xchg
nop
icebp
dec
fdivr
cld
pop
cwtl
mov
outsl
sbb
cmp
cli
cmp
pop
mov
nop
sar
adc
stos
int
aam
add
push
lds
fnsave
add
imul
ljmp
sbb
mov
andl
push
jle
jbe
cmpsb
shl
or
popa
add
xchg
nop
jge
xchg
push
xchg
faddl
mov
cmp
stos
lds
push
rcrb
je
push
xchg
sub
popf
insb
or
fstpl
or
pop
insb
xor
cli
int3
mov
and
dec
push
pop
pop
jecxz
ja
fmuls
inc
sbb
or
lcall
push
pop
test
aas
leave
mov
les
sbb
jle
or
in
fisubrl
out
movsb
mov
scas
inc
lds
push
jp
pop
test
or
mov
mov
jle
adc
in
inc
lcall
outsb
lcall
fs
std
lret
out
subl
cltd
push
push
repnz
cwtl
sub
push
or
stos
sub
pop
and
insb
push
sbb
enter
lea
insl
jg
adc
mov
ret
gs
sub
inc
test
dec
jae
xlat
or
popf
or
push
insl
dec
inc
xor
jne
or
and
sbb
setg
jge
ficomps
bound
mov
adc
loope
pop
into
xchg
arpl
ficoms
push
inc
stos
jge
inc
lods
sbb
sub
aaa
fstpt
or
lods
leave
int3
jnp
fstpl
loope
push
scas
sbb
jo
xchg
lea
and
add
lea
push
or
mov
test
mov
int
cwtl
daa
or
xchg
cmp
dec
mov
jl
call
xchg
ds
sbb
dec
pop
xchg
lahf
shl
push
fs
adc
inc
xor
pop
es
mov
js
mov
enter
movsb
loope
movsb
xchg
sub
and
mov
rclb
dec
cmp
and
out
xor
pusha
adc
dec
pop
sahf
sub
or
pop
icebp
dec
jns
lcall
fsubl
xor
sahf
mov
daa
adc
mov
dec
sub
xchg
outsb
mov
push
and
pop
ss
cs
fcmovu
ss
inc
lret
xor
fs
mov
jmp
cs
into
xchg
xor
or
loop
fsubl
fs
in
adc
fsubs
pop
lds
sub
lods
out
nop
loop
sbb
xor
cmp
xor
pop
roll
dec
sbbl
jns
mov
ret
loope
adc
insl
add
dec
xchg
aaa
popa
scas
sbb
mov
inc
xlat
stos
shll
out
sub
fucomip
add
mov
ds
cs
xchg
aad
loopne
nop
ret
dec
dec
or
inc
shl
flds
les
inc
add
popf
fcmovne
lea
in
sar
imul
ljmp
shll
out
sbb
push
pop
in
sahf
lret
inc
mull
inc
dec
shlb
cmp
repz
push
popa
je
movsl
dec
jecxz
fcompl
ja
xor
jg
negb
mov
inc
or
dec
jno
lods
fistpl
popf
hlt
mov
push
pop
das
mov
lea
and
ljmp
stc
pop
insl
pushf
movb
or
mov
and
out
push
lret
ficoms
mov
lock
xchg
mov
mov
sub
lds
push
mov
jp
movsb
lahf
or
and
lods
jbe
bound
in
push
xchg
sbb
push
pop
cmpsl
lea
add
cmp
mov
add
ss
xchg
and
adc
xchg
shll
or
or
push
jne
iret
add
xor
mov
xor
jg
or
inc
xor
sub
mov
push
aam
pop
adc
xor
dec
jns
repz
mov
jb
int3
adc
fwait
inc
punpcklbw
frstor
sbb
jle
js
jnp
scas
xchg
cmpsl
jns
int3
movsb
in
inc
pushf
xchg
addr16
imul
test
or
sub
pop
mov
inc
stc
mov
lcall
in
xlat
pusha
sbb
cmpsb
fistpll
cmpsl
fucomip
mov
and
cmpl
negb
shrl
push
dec
js
stos
lahf
cmc
je
imul
insb
jno
adc
scas
fnsave
push
mov
and
xor
push
ret
push
inc
and
dec
xchg
inc
pop
notl
sti
add
push
mov
scas
fcmovb
cmpsl
jbe
jle
push
imul
pop
lds
cmp
rclb
mov
fs
leave
movsl
popf
in
hlt
test
sub
jbe
xor
jge
or
aaa
lcall
add
addr16
xor
adc
xchg
sbb
les
test
scas
nop
dec
sbb
mov
js
shld
es
pop
int3
jne
xchg
mull
enter
daa
or
xor
pop
leave
mov
jl
test
xchg
fimull
movsl
jae
es
arpl
lahf
loopne
in
aaa
ret
sbb
push
fildl
inc
ret
jmp
sar
js
daa
sub
push
sahf
or
sub
gs
cmp
stc
push
adc
inc
add
xor
mov
out
cltd
cmc
sbb
jl
repnz
xor
clc
push
rclb
int
loop
sub
popw
jo
add
dec
movsl
adcb
sti
fmull
sub
sahf
inc
sub
pop
mov
mov
mov
in
mov
or
or
pop
mov
or
cmp
icebp
mov
imul
sar
mov
adc
pop
sub
cmc
mov
repnz
dec
outsl
call
xchg
das
stc
pushf
sub
fs
enter
dec
enterw
imul
loopne
out
or
xor
add
cmp
sub
incb
cmp
loopne
push
jne
dec
xor
adc
imul
icebp
insl
xchg
cli
xchg
gs
icebp
mov
jmp
bound
in
es
or
and
lahf
dec
aad
in
xlat
nop
popf
aam
dec
lods
sbb
shll
stos
fnstcw
cmp
xchg
push
ffree
mov
jg
call
outsl
adc
jae
sub
jmp
push
pop
hlt
lds
out
out
inc
and
mov
dec
loope
hlt
je
adc
mov
xorl
jns
jne
cmp
iret
fcmovne
stos
push
sbbl
lock
stc
add
addb
jge
and
pop
aam
roll
repz
andl
cmpsl
pop
into
in
mov
mov
cld
mov
lahf
lret
dec
push
adc
divl
dec
pop
lock
mov
sub
fsubrl
mov
inc
ffree
out
clc
fists
xchg
sbb
sub
fdivl
mov
inc
and
mov
mov
fsub
add
jge
jmp
xchg
jmp
xchg
jg,pt
call
inc
xchg
xchg
inc
sub
pop
loop
sbb
sbb
or
add
xor
sbb
xor
test
sbb
stos
pop
fnstcw
iret
sbb
ja
dec
dec
dec
insb
lahf
inc
inc
inc
nop
push
or
pop
adc
dec
fcoml
jne
add
mov
repz
push
rorb
inc
out
jns
xor
xchg
mov
cltd
out
scas
inc
sub
movsl
inc
sbb
mov
jp
lods
or
push
dec
add
enter
aas
sbb
cwtl
ds
pusha
mov
jl
xlat
idivb
xor
into
enter
sbb
fcompl
popf
lods
out
mov
mov
stos
adc
and
mov
jnp
loop
inc
dec
dec
push
sti
cltd
adc
or
iret
pop
and
pop
xchg
or
jae
cld
inc
and
loop
hlt
fildll
push
incb
jl
fidivl
leave
xchg
aad
rcrl
dec
fsubp
jp
mov
jb
sub
repnz
and
sbb
in
hlt
cmpsb
dec
arpl
pop
jbe
lea
cli
mov
sbb
das
xchg
or
push
int3
push
es
pop
pusha
push
xor
jne
icebp
xor
out
into
shrl
lret
inc
cmp
fsubl
sub
cmpsb
or
or
orl
cmp
call
jl
cmp
bound
std
cltd
les
jle
adc
push
or
loope
adc
mov
inc
push
mov
lods
or
pop
xlat
xor
dec
pop
cmp
iret
sarl
sub
jg
cmp
pop
outsb
jns
fists
and
add
add
mov
test
jb
cmp
ds
ret
inc
int
sbb
lret
jae
pop
out
arpl
add
fdivl
sbb
ret
lock
jg
pop
adc
lcall
and
mov
cmp
lods
xchg
lret
movsb
rcll
daa
sbb
cld
cmc
jge
xchg
xor
lret
mov
lea
ja
fimuls
dec
fcmovb
lods
push
ret
rorl
out
in
cli
jle
jmp
mov
repz
or
cmp
gs
pushf
and
addr16
push
adc
jns
imul
pop
cmc
xchg
mov
repnz
cmp
mov
sub
adcb
xchg
into
cmp
mov
jno
aad
pop
loop
js
ret
dec
or
es
out
repnz
pop
add
mov
mov
bound
out
ret
add
add
cmp
inc
jmp
xchg
bound
and
fisubrs
aas
mov
sub
lret
lods
dec
pop
fs
lcall
idiv
daa
and
int
jecxz
sti
push
mov
scas
adc
sbb
dec
inc
jne
fcomi
daa
inc
mov
adc
fwait
sub
das
pop
mov
mov
mov
adc
rcll
out
int3
xor
insl
push
fmull
scas
sti
cmpsl
push
int
mov
rcr
inc
cld
fists
push
lret
mov
fcoml
mov
jne
jae
sub
inc
pop
ret
sbb
push
push
mov
cmp
xchg
pop
cmp
ljmp
jb
dec
cmp
mov
stos
hlt
xchg
xchg
adc
mov
ret
insl
addb
mov
cltd
and
repz
les
dec
dec
testb
or
xchg
pop
daa
sbb
add
shll
in
fildll
mov
add
jp
sbb
arpl
push
icebp
lcall
inc
lock
je
pop
mov
sti
ja
lret
int
pop
inc
pop
inc
ficoms
or
js
fwait
mov
lds
popa
negl
out
ss
cmp
insl
pop
jns
cmp
in
push
and
out
bound
or
imul
mov
ja
mov
js
adc
in
push
cmp
nop
or
testb
or
jmp
pop
iret
ja
fmul
stos
push
lahf
fcomps
dec
mov
push
enter
test
aaa
and
test
adc
pop
scas
mov
cmp
cli
iret
mov
sbb
into
mov
movsl
adc
jae
clc
xor
pop
fimuls
xchg
fisubl
iret
adc
sub
bound
fcompl
outsb
dec
push
fiadds
sbb
rorb
stc
repnz
xor
xchg
js
hlt
aas
xchg
push
arpl
addr16
pop
das
jge
cmp
sbb
xchg
sbb
icebp
or
add
pop
mov
cmp
push
pop
das
jle
pop
pushl
dec
or
scas
dec
xor
cmp
and
jnp
stc
int3
lods
cmpsb
lea
sub
pop
jne
enter
daa
push
fiadds
jno
mov
jl
movsl
inc
dec
je
ljmp
nop
inc
and
mov
lahf
push
cld
or
fisttpll
notb
add
outsl
mov
jl
js
mov
pop
js
push
push
mov
adc
insb
xchg
sbb
xchg
jp
mov
sbb
cld
test
push
adc
xlat
sbb
or
push
loope
int
cltd
pop
sub
cs
outsb
xor
mov
pusha
xor
bound
lahf
sub
xor
filds
lret
mov
std
sub
repnz
mov
bound
addr16
cmp
out
pop
lret
leave
shrl
les
test
into
xor
push
cmc
inc
pop
xor
add
jo
push
movsl
jb
or
xor
jg
sub
inc
insl
lods
aaa
insl
leave
mov
ljmp
xchg
pop
data16
nop
sti
or
bound
mov
das
pop
xchg
cs
inc
imul
or
xchg
sbbb
push
arpl
addr16
push
sub
push
into
mov
cld
mov
sti
push
cmp
gs
nop
push
test
push
leave
inc
stc
push
cmp
jmp
mov
xchg
cmpsb
jae
lea
call
insl
div
pop
or
adc
pop
and
jge
pop
aad
or
inc
fwait
add
sub
jg
dec
iret
jne
je
in
jecxz
js
testb
std
je
mov
mov
mov
notl
aas
subl
push
movsb
mov
add
imulb
das
ds
mov
pop
cmp
and
mov
dec
es
jge
insl
push
add
mov
push
fdivrl
stos
pop
int
or
adc
sub
and
mov
arpl
inc
inc
in
sub
push
inc
ret
cmpsl
jp
push
shll
adc
clc
push
js
xchg
xchg
dec
pushf
ljmp
sbb
cltd
std
out
or
stc
stc
push
ljmp
add
jge
cltd
push
cmpb
repnz
mov
push
test
push
ficomps
lea
rorl
jp
stos
cmpl
addb
pop
and
sbb
adc
int
hlt
xor
test
mov
xor
movsl
mov
inc
cmpsb
shlb
iret
lret
fwait
pop
inc
jne
push
fwait
rclb
inc
jne
push
fs
jb
out
adc
sub
out
xlat
in
jl
xchg
push
jae
out
mov
or
int
jp
into
fidivs
mov
mov
fidivrl
aas
pusha
in
adc
fists
mov
aad
sub
repz
push
bound
pop
mov
pop
or
clc
in
and
push
fs
lea
mov
sarl
sbb
ret
jnp
add
add
sub
mov
xchg
push
sub
lock
sbbl
imul
fisubs
imulb
add
push
mov
pop
lods
ror
or
mov
adc
scas
pop
jbe
movsb
jne
dec
stos
jge
adc
mov
xlat
hlt
lret
or
or
jnp
mov
pop
mov
fisubs
movsb
push
sahf
scas
sub
test
cmp
cltd
push
dec
mov
cmpsb
adc
imul
inc
or
enter
daa
add
jne
jno
adc
jl
loope
dec
jecxz
pop
ds
adc
loop
and
dec
push
mov
jbe
add
in
push
cmp
and
mov
xor
pop
and
fucomp
pop
mov
xchg
push
push
xchg
loope
cwtl
xor
in
sub
cwtl
outsb
aas
push
pop
adc
xlat
lcall
daa
stos
add
repz
adc
pushf
xor
pusha
fadds
leave
hlt
jne
jmp
cs
mov
push
cmp
fmull
xlat
mov
rorl
orb
lret
jae
mov
xlat
pop
mov
sbb
and
aaa
push
cmp
and
adc
lret
stos
jne
rcl
mov
rcl
sbb
fmuls
cmc
or
aas
xor
xlat
outsl
test
mov
sarl
fs
mov
push
sub
lods
push
sti
cli
mov
pushf
jecxz
in
mov
in
dec
xor
cmp
add
jmp
pop
gs
mov
pop
movsl
xchg
dec
adc
inc
add
lea
insb
jb
mov
stc
xchg
inc
in
sbbb
scas
int3
xlat
cmpsb
xchg
or
mov
hlt
mov
addr16
pop
aad
cs
insl
or
cs
iret
dec
leave
push
sub
das
scas
fldenv
push
jecxz
mov
jb
sub
jecxz
jecxz
call
in
lods
ja
xor
adc
jecxz
pushf
fmuls
pushf
jmp
sub
mov
inc
mov
mov
icebp
outsl
test
xchg
dec
inc
sub
xor
jecxz
xor
testb
dec
cwtl
jno
jge
mov
rorl
rcll
fistl
rorb
frstor
fsubrl
sbb
loopne
mov
decl
jg
sarb
push
dec
mov
out
add
mov
icebp
orl
add
aam
mov
mov
dec
hlt
imul
iret
fsubrs
jge
adc
sbb
ret
ss
and
cmp
mov
nop
call
or
out
inc
outsl
popa
loope
adc
push
iret
out
jo
aaa
xchg
sahf
lret
sbb
jno
cmpsb
outsl
cltd
mov
dec
test
popa
out
lret
dec
sbb
pop
adc
sbb
push
shll
pop
jecxz
push
stos
jo
mov
add
adc
add
sbb
xor
or
xor
and
pushf
mov
aam
mov
add
loop
push
push
ss
inc
cmpsl
jge
or
orb
inc
fwait
add
test
jne
adc
mov
iret
xor
hlt
xor
jns
aaa
push
in
aaa
jae
mov
and
mov
xchg
nop
xor
fs
jp
in
sbb
loopne
dec
mov
jnp
std
sub
lods
test
adc
xor
test
scas
ficompl
lcall
cmp
xor
and
push
insb
mov
inc
inc
sbb
dec
jnp
sbb
test
imul
das
iret
js
mov
pop
cmp
in
mov
mov
loop
xchg
sbb
pop
inc
lods
pop
dec
fimull
cmp
imul
leave
mov
xadd
cmp
sarb
repnz
es
and
arpl
jbe
pop
outsb
jge
cld
ljmp
popf
adc
bound
int
adc
pop
in
aaa
pop
push
push
mov
xor
mov
out
and
sarb
jne
movsb
inc
sti
inc
push
xchg
fstl
cmpsb
xchg
in
sub
cmp
add
cmp
jmp
push
jl
icebp
std
dec
push
insl
out
ds
movsl
cwtl
dec
and
movsl
lahf
pop
push
cmp
sub
test
pop
inc
cmp
lcall
dec
mov
js
cwtl
rclb
mulb
push
movsb
and
in
scas
fs
ret
out
jnp
jge
mov
fidivrl
mov
lcall
outsb
inc
sbb
enter
mov
or
int3
jnp
int
loopne
sub
or
insb
fs
push
nop
jg
fdivrl
pop
test
pop
or
subb
fdivrl
xchg
mov
out
mov
mulb
mov
mov
ss
push
cmp
fstl
inc
mull
xor
mov
jae
mov
or
sbb
mulb
sub
mov
xor
xor
stc
js
pushf
fs
xchg
pop
adc
jb
data16
add
add
push
out
mov
xor
inc
inc
adc
inc
sub
decb
cmp
or
push
pop
mov
imul
xchg
push
mov
bound
inc
aaa
push
xchg
push
icebp
sub
fisttpll
mov
mov
shl
popf
sti
in
sbb
or
or
inc
pop
aas
test
push
insl
ljmp
rorb
lods
adc
dec
popa
aam
cmp
imul
pop
out
cmp
xchg
cltd
jmp
mov
pop
inc
lcall
aas
nop
les
dec
mov
or
jecxz
xor
test
pushf
std
ret
cwtl
sub
inc
mov
jecxz
mov
pop
sbb
push
imul
lods
xor
das
cld
and
mov
mov
inc
sarl
mov
push
outsb
add
pop
cmc
jo
mov
push
mov
pop
sbb
lret
or
cmp
imul
test
pushf
outsl
pop
pop
insb
mov
nop
mov
aam
jg
ret
lds
push
push
inc
and
clc
lret
in
inc
xchg
adc
outsl
sbb
test
lods
lea
sub
sbb
xchg
in
lret
sub
pavgb
ret
add
cltd
vmovups
push
push
int
lahf
dec
test
test
fistps
xchg
jl
sarl
pcmpgtd
movsb
mov
mov
mov
mov
xor
inc
enter
ss
imulb
mov
mov
or
mov
bound
dec
cmp
inc
mov
lret
xor
mov
jne
xor
jecxz
or
shll
aaa
jns
sub
in
inc
fcoml
adc
or
and
sarl
rclb
mov
and
mov
mov
and
push
in
fists
rcll
push
sbb
mov
popf
dec
pop
cmpsl
mov
test
sahf
stos
ficomps
and
rolb
mov
jnp
div
scas
int3
xor
pop
jg
adc
pop
iret
xlat
adc
pop
jae
jecxz
jecxz
jae
jle
inc
test
popf
dec
push
sub
fidivrl
push
stos
xchg
xor
sbb
sbb
cld
fisubrs
vxorpd
rcr
push
mov
add
leavew
clc
push
mov
arpl
mov
xchg
xor
sbb
lret
push
jmp
add
imul
add
xor
pop
xor
and
xchg
insl
movsb
iret
fisubrs
cmpsb
push
xchg
cmp
adc
and
scas
std
call
cmp
ret
inc
cs
jl
aad
dec
rcrl
mov
movsl
xchg
mov
and
leave
push
lahf
jnp
push
push
add
push
rcl
testl
shlb
stos
int
imul
xor
cmpsl
mov
add
adc
sub
cmp
cmpl
rorb
or
sbb
fiadds
push
xor
sbb
iret
jbe
int
fldcw
mov
mov
lcall
mov
arpl
sub
out
jne
mov
inc
ja
jg
sahf
lss
testl
cmpsl
dec
mov
pop
pop
cltd
cmp
cwtl
adc
lret
and
mov
push
outsl
sbb
in
jne
cltd
sub
adc
hlt
outsl
inc
mov
loop
inc
xchg
stc
das
and
rorb
sbb
push
dec
push
lods
in
ret
push
int3
out
call
xlat
xor
in
and
and
or
dec
and
xor
in
lock
jmp
jecxz
notb
imul
imul
mov
xchg
leave
imul
sbb
stc
xlat
and
cvtpi2ps
out
in
cmp
mov
pop
aad
or
nop
in
lea
xchg
fiaddl
sub
mov
lret
outsl
sbb
scas
pop
adc
mov
or
pop
cltd
pop
mov
fstpl
pushf
loop,pn
jmp
pop
mov
test
inc
in
out
stos
aas
das
sbb
std
dec
xor
je,pn
sbb
or
mov
out
mov
xor
cld
mov
arpl
repz
and
mov
je
repnz
mov
imul
lock
mov
das
sahf
mov
adc
sbb
fcoms
insl
push
inc
into
dec
lods
push
xor
mov
lods
icebp
das
int3
mov
lret
js
js
sbb
push
aaa
imul
mov
xchg
iret
aam
cmp
push
adc
push
sbb
fldl
test
xchg
push
mov
pop
popa
pcmpeqd
lods
clc
nop
xchg
mov
ss
outsb
push
jnp
pop
fistpl
add
ret
cltd
cld
addb
pop
cmovo
jmp
sub
sub
and
cmpsb
or
fistpl
out
stos
dec
outsb
or
inc
jns
add
rcl
test
testb
and
xor
sbb
mov
push
lcall
lret
test
sbb
fneni(8087
inc
cmp
stc
or
cmp
fwait
pop
add
dec
dec
add
arpl
mov
jp
and
in
test
xchg
inc
or
cwtl
mov
adc
mov
bound
aaa
jp
dec
cs
mov
mov
xor
and
loope
in
loopne
mov
xchg
out
xchg
push
lods
imul
mov
out
sbbl
ja
stos
push
lock
jo
jnp
xor
cmp
inc
and
push
and
sti
jnp
sub
push
pop
mov
adc
je
movsb
add
pop
pop
stos
and
rcl
into
jae
mov
inc
xor
popf
push
stos
aas
lea
sbb
fisttpl
sub
fcmovnu
pmullw
sar
pop
mov
push
dec
ror
fcompp
hlt
imul
jbe
sub
jge
dec
lcall
jnp
or
mov
inc
repnz
int3
call
push
xor
in
fdivl
mov
dec
scas
lret
and
jp
cmp
push
cwtl
movsb
pop
push
add
xor
repz
stc
and
enter
daa
add
fnstcw
push
jbe
jno
repz
dec
xor
and
lods
insb
movsl
popf
xor
lahf
lcall
test
popf
mov
inc
sbb
or
jnp
pop
lcall
pop
je
xor
pop
jp
sbb
sub
push
cmp
out
outsb
push
push
loope
push
lods
push
andb
sbb
rcr
xor
hlt
push
shl
fmul
push
mov
sub
sbb
and
ds
fmull
in
xchg
sub
mov
test
popa
andb
jg
mov
mov
ret
int
push
push
enter
test
pushf
push
push
cmp
push
cmpsl
push
mul
stos
pop
lret
mov
test
mov
push
into
mov
jecxz
xor
outsl
and
jbe
push
out
out
jo
pop
pop
fistl
imul
dec
mov
ret
loope
sar
gs
mov
cmp
insb
jno
push
out
gs
fstps
andl
add
ja
mov
sbb
push
or
xlat
arpl
fisubl
test
inc
sti
and
cs
xchg
aad
jno
nop
mov
mov
inc
inc
sti
or
lds
iret
push
loop
lcall
lea
sub
imul
and
xor
and
aad
pop
popa
cli
daa
inc
test
or
aas
into
jns
jb
push
xlat
dec
stos
and
je
jg
jecxz
add
testb
adc
cwtl
mov
inc
test
or
mov
fnclex
adc
mov
mov
xor
div
bound
das
mov
jg
mov
mov
lock
pop
das
lds
jbe
dec
test
icebp
cmpsl
add
icebp
push
mov
lahf
lret
out
test
cmp
cmc
xchg
mov
stos
mov
das
sub
popa
aam
dec
bnd
jecxz
push
push
fucom
xlat
mov
xchg
xchg
les
inc
fisubrs
es
arpl
push
out
cltd
dec
pop
xchg
jae
jnp
push
orl
addb
xor
or
dec
pop
xchg
push
outsl
test
cmpsb
xchg
xchg
push
and
imul
stos
cmp
inc
addb
out
call
sub
jbe
inc
xchg
push
mov
cmp
xchg
pop
xor
jo
push
add
or
jp
fwait
mov
aaa
pop
jne
movsl
gs
pop
daa
out
xchg
mov
sub
add
and
xchg
nop
jo
out
mov
sub
xchg
addr16
test
xchg
andl
outsb
xor
popa
rorl
mov
stos
mov
ret
pusha
pop
in
fists
arpl
xchg
push
mov
jns
outsb
js
popf
xchg
js
mov
add
stos
les
inc
insb
pop
lret
add
and
dec
push
movsl
dec
in
sub
lret
into
push
pop
loope
loope
fcoml
in
jae
sub
xor
fimuls
out
rolb
inc
sub
dec
fisubl
push
adc
insl
adc
sbb
inc
fidivs
push
cmp
adc
mov
test
push
xchg
mov
mov
mov
inc
addr16
dec
mov
aaa
shrl
adc
int3
roll
and
add
loope
xor
adc
scas
test
rolb
nop
mov
ja
test
in
cmpsb
sbb
push
in
loopne
enter
daa
add
cmp
mov
mov
ds
jb
movsl
movsb
adc
mov
pop
mov
push
push
out
ds
pop
sarl
fistpll
repnz
mov
in
push
lret
xor
mov
cmp
shrb
pop
aas
dec
rolb
bound
jae
pop
sbb
stos
int3
add
addr16
xor
inc
mov
aad
nop
int
js
sub
or
xor
xor
mov
loopne
xor
add
test
stos
pushf
cmpb
jg
fldcw
mov
dec
mov
mov
mov
and
sti
inc
fisttps
cmp
push
shlb
lret
xor
sbb
mov
sbb
dec
mov
xor
repz
pop
add
popf
popf
jmp
icebp
adc
aaa
loop
mov
dec
aam
loopne
xchg
cli
mov
push
xor
stos
out
cmp
push
sub
fistpl
ja
in
and
pop
and
xlat
adc
push
adc
jnp
cmpsl
adc
stos
jmp
out
jne
xchg
dec
mov
sbb
mov
sub
cwtl
mov
adc
pop
cs
fs
enter
lcall
inc
pop
cmpsl
push
frndint
dec
mov
loope
test
imul
lea
sub
stos
mov
call
cmp
mov
test
sahf
pop
add
mov
inc
and
sub
or
je
aaa
test
testb
nop
cwtl
pop
xchg
popa
mov
mov
dec
andl
and
inc
mov
es
das
cltd
mov
mov
jmp
in
sub
shrl
or
fidivrs
push
mov
fwait
mov
icebp
fstpl
adc
push
test
adc
insl
cwtl
push
pop
leave
pusha
shlb
sbb
aam
lods
xlat
ret
jb
adcb
jmp
clc
jl
adcl
cmp
mov
mov
cld
aam
xchg
mov
into
paddw
fiadds
jge
inc
cltd
push
sbb
mov
int3
mov
dec
mov
out
xchg
lea
rol
setnp
sub
lea
sub
or
pushl
inc
xor
icebp
pop
or
insb
push
xor
bound
mov
int
mov
in
sbb
ja
sahf
cmc
dec
adc
add
iret
mov
fwait
mov
pop
out
or
int
hlt
or
out
jo
jmp
fistps
jns
loop
in
imul
sahf
sbb
subb
pusha
jge
jp
jb
mov
jb
mov
adc
test
addr16
in
add
pandn
dec
and
jbe
in
xchg
and
stc
push
xor
daa
popf
mov
push
mov
and
out
iret
insb
leave
mov
xchg
scas
cmc
in
push
in
inc
push
adc
test
hlt
hlt
pop
ret
add
stos
mov
jae
addr16
or
imul
mov
xchg
ss
sbb
shlb
ficoms
inc
lds
xchg
shrb
cmp
repnz
mov
xor
add
cmp
sub
jbe
lret
mov
movsl
sbb
push
dec
add
mov
mov
js
push
stos
test
xor
imul
scas
mov
in
dec
pop
fstpt
inc
les
push
shrl
clc
cmpsb
lahf
adc
in
dec
xchg
enter
daa
add
fnstsw
mov
add
call
jb
push
mov
je
stos
pop
or
mov
xchg
lcall
xchg
in
push
xor
inc
cmp
cltd
add
pop
call
dec
sbb
push
jmp
push
cmp
add
outsb
cs
test
push
jnp
sub
test
push
jmp
mov
in
lds
fcomps
in
in
sbb
or
push
mov
fsubl
sub
jmp
test
adcb
inc
mov
daa
pop
mov
and
mov
test
and
cmp
ss
loope
aad
das
fmul
mov
mull
fs
push
shll
inc
sbb
hlt
mov
subb
out
orb
stos
jge
loopne
sub
stc
push
sarb
adc
or
lods
mov
imul
xor
mov
mov
lcall
loopne
cmpsb
mov
inc
in
adc
push
out
imul
dec
add
mov
adc
cmp
shlb
icebp
adc
aam
jle
outsb
sti
or
cmpsl
loop
aad
push
fisttpl
or
inc
imul
in
xor
mov
xorb
mov
sbbl
adc
loop
sbbb
bound
icebp
cli
inc
mov
fldl
mov
jb
mull
cltd
push
push
je
inc
and
fldl
std
pop
ss
cwtl
sbb
stc
mov
mov
mov
xor
dec
mov
add
inc
std
mov
fwait
sarl
mov
sarb
sbb
mov
mov
lock
sarl
int
popa
sarb
mov
cmpsl
pushl
mov
mov
int
or
mov
mov
das
subl
sarb
mov
mov
sbb
ret
add
ficoms
push
or
sti
andb
adc
test
push
mov
lods
cmp
lock
pop
push
adc
or
adc
add
inc
sub
xchg
jbe
and
test
mov
ret
not
rcll
sarl
sbb
adc
and
je
shll
out
xor
ljmp
fiaddl
lahf
mov
lods
mov
pop
cmpsl
and
add
xchg
inc
decl
fwait
in
push
cmp
jbe
jne
cmpsb
or
dec
into
mov
fcmovbe
lahf
jns
addr16
cmp
in
xchg
cs
mov
sub
jge
jge
pop
stc
mov
adc
sarb
adc
in
mov
in
mov
xchg
int
movsb
jmp
jmp
test
push
hlt
and
popf
in
in
mov
adcl
andb
icebp
aas
insb
xor
imul
icebp
scas
pop
pop
mov
adc
addr16
push
and
hlt
sub
repnz
jg
mov
test
push
daa
jo
fimull
jg
xchg
leave
outsl
sbb
or
imul
mov
clc
inc
lods
vpcmpeqw
rorb
mov
dec
rorb
and
hlt
dec
sub
jbe
dec
jge
test
jbe
shll
push
movsl
jne
and
mov
test
mov
push
lea
pop
xor
shll
and
pop
push
cmp
jno
movsb
sti
mov
push
and
in
scas
cmp
daa
call
jno
sbb
dec
jge
lock
add
lahf
idivl
cmp
pop
inc
inc
leave
pop
jmp
les
pop
js
out
pop
xor
push
mov
push
outsl
sbb
cmp
mov
outsb
xchg
leave
lods
adc
stc
jecxz
mov
cmp
cmp
xor
push
fucomi
add
push
cmpsl
and
mov
pop
cmpsl
lcall
mov
adc
sahf
add
test
mov
xorb
mov
cmp
push
inc
xchg
mov
repz
jecxz
aaa
ss
cmp
test
pop
mull
cmp
rorl
mov
cld
into
gs
cmc
mov
pop
xor
mov
mov
inc
push
stc
or
cmp
push
pop
sub
lods
mov
fs
sbb
cli
push
imul
sti
cmpb
jg
mov
les
pop
pop
int3
imul
imul
push
inc
inc
add
aam
sbb
add
mov
sub
mov
jmp
scas
mov
or
aad
stc
mov
push
popa
sbb
cmp
inc
jle
rcr
push
int3
test
inc
mov
test
mov
sub
adc
std
nop
pushf
fidivrl
jmp
popa
or
fistpl
inc
pop
xchg
mov
jb
push
jno
adc
push
repnz
pop
notb
outsl
insb
cwtl
shr
mov
xor
cmp
dec
lahf
mov
fldt
repnz
sahf
mov
mov
mov
push
into
add
test
add
inc
into
dec
ror
add
mov
addr16
dec
cltd
aaa
loopne
push
pop
mov
mov
pop
cld
aaa
fdivrs
mov
fnsave
mov
scas
rorb
push
sub
add
jecxz
add
out
pop
push
cmp
and
clc
repnz
fcoms
mov
adc
movsb
xor
ret
xchg
dec
in
je
out
or
mov
loopne
cltd
fdivrs
test
in
mov
lcall
xchg
push
test
es
xchg
push
popf
shrl
dec
pop
in
mov
rcrl
add
aas
nop
xor
jb
xor
outsb
push
jmp
push
mov
xor
stc
add
push
add
iret
xor
ja
pop
dec
dec
divl
push
or
aaa
or
sbb
pop
jne
mov
test
bound
in
out
xchg
ret
jp
xchg
jge
inc
out
dec
cvtps2pi
sub
addr16
stc
imul
in
mov
lock
jle
mov
pop
pusha
sub
add
out
and
xchg
mov
loope
xchg
mov
sub
mov
iret
popf
or
test
shlb
sbb
pop
add
das
jnp
stos
popf
scas
mov
addr16
xor
mov
enter
dec
pop
xchg
addr16
std
int3
push
jae
push
insl
inc
cmp
jl
push
cmpsb
add
fidivrl
cmp
sbb
sbb
imul
inc
ficomps
aaa
fld
gs
sbb
mov
test
arpl
aam
jbe
cmp
fldenv
jno
adc
or
addl
xchg
and
pop
pop
mov
push
jo
inc
xor
and
and
fdivrs
mov
jge
xchg
push
jno
repz
movsl
std
push
in
xchg
or
enter
daa
jne
cmp
outsb
jp
int
sub
cmp
shlb
and
lahf
push
in
push
jne
sub
push
leave
xchg
popf
inc
pop
xchg
xlat
xchg
pop
ss
leave
js
sbb
jo
iret
push
inc
cmp
jbe
sbb
cmpsl
adc
xchg
sub
adc
aam
ljmp
inc
fstpl
je
scas
add
and
xor
sub
sub
jae
pop
push
lea
lcall
sub
adc
movsb
mov
int3
fstpl
ret
mov
add
leave
or
shlb
repnz
test
sub
aas
ret
fistps
lret
ret
or
mov
ret
mov
dec
xchg
cmc
jl
jno
fcoms
outsl
sahf
insl
pop
loop
add
stc
ret
fs
int3
adc
add
outsl
int3
push
cmc
popa
lret
mov
dec
sbb
xor
dec
cmp
dec
out
sub
inc
fldt
dec
pop
jle
jno
mov
test
adc
or
xchg
cwtl
xchg
cmp
aas
in
xor
pop
shlb
dec
ret
pop
mov
push
xchg
mov
cs
mov
insl
nop
sub
dec
bound
inc
xchg
jecxz
fldenv
stos
repz
cmp
call
call
gs
pop
sbb
adc
lock
insl
mov
mov
mov
aas
dec
adc
jb
imul
je
pop
data16
leave
daa
negb
paddw
and
or
pop
dec
dec
mov
push
mov
xchg
mov
and
lock
pusha
aas
das
arpl
adc
and
dec
rcrl
ljmp
mov
cltd
dec
xchg
loop
cmpsl
std
divl
mov
fdiv
bound
cld
bound
lret
mov
leave
dec
and
jne,pt
pop
es
int
ficomps
sub
int
aam
int3
test
push
jmp
dec
mov
xchg
jns
ljmp
add
setle
mov
and
jnp
push
ret
bndldx
and
mov
and
in
cwtl
mov
out
xchg
xchg
aaa
dec
out
inc
lds
movsl
sbb
rol
lds
stc
mov
push
jbe
push
add
pop
lock
call
mov
xor
jbe
or
ret
stc
popa
or
mov
sbb
jge
dec
ljmp
or
leave
ljmp
xchg
jne
cmp
mov
lea
or
push
sbb
pop
test
dec
cmpl
out
push
xchg
sub
jae
fldenv
jge
jp
js
mov
push
mov
or
sub
in
movsb
or
fisttps
inc
ja
pop
push
sub
cmp
push
jp
inc
popf
xor
mov
cmp
nop
test
and
subl
jnp
mov
scas
push
sub
push
rorl
iret
adc
pop
mov
pop
outsl
jae
mov
inc
inc
mov
addr16
and
dec
arpl
inc
imul
inc
fidivrs
add
rolb
jbe
cmc
data16
leave
ret
hlt
loop
jle
fisttpll
cmc
jbe
push
cmpb
imul
iret
stos
push
or
mov
jbe
jg
mov
push
push
and
inc
jo
lcall
add
mov
sub
jne
cmpsb
sub
das
enter
daa
std
cmp
cmc
jno
out
jl
xchg
xchg
dec
pop
push
push
pop
adc
movsl
rolb
lahf
xor
jo
test
xchg
sbb
dec
imul
pop
adc
pop
scas
lret
push
add
lea
sub
or
inc
gs
adc
scas
icebp
ja
dec
sbb
cmpb
xor
pop
xor
faddl
loope
int
movsw
sub
mov
icebp
pop
paddusb
leave
sub
pop
bound
or
and
mov
orb
push
mov
fwait
mov
xchg
and
nop
adc
jmp
dec
cmp
cli
cmp
arpl
rorl
mov
cmc
inc
pop
mov
xor
outsl
jge
cmp
dec
testl
fs
call
imul
lock
in
cli
jl
jnp
and
pop
cmp
pop
adc
xchg
sahf
cmp
gs
sbb
xchg
jo
pop
popf
test
adc
jmp
adc
sub
xchg
pop
ret
movl
sbb
sahf
mov
dec
jae
mov
mov
ret
rclb
movsb
nop
push
jns
dec
shrl
mov
mov
movsl
mov
pusha
lea
ss
xchg
jmp
in
fistpl
jb
adc
and
outsl
jmp
cmp
movb
es
mov
scas
aas
jmp
icebp
pop
dec
out
je
pusha
iret
jecxz
movsl
fdecstp
fwait
cld
mov
cwtl
dec
nop
push
mov
mov
mov
dec
jne
mov
int
into
mov
mov
out
lock
das
adc
inc
sarl
push
test
shll
mov
ljmp
dec
and
cld
push
mov
icebp
cmp
insb
cld
lea
scas
mov
inc
rol
popa
pop
inc
or
in
xor
jg
ret
scas
jae
push
lods
pusha
mov
jo
xchg
clc
push
xor
ljmp
imul
jp
xchg
insl
sub
rcll
leave
ds
cltd
inc
into
jnp
lock
addl
test
mov
xchg
or
rcrl
mov
sbb
hlt
add
jle
mov
xor
jbe
cld
lea
mov
paddd
sbb
scas
fdivs
and
dec
fstl
inc
les
in
fwait
jns
scas
dec
popf
jl
jne
pop
das
mov
mov
in
xchg
push
bound
int
in
sbb
out
push
push
or
sub
jp
aaa
cmpsb
mov
jmp
ja
into
add
in
mov
sahf
fildll
cmp
push
arpl
xorl
push
cmp
fistpll
xchg
lds
push
ds
push
stos
add
ss
jne
inc
jnp
andl
adc
iret
jo
inc
ret
stc
pop
hlt
data16
adc
jae
push
ljmp
adc
inc
movsb
lods
scas
fisubl
mov
xchg
xchg
xchg
xchg
loope
mov
mov
int3
rcrb
ret
repnz
or
hlt
sub
mov
mov
mov
cmp
mov
or
aad
add
test
push
je
gs
pop
push
ss
cmp
jo
pushf
mov
and
push
add
rcrb
mov
xchg
enter
daa
cld
ret
pop
cmp
test
dec
lret
jle,pt
add
daa
pop
scas
lahf
push
inc
or
test
pop
clc
push
inc
jbe
inc
or
inc
inc
js
cmp
pop
out
mov
movsb
loope
js
sub
ds
repz
outsb
mov
or
rorb
aad
adc
jle
loop
mov
jbe
shlb
and
and
in
add
mov
bound
rorb
dec
lcall
loopne
jmp
test
xor
mov
test
mov
int
and
fildll
adc
fdivs
push
lret
dec
rorl
mov
jb
xchg
cmp
into
push
jae
cmc
or
mov
outsl
pop
mov
ljmp
mov
data16
jp
lods
cmp
test
jp
scas
lcall
dec
inc
test
push
pop
call
gs
xor
pop
mov
jb
imul
jl
mov
mov
out
out
jecxz
mov
or
fnsave
sub
hlt
jne
sub
jmp
xor
sub
xlat
dec
and
cmp
mov
adc
getsec
lods
les
jne
repz
xchg
mov
inc
lea
sub
arpl
pop
jle
out
adc
lock
leave
pop
xor
inc
shl
and
aas
mov
pop
jb
lods
push
dec
jne
fidivs
jb
jae
pusha
neg
mov
cli
jo
cwtl
add
jns
insl
leave
scas
mov
xchg
in
cmp
add
hlt
mov
lock
das
hlt
cwtl
xchg
mov
jle
outsl
and
pop
test
mov
gs
push
lret
pop
add
hlt
inc
cmpsl
sti
leave
int3
mov
adc
add
mov
dec
dec
sub
fs
test
dec
sub
pop
ret
cmp
mov
mov
mov
insb
in
stc
or
popa
mov
adc
in
mov
jmp
cld
xchg
sbb
jo
psubusb
cltd
jge
enter
fdivl
in
test
stos
xchg
mov
mov
shll
fstpl
movsl
stos
xlat
cld
aam
mov
out
add
out
out
addr16
or
das
xor
push
jmp
mov
mov
mov
xchg
add
sbb
mov
inc
pop
jmp
or
imul
dec
andb
out
pop
daa
mov
fwait
dec
out
lret
xor
jns
loop
in
mov
push
stos
out
add
or
test
adc
leave
stos
arpl
mov
gs
in
add
pusha
sti
js
fisttps
cmp
dec
sbb
pop
jne
addl
rcll
in
popf
cmpl
mov
outsl
inc
stos
jbe
lret
and
fxtract
jnp
adc
scas
in
pop
push
dec
or
dec
mov
ds
push
sub
dec
inc
push
jl
jae
cmp
inc
inc
lds
push
and
mov
xlat
in
adc
xor
aaa
imul
clc
lds
jmp
repz
leave
mov
mov
js
icebp
arpl
dec
aas
jbe
inc
jnp
into
clc
sub
bound
aaa
dec
shl
in
mov
fmul
push
mov
pop
xchg
inc
jbe
sbb
mov
inc
or
jo
mov
scas
jecxz
push
and
sub
movsb
daa
lret
xchg
push
pop
dec
mov
in
dec
xlat
clc
enter
daa
sti
xor
cmp
inc
jg
dec
fisttps
pop
push
mov
xchg
mov
lahf
jae
fs
out
xor
test
sub
sbb
stos
mov
pop
stos
push
xor
pop
sub
adc
mov
dec
aam
mov
daa
ret
xchg
ja
gs
ret
popl
xchg
cmp
in
fcompl
sbb
xor
adc
push
out
xor
out
mov
sub
cmp
call
fdivrl
push
adc
sbb
jmp
mov
mov
cs
add
jb
ss
jnp
sbb
mov
lret
xchg
shll
xor
shlb
icebp
push
out
shl
mov
outsl
cmp
loop
jle
stc
out
add
jnp
xchg
cld
iret
outsw
in
lods
and
lcall
call
mov
rorb
cmp
stc
out
or
pop
decb
js
lock
adc
fistl
imul
mov
xchg
loope
or
lock
xlat
sbb
fldcw
xor
inc
mov
xchg
adc
in
cs
cmpsb
js
jb
inc
nop
mov
and
lods
flds
movsl
les
pop
das
repz
mov
mov
mov
jmp
add
loop
cwtl
pop
xor
add
xchg
fidivs
pushf
xchg
jmp
sub
or
inc
pop
nop
sub
ja
aas
daa
jb
jb
fwait
pop
dec
in
jge
je
insl
add
subb
mulb
xchg
es
mov
xchg
mov
pop
dec
mov
insb
push
subl
mov
mov
popf
out
lock
fbld
xor
mov
das
jbe
lock
das
insl
ds
int3
dec
test
cmpsl
cli
clc
jmp
icebp
out
mov
lret
lock
pop
mov
push
xor
pop
cmpl
push
test
and
dec
aam
loope
ret
int3
or
fnstsw
push
out
dec
sub
insb
mov
lods
push
cld
scas
mov
dec
add
add
xor
aaa
jbe
add
insb
rcrl
push
out
xlat
add
and
test
sbb
jecxz
ror
mov
mov
movb
pop
jle
add
stos
mov
out
test
xor
divb
es
cmp
dec
lock
jl
push
inc
repnz
fisttpll
ja
fwait
xlat
jnp
dec
arpl
mov
es
rcll
stos
rcrb
bound
lcall
mov
and
sub
test
jp
shl
mov
jge
mov
lods
add
jle
ficoml
repz
scas
pusha
xchg
xlat
pop
fildll
int
in
adc
jmp
loop
sub
push
ret
aaa
jbe
test
sbb
or
iret
mov
and
ret
inc
imul
push
xchg
pop
imul
pop
sub
ret
sbbl
or
stos
data16
dec
ja
or
dec
add
inc
mov
lret
movsb
xchg
inc
arpl
imul
and
pushf
and
sarb
out
leave
daa
push
hlt
ret
and
arpl
push
dec
jbe
xchg
sbb
xchg
loope
loopne
xor
int3
inc
xor
pop
ret
push
cld
push
cld
pop
push
jo
fldl
scas
ret
and
jb
movsb
mov
xchg
push
lods
and
in
xor
lret
out
daa
cli
and
jmp
sub
dec
test
enter
loop
aad
pop
and
inc
lahf
xchg
mov
mov
push
cmc
lods
mov
xchg
cmp
xchg
ficoms
rorb
js
stos
or
push
push
loope
push
pop
sub
and
sahf
outsb
andb
or
loope
pop
push
cmp
sub
add
mov
xor
lods
sbb
push
mov
sub
or
pop
bound
jo
pop
aas
stos
push
testb
sub
xchg
bound
cmp
cli
jg
daa
ret
mov
mov
jbe
mov
ss
jmp
fsubrs
sbb
xchg
lret
js
cmp
out
rcrb
out
repz
into
aam
inc
cmc
cwtl
mov
and
in
loop
adc
fs
push
adc
pop
movsl
repnz
or
sub
fnstcw
push
xor
xchg
or
sbb
insb
mov
imull
pop
loopne
out
or
adc
mov
imul
into
add
sbb
cmp
cmp
adc
sub
pusha
popf
in
add
sbb
cs
fsub
aad
stos
xchg
nop
xchg
xor
dec
fisubrs
inc
fisttpll
mov
jge
pop
les
cs
rol
lret
lea
push
call
popa
mov
in
loop
in
lock
xor
bnd
inc
mov
inc
loopne
sahf
inc
mov
jb
mov
cmp
sub
xchg
shrl
std
dec
out
cwtl
jp
test
fld
pop
add
gs
pop
and
mov
and
push
cld
lock
mulb
in
pusha
dec
and
or
stos
es
bound
push
aas
dec
adcb
stc
stos
call
icebp
mov
pop
ds
pop
test
mov
pop
test
pop
mov
dec
inc
sub
dec
lods
aam
retw
pop
cmp
push
cmc
xorl
mov
ljmp
cmc
lods
mov
cli
test
mov
sub
push
or
setbe
inc
add
rorb
test
into
mov
ret
jmp
bound
cmpsb
pop
test
loop
xchg
sub
and
pop
cmp
insl
stos
mov
and
add
cmp
lea
xor
and
pushf
das
ja
xor
jae
mov
or
ja
xor
dec
mov
rolb
ja
xchg
pop
stos
fwait
push
popf
in
dec
inc
push
xchg
or
out
mov
bound
jns
idiv
in
jecxz
xchg
or
xchg
out
mov
testb
in
addr16
mov
jp
lods
out
mov
jge
mov
sbb
lret
inc
push
in
lock
fisttps
imul
sbbl
sub
xchg
mov
mov
sti
mov
stos
pop
ljmp
mov
adc
hlt
subb
xor
add
lea
dec
jo
cltd
scas
popl
data16
aam
inc
dec
popf
mov
xor
inc
and
mov
sbb
lret
xchg
jl
fmulp
jmp
mov
xchg
dec
mov
leave
sahf
std
adc
arpl
lahf
jle
xchg
sarb
test
fadds
cltd
or
pop
pop
add
mov
repnz
push
fildll
daa
jo
sbb
and
cmp
out
movsb
cmp
ss
cmpsb
xor
pop
in
sbb
enter
daa
stc
xchg
aaa
cmp
mov
xor
dec
pop
enter
repz
clc
jno
lahf
mov
xor
test
rolb
push
inc
jo
stc
and
repnz
stos
shll
sbb
loope
cmc
clc
sub
mov
outsb
jecxz
cwtl
adc
sbb
mov
or
mov
add
out
xor
xor
int
xchg
jns
test
cmpsl
pop
loope
sub
dec
ss
adc
shrb
xorb
and
cmp
frstor
mov
jmp
mov
dec
mov
fwait
or
imull
and
fsub
in
negl
fisubl
rcl
ja
push
mov
es
mov
xchg
cmc
pop
test
lahf
fidivs
loop
aad
stc
push
and
fs
mov
pop
push
data16
pop
lods
repnz
mov
imul
fcoms
mov
xor
out
or
push
decb
or
loopne
ljmp
test
adc
adc
lods
add
mov
sbb
dec
loope
lcall
mov
imul
pop
pop
or
add
adc
mov
inc
lock
xlat
fnstenv
repz
sub
int
sub
andl
loopne
loop
xchg
jmp
pushf
fdivl
pop
pop
sbb
jecxz
addr16
testl
outsl
inc
jb
push
rorb
push
je
leave
lcall
add
std
out
jbe
cwtl
xor
add
sbbl
add
mov
lret
mov
xchg
add
das
xchg
xchg
mov
mov
jecxz
shll
adcl
cmpsl
clc
loop
mov
xchg
test
into
cld
fnstsw
pusha
cmp
inc
jne
pop
sar
sar
dec
das
sub
pop
mov
ret
ljmp
fisttpll
xor
push
inc
pushf
xchg
lret
ljmp
shrd
loopne
xlat
cmpsb
fsubr
adc
pushf
xchg
repnz
jp
or
inc
pmaddwd
add
daa
test
inc
mov
arpl
dec
icebp
jns
test
ret
addl
pusha
out
sarl
std
pop
out
jle
movsb
and
add
loope
jbe
sub
stos
xor
jbe
fsubr
mov
mov
cwtl
jg
mov
les
sub
test
lods
aad
jl
sbb
dec
sub
cmpsb
jne
jp
mov
inc
lcall
sub
jns
clc
out
add
hlt
add
sub
pop
fdivrs
pop
int
jp
cmp
mov
mov
jb
mov
mov
mov
leave
pusha
int3
sarb
xchg
xchg
hlt
outsl
jmp
js
sbb
dec
cmp
lahf
fnstsw
cmp
and
out
scas
insb
and
jecxz
mov
pop
adc
adc
rolb
in
xlat
addr16
pop
shlb
inc
aas
pop
aaa
jae
xchg
inc
dec
aaa
push
or
inc
sti
xor
mov
lret
sbb
shlb
imul
pop
lds
leave
mov
xchg
xchg
sub
adc
aad
arpl
sub
mov
ret
push
sbb
mov
mov
es
sub
push
ret
xor
inc
outsb
mov
sbbb
cmp
and
push
dec
xchg
mov
jmp
shlb
clc
sub
jno
pop
imul
dec
xchg
or
jecxz
inc
and
cmp
test
mov
lahf
sbb
or
in
js
push
pop
ljmp
loope
mov
int3
cmp
scas
jle
xchg
test
div
jl
and
push
sbbb
push
add
jno
xor
and
lock
fcmovne
and
fsubrl
add
adc
pusha
into
scas
lcall
js
mov
xor
popl
outsb
xchg
jg
stos
cmp
xchg
xor
mov
xor
and
cmp
cmp
mov
cmp
lret
rol
mov
mov
pop
bound
dec
mov
or
es
cmp
outsl
fdivrs
mov
stc
or
ds
loop
adc
enter
leave
lods
fnstcw
and
xlat
ljmp
push
adc
cli
sbb
or
out
sar
push
gs
sti
xor
cmp
jle
sub
icebp
add
mov
xchg
sub
mov
mov
add
mov
push
addr16
cli
pop
pop
cs
loop
nop
dec
adc
inc
add
ret
jnp
les
repz
jmp
ror
mov
cmc
imul
fnsave
dec
mov
adc
and
mov
movsb
inc
adc
hlt
dec
jb
mov
mov
jecxz
in
xchg
imul
fs
xchg
jmp
cwtl
lock
mov
sbb
mov
data16
dec
or
and
mov
sahf
in
lock
pusha
das
jo
inc
mov
pop
mov
and
or
inc
es
lock
rep
aad
jbe
out
negl
data16
insb
ret
mov
lret
cmp
testb
addr16
mov
pop
loopne
xor
sarb
sub
gs
aam
jmp
adcb
lock
sbb
clc
aaa
sub
lds
xchg
popa
or
sub
mov
ja
test
in
jb
push
rcrb
sub
push
pop
xlat
repz
jbe
mov
dec
movl
cmp
and
sbb
lods
ror
std
mov
stos
xchg
mov
push
add
cld
aam
dec
in
dec
xor
bound
xor
pop
fisubs
or
jg
mov
dec
pushf
ds
mov
data16
cltd
and
or
push
jne
dec
test
daa
test
mov
jb
stos
jns
pushf
mov
xchg
cmpsb
add
sub
push
pusha
lds
imul
ret
mov
stc
mov
sti
in
outsl
fisubl
imul
mov
jmp
inc
sub
cmpl
lds
mov
or
inc
inc
outsl
and
adc
insb
mov
jnp
add
push
imul
iret
dec
es
ret
xchg
pop
pop
mov
outsb
jae
jl
inc
push
inc
push
or
mov
mov
xchg
inc
cmp
sbb
test
cmp
lds
jb
shlb
jge
rcll
repnz
add
hlt
movsb
stos
jb
aaa
pushl
jbe
add
jge
cmp
sbb
aaa
dec
sbb
or
ficomps
pop
push
adc
push
movsl
and
xor
sahf
aam
scas
pop
int3
cmp
ja
lods
cmp
and
push
lcall
in
out
xor
jae
pop
daa
testl
jno
mov
jl
pop
mov
ds
bound
cs
lret
push
cmp
sahf
test
push
xor
inc
inc
jl
fsubl
pop
inc
mov
sub
pop
sbb
test
loope
test
sub
mov
cmp
mov
adc
sar
pop
popl
shlb
add
dec
xor
sub
mov
repz
adc
sub
es
fistps
lcall
add
andl
pop
int
xor
orb
stos
mov
sbb
mov
jns
mov
push
and
add
jge
enter
fcomps
negl
mov
lret
mov
add
cmc
mov
int
sbb
into
jge
in
fwait
inc
xor
pusha
outsl
mov
cmp
mov
insb
push
fs
mov
into
and
data16
mov
sarb
out
dec
pop
cli
scas
movsb
mov
cmp
es
or
jg
aad
ss
adc
xor
ret
popf
adc
xchg
imul
rorl
xor
pop
sbb
fdivrl
xlat
sbb
sub
cld
sub
mov
inc
push
push
sti
test
cmp
mov
jb
sti
dec
jns
push
mov
and
dec
les
sub
jg
add
rcll
and
fmulp
cmp
fmull
icebp
fcomps
xor
inc
jne
adc
xor
jb
popa
rorl
xchg
je
jbe
jecxz
popa
push
imulb
inc
scas
cwtl
stos
data16
sub
mov
dec
mull
rorl
mov
iret
imull
dec
in
mov
adc
xor
cltd
mov
roll
andl
cmp
dec
jno
test
mov
inc
es
cld
cltd
loopne
lods
cmp
outsb
int
mov
incl
in
jmp
aam
xchg
mov
push
ds
fstpl
xchg
clc
lret
xchg
dec
push
mov
popa
and
shrl
out
fimull
adc
mov
mov
call
test
incb
xchg
adc
test
inc
xchg
xchg
je
sbb
scas
cltd
shll
add
insb
stos
adcb
push
jmp
lret
test
and
xor
leave
jmp
js
xor
jae
mov
push
hlt
pushf
mov
cmp
ja
out
dec
and
dec
mov
fwait
xchg
cwtl
inc
dec
out
inc
jne
andl
sbbb
out
addb
lahf
in
in
fildll
xchg
cmc
push
sahf
out
cmp
sub
push
jl
addr16
mov
enter
cltd
push
int
cmp
push
jle
ss
pinsrw
add
inc
add
jmp
push
insb
hlt
or
xchg
push
iret
or
popf
inc
pop
inc
mov
mov
jge
and
pop
rep
imull
xchg
scas
sarl
mov
push
adc
js
ret
daa
pop
ds
mov
inc
push
mov
push
sahf
adc
ficoml
jmp
pushf
int3
lret
push
out
pop
push
mov
lds
pop
pop
mov
cmp
leave
add
and
adc
cmp
push
mov
aaa
or
orl
push
sub
xchg
jg
adc
mov
xor
stc
dec
push
scas
jg,pt
and
or
insl
popa
movsb
fimuls
push
jmp
rcr
in
int
sbb
outsb
jb
daa
testb
jno
and
lret
dec
and
movsl
icebp
nop
xchg
and
nop
jmp
push
into
xlat
push
or
add
dec
inc
rcrb
xchg
lahf
and
xor
pop
push
rorb
loope
mov
sub
jecxz
cmp
into
xor
lods
pop
inc
insl
mov
sub
push
add
addl
int
mov
neg
lea
pop
insl
lret
lcall
xor
adc
shrl
jp
or
test
pop
mov
cmp
icebp
mov
pop
xchg
and
movsb
rcrb
pop
lods
fcoms
mov
iret
lret
test
cltd
mov
mov
into
pusha
push
aaa
cmc
mov
dec
xor
pushf
leave
loop
pop
mov
fs
outsl
adc
mov
test
aad
mov
xor
add
clc
hlt
sub
hlt
mov
iret
pop
loopne
jbe
cmc
adc
mov
imul
sub
adc
sbb
fcoms
cmp
ja
xlat
push
loop
sub
and
lods
ja
sti
pop
and
test
xlat
aad
test
nop
add
dec
pop
mov
aaa
fstps
push
les
repz
lods
pop
sarl
in
scas
mov
hlt
ror
pop
ds
mov
push
adc
sub
pop
adc
not
inc
cld
mov
aas
inc
or
jb
push
xchg
dec
aas
lods
xchg
je
lret
int
mov
jo
sbb
cwtl
xchg
mov
out
je
movsl
cmp
sbbl
pusha
fstp
push
mov
jns
jl
xchg
js
cmpsb
push
push
das
cs
enter
and
xor
nop
pushf
test
