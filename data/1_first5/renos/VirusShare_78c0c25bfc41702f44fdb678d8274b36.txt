cmp
imul
inc
add
movsb
pushf
mov
mov
dec
dec
inc
sahf
cld
sar
lock
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
dec
dec
dec
mov
daa
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
cmp
daa
daa
daa
cmp
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
imulb
das
push
mov
add
mov
mov
push
call
sbb
in
fwait
clc
clc
pop
pop
pop
ret
aas
lock
mov
out
fistpll
fdiv
cmpl
je
repnz
div
ja
les
rorb
test
inc
mov
xor
add
rorb
mov
cmpb
je
sbb
je
repnz
in
jg
mov
and
xor
mov
dec
cld
mov
and
xor
jle
mov
aas
lock
icebp
add
dec
hlt
mov
loopne
dec
mov
js
clc
sub
add
cs
int
xor
decb
jne
mov
mov
fnstsw
int
add
sbb
js
mov
xlat
in
mov
hlt
fbstp
add
push
lock
lea
testb
mov
push
loopne
rcrb
jge
add
mov
lock
jmp
adc
push
aas
enter
lods
test
les
mov
inc
lea
xchg
mov
lea
inc
lea
push
fisttpll
mov
mov
inc
dec
inc
fisttps
push
cmp
clc
jge
inc
dec
lea
lea
mov
mov
sub
mov
sti
mov
mov
dec
dec
dec
inc
inc
cmp
adc
pushf
cld
jg
ljmp
and
mov
cmp
jnp
dec
inc
lea
lock
call
adc
xor
rorl
test
jae
mov
lea
mov
aas
pop
xor
inc
dec
dec
dec
insb
adc
mov
xchg
add
in
inc
cli
fldenv
inc
fldt
push
or
add
mov
pushl
lea
dec
mov
outsb
hlt
lea
mov
or
xchg
lock
adc
mov
bts
sbb
push
inc
movsb
lock
imul
call
lock
stc
jg
std
decl
inc
and
jae
mov
inc
xchg
hlt
inc
mov
cld
dec
mov
rcrl
lea
xchg
iret
dec
dec
inc
add
sbb
mov
add
cmp
jb
mov
into
mov
mov
in
js
cmpsl
dec
and
in
addl
xor
dec
dec
inc
inc
mov
cmp
jge
dec
hlt
inc
outsl
jg
filds
imull
mov
mov
inc
inc
mov
int3
clc
inc
mov
xchg
adc
aaa
jb
xchg
fchs
or
jl
inc
xor
mov
clc
mov
lods
dec
inc
pop
nop
cmp
outsl
scas
inc
xor
adc
js
sub
xchg
mov
mov
sub
addr16
call
hlt
pop
sti
fcmovnu
jae
lret
stos
pop
inc
stc
mov
inc
xor
push
dec
mov
cmp
mov
mov
adc
subb
das
clc
pop
jno
mov
mov
lea
lea
test
enter
test
add
add
in
test
mov
and
pop
push
dec
mov
fadds
popf
mov
cmp
cld
jp
lock
sub
push
jecxz
test
movsb
js
dec
bound
mov
add
sub
mov
mov
test
frstor
imull
int3
lea
xor
dec
mov
add
jbe
mov
aas
js
loopne
movb
insl
aam
dec
mov
pop
out
loopne
fcompl
or
loopne
repnz
ret
inc
mov
mov
pop
bound
dec
movsb
mov
daa
js
mov
aaa
add
mov
lea
mov
jle
mov
mov
jns
mov
dec
cmp
adc
jg
or
in
enter
les
shrb
mov
cwtl
rclb
enter
or
dec
cmp
int3
aas
clc
mov
mov
mov
and
jle
mov
add
push
mov
mov
sbb
lock
cli
movsb
push
push
test
push
loope
sbbl
stc
shr
sub
pushf
cwtl
jmp
push
and
out
pushf
mov
sub
mov
mov
mov
stos
mov
dec
mov
mov
inc
mov
mov
inc
mov
cld
imul
mov
mov
xchg
cmp
sub
add
mov
jb
repz
mov
lea
cmp
jecxz
incl
xor
pop
lea
push
into
xchg
jb
cld
push
mov
mov
mov
dec
mov
and
cmpsb
nop
mov
sbb
ljmp
add
adc
repnz
sahf
js
je
jo
mov
and
mov
or
enter
jo
js
xor
js
jo
test
stos
cwtl
sub
adc
pop
adc
pop
sbb
mov
pop
sbb
adc
mov
loop
cmp
dec
sbb
cmp
cmpsl
js
add
repnz
push
push
cmp
lret
pop
outsl
cltd
loopne
sbb
lock
push
dec
or
movsb
and
mov
xor
in
sub
sub
xor
xor
loope
pop
sahf
mov
sub
and
and
fwait
in
mov
lret
mov
mov
adc
mov
sbb
and
and
ror
in
adc
adc
scas
stc
mov
dec
pop
or
pop
jno
enter
add
jae
or
in
loopne
retw
hlt
cld
cmp
inc
adc
and
scas
bnd
fs
cs
shl
mov
add
add
mov
lret
mov
call
in
and
cmp
sbb
xor
loopne
xor
adc
loopne
lods
loope
jne
movb
push
adcb
xor
cmp
xor
cmp
std
pushl
aaa
xor
xor
add
xor
cmp
xor
xor
and
mov
das
or
xor
es
cmp
push
xor
xor
xor
pop
mov
adc
xor
cmp
add
mov
cs
cmp
aaa
xor
inc
push
lock
add
push
cmp
xor
xor
adc
outsb
xor
lahf
cmp
cmp
xor
mov
inc
mov
or
or
xchg
jmp
ds
push
push
xlat
sbb
and
mov
xor
inc
call
mov
cmpsl
xor
mov
in
sub
les
jge
fsubl
sbb
scas
je
sbb
test
in
fwait
add
lea
mov
push
push
mov
rcr
xchg
int
adc
enter
pusha
out
or
int3
push
jb
popa
pop
inc
ljmp
mov
out
cltd
mov
mov
and
xor
js
mov
xchg
rclb
test
pop
jns
xor
lods
mov
lock
inc
mov
xchg
push
fs
loopne
mov
lea
nop
pop
pusha
xor
jb
add
out
lret
test
lods
sti
inc
push
jb
test
mov
and
jns
rclb
push
mov
mov
cmp
sbbl
adc
xor
or
pushl
fimull
pop
dec
add
inc
stos
mov
repz
add
cmp
xor
pushf
insb
movsb
mov
dec
adc
mov
cmp
gs
add
cmp
pop
sbb
inc
xor
call
jle
hlt
dec
iret
cmpsl
adc
jns
and
add
dec
fwait
or
test
inc
sbb
mov
mov
movl
xchg
arpl
push
test
sub
cwtl
push
pop
jns
and
xor
out
js
nop
and
xorb
or
jns
aam
jp
repnz
scas
data16
stc
sub
scas
les
rclb
ljmp
andl
cmpsl
cmpsb
push
sbb
sahf
inc
push
or
jmp
hlt
stc
add
aad
add
cld
cld
lret
push
clc
mov
dec
sbb
aam
movsb
add
add
xor
sub
sub
adcb
xchg
out
jl
and
nop
inc
dec
adc
mov
addb
add
addl
push
dec
cmp
xor
inc
mov
xor
add
cmp
es
jp
ds
add
or
cmp
das
aaa
ss
xor
dec
test
add
xor
xor
fistps
cmp
add
xor
lcall
ss
sub
out
lahf
jb
xor
push
xor
xor
ja
xor
shll
cmp
shl
inc
xor
aaa
loopne
jo
cmp
ss
mov
aam
mov
cmp
addl
mov
mov
xor
ss
cmp
fildll
sarb
xor
pop
xor
mov
xor
sbb
push
cmp
add
dec
fsubp
pop
or
in
test
es
sub
cmp
mov
sti
lods
scas
je
je
je
or
movsl
pop
pop
mov
pop
jp
add
push
stc
mov
inc
pop
sti
add
jb
arpl
dec
cld
jae
add
movsb
movsb
test
daa
je
pcmpeqb
jae
rorb
bound
psrld
pop
sti
idivb
fidivrs
out
jp
jnp
cli
rclb
pushf
and
jp
repz
idiv
xlat
adc
adc
jp
repz
cmpb
mov
sbb
gs
jae
lcall
popf
jb
popf
loopne
or
call
int
ljmp
jmp
div
dec
sub
or
jmp
pop
stc
push
mov
push
mov
les
adc
mov
mov
nop
imul
push
jb
test
ljmp
cmpsb
or
or
jl
add
stc
in
sbb
int
out
fisttpl
jmp
jp
adc
mov
mov
jnp
adc
sub
adc
pop
out
aas
pop
call
in
stc
adc
and
adc
shll
outsl
fisttps
fcmovnu
xor
repz
inc
stos
xchg
sti
xchg
test
sti
sbb
mov
ret
push
jl
in
xchg
push
and
int
mov
xchg
lods
xchg
mov
imul
into
cmp
js
inc
in
cs
xor
div
adcb
rolb
stc
or
jg
fildl
cmp
inc
fistl
adc
sahf
pop
cmpl
push
test
nop
mov
push
push
jg
pop
pop
mov
push
in
mov
cmp
imul
stc
iret
loope
iret
pop
pop
adc
out
fstpt
lahf
jb
mov
mov
and
cli
pop
mov
loopne
pop
push
mov
cmp
imul
or
aaa
adc
sti
jnp
mov
shlb
push
sti
imul
fidivl
cli
rcl
sbb
sbb
mov
pushf
xor
jo
imul
pop
jmp
and
xchg
sbb
mov
jbe
outsl
daa
or
adc
mov
sbb
lret
push
and
shl
mov
push
aas
stc
inc
subl
jp
bound
push
adc
push
jp
into
pushf
testl
jno
std
mov
mov
mov
mov
pushf
jno
js
jnp
fsub
aas
inc
jb
cmp
adc
fsubrs
repz
clc
jbe
push
pop
mov
dec
nop
dec
call
sarl
add
dec
add
sbb
jecxz
inc
test
out
cs
adc
jl
xchg
mov
jp
testl
sub
jbe
mov
and
je
test
sbb
cmp
xor
lock
lea
aas
dec
das
ret
hlt
xor
divl
xchg
testl
imull
bound
clc
mov
and
dec
xchg
push
call
jl
cmp
inc
push
fs
push
clc
mov
clc
mov
push
dec
test
or
in
add
or
add
mov
mov
idivb
xchg
mov
add
cmp
jbe
std
mov
loope
fs
push
cmpl
je
enter
pop
or
xchg
or
fs
or
push
push
push
cmp
jle
cs
push
adc
cmp
jae
iret
inc
aam
out
xor
adc
sbb
inc
std
ss
decl
jne
decl
xchg
add
dec
outsl
popa
fs
imul
sub
dec
jo
outsb
push
push
push
popa
imul
insb
gs
bound
pop
sti
jg
arpl
insl
popa
jo
imul
sub
adc
je
ja
jne
insb
inc
insb
insb
outsl
arpl
je
dec
outsl
jbe
dec
gs
jo
xchg
bound
outsb
fs
in
out
neg
outsb
je
scas
inc
fs
gs
inc
gs
jb
and
pop
movsb
cltd
xor
pusha
add
sbb
or
sarb
mov
call
and
out
push
push
sarl
call
test
cmp
test
dec
outsb
es
orb
push
stc
push
cmc
hlt
loopne
adc
sti
push
jl
stos
inc
sub
and
pushf
adc
clc
lods
jno
mov
or
add
je
loopne
ja
cld
add
pop
test
adc
lea
stc
and
inc
or
sbb
cmp
mov
adc
inc
xor
mov
push
les
das
jle
lds
push
xor
sub
dec
mov
xor
test
mov
xor
xor
mov
push
inc
mov
adc
lcall
sti
dec
mov
mov
or
enter
push
aad
daa
mov
xor
add
cld
subps
add
mov
inc
ret
in
pop
inc
cmp
lcall
roll
jo
insb
and
ret
dec
lock
cld
sub
mull
sub
clc
and
loopne
test
sahf
lret
inc
and
dec
and
addl
dec
and
jmp
cltd
lock
and
sbb
shrb
lea
in
in
and
or
adc
and
ret
pusha
fstpt
insb
jae
and
mov
ss
or
cmpsb
push
cld
sub
shll
out
shl
call
jl
and
pop
inc
push
pop
int3
mov
xor
cltd
add
jae
xor
add
sbb
mov
inc
add
push
test
and
ds
jb
jmp
inc
xor
xchg
js
cmp
sub
add
cmp
sub
add
aaa
cmp
push
mov
mov
mov
int3
int3
cs
inc
push
and
jge
hlt
or
xchg
cltd
and
lods
inc
lds
cmp
imul
gs
xor
cs
insb
outsb
mov
outsl
add
movhps
add
fwait
ja
insb
push
jo
je
popa
inc
pop
inc
jo
add
inc
sub
inc
insb
gs
dec
imul
outsl
add
outsb
add
movsl
and
rol
sti
imul
test
inc
hlt
out
push
test
into
pop
sbb
mov
and
push
push
add
or
pop
cmpl
or
jne
mov
pop
xchg
popf
js
stos
add
pop
cli
test
mov
cli
adc
sti
testb
mov
cmpsb
sub
lea
testb
fbld
adc
movsb
dec
cld
cmpb
stc
loopne
faddl
inc
adc
xor
add
popa
out
sub
xor
movb
adc
loop
arpl
daa
jne
push
or
pushl
ja
or
or
aaa
mov
dec
clc
mov
cld
sbb
add
push
inc
flds
insl
inc
or
cmp
sahf
push
add
add
loopne
add
add
push
adc
addl
push
mov
adc
pop
loopne
mov
test
add
roll
or
or
call
add
mov
ds
push
icebp
push
test
mov
and
dec
fmuls
mov
lock
pop
ja
xor
div
cmp
nop
cmpsl
sub
insl
cld
adc
adc
clc
inc
dec
inc
or
jbe
cmp
je
insb
inc
xchg
lods
call
ss
adc
pusha
add
or
pop
xchg
mov
push
xor
add
mov
cs
add
mov
add
and
pop
in
mov
neg
mov
not
shr
cmp
je
addb
mov
loopne
fs
cmp
jne
dec
inc
fdivs
mov
rolb
and
add
dec
ret
imul
test
adcb
inc
les
add
push
cld
das
flds
xchg
decb
negl
inc
inc
icebp
mov
sub
test
add
pop
leave
push
push
ljmp
int3
int
add
add
add
or
and
add
fstpt
fnstcw
daa
adc
pop
mov
xor
inc
mov
sub
cmp
fucomip
ljmp
push
jae
dec
dec
push
add
add
add
mov
add
inc
or
dec
push
sub
or
sbb
add
ss
dec
arpl
push
shr
push
add
or
add
sub
cmc
nop
std
mov
ret
arpl
fwait
add
add
add
ret
pusha
popf
mov
add
adc
data16
pop
mov
or
repz
or
nop
sbb
xor
addr16
mov
sub
and
lcall
or
pop
mov
jl
add
dec
add
sbb
dec
arpl
and
imul
or
add
into
push
mov
daa
sub
and
and
jnp
leave
call
xlat
and
pop
sub
and
mov
mov
mov
addps
neg
lret
mov
pop
pop
adc
add
outsl
bound
cmp
movsb
and
lods
ss
mov
test
pop
leave
testb
imul
add
add
dec
or
push
jo
addr16
insb
stc
outsb
inc
mov
lock
pop
or
sti
idivl
inc
add
add
xchg
add
call
cmpsl
pop
xlat
pop
jo
pop
insb
jg
dec
or
sub
mov
xor
push
and
push
sub
cmc
jo
test
daa
inc
and
test
add
cmp
sub
sbb
fildl
sub
sub
inc
fistl
sbb
push
mov
aas
repz
insl
mov
std
fistps
dec
sbb
lods
insl
add
sbb
fwait
movsl
adc
push
mov
incl
test
jae
sbb
push
xchg
sbb
jge
mov
aad
fmuls
jne
lahf
add
orl
rcll
sbb
jno
or
cmpsl
dec
xlat
lods
insl
test
and
sub
shlb
mov
lea
mov
xor
mov
xchg
popa
dec
pop
jge
mov
mov
icebp
dec
adc
adc
fiaddl
test
imul
pop
sbb
jae
inc
shrl
push
mov
mov
imul
scas
insl
add
ja
and
sbb
adc
mov
push
xor
stc
or
adc
test
inc
bound
cmp
mov
adc
jae
mov
adc
dec
orl
inc
call
mov
ss
add
dec
mov
and
shlb
jns
rorl
pop
or
test
push
scas
lods
mov
push
push
inc
mov
push
mov
fidivl
inc
or
aaa
xor
mov
mov
add
lods
push
adc
nop
ss
rcrl
jge
pop
sub
daa
scas
and
cltd
fldl
push
insl
stos
popa
adc
stos
sbb
or
mov
mov
push
stc
insl
jne
mov
inc
adc
insl
dec
xchg
movsb
mov
popa
push
movsl
bound
call
dec
fwait
adc
push
adc
pop
mov
ffree
mov
sbb
in
inc
and
mov
add
or
or
mov
mov
repz
add
push
sub
and
inc
call
adc
roll
pop
sbb
cmp
repz
lods
scas
aad
add
sub
inc
aad
xor
push
mov
pop
inc
and
inc
add
popf
lods
or
sbb
push
xor
or
and
xor
xor
mov
xchg
mov
dec
imul
stos
and
out
or
or
adc
popa
fisttpll
jno
inc
imul
mov
nop
sbb
cmp
outsl
inc
inc
push
stos
movsl
in
adc
rcr
pop
pop
les
or
mov
jg
lods
mov
jg
movl
fistpl
iret
and
into
cmp
lods
arpl
add
and
lahf
push
int
adc
out
test
push
jecxz
pop
loopne
mov
push
jle
dec
adc
addr16
fcoms
jle
in
sahf
lahf
add
xchg
inc
ds
fsts
lret
lods
add
dec
sahf
jp
pop
mov
sti
int
inc
scas
sub
xchg
add
add
ja
subb
add
cltd
into
out
lahf
and
outsb
push
inc
out
insl
popf
shlb
and
and
out
mov
and
adc
mov
and
dec
mov
shll
jmp
add
xchg
xlat
mov
incl
cmp
add
mov
mov
xchg
mov
iret
imul
pop
pop
imul
out
test
and
adc
jecxz
mov
aaa
adc
fiaddl
and
adc
addr16
int
js
in
add
daa
push
shlb
movzwl
mov
shll
dec
repz
mov
insb
xchg
mov
ds
decl
mov
out
test
sub
aas
sti
cltd
int
sbb
or
add
xorl
out
aaa
xor
jmp
xlat
push
ds
inc
xchg
orl
inc
sbb
add
pop
out
add
add
pop
pop
insl
imul
test
ret
shr
ja
push
xlat
sbb
cmp
add
ja
sbb
mov
popf
fwait
and
in
inc
daa
pop
adc
and
cli
fucomp
das
xor
or
pop
testl
sub
xor
mov
adc
imul
and
and
push
sbb
and
adc
push
mov
jnp
adc
shr
addb
inc
lock
pop
xor
pop
daa
jo
adc
stos
test
sbb
push
jg
xchg
movsb
mov
sub
jbe
and
or
sub
stos
aad
xor
imul
inc
mov
adc
mov
addl
inc
or
cltd
jecxz
xor
or
rcll
inc
or
push
das
lahf
fcoms
xor
lret
fwait
adc
cwtl
loop
mov
xchg
sbb
sub
rorl
sub
test
xor
cmp
ret
test
in
out
ss
mov
sti
jecxz
sbb
jmp
push
sub
mov
sbb
cwtl
enter
popf
lods
add
or
mov
rorb
or
mov
mov
jmp
scas
ja
ds
out
xor
frstpm(287
xchg
xor
mov
pop
iret
mov
mov
inc
mov
fnstenv
mov
aas
loope
cmp
cmp
fisttpll
clc
aad
pop
sti
pop
xor
aaa
push
leave
add
lcall
add
inc
mov
sbb
mov
adc
or
lret
and
mov
and
jmp
roll
daa
push
jo
xlat
add
outsl
test
imul
mov
fldt
ja
arpl
mov
insl
outsl
pop
jmp
test
cmc
mov
adc
pmulhuw
mov
jnp
out
out
mov
xchg
sbb
add
dec
xchg
shlb
cmc
and
pusha
mov
mov
inc
add
mov
sbb
mov
push
addr16
ret
push
jnp
sti
push
push
cmp
sahf
pop
cmp
fsubrp
pop
cltd
cmpsl
sti
jbe
in
sub
cwtl
push
mov
pop
pop
je
add
mov
js
pop
ja
cmp
lods
pusha
add
aas
sub
outsl
xor
jno
add
add
lret
add
or
sub
ja
cltd
xlat
jge
cmp
add
dec
fs
or
fidivrs
sbb
and
pop
lods
mov
out
sbb
or
aam
sub
cmp
into
addl
les
cs
jg
pop
and
iret
mov
push
mov
movsb
aam
scas
cmp
sbb
pop
mov
adc
cmp
lret
jg
dec
lock
add
mov
mov
roll
fadds
jbe
fiaddl
mov
xchg
dec
pop
ja
mov
test
mov
mov
and
mov
dec
cmp
js
jl
iret
jle
mov
ds
jbe
cmp
dec
daa
sahf
add
stc
test
xchg
xor
gs
insb
xor
outsb
fdivl
add
mov
inc
addr16
add
add
in
fdivl
cmpsb
in
stos
add
mov
push
cmpsl
loope
cmpsl
mov
fistps
aaa
adc
xor
add
add
data16
or
sbb
clc
add
mov
push
add
add
jno
dec
xchg
cmp
add
mov
inc
rorb
mov
imul
movsb
pop
aaa
push
fsubrs
push
out
or
repz
mov
pusha
pusha
cmp
push
mov
bound
xor
xchg
lcall
pushf
cmp
iret
rcrb
push
xor
xorb
je
sbb
adc
push
adc
mov
adc
add
insl
sub
pushw
xchg
out
out
add
sbb
loopne
xchg
aad
lods
icebp
add
add
daa
or
jle
push
inc
xlat
iret
fstpl
rcrl
aas
rep
adc
lods
and
lret
push
jl
scas
add
addb
iret
adc
or
lods
jmp
lock
test
jno
inc
jg
insl
mov
xchg
xlat
data16
push
push
xor
add
and
pop
rcr
in
icebp
lahf
stos
jbe
insl
stos
inc
shrl
jp
mov
pop
je
je
dec
fmuls
xor
add
xchg
lcall
pop
sbb
push
ret
stos
cmp
mov
out
inc
jo
inc
adc
scas
add
scas
jp
inc
loopne
shll
push
cltd
fdivrs
fmul
outsb
adc
jle
stos
cltd
lcall
pop
add
test
adc
cli
xlat
xchg
inc
xor
lret
aas
sbb
fidivs
shrl
adc
iret
and
mov
xchg
push
out
mov
int
add
add
ret
out
sbb
fcoms
mov
rcll
iret
inc
inc
inc
test
cmp
rcrb
ljmp
dec
rolb
or
out
out
das
xor
imul
xchg
cwtl
or
and
popl
divl
dec
cmc
push
mov
pop
fists
adc
decb
inc
lods
cmp
inc
clc
ja
pusha
dec
sub
inc
xchg
lea
jl
push
pop
jmp
lods
dec
and
xchg
mov
mov
scas
lods
shlb
inc
cwtl
inc
fsubr
js
icebp
cmp
mov
jge
cld
dec
test
mov
fsub
data16
outsb
fmul
pushf
sub
insb
cmpsb
into
test
jb
pushf
pop
in
jno
pop
and
fildll
cmpsb
dec
xor
pop
cmpsl
fnsave
sub
adc
loopne
jo
je
test
and
fisubrl
mov
js,pt
push
fsubrl
stos
in
dec
stos
jl
mov
int3
cmp
in
les
fsubrs
adc
pop
in
out
pushf
cmp
adc
push
jmp
push
scas
fst
dec
les
rclb
fnstcw
jge
inc
movsb
lods
mov
sbb
or
push
cmp
push
add
loope
xchg
mov
inc
lods
bound
lods
push
fsubrl
mov
aaa
mov
jl
cmp
push
add
loop
dec
fsubl
ja
aas
sti
ds
add
cmp
inc
cmp
test
mov
js
xor
pop
stos
mov
andl
or
mov
mov
cmpsb
xchg
inc
lock
lods
mov
rcl
sub
cltd
xchg
loop
addb
sub
xor
adc
mov
push
xor
mov
ror
mov
inc
pop
add
push
fisubs
xor
dec
mov
arpl
and
fldl2t
and
mov
jecxz
lods
cli
sub
js
fldt
fsubs
and
pop
cmp
leave
sub
jge
jge
cmp
icebp
jecxz
int3
addb
scas
or
sub
mov
mov
das
cmp
scas
inc
push
jo
push
cltd
sub
xor
ljmp
shl
fldl
scas
inc
inc
dec
pop
add
inc
out
cmp
add
xchg
or
hlt
out
xor
pop
add
mov
jns
push
std
popa
pop
test
add
add
loope
mov
dec
in
fcmovu
out
or
pop
mov
add
push
mov
fs
add
add
mov
sbb
sahf
dec
mov
arpl
les
inc
fbstp
je
cmpsl
mov
jno
dec
iret
cmpsl
stos
lods
adc
adc
stos
sbb
fiadds
test
js
iret
addb
roll
dec
mov
cmpsl
push
or
xchg
stos
sub
lds
fnsave
mov
lock
decl
icebp
push
cltd
fcoms
dec
adc
jge
loop
push
frstor
leave
push
sahf
mov
add
or
out
es
jge
cltd
cld
pop
int3
jno
cmp
or
mov
loopne
leave
lret
ja
xor
mov
jnp
and
dec
push
dec
xlat
mov
jg
inc
and
dec
pop
xor
cmpb
out
or
rorl
or
or
add
cmp
call
and
push
adc
jo
jo
mov
scas
adc
xchg
xchg
scas
and
repnz
mov
inc
scas
add
lahf
pushf
and
iret
les
ds
mov
push
je
push
shll
or
das
and
adc
stos
int
and
pop
daa
jns
sbb
xor
repnz
test
xchg
dec
pusha
push
inc
sahf
add
bound
je
mov
call
inc
push
inc
fsts
jmp
imul
cmc
lods
add
lea
pop
je
inc
imul
fldcw
rclb
pop
in
je
icebp
lcall
cmp
xor
lret
mov
xor
les
add
inc
lahf
sub
or
rcrl
jp
clc
cmp
in
dec
xor
add
or
sbb
add
push
or
into
test
hlt
pusha
mov
add
fwait
sub
sbb
shrb
arpl
sbbb
xlat
cmp
cwtl
dec
aad
push
js
adc
or
aam
mov
dec
aas
rorl
adc
jne
mov
jge
cmp
or
jl
loope
or
dec
add
sbb
inc
test
addb
ret
xor
mov
pushf
cmp
inc
pop
in
sbbl
lcall
das
inc
rol
cmp
and
test
cmp
and
jle
dec
rcrl
ret
clc
cld
stos
jno
roll
adc
jnp
add
and
shl
mov
dec
into
jno
fsubrs
icebp
mov
aam
xchg
add
stc
inc
and
pop
add
es
mov
out
or
push
jbe
fdivs
xchg
test
popa
xchg
cmp
xchg
insl
in
jno
dec
imull
jne
pop
orb
aas
or
xchg
jp
lods
fists
mov
and
push
int3
dec
pop
gs
popf
pop
repz
add
stc
push
lahf
sarb
mov
movsb
std
fnstcw
stos
cmp
mov
loopne
aas
cwtl
clc
mov
or
shl
aaa
cmpsl
sub
mov
jg
roll
push
mov
inc
scas
xor
mov
or
iret
cltd
mov
adc
rcll
add
and
add
push
pop
or
mov
add
cwtl
push
hlt
and
mov
inc
sub
lods
addr16
and
push
add
call
lods
lods
aam
push
fists
ret
jo
xor
ss
jo
insb
pop
int
jbe
inc
jno
push
aas
lret
push
pop
cli
call
push
fsubl
sub
adc
pop
cmp
pushw
lret
sbb
and
es
or
movsb
cmp
ja
add
rcr
xchg
mov
ret
out
xchg
and
sub
mov
cmp
mov
pushf
cmp
fdivrs
ficoml
and
pop
pop
jbe
or
fmuls
xor
cmpb
push
jns
xor
xchg
inc
xchg
insl
dec
cmp
iret
add
xchg
mov
loope
lret
xchg
add
test
bound
lods
es
imul
insl
jb
fimuls
rcl
lock
sarl
add
daa
mov
pop
push
push
cmp
sub
sbb
mov
jo
aam
and
adc
jg
pop
js
fcomip
add
outsl
sbb
jg
mov
fidivrl
and
lock
orb
pop
mov
out
pop
sbb
clc
mov
lods
mov
in
push
and
pop
and
or
add
int
fisubl
sub
xchg
push
iret
adc
pop
adc
lret
movsb
out
das
push
out
shlb
fdivs
xor
shrl
iret
lock
pop
add
push
mov
fldt
iret
cmp
push
mov
notl
xor
push
out
scas
mov
mov
into
das
cs
repnz
mov
out
and
sub
loope
jle
add
add
insl
icebp
pop
scas
out
dec
mov
and
xor
ret
fistpl
mov
addl
dec
dec
dec
lret
leave
add
add
insb
ds
je
mov
pop
jle
jo
xchg
jge
loopne
imul
xchg
sbb
mov
in
push
cmpsl
push
jp
push
test
out
jbe
shr
mov
es
push
cmp
xchg
fwait
ja
outsl
jno
add
test
icebp
icebp
in
std
std
sub
in
pop
in
rcl
xchg
ja
js
mov
add
mov
push
lea
and
fstl
sub
push
inc
aad
and
insb
and
mov
outsl
imul
ja
dec
mov
push
loopne
pop
jb
mov
add
add
jle
cmp
incl
xchg
pushf
ja
sbb
push
loopne
push
and
ja
inc
or
pusha
sub
inc
cmp
pop
cmp
push
push
aaa
cmpsl
add
lds
or
in
add
pop
sub
and
cwtl
lret
adc
pop
xchg
push
int
popa
inc
lods
dec
into
add
add
add
dec
fdivs
andnps
adc
adc
jp
fcoms
add
cmp
adc
leave
sub
adc
iret
pop
std
push
cmp
mov
xchg
add
sbb
iret
cli
add
xor
mov
in
or
iret
and
mov
jne
jb
hlt
jne
cmpsl
sub
jmp
cmp
sarb
dec
test
cmovge
sbb
decl
cltd
sbb
iret
daa
incb
rcrl
pop
stos
xlat
gs
lock
and
mov
loope
adc
mov
lahf
pop
mov
test
jae
mov
sahf
adc
jne
popa
or
add
insb
std
dec
lock
or
pop
enter
mov
fldt
loopne
xchg
add
and
sbb
sbb
in
nop
pop
sahf
sub
scas
mov
or
sahf
notb
loope
inc
scas
add
mov
das
jno
inc
into
clc
lock
je
nop
pop
call
popa
imul
jbe
dec
dec
insl
push
cmp
enter
push
pcmpgtb
scas
hlt
sbb
mov
js
scas
jle
mov
lds
push
add
sbb
mov
mov
push
sti
xchg
add
scas
rcrl
inc
daa
fcomps
pop
int
call
lds
fsubrl
lahf
mov
ret
pop
or
jge
xchg
jb
add
push
inc
cmp
mov
mov
lahf
andl
sbb
push
sub
lock
or
sub
nop
adc
mov
inc
imul
xor
inc
jo
shr
lret
cmp
daa
push
sub
adc
lret
adc
imul
pop
jecxz
ret
cmp
xor
movsl
pop
mov
and
test
sub
adc
cmp
ss
popa
arpl
mov
xor
enter
outsl
loope
cmp
mov
cs
call
popf
fs
aad
rcrb
push
aas
cmp
add
mov
in
push
les
icebp
aaa
jnp
dec
inc
fdivr
call
add
mov
xor
test
push
insb
jno
outsb
fcoms
addr16
push
jbe
lret
hlt
cmp
mov
pop
push
push
fnstcw
pop
or
mov
mov
mov
cmp
mov
and
pop
lea
dec
fldt
mov
fs
int
mov
xchg
push
sbb
mov
popa
andb
das
in
cltd
push
dec
jl
iret
sbb
loope
mov
cmp
mov
or
or
flds
push
and
mov
sub
inc
mov
add
mov
dec
mov
pop
fwait
call
push
sub
lock
ret
mov
mov
nop
test
cmp
lret
sub
iret
push
mov
and
loopne
sbb
xor
es
adc
loop
pop
cwtl
sti
push
cmp
shl
imul
loope
and
in
push
shll
in
add
rorb
mov
xchg
out
rcll
dec
or
fsubrs
popa
jbe
iret
out
enter
pushf
pop
pop
mov
and
or
lcall
int3
aam
xor
insl
lods
daa
lret
cltd
addr16
clc
andb
jmp
loop
mov
xor
cwtl
pop
add
addr16
sar
mov
push
iret
in
stos
dec
pop
pop
loope
and
push
push
inc
mov
mov
call
cltd
sub
pop
ficoms
push
out
in
cld
into
cmp
out
lret
icebp
shr
loope
and
sahf
jnp
les
ret
ret
add
sbb
out
mov
add
lret
cmpl
pop
popf
ret
adc
lret
push
sub
pop
xor
sub
push
bound
or
test
sub
push
cmpsb
mov
aaa
mov
mov
mov
cs
aad
mov
int3
dec
test
mov
aas
and
pop
test
ja
cltd
xor
sub
test
cmpb
mov
add
addl
aas
call
jne
xor
stos
je
repz
int3
inc
test
in
cmp
shl
repnz
js
syscall
pop
mov
dec
fsts
inc
cmp
fstp
sub
sbb
call
int
push
ret
lods
or
notl
stos
test
pop
hlt
cs
sub
inc
cmc
jo
mov
sahf
in
cmp
dec
lods
mov
cltd
mov
or
jp
leave
hlt
into
mov
adc
jmp
fnstsw
out
xchg
pusha
es
test
dec
add
iret
shl
sbb
xchg
out
ret
xor
stos
mov
fldln2
xor
pop
fwait
lds
jns
scas
lahf
aaa
lock
xor
ljmp
scas
lds
cmp
add
shrl
inc
push
add
dec
pop
xchg
xlat
loopne
lea
cld
push
dec
inc
mov
rorb
ja
fcmovne
hlt
outsb
and
xchg
add
cli
push
sbb
ret
test
cmc
lock
inc
sub
sub
pop
adc
and
inc
and
xor
lock
int
push
iret
jbe
insb
shlb
pushf
daa
mov
xchg
sbb
or
push
das
cmp
fsubrs
imul
ds
lods
repnz
or
outsl
loopne
popf
mov
out
or
icebp
iret
aam
and
add
mov
or
cmp
mov
adc
xchg
outsl
and
add
jnp
push
hlt
lods
call
fisubl
mov
aaa
loope
mov
mov
shlb
and
pop
lea
adc
mov
push
push
ret
lods
and
cs
mov
lock
xchg
hlt
mov
testl
or
mov
sbb
js
lods
sub
jae
xor
pop
push
pop
adc
fsubl
or
xchg
cmpsb
ret
mov
icebp
in
cwtl
cmpsb
jnp
xor
stc
les
idivl
xchg
sbb
or
or
ret
fsubrl
mov
lds
jmp
fadds
lret
sub
test
sbb
push
rcrb
mov
and
testb
xchg
adc
js
inc
sti
mov
scas
imul
into
cmp
add
out
pop
int3
mov
leave
inc
add
int
stos
enter
test
push
mov
sarb
mov
adc
out
nop
or
xor
inc
stos
add
or
cmp
xlat
divb
mov
retw
adc
jbe
xchg
add
sub
xchg
push
xlat
add
or
fcoms
jo
js
xor
fisubs
cmpsl
adc
xchg
pop
or
adc
repnz
add
mov
out
sbb
je
dec
pop
cld
jmp
xor
xchg
mov
rclb
test
lods
and
stc
xchg
push
sub
cmp
jb
es
push
jb
xchg
lods
jno
adc
dec
pop
scas
sbb
ss
iret
cs
push
fs
sbb
or
shll
mov
cmpsb
and
sbbl
pop
cmpb
or
push
aad
xor
into
rolb
xchg
inc
shr
and
es
repz
repz
jns
mov
lret
add
xor
or
fdivrl
cmp
pop
sub
pop
pushf
xor
jge
dec
loopne
pusha
loopne
andl
xchg
jo
adc
pop
incl
mov
push
dec
mov
adc
xchg
loopne
add
pop
inc
js
daa
jl
sub
cmp
daa
add
addb
les
cmpsb
je,pt
pop
sbb
out
leave
ljmp
push
mov
xor
mov
hlt
or
jp
iret
xor
mov
in
push
inc
push
in
test
add
pop
js
xchg
shll
adc
inc
aam
sbb
add
inc
mov
push
push
jl
rorl
es
add
jne
mov
test
rorb
lds
data16
inc
dec
mov
and
in
test
fs
in
idivb
mov
lock
enter
mov
loope
btc
jmp
andb
cmp
jnp
popf
ss
or
scas
fmulp
and
xor
mov
mov
test
adc
or
mov
js
adc
push
cmp
dec
cmc
sbb
dec
jno
mov
aad
sub
xor
popa
cmp
in
lods
push
jg
lret
inc
ljmp
pop
les
cmpsl
stos
loopne
dec
lcall
stos
jbe
fs
scas
add
xlat
push
add
xor
in
cmp
adc
mov
sbb
jno
call
inc
xchg
xchg
cwtl
enter
and
add
in
or
mov
adc
mov
cmc
xlat
scas
sub
sub
mov
fildll
rol
dec
test
push
aam
repz
sub
add
es
cmp
hlt
es
das
sub
rcrl
pop
call
ret
jmp
aam
les
std
fcoms
lds
cwtl
jmp
add
sbb
nop
jns
adc
insl
ljmp
pop
jg
movntps
in
mov
aam
jb
jle
cmp
mov
jne
cs
fimull
mov
xchg
sbb
sti
mov
add
enter
adc
cmp
pop
push
or
dec
popf
add
lea
add
mov
lret
add
rorl
sbb
mov
mov
cmpsl
sub
sahf
lcall
ret
push
dec
mov
dec
mov
loope
pushf
out
lds
pop
das
scas
adc
mov
dec
adc
adc
inc
loopne
jbe
push
add
cmpsl
pop
add
daa
or
inc
lds
scas
movsb
in
mulb
push
lock
pop
int3
ret
xchg
clc
not
into
inc
sbb
scas
push
addr16
es
adc
jmp
cmp
xchg
cs
fiadds
xor
cmp
and
loop
or
cmp
in
add
xlat
add
jle
ja
fsubl
stos
loope
sbb
cmp
test
gs
fsubs
xchg
and
push
jo
jo
fbld
push
adc
aaa
jno
mov
fmulp
lahf
push
movsb
loopne
hlt
mov
iret
adc
scas
cld
sub
mov
movsb
inc
fildl
push
out
dec
mov
adc
call
inc
rclb
jl
cmp
and
mov
stos
movsb
loope
and
ret
pop
adc
xor
ret
xor
mov
jns
add
jge
sbb
stos
and
je
mov
lret
stos
add
sbb
or
addb
test
dec
stos
imul
lock
jnp
cmp
inc
pop
mov
scas
mov
je
xor
frstor
sbb
fwait
imul
cld
inc
add
xor
mov
ret
or
es
loope
lea
cmp
movntq
out
call
mov
mov
lods
mov
add
cmc
je
pop
cmpsb
fcompl
iret
insb
sbb
in
pusha
add
stos
and
sub
ret
inc
and
cmp
mov
cmp
ret
push
fcoms
add
ja
int3
adc
pushf
lods
addr16
push
ss
bound
mov
and
or
movsb
lret
int3
xchg
add
fisubrl
inc
icebp
mov
add
inc
ja
subl
fs
add
mov
pop
cmp
leave
cmp
add
js
mov
sub
jge
ja
rolb
adc
dec
insb
dec
aaa
xchg
out
cs
testl
movsb
fnsave
push
sub
es
fildl
sbb
fadds
and
mov
xlat
or
cmp
dec
aaa
popf
not
or
in
xlat
sbb
push
push
cmpsb
jbe
mov
inc
mov
mov
lahf
and
push
and
push
lock
cwtl
outsb
shlb
xlat
and
cmp
push
push
mov
ror
add
cltd
loopne
lods
mov
ss
loop
cmp
loop
roll
les
lret
loop
popa
lods
add
push
out
xchg
inc
stos
shl
sub
loopne
test
adc
mov
std
out
stos
jb
daa
sbb
jp
add
sahf
out
push
stos
pop
mov
adc
or
jmp
add
clts
pop
in
fadds
outsb
jmp
cmpsl
sbb
loop
into
lods
lret
sbb
jg
inc
fs
and
mov
mov
adc
push
aas
rolb
test
cmp
out
mov
push
aas
inc
inc
lea
ljmp
ret
pop
popf
sub
rcr
int3
xor
dec
ret
ret
sub
loop
lret
rorb
inc
pusha
sbb
clc
push
fsts
call
clc
lods
lcall
aam
add
popa
add
arpl
out
cli
cmpsb
xchg
aam
cmp
pop
mov
test
mov
add
push
xchg
mov
inc
leave
lods
scas
and
lods
mov
mov
jecxz
add
jne
jp
enter
and
insb
add
inc
rol
mov
mov
push
or
ja
xlat
dec
das
sub
inc
cmp
call
inc
aam
push
cmp
ss
sbb
out
loop
jne
xor
inc
jle
add
add
inc
dec
loopne
inc
cmc
mov
cmpps
es
es
mov
mov
push
sub
xchg
daa
jmp
popa
jecxz
adc
aam
test
rol
pushf
sub
daa
mov
roll
fs
enter
dec
or
shrl
xchg
and
xor
pop
jo
push
jo
cmp
adc
xorb
movsb
xor
push
imul
ret
bound
adc
stos
call
add
ret
mov
in
jmp
dec
add
push
jae
pusha
lock
loop
int3
jl
adc
jp
imul
sub
sub
sti
rcll
add
lcall
mov
xor
movsb
inc
fdivrs
movsl
sti
pop
into
mov
push
mull
hlt
and
jl
aam
mov
xchg
dec
std
pop
mov
iret
mov
shl
es
movsb
movsb
mov
adc
mov
leave
jecxz
inc
loopne
lcall
cmpsb
pop
or
sub
sub
jo
xorl
fdivs
cmp
add
mov
jle
in
inc
jg
fsubs
lret
push
leave
and
cmpb
ror
dec
jb
rcrb
repnz
loope
test
fdivrl
roll
jae
repnz
outsl
lods
xlat
lods
xchg
add
pop
jnp
call
das
aam
sub
pop
sub
push
jo
mov
add
sub
jmp
clc
movsl
test
and
loope
psrad
ror
add
xchg
rcr
xlat
or
xor
jl
push
pop
xlat
mov
icebp
and
rcrl
idivl
jl
popl
push
inc
jne
rcrb
or
cld
inc
lods
push
pop
jl
xchg
add
fimuls
mov
into
je
pop
in
enter
pop
mov
test
gs
push
andb
jnp
push
add
sub
push
inc
push
push
fidivrs
mov
mov
sar
sub
cmp
jecxz
scas
dec
jle,pt
ror
inc
or
mov
sbbb
pushf
lock
xor
mov
pop
adc
xlat
iret
lcall
push
mov
les
data16
loop
push
and
inc
leave
xchg
push
inc
popa
mov
adc
cld
and
iret
loopne
jnp
loopne
and
leave
and
adc
andb
jbe
adc
mov
mov
stos
add
in
and
adc
or
cmp
movzbl
jo
test
into
dec
push
jmp
pop
mov
ret
sbb
imul
ss
ficoms
xor
cmp
xor
pushf
stc
cmp
jmp
xchg
fidivrl
xor
mov
les
or
icebp
and
aad
or
iret
es
in
mov
sub
pop
add
cmp
js
jle
les
ret
out
js
movsb
add
push
std
adc
daa
lahf
or
sahf
lock
xor
inc
or
push
inc
pop
movsb
clc
out
xor
mov
jo
jl
mov
pop
sub
cvtpi2ps
add
int
jge
test
aam
pop
popf
subb
adc
cli
int3
jp
lock
movb
sub
out
imul
push
test
movsb
add
dec
filds
pop
mov
jg
and
jmp
iret
cmp
add
cmp
pop
mov
push
sahf
or
jge
push
movsl
xchg
push
or
add
dec
dec
es
adc
in
pop
adc
xor
pop
add
inc
imul
push
out
mov
div
adc
add
jg
add
sbb
lret
iret
dec
add
test
cmp
pushf
scas
jb
lods
xchg
lods
int3
test
jecxz
sbb
out
test
movsl
scas
lods
das
out
mov
addr16
and
test
fnsave
jle
mov
xchg
scas
loope
sbb
ret
add
or
xchg
jbe
jecxz
push
out
stos
jecxz
repnz
insb
dec
xlat
push
shrb
vmaxsd
mov
xchg
and
or
add
pushf
imul
sbb
sub
push
cmp
outsl
andb
inc
neg
lret
pop
shlb
dec
hlt
cld
jnp
adc
in
add
loop
std
mov
outsb
addr16
pop
jg
dec
mov
insl
iret
add
or
adc
push
push
stos
scas
push
insl
xchg
jno
shrl
jne
mov
lret
lret
adc
or
jno
xchg
adc
sub
adc
test
jl
and
cmpsb
pop
or
push
out
popa
stos
lds
scas
lds
mov
sbb
cld
jecxz
push
lret
iret
xor
and
xchg
sub
ret
pop
loope
cmp
loopne
insb
mul
repz
lahf
outsl
xlat
lods
jl
cmp
jae
mov
adc
lods
test
out
xor
sbb
jbe
ret
lahf
xor
inc
mov
fdivp
stos
lea
sbb
add
andb
sub
mov
outsl
imul
pop
jnp
cmp
adc
push
rcll
or
and
int3
les
jle
outsl
popf
cmc
xchg
sub
and
jg
pop
leave
jnp
sub
jb
push
lahf
int
movsb
sub
sbb
subb
fisttpl
ror
or
or
jo
daa
and
push
loope
and
mov
sbb
inc
pusha
jae
outsl
sbb
fdivrl
sbbb
int3
jmp
inc
shl
sub
and
jmp
and
out
and
fs
adc
scas
and
popa
add
lock
xor
fadds
ret
insl
xor
iret
fs
push
push
add
adc
xchg
dec
sub
jecxz
and
outsb
ss
xor
mov
mov
pusha
inc
push
test
mov
push
and
movsl
call
adc
fisubs
cmpb
and
pop
jnp
scas
fisttpl
rorb
cwtl
cwtl
daa
mov
shlb
lock
out
xchg
add
lret
out
mov
push
outsb
icebp
adc
rorb
int
pop
std
dec
fs
mov
and
mov
xchg
stc
xchg
div
lret
scas
cmp
and
mov
add
loop
push
push
jae
inc
loop
les
mov
push
subl
fisubrs
inc
dec
arpl
cltd
mov
cmpsb
in
mov
dec
dec
pop
imul
mov
xchg
jb
cltd
pop
jmp
fistps
cmp
adc
push
add
ret
mov
mov
fisubrl
mov
pop
jno
loope
cmovns
aam
dec
rcll
std
or
rorb
cmp
rcrb
lods
call
les
mov
adc
dec
loope
movsl
ss
out
mov
int3
daa
xchg
or
out
roll
pop
push
jo
jnp
lock
xchg
mov
jl
fcoms
daa
pop
pop
or
imul
xlat
movl
or
jo
mov
rcll
push
js
dec
push
mov
xor
xor
or
dec
sub
pop
push
and
fsubs
cs
or
cmp
sub
mov
movsbl
mov
in
inc
add
push
dec
sbb
or
pop
dec
cmpsb
jecxz
out
mov
popl
mov
push
cmp
adcb
loop
cmp
mov
xor
or
mov
inc
and
xor
pop
cmp
pusha
sbb
sub
sbb
shrb
mov
pop
shlb
aad
out
aam
pop
cltd
subl
sub
pop
dec
add
ret
pop
sbb
fimuls
sub
insl
dec
jmp
push
cmp
adc
lods
mov
ret
cld
cmpsb
mov
sbb
ret
test
and
daa
xchg
inc
ficoms
cli
cmp
push
dec
adc
jmp
fldl
and
daa
inc
mov
sbb
loope
or
loopne
lds
loope
lods
mov
lock
icebp
fucomip
loop
incl
cli
sbb
cmp
fists
pop
pop
cmp
sbb
popa
fs
sbb
sbb
aad
sahf
mov
or
mov
idivl
sti
mov
jne
dec
and
mov
test
or
xchg
push
testl
push
sbb
lods
jo
lcall
in
add
push
xchg
dec
pop
sub
push
lret
outsb
les
mov
dec
pushf
and
push
sub
loopne
je
ds
bswap
jg
cmp
and
arpl
jmp
xchg
stos
aam
mov
or
je
or
test
and
into
or
cld
enter
andb
push
sbb
fldenv
sub
loope
into
lock
lret
addl
sahf
aam
or
test
out
lcall
xor
inc
inc
insl
sub
pop
push
movsl
xorb
sbb
cli
adc
xchg
mov
adc
mov
cmp
xorl
mov
stos
dec
add
stos
pop
push
jl
xchg
mov
lcall
cmp
pop
lret
pop
mov
jmp
jb
inc
sbb
inc
adc
cmpl
jmp
das
mov
mov
andb
jle
orb
jno
and
cmc
call
adc
mov
test
mov
movsb
xchg
ret
fwait
mov
or
mov
sbbl
clc
mov
fdivl
pop
enter
scas
xchg
pushf
ret
popa
je
xchg
xor
xchg
jne
orl
push
rolb
fucomi
andb
aas
cmp
add
dec
das
add
pop
or
sti
mov
adc
push
iret
mov
xchg
mov
or
loope
add
sbb
pushf
js
cmp
dec
dec
aaa
mov
dec
insl
test
test
ja
stos
jo
and
xchg
jmp
sti
add
lahf
cmpsb
push
mov
bound
mov
jle
jle
shrb
xchg
aam
mov
aaa
lret
jo
push
dec
test
mov
fnsave
push
imul
xchg
pop
sub
icebp
or
inc
aas
hlt
push
and
cwtl
int3
inc
add
jmp
or
les
call
sub
popa
sub
or
mov
stos
mov
gs
xor
cs
and
loope
and
not
popf
inc
dec
inc
sbb
inc
mov
aad
int
nop
mov
mov
enter
mov
dec
lret
int3
mov
push
int
mov
je
cwtl
mov
cmp
iret
xlat
jmp
push
sbb
gs
das
arpl
iret
iret
jmp
lock
xor
dec
mov
mov
jmp
lds
inc
push
aam
imul
out
test
ljmp
idivl
inc
or
out
sahf
mov
sbb
addb
je
outsl
shl
lock
xchg
inc
or
fwait
sub
sbb
adc
push
inc
insl
subl
stos
xchg
xchg
repz
ds
add
out
icebp
fnsave
dec
or
inc
inc
mov
mov
pop
stos
and
out
sbb
dec
cwtl
lods
push
stos
mov
xchg
dec
push
mov
xchg
int
mov
test
jo
push
dec
mov
sub
mov
pop
popl
pusha
enter
dec
push
pop
movsl
add
xor
add
mov
test
daa
xor
mov
nop
mov
mov
outsl
adc
cmpsl
dec
cmp
scas
data16
inc
stos
mov
sbb
loope
xchg
mov
mov
xchg
js,pt
jmp
pop
in
xor
cmp
test
pop
lods
inc
push
into
dec
mov
push
insb
xchg
sahf
push
pusha
push
sbb
sbb
inc
xchg
inc
cmp
cs
dec
mov
or
mov
js
shll
fstps
jo
pushf
and
dec
cmp
sbb
rcll
lods
xor
pusha
scas
push
ljmp
fsubrs
push
js
cwtl
mov
movsb
orb
shrl
cmp
adc
aam
and
cli
pop
push
inc
rcrl
inc
cs
cltd
test
sbb
aam
imul
ds
lret
imul
adc
stc
or
dec
fwait
sahf
andb
mov
inc
jns
mov
fisttpll
aaa
pop
mov
or
stos
nop
mov
outsb
call
ret
sbb
sbb
xlat
jae
pop
add
or
mov
addl
and
adc
es
rorl
or
or
mov
cs
mov
inc
push
rorb
add
sbbl
popa
es
addr16
sub
xchg
jmp
mov
fsub
fmull
iret
xchg
nop
enter
sbb
sub
cmp
sub
cmp
ret
pop
test
push
es
xor
cmc
inc
lods
inc
test
jecxz,pt
mov
sub
lret
negl
test
stc
mov
repz
xor
test
mov
jne
push
dec
testl
push
faddl
pop
sbb
pop
cli
push
test
mov
popa
adc
orb
andl
andb
pop
cmpsb
or
movsb
inc
fwait
icebp
push
xchg
dec
inc
lods
sub
fisubrs
mov
pop
subl
addr16
aad
inc
lcall
push
mov
sub
and
loopne
and
sub
pop
out
cmp
inc
adc
push
and
xchg
rcrl
outsb
mov
adc
dec
pusha
mov
mov
icebp
gs
aas
mov
xchg
fcoms
mov
ja
test
and
push
xchg
lds
add
adcb
add
adc
std
mull
rcrl
pop
xchg
jne
bound
and
arpl
pop
test
addr16
iret
or
pop
call
pop
rorl
js
cmp
lds
and
add
outsb
scas
sub
les
test
push
jp
adc
add
and
jno
dec
std
inc
or
xchg
addr16
das
ret
pop
mov
dec
scas
and
fisubs
inc
dec
std
sahf
movsl
ja
cmc
jne
inc
jo
jmp
jo
adcb
mov
pop
call
pop
lea
and
gs
das
dec
mov
inc
pushf
jmp
inc
addl
fisttpll
sub
push
and
mov
mov
xchg
sti
sub
dec
in
aam
dec
push
xchg
das
roll
jecxz
jle
rep
inc
test
and
cli
clc
cmc
add
jno
lock
xor
test
pop
out
pop
loopne
cmp
fadd
mov
das
sub
testb
jmp
ret
add
icebp
or
aaa
jo
jl
imulb
dec
sub
or
pop
add
cltd
mov
add
mov
push
out
dec
jecxz
bound
xor
dec
pop
add
xor
or
icebp
sub
cmpsl
jne
les
pop
jbe
or
sti
mov
mov
fsub
mov
jb
and
leave
adc
add
in
test
inc
fldl
xchg
rclb
sbb
pop
jp
rcrl
cmp
aam
in
xchg
sub
fcoml
fbld
lods
and
push
dec
sbb
mov
mov
mov
out
add
mov
aad
fwait
mov
xor
loopne
out
aam
xchg
iret
sbb
adc
xchg
mov
xchg
fstps
inc
sub
leave
pop
lahf
ror
jle
jbe
out
sub
add
gs
imul
loop,pt
sbb
in
scas
aam
loopne
lahf
inc
gs
loopne
mov
into
or
add
inc
arpl
jge
out
xor
xor
lods
xor
iret
test
pushf
ret
jbe
xchg
fistpll
jo
jg
sbb
adc
aaa
or
adc
xor
pop
rclb
hlt
push
and
mov
pop
xchg
movsl
icebp
test
or
pop
es
ret
xor
or
lea
push
push
xor
sbb
push
sbb
cmpsb
leave
or
ss
das
test
ss
ja
filds
out
mov
push
inc
sbb
jle
lods
mov
dec
push
adc
mov
xor
sbb
xor
clc
adc
cmp
dec
jp
out
inc
dec
ret
add
sbb
pop
jl
mov
jecxz
sub
add
add
or
sbb
fisttps
aad
movl
add
or
push
shlb
jo
mov
mov
xchg
dec
sahf
das
ss
dec
int
lock
xor
sbb
cmp
imul
movsl
sbb
dec
inc
loope
add
dec
pop
dec
pop
sbb
loopne
fsubs
push
xchg
jg
push
push
in
jmp
sub
push
xor
jecxz
or
and
js
imul
push
jns
outsb
ljmp
add
jecxz
xchg
int
fadds
inc
dec
sbb
addb
cmp
dec
xor
fsubs
cmpsl
sub
pop
ljmp
and
ret
rcl
or
pop
mov
dec
or
sbb
jge
sbb
das
notb
ret
movsb
out
fdivrs
lock
cmp
sbb
cltd
jl
or
cmp
mov
adc
and
sbb
fcoms
pop
jns
outsb
sbb
and
scas
in
pop
mov
popf
das
pop
dec
sahf
jo
shll
xchg
in
pop
pop
fsubl
fsqrt
cmp
mov
pusha
push
hlt
and
icebp
mov
jge
or
pop
jl
sbb
xchg
test
mov
fisubs
jb
jg
add
inc
cwtl
insb
adc
bnd
push
mov
sub
popa
jns
pop
cmc
sub
sub
je,pn
pop
int
loope
cmp
mov
and
jo
inc
notl
repz
jnp
push
inc
sbb
sub
outsl
pop
adc
into
test
js
cmp
icebp
shl
js
jecxz
push
sahf
lahf
into
xor
loopne
out
das
int3
and
jg
dec
leave
sbb
jecxz
cmp
or
lds
sub
and
bound
add
cmp
iret
cld
or
mov
rorb
xchg
stos
aaa
adc
es
inc
inc
cld
test
push
repnz
lods
sbb
xor
push
or
mov
xor
fdivs
jnp
mov
sub
mov
cmp
push
stos
das
mov
xchg
inc
xor
add
in
testl
adc
insl
pop
sub
addr16
stos
dec
adc
dec
sub
std
testl
dec
mov
lea
dec
sub
add
sub
loope
or
neg
or
ret
arpl
pop
inc
stc
pop
jno,pn
and
mov
loop
sub
add
call
mov
pop
and
clc
jmp
movsb
fwait
adc
cmpl
mov
in
leave
mov
dec
cmp
cmp
ds
test
pop
add
jnp
adc
push
jecxz
lret
inc
and
xchg
in
loopne
add
icebp
rol
test
stos
into
push
jo
sbb
fdivrl
mov
aam
test
mov
inc
addb
test
jo
cmp
mov
test
lods
and
into
inc
push
jp
push
jnp
bound
cmp
mov
mov
pop
mov
add
or
or
mov
inc
add
jno
xchg
or
lahf
adc
jle
push
pop
movsb
mov
test
sahf
icebp
sub
ja
or
out
aaa
fs
pop
test
lcall
sub
cmp
or
int3
pop
dec
lret
mov
js
enter
les
adc
pop
test
sbb
sbb
ror
sbb
sub
push
push
add
bound
dec
inc
shlb
push
jbe
leave
jmp
add
pop
inc
sti
push
sub
push
cmp
push
add
push
dec
js
jbe
pop
cld
add
push
push
add
and
sti
push
jo
cmp
xchg
jne
or
mov
arpl
das
mov
iret
jno
sbb
and
add
mov
loop
xor
mov
out
aaa
add
inc
add
insb
jge
faddl
dec
mov
stc
pop
icebp
roll
jno
or
leave
and
fstps
mov
push
loopne
jo
pop
fldenv
out
push
xchg
fisttpl
ss
sbb
sar
insb
cmpsb
push
pop
add
dec
mov
push
inc
andl
insb
lea
lock
mov
mov
in
add
jo
mov
imul
mov
sub
icebp
lds
mov
xor
and
xor
mov
bound
add
push
jb
xchg
nop
iret
pop
and
xchg
call
dec
iret
adc
clc
and
inc
rorl
lods
pop
les
daa
mov
inc
jne
push
push
or
xor
sbb
add
add
out
mov
ljmp
push
cmp
sqrtps
or
mov
mov
dec
in
loop
repz
dec
aaa
sbb
inc
xor
push
or
lea
les
and
jo
push
es
lahf
mov
mov
pop
pop
stos
movsl
pop
and
addl
mov
push
adcl
daa
xor
pop
push
push
xor
test
pop
loop
nop
sbb
or
out
xor
push
xchg
push
call
popl
mov
cli
xchg
mov
call
loopne
push
pop
test
xor
push
aaa
or
gs
mov
sbb
cmp
jmp
adc
cmp
or
out
lods
loop
push
roll
stc
rcrb
adc
mov
shrl
popf
sbb
daa
cmpsl
xchg
shlb
rcll
push
jmp
add
sub
cmp
inc
jmp
shlb
stos
mov
mov
test
cmp
add
js
iret
push
push
and
or
xor
fsubs
js
mov
sbb
dec
jmp
xchg
dec
fiadds
mov
xlat
pop
loopne
mov
mov
lcall
and
cmp
add
push
mov
jns
pop
jp
dec
xor
pop
subb
inc
fisubl
loopne
es
jno
lds
dec
cmpb
movsl
push
and
les
xor
pop
adc
or
lahf
inc
and
shlb
jne
pop
mov
jo
mov
loop
les
pop
cmc
mov
or
outsb
arpl
push
sub
out
test
jge
lret
negl
pop
int
dec
push
sbb
jnp
lret
adc
and
int3
cmp
and
adc
pop
out
dec
daa
ljmp
adc
cmpsl
sti
add
cmp
adc
ror
pop
mov
xor
and
add
add
or
stos
push
sbb
inc
repz
es
mov
das
lahf
xchg
insl
sbb
xor
sti
add
mov
loopne
xor
pushf
sub
iret
repz
push
dec
jl
jne
scas
test
cmp
daa
pop
add
repz
add
xchg
or
pop
fdivs
jmp
jl
das
iret
repz
fiadds
pop
sti
int3
mov
xorl
rorl
out
and
or
adc
add
push
adc
xor
pop
adc
pop
loopne
cld
ljmp
out
push
into
sub
sbb
cmp
mov
aam
dec
bound
inc
or
sbb
test
fwait
sti
pop
aas
xchg
call
out
data16
xor
or
shll
lret
mov
lock
cmp
add
cmp
and
push
jae
sbb
cmp
sub
mov
mov
nop
pop
ljmp
sbb
inc
jg
cmp
repz
adcl
testl
out
sbb
push
mov
pop
stos
in
push
aas
arpl
mov
jp
push
lahf
fs
mov
hlt
sub
and
lcall
mov
adc
fdiv
pop
movsb
aaa
push
cmp
outsb
int
sub
add
and
cmp
aad
xor
ficoml
jp
mov
dec
sbb
cmpl
push
sbb
add
roll
cmp
jae
pop
aam
adc
mov
outsb
and
xchg
adc
push
and
aad
call
cmp
xlat
xchg
and
pop
mov
popa
aam
xor
dec
mul
dec
dec
jnp
nop
pop
add
jp
in
es
roll
jge
mov
add
jne
fnsave
fcomps
sub
push
cs
adc
mov
sub
jb
or
add
jo
jge
adc
popa
add
fwait
out
adc
push
xchg
xlat
xlat
popa
jle
adc
inc
add
lods
shlb
or
add
mov
mov
aad
cs
fcom
add
dec
out
out
push
iret
inc
inc
jbe
aam
jl
cmp
add
sbb
cs
inc
mov
cmp
lods
pop
andb
adc
mov
jge
out
add
mov
mov
add
xor
cmpsl
adcb
add
add
imul
fidivrl
insl
jle
cs
or
js
pusha
mov
movsb
xchg
into
mov
mov
and
lods
rcl
adc
jo
das
popf
add
cs
out
dec
mov
add
ds
and
xor
pop
data16
adc
xor
push
pop
data16
out
xchg
hlt
push
cs
sbb
shlb
inc
push
xchg
mov
adc
imul
cmp
fdivrs
add
daa
daa
add
iret
call
stos
sbb
jle
cmpsl
adc
imul
add
adc
pop
push
dec
mov
lret
dec
add
inc
xor
in
pop
cmp
dec
xchg
cli
push
cmp
aad
or
bound
in
sub
add
adc
mov
mov
dec
push
add
popl
mov
test
ja
lods
mov
dec
arpl
lea
jnp
inc
sbb
hlt
add
daa
aam
xchg
test
or
xchg
push
dec
jo
mov
pop
sbb
add
into
lcall
dec
inc
mov
outsl
xorl
dec
ds
pop
lahf
ss
les
sbbb
in
jae
cmp
rcl
fistpl
pop
iret
pop
sub
sti
xor
xchg
icebp
cmp
lds
sahf
outsb
aam
pop
mov
or
add
loope
and
xor
push
cmp
icebp
inc
or
mov
xor
sbb
add
divl
arpl
iret
aas
test
or
cmp
pusha
or
sub
iret
or
xchg
or
dec
loope
in
dec
fildl
lahf
cmpsl
dec
incb
daa
loope
cld
cmp
or
sbb
adcb
sub
add
pop
jp
and
jle
out
dec
stos
outsb
mov
push
cltd
push
xor
dec
gs
dec
inc
jle
arpl
subl
rol
xchg
inc
pop
push
popf
mov
ret
test
fsts
rolb
aas
xor
out
inc
jno
iret
add
mov
inc
mov
imul
mov
popl
shlb
loopne
jmp
push
dec
test
add
shl
ret
add
sbb
adc
fldln2
xchg
jb
test
les
fwait
xchg
sbb
mov
jnp
jnp
mov
rorb
mov
add
xor
fldl
xor
inc
jae
add
in
or
inc
sbb
xor
sarb
mov
bnd
xlat
sbb
add
stc
jo
ja
pop
mov
in
push
scas
fistpl
mov
push
jp
push
xlat
sub
scas
jg
pop
push
lods
ret
push
dec
hlt
add
add
lock
push
das
lahf
jp
loopne
adc
mov
lods
filds
adc
push
pop
or
adc
mov
lock
repnz
jg
jbe
js
inc
mov
std
jmp
inc
sub
xorb
je
pop
fwait
inc
push
bound
add
cmp
jo
xchg
pop
jmp
ret
fisubs
ds
outsl
jno
not
sbb
cmp
call
pop
pop
pop
lock
jne
fstp
push
dec
shrb
sbb
hlt
dec
pop
add
fsubr
sbb
adc
out
or
cs
je
test
add
add
mov
push
push
xor
lea
xchg
scas
div
iret
and
ja
in
inc
dec
jmp
es
mov
mov
outsl
imul
xor
rol
lea
out
pop
ds
ret
mov
push
push
xor
aad
jo
xor
negl
call
insl
mov
and
adc
mov
jo
add
mov
fstpl
add
iret
sbbb
xchg
hlt
test
xor
mov
mov
sub
dec
je
loope
lods
insb
mulb
mov
rcrl
popf
push
push
sub
sbb
je
dec
mov
sbb
inc
add
mov
lods
cli
cmpsb
dec
jp
lahf
jno
cmpsb
cltd
jge
mov
sbb
iret
pop
fucom
inc
fcomps
dec
js
jnp
jecxz
or
das
ja
lret
or
mov
cmp
push
mov
jne
sbb
pop
cmc
mov
mov
xchg
outsl
mov
and
push
push
sub
push
pop
stos
inc
adc
dec
add
test
iret
les
inc
inc
xor
sbb
mov
cs
jne
cltd
je
into
aaa
add
test
lods
mov
jmp
mov
dec
orb
and
ja
mov
xor
pop
add
sarb
mov
test
out
loopne
insl
sub
xlat
cmp
adcl
scas
mov
jae
add
xchg
pusha
popa
push
adc
jl
or
pop
rolb
jne
pop
lea
jmp
xor
or
xor
adcl
mov
cli
xor
mov
push
add
fidivrs
imul
das
jecxz
sub
ret
outsb
imul
rcr
sbb
into
and
and
xlat
mov
pop
jno
mov
push
dec
loopne
xchg
rorb
rcll
mov
scas
cmp
lods
mov
data16
push
jle
into
clc
sbb
aam
sub
iret
aas
add
loopne
mov
xor
jge
rorb
sbbl
movsb
mov
and
out
test
adcl
mov
loopne
xchg
sbb
popf
mov
sub
inc
out
mov
add
add
xchg
xchg
pop
add
xchg
inc
cmp
xchg
inc
loopnew
push
push
je
cmp
and
scas
adc
loope
and
cmp
and
sbb
mov
sub
loopne
outsb
das
sub
adc
test
add
adc
mov
mov
fdivrl
add
xor
mov
fidivl
ret
stos
push
mov
push
adc
or
pusha
mov
add
mov
iret
jnp
adcl
imul
mov
jo
call
test
dec
dec
lret
mov
mov
test
add
es
les
fcompl
jne
mov
icebp
pop
mov
adc
sbb
inc
mov
xchg
add
jo
loop
dec
insl
mov
clc
xchg
dec
jecxz
push
shlb
jle
sbb
into
lcall
sbb
icebp
test
adc
pop
aas
subl
add
adc
push
mov
arpl
popf
push
movsb
xchg
mov
in
cmpsl
lock
add
cli
jae
adc
inc
iret
jmp
rcll
in
lock
testl
xor
mov
jp
fistl
pop
dec
sub
scas
xchg
dec
loope
mov
push
repz
xor
pop
sbb
add
cmp
sarl
xor
roll
daa
push
add
or
jg
ja
pop
bound
test
sbb
jle
insb
rorb
jp
sbb
adc
stos
rcrb
xor
sahf
pop
stos
push
mov
movsl
lock
sub
sub
push
sub
loop
or
rorb
adc
add
andb
jo
cmp
sub
inc
jnp
int3
sbb
sub
cmp
clc
jae
repz
or
fcomp
pop
add
loopne
cmp
loop
addl
js
movsb
pop
sti
aaa
or
mov
sbb
iret
and
pop
push
cmpsb
push
inc
xor
daa
sbb
outsl
sbb
sbb
push
das
aam
rcr
cmp
xchg
xchg
pusha
push
xor
xor
jno
and
dec
and
mov
cmp
ffreep
test
js
cltd
or
cmp
ret
adc
push
icebp
into
pop
jbe
push
in
fsubr
pusha
adc
or
or
daa
int3
ja
or
sarb
jg
call
xchg
adc
mov
testb
ja
mov
sti
loop
pop
out
clc
bound
adc
aam
push
mov
jae
xchg
fldl
fld
mov
pop
or
push
xchg
es
inc
mov
add
pop
sbb
xor
sti
mov
js
add
xor
fiaddl
ss
aam
sti
rcl
adc
psubsw
test
add
add
and
add
jne
inc
leave
push
xchg
inc
rcrl
and
adc
cmp
mov
sbb
subb
xor
int3
sti
jae
add
cmp
add
or
sbb
ret
iret
rolb
sub
xor
dec
or
xchg
test
loopne
mov
push
sbb
push
adc
xor
pop
daa
daa
cltd
hlt
inc
fiadds
mov
xchg
sahf
sbb
subl
cld
gs
sbb
loopne
fcomps
xor
sbb
test
add
movhlps
shlb
xchg
or
xchg
out
daa
xor
sysret
xchg
xchg
xchg
adc
lds
or
adc
aad
lods
decl
test
mov
into
xchg
mov
dec
iret
mov
sahf
stos
addr16
bound
adc
jmp
push
sbb
or
or
add
push
ds
clc
aas
push
fbld
loope
mov
lock
pop
push
rolb
lea
movsb
call
sub
xchg
insb
idivb
pop
and
test
add
insl
in
movsb
je
pop
pop
xchg
daa
add
sbb
fadd
ret
cltd
jo
sbb
sbb
sbb
mov
faddl
lods
add
je
add
stc
cmp
das
sti
test
cwtl
in
cmpsl
inc
jp
xor
inc
cld
dec
in
or
adc
movsb
inc
adc
fbstp
xchg
cmpsb
pop
andb
add
ss
add
pop
movsb
ja
test
ret
dec
jecxz
mov
sub
and
ljmp
sbb
enter
push
push
xor
sbb
dec
lds
push
push
fsubs
loopne
stos
adc
inc
sub
jp
push
push
cs
iret
mov
pop
or
cmp
in
aad
outsl
cld
adc
mov
js
pop
int
and
pop
adc
nop
mov
xchg
xor
loopne
iret
xor
xchg
mov
dec
xor
sub
mov
clc
popa
jnp
jo
in
ja
stc
cmp
in
int3
sahf
add
aaa
cwtl
sti
jo
into
idiv
lahf
pushf
ret
mov
jb
jno
dec
xlat
dec
mov
sbb
pop
cmp
cltd
outsb
xor
cmpsl
rcrl
push
xchg
iret
and
xlat
rcl
movsl
mov
mov
mov
mov
testb
pop
lret
push
fistps
sahf
mov
fbstp
dec
mov
in
lcall
mov
outsb
or
add
shll
adc
add
addl
adc
and
cmpsb
lret
lret
outsl
sbbb
pop
adc
lahf
mov
mov
dec
push
test
and
jge
mov
adc
dec
js
sahf
lea
sbb
mov
in
sub
out
daa
mov
sbb
les
or
push
inc
in
and
jmp
cmp
push
into
mov
xchg
add
imul
pop
scas
movsl
ja
mov
ljmp
or
add
sbb
std
test
sbb
shrb
cmp
andl
fld
add
and
mull
pop
and
fstl
cmp
push
lret
ret
mov
call
lods
fcom
push
inc
sub
in
dec
or
loope
cmp
pop
pop
mov
clc
pushf
rcrl
or
push
lcall
jg
ficompl
mov
mov
jae
and
bound
and
paddq
mov
cmc
xchg
or
dec
stos
popf
pusha
aam
dec
insl
sahf
sbb
pop
cmc
faddl
scas
or
lea
xorb
movsl
lock
movsb
add
and
xor
lds
test
mov
cmp
insl
pushf
inc
cmp
out
repnz
mov
cs
sbb
testl
mov
mov
jo
ret
push
insb
cmc
iret
in
add
cs
icebp
xlat
or
lock
xor
xchg
jge
sub
adc
das
jbe
ret
or
add
mov
shrb
add
adc
loopne
lcall
cli
jecxz
stos
sbb
testb
jge
sarl
xchg
adc
in
lahf
cwtl
adc
sub
iret
add
je
test
mov
and
jb
ss
dec
pop
push
enter
jmp
setae
mov
sub
test
sub
xchg
aam
shl
mov
rcr
mov
gs
xor
jo
inc
iret
xchg
add
xchg
sbb
je
dec
jl
arpl
adc
and
dec
mov
out
fldenv
xor
out
dec
or
pop
and
xchg
ljmp
add
and
or
in
iret
push
pop
icebp
add
or
lods
es
adc
fcomp
test
mov
iret
push
test
mov
or
jle
sbb
aad
icebp
aam
push
cmp
roll
and
iret
mov
adc
push
loope
out
das
cmp
ja
cmp
hlt
aas
jno
mov
iret
inc
pop
cmc
sbb
bound
and
aam
dec
outsb
fidivl
cmp
adc
xchg
dec
stos
or
add
mov
idivl
add
and
push
dec
mov
aas
xor
bound
mov
outsb
xchg
lock
push
outsl
je
andl
jae
mov
add
nop
add
pop
arpl
jae
add
ds
filds
sahf
pop
push
sbb
movsb
mov
sub
stos
sbb
pusha
inc
push
jp
sbb
and
ja
cmc
cmp
ret
test
test
arpl
rorb
iret
outsb
add
sub
test
sbb
pop
mov
jle
mov
mov
push
dec
icebp
dec
bound
aad
dec
mov
add
jge
aaa
push
iret
dec
add
shrl
pusha
sub
js
lret
movsb
fldl
sub
xchg
adc
push
push
mov
and
jecxz
dec
outsl
js
movsb
jne
int
ja
xor
dec
cs
inc
push
push
outsl
pushf
arpl
lods
dec
movsl
fucomp
inc
xchg
add
inc
jmp
mov
test
bound
outsb
and
dec
scas
xor
fsubs
aam
xor
or
push
scas
mov
shlb
nop
xor
push
push
adc
xchg
daa
xchg
shlb
add
mov
xchg
or
cmp
in
jg
or
xchg
cwtl
and
fxch
mov
mov
test
outsb
in
sbb
add
pusha
and
movsl
xchg
xor
adc
and
ret
scas
push
sbb
xchg
test
into
rorl
repnz
daa
movsl
hlt
and
mov
add
sub
jnp
icebp
xchg
adc
jb
leave
movsl
clc
filds
int3
mov
ljmp
gs
movb
mov
fbld
ss
arpl
enter
add
movsb
push
cmp
dec
dec
sbb
mov
or
testb
enter
ljmp
xor
out
dec
add
ret
xor
dec
fistpll
cmp
add
pop
mov
aaa
sbb
dec
jle
push
fs
sub
mov
sub
stos
pop
fsubrs
pop
ret
fxch
pmaxsw
inc
out
gs
add
ds
lret
dec
into
repz
scas
mov
push
xchg
adc
cmp
and
xchg
loopne
fwait
or
or
pop
and
sub
cmp
lahf
adc
out
movhps
adc
imul
and
sub
imul
jp
int3
pushf
fs
adc
xchg
push
js
inc
cli
fisttpll
xchg
add
bound
je
outsb
sbb
mov
mov
mov
mov
inc
or
sarl
clc
jb
mov
out
into
iret
sub
push
cmp
lret
xor
inc
pop
test
pop
push
outsl
pop
ja
or
pop
cmp
jnp
mov
pop
push
lock
stos
daa
mov
nop
lret
arpl
inc
dec
out
and
xchg
dec
jmp
push
scas
addb
xchg
sub
movsl
rorb
cmpsl
xchg
roll
icebp
mov
add
or
shlb
xor
add
inc
iret
mov
dec
call
jle
mov
cmp
les
sub
mov
test
cli
pop
jne
shrl
movl
lea
sbb
xor
addb
add
xlat
pop
and
add
add
mov
and
dec
pop
push
and
add
xlat
lahf
and
lea
daa
aad
cmp
je
fsubrs
jmpw
cmp
movsl
addl
inc
and
test
adc
xor
in
cmp
push
popf
call
add
push
adc
sbb
mov
push
cmpsl
adc
sbb
stc
fdivrs
add
aaa
loop
nop
aam
stc
add
pop
ret
sbb
sahf
subl
imul
mov
loope
mov
cmpsl
or
movsb
sub
push
imul
xchg
scas
and
imul
mov
movsb
jmp
bound
test
je
add
sbb
lret
dec
rorb
pop
cmp
add
and
mov
lods
push
lods
daa
mov
xor
push
jmp
xchg
pop
pop
inc
into
dec
pop
pop
adc
cmp
mov
add
icebp
mov
pop
sbb
clc
pop
dec
mov
xor
mov
mov
xchg
jae
rcll
inc
jg
xchg
jb
push
rcrl
pop
mov
sbb
scas
or
xor
push
push
adc
repz
jmp
fcmovu
sub
mov
pop
lcall
pop
loop
ja
push
and
aad
pop
arpl
dec
imul
es
push
inc
mov
xor
dec
jge
rcrl
sbb
lods
vaddsubps
daa
adc
pop
or
mov
xchg
roll
add
test
push
jbe
lea
shrl
cmp
or
or
ss
adc
mov
xchg
ret
adc
in
pop
into
mov
xor
fwait
cltd
les
and
push
jecxz
cmp
push
cwtl
mov
fdivrs
adc
iret
push
jbe
and
ja
std
scas
cmp
and
pusha
jbe
mov
sahf
mul
or
xor
jp
xchg
inc
and
outsl
pop
or
mov
xlat
pop
xor
in
mov
fldl
into
imul
or
or
decl
ret
push
mov
add
fnstenv
int3
and
iret
mov
xchg
jne
pop
sub
aaa
movsb
mov
rcl
add
xchg
xchg
and
icebp
xor
adc
scas
mov
pushf
outsb
xchg
es
add
movsl
addr16
push
or
pop
cmp
mov
loopne
jb
pop
xchg
sbb
pop
sub
in
repz
sub
pop
popa
dec
shl
mov
ljmp
xor
adc
push
or
loope
out
cs
aaa
push
in
jns
in
jle
cmpsb
lock
push
sub
xchg
push
xchg
clc
push
pop
popa
mov
push
xor
sbb
test
and
ret
mov
outsl
call
jecxz
cmp
call
arpl
pop
pushf
mov
mov
outsb
rcrb
mov
loopne
jle
hlt
xchg
sbbl
rcrb
or
add
dec
jle
xor
and
stos
sub
pop
ret
sub
sbb
jecxz
xor
xchg
add
shl
es
jle
add
push
aas
adc
pop
cltd
mov
jl
sbb
xchg
cmp
add
test
popa
mov
xor
in
push
pop
dec
out
dec
dec
jge
pop
xor
adc
mov
rcrl
push
add
incl
lret
aam
psraw
mov
daa
sbb
sbb
outsb
sub
cmp
jo
or
add
out
pop
jne
xor
insl
popa
add
lds
sbb
nop
ficoml
lret
push
jb
aad
and
mov
rorl
adc
test
iret
les
into
pop
mov
jb
and
mov
daa
lahf
xlat
or
aam
hlt
or
rcrb
fdivr
or
mov
sahf
add
push
dec
xchg
pop
pop
aaa
mov
icebp
jp
repz
lahf
and
and
loopne
xchg
mov
jge
sbb
loopne
in
popf
inc
lods
lret
jno
push
xor
fisubrs
jo
mov
scas
sub
aas
js
cmpsl
jo
shrl
lds
xchg
enter
idivl
loopne
pop
mov
mov
xadd
and
cmp
push
nop
sub
cmpsl
mov
imul
xor
jo
jns
fdivr
out
mov
movsl
testl
jno
addb
sahf
rcl
push
mov
or
insl
lods
push
mov
inc
ret
andl
negl
aaa
je
sbb
ret
sub
xchg
sbb
and
addl
scas
mov
xor
jns
xor
inc
je
jp
sarl
mov
and
jecxz
test
cmp
mov
jno
inc
out
add
insl
and
pop
fnsave
adc
icebp
and
das
push
xchg
ret
fbstp
xchg
pop
or
lods
inc
mov
push
jge
fists
jle
or
mov
add
jp
cmpb
sub
ss
aam
jle
lds
or
loopne
int3
or
xchg
insb
xchg
jle
popa
push
mov
sbb
lods
mov
cmp
inc
iret
repnz
and
push
ret
orb
mov
inc
and
pusha
and
out
int
mov
fbld
in
jbe
rolb
add
xchg
inc
dec
push
and
call
mov
mov
mov
cld
xchg
das
xor
aad
pop
loope
cmpsl
mov
fwait
scas
bound
push
pusha
and
rcrl
mov
pop
iret
icebp
cmpsb
add
js
je
pop
stc
cmp
or
dec
clc
xchg
sti
clc
and
das
add
notl
stc
lock
loope
ret
std
icebp
add
jne
sub
dec
add
xchg
jp
daa
add
adc
stos
push
dec
jg
imul
stos
push
ffreep
loop
popa
test
lcall
mov
iret
add
add
add
js
dec
xchg
lods
lds
jns
mov
sub
inc
jge
js
js
sub
push
jns
ret
mov
push
xchg
into
inc
jae
outsl
mov
xor
lods
jge
sub
cwtl
test
jg
push
push
mov
testb
xor
incl
add
call
push
dec
inc
push
mov
dec
add
jmp
mov
rcrb
loopne
and
test
dec
imul
cli
mov
xchg
jno
dec
jne
arpl
je
xor
stos
aam
pop
je
xor
movsb
sub
outsl
loopne
mov
add
scas
jns
or
popa
cmp
push
add
scas
lods
inc
ret
pop
ret
pop
imul
js
mov
fstpl
and
cltd
push
push
sahf
fisubrs
add
pop
imul
cs
stos
xor
pop
pop
jecxz
push
sti
xchg
dec
ret
xor
jecxz
or
pop
insl
dec
jo
addr16
jb
lds
add
push
mov
icebp
sub
out
adc
sub
push
add
push
in
push
cmc
sbb
ljmp
ds
xor
out
cmp
cs
jnp
mov
and
cmc
xchg
not
cmp
mov
jp
add
dec
sbb
or
xchg
jp
jmp
sbb
sub
sub
das
push
xor
iret
sub
inc
subb
xchg
cmp
loopne
push
popf
jge
jmp
lods
push
in
scas
rolb
cmp
push
imul
jnp
or
iret
cli
and
sbb
movsb
and
dec
dec
mov
adc
xchg
adcb
das
mov
decl
pop
int
das
mov
fiaddl
mov
push
jecxz
pop
nop
and
xor
lods
jb
mov
in
jbe
sbb
ja
and
mov
pusha
push
test
sbb
sbb
xor
jl
inc
fstpl
xchg
jb
loopne
or
lds
push
pop
outsb
pop
outsb
pop
addl
push
stos
sub
orl
mov
std
push
orl
or
push
pop
mov
mov
cmp
mov
xchg
or
shll
jbe
stc
push
icebp
and
add
clc
into
xchg
je
ret
cwtl
loopne
in
pop
pop
cmp
push
pop
push
lock
dec
mov
inc
inc
ret
push
inc
mov
ds
dec
idivb
jnp
rcr
aaa
mov
xor
inc
int
into
xchg
outsl
hlt
mov
xor
pop
repz
push
lret
mov
or
sbb
add
mov
aas
pop
and
mov
add
enter
andb
cmp
push
cwtl
push
scas
add
pop
mov
movsl
imul
pusha
cmpsb
insb
pop
dec
cmp
mov
sub
add
aas
cmp
fsubl
sbb
mov
mov
pop
xchg
pusha
inc
mov
inc
in
sahf
or
jns
sub
and
pop
lret
shl
roll
stos
loope
pop
sub
xor
adc
aas
std
jo
fdivrs
add
add
das
adc
lret
sub
and
mov
or
outsb
cmp
jmp
jp
nop
es
and
das
sbb
shll
cmpb
incl
hlt
push
roll
push
divb
fisubrs
cmp
mov
or
shlb
sub
mov
sbb
pop
or
push
dec
dec
xor
inc
ljmp
cmpsb
cmp
nop
scas
jo
adc
cmp
out
cmpsb
pop
or
push
stos
and
loope
lock
add
in
mov
push
arpl
pop
into
daa
in
sbbl
fldt
fistpll
lods
mov
or
mov
sub
fidivrs
sbb
outsb
sbb
loope
sbbb
fwait
ret
xlat
jo
loopne
ret
pop
mov
imul
mov
or
decl
jo
xor
ficoms
xor
sbb
jo
loopne
push
pop
frstor
pop
mov
fsubrl
popf
lods
mov
inc
sbb
xchg
cmpb
add
inc
daa
push
mov
das
and
inc
inc
dec
adc
push
cmp
push
repnz
and
pushf
aam
and
push
cli
push
add
sbb
mov
inc
add
push
mov
mov
cmp
shr
lret
mov
pop
cmp
jge
mov
in
mov
daa
mov
inc
push
fnstcw
pop
cld
adc
dec
int3
and
mov
jns
ljmp
cmp
xchg
pop
or
pop
adc
icebp
into
js
and
xor
mov
test
lea
shl
or
insl
clc
ret
popf
lcall
stc
or
mov
add
sub
ret
fisubrs
mov
and
les
dec
mov
loope
adc
lret
and
push
mov
lods
jo
pusha
push
cwtl
je
jno
lcall
mov
popf
sbb
inc
in
push
add
pop
and
inc
and
insb
shll
sahf
push
popa
push
js
in
pop
arpl
enter
add
pop
pop
lret
pusha
cmp
rcrl
xor
push
nop
and
roll
call
loopne
lock
cs
inc
les
cltd
mov
jp
shrl
sbb
push
sub
add
sbb
ss
adc
add
insl
in
test
nop
xchg
or
fisttpll
addl
mov
stos
in
jp
and
mov
push
imul
mov
add
xchg
add
fildll
or
mov
movb
jo
outsb
or
mov
cli
or
outsb
xor
es
repz
sahf
jl
jne
mov
enter
mov
push
outsb
sbb
xor
pop
das
scas
aaa
in
jmp
lret
xor
loopne
stos
pop
scas
sbb
pop
mov
jno
lods
xchg
or
aam
inc
cs
cmp
sarb
ret
dec
inc
outsb
fadd
cmc
shlb
pop
arpl
jne
sub
jl
enter
push
jae
and
js
rorl
ficoms
dec
and
push
add
pusha
pavgw
jecxz
arpl
das
es
outsb
faddl
jo
gs
jnp
loope
inc
xor
add
sbb
fisubs
test
into
sub
mov
sbb
pop
add
hlt
in
pop
lods
mov
sti
inc
out
dec
and
orl
xor
fistpl
rcrl
jb
dec
loope
sub
ss
decb
mov
or
adc
mov
jb
and
jo
lods
std
pop
fldenv
or
mov
add
ret
cmp
pop
movb
add
mov
or
push
dec
or
push
loop
fcmove
imul
into
addl
and
add
adc
hlt
imul
inc
xchg
sub
inc
sub
sar
inc
or
adc
xor
push
mov
fsubrs
sub
cmp
shrb
pop
add
push
outsb
outsb
and
xchg
cmp
xor
xor
scas
jnp
sub
mov
or
cmpsl
je
pop
dec
dec
int3
popa
jno
lea
icebp
cmpsb
add
or
add
into
pop
inc
loopne
lret
add
rclb
pusha
push
mov
adcl
cmpb
or
ja
jl
jmp
dec
xchg
xchg
add
fcoms
xlat
add
orl
pop
cmp
inc
pop
lock
cmp
dec
jne
es
xor
jnp
sub
cmp
ds
push
inc
pushf
jle
or
aaa
imul
dec
jp
push
daa
int
daa
sub
stos
hlt
jo
insb
cmpsb
and
mov
add
sub
call
ficoms
loop,pn
jns
pop
inc
ret
bound
int3
jno
loope
jmp
fstp
fwait
cmp
push
jns
dec
and
cmp
jmp
aaa
lock
sub
adc
aaa
aas
sahf
lret
jnp
inc
jae
aad
dec
pop
mov
lods
sbb
sbb
add
sub
sbb
movsl
ljmp
add
xorl
sahf
adc
mov
shlb
or
add
cmc
mov
aaa
and
push
or
mov
dec
loope
or
cmpb
ljmp
je
push
jo
inc
insb
jle
and
popa
xor
mov
add
jo
ja
in
and
dec
jmp
sbb
xlat
ret
or
bound
mov
mov
and
sub
sub
arpl
fwait
stos
ss
add
enter
xlat
pop
in
add
or
mov
cmpl
in
in
lcall
inc
sub
popf
inc
jo
pop
mov
je
outsl
fmul
push
loopne
pop
or
aas
and
lock
test
mov
xchg
inc
inc
xchg
mov
jo
rolb
cmp
push
enter
popa
sbb
cs
outsl
inc
loopne
and
mov
scas
cmp
sbb
dec
aad
shlb
cmp
mov
pop
dec
or
adc
loopne
mov
add
pop
or
adcl
jl
outsl
pop
xchg
shll
pushf
xchg
mov
add
sub
mov
add
add
imul
xor
scas
inc
fsub
test
mov
pop
or
leave
push
out
xchg
sub
out
push
nop
stos
in
es
add
adcl
sbb
inc
stos
mov
imul
xlat
add
add
jb
dec
push
and
mov
push
add
mov
sahf
jmp
gs
and
adc
dec
or
sarl
icebp
pop
dec
mov
mov
inc
fs
push
mov
popf
push
jge
sbb
iret
xchg
mov
mov
dec
out
in
aam
inc
push
fists
inc
add
mov
mov
and
jnp
shll
pop
push
enter
jbe
imul
jo
lds
and
sarb
mov
push
shrd
inc
setns
mov
shll
mov
jl
cmp
cmp
scas
bound
jno
xchg
jb
push
and
push
mov
pop
jno
xor
pop
fidivl
xor
iret
lahf
mov
pop
idivl
sub
inc
sbb
cmp
sbb
into
jno
jbe
jnp
jge
icebp
fdiv
xchg
adc
les
add
loop
fcomps
icebp
aam
lods
and
adc
push
test
mov
and
xorl
sub
aad
xlat
or
in
daa
leave
mov
fwait
jg
or
xor
rclb
add
add
jbe
stos
stc
adc
inc
inc
aaa
sahf
sbb
outsb
dec
fndisi(8087
cwtl
cmp
add
fsubp
sub
lret
or
into
sub
pop
xorl
xchg
sbb
dec
movsl
mov
repz
xchg
xorb
sub
push
jb
sahf
jmp
je
test
movsb
fsubs
cmp
push
sub
pop
pop
fsub
popa
and
fadd
inc
movsl
xchg
mov
test
out
jmp
jo
xchg
lock
test
ret
ret
sbb
jmp
sbb
xchg
pop
jle
aaa
mull
lcall
mov
out
pop
dec
cltd
je
xor
outsb
adc
ficoms
les
popa
popf
lea
xor
cmpsb
jo
testl
mov
and
lret
xchg
dec
cmpsb
loope
test
cmp
and
cmp
pop
sub
out
mov
sahf
jne
and
add
and
add
xlat
and
mov
lock
add
push
dec
push
push
xchg
rorb
bound
push
add
into
test
mov
shll
lods
hlt
add
scas
cmp
ljmp
rorl
cltd
jbe
jmp
xchg
sahf
or
sub
sbb
and
sub
or
sub
das
dec
es
sub
sub
push
sbb
imul
sub
hlt
andl
sbb
or
add
fistps
daa
mov
add
repnz
fs
rcrl
xchg
test
sub
into
enter
inc
xchg
lcall
sub
jbe
pop
roll
push
fidivl
repnz
lods
mov
pushf
push
add
xlat
push
xor
int
add
aad
aas
or
and
aaa
and
jnp
clc
xor
stos
pop
mov
insl
dec
and
bound
add
loope
fcmove
cmp
adc
xor
out
ds
mov
ljmp
ds
xchg
in
push
fcompl
enter
jecxz
loope
xchg
sub
and
call
iret
cmp
icebp
enter
xor
and
stc
sbb
mov
popa
and
mov
sub
cmpsl
mov
push
les
jb
out
arpl
in
add
iret
add
mov
xor
and
dec
dec
xchg
ret
and
jo
inc
dec
sub
and
cmpsb
and
lds
mov
adc
in
popa
hlt
adc
imul
gs
pop
bound
loopne
push
pop
addl
in
mov
xor
lret
sar
and
stos
push
cli
andb
jg
rol
cli
or
daa
or
mov
add
lret
xorl
xor
je
sbb
add
xor
push
add
dec
popa
insl
ret
cmp
mov
sub
shlb
sbb
aas
imul
sarb
mov
pop
and
popa
and
dec
popl
cmp
mov
adc
aad
mov
mov
mov
fs
dec
and
ret
test
arpl
xchg
jbe
cmp
add
inc
lea
cmpsb
or
insb
bound
or
outsb
mov
add
cltd
jns
jbe
or
dec
cmp
ficoml
orl
xor
xchg
xchg
push
mov
xor
ja
imul
dec
dec
daa
addr16
pushf
pop
mov
dec
adc
popa
dec
pusha
test
xchg
and
cld
or
cmp
in
in
xchg
test
stos
cli
cwtl
and
sbb
push
mov
add
jne
pusha
pusha
xor
mov
adc
inc
push
icebp
push
push
int3
and
loope
mov
inc
jle
clc
lods
cmc
pushf
or
jns
or
or
mov
pop
nop
test
scas
jno
add
jns
mov
pop
test
fmul
pop
or
sbb
loop
adc
rcrl
dec
xchg
sbb
clc
jmp
rolb
clc
xchg
xlat
xor
cmp
xor
mov
add
je
ret
mov
sub
ror
sbb
stc
lret
adc
push
fcomps
rcrl
mov
sub
inc
mov
pop
loopne
pop
sbb
add
rcrb
insl
cli
bound
out
dec
imul
sarb
xchg
push
add
xlat
lods
pop
inc
lods
int3
pop
lods
and
push
sbb
insb
movsl
pop
inc
adc
dec
mov
pop
lock
imul
das
or
je
sahf
fcomip
es
sbb
add
jge
mov
sbb
and
pop
dec
or
cmp
or
push
and
push
push
jne
adc
adc
sub
adc
outsb
jl
xchg
adcl
mov
fimuls
dec
mov
imul
mov
nop
pop
dec
xor
in
push
loope
es
and
dec
add
or
or
dec
mov
jmp
cmp
icebp
adc
mov
aad
jl
iret
sbb
jle
mov
jae
adc
jecxz
data16
inc
add
dec
lods
inc
pop
sbb
xchg
inc
jno
test
sub
daa
jmp
xstore-rng
cmpsl
add
sahf
mov
or
inc
add
mov
std
cli
xor
push
or
aas
pop
mov
cmp
ja
jo
add
ret
add
inc
or
insb
add
xchg
mov
out
or
imul
jbe
lret
push
jecxz
pop
lock
sbb
pop
jp
ror
cmp
adc
cmp
jno
shl
scas
or
imul
adc
jecxz
sbb
add
xchg
test
push
lock
jl
and
int3
imul
fldl
or
idivb
mov
push
aaa
mov
mov
rcrl
dec
jg
mov
in
es
rolb
mov
mov
sbb
xchg
sub
or
ret
sub
inc
add
push
insl
mov
pop
scas
push
sub
das
sahf
in
mov
scas
adc
popf
cmp
mov
jb
movsb
cltd
or
dec
xor
lods
in
mov
lods
test
mov
lods
popa
or
add
aam
cld
lods
xlat
dec
add
inc
lods
adc
jo
jmp
lahf
fs
lock
sarb
xchg
mov
or
xor
or
movsl
push
mov
sbb
add
push
imul
add
test
dec
jb
daa
adc
pop
push
push
dec
ja
cltd
sub
mov
sub
mov
xchg
cmp
and
xchg
hlt
das
push
cmc
push
inc
pop
push
rolb
xchg
arpl
or
push
and
fimull
inc
jecxz
cmp
sbb
fwait
ret
test
inc
insb
iret
sbb
shlb
jns
sbb
mov
mov
or
dec
add
add
scas
movsb
pop
sub
mov
mov
mov
dec
adc
bound
inc
jae
mov
add
cli
inc
mov
je
and
mov
xor
or
sub
sub
in
lds
bound
loopne
dec
ret
insb
lahf
adc
push
dec
sbb
adc
pop
mov
arpl
mov
js
or
jnp
push
mov
add
ss
inc
xor
and
add
push
ret
xchg
ret
inc
mov
ret
scas
imul
cmc
shlb
push
and
and
std
mov
jno
and
dec
jmp
movsb
mov
mov
daa
out
jbe
mov
add
push
push
mov
cs
jl
sbb
fstpt
je
leave
fcoms
add
push
mov
icebp
xchg
jo
add
add
daa
push
or
js
jmp
cmpb
mov
sub
xor
push
pop
inc
and
jl
push
ret
iret
inc
pop
inc
inc
orl
adc
inc
or
xchg
mov
ficompl
mov
pushf
inc
adc
inc
cmp
pop
add
data16
stos
cmp
fsubrs
shr
shll
jecxz
and
dec
test
sub
iret
addl
mov
mov
sbb
jp
jmp
rolb
cmpsb
pop
in
push
or
loope
arpl
sbb
and
aam
xchg
sbb
call
gs
mov
adc
jno,pn
push
add
cmpsb
mov
mov
roll
mov
dec
popf
add
add
sub
dec
mov
mov
iret
jecxz
addr16
push
push
loope
or
bound
jle
dec
inc
insb
jl
add
sbb
inc
pop
fidivs
dec
js
add
fbstp
insl
js
sbb
and
das
mov
pop
adc
mov
bound
mov
mov
jo
in
add
and
lock
es
or
add
pop
ficompl
or
repz
mov
jno
fistpl
jbe
or
dec
sbb
lods
adc
fdivs
lock
inc
add
dec
popa
int
cmp
inc
repz
js
sbb
mov
arpl
das
lock
pop
sub
test
inc
popa
ds
popf
inc
enter
sbb
cwtl
sub
ffree
test
dec
in
je
lret
incl
aam
pop
mov
jp
xchg
dec
add
rolb
mov
add
pop
ret
addb
add
into
xor
dec
mov
add
pop
outsl
paddq
cs
push
cmp
mov
mov
or
stos
xchg
pushf
aam
loope
rorl
aad
xor
pop
adc
xchg
pushf
xor
lock
repz
lds
out
xor
lods
or
mov
jnp
add
fbld
scas
pop
sub
scas
lahf
pop
and
mov
pop
mov
pop
cmpsl
inc
loopne
jb
negl
imul
pop
jmp
mov
push
xor
orb
add
xchg
cmpsl
and
or
mov
cmpsb
push
shll
inc
and
inc
repz
sub
arpl
pop
sarl
or
dec
dec
add
lock
mov
mov
xchg
loopne
into
mov
xor
jnp
cmp
sbb
fidivrs
inc
test
jl
lods
divb
subl
call
lret
iret
mov
sub
sbb
scas
cmp
cmp
mov
mov
cmc
pusha
aaa
xchg
sbb
scas
jno
cmp
add
inc
sub
jmp
jnp
repz
scas
fcoms
js
ljmp
aaa
inc
sub
sti
xchg
enter
aaa
add
lea
fcoml
jnp
jne
and
test
cwtl
dec
jl
or
sub
insb
adc
inc
sbb
cmp
adc
inc
mov
sbb
aam
incl
xlat
inc
jne
pop
mov
cmp
test
push
inc
xchg
add
fidivs
cmpsl
fwait
mov
sub
es
jecxz
adc
and
sbb
lea
mov
pop
jg
jo
jbe
push
or
adc
cmpsl
xchg
push
out
pushf
clc
or
mov
adc
lea
pushf
ja
int3
or
jle
and
push
push
sub
orl
jge
cltd
pop
imul
xor
mov
inc
inc
dec
sub
mov
sub
loopne
add
repz
pushf
xchg
cmp
imul
xor
mov
or
pop
cltd
mov
cwtl
lock
sub
rcrl
ud0
out
mov
pushf
dec
das
sub
fcomps
adc
cmpsl
jle
pop
or
cmpsl
call
pop
mov
fdivl
mov
jno
addr16
lods
stos
cs
loopne
xchg
addb
movsl
insb
dec
and
and
cmp
scas
and
scas
add
dec
jb
mov
sub
into
push
fisubl
xchg
call
clc
and
cmp
jnp
dec
aaa
movsb
in
movsl
lock
shr
add
mov
les
adc
mov
xchg
xlat
jl
push
add
sub
pop
into
xchg
stos
test
lds
mov
fnstsw
mov
mov
jo
arpl
loop
push
addr16
aad
mov
push
mov
movsl
gs
mov
stos
gs
jno
andb
xor
cmp
jmp
mov
gs
inc
cmp
and
addb
lahf
rorb
out
add
paddusb
pop
add
jg
sub
jbe
xor
pushl
testb
jo
fisttpl
and
subb
push
in
daa
fwait
lahf
shrl
loop
xlat
inc
jl
fwait
sub
jo
sahf
add
cmp
dec
adc
dec
int
jae
les
cmp
dec
jno
adc
imul
mov
add
mov
xor
inc
loope
xchg
or
push
add
jo
xor
sub
xchg
push
mov
je
outsb
mov
test
xorb
sahf
sbbb
cmp
xchg
dec
cmp
jne
push
faddl
lret
repz
xchg
mov
gs
xchg
mov
add
add
and
mov
mov
xor
push
outsl
mov
outsb
pop
mov
in
and
out
pop
pop
repz
jp
xchg
je
fcoms
imul
mov
in
roll
xchg
push
add
xor
inc
es
rcrl
cwtl
fmuls
adc
jo
adc
lret
xor
mov
mov
push
hlt
insb
mov
popa
mov
mov
roll
adc
ljmp
mov
cmpsb
insb
jl
fsubs
js
lret
bnd
mov
cli
loope
popa
into
pop
adc
fisubrs
push
jle
add
and
insl
adc
pop
cmp
js
pop
add
arpl
fsubrs
cmp
jb
xchg
jno
push
roll
jbe
jnp
mov
cmp
dec
mov
push
sub
imul
loope
subb
ror
clc
out
xchg
rcl
mov
pushf
cmpsb
sub
jle
ret
dec
jmp
cmp
mov
call
sarl
lods
lea
sub
aad
sub
das
add
bnd
sub
and
out
mov
adc
pop
lret
jne
and
pop
aad
iret
cmpsb
jo
jne
lea
cs
shufps
loop
mov
or
loopne
xor
lret
jbe
push
movsb
or
add
mov
mov
add
rcr
mov
sub
push
xchg
inc
inc
jl
add
rcll
fistpll
jbe
enter
mov
int
dec
add
ljmp
scas
pop
dec
jecxz
mov
jnp
mov
ret
and
adc
push
jge
stos
cmpsl
movsl
mov
xor
cmp
lea
xchg
test
xor
push
push
movsb
loope
jge
and
es
ljmp
and
ret
stos
lea
inc
lock
js
cmp
jmp
out
dec
rorl
in
mov
sbb
loope
dec
dec
subl
push
lods
add
into
push
adc
and
and
adc
sub
jns
push
add
add
mov
mov
test
idivl
xchg
mov
mov
mov
test
es
out
sub
adc
sub
add
xchg
add
mov
outsb
sub
push
hlt
adcb
adc
mov
push
or
sbb
xchg
mov
fnstcw
or
je
ja
movsl
cmpsl
in
lret
stc
nop
popa
mov
or
mov
les
inc
jae
rcrb
or
xor
loopne
outsl
pop
jecxz
inc
cmp
xchg
lcall
fsts
out
pusha
lods
cmpb
lcall
xchg
ss
pop
or
xchg
cmp
mov
imul
mov
mull
pusha
xchg
or
inc
stos
xchg
loopne
lock
add
or
jo
push
addb
out
mov
test
cli
mov
ss
or
mov
shr
jmp
pop
movsb
daa
lock
sub
ret
lahf
imull
and
mov
adc
or
mov
shlb
add
out
lcall
and
add
in
and
aaa
or
xor
lock
push
xchg
dec
add
add
pop
adc
sbb
es
cmp
inc
pop
mov
sub
pop
jl
test
jae
shrb
adc
addr16
xchg
out
add
cli
gs
pop
das
ss
sbb
fsubrs
adc
rcrl
notb
push
addr16
pusha
iret
outsl
out
mov
jno
adc
daa
lret
into
out
lods
jle
shlb
jns
loope
push
jo
lock
and
mov
adc
stos
scas
jp
jns
mov
mov
scas
cmp
test
outsl
adc
mov
idivb
mov
mov
inc
inc
loopne
jno
int3
lods
sahf
pop
shll
jns
fstl
cmp
test
xchg
lret
add
cmp
popa
enter
adc
xor
xchg
outsl
xchg
mov
test
out
mov
movsb
mov
lods
and
push
test
mov
lahf
add
mov
dec
or
es
or
jl
stos
je
ror
and
jno
add
add
push
icebp
mov
mov
pop
or
xchg
add
and
sub
xchg
cmpsl
cmp
or
inc
filds
jnp
xchg
cmp
sub
adc
sub
jge
mov
fcomp
lcall
mov
aam
icebp
inc
clc
sbb
nop
cld
or
mov
and
jge
lods
and
jecxz
iret
cmp
leave
adc
pop
test
xchg
sub
mov
add
dec
xchg
scas
mov
hlt
call
ret
sbb
mov
cmp
inc
sub
cwtl
pop
push
sbb
rcrl
pop
sbb
int
shrl
mov
jns
arpl
scas
pop
dec
dec
xchg
push
bound
sarb
adc
pop
in
adc
push
jg
add
lret
mov
dec
xchg
orb
in
jmp
cmpsb
leave
sahf
push
push
dec
insb
movzbl
aaa
inc
and
pop
xor
push
jmp
cmpsb
addr16
add
call
inc
ret
push
sbb
add
inc
lea
cltd
and
fstps
mov
iret
adc
addb
push
push
les
das
mov
sub
icebp
sub
jnp
cmp
ja
movsl
mov
fstl
out
mov
and
leave
insb
mov
and
dec
fldenv
stos
movsb
xorb
outsl
jnp
push
sbb
add
sub
mov
add
xchg
insb
add
aaa
gs
mov
pop
jge
xchg
or
inc
mov
loope
jle
in
cmpsl
jnp
mov
mov
lods
sub
jne
pop
or
dec
stos
cmp
add
fimull
lods
cltd
inc
pop
lret
cmp
dec
mov
clc
mov
ret
mov
adc
or
pop
mov
iret
nop
lock
loope
add
test
ss
and
add
arpl
mov
xchg
fwait
sbb
stos
jecxz
fwait
ret
sub
mov
ss
push
stos
cwtl
das
xor
xor
sbb
imul
jle
pop
ret
jle
adc
jae
sub
iret
jo
fwait
shlb
lock
push
dec
aad
xchg
sub
sbb
shrl
movsb
inc
fadds
add
stos
mov
test
mov
add
aas
cld
sbb
sti
mov
mov
pusha
mov
rorb
add
adc
loope
jne
daa
jg
inc
or
gs
xlat
add
push
sahf
add
mov
out
dec
add
or
sub
inc
pop
test
xchg
int3
cmp
mov
cld
inc
xchg
ret
or
xor
mov
jmp
mov
push
mov
mov
movsl
ret
mov
notb
lret
xor
roll
and
vmovups
rolb
scas
hlt
sbb
lods
and
cmp
cmpsb
ficoml
sbbb
iret
les
in
push
jl
mov
or
xlat
clc
ret
xchg
add
movsb
xchg
mov
and
xchg
or
jns
das
mov
movsb
cmp
clc
add
xchg
movsl
lea
test
lea
or
pop
cmp
mov
cmpsl
loope
lods
inc
imul
sub
test
test
in
cmp
lods
ljmp
sbb
fbstp
popa
call
rorl
push
or
push
popa
pop
filds
sub
xchg
clc
cmc
add
pop
adcb
xorl
test
sbbb
call
insb
adc
lcall
les
aam
pop
sub
in
scas
xorl
repz
mov
daa
add
add
sbb
or
sub
mov
pop
repnz
lods
test
and
addl
xchg
fs
nop
test
xchg
les
or
test
nop
out
xchg
or
mov
sbbl
icebp
push
fdivs
jge
xchg
lods
stos
mov
xlat
js
adc
dec
pop
les
iret
inc
mov
jb
ja
imul
dec
adc
movb
inc
jb
or
pop
fists
xchg
mov
scas
cmova
push
sub
sbb
mov
sub
shrl
and
inc
or
lret
sarb
stos
inc
repz
add
pop
inc
or
es
gs
push
push
cmp
aaa
xchg
xlat
rcll
inc
push
pop
or
xor
mov
je
aam
push
je
sub
inc
imul
nop
pop
adc
push
mov
pop
je
bound
mov
push
adc
inc
push
enter
orl
pop
aad
lea
loopne
outsb
xchg
xchg
and
fs
mov
cwtl
xchg
jge
mov
fmuls
push
lahf
xor
mov
adc
and
lcall
cmpsl
mov
push
push
dec
pop
test
push
jl
loopne
xchg
jo
xor
mov
mov
add
or
xor
dec
lods
jmp
sbb
xchg
and
push
mov
dec
ljmp
add
lret
stos
xlat
inc
loop
dec
ja
mov
mov
mov
loopew
enter
and
dec
mov
and
push
cltd
mov
cmpsb
or
ret
loope
jns
and
loopne
sti
lcall
sti
or
dec
push
pop
sbb
std
addl
out
sbb
das
mov
arpl
sub
stos
mov
rolb
pop
add
cltd
je
mov
scas
lods
dec
or
mov
mov
clc
call
popf
cmp
nop
clc
iret
add
dec
jge
cwtl
ja
add
xchg
lea
ret
or
push
clc
ret
inc
or
pop
add
je
mov
cmp
xchg
bound
mov
mov
jo
pushl
jmp
fbld
push
test
arpl
inc
mov
mov
fcomi
rorb
inc
push
adcb
cs
popf
mov
or
dec
jl
pop
in
jle
lret
xor
mov
pop
adc
sbb
add
and
imul
sbb
les
mov
ljmp
daa
mov
loopne
roll
fwait
mov
popf
pop
cwtl
mov
fadds
shll
push
pushl
and
or
cmp
popf
mov
and
adc
push
push
lahf
loopne
inc
loopne
loop
loopne
sub
dec
xchg
lret
jp
xchg
mov
add
xor
mov
sbb
mov
scas
pop
lret
je
ret
scas
pop
sub
adc
inc
mov
push
dec
pusha
adc
into
stc
jb
dec
sbb
push
leave
mov
sbb
xchg
daa
outsl
jmp
push
add
xor
lret
ret
and
jo
mov
adc
cmpb
outsl
pop
jo
mul
imul
cli
jns
pop
lahf
mull
push
add
dec
xor
xor
fdecstp
jbe
subps
fnsave
sub
sbb
push
imul
push
or
or
adc
cmc
or
push
cmp
int3
movsb
mov
lret
and
fsubl
sub
rclb
ljmp
add
aad
jo
pop
int3
mov
add
aaa
push
xor
arpl
sbb
push
outsl
aaa
je
sub
subb
xor
xchg
in
cmc
shl
pop
pushf
lock
inc
jg
cmp
xchg
dec
inc
cs
frstor
dec
sub
or
ror
inc
and
push
daa
cmp
out
int
and
hlt
scas
in
add
das
add
xchg
fdiv
dec
add
cli
stc
shrb
inc
ja
les
and
idivb
idivb
mov
shrb
and
push
xchg
scas
iret
sub
mov
pushl
or
js
in
enter
jle
push
mov
add
cmpsb
push
cmp
push
add
dec
jmp
inc
mov
add
popa
nop
cs
jmp
mov
cwtl
ret
popa
sbb
or
pusha
icebp
push
sti
and
pop
sub
mov
hlt
hlt
cmpsl
js
sbb
dec
push
dec
lods
sub
and
int
sub
mov
xor
scas
lods
push
pop
stos
scas
add
lods
xor
sbb
push
and
je
ret
or
sbb
sahf
dec
sbb
adcl
inc
ret
cs
lret
fwait
ror
and
outsb
or
inc
or
lods
ja
sti
pop
std
cmp
jo
push
pop
xchg
push
xor
movsb
insl
scas
clc
icebp
rcll
icebp
add
inc
js
repz
movsl
push
nop
fimuls
insb
das
push
xor
rol
xchg
daa
mov
loopne
inc
xor
adc
add
sbb
push
mov
inc
dec
add
mov
and
mov
push
insl
adc
sbb
imul
adc
inc
or
push
pop
out
sbb
push
cmp
shrl
push
adc
add
stos
jnp
pushf
int3
repz
jo
inc
and
or
ret
cs
loopne
and
lret
cld
or
std
add
cmp
sti
xchg
add
in
xor
lock
sbb
dec
sbbb
or
or
and
ss
adc
flds
cmp
shr
adc
pop
fidivrl
mov
icebp
inc
cmp
cmp
cmc
adcb
inc
adc
dec
and
push
test
pop
and
sbb
pop
mov
test
adcl
sbb
rorb
mov
jo
inc
xchg
add
out
es
jne
mov
add
lea
aas
sti
fstps
mov
xor
jne
outsl
icebp
add
cs
pop
hlt
xchg
cmp
sub
les
pop
out
and
or
sub
mov
pop
out
sub
pusha
add
ret
mov
jecxz
ja
or
pop
rclb
push
imul
adc
mov
xchg
clc
pop
lret
lock
mov
in
push
das
pop
adc
sbb
int3
xor
and
popa
or
or
inc
mov
in
and
ret
push
roll
inc
addb
es
mov
inc
enter
fmuls
pop
push
shlb
shl
mov
jmp
mov
jb
adc
jne
scas
mov
inc
sub
arpl
xchg
inc
and
int3
xor
imul
pushf
jmp
sub
dec
outsl
xor
push
lock
push
cmp
lds
lar
sbb
pop
or
or
mov
xor
add
xchg
test
lods
add
scas
pushf
pusha
or
mov
aad
add
lret
push
push
ljmp
dec
arpl
xchg
sbb
aas
je
fldl
rep
push
stos
ja
cmp
inc
outsl
and
fs
pop
adc
jo
inc
rolb
nop
frstor
ret
fmul
es
pop
or
imul
adc
adcb
clc
cltd
mov
popa
mov
and
loopne
enter
and
inc
loopne
popa
iret
imul
mov
test
dec
imul
mov
jno
dec
loope
ret
repz
fcmovb
into
dec
js
pop
inc
inc
dec
adc
inc
test
and
xor
mov
xor
js
adc
pop
shlb
inc
add
xor
xor
pop
in
xchg
push
adc
xor
insl
sbb
push
or
add
sub
xchg
icebp
ret
pop
addr16
push
mov
sub
fdivs
fstl
lods
lods
dec
mov
push
stc
fnstcw
insb
rcrb
xchg
cmc
mov
jns
mov
pop
and
ret
sub
je
mov
lret
loopne
and
rcr
repnz
mov
iret
sbb
lret
push
xor
mov
outsb
dec
jecxz
xor
je
and
ret
add
mov
cwtl
sub
dec
testl
mov
in
les
sbb
xchg
int
sub
push
inc
addr16
es
mov
jae
adc
add
loop
or
mov
jbe
sbb
and
xchg
mov
sbb
and
add
dec
inc
jge
adc
pushf
cmp
cli
mov
scas
mov
jg
mov
lcall
sbb
dec
fnstsw
outsb
add
sahf
test
mov
jnp
fnstenv
cmp
push
rolb
aad
add
scas
iret
inc
out
fmull
adc
and
and
subb
mov
adc
lcall
fsubs
ret
fdivrs
les
imul
inc
nop
xchg
lods
pop
rcrb
xchg
shrb
sbb
add
mov
and
jbe
fldenv
scas
inc
fadds
pop
cltd
ret
mov
dec
sub
add
test
lods
and
stc
sbb
jb
and
add
roll
sbb
sub
cmp
add
jl
jmp
adc
das
sti
fdivr
ljmp
add
jecxz
movsb
mov
pop
das
adc
push
fdivr
sub
scas
lea
je
addr16
pop
inc
sarb
xchg
inc
cmp
add
rorl
pop
xchg
dec
xor
dec
push
into
dec
xor
sbb
shl
add
mov
int
sbb
sbb
mov
cmpb
adc
in
aaa
in
movsb
xchg
adc
std
cld
or
ljmp
and
shrl
cmp
fbstp
pop
sbb
iret
mov
les
add
clc
pusha
and
jnp
sti
bound
sbb
or
xlat
add
xchg
add
push
bound
clc
pop
push
rolb
aas
cmp
inc
inc
push
push
cli
ss
xor
xor
or
sbb
hlt
pop
sbb
sbb
sub
bound
sbb
cmp
shlb
xorb
push
add
cmp
mov
das
ja
mov
and
add
mov
in
add
jns
fisubl
je
push
or
mov
add
cltd
cmp
test
sub
enter
pop
sbb
mov
or
cmp
mov
aas
int3
and
or
mov
and
pusha
rorb
in
push
or
xchg
bound
jo
addb
ret
imul
cs
push
mov
sbb
es
xor
popf
xor
and
subps
push
mov
addl
repnz
into
xchg
hlt
mov
or
shrb
adc
push
daa
jecxz
adc
test
sbb
repz
pop
addl
in
cmp
in
push
cwtl
lods
jo
cmpsb
pop
in
out
addr16
test
lods
repz
dec
js
bound
or
lret
mov
rolb
pushf
call
pop
scas
mov
and
xor
sub
push
pop
dec
jmp
ljmp
add
add
adc
leave
stos
and
orb
imul
and
jecxz
dec
iret
cmp
inc
imul
add
or
punpcklbw
ds
pop
adc
dec
insb
add
aaa
je
shlb
adc
ds
test
std
rcrb
mov
pusha
addr16
arpl
sub
jecxz
nop
data16
add
pop
scas
adcb
adc
scas
push
fwait
push
sub
sbb
sub
stc
std
add
mov
pop
jne
xor
pop
lods
adc
lret
das
mov
adc
lods
stos
add
push
ret
test
xorb
mov
inc
mov
cmpsl
xor
lcall
imul
loop
stos
sub
fidivrs
mov
arpl
es
push
ja
out
rclb
xor
xor
push
shrb
popa
icebp
popa
inc
sub
adc
cmc
push
and
sub
mov
ds
lods
loopne
cmp
xchg
icebp
push
lds
das
sub
xchg
jb
arpl
ficomps
cmp
inc
lds
lea
xchg
icebp
inc
xor
fstpt
mov
mov
mov
or
sarb
pop
repz
imulb
cmp
adc
inc
xchg
sqrtps
mov
adc
lods
pop
jo
std
movsb
pop
inc
pop
insl
fdivrs
insl
push
js
mov
cwtl
pop
pop
addl
cmp
mov
inc
lret
pop
loope
sub
adc
sub
imul
icebp
sub
das
movsb
lret
jge
dec
dec
add
sbb
ret
outsb
jmp
stos
mov
ret
test
das
mov
movsl
outsl
adc
ds
or
inc
arpl
jle
cmp
in
sbb
cltd
pop
inc
cmp
jle
mov
add
or
jne
push
mov
lds
pop
popf
or
loope
repnz
scas
in
add
int3
and
and
test
daa
popa
or
cmpsb
add
add
mov
xor
xchg
ret
das
loop
jp
mull
nop
jne
adc
add
cmc
sbbl
cs
inc
in
rorl
add
xchg
std
sbb
adc
xor
cmc
mov
adc
fdivrs
push
pop
es
bound
jge
adc
mov
ficoml
or
les
fwait
cmp
inc
add
xor
aad
frstor
push
outsb
inc
or
pusha
or
scas
stc
dec
mov
cwtl
ljmp
or
popa
or
or
loopne
mov
pusha
rolb
gs
dec
mov
fdivrs
pop
cmp
mov
lret
jge
cs
and
mov
adc
mov
shrb
adc
or
xchg
loope
outsl
sub
mov
popa
dec
repz
mov
jae
das
enter
sbb
iret
repz
mov
shlb
inc
and
mov
test
sbb
mov
bound
fiaddl
stos
adc
lock
pop
xlat
das
ficompl
push
outsl
aas
dec
insl
cmp
shlb
iret
xchg
mov
xchg
ret
cwtl
add
insl
sub
pop
push
jbe
aaa
test
mov
scas
jge,pn
push
mov
clc
jge
adc
inc
jecxz
lock
xchg
adc
add
xchg
bound
and
mov
and
mov
ret
mov
jns
out
insl
add
and
add
lds
adc
jg
adc
xor
les
pop
inc
push
pusha
dec
mov
lock
add
jp
test
adc
xchg
or
jmp
scas
and
xor
not
lods
into
mov
lock
daa
dec
ja
add
rorb
daa
xlat
xor
lahf
jo
int3
jne
adc
js
push
das
sbbl
cmpsb
aam
jb
sbb
xchg
xor
jo
xchg
inc
ds
aam
add
aas
mov
cli
lcall
dec
test
sbb
xor
mov
ja
pop
outsb
lret
or
jns
test
xchg
into
push
mov
xchg
cmp
pop
aaa
pop
pop
data16
inc
sub
arpl
pop
repz
jne
fs
bound
bound
dec
xor
dec
jecxz
dec
jge
clc
ret
sbb
movsl
test
mov
push
stos
push
mov
jl
arpl
pop
sbb
lds
adc
loope
std
cmp
push
mov
imull
add
lods
adc
or
adc
pop
sub
movsb
inc
sbb
pop
inc
pop
pop
in
jne
sbb
mov
cs
push
pushf
push
xchg
out
rcrl
mov
mov
mov
or
inc
mov
sbb
xlat
stos
lret
pop
add
dec
mov
jnp
movsb
nop
adc
arpl
out
push
repnz
xchg
sub
and
inc
sub
rcll
push
mov
and
call
xorl
nop
mov
clc
xchg
inc
idiv
xchg
and
out
jb
mov
add
pop
sbb
shrl
sahf
iret
xchg
loope
sub
loope
jne
jecxz
xor
ss
das
xchg
nop
rcll
pop
enter
push
add
jnp
insb
jle
pushf
adc
roll
icebp
arpl
dec
add
aad
ret
popf
lds
cmp
fldenv
les
into
xchg
sti
stos
inc
or
cmp
sub
jbe
fistps
add
adc
push
xor
cwtl
test
xor
ja
xlat
mov
ja
lods
add
mov
into
xor
jb
pop
adc
xor
nop
jecxz
push
sahf
cmp
mov
pop
int3
sbb
sbb
mov
pop
outsl
rclb
dec
and
dec
in
adc
add
mov
inc
dec
stc
mov
cmp
daa
test
sub
ds
test
js
vmwrite
mov
lret
sbb
cmp
dec
inc
lret
xchg
inc
jae
or
ljmp
les
inc
pop
ds
and
loope
lea
sarb
jecxz
pop
cmp
mov
js
lock
or
dec
jl
xor
mov
inc
lods
add
or
cmp
cwtl
scas
and
aaa
fsts
xor
or
adc
js
adc
jo
pop
in
xor
sub
xor
jecxz
xor
cmp
data16
ret
cmp
adc
mov
sbb
repz
out
insl
mov
and
rorl
dec
bswap
add
jno
cmpsb
cmpl
ja
push
push
inc
repz
sbbl
out
sbbl
pop
lock
cmp
add
movb
add
or
pop
subl
lret
std
loopne
sbb
outsl
lock
dec
movsb
cli
andb
fisttpll
ret
mov
fstps
xchg
cmp
pop
mov
mov
movb
cmp
sbb
dec
adc
lret
and
or
sar
dec
es
xor
movsb
inc
dec
pop
addr16
pop
add
cmp
xor
cmp
inc
or
enter
out
pop
pop
push
or
data16
and
mov
jo
or
orl
add
cmp
mov
add
mov
push
dec
mov
testl
mov
push
repz
out
rclb
jecxz
sbb
xchg
pop
lods
cmp
mov
add
or
mov
call
push
or
loop
mov
es
outsb
cmc
cmp
ds
cltd
sahf
cmpsl
jbe
sbb
push
inc
and
adc
sarb
shr
repz
mov
dec
mov
mov
inc
icebp
adc
and
mov
outsl
cmpb
fstpl
iret
and
cmp
hlt
push
loope
or
pop
xchg
rorl
xor
lods
jb
jp
ret
jp
add
rol
pop
cmp
sub
scas
add
or
adc
jge
mov
inc
cmpsb
pop
loop
or
pop
inc
inc
and
pop
xchg
insw
nop
sbb
int3
dec
jmp
mov
xor
jmp
sbb
test
gs
dec
xor
mov
gs
adc
mov
or
rolb
sbb
pop
add
mov
addl
add
sub
repz
iret
sub
test
mov
lahf
aaa
test
shl
punpckldq
push
push
daa
jne
pop
jne
dec
xor
je
pop
xorl
adc
jne
cmp
pop
enter
pusha
mov
add
add
sahf
test
pop
sbb
xchg
mov
hlt
add
and
xchg
push
add
push
test
jb
add
mov
adcl
stc
hlt
sbb
dec
out
decl
mulb
les
out
mov
stos
andb
leave
fistpll
push
sbb
inc
pop
inc
outsb
inc
xchg
mov
fadds
push
fsubrs
push
xchg
dec
xor
jb
addr16
inc
lret
adc
jge
cs
xchg
or
movsl
xor
stos
pop
in
je
push
mov
add
cmp
xchg
mov
les
dec
pushw
xor
xchg
jbe
popa
cmp
stos
mov
xorb
jmp
push
adc
jnp
xor
insb
insb
popl
psubq
aad
add
add
jg
pop
pop
push
cmp
and
push
in
push
cmp
sub
add
iret
jno
shlb
xchg
dec
cmp
sbb
push
xor
in
push
inc
add
repz
filds
sbb
pop
pop
push
add
dec
fnstcw
adc
hlt
lods
xchg
or
mov
negl
call
push
stos
add
and
push
shrl
push
decb
push
add
inc
or
sub
and
and
cmpsb
aaa
in
mov
aas
adc
pop
sbb
lahf
adc
cmpsl
daa
adc
add
test
mov
or
mov
cmp
inc
shr
out
pusha
pop
scas
inc
lahf
push
mov
and
sub
and
es
push
lods
xor
fwait
inc
das
push
push
sbb
add
js
or
sti
enter
orl
sti
xchg
add
dec
stc
iret
cmp
cld
les
xor
or
xor
push
shll
add
jae
pop
daa
lret
adc
cmp
pop
sti
jmp
add
inc
roll
mov
inc
jp
cmp
imul
push
pop
mov
mov
add
ret
fcompl
rclb
mov
push
inc
mull
lods
ss
and
fstl
inc
xchg
pop
cli
fadd
sub
and
or
test
stc
ret
mov
add
xor
mov
or
imul
mov
stc
mov
sbb
std
mov
mov
test
loope
adc
sub
hlt
adc
lahf
cmpl
in
dec
sbb
add
in
or
outsb
repz
sbb
xor
icebp
gs
iret
add
sub
sbb
sahf
testb
and
scas
fsub
push
or
and
xor
js
jb
dec
daa
add
pop
push
rolb
cmpsb
js
push
mov
dec
in
jp
or
sbb
mov
fwait
dec
notb
xchg
inc
testb
or
out
add
push
aaa
js
mov
or
xchg
xchg
mov
push
jo
and
sbb
sbb
loopne
mov
loope
dec
push
or
add
fcomip
xor
movsb
xorb
or
test
ja
sti
bound
mov
pop
rcll
mov
es
fmull
xor
mov
hlt
ret
mov
call
push
push
cli
mov
lahf
mov
ds
fisttpl
arpl
int3
jecxz
mov
insl
jo
addl
add
inc
fcomp
or
loope
push
bound
push
call
fadd
or
test
push
bound
les
ss
mov
mov
or
pop
or
jo
mov
fwait
shr
mov
test
hlt
jns
cmpsb
fstpt
jl
ret
and
scas
dec
mov
xchg
orl
popl
sahf
negl
loopne
and
push
or
rorb
sbb
aas
sub
xchg
negl
and
xchg
mov
fmulp
loopne
lods
adc
aaa
cmp
push
sbb
out
cld
xlat
and
cmp
dec
out
push
ss
push
jge
out
sub
mov
insb
out
into
jne
inc
push
xor
add
or
push
add
mov
xchg
and
push
out
add
imul
add
adc
fidivs
gs
push
in
cmp
mov
push
insl
test
add
rclb
rclb
add
adc
and
shr
mov
xchg
add
sti
add
popf
xchg
cmp
loop
fcos
pop
xor
fwait
es
pop
and
rorb
stos
fs
jno
pushf
inc
cs
mov
mov
pop
das
out
and
push
bound
add
fisubl
mov
cltd
inc
call
mov
fiadds
add
dec
out
pop
inc
pop
js
adc
sbb
scas
mov
nop
xor
repnz
stos
push
pop
jmp
xor
mov
subl
lret
push
xor
xor
xchg
jl
or
add
pop
inc
imul
add
jne
xor
and
loop
jae
lock
push
jo
sub
aas
pop
and
mov
xor
mov
add
mov
or
sbb
push
jp
arpl
jns
inc
inc
push
cmp
cld
inc
dec
loope
pop
sub
xchg
je
lret
cmp
mov
test
cltd
pop
pop
loope
jno
roll
fcoml
pop
es
mov
jmp
adc
jle
xor
cmp
ror
xor
lret
xchg
cmpsl
adc
adc
fdivrs
stos
push
ljmp
rcrl
cmp
pushf
in
add
cmp
mov
out
lock
lcall
xlat
rolb
lock
sbb
push
add
mov
stos
repnz
call
adc
push
shrb
xor
lahf
fs
gs
loop
sub
add
outsb
ljmp
xchg
push
cmp
and
inc
dec
sbbb
pop
mov
xchg
das
sbb
pop
adc
jmp
xchg
mov
es
xchg
jo
mov
xor
mov
mov
xchg
pop
lret
cwtl
pop
cmp
int3
inc
sub
fsubs
loopne
sbb
mov
stos
mov
xor
aaa
popa
xchg
scas
push
ds
in
repz
mov
shll
dec
fwait
mov
ret
les
jo
mov
jbe
inc
pop
pop
enter
add
and
push
or
adc
mov
bound
add
jne
fdivs
mov
mov
andl
mov
jb
insl
orb
mov
and
push
fidivrl
lret
sahf
jns
scas
test
add
roll
and
push
inc
movsl
mov
inc
sub
xchg
lods
and
add
rcrl
mov
outsb
fiaddl
cmp
outsb
es
jl
es
jo
dec
and
icebp
xor
push
jo
sbb
inc
add
xor
jbe
pop
pop
aas
ja
or
mov
adcl
pop
and
xchg
cs
roll
cmp
sub
mov
add
push
push
inc
lds
enter
push
add
push
mov
mov
cmp
xchg
pop
ja
iret
push
or
sub
cmpsb
pop
or
flds
and
inc
in
fadd
mov
mov
mov
punpckhdq
ficompl
mov
pop
mov
ja
adc
fwait
int
mov
fxch
jle
dec
pop
xor
or
andl
cwtl
dec
pop
fcom
cmp
frstor
ret
jno
fadds
mov
xor
inc
out
fldt
pusha
mov
aam
mov
js
mov
out
jns
push
add
clc
add
push
mov
jg
pop
stc
cmpl
repnz
daa
enter
add
xchg
sub
adcl
push
sub
pop
mov
push
lods
mov
push
sbb
xchg
adc
lret
loope
mov
xor
or
push
push
add
int3
fcomps
shl
jno
jmp
push
xchg
testl
and
in
sub
rolb
inc
jae
dec
xor
pusha
lods
insl
push
ljmp
jo
mov
inc
mov
or
cmp
test
xor
add
stos
fiadds
sub
sar
outsb
xchg
add
add
mov
and
lods
dec
sbb
mov
or
cmc
inc
ret
sub
mov
sbb
aad
jp
ror
sbb
jo
jl
add
stc
jne
jne
test
rcl
es
push
jo
clc
sub
jns
xor
jne
mov
jb
pop
adc
pushf
mov
mov
adc
ss
push
mov
push
dec
xchg
pop
mov
push
cs
test
pop
pop
add
dec
movsb
sbb
testl
popa
clc
dec
rcll
mov
test
xor
pop
xorb
sub
loope
ds
movsb
sahf
int3
pop
rolb
sbb
sbb
popl
aam
add
sbb
sbb
push
vprotq
incb
ret
push
cwtl
cld
ret
pop
xchg
add
pop
sbb
out
repz
loope
ret
fidivrl
push
pop
add
shll
gs
cli
jecxz
loopne
add
mov
push
fs
mov
sbb
insb
push
cmp
push
push
sbb
outsb
subl
adcl
dec
cmp
cmp
mov
out
xor
cs
test
ret
or
js
inc
das
enter
sub
int3
dec
out
pop
sub
pop
push
xchg
xorl
dec
cli
ja
jno
adc
jo
es
pop
cwtl
pop
mov
daa
jno
dec
mov
jge
shrb
fs
frstor
dec
ffreep
es
ret
push
test
push
les
pop
mov
cmc
arpl
xor
rorb
adc
adc
fpatan
clc
xor
and
pusha
nop
aam
orb
lods
lods
jnp
sub
into
cmp
push
leave
or
inc
adc
fsts
scas
repz
jae
jg
push
xchg
or
jnp
mov
add
mov
sub
or
shlb
stc
gs
roll
xchg
pop
sub
mov
shrb
push
mov
push
xchg
movsb
xlat
mov
mov
inc
push
mov
cld
mov
push
nop
scas
push
iret
or
push
icebp
inc
lods
sub
xchg
in
pop
cmc
dec
inc
or
orl
sub
sets
mov
add
hlt
and
rcr
shll
push
pop
xlat
sbb
push
xor
xor
push
inc
adc
addr16
enter
sbb
pushf
dec
dec
jecxz
and
push
aad
xchg
mov
mov
into
loopne
xchg
cltd
mov
add
lcall
or
push
std
fwait
enter
sbb
xchg
inc
inc
orl
push
shrl
add
dec
mov
test
ret
iret
adc
pop
pop
cmpsl
and
ret
sar
daa
or
repz
loopne
test
or
rolb
test
and
cmpsl
andl
xchg
lods
scas
cld
sar
scas
hlt
pop
movq
lcall
stc
cmp
and
or
js
push
sbb
push
xor
sarl
mov
pusha
push
sub
push
push
int
add
sub
lea
xor
sub
mov
cmp
dec
jl
out
cmp
mov
jo
loop
push
imul
iret
lcall
loopne
sbb
push
pop
mov
or
test
mov
jne
xor
cmp
aaa
mov
or
and
jg
ja
inc
jl,pn
iret
test
add
and
mov
fidivs
xor
cld
ss
mov
mov
out
rorb
add
mov
dec
testb
icebp
push
dec
cld
ss
leave
push
lret
hlt
and
cld
jo
push
and
sub
add
jp
or
mov
pop
or
les
sub
xlat
jmp
mov
inc
jmp
add
mov
jle
inc
sbb
pop
mov
add
cmp
mov
lods
jg
push
pop
imul
dec
js
test
jno
and
pushf
or
inc
xchg
inc
stos
or
imul
shr
and
add
ss
xchg
sub
loopne
add
cmp
stos
inc
sbb
xchg
icebp
and
lea
add
sub
add
sbb
adc
daa
mov
dec
insb
insl
cmpsb
or
xor
mov
mov
js
push
and
inc
mov
es
ljmp
dec
loop
rolb
push
rolb
das
jne
pop
sbb
mov
add
leave
pop
push
cltd
repz
jo
sub
inc
sub
add
push
inc
jge
movups
xor
out
cmp
sub
leave
lea
pop
orb
str
push
sub
cmpsb
or
add
mov
call
push
push
scas
lds
movsb
jmp
fcoms
aaa
mov
in
lods
movsb
ret
ret
or
mov
or
cmp
mov
and
mov
sub
mov
mov
cmc
add
jo
icebp
push
ljmp
pushf
sbbl
or
dec
fldcw
test
rol
jb
cmc
int3
jno
pop
ss
jg
dec
sbb
mov
mov
jo
sbb
addr16
das
dec
mov
jo
add
scas
cmp
fwait
mov
sbb
lds
and
stos
inc
add
jle
pop
push
pop
pushf
mov
adc
xchg
cmp
jp
jns
sbb
adcb
cmp
and
inc
mov
pop
pop
adc
cmp
dec
hlt
mov
orl
xlat
jle
cmp
xchg
push
pop
and
aad
aaa
fnstsw
or
add
aam
adc
ds
sti
jno
or
dec
or
shrb
mov
movsb
movsb
add
flds
pop
pop
inc
rcll
mov
enter
jne
add
insb
xchg
es
jno
xchg
jo
mov
movsb
mov
add
dec
inc
adc
lahf
outsb
adc
das
jne
in
add
add
and
inc
dec
xchg
imul
mov
ds
cmp
ret
xlat
pop
push
clc
aam
ss
add
dec
stc
iret
adc
pop
push
gs
aam
push
xchg
popa
test
xchg
arpl
jge
mov
inc
popf
lods
add
push
sbb
pop
push
lahf
fsubrs
rcll
mov
mov
pop
adc
aaa
into
imul
mov
lock
push
lock
hlt
ficoml
cmp
sbb
jnp
cmp
sbb
aam
jno
mov
add
frstpm(287
dec
push
aaa
out
stos
lods
jo
loopne
add
sbb
cs
jne
hlt
ret
loop
xor
xchg
push
pop
std
sub
out
jo
push
push
dec
stc
jle
arpl
push
js
outsl
xor
push
sbb
outsb
fisubl
icebp
fstps
and
dec
pop
daa
mov
pop
scas
cmpsl
out
jmp
cld
mov
incl
mov
jmp
fbstp
add
in
xlat
test
xchg
add
lock
icebp
and
leave
and
mov
outsb
decl
cmp
cmp
pop
test
push
sbb
lahf
inc
sbb
test
out
pop
subl
addr16
cmp
movsl
scas
inc
sub
mov
push
es
stos
pop
add
sub
and
dec
aaa
dec
pop
stos
mov
lret
mov
jbe
loop
icebp
mov
dec
xchg
push
xchg
pop
imul
lock
arpl
test
sub
add
orb
lea
inc
sub
inc
sub
dec
pop
imul
jnp
inc
adc
xor
shlb
inc
cmpb
add
imul
fbld
sbb
push
rcrb
adc
adc
in
or
pusha
aam
enter
pop
push
push
mov
jnp
jbe
stos
insb
and
jo
loope
addr16
mov
push
adc
loopne
pushw
fwait
mov
push
loop
inc
xor
pop
pop
fdivrl
jle
push
loopne
mov
mov
push
cli
and
sahf
mov
push
shlb
mov
in
mov
push
rclb
test
arpl
sbb
adc
push
add
or
push
imul
push
fcoml
and
movsl
and
add
stc
sbb
ja
mov
mov
shlb
and
push
je
roll
sub
mov
arpl
sbb
push
or
mov
popa
les
andl
or
fwait
ds
sub
pop
fbld
iret
loopne
test
xchg
xchg
leave
inc
stos
aaa
jnp
ds
cmp
sti
je
pop
cli
loop
sbb
or
and
movsl
xchg
adc
mov
jns
add
int3
inc
sub
loopne
push
cmpsb
jecxz
inc
push
cmpsb
nop
dec
fisubrs
je
sub
je
and
cmpsl
jbe
mov
clc
cmpsb
outsb
daa
mov
push
jno
lock
cmp
lahf
mov
jae
int3
test
push
sub
jae
jnp
mov
inc
addl
jnp
cmp
inc
or
outsl
ja
push
sbb
dec
or
jno
aas
shlb
push
push
mov
iret
xchg
add
jg
jne
push
mov
sub
push
mov
mov
decl
stc
cld
rcll
inc
pop
push
popf
dec
xchg
mov
ret
repz
movsb
mov
xchg
nop
xor
lods
adc
pop
push
inc
pop
jmp
sub
sbb
je
dec
pop
loop
xchg
orl
xor
add
cmc
add
es
mov
adc
ret
add
and
addb
jl
cmp
mov
aam
jne
jle
test
add
repz
jl
sub
pop
stos
sub
sub
pop
cltd
sbb
sbb
ret
ret
mov
dec
hlt
clc
mov
je
lahf
sub
mov
bound
mov
sahf
int3
or
jecxz
add
ret
jmp
and
inc
cmpsb
cmp
and
je
bound
jg
add
jno
imul
xchg
pop
dec
lcall
js
and
sti
push
fidivrl
push
sahf
cmp
adcl
mov
push
pop
and
test
movsb
mov
mov
movb
into
cltd
cmpb
inc
mov
outsb
adc
fxch
jno
mov
adc
lahf
lret
pop
push
add
aad
outsl
dec
jnp
and
int
inc
dec
sbb
add
sti
roll
addr16
add
xchg
mov
out
es
or
or
cltd
add
xchg
arpl
dec
outsl
orl
in
roll
les
inc
xchg
xchg
xchg
lock
xor
loope
in
imul
popa
pop
push
push
gs
scas
scas
iret
push
in
aad
mov
dec
popa
outsl
je
mov
iret
inc
mov
and
inc
dec
and
jge
add
xlat
inc
sbb
jle
movsb
push
call
mov
out
data16
inc
xor
add
mov
rolb
mov
pop
dec
popf
scas
test
or
or
mov
aam
out
add
aas
push
mov
fwait
mov
mov
mov
loope
pop
adc
pop
push
jmp
mov
inc
jle
mov
mov
push
pop
mov
and
jae
popf
insb
icebp
inc
arpl
fsts
ret
add
pop
rcrl
or
lcall
and
push
fcomi
xchg
lock
cmp
push
int3
dec
aas
mov
dec
mov
rcr
push
mov
leave
int3
insb
mov
dec
ja
fwait
inc
xchg
adc
sbb
cmp
inc
add
scas
xchg
pop
lea
or
mov
and
scas
jg
or
mov
loopne
scas
das
push
ret
jb
mov
popf
hlt
lret
xor
sbb
and
push
test
fucomp
outsb
mov
aaa
popa
imul
imul
jp
ja
push
lods
call
fdivrs
movsb
cmp
jne
subb
dec
push
dec
inc
inc
imul
dec
rorb
cmpsl
push
xor
dec
fsubr
scas
mov
andl
add
sub
mov
sbb
mov
aaa
xchg
out
add
sbb
or
or
jne
dec
and
fdivrs
pop
jecxz
push
lods
es
pop
push
inc
xchg
xor
push
xchg
sbb
lar
scas
push
lret
lds
nop
dec
xor
nop
loopne
jo
pusha
sub
inc
fisttpll
iret
jle
xcrypt-cfb
lock
or
sar
outsl
lods
aaa
xchg
paddusw
mov
adcb
mov
mov
adc
adc
jae
cmp
loop
addr16
lret
iret
adc
mov
rcll
fxch
and
faddl
nop
lret
xchg
adc
mov
mov
or
xor
int
pop
dec
pop
add
scas
push
adc
ljmp
addr16
das
jbe
sub
mov
add
cld
mov
and
pop
js
sbb
lret
loope
mov
cmp
xor
sbb
dec
nop
mov
dec
and
mov
dec
in
jno
pusha
pop
jns
ds
movsb
and
in
add
inc
les
sbb
test
dec
loop
stos
rolb
sub
xor
add
sub
mov
jne
notb
test
push
stos
mov
loopne
pusha
pop
pop
je
jl
dec
leave
add
aas
push
repz
std
scas
mov
sub
inc
push
cmp
jge
out
mov
cmp
pop
int
jl
pop
mov
movzwl
addb
pop
aas
cmc
push
aad
mov
ss
lods
pushf
lds
mov
xchg
iret
xlat
jne
stos
or
gs
push
mov
or
pop
ret
pop
add
pop
xchg
addr16
add
cmp
mov
pop
and
cmp
mov
dec
push
pop
dec
lods
xchg
pop
adc
hlt
xor
add
inc
daa
or
stos
or
mov
sub
pop
hlt
jbe
je
aaa
xchg
and
or
into
lock
xor
lds
outsl
call
push
cld
mov
scas
mov
int
movsl
lock
rolb
sarb
fsts
lods
jg
shrb
and
mov
sub
aad
add
hlt
test
ret
sbb
subl
or
jnp
fcompl
inc
stos
ret
and
fcomip
pusha
add
mov
jecxz
jle
pop
nop
pusha
repnz
out
pop
icebp
or
shll
sbb
jae
cmp
add
mov
lods
xor
xchg
scas
sub
iret
mov
repnz
in
stos
ror
push
call
cmp
add
pop
pushf
mov
adc
aaa
iret
mov
mov
and
enter
mov
or
xor
and
adcl
jno
cmpsl
iret
ret
or
xchg
sbb
xlat
rorl
pop
jno
and
cmp
push
inc
movsb
aas
mov
fs
je
cmp
inc
fwait
adc
enter
and
dec
jle
and
jne
push
fiaddl
pop
in
mov
ss
xorl
mov
fsts
cmp
mov
push
dec
in
mov
mov
clc
outsb
sub
xor
dec
movsb
loopne
sub
add
cmp
adc
mov
jo
mov
or
sbb
fidivl
cmp
push
add
sbb
or
pop
sub
daa
movsl
xchg
adc
and
loopne
jecxz
sbb
xor
popa
dec
mov
popa
fwait
dec
xlat
push
rolb
div
roll
fldl
mov
lock
fwait
ja
pop
rol
rolb
xchg
rorl
jmp
lret
bound
sbb
dec
pop
es
xor
dec
stos
inc
out
cltd
mov
mov
inc
inc
inc
insl
pop
pop
or
xchg
jae
inc
xor
xchg
cmpsl
mov
scas
les
cld
jecxz
mov
cmp
jmp
sub
xchg
xlat
mov
xor
adc
inc
rorl
xchg
sbb
dec
sbb
repz
jo
mov
nop
es
dec
jne
mov
rcl
pcmpeqd
outsb
cmc
fs
pushf
cmpsb
inc
imul
mov
cmpsb
mov
mov
sbb
pop
mov
inc
push
ret
mov
aas
mov
xlat
push
jns
mov
mov
adc
jns
jo
jo
rorl
mov
dec
pop
ja
jb
and
jnp
jmp
inc
and
inc
pinsrw
xchg
mov
iret
and
daa
push
sahf
mov
int
loop
mov
insl
int3
jg
ss
sahf
pop
lahf
cli
add
in
arpl
into
push
xor
sbb
add
add
gs
jb
jno
and
nop
aas
xor
sub
xchg
cmp
leave
shl
cwtl
cs
xchg
mov
or
inc
jb
rol
inc
push
and
mov
out
mov
jp
mov
push
daa
mov
mov
inc
pop
dec
xor
loop
mov
jp
dec
scas
xor
lret
and
or
daa
push
addb
add
add
cmc
pop
ret
fcomps
dec
pusha
sbb
stos
jmp
lods
fs
jp
sub
mov
push
sub
jno
jnp
pushf
shlb
and
and
shrb
stos
imul
add
inc
outsl
cmp
aas
sbbl
sahf
pop
push
addr16
pop
add
mov
in
ret
ljmp
rep
xchg
xchg
mov
loope
sbb
ljmp
push
cmp
in
insl
and
pop
push
pop
loope
test
scas
test
stos
stc
add
ss
xor
xchg
jno
or
and
add
pop
lods
orl
ret
adc
shl
call
cmp
pushl
roll
jno
inc
jns
ja
stc
add
push
or
mov
pop
lcall
loope
inc
jmp
in
shll
pop
lods
lea
and
pusha
dec
inc
adc
and
loope
or
aad
iret
lods
inc
push
inc
movsl
rep
js
js
popa
mov
es
and
push
dec
mov
fdivs
sti
sbb
cmp
jbe
mov
lret
adc
add
and
movsb
mov
sarb
add
sub
or
and
dec
loopne
mov
or
orl
js
push
sbb
mov
push
sbb
add
add
xor
nop
cmp
inc
ret
loope
ret
jnp
cmp
cmp
push
in
mov
add
dec
daa
push
mov
xor
pop
imul
js
lds
lock
ret
adc
cmp
add
add
sub
sbb
inc
popa
or
inc
ud1
cmp
ljmp
xchg
sub
fmulp
mov
jbe
mov
das
and
rorb
cmp
into
pop
lret
call
aam
test
out
in
loope
mov
movsb
jge
mov
fnsave
add
mov
dec
sub
test
fdivrl
mov
mov
push
mov
dec
pop
push
pop
mov
add
xchg
inc
rcr
cmp
inc
out
loopne
push
icebp
int3
lahf
pop
jl
push
adc
mov
jne
sbb
faddl
sbb
shlb
pop
add
xchg
into
dec
cmp
xor
push
test
and
fwait
add
push
ds
punpcklwd
movsl
ret
arpl
sbb
mov
sub
je
cli
scas
js
jecxz
mov
jmp
sbb
iret
push
jecxz
ja
insl
test
sbb
fdivs
xchg
nop
xor
add
pop
add
xor
mov
inc
test
jns
pop
mov
add
xchg
jae
rolb
fcoms
pop
sub
inc
enter
inc
cwtl
and
je
and
gs
mov
js
pop
mov
rolb
test
pop
add
les
or
sbb
nop
fwait
push
inc
divb
scas
jns
jge
and
movsb
sbb
test
mov
mov
in
mov
loope
negl
push
or
lock
xor
and
and
sbb
popf
out
out
adc
sub
push
jns
loope
xchg
dec
iret
pushf
mov
scas
and
cmp
xchg
and
lcall
mov
lds
mov
sbb
pusha
jbe
push
ss
rcll
jle
into
add
pop
xor
enter
loop
test
mov
sbb
mov
jbe
xor
imul
mov
add
loope
pop
dec
sub
or
xchg
push
inc
cmp
lock
mov
popf
icebp
rolb
jge
filds
xor
and
add
dec
shr
decl
movsl
mov
shll
add
xchg
mov
inc
cli
jg
mov
lret
add
pop
lods
mov
xchg
fdivrp
test
sbb
mov
loopne
ss
hlt
sub
xor
sbb
mov
mov
movsl
jbe
dec
mov
cli
push
add
mov
add
xchg
pop
add
fbld
push
iret
sbb
lahf
lret
test
into
into
sbb
sbb
not
dec
mov
fwait
sbb
xchg
push
inc
push
fnstenv
scas
and
fbstp
mov
jl
test
and
call
div
dec
loope
fwait
pop
fstpt
push
popa
or
mov
jp
pop
clc
adc
cmp
xor
push
or
pop
inc
adc
sub
xlat
mov
jo
xor
adcb
daa
push
push
aaa
inc
shl
inc
add
iret
addr16
dec
movsb
xorb
mov
push
xor
mov
bound
ja
loopne
adc
loopne
ds
mov
push
push
push
mov
sarb
adc
mov
popf
mov
aaa
mov
mov
mov
popf
push
push
xchg
fidivrl
aad
jo
cmp
or
aad
sub
mov
repnz
js
scas
sbb
outsb
mov
dec
inc
adc
cmp
popa
xor
inc
xchg
jns
jp
inc
imul
xchg
sbb
test
ja
push
or
in
add
pop
push
cmp
jne
or
adc
mov
adc
pusha
bound
adc
sbb
cmp
add
sub
xor
es
mulps
dec
push
shll
test
loope
icebp
js
dec
jne
cmp
push
push
adc
xchg
data16
int3
push
xor
add
loope
shll
ret
rcrl
test
aaa
and
pop
push
push
mov
jno
scas
push
insb
lahf
jo
mov
adc
int3
or
pop
add
xchg
or
pop
pop
je
adcb
sbb
inc
adc
push
out
rol
or
test
lock
xor
xchg
daa
mov
je
cmp
adc
xchg
cltd
adc
cmp
dec
or
push
inc
jno
into
adc
lahf
cmc
push
dec
out
lock
es
and
fsubl
add
out
add
jo
les
and
fstpt
out
sub
lods
icebp
cmc
jle
and
jb
or
inc
shll
lea
jae
je
int3
xchg
popa
imul
sahf
cmp
aas
mov
mov
push
bound
bound
ss
cmp
pop
and
jle
lret
jne
jno
movsb
cmp
push
pushf
jo
inc
jo
sub
adc
mov
mov
sub
and
cmpsl
shl
adc
pusha
scas
imul
mov
jge
push
sbb
push
inc
cmp
mov
and
and
sbb
inc
shr
or
outsl
xor
or
or
les
pushf
and
push
cld
movb
inc
jae
into
or
nop
and
pop
adc
and
dec
ja
aaa
push
xor
ja
and
lods
push
pop
test
jmp
call
push
cs
push
scas
sbb
dec
fsubr
aam
or
jo
push
je
rorb
xchg
out
cld
sarb
shll
add
lods
pop
aas
jae
xlat
sbb
enter
int3
into
jbe
mov
lods
lock
mov
lock
es
cmp
jb
add
in
ds
hlt
jo
stos
stos
and
cmc
stc
push
cs
or
xchg
sub
jo
mov
fsubrs
cmp
rcl
in
inc
add
jb
sub
pusha
add
test
add
mov
xor
mov
xor
mov
and
push
test
sahf
push
xor
add
jnp
mov
sbb
sarl
cmpb
xchg
rorb
ret
push
fwait
lock
xor
add
add
aaa
add
xor
jmp
pusha
cld
je
push
and
push
sarl
push
add
jnp
out
jge
lcall
sub
mov
popf
flds
fidivs
shrl
inc
mov
push
xor
xor
add
or
leave
lods
bound
ret
addr16
jle
and
rsm
outsb
and
add
das
or
sbb
insb
pusha
insl
loop
stos
jne
in
shll
jno
add
sti
in
mov
das
sahf
in
xor
jb
xorb
ret
inc
hlt
mov
push
ds
lea
scas
push
add
xor
sub
mov
and
cmp
sarl
bound
inc
xor
cmp
cmp
je
push
jle
push
inc
cmc
es
jo
or
clc
dec
mov
push
in
mov
inc
dec
scas
push
aaa
out
pop
cmp
sbb
sahf
mov
jnp
pop
inc
sub
or
add
sbb
mov
mov
mov
mov
xlat
jle
imul
fcmovnu
or
lds
push
dec
xlat
into
xchg
int3
pop
mov
mov
je
dec
insl
cmp
test
pushf
or
idivb
and
dec
xor
aad
inc
lods
rcrb
sbb
jno
ret
test
loopne
out
andl
inc
shll
xchg
in
xor
stos
std
pop
mov
pusha
mov
dec
pop
loope
aad
adc
test
filds
pop
daa
and
ja
sahf
pop
ja
inc
lods
mov
and
mov
push
cmp
popf
jae
and
pop
or
sub
addb
jae
sbb
jno
add
push
mov
out
push
sub
sbb
mov
int3
imul
lea
pop
mov
icebp
fisubrs
iret
add
add
lds
xchg
subl
xorb
fwait
mov
hlt
dec
shrb
mov
or
adc
cwtl
mov
mov
jns
cltd
push
push
cmp
dec
es
mov
and
jae
aaa
mov
push
dec
mov
aaa
call
rolb
aaa
inc
fdivs
clc
mov
add
outsb
pop
adc
addr16
jmp
out
loop
mov
and
or
sbb
xor
in
dec
dec
cmp
add
repz
inc
lock
xchg
push
sbb
aas
iret
inc
mov
jo
ljmp
push
xor
clc
push
imul
add
daa
aad
mov
sqrtps
ret
cmp
dec
or
out
add
stos
jecxz
mov
loopne
icebp
shr
inc
xor
sub
or
pop
rclb
xchg
xlat
cmp
cli
sahf
push
imul
rclb
jno
dec
sub
dec
dec
out
sbb
add
cltd
dec
mov
jecxz
xorl
scas
adc
push
xchg
fwait
pushf
adc
pop
fsubrs
sbb
hlt
lret
mov
xor
fsts
enter
mov
jmp
in
fisubs
and
pop
cmp
shl
cs
sbb
mov
add
jo
iret
rcr
mov
push
add
out
xor
incl
test
test
out
je
mov
rorb
pop
push
insb
jno
insb
pop
xchg
je
and
nop
cmpsl
rcrb
in
pop
sbb
push
cmp
loopne
push
xor
sub
sub
pop
sbb
cmp
cmp
add
loop
incb
mov
sbb
adc
cmp
movsb
xor
dec
xchg
add
adc
sbb
xor
jo
mov
aam
jp
adc
push
out
out
imul
loop
push
xor
lret
push
add
inc
stos
jp
and
pop
lods
scas
icebp
add
loop
mov
xchg
xor
subb
or
test
lcall
jne
push
imul
adc
pop
and
add
loopne
add
adc
jg
xor
jno
in
ljmp
adc
pop
mov
add
jge
dec
mov
ja
dec
jle
dec
or
push
mov
xor
fsubrl
mov
cmp
add
mov
add
sub
and
push
pop
lods
pop
pop
rcrl
daa
fldt
and
lret
stos
push
mov
adc
adc
fstps
adc
in
mov
out
or
inc
and
mov
imul
xor
mov
lahf
pop
lahf
push
loopne
push
sbb
stos
fldt
lahf
shl
arpl
shrl
push
xchg
imul
loop
jns
out
addr16
nop
or
push
jne
pop
jbe
shlb
pop
out
jnp
push
negb
and
dec
clc
xchg
mov
add
cmp
movsb
clc
sbb
adc
std
shll
jno
icebp
ljmp
popa
adc
jo
jo
scas
vmwrite
loope
movsl
cmc
loope
fimull
es
out
pusha
lds
pop
sbb
shl
scas
add
mov
push
lcall
inc
ficoms
pusha
mov
mov
bound
add
push
sub
das
lods
inc
sbb
rcll
mov
adc
sub
call
sub
add
psadbw
sbb
imul
lea
jb
sbb
push
imul
xor
or
loopew
popa
loopne
ret
inc
xor
notb
sub
addb
add
test
and
dec
fwait
inc
and
loope
mov
and
sub
add
test
pop
or
xchg
cmpsb
add
jo
push
xor
and
sbb
pop
cmp
push
dec
dec
les
das
scas
inc
lods
sahf
add
ret
jne
loop
jb
adc
or
push
jns
sub
xor
dec
adc
insb
test
add
mov
adc
or
pop
and
loop
and
es
insl
xchg
scas
jo
or
push
into
add
imul
sub
jno,pn
in
inc
jl
leave
leave
or
sub
enter
push
adc
inc
push
movl
cmpsl
and
aam
movb
jecxz
bound
add
or
xchg
mov
inc
xchg
inc
dec
push
cmp
in
popa
loope
inc
aam
hlt
mov
aad
inc
pop
adc
ret
js
and
mov
inc
arpl
or
push
adc
inc
sbb
outsb
mov
popa
ljmp
mov
int
cmpsl
and
int3
bound
movsb
dec
sub
loopne
add
mov
std
xchg
mov
adc
jb
outsl
add
scas
mov
add
xchg
aad
out
fstpt
and
sbb
xor
and
adc
outsb
pand
ret
pop
add
pop
adc
shlb
xlat
call
push
ret
jmp
mov
jecxz
shll
xor
and
sub
fisttpll
out
add
add
xchg
rorl
cmpsl
xor
fdivrp
aaa
lock
or
loopne
ret
test
je
push
cmp
cwtl
xor
setne
add
bound
loop
dec
jmp
aaa
and
add
or
fadds
cmp
add
mov
or
loop
pop
push
aam
test
mov
imulb
inc
pop
adc
scas
data16
push
shll
mov
sbb
pop
cs
and
imul
ss
inc
pop
and
adc
out
jnp
mov
sbb
add
sbb
dec
push
movb
or
imul
shrl
lods
xchg
sub
or
or
arpl
or
pop
stos
mov
dec
enter
mov
adc
insb
add
mov
add
sub
aad
fmull
aaa
ret
xchg
cwtl
les
add
push
adc
js
cmp
add
and
shll
in
shll
mov
sbb
xchg
xchg
lock
and
data16
pop
rorl
fisubs
inc
pop
add
movsb
and
in
xchg
mov
ja
mov
scas
push
sub
mov
sbb
out
lods
pop
orb
and
fdivs
push
cld
fadd
add
and
sub
leave
or
add
shll
mov
dec
jecxz
or
sbb
leave
jne
pop
pusha
out
cmp
adcl
dec
mov
sub
sbb
jno
dec
nop
add
sarl
adc
or
add
ss
pop
xor
popa
inc
mov
adc
pop
ss
mov
or
inc
in
xchg
xchg
add
and
mov
jmp
nop
xchg
iret
push
imul
aam
xchg
sahf
jno
pop
pop
adc
xchg
xchg
out
and
test
subl
sub
stc
add
mov
mov
mov
popa
inc
sbb
fwait
popa
pop
add
mov
dec
lret
aaa
roll
add
cmp
cmp
or
movb
mov
lods
adc
test
pop
les
adc
inc
out
out
mov
add
and
dec
jo
xor
in
out
sub
sbb
fldcw
adc
add
or
sbb
out
fisubs
enter
mov
ss
js
mov
push
testl
inc
mov
js
mov
pop
loopne
cwtl
xchg
movsb
add
sub
outsl
repz
shlb
rcr
pushf
mov
arpl
jnp
pop
iret
mov
mov
cmpsl
sbb
push
pop
xor
push
orb
mov
jbe
push
in
jnp
in
fucomip
cld
sbb
sub
movsb
push
addr16
orl
pop
add
call
mov
add
movsb
adc
sbb
sahf
adcl
fmuls
ljmp
test
movsb
testb
cmp
push
dec
cmovo
cmc
add
jb
push
push
push
mov
adc
fld
imul
jl
stc
xchg
imul
test
jp
push
xor
fdivrs
int
sbb
xchg
push
test
or
dec
iret
fcmovbe
cmp
xchg
and
sbb
outsb
rolb
push
inc
outsb
test
and
mov
and
loope
leave
enter
add
lret
pop
push
out
dec
clc
subb
imul
pop
les
repz
jle
pop
mov
xchg
pop
mov
in
or
sub
sub
inc
les
push
sub
xor
push
adc
sub
mov
test
aam
repz
lret
pop
or
call
sbb
ljmp
rorb
lea
bt
movsl
addr16
sbb
aaa
adc
and
mov
scas
sbb
fadds
mov
push
dec
outsl
daa
sbb
pop
or
bound
cmpb
cmp
or
and
jmp
mov
fbld
jmp
ret
and
push
inc
and
sub
sar
int
push
push
sub
adcb
or
rclb
jo
add
xchg
jae
stos
add
loope
out
ja
sbb
cmp
mov
jbe
push
jmp
and
mov
daa
in
xor
bswap
xchg
es
aad
insl
push
mov
into
and
loope
fists
js
imul
scas
push
dec
mov
orl
movsb
jle
es
push
adc
mov
je
xchg
adc
jl
mov
into
or
nop
mov
pop
movsl
mov
pop
ror
xor
shlb
sbb
insl
sub
iret
aas
dec
mov
test
outsl
sub
std
or
les
push
ret
icebp
outsl
stos
es
sub
adc
lret
inc
push
in
xchg
aad
cmp
inc
sti
jns
test
popf
inc
cmp
loopne
sbb
pop
lret
adc
jmp
ficoml
push
movntps
int3
add
jne
sbb
mov
adc
lods
jo
add
mov
das
sbb
loop
pop
and
out
popw
push
mov
jl
loopne
mov
pop
movsb
pop
lret
xchg
mov
aas
add
mov
dec
cwtl
inc
or
cltd
jle
ljmp
fiadds
sbb
or
iret
mov
sub
mov
xchg
sbb
xchg
fidivrs
das
gs
iret
xor
dec
mov
sarb
and
out
add
mov
jae
xor
add
dec
push
mov
fs
adc
and
sub
fistpl
cmp
rolb
movb
inc
sbb
in
pop
and
mull
jmp
cmpsl
daa
call
jb
jmp
push
sbb
loope
adcl
cltd
psubsw
inc
lock
arpl
mov
dec
ds
dec
mov
inc
add
pop
pop
pushf
lea
mov
push
push
dec
and
lea
mov
cli
ffree
mov
jno
cmp
ret
ds
inc
rorb
fs
mov
imull
cli
cli
popa
or
mov
cwtl
xor
adc
push
jno
sbb
scas
aaa
iret
pop
jecxz
add
mov
jle
cmp
and
loope
fdecstp
mov
pusha
adcl
sbb
dec
lret
xlat
or
add
and
mov
and
push
add
jmp
dec
push
sub
outsl
add
mov
adc
inc
pop
rcrl
mov
nopl
loope
mov
adc
sub
in
pusha
in
dec
add
sbb
or
mov
cmp
fldcw
mov
movsl
rorl
xlat
pop
xor
sbb
aam
xchg
test
ficoms
jbe
xchg
icebp
or
and
int
add
mov
fldenv
bound
add
adc
inc
xchg
les
add
inc
mov
addb
mov
lret
add
cli
pop
out
iret
hlt
fs
xchg
sahf
and
sbb
xor
push
fistpll
lcall
imul
add
add
lret
jecxz
aas
fld1
xor
push
das
add
push
addr16
inc
fnstenv
dec
outsl
xchg
cmp
dec
loopne
repz
cmp
mov
aam
arpl
xorl
or
push
xor
jecxz
loopne
inc
inc
xor
jle
add
dec
loopne
std
out
cli
push
shrb
ret
jae
sub
jo
mov
xor
test
pop
jne
mov
add
in
jno
std
mov
mov
fiaddl
pop
and
xor
in
xorb
mov
jmp
rcrb
pop
cmp
xchg
mov
jecxz
jo
insb
or
inc
shrb
fists
dec
mov
dec
mov
lea
mov
rcl
mov
sbb
and
loop
pop
jnp
adc
fldenv
xor
fwait
movsl
sub
pusha
mov
int
or
xchg
pop
sub
popa
adc
push
cmp
test
es
fisttpl
call
adcl
hlt
nop
aam
jmp
ja
jg
add
test
dec
stc
stos
insl
imul
mov
sub
and
pop
sub
dec
add
push
pop
insb
xor
adc
fadds
lea
jno
sbb
add
lock
lea
and
scas
aaa
test
repz
ljmp
sbb
push
push
lods
xchg
lock
push
jbe
push
dec
lea
mov
icebp
sahf
pop
mov
push
les
push
sbbl
loope
mov
aad
insl
icebp
data16
aad
test
test
mov
cmp
dec
loop
cmp
xchg
neg
pop
into
sbb
out
dec
xchg
cmpsl
mov
imul
mov
xchg
aas
push
das
inc
sbb
or
mov
mov
xchg
neg
mov
cmp
adc
test
xor
sahf
push
addl
pop
mov
pinsrw
mov
lods
adc
pop
rclb
inc
fcmovne
mov
rorb
imul
pop
pop
stc
jo
mov
fstpt
adc
push
add
dec
movsb
roll
sbb
add
xor
loopne
push
or
bound
lods
or
add
or
pushl
cwtl
adc
sbb
pop
xchg
adc
inc
loope
shl
ret
mov
test
or
outsl
fcomps
cmp
add
pop
push
xchg
mov
push
lods
sub
mov
sbb
cmp
popf
clc
xor
jle
or
insl
das
js
sahf
push
or
ss
add
fstpl
jmp
leave
sarb
rcl
add
mov
xchg
pop
sbb
lods
jge
pop
xchg
push
pusha
insb
std
mov
adc
sbb
arpl
sub
cmpsb
bound
or
test
adc
inc
loope
arpl
adc
and
pop
inc
push
test
fisubrl
shlb
cmc
lods
addb
les
push
push
fisttpl
cmpsb
leave
and
shrl
lods
filds
mov
mov
and
add
push
aam
mov
icebp
lret
add
pop
rcr
fcomp
jo
xchg
js
in
push
jno
jp
loope
or
scas
test
dec
shlb
add
sbb
pop
push
jno
jbe
mov
in
inc
cmp
divl
and
xchg
add
loope
in
daa
or
adc
sbb
or
mov
fdivrs
push
dec
inc
dec
inc
and
in
icebp
inc
jno
aaa
or
add
inc
push
pop
xchg
shll
or
arpl
mov
lcall
push
lret
lcall
scas
scas
pusha
mov
lods
and
sbbl
fbld
fwait
jne
sub
dec
outsl
mov
dec
push
push
mull
dec
lcall
pushf
stc
dec
dec
rcrb
adc
add
add
imul
push
push
addb
add
cvttps2pi
addl
popf
inc
lods
bound
daa
jbe
push
cltd
movsb
cwtl
adc
cmpsb
jo
xchg
ret
bswap
sti
bound
xor
ja
outsb
mov
sub
das
shlb
sbb
rsqrtps
sbb
xlat
sbb
bound
pop
inc
int
mov
mov
outsb
add
fisubs
daa
cli
fidivrs
scas
popa
lcall
test
or
inc
add
or
pop
mov
cmc
sub
mov
push
inc
loop
pop
inc
add
icebp
je
and
pop
cmp
aas
xor
cmp
inc
push
hlt
jmp
call
ja
or
mov
jns
or
out
shll
pop
jb
fs
jp
icebp
pop
jne
imul
push
pop
lods
loopne
cmp
rcrb
push
jno
add
fwait
jl
scas
test
xor
xchg
add
xchg
cmp
xchg
and
mov
lret
mov
mov
xlat
arpl
mov
mov
xchg
loope
push
mov
add
imull
stos
jne
and
dec
xor
xor
arpl
std
add
inc
cmp
xchg
filds
es
pop
adc
xchg
add
pop
daa
test
or
xor
pop
pop
mov
sti
lods
imul
jno
fldl
inc
sbb
nop
mov
stc
rorl
adc
test
incl
stc
nop
loopne
pusha
and
pusha
orl
aaa
pop
pusha
xor
inc
popa
jo
jns
cld
loopne
jo
lds
fiaddl
icebp
testb
js
popa
adc
push
jg
iret
sbb
sub
js
loope
ret
ljmp
push
dec
xlat
pop
pop
fcomps
ljmp
dec
aaa
out
push
cmpsl
mov
sbb
sub
sahf
pop
and
insb
mov
daa
cmp
sbb
cmpsl
arpl
cmp
aaa
cmp
fsts
dec
xor
int
mov
jle
inc
frstor
inc
shlb
fiadds
pop
adc
gs
add
add
rclb
dec
repz
ljmp
xorb
fucomip
andl
stos
outsl
adc
jge
mov
gs
and
adc
test
mov
push
sub
pop
dec
push
and
and
fiaddl
pop
sbb
notl
fcomps
mov
xchg
sub
loopne
test
jbe
add
jmp
jo
aaa
ja
and
pop
fidivrl
cmp
pop
fs
ss
insb
jne
mov
cmp
mov
mov
movsb
das
mov
add
int
cmp
jg
stc
xchg
jno
sbb
shlb
rolb
mov
pop
cwtl
xlat
dec
adc
sub
rcl
fstpl
and
or
xchg
int3
add
add
jge
ss
adc
adc
push
or
push
arpl
cli
addl
idivb
or
sub
sbb
cmpsl
faddp
cmp
jle
xor
xor
jmp
and
loop
pusha
test
mov
sub
jbe
jns
bound
fiaddl
ja
mov
cmpsl
mov
iret
sahf
sub
jo
shrl
and
js
jno
pop
push
push
enter
cwtl
clc
int3
insl
adc
fimuls
dec
adc
add
and
xchg
sbbl
cwtl
mov
fld
loopne
dec
adc
xor
adc
cmpsl
and
in
cmpsb
jmp
sub
xchg
popf
mov
lahf
fbstp
filds
sub
push
lahf
test
daa
out
dec
push
xor
push
mov
push
lds
ljmp
in
fmuls
fmuls
add
mov
mov
lret
inc
sbb
sub
push
mov
and
fcoms
sbb
ret
adc
fnstsw
lds
mov
push
inc
adc
int3
cmovle
stos
movsb
ret
hlt
mov
sub
into
add
and
mov
shlb
mov
test
add
jnp
mov
f2xm1
rorb
pop
test
add
dec
xor
mov
add
cmp
pop
lret
or
push
popa
lods
push
ret
and
sub
add
add
mov
arpl
adc
and
loopne
iret
clc
lds
jmp
aam
add
xor
pushf
movsl
cmp
int3
shl
lock
testl
and
and
das
test
cmp
cmp
or
sbb
filds
jnp
hlt
jno
cmpsl
leave
add
movsl
add
movsl
pmuludq
add
and
adc
repz
xchg
dec
pop
movsl
popa
cwtl
popfw
jo
popa
sbb
inc
fcoms
and
and
cmp
pop
xchg
int3
jb
fidivrs
add
and
ret
inc
out
pop
add
ret
cwtl
sti
push
push
add
push
xchg
ret
xor
mov
sbb
dec
or
imul
js
add
into
or
pop
sbbl
or
int3
cli
push
test
sbb
xchg
xor
cs
into
sar
dec
or
or
int
stos
sarl
push
xchg
cld
sub
add
and
leave
popa
shrl
es
inc
push
fs
inc
push
gs
movl
data16
cmp
add
cmpb
push
inc
bound
stos
or
fwait
push
call
fcom
addr16
jp
xchg
imul
cmp
xor
pop
addr16
das
or
sub
and
lock
jnp
push
xchg
push
outsl
mov
sub
push
xchg
cmpsb
fbstp
lahf
dec
clc
rolb
sbb
push
es
or
dec
aam
xor
daa
pusha
push
jns
mov
push
inc
inc
and
int3
and
mov
cmp
std
add
sbbl
imul
or
addb
fwait
pop
insl
add
stos
adc
jmp
add
xchg
jno
mov
pop
hlt
sbb
cmp
rcrb
add
cmp
loopne
cmp
cmp
push
jecxz
sbb
into
xor
outsl
iret
and
push
and
ja
adc
mov
inc
ret
sbb
push
sbb
scas
xlat
mov
in
push
and
hlt
addr16
dec
mov
stos
xchg
cmp
cli
or
loopne
aas
or
and
jns
dec
imull
cmp
andb
pop
jns
pop
xor
adc
aad
lgs
push
imul
icebp
iret
idivb
pusha
jno
push
test
dec
rclb
scas
push
dec
cmpsb
out
mov
add
mov
push
arpl
and
dec
lahf
dec
addb
iret
and
movsl
push
mov
js
or
in
rcll
ljmp
mov
mov
rorb
adc
cmp
add
adc
maxps
loope
dec
dec
cwtl
sbb
out
in
insb
das
push
test
fisubrl
mov
nop
cmpl
rol
xchg
repz
adc
scas
jg
test
cmp
outsb
add
std
fs
push
xor
dec
js
popl
scas
jecxz
ja
jbe
mov
pop
pop
push
inc
push
dec
xor
cmp
or
add
push
jo
jbe
inc
pop
pop
xchg
cmpsb
cmp
lret
cltd
shlb
sbb
push
test
icebp
lcall
mov
es
push
pop
xor
faddl
ret
mov
insb
pop
aaa
js
and
loope
sbb
lds
lock
jne
push
cmp
dec
daa
sub
icebp
xor
push
inc
fs
or
cld
lret
mov
adc
lods
in
sbb
sub
pop
lock
cs
jbe
jbe
test
push
push
and
sbb
cmp
jecxz
das
jno
sahf
push
add
add
and
loop
adc
sub
jle
loopne
out
pop
xor
scas
dec
out
push
jnp
cmp
add
xor
xchg
dec
fwait
push
movsl
sbb
pop
andl
mov
mov
mov
pop
and
and
and
inc
add
add
cmp
or
push
movsl
inc
push
shll
pop
fs
pusha
dec
arpl
jns
cmp
pop
sub
lea
push
in
cmp
into
testl
lea
aam
ja
lcall
es
add
movsb
jne
jo
imul
push
ljmp
xchg
gs
xchg
pop
add
stc
pop
dec
lea
sbbb
xchg
dec
ret
xor
adc
notb
ljmp
mov
sbb
out
dec
pop
inc
ja
in
mov
push
or
movsb
xchg
jl
mov
pop
mov
or
loop
jge
pop
jg
das
cmpsb
and
pushf
push
dec
or
int3
push
or
ss
lcall
out
sub
adc
mov
add
xchg
and
jmp
dec
push
jne
loopne
push
ljmp
testl
push
or
sbb
pop
sub
cmpb
mov
sbb
and
int
fsubrp
ret
sbb
lods
clc
loop
sbb
inc
push
xchg
jae
cmp
inc
scas
lods
ret
and
testb
popa
loop
push
push
push
inc
popf
mov
mov
xor
add
inc
in
iret
mov
jmp
pop
xchg
pusha
inc
sbb
pop
cs
pop
pop
xchg
hlt
movsb
inc
dec
iret
xchg
adc
pop
jmp
loope
inc
insb
mov
pop
cmp
mov
iret
mov
gs
daa
and
out
add
push
adc
out
jns
in
cmc
test
popa
ja
jnp
out
aam
push
in
or
stos
or
and
mov
sahf
cmp
sub
push
dec
subb
jb
jecxz
pushf
inc
rcl
mov
in
add
xchg
mov
sub
inc
dec
push
loop
mov
cs
and
repz
scas
add
repnz
sbb
cmc
sub
cltd
cld
add
aam
cmp
addb
movsb
fisubrl
rsqrtps
xchg
lods
ror
test
inc
pop
inc
setnp
push
jne
push
xor
pop
push
fistps
arpl
dec
lds
inc
inc
and
pusha
ljmp
inc
mull
and
lds
mov
and
sub
adc
xchg
arpl
movl
jp
mov
add
and
imul
mov
jns
sbb
inc
scas
dec
mov
sarl
add
add
lret
stos
out
jl
adc
stos
test
lods
adc
stos
notb
inc
sub
cmp
jbe
inc
test
push
push
outsl
out
pop
lret
cmp
cld
push
stos
push
jle
sbb
cmp
hlt
cmpsb
xchg
adc
mull
xor
inc
pop
movsb
loope
inc
rclb
lcall
pop
fldl
stos
or
bound
ja
cmovs
int3
int3
pusha
das
pop
or
xchg
mov
cmpb
xchg
jmp
jnp
lahf
testb
push
xorl
lods
mov
dec
mov
popf
sub
push
inc
jbe
or
xlat
mov
out
ret
adc
arpl
lahf
adcb
fdivs
sbb
scas
aaa
lret
addr16
xchg
xlat
xlat
pushf
sub
inc
daa
iret
push
cmpsb
adc
push
jp
sarl
mov
push
ss
xchg
push
sbb
in
int3
cmp
subb
and
in
cmc
lret
cmc
movsb
shrl
inc
outsl
mov
push
inc
sbb
add
mov
das
sbb
push
and
dec
add
mov
push
repz
sub
test
push
push
pop
and
xlat
inc
jne
int3
insb
push
test
cmp
hlt
test
adc
outsl
mov
or
scas
outsl
push
into
mov
out
sti
xlat
push
insl
and
mov
push
lds
ret
push
shlb
int
mov
inc
dec
mov
testb
jb
outsb
sub
ss
sbb
rcl
addr16
rcll
ds
jbe
cmp
lcall
jmp
sub
insl
das
sub
sbb
aas
xor
and
repz
add
sub
insb
pop
pushf
or
test
sub
xchg
pushw
mov
test
mov
shrb
hlt
mov
test
daa
addl
cmpsb
cltd
inc
cmp
mov
es
movsb
dec
pushf
add
lds
inc
das
and
ret
sub
ds
popa
xchg
jo
outsb
sub
int3
mov
loopne,pt
inc
jle
add
daa
fwait
jmp
notl
mov
adc
fsubrl
push
push
into
hlt
fcom
lret
cmp
jmp
push
daa
inc
es
aad
mov
sub
sub
xchg
mov
xchg
mov
scas
pop
sub
pop
jo
jne
das
insl
movsb
xchg
clc
add
jo
mov
sarb
addr16
sbb
sub
daa
leave
pushf
inc
out
mov
loopne
cmp
aaa
ss
pop
jne
inc
mov
lret
jle
jl
loopne
sti
add
add
push
add
movsb
mov
insb
sub
dec
jns
lret
mov
xchg
test
cmp
cmpsl
push
movsb
notb
aad
ret
push
pop
leave
sbb
push
ds
mov
fmull
mov
out
lock
add
daa
insl
pop
adc
ret
push
loope
ss
dec
or
jp
fucomi
movsb
test
inc
push
subb
fistpl
xchg
cmp
fildl
mov
mov
or
pop
and
mov
mov
test
out
bound
int3
sub
movsb
lods
subl
cmp
shlb
add
lcall
add
or
outsl
xchg
fiadds
es
adc
cmp
xchg
int3
add
icebp
orb
mov
adc
cmpsb
sub
cwtl
push
sub
rolb
pop
scas
add
pusha
test
add
cmp
dec
xor
lods
inc
dec
add
add
das
add
sbb
inc
aad
addb
pop
outsb
scas
js
adc
scas
sub
xor
cs
add
cs
push
pop
push
dec
add
psubb
das
outsl
add
jnp
or
es
cmp
lods
loopne
mov
push
inc
stc
scas
lock
jno
fnsave
add
xorl
mov
or
add
repz
sub
add
stc
add
mov
stc
les
sbb
pop
push
subb
pusha
test
sub
push
in
out
mov
push
rorb
sbb
mov
lods
test
add
out
dec
addb
pusha
pop
in
or
ljmp
movsl
add
sbb
add
daa
add
pop
pop
gs
ss
jl
or
cmp
rolb
pop
dec
aam
outsb
lahf
das
xchg
or
aad
sub
shll
dec
movsb
jo
adcb
aad
gs
imul
rcrl
jbe
inc
ss
je
mov
loopne
or
add
fadd
test
cmp
mull
adc
aad
or
inc
xchg
sbb
add
imul
adc
add
sbb
in
lret
add
cld
icebp
int3
sbb
fcoms
or
out
add
cmp
lahf
mov
cmp
xlat
sahf
push
xlat
or
xchg
mov
dec
xor
xchg
dec
pushf
stos
insb
ja
rcrb
mov
jno
ret
das
dec
push
pop
or
cwtl
hlt
dec
ret
mov
je
faddl
shrl
shrb
movsb
stos
push
jmp
fsubp
sbb
xchg
cli
sub
dec
jmp
mov
jo
xor
stos
scas
ss
add
rol
das
fcompl
cmp
mov
mov
fbstp
fisttpll
sub
daa
inc
fildl
and
aaa
fsubp
mov
cmp
mov
stos
add
xchg
sbb
sub
aas
movsb
out
fiadds
sbb
pop
cltd
mov
and
add
les
add
adc
pop
jbe
jmp
push
dec
push
les
mov
sub
ret
add
dec
mov
cs
mov
popf
fsubl
push
icebp
test
add
cmp
sti
in
cs
and
jge
add
inc
sub
mov
push
pop
sub
mov
xor
lcall
push
or
dec
push
push
and
aad
sbbl
cmp
popf
and
and
xor
sbb
clc
scas
and
out
js
and
xchg
or
subb
insb
mov
call
xor
popf
jns
mov
and
jge
and
xor
pop
lods
outsl
in
add
inc
and
jle
cmpsl
pop
in
sub
ret
lods
push
mov
pop
jecxz
mov
movl
scas
outsb
sub
lods
jne
loopne
push
lret
cmp
push
cmp
xor
mov
data16
pop
int
add
shrb
lds
inc
loope
idivl
cmp
xorl
and
inc
xchg
cli
add
aas
push
sub
popa
stos
inc
ds
cmp
lock
hlt
es
daa
mov
aaa
push
add
sub
outsb
jns
mov
inc
pop
repz
scas
adc
and
xor
and
sbb
stc
sti
adc
dec
cmp
sbb
add
or
rclb
inc
xchg
in
adc
mov
jp
dec
loopne
push
jo
mov
jns
imul
push
cld
mov
or
mov
dec
mov
fs
push
sbb
stos
dec
jns
jmp
outsl
jns
rcll
jbe
stos
je
sub
call
adcb
cmp
mov
xchg
inc
pop
mov
cld
das
mov
push
add
xchg
xor
mov
add
add
sbb
push
in
outsl
inc
out
insl
mov
js
fists
sub
adc
out
mov
cli
inc
jae
gs
pop
xchg
mov
icebp
pusha
push
jmp
sti
ret
and
lods
push
or
dec
and
ret
mov
mov
adcl
das
dec
aaa
fs
push
cli
push
gs
jae
push
add
adc
mov
add
rcl
scas
xor
stos
rorl
imul
and
addr16
int3
scas
add
sbb
xor
xchg
lahf
xchg
sub
cmpb
lock
xor
shlb
push
js
adc
aaa
xor
push
rorl
mov
or
std
add
and
pop
mov
int3
sbb
mov
jl
pushf
in
cmp
lcall
stos
sub
add
push
mov
out
xor
add
add
cmp
in
push
fimull
push
cmp
mov
jmp
jmp
and
scas
pop
cmp
lahf
in
lods
pushf
sub
adc
cmc
or
add
mov
sub
sbb
stos
ljmp
jo
aad
pop
mov
jmp
lret
mov
lahf
mov
outsl
xor
inc
inc
mov
add
call
orb
sub
out
mov
je
cmp
mov
lock
mov
rcr
bound
cli
gs
jne
adc
and
adc
sbb
adc
xlat
mov
sub
pusha
fs
add
pop
bnd
add
out
mov
div
push
mov
mov
sbb
push
in
jmp
or
inc
cltd
inc
jmp
lret
inc
mov
and
cmp
das
pxor
enter
fsubr
push
into
sub
and
and
push
js
sbb
or
mov
dec
nop
shr
and
and
leave
cmc
pusha
test
clc
xchg
xorb
xchg
adc
add
lods
add
rolb
or
adc
or
pop
ja
pop
lahf
pusha
int3
iret
sbb
jo
pop
lock
jno
jp
imul
loop
adc
or
push
add
sbb
add
mov
shrb
lret
aas
lods
mov
stc
out
imul
int3
fcompl
add
sahf
cmp
scas
cmp
and
lods
movsb
xor
pop
mov
jmp
cmovb
and
pop
lahf
lret
dec
data16
lods
lods
rcl
shlb
and
push
fcmovnbe
fld1
pop
addr16
adc
cmp
sub
loopne
mov
push
mov
out
insb
outsb
push
push
cmp
js
xor
andl
pop
dec
xchg
cmp
dec
sbb
dec
sub
xchg
ljmp
mov
xor
stc
ss
xchg
ret
sbb
call
imul
or
or
pop
loopne
mov
mov
cmp
insl
loopne
insb
push
in
fdivl
push
or
cmp
pop
lret
cmp
cltd
and
jmp
lods
iret
leave
add
iret
jp
add
or
mov
or
cmp
pusha
pop
dec
cmp
pop
lret
imul
add
fadd
xor
push
mov
call
push
xchg
arpl
iret
xchg
push
mov
loop
inc
push
loopne
lock
in
push
sbb
pop
int3
dec
mov
jge
loopne
ficompl
xor
sub
addb
push
setb
repz
xor
xchg
jle
cmp
pop
pop
es
pop
and
fnstenv
loopne
push
in
enter
pushf
ljmp
xor
lret
fisubrl
popa
mov
or
fdivl
loopne
mov
jo
andb
add
xchg
rorb
mov
loop
or
insl
addr16
push
sahf
xchg
ljmp
pop
adc
repnz
insb
insb
sub
and
add
sbb
pop
push
and
add
push
add
sbb
push
add
rolb
pop
and
cmp
mov
xor
xor
insb
aam
xchg
jle
push
and
int
lcall
fidivrs
or
mov
imul
sub
sub
cmp
movsl
mov
cmp
es
lods
sbb
or
addr16
mov
sbb
in
pop
ror
inc
in
sub
sti
xor
in
jmp
jmp
xchg
mov
and
jmp
fcoms
pop
pop
mov
mov
push
mov
out
data16
loopne
cmpsl
data16
pop
lret
cmpsl
movsl
add
xchg
push
adc
je
addb
sub
popf
lock
leave
jp
js
cmp
cmpsb
lret
loopne
push
imul
sub
mov
and
push
xchg
and
fsubl
fisubrs
sbb
add
jp
jl
sbb
adc
jmp
xchg
mov
jle,pt
pusha
arpl
xlat
sahf
lock
ja
into
or
pusha
sub
fnsave
int
mov
fs
or
and
inc
cmp
mov
sahf
sbb
mov
xsaves
xchg
pop
das
int3
lea
xlat
push
sub
inc
jecxz
xchg
mov
mov
lods
mov
add
xor
andl
andl
xchg
jecxz
or
pop
push
inc
jle
sbb
adc
cmp
jg
sbb
jno
imul
ja
mov
cmpsb
iret
xchg
xor
jae
jo
push
insl
mov
jns
cltd
pop
mov
jno
and
mov
mov
ret
pop
sahf
pop
mov
movl
mov
pop
add
daa
js
fidivs
and
and
fists
js
stos
jo
mov
cli
les
ret
lds
xor
fchs
sub
test
fldcw
ja
subb
das
loopne
in
jno
or
adc
jb
mov
in
das
sbb
ror
inc
sub
js
mov
mov
daa
adc
std
cs
fdivrp
jae
gs
loope
sub
pushf
push
cmp
mov
ja
push
sub
and
xchg
or
aad
adc
shlb
lods
push
dec
gs
rol
dec
dec
push
imul
lea
push
jl
xchg
mov
jbe
push
jo
icebp
inc
scas
rcrl
pop
bound
mov
jno
bound
jne
dec
sub
mov
loopne
add
cmp
sub
and
ljmp
movsl
aad
sbb
jl
jecxz
movsl
adc
xchg
push
clc
pop
mov
xchg
bound
adcb
fcoml
jnp
mov
stos
sbbb
adc
nop
inc
mov
add
fbld
xor
lods
inc
les
cmp
xchg
rcl
in
mov
mov
addl
imul
add
imul
push
inc
and
sbbb
test
inc
or
adc
xor
cmp
jnp,pn
cmpb
mov
cmp
iret
xchg
mov
ja
das
add
dec
mov
push
push
lret
daa
test
pusha
add
repz
ja
adc
lods
lods
and
mov
add
cmp
dec
andnps
dec
rolb
addr16
or
out
xor
mov
loope
sub
movsl
and
mov
mov
jnp
pop
pop
cmp
cs
adc
xor
or
pop
adc
sbb
and
aaa
insb
stos
fcomp
xchg
or
loope
and
repz
dec
fidivrl
mov
mov
rol
mov
xchg
outsb
jmp
or
pop
mov
xor
loope
mov
and
dec
roll
mov
push
pop
lcall
loope
fsubrs
pop
rcll
sbb
ret
fists
push
add
jmp
xchg
sbbl
xchg
sbb
mov
xchg
daa
mov
inc
popa
push
bts
mov
jo
leave
mov
sbb
in
sub
and
jne
iret
iret
out
and
insb
addr16
mov
cmp
mov
sub
and
jbe
icebp
mov
cmp
xor
or
pop
or
cmp
and
adc
push
mov
mov
dec
imul
int
xchg
and
jae
sub
sbb
mov
in
push
sub
and
and
pop
dec
jecxz
fldl
pop
and
pop
lcall
imul
lock
jl
push
push
adc
adc
leave
pop
sub
cmpsb
hlt
add
jns
sub
jmp
push
sub
push
or
cmpsb
lock
mov
xor
fsubs
subl
push
xor
add
aad
push
lea
mov
test
aam
cmp
or
lds
inc
loope
ljmp
mov
or
jmp
or
sub
mov
and
cmc
js
test
in
rorl
leave
fstps
pusha
imul
inc
loop
ds
jbe
pop
pusha
fsub
mov
jne
xchg
loopne
sub
sahf
sbb
mov
cmpsb
mov
sub
xchg
lods
sbb
dec
mov
addl
add
mov
pop
pushf
into
cwtl
movsl
mov
daa
aam
dec
jno
into
push
xor
mov
loope
add
adc
jle
jle
add
xor
push
and
popl
sub
pop
sbb
push
mov
sub
insb
jg
dec
sub
xor
das
andb
add
mov
fwait
imul
mov
imul
nop
sbb
orb
loopne
test
add
ja
dec
push
adc
sbb
loop
jnp
mov
outsl
adc
and
mov
adc
outsl
pop
mov
arpl
lock
jmp
push
jno
cmp
lahf
nop
cmpb
in
sbb
les
adc
add
xor
popa
mov
daa
jbe,pt
daa
icebp
jmp
lods
arpl
popf
add
fiadds
pop
out
lret
xor
mov
sbb
sar
bnd
movsl
and
fs
sbb
scas
inc
pusha
jns
fwait
and
mov
enter
loop
xlat
clc
pop
pop
pop
in
jae
test
dec
loop
cmp
repnz
and
mov
aad
lods
mov
rcrb
popa
pop
inc
mov
repz
addl
dec
cwtl
jnp
clc
shl
ror
mov
add
inc
leave
pop
xchg
sub
mov
mov
add
mov
nop
inc
test
cmp
mov
jne
and
pop
xor
mov
or
sbbl
xchg
push
pop
repnz
xor
push
das
and
addl
inc
lret
add
stos
adc
mov
cmp
add
jnp
cwtl
aam
push
push
xor
cmp
jl
arpl
inc
testl
test
sub
pop
and
jecxz
testl
mov
push
ja
loopne
mov
jno
pusha
push
cmp
mov
dec
cmp
loopne
xchg
push
cwtl
scas
adc
pop
subl
push
lock
dec
jb
push
stos
mov
out
stc
enter
lret
mov
lret
int
imul
lods
mov
icebp
pusha
cmp
rdpmc
xlat
mov
leave
adc
mov
addb
mov
sub
add
sbb
out
loop
adc
cmp
and
bound
add
xchg
push
jg
cmp
sbb
psubsw
bound
dec
scas
mov
push
and
cmc
push
daa
movsl
sub
ret
sbb
adc
inc
xchg
push
and
bts
jp
imul
add
cs
or
mov
out
push
jge
fwait
push
scas
das
div
xor
sbb
mov
add
in
jo
mov
cmp
xor
mov
or
mov
rcll
pop
loopne
pop
dec
orb
add
and
pop
xchg
add
aam
push
mov
xchg
out
mov
push
or
pop
cmp
leave
loop
and
repz
push
push
cmp
push
pusha
sar
xchg
xor
sbb
out
loope
imul
aaa
in
in
sub
aaa
lds
iret
inc
repnz
pop
dec
xchg
dec
shr
ss
and
movsl
pop
pop
dec
or
imull
mov
lea
lods
and
and
inc
cmp
pop
pop
js
fsubl
xchg
test
in
cmp
inc
jmp
pop
daa
aaa
push
push
outsb
sub
stos
mov
adc
mov
rorl
sub
aam
push
out
enter
outsl
mov
lock
mov
and
mov
mov
adc
jle
sahf
out
shrb
fld
jge
and
mov
or
jecxz
push
mov
ss
test
push
inc
xchg
dec
mov
or
test
into
in
test
int
shlb
aam
lahf
int
scas
roll
jnp
int
ss
js
mov
cltd
and
xor
or
and
jmp
les
mov
out
adcl
ss
push
pop
cmpb
incl
add
and
dec
or
jnp
loope
xchg
cld
lods
mov
cwtl
fldl
jl
xor
lret
inc
pop
add
push
pop
jp
add
repz
inc
addr16
call
and
cwtl
mov
mov
popf
xchg
add
jo
cltd
cmp
mov
fldcw
hlt
and
sub
add
sub
movsb
sbb
inc
dec
lods
sub
pop
clc
dec
xchg
xor
mov
lret
roll
inc
push
test
and
rcrl
mov
xchg
je
pop
shlb
lret
or
movups
push
mov
rolb
add
cmc
dec
bound
nop
ss
inc
js
cld
in
das
hlt
push
dec
cwtl
add
pop
add
push
or
xor
out
or
inc
in
add
dec
xchg
call
ss
test
adc
ss
scas
das
jo
dec
and
mov
cmpsl
andb
loopne
loopne
mov
rclb
or
mov
add
fistl
into
arpl
and
push
addr16
pop
arpl
cs
push
dec
adc
pop
pop
pop
fsubrs
in
adc
jb
es
iret
aaa
or
lods
push
dec
stos
push
xlat
mov
mov
adc
mov
or
push
mov
xchg
insl
icebp
cmp
mov
pop
cmp
out
clc
fsts
sub
jmp
sahf
xchg
inc
inc
xchg
out
rolb
mov
out
loopne
pop
and
push
lods
ret
mov
xchg
js
mov
jo
cwtl
jp
mov
shll
bound
add
xorl
push
js
push
and
inc
inc
aam
cmp
xchg
mov
pop
inc
lret
pop
add
es
ss
adc
xor
mov
adc
sub
adc
cmp
cmp
insb
inc
push
mov
mov
iret
and
adc
or
xlat
lcall
mov
shr
mov
add
push
mov
or
fs
movsb
xchg
mov
nop
inc
inc
jo
bound
pop
stc
aas
cli
movsl
roll
nop
js
or
sub
out
adc
push
daa
inc
jmp
xor
sub
mov
xor
jp
lcall
data16
sbbb
inc
int3
add
fsubrs
imul
jmp
add
or
arpl
push
sub
outsl
fmuls
sub
fwait
adc
add
dec
and
or
sbb
add
xchg
movsb
push
mov
jge
nop
dec
inc
pop
jg
inc
or
leave
into
sub
push
xor
and
pop
push
mov
or
imul
popa
add
pop
and
mov
push
and
ds
and
js
push
mov
xor
fcomps
out
inc
lods
sub
pop
pop
mov
orl
clc
fs
inc
push
cmpsl
int3
and
stos
inc
or
xchg
pop
aad
outsb
xchg
and
lds
mov
iret
sahf
lahf
push
rorb
std
pop
push
outsb
or
jmp
aam
add
stos
aas
dec
mov
fnstcw
es
pop
push
sub
ret
sahf
sbb
movsl
scas
ss
xchg
cmc
ss
add
xchg
lods
cmc
aam
aad
xor
xchg
xchg
int3
xor
ja
or
rorl
cmp
shrl
leave
shlb
movsb
xorl
push
pop
sbb
stos
insl
js
adc
sbb
imul
out
push
pop
into
adc
push
test
dec
lret
pop
mov
mov
loopne
cmp
mov
sbb
pop
sbbb
ljmp
sbb
xchg
add
shrb
sbb
jmp
mov
js
xchg
jp
push
fidivl
and
lods
pop
movsb
sub
mov
or
dec
push
fwait
iret
and
xchg
daa
loope
ret
adc
adc
xor
pop
inc
or
jns
rcr
ds
into
mov
or
add
sub
pop
jbe
cmp
push
mov
std
push
sub
or
test
js
adc
insb
cli
jo
push
pop
add
sbb
adc
add
lcall
jl
outsl
mov
pop
fs
loopne
mov
xor
rcr
sbb
movsb
sub
pusha
and
pushf
jns
mov
jns
dec
iret
mov
sti
dec
add
xchg
mov
sub
data16
push
jecxz
jl
push
out
bound
fists
subb
and
andl
mov
xor
das
cmp
cs
fildl
addb
inc
push
sub
sub
sbb
lods
and
mov
adcb
sbb
pop
xorb
or
int3
dec
sti
stos
enter
cmp
and
loopne
fs
ret
or
dec
or
das
cmpsb
fistpl
dec
push
stc
adc
js
sbb
call
sbb
ja
test
cltd
pop
mov
sbb
cmp
or
or
and
cmc
repnz
push
adc
push
push
pop
shl
mov
sbbb
push
popa
js
pop
or
mov
loope
pop
or
shll
lret
ja
inc
pop
dec
ds
das
jns
or
xchg
add
pop
shrl
dec
push
and
push
scas
dec
lret
xor
loopew
cmp
mov
mov
lcall
and
out
xchg
fs
test
cmp
or
sub
xor
lock
test
inc
inc
mov
xor
or
gs
sub
sub
mov
inc
pusha
inc
mov
add
movb
mov
lock
bound
arpl
mov
ret
repnz
int3
shr
jge
enter
push
jno
fstp
jl
mov
imul
popa
jo
fs
je
push
mov
adc
test
sahf
lcall
insb
mov
rorb
arpl
aam
test
pop
mov
loopne
roll
push
and
or
out
and
xchg
add
push
leave
cmp
jo
and
dec
loope
aaa
mov
scas
fisttpl
dec
ja
pop
outsl
push
test
outsb
add
or
inc
cmpsb
jae
adc
pop
notl
inc
ljmp
sub
andl
in
ret
jle
lds
hlt
mov
icebp
and
ss
and
cmp
into
add
xor
inc
in
test
addr16
in
pusha
ret
movsb
and
decb
cmp
xchg
or
add
adc
dec
aad
adc
loopne
xlat
fwait
xor
sbb
sti
cmp
test
mov
mov
das
int3
sub
iret
xor
in
and
sbb
or
pop
stc
sbbl
sbb
mov
arpl
inc
icebp
jnp
and
shlb
xor
cmp
add
xchg
fidivrl
rcl
push
fildll
cmp
cld
jbe
adc
and
mov
out
and
ja
and
out
adc
add
jne
xorl
inc
push
out
popa
and
or
xor
pop
push
cmp
in
dec
jecxz
cmc
jns
xchg
and
es
andb
mov
jnp
aam
add
aad
adc
out
xor
jmp
lods
sbb
in
and
xor
mov
ja
adc
nop
andl
pop
ret
mov
jl
jmp
add
movsb
mov
inc
data16
dec
sbb
push
add
dec
or
ret
dec
add
xchg
subb
nop
popf
inc
aad
ret
sbb
inc
pavgb
scas
xchg
mov
test
mov
fsubrs
cmp
lret
cmp
in
test
rorl
cs
mov
lret
pop
mov
pop
fistl
and
lret
rcr
ss
fnstenv
aam
adc
add
push
and
and
loope
outsl
xchg
ds
sbb
mov
adc
aas
addl
push
cli
add
and
jmp
push
outsb
test
cmpl
and
push
rcr
loop
cli
pop
or
cmp
pop
add
xchg
test
sbb
test
adc
mov
test
je
mov
or
jns
scas
inc
loopne
or
iret
jnp
es
xchg
into
mov
ljmp
outsb
adc
loopne
inc
xor
adc
inc
shll
sahf
rolb
aaa
push
cmp
popf
inc
pop
jp
push
sub
jg
mov
or
cmp
mov
sbb
mov
popf
mov
sti
inc
pop
xlat
rep
ds
ret
sbb
dec
shlb
jns
and
mulps
or
inc
add
rclb
loopne
jecxz
fsubrl
cmp
inc
push
jle
jle
mov
cwtl
das
sub
aam
push
mov
pop
adc
xchg
mov
push
test
xor
cmp
and
clc
and
cwtl
sbb
sub
push
inc
ljmp
test
push
sahf
lahf
add
push
scas
popa
aas
stos
popa
xor
jno
or
faddl
fildll
dec
fldcw
inc
je
sub
loope
fsubrs
outsl
js
dec
jl
sbb
testl
bound
dec
js
dec
mov
and
inc
add
jno
or
jae
imul
or
mov
lret
mov
or
add
sub
cmpl
andl
jl
jp
shrl
data16
pusha
cmpl
xchg
or
outsb
and
adcl
sbb
push
fsubs
inc
xchg
loopne
les
push
shl
inc
cmp
mov
push
cli
add
shlb
push
jp
dec
sub
adcb
xchg
daa
mov
mov
leave
leave
push
push
data16
sbb
mov
jle
ljmp
or
cmp
xor
pop
into
clc
call
pusha
je
rclb
cmp
xchg
push
and
and
js
mov
bound
dec
mov
inc
adc
loop
mov
movsl
fadd
shll
pusha
mov
lcall
shll
push
add
popf
fdivl
inc
xchg
adc
sub
test
pop
movsl
mov
mov
adc
xor
andb
iret
out
or
not
nop
xchg
adc
or
push
pop
scas
or
adc
shrl
pusha
inc
nop
inc
nop
lock
adcb
or
push
cmp
ljmp
adc
dec
mov
aad
pop
adc
scas
jg
loopne
mov
jne
mov
mov
dec
add
xchg
rorl
and
mov
xor
add
movsl
lret
or
inc
out
ret
adc
push
pop
faddp
or
loope
pop
sbb
sub
inc
xlat
xorb
mov
loop
mov
dec
daa
cmc
add
fdivrs
fwait
inc
lods
mov
sub
sbb
inc
mov
jmp
fwait
andb
pop
mov
stos
mov
incl
sbb
sub
sub
stos
push
mov
inc
pop
sti
xchg
test
or
mov
and
xchg
jle
pop
addl
or
sub
fisttpll
adc
mov
mov
and
jmp
jb
inc
popf
mov
pop
rcrb
jbe
jb
jge
pusha
lret
pop
sti
or
mov
add
mov
xchg
xchg
pop
adc
inc
imul
cs
out
pop
xchg
popa
jmp
jle
or
and
jl
inc
neg
adc
mov
mov
or
sbb
adc
insl
inc
lcall
loopne
dec
push
jp
sbb
aam
add
into
pop
jo
hlt
lret
push
inc
pop
add
pusha
adc
mov
xlat
xchg
mov
add
bound
sbb
arpl
fwait
mov
cmp
mov
shll
cmpsb
outsb
jns
insb
mov
fstl
movsl
pop
xor
add
jp
dec
push
inc
inc
loop
insl
mov
cmpsb
adc
jae
or
xchg
and
or
fwait
cmpsl
mov
aam
add
pusha
loop
dec
or
test
push
xor
push
add
fisttpll
add
or
scas
mov
or
pop
and
or
add
fadds
jno
mov
adc
dec
sub
je
add
and
rolb
or
cmp
shrl
and
xor
call
orl
pop
sti
or
fimuls
add
and
rolb
jno
jmp
lret
test
arpl
inc
inc
add
mov
cmp
bound
outsb
cmp
mov
dec
mov
popa
leave
popf
test
dec
inc
inc
orl
push
mov
cwtl
jecxz
mov
orb
in
xchg
xchg
stos
cmp
lods
inc
cmp
inc
imull
jno
add
subb
mov
ret
jbe
add
push
jbe
push
leave
jle
in
nop
adc
push
mov
fs
orl
push
sbb
sbb
and
mov
adc
imul
inc
cs
and
mov
push
out
in
in
or
aas
testl
add
fwait
mov
and
jp
pop
mov
inc
gs
in
mov
and
ret
andb
xchg
push
xlat
aam
mov
dec
setl
push
jp
add
cld
call
inc
fcomps
add
mov
pop
test
inc
test
xchg
out
jecxz
or
push
fldenv
lret
jge
inc
loop
lret
jl
dec
push
and
xchg
inc
mov
mov
push
pop
push
sub
add
es
cmp
cmp
sub
popf
or
xchg
add
js
xor
cmp
pop
push
cs
mov
stos
add
lods
aas
jp
add
idivl
jge
or
cmpsl
das
icebp
dec
les
sbb
add
gs
or
and
add
icebp
popa
and
mov
test
arpl
pop
inc
mov
and
shrb
dec
addl
xchg
jo
adc
push
int3
cmp
pop
adc
test
mov
jbe
xor
inc
add
xor
aaa
jo
ljmp
and
jne
pop
xor
add
adc
or
add
add
mov
inc
sub
rcl
pop
aas
mov
push
cwtl
adc
movsl
cmp
pusha
sub
or
adcl
aaa
jmp
dec
pop
mov
cmp
or
loope
pop
push
dec
jbe
lea
or
sub
stos
and
jo
add
js
fildl
inc
mov
dec
arpl
jne
leave
ret
pop
and
movl
imull
jo
sub
mov
fwait
jl
fldcw
ret
lods
or
out
ljmp
mov
push
cmp
adc
pop
push
lret
cmp
sbb
ror
je
test
fmul
jbe
outsb
popf
push
pusha
mov
fs
sti
jmp
icebp
and
inc
fcomp
lret
xlat
or
inc
and
add
and
ror
lds
bound
sbb
mov
adc
mov
add
pop
fidivrl
clc
mov
push
dec
mov
ret
imul
jo
add
mov
push
jne
sub
mov
iret
add
sub
jge
pop
push
xorb
fisttpll
test
adc
fimuls
cmp
sarb
pop
pop
pop
fcoms
dec
inc
sbb
sbbb
pop
cmp
iret
ja
cs
mov
test
into
mov
adc
or
popl
mov
xor
adc
out
jbe
fadds
xchg
aam
push
sub
out
dec
es
lahf
push
xchg
ds
sub
leave
daa
mov
inc
lods
add
test
mov
stos
push
jmp
pop
shrl
iret
sbb
leave
adc
cmp
xchg
nop
add
adc
dec
int
sub
dec
xorl
and
and
arpl
outsl
sub
lds
jno
jecxz
fldl
push
divl
cltd
fadds
ss
and
xor
sub
inc
push
push
pop
mov
xchg
sbb
ret
sbb
mov
sub
loopne
push
lods
xor
dec
or
xorb
mov
mov
adc
dec
xchg
adc
mov
and
pushf
in
fistps
cmpsl
mov
pop
test
sahf
popa
mov
xor
xchg
popl
mov
testl
or
pop
sbb
popf
jp
hlt
jne
aaa
stc
popf
cmp
mov
cmp
add
idivl
inc
rorb
xchg
fldl
lock
dec
aas
aaa
imul
cmpsl
push
adc
vmread
push
fldz
xor
or
dec
iret
sarb
clc
ljmp
cld
pop
mov
jo
cmp
es
ret
push
lea
xchg
mov
jne
scas
jle
dec
or
shl
dec
mov
out
adc
inc
xchg
lea
add
fistpll
pop
and
sbb
js
dec
loope
sub
sub
xor
push
and
pop
les
push
adc
loope
fistl
mov
mov
inc
pop
fs
dec
in
hlt
push
lahf
sbb
movsb
hlt
movsl
roll
ret
out
pop
loop
jno
enter
into
les
cmp
xor
push
jb
inc
aam
jae
mov
mov
mov
cmp
adc
or
sub
sbb
ss
movsl
scas
xor
inc
je
loop
cwtl
or
cmpsl
adc
add
dec
xchg
xchg
ficomps
negb
jne
xor
ret
pop
jbe
ret
add
dec
xor
dec
loope
je
ffree
imul
addb
push
pop
or
daa
mov
pusha
ret
sbb
ret
movups
insl
or
sbb
dec
mov
and
lock
jnp
ljmp
dec
xchg
and
push
xlat
ret
and
xlat
stos
mov
or
daa
xor
sbb
sbb
andb
cmp
mov
pop
sub
pop
sarl
jnp
mov
popa
aas
xchg
push
lods
insb
in
es
xor
adc
lock
push
inc
fdiv
je
inc
mov
jo
xorl
jae
or
jge
movsb
enter
inc
pop
cmp
fstl
popa
xchg
mov
bound
mov
mov
pop
mov
pop
pop
xchg
inc
lods
mov
and
in
je
xor
cmp
adc
test
lret
inc
sbb
sub
dec
sbb
inc
jns
sbb
adc
lods
dec
dec
mov
js
out
enter
mov
jle
popa
stos
test
scas
ja
xor
inc
xorb
aam
rclb
in
into
adc
pop
mov
lock
jns
jbe
sbb
lods
xorb
movsl
or
mov
aam
movsb
and
mov
mov
adc
sub
jno
aam
add
scas
popa
add
push
out
add
add
inc
loopne
sub
add
in
push
insl
sub
mov
test
pushf
mov
push
es
ret
arpl
pop
in
jno
jg
sbb
jns
pushf
adc
les
sub
cmpsb
fcoml
xor
mov
push
mov
adc
cmpb
xchg
pusha
mov
or
push
jle
fnstenv
xor
pop
xchg
les
pop
jle
sbb
mov
test
mov
dec
add
push
pusha
loope
scas
and
jo
daa
mov
xor
add
push
push
fdivs
jae
mov
xchg
sub
mov
or
mov
add
mov
cwtl
inc
xor
mov
sahf
push
push
js
shrb
iret
sub
jns
fistps
cmp
sarb
mov
leave
aas
pop
adc
jmp
jecxz
sbb
fmuls
cmpsl
inc
loopne
and
push
popa
insb
andb
or
adc
xchg
fisubl
test
or
mov
sbb
push
loopne
shl
daa
add
xchg
xor
into
lcall
xor
adc
mov
sbb
dec
sub
mov
cmp
in
popf
movsl
clc
movb
xchg
mov
addr16
std
sbb
orl
sub
jle
xchg
jl
mov
adc
mov
sub
fcomi
mov
xchg
pop
inc
fsts
movntq
mov
jecxz
mov
loopne
ds
sbb
mov
movsl
test
add
ds
testl
dec
cmp
or
mov
shl
stos
mov
ret
mov
jnp
in
sub
insl
inc
dec
sub
fiadds
mov
inc
or
mov
pop
xchg
push
push
leave
lea
lret
add
into
add
mov
adc
mov
ja
ljmp
rcrl
xor
je
add
hlt
dec
ss
out
push
jnp
sbb
pop
sub
fld
outsb
add
sbb
ja
fbld
mov
push
ja
in
mov
pop
pop
xchg
testb
sbb
cmp
scas
rcr
inc
dec
push
ror
add
lret
aas
movsl
add
add
jecxz
add
loopne
rclb
cmp
sbb
arpl
arpl
jge
clc
sub
jmp
push
jo
push
into
lahf
test
imul
iret
int3
dec
add
and
into
mov
lods
test
push
push
add
aaa
jl
mov
xchg
pop
adcl
sbb
aaa
sbb
in
inc
sbb
mov
xor
fnstenv
sbbb
fwait
iret
cmp
adc
or
xchg
push
dec
mov
test
cmp
sbb
mov
mov
xchg
lods
ss
xor
arpl
mov
jecxz
loopne
movsb
fs
push
xchg
ja
or
xor
jno
insb
push
cmp
push
jnp
iret
xchg
les
cs
clc
cld
call
adc
sub
cmp
cs
test
sarb
sub
mov
pushf
fdivp
into
ret
shlb
jmp
cwtl
orl
adc
inc
mov
sbb
test
daa
cmc
fstps
insl
xchg
rorl
test
cmp
bswap
add
not
enter
mov
sbb
add
lea
ret
movsl
ja
sbb
mov
sbb
or
int
push
insl
cmp
mov
push
pop
xor
push
ficoms
fmuls
cmpsb
jle
sub
xchg
mov
pop
add
mov
inc
cmp
adc
inc
xchg
cmp
ret
gs
out
addb
in
sbb
xor
cmp
dec
push
or
daa
cmpsl
cltd
lods
xchg
lret
sub
xchg
movsb
mov
sarl
pop
insl
xor
add
iret
push
cmpsb
sub
int
push
sbb
call
xor
fisubrs
rorl
inc
sub
inc
mov
mov
aaa
pop
cmpsl
cmpl
add
insb
mov
fdivrl
mov
mov
movsb
or
xor
push
in
out
cmp
push
push
push
inc
pop
push
jo
inc
das
add
add
cmp
cmpsl
xchg
call
jecxz
mov
sbb
xor
jp,pn
arpl
les
jmp
or
sub
add
inc
popf
lahf
cmp
dec
push
jp
add
decl
aas
inc
pop
or
xor
mov
add
fcoms
in
lea
sub
movb
incl
sar
xchg
cld
fmuls
cli
ss
ftst
popa
cmc
mov
loope
xor
add
rclb
push
cli
mov
lret
lds
faddl
pop
push
aad
inc
sub
fisttps
push
sbb
cld
pushf
mov
push
dec
mov
adc
cmp
xchg
cmpb
mov
cmpb
xor
adc
lea
and
xchg
jmp
or
test
adc
and
adc
stc
dec
fs
pop
add
mov
outsb
cld
add
and
addl
fisubrl
push
or
add
mov
adc
or
outsb
or
add
jo
shl
dec
mov
or
addr16
cmpsl
pop
add
lcall
cmp
add
test
dec
sub
mov
jmp
movsl
ret
xor
cmp
jae
jo
or
inc
lret
and
push
mov
into
xor
shll
and
and
sbb
adc
fisubrl
shr
test
push
js
pusha
jnp
loope
inc
jb
and
add
loope
and
icebp
mov
lods
mov
pop
and
clc
bound
jo
push
inc
loopne
aaa
js
or
popa
add
cmp
mov
xchg
arpl
divb
into
push
pop
pop
sub
mov
adc
loop
popa
inc
jmp
add
lret
mov
add
mov
ror
mov
lcall
push
cmp
in
xor
cli
aam
rcr
mov
inc
pop
rol
mov
movsl
cltd
and
or
cmpsl
mov
xchg
fwait
push
pushf
add
xchg
xchg
aad
inc
ret
data16
xchg
scas
mov
sbb
inc
cli
xchg
fldenv
add
adc
xor
mov
bound
mov
pop
adc
aaa
sbb
lea
shrl
jb
sbb
jle
dec
sub
cltd
or
add
pop
cmp
xchg
mov
es
dec
inc
popa
adc
es
outsl
mov
add
sarb
jo
add
pop
add
sbb
inc
lret
xor
arpl
addl
sub
mov
rcrb
sub
fwait
mov
mov
mov
sarl
mov
sarb
fildll
addb
xchg
repnz
rcrb
loope
jmp
pop
clc
and
sarb
mov
or
push
mov
aad
adc
sahf
shl
mov
clc
lds
xor
push
cs
das
sbb
and
mov
imul
ffree
sbb
push
fwait
push
cwtl
sub
jns
jle
mov
rcrb
inc
adc
jno
fildl
call
push
ds
outsl
and
inc
dec
je
mov
pop
sub
or
jb
pop
lahf
fwait
mov
lcall
loop
and
adc
add
xchg
in
test
pusha
mov
andl
pop
fists
jbe
mov
pop
aaa
xchg
adc
lret
dec
adc
adc
add
adc
xchg
adc
add
or
mov
push
cmp
cmp
dec
in
sub
sub
jl
xor
or
mov
or
xor
faddl
insb
fcmovnu
cmp
daa
dec
insb
mov
and
or
sbb
adc
adc
ror
dec
loopne
pop
loope
add
mov
push
inc
sbb
jecxz
sub
movaps
jno
xchg
in
rcrl
das
test
mov
add
popa
or
xorb
sub
rorl
mov
sub
outsl
ss
stos
jecxz
xor
lret
or
imul
add
sbbb
dec
lret
test
lds
jmp
and
and
fildll
rcrl
mov
push
addb
aas
pop
add
test
loope
shlb
sub
sbb
add
push
imul
mov
mov
fcmovne
fwait
adc
pop
dec
mov
mov
testb
out
and
das
push
or
jmp
mov
sbb
add
jns
inc
sbb
push
inc
xor
mov
mov
inc
mov
mov
outsl
jae
ds
lock
push
lods
es
push
loope
push
add
mov
adc
xchg
test
mov
iret
in
pusha
arpl
add
addr16
jmp
out
xchg
push
shrb
and
mov
leave
xor
adc
rcr
inc
dec
or
inc
push
pop
dec
loop
jae
mov
and
outsl
test
inc
aaa
mov
cmp
cwtl
fs
jnp
jp
mov
lods
pop
add
sbb
imul
xchg
aam
icebp
xchg
push
sbb
push
popf
cmp
xor
and
das
inc
inc
sarl
clc
jbe
push
rcl
sbb
xor
test
fsubrs
cmp
xor
jle
sarb
pop
xor
push
stos
jno
sbbb
adc
loopne
and
xlat
fstl
cmp
bound
mov
xchg
cmpsl
lods
hlt
icebp
sbb
xor
inc
push
lea
mov
push
pop
mov
mov
movsb
popf
xor
pop
xor
lea
test
xor
add
jnp
mov
fwait
dec
cmp
es
rclb
xlat
mov
int3
push
add
movsl
popf
sbb
jnp
mov
jns
testb
add
xor
sbb
rclb
cmp
popf
jmp
mov
xor
loope
call
dec
rolb
pop
adc
rorb
sbb
or
aam
jp
push
imul
cld
adc
out
dec
xchg
push
push
lret
mov
and
mov
enter
aam
mov
mov
fsubl
aaa
je
divl
sbb
xlat
dec
push
jo
add
ret
orl
adc
pop
adc
mov
and
testl
push
movsl
jno
pop
mov
sbb
dec
pop
lods
adcl
jl
mov
add
nop
ss
sbb
adc
lods
insb
or
pop
xchg
iret
mov
mov
stos
aas
lret
aam
pop
xor
sbb
sbb
cmpsb
adc
add
sti
mov
or
and
aam
mov
aad
mov
mov
push
negl
out
add
icebp
push
nop
push
in
clc
fiadds
and
dec
out
dec
adc
sbb
movsl
pop
lock
inc
ljmp
pop
or
mov
xor
and
cmp
pop
inc
mov
pusha
xor
nop/reserved
test
je
add
pop
jae
aas
into
add
fidivrl
adc
push
add
jae
jl
shrb
cmp
bound
jl
movntq
push
jae
lods
arpl
dec
daa
lret
add
jge
add
ret
sub
call
add
fcomip
mov
sub
or
fisttpl
jnp
sub
and
fcoms
inc
mov
or
xchg
cvttps2pi
sub
xchg
das
add
popf
rol
push
jo
scas
lods
dec
insl
jmp
in
or
jo
pop
sbb
das
in
les
push
mov
dec
push
enter
addl
adc
cmp
add
inc
dec
cld
es
and
cmc
dec
mov
or
ficoms
inc
mov
pop
push
add
mov
and
sub
or
xor
cmpb
leave
jecxz
mov
jne
imul
fmuls
rorb
jo
dec
out
adc
xor
imulb
sub
orl
rolb
in
inc
cmp
push
fisttps
adc
jg
mov
fmuls
xchg
xor
jl
dec
cmpb
add
fmul
xorl
cli
add
fwait
ret
hlt
mov
add
jle
mov
gs
insb
xchg
ljmp
mov
ja
xor
daa
pop
or
xchg
clc
rorl
lods
outsb
adc
push
push
lcall
mov
test
cmpsl
xor
rorb
xor
add
jg
or
pusha
inc
push
filds
loope
push
sub
xor
dec
or
or
xchg
sbb
sub
pusha
add
iret
cmpb
js
lret
xor
jns
sbb
shrb
jne
sub
adc
sbb
lahf
fsubrs
aad
sub
pop
sub
push
movsl
or
fcompl
cld
pusha
loopne
sub
cmp
test
jl
mov
pop
lods
adc
lods
rolb
add
dec
lods
mov
sbb
add
sbb
lcall
pop
shll
pop
push
popa
inc
test
dec
and
repz
imul
jno
adc
arpl
roll
out
or
adc
add
push
or
cs
xor
insl
add
mov
mov
dec
shlb
test
mov
inc
cmp
fadd
jg
add
push
or
xchg
dec
iret
movl
insl
cs
add
inc
pop
inc
push
mov
mov
mov
pop
fidivrl
xor
and
and
aaa
dec
and
shrb
outsl
pop
lcall
rcrl
pop
cltd
ds
icebp
jns
imul
pop
mov
mov
push
jle
jbe
int
mov
cmp
outsb
cmc
jb
xorl
js
test
mov
mov
inc
sbb
icebp
lret
xchg
push
clc
adc
lret
mov
dec
test
lret
dec
out
pusha
mov
loop
or
jle
loopne
aam
movsl
shll
xchg
mov
mov
jae
add
out
push
pop
aas
movl
mov
push
outsb
xorl
and
imul
sbbl
mov
loope
sbb
loop
adc
inc
sti
cmp
pop
testb
sub
xchg
pusha
ja
arpl
popa
cs
es
lea
into
pop
inc
dec
lret
call
and
xlat
fwait
cmpsb
pushf
add
test
or
add
or
lods
stos
popfw
add
arpl
pop
or
popa
dec
dec
pop
inc
jae
pusha
std
push
mov
push
rclb
xchg
add
adc
bound
mov
dec
rcrb
or
inc
push
add
jp
andb
fmul
mov
cmp
cmp
inc
std
or
arpl
pop
aas
imul
imul
es
and
pop
lret
fsubr
cmpsl
pop
or
mov
cmp
inc
push
shrl
pusha
popa
andl
inc
lds
lds
adc
xor
sbb
mov
hlt
and
push
in
xchg
je
lea
and
sbb
mov
mov
or
jbe
xchg
pop
out
gs
ljmp
adc
std
mov
sub
mov
stos
push
xchg
jmp
xor
movsb
xchg
les
les
mov
imul
and
jge
dec
ljmp
addb
add
iret
jae
push
inc
or
mov
add
inc
ss
popa
adc
push
mov
cmp
aad
movsb
daa
roll
repz
addl
loope
cmp
js
push
and
lods
lret
loope
test
xchg
add
movl
std
adc
mov
aaa
sbb
pop
adc
or
mov
sub
xchg
or
mov
sub
call
push
pop
inc
and
pop
add
bound
xchg
jg
test
jno
xchg
jno
mov
xor
xchg
mov
push
pop
stos
adc
js
popa
add
xor
mov
adc
dec
shrl
push
pop
lret
movsl
lcall
js
sub
push
jecxz
test
mov
mull
icebp
cli
cli
test
or
jg
add
nop
mov
inc
lods
mov
cld
icebp
xchg
cltd
push
lret
add
jmp
in
imul
test
mov
jnp
fisubs
push
add
xchg
lods
sbb
xchg
adc
in
jg
movsb
xlat
movsl
imul
sbb
outsl
xor
jle
sub
push
dec
mov
and
mov
pop
sbb
mul
stos
sub
das
popa
inc
orb
in
inc
loopne
mov
and
dec
pusha
js
cltd
aad
sbb
lods
roll
inc
imul
dec
lock
cli
push
adc
jp
jno
scas
sti
pmuludq
add
andb
in
sub
dec
add
lock
push
in
jecxz
test
jo
shll
jmp
add
lds
xor
jbe
cmp
sbb
and
loope
fcmovu
fbstp
fistpll
cmp
xchg
xchg
add
mov
mov
mov
push
fsubs
dec
sub
cmp
xchg
push
inc
cmp
pop
adc
dec
sub
sub
mov
or
and
jo
jno
imull
cs
mov
dec
cmp
fiadds
arpl
xchg
popa
xor
push
add
inc
pushf
je
out
mov
ljmp
jo
icebp
test
dec
popa
aad
das
stos
sbb
ret
fstl
ret
sub
mov
dec
dec
clc
mov
mov
pop
scas
inc
mov
mov
mov
push
push
popa
xchg
pop
xor
loope
push
mov
pmulhuw
arpl
cmp
rclb
xchg
push
in
sarb
lea
rclb
xchg
bound
adcb
fdivs
pop
out
shrb
mov
movsl
xorb
loope
mov
push
jp
xchg
aaa
xor
and
cmp
cld
add
jo
mov
je
mov
adc
test
xchg
jae
cmp
rcr
pop
xor
or
xchg
inc
in
adc
mov
cmp
or
pop
push
inc
mov
add
jae
mov
es
fiadds
incl
adc
pop
sub
insl
adc
mov
jnp
or
cwtl
rorb
loopne
lret
sar
add
xchg
xchg
inc
inc
xor
imul
jae
and
jb
sub
adc
add
inc
mov
inc
push
adcl
mov
adc
popa
add
lahf
sbb
push
int3
jno
leave
lods
or
filds
sub
or
in
sub
jae
cmp
in
in
xchg
rcrb
xchg
sbb
xchg
daa
dec
aas
mov
dec
cmp
test
fcmovnbe
lds
mov
mov
mov
test
popf
leave
int3
mov
pop
xchg
insb
pop
push
mov
jle
xlat
out
dec
jmp
adc
lret
inc
push
push
pop
fninit
push
jno,pn
push
push
jne
in
mov
jle
add
sub
jns
loop
inc
inc
sbb
sbb
test
xor
mov
test
fcoms
or
mov
div
inc
sbb
jae
cmc
sub
movsl
inc
pop
sub
push
fistps
lods
sti
in
xchg
push
int
imulb
cmpsl
hlt
adc
sbb
cli
loopne
fiaddl
mov
rorl
dec
std
jne
mov
addr16
sbb
jmp
jo
adc
aam
sub
shlb
push
xchg
dec
mov
add
cmp
fucomip
mov
xor
add
lods
gs
add
xor
xchg
je
lods
icebp
jmp
rcrb
lret
std
mov
iret
test
mov
add
xchg
add
enter
and
pop
sbb
sub
in
push
fcompl
lret
jp
pop
or
and
lock
adc
adc
call
sbb
pop
sahf
sub
call
xchg
mov
ds
push
test
shlb
push
cwtl
gs
lahf
adc
cwtl
in
xchg
add
mov
lret
jno
sub
cmc
sarb
ljmp
sub
lret
jl
dec
ss
adc
aaa
movsb
xchg
mov
and
cmp
das
fwait
mov
and
add
dec
sbb
inc
add
pop
xchg
or
outsb
outsb
sub
adc
imul
inc
and
popf
mov
clc
shlb
mov
xchg
push
mov
enter
mov
addb
in
jne
push
ja
and
test
inc
cmp
leave
or
imul
add
adc
xor
int3
and
enter
add
push
popf
sbb
fwait
test
xchg
jnp
sbb
and
sub
mov
jmp
in
inc
jmp
pushf
cmp
enter
and
sbb
cmc
test
push
pop
xchg
repnz
adc
add
ja
cmp
adc
xchg
sahf
sbb
mov
push
loopne
into
pop
sub
or
jns
add
pop
add
dec
popa
xor
fistpll
xor
sub
and
mov
loop
dec
and
xchg
jno
jo
or
lods
dec
sbb
int3
bound
inc
cmp
sbb
sbb
jae
nop
fidivrl
inc
pushf
xchg
stc
mov
shrb
insl
gs
sub
rolb
gs
daa
jns
daa
sub
sbbl
test
cltd
shlb
out
push
xchg
inc
jmp
mov
and
push
xor
cmc
shll
fldcw
inc
insl
loop
ja
test
movsl
insb
leave
sbb
loope
push
mov
mov
out
pop
ljmp
aam
add
mov
pop
or
loopne
jg
adc
and
dec
dec
aas
xchg
push
ja
js
adc
and
sbb
sahf
adc
mov
mov
in
in
into
add
pusha
out
scas
adc
jl
pop
imul
es
adcl
icebp
clc
push
fmull
ss
or
mov
push
cmp
push
dec
daa
xchg
dec
xchg
lods
in
addr16
adc
fcom
out
xor
add
jbe
add
dec
sbb
push
push
out
adc
aaa
inc
sti
int3
andl
mov
pushf
test
pop
inc
xor
sbb
xchg
icebp
and
adc
jne
dec
sbb
xchg
addr16
add
ja
mov
lods
pop
bound
ss
loop
mov
xor
push
jl
es
adc
mov
push
mov
adc
dec
and
lea
pop
in
cmpsb
push
xchg
fildl
adc
subl
add
sub
dec
pop
addl
sub
or
add
xchg
js
cs
rcrb
in
insl
mov
jne
lret
push
dec
je
mov
rcrb
loopne
inc
jo
push
mov
adc
adc
jo
add
add
jbe
cmp
out
xor
xchg
fwait
daa
sub
dec
pusha
in
ret
popf
cs
pop
sbb
push
add
xor
ret
out
movsl
cmp
addr16
es
cs
mov
jne
pushf
ret
add
mov
pop
mov
icebp
pusha
iret
sub
mov
jne
sub
ret
inc
inc
dec
pop
das
xchg
adc
cmp
cmc
ljmp
inc
add
push
out
shll
shrb
movb
sbb
add
test
inc
loop
popf
shll
fisubrs
xchg
sbb
jmp
mov
mov
mov
add
movsl
pop
add
or
fdivrl
lret
adc
orb
mov
mov
add
sub
jl
pop
mov
ret
js
push
mov
cmpsl
push
sbb
sub
cmp
cmpsl
add
xchg
leave
or
loope
xor
jne
push
fisubrl
and
fcoml
add
adc
mov
je
faddp
adc
imul
ss
and
pop
inc
fstps
add
ret
add
mov
cmp
or
sbbb
push
ja
mov
mov
and
jl
sti
xorl
inc
pop
sarb
daa
lea
or
and
std
dec
inc
sub
adc
push
dec
xlat
inc
dec
pop
test
mov
jne
bound
jno
xchg
inc
shr
stos
ret
jecxz
mov
cmpb
sbb
xchg
sub
xchg
xor
mov
outsl
lods
add
push
pop
xor
cmpsl
js
jne
gs
rolb
push
fstpl
ds
sub
pop
pop
inc
cmp
daa
stos
dec
mov
fiadds
pop
into
lea
iret
jb
xchg
cmp
subl
cltd
jp
mov
fs
dec
dec
pop
adc
fst
jno
cs
and
push
das
push
test
pop
ffreep
fwait
pop
dec
loop
shll
popa
lea
pop
rolb
fwait
iret
lcall
movsb
adcb
lahf
dec
iret
int3
and
inc
cmp
aas
inc
xchg
cmp
push
xchg
sbb
mov
lcall
fistl
mov
lods
mov
xchg
ja
lock
scas
dec
jns
sbb
push
inc
imul
mov
out
dec
or
add
lods
movsl
arpl
loopne
or
cli
mov
add
sbb
xchg
mov
ret
sbb
stos
aaa
and
dec
aas
ret
jne
mov
adc
or
ss
and
inc
cmp
and
imul
nop
xor
cmp
sub
pop
ret
stc
movsb
pop
sbb
fildll
and
push
rcll
xchg
add
pop
mov
push
inc
push
sbb
push
xchg
outsl
jecxz
cmp
jmp
add
jns
push
inc
mov
roll
test
pop
insl
gs
sub
sbb
jge
jge
fmul
pop
stos
adcb
mov
jo
cmp
and
push
subl
cmp
addr16
aas
dec
lock
gs
add
repz
add
sub
add
cmp
xlat
mov
and
loop
dec
add
sub
imul
gs
stc
das
call
push
or
push
std
adc
sub
adc
mov
mov
adc
sbb
orb
fnstenv
xor
aas
xchg
xchg
jge
fists
rorl
ret
xor
xor
out
popa
sti
inc
das
into
aaa
ja
in
or
mov
xor
int
movsb
xchg
icebp
inc
mov
outsl
push
inc
and
daa
and
mov
sahf
push
aam
shrb
fcmovnu
dec
call
in
add
sbb
xor
or
popa
les
jp
js
repz
and
mov
sub
inc
fs
xchg
cmp
loopne
cs
les
jmp
pop
mov
call
mov
pop
add
sbb
sub
fmull
push
sbb
clc
les
scas
mov
inc
mov
cld
arpl
lds
xor
iret
mov
mov
js
sub
cs
daa
ss
xchg
mov
icebp
cmc
loopne
in
cltd
adc
jbe,pn
loope
scas
outsb
sub
je
lret
loope
sub
xchg
xchg
jns
add
ja
fildl
loopw
dec
lds
or
jb
nop
jne
mov
push
mov
add
cmp
mov
ja
in
xor
xchg
push
jo
add
push
mov
ret
add
test
xor
sub
andb
sub
push
or
pop
add
in
xchg
and
test
mov
jecxz
xchg
loope
jmp
dec
mov
in
inc
mov
lods
mov
popl
sub
loope
cmp
sub
inc
sarl
mov
sub
leave
mov
orl
dec
imul
or
out
or
and
dec
push
imul
pushf
rcrb
js
xor
test
les
shl
cmpsl
mov
xor
xchg
cmp
shll
aad
adc
icebp
filds
out
lahf
xchg
andb
popa
rorb
jle
aam
or
xor
jmp
pop
mov
imul
cmp
outsb
mov
dec
cmp
mov
push
xlat
push
stc
loopne
adc
dec
rol
jns
inc
and
dec
or
inc
jp
or
push
sbb
sbb
fsubrs
shrb
xor
xor
adc
mov
icebp
xchg
shll
cmpsl
and
dec
pop
mov
pushf
mov
aaa
jnp
jnp
rorb
cmp
andl
popa
and
and
mov
sub
xor
and
repnz
mov
cmc
repz
mov
mov
add
dec
loope
jmp
ror
and
add
addl
std
icebp
mov
or
xor
rorl
fidivs
push
imul
inc
clc
dec
shll
xlat
mov
jo
adc
jge
cmpsl
xchg
leave
adc
xor
cs
pop
das
or
cmovp
and
push
cmp
ja
dec
out
ss
and
lds
mov
lods
mov
mov
xlat
xchg
cmp
mov
sbb
fwait
push
adc
imul
rolb
js
or
inc
outsl
inc
push
lods
sbb
mov
mov
ljmp
fildl
loop
sub
pushl
imul
adc
rclb
loope
fwait
and
push
and
icebp
add
dec
ss
mov
addr16
or
pop
cmp
shl
push
popf
es
pop
pop
imul
sbb
enter
sub
mov
ffree
add
add
imul
test
mov
shrl
xchg
xor
mov
xchg
test
sub
add
inc
and
pushf
push
bound
sar
cmp
add
ret
test
das
or
jl
cmpb
cmp
jg
pop
mov
cmc
mov
pop
aas
adc
push
aaa
and
jge
push
xor
xchg
js
cwtl
xchg
dec
xlat
dec
cli
in
out
or
aad
push
sbbl
jns
nop
sbb
xchg
mov
loopne
xlat
or
push
pusha
lea
sbb
push
push
adc
andl
roll
dec
popa
cld
push
add
das
jecxz
sbb
cs
adc
imul
jl
push
pop
scas
inc
add
mov
push
ss
and
cwtl
jp
shl
call
adc
testl
or
push
lahf
stc
xchg
arpl
cmp
test
sub
dec
es
jbe
fucomi
push
push
dec
lahf
xrelease
dec
or
mov
and
lea
dec
and
xchg
mov
dec
nop
pusha
pop
sub
adc
sub
testl
les
mov
xlat
or
adc
jb
clc
push
sbb
mov
hlt
push
or
adcb
not
or
and
frstor
mov
dec
test
lods
sahf
popf
add
sbb
add
add
and
mov
movsb
push
out
loopne
mov
or
inc
xchg
aam
jae
xchg
and
mov
ret
add
popa
sub
pusha
into
jg
js
dec
mov
in
loopne
orl
repnz
aam
sub
fucomi
cmpsl
push
les
mov
outsb
adc
fimull
out
ss
movsb
cmp
ds
fbld
dec
and
sbb
test
jno
jnp
push
xchg
cmp
and
inc
verr
xlat
neg
pop
imul
ja
mov
addl
add
popa
inc
sar
jg
jg
add
out
inc
dec
sub
cmp
dec
pop
ret
in
int3
lods
jae
jno
in
xchg
mov
cmp
loopne
ret
add
xor
inc
data16
into
sub
adc
inc
out
push
les
sub
inc
xor
adc
shrb
lret
loopne
mov
add
dec
sub
sbb
mov
lods
xor
idivl
or
mov
push
pop
add
push
sbb
mov
pop
xor
mov
andw
sti
nop
mov
arpl
mov
outsl
mov
out
jae
subb
fcmovnb
jnp
add
es
stos
push
test
lock
dec
xchg
push
fnstsw
add
mov
xchg
mov
mov
jmp
adc
addr16
negl
mov
in
jns
jle
out
pushf
aaa
aaa
shll
pop
xchg
dec
xor
mul
lahf
sbb
adc
inc
fwait
jecxz
out
inc
repz
out
and
jno
loope
push
push
ret
xor
sub
shll
cli
mov
jmp
aas
xor
add
mov
jge
sahf
ss
pop
dec
into
andb
dec
add
and
invlpg
cwtl
test
inc
mov
mov
jl
cmpsl
mov
out
pop
out
adc
pcmpgtb
ret
xchg
rcrl
mov
out
mov
gs
lods
scas
mov
xor
mov
rcrl
push
cltd
pop
jae
mov
stc
jo
add
xchg
jp
add
std
movl
push
or
xor
popa
xlat
fabs
mov
mov
std
jo
mov
scas
pop
das
fsubs
dec
cmc
push
pop
inc
xchg
loop
push
jecxz
popa
daa
js
cmp
scas
popl
das
jbe
push
or
pop
cs
xchg
mov
sub
pop
inc
mov
sbb
fucomp
scas
pop
arpl
mov
jnp
xor
sub
data16
out
jg
mulb
repz
inc
lds
xchg
cmp
leave
push
imul
xchg
push
push
and
pop
aam
sahf
inc
lods
ror
add
xchg
cmpsl
sbb
lahf
mov
pop
pop
dec
sbb
xor
fisttpll
cmpsb
push
cmp
fbld
in
outsl
aaa
bound
lahf
dec
jae
xor
push
fwait
out
data16
pop
push
repz
push
dec
pop
sar
jne
sub
xchg
loopne
cli
outsl
dec
or
popa
xor
mov
xchg
add
add
xor
faddl
into
scas
jb
sbb
leave
frstor
jl
mull
inc
pushf
inc
mov
push
pop
adc
push
inc
and
test
jns
shrl
insl
inc
xchg
or
sbb
cmp
mov
adc
mov
add
pop
clc
in
inc
adc
ljmp
mov
and
cmp
outsb
mov
and
cmp
in
and
xorb
and
pop
lock
popl
jmp
scas
iret
lods
adc
xchg
test
iret
js
sub
cltd
cmp
push
lea
insb
jecxz
js
cmpl
inc
movsb
or
mov
pop
dec
sub
aad
cltd
les
arpl
and
adc
data16
das
sub
repz
cmp
jge
pop
xchg
sbb
mov
pop
xor
out
loopne
sahf
fisttpll
or
mov
or
loopne
xchg
sub
arpl
mov
movsb
add
daa
or
nop
push
cmpsb
fucomi
ds
cmp
pop
in
add
adc
cmp
push
jl
or
je
jbe
mov
push
cmp
testb
fmul
rolb
cwtl
das
imul
xchg
lcall
fs
enter
inc
call
inc
pop
mov
jl
lret
mov
sbbl
addr16
lods
scas
or
or
cmpsb
and
lods
fsubp
sub
aaa
jge
xor
enter
aad
and
fldl
leave
xor
pop
and
fcomp
loop
or
push
xor
mov
out
sbb
push
scas
or
mov
ret
shr
xchg
addl
cmp
cs
cmp
jno
or
or
dec
bound
mov
scas
outsb
mov
fidivl
push
mov
push
outsb
jnp
rol
les
fcmovnb
inc
adc
mov
gs
mov
adc
xchg
mov
scas
mov
mov
pop
ret
loope
mov
scas
lods
mov
test
push
fcomps
sbb
rol
test
aam
dec
push
add
cmp
mov
add
cli
push
aas
pop
xor
iret
add
inc
in
das
add
inc
stos
adc
adc
or
jl
dec
ret
iret
or
inc
ret
xor
lret
stos
pop
inc
int3
and
and
and
jns
or
icebp
test
sbb
adc
nop
dec
add
das
jb
imul
sub
or
roll
les
mov
adc
and
ret
add
jo
loop
leave
xor
or
pop
mov
scas
ja
push
pushf
mov
sbb
mov
or
mov
mov
and
addl
movsl
sub
push
xor
add
mov
mov
and
add
out
pop
add
mov
xchg
pop
sbb
leave
jae
fnstenv
sub
mov
cmp
mov
add
jno
jb
enter
or
and
sub
pop
mov
mov
xchg
push
dec
cmp
mov
int
jle
pop
xor
fstps
test
xor
push
add
push
add
mov
mov
inc
push
pop
mov
jo
dec
xor
inc
adc
push
stos
fisttpll
dec
outsb
pop
push
ds
or
roll
mov
dec
push
test
mov
xchg
jge
push
xor
xor
push
inc
or
push
or
addr16
xchg
scas
push
push
dec
in
pop
push
jmp
sbb
loop
xor
leave
lods
aaa
in
ret
or
and
sahf
and
addr16
dec
lret
adc
cmpsb
sti
push
cltd
jne
mov
lods
mov
sbb
mov
mov
cmp
cmp
sbb
ljmp
ret
adc
or
lret
stos
mov
stos
or
insb
cltd
les
cmc
dec
loop
jns
xchg
mov
jo
je
and
add
andb
rorb
cmp
lds
je
mov
or
dec
add
add
inc
xorb
xor
imul
enter
push
nop
sub
daa
xor
add
cwtl
bt
into
pop
les
jns
adc
bound
push
test
and
sub
and
push
mov
lcall
je
or
arpl
or
aaa
ret
lock
and
jp
out
cli
mov
daa
into
mov
orb
dec
pop
loope
adc
fwait
add
add
pusha
js
xchg
adc
cwtl
add
iret
and
or
out
movb
add
xchg
mov
iret
int
xlat
sbbb
loopne
mov
loope
rorl
or
es
adc
mov
sub
sbb
insb
inc
test
add
and
add
imul
add
ja
push
orl
adc
xlat
adc
adc
adc
adc
subb
int
lret
ret
add
shrb
add
jl
sbb
add
add
and
cmpxchg
or
ds
add
add
test
insl
xchg
mov
dec
mov
mov
leave
adc
adc
push
rcr
adc
add
dec
jecxz
and
xor
jl
es
in
dec
push
jne
add
dec
shlb
inc
daa
bound
fstps
lahf
pop
and
imul
notb
pop
xor
stc
popf
lock
add
adc
daa
in
fnstsw
mull
jne
je
add
imul
fsubp
add
jne
inc
fidivs
orb
loopne
and
add
sahf
and
arpl
into
mov
add
cltd
in
or
pop
push
mov
bound
lret
mov
sub
sbb
fiadds
mov
in
imul
xor
push
adc
pop
cmp
daa
bound
or
iret
pop
clc
imul
les
dec
xor
sbb
loopne
sub
roll
xor
add
lods
adc
andl
sbb
cli
js
cmp
sbb
pop
pop
dec
sbb
adc
scas
pop
xor
and
inc
js
inc
inc
and
jl
adc
insl
add
adc
popf
inc
xchg
leave
or
and
jg
les
lock
or
xchg
add
out
cmpl
aam
repz
daa
add
xchg
cwtl
add
add
mov
inc
pop
add
mov
insl
xor
sub
push
mov
jno
vandps
iret
test
stos
or
rclb
imul
adc
and
jmp
add
pop
mov
push
jecxz
loope
adc
in
pop
adc
adc
mov
jmp
mov
movsb
and
lea
add
inc
bound
mov
imul
and
lret
mov
add
add
adc
das
roll
lahf
pop
fwait
dec
lods
mov
mov
sbb
arpl
jbe
push
and
cmp
jmp
nop
cmp
notl
das
int
lret
fstpl
adc
iret
add
mov
sub
bound
xor
add
cs
sbb
pop
rorb
rolb
data16
enter
pop
jbe
mov
ss
int
mov
loope,pn
mov
pushf
xor
js
cwtl
es
pop
fsubrl
add
add
xor
icebp
and
ja
cmp
movsl
adc
and
jnp
fildll
add
xor
inc
fs
shlb
or
lods
nop
cltd
sub
movsl
clc
push
push
inc
fcomp
sahf
pushf
sub
jmp
sysret
in
and
xor
inc
sub
push
lods
popa
into
mov
xchg
fistps
mov
inc
cmpl
inc
xchg
jns
rolb
add
inc
add
lock
popl
inc
xchg
in
or
data16
cwtl
iret
jle
ret
in
imul
jmp
ss
in
push
dec
mov
sbbb
dec
jmp
fs
lock
ret
push
mov
pop
ffree
fbstp
pop
out
xchg
test
rclb
inc
mov
jbe
mov
shlb
fstl
sbb
int3
adc
cmp
pop
xorb
rolb
mov
ja
pop
dec
test
add
push
int3
loope
xchg
xchg
xor
mov
xor
nop
mov
sub
add
aam
fs
adc
or
rcrl
pusha
inc
mov
cs
adc
sbb
sbb
sarb
cwtl
fcos
rcrb
fmuls
enter
push
fiaddl
call
sbb
or
mov
js
stc
sub
sbb
cmp
and
sbb
and
push
mov
mov
lock
push
xchg
icebp
les
and
pop
orl
test
jb
dec
jae
test
dec
cmp
cmp
xor
cmp
aas
imul
rcrb
sub
aaa
sbb
and
xchg
ret
push
sbb
jbe
popa
daa
sub
adc
pop
and
add
sbb
xchg
inc
addb
mov
call
add
movsl
lods
fistpll
jo
cmp
xchg
lcall
fistl
inc
leave
xchg
std
dec
rcr
sbb
push
ja
sub
jp
shrl
nop
enter
cmpsl
test
lods
pop
xchg
das
fdivrs
rol
mov
or
inc
shlb
lret
or
xchg
xchg
push
add
pop
cmp
rorl
xor
jbe
adcb
jbe
aam
add
or
xchg
loope
outsb
fstp
sub
xor
ffree
and
roll
ja
aaa
mov
clc
inc
shrb
or
or
dec
xchg
fadds
fdivr
in
adc
pop
mov
mov
sarl
imul
xchg
cmp
pusha
lods
jmp
push
push
test
xchg
adc
fisttpl
lock
push
mov
sarl
mov
iret
adc
bound
cltd
xorl
or
and
push
xchg
mov
mov
hlt
mov
jg
pushf
imul
sub
jmp
mov
sbb
and
push
out
push
dec
add
scas
insb
test
dec
js
lock
pop
faddl
push
lcall
int3
flds
push
inc
insb
fdivl
loopne
adc
dec
push
popa
inc
pop
int
and
out
add
mov
pushf
fmuls
xor
mov
inc
mov
aam
je
lahf
add
decl
ret
adc
add
fbstp
add
test
fdiv
iret
in
pop
stos
push
pop
negl
pop
movb
cwtl
dec
xchg
test
sbb
mov
and
sbb
inc
cmp
pop
lods
push
and
mov
sbb
sbb
fcompl
mov
data16
mov
pop
sbb
pusha
shrl
incl
jmp
loope
adcl
popa
mov
ret
xchg
ss
out
rorl
xor
cmpsl
popf
test
dec
inc
cmp
pop
add
cld
jns
adc
rorl
push
or
testl
add
rorb
dec
rol
lods
push
inc
inc
enter
sbb
and
insb
mov
cmpsl
and
sbb
ret
mov
into
add
and
shlb
outsb
clc
jnp
jp
jb
cltd
xorl
xchg
adc
and
mov
adc
ss
push
stc
sbb
or
push
push
dec
in
repnz
push
js
adc
mov
add
jmp
test
jl
xchg
fimull
scas
and
dec
adcb
adc
adc
jo
enter
lods
add
movsb
subb
jg
push
pop
mov
mov
cmc
aaa
lods
add
into
push
add
push
nop
add
test
andl
adc
pop
dec
cmp
inc
scas
add
or
push
add
inc
test
mov
or
inc
pop
mov
out
rclb
cmp
xor
and
jp
add
mov
loope
mov
sbb
sbb
sbb
into
jl
push
je
adc
scas
sbb
jecxz
sbb
cmpb
and
addb
mov
cmp
insb
pusha
call
inc
or
and
cmp
mov
sub
push
adc
adcb
test
cmp
aas
mov
and
adc
add
xchg
and
sub
test
mov
ljmp
cmp
mov
or
mov
sub
ror
loop
pop
sub
les
stos
pop
add
jns
xor
xor
push
daa
shrl
mov
sub
sbb
mov
sub
cmc
xor
mov
jbe
test
int
sbb
jmp
loop
lods
int3
adc
sub
shlb
dec
lcall
add
mov
fisttpll
push
inc
movl
pop
daa
inc
popl
mov
mov
sub
sub
jne
sbb
xchg
arpl
pop
push
add
loope
iret
cs
sub
fimuls
cmpsb
mov
sbb
ret
xor
fisubl
test
lock
cli
outsb
and
repnz
xor
pusha
jnp
fisttpl
add
dec
pop
dec
jbe
cmp
add
mov
push
js
xor
mov
mov
aas
push
and
mov
push
inc
xor
icebp
cmp
dec
or
sub
shufps
and
ret
push
cs
push
ret
shll
sbb
pushf
cmc
dec
cmp
fsts
push
lcall
testb
rorl
loop
data16
jecxz
push
imul
push
mov
xchg
pop
inc
push
sub
pop
lods
dec
and
cmp
and
pop
mov
andl
pop
sub
or
scas
lds
sub
ss
outsb
or
pop
icebp
xchg
jne
dec
mov
fadds
xchg
es
test
add
cmp
inc
out
mov
sahf
cmp
add
lock
es
cs
push
and
push
js
fsubrs
andb
rolb
daa
out
lods
adc
dec
and
dec
and
ljmp
sub
lods
and
adcb
stc
ret
sub
jg
add
aam
cmp
inc
mov
in
and
mov
inc
dec
and
ds
and
sbb
cmp
jle
xlat
fiadds
pop
add
test
add
dec
sbb
cli
gs
iret
mov
adc
or
sub
int3
into
jg
add
addl
or
cmp
jne
aas
jmp
cmp
stos
out
sti
mov
adc
loop
daa
iret
cmpl
ret
jmp
and
shlb
mov
mov
jle
lea
inc
pusha
lea
repz
inc
or
sahf
in
jmp
and
pop
loope
cmpsl
int3
mov
and
add
jb
jmp
mov
mov
in
xchg
cmp
xchg
lods
or
adc
test
movsb
xor
pop
dec
mov
add
jl
pop
add
out
mov
test
fld
mov
mov
push
lahf
jo
daa
lods
arpl
pop
daa
mov
andb
bound
and
test
mov
jno
pop
insb
sub
mov
push
fsub
sbb
das
sub
push
movsb
add
xchg
inc
sarb
jl
cmp
add
cmc
add
xor
aas
dec
or
inc
and
or
pop
int
push
inc
shr
nop
js
mov
jno
sbb
xlat
inc
push
push
and
adc
xorl
xchg
add
dec
call
pop
cmc
cmc
push
arpl
mov
jmp
testl
and
push
and
mov
popf
or
dec
pop
add
mov
fdivrl
jle
pushf
adc
imul
in
cmp
push
jne
rclb
lds
xor
arpl
aaa
outsb
sub
jb
loop
mov
cmpsb
jmp
add
inc
pop
lds
hlt
jb
inc
dec
sbb
mov
pop
ss
add
dec
jl
xchg
push
inc
add
daa
jecxz
ljmp
fbstp
mov
cmp
push
aad
mov
movsl
xchg
adc
adc
sbb
popa
and
dec
das
arpl
inc
inc
add
inc
dec
add
xor
xchg
sbb
lcall
je
mov
mov
xor
pop
adc
or
arpl
mov
sbb
loopne
lea
cli
shlb
lock
adc
lods
inc
cmp
inc
mov
push
dec
call
add
adc
iret
mov
or
and
push
jae
mov
iret
mov
iret
lret
mov
cmp
shlb
push
jg
xchg
outsb
jecxz
inc
outsl
jno
test
sbb
mov
sub
adc
and
pusha
push
push
arpl
pop
cmp
and
sub
add
lds
loope
sub
loopne
cmp
lock
stc
or
push
add
add
cs
or
imul
lods
inc
sbb
aam
rolb
addb
sbb
jp
cmp
cli
jns
sarl
repnz
adc
nopl
mov
jge
and
push
xor
je
xchg
mov
sbb
or
mov
fisubrl
stos
mov
push
push
jg
es
and
lods
pop
subb
mov
fisubs
sbb
jecxz
push
fistpll
mov
cmovns
sub
addl
aas
test
in
sub
mov
sbb
dec
inc
orb
stc
mov
adc
inc
xor
cs
je
sbb
aas
inc
aaa
push
mov
add
push
or
or
add
lret
leave
cmpsb
sbb
jge
shll
fnstsw
add
pusha
mov
inc
sub
int
mov
push
lock
sbb
mov
add
stos
mov
jbe
mov
pop
and
xor
inc
test
xchg
aam
push
aas
fistps
scas
lock
sub
and
int
add
lcall
xchg
aad
xchg
xchg
push
in
jae
je
in
sbb
bound
call
clc
xchg
roll
fnsave
lock
jns
dec
jl
loope
sub
je
adc
repz
sar
adc
cs
mov
jne
ljmp
repnz
pop
fsubrl
daa
movsb
pop
xor
pop
or
xor
xchg
xor
daa
mov
outsl
test
push
je
or
add
xchg
cs
fwait
cmp
pop
push
push
add
es
mov
inc
lcall
mov
sbb
ja
ret
or
js
lods
xor
sub
xchg
es
jno
xchg
xchg
test
fsubrs
dec
sbb
xchg
dec
push
test
sbb
popa
xlat
pushf
xor
cld
pop
and
jmp
enter
add
mov
and
cli
and
push
jbe
jle
push
jle
imul
sbb
fadds
mov
jmp
dec
stos
loope
mov
add
rcll
lods
enter
inc
add
loope
add
addr16
pop
push
nop
add
fcom
scas
inc
xchg
xor
mov
fldcw
mov
test
and
cwtl
aaa
adc
and
movsb
nop
add
sub
call
rorb
fcoms
inc
imul
pop
inc
adc
pop
mov
pop
push
sub
pop
xor
iret
lds
enter
shl
adc
repnz
sub
leave
aad
push
inc
mov
push
dec
ret
aaa
loop
popa
mov
rcrb
or
mov
and
push
sbb
mov
sbb
mov
push
push
enter
jae
pop
xchg
add
sbb
mov
push
and
ds
ret
sub
pop
and
jb
arpl
adc
add
fldt
popf
or
adc
pop
and
int
popa
fcmovbe
add
movsb
pop
pop
jo
push
push
or
hlt
imul
repz
and
sahf
mov
scas
shll
std
mov
push
sbb
scas
and
rolb
lea
mov
pop
mov
adc
pusha
decl
xor
test
mov
sub
rcll
cmp
lahf
rcll
add
xor
xor
lds
push
add
jmp
jbe
add
xchg
fstl
cmp
lods
adc
int3
dec
loopne
xorb
sub
mov
and
test
push
pop
fs
inc
js
sbb
dec
fdivl
popa
sbbl
mov
test
dec
push
rcr
dec
push
inc
in
movsb
pushf
adc
iret
mov
lea
aam
ja
cmp
inc
add
adc
push
fistpl
push
das
or
jae
mov
or
or
pop
call
loopne
cmc
pop
mov
decl
je
cmc
cmc
jle
jle
push
stos
push
in
sbb
xchg
inc
adcb
inc
mov
lods
dec
lods
lea
sub
inc
arpl
adc
or
xchg
sbb
cmpsl
scas
mov
mov
inc
mov
iret
cmp
call
mov
lock
inc
or
sub
fwait
cltd
or
mov
push
test
rol
dec
out
inc
xchg
movsb
xchg
push
jg
add
add
ret
inc
out
add
add
or
mov
test
shll
or
pop
or
sbb
je
sub
xor
scas
xchg
cmpsb
mov
inc
mov
push
lahf
out
jle
mov
insl
mov
jns
xchg
adc
adc
jb
test
and
lods
fucomip
into
mov
inc
ljmp
jo
push
mov
sbb
push
test
add
scas
xor
pop
dec
sbb
xchg
inc
shlb
push
movsb
in
rorb
shlb
push
push
mov
or
pop
push
push
or
pusha
push
jo
xchg
and
cmp
fimuls
cmp
ret
sub
sub
lret
push
inc
ljmp
and
xor
lods
mov
dec
mov
push
movl
pusha
inc
push
test
ficomps
mov
loop
addl
pop
dec
loop
in
mov
aas
push
inc
adc
sarb
xchg
sbb
div
insl
cmp
push
and
add
shrl
test
mov
ret
push
outsl
call
inc
int
lret
in
out
xchg
js
push
aam
jge
jg
mov
aaa
and
pop
jmp
adc
dec
fstp
cltd
inc
jne
imul
and
sub
int
pop
enter
nop
jbe
shrl
das
fstl
incb
in
cli
and
xor
testl
adc
xor
xchg
ret
iret
push
insb
cmpsl
fcmovnu
stc
push
pop
xor
sub
lea
push
pop
xchg
pop
shrl
ss
pusha
xchg
dec
das
mov
jge
mov
mov
rol
dec
mov
in
test
xchg
nop
mov
jnp
jno
jg
jns
inc
aad
mov
mov
sbb
xchg
bound
xor
sahf
dec
pop
push
fwait
xchg
mov
lret
scas
cmp
inc
push
insb
es
and
lods
mov
notl
rorb
xchg
cltd
jnp
ret
jle
lds
loope
cmpsb
and
cwtl
jle
roll
mov
mov
orb
loop
inc
inc
jne
out
inc
sbb
movsb
imul
push
mov
andl
sub
pop
stos
fimuls
outsb
sbbb
sub
fildll
add
pop
dec
adc
fcomip
mov
shl
sub
rol
cmpsl
std
imul
adc
arpl
pop
call
daa
test
pop
push
inc
pop
fsts
test
add
aam
pop
xchg
inc
dec
pop
lock
jecxz
sar
adc
mov
add
inc
fldl
push
andl
enter
inc
arpl
mov
adc
cmp
xchg
scas
mov
adc
jge
jns
jne
insl
ss
and
mov
test
shll
cmp
and
pushf
jle
les
or
inc
lods
pop
inc
or
iret
pop
sub
int3
or
add
inc
or
push
jle,pn
repz
pop
push
pop
and
out
xor
or
mov
sti
or
mov
cmpb
js
dec
into
in
xchg
test
clts
mov
or
push
fsubrl
lds
rolb
ds
and
mov
lret
or
gs
shr
sbb
rclb
mov
addl
dec
lahf
and
jno
mov
xorl
test
mov
in
xchg
sub
cmp
mov
pop
bound
ret
or
pop
xor
jle
fdivrs
adc
repz
cmp
popa
inc
xor
and
pusha
stc
jle
jmp
flds
sbb
mov
dec
jl
movsl
adc
push
loope
sbb
and
in
inc
rclb
sub
icebp
mov
arpl
stos
outsl
iret
rcll
repnz
loope
xor
iret
pop
adc
inc
push
movsl
mov
add
dec
in
lret
or
xchg
iret
inc
pop
into
aas
push
sub
and
inc
xchg
dec
sub
sbb
ror
mov
popa
or
sbb
idivl
sbb
and
and
gs
clc
and
or
mov
or
and
mov
add
in
mov
cld
push
adc
in
mov
and
dec
mov
enter
jl
mov
aaa
xchg
dec
adc
or
jne
jns
subl
mov
test
jmp
mov
ret
test
pop
inc
clc
mov
inc
add
pusha
mov
scas
pop
inc
jecxz
push
cmp
add
or
les
cmp
in
or
xchg
ja
add
shlb
or
xlat
test
dec
insl
mov
dec
inc
fiaddl
aaa
xor
and
hlt
aad
insl
cmp
sbb
stc
shll
sahf
popa
pop
and
xchg
or
mov
push
lods
adc
in
gs
fidivl
mov
xor
sbb
fstp
ss
push
mov
cmp
xchg
pop
inc
imul
test
shll
push
dec
out
or
or
sub
inc
pop
mov
nop
cld
push
sub
mov
shlb
lods
cmpsb
mov
jns
or
loopne
rclb
insb
sub
sub
mov
add
incb
mov
jge
dec
xor
arpl
mov
or
adc
cmp
fldcw
rolb
add
fisttpl
lret
or
js
loop
push
sub
in
push
pop
cmp
cmp
subb
insb
pusha
mov
stos
adc
imul
es
popa
add
add
addl
shlb
and
std
jge
cmp
lret
mov
sub
pop
and
outsl
cmpsb
and
sub
dec
rorb
ret
sbb
lods
pop
arpl
add
jns
adc
cmp
pop
xchg
sub
adc
arpl
mov
movsl
mov
sub
and
pop
and
dec
or
add
dec
jle
jae
mov
push
mov
pop
and
push
iret
cmp
jo
sbb
adc
sbb
sti
aaa
imulb
push
and
das
jmp
xchg
and
cmpsl
sbb
aad
iret
cmpsb
add
xor
cmp
sbb
dec
daa
rcl
and
imul
push
shrl
xlat
outsb
std
jne
push
mov
xchg
int3
push
lods
rolb
addr16
out
jae
fstl
dec
mov
outsl
and
jmp
aad
pop
test
or
add
iret
xchg
push
iret
push
popa
inc
out
nop
inc
push
outsl
jle
mov
das
pushf
fnsave
add
cmp
cmp
lret
out
push
xor
sub
pushf
test
dec
push
adc
inc
sub
sbbb
dec
mov
loop
arpl
xchg
imul
subl
ret
test
out
jle
and
or
mov
jo
test
or
or
inc
orl
mov
loope
cltd
inc
mov
sub
inc
js
push
loop
add
gs
xor
cmp
scas
jo
pop
jb
push
loopne
mov
mov
in
sbb
fs
fidivs
addb
jne
std
jno
icebp
mov
sub
shll
sbb
dec
mov
jo
jp
popa
rcll
and
sbb
and
add
test
xchg
jg
or
loopne
sbb
jbe
stos
add
mov
fwait
js
test
push
inc
ljmp
jle
pop
das
daa
push
je
mov
ds
aam
mov
add
mov
adc
out
lds
add
and
push
out
mov
dec
mov
jge
jmp
push
jmp
pop
lock
push
outsl
ja
jge
cmp
nop
gs
pop
loop
add
vmovupd
bound
sbb
les
jae
cmp
mov
scas
das
fsubp
and
lock
and
pop
adc
ret
fnstenv
loopne
lods
dec
cmp
fidivs
lret
sbb
and
lret
lret
lret
xchg
shlb
adc
faddl
add
xchg
or
dec
rolb
sub
sbb
pushf
out
pop
aam
mov
add
fldenv
add
data16
xchg
mov
mov
addr16
dec
and
loopne
dec
mov
das
lds
mov
inc
sbb
cmp
fs
dec
and
ljmp
or
ret
or
enter
aas
pop
lret
mov
jns
xchg
imul
int3
nop
fdivrs
sbb
cld
xor
jecxz
lods
push
push
pop
dec
outsl
test
pop
outsb
xor
pop
add
cmp
sbb
xchg
sbb
cld
jo
jl
sub
je
jbe
int
add
xlat
cmp
sub
or
adc
jbe
ret
push
and
mov
fiaddl
hlt
faddl
pop
ficomps
loope
add
repnz
out
dec
int3
clc
mov
ret
dec
add
mov
xchg
out
cmp
pop
jbe
pop
cmpsl
iret
cmp
mov
or
jno
sbb
ljmp
daa
mov
es
xlat
cmp
jo
inc
push
lock
pushf
test
or
fadds
in
dec
cmpsb
mov
jno
pop
js
inc
mov
and
int3
addl
sbb
comiss
sub
pop
jno
sbb
pop
out
lods
push
mov
loope
mov
out
push
adc
test
sub
cmp
jg
mov
rclb
das
inc
in
dec
ret
rcr
push
shl
std
mov
lcall
std
adc
push
sbb
fmuls
sbb
push
or
xor
jl
jae
sbb
into
loop
movsb
int3
jp
ja
pop
jno
cli
or
push
fucomp
movsb
fstl
adc
lea
imul
rolb
mov
adc
adc
jge
cmpsl
dec
cs
mov
imul
xor
xor
cmp
repz
inc
jo
mov
and
or
jbe
movsb
mov
add
fbstp
mov
sbb
add
jb
sbb
out
in
add
test
mov
adc
pop
addb
fldcw
movsl
iret
sub
fistl
insb
lret
gs
adc
xorl
add
jno
add
adc
and
add
add
add
data16
enter
inc
insl
and
aaa
jae
add
flds
enter
jae
push
leave
cmp
inc
imul
sub
cmpsl
cmp
mov
fcoms
fadds
out
movsl
add
push
push
or
jg
out
clc
inc
in
cmp
orb
adc
addr16
sbb
in
or
jnp
dec
dec
and
les
lock
int3
cmpsb
roll
inc
stos
outsb
addr16
xor
in
addr16
push
xchg
test
add
add
js
loop
test
push
adc
lret
ret
xor
sbb
nop
daa
insb
mov
cmp
sub
inc
loope
clc
js
push
sbb
pop
cli
add
add
rolb
or
xorb
clc
iret
sbb
mov
pop
lock
add
loopne
or
xchg
in
jae
adc
sarl
mov
popa
ja
test
mov
loop
sub
mov
mov
inc
xor
aad
jo
push
push
xchg
loopne
sbb
and
in
bound
add
sub
lds
call
outsl
lret
adc
push
sub
add
push
int3
jle
das
insl
mov
enter
add
iret
xchg
jnp
les
nop
inc
inc
loope
and
movsl
add
jnp
xchg
stos
add
xchg
mov
sbb
inc
sbb
imul
xchg
push
rclb
cmp
lea
xchg
pop
push
add
push
add
jo
imulb
popa
in
push
das
sub
adc
jp
call
mov
inc
mov
subl
lahf
data16
out
imul
and
xor
je
orl
test
loopne
or
cmpsb
lcall
pop
cltd
mov
sbb
xor
or
sbb
pop
into
pop
add
jmp
rorl
int
arpl
xlat
movsl
rcr
push
ljmp
push
bound
into
add
sub
out
cmc
arpl
xchg
aad
call
and
sub
xorb
enter
jbe
ja
mov
je
sub
pop
nop
push
xor
rcrb
pop
jnp
xor
pop
pop
add
jno
push
mov
mov
pop
and
scas
pop
lods
pop
mov
adc
popf
fsts
mov
jne
dec
sub
addl
fimull
inc
outsb
fwait
sub
and
pop
and
or
pusha
rorb
scas
lcall
push
sbb
add
loopne
aaa
sbb
pop
mov
mov
je
push
xor
sub
push
inc
dec
dec
xchg
and
push
sub
pop
shll
mov
push
test
sub
mov
mov
pop
mov
push
xchg
out
sahf
lret
loope
cmpsl
in
enter
out
xchg
cmp
and
icebp
fwait
or
sbb
clc
icebp
test
loope
jp
xor
mov
iret
popf
add
add
pop
mov
inc
test
push
sbb
jge
adc
daa
insl
xchg
xchg
cmc
nop
xor
gs
dec
ret
sbb
mov
pop
test
push
lgs
xor
dec
popf
fadd
lret
add
pop
inc
or
js
adc
das
insl
inc
insl
and
push
sub
sub
pusha
mov
xor
add
or
cmp
call
or
mov
ja
add
and
gs
sbb
push
sbb
dec
mov
pop
cmpb
dec
sub
lock
popa
into
inc
sub
or
pop
mov
cmp
dec
sbb
dec
mov
inc
std
and
mov
loopne
imul
push
aad
xor
mov
push
dec
imul
cmp
loopne
int3
mov
je
or
test
gs
xor
pusha
fnstsw
lret
sub
sub
roll
int3
ret
xchg
pop
imul
rcl
push
xor
fstpt
and
mov
xor
or
jae
push
ljmp
dec
inc
xchg
iret
pop
push
lcall
dec
inc
lahf
add
inc
jp
outsb
xchg
lods
ljmp
mov
mov
imul
add
mov
enter
pop
cltd
cmc
test
lret
inc
ja
sahf
fldcw
dec
xchg
push
add
test
fnstenv
mov
mov
pop
jne
xchg
enter
push
into
fldcw
sbb
cltd
xor
fst
inc
jge
push
aad
mov
into
fadd
pop
das
nop
add
jne
xchg
mov
xor
flds
test
xchg
movsb
cmovnp
stos
adc
pop
loopne
fcoml
xchg
add
aam
push
sub
jno
xchg
rcl
sbb
cmpsl
dec
je
call
pop
imul
dec
pop
adc
and
mov
nop
cmpl
mov
sbb
sbb
popf
add
outsl
in
sub
push
sbb
lahf
dec
pop
shll
adc
cmpsb
lcall
and
loop
add
cmp
ss
out
push
xor
insb
stos
scas
adc
push
jge
mov
cmp
imul
popf
into
lods
inc
cmp
leave
mov
and
mov
push
das
mov
aad
out
fdivp
js
rol
cmp
lods
cmp
sarb
test
xchg
push
ljmp
lods
orb
aam
and
mov
fstps
inc
lret
inc
ftst
xor
inc
das
icebp
pop
add
lods
imul
dec
push
mov
push
dec
sbbb
adcb
xchg
xchg
or
push
fidivrl
xchg
sub
imul
push
icebp
sbb
popa
mov
sbb
push
mov
dec
mov
ds
xchg
hlt
mov
jno
mov
pop
pop
sbb
sbb
add
dec
mov
sbb
sub
int3
add
aas
xor
xor
mov
loopne
rorb
push
ffree
loopne
dec
bound
and
add
mov
mov
js
ja
jno
sbb
pop
je
outsl
jmp
or
adc
mov
and
jle
push
pop
enter
inc
cld
out
repz
dec
shrb
mov
cmp
add
jge
rolb
mov
pop
and
lea
aaa
adc
jns
pop
and
xchg
movsl
mov
icebp
das
ja
sub
andl
lods
add
fwait
shlb
arpl
adcl
aam
cmpsl
and
and
or
fadds
mov
mov
lcall
popa
lods
ret
xor
loop
xchg
scas
aaa
add
sbb
stos
test
and
push
or
cmp
cmp
popa
sub
xchg
mov
ret
add
push
push
inc
adc
fld
andl
loopne
and
out
ret
lret
push
inc
cmp
sbb
or
pop
notb
pop
mov
mov
pop
inc
andl
inc
lahf
or
mov
mov
push
pop
andl
xchg
jle
jg
jp
jo
es
cmp
sub
out
add
pop
push
daa
stos
xchg
push
add
out
mov
imul
lock
cmc
mov
in
xorb
add
movsl
mov
pop
mov
outsb
stos
adc
dec
shll
es
sbb
sbb
lea
loopne
nop
sar
ds
enter
mov
in
push
jb
loope
imul
negb
xor
add
xchg
sub
sub
or
out
xor
cmp
outsb
jle
sti
jbe
jne
lods
out
outsb
in
psadbw
add
jg
push
pop
out
out
pop
pop
addb
lods
cmp
stc
xor
jl
mov
sub
pop
mov
or
xchg
mov
push
pop
push
xchg
and
inc
sub
rclb
loopne
ds
popw
scas
sbb
pop
addr16
push
int
shl
clc
pop
out
pusha
sub
fsubrl
rorb
into
xchg
sub
jg
jle
int3
sbb
xor
xor
or
xor
or
enter
or
jb
cmpsb
xor
mov
xchg
mov
jo
jb
mov
add
inc
loope
jle
sub
hlt
rcrb
add
or
add
push
daa
mov
mov
js
ds
rcl
dec
inc
cmpsl
dec
inc
in
loopne
add
mov
movsl
or
mov
fiadds
jmp
mov
add
jno
insl
pop
pop
pop
xchg
cmpsb
push
or
or
sbb
mov
fs
pusha
add
fwait
popa
test
push
ss
sarl
mov
enter
lods
icebp
pop
jmp
fists
sbb
cmpsl
jne
add
xchg
imul
stos
dec
add
stos
lahf
jge
lret
daa
jnp
xor
inc
mov
mov
testb
xor
js
aad
add
dec
pop
enter
sub
je
sbb
jns
ret
xchg
and
divl
sarb
outsb
mov
pusha
fcoml
frstor
imul
shll
ss
fisubl
jecxz
inc
ds
sub
cmpsb
adc
add
leave
loope
add
xchg
movsl
xor
imul
push
pop
jmp
xor
cmp
add
mov
dec
sbb
push
out
das
xor
push
mov
dec
lods
jge
ljmp
iret
shll
lret
or
mov
xorb
mov
sbbl
clc
loope
fildll
jg
xchg
rorb
es
mov
hlt
adc
adc
pop
mov
popa
pop
das
sbb
repnz
jnp
mov
pushf
ret
rcrb
dec
push
sbb
mov
lea
xor
in
and
push
add
cmp
rcrb
rorb
or
nop
xchg
rsqrtps
movsb
loop
sbb
js
scas
ja
ret
cmc
jbe
jl
inc
mov
sahf
out
adc
xor
test
push
pop
inc
addr16
repz
sbb
pop
cmpsb
data16
push
xchg
loopne
mov
push
outsl
je
test
movsl
pop
and
inc
lods
in
mov
cmpsl
loopne
xor
sub
sarw
rcr
cmp
push
push
ds
das
mov
mov
xor
add
adc
mov
mov
inc
or
jns
mov
mov
pop
adc
cltd
int3
xchg
lods
add
or
adc
iret
ret
or
adc
xor
push
add
ret
xchg
outsb
aaa
adc
dec
xor
call
adc
clc
xchg
cltd
shl
ret
inc
jmp
lahf
rcrl
insl
aaa
jbe
dec
inc
mov
sbbb
and
sbb
ja
xor
popa
cmp
rorl
cmp
xlat
shll
xor
vcmpngepd
pop
cs
js
aam
test
addb
in
inc
xlat
lods
add
cli
shrb
in
cltd
add
pop
adc
mov
les
inc
add
js
or
push
pusha
and
test
mov
mov
iret
mov
out
mov
inc
enter
nop
dec
pop
sub
xchg
cmpsb
pop
or
add
into
push
mov
cwtl
xchg
pop
xor
mov
test
das
mov
sarb
cltd
int3
pop
movsb
push
or
inc
popf
mov
add
dec
cmp
push
aas
mov
xchg
outsl
loopne
mov
or
mov
test
pop
mov
in
movsl
or
in
das
dec
sbb
xor
xor
enter
or
ja
cwtl
dec
inc
cmp
fstl
test
popa
test
lcall
jle
push
mov
push
cmp
mov
loope
sbb
inc
push
or
roll
xchg
fimull
mov
cmpsl
mov
add
es
push
xor
mov
mov
mov
dec
sbb
fdivs
mov
repnz
add
ret
lcall
enter
std
add
xchg
mov
ret
inc
add
pop
cwtl
xchg
out
push
imull
sub
daa
push
xor
les
xlat
movsl
xor
add
cwtl
pop
push
dec
lea
or
or
jle
stos
adc
mov
std
adc
movl
in
xor
mov
aam
fcmovbe
or
jg
pop
lods
jle
sub
pusha
stos
scas
arpl
push
jp
add
jmp
movsl
aad
adc
adc
in
loopne
and
cmp
test
dec
pop
adcl
dec
ljmp
mov
scas
das
test
stos
dec
or
outsl
popa
sub
add
xorb
pop
popa
and
or
or
nop
test
add
lahf
adc
sub
xchg
cltd
and
cmp
or
cmp
dec
pop
jae
or
movl
pop
rorl
inc
jl
daa
je
pop
ret
jne
inc
movsl
les
cmp
sub
jecxz
xorl
aas
mov
sahf
jns
js
mov
loop
adcl
and
fprem
xor
inc
mov
push
jge
jecxz
insl
loope
movsl
or
out
cmc
mov
or
add
mov
fimull
inc
xchg
xchg
lds
cmpsl
mov
sbb
aas
popf
and
enter
test
mov
gs
mov
scas
loop
les
push
push
or
mov
dec
pop
pop
jecxz
mov
add
rorb
in
insb
ret
sub
mov
js
sub
test
shrb
andl
aas
adc
push
push
inc
pop
out
or
shufps
jbe
movsb
add
push
jbe
add
sub
and
push
popa
xchg
or
xchg
pop
push
inc
or
inc
ljmp
mov
dec
xor
or
adc
jecxz
jecxz
xor
and
mov
sahf
rclb
dec
dec
sbb
loope
sbb
add
leave
sub
mov
fisubl
mov
iret
clc
or
jae
mov
rol
lret
adc
mov
xchg
loope
push
push
test
icebp
lods
sbb
push
and
jne
jo
je
das
sub
out
inc
mov
or
push
xchg
iret
jmp
mov
outsb
pusha
xchg
roll
cmpsl
out
dec
movb
add
mov
mov
into
sbb
push
mov
lods
and
in
insb
dec
lods
addb
sub
dec
scas
sbbb
dec
aaa
mov
leave
mov
inc
sbb
stc
dec
cmp
push
mov
adc
cmp
dec
in
lds
call
jmp
mov
cmpl
push
mov
jp
lds
xlat
mov
pop
je
pop
xor
adc
push
cmp
dec
pop
and
sub
sub
lea
or
pop
loop
lds
daa
mov
mov
sbb
or
ljmp
gs
fcmovne
push
push
lahf
cmp
cmove
iret
lcall
sbb
push
fsts
test
adc
addb
dec
mov
xlat
add
or
imul
adc
pop
test
add
cmpb
inc
mov
adc
xchg
jae
mov
sti
jl
cmp
in
add
movsb
sbb
cmp
add
sub
xor
mov
jl
cs
sbb
inc
test
loop
dec
add
clc
mov
xchg
adc
sbb
adc
ja
cmc
test
clc
orb
xor
inc
add
adc
test
test
pop
addr16
shrl
outsl
mov
xchg
add
outsl
cmpsl
mov
cwtl
cmpsl
xorb
call
leave
lea
xor
sbb
ljmp
pop
fcmovnu
xchg
cmp
pushf
das
add
popf
adc
aaa
mov
push
or
adc
sub
popa
insw
jne
sbb
aad
add
subb
dec
dec
xor
add
icebp
mov
fmuls
outsl
inc
stos
nop
cmpsl
sbb
add
mov
gs
and
dec
add
pop
mov
add
push
xor
or
lret
lahf
xlat
pop
pop
inc
stc
jbe
pop
les
sbb
jle,pn
xor
lods
dec
lret
cli
dec
test
iret
sbb
test
addb
adc
push
test
and
jne
and
adc
or
imul
or
xor
cmp
sub
fadd
sbb
jmp
inc
das
and
lods
jp
lcall
dec
das
xor
adc
je
push
cmp
div
and
xchg
mov
out
pop
pop
cwtl
je
sub
add
xchg
stc
test
dec
int
ss
push
sbb
test
sbb
pop
inc
or
push
jg
adc
sub
les
add
cmp
int
mov
and
leave
mov
jbe
lods
push
nop
and
sbb
lret
daa
sahf
mov
push
jnp
xor
sbbb
adc
out
cmp
add
add
add
popa
lods
mov
adc
mov
scas
add
inc
xchg
movsl
lock
mov
movsl
sbb
pop
push
loop
pop
test
add
and
cs
shll
or
sub
sbb
pop
popa
fmuls
jmp
lret
adc
int3
push
xor
arpl
ret
xor
jmp
cmp
push
cmpsl
xor
push
sbb
and
rcrl
ret
popa
jmp
call
lret
mov
adc
adc
rorl
mov
pop
lcall
sub
push
jno
test
jae
sahf
andl
mov
xchg
or
cmp
popa
cmpsl
pop
inc
push
and
dec
xor
sbb
sub
jp
les
add
add
cs
lods
inc
dec
pop
aaa
stos
subb
sub
xor
mov
inc
cmp
cmpxchg
cs
jo
fisubl
loope
stos
iret
adc
sahf
lods
pop
inc
sbb
icebp
xor
mov
and
mov
dec
pop
notl
orb
xchg
fcomps
popa
or
xlat
insb
rolb
ret
inc
int3
inc
sti
bound
sbb
dec
jecxz
outsb
fadds
sub
popf
dec
int
js
in
fwait
jmp
out
push
or
xchg
js
jg
cmp
mov
mov
or
adcb
push
sarl
bound
cmp
and
hlt
notl
add
leave
stos
fcmovb
xchg
daa
or
aas
pop
sub
push
add
sub
add
mov
je
scas
lods
and
xor
pop
pop
sbb
xchg
sub
pop
jg
push
prefetchw
mov
lods
adc
jmp
ds
stc
xchg
iret
add
je
stos
dec
dec
fisubrl
add
insb
or
lods
test
nop
sbb
xlat
inc
pop
sbb
lea
es
es
pop
ja
and
xor
push
inc
std
mov
jno
insb
orl
movsl
push
inc
jge
sbb
mov
cmp
sahf
out
mov
hlt
mov
mov
cmp
ljmp
mov
sbb
adc
lock
loopne
ret
adc
fcoms
stos
or
jns
mov
cli
lods
lods
sbb
adc
sub
int3
lret
sbb
mov
and
mov
or
and
mov
add
icebp
sub
pop
imull
push
push
sbb
sub
daa
add
jle
out
and
movsl
dec
int3
into
or
or
rcll
xor
xor
and
clc
add
test
pop
push
js
dec
add
clc
and
inc
in
sub
icebp
insb
sar
fbld
ret
adc
loope
cmc
or
bound
xchg
sbb
inc
dec
std
js
movsl
sub
xchg
rol
and
lock
pop
pop
out
pop
pop
sbb
inc
addr16
or
daa
aaa
push
mov
gs
and
adc
xchg
push
push
add
adc
xchg
push
sbb
lret
mov
dec
shll
sbb
aaa
inc
adc
pop
or
push
adc
imul
xchg
outsl
cmp
lcall
inc
xor
insb
mov
jmp
sub
sub
sub
ret
dec
or
shlb
shlb
int
pushf
add
ljmp
xor
fimuls
insb
cli
xchg
movsb
cmp
pop
or
xor
jnp
iret
cmp
icebp
dec
lret
add
cs
xlat
add
hlt
pop
jns,pt
jo
popa
fwait
mov
jae
add
sub
inc
test
fcom
icebp
xor
or
push
pop
test
and
loopne
pop
add
inc
pusha
mov
or
pushf
sub
cmp
jae
xchg
pop
or
adc
push
inc
dec
loope
movsb
stos
pop
and
iret
xchg
es
xor
sahf
jb
adc
push
push
repnz
mov
and
sub
xor
jecxz
and
psubq
pushf
ret
sbb
lahf
adc
push
popf
mov
out
rclb
sbb
lock
out
pop
inc
insb
std
mov
inc
adc
test
pop
mov
or
inc
xor
xchg
sbb
dec
fbld
or
or
and
sub
and
inc
add
lods
mov
push
les
push
and
pop
xchg
rcr
or
cmpsl
add
xchg
scas
add
or
lea
rcr
inc
fwait
cmp
and
fcmovnu
mov
adc
sub
sar
cmc
pop
testb
mov
or
or
test
xchg
sti
cmp
add
pushf
arpl
imul
and
fiadds
fnstenv
sbb
cmp
ret
adc
jae
xor
jl
in
jg
aas
jnp
jmp
jge
sbb
cmc
xor
adc
push
stos
or
mov
xchg
pusha
arpl
lret
inc
xor
cmp
mov
sbb
lods
fsubl
sub
insl
xchg
dec
dec
cmp
dec
mov
push
push
sbb
es
pop
cmp
lock
pop
add
mov
mov
ret
pusha
xchg
ja
out
lock
fwait
and
adc
push
mov
je
loop
sub
push
nop
jp
cmp
icebp
mov
bound
daa
cmc
imul
cmc
int
fcoms
add
cli
pusha
dec
pop
mov
sbb
test
cmp
push
sbb
das
dec
xor
cli
gs
cmp
mov
inc
ret
popa
xorl
imul
add
lret
push
xor
cmp
mov
inc
or
mov
clc
sbb
dec
rcl
add
and
dec
push
and
cmpsl
cmova
int
dec
or
xor
adc
and
bound
pop
mov
cli
and
les
pusha
pop
add
imul
je
rolb
jb
call
pushf
inc
imul
and
mov
pop
jae
and
loopne
mov
fcmovnb
shll
inc
movsb
ret
dec
sti
ret
cmp
rolb
movsb
call
xchg
xchg
rcrb
and
pop
in
loopne
xor
inc
dec
js
or
lods
popa
and
cmpsl
popa
push
mov
out
jmp
xor
pop
orl
jecxz
add
xor
imul
sti
push
and
aaa
pop
sbb
add
ss
mov
imul
sbb
adc
repz
aaa
cmc
nop
jle
xor
push
mov
add
jmp
dec
call
dec
inc
sub
ja
jmp
sbb
or
xchg
shll
mov
in
lods
in
je
pop
inc
pop
jo
rclb
xchg
mov
xorl
jo
popa
loope
pop
aas
test
scas
ds
aad
xor
mov
xchg
je
add
cmp
dec
and
and
fdivs
inc
push
and
flds
mov
add
ss
or
mov
arpl
lret
lahf
jmp
pop
add
pusha
subl
cmp
andb
sub
push
push
xchg
bound
pusha
cmpsb
push
and
popa
sub
popa
dec
gs
mov
faddl
out
aaa
inc
or
mov
rorl
or
nop
rolb
hlt
sub
insb
inc
add
jle
paddsb
inc
imul
jmp
nop
sub
inc
and
sub
bts
sub
xchg
sbb
clc
sbb
push
push
cs
pop
jno
scas
add
xlat
clc
int
mov
popa
xor
and
clc
add
inc
sbb
addl
aaa
dec
cs
add
int
xorl
in
mov
mov
flds
add
mov
dec
hlt
push
int3
add
xchg
xor
dec
cmp
dec
outsb
ret
lcall
jp
subb
cltd
cmp
cmpsb
out
lret
jecxz
loop
imul
xchg
bound
pop
call
dec
pop
lcall
dec
roll
xchg
js
xor
jmp
sarb
push
in
inc
push
dec
sbb
and
mov
outsl
lds
fwait
mov
xor
fs
xchg
lea
xchg
cs
es
mov
test
aad
stc
inc
jo
nop
pop
xchg
xor
push
inc
loope
add
int3
add
mov
das
iret
mov
hlt
imul
mov
adc
sub
push
stos
jle
cli
les
stos
loopne
addr16
xchg
loop
cmp
stc
rclb
adc
test
es
fwait
add
dec
xorl
or
icebp
add
sub
scas
jecxz
or
daa
lahf
xor
mov
stos
lret
lahf
in
xchg
cmpsb
pop
push
cmpsb
repz
add
sbb
lcall
ret
cmp
inc
shlb
in
sub
sub
mov
subl
push
loopne
jne
fcmovnb
daa
push
fdiv
sbb
loopne
leave
xlat
pusha
cvtps2pd
cli
add
mov
lahf
inc
mov
xor
loope
pushf
divl
repz
hlt
push
xor
out
and
enter
cld
sti
pop
andb
loopne
pop
inc
mov
push
lods
jecxz
dec
mov
je
popa
cmp
inc
iret
sbb
or
imul
sti
jno
js
movsl
push
xchg
jle
jle
mov
adc
fmull
lods
push
arpl
pop
gs
push
test
scas
rorb
test
inc
test
lods
xor
add
sub
sbb
sti
daa
testl
fnstsw
cmp
add
mov
inc
sbb
subb
dec
pop
mov
xlat
mov
and
popf
lods
xchg
jg
cmp
fistpll
cld
outsl
xor
adc
dec
pop
inc
mov
mov
cltd
movsl
mov
sub
push
nop
jge
adc
cmpsl
dec
push
push
push
or
add
cltd
test
pop
test
into
mov
adc
ljmp
mov
jge
lcall
xlat
outsb
je
pop
push
sbb
addr16
and
adc
cld
mov
cltd
xlat
es
fmuls
jno
in
jno
mov
je
jns
lea
lahf
xchg
mov
xor
add
scas
aad
push
stos
xchg
scas
sti
addr16
or
push
andb
rolb
mov
fdivrs
mov
test
and
mov
cmp
dec
pop
dec
pop
js
scas
repz
pop
dec
jns
iret
push
dec
testb
or
sub
mov
sub
add
push
jo
jns
mov
xchg
enter
add
adc
cmp
add
jbe
repnz
ss
xor
mov
lret
dec
arpl
xor
push
cwtl
outsl
ds
dec
call
xor
and
loopne
push
and
paddw
xorb
imul
fs
fadds
xor
test
lea
dec
out
mov
and
inc
sbb
insl
mov
or
jno
jge
inc
cmp
or
shlb
mov
mov
pop
movsb
in
add
shrb
bound
fimull
cwtl
dec
xchg
mov
loopne
fsubrs
enter
iret
mov
adc
cltd
jae
sub
push
in
and
mov
ds
pop
jo
rorl
lock
cmp
movsl
add
sub
sysenter
mov
pop
imul
rorl
jge
and
lahf
or
pop
push
scas
sub
or
push
lock
lret
mov
pop
sub
cmp
repnz
roll
and
nop
adc
dec
mov
rolb
movl
cmp
or
add
cmp
and
out
arpl
mov
mov
cmp
addr16
pop
dec
pusha
mov
inc
pop
ja
sub
xor
aaa
sbb
lea
insl
and
fsubs
adc
push
jno
add
add
cmp
sub
out
lods
mov
mov
mov
aam
xchg
mov
sub
aaa
sub
shlb
lea
and
adc
sbb
nopl
fisttps
jmp
jle
xor
loop
pop
or
cmp
loop
imul
sbb
cmp
sub
mov
loope
pushf
fwait
adc
pop
pushf
popf
cli
aam
and
movsl
in
adc
jns
das
inc
and
lea
test
add
subl
mov
icebp
idivl
sub
in
ret
aaa
add
pop
adc
sbb
enter
dec
fsubrs
pop
nop
cs
dec
shlb
sub
ret
dec
cs
dec
cmp
lock
aaa
fcoml
inc
xchg
mov
xor
aam
push
cmp
mov
ret
xchg
ret
sbb
arpl
mov
pop
iret
out
je
jo
mov
cmp
je
cmpsl
dec
or
jnp
nop
inc
mov
loope
mov
loop
testl
mov
sub
push
cwtl
adc
jg
ret
sub
cmp
test
add
and
sbb
xlat
sbb
ja
pusha
pushf
nop
xor
insb
aaa
dec
mov
insl
je
mov
loope
ja
call
das
hlt
nop
or
push
pushf
inc
mov
inc
nop
adc
push
lea
add
dec
jl
xchg
repnz
add
stos
inc
adc
popf
mov
inc
add
bound
das
add
adc
popa
mov
sbb
push
mov
xor
and
jmp
xchg
arpl
push
mov
das
mov
add
leave
lods
jo
imul
adc
mov
sub
mov
ficompl
repnz
pop
rorb
xor
push
push
push
add
xchg
mov
adc
and
dec
adc
add
jbe
jg
nop
rol
std
inc
popa
pop
or
xor
sbb
mov
add
mov
push
push
mov
or
mov
insl
in
inc
aam
inc
out
push
add
cld
sub
jbe
stos
rcrl
mov
popa
xchg
add
cmp
test
dec
call
and
mov
jo
popa
arpl
pop
or
and
xor
fwait
and
ds
jmp
mov
push
movsl
fwait
cmp
sub
in
jnp
jecxz
or
shll
and
push
push
or
dec
sub
xor
rcrb
lret
aam
sbb
xor
js
dec
xchg
adc
test
aaa
cmp
sbb
pop
add
jo
mov
jge
add
fistpll
insb
pushf
sbb
jne
jecxz
add
dec
rclb
add
popf
cmp
adc
xchg
mov
sub
mov
imul
push
sub
call
and
movsb
mov
pop
sub
sar
push
mov
dec
outsb
iret
insb
jbe
dec
pop
dec
std
push
roll
lds
loopne
add
into
shll
andb
and
int3
xchg
jle
lahf
pushf
jge
iret
add
xor
dec
nop
rorl
cmpsb
pop
lock
jecxz
and
adcb
add
adc
inc
imull
and
lcall
cmpsb
mov
sar
test
fcomip
sub
movsl
jecxz
push
xor
pop
inc
leave
adc
xchg
pusha
add
rcl
and
add
aam
or
enter
or
mov
ds
push
xchg
test
sbb
and
or
push
jmp
je
cmp
test
push
sub
or
add
mov
roll
mov
adc
outsl
push
lods
add
and
mov
pusha
or
mov
pop
sub
jnp
fdiv
and
jo
xchg
xor
dec
push
inc
shll
repz
faddl
jo
cs
movsl
fisttpll
stos
mov
inc
dec
sbb
sbb
or
or
adc
or
scas
jne
xchg
push
add
test
nop
bound
test
sti
fdivrs
mov
push
xchg
add
rcrb
scas
cmp
and
and
inc
sub
stc
aas
loopne
jge
or
daa
pushf
or
sub
jp
add
test
fsubl
sub
jecxz
mov
out
rorl
pop
mov
rolb
pop
mov
sub
jecxz
mov
push
xor
push
mov
push
mov
mov
imul
push
sbb
ss
add
pop
nop
sub
arpl
sub
int3
in
and
cmp
dec
sti
xlat
add
sbb
add
push
jnp
sub
or
push
imul
dec
jge
loope
or
inc
lret
adc
fwait
sbbb
test
invd
mov
daa
adc
adc
rcr
iret
push
aaa
mov
jl
int3
push
iret
cmp
call
stos
cld
stc
out
dec
mov
aad
fisubrs
and
lods
xlat
push
sub
sahf
mov
jp
aas
movsl
push
push
add
into
fildll
ret
lea
dec
mov
pop
mov
sub
and
xor
or
adc
xchg
inc
jno
push
push
and
push
mov
adc
jnp
loopne
addr16
inc
call
cmp
mov
push
push
adc
jb
push
loopne
xchg
and
mov
or
jbe
sbb
repz
das
fld
mov
adcb
nop
adc
push
fcmove
in
fcoms
adc
or
cli
fldl
and
aad
fadds
inc
loopne
mov
and
push
or
add
add
sub
ret
xchg
loope
sbb
aaa
and
andb
repz
in
pop
aam
sub
inc
pop
jb
push
shll
les
dec
pop
adc
and
or
loope
push
or
outsb
sub
int3
push
add
icebp
into
loope
jae
mov
dec
in
pop
add
or
or
popl
dec
sbb
add
loop
insb
and
jno
dec
add
imul
adc
addr16
les
shlb
sub
sbb
lds
xor
cld
and
mov
dec
xchg
insb
scas
adc
aam
leave
mov
push
or
es
inc
and
push
flds
popa
add
enter
icebp
or
iret
mov
push
add
pusha
popa
test
cli
xor
daa
out
inc
loopne
lcall
jo
jb
es
and
jecxz
sahf
add
cwtl
pop
lods
sub
inc
cs
xchg
sub
inc
enter
jl
xor
sarl
add
add
and
movsb
mov
mov
mov
bound
test
and
sbb
pusha
or
xchg
negl
xor
mov
add
test
enter
mov
iret
and
cmp
test
and
icebp
and
inc
xchg
mov
mov
cmp
and
add
rcr
cmpnltps
add
ret
mov
clc
cmp
jne
push
pop
add
mov
or
aad
adc
mov
arpl
jmp
decl
ficoml
and
daa
and
scas
push
and
sbb
push
xor
mov
lods
rcll
xchg
add
mov
mov
lret
cmpsl
div
fiadds
sbb
mov
add
mov
jns
pop
lods
addb
add
inc
push
push
jns
mov
push
add
dec
test
push
loopne
enter
jge
xchg
cmp
out
scas
mov
mov
sbb
dec
movsl
pop
out
mull
or
mov
cmp
or
adc
add
popa
loopne
push
int
jnp
js
gs
mov
nop
push
jge
pusha
dec
or
mov
pop
add
and
test
icebp
inc
pop
sbb
pop
sbb
test
lret
test
inc
jecxz
xchg
call
imul
lds
popa
jmp
push
mov
add
push
dec
sub
push
add
jl
xlat
inc
push
adc
inc
pop
insl
mov
fmul
pop
sub
or
daa
aaa
or
loope
mov
inc
adc
or
dec
je
imulb
sbb
add
push
cmp
scas
and
rol
xor
xor
mov
mov
pop
push
jo
sbb
lahf
or
add
push
aad
shl
xlat
inc
dec
outsb
push
loop
jmp
jo
and
add
mov
les
iret
icebp
fisttpl
nop
push
sahf
nop
adc
movsl
outsb
pop
jp
cmp
fisttpll
and
pop
bnd
loope
dec
out
add
cli
pop
clc
aaa
mov
add
jnp
in
xchg
int
push
stc
xor
sbb
add
mov
fs
jg
adc
movsb
shlb
ret
push
sbb
aad
icebp
ret
call
pop
or
je
dec
clc
add
dec
add
aas
andb
add
scas
mov
test
dec
or
xchg
inc
dec
movsl
das
fistl
mov
inc
xchg
pusha
xchg
cmpb
mov
cwtl
daa
dec
insl
arpl
jg
adc
data16
mov
addr16
lock
or
mov
stos
or
or
sbb
xchg
cmp
lea
mov
pusha
cmp
loop
jg
mov
loop
jge
add
cld
aam
xchg
iret
mov
or
xchg
adc
pop
mov
add
inc
loop
pop
and
push
jl
stos
push
pop
mov
addr16
add
push
sbb
inc
mov
imul
add
pop
adc
lret
push
xor
loope
out
icebp
adc
jo
and
ret
push
cltd
test
addl
cwtl
push
into
mov
mov
into
fldt
xor
mov
movsb
inc
inc
pop
add
sub
xchg
ficoml
push
movsl
add
mov
cmp
push
adc
or
push
mov
inc
inc
mov
into
xor
xchg
sub
out
inc
add
popf
nop
and
ss
jns
pop
mov
push
adc
push
out
push
mov
out
clc
jl
jp
sub
adc
popa
push
or
or
leave
and
mull
cwtl
int3
push
and
mov
or
jno
mov
xchg
popa
jle
fidivs
imul
push
ret
into
scas
out
int
push
xchg
ficoms
jno
sbb
jno
mov
cmpsl
or
mov
imull
push
push
aad
pop
dec
iret
xlat
xchg
in
daa
sbb
addl
jle
add
mov
sbb
movsl
cmpsl
fiadds
bound
sarl
and
scas
or
lcall
loope
adc
test
test
or
mov
movsl
sbb
push
stc
adcl
fldt
adc
sub
pop
stos
inc
shrb
enter
out
int3
ror
ficompl
jle
mov
add
movsl
xchg
mov
stos
mov
int3
inc
push
aas
push
sarb
and
xchg
scas
xchg
andb
mov
lods
jae
push
sub
andl
xor
xor
insb
add
es
into
pop
iret
int3
sub
cmp
out
cwtl
jno
loope
adc
sbb
pop
xchg
loopne
cmpsb
and
push
jecxz
cs
arpl
add
outsl
loopne
ss
mov
arpl
pop
hlt
mov
aas
jo
and
lods
xor
inc
and
insl
mov
jp
or
pushf
and
repnz
bound
xchg
pop
sbb
xchg
mov
sbb
hlt
push
and
fcmovnbe
xor
ss
cltd
xchg
ja
into
or
lods
bound
sbb
push
xchg
adc
loope
add
in
add
outsl
mov
mov
cs
test
lods
fnstsw
lods
push
lods
sti
lret
cmp
inc
inc
stos
mov
dec
mov
cmpsl
icebp
mov
jb
scas
dec
pop
pop
in
rcl
dec
dec
add
and
mov
enter
loop
ds
push
jl
imul
test
and
sub
or
inc
mov
cmp
xor
lahf
adc
push
xor
xchg
rcrl
aam
inc
and
clc
xchg
mov
sub
xchg
adc
stos
and
daa
and
xorl
popa
out
fsubs
aam
shlb
mov
xlat
add
aas
cltd
mov
sbb
add
push
fldenv
movsb
pop
stos
pop
das
dec
inc
addl
into
jo
scas
les
popf
dec
mov
in
ljmp
mov
repz
outsl
push
and
adcl
stos
arpl
out
pop
insl
dec
mov
pop
ret
dec
dec
loopne
and
add
add
add
in
push
stc
fcoms
popf
add
push
pusha
cld
hlt
pop
xchg
mov
cmp
out
cmpsb
or
add
sbb
enter
and
mov
mov
insl
cltd
fadds
or
std
inc
jmp
mov
xchg
or
loopne
fwait
pop
pop
dec
push
and
push
scas
sub
scas
fldl
movups
xlat
mov
dec
jecxz
mov
push
sub
dec
inc
dec
add
nop
nop
enter
xchg
subb
pop
je
push
xor
incb
inc
adc
xlat
sti
scas
push
sbb
mov
mov
std
orl
scas
inc
push
dec
sbbb
insl
insl
sbb
pop
or
sub
sbb
mov
mov
mov
mov
lret
or
mov
xor
add
das
pop
xchg
js
aad
addb
ja
add
rclb
xor
add
lock
adc
xor
fst
enter
aas
push
jmp
lcall
stc
insb
xchg
push
movsl
fs
popa
and
xor
mov
and
jb
in
rorb
out
mov
mov
add
add
pop
mov
aas
push
dec
inc
loopne
mov
loope
mov
adc
insl
adc
add
outsb
sub
add
fst
or
cltd
add
sub
sbb
pop
fs
enter
jbe
push
push
adc
cld
mov
ficoms
or
movsb
and
mov
add
add
sub
sub
sub
loopne
or
jp
mov
jno
jb
push
cmp
jp
sbb
shlb
dec
imul
in
sbb
mov
xor
and
mov
push
test
xchg
pop
stc
lret
data16
add
test
inc
dec
outsb
lret
sbb
cmp
sub
scas
pop
or
xor
and
add
jb
scas
or
imul
jns
roll
ljmp
in
outsl
dec
jmp
mov
pop
add
movsb
imul
or
bound
adc
inc
shlb
loope
push
dec
lods
stc
loope
loopne
jbe
adc
daa
xchg
faddl
mov
shll
in
es
cmp
xchg
xchg
jno
hlt
push
push
push
sub
mov
jne
jno
pop
xchg
mov
sbb
inc
enter
pop
lods
mull
shl
mov
pop
xchg
or
pop
pop
pushf
shufps
cmc
pusha
push
ds
mov
push
or
sbbb
ss
repz
sub
sbb
push
movhps
pop
lds
pushw
and
sub
lret
cmp
add
fstpt
stos
and
sbb
pop
cld
add
add
daa
mov
test
inc
sahf
cmp
loope
cld
test
popf
lar
movsl
leave
sbb
or
push
add
js
hlt
mov
add
mov
aas
and
pop
dec
lods
add
dec
sbb
cmp
jle
fidivs
leave
push
jae
dec
sbb
mov
jb
aas
scas
add
mov
rolb
insb
or
ss
push
sahf
lahf
add
jp
insb
and
adc
pop
inc
mov
mov
imul
pop
imul
mov
jb
cli
add
sub
jl
cmp
xlat
ror
imul
mov
fimull
and
cmc
and
fcmovnu
insl
imul
loopne
pop
dec
inc
push
mov
js
xor
dec
sbb
push
add
or
scas
add
add
and
gs
adc
adc
sub
nop
mov
push
pusha
xor
and
mov
xor
or
dec
cmp
sub
inc
lods
inc
andb
subb
dec
sbb
xor
jmp
es
inc
aaa
adc
pop
cmpb
dec
ljmp
inc
loop,pt
pop
xchg
cmp
lods
jnp
cmp
jecxz
shlb
sub
ja
cwtl
lcall
add
outsb
xchg
movlps
mov
pop
and
adc
xor
adc
inc
in
lcall
inc
das
sti
push
cs
ss
add
lods
add
inc
sbb
mov
cli
and
mov
inc
add
mov
mov
mov
mov
in
jae
mov
mov
xor
lods
xor
les
and
add
leave
xchg
jp
xlat
mov
sub
ret
test
push
addl
adc
cmp
gs
mov
adc
pop
sub
mov
ja
cmp
sbb
xchg
sbb
pop
aad
rolb
ret
add
xchg
inc
jo
xchg
loop
dec
sbb
fnsave
pop
mov
inc
out
push
add
sbb
or
add
cltd
shrb
sbbl
add
and
add
lods
pop
xchg
xchg
testl
popl
or
adc
xchg
jmp
pop
lods
dec
ja
mov
mov
addb
addr16
lods
push
rcrb
pop
xor
cltd
daa
jmp
xchg
aaa
rcr
inc
mov
jns
and
add
cmpl
dec
or
sub
jle
movsb
inc
mov
pop
add
pop
lret
sbb
jg
jge
sub
or
jl
and
jnp
jne
sbb
cli
pop
push
add
mov
mov
xchg
push
std
sti
pop
mov
add
fs
in
pop
jg
add
imul
push
sti
fldl
push
ss
xchg
add
cmp
mov
mov
sub
add
mov
xchg
jge
daa
cmp
add
dec
jge
add
add
or
ja
in
lods
push
rcll
jbe
aad
push
lret
cmp
or
ja
adc
jno
add
insb
pop
daa
popf
pushf
push
push
adc
popa
lods
mov
pop
fildl
mov
add
test
arpl
mov
or
push
pop
or
sbb
jno
data16
mov
inc
jnp
mov
mov
push
punpckhbw
sub
jnp
mov
sbb
sub
push
jl
pop
rcrl
push
pop
mov
mov
mov
add
ja,pn
push
sub
jl
paddusb
or
cmpsb
mov
popa
stc
jae
and
insb
add
and
mov
mov
pop
sar
adc
scas
aaa
imul
adc
add
cmp
add
xchg
adc
inc
loop
jae
addr16
sub
cmp
imul
imul
push
and
pusha
ficomps
add
jne
mov
add
in
negl
push
pusha
inc
mov
sbb
pop
jb
fcmove
aam
cmpsl
rolb
test
mov
xchg
aas
inc
and
mov
inc
lock
idivb
dec
lock
lret
pop
lret
fwait
jno
gs
jbe
sbb
cltd
gs
or
dec
pushf
inc
lret
fs
sub
sbb
out
dec
cmp
pop
cmpsl
fs
jns
push
into
fimuls
lahf
lock
pop
daa
test
push
inc
adc
mov
add
pop
sub
xor
faddl
jge
addb
addb
jno
jbe
test
lret
fidivrl
pop
das
jp
les
xchg
inc
cltd
xor
je
xor
pop
sub
mov
ret
lods
sub
aaa
movsl
fnsave
mov
pop
jnp
mov
and
aam
aas
push
int3
push
or
mov
call
push
mov
jae
call
ja
dec
push
adcb
out
add
adc
xchg
mov
pop
int3
or
cmp
adc
mov
add
pop
lock
push
or
imul
mov
add
adc
sub
outsb
push
push
sub
sub
test
lahf
jne
jbe
clc
xor
hlt
add
and
cli
fidivl
sbb
add
fdivrs
loope
mov
lahf
jo
shl
nop
ret
jecxz
dec
or
pop
add
bound
pop
pop
push
test
scas
in
inc
adc
pop
jno
mov
adc
add
mov
shll
sti
adc
add
gs
inc
add
fnstenv
cmpsb
out
xor
pusha
mov
xor
popf
into
add
lea
popa
cmp
in
or
arpl
mov
cltd
xor
lods
push
push
mov
pop
das
inc
loopne
dec
lods
jg
jle
xor
xor
and
xor
jp
movsb
adc
sbb
cmp
ret
xor
movsl
adc
shlb
mov
adc
add
push
and
pop
scas
in
or
sbb
add
mov
inc
iret
pop
adc
popa
sbb
xchg
sbb
push
dec
inc
add
movsl
pop
mov
push
xor
test
mov
loope
rcpps
adc
jbe
inc
or
leave
sbb
push
fidivs
inc
jge
and
mov
add
or
sub
aaa
sub
cld
mov
jne
nop
in
aad
jb
cmp
iret
adc
pop
push
xchg
les
fcmovb
addr16
loop
mov
mov
sub
mov
xchg
loope
cmc
loopne
addl
addb
ret
sub
pop
add
sub
or
xchg
or
icebp
push
dec
xchg
insb
jbe
test
cltd
and
dec
add
mov
and
ja
movb
insl
add
fstpt
sub
adc
inc
mov
into
in
mov
mov
dec
push
xchg
les
cmpb
stc
cs
add
ss
add
inc
cmp
adc
push
popa
pop
cmp
sub
mov
adc
lock
or
and
call
cmc
xchg
sub
and
xlat
push
push
mov
ljmp
jmp
and
test
scas
dec
shlb
add
sub
cmp
clc
add
and
dec
and
add
pop
dec
jl
or
xor
jmp
lahf
push
and
push
mov
pop
xchg
mov
lds
xor
pop
xor
inc
pop
mov
and
loopne
jo
pop
jns
ljmp
mov
movsb
mov
push
cmp
pop
enter
js
jne
hlt
sbb
and
push
and
or
jno
push
mov
pop
call
das
aam
or
inc
sbb
push
and
jbe
loopne
push
aam
xchg
test
ljmp
pop
sbb
stos
dec
jb
clc
pop
mov
pop
sub
loope
lods
jp
je
cmc
inc
fs
mov
dec
out
leave
iret
fldcw
fbld
es
and
push
data16
lahf
addl
sbb
xor
push
mov
subl
and
les
xchg
jg
dec
add
bound
psrad
imul
sub
add
inc
dec
int
dec
jp
xchg
jo
cmpsl
aam
ret
push
test
and
xchg
iret
lock
push
adc
xchg
popa
push
mov
sub
cmp
pop
cmpsl
and
add
mov
into
mov
pop
inc
pushl
pop
mov
iret
inc
sub
stc
aas
inc
sbb
test
imul
and
fisttpll
in
push
in
sbb
mov
inc
adc
push
sub
jo
pop
inc
mov
and
mov
icebp
inc
test
std
jno
cmp
xchg
clc
jp
into
mov
xchg
or
push
mov
push
xchg
xor
cwtl
pop
add
jp
test
lods
mov
addl
and
lcall
jle
xor
iret
xchg
scas
dec
xchg
jo
lret
hlt
push
ss
inc
arpl
sbb
outsb
test
pusha
mov
in
jmp
mov
pop
add
lret
add
mov
in
pusha
jnp
and
inc
mov
insb
dec
lods
xor
inc
je
xor
scas
aas
jecxz
dec
fdivl
lret
pop
popf
jbe
dec
sbb
lds
dec
gs
add
xor
and
xlat
sub
xchg
arpl
xor
xor
and
xchg
or
xchg
push
int
pop
sbb
jns
ljmpw
imul
and
add
add
sub
daa
scas
cmp
and
push
pop
int
rorb
or
pop
mov
inc
sub
cmp
cmc
das
repnz
insl
ret
push
xor
pop
or
mov
or
xor
movsl
jo
rolb
jno
or
and
xchg
dec
shlb
loope
lahf
int
jo
lock
sub
push
loopne
dec
dec
js
outsb
rcrl
hlt
mov
iret
add
movsl
pop
adc
inc
add
jnp
push
and
dec
enter
adc
in
mov
roll
mov
out
pop
inc
jl
insb
popa
arpl
add
push
push
arpl
and
add
inc
mov
cmc
xchg
ds
add
and
out
lock
ret
push
sub
negl
pop
shlb
mov
inc
int
ret
add
dec
add
insl
jmp
scas
and
adc
sbb
mov
or
mov
sub
sub
jne
inc
and
or
add
pop
jge
ret
sbb
adc
xlat
xchg
jmp
rol
mov
sub
sti
cmpsb
xchg
mov
bound
mov
lock
ror
inc
sub
mov
lcall
pusha
mov
push
iret
cmp
fisttpll
cmp
fstp
and
ret
call
adc
lea
sahf
push
sbb
adc
cld
dec
cltd
out
and
sarb
pop
pop
js
push
aaa
iret
jno
dec
fs
dec
xchg
or
aaa
icebp
add
xchg
pop
add
xchg
or
pop
sub
icebp
mov
repz
lock
xchg
dec
push
sbb
or
loop
push
cmp
add
xor
mov
push
jae
ja
in
and
inc
mov
ss
test
int
sub
cmp
je
addr16
cmpl
sbb
jmp
test
out
push
fdivrs
mov
add
dec
pop
inc
das
orb
push
inc
dec
out
mov
adc
aaa
rolb
cli
mov
lea
mov
and
inc
addr16
sahf
je
push
inc
in
ror
das
sbb
mov
sbb
lods
lret
or
inc
xor
and
xchg
fisubs
sub
mov
inc
pop
or
and
mov
mov
mov
ret
xchg
dec
loop
mov
xchg
rcl
mov
divl
xchg
lret
mov
js
adc
stos
or
and
push
and
adc
repz
leave
nop
scas
mov
sub
nop
mov
hlt
jecxz
jo
or
data16
aaa
add
fildll
rcll
lahf
inc
mov
fwait
addr16
xchg
jo
aaa
popa
sbb
cmpl
add
orl
daa
cmp
adc
loopne
add
mov
das
orb
ret
push
orl
cld
dec
fwait
xchg
cmp
inc
mov
dec
or
call
pop
lea
mov
mov
aad
xchg
dec
xchg
adc
cs
stc
xchg
inc
mov
dec
clc
xchg
icebp
daa
icebp
arpl
xor
loope
inc
cmc
and
into
pop
and
nop
outsl
mov
jmp
mov
sbb
jl
lds
and
lods
dec
movsl
and
sbb
or
jnp
and
jno
repnz
nopl
adc
pop
pop
xchg
rclb
inc
sbb
shrl
addl
arpl
or
push
iret
dec
or
dec
sbb
inc
inc
pop
call
mov
sub
mov
ljmp
sbb
mov
mov
sbb
push
aaa
mov
hlt
or
dec
or
pop
dec
dec
pop
mov
adc
pop
test
int
aad
add
dec
lods
xchg
push
jno
mov
por
and
scas
jp
add
sub
adc
or
adc
inc
or
and
inc
mov
bound
adc
lret
in
push
aad
mov
fsubrs
enter
or
xchg
inc
push
xorb
sub
add
popa
lea
fstl
in
lods
push
inc
sbb
iret
mov
popf
call
xchg
xorl
mov
mov
push
sahf
movsl
or
sub
into
cmp
dec
sbb
popa
lock
fnsave
roll
stos
add
lods
clc
test
cmp
cltd
or
andl
mov
jge
mov
pop
jge
ljmp
std
or
repz
lahf
ljmp
jae
cmp
inc
adcl
mov
dec
dec
fstps
push
rcll
test
and
test
std
aaa
enter
and
mov
test
add
mov
lods
dec
pop
cmp
jge
push
sbb
add
shrb
adcb
imul
movsl
loop
ret
add
dec
lds
cmp
ret
loopne
mov
cmp
enter
inc
movsb
dec
sub
movsl
das
adc
les
sub
sub
test
pop
imul
sbb
out
push
or
cmc
sub
or
pop
das
push
ss
push
push
push
pop
and
dec
or
adc
cwtl
addb
cmpsl
adc
test
inc
mov
incb
popf
sub
call
popf
dec
add
jge
testl
jno
popf
daa
add
jo
push
sbb
inc
or
mov
in
fildll
pop
adc
fstpl
cmp
test
pop
lret
adc
add
sbb
pop
rcrb
xor
add
adc
rcll
movl
rcll
ss
pop
movsl
jno
or
loopne
sbb
jmp
cmp
test
cld
mov
jb
and
cmpsl
dec
inc
fwait
gs
sub
fwait
cmp
mov
aam
adc
out
adc
push
lods
and
adc
or
jbe
call
iret
stos
out
xchg
mov
xorb
ret
xor
mov
sub
adc
mov
loopne
cmpsb
idiv
ret
xlat
stos
ficompl
sbb
rol
add
mov
andb
add
dec
adc
ds
sbb
add
mov
and
mov
ret
cmp
add
push
outsb
in
mov
mov
xchg
lea
or
clc
mov
movsl
add
xor
add
or
jmp
mov
or
mov
xchg
jge
jns
mov
jp
sub
mov
or
lcall
cmp
add
iret
mov
dec
jecxz
adc
adc
pop
pop
lret
sub
jb
repz
das
or
dec
xor
add
movsl
add
xchg
push
jo
pop
call
push
mov
jo
mov
pop
mov
and
mov
mov
push
add
sbb
out
fildl
pusha
pop
push
lret
cmp
push
sbb
xor
mov
lock
adc
pop
js
jmp
sbb
sub
jae
in
mov
in
out
jno
es
inc
cwtl
pusha
jb
stos
adc
xchg
jo
or
pop
loopne
aad
pop
jecxz
mov
mov
int3
inc
stc
or
jns
test
jbe
sbb
jno
cmp
jecxz
lock
jmp
jmp
dec
jbe
jnp
pop
fs
rcr
imul
mov
addb
adc
adc
es
negl
xor
and
add
xor
jo
xchg
insb
push
aam
pop
mov
jle
mov
aam
lret
rol
lods
es
dec
jbe
mov
hlt
inc
inc
mov
and
inc
sub
add
daa
daa
mov
ret
pop
pop
cmpsl
adcl
pop
js
outsb
xor
arpl
fwait
mov
adc
cmpsl
scas
es
xor
shrb
add
inc
roll
sti
jne
cmp
and
jae
mov
or
adc
jns
sbb
insl
adc
popf
insl
arpl
ss
enter
mov
addl
sub
sti
stos
mov
insb
test
fadd
mov
insb
ret
int
xor
movb
sahf
adc
push
push
jle
fildll
xor
les
fstpt
jo
and
jbe
push
inc
mov
mov
push
psrlw
cltd
enter
clc
push
and
sub
jne
fildl
sub
inc
stos
add
dec
dec
insb
jg
xlat
and
adc
mov
pop
cs
xor
or
xor
out
jnp
mov
sub
add
fdivs
inc
in
sub
adcb
push
pop
test
lea
scas
push
lock
pop
jo
outsl
or
arpl
adc
jbe
mov
add
sbb
je
add
xchg
test
inc
loope
lea
adc
lret
sbb
loop
or
sbb
outsb
scas
aad
pavgb
jecxz
arpl
je
addb
adc
loopne
push
and
xorl
jb
push
rolb
movb
sbb
adc
and
out
push
shlb
pop
add
mov
int
inc
sub
push
out
push
ss
andb
adc
pop
jbe
sar
rcr
add
lock
mull
jno
sub
and
sbb
pop
nop
add
sbb
and
xchg
jo
and
sbb
and
pop
pop
mov
mov
insl
sub
rorb
lods
popa
or
sbb
adc
jl
add
jne
mov
cmp
cltd
pusha
jecxz
rolb
xlat
imul
inc
popf
and
psubq
fstpt
xor
into
push
movsl
imul
adc
mov
rcll
mov
movsb
xchg
popl
pop
ja
sub
dec
sbb
enter
cmpsl
ret
mov
pavgb
push
cmpb
add
loopne
fmuls
push
jno
mov
iret
out
or
pusha
mov
dec
mov
pop
test
jge
and
pusha
jmp
clc
inc
dec
sbb
adc
pop
fsubr
lods
and
add
test
sub
push
mov
sbb
add
idivl
push
sbb
sub
fdivrs
add
pushf
and
add
push
lds
clc
adc
adc
rolb
pop
xor
add
test
test
enter
jl
dec
cwtl
addl
addr16
sub
inc
or
mov
movb
iret
adc
sub
xor
es
push
jl
jne
mov
into
fwait
lods
js
add
jmp
xchg
pop
xor
call
ss
add
pusha
in
sahf
cmp
cmpb
mov
and
lods
push
add
ja
and
orl
xchg
jno
adc
jo
movl
sub
push
or
ret
cmp
add
pop
popf
mov
push
pop
sbb
add
leave
xor
adc
and
insl
and
ss
sbb
test
dec
mov
xor
aas
mov
adc
xchg
lea
xor
push
mov
mov
ret
faddp
inc
aas
dec
xchg
cld
xchg
or
sub
int
cltd
cs
add
sbbl
adc
loop
pop
scas
enter
jp
adc
inc
gs
mov
sbb
inc
xchg
inc
out
adc
shlb
scas
or
pop
and
int
cmp
into
popa
mov
lea
add
gs
loop
les
pop
les
pushf
subb
inc
adc
repz
jecxz
mov
lea
cmp
add
add
lds
xor
add
jne
and
add
shl
insb
insb
das
adc
jno
or
andl
int3
and
in
outsb
out
ja
add
andl
cmp
add
orl
push
sub
add
adc
repnz
dec
mov
cmp
add
test
test
pop
add
cmc
xor
stc
add
sahf
data16
xor
sbb
mov
and
add
cmp
cmp
ret
jp
jecxz
aad
daa
arpl
cmp
dec
pop
cltd
pop
inc
shlb
lds
inc
fildl
dec
push
mov
mov
mov
add
insl
push
cmpsl
adc
push
inc
push
lds
sbb
movsl
lahf
les
sub
das
jno
shll
jp
mov
add
mov
mov
add
jno
xchg
xor
inc
jbe
adc
dec
xchg
ss
inc
loope
test
rclb
adc
push
jnp
aas
jge
ror
imul
les
dec
lods
mov
pop
mov
mov
call
dec
stos
cmp
test
add
movsb
add
and
ljmp
xlat
lds
and
shlb
xchg
and
or
pop
std
adcl
cmp
cmc
jno
xor
pop
mov
js
aam
fmuls
dec
mov
dec
movsb
inc
sbb
sub
les
mov
mov
sbb
jmp
inc
xor
sub
add
and
and
test
or
insb
and
pop
pusha
stos
xchg
and
dec
mov
shl
test
rclb
or
push
xor
sbb
sbb
cmp
cltd
andb
inc
push
or
movb
cmp
adc
daa
int3
int
ret
mov
js
fwait
adc
pop
subb
adc
aam
and
aam
jbe
daa
and
mov
bound
pushf
mov
jmp
fcomps
sub
push
xor
repz
inc
push
mov
mov
push
mov
xor
fstpl
pushf
mov
lods
test
mov
mov
mov
rcr
arpl
jle
mov
mov
andl
pop
cmp
mov
data16
adc
je
add
push
and
xor
push
jle
sbb
imul
jecxz
dec
imul
fwait
nop
notl
dec
xchg
jp
adc
nop
mov
xchg
pop
xchg
fsubs
out
in
push
and
xchg
push
cltd
xchg
stos
cltd
mov
push
in
das
repz
add
add
imul
jbe
cmp
adc
lahf
jae
or
add
inc
inc
add
mov
xor
icebp
cltd
add
cltd
jno
testl
lods
mov
leave
sub
insl
mov
shll
xor
repz
push
adc
faddl
xchg
addr16
cs
outsb
movsl
fdivl
and
add
lods
cltd
pop
mov
mov
leave
push
loopne
aad
inc
adc
pop
fmul
lods
add
xor
adc
jecxz
adcl
test
add
mov
xchg
in
out
pop
ds
push
add
sub
outsb
ss
push
hlt
mov
fadds
sahf
or
ret
xchg
jno
loop
push
or
aam
es
arpl
fistps
xchg
lods
mov
xor
push
fsubrs
xor
loope
xchg
sub
pop
leave
rcll
or
cld
mov
add
mov
cmp
add
xchg
icebp
in
xor
mov
ret
inc
add
sub
mov
xor
push
jb
cmp
add
push
and
test
push
push
bswap
dec
mov
jmp
mov
les
aaa
add
mov
xchg
ss
addr16
jns
mov
adc
add
dec
push
pop
dec
in
loopne
pop
sub
jne
lret
xor
xchg
sub
test
pusha
inc
sub
ds
cmp
popa
fsubrl
ja
mov
dec
pop
test
cmc
int3
jp
xor
sbb
sub
lret
xchg
dec
mov
xchg
imul
and
jae
ret
addr16
daa
and
adc
cmp
adc
shlb
ja
hlt
fisubrl
sbb
inc
or
stos
cmpsl
push
xor
test
or
out
in
in
cld
es
and
test
inc
pop
pop
ds
mov
inc
cmp
mov
lret
xchg
or
aad
or
stos
add
int
pop
add
popa
inc
jo
dec
add
xor
sbb
testl
jl
lret
loope
dec
pop
rol
mov
and
mov
loopne
gs
adc
mov
adc
imul
inc
lds
fadds
adc
sub
pop
sarl
dec
in
xchg
push
inc
clc
add
pusha
mov
jmp
js
push
mov
pop
add
sub
mov
aam
aad
dec
lret
cmpsl
cmp
test
test
dec
sub
adc
lock
mov
mov
rorb
addr16
xor
push
jne
ret
testb
or
add
ret
add
inc
inc
jmp
outsb
jns
int3
pop
or
push
xchg
shlb
jmp
rol
pop
test
out
jmp
cs
add
scas
out
clc
mov
xchg
mov
lods
add
mov
sbb
mov
dec
sbb
cmp
pusha
xchg
or
xor
and
in
ffreep
adc
mov
mov
aad
pusha
adc
mov
rolb
dec
mov
xchg
cmp
mov
clc
push
mov
push
iret
iret
or
adc
mov
jb
or
mov
jo
jle
movsb
ljmp
sbb
mov
iret
jl
notb
xor
addl
in
cmp
add
hlt
xchg
std
jl
bound
sub
push
mov
outsl
roll
sbb
inc
cmc
arpl
or
jl
and
xor
lods
mov
jns
push
jmp
icebp
sub
push
push
jne
mov
cmp
mov
loopne
jnp
push
cmp
popa
mov
fistl
mov
and
ljmp
arpl
push
push
mov
jecxz
movsl
cmpsl
add
int3
or
fs
mov
and
outsl
push
daa
push
test
jl
js
test
jmp
mov
sub
sbb
adc
sub
xchg
pop
fimull
imul
jne
js
and
inc
xor
std
call
loope
gs
outsb
sbb
or
daa
shll
sbb
lds
repz
cwtl
ret
mov
je
sbb
add
das
or
or
lret
scas
mov
in
pop
xor
fs
adc
ljmp
add
popa
js
and
sbb
xchg
fcmovnu
dec
add
in
out
ja
int
out
fs
dec
outsl
xchg
mov
aaa
jne
popf
iret
lods
out
mov
xor
and
adc
cwtl
sub
mov
in
and
jno
inc
mov
pusha
sbb
sub
stos
dec
xor
pop
popf
sbb
jp
ljmp
imul
add
push
ffreep
imul
nop
inc
cmp
inc
jbe
or
sbb
loopne
les
push
pop
dec
mov
xchg
inc
ljmp
mov
jle
adc
ret
push
jle
scas
mov
jb
mov
dec
adc
shlb
test
xchg
inc
or
das
or
iret
sbb
push
jno
fimull
sub
popa
fmuls
arpl
test
xchg
sbb
mov
and
pusha
xchg
mov
es
roll
cmpsl
sbb
int
cmp
aaa
leave
arpl
add
les
sub
or
mov
jns
lahf
or
and
jmp
arpl
push
es
adc
lods
push
sub
pop
add
sub
cmpsb
test
mov
sub
push
xor
mov
sbb
loopne
inc
mov
sbb
arpl
xor
mov
hlt
ret
shrb
sbb
stos
cmp
cs
stos
mov
js
mov
xchg
xchg
ja
cmpsb
daa
xchg
clc
mov
popf
adc
hlt
jmp
pushf
nop
push
rcll
test
push
xlat
addr16
outsb
push
push
xchg
or
adc
jg
jl
jns
stos
int3
jne
jns
inc
xchg
and
dec
jl
es
jo
adc
por
xchg
xchg
outsb
fwait
and
sbb
mov
xor
mov
push
sbb
xor
and
mov
sbb
and
out
jne
add
rcrb
mov
adc
and
sbb
inc
mull
and
and
push
insl
dec
inc
ja
push
das
fucom
inc
adc
vcmpunordsd
jmp
inc
out
jno
or
sarb
xchg
xor
xchg
cmp
rolb
fstl
ret
dec
cmp
fs
mov
dec
and
outsl
arpl
sub
add
cmc
sub
bound
arpl
loope
enter
push
mov
cmc
ret
add
jecxz
mull
sub
mov
ret
scas
or
add
mov
pop
pop
pop
cmp
test
xchg
subl
outsl
dec
rorb
mov
jno
pop
push
sbb
dec
and
inc
movsl
icebp
fiadds
aam
inc
dec
pop
sbb
mov
and
scas
sub
std
sub
xchg
add
pop
sub
add
cmp
xchg
faddl
outsl
pushf
mov
sbb
jmp
jb
add
sub
andb
cli
inc
jns
and
mov
xor
sub
add
adc
pop
cmp
out
int3
popa
jecxz
scas
pop
push
out
call
fcmovbe
cmp
sbb
sti
testb
daa
hlt
je
xor
push
sub
sbbb
pop
adc
pop
add
out
pop
mov
inc
jl
xorl
xchg
das
leave
mov
in
mov
daa
push
adc
and
xlat
rorb
imul
cs
je,pt
mov
lods
movb
push
mov
mov
repnz
shlb
jnp
orb
mov
add
out
es
fdecstp
notb
xchg
xchg
mov
test
cs
pop
outsb
sub
jo
push
jg
subl
add
scas
cmp
dec
jno
test
stos
loop
ret
test
testl
enter
jno
test
sbb
out
push
add
and
jns
mov
adc
or
or
daa
cmp
mov
mov
aas
mov
add
xchg
mov
xor
je
and
fwait
rcl
pop
lahf
pop
fimuls
jp
iret
inc
mov
ret
loope
add
in
or
dec
fcoms
fiadds
push
loope
sub
mov
inc
cmc
mov
sub
icebp
pop
pop
xchg
inc
test
cld
test
sub
add
xor
xlat
aaa
dec
hlt
mov
push
mov
in
inc
lahf
out
pop
dec
loop
clc
test
dec
sbb
sub
xchg
mov
jns
es
bound
clc
mov
jo
or
lock
push
add
add
lds
cmc
inc
js
mov
mov
adc
add
repz
lcall
shl
jmp
adc
pop
jp
fbstp
and
loope
adc
add
aad
loope
push
or
es
arpl
lock
loopne
sub
wrmsr
pop
inc
or
and
sbb
cmp
movsb
cmpsb
imul
pop
xchg
push
inc
xchg
sarb
test
loope
ss
dec
push
xor
ds
sub
dec
jg
push
call
test
adcb
mov
and
pop
imul
daa
push
pop
and
xchg
adc
jo
sub
push
push
dec
sbb
adc
movsb
and
aam
test
dec
fwait
rorb
iret
das
push
adc
adcl
add
movsl
pop
push
fmuls
inc
adc
inc
xorb
xchg
dec
imul
mov
lahf
cltd
orb
push
push
sub
out
xchg
push
lock
sbb
and
xlat
addl
pop
jg
or
sbb
xchg
xor
sbb
and
inc
shrb
mov
mov
dec
mov
lock
clc
jg
xchg
test
dec
xor
jno
loope
into
pop
dec
push
add
push
and
cmp
fwait
and
push
xchg
or
fiadds
inc
fldcw
loope
out
cmpsb
js
clc
pop
mov
lock
movsb
sbb
rorl
test
xchg
push
sub
imul
popa
and
xor
icebp
lahf
aad
sbb
aaa
sti
test
pop
add
or
jecxz
or
fwait
inc
push
lods
into
ret
mov
mov
sarb
ret
pop
mov
or
xchg
adc
fwait
mov
pop
pop
or
sub
mov
inc
gs
push
pop
insl
adc
xchg
dec
or
push
sub
imul
mov
fisttps
push
int3
add
and
outsb
mov
mov
and
push
hlt
insb
mov
aas
cwtl
and
and
insl
jno
out
lahf
add
je
imul
push
xchg
enter
jne
push
add
and
inc
test
dec
adc
adc
lods
push
test
dec
shll
add
loope
dec
loopew
cltd
pop
jb
orl
lods
sbb
jae
mov
and
inc
jb
int
addb
sti
iret
mov
popa
movsb
dec
inc
mov
and
sub
push
les
adc
std
sub
mov
sar
movsb
xchg
adc
ljmp
adc
negl
movsb
or
dec
add
cmp
or
and
orl
ret
mov
inc
ret
je
in
xchg
daa
bnd
stos
mov
sub
movlps
add
xor
in
add
dec
push
std
popa
and
jmp
out
and
mov
lcall
sti
add
sub
push
nop
and
dec
out
bound
int3
add
dec
adc
add
mov
pop
or
loope
imul
push
jo
add
xchg
pop
testl
sub
sbb
xchg
imull
outsl
adcb
sub
add
xchg
inc
pop
xor
sbb
lcall
mov
adc
test
out
pop
adc
push
int
push
push
push
lods
fiadds
or
add
scas
jne
sarb
add
mov
scas
or
ret
sub
js
dec
add
shlb
dec
imul
or
mov
and
or
add
or
imul
xchg
push
lret
dec
mov
loopne
cmpsb
loope
loopne
sub
push
inc
inc
jmp
push
cwtl
push
pusha
out
add
push
add
ret
and
or
pop
pop
xchg
mov
sbb
add
pop
adc
scas
addb
roll
in
sbb
xchg
cld
mov
js
and
aas
add
pop
dec
xchg
enter
das
bound
sub
jo
or
cs
and
add
and
fistl
push
loopne
adc
popa
aaa
loopne
decl
test
pushf
mov
xor
je
call
addr16
iret
je
xor
dec
nop
pop
ret
mov
mov
push
xor
imul
add
mov
add
icebp
jge
jge
push
arpl
dec
scas
sbb
rcpps
mov
ja
outsb
int
jo
imull
or
cmp
sbbl
inc
andb
les
fistpll
inc
stos
add
jmp
dec
bound
xor
into
aaa
daa
add
out
add
outsl
int
out
cmp
add
sbb
xchg
es
sub
add
popa
or
add
mov
test
insl
inc
enter
dec
add
dec
das
add
popf
and
add
fcompl
jo
jnp
popa
insl
fisubrl
pusha
adc
add
jge
inc
sbb
in
ds
andb
int
insb
xorb
pusha
rorl
dec
mov
xchg
pop
xlat
push
push
push
jb
mov
or
add
sahf
nop
pop
inc
iret
inc
mov
inc
pop
mov
test
je
lods
lods
imul
pop
pop
add
push
pop
pop
andl
or
shll
push
jo
and
loop
scas
xor
inc
jp
test
add
lds
stc
addr16
dec
mov
sar
xor
push
adcl
pop
ss
cmp
scas
mov
and
sbb
cmpsb
and
jbe
inc
cmp
sub
mov
adc
cmp
xchg
lock
pop
xchg
xchg
test
imul
dec
loop
xchg
or
into
jecxz
add
sbb
or
andl
and
ret
pop
loop
adc
xchg
or
push
mov
push
out
add
add
add
add
loope
add
in
cmp
xor
adc
xor
xor
jae
dec
sbb
xor
add
or
inc
add
loope
cltd
mov
add
aaa
sbbl
add
pop
or
adc
adc
mov
cwtl
les
adc
rol
mov
test
imul
cmc
inc
jle
fmuls
sub
xchg
pop
lods
icebp
shll
mov
lods
dec
imul
movsl
dec
adc
clc
lock
sub
mov
daa
add
add
cmp
xchg
les
cmpsl
sbb
dec
sbb
adc
sub
add
sbb
or
int
xor
outsl
add
jecxz
insl
inc
adc
inc
in
add
mov
and
push
pusha
pop
in
add
or
cmp
iret
bound
pop
into
daa
out
arpl
and
cmp
or
push
loopne
add
repz
xor
shl
bound
inc
dec
mov
or
mov
loope
or
add
lahf
sbb
add
lea
jne
sti
add
movb
test
cmpsl
in
sub
mov
insl
add
adcl
rorb
or
xor
dec
mov
push
adcl
sub
cmpsb
and
fsubs
aad
divb
sbb
adc
adc
sub
xor
aad
xor
and
pop
aad
mov
loopne
loopne
mov
lods
cltd
sar
pusha
imul
pop
add
f2xm1
xor
jp
push
and
cmc
fidivl
ds
subb
adc
xchg
iret
xor
adc
or
mov
loopne
lret
andl
cltd
add
test
push
jecxz
xchg
aam
roll
ret
fsubs
and
pop
iret
push
mov
int
dec
popf
rcl
hlt
cmp
test
sub
sub
mov
cmpl
inc
push
xorl
sbb
lea
movsb
aaa
push
mov
fwait
add
adc
and
dec
pop
sti
aas
push
push
and
xor
push
cmp
jp
ret
adc
and
into
xchg
je
pop
inc
fwait
inc
sahf
xor
and
and
ja
add
adc
fwait
push
xor
xorb
xor
xchg
rorb
cmpsb
fnstsw
fisubs
adc
mov
test
cmpsb
fs
push
call
fwait
outsl
mov
pusha
push
dec
repnz
iret
nop
add
ds
fcoml
push
test
mov
das
stos
daa
je
je
scas
aaa
dec
insb
add
out
cmp
cmp
add
popa
test
icebp
add
inc
xchg
cmp
jnp
js
push
mov
inc
inc
add
dec
and
cmp
jmp
mov
sbb
jne
add
add
sti
popf
inc
and
pop
mov
inc
mov
addr16
or
mov
sbb
adc
dec
outsl
aaa
push
ds
movsl
fstps
inc
data16
add
sbb
xchg
js
pushf
mov
fsubrl
loop
mov
test
pushf
jnp
repnz
adc
mov
or
push
push
shrb
enter
push
in
loope
pop
std
jp
rolb
iret
fdivl
loope
ret
and
adc
aas
test
pusha
mov
fldcw
imul
mov
push
push
out
sbb
cmpb
lods
sub
add
mov
dec
push
or
cmp
jl
dec
lea
inc
stos
pop
adc
and
or
or
xchg
add
jb
sbb
sub
mov
insl
xchg
cmpb
or
out
sbb
sbb
push
adc
mull
push
inc
fdivrs
iret
ficoml
jmp
and
outsb
mov
jle
xlat
and
subb
and
sahf
jnp
das
ljmp
fildl
bound
imul
stos
sub
movsb
jnp
or
xchg
cmc
or
jne
jge
lods
sbb
sbb
or
bound
cmp
call
jnp
movb
pop
adc
addr16
mov
int
loopne
mov
adc
outsl
mov
mov
xchg
in
xor
shlb
out
adc
hlt
adc
add
jb
call
pop
mov
xor
iret
or
cmp
in
push
inc
cmp
aas
xchg
fldl
imul
pop
push
pusha
loop
test
int
cmovge
vdivps
inc
push
xchg
add
cmp
cmp
movsl
xor
sub
es
cmpsl
inc
test
xor
stos
sar
inc
add
or
sti
or
jmp
loopne
test
pusha
dec
xor
or
test
out
and
gs
sbb
push
lahf
pop
jl
mov
add
imul
outsl
into
loopne
mov
stc
iret
or
ret
cltd
nop
cs
jg
mov
stc
je
ret
inc
mov
inc
xchg
cmp
test
pop
adc
fldenv
mov
mov
adc
dec
sub
mov
pop
cld
mov
cmp
inc
js
xchg
add
lcall
mov
xchg
es
movsb
movsl
pop
xchg
pop
cmp
xor
push
mov
mov
xor
subl
fisttpll
movsb
iret
rcrl
sub
pop
mov
cmp
add
xchg
aad
add
jnp
lds
push
ds
or
pop
xchg
dec
cmp
js
das
rclb
mov
lahf
cmp
mov
loope
and
sahf
add
xor
jmp
bound
or
jg
xchg
roll
dec
arpl
add
mov
gs
pop
push
mov
imul
sbb
sbb
mov
xor
add
push
das
lods
pop
adc
lea
icebp
sbb
nop/reserved
nop
dec
and
xor
sub
add
cmovs
add
mov
xlat
sub
in
push
popa
outsb
int
xchg
cmpsb
mov
add
mov
gs
sub
xchg
daa
inc
or
ret
xchg
inc
aaa
xchg
pusha
push
mov
dec
push
jg
dec
mov
call
cld
loopne
testl
sub
and
rolb
dec
and
test
into
out
sbb
jbe
cmp
sub
and
pop
pop
js
push
fldcw
loopne
inc
sti
test
add
enter
inc
xor
sub
fbld
xor
sbb
ja
xchg
addl
xor
mov
or
mov
sbb
sbb
jmp
dec
lock
sub
bound
pop
jnp
pop
adc
lock
cs
ss
int
fs
loopne
add
shl
push
scas
adc
addb
mov
push
add
lcall
out
xor
testl
and
aam
aas
adc
adcb
sbb
add
or
pop
mulb
adc
sti
ret
rorl
ret
push
sub
push
add
or
push
pop
pop
xlat
and
inc
and
or
jmp
mov
out
pop
hlt
or
sbb
pop
push
bound
xchg
cmpsb
and
pusha
xchg
pop
scas
dec
dec
add
xlat
shrl
add
push
pop
mov
loopne
lock
fwait
lret
pcmpeqw
push
stos
es
mov
mov
in
cmp
push
inc
notb
or
nop
int3
jo
and
fwait
scas
inc
cmp
popa
cmp
data16
jle
addr16
popf
and
xor
dec
add
aas
sbb
scas
sub
pop
mov
xlat
stos
test
mov
pusha
mov
out
in
cmp
movsb
mov
jecxz
into
out
jbe
femms
xchg
jmp
cmp
imul
mov
cmp
mov
loop
or
cmp
and
sub
loope
add
sti
add
and
cmp
add
loopne
es
hlt
loope
cwtl
xchg
sub
push
cmc
and
nop
or
xchg
jl
out
lods
and
sub
or
add
add
or
loope
mov
or
scas
sub
ret
mov
adc
testl
mov
or
push
sub
add
arpl
mov
inc
pop
lret
add
sub
ret
stos
inc
xchg
mov
dec
inc
fistpl
loope
mov
adc
or
shrb
or
lock
dec
xor
fiadds
inc
mov
and
shlb
jecxz
sub
shl
mov
or
subl
ret
lock
shl
push
fbld
pop
jb
sub
faddl
mov
jb
loopne
adc
sbb
int3
jae
add
call
pushf
fildl
lret
push
lret
mov
pop
and
adc
push
pop
jle
nop
mov
mov
push
loopne
sub
outsb
sub
test
iret
shll
rcl
pusha
push
fildl
sub
imulb
xor
lahf
mov
inc
cwtl
inc
mov
or
inc
cmp
rol
pop
nop
and
or
iret
cmpsl
mov
sub
pop
inc
mov
add
leave
jmp
roll
inc
cvttps2pi
int
push
rcrb
add
inc
cmp
addr16
in
test
fldcw
rclb
fnstenv
jmp
cmpsl
loope
jmp
and
jbe
jns
cmpsb
xor
xor
jne
repnz
and
popf
push
and
fdivrp
lret
into
movl
mov
pop
add
add
rcr
test
pop
push
fcomp
fidivs
rorl
jbe
sub
popf
stos
jl
lea
xchg
push
sub
pop
and
mov
push
divl
and
das
in
sub
out
pusha
cmc
cmp
ret
mov
das
adc
js
lea
add
and
js
inc
cwtl
out
xchg
movsl
test
scas
icebp
icebp
hlt
outsl
sti
pop
mov
add
add
in
lock
push
inc
jge
fists
jb
jo
outsb
cmpsb
shr
sub
push
or
xchg
and
icebp
fnstcw
clc
jb
jbe
mov
cmp
aad
mov
mov
ss
ret
add
jge
sub
cs
xchg
ret
cmpsl
ljmp
stos
test
lds
fists
insb
sub
loope
popa
adc
mov
mov
sub
adc
cld
test
add
dec
arpl
out
add
mov
ja
mov
push
add
sub
xchg
imul
and
icebp
and
in
loopne
rolb
sbb
mov
push
mov
jns
add
xor
pop
rorl
pop
mov
loopne
repnz
into
ret
aam
or
and
push
pop
insl
push
scas
xor
icebp
jp
add
push
adc
cmp
scas
nop
push
mov
repz
xor
lods
fldl
push
inc
fsubs
fstl
lock
add
hlt
jo
psubsb
push
jo
sbb
test
lea
in
or
mov
arpl
cmpsl
cmpsb
adc
out
mov
mov
data16
fs
das
xchg
icebp
dec
xorps
fwait
push
aaa
inc
test
push
mov
xor
aad
and
cmpl
aad
divl
mov
out
seto
push
test
in
add
jmp
bound
sbbl
jb
jg
pop
push
call
mov
jge
shl
push
add
lods
imul
stos
loop
popa
popa
icebp
inc
adc
sub
fisttpl
pop
test
mov
addl
test
pusha
jne
nop
scas
pop
loopne,pn
lret
jo
bound
bound
cmp
sub
lods
inc
and
aam
fists
sub
mov
add
sbb
push
mov
jo
mov
or
mov
dec
lahf
fcoml
pop
pop
mov
les
push
inc
dec
xor
cmp
inc
cmpsb
mov
xor
sub
sub
int3
rorl
push
sar
add
add
add
pop
bswap
aaa
popa
aaa
pop
nop
pop
lcall
test
jmp
jb
nop
xchg
add
cli
adc
daa
sub
or
js
shlb
sub
loopne
stos
add
xchg
lahf
and
mov
roll
xor
sbb
sub
or
and
jecxz
cmpsl
lods
in
sbb
and
cltd
jge
jno
imul
push
sbb
adcb
mull
mov
add
mov
insb
push
mov
fisubl
sub
sahf
sahf
out
pusha
sahf
adc
adc
adc
imull
test
pushf
in
and
xor
lock
adc
mov
mov
adc
push
mov
inc
rcrl
mov
cmpsb
add
shl
mov
cmp
fwait
cwtl
outsb
jae
shrl
insb
jbe
xor
xorl
and
mov
hlt
push
pop
cmp
xchg
cmp
inc
sarl
loope
inc
lods
adc
fcompl
rolb
cmc
jle
int
or
test
cmp
rolb
in
add
loope
mov
sbb
add
pushf
pop
cmpsl
dec
div
add
sbb
sub
or
push
sbb
mov
sbb
in
fcoms
pop
rorl
into
pop
ja
rcr
iret
jmp
pusha
xor
sub
divb
shl
lret
cmp
add
add
repz
icebp
out
push
adc
mov
cmp
pop
test
out
lods
es
bswap
and
nop
mov
sbb
pop
cmp
adc
lock
mov
adc
cmpsb
fistps
clc
jo
jae
ja
or
js
push
ret
pushf
ret
push
mov
cld
and
xor
ja
push
test
call
and
sbb
pop
test
add
dec
add
iret
fnstenv
add
xor
xor
adcl
dec
mov
push
fisttps
add
adc
aas
rorb
inc
call
jl
sub
ja
mov
aas
cwtl
inc
add
scas
mov
lret
sbb
cmp
pop
mov
pop
mov
xchg
aam
cmp
mov
fs
xchg
xchg
lea
jb
movsl
xchg
ret
xor
lret
bound
push
jl
xchg
or
aaa
in
pop
loopne
ret
rcll
inc
cwtl
or
repnz
fsub
lret
fwait
rol
orb
dec
aaa
and
cltd
mov
das
ret
loop
imulb
pop
adc
mov
leave
lock
enter
into
sub
jo,pn
enter
xchg
mov
adcb
and
and
xor
pop
mov
mov
inc
hlt
adc
pop
jecxz
and
adc
cmpsl
or
mov
das
add
mov
jbe,pt
mov
cmp
jle
mov
popf
inc
or
int3
or
and
test
int
add
lret
and
pop
adc
or
and
and
scas
inc
gs
inc
mov
les
test
mov
dec
ficomps
adcb
mov
enter
imul
rcrl
enter
add
or
push
jae
lds
jecxz
lahf
into
or
push
mov
test
push
xor
icebp
push
cmpsb
ret
leave
data16
jecxz
pop
inc
push
push
cli
ja
push
xor
push
or
xchg
aaa
aad
es
fcomi
and
fldcw
or
sbb
push
inc
test
sahf
repz
push
push
and
pop
mov
adc
int3
jmp
or
cmpsl
notb
push
xlat
or
rorl
add
mov
movl
push
pop
jb
fsub
scas
in
pop
xchg
adc
lock
xchg
and
or
cmpsb
out
lods
jmp
adc
inc
jge
sub
and
xor
das
imul
es
imull
cmp
testb
mov
or
movb
jns
and
pop
ds
lret
loopne
pop
pop
xchg
dec
test
dec
and
pusha
inc
pop
ret
movsl
xor
lods
cmp
call
push
repnz
ret
and
sub
add
sbb
xlat
test
test
xorb
xor
push
sub
and
sub
mov
lsl
jecxz
sbb
movl
xlat
imul
pusha
mov
pop
fwait
jecxz
mov
push
or
ret
out
fs
out
lods
call
or
out
cltd
jmp
adc
pushf
into
push
cmpb
push
cmp
sbb
aas
dec
jbe
lods
in
mov
hlt
loopne
sub
cmpsb
es
call
shlb
loopne
out
inc
jae
sarb
out
cmp
subl
pushf
adc
xor
mov
lcall
mov
ficompl
push
aam
mov
mov
xchg
xchg
pop
inc
push
addr16
dec
jo
adc
add
and
sarw
aas
fistl
lret
ja
inc
imul
add
sub
jo
in
push
sbb
orl
imul
jl
jb
pusha
les
or
jne
cmp
sub
cmp
inc
fsubl
mov
inc
dec
sbb
push
push
or
ffreep
nop
ret
or
and
cmpsb
mov
sbb
push
jb
inc
ficompl
scas
imull
loope
push
mov
pusha
loopne
inc
push
insb
xchg
push
adc
daa
fisttpl
push
leave
test
xchg
test
pop
add
xchg
add
mov
addb
dec
pop
cmp
das
add
sbb
lods
fsubr
adc
push
arpl
aaa
dec
adc
aas
adc
xchg
aaa
dec
xorl
sub
fdivrs
fstpl
or
fldcw
pop
sbb
ret
js
lret
loope
sti
leave
nop
icebp
sbb
or
jl
jbe
cmpsb
lds
inc
hlt
movntps
ds
adcl
or
cltd
lods
in
pop
enter
enter
mov
jnp
js
xorb
dec
sbb
sub
test
test
mov
push
ss
out
call
sahf
out
inc
add
mov
sbb
test
popf
push
and
cmp
mov
sub
aas
in
dec
into
adc
and
pop
dec
daa
xchg
and
lds
movsb
lea
inc
addb
jmp
insl
jbe
out
lock
test
add
or
nop
jo
leave
fsub
pop
adc
subl
lock
jo
dec
aaa
sbb
add
int3
jne
mov
sub
pop
inc
adc
sub
imul
jle
sbb
sub
call
movsb
iret
cmp
pusha
and
addr16
test
loope
stos
insl
inc
arpl
jae
daa
dec
gs
sub
jbe
or
cmp
inc
push
or
mov
and
inc
imul
aas
test
movsb
xchg
std
notl
out
das
pop
bound
iret
or
lods
mov
aam
lock
adc
adc
add
in
inc
pop
or
cmp
jno
mov
in
popa
add
mov
jo
add
aam
fcoms
push
xorb
cmp
or
stos
jg
shlb
or
ss
add
insl
ret
xor
fmull
jmp
insl
adc
push
mov
or
or
jle
les
and
mov
in
or
mov
inc
cmp
insb
faddl
adcb
cltd
test
xor
pop
mov
or
xorb
loop
jb
adc
lock
push
adc
push
mov
ja
mov
push
pop
or
call
sbb
and
out
test
jg
pop
push
ror
sbb
adc
out
mov
inc
mov
shlb
adc
mov
pop
pop
pop
mov
sub
jle
rolb
add
and
and
mov
and
inc
call
cs
pushl
mov
repz
push
pop
jle
sahf
cld
dec
movb
jge
sbb
push
cmpl
adc
add
push
mov
jb
shrb
cmp
push
imul
lea
and
cmp
add
lret
sbb
into
into
roll
xchg
cmc
hlt
add
mov
mov
rorl
imul
mov
idivl
je
or
xchg
push
xor
or
cmp
mov
or
mov
add
cltd
cli
shll
or
in
sub
decb
xchg
subl
add
add
xchg
test
cwtl
push
add
rolb
test
push
ret
bt
push
and
dec
push
mov
cmc
es
xlat
or
arpl
iret
xacquire
sub
popa
clc
cmp
movsl
addl
into
push
or
pop
fildll
sti
mov
inc
sub
push
mov
sub
cmp
dec
pop
mov
dec
sbb
xlat
sahf
or
or
xchg
mov
hlt
pop
rclb
sub
jl
idivl
roll
adc
jmp
iret
stos
cmp
popa
std
jnp
mov
test
loope
aaa
sub
test
insb
in
popa
out
stc
add
cs
fnstcw
sbb
xor
enter
lahf
jno
rcll
imul
add
dec
pop
add
cmp
in
ja
adc
and
test
jmp
mov
rcll
and
shll
mov
inc
outsl
dec
push
push
fisubrl
cmp
adc
inc
sbb
or
pop
pop
insl
push
popa
int3
mov
int3
cmp
lahf
xor
inc
jae
mov
inc
popf
aad
lea
cwtl
daa
push
pop
cwtl
sbb
xchg
xchg
stos
and
lods
jp
test
sub
inc
sbb
pop
sub
arpl
test
adc
dec
mov
push
dec
mov
neg
pop
add
sub
dec
add
stos
inc
loope
imul
add
add
cmpsl
pop
je
add
or
jmp
dec
add
out
sub
push
xor
pop
mov
loopne
jl
push
mov
push
clc
cwtl
push
test
mov
jmp
imul
rclb
es
pop
mov
enter
mov
xor
es
jo
sub
cmp
sbb
mov
gs
sub
orl
mov
daa
pushf
ljmp
aaa
movsb
pusha
popa
adc
mov
sbb
loope
add
sub
adc
xor
jp
and
add
pop
add
ss
xchg
stos
ss
in
jbe
dec
cmp
xchg
rcl
xchg
inc
fldl
aaa
rcl
cmp
mov
popa
push
in
jle
jbe
mov
iret
xor
push
aaa
sub
pop
or
shlb
stc
mov
popa
mov
mov
arpl
and
inc
pop
push
lods
push
je
gs
sbb
cmp
sbb
xor
daa
fldl
ret
movsb
inc
daa
inc
adc
insl
arpl
dec
sub
and
out
push
dec
sbb
repz
push
mov
xor
push
enter
scas
aas
and
fs
scas
lock
xchg
jbe
xchg
sti
rol
sub
aad
dec
loope
fldcw
les
test
inc
scas
mov
push
and
dec
sbb
dec
imul
mov
jecxz
add
jo
xlat
loope
xchg
adc
mov
lds
add
ret
in
jns
push
out
or
in
pop
ret
push
jmp
mov
ja
cmpsb
mov
cmp
sbb
dec
mov
adc
ja
push
or
mov
into
imul
movzwl
adc
inc
aad
loopne
sbb
pop
pushf
clc
mov
dec
adc
inc
cmpsb
mov
popf
imul
outsl
sbb
adc
xchg
push
and
add
mov
adc
xor
push
mov
push
dec
cmp
inc
jecxz
cmpb
and
mov
repz
xchg
cmp
loopne
mov
add
ret
dec
pop
hlt
xor
mov
push
in
mov
mov
or
mov
jp
inc
aad
and
andb
and
jno
jmp
xchg
xorl
push
lret
shlb
or
sub
jo
cmp
inc
lret
leave
aaa
lds
rcll
out
add
ds
inc
pop
out
test
es
sbb
nop
inc
mov
add
js
jae
add
fs
sub
je
mov
xor
das
shl
out
jmp
push
scas
ss
add
dec
push
dec
mov
and
xor
fcoml
and
or
mov
pop
aam
sub
lret
push
sub
ja
inc
cmp
addb
fdivrp
fidivrs
aaa
fwait
es
int3
jne
sar
add
sub
imul
cmp
sbb
xchg
cmc
pop
sub
test
out
cmp
jno
sti
xchg
addr16
iret
cmp
push
test
mov
dec
lock
pusha
test
cmp
sub
iret
jae
cli
inc
push
jnp
add
loope
xor
outsl
and
sbbb
mov
imul
mov
mov
outsl
adc
iret
mov
lods
test
popf
call
mov
mov
sbb
aam
or
and
sbb
xchg
or
shlb
lock
ja
stc
add
xchg
push
enter
test
popf
pop
push
pop
jo
xor
pusha
cmp
or
push
leave
jo
pusha
inc
mov
ljmp
xchg
push
jl
pushf
mov
ret
int
mov
js
mov
push
imul
ds
lock
out
repz
call
seto
sub
mov
movsl
std
in
imul
les
mov
out
or
dec
push
jnp
dec
scas
mov
adc
test
inc
outsb
leave
lahf
movb
enter
dec
andnps
mov
mov
pop
xchg
mov
shl
ds
xlat
mov
movsb
mov
mov
arpl
and
mov
or
adc
fstps
lods
sahf
xchg
adc
sub
inc
inc
mov
mov
std
push
cmc
les
divl
add
sahf
xchg
lret
jmp
adc
push
js
cmpsl
xchg
jnp
adc
add
pop
and
and
pop
xor
sti
sub
addr16
and
push
adc
mov
pop
lahf
fs
push
jno
mov
cltd
stos
mov
xchg
add
enter
push
gs
orb
outsl
mov
xchg
lds
mov
test
adc
loop
cwtl
ret
sub
cmp
inc
ror
or
add
mov
imul
sbb
jge
push
sbb
jbe
fnsave
pop
mov
xor
pop
lods
mov
xchg
add
pusha
push
pop
sub
lods
mov
cmpsl
das
rorl
fildl
mov
push
icebp
push
arpl
movsl
movsl
or
aam
mov
movsl
ja
xor
xor
mov
or
mov
sub
dec
cmp
push
dec
jecxz
filds
daa
push
or
mov
leave
outsl
lods
dec
ss
dec
xor
push
inc
jne
js
mov
push
lods
mov
movsb
sbb
pop
mov
aam
push
cld
ds
cmp
adc
ja
test
add
jecxz
mov
jns
andb
lahf
cwtl
or
cmpsb
ret
popa
mov
cltd
sbb
mov
sub
push
sbb
fnstcw
dec
sbb
aas
jae
add
and
and
aas
test
fwait
and
test
adc
cmp
sbb
loop
inc
jg
lods
sbb
adcb
movsl
scas
jne
les
cmp
mov
or
and
popf
dec
leave
sbb
arpl
test
mov
fcoml
mov
cmpsl
sti
and
jg
scas
sbb
nop
nop
aas
fcomps
mov
aaa
scas
popa
pusha
movsb
lods
mov
mov
xor
ret
dec
mov
in
aam
pop
out
sbb
adc
hlt
popa
inc
test
scas
in
add
xchg
xor
adcl
mov
sarl
mov
adc
mov
in
imul
subl
jnp
das
shrb
push
je
jnp
imul
rorb
test
inc
and
inc
call
or
jge
test
popa
jnp
shll
and
and
insb
adc
jno
inc
cmpsl
pop
je
lret
pop
dec
loope
and
push
test
filds
fisubrl
dec
mov
ret
icebp
adc
pop
packssdw
adc
adc
jecxz
call
sbb
xchg
icebp
inc
adc
sti
cmpsl
mov
push
cmpb
cmpb
add
bound
add
pop
inc
jecxz
xor
fdivs
loope
cmp
clc
add
outsl
mov
push
sub
jo
push
jno
and
imul
aam
sbb
xor
mov
push
movsl
add
inc
or
mov
xchg
mov
xor
je
lock
and
sbb
movsl
mov
mov
mov
repz
and
pop
bound
iret
inc
aam
sbb
push
push
add
sbb
dec
lods
int
xchg
loopne
hlt
mov
outsb
jns
push
cmp
cmp
mov
cs
jnp
aam
fcmovnbe
mov
jmp
icebp
and
or
lret
fs
lock
ja
lock
mov
jl
sub
dec
pusha
mov
test
or
movsl
inc
mov
inc
fcoms
shrb
stos
add
movsl
inc
jl
movsl
in
je
out
sbbb
imul
add
xchg
loop
lods
movsl
aad
cmpsb
mov
xchg
popa
and
daa
lcall
add
iret
lock
add
push
insl
fisttpll
iret
clc
push
cwtl
outsb
pop
sti
push
add
push
cs
pop
jns
push
add
and
rcl
lahf
cli
mov
xor
mov
test
dec
rcll
mov
add
dec
add
sub
je
add
pushf
icebp
aad
add
add
lock
or
in
daa
sub
arpl
push
sub
mov
inc
in
jns
pusha
loope
push
and
push
or
es
mov
insl
mov
cmp
or
jnp
push
sub
movsb
cld
insb
pop
lret
mov
roll
ret
jno
pusha
negb
sbb
scas
push
dec
pop
jmp
cli
and
and
sbb
inc
stos
push
pushf
mov
outsb
dec
decl
sbb
jnp
ret
pop
dec
popa
push
in
push
xor
add
pop
inc
pop
movsb
addr16
sbb
ljmp
test
stc
outsl
xlat
jle
jmp
test
inc
cmp
adc
dec
mov
push
sub
xchg
inc
inc
xchg
inc
xor
cmp
jge
sbb
sbb
mov
or
adc
dec
push
std
sahf
fsts
add
into
xor
cmovo
and
pop
cli
out
xchg
shlb
cmp
out
outsb
mov
pop
dec
sbb
rcll
das
xchg
and
pop
mov
into
add
jae
add
rol
inc
clc
popa
mov
sub
xchg
lret
xchg
and
lods
bound
mov
pop
fdivs
jo
mov
call
cmpl
clc
mov
xor
and
addr16
jb
mov
lret
daa
hlt
imull
je
push
and
insb
and
and
in
subb
dec
pusha
test
test
pop
fldl
mov
inc
rep
sarl
aas
pop
sbb
push
lcall
or
shl
sub
or
lock
dec
and
xor
or
pop
or
jbe
jno
jge
int
pusha
pop
add
mov
adc
pop
lret
test
das
inc
cmc
lock
inc
cmp
lods
and
and
es
xor
or
fwait
inc
add
mov
mov
jo
pop
dec
or
sub
lahf
pop
add
mov
stos
push
pop
xor
aam
fidivrl
loope
stos
jp
or
jmp
push
add
or
mov
pusha
pusha
movsl
xchg
jno
cmc
dec
daa
or
mov
xor
cs
mov
test
aam
push
out
or
adc
or
add
push
mov
push
mov
inc
aaa
shlb
add
pop
add
inc
pop
dec
push
jae
push
push
dec
movsb
pop
push
call
es
outsb
js
add
xor
or
push
sbb
iret
push
jl
test
xchg
mov
push
cld
push
or
xchg
push
cmc
pushf
or
inc
lahf
imul
insl
or
mov
xor
popl
inc
mov
addb
ss
dec
fsub
int
and
iret
pop
sub
pop
cmpsb
pusha
outsl
inc
xchg
adc
jbe
jae
jns
out
mov
sbb
into
xchg
ss
stos
adc
push
sbb
loop
mov
xor
push
inc
lea
dec
shlb
cmpsb
insb
adc
fcoms
pop
add
add
xor
adc
mov
jne
roll
or
lock
loopne
push
mov
aaa
mov
pop
in
cmp
adcb
jae
and
ret
push
push
lahf
add
pop
shll
popa
adc
or
pop
push
fnstsw
je
push
cmpsl
push
mov
fsubrl
or
pop
iret
adc
xor
xchg
scas
jno
mov
sub
sbb
lahf
ja
pop
pop
fyl2xp1
pusha
loop
aas
add
pop
das
mov
sub
pushw
jle
bound
fstpl
push
fldt
push
inc
adc
jns
clc
mov
fbld
push
fldcw
movhps
sbb
add
pop
scas
or
jecxz
lret
sub
into
add
into
sbb
jns
in
ret
xor
pushf
subl
sbb
in
add
mov
inc
fistpl
xor
js
inc
ret
sub
aaa
cmp
mov
daa
leave
or
into
pop
cmc
orb
mov
mov
mov
add
ja
and
push
aas
arpl
sbb
inc
mov
sub
xchg
xor
push
insb
pop
push
rol
cmp
out
stos
add
jle
iret
and
arpl
ret
loope
or
add
mov
sbb
add
ret
mov
loopne
ret
cmpsb
mov
hlt
shll
and
adc
imul
nop
fisubl
add
add
addl
jmp
sbb
inc
flds
ret
movsl
mov
repz
lods
dec
inc
stos
push
roll
add
sub
inc
dec
fmuls
mov
or
jns
add
inc
inc
add
mov
sbb
mov
jb
mov
nop
add
xchg
sub
push
cmp
mov
test
imul
push
push
jl
fdiv
add
jbe
inc
out
or
sub
inc
mov
xchg
lods
repz
ljmp
clc
add
dec
mov
loope
mov
sbb
jae
sub
sbbb
sbb
outsl
sti
mov
loopne
test
add
js,pn
icebp
inc
xlat
lock
dec
in
nop
cmc
inc
cmp
xchg
adc
sbb
mov
pop
add
add
inc
adc
xor
popa
shll
push
sub
mov
sub
aas
sbb
stos
cmp
shlb
icebp
test
cmpsl
cmp
inc
add
stos
inc
mov
pop
popa
add
fsubl
push
lahf
or
mov
cwtl
xchg
imull
add
pop
ja
inc
mov
add
ficoml
ret
popf
jbe
add
sub
mov
mov
or
mov
push
xor
movsl
fdivs
mov
mov
fcoms
test
mov
pop
filds
xchg
adc
cmp
imul
out
xor
jnp
test
xchg
movsb
jbe
mov
das
cmpsl
pop
or
fidivs
mov
aas
pop
xorb
repz
jp
cmc
cmp
paddusb
adc
popa
test
inc
mov
mov
pop
jp
fld1
sub
add
pop
mov
ja
or
or
adc
or
arpl
jl
repz
mov
adc
je
mov
pop
sahf
pop
mov
add
mov
sti
mov
popa
jecxz
pop
stos
je
xchg
ljmp
inc
mov
jne
jns
loop,pn
pop
mov
xchg
push
pop
lahf
push
sbb
addr16
inc
iret
pop
frstor
mov
xor
ficoms
loopne
or
jnp
loop
and
loopne
in
jo
out
pusha
sbb
jbe
mov
test
push
xor
stos
mov
inc
pop
sub
clc
mov
or
jns
mov
repz
pop
push
or
inc
add
xchg
lcall
sub
push
sbb
filds
lods
gs
pusha
movsb
and
adc
xchg
xor
adc
push
sub
daa
jbe
cmp
xor
sub
sahf
cmp
add
out
cmc
and
scas
sahf
and
push
ret
popa
and
mov
shlb
and
cwtl
sbb
cwtl
pop
push
fs
js
pop
mov
aam
jbe
imulb
mov
imul
jae
pop
mov
ret
dec
mov
lahf
dec
enter
filds
test
gs
popa
mov
dec
jo
aaa
adc
mov
loopne
movsb
xchg
push
aas
sbbl
mov
loopne
mov
int3
lods
popa
aas
fists
mov
or
je
subb
loop
inc
out
xor
jecxz
in
xchg
cmp
popa
jge
mov
jbe
or
cmpsl
ret
sar
or
es
sysenter
sub
and
push
add
sahf
call
and
data16
adc
addr16
clc
cmp
ljmp
shrl
ficomps
add
inc
jecxz
push
and
push
push
jecxz
add
or
push
or
or
push
or
jnp
imulb
pop
pushf
push
mov
mov
dec
push
data16
mov
ss
popl
loope
push
jmp
enter
dec
ds
imul
mov
stos
mov
jo
dec
ss
add
das
dec
pop
inc
and
pop
sbb
lods
dec
test
push
inc
add
cltd
push
lods
ret
lea
shll
pop
inc
sarb
mov
filds
frstor
icebp
jo
es
jae
stos
adcb
testl
push
inc
adcl
out
scas
or
cld
pop
ftst
add
mov
mov
jg
mov
std
xchg
hlt
pop
and
ss
cmc
call
rclb
shlb
jmp
insb
insl
jo
dec
mov
aaa
iret
sbb
add
jae
sub
dec
xchg
mov
add
stos
add
xlat
add
and
mov
insl
lods
inc
pop
lods
dec
add
or
jns
rclb
fidivrs
arpl
pushf
xlat
sub
push
fwait
push
mov
pop
inc
imul
add
and
testl
arpl
mov
scas
fmuls
fadd
daa
movsb
lods
call
in
add
adc
cmp
inc
mov
in
pop
mov
inc
push
repz
sti
push
push
xchg
add
mov
sub
pop
xor
adc
sahf
add
add
iret
add
and
aas
jbe
js
cmp
test
push
xor
popa
aad
add
icebp
jecxz
push
inc
and
loop
das
cmp
movsl
sub
pop
lahf
imul
dec
xchg
inc
cld
arpl
fsubp
or
insb
mov
push
clc
xchg
fistpl
out
daa
stc
mov
jge
dec
sbb
jmp
into
scas
cmp
addb
nop
jns
bound
or
sti
repnz
inc
nop
or
jo
lcall
inc
dec
push
stc
aaa
insl
rcll
push
pop
and
jecxz
mov
mov
jne
gs
mov
push
xchg
mov
cld
xor
push
mov
iret
mov
ja
in
add
ffree
out
insb
cmp
push
xchg
outsb
push
jp
es
sub
mov
cmp
shl
jmp
add
mov
mov
and
cmc
pop
leave
sub
sbb
imul
sbb
and
imulb
cmp
or
icebp
leave
cmp
das
pop
ljmp
mov
dec
inc
cmp
or
popa
addl
push
fistl
push
and
cltd
push
js
les
inc
insl
mov
inc
dec
daa
lret
or
cmpsb
xchg
ss
push
packssdw
mov
dec
movb
or
mov
fwait
and
leave
iret
xor
call
stos
cs
sbbl
fdivrl
lret
shlb
xor
push
pop
movb
mov
cmp
cmc
scas
test
addl
jge
add
pop
inc
push
cmp
dec
mov
mov
imul
mov
std
loopne
mov
add
inc
loope
push
and
iret
mov
repz
addb
imul
flds
xchg
insl
xchg
mov
sub
pusha
cmp
or
push
xlat
clc
dec
adc
push
mov
cmpb
xor
jecxz
push
cmpsb
or
addl
ss
mov
fldz
daa
and
test
sbb
sbb
hlt
ja
loopne
lcall
movsl
popa
sub
pop
iret
imul
jmp
aad
mov
xor
arpl
cmp
in
push
xor
push
mov
ret
mov
dec
and
sbb
sub
test
daa
mov
iret
dec
and
push
loop
mov
es
mov
dec
loope
cmpsb
sub
outsl
xchg
inc
push
mov
iret
aas
or
icebp
dec
lret
push
stos
jb
push
add
addr16
nop
scas
leave
pop
sub
fisubrs
pop
pop
fdiv
fs
testl
aas
push
inc
mov
lret
mov
add
pop
and
lahf
popa
dec
movsb
xor
stc
adc
jnp
outsl
mov
or
icebp
mov
sti
cmp
dec
lock
mov
cmp
or
add
fmuls
sbb
mov
mov
cmp
call
lods
cmpsl
or
test
into
push
xlat
and
cwtl
insl
dec
pop
std
fimull
fstpl
mov
push
cmp
pop
cs
push
movsb
push
inc
xchg
popa
lods
and
orb
sub
arpl
sbb
sbb
inc
jecxz
pop
cmp
sub
inc
jmp
int3
mov
imul
or
es
ror
mov
ja
xlat
dec
shlb
jmp
push
or
in
sub
or
pop
mov
mov
pop
adc
xor
jae
or
push
mov
testl
aas
pop
dec
or
and
inc
xchg
iret
add
add
icebp
rorl
adc
dec
das
aad
arpl
mov
mov
movsl
mov
cmp
fidivs
pop
pop
ret
xor
les
push
jae
iret
dec
pop
pop
dec
dec
inc
hlt
ds
xchg
cmp
jo
fs
std
or
bound
into
dec
inc
bound
sub
ljmp
shlb
mov
jo
mov
and
sub
jl
jb
ret
sbb
add
cmp
fwait
add
add
push
ja
scas
lcall
add
sbb
mov
sbb
pop
bsr
push
pop
shlb
test
push
fmuls
std
pop
cmpsl
dec
add
inc
test
in
xor
sbb
movsl
cltd
jmp
inc
xchg
sbb
inc
loopne
add
or
lcall
push
aaa
pop
flds
and
lds
sbb
ljmp
movsb
outsl
adc
and
pop
shll
les
mov
rcrl
out
out
sbb
add
mov
sub
sarl
stos
adc
jbe
mov
inc
or
and
or
xor
fnstcw
mov
test
add
sub
sbb
daa
add
push
adc
sbb
xchg
sub
xchg
fldenv
or
fcmovnu
movsl
out
push
push
sbb
bound
imull
mov
clc
push
cmpsl
inc
scas
sub
movsl
or
popf
cwtl
std
sbb
cmpl
xchg
jecxz
out
pop
add
xor
lds
and
aaa
pop
mov
xchg
inc
jge
jl
adc
sub
jbe
xor
adc
inc
dec
xchg
xchg
mov
aad
mov
mov
mov
cmpsb
mov
dec
out
popa
mov
lock
inc
dec
push
mov
pop
xor
pop
xchg
dec
lahf
mov
pop
fnstcw
add
mov
aaa
pop
cs
repz
jl
jle
jo
and
xlat
push
adcb
rolb
sahf
jge
mov
shl
dec
or
je
pop
out
xchg
push
sbb
ss
in
xor
pop
push
fstl
sub
mov
stos
mov
push
sarb
test
pop
lds
shrb
inc
cmp
fdivrs
pop
and
mov
add
sbb
or
outsb
fisubs
push
cmp
enter
xchg
pop
fstp
add
pop
adc
out
fwait
mov
sub
scas
sbb
ss
test
lret
add
dec
stos
popa
or
cmpl
nop
fucomp
adc
mov
sbb
push
lds
sub
call
jmp
insl
sbb
dec
adc
insb
cmp
shlb
imul
loope
jo
rolb
cmp
jae
and
add
cmp
add
add
rorb
add
xchg
pop
lea
sahf
xor
imul
xchg
sahf
inc
push
add
repz
stos
mov
xor
inc
cmp
lods
dec
ret
jnp
cmp
and
inc
adc
adc
add
mov
adc
cmc
fildl
scas
adc
mov
ret
cli
mov
scas
pop
mov
push
cmp
cmp
fildl
mov
xor
sub
loope
dec
or
add
or
pop
add
xor
add
sub
mov
int3
jae
push
mov
inc
jge
lea
dec
add
rcrb
xchg
xor
mov
loope
data16
xchg
adc
dec
test
dec
ss
test
push
or
mov
inc
loop
loope
imull
lcall
mov
mov
dec
cmp
fldenv
addr16
adc
xchg
jecxz
outsb
dec
push
loop
sbb
and
inc
dec
add
sbb
mov
shrl
inc
ja
pop
rcr
clc
push
jae
pushl
push
mov
sub
lods
push
in
jno
sub
lret
push
mov
cwtl
dec
adc
xchg
daa
sarb
pop
inc
and
and
xchg
mov
jbe
fs
into
cli
xchg
shlb
add
shll
and
dec
out
sub
sbb
lahf
xchg
sub
mov
push
mov
adc
mov
mov
lock
inc
cmp
cmpsb
mov
and
dec
loop
sbb
cmp
inc
push
mov
sbb
sub
mov
push
xlat
inc
xor
pusha
notb
rcl
sbb
insb
std
loope
or
sub
pop
or
mov
push
add
jge
adc
sbb
xor
add
mov
sbbl
rolb
adc
sub
adc
xchg
fsubs
cld
push
and
test
ss
mov
sbb
je
inc
mov
and
or
mov
cmovg
sub
add
pop
xchg
pop
or
push
and
test
mov
sub
jne
cmc
lods
jb
jne
sub
mov
ljmp
add
jge
mov
sub
dec
push
inc
das
lds
mov
ret
test
or
mull
in
pop
nop
push
jg
xor
xchg
inc
sbb
icebp
pop
popf
adc
leave
mov
jle
cmp
sarl
aaa
mov
fstps
fs
and
cmp
adc
sub
ds
xchg
jns
fisubs
cwtl
ljmp
or
rcrl
mov
rorb
movsl
xor
in
fwait
mov
mov
dec
push
push
and
bswap
inc
mov
or
cmpsl
lods
sub
or
add
sbb
adc
xchg
es
pusha
mov
sbb
lds
fimull
lea
mov
bound
add
insl
aaa
push
mov
add
xor
pop
sbb
pop
push
pop
shll
xor
gs
mov
cs
dec
cwtl
arpl
std
andl
test
outsb
lds
fsubrl
lret
cmp
es
insb
adc
pop
jmp
inc
xor
and
and
push
pusha
add
rcrb
fildll
adc
mov
dec
push
stos
lods
push
mov
mov
sub
icebp
rcr
push
sbb
std
push
out
and
mov
cmp
xchg
bound
mov
shll
add
test
pop
mov
int3
xor
out
roll
xor
jae
xor
loopne
mov
xchg
dec
and
scas
inc
jecxz
add
adc
rclb
xlat
pop
insl
dec
and
mov
ret
and
add
and
ss
out
orb
add
les
enter
push
inc
sbb
out
das
mov
and
mov
inc
add
add
xchg
pop
xchg
or
movsb
push
aam
dec
stos
fwait
andl
sahf
cmc
mov
mov
rclb
das
popa
rclb
add
push
mov
out
sub
and
mov
out
and
xchg
iret
add
jge
cmp
pop
sub
outsb
or
sbb
xchg
xchg
xor
loope
stos
sub
xchg
xor
xor
nop
push
and
ss
aaa
add
xchg
or
push
mov
mov
xorl
dec
cmp
fwait
popf
add
jo
or
in
pop
das
out
roll
xchg
rolb
loopne
inc
inc
inc
shrl
pop
mov
sub
sub
inc
mov
xor
and
sbb
mov
ret
lret
add
pushf
mov
les
mov
cmc
push
push
mov
sbb
jecxz
mov
mov
push
nop
leave
out
jecxz
lods
adc
out
pop
pop
add
nop
lret
jmp
or
je
inc
insb
xchg
cmp
sbb
add
or
xchg
fucomp
pop
test
push
xchg
sbb
add
in
and
ss
outsb
pop
inc
fisubs
xor
adc
dec
dec
cmp
cmp
cmp
inc
mov
sub
push
or
movsb
pop
daa
push
add
sbb
push
loope
js
cmp
das
jecxz
in
add
jl
arpl
and
dec
push
pop
jp
outsl
jmp
mov
pop
add
and
dec
dec
call
scas
pop
sbb
sbb
stos
add
fiaddl
dec
sub
mov
fisttpl
pop
lea
inc
push
aas
or
fimuls
sbb
push
mov
into
fwait
adc
in
daa
inc
mov
or
sub
push
push
xor
adc
pop
add
lods
ror
and
mov
fdivs
xchg
dec
and
or
int
mov
mov
mov
shlb
pop
sbbb
inc
xchg
mov
mov
mov
or
sbb
insl
lock
and
pop
jp
jo
or
adc
lods
test
push
xchg
push
loope
dec
adc
lods
movsl
adc
dec
sbb
nop
inc
push
pop
es
lds
inc
pop
lds
rclb
dec
adc
dec
leave
mov
inc
ret
mov
lods
inc
and
cmpsl
sbb
pusha
out
xor
inc
je
and
and
cmp
mov
and
fldl
mov
addr16
add
gs
xor
arpl
ja
pop
fadds
or
cmp
add
xchg
push
xor
add
inc
lcall
sbb
xchg
mov
inc
orl
dec
cli
xchg
dec
negl
add
jae
or
mul
or
and
jo
xchg
mov
scas
jns
jp
and
addl
push
es
faddl
leave
cmp
mov
push
lds
mov
lahf
lea
fs
cli
and
or
call
push
sahf
pusha
mov
loope
sub
movsb
cs
sub
cmp
push
and
jne
int3
stc
dec
jmp
enter
dec
add
sar
idivl
nop
out
inc
add
add
or
mov
pop
cmp
adc
shlb
mov
ret
arpl
inc
dec
jl
cmp
xor
sti
mov
lock
daa
inc
sub
dec
jne
push
rolb
je
rol
movsl
mov
sbb
push
push
js
dec
outsl
sub
insl
fcmovnu
andb
and
aaa
or
mov
dec
lock
imul
sbb
jbe
or
std
js
pushf
xchg
jnp
mov
gs
jecxz
inc
lret
sbb
cmpsl
or
add
cs
xchg
into
pop
inc
sbb
shlb
jns
sub
xchg
shrb
mov
leave
mov
inc
sbb
jnp
scas
in
hlt
xchg
test
test
popf
bound
mov
mov
mov
cmp
push
jbe
lret
orb
pop
movsb
adcl
rorl
or
push
call
sbb
jb
inc
dec
adc
test
and
push
pop
and
dec
dec
call
sub
dec
jno
rcr
jno
xchg
sbb
inc
pop
pop
sub
ret
ja
enter
sub
mov
orl
push
inc
fiadds
shll
mov
dec
jecxz
push
pop
cmp
or
das
popa
imul
shlb
and
outsb
jne
push
or
icebp
jmp
repnz
insb
xchg
jl
lahf
ja
and
lcall
test
mov
inc
fmuls
repz
roll
loop
adc
or
inc
loopne
ds
sub
mov
xor
sbb
sarl
or
daa
inc
and
ret
xor
stos
or
lods
lods
xchg
fcmovu
aad
push
stos
out
push
and
push
inc
shl
out
ret
pop
mov
add
lret
cmc
xchg
jne
mov
hlt
lret
fstps
cmp
rcl
or
adc
dec
rcrl
sub
rcrb
test
jo
mov
jo
cwtl
test
nop
addr16
shrb
mov
pcmpeqd
xchg
loopne
rol
xchg
mov
dec
adc
and
in
aad
mov
nop
ficompl
mov
aad
in
shlb
out
movsb
into
xor
daa
mov
pusha
or
mov
pop
leave
fstps
cvttps2pi
call
dec
push
inc
pop
fisttpl
scas
mov
push
or
xor
leave
cmp
and
and
or
sbb
pop
mov
or
push
and
jle
adc
pop
dec
sub
fildll
add
leave
mov
hlt
insl
adc
push
iret
mov
fstpt
pop
clc
int
xchg
hlt
jg
lret
out
xor
dec
imul
cmp
daa
pop
add
inc
dec
lahf
push
mov
or
add
jecxz
ret
pop
ret
cmpl
fists
xchg
lcall
sub
xlat
or
lret
dec
stos
inc
sub
or
add
xchg
je
sbb
enter
je
jns
lret
add
popa
andb
leave
sub
imul
cmp
ret
push
xor
add
in
dec
addb
dec
decb
adc
daa
mov
add
dec
es
movsb
pop
ja
or
int
push
dec
or
aas
testb
mov
xlat
dec
mov
test
push
xor
inc
aad
test
cmp
xor
in
mov
dec
sub
pop
sbb
cmp
xchg
mov
adc
popa
xor
popa
clc
fimull
js
or
jo
jecxz
ffree
or
mov
xchg
cs
xor
std
jl
pop
fistpl
adc
sbb
jmp
adc
pop
jmp
cmp
inc
or
adc
imul
fnsave
adc
imul
push
stos
ss
dec
dec
aaa
sub
pusha
ret
icebp
pusha
xchg
ret
push
pop
addr16
pop
pop
outsl
sbb
bound
xor
mov
mov
scas
adc
mov
jbe
mov
mov
popa
adc
pop
xchg
mov
push
sbb
arpl
dec
xchg
nop
out
and
fcoms
add
insl
cld
dec
xchg
rcl
lock
jmp
clc
mov
test
daa
rol
int
jbe
ror
rcrb
in
inc
adc
xlat
dec
rol
mov
imul
mov
imul
loope
fcompl
jl
or
test
es
fwait
push
clc
push
test
xor
sarl
sbb
push
out
rcl
adc
sbb
les
stos
and
test
add
mov
test
add
js
outsb
inc
pop
adc
pop
adc
pop
dec
push
xchg
inc
push
lahf
cmp
mov
jbe
dec
loopne
in
xchg
sbb
mov
out
mov
cmp
aad
dec
aam
jo
add
jp
test
insb
fidivs
leave
rcrb
sub
jmp
leave
adc
mov
xchg
or
and
outsl
scas
push
or
js
and
and
loopne
out
cmpsb
pop
fnstsw
iret
test
pushf
clc
mov
or
sub
xchg
adc
mov
add
in
repnz
std
mov
lea
push
push
push
or
dec
push
xchg
cmc
sub
sahf
dec
jp
pop
and
mov
popf
ret
addl
add
imul
mulb
and
or
push
sbb
outsb
imul
popa
das
rcrb
dec
adc
sar
sbb
pop
mov
cmp
mov
cmc
push
arpl
or
daa
bound
inc
aam
or
xor
add
sbb
xorb
sub
adc
jo
iret
cmp
sti
sbb
rcl
mov
inc
das
adc
inc
js
mov
or
lods
into
and
and
push
cwtl
jp
mov
xor
inc
mov
cmpb
push
inc
mov
push
xchg
sub
mov
and
dec
loopne
cmp
in
mov
roll
cmpsl
dec
inc
out
pop
xor
mov
mov
and
mov
pop
add
or
lret
sub
push
add
push
push
xchg
mov
mov
mov
enter
and
js
lahf
fisubrl
sbb
add
or
cwtl
cmpsl
scas
add
daa
xlat
pop
add
and
aad
mov
fadds
inc
pop
nop
inc
insl
jecxz
sbb
popf
roll
mov
aam
idivl
insl
xor
jge
test
hlt
add
dec
ret
cli
inc
dec
flds
xchg
inc
cmpsl
xor
js
xchg
or
test
xor
jo
in
movsl
xchg
sbb
inc
add
lods
jnp
enter
mov
filds
imul
dec
roll
mov
xchg
mov
dec
add
out
adc
and
inc
adc
xor
stos
push
add
outsl
sub
adc
subb
xchg
lods
popf
je
or
int3
hlt
inc
and
sub
mov
jno
cmc
or
inc
addr16
popa
adc
add
in
xchg
jbe
loop
fldt
pop
pop
das
mov
sbb
add
and
pop
mov
filds
test
or
das
sbb
pop
les
stos
push
sbb
js
loopne
push
mov
mov
ret
aad
cmp
pop
fisubs
push
inc
adc
xchg
popa
xchg
sarb
push
add
dec
xchg
sub
popa
push
movsl
pop
aaa
aad
test
xor
incl
jmp
and
sar
sbb
fistpll
test
out
inc
jno
cmp
xchg
sub
push
mov
addb
add
xor
adc
ret
dec
mov
jg,pt
and
out
inc
push
mov
testb
jle
add
and
mov
scas
xchg
nop
stos
mov
lret
sub
les
pop
adc
ljmp
scas
push
push
inc
add
xor
sub
psllq
icebp
cwtl
mov
cmp
dec
dec
out
xchg
jne
jb
xlat
adc
inc
sub
mov
and
sub
add
pushf
sbb
mov
inc
std
ffree
lret
sub
push
lret
sbb
sahf
add
push
jg
test
loope
inc
scas
fdivl
inc
xchg
fdivrs
xor
cltd
adc
imul
adc
mov
add
loope
es
mov
pop
cmp
push
inc
iret
or
xchg
bound
jbe
rclb
mov
push
sbb
mov
add
out
mov
ficompl
or
call
loopne
and
subl
mull
test
or
and
xchg
aad
lret
pusha
sti
inc
xchg
jae
xor
ret
inc
sub
fwait
aad
xorb
adc
hlt
fidivrl
popa
xchg
sub
fneni(8087
push
jns
xchg
and
push
jge
ret
adc
sub
ret
sbb
lret
fnstcw
bound
and
sbb
xchg
and
loope
icebp
and
ds
pop
xor
jg
int
push
mov
add
push
sub
gs
inc
orb
das
aaa
addl
add
test
lock
stos
mov
mov
pop
les
and
jb
and
mov
rcr
cmpsl
imul
fmuls
add
bound
xchg
lods
mov
fcoms
pop
cwtl
in
clc
push
cmpsb
fdivrl
or
mov
or
or
jae
inc
or
xchg
fdiv
mov
mov
mov
jecxz
fdiv
andb
add
rcr
jecxz
ja
loope
ud2
sbb
in
fwait
push
outsl
inc
call
nop
pop
cmpsb
xchg
push
aas
xchg
sbb
jno
pop
add
jg
fiaddl
movsb
sbb
sbb
adc
repz
pop
inc
sbb
cmp
add
lods
es
lods
testl
sbb
mov
mov
lret
pop
and
not
adc
ficomps
aaa
mov
jbe
arpl
les
int
and
adc
das
stos
popa
cmp
add
jo
pop
pop
adc
dec
sbb
add
add
dec
dec
mov
inc
fsubrs
out
push
push
inc
pop
sbb
and
into
fisubs
lahf
hlt
imul
mov
or
add
or
out
jno
dec
js
sub
rcll
and
sahf
dec
addr16
fs
add
popa
out
sub
inc
gs
or
mov
add
movsl
mov
loop
cmp
dec
add
inc
push
adc
mov
stc
js
inc
push
mov
movsl
daa
sub
and
adc
sbb
stos
push
aaa
jno
adc
shrb
loopne
push
or
mov
loop
add
loopne
dec
das
fists
cmpsb
add
ljmp
mov
add
fidivl
pop
mov
rcrl
push
pop
fadds
loopne
movsl
sub
rorb
rol
adc
scas
test
pop
mov
sbb
push
xor
test
int3
imul
dec
lock
sbb
sbb
cli
inc
adc
addr16
mov
imul
js
mov
dec
and
mov
ret
enter
push
push
sub
cmpl
das
inc
rolb
pop
stc
movsb
icebp
in
sub
popa
test
mov
addr16
jp
aad
arpl
and
adc
dec
cltd
or
add
xor
inc
xchg
adc
or
sbb
or
inc
and
inc
dec
adc
jno
sbb
pop
mov
or
mov
mov
imul
xor
mov
les
lcall
cwtl
test
out
rolb
or
andl
mov
repz
adc
mov
call
sub
cmpsl
jo
xor
pop
and
lret
fisttpll
mov
sbb
cmp
push
jnp
mov
pop
adc
dec
mov
in
inc
js
aad
mov
fsub
call
daa
cltd
xchg
inc
pop
shrl
and
mov
or
adc
lret
imul
iret
dec
test
icebp
jne
hlt
test
movsb
sbb
roll
ss
test
adc
sbb
add
sbb
imul
jecxz
stc
rcrl
add
xor
sbb
daa
pop
mov
jo
or
scas
mov
lret
sbb
daa
and
or
mov
or
or
sbb
sbb
cwtl
rol
fbstp
cmpsb
add
mov
pop
fstpt
fmuls
sahf
adc
sbb
xor
test
and
cmp
push
xchg
xchg
es
push
cmp
add
ja
xor
aaa
sub
jecxz
push
and
rclb
test
decb
inc
sub
push
add
rcll
adc
add
push
add
insb
push
pop
repz
loope
popa
add
or
adc
daa
sbb
insl
fwait
leave
rorb
test
mov
adc
adc
lret
push
pop
xor
xchg
arpl
repnz
gs
icebp
and
dec
sbb
xchg
sarl
in
xlat
outsl
sbb
dec
cmc
pusha
or
add
movsb
and
add
xlat
stc
add
cmp
adc
inc
push
orl
bound
out
xor
scas
int3
subb
xchg
popa
push
sarb
clc
push
xchg
adc
jmp
sbb
cmpsl
lret
test
adc
adc
popa
shrl
pushf
push
mov
dec
packssdw
push
lcall
push
xor
fsubs
sub
xchg
adc
loopne
pop
icebp
adc
sarl
lods
sub
arpl
xor
sub
pop
js
out
or
in
clc
xchg
test
inc
dec
ds
add
add
rorb
inc
push
lea
in
jmp
jo
push
outsl
pop
ja
popf
push
mov
push
xchg
loope
xor
jns
add
or
mov
out
scas
jmp
sbb
sbb
rolb
xchg
sub
bound
enter
jecxz
inc
adc
dec
cmpsb
subl
push
dec
xchg
test
sbb
out
js
adc
loope
jo
xor
push
rcrl
pop
xadd
addl
and
loop
pop
orl
jp
out
pop
lea
inc
pop
pop
push
rcrl
or
testb
push
add
pop
cmp
test
cltd
xlat
lcall
and
fildll
mov
imul
add
pop
adc
shlb
imul
dec
mov
push
sbb
inc
cli
mov
sbbl
cmp
and
add
repz
ja
xor
popa
iret
mov
xchg
cmp
sbb
mov
add
push
sbb
ljmp
test
push
or
push
cmp
push
sarl
or
bound
mov
cmpsl
add
cmp
push
stc
das
add
addl
jp
rclb
clc
add
cmp
mov
mov
mov
add
xor
inc
add
ljmp
cmpl
sbb
jecxz
xchg
icebp
je
aaa
dec
mov
xchg
add
aad
and
jecxz
dec
pop
jns
test
out
and
add
dec
shrl
movb
jne
jmp
pop
scas
pusha
and
loopne
and
jg
cmp
lret
add
cmpsb
push
pop
gs
add
push
push
das
push
and
and
and
push
inc
ret
fmuls
ret
adc
lds
pop
add
mov
xor
and
fs
or
scas
cmpsb
xor
fdivl
fstl
outsb
pop
addl
mov
sbb
sub
es
adc
leave
mov
xchg
cmp
popf
mov
insb
rcrb
inc
add
insb
push
cmpsb
xlat
jp
cmpsb
test
outsl
pop
jmp
and
and
mov
cmpsb
add
pop
mov
daa
or
fstpt
movsl
pop
push
ljmp
ja
cltd
pop
in
shlb
inc
xchg
cmp
ret
imul
sub
rorl
and
lret
push
push
xchg
push
mov
push
sub
jno
test
and
pop
jmp
mov
and
or
lea
or
mov
mov
mov
fsubrs
push
loopne
push
sub
mov
rcrb
inc
or
leave
imul
int
sub
inc
in
adc
push
lock
adc
sbb
daa
int
fadds
lea
lahf
jecxz
addr16
movsb
sahf
xchg
mov
stos
and
stc
adcl
ss
enter
pop
pop
aaa
shrb
repnz
add
es
xchg
mov
leave
mov
push
loope
vcvtpd2psx
cmp
sbb
inc
stc
pop
movb
add
test
inc
mov
push
enter
icebp
lods
sbb
sbb
xchg
shlb
mov
sub
test
icebp
test
mov
mov
and
nop
int
mov
or
addr16
mov
dec
dec
mov
data16
jmp
dec
fdivs
fimull
push
loope
dec
ss
add
adc
mov
iret
jge
xor
xchg
push
adc
call
sub
loopne
fadds
mov
mov
push
push
flds
and
pop
pop
cmp
push
or
sub
iret
push
cwtl
pusha
rorl
dec
and
or
mov
push
inc
pop
lahf
das
inc
or
fwait
aaa
pusha
pop
pop
dec
cmp
adc
and
ret
sbb
mov
xor
iret
fisubrs
xor
mov
nop
add
lock
je
flds
loop
and
and
adc
es
iret
mov
fiadds
mov
loopne
loop
inc
scas
test
std
inc
push
or
jb
sub
adc
dec
loopne
roll
xchg
mov
mov
pop
adc
data16
and
lret
push
jp
ljmp
arpl
pop
pusha
insb
ficomps
xor
bound
iret
dec
pop
mov
xchg
sub
add
aaa
movl
sbb
sub
inc
or
sbb
jne
je
sbb
std
pusha
gs
inc
shl
shll
imul
sub
add
hlt
std
insb
pop
add
xor
adc
mov
ljmp
push
xor
shll
add
add
bound
fwait
mov
insb
mov
pop
gs
icebp
pop
mov
aam
push
inc
adc
cmpl
pop
mov
aam
cs
cmp
movsl
cwtl
mov
xor
daa
mov
clc
xor
outsl
arpl
in
popf
lret
and
xchg
mov
int3
stos
and
add
sbb
inc
pop
enter
fimull
sub
pop
pusha
je
sarl
jns
es
jp
push
mov
xor
xor
push
in
mov
sub
in
push
inc
fldl
inc
and
inc
push
mov
test
push
add
mov
ret
and
clc
mov
inc
mov
mov
cltd
jge
imul
sarl
mov
aas
test
mov
lods
add
inc
push
xchg
lret
and
aas
xor
cmp
popa
pop
mov
inc
pusha
movsl
push
pop
lock
jne
movsl
xchg
mov
test
test
add
shlb
leave
mov
push
cmp
aad
cmp
dec
inc
dec
les
rcr
aas
inc
sbb
lret
jp
inc
ljmp
js
iret
push
push
insl
lret
lds
loope
hlt
enter
aad
adc
test
inc
ljmp
xor
movsl
xor
inc
decl
mov
inc
in
lahf
xchg
pushf
in
or
or
inc
mov
pmaxub
test
insl
arpl
sub
cli
out
lret
mov
in
aam
mov
xor
jmp
bound
add
pop
adc
fcomi
fiadds
mov
fimuls
jo
jmp
pop
xchg
into
outsb
test
imul
test
add
rol
mov
out
imul
movsl
iret
xor
test
jnp
aaa
ret
mov
cmp
mov
jecxz
ja
cltd
insb
roll
icebp
sub
addl
test
sbb
lahf
cmpsb
movsl
loop
sbb
push
xchg
sarb
or
xor
or
sub
cmp
push
filds
xor
jle
add
dec
add
ret
mov
imul
add
inc
ss
movsl
add
inc
xchg
popf
sbb
stos
test
lret
push
ret
hlt
pop
rol
inc
or
inc
je
cmp
daa
mov
test
or
inc
movsb
rclb
enter
fisubs
ja
pusha
mov
nop
stc
dec
mov
add
xor
xchg
and
loopne
scas
xchg
lods
iret
imul
popa
add
mov
stc
bnd
inc
add
divl
out
enter
sbb
lret
addl
out
inc
xor
mov
and
lods
or
mov
call
xchg
cmc
mov
jp
xchg
sub
jne
xor
jnp
xlat
loopne
sbb
mov
bound
push
stc
jnp
xor
and
xchg
xchg
cltd
mov
std
ja
cmp
mov
addb
cwtl
cmpsl
add
or
pop
mov
xor
loopne
push
iret
rolb
addl
rcrl
inc
sbb
sub
lahf
and
ja
inc
pop
or
subb
imul
mov
xchg
adc
data16
les
push
add
insl
mov
ret
xor
sarb
cmovnp
mov
aas
sub
fs
jmp
inc
idiv
mov
inc
pop
fisttpl
insl
or
xchg
sub
popa
inc
pop
xor
inc
int
push
popf
psrad
js
imul
inc
or
inc
test
sbb
test
out
das
movsl
or
fcmovnb
or
adcl
aas
dec
test
mov
fcomps
jno
or
ljmp
mov
or
rcrb
mov
pop
jb
popa
int3
jno
add
cwtl
or
lods
test
aas
out
hlt
scas
rcl
shrb
cmp
fs
xorl
sub
mov
pop
test
aad
aam
sub
test
and
push
mov
fcmovne
dec
test
idivb
imul
fsubrs
mov
pop
out
push
lahf
cmp
cmp
jae
pop
cmpb
mov
dec
ja
or
or
mov
push
je
sub
and
pop
mov
movsl
jp
add
insl
xchg
cmc
adc
add
jle
adc
mov
and
lahf
andb
pop
adc
cmp
xor
mov
imul
jecxz
push
xor
lcall
push
loope
fdivrs
add
push
in
stos
xor
std
pop
add
cltd
fadd
sbb
and
sub
inc
dec
test
or
pop
mov
stos
and
xchg
pop
add
cmc
insb
scas
or
lods
xlat
daa
xor
outsl
popa
ja
push
cmpsl
cmp
xchg
adc
ss
ret
iret
push
insl
jo
mov
fwait
xor
addr16
xor
cltd
mov
xor
loopne
arpl
orb
addr16
xchg
or
imul
cmpb
sbbl
add
sub
and
cwtl
inc
loopne
jno
js
sbb
jmp
fldenv
leave
sbb
inc
ret
or
xor
repz
add
lea
movsl
ret
add
adcb
wrmsr
fs
sahf
lock
add
enter
dec
inc
popf
inc
arpl
adcl
mov
add
pushw
aaa
cwtl
scas
test
jp
sbb
std
andb
add
mov
fcmovbe
sub
out
insb
xchg
mov
sti
jnp
sub
mov
movsb
movsb
mov
push
sub
out
bnd
popa
int
sbb
add
je
jp
jl
int3
movsb
push
ret
jg
jmp
mov
icebp
sub
shr
cmp
adc
insl
jns
push
das
movsl
popa
xchg
push
scas
sbb
adc
inc
or
add
or
movsl
pop
adc
push
stc
imulb
mov
xchg
inc
cmp
imul
iret
mov
add
and
mov
push
nop
fldt
xchg
sub
mov
mov
testl
mov
arpl
rcl
lods
inc
loope
enter
add
and
cmp
cmp
or
inc
xor
fdivs
add
adc
sub
push
pusha
inc
fwait
mov
adcb
dec
clc
dec
jno
add
popa
popa
test
xchg
addb
loope
mov
data16
stos
sub
lock
inc
orl
mov
cmp
mov
mov
adc
arpl
add
adc
sbb
iret
ds
mov
movsb
inc
je
dec
sub
and
iret
shlb
mov
shll
pop
sahf
or
mov
bound
jnp
imul
imul
add
shrl
jecxz
sahf
push
inc
push
dec
cmpsl
ljmp
ds
sbb
inc
dec
ljmp
or
outsb
ja
xor
dec
and
inc
push
bound
out
mov
push
insl
cmpsl
mov
adc
mov
loope
pop
jge
mov
mov
lea
insb
jno
add
daa
stos
push
or
addr16
popa
mov
mov
pop
pop
insl
push
andl
movsl
out
xor
mov
fdivrs
or
mov
std
or
xor
xchg
cmpsl
sub
or
clc
call
rorb
mov
xchg
sub
dec
gs
lods
push
push
pusha
lret
push
cwtl
add
std
push
jmp
arpl
mov
stc
push
xchg
jne
ja
je
or
or
imul
xor
lock
adc
mov
outsl
pop
add
sbb
addl
sub
mov
mov
lea
sbbb
addr16
ja
movsb
push
inc
ds
jns
add
jnp
add
cmpsl
daa
and
adc
and
out
sarb
xchg
pop
pushf
sbb
dec
add
shlb
lahf
adc
aad
dec
pushf
lods
add
dec
add
test
mov
adc
ret
fdivs
loope
pusha
mov
ficoms
mov
sub
mov
pop
cmpsb
ret
pop
cmp
ds
aam
scas
in
lods
mov
jl
pop
shrb
or
mov
cli
adc
inc
sarl
mov
or
sub
popa
add
dec
mov
loope
adc
inc
divl
push
movsb
add
mov
xor
mov
imul
cwtl
divl
push
dec
mov
dec
xchg
movsb
arpl
cmc
xor
roll
sbb
inc
jl
jle
push
xchg
pop
add
insl
mov
ds
bound
int
pop
xchg
arpl
aam
and
int
add
aad
dec
push
fdivrs
fisubs
sub
mov
xchg
cmp
cmpsl
rcrl
shlb
sub
or
mov
add
lea
pop
iret
lea
add
and
fiaddl
dec
rcrl
hlt
dec
inc
cmp
adc
or
or
or
inc
insl
jecxz
mov
lcall
imul
bound
jno
xor
pop
jne
add
jnp
push
sub
adc
xlat
nop
in
inc
leave
add
dec
loope
sub
and
xor
jno
lds
push
loope
dec
fcomp
or
into
push
xor
rol
pop
add
jnp
cmpsl
adc
mov
jg
jle
and
or
add
in
cmpsb
ret
add
push
ret
imul
arpl
jmp
iret
adc
xchg
loopne
popa
jns
sub
sbb
jno
pop
sub
add
pop
rcrb
addl
pop
and
cmp
and
std
outsl
in
pop
dec
add
fs
mov
push
pop
adc
add
push
insl
mov
sbb
lahf
icebp
jmp
lods
ja
in
pop
aas
loop
mov
bound
jne
ja
pop
shll
jmp
test
cmp
add
lcall
adc
xchg
jae
push
pop
pop
sbb
jle
or
lods
cmpsb
xchg
mov
in
ja
sub
pop
lcall
xor
sub
push
inc
imul
jecxz
inc
test
loope
sarl
or
iret
icebp
inc
loop
pop
data16
dec
pop
pusha
dec
lret
sub
icebp
pop
add
xchg
fwait
mov
test
lahf
push
and
cli
and
mov
rorb
dec
or
xor
fcmovne
pop
push
icebp
icebp
adc
add
push
pop
inc
iret
ja
pop
in
inc
fimull
and
arpl
xchg
dec
fstl
les
or
inc
int3
mov
sub
fisttpll
or
dec
sub
loopne
add
xor
aad
and
pushf
and
inc
scas
jp
push
out
test
mov
nop
jge
sbbb
adc
dec
mov
insl
cmpsl
nop
mov
and
imul
mov
jle
cmpsb
xchg
lods
pop
push
jmp
loope
es
movsl
ret
xor
inc
add
out
or
sbb
adc
clc
push
lret
jnp
and
stos
and
lcall
mov
inc
push
insl
lahf
jbe
cmp
ljmp
xchg
je
outsb
xchg
movsl
adc
jno
in
out
popa
inc
mov
adc
sub
ja
rolb
lods
inc
lret
mov
xor
jle
dec
test
mov
xchg
sbb
adc
pop
and
sbb
and
jle
imul
xor
fs
mov
popa
test
insl
lods
dec
ret
and
cmpl
and
inc
mov
cmpb
nop
or
popl
cmp
outsb
sti
fwait
pop
push
add
hlt
sub
leave
add
nop
test
mov
dec
loopne
insl
testl
jp
mov
arpl
jno
setno
dec
lods
insl
in
out
mov
test
mov
jecxz
cmpsb
pop
jl
or
cmp
xchg
lods
ja
in
dec
rcrl
out
jmp
test
lods
loopne
aam
and
bound
cmc
xchg
dec
cmpsl
push
and
dec
jo
inc
test
adc
adc
mov
das
dec
addl
cmp
push
push
pop
dec
add
cmpl
sbb
xor
insb
push
in
lret
sbb
sbb
bound
ret
rorl
jb
out
inc
dec
push
fwait
adc
jae
and
jmp
pop
lret
inc
adc
aaa
jp
mov
or
adc
sub
xlat
push
lret
pop
xor
pusha
mov
mov
sbb
add
and
filds
adc
jg
add
xchg
sbb
adc
push
add
mov
test
sub
jno
outsb
addr16
pop
sbb
nop
insb
test
ja
insl
movsb
or
aas
clc
inc
js
jns
clc
sub
xlat
mov
in
sbb
cmp
es
adc
mov
or
mov
xchg
fbstp
jp
mov
sub
cmp
dec
dec
cs
jno
or
rorb
mov
sti
loop
popf
mov
push
aad
ret
test
sbbl
test
movl
fsubl
adc
push
pop
or
inc
push
lcall
cltd
cmp
faddl
adc
por
xor
loope
pop
cld
xchg
lret
call
and
ret
or
xor
xchg
sbb
xor
popf
shrl
adc
gs
or
mov
in
or
jcxz
and
adc
rol
xchg
pop
cmp
or
dec
mov
or
sub
icebp
inc
push
movsb
aam
mov
pop
or
rolb
mov
mov
stc
cmp
add
stos
insb
in
dec
or
outsl
aaa
call
pop
pop
xlat
pop
cmpsl
ror
mov
cli
xor
cs
or
cmpsl
pop
rorb
fwait
inc
add
xorb
push
loope
ljmp
or
ret
or
fistps
inc
mov
inc
or
and
mov
lds
sub
dec
dec
stos
cmp
mov
sbb
ret
movsb
add
mov
add
orb
jmp
mov
dec
sbb
xorb
jbe
ja
cmpsb
adc
xor
sbb
movsl
das
sub
push
pushf
js
xchg
scas
mov
inc
cmpsl
push
mov
jp
loopne
mov
hlt
jne
sbb
pop
xor
mov
pop
and
daa
out
xchg
jl
mov
push
xchg
push
cmp
or
pop
cmp
inc
cmc
fstps
jmp
outsb
popa
cwtl
cmp
loop
aas
ljmp
lds
cmp
nop
inc
or
aas
push
shrb
dec
xchg
movsl
sub
inc
out
sub
cmp
adc
jnp
inc
arpl
push
imul
inc
imul
inc
sub
test
push
sub
pusha
in
movsb
mov
out
add
add
push
mov
lea
scas
jno
movsl
or
in
xor
fldenv
push
add
in
sub
test
sub
lea
insl
pop
loopne
push
cmp
rorl
aaa
xchg
add
outsl
repz
imul
cwtl
outsb
xchg
popa
shrl
or
dec
adc
adc
add
outsl
xchg
add
lahf
cmp
mov
pop
jmp
repnz
mov
arpl
rolb
jecxz
rorl
cs
add
clc
cmpb
lds
loopne
mov
add
fnstenv
and
movsb
dec
ss
xchg
test
stc
and
jno
out
pusha
pop
mov
js
psllw
lret
add
cltd
sub
cmpsb
lock
rorb
lret
push
jle
insl
iret
add
fisubl
and
cmp
inc
popa
sub
sbbl
add
into
dec
mov
fisubs
and
lahf
pop
lahf
inc
mov
xchg
and
xchg
ja
mov
jae
sub
xlat
daa
inc
mov
adc
loop
and
xchg
loope
out
or
cltd
mov
sti
fsubs
mov
xorl
leave
xchg
sub
pop
cs
sbbb
test
addb
pop
adcb
insl
test
add
loopne
roll
fisubs
popa
shll
in
enter
jne
cltd
js
jbe
pop
add
lret
dec
sbb
and
push
fdivs
push
xor
mov
loopne
and
mov
dec
jmp
clc
xchg
cs
sbb
push
dec
and
mov
call
jmp
add
inc
inc
mov
and
adc
fnstsw
adc
cmp
fmulp
mov
and
lds
xlat
xlat
sbb
xchg
adc
xor
mov
and
lahf
inc
inc
imul
adc
fsubrl
mov
and
inc
test
iret
in
fsubrs
imul
insb
in
movsb
sbb
xchg
mov
mov
hlt
jae
mov
and
cs
sbb
mov
subl
mov
or
data16
mov
imul
xor
push
or
mov
mov
push
jecxz
lods
das
in
mov
pusha
xchg
cmp
sbb
into
das
aaa
adc
je
mov
cmp
push
adcb
add
fsubs
mov
stos
rorl
mov
adc
enter
or
xchg
lcall
push
aam
cli
lods
es
leave
add
fistl
pusha
repnz
dec
mov
shlb
mov
loopne
data16
push
stc
iret
ss
lds
out
cmp
test
enter
xor
outsl
or
shrb
mov
mov
loop
dec
inc
and
jns
test
sbb
shll
sub
adc
add
aam
cmpsl
mov
inc
mov
int3
lret
cmp
sbb
mov
fcmovb
jo
mov
cltd
xlat
jmp
movsb
cli
das
loop,pt
inc
push
dec
sub
pop
pop
adc
pop
inc
xor
mov
leave
shlb
test
cmp
outsb
push
add
add
es
adc
sbb
jmp
cmp
seta
sbb
aad
cmp
mov
jb
loope
push
ret
mov
dec
sub
test
js
test
xorb
jns
fisttpll
stc
aaa
sub
loopne
sub
call
xchg
imul
loope
jo
and
mov
mov
call
fs
or
and
dec
ds
jp
jl
xlat
inc
setno
aad
mov
enter
fisubl
iret
cmp
jmp
add
addr16
or
mov
sub
dec
push
and
mov
hlt
int
adc
scas
dec
insb
cmc
cmpsl
cmp
push
in
js
pop
add
pop
pop
push
icebp
fwait
jg
pop
shlb
inc
mov
add
add
pcmpgtw
je
or
pop
mov
dec
dec
les
adc
xchg
movsb
sub
movsb
js
loope
test
adc
cmpb
cmp
aas
in
loopne
xchg
fs
cmp
das
xchg
push
in
pop
dec
movb
jp
mov
cmpsl
push
and
test
call
mov
shrb
xchg
push
rorl
pop
jl
xchg
push
icebp
mov
jecxz
pop
mov
or
int
mov
xor
and
add
lahf
mov
push
in
mov
cmpsl
mov
xor
data16
nop
mov
stos
cmpsl
lock
sbb
fimull
mov
out
push
sub
adc
and
xor
lods
pop
add
loopne
xor
mov
dec
mul
andl
dec
bound
adc
sub
pop
push
pop
xor
sbb
or
cmp
test
gs
cmp
mov
or
jg
aaa
push
jmp
xchg
outsb
adc
mov
ret
scas
and
jno
test
push
ret
pop
fucomip
and
cmc
adc
out
adc
sub
sub
xchg
enter
cmpsb
fstpt
in
jnp
sbb
dec
dec
enter
add
fmuls
std
xor
push
add
sub
scas
push
xchg
and
pop
xor
push
nop
jno
in
xchg
jmp
xlat
and
jb
sarl
addb
negl
adc
cmp
and
loop
xchg
mov
xchg
pop
or
and
lock
hlt
dec
dec
and
popa
xorb
es
push
fdivr
and
mov
or
in
or
inc
dec
jae
roll
and
jae
xchg
aam
push
repz
add
dec
inc
adc
adc
jp
xchg
jg
xchg
adc
popa
stos
and
xor
dec
add
mov
mov
sbb
mov
sub
icebp
lods
adc
dec
icebp
sbb
or
ret
js
mov
cmp
pop
jge
or
ja,pt
daa
inc
and
pop
mov
sbb
test
and
jo
and
sahf
fldt
pop
xor
inc
popa
sub
mov
addb
and
nop
pop
fs
hlt
pop
js
orl
and
mov
mov
pop
in
jo
pop
mov
rolb
pop
jp
loop
iret
test
in
daa
dec
and
out
add
add
gs
add
sbb
aaa
push
push
insb
ror
push
push
xor
cld
adc
sub
jo
bound
movsb
mov
pop
sub
and
daa
test
pop
mov
shlb
sub
scas
sbb
cmp
inc
in
int3
sbb
and
imul
adc
mov
inc
imul
xlat
aas
jp
push
push
imul
cltd
inc
ja
shll
pop
push
orb
in
sub
sub
and
xchg
je
push
add
or
daa
cmpsl
popf
xchg
dec
jl
jbe
and
and
iret
mov
les
loope
add
fildll
add
add
inc
out
lock
cltd
addb
push
sbb
cwtl
ret
dec
std
pushf
movsl
addl
sub
push
mov
iret
leave
aam
cmpsl
mov
adc
sbb
push
lds
insb
sub
and
out
pop
stc
lahf
daa
ds
repz
dec
lahf
pop
ds
fcmovu
add
ss
fbstp
mov
fists
dec
push
dec
into
scas
movsb
les
inc
mov
stos
imul
sahf
popf
fistl
lret
cs
fidivl
push
pop
das
dec
fwait
dec
insl
pop
mov
out
adcl
test
jecxz
mov
pop
aaa
adc
into
shr
dec
inc
movsb
fisubl
into
add
add
sub
cltd
orb
and
ret
inc
push
jg
sbb
loope
jne
sub
mov
iret
mov
out
push
lock
popa
cmc
pop
mov
sbb
inc
addr16
ja
jb
jge
rcrb
in
dec
jge
xchg
xchg
cmp
shrb
xor
sbb
fnstenv
add
lods
test
pop
pop
push
outsl
add
rorb
jb
push
arpl
lahf
add
xchg
bound
das
xchg
jle
jnp
insl
mov
ss
stos
push
xlat
int
lret
stc
add
or
cmp
shll
ss
jg
jns
push
mov
sti
into
ds
jle
mov
xlat
into
cs
hlt
adc
jo
pop
add
sbb
cmpsb
xor
aas
pop
lret
jge
into
ret
loope
adc
ljmp
loope
pusha
insb
fucomi
inc
xchg
shrl
and
sahf
into
jo
mov
scas
xor
fs
cmp
mov
mov
xchg
test
movl
xor
cmpsb
sbb
adc
pusha
mov
gs
fsubrs
fstps
mov
adc
xchg
cmp
xor
mov
pop
cli
es
rorb
das
or
xchg
mov
das
mov
xchg
and
add
cmp
xor
cmpsb
dec
fimull
and
add
adc
or
ret
pop
addl
cmp
sub
imul
dec
ret
clc
cmpsl
mov
pop
add
imul
lret
outsb
out
aas
insl
fstl
xchg
cmp
jo
add
jno
sti
rolb
into
sub
gs
in
stos
cmp
daa
testl
fcomps
into
clc
add
dec
sbb
mov
ret
push
xchg
fwait
mov
sub
push
pop
mov
xchg
adcl
jbe
mov
dec
add
pop
rolb
jl
cmp
mov
push
loopne
pop
jnp
mov
push
mov
adc
or
jmp
sbb
idivl
addr16
movsl
pop
into
scas
xchg
xor
mov
lea
enter
dec
loopne
sub
repnz
or
lahf
lcall
inc
sub
shlb
cmp
repz
pop
cld
cmp
adc
shrl
xor
daa
xchg
js
jmp
cmp
pop
ret
mov
daa
pop
jmp
jo
or
lds
mov
inc
add
sbb
ret
gs
enter
dec
ror
jmp
pop
mov
lahf
lods
cmp
dec
nop
add
imul
mov
dec
mov
sbb
loop
addr16
add
add
sahf
das
add
out
dec
adc
sbb
add
insl
ret
xlat
cmp
xor
insl
cmp
cmp
sbb
es
xchg
cmp
adc
xor
mov
and
push
cltd
xlat
pop
add
jno
cmp
lea
ret
mov
into
adc
sbb
pop
mov
into
xchg
jp
loopne
lods
dec
arpl
adc
dec
xchg
bound
adc
mov
pop
mov
mov
imul
jno
mov
push
fisttpll
imul
or
into
or
test
add
nop
pusha
addb
jge
dec
sbb
inc
repz
adc
cmpsb
xchg
adcl
lret
pop
push
mov
insl
movsb
loope
pop
pop
call
or
and
stc
push
repz
rcll
push
dec
pop
sarl
fisubrs
add
xchg
add
clc
inc
in
sub
cltd
loop
jb
fbstp
pop
inc
aas
add
bound
add
pop
test
scas
pusha
das
cmc
in
sbb
add
fsubrl
inc
add
addl
push
cmp
pop
add
xchg
iret
add
dec
mov
sbb
or
add
loope
lods
roll
push
orb
pop
sub
add
fstps
xchg
mov
dec
shll
imulb
fcomp
add
add
or
mov
jmp
sbb
xchg
dec
dec
bsf
and
xchg
dec
test
jmp
lds
adc
das
jo
sbbl
inc
add
pop
jp
push
mov
mov
dec
mov
aaa
xor
pop
pop
cmp
mov
roll
and
cmpsl
xchg
cmp
repz
imul
flds
inc
testl
xchg
clc
cmp
sub
cmc
or
cmp
pop
mov
cltd
sbb
faddl
shll
push
sub
aaa
push
xchg
icebp
test
sbb
sub
adc
fidivrs
push
dec
stc
leave
jmp
or
ljmp
inc
loop
pop
pop
or
or
outsl
sbb
aaa
andb
mov
lods
push
add
lods
inc
sub
and
pop
pop
xchg
inc
in
pop
add
out
stos
lahf
pop
mov
cmp
adc
mov
mov
test
mov
pushf
mov
push
sbb
pop
add
jmp
in
add
add
inc
mov
loope
and
add
or
ret
fstpt
xchg
add
pop
sarb
lock
into
mov
sub
push
adc
sub
sti
push
xor
sbb
and
mov
jmp
cs
call
push
fs
dec
mov
mov
sub
in
inc
fcmovu
movb
aas
sbb
xor
sar
out
loopne
cmp
and
jg
inc
stos
ret
movsb
add
daa
dec
daa
mov
lock
test
addl
int
and
leave
jo
loope
mov
lea
repnz
xchg
into
lods
shr
xchg
filds
mov
add
pushf
iret
add
sbb
push
pop
jmp
or
jbe
adcb
aam
pop
imul
push
xchg
jmp
push
enter
mov
mov
and
data16
mov
sbb
sldt
aas
or
sbb
adc
fcoml
push
shrb
andl
jo
repnz
cmpsl
jmp
stos
lret
or
mov
movsl
test
in
dec
fsubs
xchg
add
add
out
stos
mov
add
fyl2x
push
mov
das
xor
popa
or
xlat
sbbl
mov
lods
jmp
or
or
mov
ret
gs
xchg
lock
mov
jecxz
stos
lahf
push
lds
lret
jle
inc
inc
into
cmpl
or
push
cli
jbe
cmc
fdivrl
cmpsl
movq
dec
mov
cmc
xchg
add
sbb
mov
mov
xor
in
dec
stos
dec
dec
xor
jnp
adc
out
cmpsl
pop
insl
mov
mov
fwait
out
enter
cmpsl
subl
movsl
or
and
adc
stc
dec
test
mov
xchg
push
inc
or
dec
or
inc
cmpsl
ds
push
xor
shl
or
xchg
fucomp
push
clc
dec
push
mov
in
test
cmp
adc
pop
test
aam
ds
cmp
into
mov
ss
lret
arpl
lea
das
in
lahf
aas
testl
jmp
pop
ss
clc
call
lea
lcall
xchg
push
push
push
scas
int3
call
jmp
adc
addr16
mov
les
int3
xchg
cmp
or
icebp
call
xlat
ss
fisubl
lods
rcll
push
popw
orb
popa
xchg
test
ljmp
or
inc
int3
mov
adc
xlat
loope
movsl
jno
inc
pop
mov
cmp
pushf
pop
movl
out
sbb
xor
xchg
jb
test
int3
mov
fisubl
pop
push
imul
push
inc
fldl
int
xor
addl
jno
leave
jne
sarl
fcoml
dec
pop
or
jp
leave
push
ret
insb
mov
push
mov
adcb
jg
filds
lea
or
adc
fs
int
jle
or
lcall
jnp
inc
out
pushf
test
test
cmp
xchg
mov
add
outsb
int
outsl
xor
add
js
scas
or
xlat
push
insb
shrl
pop
jb
add
aas
dec
mov
xchg
add
pop
or
mov
cmp
cmp
push
pop
jb
jns
imul
sti
ljmp
pop
push
and
sub
push
into
mul
sbb
mov
or
rclb
in
cmpsb
add
jo
dec
dec
fwait
mov
jnp
xor
bound
adc
or
call
add
pop
or
dec
into
mov
sbb
daa
inc
jo
adc
pop
lea
shll
bound
jns
call
jg
jb
lock
stc
div
sysexit
cmp
test
fiaddl
pop
or
frstor
aas
neg
add
cs
pop
dec
or
sub
jl
idivl
sbb
aam
push
ss
decl
sarb
sub
mov
ficoms
mov
push
bound
iret
mov
pop
iret
enter
mov
jmp
push
call
jno
aaa
push
lods
or
je
out
sbb
dec
adc
fwait
in
pop
popf
mov
dec
sbbl
imul
pop
imul
scas
subb
iret
pop
add
inc
popa
flds
xor
leave
loopne
sbb
dec
fsubr
aas
jmp
push
out
into
xlat
pop
scas
sbb
mov
or
push
jp
xchg
jb
cli
jecxz
pop
mov
lret
pop
sbb
imul
je
test
sti
xchg
in
adc
sbb
xor
pop
push
test
and
add
jns
pop
or
pop
mov
pop
jo
add
and
dec
pop
lret
lret
aaa
cwtl
push
inc
pop
clc
ja
jl
jb
rclb
sbb
and
push
mov
jne
push
into
or
or
jns
pop
adc
fdivl
pop
sahf
lahf
push
xchg
pop
sarb
mov
stos
push
cmp
adc
rcll
xlat
movsl
out
je
push
pop
pop
mov
adc
add
mov
add
insl
sbb
pop
out
pop
push
sbb
mov
or
mov
sti
movsl
shll
arpl
jmp
push
add
cmp
sub
sbb
pop
xor
lds
cmpl
popa
imul
lods
ficompl
stc
fisubs
xchg
or
xchg
jecxz
shrl
add
pop
pop
mov
int3
divl
sub
mov
ret
mov
adc
movhps
shlb
cmp
mov
lea
mov
mov
fnstcw
mov
sub
lcall
in
mov
or
insl
stc
outsl
adc
sbb
mov
inc
mov
and
movsb
pop
rorb
xchg
dec
ret
add
mov
push
ret
mov
lret
idivl
into
js
test
cmp
sub
sub
pop
sub
jae
ret
mov
cmp
cmpsb
notl
or
lret
sahf
ret
xchg
cmp
loopne
fisubs
jl
adc
mov
js
cmpsl
cmp
dec
mov
mov
loope
cltd
adc
push
jp
cmp
pop
idivl
jmp
daa
enter
sbb
lcall
inc
mov
xlat
femms
xchg
push
inc
add
hlt
add
imul
ja
mov
add
or
inc
push
adcb
jbe
xor
insl
push
imul
and
icebp
and
mov
sarl
or
add
or
cmc
adc
les
add
mov
adc
mov
cltd
lods
inc
and
dec
cmp
or
addb
jmp
repz
dec
cmpsb
push
loop
inc
fcoms
pop
clc
jo
xchg
add
int
hlt
ret
mov
adc
mov
sub
fldcw
or
filds
movsl
iret
and
adc
inc
xor
imul
sub
push
repz
aam
ljmp
test
lret
arpl
ret
xor
push
cmc
push
mov
xlat
mov
mov
pushf
movl
icebp
and
pusha
add
inc
and
fistl
mov
push
rcrl
jge
loope
dec
sbb
mov
sbb
dec
int
mov
jecxz
mov
add
movsb
lods
mov
stos
xchg
xlat
or
mov
mov
sub
jl
add
push
shll
mov
adc
fwait
push
adc
movsl
add
inc
movsl
xchg
mov
insl
loope
loope
enter
pop
shll
ficompl
ds
sti
in
push
dec
xor
aam
pop
shll
xchg
xchg
xchg
push
and
mov
adc
mov
add
push
popa
push
xlat
sub
cmp
mov
aam
sub
push
xor
cmc
add
jo
push
sub
sub
xchg
movsb
jae
loope
lds
mov
xchg
movsl
or
inc
sub
aaa
into
mov
lock
mov
nop
into
inc
idiv
or
adc
pop
cmp
je
lea
pusha
imul
movsl
mov
adc
iret
pop
xchg
mov
mov
test
cmpsl
add
or
sbb
sbb
popa
inc
repz
insb
fbstp
sbb
jp
xchg
ds
mov
add
cmp
into
dec
xchg
jmp
sbb
dec
cmp
addb
daa
shr
mov
inc
lahf
inc
les
fdivl
xchg
add
adc
ja
popf
jae
sbb
sbb
xorb
mull
enter
xchg
call
jno
jmp
xor
adc
pop
add
mov
adc
lahf
jmp
movsb
add
xchg
jo
jne
sbbb
or
std
mov
jb
vmread
inc
cmp
xchg
xchg
push
adc
outsb
gs
das
fsubrs
inc
pop
push
lods
bound
mov
das
inc
clc
cmp
cmpsb
jb
ficoms
mov
add
popa
adc
cmp
xor
sbb
add
and
add
and
loopne
pop
mov
fnsave
sub
es
xchg
stos
stos
mov
inc
inc
mov
shrl
pop
lcall
xchg
out
or
adcb
adcl
cmp
test
sub
and
dec
shl
fistpl
out
lds
adc
mov
dec
mov
lods
ds
mov
insb
adc
jno
inc
jge
and
push
dec
jns
sbb
add
and
sahf
pop
mov
sub
ss
pop
ffreep
pop
into
les
fldcw
sbb
pop
add
into
enter
iret
pusha
adc
and
hlt
sahf
xchg
jecxz
jae
arpl
ds
add
lcall
inc
mov
pusha
push
lret
rcll
sarl
imul
mov
into
test
or
in
gs
xchg
rolb
aaa
stc
jle
prefetchwt1
int
xorl
xlat
sbb
movq
sbb
pop
inc
fsub
testl
inc
mov
sarl
add
popa
pop
dec
xorl
movsb
inc
jno
jp
imul
mov
lock
push
icebp
jmp
sbb
leave
xchg
daa
or
shrb
aas
push
icebp
cmp
sti
sbb
sbb
and
movsl
jbe
xchg
loope
lahf
sbb
jmp
dec
repnz
add
sbb
xchg
add
sti
pop
sub
xorl
add
cmp
pop
push
cmc
and
in
sub
pop
mov
inc
jno
xchg
nop
cmp
jbe
push
roll
add
test
rcl
mov
roll
addr16
out
pop
sti
jge
mov
imul
or
pushl
iret
call
adc
in
fdiv
xor
ss
int
xor
rorl
or
jnp
inc
in
sbb
cmp
cs
ja
test
stos
or
or
jne
test
cwtl
retw
mov
insl
repnz
stos
mov
pop
incl
test
mov
inc
or
sahf
pop
mov
pushf
mov
and
enter
xchg
testl
dec
ljmp
mov
sbb
ret
insb
or
mov
sbb
ret
mov
mov
aad
pusha
in
mov
mov
into
dec
gs
std
stos
mov
daa
mov
fisttps
push
ja
ret
mov
add
or
std
sbb
ljmp
dec
fcmovnu
gs
dec
std
stos
or
lahf
adc
pop
ret
add
enter
arpl
lods
mov
xor
aaa
fmulp
adc
mov
xchg
cmp
loope
loope
mov
movl
lea
ja
pop
stos
ja
subb
mov
scas
arpl
xchg
les
loopne
imul
aaa
call
cmp
insl
mov
popf
daa
arpl
pop
xchg
jno
jnp
adc
aaa
cmp
sub
loope
add
int
adc
popf
dec
shll
pop
test
daa
gs
jb
outsl
add
lods
sub
mov
fnstcw
cmpsl
push
xor
test
push
test
add
leave
push
push
push
ficoml
les
enter
jge
pop
xlat
movsb
xchg
jbe
mov
lods
push
push
mov
call
inc
push
mov
xor
lcall
jns
out
movsl
fbld
add
daa
cli
jle
pop
xlat
add
cmpsb
mov
les
mov
cltd
pop
and
push
and
fwait
in
mov
dec
inc
mov
lahf
sbb
sbb
imul
inc
test
sahf
shlb
xchg
xor
sti
cli
pop
bound
add
fisubl
bound
inc
dec
insl
fxam
push
and
or
negb
lock
add
jae
sarb
cmp
mov
cmpb
xlat
or
lret
dec
fs
xor
fwait
pop
xchg
add
mov
inc
xor
xchg
fxch
pop
and
shr
xchg
dec
push
ds
sbb
sbb
aad
fs
and
popa
push
mov
mov
fidivrs
filds
xchg
mov
mov
or
xchg
mov
inc
scas
push
pusha
or
pop
pop
ss
push
test
aaa
in
inc
aaa
cld
pop
pop
pusha
cmp
push
mov
sahf
add
jg
test
fldenv
pusha
lret
and
aas
into
int
popf
pusha
paddusb
lea
jbe
xchg
popf
iret
pusha
out
icebp
cmp
xchg
inc
movsl
outsb
xchg
mov
dec
mov
mov
cmpl
in
lods
sbb
push
mov
jns
test
add
mov
iret
leave
push
imul
iret
lahf
stos
pusha
dec
insl
push
cmp
fwait
pop
inc
mov
push
out
sub
pop
rcr
mov
and
sub
sbb
ficompl
cs
imul
imul
and
or
fwait
mov
and
aaa
add
notb
sbb
add
pop
popa
adc
jno
inc
push
ds
daa
xchg
push
add
mov
xchg
and
dec
std
aad
dec
mov
add
add
jne
out
xor
mov
daa
sbb
and
popf
mov
aaa
sbb
fistpl
jns
aaa
jns
fwait
add
dec
or
jle
fnstsw
or
jnp
dec
push
lcall
sub
xor
or
jmp
jl
in
or
sbb
in
sbb
js
ret
dec
pop
jno
inc
sbb
mov
sbb
ds
or
adc
or
mov
or
mov
jbe
jg
sbb
or
push
shrb
out
or
aas
add
jbe
cltd
adc
cmp
and
ret
ret
cmpsl
push
inc
popf
je
call
mov
add
jb
mov
xchg
push
loope
cwtl
or
and
pop
ret
pop
or
xchg
jno
mov
pushf
push
mov
lret
or
gs
mov
repz
icebp
sub
inc
mov
in
push
inc
sbb
inc
bound
imul
and
das
sub
pop
xlat
inc
inc
roll
pop
testl
or
or
mov
sbb
inc
push
jmp
insl
push
inc
and
popa
das
sbb
out
pop
mov
adc
mov
daa
adc
jmp
js
testl
add
sub
push
imul
and
in
or
dec
cmp
cmp
cmp
and
push
add
or
imul
shll
mov
in
jmp
sub
or
add
lods
xchg
push
fstpl
and
cmpl
xlat
cmp
pop
and
adc
pop
or
imul
mull
add
and
sbb
aaa
sti
wrmsr
sub
sbb
pop
add
sbbl
push
lea
lods
fcomip
rorl
sub
ss
add
loope
jmp
pop
ljmp
add
push
outsl
jle
popa
mov
mov
insb
gs
xor
xor
mov
pushaw
popa
movb
jp
pusha
add
orl
adc
hlt
jl
aam
mov
cmp
xchg
insl
adc
xor
dec
and
test
cmp
add
inc
pop
sbb
ds
fsts
or
mov
ret
or
clc
add
aaa
andb
mov
fadds
sbb
mov
lods
ds
mov
loopne
out
test
data16
and
add
xchg
sti
pop
dec
mov
cmp
push
mov
pop
jno
add
add
fsts
dec
shll
cmp
call
mov
test
test
jne
mov
mov
lcall
sub
bound
movsl
cmp
or
add
dec
mov
push
data16
outsl
pop
and
rorb
cmp
cwtl
repnz
inc
push
add
mov
mov
sbb
xor
push
scas
jmp
mov
ss
mov
jl
out
cld
dec
andb
add
addr16
ss
hlt
add
int
mov
test
sbb
pop
aam
clc
add
mov
mov
outsl
cwtl
leave
dec
out
and
mov
add
iret
cmpl
or
sahf
inc
sub
or
mov
rolb
gs
cmp
fwait
mov
ret
add
dec
sub
cli
lahf
cmc
mov
addl
push
fisttps
or
mov
mov
aam
ss
xchg
fiadds
add
sub
das
addb
push
mov
loopne
scas
jl
mov
mov
mov
hlt
or
mov
inc
mov
sub
jns
mov
mov
pop
aas
mov
outsb
mov
cwtl
xchg
mov
inc
ret
dec
push
outsb
inc
test
mov
pop
mov
adc
lcall
insl
rorb
es
add
xchg
dec
add
imull
imulb
movsl
test
add
dec
lcall
repnz
jge
inc
push
jbe
mov
pusha
ss
flds
xchg
cli
movsl
sub
dec
inc
push
adc
in
push
test
sub
add
mov
dec
fisubl
loope
xchg
push
repz
cld
or
cmp
mov
or
into
cmp
cld
add
cmpsb
xlat
cmpsb
sahf
pop
push
xchg
mov
mov
or
aam
test
cmc
xorb
inc
mov
inc
push
test
or
cmp
addr16
fisubs
fsub
inc
xor
sahf
mov
pop
enter
or
loop
popf
mov
mov
jmp
push
les
mov
dec
movsb
ds
adcb
mov
cwtl
adc
dec
fsubrp
testb
mov
sub
sbb
lock
push
jmp
cltd
cmp
pop
popa
stos
inc
jp
sub
sub
jp
sarl
js
ficompl
xchg
mov
xchg
pop
or
push
outsl
add
and
xchg
push
nop
repz
shll
fisttpl
lds
jbe
ret
nop
pop
ja
fdiv
imulb
xchg
mov
call
sub
fbstp
lods
xor
fistpll
jbe
ret
pop
div
jbe
add
sti
cmp
test
insl
sub
out
jno
scas
jbe,pt
xorb
cmpsb
xor
mov
mov
stos
notl
push
cmp
or
mov
push
push
jo
loopne
sub
xchg
jnp
mov
call
and
stos
or
decl
push
xchg
push
push
out
or
dec
mov
lods
jecxz
loopne
xchg
inc
mov
mov
mov
ret
mov
add
xor
ret
sbb
sbbl
loopne
mov
xchg
mov
in
lret
adc
pop
push
mov
jno
push
outsb
loopne
cmc
ret
pushf
movsl
sbb
ljmp
add
xor
repnz
sub
xor
jno
sar
loop
cwtl
daa
orb
dec
dec
js
ret
jmp
adc
push
lods
cli
mov
into
cwtl
xchg
pop
xchg
call
or
mov
fptan
aad
int
pop
inc
sbb
dec
cmpsl
lods
and
outsl
shlb
cmp
mov
andb
lock
lea
lods
mov
jmp
adc
mov
inc
mov
cmpb
insb
sbb
sbb
and
pusha
dec
shlb
insb
into
push
hlt
dec
mov
pop
icebp
stos
dec
popf
jp
pop
ja
mov
jo
fidivrl
out
mov
bound
push
jl
jge
sahf
rcrb
dec
push
addl
ret
or
mov
jb
lock
int
fcoml
les
inc
sub
mov
inc
add
int
jmp
orb
mov
adc
sbb
jg
mov
and
add
push
pop
add
dec
add
inc
dec
in
pop
gs
push
lods
xchg
fnsave
push
mov
and
xchg
rcl
xorb
hlt
sbb
add
and
inc
jl
sub
dec
push
es
fisubs
in
mov
mov
mov
pop
mov
jge
ret
dec
ffree
push
mov
inc
or
je
call
mov
sub
sbb
outsl
dec
sbb
adc
in
cmpsb
or
into
xchg
lea
test
outsl
jnp
jnp
fdivs
scas
xchg
ja
in
mov
dec
jns
push
aad
cmp
movsl
aas
inc
and
lret
inc
xchg
and
pop
add
out
mov
cmp
jne
test
adc
inc
stos
loope
movsb
daa
and
les
nop
stos
and
cltd
popf
or
push
push
into
or
sbb
pop
clc
lock
jo
stos
push
dec
jns
js
mov
push
jl
call
cmpsb
shll
inc
insb
cmp
lds
adc
dec
sbb
jmp
push
sbb
repz
adc
mov
fwait
jp
jo
sub
les
xor
aam
jg
dec
fiaddl
addl
sub
enter
jnp
adc
jge
adc
mov
js
mov
cmp
cmp
mov
xlat
push
repz
and
xchg
in
jns
adc
mov
xor
add
test
xchg
jl
adc
adc
lds
mov
pop
push
in
cwtl
jno
movd
cmpsl
or
jmp
adc
dec
mov
pop
mov
mov
and
out
inc
adc
repnz
icebp
out
popf
xlat
popa
pop
mov
xchg
je
or
sub
adc
loope
pusha
cmp
addr16
outsb
mov
insb
decb
fdivl
call
and
jns
scas
sbb
pop
push
test
subb
mov
hlt
xchg
addl
adc
push
ret
or
das
fmulp
sbb
xchg
dec
dec
pop
pop
xor
mov
es
icebp
mov
int
sarb
in
mov
mov
js
cmp
mov
mov
add
mov
incb
xchg
xchg
insb
mov
pop
add
mov
sbb
pop
outsb
aad
je
add
and
mov
cli
nop
xor
pop
mov
adcb
fcoml
leave
icebp
je
adcb
roll
jbe
adc
push
clc
jle
jno
andb
sahf
pop
loope
push
clc
sub
insl
insl
and
cmp
nop
mov
nop
mov
xor
cli
mov
lea
sub
or
push
addb
push
loop
xchg
jb
push
cmp
out
adc
xor
pop
inc
jne
out
jnp
outsl
cld
popf
mov
jg
xchg
or
add
int3
cmp
jecxz
mov
mov
xchg
lds
push
mov
xor
mov
pusha
test
inc
mov
bound
test
push
hlt
lock
ktestw
aad
xchg
aam
jg
into
inc
jl
push
sub
addr16
jp,pn
sti
lock
xor
ret
es
pop
icebp
outsl
sbb
mov
or
pop
add
roll
out
jne
cmp
pop
mov
xchg
push
inc
add
fidivl
std
dec
xor
sub
out
mov
mov
fdivr
push
rcll
rclb
mov
imul
jle
push
orb
idivb
lock
cltd
insb
sub
mov
fs
mov
mov
dec
cld
loop
scas
mov
es
or
mov
add
shrb
push
mov
sub
loopne
clc
inc
in
into
and
fnstenv
das
cmp
push
mov
data16
popf
push
adc
push
mov
repz
arpl
lock
loopne
or
movsb
mov
push
clc
seto
xorl
test
js
jp
les
fisubl
and
aam
jb
sbb
sbb
lea
out
add
fwait
xchg
test
cmp
insb
test
cmp
jbe
fisubl
loop
aas
xor
add
dec
cmc
cmp
fldl
aad
cmpsb
mov
int3
shrb
fsubr
movsb
das
push
jl
fmull
jno
mov
push
std
pop
fcmovbe
outsl
subl
add
adc
das
scas
stos
push
gs
imul
or
scas
cli
sub
clc
dec
mov
int
into
lret
je
or
mov
subb
dec
sub
cmpsl
xlat
dec
inc
jo
cmp
or
stc
lret
cltd
push
or
imul
outsb
in
pop
test
mov
inc
in
push
push
ja
add
jecxz
das
scas
inc
add
cmpb
pop
roll
pushf
xchg
rorl
mov
pop
loop
hlt
xchg
in
stos
push
lcall
or
mov
fdivr
js
adc
outsl
sub
movsb
ret
sub
ret
xor
loopne
jg
rcll
out
dec
jmp
xor
or
jbe
sub
divb
ficoms
aad
jns
lahf
mov
xchg
leave
fs
push
out
push
or
sbb
test
subl
insl
cld
sub
or
scas
ss
or
mov
mov
cmp
add
data16
jb
push
or
jae
mov
cli
in
adc
push
jo
pop
push
inc
xchg
ss
cli
push
ret
pop
push
jmp
shl
pushf
mov
mov
cmp
push
clc
cmp
and
test
mov
push
sub
inc
jb
pop
push
repnz
nop
xlat
fadd
jae
xchg
mov
rcl
pop
pop
adc
inc
in
sub
mov
ljmp
push
mov
fisttpll
jbe
fdivl
outsb
push
shlb
int3
and
aam
sbb
mov
or
frstor
stos
lods
inc
js
inc
xchg
push
fdivrl
inc
and
mov
in
je
add
push
int3
pop
or
hlt
dec
into
mov
shll
into
add
inc
cmp
out
in
enter
pop
insb
add
insb
fldl
add
stos
push
and
stos
lods
xchg
adc
xchg
jne
repnz
aas
or
inc
mov
pop
jmp
loop
int3
cs
jbe
ret
xorb
mov
ja
push
shlb
loopne
imul
dec
ja
out
sub
pushf
aaa
loope
fs
or
imul
xor
xchg
cltd
cwtl
push
xor
jo
insb
xchg
sub
cmpsb
sub
pop
out
cmp
outsl
push
lods
add
mov
test
mov
pop
xchg
adc
mov
lock
adc
test
shlb
jnp
push
sbb
aad
notl
pop
inc
mov
cli
adc
xchg
xchg
mov
pushf
and
clc
adc
xchg
cwtl
add
xor
out
loope
sub
adc
cmpb
mov
xchg
enter
mov
adc
inc
inc
incl
stc
jns
mov
adc
mov
je
xchg
or
cs
push
insl
out
mov
pop
cmpl
fs
mov
addl
sub
je
call
lret
pop
jb
dec
xor
stos
lcall
fidivrs
verw
jnp
or
test
sbb
inc
ret
xchg
loope
pop
fwait
add
push
in
push
push
lea
or
mov
sub
and
cmpsb
adc
inc
sbb
push
insl
into
mov
loope
xchg
loop
dec
or
fucomp
popa
jns
dec
sub
call
jne
sub
inc
nop
add
pop
mov
addr16
push
lahf
test
ljmp
cmp
fadds
shl
cs
pop
punpckhdq
sbb
sarl
call
sub
fstpl
ljmp
xor
mov
jae
pop
push
rolb
mov
mov
pop
dec
hlt
xchg
in
xor
sub
push
test
mov
outsl
sbb
mov
sbb
push
mov
test
jecxz
cmp
add
mov
dec
jnp
lock
jl
xchg
popf
xchg
leave
push
xor
std
imul
push
xchg
outsl
ficompl
pop
ljmp
sub
icebp
push
push
stos
mov
ljmp
jno
xchg
test
clc
out
aam
aas
mov
insb
dec
aas
push
inc
xor
cli
push
xor
in
push
btc
outsb
dec
sub
sbb
pushf
push
ljmp
out
cld
andl
jbe
jnp
out
out
mov
gs
push
cli
jmp
test
jae
cmc
mov
mov
popa
loopne
sti
cld
mov
sahf
jb
push
cmp
aam
movb
test
xor
sbb
dec
scas
xlat
loope
pop
je
jl
lock
jp
lcall
andb
mov
loop
dec
rcll
sbb
sub
mov
mov
bnd
pusha
sub
push
mov
xor
mov
daa
shl
add
in
call
int3
push
insb
pusha
mov
shr
jge
or
push
cld
enter
sbb
push
lock
push
mov
sbb
cmpsb
inc
add
aam
or
or
stos
pop
jnp
mov
push
cmp
gs
pop
mov
inc
mov
hlt
lock
push
nop
out
inc
and
test
push
ss
iret
mov
in
nop
add
repz
or
sbb
xor
add
add
loopne
or
xchg
pop
shll
adc
add
pop
pop
shl
mov
mov
out
push
loope
pusha
dec
xor
push
fsubs
loopne
sbb
nop
pop
push
pop
push
out
daa
pop
pop
call
sub
clc
into
call
ret
sub
pop
push
jno
mov
ds
jns
sbb
pop
test
sub
std
and
or
jbe
rcrb
push
stos
add
mov
out
clc
add
sbb
push
loopne
jge
cmpsb
divl
xor
fwait
sbb
xchg
outsb
mov
cld
sub
or
or
xor
xor
sarb
pop
fidivs
loope
popa
inc
outsl
mov
mov
adc
rcl
mov
flds
mov
mov
sub
data16
inc
imul
fdivs
data16
inc
add
mov
pop
cli
or
mov
push
std
in
jne
stos
lods
shrb
mov
clc
mov
lret
add
mov
stos
xor
xchg
fmull
lods
cmp
shl
cmp
shlb
cmp
aam
push
js
scas
mov
push
push
mov
out
int
push
or
gs
or
pop
or
fwait
dec
xor
xor
sti
add
scas
mov
pushf
fst
mov
mov
insl
lods
add
xor
push
lahf
sub
jg
mov
fmuls
sahf
xor
lcall
stos
or
shll
jge
inc
mov
cmp
lcall
sub
jae
push
or
mov
push
mov
dec
jecxz
inc
movb
inc
dec
aas
ret
mov
stos
test
cmp
adc
mov
idivb
mov
mov
mov
pusha
adc
xlat
and
mov
cld
fidivl
and
insl
mov
ds
fwait
shll
andl
push
es
adc
push
cmpsb
mov
mov
int3
mov
orl
xor
into
or
xor
cmp
mov
push
lds
sub
mov
and
dec
clc
leave
movsb
ret
pop
inc
cli
fdivrs
and
push
lock
sbb
xchg
cmp
xchg
xor
in
mov
test
pushf
fwait
cli
roll
fidivs
jmp
inc
push
push
out
xchg
out
xchg
adc
jno
pushf
pop
lods
sbb
pop
sub
lret
or
pop
sbb
in
clc
ds
add
mov
inc
mov
mov
cwtl
sar
into
fidivs
add
push
out
mov
xor
call
dec
jb
loopne
das
cmc
cmpsl
les
add
add
adc
jbe
es
pop
mov
adc
rcrb
jo
sub
mov
jb
mov
push
push
lock
lahf
rol
or
jnp
push
test
leave
mov
mov
bound
test
pop
pop
loop
test
lods
idivb
sbb
in
test
std
call
mov
ljmp
cmp
lods
mov
loopne
push
movsb
cs
push
add
das
xor
jo
orb
int3
push
add
fstpt
pop
cmp
cmc
cld
mov
add
push
pop
insl
in
cmc
loopne
jbe
mov
in
add
aad
mov
out
aaa
jne,pt
int
push
or
xchg
loop
xchg
arpl
lahf
jae
and
ret
cmpsb
es
in
xchg
mov
add
add
out
loopne
fisubs
mov
sub
push
sub
xor
jge
ja
js
nop
pushf
jbe
mov
pusha
pop
outsb
mov
xchg
push
jl
jmp
push
sbb
hlt
and
add
adc
add
mov
ds
pop
pop
stos
mov
cs
mov
and
lea
loopne
int3
fisubl
insl
lods
test
xor
ja
mov
xchg
lret
int
push
mov
cs
add
sti
dec
jl
jae
jnp
je
sti
out
push
and
mov
dec
outsl
inc
and
jne
inc
pop
xor
or
sar
rcrl
jle
pop
rolb
dec
lea
xor
fistpl
jbe
test
or
notb
pop
xchg
rcll
jne
rcrb
call
adc
push
aaa
dec
add
data16
mov
cmp
movsl
dec
cmp
in
pushl
inc
into
dec
pop
stos
cmpb
cmp
jbe
xchg
mov
loopne
lret
rol
faddl
or
push
idivb
scas
ret
mov
adc
out
cmpl
pushf
arpl
test
test
aas
into
pop
cwtl
cmp
fldt
ss
adc
jmp
lods
lock
xor
push
mov
ds
push
cmc
ja
pop
icebp
scas
rol
add
add
lds
jne
add
shl
xchg
mov
es
mov
mov
cltd
sub
fnsave
inc
or
xchg
adc
sub
and
aam
jmp
inc
leave
aas
sbbb
cmp
sbb
push
add
imulb
mov
dec
das
in
mov
jmp
ja
pop
lods
mov
mov
mov
mov
inc
sub
xor
mov
mov
fisubrs
and
push
pop
jbe
or
es
frndint
xchg
inc
fisubrs
add
andl
cmp
fldt
adc
add
jmp
xor
mov
pop
sub
and
into
mov
icebp
mov
rcrl
in
cmp
add
xor
loop
cmp
clc
or
mov
jl
mov
pop
scas
bound
add
mov
dec
lret
pop
dec
insb
inc
cmp
add
push
mov
cmp
fwait
jg
inc
out
jg
add
mov
xchg
cmp
stos
jp
or
lcall
mov
add
dec
popa
cmp
xchg
mov
add
or
xchg
insb
cmp
or
fildll
test
push
decl
push
xor
jo
or
jbe
out
jp
jnp
mov
ja
cld
cmp
push
jge
aam
lret
repz
aaa
movsb
pop
lods
xchg
test
sbb
push
pop
rcl
idivl
adc
mov
das
jge
jp
push
pusha
mov
mov
addl
push
pop
sub
ljmp
shlb
sbb
and
cmc
xor
xchg
nop
cli
shlb
test
loopne
ljmp
mov
lret
adc
outsl
fcompl
adc
clc
rorl
nop
stc
imul
push
xor
mov
or
sbb
aas
out
loopne
aad
pop
and
aas
out
cmpsb
and
pop
cmp
call
ror
nop
and
xchg
sahf
push
add
push
mov
sub
test
stos
cmp
pushf
jno
xor
lock
add
pop
push
sbb
sarb
loop
mov
cmp
sbb
jp
inc
dec
add
mov
sbb
add
dec
xor
mov
popa
cli
loop
jnp
in
xor
mov
into
push
sbb
mov
add
add
fsubs
adc
ret
scas
xor
xor
cli
sbb
push
pop
dec
shrb
outsb
inc
sub
hlt
dec
mov
sub
mov
lds
ftst
inc
inc
fnstenv
enter
add
lahf
cmp
pop
push
xchg
and
loop
addr16
test
lods
fsubr
insb
push
xchg
or
cmp
adc
lret
jo
leave
test
jo
int
add
loopne
jmp
subl
add
jb
movsl
and
adc
call
xchg
inc
or
xchg
dec
sbb
in
stc
test
imul
mov
into
xor
xor
or
push
adc
xor
xchg
jle
loop
mov
push
mov
sahf
call
cli
xchg
das
or
loopne
repnz
add
jle
nop
mov
shrb
mov
fistps
add
cmp
mov
jl
jbe
ss
popa
rcll
mov
push
popa
adc
sarb
and
rclb
pop
sbb
ds
std
and
roll
and
imul
in
sub
xchg
sbb
call
add
data16
add
out
sbb
sub
stc
sub
out
fldt
dec
sub
add
sub
daa
scas
cmpsb
or
mov
jle
dec
ficompl
sbb
or
push
and
cmp
dec
xchg
test
mov
push
clc
push
out
push
xor
xchg
and
in
add
mov
out
add
pushl
imul
cmp
push
sub
jmp
popa
push
pop
out
incl
std
mov
mov
lret
adc
inc
adc
repz
inc
dec
pop
and
inc
fbstp
ljmp
adc
cmp
add
fidivl
mov
add
lods
ret
nop
out
lods
push
push
cltd
jp
test
push
or
push
fdivs
push
and
mov
scas
cmpsb
add
adc
xchg
cmp
mov
aaa
sbb
add
call
ss
mov
shr
add
xchg
xchg
sub
adc
xlat
bound
pushf
out
inc
mov
push
lock
xorb
push
in
mov
xlat
lahf
push
aaa
bound
push
mov
gs
lcall
hlt
orb
lret
mov
inc
sbb
adc
or
adc
add
cmp
push
jl
xchg
pop
mov
test
add
dec
adc
jg
mov
fnsave
or
mov
loop
daa
jnp
and
fimuls
and
sub
push
aas
mov
pop
jle
jle
mov
test
out
cwtl
xor
out
jno
mov
inc
and
loop
lock
test
and
outsb
mov
scas
iret
push
sub
ret
or
push
rol
xor
fidivs
inc
cmp
sahf
imulb
call
stos
sub
xor
rolb
js
push
jno
lods
cmpl
push
jo
dec
rcl
mov
cmpsb
ljmp
adc
sahf
xor
ret
stos
inc
insb
ljmp
das
cmp
in
xor
cmp
out
dec
or
xor
int3
pop
sub
enter
push
mov
in
and
jae
sti
test
sbb
inc
jbe
xor
popa
lock
push
xor
inc
xor
sbb
pop
insl
dec
sbb
mov
loop
mov
or
cmp
pop
cwtl
movsb
ja
mov
and
mov
adc
sub
das
movsb
mov
push
dec
mov
and
ffreep
xor
nop
in
xor
push
inc
mov
xchg
nop
mov
dec
cmp
jo
adc
push
stos
sbb
jae
test
ret
pop
movsl
mov
es
pop
fnsave
shrl
fildll
lcall
xor
jnp
or
cs
stos
testl
bound
gs
outsb
fwait
xchg
mov
pop
mov
cmc
xor
pusha
sbb
fwait
imul
js
mov
insb
lods
incl
mov
loop
sub
hlt
push
pushf
mov
fimuls
mov
pushl
pop
fimuls
out
fstps
imul
out
adc
aaa
imul
mov
mov
jno
and
inc
sbb
and
jecxz
mov
out
stos
mov
ret
sub
stos
add
cmp
mov
inc
sbb
mov
test
adc
cld
add
pop
cmc
std
add
xor
dec
or
scas
sbb
psraw
jb
inc
adc
enter
scas
adc
mov
adc
xor
fidivrs
pop
and
pusha
test
out
gs
rcl
jle
es
test
sbb
xchg
or
xchg
inc
aaa
mov
jo
data16
stos
or
inc
movl
out
in
lods
pop
ds
insb
pop
ljmp
sub
cmpsl
mov
adc
xchg
call
cmp
test
clc
cmp
mov
cltd
fadds
decb
gs
xchg
fisttpll
mov
insb
fs
pop
outsl
mov
scas
ss
cwtl
jg
pop
push
js
enter
fwait
and
cmc
lock
pop
push
or
xor
sub
popa
or
sub
mov
adc
dec
mov
lcall
js
pop
adcb
pushf
mov
pop
test
je
add
inc
jno
mov
xchg
mov
cmp
xchg
jns
mov
arpl
mov
stos
hlt
add
xor
rcrl
sub
hlt
inc
sub
dec
rclb
lea
test
loop
inc
orb
inc
loop
ljmp
out
ss
push
mov
add
insb
mov
pop
pop
mov
lds
ret
mov
xor
jnp
ja
sbb
popa
cmc
jb
push
in
pop
fnstsw
mov
fsubrl
lret
loop
pop
xchg
cmp
movsl
adc
cmpsl
pop
push
sbb
je
ds
inc
and
or
pop
ss
pop
pop
pop
mov
and
imul
int3
arpl
mov
les
jle
mov
lods
push
add
sbb
ret
scas
push
fisubrs
mov
sahf
jmp
mov
enter
sub
mov
inc
aaa
mov
cmp
or
or
pop
push
lods
push
jle
adc
lds
mov
dec
ljmp
mov
inc
out
and
or
sti
mov
push
testl
add
inc
pop
mov
add
aad
mov
jo
ficomps
ljmp
push
outsl
mov
sub
fsubr
fwait
adc
mov
div
inc
jmp
or
orb
scas
test
jne
scas
int
stc
rolb
pop
sbb
and
sarb
sub
jo
xor
push
push
jbe
inc
adc
insb
lcall
das
or
aaa
loopne
xor
aam
pop
or
or
or
out
sti
mov
jnp
dec
push
pop
sub
scas
adcl
sub
stos
add
rorl
adc
or
mov
daa
fwait
push
jmp
pop
xlat
jge
pushl
ret
inc
lret
inc
shl
adc
enter
or
xor
cmp
add
or
aas
addr16
dec
ja
and
mov
jbe
cmp
or
or
jnp
push
sub
shll
or
inc
lea
notl
fdivrl
je
add
rorb
shlb
jnp
sub
mov
or
lret
mov
and
pop
mov
fwait
jg
inc
sbb
pop
in
out
jmp
mov
sub
xor
jge
xchg
xchg
xchg
sub
mov
repz
std
mov
pop
shrl
and
jmp
into
fldt
sub
adc
pop
or
out
cmp
sbb
divl
aaa
jg
inc
outsl
push
and
sbb
and
outsb
int
sbb
mov
mov
adc
push
fisttpll
outsl
and
popa
aad
pop
and
out
jmp
xchg
out
fst
sbb
xlat
daa
fdivrl
sub
pop
addr16
pop
jnp
jae
or
jo
mov
aaa
jmp
push
jns
xlat
sbb
or
lahf
mov
ja
mov
imul
jge
cs
or
sti
and
adc
dec
pop
ficompl
ficompl
adc
out
jo
aaa
push
inc
push
fiaddl
or
jecxz
call
or
jo
loop
dec
divl
or
fcmovne
add
xor
daa
pop
and
loop
jnp
mov
jecxz
and
ret
frstor
jne
fsubs
shlb
or
in
inc
dec
jae
loopne
aaa
mov
scas
jmp
xchg
xor
xchg
xlat
adc
sbb
addr16
mov
sub
inc
out
or
mov
popl
xchg
fwait
jmp
sti
sub
jl
adc
das
or
mov
rcll
movsb
dec
push
push
sti
fs
jbe
testl
and
xchg
jmp
mov
jns
sbb
and
testb
ds
adc
and
in
dec
or
or
mov
decl
xlat
adc
xchg
dec
pop
or
or
and
cmpsl
xor
jae
inc
push
push
add
push
popf
dec
cmpsl
scas
ficoml
xchg
adc
shrb
nop
jne
repz
pop
fcmovnbe
pop
cwtl
cmp
and
arpl
out
jno
pop
ss
inc
sub
scas
pop
mov
xchg
pop
jecxz
sti
jne
jbe
and
cmp
jbe
inc
xor
and
mov
or
sti
sbb
jnp
dec
jl
and
stos
sub
mov
and
paddusw
out
push
and
xor
cmpl
fisttps
sub
out
loopne
cmp
pop
cs
adc
in
pop
jl
and
mov
shll
add
or
and
push
xchg
cmpsl
call
xor
mov
loopne
xchg
pop
das
add
test
xlat
sti
pop
cmpsl
inc
loopne
mov
and
inc
shrl
add
and
aaa
jnp
ret
or
jb
pop
or
imul
dec
cs
stos
or
mov
nop
xchg
outsl
xchg
and
adc
outsl
test
lret
fisttps
sub
xor
xchg
or
dec
lret
mov
inc
push
sub
mov
mov
dec
shll
and
xor
sub
adc
pop
fwait
jge
daa
cvtpi2ps
aaa
ja
dec
or
jge
mov
or
xchg
test
sub
dec
xlat
sub
add
inc
pop
sub
filds
out
pushf
or
pop
xchg
ljmp
mov
mov
pop
mov
sub
xlat
jo
xchg
jnp
enter
mov
sub
or
iret
or
or
or
mov
fmul
or
sub
xchg
cwtl
rcr
addr16
fisttpl
jne
jae
fstl
cmp
cmpsb
cmp
dec
test
sub
cmp
mov
ljmp
xchg
mov
pop
daa
jbe
je
and
aaa
test
add
jmp
adc
xor
add
cs
pop
repnz
daa
and
cli
mov
or
fnstsw
mov
cltd
sbb
fcmovne
int
jbe
adc
jmp
inc
subl
rcrl
add
push
std
je
aam
dec
jg
popa
dec
jle
ja
testl
sbb
ret
daa
and
sahf
jg
fbstp
xchg
cmpb
mov
or
imul
mov
sbb
or
xlat
loop
andb
inc
and
in
xor
dec
or
cmp
xor
or
in
into
dec
xlat
mov
fiaddl
sbb
pop
cmpb
out
repnz
das
clc
pop
inc
fdivl
dec
inc
inc
and
and
mov
out
pop
pop
or
add
pop
and
or
dec
test
or
inc
in
sub
adc
test
ds
pop
in
pop
adc
jg
push
lds
rcl
mov
mov
add
ss
outsb
int3
and
add
movb
fcoml
cmp
push
mov
sub
leave
popa
out
cmp
fldln2
ljmp
mov
lock
and
xor
subb
inc
xor
insl
mov
push
mov
push
xor
repnz
mov
inc
out
push
dec
mov
popf
add
ljmp
lds
fstpt
mov
mov
adc
test
nop
pop
sahf
ficoms
mov
jbe
adc
inc
cmpsl
inc
mov
adc
inc
ds
inc
or
mov
nop
daa
sbb
push
and
adc
add
orl
ret
xor
popa
leave
js
xchg
enter
xor
add
jns
loope
xchg
add
aad
mov
mov
loope
sarl
dec
subl
add
add
sbb
sub
in
push
sub
pop
adc
cmp
fbstp
ja
in
mov
push
imul
test
nop
cmp
mov
orl
scas
ja
sub
push
fidivs
movsb
inc
mov
lds
or
jmp
aas
syscall
out
adc
gs
mov
cmpsl
jne,pn
test
add
mov
lea
mov
pop
ds
insl
cmp
por
insl
jo
out
jmp
pop
cmc
cmpsb
xchg
in
mov
or
mov
arpl
jne
xor
xchg
je
jge
scas
jnp
insl
jg
mov
dec
minps
sbb
jmp
lock
addr16
ret
shll
scas
fwait
cmp
pop
and
das
cmp
mov
int
sbb
popf
mov
popa
add
xor
lea
repnz
cmp
dec
outsb
jge
not
icebp
push
jno
or
sub
push
adc
ret
sub
ljmp
adc
sbb
bound
mov
daa
or
mov
pop
push
inc
and
xor
xor
loope
sbb
ds
fldenv
jae
jo
fwait
mov
push
add
or
sbb
es
fwait
icebp
inc
jns
mov
ljmp
mov
aaa
cmp
fwait
mov
xor
aaa
and
push
adc
sub
arpl
and
test
jmp
fcoml
xlat
int
mov
imull
fwait
sub
mov
ja
push
jl
add
out
in
pop
inc
adcb
sub
pop
mov
mov
dec
xor
data16
in
inc
jecxz
xchg
pop
out
push
add
icebp
sub
cmp
cmp
out
sti
lds
mov
lret
add
jmp
and
movsl
mov
outsl
and
jno
push
arpl
lahf
jg
das
and
stos
add
outsl
aaa
sar
push
xor
sub
jae
push
cmpsl
hlt
sub
lret
xor
call
sbb
add
and
fadds
pop
xorb
dec
daa
repz
ja
and
pop
adc
fwait
jge
gs
inc
and
pop
rolb
sub
jmp
outsl
cmp
xor
xor
cmp
movsl
jp
sub
sbb
pop
call
pop
push
sub
cmp
adc
sarl
mov
outsl
mov
imul
insl
xor
jnp
incl
jno
fistl
inc
dec
das
and
imul
jg
jnp
sti
or
jnp
das
das
adc
sub
push
or
jns
into
push
subl
pop
sub
movsb
mov
out
out
pop
push
pop
enter
in
decb
adc
xlat
cmp
aaa
aaa
popa
jne
insl
pop
lret
push
insb
addl
dec
and
sub
cmp
aas
pcmpeqb
imull
xor
xor
testl
testl
xor
mov
sti
outsb
xchg
jb
and
in
mov
push
pop
movsl
cmpsl
dec
adc
aas
mov
or
mov
das
jb
stos
mov
sbb
xlat
imul
outsb
enter
jno
sahf
ljmp
loop
inc
push
bound
cs
pop
ret
popa
sub
sahf
cmp
fbstp
inc
cltd
jge
cmp
in
add
roll
xchg
push
push
fidivrs
bound
add
cmp
cmc
add
pop
jbe
cmp
cmp
adc
add
jg
cmpsb
inc
sbb
mov
movsb
scas
icebp
daa
aad
jbe
loope
aaa
sti
call
push
xchg
mov
pop
sub
add
int
jo
mov
add
fdivs
cmp
lahf
pop
mov
push
or
or
add
add
arpl
jnp
and
push
daa
pop
pop
jns
adc
xchg
xchg
dec
add
jl
adc
adc
mov
dec
outsl
in
scas
fs
shll
jnp
mov
call
loopne
sub
cmp
ja
push
jb
pop
sti
shll
jge,pn
jne
dec
mov
add
mov
or
pop
xchg
adc
mov
pop
test
insl
sti
in
repnz
call
push
jecxz
sub
inc
or
push
mov
mov
mov
mov
dec
test
push
cmc
dec
xor
cmc
push
push
mov
pop
subl
daa
in
loope
mov
jb
inc
push
pop
and
stos
push
jl
xlat
lods
or
pop
js
aad
outsb
les
mov
push
fnsave
adc
push
inc
aas
es
imul
pop
add
shll
outsl
sti
cmp
or
pop
addl
jle
add
ja
inc
subb
roll
push
subl
ret
addl
sub
push
sbb
jnp
push
sbb
jne
iret
mov
scas
cmp
pop
pop
jnp
hlt
out
add
hlt
popa
inc
mov
push
push
jecxz
xchg
mov
xorb
sbb
daa
fsubrs
fs
jo
lret
arpl
lret
sti
inc
sbb
push
add
dec
mov
dec
lods
pop
cmpsl
popa
adc
shrb
mov
mov
jp
loopne
fcomip
lahf
xchg
imul
ret
mov
xchg
stc
js
jmp
dec
xchg
sbb
out
repnz
inc
inc
sbb
mov
mov
xor
mov
das
cmpsl
call
rep
sbb
and
pop
add
or
and
pop
ds
xchg
mov
or
push
adc
xor
sarl
mov
ja
sarl
stc
dec
popa
pop
jb
es
repz
pop
jns
pop
add
pop
inc
fldenv
jbe
adc
mov
imul
lahf
sub
out
mov
sbb
lea
frstor
ret
xchg
sbb
mov
add
sbb
in
and
in
out
hlt
cmp
lods
sti
lock
push
fists
fld
xchg
mov
out
fidivrs
shrb
push
adc
ja
filds
cmp
pop
push
adc
xor
mov
jnp
popa
dec
cmp
dec
aaa
cmp
push
add
dec
mov
lret
dec
and
notl
dec
add
inc
daa
mov
test
sub
push
loope
cwtl
jge
dec
lahf
add
dec
dec
aad
dec
popf
push
and
adc
fstpl
mov
es
in
cs
adc
dec
cltd
fwait
xor
add
stos
xchg
cmpsb
pop
das
xchg
movsb
xchg
out
in
or
out
cs
inc
imulb
adc
mov
pop
out
pop
dec
lods
ja
jne
aam
testl
xor
mov
icebp
dec
xor
mov
dec
pusha
add
adc
sbb
sub
mov
cmp
xchg
sub
ret
add
lods
loope
aaa
fisubs
adc
or
push
stc
push
fistpll
faddl
ret
add
icebp
out
adc
push
pop
jg
cmp
ret
shlb
sti
fistl
outsl
or
mov
iret
jo
and
adc
sti
push
mov
push
and
lds
sbb
cmp
adc
xchg
adcl
jns
xor
rcl
mov
sub
add
dec
pop
mov
pusha
mov
cmpsl
lods
mov
scas
sbb
ret
mov
and
lods
jnp
test
das
jg
jp
mov
and
hlt
ljmp
fnstenv
sub
lds
mov
sbb
rcll
pop
dec
mov
push
pcmpgtb
cmp
jmp
jg
xchg
fs
sti
xorb
xchg
jno
fists
data16
out
out
loopne
fnsave
jns
out
sbb
dec
ljmp
xchg
add
scas
push
out
mov
gs
jp
xchg
cmp
push
mov
decl
pop
cmp
fwait
mov
mov
or
mov
pop
jg
mov
xchg
test
xchg
mov
jle
out
outsl
xor
jmp
scas
push
pop
sub
lea
jmp
test
stc
jae
and
mov
mov
pop
repz
add
adc
sub
xchg
xorb
or
or
mov
or
test
or
or
pop
js
sbb
pop
scas
mov
cmpsl
xor
jecxz
cmp
mov
xchg
add
out
es
dec
aad
cmp
mov
andl
test
jg
inc
ss
inc
sbb
in
mov
adc
mov
movsb
insb
pusha
aam
iret
jl
inc
mov
push
jno
add
pop
stos
xchg
repz
xchg
repz
add
repz
test
xchg
sub
adc
int
xchg
dec
aas
rorb
fmull
mov
icebp
mov
add
movsb
and
mov
lret
in
lret
adc
sub
add
push
pop
xor
adc
lds
loop
cmp
std
inc
ds
cmpsb
xchg
aaa
inc
filds
shll
or
cmc
cmp
push
pop
lods
jge
fs
mov
dec
js
aas
ja
xor
pushf
ja
mov
mov
inc
mov
lds
and
dec
aaa
ja
lea
insl
pop
jns
ror
fldenv
adc
xchg
pop
arpl
push
inc
sub
popl
daa
movl
and
lret
fwait
lods
loop
jecxz
repz
jle
out
mov
arpl
aas
jmp
pop
add
or
lea
outsb
mov
je
lret
adc
inc
or
lods
popa
cld
je
dec
add
sarl
jmp
add
add
sbb
and
sbb
xchg
in
push
mov
jnp
jb
addr16
leave
push
mov
loope
push
dec
push
ficomps
jo
add
pop
out
imul
pop
mov
aad
in
cld
icebp
flds
or
sbbb
fwait
mov
push
xchg
lcall
sbb
rcrl
mov
push
fcomi
xor
or
loopne
dec
shrl
out
test
push
adc
inc
fwait
jbe
stos
cwtl
test
or
sti
xchg
inc
cmp
mov
fsub
adc
mov
cmc
add
sbbl
jns
getsec
add
xchg
mov
or
test
mov
push
lahf
mov
orl
cmp
mov
pop
sub
pop
adc
enter
orl
and
test
pop
push
stos
or
adc
xchg
push
jmp
mov
jl
stos
xor
sti
icebp
fisubl
pop
adc
popa
jnp
stc
jmp
xchg
jnp
mov
push
pop
xchg
jne
sti
cmp
loop
pop
or
daa
popf
xlat
mov
xchg
and
xchg
aaa
loopne
test
scas
inc
lds
imull
add
xlat
add
stos
adcl
mov
aad
ds
syscall
add
imul
sbb
loop
test
sub
push
push
fbld
es
cli
push
sbb
cli
xchg
jns
dec
or
pop
push
fs
dec
outsl
and
sbb
ret
sarl
mov
leave
mov
sbb
mov
in
outsb
mov
and
sbb
and
daa
jg
loop
mov
sbb
mul
loope
mov
loop
and
ljmp
in
ret
push
jmp
fwait
cli
pop
mov
stc
test
movsl
call
fs
xchg
mov
push
daa
andl
enter
xchg
adc
xor
fistps
stc
push
fadds
dec
pushf
addr16
add
jg
add
inc
pop
fcoms
es
ljmp
pop
pop
dec
mov
xor
mov
scas
mov
dec
cmp
adc
imul
cmp
xor
inc
std
ja
mov
insb
xchg
sti
daa
inc
mov
or
aaa
inc
test
mov
push
jo
push
jae
jnp
or
push
lods
xor
popa
and
movsb
js
mov
push
jo
lret
aad
sbb
stc
sahf
fcmovnb
xor
cmp
in
xor
repz
cli
dec
iret
fiaddl
jl
cmp
sbb
clc
faddp
xchg
add
clc
imull
xor
xchg
test
es
insl
aad
sub
mov
adc
ss
bound
pop
push
inc
xor
jmp
add
scas
sbb
mov
adc
jg
sub
in
pusha
add
scas
pop
pop
sub
pop
test
movsl
mov
add
and
mov
ja
mov
pop
repz
inc
ja
adc
or
out
inc
out
stos
adc
sub
jbe
daa
lret
inc
inc
es
dec
adc
push
lods
adc
add
rcrl
ficoms
or
pop
adc
or
add
out
dec
lock
rclb
pop
xchg
rcrb
subl
add
sbb
adc
jg
cwtl
rorb
aas
adc
in
inc
mov
mov
or
aaa
or
push
jmp
cmpl
mov
leave
mov
pop
cmp
shlb
xchg
movsl
insl
xchg
adc
xor
sub
mov
inc
dec
push
out
out
inc
lds
out
add
adc
pop
jae
or
xchg
call
sbb
adc
outsb
divb
inc
lods
push
mov
ja
dec
outsl
adc
dec
mov
pop
dec
lods
loopne
and
fstp
imul
xor
push
leave
mov
add
and
inc
iret
pop
js
add
jns
mov
sbb
test
fdivs
jb
sbb
ret
fists
add
xchg
mov
push
sub
lea
outsl
and
xchg
inc
imul
iret
xchg
aaa
fnstsw
jno
push
adc
xchg
mov
out
fnstsw
rcll
or
orl
xlat
aad
push
lret
sbb
push
xchg
iret
enter
inc
test
mov
dec
sbb
or
jb
mov
xchg
jge
add
xor
ja
mov
sbb
sbb
into
hlt
push
ja
stos
xchg
mov
inc
adc
and
push
mov
sub
add
aam
or
ret
jnp
jge
in
cmpsl
lock
mov
and
and
mov
test
cmpsb
xchg
imul
inc
pop
cld
xchg
xor
lcall
loope
add
cltd
inc
les
xorps
out
dec
out
and
jno
lret
das
cld
popa
insl
adc
mov
das
daa
lret
sub
mov
das
les
mov
dec
xor
mov
loope
fisttpll
add
pop
adc
sbb
scas
arpl
test
sub
mov
add
xchg
mov
cmpsl
stos
and
sbb
stc
sbb
or
icebp
insl
fisttpl
push
add
sbb
jecxz
fincstp
lock
and
jnp
xchg
es
aas
sbb
xor
ret
pop
mov
rorl
mull
jnp
push
or
or
push
daa
rol
cmpsl
scas
or
sbb
aas
jno
adc
add
dec
inc
or
pop
pop
xchg
out
fidivs
or
popf
pop
jnp
sub
int
mov
push
jp
pop
outsl
stos
mov
cmp
sarb
lahf
mov
cmp
leave
mov
add
mov
and
mov
push
inc
sbb
mov
je
ret
adc
aas
das
lret
mov
sbb
orb
jns
xor
test
pop
aas
and
rcl
cmp
sbb
imul
fldt
mov
xchg
or
adc
es
out
test
inc
jo
xlat
sti
mov
movsb
dec
hlt
retw
xlat
cmp
js
cmp
cmpsl
icebp
iret
pop
sbb
mov
inc
add
xchg
aas
out
dec
sbb
test
or
mov
fwait
mov
push
insl
sbb
mov
test
std
or
ror
cmp
int
mov
jecxz
xchg
arpl
cmp
mov
push
push
stos
adc
aas
sbb
lahf
int3
mov
popa
adc
iret
and
aaa
add
add
mov
and
sbb
mov
inc
sbb
pop
xor
fstps
dec
sbb
in
es
sub
lcall
mov
push
xchg
out
xorl
push
and
mov
fldz
xor
cmc
jmp
lods
adc
out
pushl
fldt
sbb
or
mov
mov
add
shlb
shl
push
adc
adc
sbb
mov
add
jae
rcl
rcll
sub
pusha
or
rcr
arpl
mov
daa
xchg
sbb
push
xchg
sbb
dec
mov
dec
sub
insl
and
xchg
or
xor
andl
sbb
jmp
cmp
jae
je
jmp
adc
icebp
pop
jmp
sbbl
int
fnstcw
cs
and
ljmp
ljmp
test
mov
dec
pushf
rorl
iret
daa
adc
aad
sbb
imul
jnp
rcll
jecxz
inc
adc
ljmp
fldt
addr16
cmpsl
mov
or
addr16
cs
mov
xorl
or
jg
test
or
jl
pop
scas
xchg
jnp
mov
rorl
add
push
mov
cmp
mov
scas
push
adc
into
sbb
push
sub
sub
ficompl
iret
mov
inc
int
mov
jecxz
push
xchg
cs
out
ljmp
and
fiaddl
out
inc
in
or
inc
jle
jecxz
or
jnp
jp
ret
jns
test
sti
inc
negl
lds
gs
pop
aad
stos
pop
add
iret
push
jecxz
cmp
ljmp
xchg
xor
imul
ret
add
repz
into
mov
loope
out
outsl
in
inc
cmp
mov
push
mov
push
leave
outsl
imul
fildl
test
ficomps
leave
aaa
pop
pop
jno
shll
pop
mov
fs
adc
mov
mov
or
scas
mov
int
xor
or
insl
pop
mov
int
add
or
mov
sbbb
jg
int
andb
test
pop
adc
testl
fcomps
mov
sbb
xor
push
push
aad
rcr
push
mov
lea
mov
aad
arpl
fwait
add
divl
and
sbb
inc
cwtl
mov
int3
insl
fstpt
push
add
dec
mov
jmp
mov
js
pop
cs
loope
int3
pop
ffreep
sub
lods
and
arpl
pop
xchg
sbb
rolb
jnp
push
xor
mov
jns
dec
ret
xor
andl
cltd
das
cmc
xorl
xchg
jg
stos
push
cmp
push
lret
mov
in
ret
shl
cmc
cli
and
aam
popf
int3
emms
dec
or
sbb
lods
mov
nop
out
sub
lea
out
mov
sti
inc
cmp
in
lods
add
jmp
and
push
movsl
sub
mov
icebp
xchg
cltd
stos
or
pop
inc
bound
sub
mov
jecxz
jne
mov
aaa
inc
sbb
cmp
sub
sbb
cmp
pop
or
ss
jno
pusha
shlb
aam
cmpsb
ret
xchg
fs
push
fimull
jns
xor
adc
xchg
lods
sbb
adc
adc
sub
popf
movl
popa
movsl
push
dec
cmp
aas
cmpsl
mov
std
mov
pop
cmp
roll
lret
aad
dec
test
lahf
outsl
ficoms
pop
adc
fdivl
fnstcw
enter
or
pop
test
adc
or
outsb
ret
adc
add
jge
inc
sbb
pop
add
pop
testl
cmp
xchg
ret
add
or
sbb
cmpsl
mov
add
loopne
jne
pusha
cmp
ja
mov
imul
and
adc
loop
mov
fldenv
gs
dec
movsl
adcb
out
pop
fsubr
loop
pop
aaa
jmp
jge
bound
mov
inc
xor
arpl
cmp
push
cmp
mov
sarl
xchg
fstl
jnp
insb
cmp
push
movsl
sbb
dec
mov
push
sub
imul
mov
outsl
pop
and
inc
test
int
push
mov
sbb
mov
in
inc
es
or
pop
sbb
or
sub
outsl
xor
outsb
mov
cmp
fimull
pop
pop
push
cmpsl
insb
xor
lock
popa
movsl
pop
subb
orb
inc
adc
push
pop
mov
add
pusha
cmp
clc
jnp
pop
xchg
push
push
test
or
xchg
inc
xchg
add
add
out
xchg
testb
mov
mov
out
push
rcr
jbe
mov
pop
inc
insl
sbb
xlat
lahf
aad
inc
out
lret
xchg
leave
sbb
je
xchg
aas
inc
jmp
mov
add
fdivl
shr
out
cs
lds
fists
cld
sahf
mov
aaa
or
add
add
mov
sbb
or
fwait
int
lods
pop
data16
jae
test
xchg
or
sbb
std
cmp
pop
fldenv
stos
jl
xor
add
or
add
mov
clc
xchg
xor
ja
movsl
fnsave
add
lret
cmp
fwait
jp
mov
aaa
cmp
or
xor
pushf
jo
or
jne
inc
sbb
or
iret
add
fdivs
notl
push
cmp
fwait
mov
out
cmp
or
dec
cmp
add
sub
or
ret
pop
repz
xor
cmpl
out
daa
sbb
or
push
ja
sbb
addb
add
jne
xchg
out
je
inc
add
cmp
popf
je
jae
jae
inc
rcrl
leave
xor
je
jnp
jb
ret
mov
pop
cmp
and
loopne
fistpll
jno
mov
lret
sbb
gs
mov
sub
or
or
or
cltd
inc
test
cmp
call
into
addb
fnstsw
aas
cwtl
inc
sub
jo
stc
lret
mov
testl
pop
adc
mov
sbb
inc
cmp
jne
push
sbb
aaa
pop
dec
add
mov
ret
in
ret
std
or
js
dec
mov
out
nop
inc
stc
push
adc
dec
dec
lret
inc
cmc
xor
ret
sti
push
rorb
sbb
pop
imul
daa
and
out
or
addl
jge
imul
mov
jmp
imul
adc
sbbl
add
cmpsb
fistpl
les
shrl
push
dec
ret
pop
add
jecxz
or
pop
pop
cs
xor
decl
sub
loopne
pop
or
test
sti
cmc
sub
scas
cmc
pop
mov
or
es
add
push
push
inc
or
jle
adc
clc
inc
icebp
fcmovne
jo
cmp
inc
push
add
inc
in
mov
notb
inc
dec
inc
outsb
arpl
insl
jnp
in
add
fs
jl
dec
dec
inc
fs
xor
outsb
mov
addb
mov
sub
cs
data16
xchg
call
movsl
arpl
in
sbb
push
in
pushf
imul
fildl
push
adc
jno
push
push
loopne
sub
icebp
jb
push
or
imul
xor
and
inc
push
les
push
xor
mov
add
add
orb
xchg
shl
aaa
mov
push
pop
mov
add
dec
inc
mov
cmp
outsb
ret
inc
cmp
ja
inc
inc
jmp
ret
out
sti
xchg
pop
and
je
inc
inc
mov
push
sbbl
cli
ljmp
ja
shlb
and
cs
mov
shlb
mov
push
fs
js
push
lods
push
sbb
inc
and
add
addr16
divb
fstpl
adcb
inc
les
out
out
lods
jp
je
push
push
rolb
int
js
lods
shrb
icebp
sub
lret
mov
cmp
jae
pop
enter
jo
dec
push
clc
mov
je
inc
mov
daa
push
inc
je
scas
repnz
push
imul
or
fs
pop
push
out
sbb
mov
dec
addb
mov
dec
inc
mov
jl
cmp
jne
imul
adc
pop
adc
pop
pushf
sub
push
lret
pop
idivl
scas
je
push
push
stc
dec
in
js
and
dec
dec
rorb
mov
scas
fsubl
inc
dec
jnp
xor
sbb
xor
push
out
push
sbb
and
test
ja
push
dec
pop
pop
pop
sub
rorl
cmp
fsub
data16
adc
push
push
je
bound
cli
je
mov
push
inc
mov
imul
push
add
mov
dec
inc
insb
dec
int
pop
and
bound
or
mov
into
cmp
add
lea
shl
mov
sbb
mov
enter
popa
popa
fimuls
xor
shll
or
pop
int3
daa
pushf
cmp
or
fisttps
or
push
dec
cmp
rorb
js
in
jo
es
out
out
ds
xchg
and
jp
daa
pushw
push
mov
stc
xor
mov
mov
popa
push
outsb
mov
jnp
jb
fiaddl
push
mov
xchg
insb
pushw
xchg
push
sbb
clc
add
and
push
cmp
test
in
mov
fldl
pop
into
in
dec
lock
add
pop
loope
add
aas
cmp
stos
aam
inc
adcb
xlat
loope
sarb
cmp
sub
dec
push
inc
or
adc
je
push
cmp
dec
jle
dec
jle
pop
scas
loopne
jl
xchg
insb
or
mov
or
shlb
dec
cmp
sub
movsb
add
cltd
and
cmp
add
push
imul
jno
cmp
push
cmp
out
into
dec
rcl
popa
std
test
jecxz
add
sub
xchg
cmp
arpl
cwtl
mov
mov
lea
pop
das
jo
xor
les
push
xor
daa
fisubrl
outsb
lea
int3
hlt
loopne
adc
or
xchg
add
bound
jb
and
in
inc
cmp
add
add
rcrb
js
xchg
pop
or
fsubl
cmp
push
rorl
push
dec
push
push
xor
mov
xor
jno
inc
xchg
testb
pop
xlat
xor
aas
or
or
sbb
jge
sub
sbb
jmp
popf
scas
push
addr16
mov
imul
in
mov
out
fnstsw
mov
ljmp
sbb
call
lcall
ja
arpl
sub
imul
and
repnz
out
in
fsub
cs
test
clc
dec
out
ret
negb
jmp
fxch
fnstsw
add
push
inc
inc
inc
pushf
mov
aad
stos
imul
fcmovu
and
into
rol
dec
in
lret
dec
xchg
fildll
inc
jbe
leave
repnz
add
icebp
fwait
repz
push
icebp
out
add
cs
testb
jbe
rcr
adc
cld
or
add
imul
jb
stc
add
jo
mov
add
sbb
cmpsb
pop
call
add
cmovs
lock
filds
add
xchg
adc
xchg
push
push
outsb
loop
lock
push
sbb
and
int3
jae
pop
cmc
scas
mov
repz
add
inc
sbb
lds
or
dec
loopne
dec
dec
data16
xor
jg
sbb
arpl
cwtl
sbb
cmc
xlat
in
shll
in
fdiv
and
pusha
out
mov
ljmp
pusha
fnstcw
pushf
mov
or
out
pop
out
nop
imul
int
pop
lock
out
std
jmp
add
fadds
addr16
jge
fisubrl
fs
fs
call
jp
fs
push
or
jmp
add
mov
pusha
cmp
inc
repz
push
cmp
or
sbb
data16
out
scas
and
xchg
mov
sbb
addr16
test
in
mov
jo
pusha
out
inc
out
rol
out
bound
jno
dec
cmpsl
mov
and
ss
jecxz
ja
test
add
jmp
fidivl
add
loope
fbstp
in
xor
xor
stc
inc
bound
pop
fwait
std
add
arpl
stc
jae
inc
dec
dec
push
sub
sub
stos
add
icebp
stc
test
jnp
sub
loop
std
outsl
ljmp
cmp
daa
andb
inc
push
inc
mov
cld
testl
push
in
sti
scas
or
add
mov
fildl
std
xlat
sti
imul
daa
jo
and
mov
data16
jns
add
fcmovnu
push
test
pusha
add
and
std
jecxz
add
mov
call
push
out
in
pop
cmc
push
cwtl
add
loop
out
in
fdivs
cmc
in
fnstsw
mov
pop
loope
dec
leave
loopne
orl
pop
lods
jo
in
fstp
xchg
push
loopne
int
jnp
jno
mov
sti
test
pop
in
adc
add
mov
iret
add
xor
jecxz
add
daa
xchg
or
or
mov
loope
mov
loopne
or
push
pop
gs
xchg
orb
push
adcl
jo
pop
jbe
outsb
je
sbb
dec
inc
or
inc
jbe
cmp
loope
pop
jb
fnstsw
dec
imul
imul
jb
addr16
into
cmc
shlb
fsubrs
int
or
xchg
adc
out
inc
jo
jo
inc
push
add
sub
ret
add
push
je
lret
leave
leave
sbbl
pusha
lods
addl
mov
enter
shrd
outsl
popa
pop
xchg
pop
mov
insl
xlat
mov
push
push
in
mov
jmp
aas
pop
jl
xchg
mov
jg
sub
xchg
push
dec
pop
or
add
mov
jne
mov
ljmp
frstor
stos
arpl
fdivs
xchg
and
cmp
insl
out
pusha
pop
mov
fsub
mov
sub
mov
and
fstpt
xchg
dec
std
loopne
arpl
jle
push
dec
xor
push
xchg
rcll
dec
push
xchg
jno
andl
mov
fwait
lods
add
sub
mov
inc
mov
and
dec
ret
or
and
add
cltd
insb
sbbb
shll
and
adc
or
and
add
xorl
or
push
lods
fldl
jno
add
sbb
sbb
cs
xchg
xorl
push
xchg
fstl
sbb
xchg
sarb
pop
add
daa
xor
push
pop
jmp
adc
push
and
jo
iret
loope
stc
scas
dec
test
xchg
data16
sbb
lcall
xor
dec
add
add
sarl
outsl
mov
lock
or
inc
js
fsts
add
clc
xchg
or
lods
inc
daa
js
sub
xchg
or
orl
aad
pop
dec
aas
adc
gs
clc
sbb
pusha
inc
loopne
cld
add
push
dec
pop
and
dec
mov
imul
arpl
or
cwtl
xchg
fcompl
bound
or
mov
mov
adc
test
pop
loope
or
adc
pusha
imul
mov
sub
jp
push
pop
inc
or
mov
push
std
pushf
cmp
and
jge
add
xlat
inc
adc
shlb
adc
or
das
dec
call
sub
inc
and
dec
push
dec
mov
stc
daa
xor
daa
pop
or
mov
pop
xchg
adc
sbb
fsubrp
lods
mov
loop
dec
jmp
jo
push
pop
cmp
arpl
fldl
in
push
js
jns
push
push
int3
lock
push
mov
in
add
jno
and
add
jno
fwait
rolb
negb
incl
imul
std
cli
daa
rorl
add
mov
jo
movsl
jge
jne
std
sti
ljmp
cmc
pop
lret
je
add
fcomi
loop
lods
push
or
addr16
aaa
lods
xchg
add
adc
jnp
pop
push
jb
or
loope
inc
mov
ficompl
and
mov
sbb
jp
fsubs
xchg
pushf
cmp
js
bound
xchg
shll
push
lock
popf
or
and
test
push
inc
cli
andl
in
inc
push
sbb
adc
push
cmc
xchg
pop
cmp
pop
pop
xor
mov
bound
mov
sahf
or
dec
imul
rcrb
gs
inc
fstp
lret
jo
xchg
sub
sbb
dec
int
mov
mov
inc
jge
fisttps
pusha
push
out
movsl
bound
dec
sub
pop
js
push
add
jbe
adcl
inc
sub
pop
cmp
or
xchg
add
imull
mov
mov
addr16
fwait
jbe
and
adc
add
int3
pop
lea
mov
add
or
cld
cli
add
je,pn
clc
jno
dec
cmp
xchg
xor
xlat
sbb
in
call
gs
mov
jbe
div
adc
int3
les
inc
fisubrs
inc
stos
pop
xchg
lods
push
xlat
sub
mov
and
push
mov
sbb
and
push
mov
push
push
daa
adc
push
in
sbb
pop
add
mov
xor
push
ss
sbb
add
fidivrl
out
fadds
js
adc
xchg
jmp
mov
mov
dec
daa
sahf
aad
and
roll
pop
ja
popa
push
dec
mov
test
adc
mov
fst
mov
aad
out
movsb
stos
int
mov
mov
repz
ds
sub
jmp
shrb
repz
sub
ret
xlat
in
or
sbb
addb
jae
push
setae
repz
push
rolb
adc
das
icebp
add
ret
sub
inc
add
shrl
popf
lcall
pop
call
jg
push
or
orb
adcb
cltd
add
addr16
sbb
pop
stos
and
ds
cmc
test
inc
pop
js
jnp
add
insb
dec
insl
push
adc
adcl
lods
jns
cmpsl
jne
scas
sbb
enter
push
mov
nop
insl
jle
mov
jg
jle
dec
inc
push
pop
xorb
int
push
dec
inc
test
jnp
adcb
jo
and
mov
add
js
inc
lock
dec
pop
mov
push
bound
push
cmp
mov
add
mov
or
shll
fdivrs
lods
iret
sbb
ljmp
ret
mov
inc
cmpsb
fldcw
mov
xchg
and
or
shlb
cmp
test
and
cmp
sbb
cmp
ja
es
add
jecxz
add
and
jge
sub
adc
into
xchg
je
data16
psubsw
mov
sbb
cmp
cmp
dec
pop
cmp
pusha
lock
sbb
sbb
inc
jae
cmc
aaa
pop
pop
sbb
sub
add
js
pop
jp
imul
xchg
shlb
inc
push
push
dec
aaa
push
fidivs
sti
orl
xchg
mov
add
popa
dec
xchg
inc
movsl
jge
fs
outsb
and
inc
out
pop
mov
js
inc
push
sbb
ret
pop
push
push
inc
mov
sub
sbb
out
movsb
sbb
cmp
pop
addl
adc
js
clc
dec
add
push
in
push
dec
push
xor
add
rorl
push
ret
dec
inc
inc
sbb
and
xchg
sbb
cmpsb
ret
jp
mov
or
pop
nop
xor
mov
dec
mov
cmovne
js
outsl
shlb
outsb
addl
jp
or
ds
insb
mov
xor
push
pushf
outsb
test
int3
test
data16
jnp
jbe
popa
popf
cld
addb
cmp
sbb
pop
dec
inc
sub
fs
jne
test
and
inc
mov
sbb
imul
insl
cmp
push
fwait
mov
lods
bound
xchg
addr16
fildl
mov
dec
sbb
jne
test
fimull
aaa
mov
inc
test
pop
inc
fiaddl
push
xchg
sub
mov
aaa
xchg
push
cmp
ret
sub
testl
push
add
pop
dec
inc
xor
fucom
or
push
daa
pcmpeqw
mov
mov
push
sub
mov
pop
xchg
arpl
rcll
mov
imul
inc
add
or
and
add
test
pusha
insl
xor
bound
and
shlb
push
or
mov
dec
ret
icebp
pusha
jno
cwtl
and
push
push
aad
pop
insl
adc
push
call
push
ljmp
nop
sbb
stos
arpl
sub
adc
pop
dec
push
std
daa
push
sub
nop
cltd
sbb
outsl
insl
rolb
jnp
adc
bound
emms
push
push
mov
mov
xor
jge
stos
mov
push
gs
push
xor
andl
cmp
xor
or
iret
gs
pop
aad
inc
and
inc
and
add
mov
outsl
xor
push
xor
mov
xchg
sub
dec
mov
push
mov
rcll
push
sti
push
mov
imul
xchg
mov
push
sub
std
adc
push
pop
push
movl
inc
push
and
sti
push
push
push
scas
ja
cwtl
push
add
bound
jne
pop
adc
jns
sbb
pop
sbb
push
adc
lea
sub
aad
inc
mov
lods
es
leave
adc
xchg
pusha
test
mov
mov
arpl
sub
sbb
scas
push
sub
pop
sub
xor
aaa
inc
ljmp
mov
inc
sbb
push
xor
push
lods
sub
pop
sbb
xchg
push
addr16
pop
sbb
sbb
fcompl
jne
mov
mov
in
mov
dec
sbb
imul
xor
jecxz
movsb
push
pop
insb
test
rcll
jae
xchg
and
jno
xor
ret
stos
mov
and
aas
jge
sbb
aad
inc
daa
dec
mov
stos
daa
mov
imul
inc
mov
insl
mov
or
mov
jmp
cwtl
mov
adc
out
and
loop
lods
lahf
add
imul
call
int
sub
inc
mov
or
sub
mov
leave
inc
adc
aaa
addr16
xor
pop
jmp
add
add
ficoms
adc
jle
test
in
pushf
push
cmp
insl
movsl
sbb
mov
push
push
mov
push
add
jo
fucomp
scas
sti
and
pop
add
fisttpl
insb
add
jge
daa
loop
and
jge
dec
inc
cmc
mov
jge
push
mov
scas
push
cmp
or
jge
insb
jle
int3
xor
or
or
loop
add
mov
and
push
xchg
add
add
xor
out
or
loope
loopne
pop
or
gs
push
test
insl
out
cmp
sub
daa
sub
scas
out
mov
dec
popa
inc
adc
dec
daa
push
xchg
fst
mov
and
push
xchg
dec
loope
test
mov
popa
inc
cli
clc
out
clc
mov
adc
xchg
mov
lock
jmp
push
sbb
pop
add
pop
cmp
pop
inc
push
inc
adc
jae
out
add
push
push
adc
mov
fsubrs
fiadds
inc
add
test
dec
daa
dec
xor
neg
iret
dec
add
rcrl
add
push
add
cmp
daa
mov
mov
or
push
sbb
repnz
and
adc
lock
add
push
int
or
dec
rcrl
push
cmp
loopne
out
inc
dec
daa
push
dec
daa
cmove
mov
push
inc
jns
js
addr16
loope
imul
scas
imul
arpl
and
sti
sbb
adc
scas
jnp
pop
rclb
adc
inc
fists
add
addr16
loope
mov
push
or
and
mov
add
add
daa
add
out
fnstsw
adc
outsb
pop
adc
push
cs
loop
fdivrl
add
sub
pop
xor
dec
inc
inc
push
outsb
and
add
popf
int
inc
sub
shrl
fadd
xchg
xor
inc
inc
mov
lock
aas
push
sbb
sarb
xorl
add
jecxz
fldenv
andl
jno
cs
int
xchg
aam
sub
and
sbbl
fnclex
popaw
mov
push
dec
push
cld
dec
dec
push
fildl
cmp
dec
inc
and
push
loopne
loope
sbb
cmpsl
cwtl
mov
sbb
mov
xchg
sub
mov
and
stc
sbb
es
ss
or
add
push
or
out
popa
dec
sbb
mov
inc
fiadds
xor
bnd
inc
mov
addb
push
dec
stc
push
jae
adc
mov
int
sub
lock
in
and
jmp
pop
or
loopne
lock
jno
sbb
pop
scas
mov
fiaddl
xchg
movsb
es
adc
push
or
xchg
insl
adc
and
pop
or
adc
push
sbb
jbe
jae
cmc
jg
jo
add
pop
adc
loopne
mov
loopne
je
stos
mov
bound
push
and
adc
pop
jp
inc
imul
jge
add
sub
push
xchg
pop
out
outsl
sbb
add
sub
mov
push
cmp
add
mov
orb
sub
dec
mov
cmp
shlb
adc
es
inc
sbb
clc
add
loop
ljmp
test
add
rolb
ret
sbb
sbb
xor
mov
mov
lret
sbb
xor
add
adc
mov
test
test
sub
aam
jecxz
rcrb
dec
xor
xchg
popf
or
mov
pop
and
pop
stos
pop
sbb
sub
sub
inc
push
movsl
push
pop
mov
sbb
ret
addb
insl
mov
nop
stos
inc
imul
adc
xor
inc
push
movsl
dec
shrl
add
fsts
iret
mov
mov
cmp
orb
shll
bound
mov
iret
sbb
roll
aas
add
push
mov
movsl
mov
sub
push
mov
push
stos
imul
inc
test
lods
rolb
push
mov
inc
addb
push
inc
mov
jge
je
xchg
stos
ja
cmpsl
adc
adc
push
fcompl
push
adc
pop
push
stos
fisttpll
aaa
adc
test
mov
dec
mov
imul
mov
push
add
test
dec
test
add
rcrl
adc
sub
pop
repz
dec
shrl
push
push
xchg
sbb
aas
adc
addl
xchg
mov
stos
nop
mov
aas
sbb
jne
add
or
xchg
inc
sub
dec
insl
or
add
popl
mov
stos
push
inc
subb
out
or
stos
mov
xor
cmp
int3
pop
rorl
pop
arpl
adc
mov
test
sti
jecxz
mov
adc
fwait
sbbb
test
mov
jae
shr
pop
ret
push
sub
mov
jecxz
push
pop
cmp
mov
and
and
mov
xor
push
popa
adc
cmc
push
push
mov
mov
mov
adc
lahf
mov
mov
mov
xchg
movsl
imul
cwtl
sub
mov
xor
cmc
mov
ret
in
push
or
add
add
mov
mov
mov
push
add
pop
add
push
mov
push
adc
adc
or
test
push
xchg
mov
inc
mov
add
xor
popf
fimull
xchg
insl
inc
sub
mov
mov
stos
outsl
or
ds
rcrb
add
or
push
mov
sub
icebp
jmp
outsb
jg
adc
add
sbb
lock
inc
add
add
fldenv
das
std
inc
sbb
in
add
push
rclb
in
aad
out
push
aas
mov
mov
std
rorl
and
das
cmp
add
pusha
push
add
pushf
fadds
cmp
push
rorb
in
pop
shll
pop
mov
shl
fwait
dec
sti
aas
add
sub
or
ret
das
mov
xchg
push
add
dec
adc
inc
rcll
imul
pop
das
dec
dec
jb
dec
push
cmp
mov
xchg
aaa
dec
mov
inc
stos
das
cwtl
stos
push
clc
shll
subl
inc
dec
shr
pop
in
inc
jle
fistps
mov
adc
and
inc
add
add
sbb
push
and
aas
mov
xchg
pushf
jmp
mov
daa
push
insb
and
jae
mov
dec
dec
in
add
sahf
js
jns,pt
cmp
into
daa
mov
jg
sbbl
addl
add
leave
sbb
xchg
adc
and
xchg
mov
jbe
lods
ss
outsl
lea
addr16
dec
dec
leave
cmp
daa
fmuls
jo
pop
mov
pop
lahf
mov
mov
orb
aam
or
add
pop
aaa
xchg
dec
repz
loopne
in
push
cmp
add
insb
iret
repz
adcb
lea
pusha
call
push
test
fs
inc
shll
mov
adc
cmp
dec
add
inc
add
add
movsl
adc
add
adc
rclb
add
dec
in
mov
insb
jae
jb
outsb
inc
insb
call
mov
je
arpl
outsb
push
add
push
mov
push
sbb
inc
inc
inc
push
dec
mov
int3
mov
inc
jns
inc
js
mov
push
inc
sbb
push
jns
gs
push
imul
jg
gs
jne
je
popa
outsb
addr16
inc
das
fldz
push
sub
fs
gs
add
or
inc
jne
cmp
add
dec
fs
outsl
insb
fs
push
pusha
xchg
hlt
imul
outsb
jne
jmp
inc
and
gs
popa
sub
push
adc
fwait
and
sbb
jb
outsb
imul
or
cmp
clc
and
jns
fidivs
sub
loopne
pop
stos
stc
pop
imul
push
jne
pop
push
bnd
inc
mov
les
push
pop
aas
fdivrs
add
dec
gs
into
loop
jns
aas
fwait
sub
push
add
jb
dec
cmp
fcoml
add
push
xor
adc
push
push
sbb
outsb
outsb
in
cmp
or
daa
push
gs
jo
fcmovnu
shlb
arpl
ret
push
das
les
lcall
or
jb
dec
outsb
insw
popa
addr16
mov
mov
pop
mov
mov
enter
mov
xor
sbb
cmp
orl
or
push
stos
xchg
pop
int3
outsl
cmp
data16
jp
cmovne
fildl
xchg
and
imul
mov
ja
inc
push
dec
sub
mov
mov
gs
outsl
insl
bound
outsl
js
lret
dec
imul
sbb
popa
insl
inc
sbb
jecxz
and
pop
fstp
lea
cmpsl
ss
pop
stos
mov
add
pop
or
jno
out
sbb
adc
jb
sbb
jbe
adc
jns
sub
pop
jne
adc
sbb
fstpl
dec
inc
dec
inc
push
data16
arpl
roll
sbb
rorl
lcall
push
sahf
jbe
xor
das
test
insb
inc
or
and
push
xchg
sbb
and
push
jecxz
inc
add
dec
add
add
pop
inc
sub
add
sbb
dec
lret
out
lea
sbb
add
fidivs
ds
sbb
imul
shlb
sarb
pop
repz
add
inc
dec
inc
inc
dec
enter
dec
and
add
aaa
rcll
inc
lods
inc
add
jns
mov
in
inc
rolb
or
mov
xchg
add
push
repnz
dec
popa
add
rorb
or
jo
fs
dec
add
cmp
jbe
mov
sub
loopne
shrl
push
push
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
