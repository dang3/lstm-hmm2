lcall
call
jmp
push
lea
lea
push
push
mov
dec
insb
inc
add
dec
sbb
ret
nop
add
adc
dec
mov
adc
dec
sub
idiv
decl
push
push
mov
push
xor
mov
mov
cmp
mov
mov
je
mov
cmp
ja
out
jne
mov
mov
mov
je
mov
mov
push
fs
in
mov
fstpt
aas
push
lea
or
clc
insb
push
pusha
add
es
cmp
fstpt
clc
mov
jne
dec
add
push
and
push
mov
inc
add
outsb
or
out
fucomp
mov
or
xor
mov
and
je
mov
scas
fucomp
dec
push
cmp
sbb
and
xorl
pop
push
inc
mov
std
out
inc
xor
idiv
adc
pusha
jno
mov
xor
and
dec
mov
mov
cmp
je
push
inc
pop
pop
pop
pop
push
or
jo
xchg
sbb
add
outsb
outsl
outsb
jg
jns
push
orl
pop
jae
sbb
push
adc
lods
adc
mov
cmp
jne
mov
shrl
mov
and
jbe
std
clc
or
xor
js
push
cwtl
jne
add
or
int
push
scas
not
dec
mov
cmp
jbe
mov
into
je
idiv
jmp
shlb
je
cmp
jne
dec
push
mov
mov
and
pop
mov
mov
add
mov
cmp
ja
ret
jae
sbb
push
or
leave
sbb
jge
lret
mov
shr
negl
add
movsl
fnstenv
and
rep
jns
mov
pop
movb
pop
ficomps
add
mov
shr
mov
pushf
lock
mov
push
fcom
in
mov
cmp
mov
jp
or
push
fwait
pop
insl
fnstsw
cltd
cwtl
inc
in
test
mov
mov
mov
neg
shl
sub
pop
notl
add
je
sub
orb
sub
mov
jg
insb
mov
ja
test
movsl
fisttpl
daa
jg
adcl
mov
xor
push
jae
ffreep
adc
sbb
push
push
xor
push
push
mov
mov
pop
add
sahf
add
lods
mov
adc
push
pop
out
add
jmp
pop
jp
shlb
arpl
push
pop
sbb
inc
and
addl
or
lahf
mov
mov
cmp
push
cmpsb
push
testl
pop
imul
andl
add
jb
cmp
inc
push
mov
cmp
sbb
movsbl
rorb
xchg
mov
inc
movsb
addr16
out
into
add
and
dec
sub
push
dec
add
and
jno
pop
add
repz
lret
rcrb
sbb
xor
scas
icebp
inc
xor
jo
call
xchg
mov
mov
mov
jb
mov
or
or
fsubr
adc
adc
or
cli
cmp
pop
je
add
lcall
fs
pop
int3
test
les
ret
dec
lods
sarb
pop
fstpl
dec
ret
pop
nop
push
mov
loop
or
pop
or
divl
xchg
xchg
mov
aam
adc
mov
add
rol
js
mov
imul
jne
pop
fsub
js
sti
jne
mov
mov
push
lret
cwtl
xor
inc
lea
add
and
insl
cmpsl
in
pop
jbe
mov
push
push
xchg
push
sbb
push
popf
lods
mov
loope
mov
orb
nop
push
push
inc
in
push
adc
fadds
push
in
xor
jle
sub
adc
fiaddl
dec
testb
fwait
insb
cwtl
xchg
or
pop
stos
mov
loope
movb
push
loopne
testb
pop
inc
mov
lea
aaa
dec
pop
jb
dec
ss
mov
pop
sub
enter
int3
cmp
lahf
add
test
cmp
xor
push
adc
jmp
push
scas
test
std
cmp
lret
mov
daa
sub
mov
jne
sub
leave
adc
jae
mov
incb
mov
je
popa
je
iret
mov
out
jb
lea
push
push
pop
add
mov
mov
adc
adc
push
add
dec
sbb
repnz
inc
jae
shrb
test
and
push
in
cmp
add
inc
and
fs
add
jmp
into
stos
jno
test
les
sbb
xor
or
sub
clc
add
jp
fiaddl
aaa
cwtl
sbb
les
jb
xchg
or
sbb
dec
fucomp
fsts
mov
subl
leave
cmp
sarb
setne
mov
mov
ret
push
xchg
pop
push
xchg
pop
aaa
jbe
subl
sbb
adc
lret
fnstcw
jp
sub
inc
out
fucom
enter
adc
rclb
xor
nop
mov
and
icebp
push
mov
lock
ja
stc
sbb
and
jo
xchg
and
push
pop
jmp
dec
xor
std
sub
add
insl
mov
out
mov
add
cmp
jo
shrl
mov
add
pop
loope
test
popl
das
shrb
mov
addr16
jmp
mov
movsl
dec
pop
add
fidivl
insb
push
sti
sub
push
add
or
mov
pop
inc
cmp
ds
or
sbbl
sbb
popf
andb
out
enter
mov
dec
or
push
cmp
pop
add
fmuls
ja
mov
pop
jo
mov
jo
xchg
loopne
push
sub
pop
imul
xor
int
mov
add
xor
inc
or
lea
mov
xorb
das
adc
mov
jge
shlb
fidivrl
add
fsubs
lds
mov
addr16
push
cmp
adc
add
test
repnz
inc
popf
or
adc
pusha
and
ret
cld
mov
mov
outsl
inc
mov
fcmovbe
or
push
test
jmp
mov
push
lret
and
loop
and
sbb
jp
andb
dec
xchg
mov
xchg
mov
nop
data16
push
cmp
out
mov
lret
std
ja
xor
rcrl
push
sub
mov
xchg
int3
xor
js
dec
aas
es
shlb
inc
and
fcmovne
je
push
out
jmp
dec
xchg
sbb
inc
je
in
sbb
pusha
push
decl
add
dec
push
shrl
xchg
and
push
cld
xor
ret
jne
xor
push
or
cmpb
xchg
push
add
into
xchg
lret
imul
mov
jbe
sub
add
xchg
dec
jmp
push
shrl
pop
cmp
fdivs
mov
call
cmp
sbb
add
shlb
dec
ss
and
pop
pop
inc
push
or
sbb
pop
mov
xor
adc
pop
push
pop
push
je
mov
mov
inc
mull
xor
iret
add
iret
insl
sbb
addb
dec
les
sti
bound
xcrypt-ecb
cmpsl
mov
cwtl
jl
mov
imul
pop
mov
add
arpl
ret
lods
sbb
fstl
outsb
xor
ret
xchg
test
fmull
and
sbb
scas
loope
addl
iret
and
push
cmp
or
ret
xchg
mov
or
mov
test
iret
aad
lds
mov
pop
ficoml
add
inc
xchg
sbb
add
push
xor
cmp
sbb
mov
mov
cmpsb
je
mov
ftst
data16
or
sbb
mov
loope
movsl
jl
xorb
push
jae
mov
lds
pop
pop
mov
std
stc
jb
sahf
pushf
push
xchg
dec
cmp
push
xchg
and
mov
aas
or
xchg
xchg
add
push
call
push
mov
pop
xlat
test
insb
push
nop
jmp
jp
cld
movsb
and
jmp
outsb
jg
aaa
jg
jo
jne
adc
je
cmp
je
popa
jmp
xchg
dec
outsb
mov
and
mov
out
ret
fbstp
leave
add
sub
xor
sarl
bound
mov
pop
out
mov
push
add
push
push
mov
push
shll
in
fcoml
arpl
mov
testl
shl
pop
testl
adc
loopne
sub
or
add
adc
jg
adcb
ret
dec
mov
adc
and
push
stc
add
sbb
cld
xchg
out
enter
jo
pop
adc
repz
lock
sbb
shrl
dec
sbb
sbb
pop
loopne
xor
add
mov
lcall
dec
xor
lret
int3
mov
mov
scas
mov
jb
or
or
arpl
or
test
scas
stos
mov
leave
call
addb
js
data16
in
imulb
push
sub
push
inc
negl
out
jno
xchg
mov
xor
push
push
xlat
int
or
push
sub
inc
xor
or
lcall
cmp
popa
test
jb
xor
add
pop
or
sbb
mov
push
jmp
dec
sbb
jns
int
pop
xchg
sub
sbbl
inc
xor
add
sub
xor
xchg
jb
lods
iret
and
insb
or
or
jo
mov
test
sub
cld
mov
push
jl
out
add
xchg
cmp
push
adc
adc
test
mov
add
adc
mov
mov
inc
add
push
dec
jae
in
or
adc
sbb
cwtl
rcrb
mov
xchg
dec
insl
imulb
mov
lcall
inc
js
mov
into
jae
xor
test
add
mov
adc
lds
jg
mov
shrb
xor
cmp
jge
fsubl
ds
movsl
jg
fwait
inc
sti
lea
add
push
sub
push
push
cmp
movsl
mov
inc
das
test
dec
pusha
sbb
push
in
sbbb
pop
inc
pusha
sub
jb
lea
js
dec
je
ret
push
pop
ret
inc
lods
rcr
jmp
cmpsb
lods
in
sbb
out
mov
adc
xchg
xchg
push
pop
stos
sbb
push
mov
cltd
nop
xor
mov
push
ret
pop
xor
cwtl
xchg
and
lcall
mov
or
add
or
nop
or
ja
add
insl
imul
sub
or
adc
add
js
add
imul
or
imul
cltd
and
jle
push
sbb
push
sub
cld
xchg
leave
mov
or
push
sahf
mov
xchg
jecxz
sub
je
mov
push
lcall
inc
loopne
xor
sbb
xchg
mov
cmpsb
dec
in
mov
in
pop
jmp
je
sbb
mov
out
mov
or
ret
sbb
mov
pop
dec
lret
je
enter
mov
popa
imul
bound
add
sub
test
in
cmp
notb
add
mov
adc
pop
sbb
dec
fsincos
and
cltd
or
je
mov
add
loop
lds
and
mov
adc
enter
push
push
je
and
push
sbb
or
and
push
push
outsb
push
loope
push
inc
imulb
cmp
dec
and
mov
xlat
add
jle
fstps
fidivs
push
and
mov
push
inc
sahf
js
pop
js
ja
pop
pop
cmp
popl
mov
and
es
daa
cmp
scas
mov
or
push
sub
sub
inc
imul
jmp
repz
adc
adc
pop
jno
xchg
mov
push
push
es
push
outsb
mov
mov
fwait
shll
or
loopne
lcall
and
nop
ds
shl
dec
popa
mov
inc
mov
jg
int3
sarb
cmp
pop
cmp
mov
push
sub
scas
fmuls
pushf
jge
and
dec
push
rorb
xor
sbb
mov
jl
push
jnp
icebp
inc
call
add
cmp
xor
add
inc
imulb
add
xor
adc
and
xchg
or
add
shlb
insb
jo
pop
sub
gs
push
pop
pop
pusha
dec
mov
mov
add
pop
cmp
lods
pop
push
imul
adc
adc
inc
xchg
insl
fwait
aad
push
and
add
mov
xchg
fistl
adc
je
adc
jo
pop
sbb
xor
push
or
adc
je
inc
adcb
xor
and
cmp
push
outsl
pop
xor
sbb
fdivrs
sub
sbb
in
mov
fsubl
scas
push
pop
rcrb
or
fadd
push
pop
mov
jns
mov
insl
sarb
push
push
mov
mov
aad
call
or
repz
inc
cld
mov
call
mov
push
xrelease
movb
pop
fisubrl
add
clc
mov
daa
xor
xor
adc
cmp
add
mov
add
fstpt
int
mov
and
popf
add
int3
mov
adc
add
sbb
ret
lock
jae
xor
lock
je
aad
inc
arpl
sub
push
fcmove
push
jmp
popa
push
mov
cmove
rolb
pop
push
lods
mov
jp
shlb
iret
mov
pop
sub
inc
adc
dec
call
or
and
mov
lods
mov
inc
jno
pop
jp
jo
popf
clc
adc
push
cmpsl
adc
movsb
push
cmp
pop
pop
int
loopne
mov
cmc
in
push
test
movsl
orl
pop
xor
pop
faddl
gs
mov
push
xor
mov
lea
sbb
js
mov
outsb
mov
shl
loop
fcoms
pop
test
imul
jg
ror
test
mov
outsb
mov
fsubl
mov
fs
aam
mov
in
push
inc
push
inc
mov
inc
pushf
xor
mov
clc
sub
enter
xor
cmp
testl
and
pop
je
call
cmpl
fs
call
and
jne
mov
mov
push
aam
jg
cwtl
out
push
das
clc
aam
xor
cmpsb
arpl
xor
imul
adc
adc
mov
lcall
mov
imul
jecxz
and
stos
mov
sbb
sub
and
test
push
dec
xor
pop
push
test
inc
ret
leave
adcl
loopne
mov
pop
or
lea
out
sbb
cmp
mov
xchg
rorl
lds
test
bswap
test
and
jns
stos
rolb
enter
and
add
pop
enter
pop
adc
cwtl
adc
adc
ret
cmpsl
pushf
push
gs
mov
dec
sbb
lds
xchg
shlb
into
test
test
inc
addb
jmp
fidivs
int
testb
mov
hlt
lea
sbb
and
jno
sub
xor
adc
adc
xor
sbb
fwait
pop
repz
xor
or
inc
push
shlb
inc
add
or
push
xchg
mov
mov
enter
push
xchg
icebp
mov
je
inc
jl
mov
mov
jb
pop
push
adc
cmpl
add
push
rol
lods
jb
add
xor
flds
push
sbb
mov
lret
push
orb
fidivrl
and
gs
jmp
or
push
push
adc
pop
rorl
mov
mov
lods
mov
shll
clc
pop
gs
pusha
sbb
nop
jle
stos
loope
cltd
mov
jb
xchg
nop
js
xchg
cmp
fcompl
add
mov
add
das
sbb
mov
lret
sbb
add
je
stos
sbb
xor
or
test
nop
mov
sbb
mov
push
stos
mov
add
js
and
jp
addr16
scas
push
xchg
sbb
mov
cmp
jno
scas
aas
push
mov
subl
rclb
push
sbb
adc
filds
idivl
sbb
or
nop
jo
insb
dec
push
daa
cmp
sub
sub
inc
out
sub
out
lcall
pop
and
add
sub
inc
jne
sbb
int
cli
adc
push
push
sbb
add
push
push
pop
push
ficomps
pop
mov
mov
cmp
adc
inc
xlat
or
or
mov
or
cmp
push
sbb
movsl
pop
insb
mov
push
popa
repz
addr16
jno
aaa
sub
imul
cmp
repz
push
xchg
adc
pop
dec
mov
push
jle
push
jmp
push
and
and
repnz
scas
or
push
je
push
cmp
negb
sbb
inc
cs
sub
enter
pop
push
push
or
inc
dec
ret
sub
cmp
gs
and
jmp
inc
mov
mov
mov
outsb
jecxz
adc
jle
sub
dec
movsb
xorl
ret
clc
jle
sbb
sub
adc
ffreep
xor
fidivs
lcall
and
jbe
mov
add
popa
pop
inc
mov
jbe
movb
xor
xor
sub
icebp
push
cmp
push
fistpl
push
cld
addb
fstl
or
shrb
in
xlat
jo
loope
push
in
lea
xor
add
movsl
xchg
movsb
out
xor
sahf
mov
outsl
fnstenv
add
mov
ljmp
dec
ss
testb
adc
pop
mov
sti
call
mov
ret
add
jmp
add
add
add
aam
fimuls
repnz
sarb
das
mov
xor
popa
or
xor
push
cmc
or
mov
rcll
dec
push
push
or
jl
sarl
jb
dec
aam
fistpl
cld
mov
adc
sahf
sub
int3
and
dec
hlt
jle
loope
push
pop
and
int3
pusha
add
adc
sarl
shll
or
adc
sti
sbb
daa
sub
xchg
xchg
stos
adc
cmpsb
add
jns
jb
fcoml
lods
push
loopne
roll
inc
and
sti
add
nop
mov
push
push
push
lods
int3
int
jns
sub
leave
fs
pop
test
sub
mov
pop
dec
stos
push
mov
dec
add
inc
pop
xor
lea
and
push
fmuls
rcrb
mov
loopne
in
mov
cmp
cmp
loopne
orb
les
xchg
lods
or
inc
push
push
pop
cmp
test
addl
push
outsl
out
pusha
repz
loope
push
mov
xchg
ds
je
pop
adc
jo
hlt
xor
adc
shl
dec
roll
add
cli
popf
jae
sbb
jl
int3
rol
test
pop
adc
sbb
nop
jbe
loopne
lods
xchg
rcll
gs
fs
cmpsb
pop
or
cwtl
lds
pop
sub
push
fdivl
xchg
fwait
and
adc
add
je
ret
jbe
enter
jg
test
repnz
xchg
jmp
jns
sub
cs
mov
bound
js
or
test
cmc
xchg
mov
mov
jb
add
jecxz
inc
inc
inc
jbe
push
pop
repnz
notl
mov
enter
jbe
push
push
push
cs
das
sub
dec
mov
or
add
rcll
xor
push
shrb
sbb
sub
cmp
cmp
aad
dec
mov
dec
test
xchg
sbb
loopne
sub
pop
loopne
movsb
mov
add
call
xchg
aam
push
dec
clc
sbb
in
dec
push
test
cmp
cmpsb
or
jo
and
mov
jne
adc
test
xor
mov
xor
test
push
mov
cmc
pop
cmp
leave
data16
or
cmc
dec
cmp
cmp
push
cmp
rclb
scas
dec
or
cmp
xor
xchg
cld
lods
loopne
sub
sbb
cmp
cmp
mov
jae
pop
xchg
cmc
pusha
int
jle
jno
push
add
sbb
adc
mov
push
insl
sub
sbb
mov
jmp
shl
movsb
pop
mov
jg
xchg
inc
jge,pn
pop
mov
add
mov
jo
add
push
lea
cmp
xor
and
data16
pop
sbb
jbe
jle
pusha
xor
xchg
fimull
sbb
js
and
xchg
loop
mov
mov
and
push
adc
ret
sbb
mov
int
sbb
and
movsb
mov
dec
fcoml
lahf
push
test
leave
sub
and
lods
pop
les
sbb
pop
sarl
cmpl
cmp
mov
mov
enter
push
or
dec
and
jge
lret
scas
rcrl
mov
push
and
in
int
fistl
mov
add
and
pop
arpl
fs
aad
mov
call
add
daa
iret
shrl
add
inc
lock
scas
pop
adc
mulb
sub
pushf
loopne
and
cmp
hlt
push
int3
cwtl
int
push
rcll
jns
inc
cmpsl
push
leave
lcall
push
xlat
test
add
cmp
and
push
mov
cld
inc
adc
mov
bound
sbb
xlat
stos
or
xchg
cwtl
popf
lods
pop
push
sub
mull
pop
lds
out
mov
dec
mov
and
push
push
test
test
ret
pop
jb
cmp
push
cmp
cmp
mov
mov
insl
jg
imulb
xchg
cmp
clc
mov
mov
add
movsb
leave
dec
or
adc
ret
xor
and
inc
or
or
or
jb
cmp
sbb
lea
movsb
add
mov
clc
mov
or
push
push
jp
add
mov
rorb
xchg
sbb
adc
test
ljmp
mov
imul
mov
cmp
dec
sub
sti
mov
loopne
in
sub
xor
and
push
and
cmp
sbbb
push
push
and
mov
xchg
enter
xor
mul
xor
cwtl
icebp
mov
insb
add
dec
cmc
cmp
ljmp
je
stos
add
add
mov
int
inc
adc
xchg
pop
ss
sub
pop
stos
adc
nop
pushf
inc
outsb
add
push
mov
fildl
push
and
fbld
lea
dec
out
mov
nop
sub
or
subb
jge
add
push
pop
jmp
sub
les
cmp
fidivrl
pop
in
sbb
push
aam
clc
pop
sub
lcall
xor
jge
cmp
rorl
push
popf
inc
dec
dec
cmp
nop
je
push
ficompl
push
push
push
jp
cmpsl
pop
daa
and
lods
cmp
mul
xchg
pushf
mov
lock
pop
ret
and
das
mov
insl
dec
roll
inc
pop
add
outsl
lods
push
and
sarl
lds
cmpsl
and
rcrl
xchg
adc
or
jae
sbb
pop
out
js
enter
xchg
xchg
enter
ret
lods
mov
jecxz
sarl
lret
rol
and
and
xlat
mov
dec
add
pop
mov
xor
mov
inc
inc
mov
or
adc
popl
lds
lret
sub
lret
mov
ss
sahf
movsl
fidivl
sub
pop
push
dec
mov
outsb
shrb
sbb
lcall
push
push
push
xor
mov
cmp
out
xor
leave
das
int3
arpl
adc
insb
and
fcoml
loopne
mov
push
dec
add
sub
sbb
push
or
mov
xchg
adc
sub
call
cli
rol
cld
loopne
xchg
in
les
ss
loopne
mov
push
dec
and
cmp
inc
enter
out
das
mov
iret
jbe
repnz
push
das
es
cmp
and
or
pop
add
and
arpl
rorb
or
lret
push
inc
in
xchg
fnstenv
addb
andl
jnp
cwtl
fwait
jl
fiadds
rcll
xchg
or
into
sbbb
sbb
jg
push
sub
push
stos
movsb
insb
jmp
sbb
jecxz
inc
add
lods
adc
push
sbb
cmpsl
sbb
call
jmp
es
inc
lock
push
or
xchg
add
es
cld
or
or
xchg
shlb
test
lock
xchg
pusha
cmp
insb
movsb
sbb
jge
scas
push
jne
enter
ja
fwait
sbb
adc
mov
adc
jb
clc
and
inc
push
cmc
repz
jl
mov
mov
lea
xchg
call
sbb
stc
mov
addb
sub
pushf
or
pop
add
rorb
shlb
jae
and
js
inc
mov
popa
inc
cmovb
xchg
insb
js
lock
mov
outsb
xchg
jp
jno
inc
fs
insb
mov
dec
cmp
or
or
test
rorb
test
mov
sub
add
cmp
or
sbb
add
xor
mov
add
mov
sbb
jp
add
jp
sub
push
push
pop
call
sbb
sub
sub
fldcw
xor
jecxz
or
fsubs
xchg
inc
sub
mov
add
pop
dec
jp
jle
mov
dec
cltd
sbb
cmp
adc
test
pusha
mov
sub
pop
cltd
mov
mov
call
outsl
and
stos
mov
leave
sub
lock
imulb
mov
sub
cmc
inc
lds
and
pop
add
pop
pop
xor
imul
dec
mov
icebp
test
cmpsl
push
or
mov
loopne
cmp
daa
mov
mov
cmp
inc
movl
fcomp
push
insb
cmc
jge
cli
inc
sbb
hlt
push
movsb
or
rol
inc
inc
fwait
or
xchg
andb
push
loopne
ret
repnz
cmc
push
sub
push
adc
or
and
or
xchg
pop
push
xor
push
mov
inc
push
push
jp
insb
enter
cmp
in
xchg
cmp
mov
xlat
idivl
adcb
adc
sahf
sahf
cli
sbb
bound
xor
lds
push
jp
aad
loop
adc
nop
in
std
lret
sbb
insb
pop
pushf
insb
sbb
xchg
inc
mov
mov
adcl
cmp
je
sahf
test
mov
lret
push
imul
in
jne
or
push
jmp
add
push
dec
rclb
out
gs
and
or
add
call
call
imul
add
mov
or
mov
outsl
inc
out
mov
sbb
sub
movsb
js
push
iret
test
sti
push
faddl
xchg
daa
iret
dec
adc
ret
sbb
or
stos
and
push
orl
jns
inc
push
addb
testl
push
lods
add
push
mov
ret
inc
xchg
jnp
enter
imul
pop
mov
xchg
in
inc
fiadds
sub
mov
sbb
adc
outsb
inc
pop
cmc
inc
imul
loope
inc
pop
adc
stc
mov
lret
cmp
je
aas
xchg
movsl
pop
sbb
xchg
int3
cmc
xor
je
pop
sbb
add
ljmp
adc
push
push
out
jecxz
xor
outsb
ret
dec
sub
sbb
inc
into
mov
in
and
add
sub
jecxz
je
and
pop
int
clc
stos
mov
push
cli
push
and
aaa
fstl
xchg
sub
adc
enter
popa
mov
push
aad
je
sarb
sarb
inc
add
fmuls
add
mov
sbb
pusha
aam
rclb
push
aam
fdivs
mov
fwait
aas
xchg
cld
stc
xor
pop
rcll
or
adc
jno
mov
out
mov
xor
inc
mov
mov
or
cmp
add
fildl
pop
mov
xchg
mov
shr
add
xchg
mov
adc
shrl
add
inc
insl
dec
divb
lea
sbb
in
cli
adc
sbb
ret
mov
jge
xor
push
ljmp
sub
cmp
or
mov
shl
mov
xchg
lods
dec
ss
sub
js
popf
pop
push
cli
addr16
nop
je
jne
mov
add
into
mov
inc
stos
ss
xchg
pop
pop
push
push
sub
and
iret
test
mov
jge
addr16
sub
ja
rol
xor
sbb
adc
call
mov
insl
mov
inc
mov
xchg
add
cmpb
dec
dec
add
jnp
lock
test
inc
andl
mov
popf
sub
or
push
xor
andb
movl
clc
adc
test
mov
addb
or
mov
shrb
cmp
mov
call
aad
inc
test
pop
movsl
lea
addb
mov
in
push
jbe
test
sub
jle
sub
out
in
outsb
jg
xchg
loopne
aaa
push
lret
or
hlt
or
adc
aas
movsb
xorl
mov
mov
hlt
cs
rorb
je
pop
inc
add
mov
xchg
test
mov
mov
cs
jae
test
sub
daa
test
int
push
fidivl
sbb
xor
adc
inc
mov
sub
add
and
lods
jne
rorl
sub
push
jae
mov
push
pop
icebp
arpl
mov
or
ret
test
add
test
scas
imul
and
sub
inc
sub
stos
frstor
adc
mov
and
mov
aam
cmc
jno
inc
enter
push
inc
dec
add
and
or
divl
mov
ret
cmp
mov
jge
jbe
lock
jmp
push
andb
les
mov
popa
pop
or
cltd
lcall
sub
sub
mov
mov
or
and
out
mov
xchg
addb
xor
and
mov
push
insl
pop
jno
testb
ret
dec
and
jbe
adc
and
fmull
fbld
add
or
dec
mov
push
pop
cmpsb
mov
pop
add
add
movsl
pop
mov
lea
pushf
dec
bound
sti
push
out
cld
inc
xor
lea
push
cmc
rcrb
add
xchg
jmp
movsl
aam
loopne
pop
lds
ret
jg
adcl
ja
daa
jo
mov
js
mov
stos
and
and
mov
jne
ljmp
dec
pop
cmp
or
mov
mov
xchg
sub
hlt
cltd
mov
pop
sub
or
ret
jne
cwtl
add
inc
cmp
mov
sbb
scas
sbb
pusha
fcoms
arpl
add
addb
or
sbb
xchg
leave
aam
mov
jge
mov
pop
sbb
shlb
movsb
pop
aas
xchg
movd
push
cwtl
mov
testl
jge
nop
mov
inc
xchg
push
pusha
dec
push
in
jle
cltd
xchg
mov
stos
pusha
cmc
xchg
jg
pop
outsl
or
push
dec
outsl
call
and
add
in
or
add
xlat
mov
icebp
inc
sbb
dec
inc
loope
dec
xchg
repz
lret
in
jbe
dec
lock
sub
mov
nop
mov
inc
or
pop
pcmpgtd
push
push
bound
leave
xchg
adc
cmp
lock
mov
add
subb
fldl2t
push
dec
cld
pop
push
stc
popf
rclb
notb
and
xor
cltd
lods
fcoms
xor
push
add
and
sub
and
imulb
cmpsb
movsb
add
and
add
xchg
rolb
mov
inc
add
test
je
mov
adc
hlt
pop
loop
add
sub
adc
sub
and
adc
stos
add
add
or
aaa
pop
push
sarb
jb
insl
leave
mov
pushf
cld
sbb
mov
add
push
mov
ss
mov
xor
cmp
sbb
aas
jo
adc
xor
shll
mov
push
push
fsubrs
sub
push
push
jae
cmpsb
clc
or
xor
mov
pusha
mov
lret
int3
insl
push
and
xor
pushf
jl
xchg
or
ja
sub
test
sub
or
lahf
shrb
pop
popf
pop
sbb
add
or
movups
add
mov
push
mov
mov
sarl
push
mov
mov
dec
clc
aaa
adc
add
mov
mov
movl
adc
dec
shlb
repz
rcll
pop
mov
mov
cmpb
jnp
inc
mov
dec
inc
aas
imul
cmp
mov
mov
pop
and
add
stc
or
inc
ds
cmc
push
ljmp
add
adc
mov
mov
add
or
test
xchg
adc
inc
pop
ss
mov
sub
sbb
add
fistpl
mov
or
lods
or
add
or
sbb
add
mov
cld
adc
and
inc
xor
ret
out
or
fsubrp
rorb
push
nop
lret
inc
push
jg
or
orb
jne
mov
fadds
les
scas
notl
jnp
xchg
testb
pop
divl
fisubs
cmp
push
or
int3
pop
cmp
mov
aam
pusha
cwtl
in
xor
push
call
and
lods
mov
sub
mov
sub
cmc
std
ret
add
sbb
mov
jmp
and
insl
fldcw
push
leave
fldcw
lock
iret
jnp
fmull
lods
xchg
test
sbb
xchg
push
and
or
rorb
push
mov
push
inc
cmp
mov
dec
lea
outsb
jne
xchg
inc
inc
movsb
loope
xor
sub
icebp
adc
adc
jne
hlt
std
mov
mov
dec
pop
or
xor
sbb
mov
adc
fwait
int3
lcall
cmp
mov
mov
mov
loop
jae
cmp
jne
mov
and
add
jno
dec
adc
mov
add
push
mov
iret
cmp
pop
inc
testb
sub
insb
mov
push
pop
xor
push
push
out
rorl
shlb
fs
xor
jno
jmp
lods
push
jl
push
inc
jbe
sbb
push
jb
in
xorb
mov
mov
mov
adc
sub
adc
pop
pop
and
mov
je
xor
add
mov
jmp
aad
inc
sub
lea
fstps
lcall
push
lods
repz
lods
pusha
ljmp
xor
mov
xchg
xorb
xchg
aad
mov
sti
pop
mov
sub
dec
push
sub
lea
fildll
mov
jne
xor
push
mov
cmp
je
adc
call
push
outsb
lea
test
call
inc
les
outsb
jbe
xlat
je
pop
or
int
push
cmp
mov
sarb
pop
sbb
pop
and
dec
xor
inc
sub
jne
adc
cmp
jle
push
xor
cmp
adc
out
lea
mov
push
sub
inc
add
xlat
in
jmp
sbb
push
mov
dec
adc
pop
lcall
loopne
cmp
adc
mov
lods
aad
push
sbb
scas
xlat
into
cmp
pop
andb
cmp
shrl
rcrl
push
cwtl
dec
xchg
imul
sub
cmp
pop
mov
inc
pop
rcll
into
hlt
or
fldt
push
negl
sahf
mov
jmp
mov
bound
pop
push
or
jle
dec
add
mov
cmp
xchg
lock
je
call
mov
add
pop
sub
fucomp
jl
dec
adc
add
or
cmp
mov
pop
cmp
mov
or
jmp
sub
adc
xor
cltd
push
or
push
lods
insl
dec
mov
insb
pusha
xor
aam
imul
pusha
lcall
add
mov
fldt
dec
sub
in
and
loope
cltd
mov
pop
inc
mov
xor
mov
packuswb
ret
insb
mov
push
dec
mov
sbb
jbe
add
and
enter
sbb
adc
mov
cmp
adc
pop
rcll
adc
dec
mov
in
movsb
and
mov
inc
popa
jb
inc
sub
push
jmp
je
rclb
addb
clc
lods
sbb
mov
cmp
and
or
cmp
lea
xchg
push
push
pop
mov
fnstcw
push
mov
lea
mov
or
les
data16
xor
xor
jl
jne
inc
lock
dec
add
mov
jmp
pop
ret
mov
sbb
je
push
cmp
test
dec
mov
and
test
adc
mov
or
enter
mov
push
outsb
push
imul
scas
xchg
js
pop
divl
xor
dec
inc
or
ffreep
in
mov
andl
and
mov
mov
adc
lret
adc
addr16
sbb
push
shll
mov
push
lds
pop
imul
imul
mov
sub
cmp
int
dec
mov
pusha
pop
jb
stos
push
sbb
pop
hlt
cmp
or
pop
dec
loope
es
cmovno
pop
int
or
pop
xor
push
orb
mov
mov
sbb
sbb
nop
or
mov
or
fistl
sub
imul
ret
and
jne
movl
insl
mov
lret
iret
ret
jno
push
insb
mov
cmp
or
aas
inc
push
fnstenv
inc
rclb
ljmp
push
sbb
push
add
mov
addr16
cmp
mov
dec
dec
adc
and
adc
dec
mov
or
pop
ret
push
add
mov
add
pusha
adc
mov
xchg
cmp
outsb
or
cltd
xchg
dec
push
or
lret
js
inc
cmp
push
push
sbb
pop
in
pop
mov
scas
imul
or
notl
out
inc
adcb
imul
sbb
sub
push
rcll
xor
fcoms
sbb
bound
pop
or
loopne
fimull
in
sahf
sub
je
mov
xor
add
fsts
adc
or
sub
shlb
shrl
fidivs
inc
sub
add
cmp
dec
mov
sub
pushl
idivb
fidivs
cmp
jne
jp
adc
add
js
jae
dec
or
orb
inc
inc
lods
cmpl
insl
stos
icebp
pushf
push
or
inc
inc
mov
ljmp
test
adc
xor
sbb
adc
rclb
mov
mov
push
adc
adc
mov
push
jno
pop
ret
ljmp
mov
popa
jae
xchg
mov
push
stos
leave
lea
mov
mov
cmp
mov
sub
or
and
xor
cltd
dec
inc
mull
xchg
inc
rcll
test
aas
popa
mov
add
pop
and
divl
push
dec
or
xor
movsb
and
pop
shll
add
outsb
sbb
add
adc
inc
adc
inc
adc
dec
xchg
xchg
daa
fldt
and
or
xor
mov
and
pop
push
push
rcrb
adc
movl
jno
loopne
scas
shll
mov
mov
jmp
add
lock
add
cmc
and
js
sbbb
test
sbbb
test
push
inc
mov
push
cmp
fld
sti
pop
mov
leave
lea
sbb
fwait
inc
pusha
mov
and
add
add
sbb
outsl
outsl
divb
sub
mov
roll
and
cmp
je
sub
pop
push
std
mov
out
test
pop
push
push
pop
or
aaa
sub
inc
add
adc
mov
inc
mov
nopl
js
jge
cwtl
icebp
fwait
or
daa
rcrb
or
dec
ret
add
mov
pusha
inc
scas
rcrb
ss
sub
lods
cmp
jno
stc
cmp
add
pop
push
mov
pop
adc
aaa
and
xchg
and
inc
push
rorl
xchg
sbbb
and
xor
pop
shrl
clc
or
sarl
das
ficoml
mov
clc
jne
jnp
or
sbb
pop
pop
mov
adc
adc
les
push
mov
lret
sub
or
and
fsubrl
shr
inc
or
adc
test
pop
je
mov
push
xorb
je
or
mov
pop
sub
js
add
or
mov
cmp
and
fwait
adc
popa
stos
in
mov
not
push
jno
clc
xchg
enter
scas
jo
sub
dec
repnz
mov
adc
das
fisubrl
outsl
push
jae
or
mov
mov
mov
mov
pop
bound
rorl
mov
and
pop
insl
xor
adc
enter
adc
jle
stc
movsl
add
rcll
addr16
fistl
ret
popf
mov
and
ret
lahf
dec
pusha
rclb
aam
or
ret
loopne
jne
add
inc
push
adc
test
lcall
ret
in
and
movsb
movsb
sub
add
jo
bound
fnclex
adc
pop
mulb
sbb
popl
lea
push
pop
dec
jne
mov
test
xor
push
sub
cwtl
lret
push
pop
xor
jp
cmp
aad
jp
push
cld
dec
ds
pop
xchg
push
or
and
mov
pop
xor
fstps
cld
cmp
push
loopne
iret
mov
push
push
push
xor
xchg
scas
xor
dec
mov
daa
sub
push
sbb
push
insb
inc
outsb
sub
mulb
mov
push
jbe
pop
mov
int3
call
push
fidivs
jbe
push
xchg
xor
jb
push
int
jne
xor
add
test
data16
pop
inc
jge
push
add
jo
xor
mov
push
pop
push
sbb
inc
roll
jne
mov
mov
out
orb
xchg
add
sbb
or
push
push
jo
iret
mov
xchg
cmc
xchg
lds
mov
adc
push
inc
xor
inc
mov
add
cmp
pop
movsl
ret
bsf
and
adc
call
cmpsl
int3
repnz
xor
pusha
jbe
add
push
and
test
xlat
stos
xor
out
lds
mov
lahf
push
sbb
addl
cmp
in
mov
adc
fcoms
frstor
sbb
in
cmpl
in
push
lcall
inc
jo
in
push
mov
dec
mov
or
sub
adc
jl
add
xchg
mov
jne
sub
pop
loope
inc
pop
mov
dec
lods
or
or
sti
jbe
adc
mov
imul
movsb
adc
add
push
dec
mov
or
xor
into
pop
pop
insb
mov
icebp
lcall
adc
andb
add
adc
and
das
push
xorl
stos
sarl
in
push
or
rcrb
dec
xchg
test
cld
mov
clc
sub
jns
nop
lcall
fs
sbb
int3
mov
dec
call
push
je
hlt
rolb
lods
push
pop
and
pop
push
jmp
jecxz
add
sarb
aaa
push
push
mov
add
mov
lock
mov
cwtl
js
mov
mov
nop
pop
jne
rcrl
testb
or
push
or
mov
jg
xchg
mov
push
addr16
pop
movsb
out
lock
and
xor
rorb
inc
pop
sahf
push
mov
add
sub
mov
xchg
insl
shll
pop
sub
outsl
sbbb
jl
dec
clc
push
mov
pop
push
addl
sub
test
jne
test
rolb
add
adc
loope
lods
rorl
dec
xor
push
adcl
mov
pop
push
test
test
nop
test
or
cmp
inc
insb
ret
bound
jmp
dec
and
out
or
xor
jmp
ljmp
loope
mov
cmp
push
insl
push
mov
add
inc
into
or
scas
jp
into
in
sbb
sbb
outsl
mov
inc
adc
mov
flds
gs
mov
inc
adc
subl
jl
and
jb
js
call
sbb
jae
mov
add
and
adc
mov
fdivl
in
pop
push
icebp
cmp
xchg
push
dec
addb
add
xor
xchg
clc
cld
push
aad
or
or
loop
pop
inc
or
bound
mov
push
cwtl
daa
test
pop
jb
xchg
push
out
or
mov
shlb
icebp
mov
ljmp
loopne
xor
push
cmp
loopne
inc
mov
jne
arpl
add
and
imul
xchg
loopne
mov
insl
lret
clc
jp
pop
shl
add
rol
stos
pop
add
jne
sarl
clc
jle
hlt
lea
dec
inc
push
adcl
and
inc
mov
ja
cmp
inc
in
mov
or
add
mov
inc
je
rcrl
mov
push
inc
xchg
or
ret
test
daa
jnp
dec
imulb
rcr
jns
je
cmp
aas
arpl
mov
add
push
cmc
rorl
nop
sahf
cmp
sbb
pop
and
xchg
lods
mov
mov
inc
xor
sub
push
sbb
mov
sub
pop
pop
pop
pop
pop
push
or
and
push
and
adc
sub
sbb
aad
sub
or
xchg
push
test
mov
sbb
das
lahf
xor
xchg
test
lds
inc
inc
testl
push
push
rep
push
movsb
rol
repnz
aam
adc
data16
int3
imul
aam
ss
jbe
mov
aad
xchg
mov
popa
test
fsubl
lcall
nop
imul
mov
lds
mov
cmp
mov
je
stc
sub
gs
daa
or
pop
lods
and
xchg
test
rorb
jg
mov
mov
sbb
push
push
pusha
mov
mov
cmpsl
push
pop
add
sbb
or
mov
or
cs
pop
add
mov
sarb
cmc
push
pop
cld
xlat
sbb
add
xor
test
adc
jecxz
add
loop
push
adc
insb
add
mov
xor
inc
stos
das
xchg
hlt
jbe
jno
jne
xchg
call
outsb
xorb
sub
aam
sbb
xorb
xchg
pusha
push
jo
xorb
and
sbb
xchg
jge
neg
or
mov
sub
xchg
sub
jge
jo
xchg
inc
cmp
mov
jl
adc
adc
call
leave
lea
mov
je
cmp
cmpl
sbb
adc
inc
xchg
sbb
cmp
jg
movl
jnp
jb
mov
sbb
mov
adc
or
clc
inc
inc
dec
mov
js
mov
aad
cmc
fdivrl
pop
arpl
mov
pusha
jnp
jae
mov
dec
inc
cmp
dec
sbb
mov
adc
fidivrs
xchg
adc
xor
push
mov
cmp
cmp
inc
test
mov
test
fiaddl
in
and
outsb
mov
sbb
inc
jo
dec
xchg
cmovno
outsl
xor
or
mov
loop
shrl
shrb
cmp
add
lret
lea
add
fistpll
ljmp
cmp
mov
add
inc
add
inc
xchg
mov
inc
aad
flds
adc
sbb
or
ret
js
jl
mov
out
sub
push
cmp
in
and
arpl
push
mov
gs
iret
js
or
push
pop
mov
xor
push
in
sbb
orl
jecxz
int3
sbbb
test
sbb
bound
mov
mov
lea
and
lods
movb
pusha
mov
test
notb
pop
int
inc
cmp
or
out
add
inc
dec
lea
sahf
lock
sbb
lret
sahf
xor
push
pop
insb
inc
add
iret
adc
out
js
jp
xor
fucomp
cltd
jp
add
push
xchg
cwtl
nop
mov
daa
inc
mov
test
cbtw
imul
push
push
lahf
sub
push
mov
sub
or
pop
push
adc
mov
xor
mov
cwtl
sbb
aam
repz
mov
dec
jno
imul
in
add
cmp
mov
mov
fidivrs
dec
or
sub
leave
xchg
das
pop
mov
leave
mov
cmc
push
push
mov
add
mov
aad
sub
add
or
mov
pop
into
push
hlt
in
roll
or
lods
push
cmp
das
inc
pop
push
push
dec
ljmp
mov
sbb
xor
mov
aad
lcall
rorb
add
roll
add
outsb
cmp
mov
fs
mov
dec
int
mov
adc
add
or
push
or
cmp
xor
pop
cmpsl
inc
fcom
daa
mov
daa
iret
adc
adcb
sbb
mov
mov
cld
loopne
adc
jo
sub
xchg
popa
adc
into
pop
pop
pop
rolb
decl
pusha
mov
dec
jns
dec
dec
das
cmp
out
and
sbb
push
and
mov
push
inc
pop
test
outsb
add
jle
mov
add
popa
sub
fidivl
sub
cltd
and
push
in
arpl
ret
mov
xchg
cmpsb
or
sbb
mov
decl
add
and
and
lea
andb
shr
shl
or
add
clc
and
dec
jge
xchg
xorb
test
jl
cmpsl
lods
jg
mov
ret
and
or
add
pop
pop
push
mov
call
outsl
cmc
mov
push
or
clc
add
mov
not
jle
or
stos
mov
add
pop
jbe
xor
iret
push
inc
add
sbb
and
mov
test
jmp
dec
adc
fadds
shrl
push
and
jbe
adc
xlat
pop
inc
push
inc
or
sub
into
mov
hlt
push
repz
inc
or
sbb
dec
add
cmpsl
test
pop
lods
std
push
inc
and
scas
cmc
sti
cli
cld
rclb
shrl
insb
pop
test
lret
outsl
or
push
add
lret
dec
lcall
inc
push
jmp
stc
iret
mov
dec
xlat
in
sub
pop
and
adc
xlat
loopne
xor
push
insl
sbbb
int
fstpt
test
aam
aad
lret
or
mov
add
cmp
std
mov
leave
jmp
jmp
push
xlat
mov
fs
fcomps
mov
loope
push
iret
lods
adcb
push
push
push
lahf
sub
es
sub
rol
xchg
xchg
int
imul
call
pop
scas
testl
in
punpcklwd
jle
or
mov
call
loop
pop
xchg
pushf
push
movsb
lahf
js
jle
std
push
inc
lcall
into
and
dec
or
sbb
sub
inc
pop
repnz
xor
adc
sub
push
and
nop
imul
enter
stc
inc
mov
addb
int3
xchg
aas
inc
sahf
dec
call
jbe
xchg
repnz
xor
xchg
jno
std
outsb
xchg
or
inc
fs
push
cmpps
dec
mov
and
adc
mov
cmpsb
sbb
push
pop
adc
pop
test
mov
add
icebp
mov
out
cmp
and
mov
push
mov
cwtl
jo
incl
sub
in
mov
xchg
xchg
ljmp
sub
cltd
ds
bound
xchg
cmpsl
push
push
sbb
pop
push
fwait
outsl
pushf
or
popa
mov
test
sar
in
icebp
scas
rclb
inc
mov
shlb
xchg
or
dec
jl
push
pop
pop
lret
xchg
and
adc
or
push
and
inc
sbb
rcrb
pusha
dec
test
dec
fwait
rcr
and
inc
push
add
xchg
rorb
mov
inc
insb
mov
mov
data16
or
loopne
inc
mov
ror
int
dec
push
fldt
push
xchg
push
pop
adc
push
repz
add
push
jle
in
xchg
jns
out
push
icebp
or
add
mov
mov
push
adc
add
fcmovu
mov
mov
add
aaa
and
or
and
lods
cld
fbld
adc
cli
shr
fisubrs
push
push
lods
into
mov
add
mov
out
rcrb
fwait
call
into
jg
xor
ret
dec
add
int
and
xor
cmpsl
jnp
fisttpll
mov
lock
cwtl
xor
dec
fistpll
cs
mov
xchg
jo
or
jns
push
cmc
xlat
dec
in
push
popf
push
ret
sub
aas
imul
ror
pop
or
mov
js
int
cmc
sub
ja
adc
inc
mov
mov
adc
pop
and
loopne
daa
mov
or
inc
fnstsw
push
push
cmp
ja
mov
in
adc
inc
and
lods
push
fcoms
jge
test
and
jecxz
sbb
pop
mov
jp
pop
sub
pop
icebp
push
mov
add
pop
scas
lret
add
fnstenv
sub
mov
or
test
cltd
aas
pusha
or
flds
outsl
addr16
mov
mov
iret
push
out
outsb
jnp
dec
mov
sbb
mov
insl
sbb
add
or
dec
push
sbb
cmpsl
js
pop
jp
or
adc
xchg
xor
data16
cwtl
insb
je
xlat
xor
add
hlt
xor
xor
bts
mov
add
add
cli
jmp
mov
lret
jg
ss
lahf
push
xor
inc
inc
mov
or
mov
jno
pop
pop
xor
into
repnz
mov
and
insl
jmp
adc
push
imul
mov
stos
sub
pop
cmp
les
adc
push
negb
lea
mov
std
shl
in
lret
aad
pop
std
fs
add
cmp
data16
fildll
fisubs
add
out
xor
sub
inc
out
jmp
add
xor
add
sbb
sar
mov
test
lret
out
push
jno
out
push
mov
push
fcmovb
js
mov
js
dec
mov
xchg
sub
roll
int
sub
in
dec
xor
push
sub
push
mov
mov
jno
jnp
sarb
je
lea
add
mov
mov
pxor
clc
fidivrs
fiaddl
int
imull
jg
popf
jle
sub
sti
push
and
sti
pop
pop
or
insb
jbe
das
mov
loopne
loopne
dec
sbb
mov
xchg
xlat
xor
xor
test
mov
lret
cli
daa
mov
adc
fcmovu
xor
xor
mov
xor
aam
in
andl
adc
pop
xchg
jno
cmp
je
imul
sub
adc
xchg
push
jle
loope
mov
dec
add
stc
and
mov
add
sbb
cmc
out
call
cmp
aam
sbb
test
and
insb
add
push
xchg
js
jo
stos
fs
adc
cmp
jecxz
mov
icebp
push
outsl
icebp
cmp
cmp
out
cmp
ret
in
jmp
clc
jl
jmp
add
cld
mov
and
adc
adc
data16
cmp
cli
cmpsl
movl
imul
inc
aam
cmc
movsl
dec
xchg
sbb
dec
jne
mov
sbb
mov
mov
sub
sbb
roll
sti
xorb
into
adc
or
push
pusha
icebp
ss
neg
arpl
test
cmp
aad
lret
aaa
xchg
and
loopne
test
xchg
sbb
sub
push
or
cs
int
dec
data16
cld
sub
push
adc
stos
adc
addr16
lahf
add
jge
and
lds
adc
lds
mov
sahf
cld
adc
ret
shrb
mov
test
cmp
push
or
ret
pop
pop
jmp
mov
inc
sbb
sahf
aaa
xchg
sbb
ljmp
testl
sub
incl
enter
or
outsl
dec
hlt
aas
sub
add
xlat
adc
jge
inc
sbb
in
js
and
jp
jns
repnz
std
xor
test
xchg
or
push
or
fisttps
mov
or
test
adc
cmp
xchg
dec
fdivp
jecxz
jae
adc
jle
outsl
mov
mov
lods
inc
adc
cmp
sub
aad
cli
or
adc
jo
cmp
xchg
sahf
adc
and
out
incb
adc
pop
pop
rcl
movsb
xor
iret
jmp
xchg
and
add
xchg
jp
test
cmp
stos
xchg
inc
mov
or
xor
test
mov
jne
mov
push
test
jle
div
nop
sub
aaa
pop
ret
shrl
jecxz
dec
jne
in
insb
fnstsw
andb
repnz
xor
hlt
icebp
adcb
rcl
sub
adc
dec
mov
mov
aad
pop
push
mov
mov
xchg
roll
out
push
sub
or
je
mov
mov
gs
sbb
es
add
lds
in
inc
inc
clc
mov
push
ret
add
push
inc
jge
popf
stos
cld
cmp
adc
cmpsb
inc
or
scas
mov
mov
test
in
and
fisttpl
push
fwait
inc
pop
adc
stos
jae
rclb
push
movsl
sub
ljmp
adc
add
inc
arpl
dec
ret
mov
push
mov
andl
mov
outsb
mov
pop
bound
mov
push
add
and
push
lret
jle
add
adc
outsb
pop
iret
ficoml
in
xchg
add
inc
std
sbb
push
or
clc
pop
jge
orl
inc
xlat
pop
cmp
jl
rsqrtps
aaa
movsb
mov
mov
xor
cmp
nop
cmp
pop
shr
mov
inc
add
or
inc
jo
push
jg
jp
ret
mov
or
stos
stos
xchg
adc
leave
mov
mov
mov
fs
jl
comiss
lods
xchg
add
fisttpl
mov
or
fiadds
mov
test
inc
push
add
dec
data16
cld
cmp
mov
mov
mov
arpl
xor
push
mov
mov
dec
je
xor
rorb
bound
loop
aam
stc
scas
aad
xor
xor
mov
mov
mov
add
fsubs
adc
add
jne
aaa
rclb
inc
aas
loop
pop
xor
mov
mov
fisttps
or
mov
mov
adcl
jo
push
nop
sub
adcb
pop
or
inc
andb
xor
xchg
push
mov
and
cmp
mov
outsb
pop
stos
call
es
push
subb
cmp
aaa
je
add
fstps
fstps
movsl
push
push
adc
xor
pop
pusha
mov
ret
push
outsl
cmpl
ss
sbb
lds
test
dec
add
jb
pop
ret
or
mov
test
and
addr16
pop
sbb
and
jnp
mov
scas
push
mov
mov
rcrb
cmp
das
pop
cld
xor
rorl
das
cmpl
add
add
out
sub
sbbl
or
mov
rorb
mov
cmp
mov
push
pop
cwtl
add
sbb
fisttpl
mov
aas
outsl
pop
cld
adc
and
std
jbe
jno
stos
loopne
fistpl
dec
stos
inc
add
jge
icebp
mov
clc
push
mov
mov
dec
lds
inc
mov
cmp
adc
ja
adc
sarb
inc
push
xchg
or
ds
or
sub
mov
pop
cmp
mov
out
rcrl
xchg
pop
jp
ja
jo
int3
push
and
add
std
xor
test
or
push
cmp
rclb
jbe
jl
mov
js
fsub
jo
loop
jo
sub
push
in
adc
dec
or
test
insl
inc
xchg
sbb
sar
mov
cmp
and
mov
or
fwait
xchg
out
add
add
outsb
movsb
pop
adc
enter
les
cmpsb
dec
xchg
fidivrs
lds
mov
les
mov
fiaddl
cmp
insl
subl
xchg
mov
inc
sbb
in
sahf
push
mov
sub
and
push
call
out
cli
popf
out
adc
mov
ror
sbb
mov
lea
shr
movl
test
cmp
daa
je
mov
mov
orb
sbb
shlb
push
pop
add
andb
adc
mov
mov
xchg
lret
nop
adc
dec
cli
popf
movsb
ret
xchg
pop
mov
push
aam
sub
mov
mov
jp
inc
adc
lret
dec
les
push
ficomps
pop
mov
rcl
fdivrs
push
mov
int3
and
sub
push
pushf
mov
and
lock
adc
test
aam
lret
bound
inc
jl
mov
fmull
dec
rclb
mov
and
fcomps
sarb
in
xor
cwtl
imul
inc
mov
add
sub
out
push
push
add
aam
xor
repz
ss
sbb
sub
add
cmp
lock
outsb
push
push
ret
jge
cmp
jge
mov
or
insl
imull
add
enter
mov
roll
in
push
sbb
pop
test
mov
movsw
imul
es
repnz
icebp
pop
xchg
jl
cmpsb
or
lea
add
push
mov
push
icebp
mov
movsb
push
pop
les
mov
mov
lret
hlt
mov
out
popf
mov
jl
add
daa
jle
dec
xor
inc
in
sti
xchg
pop
mov
stos
mov
int
int3
lret
rorl
or
inc
xor
lods
jg
test
sub
fsts
cmp
bound
jnp,pt
inc
sub
inc
inc
sub
bound
sub
out
dec
adc
or
ljmp
push
sbb
enter
into
shlb
into
aad
pop
cmp
or
jb
mov
inc
gs
cmp
inc
cmpsb
adc
shrb
repz
sub
pop
push
xchg
fidivrl
addr16
cwtl
xor
adc
sbb
xchg
pop
jo
movsb
inc
mov
sbb
lds
test
mov
xor
add
xor
test
xchg
stos
mov
or
add
or
scas
sbb
push
sub
rcll
pop
test
into
or
xor
sub
push
push
push
int3
lods
xor
mov
adc
ljmp
mov
sbb
lret
mov
divb
shrb
mov
xchg
mov
in
add
rorb
or
xor
jmp
mov
bound
je
mov
xchg
push
push
arpl
mov
lock
sbb
mov
ljmp
aad
mov
or
repnz
or
dec
push
mul
mov
cmc
mov
and
out
movsb
pop
mov
mov
popa
iret
push
pusha
int3
into
inc
aad
lcall
sub
cmp
fdiv
fwait
add
arpl
xchg
leave
in
push
loope
lret
pop
mov
pusha
xor
mov
sbb
lea
cmp
popa
dec
pusha
movsb
dec
adc
and
or
cld
or
or
mov
mov
jno
sbb
xor
xchg
enter
lahf
loop
movsb
mov
mov
adc
push
test
rorl
lcall
flds
into
outsb
gs
sub
add
xchg
stos
jl
fisubl
popa
lods
cmp
dec
mov
mov
push
mov
inc
test
test
mov
adc
mov
leave
and
jo
or
inc
adc
sub
popf
adc
adcb
xor
push
in
jo
imul
xchg
xchg
and
test
sub
dec
push
fldl
into
push
int
xchg
mov
nop
js
loopne
pop
mov
jmp
and
out
mov
lods
ret
ljmp
ss
or
cmp
inc
xor
scas
imul
addb
adc
push
xor
sub
adc
scas
jmp
mov
pop
xchg
pop
or
mov
pop
stos
mov
sbb
mov
jg
pop
inc
rclb
pop
dec
fwait
cwtl
jmp
xorl
hlt
out
fldcw
mov
iret
rcl
xchg
mov
cmp
test
js
addb
and
mov
push
xchg
hlt
stc
mov
adc
call
cmc
cmp
xor
push
sub
inc
push
bound
sbbl
cld
xchg
lds
les
push
pop
stos
jnp
aam
or
icebp
and
sub
sbb
push
or
or
in
and
or
in
xor
fs
leave
mov
cmp
shll
jo
inc
push
sub
adc
dec
dec
xchg
mov
mov
mov
daa
xor
movl
enter
roll
sbb
and
or
lds
xchg
adc
xchg
dec
mov
push
fadds
xchg
xchg
adc
sub
cmp
jg
fistpll
dec
sbb
add
cmp
fs
add
dec
pop
dec
dec
scas
and
sti
mov
or
or
push
jae
add
add
inc
les
mov
cs
or
into
push
sub
add
les
stos
mov
inc
inc
aaa
xchg
push
lahf
xor
test
out
xor
push
rol
mov
cmp
movsb
jno
orb
jbe
iret
outsl
or
ss
push
divl
push
dec
inc
mov
adc
bound
sbb
mov
lret
scas
mov
clc
mov
rcl
sub
shll
xor
or
sbb
outsl
js
call
xchg
adc
or
and
mov
adc
and
mov
loope
jp
push
sti
sbb
pop
loopne
lret
mov
push
or
dec
out
xchg
mov
jne
xor
stos
subl
pop
pushl
dec
push
aam
xchg
adc
pusha
add
mov
mov
filds
pop
and
xor
cwtl
inc
mov
test
dec
movsb
ds
rolb
aad
int3
dec
lds
into
fisubs
bound
push
adc
sbb
loop
or
sbb
push
mov
out
add
loopne
icebp
and
mov
dec
cwtl
lea
insl
xchg
push
lahf
mov
adc
mov
aad
mov
test
cmp
mov
stos
push
mov
cmp
push
call
jns
addr16
aam
or
int3
jo
push
aam
adc
addr16
sbb
push
jge
ljmp
aam
sub
mov
sti
nop
dec
nop
ja
int
test
nop
push
push
xor
xchg
push
or
inc
and
or
mov
adc
lods
adc
fisubrs
ret
and
mov
rclb
fiaddl
sub
sub
aam
sbb
fsubp
pop
push
inc
jp
inc
sarb
cs
ret
ret
mov
push
or
xchg
sub
or
and
mov
lock
shlb
sti
sub
mov
mov
xor
jae
movsl
push
bound
adc
xlat
movsb
xor
push
addr16
int
xor
push
xor
test
mov
movl
mov
pushl
or
sbb
jne
jo
mov
push
mov
mov
push
add
pop
test
push
pop
push
ja
loope
faddp
push
je
cmp
repnz
jno
push
loop
add
les
mov
mov
push
xchg
jmp
adc
fdivp
sbb
xchg
adc
jle,pn
mov
call
mov
add
dec
mov
in
push
aaa
andb
lea
mov
or
inc
dec
inc
xchg
pop
icebp
jae
adc
or
inc
sub
std
lods
and
dec
dec
cwtl
mov
inc
mov
mov
xchg
dec
adc
movsl
sbb
mov
xor
dec
adc
push
jle
mov
mov
and
push
jp
js
mov
adc
jne
jo
pop
adc
dec
sbbb
mov
add
mov
ret
cmp
add
lods
mov
cltd
adc
call
push
je
inc
stos
mov
jp
add
sub
scas
mov
shlb
cmp
and
sub
nop
jmp
mov
mulb
sbb
lret
sub
mov
push
mov
out
mov
nop
addl
adc
movsb
or
sbb
nop
mov
add
int3
push
sbb
add
adc
enter
adc
movsb
pop
push
lea
jbe
orb
lock
shl
cltd
dec
mov
jl
mov
mov
pop
or
stos
js
ret
test
call
jo
push
mov
gs
rolb
test
push
addr16
and
in
lea
cmp
mov
sti
sete
stos
cld
jl
cltd
add
adc
mov
sub
rolb
pop
cmp
fsubrs
out
call
sbb
adc
leave
mov
insl
lds
push
mov
mov
loopne
or
xchg
mull
addr16
je
sbb
shrb
jmp
lcall
lods
lds
int3
cmpb
jge
mov
mov
pop
adc
push
push
or
push
movsb
aaa
insb
gs
mov
vmovntpd
negl
and
add
push
xlat
xor
mov
aaa
add
add
dec
inc
sbb
sub
dec
cmp
adc
lods
pop
mov
test
inc
jge
dec
add
lds
push
add
and
adc
xor
mov
adc
enter
call
in
add
inc
imul
xchg
mov
in
inc
das
sub
sbb
cmc
xor
and
push
lds
xor
rcrb
cmp
pop
inc
pop
pop
jecxz
and
mov
sub
test
adc
aaa
push
mov
movsb
mov
rcrl
jge
inc
outsl
adc
outsb
loopne
add
loope
pop
sarb
inc
sub
aaa
in
pop
cmp
cmp
sub
inc
push
sti
push
inc
push
test
push
xor
adc
xor
push
xor
and
fs
push
push
xor
dec
je
int3
insb
mov
inc
pop
xor
loope
shlb
mov
aaa
cmp
ficoml
jnp
sahf
pop
inc
or
sbb
sbb
popf
xorl
pop
sbb
add
or
out
lcall
movsb
dec
add
pop
inc
sbb
shrb
bound
lods
dec
or
sti
test
cmpsl
add
and
dec
cwtl
scas
cmpsb
lea
adc
pop
xor
adc
push
dec
push
rclb
pushf
push
pop
clc
pop
xchg
adcl
data16
push
aas
mov
sahf
fstps
in
ret
sar
comiss
or
test
fwait
dec
enter
xorb
adc
sbb
sbb
dec
cmp
jg
mov
and
bound
loope
jge
inc
test
rorl
or
incb
repz
xchg
div
push
or
out
add
jle
xor
inc
or
popa
outsb
and
mov
and
xchg
and
adc
test
mov
mov
mov
mov
notb
and
mov
es
xchg
xor
movsl
mov
test
or
pop
out
mov
addb
mov
and
sub
xchg
xor
adc
cmp
adc
jne
and
mov
call
gs
mov
pop
inc
stos
push
xor
sbb
call
sti
test
and
xchg
cmp
adc
jecxz
xchg
out
mov
adcl
mov
sub
or
push
aas
jo
mov
pop
and
dec
ja
pop
sti
and
mov
pusha
ret
or
fnstenv
pop
test
mov
out
cmp
sar
sub
lahf
movsb
mov
jbe
pop
add
mov
xchg
xor
inc
xor
test
pop
fcomps
adc
pop
outsb
fsubrs
faddl
adc
jae
mov
xchg
mov
mov
fldl
cs
inc
test
ret
mov
add
mov
adc
shlb
lock
adc
movsb
inc
mov
mov
add
or
test
sbb
pop
dec
push
in
mov
xchg
cmp
outsl
sub
mov
dec
push
adc
adc
mov
jne
orl
mov
cmpb
cmp
jmp
sub
sahf
add
cmp
pop
lods
mov
daa
mov
sub
jge
std
push
pop
adc
pop
aad
add
sbb
test
sub
les
pusha
dec
lret
aam
jne
or
or
xor
push
mov
xchg
dec
cs
adc
sub
adc
inc
mov
insb
xchg
jo
sbb
out
sbb
xchg
call
test
mov
xor
int
xchg
mul
or
cmp
or
cmp
xor
jbe
clc
xlat
lahf
push
inc
lock
and
lret
scas
jnp
aas
lahf
mov
shlb
cli
loopne
push
lock
mov
xchg
cmpsb
adc
adc
push
andl
adc
cmpb
jo
jmp
xchg
ret
es
push
push
pop
xor
inc
outsl
insb
test
clc
jp
mov
xor
sbb
dec
out
pop
xchg
mov
adc
dec
insl
in
ja
pop
loop
inc
enter
adc
cmpsl
sbb
jge
sbb
push
sarl
sbbb
add
inc
mov
pop
lcall
push
fs
jo
in
cwtl
mov
push
xor
mov
bound
mov
repnz
mov
push
xor
rcr
fwait
mov
mov
mov
scas
lcall
je
mov
mov
add
sub
adc
dec
subb
add
or
lea
leave
mov
je
pop
cmp
jbe
sub
mov
pop
or
dec
fiadds
inc
imul
mov
adc
push
xchg
xor
or
mov
sbb
or
fwait
addb
add
or
pop
dec
pop
mov
rclb
ret
fwait
xor
cmc
push
xchg
and
enter
cs
inc
dec
outsl
dec
inc
es
rclb
lock
shrb
xchg
add
in
cmp
adc
fsubrs
or
push
mov
mov
call
and
into
cmp
adcb
roll
int
lret
movsb
sub
push
lret
enter
rol
or
shlb
fsts
lret
mov
or
inc
xchg
dec
pop
es
add
dec
test
iret
mov
int
mov
push
or
sbb
jecxz
bound
add
mov
nop
add
rorb
dec
mov
add
pop
sub
and
pop
sub
and
pop
sub
inc
dec
lret
add
mov
xor
cmp
add
push
sub
shrb
or
sub
shrl
shrb
ss
inc
and
mov
xor
cmc
je
push
sub
cmp
js
cmc
xchg
cwtl
ja
dec
push
in
cvtpi2ps
adc
jb
sti
cmpsl
mov
and
mov
pusha
push
or
cmp
dec
ss
aam
or
and
dec
incl
adc
xchg
adc
mov
mov
mov
push
testl
or
and
cs
sbb
mov
cmpb
insb
mov
push
ret
mov
repz
out
jbe
mov
pusha
pop
and
push
in
xlat
shl
xchg
mov
repz
or
nop
pop
dec
out
xchg
dec
shl
and
sub
sub
add
scas
cmp
dec
mov
jb
nop
in
sbb
lds
and
adc
jp
loope
mov
and
push
add
loope
fcompl
shll
dec
jbe
xchg
imul
out
pushl
sub
push
icebp
fistl
sub
dec
jae
add
and
cmp
rorl
cli
mov
mov
push
and
lock
mov
gs
cmp
stos
imul
mov
xor
push
mov
rcrb
push
mov
xor
jp
mov
xchg
out
cld
mov
arpl
inc
push
push
jae
movsl
lds
jne
adc
sub
fbstp
ss
mov
out
and
ret
sbb
and
jl
loop
stos
in
adc
test
rolb
movsl
pop
jb
sbb
inc
or
push
int3
push
mov
dec
push
icebp
add
sbb
mov
add
movl
repz
scas
push
mov
add
xor
pusha
jne
scas
fnstenv
js
jo
push
mov
mov
mov
push
loop
stos
mov
push
call
ret
rolb
outsl
lret
test
outsl
jbe
cmp
jne
ficoms
mov
fstps
mov
xchg
push
pop
cli
push
mov
pop
dec
pop
adc
add
ror
stos
dec
leave
inc
adc
cmc
xchg
push
jo
rcl
sahf
das
in
dec
mov
sub
dec
fiadds
dec
adc
pop
jp
sbb
cld
mov
inc
and
test
mov
xor
add
inc
add
and
pusha
cld
inc
pop
aad
cmp
jae
push
inc
adc
mov
dec
subb
fisttpl
mov
cmpsl
leave
and
and
movsb
adc
push
jns
push
mov
aam
push
add
test
and
sahf
repz
pop
nop
or
ret
mov
stos
or
sbb
outsb
jecxz
scas
mov
mov
sub
insl
mov
add
sub
iret
xorb
adc
das
arpl
dec
push
or
stc
insl
shlb
adc
addr16
inc
push
gs
int
adc
push
mov
xor
and
outsb
push
jmp
pop
mov
or
sbb
jno
pop
icebp
xorb
and
push
dec
adc
mov
add
xchg
cmpsb
lock
and
mov
adc
adc
cmp
inc
adc
and
sub
push
mov
mov
sbb
and
shll
dec
push
jo
into
movsb
jbe
add
lcall
sbb
xor
mov
jmp
mov
mov
inc
or
add
loopne
add
sub
inc
sub
mov
mov
jns
enter
ljmp
sub
jae
xlat
sbbl
sub
push
mov
ds
leave
andb
loopne
dec
loope
adcb
imul
test
or
jo
push
mov
and
mov
std
adc
mov
cmp
mov
mov
jnp
add
js
neg
jge
add
and
dec
add
into
mov
push
inc
xor
dec
or
mov
shlb
fwait
in
pop
fstp
and
inc
push
add
pop
mov
add
and
ffree
icebp
cmp
out
mov
inc
pop
addb
and
sub
leave
mov
xchg
mov
and
insb
in
cmp
push
inc
pop
aaa
jp
inc
sub
hlt
mov
nop
xchg
xchg
pop
mov
cs
bound
lret
les
lcall
pop
push
sti
sbb
dec
ficoml
lea
xchg
xchg
ds
inc
sarl
shrl
mov
cmp
push
orl
pop
sub
xor
ret
mov
mov
roll
dec
daa
int
push
stos
bts
fwait
imul
mov
pop
lods
inc
xchg
loope
out
add
or
or
and
cli
lock
neg
push
nop
lods
scas
xchg
es
test
cmpsl
scas
and
add
inc
cli
push
push
enter
mov
jo
mov
add
orl
adc
or
insb
ss
jecxz
gs
jo
xor
or
or
setns
fcoms
mov
je
jge
xchg
sub
jmp
jae
mov
push
stos
dec
sbb
stc
aaa
fbstp
popl
rolb
pop
sbb
inc
imul
push
inc
pop
fisubrs
add
inc
inc
mov
xchg
push
icebp
sbb
inc
pushf
and
cltd
cmp
cmpsl
or
adc
adc
adc
inc
cmpsb
jmp
je
sub
loopne
pop
mov
inc
test
sub
lea
or
or
shll
sub
and
int
sbb
add
or
les
aad
out
or
jbe
inc
jne
inc
push
push
sub
inc
lret
and
in
dec
push
shll
movsb
sub
dec
inc
pusha
xor
jo
mov
xchg
sbb
inc
inc
mov
fs
jae
adc
orb
mov
es
ret
inc
or
popa
dec
mov
xor
cli
jne
adc
loop
flds
cli
movsl
sbb
and
mov
and
or
inc
test
dec
jae
ret
mov
push
jns
sub
shll
jns
mov
iret
inc
or
push
cwtl
cmp
add
add
repz
inc
or
inc
cwtl
pop
ret
aaa
mov
jb
jmp
clc
xchg
test
fmul
inc
inc
xor
int
sub
inc
push
call
inc
pop
adc
xchg
dec
call
mov
aam
push
mov
sbb
mov
rolb
cmp
adcl
fisubl
push
dec
xor
mov
sbb
dec
mov
lods
nop
adcb
sub
add
call
leave
xchg
sub
inc
xor
mov
adc
nop
addr16
inc
sub
je
mov
cltd
iret
pop
iret
dec
mov
sbb
inc
iret
iret
dec
push
mov
mov
add
push
xor
shrl
mov
pop
sbb
js
xchg
jo
mov
push
mov
mov
add
or
or
and
sub
fwait
mov
cmpsl
in
mov
mov
adc
ds
pop
add
mov
or
lahf
insl
leave
or
push
mov
insl
and
or
and
insl
filds
or
add
insb
mov
insl
shrb
insl
aam
fldcw
sbbb
or
lret
rorl
push
jmp
xchg
adc
xor
and
add
mov
add
dec
mov
lods
leave
xchg
lock
sar
add
dec
nop
fidivrl
lret
insl
and
or
push
test
push
pushf
xor
inc
or
or
fcomp
add
dec
xchg
and
scas
fiadds
lods
jo
push
je
lret
stc
jmp
and
mov
add
sbb
dec
loopne
cld
stc
pushl
pushw
cs
xchg
leave
add
or
sti
mov
push
fldl
mov
add
inc
rcrb
jno
inc
movsb
mov
ss
pop
les
jno
xchg
cwtl
add
and
xchg
cwtl
leave
test
test
xchg
mov
pop
aaa
mov
adc
mov
jb
aad
mov
aas
lods
aaa
arpl
push
and
imull
dec
add
adc
daa
sbb
add
popf
cmp
ja
addb
add
mov
insb
push
es
shrb
out
sbb
mov
ljmp
mov
push
or
xchg
arpl
jno
lds
into
ret
add
ret
sub
mov
or
inc
xor
shlb
outsl
add
and
aaa
mov
out
inc
inc
shrb
and
inc
mov
ljmp
mov
pusha
adc
push
push
mov
or
int3
enter
mov
stos
stos
dec
xor
addb
mov
add
cwtl
inc
cmp
popf
or
ret
push
cmpsb
add
add
sbb
lds
sub
int3
clc
mov
shlb
jno
cmp
in
adc
add
and
and
and
jnp
xchg
or
loopne
in
cmp
mov
mov
mov
mov
xlat
mov
ds
mov
cmp
xor
sbbl
adc
pop
or
das
xchg
cmp
scas
cmp
pop
pop
or
mov
stc
mov
nop
sbb
fcomp
adc
cmp
fsts
add
and
xchg
or
lcall
sbb
popa
xchg
popl
mov
pusha
popf
push
and
fisttpll
aam
push
mov
mov
jae
xor
sbb
jbe
sbb
sub
imul
lret
push
pop
xor
sbb
mov
cmp
push
lds
sub
jecxz
in
loopne
add
jns
shrl
mov
dec
push
and
add
in
das
sbb
gs
pop
xchg
push
or
jl
pop
daa
sub
sub
xchg
cld
out
sbb
into
add
pop
pop
mov
xor
enter
push
jno
push
xor
aas
mov
insl
push
add
push
push
lods
sbb
add
and
jo
dec
push
mov
add
and
jge
sub
hlt
sbb
dec
pusha
pop
loop
cmp
flds
je
icebp
icebp
lods
push
inc
xor
jb
outsb
jmp
add
lock
mov
pop
mov
leave
jo
fldcw
and
push
sbb
push
or
adc
cld
jmp
and
js
xorb
inc
lret
cmp
test
xor
pop
stc
or
call
and
adc
xchg
loopne
out
in
or
jbe
leave
mov
test
mov
aaa
mov
inc
call
mov
hlt
rolb
add
cmp
jne
adc
icebp
jne
mov
imul
sub
dec
shl
sbb
or
sbb
insl
push
rorb
fisubl
sbbb
xchg
dec
or
icebp
push
xchg
and
push
sbb
test
mov
enter
sbb
test
aaa
in
adc
sbb
mov
cmpsb
dec
inc
in
inc
inc
pop
mov
or
adc
cmp
jmp
sub
sub
mov
mov
mov
add
fwait
sbb
jle
orl
mov
lods
inc
xchg
pop
leave
sub
cltd
xchg
jmp
mov
jb
lds
jae
stos
das
dec
rorl
push
inc
push
or
add
lds
add
adc
add
adc
adc
adc
fsubrs
jae
and
arpl
jl
sub
cmp
pop
int
mov
jl
xor
cmp
mov
cmpb
cmp
mov
cmpb
es
push
outsl
repz
cmp
or
ss
das
add
fnstcw
in
add
lods
mov
jle
add
test
mov
scas
ss
push
in
mov
jb
je
andb
pop
sbb
stc
cmp
scas
daa
fsts
xorb
push
push
mov
inc
inc
mov
cmc
out
fsts
lcall
outsl
je
hlt
pop
aam
fsubrl
je
fbld
iret
out
jne
outsl
mov
or
test
inc
sbb
std
mov
push
dec
int
dec
push
dec
mov
ret
nop
push
inc
jbe
addb
xchg
js
fs
cmp
iret
jmp
out
stos
ja
cmc
adc
dec
add
leave
push
xchg
fists
mov
xor
mov
inc
lcall
push
mov
mov
js
sub
mov
dec
xor
std
push
cmc
fdivs
and
or
movsb
stos
sub
sub
sbb
cltd
add
mov
sub
and
gs
jb
popa
jbe
les
imul
and
imul
sbb
xor
cmpsb
into
add
popa
dec
adc
sub
stos
test
and
pop
push
adc
inc
push
jge
outsb
inc
adc
push
adc
pop
scas
adc
repz
push
adc
mov
mov
and
adcb
das
frstor
and
lret
lods
sub
jmp
lods
orb
xchg
push
loopne
std
in
stos
xchg
popa
inc
les
and
inc
dec
xchg
and
adc
dec
push
adc
and
push
push
test
sbb
sub
mov
sbb
jl
xor
mov
hlt
jns
hlt
test
lret
xor
shlb
mov
mov
jb
lods
mov
test
adc
add
mov
popa
add
mov
lds
adc
lods
push
adc
inc
or
sub
sub
xchg
push
mov
and
xchg
pop
jl
sub
or
or
andb
arpl
pop
fwait
test
jnp
repnz
and
adc
mov
and
insl
mov
inc
sub
pop
dec
dec
sub
inc
jnp
pop
lret
and
mov
or
jbe
mov
inc
dec
push
mov
sub
in
inc
mull
add
mov
lock
pop
ss
sub
or
mov
add
sub
sti
adc
xor
lcall
cmpb
lds
and
mov
and
out
mov
cwtl
stos
popa
mov
inc
sahf
test
or
inc
mov
or
xorb
add
ds
mov
adc
sbbl
ret
inc
inc
mov
mov
sbb
adc
xor
push
xor
jecxz
add
popf
and
pushf
bt
push
mov
mov
sub
mov
add
jmp
push
xlat
push
mov
fisubrl
sbb
imul
mov
outsl
and
test
adc
pop
pop
aad
push
cli
xchg
sub
mov
mul
or
les
add
adc
pop
add
insl
adc
push
roll
mov
rorb
jb
enter
je
repnz
mov
xchg
pushf
testl
fistpl
mov
call
xor
arpl
imul
fs
jl
rclb
push
inc
push
aad
pop
push
icebp
or
pop
rorb
mov
leave
orl
mov
adc
pusha
push
inc
inc
add
stos
loopne
push
inc
sub
push
insl
rorl
add
dec
adc
mov
loopne
insb
lea
loop
or
mov
les
in
mov
or
sub
mov
inc
fwait
mov
jmp
and
je
maxps
xor
and
sti
lods
insl
mov
dec
mov
mov
and
dec
test
shl
in
or
mov
or
adc
pop
inc
push
xor
dec
daa
sbb
dec
mov
cmp
dec
and
jmp
das
adc
and
dec
mov
push
fadds
int3
faddl
loopne
arpl
int
adc
adc
xor
and
out
mov
inc
cmp
and
xchg
push
arpl
andl
dec
dec
mov
and
dec
inc
mov
das
loope
movsb
add
inc
jae
mov
adc
dec
and
out
stos
mov
sub
jbe
add
loope
testb
mov
push
lret
mov
add
inc
shl
fadd
mov
mov
aam
shl
sub
pop
adc
sub
or
in
mov
xor
push
jmp
mov
xchg
dec
call
pushf
mov
int3
fwait
mov
stos
adc
xor
jb
test
or
and
push
iret
mov
out
enter
or
xor
out
incl
rol
jle
cmp
cmp
pusha
add
inc
sbbl
rol
sub
fildl
out
push
insl
xor
sub
add
and
push
inc
lea
popa
dec
int3
popa
rcrl
popa
rcrb
add
les
ljmp
outsl
dec
adc
push
lock
sbb
jle
sbb
and
fisttpll
sub
pop
push
add
jbe
cld
lret
push
and
lea
out
and
int3
scas
push
push
xchg
dec
push
sahf
daa
mov
add
aad
cmp
inc
fst
lret
lcall
add
shl
mov
pop
mov
ret
data16
stc
insb
sbb
mov
inc
jo
lods
xchg
cwtl
popf
push
pushf
mov
sub
inc
sbb
das
data16
add
negb
adc
sbbl
adc
stos
ljmp
add
sub
xor
insl
and
mov
ja
mov
inc
mov
jle
and
je
mov
sbb
inc
insb
pop
pop
rolb
ret
sub
movl
add
cmc
fidivl
test
inc
addl
int3
jmp
xor
xor
pushl
rolb
sbb
dec
aam
int3
and
pop
enter
fidivrl
jmp
pop
inc
fisubrs
clc
call
and
mov
and
fcompl
add
dec
push
outsb
pushf
xchg
dec
fadds
adc
push
rcrb
push
or
rorb
adc
dec
or
in
mov
pop
aam
je
push
cmp
sbb
std
push
in
cmp
cmpsl
pop
sub
pop
xchg
ja
js
mov
add
insl
xchg
xorb
lock
xchg
mov
or
or
push
xchg
and
leave
xor
or
push
loop
or
bound
inc
hlt
adc
sub
adcb
lods
mov
mov
loop
jne
andl
add
adc
cmp
and
cld
jmp
bnd
inc
pmulhw
insb
fcmovne
add
add
add
sub
push
imul
gs
xchg
inc
mov
jno
xor
nop
ret
popa
add
pop
pusha
out
pop
cmpsb
test
jmp
mov
cmp
cmp
mov
inc
or
addl
subl
jo
mov
aas
dec
loop
ljmp
cmp
and
sub
inc
mov
push
add
ret
movsb
enter
mov
std
je
icebp
test
mov
in
aam
push
dec
push
fs
push
mov
xor
addb
pop
mov
jne
shll
cmpsb
jbe
outsb
inc
popf
test
push
xchg
or
xchg
xchg
pop
scas
cmc
pop
cmp
jge
ss
das
add
pop
and
push
adc
sti
mov
adc
push
push
xor
cmpsb
xor
or
dec
add
sbbb
mov
movsb
or
je
jle
data16
mov
loopne
sbb
or
shr
jae
movsb
movsl
pop
mov
mov
sbb
inc
push
sub
mov
shr
lods
inc
cmp
jne
stos
rclb
sbb
test
not
jns
daa
jns
lret
inc
faddl
jo
adc
mov
dec
inc
adc
aam
cs
push
jne
mov
add
xchg
enter
xor
or
mov
fidivrl
fstl
into
mov
stc
icebp
sbb
lret
mov
xor
inc
cmc
and
add
xor
sbbb
jne
pop
loopne
mov
pop
sbb
xorb
jge
push
int
cmovl
push
jns
mov
fdivl
xchg
and
lea
ss
fadds
inc
and
sbb
push
andl
dec
xchg
jle
inc
and
scas
and
loopne
jno
dec
adc
xor
lahf
add
loopne
xchg
cmp
test
or
nop
out
cmp
mov
stc
sbb
dec
addb
mov
rcrl
leave
loope
dec
add
andl
adc
outsl
push
jge
inc
subb
repnz
xchg
sbb
mov
sub
inc
push
mov
inc
and
or
addb
add
dec
xor
add
or
push
cld
lret
ficoml
push
not
ror
and
and
mov
or
push
das
sbb
pop
test
shrb
xor
adc
inc
push
xchg
test
es
imul
push
or
xchg
addr16
and
loopne
pop
shlb
sbb
and
jo
push
loope
je
dec
adc
or
inc
iret
jge
jmp
insb
repz
sub
adc
mov
push
mov
adc
jp
mov
dec
out
sub
mov
or
and
mov
mov
xchg
das
aaa
push
pop
inc
and
test
push
pop
xor
add
inc
cmp
jne
js
add
push
fisubl
rolb
or
je
mov
pusha
push
adc
roll
xor
dec
xlat
pop
mov
xor
js
in
sbb
mov
lods
mov
mov
add
mov
add
iret
cld
sbbb
or
xlat
push
adc
cmp
daa
add
cmpsb
add
shrl
call
dec
rclb
sub
adc
or
lods
call
sub
adc
icebp
aam
adc
sub
inc
inc
je
jb
cmp
sbb
outsb
inc
and
adc
loop
push
dec
sbb
push
ljmp
hlt
in
xchg
push
addps
sbb
xlat
scas
into
movsl
and
cwtl
push
icebp
movsb
mov
pushf
push
cs
es
push
test
push
in
std
pop
int3
imul
add
mov
cld
cmp
outsb
int
pop
adc
bsf
aas
push
adc
in
jno
mov
lods
lea
push
mov
test
shrb
adc
cmp
add
decl
into
loop
punpckhwd
insl
push
xorl
jge
pop
sti
je
in
or
je
or
sahf
ret
jmp
rorl
popf
dec
mov
int
stos
cmpb
mov
sbb
ljmp
or
nop
push
and
stos
dec
mov
jbe
icebp
fs
cmp
cmp
in
or
add
aam
sub
test
icebp
cmp
fsubrs
sbb
or
cmp
test
push
xor
mov
sbb
xor
shll
sub
movsb
dec
sbb
jl
cmp
lret
add
xchg
inc
das
daa
lods
add
adcb
lods
test
rclb
icebp
jecxz
add
pop
nop
pop
xchg
clc
hlt
shlb
add
insb
pusha
fs
add
mov
stos
mov
mov
movsb
pop
adc
sub
das
es
xchg
pop
push
push
add
add
and
sbb
cmp
sbb
dec
push
mov
add
insl
fs
test
sub
add
loopne
insb
rorb
stc
addb
push
cmp
lods
add
add
jo
add
mov
jecxz
pop
cmp
and
adc
mov
in
insb
add
ret
mov
push
lds
sub
mov
adc
push
fs
push
cmp
imul
shll
loop
xor
cmp
dec
pop
add
mov
dec
lock
fs
outsb
pop
pop
dec
add
xor
jo
and
cmpsl
int
inc
sub
push
cmp
out
mov
shll
fstl
mov
sub
mov
imul
add
sahf
adc
mov
es
and
lcall
lcall
inc
dec
cmp
adcb
xlat
or
mov
inc
pop
repnz
mov
mov
insb
xchg
xor
and
and
inc
int3
add
push
sub
dec
mov
out
and
push
add
mov
cli
incl
mov
aas
divb
orb
jae
sub
sub
sbb
sbb
fldt
push
test
mov
xchg
sbb
mov
or
adc
sbb
jb
mov
mov
or
mov
or
inc
mov
push
sahf
adc
inc
xor
push
lcall
fcomp
add
fcompl
lret
shl
push
and
sbb
sub
add
adc
mov
inc
sbb
aaa
jge
cmc
xchg
test
push
aas
jnp
cmpsb
push
mov
pop
je
and
cmp
mov
mov
dec
cmp
int3
fcmovnu
cld
es
cmp
pop
and
add
scas
insb
add
mov
jb
xor
xor
add
and
in
adc
pop
nop
xchg
lea
rcr
sbb
add
ret
test
movsl
sbb
jecxz
sub
pop
pop
xchg
or
faddl
mov
outsl
mov
or
lea
mov
in
adc
mov
inc
in
scas
in
xchg
mov
test
test
add
test
fldz
xor
mov
daa
imul
adc
in
loope
lds
movl
mov
clc
mov
pop
mov
adc
add
pop
dec
and
pop
and
inc
daa
repz
loop
ret
ljmp
fldcw
pop
mov
and
adc
mov
mov
or
loopne
push
push
jp
int
inc
mov
mov
adc
push
pop
xor
test
dec
or
in
sahf
lcall
add
test
or
daa
addl
popf
filds
loop
jl
in
inc
dec
int3
or
and
push
ret
out
mov
enter
in
mov
sbb
fimuls
mov
or
xor
jmp
add
lods
test
daa
fadd
sbb
fisttps
or
out
sbb
mov
xor
adc
lods
add
loop
aad
cmp
orb
adc
jl
mov
sub
sti
add
xor
cmpsl
or
pop
inc
and
mov
xor
adc
stos
dec
lahf
push
sbb
cmp
jge
das
adcb
mov
xor
mov
adc
add
pop
and
inc
and
inc
mov
mov
adc
pop
in
adc
insl
aam
pusha
enter
insl
cmp
and
aas
aam
ss
es
adc
scas
and
leave
add
or
fdivrl
leave
leave
fcomp
fcoml
and
add
add
loop
std
test
mov
mov
frstor
ljmp
jno
inc
sbb
mov
mov
call
dec
add
das
and
add
icebp
nop
cmp
push
in
and
add
movsl
enter
jb
and
outsb
adc
nop
xchg
mov
adc
and
repnz
add
insb
adc
inc
mov
jmp
push
sbb
pushf
add
outsb
adc
mov
lds
adc
add
outsb
adc
clc
push
mov
xor
cmp
or
or
inc
adc
add
sub
dec
aad
sub
or
cmp
add
xchg
mov
jno
xchg
pop
cmp
jno
cmp
inc
adc
ss
xor
fcomip
and
cmp
inc
test
pop
pop
pop
push
hlt
mov
inc
dec
out
ja
xor
cmp
or
sub
pusha
test
aad
pop
push
enter
xchg
dec
sub
outsb
pop
xor
mov
push
call
arpl
pop
adc
pushf
mov
and
mov
xchg
push
adc
xlat
popa
inc
cmp
push
add
inc
adc
push
adc
loop
insl
mov
int
in
sbb
dec
fisubrl
dec
push
or
cmp
cmp
cmp
test
jo
cltd
sbb
push
push
test
es
pop
inc
dec
inc
add
cmp
jnp
jne
shrl
push
push
insb
adc
mov
xchg
pop
add
popa
mov
cmp
mov
add
lods
mov
dec
loopne
push
aaa
enter
std
and
and
cmp
ds
movsl
imul
jbe
jne
mov
sti
push
push
jge
in
lret
pop
cmovg
add
dec
jge
cmpsb
jl
sbb
fildll
and
push
hlt
add
nop
arpl
cmp
pop
push
cld
out
lea
inc
out
or
adc
pop
xor
push
pop
sbb
adc
repnz
pop
insb
gs
fcompl
xchg
sbb
ss
sar
std
add
mov
and
xlat
faddl
in
enter
sbb
in
data16
or
js
loope
fwait
mulb
mov
cmp
inc
fldenv
push
mov
loop
jmp
add
inc
mov
pop
jmp
adc
nop
insl
xor
adc
push
inc
and
jnp
repnz
and
inc
aam
mov
jae
cltd
stos
rcll
loopne
cmp
add
fbstp
movsl
and
dec
push
sbb
and
inc
les
test
xchg
cs
or
adc
fs
jnp
mov
pop
sbb
imul
sarb
xor
mov
out
adc
popa
inc
icebp
dec
popl
or
roll
or
adc
jb
in
popl
push
inc
aam
adc
jns
aam
adc
pushf
push
pop
ret
and
mov
pop
sbb
or
js
leave
or
pop
pop
adc
aam
xchg
adc
or
push
and
pop
adc
adc
imul
gs
or
mov
bound
inc
or
add
mov
mov
into
packuswb
mov
push
flds
outsl
dec
mov
add
or
pop
adc
push
mov
ficompl
or
popa
sbb
ljmp
mov
sbb
push
mov
inc
add
lea
fs
sub
inc
xchg
add
xchg
sub
xor
jne
lock
pop
mov
sub
mov
enter
xchg
lret
mov
pushf
adc
xor
jae
adc
insl
aam
sbb
cwtl
repz
or
shl
sbb
jb
xor
adc
bound
push
xor
adc
or
add
adc
adc
and
and
clc
gs
jbe
adc
into
mov
push
adc
mov
or
push
push
lret
adc
aam
dec
ss
stos
adc
adc
loopne
sbb
push
adc
add
pusha
and
das
aam
dec
and
push
movsl
add
mov
adc
push
and
inc
pop
das
cmp
mov
das
push
pushf
fsubrl
adc
or
mov
push
jno
mov
mov
push
push
or
add
push
jb
add
push
popa
mov
sbb
das
daa
cmp
fdivrl
jp
scas
in
pop
push
adc
sub
das
sub
pop
sahf
jo
in
adcb
push
add
insb
cwtl
jns
jecxz
mov
push
jbe
ret
mov
add
or
mov
lahf
push
lea
pushf
or
inc
adc
bound
adc
movsb
add
or
gs
fsubrl
insl
inc
adc
inc
inc
addb
or
push
or
pusha
inc
push
popa
paddsw
and
jno
jae
icebp
sbb
cmp
jns
push
dec
aam
mov
daa
aam
leave
or
mov
adc
insl
inc
push
mov
add
cltd
push
pop
and
pop
or
fsubrl
mov
cmp
push
push
push
push
nop
or
daa
adc
orl
cmp
mov
fcoms
pop
leave
dec
adc
sub
fcomp
dec
leave
add
push
inc
scas
nop
adc
fcoml
rcrb
push
fsubrl
js
inc
out
xor
sarb
outsl
adc
push
pop
lcall
pushf
or
jo
cmpsb
sbb
or
mov
nop
daa
sub
cli
lcall
je
adc
adc
sti
mov
sub
das
dec
shrl
hlt
mov
adc
mov
scas
adc
sub
into
imulb
add
outsl
and
pop
add
fistpl
pop
pop
clc
add
cmpsb
cmp
dec
xor
adc
push
outsb
pop
cli
xchg
push
and
dec
testb
inc
mov
add
pop
mov
or
enter
pop
mov
cmp
cmp
icebp
pop
mov
sbb
jmp
add
sqrtps
mov
jbe
mulb
add
pop
ret
mov
mov
cmp
add
or
lds
add
stos
jo
push
std
adc
and
or
mov
dec
inc
fs
out
inc
inc
dec
shlb
insl
push
sbb
pusha
scas
test
jno
sub
and
int3
lret
mov
or
xchg
add
xchg
imul
push
adc
je
push
sbb
lock
push
aam
mov
push
mov
or
pop
sbb
inc
mov
cld
push
es
push
xor
adc
loopne
das
push
mov
add
loope
add
push
jne
mov
inc
mov
push
fcomps
add
mov
lea
aaa
xor
out
push
inc
subl
jbe
sbb
push
sahf
or
repnz
jne
push
add
jo
pop
sub
neg
jne
adc
push
fcmovb
mov
add
lods
insl
lock
scas
lds
pushf
mov
mov
aaa
daa
cmp
aad
push
les
pusha
fistps
cmp
je
test
mov
push
lods
test
aad
shrl
jbe
pop
test
int
and
dec
and
dec
dec
push
jns
xor
cs
dec
lock
mov
into
mov
daa
stos
cmpsb
dec
lock
rorl
cwtl
ds
cmc
fimull
adc
jo
mov
pop
lods
jb
stos
and
cs
xor
in
push
fnstsw
push
mov
adc
sbb
xchg
push
out
sub
test
lods
push
mov
push
mov
pop
stos
mov
sub
xchg
loope
inc
lock
add
add
inc
in
or
jmp
add
sbb
and
mov
adc
mov
fcomps
sub
mov
mov
leave
mov
mov
push
lock
push
push
xchg
inc
cmp
pushf
inc
adc
inc
and
icebp
and
std
mov
leave
incl
sub
mov
xor
add
lock
and
mov
outsl
fistpl
insl
shrb
das
lret
xchg
adc
cmp
sub
mov
inc
sub
shrl
lret
mov
in
jecxz
cmp
fsubrl
pop
hlt
fisubrs
test
mov
add
adcb
mov
or
repz
jno
jb
mov
or
jno
lea
push
cwtl
lret
jb
push
mov
faddl
fmuls
push
inc
clc
pop
push
or
xlat
jae
dec
adc
dec
dec
in
push
sahf
cltd
stos
add
movsb
sbb
shll
mov
jl
xor
testb
fadd
sahf
jg
mov
inc
xor
rol
fiadds
push
push
sbb
dec
sub
xor
dec
sub
mov
mov
or
add
jecxz
mov
jne
lods
or
push
xor
push
sbb
mov
sub
cmpsb
nop
push
mov
jl
and
inc
scas
or
mov
mov
push
add
out
and
in
outsb
inc
aam
dec
fcmovne
js
sbb
into
in
test
in
pusha
cmp
add
addr16
xchg
in
jne
or
push
dec
lcall
das
nop
je
and
lcall
add
enter
add
popa
lret
adcb
in
adc
in
inc
add
add
xor
cmpsb
fcomps
fildl
cli
mov
push
and
mov
fdivrs
adc
cmp
inc
lds
mov
xchg
add
xchg
sub
int
lea
test
call
adc
xor
dec
pusha
test
sbb
mov
sbb
cmp
or
sarb
and
popa
xchg
add
inc
sub
lea
push
cmc
nop
xchg
mov
ljmp
sbb
or
jecxz
adc
pop
push
sub
xchg
mov
je
push
sbb
rcrb
movsl
mov
or
pushf
inc
fmuls
fiaddl
mov
dec
add
dec
cmp
lret
js
stos
repnz
push
lret
roll
and
xchg
out
mov
pop
mov
lds
mov
fstpt
hlt
mov
inc
iret
popa
pop
xchg
jge
mov
or
xor
shlb
cmp
xor
dec
sbb
mov
pusha
inc
adc
outsl
test
test
mov
xor
mov
jge
test
insl
testl
rorb
test
dec
add
les
js
xchg
outsl
sub
cltd
inc
pop
sarl
js
add
xor
xchg
and
int3
imul
dec
ss
faddl
jns
dec
mov
rorl
adc
sti
push
inc
mov
mov
test
xchg
aas
adc
loopne
enter
add
and
or
jne
or
push
test
inc
loopne
andb
popa
push
mov
paddb
inc
or
cmp
xor
adc
push
mov
fs
and
int
mov
xor
mov
sub
xor
xor
fiaddl
cs
sub
call
insb
pop
sub
and
or
pop
mov
push
jo
and
cmp
jns
cmc
mov
jns
cwtl
cmpl
jb
aam
ret
push
ret
sub
inc
bound
and
xor
test
pop
cld
rorl
ljmp
adc
jnp
or
lods
nop
dec
scas
xchg
sub
lds
mov
mov
add
add
xor
push
shll
or
daa
sub
mov
lds
lcall
pop
inc
push
cmp
sub
inc
fwait
sbb
subl
fldt
lret
xchg
pop
mov
lea
mov
mov
mov
inc
push
or
or
mov
lret
outsb
popa
add
or
out
jbe
loopne
mov
popf
jno
push
add
cwtl
je
test
push
test
scas
mov
test
or
or
or
dec
inc
and
mov
insl
out
cmp
push
repnz
or
add
nop
push
stos
test
jno
shrl
ss
cld
push
push
pop
call
or
adc
cli
inc
inc
add
lret
mov
mov
sub
lahf
lret
lock
test
adcl
lret
pop
loopne
or
add
push
aam
or
das
and
dec
adc
push
lods
dec
repnz
adc
mov
adc
scas
mov
add
fdivrl
mov
and
xchg
insb
adc
pop
pushf
pushfw
sti
les
and
push
movsb
stos
push
lea
int3
test
inc
adc
xchg
jge
rclb
pop
inc
sarb
push
rolb
ret
lods
inc
inc
mov
arpl
sub
mov
pop
sbb
sub
in
dec
mov
and
sub
jo
xor
test
add
nop
adc
add
sbb
cmp
stc
dec
mov
jbe
into
rcrl
gs
adc
insb
or
jl
fisttpl
int3
test
mov
sub
fldl
pop
imull
lahf
inc
sarb
adc
cmp
ja
push
les
mov
movl
push
inc
inc
pop
jb
cwtl
jle
add
nop
in
aam
test
arpl
pop
movsb
cmp
sbb
push
push
xchg
roll
sub
pop
sahf
cmp
or
add
and
mov
inc
lods
aam
mov
sbb
fsubrl
inc
popl
and
pop
mov
mov
sbb
jbe
add
mov
xchg
mov
daa
mov
add
dec
loope
inc
ds
add
loope
push
inc
dec
mov
leave
mov
jae
push
xor
mov
out
fidivl
add
incb
push
pop
xchg
je
cmp
jle
push
push
adc
gs
xor
mov
sub
sbb
mov
jno
les
adc
push
pop
add
shlb
or
push
xchg
pop
sarb
pushf
adc
fdivrs
nop
jno
cmp
add
enter
popa
push
and
loopne
les
ret
mov
push
cmc
cmpsl
jae
inc
jb
hlt
cmp
fwait
ret
ret
mov
setp
andb
imul
aas
adc
dec
push
and
movsb
cwtl
inc
pop
roll
and
cld
xchg
shll
jp
enter
test
lret
es
aam
adc
xor
jo
movb
xor
push
je
xor
adc
leave
out
movsb
bound
subb
imul
pusha
rorb
xor
xchg
sti
gs
stos
jl
fwait
xchg
push
add
sbbb
pushf
xorb
jae
push
jb
xorb
inc
cwtl
push
push
inc
or
sub
mov
ja
xchg
andb
cli
push
and
movsl
sub
adc
negb
mov
sbb
xor
jl
pushf
aas
push
mov
or
ljmp
popf
jmp
repnz
ret
mov
lret
mov
push
test
add
add
push
sti
pop
aaa
pop
mov
jp
in
decl
test
jge
inc
add
nop
push
adc
mov
jmp
call
add
inc
fs
jo
sub
sub
call
adc
orb
xlat
adc
loop
fsubl
jge
sbb
add
adc
push
pushf
and
push
dec
pop
push
mov
sbb
add
mov
jl
iret
sub
pop
scas
inc
adcb
in
add
pop
dec
adc
jb
adc
lret
or
xchg
test
fadds
push
je
or
imul
push
int
sbb
push
loope
imul
pushf
dec
xchg
sub
pop
test
push
in
add
xchg
push
shlb
je
sti
loopne
push
stc
pop
mov
mov
cmp
jo
add
inc
fmull
add
adc
or
xchg
insb
pushf
bound
sbb
orb
add
cmpb
out
xor
daa
pop
or
and
adc
movsb
add
mov
mov
fldlg2
mov
cmpsl
dec
testb
xchg
mov
call
mov
mov
jns
mov
sub
rorl
xor
add
adc
cld
gs
and
mov
outsb
mov
jb
insb
xor
inc
mov
mov
imul
in
sbb
mov
jno
push
shll
cld
or
out
or
cld
sub
call
mov
bound
mov
mov
push
bnd
or
and
mov
pop
insb
mov
dec
movsb
jp
inc
inc
add
inc
das
test
movsb
and
leave
enter
cld
repnz
jnp
pop
inc
aad
mov
jl
inc
push
push
inc
ud2
cmp
xchg
mov
pop
adc
sbb
adc
cld
adc
sub
test
mov
pushf
in
inc
xchg
cltd
adc
push
and
data16
mov
and
daa
inc
daa
lock
push
sub
pop
lock
cmp
in
mov
xchg
xchg
push
rcll
jl
push
out
lret
inc
sbb
add
lock
add
xor
mov
push
test
popa
jp
fs
push
hlt
in
dec
push
nop
sbb
and
pop
fadd
adc
inc
adc
sbb
in
shrb
sbb
popa
adc
shlb
adc
add
adcb
push
fsts
mov
or
int3
sbb
bndldx
sub
bound
adc
in
mov
sbb
in
and
or
sbb
fdivl
inc
mov
sbb
push
and
push
jmp
rcr
jae
pop
mov
or
fdivl
stos
shll
pop
add
pop
enter
sub
add
in
or
mov
or
hlt
int3
data16
inc
es
sub
fistl
xchg
adc
mov
daa
and
dec
mov
faddl
testb
or
and
sbb
xor
xor
and
add
xchg
mov
popa
xchg
in
or
adc
push
out
dec
add
push
fisttpl
lock
mov
xor
adc
and
add
push
ja
js
add
dec
mov
mov
or
in
addl
das
neg
inc
lds
lcall
dec
loope,pn
sub
je
nop
xchg
and
enter
sbb
test
neg
mov
inc
mov
adc
push
scas
push
mov
add
cmp
pop
xchg
jb
push
mov
into
je
sbb
icebp
mov
or
and
and
and
pop
add
mulb
dec
add
sbb
stc
push
das
mov
sub
cmp
jo
js
mov
popf
cwtl
push
inc
les
dec
inc
sti
rcr
adc
test
loope
dec
cwtl
sub
sub
or
add
inc
es
adc
sub
xor
add
inc
lret
in
pop
rol
cmp
arpl
xchg
xor
mov
pop
imul
push
mov
xchg
sub
adcb
inc
xlat
xor
xor
dec
je
pop
pushf
int3
adc
lret
call
mov
out
cmp
jns
rcll
dec
andl
mov
dec
shlb
xor
addl
lret
inc
sub
adc
and
cmp
adc
jecxz
sbb
mov
test
movsl
and
popf
pop
nop
fdivl
push
or
cld
xor
push
pop
or
outsb
std
hlt
hlt
xor
lea
shlb
popa
enter
insb
and
jle
pop
aad
xorb
jno
js
adc
cs
adc
lds
in
fsubrs
push
sbb
enter
push
dec
es
aam
and
int
das
repnz
adc
cld
lcall
push
movsb
xchg
mov
xor
inc
dec
inc
xchg
fldl
push
cs
push
add
mov
sbbl
test
xchg
xor
arpl
popa
xor
dec
inc
push
or
jecxz
push
jl
xchg
xor
inc
or
daa
test
sub
addl
mov
imul
mov
sbb
or
dec
and
sbb
lock
stos
js
pop
adc
ret
adc
dec
and
movsl
mov
add
and
add
dec
inc
cs
xchg
push
xor
mov
add
iret
adc
or
xor
sbb
mov
lahf
test
add
je
pop
and
mov
in
in
out
or
out
xchg
rclb
rcrb
push
push
push
xor
addb
mov
and
push
dec
jb
dec
dec
rclb
or
movsb
test
jge
or
sarb
xor
xchg
dec
xor
jno
inc
leave
and
sarb
xorl
ret
sub
jle
stos
sub
add
clc
cmp
std
pop
mov
je
push
movl
inc
out
cmp
push
je
test
loope
xor
mov
and
mov
mov
inc
push
aaa
notb
jl
ds
cmp
mov
dec
adc
cwtl
test
aad
mov
mov
xlat
cmpb
out
cwtl
dec
cld
in
test
mov
jns
mov
ja
nop
out
pop
mov
and
in
mov
inc
test
clc
mov
test
add
in
lock
aam
xor
rorb
or
mov
mov
loopne
nop
and
cmp
mov
pop
shll
push
mov
inc
or
addb
push
cwtl
xor
shrl
les
mov
iret
push
mov
mov
dec
pop
call
mov
or
loop
xor
adc
or
mov
inc
dec
or
dec
push
sub
xor
push
sbb
ljmp
fmull
loopne
push
int
push
push
push
push
sub
adc
int3
push
jl
inc
into
add
testl
test
enter
jo
push
sbb
xchg
mov
mov
stos
int3
aam
add
sbb
mov
push
sub
sub
xor
xor
jns
mov
clc
decb
repz
sbb
pop
call
repz
cld
incb
cmp
lcall
and
cmp
ret
cmp
test
cmp
xchg
and
fmuls
outsb
movsl
or
mov
fwait
divl
data16
add
enter
adc
and
pop
pushf
test
data16
xor
in
mov
pop
ss
les
inc
cli
xor
ror
xchg
lcall
shlb
xchg
cmp
in
mov
ds
pop
int3
lret
loope
add
pop
lea
push
sbb
stos
and
sbb
add
outsl
test
aam
add
push
xchg
bound
fcom
leave
stos
add
rol
xchg
cmp
pop
mov
shlb
add
add
or
loopne
pop
push
jecxz
int3
push
ror
inc
push
in
cmp
sub
sub
or
add
add
add
inc
cmp
roll
mov
xor
push
and
das
mov
push
inc
in
mov
push
or
add
xchg
adc
loop
shll
in
mov
mov
adc
add
jmp
push
popf
stc
scas
cmp
inc
xor
insl
aas
in
push
inc
sahf
xor
test
mov
mov
add
dec
loopne
dec
outsb
mov
sub
xor
add
lods
loopne
in
es
sti
neg
dec
push
cld
lods
and
or
fiaddl
xor
mov
or
mov
adc
push
into
inc
bound
inc
bound
add
mov
cmp
lock
lcall
mov
arpl
bound
insl
cmpxchg
xor
cli
jl
and
mov
or
pop
cmp
mov
addr16
cltd
jmp
lds
enter
cwtl
mov
jge
mov
sbb
ret
enter
mov
push
add
repnz
lahf
or
pop
pop
sahf
cmp
and
add
push
add
addb
dec
xor
and
push
jns
push
imul
sbb
mov
cmp
test
cmp
inc
mov
fcomps
imul
test
or
xchg
fs
adc
roll
inc
leave
scas
enter
cwtl
xchg
dec
loop
sbb
xchg
dec
lret
into
lods
ficomps
xor
adc
nop
sub
and
push
cltd
or
lcall
add
or
inc
ss
mov
lods
sub
sbbb
push
cwtl
and
and
xchg
das
cmp
rol
xor
addl
xor
outsl
pop
rorb
and
mov
ret
or
mov
and
mov
adc
imul
movsb
daa
bound
or
inc
or
pop
pushf
rcll
aas
test
cmp
xchg
or
sbb
add
cli
jo
nop
jo
ret
mov
orl
mov
xchg
inc
movsl
push
add
dec
jae
inc
push
push
and
mov
fidivs
mov
sub
or
shrb
or
push
mov
subl
and
mov
mov
icebp
dec
pushf
cvtpi2ps
aam
add
test
adc
testb
xor
push
lcall
jns
or
call
and
les
cmp
sbbl
pop
shll
or
sbb
lea
pop
or
inc
dec
and
fs
lcall
sub
xchg
jne
pop
adc
out
jb
test
sbb
cmp
aad
sbb
add
or
xor
jnp
lods
push
enter
scas
adc
add
aad
rorb
inc
je
mov
jge
push
gs
xor
je
in
push
adc
lods
je
dec
popa
loopne
iret
idiv
nop
dec
push
sub
rclb
cmovbe
and
aaa
test
movsb
fdivl
sub
and
mov
mov
mov
bound
lods
popa
sub
mov
stos
pop
sahf
lods
mov
mulb
push
insl
add
mov
mov
add
in
inc
and
inc
mov
jl
push
and
dec
faddl
jb
xor
sub
jmp
leave
adc
mov
dec
mov
cwtl
lret
pushf
loope
or
and
jno
pop
add
mov
hlt
sbb
push
fiadds
mov
push
or
shr
pushf
inc
icebp
or
punpcklbw
and
jae
fbstp
lock
rcrb
mov
pop
je
push
inc
adcb
add
mov
es
jne
mov
inc
loope
sub
les
jne
jg
mov
jle
mov
pop
nop
repnz
or
jge
pop
pop
repz
add
xor
out
push
sub
cmp
mov
sbb
popa
cmp
sub
cs
cmp
xchg
mov
or
adcb
adc
cwtl
imul
in
mov
dec
push
pop
rolb
sbb
ret
inc
scas
lods
cmp
cmc
xchg
jae
aas
add
add
mov
sbb
adc
adc
jo,pt
ja
xchg
and
cld
dec
jae
shlb
rolb
add
shl
dec
rcll
in
sub
mov
les
lock
pop
stos
addl
int
dec
push
jle
or
push
jne
int
aad
push
fwait
loop
push
push
mov
inc
rorb
sub
aam
push
in
in
stos
or
es
mov
mov
mov
enter
mov
xchg
sbb
les
sbb
arpl
or
xchg
sarl
inc
jb
movsb
call
push
fld
stos
mov
push
or
or
cmp
fs
dec
les
or
xchg
add
jae
mov
leave
cmpb
mov
mov
mov
mov
addl
inc
sbbb
add
jmp
mov
sbb
push
cwtl
xor
jae
daa
lods
sbb
xor
fadd
loop
pop
add
fisttpll
lock
fwait
xchg
add
fimuls
out
or
mov
rolb
sbb
lock
pusha
nop
orb
xchg
adc
sbb
inc
jmp
test
inc
shr
lock
and
xchg
add
inc
xchg
add
xchg
xchg
mov
loop
xorl
adc
jbe
dec
lock
out
xchg
inc
cmc
pop
xchg
dec
mov
inc
xchg
jno
adc
push
push
sahf
dec
popf
leave
or
iret
or
or
lret
stos
add
pop
mov
inc
lds
cwtl
aas
adc
pop
rcrb
cmp
sub
pusha
adc
test
inc
push
pushf
or
cmpb
inc
jb
js
or
xchg
dec
js
push
adc
push
mov
add
pop
js
adc
xchg
aam
pop
add
xchg
mov
flds
and
fstps
xor
pop
inc
add
adc
adc
stc
push
mov
lock
push
mov
test
js
ret
inc
mov
leave
push
adc
inc
fcoml
jne
add
push
stos
add
je
adc
andb
clc
pop
add
loope
fists
mov
and
aas
mov
ljmp
add
sub
cwtl
cs
push
scas
nop
or
lock
mov
xchg
push
adc
adcl
jne
push
test
rcrl
pop
loop
orb
xchg
and
push
add
adc
cmp
test
mov
dec
lahf
xchg
push
adc
cwtl
xchg
add
stos
fs
pop
mov
xor
call
in
lcall
dec
dec
cmp
test
pop
mov
mov
jnp
xchg
jbe
test
push
fdivl
call
addl
sbbb
cmpsl
andb
shlb
jo
iret
inc
sub
or
cmp
mov
mov
dec
pop
call
or
add
push
daa
adc
dec
jb
ret
push
stos
push
ret
jg
rorb
insb
repnz
and
es
gs
sbb
xor
dec
dec
adc
cwtl
lods
add
test
test
fdivrs
out
je
jb
test
pop
js
adc
movsl
xchg
push
add
test
add
lock
push
loop
into
fs
call
and
push
push
pop
add
inc
ljmp
or
test
and
cmc
sub
add
mov
xor
nop
test
and
sbb
sbb
cmp
add
and
aam
lcall
fdivrs
inc
insb
leave
or
and
add
stos
push
cmp
dec
or
push
rorb
shr
push
sub
adc
in
jge
ljmp
ss
jb
xlat
sub
and
fstps
push
jne
jne
cmp
int3
sub
xor
cmpsl
pop
ret
jo
sub
jg
inc
inc
push
fldenv
dec
add
mov
xchg
or
les
add
push
jp
inc
jl
rorb
aad
jbe
fldenv
adc
xchg
insb
sub
pop
iret
xor
dec
inc
cmp
fldt
add
cmp
jg
ret
mov
lret
pop
and
and
dec
sbb
dec
mov
repnz
mov
fs
mov
inc
mov
or
fldt
mov
cmpsb
mov
push
jle
add
push
add
or
add
outsl
cld
mov
lret
xchg
jo
hlt
into
clc
mov
push
inc
shl
fdivl
cmp
adc
aam
push
jle
aam
adc
hlt
add
cmp
pop
pop
orb
fldl
adc
mov
xor
mov
dec
mov
dec
ljmp
subl
in
fdiv
mov
push
sbb
cmp
add
adc
lock
xchg
mov
mov
aaa
cmp
mov
pusha
js
shl
jge
add
inc
jp
push
jb
jmp
adc
and
jl
or
jmp
push
lods
push
pop
mov
icebp
sbb
andl
mov
fwait
inc
mov
lea
jmp
inc
ds
fimull
jne
push
add
sub
lret
imul
adc
rcll
push
adc
decl
inc
movsb
mov
pop
add
push
xor
or
adc
call
sbb
jb
fisubrs
into
les
mov
add
mov
push
pop
push
adc
lret
jl
mov
shlb
push
pusha
mov
jb
or
sbb
ret
jl
cmp
xchg
mov
mov
dec
mov
int3
adc
push
dec
icebp
or
js
xor
push
xchg
xchg
mov
enter
xchg
stos
mov
mov
nop
jl
fdivrs
dec
test
pop
dec
inc
insl
mov
mov
cmc
in
push
mov
add
mov
mov
cmp
adc
and
mov
sbb
xchg
adc
mov
in
push
push
cmovo
les
mov
dec
pop
inc
imul
pop
shrb
or
mov
test
dec
inc
mov
aad
adc
scas
lds
add
test
cwtl
pop
xor
adc
jo
and
aaa
loope
cmp
push
popa
inc
xchg
mov
aam
mov
mov
inc
or
add
push
lock
sub
or
inc
das
loop
icebp
push
das
loope
add
cmp
enter
add
into
or
mov
add
mov
insb
fadd
jl
adc
mov
lock
es
stos
push
addb
lock
je
push
dec
cmp
test
rol
mov
in
lds
pop
xor
mov
gs
xchg
lock
sub
adc
int
loopne
ret
shll
stos
adc
sarl
ds
pop
xchg
sbb
ret
test
jno
xchg
lock
push
xor
or
dec
shll
psubw
sbb
and
and
add
xchg
mov
lea
outsb
inc
pushf
adc
inc
jae
lods
or
and
inc
fwait
pop
ret
dec
mov
add
cmc
cmp
mov
fbld
jge
dec
cmpsb
dec
or
mov
test
add
sbb
popf
sub
pop
push
add
popa
push
and
test
and
mov
inc
inc
xor
mov
enter
xchg
mov
mov
sbb
mov
mov
push
repz
test
test
push
or
shll
inc
dec
add
mov
or
inc
inc
inc
push
jne
movsl
ret
cmp
mov
sub
es
addb
loopne
bound
mov
in
orb
add
add
push
mov
ds
or
add
je
xlat
push
dec
dec
or
push
jo
cmc
mov
fstps
lcall
xchg
mov
adc
lret
inc
scas
data16
jo
add
xchg
sbb
jle
test
xchg
icebp
popf
mov
lcall
jbe
adc
call
call
mov
leave
adc
or
inc
jb
repnz
call
mov
popa
mov
inc
push
cmp
lds
imul
cwtl
rdtsc
adc
ljmp
adc
cwtl
addl
inc
sub
jbe
push
add
test
add
test
inc
loopne
jp
xor
ret
ljmp
adc
lds
mov
hlt
imul
jbe
lods
pop
mov
push
xchg
subl
add
sbb
xor
jp
out
add
dec
mov
or
cmp
xor
imul
ja
pop
outsb
push
add
pop
out
cmp
test
or
adc
enter
push
xchg
add
nop
cmp
stos
subb
cmp
out
mov
rorl
jbe
bound
and
adc
cwtl
pop
nop
sbb
sub
or
and
push
dec
sbb
jl
call
gs
addr16
or
push
dec
push
jno
or
shlb
pop
mov
add
inc
fmull
xchg
and
cmovge
pusha
push
stos
iret
insl
lods
push
adc
or
and
movsl
test
adc
xchg
mov
and
xchg
inc
das
xor
and
mov
xchg
fmulp
dec
movsl
cli
inc
lods
or
cmp
push
aad
adc
or
or
popf
push
dec
movsb
lret
or
jmp
shlb
cmpsl
lea
push
leave
adc
not
leave
push
fisubrl
mov
out
nop
sub
xlat
fadds
add
dec
mov
enter
addb
add
int
int
mov
cmc
pushl
addr16
jge
enter
daa
aam
sub
pop
adc
mov
or
push
test
inc
xchg
cwtl
sarb
adc
mov
inc
stos
sub
inc
subb
scas
push
leave
loop
cmp
push
scas
xchg
int3
or
roll
mov
adc
enter
sbb
mov
and
or
pop
and
mov
dec
sub
inc
cmp
dec
push
or
push
add
stos
mov
push
int3
dec
and
enter
inc
dec
cmpsl
sbb
cwtl
ja
add
pushf
cwtl
int3
or
addr16
fsubr
adc
mov
fs
psubusw
push
xor
es
loopne
sarl
lcall
and
cmpsl
mov
inc
xor
push
rorb
dec
add
adc
and
push
sub
js
test
xchg
jno
fchs
rorl
pop
hlt
xchg
mov
xor
inc
push
inc
movsl
jge
lock
lock
jnp
inc
lock
repz
cs
push
pop
inc
inc
xor
inc
sbb
sbb
hlt
rdtsc
push
lret
call
sahf
andb
or
pop
push
insb
fiaddl
and
aam
sub
adc
hlt
add
dec
fnstenv
lret
sub
aaa
xlat
mov
mov
xor
cwtl
enter
test
adc
xor
add
outsl
test
and
pop
rorl
mov
test
jns
jns
clc
jge
dec
lock
adc
clc
pop
push
out
pop
lret
or
insb
cmc
pop
cmpb
and
adcb
test
pop
arpl
imul
inc
bound
sub
test
inc
adc
xchg
adc
into
shrl
push
icebp
mov
pop
inc
shlb
out
add
xor
ljmpw
rcl
sbb
mov
xor
xlat
mov
and
adc
pusha
nop
les
sbb
and
shll
aad
push
call
xchg
mov
nop
cs
xchg
dec
insb
push
or
sbb
or
addr16
pop
adc
and
fistl
js
adcb
mov
add
movsb
dec
dec
jb
or
icebp
in
jb
inc
fwait
stos
std
sub
dec
orb
test
les
movsl
lods
and
adc
or
stos
push
loopne
stos
ds
jl
and
mov
add
inc
lods
mov
push
jb
push
outsl
pop
jno
push
ret
sbb
cmp
outsl
or
jno
push
push
test
aam
enter
test
daa
sub
inc
movsb
or
push
orl
sbbb
lds
push
lods
nop
adc
push
int
sbb
dec
sbbl
aam
or
dec
test
lods
mov
decl
dec
jle
jge
or
or
or
sub
add
jno
add
mov
and
loop
imul
call
ret
push
jb
mov
aam
iret
sub
lock
ret
mov
bnd
adc
add
mov
test
aaa
push
mov
jg
dec
push
adc
xchg
sbb
or
pushf
xor
nop
xchg
jl
mov
imul
inc
fcomps
dec
cmp
jnp
js
js
xchg
sub
cltd
push
pop
fmull
push
xchg
call
and
xor
adc
scas
pop
inc
stc
cmpsb
pop
sub
push
push
in
aam
fs
xchg
cmp
push
jnp
push
push
fildl
or
shr
pop
push
addl
jp
aad
adcb
xor
push
or
andb
sub
ss
cmp
or
test
jmp
and
int
shll
shll
test
mov
mov
mov
or
nop
add
pop
adc
adc
sub
mov
fldenv
push
inc
push
call
call
call
repnz
inc
shr
out
mov
push
mov
push
cltd
cmc
or
leavew
movsl
mov
shrb
mov
loop
mov
mov
xchg
mov
jbe
push
mov
lret
mov
dec
rorb
roll
push
jb
push
lcall
mov
fs
mov
add
xchg
roll
and
add
mov
push
in
or
push
mov
fwait
adc
andl
pop
inc
dec
jbe
je
addb
imul
push
push
adc
adc
fimuls
movsb
mov
jmp
cmp
js
repz
aad
inc
lret
adc
insb
and
fiaddl
and
ficoms
push
stos
addl
sbb
add
mov
neg
add
dec
clc
lods
add
shl
imulb
mov
imul
and
pop
jns
push
xchg
xchg
es
fs
pop
icebp
enter
sub
enter
or
enter
jp
iret
pusha
dec
adc
push
test
mov
mov
mov
mov
sbb
repz
int
xchg
faddl
and
lcall
mov
pop
jo
adc
mov
js
inc
pop
push
aad
inc
mov
js
repz
sahf
loope
push
or
push
outsb
std
sub
adc
add
sub
xor
pop
aad
into
stc
aaa
loope
xchg
adc
and
xor
xor
outsl
out
cmp
dec
stc
mov
fcoml
and
rorl
sbb
test
add
push
lods
in
rcr
mov
and
sub
sbb
rcrb
mov
mov
shl
fistps
fists
iret
adc
or
adcb
sbb
daa
sbb
push
cmpb
mov
shlb
mov
adc
xchg
adc
mov
pop
loope
add
push
std
ret
inc
aaa
jmp
mov
jne
cmp
daa
jle
inc
lods
and
in
mov
push
mov
fs
stos
out
adc
test
push
push
mov
sti
adcb
sub
sahf
adc
jo
dec
aad
jge
and
fisubl
fstps
in
subb
pop
sub
lock
cltd
sar
faddl
leave
and
in
fmull
push
xor
loope
push
push
or
inc
shrl
flds
jecxz
cld
fdivs
bound
cmpsb
mov
cmp
popa
or
shl
or
mov
sub
sub
mov
cmp
adc
push
and
es
int
mov
inc
pop
call
push
and
push
dec
adc
popf
jo
mov
mov
je
movsl
das
movsb
mov
push
test
mov
dec
mov
or
lods
mov
add
or
test
adc
add
jnp
jns
paddq
sarb
loop
daa
lods
add
sub
and
mov
andl
xorb
xchg
shlb
cmc
rclb
dec
mov
enter
ficompl
push
push
ret
or
mov
shlb
adc
ret
add
adcb
sti
fstp
sbb
out
push
loopne
add
pop
nop
sbb
ss
add
sbb
mov
arpl
roll
mov
sub
icebp
xchg
sbb
cmp
cmp
fmull
or
roll
and
ret
push
dec
add
dec
inc
lock
aam
stos
js
inc
sti
adc
xorb
inc
adc
xchg
inc
jae
cmpsb
adc
push
pushf
push
adc
mov
adc
jmp
push
int3
stos
cmp
hlt
dec
fldcw
aas
cld
sub
dec
jmp
cmp
adc
add
push
sbbb
push
xor
test
test
xor
push
sub
xchg
add
pusha
enter
outsl
inc
xor
sub
and
shll
jno
or
nop
dec
xor
repnz
and
pavgb
rclb
int3
inc
cmp
add
or
fcmovnbe
sbb
jmp
outsl
add
bound
jne
enter
adc
xor
pop
dec
in
dec
call
repnz
sub
sub
add
inc
lds
or
bound
inc
jl
or
test
lds
ret
adc
sbb
adc
push
jecxz
pop
push
or
outsb
in
add
push
jle
pop
inc
cmp
adc
ss
or
imul
js
cmpsb
or
and
xchg
and
shl
adc
xchg
inc
pop
adc
or
outsl
sbb
add
mov
or
stos
add
js
cwtl
add
arpl
ds
push
push
push
mov
cmp
roll
dec
andb
sbb
push
xchg
xchg
add
mov
test
adc
dec
adc
add
and
gs
sbb
insl
push
sahf
adc
popa
mov
dec
lods
int3
mov
pop
push
add
jecxz
sub
shr
cmp
mov
lcall
mov
mov
adc
sub
fcompl
xor
ret
adc
add
add
inc
test
enter
test
sub
mov
mov
jo
dec
xchg
adc
push
add
sub
clc
je
mov
testb
jl
cmp
ja
ret
mov
scas
sub
incb
pop
push
adc
mov
add
mov
addb
ficomps
add
mov
adc
add
sub
dec
mov
lds
push
cmp
mov
gs
xor
das
mov
test
cmp
cli
xor
iret
inc
ja
sbb
add
lret
dec
sahf
cmpsl
or
insl
add
js
mov
icebp
scas
dec
push
adc
mov
mov
leave
mov
aas
push
add
xchg
cmp
jmp
mov
dec
pusha
push
out
mov
andl
pusha
xchg
dec
rclb
pushf
lret
cmpl
call
repz
and
push
sarl
loope
es
jmp
sub
mov
dec
and
das
scas
pop
notb
adc
push
mov
inc
add
sub
jnp
addb
dec
bnd
je
inc
arpl
ja
sbb
inc
xlat
sbb
mov
inc
and
bound
inc
lock
mov
and
mov
push
or
and
pop
xor
pushf
adc
lods
jne
stos
push
rorl
insl
cwtl
sbb
outsb
test
nop
sbb
sub
je
or
in
nop
push
es
lret
call
fdivrs
dec
or
lods
or
mov
cwtl
add
xchg
or
push
popa
or
add
cmpsb
mov
out
sbb
lahf
push
push
inc
jbe
adc
ret
fmull
pop
cmp
push
adc
mov
and
add
xor
add
popf
icebp
inc
or
repnz
add
xor
inc
nop
call
lcall
sub
cmpl
adc
adc
fs
push
inc
iret
add
mov
sub
pop
adc
xchg
test
mov
mov
or
shl
ljmp
bound
and
mov
unpcklps
push
shrl
sub
and
ljmp
add
jmp
pusha
cmp
push
aam
lea
mov
popl
xor
call
fcomi
dec
rcrl
adc
sbb
pop
pop
pushf
mov
mov
push
mov
lods
mov
data16
add
jae
fstpl
xor
jb
cli
adc
and
add
sbb
sub
in
pop
jb
mov
mov
adc
imul
jnp
fidivrs
hlt
insb
pop
sub
push
jecxz
mov
jg
sub
push
push
cwtl
add
aaa
push
cmc
or
jmp
push
push
add
push
dec
jle
jo
xor
in
push
pop
movsb
dec
divb
lea
dec
sbb
les
mov
xor
fnstsw
pop
push
mov
adc
or
sahf
mov
addl
loopne
jnp
push
es
xor
jo
pop
or
and
shlb
mov
pop
mov
das
push
test
je
adc
cmp
push
sahf
fwait
cwtl
aaa
xor
out
xchg
jl
mov
push
adc
fistpl
sbb
adc
inc
xchg
mov
jnp
and
pop
adc
and
inc
enter
or
inc
mov
test
or
sub
pop
int3
adc
pop
aaa
sub
push
cwtl
or
dec
mov
test
out
adc
add
add
add
dec
jae
test
in
adc
out
dec
outsb
mov
cmp
xchg
sub
je
out
imul
sbb
sbb
insb
cmp
imul
sub
out
cltd
faddl
sub
or
or
movl
mov
or
push
mov
pop
push
add
xchg
cmp
cmp
adc
pop
xchg
int
lods
testb
nop
enter
add
or
movsl
or
mov
adc
mov
cmp
push
andl
add
ljmp
dec
add
out
push
mov
or
cmp
bound
call
adc
cmp
jp
adc
sbbl
addr16
filds
xor
push
push
int3
mov
jno
inc
mov
movsl
jne
sbb
adc
cmp
or
add
add
insb
orb
inc
or
rorl
cmp
xchg
and
sbb
ljmp
clc
ret
push
rcll
mov
ss
popa
and
dec
mull
test
adc
add
mov
jnp
js
lahf
pop
mov
mov
rolb
call
negl
sub
arpl
mov
sub
adc
js
dec
loop
dec
shrb
add
prefetchwt1
sahf
or
inc
loop
xchg
out
push
cmp
jmp
cmp
xor
push
pop
xchg
mov
push
cs
incl
mov
add
add
add
cmp
push
xor
push
rcrl
pop
mov
sbb
lar
pushf
inc
mov
add
mov
pop
loopne
jg
mov
and
or
jp
lcall
std
push
inc
dec
fstps
mov
inc
sbb
xor
xchg
add
mov
addb
add
adc
sub
push
adc
ret
inc
inc
lret
xor
cmpb
xchg
mov
int
js
test
ljmp
mov
push
or
cmpsl
mov
ret
fcoml
jg
imul
test
or
adc
sbb
inc
or
mov
push
sahf
imul
daa
sub
and
pop
sahf
or
pop
push
dec
xchg
or
lock
add
enter
sub
jnp
ret
mov
add
xchg
jmp
out
cwtl
mov
sbb
rorb
mov
pusha
inc
ljmp
inc
inc
ljmp
push
inc
adc
add
je
cmpb
push
rcl
or
add
push
mov
adc
movsl
dec
lods
sbb
hlt
inc
hlt
adc
add
lsl
in
push
push
adc
rclb
xchg
xorb
mov
inc
and
push
or
test
mov
inc
adc
arpl
push
fidivl
xor
bound
inc
adc
inc
push
xchg
inc
ret
test
inc
dec
dec
incb
mov
dec
sahf
nop
inc
xor
hlt
adc
movb
shrl
xorb
cmpb
sbb
mov
rol
or
pushf
es
add
mov
push
adc
test
push
lods
jb
scas
sbb
adc
xchg
pop
nop
and
add
mov
mov
and
lock
jp
sbb
repnz
adc
adcl
pop
and
shlb
or
xor
dec
mov
nop
mov
pop
jno
dec
and
jno
push
inc
sub
sbbb
push
xchg
push
push
add
lods
add
shl
into
cltd
adcb
pusha
add
mov
push
mov
dec
sbb
adc
inc
xor
lcall
paddd
sub
xor
inc
sub
mov
lahf
push
sbb
push
jns
add
cs
xchg
loope
xor
adc
hlt
leave
push
cltd
je
test
mov
cmp
ret
movsb
sub
es
jle
sbb
sub
push
rorb
mov
cmp
inc
les
jb
sub
data16
iret
push
dec
sbb
inc
xor
dec
push
ret
or
and
rolb
ficoms
cmp
cld
jbe
inc
and
sbb
and
iret
mov
call
fwait
add
out
and
xchg
lods
inc
push
lods
mov
pushf
push
add
andb
push
sub
std
push
mov
add
mov
and
out
adc
jmp
stc
and
xor
dec
jb
ljmp
mov
and
das
js
pop
addb
push
lock
std
adc
icebp
cmp
scas
cmp
jbe
jae
or
outsb
and
stos
fs
push
sahf
pop
mov
mov
popa
das
loopne
push
in
and
mov
mov
or
aaa
sub
add
f2xm1
jo
push
sbb
sub
inc
test
push
repnz
sub
cs
or
sbb
cs
mov
push
adc
sbb
dec
mov
lods
push
adc
or
lea
mov
mov
push
push
test
xor
sub
cwtl
add
push
pop
imul
xor
lds
subl
cmp
addb
mov
push
orl
dec
cld
imul
or
mov
and
popf
or
mov
push
dec
push
pop
gs
mov
mov
jmp
or
sub
add
clc
inc
add
inc
cmp
mov
mov
and
inc
sarb
and
js
dec
cmpsl
scas
jae
or
test
xchg
xor
and
adc
or
jno
adc
je
imul
loopne
inc
shrb
dec
addb
jecxz
sub
clc
cld
sbb
imul
aam
pop
shlb
imul
push
pop
add
push
lock
add
insb
and
push
push
or
loope
sbbb
and
jno
outsl
xor
aas
aad
add
out
loop
push
shrl
or
lea
dec
xor
mov
inc
or
push
subb
adc
cld
mov
jle
jbe
push
lods
and
push
add
orb
orb
cmc
leave
or
mov
lods
in
pop
xor
inc
and
xor
out
mov
push
je
loopne
dec
test
adcl
xchg
sub
add
fmuls
push
shll
mov
cmp
leave
xchg
cmp
jle
mov
push
pop
xor
call
outsb
in
xor
add
inc
addr16
push
movsl
ja
pop
push
cmp
add
adc
xor
mov
push
push
lock
daa
popa
sub
adc
hlt
push
int
cmp
shll
xlat
xchg
xor
insb
addl
cwtl
ret
mov
fs
sbb
int3
insb
in
sbbb
pop
mov
fs
cs
xor
enter
cmp
xor
xchg
xor
fs
leave
cmp
mov
mov
in
dec
push
and
sub
enter
and
dec
xor
and
sub
sbb
xor
leave
repz
dec
loopne
leave
and
and
ret
add
dec
mov
iret
cmp
and
cld
xchg
imul
xchg
ret
pop
sbb
mov
and
inc
cmp
or
sub
orb
mov
inc
cmp
arpl
mov
and
jb
out
sbb
hlt
jbe
rcrb
xor
adc
push
push
jp
movb
ds
dec
mov
add
loop
dec
push
jnp
push
mov
pop
cmp
pop
stos
and
ret
cwtl
xchg
ficomps
sub
cmp
or
inc
mov
orb
or
or
in
lea
cmp
adc
ljmp
aas
sub
sub
lea
pop
add
cmc
inc
ja
mov
in
sbb
and
data16
xchg
add
mov
iret
loopne
nop
mov
pop
xorl
les
cmp
pop
cwtl
cs
cmp
leave
enter
dec
inc
es
leave
push
fmuls
fcompl
push
test
cmp
and
imul
add
lea
cltd
sub
cmpb
inc
rolb
adc
sub
mov
leave
dec
inc
push
aaa
data16
adc
dec
push
pop
in
sbb
test
jne
ret
jmp
lahf
dec
mov
and
adc
mov
mov
and
scas
in
push
inc
pop
sbb
mov
and
add
cltd
inc
add
movsb
and
xchg
add
inc
jne
lods
filds
or
mov
insl
adc
add
call
push
push
roll
sub
add
lds
xor
sub
dec
mov
out
mov
lret
adc
add
push
adc
dec
cmpsb
stos
fwait
adc
std
insl
pushf
push
and
add
fstl
xlat
mov
xchg
rcr
popf
pusha
or
movsb
push
fistl
push
insb
cmc
jecxz
xor
mov
push
inc
mov
inc
mov
pusha
dec
ret
push
negb
adc
in
cmp
js
push
xchg
inc
call
and
inc
add
or
andb
mov
hlt
arpl
adc
and
mov
pop
adc
mov
hlt
pop
mov
lds
dec
mov
sub
cmp
dec
xor
mov
and
pop
add
pop
lea
shrl
mov
or
sbb
rolb
and
mov
mov
inc
lea
add
inc
adc
mov
and
sbb
in
mov
sbb
lock
adc
adcb
sub
test
sbb
or
in
lods
pop
fnstsw
pop
outsl
in
out
std
mov
push
shlb
sahf
pop
push
push
hlt
pop
dec
and
call
sbb
fcmovb
push
nop
cmp
inc
mov
adc
add
les
xor
lret
test
adc
call
out
cmp
xchg
orb
loopne
cwtl
cwtl
dec
lret
mov
cmp
mov
mov
xchg
sahf
imul
mov
daa
add
sub
lea
test
inc
push
stos
cwtl
inc
and
in
jle
sub
mov
dec
jmp
fildl
mov
push
je
and
pusha
call
dec
or
adc
jp
dec
push
adc
lods
lret
cmp
push
mov
pop
xchg
pop
rcrb
adcb
jg
sub
test
test
inc
mov
xor
inc
inc
xchg
sub
aam
adc
stos
mov
lea
cmp
aas
clc
mov
add
sbb
inc
adc
pushf
adc
and
inc
push
sub
dec
iret
cs
cld
fimull
pop
andl
cmp
es
mov
enter
insl
pop
cmp
test
sbb
sub
das
sbb
fs
adc
insl
ss
xchg
call
inc
mov
inc
jle,pn
or
jne
push
cmp
xchg
push
pusha
adc
or
jb
sbb
outsb
movb
bound
xor
roll
pop
jmp
mov
mov
push
test
push
push
cmpsb
mov
and
arpl
push
push
push
cmp
cmp
sbb
adc
mov
add
adc
insl
dec
add
jbe
imull
inc
pop
or
xchg
call
shrb
mov
cmp
xor
and
xchg
sbb
lret
inc
orl
cwtl
je
jg
out
and
rcrb
aaa
sbb
sub
outsb
inc
pushf
sub
push
ss
inc
mov
push
sbb
sbb
mov
test
jp
cwtl
cmpsl
das
lcall
xor
adc
or
and
xor
mov
adc
ret
pusha
cmp
es
cmp
leave
aaa
xchg
push
mov
int3
mov
adc
push
test
sub
je
mov
bound
mov
mov
inc
inc
dec
test
arpl
call
mov
aam
test
mov
or
sub
orb
and
pusha
aam
push
or
cmc
lret
mov
jae
cmp
jmp
popa
pop
or
push
add
adc
and
add
or
fnstenv
inc
cmp
add
xor
bound
adc
fistl
mov
add
cmp
xchg
mov
dec
push
lea
add
lds
or
push
jle
or
or
sub
xor
and
aaa
adc
and
adc
pushf
xchg
mov
push
dec
adc
inc
adc
jg
dec
jle
push
mov
pushl
adc
inc
scas
lret
divb
shll
mov
and
xchg
mov
add
adc
push
push
mov
jo
cmp
adc
push
scas
int
into
enter
aam
adc
push
inc
push
aam
sub
mov
jo
orb
sbb
xchg
fucomi
lods
dec
cmp
adc
cwtl
cld
and
sub
mov
shlb
stos
or
dec
cmp
add
add
cmpsl
nop
mov
inc
pop
fimull
inc
push
pusha
inc
xor
dec
std
cld
mov
pop
cs
inc
sub
js
dec
mov
and
sub
cmc
jle
pop
and
ret
insb
stos
push
add
addl
pusha
fdivs
pop
jge
call
mov
jmp
or
add
inc
dec
dec
ss
inc
fs
and
movsb
pusha
xchg
shl
and
and
cmp
sbb
add
jns
sbb
inc
loope
enter
movsb
xchg
mov
add
xor
outsl
mov
sbb
mov
hlt
push
and
rcrb
lret
ljmp
mov
je
test
xchg
xor
adc
dec
pop
insl
add
adc
sbb
sti
pop
push
adc
xor
hlt
sbb
cs
sub
lcall
push
push
in
lret
fildl
sbb
jecxz
jp
lods
push
push
or
mov
into
inc
lcall
pop
imul
sub
xchg
push
nop
inc
orb
addr16
cmp
ljmp
addl
mov
dec
loopne
inc
std
push
inc
adc
test
mov
sbb
mov
ds
add
jecxz
shll
adc
xor
inc
das
mov
inc
data16
es
fs
add
arpl
mov
sbb
pusha
sbbb
mov
push
or
movsb
lahf
mov
je
mov
inc
rolb
inc
jne
lods
inc
xor
insb
and
mov
cmp
aas
pop
and
mov
daa
or
adc
adc
cmpb
add
sub
sub
les
pushf
mov
inc
xor
imul
out
mov
or
mov
out
addb
xor
ret
jecxz
cmpb
dec
aam
mov
add
push
pop
push
mov
fs
cmp
test
pop
xor
pushf
add
test
sti
xchg
cmpsl
cmp
inc
shl
mov
das
insb
pusha
inc
rcrl
mov
test
je
lret
adc
or
mov
in
cmc
movsl
inc
leave
test
add
sbbb
mov
ja
or
and
xor
xor
xchg
sub
sub
repnz
push
pop
outsl
sub
addb
loopne
xchg
add
xor
jecxz
divl
icebp
ficoms
mov
mov
cmp
push
xchg
mov
sub
mov
sbb
push
inc
dec
mov
pop
bound
pop
adc
and
push
sbb
pop
xor
loopne
icebp
outsb
lods
addr16
out
cwtl
xchg
inc
jbe
rol
and
and
sbb
cmp
test
sbb
inc
jae
pusha
jmp
mov
inc
add
bound
das
cmp
push
jl
jg
addr16
sbbb
xchg
add
daa
cwtl
lret
or
loopne
pop
add
jo
out
and
add
loope
add
iretw
or
std
or
push
xor
mov
cmp
ret
jns
sub
jno
dec
or
int3
insb
sub
push
inc
mov
jg
pop
or
add
stos
mov
mov
dec
sub
lods
adc
adc
jbe
push
addb
in
mov
mov
sbb
test
add
cwtl
inc
or
adc
xchg
sbb
cmp
cmpsl
ret
xor
cmpsl
jbe
ds
cli
or
sub
jmp
mov
sub
or
sbbb
mov
mov
mov
add
mov
int3
cmp
jge
lcall
push
mov
lds
stos
cmp
jecxz
xchg
adc
cmc
arpl
movaps
add
cmpsb
add
mov
bound
cmp
xor
lods
or
add
xchg
sbb
cmc
test
faddl
sub
or
in
dec
loopne
addr16
or
sti
jge
out
xor
dec
mov
lods
xchg
adc
aad
daa
ret
je
bound
push
add
pushf
adc
or
or
push
cmp
jo
mov
aaa
gs
repz
add
lods
mov
xor
test
jb
sub
add
mov
imul
cmovge
and
pop
add
adc
inc
lea
add
mov
addl
rorl
cmp
daa
and
push
stc
mov
shl
mov
sub
xchg
inc
pop
and
js
and
rorl
sahf
test
adcb
popa
inc
in
hlt
cwtl
add
je
cmp
pop
cmp
mov
leave
leave
in
in
rolb
lods
sbb
adcl
mov
lret
mov
ret
and
mov
xchg
add
popa
arpl
and
and
xor
xchg
mov
pop
cmp
pop
push
dec
xchg
add
fnsetpm(287
inc
mov
cmp
push
ja
loopne
repz
pop
enter
je
loopne
sbb
stos
flds
rolb
add
mov
mov
enter
push
cmp
ds
clc
insb
decl
mov
fcmovb
loop
sub
add
adc
call
cld
bound
shll
mov
repnz
or
push
ss
loopw
leave
mov
sbb
push
es
lock
push
mov
call
data16
jo
mov
or
sub
mov
cs
loopne
inc
roll
and
adc
adc
stos
js
xor
push
syscall
dec
jmp
mov
fisttps
pop
jl
aaa
push
and
nop
dec
jno
adc
pop
shll
mov
adc
aaa
sub
push
or
in
enter
nop
mov
shlb
mov
xchg
push
jmp
lcall
inc
pop
xor
push
sarb
lcall
fwait
and
xchg
test
jns
insb
sbbb
ds
loop
data16
sub
aas
sbb
idivl
pop
xchg
and
daa
sbb
cmp
dec
jae,pn
mov
cmp
push
popf
mov
inc
lds
popa
dec
mov
mov
insb
mov
mov
inc
xchg
xor
sbb
lea
pop
mov
sbb
jo
or
jns
add
jne
dec
clc
imul
sub
data16
imul
cli
pusha
inc
lcall
jne
test
gs
add
movl
mov
roll
xor
loopne
mov
xor
push
cmp
les
add
sbb
mov
add
lods
into
add
jo
js
mov
add
xchg
js
add
mov
add
enter
dec
dec
pushf
icebp
test
sub
stos
inc
push
pushl
add
add
and
scas
in
fdivl
add
cmp
bound
jns
inc
and
pushf
repnz
dec
leave
inc
add
int3
es
inc
and
push
sbb
jns
repnz
cmp
outsb
subb
mov
test
outsb
leave
xchg
fsubl
lahf
andb
push
or
out
popa
add
jecxz
sahf
xor
xchg
push
insb
push
sbb
jmp
xchg
pop
add
loopne
stos
in
testb
cld
push
adc
push
sbb
push
xor
push
ret
addl
pop
insb
shld
or
mov
push
mov
push
inc
and
daa
andl
or
mov
sub
adc
insl
or
and
idivb
add
aam
add
adc
icebp
ret
sub
loop
sbbb
or
mov
push
stos
enter
mov
cs
adc
sub
jecxz
cmp
dec
push
les
into
add
sbb
adc
je
xchg
mov
push
jae
cmp
pop
or
lret
popa
aam
stos
ret
fs
xor
mov
push
push
inc
push
pop
push
nop
imul
stc
mov
and
iret
mov
or
xor
clc
and
push
loope
jno
add
mov
and
fcoml
sbb
pusha
push
shl
in
xchg
jle
iret
xor
adcl
mov
pop
lea
or
ds
and
shlb
and
mov
out
arpl
mov
dec
xchg
stos
adc
adc
nop
lea
mov
sub
xor
or
or
lcall
pop
movsb
push
xchg
lods
sub
fwait
sbb
push
repz
sbb
es
mov
leave
xor
loopne
scas
fstpl
sarb
rcrb
adc
and
dec
or
repnz
adc
outsb
mov
pop
lcall
sub
pop
jmp
and
mov
cmp
mov
push
rcll
inc
mov
and
or
mov
dec
jge
jnp
inc
movsb
lahf
js
xor
mov
adc
loopne
test
mov
pusha
sub
dec
xchg
call
mov
sbbl
mov
jl
movb
jge
add
in
jbe
or
add
stos
js
das
push
push
inc
add
js
mov
rorb
add
jne
shlb
lret
mov
adc
mov
inc
fldt
xchg
cmpl
jp
test
movl
sbb
add
or
lods
or
mov
or
adc
cs
mov
mov
xchg
push
gs
push
and
and
add
dec
mov
jo,pt
rorb
lret
xchg
xchg
inc
adc
adc
clc
rorb
sbb
push
adc
jnp
mov
or
dec
sbb
adc
stos
mov
pop
int
mov
cmp
rolb
sub
rcrb
adc
out
mov
scas
mov
sbb
les
arpl
add
xchg
pop
pop
add
mov
ficoms
dec
test
adc
mov
and
shr
mov
pusha
jmp
dec
jns
or
les
rolb
fidivl
movsb
and
and
ds
cmp
adc
enter
repnz
mov
or
push
push
into
and
mov
mov
jbe
shl
adc
push
daa
mov
or
out
out
pop
jle
aam
dec
xor
push
movsb
orb
and
mov
sub
mov
fadd
lods
fcoml
fdivrl
pop
loop
mov
dec
jp
cwtl
adc
add
push
fdivl
mov
test
add
add
inc
loopne
rcrl
insb
xchg
inc
arpl
adc
inc
push
cmp
xchg
pop
push
push
inc
mov
lahf
ret
inc
icebp
inc
mov
jno
sub
dec
pusha
push
icebp
sub
jns
or
loope
dec
push
std
add
out
sbb
sub
ljmp
add
mov
sbb
pusha
add
cwtl
push
or
sbbl
sbb
push
fs
adc
rcr
mov
outsl
je
dec
mov
push
lods
movsb
sub
and
jmp
ret
fcomp
cmp
mov
or
rcll
xor
leave
xlat
test
stos
mov
jae
ss
gs
test
and
adc
gs
lcall
and
add
push
std
fidivs
adc
or
int
test
in
sub
push
sub
cwtl
pop
and
add
inc
adc
adc
adc
xchg
jecxz
add
sub
imul
cmp
adc
in
and
mov
lea
inc
sbb
or
jbe
sub
adc
sub
inc
xor
fidivrs
cld
mov
imul
cmpsl
mov
or
inc
psubusb
les
das
push
out
dec
cmp
mov
jnp
lret
cmp
pop
lods
add
xchg
loop
and
cltd
push
push
inc
add
aam
jo
jae
pop
pop
xor
in
stos
add
pop
pop
xchg
jb
outsb
test
outsb
addb
lahf
outsb
subb
pop
push
add
enter
test
leave
add
outsb
test
idiv
stc
mov
test
in
xchg
in
in
add
faddl
idivb
sbbb
test
fbld
negb
nop
insb
add
sbb
outsb
push
enter
out
xchg
push
repnz
test
outsb
enter
test
outsb
cmp
push
test
ljmp
inc
pop
repnz
add
test
inc
push
adc
outsb
test
add
test
test
int3
enter
test
outsb
xchg
sub
mov
insl
fists
mov
test
and
and
sub
add
mov
outsb
inc
adc
push
fisttps
mov
mov
or
leave
nop
inc
push
add
inc
jb
test
add
push
push
sub
and
push
add
mov
test
and
jle
popa
cmpsb
in
outsl
push
sub
add
or
add
sbb
inc
or
or
add
lahf
push
or
call
in
and
js
mov
test
sbb
daa
sti
daa
sbb
and
int
sbbb
test
or
jnp
test
call
xchg
jb
mov
fucomp
mov
sub
jns
jmp
adc
inc
mov
add
sub
inc
adc
lret
xor
pop
mov
mov
inc
aaa
adc
mov
push
popf
or
pop
push
stos
stos
in
mov
sub
fidivs
xchg
push
call
mov
pop
jp
and
lds
out
mov
mov
or
pusha
push
jle
ja
adc
adc
mov
jp
xchg
and
out
push
ret
sub
scas
adcb
leave
add
addb
or
out
inc
or
push
pop
and
rep
int
enter
jne
mov
and
jp
xchg
add
xor
xchg
movsb
push
int
pusha
xor
ljmp
inc
xchg
int3
add
dec
and
dec
ret
andb
outsb
adc
rcrb
movsl
je
imul
dec
pop
fistpl
xor
bound
cmp
test
lds
or
shlb
push
jo
addb
sbb
adc
pop
jmp
pop
or
or
mov
adcl
adc
push
and
sub
sub
icebp
test
push
je
xchg
add
je
adc
xor
pop
dec
neg
addl
mov
or
testl
add
xchg
and
mov
push
sub
inc
add
push
bound
mov
xchg
add
test
daa
leave
xor
cwtl
test
inc
xchg
loop
cmp
mov
cmpsl
call
add
or
mov
dec
or
jo
xchg
lret
sbb
xlat
push
push
in
mov
add
push
xchg
or
and
push
mov
and
lods
inc
mov
push
xchg
jle
ja
or
roll
inc
sub
adc
pushf
add
or
xor
dec
pop
lods
adc
pop
int
mov
or
fstps
sub
or
jbe
and
pop
stos
popa
adc
lods
and
nop
dec
leave
test
into
sub
dec
mov
ljmp
mov
and
rolb
xchg
lock
sub
adc
inc
mov
jbe
adc
xor
inc
add
lret
into
xor
into
add
push
dec
or
fildll
adcl
pusha
imul
push
cmpsl
mov
xlat
mov
mov
les
rolb
push
dec
pushf
pop
lock
mov
adc
adc
cmp
in
fcomps
rcrb
or
fstl
and
push
cmp
mov
or
sub
adc
pop
add
mov
repnz
in
test
jne
ret
out
add
out
insb
addr16
pop
pop
in
int3
push
addb
int
test
pop
test
lahf
in
add
orl
push
mov
fstps
call
les
mov
or
and
sbb
push
adc
jmp
out
dec
sbb
pusha
xorb
mov
fbld
lea
xchg
or
add
cs
addr16
inc
mov
clc
outsb
xor
cmpb
jne
inc
or
insl
mov
mov
ss
or
pop
les
and
mov
mov
inc
shrb
adc
mov
aam
adc
iret
pop
sub
jbe
jmp
push
pop
push
push
fldt
dec
adc
xchg
cwtl
xchg
je
lods
stos
jbe
mov
rorl
repz
test
pop
loop
fildl
mov
hlt
mov
movsb
arpl
enter
add
sarb
add
add
ret
xor
shlb
mov
call
mov
add
lcall
test
or
arpl
push
xchg
sbb
push
mov
cmp
sti
add
test
or
sub
scas
shll
sbb
andw
xchg
pushf
add
cmp
or
popf
cltd
mov
push
sub
jmp
gs
ja
mov
js
or
jmp
pop
pop
push
jl
fdivr
fs
jl
push
jno
cmp
pop
mov
sbb
jb
push
adcb
in
in
mov
jp
cmp
xlat
jl
xchg
push
xchg
icebp
shrb
push
and
or
out
outsl
add
adc
add
sbb
fisubrl
xlat
jne
enter
push
mov
jmp
sbb
out
jmp
daa
push
or
add
push
push
mov
mov
inc
cli
test
jbe
or
push
xor
dec
mov
or
push
sbb
nop
push
mov
stos
ss
in
cmpsl
ds
xchg
inc
sub
add
ret
sub
hlt
pusha
hlt
dec
lock
adc
dec
sbb
andb
cmp
js
sub
dec
mov
cs
push
or
mov
or
add
pop
outsb
push
sub
pusha
dec
es
lods
shlb
push
cli
push
dec
shrl
xchg
add
push
fldcw
xor
int3
add
insb
xor
lret
xorb
pop
mov
js
and
pop
dec
pusha
outsl
add
pusha
sbb
test
ss
pusha
test
dec
mov
dec
or
nop
mov
orb
inc
dec
in
push
inc
js
sbb
int3
or
jmp
sbb
sbb
sbbb
sbb
fisttpl
ret
pushf
and
addb
pop
dec
mov
and
ss
and
jl
leave
inc
repnz
xor
xchg
outsl
ret
test
adc
sbb
sub
shlb
xchg
lock
mov
pop
clc
mov
and
dec
adc
test
or
gs
dec
xchg
or
ljmp
aas
mov
enter
ss
enter
xchg
insb
mov
push
mov
test
add
fs
leave
test
mov
inc
push
xchg
sbb
push
inc
inc
pop
jb
dec
aad
cmpsb
test
adc
popa
aaa
ffreep
mov
sbbl
popa
or
push
xchg
lea
xor
push
mov
nop
push
sbb
adc
shlb
pop
dec
movsb
imul
je
pusha
cmp
pop
addb
push
adc
cmp
mov
mov
ret
sarb
push
cmp
in
and
xchg
ret
lret
in
or
and
xor
inc
push
or
xchg
sbb
xchg
add
sbb
leave
or
cmp
pop
sub
xor
enter
add
cmp
or
cmp
cmpb
nop
outsl
or
pop
test
ja
and
fmuls
enter
enter
orl
insb
fldenv
pop
popl
and
mov
jge
cmp
inc
fisttpll
fadds
cmp
mov
cmpl
ja
shlb
xchg
insb
and
xchg
mov
xchg
lea
sbb
add
repnz
pop
mov
lock
mov
sbb
setno
sub
arpl
dec
fsubrl
insb
nop
dec
fsub
sbb
in
aam
sub
les
gs
cmp
fsubs
mov
enter
enter
in
mov
enter
lock
ljmp
pushf
ss
sub
shlb
orl
cmp
pop
enter
in
cmp
pushf
roll
je
inc
xchg
and
and
arpl
mov
and
pop
into
jne
mov
mov
in
sbb
xchg
rcrb
int3
sub
inc
pop
sub
clc
push
call
adcb
or
sbb
adc
jmp
xchg
sub
sbb
and
mov
sub
ret
dec
ss
nop
ret
cs
or
js
mov
push
idivb
or
call
sub
sub
sbbl
shr
push
and
gs
gs
mov
pop
dec
aam
js
fs
add
jmp
or
aaa
xchg
sub
cmp
ret
jl
mov
sub
inc
call
sbb
or
xor
mov
push
sub
cmp
dec
lcall
mov
flds
sbb
jb
inc
add
cwtl
inc
sarb
stos
addr16
cmpsl
or
js
lods
in
fidivs
hlt
sbb
xchg
sub
enter
sub
sub
in
sub
push
shlb
aas
dec
fmul
mov
test
jb
test
xchg
or
and
and
lret
das
dec
inc
dec
mov
pshufw
rclb
mov
dec
aaa
cmp
dec
sub
and
pusha
enter
inc
inc
enter
outsl
inc
sbb
in
pop
sbb
inc
nop
sub
sub
push
fs
inc
leave
test
mov
add
xor
inc
ljmp
add
or
jmp
ljmp
shlb
mov
jge
adc
xorl
pop
sub
stc
rcrl
and
nop
hlt
inc
adc
adc
fisubrs
pop
out
rcl
jmp
dec
aaa
cmp
mov
add
and
pop
adc
int3
adc
loopne
inc
jle
imul
shrb
adc
adc
inc
mov
add
dec
flds
sbb
fsubl
in
jae
push
imul
nop
fs
pop
lock
inc
fists
add
xor
adc
inc
mov
inc
jb
cmp
and
xchg
sbb
mov
add
fs
enter
enter
daa
inc
push
sbb
xor
roll
add
add
add
das
orl
cmpsb
imul
or
or
pop
and
xor
cmp
and
pop
imul
in
lcall
pop
add
in
shl
pusha
pop
imul
aaa
sbb
and
inc
rclb
leave
addr16
push
and
orl
pop
nop
pop
mul
add
or
dec
rorb
cmp
and
sub
xor
cmp
push
enter
dec
and
inc
push
mov
sbb
jns
mov
mov
test
mov
ret
rcrb
nop
and
jmp
add
or
sahf
icebp
xor
adc
sbb
jns
xor
sub
out
sbb
aaa
rorl
ja
sbb
add
dec
lcall
push
xchg
nop
nop
mov
mov
pop
and
rorb
cmp
cmp
adc
sbb
test
and
pop
sub
int
lods
sbb
das
dec
or
push
pop
and
enter
jb
shll
push
mov
pop
mov
lahf
sbb
pop
outsl
cmp
sbb
sbb
sbb
sbb
mov
rcrl
das
ficompl
andl
sbb
sbb
sbb
jo
inc
sbb
enter
cmp
orl
orl
scas
orl
mov
leave
shlb
jecxz
fistpl
pop
and
pop
xchg
add
daa
dec
adc
inc
jbe
aaa
jo
cmp
ss
pop
divb
sbb
mov
and
enter
cmp
push
test
daa
mov
mov
pusha
dec
sahf
push
iret
sbb
sbb
cmp
sbb
adc
pop
jbe
sbb
jecxz
xor
xor
sbb
cmp
sbb
add
jae
test
mov
cmp
cltd
sbb
into
flds
mov
sbb
sbb
das
shl
xchg
add
sbb
or
push
sbb
and
xor
movntps
xor
pushf
in
mov
inc
push
sbb
enter
pusha
push
or
jnp
addl
orl
pop
xchg
sahf
pop
and
enter
mov
les
int3
or
or
pmulhw
cmpsb
stc
xorb
cmpl
adc
movsb
adc
push
enter
xchg
sbbl
nop
cmpsb
sbb
push
pop
fs
cmpsb
sbb
outsb
jns
nop
cmpsb
sbb
nop
cmpsb
sbb
lcall
fmul
out
add
fmuls
movsb
imul
cmpsb
sbb
cli
pop
sbb
and
push
sbb
or
inc
ds
xor
and
and
xor
and
and
and
and
or
and
and
pop
adc
mov
sbb
adc
mull
rcrl
and
adc
and
and
and
aas
dec
and
pop
and
jne
je
xor
test
lea
or
popf
popf
sub
xor
pop
mov
lcall
xchg
cmpsb
sbb
pop
xor
stc
enter
xor
xor
xor
aaa
sub
xor
inc
adc
inc
and
enter
pop
arpl
shll
add
and
shll
mov
xlat
or
ret
pop
iret
or
mov
pop
sti
ss
add
out
or
scas
and
dec
and
add
or
dec
inc
dec
push
add
push
xor
push
and
xchg
daa
andl
pop
or
movsb
lods
mov
mov
dec
sahf
scas
mov
jecxz
sbb
in
pop
scas
pushf
cmp
stc
and
and
sbb
add
dec
aaa
dec
rcrl
cmp
dec
and
xor
pop
pop
bound
and
sbb
in
and
pop
mov
inc
mov
add
inc
rorl
loope
sbb
decb
ret
and
push
orl
rdpmc
shll
adc
or
dec
push
pop
pop
imul
addr16
fstps
out
ror
and
nop
rcrl
and
xor
daa
pop
in
wbinvd
lods
out
or
testb
mull
repnz
adc
das
dec
inc
or
xor
add
inc
sarb
daa
mov
jo
add
orb
mov
or
and
inc
rolb
sbb
inc
lock
pop
xchg
push
cmp
nop
xor
fistpll
daa
in
test
cmpsl
push
inc
nop
andl
ja
or
or
enter
das
xor
pop
rol
enter
xchg
loopne
popf
roll
incl
das
in
inc
sub
mov
sub
sub
or
enter
pop
dec
sub
push
xor
inc
pop
sub
sub
cmp
push
mov
lods
and
adc
xchg
shrl
mov
pusha
adc
sbb
add
and
and
int
stc
adc
rcr
ficoml
sub
add
xchg
int
adc
mov
decb
sbbl
rcll
xchg
adc
lcall
push
or
cmp
in
push
icebp
and
jmp
out
cmpsl
sti
fs
mov
jb
ja
inc
cmp
and
ljmp
gs
aaa
xchg
aas
imul
add
test
xor
test
imul
mov
call
push
pop
jle
in
arpl
xchg
dec
pop
push
sub
mov
iret
or
or
add
ud0
cmp
dec
add
xchg
push
mov
or
subb
lret
imul
cmp
test
jp
mov
iret
lahf
xor
into
adc
sbb
in
data16
pushf
mov
test
pop
dec
sysretw
imul
shlb
sbb
dec
xlat
or
pop
inc
xor
sbb
xlat
popf
pop
ss
fs
fs
int3
add
xor
mov
fs
shll
dec
cmp
sbb
lcall
aam
cmpsb
imul
insl
lcall
in
faddl
adc
add
bound
mov
test
xchg
fbstp
insb
add
cld
mov
lock
jl
fildll
fimuls
add
jb
rcrb
das
add
je
jae
out
lret
xchg
sarl
sti
aaa
xchg
dec
push
arpl
aaa
popf
add
cmpsl
mov
pop
push
jg
pop
js
je
add
xchg
dec
pop
adc
or
imul
ss
sub
push
gs
dec
push
push
sbb
pop
xchg
inc
mov
xor
es
lcall
adc
dec
pop
mov
mov
jge
aad
sbb
cld
scas
xor
std
jg
sahf
push
or
rcrl
scas
adc
es
fdivrs
mov
jnp
adc
lahf
gs
mov
xchg
fucomip
daa
clc
sub
daa
movsb
lret
jnp
push
jl
mov
lods
aad
imul
rcrb
fchs
inc
lahf
push
pop
js
cld
sahf
cmp
mov
shl
jno
jo
lret
or
jno
scas
or
sbb
js
arpl
cs
adc
ljmp
sub
ret
inc
jbe
daa
adc
sbb
lea
mov
call
or
sti
hlt
jmp
xchg
dec
int
icebp
fidivl
mov
adc
fstl
jmp
mov
lea
outsl
cwtl
xor
imul
mov
inc
inc
mov
shlb
arpl
or
add
pushl
fdivl
fisubl
std
adc
or
sub
imul
out
mov
ja
imul
add
push
mov
xchg
dec
std
lret
mov
or
xorl
test
cld
das
repnz
add
jge
out
add
data16
inc
clc
lcall
out
xchg
loope
inc
push
cs
sub
pop
pop
jecxz
outsb
push
xlat
jmp
xchg
push
test
sub
aaa
ret
inc
cli
cmp
ret
jp
jne
in
mov
mov
inc
cmpsl
push
pop
stos
cs
or
xchg
lds
add
and
inc
adc
cld
bnd
aam
xchg
add
pop
mov
test
jbe
push
mov
xchg
dec
pop
mov
out
outsl
fdivr
mov
xchg
jg
and
sub
pop
push
sar
xor
sbb
pop
jns
mov
loopne
push
aam
push
daa
in
lahf
or
adc
leave
xor
sub
dec
cmpsl
rcll
adc
pushl
ja
rorb
daa
sbb
mov
repz
jg
jmp
cmpsb
fcmovu
stos
jnp
jg
cld
adcb
jb
mov
pushl
xchg
mov
adc
icebp
subl
dec
in
jns
adc
clc
mulb
lret
in
inc
imul
mov
mov
int
mov
dec
in
andl
or
ret
sarl
add
pop
loope
add
js
out
sub
subb
jmp
inc
push
mov
adc
mov
lock
lcall
mov
push
movsb
push
mov
jae
repz
out
mov
mov
jg
scas
rclb
xor
ret
mov
aad
orl
cmp
adc
inc
mov
dec
jno
add
dec
iret
add
adc
fs
xor
xchg
lock
or
mov
push
mov
shlb
mov
scas
notb
pop
jle
fsub
mov
lea
mov
add
cmp
jmp
add
in
sub
ret
mov
and
and
imul
mov
xor
scas
lcall
loopne,pt
push
jns
push
enter
cmp
xchg
jg
insl
stc
jns
xor
mov
sbb
cmp
lock
mov
push
movb
mov
inc
dec
aam
subb
xor
ljmp
ds
shl
jecxz
push
add
xchg
xchg
xor
enter
out
mov
sbb
repnz
jmp
mull
mulb
ds
fbstp
sub
add
pop
pop
std
hlt
aaa
mov
xorb
cmp
lea
movsb
xchg
lcall
dec
jo
mov
adc
mov
notl
or
notrack
stos
hlt
or
mov
jg
mov
cwtl
mov
nop
sub
das
addl
add
aaa
cmpsb
mov
loopne
call
gs
dec
jne
push
jb
jbe
xchg
addr16
xor
inc
outsl
les
pop
ds
mov
jecxz
cld
dec
lcall
add
mov
neg
sbb
mov
jg
inc
iret
in
jg
ret
pop
lcall
stos
cld
outsl
dec
lea
lock
xorl
addl
adc
stc
loope
aas
add
rcll
jp
stos
push
out
loop
push
mov
out
pop
shrb
into
xchg
or
push
cld
aaa
push
xchg
sub
js
inc
sbb
xchg
jg
xchg
lret
fwait
dec
add
js
sub
jbe
notl
daa
test
outsb
or
imul
fucomi
add
incb
out
add
mov
jg
add
jnp
adc
fiadds
ds
aas
dec
pop
outsb
push
push
aas
add
jge
cs
fdivr
mov
inc
fld
sarb
dec
push
xchg
cmpsb
xlat
cld
div
fcmovnb
mov
jae
in
xchg
and
xchg
shll
xchg
ljmp
adc
sbb
ret
mov
lea
sub
mov
xchg
movq
movsb
jg
lret
sub
sbb
loopne
sbb
mov
push
jg
icebp
test
cmp
fwait
pop
enter
mov
scas
fcomip
adc
test
fistpl
jae
iret
pushf
jecxz
mov
or
cld
shll
std
or
push
mov
xchg
dec
fcmovbe
ret
jne
imul
je
call
aas
aas
je
popa
ja
mov
add
push
aad
push
je
jno
testl
push
adc
xchg
inc
sub
sub
daa
out
scas
loope
fwait
ja
jp
ljmp
and
loope
and
cmpsb
rcll
adc
stc
jg
imul
jg
cmp
sbb
loopne
inc
sub
arpl
nop
jae
or
nop
xor
addb
pop
rolb
enter
and
out
outsl
adc
mov
fdivrp
pushl
or
jbe
test
push
loopne
sbbl
bswap
push
jle
pop
stc
adc
sbb
sarl
stc
lcall
pop
xor
mov
popfw
dec
subb
jecxz
or
mov
xor
incl
lahf
insb
xlat
aad
cltd
cmp
cmp
dec
enter
sbb
decl
dec
cltd
leave
jnp
fsubrs
fdivr
inc
or
pop
jns
dec
in
dec
subb
cmc
cmpsb
arpl
push
mov
in
inc
ljmp
mov
addr16
inc
push
je
jo
pop
imul
aaa
fdivr
daa
pusha
cmp
sbb
gs
sub
aad
pop
fcom
sbb
pop
arpl
pop
gs
outsl
jb
adc
add
xchg
and
sub
inc
inc
add
mov
fistpll
and
add
dec
outsl
arpl
inc
jb
or
je
je
jb
jne
fcoms
jo
pushf
inc
adc
jbe
jb
outsb
mov
jle
insl
outsb
je
sbb
bound
inc
js
je
push
arpl
ljmp
jae
or
sbb
gs
inc
imul
dec
popa
je
or
jo
outsb
xor
divl
add
or
mov
popa
inc
outsl
jb
cmp
dec
bound
arpl
pop
imul
and
sbb
fxch
mov
push
adc
mov
gs
cmp
dec
jbe
dec
insb
mov
gs
arpl
jecxz
jne
insb
pop
xchg
insl
or
jae
insl
mov
push
mov
inc
push
jne
or
clc
pop
push
sub
imul
dec
jo
ds
fistpl
insb
push
push
outsb
sti
jae
outsl
imul
inc
push
jae
pop
fstpt
push
pusha
insl
hlt
cmp
in
jne
mov
popa
inc
mov
arpl
cli
xchg
dec
outsl
fs
pop
dec
popa
xor
sarb
imulb
jle
imul
inc
fs
dec
jbe
sbb
jo
pusha
push
popa
or
mov
imul
dec
dec
jno
inc
jns
or
mov
inc
jmp
in
int
out
push
dec
cmp
xchg
and
jg
dec
mov
jp
das
pop
idivb
outsl
mov
pop
mov
mov
xchg
inc
mov
and
inc
stos
leave
dec
add
sub
or
insb
or
lret
xor
or
and
mov
add
cmpsl
sti
pushl
add
imul
lahf
outsb
pop
mov
popa
arpl
inc
insb
idiv
outsl
lret
inc
push
inc
inc
push
inc
push
xor
xor
pop
sub
xor
sub
aas
and
in
push
ret
push
xchg
pop
add
lods
jne
xchg
pop
push
int
rdpmc
in
fsubrl
push
adc
xor
jge
orl
dec
push
inc
inc
dec
dec
inc
dec
gs
in
flds
push
mov
mov
adc
jo
movsl
mov
out
push
dec
dec
cmpsl
push
pop
pop
xor
mov
fmul
sbb
pop
pop
adc
insb
inc
mov
inc
dec
aas
dec
pop
in
push
xchg
mov
leave
push
xor
inc
inc
mov
or
sub
and
or
stos
xor
stos
test
or
call
ficomps
sbb
insb
inc
sbb
dec
lahf
dec
push
and
sbbl
mov
pusha
test
fwait
pop
inc
mov
dec
fdivr
ja
fmuls
clc
test
ret
inc
xchg
outsb
jo
dec
inc
dec
jb
sarb
push
sbb
jae
bound
aas
xor
mov
push
imul
and
dec
dec
add
inc
or
inc
inc
mov
enter
ret
mov
dec
lret
sub
aas
xor
push
mov
cmp
jns
cmpsl
ret
push
pop
aaa
into
xor
add
test
xor
xor
push
and
subl
inc
inc
inc
push
dec
inc
or
push
fsts
inc
inc
xor
inc
pop
into
repz
inc
xchg
sarb
imul
or
push
fdivs
pop
mov
jns
stos
in
xor
ret
cld
mov
insb
gs
iret
in
call
and
xor
jo
mov
insl
cwtl
push
fists
arpl
insl
sbb
insl
xlat
mov
sub
or
pop
mov
jb
and
cmc
inc
sub
push
adc
pop
lods
mov
test
mov
imul
mov
popa
cwtl
imul
mov
pop
inc
xchg
push
cmp
pop
and
je
cmc
insl
insl
mov
popa
mov
outsb
dec
addr16
jae
jb
ss
bnd
inc
push
daa
insl
sbb
jae
pop
ljmp
push
sbb
out
pop
xchg
imul
imul
imul
adc
xor
pop
xchg
jo
lock
or
insb
data16
andb
push
sub
dec
inc
aas
mov
or
inc
sbb
lcall
das
outsl
xor
pop
popa
gs
mov
mov
fdivr
add
push
pop
or
shrl
push
enter
push
push
push
lods
add
or
jp
bndldx
adc
add
cmp
scas
insb
inc
div
scas
call
dec
imul
lret
jae
xor
add
add
cmp
add
loopne
out
fnstenv
add
mov
adc
lods
fwait
in
lcall
add
mov
add
daa
add
xchg
mov
pop
push
add
inc
and
pusha
pop
sub
cmp
push
jnp
popf
loope
je
scas
mov
jmp
push
push
or
pop
cs
inc
sbb
mov
popa
or
frstor
add
add
fldenv
pusha
daa
rorb
arpl
jnp
negb
pop
repz
dec
add
ja
sub
movsb
dec
pop
jb
add
add
add
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
