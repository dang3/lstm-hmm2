xor
xor
data16
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
push
mov
push
mov
mov
mov
pop
pop
ret
mov
push
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
lea
push
call
movl
movl
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
movl
movl
mov
push
mov
push
call
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
lea
push
call
movl
movb
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
movl
movb
mov
push
mov
push
call
mov
pop
ret
lea
push
mov
add
lea
push
call
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
lea
push
call
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
lea
push
call
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
movl
movb
mov
push
mov
push
call
lea
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
lea
push
call
call
movl
movb
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
lea
push
call
movl
movb
mov
push
mov
push
call
mov
pop
ret
nop
ret
lea
push
mov
add
mov
mov
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
mov
cmp
je
jmp
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
mov
xor
divl
test
jne
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
mov
mov
pop
ret
push
mov
add
mov
mov
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
mov
cmp
je
jmp
lea
cmp
jns
mov
mov
lea
xchg
lea
add
and
and
sub
add
xchg
mov
xchg
add
xchg
mov
mov
add
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
push
mov
mov
xor
call
mov
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
mov
mov
mov
call
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
push
mov
mov
xor
call
mov
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
mov
mov
movb
movb
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
lea
mov
push
add
jmp
mov
mov
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
lea
mov
push
mov
jmp
lea
mov
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
mov
add
mov
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
lea
cmp
jns
mov
mov
lea
xchg
lea
add
and
and
sub
add
xchg
mov
xchg
add
xchg
mov
mov
add
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
mov
sub
add
add
mov
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
mov
cmp
je
jmp
lea
cmp
jns
mov
mov
lea
xchg
lea
add
and
and
sub
add
xchg
mov
xchg
add
xchg
mov
mov
add
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
mov
mov
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
mov
mov
movl
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
pop
ret
push
cmp
testb
pop
sbb
addl
pop
cmpb
cmpb
insl
jb
jae
sbb
dec
subb
jp
dec
insl
andb
sbb
dec
subb
jp
pop
insl
jbe
sbb
jg
subb
jbe
subb
sbb
pop
jbe
dec
insl
cmpb
insl
jbe
insb
sbb
test
xorl
jg
sbb
sbb
test
jbe
insl
sbb
sbb
sub
sbb
jg
sbb
sbb
inc
movsb
lcall
sub
movsl
push
lock
repz
lock
xchg
lds
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
repz
push
dec
fsubl
mov
mov
push
movsb
fcmovnu
sahf
pop
sbb
sahf
pop
sbb
lcall
mov
iret
dec
test
push
jecxz
pop
inc
dec
movsb
push
jecxz
pop
and
push
jecxz
dec
pop
movsb
push
jecxz
pop
and
jecxz
pop
aaa
dec
movsb
push
jecxz
pop
cmp
push
decl
push
jecxz
dec
push
movsb
push
jmp
push
sub
sbb
movsb
pop
out
mov
jmp
mov
jmp
fwait
sbb
sbb
rcrl
int3
sbb
sbb
push
jmp
sbb
sbb
push
movsb
pop
pop
sbb
decl
push
jecxz
dec
daa
mov
add
and
movsb
push
pushf
xor
adc
movsb
sbb
jmp
movsb
pop
or
jmp
movsb
push
movsb
pop
or
jmp
movsb
pop
or
jmp
movsb
push
imul
pop
sbb
shld
sbb
lock
dec
movsb
push
add
push
jecxz
dec
xor
cmp
sbb
mov
lret
pushf
fistpl
dec
movsb
push
jecxz
dec
xor
push
sti
pop
pushf
push
notl
movsb
push
negl
push
movl
jae
sbb
xchg
lock
push
jmp
pop
inc
sbb
jmp
jecxz
pop
aas
mov
mov
or
dec
movsb
push
fisttps
push
jecxz
dec
push
sbbl
sbb
test
movsb
push
jecxz
pop
cmp
push
jecxz
dec
inc
sbbl
sbb
test
movsb
push
and
push
jecxz
dec
inc
movsb
inc
rep
jbe
sahf
xchg
aaa
sbb
lock
xor
data16
lcall
fcomi
std
movsb
testb
sbb
sahf
pop
sbb
jnp
and
sub
mov
sbb
sbb
loop
ja
sbb
insb
cvtpi2ps
add
sbb
sbb
pusha
sbb
sbb
fldt
xor
add
add
sbb
inc
shlb
add
sbb
add
mov
or
add
mov
sti
and
sbb
sbb
sbb
out
push
insb
sbb
pop
xchg
mov
mov
add
sbb
pushw
movsl
or
int
sub
pop
add
lock
add
lock
in
fdivrl
frstor
sbb
mov
lock
icebp
lock
jecxz
enter
movsb
lcall
lock
and
sbb
fsts
and
sbb
fsts
sbb
movsl
push
hlt
movsl
inc
hlt
mov
sbb
push
hlt
fwait
outsb
hlt
sbb
fsts
sbb
lock
repnz
xchg
movsl
sbb
sbb
push
hlt
sbb
movsl
push
cmc
movsb
inc
out
movsl
pop
sbb
hlt
mov
lock
push
cmc
movsl
push
cmc
xor
fsts
sbb
push
hlt
fwait
outsb
hlt
sbb
fsts
sbb
push
hlt
sbb
movsl
push
cmc
sub
movsl
inc
hlt
and
lock
sub
movsl
inc
hlt
and
sbb
sbb
movsl
push
hlt
movsl
fwait
pop
dec
pop
sbb
movsl
push
cmc
movsl
inc
repnz
sbb
push
hlt
fwait
outsb
hlt
sbb
movsb
testb
pop
sbb
decl
push
lock
mov
pop
lock
sbb
sub
mov
sub
movsl
push
and
sbb
test
sbb
sbb
sub
mov
movsl
fwait
pop
dec
pop
sbb
mov
movsl
fwait
pop
dec
pop
sbb
pop
sbb
sbb
mov
movsl
inc
out
mov
sbb
mov
and
sbb
pop
sbb
test
sbb
sbb
movsl
push
out
movsl
fwait
pop
dec
pop
sbb
icebp
movsl
push
icebp
push
dec
faddl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
mov
mov
call
mov
mov
cmpl
ja
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
push
call
mov
lea
mov
subl
movb
movb
movb
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
mov
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
mov
mov
call
mov
cmpl
je
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
lea
push
push
mov
sub
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
cmp
je
mov
subb
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
xor
add
mov
xor
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
incl
mov
cmp
jne
lea
cmp
jns
mov
mov
lea
xchg
lea
add
and
and
sub
add
xchg
mov
xchg
add
xchg
mov
mov
add
mov
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
push
mov
push
call
cmpl
je
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
push
mov
pushl
xchg
push
jmp
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
push
mov
add
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
cmpb
jne
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movb
lea
cmp
jns
mov
mov
lea
xchg
lea
add
and
and
sub
add
xchg
mov
xchg
add
xchg
mov
mov
add
push
call
mov
mov
mov
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
jmp
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
movb
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
mov
mov
pop
ret
add
jae
jae
js
cs
insb
and
add
push
mov
add
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
call
test
jne
mov
jmp
movw
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
call
mov
pop
ret
push
mov
add
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
lea
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
movb
mov
push
mov
push
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
movl
movb
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
push
call
mov
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
lea
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
movb
mov
push
mov
push
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jge
xchg
mov
mov
mov
mov
mov
add
dec
jne
inc
mov
sub
lea
mov
sub
lea
add
mov
dec
movl
movb
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
mov
pop
ret
add
add
jae
jae
js
cs
insb
add
add
call
ret
mov
push
mov
add
cmp
jne
add
mov
mov
jmp
inc
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
dec
lea
lea
and
inc
lea
push
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
lea
push
mov
push
call
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
lea
push
call
call
movl
movb
mov
push
mov
push
call
cmp
jle
lea
mov
sub
mov
xchg
lea
lea
sub
inc
mov
xchg
lea
inc
add
mov
lea
sub
and
movl
movl
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
js
inc
dec
mov
mov
mov
mov
mov
lea
mov
jmp
lea
lea
xchg
sub
dec
jne
mov
mov
xchg
inc
movl
movl
mov
push
mov
push
call
lea
push
call
movl
movb
mov
push
mov
push
call
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
movl
movb
mov
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
lea
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
xchg
cmp
jnp
sub
add
and
sub
and
and
mov
mov
add
mov
sub
xchg
mov
lea
dec
je
mov
mov
xchg
lea
movl
movb
mov
push
mov
push
call
mov
mov
xchg
mov
mov
sub
jmp
add
add
mov
inc
and
add
dec
je
mov
mov
add
mov
and
lea
and
and
dec
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
movl
mov
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
add
sub
mov
add
add
add
dec
dec
je
mov
xchg
mov
mov
mov
dec
movl
lea
push
mov
push
call
mov
pop
ret
nop
subl
jae
mov
lea
cmp
jns
mov
mov
lea
xchg
lea
add
and
and
sub
add
xchg
mov
xchg
add
xchg
mov
mov
add
mov
mov
lea
call
cmp
jo
mov
xchg
lea
mov
and
lea
lea
mov
lea
and
inc
xchg
mov
mov
lea
lea
mov
ret
dec
xor
imul
js
jmp
js
pushf
xor
mov
xchg
daa
jo
aas
cmp
cmp
and
jge
out
jae
insl
pop
pop
or
clc
and
cli
adc
pop
jae
dec
ret
add
scas
sbb
sbb
mov
call
cs
jl
and
and
fnstsw
push
jge
or
loop
lea
scas
out
jge
test
or
loopne
sub
xchg
jecxz
icebp
jecxz
cli
loopne
call
jmp
mov
adc
mov
sbb
and
dec
add
sub
sub
fwait
add
add
xchg
cmpsb
sub
and
popa
sub
cmc
xor
cmp
rcr
pop
xchg
lods
cmpsl
out
mov
xchg
and
sahf
mov
scas
rorb
pop
lret
mov
outsl
or
jmp
adc
jp,pn
out
cwtl
dec
movl
inc
imul
mov
mov
das
pop
lcall
mov
dec
cmp
and
cmp
cmp
imul
ds
movsl
scas
jno
add
jns
test
sahf
mov
call
dec
fs
or
or
jmp
movsb
cwtl
xchg
cld
or
mov
insb
leave
loope
and
adc
addr16
cmp
out
xchg
jp
push
xchg
or
shlb
bound
mov
insb
js
jmp
pop
movsb
add
sbb
push
mov
insl
inc
sarb
cmp
les
lods
punpckhbw
dec
xlat
xor
or
rol
leave
out
in
pop
push
icebp
mov
jp
mov
jae
sbb
or
jns
push
mov
popf
scas
loop
xchg
xchg
imul
out
xchg
stos
mov
loopne
pop
leave
fdivl
popa
in
mov
pop
lods
fmull
adc
pop
sahf
sbb
mov
cwtl
or
shll
adc
out
mov
aaa
lods
out
aas
jne,pt
out
dec
xchg
or
sbb
xchg
pop
cmp
in
pop
aaa
mov
movsb
punpcklwd
xchg
jmp
dec
repnz
clc
or
stos
xchg
lock
dec
and
loop
mov
imul
es
mov
lods
push
sbb
mov
xchg
xor
pop
jno
xlat
loop
insb
outsb
jl
xchg
fcmovnbe
cmp
inc
sub
jmp
xchg
pop
jge
sbb
jmp
outsl
push
jg
jo
and
push
ret
outsb
or
adc
mov
add
xor
scas
sub
mov
fcoml
jns
pop
xchg
and
mov
cli
mov
icebp
xorb
stc
popa
sub
int
lds
pop
sub
or
mov
add
inc
jmp
xchg
mov
mov
or
imul
push
out
fsubl
test
rorb
bound
or
xor
mov
push
outsl
add
xor
adc
adc
lret
arpl
ljmp
jge
mov
imul
lret
lods
ja
mov
adc
sbb
or
movsl
dec
pop
lods
sbb
lds
dec
xchg
adc
arpl
ja
push
sub
xor
std
cmpb
push
sub
push
xchg
addr16
or
or
pushf
dec
ja
jnp
stos
cmc
ret
cli
pop
mov
cmp
lods
pusha
mov
pushf
pop
fisubrl
xor
outsb
fidivrs
je
lods
out
cmp
repnz
nop
icebp
mov
loope
iret
add
sub
cs
in
mov
in
jl
dec
add
jo
js
jne
loope
pop
outsb
lret
mov
or
pop
insl
push
jp
push
jne
loopne
or
out
push
cmpsb
sahf
cltd
fs
xor
mov
pop
into
jae
data16
dec
ljmp
jmp
add
subb
ret
test
arpl
add
mov
fwait
pop
push
cmp
fisubrs
lea
loopne
into
jb
jcxz
or
cmp
inc
pop
inc
xchg
fs
cmpsb
sbb
orb
xlat
mov
mov
pop
fs
movl
mov
out
lret
iret
shrl
ret
cmp
push
sub
pop
and
push
push
mov
decb
cmp
stos
mov
sub
sbb
rorl
pop
or
adcl
fs
repz
jae
and
push
xor
cwtl
jbe
xlat
lock
push
add
call
stos
movl
and
test
pop
ljmp
popa
fdivrl
cwtl
inc
insb
out
imul
int3
imul
xor
inc
insb
das
push
mov
insb
mov
mov
adc
insl
sbb
jl
adc
mov
jne
sbb
out
ret
scas
add
sub
sbb
shld
js
sub
incl
xchg
iret
punpckhbw
leave
aad
lods
in
mov
mov
or
bound
lahf
sbb
add
repnz
ss
dec
out
and
adc
neg
test
call
sub
cmp
cmp
sbb
es
mov
push
xor
inc
adc
inc
pushw
sbb
push
mov
xchg
mov
jecxz
stos
stos
rolb
inc
pop
das
mov
rorb
cmc
pop
or
fsts
dec
push
ret
mov
sub
js
or
lret
pop
andb
jl
out
lcall
ja
mov
pusha
mov
int
loopne
lret
cmpb
cmp
xor
jnp
test
mov
mov
out
in
xchg
cmp
sbb
daa
fistl
lock
lret
dec
pusha
and
int3
enter
hlt
adc
into
lods
outsl
call
pop
and
iret
dec
sti
xor
fdivrs
rorl
mov
xor
xor
mov
lods
push
mov
mov
ds
cmp
push
js
inc
xchg
mov
ret
icebp
loope
gs
xchg
decb
jae
push
and
dec
sub
cmp
movsl
leave
xor
xor
mov
and
cli
dec
es
cmp
leave
cmp
call
xlat
push
push
dec
mov
inc
fstl
mov
mov
xchg
xor
inc
clc
shl
movsb
scas
fstps
mov
addr16
xchg
mov
cmc
mov
andb
shlb
mov
jecxz
in
cmpsl
jl
popf
xchg
aas
mov
cld
cwtl
dec
cmp
or
jp
mov
lret
gs
cmp
sar
imul
cmp
arpl
jmp
cwtl
dec
xorb
jae
orl
and
push
ret
arpl
aam
jmp
xlat
rcr
inc
pop
ret
lahf
jecxz
cmp
sub
dec
adc
mov
xor
or
push
sarl
stos
inc
sti
mov
mov
mov
jge
and
inc
das
test
inc
test
xchg
cmpsl
push
mov
aas
in
mov
pop
adc
and
and
mov
fadd
out
pop
jg
insb
or
iret
repnz
add
dec
insb
in
dec
ljmp
test
pop
dec
lret
movsb
cmpsl
pop
call
xchg
sarl
xor
repz
imul
xchg
cmp
iret
popa
jnp
cs
clc
mov
add
pop
daa
icebp
inc
cmp
out
call
xchg
divb
xor
cmp
lods
xchg
pop
sbbl
lahf
arpl
jno
scas
ror
push
test
sahf
lcall
or
aam
scas
inc
sbbb
xchg
pop
das
push
cmp
xchg
cmp
jp
jae
sbb
lock
repz
mul
jmp
lcall
cmp
sbbb
dec
fisubl
add
and
or
adc
enter
push
loop
loope
js
cmovl
mov
or
push
les
loop
sub
cmp
or
outsl
xor
decl
fnsave
test
sbb
pop
mov
or
andl
mov
rclb
mov
add
std
addr16
andl
push
mov
in
add
push
int
jno
repnz
adc
inc
flds
push
mov
push
cli
clc
cmc
push
jb
xchg
mov
mov
je
cmp
sub
jge
adc
dec
sub
xor
addr16
test
testl
push
sahf
and
dec
jbe
adc
inc
xor
jg
insl
cltd
jo
mov
fcoms
jb
fs
test
pop
outsb
adcb
push
test
jbe
mov
roll
pop
call
mov
cmpsb
cmp
js
mov
cmp
push
add
lea
out
pop
test
rolb
adc
clc
and
push
pop
daa
xor
in
pop
iret
sysret
pop
dec
and
jl
imul
lret
push
mov
mov
adc
mov
movsb
and
out
in
mov
push
fiaddl
pop
xorl
and
mov
scas
aad
xchg
mov
cmp
xor
notl
loop
out
arpl
fimull
clc
es
cltd
push
push
std
icebp
cmc
nop
loopne
mov
sub
push
mov
cmp
into
loope
dec
mov
in
or
fcomip
xchg
mov
jle,pn
lret
and
xchg
in
dec
mov
leave
push
loope
add
rol
subl
lds
lods
insb
sti
test
lea
jno
lea
push
jg
fldl
psrlq
shll
mov
mov
xchg
shrb
xor
pop
addl
aas
pusha
cmp
in
lds
sub
pop
mov
popf
sbb
inc
out
scas
sbb
nop
lods
push
mov
mov
mov
push
or
and
inc
scas
lods
out
call
adc
xchg
nop
inc
mov
cmpsb
push
shl
mov
inc
and
adc
repnz
outsl
jns
mov
jae
cmp
jno
outsb
inc
fs
lret
push
repnz
add
xchg
pop
or
lods
insl
pop
into
jecxz
or
push
sub
push
pop
inc
rolb
mov
push
in
sbb
ljmp
addr16
mov
test
adc
xchg
jl
out
lahf
mov
and
push
hlt
inc
inc
jg
ja
push
pusha
lahf
adc
loop
ficoms
aas
es
sub
pop
loop
arpl
cmpsl
ss
and
jmp
sub
aaa
inc
loop
pop
inc
adc
movsb
shll
mov
sbb
mov
out
arpl
aam
dec
loopne
jmp
sbb
push
xchg
daa
push
inc
sub
add
lret
dec
push
adc
cmp
out
mov
push
mov
inc
mov
in
jbe
fbstp
sbb
adc
ds
pusha
insb
add
scas
dec
pop
push
je
stc
leave
adc
outsl
sbb
int
nop
hlt
iret
inc
ljmp
aaa
or
xchg
sbb
jns
shl
ja
test
xchg
js
xor
xlat
pop
push
shrb
adcl
jb
gs
popf
add
sbb
jnp
push
out
xchg
xlat
mov
aas
cmpxchg
lods
and
pop
add
test
sbb
adc
dec
adc
or
rolb
inc
shlb
mov
hlt
cltd
jg
mov
or
scas
jl
ds
fisubs
das
insb
sbb
int
shlb
fmuls
aaa
in
xchg
push
fiaddl
loop
ljmp
jmp
test
inc
out
inc
mov
rorl
aam
popa
inc
mov
xor
ljmp
scas
pusha
aaa
outsl
loope
loope
pop
aam
in
cmp
sbb
loopne
or
out
dec
movsb
xchg
cmpsl
mov
jle
mov
jge
jg
stc
lret
and
enter
es
dec
daa
and
push
cmp
lock
pop
xor
aam
fdivrp
adc
pop
jo
ja
mull
sbb
rorl
mov
js
and
out
sbb
push
test
xchg
ja
jns
pop
ljmp
not
mov
mov
xorl
xor
mov
mov
dec
nop
push
xchg
addb
adcl
inc
push
or
lods
rolb
inc
cltd
jge
sub
and
or
nop
stos
mov
inc
sub
xor
test
test
mov
mov
dec
or
cwtl
mov
dec
mov
data16
xchg
aaa
or
cltd
and
test
jne
inc
add
mov
add
sbb
pop
xchg
call
inc
dec
and
or
shrl
call
push
dec
fisubl
adc
andl
addl
sbbl
jnp
or
out
xor
and
repz
pop
insb
cld
mov
insl
adc
xor
insb
lcall
mov
jne
pop
push
repnz
lock
ds
jns
mov
xchg
mov
mov
divl
mov
sub
push
shlb
dec
fld
test
iret
js
loop
and
popf
push
dec
or
push
test
loope
mov
jno
aad
aas
xchg
dec
imull
mov
and
inc
idiv
xchg
jp
mov
mov
xor
sbb
adc
rcrl
mov
std
into
addl
and
add
jne
adc
inc
lcall
inc
mov
dec
push
iret
cmpsb
cmp
rolb
in
mov
pop
in
sbb
adc
or
test
jns
jns
add
mov
lods
or
stos
nop
sbb
aad
stos
daa
dec
and
jecxz
xchg
mov
andb
icebp
mov
outsl
lds
jmp
mov
adc
cld
inc
jnp
cltd
pop
sub
out
stc
pushf
call
lret
ss
push
arpl
cld
rcll
mov
cmpb
jne
addl
mov
out
xchg
sub
jns
inc
xor
sbb
sarl
stc
sbb
cmp
mov
mov
cmp
mov
push
ret
call
and
sti
sahf
adc
icebp
fs
pushf
lock
inc
and
xor
jns
pop
inc
ljmp
lret
and
xchg
push
add
cmp
mov
sub
inc
popa
xor
ljmp
imul
orb
pop
aad
fcomps
mov
jbe
xor
mov
cli
push
stc
mov
mov
rcll
add
mov
xor
push
icebp
je
inc
pop
inc
stos
and
mov
hlt
adc
gs
idiv
mov
cmp
std
into
xchg
call
int
roll
dec
popa
ja
lock
and
fisubrl
xchg
add
fistps
push
xchg
add
or
in
and
popa
jbe
inc
jne
sub
add
ret
pop
or
lock
cmc
dec
fidivs
pusha
pop
aaa
jnp
aas
cmp
sbb
std
dec
jle
or
mov
cmp
shll
das
arpl
movsl
dec
xor
dec
hlt
mov
fmuls
xor
mov
lock
lret
jno
int3
int
iret
jecxz
clc
popa
sbb
jg
nop
rcl
inc
adc
int3
cmp
loop
ljmp
imul
mov
jmp
jno
push
leave
adc
mov
popa
stos
sbb
jnp
xchg
outsb
adc
mov
sub
clc
cmpb
xor
das
jp
jns
cmp
ds
dec
inc
mov
xchg
dec
and
fstpl
hlt
or
push
adc
dec
into
push
hlt
mov
add
in
jmp
sahf
test
xor
js
cs
cmpsl
shlb
or
mov
call
push
dec
shl
les
and
nop
outsb
repz
aas
adcl
lea
test
mov
sbb
bound
cmpb
cwtl
xor
cs
adc
int
movsb
cmp
inc
mov
scas
loope
das
lds
adc
mov
inc
jne
push
ds
sbb
sub
jnp
adc
push
loopne
ja
inc
jno
je
adc
arpl
lods
jo
test
mov
add
int3
popf
inc
incb
push
jo
jecxz,pt
or
lock
div
jl
ret
cwtl
imul
cmp
int3
sbb
fimuls
xchg
jno
push
fidivrl
lds
cltd
push
mov
mov
inc
fimuls
pop
inc
mov
addb
arpl
loope
mov
push
pop
lds
jmp
lret
sub
push
jg
dec
mov
ja
push
mov
rorb
or
roll
lahf
or
filds
jb
add
hlt
loopne
xor
test
cmp
cmp
imul
add
cli
repnz
outsl
comiss
xor
into
jge
out
cwtl
or
add
sub
mov
stos
mov
insl
cmc
popa
push
rcrl
push
repnz
push
add
pop
dec
jmp
aad
fistpll
ret
arpl
leave
mov
cs
shl
push
rcrb
cmp
push
mov
xor
stos
outsl
ss
add
pusha
loopne
shlb
lcall
paddusw
add
lds
sub
jbe
lret
mov
imul
mov
std
cmc
or
sub
jl
aad
mov
mov
fs
sbb
push
cmp
outsb
xchg
push
add
imul
add
cli
push
shlb
push
rorb
adc
push
enter
xor
sbb
nop
pop
insb
repz
leave
int3
sub
fnsave
sbb
inc
mov
push
dec
cld
ret
sahf
mov
out
adc
inc
or
sub
lock
adc
imul
stc
and
ret
addr16
mov
xchg
mov
mov
cld
mov
shl
repnz
dec
sbb
jbe
popa
cmp
ds
gs
sub
lret
cmp
xor
xor
movsb
add
mov
lods
pop
in
imul
push
stos
aam
lock
mov
out
test
dec
cmp
jo
jmp
inc
test
cmp
cli
shld
ja
int
and
push
or
mov
int
nop
mov
mov
insl
loopne
sub
int3
mov
or
clc
and
stc
je
and
lods
mov
int3
cmp
mov
dec
lods
daa
ljmp
mov
fs
sub
and
jb
push
push
loope
push
aam
cld
sete
ficompl
test
inc
shlb
dec
dec
mov
adc
or
jne
iret
adc
and
pop
push
popa
shll
loop
add
or
dec
shll
std
pop
lock
movsl
gs
push
insl
js
xor
leave
add
pop
mov
or
and
push
pusha
push
pushf
out
out
xor
pop
in
ret
leave
sub
fxch
je
rclb
out
std
xor
adc
into
in
mov
fcmovne
and
stos
push
xchg
imul
insl
aad
test
cmp
push
pushf
je
xor
ret
xor
push
in
repz
daa
hlt
dec
mov
dec
jmp
dec
stos
mov
pop
decl
dec
fisubl
or
adcb
add
lcall
pop
mov
jp
ret
shl
pop
inc
fnstenv
mov
sub
in
pop
add
xor
add
mov
or
cs
mov
das
movb
push
popf
inc
fwait
push
push
push
mov
jecxz
dec
or
outsb
imul
pop
pop
cli
pop
sbb
pavgb
jno
pop
cli
scas
lea
jmp
sub
inc
sbb
mov
jl
or
cmc
nop
loopne
xor
outsb
and
cmp
mov
jns
mov
cltd
fisubrl
pop
in
jg
pop
dec
dec
cwtl
mov
mov
mov
sahf
adc
ds
outsb
mov
daa
loopne
enter
sub
push
adc
ret
pop
pop
pop
dec
or
stc
inc
pushf
hlt
out
push
pop
and
je
clc
popa
lret
rcr
scas
jecxz
lock
mov
cmpsl
mov
rcl
stos
jno
dec
and
push
xor
lahf
cmpsl
inc
sub
js
sbb
in
out
leave
popf
pop
loope
testl
fdivrs
testb
dec
inc
test
push
sub
inc
loope
jno
mov
call
mov
cld
outsl
repnz
mov
xlat
into
out
jmp
repnz
sbb
inc
sub
xor
in
mov
imull
fisttps
sub
insb
sti
aas
adc
mov
jl
popf
sub
sahf
mov
mov
sbb
imul
jmp
add
mov
movsl
xor
xchg
adc
out
decb
jl
ror
rol
dec
dec
inc
lock
rorl
jl
push
dec
lods
idivl
fistl
pop
mov
dec
in
xchg
out
js
cmp
mov
icebp
pop
xor
mov
test
and
aaa
push
mov
inc
movsl
fnstcw
imul
dec
or
mov
mov
and
mov
shlb
fstp
dec
int3
leave
and
mov
subl
fmull
jle
std
xchg
inc
lret
push
test
jo
leave
inc
xor
adc
inc
push
sbb
xor
xchg
jecxz
and
mov
pusha
jg
imul
mov
xchg
dec
aaa
shll
and
sarl
sbb
data16
mov
xor
xor
cld
mov
mov
adc
dec
ret
pop
add
leave
cmp
dec
xor
in
arpl
outsb
jecxz
add
lods
jae
push
inc
sbb
mov
pop
fimull
ljmp
adc
aad
loop
lcall
scas
push
fstpl
xchg
pop
lret
out
sub
dec
inc
fwait
je
fsubl
adc
dec
rcl
int
daa
lcall
pop
cld
sbb
imul
pop
lahf
push
lcall
cli
push
push
incl
ret
movsb
push
and
in
adc
aam
push
dec
xor
jecxz
jge
mov
bound
jne
fwait
cld
addr16
dec
addb
jne
cmp
fcoml
push
aad
in
es
loop
mov
xor
mov
cwtl
add
cmpsl
aam
lret
imul
inc
fbld
mov
xchg
xor
orl
fidivl
xlat
xchg
inc
cmpsl
jecxz
orb
loopne
inc
insl
and
push
xchg
call
ds
cmp
add
mov
in
add
movzbl
adc
push
cltd
mov
jg
into
sarl
jnp
pop
inc
push
cld
mov
push
adc
adc
ret
pop
push
pop
hlt
jne
pop
pop
loop
loop
lock
push
lods
add
add
and
xlat
mov
pop
pop
inc
loope
sub
or
orb
cmc
pop
sahf
sbb
sub
or
jnp
pop
jecxz
aaa
jp
inc
je
add
cmp
xor
or
mov
aad
sub
scas
in
orb
mov
adc
mov
sub
fists
mov
mov
iret
data16
jg
xchg
jo
xor
mov
jecxz
or
scas
adc
adc
dec
test
cwtl
push
jg
outsb
in
cmpsb
dec
arpl
pop
xor
add
ss
dec
decl
popa
cld
sbb
push
dec
sub
xchg
mov
ja
insl
mov
mov
scas
js
aas
fisubl
cmp
jae
inc
pop
jne
pop
mov
pop
aam
mov
cmpsb
jae
ja
mov
mov
test
or
jb
in
pop
rcll
adc
cmpsb
je
jb
sbb
mov
das
scas
sub
mov
mul
das
ljmp
sbb
xchg
clc
shll
inc
mov
movsl
or
mov
jne
mov
ljmp
jo
out
push
loopne
ss
cmpsb
add
testb
test
inc
xchg
jb
das
fsubs
pop
jecxz
cmp
mov
andl
fiadds
pop
jp
rorl
repnz
addl
insl
mov
sarb
ss
sbb
aaa
dec
idivl
mov
sbb
sbb
mov
pop
scas
jno
fs
push
cltd
outsl
sbb
enter
cwtl
imul
fnsave
add
mov
and
aad
dec
cmp
into
sub
dec
mov
ljmp
hlt
lods
lock
fcmovne
test
mov
scas
xchg
pop
xchg
jg
repnz
lods
xor
shll
aaa
insb
stc
aad
cmpsl
cmpsl
scas
ja
pushf
loopne
push
and
fnstsw
mov
mov
fsubr
jns
fmull
in
int3
add
into
jo
push
stos
movsl
mov
dec
insl
cmp
mov
sbb
sbb
int
cmp
push
add
insl
leave
cmp
cmc
pop
mov
daa
mov
sti
mov
mov
psllw
hlt
xchg
lret
lret
cltd
imul
iret
push
clc
pop
inc
inc
dec
xchg
or
adc
movsl
out
cltd
mov
filds
mov
pop
dec
jecxz
cli
nop
out
mov
mov
and
cmp
or
sbb
xor
aas
jmp
xchg
inc
add
rcll
cmp
pop
jo
aas
popa
jbe
jmp
cli
pop
inc
xchg
jb
inc
sub
cmp
sub
fnstcw
pop
dec
insl
loopne
mov
clc
cmpsb
push
scas
fs
pushf
aad
jno
pop
daa
sbb
fisubs
sub
lret
mov
pop
jae
xlat
sbb
push
pop
das
into
mov
repnz
jne
int
test
popa
inc
cmp
cwtl
jmp
iret
ficomps
orl
bound
imul
test
xor
sbb
mov
mov
inc
pop
jno
and
stos
outsb
dec
pop
sbb
cmp
sbbl
andl
sub
dec
sbb
je
push
jl
add
jmp
fidivs
pop
mov
pop
stos
sbb
shl
mov
pusha
sbb
shrb
dec
nop
and
mov
mov
mov
cmc
dec
cmp
xor
in
add
inc
mov
or
xor
aaa
push
sub
mov
movsl
mov
cmp
xlat
outsl
and
adc
cmp
mov
and
fs
cmp
aad
sbb
rcr
dec
lahf
sbb
test
fwait
sbb
pop
ror
das
push
mov
dec
xchg
sbb
mov
inc
sub
in
sub
pop
adc
scas
sub
or
sub
ret
scas
fcoml
xor
clc
lock
lret
out
xchg
fwait
inc
sbb
xor
stos
pushf
xor
mov
in
jg
stc
repnz
stos
loop
pop
test
jo
push
cli
adc
test
call
push
jbe
repnz
iret
cld
pusha
push
movsb
sbb
dec
loop
cmp
ss
or
out
and
push
pop
inc
adc
stos
add
in
cmp
repz
xchg
out
push
stos
pushf
nop
mov
je
call
sub
cli
cltd
sbb
pop
inc
imul
mov
sub
jnp
push
jecxz
jle
cli
sahf
fs
pop
push
cld
fdivr
js
stc
xor
aas
or
sub
pushf
sbb
push
push
mov
call
shr
icebp
aaa
fwait
add
jmp
cltd
mov
sub
or
cmp
mov
pop
sbb
adc
ljmp
fdiv
push
inc
out
sub
adc
mov
lds
jmp
popf
mov
xchg
insl
jle
mov
sbb
inc
loopne
pop
mov
or
pusha
sbb
adc
out
dec
xchg
repz
adc
fidivrs
or
mov
or
out
nop
loop
sub
out
inc
ljmp
out
and
fiadds
cmp
scas
test
movsl
cld
leave
add
aas
sahf
ss
scas
orb
ja
xchg
aam
ss
xchg
jmp
pop
sbb
in
shrl
xchg
push
jb
add
rcl
ds
fldl
add
lahf
in
and
adc
push
sub
adc
inc
pop
dec
jl
sbb
int
mov
ret
dec
ret
mov
mov
ss
inc
cs
and
mov
push
insb
xor
cmp
jbe
jae
inc
lods
lfs
lret
lock
mov
mov
shll
mov
mov
pop
fisubrl
sbb
enter
cmp
push
push
hlt
mov
push
in
pop
outsb
sbb
or
pop
mov
pushf
outsb
adc
mov
lock
movsb
ja
enter
or
mov
inc
int
sbb
xchg
jmp
sbb
add
cli
push
std
add
push
mov
arpl
ss
xor
cmp
cmp
sbb
or
add
push
fisubrl
jnp
in
scas
jo
dec
inc
xchg
jmp
xor
cmpsb
push
or
imul
cmpl
sbb
dec
inc
push
movsb
rcll
cli
or
js
in
into
lods
push
add
test
lock
mov
push
jno
jp
adc
mov
dec
lock
popf
stos
fprem1
out
test
repnz
cmp
ljmp
imul
sub
ja
clc
jg
fists
push
outsb
push
and
leave
lcall
mov
outsb
xor
lds
add
mov
lds
jbe
jo
push
pusha
jmp
negl
les
mov
pop
ret
fld
push
stos
daa
int
loope
mov
test
push
imul
rorl
ljmp
popa
cmp
push
add
inc
lds
test
add
pop
lea
cmp
xor
imul
mov
jae
bound
xchg
adc
data16
jne
mov
jecxz
lahf
or
adcl
cmovl
sub
adc
adc
sub
mov
aaa
shlb
pushf
sub
loopne
inc
frndint
test
jmp
mov
je
dec
aas
in
push
mov
or
js
aas
adc
push
test
movsb
cltd
pop
dec
lret
test
es
aas
and
insl
std
popa
shll
and
cmp
cmp
cmpsb
mov
pop
cmpsl
sub
push
sbb
mov
xor
mov
add
xlat
mov
cli
dec
cmp
inc
stos
cli
push
or
hlt
scas
dec
inc
fimull
dec
daa
out
mov
jmp
stos
add
ficoms
sub
jg
mov
lods
xchg
insl
push
pop
dec
push
and
cwtl
leave
and
fidivrl
mov
fldt
xchg
sbb
mov
hlt
cmp
cld
inc
popa
adc
inc
sahf
fmul
leave
bound
fists
sbb
xchg
jno
mov
cwtl
out
and
fcoms
mov
push
cmpsb
dec
movsl
xorl
cwtl
pop
mov
and
popf
jbe
add
xchg
lods
aas
test
sarb
cmc
fcmovb
test
loope
syscall
nop
add
leave
xchg
sub
sarb
std
pop
mov
arpl
sbb
jo
cli
jno
add
jmp
sub
lods
push
mov
sti
add
cmp
lret
inc
push
and
mov
mov
jl
xchg
adc
addr16
cmc
addr16
cmp
repnz
in
add
das
xor
xor
mov
leave
add
and
dec
xchg
es
mov
push
fs
in
sbb
add
dec
mov
dec
sbb
test
stos
push
js
jmp
test
dec
xchg
icebp
in
ss
mov
push
jle
out
add
jne
adc
movsl
push
test
mov
add
push
mov
xchg
test
imul
or
sbb
mov
or
or
lods
cmp
xchg
jnp
das
mov
push
inc
inc
dec
scas
sbbl
mov
jl
jae
stos
mov
cmp
sbb
xchg
cmp
lret
cmp
xchg
cmpsl
idivb
aad
mov
or
mov
and
movsb
fcmovne
test
jns
jle
jp
xor
cmp
test
mov
mov
cmp
int
jle
ds
or
ret
xchg
xor
jae
mov
popa
mov
insl
cmp
ret
xor
pop
push
faddp
mov
dec
rcr
out
pop
dec
adc
fdivrs
mov
das
daa
lret
cld
test
inc
rolb
xor
or
fwait
inc
inc
std
lahf
jge
stos
cmp
inc
bound
pop
jno
pop
inc
jae
fs
in
lret
mov
push
sarl
lock
jle
push
mov
dec
inc
or
jb
loop
loop
into
and
fs
xor
inc
xor
fs
push
pusha
cmpsl
mov
jmp
repnz
subl
daa
pop
out
clc
repnz
pop
sbb
jne
xchg
push
lcall
in
rolb
sbb
mov
ss
inc
jo
int3
test
mov
sub
pop
jp
and
sarl
repnz
int3
dec
shlb
testl
and
mov
push
daa
daa
mov
cmpsb
dec
mov
add
xor
sub
jno
or
add
icebp
mov
and
int3
fisubs
mov
addr16
ret
jnp
cltd
je
out
int3
sbb
pop
mov
scas
aas
pushl
jl
fnstcw
lcall
cmp
sti
add
pop
mov
mov
repnz
sbb
add
mov
stos
lea
or
dec
out
xor
out
bound
scas
sbb
mov
push
sbb
dec
das
jmp
ret
and
add
jmp
and
stos
pop
adc
mov
xlat
mov
adc
int3
adc
pusha
inc
jmp
jb
mov
pusha
inc
cs
popf
bound
cmc
lret
push
int3
les
adc
rorb
lahf
xchg
pusha
or
ljmp
in
dec
nop
pop
jl
fisubrl
orb
int
xchg
xor
js
mov
iret
ftst
into
loopne
fdivp
pushf
sub
aam
imul
test
sub
mov
fldl
add
movsl
cmc
in
dec
ljmp
pushf
jns
sahf
in
fs
leave
pusha
dec
lret
jne
add
mov
rcrl
cmp
push
pop
sub
addl
aad
pushl
pop
das
das
xchg
js
xor
mov
add
pop
sti
and
jne
xchg
add
inc
into
cmp
lahf
sbb
and
xor
lret
inc
jns
push
stos
or
insb
pop
and
sbb
jo
cmc
xor
fucomi
popa
dec
divb
and
popf
ret
rcrl
xor
int3
and
adc
pushf
or
inc
xorb
sub
mov
ds
pop
mov
sbb
ds
xchg
mov
mov
push
sub
mov
mov
les
sbb
lcall
jns
rcrb
into
orb
or
fwait
out
jbe
mov
mov
cmp
idivb
xchg
dec
or
cmpsb
lea
push
adc
enter
sbb
lock
xchg
les
sub
mov
cli
cmp
mov
movsl
push
lcall
pop
sub
mov
cltd
sti
sub
fmuls
xchg
and
push
jge
arpl
sarb
mov
out
xor
jnp
and
clc
cld
test
inc
addr16
jb
stos
pop
add
cltd
ss
xchg
test
push
mov
pop
ja
add
ss
hlt
adc
adcb
hlt
inc
xchg
sbb
adc
test
xlat
subb
mov
outsl
or
add
pop
testl
mov
lret
lahf
jmp
cmc
sub
hlt
scas
rcrl
push
jbe
mov
push
nop
xor
mov
lea
iret
sarb
jnp
pushf
and
sub
pusha
sub
and
dec
in
mov
out
inc
mov
xor
dec
push
test
inc
stos
daa
cmpsl
int
mov
int
cmp
push
sbb
cmpsb
jno
stos
pop
jae
sbb
push
jg
add
mov
xor
leave
in
or
xchg
add
push
in
xchg
outsb
mov
jg
pop
adc
mov
xchg
out
fistpl
into
jmp
insb
mov
or
mov
icebp
fisubrl
sbb
push
mov
stc
pop
sti
shrb
jmp
cld
push
dec
repz
js
into
pop
push
push
or
outsb
or
mov
movsl
cmpsb
dec
mov
test
pop
inc
sbb
nop
or
xchg
jbe
fcompl
sahf
cwtl
lcall
adc
mov
and
push
gs
push
arpl
xchg
xor
testb
out
mov
sbb
jle
jp
adc
fdivrs
mov
mov
cmp
jmp
mov
cltd
xor
insb
cmp
sub
int3
push
jp
inc
xor
movsl
cmp
cmp
xchg
in
pop
sbb
ss
aaa
mov
loop
icebp
pushf
xchg
sub
idiv
jl
pop
insb
or
mov
fs
xchg
and
in
push
int3
movsb
push
stc
jp
test
dec
out
into
sbb
iret
push
cli
jae
cltd
pop
cs
lock
rorl
insb
mov
add
adc
mov
jbe
pop
sbb
jmp
lods
popw
sbb
jecxz
mov
inc
test
inc
jo
xorb
pop
push
rorl
jg
ror
call
or
fld
jne
dec
ljmp
stos
lods
or
es
hlt
les
into
inc
xchg
movsl
cmpsl
dec
in
ds
movl
dec
pop
add
add
andl
pusha
insb
fwait
mov
mov
jl
pop
cli
xor
pusha
fwait
xchg
pandn
or
sub
jg
cmp
insl
sub
jmp
xchg
jo
push
inc
cmp
je
and
push
push
push
sbb
push
aas
push
sub
xchg
inc
dec
outsl
pusha
push
enter
pcmpgtb
call
sbb
xchg
and
fs
pusha
arpl
adc
inc
adc
adc
test
push
repz
add
icebp
in
cwtl
xchg
push
sub
lcall
xor
sbb
cltd
xchg
clc
lahf
pop
cmpsb
cmc
adc
test
lahf
xor
jne
dec
xor
and
cmp
test
adc
lcall
sahf
xlat
jb
shl
ljmp
pop
call
mov
adc
adc
out
adc
movsb
inc
cmpsl
cvttps2pi
pop
sub
inc
rorl
add
jg
xchg
popf
pop
mov
pop
das
inc
mov
data16
insl
mov
inc
stc
xchg
cmpl
loop
mov
add
add
mov
aam
iret
ficompl
xchg
mov
mov
repnz
push
or
leave
aaa
pushf
movsb
xchg
leave
lea
lcall
arpl
stos
sub
fwait
xchg
hlt
test
mov
aaa
push
push
into
and
xchg
add
test
daa
call
inc
adc
dec
xchg
outsl
hlt
fwait
jmp
jg
mov
out
jle
inc
xchg
xchg
mov
int3
pop
lret
push
divb
mov
mov
add
movb
stos
add
fwait
and
add
cmpsb
push
imul
sbb
inc
leave
popa
outsl
jo
cmp
inc
ljmp
add
cmp
movsl
add
or
popa
ret
pop
fbstp
inc
getsec
mov
bswap
popa
call
shlb
jmp
hlt
adc
push
sahf
popa
into
enter
and
out
xchg
shl
fstps
lea
cmp
rolb
push
mov
push
or
dec
push
jb
das
fidivl
pop
jmp
xchg
addr16
push
mov
test
out
imul
js
jg
lret
xchg
repnz
add
add
push
or
xchg
mov
add
inc
add
sub
push
shl
jmp
xor
test
insb
xchg
dec
adc
pushf
sbb
add
sbb
imul
divb
sbb
xchg
push
mov
inc
ret
mov
jmp
adc
push
cld
mov
push
es
adc
add
mull
das
movsl
dec
aad
gs
cmpsl
lahf
out
pop
xlat
sub
movsl
push
add
bound
jo
add
fs
xor
out
jecxz
pop
sahf
dec
or
mov
daa
insl
sahf
sbb
push
sub
out
jle
lret
cmpsb
dec
adc
mov
cwtl
lea
pop
or
mov
cs
cwtl
mov
subl
out
movsl
sahf
imul
lods
cmp
mov
cmp
int
shr
push
sub
mov
mov
gs
nop
pop
jle
lcall
lea
frstor
push
sti
fistpl
out
andl
adc
jae
and
dec
cltd
jl
int3
add
popa
cli
push
push
roll
cwtl
dec
mov
mov
jbe
jecxz
scas
dec
and
push
shrl
loopne
insl
adc
rcrl
orb
push
add
inc
mov
mov
mov
data16
pop
and
and
inc
sbb
js
insl
mov
inc
test
test
outsl
cmp
aas
add
sarl
mov
into
pop
roll
call
test
in
stos
sti
shll
lods
stc
mov
pushf
mov
push
leave
sub
xchg
push
cmc
aaa
or
les
in
fst
xchg
das
dec
rcrl
sub
xchg
cmp
add
xlat
ja
pop
movsl
int
fisubl
out
xchg
aad
repz
mov
out
test
jno
fsubrl
mov
push
and
test
leave
push
stos
sub
int3
or
or
test
pop
or
loope
fnstcw
mov
aaa
imul
outsb
push
jecxz
xchg
imul
fimull
jnp
add
in
dec
cli
shl
adc
mov
out
dec
call
hlt
sbb
data16
sub
jno
scas
add
push
xchg
enter
stc
or
sub
pop
and
cmp
rolb
add
outsl
dec
and
xor
sbb
fildll
sahf
mov
cmp
sbb
movsb
in
lahf
xor
mov
cli
xchg
or
adc
dec
mov
sub
gs
subb
pop
jmp
bsf
es
mov
in
pop
and
push
jno
iret
jbe
ljmp
add
shrb
jmp
push
out
inc
xor
lods
femms
or
insl
in
dec
adc
or
pop
inc
jl
popa
fsubrs
cwtl
pop
arpl
lret
bound
stc
adc
movsb
arpl
cli
mov
mov
fcmovb
sub
data16
xchg
das
mov
xor
jg
les
dec
cmp
pop
out
lret
shl
add
aad
push
inc
dec
aad
lret
jmp
int
and
in
jo
xchg
pop
mov
out
adc
push
iret
outsb
mov
jno
inc
xchg
stos
divl
jg
xor
aam
fcomps
dec
jbe
push
iret
in
push
mov
jbe
cwtl
xchg
cs
ret
mov
mov
fwait
popl
lea
test
add
ret
in
dec
fimuls
cmp
loopne
add
adc
jecxz
loope
int
inc
notl
cmpsl
or
sbb
jmp
mov
enter
scas
push
sbb
push
aaa
test
cmp
push
adc
pop
aam
negl
or
es
adc
mov
add
and
jnp
out
mov
ret
insb
pop
dec
mov
sar
xchg
aaa
ljmp
or
es
fisubrs
xor
das
pop
cmc
cmp
out
mov
cltd
and
repz
dec
cmp
popf
cmpsl
cmc
sbb
scas
and
ds
inc
xchg
fmull
cmp
loopne
pushf
cmpsb
cmpsb
mov
push
sarb
outsb
mov
jp
lods
je
scas
mov
pop
repnz
insb
xor
stos
dec
jbe
gs
sub
pop
and
out
pop
cli
test
enter
xchg
movsl
dec
jge
in
sub
xor
sub
dec
jmp
cli
fadd
pushaw
sub
or
ret
add
pinsrw
or
pop
jle
xchg
lds
xchg
fcomps
xlat
jno
jle
sbb
leave
insb
dec
push
dec
nop
bound
jl
leave
sbb
mov
add
in
pop
fwait
push
mov
cmp
fadd
xor
or
or
and
fiaddl
scas
mov
mov
adc
shll
cmc
inc
subb
or
arpl
enter
int
add
clc
hlt
and
pop
popa
loope
sub
jle
fwait
cmp
mov
cmpsl
mov
popl
cld
dec
aaa
ja
sub
mov
ljmp
shrl
sbb
stos
pushf
push
sti
cmp
jg
sbb
sbb
adc
mov
lahf
leave
ljmp
pop
insl
or
out
or
pushf
fbstp
cmpsb
add
push
xor
fs
sarl
ret
je
andb
xchg
cmp
or
outsb
inc
popf
insl
movsl
add
idiv
mov
nop
xchg
sbb
jl
aad
push
xchg
ss
xor
mov
in
push
mov
outsl
loope
nop
shrb
ret
mov
testl
outsb
arpl
jbe
jno
daa
and
cld
mov
lcall
mov
push
test
and
cli
mov
pushf
mov
imul
orb
jp
cltd
pop
pop
cmp
les
ds
sbb
add
imul
movsl
enter
sub
lods
je
mov
idivb
mov
dec
mov
mov
sub
ss
mov
outsb
dec
xchg
mov
fld
or
fs
xchg
xchg
je
in
xorl
out
cmpsl
pop
and
ljmp
mov
fdiv
lahf
ret
repnz
sub
aas
and
adc
add
scas
insl
fwait
jl
add
fidivrs
mov
test
or
or
inc
sub
aas
lds
inc
sahf
cs
pop
jg
push
pop
aas
sub
in
lret
or
test
das
ret
or
xchg
inc
lret
sub
pop
rcrb
addr16
inc
adc
inc
lcall
dec
pop
add
sti
cmp
ss
in
sub
sub
stos
pop
les
rolb
stos
ljmp
sbbl
pop
ret
scas
scas
lahf
test
jp
mov
js
jne
shrb
sub
adc
sbb
ret
imul
pushf
fcmovu
dec
xchg
jp
xor
enter
pop
cmp
xchg
jle
sub
ret
cltd
mov
mov
push
mov
shlb
adc
sub
xor
loop
cmp
and
ljmp
sub
std
or
std
pushf
mov
inc
jo
cld
pop
ss
imul
inc
xchg
je
xor
leave
scas
repnz
mov
jb
aas
pop
jmp
jno
pop
pusha
mov
mov
or
mov
das
mov
mov
cmpsl
lcall
lock
popf
mov
stos
imul
xor
test
ret
daa
stos
ret
dec
or
iret
daa
scas
test
into
mov
into
ret
jnp
enter
pop
int
loope
in
rcrl
jl
dec
xor
cs
xchg
jecxz
pop
cmc
xor
jle
fsubrp
sub
clc
push
shlb
push
mov
jl
push
icebp
cmp
scas
jne
movsl
leave
lcall
jp
sbb
add
mov
int3
add
jo
cmp
push
shlb
add
mov
jae
cmc
in
inc
ret
rorb
add
lret
push
out
push
jns
mov
adc
sbb
push
cmp
pop
int
stos
rorb
stos
jl
add
mov
outsb
dec
lea
mov
data16
pushf
das
push
xchg
sbb
cmpsl
or
sarl
add
sub
test
mov
lcall
mov
push
scas
js
cmp
das
adc
data16
cmp
cli
mov
push
xchg
popf
leave
sub
in
mov
cmpsl
or
add
push
pop
mov
ret
inc
mov
loop
add
imul
sbb
es
fisttpll
je
js
inc
fdivrp
pop
lcall
pop
mov
xor
ret
int3
push
mov
xchg
sub
cmp
cltd
cwtl
push
push
pop
sti
outsb
in
and
ljmp
mov
push
clts
cmc
ljmp
rorb
out
pop
pushl
out
xchg
xor
subl
fwait
mov
xchg
push
mov
sub
lcall
aad
scas
shrl
in
rcrl
pop
ret
jno
inc
add
repz
dec
add
mov
and
decb
movsl
xchg
mov
xor
mov
clc
jl
cmp
or
cmp
xchg
xor
sti
ss
sub
lret
in
fcomps
bound
cld
add
cmc
sub
push
push
movsl
add
loop
ret
iret
frstor
clc
xchg
jle
push
rol
gs
es
lahf
clc
pop
or
mov
adc
out
xchg
adc
pop
roll
aad
fcomp
mov
xor
bound
test
outsl
xchg
imul
jo
data16
pop
push
pop
cwtl
mov
adc
not
pop
paddsb
sbb
loop
inc
mov
sti
sar
add
test
dec
negl
std
stc
into
in
jbe
adcl
pop
fcomp
adc
cmp
nop
lods
sub
out
xchg
push
pop
mov
jl
push
xor
ss
jecxz
sbb
jnp
xchg
test
icebp
lds
mov
push
movsl
js
mov
testb
andl
cs
pop
xchg
movsb
xchg
movl
xchg
arpl
or
jg
sbb
mov
sahf
jb
cli
aad
lods
push
frstor
jb
and
bound
test
inc
mov
bound
and
pusha
mov
sub
xchg
js
ds
std
aaa
aas
xchg
test
in
or
sbb
mov
popf
xchg
push
int3
adc
in
xor
mov
and
xlat
adc
add
call
lods
xor
mov
nop
dec
jb
pop
jge
and
in
add
sub
mov
stos
iret
stos
jecxz
js
pusha
dec
mov
pop
icebp
mov
dec
hlt
lret
mov
ret
adc
jle
jb
lea
out
inc
dec
sub
sahf
push
mov
imul
sub
loope
data16
sbb
out
loop
dec
sbb
xchg
pop
imul
inc
repnz
out
mov
jmp
js
pop
mov
and
inc
loopne
xor
adc
test
inc
mov
mov
rclb
pop
sub
jns
stc
mov
inc
inc
push
adc
arpl
xor
cmp
mov
adc
mov
shlb
mov
push
aad
insl
mov
lods
cmp
pop
pushf
cmpsb
xchg
ja
in
movb
adc
pop
enter
push
outsl
jmp
push
and
sub
push
mov
cwtl
es
fisubs
add
movsb
addr16
pop
or
lods
jecxz
inc
or
dec
or
js
xlat
or
shlb
add
sub
test
cwtl
pop
mov
and
inc
inc
sbb
mov
adc
gs
testb
es
add
lea
jmp
pop
mov
mov
xchg
out
ss
fnsave
sub
int
arpl
and
stos
popa
push
cmp
adc
addr16
mov
dec
lret
les
pop
icebp
ljmp
jbe
xchg
sar
scas
inc
and
sub
mov
mov
xor
mov
fdivrl
arpl
in
lods
push
sarl
cmp
stos
std
bound
pop
inc
pop
or
in
out
daa
hlt
push
test
outsl
push
push
fstpl
cmp
add
xlat
or
pop
aaa
sbb
dec
jns
iret
lea
aas
sbb
lahf
icebp
enter
mov
inc
pop
add
jecxz
mul
push
adc
cltd
int3
shrl
mov
fbld
imul
lahf
pop
xor
in
jno
cmp
mov
movl
fs
jbe
rorl
jae
fcompl
adc
aas
add
push
mov
push
leave
scas
arpl
inc
jecxz
loope
imul
xor
adc
xlat
push
jmp
dec
push
dec
dec
push
int3
add
jmp
mov
pop
test
popa
addr16
add
adc
popa
sub
dec
cltd
jbe
mov
dec
add
cmpsb
aam
cmp
jnp
push
adc
push
and
insb
push
mov
imul
or
rcr
stc
out
cld
test
jae
fldcw
inc
push
leave
fildll
adc
imul
mov
neg
xor
dec
mov
mov
mov
xchg
aaa
cmp
jbe
in
cmp
lock
psraw
or
xor
or
xorl
outsb
lock
pop
mov
sbb
arpl
outsl
jne
inc
fstl
mov
add
cwtl
inc
lcall
pop
xchg
sbb
ret
inc
inc
fcmovu
add
xchg
pop
outsb
xor
cmpsb
mov
adc
or
outsl
push
jle
insb
mov
pop
pop
popa
dec
arpl
xor
ror
or
clc
and
push
mov
mov
push
jg
addr16
mov
fldl2t
outsl
icebp
les
xchg
aaa
ret
inc
jl
in
lea
ljmp
mov
and
mov
fsub
cmp
outsl
aaa
mov
lahf
fistpl
stos
xor
and
cmpsl
mov
mov
dec
stos
fs
sub
push
xchg
jge
lret
jmp
jle
call
sub
iret
repnz
jb
cmp
stos
mov
and
cmp
jmp
in
adc
xchg
aaa
pop
icebp
jle
sub
mov
xchg
andb
daa
pop
sti
mov
outsb
dec
loope
mov
sar
imul
xorl
add
and
int
xor
mov
pushf
inc
jge
lods
shll
xchg
xor
xchg
adc
push
lds
add
test
add
and
out
sbb
bound
andl
jnp
cmp
jl
movsl
gs
lahf
les
sti
mov
cmovge
xchg
adc
sbb
jecxz
scas
idiv
push
popa
out
dec
pop
fiaddl
imulb
cmpsl
mov
out
inc
arpl
outsl
mov
sarl
mov
xchg
mov
daa
dec
pop
sahf
push
cld
pop
dec
out
scas
daa
sbb
xor
or
xchg
mov
test
sub
fwait
xor
cmp
loop
or
mov
fiaddl
and
das
cmp
test
sbb
dec
jge
int3
and
push
pop
pop
gs
push
packsswb
adc
je
mov
push
dec
adc
out
push
dec
clc
movsl
sub
repz
test
inc
pop
jmp
xlat
ljmp
cmp
outsb
jne
iret
sbb
scas
scas
jo
sbb
mov
insl
adc
xor
mov
add
dec
push
pop
les
lods
cmp
mov
mov
lock
daa
test
lds
dec
and
shrb
or
sub
arpl
jae
or
lret
cmp
aam
mov
jne
jecxz
subb
mov
and
in
dec
mov
test
xchg
movntps
hlt
mov
mov
cmpsb
dec
mov
out
pushf
sbb
lcall
outsb
adc
adc
and
inc
mov
xchg
repz
xchg
repnz
or
push
inc
rorb
xchg
dec
pop
andb
push
pusha
je
jle
ss
pop
enter
or
pop
push
lret
xor
push
nop
insl
cli
pushf
jge
pop
mov
mov
nop
mov
loop
adc
push
pop
imul
push
test
lcall
nop
rcll
xchg
mov
pop
jp
push
mov
bound
cmpl
or
test
cmc
lahf
add
fbstp
cmp
push
repnz
sub
inc
in
frstor
out
pop
push
mov
push
out
pop
and
test
mov
sub
fsubs
push
dec
or
out
adc
xchg
xchg
jnp
ss
adc
jecxz
mov
push
mov
jb
outsl
lcall
std
ljmp
add
iret
test
mov
push
imul
xor
adc
dec
data16
push
add
pop
mov
fwait
test
and
pop
cmp
mov
cmp
pop
addl
inc
mov
ljmp
mov
bound
sbb
sahf
lret
pop
sub
pushf
mov
cld
ja
mov
xor
cmp
xchg
push
pop
pop
pop
mov
sbb
sub
ds
mov
pop
mov
xchg
cmp
addb
adc
sbb
cmp
push
xor
adcl
mov
rcl
adc
in
fs
loop
sbb
loope
push
iret
clc
dec
xchg
aad
pop
inc
ret
push
js
dec
sbb
fidivs
push
push
lahf
jno
mov
or
cmp
or
pop
pop
pusha
in
enter
cmpsl
fstpt
scas
insb
int3
popf
adc
lock
or
and
and
jp
mov
in
or
cmp
repnz
xchg
push
and
add
sub
bnd
stos
and
push
sub
roll
mov
pop
inc
sub
cmpsb
jg
pop
orb
dec
in
fwait
outsb
inc
jmp
fnop
cwtl
into
mov
and
enter
test
jl
mov
pop
mov
pop
call
stos
dec
lea
mov
outsl
cmp
and
xchg
mov
mov
push
pop
clc
jno
testl
cmp
and
sub
xor
sbbl
cli
add
sbb
xchg
in
in
rcl
jnp
inc
mov
cltd
add
dec
sbb
adc
mov
mov
mov
ret
xor
movsl
pop
lods
pop
jmp
mov
dec
mov
push
inc
addl
inc
inc
daa
stos
adc
sub
pop
or
mov
xchg
and
rorl
and
int3
lcall
ficoml
cltd
dec
aad
and
xlat
popl
xorl
bound
sahf
fisubrs
test
test
lods
adc
cmp
aam
hlt
xchg
aam
xchg
ret
pop
arpl
pop
aas
stos
jle
push
mov
inc
or
dec
cmpsb
addl
fxch
pop
les
stc
dec
decb
mov
arpl
sub
mov
push
push
in
into
mov
fwait
push
dec
xchg
test
inc
loope
cld
and
fldcw
push
xchg
cmpsl
in
jp
dec
dec
outsb
ds
std
inc
in
in
out
inc
fidivrl
shl
push
jg
hlt
popa
cmp
mov
jbe
mov
inc
sub
push
jb
fsubrl
subb
inc
inc
dec
and
jns
rcrb
popf
jnp
xor
sar
addr16
push
sbb
imul
jb
add
jmp
iret
dec
xor
push
xchg
inc
fnstsw
repz
mov
mov
outsb
shlb
pop
hlt
es
add
aas
fwait
push
xchg
sbb
mov
aaa
dec
rorl
cmp
jmp
or
out
out
pop
fmull
push
pop
cmp
or
lcall
jle
sti
mov
ret
rcll
out
jnp
std
adc
cmc
enter
push
sbb
or
xorl
sbb
mov
and
jge
sahf
leave
xchg
inc
ja
out
mov
shrl
mov
cmpsb
mov
mov
andb
loope
xchg
arpl
push
sbb
test
mov
push
xor
scas
and
lods
sub
ret
mov
add
loopne
jb
arpl
sbb
gs
push
xchg
or
orb
mov
inc
sti
or
iret
cs
adc
or
jbe
mov
jle
mov
and
xchg
pop
loopne
and
cmp
xor
lret
push
mov
mov
jg
sbb
pushf
inc
and
mov
push
ret
xchg
ja
ds
jl
dec
or
adc
and
inc
icebp
push
test
imul
mov
repz
faddl
adc
pop
and
ds
cmp
pushf
xlat
ficoms
jno
or
ja
xor
push
lds
mov
mov
in
clc
xchg
test
mov
or
call
icebp
mov
mov
push
jecxz
cltd
pop
add
push
add
inc
xchg
gs
popl
ja
xchg
xor
xchg
adc
adc
les
and
adc
ss
jge
dec
insb
mov
mov
dec
rcrl
fcoms
ds
and
mov
insb
and
add
push
es
icebp
inc
adc
hlt
sbb
jmp
lret
clc
dec
pushf
sub
ljmp
mov
push
test
sbb
rorb
mov
xor
cmp
jne
adc
sub
test
addl
sub
push
mov
push
add
fs
dec
enter
lods
int3
nop
rclb
je
xchg
ja
inc
insl
pop
xor
adc
lods
insl
arpl
pop
inc
push
stos
lea
aas
mov
xlat
scas
lea
loopne
push
lods
ja
inc
inc
repnz
jp
mov
fnstcw
dec
outsb
scas
sbb
insb
mov
test
push
push
and
scas
mov
mov
sbb
and
push
pop
imul
test
cld
add
lret
out
push
test
std
mov
ljmp
testl
fiadds
mov
fimull
sti
cmpsb
stos
lds
pop
mov
or
inc
sub
jae
xor
and
test
cmp
les
cmc
cltd
imul
or
jbe
xor
dec
aas
pop
daa
rdmsr
xchg
lods
dec
jb
enter
xchg
sub
push
sbb
sub
fidivs
inc
jno
subb
and
xchg
imul
xlat
mov
pusha
push
mov
cld
add
inc
mov
mov
ja
cmp
notb
and
sub
dec
jo
outsb
movsl
enter
lds
mov
je,pn
dec
lret
mov
push
in
test
adc
ret
mov
insl
adc
mov
sbb
icebp
dec
jecxz
jno
int3
jns
orl
jle
xor
xor
add
xor
inc
xchg
cmc
fimuls
adc
inc
pop
xor
incl
nop
outsb
mov
ss
sub
shr
inc
mov
cmp
jl
push
xlat
out
es
pop
cmpsl
mov
inc
sbb
inc
ljmp
or
testl
aaa
aaa
orb
in
push
xor
icebp
jmp
cwtl
push
loopne
ljmp
std
or
test
add
addb
loope
mov
out
repz
jp
sbb
cmp
sarb
push
adc
repnz
inc
mov
mov
and
cld
jle
fcoms
icebp
cmpsb
shl
sub
in
mov
fsubs
cwtl
xchg
mov
es
das
and
jmp
sbb
je
scas
jae
mov
imul
shrl
jp,pt
cwtl
hlt
leave
pop
loopne
mov
into
popa
cmp
das
ficoml
stos
arpl
xchg
int
or
add
out
stos
aad
dec
mov
lods
insb
imul
or
pop
fstl
xchg
mov
ja
push
adc
test
push
sahf
loopne
out
aam
nop
cli
or
mov
or
dec
aam
mov
fstl
shrl
mov
xor
out
jmp
popa
movsb
push
add
cmp
mov
mov
xor
daa
sub
ljmp
leave
loope
in
fists
pop
adc
mov
dec
mov
pop
xor
cmpb
pop
in
cs
pop
or
and
add
xchg
in
fucompp
xchg
mov
or
push
in
enter
fs
shrl
out
jmp
lcall
lret
xor
lret
push
pop
add
fldcw
push
adc
pushf
shlb
mov
ret
ljmp
scas
mov
sub
iret
xlat
mov
dec
ljmp
xchg
lea
fldenv
out
fdivl
dec
lock
subl
cltd
lcall
ret
loope
sub
sbb
ss
in
cmpsb
pushf
call
insb
dec
cmp
add
ljmp
out
out
dec
inc
and
dec
dec
pop
fldenv
sub
xlat
push
jb
test
mov
aaa
fxch
and
scas
stos
popf
jne
movsl
enter
ja
jbe
dec
out
in
cwtl
fldenv
cmc
lock
push
xchg
and
xchg
xchg
pmulhw
popa
cmp
mov
xchg
outsl
js
pop
dec
inc
mov
das
mul
roll
pop
and
push
jo
xchg
das
mov
jno
into
xchg
movsb
mov
jbe
popa
sub
sti
dec
xchg
insl
dec
mov
test
into
stos
jo
sbb
jge
adc
fsts
sbb
cmp
pop
dec
push
inc
jle
les
cmp
push
outsb
js
cmp
or
sbb
enter
or
jno
rorb
outsb
je
xchg
aam
or
cmpsb
mov
inc
sbb
mov
and
js
xor
aad
jmp
fistps
pop
fildll
in
xchg
cmc
shr
add
mov
clc
adc
add
pop
leave
decb
mov
xchg
mov
ss
popf
test
jge
popf
imul
test
inc
xor
adc
jae
out
mov
stos
bound
test
xor
repnz
xchg
pop
into
dec
imul
adc
fcoml
push
je
xor
in
mov
adc
mov
add
pop
jae
test
fnop
and
jl
mov
ja
push
mov
sar
dec
lret
sbb
enter
jle
dec
jae
sub
add
cmp
fisubs
lods
negb
jge
dec
mov
movsl
loope
flds
scas
jae
es
xchg
pop
leave
out
call
dec
dec
jg
push
mov
adc
jne
adc
fimull
fstpl
stos
incl
ljmp
dec
mov
out
test
adc
cmp
push
xchg
iret
adc
mov
push
inc
dec
xor
pop
adc
adc
test
pop
ret
dec
je
lcall
jns
in
lds
inc
mov
lock
push
movsl
xor
jg
aas
hlt
mov
adc
or
mov
iret
mov
push
fwait
outsl
mov
sbb
stos
leave
rorb
arpl
imul
insl
cs
or
inc
cmp
cmpsb
das
shrb
and
roll
fsub
idivb
xor
sti
push
les
dec
xor
push
mov
cmpsl
rorb
lahf
inc
dec
mov
shlb
lds
xchg
jne
daa
inc
and
sub
jno
mov
mulb
adc
lret
hlt
cltd
inc
and
inc
mov
es
enter
imull
inc
lods
into
in
jns
stos
or
out
pop
lods
imul
jmp
ja
ret
xchg
es
ret
das
ja
mov
fstpt
shl
aad
sbb
fwait
pop
and
cld
xor
xor
lahf
scas
xor
repnz
pop
and
adc
lret
and
aas
jns
enter
jecxz
jnp
flds
fstl
ds
ja
pop
cltd
adc
cli
and
jmp
adc
jmp
push
mov
lods
mov
pop
int
pop
mov
jbe
mov
mov
xor
push
cli
add
enter
jb
in
dec
add
or
jmp
mov
lods
fstps
sbb
ret
nop
test
insl
mov
cmpb
fwait
and
mov
dec
push
aas
ffreep
orl
jo
cmp
xchg
or
jmp
mov
lods
in
sub
ljmp
xchg
fcmovbe
fidivrl
mov
inc
xor
std
adc
rclb
xor
sbb
iret
cmpsb
xchg
jmp
xchg
mov
testb
sub
sbbb
cs
aaa
imul
js
mov
fcomps
repnz
pop
mov
xor
arpl
add
jl,pt
cmp
xchg
or
cli
enter
push
in
inc
sub
jecxz
lods
loop
and
adc
cmpsl
retw
sub
cmp
xchg
xchg
lcall
mov
sbb
hlt
sub
mov
gs
cmp
adc
cmc
int
xor
cmp
rcll
xchg
data16
out
inc
sub
stc
sbb
dec
mov
pop
in
xchg
adc
fs
in
std
leave
rcll
sub
mov
fistps
push
aam
mov
adc
xchg
imul
sbb
test
pop
jno
mov
in
aaa
push
lock
mov
push
xchg
xor
jl
xor
ret
pop
xchg
pop
rcll
arpl
fldt
dec
lods
fbld
fidivrs
pop
movsb
ss
test
inc
jns
fcmovnb
sarb
mov
push
cltd
cmp
jnp
and
mov
std
xor
das
incb
scas
jbe
inc
adcl
xchg
repnz
pop
add
sub
out
xor
cmpsl
mov
daa
dec
push
push
shlb
xor
ds
adc
div
sbb
icebp
lret
inc
mov
jmp
scas
psllw
mov
mov
fs
mov
iret
fbstp
fwait
or
aaa
adc
add
mov
lods
mov
lcall
mov
and
stos
jns
push
mov
jb
pop
jg
adc
mov
and
add
add
aas
cli
pop
xchg
pusha
xchg
cs
add
sbb
and
xor
fsubrl
cmpsl
lret
sarb
ds
push
insb
push
jmp
jmp
xchg
stos
dec
loop
int3
repz
cltd
push
cmp
cmpsl
add
or
and
xor
rcrl
or
pop
cmovno
xchg
dec
xor
in
es
push
xchg
sub
sub
sub
fldcw
cmc
cwtl
or
jns
push
imull
pop
push
clc
pop
cld
orl
aad
and
mov
xchg
add
xchg
das
je
and
dec
clc
adcl
xor
mov
lcall
test
pop
mov
mov
imulb
add
jbe
movl
pop
pop
imul
divl
jne
add
dec
aas
jge
das
mov
xor
insl
inc
inc
mov
add
mov
hlt
pop
fldenv
outsl
push
jg
xchg
jl
dec
push
iret
cli
or
out
jg
xchg
popa
pop
fstl
rdmsr
outsb
and
lret
xchg
repz
sbb
into
loope
rcll
es
insl
in
jle
imul
sarb
orb
gs
and
jp
jb
adc
push
testl
in
mov
or
movsb
and
loope
jne
pop
sbb
flds
cld
ds
sbb
inc
loop
cmp
repz
lahf
imul
lret
push
jp
jmp
test
add
lods
mov
sbb
mov
jge
in
jo
sub
mov
cmpb
mov
cmp
sub
stc
push
testl
andb
js
adc
push
sarb
jno
loop
stos
out
arpl
push
lahf
push
int3
insl
push
mov
push
pop
test
cmpsb
adc
jl
add
mov
shlb
stos
aas
stos
stc
jbe
out
and
inc
stos
adc
sahf
lods
pop
xorb
test
divb
into
test
jno
movsb
les
imul
adc
adc
out
loope
jns
push
cmpsb
fs
or
push
fsubrs
fisttps
mov
lock
fimuls
ret
insb
pop
arpl
or
sub
lret
add
out
into
pop
dec
sub
mov
movsl
xor
push
push
or
jo
ret
push
mov
inc
jecxz
dec
and
pop
call
jns
and
sbb
cmp
rcrb
in
jb
not
sbb
jno
pop
lods
push
add
mov
ret
dec
push
xchg
dec
mov
push
andb
stos
xchg
xor
test
push
pop
pop
ds
sbb
jp
xor
mov
mov
and
lret
cmp
inc
inc
mov
cmp
xchg
lods
jb
mov
lods
sbbb
addb
enter
xor
loope
das
fs
sub
fwait
pop
sub
insl
add
inc
stos
jb
pop
popa
mov
test
in
cli
das
push
and
adc
repnz
inc
inc
cwtl
sub
dec
loope
mov
test
incb
push
es
xor
mov
and
jno
add
jbe
jb
adc
jno
push
sbb
cmp
hlt
addr16
and
jle
clc
adc
sub
mov
xchg
sbbb
testl
cwtl
movsl
xchg
in
nop
mov
sub
push
dec
and
jle
ds
int
sub
or
dec
out
sub
aam
repz
stos
inc
rcl
sbb
rcrl
push
call
sbb
push
xchg
leave
das
fldt
shl
xchg
dec
lods
jmp
ss
jle
mov
popf
jecxz
lds
mov
xor
fdivl
xor
or
adc
sub
push
sub
js
dec
xor
xchg
xor
dec
mov
repnz
mov
iret
jo
lahf
aad
fstpt
add
jmp
xor
je
push
cld
in
mov
push
or
aad
push
xchg
xor
data16
scas
adc
push
mov
cmpsl
fsubp
mov
repz
xchg
in
mov
xchg
fbstp
ja
add
lahf
xchg
outsl
shl
es
mov
pop
out
stos
sub
mov
in
sbb
jnp
lods
mov
cltd
fwait
mov
insl
dec
stos
int3
cli
dec
out
fisttpl
adc
xor
push
inc
in
ret
dec
jecxz
jp
inc
in
fwait
pop
mov
mov
sarl
stos
mov
add
cmpsb
jle
push
jne
les
int3
adc
notb
and
stos
mov
push
iret
push
jmp
in
daa
mov
dec
or
or
stc
push
push
incl
push
inc
negl
sub
push
jb
out
daa
sahf
xchg
int
mov
int
imul
in
scas
lea
lds
xor
fbstp
mov
adc
repnz
push
pop
insb
push
push
sbb
inc
jno
aaa
mov
icebp
dec
in
rcrb
dec
inc
shlb
mov
or
push
jb
add
es
in
mov
jl
ret
push
roll
das
into
and
cmpsb
inc
pop
jle
jecxz
push
xchg
push
cld
add
icebp
and
jo
call
lret
cmp
aaa
jne
iret
cmp
dec
in
xlat
adc
or
cmp
jecxz
movsb
repz
ffree
xor
jg
dec
test
push
dec
mov
int
xchg
leave
inc
push
xor
xchg
add
scas
loop
lea
into
vpshlw
mov
or
divl
dec
icebp
pop
add
sub
pop
daa
mov
ss
jae
decb
sti
mov
shll
inc
int3
cmp
adc
aam
sbbb
sbb
fisubrl
cli
gs
mov
add
repz
push
pop
das
scas
test
lret
pop
jge
aam
pop
xlat
mov
sub
insb
add
mov
sbb
outsb
fadd
push
xor
sub
add
stos
xchg
in
clc
cmpsb
in
rorb
and
add
mov
cmp
das
fsubrp
mov
xchg
pop
cmp
jl
sbb
mov
sbb
stos
inc
fs
pop
pop
cld
std
cmp
cmp
pop
insb
testb
insl
jecxz
xchg
xchg
addl
sbb
cmpsl
and
jno
cmp
pop
ret
imulb
dec
xlat
mov
cmp
adc
ret
xchg
fstpl
sarb
add
sbb
insb
int3
jae
sarb
test
mov
lahf
xchg
imulb
daa
stc
and
mov
lcall
std
adc
cmp
push
mov
test
hlt
lods
sbb
lea
pop
jmp
jmp
fucomi
int
jp
xor
in
stos
inc
jb
sbb
pushf
inc
lret
mov
call
fildll
insb
and
pop
outsl
pop
mov
sarb
cmpb
push
in
push
dec
adc
dec
add
stos
xor
sbb
jmp
inc
cmp
or
cmp
arpl
lods
gs
push
gs
arpl
push
test
cmp
push
fucom
fstl
mov
out
jecxz
xor
insb
int
decb
mov
jno
push
loope
inc
sbb
pop
jp
cmp
and
jnp
xchg
adc
lea
addb
dec
adc
sub
mov
or
push
pop
lcall
add
xchg
loop
mov
repnz
cwtl
push
lret
arpl
pop
jmp
movsl
movsl
push
gs
xchg
movsb
mov
loopne
fldcw
xor
or
adc
mov
scas
jnp
es
and
lods
jg
sbb
inc
pop
and
mov
loopne,pt
loope
js
ja
and
pop
into
insb
jp
pop
pop
lea
xchg
mov
lcall
lea
fcomp
dec
push
jbe
cmp
test
notb
add
movsl
dec
out
xchg
sbb
lock
inc
stos
jnp
xchg
ds
daa
or
cmp
loopne
sbb
clc
std
mov
cmpb
lcall
ds
ret
js
fdivp
and
mov
sbb
cmpsb
stos
icebp
or
popa
inc
loopne
scas
int3
aas
or
int3
cmpsb
insb
cmp
pusha
dec
mov
pop
stc
add
dec
mov
cmp
and
xor
das
in
movsb
mov
mov
sar
fdivrl
dec
push
and
xor
sbb
push
add
xchg
dec
leave
ror
mov
scas
aam
mov
mov
cmp
cmp
dec
rol
lea
inc
jbe
dec
das
clc
cmpsl
add
push
add
or
stos
cmpsl
sbb
dec
adc
push
cwtl
inc
lea
shlb
jae
mov
inc
xchg
shrb
jecxz
rorb
xor
notl
pusha
lcall
movsb
mov
and
mov
dec
pop
cld
loop
pop
jne
mov
xchg
add
or
mov
fcmovbe
pop
xchg
nop
xchg
cmp
mov
scas
push
mov
rorb
imul
xchg
jp
xchg
fstps
mov
test
push
loopne
cmpsb
movsb
and
adc
jecxz
int3
cltd
jp
and
aaa
xchg
xor
sub
mov
call
sbb
and
xchg
cld
ret
lds
aas
es
sbb
enter
pop
aad
sbbl
je
in
stos
inc
std
es
xchg
mov
inc
cmc
dec
rcll
hlt
sub
ret
fstp
test
pop
daa
push
stos
ds
dec
push
test
cmpb
xchg
movsl
lock
mov
sti
pop
fldln2
jbe
loopne
add
xor
mov
jl
inc
pushf
inc
addb
ss
std
rorl
gs
cmp
jnp
mov
shlb
ucomiss
std
pop
mov
lods
insl
mov
test
dec
gs
enter
insl
mov
repnz
sbb
lea
xor
inc
fwait
mov
popa
push
icebp
push
add
sub
lods
cmp
clc
and
fcompl
cmpl
jae
adc
dec
leave
roll
mov
sbbl
xlat
out
adcl
mov
loopne
push
mov
sti
aas
cmp
test
scas
or
sub
imul
xor
xor
out
jp
xor
rcrb
cmp
mov
fimull
fwait
andb
inc
fisubrs
in
push
mov
jb
xchg
xchg
das
cmp
mov
cmpsl
jnp
xchg
sahf
inc
pop
test
add
pop
popf
sbb
lock
cmp
clc
es
loope
scas
sub
jp
cmp
repz
hlt
dec
push
loopne
es
mov
mov
shl
lds
pop
ret
aad
psubusb
xor
fldt
mov
out
xchg
sbb
mov
repnz
xchg
out
test
jno
pushf
lds
push
push
loope
mov
rcrl
scas
jg
sub
inc
jge
arpl
push
das
mov
pop
mov
xchg
ds
or
leave
orl
add
or
out
sahf
jne
loop
mov
mov
mov
dec
or
aam
cmc
push
js
xor
aam
push
test
push
shll
sbb
mov
imul
movsl
jg
jp
repz
fisubl
into
sbb
mov
movsl
inc
sub
cmpsl
inc
or
in
addb
jp
loope
xor
popf
cmp
divb
out
jbe
shlb
mov
aaa
and
stc
scas
or
gs
sbb
pop
mov
arpl
ja
scas
dec
cmp
int
jle
dec
stos
mov
pop
jae
out
ror
shr
and
out
fisttpll
nop
inc
cli
loop
jge
push
pop
adc
xchg
adc
inc
lds
dec
jge
arpl
fnstcw
cmp
jbe
nop
mov
in
inc
cmp
cmp
jmp
add
mov
cmpb
jo
add
push
out
and
adc
jns
es
out
lcall
jmp
mov
jae
cltd
inc
arpl
xchg
les
cmpsb
mov
addr16
sbb
pop
xor
pop
imul
sti
in
xchg
and
lods
movsl
lahf
pushf
sub
inc
bound
xlat
int3
fdivs
cs
push
push
jp
or
mov
pop
mov
cli
imul
mov
fs
mov
dec
or
aam
mov
push
push
cmp
clc
shlb
adc
jno
jne
shr
xor
mov
pushf
inc
xor
xor
cmc
stc
leave
or
mov
movsb
push
push
scas
repz
loop
lea
data16
or
dec
out
inc
sbb
call
idivl
add
xchg
mov
xlat
jl
cmpsb
gs
clc
aas
cvtpi2ps
push
lods
or
adc
jle
sbb
sarl
mov
cli
mov
test
fisttps
dec
jnp
clc
inc
dec
jmp
push
outsl
jmp
and
repz
in
pop
movsl
dec
dec
sub
pop
or
in
jmp
xchg
test
mov
gs
sub
cmc
mov
call
sbb
aam
lcall
pop
dec
lahf
mov
mov
rcrl
ret
jae
lods
in
loop
lret
bound
push
aad
fs
ss
pop
sub
dec
xor
pop
shlb
daa
push
cld
sub
cltd
or
outsl
sti
ret
push
bt
loopne
sbb
push
mov
ljmp
push
and
hlt
mov
push
mov
and
ror
iret
dec
aaa
jo
mov
les
movsb
sbb
pop
and
jle
mov
ja
inc
sub
inc
into
out
jge
inc
movsb
test
and
enter
jge
das
pop
and
cmp
xchg
sahf
inc
ret
xor
jnp
dec
or
fidivrl
cmpsl
mov
pusha
jbe
stos
or
wbinvd
ret
stos
cmp
insl
test
dec
inc
int
cmpsb
or
in
outsb
pop
jge
cs
test
xchg
pop
inc
pop
and
mov
adc
mov
fsubl
cs
pop
outsb
jb
clc
sub
sub
leave
mov
stos
cwtl
shll
mov
fbld
addr16
ret
xlat
mov
cmc
sub
push
jl
outsl
cmp
adc
inc
movsl
fstpt
cwtl
and
add
and
xchg
test
adc
leave
idivb
rcrb
push
test
das
cld
mov
stos
movsb
out
xlat
jns
mov
and
adc
aas
andb
adc
jge
push
pop
les
xor
and
and
roll
sbb
jecxz
out
mov
sub
and
je
jp
scas
cmp
aam
ret
lods
test
mov
je
inc
lods
inc
sbb
inc
pop
out
pop
mov
and
sbb
jb
mov
push
mov
and
xor
test
lds
jb
leave
test
inc
call
icebp
fldl
or
in
inc
insl
push
lea
imul
insb
and
push
and
daa
iret
mov
mov
stos
lcall
adc
adc
repz
rol
pusha
push
es
dec
imul
push
int
dec
push
int
adc
and
pop
cs
and
push
adc
adc
loopne
test
mov
mov
sub
mull
xor
inc
add
ds
mov
inc
pop
push
push
aad
cmpsl
jne
outsb
arpl
repnz
or
mov
dec
mov
or
jbe
rcrb
mov
cmp
cli
fcomp
stos
mov
adc
cmp
dec
pop
inc
lahf
mov
clc
and
dec
add
sub
inc
jge
or
jno
mov
insb
je
movsb
jns
jnp
sbb
pop
fiaddl
cmpsl
jle
add
inc
pop
aaa
mov
in
xlat
lods
sub
bound
mov
scas
cmp
xor
dec
shlb
dec
cmp
mov
into
xchg
in
adc
rol
mov
and
in
fisubs
add
push
paddsw
mov
sbb
dec
mov
xchg
sub
cmp
out
pop
rolb
mov
cmpl
inc
pop
jo
jg
add
inc
cmpsl
mov
xchg
into
sbb
insb
outsb
sub
jb
mov
stc
dec
adc
in
je
repnz
jle
cmp
jle
adc
mov
push
inc
jmp
scas
pop
lds
xchg
mov
in
push
add
in
adc
add
and
shll
mov
push
inc
inc
divl
inc
push
out
inc
scas
inc
leave
cli
enter
push
lcall
cs
mov
xor
mov
movsl
dec
aas
cltd
push
sbb
mov
lea
fwait
ret
out
sbb
dec
mov
mov
shlb
lcall
cmp
and
bound
into
mov
and
mov
bound
gs
fpatan
fldcw
jecxz
mov
or
mov
or
dec
cmp
mov
insb
mov
jb
mov
inc
pop
bound
mov
jle
fistps
test
mov
mov
dec
pusha
std
mov
dec
jmp
xor
xchg
test
ret
es
push
or
cmp
lret
xlat
or
push
imul
out
mov
stos
and
and
jp
xchg
push
inc
pop
sub
or
push
fwait
jo
repnz
mov
popl
xchg
push
pushf
mov
jnp
data16
enter
and
mov
push
push
pop
lods
shlb
pop
js
gs
add
jmp
push
inc
test
sbb
adc
adc
add
mov
fstpt
pop
js
xchg
dec
gs
jle
pop
loopne
dec
leave
mov
xlat
pop
push
shll
in
mov
push
shll
and
mov
mov
push
rcrl
mov
xchg
les
dec
mov
push
lahf
or
nop
or
lea
sbb
fildl
es
cmp
rol
or
jl
into
sbb
lahf
adcl
mov
int
push
xchg
lret
jnp
mov
and
mov
popa
or
clc
add
jnp
cmc
jb
jb
repnz
cltd
das
gs
clc
mov
rol
push
sub
call
xchg
mov
addl
push
leavew
lret
aad
inc
lock
mov
mov
mov
mov
in
test
mov
adc
inc
dec
std
fcoms
sbb
jnp
push
aam
xchg
dec
mov
jne
cmc
dec
xchg
inc
jg
cmp
popa
andb
loopne
jno
push
and
push
adc
sbb
and
push
repz
sbb
and
jg
cmpsl
push
push
popf
pushl
out
decl
push
loop
lcall
imul
push
or
xlat
and
fwait
xchg
jg
cld
adc
and
cwtl
or
add
loopne
leave
repz
add
int3
fcmovbe
std
mov
mov
mov
mov
sbb
add
imul
mov
pop
mov
aas
out
cltd
inc
add
cmp
roll
rorb
cs
rcl
push
pop
mov
xor
jl
push
cld
popa
mov
inc
push
fs
cli
mov
sub
mov
leave
add
dec
popa
mull
shl
test
sub
mov
jo
adc
inc
test
jge
iret
testl
cmpxchg
or
rep
outsl
sub
fimull
lods
push
js
jecxz
int3
mov
pop
dec
mov
mov
aas
xchg
shrb
push
std
rolb
push
pusha
imul
xlat
jmpw
add
pop
imulb
jbe
push
loopne
dec
cmp
cmp
sub
out
push
scas
jne
xchg
movsb
sbb
mov
mov
adc
add
loopne
xor
jae
add
pop
loop
hlt
mov
cmp
mov
test
mov
xchg
sahf
loopne
inc
add
cmpl
push
push
cmp
js
inc
imul
fdivr
cmpsb
adc
jecxz
stc
mov
xlat
xchg
mov
mov
nop
insl
add
fsubs
fistpll
bound
sarb
sbb
ss
sbb
filds
lods
hlt
sbb
or
subl
xor
mov
add
pop
xchg
sub
das
mov
mov
xchg
or
and
rclb
mov
scas
sbb
popa
lds
test
xchg
and
xor
imul
addr16
push
shll
cmp
stos
xor
out
arpl
mov
jb
lods
pop
jae
push
dec
cs
outsb
dec
les
mov
jns
mov
in
loop
dec
push
scas
dec
cmp
fisubrs
pop
dec
aad
in
aad
mov
cmp
jp
mov
cmp
mov
xchg
and
pop
and
sti
cmp
dec
cltd
hlt
sbb
xchg
xchg
jg
not
jbe
fs
mov
dec
bound
int
cmpsb
int
das
mov
push
adc
mov
fdivr
iret
jl
and
or
mov
mov
cs
push
enter
aad
jmp
mov
xchg
jp
and
leave
imul
sbb
push
xchg
enter
sahf
or
xchg
pop
mov
inc
push
inc
mov
stos
test
cmp
mov
sbb
sbb
mov
insb
gs
sbb
xchg
outsl
mov
inc
and
imul
xor
push
js
push
fimull
push
dec
sbb
movsl
mov
inc
gs
adc
dec
out
cli
mov
stos
aam
mov
add
jbe
sub
dec
sti
mov
push
dec
aas
jmp
stos
mov
dec
adc
xor
xor
sbb
or
mov
dec
aaa
jns
mov
les
or
std
in
out
test
js
jge
andl
or
push
xchg
fucomi
sahf
xchg
std
add
clc
js
jno
pop
jl
sbb
and
fisubrl
adc
pop
lea
leave
xor
mov
add
adc
mov
mov
pop
fldcw
aaa
dec
xor
scas
nop
popf
push
cmp
into
aad
test
sub
push
lret
mov
or
out
mov
mov
mov
push
xchg
fisttps
int
xor
int3
insb
ret
repz
insl
pop
ja
popf
ss
sbb
test
jnp
cwtl
push
pop
fadd
out
jb
imulb
mov
add
enter
psubsb
jno
push
outsl
adc
cwtl
dec
xchg
daa
lcall
imul
xor
pop
add
divb
in
in
mov
push
popa
data16
mov
sub
out
lods
gs
push
mov
dec
jbe
and
xchg
flds
adcl
in
pushf
dec
int3
lock
sbb
push
pop
stos
aas
mov
xchg
inc
pusha
notl
icebp
mov
mov
sarl
mov
cltd
cltd
sub
sbb
jb
lret
cmc
int
test
xchg
mov
repnz
jp
jbe
test
sub
cltd
lret
icebp
imul
lcall
sbb
push
es
in
enter
arpl
daa
gs
iret
xchg
clc
dec
sub
notb
push
out
mov
in
arpl
mov
jnp
mov
les
ljmp
push
das
sbb
imull
notl
mov
test
pop
pop
add
addb
ficomps
push
js
dec
add
std
sub
cmovnp
dec
add
daa
dec
sbbl
xor
cmp
bound
int
ret
addl
mov
mov
mov
jae
clc
adc
pop
jp
adc
xchg
icebp
xlat
push
xor
lret
pop
dec
pop
xor
sub
xor
fstpl
les
insb
inc
xor
jmp
pop
push
mov
sbb
jb
scas
sub
mov
sbb
ffreep
dec
out
loope
xchg
pop
mov
lcall
push
popa
cmp
outsl
ja
xchg
jnp
in
subb
cmp
xchg
negb
jecxz
sbbb
xor
jne
fidivrl
mov
mov
lock
test
inc
in
add
shl
outsl
jp
cmpsl
test
movsl
pop
cli
jecxz
mov
mov
dec
dec
ficompl
sbb
dec
adc
mov
daa
xor
xchg
jns
mov
sbb
cmc
xor
push
adc
add
jecxz
cmpsb
add
fmuls
mov
mov
rep
mov
cmp
mov
insl
or
jb
ret
cli
add
addr16
lea
fbstp
popa
loop
test
iret
rorl
insb
mov
insb
call
test
jl
mov
inc
cmp
or
push
or
sub
push
sub
xorl
add
les
jl
jg
dec
lods
cmp
pop
imul
repz
lds
push
mov
adc
add
rcr
fildll
add
arpl
je
mov
xchg
in
and
mov
adc
aaa
push
subl
pop
jo
or
ja
dec
shrb
push
and
mov
mulb
sub
push
popa
daa
sub
push
sbb
stc
out
sbb
push
push
cmc
stos
popa
pop
mov
jne
xor
sub
jmp
out
inc
xchg
punpckhbw
outsb
pop
xor
jmp
dec
imul
test
insl
xchg
jbe
cmp
push
not
push
or
push
out
enter
push
sub
insl
adc
out
fldl
push
mov
push
ja
mov
sub
adc
or
mov
pop
in
scas
mov
and
aad
daa
sbb
aad
imul
adc
and
aam
mov
in
jecxz
aaa
mov
stc
mov
mov
call
bound
loopne
xchg
sbb
xlat
push
fistpl
mov
lods
iret
fildll
les
adc
vpunpcklqdq
outsl
in
ljmp
sahf
int3
push
lret
sub
ljmp
sub
loop
cli
jl
jns
mov
orl
pop
lds
push
adc
pop
cs
push
hlt
std
hlt
dec
and
les
aam
shrb
xchg
or
add
mov
push
inc
sub
stos
rcl
bound
inc
test
dec
sbb
enter
xor
push
jmp
pop
stc
lds
add
add
add
inc
enter
aaa
imul
and
lods
in
lea
rcrb
cmc
xchg
push
lahf
subb
data16
rcl
pop
push
in
pop
sbb
aaa
dec
inc
test
hlt
adc
and
fisubs
cli
push
jo
sarl
mov
fstpl
sbb
cmp
call
iret
int3
sahf
dec
hlt
mov
leave
lahf
jl
call
push
js
into
pop
lods
mov
xor
shlb
add
and
mov
fidivs
call
mov
adc
push
mov
movsb
sbb
mov
jno
jg
sti
js
lcall
ss
pop
mov
mov
outsb
lahf
or
je
jmp
inc
fbld
pop
cli
mov
aaa
insl
subl
cmp
mov
mov
push
or
aas
sub
add
call
movsb
inc
loopne
cltd
cltd
adc
cmpsb
push
sbbb
inc
daa
dec
inc
and
scas
inc
in
sbb
pop
loop
arpl
sahf
cmp
push
dec
jl
inc
pop
xor
fmul
xor
movsb
insb
inc
popa
cmp
xchg
inc
xchg
imul
mov
movsl
in
aad
sub
dec
aad
dec
mov
cld
mov
pop
adc
mov
and
mov
xlat
xor
dec
loope
inc
mov
and
or
and
das
xor
ds
mov
nop
sbb
jecxz
pop
std
mov
sub
iret
cltd
mov
dec
test
pop
xchg
mov
inc
out
in
xchg
adc
mov
lods
mov
in
mov
sub
std
ja
pushf
mov
imul
jmp
sbb
sbb
jnp
cmpsl
cld
push
and
ja
mov
xorb
cmc
repnz
mov
pop
je
out
dec
mov
pop
adc
xor
int
ret
mov
outsl
or
inc
adc
je
sbb
lods
mov
leave
pop
arpl
popl
fsubrl
jae
push
push
xor
enter
jmp
push
push
xchg
and
or
aam
rcll
pop
sbb
inc
ja
movsb
mov
dec
inc
mov
repnz
outsb
ds
adc
push
sbb
out
push
push
cmpsl
and
or
cmp
pop
mov
out
push
loope
enter
pcmpeqd
jl
push
lods
inc
jmp
jl
push
or
and
repz
or
lods
xor
enter
sub
jne
adcb
xor
xchg
clc
es
gs
xlat
xchg
out
mov
jae
push
xchg
js
push
cltd
ja
cmp
push
jecxz
aaa
clc
cmpsl
xchg
jo
xchg
in
xchg
push
pop
xchg
push
adc
fimull
aad
insb
push
rorb
push
or
jecxz
xor
inc
adc
repnz
or
dec
mov
lds
lods
scas
cmc
pxor
daa
cli
decb
add
dec
adc
sbb
fcmovbe
sub
cltd
out
mov
into
mov
shrb
dec
aas
mov
sar
pop
push
or
adc
and
xchg
scas
mov
jae
frstor
pushw
cli
cli
mov
cmp
addr16
in
push
cmp
fs
sbb
jge
mov
daa
push
bound
push
outsb
arpl
mov
push
mov
mov
jbe
push
repnz
mov
mov
insb
fstpt
pusha
add
cmp
out
cmp
and
negb
iret
cs
add
adc
in
add
shr
xlat
in
addb
inc
loope
xchg
out
mov
clc
xchg
notb
stos
repnz
movsb
bound
and
jno
adc
lock
sbb
stc
mov
imul
xchg
mov
push
push
inc
mov
lock
lfs
inc
pop
lock
inc
cmc
dec
push
ds
mov
mov
gs
roll
into
mov
cmp
loope
imull
sbb
xchg
pop
movsl
scas
jae
add
inc
sti
push
mull
push
or
sbbl
mov
mov
cs
ret
in
mov
xchg
dec
push
popf
xchg
pop
add
nop
ljmp
jno
sbb
adc
out
dec
adc
or
or
inc
or
sbb
dec
and
int
push
loope
into
dec
mov
and
mov
stc
mov
push
mov
out
sbb
stos
in
clc
test
shll
mov
cmc
and
cmp
inc
or
mov
or
jae
sbb
test
push
push
mov
adc
jmp
rcr
push
pop
sub
push
aad
xchg
xchg
jne
xchg
insb
jl
movsl
sbb
inc
dec
icebp
sbb
push
push
mov
sbb
jbe
or
clc
push
xor
lcall
imul
sbb
or
jp
dec
xor
mov
and
jl
fsubl
das
aas
push
sti
mov
inc
inc
lea
dec
nop
or
inc
jecxz
xchg
inc
fpatan
ds
out
pop
sub
inc
std
iret
in
mov
enter
dec
inc
pusha
inc
pop
pusha
mov
in
push
mov
push
jb
pop
in
mov
lcall
call
in
sub
cmp
xchg
ja
repnz
cmpsb
xor
aad
add
orb
xchg
jbe
cmpsb
shlb
cli
add
push
cmc
xor
push
mov
cmpsb
adcl
add
cmp
inc
imul
aas
pop
mov
popf
rcrl
insl
outsl
popf
jp
mov
fs
dec
popf
test
jl
test
or
cmp
inc
cmc
test
sarl
sub
jo
popa
sbb
ror
pop
mov
xchg
add
loope
adc
sub
push
add
add
pop
mov
icebp
lods
dec
sub
loope
bound
stc
scas
sbb
xorb
mov
cmp
push
jp
fst
dec
lcall
shlb
push
push
inc
cmp
sub
adc
mov
sti
test
pushf
sahf
ret
mov
xor
push
out
and
jle
mov
rclb
pop
and
addr16
mov
insb
sbb
scas
testl
jg
test
loope
dec
int
pusha
rcrl
mov
and
jle
adc
push
daa
pushf
scas
xchg
mov
or
imul
loope
repz
add
or
stos
sbb
cmpsl
std
jo
pusha
ljmp
mov
fidivrl
sub
dec
push
cmp
in
dec
cmpsb
cwtl
inc
stos
mov
add
test
jno
jl
sahf
push
dec
push
sahf
mov
jne
shll
jne
cmp
adc
fdivr
pop
in
sub
filds
mov
cmp
shr
lret
dec
jo
adc
adc
dec
pop
mov
mov
in
add
inc
xchg
andl
sub
outsl
pop
int
xor
mov
push
data16
ret
daa
jle
mov
sbb
cld
cli
gs
test
mov
mov
xor
gs
xchg
sti
insl
jo
xor
pop
push
andl
adc
mov
bound
cs
subb
pop
int3
div
lahf
sti
xchg
in
dec
jo
mov
or
cld
or
pop
pop
sti
mov
sub
adc
push
daa
int3
cld
jns
mov
dec
xchg
xor
int
inc
fistpll
inc
sbbl
fcmove
gs
movsb
int3
loopne
inc
xchg
push
fs
aad
adc
js
pop
fidivs
mov
xor
sub
hlt
scas
xorl
cwtl
jb
add
push
pop
lahf
or
xlat
addb
rorl
and
loopne
inc
mov
inc
rcrl
pusha
push
jno
push
mov
mov
push
and
sub
xor
jbe
adc
pop
rorl
stos
push
inc
jns
addb
out
addr16
in
imul
adcl
xchg
pop
stos
push
scas
pop
cmp
or
out
mov
add
mov
jnp
jb
jo
cmp
xchg
or
fwait
add
mull
xor
inc
xor
inc
push
popa
xorb
jo
mov
rorl
into
sbb
addr16
push
cld
into
lods
inc
add
add
cmpsl
pop
or
ss
lret
call
xor
dec
add
push
std
mov
pop
cmpsl
and
pop
inc
push
cmpsl
xor
lahf
negl
xor
mov
bound
movsl
mov
notl
cmpsb
les
fildll
jns
cmp
and
and
rep
in
outsb
dec
ret
sub
ljmp
sbb
daa
sahf
xor
shr
jp
and
and
xor
popa
stc
mov
hlt
mov
stos
sbb
sub
nop
mov
lea
xchg
movb
ljmp
dec
daa
push
cmp
inc
cmpsb
insb
stos
inc
sbb
outsl
sub
inc
adc
mov
mov
rorl
push
jecxz
mov
testl
and
xor
xor
js
pop
cltd
jl
sub
dec
dec
xchg
or
pop
mov
rol
ja
jecxz
jb
mov
roll
xchg
into
in
cld
imul
jmp
fsubrs
ja
lahf
scas
xchg
mov
pushf
lahf
loop
jge
pop
in
loope
cld
cmpsb
icebp
push
ret
leave
lods
xchg
stos
aam
mov
js
pop
push
xchg
jbe
lods
popa
adc
mov
les
fimuls
push
sbb
adc
fwait
sub
out
test
jne
int3
jbe
int3
fisubl
push
xor
cld
out
cmp
lock
int3
jmp
lds
xor
inc
imulb
out
rcrl
lcall
adc
sarl
pop
jb
inc
clc
mov
out
lret
popa
out
cmp
aad
ljmp
js
adc
js
sbb
mov
pop
clc
int
loop,pn
mov
adc
pop
ljmp
pop
sub
inc
pushf
jg
mov
adc
or
popf
push
frstor
les
push
loopne
add
xchg
aad
scas
sahf
xchg
pop
inc
and
jne
mov
cmc
daa
cmpb
fistl
shrl
cli
inc
int
pop
jae
mov
adc
mov
dec
fildl
rcrb
inc
pop
insl
lea
dec
inc
mov
add
push
enter
dec
mov
cmc
xchg
push
call
mov
pusha
inc
mov
jmp
insb
popf
jg
mov
ss
and
repz
roll
out
xlat
fwait
sbb
mov
jo
cmp
cltd
dec
add
pop
ficoml
lret
jne
aam
mov
sbb
and
repz
fldcw
mov
push
lret
aad
les
push
bound
dec
mov
xchg
pop
jle
imul
lods
xchg
add
fwait
std
xchg
aad
int
sub
cld
dec
std
ret
jmp
add
push
jecxz
xchg
inc
pop
pop
lods
pop
movsl
jne
fldenv
cmpsb
arpl
aad
mov
out
mov
loop
sbb
dec
rcll
fwait
arpl
mov
rcll
jge
sbb
fstps
jae
je
add
adc
imul
mov
lcall
dec
nop
sub
aas
loope
sti
js
fcoms
sbb
dec
es
dec
jnp
enter
adc
lods
mov
daa
aad
mov
push
inc
sub
push
add
inc
mov
mov
fildl
subb
jmp
xchg
loope
sub
lcall
xchg
push
ja
mov
jne
jbe
mov
xlat
out
xchg
lret
lahf
popf
mov
cld
lret
mov
call
cwtl
add
movsl
addr16
push
call
inc
aam
into
out
cs
scas
inc
cltd
rcrl
insl
and
shll
into
lock
dec
or
cmp
mov
mov
dec
lods
daa
pushf
fidivl
ret
sub
inc
movsl
pop
jle
lods
xor
out
pop
or
xlat
jnp
add
cmp
cmp
rorl
test
jnp
pop
sub
mov
mov
mov
cli
fneni(8087
cmp
inc
jp
insb
dec
pushf
sahf
comiss
adc
jns
sarl
imul
adc
and
push
in
loope
jl
lret
mov
dec
pop
inc
push
pop
rcr
add
push
jl
js
repnz
hlt
sub
std
sbb
push
push
cltd
sbbl
inc
pop
lods
xchg
idivb
mov
and
dec
cltd
lahf
outsb
xchg
fs
mov
or
ret
enter
push
pop
daa
and
and
rep
loop
jns
lahf
cmp
in
cmpsl
push
cwtl
shl
jg
test
add
cmp
or
test
mov
jae
mov
call
mov
fwait
aad
jbe
push
insl
call
je
or
push
push
cmp
decl
xorl
rcr
add
cmpsb
or
jns
popf
or
mov
push
les
stos
mov
add
push
aaa
dec
sbb
nop
sub
push
outsl
sti
rorl
je
xchg
xchg
jns
mov
pop
xchg
fsubs
cmp
rcrb
inc
lcall
loop
mov
loope
xchg
mov
fstpl
jb
ljmp
cmp
mov
jmp
xchg
lahf
push
bound
xchg
arpl
leave
adc
hlt
adc
rcl
add
inc
rolb
cli
inc
cmp
aam
xor
jp
add
sub
dec
sub
clc
add
push
rcl
mov
xchg
xchg
and
push
jmp
cmp
sub
xchg
lock
leave
jno
mov
or
addr16
jbe
adc
ret
push
jne
fistl
cs
adc
dec
mov
test
or
shll
data16
sub
jb
ret
sti
cmpsl
push
addr16
mov
lea
and
jnp
fsubp
movsl
adc
cmp
test
and
das
sbb
bound
add
jne
fistpl
mov
daa
add
xchg
cmovae
aad
in
outsl
mov
cmp
shl
push
push
and
idiv
out
push
ja
out
int
fwait
bnd
sti
sbb
xchg
mov
mov
dec
cmp
pusha
xchg
add
push
sbb
sbbb
lds
stos
in
add
mov
movsb
xor
jp
mov
mov
adc
push
dec
push
fwait
leave
adc
or
xor
sub
ret
scas
inc
jg
pop
xchg
adc
push
xor
inc
push
sub
repnz
or
mov
push
std
dec
xchg
pop
fcompl
xor
mov
insb
cltd
fisubl
mov
jo
sub
fisubs
roll
stos
pop
mov
pop
js
mov
outsb
jae
andb
cwtl
iret
jne
rcll
in
fs
mull
or
inc
push
gs
cmp
adc
mov
pop
jne
ror
dec
dec
cli
ret
popf
dec
aaa
insb
out
and
cmp
std
jl,pn
sub
ret
int3
mov
inc
jge
mov
ds
mov
lahf
mov
jg
popl
ljmp
push
cmp
add
ret
das
jbe
pusha
int3
stos
jg
mov
mul
and
std
xchg
xchg
cmpl
xchg
ret
push
pop
and
bswap
insl
scas
movsb
scas
or
popa
test
push
imul
lret
lea
mov
push
mov
mov
ret
inc
outsl
scas
dec
std
adc
jp
jns
test
push
cmc
cs
xchg
or
sub
leave
cmp
lcall
dec
xchg
or
xchg
rcll
bound
mov
mov
push
popa
sar
inc
inc
data16
ret
lcall
adc
mov
or
mov
sbb
loop
sub
shl
nop
push
inc
aam
inc
mov
push
lods
inc
fcoms
ljmp
loop
int
insb
into
xor
cmp
cs
jno
lea
mov
xor
je
cwtl
psubsb
ret
hlt
cmpsb
mov
gs
test
sub
fimuls
in
test
jmp
xor
stos
shr
jmp
push
push
imul
gs
popa
cmp
lock
and
lods
pop
adc
dec
or
test
sub
sub
and
cmp
rorl
pop
xchg
mov
pop
lcall
xchg
mov
rcr
xchg
ficompl
stc
xchg
jp
pop
sbb
adc
pop
loope
jno
add
add
xor
dec
push
out
inc
xor
mov
mov
pop
pop
or
xchg
nop
or
rolb
cmp
fwait
test
mov
add
lret
sti
aam
cltd
aam
cmp
mov
xor
testb
outsb
and
pop
push
xor
inc
push
adc
daa
lods
dec
xlat
test
clc
stos
pop
jp
test
cmp
dec
push
stos
loop
out
inc
clc
call
cmp
cmpsl
mov
popf
mov
fdivrs
adc
pop
lret
sbb
lods
cmp
jmp
ds
inc
cmp
lahf
aas
dec
arpl
dec
outsl
cmp
or
mov
in
into
dec
fimuls
imul
sbb
mov
loop
stc
in
or
push
jecxz
dec
mov
push
ljmp
loopne
out
add
std
cltd
insl
inc
je
mov
shll
jns
jb
outsl
xor
popf
mov
xor
push
bound
dec
lahf
cmp
push
inc
sbb
in
aas
add
add
lahf
add
and
test
fidivrs
sub
int3
xor
fwait
inc
mov
adc
jge
ret
or
stos
je
in
ja
add
sbb
je
adc
lods
inc
shrb
jp
clc
stc
sub
and
or
call
call
sub
inc
into
adc
out
xchg
stc
loope
iret
lock
push
xor
popf
out
mov
sbb
jne
stos
sbb
dec
nop
mov
lahf
push
adc
add
cmpsl
sahf
icebp
mov
mov
cli
mov
xchg
mov
or
ret
mov
scas
int
jmp
aaa
call
mov
sbb
lods
fnstcw
add
stc
pop
jecxz
cmp
ds
rol
pop
outsb
cmpsb
xlat
rcll
test
lahf
ret
cmp
mov
fadds
pop
fwait
sti
inc
outsb
pop
jmp
cli
outsl
addr16
shrl
inc
test
xorb
in
das
outsb
pop
push
mov
incb
addr16
cld
dec
and
push
or
repnz
shrl
mov
insl
mov
sub
repnz
in
in
mov
inc
xor
mov
test
shlb
mov
inc
inc
ja
sarl
lods
xor
test
mov
rcl
cmp
testb
sub
fsubl
int
mov
scas
int3
dec
dec
and
cmc
scas
sub
inc
arpl
cmc
mov
lahf
xchg
cmpsl
call
lret
ret
cmp
push
lea
mov
insl
dec
pop
dec
mov
sbb
jne
dec
testl
mov
push
dec
xchg
outsb
xchg
add
sbb
jmp
ja
mov
fsubp
aad
pop
jmp
push
push
dec
push
shlb
push
mov
fstps
movsb
inc
mov
movsb
mov
xchg
cli
mov
lahf
imul
bound
test
insl
pushf
cld
mov
dec
fcoms
jbe
lds
dec
pop
jg
sbb
cmpb
fwait
daa
xlat
pushf
ret
mov
cli
aad
pop
enter
mov
mov
mov
lcall
jne
jne
sbb
sub
in
lods
inc
enter
push
and
xor
cwtl
sbb
imul
test
pop
or
movsb
aaa
fistpll
xchg
mov
popf
add
xor
cmp
dec
dec
xlat
mov
or
sub
sar
test
push
inc
fidivrl
dec
xchg
mov
mov
aad
inc
imul
jp
mov
xor
xor
mov
or
sub
insl
mov
stos
cmp
pop
push
nop
inc
je
shll
cmp
and
icebp
andl
sbb
pop
mov
mul
push
repz
mov
popf
or
scas
pop
pop
lcall
test
sti
movnti
push
out
dec
mov
lea
shr
cld
arpl
jae
xchg
mov
push
sahf
add
jno
adc
cmp
mov
xor
cmpsl
into
iret
xchg
cmpsb
nop
fiadds
pop
test
mov
inc
xor
dec
mov
aaa
add
rcll
dec
and
pop
add
into
sahf
push
inc
insb
adc
fsubl
scas
push
gs
or
cmp
jno
push
sbb
jnp
stos
xchg
dec
adc
stos
decb
inc
adc
leave
mov
fisubs
push
jge
lahf
cmp
js
sub
into
in
in
or
xor
ret
push
jae
sbb
repnz
pop
inc
xchg
sbb
fxch
outsb
push
sub
xor
mov
imul
ret
or
mull
scas
into
aaa
sub
out
iret
add
inc
or
arpl
movsl
pop
sbb
dec
mov
les
or
jae
fistpl
les
daa
test
imul
cs
mov
int3
ror
push
test
xor
lret
xor
jno
imul
push
ljmp
out
int
sbb
jno
push
subb
xor
gs
call
push
xor
fmuls
mov
dec
test
jo
movsb
cmp
or
cwtl
dec
xchg
mov
mov
inc
jle
dec
enter
mov
mov
cmpsl
xchg
or
jl
popa
xchg
cmp
xchg
cmpb
and
and
lods
dec
adc
mov
mov
jnp
jns
rorb
mov
mov
mov
mov
jns
fmull
or
icebp
test
inc
jb
push
adc
sbb
addr16
adc
lret
ror
in
stos
int
shll
enter
pusha
ljmp
pop
xorb
mov
dec
aas
mov
xlat
dec
push
xchg
xor
push
ret
or
mov
add
pop
call
mov
stos
adc
xlat
lds
aad
push
cltd
call
aad
add
cmp
jge
xor
xchg
mov
and
shll
jmp
ret
push
test
vsubpd
dec
test
test
add
jns
stc
mov
or
push
add
cwtl
notb
xor
sbb
sbb
jbe
scas
push
fnstcw
lods
in
xor
std
jp
out
add
push
jp
pop
loop
sarb
or
and
jle
loope
push
mov
pop
and
insl
sub
push
fmul
mov
mov
sbb
cltd
icebp
push
out
add
pop
aad
pop
xor
cs
incl
adc
les
repz
rcrl
sub
rorb
mov
nop
adc
cli
ljmp
mov
adc
or
daa
jle
mov
aaa
lods
sbb
mov
inc
mov
inc
testb
movsl
pop
mov
pushl
mov
mov
test
cmc
jnp
ss
pop
push
addr16
inc
cltd
cmp
lock
cli
push
mov
test
inc
arpl
push
push
pop
add
push
push
mov
ss
push
shrb
jae
cli
insb
mov
add
mov
and
xlat
hlt
jle
lcall
jb
or
cs
adc
xchg
clc
jnp
adc
mov
dec
cltd
cmp
cmp
cmp
pushf
dec
icebp
std
dec
iret
mov
adc
or
movsb
jns
fisttps
repz
sbb
jnp
ljmp
jmp
fdivrl
adc
test
pop
cmp
mov
out
int3
addr16
xchg
push
mov
pop
cmp
in
int
scas
and
lret
les
xchg
dec
xchg
mov
jbe
outsb
sub
mov
jae
inc
add
loop
je
jns
pop
sub
and
stos
xor
jecxz
int
push
mov
divb
sti
adc
adc
or
pop
lcall
push
je
in
inc
popa
shr
pop
push
movsw
andl
lret
in
imul
jmp
divl
mov
xlat
decl
sbb
xchg
insl
fsubrs
mov
xchg
rep
into
sub
aas
mov
ror
mov
cmpsl
pop
loopne
cmp
jmp
cmp
jbe
lret
mov
mov
mov
lock
icebp
out
int3
iret
add
sbb
imul
inc
mov
cs
out
adc
pop
aad
dec
lods
testl
and
in
cs
ret
popf
ss
sub
cmpsb
pop
jne
into
jno
loopne
hlt
push
ss
jmpw
data16
js
stos
xchg
clc
daa
sub
jb
jge
sub
enter
int3
dec
mov
sub
pop
subl
pop
mov
mov
in
imul
cmp
dec
inc
ss
fisubrl
push
and
test
sub
mov
test
out
addr16
sub
and
lea
push
mov
mov
mov
in
lret
sarl
bound
xor
arpl
push
shlb
idivb
imull
mov
jnp
clc
rcll
loop
outsl
sarl
sti
ds
and
push
movsb
sub
out
inc
adc
xlat
jmp
dec
aam
sub
in
jo
dec
xchg
jbe
outsl
negb
nop
lods
cmp
pop
dec
stos
jno
jl
xchg
lds
sub
push
stc
dec
cmpsb
pop
add
lock
pop
inc
repnz
loopne
push
stos
inc
das
ret
lahf
negl
and
mov
mov
rcl
mov
cmc
xor
jne
cmpb
add
orb
repz
xchg
popf
jae
xchg
sub
xchg
jle
jp
add
inc
mov
lcall
xchg
adc
jae
cmc
mov
fcmovu
dec
xchg
in
test
or
mov
sub
or
dec
add
cmp
mov
pop
push
mov
and
xchg
inc
mov
lret
dec
mov
lock
push
loope
out
movsb
cmp
mov
dec
lahf
adc
notl
aad
into
pop
fcomps
cmovbe
js
icebp
mov
cmp
push
das
jg
jae
aas
push
adc
sahf
adc
add
jle
fdiv
out
fimuls
inc
sahf
xor
mov
mov
data16
mov
push
popa
push
adc
shrl
dec
dec
mov
push
in
cmp
jnp
es
ja
cmc
imul
sbb
jmp
scas
int
and
iret
jmp
mov
out
jo
pushf
pop
test
loopne
pop
lods
and
xchg
or
jb
xchg
mov
rol
xchg
push
in
stc
movsl
mov
repnz
fistps
sub
jno
jne
out
cltd
jno
pop
pop
sub
sub
inc
or
sbb
aas
sbb
xchg
lret
mov
stos
jge
sub
jge
mov
outsb
dec
inc
inc
xchg
jo
mov
sub
sub
xchg
sub
and
jne
fwait
mov
adc
add
xor
rcrl
mov
pop
cmpsb
push
mov
push
sbb
adc
lods
push
scas
cld
fnsave
dec
jge
data16
fidivl
test
adc
ja
stos
lret
xchg
call
mov
arpl
lods
setg
subb
push
xor
xchg
leave
fildll
and
mov
add
sahf
jne
mov
bound
lahf
jp
mov
je
rolb
sub
ljmp
fdivrl
sub
xor
sti
notl
jmp
xorb
jp
ud0
mov
shl
clc
mov
pusha
scas
lock
mov
add
lock
leave
in
insl
les
mov
or
out
xor
mov
shrb
sbb
clc
popf
fistps
clc
pop
mov
rcll
add
lcall
jg
pop
lahf
lods
or
mov
or
out
push
inc
aam
xchg
jle
sbb
rcll
jb
jbe
fcos
xchg
mov
inc
out
mov
mov
pushf
push
leave
sbb
cmp
sbb
mov
cltd
adc
ud1
pop
push
mov
dec
jle
cmp
std
dec
or
lea
stos
mov
push
das
aam
es
jns
in
dec
jmp
xor
xchg
mov
adc
push
or
std
negb
shrb
and
push
fisubrl
ud0
lcall
push
mov
dec
insb
push
stos
jge
jbe
insl
int
jl
in
gs
shll
gs
jmp
sbbb
popl
lahf
push
add
movsl
adc
adc
fimuls
imul
mov
out
out
and
mov
mov
jo
fcompl
pop
sahf
shrl
mov
mov
fdivl
imul
mov
and
into
adc
inc
sub
lahf
pop
pop
shll
push
dec
dec
fs
sub
cmovb
push
fmuls
clc
jmp
mov
repnz
insl
idiv
outsl
inc
ret
or
out
dec
fstps
std
idivl
xor
cltd
mov
jne
mov
and
cli
add
mov
leave
adc
and
cmp
imul
les
cli
xor
xchg
pmuludq
ret
sbb
add
das
push
dec
push
dec
ss
and
movsb
stos
push
leave
xlat
xchg
lcall
nop
movsb
bound
dec
cmpl
rolb
test
mov
cmp
pop
add
mov
fbstp
std
iret
add
loop
and
inc
or
xchg
std
cmp
sarl
in
aas
cmp
sbb
into
adc
std
cs
in
es
xor
insb
dec
adc
adc
sub
into
jae
inc
movl
insb
sbb
push
sarb
shrb
dec
jb
sub
push
pushl
hlt
ss
loop
sbb
data16
loopne
repz
adc
jns
dec
ja
dec
fsubs
loope
sub
push
jno
fldcw
jae
cmp
and
mov
in
popl
adc
pop
cmpsl
sbb
fdivrl
add
adc
addr16
xchg
adc
cs
push
mov
insl
lea
outsl
js
mov
lds
mov
into
xor
es
xor
xor
call
inc
cmp
mov
loop
outsb
sub
pop
into
scas
sahf
imul
fiaddl
jo
sti
mov
xor
dec
mov
xchg
sarl
insl
push
pop
neg
aam
in
out
jg
rep
jmp
scas
scas
cmpb
cwtl
or
pop
iret
push
popf
lods
lds
mov
pop
out
dec
jae
insl
movsl
xor
push
lock
jle
loopne
push
inc
lcall
jo
lods
and
cli
push
cmp
out
lahf
jmp
orb
sub
pop
icebp
xchg
cmp
cmp
and
sbb
mov
outsl
fiadds
jecxz
in
mov
shl
xchg
roll
fnstsw
mov
mov
or
inc
rolb
cmc
jmp
sti
es
mov
pop
dec
mulb
insb
mov
push
in
outsb
loopne
add
in
in
inc
add
pop
push
sahf
adc
je
adc
test
arpl
scas
mov
pusha
ficomps
cwtl
lcall
dec
lcall
sahf
push
cmp
mov
cmp
or
jl
cmp
mov
lret
add
jmp
cmpsl
daa
mov
fs
shlb
repz
jg
push
sbb
xor
cmp
cmpsb
xchg
cli
cmpl
lds
push
cmp
clc
notb
outsl
js
xor
icebp
repz
xchg
sub
add
dec
aaa
cmc
das
jl
in
andl
aad
je
es
push
xchg
cltd
push
xor
dec
inc
xor
xor
mov
popa
jnp
or
inc
enter
mov
rclb
fbld
daa
ljmp
xor
shlb
and
pop
fsub
stc
mov
mov
xchg
push
xor
jae
shrl
int3
cltd
sub
out
and
jnp
mov
dec
shl
in
loop
add
xor
gs
jno
cmpsb
shll
insl
stos
xor
loop
sbbl
inc
xchg
out
loopne
fisubs
in
push
jle
test
in
add
jl
push
cmp
lret
inc
mov
mov
js
mov
jno
lea
fwait
push
loope
sarb
dec
sub
xor
in
movsl
sbb
lcall
dec
imul
aam
gs
ss
ret
mov
dec
cmpsb
xorb
das
dec
ret
daa
lods
scas
inc
or
cmp
out
scas
jno
insl
leave
mov
mov
mov
imul
movsl
loope
sbb
jns
imul
es
pop
pop
jnp
mov
daa
cmpsl
mov
push
jge
popf
repnz
das
mov
imul
add
adc
xor
mov
mov
fcmovnu
lahf
test
jae
jmp
jecxz
lahf
call
outsb
stos
shlb
xchg
mov
cmp
mov
and
int
push
push
inc
aaa
xor
or
pusha
sbb
in
and
dec
xor
lods
pushl
arpl
adc
pop
lcall
das
sub
pop
fldenv
ret
lcall
adc
cmpsb
and
mov
sahf
rorl
lock
dec
xor
mov
pushf
shlb
and
jns
inc
icebp
xchg
xchg
mov
push
mov
jmp
xor
inc
sbb
sub
fldl
dec
ret
icebp
add
xchg
je
sub
lods
pop
push
rorl
lahf
out
xchg
xchg
aam
sbb
test
cs
dec
fimuls
lock
cmp
mov
bound
das
test
scas
cmp
inc
fcoml
stos
and
test
mov
les
or
dec
pop
mov
xor
lcall
cmp
add
cli
ret
movsb
call
and
hlt
lods
sub
jbe
iret
xor
repnz
out
mov
dec
movsl
xor
sub
fmull
dec
pop
jmp
ja
rorl
test
repnz
int
jne
push
xor
inc
movsb
call
sub
pushf
repz
repnz
jae
add
ja
adc
gs
sbb
pop
xor
add
aas
sub
cmp
xchg
and
cmc
in
test
mov
inc
inc
add
adc
xchg
add
xchg
xorb
test
das
dec
mov
inc
jae
lock
jp
out
mov
popa
daa
or
popa
xchg
xor
aaa
lds
pop
mov
rclb
xchg
inc
orb
aas
pop
outsb
imul
and
mov
cmpsl
pop
dec
fstl
dec
jle
dec
jmp
adc
push
pop
jp
jne
aaa
xchg
inc
dec
in
mov
inc
loope
fmul
das
and
sbbb
cli
sub
enter
pop
pop
or
movsb
cmpsl
adc
dec
mov
insb
lods
push
mov
outsl
jge
pop
lcall
lods
and
pop
stos
fstps
xor
sbb
add
push
mov
sub
or
sbb
or
ficompl
cmpsb
jns
add
sbb
dec
mov
outsl
rcr
les
stc
fs
sub
push
in
sub
or
adc
mov
adc
fcompl
inc
xchg
dec
inc
adc
add
xor
xor
and
push
cmc
or
ret
es
sbb
cmp
mov
js
or
mov
or
pop
sbbl
xlat
add
sub
nop
sti
xlat
dec
xchg
fwait
in
call
rorl
test
jnp
aaa
mov
out
jg
imul
je
xchg
pop
in
push
push
push
sbb
movsb
call
sbb
in
adc
nopl
or
mov
push
add
cwtl
dec
or
cmp
pop
lret
push
lods
enter
insl
insb
aam
inc
sbb
cli
sti
mov
les
sbb
jo
push
sbb
add
push
push
adc
ja
lahf
pop
jmp
push
jnp
mov
mov
add
pop
int
dec
mov
hlt
sub
les
cs
xchg
inc
and
call
lods
sti
mov
cld
and
dec
or
lock
mov
sub
pusha
jnp
orl
sub
outsl
push
cmp
scas
nop
pop
aaa
inc
lahf
movl
mov
xchg
push
std
es
sarl
mov
or
xchg
fidivrl
push
int3
or
or
movsl
inc
add
mov
mov
addr16
xchg
xchg
jae
or
mov
cltd
cld
pop
rcr
into
rcrb
adc
inc
jmp
jl
inc
test
test
ret
std
jne
sub
sub
cltd
mov
pop
adc
das
jae
pop
cmp
xor
out
arpl
imul
cmp
fidivs
enter
je
cmp
fisubs
fisttps
push
rcr
xchg
icebp
adc
mov
subb
jnp
sbb
loop
xchg
cmp
cmp
push
mov
mov
dec
push
stos
xor
push
cmc
or
mov
imul
mov
jle
enter
sti
lods
or
mov
dec
test
mov
dec
inc
cmp
mov
aas
adc
stc
or
sub
cmc
mov
aas
pop
int3
lahf
mov
ss
mov
and
data16
lods
in
dec
insl
xor
pop
jnp
shlb
sub
mov
adc
inc
push
xor
loopne
aas
out
out
cmp
xor
test
jnp
sub
push
movsbl
adc
sub
cmpsl
mov
test
pop
xchg
out
inc
add
test
sarb
lea
dec
cmp
out
xchg
mov
gs
sbb
aam
movsb
or
shlb
aad
addb
test
jmp
lods
pop
dec
add
mov
adc
and
cli
scas
sahf
adc
lds
cwtl
bswap
push
and
xor
or
pop
ds
jp
xor
outsl
rorb
push
jg
sub
ja
mov
cmpsb
stos
out
jmp
push
repnz
cmc
mov
mov
cmpsb
mov
movsb
mov
dec
imul
dec
xchg
dec
push
popa
pop
push
notb
pusha
jecxz
mov
push
pop
push
cld
hlt
rclb
je
es
dec
adc
int
xor
int
daa
loopne
cmp
cmp
or
sbb
adc
stc
jecxz
cmp
rorl
sbb
push
test
dec
adc
movsb
add
ror
dec
sti
ss
repz
push
pop
add
xchg
scas
ss
mov
sbb
lret
mov
aad
push
add
and
ss
inc
adc
lods
dec
lret
jnp
sahf
pop
out
jmp
inc
or
js
into
sub
cli
pusha
inc
mov
xchg
sub
xor
iret
pop
xor
push
bound
inc
pop
mov
pop
lods
rorb
aam
in
cmpsl
subb
inc
sti
shrl
test
pop
add
rcll
xor
pop
add
fnstenv
imul
fisubs
shll
aad
aad
fsts
xchg
adc
outsl
ja
in
mov
mov
or
and
je
pop
adcl
lea
push
and
loop
or
push
fdivrl
jmp
mov
or
xchg
cmp
movsb
pop
movsb
ss
xor
dec
mov
jnp
adc
lret
jo
jns
iret
xor
inc
or
nop
or
cmc
jmp
cmp
inc
ret
dec
xor
mov
imul
gs
orb
jg
sbb
out
fdivl
shl
xchg
pop
lods
leave
mov
adc
jb
mov
jne
sarl
adc
aaa
mov
pop
pop
push
int3
mov
xchg
xchg
jle
sub
les
xchg
scas
xor
push
jnp
jecxz
test
xor
adc
in
mov
or
cwtl
loope
mov
or
test
push
jne
gs
inc
xlat
stos
in
stos
fadds
jl
sbb
jmp
dec
je
pop
es
jge
dec
add
push
mov
xlat
fcomps
sub
xor
or
jne
rorl
push
into
xchg
shrl
mov
scas
xor
cmpb
sub
mov
in
aas
dec
fsub
sub
push
sub
lcall
rcll
cmp
loopne
and
xchg
lcall
cmp
rorb
sahf
mov
out
cltd
shlb
inc
stos
xchg
fisubs
lret
repnz
outsb
mov
inc
pop
or
add
stos
cmp
addb
cmp
enter
les
add
xchg
pop
gs
xor
push
push
push
pop
iret
jnp
outsb
push
pop
push
loopne
cmp
xorl
and
sub
stc
or
cli
dec
leave
inc
or
js
lcall
orb
outsl
jne
push
pop
lock
gs
jl
mov
push
scas
xlat
inc
adc
xor
push
imul
add
xor
js
jno
mov
daa
clc
loope
aad
and
scas
ror
xor
mov
push
data16
mov
data16
test
les
xchg
imul
or
dec
cmp
scas
test
mov
push
cli
pop
idivb
fsts
mov
repnz
out
push
jmp
xchg
add
imul
nop
gs
mov
out
leave
aam
mull
inc
xchg
movsb
mov
push
mov
mov
or
mov
fs
cmpl
icebp
seto
dec
pop
stos
xchg
xchg
mov
lock
cmpsb
jns
ss
push
mov
adc
imul
imul
roll
bound
pop
mov
jb
arpl
scas
xor
mov
sub
xchg
roll
cli
dec
sub
and
adc
dec
movl
jmp
in
push
js
push
mov
rolb
jo
push
andb
or
and
mov
imul
push
dec
jl
sbb
scas
testb
xchg
push
lret
pop
setl
add
clc
push
jg
sub
das
rclb
lahf
mov
inc
mov
ficoms
pop
gs
xchg
out
sbbb
inc
xchg
jns
jle
push
xor
jmp
xor
mov
push
test
mov
jo
push
in
mov
add
jle
fadd
pop
jns
dec
sbb
add
cltd
gs
das
sbb
in
ds
jnp
std
pop
jb
xchg
sti
out
lods
pop
pop
fsub
sti
jge
and
pop
and
imull
sbb
rorb
sub
mov
add
ds
adc
inc
pop
ja
in
dec
jecxz
call
jmp
or
gs
add
sbbb
push
push
pop
inc
and
adc
in
push
push
enter
xlat
push
jge
xor
xchg
sub
nop
push
sbb
jle
into
cwtl
sbb
mov
mov
sbb
add
lahf
rcrl
or
jp
adc
js
jae
mov
mov
call
rcl
insl
sub
sbb
mov
lods
cld
xlat
and
mov
loop
xor
sub
xacquire
dec
mov
stc
shll
cmp
or
or
mov
cmc
addb
push
mov
shrl
stc
jg
inc
lret
testb
xchg
sbb
cmp
cmp
xchg
inc
out
mov
mul
movsl
ret
fisubrl
pop
lcall
sbb
int3
lcall
test
xor
out
imulb
sti
sub
jae
sbb
jp
jl
test
add
cld
aam
mov
push
and
insb
xchg
mov
testb
and
pop
cmc
pop
mov
fidivl
push
mov
in
cmp
pop
lods
sbb
xchg
sub
notb
mov
xchg
sbb
add
push
jg
xchg
jmp
dec
arpl
adcl
cltd
aad
roll
or
adc
stos
jb
scas
jo
stos
jae
mov
rcrb
adc
sarl
sub
cmp
lcall
shrb
pop
adc
dec
add
mov
out
xchg
int
push
mov
add
mov
mov
sub
jbe
enter
mov
jecxz
xchg
pop
cltd
add
fisttps
jp
mov
jmp
cmp
jge
jne
push
lahf
inc
in
addr16
ja
jmp
push
loope
cld
fmuls
and
test
cmp
xchg
sbb
std
xchg
setp
jo
fnsave
mov
mov
mov
adc
dec
push
xor
ss
lret
dec
xchg
mov
inc
xor
pop
ret
push
xor
xchg
shlb
inc
or
int
addr16
aad
imul
int
bound
or
pop
cli
in
xor
xchg
cwtl
push
fistpl
add
and
lcall
leave
jne
movsb
inc
pop
dec
sbb
adc
loopne
and
cmp
or
jp
movsl
pop
mov
arpl
xor
cwtl
cmp
mov
or
sbb
fbstp
dec
stos
clc
lea
and
pop
outsb
int
int3
mov
lock
ret
movsl
lds
pop
int
lock
push
mov
ja
push
cltd
js
mov
pop
out
imul
xchg
icebp
adc
fsubr
decb
test
inc
repz
pop
lods
or
in
dec
ret
lock
cmp
sbb
mov
push
mov
inc
int3
rcrl
add
rorb
mov
jno
sub
addr16
mov
mov
push
mov
or
xor
mov
inc
jbe
insl
inc
xchg
aaa
stos
rcr
pusha
jecxz
data16
cmpsl
iret
imul
roll
aam
sbb
or
adc
cli
loop
aad
jle
test
dec
inc
jmp
int3
aad
loope
out
stos
hlt
sbb
rcll
xchg
in
lret
jb
sub
outsl
dec
mov
in
pop
test
in
mov
jno
add
xchg
dec
sub
pop
rolb
jo
es
inc
ss
pop
imul
cmc
les
ljmp
adc
jge
mov
pop
sub
loop
pop
jno
xor
fwait
int3
dec
rcr
mov
mov
jecxz
pop
add
lds
inc
dec
inc
pop
lods
std
nop
dec
jbe
stos
stc
in
loope,pt
lods
xchg
out
out
ljmp
cmp
shr
cmp
enter
dec
lock
jno
xchg
rcl
xchg
test
adcl
mov
ljmp
sub
xchg
cltd
icebp
pop
pop
iret
adc
and
mov
pop
jns
mov
cld
push
fidivrs
aas
notb
mov
sub
push
xor
jp
jno
int3
cmp
mov
in
stc
aam
fbstp
aas
push
cvtdq2ps
lahf
add
xor
or
cltd
cmp
and
add
cmp
mov
repz
stos
push
ret
lret
out
daa
sahf
lods
mov
cmp
jb
pop
subl
lret
sub
fs
pop
push
sbb
je
dec
in
nop
dec
imul
xor
lahf
sbb
push
pop
cmp
and
and
and
rcl
sub
shrb
fwait
and
fistl
mov
push
push
adc
cld
movsb
lcall
je
lds
dec
or
nop
int
adc
stos
loop
xor
fstpl
insb
mov
dec
flds
ja
xor
sbb
cltd
dec
test
sub
dec
cld
cmp
push
push
and
out
std
push
clc
xor
sbb
shl
mov
lahf
jl
insl
bound
enter
lcall
lods
loop
jnp
mov
sub
imul
insl
and
mov
movsl
or
ret
xlat
inc
mov
mov
scas
mov
out
imul
aaa
jno
fsubl
jb
in
xor
shrb
shrb
mov
mov
scas
pop
cld
push
outsb
div
pusha
pop
sbb
pop
adc
jae
ja
mov
cltd
inc
ret
dec
adc
scas
inc
jne
daa
icebp
shr
mov
mov
jp
je
insl
cli
rclb
add
push
sarl
mov
sub
xchg
loop
out
ret
mov
es
mov
or
or
adc
popf
popa
mov
inc
daa
xchg
dec
mov
mov
fisubrs
in
cmp
or
adc
imull
pop
test
push
xlat
inc
pop
rcl
push
in
fnstsw
mov
sub
subl
lods
push
cmp
loopne
es
ljmp
imul
dec
aas
push
jmp
xchg
lds
dec
or
push
lahf
mov
iret
sti
imulb
sub
lods
add
adc
mov
and
lods
dec
mov
xlat
jmp
adc
push
arpl
lock
outsl
mov
int
or
cmp
lcall
sbb
cli
sub
sub
sbb
pop
or
decb
test
fcompl
test
push
inc
mov
jae
pop
push
push
aaa
movb
lret
jl
xor
or
mov
mov
xor
or
iret
mov
mov
stos
jg
sbb
jp
jge
mov
imul
cs
pusha
adc
lods
sti
fstpl
cmp
addr16
mov
das
jg
pop
imulb
dec
add
scas
and
aas
cld
xor
adc
inc
inc
jge
addb
push
xor
pop
lcall
xchg
sub
loopne
mov
mov
cmp
insb
in
mov
push
and
xlat
sbb
test
arpl
out
mov
mov
movsl
adc
movb
push
out
jae
dec
js
fwait
xor
fdivs
jp
inc
mov
jns
or
int
push
jg
mov
xchg
fwait
es
adc
push
push
adc
clc
and
sbb
and
std
in
test
out
repz
jle
int
scas
addl
rclb
sbb
test
mov
sahf
outsb
pop
insl
adc
xor
int3
dec
je
dec
xor
shlb
mov
fdivp
aaa
xchg
adcb
movsb
ret
cmpsl
pop
xor
sub
mov
pop
jae
ja
dec
jno
xor
adc
mov
adc
jns
mov
adc
adc
iret
aad
mov
cmpsb
mov
jg
rcll
add
mov
mov
or
sahf
int3
iret
xor
out
movsl
mov
jp
je
jecxz
pop
fsubp
mov
loope
xlat
sarb
and
aad
dec
lods
fs
cmpsl
inc
cmp
sbb
popa
mov
mov
sbb
shl
and
pop
xchg
mov
jle
xchg
pop
xor
fdivl
test
mov
pop
adc
mov
sbb
adc
daa
movsl
xor
pop
lea
scas
adc
iret
or
inc
inc
mov
inc
js
mov
movsb
push
xor
dec
sbb
scas
dec
and
cmp
sbb
mov
jae
and
imul
xchg
or
xchg
mov
dec
pop
jnp
xchg
adc
sti
hlt
repnz
call
pop
faddl
sbb
pop
lret
push
and
arpl
lods
add
mov
sub
pop
push
faddl
mov
sub
shl
adc
push
add
aad
addr16
pop
pushf
and
xchg
cmp
mov
fmul
mov
mov
int3
pop
xor
xchg
popa
das
jmp
sub
fldl
aas
popf
sbb
test
cltd
pusha
add
loope
cli
pop
jbe
aam
fdivrs
mov
data16
jle
jg
lcall
push
push
sub
pushf
mov
xlat
cmp
jl
add
inc
adc
fsts
mov
mov
nop
cmpb
push
aas
jae
dec
add
iret
jmp
fs
sub
and
and
inc
pop
push
jnp
call
sub
xlat
mov
movsb
jge
or
adc
ljmp
sub
push
into
scas
lods
or
push
jno
shrl
arpl
push
jg
xchg
test
jb
sarb
test
jecxz
xchg
rorb
cmpsl
push
xchg
sub
mov
add
rorl
test
jp
ret
call
icebp
cltd
in
adcb
je
movsb
data16
mov
sbb
pop
je
jno
cli
inc
push
push
out
test
push
test
sub
int3
fstpt
inc
inc
out
and
rcrb
sarl
icebp
jne
out
imul
mov
sbb
pusha
mov
or
scas
in
dec
decl
aad
mov
idivl
xor
sbb
movsb
cmc
xor
mov
scas
xchg
mov
cmc
inc
xchg
stc
adc
jle
mov
pop
adc
imul
repz
push
movb
push
out
test
iret
mov
pop
mov
xor
jmp
mov
mov
test
xchg
pusha
xor
mov
inc
aam
loop
mov
adc
xchg
mov
sub
or
xchg
push
jecxz
sbb
lret
fisttpl
pushf
push
push
dec
dec
xchg
xchg
dec
inc
jle
cld
andb
cltd
or
push
stc
pop
int
add
stc
rolb
adc
sub
jecxz
sbb
mov
cld
es
lods
dec
jns
aaa
dec
push
pop
fnstenv
xor
add
mulb
mov
sahf
mov
mov
psraw
mov
insb
xchg
test
fwait
pop
pop
sbb
pop
cmc
rorb
bound
adc
push
cltd
xchg
jl
push
es
xchg
pop
lcall
aad
sbb
xor
fs
sub
imulb
ficoml
fstps
inc
add
shl
lcall
push
adc
dec
mov
arpl
push
lcall
cli
mov
fsubl
into
sbb
sbb
push
dec
adcl
in
pop
cwtl
add
sub
cli
inc
sbb
xlat
sub
jp
outsl
sahf
add
sub
sbb
pushf
aaa
cmp
in
inc
jno
cmp
push
int
imull
mov
shlb
lods
mov
in
sub
cmpsl
mov
into
cmp
iret
outsl
in
mov
mov
imul
fisttps
and
fcmovnbe
ss
xor
ljmp
push
add
lods
mov
idivl
add
repnz
inc
mov
dec
mov
pop
push
jle
pop
adc
cltd
mov
xchg
sbb
imul
inc
sbb
fcmovne
add
int
or
and
xor
lods
shlb
jmp
pop
pop
adc
js
dec
inc
mov
jb
icebp
adcl
loopne
stc
int
mov
nop
sub
and
xor
jge
xlat
mov
fstl
or
sub
fld
mov
push
fdiv
lcall
movsb
mov
sub
dec
imul
ds
mov
imul
repnz
imul
sti
les
insb
icebp
stos
les
jns
jo,pn
insl
outsl
stos
jp
fwait
stos
hlt
pop
inc
loopne
je
sahf
push
inc
xchg
imul
dec
sbbb
add
movsl
mov
xchg
adc
fldl
int
adc
shrb
sub
mov
shrl
out
aaa
pop
adc
and
xchg
xor
mov
neg
adcl
arpl
lods
outsl
cltd
pop
dec
fmuls
jle
ficoml
rolb
pop
int3
fisttpl
incl
inc
pop
inc
jp
mov
pop
ss
mov
sub
inc
aas
fidivl
mov
mul
fadd
add
sbb
jmp
scas
sub
push
inc
test
push
jae
xor
gs
out
gs
or
cmp
xor
mov
loopne
xchg
adc
hlt
inc
dec
sbb
scas
xchg
mov
sub
dec
cld
or
sarl
xchg
shrl
stc
test
test
sub
fwait
push
inc
xchg
jae
orl
stc
mov
push
push
jns
mov
out
or
pop
push
sbb
mov
icebp
js
icebp
addr16
mov
push
pop
repnz
notl
stc
mov
push
sub
jg
push
std
lret
fs
pop
or
fucomi
in
mov
mov
loop
push
cmp
ljmp
stos
icebp
xchg
push
incl
movsl
cltd
cmc
sub
lea
roll
or
add
mov
in
xor
push
jmp
pop
lods
repz
cmp
jnp
pop
push
int
fildl
jnp
xor
cli
notb
insl
mov
icebp
pushf
cmp
xchg
fdiv
or
dec
cmpsb
or
subb
movsb
mov
outsl
xor
adc
lahf
lret
test
roll
xor
cmp
lcall
dec
outsl
or
in
hlt
popa
lods
xchg
lret
dec
sub
movsb
lret
sub
push
inc
or
or
mov
pusha
inc
push
fnstenv
stos
xchg
pop
idivl
push
repnz
pop
cld
outsb
aam
xchg
adc
inc
or
incl
fildll
cmc
ficoms
xchg
sbb
push
in
addr16
mov
test
jbe
stos
dec
xor
adc
subb
iret
xchg
or
stc
jg
xor
out
cmp
jno
in
sbb
shrb
pushf
out
cmp
inc
repz
pop
adc
pop
addl
and
adc
fisttps
bound
sti
mov
sarb
fdivl
ret
insb
dec
and
mov
cmc
stos
add
inc
loop
int
cltd
mov
ds
aas
out
orb
xor
adc
sub
fisttpll
adc
sar
add
repz
xchg
iret
popa
pusha
xchg
in
arpl
fists
bound
mov
repnz
out
mov
cmpsb
or
dec
dec
shll
sbb
adc
loopne
xor
aam
cmp
sub
mov
push
sbb
xor
outsl
or
xchg
iret
scas
dec
adc
hlt
sub
in
stc
xchg
je
sbb
inc
pop
or
mov
pushf
mov
fdivrl
pop
ds
jae
mov
out
jno
cmpsl
insl
bswap
pop
pop
test
jb
fs
jns
push
xchg
inc
pushf
mov
ljmp
jmp
sahf
adc
daa
in
in
inc
mov
mov
sbb
push
mov
stos
add
stc
jo
data16
insb
or
xchg
push
adc
sub
rcl
mov
xchg
pop
adc
and
repnz
shll
and
cmp
scas
dec
mov
fwait
add
adc
cmpsl
push
mov
jnp
das
adc
popa
adc
add
fdivp
mov
ffreep
sbb
repz
jno
hlt
icebp
sub
inc
fildl
scas
pop
xchg
pop
pop
addl
inc
addr16
insl
hlt
inc
xor
test
shrb
clc
xchg
lcall
fistl
loopne
mov
out
out
iret
movsb
jge
aam
jmp
adc
daa
test
sub
and
call
xlat
jb
lods
dec
and
out
inc
pop
sbb
sarl
push
inc
push
inc
push
jns
andb
jns
jle
cmpsb
sub
fldenv
imul
dec
inc
bound
adc
hlt
scas
ljmp
addr16
insb
sub
mov
or
jg
in
mov
addb
add
js
dec
enter
jns
mov
sarl
pop
mov
mov
sbb
iret
int3
mov
es
clc
mov
repz
sub
lahf
mov
or
imul
aaa
and
inc
cmp
push
out
cmp
test
clc
stc
pushf
int3
out
mov
clc
repnz
mov
mov
inc
push
jmp
or
mov
lods
dec
movsl
cmpl
inc
shr
jecxz
hlt
lret
in
idivb
mov
or
mov
cmp
jmp
dec
dec
pop
sbb
cmpsb
adc
aad
xchg
inc
scas
jns
push
testb
loope
push
push
shrl
outsb
sahf
cmc
sbb
mov
loopne
cli
cwtl
dec
jb
mov
shlb
mov
jb
mov
fwait
xchg
push
push
addb
xor
push
stos
stos
mov
jnp
jge
pop
subl
push
push
or
or
out
mov
fdivr
lock
imul
jb
daa
jp
pushf
pop
mov
pushfw
sahf
xchg
std
cwtl
fnstsw
imul
js
sti
push
iret
into
cmpsb
dec
mov
inc
imul
mov
repnz
in
pop
add
or
adcb
loopne
dec
pop
adc
arpl
call
push
mov
xlat
out
push
imul
aam
arpl
adc
lcall
pop
and
xchg
les
in
aaa
sub
lcall
and
mov
add
or
add
sbb
xchg
icebp
push
clc
mov
inc
das
fs
stos
pop
pop
sbb
nop
or
mov
lcall
leave
mov
pop
nop
sub
loope
cmpsb
xchg
sub
outsl
add
xor
aaa
gs
adc
lods
jg
imul
add
mov
pop
and
pop
sub
jo
test
mov
daa
mov
insl
lret
imul
into
ds
xchg
sbb
add
mov
cmpsl
inc
pop
sbb
iret
pop
ja
je
jbe
mov
loop
jno
jg
and
xor
in
mov
push
imul
aas
sub
inc
hlt
popa
out
scas
pop
pop
xchg
scas
jg
mov
or
pop
or
jmp
pop
je
or
out
icebp
inc
dec
clc
jle
sub
mov
sub
repnz
dec
or
outsb
mov
adc
xor
scas
dec
mov
ja
xor
pushf
cmc
pusha
and
out
lcall
pop
add
mov
in
push
mov
mov
popa
xchg
mov
xchg
inc
mov
pop
pushf
es
rclb
test
sub
push
call
cmpsb
or
jns
scas
cmp
insl
sti
xrelease
push
xchg
aam
out
push
xchg
adc
or
fwait
ja
inc
dec
xchg
mov
jnp
lret
pop
inc
adc
and
jbe
daa
rcr
mov
cli
imul
sar
enter
lcall
jmp
imul
out
push
mov
es
fstps
mov
push
fldt
pushf
push
das
inc
aaa
dec
sbb
push
jo
mov
hlt
cmp
stos
enter
cli
pusha
and
mov
cwtl
mov
scas
xor
sbb
inc
stos
mov
mov
aam
shlb
jecxz
mov
fwait
out
in
test
lcall
bound
pop
xor
xchg
icebp
cmpsb
push
adc
push
pop
ljmp
add
lods
int3
adc
sbb
mov
inc
push
cmpl
push
xchg
cmp
cwtl
dec
push
arpl
in
mov
cmp
andb
jecxz
pop
xor
into
jo
pop
mov
mov
fildl
rcl
bnd
and
aas
enter
fcom
loope
mov
in
jmp
mov
inc
scas
push
inc
cmp
out
pop
push
in
int
jae
pusha
sarl
into
sti
cmp
lahf
in
lret
cmp
in
jnp
mov
mov
sti
mov
insb
out
fstl
pop
hlt
mov
lcall
or
mov
xor
divb
push
ficomps
add
loopne
adc
lahf
mov
xchg
xor
fsqrt
ds
jecxz
lock
pop
or
int
mov
lahf
adc
mov
xchg
fsubrs
or
and
dec
sbb
mov
loopne
fsubs
jmp
notl
pop
mov
xchg
mov
fs
sub
jle
sahf
jle
into
add
push
add
mov
jbe
test
mov
cmp
ret
pop
dec
jg
fisubs
mov
mov
pop
daa
scas
mov
or
scas
push
sbb
pop
in
fsub
je
xchg
cmpsl
xchg
lods
cmp
sub
repnz
push
sub
add
push
mov
mov
pop
mov
push
cmp
xor
fisttps
mov
cmp
mov
push
push
push
in
sbb
mov
mov
in
cmp
mov
mov
xorps
pusha
pop
mov
push
and
ret
inc
adc
jecxz
ja
fistl
push
js
into
cmp
and
loop
js
jne
mov
mov
jb
es
inc
jne
daa
cmp
jg
dec
mov
pop
sahf
or
fdivrp
es
sub
xor
dec
movsl
fs
stos
jo
call
addl
sbb
insl
or
sbb
cmp
out
and
mov
and
pusha
outsb
mov
pop
jae
aad
jge
inc
sub
xor
and
inc
or
out
xor
or
inc
into
xchg
fisubl
mov
jmp
arpl
add
stos
jns
push
and
divb
inc
hlt
or
xchg
ret
mov
jp
pop
cltd
mov
je
lret
addb
mov
pop
jge
stos
ss
mov
sub
and
imul
pop
jo
out
imul
sub
pop
adc
repnz
adc
data16
jg
inc
out
xchg
jns,pt
pop
and
in
push
sbb
sub
fwait
jbe
and
bndldx
dec
repz
lods
mov
ja
arpl
and
and
sbb
hlt
in
xor
pop
into
xor
xor
gs
xchg
test
inc
ficomps
jbe
ficoms
icebp
pop
and
incb
std
scas
mov
movsb
stc
mov
xchg
add
rclb
subb
pop
xchg
add
sahf
fs
dec
fcomi
shlb
mov
scas
das
fcmovne
scas
pop
inc
imul
repnz
cmpsl
fisubs
push
into
and
cmp
cmc
test
push
loope
rclb
adc
ret
movsl
shlb
mov
clc
xchg
dec
xlat
dec
sbb
idiv
xchg
xor
testb
or
jnp
and
xchg
mov
aas
jno
adc
jae
jmp
fs
jnp,pn
xchg
jmp
jge
cmp
aam
imul
cmp
repz
pop
mov
sbb
mov
xchg
ljmp
scas
and
xchg
cmp
inc
subl
dec
bound
add
mov
xchg
das
and
jl
jns
adc
xchg
orb
mov
daa
ljmp
push
pushf
dec
jg
mov
xadd
scas
xchg
popa
pusha
sub
imul
add
sub
repnz
dec
out
sub
inc
pop
fidivl
dec
push
pop
arpl
pusha
sbb
push
shlb
pop
fldcw
or
jns
cmp
shrl
pop
jmp
xchg
xlat
aaa
lret
fwait
sti
mov
jmp
xchg
adc
cmpsl
bound
aam
icebp
add
es
mov
xor
push
repz
imul
imul
out
sbb
fwait
sub
in
daa
jecxz
imul
jns
sbb
daa
push
mov
add
repz
pop
pop
cld
sbb
mov
sbb
xor
and
and
cld
sub
fsts
stos
pop
cli
cmp
xor
inc
jae
dec
dec
adc
mov
lret
pushl
sub
mov
cmpsb
push
lret
xchg
lahf
adc
jnp
loope
jmp
mov
lret
pop
mov
int3
adc
mov
test
call
xchg
ljmp
and
xchg
mov
xor
or
mov
mov
push
shll
push
jbe
jp
out
test
iret
movsl
bound
stos
inc
adc
leave
push
pop
iret
test
imul
push
lahf
mov
sahf
fldenv
push
add
cmp
scas
cmpsl
mov
test
xlat
mov
mov
xor
outsl
fs
mov
xchg
jno
inc
add
inc
xchg
aaa
lock
fcmovne
shll
movsb
cmc
stos
xchg
mov
fs
mov
in
rcrl
les
fldcw
push
js
inc
mov
inc
cli
dec
and
dec
movsb
fsubs
xchg
aas
push
jae
cs
add
xchg
in
push
sub
mov
imul
sbbl
inc
pop
test
clc
add
pop
enter
fwait
jp,pt
ja
add
add
pop
call
sub
mov
adc
mov
in
mov
test
push
xchg
out
inc
frstor
inc
mov
cmp
subl
sbb
mov
fidivl
lock
ret
shrb
jmp
outsl
adc
mov
cmp
jo
add
inc
fisttpll
push
sub
sub
mov
seta
ljmp
xor
xchg
int3
mov
in
iret
pop
in
in
push
xchg
ss
icebp
or
in
mov
inc
xchg
js
in
mov
or
push
jns
ja
mov
pusha
lds
cwtl
push
dec
adc
jecxz
dec
scas
sub
gs
jg
or
ffreep
cmp
fs
pop
jne
lahf
rorl
cltd
dec
outsl
and
stos
into
mov
push
mov
xchg
mov
inc
mov
out
adc
pushf
mov
nop
cld
cmp
and
out
test
or
shll
mov
xchg
xchg
in
add
mov
hlt
push
nop
hlt
dec
inc
jg
mov
popa
inc
pop
out
dec
sbb
and
mov
or
mov
scas
inc
mov
jae
or
in
fsubrs
in
mov
or
test
mov
or
popf
adc
jae
in
push
push
push
jo
cs
inc
sub
ret
push
aam
and
push
push
lret
mov
dec
sub
dec
sbb
push
inc
mov
enter
sbb
pop
or
xor
adc
pop
out
movsl
clc
data16
test
pop
add
les
and
mov
push
loopne
mov
call
test
adc
idivl
mov
xchg
pop
jne
mov
imul
xlat
loope
push
fisubl
jae
aad
lods
loop
xlat
adcl
aas
insl
das
ljmp
push
dec
or
jmp
xchg
jo
test
imul
mov
aaa
sahf
pop
ror
fcompl
mov
cmpsl
insl
les
mov
adc
add
sbb
popf
sbb
xorb
ds
inc
dec
pop
arpl
push
je
add
outsb
aas
bound
inc
push
es
outsb
imul
cmp
sbb
mov
sub
cwtl
or
push
jne
inc
mov
xchg
jno
rcll
adc
xorb
inc
dec
cmc
pop
xor
rolb
jge
insl
mov
ja
sub
out
push
lock
lret
jg
ret
jo
mov
cltd
inc
pop
rorb
xor
jne
xor
sbbl
xor
popa
sub
jns
pop
sub
or
mov
lds
push
dec
sbb
mov
inc
mov
xchg
cltd
enter
sbb
or
cs
sub
ficoml
jmp
lods
mov
es
adc
cli
add
mov
sub
loopne
call
out
jno
ret
push
call
xchg
xlat
inc
xor
jmp
mov
jbe
int
mov
dec
shlb
add
push
enter
aam
cmp
fdivs
popf
xor
mov
dec
data16
pop
orl
cmc
imulb
loop
push
mov
pop
aas
mov
inc
jg
push
sbb
js
rcrl
andl
sbb
loop
imul
xchg
xchg
or
leave
icebp
adc
ret
xchg
je
push
movsl
and
push
bswap
fwait
dec
pop
mov
adc
mov
scas
lds
add
call
push
scas
divb
and
cli
lods
xchg
cmp
ret
and
dec
mov
les
jbe
mov
push
test
adc
in
pop
out
dec
jg
mov
push
mov
xlat
loope
add
lret
fs
cmpsb
gs
std
xchg
mov
imul
addr16
jno
and
or
jge
cmp
pop
jle
adc
pusha
mov
mov
std
xchg
jg
add
sub
flds
das
into
lret
lea
or
ret
ret
mov
cmp
mov
dec
xchg
push
imul
mov
pusha
and
jnp
xor
mov
cmp
dec
xlat
push
enter
xchg
js
mov
jb
fisttps
mov
sub
inc
xchg
movsl
fdivrl
inc
jns
push
scas
fnstsw
inc
iret
mov
xchg
call
mov
push
mov
scas
lret
std
cs
bound
cwtl
loopw
cmpsl
jno
int3
shll
and
jae
add
add
inc
add
sub
inc
or
dec
push
pusha
in
ss
sub
fisttps
xor
add
sbb
cmp
out
addr16
push
pop
pop
fmulp
mov
int
cmp
push
inc
sub
ret
mov
add
lret
mov
mov
lahf
loopne
data16
cwtl
sbb
pop
rorb
fnsaves
dec
push
pop
jl
push
stos
sub
fnstsw
or
cmpsb
push
push
push
pushf
jecxz
ljmp
lods
mov
cmpl
mov
or
adc
std
ljmp
jge
scas
sbb
in
in
sub
ss
fcmovnu
pop
lret
nop
sbb
pop
push
push
movsb
or
add
test
dec
ret
gs
movsl
xor
dec
gs
fmull
movsl
outsb
jmp
ljmp
adc
mov
and
fadd
aaa
jg
repnz
lahf
fadds
adc
divl
scas
push
and
mov
or
es
dec
sub
xlat
adc
jbe
mov
fstpl
ret
mov
dec
mov
out
shlb
mov
lods
and
rclb
jo
nop
xchg
scas
cmc
add
push
imul
cmp
mov
xchg
dec
sub
stos
sub
jae
stos
mov
cmp
add
mov
shrb
jno
and
sbb
pop
ljmp
out
out
std
pop
shll
pop
neg
dec
fists
into
cltd
pop
sbb
dec
mov
or
in
dec
mov
or
push
fcmovbe
cmp
in
inc
dec
mov
mov
gs
jmp
inc
sub
or
shlb
lock
out
addl
adc
add
sarb
xlat
sbb
or
out
imul
mov
add
in
adc
lock
inc
popa
cmp
outsl
lds
pop
rolb
mov
pop
out
scas
mov
stc
fsubr
sub
and
shlb
int
pop
in
jne
inc
mov
lahf
out
push
insl
in
xor
shlb
push
out
sub
or
or
pop
test
pusha
mov
dec
and
dec
out
push
enter
mov
cmp
aas
pop
sub
sbb
fcoms
lods
ss
imul
pop
cmp
dec
cwtl
icebp
pusha
popf
inc
and
jge
sub
jle
mov
inc
cmc
sub
pop
pop
cmp
add
push
lea
xor
pushf
lcall
paddsw
movsl
mov
fwait
xor
cmpl
mov
inc
or
aam
icebp
cmp
sub
or
adc
pop
jmp
lock
jecxz
pushf
add
cli
inc
pop
sub
sahf
sub
add
mov
mov
ret
pop
xchg
sbb
add
inc
mov
stos
in
or
pop
ds
xchg
rcll
sub
cli
imul
rclb
pop
insl
adc
repz
dec
jo
into
jo
mov
mov
out
ljmp
sub
cmp
fistl
cmp
push
dec
jae
loopne
jae
gs
js
in
outsb
stos
das
les
in
add
stos
xchg
dec
push
pop
std
mov
aad
mov
test
pop
nop
fsubs
pop
lds
ds
jns
mov
js
cmp
dec
movsb
xor
aam
stos
adc
sbb
stos
loop
lea
das
es
and
mov
pushf
cmp
add
mov
call
xor
in
mov
pop
xor
sti
dec
jmp
push
jl
pop
pop
adc
jnp
in
push
xchg
add
mov
mov
int3
jo
popa
iret
pop
inc
rorb
pop
jmp
mov
cmp
stos
dec
mov
int3
js
cmp
adc
fdivr
test
inc
pop
mov
jge
mov
cs
add
mov
sub
pop
xor
jno
mov
mov
mov
lahf
mov
inc
adc
jl
xchg
cmp
cmp
jns
insb
inc
ds
xor
pop
lahf
mov
sti
cmp
rcrl
pop
inc
push
adc
int
dec
xor
stc
lcall
adc
adc
ljmp
jg
insb
cwtl
inc
lret
mov
std
and
xchg
loop
dec
pop
imul
sti
dec
adc
and
es
mov
movsl
aaa
and
jg
pushf
adc
mov
push
jnp
jnp
pop
shrb
cmp
inc
push
xor
aaa
pop
mov
mov
movsl
jnp
scas
popa
btsl
jge
scas
add
sbb
dec
xchg
pop
pop
push
icebp
xchg
repz
jle
jl
stc
xlat
sbb
pop
imull
out
xor
jp
add
add
adc
mov
stos
add
xchg
jbe
cwtl
sub
pop
sbb
ss
aaa
push
jno
sub
lret
cmp
cmc
xor
mov
outsb
push
dec
mov
adc
shrl
dec
pop
or
jmp
mov
adc
movsl
jbe
push
xchg
pop
adc
js
adc
lcall
dec
mov
aaa
cmp
pop
jb
sub
jnp
xorl
int
in
rcrb
xchg
ret
xlat
and
aad
cli
mov
inc
push
shlb
sub
add
lcall
in
fnstcw
out
jge
test
cmp
push
repnz
cli
lods
loope
xchg
pushf
ja
add
fisubl
fsub
ficoml
lret
lds
shl
fimuls
outsb
xchg
outsb
sub
xchg
mov
or
adc
dec
mov
pop
mov
jnp
jg
sbb
mov
sub
add
pop
repnz
push
lcall
push
loope
addr16
add
in
push
mov
mov
xchg
jno
xor
sbb
sub
stc
pop
subl
lea
jno
sbbl
nop
loopne
fxch
cmp
inc
pop
ret
pushf
xchg
add
test
and
cld
lods
pop
fildl
push
xchg
mov
lock
mov
ret
push
cmp
mov
out
pop
or
mov
and
cmp
sub
pop
loopne
into
mov
xor
ret
xcrypt-ctr
cmpsl
fwait
and
mov
jp
mov
jl
xchg
mov
dec
shr
push
cwtl
popa
cmpsl
cmpsb
mov
jnp
add
mov
loope
popa
hlt
or
push
mov
jns
mov
mov
jle
enter
xor
xchg
push
add
adc
pop
scas
daa
cmp
push
test
lds
fldcw
inc
jle
pop
pop
mov
inc
mov
outsb
faddl
xor
inc
loopne
push
adc
push
sbb
std
daa
push
dec
sub
mov
out
rorl
in
xlat
fildl
into
pushf
in
cmp
xor
xor
pop
inc
inc
push
or
dec
rorl
imul
jno
aas
xor
lods
iret
xor
dec
or
or
aad
xor
nop
mov
and
lods
scas
lods
addr16
mov
pop
mov
arpl
out
lds
mov
daa
xchg
mov
and
loopne
xlat
fdivrp
jp
and
jo
js
lods
jecxz
stc
xchg
popa
out
stc
gs
pushf
mov
scas
lcall
stc
ljmp
aas
jne
add
fcomi
icebp
cwtl
stos
jbe
popa
adc
xchg
pop
in
push
or
pop
pop
ret
test
repnz
jo
cmc
push
dec
in
movsb
aam
lock
leave
in
mov
test
adc
jecxz
push
sbb
dec
adc
add
lds
mov
push
push
outsb
dec
or
or
mov
sub
adc
out
xchg
sbb
jno
xor
push
cltd
subb
mov
push
jmp
cli
pop
xchg
xchg
test
test
movsb
mov
inc
jo
xchg
cmpsl
data16
pop
daa
lea
addb
or
cmp
sahf
nop
mov
mov
cmovne
jbe
inc
es
data16
add
lds
push
enter
lcall
leave
push
popa
or
cli
pop
mov
je
dec
stos
movsl
jecxz
bound
inc
dec
xchg
lret
fwait
pop
mov
fcoml
aas
loope
in
mov
add
ds
mov
stos
or
out
pop
add
adc
xchg
jge
push
push
dec
in
mov
inc
xchg
xor
mov
scas
mov
xchg
push
and
lret
mov
fdiv
fidivl
inc
ss
adc
push
add
cs
bound
popa
mov
cmp
sti
adc
jae
mov
ret
ljmp
ret
addr16
sub
gs
pop
add
mov
sub
jp
outsb
mov
or
mov
push
mov
push
pusha
ja
fimuls
jg
fldenv
dec
lret
in
push
adc
jecxz
addb
fs
mov
cld
pmuludq
pop
xor
imul
mov
faddl
mov
inc
cmp
inc
dec
mov
pop
jb
or
mov
neg
mov
int3
pop
fld
movsl
push
sbb
arpl
mov
push
inc
xor
negl
inc
xor
repnz
inc
push
push
andl
testl
push
and
test
push
adc
stos
lahf
loop
test
cmpsl
mov
dec
sti
xor
mov
pop
out
mov
mov
jle
mov
jle
pusha
push
je
and
mov
pusha
cwtl
aam
dec
dec
test
dec
push
ja
std
push
pop
and
test
sti
ret
lock
nop
push
xchg
and
stc
fisttpl
pop
xchg
adc
inc
or
mov
lahf
fstl
dec
and
int
push
mov
pcmpeqb
jnp
sub
inc
mov
mov
lcall
test
xchg
pop
out
xor
movsb
jmp
and
adc
orl
aam
das
xor
cmp
push
stos
push
aas
cmpsb
fcomps
sub
insb
test
mov
jge
popa
sub
inc
subl
dec
sub
arpl
rcl
pop
jnp
sbb
mov
pop
push
push
push
lock
mov
jo
std
add
mov
and
add
push
ljmp
lcall
or
dec
aam
dec
sti
int
mov
icebp
xchg
pop
fstpt
ds
add
jge
mov
shlb
shrb
notl
mov
pop
lcall
add
pop
xor
xchg
call
xchg
ret
and
sti
and
enter
call
bound
mov
repz
mov
mov
sti
and
pushf
mov
jge
mov
jnp
add
mov
test
jmp
and
fisubrs
add
dec
mov
lock
js
mov
subl
push
in
and
xor
jns
pop
xchg
lcall
mov
fimuls
lahf
and
cmp
test
repnz
xchg
inc
push
sub
scas
mov
mov
pop
and
cwtl
mov
mov
insl
imul
fistpll
movsb
cmp
out
jae
adc
jns
inc
and
or
add
loopne
add
inc
insl
fistpll
jge
test
pop
mov
mov
mulb
mov
orl
xlat
je
or
stos
fidivrl
in
iret
test
dec
or
pop
xor
fdivl
mov
mov
roll
movsl
jle
cld
jb
xor
pop
out
xrelease
sbb
aam
cltd
xchg
aam
mov
cmp
das
dec
mov
ret
inc
aad
out
es
inc
int3
lods
outsl
lea
clc
sub
cmc
cmp
xchg
push
jo
xchg
pop
push
cmpsl
mov
repnz
shrl
arpl
xor
jne
loop
cmp
jmp
push
in
leave
sbb
les
idivl
into
dec
icebp
cmp
cwtl
in
cmp
fdivp
push
sub
std
push
addr16
mov
mov
adc
repnz
and
fistl
jle
cli
dec
sti
jno
jl
lea
cltd
dec
sbb
in
and
hlt
lcall
jl
out
mov
adc
lcall
test
rorl
out
mov
sub
outsl
mov
xor
ljmp
repz
xchg
pop
shlb
push
mov
mov
addb
sahf
mov
popf
jecxz,pt
imul
outsb
jge
mov
mov
outsl
dec
inc
lock
daa
into
scas
mov
mov
dec
std
add
and
xchg
push
jge
testl
xchg
repnz
mov
rcrb
push
shll
dec
adc
in
jb
jl
jb
add
sub
fsubs
dec
leave
xor
sbb
push
add
push
shrb
mov
dec
jmp
pop
jp
outsl
sbb
mov
sub
daa
push
fnstsw
lods
pop
jae
addr16
sub
add
xchg
dec
add
in
jecxz,pn
lods
loop
pop
add
jecxz
push
mov
pop
jmp
fidivs
cmc
jbe
mov
imul
mov
dec
push
jno
lret
jns
int
add
fsts
jl
imul
jns
xchg
test
inc
and
cli
mov
scas
imul
push
inc
adc
or
inc
push
sub
inc
jo
repnz
mov
push
mov
inc
adc
push
mov
sar
lds
popf
aaa
sbb
adc
push
sub
popa
mov
xor
push
ret
pusha
mov
mov
and
mov
dec
push
lock
or
hlt
inc
push
adc
pusha
adc
arpl
insl
mov
jno
cli
dec
stos
push
es
cli
leave
xchg
imul
mov
and
stos
test
shl
inc
hlt
jno
enter
mov
jg
and
or
jbe
shll
push
or
sti
sbb
push
add
mov
and
je
sub
test
xor
xchg
ret
out
jp
repz
adc
movsl
mov
xchg
in
sti
xchg
sahf
and
in
and
imul
rolb
xchg
inc
push
adc
jmp
mov
push
fdivrs
sbb
or
mov
int3
xchg
insl
nop
dec
divb
pop
lret
mov
dec
mov
push
jbe
arpl
cli
adc
out
into
push
jbe
mov
test
mov
and
pushf
lahf
xor
into
xchg
pop
mov
scas
xchg
jno
pop
push
popa
aaa
push
in
in
mov
mov
push
sbb
cmpsb
ds
rclb
icebp
sbb
cmpsb
cmp
aam
and
add
push
xchg
lds
imul
ds
stos
aaa
pop
cli
cmpsl
ja
cwtl
lret
in
out
rolb
cmp
fmulp
stc
loop
fstl
inc
xlat
mov
sub
mov
lret
dec
faddp
movsl
inc
imul
cmc
mov
xor
xchg
lcall
xor
movsb
int3
ret
pop
add
inc
cli
mov
sti
sbb
js
mov
cmp
cmp
inc
nop
aaa
cltd
sbb
inc
inc
and
daa
pusha
enter
sub
in
xor
sub
jnp
outsl
pop
insb
pushf
or
xchg
and
pop
lret
push
insl
xchg
xchg
data16
insl
jge
cmpl
add
or
xchg
out
mov
out
xchg
mov
in
pop
inc
add
xchg
jmp
add
aaa
inc
jmp
ds
pop
out
insl
into
out
cmpsl
adc
fstpt
cmc
sti
hlt
and
and
aaa
cmpsl
nop
stos
mov
sub
cs
cmc
mov
gs
mov
pop
out
enter
lcall
outsb
xor
sbb
arpl
cmp
sub
lret
sbbl
and
sub
pop
jb
and
aam
xchg
sbb
xor
inc
pop
gs
mov
sub
loope
iret
dec
cmpb
xor
std
add
sbb
jnp
push
fwait
push
pushf
inc
mov
cld
push
pop
out
insl
mov
mov
xchg
inc
rol
lea
xlat
or
jg
sahf
jo
xor
fwait
pop
add
aam
call
loop
xchg
stc
inc
fmuls
inc
mov
add
adc
or
lcall
jp
jp
and
pop
xchg
xchg
popf
jge
leave
mov
fstps
xor
push
aam
adc
mov
psraw
gs
jmp
cmp
adc
in
lds
mov
and
adc
adc
and
imul
mov
call
fucomi
stos
es
repnz
mov
shrb
sub
xor
call
fcoml
in
push
xlat
test
out
adc
arpl
mov
push
sub
mov
dec
inc
clc
out
dec
rclb
mov
in
push
jg
push
cmp
pop
inc
jmp
jo
mov
and
cmpsl
lods
icebp
pop
cld
or
js
rorl
push
inc
cwtl
insb
in
jp
insl
mov
sub
jecxz
sub
loop
je
jb
test
les
stos
cmp
add
cmp
jb
dec
cs
dec
add
push
test
xor
xchg
cmp
imul
lds
cmp
sbb
sub
shlb
outsl
inc
shl
lock
movsb
cmp
mov
movsl
cmp
jne
cwtl
ds
jno
mov
xchg
xchg
sbb
sbb
testb
lahf
test
ret
rclb
push
cwtl
stc
stc
jbe
clc
outsl
push
out
sub
imull
es
mov
sbb
xchg
mov
ficoms
jne
aaa
rcl
dec
dec
xor
adc
bound
aaa
mov
jg
jne
adc
ljmp
sbb
lret
inc
inc
sbb
jmp
inc
outsl
lret
mov
push
cmpsb
inc
into
and
je
mov
test
sbbl
cwtl
cmp
rorl
mov
gs
cld
scas
or
xlat
xor
push
cmpsl
inc
ficoml
pop
lods
dec
inc
shl
das
or
cmp
mov
jge
pop
xchg
sub
testl
dec
cmp
sub
mov
or
mov
or
in
loope
cli
iret
lret
in
push
jmp
adc
in
loope
xchg
mov
pop
gs
dec
inc
sub
arpl
jnp
gs
mov
mov
fildll
leave
fidivl
sahf
stos
xor
call
mov
lea
jno
addr16
stos
stc
mov
loop
xchg
add
dec
pop
fisttpll
xor
xor
or
jecxz
mov
mov
fstps
dec
dec
cltd
push
jb
hlt
cs
sub
push
dec
or
add
adc
jne
xchg
ret
loopne
dec
addb
add
dec
jl
addb
das
mov
enter
xor
fs
rol
sub
push
mov
out
push
jae
aam
mov
adc
jno
fdivs
pop
dec
rcrl
inc
cltd
data16
inc
pop
add
lock
test
sar
dec
jg
mov
std
inc
push
hlt
adc
inc
inc
pop
cmp
mov
xchg
sbb
mov
jecxz
and
int3
mov
add
add
xchg
shll
lahf
push
sahf
lock
popf
in
cmp
jecxz
movsl
jge
adc
mov
std
xor
mov
sbb
mov
push
je
les
sbb
stos
jno
fmuls
mov
mov
sub
nop
sti
dec
mov
fsubrl
inc
scas
push
pop
pop
enter
popa
add
or
hlt
or
pop
inc
cmpsb
icebp
jge
xchg
dec
movsb
add
cld
pop
mov
sub
pop
mov
js
dec
dec
pop
push
repz
in
dec
xchg
mov
lods
loop
lcall
outsl
mov
jno
mov
or
bound
push
cmpsb
dec
pop
imul
inc
pop
lock
sub
inc
xor
lcall
les
xor
cmp
mov
xor
push
sub
rcrl
aas
sbb
pop
stos
imul
add
and
insl
rcrb
mov
push
xchg
inc
mov
popf
and
mov
xor
xchg
mov
mov
into
jne
inc
nop
dec
stc
lods
cmpsl
pushf
pushf
movsl
movsl
loop
fdivrl
cmp
sub
add
xchg
add
hlt
movsl
adc
cwtl
movsb
push
and
jns
push
sahf
fmull
add
fidivrl
packssdw
dec
mov
cld
out
out
mov
mov
add
dec
lds
cmp
push
add
pop
pusha
outsb
cmpsl
enter
bound
sti
mov
shlb
lret
imull
shll
dec
mov
xchg
pop
inc
push
es
xchg
ljmp
adc
cmp
inc
gs
push
and
fidivl
and
inc
repnz
mov
imul
out
push
dec
push
lret
jae
lock
cmpsl
add
in
push
push
fdivrp
iret
ljmp
testb
cwtl
xchg
fwait
push
shlb
lcall
lds
inc
test
jg
mov
mov
push
mov
or
bnd
rorl
scas
std
in
xor
rorl
decl
add
add
xor
stos
cld
nop
daa
jle
lock
dec
dec
pop
xchg
or
add
push
xlat
sub
pmaxub
int
jecxz
push
pop
movsl
push
fldl
sub
mov
mov
push
ret
xor
int3
fstpt
pop
xchg
inc
or
lds
xor
sar
imulb
dec
mov
dec
pop
call
nop
add
dec
bnd
jmp
jne
aad
adc
push
jne
adc
xchg
movsb
lods
mov
inc
push
adc
orb
inc
mov
aam
je
jge
repz
inc
and
mov
js
mov
aad
xlat
jne
push
lret
mov
pop
in
and
test
lsl
inc
xchg
repnz
cwtl
sub
scas
xchg
out
push
inc
clc
and
test
imul
inc
xchg
sbb
insl
mov
mov
lret
sub
je
jnp
cmpsl
in
outsl
xchg
mov
jo
jb
jecxz
insl
mov
psraw
aaa
xchg
xor
fwait
in
mov
mov
sar
xchg
mov
fstpl
pop
sub
andl
movsb
cmpsl
not
fs
test
inc
scas
fnstenv
cmp
xor
add
push
mov
cli
xchg
idiv
xchg
int3
gs
dec
ror
pop
mov
mov
xchg
cmc
sarb
das
lea
push
stos
mov
inc
jno
or
inc
adc
out
rcr
int3
inc
testb
sbb
pop
ret
add
xor
rclb
std
push
add
dec
jmp
adc
or
sahf
lods
scas
and
outsl
push
dec
in
fcomps
jmp
or
lcall
and
add
cli
adc
sub
fs
div
dec
xchg
sbb
fs
cli
sbb
sbb
mov
adc
sahf
sub
mov
sub
call
ret
std
es
int3
out
inc
scas
and
int
iret
cli
out
ret
scas
aas
imul
cmp
inc
cmp
jno
push
movsb
sub
xlat
jbe
test
jecxz
jno
or
repz
jmp
jmp
mov
mov
int
inc
xor
pushf
dec
mov
repz
jge
mov
fcompl
pop
xchg
in
push
test
lods
aaa
sar
push
cmp
sub
scas
add
inc
loop
imul
dec
xor
lahf
sti
and
push
fisttpl
iret
pop
pop
addb
cvtps2pi
pop
testl
outsl
arpl
jge
loopne
dec
dec
pop
adc
fucomi
das
and
daa
push
mov
das
nop
xor
testl
popf
out
add
dec
xchg
xchg
daa
xchg
sub
nop
pushf
hlt
xchg
cmpsl
xor
push
mov
loope
mov
outsb
stc
mov
cmc
sarb
aas
jp
sub
fcoms
adc
cmp
xor
sbb
cld
jo
dec
pop
data16
aas
xchg
jns
lret
sub
jmp
in
out
jns
imul
lods
mov
push
xchg
pop
mov
in
lock
and
mov
adc
mov
xor
ds
cmpsl
stos
jb
sbb
ret
dec
mov
cmp
das
ffree
cmc
pop
pop
xor
cli
ss
lret
imul
mov
mov
insb
dec
movsl
add
pop
jecxz
add
xchg
iret
inc
scas
or
sbb
pop
push
pop
movsl
pusha
faddl
pushf
add
test
mov
pop
jecxz
adcb
xchg
jnp
es
cltd
pop
xchg
inc
cmp
jo
std
inc
imull
mov
scas
mov
movsb
jns
mov
mov
js
and
test
push
or
adc
loope
andb
rol
mov
in
cltd
jne
insb
or
dec
fists
cwtl
cmc
xor
add
jmp
xchg
push
mov
sub
fnstcw
lock
aaa
jp
and
cmp
test
neg
out
add
push
push
mov
xor
xor
inc
hlt
dec
ss
aas
dec
call
push
push
hlt
push
int3
dec
xchg
jb
push
fstps
push
and
stos
jo
mov
aaa
popa
sub
fnsave
mov
and
hlt
arpl
cmpsb
outsl
fdivs
imul
loop
add
ja,pt
pop
sub
fwait
movsb
pop
or
mov
dec
and
or
fsub
jne
push
cmpsl
negl
ds
rolb
call
aad
adc
lret
xlat
dec
in
repnz
enter
fsubl
jmp
cmp
xor
cmp
inc
xchg
fucomip
xor
mov
xor
bound
aam
mov
in
lock
loope
cltd
in
aam
xchg
xchg
in
cmp
scas
mov
loop
in
clc
or
add
bound
pop
outsl
xchg
adc
sbb
push
add
aam
add
inc
add
ficomps
sahf
cmp
xor
lods
lock
push
add
xor
sarb
out
enter
pop
mov
or
cmpsb
test
xchg
xchg
cmp
rolb
inc
notb
mov
scas
cmc
jne
lahf
sahf
xchg
and
or
pop
mov
mov
xor
jnp
mov
into
push
dec
jne
inc
lods
push
xchg
cltd
bound
lea
cmpsb
sub
shlb
push
push
xorl
add
add
push
divb
roll
jnp
sub
lds
and
fwait
mov
movsb
test
sbb
mov
cmp
jmp
lret
mov
cmp
sbb
and
inc
scas
sahf
xchg
xor
cld
sbb
movsl
int3
push
mov
jae
int
inc
outsl
and
pop
add
cmp
cltd
stos
fadd
push
fldz
js
jp
inc
lahf
mov
cmpsb
insl
lahf
dec
dec
or
or
push
nop
cmpsb
inc
pop
rcll
pop
pop
mov
sarl
push
leave
mov
sbb
ljmp
xor
jle
dec
jnp
stos
adc
movsl
and
mov
jl
push
jbe
push
lret
jmp
add
jle
xchg
xor
dec
add
adc
push
orb
int3
jg
sub
sbb
xor
xchg
push
jns
daa
stos
imul
leave
pop
push
adc
int3
sbb
mov
out
mov
push
movsb
add
stc
testb
arpl
dec
mov
adc
or
pop
push
inc
cld
fwait
sub
sbb
lods
push
test
add
jbe
dec
lret
loopne
call
lea
push
fdivs
pop
shl
add
add
sbb
mov
mov
dec
inc
mov
jge
outsb
nop
out
fnop
scas
loop
aad
scas
xor
and
testb
bound
out
push
mov
or
mov
jne
and
scas
mov
xlat
push
repz
out
jge
test
xlat
call
mov
fs
pusha
and
test
push
lea
jecxz
bound
jl
ljmp
mov
pop
sbb
dec
mov
cmp
dec
xchg
inc
inc
jecxz
iret
lcall
push
cmp
add
lcall
fwait
mov
cwtl
jbe
mov
js
pop
clc
shlb
inc
lea
xor
add
push
dec
adc
cmp
xor
mov
and
push
or
push
push
pop
outsl
cli
adc
rcpps
dec
insl
inc
daa
aas
add
mov
or
xor
fcomip
movsb
dec
pop
decl
jno
stos
pop
in
mov
in
iret
jae
pop
scas
mov
mov
loop
shr
and
push
pusha
jb
pushf
fisttpll
adcb
mov
mov
xor
test
add
subb
insl
cmpsl
repz
or
xlat
jbe
mov
icebp
fdivl
xchg
arpl
in
cmpsl
inc
fcomps
cmp
insl
and
daa
scas
xor
lahf
call
or
loopne
fsts
not
stc
lock
add
in
dec
jnp
xlat
leave
sub
xor
ficoml
sub
dec
pop
ja
mov
ljmp
mov
loopne
xorb
xor
sbbl
or
adc
mov
imul
sub
and
scas
out
pop
daa
std
and
out
inc
mov
adc
sub
imul
lahf
es
cmp
mov
aad
xchg
cmp
xor
scas
pushf
js
cmp
ds
sub
sub
xchg
jle
lret
push
fisttps
int
mov
add
popl
pop
pop
xchg
inc
add
jle
push
repnz
adc
or
outsl
sti
push
scas
pop
dec
imul
enter
mov
mov
push
fldcw
push
pop
test
inc
dec
into
inc
sahf
inc
mov
mov
adc
sub
test
and
push
pop
xor
loopne
sbb
add
ret
leave
adc
push
dec
enter
ss
add
popf
cmpsl
mov
in
in
test
xorps
shr
cmp
mov
mov
pop
dec
sbb
mov
mov
clc
sbb
cmpsl
dec
cmp
mov
int3
cmp
mov
int3
movsb
lods
and
outsb
pop
mov
dec
mov
fisttpll
cmp
repz
adc
sub
gs
loope
inc
ljmp
xor
fistl
mov
or
ss
sahf
fsubs
mov
outsl
scas
repnz
sbb
lea
jmp
imul
xchg
cmp
jns
xlat
in
inc
and
mov
bound
les
dec
in
or
fwait
popa
pop
in
clc
inc
lds
outsl
lods
pop
idivl
xor
mov
stc
popa
mov
sbb
ret
add
orb
sbb
in
mov
add
mov
mov
test
xchg
mov
les
mov
incl
cs
xchg
lahf
jno
fldl
inc
in
push
jno
pop
dec
flds
xchg
xchg
jb
mov
mov
xor
popf
and
in
mov
roll
mov
int3
cs
jne
leave
jnp
outsb
test
scas
imul
test
enter
or
decb
cmp
and
in
fisttpll
movsb
mov
xor
jbe
add
mov
in
dec
pop
cmp
add
jl
jbe
add
out
dec
insb
lcall
pop
in
mov
dec
sub
out
cmp
dec
inc
in
cmp
pop
lods
in
scas
xchg
ret
pop
xor
sub
sub
xchg
jnp
sbb
cld
push
subl
adc
jle
sbb
shlb
dec
addr16
clc
or
out
and
iret
fst
shlb
jae
mov
jecxz
sahf
or
fst
ret
mov
pop
mov
aad
mov
dec
push
xor
and
jg
cmp
and
jns
xor
imul
push
xchg
jecxz
fildll
xchg
sbb
cmp
push
daa
fs
repnz
sub
xchg
add
shlb
lcall
xchg
and
or
push
lcall
repnz
imul
jbe
mov
jbe
nop
and
add
xrelease
mov
test
andl
add
mov
xchg
cmp
test
int
mov
push
aad
imulb
rcrl
sub
dec
mov
ror
loopne
xor
xor
arpl
fcmovnb
cmp
stos
xchg
inc
sbb
lds
inc
stos
pop
lock
dec
push
add
adc
fldenv
mov
or
popa
cs
negb
test
dec
aam
jmp
dec
fisubs
out
lret
stos
cld
cwtl
push
repnz
sbb
decl
es
insl
pop
lea
and
repz
imul
adc
or
ss
mov
xor
sbb
push
sbb
inc
addb
stos
mov
sub
je
dec
pushf
and
out
adc
xchg
adc
push
xor
mov
xchg
mov
or
pop
inc
movsb
mov
clc
gs
es
fwait
lahf
f2xm1
imul
pop
cld
stos
mov
jg
pop
mov
cmp
loopne
shlb
or
sub
loope
or
cld
inc
push
enter
xor
sbb
cltd
mov
rcrl
shr
xchg
jmp
ficomps
mov
ja
jae
mov
repnz
pop
sahf
out
pop
push
mov
sbb
data16
cltd
comiss
jne
and
mov
loop
mov
addr16
ja
jmp
mov
cmp
movsl
not
test
fists
test
mov
lods
jle
jp
adc
cmp
sub
lahf
pushf
stos
xchg
dec
lret
push
adc
push
insb
or
cmp
std
popf
jns
pop
dec
sbb
fwait
cmp
jno
dec
jne
xor
int
in
repz
or
leave
sub
xlat
mov
xor
daa
out
ret
inc
stc
cmpsl
cmpl
popa
mov
pop
jp
push
pop
mov
sbb
cmp
jb
sahf
sbb
in
mov
dec
pop
subl
jmp
xchg
dec
scas
mov
dec
cmpsl
pop
pop
xchg
push
mov
fcmovnb
xlat
outsb
out
and
fdivrl
pusha
and
je
adc
ffree
cmpsl
bound
dec
dec
dec
push
mov
insl
cwtl
inc
cmp
lock
fsts
lcall
sub
jmp
ds
xchg
xchg
mov
cmpsb
sbb
inc
cwtl
out
jne
je
adc
sub
push
sub
xchg
insb
aad
jb
pop
or
mov
repz
pop
xchg
imul
pop
fidivl
das
xchg
xchg
ret
js
xor
push
push
in
xchg
aam
ret
subl
loopne
cltd
in
dec
aas
mov
or
mov
jae
pop
fxch
cli
cwtl
jecxz
cmp
adc
nop
dec
mov
test
test
cmc
mov
cmp
out
jnp
cld
pop
mov
xchg
fmuls
inc
pop
out
in
xchg
mov
outsl
cmp
add
pop
pop
fisubs
daa
movsb
add
cmp
cmp
and
push
push
xchg
mov
out
mov
sbb
or
dec
pop
mov
in
or
in
pop
clc
or
cmpsb
jg
pop
or
test
movsl
lds
gs
xchg
dec
inc
mov
call
sub
xor
sti
ret
scas
jecxz
pop
and
jae
cltd
dec
and
push
cmp
shrl
bound
js
pop
sub
lock
sahf
dec
cmc
mov
sub
inc
enter
and
shrl
test
inc
xchg
dec
or
int3
aam
mov
mov
jo
add
mov
push
popf
arpl
inc
call
hlt
cltd
in
stos
dec
pop
mov
ficompl
stos
pop
stos
inc
hlt
cmp
out
aam
mov
sbbb
ss
push
orb
ljmp
les
test
fidivs
mov
outsl
out
daa
popf
adcl
xchg
jnp
divb
bound
xchg
ja
mov
ja
cmpb
inc
test
sub
or
jne
ds
pop
adc
mov
mov
cmp
shlb
out
sbb
je
mov
push
add
xor
subl
mov
mov
dec
jb
in
push
shrl
clc
cmpb
pop
xor
mov
xchg
xchg
add
xlat
shll
lret
std
mov
loop
pop
bound
mov
int3
cmc
push
mov
gs
sub
mov
test
mulb
mov
sub
fs
sahf
fs
cld
mov
cwtl
mov
jl
xchg
pop
aaa
shr
add
mov
nop
mov
mov
sub
xchg
insb
sub
hlt
jbe
fstps
xorl
mov
push
dec
jbe
xor
xchg
lcall
hlt
lods
sbb
ret
push
test
adc
cmp
sub
out
ret
orb
xorb
imul
cmpb
cmp
in
aaa
xchg
sbb
imul
ljmp
pop
xor
aad
pusha
xchg
cli
icebp
mov
cmp
push
inc
ret
sbb
sti
jb
leave
jae
pop
mov
xor
subl
xor
xchg
in
and
fs
cld
hlt
mov
push
xor
cmp
inc
test
inc
shlb
push
shrb
sbb
aam
data16
jb
pop
stc
pop
adc
inc
lods
or
lahf
in
inc
popf
inc
add
cs
cmpsl
test
mov
out
aam
fs
rcr
and
arpl
arpl
adc
fstl
and
sub
fidivrs
into
pop
mov
sub
xlat
pop
fldt
mov
scas
data16
mov
shrb
out
lds
jg
and
das
ficomps
ret
vpshlw
push
dec
sub
dec
dec
lea
mov
test
mov
jmp
add
pop
test
push
jge
hlt
xor
lea
cmc
cmp
push
dec
lea
adc
adc
jge
cmp
jmp
vcmpnlesd
inc
mov
loopne
aaa
pop
call
outsl
cmp
shr
cwtl
orl
addb
add
pop
scas
jno
adc
dec
repnz
scas
les
push
push
xchg
rol
outsb
jo
pop
sahf
test
cmp
stos
xchg
jno
in
clc
mov
cltd
test
es
xorl
hlt
jns
or
dec
fld
cmp
jp
and
sahf
addr16
jne
sbb
xchg
outsb
pop
pop
push
lea
adc
shrl
mov
pop
push
mov
in
and
cmp
push
loop
mov
dec
xor
pop
pop
mov
pop
adc
out
pop
jbe
out
lods
jbe
pop
push
sub
inc
cli
out
fs
loop
cmp
push
ret
jecxz
dec
insb
shrb
sub
and
outsl
cmp
fisubl
fwait
out
xchg
frstor
das
or
sbb
jne
int3
daa
or
inc
pushl
outsb
js
jmp
sbb
popf
lcall
clc
repnz
mov
pusha
or
jge
cltd
and
popa
jp
and
test
scas
testl
mov
lahf
ss
outsl
pop
enter
movsb
cmp
sub
arpl
in
mov
popf
in
push
or
jl
cmp
sbb
or
in
fst
adc
jne
cmp
xor
imul
xlat
movsb
mov
xchg
adc
lea
dec
nop
inc
mov
jge
scas
mov
adc
cmp
or
aaa
stos
mov
and
fdivs
in
inc
jo
pop
and
xlat
pop
pop
cmp
add
ljmp
push
or
cmp
cmp
mov
pop
les
sub
jne
add
adc
add
les
icebp
and
mov
sbb
xchg
sbb
rcrb
xor
mov
push
mov
popa
and
cmp
inc
orl
push
divl
stc
in
das
lret
adc
or
daa
outsb
leave
cmpsl
enter
xor
sub
pop
je
sbb
cmp
push
pop
jb
in
xchg
jmp
push
mov
adc
xor
mov
fsubl
add
shll
push
stos
arpl
pop
mov
mov
xor
pop
mov
int
inc
lret
mov
mov
cltd
aad
inc
int
sahf
adcl
dec
and
repz
imul
js
imul
xor
push
lret
div
lcall
std
jae
shll
and
stos
adc
dec
imul
enter
ss
stos
inc
add
fdivs
or
in
inc
jmp
cmp
gs
mov
jnp
lret
push
std
enter
xchg
mov
jne
in
jecxz
sbb
and
dec
push
sbb
or
adc
mov
test
lea
sbb
movsl
insl
scas
mov
ret
jg
sub
push
mov
mov
adc
das
ds
clc
aad
mov
test
sbb
and
insb
pop
rol
ffree
sbb
and
inc
in
pop
jo
addr16
out
popa
int3
nop
pop
in
out
xlat
ljmp
mov
clc
test
pusha
jmp
adc
inc
ja
or
xor
push
and
ret
int
mov
push
add
lret
jnp
sub
cmp
dec
sub
mov
jle
addl
scas
sub
inc
jmp
cs
xorb
out
mov
jae
sbb
lea
sbbb
adcb
mov
in
pusha
ds
mov
xor
outsb
mov
lahf
lods
sub
bound
stos
out
das
data16
cmp
and
rolb
cmpsb
leave
mov
sub
adc
jg
inc
jb
orl
mov
pop
aam
pop
inc
fildll
cwtl
stc
dec
and
rolb
mov
popf
add
pop
inc
adc
jmp
mov
rcrl
dec
pop
mov
inc
rcl
jmp
shl
ret
test
nop
mov
xchg
pop
js
or
push
mov
insl
or
test
pushf
shll
loopne
pop
imul
movsl
cmp
psllq
fdivr
cmpsl
inc
add
xchg
add
jmp
push
enter
jns
adc
fstp
pop
es
cmp
cwtl
jg
add
gs
addr16
aam
cltd
fwait
loopne
add
hlt
mov
mov
outsl
outsl
jmp
pop
popa
cli
inc
add
adcb
mov
inc
jb
sub
push
iret
and
xor
mov
mov
sahf
and
jae
rolb
test
rcll
xorl
out
pand
fistpll
mov
pusha
dec
jle
mov
rclb
push
pop
daa
pop
sbbb
imul
add
inc
loope
add
add
scas
mov
cmpsl
and
popl
data16
stos
and
outsl
jl
mov
bound
add
push
in
xor
sub
in
sbb
or
and
or
pop
push
mov
mov
cltd
jae
push
sub
mov
cmpsl
xchg
add
imul
add
inc
test
mov
pop
adc
lcall
mov
arpl
inc
clc
ds
push
test
and
jecxz
mov
or
inc
mov
divl
leave
mov
cwtl
adc
add
push
std
mov
les
mov
pop
sbb
and
sub
pop
loopne
jmp
sub
aaa
mov
jecxz
jge
xor
hlt
aas
scas
jg
jg
in
lock
jp
ja
adc
dec
in
cmp
insb
jge
ficompl
push
mov
pop
popf
ss
adc
daa
sbb
aad
pop
push
mov
shll
leave
add
rol
fimuls
adc
movsl
repz
mov
stos
int
sbb
int
daa
xlat
bnd
sub
mov
jecxz
pause
repz
add
push
cwtl
fisttpl
pop
fcom
stos
roll
pop
insl
and
or
pop
das
cmp
xchg
inc
mov
adc
fisubs
inc
cmp
mov
es
cld
and
inc
sbb
aad
xchg
inc
daa
rclb
negb
xor
das
mov
subb
outsb
imul
clc
roll
mov
test
sub
je
roll
push
xor
decb
mov
mov
add
add
or
or
mov
das
and
jmp
movsb
pop
sbb
gs
and
int3
jno
xorb
add
mov
int
dec
std
shrb
aas
xchg
cli
ret
cwtl
sbb
cwtl
aad
add
push
push
fisttpll
and
inc
mov
xchg
dec
cltd
sbb
add
insb
jle
sbb
lds
cmp
inc
or
or
test
adc
pop
jmp
xchg
scas
and
xlat
sbb
mov
test
cmc
adc
int
jb
mov
and
mov
movb
out
and
stc
shl
cmp
roll
push
mov
push
sbb
lock
lcall
sbb
cld
out
ss
sbb
aas
insb
iret
iret
iret
cli
inc
xchg
dec
pushf
adc
inc
in
push
adc
int3
sbb
cld
cli
aad
and
add
pop
lods
xor
mov
sti
mov
test
setp
cmp
rclb
test
bndldx
mov
packuswb
dec
fdiv
push
cmp
jbe
push
xchg
inc
add
leave
repnz
sbb
xlat
jecxz
lcall
mov
pop
cld
push
rcl
arpl
or
jmp
mov
insl
jge
cltd
fdivs
and
pop
mov
adc
rcl
cli
insb
add
movsl
inc
loopne
jae
mov
adc
adcl
add
inc
or
ficoml
addl
ljmp
addb
inc
xor
mov
cwtl
mov
inc
push
out
leave
xchg
cmc
je
inc
inc
iret
sbb
jno
xchg
push
stc
or
frstor
pop
jmp
push
cltd
add
pop
daa
push
lea
lret
sbb
mov
fs
mov
pusha
xor
cmpsb
nop
mov
mov
rcrb
mov
mov
or
push
imul
shr
pop
outsb
std
and
mov
dec
xchg
mov
lods
imul
stos
cmpsb
xor
aas
inc
or
push
call
cli
push
lods
adcb
into
cmp
nopl
mov
outsb
sti
cmp
sub
addl
mov
xchg
pop
pop
cmp
lahf
insl
push
into
xchg
mov
sub
add
scas
sbb
dec
int3
adc
into
pop
xor
dec
jle
movaps
es
push
inc
imul
aad
mov
pop
nop
popa
and
enter
cli
imul
fs
xlat
push
add
push
hlt
push
inc
push
std
hlt
addl
pop
aaa
push
idivl
dec
or
lds
pop
in
stos
dec
out
lods
jmp
xchg
hlt
daa
adc
inc
add
sub
das
cli
lahf
add
fisubl
pop
pavgb
or
test
lcall
inc
cs
repnz
lods
test
outsl
push
mov
scas
sar
sub
outsl
addr16
mov
mov
inc
outsb
aam
inc
push
in
mull
in
clc
inc
shll
or
hlt
xor
in
and
mov
or
add
out
popf
fdivrl
in
xchg
sub
das
adc
xchg
aad
jge
jg
adc
pop
lods
xor
dec
push
jecxz
jb
push
push
dec
lds
sahf
lret
out
pop
mov
in
sbb
lret
cli
mov
inc
adc
sub
iret
dec
sbb
scas
mov
lahf
and
and
in
stos
xor
cmp
ret
shr
lods
mov
pushl
out
out
adc
push
sub
lock
cmpsb
or
mov
xor
lcall
fnsave
adc
add
lds
aam
add
nop
aam
pushf
jp
mov
loop
xchg
fildl
ret
ss
sbb
mov
dec
and
in
jp
icebp
sbb
test
enter
mov
adc
pop
and
and
cmp
inc
add
add
jno
shl
mov
add
pop
jmp
jne
add
pop
add
test
cld
jne,pt
cmpsb
lock
xchg
rorb
in
mov
xor
jns
xor
adc
add
test
or
fimull
jne
mov
in
stc
ds
ss
ss
outsb
push
xor
out
xor
jo
push
imull
jae
jl
xor
addb
test
or
outsb
stos
add
scas
sbb
cmc
orl
out
in
push
mov
je
loopne
adc
movsb
push
xchg
jp
aad
cltd
int
push
sub
cmpsl
ret
push
add
xchg
mov
mov
popa
arpl
mov
xchg
cmp
dec
shll
dec
sbb
mov
jle
rcll
push
faddl
scas
shl
mov
mov
push
jnp
mov
mov
xorb
mov
mov
scas
xlat
push
int
shr
push
push
mov
sbb
mov
sbb
pop
ret
out
xor
sub
mov
mov
js
insb
fdivrs
jge
xchg
mov
fisttpll
xor
fistpll
fcomps
imul
movl
push
sahf
push
xchg
lret
out
sbb
in
xor
push
shll
out
dec
rolb
fcoms
andb
and
add
add
push
loop
pushf
xorb
sub
repnz
jo
and
mov
fs
lcall
movsb
add
mov
add
xchg
stos
fisubs
dec
repz
into
add
insb
insl
imull
lret
mov
and
xlat
aam
pop
and
lcall
cli
incl
add
xor
jle
les
cld
cltd
adc
mov
sub
cwtl
leave
sbb
ror
dec
inc
jbe
mov
rcl
loope
daa
lea
mov
ret
jnp
loope
push
cli
mov
movsl
movsl
push
sub
fwait
or
adc
inc
loop
jbe
in
or
sbb
dec
or
ss
dec
outsb
insb
rcr
scas
mov
sbb
dec
adc
sub
addb
add
cmp
in
lods
cwtl
push
lock
lcall
jae
movsb
loope
cmp
inc
add
inc
insb
ret
add
idivl
cmp
add
xchg
or
or
rolb
mov
int3
mov
mov
sub
pop
xchg
setle
arpl
pop
jmp
or
mov
sub
mov
jo
push
jo
jnp
test
xor
fxch
xor
cmc
jnp
cmp
fdivr
fimull
aam
lods
aaa
pop
xchg
into
push
cmpsb
xor
xlat
jle
adc
mov
pop
aad
inc
inc
add
es
imul
data16
dec
mov
jle
adc
test
nop
aaa
mov
out
push
xchg
lods
cmp
clc
xor
mov
cmc
andl
or
mov
test
sub
movlhps
inc
into
mov
jo
fistpl
push
insb
fistpll
int
imul
adc
stos
jae
mov
sbb
or
xlat
xor
mov
stos
sub
test
jns
dec
lcall
add
sub
dec
or
rorb
les
in
mov
and
arpl
sahf
fidivrs
mov
hlt
hlt
mov
pushf
or
fsubs
and
int
rorb
jl
aam
xchg
mov
mov
inc
push
inc
outsb
cmp
push
es
mov
lahf
or
push
iret
jmp
icebp
mov
mov
mov
imul
rcll
sbb
loopne
incl
test
aad
cmc
mov
in
xor
sub
das
fbstp
loope
and
or
shlb
enter
orb
sub
std
and
inc
mov
cli
cmp
out
outsb
inc
push
jne
jmp
sub
into
ja
inc
ja
js
mov
fdivrs
shll
out
push
xchg
xor
aaa
popf
cmp
add
xchg
addr16
mov
ss
push
enter
and
ja
daa
outsb
cmp
test
int
mov
cmp
adc
int
xchg
fucom
hlt
push
jbe
sub
push
mov
cmp
jge
movsb
popa
sbb
jb
fcmovnb
sbb
arpl
inc
jae
mov
xchg
icebp
das
sahf
jp
sbbl
insl
mov
repz
pop
mov
stc
out
jg
pusha
and
inc
das
dec
xchg
loop
and
lods
cwtl
push
pop
mov
or
inc
test
add
pop
je
add
arpl
mov
sbb
ss
int3
inc
dec
ror
push
adc
enter
aam
lret
or
pop
movsl
mov
sahf
out
js
push
lock
adc
into
cmp
stc
pop
mov
and
dec
cmpsl
scas
filds
push
pop
sub
lret
sub
addl
rcrl
outsl
push
push
shll
inc
inc
ret
jmp
xor
lret
push
pop
mov
out
xor
aam
shrb
xor
mov
push
in
in
addr16
adc
ja
jns
int
push
leave
jne
mov
xlat
or
jecxz
gs
sbbl
aas
mov
mov
dec
jecxz
mov
xor
xlat
aas
cmp
xchg
decb
out
test
out
adcb
inc
fists
mov
pusha
push
mov
jno
outsb
pop
loopne
movsbl
lock
mov
nop
sbb
lret
and
push
pop
shl
aaa
adc
cmp
imul
xchg
call
xor
pop
mov
inc
repnz
ss
mov
xchg
shll
in
sbb
mov
mov
mov
jmp
cmp
xor
rcrl
pop
dec
dec
iret
mov
and
bound
lahf
jmp
or
in
sub
or
test
jo
cmp
push
jne
dec
mov
aas
loope
mov
and
xlat
div
repz
sub
or
mov
outsl
rcll
dec
imul
outsl
dec
insl
fsubrl
fsubrl
repz
sbb
outsb
mov
aaa
mov
or
dec
adc
adc
shl
inc
push
mov
aaa
rcr
movsl
fwait
mov
sub
mov
jb
pop
jp
ret
jo
int
ret
ret
fisubrl
jl
push
cmp
push
lcall
inc
xchg
aaa
fdivl
mov
sbb
sbbl
mov
movsb
inc
add
add
jbe
dec
jnp
loop
and
fimull
movsb
add
repnz
mov
daa
imul
gs
les
je
adc
scas
cmp
into
xchg
mov
out
imul
pop
or
dec
mov
cmp
cld
xchg
jle
fdivrs
jns
leave
mov
std
and
adc
nop
xchg
sub
mov
lcall
cmp
sahf
add
das
sbb
mov
inc
jae
stos
inc
mov
pop
cwtl
push
aas
loopne
pop
xchg
dec
push
inc
cmpsl
std
test
cmp
out
mov
imul
push
sub
xor
cmp
out
dec
mov
lods
and
test
fyl2xp1
xchg
cli
or
mov
mov
pop
and
cmp
mov
and
iret
and
push
pop
jae
push
xchg
repnz
push
inc
bound
xchg
call
cmp
add
lcall
adc
ret
lahf
sarb
inc
shll
pop
in
loopne
xor
test
loope
fisttpll
inc
fnstenv
mov
aad
in
psrlw
mov
mov
mov
mov
adc
sti
xor
cli
cmp
mov
in
jmp
sbb
push
inc
jmp
mov
mov
fcmove
out
cmpsb
and
mov
pop
fsub
filds
fimull
lahf
or
sbb
sub
fsubl
ds
cmp
orb
dec
mov
stc
mov
and
and
lret
mov
lea
adc
push
push
jae
mov
cwtl
insb
gs
xchg
je
xchg
jl
push
xlat
pop
leave
lret
test
mov
lock
mov
push
enter
scas
dec
cmp
outsb
cs
mov
push
sbb
mov
dec
lahf
push
fwait
mov
push
mov
movsl
nop
leave
jg
out
out
jae
xchg
inc
aaa
icebp
in
cltd
jmp
inc
orb
mov
adc
rolb
push
add
adcb
mov
lds
push
stc
mov
in
inc
add
movsl
hlt
or
nop
or
push
mov
inc
imul
lret
xor
adc
ficomps
fwait
jnp
call
sub
fisubs
dec
rcrl
jae
or
cwtl
mov
xchg
and
push
orl
push
sbb
test
les
add
xchg
cli
mov
adc
mov
sti
negl
int3
pushf
outsb
pop
cmpsb
andl
xchg
bound
push
cmp
fwait
mov
shrb
xchg
das
scas
pop
fistps
cwtl
adc
mov
outsl
pusha
aaa
or
mov
pop
and
insl
xchg
xchg
call
jge
mov
or
dec
dec
lret
rolb
push
mov
out
xchg
sahf
xchg
ds
mov
jmp
mov
or
xlat
scas
test
and
push
ucomiss
cmp
lret
test
out
pop
cmc
int
jne
pop
xchg
sar
inc
cmc
ds
cmp
nop
rorb
je
push
dec
or
jl
lods
sbb
jg
inc
cvttps2pi
sub
pop
cld
test
lds
sbb
jle
add
adc
push
arpl
aaa
dec
les
outsl
mov
xchg
add
pop
mov
popf
sub
lcall
movsl
inc
jns
aaa
fwait
mov
xchg
jnp
pusha
fcomps
jbe
add
stos
fisttps
popa
push
cmp
fisttpl
fiadds
aam
scas
in
or
js
lahf
add
orb
repnz
cmpb
pop
inc
aas
sub
mov
mov
sbb
mov
push
outsb
jae
lret
flds
outsb
cmp
icebp
cwtl
xchg
sub
sbb
lret
and
push
adc
jmp
fdiv
inc
cmp
aad
fmull
cwtl
ror
xchg
pop
repz
ret
out
inc
adc
xlat
push
clc
cmp
dec
jnp
fwait
sub
mov
sub
mov
jge
cli
xor
mov
int
adc
xchg
mov
gs
mov
out
inc
mov
push
xor
mov
sbb
test
mov
add
push
pop
jle
lret
punpcklbw
xor
cwtl
push
mov
inc
sub
lret
lret
xor
inc
sbb
aas
imul
inc
cmp
ljmp
jg
lahf
popa
cmp
jnp
cld
es
cmp
ss
or
lret
mov
outsl
pop
jmp
scas
add
fildl
mov
dec
sbb
push
add
inc
aam
rol
les
and
lcall
repz
push
jle
pop
ljmp
mov
dec
dec
push
xorl
sarl
mov
mov
shll
inc
sub
push
add
lret
pop
pop
or
cmpl
loope
outsl
enter
dec
out
pop
aas
sub
dec
dec
mov
jp
scas
aam
mov
inc
aam
pop
mov
sbb
arpl
mov
and
lret
ljmp
mov
xchg
shl
jp
cmp
imul
xchg
xchg
repnz
jge
cmp
aad
xlat
dec
jb
dec
repz
decl
aam
insb
xor
in
hlt
js
std
push
ljmp
fucomp
xor
test
lcall
aas
sub
insb
adc
xor
mov
in
xchg
inc
sarl
inc
inc
and
or
and
xchg
cmp
scas
into
add
jl
add
loope
mov
sbb
dec
les
cltd
test
scas
in
testb
inc
or
sarl
sbb
subb
iret
mov
xor
pushl
mov
push
jg
jmp
arpl
sti
jno
jp
and
mov
lahf
push
push
sbb
aas
and
dec
lret
ret
rorb
cmp
mov
ja,pn
idivl
rcll
shrb
std
jp
lcall
sarb
sbb
and
lods
addl
pushf
aad
inc
adc
les
cmpsl
stos
popf
add
filds
dec
sbbb
sbb
mov
push
adc
mov
mov
insl
mov
shll
xchg
testl
cs
push
popl
mov
daa
mov
cmp
fdivl
xchg
lret
int
int
dec
cmp
sbb
cmp
sbb
stos
sub
lds
sbb
lret
sbb
bound
test
mov
push
sahf
stos
outsb
lcall
sbb
js
fbstp
ficompl
nop
sub
movsl
xchg
fcoms
inc
mov
inc
push
loop
dec
xor
arpl
sub
std
mov
sbb
ss
pop
fcompl
jge
adc
jg
mov
mov
add
mov
in
stc
in
test
inc
insl
mov
inc
es
xorl
cmc
mov
or
test
stos
sti
inc
sbb
mov
adc
mov
pop
jno
xor
mov
call
inc
jo
jle
int
sub
rorb
fiadds
pop
or
fisttpll
or
xlat
stc
mov
jo
andl
sbbl
pusha
xlat
stc
rcrl
movsb
adc
xorb
pushf
xchg
add
or
insl
sub
sahf
sbbl
push
in
xchg
out
daa
std
popf
pusha
loop
iret
sub
mov
hlt
jecxz
sarb
aad
sub
js
pop
cld
popa
sub
les
push
add
jge
add
sahf
mov
fiaddl
mov
mov
lods
pop
stos
jbe
imul
pop
sbb
mov
add
repnz
cld
orl
or
cmp
jle
popa
insb
sbb
add
out
ljmp
pop
push
xor
fiaddl
test
pop
aas
inc
sbb
jae
nop
push
arpl
dec
int3
jne
or
fimuls
cmp
sbb
insb
cmpb
loopne
ficoml
xchg
in
push
push
cmp
jge
pushl
int3
mov
xchg
mov
lock
je
sub
inc
push
scas
jg
lret
je
sub
xor
add
push
insl
push
pop
and
sbb
addr16
pop
leave
dec
add
sub
mov
or
pop
jp
push
mov
fildll
add
repnz
inc
cmp
insl
in
dec
popf
dec
sub
stos
mov
cmc
pusha
inc
int3
shll
add
into
cmp
arpl
test
dec
and
loop
int
outsb
jns
fistps
pushf
mov
test
sbbb
jnp
mov
pop
cli
jae
imul
int
stos
mov
fidivrl
imul
sub
nop
push
inc
xchg
sahf
mov
in
mov
cmp
repnz
scas
into
test
jecxz
push
idivb
stos
popl
mov
adc
pop
sbb
jecxz
or
les
add
daa
xchg
push
arpl
and
pop
pop
or
xlat
xor
push
dec
inc
stos
jns
or
mov
or
mov
test
sub
aad
or
data16
pop
adc
pushf
xchg
ja
mov
adc
cmp
sti
pop
popf
lods
lods
inc
mov
jnp
mov
movsl
psubsw
push
lret
inc
mov
mov
repnz
xchg
ljmp
cmp
mov
repnz
mov
push
cmp
pushf
bound
adc
pusha
cmp
mov
outsl
dec
mov
sbb
mov
add
aas
sub
pop
iret
mov
inc
daa
mov
loope
push
jecxz
ds
lock
jmp
sbb
lret
and
or
addb
pop
pop
jb
es
mov
mov
bound
andb
sbb
decb
sbbl
mov
ljmp
cmp
es
xchg
push
or
es
insb
sub
adc
mov
mov
push
scas
mov
push
data16
sbb
lods
push
rclb
mov
cmp
loopne
ds
sahf
xchg
jl
xor
ffreep
sub
cmp
movsb
mov
testb
jns
mov
orb
fcmovu
add
aam
popf
popf
jae
sbb
mov
inc
aaa
mov
andb
cmp
or
mov
mov
cmpsl
sahf
or
dec
jns
clc
lahf
insl
mov
jge
push
loop
data16
xchg
cmp
mov
add
es
cmpl
dec
mov
mov
fnsave
inc
loopne
sub
lock
ja
rcll
add
shrl
and
mov
test
mov
data16
jg
loope
daa
dec
lock
pop
je
arpl
adc
xor
aam
ret
xor
in
dec
add
mov
fs
in
mov
loope
arpl
inc
sub
cli
mov
mov
fiaddl
icebp
clc
adc
mov
shlb
lret
jl
pop
mov
add
jo
js
adc
cwtl
popf
mov
pop
and
nop
adc
js
loope
push
push
lcall
pop
ret
frstor
fwait
orl
imul
outsl
icebp
sarb
xchg
cmp
imul
ret
popf
adc
dec
jno
movsl
adc
push
pushf
adc
push
cmc
adc
imul
bound
xor
xor
ret
jmp
jl
loop
push
arpl
cli
mov
aaa
dec
jle
dec
jmp
cmpsl
out
mov
pushf
gs
scas
mov
and
adc
or
xchg
and
mov
lret
shll
cmc
mull
xor
jge
xchg
mov
mov
inc
movsl
out
or
pop
mov
mov
cltd
lds
lods
sti
xor
jmp
jge
mov
sbb
test
fistpll
cvttps2pi
dec
jg
mov
in
pop
pushf
or
lret
jle
in
lret
jmp
cltd
sbb
in
arpl
pop
ret
cmpsb
sahf
pop
pop
adc
loop
xchg
mov
cwtl
lret
lahf
mov
nop
mov
cmpl
adc
push
inc
mov
adc
sub
and
cld
das
call
pusha
ret
sub
lret
push
lahf
dec
shlb
adc
sub
test
mov
sti
jg
popa
outsb
les
stos
pop
mul
mov
ds
dec
idivl
mov
into
pop
pop
xor
cld
mov
mov
xor
daa
dec
jp
jb
imul
lret
nop
pop
shl
aam
repz
xchg
nop
pop
gs
inc
jmp
adc
out
popf
daa
mov
mov
mov
cmp
cmc
rclb
mov
sbb
arpl
insl
aas
sbb
outsl
gs
jae
sub
xor
push
pusha
mov
ret
sbb
lret
jnp
mov
mov
ret
push
jmp
int
or
jp
sarl
test
fcmovne
sub
sub
popl
pop
scas
and
jle
sub
iret
xchg
mov
inc
aad
fildl
sub
fdivr
ret
xor
ja
ja
add
ret
inc
int
cmc
sbb
ret
addr16
xchg
movsb
test
pop
inc
cmc
loop
js
and
mov
movb
ds
push
inc
fsubrp
jge
mov
push
js
call
mov
repz
test
mov
add
cmp
add
fstpl
es
imul
mov
mov
lods
imul
jo
ja
push
insb
cmp
imul
and
add
data16
push
pop
mov
pop
cmp
inc
in
mov
repz
mov
addr16
pop
mov
dec
mov
adc
push
xchg
or
add
test
push
xor
push
movsl
pop
jae
inc
dec
adc
ret
cmp
test
push
test
inc
ror
test
and
lcall
xchg
push
mov
xchg
sub
popa
jno
xor
mov
out
insl
ja
push
out
out
bnd
xchg
stos
insb
push
and
dec
and
and
jmp
cmpsl
cmpsb
jg
jnp
bnd
add
in
iret
push
push
dec
mov
jns
mov
xchg
jne
mov
insl
mov
aad
dec
fldl
imul
nop
divb
out
out
call
mov
inc
or
in
push
jns
data16
enter
inc
xchg
sub
jg
jbe
inc
mov
jge
xchg
fsubr
int
shl
and
outsl
jge
and
sub
and
adc
sbb
test
repz
push
stos
hlt
nop
aad
loope
mov
test
sub
stc
pop
out
add
stc
xor
jo
icebp
pushf
aad
repnz
pop
jle
mov
clc
or
jnp
das
lds
aad
adc
xor
gs
dec
xor
ret
in
or
repnz
test
sbb
mov
inc
mov
mov
inc
sbb
xor
repnz
cld
add
es
xchg
dec
dec
out
scas
adc
je
cmp
je
adc
fsubrl
es
test
and
add
cmp
cli
cmc
push
movsw
mul
cmp
outsl
jg
dec
outsl
js
or
mov
sbb
out
mov
orl
lock
stos
inc
push
pop
loope
add
xchg
or
pushf
jmp
lock
jmp
sbb
mov
rcrb
cwtl
icebp
lcall
lcall
repnz
bnd
push
out
mov
out
jp
scas
movsl
or
jns
push
addl
push
sub
mov
in
ss
pop
mov
push
sbb
sbb
push
cmp
pop
xchg
sub
and
dec
cltd
fidivrs
mov
or
stc
test
mov
in
mov
fldenv
lods
lods
js
xor
out
addr16
fstpt
stos
mov
sbb
cltd
jns
in
xchg
pop
loope
in
jnp
dec
mov
dec
inc
aaa
fidivl
movsl
cmp
int3
jne
cmp
pop
push
out
scas
jl
push
mov
dec
sub
bound
jmp
jb
in
pop
jbe
fistpll
fisttpl
dec
into
lcall
cmp
into
clc
stos
push
fadds
cmp
fisubl
sarl
call
scas
push
dec
xor
ss
pop
lods
insl
pushf
ret
in
cmp
push
pop
fs
xor
jb
fs
inc
or
sbb
std
dec
cmpsl
sbb
dec
add
sub
ret
lahf
or
mov
xchg
adc
ja
adc
mov
xor
mov
out
sahf
out
out
shlb
adc
test
jno
mov
les
adc
icebp
jo
jg
les
cmp
add
das
cli
fwait
cmp
mov
sbb
mov
jle
js
stos
adcl
xchg
xchg
or
scas
jno
cmp
fbstp
ljmp
ret
mov
enter
std
mov
mov
mov
dec
jecxz
sbb
mov
sub
mov
cmp
rcrl
test
lret
aas
bnd
test
arpl
shll
int3
int3
scas
out
ljmp
std
add
jle
add
divb
jecxz
mov
and
insl
lock
add
bound
stos
xchg
popa
xor
cmovb
jbe
mov
dec
xlat
push
out
jp
cmpsl
sbb
clc
pop
cmp
jno
adc
and
mov
sbb
cmpsb
jno
aas
push
push
repnz
aad
add
leave
push
and
leave
insb
dec
mov
ret
cltd
stos
mov
inc
lret
xchg
pop
adc
scas
out
inc
cld
rolb
les
test
ret
in
pushf
inc
mov
cmp
xor
mov
scas
in
imul
push
and
gs
push
cli
pop
jno
sarb
push
out
ljmp
es
push
neg
out
cmpb
cld
lahf
or
cmc
mov
inc
fldl
xchg
push
push
les
cli
stos
sbb
mov
lock
inc
xor
xor
xchg
jmp
pop
js
adc
inc
stos
out
xor
scas
sub
inc
sub
subl
sbb
out
insb
ja
jne
lret
mov
mov
dec
push
xchg
scas
adc
push
in
lahf
dec
imul
and
push
fs
jmp
mov
xchg
mov
shl
mov
push
cltd
mov
inc
lods
push
pop
test
dec
inc
mov
xchg
fs
cmc
push
mov
cmp
dec
out
or
adcb
ret
add
jnp
ret
cmpsb
int3
inc
adc
xor
inc
push
into
cmp
inc
xor
jae
test
pop
pop
outsl
and
dec
and
dec
jns
adc
flds
cmp
push
nop
and
fsubrs
fs
mov
scas
pop
add
dec
adc
sub
mov
je
das
jmp
inc
loop
adc
ds
sbb
js
lock
mov
clc
repnz
icebp
clc
lcall
pop
in
xchg
pop
inc
daa
lret
sub
and
test
push
adc
push
mov
jno
cmc
pop
sti
add
cmpsb
adc
std
add
scas
imul
sub
jo
pop
mov
into
outsb
movsl
push
aas
popf
adc
lcall
pop
inc
fs
xor
decb
jl
incb
sbb
add
std
dec
and
js
lods
test
shl
sub
xor
out
pushf
mov
xchg
xchg
insl
jge
xor
in
mov
icebp
add
cld
cs
pop
and
mov
fs
addr16
hlt
aad
adc
xchg
adc
inc
pop
mov
in
cmp
sbb
das
pop
ja
subl
mov
mov
inc
pop
std
push
bound
fdivr
loopne
fildl
insb
dec
movsl
jmp
mov
insb
mov
in
movsl
ficoml
test
push
add
lods
dec
and
jb
mov
mov
add
pop
rorb
and
movsl
test
fbld
pop
or
sbb
jle
pop
pop
and
aam
jecxz
js
dec
and
outsb
leave
and
data16
mov
cmp
mov
dec
cmp
movsb
or
addr16
lret
cld
ljmp
cmpl
orl
cmp
cmp
clc
mov
scas
addr16
push
mov
pop
outsl
xchg
mov
ja
cmpb
dec
stc
or
mov
inc
mov
fwait
cmpsb
lcall
add
pop
clc
sbb
fdivl
jecxz
xchg
popl
mov
lcall
lret
stos
adc
repz
jp
shrl
dec
out
dec
xor
cli
xchg
loop
and
in
sbb
lret
lahf
add
leave
js
pushf
jp
or
mov
cmp
imul
out
adc
mov
rcr
sbb
incl
xchg
test
loop
xlat
icebp
pusha
cmp
xchg
dec
jbe
dec
int
cltd
js
fldcw
in
push
enter
std
lret
filds
pop
push
out
insb
push
add
cmp
sbb
sub
jo
mov
cmc
pop
cld
cltd
loopne
inc
mov
rolb
inc
bound
loop
inc
jo
xchg
insb
je
das
out
fimuls
xor
dec
test
addb
and
rcll
mov
cmp
lret
xor
sub
jne
scas
xor
adc
faddl
cmp
cli
xchg
xor
sahf
pop
push
cltd
push
mov
scas
daa
sahf
imul
fnstenv
adc
xchg
jmp
ret
or
add
inc
jne
fdivrs
push
stos
maxps
mov
xchg
in
pop
scas
inc
and
jle
inc
mov
nop
lods
outsb
aam
or
pop
jmp
mov
mov
add
push
in
int
or
sbbl
dec
ss
xchg
jne
adc
in
sbb
or
in
cmp
jns
push
scas
add
push
fadd
sbb
push
in
jg
shrb
push
jb
mov
xchg
xlat
aam
or
subb
inc
mov
rcrb
pop
xchg
push
push
or
inc
dec
and
cs
or
sub
repz
push
push
fmul
les
sub
xor
test
jmp
test
imul
dec
ljmp
jl
or
jg
cmp
loop
sbb
adc
test
aad
sub
std
mov
cmp
inc
dec
cmp
ds
and
adc
lcall
pushf
mov
sbb
add
cmp
mov
sub
xchg
jg
fcoms
lods
pop
push
sub
push
sbb
aad
ret
cmpsl
cmp
add
inc
cmpsl
dec
dec
lds
test
cld
mov
jb
push
and
cs
cmpb
sahf
lea
or
insb
lods
test
lods
dec
sbb
cwtl
lret
jo
dec
out
lods
inc
jl
inc
idivb
sbb
jge
fstl
mov
stc
add
sarb
cltd
ljmp
or
test
and
and
inc
and
mov
test
test
dec
mov
stos
xchg
cmp
mov
xchg
cld
xchg
jnp
test
hlt
xchg
loop
push
adc
mov
sub
iret
test
das
rorb
push
adc
popa
jmp
push
mov
jp
ds
jnp
push
pop
out
daa
xchg
xor
xor
or
rsm
push
inc
fcoml
adc
jmp
inc
mov
dec
movsb
jnp
cs
test
in
je
ds
test
addr16
or
xor
mov
add
adc
pushf
leave
and
dec
or
dec
dec
jl
cwtl
jns
xchg
addl
xchg
iret
mov
mov
lock
pop
pop
xchg
frstor
mov
das
mov
cmp
ja
jb
pop
cmpsl
mov
add
fsubrl
lods
adc
mov
imul
scas
xor
push
adc
test
sti
aaa
mov
mov
mov
je
xchg
push
adc
jg
push
insl
cmc
aaa
outsb
and
gs
test
push
in
repnz
imul
leave
or
test
into
xchg
mov
add
cs
mov
inc
xchg
in
imul
mov
in
mov
aad
cmp
aaa
push
xchg
fwait
and
js
clc
jns
ljmp
sub
arpl
pusha
gs
repnz
out
cmpl
xor
in
xorl
pop
inc
movsl
xor
push
push
scas
xchg
enter
mov
ja
xchg
push
cmp
mov
mov
push
push
jns
out
push
mul
addb
fsub
jl
and
or
repz
xchg
mov
sbb
or
aad
inc
xchg
cmp
sbb
mov
inc
adc
fisttpll
adc
ficoms
fwait
lea
jge
jo
stos
dec
sbb
jge
xchg
sbb
testl
fwait
inc
rcrl
push
push
xor
je
insl
xor
sub
pusha
cmp
loope
mov
sbb
push
dec
push
shll
sub
xor
test
jl
mov
mov
cmpsl
dec
fdivl
cmp
pop
sub
push
dec
aas
xchg
sbb
roll
jge
sbb
jge
xchg
mov
xor
inc
bound
or
cmc
mov
push
mov
frstor
sahf
mov
lret
mov
and
outsl
enter
out
cmc
fwait
bound
loope
push
adc
iret
xor
out
iret
lahf
lock
xor
stos
in
and
pop
lods
xor
dec
cmp
mov
inc
dec
push
pop
adc
fs
push
mov
fdivs
jp
insl
and
xlat
add
sbb
hlt
out
and
daa
or
insl
outsb
mov
and
mov
leave
and
add
in
sbb
add
xor
imul
and
andl
outsl
arpl
testl
imull
jge
or
test
incb
add
push
popa
pop
and
cmc
shll
push
add
sub
mov
lret
sbb
movq
jmp
ds
push
xchg
jmp
cs
cmp
adc
shrb
loopne
das
iret
in
cmp
scas
ret
ror
clc
mov
fdivl
dec
addr16
leave
pop
stos
xchg
outsl
mov
xchg
xchg
outsl
cli
fwait
jmp
rclb
push
adc
int
push
ljmp
shrb
mov
rcll
fdivr
dec
sub
fs
loope
sbbl
cmp
popa
iret
adc
std
inc
imul
int
shlb
mov
and
out
mov
xchg
and
mov
sub
ret
ret
bound
ljmp
jae
cmp
add
pop
pop
push
sbb
fstpl
into
inc
in
dec
jo
mov
fistps
dec
jmp
cmc
pop
scas
xchg
pop
inc
add
leave
and
das
add
mov
cmp
arpl
xchg
bound
repnz
pop
cwtl
mov
cld
jge
daa
sbb
jp
xor
lahf
mov
xor
jl
push
popf
mov
outsb
or
pop
sti
ffreep
and
fs
inc
cmp
add
lods
call
lea
add
sti
daa
inc
cmp
push
lret
push
cmpsl
or
jcxz
push
ret
out
test
or
xor
shl
hlt
cmp
icebp
cmp
jmp
aad
pop
aaa
or
push
mov
mov
out
pusha
in
mov
int3
aaa
xchg
dec
xorb
sahf
jg
arpl
mov
push
mov
lret
xchg
and
cmpsb
mov
ss
test
mov
and
insl
or
inc
and
mov
int
mov
int3
imul
mov
sbb
pop
add
mov
adc
testb
jbe
sahf
xchg
dec
aaa
aad
movsl
push
dec
out
mov
xchg
fimull
mov
rcrl
insl
in
cs
adc
push
and
ja
push
lcall
adc
das
dec
test
and
jbe
xor
pushf
dec
sub
test
push
push
hlt
sub
scas
into
dec
cmp
fistl
dec
jge
hlt
sbb
gs
pushf
add
faddl
arpl
dec
test
into
adc
xor
sub
push
stos
ljmp
pop
pusha
push
xlat
in
jae
jmp
xchg
hlt
bound
scas
das
jae
xor
ja
ret
mov
adc
xor
shrb
inc
mov
sub
repz
aam
arpl
lea
add
add
cmpsb
add
scas
lock
mov
push
pop
xchg
loope
pop
stc
fwait
in
rorb
lods
mov
stc
imul
or
xor
ret
push
adc
in
aad
mov
out
arpl
gs
add
mov
sbb
sbb
fs
or
and
inc
in
add
sub
pop
and
ss
test
fiadds
push
stos
sub
xchg
jge
lods
dec
rcrl
xchg
repz
sbb
jo
push
aad
xchg
xor
outsl
push
pop
icebp
loopne
sub
mov
sbb
mov
inc
testb
add
loop
ficomps
repnz
jo
int
add
add
pop
fcomip
fmull
imul
jecxz
es
cs
lret
sub
xchg
movsb
inc
xchg
lods
cmpsl
out
pop
je
sbb
or
inc
mov
inc
jmp
fs
mov
jp
imul
pop
inc
xchg
pop
jo
jmp
and
jmp
int3
pop
push
inc
push
sub
sub
mov
cs
mov
sbb
inc
cmpsl
ja
pop
push
add
loope
mov
or
cltd
fmull
mov
jecxz
mov
ljmp
mov
vrcpss
mov
stos
ljmp
out
aaa
adc
movsb
js
mov
dec
notb
repnz
popf
dec
fldt
sub
out
mov
in
mov
lea
mov
sahf
ljmp
test
mov
inc
xchg
fs
int3
jge
add
xorb
dec
enter
insb
scas
jnp
leave
push
mov
mov
inc
and
scas
sbb
orb
jmp
ds
mov
xorb
andl
push
stos
mov
stos
mov
xchg
fists
mov
adc
subb
clc
cld
fldcw
std
test
pop
or
lahf
or
add
cmp
lahf
push
cli
sbb
ljmp
cmp
sub
call
jmp
and
adcb
add
mov
sbb
cmp
ror
outsb
fld
mov
mov
mov
xchg
scas
xchg
mov
repnz
and
and
in
and
das
lahf
add
lds
jge
jg
xchg
dec
pop
and
push
pop
and
inc
pop
out
pop
stos
mov
mov
testb
mov
cmc
push
out
outsb
cwtl
imul
outsl
and
pop
repz
push
bound
subl
fxam
in
fildll
int
andl
cmc
inc
std
push
test
je
lcall
in
std
adc
ljmp
mov
push
inc
push
shl
pop
ds
pop
mov
jp
sbb
shlb
stos
frstor
es
sarb
sahf
pop
add
mov
jb
test
fwait
inc
sub
mulb
repnz
or
jmp
push
push
popf
jmp
fdivs
xor
xchg
push
add
xchg
xchg
push
xchg
test
xchg
mov
and
xchg
pop
icebp
pop
add
pop
jb
dec
or
dec
leave
movsl
andl
ja
ret
test
xchg
nop
addr16
sti
push
scas
add
mov
xor
mov
shr
mov
aas
pop
cmp
cltd
xor
jg
sub
pop
xlat
inc
adc
cld
mov
jbe
cmpsl
scas
test
push
and
or
jl
mov
imul
dec
and
add
push
call
cltd
in
addr16
out
sub
dec
jne
aaa
ror
mov
dec
pop
mov
outsb
pop
repnz
je
mov
add
fstpl
push
jne
mov
and
inc
comiss
sub
cmp
mov
lock
add
inc
outsb
icebp
sub
jl
rcll
xchg
psubusw
leave
movups
jbe
mov
test
cmpsl
insb
and
mov
add
add
or
xchg
hlt
pushf
not
jno
aaa
sbb
cmpl
movsb
sbb
fxch
or
andl
xchg
jbe
mov
jnp
mov
mov
or
inc
rcr
cmp
into
mov
cmp
jecxz
jb
outsl
push
and
pusha
popf
dec
ret
test
cltd
fwait
enter
adc
push
test
mov
mov
ret
jnp
cs
lods
pop
dec
adcb
adc
rcll
lahf
cmp
and
out
data16
jnp
rcrb
sbb
jmp
ja
pop
test
ds
shrl
nop
push
inc
pop
shlb
push
jle
repz
andb
xchg
cs
mov
add
adc
or
push
mov
rolb
fbld
and
enter
or
fldcw
jecxz
mov
inc
lods
add
sti
xchg
xor
pop
lahf
clc
out
xor
push
addr16
cmp
xchg
pop
std
insl
andb
and
dec
cmpsb
cmpb
out
lock
xlat
fcmovnb
jnp
imull
adc
mov
pushf
add
mov
sbb
rcrb
outsb
pop
imul
push
cmpsl
push
es
sbb
jo
es
push
jecxz
and
mov
adc
sub
xchg
mov
xor
nop
push
lahf
push
cmc
cli
imul
jl
int
xchg
or
js
popa
out
mov
cmp
cmc
mov
stos
pop
cmp
in
lcall
sbb
loopne
sahf
ret
or
xchg
fwait
sub
inc
and
sarl
mov
add
nop
dec
or
dec
dec
xor
mov
popa
in
jle
or
cmpsl
inc
dec
scas
jo
repnz
sbb
loop
andl
mov
shlb
repz
adc
adc
jg
mov
push
jmp
mov
cs
cmp
pusha
movsl
push
stos
adc
ss
scas
push
ja
xor
cmpsl
cltd
or
xor
mov
xchg
pop
xorb
jae
out
jns
sbb
orb
loop
jge
xor
jle
sub
dec
les
scas
dec
dec
nop
lock
xor
xchg
add
scas
cmp
dec
leave
fs
mov
cltd
adc
dec
push
or
jecxz
fcoml
cwtl
popf
icebp
std
shll
sahf
cli
lea
and
jg
lea
pusha
sar
and
or
sti
test
sub
popf
jb
or
addr16
adc
jmp
xor
push
sbb
dec
jecxz
outsb
jb
lcall
into
cmp
lcall
dec
push
push
jnp
inc
je
cmc
adc
js
push
pop
mov
pop
xor
dec
inc
pop
mov
mov
pop
cmp
outsb
int3
mov
jg
pop
jo
pop
sub
jmp
or
mov
jo
cmp
sbb
sbb
imul
nop
iret
fwait
pop
push
jbe
cmp
pusha
cmc
xchg
test
cltd
loopne
jbe
lods
fwait
adc
add
or
sub
mov
and
adcl
cltd
cs
cmpb
pop
and
inc
sub
ficoml
jecxz
dec
xchg
mov
fs
adc
es
mov
or
mov
adc
sub
sub
je
adc
div
push
data16
xor
or
cmp
push
leave
mov
lds
cmc
dec
jae
push
mov
out
inc
sub
dec
adc
iret
cmp
fisttpl
daa
sti
jbe
cmp
out
cmp
mov
sub
sar
out
pop
mov
lods
mov
push
and
dec
out
pop
aam
data16
inc
nop
cmp
mov
mov
xor
adc
or
pushl
push
mov
rorb
jnp
sub
je
and
pop
rclb
jg
cmp
ret
dec
push
pop
mov
enter
mov
cmc
daa
jmp
pop
inc
mov
lcall
scas
clc
push
je
rolb
sub
cmpsl
or
jb
push
ljmp
sub
mov
aam
xor
sbb
pop
inc
je
ljmp
push
cmp
shlb
adcb
mov
cmp
xchg
xor
nop
mov
jae
test
xchg
bound
addr16
fsubp
fiadds
adc
ja
arpl
loope
or
pop
andl
fldt
fdivrs
jno
sbb
hlt
das
inc
adc
xchg
and
fbld
mov
sbb
mov
jle
into
mov
and
xchg
test
cmp
xor
fsubs
mov
sbb
mov
and
lock
test
push
outsl
into
xchg
mov
hlt
jge
push
push
cmc
das
fs
fwait
sbb
jmp
out
add
stos
jmp
mov
pop
jnp
mov
out
push
mov
jae
jbe,pt
and
leave
add
ss
and
sub
inc
mov
jmp
pop
mov
xlat
or
lret
outsl
lock
mov
sub
pop
rorb
aas
fsubp
in
rcrl
cmc
push
add
fimull
fcoms
xor
gs
jmp
add
lea
test
adc
loopne
aad
xor
movsl
mov
push
cmc
jmp
or
cltd
push
inc
testl
push
add
fildll
sbb
lcall
inc
icebp
and
pop
cmpl
xor
mov
loope
add
dec
push
ret
je
xor
movsb
mov
out
and
xchg
cmp
movsl
shlb
xor
sub
jg
fsubs
leave
or
push
in
add
cmp
test
cmp
stc
and
jle
imul
sbb
pop
jl
dec
cmp
mov
pop
into
xchg
sbb
divb
sub
pusha
push
inc
ficomps
fbld
rolb
nop
out
das
in
cmp
icebp
sbb
into
jg
inc
lret
sub
jb
cmp
inc
loope
sub
sub
cmpsb
out
add
cmp
sub
adc
mov
push
pop
inc
fwait
pop
es
ret
lcall
out
push
push
frstor
test
xor
hlt
mov
cmc
stc
sub
lock
mov
repnz
mov
mov
call
cmp
push
xchg
push
out
bound
and
pop
sbb
xor
loopne
and
jb
aaa
mov
stc
loopne
into
inc
add
jo
pop
mov
push
divps
aam
cmp
lret
or
jl
stc
pop
and
mov
test
adc
jne
jne
movsl
fildll
or
sahf
icebp
jle
push
dec
inc
pop
scas
movsb
add
jb
dec
nop
scas
mov
mov
mov
mov
je
ds
sub
data16
xchg
lahf
dec
mov
push
lahf
rorb
scas
lods
roll
imul
subb
rorb
movsl
mov
and
sbb
pop
cs
mov
mov
mov
imul
cld
and
add
jp
out
mov
mov
lds
mov
or
into
mov
xorb
enter
pusha
or
jno
pop
sahf
mov
aaa
out
and
insl
ss
mov
in
cwtl
jne
lcall
rcll
pop
mov
loope
adc
in
sub
push
sbb
shlb
inc
jns
pop
push
mov
pop
cwtl
flds
xchg
pop
inc
loopne
fdiv
mov
cmpsl
or
cmp
imul
mov
test
lds
xor
add
add
lcall
fnstcw
out
stos
cmp
cmp
popf
jnp
cld
int3
cltd
fst
mov
and
mov
aaa
sub
pushf
ret
dec
fstpt
enter
aaa
pusha
mov
loope
sbb
xchg
mov
leave
insb
sbb
movsl
loop
fmull
imul
icebp
aad
xchg
adc
ja
sbb
js,pn
aaa
mov
pop
and
pop
push
adc
xchg
cmp
sub
mov
push
or
or
or
lds
out
aad
cmp
mov
scas
loopne
sub
xchg
adc
cwtl
ficomps
jmp
sarb
xchg
dec
push
push
int
stc
es
loope
scas
fiaddl
jae
dec
enter
mov
push
out
rorb
outsl
mov
inc
ret
xchg
adc
cmpsb
xor
popa
jg
and
aaa
add
sbb
stos
xor
jnp
js
mov
stos
mov
cmpl
add
mov
int3
jmp
pop
mov
or
or
cmp
add
jle
rclb
jo
jmp
ja
push
sahf
cmpsb
cmpsl
sub
jnp
push
out
insl
test
sbb
pop
inc
jno
pop
dec
test
sub
lret
repz
mov
sub
inc
in
push
hlt
lret
enter
lret
push
sbb
push
and
xchg
xchg
mov
jg
jo
xchg
pop
xchg
push
or
and
mov
add
daa
cmp
sub
dec
jle
or
andl
jmp
xlat
ljmp
orb
and
fisttpll
mov
adc
cmpsb
xchg
cmp
cmp
add
sbb
je
imul
sbb
ret
jge
add
aas
std
repz
push
cmpsb
daa
mov
pop
inc
push
lret
test
fdivrp
clc
xchg
fsts
out
push
and
jg
les
inc
inc
adc
push
cmp
rorl
stc
dec
pop
push
aam
or
jecxz
rcll
mov
ret
xchg
lret
jp
pop
mov
add
lods
and
sbb
call
aam
push
push
adc
and
and
add
dec
imul
mov
out
xchg
lods
mov
mov
les
sub
mov
sub
sub
adc
mov
or
cs
inc
pop
movsl
cwtl
lahf
cmp
push
xor
xor
xchg
mov
sbb
mov
push
out
cmp
movsl
sub
sub
xor
jle
popf
sbb
push
sub
pop
cmp
and
jp
xchg
cld
or
fmull
fstpt
scas
int3
cmp
cmc
sbbl
pop
cli
dec
pop
jb
xchg
adc
mov
push
repnz
in
addr16
cmp
into
jnp
flds
into
lahf
and
sub
lea
jmp
movsl
mov
rolb
lret
mov
ficompl
loop
ret
mov
outsb
push
movsb
fistps
out
inc
test
pop
push
movsl
jns
sbb
ds
mov
inc
stos
mov
mov
mov
xor
jno
icebp
mov
lea
push
jmp
inc
bound
fnstcw
das
push
in
mov
jg
pop
xchg
jno
loopne
xorb
sbb
or
xchg
sahf
js
sbb
sti
push
rcr
push
loope
sbb
push
jbe
iret
dec
nop
inc
das
hlt
cld
push
sahf
nop
adc
jmp
iret
fisubrs
or
fsubs
push
lods
mov
jp
jge
test
xchg
and
cs
push
enter
jb
jnp
pop
fs
push
loop
pop
stos
addl
dec
lock
das
test
mov
in
mov
mov
dec
push
push
dec
push
ret
xor
mov
outsb
rolb
xor
and
pop
push
pushl
pop
dec
psubd
and
clc
sbb
add
xlat
xchg
sbbl
mov
xor
pop
mov
add
xor
sub
mov
cmpsb
jmp
orb
push
out
out
pop
add
repz
and
pop
adc
mov
push
roll
cmpsb
pop
sub
sbb
push
cmp
cmp
jmp
xchg
dec
mov
sbb
push
add
addr16
call
data16
push
fcompl
push
mov
cmpsb
push
pop
mov
mov
or
repz
push
je
add
cwtl
fdivrs
cmp
lret
cmc
sub
jne
sub
out
xchg
test
pop
repnz
lcall
mov
mov
imul
insl
mov
stc
xor
inc
jge
xchg
pop
bound
outsl
ss
sub
lods
mov
pop
test
insl
andb
xor
testl
cmpsl
js
or
fdivs
cmpsb
mov
mov
popf
or
repz
mov
lock
popa
xor
add
sub
enter
test
push
push
mov
jne
jno
mov
stc
fiadds
inc
cltd
movl
push
ljmp
inc
inc
dec
loope
add
xor
lds
jne
adc
sbb
xchg
stos
mov
mov
clc
repnz
mov
inc
mov
push
es
scas
repz
outsl
mov
cltd
jne
das
ds
gs
aam
in
stos
cmpsb
inc
out
mov
jne
cmp
jp
fbstp
fimuls
and
enter
lahf
test
repnz
sub
lret
push
popf
clc
xchg
inc
push
mov
mov
outsl
and
mov
dec
push
xchg
fsubs
push
in
aaa
inc
or
rcrb
rclb
mulb
adc
push
test
xor
xlat
mov
adc
leave
movsl
pop
jo
sbb
jp
xor
pop
mov
insb
stos
shlb
jno
je
outsl
inc
inc
inc
loope
push
cmp
add
and
ljmp
xchg
test
outsb
je
mov
fsubrs
movq
push
and
mov
hlt
data16
mov
or
mov
pop
mov
push
aas
or
ljmp
push
out
pop
in
or
sub
fnstcw
xchg
aas
jge
out
sub
and
lret
rcrl
stc
mov
pop
xchg
aad
jmp
add
add
xor
xchg
arpl
xchg
imulb
cli
insb
adc
lods
mov
lret
aas
mov
les
mov
mov
mov
sub
rorl
pop
andb
test
or
fcoml
nop
add
jbe
rcl
scas
push
sbb
loopne
cmpb
or
push
test
test
dec
ret
es
aam
jnp
mov
xor
repnz
and
aam
rorb
jo
and
aam
cmp
popf
fs
lds
cmp
or
push
sub
inc
hlt
push
fistpll
and
cmp
in
outsl
cld
jg
jno
dec
jle
jbe
push
out
mov
dec
xlat
outsb
inc
sbb
push
movsb
sbb
or
push
insl
pusha
inc
daa
imul
stos
push
je
jp
arpl
sub
adc
movsl
shlb
cmpsb
mov
mov
arpl
mov
repnz
sarl
enter
fstpt
test
ret
mov
pop
mov
out
or
loop
imul
cmpsb
fmull
ja
mov
loopne
cmp
dec
push
or
dec
inc
nop
fisubl
jno,pt
jge
sbb
xorb
sbb
cs
fisttpl
icebp
addr16
imul
fcmovb
out
and
out
fs
pop
out
jb
lcall
fmul
lret
xchg
xor
xchg
je
fimull
aas
loope
pusha
lock
add
es
sub
mov
inc
out
iret
insl
lock
mov
test
outsb
movsl
repz
and
int
stc
xor
push
stos
add
sbbb
addl
insl
ja
adc
fcomi
pop
sbb
negl
pop
inc
clc
scas
sub
xor
mov
mov
std
faddl
dec
movsl
jp
adc
mov
out
mov
jnp
dec
mov
jmp
repz
sub
fidivrl
sahf
cmc
cs
jp
mov
sbb
push
cmp
jns
or
mov
cmp
aas
push
dec
mov
movsb
popf
add
jb
loope
cwtl
js
sbb
xor
orl
aam
add
lds
call
out
xchg
hlt
fsubr
mov
mov
cltd
js
pushf
adc
test
xchg
or
add
icebp
fcomip
cmp
add
cmpsb
add
popf
scas
cmpsb
sahf
push
sub
and
cmpsl
xchg
insl
lds
xor
xor
dec
imul
jae
mov
ds
pop
mov
cmp
loopne
push
js
lret
cs
inc
mov
js
int
sbb
push
xor
out
adc
add
lcall
jno
and
jmp
out
adc
inc
or
xorl
jg
sbb
or
popa
inc
and
mov
test
jecxz
xchg
add
ret
enter
je
daa
cs
mov
data16
hlt
movsb
rcrl
pop
fdivs
fwait
iret
push
or
sub
lock
arpl
xrelease
cli
lods
movsb
mov
sbb
jnp,pn
stc
cwtl
mov
divl
lret
cmpsl
data16
hlt
inc
jb
inc
dec
sub
xchg
data16
sbb
push
repz
mov
cmpsl
into
jl
xchg
add
js
sub
pop
popa
xchg
jg
test
rol
ret
aam
cmp
imul
dec
dec
mov
and
imul
push
push
push
push
adc
fadds
roll
icebp
fists
mov
mov
pop
ja
addr16
jo
push
orl
mull
mov
inc
xchg
insb
or
xor
lret
stos
add
jnp
hlt
pop
data16
xchg
pop
jo
into
sbbb
aaa
push
out
mov
mov
jns
push
cmp
and
or
jo
adc
mov
pusha
cltd
fcmovnbe
xlat
sub
jo
jp
dec
mov
push
push
sbb
loop
push
push
mov
xor
cli
cmpsl
mov
mov
outsl
fwait
mov
loopne
movl
pusha
sbb
ret
or
int
jnp
mov
pop
pop
dec
jne
cmp
xor
push
daa
out
inc
test
xor
mov
sub
repnz
pop
sarb
sub
loopne
and
scas
scas
inc
lcall
or
and
sub
add
sti
lods
inc
loope
ret
mov
popf
cmp
or
por
push
es
mov
pop
mov
fdivrl
jecxz
sub
cmp
jne
xchg
int3
inc
and
dec
enter
sbb
scas
gs
cmpsb
fsubs
aad
dec
lea
xorl
jg
pushl
inc
int
or
dec
in
rcrl
add
ret
lea
jnp
jmp
jg
mov
sub
popf
ret
hlt
test
cmp
cmp
out
pop
and
movsl
clc
sar
add
mov
push
stos
sbb
xchg
xlat
jg
out
cmpb
jl
stos
cmpsb
fcomi
les
cmp
or
lock
and
pop
xor
sub
mov
rol
aad
mov
push
lock
mov
mov
cmp
xchg
cmp
and
cli
push
mov
int
push
jno
in
mov
push
push
outsl
mov
popf
out
inc
xor
adc
outsl
jl
loopne
int3
repnz
push
es
cmp
adc
inc
inc
push
xchg
pusha
shl
pop
xor
pop
fisubrs
mov
lret
ret
dec
test
jle
les
pop
dec
subl
adc
sahf
popf
repz
jmp
mov
pop
dec
orb
scas
add
add
jns
pop
and
movsl
out
arpl
push
xchg
add
sub
pop
ret
outsl
and
movsl
add
mov
sbb
mov
sbb
into
xchg
enter
xchg
lret
xor
dec
jg
outsb
shlb
jle
into
ljmp
or
stc
mov
xchg
pop
mov
lcall
aad
sahf
or
dec
jo
xchg
stos
pop
loope
scas
jmp
dec
or
hlt
hlt
popa
jne
mov
and
bound
jae
push
dec
js
cli
pusha
sahf
mov
out
mov
addr16
adcl
or
sub
add
xor
xchg
mov
push
mov
or
mov
and
pop
test
xchg
mov
gs
sub
test
or
push
push
sub
push
hlt
push
sbbl
inc
bound
es
mov
test
xor
cmp
fidivrs
adc
dec
cmp
push
mov
mov
cmp
mov
push
les
push
mov
fstpt
xorl
in
or
dec
insl
insb
inc
add
mov
adc
and
dec
out
fdivrs
in
shll
jg
sub
mov
lods
ja
inc
fsts
fdiv
mov
jb
mov
addr16
sub
lods
icebp
push
add
testb
or
sbb
aaa
sbb
xor
jle
jecxz
inc
mov
aas
inc
jmp
cmp
sbb
or
dec
sub
sar
pusha
inc
cmpsl
inc
loope
inc
leave
mov
mov
stos
sti
jne
dec
xor
cmpsb
add
push
sarl
in
lcall
sub
mov
push
std
clc
clc
lcall
outsb
jbe
cmp
or
dec
shll
mov
or
push
sub
dec
add
xchg
sbbb
outsl
lock
xorl
dec
or
sti
add
or
add
push
fs
gs
sahf
adc
push
jno
stc
das
add
and
mov
xchg
and
insl
xchg
scas
shl
mov
data16
mov
push
xchg
sbb
lods
mov
es
sbb
iret
cld
loopne
hlt
mov
push
repnz
pop
add
cld
jnp
mov
mov
arpl
movsb
idivb
mov
xchg
add
hlt
daa
jmp
xchg
loop
mov
xor
shll
add
xchg
in
test
enter
pop
stos
jmp
mov
aas
loope
or
aas
dec
sub
rorl
sysenter
aad
push
or
dec
std
jg
nop
adc
aas
or
cwtl
cmpsb
fisubl
les
push
push
cmp
fisubrl
pop
out
jb
mov
dec
xchg
in
dec
dec
loop
mov
gs
dec
ret
inc
sbb
push
mov
sub
sub
xchg
cmp
std
mov
shl
iret
loop
in
lds
loop
jge
jp
pop
or
jge
or
sbbl
dec
lret
adc
test
fstl
adc
jmp
cli
xchg
imul
xor
cmpsl
jo
xor
and
aam
out
pop
xor
cmpsl
inc
jmp
cmc
xlat
or
sub
imul
mov
pop
sbb
cs
mov
shl
mov
stc
repz
aas
sbb
into
fistpll
mov
hlt
and
test
push
das
jb
sub
std
scas
cmp
dec
push
es
clc
nop
mov
or
push
scas
pop
mov
cld
or
push
mov
stc
sbb
scas
cmpsb
sti
add
dec
inc
cmc
aad
mov
fdivrl
mov
mov
and
not
inc
popf
subb
insb
push
add
dec
sub
or
mov
mulb
popf
adc
dec
aam
leave
dec
adc
scas
and
pop
or
xor
dec
arpl
mov
xchg
xor
add
mov
mov
repz
in
in
xor
jge
adc
jne
xor
data16
sbb
mov
mov
movsl
lea
out
dec
mov
push
out
mov
dec
loope
xchg
cwtl
jp
bnd
add
jl
mov
sub
cmpb
movsl
das
jle
shrl
data16
outsb
mov
dec
push
sub
adc
cmc
popa
je
push
sti
adc
or
cmp
pop
nop
xor
adc
ja
outsb
push
cltd
push
sbb
mov
adc
adc
mov
jns
add
or
jno
or
stos
out
mov
cli
lret
sbb
aaa
fsubrl
jns
test
mov
loopne
adc
clc
aad
inc
mov
cltd
lea
add
mov
xor
fidivs
or
inc
cltd
xorl
add
sub
js
cmp
and
incl
call
sbb
xchg
fsts
and
jle
add
cmp
out
sti
imul
or
adc
push
fdiv
jp
and
xchg
out
sbb
push
pop
push
pop
movsb
jp
jae
jae
adc
mov
push
jp
push
out
test
push
jo
jg
negb
xor
fwait
stc
sub
adc
gs
stos
lret
sub
jp
into
ja
cmp
xor
fidivs
repz
xchg
push
cs
inc
ja
dec
sub
xchg
movsl
mov
and
or
mov
lcall
sbb
pop
stc
clc
test
xor
call
or
clc
push
das
dec
pop
mov
push
inc
lods
inc
adc
shll
sub
xchg
and
sti
mov
pop
push
xor
push
je
jbe
xor
les
call
jp
fcmovnb
out
jecxz
mov
sbb
inc
push
mov
add
icebp
lds
nop
adc
add
mov
ffree
pop
adcl
testl
jge
mov
sbb
mov
cli
jno
mov
mov
mov
add
add
mov
add
pusha
inc
pop
mov
data16
dec
pop
ret
out
and
testl
lahf
sbb
iret
jg
cmc
pop
add
into
jne
in
daa
jmp
in
insb
fstl
pop
xchg
mov
ljmp
addl
mov
je
mov
lret
std
fwait
jns
mov
lea
or
fimull
and
sbb
add
mov
sbb
jno
adc
ret
and
arpl
iret
dec
mov
jnp
mov
hlt
lret
or
movsb
pop
sbb
jl
stos
ja
pop
out
test
jg
adc
je
or
or
out
scas
adc
sub
jge
pop
insl
or
cmp
lret
arpl
mov
sbb
pop
adc
dec
aas
jae
and
jno
imul
jecxz
or
xor
jbe
loopne
xchg
push
sub
inc
dec
add
lret
xor
jo
cmp
add
pop
xchg
jns
call
push
jno
inc
inc
daa
pop
addl
ret
mov
push
sbb
les
in
sar
jo
and
cmp
sahf
cs
cmp
cmp
sbb
fsub
xchg
cwtl
mov
scas
sub
jbe
fidivrs
mov
iret
pusha
lea
insb
inc
jae
jno
cmp
pop
shl
and
out
inc
shlb
data16
or
ds
jne
jbe
sub
xchg
pusha
aas
xor
add
psubusw
mov
inc
and
mov
xor
xchg
fwait
adc
jg
cmpsb
jecxz
mov
inc
das
inc
jg
or
sub
nop
stc
mov
rcr
mov
ret
or
mov
inc
stos
inc
faddp
lea
dec
pop
sti
inc
pop
adc
loop
jmp
dec
dec
stc
push
push
or
testl
call
mov
iret
out
es
or
test
sbb
push
inc
add
xchg
mov
int3
xchg
aas
icebp
icebp
mov
mov
lret
mov
lods
iret
into
sbb
add
push
repz
add
mov
lahf
push
and
insb
sub
mov
gs
lcall
add
movsb
lahf
add
and
mov
lahf
mov
lcall
lock
jb
jb
scas
dec
sbb
ret
xor
add
out
cmc
mov
mov
test
cld
mov
inc
push
push
push
mov
into
fdivp
rorb
outsl
out
xchg
stos
jnp
sbb
lahf
insb
out
and
mov
add
xor
sub
jns
dec
mov
inc
inc
cmp
mov
js
dec
and
stos
cmp
adc
xchg
or
mov
xor
nop
dec
je
push
jns
mov
pusha
clc
dec
lea
int
sub
mov
xor
fbld
sub
loope
int
or
sub
bound
add
and
sahf
xor
pop
adc
ss
inc
in
notb
mov
cs
xchg
xchg
push
mov
mov
mov
add
push
mov
push
call
shll
push
mov
or
mov
loop
xlat
aaa
push
mov
mov
into
popf
lret
mov
xchg
xlat
jge
xchg
fsubrs
push
and
push
jno
call
out
add
mov
and
pop
popf
enter
pusha
clc
or
dec
stc
sbb
xchg
cwtl
cmp
ljmp
bound
subb
push
jp
test
adc
push
fadds
xor
adc
mov
test
test
stos
mov
repz
or
dec
cli
arpl
lea
jo
scas
mov
not
and
cmpsl
ret
jle
gs
and
dec
dec
cltd
loope
jl
mov
mov
jle
sbb
pop
pop
shll
pusha
dec
cmp
clc
lret
rcrl
arpl
adc
jge
int3
xchg
ss
int
jl
pop
adc
imul
add
xor
xchg
test
xchg
dec
mov
lret
pushf
fildl
dec
jl
jmp
mov
roll
and
push
push
in
test
jge
mov
repnz
test
pop
gs
pop
xchg
inc
xor
sbb
xor
shl
shlb
ss
in
arpl
hlt
xor
add
xor
push
and
gs
pop
shl
push
push
mov
dec
js
cmp
or
pusha
cmp
imul
push
and
or
push
mov
sub
and
icebp
mov
test
dec
or
pop
fdiv
shl
gs
repz
xor
xchg
faddl
loop
cmp
loope
mov
aad
push
mov
adc
lcall
outsl
out
adc
scas
popf
sbb
push
pop
mov
push
push
aad
inc
xor
cmp
pop
and
push
mov
test
test
adc
or
es
push
insl
into
mov
out
sub
jns
enter
adc
fsubr
mov
cmpsl
mov
push
jae
mov
xchg
mov
addl
lcall
clc
lahf
cld
lcall
mov
test
cmc
sub
dec
dec
sbb
outsl
mov
mov
mov
mov
mov
adc
adc
mov
cld
aas
lcall
lret
mov
push
jnp
scas
lret
mov
pop
ret
add
bound
repz
aad
fimuls
test
or
js
mov
mov
dec
inc
and
insb
pop
xlat
jmp
dec
push
loope
and
fadds
sub
rcrl
add
lcall
xchg
push
fisubs
loope
subb
xchg
adc
adc
shrl
xchg
adc
xorb
in
jbe
push
fidivrs
divl
push
xchg
jle,pt
push
pop
notl
jae
add
inc
mov
mov
fdivp
xchg
cmc
jecxz
mov
sub
insl
push
sub
lret
sbb
lcall
sbb
mov
pop
outsb
xchg
sub
add
es
and
dec
jl,pt
adc
dec
sbb
xor
ds
dec
aad
in
or
xor
push
je
xchg
or
jge
adcb
imul
jge
insb
mov
xchg
xchg
call
pop
subb
cmpsl
cmpsl
add
cmpsb
sbb
jl
es
push
inc
fidivs
insl
lahf
sub
shll
adc
mov
xor
or
fildll
iret
sbb
or
into
mov
sbb
pavgw
ja
lods
adc
cs
push
test
loop
adc
imul
mov
bswap
sub
adc
add
mov
ret
inc
mov
lcall
or
sbb
mov
jns
adc
hlt
pmaxsw
adc
xchg
add
and
push
mov
xlat
adc
gs
jns
xchg
out
inc
mov
xchg
cmpsb
adc
dec
push
inc
xor
aad
push
out
dec
mov
sub
inc
or
stos
fwait
mov
and
addr16
sti
mov
aam
inc
mov
xor
mov
stos
mov
inc
sub
je
stc
dec
sub
arpl
dec
das
sub
leave
push
fs
push
pushf
mov
mov
in
bound
and
mov
pusha
mov
mov
jp
push
scas
push
fcompl
stos
sub
rcr
icebp
push
jbe
dec
fwait
jnp
mov
pop
fwait
cmp
add
inc
lods
or
idivb
jmp
push
dec
addr16
sti
gs
xor
in
aad
mov
call
or
sbb
fs
popl
icebp
test
push
movsb
loop
sti
add
out
aaa
pop
jne
sub
lods
mov
cltd
push
enter
sbb
pop
lahf
in
xlat
sub
jmp
mov
pop
jl
mov
mov
mov
imul
jmp
add
sub
mov
enter
loopne
cmp
loope
jo
mov
push
cmp
in
dec
jecxz
cmp
fdiv
lea
mov
loope
stos
pop
nop
mov
mov
bound
cmp
xor
sbb
faddl
shll
add
or
push
sti
bound
push
lcall
ret
leave
and
out
jmp
push
fildll
jno
out
sarb
cmp
or
out
pop
mov
push
movsl
dec
xor
xor
hlt
cmp
aas
ds
movsb
inc
inc
mov
jb
loopne
xor
mov
cld
dec
movsb
mov
xor
das
dec
sbb
fucomi
int3
and
mov
mov
pop
pusha
sub
movb
push
enter
pop
ja
inc
sub
test
and
shlb
jb
mov
lea
xor
insb
loopne
lods
lahf
mov
inc
push
insb
roll
es
sub
pop
mov
dec
into
mov
dec
fbstp
push
jecxz
ret
and
std
and
test
aas
ljmp
fstl
insb
lahf
mov
cmpsl
mov
lcall
das
jge
adc
or
out
into
inc
inc
jo
aam
dec
cwtl
lahf
cmp
notl
or
cld
in
mov
xchg
inc
insl
add
inc
cld
xchg
ret
sub
mov
pop
mov
ss
cwtl
rcll
jnp
mov
leave
inc
jns
lcall
sbb
mov
sbb
loop
or
lcall
push
jg
es
sbb
push
adc
mov
xchg
stos
dec
mov
jg
insl
xor
mov
fldcw
jecxz
cld
xor
sub
negb
aas
cs
adc
mov
xchg
adc
sbb
cmp
int3
jg
fildl
in
lods
fldt
aaa
jns
xor
test
inc
mov
lds
cmpsb
push
in
cmp
or
mov
xor
addl
jle
dec
loopne
jns
add
loop
cli
xchg
ja
mov
dec
enter
enter
xchg
sub
xor
cmp
mov
jecxz
cmp
add
lret
pop
xchg
pop
jmp
jo
sbb
lds
imul
xor
xchg
addl
out
shll
rcl
nop
mov
dec
xchg
pop
nop
adc
sbb
push
adc
mov
cmpsb
mov
adc
lods
inc
jmp
or
inc
dec
xor
mov
div
inc
sub
xchg
scas
sbb
std
sbb
cmpb
jecxz
jle
xchg
pop
add
mov
rorb
pop
cwtl
movsl
adc
repnz
lods
scas
dec
pop
ficoml
clc
push
mov
mov
ret
inc
imul
roll
cmp
pop
sarl
incl
add
mov
inc
int
mov
pop
xor
mov
test
jbe
ds
shlb
dec
lods
scas
lret
loope
pop
cmp
jle
and
sbb
aas
pop
jg
cmpsb
adc
cmp
adc
pop
sbbl
dec
dec
sbb
fsts
sbb
push
lods
jmp
arpl
hlt
mov
and
mov
ret
lret
sbb
movsl
les
xchg
jno
int3
lods
cli
sub
mov
xor
ss
or
xchg
in
sub
les
orb
stos
pop
pushf
inc
jg
mov
inc
fsubl
aad
jno
mov
out
cmp
fmull
fmul
and
mov
cwtl
add
shrl
dec
ficomps
daa
out
jo
jbe
cmp
mov
roll
sbb
sub
sti
bound
cld
ret
sub
insl
fldl
nop
push
cmp
in
outsb
or
divl
mov
cmp
push
out
cmpsb
xor
push
call
xor
pushl
cmp
mov
nop
jp
jge
dec
xchg
icebp
addr16
sbb
jecxz
push
adc
arpl
xchg
xchg
mov
xor
lahf
stos
cmpsb
mov
in
out
sbb
int
inc
add
push
adcb
repz
insl
xor
fs
mov
shlb
sti
xor
add
push
and
jmp
jmp
aas
sbb
xchg
or
and
dec
sub
add
or
pusha
ret
xchg
mov
adc
xlat
outsb
jb
sub
cmpl
xchg
fistpll
shr
lods
pop
add
cli
and
popl
or
xor
sbb
jno
aas
loop
fs
mov
lcall
sbb
push
xchg
out
loopne
scas
mov
xor
mov
dec
fisubrl
xchg
push
daa
pop
ss
jae
jbe
aad
je
jp
stc
push
shll
jbe
out
add
lret
inc
mov
jp
push
adc
sbb
xchg
out
fstpl
jb
pop
test
loope
mov
mov
sbb
xchg
in
push
addb
jo
insb
ss
mov
movsb
xor
sub
inc
outsl
cld
pop
and
or
and
mov
in
in
mov
mov
push
aad
sbb
push
mov
lret
fwait
lahf
aam
xchg
xchg
sub
or
nop
imul
lods
inc
jl
aaa
mov
enter
push
scas
inc
out
and
ljmp
xor
jp
add
and
mov
or
push
cmpsb
jg
mov
aaa
data16
push
fcomi
cmp
mov
inc
nop
pop
dec
enter
scas
in
inc
lea
mov
and
mov
pop
fnsave
adc
lods
pop
incl
fildl
inc
fadd
repnz
out
dec
movb
call
movsb
push
jl
inc
int
push
aaa
movsl
sub
pushf
or
aam
pcmpeqb
cwtl
ret
sub
mov
bound
add
xchg
mov
mov
and
jecxz
mulb
and
movsb
sub
aas
rolb
nop
mov
jo
add
push
mov
aam
adc
mov
push
outsb
out
movsb
mov
outsl
dec
rolb
aaa
loop,pt
std
jno
scas
loope
mov
mov
or
movsl
clc
jp
fcoml
pop
push
fwait
leave
int3
aaa
push
int
xchg
or
jb
dec
orb
fcoml
addl
inc
outsl
pop
cs
push
daa
addr16
sbb
imul
sub
xor
xor
out
xor
dec
shll
sbb
jl
aam
mov
xor
in
adc
sbb
or
jnp
fsubs
ja
shl
mov
mov
js
mov
mov
popl
js
gs
mov
ror
mov
or
mov
lock
sub
mov
dec
movsb
adcl
sub
xor
sub
nop
cwtl
repnz
or
mov
pushf
lea
jo
pop
jle
xchg
and
hlt
testl
adc
fnstsw
xor
dec
and
leave
xchg
filds
cmp
mul
push
leave
inc
xor
xchg
adc
js
data16
push
loopne
adc
xchg
mov
dec
in
mov
rcrl
test
insl
dec
pop
jg
fdivr
sub
ds
lods
push
mov
mov
add
inc
mov
ja
jecxz
outsb
popf
xchg
popf
mov
xor
mov
push
jae
dec
push
cmp
dec
mov
or
xchg
xlat
inc
pop
sub
mov
pushf
popa
xor
mov
movsb
mov
rclb
mov
push
mov
dec
repz
cmp
or
inc
jae
in
outsl
push
rorb
jecxz
mov
aaa
aaa
mov
sbb
ljmp
sysret
andb
xor
loope
mov
imul
testb
test
je
sub
sahf
rorb
or
js
aaa
notl
adc
test
scas
das
bndstx
fimull
jmp
cmp
inc
jg
sbb
mov
pop
cmp
pop
out
fwait
cmp
or
stc
nop
add
push
stc
shrl
gs
daa
xchg
pushf
mov
rolb
mov
aaa
test
mov
lds
sbb
add
cs
pop
push
inc
ljmp
dec
orb
inc
sub
mov
add
imul
loopne
xor
loop
in
rcr
fs
dec
mov
sub
movsb
mov
dec
pop
in
dec
ds
cmp
lahf
jle
rolb
imul
xchg
insb
pop
cmp
ss
popa
and
cwtl
cmp
test
pop
pop
push
jge
mov
xor
enter
popf
xchg
sbb
push
popf
cmpsl
jnp
xchg
out
adc
xchg
xchg
sbb
shrb
imul
xor
and
dec
jle
cmp
scas
shrl
out
movsl
inc
jb
pop
out
outsl
pop
pop
add
lret
mov
ficoms
push
out
mov
gs
sbb
xorl
adc
add
test
jp
pop
inc
or
addl
pop
loopne
cmp
xorl
lret
mov
shl
fbstp
mov
adc
pop
rcl
and
pop
mov
fldt
jg
arpl
xchg
js
imul
add
cmp
push
mull
inc
test
xchg
cs
sahf
das
das
xor
pusha
cmpb
inc
cmpsb
addr16
sub
sbb
xchg
or
mov
xchg
sbb
repnz
sbb
adc
mov
push
pop
ss
inc
adc
js
cmpsb
xor
out
push
inc
mov
xchg
out
push
test
fsubrs
pop
push
cltd
test
push
sub
iret
adc
insb
dec
jge
mov
js
das
ret
xchg
cmp
sub
dec
jne
pop
xorb
jge
int3
out
jo
lret
jbe
push
or
adc
stos
add
dec
jmp
inc
fwait
sar
cmp
inc
jbe
cmp
xchg
lret
sbb
or
repz
mov
lea
mov
lahf
fs
shll
xchg
int
xor
xor
cmp
into
enter
dec
fldl
push
cmp
and
pop
outsb
push
or
scas
and
pop
push
adc
iret
lret
jge
movsl
dec
and
test
out
push
pop
cld
jae
cmpsl
call
out
imul
xchg
mov
pop
decb
popa
cmp
xchg
bound
movsb
iret
in
lock
xchg
imul
xorb
cmp
mov
xorb
enter
outsb
pop
mov
loopne
addr16
jmp
loope
sbb
notb
jnp
leave
pop
es
lret
mov
and
shrb
fs
xchg
call
in
imul
jge
inc
mov
cwtl
arpl
push
push
inc
xchg
push
sbb
lahf
cmc
mull
test
data16
daa
shl
push
in
shrb
cmp
testb
mov
lock
add
outsb
in
cld
icebp
aas
pushf
ds
push
cwtl
dec
out
xchg
call
jno
fcmovne
lcall
mov
mov
mov
dec
inc
mov
addr16
xchg
jb
mov
jp
popa
repz
lahf
or
jo
xor
cmpsb
mov
lret
out
mov
mov
loope
shrb
arpl
adc
and
mov
sbb
cwtl
lahf
inc
fstl
and
scas
popf
fmul
mov
aad
popa
mov
mov
jge,pt
imul
sbb
into
gs
ljmp
lret
movsl
mov
sbb
pop
xor
sub
and
push
sbb
sub
pop
pop
stos
jmp
mov
add
lods
das
or
shrl
je
mov
ret
cwtl
mov
mov
test
ss
call
xor
fwait
mov
inc
lret
push
push
and
adc
hlt
shrl
jg
push
mov
test
jl
in
lret
mov
lds
add
fs
pop
mov
jbe
xor
adc
pop
add
jecxz
jge
cmovp
cmp
cmp
sub
shl
les
inc
sbb
mov
push
jge
in
rcll
aaa
sbb
data16
je
mov
and
cmp
or
daa
push
pop
insb
fadds
or
sub
sub
mov
sbb
pushf
push
rcrb
dec
mov
xor
aad
sbb
sub
mov
jmp
jne
fidivrs
mov
das
lahf
push
lret
outsb
inc
imul
js
out
icebp
adc
adc
insl
cmp
inc
xchg
popf
cmc
enter
nop
sbb
das
out
in
or
inc
jmp
pop
xchg
imul
jns
and
lea
mov
jns,pn
or
xlat
sbb
jge
sbb
rcrb
arpl
inc
pop
push
popa
or
push
or
addr16
lret
loop
divl
xorl
xor
loope
cmp
fmuls
sbb
jl
test
clc
add
add
mov
jle
xchg
ror
adc
test
fwait
lahf
xchg
call
and
pop
popf
xor
inc
ds
xor
pop
loope
filds
sub
in
jno
mov
pop
xchg
add
mov
das
mov
out
sub
and
dec
fcoms
in
jmp
push
push
inc
aas
mov
or
fwait
jg
cli
xchg
push
sbb
lock
lret
insl
scas
mov
sub
jae
add
or
rclb
negb
add
dec
add
mov
andl
shll
sbb
pop
flds
adc
jns
rol
adc
jo
xchg
js
fdivrs
sbb
mov
in
bound
mov
lods
decl
mov
das
cmpsl
push
movsl
sub
gs
test
add
je
mov
mov
pop
pusha
pusha
ss
cs
cmp
pop
sub
dec
fs
aas
sub
mov
lds
cmp
inc
sbb
mov
dec
fisubl
mov
dec
inc
stos
jb
ret
cmp
adc
dec
stc
xchg
fdivrl
adc
xor
in
rolb
fisubs
cmp
rcrl
outsb
jns
sub
xor
mov
and
aam
sbb
cmp
cmp
out
outsb
add
adc
shr
cmpsb
mov
lods
and
xor
cmp
insl
ss
pop
sbb
rcr
aam
loop
sub
insb
int3
or
pop
mov
notl
aas
sti
ror
mov
sub
pushf
aaa
xor
imul
pop
sub
bound
repnz
xchg
sbb
adc
jnp
cmp
cmpl
inc
lret
or
cmp
imul
stos
popf
xor
lock
arpl
test
aam
push
test
cmp
cmp
jne
loop
std
lcall
out
jns
mov
pop
sub
xor
sub
movsl
fstpl
xor
insb
cmpb
jb
sahf
push
leave
xchg
clc
imul
fidivrs
icebp
sarl
pusha
mov
cmp
xor
jne
jae
inc
ss
push
push
adc
pop
mov
inc
or
comiss
fiaddl
xor
mov
out
inc
jecxz
xchg
outsl
pop
repnz
jmp
adc
fimull
mov
lds
mov
add
lea
addr16
mov
jmp
jp,pt
add
lods
inc
inc
and
call
stc
adc
inc
jge
sub
in
int
pop
adc
push
mov
pop
and
dec
ret
sbb
nop
notl
test
fwait
subb
xchg
enter
pop
bnd
jae
repz
enter
mov
dec
aad
dec
mov
xor
push
adc
and
sub
addr16
ja
xor
pop
flds
mul
cmp
jno
xchg
sub
stc
xchg
xor
test
sti
sub
das
push
repnz
or
daa
cmp
insl
inc
jae
push
sti
mov
test
push
sbb
push
and
sbb
mov
jecxz
je
aad
add
mov
insb
ljmp
daa
cmp
fs
pushf
and
les
mov
or
aad
sub
and
stos
shlb
pushf
pop
mov
mov
jno
jae
rcl
sbb
mov
cmpsb
scas
ljmp
mov
pop
pop
jo
xchg
push
inc
push
dec
xchg
mov
xor
inc
xchg
hlt
push
fidivrs
or
mov
ret
sub
xchg
fnsave
mov
dec
loopne
jb
xchg
sarb
add
dec
sub
enter
ljmp
arpl
jmp
imul
cmc
jmp
subl
pop
xor
test
and
and
ljmp
adc
in
fists
push
cwtl
ficomps
sub
mov
int
sbb
jae
in
daa
fldenv
xor
sbb
sub
xchg
mov
movsl
cltd
dec
daa
repnz
das
adc
sub
jno
or
pop
lret
xchg
jle
scas
jnp
mov
lret
dec
xor
test
cltd
add
pop
cmp
jne
mov
pop
push
cmp
es
jnp
lock
mov
xor
imul
jb
outsl
cmp
popa
fdivrp
test
dec
shl
iret
mov
aaa
pop
leave
test
fcompl
lret
fnstenv
test
aad
pop
fnstcw
mov
ds
push
imul
test
pop
orl
lahf
jo
push
mov
lds
push
pop
or
inc
lahf
dec
inc
icebp
loope
push
pushw
fsubrl
cmp
addr16
sub
jg
fdiv
sbb
jle
cmp
push
sub
call
cmp
test
or
mov
push
imul
xchg
pop
sub
push
mov
int
stos
out
popa
dec
xchg
push
xchg
enter
inc
inc
sub
insl
push
add
jno
inc
xorb
mov
jecxz
sub
stos
sub
out
test
fs
fcmovnu
js
push
push
cmp
inc
mov
sbb
imul
fwait
es
mov
pop
cld
sub
inc
loope
mov
adc
pop
mov
jo
dec
stos
xlat
fldenv
pop
inc
rolb
mov
bound
sub
loop
pop
sub
inc
outsb
pusha
jmp
lds
popa
outsw
add
insl
xor
out
add
and
jmp
xor
sub
insl
ret
cmp
enter
mov
mov
xchg
xor
outsl
add
or
push
pop
dec
out
test
mov
mov
bound
push
inc
and
aaa
insb
xchg
ja
push
adc
popf
mov
jmp
andl
jg
jae
pop
outsl
or
pop
pop
dec
cwtl
push
movsb
movsl
xchg
fsub
push
adc
test
shl
je
sbb
mov
jnp
push
xor
scas
insb
sub
pop
add
pop
in
jae
xchg
loopne
loop
mov
je
mov
rcrb
pop
popf
mov
shll
mov
shll
mov
lods
jns
repnz
scas
and
cmp
pop
inc
mov
mov
sahf
sub
jle
fdiv
pop
fxch
sub
cmp
fldl2t
cmpb
outsb
dec
sbb
repnz
dec
cmp
mov
mov
jno
cld
mov
js
ljmp
inc
pushf
fdivrs
push
insl
sahf
daa
pop
mov
inc
repz
movsb
jge
sbb
rclw
or
cmpsl
sub
xor
xchg
aaa
mov
insb
dec
push
inc
js
iret
bound
and
and
adc
cmp
pushf
or
hlt
sub
jge
ret
or
testb
add
bound
dec
inc
jge
add
mov
daa
mov
psrlw
sub
stc
insb
std
popf
or
aam
subl
add
js
lcall
lret
into
adc
and
test
xorl
stos
push
mov
mov
mov
adc
mov
cld
add
jmp
fisubl
jmp
push
jp
and
icebp
and
push
and
fnstsw
and
andl
insb
cmpsl
add
stos
and
mov
or
and
fwait
mov
lods
sub
cli
mov
xchg
cld
ret
sbb
daa
ss
jle
sbb
incb
push
addb
xchg
lcall
ss
sub
adc
loop
sahf
rcrb
dec
in
xchg
fidivl
sbb
push
inc
imul
push
pusha
dec
mov
data16
push
into
jns
gs
inc
clc
testl
rclb
lret
bnd
dec
fistpll
sbb
push
cmp
jmp
mov
rcll
loope
mov
sub
into
cmp
jp
sub
cmp
push
outsl
mov
push
mov
lea
subl
jae
call
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
ret
jno
cmp
popf
add
add
dec
xchg
aas
xchg
mov
add
add
inc
sbb
call
inc
pop
cmp
add
add
in
je
push
out
add
add
or
cmp
add
movsl
mov
loopne
add
add
lahf
in
fiadds
test
test
add
add
pop
or
add
add
add
loope
jp
add
add
add
iret
cmc
xor
add
and
roll
add
mov
xor
add
add
insl
mov
add
add
sub
jl
add
mov
add
add
adc
stc
add
add
mov
adcb
jb
add
add
sbb
mov
pop
popf
pushf
ret
sahf
iret
add
add
repz
fdivrl
inc
add
add
jg
outsl
scas
add
loop
add
add
mov
add
add
xor
mov
add
shl
lods
add
out
and
sbb
add
add
pop
xchg
cmpb
add
add
adc
fiaddl
add
add
add
cmp
call
addr16
add
add
cmc
cmp
addl
in
addl
xor
add
add
jge
fs
inc
add
add
out
dec
add
mov
add
pushf
mov
add
add
jbe
add
add
add
add
pop
jle
add
add
arpl
mov
add
mov
add
sti
cmc
in
add
addb
fimull
add
add
push
add
add
sbb
add
add
add
xlat
push
ljmp
mov
in
xlat
lret
add
add
les
add
add
add
fsts
pop
shrb
add
add
pop
fistl
add
add
pop
dec
add
xchg
in
add
add
test
sbb
add
pop
jno
sahf
rclb
add
add
jecxz
mov
add
nop
add
add
lea
fstpl
pusha
and
push
jle
and
cwtl
add
add
inc
inc
int
add
into
testl
mov
add
add
or
mov
add
mov
out
dec
add
enter
add
xorl
add
add
pop
push
add
mov
add
add
add
rcrl
add
add
hlt
dec
cwtl
loope
dec
add
add
lret
dec
jl
add
inc
dec
add
add
mov
cmpb
push
add
add
add
mov
add
add
jl
add
leave
xchg
add
add
cmpsl
mov
pop
pop
and
push
pop
cld
movsl
pop
mov
add
add
std
addr16
add
add
sub
add
add
in
es
add
add
popa
adc
add
add
mov
arpl
add
add
jno
sub
add
add
add
add
add
mov
add
add
add
add
add
add
xor
int
add
add
push
xchg
test
jp
add
add
add
add
add
rcll
add
add
out
pusha
lock
add
add
je
aaa
add
out
pop
add
add
mov
cmc
add
add
xor
test
xchg
mov
add
add
add
add
add
add
scas
add
add
mov
xor
add
add
mov
add
lds
add
add
pushf
dec
cmc
sub
add
add
dec
or
imul
add
add
movsb
jecxz
add
dec
ja
add
add
sbb
add
das
sub
add
add
add
add
lea
add
add
in
add
add
subl
pop
add
add
sub
lea
add
add
sti
add
add
in
inc
dec
add
cmp
movsb
leave
push
push
add
add
sar
xchg
fmull
add
add
scas
sbb
add
and
lahf
in
pop
add
add
inc
push
jle
notl
pop
insb
js
add
push
add
add
jae
sbbl
mov
add
add
das
xor
add
add
inc
mov
add
add
push
add
mov
add
add
cmp
ret
dec
add
add
or
add
add
pop
dec
lahf
cmc
add
add
mov
jb
add
add
add
lea
add
add
mov
ret
add
add
sub
inc
sbb
sub
add
add
inc
lcall
add
add
mov
add
add
and
add
add
push
js
add
jge
sbb
add
add
xor
push
sbb
add
add
xor
add
add
add
scas
mov
add
add
sub
movsb
mov
cwtl
add
add
daa
mov
xchg
add
add
cli
dec
loopne
add
add
test
pushf
add
add
test
add
jp
add
add
popa
mov
jmp
add
add
enter
add
add
cmp
out
dec
add
sbb
add
add
jnp
add
add
fistl
insl
or
add
add
mov
mov
pop
cmpsb
and
or
shl
sub
sbb
add
add
add
add
pop
jecxz
out
add
add
or
pop
add
add
push
rclb
adc
add
add
sub
aas
cmp
mov
add
add
mov
add
add
and
add
add
add
sbbb
mov
mov
lcall
add
add
add
add
add
ret
movb
add
inc
sub
add
notl
ja
add
add
xchg
arpl
inc
add
add
test
sahf
ret
add
add
stc
test
jno
add
outsl
add
add
adc
jp
or
add
add
fmuls
popf
add
add
or
jnp
add
int3
and
add
add
add
xchg
mov
and
add
add
lods
xor
mov
out
xor
jb
add
add
jg
cmp
pop
add
add
pop
je
data16
into
call
imul
add
add
dec
inc
les
lods
add
add
mov
add
add
jbe
imull
adc
add
add
loopne
push
popf
add
add
rep
cmp
pop
add
add
sbb
rolb
add
sbb
sub
add
aad
cmp
add
cltd
mov
dec
fsubr
sub
add
les
add
sbb
mov
add
add
mov
test
add
aad
or
add
add
dec
in
mov
out
add
add
jecxz
repz
cli
add
add
add
out
add
add
xor
mov
add
add
inc
lret
mov
add
add
dec
popa
jb
fst
add
add
std
repnz
cmpsl
add
scas
sti
add
add
mov
sbb
add
adc
dec
js
enter
add
lods
shll
add
add
mov
add
add
mov
add
add
mov
push
add
sbb
lret
mov
add
add
leave
xchg
sbb
inc
add
add
ret
jne
pop
add
sub
add
add
insl
dec
daa
repz
add
add
stos
int
je
pop
add
add
and
add
add
sbb
and
adc
add
add
rcl
pop
inc
addl
add
xchg
lds
add
cmc
inc
add
add
popa
sub
jo
add
add
pop
mov
out
xchg
add
add
cltd
cmc
xchg
add
adc
add
add
mov
rcl
inc
xlat
add
add
cmp
cmp
add
add
stos
add
add
xchg
adc
add
add
add
add
into
add
add
dec
mov
leave
add
push
movb
add
xchg
or
add
fcomps
pusha
add
add
incl
mov
add
lods
jne
add
add
jmp
sti
ljmp
cmc
fwait
xchg
add
inc
rcll
out
add
add
fwait
loopne
in
daa
das
add
add
filds
sub
add
add
xchg
mov
imul
add
add
add
add
call
cmp
jne
sbb
add
scas
and
add
add
andl
add
dec
gs
repz
add
adc
pop
add
shr
add
add
mov
scas
and
mov
add
add
dec
pop
adc
jmp
add
data16
add
cmpl
ret
incl
add
fisttpll
add
add
add
jnp
notb
add
leave
add
add
in
pusha
and
add
or
add
add
add
add
stos
and
test
add
add
insb
clc
sub
add
iret
xchg
cmp
add
add
popa
xor
ja
add
add
sub
add
add
add
add
add
imul
inc
add
add
add
dec
movups
xchg
add
add
or
sahf
add
add
or
sub
add
add
mov
lds
dec
sub
add
add
mov
add
add
ret
hlt
nop
loope
add
add
aaa
add
mov
add
push
cltd
je
add
add
or
add
add
cmp
push
add
add
add
push
xchg
sbb
cmp
add
add
testl
jno
dec
add
shr
add
add
xor
sub
add
add
in
adc
add
add
in
inc
mov
add
int
add
add
daa
mov
mov
pop
add
add
ficompl
add
add
lahf
sub
add
add
test
dec
add
add
lret
xchg
cmpsb
push
outsb
jl
add
add
xor
add
add
add
cmp
roll
out
add
add
pop
push
and
mov
xor
and
repnz
add
pop
mov
add
add
mov
pop
add
add
adc
add
add
add
mov
add
add
jne
add
adc
add
add
pop
fwait
push
das
add
fmuls
push
pop
ficompl
xchg
add
add
ret
outsb
cmc
mov
add
add
add
sbb
and
xlat
fnstcw
add
add
and
add
add
clc
ret
loope
add
fadds
add
add
in
add
add
sbb
mov
mov
add
add
cmp
add
add
aam
mov
jecxz
add
add
lds
add
outsl
repz
flds
add
ja
add
add
pop
out
sbb
je
ss
jmp
add
add
dec
imul
add
add
or
add
add
mov
xor
add
add
xor
lods
sbb
or
add
add
mov
scas
add
add
gs
orl
add
pop
xchg
out
ja
add
add
mov
adc
aad
add
add
xlat
aam
repnz
rcrl
cltd
sbb
xor
pop
sbb
and
jnp
add
add
mov
test
add
add
jnp
mov
push
add
add
pusha
mov
add
add
jmp
dec
add
xor
add
add
aad
jl
js
add
add
dec
sub
sbb
add
add
loope
mov
add
add
lcall
add
inc
jl
sahf
jmp
add
fucomip
lods
add
insb
popa
add
add
dec
fs
aam
add
add
ja
lahf
xchg
mov
add
add
add
add
arpl
pop
mov
add
jp
pop
test
add
cmp
ret
or
add
add
cltd
loop
xchg
push
add
add
movl
add
add
add
std
add
add
das
mov
add
add
mov
add
add
cmpsl
mov
scas
add
xchg
add
add
icebp
pop
sbb
add
add
fdivr
mov
dec
jb
add
add
fwait
pop
jle
add
ljmp
mov
add
add
mov
add
add
add
sub
add
add
adc
add
add
daa
shrb
add
fnsave
pop
dec
add
add
xchg
add
xchg
adc
add
add
lods
push
add
pxor
jnp
add
sahf
add
add
cltd
sub
loopne
mov
add
add
jnp
or
add
inc
stos
js
add
add
sti
add
add
fsubl
push
jmp
add
add
mov
add
mov
dec
sbb
add
add
scas
sbb
add
add
add
icebp
add
add
jmp
add
add
loope
xor
lea
add
add
mov
iret
add
add
inc
push
push
adc
add
add
xor
add
add
sub
add
xchg
into
add
add
xchg
icebp
lods
xchg
testl
pop
pop
out
pushf
add
add
mov
shr
add
lea
jne
loop
je
add
add
shlb
add
add
sub
add
loop
add
add
imul
add
add
stos
adc
cmpsb
pop
push
add
add
fbld
aad
add
pusha
add
add
add
mov
add
add
mov
pop
add
add
and
mov
add
add
jnp
insb
sbb
icebp
add
add
stos
and
add
add
jae
rolb
mov
add
popl
add
add
hlt
stos
inc
mov
add
add
ret
add
add
add
iret
out
sahf
adc
add
add
addb
add
add
inc
pop
pop
mov
add
add
xchg
mov
add
add
xor
add
add
leave
lahf
fucom
add
pop
xor
add
add
xor
inc
add
add
sub
push
add
add
cmp
add
add
lds
add
add
repnz
or
add
add
jge
in
stc
add
rorb
add
add
les
add
add
int
pop
cwtl
add
add
scas
jp
ret
cmp
add
add
cmp
mov
xchg
pushf
add
add
out
jmp
sbb
add
add
jno
loopne
add
std
jp
add
add
lret
lock
add
mov
jo
stc
icebp
add
add
inc
int3
jp
add
push
inc
add
add
in
sub
insl
sahf
fiaddl
add
add
xchg
add
add
movsl
int
mov
add
fildl
add
add
add
add
add
inc
push
or
add
pop
and
into
add
inc
arpl
add
add
dec
jmp
std
data16
add
js
ds
leave
or
add
add
enter
add
add
idivl
outsl
and
add
add
pop
js
mov
add
notb
movsl
add
gs
adc
fwait
add
add
push
fiaddl
add
add
dec
mov
add
cmc
fwait
add
add
pop
sbb
add
sbbl
or
add
add
jne
add
push
add
add
mov
add
add
out
test
ret
add
add
shll
aas
add
add
sbb
mov
add
add
repnz
add
adc
clc
adc
add
fadds
add
add
clc
add
add
adc
lret
add
add
cmc
nop
stos
test
add
adc
add
add
add
add
add
sbb
mov
add
add
xchg
xchg
mov
add
dec
add
add
xor
ja
dec
popa
add
add
jge
into
lods
enter
add
imul
add
adc
and
add
ja
jns
pop
add
add
sti
aam
inc
add
push
out
add
add
gs
and
add
nop
adc
push
push
add
add
sbb
add
xlat
adc
add
add
testb
add
dec
xchg
scas
mov
add
push
fprem1
jb
pop
add
add
shlb
add
add
adc
add
push
arpl
add
add
push
mov
or
and
add
add
jecxz
aas
rolb
add
add
or
add
add
cmc
pop
cmp
jge
add
add
or
add
aas
jle
inc
das
mov
ret
cmpl
mov
cli
das
add
popf
mov
add
add
cwtl
add
add
cltd
arpl
out
jle
add
add
add
test
add
add
mov
add
add
or
add
add
xchg
lods
insl
add
inc
stos
add
add
mov
mov
movsl
cmp
add
add
mov
add
add
sub
add
ficomps
cmpsl
mov
repz
add
add
das
mov
es
add
add
pop
pop
repz
add
sub
add
add
or
es
push
add
add
popa
push
test
add
imul
add
mov
push
add
add
adcb
add
add
add
add
add
fstp
push
add
add
push
add
add
xchg
mov
test
add
dec
enter
add
add
add
sub
add
add
add
add
int3
add
add
rcrl
add
add
pop
ret
mov
add
add
or
sub
add
sbb
add
test
add
add
test
add
add
add
add
add
add
cmpsb
add
add
inc
pop
xor
mov
add
add
add
add
or
adc
add
add
fdivrp
or
jne
add
add
out
inc
sub
add
add
jns
movsb
mov
add
push
and
add
add
mov
lret
into
add
repnz
mov
push
ljmp
add
add
or
mov
dec
sti
add
add
adcl
add
cli
movl
ja
test
mov
add
add
bnd
adc
add
repnz
pop
add
aaa
xor
add
add
inc
jae
push
mov
add
add
xchg
lds
add
das
addl
mov
add
cmp
lds
add
cmp
add
add
and
add
xchg
jae
pusha
and
out
add
add
insl
in
mov
add
add
push
pop
add
mov
add
add
push
aad
ljmp
popa
stos
ret
mov
or
add
add
add
inc
fstps
add
sbb
sbb
aam
add
add
mov
add
test
add
add
push
xchg
mov
leave
add
add
pushf
cltd
inc
and
dec
add
add
add
sub
add
add
pop
sub
push
jno
add
add
bound
test
add
add
push
xor
fadds
add
add
add
jge
sub
test
add
add
or
jg
add
add
xor
add
adc
add
add
movb
add
sub
mov
add
add
mov
xor
add
add
jno
or
leave
das
add
add
sub
mov
in
add
add
add
add
add
inc
pop
insl
outsl
add
add
xchg
pushf
enter
add
add
cmp
jecxz
add
push
add
add
movsl
aam
push
xchg
add
add
inc
out
in
pop
int
add
add
add
add
add
pop
arpl
add
add
add
jge
adc
add
add
sbb
test
and
add
add
pop
jae,pn
add
add
push
lds
add
sub
add
add
in
shlb
ret
add
add
pop
pop
shlb
add
and
arpl
add
add
mov
ret
lods
faddl
add
add
cmp
add
add
add
add
add
jg
aad
push
pusha
add
add
scas
pusha
mov
pop
popf
add
add
notl
jns
add
add
dec
addr16
movsl
je
add
add
sahf
stos
sub
add
add
int
xchg
add
pop
sub
adc
jmp
popf
add
add
cs
jle
incb
add
add
mov
addb
add
cmc
push
or
add
int
loop
push
add
add
fwait
add
add
out
or
add
test
cmp
dec
in
add
add
pop
shll
test
add
add
add
imul
dec
and
mov
add
add
dec
add
add
sti
or
popf
add
add
push
daa
loopne
test
add
add
repz
movsl
add
add
sbb
lret
add
add
arpl
outsb
aas
jmp
aad
sub
add
outsl
mov
add
add
push
mov
add
cmc
cmc
les
dec
add
add
cwtl
adc
add
cmc
mov
add
add
mov
add
add
mov
add
add
dec
push
dec
test
add
add
add
jecxz
dec
dec
push
sahf
add
add
insl
mov
add
add
fcmovnb
in
mov
add
add
inc
pop
xchg
loop
or
add
add
sbb
daa
movl
out
popl
add
add
push
push
dec
cmp
add
add
das
dec
adc
add
xchg
push
add
add
mov
dec
add
add
idivb
jo
add
add
or
ds
add
add
lret
push
inc
sub
add
add
stos
lock
add
ret
and
jp
add
add
cmp
pop
add
add
and
mov
add
add
add
add
jns
mov
dec
add
add
insl
mov
mov
add
xchg
orb
add
add
popa
insl
std
push
cmpsb
mov
and
push
dec
dec
add
add
cltd
lcall
add
add
mov
inc
js
mov
add
add
aas
clc
in
lds
add
add
add
add
add
xchg
ljmp
add
mov
add
popl
add
add
test
add
pop
scas
add
add
xchg
ds
add
inc
jle
mov
add
in
sub
add
add
push
sbb
add
roll
or
add
add
inc
cwtl
mov
sub
add
add
incl
add
add
add
add
xchg
cmp
add
adc
mov
movsb
aaa
xchg
add
add
jecxz
dec
add
add
pushf
cmp
add
cld
add
add
out
and
aaa
nopl
add
add
popf
in
xlat
jmp
add
add
push
cmp
add
add
add
sbb
add
add
pop
dec
add
add
add
jmp
add
jb
add
add
mov
and
or
push
add
mov
fiaddl
add
add
stc
mov
add
add
cmp
add
add
add
add
add
mov
cs
add
add
inc
pop
insb
cmp
movsl
add
add
iret
movsb
int3
sub
add
mov
add
add
cmc
insl
pop
leave
add
add
xor
and
pushf
add
add
xchg
data16
add
add
add
imul
add
add
mov
js
push
add
add
arpl
addb
sub
add
add
or
add
add
fs
and
add
add
mov
or
add
add
mov
mov
add
add
sub
add
add
aaa
inc
call
add
add
add
add
add
loopne
fiadds
incb
add
add
ja
add
add
add
add
push
andl
add
dec
add
sub
js
add
add
sti
push
add
pushf
hlt
add
add
xor
aas
add
add
ss
cmp
cmp
add
add
mul
cltd
add
cld
inc
add
add
daa
mov
insl
fcompl
push
jl
out
mov
lahf
mov
mov
test
nop
add
add
mov
xor
add
add
js
les
add
add
add
cmp
adc
add
xchg
and
mov
add
add
xor
ljmp
sbb
repz
add
rolb
add
adc
add
xor
add
add
iret
add
add
add
add
xchg
inc
add
add
pop
sbb
add
add
add
push
sbb
dec
test
add
add
repnz
push
cmc
lods
add
add
mov
jo
add
xchg
jp
add
add
test
add
add
xchg
add
add
sbb
mov
add
sldt
add
cmp
mov
jae
add
add
cmp
add
aad
add
add
adc
xor
add
dec
mov
out
add
add
outsl
nop
cltd
inc
add
add
add
add
stc
test
sti
push
add
add
lret
adc
add
add
xor
incb
add
add
or
nop
add
add
inc
xor
add
add
aam
add
push
fiadds
add
add
addb
add
add
cli
rcrl
add
add
gs
jge
add
pop
std
add
add
pop
lock
lods
stos
lods
add
add
test
adc
jae
add
add
xchg
sub
add
add
add
aaa
add
add
sub
dec
mov
add
add
arpl
roll
add
repz
add
add
jge
cmp
xlat
movb
add
jmp
dec
das
add
xchg
sub
aad
cwtl
decl
add
popf
add
add
lea
int
add
mov
add
add
pop
fwait
add
add
pushf
lahf
pushf
sbb
add
add
mov
push
std
add
add
dec
leave
jno
mov
add
mov
add
add
add
dec
add
add
fcomi
add
add
add
inc
lods
push
fadds
add
add
sub
add
jo
add
add
std
mov
inc
mov
add
mov
add
add
add
add
sub
or
adc
add
add
lods
and
push
fwait
add
add
cmpsl
scas
lcall
add
add
in
test
add
add
mov
push
add
add
sub
and
add
add
ret
mov
sarl
add
add
mov
jae
add
add
add
cmp
add
add
xor
add
add
cmp
add
add
sub
mov
add
add
add
xchg
shl
mov
add
lods
test
add
lahf
lret
out
add
add
cltd
roll
test
jno
add
add
push
push
push
das
add
add
roll
ret
add
andl
stos
lret
add
add
add
lods
push
jl
xlat
add
add
mov
add
add
add
dec
push
cmpb
add
mov
add
add
add
add
add
add
incl
add
add
lods
out
dec
lea
ja
aas
push
add
cld
bound
add
add
mov
cmc
jnp
add
add
sub
add
add
mov
add
jne
add
add
xchg
fisubrs
xor
add
add
dec
fwait
pop
pop
jg
add
add
mov
lock
add
mov
add
push
cmp
add
add
shlb
mov
sub
add
add
adc
add
jbe
mov
add
add
jg
inc
add
ffreep
add
add
jmp
pop
add
add
push
sbb
adc
jo
add
add
push
sub
add
add
add
jnp
sub
add
add
mov
pusha
lcall
add
dec
adc
add
add
add
popf
adc
add
add
ret
xchg
stos
lcall
push
arpl
add
add
add
adc
add
inc
bound
add
mov
add
cwtl
jmp
xchg
mov
add
add
fldcw
dec
cs
add
add
leave
add
cmp
add
add
arpl
hlt
xlat
xor
add
add
push
add
add
pop
push
add
fsubrl
add
add
sub
lret
add
add
mov
add
add
jge
push
and
add
aaa
add
add
aaa
add
inc
icebp
add
add
xchg
inc
int3
sbb
jmp
add
add
add
add
cs
jne
add
add
jbe
pop
xor
add
add
add
fstp
add
add
dec
sub
add
add
stos
push
jo
shlb
inc
jns
or
add
add
in
fimuls
add
add
fidivrs
rolb
add
add
add
add
hlt
add
add
enter
aas
loop
add
add
loope
stos
add
bound
add
add
mov
add
add
ds
add
sbb
arpl
add
add
add
xor
and
add
add
add
add
sub
mov
add
test
add
into
add
add
push
dec
orb
add
andl
add
outsb
add
add
pop
xchg
icebp
pusha
mov
add
fdivrl
push
add
add
jg
mov
add
add
add
push
add
add
insb
push
push
lret
dec
and
add
add
jp
mov
add
add
sbb
add
add
andb
xchg
add
add
push
sbb
add
add
sub
pop
add
insl
dec
pusha
add
add
cmc
in
outsb
add
add
add
add
outsl
outsl
imul
add
outsb
inc
cmp
add
add
mov
mov
add
add
cmpsb
js
lret
inc
add
add
aas
jnp
push
call
add
mov
cmp
add
add
mov
add
add
movsb
pop
mov
test
add
add
loope
inc
add
mov
add
inc
sbb
add
outsl
adc
add
sbb
add
mov
xlat
sarb
mov
nop
mov
add
add
dec
mov
add
add
xchg
add
add
fstps
add
add
lods
xor
lds
inc
add
add
adc
test
add
add
jmp
mov
add
imul
add
jecxz
das
outsb
add
jp
add
add
lea
cwtl
dec
xor
add
add
call
inc
insl
into
xchg
add
dec
cmp
aas
pop
jae
mov
add
add
xorl
add
add
sbb
add
add
imul
add
loope
pop
cmp
add
add
cmp
add
add
jns
or
incb
add
add
inc
cmc
xor
lret
in
loop
add
sub
add
add
in
add
add
inc
add
add
insl
rcr
or
add
xchg
add
add
cmpsl
scas
pop
push
add
dec
aad
cmpsl
daa
jb
add
add
mov
in
add
or
add
add
sub
sbb
add
xchg
outsl
es
xchg
add
add
popa
fwait
adc
add
add
mov
dec
add
add
sub
adc
add
add
add
add
fstl
popl
add
std
ljmp
add
add
add
imul
add
je
test
icebp
add
add
xchg
cltd
push
add
add
rcrl
add
add
jle
out
mov
push
add
add
or
in
add
inc
mov
mov
mov
add
add
mov
add
add
add
rolb
add
add
pop
add
add
cmc
stos
xor
popa
add
add
mov
add
add
add
ja
pop
sub
add
push
nop
add
add
out
ficoms
adc
jns
repz
add
add
fidivl
test
add
add
mov
add
add
scas
push
add
add
mov
add
add
in
mov
push
cwtl
add
add
addl
add
pop
or
add
add
mov
push
jo
and
add
pop
sub
add
add
fistps
add
add
js
xchg
es
add
add
push
jo
sti
add
das
push
add
add
and
add
add
ljmp
add
add
mov
add
add
jae
mov
add
add
add
add
imul
cld
add
add
push
stos
ja
aad
add
add
lods
dec
ret
lock
add
or
add
add
add
inc
push
adcb
sub
add
add
mov
add
add
add
leave
jnp
sub
jb
inc
sub
add
add
std
roll
add
add
add
pop
mov
fnstcw
add
add
cmp
rcl
dec
add
add
push
and
add
cmovbe
add
add
aas
call
add
jnp
or
jno
add
add
add
jne
add
add
out
add
add
push
movsb
idivb
add
scas
pop
jp
add
add
pop
ja
das
add
add
cmp
push
pusha
aas
sub
add
add
add
add
fstl
add
push
mov
add
add
cmp
scas
add
cltd
xor
add
add
sbb
add
add
push
and
pop
dec
pushf
add
or
add
and
add
add
pop
sub
cmp
add
add
lcall
add
add
sbb
add
add
xchg
add
add
push
lret
add
mov
add
add
sub
add
add
pop
mov
add
add
and
int3
pop
add
add
int
push
push
dec
and
add
add
cmp
add
add
add
add
add
jg
or
dec
repnz
add
fsubrl
add
add
testl
add
rcll
pop
loope
add
add
sahf
xchg
outsl
and
add
add
repnz
add
loopne
add
add
adc
out
mov
in
and
scas
jle
add
add
or
mov
add
das
ret
add
add
cmc
lods
jbe
and
cmp
loop
ror
add
add
lods
lahf
scas
push
add
add
add
out
test
mov
add
add
push
cmp
dec
jbe
add
add
pushf
add
shlb
add
add
fwait
scas
mov
add
pop
add
add
mov
add
add
nop
aaa
jecxz
jmp
add
add
loopne
divb
add
add
xrelease
lods
add
add
sbb
push
add
add
dec
pop
sub
inc
adc
add
add
int
aad
add
pop
add
add
dec
adc
mov
add
les
sbb
add
add
adc
rclb
adc
movsb
popf
aaa
or
add
add
and
pop
in
sub
add
add
mov
add
push
dec
add
add
jecxz
or
push
push
add
add
xor
call
add
add
dec
subb
add
add
add
add
pop
push
jb
inc
pusha
add
add
std
fmul
insb
add
mov
add
push
add
add
fistpll
add
add
das
out
xchg
add
bound
add
add
mov
loop
add
add
dec
aam
add
add
icebp
xchg
repz
add
fsub
add
add
lret
push
cmpsl
xchg
add
or
add
add
iret
cmc
and
add
add
add
fdivl
adc
add
add
mov
add
add
add
lret
add
pop
cld
inc
incb
add
add
lock
push
add
add
add
add
repz
add
popa
mov
and
add
add
pop
ret
mov
add
add
add
lea
add
add
push
add
add
je
clc
popf
rolb
add
stos
test
arpl
add
add
mov
test
add
add
dec
push
fisttpl
add
sbb
add
add
xchg
dec
imulb
mov
sbb
add
add
shl
add
popa
fadds
add
add
mov
sbb
add
add
lock
xchg
push
test
add
add
sbb
sbb
add
add
repz
add
xchg
dec
add
jp
add
add
xchg
jl
loop
add
dec
add
add
mov
mov
add
add
mov
add
add
mov
xchg
add
add
out
mov
add
add
pushl
mov
add
addr16
or
add
add
mov
mov
xchg
jnp
add
add
mov
dec
mov
jmp
add
add
add
adcl
add
add
or
pushf
into
add
add
jnp
xor
add
jecxz
add
add
in
add
mov
add
add
push
xchg
arpl
test
popf
arpl
add
xor
add
add
push
scas
push
add
add
insb
jp
add
add
iret
shll
add
mov
add
add
pop
in
dec
and
cmp
add
add
cmp
add
add
xchg
imul
add
add
imul
add
add
xchg
adc
and
add
add
arpl
add
add
or
pop
add
add
and
popa
call
add
aaa
mov
roll
add
mov
pop
add
add
pusha
hlt
push
stos
pop
add
add
aaa
jg
fadds
add
sub
add
add
arpl
add
lcall
add
add
pushf
sub
add
aam
add
add
push
jo
arpl
add
add
add
dec
or
pop
add
std
stos
add
add
xor
loopne
add
add
addl
lods
adc
add
pop
cld
add
add
daa
lods
les
sub
add
add
adc
add
add
lahf
in
fiaddl
add
add
add
jg
add
add
stos
cmpsb
sbb
aad
add
add
mov
fcompl
add
add
hlt
xor
add
add
add
xor
inc
mov
add
add
pop
xlat
iret
adc
add
add
push
cmpsb
lock
add
adc
add
push
add
add
stc
add
jnp
add
add
push
in
add
or
add
add
pop
xchg
fsubs
add
sub
add
add
out
lea
add
push
outsb
inc
icebp
cltd
add
add
mov
addl
add
add
mov
sub
add
push
add
add
sbb
jnp
add
ret
testl
cmp
jno
add
add
jnp
mov
push
cmp
add
add
add
push
add
add
testl
add
add
fwait
mov
popf
addb
add
outsl
sub
push
test
add
add
test
add
add
test
add
add
xor
add
lcall
inc
jmp
insb
or
add
add
xor
add
add
add
add
out
jno
add
add
sahf
add
add
or
insb
xor
gs
test
add
sbb
add
add
int3
stos
mov
add
add
sbb
adc
sbb
add
add
xlat
dec
movsb
jbe
add
add
cmp
jecxz
repz
add
imul
add
add
push
call
add
add
inc
add
add
jmp
xor
xchg
add
add
aad
cmp
dec
sbb
add
add
ja
xchg
ja
add
add
lea
add
xchg
cwtl
add
add
xchg
push
insb
sub
add
add
mov
add
add
aas
cltd
shlb
add
dec
cs
lret
cltd
add
add
and
mov
and
add
add
add
add
add
fstpt
ss
add
lea
add
add
pop
in
add
xor
add
add
std
orl
sbb
add
add
mov
mov
adc
add
add
add
and
das
lds
arpl
add
add
les
add
add
cmpsl
lods
test
add
call
add
imul
into
mov
mov
sub
mov
add
fildl
add
add
pop
lcall
add
mov
call
add
add
movsb
add
add
and
addb
add
addb
mov
add
add
frstor
mov
add
add
addb
add
mov
testb
add
movaps
add
gs
add
add
cltd
jbe
sbb
add
repnz
pop
out
add
add
rorl
add
and
add
add
or
add
add
roll
add
add
add
loop
add
add
pop
mov
stos
add
add
add
sbb
decl
add
add
jg
add
add
pusha
aad
ss
cmp
xor
test
add
push
add
movsb
xor
add
add
xchg
add
popf
xor
add
add
jns
mov
add
dec
jbe
add
add
inc
add
add
or
in
add
add
mov
jno
add
jne
mov
add
add
bound
add
sub
add
add
pop
sbb
add
xchg
add
add
lds
add
add
jmp
pop
add
add
gs
lcall
and
dec
rolb
add
add
inc
stc
mov
add
add
cmp
sbb
add
add
and
add
add
popf
mov
add
add
sub
add
add
stos
imul
sbbl
and
add
add
adc
add
add
scas
aaa
add
popf
xlat
add
add
xchg
ret
pop
cmp
add
add
scas
jno
push
add
add
leave
imul
add
stos
lcall
add
pusha
add
add
pop
adc
mov
add
mov
add
add
dec
jns
cmp
add
add
shrb
add
rolb
add
add
or
xor
add
ds
fcmove
popl
add
add
add
mov
add
add
push
push
sub
add
add
xor
jbe
into
movsb
add
add
jno
icebp
or
add
dec
add
add
dec
jp
cmp
add
cmp
pop
adc
add
add
es
add
add
add
xchg
in
pop
test
add
add
in
in
cmp
loop
add
add
add
testl
add
cli
sti
imul
inc
push
iret
cltd
sub
add
add
sahf
jnp
add
aad
add
add
loope
cltd
addr16
push
add
add
jae
outsb
mov
add
adc
add
xchg
add
add
shll
push
inc
add
add
inc
fdivrs
scas
adc
add
add
nop
out
add
sub
adc
and
add
add
or
add
add
mov
in
ret
add
add
pop
adc
sbb
add
outsl
pop
faddl
add
jg
out
push
add
hlt
pop
add
add
mov
fldcw
add
add
dec
addl
add
add
aas
jmp
inc
add
add
sbb
loop
mov
add
add
add
add
adc
lahf
and
add
add
add
cmp
pop
add
add
dec
push
lret
out
add
add
cmc
cmp
add
add
outsl
or
jge
testl
mull
add
add
out
adc
add
mov
add
add
xor
mov
add
add
jae
fwait
mov
add
add
inc
mov
add
add
add
pop
and
add
mov
adc
add
add
out
push
cmp
add
add
gs
jle
outsb
add
add
inc
adc
xor
add
add
add
add
add
xlat
lea
fiaddl
add
add
repz
lcall
dec
rcrb
add
add
add
fnstcw
and
add
jmp
xchg
push
push
mov
adc
lds
add
test
jmp
add
add
add
add
add
jecxz
test
add
add
lea
add
add
in
add
cmp
add
add
inc
add
xlat
add
add
aas
cmp
add
add
je
ss
mov
jmp
add
add
add
add
add
push
dec
pop
and
sbb
add
add
add
add
add
shll
or
stos
add
add
rcrb
add
add
xor
add
add
mov
sub
add
cmp
mov
add
add
mov
add
movsb
testb
add
cmpsl
stos
xchg
or
add
add
lods
cwtl
cld
sub
add
adc
mov
add
add
add
sub
inc
test
add
add
sbb
add
add
ret
add
movl
jp
pop
pop
dec
add
add
push
mov
add
add
add
add
push
outsl
jb
add
add
leave
dec
ljmp
add
add
aas
add
add
js
add
add
test
add
add
xchg
add
mov
add
mov
add
add
subl
add
add
mov
pop
testb
add
mov
popl
add
add
out
test
push
adc
fwait
pop
ja
add
mov
add
add
add
push
add
add
lret
push
aas
rolb
add
mov
add
add
add
ja
pop
inc
addl
add
adc
or
in
add
add
out
jnp
movsb
add
sbb
jns
add
add
add
bound
add
add
add
inc
add
add
mov
int
scas
movsb
add
add
inc
enter
push
add
add
xorl
xor
add
add
movsl
add
add
sub
jp
mov
add
sbb
add
dec
lret
add
add
jnp
arpl
add
add
jo
xchg
xchg
adc
add
add
sbb
mov
and
repnz
popf
or
add
add
out
sub
add
add
pop
pop
mov
mov
add
add
inc
and
insb
add
add
scas
adc
add
add
sbb
add
add
fldenv
mov
sbb
ret
hlt
add
add
or
add
add
add
inc
rorl
dec
pop
mov
cmpsl
push
sbb
and
mov
add
add
add
leave
loopne
jb
xor
add
add
mov
add
mov
add
in
fisubs
lret
add
add
cwtl
shlb
ret
add
push
push
add
add
fisttpl
add
add
push
cmpl
add
add
xchg
es
inc
pop
add
add
xor
add
add
sub
andl
popf
add
add
daa
stos
lcall
add
add
repnz
imulb
add
add
jns
or
add
add
test
add
incb
add
add
mov
and
add
add
nop
add
add
cmp
out
add
mov
add
popf
add
add
sarl
push
fidivs
add
cltd
and
add
add
pop
fnstsw
push
mov
add
sub
fwait
movsl
add
add
mov
testb
cmc
jl
add
add
dec
pop
jp
int3
add
add
imul
rorb
push
iret
adc
add
mov
add
add
sub
pop
pop
adc
add
add
rcl
adc
add
iret
and
add
addb
add
int
outsl
daa
sbb
add
or
add
add
add
roll
add
add
addr16
mov
add
add
pop
mov
xchg
jae
add
add
int3
std
fildl
add
push
add
add
rcl
addr16
sub
sub
jg
add
add
pop
sub
add
add
add
inc
mov
add
scas
imul
add
add
and
mov
add
add
cli
xor
add
add
pop
loop
push
push
add
add
lods
push
and
add
or
add
add
mov
add
add
push
cmp
mov
add
cmp
add
test
add
add
or
shl
add
add
jne
pop
iret
imul
add
mov
add
pop
add
add
sti
popf
xchg
out
or
add
add
loopne
clc
in
add
add
repz
add
scas
mov
sbb
loop
add
add
sub
xchg
lcall
xchg
roll
add
pop
add
add
dec
das
fstpl
add
xchg
insl
addb
add
xchg
or
add
add
adc
ret
fsts
add
add
popf
mov
xchg
add
fucom
add
and
add
xor
mov
xchg
add
add
add
call
add
add
dec
add
mov
add
hlt
ljmp
cmp
lods
add
add
std
shll
adc
add
add
mov
add
add
test
add
add
sbbl
add
add
add
aad
add
add
cltd
add
add
icebp
pop
rolb
out
add
add
lret
mov
add
add
cmc
imul
add
add
jl
or
add
add
cmp
add
add
cmp
add
add
add
add
xor
sub
add
add
std
aad
jg
lods
add
add
xchg
cld
enter
dec
mov
add
add
out
outsl
inc
add
add
add
mov
add
add
add
add
add
mov
pusha
cmpsb
xchg
das
add
add
sbb
clc
dec
jmp
add
add
stos
jbe
or
add
add
xchg
xchg
mov
add
add
add
adc
add
add
dec
push
adc
add
dec
cmp
add
add
mov
add
add
add
mov
lcall
jnp
add
add
or
es
pop
dec
add
add
xorl
add
add
out
add
dec
add
add
fwait
xchg
inc
sbb
adc
sbb
icebp
add
add
xchg
imul
add
add
mov
dec
add
add
mov
rolb
add
add
sub
add
add
out
pop
add
dec
xlat
add
add
std
mov
pop
jp
add
add
or
add
and
add
add
inc
add
add
outsl
sbb
add
add
jmp
add
js
add
add
push
add
add
mov
or
add
add
add
jnp
test
faddl
add
add
and
cs
add
dec
add
add
popf
fsubrs
les
add
add
mov
add
add
pop
insb
mov
add
iret
ficomps
add
add
add
push
add
add
xchg
add
add
xchg
jo
and
add
add
xchg
pop
adc
imul
lcall
arpl
or
or
or
add
add
inc
fidivrl
cmpsl
add
add
vmovaps
add
movsb
mov
add
add
cmp
imul
add
add
mov
add
add
adc
jg
add
add
cmp
pop
xchg
clc
add
add
cmp
movsl
sldt
pop
inc
add
add
push
pop
adc
add
roll
push
mov
add
add
out
mov
add
push
add
add
xor
fwait
add
add
dec
mov
add
add
in
popa
dec
in
add
div
add
add
daa
stos
lret
inc
leave
sbb
add
add
mov
jmp
add
lahf
inc
dec
mov
add
add
test
jle
cmpsb
mov
add
loope
hlt
add
mov
add
add
cmp
ds
add
sbb
and
fsubrl
xor
pop
add
cmp
add
add
pop
add
daa
sahf
fwait
add
add
jns
push
push
add
add
add
add
jp
add
add
xchg
add
add
cld
jbe
add
add
pop
adc
loopne
add
add
fdivp
pop
cmc
add
add
test
add
add
mov
lretw
rcll
fidivs
mov
add
lods
push
sub
std
add
add
sbb
jns
add
add
test
cmc
outsl
push
add
fs
insl
testb
add
cmp
add
jnp
add
add
mov
sub
add
mov
add
outsl
lret
add
ffreep
add
add
stc
into
ja
lcall
inc
movsb
aas
push
add
add
xor
cmc
xchg
add
add
xchg
sub
xlat
or
add
add
pop
add
add
add
in
jb
add
add
inc
add
add
mov
cli
add
add
gs
in
jp
add
add
add
pop
stos
je
mov
add
add
adc
sub
add
or
fadds
add
add
and
add
add
pop
sbb
add
lods
jl
add
jecxz
add
add
repz
jp
add
add
ret
fwait
xchg
cmc
add
add
jmp
stc
int3
add
or
add
jmp
add
add
popa
dec
inc
int
test
lea
shll
add
add
adc
add
add
jl
add
add
jbe
push
add
lcall
xchg
fidivs
add
pcmpeqb
mov
add
xor
rclb
fisttpl
stos
cmp
aaa
dec
inc
dec
frstor
add
add
roll
sub
add
xor
add
add
js
out
lods
cmp
add
add
pop
mov
lds
add
add
add
incb
add
add
fldenv
add
and
stos
jno
add
add
add
add
out
not
ljmp
fisttpl
add
add
dec
push
adc
add
pop
add
add
ret
or
lea
add
iret
cltd
dec
lock
mov
add
addb
add
and
fwait
add
add
imul
sbb
imul
adc
notl
add
add
xchg
cmp
push
add
add
lods
sub
add
add
cmovbe
add
add
cltd
sbb
inc
int3
add
add
cld
pop
push
in
add
add
add
push
push
nop
add
subb
gs
add
add
add
sbb
push
sahf
xor
add
add
mov
add
add
add
add
inc
loopne
rolb
add
add
pop
add
add
add
add
incl
add
add
cmp
add
add
nop
jg
or
push
ja
cmp
add
mov
add
fwait
aad
addl
add
jne
push
repnz
movsb
add
add
jns
lcall
add
add
lock
add
rcrb
add
add
mov
aam
add
fimuls
add
jne
jae
call
add
jmp
mov
add
add
or
aas
add
add
add
mov
add
fistpll
hlt
into
add
pop
loop
add
add
addr16
mov
cmp
add
add
mov
and
dec
add
add
and
add
add
sarl
add
add
add
iret
incb
add
add
mov
add
jae
pop
add
mov
add
add
popf
decl
add
add
std
stos
dec
add
push
or
sbb
add
add
iret
cmp
add
add
mov
cmp
inc
rcll
add
notl
add
add
xchg
dec
and
add
add
rcrb
lcall
leave
into
cmp
add
insb
adc
add
add
jge
outsl
pop
add
add
pop
shrb
mov
add
dec
jb
add
push
add
add
lds
add
add
cli
or
add
add
jge
xor
add
jno
add
add
aaa
jnp
lahf
jbe
add
add
cs
add
add
add
push
add
add
cmp
popf
mov
add
add
push
lea
add
add
pop
into
add
cli
pop
add
add
dec
mov
add
add
dec
add
add
inc
rcll
xchg
add
add
in
dec
iret
lret
sti
mov
jg
cmp
fadds
add
add
add
add
add
lahf
popa
int3
fmulp
jo
add
add
push
xor
fldl
add
add
pop
aas
sbb
add
add
sbb
jnp
or
add
add
aad
xlat
nop
dec
add
add
sbb
in
leave
add
add
xor
movsl
int
mov
add
add
dec
js
cmc
movb
add
sub
or
add
popl
add
add
add
add
pop
insl
cmp
mov
add
add
in
int
add
cmp
add
add
pop
xchg
mov
inc
add
add
lret
sub
subl
add
add
divl
add
add
fadds
add
add
aam
add
add
add
sahf
add
aad
add
add
sbb
out
jbe
sbb
add
add
add
pop
add
add
adc
mov
add
add
cmp
inc
add
add
in
lret
and
add
add
pop
add
in
movb
add
outsl
test
add
add
gs
add
add
out
dec
inc
add
rorb
add
add
xor
add
add
jo
into
cmpsl
jecxz
add
add
imul
xchg
add
add
add
stc
test
imul
add
cmp
mov
add
add
sti
sti
cmp
add
add
gs
sbbl
jge
cltd
cmp
add
add
sbb
add
pop
add
add
xlat
dec
and
add
add
in
fucomi
dec
add
add
dec
in
jmp
outsb
add
add
ftst
pop
add
add
xchg
add
add
adc
xor
add
xchg
add
add
jmp
sbb
dec
add
add
test
add
add
jecxz
cmp
add
outsb
push
add
add
out
jno
js
add
add
aaa
pop
xchg
add
fisttps
add
add
aas
adc
add
add
orl
cli
add
add
mov
test
add
add
orl
push
cld
pop
or
loopne
add
add
add
addb
add
rcll
loopne
movsl
add
add
hlt
fcompl
add
add
jle
adc
add
roll
add
add
mov
out
mov
add
add
inc
roll
add
add
add
cmpsl
test
sub
loop
add
add
cld
test
add
pop
jno
arpl
add
add
add
sub
cld
adc
add
add
mov
out
and
add
add
mov
add
push
or
add
add
insb
add
add
add
mov
add
add
add
xor
add
add
cmp
mov
mov
add
add
ljmp
add
add
add
add
shld
add
mov
inc
add
add
xchg
or
add
int
add
add
test
cli
adc
add
add
push
sbb
or
lahf
sldt
gs
add
add
mov
sub
add
add
test
cld
addb
add
fwait
in
mov
add
add
add
xor
add
add
push
nop
fiadds
add
add
add
add
xor
pop
xor
add
add
add
add
out
sbb
push
add
pop
lahf
add
add
jns
fucomi
sti
adc
push
inc
mov
popa
add
add
mov
adc
add
add
mov
and
add
add
sbbl
add
push
push
add
add
sub
jecxz
add
add
iret
add
add
in
sbb
add
add
add
fistps
xchg
lret
add
add
cs
xchg
call
add
push
ljmp
add
add
and
inc
adcl
xchg
insl
hlt
add
add
pop
add
iret
add
add
jae
push
mov
add
or
add
add
rcrl
add
ret
add
add
push
push
mov
add
add
flds
add
add
add
sbb
add
add
cmp
jl
add
add
aam
sbb
ja
add
add
mov
add
je
add
add
inc
mov
cs
add
add
dec
push
inc
aas
dec
sub
add
add
push
jno
add
xor
add
add
and
add
js
shlb
add
add
push
sti
add
add
mov
add
jb
imul
jecxz
mov
out
add
add
add
add
add
scas
xor
add
add
jge
cmp
add
add
daa
test
add
add
add
int3
sti
cmp
pop
fimuls
mov
loop
add
add
add
add
add
call
add
add
clc
enter
add
add
cmp
push
add
push
add
add
movsl
adc
add
add
push
push
and
add
add
pop
push
jmp
add
fmulp
add
add
pop
lcall
add
fstp
sub
outsl
jl
add
add
add
add
out
add
add
add
incb
add
add
fsubl
add
sub
add
add
sub
dec
dec
add
add
in
shlb
adc
add
add
cld
xor
add
add
int
rcrl
and
add
add
and
lcall
add
add
add
add
jg
out
mov
add
add
add
jl
call
testl
popf
loop
add
add
fwait
aas
cmp
jbe
sahf
data16
add
add
stc
cmp
sbb
add
add
add
adc
mov
xlat
aas
add
add
jbe
fcoms
jg
add
add
or
popa
add
jecxz
add
add
cmc
push
fucomip
test
add
add
xchg
add
add
lods
or
pop
add
add
out
fs
stc
daa
add
add
mov
add
add
add
clc
stos
add
and
add
add
cmp
add
add
test
add
add
add
add
stos
mov
add
add
icebp
add
add
repz
mov
lods
add
add
sbb
sldt
add
push
cltd
sub
mov
add
add
ja
add
add
addb
add
dec
dec
jbe
das
rolb
add
add
les
add
movq
add
adcb
es
jmp
add
test
scas
stc
add
add
dec
or
sbb
add
add
pop
lods
roll
or
add
add
mov
outsb
fisubrs
add
add
push
out
add
add
inc
push
jmp
outsl
dec
add
add
jg
jb
std
mov
std
test
inc
add
add
mov
push
loopne
xchg
add
add
mov
mov
das
and
cltd
add
jge
add
add
mov
mov
ljmp
add
add
pushf
rorb
add
add
lret
in
adc
add
add
jecxz
add
add
sub
pop
add
fsubrp
add
add
insl
and
add
add
mov
add
add
add
pop
nop
jb
loop
add
add
in
or
loopne
or
add
add
add
add
dec
std
add
stc
mov
add
add
add
out
add
add
mov
add
das
cmc
add
add
shlb
dec
or
add
add
add
add
add
xchg
imul
rolb
sbb
add
dec
pusha
add
mov
add
add
xchg
shll
jb
pop
add
add
add
jnp
dec
add
addr16
or
scas
data16
add
add
xchg
xor
inc
out
push
add
add
add
fwait
adc
mov
mov
add
add
add
add
add
xchg
push
fs
test
add
add
mov
cmc
add
add
lods
dec
dec
mov
sahf
add
add
jne
xor
add
add
out
idivl
add
add
roll
add
add
orl
add
add
add
add
add
pop
dec
cld
fidivs
add
add
push
mov
add
jge
add
add
sub
stos
adc
add
add
add
add
add
add
in
dec
outsl
cmp
add
xchg
push
daa
cmp
add
add
add
add
mov
fsubs
add
add
pop
add
add
iret
sti
cmp
incb
add
add
dec
ds
leave
add
add
xchg
cld
idivb
add
add
xchg
jne
enter
mov
add
add
cltd
inc
inc
aaa
add
add
jle
adc
lea
add
add
arpl
pop
icebp
add
cwtl
cmp
add
add
loope
add
add
out
add
add
popa
ss
add
cmpb
add
mov
aaa
add
add
iret
pusha
hlt
adc
jge
add
add
stc
lock
jnp
add
add
add
xlat
outsb
mov
add
add
add
cmp
loop
add
pop
cltd
add
add
push
dec
loop
cwtl
xchg
add
add
cltd
push
sbb
add
dec
movsl
mov
pop
add
add
xor
add
add
add
and
movsb
add
add
in
push
test
add
shll
cmpsl
jbe
mov
add
push
mov
add
add
add
add
lahf
add
add
adcb
sub
xor
add
add
inc
or
add
or
cmp
sub
popf
add
add
push
mulb
sahf
jg
add
add
xor
out
and
add
pop
ja
lret
pop
pop
add
add
push
subl
incl
add
add
add
out
add
add
xor
mov
add
inc
fwait
add
aad
add
add
pop
in
sub
add
add
add
push
sub
push
clc
adc
add
add
xchg
outsb
cltd
movsl
xchg
add
add
mov
or
add
inc
jbe
add
add
or
add
add
add
add
sbb
lret
ret
dec
add
add
test
sahf
adc
add
add
insl
sub
add
add
add
add
enter
lret
add
out
ret
imul
addr16
add
mov
stc
repz
pop
pop
add
add
and
add
add
xor
mov
add
add
or
dec
fcom
lds
add
add
dec
xor
das
xor
add
add
xor
cld
lock
add
lods
lock
add
add
add
add
add
gs
int
add
int
add
add
inc
xor
add
xchg
repz
xor
add
add
xlat
enter
add
bound
add
add
jnp
add
add
aam
lds
add
add
fsts
mov
add
add
repz
sti
pop
cltd
jp
add
add
lods
cmp
add
add
jmp
movsl
add
add
ret
add
aad
add
negb
add
add
lea
inc
icebp
add
add
mov
add
add
or
add
aas
push
dec
inc
add
cld
pop
add
add
dec
clc
mov
add
add
mov
dec
add
add
cmpl
add
fistl
add
add
pop
je
mov
add
shl
ljmp
add
add
insl
inc
movsl
jb
add
add
xor
add
add
mov
adc
add
in
sbb
add
add
inc
push
add
data16
and
call
add
add
add
jae
mov
out
add
add
mov
add
sub
cs
add
add
ret
mov
add
add
loopne
dec
loope
or
add
add
add
fiaddl
add
add
or
add
add
rclb
add
fisttpll
xchg
rolb
add
xchg
clc
in
out
lcall
lods
insb
test
add
add
packsswb
add
add
cltd
shlb
mov
add
push
divb
add
add
push
mov
pop
add
add
stos
xor
xor
add
popf
add
add
mov
add
add
es
cli
incl
add
add
fadds
add
add
add
mov
lcall
ror
je
add
add
cmpsl
into
xor
mov
add
lods
push
add
out
int3
add
add
inc
jle
icebp
mov
add
add
xor
push
add
dec
les
add
lea
add
add
mov
add
add
repz
add
mov
popf
xor
add
cmp
add
add
lods
cmc
int3
cmp
add
add
lods
add
add
sub
add
push
add
add
addr16
jecxz
mov
jno
mov
add
add
xchg
inc
sbb
add
add
add
jmp
mov
add
add
xor
add
add
cmp
sub
add
add
test
sbbl
add
add
je
jb
xchg
add
add
jae
add
add
add
popf
je
scas
mov
bound
add
add
mov
xchg
add
add
iret
pop
rcrb
add
add
test
inc
lds
add
xchg
sub
add
add
cmp
add
add
adc
add
add
xor
pop
add
add
arpl
mov
pop
mov
pop
popa
push
add
add
sbb
add
in
cmpsl
add
add
vxorps
add
add
add
in
repnz
push
add
add
jge
movsb
sldt
adc
add
add
aaa
mov
add
add
popa
mov
add
add
scas
out
add
enter
add
cmp
add
add
add
jbe
ljmp
pop
adc
add
lahf
add
add
dec
adc
ss
add
add
test
jo
lea
add
add
popa
cmp
add
sbb
add
add
std
mov
xorb
add
mov
cmp
add
movsl
and
add
xor
lahf
mov
add
add
imul
xchg
sub
sbb
testl
pop
pop
inc
jbe
add
add
add
ds
sti
dec
add
add
sbb
add
inc
daa
add
add
xor
add
add
xchg
add
outsl
sub
add
add
sub
add
movsb
add
add
adc
imul
add
xor
xorb
int
mov
add
mov
add
add
pop
push
aas
add
add
add
imul
sbbb
jg
stc
hlt
add
into
pop
add
add
mov
add
add
cmp
add
add
ror
movsl
add
lock
add
add
sbb
pop
les
add
add
mov
add
add
int
sbb
add
add
cmp
dec
add
add
sbb
or
add
add
in
stos
add
out
nop
add
add
outsl
inc
insb
fwait
sub
add
and
jecxz
add
add
test
add
addr16
add
add
xor
add
add
faddp
into
push
mov
add
xchg
addl
add
add
les
add
add
mov
add
sti
or
lock
add
gs
mov
mov
add
add
lea
adc
add
add
add
add
add
pop
jo
xor
add
add
in
sbb
out
add
add
fwait
xor
add
add
add
add
add
xchg
leave
xchg
mov
add
adc
rolb
les
test
aam
fadds
add
add
nop
jae
lds
add
add
jge
inc
add
xchg
add
add
lea
test
mov
pop
dec
pop
mov
add
inc
sub
incl
add
add
add
aas
repnz
xor
add
dec
add
add
mov
xchg
scas
add
cmp
orl
add
add
lcall
add
mov
add
push
add
add
roll
fnstsw
add
add
mov
add
add
add
lret
pop
insl
add
pop
push
add
add
mov
data16
add
add
mov
addl
add
insl
icebp
add
add
pop
add
add
cmpsl
movsl
jmp
add
add
cmp
add
add
pop
into
mov
add
add
add
sub
adc
aam
add
add
mov
outsl
add
add
add
popa
push
out
add
add
add
mov
mov
cmp
add
add
mov
sbb
add
add
fnsave
add
add
subb
add
add
add
add
add
cmpps
push
add
add
pop
sub
add
add
xchg
arpl
add
roll
add
add
lods
and
add
add
into
out
sub
add
or
fldl
add
add
add
mov
xchg
add
add
in
test
fsubrs
add
add
fwait
jb
arpl
add
and
add
jbe
add
add
pop
xor
int3
add
add
mov
add
add
xor
ljmp
or
and
add
add
out
mov
mov
add
add
jns
jne
mov
add
add
lret
push
arpl
add
add
mov
inc
pop
add
lahf
clc
add
add
mov
add
add
xchg
dec
xchg
add
add
orl
inc
add
in
jae
add
add
add
add
add
fs
mov
add
add
in
add
cs
add
add
fbstp
add
add
scas
jmp
add
add
push
cmpsl
lcall
add
add
push
shrl
cli
fldl
add
add
cmpb
cmpsb
add
add
pop
movsl
rolw
sub
jae
mov
add
add
mov
movsb
push
aas
add
add
imul
test
add
out
add
add
push
sub
mov
add
mov
adc
or
add
add
add
inc
int
roll
add
add
inc
mov
inc
fadds
add
add
add
add
add
leave
stos
repnz
add
dec
adc
add
add
add
adc
add
add
cmp
add
add
jp
enter
add
add
push
add
scas
in
add
add
xchg
arpl
fadds
add
add
out
add
add
xor
add
add
add
scas
int
mov
add
jmp
out
add
add
movsl
jl
add
cmp
jno
jmp
repnz
add
add
insb
push
pop
inc
js
add
add
add
add
test
test
lret
inc
add
add
cmp
add
mov
add
add
movsl
sub
stc
fldl
add
add
repnz
shlb
add
add
pop
lds
add
adc
add
push
jl
rcll
lret
cs
mov
add
add
add
add
sbb
add
add
inc
lahf
push
clc
or
push
fld1
or
add
add
sub
mov
add
sbb
testl
jo
add
add
mov
negl
add
add
adc
lcall
add
add
add
mov
add
cld
xor
add
testl
rolb
add
add
pusha
mov
add
add
mov
add
add
popa
mov
add
add
adc
cmp
cli
add
add
inc
adc
inc
int
add
add
or
lcall
stos
fnstenv
cmc
add
add
fs
roll
sbb
add
add
add
add
test
cwtl
lods
adc
add
add
mov
add
add
pop
inc
frstor
add
pop
jbe
add
add
xor
fisubl
add
add
cs
data16
jl
add
add
add
jae
add
add
mov
cmp
add
pop
scas
loopne
pop
out
add
add
int
imul
add
add
data16
add
out
sub
cmp
add
add
aad
adc
add
into
sub
add
add
xor
cwtl
add
add
adc
aad
popa
add
add
mov
movsb
add
add
adc
int
lock
add
inc
in
fsubrs
add
addl
add
add
jecxz
xchg
popf
jbe
add
add
mov
jo
add
add
cmc
xchg
or
add
add
inc
mov
sub
add
in
jb
xchg
mov
std
mov
fyl2xp1
add
add
mov
jp
pop
add
add
add
sub
das
mov
enter
add
mov
sbb
add
add
mov
icebp
and
inc
add
add
lret
cmp
xchg
jo
add
add
sti
fdivp
jno
jp
add
add
dec
jo
add
cmp
insl
fmuls
dec
pop
xchg
add
add
jo
mov
add
add
add
add
add
pop
in
cltd
adc
add
add
popf
pop
aam
scas
add
add
xchg
jbe
add
sbbb
xor
add
add
mov
add
add
add
inc
add
add
mov
or
fnstsw
add
add
clc
mov
pop
add
add
stos
adc
add
add
mov
fnstcw
add
add
dec
mov
dec
xor
add
add
push
add
add
mov
pop
add
add
pop
repnz
add
arpl
add
add
in
dec
bound
aad
xchg
mov
add
jecxz
add
imul
mov
add
add
adc
add
add
add
add
add
mov
cmp
add
add
rorb
push
sub
add
add
lds
add
add
out
xchg
mov
add
add
in
in
lret
add
addr16
outsb
add
push
roll
add
mov
xor
add
add
dec
movsl
test
add
add
cmp
and
add
jp
add
add
jge
add
add
or
add
jnp
inc
test
add
add
add
in
or
add
add
out
xchg
into
pop
js
add
add
add
jo
add
add
push
pop
arpl
add
add
mov
incb
add
add
sbb
lret
or
pop
fsubr
inc
lock
add
add
push
add
add
xchg
jp
cmc
add
cmp
add
add
cmp
xchg
add
add
adc
adc
add
sub
add
cmp
add
add
or
outsb
add
add
add
add
add
vshufps
add
mov
pop
add
add
stc
int
cmc
jg
add
add
aaa
fistps
dec
xor
add
add
mov
or
add
add
mov
jmp
add
cmp
in
add
nop
mov
add
add
adc
add
add
out
adc
add
add
jo
add
xchg
ja
add
add
mov
lock
and
mov
in
lret
ret
je
add
roll
add
add
movsb
lds
add
dec
jl
andl
add
lahf
cld
sbbl
mov
add
add
test
out
add
add
ljmp
add
add
mov
add
int
add
add
cmp
cli
test
add
test
add
add
xor
inc
add
filds
add
add
iret
mov
add
add
aam
push
mov
add
add
add
add
add
das
add
add
out
add
daa
push
add
add
pop
or
pop
add
sub
add
add
push
xor
add
add
movl
lahf
insl
lcall
add
and
push
push
scas
dec
add
add
sarb
add
add
sbb
mov
add
pop
add
add
sbb
mov
mov
add
add
cmp
add
add
add
add
add
aad
mov
add
outsl
add
xchg
add
or
add
sbb
add
or
ss
add
add
xor
cld
aam
add
add
cs
lret
push
add
add
dec
pop
xor
test
add
loop
dec
add
and
add
add
lods
movsl
or
add
add
cli
aaa
cmpsb
aaa
add
add
gs
push
add
mov
add
add
pop
xor
mov
add
add
adc
sub
add
add
xlat
test
test
add
sbb
add
add
rolb
add
add
cs
add
add
fincstp
jmp
add
xchg
add
add
repz
lcall
add
fidivrs
std
and
add
arpl
scas
add
add
aad
das
sub
stc
add
add
into
rolb
cmp
add
add
add
lret
add
or
or
add
add
ljmp
add
aas
xor
push
add
add
dec
pop
pop
call
add
int3
add
add
cmpl
mov
add
add
and
add
add
add
icebp
subl
add
add
fiadds
inc
add
add
std
bound
out
add
add
in
mov
out
add
add
mov
xchg
add
add
add
das
pushf
scas
rcrl
add
and
sbb
add
add
cmpsl
mov
lock
icebp
clc
xor
inc
add
add
scas
int3
mov
mov
add
adc
push
add
dec
lcall
push
jb
pushf
add
add
cmc
jle
rorb
add
add
mov
add
ret
add
and
pop
add
add
scas
mov
or
mov
insb
cmpsb
add
fs
add
add
xchg
mov
add
add
add
sbb
lods
lods
pop
jl
add
add
xor
add
fmull
add
add
cltd
gs
add
add
sbb
jmp
add
add
pop
push
mov
stos
cmp
xor
add
add
test
add
add
mov
add
add
add
dec
and
cmovle
add
add
insb
inc
sbb
repnz
add
add
add
add
inc
add
add
push
pop
dec
rcll
orb
add
add
les
add
xchg
mov
add
add
xchg
mov
add
rolb
add
add
jns
mov
stos
add
add
xchg
xchg
inc
out
pop
add
add
push
loop
add
add
add
add
add
jne
push
add
add
mov
add
add
add
add
sbb
movsl
pop
add
add
dec
in
sub
lods
add
add
fcomip
mov
add
add
jmp
add
add
sti
loopne
xor
add
and
stos
add
adc
add
add
xor
lret
add
add
jne
inc
jo
add
add
jae
push
in
add
cmp
add
add
popf
jmp
add
add
mov
add
add
push
mov
aad
add
add
add
iret
ja
jle
jl
add
add
inc
out
jp
add
add
jg
add
movsb
mov
add
add
push
add
add
pop
add
add
add
cwtl
movsl
or
add
in
add
add
arpl
dec
scas
push
mov
add
add
sti
add
add
pop
mov
jo
add
add
lds
sbb
lds
and
add
add
sbb
add
jmp
add
add
aaa
cmc
mov
add
int3
sbb
add
scas
mov
mov
add
add
add
cmp
addl
add
add
or
add
or
add
mov
dec
popa
fistps
add
scas
lret
jo
xor
add
add
inc
sub
aad
add
add
in
mov
mov
rolb
add
add
mov
add
add
add
movb
add
lahf
sbb
arpl
jae
add
add
lds
add
add
aad
cmp
add
add
add
loope
sbb
add
add
ds
add
sbb
mov
adc
add
add
sbb
add
add
js
push
leave
add
add
sub
push
insb
add
cmpb
add
add
addb
add
xchg
insl
push
add
add
int
dec
movb
imul
mov
jecxz
add
add
dec
xlat
faddl
add
jg
mov
add
js
add
add
mov
orb
add
push
out
sub
add
add
mov
cmp
add
add
call
add
add
dec
fadds
add
add
mov
inc
mov
add
add
mov
add
add
lret
lret
mov
cmc
cmp
pop
add
movsb
xchg
add
add
outsl
jecxz
out
jnp
add
add
fs
pop
add
add
out
mov
push
add
add
xor
add
add
xor
into
stc
cs
imul
add
add
pop
push
add
add
jecxz
mov
in
dec
add
add
sti
adc
push
push
add
add
gs
frstor
add
mov
adc
add
sbb
add
jb
add
add
les
imul
jns
in
pop
mov
add
jo
add
sti
test
add
add
cs
jnp
add
add
or
jmp
add
adc
inc
add
ret
mov
jmp
in
lods
stc
into
add
add
mov
nop
add
in
add
add
stos
fdivrs
add
mov
add
add
lea
es
jbe
add
add
adc
add
add
add
add
add
iret
xchg
roll
xchg
add
add
pop
je
js
add
add
mov
rcll
add
add
adcl
add
add
jb
mov
mov
add
or
add
add
sub
add
add
mov
cwtl
pop
xchg
xchg
add
add
lret
sbb
or
add
lret
add
add
mov
je
jbe
add
add
mov
mov
add
add
les
add
add
add
cmpsl
mov
add
add
mov
sub
add
add
sub
sahf
add
daa
sbb
add
add
or
add
add
sbb
add
add
push
sub
add
add
dec
add
add
icebp
push
mov
add
add
add
frstor
push
cmpsl
jl
add
add
push
imul
add
add
add
or
add
add
fistps
mov
push
add
add
fbstp
add
add
xchg
or
add
add
add
shll
add
add
loope
out
push
push
inc
add
add
or
imul
add
add
mov
loopne
add
add
adc
pushf
add
add
fwait
decl
inc
add
add
add
mov
add
add
mov
inc
scas
lcall
lret
add
add
aam
xchg
add
add
bound
or
jb
add
add
out
push
mov
xchg
add
add
jns
roll
dec
add
add
loop
mov
adc
add
add
ret
mov
