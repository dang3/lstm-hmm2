jmp
mov
jmp
mov
jmp
mov
xor
xor
cmp
add
add
in
push
movb
mov
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
pop
ret
xor
xor
xor
xor
xor
add
xor
xor
add
add
xor
xor
aaa
add
add
add
add
add
cmp
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
add
push
mov
add
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
aaa
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
add
add
xor
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
add
add
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
cmp
xor
xor
xor
add
add
xor
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
xor
xor
cmp
add
add
xor
xor
aaa
add
add
lea
push
mov
add
mov
mov
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
mov
cmp
je
jmp
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
xor
divl
test
jne
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
cmp
je
jmp
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
cmp
je
jmp
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
sub
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
push
mov
mov
xor
call
mov
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
mov
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
push
mov
mov
xor
call
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
movb
movb
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
lea
mov
push
add
jmp
mov
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
lea
mov
push
mov
jmp
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
sub
add
add
mov
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
mov
movl
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
pop
ret
nop
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
gs
push
pop
cmc
cmp
pop
pop
aas
push
pop
or
push
pop
adc
push
pop
cmp
aas
push
pop
xor
push
pop
pop
aas
push
pop
mov
pop
push
pop
sahf
pop
out
add
mov
pop
out
add
xchg
pop
sahf
pop
out
add
mov
pop
sahf
pop
out
add
pop
push
pop
sahf
pop
out
add
mov
pop
push
pop
sahf
pop
out
add
mov
pop
push
pop
sahf
pop
out
add
mov
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
push
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
inc
push
pop
pop
fstpl
push
inc
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
inc
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
inc
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
pop
lahf
pop
out
sub
mov
out
lahf
xchg
inc
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
inc
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
inc
push
pop
sub
mov
pop
and
mov
inc
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
inc
push
pop
mov
pop
lahf
pop
repnz
mov
inc
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
pop
sub
mov
inc
push
pop
mov
and
pop
sub
mov
inc
push
pop
and
xchg
and
pop
sub
mov
pop
and
mov
inc
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
pop
sub
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
push
call
mov
lea
mov
subl
movb
movb
movb
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
call
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
mov
call
mov
cmpl
je
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
lea
push
push
mov
sub
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
cmp
je
mov
subb
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
xor
add
mov
xor
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
incl
mov
cmp
jne
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
push
mov
push
call
cmpl
je
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
push
mov
pushl
xchg
push
jmp
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
push
mov
add
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
cmpb
jne
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
movb
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
push
push
push
call
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
jmp
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
movb
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
pop
ret
add
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
call
test
jne
mov
jmp
movw
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
push
call
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
jo
imul
add
in
add
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
movl
movl
mov
push
mov
push
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
movl
movl
mov
push
mov
push
mov
push
call
call
call
mov
mov
mov
mov
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
call
call
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
xor
xor
cmp
cmp
add
add
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
add
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
mov
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
mov
lea
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
ret
ret
lea
loope
repnz
add
sub
jge
test
add
shl
and
add
jl
add
sti
jmp
mov
add
push
mov
add
add
sub
sbb
add
into
add
add
jb
sbb
enter
mov
dec
inc
daa
jns
sbb
add
pop
test
fwait
push
fcoml
cmp
jp
data16
jg
add
add
mov
inc
cmp
rolb
ror
lods
and
jns
loop
sbb
or
sub
mov
add
arpl
mov
add
mov
add
addb
mov
dec
imul
add
lea
lea
aam
scas
repnz
xchg
add
je
add
rorb
xchg
push
jle
enter
cmp
pop
insb
dec
adc
xor
mov
mov
in
lock
add
add
mov
shrl
dec
jne
into
jge
imul
add
add
add
add
ljmp
xchg
cli
pop
rclb
add
xlat
xor
repz
lahf
add
inc
fcmovnbe
test
add
or
push
add
add
dec
lods
xor
sbb
or
repz
bound
xchg
add
arpl
push
aam
mov
arpl
leave
mov
add
les
xchg
mov
mov
fmul
loop
imul
cmp
push
push
push
into
and
pop
or
popa
add
xchg
jne
mov
add
adc
int3
add
test
add
mov
ja
jle
roll
sub
out
add
neg
mov
iret
js
add
add
xor
pop
frstor
iret
push
lret
mov
add
cli
lock
aad
mov
push
sbb
sub
adc
push
cmp
add
fiadds
movsl
adc
inc
pop
add
sub
add
push
add
add
aam
push
add
pop
sub
or
addl
or
add
jmp
fwait
add
cmp
loop
flds
add
add
add
add
pop
popf
mov
fadds
push
mov
lcall
jbe
jne
cli
mov
add
add
cmp
xor
add
fcompl
push
push
add
js
shr
mov
sbb
clc
add
nop
out
test
test
add
add
aad
pop
cwtl
mov
add
add
add
aaa
add
cmpsb
add
add
add
mov
cmp
add
add
add
data16
bound
addr16
dec
add
shll
imul
add
add
rorb
andl
testb
mov
add
rolb
out
into
mov
jns
add
and
push
add
cld
push
faddl
add
add
add
pop
push
add
add
gs
inc
cmp
add
cmc
mov
scas
sub
cli
roll
loop
add
add
or
add
sub
roll
dec
push
mov
xchg
pop
dec
add
mov
fwait
push
add
jg
add
cmp
mov
dec
repz
or
add
add
test
adc
pop
add
push
faddl
test
pop
gs
inc
bound
inc
add
punpcklwd
pop
add
cmp
push
add
adc
in
pop
pushf
mov
push
or
jno
dec
mov
pop
and
add
pop
das
je
imul
icebp
cmp
ret
mov
add
xlat
sbb
cmpsl
jnp
test
icebp
nop
fs
cmp
ret
cmp
and
hlt
push
push
pop
in
xlat
rolb
jb
lods
stc
add
les
inc
push
out
mov
fstl
dec
in
and
out
xchg
lea
jns
inc
popa
xor
mov
out
imul
clc
jb
addps
rcrb
or
xchg
sub
gs
popf
dec
cmp
dec
test
lea
sbb
dec
mov
pop
data16
out
fwait
sub
mov
cmp
xor
adc
dec
iret
mov
out
dec
or
fidivs
sbb
xchg
ljmp
mov
adc
push
ja
and
fisttpl
or
in
mov
add
es
mov
pop
pop
out
dec
icebp
bound
mov
in
mov
addl
jmp
xor
or
sub
jp
add
mov
in
mov
push
in
dec
jle
ret
in
in
scas
xchg
pusha
jnp
sbb
lret
sbb
xchg
cltd
jbe
jmp
xchg
lcall
pop
add
push
popf
add
mov
std
ljmp
stos
notb
pop
and
xchg
insb
pusha
adc
imul
mov
iret
xchg
int
iret
inc
stc
iret
dec
test
ret
jb
stos
les
sahf
data16
notl
or
push
xchg
outsb
inc
mov
add
xchg
imul
pop
adc
mov
add
adc
xchg
inc
shlb
mov
repnz
leave
xor
push
hlt
clc
xchg
add
cmp
adcb
sbb
in
aaa
int
cmp
insl
sbb
add
add
int3
aad
jnp
mov
jge
xor
mov
imul
pop
in
movsb
cmpsl
jne
inc
test
pop
cmpsb
scas
cmc
in
lret
enter
daa
jnp
pop
cmp
ljmp
into
and
cmp
jg
and
movsl
dec
mov
push
lahf
repz
in
outsb
cmp
push
stos
xor
push
std
fistps
lock
jp
pop
lods
dec
push
dec
sub
sub
add
dec
mov
gs
in
pop
popl
aam
sbb
cmp
lahf
lcall
outsl
xor
sub
cmp
in
mov
fdivrl
pop
fcomps
inc
dec
aam
or
arpl
popf
cmp
jg
int3
test
scas
xor
stos
xor
adc
add
mov
cwtl
fidivrs
fdiv
cli
sbb
pushf
test
lret
jge
movsb
push
mov
shl
into
jno
ret
lods
insl
xor
mov
add
out
movsb
ret
stc
andl
pop
out
out
adc
mov
test
pop
cltd
js
bound
push
sti
insl
mov
int
jo
ret
sub
adc
insl
adc
in
out
repz
push
scas
xchg
popa
push
mov
xchg
fcoms
xlat
pushf
pop
inc
sub
cmp
in
adc
loope
cs
gs
nop
cmp
leave
dec
jmp
or
out
les
rcl
movb
lea
mov
or
lcall
adc
ljmp
push
sub
inc
frndint
pop
inc
inc
pop
mov
jb
loop
dec
insb
repnz
sahf
roll
in
std
and
mov
aas
sbb
lods
test
mov
nop
subl
jl
mov
lock
enter
jp
mov
mov
test
jno
es
dec
insl
mov
dec
shlb
iret
cmp
in
cld
arpl
lods
mov
mov
lea
add
sub
jmp
mov
scas
mov
data16
ds
sub
xchg
int3
cmp
popa
inc
xchg
or
stos
inc
jle
out
into
inc
dec
xchg
in
lds
xor
mov
outsl
rcll
test
pop
adc
mov
inc
adc
mov
inc
pop
adc
fwait
push
xchg
sub
fistps
add
sub
jge
outsb
mov
cmp
shll
loopne
xchg
cmp
cmc
mov
into
add
cld
sar
dec
inc
sar
jb
push
or
repnz
mov
pop
dec
jecxz
jbe
xor
sbbl
xchg
xchg
jns,pn
outsl
cli
in
mov
adcl
lahf
out
push
gs
in
ss
das
jp
sub
mov
lds
jle
cmp
in
je
pusha
push
cli
stos
fucomip
xchg
sbb
jmp
out
xorl
scas
push
inc
and
lea
mov
and
cld
sub
aaa
je
mov
xor
stos
mov
sarl
pop
loop
mov
test
std
mov
or
lret
xor
inc
and
je
or
and
shlb
pop
xor
pop
inc
ljmp
sbb
ljmp
mov
repnz
sub
xor
outsl
fists
test
idivl
sbb
loope
or
cmpsl
add
mov
dec
sub
mov
jo
and
inc
or
and
xchg
inc
cmp
movl
adc
mov
xor
lret
in
mov
in
enter
daa
jp
call
jno
out
clc
jl
jns
cmp
add
mov
fstp
inc
lahf
adc
or
ljmp
jne
dec
xor
xchg
inc
adc
mov
js
cld
or
push
mov
dec
sub
loopne
sub
int3
imul
std
adc
rcrb
out
insl
cmpb
sbb
out
add
sbb
and
sbb
int
cs
sub
das
stos
lcall
jo
out
mov
sahf
mov
je
push
push
push
jg
pop
sub
and
and
popa
push
es
stos
das
push
negl
sub
mov
cmpsl
inc
mov
adc
cmc
sbb
pop
outsl
lcall
stc
push
dec
cmc
fs
out
data16
nop
lods
mov
lahf
mov
inc
out
imul
aas
pushf
xor
jge
cmp
popa
xchg
sti
sbb
je
in
push
jp
ja
stc
loopne
adc
pop
jp
cli
adc
sbb
mov
push
xor
xchg
popf
scas
xchg
and
pop
sbb
stos
in
xlat
fcmovnb
push
sub
fldt
in
andb
jmp
std
mov
aad
cmp
nop
pop
mov
dec
pop
ljmp
std
movsl
xlat
les
jp
dec
mov
call
loope
sub
fs
adc
pushf
mov
mov
fidivrl
dec
inc
pusha
add
pop
inc
dec
clc
jb
add
daa
je
mov
fdiv
in
add
enter
cli
repz
imul
addl
pop
lret
mov
pop
mov
lock
pop
dec
mov
insb
mov
and
mov
jmp
repz
dec
add
cmpsl
jns
sarl
cs
cld
mov
jnp
aad
xchg
and
sub
pop
and
shrb
sbbl
or
frstor
arpl
cltd
xor
push
ljmp
aas
lods
cmp
stos
xor
ja
xchg
sub
adc
push
cmp
add
das
inc
test
mov
dec
or
mov
xchg
add
jno
fcom
mov
les
xchg
out
loop
ljmp
inc
jae
imul
sbb
mov
mov
lret
mov
inc
dec
mov
mov
or
mov
inc
or
or
aam
mov
adc
jne
xlat
pop
mov
mov
sbb
int3
repnz
jns
lret
pop
in
or
js
mov
mov
or
push
sbb
cmpb
test
xchg
roll
je
xchg
jle
mov
push
pusha
mov
out
or
notb
mov
cmpsb
xchg
sub
pushf
int
push
lea
dec
mov
mov
jnp
push
stos
fsubl
lea
xchg
imul
insl
scas
sub
pop
push
pop
mov
or
push
faddp
out
les
inc
addl
arpl
mov
push
mov
jae
xchg
pop
mov
gs
jb
xlat
fimuls
fcmovb
mov
mov
mov
shrl
push
jb
hlt
mov
push
jbe
mov
jge
cs
pop
cwtl
mov
or
aaa
add
lcall
xchg
inc
push
push
pop
daa
push
xor
push
mov
and
lea
enter
mov
jae
cmpsb
mov
jge
cwtl
cmp
enter
daa
jns
dec
cmp
cli
jl
cmpsb
or
shrb
pop
pop
or
js
mov
adc
mov
inc
xchg
test
push
adc
pop
jns
stc
js
adc
pop
sub
push
push
lods
std
loope
lcall
sub
int3
adc
fwait
call
orb
pop
push
xchg
and
lahf
push
int
adc
popa
mov
lcall
xor
xchg
push
mov
sahf
push
sbb
test
lcall
ss
mov
rclb
mov
sbb
ja
addr16
data16
mov
sbb
rol
push
iret
cmp
or
sbb
into
aaa
stc
stc
cmc
ffreep
xor
mov
sbb
adc
mull
sarb
data16
inc
arpl
pop
fidivrs
out
rcrl
enter
add
sar
lret
icebp
mov
pslld
gs
push
loopne
or
iret
adc
scas
push
imul
sub
pop
sbb
out
push
xlat
sbb
pushf
sub
lock
in
jmp
data16
fstp
cs
dec
aad
and
repnz
dec
mov
jle,pt
xor
test
mov
data16
dec
push
lea
inc
add
pusha
jecxz
pop
pop
add
adc
sub
pop
dec
and
or
movsl
pop
pushf
ja
inc
out
dec
inc
jp
sarl
in
pop
jb
pop
movsl
dec
pop
sbb
shll
in
mulb
push
std
outsl
push
sbb
sub
mov
sbb
mov
mov
push
dec
dec
mov
xor
lock
enter
std
mov
and
mov
jbe
mov
dec
sti
xlat
pop
cmpsl
js
adc
adc
dec
call
mov
loopne
or
inc
sbb
sub
popf
lret
mov
stos
dec
push
cmp
fisttpll
or
ljmp
push
lods
cmpsb
sbb
out
xchg
sahf
outsb
xchg
jb
pop
push
mov
pusha
pcmpeqw
pop
cltd
mov
lods
jb
les
out
jno
xchg
test
jbe
xchg
testl
fwait
mov
inc
push
and
jmp
dec
ljmp
or
mov
addr16
xlat
cld
pop
mov
dec
test
inc
xchg
xorl
add
jae
cld
mov
dec
test
inc
enter
dec
out
call
push
adc
int3
cmp
test
push
out
notb
or
dec
adc
jge
jp
xchg
lret
mov
in
mov
and
test
and
push
subl
jns
sub
push
jmp
clc
lret
leave
dec
ficoml
leave
sub
add
das
stos
dec
jae
and
adc
mov
scas
lea
stc
push
movsb
mov
das
iret
insb
pop
and
stc
pop
pusha
pop
push
clc
xor
iret
arpl
and
xor
sub
mov
jo
adcb
push
pop
mov
and
lds
popa
aad
xchg
call
leave
xchg
test
sbb
lret
sbb
dec
mov
jge
xor
aaa
or
dec
or
repz
mov
dec
push
fwait
out
push
inc
push
xor
ret
mov
scas
add
and
cmp
xor
dec
clc
pop
inc
xor
inc
in
jg
xor
daa
js
cmpb
add
dec
cmpsb
das
cmp
pop
ret
insb
mov
arpl
pop
and
pusha
xchg
lahf
push
pop
dec
push
out
xchg
test
or
not
cltd
sub
js
mov
jnp
or
push
sub
push
cmp
sbb
or
in
repz
jbe
mov
movsb
jmp
sbbb
loop
and
mov
push
jo
int
aad
sub
mov
adcl
or
int3
sahf
div
sub
sub
daa
sub
sbb
cld
mov
mov
mov
mov
std
add
ss
in
fsubs
push
pushf
neg
or
shr
mov
jno
or
inc
call
mov
xor
test
stc
mov
stc
mov
fs
or
mov
pop
push
lods
pop
js
mov
sbb
cli
sti
pop
scas
xor
cmp
notl
sti
jp
push
xor
xor
test
pop
loopne
push
int3
pop
mov
push
jne
stos
cmp
repz
add
sbb
and
xor
pop
xchg
or
or
arpl
push
inc
ljmp
in
aad
outsb
mov
dec
sbb
mov
fldcw
adc
jecxz
xchg
xchg
push
mov
push
call
fisttps
pop
lret
adc
xchg
pop
mov
jae
aas
or
test
xlat
and
test
ds
insb
je
shl
jb
scas
imulb
add
cwtl
jo
fidivl
aas
adc
xorl
and
mov
xchg
mov
jmp
lock
mov
mov
fimull
sbb
mov
ret
stc
into
jecxz
stc
rcrb
dec
idiv
adc
push
xchg
in
mov
mov
out
frstor
pusha
fisttps
test
sub
repz
sti
aas
imul
mov
clc
jp
sbb
inc
outsl
mov
lods
adc
das
out
idivl
cltd
push
fs
aam
leave
add
jmp
test
xchg
pop
xchg
jnp
fsubrs
xchg
xchg
adc
rorl
xchg
pop
adc
cmp
enter
lock
sbb
dec
into
adc
xor
ds
push
mov
sub
or
mov
into
mov
cmp
ja
clc
adc
inc
aaa
out
mov
out
testb
xchg
xlat
jne
sbb
out
nop
fldenv
in
jns
jno
in
mov
cmpl
lods
sub
aad
into
xlat
sbb
mov
sub
adc
ficompl
in
sbb
pusha
out
push
filds
notb
movsl
adc
jae
inc
lds
mov
popf
popf
cmpsb
and
push
stc
cwtl
sub
jb
cli
insb
or
dec
imul
dec
scas
lock
push
jmp
cmp
iret
lret
cmpsb
dec
ret
xor
push
cmp
pushf
arpl
xor
push
pop
adc
mov
inc
lahf
aam
fisubl
mov
xchg
lds
sbb
inc
mov
shrb
lds
enter
mov
mov
hlt
and
fstl
mov
sbb
ljmp
aaa
leave
imul
push
or
cmp
scas
insb
dec
jne
push
push
and
lods
mov
pop
pop
scas
fisttps
and
sbb
movsb
ror
pop
inc
shl
cmpsb
mov
outsl
ds
daa
ja
imul
jae
jno
je
jl
jp
cmp
xor
lods
cli
test
scas
mov
inc
push
mov
dec
push
ds
xor
pop
and
js
sti
ficoms
test
fists
xchg
dec
mov
jo
sub
in
outsb
sub
mov
pop
stos
cmpsb
rclb
leave
popl
mov
mov
add
mov
aaa
push
jae
mov
or
sub
mov
popf
lcall
outsb
fsub
fwait
sub
sahf
cltd
mov
lret
dec
hlt
jg
rorb
loop
mov
call
sti
ss
stc
push
cmp
faddl
negl
xor
roll
mov
mov
mov
std
insb
shl
insl
push
out
aaa
test
inc
stc
inc
inc
mov
enter
mov
lods
inc
jle
mov
pushf
out
stc
sar
cs
cwtl
xor
add
sti
sub
mov
loopne
inc
maxps
cmp
mov
mov
dec
in
repz
cmp
xor
fnstcw
pop
push
mov
cwtl
rorb
std
xor
in
rorl
mov
and
nop
test
scas
dec
jnp
adc
jb
fldenv
push
mov
push
xchg
call
pop
cmp
pop
jge
jb
jno
rcrb
mov
insb
inc
cmc
bound
aas
and
inc
jb
cmpsl
repnz
dec
ror
je
rclb
and
imulb
and
mov
or
mov
xchg
or
dec
ja
xor
sub
inc
mov
mov
int3
lock
adc
mov
xchg
sub
ret
mov
fsubl
jl
fildll
sub
cmpsl
jbe
loope
fwait
cs
ret
ljmp
mov
gs
out
stc
andl
test
shlb
jmp
sub
stos
aam
sahf
test
xchg
mov
xchg
fstp
lret
lock
dec
adc
enter
mov
scas
adc
jl
ja
add
out
pop
leave
jbe
add
aas
or
rdpmc
movsb
mov
cltd
adc
test
fldenv
je
jae
aas
dec
cmpsl
test
cmc
aam
sahf
fs
sbb
mov
mov
mov
push
imul
ja
sbb
ljmp
or
fdivl
pop
xor
xchg
stos
pop
mov
mov
dec
nopl
into
out
xchg
or
jno
mov
sub
dec
outsl
inc
in
jne
push
push
mov
loope
out
cmpsb
inc
loope
test
pop
in
or
lods
shl
imul
cmp
jp
int
mov
cltd
add
jnp
inc
pop
jle
xchg
shl
jo
pusha
cmpb
mov
sbb
xchg
mov
mov
push
dec
cltd
cmpsb
popf
les
jns
sub
or
stos
xor
jl
insb
ja
icebp
imul
or
xor
push
adc
jno
iret
sub
dec
ret
insl
pop
mov
outsl
andl
mov
or
mov
sahf
inc
push
test
xchg
sbb
pop
sbb
repnz
lret
xor
mov
sarb
das
repnz
add
hlt
outsl
and
jbe
popa
lea
loop
sbb
dec
rorb
sub
scas
add
or
enter
jns
or
mov
mov
xchg
jg
mov
scas
add
movsb
pop
repz
andl
adc
dec
pusha
jne
out
and
jbe
cmp
jmp
inc
cmp
jl
movsl
jno
mov
dec
xor
lahf
mov
push
push
lea
or
xor
adc
pop
xor
pop
out
stos
clc
js
int
pop
call
push
xor
scas
pop
adc
mov
sub
cli
pop
dec
outsb
mov
adc
sub
jle
bound
pop
sbb
sub
ljmp
int
or
sub
mov
ficomps
lcall
lret
fcoml
mov
sahf
cmp
cmp
and
es
push
mov
add
mov
sub
ss
sub
cmp
xchg
lret
push
mov
mov
mov
sbb
aad
inc
nop
cmc
or
lret
ja
loopne
jno
xor
xor
jecxz
outsl
push
pop
dec
loop
test
cli
fistl
add
bound
dec
aam
out
fldt
test
sti
fdivr
xchg
js
pop
gs
mov
jecxz
testb
mov
adc
repz
je
xchg
xor
sbb
xchg
dec
or
xlat
jb
sub
hlt
arpl
sub
out
push
adc
jmp
nop
add
dec
fisubl
xor
pop
rcr
test
ficompl
vorps
push
lea
call
pop
adc
cmpsb
dec
pushf
pop
sbb
xchg
and
pop
test
inc
jl
mov
lret
cmp
in
in
dec
mov
adc
push
div
aad
std
fs
mov
addr16
mov
sbbl
jbe
mov
faddl
mov
mov
das
scas
fiaddl
push
in
mov
and
push
jecxz
pop
or
pushl
insl
inc
push
lds
cld
mov
mov
lcall
mov
popa
fsts
cmc
fldcw
xchg
aam
pop
sahf
jne
shl
test
sub
xchg
or
mov
cmp
test
je
pop
mov
ljmp
cmp
lretw
int3
sub
sbb
fwait
setb
add
aam
cltd
inc
cmp
test
bound
xchg
decl
enter
xchg
aas
xchg
stc
es
mov
pop
push
loop
push
push
mov
lea
mov
jmp
xor
dec
or
cmpsl
xor
loope
jge
mov
sbb
mov
pop
dec
add
mov
pop
repz
push
in
jne
jmp
mov
push
out
test
out
bound
test
mul
es
sbb
aaa
out
rolb
fwait
adc
lret
sahf
push
addr16
xor
js
mov
sub
in
cmpb
fnstcw
into
add
xchg
sub
sbb
xor
mov
jmp
pop
mov
ss
cmc
push
adc
popf
jmp
dec
mov
ja
das
stos
test
push
and
repnz
aam
scas
mov
mov
adc
sbb
iret
mov
ret
aas
pop
cmc
out
add
sub
inc
fsubrs
popa
push
popf
mov
push
sbb
jae
pop
lods
cmp
cs
mov
ds
xchg
rcrl
repnz
daa
shl
mov
shl
adc
cmpb
xchg
sbb
aaa
inc
mov
or
stos
or
int3
push
sub
dec
push
inc
dec
push
jmp
stos
xor
aam
xchg
scas
popf
jbe
and
lret
insl
movsb
jmp
gs
cmpsb
rol
in
xor
dec
enter
daa
jne
sub
push
addb
sahf
xchg
cmp
iret
ds
movsl
js
mov
lahf
lods
cmp
pop
test
insb
cmp
xor
popf
loop
or
adc
xor
pop
daa
paddd
loop
loope
mov
sub
lahf
clc
sub
push
inc
outsb
out
or
pop
dec
orb
mov
inc
add
jb
and
mov
stos
int
jge
sub
clc
insb
pop
pop
repz
lcall
cmp
cmp
inc
test
sarl
cmpb
fs
insl
lret
jecxz
mov
imul
jl
or
cmp
push
jecxz
notl
psubd
jnp
lcall
lods
test
loop
into
ret
mov
cmc
sti
popf
shlb
jbe
outsl
cmc
adc
loop
sbb
stc
mov
and
add
inc
lret
add
fldt
dec
dec
cs
inc
push
cli
xchg
push
sbb
pop
sbb
mov
sti
xchg
gs
pop
adc
jp
imul
adc
xchg
repz
rcl
pop
xlat
push
test
dec
mov
xchg
test
jmp
add
das
aad
scas
jmp
dec
cmp
mov
addr16
in
and
pop
jb
rcll
popf
pop
movsl
jo
jecxz
or
pop
insl
aas
pushf
or
fcmovnb
ficompl
xchg
inc
out
pop
aas
popa
cli
mov
dec
ss
ss
mov
imul
xchg
cmp
or
cwtl
mov
aad
mov
xchg
add
dec
in
aam
or
lcall
jo
lock
lahf
mov
call
and
sub
ret
cmpsb
nop
js
xorb
sub
push
dec
out
adc
mov
jno
aaa
cld
gs
ds
test
mov
mov
mov
push
das
sub
adc
lock
mov
xlat
in
push
inc
sub
lahf
clc
rcr
xchg
inc
mov
popa
rcll
ret
stos
loopne
and
and
out
mov
push
cmc
push
psllw
add
cmp
je
enter
add
jb
jp
dec
dec
or
les
sbb
popa
loop
push
add
pop
adc
clc
push
mov
sbb
int
dec
ljmp
aaa
test
sub
loopne
xor
mov
xchg
adc
xchg
aad
pop
pop
xor
das
dec
cmc
cld
repnz
cld
pop
add
test
lock
xor
jmp
popa
out
fs
bound
aaa
push
in
stos
adc
inc
lods
test
adc
or
loop
addr16
ljmp
fdivrl
ja
jnp
push
pop
jle
sti
inc
or
mov
ret
lret
xchg
pop
scas
ja
mov
sbb
add
cmp
out
adc
stos
sbb
cmpsl
and
rorl
mov
xor
adc
fsub
iret
call
mov
movsl
inc
jmp
push
arpl
mov
inc
fistl
mov
lods
psubq
jb
fidivrl
es
lret
sbb
leave
pop
pop
push
fcmovnu
jns
dec
lds
mov
repz
mov
repnz
test
aad
add
sub
jbe
loopne
jge
and
aaa
push
lcall
add
jg
inc
movsb
cmovnp
lods
mov
into
std
sti
xor
das
ret
jl
xor
mov
push
cmp
mov
inc
outsb
mov
sbb
sub
in
shlb
int3
jecxz
fwait
sti
jge
pop
aas
adc
add
jmp
mov
movsl
jg
xlat
and
aas
lahf
int3
nop
push
xor
test
aaa
mov
adc
movsl
pop
cmp
pusha
js
cs
push
jno
loope
in
sub
je
sub
loope
outsb
push
sti
aaa
adc
loop
xchg
ljmp
add
dec
andl
jl
insl
int
ror
sub
pop
fmull
lcall
xor
call
fwait
mov
test
incl
js
divl
out
adc
adc
push
xchg
ss
loopne
cmp
or
sbb
lret
pop
roll
mov
mov
or
ret
xor
sbb
lret
loop
jecxz
stc
push
cmpsl
lods
add
movsl
xor
cmc
out
mov
mov
cli
or
xor
add
cmp
adc
sti
fsubrs
mov
sub
pop
xor
sbb
dec
out
stc
imul
clc
cmp
cmpsb
pop
push
cmp
arpl
sub
cmp
mov
add
jmp
mov
and
jecxz
cmp
dec
cwtl
fcomps
flds
cmpsl
lock
inc
jecxz
decb
lea
fs
push
test
xchg
cmpsb
adc
setl
outsl
sbb
jmp
inc
mov
inc
add
and
add
ja
lods
mov
je
mov
inc
divb
dec
std
mov
jns
pop
xor
mov
call
or
push
lret
dec
in
mov
mov
aas
das
insb
push
popa
mov
mov
pushf
and
movsl
cmp
xor
in
insl
jo
push
cmpsl
jae
lods
mov
dec
jmp
cld
nop
cmpsb
mov
mov
add
mov
pop
fcompl
push
rcrb
or
sbb
mov
add
xor
jo
clc
sti
and
test
ljmp
imull
in
imul
scas
fstl
sarb
mov
cltd
mov
xor
mov
jge
nop
dec
je
fs
mov
sbb
sbb
ja
pop
mov
nop
mov
push
or
or
sbb
call
or
xor
adc
stos
mov
xor
jne
xchg
out
mov
push
mov
pop
jmp
and
punpcklbw
cld
inc
inc
xchg
int3
insb
or
sub
xor
add
jne
dec
cmpsl
mov
mov
fsubl
cmp
jns
insb
lret
in
stc
movsb
cmp
push
out
sti
add
imul
shll
loope
add
mov
mov
aam
rcrb
in
movl
ffreep
pop
jb
xor
xchg
out
lods
cmp
ret
fists
cwtl
mov
dec
mov
cmc
jno
stos
mov
cs
and
imul
cs
pop
and
adc
or
pop
arpl
pop
inc
idiv
fwait
arpl
xchg
roll
les
sub
cli
mov
ficomps
repz
mov
xchg
int
dec
rorb
ds
mov
or
call
xchg
fcoml
fldl2e
jbe
dec
scas
jge
lcall
lds
add
add
lds
int3
sub
fldt
xor
mov
scas
pop
lock
xor
adc
mov
not
cmpsb
test
enter
daa
jae
adc
into
cmp
jl
adc
lcall
movsl
xchg
jbe
jmp
mov
push
imul
push
add
gs
push
cltd
add
mov
movsb
push
mov
loope
pusha
adc
sub
push
sbb
sarb
and
cmp
pop
sbb
popf
add
jp
and
ret
repnz
jg
cmp
cmpsl
or
sub
addl
stos
push
jl
cmp
xlat
mov
nop
sbb
js
test
cmpsl
lahf
xorb
jg
sbb
sub
mov
fisubrs
adc
imul
imul
xchg
cmpsb
push
lret
or
fidivs
inc
or
cld
into
mov
pop
cmc
mov
xor
movsb
outsl
mov
stc
pop
test
add
shll
scas
lahf
lods
fdivrl
mov
insl
out
cltd
cmp
or
cmp
insl
loop
in
pusha
loope
daa
gs
push
loopne
popf
cmpsb
pop
push
xchg
imul
xor
cmp
sub
int
lods
cmp
inc
xlat
xchg
mov
and
pop
insl
in
insl
adc
cs
int
nop
adc
push
dec
idivl
mov
fnstcw
mov
sti
sub
jecxz
andb
cmpsl
lea
cmpsb
mov
pop
dec
dec
arpl
int
das
pushf
pop
push
je
and
pop
outsb
inc
mov
inc
sbb
les
lahf
daa
lods
jb
lods
addr16
and
outsb
je
or
sar
leave
fdiv
mov
imul
pop
sbb
movsb
scas
orb
dec
xor
pop
lret
call
add
mov
push
xor
mov
insl
vmread
gs
mov
dec
insl
testb
dec
fstl
cmpsl
jb
xchg
mov
pop
faddp
cld
mov
pop
jp
lret
and
addr16
int3
pop
sti
hlt
mov
sub
jecxz
out
es
add
push
lret
fnsave
cmp
sti
mov
lds
popa
decl
outsb
lods
sub
pop
stos
mov
mov
xchg
sbb
loope
stos
sbb
imul
cmp
pop
lods
movsb
cltd
in
clc
popf
test
rorb
xchg
sahf
shrb
lret
push
dec
mov
pop
imul
push
mull
adc
xchg
mov
cmp
ror
adc
and
loope
sub
bound
stos
sbb
and
pop
cmpsb
sub
cmp
xor
movsb
xchg
dec
dec
sti
andl
outsb
jle
out
and
pushf
rcrl
sti
inc
lahf
in
fwait
cli
orl
mov
mov
loope
jp
mov
mov
mov
mov
cmp
xor
in
lods
mov
repz
jmp
mov
or
repz
pusha
xchg
mov
xor
subb
cld
jle
and
push
imul
rclb
mov
iret
cmpsb
push
ret
push
pop
lcall
arpl
mov
pop
or
mov
outsl
pusha
fisubl
jp
sbb
lock
pop
mov
int
lds
shrb
insl
mov
push
enter
push
hlt
fwait
adc
jbe
cs
jge
cmc
out
jne
aaa
test
adc
clc
icebp
jo
xor
push
dec
mov
pushl
mov
inc
inc
scas
cmp
pushf
cmp
in
movsb
mov
mov
cmpsb
dec
dec
xor
jmp
xor
jb
scas
cmp
xor
jno
and
out
cmp
pushf
ds
or
mov
mov
xchg
lahf
or
push
fnstcw
rclb
xor
mov
fstpt
fimuls
in
lods
push
lods
fsub
or
mov
pop
fwait
or
mov
int3
outsb
sbb
std
rcrb
add
adc
sbb
cld
and
es
inc
int
sub
sub
sbb
fcmove
enter
leave
push
cs
mov
sahf
enter
push
jb
adcb
fbstp
fstpl
mov
insl
test
fsts
adc
dec
imul
notl
test
out
rol
jne
sbb
rolb
insb
cmp
cmc
push
pop
cmp
pushf
test
outsl
xchg
push
loop
adc
scas
and
in
test
shlb
data16
lods
ret
mull
cmp
out
mov
sub
sti
das
cmp
lcall
add
jmp
scas
movsb
ja
mov
mov
and
adc
movsl
push
repz
sbb
sub
xlat
shll
sub
aad
in
fadds
lock
sahf
aad
jno
ljmp
popf
jo
cmc
add
fnstenv
add
bound
lea
lods
dec
call
fldenv
jno
and
setl
mov
jmp
adc
cmp
aaa
out
in
aas
les
jb
jo
dec
fwait
iret
nop
je
scas
add
dec
fimuls
std
add
and
rclb
scas
mov
movsl
cmp
xchg
insb
lret
push
xor
mov
jp
lock
outsl
lods
das
sub
loop
lahf
scas
or
and
and
xchg
jmp
push
mov
or
das
insl
fldl
insl
cmpsl
jno
fidivrs
div
repnz
out
int
and
dec
mov
adc
mov
sbb
stos
rolb
add
push
inc
jge
mov
inc
mov
andl
clc
jno
xchg
add
imul
test
mov
adcb
stos
add
xchg
movsb
femms
neg
add
mov
cltd
and
cmpsb
mov
addl
dec
inc
scas
adc
sbb
inc
rcrl
call
fwait
decb
push
lcall
add
in
scas
incl
cltd
adc
cltd
jns
xor
xchg
adc
mov
push
pop
mov
popa
inc
lea
xor
rcll
or
mov
mov
faddl
jne
ds
mov
push
sbb
add
and
lahf
and
mov
stc
in
xchg
roll
imulb
aaa
push
or
xchg
mov
mov
shlb
mov
in
mov
popa
in
cmc
popa
pusha
mov
add
add
jbe
outsl
xor
jae
fwait
add
push
adc
popf
xchg
mov
mov
not
stos
je
fwait
and
neg
insb
mov
mov
push
xchg
push
adc
ror
add
adc
inc
or
arpl
sub
inc
in
push
or
push
lret
dec
inc
cltd
mov
ficoml
push
xchg
iret
mov
stc
pop
ljmp
sub
inc
sbb
mov
pop
movsl
popf
leave
sbb
test
jbe
test
jge
xor
sbb
xchg
inc
insb
pop
or
sahf
add
sahf
mov
add
clc
push
ja
divb
inc
and
and
cmpb
mov
movsl
sbb
cwtl
andl
aad
test
cmp
push
jno
dec
call
cmp
xor
scas
movsl
xchg
jg
and
inc
lahf
sub
sub
cwtl
daa
lock
mov
pop
js
xchg
ds
and
loope
ret
cmpsl
sub
in
xchg
sub
xchg
shlb
jae
cmp
out
sbb
shrb
push
test
mov
sub
pop
repnz
pop
jno
lcall
mov
jmp
cmp
imul
subb
jns
into
push
lock
mov
push
rclb
fisubl
cmp
ds
pushf
notl
dec
int
inc
xor
rorl
mov
arpl
dec
call
push
cmc
pop
mov
dec
outsl
jno
ljmp
jge
sbb
xor
or
push
dec
mov
push
add
pusha
outsb
and
mov
fwait
jae
inc
pop
sar
daa
pop
jmp
mov
out
loopne
ret
xchg
ret
roll
adc
mov
repz
add
sbb
mov
stos
shrb
out
mov
inc
lret
add
cs
push
and
mov
sahf
inc
or
xor
in
xor
les
sub
pushf
gs
lods
call
pop
cmpsl
fistps
lods
call
jnp
pop
pushf
mov
jne
andl
add
mov
inc
push
or
loopne
andl
adc
je
cmpsb
fwait
rcrl
sbb
std
cmpsl
call
lahf
mov
cwtl
adc
xchg
dec
outsb
dec
stc
ja
lret
enter
loope
mov
out
add
in
push
push
das
or
mov
and
or
ret
loop
xchg
es
nop
insl
fsubs
jo
js
int
mov
int
add
adc
ret
hlt
aam
adc
into
and
popf
hlt
cltd
pop
cmp
sbb
dec
sbb
jge
mov
inc
mov
push
insb
in
ffree
pop
clc
lods
addr16
inc
adc
ljmp
mov
stos
pushf
jae
out
lods
sub
xchg
stos
dec
cld
push
popa
push
loopne
add
lods
sub
or
xchg
mov
adc
mov
test
sbbl
sub
add
push
cmp
js
aas
or
push
mov
mov
add
jno
jl
sbb
pop
ja
or
inc
pop
in
rorl
bound
rcrl
sti
int3
stc
mov
inc
push
out
loopne
pop
negl
dec
in
fsubrl
out
mov
jle
mov
adc
int
jp
pop
mov
mov
mov
jle
cmp
mov
clc
sbb
and
xchg
stos
and
jmp
push
pop
arpl
insl
inc
push
loope
les
fldt
rclb
jle
stos
out
jecxz
adc
subl
mov
adc
movsb
cmp
ret
ret
mov
inc
pop
orb
lods
inc
out
or
cltd
xor
inc
sbb
or
push
xchg
es
lods
sbb
push
popf
fiadds
cmp
cltd
mov
lods
mov
leave
dec
jne
hlt
xor
in
push
inc
jl
jbe
dec
ja
jnp
push
jmp
clc
aaa
add
or
dec
js
pop
rol
out
xlat
sbb
xor
pop
rcll
jo
adc
scas
clc
inc
mov
cmp
aam
movsb
mov
into
stc
cmpsb
dec
out
in
mov
add
rorb
fistpll
addr16
jno
lcall
cmpsl
fs
add
cmp
jg
cmc
test
arpl
loop
push
jl
mov
fistps
mov
js
fisttps
push
mov
loope
stos
insb
sub
adc
sub
fwait
adc
dec
imul
fildl
testb
add
cld
xchg
and
push
mov
daa
sub
inc
pop
fcomps
xor
es
fcoml
cmp
xor
sub
hlt
aaa
ret
mov
jae
mov
cmp
mov
xchg
adc
divl
rol
repnz
stc
or
not
addr16
es
shll
rorl
mov
or
cmc
fidivrs
xor
jae
push
call
or
inc
lock
add
ds
xchg
subl
xchg
xchg
lcall
sti
out
xchg
mull
xor
jo
sti
repnz
push
gs
jb
pop
mov
cmc
adc
xchg
adc
adc
repz
aad
ret
sbb
stc
cmp
sub
adc
in
scas
in
jmp
xor
cs
daa
jg
call
or
jb
inc
sbb
jg
and
les
movsb
jecxz
cmpsb
loopne
push
test
jl
xlat
xor
shrb
pushf
pop
or
or
inc
insl
inc
xchg
aas
jl
ret
jb
xchg
es
mov
je
repnz
ljmp
std
dec
jge
cwtl
dec
inc
ja
loope
xchg
mov
ja
subl
sub
lret
xor
mov
mov
dec
push
jecxz
call
dec
cmpb
shrl
jno
inc
adc
mov
dec
into
loop
cmpsl
outsl
ss
mov
movsb
mov
cmp
ljmp
or
cmp
pop
pop
cwtl
out
call
cltd
mov
dec
jp
mov
inc
loope
adc
pushf
fucomp
dec
sahf
clc
out
push
xchg
cmpl
popa
inc
or
imul
out
pmulhw
cmp
int3
int
add
cli
cltd
xchg
jge
test
push
cmpsl
mov
mov
dec
test
addr16
xchg
add
roll
lods
adc
jp
pop
sbb
jle
sub
add
incl
and
lret
aad
or
add
xchg
sahf
add
mov
and
mov
xlat
inc
fnstenv
xchg
dec
mov
outsl
inc
out
ljmp
icebp
mov
dec
movsb
mov
jne
mov
fsubr
mov
rorb
in
jnp
xorl
hlt
sub
lods
loop
addr16
mov
mov
jnp
mov
dec
js
jle
sub
in
mov
pusha
mov
fidivrl
xchg
jge
dec
jmp
sbb
push
jae
sbb
movsb
cmp
popf
aad
add
push
icebp
mov
pop
jge
and
push
pop
insb
mov
pop
scas
or
push
and
adc
enter
test
mulps
sub
inc
and
aad
ljmp
push
xchg
enter
rcrb
sbb
loope
pop
dec
push
mov
test
cwtl
vpminub
jp
idivb
sti
pop
leave
les
hlt
jl
add
cmp
movsb
mov
and
sbb
loope
or
mov
int3
fnstenv
dec
in
cmp
push
cmp
sbb
jo
sbb
and
shll
cmp
cmpsb
shl
imul
sahf
out
enter
daa
outsl
mov
cmp
or
jl
jmp
cmp
jnp
lds
pop
and
insb
xor
loopne
test
cs
lock
je
sub
dec
add
mov
fsubrs
lret
xor
sub
or
sub
test
xchg
jl
shrb
adc
sti
lds
orb
sbb
jp
and
inc
push
mov
subb
mov
lcall
or
aas
loope
sbb
sahf
mov
roll
sub
jg
lahf
stos
mov
lds
inc
mov
mov
xor
ss
adc
fdivs
fmulp
sub
pop
mov
or
add
adc
sahf
pop
xor
mov
add
sti
push
pop
fs
jge
jne
adc
lods
js
ret
mov
dec
clc
out
jns
cli
xor
xor
fdivrs
loop
insl
cmp
lahf
loopne
aaa
dec
pop
iret
push
cmp
imul
mov
xchg
test
mov
xor
imul
ret
adc
cmp
sbb
sbb
fidivrs
test
inc
mov
mov
inc
arpl
fstps
mov
jecxz
cmp
imul
lea
inc
inc
push
inc
insb
pop
adc
pop
xchg
pushf
or
ljmp
xor
inc
sub
xchg
sbb
decl
dec
dec
je
xchg
lock
mov
test
push
std
cmc
cmc
jmp
add
mov
xchg
sub
lret
add
mov
lret
movsb
inc
orl
mov
cmp
mov
dec
ss
and
icebp
pop
ret
add
es
in
mov
xor
cmpsl
outsb
xchg
popa
mov
jnp
jle
addr16
mov
push
outsb
outsb
and
shl
fistpl
ja
adc
mov
mov
test
push
inc
mov
adc
adc
push
js
popa
pop
test
lods
aam
jae
jp
out
jb
movsl
xchg
cmp
or
sub
mov
enter
or
mov
mov
mov
ja
sbb
xchg
jo
sbb
lcall
adc
stos
loop
addl
scas
ljmp
loop
push
xor
inc
in
xor
xor
mov
lea
mov
sbb
cmpsl
mov
inc
xchg
mov
mov
jne
push
cmpsb
mov
pop
out
sahf
popa
mov
sbb
setno
rep
sahf
add
loopne
push
push
add
test
aaa
addr16
leave
dec
jp
push
mov
pop
mov
stc
std
lock
push
out
sub
fistps
scas
xchg
push
adc
jmp
out
xor
fmul
push
incl
popf
cld
cmc
js
push
xor
pushf
stos
int
andl
mov
push
imul
scas
imul
push
push
imul
and
pop
jbe
jp
sub
jnp
in
adc
inc
push
push
cltd
ljmp
arpl
pop
ja
sub
dec
movsb
rol
jo
push
rclb
repnz
jne
leave
cmp
dec
hlt
movl
jbe
cmp
jge
inc
leave
sbb
insl
aaa
and
or
jge
add
loopne
pop
aas
js
and
xor
push
xor
scas
mov
out
and
movsb
mov
lds
pop
fsubl
test
and
cmp
daa
outsb
cmc
cmp
or
jl
xor
add
movsl
test
mov
inc
push
and
jmp
mov
repz
lret
pop
es
or
shrb
pop
loopne
bound
xchg
mov
sub
jb
out
movsb
cmpsl
clc
adc
add
and
pop
cld
das
sbb
add
dec
push
and
or
int
xchg
dec
std
add
jns
lcall
dec
fsubr
jecxz
sbb
shll
cmp
or
or
mov
dec
movsl
mov
repnz
adc
ljmp
outsl
rcrb
daa
clc
lret
nop
rcl
adc
testb
clc
mov
and
or
es
loope
stc
mov
fwait
fs
sbb
xchg
stos
dec
lods
pop
mov
jnp
cli
stc
and
jne
sub
adc
nop
pushf
sub
call
insb
pop
out
cmp
cmp
into
imul
into
repz
jecxz
xchg
dec
mov
cmp
iret
xchg
pusha
sub
fisttpll
test
xchg
cs
out
cwtl
nop
pop
mov
outsb
inc
inc
jmp
fsts
cmpsb
jecxz
adc
outsb
repnz
lea
rol
aad
outsl
pop
enter
or
pushf
mov
sub
push
mov
pop
popf
push
pushf
inc
mov
cli
inc
mov
pop
leave
jb
test
ja
sbb
insl
xchg
rorl
or
pushf
push
lods
cwtl
mov
aam
mov
aad
dec
mov
sub
mov
push
pop
mov
test
popa
das
cmpsb
adc
mov
add
andb
dec
ret
mov
xchg
xor
cwtl
cmpsl
insl
js
mov
push
mov
xchg
mov
jns
sub
outsb
xchg
pusha
pop
xchg
outsb
mov
mov
ss
arpl
ficompl
push
cltd
fucomp
fnstsw
sahf
push
clc
pop
loopne
xchg
fst
ljmp
sub
fidivrs
aad
call
push
repnz
jp
int
cltd
decl
faddl
cmp
xor
test
dec
jge
adc
out
and
pop
shlb
mov
fucomip
add
mov
cmpsl
incl
loop
or
pop
xor
rcrl
sub
stc
mov
sub
mov
dec
lcall
or
add
push
dec
jne
rcl
mov
test
bound
sbb
in
mov
adcl
out
pop
and
or
lea
jp
and
mov
test
es
out
in
add
cmc
jecxz
fistpll
jecxz
and
lock
mov
test
push
sub
int3
popf
and
mov
mov
sti
push
outsl
das
inc
stos
inc
out
and
and
imul
scas
into
mov
adc
dec
fcmove
adcl
fiadds
push
arpl
popl
stos
mov
push
xchg
in
jns
and
int
sub
xchg
sbb
push
mov
cmpsb
dec
gs
cmp
cmpsl
shlb
mov
movsl
and
leave
mov
das
hlt
adc
push
xor
cmc
jge
push
arpl
sbb
mov
or
add
int3
scas
xor
push
add
add
lods
bound
xchg
mov
sarl
mov
inc
push
or
cmpsb
fdivrs
clc
in
insb
in
movsb
enter
daa
insl
jnp
cmp
addl
sub
cmp
mov
mov
loope
mov
inc
cltd
push
clc
push
std
test
les
xor
mov
negb
cmpb
xor
gs
or
ljmp
cmpsb
out
outsb
pop
inc
mov
rcr
mov
lret
subb
sbb
jb
and
addl
adc
push
sub
add
pop
push
das
sbbb
rcrb
fcoml
insl
add
mull
push
test
inc
pop
adcb
pop
jg
jp
mov
push
dec
mov
push
fwait
mov
and
lret
ss
sub
cmp
sub
testl
inc
fwait
shrl
mov
cs
into
fcmovnu
jecxz
xor
outsl
in
arpl
stc
imul
ljmp
insb
adc
and
inc
out
add
cli
sub
aad
adc
push
cmp
call
add
mov
mulb
jae
loopne
cld
dec
pop
or
shll
inc
mov
pop
xor
repz
std
dec
sbb
stos
movsb
xlat
push
jmp
sub
push
ja
jecxz
jl
out
sub
jmp
adc
sbbb
aad
mov
nop
ss
jp
xor
jmp
push
cmpsl
sti
fxch
cmpsl
inc
les
cs
jno
out
or
mov
push
jmp
add
xlat
scas
add
sbb
pop
inc
arpl
cmp
mov
pop
bswap
jb
dec
cmp
shl
je
iret
scas
rcl
aas
xchg
dec
fildll
cwtl
jns
dec
mov
fwait
push
mov
cmc
jnp
movsl
inc
fwait
lret
adc
mov
or
mov
scas
mov
pop
shll
jle
xchg
mov
xchg
out
ret
push
inc
ljmp
sbb
dec
mov
mov
sub
jae
mov
stos
mov
xor
inc
mov
mov
shlb
test
and
push
dec
mov
in
fwait
push
pop
jmp
frstor
pop
clc
cwtl
xor
xchg
ds
ljmp
push
lods
stos
cli
pushf
stos
pop
fbld
xchg
mov
decb
jmp
les
and
test
xchg
loopne
dec
inc
push
cmp
xchg
fcmovnu
sbb
subps
jae
jmp
lods
mov
add
push
jg
les
mov
xchg
mov
mov
cmp
mov
or
enter
add
mov
mov
dec
dec
jns
jne
lock
pop
adc
bound
mov
int
in
dec
pop
and
and
mov
shr
addr16
aad
jp
and
mov
mov
mov
push
push
mov
mov
in
ds
pusha
nop
pop
enter
int3
xchg
not
mov
inc
addr16
xchg
jl
outsl
jae
pop
dec
push
in
loopne
popf
dec
jle
mov
scas
push
stos
mov
jp
outsl
cmc
adc
push
imul
scas
xor
fists
jp
adc
cld
ret
and
outsb
inc
inc
push
mov
pop
add
mov
or
test
adc
aam
adc
mov
fcomps
adc
ficoms
or
mov
clc
add
sub
iret
hlt
pop
rorl
push
jg
out
jbe
cli
out
jge
leave
sbbl
add
aaa
outsl
or
add
dec
and
push
out
repnz
pop
movsl
mov
and
jmp
movsb
int3
mov
inc
out
jmp
pop
xchg
pusha
in
push
lds
daa
insb
movsb
jb
xor
xor
push
inc
mov
arpl
mov
movsl
mov
or
push
add
push
lret
fldt
test
outsl
mov
mov
out
ret
sar
pop
pop
adc
jo
push
loope
scas
inc
sub
out
outsb
sub
out
outsb
push
sbb
sarb
lods
cmp
shlb
add
in
fbld
sbbb
push
xchg
and
js
cmp
pop
aam
sti
lcall
repnz
pop
sbb
in
sahf
lcall
xorb
lock
out
jle
insl
hlt
jl
cmpsl
cmpsb
xor
mov
jb
popa
sub
fsub
lds
int
dec
push
push
faddp
lcall
push
or
cmp
mov
fs
outsl
int3
aas
mov
mov
fs
fwait
ljmp
mov
mov
out
or
cli
pop
and
xor
inc
in
jle
sahf
sti
scas
in
ss
fldenv
loopne
std
cwtl
pop
sub
mov
imul
jecxz
repz
rcll
fisubrs
jae
dec
lds
mov
pop
xchg
ret
call
mov
nop
adc
dec
nop
dec
xchg
inc
addr16
mov
les
mul
jecxz
xchg
je
inc
lea
xchg
call
roll
loop
cs
sbb
insb
inc
dec
pop
jecxz
mov
inc
js
clc
ret
mov
dec
mov
je
insb
shll
in
inc
testb
mov
fucom
mov
addl
ds
mov
mov
mov
mov
test
fs
xlat
mov
outsb
int
and
inc
clc
ret
lods
sub
arpl
out
dec
mov
lret
int3
inc
stos
icebp
add
cld
call
jo
mov
cmp
mov
aam
or
sub
jl
je
pushl
pop
insl
mov
clc
rcll
xchg
jge
test
test
push
cmp
movsb
cmp
fwait
pop
cmp
test
and
add
scas
test
jmp
lcall
mov
je
adc
push
sbb
mov
shll
repnz
push
mov
sbb
or
insb
jo
add
shlb
mov
mov
imul
mov
jg
sarb
and
ja
std
lods
dec
orb
dec
jns
jmp
mov
xor
sbb
cmp
add
test
jns
and
jno
mov
sub
cltd
dec
jo
lret
mov
out
mov
andl
scas
stos
jnp
daa
or
in
ffreep
pusha
sub
jno
mov
add
jmp
inc
pop
xor
add
mov
mov
add
ret
stos
es
outsb
and
sti
je
and
xchg
stos
imul
xor
jg
pop
iret
aas
mov
ret
sub
js
inc
dec
xchg
cli
arpl
mov
or
add
add
fiaddl
dec
adc
adc
pop
add
outsl
fidivs
cmp
add
cmp
out
dec
sbb
leave
mov
cltd
dec
push
into
fldt
jge
pop
fwait
sbb
cld
data16
mov
dec
test
mov
xor
sti
movsl
scas
push
ja
and
jns
cmp
loopne
movsb
push
dec
mov
cmpsb
ficomps
in
cmp
andl
lea
in
ss
jle
add
adc
lcall
jg
and
push
and
sahf
xchg
push
push
pop
loopne
xor
pop
sbbb
fwait
inc
dec
js
pop
pop
popf
aas
xchg
push
and
stos
dec
lcall
xor
outsb
int
push
adc
xchg
jg
ja
dec
adcb
sub
mov
and
int
out
sub
outsb
lcall
cmp
jmp
jl
xor
mov
test
in
lods
orb
jg
inc
mov
push
bound
pop
mov
adc
sbb
and
rcr
mov
movsb
int
stc
jg
rcll
cmpsb
or
call
cli
cmc
rcrl
xor
test
stos
pop
shl
pop
push
cmp
fs
xor
add
dec
in
lods
adc
stos
mov
fidivrs
out
cltd
jmp
xchg
xor
xor
dec
cwtl
cmp
push
lret
sti
pop
sbb
stc
jno
gs
inc
loopne
adc
pop
dec
xlat
mov
imul
out
xor
add
adc
xlat
mov
sbb
loopne
sub
jmp
andb
inc
sub
aad
out
nop
in
loopne
dec
out
lret
pop
inc
jp
pop
fnstenv
mov
push
jecxz
xor
ja
cmp
mov
mov
adc
les
fistpl
bound
dec
adc
xchg
aas
xchg
jl
jb
ja
dec
fsubr
arpl
push
shll
cmp
sar
insb
std
xchg
rolb
pushf
mov
mov
mov
pop
lret
pusha
outsl
sti
mov
out
lock
das
inc
test
mov
and
scas
pop
ret
cmp
xchg
mov
xchg
adc
pop
cmpsl
push
inc
mov
xlat
test
mov
loop
inc
and
aas
loop
pop
repz
std
rolb
mov
stos
mov
mov
pop
sahf
push
loop
xchg
lea
ljmp
pop
lods
orb
out
fldcw
push
addl
xcrypt-ofb
cmpsl
lods
ljmp
sub
ss
push
mov
cwtl
xchg
mov
test
jle
xchg
and
sarl
jb
fwait
inc
xchg
push
xchg
fisttpl
pop
inc
test
push
xchg
or
jb
xor
aad
xchg
sub
inc
mov
lea
pop
jbe
pop
jle
sub
dec
jae
and
cli
and
jo
mov
and
jne
pop
or
sbb
xor
loopne
jns
sbb
in
adcb
or
out
sub
or
scas
jp
cmp
mov
mov
sahf
jle
sub
in
in
pusha
movb
xchg
pushf
data16
xor
xchg
xchg
adc
push
jae
jecxz
cwtl
xchg
cmpl
cltd
leave
inc
and
and
imul
imull
xchg
mov
sahf
or
fistpl
and
xchg
arpl
mov
or
jnp
dec
inc
adc
sub
xchg
xor
lods
pop
xor
pop
mov
cmp
add
mov
sahf
cld
leave
pop
testb
repz
push
sbb
mov
jge
ficompl
sbb
dec
aaa
jl
mov
nop
dec
daa
add
test
dec
sbb
xchg
push
lods
sub
mov
pop
push
and
inc
cmp
cmpsb
inc
add
cmpsl
cmpsb
popa
sahf
icebp
in
and
inc
enter
daa
push
aad
cltd
and
ret
pop
jp
test
nop
inc
je,pt
push
movsl
lds
and
lods
jns
jno
out
mov
notl
xor
das
popa
dec
inc
mov
js
shlb
andb
ret
sub
push
jmp
outsb
xor
mov
jo
cmc
scas
jmp
test
in
inc
push
add
fdivrl
push
lcall
sub
xchg
inc
pop
shlb
lcall
imul
ss
sbb
pop
sahf
loopne
test
bound
adc
mov
mov
adc
jmp
cmp
pop
sbb
lret
lret
add
or
into
test
cmc
mov
ljmp
add
mov
sar
mov
add
xor
lods
sti
movsl
mov
mov
out
stos
test
xor
rcrl
sbb
sbb
insb
dec
loopne
cmp
push
adc
in
adc
inc
mov
cmpb
push
pop
fs
pop
clc
in
lret
add
sub
xor
push
mov
xchg
cs
lods
or
dec
dec
push
sub
lea
push
fldcw
dec
les
pop
jecxz
sbb
lea
in
call
roll
xchg
das
mov
pushf
popa
int3
aas
fcmovne
sub
inc
rcrb
inc
movhps
jb
fisubrl
je
mov
push
notb
and
pop
pop
add
mov
jno
data16
scas
lret
iret
arpl
mov
sbb
das
and
xlat
mov
sub
ret
lret
lret
and
insl
adc
cwtl
cmp
xor
icebp
scas
mov
xchg
add
shlb
fcmove
adc
rcr
xchg
pop
sub
add
aam
daa
xchg
mov
clc
dec
push
movsl
int3
xchg
fst
ljmp
sti
sarb
into
aad
lods
jmp
subb
dec
ss
fwait
lods
cmp
sbb
clts
mov
add
shlb
test
mov
xchg
cmp
ja
bound
mov
mov
pop
insb
das
cld
fwait
jbe
pop
push
mov
filds
idivb
std
inc
jns
mov
fnsave
int3
setae
pop
mov
cmpw
or
pusha
rorl
test
inc
jns
sbb
xchg
cltd
mov
shlb
jne
movsb
je
mov
mov
cld
dec
out
push
cmp
stos
push
imul
outsl
testb
lds
fists
mov
fisttps
jmp
push
das
jle
aam
in
dec
pusha
popa
ss
adc
xchg
outsl
std
lods
jmp
fisttpll
push
ljmp
popf
mov
arpl
imul
and
jnp
add
push
int
lea
xor
xchg
adc
push
repz
jbe
inc
test
arpl
mov
or
imulb
in
xchg
addr16
in
rclb
mov
mov
fidivrs
push
lds
rcr
sbb
dec
mov
icebp
leave
mov
je
and
insb
inc
adc
ss
jge
cmp
or
cmp
repnz
push
int3
pop
xchg
orb
lea
mov
xor
sbb
mov
and
mov
cmp
enter
shrl
cmpsb
in
jp
or
lds
imul
sbb
lcall
cmp
stos
ds
aam
movsl
int3
lahf
push
and
cs
lahf
and
xor
stos
aam
test
push
lock
mov
push
sub
lock
push
cmp
sbb
push
add
fldpi
sub
dec
fildll
sbb
inc
hlt
adc
dec
lods
pop
xor
das
mov
ja
adc
push
lcall
outsl
add
lods
inc
and
mov
or
push
sub
add
mov
faddl
pusha
sbb
add
addb
test
mov
ljmp
movsb
mov
cmp
push
and
testl
aam
les
mov
xchg
xchg
or
mov
into
addr16
xor
dec
scas
mov
outsl
imul
mov
inc
add
add
arpl
cli
int
loop
sbb
dec
inc
cmp
xor
and
pushl
mov
les
loopne
ja
pop
mov
adc
mov
and
xchg
adc
icebp
dec
repz
dec
je
pop
dec
sub
xchg
jae
xlat
or
cli
aad
aas
shrb
js
xchg
or
sbb
lock
nop
mov
fdivr
inc
mov
pop
les
jecxz
inc
rol
jge
cmpsl
lea
lcall
push
imul
pop
or
pushf
or
std
push
inc
pop
int3
xor
inc
push
add
aas
aad
imul
nop
and
rcll
mov
push
in
std
fistpll
cwtl
fnstsw
jl
cmc
orl
cmp
ds
mov
scas
mov
das
add
mov
xchg
sub
and
xchg
pop
jg
cmpsb
mov
arpl
addr16
cmpsl
push
adc
cld
imul
mov
push
movb
xor
lods
shlb
sti
and
aad
fdivs
push
ja
clc
test
xchg
xchg
cmp
pop
ljmp
mov
push
jo
stos
adc
or
les
push
cmp
pcmpgtw
gs
adc
xor
test
xchg
dec
lock
sub
push
sbb
shrl
bound
lock
movsl
or
lds
adc
lcall
cmpsl
or
jmp
xor
fsubrl
xchg
mov
mov
mov
mov
hlt
pop
popa
ja
pop
icebp
dec
pop
add
lret
lods
mov
mov
sarb
pop
jne
push
les
fsubs
fstpt
clc
add
xor
iret
jns
dec
in
sub
mov
stc
addr16
adc
hlt
mov
inc
pushf
mov
adc
jle
jno
in
sbb
cld
cld
add
sbb
inc
xchg
inc
enter
sbb
mov
adc
ds
mov
stos
push
pushf
stos
jg
insb
and
adc
mov
scas
mov
nop
xor
adc
nop
iret
pop
push
sbb
sub
repnz
shrb
outsl
cli
xchg
arpl
lods
or
jno
mov
push
mov
mov
jns
sbb
gs
xchg
aad
ficomps
sbb
movsb
sti
jb
inc
xchg
cmc
leave
add
in
push
mov
out
jge
jnp
sbb
imul
jbe
jmp
int3
inc
ljmp
dec
mulb
push
jb
or
jo
jbe
scas
lock
and
dec
movsb
clc
nop
xchg
adc
in
out
adc
test
daa
push
xlat
jno
adc
decl
cmp
push
ds
inc
andl
mov
fsts
add
jl
add
xor
and
leave
inc
pop
pop
adc
pop
pop
push
push
add
repnz
sub
or
je
mulb
pop
shlb
loop
xchg
rcrl
scas
add
rcrb
and
lods
int
dec
adc
xor
les
shlb
lcall
xor
sbb
sbb
sahf
push
jg
in
mov
mov
mov
adc
adc
iret
push
ss
fcom
shlb
leave
lds
rcrl
mov
jae
or
mov
out
cmc
push
nop
movsl
xor
push
out
dec
xlat
cmp
fsubrs
or
cld
xchg
gs
cmc
call
data16
pop
lods
leave
mov
mov
sbb
out
pop
xchg
cli
sub
fidivrs
ljmp
gs
push
pop
loopne
lcall
xchg
sbb
sub
sbb
stos
jae
push
repz
xchg
je
jp
cmp
roll
cmp
cmp
pop
mov
push
mov
outsl
push
aad
arpl
jge
jge
or
mov
mov
mov
les
jecxz
mov
movb
arpl
shrb
pop
cli
cmp
pushf
mov
sbb
sub
mov
fimuls
jle
inc
test
fs
cmp
fwait
je
and
stos
negb
xor
cwtl
and
cmp
outsl
fbstp
loope
pop
dec
cmp
lods
lret
lods
cwtl
push
mov
xchg
mov
cmpsl
add
and
mov
loopne
add
dec
in
and
lock
jmp
fwait
insl
jecxz
popf
dec
cmpsb
lret
addr16
jmp
icebp
pop
xchg
sar
xchg
clc
sarb
dec
mov
and
adc
ds
push
push
ret
rolb
cwtl
pop
aam
add
sub
jmp
clc
mov
gs
ljmp
push
lods
rcrl
stos
add
out
daa
adc
sub
icebp
pinsrw
add
pop
cltd
dec
test
insl
mov
mov
inc
xlat
test
jecxz
xchg
in
cmc
sbb
scas
mov
pop
ret
fwait
aam
dec
push
clc
add
pusha
jbe
add
clc
cmp
xor
jecxz
aas
sahf
add
pushl
mov
mov
scas
inc
loopne
sub
scas
dec
dec
aam
inc
cmpsl
out
or
push
aaa
mov
jecxz
mov
gs
push
and
bound
mov
scas
in
aas
and
jmp
popf
mov
addr16
stc
pop
jp
test
sbb
adc
cmp
clc
dec
imul
mov
aaa
fwait
enter
vunpckhpd
aam
mov
mov
mov
imul
stos
repnz
and
ja
insb
mov
sti
loopne
and
push
pop
dec
mov
iret
mov
jae
pop
testl
arpl
mov
or
in
iret
ljmp
out
movsl
xchg
xor
jg
pop
shrb
ror
lds
xlat
fadd
push
cmp
mov
xchg
jbe
leave
jl
cmp
push
or
push
jge
mov
xor
mov
les
lods
dec
jb
xor
adc
push
push
scas
sbb
into
sbb
scas
iret
sbb
and
les
movsb
andl
ljmp
enter
daa
addr16
shll
fnstcw
ljmp
jl
movsl
fimull
and
jb
pop
xor
shrl
jmp
xor
test
aaa
ja
js
jg
pop
cltd
pop
fsubrs
mov
loope
push
cwtl
sub
cmpsb
lods
sub
jae
outsb
pop
stc
sbb
int
lods
rolb
sub
and
jbe
in
incb
fistps
int
xor
es
dec
inc
movsb
lcall
mov
xchg
es
sbb
mov
sahf
leave
daa
popl
mov
insb
lret
mov
test
mov
aam
mov
cmp
mov
cmp
mov
xchg
testl
mov
jb
mov
dec
push
cmc
fst
and
test
pop
loop
pushf
or
mov
iret
fs
push
add
negb
sub
lods
mov
xor
inc
stc
movsb
cli
pop
outsb
bound
push
fdivrl
push
xor
sti
sbb
shlb
jmp
aam
fisttps
adc
pop
popf
imul
dec
fwait
repz
mov
xchg
popf
and
js
or
lock
mov
subl
xchg
mov
jno
jge
push
mov
sarb
nop
pop
mov
dec
inc
push
fsts
loopne
jg
js
imul
jmp
call
dec
inc
sub
into
ja
loope
pop
pushf
fstpt
fistl
sub
shl
inc
gs
inc
pusha
nop
and
adc
lcall
gs
shll
sahf
jb
sub
hlt
mov
mov
cmpl
mov
