jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
bound
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
movl
pushl
pushl
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
pushl
pushl
mov
push
call
call
call
call
movl
pushl
pushl
mov
push
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
lea
push
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
movl
pushl
pushl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
cmp
je
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xor
divl
test
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
push
mov
push
call
mov
mov
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
sub
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
push
mov
mov
xor
call
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
mov
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
push
mov
mov
xor
call
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
mov
push
mov
jmp
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
sub
add
add
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
call
mov
mov
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
movl
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
pop
ret
lea
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
sbb
mov
sahf
in
mov
into
in
mov
enter
loop
mov
in
in
mov
out
mov
add
mov
cli
in
mov
test
mov
imul
int3
inc
xor
test
rorl
mov
rorl
add
rorl
out
lock
in
imul
int3
inc
xor
shrl
rorl
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
dec
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
dec
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
dec
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
dec
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
dec
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
dec
int3
inc
dec
enter
std
push
inc
ffreep
dec
int3
inc
dec
enter
std
or
ret
dec
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
call
mov
cmpl
je
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
je
mov
subb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xorb
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
incl
mov
cmp
jne
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
call
test
jne
mov
jmp
movw
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
lea
push
call
call
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
lea
push
call
call
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
call
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
lea
push
call
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
pushl
pushl
mov
push
call
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
push
call
mov
call
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
pop
ret
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
movl
pushl
pushl
mov
push
call
call
call
call
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
lea
push
call
lea
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
lea
push
call
call
mov
pop
ret
subl
jae
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
lea
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
ret
mov
ret
lea
add
xchg
testb
xorl
je
add
daa
das
jmp
add
mov
add
add
dec
add
pop
add
add
pop
add
cltd
ds
inc
mov
rcl
fst
insl
enter
rolb
add
ja
cmp
fcmovbe
dec
rclb
mov
push
and
or
add
pop
add
bound
push
add
lock
mov
fldl
out
sbb
add
ja
ret
pop
int3
and
jbe
xchg
jecxz
mov
cmp
add
pop
xlat
and
add
add
mov
mov
and
aas
fldl
stc
push
add
roll
sbb
addl
sahf
imul
add
add
push
cwtl
add
or
outsl
add
fimuls
add
iret
inc
add
adc
mov
add
xchg
ret
add
add
ret
test
sbb
inc
add
add
ja
or
add
xlat
mov
add
cmp
add
insb
sub
lock
push
rcrb
inc
cmpsb
add
add
sub
add
add
in
into
mov
add
ss
mov
jg
pusha
adc
add
xchg
add
arpl
cli
add
add
dec
inc
add
pop
lock
imul
divl
cmpsb
popa
mov
cmp
pop
add
ficomps
xchg
test
add
je
mov
stos
add
and
out
lcall
dec
add
cmc
mov
addl
xlat
inc
xor
popa
imulb
mov
cld
sbb
bound
add
and
add
leave
sbb
mov
add
add
pop
adc
xor
setne
add
int
add
jmp
add
add
add
add
pop
test
daa
js
add
sbb
add
std
pop
hlt
add
push
push
shll
xchg
push
jae
jo
mov
scas
add
cmp
mov
cltd
int3
xor
inc
add
pop
add
add
dec
add
add
ret
add
icebp
and
and
and
scas
add
jb
and
enter
adc
add
sbb
ss
sbb
sbb
mov
int3
rorb
sbb
xor
in
sub
mov
add
ret
jge
daa
cmp
xchg
mov
jmp
test
test
shlb
xor
mov
xchg
push
inc
and
or
cmpsl
lock
add
add
inc
ret
repz
add
mov
sub
js
add
fs
stos
inc
jne
jne
mov
mov
dec
sub
mov
add
push
xchg
push
adc
add
push
add
shll
int3
add
add
and
add
pop
shlb
add
xchg
sbb
add
jae
sub
xchg
cld
add
lret
mov
lret
cmp
repnz
add
jbe
xchg
neg
add
pop
sub
mov
push
add
add
inc
loop
add
mov
inc
rclb
lock
push
mov
cmp
sbb
pop
call
mov
lods
sbb
sbb
mov
insb
jl
jecxz
adc
add
lahf
and
jl
popa
xchg
add
aas
add
fs
cltd
sub
popa
xchg
push
add
dec
icebp
in
jns
push
xor
xchg
push
lods
fldt
loop
shr
xchg
dec
inc
push
push
dec
fidivrs
sbb
add
dec
or
xor
mov
or
test
repnz
sbb
roll
pop
mov
push
and
mov
add
ljmp
xor
or
js
xor
lea
mov
or
sub
ja
mov
dec
pop
mov
or
mov
mov
cmp
and
sub
mov
in
mov
stos
out
mov
push
jg
inc
addr16
into
sbb
xor
mov
pop
adc
ficomps
sahf
mov
mull
push
cmp
sub
sbb
xlat
jp
xchg
int
sub
push
cmpsb
cmp
popf
outsl
repnz
fwait
imulb
fs
insb
enter
lock
scas
lret
push
jge
or
and
lret
gs
jae
cmp
cli
arpl
adc
or
out
push
inc
rcr
ficompl
push
xchg
aaa
sarb
pop
xchg
scas
popf
fsubrp
mov
pop
rorb
mov
popa
xor
ja
cs
in
pushf
push
jnp
cmpsb
out
jge
pop
lahf
sbb
in
inc
aaa
imul
or
add
lret
int3
dec
lds
dec
mov
arpl
ljmp
dec
jo
rorb
add
cmp
push
xchg
movsb
pop
test
ret
cli
mov
in
mov
mov
daa
cltd
adc
jno
sub
xchg
cmp
xor
movsl
jl
inc
and
push
fcomps
mov
insb
test
loopne
mov
jbe
rcrb
js
cwtl
sbb
dec
rcrl
mov
sub
add
add
out
cmp
pop
subb
dec
sbb
dec
addl
cmp
or
and
sub
outsb
dec
lcall
sti
fdivl
fidivl
sbb
sub
xorb
jg
pushf
pop
mov
fmull
mov
jmp
sarb
in
ss
mov
cmp
push
scas
div
cmp
xchg
shll
es
or
daa
ror
loope
cmc
decl
sub
mov
pop
cmp
mov
lahf
stc
cmc
xchg
xchg
fs
and
add
jb
xchg
xchg
lods
xchg
pop
sub
js
push
cli
push
movsl
idivb
jns
sti
jmp
sbb
gs
test
pop
mov
mov
rcl
jno
xor
or
or
xor
add
inc
cmp
leave
and
mov
mov
cmp
jl
cmp
mov
or
dec
push
fsts
les
cld
jecxz
cmp
cmp
call
cmpb
sahf
mov
jecxz
stos
pushf
cld
xor
fldt
mov
addl
push
inc
sbb
movsb
aas
add
out
dec
jp
dec
je
roll
test
std
aas
jbe
push
ja
mov
mov
flds
inc
mov
sbb
rcrl
lock
das
das
xor
jp
inc
pop
mulb
pop
jg
mov
es
and
hlt
dec
fwait
test
cmpsl
cwtl
sbb
mov
xor
arpl
mov
cwtl
loope
and
sarl
pop
popa
mov
mov
aam
addb
adc
cli
pop
cld
xchg
push
shr
jb
and
xchg
inc
mov
inc
dec
fsubrl
xor
cmp
sub
setne
add
movsl
iret
test
int
in
pop
xchg
push
pusha
dec
xchg
lret
loop
hlt
xchg
ret
cmc
stos
rcrl
test
fwait
aad
pop
push
lds
jge
add
dec
sbb
ret
js
pop
jnp
xchg
imul
ja
mov
mov
pop
in
and
lcall
inc
shrb
pushf
jmp
xor
dec
andl
jecxz
mov
out
or
mov
in
in
orl
out
dec
mov
or
push
addr16
data16
inc
mov
mov
inc
cmp
jle
jg
in
sub
in
or
fisttps
and
into
popf
mov
jae
lods
jnp
imul
sub
mov
dec
push
stos
out
jns
and
cmc
insb
inc
fstps
imul
jbe
sub
mov
adc
pop
movsb
iret
mov
aad
jo
jae
pop
add
insb
rolb
sub
push
inc
add
ficoml
sbb
xchg
mov
mov
lds
lds
imul
cmc
pop
mov
mov
leave
leave
mov
jae
jns
xchg
push
jmp
pop
jbe
sarl
fucomp
sbb
and
or
outsb
push
fidivrl
ss
dec
es
and
loop
fbstp
arpl
enter
jmp
lahf
mov
movsb
call
xchg
xor
in
lahf
push
jmp
cwtl
fs
daa
cwtl
mov
outsl
adc
jno
fisubl
out
jge
cmp
nop
sub
movsl
andl
lahf
jo
sub
loopne
test
stos
popa
lods
xor
adc
cmp
out
adc
lret
pop
int
lods
rorb
mov
push
pop
sub
and
data16
push
adc
push
push
or
cmpb
add
pop
sub
add
xchg
dec
and
bound
les
sub
sbb
pop
add
cmp
inc
xor
adc
sbb
sub
xchg
subl
orb
in
sub
xor
sub
loopne
pop
stos
xchg
ss
jl
cmp
rorl
lret
int
or
mov
hlt
ljmp
and
cmc
sub
xor
cmp
outsl
js
jbe
dec
clc
imul
jmp
xor
xchg
pop
inc
data16
lods
jns
stos
mov
imul
cli
fwait
int3
dec
xor
pop
add
sti
lcall
movsl
mov
loopne
negl
fdivrs
adc
jle
cmp
push
and
sbb
rcll
repz
test
adc
notb
lods
cs
aad
mov
cmp
int
and
jmp
lock
push
es
jmp
pop
push
ret
adc
or
pushf
cmpsl
and
fistpl
lcall
std
mov
inc
xor
or
fdivp
orl
push
je
hlt
ret
out
test
or
std
ss
cwtl
adc
aaa
mov
ds
filds
dec
dec
sub
cmp
fstpl
mov
dec
and
adc
das
adc
mov
cli
add
add
ret
sbb
ljmp
sub
cmpsl
xchg
push
xchg
mov
or
dec
mov
mov
push
adc
addb
lock
mov
test
insb
aam
push
shll
fwait
mov
fst
adc
clc
scas
dec
jnp
test
xchg
mov
lods
mov
popa
stos
xor
mov
xchg
fldcw
ret
scas
popa
add
mov
test
xor
adc
mov
aas
push
pop
sbb
out
outsl
call
clc
fwait
add
xor
push
sahf
into
add
pop
ljmp
pop
xor
sub
adc
mov
pop
mov
lret
add
hlt
pop
lahf
xor
ja
test
out
push
int3
mov
repz
sub
mov
mov
insl
dec
out
out
mov
jns
dec
test
mov
xor
pop
dec
ja
in
addb
testl
mov
pop
ljmp
fwait
push
pusha
xchg
mov
xchg
test
lds
arpl
jae
and
popf
mov
jae
push
sbb
shlb
add
insb
lods
mov
ds
nop
pop
adc
mov
adc
or
ret
insl
pop
cmpsl
sbb
arpl
mov
lods
or
faddl
inc
mov
xchg
cmp
in
arpl
lahf
cld
fidivs
in
or
inc
xchg
out
jae
clc
repnz
dec
das
leave
sub
pop
hlt
jmp
mov
sub
or
outsb
icebp
or
jmp
mov
add
mov
and
leave
dec
xchg
in
push
lds
sbb
mov
cmp
xchg
cmp
imul
in
in
xchg
and
cmp
stos
js
sbb
inc
cmp
xchg
push
ds
pop
pop
movsl
mov
stos
and
mov
push
pop
lods
popf
test
jbe
xchg
int3
fwait
pop
cld
xorb
inc
idivb
addl
pop
jmp
mov
pop
sub
filds
sub
rcll
mov
and
adcb
sbb
cmc
adc
sti
test
int
xchg
subb
fldt
jg
loopne
push
in
and
cmpsl
test
xchg
mov
sahf
cmp
jg
shll
jg,pn
daa
xchg
mov
or
cmp
pop
repz
mov
cmp
jl
inc
idivl
xor
mov
out
or
sbbb
popf
push
ljmp
and
shl
ret
and
add
aad
lods
pusha
addb
and
xor
xor
cmp
mov
inc
cmc
push
lods
fnstcw
pop
testl
sbb
gs
adc
iret
aad
pop
mov
stos
sbb
cld
aaa
aas
xlat
mov
daa
push
mov
popa
pop
xchg
xchg
inc
insb
aad
pop
pop
nop
dec
adc
dec
fwait
dec
incb
movsl
int
ret
les
push
jecxz
loope
repz
and
lret
jle
sbb
xchg
xor
xchg
or
fildl
pop
pop
inc
adc
or
inc
adc
dec
push
je
shl
das
pushf
testb
std
fisttpll
cwtl
lret
push
adc
sarb
subl
sahf
push
lret
dec
popf
jmp
mov
xor
imul
das
out
adc
mov
mov
insb
and
add
adc
sbb
call
dec
xchg
pop
fwait
cmpsl
xchg
push
add
jecxz
test
scas
or
aad
pop
mov
push
sbb
pop
lahf
dec
addr16
and
and
mov
cmp
cmpsl
inc
clc
ljmp
ljmp
lock
sbb
push
stos
and
pushf
xchg
and
fistps
rcpps
xchg
add
and
push
andb
daa
call
test
shlb
xchg
inc
dec
rol
outsl
pop
pop
jp
fwait
xor
or
add
aaa
or
dec
xor
jp
or
sub
popf
push
mov
xchg
dec
jae
ds
or
pop
jmp
ja
jmp
adc
dec
inc
or
rorl
mov
hlt
dec
por
mov
cmove
lock
aas
adc
in
xor
mov
fdivrl
jne
jo
mov
mulb
and
mov
outsl
jbe
pop
mov
jle
push
in
jo
pusha
and
filds
aad
mov
cmp
jae
ffree
push
out
in
in
mov
pop
stos
mov
aad
stos
and
jbe
imul
in
repz
sbb
push
adc
mov
lret
ss
insl
pop
ficomps
mull
push
mov
jne
and
push
mov
inc
ficoms
fidivl
mov
test
into
pop
pop
ja,pt
shll
lds
mov
mov
pop
movsl
out
leave
mov
xchg
lahf
push
mov
jbe
ds
jge
mov
sub
aaa
test
arpl
int3
pop
nop
add
dec
icebp
int3
or
aaa
dec
add
repz
test
push
xor
sbb
scas
fisubrs
sub
cmp
jle
inc
jo
lret
xor
in
insl
add
enter
daa
xchg
pop
xor
aad
or
lahf
test
loopne
lods
stos
lahf
jo,pt
movsl
xchg
popf
xor
jmp
push
arpl
lods
push
test
inc
mov
xor
shr
push
dec
jp
mov
js
or
addr16
insl
jmp
into
mov
push
in
sub
cmp
outsb
sub
out
adc
int3
sub
subb
sbb
shl
add
cmpsl
sbb
or
fildl
push
inc
ja
xchg
mov
in
xchg
sub
repnz
mov
sbb
mov
fmull
test
sub
jg
repz
mov
jae
mov
clc
pop
mov
sti
cmc
adc
fs
sti
xchg
push
fdivs
add
divl
jecxz
sub
xor
push
mov
cmpb
push
cltd
imul
ss
sbb
mov
add
dec
lods
inc
in
daa
mov
mov
sbb
add
cmp
adc
dec
sbb
loopne
push
enter
movlps
lret
mov
or
out
xchg
in
rolb
sbb
aaa
scas
xor
sub
sbb
jmp
adc
aad
in
mov
and
cmp
and
inc
dec
or
out
jp
insl
sbb
testb
call
std
scas
pop
rcrb
xor
call
jg
add
jo
imul
loop
cmpsl
jb
movsl
push
dec
fbld
cli
shll
mov
notb
leave
ret
cwtl
xchg
pop
mov
sub
dec
add
mov
mov
xor
lock
aaa
in
into
inc
das
mov
push
push
push
ret
aaa
shrl
lahf
call
cltd
dec
mov
cmpsw
xchg
pop
push
mov
mov
popf
push
test
mov
adc
push
or
mov
aas
sub
add
mov
and
sub
and
imul
hlt
dec
xchg
daa
cmc
cs
scas
lods
xchg
push
out
pop
inc
std
xchg
addr16
mov
push
adc
outsb
out
cltd
and
pop
shrb
lcall
sbb
test
lock
xchg
ja
rcrl
xchg
fwait
cmc
and
scas
or
push
adc
push
lea
ljmp
cli
pop
or
mov
xchg
in
test
mov
adc
lods
sub
xchg
inc
test
adc
test
pusha
jne
jae
mov
imul
movsl
inc
in
bound
orb
test
pop
movsl
mov
imul
cmc
inc
jns
sbb
insb
mov
push
in
mov
sub
and
test
and
movsl
ss
xchg
sub
jmp
stc
dec
movsb
jae
fistl
popf
or
mov
xchg
push
add
shlb
in
push
scas
push
adc
push
cltd
fstpl
xchg
dec
pop
iret
test
je
pop
adc
jl
arpl
adc
xor
or
shlb
jo
sub
sub
pop
dec
mov
cmp
fbstp
sarb
mov
lods
xor
leave
sbb
hlt
pop
xchg
push
push
fmuls
mov
jge
mov
jecxz
addr16
out
or
cmp
jae
in
mov
xor
je
loopne
mov
lcall
mov
inc
in
lods
cmpsb
pusha
stc
pop
in
push
pop
ds
daa
xchg
or
cmp
dec
jno
mov
in
pop
xchg
xchg
push
mov
test
push
add
iret
test
or
mov
push
push
xorb
xor
js
mov
mov
add
cmp
sub
push
movntps
mov
push
adc
cmpsl
fdivl
xorb
sbb
pushf
push
add
lods
adc
sbb
pop
int
xchg
pop
sub
lods
push
lcall
in
fnstsw
sahf
jg
popa
test
mov
fbstp
stc
ret
and
mov
pcmpeqd
or
fwait
and
mov
divl
orb
shlb
mov
dec
sbb
scas
in
pop
into
arpl
sbb
sub
fisubrl
and
stc
shll
add
and
mov
cmp
out
push
cli
xor
cmp
jl
ds
inc
aaa
sti
cmpsl
lret
test
cmp
xchg
gs
and
adc
andl
mov
xchg
mov
lahf
push
mov
jb
add
mov
add
mov
aaa
js
jmp
subb
or
or
dec
pop
stc
mov
pop
test
icebp
les
xchg
and
stc
mov
xrelease
iret
mov
jl
aad
adcl
aas
jae
pushf
test
mov
in
jo
enter
and
aad
xchg
push
jb
dec
rorb
sbb
je
jno
sarl
pop
not
mov
std
sub
cwtl
inc
testb
es
mov
pop
push
dec
in
jmp
lret
sub
mov
in
cwtl
adc
das
lods
andb
pop
into
lea
imull
xlat
cs
insl
dec
mov
sbb
mov
adc
cld
add
jge
mov
sbb
cmpsl
mov
fucomp
jo
imul
xorb
stc
fisttpll
mov
pusha
and
xchg
dec
out
ljmp
shrl
fldz
sarb
xchg
mov
leave
add
ds
test
movsb
mov
sbb
mov
test
mov
adc
nop
pusha
arpl
je
je
mov
mov
xchg
push
push
push
mov
mov
decl
cmp
or
xor
js
xchg
xor
push
mov
rcrb
ja
hlt
push
dec
xchg
push
bound
mov
std
mov
and
dec
aad
shll
icebp
fbstp
test
bound
into
jns
xchg
dec
in
imul
mov
lock
out
pop
jp
xchg
mov
mov
lcall
jle
jl
in
inc
jb
pop
out
movsl
ffreep
dec
cwtl
xchg
decb
jmp
les
or
jne
adc
mov
push
push
cmp
xlat
ret
in
imul
mov
loopne
fistl
insb
mov
ret
bound
jg
inc
mov
dec
inc
jnp
sbb
push
cmp
pop
fcmovu
fstl
jo
pop
jge
mov
sbb
lds
xchg
xchg
loope
mov
add
ds
xchg
mov
hlt
movsl
in
push
daa
cli
pcmpeqd
mov
cmpsl
sbb
stos
in
mov
movsl
add
dec
es
loop
mov
push
outsb
push
jb
push
mov
jo
mov
test
push
pop
cmp
shll
mov
cmp
das
daa
xchg
xchg
outsl
cmp
or
jge
jl,pt
movb
or
cmp
pop
rcrb
cmc
mov
test
xlat
pop
xor
enter
pushf
das
pop
pop
add
pop
xchg
cmp
cld
adc
sub
fs
sub
cld
bound
mov
adc
andb
orb
cs
pop
mov
sub
sbb
pusha
fisubrs
or
xchg
pop
cld
inc
jns
imul
sbbb
out
gs
and
push
xchg
sarl
xchg
scas
mov
fcompl
lgs
mov
jbe
adc
ret
ss
dec
dec
or
lods
lds
push
popf
sub
addr16
mov
dec
xchg
inc
test
stos
xor
pop
repz
out
stc
mov
xchg
fs
xchg
testl
and
xchg
lods
adc
sub
cli
addr16
xor
jne
dec
test
push
fwait
out
pop
out
add
lcall
push
mov
adc
dec
shrb
or
adc
mov
mov
adc
push
pop
add
cmp
jmp
jne
push
mov
mov
mov
cs
aad
inc
rcll
mov
jns
fldenv
pop
les
push
es
cld
pop
insb
lea
push
call
sti
cmp
ss
cmpsl
adc
sub
pop
imul
inc
stos
stc
dec
inc
mov
inc
loopne
sub
cmpsb
dec
int
and
ror
mov
std
shr
icebp
cwtl
cld
movl
mov
add
lret
cltd
mov
mov
and
jl
sbb
mov
enter
xchg
and
icebp
outsb
ret
push
and
movsl
pop
cmc
insl
das
in
dec
cmpb
imul
aam
shl
push
ds
mov
inc
dec
ljmp
inc
lret
pop
cld
inc
jnp
cmp
insl
sub
jae
and
mov
cmpsl
pop
mov
outsl
mov
cs
movsl
daa
nop
ljmp
cltd
lods
pop
ds
stos
out
movl
push
jo
xor
jo
cmpsl
add
incl
js
xchg
xor
cmp
inc
std
jo
lret
pop
fcoml
push
hlt
pop
fiadds
mov
xor
out
pop
xor
xchg
jmp
lret
ljmp
adcb
pop
push
das
mov
mov
inc
dec
mov
ljmp
arpl
mov
test
mov
aam
mov
mov
adc
jmp
fs
out
in
movsb
pop
sbbl
mov
sub
popa
dec
arpl
sbb
mov
or
mov
scas
mov
jle
sbb
mov
repz
lock
pop
cli
xchg
rcll
jmp
jno
jae
mov
xchg
popf
pop
jae
mov
adc
mov
jns
pop
xchg
fisubrl
mull
sbb
push
push
daa
cwtl
adc
jmp
ret
mov
inc
xchg
arpl
scas
push
inc
jle
add
enter
mov
cmpb
inc
mov
mov
mov
fidivrs
mov
scas
into
push
mov
push
jmp
in
hlt
lock
jbe
stos
sbb
out
pop
call
or
cmp
int
decb
push
lea
push
lea
sub
cmpsb
scas
jnp
shll
jecxz
dec
cmp
popf
stc
movsb
lahf
insl
faddl
jle
cmpsb
data16
in
and
daa
daa
xchg
mov
mov
jl
push
cmp
sbb
and
int
push
cmpsb
jecxz
test
mov
pop
or
push
pop
xorl
pop
push
fwait
inc
sub
lea
out
mov
adc
pop
jp
lahf
mov
out
sbb
cld
add
mov
and
mov
call
sub
arpl
sbb
pop
push
mul
xor
xor
fistpl
out
divl
adc
outsb
ss
fidivs
mov
xor
adc
daa
arpl
push
pop
dec
add
or
decb
mov
push
cs
test
lcall
daa
fs
aas
push
push
mov
fistl
lods
cld
subl
cli
lcall
cmp
and
sti
add
or
enter
shl
pop
jae
xor
mov
xor
cmc
outsb
pop
repz
mov
int3
sbb
call
subb
mov
mov
or
lods
mov
aad
add
lahf
dec
pop
mov
inc
cmpb
sahf
pop
mov
fwait
shl
lcall
rorl
call
jp
pushf
pop
jmp
imul
jl,pt
inc
out
insl
pop
push
mov
inc
xor
dec
inc
mov
pop
or
dec
inc
lock
rcrl
mov
cwtl
mov
jae
mov
addl
jns
inc
dec
test
xlat
mov
mov
lods
xchg
push
lea
add
es
dec
insl
push
repz
add
cmpsl
xchg
cmp
pop
scas
jmp
cld
pop
dec
movsl
mov
push
fbld
pop
jmp
pop
sbb
dec
sub
jnp
xchg
mov
sbbl
xor
fstl
inc
jp
in
add
and
dec
popa
pop
jp
lods
enter
fidivs
sbb
dec
outsb
sub
iret
outsb
pushf
add
arpl
test
mov
ds
mov
dec
sti
jb
test
shlb
testb
and
adc
hlt
fwait
out
mov
incl
mov
sti
enter
rorl
inc
adc
leave
out
movsl
xchg
shll
insl
mov
cwtl
pop
mov
inc
sahf
scas
ja
adc
dec
jnp
repz
dec
mov
cmp
fwait
sub
jne
sbb
out
inc
ljmp
push
or
lahf
stos
in
push
subl
mov
pop
xor
addr16
mov
cmp
xchg
xchg
mov
pop
adcb
mov
in
lods
cmpsl
pusha
mov
mov
add
xchg
movsb
lcall
pop
xorl
popf
adcb
add
xchg
xor
mov
dec
out
insb
ret
lahf
fwait
imul
sbb
mov
adc
dec
inc
iret
cmpsl
iret
ret
xor
mov
xchg
inc
orl
push
cmp
xchg
fiaddl
dec
xchg
cwtl
inc
and
cwtl
iret
pop
fistpl
ficomps
mov
je
lcall
or
leave
jg
hlt
cmp
xchg
jbe
or
jge
mov
jo
movsb
or
or
ficoms
dec
sarb
xor
ret
xor
test
scas
pop
pusha
outsl
and
mov
movsb
sub
inc
lods
lods
sti
cmpsb
jmp
mov
enter
daa
xchg
xor
jno
fistl
jl
loop
cmp
ds
in
scas
movsl
lods
cmp
add
jns
in
mulb
jne
xlat
cmp
inc
adc
dec
fstpt
in
pop
add
ret
push
adc
sub
jne
decb
cmp
mov
xlat
sarb
addr16
and
xorb
sub
mov
stos
push
and
int
mov
fiaddl
cli
add
lcall
cmp
out
pop
jmp
and
xor
mov
dec
lea
std
add
mov
inc
or
stc
shrl
movsl
daa
cmp
and
adc
jae
stos
lret
push
rcll
and
cld
dec
mov
cmc
jo
and
outsl
mov
and
stc
test
fs
pop
repz
lods
jecxz
pop
mov
add
out
xor
cli
int
pop
xor
xchg
cmp
rcrb
movsb
sbb
pop
ljmp
pop
xchg
out
adc
incb
adc
test
repz
cmp
and
repz
mov
js
fs
push
add
xchg
sub
popl
cmpsb
inc
xchg
mov
mov
inc
jecxz
mov
lahf
lea
and
call
stc
mov
popf
adc
pushf
test
decl
inc
mov
mull
aas
pop
jns
jb
jp
dec
mov
loope
shrl
negb
fistpl
xorl
sbbl
push
ljmp
sarl
xor
popf
das
dec
inc
cmp
inc
pop
and
loopne
ret
jae
jmp
stos
lcall
js
jge
xchg
lea
cmp
push
imul
xchg
leave
mov
repnz
int3
rcrl
testl
jb
popf
aam
inc
pop
mov
or
sub
in
clc
adc
xor
xchg
repnz
sub
xor
xchg
stos
int
jbe
jmp
inc
mov
ucomiss
cltd
add
imul
mov
mov
and
dec
bound
fildll
cmp
adc
xor
pop
mov
jnp
push
bound
cmp
add
mov
pop
inc
xor
add
xor
sub
xchg
and
mov
push
les
add
xchg
dec
outsb
out
stos
inc
loope
les
xchg
or
dec
jle
in
jne
fnsave
and
bound
pop
jns
fwait
in
in
cmp
mov
imul
sub
push
mov
addr16
mov
out
fdivs
xor
out
jle
cmp
in
jne
pusha
sub
fbld
xchg
in
xchg
ja
jmp
popl
fbstp
jp
push
mov
adc
inc
das
cmpsl
push
xchg
pop
aam
adc
xchg
sbb
arpl
out
test
popf
push
mov
repnz
lds
and
test
pop
icebp
cmpsb
push
inc
lods
mov
inc
test
pop
push
mov
das
dec
xchg
out
add
sbb
jmp
dec
fiadds
inc
cmp
sti
jae
shl
in
sub
outsl
mov
negb
hlt
xchg
out
push
adc
mov
loopne
jge
pop
mov
rcr
enter
cmpsl
or
pop
pop
int3
mov
scas
and
pop
ja
xor
loopne
adc
and
lds
movsb
mov
mov
cmpsb
insb
xchg
sub
lock
jp
jne
and
cmp
and
test
das
loope
sbb
fldenv
lock
dec
mov
test
cmp
xor
lret
cltd
pop
rol
aaa
js
sbb
push
ds
loope
jno
sub
pop
out
sub
pop
and
sarb
adc
pop
mov
sbb
sub
add
push
inc
and
or
and
aas
in
jge
dec
pop
jns
inc
lcall
adc
mov
test
ss
sahf
or
int3
orb
jg
sub
mov
mov
movsb
in
dec
or
ss
cwtl
cmp
faddp
lods
divl
mov
inc
shrl
mov
push
or
je
out
nop
shl
add
xor
sub
loop
sti
hlt
stc
lods
pop
mov
mov
push
pop
lods
mov
lods
lret
mov
dec
jle
jo
cli
add
xor
inc
test
inc
push
test
arpl
sub
fildll
loopne
sbb
pop
mov
test
popa
pusha
inc
imul
fcmovu
xchg
lahf
pop
js
cmp
loope
pop
scas
pop
xlat
xor
fldenv
jecxz
jbe
and
je
xchg
add
fdivs
push
dec
aad
scas
inc
test
xor
or
sbb
mov
xchg
jecxz
sub
push
lea
leave
inc
js
repnz
dec
dec
inc
adc
loop
inc
xchg
in
inc
repnz
imul
cltd
cmp
repnz
dec
xor
je
pop
inc
sarl
ss
std
aam
cwtl
sub
jmp
lret
xorl
mov
mov
sub
mov
sbb
das
sub
mov
sti
aad
ret
add
or
mov
lods
cmpsl
nop
fs
mov
in
and
outsl
mov
mov
mov
mov
pop
pop
lock
or
or
lock
fucom
fisubl
xchg
clc
dec
popa
dec
add
lods
sahf
hlt
xchg
dec
and
push
add
jge
jl
cltd
jp
jmp
xchg
js
mov
mov
leave
jne
test
das
clc
xchg
or
rcl
and
ficompl
or
fnstcw
test
xor
mov
or
dec
mov
xchg
outsl
imul
adc
pop
mov
cmp
inc
js
orl
mov
dec
popa
add
sbb
imul
xchg
loope
jns
cmp
in
or
out
testb
jle
or
loop
lock
jp
or
mov
ljmp
mov
mov
push
pusha
les
data16
pop
xchg
dec
mov
add
lock
xchg
jae
int3
jle
sbbl
add
rcrb
and
xor
insb
cltd
sub
imul
cmp
popf
mov
iret
test
ret
arpl
cld
fildl
xchg
insl
cwtl
inc
xchg
or
cmp
inc
cmp
fisubrl
in
or
pop
cmp
sbb
addl
mov
dec
add
insl
aaa
xor
shll
push
arpl
jbe
sub
jge
add
sbb
jbe
or
fwait
add
xchg
repz
sahf
test
ret
xor
cmp
add
pushf
adc
push
adc
aad
cmpsb
out
fwait
sbb
xlat
pop
mov
jo
mov
nop
loope
cmp
inc
jle
fsts
jl
dec
dec
cmp
inc
push
ds
outsb
loop
mov
push
cld
lahf
push
out
test
in
pusha
push
add
js
push
ret
sbb
es
pop
xorb
push
push
dec
loope
fsubs
aam
scas
sub
imul
mov
or
sbb
sub
sbb
dec
push
sub
jo
cld
movsb
xor
clc
inc
ss
clc
shrl
lcall
das
fdivl
push
sbb
lock
scas
xchg
ret
test
push
adc
push
mov
fiadds
test
adc
dec
cmp
cltd
inc
pop
div
pop
xchg
lret
add
ret
movsl
stos
mov
cmp
into
shlb
cmc
incb
xor
les
outsl
jo
push
loop
adc
stc
or
fs
insl
push
add
es
lods
mov
or
iret
sub
outsl
movsb
pop
cli
xor
xor
test
sti
adc
and
mov
and
sub
adc
xor
sbb
repz
loop
cmp
aad
sub
sub
dec
xor
jmp
sub
idivl
or
pop
mov
das
dec
xor
and
mov
fs
les
inc
or
idiv
and
idivb
testl
adc
out
or
pushl
fcmovnbe
imul
dec
scas
inc
or
mov
jmp
test
es
rorl
bound
std
outsb
jmp
mov
mov
loope
dec
incb
test
mov
xchg
jno
lock
mov
mov
bound
pop
sub
xchg
ljmp
lret
ja
dec
outsb
adc
cmpsl
mov
cmp
les
cld
fsubrl
mov
shll
and
fsubs
rorb
or
aam
fstpl
mov
inc
lods
push
mov
inc
fisttpll
lods
or
xchg
or
jge
cmc
popa
fs
outsb
lods
or
out
scas
pop
mov
push
fmull
insb
add
imul
mov
sub
dec
xor
sbb
aaa
cli
sbb
vmread
shll
adc
or
ret
xor
add
hlt
xor
jmp
inc
xor
cmp
cmpsl
pop
xchg
xor
xchg
xchg
xchg
mov
sbb
push
pop
ja
xorl
fucomi
inc
bswap
lock
adc
dec
inc
jne
inc
int3
mov
dec
shr
loop
sub
in
daa
movsb
adcl
out
xchg
stos
sub
dec
jo
addr16
repnz
outsb
pop
mov
rolb
jnp
sti
data16
sub
pop
int3
mov
pop
fbstp
jge
sub
bound
inc
jmp
jnp
mov
das
push
adc
and
adc
fldcw
imull
test
std
push
inc
mov
test
inc
lds
pop
cmc
insl
inc
ret
arpl
xor
mov
or
mov
icebp
inc
mov
ljmp
stc
dec
sbb
or
push
mov
lds
dec
adc
sbb
mov
lahf
iret
leave
in
cmp
sbb
enter
xchg
out
jge
mov
pop
xlat
aaa
loope
ret
or
add
int3
jns
das
dec
or
xor
xor
xchg
jnp
scas
testl
cmp
jl
movsb
lret
inc
fadds
shrb
jb
into
in
mov
or
daa
cmp
cmp
xchg
inc
test
inc
cmp
test
gs
movsl
ret
and
xchg
lahf
xchg
push
repnz
imul
cmp
adc
rcrb
lahf
js
inc
iret
pop
shll
mov
mov
sub
jnp
sub
ss
mov
rcl
leave
movsl
sbb
jmp
int
add
mov
and
dec
push
sub
inc
pop
ja
dec
lcall
add
fildll
sbb
jl
or
addb
lret
mov
lock
sub
arpl
mov
or
push
push
add
mov
mov
int
pop
mov
mov
or
dec
into
mov
repnz
xor
jle
dec
lds
jae
stc
sbb
pop
add
icebp
dec
lods
cwtl
shll
dec
out
mov
lds
xchg
lret
rcll
decb
add
sub
pop
out
rcl
adc
push
mov
jns
popa
adc
dec
scas
repz
push
notb
mov
jb
aam
jmp
mov
jb
mov
or
mov
xor
aad
repnz
nop
and
dec
xchg
pop
cmc
inc
into
xchg
mov
sbb
or
lea
loope
jno
jbe
push
pop
mov
lret
adc
add
mov
inc
dec
pop
pop
inc
sub
fs
cmp
leave
jl
dec
and
je
inc
sbb
pop
ret
gs
std
adc
mov
mov
insb
and
mov
lret
les
inc
mov
xlat
ss
das
cmpsb
lock
xchg
mov
imul
add
insl
mov
ret
out
cmpsl
mov
dec
icebp
fwait
pop
std
cld
pop
int
mov
testb
mov
xchg
data16
or
push
lods
in
aam
test
mov
cmpps
xchg
fnsave
popa
das
clc
ret
xchg
loopne
lods
ljmp
mov
je
fldt
adc
movsl
push
mov
sbb
dec
sbb
add
mov
cltd
call
je
mov
sub
adc
or
test
out
add
ret
sarl
and
in
stos
cmp
pop
add
enter
mov
mov
adc
lret
cld
xchg
or
xor
xor
dec
inc
inc
cmpsb
push
or
nop
mov
dec
daa
stos
adc
test
frstor
mov
jl
jns
imul
and
dec
out
test
std
or
mov
jp
test
mov
nop
jnp
add
jle
popl
out
repz
cli
lcall
lock
shr
je
inc
xchg
xchg
data16
cmp
popf
sbb
dec
mov
push
mov
into
and
sub
loop
jbe
shrl
inc
mov
iret
inc
pop
jnp
push
xor
xchg
xchg
inc
inc
int
repnz
dec
inc
lea
decl
das
clc
movl
jge
xchg
hlt
sub
add
sbb
fsubrp
aam
lds
pushf
addr16
repnz
sbb
addr16
push
add
jbe
sbb
jge
rep
sbb
pop
in
aaa
mov
xor
add
fisttpl
ljmp
sti
jae
jo
adc
fsubl
ret
cmp
lea
movsb
push
mov
inc
call
or
movsl
fwait
push
enter
daa
mov
jo
xchg
jl
or
and
mov
dec
and
sbb
lahf
cmpsb
cmp
push
test
cltd
sub
xlat
push
rcrb
mov
xor
cmpsl
push
stc
sbb
xchg
inc
sub
enter
mov
and
movsb
loop
jp
dec
cmp
sbb
add
or
xorb
int
sbb
out
lcall
fwait
in
stc
push
stos
sbb
fmull
or
mov
sbbb
mov
imulb
mov
dec
lret
movb
xor
sub
psadbw
imull
fcmove
rolb
call
or
mov
or
cmc
mov
xor
sbb
loop
in
stc
rcr
clc
fs
push
mov
sub
and
mov
daa
mov
mov
push
cli
cltd
xchg
les
pop
xor
enter
jo
out
xor
adc
test
loopne
jmp
mov
imul
repz
sbb
xlat
out
cmc
daa
sub
scas
cmpsl
mov
and
jmp
mov
aad
cmpsl
leave
nop
sti
adc
dec
repnz
adc
popf
sbb
rol
mov
push
mov
les
call
cmc
jmp
pop
push
dec
jge
push
or
mov
cmp
push
xor
in
jb
ficoml
adc
sbb
fisttpl
aas
into
je
mov
leave
imulb
mov
mov
mov
lcall
xchg
xchg
lret
xor
popf
mov
push
int
sahf
sub
jle
mov
and
and
scas
lahf
es
cmp
cltd
sub
push
or
mov
jb
mov
mov
sbb
stos
mov
mov
push
shrb
pop
jle
dec
repz
jle
xor
cmp
push
fstpl
jle
std
movsl
or
arpl
popa
xchg
push
pop
lods
fistps
fwait
stos
mov
daa
xchg
lahf
and
push
xchg
or
rsm
xchg
lahf
add
loopne
cltd
pop
hlt
xchg
test
jb
xchg
pop
testb
fs
lods
xor
jne
mov
pop
pusha
cld
in
fimull
mov
das
pop
add
sub
jmp
dec
cmc
or
push
push
pop
lcall
xchg
mov
dec
cmp
test
mov
in
dec
or
jo
aam
aad
sahf
out
popf
test
jns
div
in
pusha
push
xorl
out
xor
repz
aas
or
ret
test
mov
and
fstpl
enter
inc
call
xlat
pusha
xchg
jge
fistps
hlt
cli
jmp
push
mov
sub
lret
popf
inc
add
mov
push
outsl
stos
loopne
cld
and
add
imul
scas
outsb
rcll
daa
rclb
imul
ret
jg
int
iret
inc
fcom
cmp
aad
nop
xor
or
stos
lcall
sar
xchg
dec
jle
sbb
js
pop
movb
mov
enter
rclb
mov
inc
in
jge
rclb
stos
push
push
shlb
jbe
mov
test
mov
clc
or
push
pop
add
adc
dec
jo
dec
jmp
push
push
mov
mov
scas
mov
and
push
das
cmp
movsb
loope
cmpsb
inc
ja
fisubs
mov
xchg
enter
daa
jmp
mov
fs
cmpsl
mov
aam
imul
rorb
and
lahf
lds
add
test
fs
xor
jnp
lcall
js
mov
jne
popf
hlt
pushf
loope
in
sub
ljmp
cmpsl
jge
adc
jg
data16
orb
ret
sbb
scas
movsb
and
add
int
sub
xchg
pop
jne
cmc
lcall
sbb
inc
rcrl
inc
inc
sahf
xchg
cmp
xorb
xor
push
js
mov
jns
adc
push
cmp
lret
imull
ds
fcmovnb
mov
mov
sti
inc
or
cmp
into
jnp
inc
cmc
push
pop
stos
xor
mov
or
cltd
cltd
cld
stc
mov
fiadds
mov
add
lods
mov
sarb
out
sub
cli
int3
mov
xor
repz
ds
pop
mov
push
repnz
loopne
push
and
sub
stos
push
imul
iret
repz
imul
xlat
cs
push
sub
mov
jmp
sbb
and
ret
nop
ljmp
hlt
fld1
xor
fnstsw
adc
sbb
add
addb
sbbl
add
add
pop
int3
fstps
rcrl
inc
pop
ljmp
jns
adc
xlat
cs
push
aad
je
sbbl
dec
xlat
imul
sti
xchg
std
arpl
cwtl
sbb
mov
pushf
orl
inc
jo
mov
push
mov
xlat
lock
loop
das
movsl
xlat
in
push
xchg
xchg
mov
daa
hlt
dec
ret
mov
cmp
in
pop
push
mov
mov
dec
jns
cld
pop
add
inc
mov
push
outsb
pop
mov
aad
add
add
inc
fucomp
aam
cmp
push
cld
mov
fldl
jbe
xchg
pop
xchg
inc
ljmp
aam
dec
sub
out
fadd
mov
push
insl
arpl
add
imul
rol
mov
xor
pop
test
std
mov
sbb
divb
shrl
nop
fwait
or
add
inc
xchg
mov
inc
imul
or
fdivs
xor
mov
mov
mov
test
jo
mov
sti
dec
sub
sbb
or
or
mov
xor
and
jne
clc
pop
mov
inc
cmp
jl
sahf
gs
push
test
js
out
sub
sub
loopne,pt
addr16
mov
sbb
lahf
popa
or
pop
inc
jle
xor
or
je
fistpll
mov
xchg
sbb
cmpsl
jae
mov
and
mov
into
push
mov
popl
insb
inc
subb
inc
scas
sarl
push
sbb
adc
iret
add
ret
xlat
pop
add
jg
jecxz
jp
jl
mov
or
and
pop
lret
fidivl
xchg
mov
out
add
xchg
fidivs
clc
push
lds
jp
mov
cwtl
dec
adc
dec
std
sub
std
inc
cwtl
push
lahf
fmul
jbe
xlat
es
jne
sbb
cmpsb
aaa
push
adcl
add
icebp
push
int3
cmp
inc
dec
pop
cmp
xchg
aam
mov
jo
xchg
scas
xchg
inc
pop
and
dec
sub
movsb
insb
push
dec
inc
push
pop
push
cmpsb
sti
inc
outsl
in
jae
enterw
daa
mov
cmp
mov
sbb
cmp
fidivrs
xlat
in
and
jl
lahf
in
lds
jae
shrb
das
adc
mov
sub
pop
sub
js
aad
pop
jle
lods
push
movsb
jno
mov
xchg
sub
fbld
jo
mov
or
mov
pop
cwtl
hlt
cmp
das
andb
cld
sbb
mov
and
out
int
and
in
xor
hlt
mov
mov
pop
cli
push
fsub
insb
xor
and
or
mov
push
mov
nop
ret
adc
dec
repnz
cmpb
imul
fadds
out
lret
push
rcrl
fimull
mov
into
pop
js
cmc
sbb
push
outsl
in
int3
loop
adcl
outsl
xchg
dec
in
movsb
data16
subl
imul
xor
fnstcw
into
test
jbe
out
gs
and
std
sbb
dec
in
adc
inc
xchg
adc
out
repz
dec
xchg
outsb
into
mov
cmp
es
or
dec
pop
in
cli
in
jmp
jecxz
cs
aad
ds
nop
mov
cs
mov
lock
pop
dec
jge
pop
imul
jecxz
out
adc
insl
lea
add
repz
int
into
adc
pushf
stos
clc
cmp
mov
sbbl
loop
inc
inc
jns
and
jb
push
push
dec
test
jns
mov
jnp
imulb
dec
aam
or
cwtl
aam
add
inc
andb
xor
jne
adc
in
in
shrb
test
mov
mov
fldenv
lea
ret
int
int3
es
dec
addr16
pop
in
cmpsl
mov
mov
and
cld
mov
imul
mov
mov
inc
inc
fistps
hlt
jns
rcl
insl
jo
cmp
lret
add
mov
add
push
mov
fsubs
ficoml
xchg
popf
xchg
test
popa
rolb
mov
mov
addr16
out
cmp
aad
sub
rclb
add
dec
cltd
lea
mov
lret
fs
xor
adc
test
jecxz
xchg
shrb
out
orl
fwait
cmp
iret
push
or
xchg
add
pusha
fisubrl
out
mov
push
orl
xor
arpl
xchg
cli
shl
mov
es
mov
arpl
cmpsb
ja
scas
jmp
and
in
imul
or
add
int
loope
ror
pop
jne
cli
jne
mov
adc
jbe
jns
cld
add
xor
std
adcl
sub
cmp
jle
jmp
fidivrl
add
mov
es
xchg
jbe
in
pop
clc
pusha
lret
jle
lahf
mov
jmp
out
imul
mov
popf
xchg
push
ds
or
movsl
sbb
cmpsb
xchg
mov
imul
scas
xor
add
and
iret
pop
dec
jle
nop
mov
pop
cmp
inc
out
jb
arpl
mov
mov
inc
mov
int3
fisubl
push
aad
stc
xchg
mov
cmp
mull
and
pop
add
jmp
adc
rorb
hlt
dec
lea
push
out
sub
jbe
mov
sbb
xchg
stos
aaa
fisttpll
add
int3
and
or
xor
add
scas
jae
jnp
jnp
clc
cmp
lcall
xchg
bound
cmpsb
jle
sbb
pop
cmpsb
xor
daa
mov
inc
jno
insl
popf
jl
pop
inc
cmp
sub
scas
movsl
sahf
and
push
cmpsb
push
adc
mov
outsl
push
cli
add
xor
data16
mov
test
pop
mov
pop
enter
subl
out
sub
add
xchg
test
xor
dec
fwait
xorb
ret
add
imulb
scas
loop
push
aaa
inc
int
sti
xor
pop
in
mov
jae
mov
push
scas
pop
adc
mov
sbb
add
daa
cmp
sub
cltd
jg
mov
cltd
mov
mov
jp
and
ss
cmp
inc
pop
outsl
imull
xor
mov
cmp
hlt
and
inc
sbb
cmc
loope
pushl
mov
sub
loop
mov
xor
mov
flds
mov
lods
xor
pop
mov
ret
xor
mov
cmp
mov
loope
cltd
xor
gs
pop
loopne
imul
imul
push
mov
adc
insl
xor
sti
xchg
xor
fistpll
shl
xlat
lods
add
sub
sub
in
movsb
out
mov
ret
cmpsl
aad
pop
in
nop
mov
jl
cmovns
fsts
jno
repz
dec
jecxz
or
pop
sbb
stc
lods
das
call
jb
inc
pop
adcl
pushf
push
lods
ret
loopne
pop
es
inc
imul
aas
mov
ret
add
jmp
je
jne
divb
xchg
std
mov
lcall
add
fildl
sbb
push
lret
sbbb
pop
mov
inc
lock
mov
mov
inc
pop
mov
cmp
mov
xchg
insl
dec
jp
dec
push
or
cmpsl
mov
mov
idivl
cld
mov
xchg
mov
xorb
mov
adc
cmp
sub
popf
ja
fistps
jge
fimull
das
or
clc
scas
shlb
xchg
fcoml
pop
ljmp
or
and
int3
out
sahf
shl
xchg
je
inc
push
and
cmpxchg8b
sub
aas
pop
lahf
cltd
les
mov
cmp
stc
dec
xor
js
pushf
pop
mov
mov
rcrl
and
rcr
mov
pusha
fwait
sbb
neg
add
jnp
jmp
jle
adc
or
orl
and
mov
mov
or
jnp
mov
ja
push
stos
dec
adc
test
or
rolb
std
iret
dec
mov
aas
jne
popa
cwtl
mov
cli
dec
out
cmp
scas
jns
je
in
stos
jg
and
adc
sub
xor
xchg
addr16
mov
jne
mov
aad
fdivrl
stos
int
add
adc
popfw
push
fstps
jmp
mov
fidivl
dec
js
adc
aad
fst
sub
and
push
insb
sbb
jnp
xchg
xorb
cmpsb
xor
add
ret
sbb
jb
or
arpl
sub
or
sbb
incl
pop
mov
xchg
push
push
adc
lods
push
mov
fidivs
xor
lods
mov
push
mov
lods
scas
leave
aaa
mov
fsts
mov
lods
jge
xchg
aaa
pushf
push
test
xor
mov
or
mov
dec
cmp
xor
pop
inc
out
scas
push
pop
push
push
and
movsb
xor
inc
and
jp
add
in
inc
jb
push
imul
daa
mov
cmp
xor
dec
je
cmp
jae
ds
loopne
in
mov
lahf
and
cwtl
push
adc
dec
push
lds
xor
in
jecxz
hlt
pop
loop
mov
movb
negb
shl
loop
fildll
inc
subb
mov
outsb
rorb
daa
rclb
sahf
push
test
orb
sbb
mov
pop
cwtl
cmp
mov
adc
sub
xor
pop
repnz
mov
fdivl
cmpsl
sbb
sub
scas
cmpsb
add
into
mov
mov
pop
dec
mov
mov
adc
fbstp
add
adc
sti
push
sub
imul
lret
stos
rorl
mov
cmpsb
lods
or
into
and
shl
cli
dec
xor
mov
stc
scas
cs
test
add
les
jge
lods
sbb
mov
push
and
gs
sub
cmp
or
sti
sub
push
mov
sub
and
pop
mov
imul
repz
repz
cmp
pop
xlat
jmp
ljmp
xor
in
shlb
data16
xlat
inc
cs
mov
cld
nop
addr16
dec
outsb
dec
ds
sub
ret
xchg
movsl
mul
and
sbb
call
icebp
pop
movsb
pop
xor
xchg
adc
rcrb
add
pop
leave
inc
dec
inc
lock
scas
and
jb
in
dec
jae
mov
cmp
sub
in
pop
divb
cwtl
dec
jnp
mov
add
adc
dec
mov
mov
shlb
or
mov
cld
or
ret
jmp
xchg
ret
mov
jge
push
push
cmpsl
mov
pusha
icebp
into
xor
fimuls
push
mov
movsl
mov
add
xor
sarb
add
sub
aam
mov
testl
inc
ds
jmp
adc
ljmp
test
mov
inc
push
jnp
add
sub
jmp
and
cltd
sti
mov
or
cmp
or
lea
test
push
xchg
push
cmc
sbb
ret
shll
sbb
or
in
fwait
xchg
sti
aam
push
and
add
xorb
pop
or
call
xchg
cwtl
pop
inc
mov
bound
mov
flds
or
lret
adc
dec
push
jg
inc
cltd
scas
mov
mov
sti
add
sub
mov
hlt
and
sbb
bound
imul
ret
scas
jo
out
xlat
lahf
sub
das
test
addr16
test
mov
test
into
in
into
into
pusha
add
dec
fistps
sbb
xchg
prefetcht0
inc
mov
xchg
jge
cmpsb
jae
jns
push
inc
cli
popf
fbstp
push
mov
shrb
aam
mov
imul
mov
cli
jo
push
in
lods
repz
je
iret
sbb
gs
test
popa
in
test
adc
or
xchg
in
mov
mov
sbb
or
xchg
sbb
inc
cmp
xor
ficomps
shl
lds
xor
sarb
repnz
stos
adc
scas
or
push
mov
jp
sub
xor
test
outsl
aaa
pop
xor
or
cmc
or
lahf
popa
mov
dec
cmpsl
repnz
das
divl
mov
outsb
sbb
mov
cmpb
frstor
mov
add
in
sub
enter
daa
mov
xchg
jno
fisubrl
cmp
xor
mov
enter
inc
adc
test
nop
loope
xor
fistps
cmpsb
cmp
or
add
cmp
push
ljmp
shll
outsb
xor
adc
jmp
orb
add
sbb
mov
int
jo
cmp
pop
sub
pop
jno
sbb
push
pop
xor
loope
or
scas
mov
sahf
and
dec
test
push
out
insl
mov
mov
and
mov
pushl
rol
ss
jp
cmp
mov
mov
sub
lret
jmp
in
cmp
mov
inc
cmc
outsl
testl
clc
push
loop
ja
stc
gs
jl
adc
popf
add
lret
lds
dec
mov
loop
cwtl
push
push
xor
sub
sti
fisttpl
inc
filds
loopne
rorb
stc
sub
pop
data16
je
repz
jecxz
mov
fstps
ss
inc
xlat
sub
sub
addr16
mov
jmp
ja
lods
movsb
adc
dec
nop
inc
or
inc
inc
shl
fld
out
les
icebp
add
xor
pusha
sbb
movsl
call
jo
aad
out
cli
adc
test
lods
je
sbb
movl
pop
idivl
cmc
cs
jb
cld
xchg
dec
ljmp
shll
cwtl
sbb
testl
and
cmp
push
subl
push
lret
pop
pop
dec
mov
rcl
inc
in
lock
das
and
mov
mov
push
and
push
cmp
jp
xchg
es
lods
sub
test
dec
dec
adc
sarl
or
cld
or
mov
enter
jo
fsubl
push
icebp
lahf
rorb
shrl
in
push
aam
dec
es
pop
ds
or
fstpl
clc
and
sbb
mov
mov
cmpsb
stos
xor
imul
lods
lods
xchg
add
push
jne
xchg
adc
in
dec
push
xchg
shll
add
mov
xchg
and
mov
aam
lds
mov
add
push
sub
mov
pop
or
int
xor
out
cld
xchg
out
jo
call
jno
pop
xchg
aad
ja
mov
stc
mov
push
or
call
sub
adc
mov
add
out
clc
insl
cmp
les
push
sbb
aad
pop
cmpl
push
out
mov
jae
sub
xchg
addr16
aam
mov
sbb
jnp
aaa
jae
icebp
icebp
mov
pusha
pushf
push
lcall
bound
xchg
dec
sub
fldl2e
adc
cltd
inc
ficompl
push
into
or
stos
pop
inc
js
jmp
call
imul
ljmp
mov
adc
pop
xor
pop
loopne
insl
inc
orps
arpl
push
or
adc
inc
xor
setno
aas
sbbb
les
dec
mov
mov
or
rcl
inc
mov
in
jae
and
pop
jecxz
fldt
cmp
daa
outsb
sbb
xchg
aaa
sbb
or
sahf
mov
int3
out
dec
push
or
movsl
xor
adc
scas
adc
jl
xor
jmp
movsb
cwtl
sbb
inc
inc
sbb
cmpsb
pop
xor
enter
daa
mov
xor
lahf
je
jno
and
loop
aas
dec
sarl
popl
movsl
repz
cs
pusha
adc
mov
inc
test
pop
into
mov
in
popa
test
imul
movsb
js
push
fcoml
jp
pop
push
imul
sub
outsb
xchg
pop
stc
adc
repz
mov
std
subb
sbb
sub
add
fsubs
and
jae
push
inc
or
sub
jae
pop
lock
add
mov
xor
mov
sbb
mov
xchg
test
lods
jg
mov
push
mov
in
adc
jg
mov
sbb
jmp
cmp
sarl
mov
xchg
test
push
dec
or
ss
imul
push
xor
sbb
das
fs
loope
add
adc
lods
jmp
jmp
addr16
lret
incl
fcoms
and
sti
mov
cltd
incb
sbb
gs
mov
iret
adc
fwait
mov
cmp
repz
jge
xchg
jp
add
jno
adc
mov
sub
lods
mov
cmpsb
xlat
cmp
xchg
outsl
jae,pn
inc
nop
sbb
bound
adc
les
sbb
aas
push
add
arpl
call
out
cs
pop
lcall
pushf
push
mov
sahf
pop
psubb
mov
and
xchg
jae
jb
dec
loopne
popa
pop
cli
je
pop
add
adc
idivb
and
std
cmpsb
sahf
jmp
mov
or
push
sahf
addl
and
lret
int
lret
mov
mov
loop
shrb
mov
push
cli
and
cmp
es
mov
add
dec
inc
clc
dec
cmpsl
xchg
adc
icebp
jl
xchg
cld
xor
mov
mov
ja
pop
mov
jo
mov
and
mov
sbb
leave
aam
fs
aam
adc
dec
jle
inc
inc
mov
pop
xor
cltd
cmpsb
ret
int
popa
sbb
shrd
stos
and
mov
mov
push
mov
test
in
js
js
xchg
cltd
imul
add
inc
xor
push
inc
adc
cmpsl
sub
lods
pop
in
ret
or
add
int3
ret
pop
xor
push
jle
pop
add
xor
jno
xchg
outsb
fidivl
jo
add
cmp
ja
test
in
stos
flds
lds
mov
sti
out
sbb
test
xlat
jns
mov
in
jmp
or
xchg
mov
cmp
pop
loope
or
bound
mov
and
mov
loop
xchg
jle
add
sbb
fisubl
jno
fists
sbb
xor
xlat
adc
mov
push
popf
sub
cmpsl
xchg
push
or
cwtl
and
inc
jns
pop
movsb
scas
imul
push
scas
shrb
adc
imul
pop
pop
iret
fs
sbb
jne
mov
jno
push
scas
xchg
addr16
int3
jae
push
insb
inc
sbb
cmpsb
add
bound
fisubs
lret
lds
test
add
arpl
std
leave
pushf
sahf
push
je
mov
or
jbe
and
jge
into
pusha
sbb
dec
aaa
fld1
aad
or
rolb
or
dec
test
xchg
push
cmc
aaa
pop
xor
outsb
jle
scas
out
inc
andl
stc
movsl
movsb
and
mov
in
testb
daa
xchg
cmp
movsb
in
push
mov
cmp
fildll
movsl
cli
scas
sbb
push
stos
lahf
jg
xor
mov
inc
test
setae
mov
pop
push
xchg
cmpl
pop
lods
push
popf
repnz
int3
fildll
push
cmp
sbb
sbb
adc
mov
outsb
dec
addb
ss
jbe
and
inc
push
inc
ss
fwait
dec
xchg
sub
addb
std
sahf
lcall
arpl
aaa
scas
xchg
sbb
ljmp
jbe,pt
pop
ss
jg
rol
lods
shlb
mov
xchg
cmpsl
adc
shlb
int
adc
sub
out
test
push
lret
add
lods
sti
or
cltd
jo
int
div
std
sbb
xor
aam
loop
pop
cld
stc
shll
fs
xchg
add
or
fimuls
data16
xor
repnz
ljmp
and
sub
pop
out
jp
lahf
xor
imul
int3
fwait
repz
gs
cmp
iret
pop
cmp
pop
sub
mov
adc
in
jmp
add
aad
mov
xchg
lea
jb
inc
data16
sbb
jecxz
inc
sub
and
push
lea
mov
outsb
fnsave
dec
insl
nop
adc
adc
icebp
pop
mov
addl
sbb
xor
dec
fmul
pop
je
sbb
idivb
or
dec
mov
cwtl
jnp
push
mov
push
xchg
int3
test
les
mov
sub
aam
filds
mov
and
rol
cwtl
sti
scas
es
out
insl
ljmp
cmpsl
xchg
sbb
push
cs
pop
mov
lds
in
mov
jle
and
jmp
sub
int
aam
iret
adc
mov
push
clc
lcall
ljmp
mov
stos
adc
sub
xchg
nop
cmp
inc
aaa
scas
add
or
xchg
inc
pop
sbb
repz
test
or
scas
cmc
sub
pop
out
test
ss
push
and
repnz
cmp
add
out
aas
cli
data16
push
fildll
xor
inc
ficoml
outsb
and
mov
or
in
or
jle
pop
xchg
mov
sub
dec
aas
imul
push
pop
sbb
mov
sub
or
jns
mov
roll
or
xchg
sub
and
out
mov
mov
dec
sbb
mov
test
pop
loope
pusha
rcr
add
jbe
lods
xchg
mov
xchg
adc
ja
es
pop
xchg
lahf
popf
push
xor
mov
dec
into
push
and
dec
fldt
inc
imul
adc
ret
adc
inc
iret
cmp
out
repz
inc
and
aad
inc
movsl
jp
or
pop
cmp
inc
cs
arpl
cmpsb
cmp
xchg
lods
mov
mov
fiadds
inc
pop
cmc
xor
mov
loopne
adc
jl
mov
scas
jbe
lahf
repnz
jge
pop
jp
fldlg2
shll
mov
or
or
fs
jne
hlt
lea
push
fsubs
xchg
xor
leave
mov
pop
and
mov
jge
push
movsb
scas
xchg
mov
pusha
xchg
enter
aam
fnsave
jb
xorb
add
or
mov
popf
sub
mov
sahf
mov
lahf
sahf
and
dec
test
icebp
mov
out
pop
scas
pop
jle
sarl
xchg
fcoml
clc
cs
push
test
sub
add
sub
or
pop
sti
rclb
jl
dec
jb
in
xchg
ja
sbb
pop
and
jge
push
inc
aad
int
xchg
or
movb
pop
out
into
loop
xor
iret
push
idivb
fsub
rcrb
sbb
pop
adc
lret
xorb
dec
int
mov
js
mov
nop
scas
adc
jmp
pop
fsub
jmp
mull
jno
pop
test
shrl
or
into
mov
xor
inc
mov
outsl
es
loop,pn
inc
pop
stc
mov
loope
mov
mov
dec
jnp
lods
mov
lahf
mov
les
xor
mov
call
or
icebp
loope
lahf
jle
pop
push
jno
adc
dec
imul
notb
add
or
out
sbb
out
cmc
sub
mov
adc
gs
das
cs
and
in
cmc
nop
shl
aaa
dec
ljmp
fldcw
sti
les
lret
pop
mov
xchg
les
xchg
in
bsf
xor
les
jns
pop
push
jg
inc
or
into
inc
sbb
inc
jb
jp
dec
dec
fcmovnbe
je
sub
xor
rol
std
hlt
mov
cwtl
ss
movzwl
mov
subl
dec
pop
lret
stos
dec
mov
xchg
outsl
cmp
jbe
das
mov
fldenv
fadds
and
or
iret
xor
rol
xor
jp
cmpsl
test
push
icebp
sub
cld
mov
mov
xor
cmp
mov
scas
mov
jl
sub
xor
lea
push
push
dec
xchg
fstl
push
push
ljmp
dec
lods
aaa
stos
inc
stos
add
sub
lea
iret
xchg
xlat
cmpsb
js
push
out
cpuid
int3
sub
sahf
fcoms
cltd
xlat
or
dec
adc
xor
test
push
sbb
lock
mov
sub
push
ficoms
mov
mov
lcall
lahf
sbb
xor
outsl
cmp
mov
pusha
mov
vpaddd
or
cmpsb
adc
insb
or
and
dec
and
mov
aas
hlt
mov
mov
mov
call
insb
dec
in
fs
sub
hlt
out
mov
invd
sbb
mov
cmpsb
imul
pushf
xor
test
jle
add
in
pop
pushf
pusha
insl
bound
xchg
cmp
jmp
test
fcoms
loop
in
jnp
lea
xchg
cli
and
jbe
insb
xor
imul
loopne
xchg
pop
adc
cwtl
iret
cltd
xchg
lock
enter
adc
add
inc
test
inc
or
cmpb
lods
cli
stc
ficompl
push
xchg
add
adc
add
pop
jecxz,pt
fisubs
out
add
sub
mov
repnz
pop
xchg
push
enter
loop
or
sbb
ret
or
shlb
cmpsl
ja
dec
arpl
inc
push
mov
jne
jo
pop
jl
lods
xor
and
ret
and
xor
popf
movsb
cmp
repnz
out
xor
nop
in
fs
daa
test
cmp
mov
push
pop
jl
pop
in
dec
push
sbb
movsl
or
shll
xor
les
xor
adc
lret
adcb
mov
cmp
add
fs
aaa
test
xor
mov
lds
outsb
mov
andl
rcrl
sbb
hlt
add
scas
or
or
push
dec
call
out
sub
daa
pop
insl
and
lcall
and
popa
sbb
adc
push
xchg
jge
mov
jg
fcompl
push
push
lret
mov
in
out
mov
sbb
cmp
mov
cld
add
dec
mov
roll
mov
test
cmc
mov
aam
fisttpl
hlt
loop
xchg
rol
cmp
repnz
add
sahf
cmp
out
ljmp
in
xchg
mov
dec
stc
cli
sti
xchg
cmpsb
pop
imul
loopne
mov
pop
and
add
adc
je
rep
sar
xchg
ret
aas
jne
lfs
xlat
es
subl
sub
mov
jle
jmp
lahf
subb
not
sub
xchg
nop
scas
imul
fldenv
gs
insb
jbe
sub
lea
mov
aas
aaa
cld
insb
lcall
clc
insl
pushf
pop
inc
mov
aad
je
clc
mov
inc
xchg
mov
inc
ss
aas
jno
fnstenv
bound
dec
nop
leave
je
xchg
jl
outsl
and
std
fwait
xchg
sahf
cwtl
icebp
jno
mov
mov
mov
push
repnz
lcall
lods
insb
daa
mov
adc
mov
mov
jg
jl
mov
sbb
push
out
sti
insl
mov
sbb
test
jp
add
fdivrp
mov
pop
mov
push
mov
sbbl
rcrb
cmp
aam
mov
mov
fnstsw
enter
loopne
ljmp
xor
sarl
lock
push
jns
push
inc
or
add
and
test
adc
adc
xrelease
pop
dec
popf
push
stos
test
pop
fildl
rorb
pop
arpl
scas
push
addl
add
xchg
les
xor
in
rclb
hlt
out
mov
sub
ja
nop
xchg
dec
lds
or
pop
mov
add
insb
mov
call
out
je
xor
mov
jns
mov
cmpw
out
pop
aaa
sub
push
rolb
in
mov
mov
adc
mov
out
push
xchg
jle
out
lock
aaa
stc
pusha
or
or
xchg
cs
add
sbb
pop
xchg
je
sbb
pop
xor
movsl
mov
popf
mov
stos
les
mov
fwait
and
shrb
subb
outsb
scas
jmp
frstor
iret
clc
lods
add
adc
repnz
inc
cmp
arpl
dec
jns
stos
pop
mov
push
sub
sbb
or
ss
pop
leave
lcall
imul
insl
dec
mov
vxorps
rolb
mov
xor
dec
hlt
push
test
xchg
jbe
icebp
ja
outsl
sbb
sbb
les
push
push
loop
loop
loopne
xchg
xchg
push
int3
xchg
mov
dec
rcrb
adc
sahf
aam
xor
jg
subl
cmpb
jp
movsb
les
inc
jle
repz
adc
in
stos
inc
gs
daa
test
cmp
fwait
jno
loop
jl
imul
ds
jns
xsha256
cmpsb
aad
iret
sub
lahf
faddl
push
add
test
xchg
xorb
adc
lcall
adc
js
ja
pop
jbe
xchg
push
outsl
adc
insb
movsl
jbe
fcomps
sub
dec
ja
and
adc
xor
int3
cmpb
pop
add
dec
pop
and
cwtl
mov
dec
outsl
mov
rcr
lods
sub
and
adc
sbb
cltd
sbb
test
pop
mov
jg
lock
mov
ret
mov
mov
adc
scas
ss
and
and
pop
xor
mul
ds
imul
test
mov
lds
push
and
into
jbe
hlt
cmc
push
ret
lret
jne
outsl
in
test
stc
clc
bound
add
cmp
push
mov
lods
test
xchg
out
xchg
lock
xchg
lods
stos
xor
pop
lea
ds
sti
inc
mov
decb
stos
mov
aad
inc
pop
inc
adc
fldt
js
adc
inc
xchg
repz
push
xchg
xchg
ss
cmp
push
xlat
gs
sub
pop
adc
push
or
adc
cs
test
jae
pushf
nop
mov
jo
test
enter
int3
xor
les
loopne
jnp
sahf
sub
dec
lret
call
jmp
std
pop
data16
adc
mov
xchg
fildl
test
into
inc
sbb
pop
inc
push
mov
adc
mov
sti
push
das
sarl
cmp
std
inc
pop
ret
cwtl
lods
andl
cmc
pushf
hlt
mov
imul
dec
mov
fmull
and
shl
loop
das
jl
movsl
mov
inc
xor
push
ret
inc
leave
add
insl
lahf
mov
dec
xor
cmpl
mov
fsubrs
cld
loopne
cmp
ja
add
sbb
cmp
in
mov
shrb
sub
ljmp
adc
jl
xlat
pop
es
icebp
jg
dec
int3
cltd
xchg
xchg
sti
jecxz
loope
shll
sahf
fldt
ss
out
push
jle
xchg
gs
pop
push
and
stc
punpcklbw
mov
cltd
inc
and
mov
dec
jle
dec
add
inc
test
fisubs
sbb
mov
cmp
lock
push
xchg
fwait
mov
jbe
and
mov
cmp
outsb
call
sbb
dec
mov
scas
xor
mov
les
or
ja
cmp
xor
inc
and
mov
or
call
and
mov
jo
out
push
mov
in
jns
mov
in
sub
pop
out
push
testb
push
pop
jp
in
sti
mov
test
mov
sahf
lea
iret
mov
xor
xchg
pusha
mov
loopne
xchg
add
push
xchg
aas
into
xorl
repnz
leave
xor
cmpsb
push
add
test
dec
insb
or
imul
sub
lods
mov
idivl
mov
sub
pop
repz
dec
inc
inc
or
inc
scas
clc
cld
or
js
rolb
outsl
mov
xchg
mov
sbbl
ret
pop
pushf
jae
fsubrp
inc
rol
and
jne
pop
repnz
leave
js
jp
mov
sub
lds
push
adc
or
aad
pop
or
jbe
add
or
mov
inc
or
mov
jo
filds
adc
cmp
inc
lret
inc
or
inc
mov
enter
daa
adcl
jno
xor
jbe
dec
cmp
sahf
in
push
shlb
push
repnz
sti
pop
rclb
inc
cmp
push
pop
jecxz
clc
jmp
cmp
js
mov
cmpsl
push
jae
loope
loopne
sub
fisubrs
xlat
xchg
shrl
bt
or
shl
or
into
sbb
pop
mov
test
or
push
dec
push
int
xlat
mov
aaa
cmp
dec
lcall
jecxz
repnz
pop
pop
sahf
cmc
repnz
test
bound
daa
or
mov
mov
sub
rcll
imul
xchg
fcomps
xor
movsb
adc
xor
dec
shrl
mov
lret
jg
into
pop
mov
cmc
sbb
wrmsr
xchg
lock
outsl
ret
mov
jae
scas
test
xor
push
mov
data16
jnp
lods
insb
add
mov
ret
lret
xor
push
cs
cmc
mov
mov
or
loopne
loopne
pop
arpl
xchg
jmp
shrl
loope
adc
imul
dec
pop
xor
pop
sub
cmp
xchg
sbb
mov
mov
dec
mov
es
aad
cmp
dec
pop
fmull
inc
mov
sbb
jg,pn
dec
xchg
xchg
jecxz
mov
cmp
xor
mov
add
pop
jno
pushf
scas
sbb
rorb
pop
ds
inc
mov
jle
aas
scas
push
cmp
int3
mov
out
je
bound
mov
std
jmp
sub
mov
or
xor
mov
adc
jmp
imul
pop
sub
mov
std
movsb
xor
xchg
push
es
enter
add
dec
sub
dec
fnstsw
scas
and
or
ss
lcall
mov
or
aas
ret
jmp
aaa
ret
fbstp
mov
sub
popf
clc
xchg
aam
fucomp
push
sbb
lods
js
and
mov
dec
xchg
lods
dec
or
cmp
movswl
cltd
jl
lods
test
in
lea
push
xor
imul
je
test
sbb
stc
iret
rcll
iret
add
cld
cli
add
push
out
pushl
sbb
mov
cwtl
mov
xchg
shrl
jl
mov
imul
pop
ja
sub
dec
stos
out
inc
mov
cmovne
lret
test
jne
cmpsl
adc
xor
mov
in
nop
cmp
out
in
ret
pusha
lods
or
out
loopw
jg
in
shlb
jae
jnp
std
sbb
movsb
imul
bound
fcomip
cmp
jmp
or
adc
mov
mov
popf
lock
lea
inc
mov
stos
shll
and
dec
insb
jae
imul
push
mov
shlb
iret
mov
inc
cmp
pop
sub
jge
push
clc
pop
arpl
in
inc
mov
mov
repz
ret
fidivl
mov
sbb
adc
pop
lret
popa
test
fcoms
vorps
mov
inc
mov
out
inc
hlt
jmp
mov
jbe
mov
and
aaa
xchg
xor
or
push
fiaddl
shlb
dec
mov
cmp
fs
add
dec
sub
jo
push
scas
dec
scas
in
cmpsb
xchg
mov
pop
pop
mov
fidivrl
inc
pushf
mov
cmpsb
sbb
dec
enter
daa
andb
shll
outsb
jno
dec
sbb
cmp
cmp
sub
into
movsl
sbb
sbb
or
test
add
push
sbb
push
sti
jecxz
pop
sbb
insl
js
test
pop
hlt
fwait
subl
mov
lcall
sub
popf
mov
test
adc
call
jbe
and
pop
sbb
push
insl
add
js
and
ret
push
fincstp
int
mov
sub
cmp
lcall
mov
sbb
sti
xchg
out
loopne
loopne
jo
and
mov
sbb
mov
aad
adc
push
bound
sbb
popf
cmp
rol
push
lret
roll
sub
in
mov
cmc
loopne
adc
in
jg
outsl
mov
into
sbb
xchg
mov
fldl
add
jae
pop
mov
dec
mov
je
cli
std
mov
xchg
cmp
inc
sub
movsb
and
aam
mov
cmc
loopne
sub
or
adc
out
out
adc
in
repz
push
sbb
shll
xlat
jecxz
dec
sub
test
sub
jne
popa
mov
mov
aas
inc
sbb
add
inc
flds
cmp
push
jle,pn
cltd
inc
or
xor
lea
aam
jmp
pop
mov
mov
imul
cmc
pop
loope
add
xor
or
jb
push
xor
sub
adc
rorb
int3
jnp
std
nop
mov
mov
ja
shrl
orl
add
push
scas
mov
lock
int3
das
cmp
sub
and
cltd
outsl
ret
arpl
cs
insl
xor
dec
sub
cmpsl
sbb
mov
xchg
daa
cld
ss
pop
mov
mov
add
mov
sub
fcmovbe
adc
xchg
sub
xor
mov
insl
ficoms
mov
nop
push
xchg
adc
dec
popa
cmpsb
pop
inc
lods
jecxz
call
out
sbb
and
jb
nopl
add
mov
cltd
mov
loope
cmp
sti
mov
push
pop
fmull
sbb
out
movsl
popf
xchg
jg
fnstcw
fistpl
xchg
fwait
push
xchg
xchg
push
dec
add
outsb
testl
or
mov
mov
mov
je
mov
mov
jp
ret
aas
pop
dec
sahf
push
addl
push
mov
sahf
adc
scas
ficoml
sbb
aam
xor
cmpl
xchg
in
inc
sti
andl
inc
out
jecxz
sub
pop
push
inc
loopew
add
scas
pop
mov
inc
mov
loope
insl
jnp
mulb
jle
insl
inc
in
es
pusha
fnstenv
fists
cltd
pop
xchg
cmpsl
push
mov
xchg
aad
xorb
inc
push
out
lret
xchg
popf
pop
push
mov
lock
push
cmpl
inc
repnz
fsubp
int3
imul
lea
ja
adc
adc
ret
cltd
pop
popa
fisubl
arpl
add
dec
enter
push
jle
test
jmp
xchg
pop
push
sbb
movsb
rcrl
cmp
xor
lds
faddp
xchg
call
repnz
sub
data16
hlt
ss
rclb
fdivs
aam
jge
push
sbb
imul
int3
push
pop
daa
dec
pop
ss
inc
add
test
or
scas
sub
out
cmp
shr
or
sub
cmpsb
pushf
jnp
in
pusha
add
enter
daa
cmpl
push
int3
xchg
xchg
cmp
fs
dec
mov
movsl
and
mov
mov
cltd
push
jl
repnz
call
gs
mov
lcall
xor
sbb
xchg
inc
loope
ret
sbb
adc
outsb
dec
ss
rol
adc
outsl
xor
add
dec
lock
or
inc
mov
mov
sub
mov
int
adc
ljmp
cmp
movsb
cmp
push
jg
inc
jnp
sahf
call
mov
js
adc
sahf
ss
pop
pop
cmp
mov
mov
and
movsb
lret
jnp
pushf
push
jnp
bound
into
pop
out
enter
inc
xor
adc
mov
stc
sbb
mov
les
push
lods
cmp
mov
popa
cli
xor
xor
cmpsb
cmp
add
loop
imul
dec
gs
mov
loopne
test
adc
sahf
std
adc
mov
repz
or
stos
sub
cmp
add
xlat
and
or
push
bound
xchg
mov
cmp
aad
push
push
dec
lds
and
sbbb
mov
jecxz
push
add
lahf
sbb
sub
fadd
push
cmpsl
loope
or
pushf
add
mov
pop
test
inc
inc
scas
jl
inc
mov
ret
les
pop
ret
into
nop
je
jle
shrl
lret
jg
aaa
decl
cwtl
fnsave
pop
mov
jne
mov
arpl
xchg
lret
pop
dec
mov
pop
mov
jns
mov
das
sbb
jp
add
jle
stos
into
adc
es
jno
insl
push
dec
and
cmpsl
xor
mov
pop
repz
popa
out
mov
loopne
movsb
and
in
imul
in
push
sub
int3
test
int
pop
mov
out
bound
mov
fstl
clc
cld
push
lahf
xchg
push
gs
cmp
in
mov
dec
cmp
jl
mov
push
mov
cmp
jge
cmpsl
add
lods
xchg
cltd
ljmp
mov
push
stc
int
cmp
fisubrl
test
mov
roll
push
minps
fwait
cmp
xchg
add
hlt
mov
or
sub
xchg
pop
jnp
mov
loope
mov
insb
cmp
dec
xchg
ljmp
movsb
addr16
mov
add
jne
loope
mov
cmp
out
lock
mov
jp
jns
addr16
sub
mov
out
dec
mov
scas
pushf
into
or
test
loopnew
sarb
sahf
add
or
lods
jnp
mov
jle
sub
dec
xchg
xor
sbb
fbstp
sti
lcall
adc
xchg
mov
or
push
mov
lcall
enter
ret
xchg
mov
shrl
mov
into
scas
jne
test
insb
jb
adc
ds
ret
out
cwtl
outsl
sub
adc
outsb
pop
inc
mov
in
or
jmp
jge
fcmovu
nop
call
sbb
or
pop
sub
and
shrb
daa
bnd
sbb
jo
cmpl
push
jbe
pop
fstpt
dec
les
cmp
inc
aaa
adc
inc
or
dec
mov
dec
mov
push
sub
mov
scas
or
sbb
int3
jp
cmp
leave
hlt
movsb
lock
iret
cmpsb
pop
les
inc
or
enter
daa
adcb
jno
ds
jl
icebp
sub
jb,pt
fbld
cmp
lahf
pop
mov
call
push
mov
xlat
xor
and
sbb
fdivrs
sub
pop
jb
push
push
mov
loope
imul
sub
push
adc
sahf
push
lods
leave
lcall
roll
int3
and
push
pop
adc
int
sbb
sub
mov
push
insb
add
fsub
add
sbb
xchg
sahf
faddp
movsb
test
dec
and
add
mov
icebp
mov
in
xor
and
mov
cmp
dec
lods
jge
loope
xchg
lret
xor
xor
mov
or
xor
jne
outsb
outsb
adc
mov
push
xchg
adc
stc
aam
xlat
fs
lea
mov
adc
mov
sbb
pop
fs
arpl
test
and
sub
sbb
arpl
inc
divb
rorb
imul
aad
repz
fbld
rolb
xlat
popa
cltd
insb
sub
pop
cs
leave
in
jp
jmp
mov
cs
movb
cmc
loop
dec
and
aad
jmp
loopne
mov
and
insb
pop
cltd
jecxz
push
shufps
outsb
lea
push
call
out
imul
mov
pushf
scas
or
fcmovnb
push
mov
inc
sub
mov
sub
jb
repnz
dec
sbb
add
cli
inc
adc
push
mov
std
ficoms
cwtl
cwtl
xchg
loope
icebp
outsl
lds
mov
fwait
sbb
inc
ja
mov
cmc
jecxz
inc
cs
lock
pop
pop
das
clc
jg
xchg
mov
mov
ss
popa
ret
adcl
push
dec
push
loopne
cmpsl
jg
addr16
xor
dec
cld
mov
adc
scas
mov
mov
push
fcmovne
sub
or
mov
mov
push
jecxz
aad
jnp
inc
clc
aaa
movsl
sbb
lods
call
stc
lods
mov
jb
out
fbstp
dec
push
mov
paddusb
xor
dec
lods
test
xchg
jae
mov
mov
cmp
rcll
loope
fwait
insb
jecxz
push
mov
cmp
movsb
push
cmp
push
lcall
pop
movsb
push
xor
dec
add
inc
rorl
test
pushf
pop
daa
inc
dec
ja
repz
test
inc
jg
adc
push
aam
add
fwait
dec
je
stc
jne
xchg
fdivs
iret
fucompp
bound
sahf
jns
in
aas
in
scas
mov
mov
nop
sbb
std
push
addr16
fistpll
inc
fidivs
aaa
cmc
int3
jnp
ss
sub
sbb
push
and
push
jae
dec
popa
rcll
cmp
imul
push
je
mov
mov
add
test
mov
xchg
cli
imul
scas
fadds
push
mov
pop
adc
mov
ret
in
pop
iret
test
inc
jb
jo
aas
and
inc
mov
add
push
inc
cmpsl
mov
fimull
filds
add
fidivrs
inc
lds
mov
lret
mov
iret
mov
scas
hlt
int3
jo
push
mov
pop
xchg
jge
adc
sbb
jp
aaa
rcrl
or
dec
mov
dec
std
outsb
cmc
push
or
pusha
mov
inc
orl
and
cmpsb
cmp
inc
movsb
jnp
sbb
dec
cltd
fisubl
cs
xchg
sbb
daa
jg
ljmp
outsl
ss
es
cmp
push
movsl
xor
pop
mov
and
mov
mov
inc
mov
aad
push
pop
mov
sub
mov
sub
mov
sub
sub
add
jns
xchg
sbb
cmp
aad
mov
push
pop
fdivp
int
movsb
xchg
sub
aas
and
addr16
iret
lcall
int
repz
sbb
sub
jnp
lds
mov
mov
mov
sub
mov
mov
pop
ss
mov
cld
cmp
fadds
pushf
lret
mov
lret
mov
push
or
movsl
or
and
cmc
xor
movsl
popa
outsl
aas
jecxz
loop
fstpt
mov
fs
push
data16
jnp
or
mov
dec
out
mov
inc
xor
rorb
dec
add
sti
mov
dec
cmp
push
cld
loopne
jp
pop
fbstp
adc
dec
punpckhwd
in
fistl
dec
sahf
xrelease
movsb
sbb
test
xor
mov
and
inc
aad
in
imul
popf
mov
mov
nop
rcl
repnz
addl
fldl2e
xorb
jb
cmp
int
psubsb
cmpsb
iret
data16
pop
in
adcb
adc
pushf
pop
mov
fucomi
stos
jo
lret
inc
mov
and
aas
sub
inc
dec
nop
inc
ljmp
out
notb
mov
push
mov
mov
out
lea
pop
in
lret
mov
iret
mov
test
pop
sub
lock
mov
fxch
repz
xor
sub
fs
sbb
leave
cmpsl
jle
mov
icebp
or
cld
mov
dec
mov
es
and
and
mov
rorb
in
mov
arpl
inc
mov
mov
stos
frstor
lea
sarb
test
popa
jmp
push
lods
and
dec
stos
mov
in
enter
addr16
out
cmp
add
cmp
cltd
pop
mov
dec
mov
pop
sti
dec
pop
fildll
xchg
inc
in
out
dec
out
pop
cmp
fwait
fwait
xor
push
push
fistpll
add
mov
inc
lds
out
xchg
mov
mov
dec
xchg
std
cltd
mov
dec
into
test
loop
popa
ja
xchg
ret
dec
ja
sbb
movsb
pop
or
pop
mov
cmpsl
dec
push
sub
mov
rcll
insb
frstor
xchg
xor
in
bound
and
mov
clc
or
rcrb
jp
cwtl
int
popa
mov
jp
or
dec
cmpl
stos
and
fildll
mov
jmp
movsl
fdivs
clc
das
push
aaa
clc
es
mov
push
inc
loopne
stos
popf
movsl
pop
and
mov
insb
pop
xor
imul
scas
cmp
movups
iret
mov
xor
fstps
xchg
arpl
jbe
mov
stc
outsl
push
es
fidivrl
clc
xor
sbb
push
pop
pop
xchg
jmp
sbb
sbb
mov
and
sub
lret
jmp
popa
push
icebp
push
lea
int3
sbb
mov
mov
or
or
adc
add
xor
push
lock
xor
mov
loope
and
das
jge
xor
movsb
test
cmpsb
and
lret
push
pop
mov
cmp
ret
xchg
jl
lods
cmp
subb
repz
push
cmc
xchg
repz
dec
sbb
pop
stos
mov
js
stc
test
lock
mov
adc
sub
aas
pop
sub
xchg
std
adc
push
push
inc
subb
sbb
xchg
xlat
add
enter
inc
popa
push
pop
sbb
stos
sub
ljmp
sbb
test
cmp
mov
add
movsb
jg
mov
testl
and
stos
cmp
mov
loope
negl
stos
lret
rol
inc
jnp
out
fldl
or
sub
xor
jae
push
ja
loop
popf
push
or
addr16
loop
out
or
out
fs
cli
leave
inc
imul
cs
cmp
inc
pop
sti
pusha
sub
gs
cmp
loopne
adc
adc
mov
mov
adc
repz
fisttps
xchg
sbb
dec
sbb
mov
cmp
sub
inc
mov
aam
ret
jmp
ficoms
cs
sahf
inc
aad
sbb
nop
stos
sarb
inc
adc
inc
les
or
ds
int3
lea
in
pushf
mov
xchg
pop
cwtl
ret
adc
lods
fistpl
or
insl
mov
inc
inc
repz
xor
gs
dec
pop
ja
je
lahf
sub
cwtl
lret
cmpsl
neg
jo
std
sub
dec
cwtl
push
adc
lea
ja
out
rorb
lret
and
daa
mov
or
lock
adc
mov
enter
dec
mov
dec
addr16
lahf
nop
jns
out
fldcw
call
or
ss
xor
mov
dec
mov
dec
or
nop
mov
cmpsb
test
rcrb
movsl
sub
push
adc
imul
clc
lods
or
jae
ljmp
xchg
test
out
movsl
xchg
xchg
movaps
inc
push
lcall
cltd
xchg
test
add
jns
jnp
pop
mov
test
and
mov
sbb
pop
ret
addr16
push
idivb
add
jo
xchg
icebp
test
or
mov
mov
frstor
mov
popf
or
dec
push
ljmp
mov
and
sub
mov
mov
push
bound
loop
in
push
mov
cmpsl
dec
add
or
sbb
fstl
jp
mov
loopne
lea
jnp
test
jle
sbb
in
xor
fisttps
add
jmp
add
adc
cli
out
setge
out
xor
stos
adc
fs
inc
insb
mov
scas
sahf
or
add
sbb
mov
ret
fstpl
pop
jnp
mov
push
inc
shlb
or
pop
enter
adc
icebp
mov
xchg
sbb
xor
mov
jne
mov
sub
add
add
cltd
push
push
jne
lods
leave
inc
in
das
hlt
fsts
push
inc
push
xchg
jbe
mov
jge
dec
data16
aaa
dec
fs
or
enter
jle
dec
hlt
xor
cld
dec
xchg
scas
movsl
js
and
mov
xchg
inc
fidivl
push
xor
enter
daa
jge
int3
cmp
xor
jl
or
cmp
mov
fistl
movsl
inc
nop
sub
or
cmc
lahf
mov
jle
enter
cmp
push
adc
jne
rorb
dec
pop
js
mov
pop
push
dec
mov
or
mov
sub
repz
das
loope
cmpb
aad
sub
add
scas
inc
and
sarb
int
arpl
gs
addr16
rcr
in
aaa
sbb
xchg
adc
mov
xchg
jg
jmp
imul
je
nop
imul
fdivrs
sbb
push
mov
cld
sar
es
pop
test
pop
shlb
stos
es
cmc
ret
dec
xchg
xor
push
popa
loop
xchg
stc
lds
fs
imul
sub
jp
mov
mov
mov
cli
cld
lods
jo
movsb
mov
cmp
push
insb
sti
sete
incb
test
pop
sbb
pop
ss
xor
and
adc
insb
cmp
aaa
xor
push
push
aad
lret
mov
aas
add
jmp
scas
push
cs
stc
ret
jne
nop
xchg
les
repnz
cmp
fstps
mov
jecxz
out
movb
lea
imul
fs
pop
dec
fisubs
addr16
pushf
mov
xchg
fisttpl
inc
pop
adc
cmp
insl
sbb
imul
dec
jle
xchg
je
test
shl
repz
sbb
gs
leave
das
mov
mov
popf
cwtl
dec
cmc
icebp
repz
xchg
fs
les
pushf
lock
test
mov
inc
mov
and
in
add
cs
lret
xor
insl
lock
loope
cmpsl
jl
scas
mov
mov
or
mov
into
fisubl
lds
loope
xor
sub
push
stc
mov
cltd
sub
xor
imul
push
or
lods
cli
adc
push
fimuls
sbb
shr
dec
lcall
jo
mov
cmc
jbe
aad
dec
test
mov
xchg
pop
rcrl
in
fwait
stc
push
rcrb
or
dec
mov
leave
pushl
mov
loope
jl
pop
xor
cmpsl
test
fwait
enter
sbb
popf
pop
mov
ja
pop
enter
pop
inc
inc
rorl
or
pop
inc
mov
std
dec
sbb
add
mov
mov
inc
bound
andl
pop
ret
arpl
sub
sub
out
mov
fnstcw
arpl
mov
push
xchg
jle
cmpsl
sbb
gs
inc
pusha
loopne
test
xchg
mov
cs
int3
loopne
jae
clc
and
mov
mov
out
push
mov
div
and
inc
fisubrs
clc
imul
add
push
mov
adc
cli
add
ret
sub
sub
inc
xchg
push
arpl
inc
ret
cli
cs
aad
lcall
das
es
adc
pop
in
mov
popa
push
xor
rcrb
sbb
enter
mov
or
cmp
mov
pop
aaa
push
sub
popa
add
push
int3
ljmp
push
mov
xchg
xor
push
dec
test
and
mov
cmp
scas
mov
loopne
cmpsb
sub
in
jecxz
or
hlt
daa
jl
push
cmp
pop
inc
jno
fnstenv
mov
mov
ds
and
and
jo
push
fwait
repz
push
fistpll
xor
inc
xchg
pop
add
addr16
sbb
pop
outsb
mov
push
cmp
and
mov
sub
stos
outsb
cmp
adc
or
imul
imul
jno
nop
mov
into
int
cltd
or
xchg
xchg
cltd
pop
in
lcall
and
nop
mov
sbb
lret
fistps
adc
addb
sbb
aaa
jo
mov
xchg
sub
ret
ds
cmp
xor
mov
jo
xchg
lea
mov
into
mov
jne
mov
xor
sbb
fsubrl
pop
stc
mov
or
roll
cmp
je
mov
jmp
or
das
movb
into
aaa
sar
ret
sbb
cmpsb
mov
imul
mov
cmp
in
adc
scas
fwait
adc
movsb
mov
xchg
sahf
mov
cmp
ljmp
mov
in
stos
sub
jmp
inc
dec
cs
jae
stos
xor
dec
mov
jmp
pushf
inc
jecxz
push
aam
inc
stos
pop
lea
bound
jecxz
or
adc
xchg
sbb
jl
aaa
pop
mov
mov
push
mov
mov
jb
cmpsl
push
dec
cmc
push
add
shll
pusha
nop
negb
xchg
jp
inc
cwtl
test
push
mov
cmc
adcl
xchg
mov
cmpsl
lock
mov
jge
lock
enter
cli
mov
mov
mov
add
lods
dec
or
mov
nop
cmc
idiv
cmp
mov
mov
lret
push
mov
in
add
add
sahf
sub
mov
mov
push
out
jne
fstl
or
clc
and
aas
ljmp
imul
sub
xchg
popf
jno
push
clc
pop
addps
add
cltd
std
xor
mov
gs
leave
dec
cmp
cmp
xchg
test
sbb
sahf
pop
shl
fnstsw
fwait
sub
mov
add
cld
xor
iret
pop
enter
push
or
push
divl
sbb
xchg
ljmp
mov
adc
and
ret
pop
or
inc
jle
mov
or
mov
lret
sti
out
dec
cmp
mov
in
jno
addl
add
or
mull
ljmp
out
xchg
mov
push
in
jle
sub
pusha
jnp
or
xchg
cltd
stos
mov
xchg
xchg
jl
jae
fimuls
cmpb
popf
add
fnstcw
std
call
cmp
push
xlat
sbb
pusha
icebp
or
mov
scas
fs
lret
push
iret
ss
iret
cs
dec
dec
lock
ljmp
mov
cmovbe
cmp
mov
add
jecxz
inc
mov
pop
xchg
xchg
imul
pop
adc
pop
fiadds
push
lds
jns
mov
sbb
mov
xor
sahf
hlt
clc
xchg
enter
add
fadds
sbb
icebp
aam
int
pop
or
push
add
rcrl
dec
mov
and
xor
mov
cmp
stos
inc
xor
pop
xchg
into
movsb
cmpsl
xor
test
js
scas
cli
mov
lret
enter
daa
jnp
sarl
ss
fdivrs
add
ds
xlat
movsl
dec
mov
je
repz
aas
push
outsb
outsl
es
stos
mov
xor
inc
push
ret
sub
pop
pop
lods
xor
push
ficoms
sub
filds
dec
pop
adc
adc
in
and
andb
sbb
ja
and
xchg
in
int
mov
sub
test
pop
arpl
sbb
in
out
push
pop
xchg
out
cmp
aam
inc
out
or
les
jg
push
lret
mov
push
jns
stos
xor
ss
or
sti
fdiv
pop
test
pushf
adc
leave
push
dec
shll
pop
mov
or
jno
cmp
push
into
mov
imul
sbb
fs
enter
and
out
pop
add
data16
out
ret
bound
xor
lock
insl
mov
dec
test
gs
xor
dec
push
bound
adc
xorl
imul
imul
sbb
jo
dec
xlat
pushf
or
sub
lea
jmp
lcall
repnz
xor
ljmp
inc
dec
iret
xlat
fld
pop
mov
mov
imul
inc
mov
push
call
bound
pop
mov
or
adc
xchg
fldt
or
dec
inc
inc
pop
scas
aas
cmpsl
pop
jo
inc
xchg
and
jecxz
je
mov
roll
sub
and
cwtl
aas
daa
inc
mov
adc
mov
jmp
dec
lret
dec
ror
jo
enter
arpl
pop
xor
loope
je
jp
mov
pop
and
repz
dec
aaa
insl
mov
sbb
cmpsl
jp
lods
mov
addr16
adc
mov
rolb
mov
add
jle
mov
push
sbb
fnstsw
nop
cwtl
clc
pop
testb
in
push
jle
inc
in
lods
rclb
out
into
push
out
push
shll
pop
movzwl
inc
add
adc
xchg
mov
push
mov
test
xchg
add
mov
push
pop
adc
xlat
fwait
push
or
push
add
sub
loop
cmp
or
cmpsb
xor
fstpl
mov
out
fdivrl
into
pmaxsw
cmp
inc
fiadds
xchg
mov
dec
cmp
jecxz
loop
xor
lock
out
sub
inc
bound
cmp
jns
and
outsl
je
adcl
shl
xor
sub
in
xor
cli
lea
std
add
mov
lds
push
jle
popf
ret
push
cli
pusha
push
daa
imul
fwait
mov
jmp
bound
sub
mov
inc
mov
mov
cmp
cmpsl
stos
imul
insb
insb
lret
fnstcw
and
cli
scas
out
push
push
mov
adc
nop
cltd
ret
push
pop
loop
pop
inc
test
xchg
rolb
ljmp
lret
sbb
fimull
aaa
cmp
pop
shrb
pop
inc
arpl
fisubs
repz
rclb
mov
outsb
loop
leave
cmpsl
iret
xchg
inc
insb
das
push
sub
sbb
jge
push
sbb
dec
aaa
or
push
add
pop
int3
rorb
push
jl
and
or
push
loop
or
movsb
xor
gs
adc
jmp
xor
in
in
mov
movsl
enter
daa
jp
cmp
jno
jg
jl
xchg
sub
ds
xchg
jns
push
ds
and
or
jecxz
push
inc
pop
int
push
xor
jne
dec
xor
insl
push
pop
push
test
js
mov
in
xor
mov
sub
mov
pop
outsb
add
ret
cs
rorb
out
roll
rclb
dec
add
pop
clc
and
mov
xchg
sub
fcomps
xchg
sub
push
jbe
fsub
or
sbb
sbb
push
outsl
xchg
cmpb
lret
sbb
mov
pop
pusha
adc
cmc
ss
ret
cmp
stos
cmp
negl
jecxz
mov
js
mov
dec
push
push
rol
cmc
sbb
xlat
outsl
lcall
stc
push
cli
sbb
sub
pop
add
data16
dec
lods
mov
ja
popa
and
cli
xchg
adc
xor
push
adc
jle
sti
sbb
push
in
jae
gs
loopnew
cmp
adc
xor
mov
adcl
sbb
mov
jno
xlat
fldt
dec
mov
cmp
jmp
mov
jns,pn
sbb
nop
pop
mov
jo
pop
out
fscale
adc
jecxz
adc
shrb
call
loope
push
pop
imul
pushf
mov
mov
pop
stc
mov
dec
inc
pop
jb
aas
inc
fdivs
jb
mov
mov
jb
aam
dec
mul
movsl
stc
std
enter
cli
add
mov
and
mov
inc
addl
xor
fbstp
mov
lock
push
mov
and
jne
ret
fstpt
pop
insl
movsl
fstpt
add
stc
cmpsl
jns
add
icebp
ds
mov
test
test
fsts
inc
pop
and
shrb
repnz
pop
pop
push
mov
in
push
jne
sub
gs
dec
clc
cltd
ret
or
ljmp
and
inc
fsubr
xor
push
scas
stc
movhps
and
xchg
or
mov
imul
dec
or
xchg
stos
jmp
jno
int
mov
popa
jb
xchg
imul
insb
dec
add
inc
dec
add
xor
push
xchg
imul
xchg
mov
mov
mov
sub
ss
dec
inc
or
adc
xor
mov
mov
mov
out
or
or
jl
in
lret
lahf
test
stos
sub
fbld
bound
mov
xchg
push
stos
mov
je
jle
push
jae
jp
or
cltd
jno
or
icebp
xchg
aas
and
cs
sub
jne
push
push
push
push
popf
dec
ja
mov
jnp
xor
inc
addr16
imul
scas
sub
nop
push
pop
inc
inc
adc
xlat
inc
ret
xchg
pop
sbb
mov
and
cltd
loopne
inc
int3
adc
push
mov
enter
popf
cwtl
sbb
add
xor
test
test
shrb
adc
pop
ror
push
arpl
lcall
push
iret
scas
jge
outsl
test
aaa
dec
lahf
leave
or
rolb
packssdw
int3
stos
loop
dec
xchg
jns
push
pop
int3
jno
dec
pop
jb
push
cld
xor
roll
push
cmp
std
add
mov
mov
in
cwtl
cmp
enter
daa
jns
cmpb
sbb
jl
ret
add
orb
addr16
dec
movsl
pop
inc
xor
js
mov
adc
in
adc
push
adc
push
in
adc
sahf
js
mov
sub
loope
jmp
sub
outsb
xlat
sub
icebp
js
iret
jle
rcrb
jmp
ficompl
pop
rcrb
add
mov
mov
and
int
xchg
test
add
pop
jo
dec
imul
fcoml
or
push
std
aad
movsl
jge
adc
mov
rorb
mov
addr16
mov
push
adc
jno,pt
out
cmp
add
sbb
lret
clc
rcll
xchg
ss
aaa
sahf
dec
cmc
shll
pop
push
push
loop
jno
stc
aad
or
outsb
add
and
data16
inc
mov
pop
stos
es
ljmp
add
repz
fisttps
lret
ljmp
jle
jo
jle
fistpl
cmp
adc
in
imul
push
lods
xchg
out
repz
out
xlat
sbb
ljmp
inc
test
jmp
xchg
lret
ljmp
repnz
cli
dec
mov
xor
les
push
dec
out
enter
enter
fcmovnb
pusha
mov
adc
cmp
pushf
pop
ljmp
pushf
pop
incl
enter
icebp
pop
aas
in
lods
jb
adc
pop
or
je
adc
mulb
xchg
std
outsl
xchg
scas
cwtl
mov
cmp
dec
bound
sbb
std
int
dec
scas
cmp
mov
and
adc
adc
mov
and
push
and
dec
inc
ret
push
icebp
es
jle
mov
rorb
movsb
pop
cmpsl
js
das
mov
adc
push
push
mov
loopne
mov
lds
inc
and
sarb
clc
sub
sbb
push
cmp
jo
mov
clc
aam
lret
das
stos
ljmp
and
cmpsb
testb
gs
xchg
ret
adc
push
mov
sub
jne
mov
xchg
jmp
test
fldl
jno
hlt
test
ret
popa
xchg
dec
mov
pop
addr16
fwait
mov
fistpl
and
dec
add
lret
xchg
fidivl
loopne
sub
pop
aad
xor
lods
xchg
xlat
push
lods
mov
xchg
inc
mov
inc
mov
rorb
and
loope
or
out
mov
inc
out
test
or
push
out
call
sbb
jge
in
jne
subl
mov
sub
ficoml
cmpsb
fsubs
loop
jb
imul
fs
lds
xor
and
orl
rcr
sub
jmp
clc
inc
xchg
jae
daa
out
push
leave
mov
jbe
sarl
mov
or
and
ljmp
and
mov
scas
lea
sbb
pop
sbb
pusha
inc
stos
iret
insb
and
ret
fstpl
sub
mov
outsb
rolb
stos
push
push
and
fidivl
out
xchg
outsb
in
sbb
pop
rcrl
lret
and
lds
ret
xchg
mov
adc
push
leave
xchg
lcall
lret
jb
jbe
clc
pop
jge
jb
sbb
pop
pop
aaa
or
or
mov
int3
xchg
or
inc
push
inc
maxps
ret
sbb
xor
cmp
movsb
dec
mov
inc
xor
cmp
enter
daa
js
lea
iret
xlat
std
jno
mov
jl
ret
cmp
pop
mov
mov
jns
arpl
popa
lahf
push
gs
test
or
rdpmc
cmpsl
pop
mov
dec
adcl
or
aad
xorb
sub
das
outsb
adc
shlb
in
movsb
mov
sbbb
stos
add
sbb
test
jo
outsb
int
push
aad
or
pop
loopne
dec
lcall
dec
fdivrl
push
sbb
dec
mov
not
lock
dec
sub
cmpb
jbe
mov
cmp
mov
cli
adc
call
ss
es
fsubs
call
lret
sub
jmp
aaa
mov
hlt
or
lcall
test
gs
outsl
pop
inc
in
test
mov
mov
daa
fs
lret
jbe
add
or
lods
pop
jns
mov
push
out
les
xor
push
inc
cmp
adc
sti
jp
jno
xor
ss
mov
pop
mov
mov
imul
fisubl
sbb
and
pop
jnp
sub
adc
in
in
push
push
aad
ja
imulb
aas
or
aad
orps
sbb
das
inc
xorl
les
jmp
das
das
in
push
inc
sbb
jle
sbb
fcomip
jmp
adc
xchg
negb
pusha
add
repnz
xchg
imul
fst
jb
popf
jo
rcll
inc
je
mov
push
imulb
aad
push
or
cwtl
jo
mov
mov
and
jmp
mov
push
lret
mov
sub
mov
or
lock
pop
das
lock
aaa
mov
mov
stc
out
es
xlat
int
jae
stos
dec
test
cmpsl
ja
sbb
in
sbb
mov
sbb
in
out
andb
call
icebp
sub
jo
mov
imul
clc
movhps
ljmp
sub
adc
stos
adc
xor
fs
paddq
sahf
cltd
fstps
mov
jno
push
dec
fsubrs
cltd
test
cmp
pop
mov
jae
dec
xchg
dec
pop
adc
popa
fwait
in
lret
push
enter
lock
mov
decl
cltd
xor
js
or
inc
xchg
xor
and
fwait
mov
adc
mov
incl
ja
popa
repnz
sbb
addb
rorb
jo
mov
scas
dec
mov
or
cmp
mov
fdivs
fldcw
jns
and
adc
mov
jp
sub
aad
lods
xlat
inc
jb
adc
mov
lcall
mov
in
cld
ret
mov
test
jmp
ret
xor
cwtl
sbb
cmp
fistl
stc
add
and
and
mov
scas
lock
lods
push
jmp
fcoms
cmp
cmpsb
iret
lret
outsl
insl
ret
pop
pop
xchg
outsl
arpl
mov
nop
push
lahf
jge
fisubl
or
lds
sbb
loope
pop
shlb
cli
lds
jne
mov
addr16
or
dec
hlt
and
rcll
adc
mov
mov
into
test
aaa
leave
aam
or
push
add
or
dec
jne
inc
push
and
into
lds
test
scas
fists
and
cmp
cmc
test
std
leave
cmpsb
mov
jo
enter
daa
ja
push
cmp
dec
test
fadds
addr16
sub
lods
pop
cmp
scas
in
scas
lahf
outsl
lods
push
push
mov
xlat
notl
repz
pop
pop
in
js
mov
push
je
loope
popf
test
dec
add
or
cmp
push
ljmp
mov
nop
sbb
push
sub
daa
sub
jae
lcall
or
pop
pop
cmc
loope
mov
cmp
xchg
inc
fsub
cmp
cld
pop
lcall
mov
in
orb
and
pop
add
mov
mov
in
adc
cmc
ss
ds
cmp
fcoml
negl
inc
test
sbbb
pop
movsl
cmpsl
or
adc
cmc
insl
mov
aad
sbb
repnz
loop
cwtl
dec
stc
inc
repnz
jb
add
inc
pushf
lods
inc
jg
mov
and
push
and
xor
sbb
or
push
stc
mov
loopne
outsl
sbb
inc
xchg
adc
popa
shrb
les
adc
leave
mov
push
notb
xor
int3
xlat
cwtl
test
lea
shrl
mov
es
shll
jnp
loopne
xchg
addr16
fldenv
push
cmp
mov
mov
call
pop
in
pop
jge
mov
pushf
mov
cli
and
jnp
inc
cmc
ret
arpl
sub
jb
pop
and
dec
shll
mov
shl
lods
iret
cmp
popa
or
sub
and
mov
pushf
addl
sub
std
mov
pop
nop
mov
sub
das
iret
outsb
les
xchg
fnstenv
sbb
mov
mov
ja
jl
jp
pop
sub
dec
icebp
jle
cmpsl
jbe
mov
icebp
ret
jnp
cld
movups
mov
ds
cmp
out
fisubl
sti
add
pop
jg
call
sub
mov
mov
xchg
pushf
push
mov
mov
dec
lahf
into
xchg
enter
mov
add
stos
add
add
pop
out
cmc
xchg
add
sub
notb
xor
add
jno
test
jb
xchg
dec
aas
lret
cmp
xchg
cltd
jno
cmpsb
lcall
adc
sub
add
xchg
sarb
and
xchg
inc
pop
mov
xchg
jne
mov
mov
mov
and
inc
into
shl
ror
adc
outsl
out
jne
jno
mov
dec
push
out
cmpsb
mov
bound
imul
stc
orl
cmp
loop
mov
imul
mov
fnstcw
mov
fidivrs
cmp
addr16
xor
pusha
subb
data16
or
mov
outsb
sub
push
lret
pop
lret
popf
les
xchg
push
cmp
mov
and
ret
outsb
imul
add
xor
iret
sub
mov
jne
pop
mov
lods
loopne
push
add
cmp
or
mov
adc
cs
mov
xchg
sbb
pop
sbb
inc
pop
fidivs
sbb
lds
and
mov
dec
stos
repnz
cmc
push
outsl
sbb
mov
iret
cmpsb
jg
xchg
and
mov
int
aam
movsb
int3
insb
filds
push
or
xor
jns
dec
scas
mov
and
cmp
data16
pushf
or
dec
popa
push
enter
daa
jbe
les
xor
jp
jl
aas
pop
cmp
loope
movsl
jno
cmpsl
and
and
out
test
mov
add
out
insb
adc
pop
aam
call
fwait
mul
scas
lods
inc
sub
jp
sub
fsubrs
adc
sub
inc
bound
add
fistps
lods
fmul
add
sub
and
push
test
jbe
inc
int
lea
jbe
push
pop
fiadds
push
lcall
fcmovu
xchg
fwait
insl
sbb
sub
sahf
cmp
aad
cmp
mov
jg
cmpsl
popf
mov
jle
mov
inc
mov
testb
fisttpl
fcoms
repnz
add
rcrl
iret
mov
testb
add
into
loopne
xor
bnd
xor
outsl
push
cmpsb
daa
loop
stc
sar
mov
add
into
lods
daa
imul
out
add
cli
popa
and
test
or
js
xor
xchg
sub
pop
notb
adc
adc
repz
dec
lea
pop
repnz
xchg
xchg
xlat
xlat
pop
repnz
mov
mov
sub
jmp
cs
xchg
nop
xorl
inc
test
cmp
jecxz
pop
pop
push
inc
in
lea
call
fstl
pop
xor
adc
mov
pushf
pop
mov
fistl
stc
add
jl
xchg
inc
lret
out
aas
ret
jb
dec
lret
adc
rcll
jle
div
sbb
out
sub
mov
mov
dec
bound
mov
stc
adcl
das
scas
and
mov
dec
popf
stos
and
ret
sbb
pop
and
mov
inc
shrd
pusha
cmpsl
jne
idivb
lcall
mov
popa
imul
add
shl
mov
cmpsl
aam
sbb
push
addl
xchg
pop
popf
cmp
sub
popa
mov
sar
icebp
pop
imul
mov
stos
inc
push
sbb
inc
add
leave
mov
mov
sti
xor
cmpsb
dec
sahf
test
fildll
cmp
vsubsd
xor
inc
pop
out
push
push
lahf
addb
ror
decl
inc
adc
xor
movsb
cltd
xchg
les
mov
outsl
cmpb
push
es
fs
add
scas
inc
gs
or
add
dec
push
mov
mov
xlat
in
test
bound
push
insb
jns
push
in
in
insl
cmpsl
sbb
cmc
out
aad
sub
lret
imul
aad
fidivrs
dec
jno
lock
and
arpl
mov
push
in
or
pusha
sbb
cmp
jmp
pop
pop
adc
ss
push
adc
push
popf
jmp
jge
mov
iret
push
ja
jg
test
cmp
mov
iret
in
imul
sub
push
jns
ret
adc
or
iret
mov
in
xor
mov
inc
loopne
sbb
mov
inc
fdivs
or
xor
inc
popf
bound
fimull
xchg
push
sbb
adc
pop
cs
adc
lds
jmp
mov
or
sbb
push
mov
sub
jge
rcrb
inc
cld
adc
inc
sbb
pop
rcrb
dec
xor
push
xchg
push
jmp
scas
xor
aam
sub
sbb
jl
movsb
jmp
jle
cmpsb
ror
in
xor
outsl
enter
daa
jne
int
push
adc
jl
mov
xchg
ds
and
in
imul
lcall
insb
mov
dec
loop
js
adc
roll
gs
loope
fbld
sub
xlat
inc
outsb
out
cs
rolb
cmp
adc
adc
jecxz
cmp
inc
scas
push
and
cmp
push
jns
xchg
int
bound
icebp
inc
addb
pushf
icebp
lcall
xchg
cmp
mov
incl
aas
clc
sub
divb
mov
cwtl
xchg
mov
dec
mov
mov
scas
orl
cmp
push
lock
notl
js
lret
jo
mov
xchg
mov
or
into
ret
push
cmc
sti
mov
and
loop
ds
mov
mull
pop
add
pop
xchg
add
adc
out
push
cli
xchg
fnsave
pop
iret
dec
cmp
stos
xchg
sti
xchg
push
gs
pop
adc
scas
mov
adc
lock
repz
in
pop
xchg
repz
sbb
shlb
xlat
push
xchg
dec
sub
inc
mov
xchg
test
jmp
mov
or
pushf
dec
jnp
pop
addr16
cmp
inc
mov
das
push
in
jecxz
push
scas
pop
not
rcll
int
out
sahf
add
pop
dec
in
jecxz
nop
adc
jle
pushf
or
cmp
sub
inc
add
inc
out
adc
popa
subl
or
mov
divb
fimull
or
xorl
ss
dec
dec
dec
and
mov
lcall
sbbl
xchg
mov
das
jmp
dec
xorb
sub
mov
out
add
mov
jno
clc
cld
or
adc
mov
cld
popf
mov
mov
xchg
sub
or
push
insl
dec
mov
mov
push
inc
repnz
sub
clc
shrb
inc
je
ljmp
les
add
out
and
cmp
push
cmc
push
bound
icebp
sbb
add
xor
cltd
jle
dec
test
mov
mov
jp
outsb
dec
or
adc
pushf
cmp
sbb
mov
rcll
pop
adc
add
mov
push
add
int
sti
ljmp
rcrb
sub
push
or
cld
xor
popa
adc
mov
dec
mov
pop
xor
dec
cmc
adc
inc
cld
das
or
push
repz
nop
lret
dec
xor
or
mov
sti
dec
fistpll
call
mov
push
inc
out
mov
sub
scas
cmp
jo,pn
scas
lods
imul
xchg
xor
fists
jle
pusha
add
popf
daa
in
mov
int3
xchg
xchg
pop
jecxz
jmp
and
inc
jae
xchg
lahf
push
aad
adc
out
sahf
mov
stos
sbb
and
mov
imul
push
shlb
iret
call
lods
add
sub
insl
inc
jmp
enter
jmp
fistpl
mov
inc
sbb
fidivrl
or
pop
adc
int3
mov
jns
add
inc
adc
shl
pop
mov
pusha
pop
loop
jno
inc
hlt
add
test
push
and
add
incl
jo
push
add
adc
add
loopne
int3
inc
add
dec
ret
push
into
mov
cld
jo
das
push
scas
jl
hlt
and
movsl
popf
cmpsb
inc
sbbb
in
push
daa
je
pusha
cmp
shl
jl
or
cmp
cmp
ds
ret
jg
out
and
cmp
xor
pop
push
aaa
repz
movsl
aam
pop
cmp
jno
pop
mov
enter
mov
sub
push
inc
sub
lcall
xor
jle
loop
in
and
or
sbb
cs
mov
or
int
push
pop
sub
pop
fdivl
fwait
push
orb
call
adc
sahf
add
test
adc
jg
dec
shll
add
mov
lahf
ficoms
cmp
jg
sub
mov
or
sbb
roll
mov
not
into
cmpsb
in
cmc
ret
xor
mov
sbb
hlt
pop
hlt
stc
push
sbb
mov
mov
lods
cmc
call
or
push
push
mov
filds
xor
xchg
enter
fdivrp
shll
mov
push
insb
pop
xor
adc
dec
and
imul
rorl
xor
cmp
dec
subl
into
clc
mov
add
jmp
jb
cs
or
aad
sub
nop
cmp
add
cwtl
mov
rcr
inc
dec
lock
jecxz
xchg
pop
pop
sbb
call
fcmovne
pop
xchg
jnp
adc
movsl
pushf
mov
fcmovu
hlt
call
rolb
stos
inc
inc
add
shrb
stos
mov
shrl
or
js
pop
aas
shll
or
add
cmp
jge
mov
das
insb
cltd
iret
mov
mov
lcall
jb
es
addl
mov
dec
jl
cld
nop
ret
lock
cmpsl
adc
and
int3
cmp
rcrb
dec
aam
adc
mov
movsl
mov
aam
fisttpll
popa
clc
sti
scas
cwtl
xchg
test
mov
popa
call
imul
aam
xchg
aad
xor
movmskps
fiaddl
hlt
iret
popa
cltd
mov
lret
xor
scas
xchg
sbb
test
bound
mov
mov
fwait
mov
lock
call
xchg
fidivl
jg
xor
stos
jns
xor
jb
xchg
bound
mov
pushf
cwtl
mov
jmp
lds
js
dec
call
popf
jge
xchg
loopne
mov
test
shll
inc
mov
and
sbb
cmp
dec
out
add
imul
addr16
jg
loope
mov
cmp
lods
jle
xorl
push
in
neg
ret
bound
jmp
out
sub
jae
pushf
jg
cwtl
jle
popf
cmp
jnp
sub
or
pop
icebp
stos
mov
cmp
push
imul
in
push
pop
sarl
popf
jge
inc
shrl
ret
inc
pop
arpl
inc
idivb
lahf
arpl
xor
or
sub
pusha
inc
fwait
push
cmp
out
divb
sbb
nop
rcrb
ss
fildll
mov
mov
mov
pop
leave
call
xchg
add
xor
jge
fistpl
mov
outsl
add
add
xchg
pusha
int3
sub
adc
push
mov
mov
clc
mov
in
scas
pop
cmp
cmp
xchg
movsb
lcall
push
inc
std
cmpsb
scas
or
enter
daa
jae
insl
cmp
adc
jno
mov
jl
xor
lcall
movsl
xchg
cmp
jmp
in
push
push
sahf
and
add
pop
xor
js
push
pop
nop
js
dec
push
push
dec
pusha
loope
mov
sub
cli
sbb
outsb
mov
push
adc
mov
jmp
loope
push
mov
mov
pop
pop
push
push
jg
dec
cmpsl
lea
pop
pop
push
pop
lcall
xchg
mov
mov
test
or
jg
mov
popf
mov
xorb
mov
or
inc
fmul
ffree
notl
cmp
fiadds
imul
xchg
inc
into
mov
cmc
mov
outsl
mov
push
loop
push
adc
pop
xor
test
inc
aad
pop
mov
lods
fdivrl
mov
lret
and
push
ret
cli
dec
jecxz
or
cmp
mov
loope
les
out
cmpsb
loopne
lret
push
fists
sbb
push
imul
sub
cmp
push
xchg
jns
loop
int
cwtl
cmp
mov
sub
ja
pop
mov
mov
cs
test
nop
adc
xor
testl
cli
fnstcw
push
sti
addr16
jp
dec
pop
mov
lea
repz
pop
dec
lahf
inc
adc
jbe
pushf
pop
hlt
rcr
and
roll
push
inc
sbb
pop
aas
lahf
mov
jb
popa
dec
dec
and
hlt
je
push
lcall
mov
std
pop
lods
mov
mov
pop
repnz
jg
andl
lret
call
test
mov
mov
das
dec
pop
inc
mov
insl
shlb
inc
xor
ret
les
es
xchg
insl
testb
dec
frstor
cmpsl
jb
fdivrl
pop
outsl
cli
cld
mov
sbb
mov
or
js
sti
std
and
outsl
mov
loopne
out
inc
mov
fnstsw
push
lret
fnsave
int3
clc
mov
xchg
les
mov
lods
sub
lock
mov
mov
xchg
sbb
ljmp
fcmovbe
add
mov
out
test
or
xchg
pop
or
lcall
roll
and
pop
imul
ficompl
testl
stos
add
dec
jmp
insb
xor
jge
or
and
xchg
mov
aad
stos
pusha
xchg
mov
cmpsb
xor
pop
dec
fcmovnb
pop
inc
sub
mov
mov
movsb
iret
pop
dec
sti
xor
xor
mov
jmp
out
and
dec
imul
pop
mov
out
les
push
call
rorb
std
jp
xchg
mov
inc
gs
cmp
xchg
fsub
stos
lea
out
jmp
cld
lods
xchg
add
test
js
mov
jae
out
push
pop
jno
popf
pusha
push
test
gs
fs
add
shrl
add
dec
in
fistps
imul
inc
adc
xor
imul
inc
add
arpl
push
or
lret
push
out
push
sbb
jp
mov
mov
sbb
lea
mov
test
xor
repnz
jge
leave
pop
pop
xor
fwait
push
cmp
and
jbe
jae
jge
and
jne
push
aaa
test
or
push
inc
add
jno
int3
sbb
dec
mov
movsb
cmp
in
inc
scas
cmp
pop
and
jle
cmp
xchg
out
mov
frstor
jmp
std
dec
daa
jb
jecxz
add
dec
jl
sub
cmp
cmp
pop
jb
movsl
lea
lcall
dec
mov
test
int
pop
xor
addb
in
aam
stc
pop
in
push
inc
push
loope
push
shrl
js
sub
fildll
rcrb
int3
outsl
adcb
ficomps
mov
push
add
cmp
and
push
cmc
push
subb
push
stos
stos
sub
sysret
fidivl
das
rorb
fdivrl
outsb
and
out
ficompl
push
shll
jg
std
pusha
mov
pop
and
dec
push
adc
imul
ja
xchg
xorl
lret
sub
jne
add
or
stc
jecxz
insb
loope
cmc
push
jge
xor
push
loop
mov
stc
pop
sub
or
rorb
lods
ret
clc
sbb
out
mov
cli
sub
mov
cmp
mov
sti
xchg
mov
jne
scas
test
loopne
push
movsb
pop
jb
mov
imul
repz
xchg
cmp
fstpl
cmpl
rorl
mov
es
jmp
es
aad
adc
out
add
dec
push
or
mul
fnstenv
aas
or
mov
jo
bound
jae
pusha
cld
cltd
pop
cld
jbe
adc
sbb
fistl
and
js
inc
cwtl
lea
inc
aaa
fwait
or
ds
inc
jb
and
shlb
not
dec
aaa
pop
idiv
iret
in
add
cwtl
rcrb
std
mov
jp
cmp
hlt
loopne
push
imul
and
adc
sub
or
and
je
rclb
ret
push
iret
inc
or
out
fldl
inc
cmpsl
jno
add
testb
mov
in
mov
and
add
hlt
pop
sbb
outsb
rolb
in
push
mov
aam
pop
out
mov
pop
ss
repz
popf
push
movsl
clc
jno
cmpsb
xchg
add
sub
pusha
jnp
push
mov
xchg
adc
dec
xchg
dec
pop
push
xchg
into
add
cmpsb
cmpsb
cltd
and
pop
mov
orl
lahf
sbb
cmp
or
xchg
rcrl
add
fwait
inc
jg
lcall
add
cltd
sar
dec
lds
and
push
xor
xchg
scas
xchg
add
mov
cwtl
lret
lahf
cmp
push
ja
fwait
mov
inc
shl
or
adc
adc
xor
pop
shll
inc
pop
bound
jns
jb
in
dec
or
lret
sti
mov
or
mov
jmp
dec
popa
sub
mov
jle
mov
sub
filds
fwait
leave
xchg
xlat
sub
jmp
test
ficoml
push
fsubs
popf
xchg
jp
jae
xchg
stos
je
xor
cld
inc
insl
insb
mov
imul
andnps
and
ret
pop
pop
rorl
andb
and
nop
rorb
push
sbb
inc
cltd
pop
pop
ficoml
cmc
xchg
iret
iret
es
pop
imul
out
fisubs
pop
jne
inc
enter
mov
add
push
inc
hlt
out
in
hlt
pop
insb
jbe
leave
xor
sbb
xchg
inc
aaa
inc
aad
or
fistpl
int3
add
dec
bsr
xor
inc
mov
sbb
andb
pop
imul
adc
mov
cmpsb
int3
arpl
enter
daa
jno
mov
xor
sti
jno
fidivrs
jl
pop
cmp
movsb
jg,pt
jmp
and
mov
push
lods
jno
test
cwtl
movsb
fnsave
xchg
out
sbb
mov
fnstsw
and
push
in
mov
sub
leave
push
sub
lods
mov
pop
adc
shlb
ss
cmp
fdivrl
mov
cvtpi2ps
xor
mov
jne
fldt
jmp
loop
notb
inc
fsubr
hlt
ficompl
push
mov
sahf
imul
fldl
loope
stos
call
push
mov
or
mov
mov
dec
lahf
adc
xor
and
push
mov
cld
notl
mov
lret
arpl
or
push
mov
shlb
dec
xor
clc
inc
outsl
jno
xchg
loop
in
dec
stc
lea
iret
sbb
add
jo
or
push
jg
xor
sub
push
sub
xor
mov
xor
daa
shlb
cmpb
push
out
imul
mov
addr16
das
mov
xchg
pushl
sahf
cmp
xchg
out
sub
jl
mov
inc
cmpsl
je
add
leave
cs
lea
mov
push
test
mov
xchg
inc
or
mov
les
push
jecxz
out
mov
lea
dec
call
pop
push
ret
pop
scas
add
adc
imul
mov
enter
cmp
fucomp
push
jb
sbb
dec
adc
je
mov
inc
idivb
pop
loop
cmpsl
sub
cwtl
lea
mov
sub
adcl
add
mov
push
jmp
les
mov
fisttpl
shll
int
loop
fisubl
mov
mov
fincstp
dec
shr
cmpsl
jo
ja
int
icebp
icebp
int
mov
adc
sbb
adc
and
popf
and
pop
cmp
sub
mov
mov
sbb
push
xor
clc
lods
hlt
cltd
xchg
inc
stc
jb
push
xor
jecxz
lods
mov
mov
lods
dec
add
push
popa
or
insl
test
or
hlt
mov
mov
test
lahf
stc
xchg
popa
nop
shll
pop
fwait
sub
adc
add
cmp
pop
jmp
or
pop
out
xor
sahf
jecxz
dec
xor
mov
inc
gs
sbb
in
jb
push
inc
pop
mov
and
dec
sar
jne
in
sbb
loopne
mov
notl
mov
in
cltd
jg
cmpsb
sub
out
cmpsl
nop
sub
mov
push
addr16
jp
xor
mov
fwait
scas
jle
popf
cmp
mov
and
fistl
fs
xchg
push
mov
push
loope
jno
scas
mov
add
addr16
out
movsb
and
data16
stc
jns
imul
scas
movsl
scas
or
inc
leave
adc
xchg
mov
ret
lahf
pop
or
sbb
out
arpl
outsl
fiaddl
lret
and
or
jle
inc
sbb
and
or
mov
lds
pop
pop
jno
mov
lods
imul
xor
mov
inc
aad
jbe
xchg
icebp
jge
xchg
fwait
sbb
ljmp
fisubs
pop
xchg
aam
out
xor
dec
jle
fs
pop
jbe
xor
fwait
sbbb
cld
jecxz
cmp
test
cmpl
dec
in
pop
in
mov
xchg
enter
daa
jo
int3
cmp
sub
jl
xchg
in
cmpsl
pop
cmp
mov
out
and
mov
rclb
pop
test
arpl
xor
adc
mov
pop
fmuls
js
insb
lret
pop
bound
mov
cmp
pop
sub
out
xchg
xchg
dec
or
fisubrs
adc
dec
pop
out
pushf
lahf
xlat
xorb
lock
xor
inc
or
ror
fcoml
rolb
fadds
lcall
push
sbb
add
fs
push
add
adc
sar
and
and
in
xchg
adc
mov
rolb
enter
dec
fdivr
pop
js
rcl
sbb
cmp
adc
mov
add
or
lods
jo
ficomps
cmp
xor
loop
xchg
stc
inc
mov
sbb
xchg
mov
mov
sub
dec
and
cli
xchg
int3
les
adc
cmp
lea
decb
mov
mov
lahf
loopne
mov
pop
adc
push
adc
xchg
test
test
push
xchg
ret
sbb
stc
push
pop
sbb
mov
bound
scas
rcll
jmp
not
decl
dec
dec
adc
mov
add
fldenv
mov
jecxz
aas
sbb
push
push
fs
xlat
fimull
bound
adc
jns
pushf
pop
cmpsl
insl
out
jns
cmpsb
add
insl
in
dec
aas
jl
xchg
jb
inc
or
mov
je
out
mov
testb
stc
cwtl
dec
dec
mov
loope
fwait
mov
mov
sub
or
jp
xor
arpl
mov
shl
dec
rcr
call
mov
mov
ret
jno
cmpsb
adc
insl
stos
adc
dec
into
scas
fbld
add
xchg
icebp
movsb
pop
dec
cld
cmp
dec
mov
xor
cmpsl
and
cmp
arpl
call
or
aam
notl
mov
and
fucomp
adc
out
mov
ljmp
test
imul
mov
icebp
hlt
cmp
stos
into
bswap
xchg
mov
cltd
xchg
scas
mov
decl
xor
adc
or
pop
stos
out
outsl
dec
pop
roll
mov
add
loopne
sbb
push
jne
incl
mov
lret
mov
xor
add
mov
gs
mov
xlat
dec
stos
ja
iret
dec
dec
mov
aaa
inc
out
mov
jmp
icebp
jmp
dec
movsb
pop
adc
ret
mov
mov
out
mov
inc
and
pop
pop
in
cmp
xorl
push
sub
lods
scas
ljmp
adc
mov
or
mov
dec
jno
jle
mov
pusha
mov
jecxz
xchg
jge
icebp
jmp
sbb
jae
pop
out
push
movsb
add
popf
aad
and
icebp
jae
stos
pop
adc
and
test
insb
fs
imul
scas
or
push
and
push
adc
sub
movsb
inc
cwtl
pop
aas
pop
aas
inc
and
inc
arpl
popa
pop
inc
ljmp
push
xchg
jno
fidivrl
les
mov
pop
pop
dec
xchg
test
in
mov
jp
xchg
mov
pushl
lret
jne
push
xchg
xchg
jnp
movsb
iret
dec
jge
sahf
repz
dec
rorl
shll
cs
pop
dec
in
jne
push
cmp
cmp
xchg
in
cmp
jb
movsb
sub
mov
cmp
cmpsb
shr
mov
enter
daa
outsl
ficomps
cmp
pushf
or
rorb
xor
push
push
jmp
lds
movsl
mov
mov
fstl
adc
int3
push
cs
inc
xor
inc
je
sbb
decl
jle
test
pop
mov
pusha
loope,pn
push
inc
sub
call
mov
and
shrb
add
sti
mov
dec
mov
sbb
mov
and
adc
mov
sbb
inc
pop
jg
rcl
xchg
pop
push
icebp
aam
dec
mov
fdivrl
jle
sbb
sahf
mov
roll
loope
int
xchg
sub
je
stc
mov
or
lea
cmp
mov
je
nop
outsb
or
sub
call
in
or
mov
hlt
cmc
movsl
mov
pop
outsl
das
add
stc
sti
mov
fs
adc
lods
js
out
mov
sbb
out
mov
jo
data16
std
ss
sti
mov
mov
loope
mov
iret
pop
adc
sahf
imul
loop
ja
sbb
imul
fsubrl
adc
cmp
in
sbb
loop
mov
pop
add
orb
jae
fildl
pop
clc
fstps
cmc
les
mov
add
cmp
lea
push
jmp
in
adc
sbb
or
add
sbb
inc
sub
xor
aas
sbb
in
jb
cmpsl
xchg
dec
add
mov
cmp
test
stos
std
cmc
ss
cwtl
add
mov
mov
hlt
dec
iret
adc
lret
movsb
jle
mov
xor
mov
sub
movl
lcall
pop
xchg
es
xacquire
xor
dec
leave
push
bound
xor
cmpsl
cld
shlb
sub
shl
and
shll
mov
sarb
sub
aam
inc
cmc
mov
imul
fstl
inc
sbb
and
sub
push
or
mov
pop
inc
out
jb
test
pop
pop
leave
movntps
inc
cltd
enter
or
and
ja
push
test
pop
xchg
sbb
out
sub
pop
in
pop
adc
and
scas
dec
mov
outsl
add
loop
fnstenv
push
mull
and
xchg
in
into
cmc
mov
stc
lea
xchg
sub
ja
scas
inc
dec
cmpsl
popf
adc
xchg
push
or
mov
pusha
jge
dec
xchg
mov
out
sahf
stos
enter
dec
jns
shrb
push
pop
xchg
sub
test
ret
repnz
jp
stos
mov
rcrl
cmp
not
jle
jae
in
or
pop
scas
out
fistps
popf
xchg
push
dec
ds
out
lahf
jae
mov
push
les
mov
mov
xor
stos
int
pushf
and
mov
imul
scas
imul
push
push
loopne
out
in
and
ret
js
jbe
stos
inc
sub
xchg
loope
in
lcall
popl
dec
inc
push
inc
je
outsb
jae
xchg
aam
push
pusha
int3
insb
pop
ja
sbb
mov
lds
push
rclb
pop
repnz
sub
add
hlt
aas
ja
loope
in
jbe
addb
popa
push
push
aaa
orb
les
or
les
dec
pop
js
push
and
gs
push
mov
iret
and
sbb
cmp
mov
cmpsb
push
pop
push
in
test
test
daa
outsb
lcall
jno
xor
std
push
mov
ds
push
and
and
jne
xchg
dec
push
and
pop
pop
push
stc
push
inc
xor
out
aaa
inc
sub
mov
js
mov
in
push
daa
loope
xor
jmp
jb
and
adc
add
dec
pop
cmpb
fs
add
mov
xlat
stc
push
mov
shrl
dec
dec
sub
and
push
mov
out
mov
mov
push
cmp
fs
xchg
adc
movl
popf
mov
out
and
adc
das
ret
cmp
outsl
int
testl
lcall
cld
fimull
cwtl
das
pop
into
clc
dec
jg
insb
dec
xor
sbb
aad
loop
push
push
fs
xor
xchg
scas
sbb
and
movsb
out
cli
stc
cli
lds
cmp
mov
sti
push
ret
inc
nop
add
lret
leave
cmc
loopne
cmp
outsb
adc
and
test
push
xor
mov
repnz
outsl
pusha
lret
jge
sub
cs
test
jmp
mov
lock
nop
push
nop
pop
nop
fmuls
pop
jns
inc
loopne
fsts
jecxz
jecxz
stos
fadd
outsb
ja
lea
dec
aad
out
enter
sbb
pushf
mov
fisttpl
lods
pop
popf
ss
inc
mov
mov
aas
mov
cmp
je
test
rorl
pushf
xchg
xchg
cwtl
mov
cmp
pop
adcl
jae
adc
mov
stc
mov
cmc
hlt
das
cmpsb
pop
mov
jmp
or
cld
pop
loopne
mov
out
insl
jns
pop
dec
icebp
fwait
cmpsl
insl
mov
push
dec
cs
xchg
test
mov
jns
popf
and
outsb
mov
mov
sub
repnz
fsubp
inc
mov
cmc
push
cltd
mov
or
pop
insl
bound
ret
scas
or
mov
pop
stos
imul
push
push
repnz
retw
cmp
test
aam
xchg
push
dec
test
fwait
dec
xchg
inc
sub
mov
negb
pusha
fwait
mov
les
pop
xor
mov
scas
xor
in
jne
mov
xchg
cmp
divb
data16
out
pop
dec
xchg
icebp
ja
adc
dec
lcall
or
pusha
jae
iret
shlb
dec
push
mov
push
bnd
out
jge
and
dec
addr16
int
in
jno
adcl
out
popa
daa
sub
mov
mov
jp
testl
jnp
inc
cmpsl
jle
dec
sahf
in
loop
pusha
cmc
adc
xchg
and
out
jmp
mov
movsb
jae
push
cmp
sub
mov
mov
outsl
sbb
inc
jnp
and
mov
imul
scas
into
mov
push
mov
fwait
adc
cmp
iret
sbbl
pop
lods
cmp
inc
cmp
bound
adc
inc
lock
or
or
in
inc
xchg
xchg
and
xchg
sub
sbb
out
push
pop
cmpsb
pop
fsubrp
and
mull
loope
mov
repnz
xlat
push
leave
mov
mov
push
xor
cmp
cmpsb
mov
jo
or
sbb
mov
or
rcl
int3
scas
lds
imul
xlat
gs
lods
iret
dec
scas
xchg
push
pop
and
cmp
movsb
inc
fcom
inc
push
and
cmpsb
fdivrs
test
daa
insl
movsb
xor
add
jno
ljmp
mov
pop
or
movsl
mov
fsubl
mov
dec
sti
push
clc
mov
test
iret
or
ret
cli
sbb
pop
dec
inc
bnd
ret
pop
xor
push
mov
cmp
pop
enter
jnp
and
pop
mov
pusha
sbb
fwait
test
and
mov
xchg
mov
adc
leave
push
inc
pop
push
fcomps
xor
loope
inc
fcoml
out
sahf
testl
adcb
xchg
add
sbb
pop
mov
and
adc
ss
jno
cmp
sub
jmp
adc
shrl
mov
addr16
fildl
xor
lds
lods
mov
stc
imul
sub
fwait
xchg
lods
inc
mov
mov
mov
test
sub
divb
adc
data16
add
sar
mov
sbb
rclb
ret
pop
or
push
dec
imul
sbb
adc
ret
mov
jbe
stos
mov
xlat
push
aam
sub
in
mov
out
or
jmp
int
cmpb
aad
sub
dec
xor
xor
enter
cmp
sbb
jno
dec
lea
jp
call
push
xchg
ficompl
cmp
adc
sarb
into
cli
fstpt
dec
or
sbb
dec
aas
pop
cwtl
mov
iret
add
dec
out
ret
fidivs
pusha
rcl
cwtl
pusha
testb
std
inc
aam
cwtl
jns
insb
mov
add
mov
loope
movsl
mov
jmp
hlt
mov
mov
rcrb
das
test
clc
mov
mov
xchg
adc
push
pop
popf
es
dec
mov
or
cltd
xchg
in
sub
cld
mov
enter
dec
and
or
pop
mov
shlb
les
and
shll
push
pop
mov
frstor
xchg
clc
cwtl
mov
jecxz
ss
popa
mov
into
stos
pop
cwtl
dec
out
cmp
imul
push
psubsw
add
cmpsb
cltd
mull
test
add
mov
xchg
gs
dec
inc
fsubrs
push
insl
mov
mov
or
pop
pop
imul
fwait
jmp
xchg
sbb
movsl
push
repz
xor
imul
jp
xor
sbb
xchg
mov
mov
jle
mov
or
sbb
rorl
mov
add
xchg
mov
in
mov
push
push
mov
das
mov
bound
movsb
jns
jle
in
or
and
cmp
pop
fldl
sub
sahf
lahf
or
int3
addr16
neg
mov
sbb
mov
push
dec
cmpsl
jle
sbb
pusha
nop
xchg
xchg
testb
jmp
jl
cmc
jae
xor
cltd
popf
dec
aas
mov
push
scas
mov
stos
mov
jmp
outsl
inc
shrb
inc
imul
scas
xor
push
clc
sbb
adc
adc
push
inc
inc
pop
mov
iret
popf
inc
repz
or
test
fadds
outsl
push
fcmovbe
sub
sbb
jecxz
pop
aad
mov
lds
lret
frstor
sub
jmp
sub
hlt
pop
rolb
push
jg
push
jbe
aas
sbb
or
aaa
fcoms
stos
nop
sub
mov
test
dec
cmp
femms
out
inc
xor
pop
adc
dec
push
sub
adc
movsb
int3
inc
and
out
lods
cmpsb
pop
xchg
imul
mov
int
cmp
andb
push
pop
inc
cmp
ds
movsl
mov
jmp
push
xor
lahf
lret
adc
mov
in
dec
xor
bound
pop
je
mov
ss
outsb
pop
pop
imul
jo
mov
xchg
dec
sub
int3
sub
outsb
push
lret
push
lahf
sarb
jne
addb
push
add
sub
and
pop
xchg
int
xrstor
inc
in
xchg
pop
aam
mov
popa
xchg
inc
push
cmp
faddl
or
sahf
lcall
xorb
in
jo
sub
cmpsl
xchg
scas
mov
stos
sub
mov
adc
fisubs
clc
cmp
in
dec
test
sbb
ljmp
mov
lret
mov
cmc
cli
test
xor
mov
loop
cmc
sub
fs
pop
mov
sub
inc
pushfw
cmpsb
fldcw
sbb
out
xor
cli
pop
stc
xor
jmp
xor
sub
fwait
flds
loopne
sub
sub
jne
loopne
int
ds
dec
adc
pusha
push
repz
lds
fisubrs
cmp
dec
stc
xlat
dec
scas
sti
sub
xor
pop
jae
jmp
mov
loope
sbb
or
nop
adc
inc
mov
mov
dec
sub
xor
je
adc
call
shrl
pop
cs
cmc
adc
lret
or
mov
xor
xchg
mov
aas
clc
dec
cld
jb
std
mov
jge
je
imul
testb
push
mov
dec
xor
addl
ja
mov
pop
shlb
mov
shrl
adc
mov
outsb
jle
and
jmp
es
call
mulb
int3
sbb
icebp
add
xchg
call
imul
cmp
cmp
aam
stc
shlb
ljmp
sbb
sahf
aam
sbb
mov
fucomi
push
pop
xor
clc
shll
pop
ljmp
popa
lods
adc
pop
jl
fwait
jg
xchg
or
in
dec
cmovs
mov
add
sub
xor
xchg
xchg
lods
aas
and
adc
adc
xor
push
daa
and
sbb
push
insb
push
aad
inc
popf
scas
add
sbb
lods
xor
je
or
inc
xor
int
xchg
fidivrl
sti
mov
ret
xor
ja
data16
popa
or
sbb
jmp
mov
xor
jne
xchg
and
jmp
daa
out
cmp
sub
sbb
lock
cli
enter
jbe
push
sub
cltd
pop
fbld
lret
jns
shlb
xchg
int3
ret
and
jle
in
sarb
adc
xchg
leave
cmp
xchg
inc
flds
dec
pop
inc
push
mov
push
popf
jno
push
mov
in
int3
stos
stos
es
and
fdivs
and
mov
dec
popf
adc
out
iret
aas
push
retw
arpl
test
pop
arpl
ja
idivb
cs
xchg
lret
enter
add
sbb
lods
test
fidivs
cmp
shl
insb
mov
dec
into
xor
mov
xchg
int
into
xor
jbe
dec
loope
mov
dec
xchg
aaa
mov
popf
pop
add
out
int3
test
rorb
xor
xor
bound
scas
push
shrb
fucomi
popf
cmp
xchg
test
inc
jne
clc
cmpsb
fisubs
in
cmp
ret
jp
cmp
and
aaa
jl
and
ds
popa
cmc
movsl
mov
jg
lahf
jecxz
fstl
int3
sub
pop
pop
mov
pusha
mov
dec
pop
fwait
add
pop
popf
sub
loope
lcall
aas
jmp
in
adc
xchg
insb
stos
ja
adc
or
add
not
and
loop
int
push
int
push
iret
add
jmp
cmp
xor
inc
test
dec
lahf
orb
jg
out
dec
mov
lret
mov
mov
test
adc
jae
and
cmp
mov
or
push
rcll
sub
in
cs
mov
cmp
xor
icebp
or
push
push
stc
xlat
jp
fs
icebp
sub
mov
push
cld
lods
adc
mov
stos
push
out
ret
xchg
push
test
ret
cmp
and
sti
pop
adc
stc
cmp
xchg
jb
clc
mov
adc
call
loopne
mov
inc
xchg
xchg
pushl
add
sahf
lret
or
sub
rcr
mov
lds
lcall
mov
nop
in
int
dec
out
xchg
jns
jp
jmp
les
jl
repnz
or
ja
jne
fnstcw
pusha
call
push
dec
mov
adc
popa
out
fistpl
inc
clc
inc
dec
jbe
inc
hlt
sbb
xchg
add
std
dec
leave
je
pop
and
jne
dec
not
ds
cwtl
out
and
mov
je
dec
jnp
and
pusha
test
mov
pop
jns
pand
das
inc
icebp
sub
mov
popf
insb
push
ret
cmp
jb
mov
xchg
dec
dec
mov
ja
push
insl
mov
xlat
adc
pop
mov
loop
jp
inc
and
mov
repz
inc
rolb
mov
adc
mov
mov
xor
push
loop
jmp
scas
add
clc
push
sbb
ljmp
jl
subb
ss
out
cmp
xor
jne
add
pop
dec
test
sahf
xchg
mov
cwtl
sbb
dec
adc
in
xchg
incl
out
jns
sarl
mov
inc
add
mov
add
stc
out
lcall
mov
push
les
fisubl
xor
rcl
xchg
sub
mov
shr
mov
jle
jnp
in
push
push
inc
loop
dec
or
int
mov
sbb
data16
movsl
jp
mov
out
out
sbb
mov
imul
in
cmp
shl
pusha
xor
mov
or
int
lods
adc
mov
mov
repz
nop
stos
in
lds
mov
pop
ficoms
xor
xchg
adc
jae,pt
vmovhpd
sbb
cmp
insl
inc
stos
cltd
pop
adc
popf
push
subl
imul
ds
testl
pop
xchg
das
iret
sahf
iret
ret
mov
inc
pop
mov
popl
stos
lods
or
jnp
dec
inc
adc
xchg
xor
jb
xor
lahf
daa
lds
mov
repnz
pop
adc
pop
out
hlt
repz
push
sbb
int
jge
sbb
sbb
cs
jl
dec
or
push
and
dec
sbb
insb
push
lods
lret
dec
xor
mov
mov
fdivrl
xorl
mov
in
and
daa
push
ljmp
in
mov
test
mov
je,pt
push
movsl
lds
inc
and
mov
push
jno
push
test
and
cmp
inc
dec
cltd
pop
ret
js
dec
aas
pop
fsubrl
push
dec
push
loope
pop
popa
sub
xor
outsb
xor
unpckhps
adc
shlb
dec
ja
subb
test
sbb
and
xor
int
cmpsb
mov
pop
rclb
cmp
out
dec
fcoml
cwtl
int3
sahf
loopne
adc
push
push
mov
and
mov
mov
adc
push
ss
scas
in
fcomps
cld
testl
test
sub
in
or
into
test
mov
xor
outsl
mov
mov
cwtl
stc
mov
jecxz
in
cmp
dec
sbb
lods
sti
xlat
cmp
out
aam
cli
xor
lock
sbb
sbb
add
out
jl
xchg
scas
pop
push
icebp
adc
push
in
js
jb
adcb
push
int3
dec
sbb
pop
test
xlat
lret
out
sub
or
xor
std
jmp
xchg
cmpsb
cs
dec
jae
pop
inc
dec
dec
sbb
fldcw
dec
les
adc
add
lea
repz
shr
mov
test
adc
dec
test
push
sbbb
xchg
inc
sarb
xor
ss
enter
push
faddl
cltd
popf
psrlq
imul
cmp
stc
cwtl
stos
cmp
mov
jo
mov
add
lret
iret
pushf
dec
mov
cmp
das
and
jmp
fadd
add
ret
lret
jecxz
and
insl
adc
outsl
cmpsl
imul
icebp
scas
dec
cld
ds
xor
add
mov
mov
adc
fcmovb
lahf
sub
jb
aam
movsb
pushf
mov
sarl
fst
stos
cmp
dec
es
xchg
sti
mov
aaa
popa
into
es
stos
and
jb
xchg
fwait
dec
pop
push
pop
pop
clc
clts
jnp
add
add
test
shlb
fwait
and
dec
jp
add
adc
data16
test
insb
int3
lret
popa
lds
mov
add
imul
inc
std
leave
or
mov
into
xor
sub
xchg
js
cld
mov
stos
xchg
mov
cmp
movsl
ja
leave
mov
mov
jns
test
out
mov
mov
cs
divb
jne
lds
mov
incl
jns
push
adc
jecxz
sub
pop
dec
addr16
out
push
jp
sub
add
cs
fs
cmp
in
cs
pusha
popa
arpl
xchg
outsl
xor
test
xchg
jae
jb
push
ss
sbb
js
mov
xchg
pop
stos
or
sub
mov
out
out
xchg
imul
das
scas
pop
mov
lock
pop
cmp
pop
mov
mov
mov
lret
or
idivb
inc
xchg
adc
in
adc
xchg
mov
pop
bound
fidivrs
sti
lds
and
rcrb
mov
icebp
xchg
mov
hlt
ds
fcoms
popf
iret
jbe
ret
pop
jge
jp
sbb
cmpl
adc
add
or
pop
icebp
fmull
add
pop
loopne
mov
push
int3
scas
adc
sbb
cmp
movsb
insl
mov
xchg
aad
cmpsb
in
in
or
lahf
daa
imul
jno
xor
hlt
cmp
ret
ds
cmp
int3
addb
pop
lahf
and
push
inc
loopne
test
lock
push
repnz
push
push
js
mov
mov
loope
cmp
sub
and
jbe
xchg
addr16
dec
lcall
mov
xchg
fldl
js
lods
mulb
push
popf
hlt
cli
int
movl
pop
push
inc
lcall
or
inc
cli
xor
mov
sahf
and
test
mov
jg
ljmp
or
cltd
mov
aaa
adcb
std
cmp
cmpsl
add
cmp
push
xor
cmc
dec
fbld
mov
lock
ret
in
push
into
addr16
ds
dec
sarb
outsl
imul
stc
inc
mov
fs
xchg
add
jl
and
lods
loop
mov
movntq
and
xor
daa
cmp
xchg
sti
mov
sub
loopne
movsb
cmp
adc
cmp
data16
outsb
mov
xchg
pop
or
pop
cmp
push
adc
loope
aas
and
jmp
mov
cs
add
lock
nop
mov
mov
popf
fldenv
or
adc
rol
jge
mov
call
push
adc
pop
inc
mov
adc
ret
or
aad
stc
lret
int3
push
sub
popa
ss
sub
mov
dec
lret
je
xor
notb
std
fistpll
movzwl
inc
ret
mov
orl
sbb
ds
repz
iret
mov
das
add
jne
xchg
fincstp
and
inc
test
cmpsb
mov
xchg
dec
stos
xor
cmpsl
push
out
icebp
test
or
sub
xchg
jne
lcall
xor
shrb
insb
js
aad
imul
outsl
sub
cld
cmp
xchg
cmp
pop
ljmp
xchg
lods
push
dec
mov
adc
and
fnstenv
loop
cwtl
push
cmp
adc
gs
add
div
cltd
adc
test
mov
sahf
mov
adc
nop
mov
push
ja
shrl
fwait
pop
pop
pop
lret
fwait
movsl
xchg
push
push
push
roll
adc
mov
xor
lds
or
fadd
xor
fldcw
mov
mull
mov
hlt
insb
inc
ja
shll
adc
inc
mov
stc
fs
fnstcw
jne
je
mov
in
mov
bound
test
push
sbbl
mov
sub
mov
dec
addr16
adc
pop
mov
sarl
adc
cmp
pusha
cld
sub
sbb
pop
xchg
inc
std
shr
push
mov
jae
fs
popf
out
jl
mov
inc
push
stos
cmp
stos
jg
lea
lret
data16
loope
lock
push
scas
mov
xor
iret
pop
out
ret
das
pop
rcrb
cwtl
outsl
xor
or
jno
daa
inc
adc
fisubl
mov
pop
xchg
dec
xchg
sbb
jp
shlb
push
mov
inc
inc
gs
add
loope
push
mov
sub
jge
mov
xor
cli
and
jbe
jo
push
mov
int3
inc
pop
xchg
dec
negb
or
test
jo
jecxz
scas
lock
and
cmp
inc
and
cmpsb
addr16
out
adc
daa
push
cmp
jno
mov
dec
cmp
arpl
mov
es
ret
out
lahf
inc
mov
push
pop
cmp
test
mov
sti
popa
leave
or
adc
js
mov
push
cwtl
test
lock
push
sub
pop
outsb
test
adc
es
out
xchg
mov
into
xchg
mov
add
pop
leave
and
adc
adc
jb
xor
mov
rcrb
sbb
sub
rorb
mov
add
pushf
cmp
sbbb
inc
mov
push
mov
xcrypt-cbc
cmpsl
adc
sub
ss
fcom
int
test
cmp
rcrl
mov
shlb
or
clc
jbe
dec
cld
jmp
xor
jnp
outsl
dec
and
loop
mov
les
in
data16
data16
lods
lods
leave
mov
mov
jmp
pop
cli
sub
xor
sbb
sub
cmp
bound
gs
out
loopne
hlt
cld
pop
test
pusha
adc
dec
imul
jo
repz
cwtl
xchg
fcmovb
aaa
sbb
rorl
data16
dec
aas
and
cmp
push
repz
push
gs
jmp
cltd
inc
outsl
stos
aad
add
nop
jge
pop
dec
or
out
mov
dec
aam
les
jecxz
push
pushf
movb
arpl
cs
mov
push
adc
hlt
sti
fldt
add
pop
outsl
in
cmc
inc
fisubrs
inc
push
in
je
adc
dec
inc
lret
xor
shll
adc
lcall
cwtl
and
mov
mov
roll
cmp
lcall
lcall
and
loopne
shll
xchg
hlt
and
lods
mov
jmp
mov
dec
dec
cmpsb
xchg
xchg
cwtl
cmp
icebp
pop
es
cld
xchg
adc
mov
dec
sbb
and
adc
pop
push
pop
pop
rolb
or
mov
push
push
sub
xchg
and
mov
jne
addr16
cld
xor
lods
sar
stos
add
jge
daa
xor
fsts
jno
pinsrw
cltd
dec
inc
pop
test
popf
mov
mov
lds
insl
xor
setbe
pop
add
sarl
rcl
aam
ds
clc
out
add
sub
add
cmp
aas
xor
adc
aas
fidivrl
push
pop
mov
mov
scas
push
adc
cmp
fiaddl
mov
mov
stos
dec
mov
xchg
push
mov
bound
xor
jns
in
in
cld
loope
lods
xor
out
adc
test
mov
mov
pop
jne
aas
push
push
jnp
push
xor
in
sub
pusha
xchg
add
fbstp
movsb
cmp
adc
nop
push
jae
lcall
or
push
mov
stos
repnz
fs
enter
jno
imul
sti
scas
and
push
pop
lock
iret
mov
push
fiaddl
in
arpl
cmp
mov
roll
gs
xchg
xor
sbb
pop
shr
faddp
mov
lds
cmp
rclb
mov
xchg
sub
hlt
aam
imul
mov
jge
jecxz
sbb
cli
aaa
mov
add
fwait
xchg
stc
mov
push
push
add
jo
mov
and
cmp
cmpsb
lock
sbb
pop
popf
enter
daa
addr16
dec
cmp
jmp
jno
xor
jl
jp
cmp
jne
ds
adc
pop
xchg
lahf
pop
ds
push
ljmp
push
xchg
xor
cld
pop
aaa
cmp
or
pop
cltd
inc
addr16
dec
sbb
pop
outsl
dec
sub
andl
pop
push
adc
xchg
add
push
repz
ret
and
or
in
inc
add
ja
and
js
push
mov
mov
sub
in
test
loopne
push
push
jmp
inc
fcoml
sub
incl
mov
cmc
inc
mov
pop
fisttpl
xchg
dec
adc
cwtl
pop
ss
pusha
adc
testl
je
mov
daa
or
lock
cmc
sbb
test
sbb
daa
adc
mov
ljmp
sub
lods
mov
cmp
add
out
and
pop
inc
mov
push
insl
hlt
cmp
push
xor
sbb
jle
cld
lret
fs
popf
pop
call
jns
adc
fld
and
out
mov
xchg
popf
ljmp
or
icebp
xlat
mov
pop
mov
jno
xor
push
inc
scas
cs
jo
jle
jo
pop
lea
imul
fsts
rclb
jg
shl
cs
movb
push
call
dec
in
cmpsb
pop
lods
and
loope
std
pushf
bound
fistl
adc
adc
roll
cmp
pop
jb
icebp
mov
mov
pop
shll
jecxz
std
sub
add
mov
xor
daa
sub
mov
mov
lock
and
mov
jl
mov
leave
push
ret
js
andl
div
insl
lret
dec
mov
inc
fidivrl
xor
test
mov
or
outsb
outsb
and
stos
cmp
das
rclb
lds
out
dec
not
imul
cmpl
push
out
xchg
clc
cli
ret
mov
enter
repnz
stos
repnz
out
mov
push
out
ret
inc
mov
call
cltd
adc
test
lea
movsb
not
dec
scas
mov
cmp
sbb
xor
insl
cli
xchg
fwait
add
fldl
inc
xor
fcmovu
add
or
das
and
into
jmp
mov
push
mov
call
or
jnp
orb
fcomps
sahf
jne
std
into
mov
inc
sub
xchg
leave
jmp
cmp
push
lods
in
jae
cmp
xor
insb
inc
cmpsl
sub
sbbb
movb
mov
mov
pop
enter
cmpsl
jnp
mov
jle
in
frstpm(287
inc
in
pusha
xor
enter
outsl
xchg
call
ds
xchg
adc
push
jg
imul
cld
dec
push
sub
pop
stos
gs
and
dec
jbe
daa
ljmp
add
push
mov
jnp
iret
sbb
inc
dec
idivb
jae,pn
inc
test
adc
sti
aas
or
addr16
call
fiaddl
xor
mov
test
or
pop
out
inc
sbb
arpl
lret
pop
cmp
insl
pop
or
ljmp
hlt
pop
bound
pop
cmp
jbe
pop
push
jge
out
loope
cmp
aaa
js
repz
add
int3
sbb
insb
dec
aam
mov
cmp
movsl
jo
inc
out
scas
scas
push
push
and
mov
mov
movsl
nop
cmpsb
insl
sub
scas
enter
daa
xchg
sarb
gs
xchg
jno
call
cmp
mov
add
and
cmp
push
mov
or
xor
cld
dec
xchg
mov
pushl
js
push
pusha
pop
fcoms
add
push
mov
jecxz
ljmp
adc
fdivl
push
lods
pop
xor
or
add
jmp
mov
int
sbbl
fs
into
fstpl
inc
popa
lahf
faddl
xchg
sbb
cmp
ret
test
outsl
insb
jg
orl
out
cwtl
mov
mov
jno
jo
icebp
cmp
inc
ret
pop
testl
ljmp
or
adc
ja
movsb
sahf
nop
xor
in
outsl
push
add
loop
mov
stc
push
pop
fs
xor
test
out
data16
imul
std
mov
aad
xchg
aam
xor
sub
cmp
insl
mov
enter
test
push
add
pop
loopne
ror
pop
out
inc
adc
fcomi
imul
outsl
cmpsl
repz
xchg
sbb
inc
ljmp
pop
jno
mov
fcoml
jmp
lods
jno
xor
dec
sahf
nop
xor
dec
lret
inc
fnstenv
pinsrw
mov
xchg
jno
and
add
int
bound
imul
cmp
cmp
mov
fiadds
scas
mov
jnp
icebp
aas
mov
xorl
aad
das
dec
cmc
je
notb
mulb
outsl
scas
std
aam
dec
cwtl
xchg
imul
push
jecxz
mov
mov
setnp
adc
adc
mov
mov
mov
call
and
sahf
xchg
jmp
sub
mov
push
jl
ret
pop
dec
loopne
das
roll
pushf
sbb
incb
icebp
or
cmpl
mov
add
mov
shlb
test
aam
cmpsl
sti
mov
in
xor
mov
mov
jno
cmp
xor
lock
pop
or
popa
sub
icebp
lods
xchg
xlat
xchg
in
dec
xchg
mov
je
lret
jb
mov
roll
lods
cwtl
xchg
pusha
imull
or
cmp
pop
sbb
ret
mov
ds
adc
jns
shlb
or
inc
or
fmuls
mov
adc
sahf
pop
arpl
fucom
ja
rcrb
in
inc
aad
pop
or
mov
es
addb
mov
insl
mov
or
dec
bound
scas
jns
inc
xor
jne
or
cmp
out
in
ret
sub
jnp
cltd
lds
jp
mov
and
xchg
mov
jle
cmpsl
in
mov
fbstp
call
jmp
or
dec
jae
shrb
popf
pop
sub
fs
push
addr16
test
adc
cmp
imul
lcall
addr16
iret
jns
fcmovnb
bound
scas
inc
nop
mov
inc
or
mov
push
lret
mov
sti
dec
sbb
lret
adc
fiadds
cs
das
rorb
push
repnz
jo
hlt
push
or
sahf
daa
jbe
and
sbb
xlat
mov
aaa
xchg
or
rolb
push
ss
pop
xchg
icebp
dec
inc
add
sbb
sbb
test
out
scas
lea
and
scas
cmp
test
inc
iret
adc
movsb
movsb
pop
enter
daa
gs
hlt
cmp
rclb
sub
aam
and
movsl
call
add
lahf
popf
pop
sbb
ja
test
sbb
hlt
xor
pushf
leave
adc
sub
stos
push
js
les
pop
pop
insb
xor
xchg
into
mov
xor
xor
outsb
pop
movsl
outsb
adc
mov
mov
addb
repz
daa
add
scas
out
and
or
test
xor
insl
pop
dec
adc
lcall
push
fsubr
fdiv
sbb
xor
xor
cmpsl
jg
adc
mov
xchg
mov
mov
lret
adc
inc
push
ss
and
add
testl
xor
shll
lret
mov
mov
jg
test
repz
cmc
imul
outsl
in
stos
loop
mov
stc
and
shlb
xchg
add
mov
xor
cmp
clc
pop
sbb
inc
ljmp
int3
or
cmp
pop
sti
ja
pop
dec
cmp
in
loopne
pop
inc
pop
add
pop
ljmp
insl
lahf
repz
clc
xchg
and
push
cmp
push
xchg
sub
cmp
inc
mov
jmp
fnstsw
cwtl
bound
nop
push
gs
dec
sub
push
inc
in
int3
sti
flds
push
pop
jecxz
cmp
mov
int3
call
dec
mov
adc
adc
sti
jl
mov
leave
pop
pop
and
ds
xchg
inc
push
aas
push
lods
jnp
mov
cmpsb
jg
je
rorl
insl
mulb
mov
jnp
adc
push
lret
dec
xor
xor
lretw
cli
fidivs
mov
mov
xor
das
jge
mov
mov
xchg
ret
xchg
adc
es
shrb
fs
xchg
cmp
rcrb
mov
loope
ss
adc
ds
mov
mov
insb
pop
das
mov
lods
sbbl
aam
cmp
and
fcoms
outsb
call
clc
jo
pop
xchg
ss
ljmp
jnp
add
jge
shrb
sbb
push
call
xchg
incb
scas
push
movsl
movsl
push
psraw
sbb
adc
out
call
out
mov
stos
sbb
imulb
mov
add
and
jmp
pop
ret
out
fwait
popa
ret
sbb
loope
pop
add
jge
scas
lcall
cli
xchg
xor
or
lods
xchg
add
fdivs
inc
cmc
sbb
jg
ja
enter
jno
inc
insb
jmp
sub
mov
cmp
sbb
mov
push
mov
mov
std
adc
in
mov
sbbl
out
or
or
les
into
sarb
add
shl
jnp
dec
mov
in
sbb
pusha
push
push
xchg
xchg
mov
mov
cli
jg
xchg
aam
mov
push
add
add
mov
cmpsb
add
and
mov
std
push
sbb
sahf
test
xor
mov
ret
and
inc
fwait
push
and
inc
or
add
push
or
sub
insb
sub
cmp
pop
dec
dec
push
fisubrs
enter
jbe
mov
nop
adc
hlt
mov
adc
dec
fs
pop
fidivrs
scas
add
scas
pop
scas
aaa
imulb
jb
jb
pop
int3
repnz
dec
mov
fwait
push
jo
xor
fcomip
cmp
loopne
lods
cmp
icebp
pop
movsb
and
out
inc
pop
mov
mov
daa
movsl
lahf
cmp
xor
int
jg
stos
scas
or
fildl
ds
add
movsl
out
cmpsb
push
das
ffree
lahf
mov
lahf
adc
out
mov
or
sti
pop
lods
cmp
js
ljmp
push
sahf
loope
dec
enter
dec
jl
enter
adc
adc
xchg
push
adc
inc
sbbb
in
sbb
leave
lods
and
mov
inc
int
lret
sbb
sub
int3
insl
cld
lcall
add
cwtl
daa
enter
adc
mov
sbb
mov
insb
pop
mov
and
push
jle
imulb
push
cmp
mov
cmp
or
mov
std
mov
xchg
pusha
or
int
into
and
xor
xor
mull
loop
xchg
mov
fdivr
je
daa
dec
test
mov
mov
push
mov
test
out
adc
cli
notl
push
xor
and
sti
es
cmp
and
gs
xchg
xor
fstps
adc
lea
push
mov
repz
cs
xchg
out
lcall
mov
adc
mov
mov
push
and
mov
aad
and
jmp
xchg
lcall
mov
les
mov
lea
call
lret
nop
test
push
mov
pushf
arpl
neg
in
jb
sti
lret
cli
sbb
mov
fidivrl
lock
dec
sbb
sbb
rcrl
loope
std
and
adc
aad
loop
cmp
jecxz
cmp
pushf
gs
imul
mov
cwtl
mov
std
mov
es
adc
fwait
pop
ret
and
mov
insl
jg
and
jmp
cmpsl
arpl
add
mov
push
jge
mov
cmp
jae
jl
jl
dec
pop
int3
xchg
aad
int3
inc
inc
sub
jmp
lods
mov
adc
push
aaa
nop
imul
stos
xchg
sub
inc
test
lret
lods
insl
add
stos
mov
sub
xchg
inc
mov
les
inc
out
cli
add
outsl
cltd
and
push
shll
ficomps
in
or
or
adc
sarl
sbb
pusha
pop
outsb
pushf
adc
test
mov
cwtl
cs
xor
rorl
daa
cmc
xchg
push
xor
sti
mov
fwait
mov
ja
push
cmpsl
dec
sbb
pop
or
pop
orb
out
jne
mov
add
xor
lea
mov
in
adc
cmc
cwtl
mov
jno
jae
ret
mov
leave
mov
jecxz
mov
jle
nop
jle
xor
in
fnstcw
add
cwtl
fbstp
lcall
xchg
lahf
xchg
push
enter
test
cmp
push
in
xchg
ds
pop
imul
movsb
push
ja
aam
push
jnp
iret
aaa
xlat
mov
pop
roll
pop
inc
cmpsb
insb
icebp
arpl
jno
inc
push
stc
dec
or
fmuls
inc
mov
cmp
pop
xor
sbb
lret
jl
mov
lds
and
mov
jecxz
fcmove
pop
and
push
inc
aaa
fnsave
push
jp
mulb
sbb
test
or
and
fstp
lcall
mov
xor
cmp
jl
dec
inc
pop
and
cmp
mull
notb
in
jb
push
enter
daa
arpl
cmp
mov
jno
fidivs
mov
imul
cltd
lahf
fildl
ds
mov
and
fadds
aaa
pop
shrl
pop
xchg
mov
cmp
arpl
xor
mov
subb
adc
insl
add
outsl
pushl
sub
out
add
cmp
push
scas
or
sub
dec
lcall
ljmp
add
test
xchg
andb
sub
aas
jge
mov
xchg
jp
add
cmp
jmp
fdivrs
mov
lret
ffreep
dec
fimull
lods
or
mov
lock
xor
fwait
outsl
mov
iret
out
pop
jne
mov
sub
xor
data16
in
add
mov
mov
inc
ret
sub
sbb
jp
call
sti
aad
sar
add
sbb
xchg
loopne
mov
pop
inc
xor
adc
or
aas
inc
adc
lods
repz
sbb
cmp
pop
adc
mov
cmpsb
mov
leave
pop
std
in
sbb
mov
cs
mov
aad
mov
sbb
out
testb
cmpsb
fldz
aam
les
jl
roll
adc
pop
call
dec
iret
lret
jp
adc
iret
cmp
pop
sahf
fs
inc
addl
pushf
jb
idivl
je
stos
cmp
in
inc
fwait
imul
enter
push
ret
and
xchg
and
cs
lock
adc
nop
mov
push
es
test
das
cmp
aas
mov
cmc
test
ret
mov
leave
es
push
add
cmpsl
bound
mov
mov
aad
popa
adcl
xchg
pop
mov
jmp
test
sub
mov
cs
mov
push
cli
and
loopne
out
jb
mov
and
mov
mov
dec
dec
lods
fcom
xchg
stos
scas
mov
test
pop
xlat
mov
add
push
mov
test
mov
in
dec
negb
xchg
dec
mov
jb
int3
pop
sbb
or
daa
adc
add
mov
push
sub
xor
jecxz
or
int3
rclb
fiaddl
xchg
aam
pop
push
cmpl
or
fmull
or
lds
movsl
shll
lock
loope
out
adc
data16
mov
xchg
js
xchg
sub
insb
push
push
addr16
jp
lcall
push
sbb
sub
mov
in
insl
pusha
sahf
jne
mov
std
jmp
push
lret
jae
mov
test
adc
incl
xor
or
push
iret
jnp
rcll
jae
mov
or
mov
mov
insb
ret
test
inc
mov
xchg
arpl
xlat
inc
adc
push
push
or
fcmovbe
out
mov
sbb
or
stos
addr16
fsubrp
mov
mov
mov
ss
leave
iret
jb
hlt
dec
push
push
push
xchg
imul
sbb
mov
sub
ss
enter
nop
dec
mov
repnz
xchg
cmc
push
sub
and
push
mov
inc
jl
xor
jns
push
in
pop
cmp
mov
push
cmp
call
mov
cmp
dec
sti
mov
movsl
std
ds
and
push
lahf
cli
sbb
sub
jge
out
cmpsl
mov
or
add
js
das
sub
aam
nop
push
pop
enter
cmp
out
imul
cmp
dec
adc
push
dec
mov
into
and
sbb
pop
fiadds
cli
shll
push
in
push
mov
fs
mov
mov
lret
lcall
ss
cmp
xlat
and
sahf
clc
xchg
les
inc
adc
cmpsb
xlat
shlb
dec
clc
int
lock
rclb
jl
in
out
clc
fdivs
sahf
int3
testl
lret
shl
rorb
push
stos
into
pushf
pushl
xor
outsl
cmp
loop
inc
mov
inc
sub
cmp
movsl
sbb
test
mov
add
out
hlt
dec
cli
pop
and
xor
mov
sti
test
xor
dec
gs
push
mov
imul
lea
push
pop
xchg
imul
pop
and
cli
inc
mov
insb
sbb
fs
mov
xlat
ret
nop
or
jmp
mov
mov
dec
jmp
add
pushf
aad
xchg
dec
inc
int3
inc
inc
and
hlt
lahf
les
test
xchg
pop
lea
insl
call
leave
xchg
je
sub
clc
adc
add
inc
push
cmp
out
inc
out
pop
aas
cs
movsl
jb
cli
das
dec
or
pop
je
mov
imulb
xchg
std
jo
xchg
cwtl
sbb
mov
xchg
push
mov
lret
imul
mov
shlb
mov
xlat
aad
inc
ret
sbb
inc
mov
orb
ret
inc
clc
shlb
cmp
insl
dec
rorl
dec
mov
sbb
lret
icebp
adc
cld
xchg
jbe
mov
sbb
inc
cmp
or
push
shlb
addr16
xor
ljmp
mov
add
mov
daa
sbb
xchg
adc
jns
mov
ss
paddd
sbb
cltd
lcall
mov
rorb
sub
or
scas
ror
mov
pop
les
cmp
lret
add
into
cmp
xor
inc
or
xor
xor
notb
sbb
sbb
pop
adc
cmpsl
ja
imull
decb
xor
or
iret
jecxz
add
jne
sub
mov
cli
test
icebp
mov
jo
and
in
pop
outsl
addl
cs
adc
sub
addr16
sbb
rcrl
jp
push
xorb
lock
jle
shlb
and
scas
fcomip
pushf
cmp
jmp
xor
jno
push
dec
in
popf
neg
ljmp
inc
mov
and
insb
ds
imul
scas
jb
xchg
mov
dec
iret
cmc
pop
mov
pop
inc
inc
xchg
inc
mov
adc
adc
mov
push
mov
mov
test
xchg
aas
xor
jmp
ficoms
hlt
mov
and
mov
or
inc
mov
xchg
popa
pop
push
in
inc
jbe
mov
inc
sbb
outsb
fnsave
xor
or
lret
out
add
jns
int3
mov
add
inc
push
cmpsl
and
xor
lock
and
mov
movsb
lds
inc
cmpsb
cld
dec
xor
inc
loopne
enter
daa
popa
cwtl
cmp
fs
jno
mov
cmp
stc
xchg
ds
mov
int
add
mov
push
fmull
test
dec
shll
push
pusha
cmpsl
pop
and
push
js
and
xor
popa
inc
mov
xchg
gs
sub
and
shlb
jno
sub
insl
sub
das
ja
add
adc
mov
jge
in
sub
ret
xchg
dec
xchg
sbbl
cmp
cltd
inc
sbb
add
jno
dec
or
jg
ja
mov
dec
leave
mov
push
xchg
enter
in
cmp
out
inc
add
add
pop
lret
inc
jl
push
mov
mov
mov
xchg
adc
cmpsl
into
lea
add
out
stc
std
cmp
enter
dec
sub
cmp
push
push
mov
or
out
stos
sub
nop
and
sub
push
cmp
imul
xor
push
xchg
push
es
loopne
pop
push
pop
sub
pop
imul
lods
lret
xor
sbb
outsb
stos
jno
add
pop
sub
nop
mov
rep
xor
lock
sbb
and
add
nop
jp
adc
je
inc
cmp
fstps
jecxz
sarb
xchg
filds
fildll
call
dec
fdivs
fistps
adc
test
pushf
fs
ljmp
lods
jge
add
int
jmp
dec
cmpb
rorl
repz
cwtl
cmp
in
mov
out
add
dec
test
test
mov
lock
ljmp
bound
push
mov
or
fld
ror
pop
es
push
sahf
cmpsl
pusha
adc
mov
cmp
in
scas
mov
inc
sbb
push
mov
sub
inc
inc
sub
aam
int
mov
dec
lahf
push
subb
clc
pop
cwtl
sub
lcall
lods
scas
clc
pop
stos
mov
out
fsubl
sbb
dec
push
adc
minps
add
mov
lret
test
rolb
sbb
test
push
pop
xchg
mov
shll
shrb
outsl
mov
fwait
sbb
lcall
jmp
push
orb
pusha
jl
outsl
adc
xchg
aas
in
mov
test
out
int3
ror
ja
setl
test
inc
enter
add
push
mov
or
jne
cli
pop
mov
daa
adc
ror
in
daa
lods
fstpt
mov
js
xchg
movsb
push
out
jmp
sub
bound
rclb
shlb
insb
fwait
dec
jnp
stos
daa
jle
paddw
sub
aam
test
xchg
fisubl
push
add
dec
jae
xorl
mov
mov
mov
mov
and
and
imul
scas
aad
pusha
push
dec
sbb
call
lret
rorl
inc
scas
and
jo
inc
pop
or
or
dec
xchg
fidivrl
xchg
xchg
xchg
fisttpll
mov
nop
sbb
rclb
rorb
pop
mov
fsubl
inc
leave
mov
ret
rclb
lcall
jmp
push
sbb
jns
or
xchg
das
add
fistl
int3
sahf
xor
outsb
jnp
mov
mov
inc
add
and
test
push
sbb
cmpsb
jg
cmpsl
in
daa
imul
pusha
icebp
imul
insb
xchg
jno
sbb
push
aaa
outsl
cmp
xor
movsl
or
and
pusha
nop
push
scas
inc
add
adc
xor
loope
cmp
dec
pop
loop
cli
scas
dec
pop
push
push
subb
xor
sub
in
sub
push
adc
incb
mov
andb
sbb
pop
add
jp
and
cltd
push
mov
or
sub
dec
cld
pop
enter
lds
push
dec
insl
mov
sbb
adc
jmp
jg
sbb
push
lods
mov
xchg
cltd
push
adc
cmp
add
hlt
cmp
test
mov
lret
stos
rcll
aad
jns
inc
or
dec
pusha
cmc
dec
mov
add
outsw
inc
smsw
jo
aam
mov
pcmpgtb
add
fdivp
popf
data16
mov
test
out
in
cli
ret
jl
call
sahf
sti
loop
fs
jp
lock
dec
pop
pop
mov
in
xchg
imul
dec
pop
repz
gs
repnz
sbb
test
and
shrl
hlt
mov
pop
or
cs
outsl
jle
nop
push
pop
clc
dec
add
inc
inc
dec
movsl
mov
xchg
push
mov
int3
jns
jecxz
pusha
insl
cwtl
adc
or
ljmp
fnsave
inc
aas
xor
push
pop
pop
xchg
scas
inc
push
fld
inc
sbb
cld
push
jb
popf
ljmp
push
rcl
ficoml
mov
mov
addr16
mov
or
mov
pop
cmc
mov
pop
das
sbbl
inc
adc
and
jns
fsubs
mov
add
iret
ret
popa
in
es
add
insl
sbb
push
dec
jle
adc
xor
iret
icebp
adc
js
in
ss
mov
arpl
mov
pop
dec
adc
sbb
sub
add
inc
lahf
push
fstpl
pop
clc
xchg
insb
notl
or
or
imul
pusha
and
push
in
aaa
ret
bsf
cltd
add
mov
scas
outsb
cltd
mov
mov
nop
fldcw
pop
adcb
lahf
mov
jns
sbb
rcrl
int
add
add
jns
xor
sbb
divl
ret
mov
xchg
mov
mov
or
pop
xchg
ja
stos
ljmp
mov
or
into
mov
loop
dec
aam
and
sub
add
and
jns
ret
and
sbb
push
andl
xchg
pop
iret
adc
xchg
outsl
jp
out
mov
stos
cmpsb
mov
cmp
in
lds
fildll
gs
lods
inc
mov
int
mov
jae
fsts
popf
inc
mov
test
push
loope
mov
and
gs
scas
cmp
fsts
ret
xchg
or
js
ret
ja
scas
setle
imul
jp
sbb
xor
ror
xchg
pusha
xchg
xchg
in
test
das
pop
cmp
jg
lds
sbb
sub
jp
das
cmpsb
and
xor
mov
sub
sbb
cwtl
inc
cmpl
xor
or
adc
fmulp
mov
dec
fnstsw
insl
pop
divl
cmpsb
mov
scas
push
and
outsb
dec
movsb
fcmovne
lahf
inc
sub
jle
add
in
push
jmp
jnp
aam
pop
into
cmp
mov
push
jl
jmp
cmp
xor
cmc
mov
dec
and
push
mov
push
xorb
sub
and
adc
sahf
movsb
inc
stc
pop
outsl
popa
inc
js
into
sbb
xchg
aas
push
loope
xlat
mov
sub
mov
jno
mov
add
cs
jmp
and
jns
jp
popf
xchg
ljmp
and
push
mov
adc
subl
inc
jmp
and
mov
or
sahf
loope
imul
add
mov
aas
dec
mov
cmpsl
adc
movsl
imul
subb
pop
and
shrl
push
or
shll
inc
cmc
adc
push
outsl
pop
pop
sub
add
mov
imul
fisubrs
shll
sub
mov
fiaddl
out
mov
push
xor
dec
cmp
imul
popf
hlt
adc
repz
cmp
pop
mov
movsl
popa
imul
inc
jp
fstl
xchg
mov
fcompl
in
jnp
subb
mov
leave
ss
into
adc
cs
nop
xor
mov
inc
pop
cmp
lret
xlat
mov
cmpsb
xor
fwait
mov
adc
movl
or
cltd
sbb
sbb
iret
jo
pop
sub
inc
popf
push
fnstsw
or
loope
pop
cmp
dec
jo
je,pt
xor
shrl
xor
div
in
iret
std
gs
cwtl
mov
clc
mov
push
adc
xor
dec
jg
inc
lret
xchg
movsl
das
mov
into
mov
and
lock
ja
das
mov
cmp
mov
daa
sbb
lock
inc
es
cli
mov
dec
jns
mov
arpl
mov
cld
pop
push
push
mov
xchg
mov
mov
addr16
shr
fwait
adc
cmpsl
imul
mov
mov
adc
fldl
aam
xchg
mov
das
ljmp
xor
or
out
mov
and
bndstx
dec
cltd
cmp
mov
xchg
fildll
xchg
mov
push
lcall
lds
cmc
push
mov
mov
pop
arpl
call
mov
xor
inc
or
pop
xor
stos
call
mov
fnsave
inc
lods
pop
inc
je
ja
lret
xlat
jl
inc
notb
outsl
or
or
mov
xchg
dec
mov
in
stc
ret
js
mov
mov
dec
enter
insb
push
in
repz
xorl
sub
pop
lret
movsb
addr16
mov
mov
jno
jle
gs
jp
pusha
or
out
dec
dec
adcb
movsl
ret
xchg
xchg
fidivrs
push
xchg
nop
popfw
insb
mov
pop
push
and
out
stos
std
xor
insb
jg
sbb
push
cmp
fidivrl
aam
adc
sbb
out
dec
pop
out
roll
dec
arpl
sbb
or
aas
push
ficompl
lcall
addr16
arpl
rolb
mov
sbbb
stos
sbb
hlt
ja
loopne
rcr
xchg
jbe
xor
mov
adc
adc
jo
aas
or
inc
je
cld
or
int3
je
iret
dec
dec
mov
mov
add
xchg
push
add
movsb
data16
inc
mov
add
in
cmc
es
jbe
mov
pop
das
imul
rolb
xlat
sahf
sub
mov
sbb
and
lahf
jbe
cmp
push
rcrb
test
test
mov
jcxz
pop
xchg
dec
cltd
js
sbbb
mov
inc
fildll
sub
sub
imul
xchg
adc
mov
pop
orb
add
dec
or
push
push
sub
sbb
fisubrs
and
pop
pop
mov
cli
cmp
fcompl
inc
push
sahf
test
test
lods
mov
jg
outsb
inc
mov
add
jge
sub
mov
mov
pop
mov
lret
daa
roll
mov
orb
xchg
into
sub
cmc
fdiv
xorl
mov
outsl
xor
loop
setl
and
push
imul
lods
iret
xchg
mov
mov
sbb
sub
jns
fsubs
pop
sti
inc
pop
push
inc
xchg
cld
cmp
loopne
inc
pop
fisubs
std
imul
loopne
ss
jge
js
nopl
es
cmp
je
xlat
mov
fs
mov
xor
sbb
mov
stos
xchg
aad
add
nop
or
dec
ret
inc
jno
stos
flds
fsqrt
jecxz
dec
sahf
xlat
jle
adc
out
cld
or
mov
adc
pop
scas
pushf
gs
mov
push
into
pop
int
cmpsb
inc
and
nop
inc
push
loope
aas
stos
shll
lods
fxrstor
in
je
imul
or
ret
mov
mov
mov
add
fisubs
mov
jb
scas
push
pop
lock
fcmovnbe
das
xchg
enter
mov
mov
lods
fsubrs
jg
stc
es
gs
jmp
inc
shll
inc
out
icebp
ret
cld
inc
inc
lods
mov
test
jmp
mov
xchg
sarb
jno
aam
insl
leave
mov
loop
push
leave
fimuls
clc
or
sbb
gs
popa
loop
push
lods
out
bound
pop
xchg
out
add
xor
repz
outsl
fdivp
test
xchg
leave
mov
mov
imul
add
das
jo
and
cmp
fwait
stos
cmpsl
or
push
push
int3
add
cmp
pushl
mov
mov
ret
mov
xchg
sub
and
mov
std
and
ja
outsb
mov
inc
lea
mov
cmpsb
les
mov
insl
icebp
loopne
inc
jns
mov
cmp
out
jp
sub
push
pop
fldenv
push
fs
dec
aam
sbb
mov
cwtl
sti
adc
jle
in
xchg
stos
pusha
movsl
fimull
xchg
push
sbb
jmp
popa
push
add
sahf
push
test
popf
xchg
lret
adc
pop
jl
stos
jo
push
and
pop
and
ljmp
scas
pop
rclb
in
adc
mov
jno
fadd
cli
sbb
inc
call
rclb
and
orl
test
xor
push
xor
sbb
test
pop
xchg
or
ficomps
cmp
lds
mov
pusha
sarb
aad
movsl
leave
and
push
and
jbe
lcall
int3
inc
jnp
das
cmp
or
fadds
xchg
pushf
adc
lds
push
xor
xor
pop
push
sbb
in
push
cmp
mov
movsb
icebp
xor
inc
insb
daa
cmpsb
or
imul
jno
es
pop
adc
cmp
jns
jno
xchg
xor
fmul
inc
cmp
shll
insb
push
insb
lahf
xchg
popa
jl
sub
test
je
repz
imull
stos
mov
mov
loope
fnstcw
sub
push
jns
push
outsb
sub
loopne
adc
cmp
sbbb
fildl
mov
and
jp
shll
adc
sti
pop
inc
push
lcall
inc
bound
sahf
daa
divl
imul
mov
add
cs
jne
or
ss
xor
xchg
fcomp
mov
idiv
mov
lret
pop
rcr
xchg
mov
pop
jns
idiv
xlat
into
or
das
cmc
mov
and
outsl
fisttpll
loop
test
fs
mov
jg
dec
sub
mov
cli
push
out
stos
scas
cli
pop
xchg
xor
test
ss
mov
xchg
jecxz
jecxz
inc
and
jl
std
xchg
fcoms
cmp
sub
repz
outsb
xlat
sbb
pop
fistps
xlat
push
push
mov
lahf
punpckhdq
lods
in
adc
mov
aad
inc
ficoms
nop
out
nop
dec
and
int3
inc
test
xchg
fnstcw
sub
in
scas
les
xlat
lea
inc
call
inc
sbb
stos
xchg
sbb
inc
inc
sahf
pushf
adc
xor
sub
add
inc
stos
mov
inc
outsb
nop
cltd
aas
dec
ret
call
jmp
pop
cmp
je
icebp
loope
cmp
nop
std
mov
mov
mov
nop
cmp
sbbl
ja
jb
jne
and
fidivl
or
jne
pop
mov
daa
out
scas
and
fidivs
push
mov
lret
insl
shrb
pop
cmpsl
pop
cwtl
push
mov
cltd
loope
cld
insl
or
ja
int3
mov
std
mov
movsl
lcall
xchg
sbb
aam
mov
mov
sub
fst
dec
jp
dec
popa
jae
cs
stc
ljmp
inc
lods
pop
mov
out
push
movsb
outsl
push
jge
dec
psubusw
add
fiaddl
mov
pop
xchg
aad
dec
mov
ja
mov
dec
xchg
enter
repnz
sbb
out
push
stc
sbb
add
push
aaa
xor
adc
hlt
xor
push
decl
pop
adcb
nop
fsts
insb
loop
mov
mov
xchg
in
dec
mov
inc
jmp
mov
mov
dec
jge
cmc
jne
sbb
cltd
out
dec
sbb
jns
test
lods
adc
xchg
out
xor
inc
or
popa
addr16
mov
mov
jns
mov
inc
dec
cmpb
and
inc
adc
pusha
inc
xchg
leave
fisttps
aas
jmp
sub
fwait
jae
jb
push
sbb
rcll
ja
push
push
sahf
push
lock
jecxz
xchg
and
inc
out
push
sub
and
in
popa
cs
push
ss
iret
rcrb
pop
push
adc
inc
repz
xchg
arpl
inc
and
or
xor
pop
loop
add
test
repnz
sbb
fiadds
faddp
push
aam
jnp
lret
fsub
repnz
leave
cltd
ret
mov
or
sub
jge
push
sbb
xchg
pop
or
mov
dec
dec
mull
push
push
pop
out
fsts
mov
jb
fs
adc
js
jns
or
movsb
jl
cmovae
repnz
mov
jbe
insb
aaa
xlat
daa
pop
jge
cmp
mov
test
cmp
lret
movsl
test
pop
mov
lahf
mov
in
push
sti
sub
push
aas
pop
cmp
adc
add
ret
out
xchg
pop
dec
pop
or
loope
xchg
and
ret
inc
sub
jecxz
lcall
shrb
add
mov
jmp
add
push
and
mov
int
test
sub
inc
es
leave
and
push
test
mov
lock
mov
sahf
lret
test
push
ja
loop
sbb
sarl
mov
and
sarb
ss
sub
cmp
xchg
ds
mov
sbb
shrl
mov
cmp
out
push
pop
cmc
push
adc
outsb
stos
and
shl
cs
nop
pop
xchg
fs
out
add
mov
data16
sahf
mov
popf
enter
imul
hlt
inc
cli
sub
xor
movsl
cmp
sbb
mov
push
scas
hlt
gs
push
lcall
or
adc
or
scas
mov
repz
imul
xchg
fisubs
xlat
cmp
imul
in
or
shrl
push
inc
aad
sbb
nop
rorl
inc
xchg
sub
hlt
clc
mov
aam
movsb
imul
repnz
ret
hlt
sbb
in
adc
enter
pop
call
inc
xor
inc
mov
aas
call
push
cli
dec
aad
lea
jno
push
sub
idivb
arpl
pop
lock
sbb
mov
out
mov
cmc
je
dec
inc
xchg
je
loope
jle
pop
int
mov
mulb
lock
das
push
push
mov
ficomps
and
aaa
ffree
popf
out
pusha
es
xchg
fldcw
mov
dec
push
push
cmpsl
pop
ret
or
jo
cmp
cwtl
cmpsl
sarb
out
sub
push
das
add
iret
repnz
sub
xorb
out
inc
outsl
pop
clc
addl
ljmp
jge
vcmppd
aad
xchg
jge
xor
or
mov
jp
test
push
daa
mov
lds
inc
dec
sbb
call
xchg
pop
or
imul
mov
adc
fwait
or
xchg
push
pushf
pop
jecxz
mov
cmp
jo
ljmp
cltd
repnz
in
xor
adcl
mov
adc
pop
jae
xor
inc
push
dec
mov
sub
or
mov
decl
xchg
mov
ss
sub
mov
jns
ds
in
subl
sbb
dec
aaa
in
addr16
jl
mov
mov
mov
negb
jle
lea
fistpl
fildll
lds
jmp
divl
ja
loopne
add
mov
outsl
push
fnsave
xchg
and
pop
dec
insb
sarb
scas
idivb
push
scas
pop
and
iret
das
pop
loopne
and
pop
mov
incb
arpl
and
cmp
push
xorl
xchg
dec
inc
in
sbb
call
fs
push
lds
mov
mov
jnp
bswap
adc
es
mov
shrb
inc
test
mov
add
in
int3
xor
push
add
xor
adc
scas
inc
into
mov
cwtl
cmp
lea
movsb
pop
in
inc
gs
inc
in
stos
jno
enter
daa
pop
push
cmp
cmc
mov
cmp
push
jae
and
inc
and
lret
jle
into
sub
pop
imul
xor
into
mov
inc
pop
or
js
packssdw
lea
loope
insb
push
sub
dec
push
das
js
outsb
std
jbe
adc
inc
lcall
sbb
into
add
js
and
jg
xor
dec
pop
fsubrl
outsl
mov
pop
inc
insb
lcall
std
fcompl
insb
sti
sahf
insl
cld
adc
cmp
xchg
jg
mov
mov
nop
xchg
mov
fisubrl
ss
xchg
sarb
push
pop
imul
sub
xchg
roll
push
mov
mov
into
shll
push
xor
inc
lcall
or
stc
inc
push
dec
or
jp
test
mov
mov
pop
out
ret
ret
xor
fwait
ss
push
cltd
sti
dec
insl
addr16
sub
popa
gs
out
loopne
sub
pop
cmp
jp
movsl
xchg
adc
arpl
xchg
shrl
sbb
shlb
xlat
jl
mov
adc
mov
jne
mov
mov
adc
jbe
adc
sarb
dec
fistpll
das
fldenv
and
cmpsl
jecxz
lea
dec
call
inc
push
mov
adc
decb
data16
fisttpl
cmp
inc
movsb
sub
aas
xchg
or
shrb
je
std
jmp
gs
std
testb
jnp
add
mov
sub
mov
push
and
sub
or
add
lock
pop
jle
aam
sbb
dec
in
ret
sub
icebp
rcrb
sahf
movsl
aaa
dec
cmp
mov
inc
arpl
ret
adc
test
mov
aas
mov
jecxz
dec
shlb
mov
cli
aam
add
mov
loope
push
adc
fstpl
jne
clc
mov
dec
inc
ljmp
push
xor
stos
es
pop
out
cs
dec
xchg
les
seta
xchg
cltd
adc
test
fsub
xchg
or
test
add
pop
enter
pop
shrl
and
jno
inc
fwait
aaa
repz
aas
push
sbb
mov
decl
xchg
xor
jmp
xor
arpl
repnz
mov
cmpsl
pushf
ja
jno
dec
mov
add
mov
dec
inc
in
jne
pop
addr16
fcomi
out
or
bound
ja
in
add
adc
sub
inc
subl
cmp
mov
or
inc
jnp
xor
in
ss
pusha
jbe
rcr
lret
xchg
int3
push
pop
xchg
ret
jae
cmpb
setge
pop
jl
in
xor
sbb
arpl
or
daa
pop
imul
inc
scas
daa
mov
push
divb
adc
or
or
xor
pop
ret
inc
or
js
push
popl
imul
std
jg
push
add
and
push
call
sbb
lds
pop
jp
loop
mov
in
push
int
repnz
dec
adc
xchg
cmpsl
hlt
mov
mov
and
sbbl
mov
loope
rorb
int3
and
jl
or
push
fcompl
jae
addr16
jo
sbb
and
fisubs
sahf
cmp
out
cmpsb
movsb
xchg
cmp
cmpsb
xchg
dec
sub
xchg
push
mov
daa
pop
fistpl
cmp
fldenv
jno
pop
pop
jl
fmull
movsb
adc
popf
and
xchg
push
mov
icebp
cltd
push
aad
in
xor
pop
cmp
jae
cltd
pop
xor
inc
js
adc
push
cmpsl
loope
imul
stos
xchg
sub
and
outsb
pusha
xor
push
out
pop
int
sbb
or
mov
popa
add
fidivl
mov
push
lret
int
pushf
mov
pop
ret
lcall
sub
inc
sahf
jl
dec
stos
inc
sahf
adc
test
jmp
jg
inc
stos
mov
daa
icebp
mov
dec
dec
adc
out
ss
je
cmp
or
idivl
jnp
lret
inc
popf
sub
mov
add
into
mov
cmpsl
cmc
clc
call
xor
cmpsb
outsl
jp
adc
stc
nop
dec
fs
inc
sahf
add
xor
data16
out
imul
out
adc
cli
cmc
jp
xor
or
test
sti
cld
movsb
mov
gs
fdivp
loopne
xchg
xchg
pop
pop
push
adc
inc
ljmp
xor
sbb
or
or
cmpl
mov
loopne
pop
jmp
je
cs
imul
ret
ja
jbe
jg,pt
inc
mov
std
pop
les
fcomps
stos
iret
or
call
shll
adc
pushf
adc
pop
pop
scas
and
adc
mov
lods
clc
jb
fs
dec
ret
adc
dec
addb
mov
hlt
testb
test
loope
pop
js
mov
mov
lock
lcall
int
mov
sbb
jo
addr16
and
out
ret
mov
xchg
mov
test
dec
pusha
mov
cmpsl
pop
movsl
cmp
push
fimull
push
test
xor
shr
mov
add
rorb
add
mov
mov
mov
std
fldl
or
xchg
jmp
aam
mov
pop
jge
fwait
mov
stos
adc
dec
loop
or
push
push
adc
addb
invd
cltd
dec
cmpsl
push
test
lret
xchg
sarl
dec
ljmp
xchg
pop
fs
mov
roll
aaa
negl
loop
scas
add
cmpsb
mov
in
rcll
xchg
push
iret
mov
jmp
and
lret
inc
jmp
scas
or
es
jne
xchg
mov
push
xchg
in
out
jmp
sbb
ficoml
in
fsubl
cmpl
out
and
or
arpl
addr16
jg
mov
aad
cltd
jns
jnp
lret
pop
imul
adc
fsts
xchg
mov
or
outsl
jg
pushw
popf
das
cld
mov
pop
cmc
jg
cmp
push
and
mov
xchg
arpl
icebp
jmp
scas
mov
push
cmp
lea
iret
in
loop
ret
xchg
fidivl
inc
adc
popf
arpl
sub
adc
fs
push
inc
cmpl
xchg
mull
sbb
ja
pop
push
mov
repz
xor
cmc
dec
push
repnz
jecxz
adc
hlt
out
mov
leave
jbe
mov
jge
test
mov
ja
or
jge
int3
or
pop
dec
ja
rorl
call
and
scas
add
jo
xor
cmp
out
inc
sbbl
cmpsb
adc
clc
in
js
out
enter
daa
pop
rorb
jno
jecxz
jl
mov
ds
cmp
movsl
cmp
mov
fdivs
adc
push
je
sub
mov
add
cmp
sub
js
cmpsl
xor
or
dec
mov
sub
fldl
scas
movl
and
mov
sbb
pop
inc
add
nop
xchg
and
fmul
sbb
dec
enter
mov
push
lods
mov
fdiv
add
sbb
cmpsb
sahf
mov
leave
test
lret
or
add
mov
icebp
popa
mov
mov
or
adc
cli
cmp
pop
mov
lret
xor
xor
orl
mov
cmc
mov
mov
movsb
loop
arpl
fs
or
aad
push
mov
lods
push
push
testl
sub
jmp
loopne
jg
scas
inc
mov
stos
mov
or
cmp
pop
jns
lock
xchg
sbb
ljmp
inc
mov
cmpb
push
aaa
xlat
cli
fdivrs
mov
dec
mov
jmp
aam
cs
test
pusha
sub
nop
push
add
dec
popf
inc
dec
inc
shl
leave
fsts
inc
les
jecxz
jecxz
shl
lods
das
and
pop
push
mov
movl
push
adc
lahf
inc
fucomi
sub
dec
inc
stc
popf
inc
ficoml
aas
lds
dec
cmp
fdivl
pop
roll
xchg
testb
jbe
adc
shll
cmpl
cld
outsb
mov
dec
mov
das
icebp
insb
sbb
cli
add
mov
arpl
ret
dec
add
inc
subl
aas
dec
pop
les
mov
cmc
je
cld
sbb
mov
pop
push
and
and
xchg
rcr
addb
jno
daa
aam
mov
mov
ficomps
clc
xor
out
sub
ljmp
and
stos
add
mov
xchg
push
push
sbb
jg
andnps
testl
xorb
test
sub
mov
into
adc
dec
push
and
test
xor
xchg
mov
ds
movl
imul
add
ror
decl
popa
or
in
xor
dec
pop
xchg
mov
repnz
pop
jne
sbb
jnp
pop
pop
daa
dec
mov
xchg
inc
adcb
in
mov
mov
dec
or
mov
bound
enter
mov
aam
in
push
cmc
orl
shl
xchg
stos
adc
push
test
out
jp
mov
mov
xor
jnp
sub
jle
dec
jns
popa
in
ja
lods
xor
or
and
mov
xchg
xchg
pop
xorl
popf
push
orb
arpl
enter
cmpsb
and
push
ja
loopne
fildll
test
add
dec
lods
pop
ret
mov
xor
xor
arpl
sub
or
and
rcr
rolb
xchg
dec
xor
sbb
std
pop
adc
out
lds
xor
mov
je
stos
leave
jne
cmc
hlt
cmp
mov
jge
pop
dec
sbb
fbstp
ljmp
add
stos
push
dec
out
jno
mov
sbb
and
mov
les
sbb
movsb
test
filds
mov
cmpsb
xchg
test
in
pop
shlb
and
daa
pop
dec
int
das
sahf
enter
xor
inc
cmp
outsb
in
ds
and
add
xor
pop
push
inc
push
jmp
push
imul
mov
and
xor
roll
push
das
xor
pusha
aad
sub
loope
sub
les
es
adc
mov
mov
sbb
aaa
call
and
sub
test
sub
jp
pop
rcl
lcall
icebp
fcompl
adc
or
jp
dec
cltd
arpl
push
mov
out
sbb
in
and
sbb
xchg
fadds
ljmp
lret
sahf
fwait
mov
outsb
dec
or
iret
pop
into
jp
shl
xchg
push
xor
nop
inc
outsl
cmp
popa
loop
stc
insb
xchg
add
stos
fwait
jb
push
mov
loop
cmp
out
mov
inc
lcall
push
pop
cmp
stc
mov
pop
pusha
insl
xchg
push
test
gs
movsb
loopne
sahf
add
cwtl
add
adc
imul
xchg
int
or
sub
andl
mov
in
mov
mov
push
clc
dec
cs
adc
lods
nop
sub
adc
inc
and
test
pop
mov
bound
faddp
dec
mov
sub
cli
and
sbb
movsb
inc
dec
inc
inc
inc
cmc
daa
fs
fs
jb
inc
sub
je
xchg
test
sar
neg
mov
leave
insl
xchg
mov
out
pop
dec
in
out
mov
popf
mov
out
mov
test
rcr
lea
rcrb
lret
mov
out
in
ret
fnstcw
push
es
push
rorl
andl
mov
int3
xor
cld
inc
pop
inc
mov
jnp
pop
and
rorb
shlb
or
mov
inc
pop
push
pop
jge
fstl
fimuls
xchg
imul
pop
popa
insb
out
lods
jno
imull
push
mov
xchg
cltd
mov
inc
lfs
push
cltd
mov
fildll
mov
cli
xchg
inc
lea
pop
ss
sub
xchg
insl
sti
sbb
outsl
rcl
das
ds
jb
sbb
sub
add
fsubl
mov
sub
xor
mov
xchg
push
dec
jmp
mov
pop
pop
dec
ja
sbb
dec
jl
jmp
or
out
cmp
in
mov
jne
shrl
inc
ljmp
or
add
jo
sbb
sbb
push
or
add
mov
stc
pusha
mov
mov
sub
sbb
push
dec
push
fbld
rclb
test
adc
push
in
push
pusha
popf
jge
mov
sahf
inc
xchg
dec
cs
and
loope
insb
pop
dec
imul
sbb
lret
add
adc
jnp
ret
sbb
jmp
mov
inc
xor
mov
inc
jg
lret
jle
xchg
movsl
sbb
sbb
push
or
stos
sub
lock
xor
xchg
xor
mov
and
hlt
test
pop
push
cli
sbb
jge
insl
pop
sbb
pusha
jno
test
dec
xchg
add
sub
dec
push
add
push
test
xor
jle
push
scas
mov
loop
cmp
in
xor
mov
sbb
mov
push
nop
adc
push
inc
les
bound
sarl
xlat
cmp
fs
dec
icebp
leave
and
and
lahf
dec
ror
push
sbb
ja
jecxz
rclb
xor
adc
mov
or
cmp
loope
inc
cmp
sub
mov
test
mov
out
jecxz
xchg
push
mov
xor
mov
es
int
insb
sub
pop
cmp
pop
aas
in
lcall
push
inc
dec
popa
sbb
add
stc
jbe
test
jnp
jg
popl
mov
ds
cltd
adc
lods
pop
ss
push
cmp
cmp
dec
idivl
popa
lret
test
mov
sti
into
pop
into
aad
dec
bound
xor
cs
stc
and
xchg
fs
pop
mov
lods
and
mov
insl
out
and
mov
xchg
cmp
adcl
mov
pusha
gs
sbb
adc
ss
mov
lret
mov
mov
repz
out
int
xor
mov
mov
sub
ret
fsubl
and
jmp
loopne
add
xchg
nop
or
cmp
in
inc
imulb
loope
adcb
jecxz
gs
mov
testl
ds
xchg
ficoms
push
and
push
cmp
inc
loop
pop
inc
lock
inc
aad
cmpsl
inc
adc
aas
add
daa
dec
sub
mov
testb
lea
mov
sub
pop
int3
lret
or
and
pop
and
lock
imul
and
add
and
jecxz
ret
push
fsubrl
dec
pop
dec
push
sahf
sti
cmpsl
push
push
cmpb
push
inc
cld
outsl
push
fdivrl
sahf
xchg
pop
ja
pop
pop
adc
imul
mov
aam
mov
mov
in
lods
push
push
and
mov
out
xchg
test
arpl
sbb
popa
and
lods
fcoml
stos
loop
mov
mov
test
push
lahf
xchg
inc
add
testl
mov
aam
pop
dec
pop
ja
test
mov
xchg
sbb
out
roll
and
out
push
lret
js
add
notl
mov
or
insl
cmpsb
xor
and
xchg
push
push
adc
loopnew
pop
sbb
cld
ja
pop
mov
inc
scas
xor
or
int3
popa
mov
iret
sub
jecxz
jne
mov
out
xchg
icebp
in
jns,pn
shrl
sub
dec
out
push
loopne
xchg
je
or
jnp
addr16
popf
jp
enter
in
mov
popa
das
pusha
jle
fidivs
outsl
xor
pusha
loop
dec
filds
xchg
sbb
sbb
jl
leave
xchg
out
lods
out
inc
rcr
push
scas
idivb
movsb
cmp
fldcw
push
sbb
mov
and
stc
insb
xlat
adc
imul
pushf
push
adc
adc
xor
or
ret
out
sahf
movsw
inc
xor
pop
bound
mov
je
pop
rcll
jge
fidivl
lods
rclb
push
dec
xlat
ficoms
xchg
xchg
sbb
filds
repnz
leave
arpl
hlt
iret
cmpsb
hlt
push
dec
jge
jbe
rdtsc
jge
mov
aaa
push
sbb
add
es
les
push
push
push
mov
scas
sahf
movsb
mov
neg
cmp
fstp
movsb
mov
scas
pop
cmpsb
popf
aad
in
sub
xchg
mov
push
cmp
push
data16
test
xor
movsl
push
lahf
stos
and
fwait
push
push
in
and
push
add
xor
cltd
jg
lods
pop
into
xchg
cmp
loop
pop
enter
push
lret
mov
mov
sub
jbe
outsb
in
popf
das
adc
mov
jno
inc
add
sbb
adc
lret
push
test
int
jp
sub
lea
mov
repz
mov
mov
repnz
sahf
pushf
mov
test
xchg
test
test
jg
pop
pushl
loope
dec
mov
dec
rclb
jge
and
mov
xor
imull
xor
call
mov
inc
or
mov
into
inc
negb
adc
adc
nop
jnp
outsl
mulb
loop
insb
sub
fisubl
xor
roll
je
pop
data16
and
lods
mov
xchg
sub
xor
fdivrp
mov
fsubl
jae
sub
scas
sti
clc
pop
push
mov
add
imul
cs
pop
inc
xchg
nop
repz
sbb
idiv
inc
xlat
mov
js
dec
pop
cmp
mov
jmp
mov
cs
xor
sub
dec
mov
xchg
rcr
mov
cld
data16
popf
dec
mov
adc
dec
cmp
aam
xchg
mov
xchg
test
sub
mov
loop
pop
in
stos
inc
pop
or
sub
sub
cli
adc
cmp
shl
inc
std
notb
xor
inc
jae
cwtl
inc
cmpsl
and
test
cmpl
sub
jnp
push
mov
loope
out
fs
pop
das
mov
fsubl
sub
add
xor
divl
es
or
insl
and
cmpsl
push
cltd
out
mov
jp
pusha
cld
lcall
mov
aad
bound
jle
arpl
push
xor
sub
aam
xor
loope
js
loope
inc
clc
in
sub
mov
sub
add
lods
inc
out
in
sar
fucomp
sbb
mov
push
jp
mov
jb
mov
lods
or
sbb
pop
inc
xchg
add
dec
xchg
test
iret
addl
fnsave
pop
enter
and
leave
push
outsb
xor
fidivs
ljmp
pop
xor
mov
xor
or
push
mov
mov
ja
aad
xor
sbb
dec
bound
inc
inc
fld
or
jle
mov
test
dec
mov
jne
movsb
inc
mov
inc
loopne
gs
es
cs
xchg
cmpl
adc
jnp
fisttpl
sub
push
jp
repz
mov
hlt
push
mov
adc
push
jle
xchg
lock
imul
gs
xchg
jmp
outsb
jmp
mov
iret
cmp
jb
lcall
xor
stos
or
frstor
cmpb
imul
xchg
das
mov
iret
imul
pop
aad
hlt
inc
inc
aas
cmp
mov
adc
xor
xchg
aad
inc
jge
scas
fucompp
lea
push
popa
lahf
sbb
xchg
pop
push
lods
lahf
fidivs
dec
push
lds
iret
repnz
insl
pop
leave
fcmovb
jmp
push
cwtl
and
jbe
adc
jge
out
sbb
pop
or
faddl
dec
pusha
pop
int3
mov
sub
mov
push
dec
lods
jns
dec
mov
scas
jge
or
jge
inc
cmp
mov
mov
lcall
dec
es
daa
push
int3
sahf
cmp
mov
jl
sbb
ds
pop
mov
inc
sbb
lahf
lea
push
rclb
popa
in
int3
adc
xor
test
dec
pop
cmc
jl
js
enter
loopne
push
and
cmpsl
sub
jmp
add
dec
sbb
adc
addr16
inc
mov
mov
mov
mov
fucomi
push
fstps
int
imul
push
jne
pop
cmp
adc
or
mov
sbb
arpl
sahf
aas
in
insb
test
jnp
jg
sub
loop
ret
mov
mov
popa
in
int3
xlat
shll
jecxz
mov
fdivs
outsl
jge
fcomi
add
xchg
pop
or
sbb
and
mov
xor
mov
outsl
aad
or
stc
xchg
loop
fs
adc
add
popaw
test
lods
out
xor
out
push
cli
hlt
or
xor
jmp
pop
adc
sti
addr16
cmp
psrad
lea
pop
cmc
cmpsb
fcoms
aad
dec
imul
jmp
jge
ficoml
pop
fldt
xlat
negb
add
notl
sbb
aad
mov
rorb
xchg
mov
cs
f2xm1
aad
les
das
jecxz
sbb
mov
mov
into
cmp
add
ret
decl
and
movsl
cmpsb
sbb
fistpll
inc
inc
fldenv
jb
mov
and
rolb
sarl
adc
std
jmp
and
push
push
pop
mov
bound
lods
cmpsb
jl
ljmp
mov
mov
lock
pop
das
insl
cmp
mov
fistpll
jl
fisubl
es
insb
insl
or
adc
inc
enter
pusha
lock
push
dec
cwtl
cld
lds
cli
mov
in
mov
fdivrl
mov
shrb
xorb
dec
jnp
aam
push
bound
movsb
ljmp
and
xor
popa
mov
push
lods
mov
cmp
adcb
push
push
repz
psrlw
or
sub
pop
mov
fimull
icebp
test
or
jl
pop
sbb
aam
xor
dec
pop
jae
je
push
ss
push
adc
xchg
add
sub
xor
xor
ljmp
mov
mov
nop
dec
lahf
ja
fs
dec
push
shrb
inc
fsubl
cmp
xchg
sbb
jne
and
pusha
push
out
inc
ja
bound
add
insl
aas
ret
in
stc
push
orl
out
popa
adc
outsl
jecxz
mov
xchg
jp
rorl
cmpsl
sub
jo
or
jle
inc
in
or
pusha
sbb
mov
xchg
mov
iret
jb
test
lea
adc
cwtl
loope
repnz
xchg
cmpsb
imul
lods
std
and
scas
jns
or
pop
push
adc
sub
movsl
scas
jbe
or
call
arpl
push
fwait
inc
cmp
out
addr16
ret
push
cld
push
ficompl
xchg
sbb
pop
adc
fcompp
mov
lds
sbbl
mov
ror
leave
push
nop
gs
push
out
mov
mov
aas
jge
stc
call
aaa
out
lock
leave
add
jb
int3
mov
jae
push
cs
xor
jo
mov
je
adc
movsb
aam
test
mov
cmpsb
mov
dec
dec
enter
daa
push
push
bound
sti
xchg
les
stos
xor
mov
lret
push
mov
movsl
pop
daa
dec
and
ss
lods
cmp
loope
enter
xchg
xor
sti
gs
add
dec
sarl
inc
and
inc
jns
push
xor
mov
sub
mov
rolb
pop
popl
mov
orb
sbb
pop
mov
and
lret
fcompl
jo
int3
lock
mov
lds
pusha
mov
fmull
fstpl
imul
lcall
cltd
pop
jg
jecxz
xor
push
lret
leave
mov
sbb
ss
insl
je
divl
cltd
imul
jge
insb
or
movsb
ss
push
and
cmc
mov
mov
outsl
mov
loop
push
lret
test
dec
inc
pop
xlat
xor
push
data16
sub
mov
aam
cli
daa
inc
int
adc
fs
push
pop
xchg
push
aaa
or
faddl
pop
adc
sub
test
xor
loopne
ljmp
xchg
push
or
sbb
insl
test
xlat
xor
popf
imul
frstor
jmp
xor
sub
mov
ret
adc
dec
js
lock
das
jne
daa
in
rol
push
push
jecxz
fstps
lea
repnz
mov
mov
adc
insb
pushf
adc
pop
sub
mov
push
rolb
cmp
aas
loopne
in
ljmp
je
andb
mov
std
xchg
cwtl
cwtl
mov
add
mov
ja
lods
test
js
pop
push
or
je
int
cmp
dec
das
dec
jne
mov
xchg
sub
ret
adc
jp
insl
out
sbb
jno
push
stos
jb
xchg
mov
pop
cld
lock
fnstsw
pop
xlat
add
sub
negl
mov
add
sub
aam
sub
jbe
addr16
cmp
das
mov
clc
pop
ja
xchg
gs
ljmp
js
sbb
subl
jecxz
add
push
xor
wrmsr
in
add
cltd
xchg
mov
xor
popa
mov
fisttpll
ret
pushf
xchg
ret
jecxz
add
dec
pop
push
xchg
push
mov
inc
add
dec
push
sahf
jmp
sub
or
ds
xchg
inc
sub
mov
in
mov
dec
ret
adc
push
mov
or
pop
dec
mov
and
scas
mov
xchg
dec
out
and
sub
hlt
adc
pushf
popf
sbb
out
and
xor
or
dec
addr16
push
jp
mov
xorb
fwait
test
jnp
js
jle
out
in
or
fbld
mov
xchg
dec
in
jae
xchg
in
push
clc
xchg
test
mov
push
aad
mov
and
xor
scas
fmull
mov
pop
pop
popa
iret
daa
fstpl
ret
cltd
pop
inc
mov
inc
push
popf
xchg
arpl
mov
inc
jns,pt
or
mov
rcr
insl
add
imul
ffreep
lods
push
and
outsb
xchg
push
mov
adc
sti
hlt
mov
mov
ss
jbe
jp
jge
lock
sbb
aaa
movsl
inc
loop
gs
rolb
jns
push
int3
lea
dec
adc
xchg
push
adc
jl
fcomps
pop
jo
lock
scas
cmp
and
mov
pop
rorb
cmpsb
es
in
loop
in
aas
or
daa
push
bound
jno
or
jl
cmc
push
cmp
clc
ds
and
movsl
add
and
or
pop
nop
test
bound
xor
xchg
sbb
enter
inc
decl
test
lret
loope
push
inc
sub
push
std
outsb
adc
rcrb
adc
mov
add
mov
test
fistps
int
cli
xor
inc
add
lcall
sbb
repz
cwtl
aad
sahf
test
pop
test
lret
out
jg
aad
mov
repz
mov
sbb
adc
mov
cmp
sub
xor
shl
sarl
sub
dec
les
cmc
imul
outsl
xchg
adc
out
stc
decl
bound
sub
and
lods
mov
dec
cmp
xor
aas
cli
pop
xor
ljmp
sti
lds
pcmpgtw
popf
xchg
rcrl
imul
xor
xor
flds
sbb
test
je
lret
dec
mov
in
int
xchg
jmp
sub
mov
aad
xlat
or
dec
xlat
dec
repnz
inc
add
les
fsubp
pop
fnsave
mov
and
call
cmp
mov
push
fsts
lods
or
fildl
jnp
pop
into
sahf
aad
icebp
lcall
jg
aam
cmp
into
mov
rcr
insb
jo
sbb
std
cmp
scas
cwtl
ja
jg
test
cmp
inc
jb
dec
addl
loop
mov
add
jmp
das
sub
inc
mov
movsl
and
ret
movsb
push
ljmp
sub
dec
cmp
jp
mov
decl
and
sbb
mov
sub
mov
ljmp
pop
ror
mov
aam
inc
test
mov
aaa
jae
sub
ret
scas
xlat
clc
xchg
iret
inc
xchg
movsb
mov
in
push
popa
fistpll
iret
lods
mov
out
inc
loopne
xchg
cld
xchg
rcll
movsl
les
popl
add
xor
int3
lock
test
dec
adc
adc
dec
mov
lahf
scas
xchg
fcompl
mov
xor
pop
leave
dec
and
push
sbb
arpl
incl
pop
xor
dec
mov
xor
rorl
or
sahf
mov
push
int
ja
jg
dec
cmp
or
mov
test
inc
jne
dec
jbe
into
mov
add
sbb
jns
dec
jne
daa
ljmp
test
sub
sbb
out
mov
cmpl
test
jmp
jnp
outsb
pop
jle
jnp
in
outsb
int
dec
call
ret
xchg
fs
test
pop
and
xchg
sbb
and
andl
mov
pop
mov
adc
movsl
stos
popa
dec
dec
and
push
dec
insb
cmpl
imul
scas
aas
out
push
cs
adc
rol
xchg
loop
jp
jge
popa
dec
xor
pop
or
dec
cwtl
or
add
inc
cli
addr16
add
xchg
pop
scas
sbb
sub
fwait
push
ficomps
addr16
lds
jecxz
mov
sub
out
leave
aas
mov
hlt
sti
xchg
ss
test
xlat
jge
lret
rcrl
push
aaa
fs
daa
add
add
int3
js
into
dec
adcb
lahf
jle
jo
cmp
and
push
mov
movsb
ljmp
cmpsb
test
imul
push
repz
cmp
sbb
nop
pop
jl
insl
push
sub
cmpl
insl
aas
push
and
out
sbb
sub
test
sub
insl
fwait
mov
jge
xor
out
pop
les
fsubrl
jo
loope
jae
sub
xor
xchg
or
outsb
js
sub
sar
sbb
hlt
xorb
sbb
or
les
push
push
loop
leave
int
xchg
mov
ret
pop
mov
popaw
push
push
in
fcompl
xor
sahf
sub
test
fldl
xchg
mov
mov
sub
mov
xchg
cmp
mov
mov
cmp
jecxz
fdiv
xor
and
push
pop
les
cmpsl
xor
int3
sbb
das
xor
inc
cmpsl
outsl
jb
pop
loop
cli
int3
stc
mov
add
iret
add
and
mov
add
out
xor
cli
aam
xor
xchg
sti
je
out
fs
push
gs
cmpsb
mov
sbb
pop
adc
les
mov
mov
xchg
pushf
out
push
sbb
jecxz
cmc
xlat
mov
sub
mov
mov
cmp
cmp
icebp
jecxz
cs
iret
mov
push
cld
adc
xor
fsts
pusha
and
imul
dec
call
mov
lods
sub
add
out
pushf
imul
inc
inc
js
insb
inc
xchg
ds
aas
push
and
dec
jnp
adc
fcom
sub
dec
negb
std
loopne
jmp
xor
insb
mov
loop
mov
in
sbb
shll
lret
aaa
aaa
aam
in
ja
add
lock
aam
or
jmp
mov
xor
adc
xor
test
imul
dec
cmp
cmpsl
push
int
mov
mov
mov
mov
icebp
arpl
mov
cli
mov
sbb
aam
ja
mov
xor
push
in
imul
jge
dec
clc
sarl
fsubr
push
iret
clc
popa
div
lret
xchg
in
lea
cli
out
test
push
std
push
out
stc
pmaxsw
ret
stc
scas
test
and
jecxz
loopne
and
decl
xchg
push
xor
sarl
xchg
pop
je
fcompl
cli
movsl
filds
jle
fs
inc
pop
xor
stc
jge
aam
xchg
xchg
loopne
jbe
dec
loope
mov
shrl
xchg
push
mov
inc
mov
lea
mov
add
dec
ds
xor
sub
mov
loope
shlb
xor
xchg
dec
pusha
in
pusha
daa
xor
mov
sub
sub
pop
xor
mov
push
jp
test
mov
pushf
jbe
icebp
add
daa
push
jle
add
in
aaa
xor
sahf
mov
aaa
inc
outsl
jmp
in
arpl
outsb
fcoms
jle
mov
mov
push
cmpsl
gs
aam
lods
and
lret
out
push
js
imul
push
jne
mov
mov
movsl
mov
fimuls
incl
push
arpl
inc
int3
inc
inc
xchg
call
push
jns
sbb
sbb
xchg
scas
lcall
lret
faddp
scas
dec
lds
stos
insb
mov
mov
mov
sub
aam
pop
jbe
mov
jge
mov
sbb
lods
xchg
or
testl
arpl
or
xlat
scas
outsl
xor
mov
faddp
and
imul
movsb
jne
sbb
cmpsb
sub
sbb
mov
push
enter
daa
push
or
xchg
repz
jl
mov
inc
fistpll
and
iret
xchg
sub
test
clc
std
fnstenv
mov
dec
cmp
pop
xchg
adc
js
sub
add
push
fwait
jl
add
jle
test
jno
out
cmp
rcrl
jo
sbb
decb
lahf
cmp
and
sub
int
sbb
cmp
or
push
xor
fmull
sbbl
lret
inc
pop
test
insb
adc
mov
xchg
xchg
stc
imulb
ss
test
cmp
sahf
jb
div
scas
add
cmpsl
ret
dec
shr
jp
jle,pt
or
dec
test
divl
ljmp
loopne
stc
insl
inc
jnp
js
inc
add
adcb
mov
mov
push
cli
shrb
xor
push
pop
sti
and
sbb
xchg
xchg
and
loopne
ret
jno
xchg
adc
adc
sub
sub
mov
imul
push
mov
sub
jne
in
mov
arpl
aad
test
nop
sub
xchg
dec
xchg
sbb
fxch
or
les
dec
jecxz
mov
mov
and
cmp
cmp
pop
ud1
adc
aas
pushf
adc
lret
pop
insb
pop
adc
ss
incl
inc
mov
push
aas
mov
inc
jae
repnz
je
in
dec
sarl
mov
lahf
xchg
std
xchg
cwtl
in
mov
and
jb
push
dec
pop
xor
lret
cmpsb
dec
push
mov
loop
mov
or
lock
adc
mov
mov
mov
test
insl
movsb
testb
or
cmpsl
push
movsb
bound
lods
pop
data16
jno
pop
mov
jo
or
mov
sbb
mov
jne
out
sub
sbb
fstpl
and
sub
clc
or
dec
xchg
and
loopne
lret
popa
or
dec
push
stos
jl
out
or
movsl
xchg
mov
push
shll
add
movsl
mov
xchg
out
clc
dec
mov
or
js
fcompl
sbb
or
nop
in
pop
pop
pop
jno
or
and
add
cltd
shlb
dec
xor
sbb
or
scas
xor
mov
mov
or
loope
jl
dec
ja
stos
push
dec
and
rolb
sbb
mov
push
mov
xor
sti
jne
push
pop
mov
popf
jge
rolb
jns
ljmp
xchg
movsl
sub
adc
addr16
out
ficoml
mov
pusha
mov
jnp
movsl
adc
xorl
filds
shll
icebp
or
inc
add
xchg
mov
jae,pn
sar
inc
dec
jl
mov
cmpsb
mov
xchg
scas
shrb
repz
jno
pop
int
scas
add
out
jle
cwtl
int3
and
inc
nop
cmp
icebp
stos
pop
call
mov
sub
inc
dec
enter
pop
push
clc
je
fisubrl
mov
push
subl
adc
fisubs
int
inc
andnps
mov
jae
repnz
mov
hlt
xchg
mov
and
jbe
cli
jns
pop
sub
sbb
outsb
aaa
loop
aaa
or
ret
jae
ds
mov
push
mov
push
jo
or
and
cmp
cld
ja
add
or
in
xchg
pop
add
xor
cmp
iret
stos
jno
push
xchg
jl
fcmove
cmp
ja
movsl
jnp
cmp
dec
insl
sbb
fbld
test
ret
dec
arpl
xor
xor
pop
mov
repz
inc
push
fildll
jnp
loope
push
aas
sub
fdivl
outsb
ficoml
shrb
dec
pop
adcb
sahf
add
mov
xchg
push
call
jle
sub
mov
lcall
xor
hlt
in
sbb
aas
add
fimull
jg
je
mov
xor
mov
scas
adc
add
xor
xchg
cmp
pop
out
sub
mov
lods
lret
cmc
roll
dec
or
jmp
xchg
xor
in
inc
loop
stc
adc
add
cmp
into
mov
data16
lods
jno
sbb
das
movsb
dec
cli
repz
xor
bound
jae
sti
shr
es
stos
pop
sbb
loopne
repz
pop
nop
mov
adc
flds
inc
inc
mov
or
mov
rcll
insb
fdivrl
pop
in
xchg
xlat
xor
add
add
jmp
push
dec
fucomi
iret
cmpsl
jg
mov
mov
fbstp
nop
add
push
add
inc
icebp
flds
mov
les
jecxz
addl
lea
sbb
mov
popf
pop
ret
adc
fsub
fistl
jecxz
inc
xchg
dec
aas
pop
data16
repnz
dec
imul
xor
mul
or
std
cs
sbbb
rcl
mov
sub
dec
inc
addr16
adc
aas
sbb
test
daa
das
enter
and
pop
sahf
and
add
es
push
insl
mov
fldenv
pusha
inc
mov
cld
pushf
jns
mov
xchg
out
adc
ljmp
mov
cmp
push
aam
adc
cli
mov
jae
aas
jne
clc
inc
push
ret
xchg
popa
or
ljmp
jno
leave
fdivrp
stos
imul
xchg
sar
dec
push
pushf
lods
sub
mov
cmc
pop
test
bt
sub
jmp
mov
negl
sbb
and
shl
push
mov
inc
xchg
lods
add
mov
mov
and
loope
sub
int
addr16
xor
imul
mov
lods
or
aaa
gs
dec
adc
push
inc
iret
scas
push
or
or
xor
aad
jne
jns
mov
push
xchg
out
lahf
aam
ljmp
in
dec
adcl
popa
sub
or
jb
jp
mov
movsb
mov
sub
das
jle
repnz
in
cmc
sbb
pop
repz
xchg
test
cmp
sbb
push
add
jb
mov
pop
mov
sarl
fsubrl
or
inc
insb
les
imul
scas
push
shrd
jae
or
jle
ret
mov
ret
mov
arpl
jecxz
inc
dec
jns
or
je
jecxz
ja
outsb
ficompl
pushf
ds
pop
negl
or
sbb
leave
sub
rcr
les
pop
fwait
cmpsl
leave
movsb
adc
hlt
fdivrl
push
jb
jg
add
es
mov
sbb
mov
and
or
or
aad
mov
cmp
rorl
xor
popf
imul
jo
xchg
mov
mov
or
out
mov
movsb
mov
mov
xor
repz
daa
dec
mov
bound
mull
xor
ja
ss
ds
push
sahf
and
in
jb
inc
cltd
mov
test
mov
push
xor
cmp
aam
dec
pop
fbstp
pop
pop
xorl
je
das
test
jnp
arpl
mov
adc
mov
fstpt
ret
and
jb
push
jmp
mov
sub
push
das
pop
aaa
loope
lcall
or
lahf
xchg
sbb
or
adc
test
fwait
push
inc
pop
daa
jg
pop
mov
add
mov
popa
ja
mov
divb
jne
jo
dec
mov
divl
insb
lret
inc
rcrl
inc
mov
xchg
or
ljmp
test
subl
iret
loop
inc
loopne
fcmovne
out
mov
push
add
fisubs
shlb
mov
jp
es
pushf
fdivr
adcl
fsub
in
aaa
ljmp
rcrb
cmp
and
inc
repz
jp
xchg
in
cmpsb
sbb
xchg
jo
xlat
jo
push
sub
mov
jns
xor
sbb
dec
nop
loopne
mov
inc
mov
push
fnstcw
std
pusha
les
xchg
adc
lret
fldt
sbb
pop
push
pop
jne
ficoms
or
xor
push
jb
pop
lea
or
push
fdivrs
sti
mov
jb
ror
dec
loopne
pop
je
sbb
mulb
mov
adcb
mov
ret
mov
jo
lret
test
add
mov
and
add
or
mov
push
aad
rcrl
xor
insl
jb
dec
sub
dec
cmpsl
dec
fisubs
sub
pop
cmp
pop
mov
mov
inc
and
xor
rcrb
cltd
shrl
pop
stos
jmp
mov
ret
add
clc
cmp
xchg
mov
sti
imul
inc
stos
pop
mov
mov
push
ja
enter
sahf
add
jmp
dec
mov
in
pop
jno
push
bound
jo
sbb
sbb
adc
pop
jne
in
imul
push
jecxz
lahf
add
iret
les
xor
pop
or
xor
xor
sahf
xor
int
nop
mov
ret
lahf
jge
pop
repnz
iret
dec
pop
pop
sub
push
mov
mov
mov
out
data16
push
xchg
mov
mov
out
jle
stos
bound
adc
pop
test
andl
sub
or
sbb
xor
inc
rcrb
mov
fldlg2
lcall
ljmp
adc
mov
jnp
xor
aaa
xchg
inc
jnp
jae
das
dec
push
pop
mov
fdivrl
mov
adc
sub
adc
imul
xchg
scas
lret
push
dec
xchg
scas
adc
xchg
iret
add
ret
push
pop
push
pusha
mov
arpl
cltd
test
sbb
or
out
push
push
inc
notb
inc
xchg
mov
or
rorl
push
lret
fisubrs
scas
hlt
shl
ds
mov
xchg
sbb
mov
daa
leave
popf
push
rcrl
jbe
jmp
push
sbb
lea
or
add
int3
and
jb
cmp
push
xorb
mov
dec
scas
xchg
lret
shll
sub
cmp
out
insb
inc
test
stc
cmpsb
mov
sub
push
xchg
enter
daa
dec
pop
mov
jno
or
jl
xchg
pop
cmp
sbb
ds
ja
mov
mov
addl
cld
test
pop
loopne
xor
addb
jg
pop
push
fistl
js
inc
pop
pop
shl
push
push
inc
loope
pop
mov
push
mov
push
fidivs
cmp
mov
cltd
mov
mov
and
add
or
and
testb
int
int
cmc
into
sub
xchg
xchg
lcall
or
dec
push
fcompl
sbbl
mov
jno
push
jbe
sbbb
adc
mov
or
ficompl
mov
cmc
lret
mov
sub
imull
or
lret
imul
cmp
or
into
pop
test
dec
mov
cmp
nop
call
stc
xchg
or
in
fs
data16
mov
and
cli
pop
popa
xchg
xor
cltd
pop
sti
xor
mov
gs
ljmp
into
pop
dec
adc
pop
bound
lret
es
xchg
test
mov
cmp
xchg
xlat
scas
add
dec
mov
in
sub
jge
sub
insl
jns
nop
mov
jmp
inc
mov
in
dec
les
in
adc
into
aaa
xchg
lods
xor
sbb
adc
adc
mov
adc
jae
pop
std
sub
inc
xchg
mov
inc
add
lods
aas
lcall
dec
push
sbb
cmp
push
insl
jecxz
jl
aad
push
lds
aas
aad
mov
jns
dec
sbb
lret
repz
mov
inc
add
pop
rol
xchg
xchg
mov
loopne
jbe
pop
xchg
dec
ret
outsl
or
insl
pop
shll
cmpsl
dec
inc
mov
icebp
xor
repnz
mov
xor
and
into
mov
pop
jbe
jb
out
push
push
sub
icebp
fcmovbe
ds
mov
push
stc
sbb
clc
mov
outsb
insl
ljmp
in
lods
lahf
jns
stos
dec
jne
out
xor
ss
push
aas
mov
add
movsb
sub
filds
test
xchg
sbb
dec
mov
mov
sbb
fcmovne
pop
and
mov
add
ljmp
xor
loope
or
pop
xor
sub
xchg
sbb
cltd
mov
dec
mov
lods
scas
nop
ja
lret
cli
adc
adc
adc
lret
jne
mov
out
pop
jl
bound
std
push
jns
movsb
push
in
orb
out
out
xchg
sub
add
or
jbe
jp
popf
int3
mov
cmpl
popf
cmpsl
fs
mov
jle
mov
in
inc
mov
fistps
pushf
xchg
subl
jmp
adc
mov
push
mov
jae
add
cmp
in
or
loopne
stos
mov
sbb
insb
lcall
scas
add
adc
hlt
or
popa
addr16
ret
cs
lea
fldenv
xchg
pop
inc
push
xor
push
repnz
jne
or
sub
push
sbb
arpl
fimuls
int
xlat
xchg
in
rclb
xlat
mov
add
repz
hlt
jb
cmp
jbe
mov
jge
insb
clc
sbb
aaa
pop
test
or
push
into
add
in
int3
bts
dec
stos
dec
enter
and
cmpb
jo
scas
jne
fwait
and
xor
movsb
mov
mov
cmpsb
cmp
mov
dec
lret
and
test
pusha
pushf
fwait
jno
inc
pop
jl
xor
xchg
pop
popa
imul
nop
push
jno
sbb
lds
pop
inc
cld
test
and
xor
mov
rorl
pop
sub
lret
lcall
xor
push
xor
pop
sub
aad
sub
push
outsb
addr16
ss
aas
ljmp
iret
addb
or
and
scas
push
icebp
inc
dec
int
push
mov
sub
rcrl
ror
fdiv
insb
xchg
sbb
loope
test
mov
xorb
jg
aaa
lods
mov
inc
scas
mov
push
mov
and
and
sti
stc
cmc
cmp
mov
xchg
imul
sub
xchg
rorl
mov
jne
or
xchg
dec
into
cmp
cmc
adc
mov
ret
stc
je
int
jg
pop
jle
stc
dec
call
lds
jnp
test
loope
lods
es
mov
sub
cli
mov
sub
push
sti
fbld
adc
popf
gs
outsb
loopne
std
rcrl
sbb
insl
pusha
adc
pop
mov
ja
mov
cmc
mov
xchg
imul
sbb
or
cmc
xlat
out
pop
xor
mov
dec
push
jo
pushf
or
aad
xchg
notb
adc
dec
inc
mov
and
les
mov
roll
jmp
sbb
daa
mov
jge
fucomi
add
pushf
rolb
pop
mov
dec
in
push
and
cmp
pop
jb
sub
dec
into
mov
je
push
mov
mov
stc
imulb
sub
mov
sbb
adc
or
jbe
bound
mov
mov
enter
jns
das
gs
sbb
xchg
mov
and
es
das
push
es
lret
les
cmp
dec
pop
nop
push
cmpsl
dec
sub
mov
or
arpl
cld
inc
aam
adc
movsb
mov
xchg
int3
pushf
rol
inc
sbb
aam
insl
sbb
mov
lahf
push
mov
inc
inc
clc
clc
add
xchg
push
out
ljmp
mov
or
sub
cwtl
and
xchg
cmpsb
call
pop
bswap
loop
add
sub
or
mov
cmp
test
fsubl
sbb
mov
mov
lret
addr16
fwait
leave
outsl
sub
sub
cmpsb
add
push
icebp
xor
fmull
int3
mov
add
xor
in
mov
push
xor
in
jg
inc
xchg
call
mov
pop
repnz
lods
sbb
imull
scas
mov
sbb
mov
aad
in
popf
dec
add
ss
shrb
pop
dec
lods
adc
sbb
mov
xlat
les
inc
sbb
in
add
lock
push
movsb
jle
and
xchg
fdivl
xchg
jae
scas
xchg
push
dec
ficomps
daa
add
mov
add
dec
dec
and
pop
imul
push
fadd
icebp
adc
xchg
iret
shlb
cmp
xchg
arpl
xchg
inc
push
mov
jp
in
adc
mov
ja
bound
pop
mov
imul
pop
fldl
sub
mov
pop
and
hlt
mov
lock
cmpsl
fstpt
sahf
jno
aaa
dec
mov
or
out
fadds
lcall
dec
sbb
push
inc
xorb
popf
jne
push
jge
and
mov
inc
jnp
cmpsb
mov
and
daa
dec
sub
jle
cmc
mov
xchg
cmp
pop
ds
sbb
mov
sbb
push
sub
test
out
lds
jno
mov
sbb
aad
js
in
pop
rorl
loope
and
sub
loopne
outsb
lret
adc
sbb
clc
and
and
dec
sbb
stos
and
add
hlt
daa
or
cld
mov
pop
mov
sbb
sbb
xor
mov
cmp
cli
test
dec
adcb
dec
mov
mov
mov
shll
adc
xor
cmp
inc
stos
dec
imull
sbb
rcr
jle
aad
loope
push
adc
into
push
icebp
cmp
fcmovu
mov
push
shl
lods
inc
test
in
addr16
stc
add
fs
sub
push
repz
xchg
ljmp
jnp
shl
sub
xor
into
cmp
sti
mov
ss
mov
jge
pop
or
xchg
adc
sbb
decb
repz
push
xchg
jg,pn
sbb
inc
jb
xlat
sub
rcrb
fcmove
paddsb
pop
and
inc
ficompl
nop
jno
lret
dec
jo
iret
inc
into
pop
mov
les
imul
call
mov
in
mov
adc
push
cmc
pushf
imul
dec
add
inc
inc
or
inc
xchg
inc
cmp
or
cmpsl
cltd
dec
inc
in
insb
roll
minps
out
lahf
push
std
lret
cwtl
xchg
adc
mov
out
mov
mov
movsl
dec
lock
inc
mov
lods
mov
lock
es
inc
in
mov
dec
xor
addr16
lea
test
test
dec
sbb
mov
mov
loopne
push
cld
dec
ljmp
pop
dec
xchg
and
add
xor
mov
lock
add
aam
gs
mov
push
jg
dec
frstor
jns
xor
xchg
pop
loope
ljmp
mov
stos
daa
cmp
xchg
in
incb
push
or
push
movaps
add
ljmp
mov
jno
addr16
outsl
xchg
out
dec
mov
loope
cmpsl
xchg
das
popf
sbb
ficoms
jbe
sbb
int3
jmp
sub
and
lcall
mov
lret
xor
setae
mov
mov
and
ja
push
xlat
dec
loopne
add
or
push
mov
les
mov
in
mov
bound
shrb
fsubrl
in
push
adc
push
sub
stc
push
stos
mov
mov
dec
mov
jnp
xchg
adc
dec
aas
ds
and
fistps
push
push
jmp
cmpsl
xchg
insb
jae
push
repnz
adc
and
mov
int
fildll
data16
adc
imul
jbe
hlt
sbb
push
pop
je
adc
out
pop
pusha
pop
ret
out
pop
sti
setnp
stos
arpl
adc
push
mov
xor
mov
aam
out
push
xchg
mov
and
pop
in
loope
xchg
pusha
in
in
popa
rolb
mov
stos
mov
xchg
hlt
or
push
jbe
xor
loope
repnz
aaa
popf
cmp
jg
xor
int3
in
aam
mov
out
adc
imul
inc
adc
stos
mov
mov
add
push
xchg
cmpsb
xor
pop
les
cmp
test
jno
and
fsubp
dec
cmp
pop
das
ds
or
sahf
loope
and
sub
incb
pop
push
mov
fyl2xp1
loopne
scas
pop
jnp
lcall
adc
push
fs
loope
cmp
cmp
pop
pop
in
sub
das
adc
cmc
repz
push
mov
adc
jmp
stc
xchg
outsl
fldl
testl
xor
xor
rclb
cmc
fmull
jle
adc
sub
out
into
subb
push
mov
push
test
pop
dec
mov
cs
ss
popf
fadds
or
imull
lret
leave
shll
mov
imul
cmc
mov
pushf
outsl
mov
stc
mov
lock
stos
or
rclb
cmp
mov
cli
out
ret
repnz
jl
mov
mov
pop
jnp
shlb
loopne
adc
sub
adc
mov
pop
adc
pusha
mov
xchg
add
sbb
addb
insb
adc
sub
mov
in
and
ja
cmpsb
fadd
aad
icebp
push
nop
dec
leave
push
dec
iret
loopne
inc
fidivl
fsts
xchg
pop
les
lea
lea
aaa
sbb
xor
pop
inc
ret
out
adc
xchg
pushf
push
pop
push
jnp
mov
out
out
inc
sub
mov
ja
xchg
jb
push
dec
dec
mov
mov
hlt
divb
addr16
jno
mov
mov
xor
dec
cmp
fildl
inc
not
mov
pop
into
mov
add
outsl
es
and
mov
add
pop
mov
add
insl
push
mov
dec
adc
cmpb
faddl
icebp
mov
cmp
cwtl
jns
leave
mov
inc
and
lahf
cmpb
addr16
sbb
lahf
dec
cs
mov
inc
and
clc
outsb
popa
and
jl
push
lods
loopne
rep
push
inc
addr16
pop
sub
xor
dec
push
jecxz
dec
ja
test
dec
jmp
dec
repz
enter
xchg
rcrb
dec
sarb
rcrl
gs
push
outsl
and
stos
es
mov
outsl
xor
jp
or
mov
mov
fwait
push
pop
fdivp
push
ja
lea
dec
shll
inc
ret
or
lret
adc
jae
test
xchg
push
mov
shll
leave
xchg
in
into
mov
out
loopne
sub
hlt
loop
stos
pop
xlat
jp
aaa
fdivs
push
aad
jnp
stos
sbb
je
in
cmpsb
add
les
fistpll
xor
ss
jb
icebp
jae
ds
push
shr
jns
js
sarl
or
pop
stos
stc
in
mov
jge
sbb
fisttpl
imul
adc
xchg
adc
bound
arpl
xor
cmp
mov
inc
pop
sub
insl
out
push
repnz
mov
xchg
adc
call
pop
adc
aaa
push
in
lds
shlb
mov
incb
cs
push
cmp
push
std
rcrb
push
ss
jge
mov
sbb
into
cld
or
mov
push
int3
shl
adc
clc
mov
push
or
mov
sbb
aas
arpl
into
popa
sub
push
daa
inc
in
cmpsb
shl
in
add
js
dec
or
cmp
mov
mov
cmp
xlat
sti
movsl
movsl
aas
pop
and
xchg
sahf
lahf
loop
push
push
shl
cld
test
test
cmp
paddq
pop
mov
aad
pop
mov
jnp
loope
jl
sub
and
push
bnd
nop
data16
rclb
mov
cwtl
orb
rcrl
and
sub
jle
xor
cli
push
int
xchg
cmpsb
sub
addb
ds
push
sbbb
enter
adc
mov
mov
mov
adc
rcl
clc
mov
mov
mov
lret
sub
mov
push
arpl
in
xchg
push
mov
push
lcall
pop
pop
fs
scas
push
add
dec
mov
add
lods
fistl
jno
scas
out
push
pop
cli
and
push
xor
xor
xlat
sti
in
aas
out
jl
mov
loopne
mov
push
adc
mov
xchg
adc
cmp
xchg
mov
aaa
sbb
mov
jbe
sub
mov
in
imul
aad
ss
daa
fstpt
inc
in
dec
xor
dec
adc
jecxz
cmc
jne
fisubrl
repnz
mov
cwtl
pop
adc
mov
jge
hlt
mov
js
rcrl
pop
mov
cmpsb
inc
mov
arpl
cmpb
xchg
loop
sub
xor
je
inc
shll
mov
sbb
lods
cwtl
or
mov
inc
adcl
push
mov
jo
mov
mov
lock
das
add
ja
mov
lahf
fadd
stos
xor
or
fimuls
add
pushf
mov
mov
cld
sahf
sbb
mov
sub
push
mov
repnz
rcl
cmp
sub
jo
aam
mov
jnp
add
adc
clc
test
arpl
ljmp
popa
lods
dec
lahf
jle
add
push
pop
xchg
jnp
jns
mov
cmpsw
add
add
mov
sub
mov
sti
test
xlat
dec
xchg
xchg
mov
sbb
jne
shl
jo
pop
int3
mov
lds
adc
add
push
sub
mov
or
pop
aaa
xor
xchg
inc
xchg
pop
jmp
mov
repz
cltd
xor
dec
sti
xchg
inc
pop
xchg
insl
cmp
push
hlt
inc
jne
pop
push
mov
lret
add
fsincos
sub
jae
jns
aas
daa
in
in
subl
out
cmp
out
add
addr16
shl
mov
stos
mov
jnp
test
jle
popf
pop
in
adc
pop
rcll
pop
enter
inc
shlb
insb
ret
jbe
popf
lahf
sub
dec
pop
insb
stos
insb
lret
pop
and
pop
imul
mov
push
lods
jge
xchg
jmp
iret
ret
dec
pop
imul
fsubs
and
inc
pop
adc
aam
in
push
jno
dec
fimull
std
xchg
addr16
sbb
xor
pop
inc
incb
cmp
vmovsd
sarb
in
repnz
jg
leave
outsb
imul
push
dec
cmpsl
push
jbe
stos
push
jge
mov
push
jecxz
or
mov
add
call
dec
addr16
inc
push
out
jbe
xor
js
test
popa
jle
cmp
jo
movsb
int
addr16
jae
xor
call
cmp
cmp
test
push
cmp
sub
idivl
mov
mov
mov
lcall
push
xchg
or
data16
mov
leave
cli
outsb
js
stos
imul
push
gs
inc
add
mov
xchg
sub
mov
sbb
stos
cmc
lret
stos
adc
sbb
sbb
dec
add
xchg
add
lea
xor
lea
sub
jg
fimull
jb
sbb
imul
outsb
add
sahf
jecxz
xor
jecxz
out
sub
cmp
push
loope
adc
mov
ss
sahf
imul
in
inc
lret
pop
shll
or
mov
mov
outsl
dec
jo
loop
pop
jg
and
outsl
fadds
mov
jmp
lods
ret
mov
out
push
cli
pop
and
cmp
imul
sti
fwait
jnp
lahf
int
gs
or
mov
pop
imul
sahf
adc
addr16
xor
xchg
ja
clc
sbb
mulb
lock
fisubrs
mov
sti
mov
jmp
repz
cs
mov
ficoms
in
leave
inc
add
flds
pop
jecxz
mov
decl
adc
xor
pop
cmpsl
data16
adc
or
nop
negb
mov
aaa
xchg
imul
out
jb
push
jle
stos
jo
je
jg
shl
sub
std
mov
loope
mov
pop
cs
pmuludq
mov
xor
push
mov
js
add
push
lock
sbb
mov
adc
cmpsl
es
into
xor
mov
sub
lds
gs
test
mov
mov
and
aad
cmp
adc
xlat
sub
ljmp
lds
aas
push
enter
fcompl
push
xchg
sbb
dec
ljmp
fldt
mov
push
xchg
ret
push
cltd
int
cmovne
sbb
cltd
repnz
pop
test
mov
dec
sarl
push
ljmp
mov
dec
lock
fwait
test
mov
mov
add
sar
jl
or
jo
lret
or
ret
cmpsl
je
mov
mov
cmc
pop
push
add
ja
stc
and
aaa
fiaddl
or
inc
mov
scas
dec
cmp
jne
lea
pop
fdivrs
mov
xchg
push
jns
add
xchg
dec
in
cmp
inc
out
add
or
mov
addr16
adc
and
mov
pop
sub
and
jle
mov
xor
popa
in
xchg
mov
sub
xchg
or
pop
push
pop
jno
popf
movb
adc
std
stos
fistps
and
sbb
imul
arpl
hlt
fldcw
iret
cmp
sbb
mov
outsl
pop
mov
sbb
inc
pop
imul
sbb
push
lock
ret
add
xchg
mov
imul
pop
jno
xchg
fidivrs
ljmp
in
mov
repnz
mov
leave
in
lock
jmp
sarl
fsts
sbb
mov
aaa
fidivrl
or
pop
stc
add
dec
ror
cmpsb
stc
in
sub
push
sarb
xor
shrl
scas
rclb
js
hlt
push
cmp
pop
frstor
ds
cmpsb
rclb
iret
outsb
or
daa
dec
stc
mov
pop
add
push
jge
jl
stos
or
js
sbb
frstor
and
mov
ja
fisubrs
sbb
dec
sub
pop
lock
js
adc
mov
loope
retw
sub
xlat
and
in
adc
outsb
push
xor
in
xchg
add
mov
jge
xor
mov
push
add
hlt
mov
xor
mov
inc
lcall
jns
dec
mov
sbb
push
mov
cmp
jae
int3
and
mov
jne
mov
lret
cmp
adc
rolb
cmp
xor
jecxz
xor
jle
cmp
mov
cmpsb
jl
stos
cmp
xor
fsubl
stc
call
add
xchg
data16
mov
addr16
pop
cli
mov
and
daa
into
xor
sti
dec
jnp
inc
fs
gs
loopne,pn
dec
and
add
mov
imul
jmp
inc
xchg
cmp
lds
xor
cltd
xlat
sub
xchg
sub
ss
in
repnz
cs
fwait
pop
aad
in
out
nop
fnstsw
mov
inc
adc
or
jecxz
xchg
mov
jecxz
out
push
sbb
mov
scas
dec
fs
pop
jecxz
push
mov
fisttpl
dec
lds
loopne
inc
mov
stc
idivl
push
sbb
dec
and
add
inc
roll
push
idiv
je
std
dec
xor
mov
xchg
aad
rcrl
pushf
fisubrs
mov
jbe
mov
inc
lods
lock
das
rolb
mov
sahf
push
pop
ret
leave
loop
mov
mov
cwtl
ds
push
aaa
adc
inc
addr16
mov
cmp
cmp
hlt
lcall
stos
loopne
and
jo
mov
xor
cwtl
shl
icebp
fldcw
fmuls
movsl
aam
xchg
imul
cmp
add
test
pop
ret
pop
divb
popa
fcoml
outsl
stos
jecxz
jnp
xchg
jle
or
push
je
push
shld
cmp
sti
cltd
sub
mov
add
aad
sub
fisubrl
out
inc
outsb
sbb
mov
lahf
xchg
stc
pop
and
outsl
push
pop
jl
add
mov
lcall
lds
or
push
and
inc
dec
xchg
testb
jmp
scas
mov
packssdw
ja
cmc
mov
daa
lods
inc
xchg
in
dec
aad
dec
sbb
and
pop
xlat
mov
stc
ret
shl
bound
fs
orl
fldt
in
xchg
loop
jp
and
mov
xchg
jo
lahf
jbe
jnp
test
jle
lret
cmp
fmuls
mov
pop
test
xchg
jne
mov
cmc
xor
dec
imul
loopne
popf
in
scas
ss
leave
sub
add
ret
insb
sbb
shrl
mov
scas
add
push
cmp
mov
iret
fwait
sbb
pop
xlat
pushf
filds
jecxz
xchg
jecxz
bound
int
mov
lods
pop
inc
outsl
xor
pop
xchg
adc
xchg
popa
pop
mov
out
lds
sub
mov
notl
cli
hlt
xor
pushf
push
ljmp
jge
clc
push
sbb
mov
or
add
mov
out
mov
mov
jo
xchg
scas
scas
jg
and
out
movsb
jecxz
incl
pop
mov
mov
lods
enter
daa
inc
ss
xor
jno
mov
jl
aas
int
scas
or
ds
mov
and
bound
test
out
or
in
dec
popf
pop
pop
fstl
pop
jns
xor
cli
adc
sub
icebp
pop
sub
dec
ret
outsb
mov
cmp
popa
jae
rol
dec
addb
sbb
cld
fildl
sbb
add
int
and
sub
rclb
lcall
mov
neg
mov
sahf
sub
pop
test
pusha
test
sbb
lret
out
mov
xchg
cltd
mov
jecxz
adc
ret
lea
pusha
cmp
in
push
inc
imull
pop
lret
lret
cmpsl
mov
or
lods
mov
mov
rcrl
pop
dec
loop
lret
add
xchg
xchg
jecxz
out
jns
aad
cmpsb
mov
add
cli
lock
and
cli
mov
out
cmp
mov
sti
stc
ds
in
ss
loopne
sub
pop
cmpsl
sub
adc
addr16
mov
inc
xchg
std
inc
aaa
sbb
insb
pop
not
push
imul
dec
stos
pop
in
roll
lret
jmp
jg
xor
aad
pop
sbb
dec
dec
or
inc
or
fptan
data16
ffreep
std
jecxz
mov
lea
shr
or
cs
in
pop
or
and
adc
pop
jb
xchg
inc
inc
or
std
aas
repz
jb
sbb
dec
cwtl
cmpsl
dec
je
stos
jo
xchg
call
mov
cwtl
cmp
sbb
ret
sbbl
mov
mov
pop
out
fldt
das
lahf
clc
aaa
mov
loope
dec
and
pop
stos
ret
pop
lahf
addr16
cmp
stos
push
cmpsl
dec
add
stos
mov
adc
pop
cltd
or
into
test
and
or
enter
inc
sub
lret
lret
add
mov
cltd
pushf
push
dec
jg
in
clc
pop
or
cwtl
test
ljmp
dec
lods
mov
xor
ljmp
push
dec
pop
push
lsl
xor
dec
test
cltd
pusha
fwait
mov
ret
mov
add
pop
dec
dec
jle
dec
jmp
rcrl
fwait
insb
shl
pop
fstps
adc
sti
addb
cmpsl
cmc
lods
mov
je
or
sbb
mov
mov
mov
lret
ja
je
dec
lahf
lret
cmp
or
dec
enter
sub
popa
mov
mov
das
mov
jbe
out
adc
insl
dec
in
and
sbb
mov
sub
loopne
sub
jp
fildl
imul
jb
push
stos
xchg
rolb
in
mov
loopne
ss
xchg
dec
leave
jmp
in
fmull
xchg
sahf
dec
jg
aaa
mov
ffreep
push
popf
adc
lret
jecxz
push
or
stos
lds
mov
imul
sahf
push
cmpb
cli
xchg
js
scas
clc
xchg
pop
les
xor
fincstp
inc
gs
or
pop
dec
inc
out
movsl
iret
fisubl
jecxz
insb
push
dec
sbb
pushl
pop
iret
dec
pop
faddp
stos
or
mov
cmp
int
das
mov
dec
scas
lods
leave
sarl
popa
hlt
jg
fistl
ret
pop
ret
mov
loope
fstps
cltd
pop
pushf
aaa
pop
cmp
or
ror
dec
mov
mov
pop
push
cwtl
pop
cs
mov
outsl
scas
mov
adc
sbb
push
cmp
cli
mov
and
in
popf
in
jp
incb
daa
inc
idivl
lds
js
mov
dec
cmp
idivl
pusha
sub
rcrl
lahf
pop
insl
lea
mov
jmp
xor
jp
scas
int
pop
ds
js
movsl
xor
mov
loope
loope
loopne
sub
ficoms
lret
outsb
sbb
loope
hlt
je
sarb
cmpsb
xor
adcb
cld
fildl
imul
push
push
fxch
ret
sub
scas
out
repz
push
and
xchg
fsubl
bound
sahf
int3
popa
jp
mov
xorb
jg
xor
fwait
mov
mov
adc
adc
sar
into
cmp
cmpsl
lcall
sbb
dec
mov
stos
or
or
cmc
test
repz
subl
and
in
fs
clc
add
pushw
pop
cld
lods
ja
data16
mov
and
cmp
and
add
decb
outsl
imul
and
and
imul
jmp
xchg
test
mov
cmpsl
adc
daa
add
jg
lret
inc
js
cmp
gs
imul
xchg
xor
aad
xor
nop
xchg
ljmp
cmp
mov
ljmp
out
aad
mov
leave
rol
das
sbb
mov
inc
pushf
insl
add
jno
adc
pusha
xor
fcmovne
aas
xchg
mov
jb
iret
xchg
mov
repz
lods
leave
testb
je
mul
cld
mov
jnp
mov
insl
scas
dec
jb
adc
mov
popa
cmp
ss
das
jle
shlb
cwtl
scas
add
in
mov
es
push
jl
xchg
cli
jne
cld
mov
mov
pop
or
cld
dec
imul
xchg
jmp
icebp
fs
and
cmpsb
outsb
lds
outsb
push
ret
jno
sub
xor
aam
shlb
adc
scas
fstl
ss
xchg
out
xchg
xlat
cwtl
cmpsl
ljmp
sub
in
imul
dec
je
xchg
xchg
mov
lret
punpckldq
cltd
xchg
push
dec
test
mov
xchg
xor
testb
in
call
test
pop
js
pop
fwait
adc
fcompl
sahf
jge
add
ret
lcall
in
xor
xor
or
inc
scas
xchg
xchg
test
mov
fcompl
pop
test
adc
xchg
dec
xchg
and
or
cmp
mov
cld
pop
dec
loop
ret
jno
mov
js
out
push
mov
sarb
sbb
subl
fsubrs
fisttpl
movsl
es
jp
inc
dec
mov
adc
jnp
xchg
out
sbb
sub
pusha
sub
inc
pop
xchg
sbb
xchg
xchg
imul
imul
inc
adc
cmp
and
jnp
insb
repnz
scas
inc
push
imul
and
pop
stos
ret
fistps
mov
dec
arpl
xor
or
inc
popf
mov
insl
lcall
ret
adc
pop
out
insl
fisubs
add
rorb
call
js
repnz
jl
leave
dec
pop
xchg
hlt
lret
push
mov
or
sbb
aaa
pop
pop
cmp
add
mov
dec
and
jp
jnp
int
mov
sbb
scas
and
out
inc
movsb
stc
xor
push
cmpsb
push
and
test
jg
inc
cmp
cmp
lods
dec
jno
sbb
loopne
cmp
sub
hlt
xor
lahf
jge
and
test
jl
outsl
xor
mov
jb
out
gs
xchg
js
int3
pusha
pop
notl
push
jl
loope
aam
sub
mov
or
adc
pop
inc
cli
xchg
lock
insl
jmp
push
mov
and
lods
ret
push
or
ror
sub
add
sub
or
mov
dec
repnz
sub
adc
dec
mov
mov
mov
mov
jge
push
adc
int3
cmp
bound
mul
jmp
lret
cwtl
roll
movsb
mov
std
or
je
push
jo
cmc
dec
test
lds
jae
icebp
jp
stc
add
je
cld
mov
shll
cmpsb
lods
pop
xor
mov
jno
and
psubd
cltd
xor
push
sti
push
adc
sub
push
gs
pop
in
fwait
adc
jo
adc
mov
insl
inc
add
iret
cmp
xlat
xlat
out
mov
repnz
out
mov
cmpsl
cltd
and
adc
test
clc
out
add
in
insb
lea
or
or
and
pusha
sub
cmc
cmpsl
pop
jecxz
cli
inc
jmp
push
call
sub
fcomps
sbb
hlt
pushf
sbb
cs
mov
sbb
imulb
aas
xor
jb,pn
mov
dec
xchg
je
sub
test
push
std
pop
adc
mul
jo
test
lock
sub
mov
mov
pop
pop
lock
or
das
pop
out
mov
dec
xlat
adc
roll
ret
jbe
je
adc
jp
js
sbb
push
mov
mov
rcll
mov
adc
scas
and
inc
inc
push
pop
in
rcrb
adc
mov
shr
mov
aaa
add
in
fnstsw
add
rclb
xchg
push
xor
ljmp
push
lods
bound
shr
sub
push
add
cmp
dec
cltd
into
scas
lods
test
xchg
sbb
or
pop
dec
pop
mov
test
cmp
xchg
sbb
push
sbb
fwait
inc
test
rolb
mov
clc
insl
xchg
xor
xlat
xor
mov
enter
outsl
mov
inc
pop
mov
add
dec
test
pusha
inc
dec
pop
adc
add
mov
sbb
mov
aad
out
xor
icebp
bound
sbb
jns
push
in
inc
lahf
cmpl
aas
out
mov
mov
dec
xchg
movsb
push
out
jp
dec
mov
xchg
mov
scas
inc
cmc
jle
mov
in
clc
cld
pusha
enter
je
test
out
lret
ficompl
insl
xchg
xor
mov
aad
jl
gs
popf
bound
sbb
xchg
stos
stos
scas
dec
and
lret
pop
movsb
add
mov
scas
test
das
stos
adc
mov
call
pop
jl
fwait
inc
sti
xor
arpl
cmp
mov
adc
int3
push
mov
sbb
push
rcrl
push
fimuls
push
iret
lds
fisubl
mov
lock
leave
shll
push
xlat
rolb
in
adc
das
inc
mov
xorps
aaa
push
std
or
mov
add
cmp
xor
aas
cmpb
dec
in
and
scas
cmp
lds
ds
xor
in
imul
enter
daa
inc
add
in
lods
cwtl
or
das
cmp
mov
movsl
iret
cmpsl
and
outsb
push
ret
test
inc
jl
xor
dec
xor
pop
push
js
xchg
pop
ss
jle
sub
shrb
sub
inc
jnp
sbbb
shl
inc
dec
lock
cmpb
sbb
jl
pop
dec
dec
and
fistpl
int
mov
sub
pop
lods
fucom
lcall
add
clc
mov
pop
sahf
adc
push
test
sbb
jg
pop
jnp
gs
mov
jp
mov
fstpl
or
pop
ss
xor
fcomps
mov
lret
jnp
xchg
push
cmp
jnp
into
shlb
test
outsl
movsb
mov
loop
add
stc
mov
push
ret
pushf
test
lods
inc
movsb
stc
mov
and
xor
or
push
and
dec
dec
outsl
gs
in
out
xchg
push
push
pop
add
ds
jmp
imul
cmp
repz
lahf
xchg
inc
cmc
ds
sbb
cwtl
inc
sub
mov
xchg
fimuls
in
adc
jmp
jl
pop
popf
add
xor
mov
dec
ljmp
pop
lahf
push
fsts
xchg
data16
cli
es
in
mov
inc
call
stos
and
es
test
mov
lods
fcmovnb
shrl
pop
mov
sub
push
js
rclb
jb
sarb
std
pusha
je
in
sarl
nop
testb
dec
std
add
icebp
cwtl
insb
jb
mov
int3
fisttps
sbb
jp
lret
dec
cmp
mov
ss
adc
lock
js
das
cmp
mov
push
mov
sub
add
inc
gs
pop
in
add
repnz
cmpsl
inc
jnp
mov
cwtl
movsb
inc
cld
mov
push
mov
push
mov
mov
lods
jp
shrb
xlat
sub
ja
shr
push
push
xchg
or
lahf
mov
or
ljmp
dec
lods
int
imulb
adc
in
and
dec
fisttps
and
inc
add
inc
test
xlat
push
mov
or
mov
test
mov
aaa
sbb
adc
popa
pop
into
jno
fwait
jo
lea
in
roll
jno
call
push
cmpsb
or
dec
jae
out
nop
in
xchg
xor
movsb
mov
mov
sti
int
ja
or
dec
js
push
inc
jecxz
iret
or
pushf
call
dec
test
mov
mov
inc
lods
out
adc
std
jns
pop
jae
dec
push
jg
leave
jno
out
leave
cli
sub
shl
mov
mov
cmp
out
sbb
xor
mov
jle
cwtl
push
hlt
cmp
pusha
arpl
push
fists
sbb
xchg
incl
jae
adc
popf
mov
cli
mov
lds
aas
stos
push
mov
push
cmp
insb
enter
jnp
push
scas
or
lock
push
lods
adc
jecxz
ret
adc
imul
ret
repz
stc
jb
ds
push
imul
fidivrl
ss
jno
xchg
sbb
inc
clc
pop
pop
jg
fisubrs
jns
push
pop
ret
mov
inc
mov
leave
cmp
sbb
pusha
mov
inc
jbe
out
jge
jp
sbb
mov
aaa
xchg
xor
or
xor
dec
add
jl
inc
aam
xor
lcall
and
adc
fisubl
push
cmpsb
push
out
in
push
push
push
enter
daa
inc
push
cmp
imul
add
sti
cmp
push
ds
cmpsb
sub
sub
xchg
lahf
mov
mov
test
adc
imul
mov
loope
test
mov
loope
mov
sub
call
je
int
push
dec
sub
orb
std
add
cmp
and
dec
test
bts
sub
xchg
dec
pop
sub
mov
push
daa
xor
mov
test
sahf
mov
lahf
test
mov
cmc
jg
outsl
xor
mov
push
bound
daa
mov
cmp
fsub
pop
mull
lret
inc
shrl
jl
sbb
or
add
cmc
fxch
adc
push
inc
fsubrs
xor
outsl
xlat
shlb
add
sbb
lods
sub
xor
and
cmp
mov
push
cmp
and
sti
mov
jg
jno
mov
loopne
xchg
and
adc
sahf
in
gs
scas
repz
push
xchg
or
sbb
pop
scas
rcl
fs
lods
sub
hlt
inc
mov
jge
shr
cltd
cs
or
dec
jae
inc
jb
cltd
fxch
jnp
les
jecxz
ds
out
adc
icebp
push
call
sub
rcrb
xor
adc
test
pop
fadds
mov
inc
sub
mov
jb
and
dec
je
cltd
je
cmc
jp
int
mov
dec
icebp
aaa
std
test
sbb
je
mov
xorl
pop
mov
mov
mov
jle
lock
stc
sub
sbb
cmp
mov
push
lcall
sbb
insl
insl
inc
cmp
cmpsl
inc
mov
mov
outsl
push
insl
cld
lret
fld
mov
pop
push
mov
ja
addr16
lret
adc
sar
mov
sub
hlt
add
pop
push
ffree
and
xchg
xchg
ljmp
dec
xor
cmp
pop
out
jbe
nop
xchg
insb
pop
ficoms
jb
movq
xchg
mov
cltd
cmp
mov
andl
sub
addb
movsl
push
push
loopne
pop
jns
jle
lahf
pop
mov
xchg
roll
outsb
inc
pushl
popf
jg
bound
dec
xor
mov
xchg
addl
mov
mov
in
les
roll
lock
or
dec
mov
pop
mov
int3
dec
out
repnz
bound
cld
jns
clc
shl
mov
sbbl
out
dec
xor
int3
adc
jp
rcr
vmovapd
jmp
fucom
sti
ficoms
fbstp
pushf
mov
enter
lret
jae
sbb
pop
popf
mov
push
mov
add
mov
xor
popa
shrl
mov
push
sahf
xor
adc
add
push
pop
ljmp
arpl
inc
jno
fisttpl
mov
dec
inc
ljmp
xchg
enter
std
inc
pop
mov
fimuls
mov
movsb
cmp
cmp
mov
xchg
sbb
leave
scas
mov
mov
jne
je
imul
sbb
in
or
int
int3
sub
push
dec
jo
ds
and
xchg
xor
cmc
xor
or
out
data16
movsb
lcall
cmpsb
flds
in
cmp
xor
inc
and
jno
mov
popa
nop
inc
cmp
gs
ds
mov
shll
sub
fcmovb
rcll
lds
test
jg
xchg
or
pop
fisubrl
mov
pop
mov
lods
push
xchg
loope
test
outsb
fmul
sub
sbbl
mov
andb
filds
jnp
and
add
mov
sub
ss
stos
sbb
lcall
cmp
sbb
in
cmc
test
adc
jg
mov
sub
sub
adc
cmp
cmp
xchg
jne
mull
aad
lret
sub
lds
pushf
or
jno
mov
outsl
bound
sbb
es
popf
jecxz
add
lcall
dec
add
and
mov
test
mov
mov
xchg
repz
pushl
inc
loopne
iret
icebp
pop
inc
push
lret
adc
and
adc
fsubrs
xchg
int3
pop
cmp
xchg
mov
xlat
mov
cltd
shlb
call
ret
and
aad
jo
nop
cmp
dec
es
rolb
add
jno
jecxz
ss
repnz
lea
push
call
test
enter
jns
pushf
sbb
pop
mov
xchg
xor
nop
cmpb
or
shlb
push
pop
inc
rcrl
daa
testb
cwtl
loop
push
xor
movsl
mov
dec
cwtl
dec
push
inc
or
daa
sahf
cmp
jb
dec
lock
push
and
loopne
bnd
and
es
add
insl
sub
lods
mov
mov
inc
cs
idiv
dec
mov
jge
ret
and
adc
inc
rcl
loopne
sub
add
mov
and
push
sbb
imul
rorl
inc
popa
data16
mov
or
xchg
mov
push
push
xchg
test
cmp
stos
jns
cltd
jae
out
stc
pop
andl
xchg
jb
test
test
xchg
pop
jns
cltd
ljmp
and
inc
fwait
into
pusha
add
sub
stc
add
jle,pn
call
cmp
or
rcr
test
adcl
add
mov
ja
scas
mov
mov
inc
adc
or
dec
inc
mov
jns
dec
outsb
sarl
jne
les
fldenv
out
sarl
sub
in
imul
out
inc
ret
sub
rolb
mov
sti
int3
mov
mov
jnp,pt
loop
jle
ss
add
dec
pusha
cltd
pop
jae
shll
adc
mov
xor
jae
imul
xlat
pop
mov
mov
lea
or
dec
mov
imul
scas
rcr
dec
push
in
pop
adc
pop
iret
aad
mov
push
dec
in
and
xor
loope
pop
inc
je
mov
push
imul
sbb
pusha
pop
mov
enter
into
nop
rclb
fstp
fs
adc
dec
push
jmp
cmp
xchg
lea
inc
es
aaa
adc
sbb
jnp
mov
pop
mov
adc
insl
push
pop
shlb
pop
subb
xchg
or
shrb
push
inc
jmp
and
pop
sbb
in
and
jbe
inc
js
cmp
push
push
jno
out
jl
sbb
cmp
mov
movsl
in
js
pusha
sbb
lahf
stc
loopne
push
cmp
ljmp
sub
push
cltd
imul
sbb
js
sub
popa
push
repnz
jno
cltd
sub
in
repz
aad
or
inc
adc
or
or
and
paddd
and
std
sub
lds
sub
repnz
sub
stos
push
aad
loop
stc
adc
sbb
stos
pop
sahf
sti
xor
sub
lods
jge
and
fnstcw
movsb
and
lret
stos
adc
icebp
push
ss
insl
adc
dec
sahf
mul
sub
lret
push
rcrl
out
fdivr
or
out
into
fbld
cmc
addr16
jbe
pop
jp
outsl
inc
aas
cmp
stc
fstl
sub
das
fisttpl
lods
cli
push
mov
inc
mov
out
stos
cli
lock
xor
ja
cmp
shlb
sti
adc
mov
mov
pop
gs
repnz
data16
pop
popa
xor
imul
imul
mov
addr16
push
data16
loop
mov
mov
push
mov
add
aad
cmp
nop
and
test
or
pop
push
fnstcw
les
pop
dec
jecxz
xchg
inc
cmc
pop
mov
call
sub
pop
pop
aas
adc
adc
fistps
ret
inc
call
adc
bound
aas
lods
imul
bound
shrl
pop
test
ret
test
cwtl
popf
pop
lods
mov
movsb
fisttpl
loop
cmp
or
sbb
xchg
divb
mov
adc
mov
xchg
das
fyl2x
mov
mov
imul
es
xchg
xchg
insl
adc
dec
jecxz
int
inc
xor
mov
sbb
repnz
mov
mov
sbb
or
shlb
lret
lea
mov
mov
out
fstl
push
clc
mov
mov
ljmp
and
push
cmpsb
push
stos
insb
mov
jecxz
cli
mov
xor
cmp
jb
cltd
stos
mov
test
iret
mov
push
mov
in
sub
roll
dec
jecxz
roll
sti
negb
jmp
push
int
xchg
add
dec
mov
mov
or
push
or
test
cld
addr16
pop
dec
cltd
mov
jno
mov
sub
pop
ja
inc
loope
test
sbb
bound
mov
sbb
stc
dec
jne
adc
mov
adc
out
mov
dec
bound
adc
xorl
out
scas
ret
addr16
jp
jmp
mov
mov
xor
mov
pop
in
push
lcall
add
mov
lea
std
les
jno
scas
popf
incb
mov
adcb
ja
jge
arpl
insb
or
imul
scas
xor
out
adc
js
xor
stc
ret
lcall
cmp
andl
mov
or
test
sbb
ficompl
sub
sbb
cmc
add
xchg
push
ficoms
dec
shrb
mov
cmp
aaa
leave
popf
sub
hlt
inc
dec
or
adc
jge
jbe
sbb
cmp
in
outsb
repnz
outsb
clc
int3
and
dec
dec
mov
push
ljmp
jo
rcll
enter
mov
inc
cmp
dec
ds
jp
push
cmpsb
fbld
pop
nop
enter
daa
inc
push
aaa
cmp
xor
or
hlt
jl
jl
cmp
xlat
xor
fsubs
sti
adc
jno
push
push
jae
in
and
push
inc
pop
sub
adc
xor
lods
loope
scas
nop
sub
roll
cmp
adc
pop
and
insb
and
sbb
test
sti
adc
adc
int
sbb
sub
add
push
imul
and
fmul
fsubl
fstps
mov
inc
adc
mov
mov
mov
mov
movsb
fdivs
mov
test
adc
pop
fcomip
mov
cmp
shl
movsb
mov
fcompl
mov
sbb
cs
xor
imulb
lret
mov
shlb
mov
xchg
sbb
mov
les
mov
jno
lods
loope
mov
test
out
fs
and
xor
mov
sti
ret
fisubrl
gs
popf
xchg
pop
adcb
imul
pop
pop
xchg
push
nop
xchg
or
aas
sub
test
out
jmp
jmp
push
xor
out
adc
addr16
mov
mov
in
rolb
pop
fnstenv
rol
sub
jae
ja
fcmovnb
clc
shr
lea
sbb
call
cmpsl
xor
repnz
and
push
pushf
outsl
ja
fildl
inc
testb
aas
dec
shr
jb
inc
inc
dec
fsts
out
sarl
fistpll
cwtl
pop
subl
jns
cmp
xchg
lret
add
lods
imul
mov
mov
idivb
mov
inc
aaa
pop
mov
jg
dec
ficomps
xor
aas
iret
sahf
mov
hlt
inc
ss
dec
mov
fistpll
outsl
adc
mov
sub
cwtl
sarb
pop
sub
sbb
and
pop
mov
clc
divl
and
insl
lds
xchg
jo
lods
jns
pop
stos
pop
cs
out
lahf
or
xchg
inc
andb
push
call
add
lahf
add
wrmsr
fldenv
sbb
lds
mov
adc
sbb
rcll
mov
adc
jo
add
hlt
add
call
adcb
pop
cli
mov
xlat
sarl
outsb
cmp
mov
push
icebp
mov
out
inc
ja
arpl
inc
aas
test
or
dec
sub
xor
push
jne
icebp
mov
aam
out
shrb
jns
lcall
add
mov
push
or
push
and
push
cmp
in
mov
sbb
dec
jle
movsb
in
es
iret
cmp
fisttps
imul
jmp
sub
jae
shrb
popf
and
adc
push
rcrl
stos
ljmp
insb
je
imul
xchg
scas
cwtl
flds
push
jae
in
and
iret
xchg
test
pop
jbe
inc
xor
arpl
and
inc
jp
prefetch
or
and
xchg
inc
sub
dec
xlat
lahf
xchg
int
jnp
lds
fcompl
rol
fidivrs
mov
lds
and
cli
mov
nop
pop
leave
adc
repnz
mov
addr16
sub
jge
cmp
mov
or
incb
inc
jne
int3
jmp
mov
push
int
mov
jo
cwtl
arpl
pop
loopne
cmp
gs
cmp
inc
or
mov
out
mov
enter
daa
aas
scas
sarb
sub
fwait
jno
and
jl
mov
cmp
xor
movsl
repnz
xchg
xchg
push
loop
aas
test
ds
hlt
and
add
or
js
aad
pop
jno
mov
cmpsl
in
loope
jp
sub
mov
outsb
roll
scas
sarb
mov
lret
shlb
sbb
sub
ret
aaa
push
sbb
cmp
xchg
jle
sub
popf
pop
pop
daa
fsincos
lcall
fmull
adc
inc
mov
jbe
cmp
xor
bnd
testb
xchg
enter
push
out
adc
sub
fadd
stos
ja
pusha
bound
mov
repz
mov
or
add
into
movsl
fwait
pushf
cmc
cmc
add
xor
pop
jbe
arpl
push
fs
add
aas
mov
cmp
mov
pop
or
push
mov
xor
iret
jnp
jno
jle
std
cwtl
mov
loopne
and
pop
lahf
std
fists
idiv
subl
cs
cmp
int3
xchg
adc
dec
xchg
inc
inc
adc
sub
pop
in
sub
scas
dec
dec
cs
push
mov
xchg
clc
push
nop
nop
rorb
sbb
fldcw
cs
xchg
mov
lea
inc
ret
es
pop
movsl
adc
pushf
sbb
rcr
scas
ss
pop
mov
push
inc
jge
roll
out
jmp
xlat
jb
data16
push
and
je
jle
rorl
jnp
notb
jbe
inc
ss
cwtl
adc
mov
push
mov
adcl
sahf
and
je
lahf
mov
sbb
mov
xchg
pmulhuw
cltd
cmp
sbbl
imul
or
loop
add
xor
push
mov
lret
mov
mov
out
xlat
and
jecxz
jne
inc
mov
lds
xchg
inc
aam
sub
mov
outsl
insl
push
data16
xchg
frstor
lods
clc
xor
xchg
nop
pop
ljmp
jmp
stos
dec
addr16
add
mov
psubq
enter
pop
cltd
sbb
test
sbb
sub
xchg
sub
cmp
xchg
mov
mov
xor
scas
movsl
mov
jbe
pop
cld
add
adc
test
incl
jg
adc
mov
xor
scas
movsb
or
clc
xor
xchg
aam
mov
cmpsb
sahf
mov
mov
add
dec
aaa
cmp
mov
mov
and
sbb
outsb
mov
jns
ret
sahf
in
test
adcl
sub
mov
push
stos
jp
in
mov
xor
mov
leave
and
dec
out
pop
pop
cltd
pusha
push
adc
rcll
loopne
push
xchg
notb
jmp
scas
in
ficoms
imull
jbe
dec
mov
loop
add
stos
pop
ret
xchg
xchg
loop
pusha
imul
mov
sti
inc
fistl
out
adc
inc
insb
iret
repnz
ret
mov
push
adc
andb
mov
or
lahf
sahf
in
out
push
in
xchg
and
nop
sbb
cmp
pop
inc
into
jecxz
fistl
repz
pop
shlb
mov
loop
popa
leave
mov
hlt
xlat
or
cmpsb
jbe
popf
data16
call
mov
or
add
lahf
fxch
aam
ljmp
add
popa
jb
scas
xchg
fldenv
mov
cmpb
mov
movsb
movb
inc
cwtl
cmp
in
aad
fmul
sbb
daa
ds
xchg
cmp
fwait
jno
jns
jl
mov
dec
js,pt
and
xor
lahf
push
push
sub
or
test
or
ljmp
sbb
pop
jbe
insb
js
pop
add
push
insl
mov
mov
cmpsl
sub
sbb
outsb
xor
notb
adc
enter
popl
mov
in
add
lret
daa
and
mov
push
pop
and
cli
jmp
sub
jge
cmpsb
lret
mov
fisubl
adc
jae
cs
in
rolb
hlt
sbb
add
mov
push
adc
mov
xchg
sub
pop
daa
ss
xchg
negl
inc
adc
mov
pop
shll
sbb
scas
pop
dec
or
int
mov
dec
xor
fmull
fsubrp
out
loop
sbbl
add
jge
data16
add
mov
fs
xor
or
sti
and
sbb
loopne
mov
inc
adc
insb
cmpsb
imul
push
add
loopne
mov
xlat
lahf
dec
clc
sub
xor
in
xchg
mov
lods
mov
aad
in
jecxz
imul
dec
mov
inc
push
fabs
incl
inc
adc
xchg
xchg
add
pop
pop
outsb
movsl
push
stc
pop
pop
das
fs
stos
fstps
xchg
pop
pop
sub
or
lods
aas
mov
xchg
dec
push
fnsave
inc
rcrl
leave
negb
push
int3
cwtl
into
add
mov
lock
xchg
jmp
mov
jg
lock
cmpsl
das
jbe
mov
push
fnsave
and
dec
jg
pop
xor
cmpsl
cmc
loop
leave
and
cmpsl
cmp
dec
cs
mov
int3
pop
mov
or
or
pop
dec
push
rcrb
nop
dec
sub
into
aam
xchg
mov
mov
hlt
fisttpll
cwtl
mov
ljmp
lods
lods
dec
nop
fildll
fildll
push
add
cvtps2pd
inc
add
xchg
aad
dec
and
fisubs
pop
dec
movsb
dec
cs
fldt
in
aaa
sbb
push
roll
adc
fwait
mov
xchg
lcall
xor
xchg
lds
xor
pop
mov
mov
outsb
inc
mov
pop
cmp
dec
sub
incl
mov
and
aaa
add
and
inc
xchg
adc
dec
cli
pushf
bound
fwait
jns
out
in
mov
out
stos
inc
sub
mov
int3
addr16
fs
lock
clc
mov
or
jno
jle
jecxz
in
hlt
sub
add
inc
pop
xchg
mov
arpl
fwait
mov
xchg
rorl
jae
dec
push
push
mov
push
dec
mov
aas
inc
aam
rclb
mov
fcoml
imul
xchg
push
add
mov
iret
push
in
xlat
ret
pop
pop
std
aam
inc
dec
dec
xchg
arpl
xor
or
sbb
fidivl
jns
sbb
push
jmp
jbe
sahf
fidivrs
jo
inc
or
rol
lock
xor
dec
inc
hlt
and
repz
add
jbe
orb
sub
mov
unpcklps
add
clc
int3
mov
rcrl
xchg
xorl
mov
mov
and
loope
lods
lods
push
movsb
push
loop
inc
daa
stos
cmpsb
push
cmp
enter
daa
cmp
mov
sbb
cmp
adc
and
inc
xor
mov
xchg
test
aam
ret
mov
ficomps
mov
inc
pop
out
lea
lea
cmpsb
sub
jnp
sub
mov
outsb
xchg
int3
adcl
mov
sub
call
sub
jmp
inc
add
mov
and
sub
and
aaa
int
cmp
and
lcall
jge
movsl
ja
sbb
lret
mov
andb
sarb
push
push
mov
mov
mov
mov
pop
sub
repz
or
neg
test
xchg
mov
aam
or
sub
cmc
cmp
xor
push
mov
ja
stc
mov
push
xchg
add
into
test
lods
xchg
mov
mov
jp
out
stos
inc
cli
mov
cmpsb
inc
cmp
sbb
data16
dec
gs
sub
shlb
pop
fstp
pop
adc
mov
daa
and
in
xchg
fwait
cld
sbb
mov
pop
or
mov
mov
lcall
jmp
sub
adc
mov
nop
inc
fildll
in
in
fstps
shl
les
jecxz,pn
push
movb
dec
lea
shr
xlat
or
pop
or
adc
push
int
jo
and
or
jbe
inc
mov
cmp
mov
aas
sub
mov
dec
sub
cmpsl
xchg
xchg
push
mov
mov
cmpsl
outsb
mov
lcall
lods
dec
lret
push
add
mov
cli
lock
push
and
iret
das
ret
out
cwtl
lods
sub
mov
rorb
pop
push
cmpsl
cmp
or
jns
scas
cld
int
push
mov
sub
inc
and
sbb
shl
mov
dec
aam
cmp
mov
dec
clc
push
in
and
fnsave
test
xchg
push
jp
ljmp
inc
lods
mov
and
rcll
out
ud1
lahf
cltd
xchg
cmp
and
xor
xchg
sbb
into
add
pop
loopne
pop
jnp
test
mov
xor
add
mov
call
xor
or
sub
jns
xchg
pop
pushf
outsb
mov
stos
or
pop
inc
lods
pop
sbb
mov
dec
sbb
mov
jp
push
adc
dec
fstpl
jmp
addr16
mov
nop
xchg
out
sub
or
jns
add
in
out
xorl
gs
scas
ds
addr16
fisubrs
jp
scas
lret
xor
mov
daa
aas
jle
push
jo
in
icebp
or
fildll
xchg
xchg
icebp
jmp
mov
jae
in
icebp
push
jge
cs
lcall
push
jle
fwait
stos
inc
adc
and
ja
imul
scas
sar
push
dec
cltd
jnp
mov
lock
mov
dec
ret
je
xor
xor
popf
arpl
jno
cmp
or
xchg
testl
fisubl
xchg
shlb
aam
roll
fisubs
mov
adc
mov
mov
mov
jns
dec
hlt
insl
push
sbb
mov
jbe
fucomi
jge
jmp
push
aaa
into
fdivl
push
mov
int3
stos
xchg
ss
or
jbe
jbe
or
mov
arpl
fcomps
cmp
mov
fcoml
jecxz
mov
sub
mov
xchg
or
cmp
pop
cmp
stos
clc
jno
popl
arpl
cmp
loope
ds
push
pop
lahf
xchg
mov
clc
test
lahf
xor
xor
std
dec
mov
pop
out
js
sub
push
cwtl
mul
in
xor
mov
sub
das
sub
cli
sbb
insl
ror
cmp
adcb
loope
and
or
push
in
push
and
cmpsl
int
jb
sub
pop
movsb
cmp
push
mov
mov
rcll
out
sub
mov
addb
jg
test
std
cmp
mov
call
sahf
outsb
xor
cmp
cmc
adc
inc
lret
call
mov
out
into
dec
pmaddwd
jno
into
mov
loop
mov
scas
fists
pop
add
call
shrb
call
cli
out
xchg
jge
cmp
mov
jne
jle
pop
data16
insl
daa
ljmp
loop
imul
xchg
jle
pop
imul
cs
lea
cmc
add
subb
aaa
jp
dec
out
push
in
push
daa
jmp
mov
in
imul
and
movsl
dec
pusha
xchg
inc
imull
les
jne
mov
in
add
testl
mov
sbb
jle
and
mov
bound
and
aas
enter
mov
insb
dec
mov
into
je
xchg
mov
negb
je
std
cmp
aaa
cwtl
inc
rol
mov
mov
mov
mov
aad
dec
dec
mov
sub
mov
les
shll
adc
and
test
ret
mov
dec
lret
cmpsl
cmp
mov
push
sub
cld
clc
sub
mov
dec
sub
and
mov
jp
movsb
mov
rol
pop
pop
sub
aam
inc
sahf
mov
and
push
scas
lretw
aam
clc
jecxz
bound
cmp
and
stos
int
sub
ds
mov
push
pop
add
xchg
cltd
mov
enter
test
xchg
add
xchg
mov
mov
lret
dec
xor
mov
js
es
fwait
call
mov
add
rolb
jbe
cmpsl
jecxz
or
jmp
xchg
stos
cltd
or
cvtdq2ps
pop
rcll
ja
stc
sbb
aas
mov
push
jb
sti
cmp
dec
rolb
jne
jns
mov
mov
in
test
dec
adc
outsl
addl
out
xchg
ljmp
test
push
jp
and
mov
shl
jle
icebp
push
in
push
lods
pusha
cmp
loop
mov
imul
jge
xchg
push
out
jae
shlb
popf
shll
mov
mov
leave
mov
insb
and
scas
and
jl
movsl
add
pcmpgtd
ret
add
ret
push
pop
dec
arpl
xchg
dec
inc
xchg
movsb
or
adc
cmp
arpl
xchg
xchg
sub
loop
jno
or
faddp
cli
movsl
lds
imul
xchg
sbb
fldt
xchg
mov
inc
dec
jbe
test
or
mov
sub
or
test
dec
jns
fisttpl
pop
pop
mov
sub
jo
jns
scas
and
imul
cmp
test
movsb
addr16
in
inc
inc
dec
adc
mov
enter
daa
cmp
cmp
dec
mov
cmp
sub
cmp
mov
add
and
dec
cmp
cs
test
push
mov
xor
adc
xchg
pop
jmp
pusha
js
push
lret
add
push
cmp
sti
push
mov
sub
xchg
pop
outsb
pop
arpl
shlb
mov
andb
pop
add
jns
and
jle
daa
shll
sub
jecxz
pop
and
fistl
push
fdivr
and
add
pop
sahf
int
pushf
test
sti
sbbb
jg
mov
out
mov
popa
mov
sbbl
shlb
lea
mov
sahf
negl
lret
mov
out
sbb
data16
xor
cmc
adc
imulb
ret
scas
cmp
daa
sbb
adc
mov
lods
fs
sub
sbb
int3
cli
and
xor
push
lret
mov
ljmp
mov
pop
sbb
xchg
adc
mov
test
rclb
sahf
cmpsb
xchg
and
cmp
sbb
xlat
pop
sbb
jo
cmp
aad
push
jmp
push
push
cs
mov
and
dec
mov
push
push
flds
ret
ret
movb
cmp
call
and
pop
jno
mov
pushf
icebp
in
imul
push
not
inc
cltd
mov
xchg
add
add
shl
pop
inc
jg
inc
movsb
das
mulb
pop
std
loope
sti
cwtl
call
mov
xor
mov
adc
xor
fidivl
pop
int3
arpl
adc
mov
jne
jbe
lods
jo
or
mov
insl
jle
mov
cmpsl
cmp
cmp
daa
and
lds
jb
xchg
and
dec
mov
outsb
rclb
fcmovu
aam
fwait
in
mov
cmp
jb
sahf
pop
jbe
push
test
xchg
mov
lods
xor
stos
mov
nop
out
es
push
repz
out
mov
dec
xchg
movsb
cmp
jno
ja
roll
das
in
hlt
test
test
adc
sub
arpl
push
push
test
jae
xchg
pusha
sbb
enter
mov
cld
fwait
pop
fstps
lahf
sub
add
push
or
xor
fildll
xor
mov
xchg
stc
ficompl
mov
jg
mov
mov
fwait
ja
test
mov
or
dec
pop
mov
cmovae
loopne
jne
pop
cmp
ljmp
jns
into
in
das
xchg
fildl
lock
sbb
movsb
inc
ja
lcall
mov
enter
cmpsl
dec
jnp
es
jle
pushw
in
pop
js
dec
test
stos
mov
mov
sbb
xchg
and
enter
jge
add
mov
cld
fsubrs
stos
sub
and
xchg
sahf
insb
mov
loop
mov
push
fcmovnu
adc
test
outsb
test
ret
cmp
xor
arpl
pop
inc
mov
inc
or
mov
cmpsl
fcmove
and
orb
sbb
mov
fcmovnu
addr16
rclb
stos
mov
cs
leave
addr16
rclb
adc
clc
jge
jp
sbb
cmp
dec
cli
fwait
or
insb
dec
add
mov
int3
add
dec
call
mov
xor
int
in
add
push
cmp
gs
repnz
gs
aam
push
cmpsb
icebp
fwait
cmp
jno
pop
enter
daa
cmp
or
sub
dec
jl
and
cmp
lcall
popf
jo
lahf
shrb
xchg
push
add
push
xor
mov
negl
xacquire
cwtl
imul
add
gs
mov
sub
sarb
rcrb
add
cmpsb
jns
cmpb
int
nop
and
cmp
outsb
dec
out
sub
pop
int
mov
dec
addr16
pop
mov
push
fcoml
hlt
push
fsubl
roll
test
nop
int
js
pop
jg
clc
cltd
mov
xor
mov
sbb
mov
xchg
and
or
imul
negl
repz
lret
adc
jge
adc
stos
xchg
into
adc
pop
cmc
fcomps
xor
and
inc
nop
mov
fisubs
adc
popa
add
push
lods
dec
adc
mov
sbbb
sbb
xor
add
cmp
dec
sbb
lods
mov
adc
mov
ret
push
sub
imul
repz
ljmp
jl
in
imul
xlat
fwait
mov
jne
js
in
inc
sbb
cs
mov
stc
stos
xchg
nop
xlat
cwtl
sbb
dec
bound
insb
push
fnstcw
stc
mov
rcll
dec
lea
xchg
mov
les
sub
test
fistpl
mov
faddl
mov
shlb
cmovg
orb
dec
xchg
cwtl
scas
mulb
pop
cwtl
mov
push
lahf
mov
nop
outsl
addl
ja
lret
lahf
rcl
mov
out
push
jp
pop
das
repnz
pop
mov
sub
dec
and
pop
popa
ret
fwait
pop
xchg
mov
fldcw
adc
dec
cmpsl
cmp
mov
hlt
movsl
cld
dec
frstor
mov
cltd
adc
mov
loop
hlt
shrb
adc
pop
lock
aam
dec
imul
inc
mov
clc
pop
push
xchg
xchg
lret
mov
ljmp
imul
hlt
pop
xchg
jmp
mov
add
mov
test
lock
sub
jnp
xchg
mov
xor
shll
aaa
pop
jl
int3
fwait
inc
cli
imul
xchg
loop
mov
iret
jae
int
jb
dec
adc
xor
leave
pop
xchg
dec
pusha
mov
push
dec
adc
mov
imul
or
cmp
dec
xchg
push
mov
add
bound
mov
mov
lea
out
push
pop
sub
lahf
mov
xor
and
mov
xor
lds
iret
mov
cmp
pusha
jno
rcr
leave
and
xchg
lcall
jmp
in
and
jae
imul
jno
jge
cmp
add
add
mov
imul
cmpsl
scas
ljmp
adc
sub
ret
dec
pop
flds
inc
je
data16
popf
inc
mov
lret
or
push
rorl
popa
dec
mov
jge
mov
sbb
in
ret
inc
imul
arpl
adc
xor
xor
push
cmp
mov
lahf
or
cltd
insl
sbb
adc
aaa
or
or
mov
int3
imul
push
pop
add
addr16
loop
scas
loope
mov
cmp
cwtl
cli
inc
arpl
mov
pop
hlt
dec
enter
daa
cmp
cmp
cmp
cmp
add
daa
inc
repnz
sbb
shll
test
lahf
icebp
imul
aad
mov
add
mov
into
pop
adc
xchg
xchg
js
scas
aaa
pop
jmp
jg
pop
sahf
push
loope
xor
sub
scas
cmp
lret
adc
pop
mov
filds
add
xchg
enter
mov
int
push
sub
jle
pop
and
loop
or
pop
fcoml
stos
sbb
sti
sahf
adc
data16
cltd
mov
jnp
mov
mov
mov
adc
out
ss
dec
push
cmp
es
neg
push
aaa
rcll
mov
cmp
xchg
mov
into
notl
lahf
xchg
int
fbld
cmp
jb
aad
jnp
xchg
stos
sbbb
add
daa
out
lods
xor
mov
inc
out
ljmp
rclb
sti
mov
dec
lahf
out
gs
loope,pt
pop
pop
ret
jmp
hlt
adc
in
repz
xchg
cmpsl
adc
sbb
cmpsb
sti
mov
sub
pop
mov
stos
mov
sbb
pushf
add
inc
xchg
ds
mov
cmc
dec
jge
dec
inc
xor
outsl
les
or
loopne
cli
or
fidivrs
call
and
adc
push
pushf
fcmovne
repz
pop
pop
inc
inc
cmpsl
sub
aas
movsl
add
dec
sbb
jnp
hlt
mov
inc
mul
in
std
das
ds
cwtl
jne
or
or
dec
sbbl
dec
mov
adc
in
aad
push
das
ror
dec
mov
jecxz
mov
ret
sub
push
es
pop
insl
dec
dec
cmp
mov
jl
mov
aad
lret
jae
mov
mov
enter
sub
jmp
sarb
stos
jo
in
lret
cmp
push
clc
jecxz
fisttpll
clc
xchg
mov
xchg
or
ljmp
mov
push
push
stos
in
icebp
out
push
sbb
xchg
xor
inc
push
dec
sbb
xor
mov
cli
stos
test
mov
cs
xor
lds
pusha
push
dec
sbb
clc
sarl
pop
hlt
fwait
jne
or
in
mov
add
xchg
std
ljmp
xor
repz
xor
aaa
mov
xchg
sub
fsubs
jbe
stc
adc
sahf
ja
xchg
sahf
dec
jmp
lret
loope
mov
push
jns
imul
mov
dec
pop
out
test
sub
pop
sub
jns
sub
in
cwtl
aaa
sub
cmc
out
pop
test
lcall
jp
mov
mov
in
test
sbb
int3
in
int
pusha
or
jne
call
in
jmp
mov
sbb
push
mov
sarl
jp
mov
hlt
and
imul
popa
rcrl
shrb
push
fs
dec
adc
mov
fcmovnb
mov
imul
inc
jg
arpl
cld
inc
stos
pop
or
sbbl
jbe
jnp,pn
sbb
repnz
pop
popa
xlat
inc
fisubrs
mov
or
aam
aad
push
clc
mov
cltd
das
dec
push
mov
adc
pushf
push
sbb
lret
divl
lret
or
mov
add
call
dec
out
mov
add
xor
xorl
and
in
cmp
adc
pop
inc
repnz
mov
idiv
inc
in
aas
sbb
shll
cmp
arpl
push
jl
dec
test
ds
fcmovu
movsl
and
negb
cmpsl
popl
test
lret
in
les
popf
loop
pop
pop
int3
pop
pusha
mov
pop
sub
loope
clc
cmpsb
sub
into
pop
sub
bound
jmp
adc
ss
test
pop
or
cmp
cmp
mov
in
xor
xor
pop
mov
mov
fdivr
aam
sbb
jle
test
adc
subb
mov
cli
ret
mov
mov
mov
dec
popa
adc
xchg
popf
cmp
loope
jb
cltd
bound
shrl
testb
jge
into
fcmovbe
xor
ss
outsl
sbb
mov
or
add
out
mov
lods
sbb
mov
push
movsl
cli
mov
dec
js
cmp
and
cmp
ljmp
icebp
dec
pop
js
xlat
adc
icebp
adc
cmpsb
push
repz
add
push
out
sbb
loope
nop
xlat
sbb
mov
push
cmp
jmp
es
loope
nop
lea
dec
and
cmp
fldcw
pop
les
inc
adc
jnp
pop
sbb
rol
lahf
push
xchg
pop
mov
adc
lods
icebp
pushf
mov
cmp
fcmovu
inc
imulb
aas
inc
test
jb
icebp
mov
je
push
sub
xor
imulb
dec
popf
std
mov
cwtl
xor
mov
add
in
xor
aam
dec
int
lret
jge
loop
repz
mov
cltd
lock
loopne
in
pop
das
mov
dec
push
push
ret
mov
clc
add
xor
dec
mov
cmp
sub
icebp
lods
dec
mov
mov
fcmovnb
cmpsl
and
and
pop
pop
and
in
dec
or
aam
mov
xor
cmc
sti
fnsave
mov
xchg
dec
lret
add
dec
pop
lods
rol
mov
out
mov
xchg
jns
fwait
push
and
jle
xchg
jae
add
fcomps
addr16
xchg
icebp
movb
mov
jge
popf
xchg
sbb
std
rorl
jmp
and
push
mov
add
cmp
pop
decl
aas
dec
xor
or
or
clc
das
xchg
out
inc
mov
movsb
sarb
mov
shlb
fadd
and
movsb
push
or
imul
int3
xor
xor
mov
scas
scas
out
xchg
cli
bound
rcrb
in
xchg
xchg
jns
in
lea
mov
jp
imull
mov
xchg
mov
pmulhw
dec
pusha
cmpsl
loope
filds
sub
xchg
movsl
mov
repz
andl
push
dec
insb
push
popf
pop
jno
mov
mov
stos
pop
and
lea
insb
int3
and
popf
scas
mov
push
push
stos
sub
stos
iret
mov
test
inc
mov
push
or
cld
repz
pop
sbb
adc
sbb
xor
push
cmpl
adc
repnz
or
leave
int3
rcl
hlt
in
xor
and
jbe
data16
sub
mov
sbb
mov
add
mov
mov
push
in
test
ficomps
data16
loop
movsb
xchg
jmp
inc
andl
sbb
sub
daa
aaa
es
cmp
aam
jno
mov
xchg
cmp
push
xor
outsb
push
mov
jp
fwait
test
xchg
outsb
mov
sbb
fwait
pop
xchg
xchg
js
xchg
movhps
pop
push
shll
sub
sub
lret
fsts
jmp
fnsave
rclb
mov
sbb
xor
stc
cmp
fwait
imul
mov
sub
aad
lcall
and
cmpsl
arpl
sahf
pop
dec
adc
leave
jg
ret
adc
pushf
lods
mov
dec
cld
cwtl
mov
cmp
push
xlat
sub
mov
scas
mov
pushf
add
negl
push
lret
sahf
roll
mov
lahf
or
or
mov
xor
imul
fs
adc
test
lods
add
mov
mov
sbb
out
pushf
pop
xor
ss
call
sar
inc
add
mov
movsb
pop
xchg
into
adc
push
lods
imul
gs
outsl
scas
sbb
sbb
fcom
pop
mov
cld
mov
addl
or
into
xchg
or
cmp
aad
push
in
mov
les
es
adc
call
push
add
in
adc
sub
test
pop
mov
and
xchg
aas
jecxz
ja
push
mov
dec
or
jns
orl
lahf
cwtl
jmp
cmp
push
fdivs
enter
aaa
mov
lret
in
xchg
adc
stc
lock
adc
push
inc
das
and
aam
ret
dec
mov
es
sbb
dec
mov
mov
mov
xorl
mov
dec
mov
mov
aas
jns
shl
adc
sub
or
mov
inc
iret
push
jle
mov
lcall
xchg
mov
jnp
arpl
int
cmp
sbb
xchg
rorb
push
ljmp
add
jne
sar
pop
test
lea
xor
rorl
and
test
and
sbb
sub
lock
pop
jge
setnp
cmc
rcrb
lea
add
cmp
stos
or
xor
pushf
or
jl
xor
or
jbe
pop
cwtl
jno
inc
push
jne
jp
inc
ja
nop
rorl
stos
das
inc
mov
add
das
loopne
jne
mov
out
sbb
inc
xchg
in
jmp
ds
into
lods
sub
nop
cmp
addr16
loop
jp
out
popf
mov
lahf
pop
mov
inc
and
test
dec
adc
fbld
mov
xchg
js
bnd
dec
out
jae
dec
add
jg
cmp
cmp
push
clc
subl
insb
aaa
pop
push
imul
xchg
push
repnz
aam
iret
ljmp
pop
jle
xchg
mov
inc
xchg
cmp
jns
sub
inc
fmulp
mov
xchg
mov
loope
enter
mov
test
push
sarb
mov
jp
mov
hlt
das
xor
push
sub
push
jbe
ja
jge
dec
stos
sbb
add
dec
sub
in
ja
add
push
dec
movsb
lock
push
enter
arpl
dec
scas
jle
push
and
sti
cmp
adc
adc
mov
in
or
lock
daa
ss
adc
jno
xor
cmp
push
ds
ljmp
or
inc
lahf
dec
aas
or
pop
xor
popa
inc
push
xor
xor
fildll
pop
scas
mov
js
imul
mov
push
loope
repnz
sub
push
dec
sub
or
shr
mov
xor
sbb
add
sub
cmpsb
dec
int
add
ss
xor
xchg
add
sbb
jne
sahf
cld
or
and
and
ret
push
jno
out
xchg
push
mov
in
mov
ja
adc
dec
add
cmp
push
xchg
notl
loop
lret
cmp
mov
push
into
mov
mov
lahf
outsl
sbb
pusha
stc
mov
adc
push
mov
data16
lods
out
push
mov
add
cli
and
dec
xor
inc
cmp
cwtl
popa
push
cmp
arpl
ret
stc
loopne
dec
mov
ficompl
pop
aas
xlat
adc
and
or
lock
push
sbb
push
and
cvtpi2ps
jecxz
in
in
test
adc
lds
cmp
adc
test
dec
lcall
fstps
sbb
dec
push
enter
inc
into
call
popf
ja
pop
lock
jp
sbb
sub
inc
loop
inc
cmp
addb
push
aas
sbbb
dec
jg
stc
je
movsb
and
rclb
mov
popf
std
and
fstpl
daa
pop
mov
add
sbbl
aad
pop
dec
decb
popf
jb
out
adc
outsb
fcmovne
mov
or
adc
cmpsb
cwtl
ret
xlat
enter
cltd
cmpsb
insl
add
dec
lods
or
xor
mov
pop
cmp
cld
cli
sub
mov
mov
dec
mov
pop
inc
and
sub
mov
aam
dec
or
inc
jne
ffree
dec
or
inc
dec
mov
jmp
popf
popa
jp
jns
cmpsl
sbb
out
jge
xor
pop
mov
hlt
rsqrtps
fldl
mov
cld
test
mov
xchg
popa
test
mov
cmpsb
xchg
inc
fwait
sbb
cli
scas
sarl
inc
bound
into
or
add
dec
decl
jg
cltd
fsincos
or
and
ja
xchg
test
mov
xor
aam
dec
ret
inc
and
sti
xchg
mov
jae
dec
adc
adc
inc
cmp
fadds
fsub
out
fildl
jg
adc
mov
test
xchg
jp
lcall
movsl
ret
outsb
jnp
dec
cmp
in
int3
imul
pop
filds
cltd
xchg
dec
mov
fistl
enter
and
es
aaa
jbe
stos
push
cmp
dec
imul
ds
cmp
adc
xor
ret
cmpsb
pop
mov
push
mov
mov
inc
cwtl
xor
loopne
mov
repnz
inc
pop
add
dec
add
xchg
xor
sbb
sti
out
out
xor
ficoms
dec
pushf
rcrb
jp
int
ror
jbe
hlt
jp
scas
push
js
adc
cld
scas
jge
sti
add
add
bound
pop
lret
fistpll
sub
int3
pop
rcll
adc
adc
sub
xchg
mov
push
and
xchg
push
cmp
movsb
test
mov
push
in
hlt
out
or
add
jg
sub
mov
inc
leave
outsb
jl
inc
push
cmp
inc
es
mov
and
xor
pmaddwd
sub
sub
or
fcom
mov
and
js
iret
rcll
out
pop
push
aam
loope
and
lahf
sub
pop
arpl
out
ret
popl
fmul
sbb
mov
and
stc
js
cltd
fcomps
sub
jl
lcall
jnp
std
cld
or
sbb
popf
sahf
lahf
shrb
nop
jg
pop
int3
mov
lods
rorl
or
ss
and
inc
adc
push
lret
arpl
jo
inc
mov
xorl
ja
into
or
cmc
mov
cmp
loop
je
stc
jno
cmp
testb
mov
mov
or
cld
out
push
cli
push
repz
xor
cmp
inc
in
adc
gs
cs
stos
fwait
scas
pop
aad
bound
xor
mov
xor
popa
push
mov
push
sbb
xchg
mov
xlat
mov
mov
push
mov
mov
sub
push
nop
push
pop
add
fmull
fnop
jl
les
fcomi
sbb
lea
cmp
xor
js
adc
xchg
scas
pushf
enter
test
call
mov
inc
cmpsb
cld
mov
and
or
dec
mul
xchg
je
dec
aam
pop
pop
pop
div
sub
std
lret
push
jecxz
out
or
xor
add
lret
lret
mov
jbe
inc
xor
xchg
add
mov
lret
mov
dec
mov
inc
cwtl
sti
insl
call
out
cmpsl
xor
sub
xor
cld
and
cmpsl
mov
mov
stc
lea
jge
call
sub
mov
jle
add
sbb
clc
cmp
xchg
push
les
pop
in
popa
xchg
sub
lods
adc
sub
loopne
pop
xchg
dec
iret
test
cmpxchg
xchg
add
xchg
imul
outsb
inc
dec
int
xchg
test
out
lahf
xchg
sbb
imul
shl
int
xor
push
jno
loopne
inc
xor
call
or
push
xchg
shl
and
mov
lock
ja
pushf
add
mov
mov
add
mov
pop
and
cmp
mov
dec
pop
out
and
stos
bound
jno
dec
xchg
push
in
mov
subl
adc
xchg
frstor
scas
lret
stc
stc
mov
jecxz
mov
lahf
cmp
jle
sub
in
jmp
inc
fbld
xchg
push
sbb
xchg
in
daa
jae
mov
push
xchg
xor
mov
jbe
cwtl
stos
and
sbb
mov
jl
fs
fldln2
jle
addb
adc
lods
ret
mov
inc
stos
and
pop
inc
fwait
fwait
add
insl
jnp
inc
fdivrl
jg
mov
sbb
push
gs
sbb
push
rol
or
mov
and
cltd
leave
xor
mov
lds
sbb
adc
mov
mov
mov
or
xor
dec
int3
add
dec
addb
push
mov
dec
xor
out
inc
pop
scas
cmp
add
jo
cmp
and
movsb
xor
lods
inc
cs
out
cmpsb
add
sbb
fldt
xchg
daa
xor
jae
pop
pop
mov
jl
xchg
cmpl
lret
aas
sub
and
ljmp
repz
test
imul
cld
xor
xchg
cld
gs
fcompl
jo
js
lret
es
push
arpl
loope
jl
sub
sub
sub
stc
pop
adc
mov
popa
pop
subb
fiadds
mov
cmp
test
add
adc
sub
testb
xchg
and
inc
and
sbb
mov
test
les
sbb
push
mov
sti
aaa
mov
repnz
cld
inc
xchg
jae
jmp
dec
leave
notl
cwtl
inc
roll
jl
mov
pop
jne
andb
outsl
xchg
xchg
jb
mov
sub
fs
pop
dec
add
mov
mov
add
lahf
out
push
adc
xchg
cmp
sti
cmp
idivb
jle
gs
std
sub
pop
hlt
push
adc
fstps
adc
cmc
in
repz
out
xchg
jbe
or
data16
cmp
iret
push
xlat
adc
imul
ret
jmp
in
subl
and
mov
daa
sbb
cmp
inc
jmp
pop
adc
les
sbb
sbb
ja
cli
icebp
call
fwait
call
sub
ss
pushf
jae
inc
push
dec
or
inc
rcr
aas
sarb
dec
insl
jg
je
dec
inc
shrl
sub
ss
pop
std
jb
ss
sbb
pop
mov
cwtl
and
lret
jne
orl
and
mov
int
lock
das
sub
lahf
mov
jbe
push
and
inc
mov
cmc
adc
ds
iret
mov
icebp
cmpsl
xor
mov
or
sbb
addr16
lds
mov
test
pushf
in
push
rcrb
sub
pop
aam
inc
fidivl
mov
int
mov
pop
inc
ljmp
inc
lods
jge
mov
popa
xchg
out
inc
sub
jg
nop
fisttpll
movups
jb
mov
iret
cltd
jne
push
test
popf
jnp
cmp
dec
loope
imul
xchg
shrl
xchg
pop
jle
add
adc
xor
test
int3
incl
jbe
or
jle
sahf
inc
xchg
and
mov
sub
lods
pop
stos
fnstenv
cmc
out
dec
test
mov
push
sbb
push
fistpl
cmc
sub
mov
sbb
add
add
lret
jns
cld
fdivs
test
sub
addl
cmp
or
mov
mov
sbb
out
sarl
dec
cli
in
push
pusha
adc
filds
cmpsb
repz
scas
popf
out
xchg
nop
imul
stc
add
push
mov
pusha
stos
dec
int
and
decl
imul
scas
cmp
test
adc
adc
xchg
iret
pop
jmp
rcrl
nop
inc
mov
fbld
xor
inc
sahf
jns
or
call
notl
scas
jecxz
xchg
loope
ss
jp
pop
dec
inc
fcomp
faddl
lds
js
mov
jae
pop
leave
test
fcomi
adc
bound
arpl
jge
add
cmp
test
rorb
lds
ror
in
mov
push
jno
adc
mov
cld
push
scas
sbb
and
mov
rep
mov
xor
cmpsb
xchg
in
ret
enter
daa
xor
cmp
data16
out
jp
pop
dec
stc
ds
sub
and
cltd
sub
adc
test
ret
xor
popa
sub
js
pop
pop
gs
push
cmpsl
pop
loope
negl
sub
aad
sub
fisubrs
sarb
push
aas
inc
int3
cmpb
jmp
and
lahf
enter
fwait
int
addr16
sub
xor
lcall
in
push
out
sbb
bound
xor
or
call
jbe
mov
sub
add
leave
rolb
mov
notl
lret
pop
rcrl
aaa
or
loop
cmc
dec
mov
add
out
inc
cmp
fs
add
icebp
mov
xchg
loopne
pushf
js
mov
leave
popf
out
ret
mov
je
cmp
push
mov
movsl
push
add
gs
jo
pop
adc
data16
andl
adc
insb
mov
lea
xlat
push
lcall
sbb
sub
gs
out
add
mov
aam
dec
dec
mov
testb
loope
ds
fld
mov
lahf
xor
pop
xor
lea
cmpsl
call
sbb
pushf
pop
or
adc
pop
jae
jecxz
xchg
pop
adc
inc
pop
aas
pop
pop
dec
jb
mov
dec
in
sbb
sbb
mov
add
xor
fs
mov
and
push
dec
jecxz
push
mov
pop
mov
jnp
lock
cwtl
mov
sub
adc
test
clc
es
icebp
popf
insl
mov
dec
dec
popf
popa
pop
cmpsl
xor
fbld
mov
mov
and
daa
pop
mov
mov
mov
sub
jp
aam
inc
jmp
xchg
mov
mov
int3
fnsave
xchg
jb
notb
lahf
xchg
test
in
inc
insb
sbb
lods
call
lret
cmpsb
or
xchg
fcompl
dec
push
imul
outsl
mov
add
gs
test
repnz
xchg
jp
fwait
jns
test
push
jmp
pop
sar
sbb
push
push
rol
jne
pop
sub
xor
mov
cs
ret
iret
cwtl
jmp
push
jecxz
xchg
adc
loop
aam
jmp
jne
mov
icebp
jne
jecxz
adc
data16
mov
stos
dec
fwait
inc
mov
or
mov
mov
dec
mov
lods
mov
ret
loop
push
bound
mov
jmp
dec
mov
out
and
adc
jl
addr16
mov
jp
shl
mov
mov
mov
std
arpl
mov
sbb
imul
scas
adc
fbld
imul
arpl
push
popf
and
mov
hlt
push
stos
rcl
and
xchg
scas
lahf
mov
push
push
xchg
inc
cld
jns
dec
sub
pop
pop
stos
mov
shrl
arpl
pop
sbb
lret
xchg
or
arpl
fidivl
ja
cmp
int
je
outsb
pop
jnp
das
fidivrs
add
adc
pop
shr
or
push
cmp
pop
mov
adcl
aam
fwait
inc
xchg
jge
pop
repz
adc
mov
xchg
sbb
fsubrs
sub
push
fstl
jo
pop
scas
cli
xor
xchg
and
mov
add
loop
cmpsb
or
out
test
mov
mov
jno
imul
mov
cmp
lock
sbb
mov
dec
inc
xchg
and
push
lahf
lret
push
cltd
bound
loopne
push
fimuls
ja
ret
jmp
push
pop
dec
mov
xor
movsb
lahf
add
sahf
gs
xchg
aas
sub
push
xor
outsb
fdivs
hlt
rcrb
add
rolb
push
add
cmp
and
xchg
mov
int
test
and
pop
lcall
push
out
dec
ja
cwtl
mov
cmpsl
pop
lret
xchg
cld
test
cmc
and
push
adc
cmp
popf
out
mov
mov
mov
aaa
stos
cmpsl
fadds
mov
lret
in
xor
iret
lret
push
xchg
into
sub
ds
adc
lea
pop
insb
fisubrl
adc
sahf
stc
xchg
lea
dec
dec
out
nop
lock
dec
adc
xor
mov
jmp
cli
in
cmp
mov
orb
sub
inc
test
loopne
stc
mov
xor
imul
repnz
xchg
cld
xchg
sbb
inc
lret
xchg
pop
pop
sub
test
cwtl
jnp
jmp
mov
leave
aad
in
nop
scas
testl
mov
xchg
fnstenv
pop
movb
and
enter
and
outsl
pop
mov
mov
push
fistl
sarl
shll
inc
pop
out
pop
inc
mul
sarl
hlt
call
dec
pop
sahf
fbstp
or
or
dec
idivb
dec
cwtl
xchg
cld
mov
jp
mov
xor
lret
pop
add
or
lock
jae
das
ljmp
mov
nop
xor
ret
adc
es
dec
dec
insl
popf
mov
mov
mov
mov
sar
cmpsb
mov
mov
lods
aas
jle
shll
pop
fisubl
sub
mov
aam
nop
lods
mov
push
ds
dec
in
fstpl
test
xor
dec
ljmp
fldt
not
out
or
out
and
push
inc
mov
bswap
xchg
push
cltd
jecxz
ret
test
mov
dec
add
pushf
xchg
mov
sbb
aad
rcrl
xor
pop
aam
test
pop
cmp
add
ficomps
pop
inc
xor
xor
loop
or
fnstenv
fs
xchg
rcrb
mov
sub
mov
shll
out
mov
push
or
or
mov
lock
dec
sahf
xchg
sub
hlt
nop
cmp
sarl
bound
pop
jns
and
adc
adc
or
mov
mul
lahf
or
mov
jp
dec
xorb
sub
lods
popf
mov
in
cwtl
int3
pusha
dec
and
mov
xchg
pusha
jmp
xchg
inc
adc
push
fimuls
out
popf
inc
mov
adc
outsl
inc
stos
xor
mull
mov
in
imul
scas
add
outsb
adc
mov
ret
jns
xchg
fcmovnb
inc
int3
lods
insl
arpl
les
or
fidivs
add
ficoml
fcompl
dec
pop
pop
stos
bound
and
or
fwait
inc
mov
add
sub
sbb
pop
leave
xchg
insb
inc
hlt
cmpsb
out
ret
push
mov
bound
cltd
jns
xchg
sahf
push
sbb
add
aaa
add
and
int3
ret
movsb
add
fcoms
inc
sti
mov
add
adc
sub
movsb
aad
inc
inc
fcmovnbe
jnp
mov
in
nop
sub
daa
xor
call
jno
xchg
sub
lea
mov
sarl
bound
adc
sbb
out
test
pop
push
xor
inc
scas
hlt
enter
fdivrs
xor
push
dec
and
sub
movsb
cmp
outsb
cmp
or
xor
std
or
jecxz
insb
sbb
xchg
add
adc
and
rcll
int
xchg
popf
or
pop
sbb
fs
test
std
lret
sbb
test
out
stc
jg
mov
mov
mov
mov
sahf
ss
xor
cmp
dec
mov
shlb
or
int3
push
sub
or
jge
into
shufps
xlat
mov
outsl
xor
daa
loop
shrb
pop
mov
fsubr
mov
pop
xor
data16
cmp
mov
leave
insl
out
sub
cli
and
add
js
mov
sti
add
paddd
or
jbe
add
push
xchg
xchg
pop
push
push
popf
adc
mov
stos
and
repz
mov
sbb
jle
mov
sub
sbb
add
pusha
jmp
mov
push
aad
out
xchg
nop
mov
lret
dec
jne
popl
push
loope
shrl
and
ret
fwait
aaa
mov
pop
outsl
outsl
adc
adc
neg
inc
and
inc
inc
fbstp
inc
adc
ret
aas
popf
xchg
mov
dec
shlb
ljmp
and
idiv
scas
hlt
std
addr16
cwtl
dec
fwait
mov
movsb
push
adcl
int3
lret
xchg
ret
mov
add
das
leave
lahf
push
mov
fwait
jns
and
stos
cmc
ret
mov
sbb
test
sub
sub
cmpsl
xor
pop
mov
mulb
mov
sar
insb
and
pop
or
stc
sub
aad
cmc
sub
mov
aam
xor
mov
iret
notl
and
insb
orl
pop
ljmp
nop
lods
mov
call
adc
push
and
cvtps2pi
ficomps
mov
mov
xchg
add
jl
test
jge
xchg
ficompl
jl
push
shll
hlt
pop
jg
xor
in
cwtl
out
push
std
cmp
add
stc
cmpl
cmp
or
shlb
xor
jno
xchg
or
xor
pop
fdivl
dec
dec
add
inc
or
popa
aad
inc
cli
dec
xor
sub
mov
js
jns
inc
sub
popf
mov
mov
push
or
or
ds
jbe
jp
jle
mov
sbb
mov
pop
fwait
aaa
jle
gs
in
inc
outsb
pusha
in
mov
xchg
push
or
mov
bnd
cmp
push
mov
enter
mov
stos
cmpsl
or
and
imul
dec
stc
scas
gs
sbb
cwtl
les
clc
pop
loopne
and
mov
pop
enter
xlat
subl
or
pop
popf
dec
inc
fadd
ret
js
xchg
out
rcrl
out
lret
sbb
sahf
lods
lds
subb
insb
pop
cmp
insb
inc
add
or
adc
push
add
cld
jbe
arpl
jge
shl
stos
pop
sbb
ret
or
mov
outsl
dec
ds
pop
push
sbb
adc
xchg
mov
and
add
or
cmpsb
jge
add
nop
sbb
xor
arpl
daa
xchg
cli
jno
loope
jl
pop
pop
cmp
ds
sti
sbb
and
push
sbb
sahf
das
test
and
xor
insb
jae
cwtl
xchg
pop
js
jnp
pop
and
push
test
push
sub
leave
sub
push
mov
outsb
sahf
inc
addr16
push
imul
div
stos
sbb
cmp
and
dec
push
dec
fs
int
imul
cwtl
and
lcall
mov
push
jp
sbb
xchg
push
test
add
xchg
dec
jg
sub
loope
jns
movsb
xlat
mov
aaa
xchg
popa
ss
pop
xor
mov
rorb
aaa
cmpsl
shll
mov
push
out
sahf
dec
mov
adc
outsl
adc
xor
add
mov
arpl
movsb
add
imul
mov
daa
lahf
out
and
cli
push
cltd
fnsave
dec
or
cmp
pop
rol
