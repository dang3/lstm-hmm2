jmp
mov
jmp
mov
jmp
mov
xor
aaa
fs
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
mov
push
call
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
movl
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
mov
mov
mov
push
call
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
add
xor
cmp
xor
ss
aaa
cmp
xor
xor
add
in
add
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
mov
push
call
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
mov
mov
mov
push
call
movl
mov
push
call
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
movl
mov
push
call
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
mov
mov
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
movl
mov
push
call
call
mov
mov
mov
push
call
movl
mov
push
call
call
call
mov
pop
ret
add
xor
aaa
aaa
xor
cmp
xor
xor
add
add
xor
xor
cmp
xor
add
xor
aaa
ss
cmp
xor
xor
cmp
xor
push
mov
add
mov
mov
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
mov
cmp
je
call
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
mov
xor
divl
test
jne
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
mov
cmp
je
jmp
cmp
jo
mov
lea
lea
mov
xchg
inc
mov
lea
xchg
mov
xchg
dec
mov
lea
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
mov
cmp
je
call
cmp
jo
mov
lea
lea
mov
xchg
inc
mov
lea
xchg
mov
xchg
dec
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
mov
sub
mov
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
push
mov
mov
xor
call
mov
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
mov
mov
mov
call
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
push
mov
mov
xor
call
mov
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
mov
mov
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
mov
mov
push
add
jmp
mov
mov
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
lea
mov
push
mov
jmp
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
mov
lea
lea
mov
xchg
inc
mov
lea
xchg
mov
xchg
dec
mov
lea
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
mov
sub
add
add
mov
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
mov
mov
movl
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
or
push
pop
jecxz
push
pop
int
push
pop
idivl
push
pop
add
push
pop
jmp
push
pop
cmc
cmp
pop
cmp
mov
out
add
adc
out
add
aaa
mov
out
add
cmp
out
add
aas
mov
out
add
mov
mov
out
add
mov
mov
out
add
sub
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
ja
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
push
call
mov
movl
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
mov
mov
call
mov
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
movl
mov
mov
call
mov
cmpl
je
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
mov
mov
call
mov
cmpl
je
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
lea
push
push
mov
sub
push
mov
push
call
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
cmp
je
mov
subb
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
xor
add
mov
xor
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
incl
mov
cmp
jne
cmp
jo
mov
lea
lea
mov
xchg
inc
mov
lea
xchg
mov
xchg
dec
mov
lea
mov
mov
call
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
push
mov
push
call
cmpl
je
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
push
mov
pushl
xchg
push
jmp
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
cmpb
jne
movb
cmp
jo
mov
lea
lea
mov
xchg
inc
mov
lea
xchg
mov
xchg
dec
mov
lea
mov
push
call
mov
mov
mov
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
jmp
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
movb
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
mov
mov
pop
ret
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
call
test
jne
mov
jmp
movw
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jne
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
mov
mov
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
mov
mov
mov
push
call
mov
mov
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
mov
mov
mov
push
call
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
push
call
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
mov
mov
mov
push
call
mov
mov
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jne
dec
dec
mov
jmp
mov
mov
mov
xchg
mov
lea
mov
xchg
dec
inc
dec
je
lea
lea
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
mov
mov
mov
push
call
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jns
lea
xchg
mov
mov
lea
xchg
mov
inc
dec
mov
xchg
mov
xchg
mov
dec
inc
inc
mov
pop
ret
add
ss
cmp
xor
add
cmp
xor
ss
xor
xor
cmp
xor
add
popa
jo
ja
jp
arpl
add
push
mov
add
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
cmp
ja
lea
lea
xchg
mov
xchg
xchg
mov
dec
dec
je
xchg
mov
lea
lea
mov
mov
dec
movl
mov
push
call
movl
mov
push
call
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
lea
mov
lea
cmp
jg
lea
lea
lea
xchg
mov
xchg
xchg
xchg
lea
dec
inc
inc
movl
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jo
lea
xchg
jmp
mov
dec
dec
dec
mov
inc
mov
xchg
mov
lea
mov
inc
dec
jne
xchg
mov
mov
dec
inc
inc
movl
mov
push
call
cmp
jge
xchg
mov
mov
lea
mov
lea
mov
mov
lea
xchg
xchg
xchg
xchg
mov
dec
movl
mov
push
call
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
add
xor
xor
add
add
xor
xor
cmp
xor
add
subl
jae
mov
cmp
jo
mov
lea
lea
mov
xchg
inc
mov
lea
xchg
mov
xchg
dec
mov
lea
mov
mov
mov
lea
call
cmp
jo
mov
xchg
lea
inc
inc
cmp
jae
xchg
mov
lea
mov
xchg
mov
dec
dec
mov
mov
lea
inc
inc
dec
ret
ret
lea
add
fdivs
aas
sub
and
add
jbe
add
or
add
nop
sti
movb
jecxz
xor
into
dec
add
xchg
xor
add
xchg
mov
lcall
addl
sbb
add
push
pushf
cmp
sbb
fistpll
mov
adc
lods
add
jnp
pop
add
add
add
and
sbb
inc
je
rolb
add
nop
pop
jge
adc
fists
shrb
int3
xor
sti
mov
dec
push
inc
add
xchg
add
dec
add
scas
add
cmp
push
jo
or
jae
fdiv
lret
leave
loop
push
mov
lods
mov
inc
je
cmp
pusha
inc
xorb
aaa
lea
push
add
mov
leave
xor
bound
xchg
adc
add
add
fstl
pusha
add
icebp
aaa
add
xchg
add
add
lds
add
mov
dec
mov
push
fucomi
pushf
xchg
add
mov
mov
call
out
xlat
fmull
scas
mov
sbb
lods
add
cmc
add
mov
insb
add
add
rolb
inc
adcl
inc
sbb
add
add
in
add
jl
testl
add
cmpsl
add
mov
sbb
add
ds
sub
mov
sub
jge
cmp
or
add
add
cld
add
add
jbe
mov
push
mov
faddl
add
fstl
lods
enter
jne
add
add
sbb
add
add
add
add
add
mov
shll
repz
sub
pop
mov
out
add
sbb
add
cld
and
popf
dec
insb
cmp
test
repnz
out
dec
xor
and
mov
outsb
mov
adc
inc
and
out
jns
push
lahf
sbbb
cmc
lock
inc
stos
jo
add
add
add
fmuls
inc
add
add
and
addr16
sub
add
aas
enter
inc
add
jo
add
scas
shrl
xchg
sub
add
push
lahf
inc
ds
mov
add
lods
dec
sbb
aaa
add
xchg
xchg
hlt
or
push
mov
add
test
add
and
mov
inc
fdivs
push
mov
daa
popa
mov
or
aas
add
addl
xchg
xor
fstpl
dec
mov
rolb
addr16
nop
add
cs
roll
mov
pop
fnsave
add
in
xchg
popf
repz
add
mov
add
mov
add
addl
adc
fistps
mov
daa
mov
or
ss
sbb
mov
aad
and
add
aam
cld
sahf
std
add
add
dec
sub
push
negb
testl
cmpsb
add
pop
dec
rcrl
mov
mov
repz
out
adc
shrl
les
sahf
add
movl
mov
sbb
outsb
fsubs
sbb
pop
cmp
hlt
mov
cmp
aad
scas
add
pop
add
cmpsb
js
sub
leave
adc
or
or
jae
mov
mov
mov
aad
adc
fidivs
inc
clc
sbb
jecxz
sbb
and
xchg
movhps
cltd
pop
pop
out
push
mov
or
add
aas
stos
scas
fwait
in
outsb
rorb
fmuls
jle
outsb
xor
inc
mov
jae
jl
arpl
jge
js
and
inc
aam
push
and
jae
dec
dec
push
mov
inc
mov
push
xchg
jb
fimull
sbb
xchg
rorl
imul
scas
pushf
loop
push
cmpsl
sti
pop
adc
cmp
out
cmp
leave
mov
xor
jo
xor
xchg
jbe
inc
cmp
or
dec
jne
inc
cmp
and
cmp
rcrb
mov
cmp
lds
dec
shrb
inc
mov
arpl
jl
mov
movsb
pop
repz
push
testb
jbe
or
sbb
test
gs
cmp
mov
mov
dec
sar
out
push
sarl
sti
jo
or
lea
jg
sbb
dec
inc
popf
test
cmpsb
out
in
mov
mov
daa
adc
subl
pop
imulb
add
cmp
lahf
je
pop
in
fsubl
cmp
fiadds
icebp
testl
xor
flds
add
mov
mov
es
push
ja
jl
mov
aad
cmp
aad
push
adc
frstor
mov
dec
enter
add
mov
mov
incb
lahf
pop
mov
inc
xchg
push
sub
pop
ret
pop
sti
loop
lret
in
jle
or
loope
sahf
inc
lcall
xchg
xchg
jo
mov
stc
loop
in
mov
adc
sub
mov
sub
sub
call
mov
cli
sbb
add
cmp
jp
or
pop
fprem1
sub
xor
popa
or
outsl
push
dec
sub
imul
bound
lods
jl
mov
out
sbb
mov
mov
test
push
incb
pop
shlb
xchg
jge
inc
add
pop
repz
add
fstps
mov
les
or
repz
xchg
cltd
mov
sbb
push
bound
imul
mov
cs
push
jo
lret
nop
xor
je
xchg
movsl
xchg
jb
mov
addr16
mov
fs
jg
lahf
lea
xor
add
mov
mov
fwait
or
inc
mov
divps
mov
inc
aas
aas
insb
mov
sub
fs
les
rcrl
in
and
stc
push
cwtl
aaa
lret
inc
mov
pop
jae
xchg
inc
cld
addr16
mov
dec
mov
jge
mov
xor
lock
stos
add
jmp
jg
outsb
enter
jb
pop
fwait
test
fs
es
dec
insl
xchg
es
std
inc
cmpsl
adc
ljmp
and
pop
stc
mov
stos
mov
mov
fwait
jmp
ss
mov
rolb
sbb
ljmp
clc
push
push
in
fs
sbb
lock
mov
mov
push
stc
push
xchg
mov
fwait
orl
repnz
and
ret
xor
push
fwait
mov
mov
out
test
mov
dec
sti
sarb
lret
or
inc
jnp
outsl
clc
add
pop
add
add
and
incl
mov
vcvtsd2usi
int3
cli
xchg
push
lahf
and
ret
mov
adc
scas
aam
xor
fdivl
xchg
inc
mov
dec
sbb
adc
aas
jge
mov
out
ret
xchg
and
mov
sbb
jmp
fisubl
loope
sub
mov
push
jne
or
icebp
addr16
into
stos
and
and
test
inc
xchg
ljmp
add
in
lock
out
filds
jl
pop
cmp
inc
and
xorl
adc
jnp
inc
popf
add
push
push
aam
mov
ret
xchg
sbb
sbb
sub
mov
push
out
out
jno
mov
xchg
enter
push
leave
jmp
dec
arpl
or
or
ret
xor
mov
loop
add
jmp
pop
pop
ss
fisttps
in
dec
sbb
data16
mov
cmp
inc
movsb
stos
ljmp
sti
insb
cmpb
xchg
sbb
sub
jno
push
cli
jl
mov
addr16
mov
jmp
jo
adc
push
stc
pop
icebp
test
in
ja
inc
sub
cmpsb
imul
mov
daa
adc
push
mov
loope
jns
sub
add
jl,pt
shll
aad
cmp
xor
outsl
sbb
scas
addl
dec
xor
dec
jmp
loopne
hlt
shl
test
rcrl
into
jns
fcompl
pop
sub
into
outsb
cmp
sub
sarb
nop
je
fwait
rorb
outsb
cmpsb
push
and
js
push
mov
xor
sub
test
lret
mov
mov
int
sbb
stos
addl
push
loop
lahf
pop
stc
jbe
push
lods
fisttpll
jns
mov
insb
xchg
cmp
mov
dec
sar
dec
popa
aam
cmpl
pusha
into
mov
cmc
lock
add
mov
xchg
das
adc
stc
pop
imul
add
jo
xchg
ret
arpl
mov
out
repz
sub
push
mov
clc
enter
push
jmp
gs
test
loopne
or
pop
adc
xchg
fsts
push
arpl
stos
push
cmc
xchg
pop
pop
outsl
sbb
mov
movsb
into
pop
sbb
gs
or
mov
push
cs
ja
adc
clc
dec
testb
dec
cmp
mov
jecxz
imul
call
jns
mov
push
mov
dec
cs
sbb
repnz
pop
xor
fiaddl
inc
fidivrs
fimuls
xchg
lock
shr
push
lret
mov
cwtl
repnz
add
outsl
mov
xchg
xchg
cld
cld
push
add
lret
notl
pop
mov
lds
das
lret
shlb
push
sub
outsb
data16
imul
sub
dec
clc
pop
jns
adc
das
ljmp
push
mov
or
movsl
push
mov
mov
or
cmp
test
push
lods
sbb
fnstsw
or
mov
insb
popa
sar
fwait
mov
xor
movsb
stos
dec
xchg
clc
out
imul
cmpsb
xchg
mov
xor
and
cmp
imul
lods
iret
xchg
jne
test
stos
add
dec
out
test
inc
popa
jge
or
dec
cmp
mov
mov
add
and
bound
mov
jb
int
mov
xor
mov
sbbl
jp
mov
mov
rcrl
mov
mov
out
dec
or
mov
scas
out
mov
cmp
xchg
movsl
mov
mov
pushf
out
dec
adc
xlat
jno
addr16
mov
and
pop
jnp
shll
jle
lea
push
mov
inc
fbld
dec
cmpsb
pop
jno
xor
jae
and
loope,pt
popf
daa
out
mov
adc
xchg
fidivl
rcll
jg
imul
stos
scas
bound
pusha
adc
lods
iret
movsl
jge
bnd
mov
hlt
push
mov
repnz
add
fmull
xchg
cmp
add
xor
and
add
adc
lds
test
fs
mov
mov
or
and
and
cmp
ds
mov
je
test
push
jns
aaa
jecxz
ret
inc
je
subb
dec
scas
cmpsb
dec
push
xchg
test
xor
pusha
jo
scas
mov
pusha
pop
test
mov
cmp
jo
push
enter
daa
adc
mov
sub
shll
cwtl
mov
ds
test
xor
jle
jo
lahf
lahf
leave
mov
inc
add
pop
or
add
rcrl
push
insl
cld
pop
push
sbb
pop
ret
in
mov
push
and
cmc
bound
inc
xchg
xchg
outsb
fwait
xor
adc
xchg
xchg
xor
xor
hlt
cltd
sti
mov
or
and
xor
push
movsl
sub
outsl
sub
stc
ja
stc
test
aad
lods
inc
jge
mov
sahf
mov
xor
jg
mov
cld
stc
sub
pop
adc
jo
ss
jns
cmp
pop
loope
divl
mov
xor
data16
test
or
push
into
outsl
inc
pop
cmc
mov
add
pop
mov
out
adc
mov
or
xchg
jmp
into
lods
dec
or
shl
lock
xor
arpl
ret
insl
mov
loopne
sub
pop
xor
inc
sub
sbb
mov
fld
xor
pop
repz
push
xchg
pop
sub
mov
or
xlat
mov
or
in
adc
loopne
pushf
aam
pop
jmp
lahf
and
adc
mov
nop
ljmp
jb
pop
das
dec
mov
and
inc
jecxz
cmc
mov
movups
sti
fadd
clc
aas
lds
xor
and
stos
fs
aam
add
fiadds
in
aas
jge
loopne
push
into
mov
and
pop
aas
sarl
sub
cltd
std
inc
call
jne
ret
mov
insl
push
xchg
cld
xor
iret
mov
mov
dec
das
test
jbe
sub
enter
mov
sbbb
insl
fs
dec
repz
movsb
aaa
ljmp
ret
push
mov
xor
and
mov
cmpsl
fadds
dec
sub
adc
jecxz
or
fidivl
frstor
clc
int3
mov
xchg
loop
or
fsubl
rcll
push
pop
ffreep
insl
stos
cmp
std
out
int3
xchg
popa
xchg
dec
dec
sbb
prefetch
dec
or
sbb
mov
cmpsb
lret
dec
jmp
pop
xchg
push
push
dec
loope
cmp
or
push
pop
fwait
int
out
push
pop
or
mov
pop
pop
sar
inc
dec
jns
pop
imul
or
in
or
fs
pop
out
adc
lds
fistpl
jp
fs
ret
xchg
ljmp
sub
loope
lcall
xor
out
cmpb
xchg
lret
jmp
jo
adc
inc
roll
js
sub
rolb
hlt
stos
pop
push
mov
mov
insb
sbb
mov
push
xchg
jle
or
out
pusha
inc
pop
nop
ffreep
mov
mov
fwait
pop
test
inc
inc
aaa
and
push
add
mov
push
jmp
fisubrl
das
xor
sub
adc
push
jl
inc
adc
or
repnz
push
leave
in
mov
hlt
push
pop
xchg
xor
inc
pop
or
or
mov
aam
or
aas
mov
decb
sub
pop
mov
adc
sarb
mov
sbb
aas
cmp
test
scas
push
jecxz
mov
mov
sbb
cmp
or
aaa
mov
sbb
jno
jl
jl
and
dec
push
mov
fidivs
mov
and
push
lahf
cwtl
jmp
push
cmpl
cmpsb
outsl
popf
insl
in
push
xchg
inc
enter
daa
adc
xchg
push
xchg
inc
loope
and
sub
ja
cmp
ret
ds
movsl
cmp
dec
lahf
call
push
jmp
add
jge
xor
loop
shll
js
xchg
js
ret
add
stc
push
jl
scas
fdivl
xchg
outsb
jb
adc
outsb
stos
in
cmp
fbstp
imul
mov
shrl
xor
push
test
insb
int
sbb
pop
js
ror
pop
imulb
inc
xor
mov
js
sbb
dec
mov
test
outsb
and
fdivrs
pushf
mov
pusha
sahf
ljmp
jb
adc
cld
add
repnz
cmp
sbb
divl
inc
cli
mov
icebp
xor
repnz
adc
into
push
and
cmc
jle
fwait
xor
out
lock
adc
jmp
add
sbb
mov
jne
out
arpl
sub
repz
mov
into
sub
sti
xchg
sbb
gs
add
adc
pop
push
sti
xchg
inc
cmp
les
cltd
xchg
loop
push
cmp
cld
sbb
icebp
mov
pop
andb
pushf
jg
test
ja,pn
jo
lahf
add
nop
lds
dec
mov
mov
dec
sub
testl
and
mov
lea
sbb
jbe
add
dec
lahf
mov
daa
inc
or
loop
fistl
jle
ja
filds
shll
aas
sbb
inc
mov
xor
rorl
sbb
push
ret
lock
inc
xor
pop
inc
dec
lret
aad
mov
sti
mov
adc
push
mov
cmpsl
rorb
enter
push
aam
add
xor
enter
cmpsl
ud0
popa
in
mov
mov
push
cmp
mov
mov
clc
or
add
sub
pop
xchg
mov
xor
fisttpll
lahf
push
xchg
and
sbb
jle
pop
mov
stos
sub
mov
das
iret
xchg
xchg
iret
adcb
xchg
sbb
jmp
fimull
daa
pop
sub
sub
or
test
inc
push
mov
push
xchg
xchg
mov
or
enter
xchg
push
add
icebp
add
jmp
scas
shll
push
mov
in
sub
xchg
fldt
mov
notl
ja
mov
jp
movl
mov
xchg
jne
dec
les
daa
mov
mov
out
pop
mov
xchg
popf
fsubrp
std
out
xchg
cmp
adc
fsub
icebp
pop
mov
int
xlat
outsl
mov
stos
jp
adc
insb
test
arpl
jnp
in
ja
pusha
push
ret
inc
pop
fists
inc
inc
int3
mov
push
les
pop
popf
jne
mov
push
xchg
mov
fisttpl
xchg
sbb
sahf
jp
pop
scas
in
scas
sub
push
ret
and
iret
arpl
repnz
xor
leave
fs
hlt
pushf
push
push
arpl
cmpsb
loope
or
adc
push
aaa
mov
rolb
xchg
shll
stc
jmp
pop
call
inc
inc
lds
cwtl
mov
scas
fwait
dec
cmp
leave
in
xor
jbe
dec
test
ret
sbb
mov
popa
cmp
insl
mov
dec
lea
push
pop
bound
xor
push
imul
push
jb
test
dec
pop
mov
jg
repnz
in
ds
enter
daa
jns
aaa
sub
sub
lock
cmp
sarl
in
mov
cmpsb
adc
lahf
pop
mov
xchg
sbb
test
add
jnp
xor
mov
xchg
rclb
js
and
lcall
xchg
fcompl
mov
and
mov
adc
dec
rcll
fwait
shrb
fldenv
mov
int3
mov
push
stos
iret
dec
jecxz
sub
and
pop
testl
fmull
idivb
test
and
repz
stc
fwait
mov
into
adc
add
cmp
aam
call
cli
out
mov
cmp
daa
and
leave
add
test
inc
or
int
dec
outsl
iret
je
adc
js
adc
repz
sbb
jae
lods
sbb
mov
xor
sub
pop
mov
cmp
sbb
lea
gs
into
loopne
sahf
dec
pop
outsl
mov
rcr
or
inc
pusha
mov
pop
scas
mov
movsl
sbb
push
push
jg
xlat
xor
mov
pushf
sub
jmp
jmp
fisubl
aad
push
mov
mov
dec
jne
dec
out
dec
mov
sub
jecxz
flds
xor
mov
mov
xchg
dec
out
ljmp
sbb
lahf
inc
int
rolb
pop
mov
mov
jmp
inc
aad
fldcw
cmp
xchg
cmc
xchg
cwtl
and
cwtl
mov
add
push
clc
jle
sbb
and
xchg
mov
mov
shl
lock
jae
das
addr16
test
fisttpl
sub
push
mov
mov
jecxz
insl
xor
dec
jmp
fdivrp
ljmp
jne
hlt
pop
sbb
jbe
inc
and
repz
pop
pop
jbe
add
cltd
push
cmp
push
divb
inc
clc
inc
inc
push
xchg
pusha
mov
sbb
inc
sar
and
dec
stos
sbb
out
xchg
push
xchg
fdivrs
cltd
bswap
mov
xor
push
repz
xor
xchg
int3
test
insb
movsb
xchg
imul
inc
imulb
fwait
sub
xchg
add
or
bound
test
in
lahf
int3
xchg
int3
cmpsl
mov
adc
mov
mov
sbb
push
xlat
jp
fbld
xor
mov
xchg
jne
inc
add
fiadds
xchg
jo
mov
xchg
push
scas
cmp
je
sub
enter
outsb
jb
stos
in
push
enter
xchg
insb
out
fdivrs
cwtl
jg
lahf
loopne
in
insb
pop
pusha
jp
jp
fsubr
ret
ficompl
out
push
inc
dec
leave
arpl
jecxz
push
xchg
popf
pushf
test
mov
rcrb
sbb
sbb
insb
lahf
imul
and
or
iret
ret
bnd
mov
hlt
out
or
pop
popf
inc
or
xchg
push
mov
orl
sub
mov
pop
pop
xchg
repnz
ret
push
pop
shlb
mov
cmp
outsl
movsb
adc
push
xor
les
pop
mov
aaa
and
leave
cmp
lock
jno
xorb
sbb
loope
push
inc
lods
add
jno
push
scas
push
ret
lods
push
inc
movsb
and
sbb
inc
push
or
and
out
daa
push
filds
loope
pop
into
sub
ds
cmp
nop
pop
movsl
dec
loope
and
sub
jl
outsl
sbb
or
mov
stos
xor
mov
pop
in
js
adc
lcall
cltd
fmull
add
adc
outsb
sarl
adc
and
pop
cli
inc
lret
fcomip
mov
pushf
mov
sub
push
scas
into
mov
dec
pop
sub
mov
jbe
mov
shll
mov
gs
je
add
sbb
jp
shrb
loop
insl
jb
push
divl
adc
or
cmp
adc
out
mov
cli
sbb
stc
xor
fcoml
dec
and
or
stc
jge
sbb
insl
xor
pop
test
enter
je
imul
jge
add
xchg
lods
push
mov
shl
jecxz
sub
mov
in
movsb
fcmovb
sti
lock
mov
cli
gs
loopne
negl
inc
popa
addr16
xor
xchg
les
imul
push
xchg
inc
cmp
aad
pop
call
cmp
insl
mov
cs
or
jnp
mov
jb
stc
imul
mov
aad
mov
lea
call
jne
fisttpll
neg
popa
dec
fcmovb
imul
mov
outsl
inc
push
sahf
inc
ret
cmp
pop
and
or
sarb
xor
shrl
dec
lahf
imulb
jle
std
cmp
imul
xchg
clc
cld
mov
sub
mov
pop
mov
dec
sub
push
sbb
das
inc
scas
mov
scas
pop
subb
scas
test
in
and
das
outsl
mov
insl
sbb
xchg
dec
in
xor
jecxz
and
mov
sarl
jl
and
mov
pop
ss
add
iret
fldl
inc
adcl
std
fstp
dec
add
xchg
lahf
jle
sbb
xchg
push
icebp
fstpl
mov
out
cmc
and
pop
or
push
adc
xchg
cvtpi2ps
mov
or
mov
les
jle
cmp
xchg
push
mov
mov
cwtl
negl
inc
inc
pusha
add
stos
sub
jmp
xchg
shlb
jmp
cs
in
gs
xchg
faddl
ret
fwait
inc
mov
insl
popf
js
dec
cli
cmp
stos
test
pop
mov
mov
mov
sbb
xchg
mov
hlt
jns
sbb
push
add
jmp
notl
mov
sub
ret
cmp
insl
mov
stos
pusha
data16
clc
loopne
insb
pop
sub
jle
cmp
in
lds
fistps
sahf
test
das
cs
pop
sbb
dec
add
push
dec
add
popf
ret
xlat
or
push
wrmsr
cmp
inc
cwtl
notl
sub
pop
imul
cmpsb
scas
out
pop
sub
push
mov
iret
and
sti
repnz
leave
push
adc
cmp
inc
adc
or
sub
ds
xchg
lods
add
lret
iret
movsl
cmc
pop
inc
sbb
lds
dec
gs
aad
enter
cmp
mov
jecxz
adc
sbb
loopne
fists
sub
and
pop
jno
mov
xchg
dec
imul
push
and
jle
inc
imul
mov
scas
xor
js
test
in
mov
cmpsb
clc
outsb
int3
in
or
stc
enter
daa
or
outsb
daa
loope
xor
sub
pop
dec
cmp
sub
lcall
dec
ret
lahf
inc
jnp
orb
add
jae
xor
mov
sbb
pop
in
out
sbb
cltd
dec
pop
mov
xor
push
andl
add
outsb
daa
out
cmpsl
adc
jmp
pop
mov
pushf
mov
jae
mov
ficoms
and
enter
inc
dec
int
mov
in
cmc
loopnew
xor
cmpsl
mov
cwtl
sbb
cltd
xchg
ret
arpl
jg
pop
add
sbb
insb
stc
or
das
fs
ss
mov
fstl
dec
dec
xchg
imull
adc
xor
mov
into
sti
jns
cmc
sarl
xor
and
imul
pop
popa
add
pop
lds
adcb
insb
mov
inc
stc
out
jmp
repz
psllw
roll
int
jb
push
loopne
arpl
inc
je
fldcw
adc
pop
add
repz
das
xchg
sub
and
lret
xlat
scas
stos
mov
adc
push
pushf
subb
mov
and
nop
push
cwtl
mov
cmp
jb
inc
xlat
dec
mov
je
push
push
xchg
dec
sub
stos
loopne
call
hlt
andl
orl
mov
addl
sub
aas
stc
push
ret
mov
push
mov
and
jns
shll
iret
imulb
cmp
xchg
mov
mov
call
push
fstp
and
and
dec
mov
jp
lock
cmc
das
and
cmc
push
sub
cwtl
rcl
leave
pop
mov
mov
lods
mov
xor
dec
fisttps
inc
ljmp
mov
mov
mov
xor
mov
push
push
lock
or
xchg
mov
xchg
scas
push
jl
xchg
fldl
lret
arpl
mov
cmc
aas
sbb
loopne
pop
mov
lret
stos
clc
jno
out
pop
cmp
push
in
nop
ss
mov
xor
cwtl
jg
sbb
jge
mov
movsl
dec
in
shrb
xor
push
dec
lods
mov
sbb
and
push
push
jmp
jnp
add
pop
add
sar
bound
fwait
jns
inc
mov
xchg
sub
mov
xchg
sarb
and
jp
sub
mov
or
push
mov
cmc
lret
dec
insl
shrl
mov
mov
out
cld
lea
jmp
pushf
imul
out
scas
adc
mov
jle
stos
shrl
pop
and
setge
dec
jnp
out
arpl
xchg
in
sbbb
cmp
xchg
std
je
pop
test
inc
arpl
jmp
or
or
mov
int
xchg
and
dec
sbb
adcl
mov
lcall
or
sbb
sub
arpl
xchg
dec
inc
adc
pop
fwait
inc
push
mov
pop
or
imul
mov
pop
mov
lds
jg
shr
xchg
mov
push
cmp
push
pop
les
lea
xor
mov
fwait
sbb
ja
aaa
sahf
mov
scas
jno
pop
jb
jae
mov
fidivl
fisttpl
push
pop
xlat
xor
daa
je
scas
adc
xor
jmp
sbb
inc
sub
push
scas
cmp
inc
xchg
cmpsb
jnp
lods
in
repz
mov
daa
or
fisubrs
sbb
inc
sub
push
push
ds
mov
movsl
push
test
popa
lahf
outsb
jbe
mov
addr16
add
insl
int
xor
or
or
js
mov
pop
bound
adcl
aad
pusha
andb
lock
adc
fcmovb
or
mov
mov
mov
push
and
xlat
mov
mov
pop
int
xchg
lea
fs
or
es
and
lahf
inc
outsb
mov
aas
sahf
mov
cmp
adcb
jg
push
arpl
lods
or
stc
rcrb
out
mov
adc
ret
add
cmp
add
xchg
xor
lcall
fisubrs
icebp
cmc
lcall
outsl
insb
jl
adc
push
imul
lea
add
jae
mov
lods
int
cmp
cmp
stc
out
jae
sub
adc
sti
dec
inc
inc
test
gs
lret
loopne
in
pop
int3
mov
inc
xchg
push
lahf
les
push
insl
outsb
xchg
out
out
dec
sbb
add
add
je
into
sub
pushf
sub
dec
add
stos
nop
xor
jbe
inc
mov
jecxz
and
sbb
lea
dec
xor
bound
lahf
jae
push
ret
mov
push
fisttpl
push
pop
add
add
imul
mov
push
arpl
rol
bound
scas
mov
std
mov
push
push
ret
fidivl
in
out
dec
icebp
mov
mov
lret
xchg
mov
fs
fs
add
test
push
pop
cmpsb
sub
movnti
adc
cmp
jle
dec
fisubl
cmp
leave
sbb
inc
xchg
adc
sub
mov
fstpt
mov
je
test
lods
outsl
and
dec
sub
sbb
mov
frstor
sub
clc
repz
xchg
sbb
dec
loop
add
jns
and
cmp
xchg
lods
shlb
psubsb
mov
or
or
mov
mov
sti
dec
dec
xchg
test
pusha
pop
xchg
fsubl
inc
jmp
dec
or
mov
mov
add
loopne
dec
lcall
jns
div
pushf
jns
pop
mov
mov
xchg
lahf
pop
xchg
mov
jecxz
adc
dec
sarl
iret
mov
test
mov
pop
dec
push
jge
jne
push
cltd
mov
adc
fucomi
sub
fldpi
pop
xchg
lds
mov
icebp
sub
mov
lret
inc
lahf
mov
insb
xor
sub
inc
or
or
mov
jl
cmp
mov
fistps
push
ret
loopne
mov
mov
xlat
push
ror
jg
adc
inc
mov
in
fisubl
jle
sbb
int
imul
push
scas
mov
dec
push
filds
out
fbstp
test
imul
inc
test
hlt
enter
or
and
jp
or
and
lret
clc
cmp
icebp
push
stos
int3
movsl
scas
sbbb
ficoms
inc
movsl
sub
rolb
aas
mov
sti
movsl
cmc
cmp
hlt
movsb
ja
pop
push
outsb
adc
jbe
vhsubps
les
mov
daa
aaa
pop
lods
sahf
cmp
cwtl
add
sbb
push
jmp
and
dec
add
push
mov
mov
inc
adc
xchg
adc
fcmovu
jge
xlat
inc
xor
or
or
addl
sub
push
fidivrs
mov
xor
jno
movsl
pop
mov
mov
andl
mov
sbb
test
mov
loop
mov
mov
js
popa
enter
sbb
das
mov
fmull
sbbl
adc
mov
pop
mov
scas
mov
inc
stos
and
sub
push
mov
add
jg
push
fildll
pop
repz
sub
sbb
ffree
ss
mov
dec
popf
sahf
pop
iret
sub
insl
repz
loop
sub
fs
ljmp
stos
xor
sarb
sub
enter
out
bound
xchg
cmp
adc
test
into
ror
cmc
popa
test
xor
mov
outsl
dec
faddl
imul
adc
pop
iret
ljmp
hlt
pop
mov
jmp
mov
add
mov
in
xchg
sti
std
repz
sbb
loopne
jns
pop
jmp
xchg
inc
lcall
les
push
repz
xor
mov
movsl
mov
xlat
sub
mov
add
adc
inc
aaa
jmp
mov
cs
aad
sbbl
or
mov
jb
imul
sub
cmc
jg
xchg
shl
xchg
inc
in
lea
loop
fstl
cmpsb
mov
sub
dec
fwait
push
ljmp
fs
inc
jmp
inc
lods
aas
aaa
shll
inc
inc
mov
mov
shr
div
ja
std
xor
js
bswap
mov
cmp
pop
mov
ja
jmp
lret
add
mov
aam
mov
mov
lock
jge
das
jecxz
jno
daa
insl
popf
sub
inc
in
ret
fsubrl
gs
into
lods
pusha
dec
aad
xchg
cmpsl
or
outsb
popa
push
sbb
psrlq
loop
jecxz
pop
sub
pop
xchg
inc
xor
mov
jo
test
in
out
pushf
push
add
push
clc
cs
xchg
pop
jo
sbb
cmp
push
pop
loope
outsl
stos
mov
cld
xchg
hlt
dec
add
xorb
inc
jns
xor
push
xor
mov
int
xchg
push
sub
xor
dec
xchg
mov
inc
and
or
test
fwait
out
int3
push
das
or
imul
out
bound
nop
push
in
mov
xchg
leave
cmp
mov
jmp
mov
sahf
loope
ja
mov
cwtl
mov
and
mov
mov
sbb
jne
test
mov
push
clc
xchg
mov
push
push
xchg
xor
andl
jp
sub
insb
or
sub
cmp
test
jnp
push
ret
jle
std
pusha
in
sub
pusha
out
mov
ret
lock
repnz
jns
mov
push
xchg
loopne
popf
cmp
dec
mov
int3
add
ficompl
pop
xchg
sarb
cli
sbb
jmp
imul
js
es
pop
adc
mov
cmp
mov
xor
arpl
fnsave
inc
sbb
dec
or
fwait
idivl
mov
jp
mov
cwtl
add
repnz
shll
jge
idivl
sub
xchg
and
sbb
mov
sub
and
lds
movsb
fidivs
sub
sbb
jns
sbb
nop
cmp
cmp
orb
or
int3
pusha
fnsave
scas
shlb
inc
push
xchg
sub
cs
mov
inc
movsb
mov
sub
sar
enter
daa
or
call
sub
mov
cmpl
mov
pop
and
pusha
dec
or
mov
add
pop
cmp
arpl
sbb
pop
jl
xor
xchg
loope
mov
imul
in
lret
outsb
push
ljmp
cwtl
sub
jle
jbe
and
xor
lock
and
roll
out
subl
scas
addb
and
lret
das
ror
in
mov
mov
dec
and
cs
dec
orb
ss
jnp
stc
cs
sti
fs
shll
test
jecxz
dec
int3
cmp
jnp
test
jmp
stos
cli
in
lret
mov
stos
or
outsb
pop
into
movsb
gs
sub
mov
outsl
sub
adc
mov
adc
in
cltd
add
outsb
push
lods
fwait
push
mov
jmp
adcb
sub
sti
lods
imul
xor
xchg
loopne
and
sub
lods
jmp
repz
xchg
je
cmp
cmp
not
imul
mov
sub
jl
mov
and
leave
stos
sub
dec
enter
xchg
inc
dec
out
cmp
jb
dec
int3
dec
repz
dec
jecxz
cmp
lcall
call
jno
lds
push
cmp
fldt
cmp
rcrb
inc
jo
cltd
inc
das
outsb
inc
aas
std
mov
jl
mov
inc
xor
xchg
std
fsubrs
cwtl
lret
mov
imull
mov
dec
pop
cld
pop
in
lret
outsl
fimuls
cli
arpl
jno
das
ret
sar
imulb
cs
ret
imul
insl
mov
mov
rolb
arpl
scas
inc
cmova
mov
mov
jmp
xchg
hlt
pop
mov
call
cltd
jnp
or
push
ds
lds
mov
imul
sbb
loope
shll
or
stos
lds
xchg
cmp
inc
push
jle
out
das
xor
mov
imul
mov
mov
add
test
out
xchg
cmp
or
daa
repz
push
push
sbbl
repnz
xchg
push
je
lcall
cwtl
push
jns
lods
xchg
in
rclb
and
jnp
pop
pop
and
ja
mov
jp
fisubs
movsb
loopne
mov
sub
dec
push
lods
repz
push
mov
out
cltd
mov
xchg
popl
jmp
std
js
subl
mov
add
sub
scas
inc
dec
addr16
or
push
jno
insb
push
and
jns
dec
es
mov
jne
sbb
cltd
ret
fcomps
pushf
jno
test
leave
push
push
addr16
popf
pop
or
mov
or
mov
sbb
fmul
imul
dec
push
insl
adc
adc
pushf
iret
popf
inc
pop
repnz
leave
xchg
hlt
pop
sti
arpl
out
inc
sbb
xor
push
ljmp
mov
insl
and
jnp
lret
pop
add
out
ficomps
mov
sarb
mov
and
push
cmp
sbb
push
or
xchg
jbe
cmp
jge
js
sbb
xorb
push
cmp
in
shll
jl
xor
or
scas
outsl
out
pop
mov
sub
fs
add
and
pop
in
inc
xor
cmpsb
add
sub
test
mov
daa
or
or
arpl
inc
sub
mov
mov
scas
movsl
insb
ret
frstor
dec
mov
lahf
rcrl
fisttpl
sbb
ljmp
sahf
push
arpl
js
jp
pop
mov
notl
fldl
fsubl
cmp
mov
in
jg
fistpll
mov
aad
popf
mov
or
lods
jmp
adc
clc
and
xchg
push
mov
into
inc
sub
test
lret
dec
shll
push
call
ret
sahf
mov
js
andb
xchg
add
in
shll
push
adc
cmp
pop
fs
imull
stos
pushf
inc
cli
sbb
xor
xorb
ss
into
xchg
mov
out
sbb
xor
movsl
inc
outsl
or
and
adc
sbb
inc
adc
lods
orb
sub
jne
call
cmp
in
mov
cmpsl
mov
mov
imul
sub
flds
flds
les
nop
outsl
xchg
aaa
sbb
mov
mov
pop
addr16
in
adc
mov
mov
cs
sbb
nop
ret
dec
dec
inc
jae
cmp
dec
push
sbb
jecxz
in
popf
adc
lea
cmp
sarl
lock
sub
test
fistpl
xor
inc
divl
lea
jne
push
mov
xor
jl
rcl
push
shll
bound
std
jg
loop
test
mov
test
pop
icebp
and
cmp
fdivrp
out
mov
jns
lock
shrl
xchg
push
ror
mov
sub
jb
ret
cli
int
es
scas
jno
pushf
mov
dec
lret
push
pop
cmpsl
or
insb
ljmp
or
and
mov
lock
out
pop
roll
add
fidivs
test
mov
jg
push
mov
std
fstpl
push
sbb
rorl
push
inc
pop
aaa
sbb
loopne
in
stos
xchg
subb
pop
les
syscall
mov
or
inc
xor
push
xchg
mov
mov
xchg
dec
test
mov
xchg
fimull
jns
mov
or
popf
repz
inc
clc
push
jne
and
xor
addr16
cmp
inc
bound
insl
xchg
in
xor
mov
adc
mov
adc
jecxz
or
out
jp
bound
xor
mov
stc
xor
jne
jle
mov
outsl
and
js
push
xchg
bound
xchg
enter
mov
and
sub
stos
cmc
pushf
addr16
cmp
insb
jno
movsl
jnp
into
sbb
in
pop
out
pusha
sbb
adc
mov
aad
pop
pusha
adc
fwait
dec
jae
xchg
scas
push
sbb
popf
xchg
push
shrl
scas
push
dec
rcll
shrb
andb
scas
fldl
push
mov
adc
push
pop
iret
cld
dec
inc
repnz
xchg
leave
movsl
jle
hlt
test
xor
sub
xchg
jo
inc
mov
pop
or
das
ror
data16
outsl
pop
xor
scas
fidivrs
lea
push
je
mov
mov
mov
popl
andl
and
imul
lcall
jno
repz
dec
xchg
add
push
xchg
jb
xor
xchg
inc
xor
aaa
cmpsl
push
test
fcomi
or
ret
cmpsb
xchg
inc
in
enter
or
push
jecxz
loope
insb
xchg
sub
jb
cmp
pusha
call
and
ror
loopne
sub
dec
or
xor
ljmp
sbbl
cli
outsl
add
xor
fmull
sub
adc
inc
and
xor
mov
and
mov
or
mov
sub
push
icebp
leave
pop
jo
mov
repnz
pop
sar
xchg
mov
pusha
sbb
imul
stos
js
mov
dec
add
stc
pushf
lret
fs
and
out
or
cmp
icebp
adc
cli
dec
pop
xchg
xor
xor
dec
ja
or
rcll
push
pop
cmc
mov
cmp
dec
mov
leave
adc
imul
jp
enterw
imul
xor
sub
imul
or
das
gs
or
pop
dec
lods
test
fnstcw
dec
les
cmpsl
xchg
cli
or
sbb
dec
xlat
jmp
repz
sub
mov
pop
xchg
or
aad
jle
nop
popf
icebp
xor
push
or
mov
dec
loope
lods
je
jnp,pt
mov
and
lea
lret
outsl
outsb
mov
mov
das
fcmovne
xchg
jbe
jle
stos
inc
add
adc
into
mov
ljmp
roll
mov
cwtl
std
es
cwtl
inc
push
cs
sub
mov
cld
ss
mov
or
dec
sti
push
mov
repz
xchg
mov
cmp
shlb
mov
rorb
es
adc
xor
sub
inc
push
popa
pushf
sbb
sub
imul
and
xor
xor
clc
imul
jmp
add
push
dec
ljmp
fists
ficoml
daa
inc
rcrl
inc
pop
loop
adc
inc
cli
lahf
xchg
leave
adc
xor
dec
pcmpgtb
out
or
sti
daa
xor
ret
mov
shll
call
mov
rorb
fs
inc
push
inc
or
out
fwait
je
lea
sbb
add
dec
nop
fdivr
fldt
inc
or
in
lock
xchg
mov
add
stos
push
adc
iret
pop
out
leave
and
jp
xor
mov
int3
jae
pop
sbbl
fsubrl
mov
nop
out
out
push
mov
xchg
xor
das
mov
orl
out
fs
sub
movsl
cmp
dec
stos
adc
loopne
fcompl
mov
in
pmulhw
jle
outsl
mov
pop
scas
in
pop
xchg
sub
jae
dec
je
outsb
popf
lods
js
mov
mov
fidivl
insl
xchg
aad
popa
sbb
cmp
imul
scas
inc
pop
lcall
xchg
mov
repnz
xor
sbb
sbb
hlt
rcrl
arpl
xor
cli
bound
or
lret
xchg
insl
or
push
adc
push
mov
pop
pusha
cmp
out
jb
test
jecxz
and
outsb
cmp
dec
movsb
mov
repz
jbe
orb
loope
sbb
or
call
mov
add
imul
jo
imul
ja
push
or
outsl
push
cmpsb
xor
inc
push
cmp
cmpsb
or
in
jbe
sub
daa
pop
mov
push
push
cltd
loope
pop
imul
iret
cmp
xchg
ds
scas
mov
jp
shll
jle
rcrl
add
sbb
cmp
lods
jle
pop
xlat
out
js
loop
pop
cmp
in
mov
xchg
sub
mov
dec
shlb
ljmp
sub
pop
mov
idivb
imul
push
ret
ja
int
mov
mov
out
jl
lret
xchg
rcll
rcrb
fisttps
sahf
jmp
inc
roll
sub
loop
test
stc
push
cmpb
dec
pushf
adc
aad
ss
fcoml
fsubrs
push
cli
jle
xlat
xor
inc
ret
adc
into
dec
in
cmc
jge
sbb
movsl
call
test
pop
pop
mov
push
add
stc
jno
add
popl
mov
mov
mov
pop
sub
push
mov
xchg
fstpt
sti
mov
clc
shll
insl
jb
test
inc
out
xor
mov
xchg
lahf
enter
cld
xor
mov
mov
dec
xlat
sub
aaa
adc
pop
mov
idivb
add
push
lock
nop
js
fisttpl
bound
loope
xor
je
cmp
into
or
lea
scas
fadd
out
mov
aaa
fisttpll
ss
adc
pop
xor
mov
inc
andb
mov
loope
adc
lods
mov
jmp
cmp
idiv
sbb
std
int
inc
cwtl
sti
cmpsl
lcall
cltd
push
icebp
rcrl
cld
fbld
lret
mov
loopne
mov
rcll
fwait
mov
pop
jo
shlb
int3
sub
hlt
sub
sbb
and
int3
out
insl
push
in
shrl
or
mov
shrd
inc
dec
add
mov
push
add
sub
incb
or
rcr
ljmp
xchg
pop
xchg
mov
shll
mov
or
stos
leave
aas
xchg
adc
push
orps
ret
cmpsb
mov
or
lea
dec
or
dec
addr16
mov
xchg
jne
dec
pop
or
inc
ficoms
inc
or
add
les
mov
push
bound
addr16
jp
clc
aad
idivb
fstpt
xchg
add
add
mov
mov
mov
mov
clc
xchg
mov
js
stos
dec
mov
or
mov
lds
out
ss
dec
xchg
or
rclb
push
mov
mov
cld
sub
mov
add
and
xchg
lea
push
repz
pop
jmp
lahf
and
pusha
push
in
fcomip
mov
jns
into
out
inc
movsl
addl
popf
aam
sub
enter
es
xchg
sub
jle
fsubrs
subl
out
sbb
mov
inc
xor
xchg
pop
push
aas
mov
cwtl
inc
and
cmp
inc
scas
add
lret
and
inc
sub
sbb
fiadds
insb
push
mov
fiaddl
std
movb
sbb
lret
jbe
push
mov
sbb
mov
sbb
mov
mov
repnz
push
pop
push
jae
mov
mov
scas
dec
ljmp
or
test
jno
mov
loopne
mov
pop
data16
mov
ja
push
and
mov
jns
cmp
icebp
cmp
sbb
lahf
push
jne
adcb
sbb
add
outsl
decb
js
je
pop
js
das
lcall
insb
fsubl
xchg
mov
outsb
fsubrl
mov
xor
cld
mov
mov
bound
adc
mov
jp
xchg
push
push
jecxz
orb
sub
test
lret
and
sub
out
mov
test
mov
hlt
test
inc
xor
mov
loop
lret
or
sub
xor
adc
lret
jmp
ret
fsubs
mul
push
mov
mov
inc
xor
xor
cmc
inc
imul
outsl
cmpsb
testl
test
cwtl
adc
fwait
dec
add
cltd
lods
aaa
pop
pop
mov
add
aas
pushf
jne
and
iret
in
cld
mov
aam
enter
mov
mov
pop
xchg
inc
stc
mull
jmp
orps
pop
sbb
xchg
adc
sbb
and
imull
pop
or
adc
pop
jnp
sub
cmpsb
xchg
cs
or
and
push
mov
dec
iret
push
daa
je
adc
fldl
lea
call
insl
pmulhw
scas
shll
dec
xor
push
test
adc
inc
mov
pushf
aas
push
sbb
mov
je
shll
testb
std
je
rcrb
imull
mov
stos
mov
sbb
sub
mov
js
push
adc
lock
das
ds
rolb
xchg
adc
push
mov
ret
cmpsl
add
insl
push
hlt
sub
mov
cmpsl
add
adc
xor
add
and
adc
cs
add
and
test
cmp
fstl
daa
loop
push
xor
cmp
lea
or
inc
pushf
stos
subl
xchg
push
mov
push
ljmp
xor
mov
or
dec
jecxz
sbb
push
mov
mov
dec
mov
xchg
test
in
xchg
pusha
imul
push
or
imull
fwait
sarb
push
pop
push
add
cmp
lcall
test
push
xchg
xchg
push
cmp
mov
sub
ficompl
jecxz
ja
test
jp
push
insl
mov
dec
mov
mov
xchg
leave
dec
mov
arpl
sub
jae
xchg
xchg
sub
jle
imul
sub
fwait
mov
mov
sahf
and
pop
fdivrs
aas
add
ficoml
in
popf
or
outsl
xchg
fists
lcall
inc
mov
jo
jg
push
bound
jno
sti
js
mov
pop
fcomp
fprem1
add
sbbl
sub
imul
scas
push
lods
ret
push
mov
and
rcrl
sbb
mov
hlt
mov
jne
gs
inc
sub
push
or
add
sub
or
add
add
daa
lods
popf
pop
mov
mov
push
shrb
push
and
mov
movsb
mov
jl
jbe
cltd
mov
dec
fstpt
adc
imul
mov
xchg
sub
dec
jecxz
push
push
cmp
sysexit
jp
loop
movsb
hlt
imul
add
lcall
cmp
jecxz
inc
sti
pop
enter
daa
add
cltd
dec
loope
sub
cmp
cmp
push
mov
mov
lcall
daa
push
and
repz
adc
fisubrl
push
pop
and
lcall
data16
adcb
imul
jns
nop
outsb
aas
sub
sti
not
xlat
mov
push
or
cmp
mov
dec
shlb
mov
push
leave
sub
sub
stos
leave
pop
in
mov
cmp
rcrb
sbb
shl
das
aas
leave
test
lcall
imul
rcr
fs
addb
xchg
sub
mull
mov
xor
cmp
dec
scas
or
cld
adc
cmp
pop
jnp
outsl
test
adc
sub
lahf
out
ret
sbb
add
fisubs
mov
cltd
fsub
in
clc
sub
inc
das
in
addr16
sti
pop
ds
jmp
sub
loopne
cwtl
jecxz
movsl
adc
inc
or
fldenv
aaa
out
mov
push
xchg
inc
popa
sahf
sbb
mov
in
std
pop
xor
adc
in
pushf
fcomp
mov
cs
lock
cs
add
mov
dec
inc
or
je
jnp
jecxz
cmp
fisttps
mov
lds
addl
lret
push
jb
js
mov
adc
xchg
inc
mov
movsl
aas
icebp
push
add
pushl
shr
or
std
sbb
stc
mov
sarl
push
lret
orl
ljmp
sahf
jl
fnstsw
scas
das
sbb
mov
sub
stos
aam
sub
ss
shll
shl
sub
jnp
dec
mov
andl
mov
popa
loope
test
mov
aam
adc
mov
dec
insl
rolb
xor
cltd
mov
dec
test
stos
lcall
out
nop
movsl
ds
aas
sbb
mov
pop
jecxz
das
stos
jo
jl
jo
cmp
push
lds
insb
jno
jge
or
xor
push
adc
lret
dec
sbb
bound
inc
insb
stc
inc
or
in
js
fwait
fwait
add
push
add
popf
sar
mov
cmp
clc
in
and
xchg
mov
leave
test
in
test
add
shll
xor
mov
mov
out
mov
enter
push
jne
and
mov
insb
or
hlt
in
push
xchg
scas
mov
add
cmp
out
ficoml
or
dec
xchg
out
insb
sbb
in
ret
jle
aas
pusha
in
jp
pusha
mov
mov
xor
mov
xchg
jne
pop
cmp
out
mov
add
and
iret
push
mov
inc
lcall
fidivl
imul
imul
adc
push
repnz
cld
leave
add
pop
arpl
inc
sub
or
jge
int
lods
jb
or
or
adc
popa
pop
in
and
ss
lds
sbb
mov
add
xchg
movsb
inc
call
sub
push
push
jge
sub
inc
aaa
xchg
jbe
cmp
inc
jle
insl
push
push
lret
ds
dec
push
push
mov
push
push
pop
xor
call
scas
or
lahf
push
orl
test
pop
out
addl
cli
cmpsb
xchg
pop
das
in
sub
mov
sbb
add
cmp
jmp
mov
pop
sarb
cmp
xchg
push
inc
movsl
dec
mov
lahf
pop
xchg
ljmp
jmp
pop
xor
pop
push
pop
dec
push
and
idivb
push
nop
sub
mov
andl
push
adc
mov
push
mov
popa
mov
dec
popf
mov
xlat
leave
mov
lock
and
mov
int
push
subl
insb
jge
lret
or
push
xor
mov
cmovs
sbb
and
pop
pop
das
subb
cmp
loop
test
jge
inc
and
ss
add
fcomp
dec
jmp
gs
xor
xor
or
clc
inc
cmc
shl
xor
jmp
adc
mov
adc
jmp
add
inc
data16
mov
adc
out
push
mov
and
and
in
sar
cmp
dec
adc
push
push
inc
gs
mov
push
mov
ljmp
mov
rcrb
xchg
push
repnz
ds
dec
std
xlat
in
mov
out
pop
adc
pop
in
jmp
lret
sbb
aad
fwait
sub
or
pop
jb
out
dec
mov
aaa
push
jecxz
cmp
outsb
lea
fsubr
cmp
daa
imul
mov
imul
cmc
mov
pop
sbb
inc
lcall
aas
nop
mov
pop
mov
mov
test
fscale
ret
cwtl
sub
dec
mov
mov
pop
icebp
pop
lcall
or
hlt
mov
ret
lods
iret
push
das
cld
fimull
sub
aam
sub
ret
vminps
push
and
out
dec
mov
nop
cmpsl
add
ljmp
in
lea
mov
testl
mov
insb
add
inc
test
cltd
vmovupd
pop
jp
push
mov
jp
lret
test
xor
repz
mov
mov
shr
cli
xchg
in
jns
mov
jb
xor
movsl
dec
or
and
xchg
mov
mov
stos
mov
xlat
inc
mov
push
pop
fwait
xor
push
add
mov
stos
sbb
popa
xchg
jns
int
in
xor
xchg
repnz
mov
fptan
mov
mov
cmp
jp
inc
loop
scas
push
icebp
mov
dec
push
inc
scas
mov
fucomp
out
shrl
xchg
orl
call
adc
subb
and
add
fiadds
imull
mov
pop
and
and
pusha
and
push
pop
jae
loope
push
pusha
jae
cmc
push
call
or
mov
test
fidivrl
push
call
fldl2e
shrb
shrb
adc
iret
xlat
mov
sub
clc
out
and
arpl
mov
lods
push
sub
or
cmp
test
mulb
fisubrs
xor
fimuls
mov
cmp
xor
movsb
iret
lret
iret
push
out
jbe,pt
jg
jge
fs
sbb
mov
mov
inc
scas
in
jl
and
roll
add
mov
pop
int
scas
jmp
mov
ljmp
sarb
inc
lea
cmpsb
push
dec
sub
sarl
daa
add
lock
in
inc
loope
sub
sub
cmp
cmp
ljmp
xchg
subl
jnp
adc
sbb
fildl
cld
lods
xor
fcmovbe
mov
pop
fwait
js
mov
xchg
lcall
pop
fsubl
pushf
sub
mov
adc
aad
cmovae
mov
add
push
or
int
dec
jge
mov
fiaddl
jmp
jns
mov
ret
repz
fcoms
push
sahf
jne
roll
inc
push
jg
xchg
adc
xlat
out
das
sarb
jecxz
sbb
cwtl
ss
dec
xlat
cmp
cwtl
dec
mull
dec
cli
dec
xor
insl
ret
cmp
lods
mov
std
divb
into
fnstcw
cmc
cltd
cmp
xor
pop
fldt
imul
leave
insb
imul
cmp
push
std
subb
leave
aad
loop
out
cwtl
push
mov
cmp
and
xor
in
sbb
mov
mov
stos
repz
add
sbb
sbb
cmp
pop
adc
fstpl
cs
add
mov
mov
aad
popf
inc
nop
in
aad
xchg
mov
dec
xor
shlb
xchg
jecxz
adc
scas
push
push
lea
or
ljmp
xorl
andl
in
lret
fstpt
das
push
std
mov
jge
dec
and
cmp
or
or
fs
imul
in
mov
das
dec
sbb
mov
mov
sub
mov
xor
lock
push
xor
fistpl
sarb
clc
repnz
out
ret
push
popf
dec
es
fldcw
xor
in
add
movsl
popa
movzwl
clc
popf
push
mov
sbb
lcall
fwait
mov
cltd
cld
mov
mov
sbb
inc
fldl
inc
cltd
xchg
push
cli
insb
sbb
test
cmp
pusha
stos
dec
xchg
mov
ss
and
jnp
ljmp
add
xor
dec
mulb
shlb
jmp
lcall
fldt
sub
push
or
lds
fwait
pop
jmp
push
inc
push
aas
add
shll
bound
mov
shl
xchg
xchg
rcll
pop
inc
mov
jbe
arpl
lret
dec
jp
int
mov
pminub
adc
jne
lret
divb
mov
sti
xchg
push
xchg
addr16
mov
fiadds
cwtl
insl
adc
or
out
push
insl
loope
cmc
xchg
insb
repz
movd
int3
in
pusha
pop
pusha
mov
or
ret
jne
stos
inc
bound
ret
jae
shll
push
stos
mov
mov
les
jns
mov
sbb
test
imul
jnp
das
movsl
ficoms
inc
out
push
adc
sbb
push
mov
leave
outsl
mov
sbb
popf
aam
xor
rorl
mov
xchg
or
mov
inc
mov
int3
call
cmp
fimuls
push
lds
sar
push
mov
es
pop
cmp
cmc
icebp
movsb
pop
add
xor
and
cmp
shll
aaa
adc
pop
cmp
add
sbb
and
jo
xor
lret
int3
lcall
push
sub
leave
test
popf
fs
inc
sbb
adc
in
stc
adc
enter
daa
add
jbe
sbb
mov
fsts
lods
adcl
lahf
lcall
sbb
add
inc
cs
jnp
mov
js
test
jg
cld
push
ds
cmp
push
mov
cmp
sbb
shrb
outsb
out
mov
add
mov
cmp
mov
cmp
int
sub
pop
push
jge
movsb
cmp
mov
sbb
xchg
sahf
sbb
test
mov
pusha
fisubrl
inc
mov
loop
pop
es
out
dec
fs
inc
cld
adc
ss
or
fcoms
adc
jecxz
and
jge
outsb
xor
cmp
dec
lcall
mov
hlt
wrmsr
insb
in
mov
adc
mov
sub
adc
mov
sti
sbb
cmp
mov
mov
jg
or
xor
test
sar
mov
cs
fcomps
cltd
stc
inc
inc
mov
mov
lcall
sbb
push
lds
arpl
mov
cmc
sbb
xor
push
xchg
jmp
pop
loope,pn
push
aad
add
dec
out
jo
cmpb
je
lods
clc
jecxz
or
mov
add
call
imul
xor
fidivrs
sbb
mov
inc
pop
xchg
imul
out
movsb
popa
mov
mov
mov
sbb
adc
movsl
mov
sbb
js
push
and
cld
mov
ror
out
adc
xor
mov
das
mov
xchg
shrb
out
adc
idivb
es
in
insl
in
addr16
cmpsl
add
and
test
lods
arpl
push
mov
cmp
jmp
stos
cmp
push
cmp
test
xchg
and
pop
and
lods
repz
xchg
xchg
sbb
mov
imul
stos
cmp
and
xchg
jae
mov
setle
adc
test
ret
mov
popf
popa
dec
push
mov
xchg
enter
notb
or
pop
mov
push
ljmp
add
les
loop
bound
dec
in
dec
sub
cmp
mov
enter
ret
or
mov
mov
mov
jne
mov
mov
cld
pop
out
xchg
jb
xchg
daa
dec
jmp
push
addr16
cmpsl
xchg
dec
out
add
xchg
shlb
push
sub
jmp
and
sub
movsl
jnp
mov
mov
ret
pusha
pop
inc
jl
xchg
push
xlat
pop
loope
xlat
inc
fdivrl
jae
pop
int3
push
outsb
in
or
jo
out
push
add
fisubl
push
fwait
sbb
cmp
scas
xchg
xor
lcall
add
repnz
xor
arpl
push
or
pop
push
sub
mov
add
jno
int3
rcll
pmaxub
outsl
sti
rclb
mov
mov
pop
jnp
in
mov
test
push
jge
jge
sbb
push
pushf
aaa
rorl
cmpsb
jno
pop
test
xchg
dec
lahf
sub
divb
adc
dec
scas
test
cmp
arpl
faddl
outsl
pop
cmpsb
sbb
repnz
loopne
enter
daa
add
mov
invd
loope
push
imul
sub
mov
ds
xchg
and
inc
pop
lahf
mov
xchg
sub
iret
lret
roll
or
push
ds
sbbb
das
js
sti
call
lcall
out
mov
movsb
sbb
lret
cmpsl
lea
inc
inc
aas
int
or
fs
and
add
push
aad
or
jmp
inc
pop
jmp
aas
test
mov
mov
sahf
mov
cld
sub
jg
shlb
std
jge
stc
popf
ds
call
add
icebp
cmp
push
or
cs
mov
xorb
sub
cmp
pop
pop
or
add
lahf
mov
jae
nop
push
adc
aaa
out
jnp
add
pop
lea
out
sbb
in
push
mov
dec
std
out
imul
pushf
sub
adc
insb
ja
gs
repz
es
xchg
pop
and
inc
pop
dec
out
cld
imul
imul
add
mov
xlat
mov
inc
movsb
adc
rclb
nop
mov
sti
aad
lret
leave
nop
lcall
jb
jo
dec
and
je
fs
sub
fadd
mov
imul
cs
call
aam
andl
push
mov
inc
das
add
inc
and
aas
insl
rorl
jmp
cmp
push
inc
shrl
sar
testb
pop
cwtl
pop
into
or
mov
push
icebp
fstpl
xor
lret
push
push
add
stc
aaa
mov
das
cltd
imul
pop
mov
dec
pop
insb
ret
jb
pop
fidivs
insl
aam
fimull
lcall
mov
mov
inc
mov
pusha
cmpsb
sbb
mov
leave
fstps
cltd
push
adc
adc
loopne
aam
jl
ds
rol
adc
rol
adc
stos
sub
xor
cld
test
les
jmp
paddw
xor
push
mov
xor
repz
cmp
test
fiadds
adc
or
sbb
iret
push
lea
inc
add
jmp
leave
bound
cmp
in
push
mov
sahf
mov
ret
andl
ja
ja
jp
div
mov
repz
mov
mov
filds
adc
fnstenv
jo
mov
jmp
and
xorl
daa
out
sarb
cs
inc
or
push
mov
and
xor
leave
enter
dec
push
jle
jl
in
sbb
sub
fbstp
push
mov
inc
out
iret
jae
mov
push
xor
inc
mov
inc
mov
pop
xchg
ss
sbb
lahf
jge
or
mov
in
aad
adc
mov
sub
cld
pop
or
pop
dec
dec
hlt
add
popf
arpl
dec
lcall
je
inc
test
sub
add
inc
int3
mov
popa
cmc
ficoms
cld
lds
xchg
shrb
or
cmp
xor
dec
test
inc
xlat
movsb
jo
ds
shl
jbe,pt
mov
dec
sbb
inc
ret
jg
jno
imul
push
push
cmp
jo
test
scas
mov
add
test
xor
addb
pop
cmpsb
lahf
lds
aas
pusha
enter
daa
add
dec
push
cs
dec
mov
sub
outsb
scas
cmp
push
repnz
lahf
fmuls
mov
sbb
or
add
mov
cwtl
add
loope
sbb
mov
lcall
fcomp
sbb
sub
cmp
sub
adc
push
cwtl
js
sub
cmp
fildl
xor
inc
dec
push
fcoms
in
mov
pop
push
cmc
aaa
shll
in
sbb
frstor
pop
rcrb
adcb
sbb
nop
xlat
das
stc
push
jno
fs
cmp
pop
rcrl
ss
and
leave
leave
mov
cli
jecxz
loope
lahf
inc
cltd
cmp
lock
dec
lods
ss
add
cmc
out
xchg
je
and
outsl
loopne
mov
in
lods
imul
mov
data16
mov
mov
data16
fbld
lahf
sub
pop
loop
scas
or
in
jle
test
xorb
lcall
loopne
add
pop
inc
pop
cld
inc
imul
in
popf
stos
repz
xchg
adc
scas
sbb
leave
sbb
loope
xor
inc
ficoms
loop
ret
mov
test
cmpsl
mov
aad
stc
push
nop
jne
inc
dec
movsb
inc
jae
es
pop
dec
cltd
xor
je
jo
jecxz
out
mov
repz
adc
testl
mov
mov
pop
cmpsl
xchg
inc
mov
jns
cmp
cmp
mov
mov
cmp
jp
ret
out
sar
addr16
cwtl
sbb
xor
push
adc
cld
or
or
outsb
les
rcl
lock
das
js
insl
sarb
test
sub
mov
ret
add
fwait
insl
mov
sbb
in
sub
testb
nop
mov
mov
das
push
mov
call
and
cltd
mov
jb
mov
fimull
xor
xchg
adc
bound
mov
aam
pop
cmp
xchg
stos
sbb
cmc
xchg
add
or
add
pop
adc
xchg
lahf
or
fidivl
cmp
dec
and
xor
xchg
xor
inc
decl
or
pop
je
in
cmp
dec
in
add
and
mov
shrl
adc
imull
cmp
in
mov
mov
cmp
cmpsl
pop
ja,pn
xchg
and
std
lcall
mov
mov
lret
scas
jne
mov
mov
imul
dec
mov
xchg
int
fsubr
insl
ja
xchg
jmp
std
add
jae
and
jle
jge
js
pop
xchg
lea
cmp
and
cmpsl
jnp
int
jle
sub
mov
xor
iret
pop
pop
dec
add
inc
repnz
xlat
jae
xchg
hlt
xchg
mov
mov
subl
xchg
lret
test
mov
sub
dec
push
xor
aad
push
pop
shl
dec
and
pop
hlt
dec
push
ret
out
inc
cmp
add
inc
daa
mov
or
insb
aam
add
jp
pop
fcomps
xchg
vshufpd
dec
or
fisttpl
fstpt
adc
sti
mov
mov
jge
daa
sub
jbe
shll
push
jle
cmp
dec
xchg
jno
lcall
jge
add
lea
xor
outsb
cmp
mov
add
push
decb
mov
mov
mov
enter
daa
ljmp
adc
pop
subb
outsl
daa
lret
sbb
ds
shll
and
add
cltd
out
ficomps
cmp
cld
repnz
sub
adc
js
movsb
popa
pop
xor
rclb
inc
jle
wbinvd
scas
sub
mov
xchg
sahf
and
movsl
pop
adc
mov
inc
mov
sahf
sub
jmp
fldenv
jecxz
add
fistpl
dec
int
sbb
mov
js
lret
outsb
rorl
mov
lea
sti
add
jg
push
jo
and
stc
or
fs
arpl
ss
test
js
and
stos
cli
push
lock
cmp
pop
push
or
aam
cmc
mov
test
jge
into
outsl
mov
je
imul
jnp
or
stos
fsubrs
cli
sbb
out
popa
pop
sub
mov
jmp
sbb
gs
outsl
loopne
mov
pop
pop
inc
roll
inc
jb
push
mov
repz
dec
inc
xchg
aad
sub
add
xchg
xlat
and
clc
adc
decb
fiaddl
jmp
mov
aad
mov
nop
push
jle
dec
add
jb
jnp
dec
adc
je
rcrb
mov
negb
call
out
jecxz
sbb
gs
sbb
outsl
cmpb
cmp
jo
aas
stos
mov
jg
pop
addr16
and
mov
std
notb
mov
ret
push
outsl
mov
mov
push
lret
xor
dec
mov
cmpsb
mov
iret
push
lock
shrb
push
xchg
sub
adc
jecxz
mov
nop
ja
es
push
insl
mov
xor
cmpsl
in
imul
mov
push
repnz
movsb
xor
mov
cmpsb
subb
mov
sub
add
lcall
fwait
jecxz
push
es
mov
clc
repnz
xchg
push
lahf
inc
sbb
jb
outsb
mov
sub
out
ret
xchg
dec
jle
push
out
pop
btc
pop
xor
or
xor
mov
scas
dec
xchg
test
mov
rorl
ja
inc
xchg
das
lahf
or
les
fwait
sbb
imul
insl
pop
pushl
icebp
bound
fidivrs
xor
ret
addr16
mov
testl
ja
xor
jp
bnd
loope
ret
sbb
fwait
dec
xlat
fldcw
cltd
into
adc
stos
inc
out
cs
xchg
mov
inc
pop
xchg
mov
dec
adcl
movsb
add
sub
js
pusha
addr16
xchg
mov
push
pop
pop
insb
lahf
and
sbb
ror
in
fmul
pusha
sub
ljmp
jle
pop
xchg
push
inc
std
cmp
outsl
mov
dec
popf
or
mov
sarb
xchg
in
push
sbb
out
imul
push
scas
mov
clc
xor
mov
mov
repnz
gs
hlt
xchg
loopne
arpl
fucom
inc
cmp
in
repz
cmpsb
sbb
add
pop
pop
pop
lcall
orb
mov
jb
dec
cmp
sub
push
jno
bnd
cs
jge
shrl
aaa
adc
xlat
cmp
out
in
int
in
dec
in
sub
push
jo
loopne
jmp
popf
jo
dec
ja
inc
adc
push
jne
or
leave
aas
mov
pop
pop
push
cmpsb
movsl
mov
in
xchg
std
popf
enter
daa
decb
outsl
push
mov
loope
outsl
push
sub
mov
cmp
push
movsl
mov
adcb
push
pop
sub
lods
jmp
cwtl
add
mov
addl
xchg
ss
js
fstl
jo
rcrb
cmp
fdivrl
test
mov
rcl
jge
mov
in
mov
out
push
mov
sarb
lea
ficomps
int
test
sub
lock
pop
pushw
lret
jl
loope
or
js
sahf
movsb
pop
and
int3
mov
push
loop
es
ret
fs
sbb
ss
les
aas
jmp
fcomip
cli
cli
dec
mov
push
cmp
xchg
testl
dec
fdivl
xor
bnd
adc
lds
adc
mov
mov
lods
outsl
mov
xchg
out
and
mov
push
mov
in
loopne
dec
fstpt
mull
mov
inc
xchg
mov
mov
sbb
repz
xchg
xchg
cwtl
push
or
aas
stos
mov
pop
sbb
sbb
nop
sbbb
mov
mov
insl
nop
cmp
popf
jg
nop
sub
in
int3
into
dec
xchg
mov
jecxz
shlb
mov
fsub
call
gs
mov
enter
ss
fistpl
dec
jnp
les
iret
inc
jae
cmpsl
aas
dec
or
call
and
in
rcl
sbb
push
std
lods
mov
outsl
mov
adc
mov
lods
icebp
out
cld
bound
test
dec
xor
lock
std
fs
ss
rcr
inc
inc
sub
cs
scas
jns
ret
pop
cwtl
popf
es
pop
insl
mov
cmp
cmpsl
std
nop
sub
adc
popa
adc
lods
bts
mov
cmp
shlb
es
add
jae
test
xchg
push
mov
xor
jmp
add
clc
sub
rcrb
rol
or
stos
stc
filds
out
and
or
push
ret
bndldx
xor
fildl
test
ret
out
push
mov
add
out
mov
test
mov
arpl
outsl
adc
xor
push
fwait
dec
cltd
aaa
push
jbe
xchg
pop
int
call
sbbl
sahf
std
dec
in
outsb
cmc
xchg
int3
jbe
mov
mov
mov
sbb
push
sarb
add
or
sar
dec
mov
dec
mov
or
sub
xchg
cmpl
sbb
daa
lret
stc
sub
jae
in
addr16
push
movsl
stos
nop
in
fsubs
push
xchg
adc
sbb
mov
fidivs
pusha
lds
or
pusha
sbbl
stc
inc
or
pop
jae
and
jp
insb
popf
xor
lods
mov
call
aas
xchg
cmp
fs
enter
inc
xor
rcrl
adc
lds
cmc
lret
out
ret
hlt
loop
inc
arpl
pop
bound
bnd
push
pop
mov
cs
or
andb
xor
popf
int3
jg
cmp
pop
rcr
ds
loopne
pop
scas
push
rolb
stc
and
pop
cmp
ds
jbe
adc
jge
pusha
inc
sbb
sub
aaa
iret
andl
or
jno
push
popf
dec
pop
scas
xor
push
jp
xor
jl
iret
scas
and
push
cwtl
test
xchg
enter
loope
cmpsb
sub
in
jl
xor
xchg
or
daa
std
jae
push
lea
cmpl
into
cmp
pop
sub
and
int
mov
pushf
push
add
je
xor
ret
loopne
pop
pop
ret
lret
pushf
les
scas
sbb
mov
fsubl
pop
sub
xchg
push
gs
adc
scas
push
test
push
jmp
inc
pop
call
and
cltd
xchg
push
loope
push
int
xlat
push
sub
fbstp
arpl
sarl
mov
insl
sbb
add
test
lahf
xchg
and
inc
jg
jns
loop
sbb
stc
jns
xor
adc
add
ss
xchg
cmp
cli
ja
negl
push
mov
cmp
test
or
fsubrs
inc
insb
xor
out
outsl
jge
xchg
adc
imul
lahf
adc
xlat
jnp
sub
dec
lods
push
imul
xlat
out
imul
mov
mov
sub
incb
aam
gs
fs
int
pop
popf
and
inc
movsb
add
loopne
les
push
mov
mov
and
pop
lret
ja
adc
es
pushf
xor
jmp
test
ljmp
push
xchg
jbe
shl
jb
push
xlat
dec
inc
dec
je
lea
fs
je
shr
lea
cmpsl
xor
xchg
push
lret
cwtl
rolb
daa
push
fcmovne
push
dec
pop
nop
pop
sbb
dec
push
ja
mov
xor
push
adc
shll
xchg
negb
mov
jmp
mov
cmp
cld
frstor
adc
inc
mov
mov
mull
sub
jmp
adc
jb
sub
sub
ret
scas
cld
nop
es
dec
push
inc
cmpsl
cld
mov
ljmp
fisubrs
cmc
jns
in
cs
and
flds
pop
inc
xchg
add
jecxz
cltd
inc
out
pop
test
xchg
lods
aad
fnsave
movsb
clc
push
mov
fdivrs
popf
rcrl
aas
pop
cmp
stos
call
dec
inc
xchg
jge
popf
fisubs
xor
jo
cld
outsb
xor
mov
sbb
dec
push
cmc
xor
and
add
sbb
les
or
mov
pushw
sbb
jo
int
adc
jne
mov
bound
outsb
cli
in
enter
xor
mov
fsubr
push
ja
std
jnp
xchg
mov
xor
lods
mov
popf
shll
daa
sub
mov
daa
jbe
in
dec
jnp
inc
out
jmp
dec
xchg
jb
push
out
push
ja
lret
or
int3
addr16
push
int
add
inc
and
mov
arpl
ljmp
in
repnz
pusha
mov
ret
push
inc
adc
push
push
cmp
nop
add
ds
sbb
leave
std
xchg
xchg
xchg
xchg
imul
dec
scas
adcl
adc
iret
jo
jg
dec
insl
mov
hlt
sub
xchg
cmp
inc
mov
das
push
movsb
stos
or
lcall
push
cmp
fsubp
jecxz
lds
stc
insb
mov
cwtl
mov
inc
movsb
pushf
xor
push
jns
adc
shll
cmpsl
xchg
fidivl
mov
cmp
jno
add
ljmp
in
xor
xlat
cmp
scas
add
mov
popf
or
pop
movsl
add
call
paddsw
push
enter
daa
cld
pop
imull
mov
loope
mov
cmpb
int3
adc
jle
shlb
daa
fs
lahf
push
rcrb
loop
xchg
add
scas
shll
arpl
or
icebp
cmp
test
lcall
or
adc
lds
loopne
test
mov
popf
mov
mov
lss
imul
cli
into
and
call
push
int
or
sub
push
pop
fsts
rorl
inc
mov
dec
sbb
cmp
test
mov
mov
faddl
stc
xor
adc
lock
fdivs
inc
outsb
cli
scas
pop
or
sti
add
cmp
lea
or
add
into
push
enter
jge
xor
pop
jnp
xor
imul
sbb
mov
das
add
jmp
inc
out
xor
sub
xor
mov
fstpt
jmp
mov
mov
mov
pop
mov
sbb
add
je
stos
xchg
push
fdivl
cmp
leave
clc
pop
jle
insl
adc
icebp
mov
fldt
jmp
cli
jg
xor
arpl
sub
jae
and
dec
jb
adc
je
jmp
push
mov
cli
lea
test
lret
mov
xchg
lods
lahf
dec
pusha
in
inc
out
cmpsb
pop
xor
sub
inc
test
repnz
mov
jle
scas
and
dec
inc
shll
test
cli
mov
loopne
insl
mov
insl
icebp
adc
jne
mov
mov
mov
and
lock
adc
rolb
aaa
aam
xor
es
pop
lcall
icebp
lret
bound
popa
mov
add
in
aam
lret
mov
dec
sbb
mov
cmp
cltd
jge
test
sti
or
mov
xchg
leave
push
outsl
pop
dec
fstl
fwait
xlat
xchg
or
mov
shll
cs
out
sub
jmp
mov
js
mov
xor
mov
jae
divb
jle
mov
in
stos
dec
mov
pop
xacquire
jnp
inc
pop
lods
push
or
test
test
push
push
mov
cmp
add
call
fdivrs
adc
fs
xchg
push
addr16
stos
jmp
les
fcomps
inc
mov
jp
das
mov
mov
cmp
mov
pop
mov
cmp
xchg
sbb
jle
dec
jnp
xchg
pop
and
out
mov
sub
imul
pusha
and
out
jnp
jl
jle
jp
in
shr
pusha
sti
aad
fisttps
mov
pop
sub
inc
push
jmp
movsl
push
add
popf
sub
call
fcmovbe
repnz
xor
nop
imul
mov
adc
push
iret
iret
cmp
stc
leave
mov
xchg
hlt
js
dec
arpl
push
fs
inc
cli
xchg
or
shl
mov
or
sub
popa
int3
push
rcrb
inc
fiadds
ljmp
dec
scas
and
dec
into
cmp
xor
daa
mov
lret
jbe
cmp
into
sub
bound
and
jno
lds
dec
adc
dec
cmp
rorb
sbb
inc
sbb
jo
push
lea
out
sbb
push
sub
mov
xor
cmpsb
cs
dec
in
dec
enter
mov
daa
sti
leave
cmp
pop
hlt
loope
adc
sub
push
sarl
mov
mov
movsl
into
arpl
and
jae
lahf
jae
xchg
and
xor
sbb
test
cmp
xor
pop
shlb
pop
stos
add
js
in
pop
sub
mov
mov
xchg
hlt
outsb
sbb
and
call
mov
lock
sub
mov
out
sub
out
and
jle
jecxz
stos
lret
xchg
shll
pop
sbb
sbb
mov
pop
enter
mov
jg
in
loop
mov
mov
adc
out
sbb
jo
xor
sbb
jno
loop
scas
xor
lret
jge
jns
in
jne
push
into
icebp
stos
push
cmc
shl
adc
jmp
cli
mov
imul
or
outsw
cltd
inc
lods
and
inc
mov
test
out
cmpl
and
in
xchg
and
sti
in
dec
lret
add
mov
enter
fisttpl
flds
add
inc
shlb
loope
ficomps
lock
rcl
sbb
in
xor
ljmp
sbb
jmp
push
cld
cs
jnp
aad
mov
nop
mov
pop
sub
add
je
lcall
fs
call
loop
mov
subl
or
sub
loopne
pop
loope
inc
les
daa
imul
in
xor
jns
roll
mov
mov
les
mov
xor
mov
out
aad
jecxz
inc
lret
lock
mov
cmpl
push
lock
nop
das
shl
push
push
sub
cwtl
push
aam
mov
ret
int3
xchg
inc
es
stos
insl
ds
sbb
cli
xchg
repz
fildll
jp
mov
push
push
stos
mov
xor
add
adc
cltd
mov
sbb
scas
dec
push
xor
cmp
clc
ljmp
call
dec
pop
xchg
cli
xchg
dec
fcmovb
xchg
fs
push
push
push
cmpsb
getsec
scas
push
mov
xlat
ja
push
inc
andl
insb
pop
dec
and
push
test
adc
and
dec
ret
xchg
inc
repnz
insb
fwait
xlat
negb
pop
adc
add
mov
out
jns
cmp
xchg
mov
shrb
mov
dec
sub
jle
cld
push
push
mov
decb
mov
mov
jp
mov
cltd
mov
pop
pop
out
stos
mov
jmp
loop
jge
nop
scas
inc
out
or
addr16
mov
and
iret
mov
inc
rorb
pop
out
cmc
in
cwtl
push
pusha
xchg
xor
fildll
icebp
ret
enter
mov
mov
push
ret
lods
lahf
popf
test
pop
mov
mov
rol
xchg
inc
sbb
gs
imul
rcll
lds
sub
iret
cs
out
dec
ror
daa
dec
dec
hlt
ret
push
fbld
pop
leave
inc
dec
lods
push
or
dec
jg
inc
mov
call
push
int3
inc
shll
cmp
lds
xlat
mov
mov
adc
movsb
mov
arpl
jmp
pop
jge
fs
sbb
push
cmp
in
imul
or
adc
test
and
cld
scas
mov
pop
fcmovnb
jo
jp
scas
ret
push
ror
test
cmc
pop
hlt
inc
xchg
roll
cld
cmp
enter
daa
cli
mov
jno
rclb
sub
push
push
inc
les
movsl
aad
or
pop
xchg
pushf
lahf
xchg
xor
sbb
push
add
push
pushf
xor
push
movsl
pop
sar
inc
js
fcoms
insb
xchg
push
lcall
cltd
fsubl
sub
mov
xor
outsl
rolb
adc
arpl
jae
movsl
js
mov
test
cs
dec
push
ljmp
sub
xchg
pop
bound
lret
loope
cmp
jnp
sbb
fdivl
sahf
xor
xor
cmp
aam
and
add
aas
fs
aam
loope
imul
dec
xor
sub
neg
mov
mov
cmp
roll
in
push
into
aam
fprem1
cwtl
lret
inc
cmp
sbb
mov
cmp
inc
adc
sub
fadds
dec
lods
or
lea
fsts
sub
mov
sti
sti
pushf
push
insb
lds
testl
test
inc
fnsave
xor
cs
call
xchg
movsb
subl
cmp
iret
imul
mov
pop
in
cmp
in
icebp
dec
pushf
xor
cmp
sbb
cs
mov
aad
cmp
nop
xchg
dec
repnz
fisubs
mov
arpl
mov
jecxz
ficompl
lret
lea
mov
or
add
movsl
xchg
mov
mov
and
fistpl
daa
pop
jns
fs
loopne
mov
aas
out
mov
in
add
rcll
mulb
std
dec
pop
cbtw
jp
add
sbbb
cld
push
test
lret
pop
sub
lret
mov
mov
or
shrb
xor
sub
scas
stos
aam
cmp
ret
pop
ret
jae
mov
psrlq
push
in
stc
inc
push
ljmp
fildll
arpl
and
stos
adc
pop
mov
ja
cltd
jmp
and
adc
mov
push
cmc
negb
in
mov
xchg
mov
fcompl
icebp
int3
sbb
and
cmp
mov
mov
pop
xchg
stos
sub
bound
xchg
je
xor
add
xor
pop
stc
mov
jmp
fisttps
pop
gs
pop
pop
xchg
push
loopne
mov
inc
fwait
push
xchg
push
add
add
adc
stc
bound
jns
cwtl
mov
jp
xchg
or
add
mov
or
jp
xor
mov
sbb
mov
imul
jno
lahf
out
mov
je
mov
aad
xchg
lods
push
mov
out
jno
sub
pop
loope
addr16
dec
imulb
les
mov
jnp
jmp
jle
pop
and
cli
rcl
xor
cmpsl
ret
mov
inc
xor
xchg
sbb
xchg
popf
iret
dec
mov
dec
lcall
cmp
mov
imul
jno
frstor
iret
jno
inc
mov
sahf
ficoms
hlt
push
andb
test
inc
dec
shlb
add
or
mov
inc
and
pop
add
sbb
fmulp
jle
lds
sub
shr
add
push
or
cmp
and
push
cld
ljmp
jbe
xor
jge
adcl
inc
fnsave
lret
mov
inc
jno
mov
jl
cwtl
push
dec
pop
jno
push
add
call
sub
push
xchg
lods
jp
xchg
les
loop
and
in
sbb
enter
daa
stc
das
imul
shl
jmp
jecxz
cmp
popa
ja
out
push
movsl
faddl
cmpsl
and
into
cmp
or
into
sbb
push
xor
mov
pop
stc
lds
jge
pop
stos
sbb
push
dec
aaa
test
adc
or
bound
adc
sbb
int3
pop
pop
js
mov
aaa
mov
jne
cmp
gs
int
add
sub
fldl
rcl
out
mov
inc
mov
sahf
rorl
and
push
adc
add
xchg
cli
cmp
push
les
inc
jnp
adc
shlb
pop
sbb
out
hlt
negl
mov
popa
cmp
xor
or
add
cmc
pop
pop
xchg
xor
inc
and
test
jb
adc
xchg
scas
add
xchg
data16
inc
lods
repnz
fsubrl
out
test
xchg
mov
imul
decb
fisttpl
loopne
inc
xor
or
lock
fnstenv
adc
loope
pop
xchg
addr16
arpl
sbb
lcall
adc
insb
pushf
fdivrl
jmp
dec
cmpsb
cs
fcoml
add
into
nop
jb
rorl
jmp
jb
jnp
dec
fiaddl
jne
mov
mov
lea
loop
loopne
inc
mov
fwait
and
and
mov
cs
sbb
call
inc
cli
ds
aas
gs
ss
adc
shll
neg
std
out
cmpsl
nop
cwtl
xor
fidivrl
icebp
xchg
add
addr16
into
movsl
add
xor
scas
lock
lahf
cmp
xchg
inc
sti
sar
xor
adc
aam
aas
add
ljmp
insl
or
pop
dec
jnp
aad
clc
jnp
ljmp
je
es
popf
mov
js
jnp
pusha
or
mov
shll
adc
dec
aaa
test
stc
mov
lods
mov
xchg
loopne
or
cmp
push
add
sbb
ret
call
out
adc
mov
repnz
mov
pmaddwd
and
fcom
jns
out
in
inc
je
xchg
jb
dec
icebp
ljmp
and
dec
test
insl
or
pushf
add
movsl
add
loope
loop
sub
adc
push
pop
jns
cltd
lcall
mov
or
les
jnp
and
mov
xor
jne
mov
mov
in
out
push
fsts
jmp
js
incl
mov
or
pop
aad
addr16
data16
iret
add
and
xor
insb
and
jnp
leave
aas
jle
mov
in
dec
mov
fildll
test
test
aas
mov
jae
iret
stos
push
dec
scas
cmc
popf
notb
mov
cmp
cmpsl
cs
out
shrb
imul
notb
shrb
out
or
in
adc
leave
adc
add
inc
dec
insb
out
imul
inc
js
inc
mov
push
sbb
es
int3
push
inc
daa
pop
and
jp
stos
inc
fwait
rolb
mov
and
cmp
movsb
enter
dec
pop
mov
leave
pop
lods
jge
test
sbb
xchg
xchg
cmp
sbb
loopne
jl
cwtl
jmp
push
ret
xor
inc
or
scas
adc
push
les
mov
push
mov
inc
mov
inc
cmpsb
mov
add
call
inc
daa
clc
sub
push
jp
loope
decb
sub
imul
movsl
jecxz
imul
sbb
sbbb
sbbb
or
mov
sbb
fidivrs
daa
xchg
pop
ljmp
push
movsb
or
mov
pop
mov
inc
test
adc
testb
and
out
or
inc
mov
pusha
pop
and
push
lock
fcmove
and
add
add
pop
pusha
out
lret
add
imul
icebp
out
sbb
xchg
sahf
jbe
mov
lods
repz
jl
out
loop
hlt
pop
out
fs
iret
cmpsl
adc
inc
cmp
cmp
mov
adc
cli
jnp
fnsave
push
add
cmp
imul
cmc
es
xor
shlb
adc
imul
pop
mov
data16
lea
fldcw
mov
es
cmpl
push
enter
stos
in
adc
sti
cli
shrl
lcall
pop
call
inc
add
fldpi
pushf
mov
inc
dec
repz
je
sub
std
sbb
mov
pop
or
mov
adc
out
data16
icebp
mov
mov
jae
nop
dec
das
popa
dec
pushf
aaa
fnsave
push
cmp
sbb
scas
jecxz
idiv
rolb
lea
testl
pop
imulb
xor
dec
inc
fstpt
sbbl
adc
in
sub
lods
inc
outsl
mov
push
cli
movsb
shl
mov
mov
xchg
sbb
cwtl
lock
mov
insb
inc
dec
cld
fs
lret
cmp
pop
es
scas
std
lock
int
jo
adc
shlb
sub
out
jo
pop
ret
jns
push
es
outsl
insl
repz
loope
jbe
sahf
cmpsl
divl
test
lds
popa
or
push
lods
xchg
fcmovnb
mov
fwait
or
mov
loopne
addl
fnstsw
pop
clc
ret
jecxz
mov
xchg
daa
push
jnp
repnz
lret
test
hlt
rcll
push
mov
ror
incb
pop
xchg
in
dec
stos
xchg
loope
out
ja
xchg
cmp
ret
or
xor
inc
fidivl
mov
mov
icebp
and
dec
pop
mov
xchg
add
inc
mov
pop
or
es
fwait
fs
push
dec
das
lea
cld
mov
dec
out
bound
pop
jns
cmp
iret
xchg
cmpsb
lret
fcomi
add
jg
fwait
ja
add
jp
add
mov
imul
mov
rorb
jmp
jne
pop
iret
mov
inc
sub
inc
mov
xchg
gs
push
xchg
inc
flds
cmpl
sub
push
pop
and
add
stos
inc
mov
mov
das
jle
push
push
in
inc
in
pusha
addr16
icebp
arpl
mov
popf
pop
pop
fidivs
inc
dec
adc
rcll
or
repz
sbb
cmp
push
jns
fisubl
cmp
loop
outsl
in
push
scas
jo
adcl
jae
iret
dec
pop
pushf
repnz
leave
mov
xor
fdivr
arpl
or
inc
push
jp
or
mov
jge
or
lahf
sub
pop
push
std
mov
adc
push
shlb
mov
and
xchg
cmp
push
cmp
clc
mov
or
jno
push
inc
sbb
pop
aaa
dec
hlt
stos
cmp
xor
dec
cmc
jmp
pushf
xor
sahf
jno
scas
pop
test
push
cmp
in
test
push
loope
inc
inc
add
xor
out
fwait
enter
daa
mull
repz
jmp
cmp
pop
inc
ds
xor
and
jp
lahf
out
sti
imul
lods
mov
pushf
mov
js
imul
mov
lcall
sbb
mov
pop
outsb
test
cs
rcl
pop
mov
xor
mov
add
mov
dec
and
lods
push
repz
sub
aad
fbstp
adc
out
mov
pop
or
jl
inc
sahf
sbb
orb
std
loop
and
stc
ret
or
aaa
adc
ljmp
mov
jae
pop
jo
negl
nop
mov
xor
pop
push
cmp
jae
or
sub
into
jge
cli
cmc
in
lods
mov
push
xlat
outsl
mov
adc
mov
adc
outsb
jecxz
test
leave
lods
shlb
mov
js
out
loope
sub
outsb
or
inc
bound
sti
test
dec
outsb
gs
jge
pop
push
push
or
fldenv
dec
adc
dec
cltd
inc
repz
out
in
sbb
fdivrl
pop
std
loope
adc
add
xor
mov
out
daa
and
lret
nop
sub
nop
jb
or
cmp
je
mov
push
ror
push
lea
xchg
dec
fsubp
rorb
mov
iret
dec
divl
dec
repz
bound
int
xor
aas
mov
cmp
pusha
and
ja
roll
mov
sub
jne
cwtl
stos
mov
in
mov
inc
cmpsl
push
cld
out
lret
lods
loop
mov
int
lock
insb
jno
dec
sahf
shlb
cmpsb
aam
inc
dec
ret
or
or
cld
out
insl
ficompl
dec
jno
in
cmpsl
divb
ljmp
push
lods
cld
push
pop
mov
mov
sahf
aam
jnp
xchg
pop
incl
add
cltd
nop
dec
aaa
test
imul
adc
vcvtpd2ps
psubb
jl
xchg
dec
test
into
shll
push
sub
cmp
cmp
pop
xchg
mov
fdivr
xor
outsb
or
pop
mov
mov
hlt
dec
aas
dec
mov
mov
orl
mov
or
test
fwait
xchg
sbbl
add
pop
sahf
test
bound
xchg
xchg
cmc
sbb
mov
jmp
mov
cmp
bnd
sti
loope
cltd
aad
mov
push
cwtl
mov
xchg
xorl
cmp
cmp
dec
xchg
push
sbb
dec
pop
out
out
in
sub
push
jns
addr16
and
mov
das
and
cltd
das
insb
idivl
in
jle
dec
push
in
xchg
daa
pusha
add
jnp
ret
push
pop
fisttpl
inc
push
repnz
jae
dec
push
iret
jg
popf
inc
or
push
mov
dec
mov
sbb
and
imul
scas
rcll
push
mov
lahf
adc
mov
repnz
leave
add
hlt
out
add
inc
push
addb
mov
cmp
pop
inc
sahf
sub
loop
push
ljmp
jg
sub
mov
xor
mov
hlt
mov
and
cs
cmp
icebp
movsb
fidivs
sub
or
sbb
imul
mov
xorb
lea
ljmp
mov
adc
stc
jmp
scas
cmp
push
or
push
push
and
in
cmpsb
mov
xchg
inc
enter
daa
mulb
sbb
cs
test
lock
or
mov
movsl
icebp
popa
xor
leave
in
jae
push
inc
adc
sub
sbb
out
cmp
sti
daa
insl
lahf
lcall
push
ret
jecxz
or
pop
sub
sub
cmc
outsb
or
xor
and
cmp
lods
xor
loop
shll
addl
and
lods
push
mulb
push
sub
pop
leave
pop
pop
xchg
or
out
mov
mov
sahf
mov
add
andb
loop
addl
jp
sbb
and
sbb
dec
mov
pop
cmc
sub
xlat
xchg
in
loope
out
add
push
testl
pusha
imul
mov
arpl
push
imul
sbb
lret
add
push
data16
je
lods
cmpsl
sbb
mov
pop
aad
leave
sub
mov
lods
test
sti
pop
lea
gs
mov
pop
jbe
xlat
inc
sub
and
pop
xchg
sbb
pop
and
xchg
mov
sahf
sbb
pop
xor
xlat
push
cmp
mov
pop
adc
inc
pushf
fisttpll
jmp
test
test
cmpsb
aad
cmp
nop
add
dec
pop
fmull
jb
mov
pop
je
test
or
hlt
dec
sub
pop
push
xchg
mov
mov
xchg
fistl
je
pop
add
fisubrl
inc
add
mov
enter
and
xchg
rcll
jl
std
in
leave
cwtl
data16
mov
mov
mov
sbb
outsb
cld
mov
cmpsl
and
xchg
lock
lock
das
cs
add
jbe
mov
aam
inc
add
jg
lret
insl
roll
insb
pop
jne
cmc
cmp
ljmp
adc
lods
loopne
loope
and
push
pop
pop
push
into
dec
add
cltd
cltd
movl
loop
add
add
mov
sbb
loope
xchg
and
mov
xor
stos
jno
xor
cmp
mov
movlps
pop
or
or
jno
sub
mul
lock
es
or
cmpb
in
mov
mov
push
mov
mov
xor
or
cmpsl
jle
push
jae
in
jb
xchg
inc
mov
mov
push
cmc
mov
cmc
outsb
in
ja
add
jp
cmpsb
inc
mov
gs
mov
xlat
push
sbb
cmp
mov
inc
mov
add
mov
jmp
fldcw
out
push
lods
sub
dec
sub
addr16
pop
stos
sub
imull
mov
jle
test
in
dec
mov
filds
shlb
pusha
and
mov
adcb
push
test
xor
out
push
test
cmpsb
xchg
repz
dec
inc
mov
push
stc
imul
repnz
hlt
cmp
sub
bnd
mov
inc
cmp
bound
add
pop
add
xlat
mov
mov
lds
ljmp
adc
and
sbb
movsb
imul
and
in
sbb
cltd
jmp
cmp
call
aas
jl
xchg
mov
shll
push
imul
xor
push
jp
scas
sbb
inc
pusha
test
in
fisubrs
inc
lret
sub
mov
or
test
sub
push
lock
inc
sub
popf
icebp
dec
cmp
push
movsl
clc
repz
fs
lahf
sub
loope
sbb
fiadds
je
xor
mov
into
xor
sub
js
sahf
ja
cmpsl
push
setp
push
in
fdivrl
outsb
outsl
mov
xchg
xchg
popl
das
mov
and
clc
into
sahf
mov
sbb
aam
stc
stc
das
int
jb
sub
ret
sbb
sti
cs
shll
inc
mov
adc
sahf
pop
sub
test
roll
xchg
loop
sbb
stc
xor
mov
insb
lds
adc
ss
mov
rorb
lahf
cli
adc
fdivl
fdivrl
cmp
add
or
xchg
or
inc
pop
mov
xor
push
imulb
or
mov
adc
xchg
sub
mov
xchg
push
lods
mov
in
enter
aam
fldcw
loop
js
stos
and
xchg
sti
pop
sbb
sbb
adc
push
pop
pop
xchg
xor
inc
cmp
stc
fsts
sti
ss
or
pusha
cmp
jns
xchg
jno
pop
arpl
sbbb
ljmp
call
mov
nop
ficoms
dec
mov
loopne
dec
mov
mov
push
jecxz
push
mov
lea
dec
call
fmull
mov
mov
fcomp
inc
mov
les
shrb
inc
add
loope
mov
jg
into
and
outsb
add
divb
rorb
mov
pop
es
icebp
fdiv
cld
in
xchg
lret
mov
fisttps
dec
xor
scas
das
or
xor
aam
xchg
push
ret
es
add
insl
test
ret
dec
addr16
cmpsl
hlt
jg
ljmp
pop
lods
shlb
xchg
mov
add
shlb
mov
cmpsb
pop
cmp
jl
cltd
loopne
test
and
les
lcall
shll
rcl
addb
xchg
push
xchg
stos
pusha
cmp
out
mov
mov
out
jno
xor
lods
bound
adc
mulb
cli
out
gs
lea
pop
test
mov
sbb
stos
dec
jne
mov
jl
rorb
mov
mov
add
dec
mov
ljmp
xlat
mov
add
in
insl
xchg
movsb
sub
inc
pop
mov
xchg
ja
lret
arpl
push
cwtl
mov
sbb
mov
xchg
dec
mov
nop
jne
pushl
in
and
or
movsb
xchg
pop
sub
test
ret
sub
inc
insl
or
out
jae
fwait
push
xlat
and
xchg
outsl
insb
int
lahf
jnp
call
adc
sbb
adc
fbld
rol
lds
pop
lods
ror
imul
push
push
and
xchg
push
sub
push
ss
mov
pop
jle
fdivrp
pop
imul
scas
cltd
inc
es
inc
adc
sbb
push
movl
hlt
test
arpl
inc
pop
pop
decl
sub
sbb
or
jmp
int3
ret
pop
frstor
nop
xor
jae
add
xor
lret
cmp
rcll
push
xchg
jbe
xchg
pop
js
sbb
xchg
aaa
xchg
idivl
sbb
hlt
jl
loope
dec
inc
fnsave
xor
scas
sbb
scas
cld
test
xchg
test
mov
xchg
inc
out
lods
les
fwait
and
enter
daa
hlt
xor
push
xorb
xorb
cmp
imul
xchg
xchg
sbb
call
sahf
lahf
dec
jmp
dec
sbb
dec
sti
xor
jbe
pop
mov
cwtl
or
lcall
das
fsubrl
sub
pop
outsb
rclb
and
bound
mov
mov
inc
mov
add
adc
int
push
sub
mov
sub
out
push
mov
mov
insb
jl
add
cmp
fisubl
jg
flds
je
insl
stc
call
imul
cmp
lea
sar
cmp
inc
xchg
cmp
xchg
into
es
jecxz
inc
adc
xor
outsl
push
leave
test
enter
push
and
adc
test
add
pop
xor
sub
lods
jne
fwait
mov
out
out
adc
push
enter
inc
popa
in
addb
mov
mov
gs
xchg
add
inc
adc
test
les
mov
in
js
xchg
ss
nop
sbb
fsubrp
xlat
aad
pusha
pop
push
adc
mov
jmp
sub
cld
stos
aad
nop
jnp
mov
xchg
xor
cmp
dec
sub
pushf
sbb
jmp
out
bound
ljmp
mov
loop
dec
mov
rcrb
or
movb
xchg
aas
andb
mov
lods
jge
cmp
pop
shrl
cmp
std
xor
xchg
cwtl
lcall
jae
icebp
enter
adc
scas
mov
mov
jg
lock
xor
aad
sbb
outsb
sub
movsl
mov
pushf
cmp
jns
es
sbb
mov
dec
bound
cmpsl
repz
scas
ljmp
imul
jbe
daa
in
and
dec
loop
pop
je
add
cltd
xor
sti
push
push
xchg
ja
clc
jnp
stc
xchg
add
in
ret
hlt
xchg
pop
ds
ljmp
add
xchg
push
pop
jb
push
aam
push
lods
or
jne
xor
fadds
xchg
outsl
into
dec
hlt
addr16
push
push
xchg
lret
or
sub
or
xchg
and
aam
xchg
add
push
and
push
les
jo
mov
cmpsl
push
mov
imul
ja
pop
mov
popa
sbb
mov
icebp
cmp
mov
pop
cld
jne
xchg
cmpsb
mov
xchg
scas
out
ret
push
xchg
jmp
outsl
shrb
cmpl
out
xorb
inc
inc
lret
lcall
dec
inc
or
stos
jnp
lcall
and
pusha
sar
ret
xor
fsubs
pop
jecxz
xchg
inc
jbe
jae
inc
out
sbb
xor
jne
outsl
fisubrl
mov
mov
and
in
cld
cs
adc
dec
push
iret
mov
push
leave
push
jns
arpl
incl
cmp
test
add
sbb
or
mov
dec
pop
or
neg
pushf
jo
lds
jnp
mov
xlat
mov
ret
and
cmp
movsb
mov
sbb
sbb
pushf
jge
out
jno
cmp
fidivrl
dec
ljmp
cmpsb
add
stos
push
xor
and
or
sbb
xchg
test
subb
jge
cltd
cmpsb
inc
mov
in
cmpb
daa
repz
lret
ret
push
loope
std
out
sub
jo
cmp
xor
outsl
movsl
push
inc
and
inc
push
cmpb
sbb
jle
add
jl
xor
jnp
call
lods
arpl
daa
out
pop
and
mov
fcoml
shll
sub
mov
xor
ja
sarb
pop
imul
sarl
addl
xchg
mov
or
daa
add
pop
fcmovnbe
mov
rcrl
mov
xchg
outsb
fadds
cmc
adc
sub
stc
lahf
push
daa
andb
or
mov
jns
dec
sti
notl
aaa
cli
jp
xchg
xor
ffreep
or
or
and
or
in
outsl
xor
mov
lret
insl
adc
or
pop
xchg
imul
cmpl
push
sti
gs
popa
decl
loopne
xlat
jo
rcrl
inc
bound
icebp
fsin
pop
jno
jnp
fs
or
sbb
enter
adc
mov
leave
cmp
adc
push
pushf
fimuls
scas
cs
fisubs
stos
rcr
nop
xchg
mov
mov
pop
lret
xchg
dec
movsb
pop
loope
jbe
test
cli
loop
fbstp
and
sub
fcmovb
sbb
in
push
mov
mov
out
mov
filds
fisttpll
mov
in
pop
addr16
mov
sarl
jbe
cmp
sbb
fnstcw
loop
and
jmp
icebp
lahf
lcall
push
mov
sub
lock
jae
lret
mov
out
push
pop
aam
xor
ret
inc
xchg
es
fldcw
inc
cld
dec
pop
pusha
cmp
add
pop
popa
jg
scas
lods
test
lds
dec
mov
adc
out
sub
jnp
inc
add
add
pop
mov
add
push
sbb
clc
mov
loope
inc
push
in
sbb
mov
rcrl
loop
ds
ja
and
pushf
icebp
pop
push
sub
comiss
xor
jae
mov
cmp
adc
add
dec
pop
xchg
push
movsb
lods
jge
sbb
iret
dec
pop
jg
inc
stos
mov
cmpsb
fwait
dec
ficoms
sbb
add
adcl
jmp
mov
push
rorb
jnp
push
in
pop
fcoml
sub
mov
es
inc
ja
out
jp
loopne
mov
in
dec
mov
and
jmp
jne
push
aam
out
pop
xor
mov
pop
dec
jmp
cmp
orl
imul
inc
arpl
cmp
mov
stos
xorl
jnp
btc
call
push
pusha
outsb
stc
xor
int3
icebp
ret
out
sbb
fiadds
push
jae
mov
fistl
sarl
mov
and
and
cmp
sbb
and
imul
std
scas
pop
or
push
into
xchg
mov
iret
and
xchg
ror
xchg
sbb
cmp
push
cmovbe
dec
or
and
inc
lcall
add
test
pop
cmp
fidivrs
inc
adc
aam
add
out
lods
jno
push
mov
cmp
inc
movsb
or
push
and
aad
jge
dec
out
cmc
insb
push
aaa
add
or
sbb
je
sar
insb
dec
and
cltd
push
adc
lahf
xor
gs
out
scas
mov
xchg
test
dec
push
or
or
dec
cmpsb
leave
push
shr
imul
daa
repnz
push
mov
pop
sub
in
inc
cmp
faddl
movsl
or
test
nop
xchg
sbb
mov
add
decb
xor
sti
aam
stos
and
js
dec
leave
pop
fs
sbb
scas
in
fdivrl
movsb
imul
and
sbb
pop
cmp
mov
or
mov
mov
and
stos
cmp
mov
test
loop
mov
pop
hlt
mov
shl
insl
mov
add
addr16
cmp
adc
add
ss
out
lcall
fs
rcrl
ss
pop
cmp
add
cltd
not
shl
lods
mov
cmp
or
or
into
in
xchg
cmpsb
cmc
shlb
mov
adc
adc
lock
fadds
push
adc
data16
les
shll
sub
fnsave
in
pop
push
lods
sti
adc
sub
test
inc
loopne
pusha
mov
inc
jne
jae
xor
test
mov
xchg
mov
scas
pop
cmp
fstps
pop
jl
test
movsb
xchg
cmp
mov
sbb
xchg
adc
test
push
lds
mov
dec
sbb
je
nop
or
or
out
mov
enter
in
pop
dec
iret
mov
je
jnp
loop
mov
push
fcmovnbe
sbb
pop
xchg
or
adc
inc
mov
or
mov
jno,pn
movsb
scas
sti
and
xlat
jne
int3
push
jmp
std
orb
jecxz
ss
jbe
cltd
cld
mov
mov
ds
adc
shrl
dec
adc
ret
sub
insl
aas
aam
cmpl
std
mov
insl
pop
mov
dec
pop
sti
jge
icebp
insb
sbb
ja
lock
xchg
fstps
mov
insl
mov
and
orb
lcall
cltd
mov
jmp
push
or
cmpsb
mov
xchg
xorl
mov
rcr
inc
sub
in
stos
sub
clc
xchg
jecxz
test
push
scas
mov
xor
in
hlt
testb
add
cmp
mov
xchg
xchg
out
inc
inc
jo
or
jle
pop
push
sbb
in
lcall
incl
popf
pop
jns
mov
xchg
subb
mov
loope
mov
xor
sub
pop
and
mov
xchg
mov
jne
cmp
dec
xor
push
push
movsl
jmp
add
int
out
jge
sub
aaa
mov
addr16
jle
stos
hlt
jb
and
insb
push
aas
add
dec
xchg
jle
icebp
fucom
xor
test
or
filds
sarb
pop
push
imul
push
sahf
stc
cmp
and
rcll
xchg
fcmovbe
aas
stos
xchg
dec
mov
out
imul
mov
push
adc
cs
test
je
push
mov
retw
xchg
mov
inc
fs
fs
sahf
adc
leave
or
icebp
add
sahf
int3
sbbl
fsubp
or
pop
call
inc
mov
jmp
xlat
js
xchg
out
push
je
mov
sub
push
mov
aaa
ret
hlt
jo
mov
mov
or
dec
mov
push
test
std
jo
jnp
scas
cltd
repnz
sbb
dec
es
push
sbb
cld
inc
fwait
mov
xchg
in
push
movsl
jns
push
mov
lods
push
pushw
loope
pop
push
sub
aas
ret
inc
cmc
decl
adc
rcrb
lahf
test
and
push
add
aam
xor
lcall
xor
xchg
js
decl
mov
enter
mov
fsubrl
stc
sub
sbb
cmp
repz
mov
repz
mov
push
adc
mov
roll
add
pop
cmpsb
sub
mov
lret
xor
mov
mov
xchg
sbb
adcl
sub
pop
loop
ja
stc
or
dec
stc
adc
add
cmp
mov
push
ljmp
push
cmp
push
inc
or
cwtl
into
iret
mov
xor
cmp
adc
mov
or
add
push
out
lea
mov
lods
sub
jle
in
ret
pushf
loop
ret
out
fsin
cmpsl
adc
gs
cld
push
pop
adc
in
insb
mov
dec
repz
mov
pop
sbb
ds
xlat
xchg
jb
pop
das
pushf
cwtl
adc
ljmp
sbb
je,pn
sub
nop
dec
mov
dec
xor
xchg
xchg
roll
mov
in
inc
out
fwait
xchg
call
fmuls
mov
adcl
or
add
pop
xor
mov
lahf
cwtl
pop
inc
rolb
mov
mov
pop
cmpsl
stos
and
dec
fwait
rcrl
ja
idivb
cmp
cmp
dec
pop
scas
icebp
dec
in
idiv
xchg
mov
testb
mov
lock
mov
das
mov
adc
xchg
jo
sub
inc
cltd
aam
and
cmp
push
sti
imul
int
push
sub
lock
push
ljmp
xchg
lods
jle
insb
mov
nop
dec
xchg
and
sbb
or
lods
sub
cltd
fidivrl
add
rcl
std
fldl
clc
sub
fcoms
cmp
or
xor
or
stos
sbb
das
out
sub
jno
sub
iret
push
loope
enter
add
clc
cmp
or
add
mov
push
stos
pushf
dec
sub
dec
xchg
jae,pt
inc
add
inc
fmuls
or
sbb
lods
and
push
mov
bound
add
mov
int3
jns
scas
sbb
pop
lahf
notl
mov
cld
mov
pushf
and
ja
adc
cli
mov
mov
sahf
rorl
mov
jne
adc
out
pusha
mov
shr
out
pop
xchg
sarb
andl
out
sub
sub
xor
addr16
mov
stos
addr16
and
outsl
test
jle
out
xor
cmp
jle
movsb
xor
fbld
push
pop
pop
mov
roll
jae
in
add
popa
aam
popf
cs
cwtl
mov
xor
fimull
and
sbb
lcall
and
stos
test
mov
repz
sub
mov
hlt
mov
pop
arpl
mov
or
sbb
cwtl
and
or
rolb
ficomps
repnz
cltd
in
fiadds
and
fistpll
sbb
jl
jecxz
mov
jg
and
and
mov
push
jge
stos
inc
sbb
pop
aaa
sub
cmp
loop
jno
push
lea
out
dec
lods
push
fisubl
bnd
outsb
pop
scas
js
loopne
call
fldt
jecxz
movsl
inc
sub
stc
cmpsb
iret
in
in
in
aaa
out
popa
enter
daa
lock
mov
fs
ds
movsl
sbb
out
lahf
enter
mov
dec
sbb
stc
add
out
aad
cmpsb
xor
adc
lret
pop
loop
jge
adc
mov
dec
sub
mov
adc
into
test
sbb
xchg
mov
adc
mov
cltd
mov
ljmp
or
int
add
add
lret
mov
mov
in
lds
sahf
mov
push
test
xchg
scas
addb
jg
push
xchg
rclb
stc
les
adc
movsl
jg
push
call
rcr
jns
push
notl
add
xor
sarb
jecxz
or
test
mov
dec
cmc
pop
mov
outsl
shl
movlps
cltd
imul
aaa
flds
outsb
data16
popa
lods
adc
scas
out
out
jecxz
sub
ret
push
cs
sti
jb
jb
lret
gs
lods
maxps
mov
jbe
mov
cs
repz
imul
sarl
pop
loop
pop
adc
cltd
pushf
fistpll
jmp
mov
lahf
aad
in
jle
and
sub
push
mov
dec
or
sub
daa
jecxz
pop
cmp
call
cli
pushf
call
push
fisubl
mov
incl
fs
test
subb
in
cmp
mov
jo
adc
and
push
shrw
jl
add
jmp
into
rcr
cwtl
enter
popa
pop
pop
mov
and
movsb
cld
mov
push
jbe
lret
xchg
cs
mov
lock
push
inc
xor
rol
aam
sbb
ret
icebp
inc
cmpsb
es
cmp
xchg
in
scas
cmpsl
out
sahf
int3
ljmp
sbb
xchg
add
mov
cmp
mov
lock
cltd
adc
adc
mov
test
imul
dec
xchg
add
jnp
out
addr16
xchg
in
pop
ljmp
out
jnp
xchg
jno
aas
push
mov
push
loope
dec
je
or
out
xor
gs
lret
or
mov
nop
insl
inc
test
xor
xchg
sub
xor
dec
inc
outsl
inc
das
or
inc
sub
pusha
adc
add
aam
inc
inc
mov
iret
jns
jae
in
cmp
out
mov
inc
addr16
push
imul
sub
mov
mov
jno
out
and
push
inc
add
mov
and
out
aas
mov
std
fiadds
xchg
fwait
pop
pop
xorl
aas
sub
sub
jb
stos
fimull
outsb
and
jae
jnp
or
in
fdivs
aas
insl
cmp
mov
adc
inc
mov
add
push
and
popa
popf
push
pushf
mov
push
jno
jo
cmp
daa
sbb
adc
imul
push
scas
mov
push
mov
bound
inc
bound
jg
jnp
inc
fstl
arpl
cmp
or
pop
push
pop
jno
or
mov
jne
addr16
pop
or
pop
enter
sub
lds
push
sar
call
and
out
lcall
jp
push
adc
jbe
xor
jge
mov
sbb
je
aaa
inc
push
cmp
repz
jno
enter
fisubrs
push
mov
loopne
jo
je
scas
push
mov
sarb
bound
mov
mov
ljmp
dec
cmp
out
sbb
inc
loope
push
subl
add
xchg
movsl
and
lahf
out
dec
or
pop
sbb
jge
xor
xor
bound
js
sub
pop
and
xor
mov
jle
add
cmc
adc
test
and
ret
mov
jne
and
pop
test
or
int
into
sub
pop
xlat
jo
lret
in
sarl
mov
sahf
xor
test
cli
andb
jg
mov
out
jnp
cmp
add
inc
cmc
mov
xchg
inc
les
xor
fwait
notl
push
aaa
cli
inc
arpl
cmp
mov
or
mov
cmc
and
imul
out
aas
imul
in
pop
add
stos
mov
lods
clc
jno
mov
popa
stc
sub
and
cltd
movsl
mov
and
in
repz
gs
out
loopne
jb
pop
dec
out
inc
scas
and
fidivl
js
mul
sbb
jmp
es
pop
xchg
iret
add
test
and
cs
scas
aad
mov
or
lcall
cmpb
jecxz
fwait
aas
jmp
lea
mov
call
fiaddl
dec
dec
inc
fistpl
insb
pop
jp
mov
shrl
inc
or
fldenv
leave
sbbb
icebp
xor
testb
std
jne
lods
cwtl
andl
mov
sbb
icebp
sti
int
cld
out
adc
and
mov
mov
lret
sub
and
jp
cmp
sub
addr16
ret
andb
adc
mov
adc
dec
dec
inc
cld
cmpsl
out
std
ja
rolb
xchg
lods
push
or
mov
movsb
add
push
scas
xchg
pop
neg
pop
add
xchg
mov
mov
nop
iret
push
push
stos
jmp
clc
mov
mov
sbb
push
cmp
jecxz
cli
xchg
scas
out
repnz
xchg
mov
mov
xor
sbb
into
mov
or
lods
dec
imull
jp
nop
fisttpl
push
cltd
adc
daa
push
add
imul
push
add
aaa
add
out
into
mov
bound
fdivrl
jae
pop
xchg
insl
ss
fistpl
pop
adc
ja
dec
xchg
jp
add
mov
mov
hlt
push
dec
pop
pop
movsl
jne
pop
mov
push
pop
sbb
aam
cmpsl
xchg
out
addl
aam
jo
insb
mov
dec
addr16
mov
stos
dec
out
and
dec
dec
imul
les
pusha
fidivrl
ljmp
aam
inc
lods
stos
loopne
pop
pop
push
push
out
dec
popf
jl
add
mov
mov
out
or
xchg
push
pusha
dec
sbb
popa
cs
inc
scas
jmp
popa
push
ljmp
iret
mov
xchg
sub
hlt
inc
and
jo
insl
pop
aam
jno
les
add
insb
or
add
ror
inc
jl
pop
negl
test
adc
inc
dec
and
mov
lea
jge
jbe
loop
jge
pushf
sbbl
add
cmp
push
out
mov
dec
fsubrl
push
mov
push
and
scas
ss
loopne
movsl
fisubs
test
jns
loopne
dec
sub
aad
pop
in
add
inc
insb
daa
out
fldt
mov
sub
sub
test
push
ds
loop
and
xor
sbb
mov
add
dec
adc
jae
loope
mov
jnp
cmpsb
or
js
lcall
jnp
ss
or
sbb
push
inc
sub
ja
outsb
and
sub
test
lea
inc
ljmp
cli
push
adc
loop
xor
push
out
or
sub
lock
push
mov
cmc
rcll
mov
mov
sbb
mov
sahf
aam
ss
call
es
and
stc
xor
js
xchg
mov
fcoms
jmp
xchg
or
fsubr
ljmp
jns
cmp
mov
or
js
dec
cmc
in
imul
mov
mov
imul
imulb
add
shrb
movsl
pop
add
int
pop
sub
ja
mov
add
mov
rcrb
adc
gs
or
in
outsb
adc
test
inc
les
arpl
xchg
enter
adc
cwtl
cmp
mov
mov
ja
adc
ss
xor
jne
cs
xchg
mov
or
cmp
cmp
mov
push
je
imul
out
cmp
lea
adc
int3
jecxz
push
jnp
mov
mov
dec
cmp
js
sbb
xchg
and
or
cmp
mov
mov
jl
stos
rorl
sbb
testb
pop
cwtl
ds
mov
pop
les
shlb
adc
lret
xchg
pop
mov
xchg
sub
mov
jecxz
das
es
rorb
addb
lods
xor
pop
push
jne
xadd
es
push
aam
stc
imul
cmpsl
in
loopne
ljmp
jno
mov
add
mov
lods
mov
mov
push
push
out
push
cltd
jg
arpl
sbb
lock
dec
jg
jg
enter
mov
xor
out
stos
jmp
into
or
push
jb
xchg
or
sbb
icebp
cmp
cmc
idivl
xor
and
mov
psubd
test
sbb
xchg
scas
aam
xchg
adc
sbbb
aad
add
or
incl
jnp
bound
aam
jns
jmp
cli
xchg
mov
jecxz
mov
int
pop
ja
mov
jp
push
xor
mov
dec
sub
cltd
add
adc
js
std
das
jne
mov
rcrb
sar
push
jecxz
sub
and
addr16
jbe
stos
shlb
arpl
insb
mov
fsubs
in
es
pusha
jne
mov
std
or
ret
mov
sub
jnp
jae
sti
insl
push
stos
sbb
popf
mov
add
out
idivl
mov
xor
sbb
addl
dec
movsl
ja
xor
iret
add
repnz
shrb
xchg
inc
sahf
arpl
fadds
jo
dec
or
mov
dec
inc
adc
jno
add
ret
push
pop
es
fisubrs
inc
lds
out
xor
dec
mov
xor
aad
movsb
rcrl
mov
loop
stos
pop
jge
push
sbb
sbb
subb
jno
adc
jl
dec
ss
push
orl
xor
sub
sub
js
xor
push
inc
cmc
roll
sub
pop
aas
pop
in
in
and
inc
cld
sub
push
sbb
loope
rcrl
cmp
ss
movsl
xor
lahf
and
test
rolb
jne
xor
cmp
pop
int
jno
jnp
iret
pop
lahf
xchg
lcallw
popa
dec
cmp
adc
xchg
add
fcmovnbe
adc
pop
mov
sahf
mov
movsb
outsb
mov
mov
and
imul
xchg
or
pop
aad
xchg
xchg
push
pop
shr
or
or
sbb
mov
ja
inc
test
enter
sarb
xchg
jbe
jns
sahf
stc
jmp
sbb
in
or
cmp
stos
mov
popf
cli
lods
stc
lds
xchg
cltd
lods
cmp
pop
adc
xchg
mov
pop
ss
mov
pushl
jecxz
in
insl
pop
adc
lea
and
xor
ljmp
repnz
mov
jmp
shll
outsl
decb
jg
add
xor
push
loopne
aaa
sbb
inc
sub
gs
xor
les
and
mov
mov
sub
jb
mov
mov
push
lods
mov
loopne
fucomi
cmp
add
push
nop
mov
jb
mov
push
jb
imul
outsb
aas
mov
cmp
push
icebp
mov
call
aam
cmc
mov
daa
lods
subl
dec
fstpt
fldcw
inc
ds
jle
fldenv
push
mov
pop
imul
lret
test
ret
out
cwtl
stc
dec
cmp
sbb
icebp
test
loopne
lret
add
dec
mov
mov
jae
lock
imulb
add
out
pop
sub
stc
or
sahf
andl
mov
xor
cmpsl
in
inc
and
mov
aas
popa
or
and
loopne
mov
mov
pop
mov
xor
adc
cltd
mov
std
test
out
les
push
xchg
fucom
scas
leave
clc
sbb
pop
sbb
sbb
mov
pop
jmp
cltd
stos
fmul
je
mov
inc
mov
punpckhwd
push
xor
or
xor
orl
adc
jns
xchg
add
or
sbb
or
mov
cmp
dec
movsb
fiaddl
and
insb
dec
mov
clc
in
adc
or
inc
mov
pop
bsr
mov
ja
cltd
in
jp
dec
fdivl
call
arpl
int
stos
jne
xor
mov
popf
loopne
fmull
inc
xchg
jbe
xchg
jmp
cld
mov
mov
ficompl
sub
push
pop
sub
stos
xor
popf
insb
and
in
jle
imul
xchg
inc
fistps
lea
sti
incb
xchg
jae
faddl
push
insl
iret
popf
lret
mov
cs
lods
ficoml
xchg
add
sbb
ss
scas
mov
movsb
push
js
mov
and
stc
iret
pusha
lds
js
loope
test
mov
arpl
xchg
jo
jae
push
or
add
outsb
rorb
sub
ret
add
nop
out
sbb
rcrl
ficoms
ds
out
add
sub
test
mov
enter
xchg
scas
xchg
movsb
dec
int
push
decl
jbe
mov
sbb
push
scas
outsl
aaa
jle
mov
jno
xacquire
testb
loopne
mov
jmp
ljmp
hlt
adc
push
dec
mov
sahf
push
movlps
data16
cmpsb
fistl
int
cmp
das
daa
in
or
push
dec
das
loope
dec
shrb
insb
cmp
xlat
cmp
scas
xor
movsl
aaa
stos
jl
xlat
mov
int
add
sbb
flds
out
or
adc
pop
hlt
add
pop
fmulp
out
lcall
pop
fadd
pop
cmp
outsb
ljmp
sarb
mov
insb
mov
xchg
arpl
nop
pshufw
stc
cs
adc
mov
sub
push
pop
push
xchg
mov
sarl
mov
std
cmp
xorl
sub
lock
mov
stc
mov
pop
stos
adc
jnp
ss
or
gs
testl
pop
xor
mov
jg
or
into
ds
jp
inc
xor
add
adc
mov
adc
push
dec
add
sub
mov
repz
sub
sti
or
jp
sub
push
xchg
push
in
sbb
xchg
fnsave
mov
inc
out
mov
jg
dec
enter
fs
sub
pop
inc
cld
cmp
xlat
xlat
int
call
adc
ret
sbb
sub
arpl
dec
nop
xchg
std
mov
adc
jb
xchg
dec
in
mov
fsub
arpl
aad
hlt
dec
test
repnz
movsl
call
push
sub
mov
pop
add
adc
cmp
in
xchg
mov
inc
inc
sbb
aas
js
outsb
mov
out
sbb
and
test
shll
pop
sbb
push
adc
mov
outsb
cli
mov
subb
cld
push
outsl
jns
push
nop
xchg
mov
in
cmp
mov
jne
pushf
and
jne
sub
iret
cld
insl
sbb
cmp
out
cmpsl
jmp
add
sub
sbb
cmpb
mov
ret
pop
pop
push
lods
stos
add
adc
test
add
push
lahf
rorl
fldl
xchg
sar
push
jg
xchg
std
cwtl
sbb
sahf
push
pop
xchg
cmp
stos
xchg
mov
sbb
sub
fsts
bswap
jecxz
xor
cwtl
arpl
xor
mov
adc
mov
test
push
sbb
add
mov
movsl
xchg
xor
mov
in
data16
les
sub
aas
bound
jns
out
mov
xchg
pop
and
decl
mov
inc
dec
les
add
sub
adc
add
dec
mov
jne
mov
mov
out
push
out
mov
bound
xchg
jle
xor
addr16
dec
pop
sub
sbb
leave
addr16
mov
stos
cmpsb
lods
shll
push
in
insb
nop
int
jnp
mov
jle
sub
in
add
pusha
stos
pop
inc
fistpll
jae
ret
fstpl
add
inc
into
sbb
push
xor
ret
lods
sahf
mov
insl
lods
cmp
pop
xlat
xchg
pop
dec
mov
imul
push
push
mov
mov
lods
repnz
aaa
inc
leave
and
mov
sub
jmp
in
inc
jbe
pop
or
subb
inc
adc
push
or
data16
add
out
mov
adc
shlb
mov
pop
clc
fidivrl
dec
sub
and
sbb
jbe
scas
push
sbb
jmp
aaa
cmp
cmp
jno
repz
mov
push
dec
bound
mov
mov
loop
sub
push
jbe
test
fiaddl
shll
mov
and
daa
jmp
out
push
das
xchg
loope
out
sub
mov
shll
lods
movsl
ds
and
xchg
adc
and
xor
and
pop
sbb
js
push
rcrl
pcmpeqd
fsubrl
shrl
mov
repnz
adc
adc
jecxz
mov
mov
mov
ljmp
pop
and
int
fmull
pop
rorl
lret
add
push
sbb
sbb
mov
je
int
mov
jle
loop
sbb
stc
push
xchg
cmp
lret
fisubrl
cmp
and
jnp
or
sahf
cli
adc
xor
lea
jns
or
pop
into
and
push
xor
sbb
adc
lea
adc
or
add
xorl
mov
adc
mov
inc
cmpsl
cs
shlb
fcmove
loopne
dec
sbbl
addb
mov
mov
mov
rcll
enter
jle
test
cmp
in
popf
pop
popa
cmpsb
and
add
mull
movb
loop
dec
nop
insb
jnp
dec
outsl
test
cmc
xchg
sbb
push
inc
je
ds
jecxz
xchg
push
testl
rorb
mov
inc
mov
sti
mov
fistpl
jle
pop
push
inc
je
or
pop
adc
mov
and
repnz
cmc
sbb
notb
pop
std
adc
out
sbb
pop
mov
push
inc
out
xchg
push
sub
adc
fsubrl
ret
and
xchg
sub
ficompl
mov
push
gs
scas
lret
xor
mov
fldenv
and
lods
add
sub
int
and
mov
cmpsb
jns
pop
ret
gs
and
int
mov
xorl
cs
push
clc
mov
jl
cmp
ficomps
outsb
xchg
int
cmp
pop
inc
and
add
jle
adcl
push
sub
xor
cltd
daa
or
pop
xor
cmp
scas
or
sbb
dec
xchg
inc
test
dec
icebp
xchg
jg
dec
rep
push
inc
bound
or
adc
push
in
sbb
xchg
add
xchg
ficomps
jmp
out
in
inc
jmp
mov
mov
mov
js
ja
cmc
mov
mov
fcmovne
mov
pushf
loop
dec
xchg
pop
mov
and
push
mov
lcall
jmp
xchg
scas
clc
addl
adc
or
sbb
fisubl
pop
mov
sbb
cmc
fidivrs
dec
sbb
loope
in
or
inc
mov
xor
cmpl
inc
fbstp
insb
jp
repz
popf
sbb
les
lods
dec
adc
mov
mov
loopne
imul
call
inc
rclb
fiaddl
iret
push
sbb
push
cmpl
arpl
fisubs
or
sti
push
or
stos
or
cwtl
mov
int3
lock
pop
mov
mov
push
xor
or
xchg
sbbl
and
cld
mov
add
movsb
bound
mov
jge
mov
int
xor
cld
xchg
jb
sbb
inc
jno
sbb
sub
add
sub
test
cmp
shlb
icebp
gs
push
dec
loop
movsl
inc
cmp
lret
loope
ret
in
mov
xchg
mov
ljmp
loope
movsl
jbe
ss
sarb
and
movsl
inc
add
and
add
subb
outsl
sbb
jbe
add
fisttps
scas
popa
xchg
ret
out
rcrl
mov
sub
pop
pop
pop
leave
sti
lcall
jne
push
jmp
sub
adc
lock
mov
mov
or
mov
sbb
and
jecxz
push
sbb
int
sbb
sub
nop
test
shrl
scas
sbb
out
pop
sahf
pusha
aam
test
cmp
jg
cli
dec
loop
out
adc
fs
adc
jge
ss
idivb
fildl
test
and
sbb
stos
or
sbb
into
add
jo
or
xor
int
outsl
or
out
adc
or
imul
sbb
out
jg
jnp
je
xchg
lods
out
xchg
cs
push
cwtl
mov
mov
sar
mov
adc
addr16
mov
adc
pop
ljmp
fldln2
inc
xchg
fimuls
repz
jmp
aam
xchg
sbb
fnclex
je
dec
into
xchg
pop
adc
cld
adc
pushf
loope
sub
or
sub
pop
nop
inc
or
jno
dec
stc
rorl
push
push
je
xorl
test
cli
xor
mov
in
jmp
xorl
pusha
inc
fisttpl
pop
test
cmp
cmpb
rorl
mov
test
roll
notb
mov
fisttpl
cmc
icebp
js,pn
cld
mov
xchg
push
mov
fdivl
lock
rcrb
dec
sub
leave
jbe
dec
jmp
mov
pop
mov
xchg
movzbl
jb
lods
imul
mov
test
int3
and
pop
mov
xchg
mov
inc
cltd
pop
test
das
imul
push
inc
clc
leave
add
and
pop
pop
in
loope
stos
movsl
push
out
loope
repz
sbb
push
push
fidivs
jbe
or
xor
xchg
mov
and
data16
cli
sub
xor
xchg
xorb
out
in
stc
sub
or
movsl
insb
fwait
idivb
das
add
jbe
jno
jge
fbld
dec
dec
jns
subl
fnstenv
xchg
clc
push
sarl
aaa
jecxz
sub
jp
test
test
mov
imul
jne
call
sub
xchg
out
pop
or
cmpsl
in
xchg
pop
xor
punpckhdq
arpl
dec
or
or
stos
mov
push
jnp
cmpsb
test
scas
mov
push
nop
pusha
loope
fcmovnu
jns
mov
pop
or
incb
mov
push
mov
popf
aas
lea
clc
dec
and
jo
fisubrl
push
xchg
pop
out
cmc
sbb
push
arpl
movsb
cmp
dec
cmp
adc
dec
mov
jno
add
push
lods
hlt
mov
imul
jbe
mov
or
or
scas
int3
adc
dec
xchg
fdivrp
cwtl
mov
pushf
mov
test
and
adc
movsb
in
adc
jbe
and
jge
int
mov
into
aaa
mov
sbb
jl
sti
in
pop
clc
jp
jl
lods
jo
shrb
les
ret
pusha
sub
adc
mov
fs
jb
mov
add
sub
lahf
push
push
adc
sub
lcall
pop
or
movsl
dec
inc
aam
test
push
lahf
mov
outsb
sbbb
jo
add
push
xor
aaa
xchg
pushf
js
cmp
lcall
inc
fadd
bt
popf
mov
movsb
adc
lret
hlt
mov
push
mov
xchg
inc
mov
inc
and
ss
int
cmp
xor
push
jns
pop
pop
pop
roll
mov
bound
push
mov
sahf
add
inc
test
push
mov
int
jle
stc
lock
ss
in
cmp
xchg
dec
dec
testl
or
or
push
into
out
in
cmc
iret
repz
jecxz
adc
mov
lock
adc
add
push
movsw
orb
bound
push
mov
pusha
sub
dec
mov
sbb
lcall
lods
sbb
scas
mov
pop
or
inc
and
fldenv
scas
jmp
lret
xchg
add
push
pop
or
pop
dec
adc
ficompl
clc
insb
xor
mov
adc
fisubl
nop
and
pushf
jb
nop
lock
dec
std
and
fsub
nop
cmpsl
pop
std
push
jge
daa
jg
call
rclb
dec
mov
sub
or
loope
fstpt
test
inc
xlat
in
inc
stos
shrb
mov
adc
and
leave
rcll
mov
std
pop
shlb
cwtl
in
add
mov
add
inc
xor
mov
dec
in
mov
jb
lock
sub
daa
sub
or
ret
ficompl
into
insl
jl
sti
dec
sub
cmpsl
call
fistpl
lods
ret
cli
cmpsb
mov
shrb
mov
mov
and
inc
inc
fcomps
int3
dec
fdivl
call
mov
xchg
mov
nop
hlt
shr
xor
xchg
jb
stos
xchg
jnp
out
inc
dec
scas
xchg
hlt
cli
push
mov
repz
nop
scas
ret
fcoms
xchg
mov
push
jecxz
dec
popa
inc
out
jb
xchg
xchg
or
dec
fnstenv
or
es
or
fwait
out
and
data16
pop
jbe
add
pop
jmp
jns
les
mov
sbb
enter
sub
pop
je
iret
ja
pusha
lea
push
mov
mov
jp
lds
das
cmp
xchg
mov
out
pop
cltd
ljmp
movl
sahf
outsl
jp
out
inc
sub
or
les
dec
xor
rol
xchg
jnp
les
in
aas
mov
jl
fistps
xlat
jbe
inc
clc
xchg
dec
jae
or
push
jns
cmpsb
popf
rcrw
mov
sub
insb
fisubl
mov
negl
xchg
out
imul
scas
cmp
xchg
add
nop
lret
iret
jmp
les
sub
or
sbb
sbb
nop
inc
jg
adc
push
nop
clc
call
add
xchg
mov
adc
out
ficomps
cmp
mov
jno
and
and
lea
outsl
jle
movsb
js
xchg
push
cmp
int3
jbe
lea
sbb
int3
aaa
jp
push
cmp
les
int
jl
cmp
push
repnz
aaa
xor
repz
push
xchg
loope
test
cmp
push
inc
mov
xorl
enter
daa
call
adc
sub
pusha
adc
lahf
jp
ds
or
inc
je
lahf
rolb
orb
sbb
pinsrw
popa
xor
pop
dec
stos
out
pop
nop
test
js
imul
xlat
jmp
push
adc
fcmovnu
insb
or
mov
push
adc
cmpsb
cld
outsl
adc
inc
mov
push
xor
mov
je
and
pop
int
inc
mov
pop
push
lahf
adc
push
hlt
pop
rcr
repz
cmp
test
sbb
jg
std
fucom
pop
sub
stos
fs
adcl
push
xchg
cmp
push
jmp
testl
jle
cmp
pop
repnz
lods
xchg
cmc
xchg
aam
xor
iret
jle
lods
lahf
mov
adc
adc
push
sub
and
movl
mov
xchg
sti
ljmp
gs
icebp
loopne
add
jo
inc
xor
jecxz
pop
xor
testb
mov
jecxz
sbb
push
insl
insb
xlat
leave
push
sbb
sub
adc
dec
xchg
pushf
aaa
mov
jmp
push
push
cs
andb
mov
fcoms
mov
lahf
dec
roll
scas
pop
ss
pop
enter
jge
mov
sub
scas
sbb
dec
mov
inc
andl
das
fldt
jge
inc
pop
lock
inc
lds
mov
lret
and
xor
test
negb
cs
std
push
xchg
cwtl
mov
rol
sbb
inc
icebp
fcoml
cld
adc
and
mov
lret
xor
mov
fcmovnu
rolb
and
sub
stos
aam
mov
lret
mov
movsb
dec
es
cmpsl
out
push
ljmp
outsl
lods
inc
jb
mov
lret
in
mov
nop
mov
flds
pop
dec
pop
cltd
leave
sbb
mov
decb
push
stos
vpaddw
clc
aas
fsubs
stc
lods
cmp
xchg
loop
inc
xlat
popa
stos
adcl
cmpsl
cmpsb
loop
test
sahf
dec
cmove
add
jecxz
lds
mov
aas
andl
enter
in
lods
les
int3
mov
adc
negb
js
addl
roll
pusha
sbb
mov
cld
in
add
mov
push
pop
das
jno
ja
fsubrl
mov
pop
pop
mov
jmp
sub
jp
xchg
mov
sti
jl
aaa
xchg
xchg
xchg
and
mov
subl
adc
mov
jge
addr16
loop
stos
jb
xchg
and
xchg
insb
cmp
ss
cmpsb
cmpl
jo
pusha
pop
adc
fbstp
xor
inc
cli
inc
inc
jae
inc
ja
cmp
jmp
std
sub
imul
xchg
mov
rcrl
insb
lret
imul
mov
imul
cmp
repnz
xchg
lods
leave
cld
enter
fnstsw
arpl
dec
mov
or
insb
sbb
inc
pcmpgtw
jmp
sub
mov
xchg
pop
inc
rolb
mov
xor
mov
cmpsl
inc
out
cmp
mov
movsb
add
sbb
std
adc
jge
negb
aaa
cmp
push
cmp
pop
mov
stos
dec
jp
in
icebp
push
aad
sub
dec
ja
scas
dec
xchg
push
push
push
popf
test
push
mov
xor
jl
push
inc
in
push
xchg
in
enter
daa
out
fsubrs
lds
loope
mov
ja
dec
fstpt
pop
mov
movsl
pop
hlt
and
ficoms
das
lahf
fisttps
rcrb
gs
pusha
add
cmp
icebp
or
jecxz
mov
outsl
js
jmp
lea
imul
pop
fnstenv
outsb
mov
addl
mov
inc
cltd
mov
push
mov
mov
repz
and
cmp
sub
and
lret
pop
jb
push
mov
cmp
mov
xchg
jg
test
lcall
push
mov
push
lods
fs
and
sahf
fmuls
testl
pushf
jbe
sahf
sbb
or
aas
adc
lods
mov
pop
xor
mov
ljmp
imul
jne
ss
inc
lods
xor
cmc
out
loope
sub
js
in
mov
in
icebp
call
push
incb
push
jge
in
cmpsb
pop
inc
mov
std
fsts
imul
sbb
push
inc
xlat
or
dec
adc
loop
loop
mov
clc
insl
cs
shl
aad
pop
stos
nop
fdivrs
into
dec
jmp
cmpsl
jb
pop
adc
xor
je
inc
jecxz,pt
lret
mov
cmc
pop
fld1
sub
into
in
dec
mov
in
cmp
pop
xor
xlat
mov
inc
lahf
inc
in
pop
inc
loopne
icebp
aas
xchg
pop
add
adcl
push
negb
sti
std
lods
pop
inc
cwtl
pop
lahf
push
mov
mov
jl
mov
lahf
cld
aas
imul
cmp
mov
lret
sti
adc
aas
int3
mov
rol
mov
aam
ret
ret
clc
aam
es
in
insl
dec
outsb
inc
dec
and
out
cmpsl
out
dec
ljmp
push
lods
lods
cmc
sub
out
xor
pop
mov
out
mov
add
negl
loop
and
add
push
outsb
sub
push
or
jp
mov
cmp
rcll
jle
out
or
rclb
icebp
push
bt
cmp
ss
or
loope
xor
xchg
dec
mov
and
testl
divl
push
movsl
xchg
xor
mov
add
xorl
cmpb
mov
lcall
lds
rdmsr
push
in
xchg
xchg
in
iret
mov
int
mov
ljmp
jp
push
shll
pop
sti
mov
adc
jne
and
xor
pusha
xchg
push
jns
xchg
mov
inc
dec
out
push
sub
add
sbb
stos
in
jmp
jns
scas
insb
cmpsl
fcomip
jnp
dec
lods
jle
ds
in
add
xchg
cmp
negb
into
push
inc
add
mov
std
popf
mov
adc
test
fiaddl
repz
lahf
imul
scas
add
ret
sub
repnz
lock
jae
push
hlt
lahf
inc
pop
arpl
lahf
scas
inc
test
push
mov
or
mov
int3
pushf
jecxz
pop
outsl
push
inc
fsubp
xchg
shr
aaa
mov
cmp
fdivrl
fnstsw
rcll
pop
int3
jbe
mov
add
mov
add
in
add
adc
aad
add
push
mov
fmulp
jo
xor
scas
xchg
push
cmp
lds
shrb
cmp
pop
out
daa
out
and
sub
loope
or
sub
movsw
cmp
arpl
xorb
popa
bound
lahf
sbb
sbb
shlb
hlt
in
iret
ss
pop
ficoms
js
cld
cmpsl
pop
pop
idivb
lcall
adc
ret
sub
js
cmp
sahf
adc
pop
mov
xor
icebp
jmp
pop
and
push
push
es
int
testl
cmp
rorl
adc
xchg
fistpl
sub
ret
cmp
ljmp
jae
fs
frstor
or
shr
cmp
loopne
test
cs
jne
loop
add
adc
into
nop
mov
pusha
push
out
xchg
jg
mov
add
pop
cs
inc
lods
pop
fstpt
mov
movntq
out
add
lahf
push
mov
pop
dec
adc
dec
sub
sub
loopne
fbld
data16
inc
pop
cmp
fxch
stos
xchg
les
xor
sarb
loopne
and
movl
pop
loopne
dec
adc
gs
lds
mov
lock
scas
or
dec
inc
addr16
mov
scas
lds
jecxz
ret
and
push
imul
dec
lahf
lret
mov
dec
aad
cmpsb
adc
xchg
pop
jns
push
xchg
sbbb
inc
insb
xor
inc
sti
test
xor
add
cmp
roll
shlb
pushf
cmpsb
cwtl
push
or
mov
mov
out
or
das
mov
mov
das
push
rorl
in
popa
aam
int3
jge
xchg
es
ret
xor
jo
in
loop
fildl
sbb
pop
enter
jecxz
in
test
push
rol
jle
loopne
aaa
call
pop
mov
adc
push
xor
mov
xchg
ja
mov
in
push
push
shr
push
sbb
and
insl
cmp
aaa
xchg
insl
push
dec
pop
iret
lar
mov
or
movsb
mov
daa
adc
xchg
shll
xchg
sahf
cltd
inc
push
jmp
or
je
fwait
mov
out
push
mov
iret
mov
stc
ja
ret
lea
