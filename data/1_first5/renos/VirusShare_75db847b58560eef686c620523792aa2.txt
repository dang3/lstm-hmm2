jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
gs
popa
xor
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
movl
movl
mov
push
mov
push
call
lea
push
call
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
lea
push
call
lea
push
call
lea
push
call
lea
push
call
movl
movl
mov
push
mov
push
call
lea
push
call
movl
movl
mov
push
mov
push
call
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
lea
push
call
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
movl
movl
mov
push
mov
push
call
mov
pop
ret
lea
push
mov
add
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
lea
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
lea
push
call
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
lea
push
call
call
lea
push
call
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
mov
cmp
je
call
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
mov
xor
divl
test
jne
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
mov
cmp
je
jmp
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
je
inc
inc
lea
cmp
jbe
mov
mov
mov
dec
mov
mov
xchg
mov
mov
mov
mov
xchg
lea
inc
dec
mov
cmp
je
jmp
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
mov
sub
mov
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
push
mov
mov
xor
call
mov
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
mov
mov
mov
call
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
push
mov
mov
xor
call
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
lea
mov
push
mov
jmp
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
je
inc
inc
lea
cmp
jbe
mov
mov
mov
dec
mov
mov
xchg
mov
mov
mov
mov
xchg
lea
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
mov
sub
add
add
mov
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
mov
mov
call
mov
mov
mov
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
dec
in
mov
into
lock
jle
mov
js
mov
adc
mov
sbb
mov
push
in
mov
xor
mov
sub
mov
xor
mov
imul
mov
inc
xor
test
outsb
mov
inc
xor
mov
outsb
mov
inc
xor
add
outsb
mov
inc
xor
out
nop
outsb
mov
inc
xor
in
imul
and
mov
inc
xor
leave
imul
and
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
je
inc
inc
lea
cmp
jbe
mov
mov
mov
dec
mov
mov
xchg
mov
mov
mov
mov
xchg
lea
inc
dec
movl
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
push
call
mov
call
mov
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
mov
mov
call
mov
cmpl
je
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
cmp
je
mov
subb
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
mov
xorb
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
incl
mov
cmp
jne
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
mov
call
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
push
mov
push
call
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
movb
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
mov
mov
pop
ret
mov
push
mov
add
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
call
test
jne
mov
jmp
movw
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
call
lea
mov
pop
ret
push
mov
add
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
lea
push
call
call
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
lea
push
call
lea
push
call
lea
push
call
call
call
movl
movl
mov
push
mov
push
call
lea
push
call
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
movl
movl
mov
push
mov
push
call
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
lea
push
call
call
movl
movl
mov
push
mov
push
call
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
lea
push
call
mov
mov
lea
mov
mov
xchg
mov
xchg
xchg
mov
mov
mov
inc
dec
je
xchg
lea
xchg
mov
xchg
dec
lea
push
call
cmp
jo
mov
mov
dec
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
dec
je
mov
inc
dec
push
push
push
call
mov
call
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
mov
pop
ret
add
add
jo
imul
add
in
add
lea
push
call
movl
movl
mov
push
mov
push
call
lea
push
call
lea
cmp
jp
xchg
mov
xchg
mov
mov
mov
mov
lea
lea
mov
mov
xchg
mov
lea
mov
movl
movl
mov
push
mov
push
call
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
lea
push
call
mov
lea
cmp
jbe
mov
mov
mov
mov
dec
jne
xchg
mov
lea
mov
dec
mov
mov
lea
lea
movl
movl
mov
push
mov
push
call
lea
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
lea
push
call
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
lea
push
call
call
cmp
jle
mov
mov
mov
mov
xchg
dec
dec
inc
xchg
lea
xchg
mov
mov
mov
mov
mov
dec
dec
je
mov
dec
inc
dec
movl
movl
mov
push
mov
push
call
call
cmp
jbe
xchg
lea
mov
lea
lea
dec
inc
mov
xchg
xchg
lea
mov
mov
mov
mov
mov
mov
lea
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
subl
jne
mov
lea
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
mov
mov
lea
mov
dec
xchg
mov
lea
xchg
mov
mov
mov
lea
call
lea
mov
mov
xchg
cmp
js
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
mov
lea
xchg
inc
ret
mov
ret
lea
inc
add
test
arpl
add
add
sahf
les
cmp
adc
clc
bound
xchg
xlat
xchg
ss
jg
roll
xchg
outsb
hlt
repz
adc
mov
or
leave
sub
lea
add
scas
mov
xchg
or
or
add
addl
andl
stos
incb
dec
add
add
das
push
add
les
stos
add
fsubs
in
add
daa
mov
push
add
add
mov
xchg
add
inc
add
icebp
add
sahf
pop
add
cmp
idivl
iret
fs
add
cmp
push
add
lock
xor
add
push
add
cmp
pop
int
ret
stos
rsqrtps
mov
roll
add
sbb
sub
xchg
add
cmp
mov
xchg
adc
es
daa
lahf
filds
fbstp
push
adc
mov
ds
out
xor
inc
add
inc
dec
sub
add
adc
mov
fistl
test
add
xlat
fcmovu
filds
add
scas
fstl
sub
mov
xor
cmp
mov
cltd
and
xchg
jmp
pop
sub
mov
and
push
add
add
mov
add
xor
add
add
add
fsubl
sub
or
mov
push
add
and
add
rol
sbb
dec
push
icebp
jl
and
mov
fucomip
bound
jge
add
xor
imul
add
sti
xchg
mov
add
mov
add
mov
daa
push
mov
out
sti
inc
adc
add
js
and
popa
and
add
mov
add
or
ret
test
add
add
mov
addl
aas
xor
add
push
and
add
and
add
add
jo
mov
sbb
int3
inc
imull
inc
in
stos
frstor
mov
jnp
and
add
adc
addr16
out
clc
mov
add
sub
xchg
and
fsubrs
sbb
lcall
cld
cmp
je
mov
add
lret
pop
push
jl
sbb
aam
and
jnp
add
sub
add
aaa
shl
movsb
add
add
add
dec
add
adc
and
sahf
movb
xor
xchg
xchg
add
add
add
pushf
mov
sub
repnz
mov
pop
inc
cmp
pushf
rcll
inc
cmpb
add
clc
in
pop
or
push
jo
shl
mov
add
popf
add
popl
mov
add
pop
cmpsb
jg
test
mov
mov
lods
add
push
jne
push
mov
add
xor
loope
jo
cmpsl
xlat
add
add
xchg
add
add
jge
dec
dec
pop
jmp
cmp
mov
cwtl
mov
and
test
sub
cmpb
add
jne
dec
add
add
or
dec
push
add
test
or
mov
je
movsb
or
xor
dec
add
push
addb
mov
inc
pop
fimull
add
mov
ficoms
mov
inc
pop
sbb
repz
into
addb
mov
add
dec
fwait
ja
test
push
hlt
mov
add
js
lods
xchg
pop
addb
nop
imul
push
sbb
add
dec
add
inc
aad
inc
clc
add
leave
icebp
sarb
add
std
movb
add
and
push
cld
mov
add
cmp
fs
xor
mov
loope
lds
xor
push
sbb
inc
sbb
cmpsb
gs
in
push
xlat
adc
push
test
cwtl
shrb
outsl
loope
aad
sub
das
adc
push
fistpll
clc
cli
ja
jns
lock
loopne
insb
into
xor
xor
cmp
xor
inc
xchg
out
inc
pop
stc
pop
mul
ja
fsubrp
fldl
es
lcall
mov
jp
adc
ret
outsb
mov
mov
lods
push
orb
mov
cltd
lods
mov
mov
and
aas
mov
fdivr
dec
popa
negl
sbb
mov
scas
and
repz
sahf
fs
add
cwtl
jmp
inc
loop
stos
add
adcb
fs
add
cmpsl
jne
push
cmp
mov
inc
push
cli
or
cld
xor
add
into
or
add
cmp
sbb
mov
xchg
pop
flds
imul
dec
pushf
add
data16
cmp
cmp
cwtl
mov
sub
das
in
adc
push
sti
mov
test
daa
nop
jmp
xchg
dec
and
inc
push
lods
adc
popa
jnp
repz
sbb
xchg
pop
push
fcompl
fdivr
loopne
and
push
enter
jl
sbb
dec
pop
aad
jno
inc
xor
aas
or
loope
mov
ss
inc
lock
je
mov
jecxz
jbe
jle
dec
lea
cwtl
dec
ds
scas
pusha
rorb
daa
mov
fistpl
das
pop
lods
imul
push
mov
das
div
jg
sti
imul
cwtl
aas
and
outsl
jo
fsubs
negb
ret
xchg
std
insb
xchg
push
mov
add
and
movsl
lret
arpl
pop
mov
inc
xchg
out
sbb
sahf
fsts
sub
dec
push
aam
dec
ret
pop
cmpsl
es
xchg
cmpsl
insl
dec
jne
clc
in
adc
out
ljmp
mov
iret
movsl
btc
cmp
std
cmovno
sbb
add
adc
movsl
mov
xor
fisttpll
ljmp
gs
sbb
mov
cmp
stos
mov
lock
xchg
dec
lds
sbb
cmc
call
mov
xor
outsb
inc
xor
bound
xchg
sub
pop
inc
ja
in
dec
stos
mov
inc
in
cmp
or
icebp
sub
push
ss
inc
add
lds
scas
sarb
pop
lret
cs
xor
mov
lock
mov
xor
stos
addr16
ljmp
int
or
jp
fdivs
fwait
mov
xor
xchg
xor
nop
jmp
inc
push
sbb
out
sbb
sbb
pop
push
mov
stos
xor
sub
and
jnp
sub
in
push
insl
adc
fmul
sar
dec
ret
pop
pop
jge
cmp
movsb
jae
adc
push
cmp
push
popf
repz
dec
push
in
sub
xor
outsb
xchg
sti
test
sbb
push
fsubrs
popa
mov
fidivs
mov
adcl
cld
repnz
fmulp
and
hlt
mov
cmp
add
jp
lods
cmp
or
fdivp
add
sbb
pop
testb
lahf
jo
out
push
and
cmpsb
push
cmp
dec
movsb
roll
sbb
xorb
cmp
enter
daa
mov
cmp
push
fdivrs
and
jmp
push
adc
xor
dec
outsl
adc
or
test
push
sbb
inc
cmpsl
and
into
in
cmp
mov
pop
outsl
or
push
loope
call
pop
cmp
xchg
ds
arpl
outsl
gs
or
incb
imul
add
pop
arpl
adc
or
pop
pop
sbb
mov
pop
movsl
fildll
mov
dec
lcall
jecxz
outsb
pop
fidivrs
andb
lods
mov
adc
mov
sbb
sar
push
mov
shlb
negl
mov
and
ffree
cmp
repnz
sub
sbb
push
mov
test
loopne
xor
faddl
loop
mov
sub
adc
dec
cmp
mov
inc
out
mov
cli
cmp
mov
in
lahf
cmp
adc
push
ret
dec
into
jmp
aas
cmc
add
mov
push
adc
pop
pop
leave
movsl
adc
in
adc
push
add
cmp
sub
push
cmp
sub
cmc
fisubl
jg
dec
sti
dec
mov
inc
mov
push
nop
sub
dec
sbbl
stc
int
push
repz
xchg
call
movsb
dec
sti
pop
mov
pushf
lock
cs
mov
movsl
inc
dec
mov
aam
fisttps
dec
mov
rcl
and
cmp
fneni(8087
mov
or
outsb
out
mov
je
cmpl
mov
pop
push
test
inc
or
or
aad
cmpsb
mov
xchg
mov
pop
cmc
dec
shll
popl
std
adc
sub
test
xor
dec
mov
mov
mov
mov
add
pop
js
cmc
jne
aam
ljmp
outsb
shr
stos
cmc
mov
sbb
clc
sub
mov
ljmp
pop
lods
cmp
pop
mov
lods
push
xchg
and
pop
mov
sub
cltd
push
popf
incb
xchg
adc
fnsave
cmpsl
outsb
test
mov
xchg
jmp
sbb
imul
sti
movl
dec
dec
mov
add
cmp
aam
rorb
mov
jg
mov
mov
outsl
negl
mov
cmp
inc
test
nop
push
icebp
fwait
cmp
push
in
add
and
mov
jns
cmp
in
mov
mov
dec
sub
mov
cs
out
addr16
pop
jp
test
jne
clc
sub
dec
pop
push
jne
jns
pusha
and
fucomip
mov
mov
xchg
or
in
xor
push
jae
mov
out
mov
fwait
cmp
aas
sbb
fdivrs
divb
in
push
adcb
mov
ds
xchg
pop
mov
scas
inc
rcll
fdivs
mov
push
std
dec
jnp
sbb
insb
inc
xchg
push
cmp
pop
imul
push
enter
pop
pusha
sarl
loop
leave
stc
lea
arpl
push
or
addr16
dec
sbb
or
mov
int3
sub
pop
and
in
inc
dec
cmp
lock
scas
les
inc
cmp
add
pop
aaa
xchg
push
iret
mov
jge
sbb
enter
daa
mov
and
mov
mov
push
test
xor
out
inc
lahf
adc
fs
xchg
push
pop
clc
add
sub
cmpsb
imul
js
movsl
scas
pop
scas
push
pushf
push
mov
loope
pop
aam
jo
push
cmp
fwait
out
movsl
xchg
rorb
push
adcb
mov
push
nop
xor
mov
int
jle
inc
pop
fildll
aam
testl
jno
ss
or
pop
sub
das
arpl
ret
jg
xor
mov
ret
ja
xor
dec
xchg
push
movsb
sbb
fdivs
fdiv
sbb
jb
ror
xor
add
mov
test
push
xor
arpl
repnz
stc
lock
stos
fs
mov
xor
out
mov
cmp
stos
inc
sbb
fwait
push
pop
cli
outsl
mov
xor
clc
push
or
jle
into
into
loopne
cmc
lret
loopne
aam
pop
jl
jb
lock
and
leave
mov
add
leave
data16
mov
lods
std
push
or
jne
repz
popf
stc
subb
shll
in
ljmp
out
inc
gs
push
lods
dec
loopne
movb
ret
fxch
lds
fadd
pop
xchg
xchg
fisubrs
sbb
shl
iret
and
adc
es
fwait
xor
jmp
xchg
ljmp
xchg
aas
dec
mov
inc
dec
xor
sbb
jecxz
jb
movb
cwtl
les
stc
mov
jae
dec
and
fstpt
cwtl
inc
xchg
ret
push
inc
cmp
das
mov
mov
and
jp
mov
sti
dec
negb
imul
mov
sahf
out
icebp
shlb
cld
js
push
lret
inc
inc
push
mov
jp
mov
xor
xor
out
and
mov
sub
inc
push
aam
push
loop
std
push
fldt
cmpsl
cmp
int
das
ljmp
dec
lods
movsl
adc
mov
or
sets
icebp
add
lock
imul
fstl
loope
adc
test
dec
add
shll
mov
sbb
xchg
add
out
stos
xchg
add
push
lock
decl
lock
xor
insl
and
xor
cmpsl
mov
movsl
js
dec
jl
push
pop
push
adc
ja
mov
imul
xchg
mov
jl
popl
jnp
out
mov
cli
out
cld
jns
push
push
in
cmp
mov
fmul
mov
sub
aaa
sbb
jp
sbb
mov
mov
lahf
mov
inc
aas
dec
inc
push
stos
jne
mov
push
fisttps
sbb
jmp
xlat
xor
add
pop
out
mov
sub
xchg
mov
and
push
enter
and
jnp
mov
jle
loop
in
mov
adc
repz
iret
jne
ret
cmp
ds
jae
cltd
cwtl
push
shrb
popf
inc
adc
push
jecxz
jmp
xchg
test
xchg
into
imul
scas
movsb
aam
push
aad
jbe
and
pop
xchg
xor
pop
mov
leave
jo
popf
hlt
cmp
dec
arpl
fwait
orb
sahf
shlb
or
roll
and
xchg
adc
pop
mov
inc
sub
in
repnz
xor
jmp
lds
lcall
push
push
dec
sbb
stos
jbe
mov
enter
daa
mov
mov
aas
outsl
dec
stc
inc
or
fldcw
xor
cmpb
xor
push
scas
sub
ret
push
ljmp
cmpsb
out
cmp
in
or
lahf
pop
in
adcl
repz
inc
loope
jp
sub
iret
cltd
cmp
cmpl
mov
in
movl
sbb
or
add
fists
nop
je
pop
imul
dec
add
mov
xchg
pop
mul
fdivrl
sbb
in
rep
fnsave
adc
jecxz
pop
insb
xor
shlb
mov
mov
movsb
push
cmpsl
mov
int
pop
sbb
je
neg
rolb
or
mov
popf
ficompl
orb
test
or
xor
xchg
out
das
sub
stc
cmpsl
pop
pop
fs
xor
lret
mov
mov
icebp
xor
mov
or
les
loopne
test
fcoml
ret
mov
imul
sub
data16
sbb
cmp
pop
adc
lock
mov
in
push
fcmovnu
sti
lods
decb
mov
ret
xchg
lret
push
sub
mov
call
repz
xchg
mov
push
outsl
call
mov
xlat
lret
adc
sbb
ljmp
aad
test
mov
out
push
test
xor
je
int3
jecxz
push
xchg
mov
mov
adc
cmpsb
push
mov
or
add
jmp
cmp
inc
sbb
lock
pop
mov
xchg
lret
mov
ret
pop
clc
and
cld
lds
push
std
popa
xor
dec
inc
aaa
shlb
setns
cmpsl
dec
xchg
mov
xor
mov
fildl
mov
inc
fdivrl
rclb
fisubrs
jecxz
push
aam
pusha
fcmovb
mov
es
lret
adc
mov
sub
adc
adc
xchg
mov
repnz
and
adc
in
mull
outsb
cltd
je
or
subb
pop
lock
shrb
loop
sbb
xor
rorl
inc
sub
out
push
shll
xchg
and
ret
mov
scas
test
or
mov
mov
test
lods
dec
jecxz
mov
ja
imul
inc
mov
sti
or
lahf
mov
push
pop
fcompl
fwait
bnd
aam
out
push
test
jns
fistpll
or
jns
mov
mov
and
xor
pop
push
jp
inc
out
mov
xchg
mov
mov
dec
and
xorl
stc
pusha
push
sti
fildll
xchg
daa
xchg
lods
int3
xchg
add
xchg
mov
mov
out
fcmovb
sub
int
loope
jl
push
stos
test
jle
insb
or
push
jnp
fimuls
sbb
in
jp
adc
cmp
out
mov
ret
mov
lods
movl
pop
push
cmpl
push
ds
bound
fimull
sti
xchg
add
data16
lock
scas
pop
adc
rclb
adc
scas
shr
out
shl
add
arpl
sbbl
pop
pusha
ficomps
xchg
mov
frstor
add
fsubp
pop
imul
js
jo
xor
scas
sbb
and
sbb
push
and
jb
imul
in
cmpb
ss
daa
mov
sbb
jno
cmpb
push
xchg
insb
dec
and
lcall
pop
mov
mov
sbb
cmpsb
jno
dec
in
icebp
add
cmp
or
sub
fldcw
lods
scas
loope
stc
ja
inc
lods
out
adc
test
mov
rolb
nop
xchg
or
cmpb
fwait
add
rcll
call
cmpsb
pop
xchg
gs
sub
test
lcall
sub
es
or
scas
push
adc
clc
andl
mov
loop
ss
and
mov
push
stos
ret
ror
sbb
push
negl
cltd
je
std
mov
sbb
jb
test
xor
subb
jnp
ret
stc
pop
arpl
adc
aas
cmp
mov
jae
cli
aad
sub
cmp
rorb
movsb
inc
jle
xchg
pushf
and
pop
pushf
push
pop
mov
icebp
xor
jle
adc
mov
mov
lods
lret
out
cmp
mov
jecxz
arpl
cs
shrb
sub
pop
gs
adcl
popf
aad
fnstcw
ficoms
shlb
ja
cld
xor
and
jmp
adc
or
pop
cs
adc
cmpsb
push
aas
xchg
pop
dec
and
loope
sub
shl
push
jle
mov
jg
adc
pop
mov
xchg
imul
call
fistpl
mov
pop
cmp
dec
inc
mov
lea
das
jb
push
mov
lods
mov
rcll
outsb
mulb
jmp
or
mov
cmpsl
mov
inc
and
cld
into
push
lret
pop
jmp
push
mov
mov
mov
bound
ds
lret
cltd
aam
lsl
sbb
test
push
adc
ljmp
mov
mov
adc
clc
sbb
orps
ret
cltd
stos
jmp
fidivs
mov
scas
frstor
fidivs
sbb
rcll
cld
shl
jne
repz
jno
test
xchg
decl
shlb
int
out
and
xor
iret
mull
stos
xchg
mov
xchg
xchg
pop
leave
jp
ja
pushf
dec
jbe
test
or
xor
push
ret
add
xor
lods
out
dec
dec
popf
bound
jae
cmp
in
xchg
fcoml
adc
ljmp
or
add
jp
push
xchg
mov
xchg
insl
mov
fcmovne
jmp
jne
outsb
ret
pusha
icebp
insl
push
fisttps
lahf
xchg
jg
mov
divl
movsb
xchg
insl
push
sbb
sub
or
mov
mov
in
lea
test
insb
jbe
imul
mov
in
mov
iret
dec
mov
es
mov
pop
mov
pop
jae
xor
inc
inc
stos
popf
je
push
loope
push
out
adc
inc
and
push
sarl
popf
push
xor
lods
add
mov
add
popf
leave
pop
pop
icebp
hlt
into
xor
inc
or
sbb
sbb
mov
jp
add
jb
jmp
scas
pop
mov
xor
mov
push
jo
outsl
mov
and
push
push
movsb
std
mov
cwtl
jbe
mov
enter
daa
mov
and
push
pop
jl
ret
test
xlat
lods
jl
lahf
inc
xor
mov
fldenv
test
addb
cmpsb
hlt
mov
in
fadds
js
sub
pop
imul
push
mov
loope
pushf
pop
sub
pop
jmp
shrb
pushf
and
rorb
lret
rcll
inc
test
push
enter
inc
xchg
sub
mov
mov
dec
notb
sub
cmp
insl
pop
in
outsb
mov
adc
adcb
xor
out
mov
add
fidivs
shlb
push
lods
inc
popf
int
dec
fsubs
sub
rcll
sbb
lret
cmp
test
ret
pop
jb
outsl
mov
jg
stc
adc
mov
push
cmp
pushf
pop
outsl
out
leave
jge
or
add
cmp
lahf
mov
into
ja
sbb
pop
fsts
loopne
mov
pop
fnstenv
mov
adc
sub
xor
lods
mov
inc
cmp
stc
fcmovnbe
pop
loopne
sub
sahf
cwtl
mov
sub
or
push
decb
arpl
cmp
fwait
dec
std
mov
fnstenv
stc
imul
xchg
daa
sarl
call
mov
sti
rcll
pop
xchg
jmp
and
rclb
inc
mov
xor
sub
dec
lcall
jecxz
push
sarl
cwtl
cmc
lcall
mov
sbbl
lea
pop
fdivl
inc
daa
into
nop
lock
insb
das
push
sbb
mov
arpl
and
push
mov
arpl
movsb
mulb
stos
std
scas
jno
dec
cmp
push
cmpsl
mov
test
xchg
cld
stc
call
xlat
mov
pop
fsubl
sbbl
sub
test
ret
stos
cli
frstor
mov
ds
int3
lahf
addr16
adc
mov
ljmp
push
lods
out
dec
mov
cmp
insl
and
leave
call
fs
je
cltd
loop
jp
jno
xor
and
out
cmpb
sbb
sarl
xchg
sahf
pop
cmpsl
adc
stos
sub
aam
sbb
add
sub
xor
mov
cwtl
push
push
xor
cmp
mov
scas
shll
mov
dec
pop
test
pop
dec
imul
jge
cmp
and
push
movsl
inc
add
mov
out
sub
bound
dec
in
cmp
adc
jns
push
or
hlt
add
jp
scas
imul
dec
mov
dec
jmp
fnsave
mov
add
push
scas
in
out
aad
xchg
cmp
into
subl
out
jge
sub
inc
mov
cli
and
stos
mov
test
loope
jnp
arpl
in
popa
push
ds
xor
iret
lods
dec
xlat
ret
loope
nop
jb
inc
out
adc
jecxz
push
or
popf
mov
mov
aaa
adc
adc
mov
mov
sbb
daa
int3
imul
scas
int
rclb
xlat
rol
daa
mov
push
outsl
inc
leave
aad
pushf
hlt
sbb
add
or
or
push
or
aaa
dec
addr16
xchg
add
mov
inc
pop
loope
out
fisubrs
inc
mov
scas
inc
jge,pn
movsb
jge
cmp
cmp
mov
mov
or
or
enter
daa
mov
fidivs
jno
mov
jl
ret
jne
inc
pop
pop
push
sbbb
xor
push
and
lahf
nop
sbb
push
daa
fstps
dec
add
dec
mov
inc
jb
mov
mov
adc
stos
adc
push
ja
loope
arpl
cmp
stos
ds
movsl
mov
gs
in
test
fdivp
adc
jle
out
add
andl
fstps
push
pop
and
lcall
fs
sbb
jl
cli
sub
outsb
push
std
adc
cs
jg
sub
mov
sbb
push
shll
mov
push
jge
or
jno
mov
xchg
int
ret
fsubs
dec
negl
and
lret
outsl
shrl
dec
mov
adc
test
xor
mov
js
stc
int3
fs
mov
in
adc
das
lret
ss
push
dec
cmp
xchg
vmovntdq
stc
cmpsb
xor
pop
mov
mov
adc
into
pop
sub
cmc
out
in
pop
lahf
bound
mov
adc
xor
int
sahf
jmp
add
push
cmp
cmp
jbe
cltd
mov
sub
mov
in
xchg
into
lahf
sti
mov
push
out
nop
or
out
pop
inc
ret
mov
out
les
gs
mov
sbb
mov
lds
fwait
out
adc
dec
pushf
inc
cli
sahf
jmp
loop
jg
pusha
aad
gs
aad
ret
aas
les
dec
adc
jno
outsl
lcall
fidivs
jmp
mov
inc
cmpsl
mov
push
xorl
jecxz
pop
jg
std
inc
scas
cltd
shl
mov
add
xor
frstor
sbb
xor
jl
shll
dec
jbe
push
out
dec
ss
cmpsl
mov
ret
mov
sbb
and
aad
std
popf
imul
mov
pop
lods
rclb
jecxz
aam
imul
insl
mov
sub
dec
and
xchg
leave
dec
cmc
ljmp
jns
push
mov
mov
daa
les
out
unpcklps
lds
call
cmpsb
scas
test
add
jp
cmp
jl
repz
test
xor
xchg
in
pop
ljmp
rorl
aaa
adc
push
mov
das
xchg
stc
ljmp
out
lods
xor
popa
or
or
mov
mov
mov
sbb
pop
aas
xor
ja
nop
repnz
pop
and
ja
rorl
shr
and
les
or
mov
mov
mov
sbb
jmp
inc
in
cmp
xchg
mov
fwait
and
xchg
or
mov
mov
mov
mov
orl
daa
mov
xchg
and
sbb
xchg
add
cmp
fsub
stc
cld
adc
jle
aad
cmp
adc
and
mov
add
in
and
iret
or
inc
pop
lret
outsb
inc
or
jae
fmuls
push
int3
sub
inc
push
fistpll
fisubl
ss
add
add
imul
jns
xor
push
sub
mov
add
leave
dec
outsl
xor
mov
imull
mov
sbb
or
push
push
shlb
or
push
or
cwtl
add
fcmovne
rcrl
shlb
mov
pop
sub
scas
pop
frstor
aaa
fidivrs
movsb
adc
mov
jbe
addr16
jge
mov
enter
daa
mov
dec
cmp
push
jl
xchg
dec
dec
mov
pop
push
gs
out
andb
and
test
push
xor
inc
add
cmpsb
cli
neg
in
cmpsb
jge
js
adc
pop
jmp
ljmp
xchg
pop
ds
flds
xchg
outsb
rorb
pop
xchg
sbb
pop
xchg
xor
xor
pushf
jmp
pop
pop
mov
out
pop
lahf
je
lcall
stos
fsubl
sbb
dec
xor
outsb
imul
fildl
mov
ss
lret
mov
ds
and
roll
push
mov
fmul
dec
insl
mov
sbb
jne
fcomps
adc
ret
mov
add
repz
xor
cmp
jnp
mov
fs
mov
out
cmp
arpl
out
add
cli
outsb
xchg
inc
xor
jo
cmp
fisttpll
icebp
mov
mov
loopne
ret
rcrb
data16
loopne
imul
add
add
in
cmp
lods
orb
sub
sub
jl
add
push
xchg
xor
int3
pop
jge
call
aas
xchg
inc
push
dec
mov
les
jl
repz
sub
sti
sbb
cmp
add
and
pop
mov
mov
jmp
cmc
inc
loop,pn
mov
inc
lock
les
arpl
rorl
cmp
or
imul
xchg
in
loop
inc
push
adc
call
mov
orl
pop
xchg
rolb
leave
xlat
lock
nop
mov
roll
stc
and
cli
leave
roll
adc
jnp
std
rorl
fwait
xor
mov
add
dec
xchg
mov
insb
sahf
aas
mov
mov
cmp
cmpsb
pop
mov
pop
dec
sub
adc
enter
mov
mov
test
clc
inc
jg
jecxz
push
lods
mov
adcb
inc
mov
psrlq
add
inc
addr16
push
cli
int3
test
stc
mov
lea
fstpl
lret
js
xchg
xchg
or
sbb
ljmp
pop
std
das
call
out
lcall
add
les
xor
bound
xchg
pop
mov
mov
add
pop
cli
outsb
push
ja
push
push
dec
dec
add
inc
push
push
int3
or
pop
negb
stos
ds
add
inc
xor
out
out
jg
lds
xchg
in
mov
xchg
mov
test
or
adc
sub
mov
outsb
mov
imul
cli
jno
mov
aad
dec
scas
xor
pusha
ret
fbld
pop
push
jmp
into
sub
push
xchg
out
lock
sub
mov
sbb
and
mov
xchg
fdiv
jle
mov
in
jbe
adc
push
mov
pop
dec
out
inc
adc
adc
push
push
stos
popf
add
fldt
jg
inc
pop
in
inc
ficoml
fsubl
sbb
scas
subb
stos
scas
xchg
mov
push
jb
ds
xchg
mov
cli
in
dec
leave
ret
out
and
arpl
inc
sbb
popf
jno
stc
pop
negl
leave
xor
aaa
enter
insb
push
scas
add
xlat
int3
lods
out
jecxz
aas
inc
pmaxub
lods
lds
jo
mov
pop
and
jb
cmp
cmp
push
test
jns
jge
sbb
cs
dec
daa
mov
pusha
cmp
clc
jno
jnp
jl
aas
loopne
and
outsl
push
dec
jnp
xor
mov
data16
into
scas
pop
push
int
jns
cmp
push
loope
cmp
out
cmpsb
jge
pop
in
lea
js
out
pop
sub
or
out
pop
popf
sub
push
cmp
and
adc
mov
push
insb
mov
mov
test
add
xchg
add
pop
stos
ficompl
sub
pop
push
xchg
lcall
loopne
sarb
sub
insb
test
adc
fs
jg
mov
sahf
mov
mov
and
mov
xchg
int
cli
test
xlat
inc
dec
notl
pop
or
pop
add
sbb
inc
sahf
jl
push
test
pushl
jo
subl
or
mov
shrl
cmp
std
or
cli
mov
out
mov
or
dec
into
and
loopne
cld
scas
pop
ss
loop
mov
adc
imul
mov
ss
xlat
and
xlat
pop
imul
push
iret
mov
sti
sbb
repnz
xor
sbb
fstps
add
jno
push
mov
xchg
jo
pop
sbb
mov
inc
sbb
negb
pushf
popf
push
data16
and
cs
int3
push
inc
or
mov
add
test
dec
decl
mov
xchg
sub
lea
dec
mov
push
sub
sbb
dec
fcomp
pop
pop
pop
lds
xor
lock
push
das
out
sub
mov
mov
stos
and
lret
push
sbb
divb
insl
ljmp
out
cmpsl
mov
in
push
or
icebp
fiaddl
cmpsb
lret
mov
or
mov
popa
jg
adc
cli
shlb
clc
out
sub
adc
push
lock
aas
cmp
insl
sbbl
ljmp
shrd
popf
mov
mov
and
push
pop
and
psrld
imul
mov
mov
fldl
pop
test
xchg
lahf
sbb
sarl
cld
and
xor
pop
out
std
pop
adcl
leave
test
xor
arpl
xor
jl
mov
mov
adc
out
cmp
cmp
mov
inc
movsl
ja
or
push
hlt
fwait
sbbb
add
popf
mov
in
bound
jo
push
inc
lods
in
xor
jne
and
das
or
dec
mov
adc
xchg
std
mov
sti
inc
mov
xchg
or
xchg
rcrl
pusha
pop
add
xchg
lret
xchg
jmp
cltd
mov
pop
out
push
mov
mov
mov
lcall
sub
insb
and
in
jo
mov
in
das
cmp
xor
jg
leave
aas
pop
ret
jns
xor
xchg
jae
nop
fsts
push
out
popf
sub
mov
jb
ret
inc
frstor
cmp
leave
cmp
js
repz
scas
testb
rcrb
popa
mov
dec
sti
add
cmp
in
cli
xor
arpl
xchg
mov
test
pop
or
addb
sahf
inc
int3
xchg
xchg
dec
pop
outsb
sub
push
scas
sub
jmp
jo
xor
fldl
and
dec
cmp
and
or
xor
jbe
fdivrs
das
and
sub
xor
mov
or
jno
adc
jl
mov
sub
sub
loop
and
lahf
in
std
xchg
pop
fsubrs
lods
xor
cmpsb
add
in
je
mov
pop
addr16
mov
loope
xchg
push
sub
insb
aam
jl
inc
ds
fsubl
inc
mov
jne
pop
in
and
add
pop
push
mov
xor
pop
push
xchg
mov
pop
popf
sbb
push
imul
sub
imul
das
sbb
sub
adc
push
xor
mov
adc
and
in
push
mov
insb
xor
xchg
pop
test
push
daa
hlt
lret
mov
lock
mov
add
sahf
pop
jb
test
in
xor
inc
sbb
movsl
mov
stc
icebp
xor
fs
xlat
adc
add
cmp
mov
out
dec
jle
aam
sub
pushf
nop
or
insb
jle
iret
push
addr16
add
jbe
cmp
pop
push
fidivrl
imul
sub
inc
pop
lret
add
cmp
scas
into
xlat
push
mov
xor
xlat
xor
insb
jp
sahf
stos
int
jns
push
inc
cld
pop
arpl
push
clc
les
sub
xchg
xor
sbb
das
fcomi
pushf
lea
pop
and
rcrb
add
test
xchg
aad
movsb
incb
ljmp
ja
vfrczpd
je
rcrb
jecxz
ret
cltd
fldenv
loope
xchg
mov
lods
mov
xorl
nop
fildl
test
inc
push
in
lock
mov
aas
cs
rcrl
sub
std
dec
pushf
add
mov
push
mov
mov
movsl
mov
dec
jmp
mov
xor
pop
std
xchg
sub
gs
out
add
ret
insl
push
js
xchg
xchg
ljmp
and
ss
les
mov
cmp
xor
pop
inc
rdtsc
xorl
mov
lcall
test
sub
outsb
or
fcompl
xor
push
pop
push
popf
jp
and
out
pusha
push
and
or
push
jl
insb
xchg
jl
je
jmp
mov
mov
lcall
mov
leave
dec
xor
shll
push
xchg
fwait
mov
xor
icebp
cmpsl
imul
pop
mov
movsb
ret
jmp
dec
jns
sar
in
das
mov
push
jle
mov
pop
cld
mov
push
mov
adc
or
bnd
pop
scas
push
mov
push
add
dec
jne
xchg
xor
clc
neg
in
xchg
sahf
loope
jmp
cmpsl
jnp
stos
mov
sbb
das
imul
pop
adc
insb
loopne
jnp
hlt
jle
sbb
adc
mov
sub
movsl
pop
insb
scas
incl
mov
push
adc
jnp
push
pop
fidivl
xchg
or
add
xchg
pop
jg
push
add
jge
jo
and
mov
hlt
inc
push
ret
cmp
inc
sbb
jbe
and
aas
mov
aaa
inc
repnz
push
add
mov
adcb
pop
popf
iret
mov
lds
shll
and
aaa
pop
cmp
subl
testl
and
frstor
mov
inc
cmp
hlt
jno
shl
jl
or
dec
add
xchg
push
lods
adc
mov
push
bound
inc
xchg
test
ja
cmp
lock
cmpsb
add
in
pop
cld
add
sahf
inc
push
pop
cmpsb
pusha
fisubrs
jge
loope
call
mov
sub
pop
movsl
mov
add
subb
adc
pop
sbb
mov
jno
pop
in
out
jl
inc
sub
mov
shrb
sub
rep
xchg
or
adc
lcall
mov
test
mov
testl
mov
rcrl
adc
icebp
rol
xchg
adc
xlat
dec
sahf
ret
test
out
outsw
adc
xlat
loop
addr16
stc
test
test
mov
push
adc
jmp
cmp
addl
cli
pop
cmpsb
fnstenv
jae
lahf
cmp
icebp
push
into
out
sbb
add
or
lds
scas
adc
add
adc
cmp
les
cmp
arpl
xchg
pop
repnz
jmp
in
inc
add
sti
jbe
cmp
decb
loope
leave
nop
jns
jo
fmuls
inc
rsm
in
xchg
cli
rep
or
xchg
mulb
add
stos
mov
pop
and
mov
addr16
repz
jmp
lds
or
sbb
int
aas
inc
out
sub
xor
dec
in
sbb
stos
add
pushf
std
or
pushf
imul
and
dec
xchg
orl
insb
mov
inc
lret
lock
icebp
das
lods
mov
aas
mov
cli
push
shr
in
mov
mov
enter
inc
dec
and
popa
cmpsl
mov
dec
mov
mov
idiv
rolb
lret
mov
xor
aam
in
or
inc
pop
sbb
sub
sub
outsb
ret
jne
xchg
es
lods
inc
insl
dec
push
xor
cmp
ljmp
cli
lods
std
fisttpl
mov
out
adc
sbb
xor
setns
into
clc
test
push
mov
inc
push
popf
fisttpll
rorb
xchg
cwtl
sbb
cmp
shr
imul
stos
ud1
out
ret
ds
xchg
adc
add
pop
sub
orl
push
dec
jmp
mov
loope
pop
sub
cmp
call
ljmp
dec
lcall
scas
cmpsl
mov
or
out
addl
jns
push
out
in
jle
xchg
mov
scas
dec
mov
add
adc
mov
mov
xchg
mov
jne
jecxz
pop
rep
jne
loop
pusha
xchg
shll
jno
and
shll
cmpl
push
out
cmpl
les
aam
push
xor
data16
push
imul
jle
cmp
in
int
adc
popa
xor
xchg
test
cwtl
add
outsb
inc
ss
jae
pop
popa
push
fdivs
popf
jns
or
ret
pop
inc
fistl
mov
das
sbb
and
mov
imul
shrb
inc
xchg
xor
dec
cwtd
mov
repz
leave
sub
hlt
nop
sub
arpl
sbb
inc
push
cs
or
cli
dec
pop
aaa
add
jl
add
out
int3
insl
pusha
mov
int3
cmp
ficomps
lds
mov
scas
fwait
rcl
subl
push
cmp
mov
dec
jbe,pt
lea
cmp
enter
daa
mov
repnz
pop
shll
dec
jl
xor
dec
jno
imul
mov
xor
pop
insb
lahf
sub
out
pop
pop
cmp
pusha
inc
cmp
icebp
mov
inc
cltd
int3
js
aad
pop
in
fsubrl
rol
xor
sub
jmp
cmp
sbb
jns
mov
gs
sar
pop
popf
mov
add
add
pop
int
sub
lcall
pop
mov
daa
dec
xor
fwait
rolb
push
pop
xor
sub
mov
outsb
cmc
out
lods
adc
mov
mov
mov
pop
decl
inc
xor
push
mov
cli
dec
fmuls
dec
xlat
not
mov
loope
push
xchg
cltd
mov
popf
sbb
repnz
gs
test
dec
das
xor
and
loop
fs
pop
sahf
mov
adc
ret
inc
ss
inc
sarl
jle
test
xchg
mov
inc
xor
fdivrs
dec
lret
mov
cmc
leave
jns
loopne
push
les
push
rcll
dec
in
mov
mov
push
inc
mov
lods
sbb
xor
mov
in
mov
sbb
lods
sahf
jecxz
and
call
lea
aaa
test
cmc
fnstcw
nop
and
xchg
mov
mov
lcall
adc
xchg
stc
jmp
cmp
sbb
inc
pop
les
filds
xchg
dec
fs
jmp
jecxz
xchg
lahf
xchg
add
loope
add
in
test
ds
sub
dec
arpl
push
pop
scas
inc
test
push
outsl
dec
lock
ret
popa
pop
mov
lods
jmp
or
cmp
push
xchg
std
cltd
mov
cmpsl
mov
mov
cmpsl
mov
adc
sti
ror
lret
sub
mov
xor
mov
add
cmp
inc
sub
pop
sub
add
mov
enter
ss
and
jbe
test
ljmp
pop
lods
push
sti
fs
dec
sbb
jmp
into
pxor
add
adc
push
not
mov
fldenv
push
or
mov
pop
test
sub
xchg
jb
sbb
add
pop
test
and
es
aas
xchg
pop
and
add
xor
cmpsb
push
dec
xor
pushf
push
or
stc
xor
mov
mov
rol
dec
sbb
stos
ja
ja
dec
sbb
or
fiadds
push
aaa
loope
add
scas
iret
popa
out
bound
bound
xlat
mov
in
and
mov
jb
mov
cld
iret
shlb
push
jp
int
mov
and
cmpsb
xchg
mov
inc
pop
dec
cmp
jne
test
call
xchg
inc
xor
mov
jb
or
in
mov
sub
movsl
rcll
push
je
sub
and
sbb
xchg
push
push
jmp
push
adc
dec
mov
ret
adc
and
inc
jae
mov
add
mov
add
lcall
hlt
lods
imul
inc
ficoml
or
shrb
mov
inc
pop
inc
leave
lahf
push
inc
hlt
ljmp
xchg
push
sbb
dec
pop
or
popf
cmp
jo
jnp
pop
sbbl
decl
xchg
adc
jo
push
shrb
int
cmp
aas
push
movsb
lret
push
in
push
jbe
inc
jmp
insl
xchg
call
daa
mov
or
inc
or
xchg
sub
dec
loopne
int3
push
aam
dec
xor
cmc
mov
push
sbb
push
or
or
mov
cmpb
and
and
movsb
push
mov
loope
add
cmp
in
shlb
or
push
mov
adcb
sbb
loop
add
mov
add
pop
lret
sub
hlt
fstpl
outsb
fcmovu
fdivrl
subb
jmp
outsb
pop
leave
notl
rolb
movsl
mov
mov
fdivs
adc
ret
int
sbb
notl
pop
sbb
mov
cmp
sarb
sahf
or
test
jns
outsl
shl
nop
loop
xchg
cmp
push
leave
cltd
fs
inc
adc
inc
or
mov
cmp
jns
xchg
xchg
xor
insl
xor
xor
dec
and
ja
or
aad
nop
jb
loopne
cmpsb
xlat
pop
mov
loopne
cs
imul
xchg
lretw
lods
add
test
ret
loope
adc
sti
sbb
mov
loope
sbb
sub
incb
gs
sub
nop
das
inc
mov
inc
xor
test
xor
mov
test
mov
mov
pop
cmp
jns
fs
dec
cld
mov
push
jns
shrl
aad
push
xor
jle
push
jb
orl
fstpt
add
dec
jecxz
dec
or
mov
pop
sbbb
mov
stos
cmpl
test
xchg
enter
xchg
xor
xchg
mov
rolb
adc
mov
fs
push
rorl
nop
std
inc
push
cmp
fidivrl
mov
ss
pushf
cld
es
lret
xchg
sbb
mov
daa
add
inc
aam
pop
pop
adc
rolb
mov
repnz
xchg
ret
xchg
lcall
sbb
add
ljmp
mov
mov
sub
mov
push
movb
pop
push
and
sub
jae
ficoms
push
int
lock
pusha
test
sbb
xchg
dec
sbb
jne
cltd
mov
lock
in
dec
jecxz
mov
sbb
mov
cli
incl
push
gs
daa
or
mov
mov
insl
xrelease
sbbb
mov
lret
push
add
inc
add
or
pusha
xor
addb
test
fwait
bound
mov
xchg
pop
xchg
sub
cmp
push
adc
xchg
mov
mov
cld
mov
mov
jecxz
jne
aam
pusha
leave
rolb
inc
xchg
xchg
pop
sub
scas
cmp
xchg
lds
adcl
out
jle
sub
loopne
cwtl
push
mov
cmp
cmp
xchg
insb
into
jns
jnp
push
jle
pop
test
adc
roll
jne
pop
adc
inc
dec
xchg
jbe
mov
and
pop
lret
xchg
ret
push
fstps
ficoml
jno
sbb
jg
imul
outsl
scas
adcb
aad
aad
test
dec
adc
repnz
cmp
leave
push
or
arpl
ja
and
repnz
jo
xchg
aaa
add
or
jb
add
roll
inc
jp
pop
sub
fisubs
ljmp
pop
dec
frstor
test
in
movsb
push
ljmp
pop
fwait
mov
shr
enter
daa
mov
jle
je
in
and
mov
dec
dec
lock
push
mov
aaa
xor
nop
bound
imul
test
fcomps
inc
pop
cld
inc
cmpsb
or
addr16
adc
js
scas
into
pop
arpl
and
arpl
sub
mov
popf
ds
inc
mov
mov
mov
arpl
in
sbb
mov
cmp
cs
sub
sub
cltd
xchg
lcall
rcr
sub
push
sub
push
shrl
xchg
hlt
adc
jmp
mov
mov
test
mov
les
jne
adc
lds
pop
fdivrs
jmp
push
retw
lret
cwtl
rorl
push
xchg
movsb
sbb
sbb
test
pop
je
mov
adc
in
sti
and
int
mov
adc
daa
ss
mov
cmp
je
jmp
cli
mov
jg
cmp
js
or
pop
push
cmc
push
iret
xchg
loopne
inc
in
pop
roll
adc
cmp
imul
fcmovnu
dec
and
sarb
mov
push
sub
movsl
mov
adcl
cmpl
addr16
test
and
rorl
pop
inc
dec
rolb
les
mov
xchg
aas
sub
sbb
sbb
repnz
cwtl
xchg
pop
out
test
adc
aaa
push
jmp
jns
cs
loope
clc
jno
inc
xchg
out
sub
sbb
jp
dec
push
mov
mov
fcomps
movsl
and
lea
fcomps
bound
mov
cmp
cmp
fcmovnb
sbb
pop
hlt
sarl
inc
pop
sbb
sub
out
loop
jb
cs
fwait
iret
or
fldt
mov
jg
jecxz
out
aam
adc
adc
or
inc
add
push
push
lret
push
mov
mov
xor
fnsave
int3
rclb
mov
mov
aam
clc
pop
ret
and
pop
es
mov
in
in
add
xchg
or
ljmp
subl
jno
and
mov
adc
cltd
lcall
mov
push
lods
push
nop
arpl
fldl
mov
fdivrs
jbe
lock
xor
mov
in
mov
mov
jmp
lds
or
xor
jbe
mov
or
pop
pop
repz
ja
mov
jb
cwtl
dec
test
mov
fwait
insl
adc
add
fs
in
out
and
xor
jns
jl
in
bound
mov
mov
push
sbb
mov
and
repnz
adc
jp
ja
mov
out
mov
ret
dec
add
jne
arpl
pusha
fs
jge
pusha
xor
xchg
ljmp
xchg
nop
mov
and
test
mov
dec
sub
sbb
cli
stos
daa
mov
stc
insb
cmp
pop
jle
push
cmp
stc
test
adc
sbb
movsb
sub
ret
fistpl
sub
inc
push
loopw
addl
pop
popf
out
mov
sub
in
fimull
sub
dec
and
subl
sbb
rcrb
imul
lea
hlt
jno
call
inc
daa
sub
cmp
sub
xchg
or
sti
sub
sahf
jecxz
int3
cs
mov
fiadds
sbb
jo
and
scas
cmp
stos
cmp
mov
push
xor
jbe
fs
jge
hlt
mov
daa
mov
cmp
cmpsl
setle
sub
jl
xchg
and
push
push
lcall
and
dec
sbbb
out
test
mov
xor
cmpsb
cs
in
test
rcll
mov
ret
js
jg
je
jb
out
loop,pt
push
movsl
fcmovne
xor
mov
lret
faddl
inc
sbb
cmp
add
mov
clc
icebp
lods
pop
sbb
sub
pop
sbb
mov
sbb
paddusb
das
pop
sub
loope
outsb
push
pop
rcll
push
dec
add
fadd
mov
testl
test
mov
sbb
fdivrs
test
adc
pop
jecxz
mov
fmull
test
jp
nop
js
loop
xchg
add
test
xchg
push
adc
cltd
stos
cmp
outsl
test
add
cli
rcll
scas
cmp
dec
xchg
or
jmp
into
jb
jb
push
nop
sbb
xor
mov
lock
jge
imul
arpl
rorb
mov
cmp
mov
sub
je
or
out
jno
sti
xor
mov
mov
gs
test
nop
in
hlt
dec
push
loop
inc
pop
repnz
fldenv
xchg
les
repz
ds
andb
pop
sbb
pop
mov
fwait
test
cmp
dec
aad
filds
aas
mov
cmpsb
int3
dec
leave
call
xchg
jecxz
stos
popf
test
lea
xor
cwtl
mov
mov
stos
jp
pop
mov
lret
sbb
fcomi
xor
pop
xchg
or
inc
out
sbb
mov
add
sub
mov
es
test
sub
int3
test
sar
fwait
insl
dec
push
int3
mov
mov
in
mov
lret
jne
inc
mov
lahf
mov
cwtl
fdivrs
shrb
xlat
scas
sub
out
cmp
mov
push
es
ds
jmp
xchg
clc
daa
xchg
jg
shll
ljmp
int
test
popa
jbe
jae
push
and
jl
jp
or
jmp
cmp
cltd
shll
int3
test
jbe
mov
sbb
push
push
adc
outsb
test
mov
xchg
inc
sbb
lahf
lcall
hlt
lock
dec
je
xchg
xor
enter
incl
test
into
xor
fadds
mov
jno
leave
pop
add
push
out
pop
pop
cmp
dec
hlt
out
push
inc
das
dec
xor
loopne
fwait
pushf
fnstcw
fnstsw
push
xchg
push
out
lcall
jns
inc
add
test
aas
xchg
fidivrs
movsb
mov
in
mov
movlps
pop
into
mov
dec
popf
mov
xor
dec
in
shll
push
push
pusha
pushl
fistpll
sbb
jmp
pop
sbb
xorl
out
dec
je
inc
cmp
mov
xor
push
stos
lcall
insb
movsb
scas
and
adc
jle
dec
push
in
mov
test
add
mov
inc
bound
pushf
push
in
cltd
popf
adc
xor
sub
sti
dec
cmpsl
xchg
mov
sahf
sub
enter
xchg
fists
mov
mov
repnz
daa
leave
add
hlt
mov
dec
pop
inc
sub
ret
fdivrs
sbb
andb
adc
push
add
in
pop
mov
add
sarl
sub
scas
pop
in
and
xor
cmp
sbb
movsb
imul
shrb
push
jge
sti
mov
daa
scas
std
das
cmp
pop
add
jl
or
dec
sub
push
mov
dec
xchg
xchg
roll
outsb
or
jns
sti
cmpsb
adc
cwtl
in
fdivp
xchg
js
jecxz
loope
or
push
mov
mov
sub
fsubs
xchg
mov
ds
mov
shrb
jnp
cmp
orb
flds
mull
mov
repz
aas
int3
and
adc
pop
xchg
jo
lcall
add
jg
inc
sub
js
outsb
orl
mov
aas
into
mov
sbb
mov
push
mov
lret
push
adc
or
fdiv
adc
not
sbb
sarl
mov
in
sbb
aam
sub
xchg
xor
pop
cmpsb
outsl
outsl
dec
adc
adc
stc
cmp
jb
outsb
iret
adc
imul
cmp
push
sti
out
and
xor
divl
into
push
lret
insb
cmc
in
cmpsl
loopne
mov
jmp
cmpsl
test
cltd
mov
adc
jg
add
fs
cmp
xlat
sarb
shll
pop
pusha
adc
loope
push
lods
fdivrl
gs
hlt
nop
rclb
inc
outsb
inc
fstps
in
repz
loopne
sbb
adc
jp
xchg
sub
pop
push
fdivr
adc
sbb
dec
sub
push
lds
cs
test
aad
mov
inc
enter
pop
adc
jb
add
mov
jecxz
jbe,pt
stos
jge
lea
outsb
cwtl
inc
mov
mov
imul
add
dec
bt
pop
cmp
popl
push
sti
lock
stc
das
pop
lea
cwtl
cmpb
mov
sarl
pop
testb
jbe
or
insb
cmpsl
scas
pop
jnp
jae
mov
cld
cmpsl
push
adc
in
testl
adc
or
sti
fdivrl
aam
cmp
ret
inc
and
es
cs
rol
mov
xchg
add
mov
popa
fwait
sub
lods
adc
inc
mov
xchg
int
and
push
popa
add
imul
add
lods
out
test
pop
mov
fs
fstl
pop
test
pop
jg
sbb
sahf
outsl
pop
push
lds
out
mov
xor
scas
cmc
call
xor
jb
ds
aam
xchg
lea
xchg
and
mov
fistpl
adc
ja
fidivrs
inc
outsb
add
fwait
lret
data16
push
ret
ret
or
sbb
dec
bound
and
stos
in
repz
testb
mov
call
push
fs
repnz
mov
fidivrl
push
fldt
dec
lock
lods
pop
pusha
lcall
xchg
nop
inc
mov
xchg
es
push
addl
out
faddl
mov
jo
aas
stos
or
fsubrs
inc
jnp
lcall
pop
das
dec
adc
mov
iret
bound
ret
sbbb
push
inc
insl
or
push
cmpsl
mov
popf
cmp
jns
iret
ret
scas
inc
push
add
adc
add
in
popf
imul
or
rcl
and
sub
out
jnp
sbb
pop
fsubrs
arpl
popl
std
jns
xor
aas
aaa
sarb
or
xchg
int3
xchg
adc
add
push
pop
mov
or
mov
loopne
mov
daa
jo
inc
xchg
scas
divb
mov
movsb
testb
mov
jbe
push
fstpt
out
enter
daa
scas
push
dec
cmp
xor
jl
push
cmp
stos
in
pusha
and
sbb
xlat
and
xor
gs
repnz
push
cmp
inc
or
xchg
fwait
mov
lds
scas
pop
and
push
push
popf
psraw
cmpsb
xchg
cmp
pop
sub
rolb
lcall
sbb
xchg
xor
ja
fcomps
jae
sub
mov
aam
lret
fsubrl
popa
mov
outsb
in
notb
cmp
bnd
stos
fs
lahf
sbb
stc
push
mov
and
into
iret
push
ljmp
testl
lods
mov
idivb
test
jg
outsl
dec
sbb
loop
fs
repnz
fs
imul
push
cld
out
ss
rcll
xchg
fmull
lea
xor
les
je
or
and
cmp
outsl
cmc
lods
cmp
adc
mov
enter
loopne
mov
xor
mov
lods
lahf
xchg
repnz
jecxz
mov
mov
les
add
sarb
scas
or
nop
fwait
aam
dec
adc
movl
mov
les
test
xchg
fwait
xchg
mov
cmc
sbb
mov
or
adc
test
sar
pushf
cmc
loop
jmp
adc
pop
dec
aaa
aad
in
inc
jecxz
dec
aas
cli
mov
xchg
dec
mov
push
lods
pushf
and
pop
inc
scas
pop
fimuls
jns
mov
lods
sub
xchg
ja
dec
cli
pushl
dec
mov
pop
fstl
inc
hlt
or
das
out
fwait
mov
inc
hlt
shlb
cwtl
ror
lret
push
testb
std
fdivl
dec
add
aad
lods
inc
sub
xchg
lret
rolb
mov
mov
mov
scas
sbb
sub
or
push
ftst
ret
iret
test
es
fildll
insl
mov
jns
xchg
aas
xchg
sub
add
mov
jg
lahf
mov
mov
xor
push
xor
xchg
lret
add
jmp
mov
icebp
dec
push
fstsw
outsl
test
xchg
adc
adc
adc
pop
add
dec
stos
test
push
xchg
mov
xchg
pop
inc
andb
mov
or
xchg
sub
iret
pop
lds
inc
inc
pop
lea
adc
inc
pop
mov
or
mov
fwait
cli
mov
push
data16
xor
jne
shr
inc
stos
lock
in
cmp
xchg
jl
or
cmpsb
cmp
jecxz
mov
jp
cmp
loopne
jge
mov
inc
aad
stos
xor
nop
mov
in
fistpll
or
push
xchg
icebp
sub
jmp
sub
int3
outsl
call
stos
xorb
and
xor
jle
push
ret
in
or
std
daa
iret
roll
pop
in
cmpl
js
push
jae
push
dec
push
push
sub
dec
out
inc
aad
sub
popa
fwait
cmp
dec
push
cmpsl
imul
and
and
stos
mov
in
mov
repnz
mov
inc
xor
pop
sbb
aaa
jg
adc
test
mov
out
popf
jns
out
hlt
fisubrs
mov
mov
scas
aad
shlb
iret
lea
pushf
jecxz
movsb
andl
jbe
js
jge
mov
enter
daa
lods
ret
xchg
inc
pop
lahf
jno
jmp
jl
insl
dec
dec
or
push
inc
loope
xor
cld
mov
lahf
in
jle
cmp
test
add
mov
outsb
and
lods
cli
dec
js
dec
jecxz
pop
adcl
loope
cmp
sub
inc
mov
ds
rcll
movsl
lock
rcrb
adc
stc
pusha
in
subb
stos
add
pop
inc
xor
adc
cmp
inc
pop
out
sub
into
loop
xchg
push
nop
lcall
mov
sub
push
fwait
adc
push
jecxz
adc
jp
pop
pop
cwtl
mov
xorb
out
rol
lock
pop
cmp
push
pop
testl
and
test
inc
mov
mov
sbb
stos
pop
sahf
aaa
addr16
cmp
push
xor
hlt
inc
loop
lcall
test
movsb
ror
fildl
cmpsb
cmp
pusha
pop
cmp
mov
mov
insb
data16
push
scas
cli
cmp
lds
inc
pop
outsl
into
sbb
cmc
jae
mov
add
pop
dec
jmp
adc
les
adc
adc
out
add
xchg
repnz
jae
lods
xchg
out
xlat
dec
jecxz
sub
sbb
mov
das
mov
fdivr
repz
jbe
jbe
jno
and
xchg
mov
les
sbb
push
mov
xchg
dec
xor
sbb
pop
wbinvd
xchg
shll
pop
mov
loop
pushf
mov
and
shr
aad
jg
inc
xor
aas
cltd
outsl
push
jb
pusha
pop
dec
cs
icebp
jecxz
xor
mov
push
lea
je
mov
jae
mov
add
subl
xor
pop
andb
jnp
inc
lock
push
bound
lds
loop
mov
jnp
and
in
inc
rcll
xor
testb
xchg
dec
decl
mov
imul
push
xor
fidivl
dec
test
pop
cmc
lahf
push
mov
xor
adc
pop
sub
fidivrl
insl
mov
leave
dec
xchg
jle
and
jbe
sti
popa
leave
shlb
lods
ljmp
mov
je
movsl
push
or
add
subb
jmp
loop
frstor
imul
sbb
mov
rorl
pop
stos
jb
stos
cwtl
stos
sbb
js
pop
xchg
push
jne
add
dec
aaa
jmp
outsl
xor
mov
sub
lahf
xor
hlt
push
mov
rolb
jae
test
int3
pop
dec
xchg
sub
int
inc
inc
hlt
sbb
xor
or
add
rclb
cs
pushf
and
subl
in
aam
xchg
lret
fmuls
jl
mov
or
jnp
addr16
sbb
cmp
mov
pop
inc
mov
jle
jg
lea
jne
xchg
pusha
rcrb
in
xchg
or
jmp
mov
cmc
call
sub
pop
in
push
out
aas
jbe
repz
and
mov
jnp
icebp
cli
jle
aam
in
inc
int
in
mov
ret
xchg
jmp
jnp
mov
cwtl
fistps
lds
ficoml
mov
ret
sbb
add
imul
jno
dec
push
cmp
dec
rorb
mov
cmp
hlt
popf
push
xor
popf
jbe
jmp
dec
sbb
mov
into
or
roll
cli
aad
int3
fidivrl
push
roll
lds
mov
scas
mov
and
mov
sbb
sub
jge
outsl
enter
daa
lods
in
leave
cmp
xor
enter
pop
decb
cld
mov
xor
xchg
les
lahf
add
mov
test
iret
mov
mov
cmpsb
fmuls
in
xchg
rol
js
jmp
inc
push
dec
sub
mov
xlat
outsb
fisttpll
cli
testl
add
scas
sbb
pushf
pop
add
xchg
sub
roll
fwait
std
adc
pop
mov
fldt
test
pop
adc
or
js
insb
faddl
aad
outsb
stos
in
adc
jb
movq
inc
lcall
add
push
aam
ror
mov
aas
call
lret
fadd
aas
cmpb
inc
and
fisubrl
shlb
stc
out
outsl
or
loop
add
fs
in
adc
out
mov
push
mov
js
mov
ljmp
xchg
loop
mov
push
arpl
jle
cmc
cmp
loopne
jle
pop
insb
pop
sub
and
sbb
cltd
loop
push
imul
aas
lods
insl
push
inc
cmp
mov
sbb
lcall
push
mov
sbb
adcl
cmpsl
jp
fnstcw
pop
cltd
les
mov
imul
adc
outsb
out
sbb
outsb
in
mov
jmp
hlt
repz
aad
jl
inc
sbb
arpl
pop
jmp
movsl
divb
inc
sbbl
lea
leave
fdivs
jecxz
movb
xor
gs
and
inc
add
das
movsb
pop
adc
scas
cmpsl
push
and
pop
pop
shll
sub
into
dec
std
sub
mov
lahf
lea
or
xchg
icebp
inc
test
sub
lretw
xor
or
or
sbb
pop
adc
loopne
je
sub
pop
inc
aas
aam
adc
ret
in
adc
es
nop
push
insl
xchg
clc
adc
jns
jmp
fptan
lods
push
cmpsl
ljmp
jge
and
call
fstpt
add
mov
cltd
lods
loopne
test
ds
cmp
fs
ffree
jp
test
into
incb
jnp
mov
mov
xchg
xchg
out
fucomi
jo
dec
or
ljmp
xor
insb
or
movsl
jmp
sbb
xchg
dec
in
sub
pop
add
jge
shlb
inc
mov
test
lods
das
sbb
sub
out
jnp
mov
push
lods
cmp
cmp
jle
aam
ds
sbb
adc
mov
adc
or
js
mov
push
or
rorl
dec
jo
xor
or
imul
lcall
jns
lock
xchg
pop
out
dec
pop
sub
inc
out
out
sub
push
and
or
insb
push
or
inc
ret
lods
jle
xchg
and
mov
jnp
ret
and
repnz
inc
mov
mov
mov
popf
mov
aas
push
rorl
xor
mov
or
push
jg
test
mov
mov
hlt
call
mov
sbb
data16
sar
xorb
push
addr16
xor
xchg
lods
mov
lds
pop
fidivs
lds
jo
mov
inc
sahf
and
cmp
movsb
xchg
xchg
movsb
push
push
push
jne
lock
inc
jge
std
lods
enter
daa
stos
cltd
add
jno
leave
sbb
clc
dec
jmp
cmp
and
adc
lahf
and
in
fimuls
sbb
lcall
cmpsb
push
movsl
cli
in
jp
cmp
pop
fnsave
push
sub
loope
dec
mov
cmp
out
xchg
fcmovnbe
movsl
incb
rcl
lock
mov
sub
dec
dec
addb
fidivs
mov
sarb
fcmovnb
or
lcall
jl
push
xchg
imul
popa
outsl
sub
cli
outsb
or
jnp
orb
loop
add
mov
test
fstl
push
xlat
add
int
adc
loopne
mov
int3
mov
cmc
rcl
pop
mov
pop
jne
jge
pop
test
je
pop
push
xchg
outsl
jmp
xor
pop
mov
adc
lcall
ss
in
cmp
push
pop
sub
mov
cmp
cmp
jecxz
or
mov
xor
cmp
out
repz
imul
das
add
add
pop
push
stc
lods
push
or
int3
sbb
sub
or
in
add
xor
stos
and
nop
sub
cltd
dec
das
cmp
inc
mov
mov
les
add
xchg
shll
sbb
std
mov
pop
pop
and
fcompl
mov
aad
fisttpll
xor
adc
xlat
fmull
mov
orb
xchg
je
jno
jecxz
aaa
int
mov
lods
lea
push
ljmp
sbb
xor
mov
sub
pop
popa
test
jnp
lock
call
cmp
mov
gs
and
je
shll
xchg
std
rcr
lods
dec
cmc
inc
cmp
mov
pop
xchg
daa
cld
push
adc
mov
mov
mov
xor
mov
push
cmc
fcmovnbe
jg
mov
jl
test
insl
outsb
and
clc
dec
es
xchg
cld
pop
and
pop
shrl
push
imul
divb
push
ret
hlt
mov
add
daa
test
jbe
lahf
mov
das
jae
and
fucomp
aas
and
sar
dec
sbb
loopne
sar
lret
mov
stos
jbe
mov
ds
add
out
sar
sahf
arpl
or
popf
test
mov
fdivrs
or
ja
test
mov
dec
inc
and
or
push
pop
fwait
xchg
push
dec
out
add
xchg
loop
pop
loope
bound
mov
in
add
dec
mov
in
mov
aam
push
or
jp
push
icebp
mov
jno
mov
pop
fidivs
jne
out
cwtl
pusha
push
test
fistps
push
jns
fcompl
mov
lods
fs
mov
sub
jge
in
insb
cld
push
stos
fsts
insb
mov
pop
insl
jle
dec
cmc
in
jmp
adc
std
call
pop
xchg
lahf
and
jae
orb
fcoms
mov
imul
jp
call
sbb
imul
push
or
aaa
ja
push
mov
rolb
mov
fdivp
sub
push
loopne
hlt
xor
arpl
or
aaa
sbb
gs
hlt
mov
sub
mov
imul
std
jbe
scas
jb
shlb
scas
inc
dec
cmp
pop
test
bound
jge
js
enter
daa
stos
lret
frndint
aam
add
scas
jl
mov
mov
xor
int
adc
mov
imull
gs
mov
xor
js
fabs
pop
sbb
mov
sub
and
cmp
in
mov
movsl
add
std
mov
call
movsb
addl
pop
xor
dec
addl
pop
add
repnz
inc
pop
adc
sqrtps
xor
or
outsb
out
outsb
jo
adc
cmp
fnstcw
adcl
aad
mov
out
or
fiadds
push
ficoml
int
adc
fcomps
out
adc
sub
stos
shrl
mov
pop
lds
into
jl
xor
daa
loop
jb
stc
into
sub
outsl
adc
adc
out
or
out
mov
cli
add
int3
mov
mov
or
xchg
enter
sarl
sub
imul
add
outsl
je
cmp
pusha
xlat
or
jae
xchg
lea
in
jo
cli
sti
dec
sub
sub
repz
nop
pop
movsb
inc
dec
mov
add
mulb
les
mov
xchg
xchg
ds
sbb
js
xchg
adc
pop
adc
dec
jmp
call
insl
aad
mov
sarb
jbe
pushl
out
inc
dec
xchg
push
or
fnstenv
rol
mov
push
pop
cwtl
ljmp
mov
mov
outsb
dec
cmpsb
mov
fistps
dec
push
inc
adc
jbe
mov
sbb
lret
ss
add
shl
push
dec
sar
js
outsl
dec
lock
lret
out
int
cld
jle
cld
lret
movmskps
mov
push
mov
lcall
pop
push
mov
rcrb
push
pop
sub
mov
ret
or
insl
push
mov
clc
mov
mov
ljmp
add
sub
in
mov
inc
bound
mov
jo
sahf
or
cmovbe
mov
cltd
sbb
fdivl
in
dec
fstl
push
loop
push
add
push
cmpsl
aas
pop
lods
sub
stos
gs
inc
out
mov
arpl
ss
cmp
ds
or
add
mov
fcmovnb
lock
mov
push
adc
dec
cmpsb
xchg
jge
mov
inc
imul
xchg
aaa
cmpxchg
inc
mov
cmp
sbb
dec
fidivrl
push
test
ljmp
mov
mov
push
or
lahf
outsl
or
jp
jb
mov
mov
mov
lret
inc
sbb
ss
lods
cmp
mov
adc
xchg
scas
xor
xchg
sbb
insl
shl
mov
sub
mov
and
stos
dec
jae
and
sbb
insb
es
sub
outsb
repz
sub
jne
cmp
push
sbbl
push
jae
cs
push
jbe
in
pushl
add
ror
fisubrl
mov
pop
imul
scas
lcall
rcrb
inc
cltd
xor
jae
leave
into
mov
hlt
jle
lds
mov
inc
cmp
movsl
or
dec
sub
out
ret
imul
int3
fwait
add
fidivrs
cmpsb
push
jo
cmc
iret
scas
push
adc
and
jmp
js
mov
lods
push
mov
lods
mov
data16
xlat
iret
enter
daa
test
inc
inc
jno
ss
adc
mov
xor
xor
push
jmp
push
test
mov
xor
mov
and
sub
dec
mov
js
xor
push
bt
sbb
xor
adc
push
xlat
mov
movsl
or
adc
mov
dec
jne
test
sti
push
xchg
sbb
clc
xorl
je
inc
movsb
adc
adc
sub
mov
pop
xchg
push
push
lcall
out
faddl
push
sub
push
popa
adc
ret
std
jg
add
mov
mov
nop
lahf
and
mov
jnp
in
xor
fcoms
shl
dec
movsb
lcall
dec
fimull
push
cs
ret
inc
mov
xor
dec
dec
outsl
test
js
stc
test
inc
adc
fdiv
ss
aas
cmp
dec
inc
dec
out
dec
xchg
cli
cmp
test
mov
daa
cmp
push
pop
or
loopne
into
cmpsl
movb
outsb
clc
aaa
pop
leave
shl
adc
jg
adc
cmpsb
xchg
pop
mov
lods
and
fnstcw
dec
push
xlat
dec
fs
sub
pop
mov
fistpl
sti
sti
call
arpl
push
mov
loop
in
dec
in
dec
scas
inc
loopne
sahf
ftst
push
clc
les
pop
mov
push
jg
sbb
xrelease
nop
push
adc
push
loopne
jae
jl
dec
in
jmp
or
aad
int3
push
inc
push
inc
aas
adc
test
or
inc
je
dec
jecxz
dec
js
mov
mov
push
mov
mov
mov
adc
cli
fstpt
dec
fs
or
es
xchg
inc
lock
movb
roll
cmp
dec
push
jge
notb
pushf
inc
dec
jmp
mov
test
push
mov
lds
cli
cld
test
or
mov
test
mov
jno
cwtl
shr
inc
subb
inc
dec
aam
ret
lcall
insl
cmp
fdivr
rcl
xchg
jp
and
popa
and
mov
outsl
mov
nop
or
push
jns
test
movsl
jmp
add
test
sbb
test
hlt
fnstsw
aam
xor
xchg
mov
shrl
mov
inc
out
add
jmp
add
cmp
fsubl
xor
or
push
jb
push
mov
mov
fiadds
dec
and
cmpsb
ja
lock
cltd
dec
adc
sub
or
xor
push
xchg
das
mov
mov
rorl
sbb
loop
popa
xchg
and
xchg
retw
or
or
rcrl
jp
inc
ret
adc
rorl
enter
jmp
cmp
xchg
cmp
jmp
call
jae
out
aad
sub
repz
test
insb
xchg
std
sub
push
rcr
jle
nop
cmc
in
and
adc
movsl
iret
pushf
push
mov
pop
add
movsb
inc
scas
fisttps
push
cmp
sub
mov
movsl
inc
push
mov
ret
xchg
push
sub
sbb
and
scas
std
dec
mov
push
inc
ja
sub
test
leave
inc
sub
hlt
leave
jns
arpl
pop
xchg
inc
aas
dec
jmp
sbb
and
mov
mov
xor
push
or
int3
xchg
rcll
ficomps
std
into
jo
xchg
scas
xor
imul
das
mov
movsb
cmp
xchg
push
sti
push
fdivl
dec
jge
sbb
daa
test
icebp
cmp
inc
mov
mov
cmp
aas
data16
into
insb
push
mov
enter
mov
lahf
subb
push
negb
test
sti
pop
sti
inc
bound
cmpsb
cmpsl
ret
das
pop
cmc
js
sbb
pop
lcall
loope
cmc
mov
int3
fiaddl
ds
ljmp
push
dec
aam
pop
orb
dec
sbb
cmp
add
ret
or
mov
sahf
sub
mov
lcall
or
sub
imulb
dec
or
outsb
ss
adc
fimuls
es
or
mov
add
cld
inc
mov
loopne
stos
int
cmp
testl
xchg
pushf
rcrl
jge
std
movsl
lahf
sahf
pop
les
push
les
addr16
stc
cmp
add
push
adc
add
sub
stos
cmp
inc
inc
loopne
xchg
cli
imul
push
cmp
jb
pusha
into
mov
mov
loopne
dec
inc
pop
call
hlt
push
imul
lock
push
outsl
lods
or
mov
sub
pushf
mov
inc
adc
idiv
mov
lea
mov
aad
inc
repz
fstps
sahf
les
les
mov
pop
rol
cltd
pop
cmp
cwtl
adc
jge
pushf
notl
cs
cmp
test
mov
push
sub
je
cmp
pop
mov
orb
pop
or
scas
or
dec
jl
fcomp
push
push
sub
jb
lock
cwtl
subl
mov
mov
mov
shlw
push
stos
std
push
xchg
dec
out
fldenv
fadd
inc
icebp
pushf
cmpsl
loopne
aam
pushf
lret
in
test
mov
jle
mov
nop
xchg
adc
shlb
aam
jne
ret
sub
imul
clc
incl
rcll
xor
lods
add
mov
mov
mov
push
jne
stc
adc
sbb
adc
shrl
repz
arpl
sub
dec
xchg
sbbb
push
sar
leave
xlat
pop
add
ja
inc
sub
out
addr16
sbb
insb
cli
push
jnp
xorl
mov
mov
mov
mov
loope
pop
dec
mov
pusha
ja
insb
jl
mov
pop
or
fcompl
cmp
addl
negl
cld
jns
ja
in
lds
push
mov
mov
leave
lea
lds
lcall
pushf
sbb
mov
rcll
xlat
fadds
fbstp
lahf
xchg
push
cli
fucompp
push
lods
int3
xchg
mov
add
sub
jnp
fistl
stos
xor
and
ret
jnp
mov
jle
and
in
push
mov
sub
iret
sti
pushf
xchg
jl
cld
pop
aaa
jg
inc
mov
push
mov
popf
dec
daa
scas
push
iret
and
ficoml
fmuls
dec
cmp
imul
add
fwait
lds
xchg
fidivrl
xlat
or
leave
mov
nop
xlat
arpl
insb
ja
inc
fwait
insb
or
mov
scas
adc
test
outsb
test
pop
add
fiadds
dec
push
popa
mov
stos
scas
por
cmp
cltd
andb
mov
cld
fistl
lcall
daa
cmpsl
jne
cmp
dec
jno
xor
jl
jp
dec
movsl
sub
push
xchg
pop
cmp
sahf
sbb
push
sub
hlt
push
loopne
inc
icebp
adc
in
push
insb
ret
js
cwtl
pop
pop
fsts
loope
and
sub
je
cmp
fldcw
sbb
push
adc
inc
pushf
cmp
and
sbb
loopne
xor
mov
mov
cmc
inc
sub
push
sbb
insb
scas
lcall
pop
mov
inc
outsb
cltd
or
or
sub
out
dec
sti
adc
xchg
in
or
push
jecxz
and
mov
push
test
fstpt
shll
inc
mov
sbb
or
arpl
outsl
addr16
aaa
loop
pop
scas
stc
repz
fs
jecxz
adc
jge
insl
adc
inc
mov
adc
xchg
idiv
sahf
or
cmp
adc
or
mov
sbb
loopne
lods
xor
adc
or
mov
add
orb
lret
dec
lcall
in
push
daa
mov
mov
int
pop
lods
or
lds
les
stos
gs
fsts
loope
mov
lret
fstpl
loope
fsubrp
jmp
sub
pop
in
leave
mov
and
pushf
mov
xchg
popf
adc
inc
mov
out
jb
push
stos
dec
clc
xor
je
jp
jecxz
outsl
js
ret
or
les
fsubr
sbb
mov
mov
stos
pop
push
rorb
lock
mov
mov
and
jae
shl
cmp
std
insl
jmp
xchg
or
lods
icebp
jae
add
lret
pop
lds
mov
fucomi
mov
scas
lcall
das
and
inc
ret
mov
mov
adc
cmp
or
clc
sub
ljmp
adc
mov
scas
pop
xchg
das
enter
or
add
hlt
dec
cltd
rcrb
mov
cmp
cs
mov
xchg
and
sbb
stos
cmp
pop
lods
pop
pop
stos
xor
mov
xchg
mov
add
xchg
in
lcall
jb
xor
push
or
push
jns
in
pop
frstor
in
lea
lea
stos
mov
or
jecxz
inc
jle
pop
or
popf
movsb
fwait
inc
pusha
addr16
fisttpl
add
repnz
cmc
out
nop
pushf
cmc
leave
push
jns
jmp
xchg
movsl
inc
cmp
mov
shl
addr16
loop
jp
sti
sbb
mov
sbb
dec
fildll
andb
mov
xchg
gs
xchg
sub
jge
jle
dec
cmpl
lods
enter
and
push
push
nop
and
inc
test
je
mov
ret
jle
cmpsb
add
aas
out
adc
inc
jno
pop
das
and
fs
inc
jae
iret
sub
mov
xor
les
adc
rclb
sub
imul
scas
ret
lock
push
loop
icebp
shrb
insb
repnz
adc
xor
std
hlt
pop
cli
or
ret
inc
pop
pop
or
jns
pop
aaa
mov
add
test
push
int3
pop
mov
cmp
mov
fisubs
imul
mov
cli
pop
movsb
cmp
push
jge
cltd
push
jbe
sub
scas
enter
daa
cmpsb
mov
cmp
jmp
dec
dec
adc
dec
push
js
mov
and
into
inc
lahf
mov
inc
jge
stos
arpl
xchg
cmc
in
xor
cmpsb
lods
outsl
adc
std
pushf
mov
pop
sbb
push
push
sub
sub
loope
cmp
push
jae
and
xchg
xchg
add
sbb
add
push
fnsave
stos
dec
loop
popl
pop
sahf
mov
int3
pop
push
mov
xchg
push
add
faddl
cmp
adc
adc
jno
push
mov
lahf
and
mov
adc
and
dec
inc
push
out
sbb
and
jb
xchg
xchg
testl
pop
dec
mov
fdivrl
sahf
lods
addr16
ljmp
outsl
inc
dec
ret
loop
rcrl
and
es
ss
cmp
cmp
and
cli
rcrl
outsb
cmp
sub
dec
into
push
mov
loopnew
es
lods
mov
adc
imul
mov
les
data16
insl
scas
lods
xlat
hlt
cmpsb
cmp
scas
dec
sub
out
mov
sbb
or
call
mov
nop
jae
stos
dec
or
sti
inc
sbb
adc
fsts
or
xor
or
adc
js
ja
dec
jo
jmp
add
jne
adc
mov
lret
mov
jb
sbbl
outsl
ret
call
jecxz
addr16
mov
sbb
sbbb
push
lds
dec
insb
rorb
fcmovnb
inc
dec
pop
cmc
lea
sub
out
push
or
ljmp
and
xchg
test
mulb
insb
std
adc
jo
fdivl
into
mov
dec
adc
cld
sub
lret
lret
leave
mov
out
mov
cmp
xchg
adc
or
inc
sbb
outsl
cmpl
ljmp
aaa
shl
fwait
add
popa
push
movsl
lods
xlat
inc
pop
mov
rcrl
mov
cmpps
add
imul
mov
out
push
icebp
repnz
mov
clc
test
push
mov
lods
lahf
ljmp
addr16
and
out
sub
out
add
jg
xor
mov
insl
sbb
cmp
push
xchg
jb
dec
push
dec
inc
pop
gs
or
dec
jb
out
adc
punpcklbw
jle
add
dec
icebp
xor
mov
jmp
jns
sub
in
ds
hlt
sbb
mov
mov
cld
jp
out
mov
sbb
mov
xchg
and
dec
push
or
xor
xchg
sti
xchg
imul
dec
pushf
mov
or
sub
movsb
dec
inc
push
cmpsl
fxch
stos
sbb
test
insb
shlb
jnp
rcr
cli
pop
test
inc
loopne
adc
sub
iret
mov
es
inc
shlb
push
push
xor
popf
fwait
daa
cmp
and
mov
clc
arpl
mov
pop
ljmp
jo
ror
mov
bnd
in
leave
stos
imul
arpl
xchg
icebp
or
xor
adc
ja
or
add
test
int3
inc
movsl
popf
pop
pop
insb
enter
ffree
outsl
fs
les
out
lea
push
mov
out
call
repnz
cmp
enter
daa
movsl
jnp
cmp
insl
aam
ss
rcrb
dec
xorl
xor
aam
test
push
shlb
pop
push
pop
pop
outsb
inc
movlps
cmpsb
xor
adc
in
pop
js
push
or
push
mov
shl
jne
jne
or
dec
mov
arpl
add
shl
imul
xchg
out
or
xor
loop
push
mov
pop
sub
flds
lcall
pop
fsubrl
jp
outsb
pop
popl
fwait
popa
dec
subb
jnp
or
xorb
je
mov
in
and
mov
push
jmp
mov
push
testl
test
pusha
push
pop
mov
cmp
sbb
pop
in
jno
mov
outsl
and
xchg
xchg
stc
popa
inc
andb
adc
movsl
ss
mov
out
leave
repnz
add
jl
or
jne
jmp
fimull
mov
jle
cmc
stos
mov
ja
inc
cld
movsb
adc
ficompl
adc
movsl
push
data16
shrl
add
sub
scas
and
in
xchg
sti
mov
std
decb
js
gs
bound
dec
test
clc
inc
sub
cwtl
fld
dec
mov
repz
mov
sbb
filds
mov
les
iret
and
pushf
clc
fwait
push
jmp
xor
fmuls
aad
pop
sti
inc
jnp
aas
xchg
test
jb
ljmp
push
negl
mov
lea
xchg
jnp
push
cmp
mov
lods
pop
dec
cmp
movb
mov
js
jno
push
das
mov
pop
fidivrs
pop
ljmp
mov
fisttpll
push
cmp
jno
icebp
and
enter
sub
cmp
out
jge
sbb
in
mov
inc
sub
xor
repnz
icebp
in
mov
mov
push
divb
lods
inc
jae
mov
hlt
lret
lods
les
in
and
and
pop
add
xor
mov
fmuls
fstp
xchg
push
test
lds
xchg
iret
fistps
pusha
dec
and
add
aas
pop
add
stos
adc
out
nop
imul
mov
xchg
and
pushf
jl
or
mov
xor
scas
out
xor
rolb
mov
insb
popa
ja
testl
or
push
mov
push
and
and
test
push
out
xchg
subb
jne
jns
std
ftst
mov
xor
mov
ret
test
shlb
mov
xchg
add
bound
movsl
mov
mov
pusha
test
ja
aam
ret
xchg
into
cs
cmp
jmp
sbbl
jl
xor
xchg
mov
out
lds
addr16
loop
pxor
in
cmp
int
sbb
ret
xor
fsubl
sbb
or
cs
inc
ds
push
dec
xorb
jp
loope
dec
adcl
push
jo
test
pusha
push
pop
repnz
or
jno
hlt
cmc
lret
adc
int
dec
cmp
jb
out
lret
and
or
jp
int3
xor
pop
lea
fsubrp
repz
mov
scas
lods
iret
mov
and
inc
movsb
fs
push
aaa
fs
jbe
sub
enter
daa
movsb
les
jno
mov
mov
push
jnp,pt
xor
outsl
jno
lahf
cld
mov
mov
push
daa
sbb
inc
sahf
jns
cmpsb
mov
call
js
mov
pop
xchg
adc
push
adc
loope
jns
sub
cmp
cmp
test
mov
das
mov
rcl
out
mov
pop
lcall
xor
adc
imulb
pop
or
push
cmp
aam
xor
in
pop
xlat
sub
jge
outsb
ret
adc
dec
mov
test
ds
or
mov
or
and
gs
in
mov
int
aaa
loop
std
je
testl
insb
sub
or
push
sahf
repnz
jp
clc
das
cmc
xor
add
outsl
add
mov
popf
fs
adc
lea
ss
into
mov
add
inc
cli
aaa
fsts
shrl
or
rcr
push
dec
jnp
jb
movsb
loopne
push
sub
push
ljmp
jo
adc
testl
hlt
movsb
mov
movsl
hlt
xchg
cmp
pusha
xor
test
xor
inc
insb
stc
mov
repnz
mov
cs
or
jno
nop
sub
mov
fincstp
and
loopne
loope
pushf
imul
sbb
pop
arpl
or
sbb
mov
jmp
jmp
and
cmp
inc
aad
jbe
inc
icebp
sahf
push
aas
xor
jb
test
je
xor
int3
fldl
ljmp
mov
movsb
mov
in
jge
xchg
dec
sub
inc
pop
cmp
fadds
mov
lock
shl
das
pushf
mov
mov
adc
stos
mov
mov
out
cltd
std
bound
mov
pop
lahf
cmpsl
mov
and
clc
or
addb
mov
mov
out
mov
or
aam
or
movsl
sub
rcl
or
out
es
xor
fdivr
clc
jmp
pop
xchg
mov
dec
ljmp
xor
lods
jb
mov
pop
out
dec
and
sarb
jo
out
mov
ret
inc
mov
or
push
test
lret
dec
jmp
sbb
movsl
sbb
pop
mov
xor
repz
arpl
fsubs
mov
mull
in
pop
cli
and
ljmp
fiadds
and
sub
mov
arpl
xchg
inc
inc
sub
subl
sar
insl
push
les
mov
sar
jae
push
bound
jno
in
pop
jle
xchg
nop
mov
mov
mov
scas
add
xchg
jp
mov
and
mov
gs
bnd
das
mov
fcomip
fcmovnu
xchg
mov
xor
subl
scas
out
sbb
sub
sbb
sub
stos
insl
sbb
insb
test
add
loopne
jle
out
jno
push
decb
xchg
aas
or
ja
push
ret
dec
pop
adc
out
xlat
jae
aad
push
or
jo
jmp
or
lret
loop
pop
pop
in
shl
add
stc
ljmp
in
lea
xlat
sarb
and
or
inc
xor
inc
dec
pop
mov
sahf
adc
getsec
cmc
dec
data16
add
mov
pop
mov
adc
jo
fisubrl
mov
add
ret
movsb
out
jg
push
xchg
jbe
fsts
enter
daa
mov
mov
outsl
jl
adc
dec
popa
dec
decb
and
lods
xor
or
lahf
sbb
cs
jbe
jae
ja
push
repnz
inc
sub
pop
xchg
js
pop
sbb
aad
int3
push
xchg
adc
mov
and
lret
ds
es
shrb
out
subb
sbb
lock
add
mov
nop
fdivr
and
push
sub
in
pop
mov
pop
lcall
jo
andl
sub
inc
daa
outsb
and
into
jg
gs
jg
push
fidivl
push
stc
repnz
xchg
push
out
sub
int
mov
fdivrs
mov
test
clc
imul
call
and
xor
xchg
outsl
jecxz
sbb
neg
pop
stc
iret
sub
fs
adc
xchg
cmp
cs
out
mov
out
mov
jge
or
adc
loopne
or
subl
imul
jno
data16
mov
cmp
push
jmp
sub
xchg
dec
in
pop
and
mov
push
cmp
nop
add
pop
dec
daa
iret
in
push
movups
cs
or
jmp
xor
shl
xchg
jmp
push
call
mov
test
and
pushf
dec
outsl
push
jmp
fcompl
sahf
pop
push
aad
negl
aas
iret
xor
jb
push
stc
dec
aam
sub
out
inc
jecxz
out
iret
mov
lea
lods
cwtl
pop
dec
cmp
outsb
movsl
cmp
adc
jae
fidivrs
inc
roll
das
jnp
popf
mov
sbb
mov
shrl
sbb
dec
int
dec
cmpsl
mov
std
enter
push
test
adc
jo
or
xor
sub
jmp
xor
or
add
es
lcall
es
cmp
hlt
cld
ret
jg
lods
sbb
mov
cmp
lds
fldt
add
les
into
push
inc
mov
test
cmp
frstor
jns
test
fs
sbb
mov
shll
test
stos
out
rorb
xchg
int3
out
add
sahf
aaa
call
add
or
loopne
xor
movsl
mov
lock
dec
mov
sub
insl
jb
and
mov
jnp
inc
rorl
pop
sub
addr16
add
pop
push
adcb
vmwrite
jmp
ss
push
pop
mov
lods
das
shlb
or
mov
pusha
pop
mov
aam
testl
ss
pusha
fimuls
fists
mov
xchg
je
dec
jmp
stos
cmpl
xchg
sub
push
inc
pop
push
mov
stos
jno
xlat
and
inc
clc
jnp
xchg
add
in
and
adc
cmp
mov
xchg
sbb
inc
icebp
cmpl
lret
das
xor
xchg
mov
adc
and
movsb
sub
imul
cs
dec
stos
loope
pop
mov
sbb
fcomi
jbe
pushf
leave
add
mov
mov
xor
js
push
in
inc
or
gs
jle
mov
fisttpll
push
mov
jmp
sbb
daa
pop
lds
xlat
scas
push
and
sarl
jns
popf
movsb
jp
xor
aad
adc
jge
pop
ja
lret
daa
mov
out
stos
jno
and
jl
dec
push
dec
rolb
call
and
aad
push
dec
dec
push
test
mov
adc
cmpsb
mov
dec
cmp
mov
pushf
push
iret
gs
adc
cmp
xchg
ds
scas
aaa
movsl
cmp
xor
push
or
cmpb
push
fdivs
out
pop
fwait
into
int3
pop
cmp
adc
push
dec
lods
pop
or
lcall
push
fsubrl
sbb
sub
into
call
adc
addb
jmp
ret
mov
mov
push
and
iret
push
repnz
fdivs
mov
lret
sub
and
inc
cmp
sahf
cmp
xchg
test
loope
xor
aas
loop
dec
stc
xchg
adc
pushf
mov
mov
mov
inc
out
shrl
xor
ljmp
fmul
ss
add
sbb
stos
shlb
pop
mov
xchg
cmp
and
rclb
xchg
daa
add
mov
data16
stos
add
jae
test
add
cmp
enter
les
je
sub
nop
filds
aam
xchg
inc
gs
push
fldenv
push
divb
repz
xchg
lods
hlt
hlt
sbb
push
pusha
lock
or
push
pop
insb
cmp
aam
pushf
pushf
stc
push
ss
pop
cmpsl
add
and
and
and
jb
pop
adc
jno
je
test
jecxz
out
in
rolb
outsb
lea
push
into
mov
add
jno
stos
inc
test
xchg
fildl
or
inc
dec
jmp
lock
das
pop
xchg
andb
cwtl
frstor
adc
imulb
std
mov
pop
dec
enter
mov
mov
icebp
cmpsb
xchg
mov
test
xchg
pop
mov
mov
repnz
inc
pop
dec
add
shlb
or
mov
ret
xchg
es
arpl
pop
sar
fs
xchg
xor
popa
popa
lock
lods
sub
mov
pop
adc
and
jbe
jno
ds
bound
mov
cltd
rcr
lock
sbbb
into
inc
sbb
fisttpll
jb
xchg
ja
jns
std
rorl
xchg
ret
pop
add
mov
out
mov
testw
mov
xor
adc
dec
imul
sahf
in
mov
repz
in
dec
repnz
pop
push
int3
ja
es
dec
and
jno
ds
pop
xchg
fwait
cs
push
or
and
mov
xchg
aam
cmpb
sub
inc
and
xchg
xor
lea
jp
jnp
cmpsl
outsl
mov
add
jp
fwait
lcall
xor
mov
sahf
dec
dec
mov
icebp
pusha
jns
cli
fbstp
xchg
xor
pop
dec
mov
jne
sub
cmp
popf
mov
mov
mov
and
jns
sbb
jnp
xchg
adc
or
ret
sbb
orl
das
push
mov
lods
popf
aaa
fadds
inc
leave
cmpl
xchg
jg
rcrl
cmp
scas
mov
pop
push
inc
jne
shlb
mov
leave
lods
or
pop
mov
stc
inc
arpl
pop
inc
push
repz
insb
ret
and
and
jae
mov
int3
xrelease
pop
sbb
jo
mov
jo
mov
sub
movsb
movsb
add
sti
mov
fidivrs
fsubrl
daa
mov
dec
jno
lea
dec
aas
ja
push
out
adc
inc
jl
lahf
pop
je
push
sbb
mov
mov
inc
dec
inc
std
cmpsb
cmp
dec
in
sub
js
mov
pop
push
cmp
mov
push
mov
jo
cmp
pop
mov
movsl
inc
xchg
shlb
push
insl
xor
adcb
dec
add
js
xor
adc
popa
cld
push
sub
aas
pop
pop
mov
pop
lcall
adc
das
sub
sbb
dec
adc
fwait
sahf
sarl
mov
ds
call
mov
jp
and
loop
cmc
jle
int
push
pop
fsubrs
mov
testl
movsb
sarl
sbb
outsl
sahf
les
out
lods
outsl
mov
cmc
mov
cmp
cmp
adc
xlat
pushl
cmp
and
mov
orb
xor
out
xchg
sub
or
lahf
into
mov
mov
enter
sub
xor
stos
imul
in
add
fnstsw
cmp
mov
mov
xor
sti
jae
xor
xchg
int3
data16
in
add
xor
les
jecxz
repz
xchg
outsl
aad
sbb
lret
cmp
mov
jb
pop
add
adc
cmpsb
add
jmp
cwtl
cli
cs
aad
es
inc
andb
or
or
je
loopne
jecxz
cmp
aad
pop
lea
pushf
jo
jge
insl
mov
cld
cwtl
mov
addl
or
mov
repz
and
dec
inc
iret
mov
lock
subl
popf
mov
mov
dec
enter
iret
stc
imulb
xor
ret
cwtl
cmp
cmp
cld
add
lret
negb
mov
ds
mov
inc
mov
out
int3
pop
imul
inc
aam
lds
adc
pop
insl
je
dec
clc
pushf
movsb
imul
fldl
or
adcb
and
push
pop
sbb
popf
fildl
popf
mov
mov
mov
inc
sbb
fnsave
test
push
add
sub
dec
shll
jb
scas
adc
int3
outsb
loopne
sbb
mov
sub
iret
call
jmp
or
cltd
add
mov
idivb
dec
pop
data16
or
movsl
ja
orl
or
or
mov
fwait
pop
subl
lods
je
add
adc
aaa
out
adc
push
jns
test
in
stos
arpl
mov
loope
or
testb
ljmp
mov
mov
out
xor
jne
outsl
jnp
adc
inc
fists
pop
xchg
sbb
and
das
arpl
mov
outsl
mov
loop
cltd
stos
push
imul
jnp
dec
pop
jle
leave
insb
in
cltd
nop
adc
repz
ret
aaa
pop
mov
pop
add
jno
and
push
icebp
push
popf
pop
ds
inc
dec
mov
jle
sbb
pop
aad
test
xchg
scas
adc
lock
mov
sbb
fmulp
std
testb
push
pop
flds
insl
mov
shrl
sbb
mov
aaa
xor
or
sub
push
sub
jle
dec
xchg
adc
jne
sbb
adc
sub
ljmp
insb
fwait
sbb
out
jge
nop
mov
or
cwtl
cwtl
jge
aas
and
daa
mov
jb
jno
sbb
xchg
aaa
sahf
dec
scas
xor
push
lret
xor
jp
out
add
test
push
push
push
fidivrl
pop
in
addr16
js
cmp
pop
xchg
mov
popa
loope
cmp
or
adc
mov
ds
int3
pop
rolb
cmpsb
sub
loop
xor
lret
mov
push
sub
jge
or
lcall
adc
test
sub
xor
outsb
dec
push
leave
adc
mov
bound
xor
xchg
dec
aad
jnp
cmp
and
push
clc
push
or
jne
fsubr
out
aam
add
lret
xchg
rcll
mov
outsl
out
jle
jg
adc
cmp
inc
push
outsl
adcb
mov
jg
hlt
push
and
xchg
outsl
sub
cmpsl
out
inc
ss
popf
inc
cmp
pop
add
jo
add
fbstp
aas
push
dec
cmp
inc
xchg
or
ror
mov
mov
pop
pop
loopne
adcl
adc
xchg
adc
xchg
add
cld
sub
adcl
inc
movsb
sub
xlat
xorl
xor
sahf
mov
in
mov
xchg
sbb
dec
inc
enter
xchg
xlat
out
les
inc
repz
rcrl
inc
lods
aaa
movl
xorl
dec
loop
jmp
pushf
inc
cs
jl
aad
rcr
inc
pop
repz
aas
lods
shl
jb
sti
sbb
mov
xchg
jecxz
lret
push
fdiv
js
xchg
out
cwtl
cmp
leave
mov
ja
mov
dec
sbb
or
fneni(8087
xlat
and
add
lock
das
sbb
xlat
mov
sarl
sbb
std
incb
frstor
jo
repz
push
scas
xchg
cld
sub
lret
gs
enter
outsb
mov
pop
shll
mov
rcrb
test
lock
aam
cld
cmpsl
ret
mov
mov
jo
clc
xlat
js
xchg
mov
inc
ljmp
push
lods
pop
mov
ja
mov
xor
push
sub
pop
paddb
cmp
mov
insb
cltd
inc
pop
addb
aas
push
adc
fstpl
test
xchg
lahf
sbb
pop
adc
mov
sbb
stos
mov
lret
mov
mov
jae
adc
cmp
je
aaa
insb
xchg
mov
jnp
addb
jge
pop
movl
dec
and
sti
inc
lahf
inc
dec
or
pop
inc
fwait
mov
add
outsl
dec
sti
out
out
popf
mov
cli
scas
mov
shrb
xchg
into
lods
fwait
mov
sbb
popf
stos
or
icebp
addr16
cs
stos
jmp
mov
and
dec
adc
push
jne
mov
adc
outsl
pop
bound
or
ja
andl
out
loope
sub
push
jne
push
and
cmp
and
fimull
push
xchg
fidivrl
dec
mov
in
ljmp
repz
pop
ret
or
pop
movl
jno
adc
pushf
popf
test
insl
inc
sbb
sub
inc
sbb
fnstenv
imul
test
iret
imul
jnp
out
outsl
test
leave
je
cld
hlt
insb
adc
in
pop
pop
repz
xchg
faddp
aaa
icebp
and
lea
movsl
mov
int3
leave
jb
pop
js
ficomps
sbb
jo
xor
and
fcomi
cmp
push
or
mov
jbe
push
cmc
jge
test
enter
daa
lahf
in
pop
cmp
ret
inc
jno
lret
sub
dec
sbb
gs
les
and
sbb
ret
test
push
mov
inc
imul
in
dec
jecxz
js
pop
adcb
mov
loope
mov
psubusw
xchg
cmpl
push
jbe
rcrb
mov
sub
sbb
mov
pop
xor
in
aas
pop
scas
push
lcall
push
add
fsubrl
jmp
test
mov
pop
adc
rorl
pop
jg
fnstcw
mov
mov
mov
mov
addb
mov
push
fsubs
jb
popf
jp
shr
xor
sbb
fldl
popf
mov
outsl
pop
data16
inc
fcompl
fs
clc
scas
adc
jge
test
adc
sbb
adc
jle
push
ss
cmp
cmp
sub
into
test
aas
loopne
mov
mov
imul
jl
add
pushf
lods
sub
fdivrl
and
sahf
xlat
sarb
mov
or
sti
sti
rcrl
adc
cwtl
in
nop
jo
loope
mov
daa
js
or
inc
pop
mov
repz
sbb
xchg
cmc
bnd
sbb
cmp
shll
pop
test
sub
fs
sub
aad
in
inc
js
pop
aas
dec
mov
push
mov
into
je
dec
lret
fistpl
adc
shlb
mov
leave
push
xorl
pmuludq
inc
lock
fwait
and
mov
stc
sub
and
das
inc
shrl
das
divb
mov
mov
mov
jno
cld
push
aad
lret
aam
cmp
daa
ficompl
mov
cmpsl
jae
shrb
fidivl
aam
xchg
ret
xor
iret
insl
inc
iret
loop
adc
xchg
lock
ljmp
lods
fisttpl
pop
and
mov
adc
push
pop
das
ljmp
dec
lock
js
lods
test
mov
je
inc
aaa
push
test
xchg
addb
add
pop
add
sbb
out
loop
ss
call
push
mov
adc
xor
loop
xor
sbbb
cld
adc
pop
andb
and
repnz
pop
push
fwait
inc
ss
or
pop
jmp
mov
int
add
lret
out
into
scas
insb
bound
push
and
jecxz
cwtl
xchg
sbb
lock
mov
cwtl
cmpsl
lret
jno
jp
add
and
mov
outsb
mov
cmp
fisttps
adc
xchg
xchg
pop
xor
int
les
mov
pusha
mov
stos
cmp
cmpb
lods
sbb
adc
test
ja
dec
adc
into
inc
iret
push
push
pop
ret
lds
mov
inc
sbb
adc
xlat
subb
mov
push
inc
sub
fcmovu
adc
xchg
test
out
sbb
addr16
xchg
stos
scas
jno
test
mov
ret
leave
jmp
hlt
mov
andl
outsl
inc
pop
mov
push
aaa
mov
arpl
xor
cld
add
in
mov
adc
cmpsl
lret
xchg
fidivrs
sti
je
inc
mov
scas
out
and
jmp
rclb
lock
pop
and
jns
scas
enter
daa
sahf
dec
dec
cmp
mov
adc
repnz
push
nop
jo
xor
adc
xchg
lahf
mov
lods
push
xchg
nop
xchg
test
jmp
je
cmpsb
lds
in
xor
or
pop
adc
outsl
push
mov
loope
clc
mov
cmp
jg
movsl
pop
add
shl
scas
push
or
imul
cmpsl
pop
add
mov
xor
das
add
cmpsl
xchg
sub
add
in
push
fcmove
lcall
pushf
sub
mov
in
sub
in
fs
bound
rorb
fdivrl
xchg
adc
push
pop
test
pop
insb
dec
fcomps
out
idivl
mov
nop
sbb
mov
or
sahf
les
xor
adc
outsl
jp,pt
loop
sbb
pop
fs
push
lods
ss
ret
out
mov
adc
ret
mov
imul
sbb
or
jns
into
push
ljmp
push
popf
mov
imul
loop
cmp
cs
sub
andps
cmp
mov
call
sub
lcall
je
mov
addb
gs
bound
add
xchg
flds
pushf
les
sbb
repz
cmpsl
xchg
mov
mov
add
pop
cmp
ret
pushf
movsl
std
pusha
jmp
out
jbe
lea
aad
pop
pop
inc
xchg
adc
xchg
insl
sub
daa
pop
push
je
or
fidivrs
push
cwtl
scas
mov
mov
clc
add
pop
popa
mov
fstpt
aam
pop
or
popa
pop
lock
incl
das
iret
mov
mov
in
loopne
sarl
imul
mov
ljmp
int3
and
add
cld
add
lret
inc
jge
mov
mov
fcomps
mov
fldt
fimuls
aam
gs
ret
mov
daa
and
sub
iret
clc
dec
fnstsw
das
ljmp
and
add
jmp
push
xchg
push
loop
insl
pop
ja
popa
aas
cltd
scas
addr16
add
fisubrs
fucomp
dec
mov
xchg
inc
sbb
fcmovnbe
gs
pop
mov
xor
inc
popf
jnp
das
inc
test
jp
mov
cltd
xor
pop
rorb
and
lret
mull
decl
cmp
ja
popf
mov
or
stos
inc
int
ljmp
ljmp
out
mov
out
lods
lds
jns
mov
movsl
xchg
insb
push
imul
mov
or
jne
jp
nop
or
sub
mov
fbstp
xor
pusha
in
adc
lods
xor
xchg
xchg
sbb
jmp
mov
cmp
out
cld
mov
subl
mov
lahf
or
mov
add
or
insb
sub
add
adc
add
jle
mov
iret
mov
cltd
ret
xchg
pop
pop
mov
inc
sub
in
push
lcall
push
lds
mov
sbb
enter
pop
xor
test
mov
rclb
adc
xchg
fcomi
add
arpl
gs
pusha
xchg
outsl
or
or
jp
outsl
sub
daa
mov
cli
int3
lahf
lods
mov
or
xchg
lds
stc
iret
scas
lds
nop
and
pop
pop
movsb
xor
ss
insb
push
jge
mov
out
popf
xor
jno
cwtl
xchg
jl
rclb
sti
clc
mov
xor
lods
mov
das
push
push
jmp
push
mov
gs
xchg
loop
sbb
fidivrs
push
rclb
dec
cmc
cmp
jo
loope
mov
gs
lock
scas
jb
jnp
mov
pusha
testb
shlb
neg
sbb
adc
dec
push
cltd
add
sbb
repnz
mov
sub
iret
cmp
xchg
cmp
faddl
add
outsb
ja
outsb
adc
pop
iret
fdivrs
xor
pop
mov
out
mov
dec
pop
and
xchg
gs
cmp
jne
ds
jmp
subl
sbb
rorb
loop
addr16
push
test
mov
outsl
sbb
xchg
adc
fs
cmc
adc
ja
push
outsb
mov
push
out
mov
xor
in
jns
inc
js
or
icebp
push
into
dec
lods
push
cmc
jecxz
adc
pop
cmp
xor
testl
add
ljmp
testb
xlat
ds
push
ret
mov
fistpll
iret
and
gs
nop
es
dec
popa
in
inc
jmp
fnstcw
movsl
les
aam
xchg
jnp
and
mov
pop
movl
dec
pushf
push
leave
add
in
aas
inc
cs
adc
xor
aas
mov
nop
dec
sahf
mov
je
or
add
cmc
loope
push
lea
push
sub
and
push
dec
xchg
fldt
lods
pop
mov
jnp
jmp
test
dec
js
das
mov
and
addr16
mov
ja
cwtl
roll
fdecstp
idivb
fneni(8087
dec
scas
sbb
cmpsl
pushf
aaa
sub
icebp
fldenv
cld
lods
lea
lret
mov
and
mov
add
mov
in
adc
add
aad
imul
dec
xchg
xor
or
mov
adc
adc
mov
xchg
outsb
and
cmpsb
icebp
fsubs
inc
sub
xchg
mov
or
xchg
and
mov
xchg
xor
jmp
arpl
test
mov
push
int3
pop
pop
fstl
mov
les
xor
clc
fnstsw
sarl
sbb
test
dec
xchg
jbe
or
call
cwtl
xor
into
or
or
add
dec
cmc
sbb
ja
lds
std
negb
xlat
add
lock
inc
fwait
sbb
push
cmp
push
add
orb
bound
xchg
in
sbb
xchg
mov
hlt
enter
invd
mov
addr16
std
pop
jp
iret
mov
pop
shrb
outsb
push
add
xchg
xchg
bound
gs
es
push
jnp
repnz
insb
sarb
out
mov
sub
mov
ds
fsubp
xor
and
cmp
jnp
in
add
inc
outsl
in
xor
adc
or
pop
xchg
pop
out
xor
jno
lods
sub
mov
cli
mov
pop
inc
inc
jg
inc
dec
cmp
xor
imul
mov
lds
pop
xor
leave
fnstcw
arpl
or
outsl
or
aaa
je,pn
or
push
mov
int3
mov
sub
adc
fiadds
mov
imul
cmp
mov
js
movsb
mov
inc
dec
jbe
inc
mov
enter
daa
pushf
pushf
cli
cmp
mov
jl
add
dec
push
icebp
push
push
bound
xor
inc
push
cmp
push
cmp
mov
push
jg
imul
add
js
sub
imul
in
loope
inc
mov
shlb
sarl
sahf
pop
pop
movsl
addr16
stos
in
xor
dec
sbb
rclb
rcll
sub
cmpb
add
lods
lcall
ja
xor
dec
outsb
ficompl
scas
andb
ss
call
add
push
js
mov
pop
iret
and
cmp
sub
jp
aad
mov
std
lret
jbe
int3
shrl
cmpsb
sbb
mov
sahf
or
roll
scas
jle
loop
cmp
stc
rorb
adc
ss
mov
inc
mov
inc
pop
out
sar
cli
iret
repnz
cmp
fucom
or
sbb
aad
dec
sub
pop
pop
sub
imul
push
mov
data16
mov
aad
xchg
xlat
jge
push
sub
lahf
inc
mov
dec
push
sti
ficomps
incb
sbb
stc
std
nop
add
fimull
mov
adc
les
out
repz
cli
xchg
ds
insb
call
add
pop
sahf
mov
fidivs
inc
jmp
push
shrl
call
inc
leave
xchg
aas
sub
dec
adc
in
jecxz
mov
in
sub
and
push
mov
mov
mov
push
icebp
xorl
loopne
pop
push
bound
jb
test
movsb
add
das
xchg
add
push
mov
add
rcll
dec
idiv
sbb
inc
dec
stos
outsl
xchg
cmpsl
fwait
bound
icebp
mov
mov
lret
and
orl
xchg
inc
icebp
pop
add
or
movsb
jecxz
sub
inc
iret
aam
pop
nop
ret
fnstsw
mov
testl
xchg
lods
faddl
sbb
and
mov
mov
das
pusha
push
and
cwtl
jg
vmread
xchg
add
daa
lcall
sbb
and
test
fists
and
fnsave
lods
lret
test
or
stos
fcmovbe
rcll
push
pop
push
jb
stos
ja
std
out
or
xchg
mov
xor
out
jecxz
xor
push
out
es
andl
fsincos
dec
pop
ret
bound
sub
lock
fadds
movsb
xchg
or
push
push
fwait
dec
pop
mov
add
fistpl
imul
bound
mov
lods
daa
fwait
in
dec
adc
out
and
mov
mov
mov
jp
ret
push
repz
mov
fnsave
ja
mov
push
jl
sbb
jne
jmp
cmp
cmp
out
jmp
aaa
out
or
out
out
sub
repnz
push
sbb
jno
and
dec
inc
insb
add
push
jnp
and
inc
pop
in
push
sti
adc
cld
iret
outsl
andl
inc
lods
aaa
jae
xchg
and
and
popf
and
or
jb
cmc
xchg
mov
add
or
push
xchg
scas
add
fcoml
xor
rcl
xchg
mov
mov
mov
arpl
fwait
sub
adcb
in
inc
push
or
ss
jne
sbb
fmulp
fisubs
pusha
jo
adc
and
mov
jp
movsb
inc
insb
aad
push
push
jbe
xchg
jg
outsb
mov
enter
daa
fwait
mov
or
jno
testb
add
dec
fsts
push
cmp
xor
loop
enter
mov
push
call
sbb
xchg
inc
movsl
or
cmpsb
dec
or
mov
fwait
mov
int
imulb
add
loope
sbb
mov
rcrl
outsb
push
lods
rolb
jno
addb
addb
jg
nop
in
lock
pop
dec
adc
pop
addl
test
jmp
sub
lds
popa
or
popa
and
cmpb
xchg
mov
das
mov
mov
xor
push
pop
push
and
mov
idivl
in
inc
mov
movsb
sbb
adc
mov
mov
or
and
sbb
xchg
fs
bound
adc
arpl
xchg
sub
cmp
push
and
cli
add
xor
mov
cltd
push
stos
or
and
loopne
jl
pop
jnp
repz
cmpxchg
mov
adc
fwait
int3
add
frstor
mov
lods
les
mov
sub
adc
mov
mov
imul
nop
fmull
jnp
ljmp
les
lock
mov
mov
call
adcb
adc
fmul
jmp
sub
cs
lods
aad
adc
in
mov
movl
stos
je
push
jmp
and
xchg
lea
dec
mov
int3
cwtl
repz
sub
xor
fcmovne
or
pop
negb
mov
jmp
mov
aad
pushf
and
in
adc
cmc
into
testb
std
inc
mov
dec
movsl
push
cmpsl
lcall
icebp
xchg
jmp
add
pusha
mov
cmp
mov
and
shlb
mov
aam
cli
xchg
ret
insb
daa
pop
adc
push
insl
fidivs
push
clc
decb
xchg
in
sbb
mov
andl
push
lods
jo
mov
mov
repnz
cmpsb
adc
cltd
push
dec
test
cmpsl
mov
push
push
push
xchg
fstpl
push
test
lcall
xchg
push
add
pop
mov
shrl
mov
ja
data16
out
outsb
incl
add
cmpsl
add
dec
decl
xor
mov
mov
or
inc
pop
outsb
xchg
or
dec
jecxz
push
inc
xchg
xchg
add
pushf
ljmp
lock
jnp
jo
shlb
pop
in
frndint
mov
in
into
rclb
xor
mov
or
mov
sbb
cmpsl
mov
dec
out
scas
inc
mov
dec
subl
jne
jl
pusha
mov
inc
fisttps
pop
iret
xchg
or
push
jmp
add
xorl
fsub
rorb
lock
pop
and
or
dec
adcl
jnp
rorl
jnp
inc
in
pop
movsl
adc
iret
into
inc
push
ret
jne
add
push
jae
cmp
jae
dec
push
aas
push
inc
xchg
push
fisubrl
xor
in
imul
scas
frstor
or
mov
push
sub
hlt
jecxz
jbe
stos
cmpl
imul
jne
cmp
xchg
xchg
or
movsb
out
add
cmp
fiadds
sub
cmp
jo
mov
andb
sub
rol
and
cmpsl
nop
jbe
push
fdivrs
inc
push
enter
daa
lcall
jno
pop
lds
jbe
dec
movsb
insb
push
sbb
mov
cmpsl
movsl
adc
jge
mov
push
loope
and
adc
pop
cli
cmpsb
rorl
int
pushf
popf
dec
pop
or
leave
push
fidivrl
sbb
sub
lcall
in
mov
pusha
imul
sbb
sbb
daa
adc
inc
outsb
xor
test
mov
adc
mov
sub
pop
add
addr16
and
xchg
sub
adc
mov
mov
sbbb
jg
pop
ss
lds
mov
das
mov
mov
cmpsb
push
or
or
dec
subb
jnp
mov
rcr
movsb
mov
sarl
outsb
insl
sahf
push
cmp
fs
das
outsl
mov
sub
stc
ds
inc
fs
ret
inc
es
fstpt
add
iret
out
repz
xor
out
cmp
and
or
loop
cmp
xor
and
pop
lcall
imul
xor
adc
call
pop
cmp
dec
xlat
sti
inc
mov
ret
je
mov
and
hlt
sti
cmp
xchg
decb
outsb
nop
mov
push
inc
std
pop
iret
fstps
add
repz
movsl
xchg
les
loop
sub
add
pop
add
mov
pushf
push
and
jmp
mov
aad
pop
mov
decl
aas
adcw
add
jecxz,pt
rorb
mov
lock
cmc
cwtl
lcall
mov
pop
mov
dec
push
sub
cld
bound
leave
push
inc
adcb
lock
pop
enter
xchg
mov
mov
and
out
inc
shl
imul
call
rcrl
cltd
inc
std
mov
pop
pop
or
fdivrs
pushl
add
or
pop
mov
inc
jge
rorb
and
mov
sub
ret
sti
xlat
scas
es
pop
mov
clc
cmp
jmp
popa
jle
je
lds
jne
sbb
dec
sbb
pop
or
and
incb
mov
arpl
test
mov
sbb
lock
sarl
xchg
dec
stos
push
xor
rclb
out
xor
xor
iret
shll
cmp
aad
fadds
sub
das
ja
push
pop
dec
mov
inc
sub
fwait
cmpsb
xlat
adc
add
xchg
jns
out
sub
bound
jns
cmp
test
jne
xchg
jg
loopne
stc
lods
cmp
lds
mov
mov
cmpb
push
add
fistpll
xchg
cmpsb
test
sub
push
test
jl
xor
xchg
push
jle
and
in
adc
or
xchg
test
and
inc
push
sbb
sbb
push
cmpsb
pop
xchg
popf
outsl
stc
mov
out
adc
aaa
ficompl
mov
aaa
or
cmpsl
xchg
xor
mov
or
aas
push
rorb
mov
popa
call
out
cs
arpl
jae
or
clc
or
aaa
imul
repz
push
int3
dec
adc
pop
xchg
mov
inc
imul
adc
jno
mov
movsb
pop
outsl
mov
cmp
repz
loope
enter
daa
cltd
out
mov
jno
in
jl
mov
mov
xchg
push
push
divl
sbb
mov
push
mov
out
xor
fildll
inc
ret
imul
mov
xor
push
jmpw
mov
sub
adc
cmp
mov
movsl
jl
xor
cmp
xlat
gs
lcall
out
add
clc
xor
andl
cltd
in
sub
int
lcall
inc
fdivl
in
sub
outsb
add
mov
out
pop
in
xorb
jg
sbb
mov
mov
mov
fs
fnsave
push
or
imul
push
leave
adc
cmp
sub
dec
mov
sbb
jno
sahf
repz
xor
sbb
mov
xor
cmc
sub
shrb
ss
pop
scas
cmp
cld
xchg
cli
push
pop
das
cmp
add
or
jbe
into
xlat
and
cmc
pushl
sahf
pop
mov
mov
int
xor
scas
add
loope
xchg
mov
push
cmp
call
pop
mov
mov
sti
jmp
scas
xor
scas
nop
xchg
inc
push
dec
fucomp
pop
inc
adc
cmp
push
stos
leave
les
repz
sbb
mov
adc
push
jmp
daa
in
jl
push
aad
sbbb
add
lcall
aam
fsub
inc
sub
in
adc
lea
cmp
dec
inc
jnp
in
xchg
bound
inc
jmp
fldt
mov
pop
cmp
mov
pop
lcall
mov
aas
das
xor
cmp
jnp
inc
sahf
xor
inc
adc
and
test
cmp
pop
inc
dec
fwait
loopne
cmpsl
cwtl
sti
cli
mov
xor
out
pusha
lret
outsb
scas
push
lock
mov
add
mov
popa
mov
xchg
sub
stos
fld
mov
enter
and
lods
mov
mov
ljmp
ja
inc
adc
mov
cwtl
fs
push
sub
add
mov
sub
fcomps
cmpsb
test
cs
xchg
and
les
not
sbb
stos
inc
xchg
out
xor
test
add
les
dec
pushf
sti
xor
sbb
xor
in
add
push
mov
dec
xchg
adc
pop
in
lret
mov
leave
scas
adc
in
or
xor
fwait
aad
mov
lds
sti
mov
inc
mov
incl
pop
in
iret
xlat
xchg
negl
mov
mov
jecxz,pt
jp
lds
inc
mov
aam
mov
jb
mov
sub
dec
dec
movb
pop
fisttps
je
mov
ret
je
xchg
cwtl
cmp
orl
out
sub
jg
mov
insb
lcall
pop
mov
jnp
lret
xchg
jle
add
adc
inc
lret
iret
mov
test
cltd
jge
pop
jo
cmp
push
jae
pop
mov
imul
and
inc
int3
inc
inc
pusha
sti
ficoml
sub
mov
loope
push
sbb
inc
scas
sub
fimull
mov
mov
or
ret
jns
fisubs
pop
outsb
inc
outsl
lea
loop
sbb
mov
or
int3
ss
fimuls
mov
test
add
cmp
outsb
ret
pop
dec
jbe
xor
jge
fs
cwtl
mov
cmpl
movsb
loope
and
imul
xchg
push
loop
fidivl
mov
mov
xchg
dec
test
stos
mov
inc
push
add
xlat
ljmp
adc
pop
mov
push
movsl
xchg
loope
xchg
sub
rorl
ds
mov
rclb
inc
pop
pop
inc
mov
pop
inc
lea
add
cmp
jns
shlb
and
mov
lcall
and
fcompl
sub
add
imul
orb
sub
xor
push
and
push
cmp
adc
int
mov
fadd
movsl
dec
idiv
cltd
inc
lret
jge
or
test
in
cmp
xchg
test
dec
and
sbb
call
loop
jmp
stc
lods
sti
lock
xchg
adc
fnstenv
pop
pop
cmpb
les
cli
fwait
pop
divl
notl
loop
sbb
xor
mov
rolb
mov
jns
adc
adc
fldl
xchg
enter
call
shr
xlat
jns
fsubrl
test
xchg
sti
lcall
movsl
popf
xor
insl
inc
out
cmp
xor
in
push
repz
iret
sub
sub
pop
call
inc
repnz
push
cmc
adc
inc
bound
dec
fistpll
xor
pop
aas
movsb
mov
jb
movsl
xchg
dec
icebp
sti
divb
je
dec
lock
lea
adc
mov
fnstsw
adcl
sub
pop
filds
inc
inc
mov
lock
pop
das
adc
sub
cs
loope
xchg
push
sti
testb
push
std
ss
cmpsl
xchg
ss
icebp
or
lret
cld
test
aaa
lret
mov
xchg
push
mov
cmp
pop
addb
shl
jb
sub
cmpb
add
mov
clc
scas
ljmp
in
and
pop
jg
mov
mov
mov
pop
add
pop
pmuludq
data16
inc
cltd
stc
in
pop
test
arpl
fwait
scas
dec
fst
sbb
pop
and
xchg
insl
lahf
sbb
shrl
insl
pop
mov
scas
stos
xor
stc
xchg
fnop
cmc
add
cmc
ljmp
pop
xor
loopne
or
cmovo
addr16
add
clc
dec
pop
pop
lahf
dec
lea
dec
mov
pop
mov
push
inc
or
mov
push
push
add
cwtl
out
out
xchg
bound
loop
in
dec
jl
inc
test
mov
insl
aaa
mov
jne
outsb
mull
jp
xchg
pop
mov
cmp
mov
add
xchg
fbld
xchg
test
les
jne
out
sub
ret
push
ljmp
push
mov
xchg
sti
inc
insb
lods
mov
repnz
lea
sarl
fildl
iret
jmp
xor
lods
pop
out
cmpsl
xor
mov
inc
dec
popf
mov
and
mov
movsb
or
std
jbe
imul
dec
scas
nop
lret
or
sahf
rolb
mov
pop
lcall
hlt
les
inc
jb
push
or
outsb
or
aaa
jmp
fimuls
add
lcall
scas
push
jecxz
mov
clc
inc
and
xchg
pop
movsb
jae
jbe
cmp
imul
lret
fmul
xchg
sub
daa
xchg
gs
jno
popa
sarb
popf
dec
xchg
xor
lds
cld
mov
leave
lahf
popl
jg
and
push
jbe
pushf
inc
loope
ljmp
pop
mov
sbb
pop
leave
mov
pop
cltd
imul
out
les
and
dec
fimuls
shl
leave
lret
xchg
flds
xchg
ret
int
sub
cld
mov
sub
fwait
mov
pop
jg
sub
fidivs
xchg
add
sub
outsb
leave
ficoms
test
cmpsb
pop
mov
shr
stos
out
mov
out
and
je
push
adc
int
fiaddl
mov
sbb
mov
xor
sbb
sahf
cmp
cmp
rcrl
xor
out
push
jne
loop
cwtl
fyl2xp1
arpl
fs
and
outsb
mov
popf
pop
cmpb
xchg
repz
add
cli
into
jl
xor
jmp
cmp
inc
and
rcl
push
cmc
lea
loopne
xchg
mov
adc
sub
cmp
adc
cli
and
and
mov
jae
cld
rolb
mov
cli
sbb
popa
sub
cmc
xlat
sbb
shrb
dec
xlat
dec
fwait
mov
inc
sbb
fld
pop
inc
les
pop
repz
addr16
or
hlt
shr
cltd
movsl
mov
xor
pop
sbb
inc
mov
jmp
xor
aad
jg
inc
push
xorl
xchg
jecxz
xor
mov
push
pop
mov
pop
shrb
repz
pop
cwtl
lret
sub
mov
shlb
subl
jmp
xchg
pop
orb
inc
adc
out
add
out
rorl
mov
mov
pop
mov
dec
dec
movsl
std
fstl
insl
cmpsl
xchg
cmc
sub
jecxz
push
cld
scas
xchg
jno
dec
in
ret
mov
fsub
mov
lahf
dec
loopne
ret
pop
inc
sub
lods
popa
ret
test
push
es
stos
insl
jp
sub
ljmp
ljmp
cld
lods
sbb
add
fiadds
xor
xchg
in
push
inc
and
pop
movsl
bound
push
iret
xchg
pop
mov
scas
sub
mov
push
add
cmpsb
movsl
pop
pop
test
cli
test
xchg
and
inc
decl
sub
xor
sub
jge
popf
cld
out
mov
adc
mov
lods
pop
pop
push
sub
mov
scas
ret
out
les
jb
daa
fwait
xor
push
or
add
mov
into
mov
jns
stos
push
in
and
xchg
xchg
jns
mov
loop
mov
jo
mov
add
call
es
mov
or
dec
ucomiss
pusha
and
filds
cli
ds
cs
aam
xchg
mov
pop
leave
aaa
stos
aad
shlb
test
inc
xor
mov
cltd
or
scas
push
aam
mov
sbb
dec
jne
ret
cltd
pop
fisubrs
bnd
mov
popf
in
stos
push
ds
mov
test
sub
scas
repz
andnps
or
pop
mov
dec
repnz
pop
bswap
mov
aas
arpl
inc
fadds
sbb
sbbb
insb
push
aaa
test
addr16
scas
fwait
add
ret
or
arpl
dec
daa
push
lds
popa
jo
cs
scas
fisubrs
mov
cmp
imul
outsl
loope
jge
adc
mov
cmp
cmp
iret
push
cmpb
dec
add
out
push
test
xor
ret
mov
and
cmpsl
cs
scas
push
sahf
push
sub
ret
lret
loop
inc
jo
xchg
insl
lret
jecxz
mov
pop
or
lods
push
inc
mov
into
sbbb
pop
les
lods
cmp
jo,pt
and
int3
data16
fs
cmp
int3
call
or
fwait
adc
sbbl
or
cmc
js
add
sahf
push
bnd
fdivl
adc
sbb
xchg
outsb
sub
adcb
in
jg
jb
mov
es
and
mov
cmpsb
lcall
test
int
out
fdivs
sbb
ja
sub
sub
sarl
and
sbb
ss
fcoml
pop
test
fs
fistpll
outsl
ss
sbb
or
mov
pop
fistpll
in
cld
stos
out
arpl
add
xor
mov
pop
into
add
cmc
push
inc
xchg
loopne
dec
rcrb
mov
adc
lea
jns
adc
in
add
subl
dec
push
xlat
div
subl
xor
aam
int3
int3
jnp
clc
dec
sar
sbb
aad
mov
rclb
cli
pop
addr16
dec
cmp
stc
sub
repz
inc
pop
xchg
shlb
sbb
adc
mov
pop
shrb
adc
arpl
pushf
std
mov
jmp
fildll
movsl
fcoms
inc
imul
jb
pop
lret
cli
mov
jecxz
or
jmp
sbb
xchg
mov
mov
es
pop
and
or
scas
das
into
push
or
repz
nop
mov
inc
cmp
dec
notb
push
rorl
dec
cmpsl
xchg
cmp
icebp
mov
sub
mov
ficompl
or
mov
jb
sub
sub
ret
aaa
inc
or
lahf
lret
sub
cmp
xchg
daa
adc
ljmp
pop
lods
xchg
mov
add
loopne
adc
cmp
lss
lret
cltd
addr16
test
inc
mov
aam
push
and
cmp
and
mov
push
lret
mov
cmp
mov
rcrl
shl
stos
adc
movsl
out
pop
or
xchg
addr16
xor
push
or
ljmp
lods
orb
loopne
xor
in
mov
pop
mov
xor
push
dec
ja
dec
icebp
dec
mov
push
or
into
lahf
fwait
bound
push
scas
or
cmpsl
mov
lods
out
movsl
add
bound
pop
cmp
movb
in
xor
or
aam
imul
jp
cmp
adc
jecxz
test
pushf
mov
inc
dec
repnz
lcall
xchg
neg
movsl
xor
cmp
mov
mov
cmp
inc
out
mov
mov
xchg
cmp
les
shrb
jnp
jl
jle
push
cmp
adc
dec
scas
ret
in
adc
out
jae
mov
popf
or
push
mov
mov
xchg
xchg
add
push
cmpsb
push
in
pop
out
scas
push
xlat
icebp
push
cltd
add
sarb
mov
lods
in
leave
sbb
stos
hlt
pop
cmp
stc
inc
js
lret
lahf
jb
in
or
loopew
or
mov
int3
divl
add
jbe
add
fmull
je
imulb
mov
sbb
movsb
mov
push
fdivrs
fdivl
out
jge
inc
mov
mov
xchg
daa
xchg
jmp
cmp
xchg
inc
jno
outsl
xchg
jl
and
push
mov
and
jmp
test
or
jno
lcall
cmpsb
pusha
fmull
in
push
and
js
push
inc
pop
inc
das
sti
push
pushf
lcall
fnstcw
cmp
ds
and
cmpsl
pop
ds
loope
pop
xorb
sbb
mov
add
sbb
xor
rcl
adcb
sub
or
mov
notl
xor
pop
sub
mov
adc
fucomip
cli
jg
inc
aad
and
mov
cwtl
pop
scas
mov
mov
adc
sbb
int
fsubrs
fdiv
mov
divl
pop
aad
sbb
rcl
sub
outsb
sahf
jg
push
test
cmc
cltd
xor
repz
outsl
adc
nop
in
rorl
mov
adc
mov
and
int3
cmp
call
dec
jmp
xor
xorb
or
cmp
rorl
or
fdivl
cmc
sbb
and
push
xchg
adc
pop
xchg
adc
and
mov
add
ss
int
dec
mov
in
aaa
inc
jp
cmpsl
pop
push
cmp
gs
cmpsb
lea
cmp
xor
xchg
mov
mov
sbb
jl
cmpsl
pop
subl
aas
stos
jecxz
test
out
fs
jecxz
or
aad
or
ds
subl
add
sti
jecxz
test
stc
sbb
repz
cwtl
inc
adc
mov
lds
adcl
enter
push
pop
enter
and
iret
das
lods
aas
add
pop
gs
and
loop
sarl
mov
std
sub
pushf
dec
xchg
adc
mov
leave
add
cmp
mov
mov
aas
pusha
mov
fucomp
icebp
shrb
pop
sub
stos
ret
movb
and
insl
dec
xorb
imul
icebp
jp
lods
repnz
xchg
mov
and
lods
and
xchg
notl
movups
pop
add
push
daa
test
push
mov
add
leave
fisttpll
pop
test
jl
xchg
jle
je
fwait
pop
mov
arpl
sarb
scas
pop
aas
add
and
dec
lret
into
xor
popa
scas
or
xor
and
mov
sbb
inc
dec
sub
aaa
stos
ja
xchg
rorb
cmpsb
enter
lret
or
push
mov
push
push
mov
lret
inc
sub
test
push
bound
or
lods
sub
push
shll
xor
ds
es
mov
dec
fbld
int
jp
sbb
mov
imul
mov
jno
dec
aad
xorl
ljmp
jnp
jmp
loopne
orl
push
sub
push
sbb
xor
mov
insb
in
sub
adc
incl
in
sub
test
in
negl
xchg
fiaddl
lods
jae
int3
push
push
jne
dec
popf
xor
aad
cmp
das
fcmovu
dec
inc
xchg
ljmp
imul
fs
mov
das
fwait
rclb
popf
repnz
sbb
movsl
cmp
inc
jnp
mov
sbb
dec
repnz
test
jge
ljmp
push
push
jo
pop
jo
pushf
popf
daa
and
fnstcw
jnp
push
movsb
adc
arpl
sub
jbe
pop
jo
call
enter
daa
xchg
je
cmp
popf
stc
jno
lods
cmpb
dec
loop
testl
push
pop
sbb
pop
lret
daa
lahf
in
hlt
in
sarl
test
xlat
xchg
inc
mov
shll
cmp
js
into
dec
pop
xchg
xor
stos
push
loope
or
sub
aad
or
movsl
lahf
or
rolb
popf
orb
cmp
dec
add
jb
xor
ja
inc
mov
add
or
cmp
cld
movsb
into
lcall
or
mov
sub
lret
dec
outsb
bnd
adc
cli
or
add
mov
pop
and
and
jbe
push
sbb
lahf
int
scas
or
lods
loopne
div
test
lret
test
mov
std
outsb
sahf
and
test
xor
sbb
loop
fldenv
stc
mov
test
data16
iret
js
jecxz
mov
cli
addr16
xor
loop
into
or
cwtl
pushf
into
inc
in
shl
loop
mov
pop
push
mov
adc
jl
imul
push
std
data16
mov
cmp
jecxz
sub
cld
mov
mov
sub
pop
jno
roll
dec
mov
in
imul
nop
cs
xchg
push
jnp
sbb
or
sub
sti
xchg
push
pop
ss
test
pushf
push
ss
jmp
adc
imul
aad
imul
mov
ret
xchg
jb
fildl
je
cwtl
pop
jecxz
inc
mov
cld
mov
sbb
add
in
jmp
dec
fcomps
and
adc
mov
fbstp
jl
adc
mov
sbb
and
fcoml
notb
or
std
shlb
dec
adc
cmpsl
xchg
dec
push
mov
push
leave
dec
lret
cltd
add
sub
insb
inc
pusha
pop
cld
aas
adc
inc
lds
test
xor
mov
mov
movsl
cmp
insl
das
stos
lods
clc
fwait
xorl
movsl
inc
pop
ljmp
xchg
lods
pop
or
loop
mov
and
push
jo
pop
pshufw
pusha
ds
aad
mov
jae
push
mov
jp
push
cmpsl
jle
xchg
test
ret
cmp
adc
inc
adc
ror
adc
pop
pop
out
stos
out
xchg
xchg
out
and
mov
add
and
or
inc
xchg
xor
mov
mov
sbb
push
xchg
pop
mov
adc
test
and
fwait
shlb
add
mov
cmp
arpl
fdivp
fnstsw
frstor
in
sti
xchg
addb
mov
popa
mov
icebp
jp
lods
cmp
fucomi
rorb
mov
jnp
pusha
repz
ljmp
mov
xchg
pushf
lcall
mov
sub
lret
push
adc
jne
and
jmp
insb
pop
bound
jnp
sbb
jle
mov
add
inc
sbb
std
ret
add
fldl
insl
jae
push
cs
cmp
xor
push
cmova
xchg
aad
inc
xlat
or
and
xchg
daa
mov
and
push
pushf
imul
lock
ret
fstpt
push
cmp
sbb
pushf
aaa
in
inc
or
cli
je
int
es
lods
mov
js
in
xchg
sbb
scas
jnp
mull
jecxz
scas
cmp
xor
movsb
lahf
pop
in
push
jbe
xorb
or
dec
pop
enter
daa
xchg
addl
cmc
xchg
dec
push
push
push
push
push
sar
xor
mov
int3
adcl
xchg
xor
inc
sbb
shll
jbe
js
frstor
push
outsb
adc
adc
or
cmp
sahf
mov
cmpsb
out
rcrb
mov
lahf
cld
xchg
sbbb
inc
add
and
xor
push
lret
pop
lds
mov
out
jnp
mov
sbb
inc
push
negl
push
fdivl
mov
sub
rcl
outsb
push
adc
adc
in
or
mov
fdiv
and
test
pop
int
addr16
push
mov
lret
rol
lds
test
cmp
fcomps
arpl
loope
sbb
pop
insl
loop
push
aam
aas
mov
mov
in
fnstenv
test
cmp
jb
lods
cli
lcall
cmp
scas
or
lea
mov
test
icebp
dec
pop
jae
fcoml
mov
or
cmc
cltd
mov
cmpsw
es
lods
cld
dec
lods
cmp
daa
aaa
xlat
mov
jl
call
repnz
in
or
mov
movsl
gs
mov
hlt
dec
pop
cmc
adc
lock
fstps
xor
repz
outsb
ret
mov
sbb
test
add
jp
ja
jmp
mov
sub
into
and
inc
mov
fildl
jge
xchg
dec
inc
inc
adc
sub
lcall
rcll
mov
dec
mov
sahf
dec
mov
inc
fs
ret
aam
fildl
mov
mov
movsb
lock
ja
das
imul
mov
in
add
sbb
das
sti
std
jns
orb
push
cmpsl
xchg
sbb
icebp
aas
mov
lret
or
mov
aaa
les
sbb
push
sub
mov
ret
in
jmp
insl
push
mov
xchg
xchg
in
aam
and
mov
pop
jno
lods
enter
xchg
shll
mov
sub
test
test
xor
cltd
or
out
jle
or
push
or
xchg
jmp
test
fwait
ljmp
pusha
out
shll
sub
pop
or
push
xchg
cmp
pop
add
jp
xor
adc
inc
push
xor
and
push
pop
inc
mov
mov
inc
dec
xor
or
fsubl
push
xchg
cmc
inc
add
push
mov
mulb
or
in
mov
xchg
shll
mov
cmp
or
addr16
test
push
sub
mov
mov
dec
fwait
insl
jg
ret
mov
inc
filds
js
xchg
movsb
int
jmp
pop
lods
mov
out
negb
mov
push
mov
stos
mov
inc
jae
ret
push
jnp
adc
xchg
xor
fsts
and
or
or
xor
or
inc
mov
sbb
popf
sbbb
inc
adc
cmp
outsb
fiaddl
push
xchg
cwtl
ja
sbb
mov
dec
scas
jg
fstl
mov
ror
int
mov
es
jg
push
arpl
inc
dec
inc
subl
shll
movsb
cmpsl
out
cwtl
sti
add
push
push
mov
mov
insl
mov
lds
jo
filds
scas
pop
pop
sbb
jbe
sarl
jmp
push
fs
jbe
scas
mov
dec
sub
enter
daa
xchg
adc
cmp
xchg
popf
jl
insl
dec
dec
rol
push
xor
jbe
fbstp
cmc
lahf
sub
dec
test
insl
jge
inc
lods
sbb
cmpsb
jmp
ja
js
jg
pop
add
sbb
out
loope
and
cmp
ds
jo
movsl
lods
and
sarb
mov
xorb
xchg
add
and
xor
call
ja
stos
push
add
add
test
lcall
stc
jecxz
sub
popf
mov
mov
movsl
xorb
into
jg
enter
enter
pop
leave
mov
jmp
and
iret
push
and
fsubs
idivb
hlt
push
out
rcll
mov
pop
clc
mov
jbe
lds
cmp
cmpsl
outsl
mov
icebp
loop
or
stc
negb
fs
lock
ss
dec
lret
adc
out
adc
xor
dec
out
cmp
pop
insl
or
lcall
jo
loop
pop
cli
sbbl
add
imul
xor
and
lods
jecxz
cmp
and
mov
sub
repz
js
and
mov
jnp
movsb
fwait
imul
mov
jbe
and
sub
shrb
les
pop
int
fsubl
sbb
add
cld
pop
pushf
push
pop
adc
pushf
test
aaa
ucomiss
jp
aad
push
push
inc
xlat
jb
aas
pop
clc
inc
jb
sub
mov
jecxz
nop
add
add
lea
push
sub
xchg
das
in
sbbl
popa
nop
out
pop
mov
xor
inc
ja
xor
mov
mov
inc
hlt
std
and
lret
scas
shrl
negb
imul
insb
xchg
mov
push
and
cld
xchg
adc
and
leave
add
pop
cmp
push
shl
loope
sub
aam
outsl
stos
ret
jae
cltd
es
jge
insl
std
lods
sub
xchg
and
imul
add
mov
lea
and
mov
mov
mov
xorb
jecxz
mov
das
sub
fnstsw
or
sbb
addr16
mov
sub
jmp
push
add
fcomps
lds
jl
adc
js
dec
push
xchg
xchg
jge
bound
pop
add
ja
subb
inc
lods
inc
loope
sbb
fmulp
fwait
push
jno
push
cmp
cmpxchg
mov
bound
insb
in
sub
mov
repz
ljmp
addr16
jp
out
push
mov
fnsave
xor
mov
jbe
dec
jle
divb
insl
or
fbld
xchg
fistl
pop
lds
inc
xlat
out
scas
test
mov
xchg
ss
stos
adc
scas
and
mov
int3
jnp
lret
sub
mov
int3
adc
add
int
ret
mov
inc
lods
repz
sub
popf
cmpsl
sbb
push
mov
inc
push
xchg
out
cmp
sbb
hlt
out
imul
aaa
push
mov
pop
shl
fnstcw
stc
and
leave
divb
add
addl
push
aas
aaa
arpl
add
rcrl
mov
loopne
fiadds
dec
push
fidivs
cmp
jle
or
jns
mov
js
adc
aad
mov
out
enter
daa
xchg
daa
jno
aam
insl
jno
cmp
das
jae
pop
mov
lock
arpl
dec
ljmp
cmp
inc
cmp
test
js
mov
pop
inc
lods
test
rcll
push
loope
push
push
sbb
lahf
ds
aaa
inc
movsl
mov
lret
mov
adc
sbb
inc
mov
vmwrite
cmpsb
pop
ljmp
into
ret
sub
xor
jns
cmpsl
lcall
jbe
mov
fsubrl
lds
outsb
sbb
js
dec
loopne
jg
test
mov
xor
mov
mov
dec
scas
and
cmc
push
and
xchg
fcomp
fisubrs
xor
lret
shrl
mov
aaa
sbb
sbb
test
push
js
xchg
or
outsl
xchg
call
sub
lods
scas
les
loop
dec
cmp
ss
cmp
cmp
aam
ret
out
or
cli
add
lods
xor
cli
add
fisubs
into
out
roll
notb
mov
adc
mov
inc
mov
mov
add
pop
lods
xchg
subb
dec
xlat
xlat
xor
sbb
cmpsl
out
in
jecxz
xchg
arpl
ss
sahf
insb
gs
xor
aad
scas
inc
test
mov
les
mov
xchg
lahf
orl
js
aam
dec
pop
fists
fwait
sub
pushf
push
in
or
cs
inc
repnz
aas
std
sbb
and
jno
sub
mov
movb
std
cwtl
sub
mov
mov
xchg
dec
cltd
ret
mov
dec
pop
inc
aas
dec
lods
lock
das
sub
mov
sti
imul
sti
rclb
xchg
in
pop
loopne
jae
clc
cmpsl
nop
inc
fistpll
in
fcoml
mov
addr16
out
stos
mov
insl
push
mov
mov
pop
pop
pop
push
adc
imul
add
cs
test
adcl
lock
add
mov
mov
fbld
add
xor
int
into
cltd
jp
or
jo
push
lock
or
in
in
mov
in
jne
pop
push
rcl
rol
xlat
pop
pop
mov
jae
dec
in
xchg
lret
add
mov
inc
cmp
xor
cmp
xor
mov
pop
mov
xchg
in
stos
dec
leave
mov
adc
fisubrl
popa
fidivrs
js
jns
hlt
mov
fwait
dec
mulb
cmp
les
mull
aam
jns
ror
in
repz
mov
pop
mov
or
xor
xchg
insb
jp
sahf
fdivs
pop
imul
inc
std
jne
jl
pusha
les
filds
rclb
xchg
add
popa
out
flds
ds
or
sarb
mov
and
pop
pop
insb
cltd
mull
fnstcw
xchg
in
mov
nop
gs
test
pop
sub
les
jp
popa
jnp
push
cmpl
ja
cmp
fisubrl
and
sbb
sbb
imul
out
cld
repz
hlt
mov
dec
mov
leave
insl
mov
hlt
shll
pop
arpl
push
inc
xchg
lods
sbb
adc
fiadds
jle
daa
int3
mov
pop
pop
cmp
lret
fisubs
xchg
jo
cmp
adc
pushf
add
cmp
std
movsb
inc
cmp
push
arpl
jbe
int
jge
mov
push
loopne
nop
rcrb
cld
jno
pop
push
jl
dec
sahf
clc
adc
cli
sbb
xor
mov
pop
lahf
push
and
in
notl
xchg
inc
in
cmpsb
out
jle
in
xlat
and
js
jg
pop
adcb
inc
icebp
xor
pop
iret
push
sub
int3
jl
and
inc
icebp
mov
shr
mov
mov
jg
sbb
inc
sbb
and
push
out
pop
clc
sub
sub
lcall
cmp
xor
sub
mov
outsb
inc
pop
andb
jg
mov
mov
shl
mov
xor
stos
and
push
sub
int
jmp
fcomps
div
lret
push
rol
jbe
imul
or
test
xor
jg
outsl
jo
and
loopne
xor
mov
push
adc
mov
push
mov
test
cli
xor
mov
cmp
xor
fisubrl
and
loopne
inc
mov
adc
test
adc
inc
repz
xchg
andl
loop
cmp
hlt
pop
sub
mov
in
dec
jge
adc
fdivr
ljmp
ret
lea
