enter
jmp
mov
pop
cwtl
xchg
and
mov
cmpb
enter
insb
ljmp
andl
inc
call
pop
ret
lea
push
mov
mov
fdivrp
push
push
lea
push
add
jne
sbb
je
or
fistpll
cs
cmpl
je
xor
mov
lea
pushl
dec
push
std
test
jne
call
sbb
mov
mov
mul
add
mov
mov
outsl
sti
out
pop
pop
pop
pop
push
push
push
push
add
mov
mov
mov
out
insb
mov
cmpl
jbe
inc
and
add
pop
dec
test
jb
inc
mov
push
outsl
adc
and
cmp
je
xor
mov
cmp
je
jnp
outsl
out
xor
mov
adc
and
mov
and
xor
sbb
fnsave
add
rorb
and
bound
or
ret
imul
outsb
pop
jne
and
pop
cld
or
jb
adc
xor
cs
insb
jno
and
mov
leave
mov
mov
rep
daa
movl
sti
neg
fucompp
or
add
jecxz
mov
adc
sub
mov
mov
jmp
mov
add
mov
sub
shr
sub
sub
mov
mov
and
idivl
add
jne
mov
add
or
decl
movzwl
add
mov
add
xor
dec
jne
movsb
inc
mov
add
ja
imul
jne
scas
lods
int
pop
add
push
repz
fiaddl
and
inc
je
mov
mov
xorb
inc
jmp
add
jmp
adc
sub
or
sub
sub
jmp
int3
mulb
jmp
adc
jmp
sub
mov
jnp
repz
rol
mov
ret
jecxz
push
and
adc
iret
imul
incl
call
xor
xor
push
push
push
pop
ret
outsl
jl
mov
or
jg
or
addr16
mov
mov
push
pop
dec
jne
outsb
in
inc
ss
sbb
inc
cmp
add
mov
inc
inc
popa
xor
push
and
inc
insb
mov
das
sbb
and
int3
cmp
je
mov
xor
jbe
andl
adc
add
popa
sarb
jne
bound
mov
pop
jecxz
int3
push
cmp
movb
stos
je
fsubrs
jl
adc
hlt
add
add
adc
add
cmpl
xchg
xor
sub
jmp
add
xchg
rcr
xchg
lods
and
in
in
pushl
fmull
sti
jge
mov
add
or
adc
sbb
clc
test
sbb
cmp
push
mov
and
out
xchg
aas
inc
sub
mov
push
js
sbb
divb
popa
sbb
add
insb
mov
mov
mov
or
je
incl
mov
cmp
inc
rol
inc
out
mov
push
daa
or
inc
clc
and
pusha
addr16
adc
and
or
pop
or
stc
inc
clc
in
cmp
daa
decb
jne
jp
test
mov
aaa
jl
mov
jle
push
and
test
mov
stc
push
or
dec
addl
into
inc
inc
or
xor
pop
jmp
push
xor
outsl
popa
mov
pop
ret
ja
in
outsl
cld
fimull
div
test
jne
or
or
imul
jle
lods
xlat
dec
clc
inc
mov
push
cmp
arpl
movb
clc
scas
js
dec
test
in
movsl
fbstp
test
inc
xor
lea
cmp
adc
add
cmp
jbe
add
jmp
jl
in
pop
mov
push
or
daa
inc
adc
adc
add
push
push
push
cmp
push
rorl
cmp
or
mov
cmp
xchg
xor
and
js
xorl
pop
lods
pop
adc
subb
push
stc
or
push
push
fidivrl
mov
xchg
dec
sahf
lea
mov
sbb
push
add
in
xchg
arpl
fs
jne
clc
jb
jae
add
mov
aaa
adc
fnstsw
add
es
ja
sub
add
sbb
or
cmpsl
sbb
nop
push
and
and
stc
fistl
or
mov
push
out
cli
clc
test
add
test
mov
das
sub
inc
ret
ret
or
dec
jl
mov
xor
call
push
and
jo
xchg
addr16
jl
nop
imul
ss
xor
pushf
mov
push
and
iret
fnstenv
mov
inc
sarb
pushf
jl
rolb
jb
leave
leave
in
push
clc
push
push
mov
add
nop
cmp
fimuls
test
add
jp
sbb
add
mov
scas
adc
addl
sub
or
sbb
add
jmp
jne
and
pop
cmp
test
or
sbb
idivl
push
dec
mov
pshufw
inc
xlat
addr16
dec
test
jl
inc
ret
adc
adc
std
jae
and
or
inc
dec
jne
lea
jae
lods
mov
mov
mov
mov
pop
movsb
adc
mov
dec
fsubrl
data16
int
sub
imulb
push
adc
xor
push
push
push
cmp
addr16
sbb
xlat
sbb
fstl
cmp
pop
and
fsubs
adc
or
mov
in
adc
inc
push
mov
movsb
xor
ret
adc
dec
pop
lret
add
int
mov
stc
and
add
jmp
xchg
outsb
je
or
outsl
popa
fs
imul
popa
jb
inc
sbb
outsb
push
push
popa
jg
ljmp
inc
outsl
jb
imul
push
arpl
outsl
jae
dec
popa
fucomi
mov
cmp
and
fs
cmp
jne
inc
imul
sti
outsl
adc
jb
jne
insb
inc
pop
mov
negb
cmovbe
ljmp
insb
dec
outsl
jbe
dec
gs
fs
das
mov
bound
dec
outsb
jb
enter
pop
ja
insl
sbb
pcmpgtw
ja
push
push
lods
aam
out
es
into
sbb
je
adc
xor
or
jne
jns
orl
push
pop
sub
mov
sub
adcb
adc
ss
or
sbb
push
shlb
or
and
adc
adc
jne
jne
add
mov
jle
xor
mov
mov
sahf
cs
push
push
les
lock
adc
dec
int
imul
pop
ret
bound
inc
add
mov
lahf
cmp
inc
loope
jecxz
xchg
insl
or
fcomip
pop
mov
jmp
xor
div
add
inc
add
xor
push
sbb
add
jae
sub
out
idivl
clc
add
or
dec
mov
sub
scas
pop
mov
in
call
jnp
es
aaa
add
and
inc
mov
and
mov
arpl
push
adc
imull
insb
aas
dec
add
add
add
cli
lcall
add
loopne
pop
add
movsb
ret
nop
add
or
rolb
jl
or
nop
pop
pop
daa
test
inc
cs
testb
out
adc
inc
or
mov
pop
inc
or
inc
inc
inc
add
nop
pop
push
adc
ja
pushf
insb
adc
mov
enter
mov
les
out
and
cmp
and
inc
inc
pcmpgtb
stc
inc
adc
xor
mov
scas
in
inc
fldl
icebp
push
fadds
sbb
adc
and
mov
pop
inc
mov
pop
aaa
push
pshufw
inc
imul
sbb
inc
fiadds
addr16
sub
add
sub
dec
sub
add
nop
das
pop
pop
insb
aaa
pusha
add
leave
jl
mov
enter
pop
shl
fadds
sbb
jae
pop
dec
sti
and
mov
pop
dec
daa
sub
dec
inc
dec
pop
dec
insb
or
nop
jo
cwtl
xchg
mov
lods
sbb
iret
hlt
pop
and
jnp
or
lcall
push
jecxz
sar
add
fucomi
add
add
adc
xlat
and
xchg
xor
fwait
pop
xor
inc
sahf
mov
insl
imul
mov
inc
test
add
pusha
or
mov
mov
mov
fsubr
push
xchg
pop
lahf
xchg
dec
cmp
and
and
adc
sub
push
mov
and
add
add
fcomp
ficomps
add
or
or
add
sti
in
sub
das
adc
pop
sub
popf
add
dec
insl
pop
pop
xchg
mov
mov
mov
cmp
cmp
inc
popa
inc
pop
add
inc
dec
aad
jg
mov
dec
push
pop
popa
inc
pop
push
push
dec
pop
push
dec
dec
lods
or
dec
std
inc
or
sub
sub
add
add
testb
cmc
mov
add
dec
fwait
mov
inc
and
add
jae
mov
and
jmp
add
cmp
and
mov
pop
add
or
jle
mov
sbb
mov
cld
xor
addr16
pop
adc
sub
shll
or
repz
mov
fidivrs
xor
jbe
popa
ja
bound
scas
shrl
sbb
mov
dec
movl
and
fnsave
insl
push
adc
push
aaa
sub
add
push
addr16
aaa
or
or
fldcw
or
sub
popa
cmp
fdiv
add
daa
pop
add
xor
or
and
push
mov
mov
lods
mov
mov
into
mov
outsl
add
fcomi
pop
mov
add
mov
daa
aas
pop
fcomp
aaa
push
fisttpll
and
sbb
insl
sbb
add
cmp
inc
aaa
xchg
mov
scas
loope
dec
sbb
sbb
fnstenv
mov
data16
cmp
inc
push
jmp
ss
mov
push
and
mov
adc
add
push
push
push
inc
in
je
ret
xchg
add
jl
xchg
mov
add
and
inc
fcoms
xchg
sbb
mov
mov
xchg
sti
jb
pop
fmul
push
cltd
sbb
insb
sub
sbb
adc
mov
or
pusha
or
and
or
dec
push
sub
adc
or
xchg
and
mov
ss
pop
add
dec
pop
mov
jle
adc
lods
lret
movsb
lret
add
lods
add
aas
aad
dec
pop
data16
fwait
jnp
xor
sub
pop
xlat
cli
outsb
or
add
push
das
scas
or
mov
add
sbb
or
imul
dec
add
pop
push
mov
cli
imul
mov
mov
fcoms
pop
xlat
xchg
and
and
out
mov
jne
loope
add
jne
or
mov
add
jns
out
testl
and
add
mov
mov
or
iret
ss
push
fistpll
sub
stos
push
or
cmp
mov
inc
mov
cmp
iret
test
lods
sbb
fcomip
sti
ficoms
sbb
packuswb
pop
sbb
jle
lods
mov
int
cmpsb
jl
add
or
fists
xchg
add
fcmovne
add
out
ss
or
add
ljmp
xor
movsb
movsb
jecxz
mov
mov
loope
movsb
push
add
out
insb
add
cmp
pandn
ficoms
mov
inc
loopne
mov
int3
add
fldcw
fcoms
movsb
add
fistpll
fwait
unpckhps
stos
fucomp
js
jl
in
insb
in
mov
dec
outsb
or
dec
cmpsl
in
sbb
inc
outsb
pop
inc
xchg
pop
add
jo
mov
addb
pop
inc
aaa
pop
push
inc
cmpb
jle
aaa
adc
ficomps
sbb
fcoms
add
out
fistpl
adc
adc
mov
lds
dec
cmp
icebp
dec
dec
sarl
and
div
divb
jl
add
and
aas
rol
mov
scas
dec
jbe
cs
insb
jnp
sub
pop
jl
int3
push
lahf
pop
mov
and
or
or
sbb
add
mov
sbb
add
cmpsb
add
test
sub
pop
insb
adc
das
inc
out
jns
in
lcall
and
in
pop
lods
cmp
or
nop
jecxz
out
in
mov
ja
movsb
out
push
lret
mov
jge
ret
mov
dec
dec
es
inc
mov
or
fisttpl
insl
bound
out
je
pushf
sbb
mov
mov
mov
lods
outsl
mov
xchg
out
testl
push
and
imul
in
xor
test
cmp
dec
sbb
aaa
add
jb
lret
cld
pop
dec
add
add
adc
cmc
or
loope
ja
add
mov
lsl
out
adc
sbb
aaa
xchg
or
iret
mov
fst
sbb
out
insl
fcompl
cwtl
sahf
addr16
sbb
daa
test
mov
clc
push
or
mov
cmpsl
test
out
leave
or
or
decb
pop
pop
cwtl
push
outsb
out
loope
ljmp
jne
mov
out
jb
xlat
push
jg
mov
fidivl
gs
jl
movsl
cmp
mov
dec
dec
and
ss
jg
sbb
cmp
sub
or
jge
ja
cs
dec
mov
xor
negl
mov
insb
adc
repz
outsb
xorl
pop
cwtl
push
sti
mov
cmp
xor
lahf
filds
out
hlt
cmp
out
dec
xor
add
fildl
daa
incl
pop
sbb
mov
mov
push
inc
xlat
push
pop
out
aaa
mov
adc
add
test
mov
xchg
fmul
and
xor
xchg
lds
add
mov
add
test
push
push
mov
add
aad
insl
fisubl
in
roll
mov
mov
mov
xchg
adc
add
jo
push
xstore-rng
cmpsl
adcl
or
scas
cmp
iret
data16
fidivs
lods
push
jbe
xor
pop
fsubrs
xor
subl
xor
jecxz
je
out
add
xor
fists
enter
sbb
pusha
dec
add
out
ret
adc
mov
mov
push
sti
ret
mov
je
mov
rcrl
cmp
mov
add
arpl
jb
sahf
push
mov
xor
or
ss
fucom
sbb
aaa
inc
or
stos
fistpll
out
sahf
rcrb
pop
dec
pop
or
jbe
or
sbb
xor
scas
cmp
xchg
fiaddl
jp
fsubs
and
jo
cmp
dec
ss
push
push
ja
xchg
aas
jo
dec
mov
cmp
pop
cmpsb
xor
jg
add
pop
lret
shlb
adc
push
repz
out
loop
sub
mov
cmpsl
add
xor
jno
rolb
xlat
mov
ja
iret
push
nop
push
insl
fldl
mov
repz
mov
je
mov
sub
sbb
in
pop
rorb
or
add
inc
test
mov
mov
addb
jl
add
xchg
pop
cmp
inc
lahf
xchg
cmp
cmp
repnz
sahf
insl
int
js
out
add
adc
add
scas
adc
sub
jle
sti
mov
fstps
or
mov
jl
cmp
sub
sbb
xchg
push
rcll
mov
push
outsb
add
mov
adc
fstp
mov
push
inc
adc
pop
sub
je
fcmovnu
jae
lods
cmp
movsb
nop
ss
nop
sbb
daa
repnz
les
leave
jmp
cmp
cmpsb
divl
std
in
lock
push
scas
adc
loope
imul
pop
fldl
mov
add
xor
pop
push
scas
or
sub
addr16
jno
and
xlat
lods
adc
movsb
lahf
lret
lods
and
jo
negl
xchg
sti
sbb
lds
xchg
dec
arpl
stos
pop
mov
cmpsl
hlt
sbb
or
and
lods
aaa
xlat
movsb
push
pop
inc
and
sub
fsubl
or
add
inc
fistps
pop
shll
sti
push
data16
mull
jne
xchg
in
jo
jb
xchg
imul
jns
les
arpl
fstpt
cmp
jnp
xchg
and
sub
pop
push
and
mov
sbb
sbb
and
movswl
add
fiadds
shll
rorl
imul
ret
bndstx
xor
push
adc
lods
adcl
mov
fnstcw
fidivl
cmpb
aam
and
loopne
add
div
hlt
adc
gs
inc
inc
bound
xor
inc
jo
jo
inc
cmpsb
mov
cmp
jge
and
scas
push
lock
stos
add
and
cld
adcb
inc
int3
add
inc
cltd
loope
push
cld
dec
mov
sbb
pushl
in
jo
cmpsl
jp
data16
inc
sbb
push
jbe
mov
mov
sbb
and
mov
mov
nop
clc
pop
scas
into
rorb
or
sar
add
add
xor
loope
and
repz
sbb
ret
pop
and
rorl
inc
ja
cmp
lods
xlat
sbb
pop
les
add
imul
rcll
and
repz
mov
insl
adc
push
fdivrs
aaa
iret
sahf
imul
lahf
adc
mov
adc
dec
in
xor
iret
dec
fcmovu
stos
xchg
push
mov
mov
js
and
cmp
loope
in
test
or
in
sub
push
fsubs
sbb
fsubs
adc
std
mov
fsubrp
add
jp
daa
inc
test
popa
xor
leave
shll
js
cld
ljmp
dec
mov
pop
mov
xchg
data16
push
ror
fstpl
bound
lds
aas
push
xchg
pop
mov
pop
inc
aam
cmp
sub
popa
ja
fs
shlb
cmp
jl
cmpsb
roll
and
fisttps
or
fildl
cmp
cmp
out
mov
cmp
fisubs
xor
lahf
mov
dec
jmp
dec
mov
push
les
adcb
ljmp
lods
sub
mov
add
test
pop
jno
xbegin
cmp
stos
or
inc
push
iret
mov
inc
aaa
mov
sub
or
repz
iret
mov
inc
test
orl
pusha
movsb
jl
shlb
outsb
sub
jbe
cwtl
aad
cmp
int3
or
mov
bound
setbe
loope
dec
popa
mov
xor
aam
iret
pop
test
sarb
cmp
loop
inc
jmp
xchg
dec
lea
cmp
ret
add
ficompl
mov
cmp
nop
sbb
lods
pop
dec
repz
and
jl
dec
cltd
pop
ror
arpl
mov
shll
mov
push
sti
pop
rcrl
jmp
pop
icebp
pop
jbe
or
fdiv
and
mov
pop
je
dec
out
fisubrl
sbb
es
fwait
movsb
add
sahf
adc
push
int3
icebp
fcompl
or
jns
cmp
dec
jo
out
mov
cmpsl
ss
mov
jmp
sub
imul
xor
fcoms
or
dec
add
imul
outsl
xor
add
cmp
out
add
push
jns
sbb
fiaddl
pushf
xchg
lock
ret
push
ret
int
dec
mov
push
in
icebp
sub
addl
pop
out
aas
iret
xchg
sbb
lods
fnsave
and
scas
mov
xor
xor
sub
rcrl
popl
fdiv
frstpm(287
mov
sbb
mov
cld
loope
sbb
or
push
jg
adc
push
sbb
inc
int3
stc
pusha
push
stos
lcall
lahf
jnp
add
add
sub
arpl
sub
adc
sub
adcl
and
push
js
test
lcall
data16
adc
pop
push
pushf
rorb
xor
stos
or
aas
dec
jp
lds
xchg
mov
mov
push
test
aas
and
es
sbb
cltd
lock
xlat
pop
xchg
mov
stos
xlat
inc
aaa
stos
and
in
rclb
adc
test
test
movsl
pushf
mov
mov
das
aas
cmp
sahf
in
pop
adc
insl
enter
inc
xlat
and
fxch
xorb
pop
push
jmp
sbb
or
mov
and
sbb
add
cmp
cmp
add
out
jb
loope
lock
fcoms
movsl
add
sbb
pop
mov
push
dec
imul
jbe
pushf
cmpsl
pop
sub
out
stos
in
loope
xor
scas
pop
pop
cwtl
ja
rolb
rcrl
mov
loop
or
push
jae
mov
out
inc
jmp
mov
aaa
pop
push
pop
push
adc
repz
dec
xchg
mov
mov
iret
mov
addr16
inc
add
bound
pop
mov
dec
lods
sbb
push
sbb
ret
push
sbb
fwait
sbb
mov
subl
je
fs
in
icebp
add
cmp
and
sub
pop
lcall
ja
jo
je
sub
arpl
call
cmpsl
jmp
js
xor
and
dec
mov
subb
shrl
into
add
jle
mov
out
scas
cld
ror
sub
xchg
jmp
xchg
inc
and
cld
push
xor
cmc
or
fwait
in
icebp
outsb
mov
sbb
xor
loop
shl
out
adc
jecxz
push
push
orb
lods
outsb
ja
es
xchg
les
add
sbb
add
out
andl
pop
inc
lods
mov
mov
mov
pop
mov
mulb
mov
scas
es
out
and
arpl
in
add
push
mov
in
dec
jno
fcmovnu
jns
jp
jbe
addr16
jnp
sbb
add
das
or
push
or
cmp
mov
fdivrs
imul
add
pop
imul
mov
aaa
xchg
js
fcomp
lods
popa
lds
cltd
xchg
negb
cmc
or
fiadds
and
out
cmp
lods
popa
and
cli
dec
lock
stos
fidivl
push
fidivrl
aaa
leave
mov
scas
and
sub
inc
lahf
sbbl
out
pop
sub
scas
popa
pop
jb
scas
push
xchg
mov
loopne
dec
mov
sub
mov
jl
and
dec
fbstp
or
es
out
aam
mov
xchg
inc
repnz
test
ficoml
lahf
subl
xchg
js
sarl
jno
scas
out
sub
jbe
outsb
mov
mov
mov
mov
enter
add
jge
add
cli
jge
and
xchg
dec
jmp
jne
xchg
stos
jbe
daa
mov
lret
mov
bound
ficomps
rorl
or
movsl
push
stc
add
inc
sti
lret
adc
pop
push
cs
addr16
rcrb
mov
jge
and
in
cmp
add
jecxz
ret
loop
outsb
or
mov
imull
lret
cmpsl
mov
or
aam
sub
sahf
jnp
inc
inc
pop
mov
cs
and
sub
stos
add
and
push
mov
fsubrs
sub
lods
fisttps
das
pop
ss
lock
sbb
fucom
or
inc
gs
dec
add
aam
lahf
jle
ss
insl
sbb
fwait
xchg
pop
or
iret
loopne
insl
test
lea
sbb
rclb
fwait
mov
movl
das
jp
aas
daa
sbb
js
mov
sbb
pop
push
sbb
insl
and
addb
xchg
or
mov
js
lahf
xor
dec
sbbb
xor
and
xor
fbld
daa
adc
rol
sub
sbb
rorl
shlb
xlat
push
inc
out
test
or
jecxz
mov
fs
imul
arpl
mov
xor
xor
idivb
aam
fdivr
gs
xor
shll
xlat
fcomps
add
push
add
les
mov
xlat
sub
jne
sbb
je
fidivs
cs
push
incb
jb
pop
scas
add
mov
imul
scas
pop
dec
dec
dec
jg
scas
scas
pop
cld
sarl
in
shlb
push
mov
jbe
divl
pop
mov
lcall
ret
add
insl
push
lods
outsb
clc
xorb
mov
lahf
pop
xchg
ss
xor
jb
rclb
fstpt
push
jp
sbb
mov
xor
loopne
sbb
sub
push
cs
fisubrs
loope
pop
mov
test
inc
sbb
loopne
fbld
xchg
mov
add
stos
pusha
mov
or
push
sub
test
add
adc
cmp
mov
sub
xor
lock
adc
and
adc
jno
and
daa
mov
dec
xchg
xor
and
mov
in
inc
push
pop
pop
in
mov
leave
aaa
fdivr
loopne
sti
cs
or
and
inc
iret
popf
lcall
and
sti
push
cmp
subb
out
sbb
mov
fs
push
xchg
outsl
test
nop
jnp
loop
jnp
push
fcoms
adc
std
pop
fisttps
sahf
pop
icebp
stos
xchg
shll
mov
pop
or
repz
xor
sahf
aas
dec
out
sbb
pop
mov
mov
fldl
add
and
pop
std
sub
xlat
flds
loopne
mov
aaa
pusha
lods
and
scas
sub
and
fidivs
or
and
pop
and
pop
sti
movsl
sbb
pop
ja
data16
lea
outsl
pop
inc
pop
pop
or
sbb
sbb
invd
rcrb
push
adc
xlat
loopne
js
sbb
push
sbb
ja
mov
test
push
inc
ljmp
jbe
and
add
notb
xchg
stos
int3
or
aas
mov
cli
lods
add
push
lcall
fsubrs
fsubl
pop
fisubrl
cmp
stos
stos
sbb
push
adc
inc
shll
mov
pop
sub
clc
sub
cmc
les
inc
loopne
jnp
popf
xlat
cmpsl
clc
clc
enter
movsb
jnp
mov
adc
fbld
movsl
rcrl
sub
add
or
cmp
insb
cmp
fbld
rdtsc
and
outsb
lds
sahf
jg
rolb
addl
daa
add
inc
cld
test
mov
das
iret
adc
cmp
mov
sahf
sub
fnstenv
and
push
mov
enter
sub
jmp
negl
movsl
jle
mov
lods
nop
or
adc
repz
imul
inc
aaa
add
pop
add
push
mov
sub
pop
mov
pop
test
out
mov
add
cld
repz
or
faddl
pop
sub
out
adc
mov
mov
mov
data16
adc
sbb
cwtl
mov
cmp
dec
mov
inc
adc
pop
or
mov
sub
cmp
mov
mov
xchg
add
xor
out
mov
movsb
mov
inc
clc
mov
mov
repz
arpl
jnp
pop
push
imul
mov
stos
test
daa
fsubrl
leave
mov
add
test
comiss
adc
and
mov
fldl
jle
sub
add
pop
cmp
xor
or
adc
fwait
loopne
push
insb
int3
in
js
sbbb
dec
hlt
pop
ret
ret
repz
mov
xchg
movsb
cmpl
jmp
sbb
fwait
pop
pop
pop
adc
or
bound
adc
addb
or
or
loopne
xchg
movsb
add
pop
inc
pop
das
sub
rorl
cmp
mov
inc
xchg
mov
addr16
mov
arpl
or
cmp
mov
sub
push
xor
stos
daa
sub
cwtl
sub
pusha
inc
cmp
dec
les
das
in
xor
lcall
sbb
mov
loopne
outsl
lods
sub
dec
in
lods
js
and
call
in
imulb
and
cld
bound
push
insl
and
in
fiadds
std
fidivs
xchg
push
and
insl
cmp
fadd
add
imul
imul
xor
loope
outsb
insl
sbb
outsb
aaa
das
mov
ja
loope
adc
aam
insl
sub
imul
outsb
pop
sub
movsb
out
aas
add
sub
sub
ficoms
ret
adc
adc
out
sbb
jae
mov
insl
push
xchg
loop
fisttpll
push
jo
bound
and
pushf
xor
jb
xor
ret
push
orb
add
or
cs
mov
int
sub
es
shll
cs
lods
jne
sbbl
pop
mov
mov
out
mov
and
mov
and
orl
cmp
movsl
sbb
add
sub
outsl
aam
push
add
or
jne
sbb
cmp
int3
aaa
mov
aam
aas
jbe
rorb
push
add
and
xchg
shr
in
scas
insl
dec
call
cld
jb
sbb
xor
cmp
xorb
test
ss
cmp
jno
bound
jns
sub
sub
outsl
or
and
mov
xlat
mov
subb
inc
pop
mov
xor
mov
sbb
sub
sub
scas
stc
aas
clc
nop
sub
jns
inc
jno
and
mov
xor
or
inc
pop
adc
jl
mov
xor
jne
add
cmc
add
in
mov
ret
in
sbb
iret
call
mov
add
xchg
and
insl
sahf
neg
jge
mov
popf
sub
loope
movsb
push
leave
add
dec
pop
shll
cmpsb
pop
sub
sbb
ss
xacquire
frndint
or
scas
cmp
inc
sbb
jo
scas
push
xchg
adc
jae
test
add
pop
mov
add
push
jns
aad
frstor
mov
int3
jae
xlat
mov
in
and
insb
ja
out
fisubrs
in
int3
popa
or
add
and
sbb
and
adc
stc
mov
dec
adc
or
shld
dec
xor
aas
outsl
lods
push
fwait
jae
add
mov
xor
push
sub
rcl
divl
insl
and
ljmp
jp
add
shlb
push
xchg
jnp
fistpl
mov
xchg
and
enter
pop
mov
xacquire
add
cmp
and
push
leave
outsb
pop
sub
jp
mov
push
lea
mov
mov
pop
rcrl
push
mov
add
mov
test
cmp
lock
bound
rcll
rolb
fcmovu
and
or
nop
mov
es
jl
repz
jl
lea
or
addr16
push
pop
sarl
add
push
adc
sbb
adc
xor
pop
cmpsl
sbb
into
or
adc
lods
add
add
test
mov
xor
shll
js
sub
add
testb
mov
cmpsb
or
dec
push
push
inc
loopne
dec
popf
rorl
cmc
int
sbb
adc
and
or
repz
push
ljmp
cmpsl
push
fucom
push
iret
mov
ljmp
push
push
out
jbe
mov
aam
je
inc
dec
push
sub
pushl
jp
sbb
insl
ljmp
cmp
xor
dec
adc
sbb
and
fisttpll
inc
repnz
mov
add
xor
aaa
dec
sbb
out
xchg
scas
jno
xor
inc
push
jo
cwtl
dec
or
sbb
and
cmp
jl
mov
mov
mov
inc
and
pop
stos
aam
push
inc
and
imul
xor
pop
iret
cmp
stos
int
sbb
dec
fmull
rolb
fnstsw
and
add
fldenv
mov
sar
data16
fistpl
push
xchg
pop
adc
mov
subb
sbb
rcl
add
mov
xor
lret
outsl
adc
add
shl
and
test
add
inc
sbb
dec
adc
sub
movb
jg
movsb
sub
sub
cmpsb
les
loope
paddusw
fcoms
cwtl
pusha
add
or
es
dec
clc
sbb
sbb
sub
xchg
cli
aad
sub
lods
addr16
outsb
outsb
pop
mov
add
dec
add
cmp
cmc
test
call
shl
xor
sbb
and
jbe
add
sti
jo
fists
idivl
or
fcomp
outsl
inc
addr16
jno
add
neg
mov
or
loopne
lahf
rcr
xor
or
and
and
push
sub
add
shr
insb
adc
cmp
subb
sbb
mov
dec
addr16
leave
adc
test
and
ljmp
mov
lahf
sbbb
xor
daa
js
dec
lock
xchg
mov
fwait
sub
jo
das
or
pop
mov
add
fistpl
push
or
fdivs
cmp
jne
mov
fwait
push
cmp
stos
jo
test
jp
adc
adc
dec
pop
or
nop
fcoms
xchg
mov
lods
inc
mov
fucomip
idivb
in
js
jecxz
jl
xor
and
clc
mov
notb
add
xchg
data16
out
mov
and
jle
or
sbb
fs
jo
lretw
loope
movl
gs
sub
pop
sbb
sahf
mov
iret
fstpt
fsub
mov
test
ficoms
jbe
pop
mov
adc
xor
sub
pop
loope
popf
lcall
xor
and
andb
dec
mov
sbb
outsl
xchg
clc
pushw
and
pop
sbb
pop
outsl
insl
cmp
jecxz
jnp
sub
fwait
rcrl
shrl
and
jb
addr16
sub
movl
sub
and
fwait
adc
shll
imul
xor
lods
jae
add
jb
faddl
sub
fimull
inc
mov
dec
jle
mov
xchg
roll
xchg
pop
xchg
ret
mov
adc
jo
pop
pop
jle
andl
sti
jmp
push
inc
loop
bound
out
lods
xor
jbe
pop
pop
ja
orb
fstpl
mov
addb
inc
push
sbbl
es
cmp
lods
mov
xchg
les
add
mov
aaa
dec
jg
xchg
sahf
les
js
into
int
stos
int
std
int3
andl
push
mov
test
push
pop
adc
pop
pop
es
or
xlat
inc
fbld
and
mov
fwait
mov
pop
scas
mov
mov
leave
in
aad
mov
scas
inc
push
pop
add
jecxz
insb
test
push
sbb
xlat
fiadds
shll
xor
inc
arpl
ljmp
xchg
addr16
pop
sub
push
adc
xor
lock
or
sub
jb
ret
popa
fucomp
hlt
push
bound
xor
in
les
push
stos
dec
ljmp
sub
mov
rol
iret
dec
loopne
xchg
es
push
stos
push
jb
add
inc
and
outsl
mov
mov
inc
push
and
adc
das
lods
sub
hlt
add
push
scas
outsb
fists
push
or
into
pop
popf
pop
and
rorb
dec
sahf
sub
sbb
or
dec
pop
pushfw
inc
sahf
push
fnstsw
enter
xchg
loope
cltd
popf
int
rcll
daa
fucomip
and
leave
je
aaa
mov
pop
push
decl
fiaddl
lret
in
inc
push
loopne
sbb
mov
cli
jmp
jnp
loopne
loopne
mov
fldl
dec
mov
arpl
mov
ss
jl
xchg
or
add
push
xchg
pop
adc
or
movsl
ret
jp
aad
js
iret
xchg
cwtl
ret
sub
push
jno,pn
jb
inc
mov
sbb
sbb
loop
imull
or
add
pushf
add
mull
cltd
dec
vhaddpd
inc
enter
jmp
pop
jecxz
cmp
xor
scas
or
popa
mov
pop
xchg
mov
push
out
js
jp
or
fisubrs
pop
add
inc
cmpsl
sbb
push
scas
bound
jecxz
pop
les
scas
jmp
cmp
mov
cmp
pop
pop
je
insl
xchg
test
in
push
cmp
or
cs
pop
jl
insl
adc
jne
push
push
xorb
dec
push
daa
sbb
shrb
out
das
add
sbb
pop
xchg
push
xchg
mov
adc
dec
add
pop
cmpsl
jp
jbe
aam
push
shrb
pop
jmp
cmp
pop
xlat
adc
loop
xchg
mov
xchg
movnti
nop
mov
push
insb
scas
outsb
out
int
daa
jge
dec
cmpsb
or
popa
xchg
jle
push
insb
imulb
and
dec
jo
cmp
imul
fadds
and
arpl
fmull
pusha
ja
push
popa
das
sbb
push
cmp
je
fcoms
js
int
test
xchg
rcrl
or
rorb
stos
clc
aad
sub
xor
cltd
jge
jne
mov
mov
push
mov
mov
testl
les
sahf
shll
xor
xchg
cmp
shrl
lcall
xor
xchg
cltd
xchg
adc
push
dec
push
dec
push
data16
sub
arpl
fwait
aam
fstpt
pop
push
xchg
popf
inc
nop
push
das
les
out
ret
popf
fistps
rcr
cltd
cmc
ficomps
xchg
iret
adc
ds
sub
dec
or
rol
mov
call
leave
inc
sub
outsl
xlat
mov
adc
loopne
repz
xor
notl
lret
mov
or
xor
rolb
ret
js
push
pop
add
sbb
loop
cs
xchg
cmp
outsb
mov
xchg
jno
cmp
xor
aaa
inc
inc
cltd
cmp
testl
divb
loopne
pop
lds
sahf
movsb
aam
lods
pop
outsl
lods
add
sahf
stos
outsb
cmpsl
inc
inc
std
cli
pop
repz
or
or
shlb
push
cmp
mov
cmp
rcrb
push
jo
jns
push
popa
movsb
sbb
insb
or
add
mov
cmp
aam
mov
lea
or
jg
lods
loope
lods
call
add
push
fstps
adcb
sub
jne
add
jae
dec
add
mov
add
jmp
into
in
push
inc
mov
jnp
xchg
push
push
scas
pop
lods
bound
scas
jmp
mov
adc
data16
push
hlt
loopne
add
js
fildl
mov
test
enter
push
sub
push
or
jp
add
mov
push
adc
and
xchg
stos
lcall
adc
fs
inc
add
dec
jae
jp
push
pop
in
mov
lods
cmp
pop
mov
lea
adc
das
cli
pop
sarb
negl
sahf
jnp
cmp
testl
inc
xor
sbb
cmp
inc
nop
adc
and
bound
movsb
push
fistpl
mov
push
out
aaa
testl
mov
aaa
in
subb
inc
loopne
jl
scas
std
cli
mov
pop
sub
inc
push
sbb
jns
sbb
jnp
jle
push
aaa
adc
jne
push
jo
and
sbbb
es
imul
test
loopne
mov
out
test
pusha
xlat
xchg
sti
decb
sbb
xlat
or
lea
or
mov
data16
out
testl
test
jp
push
xlat
fidivs
and
es
addb
mov
scas
sarl
int
inc
cmpsb
push
pop
xlat
sbb
jl
pop
repz
fcoms
stos
mov
xor
iret
pop
jno
shlb
mov
out
inc
pushf
mov
mov
outsl
add
gs
cmp
mov
mov
and
cmp
test
pusha
int3
and
lds
lock
mov
std
mov
and
popa
imull
inc
in
cld
ja
or
dec
mov
leave
sbb
inc
mov
pop
shrl
stos
pop
int
mov
sti
ljmp
add
mov
in
mov
add
add
addl
pop
iret
add
loopne
sbb
ret
cmovge
mov
ja
xlat
xorl
mov
xchg
call
jns
je
fstpt
movsb
ljmp
shll
in
mov
sbb
lea
cmpsl
xor
pop
ljmp
pushf
ret
add
add
fwait
push
and
mov
lea
xor
out
push
aas
sbb
js
aas
jnp
or
jo
mov
mov
xor
pop
xor
stos
ss
inc
mov
dec
test
in
jp
sbb
ret
push
jo
push
mov
cmp
out
mov
andl
cwtl
inc
mov
in
push
call
pop
pop
xor
add
in
cmp
ds
or
test
sbb
addr16
loop
jp
dec
leave
sbb
sbb
push
into
ds
lods
pushf
mov
xchg
mov
add
dec
pop
gs
cmp
xchg
sbb
in
fadds
jmp
pusha
xlat
test
ret
loope
jecxz
jnp
cmp
ret
gs
add
inc
loopne
dec
rorb
orl
xor
jnp
ljmp
jmp
adc
fisttps
sub
inc
jle
dec
xor
jle
dec
and
sahf
js
int
test
adc
fmul
inc
out
aaa
jle
push
and
out
cmc
adc
adc
aas
enter
nop
adc
cmp
mov
jp
sbb
add
adc
sti
std
cmp
arpl
and
nop
bound
pop
mov
nopl
je
add
pop
ret
mov
imul
sub
cmp
add
add
xchg
and
mov
dec
cmc
and
mov
mov
jmp
sbb
adc
rorl
dec
ss
testl
add
fisubl
jnp
sarb
mov
mov
sbb
pop
aaa
fstpt
inc
or
es
loop
cmp
sbb
scas
dec
mov
in
dec
ret
in
ja
iret
dec
test
stos
jnp
sub
inc
jmp
popa
movsl
ds
aaa
and
adc
lret
cwtl
sti
popf
dec
negb
jnp
pop
sbb
cmp
sbb
ror
mov
insb
adc
inc
inc
cmpsl
adc
push
stc
js
dec
mov
aaa
cmp
push
int
adc
fwait
in
test
mov
cmpsl
and
and
aad
repnz
dec
push
xchg
mov
outsl
adc
cvtdq2ps
or
mov
insb
cmp
jns
xchg
cmp
xchg
cmp
ror
andl
xchg
cmp
inc
push
bound
test
push
xchg
int
loopne
adc
movsb
inc
insl
lahf
roll
mov
fwait
adc
xor
int3
xchg
insb
out
cwtl
js
cmp
inc
div
imul
mov
mov
in
sti
fcomi
mov
dec
repz
ret
jl
popa
adc
dec
fsincos
int3
xchg
in
xor
imul
movsb
sarl
mov
push
iret
fbld
jno
mov
cmp
push
xlat
enter
into
pop
sbbl
cmp
into
ss
int
jp
add
jge
out
insb
dec
out
adc
ss
adc
push
popl
test
ret
jle
mov
divl
cvtps2pi
dec
jns
inc
lahf
cmp
adcl
xorl
jnp
es
and
imul
jns
outsb
pop
adc
popa
sub
or
idivl
adc
dec
pop
xor
ficoms
int3
pop
cmp
cmp
cmp
xchg
and
addr16
fmuls
adc
arpl
or
insl
cmp
addb
in
in
mov
imul
ja
jbe
aaa
cmp
outsb
jae
pop
and
inc
dec
or
jnp
and
fidivrs
and
test
jge
lcall
adc
xorl
dec
arpl
dec
popa
es
sbb
rcrb
sub
imul
push
sbb
sub
loope
adc
pop
sbb
imul
test
mov
sysret
push
scas
gs
movsb
enter
or
shrb
js
mov
pop
lods
insb
pop
xor
int3
call
add
movsb
inc
shrl
push
sub
mov
sbb
cmp
fucomip
xchg
rcrl
mov
dec
es
pop
pop
adc
push
jo
add
mov
cmpb
fwait
sub
mov
insl
xchg
sbb
rclb
push
aad
rol
push
jne
cmp
subl
sbb
cltd
in
mov
xor
jo
mov
insl
jp
loopne
fldenv
cmp
add
or
ror
adc
sub
xor
lahf
or
sbb
sub
sahf
pushf
dec
mov
push
and
les
arpl
adc
pop
mov
cwtl
aam
fidivl
out
push
push
loopne
in
fcomp
aas
rorb
push
or
cmpl
xchg
add
iret
add
dec
push
pop
int
in
pop
loop
xor
sbb
and
xor
ret
adc
mov
lock
mov
dec
das
pop
inc
add
add
xchg
add
mov
ret
add
pop
rclb
jno
addb
iret
jae
les
fcmovu
loope
daa
sub
dec
mov
pop
addb
cmp
fistl
lret
or
add
cmc
stos
imul
out
mov
out
sbb
sbb
add
jmp
pop
scas
pop
adc
pop
inc
pop
addr16
adc
jmp
pop
push
xchg
or
aad
popf
mov
dec
and
data16
push
and
outsb
inc
pushf
add
mov
cmp
cmpsb
mov
push
adc
push
cs
mov
and
add
aad
test
sub
inc
adc
jo
cmp
popf
ljmp
movb
jo
call
push
loopne
les
sub
call
test
jae
dec
add
sbb
jno
js
jb
or
rclb
shl
addr16
or
inc
fwait
lea
je
pusha
cmc
outsb
mov
je
mulb
adc
popf
fwait
cmp
and
insb
rorb
sbb
fwait
sbbl
fucomi
xorl
add
rcrl
mov
or
outsl
add
lahf
ret
lea
fcomps
arpl
arpl
cmpb
sbb
clc
jge
adc
lret
leave
rclb
imul
test
bound
ja
cmp
dec
flds
rcrb
loopne
or
mov
sub
add
test
in
push
das
jle
addr16
loopne
insb
pop
adc
sub
pop
sub
sub
test
mov
ret
fbstp
outsb
and
pushf
lods
lcall
or
mov
dec
and
jae
pop
xor
add
push
inc
in
pop
insb
or
scas
jmp
std
pop
pop
outsb
mov
lcall
mov
jp
ja
sbb
push
shlb
pop
jle
or
sub
sbb
dec
mov
add
ljmp
jl
jo
xorb
pop
jnp
mov
xchg
hlt
dec
enter
popf
xchg
sbb
and
les
cwtl
lock
jne
cmpsb
fs
xchg
sbb
les
jg
push
xor
and
mov
in
mov
mov
mov
shrl
test
aaa
fcoms
jns
test
les
js
sub
add
test
xor
ss
jmp
js
mov
pop
repz
ss
call
push
xchg
mov
inc
push
pop
adc
scas
or
jp
shr
out
lock
mov
or
rcr
adc
xchg
adcl
xchg
loop
mov
cmp
mov
ljmp
outsb
add
and
or
pushf
mov
push
mov
fmull
add
xor
fnstcw
mov
add
aad
cmp
push
add
lods
in
test
xchg
add
adc
adc
inc
or
cs
addl
aam
lret
insb
sub
ss
inc
std
iret
mov
je
cmp
cmp
pop
les
ret
sarb
adc
icebp
and
subl
popa
inc
inc
cmp
pushf
rol
addr16
adc
adc
add
and
daa
lcall
shl
daa
gs
fcmovne
scas
hlt
orb
xchg
or
in
inc
ss
cs
inc
stc
outsl
ss
dec
add
inc
outsb
push
addr16
mov
es
lahf
std
jle
aad
pop
out
mov
cmp
sub
push
push
test
mov
mov
and
mov
inc
push
sbb
jo
or
negl
dec
sub
mov
test
mov
jno
push
gs
or
cs
jmp
and
mov
lahf
lret
inc
xchg
xor
and
scas
data16
pop
mov
pop
sub
xchg
cwtl
add
int3
push
cmp
lahf
sub
repnz
or
fdivrl
dec
inc
jg
outsb
mov
dec
clc
andb
lcall
mov
out
cmpsb
mov
mov
adc
add
add
push
jne
mov
lock
xor
xor
arpl
add
jmp
xchg
xor
fsubrp
push
out
dec
adc
pop
adc
and
push
sbbb
jae
adc
nop
and
lods
cltd
jnp
or
mov
shrb
xchg
fisubs
fistpll
and
mov
cmp
mov
in
clc
xor
push
iret
dec
sti
movsb
jmp
jle
sub
jle
stos
mov
shrb
ja
adc
mov
test
insl
sbb
or
push
iret
pop
sbb
testb
dec
inc
pusha
sub
sub
ret
loopne
push
push
pop
aam
xchg
dec
sbbl
out
mov
xor
xchg
adc
daa
jo
nop
add
js
and
je
pop
adc
clc
test
shlb
cmp
jo
mov
lret
pop
and
add
int3
cs
insl
fistl
inc
push
or
mov
xor
lret
aas
sbb
push
xchg
cs
les
sahf
movsb
dec
add
shrl
cmpsb
aam
push
out
lds
adc
cmp
aam
cmpsb
cmp
call
dec
add
rcrl
push
orb
add
add
rorb
pop
out
jp
paddq
push
xchg
mov
sbb
fcmovne
cmpsb
gs
loopne
inc
and
push
lods
icebp
sub
push
adc
arpl
vmovaps
push
or
mov
cmpl
jae
rolb
cwtl
push
jmp
xor
jns
or
nop
mov
imull
sub
je
pop
sub
iret
cld
cli
push
flds
pushf
pop
negl
icebp
cmp
jo
xor
or
jbe
push
jo
lahf
sbb
cs
pop
stc
loop
jo
cmp
xor
and
push
dec
stos
sbb
test
or
mov
cmp
inc
aaa
pop
adc
mov
mov
jle
mov
pop
sub
push
std
popa
stc
andb
push
mov
stc
lea
int3
inc
and
sub
or
xor
mov
add
fisubrl
lods
add
pop
pop
or
push
outsb
cmp
and
jmp
stos
daa
lock
lock
mov
add
test
sbb
jle
call
arpl
les
cmpsb
cmpsb
sbb
and
and
add
dec
sbb
sbb
mov
and
subl
jne
or
mov
add
imul
pop
xor
sbb
lods
shlb
jne
sub
inc
and
aaa
or
push
cmpl
push
add
or
js
sbb
xor
adc
outsl
inc
inc
sub
sub
sbb
inc
mov
mov
or
cmc
xchg
inc
xor
mov
shll
adc
inc
mov
cmc
pop
pop
iret
adc
jno
and
pop
adc
pop
mov
cmpl
dec
cmc
jbe
add
iret
inc
sbb
je
mov
test
outsb
sbb
add
add
push
fcom
out
xchg
lods
push
xchg
mov
cmp
dec
and
and
addl
push
out
mov
and
sub
mov
sub
scas
fcoml
adc
cli
cmp
roll
sub
adc
cs
test
sbb
or
ret
xor
test
mov
icebp
push
or
fcoms
fldenv
push
push
mov
sbb
dec
push
and
add
pop
cli
testb
fwait
pop
cmp
scas
xor
ret
lcall
push
jmp
mov
loop
sbb
pushf
lret
xor
fsubs
loopne
lds
add
cmp
lods
or
and
bound
dec
pushf
orl
std
mov
inc
incl
sub
cmpsl
pop
andl
data16
jp
jmp
push
sti
movups
jo
hlt
rcrl
mov
inc
enter
cmpsb
dec
lods
mov
daa
xor
loop
fcompl
test
hlt
dec
iret
into
lods
inc
dec
xchg
scas
adc
fdivr
iret
imul
rcll
fadds
das
pop
cmp
and
cmp
mov
mov
sbb
sahf
iret
fisttps
jne
mov
mov
xchg
inc
rorb
fcmovbe
adc
add
call
and
js
xor
fisubs
sbbl
in
cs
jne
je
jbe
into
sbbl
push
sbb
add
ss
or
or
sbb
dec
bound
out
stos
inc
and
js
push
xor
xor
jge
add
es
icebp
out
inc
fwait
add
inc
aad
sub
rolb
add
jp
and
add
and
scas
js
cmp
dec
sbb
punpckldq
sub
fildl
or
mov
sub
std
addb
add
loop
add
adc
cmp
shrl
jae
push
ficomps
mov
outsl
out
adcl
cmpsb
xor
pop
js
js
gs
stc
pushf
popa
pop
add
pop
fsubrs
xor
push
xor
loopne,pt
pushf
mov
mov
and
adc
sub
inc
adc
sbb
mov
ja
adc
out
pop
or
out
mov
js
stos
sbb
outsl
movsb
or
jo
dec
les
orl
add
xor
lock
cmp
cmp
je
popf
es
jg
mov
scas
mov
add
lock
mov
pop
fildl
mov
push
movsb
push
adc
add
dec
dec
shll
js
aaa
das
cltd
sbb
and
xorb
cmp
mov
push
in
and
cld
and
and
jo
test
adc
add
mov
dec
mov
lahf
sub
sub
mov
add
bswap
sbbb
inc
adc
shrb
cmpsb
pop
cmp
pusha
lds
add
and
lahf
std
ds
iret
fstpt
into
jns
lahf
cmpsb
daa
aas
sbb
mov
jno
fwait
movsl
add
scas
and
push
or
mov
push
movsb
clc
mov
cmp
dec
or
sbb
es
hlt
mov
sub
add
out
sti
inc
jb
mov
jge
sbbl
inc
imul
daa
sbbl
and
push
adc
xor
jmp
xchg
pushf
pop
sub
cmp
daa
out
inc
in
cmp
fbstp
imul
mov
jp
lcall
neg
and
cmc
hlt
mov
inc
gs
repz
std
xchg
lock
bnd
push
inc
adc
fnstcw
add
add
int
and
int
cmp
lods
test
popa
xchg
inc
js
daa
sub
addr16
cmp
es
jno
test
jl
outsl
xchg
clc
std
push
lock
bound
int3
add
push
push
insb
inc
sti
lock
rolb
push
rcr
or
adc
mov
stos
mov
pop
loope
out
in
adc
or
push
xchg
sub
and
sub
fwait
int3
fwait
mov
clc
or
and
mov
addl
sbb
pop
outsl
add
adcl
sbbl
in
pushf
orb
lods
cmc
add
mov
flds
sbb
nop
adc
inc
or
pop
hlt
shll
xor
adc
imull
inc
pop
jo
arpl
pop
mov
outsl
dec
clc
cmpsb
cmpsl
pop
test
mov
inc
pop
je
aaa
movb
sbb
fsts
rorl
lds
bt
jle
add
loopne
inc
push
pushf
or
jmp
dec
xor
mov
mov
sahf
sub
clc
jnp
adc
movhps
aad
adc
inc
aas
icebp
push
daa
dec
rol
call
daa
push
push
mov
es
pop
sub
dec
inc
mov
dec
mov
push
sbb
sbb
dec
rcl
ror
or
push
add
sub
orb
cmp
sbb
sub
inc
mov
outsb
jle
push
js
cli
repnz
not
in
adc
fwait
xchg
es
xor
or
cld
sbb
push
xor
push
cmp
sbbb
stc
insb
add
cmp
shll
jge
xor
add
pop
add
cmp
xchg
cmp
insb
cltd
je
sbb
dec
cmp
ret
add
xchg
adc
sbb
add
movsl
pop
sti
int3
sub
inc
xchg
ret
inc
popa
adcl
jmp
jo
mov
xchg
mov
lods
adc
push
cmp
cmp
mov
stos
push
adc
push
cld
xorb
popa
call
ror
add
adc
mov
jae
pop
jmp
jne
out
popa
and
das
add
mov
mov
jp
mov
add
lcall
xchg
pop
das
push
xor
in
iret
adc
or
pop
movsb
in
addr16
sub
stos
push
sub
je
insl
mov
insl
pop
iret
sub
jmp
es
dec
add
les
int
jbe
ja
sbb
scas
push
cwtl
iret
add
insb
insl
push
aam
jbe
bswap
xlat
int3
testb
add
sub
sbb
in
or
push
into
pusha
or
or
in
mov
xchg
pop
int3
add
fadds
add
loope
mov
js
aaa
xor
nop
scas
xchg
mov
ja
iret
lds
mov
and
into
add
add
add
dec
sub
push
mov
pusha
stos
incl
daa
xor
negl
sub
cmp
fsubrl
cmp
sub
daa
int3
and
adc
add
dec
and
jbe
mov
lods
xor
out
aas
and
push
cld
dec
pop
or
jle
fidivrs
into
push
adc
cs
out
or
jns
daa
ret
cmp
pop
lods
fwait
aaa
push
adc
in
pop
daa
mov
movsl
fcmovnbe
sub
shrb
pop
mov
data16
add
pop
fsubrl
fistpll
call
adc
push
clc
pop
out
data16
add
int3
sub
add
add
scas
in
pop
ja
jb
mov
and
xor
inc
inc
ja
xchg
pop
or
sbb
ss
std
sub
rolb
push
add
std
push
fadd
mov
pop
push
pop
cmp
xor
adc
dec
jnp
shlb
rclb
test
je
lret
je
in
sub
xchg
bound
xchg
iret
in
scas
lret
push
loopne
mov
cmp
push
lods
aaa
mov
ja
dec
lds
and
das
cld
sbb
test
jle
roll
add
test
dec
test
jp
or
xor
lods
sahf
sbb
mov
test
push
filds
roll
imul
pop
push
test
out
scas
xchg
push
inc
sub
sbb
mov
add
xchg
popa
adc
loopne
ss
icebp
mov
push
adc
mov
mov
mov
arpl
sbb
scas
fucom
push
mov
sbb
idivb
into
mov
out
loope
lret
lods
bound
xlat
adc
mov
adc
fisubs
loopne
push
in
subb
bound
aaa
pop
sub
lock
rorb
mov
ds
shrl
xor
sarl
loope
xor
cmp
fisubrl
mov
stos
cmpl
popa
dec
stc
sbb
mov
les
rorb
sbb
mov
inc
and
jne
les
fsubr
xor
cmp
movsb
dec
das
jnp
xchg
nop
pop
out
mov
dec
test
ret
bnd
add
out
test
ret
sbb
outsb
inc
sub
push
mov
inc
add
adc
aad
or
pop
test
sub
je
mov
mov
xor
test
dec
cmpsb
push
sbb
push
imul
imul
mov
xchg
sbb
bound
das
movaps
loop
mov
dec
rolb
jno
mov
ja
add
test
ret
mov
stos
xor
cwtl
and
enter
rclb
push
and
sub
es
sar
mov
push
lret
das
jl
leave
inc
cmpsb
pop
pop
xchg
jns
ret
aaa
jno
pop
aaa
adcl
out
mov
decl
mov
push
add
roll
aas
loop
sbb
jne
and
in
jo
mov
das
push
jnp
mov
mov
shl
sarl
inc
shll
jnp
sub
sub
jmp
cltd
jae
push
jb
call
es
jbe
adc
test
pop
add
jmp
sub
xor
in
jns
or
arpl
sub
dec
movsb
mov
cltd
dec
mov
mov
jbe
push
lcall
sti
cwtl
push
ret
add
jo
daa
inc
les
xor
jb
jmp
xorl
jo
subl
jbe
dec
mov
or
dec
jno
cwtl
movsb
xor
test
in
dec
movsl
push
das
dec
jl
jno
fcoml
ja
and
shrb
sub
scas
not
ret
cmp
add
jns
add
and
xor
push
jnp
jns
push
jns
mov
ret
push
inc
lcall
mov
xchg
jp
leave
mov
fmuls
mov
mov
daa
or
test
in
mov
roll
das
jae
push
lret
xor
add
daa
add
xlat
inc
test
jne
cld
push
inc
jae
push
in
jbe
inc
nop
and
das
push
cwtl
lret
inc
add
daa
push
mov
mov
pop
ret
push
aam
inc
mov
loopne
jg
jp
scas
pusha
into
jbe
sarl
add
out
xchg
inc
mov
jns
out
jl
xorb
inc
in
in
fnstsw
loopne
push
pop
mov
push
lock
pop
dec
mov
fistps
jo
js
adc
lods
xchg
fsubrl
push
je
cmp
sbb
cmpsl
sbb
cld
shll
lods
pusha
pop
mov
fimuls
push
cmp
scas
popa
mov
loopne
jle
inc
movsb
and
sbb
pusha
lock
out
sbb
jae
shr
jmp
mov
insb
or
dec
outsl
xchg
sbb
jmp
in
outsl
stc
mov
and
jns
add
in
ret
add
push
pop
daa
mov
insb
shl
in
jmp
add
sub
add
stos
adc
xchg
or
push
hlt
fwait
adc
stos
push
mov
dec
mov
push
fwait
add
dec
lds
mov
out
mov
or
in
mov
sbb
push
push
add
dec
xor
cmp
mov
push
idivl
mov
testb
pop
push
mov
sti
into
enter
sti
cs
push
aam
sbb
imul
ja
pop
out
jno
idivb
dec
lret
jecxz
fmul
pop
out
rcll
sub
jmp
fdivs
mov
movsb
lret
adc
xor
add
mov
es
or
jmp
adc
jp
iret
cmp
sbb
test
scas
lret
negb
mov
or
pop
sbb
mov
mov
orb
xchg
dec
lahf
mov
js
fists
loop
lahf
les
dec
dec
je
loop
cmpsl
adc
imul
mov
ret
dec
arpl
es
cwtl
mov
sub
dec
in
jbe
insl
ret
shl
test
or
push
jmp
popa
addr16
xchg
mov
test
xlat
fs
pop
or
mov
push
movsl
mov
sbb
add
mov
jbe
jne
aad
call
fptan
icebp
stos
dec
jecxz
fildl
and
sub
or
lds
xor
or
dec
ss
xchg
test
iret
das
sub
ret
adc
add
arpl
iret
test
jne
cmp
add
ja
sbb
or
add
fcoms
sub
add
adc
adc
push
sbb
pop
iret
adc
add
sbb
jnp
add
dec
sahf
scas
mov
dec
xor
movsb
mov
add
mov
mov
pusha
sar
xor
clc
cmp
and
in
sub
jge
fdivr
lcall
adcl
loop
and
dec
mull
pop
inc
xor
pop
inc
xor
or
scas
sbb
push
nop
mov
pusha
lock
lds
cmp
push
add
popa
push
scas
incl
aaa
arpl
rcrl
fsubs
cwtl
fsts
inc
sbb
pushf
push
call
xor
adc
call
sub
in
loopne
push
pop
jl
sahf
sub
cmp
cwtl
inc
fs
and
push
add
rorb
cmc
push
in
ret
xor
lock
sbb
and
mov
sub
inc
jmp
and
je
mov
lret
arpl
push
cmp
ljmp
mov
pop
movsb
cmp
sarl
mov
dec
add
cmp
sar
pop
inc
jnp
rcrl
imull
outsb
mov
movaps
dec
push
lcall
and
lea
sbb
fucom
mov
add
mov
out
adc
ja
cmpsl
sbb
cmp
insl
adc
loopne
jnp
xor
cmp
cmp
lds
mov
ja
ret
xchg
xlat
jle
inc
int3
ds
mov
add
inc
into
adc
inc
xor
ret
adc
imul
inc
roll
cmp
xchg
pop
dec
daa
push
pcmpeqb
out
mov
loopne
pop
and
push
dec
clc
jbe
fnstenv
sbb
jmp
add
out
xchg
lods
mov
scas
movsb
stos
leave
xchg
push
sub
dec
rol
fists
and
adc
stos
sbb
lods
pop
add
mov
xor
xchg
jecxz
or
inc
cs
lret
push
mov
stc
inc
and
fdivr
scas
xchg
arpl
or
sub
mov
mov
push
push
orb
xchg
adc
mov
sbb
clc
mov
pop
add
cmpsb
andb
add
cmpsb
mov
pop
cmp
mov
mov
loopne
adc
test
push
fsubrs
mov
dec
or
xchg
je
outsb
and
push
nop
imul
inc
mov
scas
or
into
or
call
push
sub
mov
sbb
add
xchg
test
lock
data16
aam
cli
xor
stos
stos
sub
sub
push
jbe
pop
pop
xchg
mov
int3
sub
mov
xchg
add
std
adc
int3
xor
lcall
mov
xchg
mov
sub
movsb
mov
js
pop
push
fdivrs
dec
cmp
repz
add
mov
pop
mov
jo
inc
mov
and
js
push
adc
mov
loope
cmp
xor
xchg
jmp
outsb
movsl
or
mov
sub
or
arpl
mov
dec
mov
mov
mov
hlt
push
in
int
sbb
out
fstpt
aaa
mov
es
and
ret
xor
pusha
or
nop
mov
push
xchg
jle
rsqrtps
mov
cmc
inc
cmpsl
dec
mov
dec
sbbb
sbb
out
movsb
sub
loopne
loope
mov
repz
xchg
in
add
add
fisubl
aaa
fadd
cmp
out
call
cltd
adcb
in
adc
mov
inc
cmp
cs
lds
cwtl
lret
and
fwait
lcall
fstpl
bound
inc
lods
dec
js
xchg
cmp
movsb
adc
mov
and
mov
add
cmpsl
stos
cmp
popa
push
inc
add
add
inc
mov
daa
and
fsts
les
cwtl
jge
xchg
cltd
and
xchg
loope
es
loop
jae
sbb
add
xchg
mov
push
addl
jg
pop
in
sbb
sbb
pop
or
fcomp
inc
cmpl
jge
adc
add
push
lea
xorb
enter
addb
or
js
sbb
arpl
mov
jecxz
mov
sbb
mov
fildl
inc
sub
sti
in
ret
adc
push
test
cmp
jnp
mov
daa
inc
and
push
adc
lret
call
and
movsl
call
mov
ja
dec
adc
jbe
jb
ljmp
mov
sub
mov
mov
push
stc
adc
fadds
mov
pop
push
fadd
pop
dec
icebp
shlb
pop
jne
mov
fists
nop
cmp
lret
fs
pushf
iret
or
or
popa
mov
sub
and
or
aam
and
push
loope
mov
sbb
push
jns
add
jae
push
int
cwtl
adc
arpl
ljmp
jne
lret
adc
jecxz
es
jb
clc
call
mov
xchg
mov
js
out
add
dec
mov
mov
adc
sub
add
adc
cmpb
out
int
nop
xor
xor
out
std
xchg
cmc
fsubl
add
jbe
or
addr16
movups
mov
mov
pop
xchg
or
adc
call
test
in
and
cmp
test
les
push
inc
xor
fs
fidivrs
push
aam
roll
xor
out
insb
adc
dec
movl
ret
fadds
icebp
pop
inc
ljmp
adc
xchg
or
bound
mov
pop
xchg
adc
mov
pop
dec
dec
xor
cmp
and
xchg
in
data16
cmp
imul
and
insb
mov
jb
into
add
test
pop
pop
rcrl
jmp
inc
xor
jl
rolb
xchg
daa
push
andb
cmp
push
jecxz
and
cmpb
and
push
nop
fbld
pop
out
sbb
dec
add
mov
test
nop
push
adc
addb
mov
push
mov
cltd
pop
xchg
xchg
ja
xchg
push
lcall
push
mov
xor
ds
pop
ret
add
pushl
dec
ljmp
or
testl
pusha
inc
xchg
and
pop
lcall
test
or
pop
les
push
inc
jo
fldenv
jae
and
pop
stos
pop
leave
cwtl
inc
and
ja
in
test
in
inc
sbb
ret
add
and
dec
xor
or
xor
shl
fldl
sub
jecxz
js
in
mov
mov
gs
addr16
push
and
sub
or
jle
add
movsb
mov
scas
ja
sub
sti
es
xlat
inc
popf
mov
imul
mov
aam
sti
outsl
repz
add
pop
mov
lds
pop
test
pop
cwtl
cltd
lret
jne
les
fxch
and
add
xlat
outsb
aaa
and
adc
add
shll
xor
pushf
xchg
sbb
and
sub
lds
outsb
cld
jecxz
mov
mov
jbe
xlat
adc
jmp
mov
arpl
jnp
pop
mov
cmp
scas
decb
sbb
jb
jo
movl
in
hlt
cmc
mov
mull
xor
insl
and
push
lahf
jmp
call
pop
sbb
xchg
adc
inc
mov
je
rclb
es
movl
mov
mov
sbb
popf
inc
xor
xor
push
or
xor
cwtl
iret
sti
sbb
adc
lret
push
les
aaa
scas
inc
ds
push
inc
ss
pop
xchg
paddusb
jns
fs
fadds
test
and
cs
daa
repnz
mov
lea
or
iret
and
insb
dec
or
sahf
add
and
adc
push
sub
xchg
add
cltd
aam
test
add
aaa
stc
repnz
xchg
and
test
pusha
adc
in
or
and
out
mov
fcoml
and
sub
imull
or
xchg
loope
jno
out
aas
fcoms
inc
and
cmpsl
pop
dec
loopne
jnp
add
xchg
aaa
xchg
shll
add
and
xor
pop
enter
fldenv
into
fwait
and
pop
push
jno
add
jmp
add
lea
orl
push
addr16
push
xor
test
or
xor
es
test
or
mov
pop
or
adc
leave
stos
fdivs
xor
movsb
and
cmp
and
lcall
push
rclb
mov
popa
jne
mov
add
inc
scas
rorl
inc
and
push
push
mov
ret
test
movsb
pop
xchg
push
mov
jno
or
and
out
push
popf
inc
pushf
test
hlt
pusha
mov
mov
jmp
inc
aaa
sbb
neg
mov
sbb
mov
mov
jle
adc
sbbb
ljmp
xlat
xchg
xchg
push
fmull
popf
adc
xchg
or
push
and
fs
insl
decl
jle
pushf
psrad
in
scas
call
jbe,pn
add
or
jle
outsl
mov
and
cmp
push
aaa
add
push
push
divb
and
rcrb
and
mov
cmc
jb
push
xchg
call
fimuls
add
xchg
mov
orl
insb
add
push
inc
pop
outsb
cmpsl
sub
sbb
sbb
lods
cltd
test
add
add
lcall
mov
pop
lods
fs
pop
lret
cmp
pop
outsl
popa
xor
ret
or
sahf
sub
push
push
aam
fs
sahf
movsb
aaa
push
inc
mov
cmpsb
in
pop
push
push
xor
xchg
adc
pusha
sbb
fistpl
adc
lss
sbb
das
popa
or
pop
fists
and
es
and
rcrl
aas
arpl
std
sahf
ret
sub
clc
mov
mov
mov
cmpsb
aaa
push
dec
sbb
call
fisubrs
daa
pop
mov
test
cmp
adc
push
sbb
pop
xchg
fnstenv
movsl
pusha
movsl
bound
xchg
mov
loopne
xor
data16
clc
sti
hlt
add
movb
inc
xorb
mov
adc
jp
test
shrb
push
movsb
and
dec
loope
decb
mov
inc
lods
push
pop
xor
add
mov
lock
add
adc
xchg
dec
int3
push
pop
nop
xchg
sub
xchg
jecxz
test
testb
aad
dec
shrb
lods
test
cmpsl
addr16
pop
dec
lock
dec
repnz
cmpsb
test
dec
testb
adc
outsb
cmc
jne
pusha
push
inc
lahf
jmp
or
lds
mov
js
arpl
es
jo
sub
push
mov
aad
leave
stos
cmpsl
add
jmp
xchg
mov
and
dec
ret
repnz
push
adc
pop
cmp
dec
inc
out
cmp
jns
arpl
push
pop
mov
add
insb
ret
dec
push
add
push
mov
sbb
mov
add
and
sbb
loope
lods
lock
dec
out
lods
fdivs
lcall
dec
mov
xchg
shlb
sub
xor
popa
push
xlat
scas
mov
push
inc
mov
inc
test
add
add
cmpsl
sbb
int3
and
aaa
jecxz
cltd
mov
sub
add
lahf
xchg
lods
xchg
cld
cmp
fiadds
nopl
lock
lds
inc
mov
or
push
jmp
cmpsl
imul
push
push
fiaddl
mov
sahf
push
dec
insb
push
mov
std
outsl
mov
bound
lcall
daa
cwtl
mov
outsl
sub
inc
pop
dec
scas
test
mov
popa
in
mov
xor
testl
neg
mov
lods
add
or
cltd
cli
imul
mulb
cmp
sbb
iret
rcrl
cmp
add
cmpsb
dec
data16
adc
call
int3
push
shll
push
aam
push
sbb
mov
add
idivl
int
mov
hlt
ja
xchg
cmp
lcall
test
pushf
inc
or
xor
or
and
test
or
jle
lret
add
push
pusha
add
or
sbb
push
test
and
push
adc
pop
aam
xchg
shrl
mov
stc
push
or
fidivs
scas
mov
add
repz
jae
or
sbb
repz
movsb
adc
cwtl
lds
push
xor
rcll
es
ret
mov
xor
call
mov
pop
mov
call
inc
shll
cmpsl
xchg
jne
ror
and
mov
pop
push
mov
and
and
inc
mov
mov
xor
adc
adc
sti
dec
add
mov
ljmp
or
adc
call
lret
xor
mov
mov
fmulp
mov
push
cmp
test
jmp
xor
pusha
loopne
das
mov
push
cmpsl
mov
aaa
sub
js
or
cmp
or
jmp
inc
clc
or
sub
jmp
jg
lods
addb
push
mov
dec
adc
daa
jo
mov
or
data16
pushf
stos
pop
daa
mov
ret
rol
iret
or
jecxz
mov
add
mov
lcall
les
jg
and
xchg
sub
adc
les
jmp
mov
test
or
lcall
test
inc
xor
push
cmp
xchg
cmpsb
or
xchg
xor
xor
xchg
mov
add
xor
inc
mov
sbb
imul
stc
in
xchg
es
loope
out
aam
push
ret
lods
adc
sbb
inc
or
adc
sbb
rep
lret
mov
and
aas
pop
mov
or
push
or
jg
adc
rclb
xorl
lcall
nop
xchg
fcmovbe
inc
daa
add
pop
adc
mov
dec
loop
lret
xchg
push
iret
or
xchg
or
scas
fadd
cmp
dec
mov
jo
dec
jo
mov
dec
cmp
out
inc
push
cmp
lods
pop
cmp
xchg
cmp
addl
lods
pop
repnz
mov
mov
leave
jbe
lcall
xchg
dec
inc
or
pop
push
sub
adc
mov
or
push
cs
lcall
repnz
jle
pop
pusha
inc
or
sub
mov
fldenv
das
or
cmp
add
adc
test
dec
add
cmp
xor
pop
add
add
mov
and
in
jecxz
sbb
jns
xor
ja
or
sub
push
add
es
sub
test
sbb
xor
inc
cld
mov
mov
dec
bound
sbb
imul
imul
add
stos
bound
iret
push
inc
pusha
inc
shll
mov
movsb
jo
es
adc
enter
daa
mov
mov
je
sub
cs
and
or
and
fisubs
shlb
test
sub
and
in
xchg
popa
cli
mov
mov
andl
xor
bound
jne
jmp
add
pushf
test
inc
push
inc
dec
pusha
sbb
xchg
cmp
inc
jp
add
aad
jo
push
push
adc
pushf
cmpsb
sub
ds
sbb
inc
sub
lcall
push
mov
pop
push
insb
push
shlb
or
sub
mov
xchg
push
daa
mov
or
dec
sub
xor
mov
pop
andb
mov
add
cld
lock
ljmp
test
add
rorl
or
mov
lcall
mov
add
cld
sbb
cs
fimull
lds
mov
popf
cli
pop
lock
jb
xor
cltd
and
pop
div
xchg
inc
lds
or
cwtl
jl
lock
push
aas
int
mov
push
ljmp
xchg
nop
js
jp
inc
jecxz
rcrb
cwtl
jle
inc
xor
adc
bound
push
inc
pop
jns
xchg
inc
mov
inc
inc
test
dec
pop
inc
xor
or
loope
ficoms
lods
and
shlb
xor
push
test
add
push
xchg
leave
lea
cmp
add
push
adc
cmp
mov
loop
adc
xchg
add
inc
cmp
das
inc
stos
loopne
inc
sub
pusha
inc
xchg
inc
adc
sarl
add
push
adc
inc
int3
add
xchg
mov
sbb
inc
sbb
pop
sub
fwait
pop
xor
push
dec
in
xor
ret
jg
call
or
inc
push
push
in
mov
jno
pop
pop
js
inc
or
add
mov
inc
push
push
pop
xor
sbb
pop
js
adcb
clc
sub
fwait
add
sbb
inc
scas
sarl
or
inc
add
ss
add
jp
sub
hlt
adc
push
sti
adc
sub
js
mov
inc
aad
add
sbbb
and
ljmp
or
inc
addr16
adc
mov
add
fildll
or
inc
sbb
inc
dec
add
decb
lahf
add
adc
in
pop
add
jp
sbb
cmp
adc
leave
inc
mov
cmp
movb
sub
push
sub
roll
push
xor
outsl
out
pop
sbb
add
sti
sub
stc
pop
pusha
fadds
cmp
mull
inc
sti
push
imul
jae
add
pop
xor
inc
push
adc
je
test
mov
inc
out
push
add
dec
mov
stos
mov
add
xor
test
sub
dec
inc
pop
adc
into
xlat
cmp
scas
jno
daa
inc
loopne
idivb
ss
add
stos
adc
fdivs
fisubl
dec
mov
xchg
sub
pop
inc
mov
push
push
sub
xlat
mov
add
and
sub
xchg
or
mov
inc
pop
shlb
add
js
inc
jne
mov
jb
or
push
hlt
push
gs
lds
push
div
adc
mov
and
pop
fmull
pusha
cmp
add
sarl
xor
ljmp
push
lret
pop
add
leave
fs
ss
pusha
jae
sbb
dec
cmp
push
jne
scas
sbb
push
je
imul
sub
roll
std
movsl
adc
ficomps
jecxz
dec
das
cmp
add
jnp
mov
bound
clc
andl
adc
xchg
inc
lcall
push
scas
add
popl
dec
add
stos
cmp
mov
shll
scas
mov
push
aam
arpl
fistps
scas
xor
sub
leave
adc
fcmovu
push
add
pop
add
sbb
rolb
fbstp
fisubl
jno
push
dec
hlt
push
aad
outsb
clc
je
dec
das
mov
add
test
jge
xchg
cmp
stc
sub
data16
jmp
sub
add
pop
sub
pop
test
and
jb
icebp
mov
into
xchg
add
and
mov
or
fwait
mov
and
adc
cmp
lea
ljmp
js
and
push
stc
sbb
add
add
mov
and
sub
xchg
push
xor
pusha
jo
sbb
outsl
outsl
into
das
sbb
push
push
lcall
push
sub
xchg
jb
xor
and
je
out
mov
push
cmc
and
or
out
jo
push
cs
adcb
inc
xchg
test
es
rolb
and
sub
outsl
adc
daa
push
cmpsl
orb
loopne
repz
shlb
xlat
push
int
ja
loop
mov
dec
jl
and
add
add
mov
loop
loope
je
jnp
mov
cwtl
add
dec
add
jle
pop
imul
out
testl
stc
xor
addl
and
pop
adc
cwtl
rorb
notl
push
pushf
jne
inc
mov
inc
cmp
inc
scas
stos
mov
fidivrl
in
push
mov
jno
popf
adc
cmp
adc
mov
mov
add
test
mov
pop
inc
sbb
test
mov
jae
add
push
add
cmp
fdivs
sub
xlat
sub
roll
loopne
int
cmp
and
jle
pop
mov
mov
dec
xchg
scas
imull
mov
das
and
xchg
mov
or
push
addl
imull
mov
gs
iret
sarl
loope
fldl
pop
or
setno
sbb
fsubs
fimuls
loope
pop
push
pop
mov
test
jmp
fadds
das
push
popa
or
dec
mov
or
es
jge
sub
jno
lea
pop
xor
dec
mov
push
jne
mov
cmpsb
inc
adc
dec
dec
cld
mov
xchg
rcll
repnz
and
mov
mov
notl
mov
rorl
lret
mov
shrb
daa
stc
je
xor
dec
add
xchg
iret
leave
adc
ret
je,pt
lds
data16
in
mov
mov
push
nop
cmp
add
jno
pop
adc
xchg
add
xlat
sbb
mov
inc
jo
lahf
mov
ret
push
mov
pop
jbe
sbb
mov
outsb
push
xor
or
mov
test
push
jo
test
rol
or
mov
add
scas
push
xchg
cmp
mov
addl
inc
adc
loopne
add
pop
xchg
mov
jecxz,pt
inc
dec
rol
mov
add
and
or
mov
lcall
test
add
adc
loop
arpl
fcoms
es
mov
iret
xchg
sbbl
icebp
popa
and
and
xor
adcb
mov
mov
arpl
js
ret
sub
jmp
sbb
ljmp
dec
in
js
jns
pop
mov
jl
inc
add
cmp
pop
aad
push
and
sti
jo
bt
loope
xor
xlat
sti
loop
pop
pop
shll
js
jno
stos
jmp
xchg
es
into
ret
es
ja
mov
fcoml
and
and
add
outsl
loopne
cmp
das
inc
jp
ljmp
push
mov
add
cmp
and
mov
xchg
scas
push
mov
sbb
dec
aas
popa
add
push
dec
xchg
lock
subl
push
pushf
add
cmp
mov
ja
into
fmull
and
push
test
call
mov
adc
pop
mov
xlat
mov
sbb
iret
cmp
roll
adc
add
movsb
rcrl
mov
add
adc
imul
push
sbb
orb
sub
adc
or
sbb
or
push
lret
and
les
cmp
sub
je
pop
hlt
mov
jnp
mov
mov
and
add
les
inc
test
dec
jmp
in
mov
shr
mov
xchg
or
test
mov
shll
mov
movsb
inc
add
add
xchg
jo
or
xor
mull
mov
rorb
das
lahf
add
xchg
xchg
push
ret
xchg
inc
xor
mov
add
shll
mov
mov
jne
jbe
loopne
pushf
mov
sbb
dec
pop
cmpsl
lcall
loop
shlb
and
pop
pop
movl
push
or
bound
in
aas
mov
pop
pop
add
dec
inc
arpl
mov
inc
orb
xchg
add
xchg
dec
loopne
ret
ret
mov
fldenv
jecxz
outsl
inc
sti
sbbb
mov
lods
jb
les
inc
fidivrl
inc
test
cmp
inc
inc
movsb
dec
out
fcomps
sar
test
pop
adc
test
mov
mov
or
or
mov
pusha
inc
jl
ret
xor
sahf
or
cmp
mov
loopne
mov
jo
push
rclb
push
mov
ljmp
les
jae
inc
jo
jb
mov
push
cmc
cmp
dec
das
pop
scas
jae
imul
aam
or
pushf
test
into
rcl
or
fildl
enter
add
scas
add
jle
mov
mov
jg
push
ficoms
cmpsb
xor
jmp
scas
js
sbb
pusha
sbb
pop
or
sub
pushf
stos
fwait
sahf
add
fidivrl
sub
adc
and
sub
adcl
jo
mov
in
fldl
add
xchg
js
inc
rorb
and
push
xchg
adc
aaa
fiaddl
sub
cwtl
add
mov
adc
out
ret
sub
add
sub
test
sub
cmp
push
popa
addb
insl
dec
test
iret
xor
inc
sub
mov
test
jl
test
shll
push
mov
and
movsb
subb
orl
and
mov
call
movsl
jne
aad
adc
sahf
repz
xchg
jmp
xor
pop
loopne
dec
cmp
imul
iret
sbb
mov
xchg
mov
sub
xor
and
or
scas
mov
mov
imul
jae
add
cmp
add
mov
flds
movsl
into
cmp
jo
fisttpll
add
popa
int3
insl
stos
cmp
test
test
dec
sub
sub
jl
in
jne
jae
mov
arpl
aam
icebp
push
xchg
jnp
push
out
aas
inc
scas
and
add
call
mov
lret
or
mov
mov
push
scas
xchg
cmp
cmp
xchg
movsb
xchg
add
andb
push
add
les
add
stos
in
sub
orb
add
inc
jp
add
es
push
mov
hlt
lds
mov
test
out
and
sar
cmp
add
jle
popf
sbb
xchg
add
xchg
cs
cmp
ss
test
pop
mov
cs
adc
pop
leave
adc
sub
rcl
mov
sub
clc
pop
jecxz
roll
and
pusha
repnz
data16
adc
xchg
push
shrb
sub
test
mov
loop
sub
or
sbb
push
bound
cmp
sbb
jp
mov
jg
mov
arpl
jo
jp
add
pop
mov
js
push
cmp
ljmp
in
leave
into
xchg
or
add
cmp
push
imul
ljmp
jl
insb
pop
or
call
lds
jne
adc
fiadds
sbb
cmp
aam
sbb
scas
fcmovu
sahf
icebp
sub
inc
jbe
mov
push
pop
shrd
int3
in
inc
loopne
or
xor
push
inc
mov
test
or
push
push
lea
jmp
push
mov
aas
imul
mov
mov
in
ja
mov
mov
pop
add
andb
dec
inc
inc
movb
cmp
jne
push
xor
xor
aaa
sub
ret
adc
pop
ljmp
ja
mov
adc
test
xor
add
inc
jle
or
rorb
in
stos
push
into
out
or
and
scas
xchg
dec
push
push
movsl
push
xor
ret
daa
add
and
adcb
bound
rdpmc
bound
js
adc
jle
adc
mul
cwtl
lods
push
scas
arpl
cmp
shlb
or
jo
xor
xor
sub
fcomp
add
sbb
adc
lock
inc
fnstcw
dec
and
xor
push
inc
add
push
push
and
lret
jmp
lret
js
sbb
add
add
xlat
push
sbb
popf
incl
sub
mov
dec
test
adc
cmp
orb
cmp
sub
fcmovne
or
sub
adc
nop
add
enter
cmp
shrl
push
cmpsb
movsl
test
orb
adc
leave
dec
insb
jo
add
je
repnz
pusha
lods
fbstp
shrl
mov
mov
addb
mov
inc
mov
cmp
sbb
lahf
adc
jb
popa
mov
mov
into
dec
imul
adc
jl
adc
jo
push
inc
dec
fbld
sub
inc
and
and
scas
mov
push
mov
sbbl
push
sbb
or
and
shlb
movsb
push
push
insb
mov
adc
hlt
mov
sbb
adc
enter
in
inc
sbb
xor
inc
testl
sub
sbb
xchg
test
add
mov
add
mov
sbb
push
mov
push
lods
in
jne
icebp
or
hlt
mov
push
mov
mov
shll
jecxz
push
pop
mov
lock
js
jns
out
and
inc
imul
xor
setae
icebp
mov
cmp
dec
stc
lcall
scas
adc
scas
inc
fldt
mov
aam
adc
sub
enter
imul
js
icebp
inc
xchg
add
or
dec
lods
fstpt
push
jb
sub
or
pop
vmread
jo
mov
inc
add
sbb
and
push
pop
mov
xor
add
ds
add
and
xchg
test
xchg
in
inc
and
je
xchg
pop
aaa
push
ret
mov
pop
push
ret
mov
pop
pop
dec
push
daa
inc
pusha
or
mov
or
das
jns
cmp
rcrb
add
xchg
das
loope
xor
xor
jmp
fs
ljmp
mov
inc
lock
mov
fcomps
mov
jns
mov
and
sub
xchg
ljmp
lods
push
adc
aam
xchg
and
dec
pop
cld
dec
push
outsb
mov
leave
xor
fisttpl
ds
sbb
call
je
and
ret
into
cmc
fsts
test
icebp
inc
vpavgb
outsb
push
jl
gs
mov
pop
mov
or
sub
jecxz
test
sbb
add
mov
xor
pop
sti
xchg
test
lret
fcoms
pop
xor
sbb
mov
sbb
sub
das
xchg
jns
mov
mov
ret
push
lock
push
popa
push
push
jl
out
inc
sbb
or
std
dec
sbb
icebp
mov
mov
aad
xor
test
test
cmpsb
lods
mov
les
xor
cmpsb
addb
je
xchg
loop
bound
mov
lds
add
andl
xchg
lods
ja
sbb
clc
bound
and
adc
scas
enter
loope
call
push
pop
and
xchg
lahf
cmp
or
add
and
pop
adcb
add
fs
adc
inc
and
lock
shr
out
push
mov
jno
lods
and
mov
dec
je
fldpi
xor
mov
jp
subb
jo
lds
jecxz
adc
cmp
cmp
push
mov
mov
cmp
scas
and
gs
out
add
rolb
add
orb
adc
mov
jecxz
jbe
mov
ss
lds
dec
popf
inc
loopne
mov
cmp
adc
leave
and
add
fcoms
mov
or
insl
jl
inc
and
arpl
les
jb
rclb
pop
jle
add
inc
lret
pop
call
sub
jae
test
jbe
add
stos
inc
lahf
out
push
cmp
popf
daa
jge
add
jne
xor
adc
pop
js
xchg
jbe
pop
push
add
sbb
add
pop
mov
xor
push
adc
dec
push
test
rcl
les
lea
add
int
cmpl
js
and
pop
xchg
jecxz
mov
add
cwtl
jnp
add
adc
mov
cmpsb
sub
nop
sub
xchg
sub
sbb
ret
pop
test
call
push
jno
mov
into
push
and
iret
xchg
or
xorl
cmp
push
adc
xorl
fisubrs
das
adc
loop
das
int3
add
jo
cmp
cld
sub
and
cmp
mov
cmp
sub
jp
mov
mov
scas
das
jg
xchg
jle
dec
xor
lds
adc
inc
jp
fs
push
sub
add
push
and
stos
daa
push
ss
outsb
xchg
sahf
jle
data16
js
mov
xchg
jmp
cmp
add
and
fnsave
sbb
lods
sbb
push
shrd
lods
outsl
jnp
push
insl
push
fistpl
hlt
push
push
js
xor
pop
push
jne
adc
pop
cmp
bound
dec
pop
pop
lods
xchg
pop
pop
jo
adc
sub
outsb
fisttpl
mov
int3
out
or
into
mov
ds
aaa
fwait
jnp
mov
or
or
and
sub
mov
push
jne
data16
sbb
sub
adc
in
and
inc
inc
lahf
xor
and
inc
roll
femms
or
and
push
out
subb
or
loopne
jb
sbb
push
cmpsb
add
inc
decb
lds
scas
mov
adc
ret
test
repnz
je
and
lret
or
push
mov
adc
and
out
push
xor
pushf
fstpt
in
push
shrl
clc
cli
push
mov
or
and
ss
sbb
cld
inc
cli
scas
data16
sub
fcmovbe
xor
pop
jg
paddusw
dec
xor
sbb
dec
imul
sub
sbb
inc
pop
add
and
sub
adc
mov
ret
scas
es
and
push
imul
jo
push
add
loop
lcall
fistpl
out
loope
cwtl
xlat
jge
insl
dec
pop
popf
jae
addr16
push
add
dec
arpl
pop
xlat
jge
push
adc
das
mov
and
pop
sbb
movzbl
xor
mov
jmp
out
sbb
rorl
mov
in
xlat
jbe
push
pop
das
pop
add
dec
insl
fmuls
push
sub
nop
cmpsl
or
jns
fnstcw
push
and
xlat
insl
or
adc
shlb
pop
lea
xor
sub
add
dec
cmpsb
outsl
sub
cmp
setl
cmp
fmul
lcall
dec
push
or
pop
sbb
sub
or
or
fistpll
inc
add
push
mov
xor
xchg
mov
push
popa
pop
gs
push
fimuls
jmp
jle
jb
dec
add
sbb
push
mov
daa
jo
mov
ret
dec
sub
inc
imul
jnp
jae
or
imul
xor
and
sbb
xor
mov
iretw
popa
pop
jne
call
push
outsb
outsl
mov
fcmovnu
imul
pop
ret
stos
out
adc
cli
fcompl
fimull
lods
outsl
xor
lds
sub
jo
jo
cmp
popaw
ss
xchg
xor
fdiv
mov
mov
fildl
scas
pop
lods
addr16
ret
jo,pt
and
test
popa
les
rorb
dec
adc
and
in
shl
push
inc
pop
js
sub
adc
xor
jle
lcall
filds
outsb
pop
add
sub
and
add
add
sti
iret
les
adc
xor
leave
fnsave
popf
inc
sbb
xor
dec
jae
cld
adc
and
mov
fidivs
je
xchg
jmp
dec
sbbl
add
dec
sub
push
outsb
test
in
mov
lret
lds
mov
mov
outsb
or
xchg
ljmp
das
jl
fildll
leave
pusha
and
sub
adc
js
pop
mov
lcall
sub
jg
adc
repz
pop
shrb
or
add
dec
cmpb
push
into
and
inc
clc
ss
inc
addb
lods
js
iret
mov
mov
scas
push
addr16
ret
scas
and
daa
pop
dec
pusha
push
xchg
ds
arpl
lea
mov
ficoms
and
icebp
add
in
xor
sbb
sbb
jle
aas
pop
pop
fs
sbb
xchg
mov
xor
dec
fstl
mov
xor
adc
push
and
mov
xor
adc
xorb
mov
daa
mov
mov
and
fistpll
push
adc
push
std
gs
das
movsb
cmp
adc
inc
and
or
movsb
add
push
int3
popa
mov
icebp
sbb
push
outsl
jecxz
stos
popf
movl
fiaddl
dec
int3
or
push
push
xlat
mov
adc
lock
int
push
jle
js
das
pop
mov
cmp
dec
dec
mov
loope
cmp
lock
and
bound
xor
inc
push
rol
lock
xor
jbe
adcw
jae
rcll
cmp
add
sub
lods
jbe
sahf
fidivrl
sub
mov
sub
cld
das
leave
inc
lods
out
das
mov
cs
and
jns
loope
imul
jae
and
mov
pop
sbb
dec
push
mov
push
and
js
jns
adc
xor
and
sub
ss
popf
jb
mov
mov
gs
lcall
and
pushf
dec
sbb
sbbl
cmp
mov
ret
call
inc
fwait
gs
sahf
js
and
jnp
iret
push
imul
lods
movsb
push
push
mov
sub
sbb
stos
aam
cmovno
xor
icebp
fists
lods
in
pop
fsubrs
push
xchg
push
push
shrb
pop
add
jo
dec
dec
popa
jmp
and
xorb
lds
adc
int3
out
mov
jo
add
jnp
fdivl
aad
push
xor
mov
inc
mov
sub
test
call
sub
je
cmpsl
sub
inc
pop
repz
pop
leave
mov
add
mov
jnp
mov
dec
popf
inc
fadds
jp
mov
inc
push
pop
mov
and
lds
sub
pusha
xchg
adc
ljmp
pushw
pop
or
scas
mov
imul
cmpsb
and
lods
pop
stos
aad
pop
adc
or
pop
gs
mov
push
loope
stc
je
adc
stos
jmp
xor
push
add
ret
aaa
test
sbb
or
jge
push
mov
cmp
aas
jl
cwtl
jge
pop
sbb
or
ficompl
in
inc
push
push
jo
sub
jge
dec
dec
jle
push
addl
sub
inc
add
dec
inc
cmp
push
dec
ret
je
lds
adc
pop
mov
sub
sysenter
divb
xchg
mov
aaa
add
push
sbb
push
xor
cmc
add
iret
sbb
adc
iret
jge
adc
aas
jle
sbb
add
and
movsl
mov
mov
add
push
insl
adc
xchg
adcb
adc
xlat
cwtl
repz
dec
popf
add
stos
or
pop
jne
loopne
lock
imul
jo
sub
and
jb
stos
dec
es
add
push
xchg
cmp
sub
das
dec
pop
insl
xor
xor
add
divb
xlat
int3
sbb
cmc
adc
mov
or
arpl
cmp
xor
addl
insl
mov
lea
shrb
fdivr
inc
shll
mov
cmpsl
pop
inc
push
pop
outsl
pop
push
cmp
loopne
add
imul
adc
mov
outsl
ret
pop
dec
jno
bound
xchg
sbb
xchg
mov
pop
dec
cmc
addr16
and
inc
iret
mov
lret
rorl
nop
mov
sub
mov
sub
adc
lods
in
je
mov
mov
push
rclb
iret
bound
fcmove
inc
imul
sbb
test
mov
imul
pop
daa
pop
movsb
or
cltd
fst
or
pusha
push
aam
in
jbe
inc
or
push
mov
fbstp
push
mov
aam
mov
negl
or
cmpsb
mov
dec
je
xor
sbb
icebp
orb
dec
cwtl
adc
jp
mov
push
loopne
orl
or
and
mov
bswap
mov
mov
jp
push
sahf
cmp
scas
cmp
mov
mov
lahf
ja
je
pop
btc
ss
xchg
test
mov
jp
fwait
ret
lods
or
orb
mov
pop
enter
xchg
fdivl
addr16
mov
dec
inc
add
dec
sub
adc
sub
add
inc
xchg
mov
pop
shrl
icebp
jecxz
pop
jnp
cltd
dec
push
pop
out
xchg
orb
aad
pop
add
sti
jno
and
or
push
adc
sub
push
sub
shrl
inc
sub
add
push
and
mov
xchg
push
out
test
push
cmpsl
xchg
into
push
jge
cmp
orb
mov
jecxz
inc
mov
xor
rcll
sti
lods
fs
lds
ja
jns
imul
adc
push
sbb
sub
das
cwtl
adc
les
clc
jg
cltd
outsb
das
mov
subb
mov
inc
pop
cwtl
adc
xorb
cmp
push
jne
rorl
inc
push
or
mov
call
jmp
inc
or
mov
les
lret
dec
out
inc
insl
and
xorb
lods
daa
sti
cmpb
fildl
inc
mov
mov
in
sub
add
xchg
mov
push
iret
cmp
sbb
dec
mov
int3
and
xchg
addl
ss
or
and
mov
cmp
call
xchg
jbe
inc
stc
test
in
insb
add
adc
mov
add
cld
mov
dec
pop
push
les
inc
test
mov
sub
push
int3
mov
int3
adc
cmp
int3
and
jecxz
pop
daa
fiaddl
sbb
or
push
jmp
jmp
cmc
daa
sub
frstor
or
jb
fildl
pop
repz
sbb
sbb
push
rclb
xchg
mov
inc
sub
and
stos
scas
mov
mov
push
push
scas
xchg
out
call
pop
or
inc
mov
xor
shlb
pop
mov
imul
mov
xor
jnp
mov
cmp
cmc
pop
arpl
mov
adc
or
add
inc
sub
push
lret
lahf
pop
lahf
addr16
sbb
add
and
roll
mov
push
mov
addb
bound
dec
and
lock
mov
push
xor
ja
xor
mov
cmp
push
add
nop
fwait
add
or
dec
adc
or
and
subl
dec
pop
inc
mov
mov
jno
or
daa
jmp
ss
mov
xchg
dec
inc
jmp
adc
cmc
push
addr16
in
mov
scas
outsl
mov
inc
cmpsb
xor
and
pop
jae
ss
sbb
cmp
cmp
out
fdivrs
xor
sub
sarl
pop
in
outsb
adc
es
lods
dec
cltd
and
sbb
les
lea
scas
pop
loop
lret
mov
test
aas
rol
sub
mov
call
mov
push
test
and
sbb
or
sbb
iret
lret
xor
adc
push
insb
adc
shr
mov
add
xchg
jb
in
push
and
aaa
adc
mov
addb
das
xor
push
scas
add
mov
jo
add
mov
push
or
mov
mov
daa
call
stos
neg
mov
xchg
repz
mov
adc
repnz
fdivs
mov
xor
fcoml
add
mov
lods
mov
movsb
mov
lahf
xchg
mov
dec
in
jmp
loopne
mov
cmp
add
inc
cmp
cmp
jae
mov
ret
mov
sbb
push
enter
pop
jne
and
pop
shll
jnp
stos
lret
mov
cld
jo
push
inc
pop
cmpsl
fwait
xchg
shl
pushf
push
add
pop
xor
cs
cmc
add
mov
lock
pop
push
pop
lods
mov
push
mov
pop
mov
add
pop
hlt
pop
xchg
je
sub
push
packssdw
and
mov
adc
sbb
inc
sbb
rol
fwait
mov
pop
pop
push
xchg
sub
sbb
jne
xchg
mov
mov
pop
in
xchg
mov
push
je
scas
and
mov
inc
jo
inc
or
and
outsb
add
sub
ror
xor
ds
fcomp
or
xlat
jo
hlt
popa
mull
leave
sub
popf
jmp
rorl
stos
and
sbb
add
or
mov
orb
les
mov
mov
adc
cmp
cmc
in
cmc
xor
pop
stos
sub
popa
mov
jle
pop
mov
adc
pop
outsb
inc
or
ret
adc
push
mov
insl
daa
cmc
clc
hlt
lods
dec
add
aad
inc
jb
or
jle
cmpsl
xchg
mov
sarl
push
stc
or
add
mov
call
xor
push
push
ficomps
add
adc
mov
in
or
sub
pop
aam
jle
and
ret
dec
add
mov
outsl
and
notl
pop
dec
adc
dec
pop
xor
lds
aam
dec
movsb
addb
and
iret
push
or
and
not
pusha
pop
mov
mov
stc
jns
pop
sar
mov
pusha
movsb
ret
lret
xchg
test
xor
sar
popa
or
push
xor
push
jbe
ret
cmp
movsb
repz
arpl
fwait
das
xlat
xchg
mov
add
push
mov
test
mov
sti
clc
inc
mov
dec
and
imul
sbb
xor
idivl
pop
mov
sbb
jb
pop
mov
mov
int
push
popa
mov
jp
add
ljmp
dec
insl
inc
mov
dec
cmp
rorl
mov
or
sub
cmp
pushf
jge
sub
or
sub
xorl
adc
aas
aam
mov
aam
sub
xchg
test
loope
mov
and
jecxz
or
push
fists
jecxz
lods
add
push
push
stos
jle
jbe
test
arpl
insb
pop
mov
jnp
jno
mov
dec
or
jns
out
sub
je,pt
add
loop
imul
and
dec
fisubl
jae
das
incl
insl
aad
shrl
bound
mov
sbb
stos
sub
movsl
mov
mov
ljmp
adc
into
and
add
imul
test
jl
jnp
aam
nop
shll
cmp
aam
sub
inc
adc
movsb
mov
sub
hlt
lahf
and
ljmp
mov
lret
rorl
sub
test
sub
xor
add
or
mov
xchg
mov
dec
sub
and
and
lret
movb
add
dec
mov
lock
or
and
sbb
inc
movsb
or
bound
sub
mov
nop
pop
sub
sahf
stos
add
xor
or
out
aam
dec
push
add
push
add
cmp
push
test
mov
incb
inc
cmp
std
inc
push
sbb
insl
adc
lahf
ds
mov
adc
int3
adc
xorb
pop
xchg
leave
adc
or
cmp
mov
lahf
or
adc
sahf
inc
adc
andb
dec
or
push
popl
pop
and
movsl
or
arpl
xor
mov
cmp
out
sbb
xorl
adc
call
sbb
testl
lods
call
ljmp
bound
insb
mov
negl
pop
add
pusha
push
int3
and
push
xchg
test
add
push
mov
movsb
das
lret
sbb
xchg
mov
sub
pop
adc
jbe
add
pop
and
test
adc
mov
addl
jbe
mov
or
ret
scas
aam
popa
push
jo
rorb
ret
arpl
add
out
adc
mov
pop
xorb
dec
adc
es
mov
test
bt
jae
cwtl
aaa
sarl
out
sub
adc
sub
jbe
inc
adc
xor
dec
pop
fsubs
and
or
sub
aaa
jb
mov
cmc
int3
sub
in
push
inc
cwtl
out
xchg
xchg
es
dec
add
mov
add
pop
lahf
cmpsb
xor
pop
int
push
push
dec
addr16
rolb
lcall
add
jo
add
loopne
mov
add
inc
add
xchg
add
ss
leave
add
fisubrs
mov
fcompl
mov
popa
inc
xor
xchg
mov
jb
rorl
jo
mov
stos
lret
inc
xchg
and
pop
movsl
int3
out
push
ret
loop
fildl
adc
std
dec
and
jmp
xor
movsl
mov
es
or
adc
sbb
popf
push
add
stos
loope
add
rcll
out
repz
test
sbbl
or
dec
and
mov
and
mov
xor
push
sbb
add
icebp
push
into
add
bound
jp
imul
mov
aam
roll
addr16
jno
inc
dec
jne
sti
data16
sbb
pop
cmpsb
add
sbb
loopne
xchg
xchg
add
and
test
das
stos
pop
daa
add
push
pusha
cmp
shll
push
xor
push
xchg
or
pop
or
add
pop
lods
add
sbb
add
push
call
test
sbbb
and
sbb
repz
pop
inc
and
push
add
rcll
and
lahf
loop
dec
mov
add
push
pop
push
rdpmc
and
sbb
aaa
push
xor
lcall
jo
aaa
push
sub
in
inc
jo
sbb
mov
pop
in
icebp
loopne
test
es
adc
or
dec
jge
push
dec
fidivrs
roll
jecxz
mov
aam
and
mov
stc
push
daa
subb
push
push
popf
cmpl
mulb
out
cwtl
loopne
popf
sti
sbb
adc
adc
mov
insb
lret
push
int3
mov
mov
roll
shrl
or
std
jp,pt
cmpsb
mov
fstps
pop
xchg
or
in
orb
arpl
filds
ljmp
jmp
jmp
or
xor
les
pushf
stos
inc
dec
pop
test
push
addr16
in
jmp
ret
or
xor
stc
cltd
sbb
jge
lods
je
adc
pop
call
lret
mov
int
shrb
push
sahf
push
lcall
mov
adc
add
shr
sub
inc
rorl
xor
add
sahf
sbb
xor
push
dec
pop
inc
shl
daa
add
popf
ret
adc
jno
and
lahf
dec
add
xor
imul
or
jbe
dec
cmp
stos
shll
pop
mov
jns
fmuls
adc
or
mov
dec
dec
and
dec
ds
sub
add
dec
inc
notl
shll
pop
movsl
pusha
daa
aam
jbe
stc
jge
stos
jp
push
fcomp
lock
imul
push
push
imul
adc
mov
adc
pop
inc
sbb
mov
fsubrs
pop
add
imul
push
int3
push
je
je
iret
sub
shrb
call
call
or
mov
movnti
inc
shrl
iret
pusha
add
push
sub
or
add
into
aad
sub
pushf
mov
mull
inc
scas
and
add
iret
inc
add
cmc
push
int
aaa
shll
inc
cmpl
stos
sbb
invd
scas
push
popf
push
adc
loopne
and
pop
sub
movsl
test
imul
inc
pop
dec
or
int3
push
fstps
sbb
test
jecxz
cld
dec
mov
call
inc
inc
inc
push
lds
push
and
sbb
mov
ret
jb
scas
mov
cmp
sub
mov
sbbl
dec
ja
sahf
cmp
push
sub
sub
int3
and
mov
js
repz
lret
pop
lret
xor
andb
inc
xchg
call
loopne
sub
jb
adc
rcll
or
adc
xchg
mov
movsl
xchg
or
xchg
or
dec
loope
xchg
cmp
mov
mov
daa
cmp
mov
jl
and
push
mov
test
jbe
push
xor
ja
inc
add
xor
mov
mov
out
pusha
sbb
iret
inc
mov
dec
add
cmpsb
push
push
rol
out
lods
gs
sbb
sub
sbbb
iret
das
mov
pop
bound
adc
lea
imul
and
xor
pop
out
std
ss
ds
data16
sahf
cmp
insl
arpl
and
inc
cmpsb
lock
inc
jnp
fidivrs
or
mov
aaa
std
add
inc
add
adc
add
rcrb
and
xor
push
mov
outsl
stos
fsts
add
and
xor
xchg
dec
cmpsl
nop
sub
popf
pop
xor
je
je
lock
or
mov
add
cmpsl
sbb
push
fcompl
xchg
out
xor
pusha
inc
ror
bound
xor
mov
or
stos
sarl
lcall
xor
pop
sub
js
mov
fdivrs
movsl
in
cmp
iret
cld
mov
bswap
mov
cwtl
sbb
push
popa
push
das
push
xor
dec
jbe
shll
or
cmpsl
add
sub
or
and
inc
fidivs
orb
adc
sub
ret
lods
and
mov
pushf
mov
push
adc
push
sti
xlat
or
xchg
jbe
adc
push
mov
and
test
or
or
jns
aaa
push
inc
sarb
and
jne
fwait
dec
xor
loop
call
dec
mov
shrl
push
movsb
imull
adc
fwait
push
pushf
pop
adc
shlb
mov
addr16
orb
sarl
enter
jp
or
jl
push
pop
lea
and
add
xor
daa
test
dec
xor
or
mov
pop
inc
inc
and
adc
cmpsl
mov
mov
jecxz
insb
mov
push
and
xchg
mov
or
popa
jle
ficompl
sbb
mov
push
in
es
popf
add
or
push
mov
in
shrl
enter
sub
je
dec
mov
xchg
subl
jns
pop
xor
imul
fcoml
add
add
cmp
fwait
mov
mov
jno
pop
outsl
das
call
iret
mov
dec
out
dec
fcmovne
insl
sbb
and
pop
inc
inc
rcr
insb
xchg
inc
and
mov
inc
xchg
sub
and
cwtl
push
adc
and
jbe
fsubr
shll
pop
sbb
and
inc
movsl
stos
pop
insl
xor
popa
sub
dec
dec
xlat
pusha
ret
loopne
mov
in
sub
pusha
jmp
into
inc
loope
aam
scas
ss
or
fidivrs
add
and
mov
push
mov
and
sub
and
out
push
movsb
add
mov
mov
pop
movsb
inc
lret
xor
cmpsb
aam
cmp
aaa
add
ret
push
add
aas
push
jo
mov
jecxz
dec
or
ja
lods
scas
notb
dec
add
notb
mov
sbb
mov
fs
pop
icebp
stos
pop
das
push
xor
pusha
inc
cmp
lcall
cmc
xor
mov
mov
aad
movsb
lods
and
xchg
sub
shlb
scas
push
cmp
adc
outsl
push
push
ja
in
push
iret
push
and
add
outsl
andl
or
add
in
xchg
jp
push
and
orb
scas
mov
xor
inc
js
test
inc
adc
pop
add
cmp
lods
cmp
sub
in
pshufw
out
lds
popf
stos
add
push
ss
sub
lahf
sbb
call
push
add
mov
mov
fcoms
popa
lcall
jmp
stos
push
das
jne
stos
jbe
adc
xchg
inc
jl
sbb
and
adc
jge
int3
add
and
lods
and
popa
call
js
sub
jno
add
push
loop
lods
sbbl
aam
aam
daa
inc
adc
inc
xlat
int
jo
int
notl
or
push
push
or
inc
inc
inc
es
cmp
and
cwtl
sub
ljmp
insl
ljmp
es
mov
cmp
add
out
sbb
lock
ss
daa
or
popa
negl
leave
xchg
rorl
inc
mov
subl
adc
aaa
pop
cmp
inc
mov
mov
adc
scas
mov
shll
adc
pop
daa
add
mov
in
bound
mov
or
or
lock
shrb
push
mov
adc
sbb
add
jl
addl
inc
pop
jne
outsl
in
movsl
out
jne
aam
inc
push
les
push
xor
insb
mov
pop
mov
stos
mov
hlt
into
sbb
inc
test
cmp
repz
push
and
or
ss
jo
add
or
in
scas
and
sti
out
mov
or
xor
shl
sbbl
lahf
popa
aaa
adc
sahf
fs
nop
fcomp
fs
cwtl
push
dec
negl
loopne
jae
nop
leave
loopne
es
mov
push
adc
ss
loopne
out
add
mov
add
pop
clc
lods
mov
fsincos
popf
add
pop
ljmp
jp
and
ret
pop
push
sub
adc
loope
in
push
mov
pop
addr16
or
dec
mov
cmpsb
or
xor
imul
inc
arpl
enter
add
test
shlb
insb
add
enter
xchg
rolb
and
push
and
popa
xor
mov
ss
roll
arpl
rorb
xor
sahf
inc
call
jl
aam
clc
fsubrs
add
clc
pop
mov
repnz
pop
sub
xor
cmpsl
xchg
dec
fadds
add
fcoms
test
addb
add
cmp
popf
dec
xor
adc
into
aas
sbb
int3
imul
add
mov
test
aad
pop
adc
cmp
loope
adc
bound
pushf
fldt
movsb
in
sbb
insl
mov
pop
lret
pop
loop
inc
int
sub
mov
cmpl
fdiv
adc
sbb
andb
data16
mov
mov
mov
sahf
loope
adc
cmpsb
sub
mov
sbb
add
fsubp
push
orb
mov
and
add
jo
adc
je
jl
adc
push
dec
jbe
mov
xchg
inc
or
rcll
sbb
loope
push
sti
cmpsl
dec
or
dec
add
mov
jb
insl
outsl
add
lds
aaa
and
sbb
adc
mov
push
pop
daa
add
sbb
xchg
hlt
dec
pop
sbb
push
leave
push
mov
pop
or
loopne
inc
and
test
xor
xor
push
insb
add
sbb
popf
mov
js
pop
ss
stos
jo
jo
into
adc
scas
js
push
cmp
or
xor
into
cmp
push
lcall
and
or
ja
rol
shlb
lods
test
add
mov
push
jo
or
out
add
and
vpminsw
ret
fwait
xor
jo
insb
jp
pop
inc
pop
iret
jecxz
bound
les
jae
inc
jo
loop
or
xchg
aad
push
jne
mov
mov
mov
lods
and
dec
push
jne
jg
iret
mov
mov
xchg
rcll
jp
lods
data16
nop
pop
imul
fimull
sub
jo
shlb
adc
fisttpl
xchg
andb
sbb
fstl
adc
inc
and
sti
fucomip
loopne
pop
ficompl
int
xchg
and
mov
adc
mov
mov
xchg
test
add
out
insl
mov
bound
out
outsb
xchg
inc
mov
rcrl
or
and
das
ds
cltd
fmuls
sub
repz
add
xchg
push
aad
in
ss
dec
in
add
push
loopne
imul
cmp
lret
fs
or
repnz
and
arpl
mov
sub
cmp
mov
arpl
sub
jge
lods
fstpt
mov
filds
xor
popf
inc
inc
rcr
fwait
imul
cld
in
pop
add
out
test
fildl
mov
inc
in
lcall
mov
cmp
movsl
dec
jb
cmp
push
cmp
in
insl
add
stos
fsubrs
add
cmpsb
and
adc
pop
pop
or
adcb
mov
in
insl
je
add
stos
stos
mov
arpl
outsb
unpcklps
add
sub
xchg
out
add
shl
dec
mov
adc
sarb
fcmovb
mov
jne
sbb
add
popa
sub
and
inc
faddl
dec
aad
fmull
or
jmp
lock
cmpsl
out
mov
loopne
jp
add
addb
lods
pusha
imul
test
mov
push
push
int
lret
stos
mov
push
cmp
push
mov
arpl
push
jmp
icebp
aam
cmp
adc
jl
xorl
in
pop
adc
imul
xor
jecxz
jo
fistpl
sub
sarb
push
add
xchg
ficoml
xor
sub
nop
cwtl
jno
dec
fcmovne
aam
mov
xchg
rcr
push
mov
mov
int3
inc
rorl
lods
add
cs
pop
sahf
pop
nop
add
xchg
lds
loope
pop
or
mov
pop
push
xlat
sbb
mov
dec
inc
pusha
pop
add
sbb
test
mov
mov
push
scas
movl
xor
adc
inc
jno
jo
test
xor
ja
jl
loope
loope
aad
pusha
pop
rolb
xor
leave
add
jb
mov
in
jmp
adc
mov
or
inc
xchg
and
xchg
ja
ffreep
pop
jne
data16
cltd
lock
scas
int
cld
mov
dec
aad
addr16
add
loopne
sub
pop
in
arpl
push
prefetch
pop
adc
mov
cmp
fildll
rclb
ret
jl
push
pusha
test
pop
ss
push
popl
jl
mov
mov
js
inc
inc
mov
or
je
test
stc
pop
xlat
imul
popf
imulb
mov
pop
xchg
in
or
mov
add
mul
int
jae
dec
add
call
mov
dec
add
scas
inc
inc
jp
inc
test
cmc
xor
pop
lea
xlat
sub
dec
and
mov
mov
sti
xchg
or
or
scas
add
ss
add
or
push
mov
jne
xlat
in
popa
cmp
cmp
out
stos
mov
outsb
fidivrs
ficompl
push
negl
sub
or
inc
xlat
movsb
mov
push
mov
negb
iret
jmp
mov
addr16
addr16
cmp
call
adc
xor
sub
movsl
lds
in
popa
imul
jae
mov
push
imull
leave
das
add
jns
add
xor
mov
dec
mov
inc
sbb
xor
sbb
mov
inc
jecxz
mov
add
xchg
into
in
iret
aam
subl
js
push
sbb
dec
push
push
pop
rcrb
int
and
or
lock
out
jp
or
xchg
sub
push
adc
cmp
mov
scas
jmp
cmp
xor
sti
shlb
arpl
xlat
xor
pushf
inc
xor
sub
push
in
les
jp
and
pop
xor
add
dec
daa
xor
adc
and
cmp
loope
call
insb
pop
lock
loopne
insl
iret
out
push
roll
lds
cmp
mov
pop
lcall
inc
push
jbe
fsub
rol
scas
push
add
stos
iret
sub
daa
es
and
lds
inc
out
je
push
jecxz
dec
das
pop
je
mov
mov
stc
shr
movb
push
addl
aaa
mov
cmpsl
and
cmpsb
ret
pusha
or
jg
xor
xor
adc
jno
xor
mov
imul
dec
pop
push
adc
js
loop
adc
sahf
mov
je
mov
and
xchg
mov
ja
bound
outsl
idivl
xlat
sub
hlt
das
pop
idivl
or
push
sti
mov
jge
movsl
pop
xor
and
and
mov
scas
out
lds
roll
jne
mov
xchg
mov
inc
les
insb
mov
pop
adc
ljmp
xchg
inc
sbb
push
leave
sbb
pusha
fsubrl
push
xchg
nop
fwait
rcrl
into
shlb
push
pushf
or
push
mov
iret
gs
stos
ret
add
rcrl
ret
fildll
xchg
sub
adc
push
out
pop
imul
sbb
jae
lret
icebp
push
mov
int
and
jp
and
push
bound
pop
xor
les
mov
imul
sub
add
and
ja
add
push
push
in
popa
cmc
cmp
or
adc
and
push
jae
jnp
gs
shr
rorl
or
adc
and
xor
jnp
cmp
adc
pop
push
lea
into
aad
clc
inc
mov
mov
dec
lcall
sub
sahf
in
insl
sbb
or
mov
jp
adc
dec
add
mov
dec
push
popa
aaa
test
aaa
shrb
sbb
or
add
add
add
adc
add
test
imul
dec
push
add
andb
bound
mov
xor
mov
xor
adc
mov
lahf
xor
xchg
inc
sub
lods
jb
lds
fidivrs
mov
and
push
mov
push
push
mov
stc
insb
mov
add
push
and
sub
addl
pop
mov
pop
ljmp
push
shll
pop
and
cmp
ds
cld
daa
jo
lret
pushf
rol
rcl
mov
pop
rclb
rclb
fldenv
mov
out
fsubs
clc
jp
mov
mov
cmp
fisubrs
shlb
push
xor
std
and
and
jb
or
mov
xor
call
fdiv
push
mov
lds
cmp
sub
pusha
add
and
add
cmpsl
adc
andl
adc
cs
lfs
mov
call
inc
adc
push
shll
jl
or
push
movb
out
loop
addr16
mov
aaa
and
sub
je
rcll
das
adc
push
cmp
adc
dec
adc
jne
lock
jbe
push
das
popa
jmp
and
scas
and
push
cmp
jmp
iret
dec
jge
or
sub
lods
stos
pop
sti
das
adc
lods
inc
add
decl
or
test
lods
jne
cwtl
add
cmpsl
and
add
lret
xor
insb
inc
pop
xor
shrb
lahf
aam
pop
xchg
pop
xor
ret
stos
stos
es
mov
xor
sub
daa
sub
sub
loopne
cltd
xor
add
xor
jns
in
adc
xlat
jb
or
sub
adc
and
mov
div
idivl
roll
push
or
inc
adc
xchg
lcall
cs
fmuls
mov
mov
les
push
xor
sbb
cs
or
iret
pop
add
sub
adc
jns
cmp
dec
pop
xchg
arpl
ds
add
push
adc
push
loope
ja
mov
push
pushf
or
mov
xchg
rcll
xor
push
or
inc
mov
jo
jl
add
sub
dec
add
insb
mov
push
ljmp
sbb
and
push
push
xor
jle
out
add
sub
mov
push
xchg
das
imul
rcll
and
sbb
add
mov
loopne
into
jne
jnp
sub
inc
or
jp
add
mov
push
in
scas
data16
out
insl
add
sbb
mov
insb
dec
xchg
stos
and
cmp
int3
add
adc
scas
inc
xor
xor
adc
push
dec
add
push
dec
inc
xchg
inc
mov
psllw
mov
loope
les
out
dec
inc
test
push
fnsave
inc
jno
hlt
out
mov
adc
add
mov
neg
ja
sub
and
sub
es
xchg
adc
adc
inc
mov
subb
mov
insl
sub
jecxz
ss
add
daa
pusha
jbe
adc
add
jge
adc
stos
jne
inc
idivb
inc
mov
pop
inc
iret
sub
dec
push
sahf
adc
inc
or
punpckhdq
loopne
push
push
leave
inc
das
adc
outsl
dec
mov
mov
jae
pop
fucomi
out
or
clc
daa
repz
push
out
xor
jno
outsl
fidivrs
fs
and
add
push
pushf
test
aad
jno
enter
add
add
inc
jmp
fcomip
inc
jp
add
inc
or
sbb
bound
outsb
pop
xor
test
adc
jne
add
xchg
xor
dec
subb
pop
mov
shl
push
add
or
jmp
in
dec
xchg
imul
xor
in
cmp
add
mov
shll
jg
mov
push
call
add
shrb
das
lods
and
pop
ja
inc
jge
fsubr
inc
fstpt
inc
jnp
dec
mov
pop
mov
and
fdivrl
jne
dec
fimuls
aad
sbb
cmp
adc
sub
push
inc
loope
ljmp
push
pop
lret
fwait
xchg
jecxz
cmc
add
or
jbe
ss
aam
fs
and
adc
int
jb
les
inc
sbb
lret
jmp
enter
icebp
cmpsb
in
hlt
mov
sub
mov
nop
inc
pop
or
dec
sbb
inc
sbb
scas
xchg
push
mov
xchg
sti
jo
gs
push
sub
mov
push
shll
mov
je
add
push
imul
sub
and
push
sbb
or
dec
shlb
fs
dec
inc
test
push
adc
inc
xchg
or
test
dec
push
inc
mov
pop
insb
mov
or
shlb
xchg
out
pushf
stos
add
loop
aaa
test
mov
pop
add
in
mov
sub
lcall
shrl
inc
movsb
loopne
js
cmp
push
adc
popa
ret
xchg
js
test
call
and
das
scas
and
jb
mov
pop
inc
sbb
mov
es
mov
dec
add
mov
lret
xchg
mov
adc
test
push
aas
scas
add
stos
cs
xchg
das
sbb
and
loopne
arpl
mov
push
movsb
movsl
sub
pop
cmp
popf
xchg
mov
sbb
sbb
jno
sbb
pop
js
nop
and
add
push
lock
jge
push
sbb
add
or
inc
mov
inc
inc
das
add
adc
dec
gs
dec
flds
add
outsl
mov
out
loop
mov
mov
aad
jne
sbb
push
pusha
jno
clc
stos
ljmp
repnz
ss
jle
mov
scas
and
lea
shl
fimull
xchg
bound
add
dec
sbb
pushf
add
or
mov
mov
pop
jbe
xchg
and
jp
add
fdivrs
popf
push
inc
aam
mov
and
jmp
sarl
or
cmpsb
mov
cmp
sub
or
and
pop
jle
in
filds
adc
lsl
cmpsl
leave
inc
rclb
push
and
add
scas
and
mov
sbb
cmc
daa
int
push
or
jp
cmc
dec
push
stos
mov
push
fs
and
jb
push
mov
mov
aam
push
in
jp
popf
xor
or
aas
into
pop
jle
fsubr
adc
sub
fnop
or
dec
loope
stos
cwtl
push
aam
rcr
ja
bound
xchg
mov
cmc
push
nop
push
mov
rcrb
es
sub
icebp
lods
daa
es
lods
es
aas
push
pop
lcall
xchg
xor
jo
dec
sub
stc
and
out
jl
fcmovb
push
enter
or
mov
xchg
sub
and
shl
adc
mov
lret
jg
loopne
cwtl
mov
sbb
shll
inc
lsl
dec
out
ss
pop
ja
pop
movsb
xchg
cmp
or
sbb
in
insb
fisubrl
in
sbb
jae
adc
jge
xchg
dec
add
test
jnp
mov
movsb
pop
enter
jo
cmp
jo
and
push
popf
or
aas
out
inc
in
push
dec
xchg
jl
ret
xchg
icebp
ror
scas
sbb
test
scas
and
fidivs
lea
cmp
mov
je
mov
lods
repnz
in
call
fldt
into
sbb
mov
fbld
inc
sbb
das
rclb
test
aad
adc
sub
negl
aaa
mov
inc
ja
movaps
fdivrs
in
mov
iret
mov
or
loope
mov
shrl
and
movsb
insb
icebp
inc
cmp
ret
fcomps
jb
sbb
popa
shrl
pop
jne
ret
loope
icebp
and
push
shrb
lret
mov
fisubs
ret
and
adc
adc
add
adc
jnp
add
mov
loopne
inc
les
pop
cmp
lds
clc
dec
mov
inc
lock
mov
add
aad
push
es
inc
bound
test
mov
or
ret
pop
outsb
or
cmpsb
mov
les
jecxz
loopne
or
add
sub
pop
cmc
outsb
loopne
xchg
mov
sbb
dec
add
aad
rorb
or
add
je
es
or
push
or
add
js
pop
mov
test
test
add
lcall
xchg
mov
movsl
inc
les
sbb
clc
cmpsb
sbb
adc
repnz
or
adc
xor
call
mov
cmp
bound
xchg
rcrb
dec
and
pop
aas
xchg
add
push
inc
out
in
mov
sub
add
mov
and
dec
rcrb
aam
pop
iret
fnstsw
push
jne
xor
inc
fs
cs
cmovg
test
sbb
add
or
les
rcrl
mov
test
sbb
out
lock
sub
adc
andl
pop
iret
pusha
addl
movsb
icebp
js
push
add
push
movb
data16
add
outsb
int
fiadds
xor
jle
js
and
movsl
je
sub
adc
jae
ds
test
fiadds
es
rorl
or
xchg
or
jge
mov
push
cmp
push
or
push
pop
add
inc
icebp
and
and
jge
inc
push
ds
ret
loope
xor
xor
outsl
cmp
inc
push
js
lcall
int
push
pop
mov
popa
pusha
clc
mov
dec
ss
mov
mov
add
and
add
xor
adcb
adc
xor
mov
xor
pop
pusha
mov
mov
dec
add
xor
subb
fildll
mov
les
aaa
aaa
add
sbb
push
jle
adc
and
sbb
lret
fbld
mov
ljmp
sbb
add
xorl
add
popf
mov
dec
mov
sub
jp
cmp
or
add
adc
outsb
sub
add
xor
push
pop
jb
nop
sti
cvtpi2ps
out
shrb
mov
pop
ret
jo
xchg
push
jl
and
sbb
sub
jb
ret
adc
cmp
mov
cmp
mov
lods
or
adc
inc
rorl
lret
in
shrb
xor
and
divl
pop
cmp
shrb
jnp
daa
dec
pushf
mov
xor
xor
pop
lret
xor
inc
add
decb
or
push
das
cwtl
sbb
mov
rorl
test
inc
add
push
shl
cwtl
and
sarb
sub
pop
adc
xchg
inc
movsb
je
push
push
mov
and
mov
dec
invd
loopne
mov
cmp
popaw
aaa
sbb
addl
inc
push
mov
mov
push
cmpsl
sub
adc
jge
lods
call
outsb
aad
fsubs
ret
popa
movsb
dec
aaa
jl
lcall
push
aam
mov
and
pop
and
or
adc
xor
je
jnp
cmp
movsb
scas
scas
insb
scas
sbb
ja
into
insb
push
pop
inc
fdivrl
fnstenv
push
insl
push
mov
in
adc
dec
clc
rorb
push
mov
lret
xchg
lds
cmp
testl
push
sbb
nop
scas
test
stos
xor
loop
sbb
imul
add
push
sub
push
jmp
in
outsb
xchg
das
je
cmp
mov
lods
mov
dec
stos
jnp
xor
mov
inc
push
std
sbbb
mov
mov
push
push
mov
push
leave
sub
sbb
shll
mov
sub
mov
xchg
xlat
jl
cmpsl
popa
call
fcmovnb
mov
push
push
mov
iret
lret
or
push
pop
das
inc
arpl
mov
popa
xorb
fisttpl
and
incl
cli
add
sbb
scas
cmc
xor
add
iret
mov
add
xchg
fcmovnb
stos
push
mov
jge
jp
mov
and
inc
mov
or
ja
shrb
mov
pop
push
and
mov
push
jo
dec
push
popl
hlt
and
inc
dec
add
stos
pop
mov
xor
xorb
stos
daa
dec
cmp
sbb
mov
pop
cmp
cs
cmp
xor
sti
fsubs
sarb
es
or
and
aas
mov
movsb
sbb
sub
or
push
xchg
daa
lcall
fdivs
add
cmp
pop
adc
inc
add
cmc
mov
aaa
cmp
xchg
mov
xchg
mov
js
ret
xchg
lock
cwtl
cmp
arpl
cli
fisttps
or
push
cmp
pop
aaa
aas
fldcw
mov
adc
xchg
or
sahf
jmp
int3
aaa
shll
or
cltd
jmp
loop
xor
jae
bound
or
aaa
or
push
test
sbb
test
or
push
mov
jne
adc
int
int
jae
andb
loop
repnz
gs
dec
incb
jmp
test
addr16
lock
int3
xorl
adc
jecxz
inc
ret
and
push
mov
js
add
addr16
xor
mov
arpl
pop
mov
jno
or
sahf
icebp
xchg
es
xor
les
sbb
pusha
inc
xchg
sub
lods
add
lret
mov
push
adc
mov
mov
loopne
xchg
add
nop
ss
and
xor
pusha
inc
sub
test
pop
les
dec
adc
add
cwtl
cmc
push
lock
pop
popa
cmp
movsl
jge
addb
out
icebp
mov
shrb
add
popf
jge
mov
mov
fcoms
hlt
dec
sub
add
mov
dec
insl
inc
cs
mov
dec
popl
fsubl
test
ss
jge
mov
data16
pop
int3
or
popa
cmpsb
pusha
inc
push
pop
shlb
sbb
sub
lods
lahf
bound
adc
das
jmp
dec
xchg
xchg
sub
lret
xor
enter
outsb
shrl
es
iret
jecxz
test
xchg
jmp
add
add
and
and
sub
nop
and
push
les
mov
fmull
sub
add
repnz
and
dec
xchg
jo
js
pop
ret
or
push
insl
inc
mov
mov
dec
mov
mov
in
movsb
jo
cmc
lcall
mov
xor
add
mov
xor
pop
fiaddl
ret
dec
in
mov
in
cmp
fwait
push
xchg
sub
rorl
and
jne
and
cmp
add
loope
adc
jmp
and
add
push
sbb
inc
mov
sub
jg
test
and
cmp
sub
fisubl
daa
jp
call
xor
and
mov
jae
stos
mov
jle
into
sbb
add
and
push
fstl
out
sub
loope
cwtl
aad
pop
xor
xor
aam
or
cld
pusha
and
cmp
je
adc
movb
aad
cmp
aad
mov
xchg
sbb
push
mov
push
pop
mov
add
lahf
adc
jb
mov
adc
fstps
iret
inc
mov
fwait
rclb
mov
inc
lret
into
insb
jno
out
inc
jo
sti
pop
fldt
dec
mov
add
dec
mov
xchg
add
lcall
jbe
jo
xor
jnp
rcrl
push
xchg
or
or
imul
jae,pn
popa
adc
insl
inc
sub
xchg
fwait
popf
mov
aam
inc
xor
popa
cmp
int3
fs
inc
push
sub
into
pop
aaa
mov
les
imul
pop
stos
mov
enter
inc
scas
sbb
jo
push
test
push
ljmp
testb
jno,pn
sbb
fstps
shrb
add
xor
nop
and
sbb
scas
cmp
sbbb
sbb
aaa
inc
add
mov
push
sti
push
cmp
repz
shrb
addr16
rsm
push
loop
iret
pushf
sbb
sub
loopne
inc
rcrl
sbb
cmp
inc
and
test
repnz
lods
ljmp
jp
rcrl
or
icebp
call
or
aam
mov
je
call
sub
or
pusha
and
inc
xchg
rcrl
sti
sbb
fisttps
pop
sub
cmpsb
or
call
cmp
xorb
ret
adc
and
ja
mov
iret
lea
mov
cmpsb
loop
outsb
mov
or
mov
sbb
int3
pop
sub
add
out
and
cmpsb
rolb
adc
adc
data16
ja
push
or
sub
ss
pop
cmp
push
and
stos
jnp
popa
sbb
testl
or
pop
push
adc
inc
in
push
pop
push
daa
scas
cmp
aam
inc
cmpsl
data16
sbb
hlt
es
mov
add
in
hlt
jmp
movsb
add
pop
pop
lret
inc
rclb
in
call
iret
out
insb
sub
mov
andl
mov
js
inc
das
insl
push
mov
jno
mov
cmpsl
sbb
adc
cld
jle
sub
cwtl
push
out
mov
int3
or
lods
sub
lods
adcb
xchg
add
pop
sub
jne
pop
aaa
or
add
push
test
ja
sahf
sbb
fcmovu
jg
dec
xor
loopne
sbb
lret
rorb
fcom
stos
xor
mov
cmpsb
pop
add
notl
xorb
int3
das
jnp
inc
adc
adc
jo
cli
lods
adc
lret
cmp
or
add
popf
cwtl
add
adc
mov
loope
mov
dec
xor
pop
adc
or
inc
loope
add
mov
xor
adc
lret
and
xchg
adc
iret
negb
lods
push
cmp
lret
dec
mov
iret
or
insl
movsb
out
push
pop
orb
stos
xor
dec
add
cltd
dec
add
cmpsl
es
sub
cmp
dec
aad
ja
push
pop
arpl
lods
push
or
add
loope
mov
fstps
loopne
mov
enter
pop
scas
fsubs
loop
adc
out
add
add
jae
inc
out
rolb
mov
out
repz
lahf
mov
mov
lods
cmp
xor
sbb
mov
xchg
cli
jno
cmp
jnp
adc
stos
xchg
xor
sbb
scas
mov
daa
cmp
sbb
adc
mov
adc
mov
xorb
mov
sub
inc
lret
daa
cmp
iret
dec
add
pop
pop
je
push
adc
pusha
add
lods
mov
ljmp
jnp
jmp
insl
add
in
inc
int
jge
mov
mov
mov
dec
inc
pusha
clc
in
rep
test
add
fs
leave
mov
mov
lods
mov
and
loope
divb
cmp
mov
jp
mov
mov
les
and
push
inc
xchg
cld
jmp
sbb
adc
aam
and
loopne
subb
adc
adcl
cmp
jge
and
dec
mov
sub
iret
les
add
dec
xchg
sarb
out
push
add
popf
addb
push
inc
add
mov
dec
push
out
push
lea
test
movsb
sbb
sbb
jo
pop
cmpsb
xchg
and
push
mov
shl
rcll
push
adc
add
lcall
pop
add
mov
add
add
add
imul
rorl
mov
in
add
pop
aam
js
out
pop
roll
cmpsl
jl
lret
shll
mov
ds
pop
scas
movb
pop
mov
jne
scas
xchg
inc
adc
clc
add
sbb
daa
jne
inc
dec
xchg
lds
xor
rol
pop
push
ret
enter
je
add
push
sbb
push
int3
mov
push
push
jle
outsl
inc
inc
adc
add
push
dec
sti
sub
notb
cmp
sub
push
mov
cmp
sbb
pop
adc
push
mov
pop
xlat
sub
addr16
stos
push
iret
and
mov
or
les
mov
mov
and
inc
or
xor
and
pop
inc
xchg
aas
enter
and
in
daa
filds
test
rcr
xchg
sbb
sub
mov
add
lods
data16
adc
sub
mov
pop
add
mov
dec
enter
or
jo
adc
pshufw
or
test
fsts
add
push
dec
jo
dec
repz
push
sti
xor
sbb
daa
sahf
mov
stc
sbb
add
add
inc
shll
loop
les
ret
sbb
movsb
stos
or
sbb
sub
out
push
jge
ret
inc
and
fistpll
sub
jle
orb
loope
iret
mov
adcb
jp
xchg
aaa
add
or
lea
loop,pn
or
out
mov
add
pop
lock
cltd
add
add
and
sbb
lcall
push
stos
and
nop
cmp
add
mov
jns
cs
roll
cwtl
int
in
cmc
adc
setb
shrl
insb
aam
test
xlat
mov
lea
jbe
inc
inc
test
pop
xor
rol
stos
mov
add
inc
mov
sub
push
rdtsc
rol
jo
add
mov
cmpb
xor
movsb
out
mov
cmp
mov
or
and
into
rcl
jb
mov
or
mov
adc
adc
inc
std
xor
xchg
std
popa
test
push
ror
dec
mov
or
sub
jecxz
xor
xor
xchg
or
and
addr16
lds
add
add
jo
jecxz
jecxz
push
sub
int3
data16
add
and
mov
inc
jo
dec
jbe
push
adc
pop
insl
mulb
mov
dec
gs
adc
or
add
lods
and
jp
push
sbb
pop
adc
or
add
xchg
pop
mov
push
xchg
cmp
pop
add
filds
int3
jno
fsts
adc
add
dec
sub
mov
dec
in
loope
bswap
int3
into
rolb
sub
adc
in
cmc
es
adc
inc
push
pop
mov
addr16
push
xchg
and
xor
cmpsb
pop
mov
and
xor
push
add
mov
xchg
cmpb
testl
es
mov
jg
fcomps
aas
fidivrs
mov
sbb
cmp
les
lret
sbb
mov
mov
ss
push
lock
mov
push
hlt
shlb
ret
cs
xor
outsl
fldt
inc
inc
icebp
mov
push
mov
adc
iret
int
mov
mov
xlat
lcall
add
lods
or
adc
or
adc
dec
fimuls
mov
cmp
adc
or
push
outsb
pop
push
mov
hlt
inc
pop
jl
andnps
inc
jecxz
adcb
push
inc
or
mov
adc
notl
cmp
aaa
add
aaa
bound
push
iret
loope
add
sub
xor
mov
inc
test
scas
or
mov
scas
es
call
inc
dec
lret
mov
test
pop
adc
push
pop
pop
mov
mov
fcoms
and
dec
inc
jo
js
push
jmp
bound
ja
xchg
jl
imul
sub
xor
adcb
aad
pop
and
out
hlt
dec
add
push
and
frstor
push
cld
imul
out
adc
and
enter
out
jns
adc
outsl
or
or
inc
inc
je
and
loope
xor
inc
or
inc
rorb
mov
mov
mov
in
inc
sarl
fsubrs
add
loopne
xor
push
mov
loopne
sti
xchg
test
push
outsl
mov
scas
add
jae
scas
mov
cmpsb
outsb
insl
mov
jge
das
je
add
jle
push
add
lods
aas
xor
sub
adc
retw
push
popf
xor
in
jb
mov
sbb
subb
push
xor
ret
mov
fcmovne
jno
mov
inc
xchg
add
pop
outsb
lods
add
iret
push
sbb
into
bound
ja
cmp
and
hlt
fmulp
mov
mov
aaa
repnz
movsl
stos
pop
hlt
fistps
jnp
mov
aaa
add
in
jbe
pop
mov
decb
mov
fstl
fucom
stc
push
into
outsb
sub
jne
xchg
push
pop
xchg
lret
clc
mov
push
aad
mov
popa
dec
adc
test
test
shl
pop
xor
ret
loope
add
fnclex
mov
push
sti
sub
inc
ja
ficompl
aam
mov
mov
enter
inc
and
imul
rorl
push
pop
ss
enter
pop
pop
lds
popf
imul
ds
sbb
leave
push
les
shll
std
pop
aam
sbb
sbb
inc
or
pop
mov
push
leave
and
and
push
pop
and
clc
adc
sub
add
popa
sub
adc
push
sbb
inc
pop
cmpsb
imul
shrl
scas
pop
scas
and
jp
ret
adc
xchg
int
push
jns
pop
sub
cmp
jne
jl
adc
lret
hlt
adc
xchg
adc
cwtl
in
and
das
ss
sbbb
pushf
fdivrs
add
push
enter
adcl
cmp
nop
fs
es
lods
bound
mov
mov
iret
data16
lcall
pushf
cmp
sbb
sub
adc
icebp
lock
add
xor
ret
or
cwtl
test
pusha
dec
adc
sbb
loope
jg
pop
jb
inc
and
rol
insl
or
push
enter
ret
cmp
adcl
sbb
push
push
add
cmp
push
or
enter
cs
ret
mov
call
sti
jbe
jnp
loop
jl
lods
jno
xorb
gs
out
lods
and
loopne
mov
mov
sub
cmp
or
pop
ret
jbe
or
or
ss
inc
sbb
push
adc
stos
mov
clc
push
sbb
les
test
sub
jne
jo
jmp
and
jno
rolb
jmp
mov
pop
fisubs
xor
jbe
mov
mov
add
loopew
mov
adc
inc
inc
and
mov
or
mov
roll
xchg
push
push
mov
push
insl
in
sub
les
lret
push
or
test
icebp
outsb
sub
and
or
sub
dec
cmp
mov
push
movsl
mov
addb
mov
les
or
pop
xor
test
cmp
insb
add
inc
push
movb
outsb
sbb
fcomps
fwait
push
jg
test
adc
sbb
fisubs
ficompl
xchg
or
es
push
ret
daa
fldl2e
adc
mov
jno
xchg
shrb
sbb
adc
outsb
sbb
cltd
cwtl
push
lock
sarl
mov
cmc
sahf
xchg
adc
dec
shlb
inc
lods
jo
mov
jl
sahf
xor
cmp
iret
sub
xchg
pop
sub
imul
gs
lods
mov
jnp
stos
es
xchg
jno
mov
xchg
inc
mov
inc
rclb
test
xor
xor
insb
cmpb
in
mov
sbb
jo
push
aaa
cmpsb
xor
adc
sub
push
add
and
inc
inc
nop
loop
add
inc
mov
pop
test
movsl
bound
mov
jo
lds
jmp
jle
inc
adc
cmp
adc
or
sbb
sub
add
mov
inc
int3
leave
add
sub
mov
dec
inc
stos
test
in
jnp
stos
jl
stos
fwait
pusha
nop
adc
rclb
popl
lds
aaa
and
mov
notl
popf
push
push
push
mov
mov
adc
mov
aaa
ds
jno
fisttpll
sbb
mov
add
sbb
lcall
sbb
mov
jne
ds
cmp
push
out
and
lods
push
add
xor
in
stos
adc
scas
add
sub
fildll
pop
in
pop
mov
popa
cmp
push
outsb
push
jno
add
js
mov
sbb
jp
aad
inc
add
bound
jmp
push
pop
dec
xchg
mov
les
push
pop
loop
jne
mov
and
cmpsl
fwait
dec
pusha
loopne
cs
frstor
je
out
mov
cltd
inc
push
adc
je
xor
xor
leave
out
push
rorb
push
xchg
jp
mov
rclb
repz
clc
push
xor
add
lods
or
add
xchg
rcr
pop
jnp
jmp
pushf
test
imul
or
mov
pop
sub
and
or
sbb
adc
fsubl
adc
stos
dec
into
and
outsb
sub
dec
jne
lds
mov
add
test
sbb
into
outsb
and
orl
xchg
adc
xor
sbb
call
cmp
xchg
call
jge
stos
inc
inc
mov
jo
mov
ja
and
pop
adc
rclb
mov
mov
js
and
and
stos
xchg
sbb
or
enter
and
test
cwtl
insl
xchg
faddl
dec
add
ret
sbb
push
lds
xchg
mov
mov
movsl
js
inc
jbe
xor
mov
das
insl
add
inc
sub
mov
fcoms
insb
int3
aaa
in
xor
pop
cmp
pop
cmc
sbb
push
sarb
cmp
inc
test
hlt
iret
cld
subl
adc
scas
jp
sub
add
push
jmp
and
sub
push
add
dec
dec
xchg
lret
loop
jle
jp
mov
bound
add
adc
lock
sarl
mov
mov
xor
movsl
outsb
sub
adc
or
iret
pop
push
pusha
pop
xor
xor
inc
or
aaa
sub
ss
fwait
jae
in
test
imulb
add
dec
pop
xor
cmp
add
adc
adc
xchg
adc
or
fadds
mov
xchg
mov
add
adc
add
adc
xchg
inc
mov
in
xchg
inc
gs
sub
lea
inc
xchg
mov
cs
test
add
mov
cmp
push
mov
jge
js
in
popf
fsubrl
jb
jb
and
xchg
dec
clc
shrl
jbe
fldenv
popf
inc
inc
pusha
jbe
dec
stos
push
sbb
push
cmpl
push
sub
or
dec
mov
loopne
stos
xlat
add
idivl
dec
xor
adc
add
aam
mov
shll
or
inc
mov
imul
aaa
fisttpl
pop
in
fcompl
loopne
pusha
add
jle
lahf
xchg
dec
lret
add
shl
sbb
es
lret
sbb
cmovae
adc
xor
push
ds
sub
faddl
mov
das
stos
fadds
aad
push
std
popf
xchg
das
lods
push
es
fs
mov
daa
data16
dec
xor
dec
or
cmp
iret
sub
subl
and
repnz
rclb
cmp
sbb
adcb
add
in
pop
xor
and
bound
loopne
adcl
icebp
and
aad
fstl
adc
test
int
ret
clc
adc
mov
nop
test
push
push
mov
mov
bound
repnz
adc
and
sub
fcompl
jg
jle
adc
lods
push
adc
stc
mov
adc
xor
sbb
jne
mov
jnp
loopne
push
jge
pop
cmp
dec
lcall
mov
stos
loopne
ja
mov
adc
dec
push
sub
cmp
push
dec
mov
add
rcl
jge
adcl
lds
mov
add
xorb
test
or
xor
xchg
or
arpl
mov
push
stos
sub
aad
ja
mov
adc
clc
mov
add
adc
shll
pusha
dec
xor
mov
add
cmp
push
cwtl
push
mov
mov
cmp
rorl
sbb
or
pop
inc
sub
mov
pop
cmp
fdivrs
xchg
or
lock
push
push
jne
sbb
aaa
mov
jnp
enter
add
ret
dec
pushf
push
shlb
mov
pop
push
xor
xor
xchg
mov
pop
cmp
ret
push
add
aaa
dec
ja
sbb
sbb
sub
es
das
ja
rorl
sbbl
add
iret
clc
jmp
ret
stos
pop
aam
add
aaa
daa
jle
inc
or
aad
and
js
add
and
lea
inc
and
push
ret
sub
int3
pop
sbb
and
push
inc
jl
ret
cwtl
outsb
fld1
push
xor
leave
in
add
std
and
les
add
push
je
and
into
push
sub
fimuls
inc
mov
add
add
stos
repnz
adc
outsl
mov
jns
mov
int
pop
mov
stos
das
inc
inc
and
rcl
push
outsl
and
cwtl
and
repz
rolb
push
mov
add
and
sbb
je
push
and
lret
es
xor
test
mov
cmp
mov
imul
adc
scas
adc
xor
or
cmp
rcrb
rcrb
cmp
xchg
imul
or
or
stos
pop
xchg
aad
jb
mov
and
or
adc
pop
fwait
push
xor
push
out
xor
push
test
enter
jns
das
test
push
out
pop
mov
and
xlat
inc
cmpsl
or
xchg
and
and
mov
fistpl
cwtl
jno
xchg
add
daa
inc
xchg
test
dec
lahf
pop
add
arpl
andb
add
insb
sbb
shll
call
fs
mov
fwait
and
add
jnp
orb
daa
gs
cli
das
xor
sbb
dec
push
dec
ljmp
insb
dec
add
test
jne
test
sbb
fisubrl
shr
int
leave
push
lret
orb
cmp
pop
cs
pop
repz
sub
push
shlb
inc
mov
aam
xchg
push
xchg
shl
push
push
mov
push
cwtl
cmp
mov
or
popf
mov
dec
push
test
loopne
inc
add
jno
pop
xchg
js
movsb
or
adc
adc
cmp
push
les
roll
aaa
mov
in
sub
pop
inc
cld
pop
xchg
or
cmc
mov
adc
je
push
sub
jle
aad
add
stos
call
lret
andb
or
xchg
iret
xchg
add
cmp
mov
jge
sbb
xchg
xor
push
loopne
icebp
cltd
push
dec
xchg
add
js
nop
ret
dec
sub
pop
std
cwtl
push
notl
sbb
mov
mov
add
cmp
shrl
or
sub
adc
inc
cmp
leave
push
add
test
ss
or
sub
cwtl
jl
test
or
js
test
or
ja,pn
and
call
pop
adc
add
adc
sub
pop
mov
add
dec
out
inc
add
jnp
gs
cmpsl
dec
jl
test
push
test
sub
je
cmp
pop
push
mov
cmp
dec
inc
xchg
push
jge
insl
pop
and
arpl
shll
mov
mov
fstpt
es
aad
das
dec
rep
cs
inc
pop
inc
and
and
ss
lea
fdivs
clc
lods
sub
jae
pop
and
mov
inc
xor
loopne
push
loopne
stc
or
xor
test
ss
xlat
ds
inc
adc
stos
add
and
imul
jb
lcall
outsl
cmp
push
popf
cmp
pushf
jnp
mov
popa
mov
pop
cmpsl
push
pop
sbb
addr16
mov
movsl
in
cpuid
push
and
fdivs
lret
jnp
outsl
mov
adc
dec
popf
mov
adc
cmp
int3
addr16
and
int3
inc
inc
adc
loope
sbb
cmp
jge
ds
ljmp
sub
cld
call
fistps
mov
push
push
aas
ds
int3
sbb
popf
loope
and
test
dec
sbb
cmp
aaa
sbb
and
xor
rcrb
fwait
mov
cmpsl
mov
xor
inc
rcll
push
sbb
push
push
dec
int3
or
mov
jmp
and
in
add
xorl
ss
xor
push
lea
inc
loopne
daa
mov
rcll
in
ss
ljmp
fisubrs
jns
sbb
push
push
lret
xchg
faddl
inc
lret
jecxz
add
lods
mov
mov
and
addr16
or
mov
adcl
loop
add
cmp
push
inc
pushf
push
fldl
insb
pop
mov
arpl
fwait
movsl
test
popa
push
scas
dec
jl
lock
dec
add
in
lods
pop
aas
pop
int
js
mov
and
xor
test
mov
lds
xor
daa
daa
popa
mov
jns
in
push
push
sub
vmread
dec
fwait
sar
jnp
jbe
xor
add
ss
push
or
test
push
lods
sub
jg
roll
mov
adc
cmc
adc
bound
mov
sahf
cli
dec
pop
dec
dec
cmpsl
fisubrs
stc
push
clc
les
pop
in
bound
mov
out
pop
pop
add
dec
aaa
repz
scas
jnp
cld
out
sub
test
outsl
ljmp
notl
fdivp
insb
scas
das
adc
orl
sbb
xchg
mov
addr16
sbb
mov
jbe
push
xchg
cltd
fmull
cmp
insb
pop
pop
adc
movsb
dec
lods
ja
inc
push
cmpl
xchg
imul
orps
push
aam
cmc
mov
les
xchg
fwait
push
dec
into
dec
adc
dec
mov
es
dec
shrb
push
and
lods
pop
or
pop
mov
add
stos
insb
sbb
dec
bound
add
or
lea
xlat
sbb
lods
adc
stos
pop
sbb
idivl
xchg
lcall
pop
icebp
pop
jp
sub
fstpt
incl
int3
rorb
jg
gs
adc
push
or
jl
xchg
call
or
lods
cs
inc
adc
out
jbe
cmp
push
popf
sub
lock
dec
arpl
scas
and
mov
push
rcrb
adc
aaa
movntq
xor
push
adc
mov
in
pop
daa
lcall
or
jp
add
aaa
das
cmpsb
fwait
js
pop
or
pop
scas
push
mov
stos
fs
sub
sbb
mov
popa
addr16
sbb
mov
sub
mov
jecxz
fmull
clc
add
shll
mov
cmc
jnp
imul
int
pop
jb
outsl
dec
fildl
inc
loopne
pop
mov
in
mov
xor
scas
outsl
dec
stos
and
xor
sbb
inc
fcmovne
mov
jmp
outsb
jp
popa
movsl
arpl
and
jae
push
jno
in
xchg
das
js
xchg
cs
fidivrl
push
hlt
ret
in
and
xlat
popa
sub
icebp
and
lret
dec
rorb
out
ret
sub
scas
add
cmp
push
lcall
aaa
movsb
add
andb
jge
sub
add
xchg
jae
mov
and
inc
mov
jo
ljmp
cmp
mov
in
sbb
push
icebp
js
xchg
pop
sbb
add
sub
jo
inc
mov
int3
jb
insl
daa
jp
lret
nop
dec
je
mov
jb
insl
enter
cmp
and
or
push
in
mov
lret
push
xorb
cmp
das
or
js
test
xchg
or
push
or
jp
popa
and
call
fsubs
xor
xchg
sub
push
arpl
cltd
ljmp
dec
icebp
cmp
mov
andb
loopne
sub
shrb
shrl
inc
sub
outsb
jns
xchg
pop
inc
inc
je
adc
faddl
inc
mov
pushf
sub
cmp
lock
cli
mov
cli
xlat
pop
aam
test
jb,pn
das
outsb
xor
loopne
mov
mov
fldt
int3
mov
scas
mov
and
mov
gs
xchg
addr16
jl
sub
enter
loope
subl
cmc
lock
xchg
mov
or
and
add
pusha
adc
inc
mov
fsubl
mov
jecxz
int
add
or
xorb
xor
sti
sub
pop
rcrl
dec
fsubl
sub
and
sbb
packuswb
js
or
mov
clc
into
enter
sbb
sub
mov
out
push
sub
push
jae
in
mov
pop
addb
add
sbbb
push
mov
inc
cmp
dec
pop
mov
sub
inc
mov
shr
add
pop
sub
sub
dec
nop
mov
add
out
sahf
enter
test
add
std
mov
xchg
sub
aad
icebp
pop
dec
mov
test
mov
shll
jmp
popa
lret
mov
pop
jmp
cltd
inc
out
mov
pop
dec
out
and
mov
pop
mov
test
sbb
or
out
sarb
add
xchg
fldt
sub
or
sbb
aaa
test
push
aaa
fs
ss
mov
dec
dec
push
mov
push
mov
incb
mov
pop
or
stos
mov
mov
and
stos
dec
adc
adc
fwait
mov
pop
inc
gs
and
adc
iret
xchg
xchg
subb
sbb
inc
inc
lahf
dec
rep
mov
pop
js
sub
out
adc
and
lods
scas
shll
into
dec
mov
je
and
aaa
stos
lahf
adc
or
and
xor
adc
cwtl
sbb
mov
popa
inc
lahf
push
or
js
cmp
sub
jmp
push
lcall
mov
dec
pusha
push
pop
pop
iret
sbb
xchg
addb
xchg
cmpsl
pop
jae
es
inc
jno
mov
nop
fwait
mov
inc
add
add
add
outsl
xor
dec
inc
or
popa
cmc
out
sarb
add
add
iret
ret
jg
mul
loop
sbbb
fwait
adc
and
sti
jle
out
and
lahf
dec
or
adc
negb
pop
int
or
stos
or
outsl
sbb
sub
into
xor
test
dec
cmp
push
lods
pop
xor
test
rcrb
push
filds
idivb
test
loopne
stos
fldcw
push
xchg
cmp
dec
jmp
and
cmp
fwait
daa
pop
mov
dec
cmpb
scas
and
sbb
aam
pop
scas
fsts
data16
and
mov
add
lock
je
pop
and
pusha
test
jne
xchg
sub
loop
ret
cltd
pop
jne
pusha
mov
add
add
fisttpl
insb
mov
mov
or
scas
push
and
mov
ljmp
dec
cmp
addb
mov
pop
add
or
mov
roll
ja
lret
and
jle
in
movsb
gs
imull
sbb
xor
sahf
cmp
cmpsb
cmpsb
cmpsl
outsl
or
movsl
and
push
daa
pop
mov
jmp
push
cmpsb
inc
dec
mov
fdivl
in
xchg
leave
mov
gs
push
inc
fsub
cwtl
xor
data16
xlat
sub
iret
mov
in
ret
jge
inc
faddl
rcrb
jbe
inc
xor
shl
xor
and
xor
jne
leave
lret
call
or
ja
andl
inc
xchg
je
cmpb
das
and
push
mov
mov
adc
mov
add
cmp
into
imulb
lahf
xor
dec
add
cmpsb
or
add
out
push
pop
les
sub
adc
andl
fsubrl
sbb
pop
cmp
in
dec
scas
mov
cmp
cmp
andb
xlat
pop
lcall
daa
ret
and
js
jb
jg
mov
mov
int3
or
inc
mov
cltd
fnstcw
sub
pop
or
lods
mov
mov
xchg
mov
rcrl
jmp
mov
push
aaa
jbe
test
js
or
mov
mov
andb
push
rcl
pop
jl
int
xor
cltd
push
mov
mov
jae
jbe
add
push
dec
mov
test
test
add
movsb
and
mov
scas
int3
fisubs
jmp
sub
or
pop
inc
leave
in
pop
ret
popa
or
pop
stos
dec
dec
sub
mov
xchg
lock
fwait
push
ja
mov
push
dec
stos
mov
rclb
in
adc
lcall
loope
and
or
fs
and
loope
cmc
bound
es
stos
add
mov
sub
xchg
jnp
jle
pop
mov
xchg
adc
movsb
aam
lea
mov
andl
xchg
mov
cwtl
pop
mov
ds
xor
xor
sub
inc
xor
xchg
int3
out
js
and
or
shlb
and
xor
xor
lahf
cmpsl
addl
shlb
popa
inc
inc
mov
add
gs
movsb
lahf
loop
sti
dec
clc
cwtl
jmp
rcll
pop
stos
mov
mov
sub
sbb
cmp
into
inc
stc
aas
ret
movsb
xchg
lods
add
lods
int
jmp
cmc
dec
bound
test
sbb
mov
adc
call
hlt
jmp
sbb
cmp
das
lods
push
sti
pop
cmp
inc
add
or
and
shlb
pop
scas
xor
je
push
imul
jae
sbb
xchg
imul
addb
push
fbld
mov
aam
popa
adc
into
inc
mov
jecxz
pusha
sub
adc
inc
or
sub
enter
lcall
fs
sbb
sub
out
sbbl
dec
mov
mov
insb
ret
enter
sbb
sbb
adc
adc
cmp
aad
fmuls
pop
sbb
aad
or
pushf
mov
push
insb
cmp
aam
iret
pop
xchg
push
lret
aas
sub
fsts
mov
jge
lcall
sbb
aam
aad
ds
pop
inc
fisubrs
loope
pushf
addr16
rcll
dec
cmp
pop
sbb
cmpsl
pop
sarb
mov
jb
gs
sub
pop
mov
icebp
push
leave
jbe,pt
es
xor
pop
jne
push
or
push
push
outsl
or
push
or
enter
xor
sbb
and
sub
aaa
fstps
inc
lea
into
rorl
or
cmpsb
sub
dec
aaa
xlat
dec
inc
testl
xchg
fdivl
fildl
enter
cmp
jo
pop
jmp
jns
insb
lods
icebp
aam
push
repz
gs
jae
push
sbb
mov
cwtl
xor
push
adc
enter
sbb
mov
add
arpl
add
mov
dec
ds
imul
xor
popa
imul
cltd
add
sub
xor
or
add
mull
add
or
outsl
mov
test
add
mov
sbb
leave
add
arpl
add
mov
outsl
sbb
int
gs
add
mov
push
imul
sti
cmp
fimuls
or
addr16
fwait
and
jge
or
popf
jae
das
jns
in
xlat
dec
ret
mov
sub
mov
cltd
mov
or
add
in
push
and
std
lcall
leave
add
out
pusha
jle
repz
add
sub
pop
pop
scas
add
ja
jnp
daa
jg
imul
add
cmp
daa
das
xor
fldenv
cmp
icebp
sti
xor
add
add
or
adc
sbb
jnp
pop
pop
lock
push
data16
sbb
insl
adc
pop
or
ret
mov
fwait
sbb
pop
sbb
adc
xchg
test
push
mov
xlat
cld
scas
cmp
sbb
cmpsl
push
push
jb
sbb
popa
jb
lea
or
cmp
sbb
mov
add
loope
mov
das
int
sbb
stos
lcall
cmp
testl
les
or
test
fidivl
pop
adc
adc
enter
pop
je
jo
shlb
push
mov
push
es
inc
js
sbb
adc
stc
aaa
scas
add
add
or
popa
xchg
sub
out
jl
fisubrl
fidivl
data16
sti
xchg
les
roll
sbb
mov
sbb
enter
mov
add
mov
sub
add
jp
mov
mov
mov
jg
ljmp
in
jne
xchg
mov
ljmp
fbld
lods
loope
add
fcmovnb
cmpsb
arpl
inc
mov
mov
out
push
test
add
push
lods
sub
fnsave
fcmovne
inc
inc
ljmp
inc
leave
mov
inc
add
insl
sbb
mov
mov
divl
push
dec
in
jno
jne
ss
call
xor
pusha
push
aad
imul
mov
in
push
mov
inc
in
repz
cs
lods
add
mov
pop
int
cs
xchg
fwait
outsb
rcrl
sub
ljmp
test
adc
xchg
gs
dec
stos
mov
push
dec
jnp
push
add
mov
jo
insb
add
mov
pusha
add
cs
ja
rcrl
ret
and
lods
push
or
sti
xor
sbb
mov
sub
push
add
outsb
outsl
sub
popf
inc
xor
lods
stos
insl
fstl
pop
outsb
push
sub
mov
add
in
mov
cmpsb
xchg
xchg
mov
shl
adc
stos
loopne
dec
pop
adc
arpl
cmp
xor
imul
faddp
sahf
add
sbb
inc
fnstsw
push
or
inc
jae
mov
mov
jbe
addr16
mov
mov
and
insb
sarb
mov
sbb
std
push
cmp
sbb
or
jecxz
sbb
out
in
push
push
add
lret
mov
mov
movb
cmp
insl
sub
lods
lods
mov
xchg
popa
cmc
das
in
ss
pop
test
and
mov
add
ds
mov
xor
and
xlat
cmp
outsl
ds
outsb
outsl
xchg
or
lcall
mov
shrl
fs
or
and
imul
enter
jnp
add
shrb
push
cmp
imul
push
fsubp
ds
xor
lret
data16
inc
outsl
out
leave
movsb
sbb
inc
and
jg
pop
adc
dec
push
or
xlat
les
push
dec
lcall
add
add
mov
popa
and
aam
mov
orb
pop
clc
es
out
andl
xor
cmp
clc
nop
shrl
jmp
sti
sbb
mov
mov
xor
add
adc
imul
xor
or
add
test
adc
lea
mov
lods
imul
add
dec
int3
in
cs
and
push
inc
mov
insl
fcmovnu
sbb
inc
mov
pop
pop
sbb
add
nop
sbbb
mov
mov
test
sti
cmpsl
lret
movsb
mov
adc
clc
pusha
mov
int3
jg
mov
and
outsb
mov
mov
inc
aas
cmp
fisttpl
jp
leave
div
push
add
pop
or
insl
add
mov
imul
cltd
mov
aam
xchg
gs
popl
push
lods
inc
adc
cmp
inc
ja
insb
ja
and
jnp
jp
mov
cmc
sbb
add
or
mov
fistl
ficoml
dec
repz
enter
rcrl
xchg
cmp
pop
in
dec
cmpl
ss
sbb
cwtl
out
add
jle
js
xlat
push
mov
dec
jbe
bound
sbb
xor
cmp
xchg
insl
push
test
lcall
sub
test
push
mov
dec
imul
sbb
rcrl
pop
dec
xor
inc
not
mov
sbb
and
aaa
mov
mov
inc
ja
push
mov
das
xchg
cmp
cltd
add
pop
jg
sbbb
sbb
les
das
out
stos
mov
mov
fwait
lds
cmpsl
lock
loopne
inc
insl
or
mov
shr
adc
hlt
pop
daa
or
xorl
mov
sti
ficomps
sub
mov
pusha
adc
sbb
mov
daa
and
sub
fdivrs
sbb
pop
add
leave
movsb
xor
xchg
cmp
jmp
add
jl
xor
and
outsl
das
lock
ds
or
or
jecxz
out
lods
daa
jbe
pop
mov
lea
jge
outsb
adc
popf
fisubrl
jbe
mov
mov
xchg
in
sub
fidivs
xchg
pop
inc
push
add
jbe
fistpl
aaa
ljmp
dec
mov
int
in
in
divb
jmp
mov
fbstp
test
lea
and
push
call
outsl
dec
or
mov
test
pop
inc
jmp
stos
in
xchg
aad
loop
lods
rclb
jbe
inc
daa
and
test
lods
iret
mov
mov
or
shll
add
hlt
test
daa
leave
cmp
sbb
xchg
mov
int
push
ds
leave
rcr
or
cmp
mov
mov
gs
fcomps
in
js
or
outsl
ret
mov
inc
stos
aas
in
lcall
rorb
inc
mov
push
lods
add
xchg
jecxz
inc
aad
fiadds
test
subb
sbb
mov
sub
loop
xor
incl
or
xlat
mov
arpl
icebp
jnp
fsub
fidivrs
cmp
lds
xor
test
lcall
fstp
cs
dec
scas
lods
sbb
imulb
testl
lods
adc
test
sbb
or
fiaddl
sbb
in
bound
adc
aam
xor
mov
jmp
mov
out
movsl
mov
fst
jne
sbb
sbb
repnz
sbb
mov
xchg
aam
or
jle
pop
filds
adc
pop
repnz
add
loopne
lock
icebp
ret
jne
jmp
jns
adc
adc
cmc
add
in
sbb
push
in
mov
and
pop
or
push
jle
add
push
adc
jns
inc
in
and
aad
sbb
push
outsb
aad
mov
jb
bound
mov
lcall
call
aad
dec
dec
adc
pop
or
outsb
inc
mov
subb
cld
sub
inc
mov
jecxz
xor
push
in
int3
in
push
push
sbbl
jge
addr16
add
stos
mov
call
cmpsl
jmp
pop
insl
adc
jo
mov
fwait
mov
out
pop
jle
outsb
inc
addr16
movsl
in
icebp
push
jmp
add
dec
push
push
mov
faddl
mov
or
loope
pop
outsl
aas
mov
sub
lods
loope
jbe
fwait
add
punpcklbw
loope
ss
xor
fnstsw
lock
jl
mov
sub
sbb
test
ss
mov
arpl
sbb
out
push
subb
fstp
mov
jne
jg
push
fwait
imul
mov
call
test
mov
add
push
mov
aas
subl
mov
xor
cli
push
xor
cmp
mov
xadd
sub
and
xchg
lahf
or
and
pop
imul
mov
rorl
xor
sub
sbb
push
fnsave
xchg
and
jnp
scas
hlt
sub
negl
outsb
xchg
sahf
push
xchg
in
push
mov
leave
std
mov
loope
mov
xor
adc
dec
jp
rcrb
mov
lock
jl
xor
xor
xor
pop
dec
or
mov
rcr
pusha
and
jns
sbb
or
pushf
aam
add
jecxz
pop
mov
inc
imul
jecxz
pop
mov
imul
imul
lret
push
scas
repnz
push
xchg
outsb
push
mov
cld
xor
nop
add
jnp
xchg
negl
movsb
shrb
add
jo
xchg
dec
cmc
test
sub
rcrl
jbe
mov
push
mov
dec
fnstcw
aaa
push
xchg
jmp
hlt
mov
lods
mov
push
test
shlb
ljmp
jnp
arpl
in
push
lds
add
rcll
push
jne
add
mov
insb
cmp
xor
and
test
stos
sub
xor
dec
jo
jmp
outsb
scas
faddl
sub
imul
es
xor
outsb
pushf
out
or
clc
imul
jbe
scas
clc
pop
pop
mov
sub
adc
jnp
pop
pop
xchg
jg
mov
pop
mov
aad
dec
jae
rclb
push
test
jbe
idivb
dec
mov
js
xchg
test
outsb
xchg
jg
jb
mov
xchg
fwait
sub
fidivrl
test
out
scas
xchg
scas
add
sbb
mov
stos
mov
je
sbb
and
sbb
outsl
or
add
mov
mov
and
add
sbb
push
mov
sahf
repnz
mov
or
daa
dec
fcoml
pop
adc
or
cmp
aam
fs
mov
mov
orb
int3
lock
push
arpl
sbb
int3
cwtl
mov
aaa
sbb
add
mov
add
sbb
cld
mov
call
fnstenv
call
int3
sbb
dec
outsl
mov
dec
mov
pop
jge
sbb
mov
fwait
cmp
int3
mov
cmp
and
out
ret
pop
stc
mov
jno
or
insl
mov
sbb
testl
int3
das
imul
ljmp
jmp
mov
mov
cmp
mov
sub
clc
lds
fiaddl
mov
jnp
mov
fcmovne
sbb
mov
mov
pop
pop
or
inc
xchg
fwait
sti
ret
cmp
lret
and
inc
add
movsb
or
test
ret
and
les
sahf
insl
inc
addr16
pusha
push
loope
mov
mov
test
sbb
in
aad
ljmp
dec
rcll
xor
sub
add
hlt
sub
xchg
mov
jne
inc
adc
or
add
adc
rorb
push
mov
cmpsb
mov
testl
and
jmp
inc
adc
ss
pop
mov
or
aam
ljmp
mov
mov
in
jle
jbe
adc
fnstsw
push
push
dec
mov
scas
lahf
xchg
aaa
add
outsb
js
push
sbb
mov
adc
mov
mov
or
push
das
fwait
pop
mov
xchg
dec
xchg
aas
push
push
out
dec
je
or
add
dec
cmc
fisttps
pop
mov
int
xlat
push
aam
mov
xor
cwtl
xor
fldl
ds
lock
int
test
push
dec
pop
fcmovnu
jp
into
clc
into
sbb
xor
mov
sbb
or
std
sbb
sub
test
aad
cmp
popf
sbb
pusha
sub
in
or
and
mov
jmp
mov
cmp
mov
cli
insb
roll
xchg
aam
cmp
in
or
je
add
inc
xor
adc
xorl
je
imul
and
or
lcall
sub
jp
mov
fdivrs
add
outsl
enter
repnz
ja
decl
push
mov
adc
mov
jl
lds
sub
shrl
cmp
jmp
data16
push
cmp
cmp
push
out
cmpl
jbe
aam
es
push
pop
test
icebp
pop
or
pop
push
xchg
test
mov
test
mov
fistpll
mov
mov
test
and
test
jl
cli
inc
daa
shrb
sarb
fcompl
mov
icebp
or
jl
adc
pop
fdivs
outsb
mov
arpl
sbb
je
stos
scas
ljmp
pop
insb
das
leave
mov
test
sub
add
xor
sysret
sub
or
pop
xchg
pushf
fwait
rcr
push
or
das
movsl
xor
inc
arpl
and
lock
ja
lret
mov
inc
adcl
pop
fstl
push
sub
xor
cmp
jle
pusha
and
jp
and
adc
pushf
into
add
jno
mov
sbb
fdivs
stos
adc
call
fildl
or
pop
xsaveopt
les
mov
into
in
mov
xchg
test
adc
xor
jmp
std
adc
divl
sbbl
ds
sbb
pushf
mov
sbb
jecxz
loope
jle
jle
adc
leave
jnp
imul
jns
sub
call
cmp
xchg
push
pop
rolb
rcll
ret
sub
in
dec
mov
lret
pop
adc
sub
fdivrs
push
lds
hlt
or
daa
mov
test
mov
xchg
mov
pushf
push
ror
test
add
mov
int3
inc
pop
dec
cmp
filds
cli
sub
pop
iret
sbb
xchg
sub
daa
es
int
add
add
add
imul
fstpl
daa
adc
mov
scas
shll
adc
je
sub
or
ljmp
jg
pop
lcall
and
pop
sbb
mov
adc
cmp
mov
pop
add
or
jp
add
insl
inc
mov
pop
scas
mov
jmp
and
lds
cwtl
adc
stos
mov
dec
push
push
cmc
pop
rol
call
dec
aaa
pop
mov
cs
std
ret
xchg
lods
adc
cmp
lods
jg
shll
cmp
adcb
mov
scas
jl
negl
pop
mov
adc
ja
mov
outsb
add
push
xchg
das
popa
divb
ret
outsb
mul
sub
cs
pop
movsl
sub
stc
jl
in
add
shl
xchg
mov
repnz
aaa
je
insl
adc
mov
cmc
sub
push
adc
testl
and
adc
pop
rcll
add
mov
cmp
movsl
pusha
movsb
outsb
push
int
data16
mov
sbb
jmp
cltd
sub
or
inc
or
and
xor
mov
ss
jb
call
insb
daa
pop
xchg
lahf
mov
jecxz
jmp
adc
mov
fwait
xlat
movsb
aas
jbe
pop
adc
mov
add
sub
je
jle
pop
pop
xor
movsl
shrl
mov
loope
lods
cs
mulb
dec
cmp
xchg
js
test
jle
xor
dec
out
gs
pop
add
lret
cld
mov
sti
out
or
aam
aaa
sbb
inc
xor
lock
pop
sub
pop
push
fistpll
rcrb
pop
xor
sub
pop
ja
mov
push
or
push
push
inc
cmp
popf
xchg
iret
inc
inc
dec
mov
in
insb
cmpsb
popa
outsb
xor
add
push
loopne
repz
mov
add
in
pop
cmc
mull
rol
dec
pop
cmc
pop
ljmp
inc
push
and
lcall
mov
rorl
pop
div
iret
sbb
push
xchg
cmp
test
jne
push
mov
aas
jns
jp
jnp
or
rcl
inc
jb
fnstenv
cld
jbe
or
mov
ljmp
cmpsl
dec
cmp
into
dec
xchg
dec
pop
pop
pusha
mov
mov
jnp
pop
pop
add
fsubrs
pop
rorl
test
adc
out
or
pop
pop
dec
xlat
mov
push
dec
cwtl
loope
mov
xchg
pop
in
push
sub
pop
sbb
cmpsb
push
loopne
or
cmc
inc
aam
mov
xor
adc
popa
push
rclb
or
loope
mov
xor
bound
mov
popf
es
push
add
je
adc
insb
fcmovb
xchg
mov
sti
mov
nop
xorb
sbb
mov
insl
pop
jmp
pusha
cmpsb
fcomps
cltd
test
pop
jbe,pt
stc
sbb
mov
test
inc
mov
jl
mov
fdivl
mov
out
shll
and
push
outsb
shrb
and
or
mov
imul
xchg
rcll
mov
call
pop
orl
or
faddl
outsl
aam
dec
insl
test
jns
add
fwait
jbe
fcmovbe
mov
scas
rol
jo
mov
mov
lret
stos
xchg
outsl
add
inc
rcl
mov
into
fistpll
sbb
or
das
fwait
in
sub
pop
cmp
adc
or
mov
jbe
push
mov
mov
fisubrl
pop
fisubl
fisttpl
xor
push
inc
inc
pop
pop
dec
xchg
mov
bound
adcl
jae
rclb
in
and
push
jg
imul
test
std
lahf
fidivrs
ja
call
and
push
pop
fcmovne
insl
cli
dec
cmp
inc
add
sbb
loope
pop
faddp
pop
or
dec
mov
or
add
mov
enter
and
mov
and
jb
inc
cmpsb
jbe
xlat
mov
shrl
icebp
cs
insl
sbb
pop
clc
sub
lcall
push
push
sbb
aaa
push
dec
cmp
mov
jne
pop
add
js
xor
mov
sbb
jno
xlat
scas
sub
xchg
inc
jmp
imul
call
and
je
jb
fwait
mov
xor
int3
int
lods
arpl
add
inc
pop
jg
lds
daa
les
sbb
pushf
add
ret
repz
adc
jns
fstpt
pop
xor
in
pop
icebp
dec
movsl
push
xchg
cmpsl
outsb
sti
xor
daa
out
or
mov
outsb
loopne
jno
scas
dec
hlt
pop
inc
sahf
in
add
in
outsb
sbb
jbe
add
insb
fwait
insl
inc
sarb
pusha
xor
jge
jl
sahf
sahf
test
fidivs
jae
xchg
sbb
psraw
push
icebp
and
jne
jmp
mov
popf
fwait
jmp
jbe
dec
sti
dec
clc
sbb
scas
mov
dec
addr16
push
divb
movsl
test
push
sub
dec
lret
addr16
xchg
imul
stc
xor
push
push
inc
call
jle
mov
lods
test
add
push
daa
jo,pn
dec
cmpsb
xchg
insb
or
push
cmp
pop
frstor
daa
mov
cltd
aam
cmp
jge
push
xchg
jle
lcall
xor
or
lea
daa
imul
adc
movsb
push
lahf
in
movsl
mov
jne
or
mull
insb
cmp
loop
sti
pop
inc
out
add
push
data16
adc
fcmovnbe
rclb
repnz
push
push
stos
or
fildl
jmp
sub
outsb
arpl
mov
cmp
mov
push
mov
outsl
outsb
rcrl
sbb
pop
or
js
fcoml
sbb
pop
mov
lods
dec
inc
xlat
rolb
leave
or
mov
mov
xor
imull
xor
cs
xorb
outsb
sub
jmp
mov
call
pop
cmp
and
adc
mov
add
lock
ret
lea
mov
movsb
push
inc
lds
repz
fwait
pop
jge
fsubrs
pop
mov
inc
add
and
pop
add
push
scas
fistpll
xor
sbbb
cmpsl
mov
xchg
or
inc
pop
mov
loope
in
jns
jbe
call
sub
aad
icebp
inc
push
popa
arpl
inc
cs
push
mov
pop
jnp
mov
inc
adc
in
mov
xlat
inc
jo
loope
rclb
jb
cmc
cld
paddsw
sbb
int
cmp
loop
shll
jmp
add
js
mov
enter
mov
subl
push
jb
xor
sbb
fcmovnb
cmpsl
bound
imul
andl
outsb
in
add
xchg
push
gs
insl
fadd
repnz
push
sar
int3
push
pop
or
out
jmp
sub
add
xchg
dec
fstpl
sub
mov
mov
mov
cmp
loope
lods
insl
add
lods
mov
mov
xor
loop
in
loop
jnp
and
mov
and
fsubrl
jbe
rcrl
adc
imul
inc
or
pop
loopne
shrl
inc
push
insl
or
ss
cld
bound
xchg
fs
arpl
xor
push
push
push
insl
aas
xchg
aam
cmp
push
arpl
inc
xor
or
adc
adc
sbb
adc
push
iret
cmp
or
aaa
xor
cmp
arpl
ja
pop
adc
test
test
lds
xchg
mov
sti
xor
xor
add
aas
jge
icebp
add
xor
sbb
loopne
popf
or
jb
lea
xchg
or
add
xor
lahf
or
add
xor
sti
popf
xor
daa
cmpsl
sbb
mov
and
cmp
bound
sbb
pop
daa
pop
xlat
fdivl
and
add
out
lods
xor
subl
and
sbb
dec
xchg
scas
inc
sbb
add
scas
mov
rorl
push
pop
negl
add
and
scas
imul
rorl
fistl
lea
dec
mov
aas
cs
or
aas
lea
inc
pop
or
push
xor
sahf
add
aas
add
inc
test
prefetchnta
mov
sti
add
or
or
ja
jnp
dec
pop
pop
push
mov
cmpl
out
jnp
sbb
xor
idivb
aaa
cmp
dec
cmp
aaa
imul
and
ja
cmpsl
adc
xchg
popf
lea
fwait
or
push
repz
and
testb
fistpl
arpl
push
or
iret
and
push
les
sbbl
lods
mov
mov
mov
mov
jmp
decl
ret
in
sbb
and
cmp
cmp
sbb
popa
mov
jp
ljmp
mov
pop
jae
push
into
into
mov
mov
outsl
fwait
jge
pop
jmp
lret
and
or
cmpsb
cmp
insl
repnz
mov
cmp
xor
push
mov
pop
testl
daa
mov
addr16
fwait
xor
or
add
data16
mov
add
and
pop
mov
xchg
out
cld
or
sbb
je
or
and
aas
mov
or
adc
adc
nopl
cmp
pop
or
lea
fsubrs
ja
jae
jnp
inc
into
lcall
pop
or
decb
mov
cmp
fwait
repz
jle
sbb
fstl
lahf
push
sbb
xchg
icebp
pop
stc
movb
adc
or
bound
test
xchg
mov
ja
add
out
dec
or
add
add
sbb
pop
adc
fwait
add
arpl
jae
add
testl
fiaddl
pop
jae
out
mov
inc
add
or
push
cmp
movb
adc
and
sub
jno
shl
mov
add
push
dec
add
in
icebp
and
push
out
divl
ja,pt
out
movl
add
add
push
sahf
inc
or
add
mov
sbb
add
inc
ja
repnz
es
push
repz
cmp
add
jae
push
mov
jnp
push
inc
sbb
dec
add
mov
iret
lds
enter
add
out
fcoms
adc
push
bound
xor
popf
push
mov
xor
xor
mov
adc
pop
lea
subb
push
scas
sbb
mov
push
pop
xchg
adc
sbb
push
pop
or
sub
outsl
push
fmull
push
jbe
fsubl
or
fstps
jbe
aam
imul
mov
in
and
adc
dec
jbe
and
and
dec
or
push
mov
pop
pop
loope
sbb
negb
push
add
insb
fsubs
push
inc
nop
mov
arpl
dec
jnp
int
jle
push
jbe
sbb
push
pop
xor
andb
fwait
neg
xor
inc
je
ret
fnstenv
movsb
ds
mov
stos
xchg
scas
or
inc
mov
dec
pop
mov
adc
mov
pop
popa
mul
push
dec
orl
fwait
sub
insb
rcr
addl
mov
mov
jae
cli
mov
loopne
mov
xor
lret
test
aaa
fld
test
fcompp
lret
and
nop
adc
jnp
mov
lret
xchg
mov
add
addr16
fdivr
lea
xor
test
cmp
fcomps
and
fld
pop
ret
push
jo
mov
into
jb
insb
mov
rcrl
pop
and
add
insb
and
pop
add
insl
xchg
xor
or
insl
insl
cmp
movzwl
orl
xchg
ss
fnsave
xchg
aad
sub
mov
cmp
das
call
mov
and
rcrb
rolb
cmpl
das
and
pop
stc
popf
je
add
or
push
sub
sbb
adc
add
jo
cltd
xor
xor
or
and
mov
fmuls
dec
addr16
pop
sub
and
add
jae
idivb
fsubrs
out
mov
inc
mov
mov
cmp
data16
and
add
add
mov
ret
sbb
shlb
cmp
popf
mov
push
and
sub
cmpsb
ljmp
pusha
or
and
sub
cmp
lret
push
es
and
pusha
cmp
stos
mov
in
fs
lods
or
fadds
pop
pop
scas
cmp
sbb
negb
loopne
arpl
add
stos
inc
scas
cltd
mov
lret
ja,pn
jnp
ss
add
dec
inc
hlt
push
jne
push
cltd
pop
ret
mov
pop
adc
xchg
mov
mov
and
pop
or
sbb
mov
sub
xchg
mov
lcall
out
addr16
negb
cmpsb
and
pop
add
es
adc
pop
outsb
pop
dec
adc
in
pop
data16
test
push
cmpb
fucomip
pop
jns
and
lods
data16
sub
insl
out
and
dec
mov
gs
fs
and
mov
ss
repz
adc
fs
xchg
dec
loope
inc
das
into
bound
mov
cmp
jmp
and
cs
movhps
sub
xchg
cmpl
data16
je
in
and
mov
add
or
sbb
or
mov
inc
xchg
insl
pop
arpl
ja
pop
es
add
pop
mov
lea
shrl
sbb
push
mov
sbb
adc
leave
xor
daa
sub
mov
lock
sbb
das
mov
xchg
cmp
fxch
into
mov
dec
xchg
dec
sahf
sbbb
pop
mov
jno
jno
push
insb
mov
xchg
loopne
cmp
sti
or
ds
cmp
mov
and
jmp
btsl
icebp
adc
push
addr16
sub
mov
xor
push
dec
lret
mov
add
popf
sub
xchg
fstps
adc
sbb
dec
xchg
dec
ja
xchg
in
and
js
inc
jmp
add
sbb
xchg
inc
add
pop
cmpl
es
out
addl
nop
test
imul
psadbw
fnstenv
adcl
lods
lahf
and
mov
dec
in
or
icebp
and
or
arpl
push
mov
mov
jae
rolb
cmp
mov
mov
mov
adc
out
dec
add
add
cmpsl
rorl
sub
push
fcompl
and
pop
xorl
push
outsl
fwait
jge
icebp
lcall
and
mov
in
and
inc
jnp
out
in
push
shll
adc
insb
insb
insb
in
and
mov
jl
xor
insb
sub
mov
push
loope
orl
daa
pop
xchg
outsl
push
in
sahf
push
push
jmp
enter
loope
mov
sub
dec
sub
dec
mov
das
push
add
and
and
sub
cmp
adcb
dec
jbe
push
fcoms
pop
push
cmp
adc
scas
aad
push
mov
mov
sub
outsl
pop
cmp
sbb
mov
inc
pop
aaa
jnp
jl
and
jnp
push
adc
test
jne
jge
add
jp
outsl
adc
in
pop
inc
je
jae
jecxz
jo
fdivrl
mov
xorb
add
ss
push
sbb
scas
and
lock
ret
lret
and
cmp
adc
or
loope
sbb
mov
ss
pushl
cmp
and
dec
jbe
or
into
fsubr
es
or
and
js
jp
test
in
scas
add
or
push
dec
rorb
and
pop
mov
mov
push
out
pop
or
push
notl
sub
fimull
leave
push
adc
mov
fimuls
mov
nop
push
jno
pop
push
xor
movsl
and
xchg
js
sarl
test
or
aaa
popa
iret
lahf
mov
and
pop
adc
in
pop
mov
or
testb
or
cli
pop
mov
rcll
cmpsl
popa
inc
and
add
cmp
dec
mov
fadds
jbe
aas
pushf
inc
sub
pop
ja
das
adcl
sbb
pusha
lea
sub
fnstsw
lds
cmp
das
aad
sbb
scas
ljmp
and
insb
adc
sub
and
or
push
rcll
or
outsb
fs
and
movsb
cltd
sbb
mov
mov
movsl
out
fmull
ljmp
ss
sbbb
ret
data16
add
ss
ret
aam
fwait
out
adc
fwait
sbb
or
xchg
loop,pn
cwtl
xchg
sbb
add
mov
add
push
pushw
cld
shr
sbb
sbb
adcb
pop
or
adc
stos
dec
cmp
or
popf
dec
jp
pop
mov
dec
xor
fmul
daa
and
arpl
or
rcrb
ja
or
adc
mov
shrb
into
rcl
mov
mov
movsb
cltd
imul
leave
sbb
sub
dec
mov
fbstp
nop
inc
inc
test
mov
out
shl
mov
mov
cmp
aaa
test
es
lods
cmp
pop
sbb
adc
and
adc
jp
fildl
sti
dec
sbb
int3
xchg
arpl
fwait
add
das
in
mov
push
stc
mov
popa
dec
mov
push
mov
fadds
cwtl
ss
js
ja
dec
lret
arpl
cmp
shl
sub
rcr
frstor
ret
xor
xlat
and
cmp
xchg
dec
adc
adc
sbb
adc
dec
add
ret
adc
popf
fxch
cmc
add
out
jbe
mov
outsl
repnz
or
sbb
es
jge
popf
cmp
repz
xchg
xor
dec
add
or
mov
or
ljmp
xlat
sbb
arpl
mov
loope
std
mov
xlat
daa
popa
data16
adc
inc
cwtl
imul
or
mov
daa
lret
shll
jnp
and
out
sbb
fiaddl
cmp
sub
and
xor
add
adc
sbb
lea
sbb
sub
push
and
add
stos
shl
fildll
and
sbb
or
pusha
push
std
in
cmp
jp
and
fs
out
insb
arpl
icebp
imul
xorb
or
sbb
out
mov
aaa
pop
add
mov
cld
ja
mov
insl
sbb
xor
orl
xor
cmc
lds
jo
sub
adc
or
dec
add
outsl
adc
add
push
dec
add
pop
mov
add
in
out
je
inc
mov
jb
adc
inc
adc
mov
inc
pop
sbb
sbb
fistl
add
les
dec
add
push
push
and
lcall
loopne
or
push
mov
popa
movsl
and
js
out
mov
pop
cmp
pop
jnp
fwait
insl
popf
sub
jns
ja
pop
int3
mov
jnp
mov
sarl
jp
jnp
fwait
add
jbe
pop
insb
fisttpll
inc
imul
dec
fcomps
xor
inc
inc
jg
jge
repz
clc
jge
add
xchg
sbb
jge
negb
jl
cmp
xchg
ficoml
bound
add
fcmovnu
int
sbb
ljmp
add
or
adcb
mov
add
add
adcl
les
stc
jl
fwait
mov
push
out
incb
jno
pop
or
ficoml
scas
sahf
outsb
adc
mov
dec
fxch
mov
mov
fwait
add
mov
sbb
mov
ja
add
xchg
fadd
addr16
mov
pop
cld
pop
mov
inc
out
sti
mov
sbb
add
sbb
adc
mov
jb
js
adc
mov
outsb
add
nop
lods
stc
cmp
add
ja
in
shll
push
jge
or
scas
jmp
cmc
sbb
adc
and
test
add
add
pop
mov
mov
xor
in
add
or
or
fwait
ss
xor
data16
adc
insb
sbb
cmp
add
lret
cmovno
cmpl
and
add
xchg
xchg
or
jno
or
cwtl
loope
xchg
into
std
clc
or
or
and
outsl
push
inc
push
xor
loope
push
or
and
dec
or
push
xchg
add
inc
push
ficomps
jmp
bound
and
notl
gs
xchg
inc
cmp
popf
nop
jns
arpl
orb
push
mov
xchg
push
push
xchg
xchg
leave
jl
outsb
js
ljmp
popa
incl
add
out
and
jne
data16
cmc
mov
sub
int
cli
push
js
cld
and
clc
cmp
data16
jg
sub
mov
push
sbb
mov
das
and
jnp
ret
shll
hlt
sti
xchg
adc
cmc
cli
add
je
and
clc
pop
cmc
testb
or
mov
and
push
push
add
jnp
or
inc
ja
cmc
enter
push
sub
sbb
xchg
adcl
jbe
pop
inc
insb
fucom
push
in
pop
push
out
js
inc
inc
jo
cmp
int
push
jnp
mov
and
pop
ja
ja
lret
cwtl
cmc
incb
insl
add
xchg
pusha
test
outsb
ja
add
adcb
inc
push
ljmp
add
imul
test
cld
in
xor
inc
je
sbb
pop
xor
dec
jne
in
popf
and
andl
lods
jle
data16
cs
ss
push
push
pushf
es
inc
sub
push
dec
and
nop
lea
mov
and
dec
push
outsl
pop
nop
lahf
and
sbb
lret
nop
sub
sub
daa
sub
xchg
pushf
rcrb
sbb
cmpsb
pushf
and
sub
pusha
sbb
cmpsb
add
sbbl
cmp
daa
sub
outsl
or
adc
dec
pop
mov
xchg
mov
movsl
add
mov
shl
adc
idivl
aaa
dec
shll
lods
je
mov
push
es
daa
and
mov
dec
jnp
shll
or
cmp
daa
fisttpl
cli
and
sub
pop
dec
outsb
jno
jp
nop
push
icebp
cmc
pusha
jnp
js
push
icebp
mov
enter
shll
fs
stc
pop
sarl
lock
jecxz
insl
inc
pop
dec
push
xchg
push
js
mov
or
mul
xchg
dec
and
js
movsb
and
sbb
add
imul
js
pop
add
and
or
ret
ljmp
lds
mov
mov
cmp
outsb
in
push
lods
mov
xor
add
dec
dec
and
sti
subb
xor
or
and
or
xchg
or
mov
sbb
push
fs
dec
fstl
adc
or
cmc
push
dec
xchg
addr16
inc
pop
inc
cltd
push
daa
push
push
mov
sub
or
mov
sbb
push
jg
call
dec
pop
pop
loope
mov
loop
in
pop
pop
popa
hlt
fcmovb
pop
pop
sub
inc
daa
mov
sbbb
push
cmp
int3
jns
dec
popf
push
jae
or
mov
mov
fnstsw
insb
xor
push
inc
or
xor
sbb
scas
mov
inc
xchg
test
jae
dec
push
fdivrs
or
push
dec
jns
mov
mov
lds
inc
popf
aam
sbb
inc
je
jne
pop
je
mov
setl
cmp
daa
push
out
inc
out
es
push
xchg
popf
fcmovb
pop
mov
dec
cs
lods
xor
jb
arpl
mov
hlt
inc
cmp
outsl
or
loopne
mov
dec
adc
outsb
and
loop
mov
dec
jne
lret
xchg
shl
inc
xor
mov
inc
push
adc
orb
inc
out
jae
lods
dec
adc
mov
sbb
daa
mov
fcoml
inc
dec
push
call
imul
insl
pop
js
cmp
dec
inc
int
lea
gs
notb
enter
jne
add
outsb
dec
push
sahf
shll
xor
pop
xor
push
sbb
add
dec
xor
adc
pusha
mov
cmp
mov
sbbl
jle
mov
inc
pusha
dec
jb
mov
arpl
push
dec
push
imul
out
fsts
test
imul
enter
cmp
and
mov
fs
pop
inc
inc
mov
add
andl
dec
push
nop
sti
les
mov
push
push
fldt
imul
xor
jo
out
push
jl
jbe
fmul
out
sub
insb
pop
jg
dec
ja
js
fs
ja
push
sbb
inc
push
fidivl
pop
or
imul
scas
inc
xchg
push
mov
mov
ret
push
jae
mov
lcall
stc
push
mov
arpl
repnz
es
jno
outsb
cmp
dec
dec
adc
and
xor
inc
inc
dec
pop
test
clc
movsb
pop
mov
out
icebp
mov
adc
xchg
addr16
mov
dec
inc
dec
sbb
imul
xchg
adc
or
hlt
fadd
push
lea
ja
xchg
inc
loopne
xchg
lods
push
shrb
cmp
and
es
popf
xor
fsubr
push
fists
push
adc
mov
fsubs
cmpsl
jo
dec
mov
in
add
mov
adc
ret
outsl
cmp
xchg
push
push
or
cmpsb
push
mov
push
testl
sti
mov
inc
mov
xchg
mov
loopne
outsb
pop
pop
jns
add
outsl
imul
and
data16
repz
scas
andb
mov
daa
shll
push
and
jge
ret
sub
mov
mov
push
aad
lds
bound
dec
mov
adc
outsb
adc
pop
push
daa
push
es
cmpsb
loope
jbe
inc
in
shll
loope
push
push
adc
pop
inc
cs
push
hlt
push
inc
push
dec
outsl
cwtl
sbb
int3
dec
arpl
in
jge
inc
dec
mov
pop
pop
sub
xor
jnp
or
mov
jo
ds
push
lea
jnp
sub
xchg
lock
mov
or
sbb
arpl
sub
insb
fs
inc
ds
addw
mov
inc
xchg
add
sbb
pop
bts
insb
and
xor
popa
sub
xchg
ja
test
into
rcll
xchg
mov
add
xchg
and
out
daa
adc
mov
pusha
or
inc
mov
sub
out
mov
push
ja
dec
sub
ja
push
insb
shlb
push
imul
or
insb
push
sti
jbe
addb
lds
add
push
lods
or
sub
add
add
xor
sbb
pop
jp
sbb
jl
gs
pusha
sahf
lods
jne
jne
add
push
adc
testl
jb
outsb
jae
mov
push
pusha
cld
pop
mov
adc
adc
bound
sbb
mov
sbb
add
push
adc
sbb
aad
imul
test
movsl
sbb
push
dec
and
cmpsl
stos
nop
xchg
push
inc
inc
ds
lods
movsb
test
adc
and
fldenv
adc
stos
add
xchg
xchg
adc
add
jo
jl
add
jno
js
inc
inc
dec
mov
mov
sbb
test
cmp
test
lods
adc
or
add
push
jmp
add
sbb
add
lock
sbb
fs
push
pop
sbb
inc
rcl
add
ret
enter
pop
mov
test
xchg
rcrb
cmp
dec
stos
xchg
addr16
sub
cmp
gs
add
add
jp
sbb
inc
adc
xchg
sbb
adc
test
sti
dec
dec
ljmp
movsb
jbe
mov
mov
jl
add
lea
jle
test
jmp
or
jl
inc
dec
sbb
pop
xchg
sbb
orb
fistpl
scas
fiaddl
pop
cs
fs
push
and
xorb
pop
pop
mov
push
dec
dec
or
fimull
push
or
dec
sbb
jae
push
xchg
push
imul
inc
movsb
dec
mov
sub
pop
add
push
push
loope
cmp
mov
outsb
test
mov
rolb
push
mov
adc
neg
add
xor
add
arpl
clc
fisubrs
jg
adc
ret
pop
test
jle
push
sbb
dec
pop
or
or
mov
mov
rcr
sbb
std
lret
xchg
add
add
push
sbb
lret
fs
add
inc
add
xlat
dec
inc
out
incl
inc
push
or
sbb
xor
push
dec
push
add
xlat
or
push
push
mov
jae
jmp
add
pop
mov
push
and
lods
insb
sub
addb
imul
xor
push
pop
xor
mov
cmp
pushf
sub
imul
es
into
ss
and
and
popa
data16
adc
inc
add
xchg
insb
mov
or
push
mov
mov
push
inc
inc
les
scas
loope
sbb
movb
ss
jmp
mov
inc
insb
push
pop
int3
add
popa
mov
cs
sbb
imul
mov
ror
daa
mov
mov
mov
and
mov
mov
fs
roll
aam
push
mov
push
xor
fisubs
adcl
push
and
sbb
adc
jle
or
test
or
or
and
add
inc
push
fucom
adc
adc
push
adc
push
add
pop
push
fsubs
jp
or
dec
sub
aam
sub
dec
adc
and
or
adc
cwtl
insb
adc
add
insb
jae
mov
outsb
inc
lret
mov
inc
shlb
in
inc
js
xorps
push
add
clc
outsl
popa
pop
cmovge
jne
fcompl
cmp
jne
sbb
inc
adc
dec
fs
mov
fidivrs
adc
imul
or
je
or
and
inc
push
push
jb
popa
insl
gs
mov
cmpsl
fnstcw
outsb
jo
je
mov
lret
inc
outsb
or
inc
push
dec
addr16
outsl
je
imul
sbbl
lock
lock
jg
incb
sbb
or
or
test
lock
jp
mov
or
push
dec
lock
add
and
add
push
inc
mov
add
add
pop
inc
sub
add
sbb
or
jmp
iret
mov
mov
or
mov
in
popf
sub
adc
pop
outsb
xchg
int
xor
add
and
push
notl
sub
add
mov
repz
dec
inc
inc
int3
or
or
lcall
fnstenv
add
in
rcr
arpl
rolb
jbe
adc
hlt
add
jle
shrb
fs
xor
xchg
je
add
dec
push
cmp
sti
xor
mulb
jae
cmp
pop
pop
fprem
daa
leave
sbb
add
fwait
pop
push
dec
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
