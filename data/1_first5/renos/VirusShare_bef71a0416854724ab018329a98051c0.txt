and
cwtl
inc
inc
add
orl
mov
enter
je
enter
insb
push
mov
xor
rolb
mov
aas
xor
and
push
sti
in
inc
call
ret
lea
push
mov
push
pushl
adc
jg
fisttpll
or
or
cs
cmpl
je
xor
mov
dec
idiv
inc
adc
xor
dec
test
jne
call
sbb
mov
mov
mul
add
div
les
pop
pop
push
mov
mov
mov
repnz
jb
sti
fnstsw
mov
ret
nop
imul
std
jbe
out
mov
inc
hlt
dec
hlt
add
test
or
inc
sbb
sub
rorb
adcl
sti
fcomi
fildl
sbb
add
rorb
add
xchg
out
or
clc
mov
and
xor
mov
outsl
sbb
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
mov
cmp
incl
jbe
adc
add
pop
pop
push
dec
lock
sbb
mov
fdivrl
imul
in
jg
jmp
xor
cs
insb
lcall
mov
mov
aaa
mov
push
mov
aas
cmp
mov
addl
sti
add
std
lea
mov
push
add
test
jne
mov
mov
jmp
mov
ret
mov
aam
mov
roll
cmp
lcall
adc
icebp
adc
lret
lea
mov
mov
shl
cmp
mov
mov
push
lea
shld
popl
mov
jmp
sar
mov
out
adc
flds
neg
movzwl
cmp
jg
mov
push
icebp
andb
decl
mov
mov
mov
dec
jmp
push
mov
bsf
iret
pop
xchg
ljmp
mov
lea
shl
xchg
jmp
xchg
push
or
add
inc
sbb
mov
not
bt
dec
mov
or
mov
rcl
lea
mov
sbb
fildll
loop
mov
lea
sbb
rcl
xor
imul
jbe
fcmovnbe
inc
or
iret
pop
mov
mov
pop
mov
inc
push
inc
lea
mov
mov
lock
inc
aas
jg
fbstp
xchg
inc
ljmp
or
shl
mov
mov
jmp
xlat
inc
aad
stos
xadd
ja
mov
push
or
fisubl
insl
sbb
sbb
inc
xlat
adc
fldt
xor
mov
push
or
sub
xchg
fstpt
push
push
inc
inc
pop
jmp
cld
or
rorb
and
rcr
mov
lar
jg
inc
lds
iret
lock
imul
in
inc
sti
aad
fidivrs
pop
cmp
bts
dec
dec
xlat
sbb
out
fdivrl
cmp
fstpt
mov
pop
adcl
incl
push
jnp
xlat
mov
aas
or
xor
test
imul
imul
test
adcl
movsbl
sbb
iret
mov
add
dec
jns
rclb
and
ret
add
mov
pop
lock
decb
dec
cmp
jnp
adc
leave
mov
mov
call
fistpll
jmp
nop
xor
aad
dec
mov
mov
divb
adc
jb
inc
stos
dec
jae
inc
dec
lea
pop
clc
jecxz
test
cmp
arpl
in
mov
lock
inc
inc
jne
jg
mov
jo
xchg
test
xacquire
clc
and
out
sub
jle
decb
dec
mov
cmp
js
int
stc
rclb
ja
ja
mov
mov
xor
test
je
pop
js
in
repnz
add
sbb
lea
negb
cmp
add
dec
add
xchg
jmp
mulb
jl
in
mov
adc
jl
adc
repz
jg
loope
dec
inc
jno
push
pop
mov
inc
cs
sub
cmpsl
jmp
outsl
sbb
dec
push
mov
or
mov
adc
mov
aaa
insb
aaa
xchg
gs
xchg
add
mov
adc
in
inc
jge
lock
fstpt
pop
or
pop
addr16
rcr
mov
mov
les
adc
cmpb
xchg
push
mov
out
pushf
mov
in
push
push
or
mov
or
mov
in
xchg
pop
in
pop
aam
je
fidivrs
sbb
rcrb
fcomip
mov
repnz
popl
adc
xor
inc
sbb
dec
sbb
xlat
mov
push
in
loopne
xchg
and
push
fcompl
fmuls
in
rorb
cs
dec
shll
add
rcl
and
xor
fsub
popf
in
or
xchg
mov
mov
sub
mov
mov
dec
mov
shrl
mov
push
push
xor
mov
mov
cmpsb
shrb
iret
shlb
mov
xor
mov
mov
mov
clc
rcrb
orl
lods
dec
mov
ror
cmp
jbe
neg
test
mov
mov
mov
adc
adc
outsb
out
push
test
jbe
mov
push
and
rcl
sbb
adc
mov
pop
fmuls
leave
xchg
dec
jle
sbb
lods
sub
sbb
insl
pop
cli
xchg
jmp
mov
mov
push
jnp
negb
mov
push
add
xor
ss
mov
cmp
xor
xor
xor
xor
pushf
and
sbb
mov
xchg
clc
xchg
fcoml
mov
push
cld
jbe
sub
js
dec
shrl
mov
lock
adc
bswap
and
fdivl
or
pushl
rcrb
je
enter
das
inc
mov
mov
push
inc
pop
mov
popa
test
outsb
out
iret
dec
lret
push
rorb
mov
sbb
jno
mov
dec
inc
loop
lea
loop
dec
push
dec
dec
jmp
outsl
mov
outsb
add
push
mov
sti
insl
loope
shl
decl
rorl
dec
dec
and
or
sub
stc
sbb
inc
mov
fcos
or
push
xor
xchg
pop
mov
cmp
adc
jns
out
inc
fists
push
dec
cmp
mov
and
sub
pop
pop
call
adc
aad
mov
jo
fisttpl
or
xchg
mov
or
sbb
outsl
or
jg
mov
inc
mov
mov
jmp
jmp
jmp
lea
ret
rorl
sbb
call
shr
popa
inc
push
pop
or
dec
jmp
jne
cmp
and
outsl
incl
ret
xchg
xchg
test
xchg
es
xorl
out
imul
mov
hlt
outsl
imull
jnp
icebp
lds
imul
pop
xchg
add
mov
daa
xchg
mov
or
jle
push
lea
jl
ja
bound
adc
xor
add
mov
mov
sahf
and
rep
pop
pop
daa
add
hlt
lea
dec
sub
fdivrp
xor
testb
jne
xor
xchg
loop
out
sti
pop
xchg
xor
mov
testl
xor
lock
fucomp
addb
sbb
jmp
scas
add
or
or
or
call
adc
clc
std
pop
ljmp
and
cmp
jne
js
imul
ds
pop
adc
fildll
pop
pusha
rolb
ret
add
subl
aaa
decl
jne
pop
int3
mov
sbb
add
push
jo
leave
fidivs
icebp
sarl
ja
mov
orl
je
add
mov
je
addl
add
lods
aam
mov
jmp
adc
sbb
or
push
add
adc
roll
add
test
lret
mov
xchg
push
mov
or
inc
in
push
push
sub
or
push
lods
je
push
xlat
adc
mov
std
or
push
push
sub
pushf
cs
mov
mov
daa
push
icebp
sbb
adc
test
fadds
cmp
mov
insb
imul
call
and
sub
adc
insl
dec
in
in
test
push
mov
cmp
ret
test
je
sub
std
test
mov
sbb
xor
in
or
lock
in
or
pop
rcll
pop
mov
push
cmp
sbb
or
inc
adc
add
clc
shlb
adc
add
out
jne
roll
xor
pop
mov
enter
or
enter
sub
mov
sbb
loopne
sub
and
cmp
addr16
je
xor
das
adc
fsubs
xchg
push
sub
loope
inc
add
sbb
cmp
fwait
inc
sub
mov
pop
ss
fisubs
sbb
cmc
les
and
mov
orl
add
xchg
int
ja
jne
adcl
or
inc
je
out
pop
push
out
inc
push
scas
jb
mov
mov
xlat
repnz
inc
mov
addb
and
and
adc
adc
lsl
ret
inc
push
decb
jne
cld
sub
clc
sbb
fildl
mov
in
mov
insb
or
cmpsl
mov
out
lea
adc
add
mov
pop
xchg
push
adc
or
pop
mov
mov
mov
pop
jmp
cltd
ret
cmp
dec
out
xor
divl
test
jne
pop
jmp
adc
xor
and
xor
sub
xor
clc
and
sub
outsb
daa
xor
inc
push
adc
and
push
adc
scas
inc
cmp
or
cmpsb
pop
lret
inc
jo
push
or
adc
in
xlat
in
outsl
jp
add
cmp
or
hlt
jmp
leave
sbb
jl
das
fs
subl
sbb
push
mov
jmp
sub
or
push
sbb
jae
out
pop
xor
cmp
sbb
insl
xchg
adc
fwait
and
pop
add
jg
bound
movsb
sub
movsl
pop
xorl
clc
add
out
jb
jl
or
arpl
fs
jae
outsl
mov
add
ss
xlat
hlt
mov
mov
mov
mov
bswap
js
add
push
mov
hlt
push
cmp
push
adcl
add
mov
fdiv
mov
or
mov
bound
fistl
sbb
push
hlt
leave
push
bnd
sub
loopne
push
pop
cmp
cs
or
in
stc
inc
push
inc
push
cmp
push
mov
mov
dec
jl
mov
inc
sbb
pop
push
rcll
shl
or
push
add
or
pop
xchg
jno
cld
cmp
pop
enter
dec
lock
idiv
addb
push
and
js
repnz
hlt
hlt
xor
push
popa
mov
mov
loopne
push
test
loopne
xor
or
lea
jmp
in
push
in
lds
movsl
adc
setns
dec
mov
adc
sbb
mov
mov
sti
xchg
and
data16
add
shlb
jbe
leave
call
dec
dec
jbe
call
hlt
jmp
insb
and
shlb
xchg
mov
add
adc
mov
imulb
add
ss
ret
in
and
fldt
cld
lock
inc
jb
and
push
int
test
jmp
or
push
pop
sub
fdivrl
cli
mov
add
int3
aad
mov
pop
push
adc
aam
outsb
jge
aam
pop
loop
sbb
ljmp
jg
pop
int3
or
outsl
popa
fs
imul
sbb
gs
pushl
outsb
push
push
popa
imul
insb
gs
bound
sti
ljmp
arpl
insb
outsl
jae
dec
popa
outsb
cmp
popa
jo
imul
imul
popa
insb
inc
pop
jl
pop
rcrl
mov
in
call
push
inc
pop
sub
insb
dec
outsl
jbe
dec
gs
pusha
lods
push
mov
jns
arpl
je
jg
inc
fs
imul
jns
insl
jb
jae
pop
jmp
pushf
jns
ja
add
rclb
loopne
sti
mov
jb
mov
sarb
das
xchg
xchg
sbb
push
mov
mov
sub
jmp
inc
sbbl
jne
sbb
imul
sbb
pop
fldenv
push
mov
mov
sbb
cld
cmpb
sbb
jb
sbb
inc
daa
adc
xchg
jne
jne
jmp
popa
data16
sub
mov
das
icebp
mov
mov
mov
or
out
cld
fisubs
add
dec
add
mov
nop
decl
adc
imul
adc
adc
mov
sbb
add
xchg
pop
add
lcall
lea
icebp
das
adc
rol
ja
leave
or
lea
xlat
sarl
addl
mov
dec
movsb
and
inc
mov
shrb
mov
lock
xchg
add
mov
or
cs
sub
mov
cmc
addb
pop
mov
or
jmp
jl
insb
mov
mov
mov
add
push
push
dec
scas
mov
mov
rcr
shlb
jbe
adc
mov
push
pop
cld
rolb
mov
rorb
out
mov
xor
mov
lock
push
ss
leave
sbb
add
pop
fucomi
shl
mov
leave
shrl
inc
mov
or
dec
push
subb
rorb
or
push
dec
cmp
cmp
or
or
xor
sub
daa
mov
add
cmp
mov
or
movl
gs
mov
cmp
sar
push
imull
push
lods
add
rolb
leave
pop
push
xlat
std
decl
or
mov
push
inc
pop
mov
xor
fildll
call
xor
jg
and
cmp
outsl
dec
jne
arpl
add
add
js
or
jl,pt
or
arpl
jno
xchg
pop
add
or
adc
inc
pop
cltd
icebp
hlt
mov
mov
and
add
sub
adc
sub
incb
inc
add
sub
mov
xchg
dec
add
inc
pop
test
flds
pop
inc
adc
inc
sbb
scas
in
adc
cmp
dec
imul
jle
xchg
and
pop
mov
subl
sbb
inc
sbb
cmp
pop
inc
pop
jae
add
pop
arpl
xor
inc
andl
movsb
orl
adc
mov
in
xchg
inc
out
clc
pop
cmp
xchg
sbb
xor
xchg
push
cmp
push
jnp
sbb
adc
test
dec
jbe
fldpi
xor
sbb
dec
xchg
add
mov
or
inc
mov
pop
or
push
test
jp
dec
sahf
dec
out
push
enter
aad
rolb
out
cmc
adc
dec
add
sbbb
jns
pop
push
lahf
push
pop
or
mov
xchg
imul
scas
fs
jl
mov
inc
lcall
or
fistl
add
add
dec
adc
dec
and
xchg
xchg
lret
push
frstor
push
jnp
mov
dec
mov
sbb
jnp
or
aaa
fmuls
jnp
loope
push
andl
fsts
test
lret
mov
jnp
repnz
push
xchg
wrmsr
xchg
push
xchg
xchg
xchg
mov
and
icebp
cwtl
adc
daa
mov
push
pop
clc
lods
add
jge
daa
add
add
add
pop
jae
pop
add
add
aaa
fwait
dec
jbe
or
add
add
adc
test
sub
popf
add
xchg
add
ljmp
call
pop
add
dec
push
pop
push
push
dec
sbb
lea
jnp
dec
into
jbe
sbb
inc
pop
push
testl
das
incl
dec
dec
inc
inc
or
add
mov
outsl
pop
xchg
add
pop
sbb
add
add
add
int
adc
lret
pop
push
xchg
add
add
nopl
addr16
mov
idivl
sub
lahf
jmp
jae
bound
pop
or
and
mov
fwait
out
enter
xlat
cli
jecxz
pop
sub
das
push
scas
sti
fmuls
add
fildl
repz
mov
mov
dec
rorl
or
add
test
in
ja
imul
cmpsl
add
push
fcmovnb
jbe
add
add
and
add
xor
fildll
pop
js
insb
lods
out
es
sub
es
pop
testb
and
sub
push
es
mov
pop
dec
inc
or
fidivs
add
mov
pop
ja
jnp
inc
pop
sub
jg
or
gs
xchg
jmp
dec
pop
adc
insl
xchg
int
sbb
je
rorl
and
or
push
inc
fldenv
pushf
fstpl
pmulhw
fildll
out
xchg
aaa
dec
pop
sbb
inc
inc
push
fwait
mov
jno
pop
jae
sbb
sub
mov
fimull
inc
xor
inc
sbb
imull
jo
or
sti
testb
push
inc
sbb
sbb
push
pop
add
pop
or
add
or
dec
xchg
push
inc
ret
dec
sbbl
test
dec
jnp
pop
add
sub
mov
pushf
pop
jmp
inc
dec
add
dec
sbb
lea
ljmp
movsb
add
or
mov
sub
push
adcl
out
jb
lret
adc
or
mov
data16
mov
add
fdivs
scas
push
incl
push
mov
or
imul
xor
scas
xor
iret
push
popl
and
je
push
lods
adc
and
fyl2xp1
fdivl
je
imul
sub
inc
and
outsb
jo
add
adcb
push
das
and
sub
sbb
push
jo
push
fdivs
xlat
aaa
jns
cltd
inc
add
sti
insl
fisttps
or
stos
pop
and
adc
fsts
outsb
pop
call
pop
jbe
adc
mov
sub
sub
sbb
mov
pop
sub
cmp
pop
fidivrl
das
movsb
lods
add
and
dec
xchg
imul
iret
add
lods
jecxz
ja
divl
js
add
es
add
xchg
add
ds
dec
cld
insl
movsb
jecxz
mov
movsb
inc
and
insl
mov
fsubl
sahf
cwtl
sub
std
ret
into
fidivrl
or
pusha
jle
test
sub
adc
subl
out
in
je
lock
fadds
push
cmp
sub
cmp
outsl
or
int3
add
jb
cltd
dec
and
or
pop
test
dec
push
insb
cmovae
jo
inc
inc
add
mov
mov
dec
push
mov
lea
ror
iret
bound
in
subl
dec
jns
mov
push
add
fcoms
jp
cmp
or
enter
cs
inc
xlat
xor
jg
mov
subl
and
std
pop
push
jmp
jne
in
insl
outsl
jg
inc
lds
loopne
or
adc
jg
and
out
mov
out
and
adc
cli
gs
loope
inc
test
insl
fcmovnu
and
sbb
and
mov
cld
jl
arpl
inc
and
mov
fnsave
mov
out
or
pop
ficoml
lods
lea
jge
icebp
bound
cmpsb
add
sbb
ss
or
jge
or
movsb
testb
mov
and
test
add
imul
pop
mov
dec
add
test
push
inc
xlat
loopne
repz
adc
and
mov
pusha
insb
add
data16
mov
hlt
loopne
jne
bound
rcll
pusha
in
jl
jmp
insb
aas
push
sbb
xor
bswap
xchg
iret
sub
daa
adc
lods
popa
sbb
xor
add
mov
pop
push
in
or
jo
pop
jns
jl
pop
mov
lods
and
mov
imul
enter
jbe
pop
or
ss
mov
cmp
jg
inc
jmp
cmp
insl
in
shl
sbb
adc
nop
fnstenv
inc
mov
pop
out
dec
or
fsubrl
jns
sbb
test
sbb
sub
cmpsl
add
cmp
dec
fwait
push
outsl
jle
mov
fldl
push
cmpsb
in
les
mov
adc
in
sub
or
xor
in
arpl
mov
jg
je
in
dec
xor
insl
cwtl
into
es
and
mov
arpl
sbb
push
jae
divb
scas
push
and
adc
dec
adc
dec
fcomi
adc
out
or
addr16
out
cld
pop
ret
xchg
and
fnsave
lret
lods
sub
jl
mov
in
das
xchg
out
outsl
sub
adc
push
or
add
incb
xor
mov
inc
iret
jg
mov
xor
jne
sbb
dec
inc
iret
push
xorb
sbb
cmp
out
fidivs
rorb
js
add
lret
inc
nop
flds
call
cs
xchg
add
and
cli
or
push
rol
push
lods
fists
insl
mov
out
sti
pop
in
push
add
imull
cmpsl
xchg
jo
dec
push
jb
push
movsb
cltd
cld
insl
jmp
or
out
and
jle
sbb
sbb
fdivs
pop
faddl
fildll
mov
lret
pop
pushf
jecxz
jo
add
mov
notb
xchg
xor
repz
mov
dec
dec
stc
pop
fmuls
ja
lods
cmp
aad
iret
mov
aam
test
xor
scas
push
shll
insb
repz
fistl
movsl
and
incl
mov
gs
mov
fidivs
imul
adc
xchg
stos
loopne
add
scas
dec
xor
sbbl
sbb
mov
lret
in
mov
aas
adc
scas
add
pop
data16
inc
jae
test
cmpsl
xchg
test
js
je
xchg
xorb
out
pop
fldt
cmp
adc
or
xor
xor
ror
lods
loopne
subb
movl
cmp
fbstp
dec
iret
and
pushf
sti
test
in
dec
stos
arpl
xchg
loope
fsubrl
mov
adc
add
xor
lea
fs
sub
xor
cmp
fstps
inc
jne
gs
sub
dec
mov
loopne
cld
push
insl
or
inc
push
cmpsb
or
mov
fs
inc
cmpsb
mov
fsts
mov
add
inc
sub
es
ja
nop
add
pop
xor
mov
mov
and
mov
jmp
cwtl
jle
pop
sbb
push
mov
das
dec
pmulhw
adc
mov
into
daa
ljmp
cs
fistpll
rorb
cmpsl
out
and
popa
cmp
sub
iret
pop
js
gs
push
gs
test
cmp
gs
std
push
inc
or
inc
mov
bound
add
inc
xor
daa
dec
inc
push
pop
xor
adc
int3
in
notl
pop
addl
dec
push
clc
ss
lods
adc
mov
and
ds
mov
jae
cmc
mov
dec
xlat
aas
fldcw
ret
jecxz
dec
push
loope
cmp
xchg
sbb
sarb
flds
add
xchg
notl
loopne
push
pop
inc
jnp
lea
and
xchg
pop
iret
cli
out
and
jns
in
inc
mov
xchg
cld
scas
inc
iret
aaa
aaa
popl
mov
mov
and
adc
mov
mov
dec
sub
inc
sub
ja
repnz
pop
testb
js
into
frstor
mov
scas
cli
hlt
adc
sub
pop
xor
xchg
sub
sbb
addr16
mov
jae
iret
sub
ja
jns
jge
mov
mov
dec
iret
sub
mov
inc
cmp
mov
and
sub
negb
fisubrl
insb
cmp
sub
mov
repz
cltd
and
scas
push
ret
stos
ja
xlat
test
xor
sti
fnstenv
push
mov
pop
cmp
notl
das
and
sub
push
mov
ret
push
push
test
mov
mov
or
stc
dec
push
daa
mov
pop
dec
movsl
jbe
mov
insl
inc
sbb
push
push
fildl
sbb
ja
sti
fdivrs
add
imul
and
xchg
lods
xlat
scas
and
shlb
bound
sbb
les
inc
aas
std
inc
fsubrp
mulb
mov
scas
push
mov
ret
imul
and
and
ss
movsl
insl
xor
mov
mov
outsb
movb
inc
mov
fmuls
iret
jmp
adcb
jmp
push
rcr
mov
mov
sti
jle
iret
jb
pop
or
adc
cs
ret
fmull
es
fwait
push
jbe
xchg
andl
push
xor
hlt
ror
push
js
lock
repnz
lret
inc
lret
daa
push
arpl
aaa
rcrb
and
pop
int3
mov
sub
and
iret
fdiv
lods
insl
cli
mov
arpl
pusha
cmp
pop
jecxz
ds
jo
pop
mov
aaa
xchg
cmp
push
scas
cmp
add
or
std
mov
ja
gs
pop
adc
or
sub
and
in
cmp
add
addr16
mov
rolb
push
jbe
sub
mov
mov
flds
jmp
ja
sub
pop
pop
lea
lods
and
push
sahf
inc
shll
sub
shrb
or
in
mov
or
fcom
mov
dec
bound
push
sbb
push
vmwrite
je
add
fsubs
popf
in
dec
insb
jmp
pop
int
cmp
mov
outsl
push
sarb
mov
into
ss
call
inc
fidivrs
fnstsw
add
cmp
jle
add
sub
out
jae
lock
sbb
xor
xor
aaa
push
xor
popf
lods
bound
repz
mov
mov
dec
dec
arpl
xor
iret
xchg
mov
ljmp
mov
insl
sub
xchg
iret
addr16
inc
lods
movsb
es
aaa
jo
clc
rorb
divl
nop
dec
fistpl
fstpl
js
mov
xchg
iret
add
sbb
shlb
pop
test
ret
scas
jbe
lcall
push
xchg
das
test
fisttpl
fnstcw
ret
sbbl
in
pop
iret
push
lcall
arpl
and
lods
out
lods
arpl
or
or
or
sbb
pushf
rol
testb
or
pop
and
add
fxch
aam
xchg
jno
aaa
cwtl
sub
sbb
dec
pop
into
add
int3
xchg
xor
pop
scas
sbb
push
fucom
mov
xchg
addr16
push
arpl
pop
dec
mov
pop
dec
sub
jle
jl
scas
pop
xlat
sub
popf
aas
pop
pushf
xchg
xor
or
ret
das
pop
cwtl
sub
mov
sub
lahf
paddq
adc
and
pop
cwtl
bound
pop
dec
dec
cmpsb
xlat
fcoml
das
sub
mov
fwait
inc
daa
pusha
fldl
or
sbb
cvtps2pd
imul
sbb
adc
mov
add
fcoml
jmp
in
mov
xchg
adc
frstor
add
bound
in
add
adc
lock
sbbl
inc
sbb
outsw
cmp
mov
pop
dec
ficomps
xor
jbe
xor
popa
adc
lods
cmp
xlat
jae
arpl
mov
mov
clc
es
xchg
sbb
faddp
cmp
scas
sarb
xor
jo
and
sbb
jbe
nopl
xor
mov
scas
jb
fcompl
adc
sub
sbb
dec
add
mov
ss
add
fldenv
inc
inc
loop
lret
mov
imul
or
out
push
jle
mov
or
or
fildll
xor
sbb
dec
xchg
jp
cltd
cld
cmpsl
pop
fsts
es
out
add
push
xlat
pop
adc
rol
jmp
sti
cmp
shl
add
inc
fsubl
mov
pop
fistpll
int3
and
and
inc
test
pop
sub
mov
jp
push
dec
and
icebp
addb
mov
sbb
xorl
add
outsb
jbe
andb
fldcw
test
jnp
lcall
testb
cmpsl
sub
fldenv
jmp
shll
sbb
cmp
cmp
mov
inc
lret
push
cwtl
cld
rclb
sub
add
fcomip
xlat
mov
xor
aaa
push
iret
xor
mov
pop
inc
sub
mov
xchg
inc
or
or
testl
cmp
sbb
sub
adc
jg
sti
pop
or
lods
push
out
cmp
xor
aaa
pop
inc
pop
repz
arpl
in
xlat
and
dec
sbb
xor
pop
mov
adc
mov
pop
xor
adc
mov
inc
movsl
vpcmpeqd
mov
inc
out
jmp
test
scas
mov
mov
adc
inc
push
test
test
inc
push
call
hlt
sub
pop
pop
fsubrs
jae
jns
movsb
fdivrs
test
sbb
push
lods
lods
loop
inc
fldenv
xor
and
push
lret
sbb
push
push
outsb
std
push
mov
add
cmp
aaa
je
fistl
outsb
xchg
push
push
and
add
xor
sub
or
pushf
ficoml
sbb
loopne
pop
jmp
xchg
jg
test
or
fstpt
pop
ss
popf
xchg
sbb
cmpsb
push
daa
sbb
xor
xor
adc
jbe
mov
push
and
push
sub
jle
out
lret
cmovs
xchg
adc
push
mov
xchg
out
repnz
out
leave
jbe
loop
fistps
push
mov
scas
mov
mov
scas
pop
cmp
in
cmc
jecxz
cmpsl
xchg
xor
jle
xor
stos
sbb
adc
push
mov
or
loope
jbe
adc
icebp
cmp
sub
jecxz
lahf
mov
scas
lret
adc
fsubl
lret
jo
pop
dec
push
or
jo
shlb
insb
lds
dec
jmp
mov
jbe
jae
sbb
popa
es
rclb
or
cmc
daa
sub
lods
cwtl
mov
das
mov
sahf
sbb
inc
data16
jb
shll
jmp
sbb
inc
mov
mov
xor
sub
das
add
loope
fisttpll
dec
sub
mov
fwait
and
push
cmpsl
stos
imul
cmp
lock
fmulp
je
mov
fcomi
push
lret
cltd
into
cmp
and
lret
ss
sbb
pop
js
mulb
enter
loopne
cmpsb
xchg
adc
mov
cmpsl
inc
jmp
xor
popa
jae
push
pop
lahf
xor
subb
sub
clc
push
xor
jno
mov
xchg
push
imul
out
cmpsb
ljmp
mov
int3
adc
icebp
xor
sub
cmpsb
testb
out
pop
jae
add
and
dec
xor
loope
sub
xor
imul
jmp
imul
jae
pop
adc
jmp
jnp
fadds
push
and
sarl
ret
sub
xor
sbbb
ja
test
movsb
mov
aas
or
mov
and
les
push
fnsave
jp
call
lods
fistl
inc
pushf
sub
add
push
mov
sarl
fsubs
dec
mov
aaa
sbb
lock
rcrl
std
jbe
rolb
aas
mov
sub
pop
xchg
pushf
jle
lret
inc
or
or
jp
lods
jge
cmp
sub
les
lret
mov
lahf
cmp
add
out
iret
pop
and
andl
test
push
xor
inc
inc
cmp
mov
xchg
pop
add
fimull
in
push
xchg
cwtl
subb
push
sbb
inc
lahf
push
aaa
orb
and
mov
subb
faddl
js,pn
inc
and
shlb
fstp
sbb
into
adc
sbb
aaa
and
fnsave
loopne
sub
mov
lahf
rcl
jmpw
lods
testb
push
scas
pop
sub
inc
mov
or
js
pop
or
add
mov
shll
mov
ds
cmp
mov
pop
enter
pop
imul
movsb
jae
cmpsl
ss
push
dec
sbb
push
xor
lock
mov
scas
outsl
sub
iret
scas
test
sar
mov
out
adc
sbb
shll
mov
ja
stos
cmp
xlat
inc
pusha
push
lods
or
mov
and
lret
mov
xor
dec
sbb
jle
and
mov
aaa
pop
stos
jae
pop
or
jne
fcmovne
inc
pop
pop
arpl
or
addr16
outsb
sbb
jge
add
push
pop
mov
xchg
jecxz
inc
jo
mov
push
je
mov
or
mov
and
fldenv
insb
daa
aaa
xlat
fld
mov
and
cmp
pop
loope
outsb
pusha
fnstenv
int3
sarb
and
stos
dec
bound
pop
rolb
jecxz
bound
dec
es
inc
int
add
xlat
jb
cmpps
lret
pushf
jg
scas
es
filds
and
mov
movsl
shll
int
cmp
cmpsl
lods
aas
pop
out
mov
clc
push
into
sbb
arpl
push
add
loope
test
leave
mov
clc
roll
in
pop
and
mov
loop
je
div
push
sti
push
sahf
sub
sub
in
mov
fisubl
out
add
mov
xor
or
call
fcomp
xor
in
sub
jnp
sub
push
add
in
inc
xchg
pop
pop
pop
jne
jnp
mov
mov
das
ret
mov
mov
test
xor
adc
or
adc
mov
ret
scas
xor
adc
mov
out
popf
pop
adc
jb
or
pop
add
insb
jnp
or
pop
test
testb
enter
mov
negl
js
lret
pop
lods
pop
jnp,pn
inc
int3
out
push
test
mov
push
in
pop
or
dec
xchg
push
inc
cmp
or
out
xorl
xchg
sub
call
clc
mov
mov
add
xchg
cmp
pop
or
xor
adc
inc
adc
pop
xor
je
adcl
sub
mov
insb
aaa
arpl
sbb
and
fildl
repnz
or
mov
call
test
xchg
add
pop
out
adc
imul
mov
jbe
popa
mov
or
lret
call
or
jg
xchg
arpl
outsl
insl
xchg
mov
scas
imul
daa
or
out
out
mov
add
pop
inc
lods
into
imulb
and
sbb
inc
sub
add
cmp
jle
mov
cli
stos
das
lret
test
in
cmp
push
roll
sbb
mov
xor
xchg
xor
adc
in
xor
shlb
and
cwtl
inc
in
stos
dec
test
movsl
add
addl
ror
jb
fwait
sbb
inc
addr16
xor
hlt
mov
mov
idivl
arpl
scas
xor
pop
mov
mov
cmp
add
cmp
sbb
or
in
mov
sub
push
and
adc
adc
ds
or
add
push
sub
mov
push
xchg
cmp
shll
mov
adc
arpl
andl
pop
pop
adc
test
xor
in
jne
sub
cmp
fstpt
lock
aaa
das
mov
or
je
sub
and
lcall
mov
dec
aas
xchg
jp
pop
fcompl
sub
xor
push
fnop
lods
or
mov
sub
outsl
mov
adc
lret
sub
mov
mov
out
adc
clc
test
cmp
xchg
shl
push
mov
mov
pop
div
sub
xchg
inc
mov
scas
and
mov
jo
jmp
int3
jb
mov
xchg
mov
aaa
and
das
inc
mov
test
adc
add
adc
jbe
mov
sbb
inc
dec
mov
add
cmpsl
jb
or
inc
shr
je
push
mov
and
mov
push
or
addr16
inc
aas
inc
xlat
iret
insl
ljmp
inc
jle
test
movsb
in
add
jg
stos
pop
and
enter
mov
cld
xor
stos
push
push
jle
orl
loopne
and
daa
sbb
lods
lock
rolb
xor
xor
sub
and
mov
pop
sahf
push
je
mull
iret
push
pop
fadds
mov
int3
xchg
mov
add
ja
and
insb
mov
aaa
int3
popa
sub
mov
mov
and
adc
adc
fistl
or
pcmpgtb
inc
push
add
outsl
imul
xchg
scas
outsl
push
aaa
add
outsl
in
inc
test
out
sub
push
sub
add
sub
das
pop
push
jbe
aaa
sub
and
sub
movsb
fimuls
lds
shl
fdivrs
push
cmp
add
insl
and
mov
push
mov
push
loopew
cli
test
lods
inc
add
les
shrb
or
pop
mov
push
and
and
iret
cmpsb
push
psrad
and
dec
imul
sbb
push
imul
or
mov
pop
sbb
mov
xchg
addr16
jl
cmpsb
xchg
inc
pop
mov
jno
xor
popf
lea
sbb
addr16
outsb
int
jbe
and
dec
sbb
jns
rclb
icebp
or
andl
or
icebp
jno
adc
scas
mov
lgs
xor
sub
inc
test
xor
scas
sub
jno
xor
jg
popf
or
js
jne
xor
cmc
pop
add
insl
xor
mov
adc
sub
add
sub
mov
sbbb
mov
leave
les
scas
dec
add
sbb
stos
push
lods
fistl
test
jl
iret
mov
bound
insl
jno
in
and
push
out
scas
lret
out
mov
fdivrs
ja
iret
arpl
les
add
fdivs
fcoms
push
dec
je
std
dec
sbb
pop
ljmp
pop
push
cmp
cmp
sub
cmpsb
ficompl
xchg
out
out
adc
lds
inc
shr
orb
outsl
call
or
xor
cld
hlt
cmpl
push
mov
push
ljmp
jno
mov
fs
cwtl
add
or
dec
mov
push
popf
pushf
arpl
add
test
mov
aaa
inc
shrb
and
or
cmp
les
lret
stos
inc
fwait
lahf
icebp
add
sub
and
fs
mov
test
ds
or
hlt
gs
mov
scas
fldl
ret
mov
xchg
xorl
add
in
sbb
and
shrl
lds
mov
inc
push
jbe
aad
stos
mov
inc
aad
pop
jo
das
addr16
fdivs
je
sbb
push
and
pop
int3
jno
pop
inc
sbb
cwtl
jno
jno
pop
cmc
xor
mov
scas
subl
sbb
int
mov
push
data16
mov
and
pushf
jns
mov
lock
shll
fnstcw
push
mov
rorl
shlb
daa
and
js
dec
or
xlat
neg
push
and
jo
adcl
getsec
fsubrs
jo
sbb
sti
and
cld
movsb
add
out
or
mov
adc
lods
xchg
scas
push
xor
inc
dec
cmpsl
pop
push
psrlw
dec
sbb
jo
mov
mov
xchg
daa
xor
pop
push
das
cmpxchg
inc
xor
in
jl,pn
or
mov
sub
shrl
sti
cmpsl
pop
add
pushf
xor
jnp
movl
xor
inc
cs
sub
adc
sub
cmpsl
xor
ret
mov
lods
insl
cmpsl
ds
add
fsub
call
repnz
and
int3
rorb
cmp
lods
popa
aas
and
jmp
sbb
lock
jo
aam
addl
dec
mov
jo
jo
or
add
jne
xchg
cld
js
or
testl
arpl
cmp
xor
idivb
inc
lahf
in
sub
lret
add
push
popa
outsb
cwtl
add
ret
sub
ja
fisubrs
aas
dec
fadds
mov
and
into
adc
adcl
stos
test
pusha
nop
lods
jo
mov
xor
jl
dec
sbb
lods
leave
das
mov
mov
lcall
ss
inc
in
lret
adc
test
sbb
loopew
or
push
xor
mull
mov
ja
leave
and
les
push
sti
fbstp
je
jle
filds
adc
cmpb
add
push
sbb
push
cmp
inc
mov
fcoms
inc
jbe
fisubrs
dec
jno
pop
sub
loop
popa
nop
js
xor
dec
pop
dec
shll
mov
dec
les
adc
test
or
add
sub
jmp
and
push
add
loopne
cmp
xor
inc
add
iret
popa
shlb
sbb
add
call
stos
mov
mov
xor
adc
xor
jnp
test
mov
loope
and
dec
and
dec
mov
adc
je
and
pop
xchg
ja
bound
iret
add
mov
lcall
movl
dec
les
pusha
or
xorb
daa
cmp
inc
dec
pop
outsl
popa
xor
push
das
ret
outsb
xchg
icebp
jle
hlt
fisubs
jae
test
repnz
shrl
push
add
outsb
add
cmpsb
jb
ljmp
je
call
cs
sub
bound
mov
add
xorl
outsb
cmpsl
push
sbb
and
jae
verw
pop
sbbl
stos
es
call
pusha
repnz
push
ja
dec
loope
movsb
push
test
inc
fcomps
shlb
jno
dec
inc
nop
jbe
xchg
jecxz
pusha
call
adc
add
jne
js
pop
lds
push
push
rorb
pop
xlat
sbb
jl
jle
fwait
lock
adc
xchg
lock
or
jae
sbb
int3
daa
push
in
mov
sub
out
rcl
jp
icebp
dec
or
adc
or
mov
or
pop
inc
mov
pop
pushf
mov
mov
xchg
or
add
mov
push
scas
inc
push
and
dec
sbb
fadds
jecxz
or
lcall
ret
push
mov
push
test
mov
push
fcoms
cmp
xor
int
sbb
push
inc
out
pop
jo
mov
xchg
xor
inc
movntq
and
xchg
mov
jns
negb
inc
cld
add
lret
insl
mov
mov
add
pop
lods
shrb
mov
jl
cli
lock
or
jecxz
int
test
mov
pop
lea
pop
inc
test
mov
sbb
in
leave
cmpsw
pop
inc
sbb
fcmovnbe
rcll
mov
mov
insb
cli
aam
iret
shrb
das
mov
adc
jo
push
jno
xor
cmp
insb
cmc
fdivrs
mov
leave
add
cmpsb
adcl
or
and
pop
mov
out
jo
push
inc
mov
jo
dec
insl
lds
aaa
mov
ljmp
movsb
sti
mov
inc
pop
rcrl
ret
xchg
js
test
jnp
sbb
mov
push
cmp
rcr
cli
and
jbe
mov
test
mov
test
imul
jo
push
push
or
iret
xchg
imul
or
mov
test
push
test
je
dec
popa
idivl
call
xchg
out
and
cltd
mov
les
adc
pushl
sub
ds
lcall
das
inc
inc
js
mov
ds
lea
aam
or
sub
mov
fnstsw
ljmp
jle
loopne
mov
inc
icebp
sbb
mov
out
in
lret
lret
push
inc
sbbb
inc
jl
cmp
xlat
es
jp
popf
pusha
jbe
add
dec
aam
arpl
in
outsb
xchg
push
pop
dec
mov
loope
pop
jae
add
fmulp
aad
iret
test
fisttpll
jne
and
scas
sbb
loop
xchg
pushf
push
mov
mov
stos
sub
pusha
in
mov
int
push
scas
insl
call
lods
das
push
pop
or
je
ret
sbb
ss
daa
das
sub
adc
add
add
ret
push
and
imul
stos
and
cmp
je
loope
mov
mov
or
mov
sbb
fisubs
dec
push
iret
add
fmull
pop
dec
and
ja
stos
jl
call
repz
and
lea
push
sbb
pusha
mov
mov
add
jae
hlt
imul
push
add
fstpt
add
lret
orb
xchg
fdivs
sbb
lods
mov
fs
xchg
add
faddp
loopne
inc
nop
andb
loop
push
xor
xchg
mov
dec
mov
mov
insb
test
shr
out
lcall
sub
push
xor
or
out
jmp
jge
es
sbb
sbb
hlt
addb
xchg
popf
pusha
std
jno
jle
cmp
sub
inc
idivl
push
xor
es
push
mov
add
stos
sbb
xchg
or
push
inc
jmp
add
iret
xchg
dec
pop
jne
mov
sbb
fcoms
stos
dec
push
mov
call
xlat
push
pop
iret
mov
ss
je
push
pop
ret
ret
ss
push
sar
xchg
dec
ret
test
int3
fiaddl
adc
iret
js
sbb
push
loope
repz
push
aaa
xchg
das
daa
and
push
xor
inc
mov
add
das
push
jns
repnz
push
imul
iret
push
sbb
push
repz
fisubrl
outsl
aad
lods
jno
mov
sub
mov
jb
sub
inc
push
and
stc
insl
or
or
ds
js
add
jmp
add
subb
or
ror
add
mov
sbbb
addb
or
insb
jo
or
adc
aaa
xchg
dec
cwtl
pop
scas
xlat
jns
or
pop
jno
loopne
lock
or
xlat
mov
in
push
push
push
push
mov
shl
out
adc
mov
test
adc
xor
jp
sub
rcrl
into
mov
jp
hlt
and
xor
lahf
inc
inc
dec
add
stos
dec
jo
mov
inc
mov
das
push
lock
jnp
stos
fs
addr16
push
dec
mov
movsb
inc
jp
ficoml
and
lret
adc
push
pop
inc
mov
xor
repz
adc
mov
testl
pushf
imul
insb
cmp
arpl
jmp
xor
sub
cmp
sahf
js
es
push
xor
add
push
jmp
push
add
inc
inc
outsb
lods
pop
mov
mov
jo
cli
bound
fdiv
and
inc
orl
aam
iret
cmp
and
loopne
sub
cmpsb
gs
xchg
mov
loop
add
and
pop
ror
jne
jnp
pusha
cmp
clc
leave
stc
add
xor
es
push
divl
out
in
outsb
lcall
pusha
ret
fwait
aas
and
push
add
jnp
cmp
lods
les
out
jg
sbb
inc
test
mov
pop
sub
xlat
lods
nop
xorb
out
jmp
iret
aaa
adc
xchg
mov
aam
add
jp
push
pop
mov
out
push
lea
push
sub
scas
movb
dec
ss
sub
cmp
mov
lock
nop
out
sub
add
push
cmp
iret
sbb
or
jmp
xchg
movsl
scas
and
rorl
rcr
bound
mov
shrb
adc
mov
add
arpl
imul
rcll
dec
xchg
aad
push
into
fistl
or
fistpll
and
scas
subl
pop
mov
xor
jbe
jmp
jle
and
adc
xor
xlat
mov
xor
aaa
push
arpl
pop
mov
push
xor
clc
xor
call
and
pop
popa
cbtw
mov
out
jmp
jae
add
jg
pop
int
inc
js
sti
stc
fwait
mov
in
fnstenv
and
fldl
popa
ss
and
sbb
testl
xor
adc
xchg
out
roll
sbb
inc
pop
sub
sub
out
inc
sub
xchg
negl
aaa
sti
cmp
bound
je
out
loope
nop
arpl
addr16
lcall
pop
ja
and
test
sti
mov
sub
cmpsl
pop
jne
adc
popf
pop
mov
inc
mov
adc
and
mov
or
test
ja
mov
cmpsb
jg
sub
inc
add
jnp
mov
ja,pt
sub
jge
fildl
push
bound
or
arpl
hlt
mov
and
or
mov
or
and
test
cmp
pop
xor
fdivrs
mov
jp
and
adc
fsubs
lahf
ss
in
test
mov
arpl
jecxz
xchg
push
jae
es
lods
xchg
jmp
insb
mov
jl
aaa
test
in
psllq
xchg
mov
xor
mov
jge
and
ss
xor
in
lahf
insb
je
fwait
sbb
mov
adc
std
out
iret
xor
test
jno
push
xor
test
inc
xlat
scas
movsl
clc
mov
js
shll
cmpb
js
and
xchg
pushf
aam
cmp
jnp
and
imul
aad
stos
jle
je
cmpsl
fsubrs
and
xor
xor
xchg
mov
and
mov
and
cmp
xchg
out
push
jns
adc
mov
jge
cmovns
inc
inc
push
jle
jle
flds
fistpll
or
mov
jge
pop
test
fwait
mov
jge
pxor
push
cmp
xchg
in
jne
cmp
pop
repz
nop
jge
popw
jg
mov
or
imul
adc
pop
ja
xor
jbe
pop
es
sub
psubusw
push
lods
icebp
nop
mov
enter
fsubs
mov
sbb
fcoms
popa
pop
imul
addr16
and
imul
lods
inc
mov
dec
sub
dec
ja
cmp
pop
dec
cmp
jge
inc
mov
out
adc
into
add
add
test
mov
dec
jmp
mov
mov
mov
pop
jns
mov
jge
cmp
mov
adc
cmp
push
jo
add
inc
add
xor
je
inc
dec
xchg
mov
mov
les
pushf
push
cmp
clc
sub
lds
inc
mov
push
mov
shlb
and
shrl
adc
or
add
and
or
jno
inc
and
pop
lret
aaa
andl
sbb
pop
rclb
xchg
imul
or
loop
push
mov
mov
bound
call
xchg
jle
sbb
addl
outsb
rcr
or
movsb
daa
adcl
mov
cmpl
adc
push
xor
push
mov
mov
pop
out
xchg
and
sub
insl
mov
mov
mov
mov
adc
add
out
and
push
out
scas
xor
test
stos
in
xchg
mov
lahf
imul
hlt
mov
mov
mov
adc
push
adc
call
push
mov
rorl
lods
lds
cmc
or
adc
sbb
sar
fidivs
addr16
or
pop
enter
push
xor
and
sub
xchg
addb
stos
js
movsl
out
cwtl
add
icebp
adcb
sub
xor
xor
lret
test
cli
into
or
cs
cwtl
cwtl
sub
loope
mov
cmc
push
pushf
xchg
inc
cmpsl
ljmp
jecxz
fldt
mov
mov
in
pop
stos
imul
xchg
test
pop
fwait
aad
js
xor
sbb
xor
aam
pop
adc
sub
pop
add
idivb
sub
scas
pop
arpl
add
dec
data16
dec
and
lods
mov
daa
lret
and
add
or
sbb
jno
mov
cmpsb
lret
dec
jne
xlat
sub
into
jo
roll
dec
mov
dec
adc
js
sarb
cmp
jge
adc
clc
aas
int
dec
dec
pop
in
push
das
xor
scas
push
sbb
mov
push
xchg
call
bound
pushl
shrl
test
or
push
push
das
stos
xor
adc
stos
fcomps
fwait
jo
aaa
push
pop
adc
js
push
hlt
pop
jnp
scas
stos
jae
jnp
das
imul
call
ds
aad
adc
test
rcrl
lods
popa
pop
lods
jno
mov
cs
sbb
add
ss
into
or
orl
pop
add
cli
addb
call
cmp
add
inc
icebp
fistpl
mov
jg
iret
mov
rcll
sbb
xor
popa
imul
xchg
adc
and
rcl
insl
xor
push
movsb
sub
mov
and
pusha
push
dec
insl
inc
fisubrs
rol
inc
nop
mov
push
in
stos
and
ss
jbe
daa
cltd
ror
jns
scas
xorb
adc
outsl
pop
or
rolb
jle,pt
stos
or
sub
push
stos
rorl
jp
xor
xchg
sub
xchg
sbb
sti
xor
mov
testl
sti
test
ficomps
fdivl
mov
ljmp
push
mov
push
cwtl
out
cmp
pop
mov
aam
mov
enter
rorl
jae
sub
cltd
filds
or
add
ffree
mov
pop
fwait
inc
xchg
and
wrmsr
xchg
jmp
pop
jno
xchg
enter
add
and
mov
dec
and
loopne
lcall
mov
and
dec
push
add
roll
push
lock
outsb
add
ss
daa
inc
jnp
fistps
jae
sub
dec
rolb
mov
xor
fisubrs
jecxz
mov
bound
push
jg
out
sahf
mov
adc
ret
adc
or
lcall
adc
adcb
jo
testb
mov
cmpsl
pop
inc
shlb
push
aaa
and
adc
push
xlat
cmp
fcompl
stc
scas
les
aas
imul
flds
and
pop
ret
pop
jle
int3
push
pop
loop
in
add
test
cli
dec
jo
pushf
pop
outsb
scas
add
stos
dec
adc
fsubp
lret
jmp
sub
xchg
push
sub
add
mov
repnz
rorb
js
mov
mov
sub
cmpsb
cmpsb
jae
pop
arpl
sub
mov
and
or
mov
outsb
or
adc
ds
dec
sbb
bound
xor
sub
mov
insl
jo
or
je
rorb
ficompl
adc
int3
sbb
test
arpl
mov
ljmp
dec
sub
loope
mov
fwait
jo
das
mov
aaa
movb
rclb
aas
daa
int3
cmp
xchg
das
xor
jb
ja
sub
cmp
lret
flds
cli
daa
push
cmp
ret
pop
sbb
xor
test
add
pop
stos
arpl
xchg
inc
sarb
in
sub
iret
jg
in
test
cmp
test
push
add
in
aam
sub
mov
push
lret
mov
mov
sbb
or
lret
fnstenv
movsb
push
ret
jg
sbb
cmpsl
test
out
inc
out
scas
sub
push
clc
in
add
iret
in
dec
or
ja
lret
idivl
lret
sub
cmc
daa
addr16
or
dec
loopne
data16
loopne
jecxz
jmp
lods
jb
and
sub
sbb
std
ja
movb
mov
aam
xor
outsl
lea
push
and
add
andl
daa
fs
push
iret
les
cmpb
test
mov
push
shrl
inc
lcall
and
cs
push
or
out
xor
inc
mov
xchg
add
mov
and
xchg
pop
add
imul
jnp
das
dec
stos
es
inc
das
sbb
pushf
add
push
addps
insl
lret
fbld
int
jo
xlat
pop
or
shrb
xor
jp
pop
fwait
push
sbb
add
loopne
sbb
inc
sub
test
sbb
add
or
push
or
jmp
xor
push
add
lods
sbb
jg
pop
push
daa
int
sbb
push
insl
loop
mov
out
add
jbe
jge
jae
out
sbb
adc
mov
cmp
and
pop
push
mov
lock
xchg
sbb
push
add
and
jp
aas
mov
daa
xor
dec
ror
push
or
pop
adc
int3
and
sub
lods
pushf
push
inc
sbb
and
jae
es
sub
out
repnz
icebp
cwtl
rol
push
jb
sub
xchg
addl
lahf
and
out
cmp
add
mov
push
or
cmpsl
sbb
mov
test
cmpsl
and
arpl
aad
push
pop
cs
adc
dec
scas
mov
gs
cmpsl
mov
das
sub
pop
iret
add
mov
cs
sub
sub
jl
inc
inc
orl
rcrl
jbe
jmp
es
syscall
or
or
clc
mov
clc
mov
stos
sbb
roll
fcoms
and
adc
jb
popa
addb
and
imul
int3
cwtl
mov
lds
sub
dec
xchg
jbe
xor
mov
inc
sbb
aas
ja
push
aam
into
test
mov
xlat
sub
jp
push
pop
cmp
daa
jno
sbb
sub
cmpsl
dec
and
xchg
shll
outsl
test
and
gs
in
xchg
lea
lock
xchg
sbb
xor
out
fisttpll
sub
ret
fwait
addr16
test
lcall
push
push
insb
and
sub
mov
popa
xchg
push
outsl
mov
push
scas
aas
or
int3
and
cs
xchg
adc
fsubl
or
or
rclb
xchg
subb
add
mov
ffree
das
cmpsl
popa
adc
and
inc
loop
js
add
ljmp
or
push
and
gs
addr16
cmp
and
inc
xor
movsl
add
not
add
inc
cli
push
bound
mov
test
ror
mov
xchg
xor
aas
dec
pop
cmpsb
loop
aaa
stos
push
sbb
movsb
sbb
dec
lahf
rorb
mov
push
ret
add
inc
mov
jne
push
imul
sbb
ds
mov
aaa
movsb
xchg
and
sbb
lods
sahf
mov
call
out
add
mov
add
mull
xlat
add
and
sbb
lahf
das
repz
inc
xor
pop
test
ret
mov
cwtl
cmp
mov
mov
or
test
stc
dec
ficomps
ret
pop
adc
stos
adc
and
pusha
loopne
mov
je
lods
scas
les
push
mov
add
pop
pop
push
cmp
nop
add
outsb
jnp
push
out
sahf
xchg
sub
pop
mov
mov
repnz
mov
mov
push
aaa
inc
cld
jne
out
or
jae
and
push
mov
fcomps
jno
sbb
data16
fmuls
jle
dec
vmovhps
xchg
ret
aam
and
or
sub
daa
add
add
push
sbb
jmp
pop
loopne
iret
mov
push
js
mov
or
pop
mov
dec
sbb
cld
scas
jnp
popa
popf
mov
push
mov
mov
int
sbb
mov
hlt
test
jl
insb
xchg
sarb
xor
mov
gs
xor
roll
rcr
inc
daa
add
or
xor
subl
jne
stos
xor
pop
sbb
xor
nop
mov
and
leave
mov
addr16
or
loopne
cmp
mov
xorl
add
jle
adc
stos
jle
movsl
mov
sub
and
loope
inc
lcall
bound
insb
xchg
es
sub
lods
andb
jnp
aaa
addr16
sbbb
or
bound
xchg
adc
mov
add
jbe
push
pop
dec
add
sub
xor
cmp
cmp
outsl
inc
mov
test
data16
loope
mov
ja
mov
pop
arpl
mov
mov
rcrl
add
push
mov
add
sbb
scas
mov
fimull
ja
push
mov
dec
jle
push
int3
das
ret
addl
inc
cwtl
and
fisubrl
cmc
jp
cmp
pop
inc
repz
adc
lods
stos
sbb
add
xchg
insb
push
xchg
pop
sub
add
jne
xor
mov
aas
cmp
pop
mov
cld
and
sub
ror
daa
adc
and
jnp
mov
cmp
sbb
fdiv
mov
sbb
lea
jp
stc
adc
sbb
xor
les
mov
les
aas
shll
mov
mov
sbb
xchg
add
into
push
mov
insb
aad
jl
into
jns
push
jg
in
lahf
push
inc
popa
add
popa
jbe
or
push
cwtl
scas
scas
and
push
inc
sbbl
js
or
cmpl
dec
or
pop
xorb
add
rcrb
lds
ss
test
loope
jnp
xlat
dec
es
js
pop
xor
daa
mov
in
add
in
push
dec
push
out
sub
and
ret
adc
js
cmp
hlt
adc
xlat
xchg
mov
mov
imul
push
cmp
xchg
jle
mov
in
jmp
and
xorb
inc
xchg
jmp
mov
ret
aaa
xor
out
pop
lods
mov
std
lock
lock
sub
mov
out
out
add
add
adc
sub
sub
loopne
insb
push
insb
and
arpl
mov
xchg
mov
push
lea
shl
xor
adc
out
notl
xchg
mov
cwtl
sahf
jne
cli
pop
adc
out
repnz
push
lock
out
scas
cmp
ja
pop
xchg
add
and
xor
xchg
cmp
stos
js
cmp
dec
test
add
mov
mov
lock
ja
mov
aam
adc
mov
pusha
in
mov
add
push
iret
adc
or
mov
stos
add
sbb
aam
pop
adc
in
xchg
movb
fsubrs
ret
xor
shlb
adc
test
gs
sahf
mov
inc
in
and
test
mov
outsb
and
and
pusha
jnp
push
stc
loope
jnp
js
stos
pop
insl
inc
loope
das
test
je
xchg
push
adc
aam
inc
and
inc
loope
mov
dec
or
sar
ss
mov
pop
mov
int
xor
lods
fnstcw
repz
jns
cmp
push
xchg
add
mov
push
test
stos
push
sub
rclb
test
test
adc
mov
shl
and
loop
test
jns
and
push
xchg
lcall
aaa
ss
sbb
clc
push
adcl
fimull
xchg
xchg
data16
arpl
cs
outsb
push
add
mov
popa
loop
push
xor
jecxz
iret
lods
cmp
int3
push
mov
lods
ja
popa
stos
into
mov
inc
pushf
loopne
dec
test
pop
push
and
xor
test
sbb
inc
mov
dec
sub
mov
pop
sub
fcomi
jns
inc
and
sbb
pop
mov
xchg
pop
mov
lods
adc
stos
and
jmp
adc
test
shll
stc
clc
lcall
push
jno
lock
pushf
in
add
sub
leave
sub
pop
pusha
jb
insl
xor
push
es
sbb
fildl
or
ret
rcll
out
push
pop
push
subb
adc
loopne
mov
adc
jno
sub
inc
fwait
push
lret
or
mov
iret
jo
sbb
mov
pop
cwtl
or
int
das
loope
sbb
push
ss
or
daa
mov
xor
and
push
lea
jns
mov
xor
das
into
negb
jae
pop
mov
call
ret
lods
loopne
dec
push
int3
jp
scas
inc
mov
adc
sbb
jl
arpl
enter
gs
add
insb
push
mov
outsl
jmp
js
and
lret
lret
pop
add
jnp
iret
aas
mov
div
lret
sub
les
ret
test
leave
cmp
and
push
lcall
insl
ja
fcoms
jbe
movaps
sbb
ja
push
mov
adc
ja
lcall
int
and
xor
lea
fs
sub
pop
sbb
rcr
ficoms
add
repnz
and
movntq
dec
daa
orl
add
cld
fsubl
jp
dec
dec
add
mov
xlat
orb
inc
and
mov
add
ja
in
es
jle
sub
jge
push
or
add
adc
mov
push
mov
sbb
jnp
lret
pop
rcll
push
clc
mov
jge
dec
sub
dec
sub
and
fimuls
add
icebp
stos
xchg
add
iret
repz
sbb
push
mov
and
inc
mov
add
negl
push
enter
xor
out
icebp
lcall
stos
icebp
fdivs
mov
cs
xor
je
xor
shll
movsb
adc
sub
popf
int
ficoml
das
shl
jg
outsb
push
mov
sbb
aas
mov
imul
ljmp
and
das
pop
cmp
xchg
mov
push
sarl
mov
jbe
pop
scas
adcb
int
mov
mov
fcoms
mov
imul
mov
out
test
push
inc
sub
and
or
sbb
out
inc
push
pop
add
mov
into
sub
jecxz
js
leave
ss
pop
mov
and
icebp
scas
sbb
push
stos
shrl
fs
pop
jo
push
dec
push
icebp
and
shr
xor
mov
pop
pop
mov
jle
aad
les
mov
inc
cltd
jo
loopne
lock
dec
lcall
mov
xchg
cmp
jle
pushf
xchg
push
outsl
movsb
pop
enter
jae
jns
jno
aas
lret
frstor
mov
stos
sbb
imul
out
mov
insb
into
out
dec
ja
fldt
dec
pop
int3
and
ja
sub
popf
sbb
leave
lds
cmp
ror
data16
xchg
mov
fadd
incl
int3
jl
dec
xor
iret
pop
jnp
sbb
push
add
aaa
mov
jg
stc
cmp
sti
loope
sbb
xchg
cwtl
stos
imul
shll
data16
xchg
sub
gs
cmp
xchg
divb
xor
movsb
leave
sub
ds
xchg
add
in
inc
cs
in
add
add
push
clc
add
mov
inc
nop
lods
in
imul
mov
fbstp
cmp
mov
adc
adc
add
sbb
cltd
sub
popl
in
data16
dec
mov
mov
rorb
cmpsb
pop
pop
and
mov
movsl
fwait
mov
sbb
insb
and
xchg
mov
push
imul
adc
rorl
in
jo
inc
mov
popa
add
push
jae
test
ret
inc
sub
xchg
cmpl
xchg
popa
xchg
and
push
in
pop
jge
or
mov
mov
xlat
mov
sbb
xor
mov
movsl
dec
xorl
mov
divl
pushf
add
mov
pop
and
in
adc
inc
xchg
mov
jae
push
in
jge
pop
and
xor
mov
cmp
daa
in
or
loopne
xchg
pop
push
outsb
lea
push
test
test
mov
pop
push
insb
jnp
mov
xor
add
insb
dec
pop
adc
inc
mov
cld
sbb
xchg
mov
xchg
jp
dec
push
nop
jns
addl
movb
dec
addl
pop
out
jecxz
sbb
jle
daa
cmp
jge
jnp
jl
add
xchg
dec
xchg
js
lods
addb
jl
lahf
or
mov
hlt
imul
les
pushf
out
rclb
mov
push
and
adc
push
xor
inc
out
add
dec
inc
rcl
cmp
jnp
add
mov
call
xlat
add
pusha
push
mov
pop
jae
xlat
in
in
xchg
mov
repz
aaa
dec
daa
pop
mov
push
loop
inc
cwtl
push
mov
aad
mov
inc
std
add
je
movsl
jp
lods
and
sub
in
mov
imul
or
pop
cmp
pop
push
outsb
movl
lock
add
adc
cmp
push
ret
mov
fimuls
mov
xor
mull
es
cmp
inc
loope
bound
mov
in
call
or
scas
push
xchg
xchg
jmp
pusha
xchg
sub
jmp
jae
ljmp
ret
cmp
ljmp
jmp
adc
es
cmp
gs
test
or
jg
mov
pop
push
repnz
out
daa
cwtl
mov
push
inc
adcl
sbb
fsubl
pop
test
add
loopne
jge
mov
sub
sub
add
jge
adc
jmp
fwait
mov
testl
movsb
loop
add
mov
repnz
add
add
mull
mov
or
push
stc
into
iret
pop
dec
das
cmp
sti
xlat
push
pop
addr16
popf
adc
xor
das
mov
cmp
jmp
inc
jo
add
push
jo
les
add
lods
mov
sti
or
mov
inc
push
pop
lcall
jo
and
push
shlb
enter
mov
sbb
dec
sbb
adc
and
int
xor
mov
cmp
inc
fists
jp
hlt
add
jae
mov
inc
inc
aam
das
push
jl
ret
es
fs
clc
dec
add
shlb
sub
test
add
popf
cmpsb
add
and
hlt
dec
clc
add
xchg
aaa
sbb
sarb
dec
jne
mov
xchg
cltd
jg
and
scas
mov
bound
dec
dec
or
mov
cmpsl
jg
js
sbb
insl
pop
iret
mov
mov
iret
add
or
test
adc
mov
xchg
mov
dec
inc
aas
outsl
xchg
adc
scas
xor
inc
je
rcrb
lock
std
je
dec
js
pop
mov
insb
pop
aad
dec
ds
jne
nop
fcoms
mov
mov
or
and
mov
adc
cmpsl
pop
add
inc
shlb
jno
xor
into
xor
push
pop
add
add
sub
mov
adc
ds
cmp
inc
or
jno
jle
mov
mov
add
jnp
loop
adc
xchg
jno
jnp
int3
adc
jle
pop
ret
andl
test
mov
mov
and
and
call
aaa
dec
aas
pop
loop
dec
lods
in
call
leave
add
or
xor
adc
inc
fs
mov
popa
push
dec
adc
jbe
adc
roll
int3
inc
pop
jp
xchg
and
hlt
ja
fcoml
arpl
and
out
aad
es
add
mov
sbb
xchg
dec
sbb
sub
xor
adc
xchg
lret
lcall
ret
jne
roll
insb
outsl
pop
xchg
jge
out
sbb
in
dec
and
test
aas
fsubrp
inc
cmp
mov
fs
xchg
push
sub
add
add
fsubp
outsb
adc
pop
cs
pop
xor
shlb
insl
push
push
movsb
mov
xchg
jmp
movsl
mov
sti
add
loop
lds
add
mov
aam
or
sub
dec
cmp
xchg
shll
pusha
sbb
and
jmp
push
xlat
loop
icebp
jnp
mov
dec
and
popa
or
push
inc
push
cwtl
xchg
ljmp
add
lods
inc
mov
adc
xchg
mov
bound
ret
push
sbb
cmp
dec
pop
and
push
test
jnp
mov
outsl
and
jo
mov
xchg
std
lods
jnp
dec
mov
inc
mov
sub
inc
add
pop
cmp
lret
dec
add
xchg
shl
xor
xchg
inc
xchg
call
mov
sub
push
aad
stos
pop
inc
xchg
add
cmp
jmp
roll
jo
loope
push
jne
je
loope
movb
jbe
sub
daa
fnstcw
adc
sahf
or
or
addb
push
sub
mov
sbb
or
mov
hlt
sbb
mov
or
lea
subb
pop
loop
loop
and
das
dec
insb
mov
aam
xor
dec
out
sbb
aad
pop
into
xor
add
call
fidivrs
and
iret
or
es
lahf
xchg
and
mov
ds
inc
push
lock
jnp
mov
call
xor
bound
in
pop
or
fsubs
sub
hlt
mov
and
adc
push
adc
mov
pop
push
jle
add
and
pop
dec
insb
mov
dec
loope
mov
cmp
sbb
pop
inc
add
mov
xlat
inc
popa
ljmp
cmp
cmpb
leave
adc
insl
cmp
imulw
js
or
fcomi
push
ja
jge
pop
pop
es
daa
add
lahf
mov
ds
inc
in
rolb
jb
xlat
movlps
and
xor
mov
inc
adc
hlt
and
into
insl
inc
icebp
push
mov
jb
dec
das
mov
add
add
sarb
push
xchg
rol
push
int3
push
mov
addr16
popf
fstps
jnp
into
pusha
xor
insl
mov
mov
movsl
and
jbe
push
stos
loope
mov
mov
roll
mov
pop
andl
mov
adc
and
inc
push
cmp
bound
lds
push
loop
aam
mov
shll
jle
ret
js
mov
aam
adc
notb
and
das
add
and
xchg
mov
cmp
cmp
fiadds
push
or
mov
adc
fmull
jb
add
dec
jo
sahf
bound
data16
dec
push
test
jle
test
test
cmp
mov
pusha
imul
mov
fs
fcoms
sbb
sbbb
fildll
adc
lds
mov
xchg
into
jp
cwtl
jle
test
daa
add
pop
xchg
xchg
add
loope
fcmovne
ss
insl
fsubs
mov
add
insb
or
inc
js
xchg
jle
jp
rorl
int3
mov
adc
mov
pop
aas
ds
push
je
inc
adc
arpl
jle
call
ja
rcr
orb
jb
push
insb
xchg
sbb
adc
jno
mov
add
mov
pop
pop
scas
jnp
outsb
sbb
sbb
mov
pop
adc
orb
pop
andb
aas
mov
jae
adc
add
popa
mov
inc
mov
or
jmp
popf
ljmp
std
mov
ja
mov
xor
or
aas
in
mov
adc
popf
xchg
es
adc
jle
imul
or
arpl
fisubl
push
into
dec
and
dec
test
imul
lods
jno
arpl
add
mov
add
mov
xor
jae
into
imul
sahf
pop
pop
xlat
and
sbb
iret
xor
and
dec
jecxz
das
and
aad
and
jmp
cwtl
xchg
or
mov
dec
mov
cmp
rorb
xchg
mov
and
flds
cwtl
adc
mov
ss
xor
js
cmpsl
aaa
sub
jns
jbe
iret
adc
pushf
lock
out
in
sbb
into
mov
sbb
cmp
sub
cmp
add
pop
rolb
mov
push
sarl
or
cld
arpl
mov
nop
xor
test
in
jle
movsb
xor
sub
outsb
add
and
inc
idivb
sub
sbb
jmp
or
mov
mov
test
jecxz
rcrb
pop
xor
in
and
push
or
cmp
inc
or
sbb
pop
into
in
push
pop
scas
jno
out
call
adc
mov
xor
fwait
or
xor
and
into
out
xchg
pop
test
or
xchg
push
lcall
jb
clc
push
adc
inc
ja
push
adc
js
mov
dec
or
adc
dec
bound
fistl
add
cmp
or
leave
ret
cwtl
jno
pusha
xor
das
mov
test
add
ljmp
test
ljmp
push
mov
push
test
loopne
test
addl
mov
push
lret
mov
pop
fdivs
push
jge
mov
dec
fsubrp
or
ja
je
push
jge
or
pop
into
sub
jge
mov
sub
or
mov
loopne
clc
loopne
out
ficompl
ret
add
adc
adc
mov
je
into
cmp
xchg
int
pop
leave
xor
mov
pop
jge
ja
lcall
pop
daa
out
sbb
scas
mov
arpl
xorb
fadds
arpl
dec
cmpb
or
dec
arpl
fs
out
stos
inc
jmp
sub
xchg
cmpsl
call
lret
sbb
inc
sub
sub
push
pop
cmp
lahf
int3
out
add
xchg
loopne
add
lahf
sahf
dec
lahf
sbbb
push
mov
or
cmp
popf
popa
add
movsb
and
roll
insb
out
jecxz
or
out
subl
movsb
into
adc
add
and
pop
loope
jo
or
push
test
mov
loope
add
leave
mov
jmp
mov
xor
jecxz
pop
jne
popa
jb
daa
faddp
push
sbb
scas
js
xchg
mov
xchg
mov
add
add
mov
xchg
cwtl
sbb
into
imulb
sub
jns
adc
les
lock
data16
xor
fs
xchg
aaa
scas
mov
adc
xchg
adc
or
mov
imulb
rolb
adc
push
jb
mov
sahf
cmp
add
and
lret
test
jecxz
and
jmp
mov
cmp
cli
xor
mov
xor
jb
pop
pop
push
data16
add
popa
ret
cmp
jecxz
mov
sbb
push
cwtl
add
and
jns
add
fstl
insb
mov
aaa
sahf
xor
dec
loop
and
les
ss
mov
sub
mov
push
pop
or
xchg
xor
push
jbe
pop
push
pusha
pusha
push
adc
inc
lods
imul
sub
add
xchg
dec
cwtl
mul
mov
cs
add
rorl
int
daa
jmp
lods
mov
inc
or
fs
pop
and
mov
xor
push
rcrb
fwait
pop
jge
orl
stos
fisubrs
sub
rorl
mov
hlt
movsb
pop
xchg
push
push
dec
fnsave
pop
push
lcall
xchg
addr16
xchg
push
xor
inc
out
test
mov
push
add
mov
dec
mov
int
jae
cwtl
enter
in
or
fisttpl
jbe
scas
push
bound
adc
push
inc
test
es
fwait
iret
pop
hlt
out
inc
fwait
getsec
imul
test
mov
scas
xabort
test
and
pop
jo
das
iret
fyl2xp1
adc
or
sbb
stos
sub
daa
cmpsb
cmp
jne
mov
cmp
popf
mov
lods
push
scas
xchg
xchg
addl
mov
mov
addl
add
and
cmpsb
dec
cmpsl
jae
sbb
mov
add
mov
adc
mov
sbb
mov
shlb
xchg
lds
adc
outsl
push
xchg
sub
lds
jno
xchg
and
imul
es
stos
push
scas
xor
addr16
push
sbb
pop
popa
test
loop
fstps
shll
add
lea
pop
pop
sbb
data16
andb
jne
je
popf
dec
shll
dec
inc
imul
shlb
iret
push
scas
push
sbb
das
negl
jle
add
inc
gs
pop
adc
add
pop
cs
sbb
loopne
push
and
in
add
cli
lock
sub
or
adc
cmpsl
add
fistl
bound
add
call
mov
sahf
push
and
and
popa
lods
add
mov
mov
es
lcall
test
les
or
adc
xchg
js
fidivl
pop
popf
es
add
pop
into
xchg
jmp
stos
and
fcoms
roll
or
jb
xor
mov
lods
dec
xor
dec
pop
fucom
das
es
adc
add
orl
pop
pop
pusha
mov
pop
mov
scas
mov
push
in
push
popa
ja
stos
ss
stos
or
ss
popf
call
call
xchg
adc
repz
sub
push
outsl
pop
xchg
scas
pop
jl
loop
test
idivl
ljmp
sub
fmul
out
pxor
daa
and
xchg
cmpsl
sahf
jo
add
lret
xor
roll
and
sub
scas
push
arpl
loop
sbb
rclb
das
or
dec
push
jo
adc
sub
pop
mov
and
lahf
faddp
loop
cmp
mov
loopne
pop
lret
adc
jmp
outsl
cmp
add
dec
outsb
pop
mov
mov
shrl
iret
sbb
shlb
fcmovnu
scas
push
inc
add
andb
and
sbb
mov
push
add
orl
dec
pop
daa
cltd
mov
lahf
push
xchg
push
sbb
dec
jp
pushf
mov
mov
adc
fdivl
jp
jp
ljmp
mov
les
mov
into
jmp
adc
ljmp
fldcw
aam
cmpsl
sub
xchg
add
push
insb
fwait
lds
insb
insb
and
outsl
push
jmp
inc
leave
insl
adc
sub
mov
out
int
mov
scas
cmc
and
sub
sbb
pusha
xchg
lock
fistl
inc
fs
das
add
cmp
std
mov
xchg
inc
int3
nop
inc
hlt
push
leave
add
inc
inc
test
pop
add
shrl
pop
test
lods
rclb
icebp
test
pop
adc
mov
in
shlb
add
js
push
out
nop
push
je
inc
cmpb
int3
push
fdivl
loope
xor
sti
sub
cmp
push
dec
daa
sub
jecxz
and
movsb
cmp
add
push
fimuls
and
pop
dec
add
add
movsb
pop
push
push
push
movsl
rcrl
xor
sub
adc
adcb
pop
lea
jne
popf
add
sub
mov
lea
mov
rcll
jecxz
aam
and
xchg
cwtl
sbb
cli
xchg
test
mov
lods
testb
xchg
dec
push
dec
xchg
sub
push
shrb
mov
mov
add
xchg
test
in
jge
bound
movsl
shll
xchg
or
push
xor
or
or
or
je
adc
mov
add
mov
or
inc
leave
out
push
in
adc
shl
loop
push
pop
stos
add
mov
jmp
dec
adc
fs
lret
push
sub
xor
and
cmp
push
es
add
inc
fnstenv
pop
inc
xchg
xor
mov
or
pop
jle
push
sarb
inc
fisubrl
mov
and
add
mov
pop
add
xchg
test
pop
mov
and
into
cmc
ja
and
or
insl
stos
inc
xlat
test
xor
push
pop
ret
xchg
mov
adc
push
push
jo
mov
xchg
lods
push
daa
aam
sbb
xchg
push
daa
lock
xor
push
mov
aam
mov
ror
cs
mull
cwtl
lds
push
mov
xor
mov
movsl
jno
movsb
sahf
lock
jmp
gs
movsb
dec
ja
xor
inc
aad
sub
ret
aas
pushf
mov
mov
cmc
sbb
xchg
adc
cmp
pop
jne
rolb
push
rol
cs
lods
pop
cmp
push
inc
sub
ss
adc
faddl
xchg
stos
shrb
push
data16
xor
pop
fwait
and
sub
int
push
int3
fidivs
pusha
push
or
stc
cwtl
xor
rcr
sahf
test
lods
nop
and
shll
and
mov
push
stc
push
or
jmp
into
push
test
xchg
ret
add
stc
lcall
out
cmpsb
jl
test
nop
popf
mov
cmp
push
fidivrs
je
sti
xchg
iret
dec
dec
and
mov
fisubrl
mov
shll
mov
xchg
int3
test
xor
pop
lahf
jg
mov
test
inc
sub
insl
mov
ret
fcompl
test
movsl
jl
cmpsb
pop
xchg
pusha
pop
push
jb
add
mov
mov
movsl
movsb
add
mov
and
mov
adc
ss
sub
movsl
ror
in
cmp
movsb
xchg
xchg
test
push
xchg
scas
push
adc
inc
xchg
add
xor
jl
add
cmp
xchg
insb
iret
or
aaa
jo
dec
sub
loopne
push
mov
in
sbb
push
mov
xchg
lock
lea
pop
ret
jae
mov
iret
sbb
scas
es
scas
ljmp
push
inc
test
xchg
je
xor
pop
pop
aad
test
sti
and
test
imul
dec
cmp
xchg
adc
cltd
and
daa
cmp
enter
or
stc
pusha
fdiv
inc
mov
les
push
jl
cmp
jl
xor
cmp
dec
pusha
imul
sub
xchg
push
repnz
shlb
xchg
add
pop
int3
xchg
sbb
scas
fs
fcmove
lahf
lods
sbbl
dec
loopne
icebp
adc
aad
inc
pop
aaa
cmc
mov
or
mov
push
inc
test
imul
cmpsb
fmull
jmp
add
iret
imul
xor
adc
jmp
and
dec
xor
mov
sub
pusha
pop
pop
adc
mov
mov
add
add
fidivs
das
cmp
rcll
jp
mov
cmpsb
out
inc
xor
add
push
mov
stos
xchg
mov
xchg
xchg
pop
pop
mov
jnp
orb
add
pop
lahf
in
cmp
push
mov
imul
bound
or
or
inc
adc
xchg
or
and
popa
mov
or
adc
mov
dec
push
adc
xchg
mov
dec
je
ljmp
sbbb
jl
fnstcw
mov
repnz
test
push
pushf
mov
enter
pop
insb
xor
push
and
popa
clc
push
dec
fdiv
or
xchg
push
add
add
hlt
xchg
add
inc
ss
pop
sbbb
and
int3
pop
js
pop
inc
or
pop
mov
clc
push
adc
xor
or
xchg
push
mov
xor
jnp
inc
inc
add
mov
cwtl
movsb
int3
sbb
sub
push
out
inc
mov
xor
mov
stc
add
inc
jns
mov
loope
mov
das
xchg
lods
addb
inc
sub
mov
sub
pop
imul
jl
or
jno
aam
add
pop
adc
int
clc
int
stos
sub
repz
or
mov
ja
jo
mov
jne
pop
scas
dec
add
stos
inc
inc
mov
sub
js
rol
jne
les
imul
test
ret
scas
and
mov
sbb
in
jno
daa
cli
subb
stos
sti
cmpsl
es
bound
jno
dec
fsubrl
fcmovnu
cmp
inc
mov
in
inc
dec
adc
or
addr16
jae
aas
inc
addr16
mov
or
dec
sbb
or
inc
adc
cmp
add
dec
adc
inc
lahf
fimull
popf
adc
push
mov
and
lret
outsb
or
lea
inc
cmc
inc
mov
xor
push
or
subl
outsl
add
or
cmp
outsb
xor
rcll
xchg
lods
mov
xlat
aaa
imul
mov
mov
call
and
inc
xor
jp
les
push
sub
pop
dec
mov
das
mov
cltd
mov
out
adc
jno
pop
jns
push
mov
dec
insb
mov
scas
and
outsl
pop
lahf
xchg
mov
mov
scas
or
or
adc
and
pushf
cmp
add
cmp
test
dec
jmp
stos
push
dec
or
adc
inc
xlat
aad
dec
jle
cmpsl
mov
movsb
jbe
adc
pop
xor
add
push
add
adc
bound
mov
push
fmuls
and
pop
pop
jmp
sbb
mov
xor
mov
outsb
sbbl
cmc
rcrl
clc
mov
enter
add
iret
sbb
jg
les
ja
dec
js
and
dec
inc
movsl
fdivrs
lret
mov
jg
mov
inc
inc
das
pop
movb
fcmovnbe
xchg
roll
ja
inc
daa
cmpsl
aaa
pop
roll
rcrb
cmp
bound
push
in
stc
iret
add
cmc
push
xor
adc
inc
cmp
cmp
add
add
inc
mov
icebp
mov
mov
movsl
sbb
mov
mov
pop
pop
dec
js
int
adc
add
scas
push
mov
ficoms
pop
add
rcrl
and
xor
in
sub
dec
and
sahf
insb
loope
adc
aas
or
pop
int3
sub
aas
add
cmp
mov
test
add
jmp
sub
cld
adc
je
mov
pusha
cli
dec
dec
adc
fsub
push
cmp
mov
mov
jbe
jp
daa
and
push
ret
push
fcoms
sub
adc
jo
cmp
mov
inc
sub
je
lock
add
in
loopne
cmp
lock
sub
es
mov
out
fdiv
inc
aad
sbb
xor
lret
jge
or
mov
loopne
mov
call
inc
std
jp
enter
inc
decl
lods
test
pop
test
std
add
inc
cs
mov
mov
mov
out
scas
pop
add
into
mov
call
jl
and
repnz
aad
pop
fadds
and
xchg
mov
adc
das
mov
bound
pop
inc
sbb
rcll
repz
pop
in
pop
pop
hlt
sub
pop
lcall
lds
mov
cld
push
dec
and
rcrb
je
and
xor
nop
add
jp
cld
fldl
orb
out
xor
or
ret
add
setg
mov
out
adc
cltd
fstpt
pushf
jnp
adc
fadds
lret
or
xor
adc
pop
xor
rcr
cwtl
push
in
jg
jne
xor
iret
xor
xchg
cwtl
or
dec
push
int3
mov
push
adc
dec
sbb
pop
imul
ror
fimuls
cli
mov
mov
add
int3
jle
inc
sub
sub
stos
push
cmpsl
ja
add
inc
dec
or
jo
setb
add
fadds
push
push
shlb
sub
out
test
inc
mov
push
fwait
xor
inc
lods
insl
nop
cli
mov
and
imul
cmp
add
idivl
cs
ja
icebp
jecxz
pop
add
daa
lret
mov
or
je
xor
cwtl
or
ss
cmp
and
test
mov
and
push
sbbb
js
push
push
cmp
in
and
pop
adc
leave
push
sub
xor
push
jmp
and
pusha
push
movsl
fadd
out
fidivs
ret
sub
xchg
rcll
mov
xchg
test
add
imul
mov
and
jge
add
or
cwtl
rol
fsubrl
ror
mov
and
or
js
push
arpl
push
sub
add
add
mov
ret
add
call
shll
test
lds
ss
inc
loopne
xor
adc
daa
mov
push
cltd
test
out
push
mov
jg
dec
mov
add
lock
push
das
popa
icebp
lds
cmpsl
xchg
lds
data16
xchg
fldt
mov
test
js
adc
adcl
aam
scas
add
stos
fsubrs
leave
int3
push
pop
adc
pushl
data16
lods
fadds
adcl
jge
cs
jecxz
loope
andl
mov
sbb
inc
xchg
mov
pop
add
test
cmpsl
in
push
daa
gs
lds
stos
cmp
add
add
push
aaa
mov
and
test
mov
xchg
push
or
lods
pop
in
sub
mov
iret
fstl
clc
sti
dec
aad
fldcw
xchg
insl
add
push
test
push
mov
scas
pop
daa
lods
das
outsl
sbb
mov
sbb
jbe
push
or
arpl
icebp
lods
loope
adc
sti
pop
push
leave
ljmp
and
iret
js
push
xor
pop
imul
jne
mov
inc
and
es
out
add
and
rorl
mov
push
sbb
idivl
insl
add
daa
inc
jno
lcall
push
mov
push
xor
sub
add
es
adc
mov
cli
inc
dec
cmp
cmp
dec
cmp
jno
and
mov
or
lods
js
pop
add
mov
xor
andb
and
mov
andl
cltd
adc
jae
iret
scas
rorb
xchg
add
rcr
cmc
shlb
lock
cmpsl
mov
outsb
cwtl
mov
notw
mov
ja
shll
and
int3
sbb
lcall
or
sub
cmovg
aad
cmpsb
dec
pop
cmp
bound
push
test
mov
test
adc
sti
mov
adc
cmpsb
fmull
push
out
lahf
sub
inc
in
cmp
add
dec
inc
xor
test
cmpb
div
pop
rorl
push
ss
aad
xchg
cli
fdivl
xor
pop
sub
mov
outsb
push
popf
shrl
dec
inc
push
test
push
lcall
sbb
add
xor
adc
mov
inc
adc
and
xor
js
jl
push
and
mov
add
xchg
cmp
dec
dec
mov
mov
push
xchg
pop
test
jno
adc
orl
loopne
push
adc
xchg
sbb
push
out
fdivrs
push
mov
mov
hlt
sbb
sbbl
add
mov
iret
lret
inc
ds
insb
add
push
adc
mov
pop
mov
xchg
adc
orb
aas
imul
inc
sbb
test
je
insb
inc
lock
rcrb
fidivs
rcrl
jl
or
push
jo
mov
push
rorb
cmc
fs
inc
or
cmp
shrb
sub
dec
cld
push
add
int3
adc
and
inc
push
loope
xor
cld
iret
push
inc
push
rorl
out
mov
aam
push
fbld
sub
fdivl
xlat
jo
adc
pushf
sub
out
roll
ja
enter
orl
mov
js
sub
or
enter
mov
inc
and
loopne
mov
xchg
adc
or
aad
inc
mov
insl
or
in
rdtsc
pop
ss
sbb
cli
psubb
cmpsl
add
int3
and
and
mov
and
cmp
push
adcb
adc
scas
fldcw
push
adc
pop
push
pop
clc
mov
jae
das
jns
sbb
sbb
aad
cmp
lcall
iret
cmp
ljmp
movsl
out
and
cmp
outsl
scas
adcl
pop
fcomps
ss
out
jmp
test
cmp
xchg
push
push
pop
inc
mov
and
fisubs
jle
scas
jb
mov
xchg
lds
mov
mov
inc
xor
adc
icebp
adc
les
adc
xchg
inc
enter
push
mov
roll
push
shll
adc
or
push
jno
pop
sub
inc
lock
ds
or
xchg
sub
ljmp
mov
leave
and
addl
cld
stos
mov
lods
pop
mov
cmpl
cmp
pop
mov
iret
mov
sbbb
lds
shlb
adc
xor
pop
pop
pop
push
mov
xchg
loope
adc
adc
jle
add
les
or
insb
jne
cmpsb
int
bound
or
push
pushf
int
dec
scas
inc
andl
lods
loopne
add
fsubrl
inc
mov
mov
out
popl
or
test
nop
jl
dec
sub
jl
jae
mov
add
je
xor
pusha
inc
xor
jmp
cmp
loopne
or
dec
mov
push
mov
loop
sbb
aas
loop
dec
add
shr
jb
jge
adcl
xchg
mov
fsubrl
jne
and
outsb
cmp
add
sbb
dec
outsl
inc
mov
inc
mov
in
inc
fiaddl
mov
incb
in
ljmp
pop
and
and
mov
pop
add
and
out
jbe
jo
sub
add
sbbl
and
inc
add
lea
and
cmp
xchg
int3
push
xchg
cmp
sbb
sbb
push
jb
in
in
jno
adc
add
adc
scas
mov
add
std
pop
rolb
pop
adc
icebp
test
test
shll
mov
jmp
aam
cmp
bound
js
inc
hlt
out
or
cmp
fldt
test
lods
add
insl
inc
pop
dec
or
jge
imul
ja
mov
xchg
sbb
pop
jno
mov
test
fisubl
dec
lahf
test
jae
dec
stos
add
aaa
shll
ret
loopne
xchg
sub
js
xor
repz
xor
jmp
cmpsb
imul
add
xchg
stos
flds
pop
ja
xchg
leave
and
inc
add
add
adcb
dec
les
and
cmc
mov
mov
or
inc
push
xor
ret
fidivrs
sahf
and
jne
and
jo
adc
adc
cmp
xchg
arpl
push
flds
push
inc
or
or
jb
mov
in
mov
ja
sbb
movsl
movsb
mov
dec
xchg
mov
add
sbb
or
int
dec
cmp
hlt
fcom
aam
push
inc
outsb
or
jb
xor
add
js
js
cs
dec
cwtl
sub
adc
add
rcr
pop
subl
sbb
push
and
mov
movsl
test
add
or
inc
test
mov
push
mov
adc
sub
fdivrl
outsb
cmpl
ljmp
stos
iret
mov
add
xlat
test
bound
or
ljmp
cs
jp
jo
cmp
and
inc
jl
fsts
pop
xor
xor
mov
mov
jns
push
xor
xchg
pusha
add
in
mov
mov
adc
clc
adc
orl
pop
popf
fdivs
sbb
mov
and
sar
push
mov
inc
jb
sbb
mov
add
jns
mov
loope
jno
sbb
sbb
cmpl
jbe
loop
sbb
or
idivl
and
lods
fs
cld
mov
mov
notb
push
ret
lods
js
or
loopne
sbb
sbb
mov
xchg
adcb
mov
sub
lods
fisttpl
or
inc
ss
sbbl
rclb
sub
push
clc
push
shlb
lock
sub
movsb
xchg
sub
lods
and
mov
loop
scas
clc
repz
adc
ficoml
rolb
iret
pop
mov
ret
outsl
add
je
loopne
and
popf
push
shlb
mov
and
mov
aam
mov
aaa
out
das
jno
subb
loope
lock
add
dec
lret
mov
jmp
movsb
adc
push
mov
sbb
xor
nop
and
lods
mov
aam
sti
test
pusha
inc
aad
cmc
and
test
jmp
jle
jnp
das
popf
dec
inc
sub
scas
cmp
mov
jo
mov
jb
push
pushf
mov
incb
ret
sub
das
inc
rcl
adc
dec
adc
sub
jae
xorl
bound
xor
mov
push
arpl
cmp
inc
jo
pop
call
xchg
push
ss
mov
pusha
or
inc
xchg
sbb
cmp
fwait
subl
jl
add
jb
mov
jae
fildll
or
ficomps
xchg
loop,pt
mov
adc
add
and
or
and
add
and
and
es
mov
fistl
jo
cmp
pusha
lahf
and
mov
mov
jl
js
addl
iret
mov
dec
inc
xor
lods
dec
inc
inc
add
push
sub
rolb
pop
and
shrl
mov
fcmovne
sub
mov
lret
xor
fstps
and
and
mov
ret
adc
je
dec
lods
pop
aas
test
add
and
jl
xor
loopne
mov
add
aas
sbb
jmp
add
iret
cmpsl
outsb
push
shll
pusha
add
pop
jecxz
and
add
push
outsb
inc
roll
insb
and
adc
sub
jne
mov
mov
sbb
xchg
sbb
popf
push
and
and
sub
adc
clc
lods
push
test
stos
inc
scas
inc
or
mov
subps
lods
xchg
imull
mov
aam
shl
sub
push
cmpsl
js
out
jno
xchg
je
xor
pushf
and
xorb
pop
adc
xchg
and
out
jbe
or
adc
ret
sbb
popa
dec
gs
ds
sub
xorl
jo
sbb
test
add
ja
movb
lods
cmp
add
xor
dec
or
lea
cs
jbe
cmp
ret
fcomps
or
xor
insl
mov
addl
loopne
add
andl
xchg
dec
sub
jl
jae
pop
mov
add
inc
sub
pop
scas
cli
pusha
jp
leave
scas
xchg
aaa
push
shrb
rcll
popl
jns
add
out
lea
out
outsb
rclb
es
xchg
and
dec
jbe
cmpsb
jo
inc
jae
test
stos
test
or
pop
hlt
movsb
and
and
mov
addb
pop
dec
cmp
js
and
xor
add
cltd
daa
sbb
pop
cmp
and
imul
andb
roll
out
pop
mov
push
test
fwait
xor
and
add
mov
shl
jno
mov
andb
or
pop
rcrl
popa
rorl
das
push
push
mov
push
cmp
pop
aas
and
mov
cmp
shr
push
outsl
and
shrl
push
shlb
addr16
dec
lods
das
pop
adc
cs
add
cmp
daa
fisubrs
je
shrb
mov
add
fdivs
push
lds
cli
scas
add
jno
scas
das
push
loop
xorb
iret
fwait
jbe
shl
outsl
xchg
push
dec
adc
shll
sbb
inc
ja
adc
push
fiadds
mov
inc
lods
push
jne
les
push
fildl
sub
push
adc
adc
aad
out
push
mov
mov
stos
fisttpl
add
lods
push
adc
xchg
scas
mov
lods
jb
cmp
in
push
rcl
hlt
push
sti
push
loopne
in
outsb
fcmovnu
lods
jne
sbb
jle
stos
das
adc
dec
lock
push
lods
sbb
and
jnp
sub
call
int3
outsb
cmp
add
add
pop
mov
mov
movsb
sub
cmp
push
sub
fwait
int3
movsb
int3
or
repz
dec
cltd
popw
in
fisttpll
das
xor
push
scas
data16
sbb
lock
xchg
dec
cmp
jbe
addl
fistpl
es
push
jle
and
call
inc
pusha
scas
stos
insl
sbb
cmpsl
icebp
mov
and
outsb
inc
or
jmp
add
mov
dec
mov
scas
cmpsb
xlat
popa
lret
std
iret
push
push
adc
cmp
sbb
ljmp
inc
jae
dec
in
int3
rcrl
inc
mov
scas
sbbl
jge
xchg
sbb
insl
sti
add
enter
sub
and
adc
test
push
xor
jb
inc
jmp
pop
imul
inc
mov
sub
lods
sbb
ss
and
adc
cmp
adc
adc
jb
pop
loope
sub
mov
pop
test
pop
cli
bound
scas
ja
xor
pop
dec
xchg
add
xlat
fdivl
imul
nop
cwtl
and
mov
pop
push
cltd
pusha
pop
add
pop
insl
sti
jecxz
adc
iret
push
sbb
mov
mov
push
sub
xlat
jne
bound
cmp
xor
add
jmp
push
and
std
lods
xor
sarl
inc
xchg
ds
jbe
sub
pop
push
push
xchg
dec
add
insl
mov
aad
sbb
xor
jns
jne
lock
aaa
push
fsubrl
not
scas
cmp
cmp
mov
push
sub
push
jp
jo
mov
push
cld
aaa
push
mov
sub
gs
das
movsb
pop
push
sub
xlat
cmp
in
push
lods
in
inc
inc
add
push
lea
and
das
mov
insb
or
outsl
or
repnz
mov
mov
mov
fs
dec
dec
cmp
dec
jge
jg
jnp
out
popf
inc
je
or
add
and
mov
mov
and
cmpsl
or
cs
or
xchg
popf
ficomps
sub
add
scas
cmc
or
mov
jno
shr
lcall
mov
loope
fnstcw
add
mov
pop
out
jne
push
mov
loope
xchg
sub
fdiv
les
or
push
adc
inc
nop
pop
cli
mov
loop
inc
mov
inc
push
push
inc
andb
sarb
adc
shll
stc
stc
int3
jbe
and
cmp
inc
pushf
incb
cmp
sub
sarb
pop
test
pusha
into
je
fisttps
fisttpll
sbb
push
push
mov
xchg
cld
nop
addl
fsubr
and
inc
jle
addb
xchg
movsl
cmp
jnp
scas
jns
loopne
add
cwtl
xor
stos
or
fiaddl
push
cmp
push
mov
adcb
or
es
mov
pcmpgtw
or
adc
mov
std
icebp
mov
mov
insb
sub
cli
nop
mov
mov
or
out
push
inc
sbb
addr16
fsubp
adc
ja
pop
es
push
movsb
or
lods
fildll
xlat
insl
sbb
mov
add
mov
mov
addr16
mov
lsl
sub
les
pop
jb
and
dec
insb
ret
clc
and
push
add
add
xor
jle
xchg
lcall
mov
popf
xchg
repz
loope
or
push
int
and
and
sbb
adc
push
and
dec
fwait
rcll
cmp
mov
pop
mov
movsb
mov
mov
ja
sub
mov
pop
pop
push
cmp
std
sub
mov
sbb
jbe
movsb
add
aam
addr16
mov
xchg
jns
push
lcall
push
popf
subl
xchg
mov
fucomip
data16
dec
push
cmp
fadds
out
xchg
push
popf
mov
sti
dec
fucomp
push
mov
loopne
xchg
xor
dec
leave
mov
dec
and
cmp
fwait
rorl
or
test
adc
mov
dec
xor
add
add
das
js
movsb
xchg
icebp
or
xor
push
pop
push
in
jnp
les
sbb
sbb
and
sub
sbb
and
fwait
repnz
mov
insl
enter
jl
fmuls
lods
jae
and
jb
scas
and
mov
js,pt
add
dec
push
inc
push
arpl
loopne
inc
and
pop
jbe
push
mov
shlb
ja
int
push
ja
mov
idivb
or
and
pushf
xchg
or
pop
shll
xlat
imul
mov
jbe
jo
jns
push
adcl
jge
sbb
das
jne
jbe
jle
rol
dec
jecxz,pn
push
push
fldl
daa
mov
inc
xor
push
icebp
push
jo
mov
fwait
icebp
cs
ret
mov
push
sti
ss
adc
mov
in
sbb
lods
dec
sbb
add
out
mov
xor
jae
mov
pop
cmpsl
int3
aad
cmp
xor
xor
test
xorl
jbe
pop
mov
sub
ret
sub
test
pop
addr16
add
arpl
scas
cli
dec
into
stos
mov
lods
xor
adc
push
add
push
adc
add
xor
push
fs
add
xchg
fwait
inc
pop
lcall
inc
sub
cmp
aam
repnz
pop
inc
sub
int3
inc
and
call
fnstsw
push
cmp
adc
lret
test
imul
mov
divl
jl
adc
sub
xlat
push
dec
adc
sub
mov
mov
pop
int
sub
test
add
lods
in
mov
or
mov
lea
adcl
lods
or
or
mov
pop
orl
pop
and
or
jne
push
popf
dec
and
dec
sub
bound
cmp
dec
pop
lds
clc
xor
add
mov
pop
lds
pop
aas
cltd
call
sub
add
lcall
pop
adc
lock
jp
pop
insb
repz
stos
xor
jecxz
or
sahf
loop
mov
add
jo
fdiv
sbb
out
dec
inc
jg
loope
loop
mov
repz
test
icebp
cmp
out
sbb
mov
leave
mov
or
aad
mov
mov
or
aas
repz
push
rorb
push
push
push
bound
cmp
sub
sub
lods
nop
fsubl
ss
cs
divb
js
and
leave
test
jae
push
lds
scas
push
mov
and
jbe
mov
lret
lds
jbe
mov
push
loopne
movsl
xchg
loop
sub
cmc
push
out
mov
mov
insb
lods
add
jl
mov
push
xchg
and
jb
js
movsb
and
pop
add
loopne
or
push
mov
addr16
out
xor
nop
sub
inc
aam
xor
xorb
push
lds
jno
pushf
imul
aad
push
mov
push
xchg
xchg
cmp
daa
jge
sbb
stos
dec
jl
add
loope
lahf
xor
jns
add
jo
add
add
fsts
subb
adc
adc
and
add
dec
fstp
xor
mov
push
call
cmp
mov
add
subl
dec
shlb
xchg
and
adc
mov
push
jle
add
sub
sub
scas
scas
add
out
shll
jl
mov
les
fwait
ret
int3
mov
mov
jnp
bound
sub
sbb
adc
out
aas
jbe
imul
jecxz
call
pshufw
xor
xor
fsubrs
loope
push
add
inc
jne
je
fnsave
data16
popf
push
xchg
jae
inc
int3
and
shlb
inc
sbb
pop
ja
je
sub
icebp
jno
and
push
jno
and
push
adc
mov
aaa
xor
sbb
repz
fst
and
mov
dec
stos
mov
mov
pop
cmp
std
aaa
insb
loop
or
adc
dec
cmpsb
push
int3
scas
rolb
and
xchg
movsb
mov
adc
adc
adcb
addb
sbb
mov
fisubrs
stos
push
push
fbstp
and
js
add
shll
jbe
arpl
xchg
fimull
jmp
adc
sbb
pop
jnp
mov
idivl
sbb
dec
dec
and
pusha
int
pop
jle
and
mov
inc
das
pop
or
orb
pop
mov
orb
sbb
andb
ret
dec
rclb
inc
roll
push
or
lcall
mov
add
cmc
pusha
es
push
jbe
dec
arpl
or
push
jle
mov
test
or
les
outsl
mov
mov
cli
sub
mov
sti
int
xorb
iret
aam
test
jecxz
cmp
js
xchg
dec
addb
call
jmp
inc
cltd
outsl
movsb
sub
or
add
dec
cmp
inc
lock
sub
ret
jno
pop
jno
add
or
push
shlb
and
and
punpckldq
scas
ds
std
aad
ret
and
pop
mov
aad
call
jb
lock
add
int3
jne
add
mov
and
sub
or
ret
lds
les
or
and
insb
into
jg
scas
inc
test
inc
push
or
scas
ja
stc
xor
pop
out
xor
stos
xor
pop
dec
inc
shll
fisubs
push
lea
divb
adc
inc
jmp
inc
or
subl
iret
ret
icebp
jp
inc
xchg
iret
repnz
pop
sbb
sub
addb
sbb
inc
pusha
dec
sub
frstor
inc
sub
sub
out
sti
dec
xlat
out
push
in
pushf
push
jle
test
or
adc
mov
or
add
insl
adc
test
out
test
shrb
adc
dec
repz
mov
ss
iret
push
lods
mov
add
inc
and
int3
les
loop
lock
iret
inc
scas
jle
xor
bnd
sbb
jg
pop
xor
jae
xor
xor
ret
rep
push
in
inc
mull
pop
in
push
int
mull
dec
add
mov
inc
addl
ret
pop
cwtl
fidivl
push
sbb
adc
pop
es
and
data16
mov
into
dec
test
or
ret
sub
add
fiadds
and
inc
sub
cmp
cmc
iret
not
int3
and
or
add
and
mov
bound
mov
int3
xor
data16
push
sub
inc
adc
cmpsb
add
pop
stos
sbb
mov
fisubrl
mov
push
cmp
sbb
fmull
xlat
and
dec
xor
loop
sub
pop
iret
in
jne
push
bound
sahf
pop
dec
and
stos
pop
shlb
repnz
jb
mov
loop
mov
icebp
sub
test
xor
push
shrl
sbb
xchg
xchg
dec
or
push
add
pop
sbb
loope
mov
sbb
sbb
pop
pop
in
mov
mov
mov
divl
add
shll
pop
aam
dec
sahf
mov
fs
bound
adcl
test
popa
pop
inc
test
and
sbb
inc
mov
adc
adcl
stos
cmpsl
or
mov
xchg
inc
sub
or
inc
inc
xchg
les
aaa
ret
xor
xlat
imul
adc
jmp
xchg
fbstp
cmp
push
adc
jp
push
cmp
mov
call
inc
adcl
push
sub
popf
aas
mov
sysenter
inc
xchg
das
xor
inc
je
inc
mov
mov
xchg
push
mov
xchg
add
pushf
cmpb
inc
mov
or
pop
sbb
inc
je
ljmp
ret
dec
sbb
add
lods
add
shrb
xor
jns
fmuls
cmp
imul
mov
pop
xor
mov
test
icebp
adc
mov
loopne
sbb
fs
mov
push
pop
popa
dec
adc
push
jge
fwait
je
add
inc
das
dec
bound
sti
les
mov
inc
outsb
inc
test
sbb
sub
sahf
sahf
xorb
xlat
mov
jns
mov
inc
xchg
fmul
fisttpll
sbb
cmp
add
mov
adc
es
pop
in
arpl
cli
lds
call
inc
jbe
sti
out
xlat
mov
pop
add
mov
pop
cmp
cli
int3
and
jnp
pusha
ret
les
or
test
dec
xchg
popa
pop
or
addr16
bound
inc
mov
cli
adc
cmc
mov
push
lock
cmpl
call
and
mov
mov
xchg
mov
cmp
es
xchg
pop
mov
mov
lds
mov
js
dec
ret
pop
jno
pop
sub
adc
mov
mov
fsub
pusha
xor
add
push
and
push
adc
pop
insl
aam
das
mov
sub
jl
or
pop
mov
arpl
mov
mov
data16
xchg
sarl
xchg
shll
jl
xchg
add
inc
bound
jl
mov
inc
and
push
adc
pop
inc
sbbl
scas
sbb
cmp
stos
push
test
and
inc
pop
sti
out
push
pushf
dec
pop
jbe
add
mov
add
push
fsubl
jns
xchg
imul
cmpb
add
ss
cmp
and
roll
test
push
cld
xchg
dec
sub
iret
ljmp
scas
push
sbb
ret
inc
and
daa
movb
adc
xor
arpl
mov
or
jo
loop
jg
add
lret
fisubrs
xchg
outsl
lret
aas
adc
ret
mov
sbb
pop
mov
and
xlat
jge
mov
adc
xchg
outsb
idivb
js
xchg
stos
adc
les
mov
outsb
add
dec
xchg
cmpsl
incb
enter
and
movsl
and
fsub
mov
icebp
add
iret
mov
rorb
inc
loopne
add
xchg
jnp
insl
sbb
imul
jae
sbb
int3
es
dec
scas
dec
aaa
test
sbb
pop
pop
add
std
add
dec
and
fchs
mov
jns
xor
and
mov
mov
xchg
iret
imul
dec
push
adc
loopne
int
arpl
lock
add
sbb
popf
je
enter
xchg
inc
jecxz
mov
dec
cmpsl
mov
xchg
sbb
sub
ds
notb
ficoml
int3
js
adc
test
add
das
push
mov
js
sbb
sub
sub
fs
adc
jge
inc
dec
sub
std
jne
arpl
subb
push
ss
mov
rcll
orl
dec
push
push
push
loopne
loope
xchg
test
sub
add
push
mov
fisttps
mov
cmp
mov
or
xor
or
es
adc
jo
xor
jecxz
outsb
ret
ret
add
push
xor
push
mov
lods
push
stos
and
jo
mov
in
add
mov
pushf
pop
enter
xor
and
fsubl
pop
subb
or
cmp
inc
test
sub
add
js
adc
sbb
add
or
loop
adc
aaa
es
cmp
fsubrs
adc
or
sti
jno
adc
cmp
scas
cmpsl
or
roll
inc
or
in
adc
lahf
push
mov
ja
mov
jg
scas
lods
xchg
call
mov
fwait
in
pop
bound
inc
mov
das
orb
mov
inc
pop
mov
dec
ret
cli
cmp
imul
sub
sbb
sbbb
mov
jno
pop
lret
scas
or
movsb
mov
pop
xchg
inc
test
mov
ja
push
mov
ficompl
es
adc
lahf
lret
add
test
lahf
sub
popa
sbbl
and
push
adc
jns
sub
lds
mov
es
add
add
adc
mov
add
and
js
repz
or
and
pusha
inc
mov
mov
or
inc
int
fsub
push
adc
test
inc
fmull
pop
jecxz
add
inc
xor
cwtl
addr16
or
lea
adcb
mov
ss
aam
daa
fiadds
pusha
subl
pop
xor
adc
sbb
pop
insl
popf
cmp
scas
orb
divl
test
push
dec
call
ja
mov
adc
cmc
shll
rcrb
pusha
adc
mov
xchg
sub
shlb
imul
push
mov
loope
sub
addr16
mov
sti
sahf
orb
add
inc
stos
jg
sub
cmp
sbb
popf
adc
dec
int
idivb
popf
add
insb
inc
fnsave
sub
sub
cmp
mov
andl
or
push
or
out
mov
mov
insl
popa
inc
hlt
js
adc
test
ss
xor
cmp
push
ror
loop
inc
pop
xchg
sbb
push
pop
adc
adc
sub
pop
sarb
cmpsl
jmp
sub
push
nop
push
stos
xchg
sbb
pop
adc
push
rorl
and
popa
lret
in
stos
ss
jl
xchg
ljmp
xor
repnz
dec
and
jne
es
xchg
xchg
popf
mov
loop
inc
inc
or
dec
or
pop
lahf
or
mov
jle
cmp
inc
lods
fsts
mov
xorb
add
fisubs
daa
mull
stc
adc
loopne
pop
out
sub
cmp
adc
orl
sub
bound
push
decb
or
divb
mov
xchg
mov
add
cmp
or
aaa
in
iret
cwtl
add
leave
sub
test
sbb
jl
push
add
pop
je
sbb
in
jp
mov
div
mov
inc
movsl
sub
andl
ljmp
sub
mov
cmovb
jmp
xchg
cmp
and
orb
xor
lock
push
test
cmpsl
ret
scas
jp
sub
dec
mov
loop
out
popl
push
xchg
test
pop
cmp
cmp
push
mov
adc
aam
fst
hlt
jbe
aam
shlb
xlat
popf
push
sbb
and
pop
xor
dec
subb
cmp
mov
fimuls
loop
xchg
inc
or
arpl
jbe
shlb
jo
fs
sbb
int3
push
mov
xor
pop
dec
stos
inc
ret
xchg
xchg
ret
push
push
roll
inc
xor
and
push
jle
fiaddl
sbb
inc
cli
jnp
repnz
callw
push
das
mov
loop
pop
xchg
clc
add
pop
adc
and
data16
push
ds
lods
dec
test
ss
sub
aad
xchg
sbb
sub
cmpb
ja
hlt
test
pop
dec
xchg
or
jg
dec
inc
out
inc
aas
mov
pop
dec
push
inc
or
inc
and
or
jle
sub
xor
daa
xor
sahf
lea
idivb
mov
je
push
sbb
add
test
push
add
test
sub
pop
add
stos
sub
lret
inc
mov
sbb
cltd
addb
mov
test
inc
lret
and
shll
dec
inc
aam
cmp
inc
fucomip
aad
mov
sbb
dec
cwtl
aam
mov
push
cli
or
movsb
js
xchg
cmp
xchg
dec
inc
aam
cmp
insl
outsl
lock
pop
lcall
or
xlat
jo
mov
xchg
ss
jno
jl
add
push
das
adc
sbb
iret
push
pop
or
inc
cmp
inc
addr16
mov
mov
inc
inc
ja
lahf
pusha
sbb
pop
add
adc
sbb
pusha
test
inc
cmp
jo
inc
push
iret
mulb
or
adc
int
pop
aaa
mov
pop
or
pop
add
or
push
mov
sub
inc
subb
adc
xchg
ret
lods
mov
in
inc
shr
sub
push
cmp
or
xor
fwait
call
or
dec
xchg
cmp
loopne
push
jmp
mov
push
adc
pop
mov
int3
pop
inc
aaa
fildl
fs
sub
push
mov
and
pusha
sahf
movsb
shlb
movaps
adc
mov
push
and
cmp
lods
lock
sbb
jo
lods
or
xchg
push
sbb
push
int
insb
sub
gs
and
sti
aas
sub
cmp
cmp
sub
pop
popa
fsubs
mov
rorb
test
or
iret
stos
lret
xchg
add
mov
and
fwait
mov
in
je
pusha
add
fwait
lea
pop
je
pop
push
mov
insb
adc
loopne
xchg
mov
insl
and
push
lds
pop
out
mov
pop
adc
mov
xchg
inc
push
sbb
int3
add
push
cmp
das
mov
push
ret
mov
or
and
cmp
xor
add
mov
mov
and
add
or
cmp
popa
or
fwait
xor
sbb
xor
dec
pop
xor
or
loope
xchg
add
std
sbb
pushf
mov
inc
jae
cmp
lcall
xchg
or
jns
sub
xor
inc
nop
mov
or
rolb
mov
inc
in
and
popa
jne
mov
xchg
cmpb
inc
andw
mov
mov
clc
inc
lret
mov
aam
out
cmp
mov
jl
aaa
daa
and
xchg
add
mov
lods
cli
mov
pop
out
std
cltd
pop
sub
xchg
push
add
inc
xor
dec
loopne
adc
adc
cmp
push
or
mov
dec
xchg
jb
mov
add
xor
pop
sarb
arpl
jbe
sti
nop
fcmovnu
xor
lods
inc
add
or
rcl
push
jns
add
in
fcoml
and
nop
sti
inc
pop
and
loope
push
add
push
rclb
stos
sbb
and
test
fiaddl
icebp
and
ss
cmp
and
mov
arpl
dec
les
sbb
pop
fsubrp
jl
jo
cli
daa
dec
sub
test
sbb
mov
icebp
int3
mov
movsb
testl
xor
sub
mov
aaa
push
cmp
cmpb
push
sub
add
daa
xor
xor
popa
sub
dec
xchg
fistps
sbb
stos
adc
pop
in
cmpsl
or
loopne
mov
push
add
jecxz
fbstp
jg
hlt
fadds
jae
lahf
pop
mov
push
sub
daa
and
dec
and
sbb
sub
stos
test
rclb
aas
shlb
push
cwtl
mov
mov
mov
fs
es
lods
and
test
inc
mov
mov
inc
outsb
jle
iret
jmp
rcrb
jne
pushf
mov
or
mov
mov
jmp
jle
in
ja
arpl
arpl
sbb
cli
add
pop
es
movsb
push
push
dec
loope
mov
sahf
insl
pop
sub
and
add
bnd
pop
xor
shrl
je
xor
popa
push
sbb
lsl
push
ss
sbb
dec
or
dec
pop
mov
mov
add
jecxz
add
jo
and
adc
aaa
sbb
sbb
mov
adc
lods
vpunpckhdq
mov
lock
sahf
orb
pusha
dec
xchg
andl
call
sub
sbbb
sub
sbb
sub
mov
mov
movsb
call
xchg
and
or
pop
popa
imul
out
push
out
imul
imul
push
or
mov
inc
les
mov
mulb
nop
cmp
loopne
xor
mov
pusha
sub
and
adc
icebp
push
icebp
dec
and
inc
ret
pop
repz
addl
and
or
xor
add
xor
dec
xchg
push
lret
push
inc
xchg
mov
jnp
mov
lea
inc
inc
and
lcall
adcb
mov
ljmp
ljmp
std
mull
iret
repnz
inc
test
mov
aam
js
pop
push
mov
add
push
roll
push
and
mov
mov
cmp
iret
and
idivb
sarb
cmp
lcallw
dec
andl
cmp
or
adc
inc
fsubs
aaa
mov
pop
mov
cmp
iret
add
mov
fdecstp
pop
icebp
and
add
inc
pop
cli
add
xor
push
add
xlat
gs
mov
clc
enter
mov
jo
insb
movsb
mov
jge
loopne
das
mov
popf
add
xchg
inc
lret
mov
addr16
push
pop
adc
jns
aas
add
mov
mov
in
add
sarb
fwait
dec
out
icebp
jno
cmp
mov
mov
xchg
adc
mov
mulw
aaa
lods
add
lds
fcmovbe
das
in
mov
jge
inc
aad
addr16
cmp
mov
cmp
imul
sahf
iret
cmpsl
add
stos
test
sbb
movsl
jns
sub
add
mov
sysexit
cmpsl
push
mov
xor
push
pop
sub
cmp
les
shlb
aas
push
shl
inc
sub
sbb
mov
stos
enter
inc
pop
mov
dec
xor
sub
aam
mov
cmpsb
mov
xchg
inc
mov
sbb
and
add
in
insb
movsb
in
push
subb
lea
mov
push
addr16
inc
inc
lea
lds
sbb
es
sbbb
push
xor
add
add
nop
popf
mov
imull
jns
out
call
call
push
mov
movsl
shlb
notl
cmp
insb
test
mov
xor
cmp
rol
daa
sub
mov
dec
aaa
or
sbb
cli
out
adc
in
out
sub
je
cmp
cmp
je
mov
push
imul
pop
or
outsb
cli
sbb
stc
cmp
or
and
xor
push
mov
pop
sub
sub
and
fs
subl
push
xor
mov
xor
adc
ret
rorl
push
dec
loopne
imulb
mov
fcmovne
inc
ret
test
or
js
pop
xchg
js
lret
repnz
cwtl
or
lds
dec
xchg
mov
mov
inc
gs
cs
dec
or
icebp
lock
jnp
add
lcall
mov
es
pop
mov
xor
and
and
sbb
dec
js
sub
dec
mov
pop
add
sbb
xchg
cli
stos
xorb
add
imul
cmc
call
popa
inc
pop
mov
pop
mov
fildl
mov
adc
insb
cmp
sub
addl
pop
push
cmp
mov
cmp
inc
testl
mov
hlt
mov
dec
fdivr
and
xchg
ja
inc
in
add
shl
add
inc
sub
inc
aaa
sub
les
out
sub
test
mov
mov
dec
lock
push
mov
dec
mov
ds
jp
sub
sub
cmpsl
xor
cmc
cmp
push
and
shl
fldt
add
pop
push
xchg
dec
dec
pop
pop
int3
nop
jb
sahf
out
jne
sti
les
popf
sub
and
popa
dec
out
andl
je
sub
jge
and
add
inc
out
fildl
push
mov
pop
xlat
mov
jmp
lret
push
inc
add
dec
out
dec
push
push
lock
cs
test
mov
es
testb
in
adc
add
mov
adc
or
repz
pop
cmpsb
fnsave
add
xor
or
pop
sub
out
fs
and
ja
stos
call
xor
mov
mov
add
ret
mov
mov
idivb
or
in
loopne
imul
and
xchg
mov
dec
add
push
push
addr16
loop
stos
or
ret
data16
add
scas
rolb
in
shlb
insb
popl
add
mov
pusha
add
or
dec
cmpsl
lods
lock
pop
addr16
insb
aaa
out
lods
push
sub
jecxz
xor
pop
cmp
mov
scas
stc
or
xor
cmp
hlt
cmp
sbb
dec
insb
pop
ret
push
stos
es
inc
mov
adc
xor
into
ret
pusha
mov
sub
jo
add
sarl
int
movsl
push
dec
notb
dec
je
in
roll
loopne
sub
cmpsl
mov
fcomps
add
shlb
sub
jo
imul
popf
scas
cmp
jo
and
xlat
icebp
and
dec
jl
outsb
pop
js
in
repz
and
popa
sbb
shll
dec
mov
cmp
dec
into
loopne
dec
xchg
lods
call
cmp
idiv
and
dec
jo
xchg
pop
add
mov
and
mov
cmp
out
jno
cmp
add
shl
ja
sub
add
ret
cmc
es
cltd
jnp
inc
inc
or
inc
sub
add
shrb
call
and
adc
and
cs
sub
popf
popa
dec
imul
cwtl
roll
inc
out
inc
sub
cmc
sub
mov
test
hlt
fidivs
or
sub
es
pop
fsubl
fisubrl
cs
lds
pop
xor
rcl
in
aaa
scas
xor
or
pop
sub
and
dec
sbb
test
dec
int3
ss
ret
adc
inc
add
cmpsb
push
adc
add
or
cltd
jb
mov
jle
in
jge
xlat
hlt
es
shll
call
sub
das
lea
mov
and
sahf
lods
les
addr16
imul
aaa
sbb
xor
xor
jb
mov
loope
or
std
add
cli
mov
pop
arpl
inc
push
cmp
or
test
int3
xchg
cmp
pop
out
movsb
sbb
adc
scas
and
aad
xchg
popa
lods
inc
cmp
rcrb
push
jle
js
imul
sti
xor
add
lock
lds
fwait
sbb
xor
or
jmp
and
push
icebp
add
popl
cmpsb
add
inc
addr16
in
insb
sbb
loopne
mov
jmp
mov
into
mov
je
int3
push
popf
or
out
pop
mov
jp
or
sbb
lods
push
loopne
or
or
lret
add
mov
insb
fs
testb
mov
insb
sarb
or
and
movzwl
orb
sub
mov
sub
out
ss
pushf
sarb
aam
cwtl
jb
push
xchg
xor
xor
or
or
cli
shrb
push
int
int3
test
lods
or
lret
sbb
lock
lret
in
jo
shll
push
adc
fiadds
pop
jns
rdtsc
aaa
ret
sbbl
in
outsl
ret
lods
dec
adc
jge
gs
outsl
out
ret
icebp
pop
aad
out
fdiv
rclb
push
iret
pop
jge
mov
pop
mov
xchg
xchg
arpl
push
push
push
or
jmp
cmp
cs
mov
cmp
lods
jl
or
popf
sbb
dec
int3
mov
shr
push
push
jbe
mov
rorl
cltd
cld
sbbb
jns
mov
call
ss
popa
mov
adc
jnp
or
xlat
dec
xor
adcl
dec
int
adc
gs
pop
pushf
jnp
clc
rorl
daa
jno
mov
sub
shll
out
fisttps
mov
jge
and
xchg
mov
test
cmp
sub
sbb
ss
loope
in
pusha
jno
icebp
addr16
testl
cld
mov
fmulp
sub
and
mov
test
pusha
and
add
iret
sub
into
lock
inc
pusha
push
rol
and
lods
roll
jno
ficompl
xchg
push
mov
pop
inc
pushf
mov
pop
cmpsb
push
push
ds
in
daa
ss
ja
push
rcr
test
cmp
fcmovnu
sub
push
push
cmp
out
xor
idivb
mov
in
inc
push
movsb
inc
out
das
cli
pop
and
mov
push
outsb
add
add
out
lds
mov
mov
inc
add
test
fists
pop
adc
inc
inc
lods
push
adc
push
inc
adc
and
dec
call
lcall
push
lods
jle
lods
push
cwtl
inc
aad
push
sub
lds
sub
add
dec
inc
adc
pop
and
add
loopne
lods
mov
shrl
or
mov
cmp
pop
adc
jne
pop
cmp
and
mov
icebp
aam
and
sub
push
adc
imul
pop
cmpsb
jno
push
or
pusha
or
xor
lret
or
in
stc
cli
mov
mov
aaa
adc
push
adc
inc
mov
scas
adc
add
movsb
mov
mulb
push
int
in
loope
mov
adc
or
inc
ljmp
fisubl
rclb
or
jns
pop
fcmovnbe
or
adc
in
sub
sbb
mov
sti
push
and
in
inc
adc
push
popf
bound
sbb
ret
lods
int
adcl
mov
outsl
xchg
add
mov
loopne
adc
fadds
loope
out
mov
call
repz
int3
xor
adc
push
repnz
out
sub
mov
dec
pop
cmpl
and
jmp
pop
add
pop
les
pushf
shll
loopne
pop
aaa
ljmp
jno
inc
loop
inc
jmp
dec
dec
adc
ljmp
sahf
out
cmpsb
lret
sbb
jmp
sti
jo
movaps
cwtl
cs
push
xor
rcrb
ret
adc
jo
lods
mov
cmp
mov
add
lods
xchg
or
mov
loope
add
mov
loopne
lock
scas
je
xor
xchg
mov
sbb
out
jae
or
or
les
es
inc
and
dec
mov
sbb
imul
xor
repz
sub
test
and
sbb
stos
sbb
nop
adc
mov
dec
dec
imul
shlb
and
call
xorl
push
inc
into
adc
xor
iret
sub
xchg
cmpl
mov
jmp
xor
test
adc
pop
adc
xchg
and
mov
sub
cmp
pop
pop
mov
ja
iret
xor
loop
adc
sub
jp
cmp
cmp
jle
pop
jle
jb
push
mov
jns
mov
cmp
sub
xor
cmp
xor
xchg
gs
or
inc
lret
pop
add
cmp
push
pop
test
add
xor
jns
push
cmpl
inc
test
jmp
add
xchg
inc
insl
mov
sbb
xchg
and
sbb
adc
aam
shlb
mov
js
xor
lock
scas
ret
cmp
cmc
out
ret
pop
sub
outsl
adc
push
cmp
out
cmp
outsb
or
test
hlt
in
insl
insb
or
xor
ljmp
out
ret
test
or
sub
icebp
outsb
lds
push
xchg
push
or
out
push
cmp
mov
jae
es
loopne
test
push
call
pop
addb
mov
push
pusha
xchg
outsl
inc
test
inc
xor
fstps
fbld
push
xchg
cli
dec
cs
jge
or
push
xchg
ret
les
dec
bound
movsb
inc
push
lods
cmp
add
cmp
outsb
int3
push
sub
xchg
jl
xor
mov
js
mov
pop
xor
test
iret
bound
inc
je
lods
loope
add
push
data16
mov
pushf
sbb
fwait
sub
pop
cmp
add
ljmp
jno
pop
fs
lods
xchg
je
xchg
sub
push
dec
fmuls
icebp
adc
sub
fs
ret
inc
fcmovnbe
cmc
sarb
rcrl
pop
xchg
or
cs
sub
negb
in
call
cmp
idivb
push
ret
push
movsl
roll
add
or
xor
push
pop
mov
inc
xor
xor
sub
lock
sbb
jg
ss
mov
add
or
clc
stos
lcall
inc
loope
and
insl
add
cs
orl
gs
push
sbb
lcall
xor
push
movsl
add
jb
arpl
out
push
add
or
repz
cld
add
push
andb
enter
lcall
add
imul
out
and
cmp
sbb
int3
cmovle
sbb
in
pop
sub
imull
mov
movsl
xlat
je
lods
int3
ljmp
aad
xor
or
pop
cmp
push
shll
cmpsb
dec
and
idivl
adc
ret
mov
jb
adc
sbb
stos
cmp
inc
loop
inc
mov
cltd
mov
pop
lds
shll
push
daa
xor
cmc
mov
popf
adc
pop
cmp
adc
pushf
add
xchg
pushf
cmc
add
or
sub
fists
adc
and
sbb
shl
xchg
in
leave
xchg
das
mov
mov
mov
adc
add
xchg
inc
cmpsl
cmpsl
inc
xchg
push
xchg
cmp
sahf
add
in
push
ret
or
push
xor
out
xchg
stos
je
shll
sub
call
icebp
insb
push
aaa
or
cld
ds
pop
rcll
inc
adc
dec
jle
dec
and
das
out
mov
add
pusha
fadd
sub
arpl
ss
pop
jno
inc
cs
and
js
adc
or
add
dec
pop
and
push
sbb
push
xlat
sub
sub
outsb
push
cmp
cmp
mov
pop
and
shrl
data16
or
add
mov
lods
pop
icebp
sub
jp
movsb
stos
imul
in
jae
daa
xor
adc
ljmp
sub
and
push
or
popa
fadds
cmp
es
xchg
lret
fcoms
les
push
sbb
lock
outsl
fsubr
cmp
dec
into
pop
stos
test
cmpsb
and
aas
insb
cmp
sub
add
hlt
sub
pusha
aam
je
sbb
inc
popf
sbb
push
xor
pushf
mov
dec
cmp
loope
or
push
and
sub
and
icebp
lds
sahf
dec
test
lods
pushf
and
inc
xor
cmp
popa
inc
push
popa
inc
or
push
aad
push
inc
ja
jae
das
sbb
or
adc
or
test
fstpl
adcl
lods
aaa
jbe
les
cmp
or
add
in
pop
das
xchg
sub
cmpsl
sbb
call
xor
movsb
out
jae
xchg
xorb
or
mov
add
aaa
and
jnp
mov
and
or
js
and
cmpsb
mov
xchg
mov
xor
and
push
push
or
inc
test
jg
test
push
push
xlat
jecxz
cmp
mov
clc
outsl
or
mov
loope
pop
xor
xchg
push
sbb
mov
ljmp
in
andl
repnz
test
and
push
adc
in
pop
scas
pop
js
xor
sbb
mov
push
push
arpl
arpl
sub
jbe
addr16
add
subb
dec
cmp
push
sbb
sub
cmp
fsubs
and
lods
xor
mov
add
rcr
cld
push
adc
sbb
test
add
adc
adc
mov
or
in
imul
cmp
imul
and
xor
mov
sbb
sub
loop
sbb
inc
loope
sbb
mov
out
shl
loop
nop
and
and
ljmp
cltd
pop
pop
cmp
leave
std
push
outsl
cltd
push
std
mov
js
xlat
aad
xchg
cmp
adc
pop
scas
mov
push
int
sub
jp
mov
xor
pop
sub
and
dec
xor
shll
jg
xchg
rolb
xchg
dec
and
or
sub
pop
mov
xor
add
icebp
jo
mov
clc
add
add
add
icebp
cmp
mov
out
xchg
lahf
es
xor
pop
das
add
push
sbb
das
ret
sub
stos
jp
push
sub
es
rorl
xchg
or
mov
jg
insl
mov
dec
daa
jb
jg
mov
cs
push
cmp
rclb
bnd
xor
sbb
popfw
das
or
adc
orb
ja
hlt
inc
inc
sub
and
mov
bound
loope
mov
add
xchg
or
ds
sbb
fcmove
das
sub
fisttpll
loope
cmpsl
mov
sar
jle
pop
das
cltd
mov
daa
inc
hlt
daa
jle
fs
jnp
inc
int3
or
out
icebp
xchg
loopne
or
push
and
call
mov
or
sahf
sti
push
add
jae
jl
sub
jg
and
push
nop
push
stos
sub
inc
jae
inc
jae
add
gs
and
stos
add
and
sar
mov
sub
mov
mov
cwtl
mov
mov
stos
add
pop
fmuls
sbb
sub
or
xorb
add
mov
inc
mov
add
adc
pop
add
js
mov
pop
insb
cmpb
push
fistps
shll
and
movsb
negb
xchg
inc
adc
mov
xchg
sbb
jnp
aad
mov
pop
add
repz
add
sbb
cmp
pop
push
je
xchg
inc
cmc
dec
push
or
or
fnsave
xchg
sbb
push
mov
push
bnd
pushf
aad
js
inc
xor
sbb
jle
sti
aam
sub
pop
jns
push
mov
sti
in
test
sub
leave
data16
insl
iret
cmp
mov
sub
ds
mov
xor
xchg
adc
dec
test
lods
sbb
mov
lret
or
aas
add
stos
mov
mov
js
or
and
or
inc
leave
testb
jno
test
das
es
sarb
add
xchg
push
shlb
cwtl
dec
pop
das
inc
pop
aaa
pushf
pandn
xchg
inc
lea
cmp
dec
mov
and
xchg
addr16
mov
sbb
imul
paddb
addb
add
cmp
sbb
loopne
xorl
sub
ljmp
jg
lds
adc
and
push
push
inc
add
dec
or
dec
lock
cmpsl
test
inc
xor
movl
adc
xor
push
mov
push
arpl
dec
mov
or
jns
or
add
sbb
cmp
testl
dec
stos
push
popf
rclb
or
inc
add
mov
lcall
add
shlb
or
stos
sbb
call
lahf
mov
loop
inc
shll
or
sbb
loopne
dec
fcomps
das
call
jle
jg
xchg
jge
cltd
std
jge
and
mov
and
add
arpl
cmp
mov
dec
leave
jne
inc
mov
test
add
pop
fisttpll
adc
dec
dec
je
add
mov
stos
inc
insb
pop
mov
pop
sub
inc
xor
sbbb
jne
mov
or
mov
sub
xchg
or
dec
hlt
or
add
das
iret
mov
add
jmp
or
adc
enter
dec
scas
inc
adc
aad
cmp
and
xchg
inc
sbb
test
pop
xor
incb
push
insl
inc
loop
jb
add
scas
pop
jb
inc
pop
inc
sbb
std
inc
and
or
mov
sbb
and
ds
data16
rcrl
sub
cmp
pop
int3
mov
add
xor
repz
adc
pop
and
scas
int3
and
pop
sahf
fildll
scas
dec
xchg
dec
dec
sti
pop
inc
movsb
add
lret
jno
push
xor
pusha
jnp
iret
popw
iret
cmp
and
adc
xlat
adc
fwait
push
lds
mov
xchg
and
push
adc
sbb
add
gs
daa
adc
sbb
les
push
es
scas
daa
test
shlb
adc
jle
fimull
pop
inc
xchg
in
jg
mov
movsb
outsb
inc
mov
cmp
stos
divl
mov
stos
int
mov
xchg
lods
ret
add
push
push
fwait
and
lds
rcrb
or
adc
dec
out
sbb
mov
rclb
jg
push
jbe
in
push
movsl
sub
test
pop
mov
mov
or
inc
shl
add
test
sbb
add
adc
stos
pop
sbb
loope
mov
ja
inc
jb
and
inc
xor
and
into
inc
mov
adc
jp
xchg
and
push
pop
loopne
dec
adc
aas
test
xor
xor
ljmp
loop
adc
and
lods
imul
shrl
mov
lcall
mov
adc
mov
adc
mov
sbb
jl
aam
xchg
xor
in
push
inc
xchg
xchg
or
push
out
insb
and
push
mul
cmpsl
add
jecxz
sbb
lea
je
jle
jo
dec
xor
jg
jae
inc
fcmovu
pop
ds
out
out
adc
notb
lods
mov
or
pop
dec
add
add
adc
pop
xor
roll
mov
cmp
dec
sub
sub
clc
cmpb
xor
push
sahf
lods
sbb
add
mov
push
mov
nop
mov
mov
push
popf
xor
mov
cmpsb
mov
jo
xchg
inc
sti
mov
xor
sbb
outsl
out
cmp
and
sbb
dec
ret
push
imul
pop
add
push
add
push
push
int3
divb
pop
dec
cmp
fsub
xor
icebp
fsubrl
jl
jo
push
fiadds
int
das
add
xorb
popa
and
cmpsb
push
jno
inc
add
adc
fwait
movsl
mov
sub
jp
mov
inc
out
flds
push
lods
stos
jne
ss
out
xor
inc
sbb
mov
sbb
scas
sbb
mov
outsb
das
daa
ret
test
fisubs
push
xlat
dec
ret
jmp
loopne
xchg
icebp
mov
and
orl
jnp
iret
pop
mov
xor
jl
addl
push
lea
insb
scas
loopne
add
push
add
or
ss
and
jo
stos
mov
dec
cmp
cwtl
or
pop
jo
xor
xchg
pop
mov
cmp
and
loope
cmp
imul
jnp
jae
jns
mov
push
ret
pop
shrb
add
jb
push
mov
push
xor
push
push
test
test
daa
adc
loop
test
and
out
daa
push
dec
xor
mov
dec
xchg
add
lock
xor
add
xchg
shlb
sub
lods
repz
or
sti
pop
xorw
add
push
push
add
stc
addb
cli
fisubrs
push
add
xchg
cmp
std
scas
imul
gs
jb
popa
or
cmp
ret
leave
test
sbb
movsb
mov
in
shr
cmp
mov
pop
and
insb
xlat
mov
pop
sbb
pop
loopne
lret
sub
sub
pop
adc
cmp
add
add
int
dec
mov
test
xor
xchg
adc
mov
lds
or
jne
mov
mov
mov
repnz
xchg
mov
addr16
fldl
jl
xorb
push
pop
fisttpl
sbb
mov
pushf
pop
cmp
test
stos
mov
dec
inc
test
or
out
add
add
or
mov
push
xor
loop
clc
mov
out
hlt
rcrl
push
xchg
cld
and
cltd
xchg
and
cmpsb
and
cmp
aad
loopne
aam
pop
mov
jecxz
ljmp
loopne
shrl
pop
xchg
push
nop
or
inc
xchg
jo
cmp
and
mov
mov
jb
and
mov
cmpsb
mov
xor
sbb
popa
and
cmp
cs
add
or
lret
cld
add
push
sbb
psubusw
roll
xor
adc
sub
adc
adc
inc
xchg
lods
mov
fisubrs
shlb
lds
mov
rorl
es
mov
sub
scas
andb
jbe
jae
clc
add
neg
scas
lds
cwtl
or
dec
inc
daa
data16
xor
push
js
xchg
pop
adc
xor
inc
mov
je
mov
xchg
add
fwait
fwait
push
mov
nop
stos
es
adc
pop
jbe
es
mov
addl
mov
and
push
add
jno
mov
shll
cmp
or
pop
xchg
loopne
adc
cmp
aam
inc
shrb
ret
and
push
xchg
mov
sub
lods
sbb
dec
icebp
jl
ret
clc
jp
imul
push
outsl
repz
adc
cmp
test
sbb
xchg
fwait
inc
push
int3
and
sbb
sbb
or
insb
push
mov
add
push
mov
push
mov
xlat
sbb
or
data16
jno
jle
adc
xchg
dec
js
sarl
in
ja
adc
mov
mov
sub
or
dec
iret
inc
sbb
movsb
mov
push
nop
sub
xchg
roll
push
sbb
jns
jmp
and
data16
lock
cwtl
je
outsb
mov
sti
bound
mov
pop
push
push
lds
mov
mov
cmp
sbb
cmp
insb
cmp
cmp
arpl
lcall
test
les
ror
and
ret
clc
add
pop
jle
lea
jb
and
es
ficomps
les
outsl
inc
add
scas
jae
mov
cmp
mov
pusha
jle
mov
push
xchg
hlt
addb
cmpsb
jmp
push
sbb
popa
jle
push
add
add
in
push
sbb
pop
add
push
dec
ret
xlat
or
js
sub
push
cs
aas
mov
dec
icebp
mov
and
aaa
mov
pushf
gs
sbb
ret
cmp
stos
xchg
aam
and
adc
pusha
push
dec
or
cs
jg
out
adc
aas
das
icebp
sbbb
sbb
adc
cmp
dec
sbb
push
inc
adc
ret
xlat
mov
sub
xchg
cmpl
es
cmp
adc
pop
lret
push
cwtl
stos
add
daa
sub
ret
js
inc
xchg
das
jns
add
mov
adc
push
inc
or
fwait
add
adc
pop
sub
or
xchg
pop
inc
daa
fdiv
lea
cltd
daa
ja
and
pop
int3
push
in
arpl
add
mov
mov
mov
loopne
cld
testb
sub
push
sbbb
fadd
lret
std
sbb
and
test
mov
push
xor
add
stos
inc
mov
movsl
mov
imul
sbb
lock
add
mov
movl
jno
xchg
push
inc
dec
cmp
mov
pop
icebp
cmp
dec
std
je
pop
loope
insb
pop
test
fbld
cltd
lret
pop
xor
out
adc
ss
insb
inc
movsb
outsb
std
and
push
scas
mov
ret
jmp
adc
dec
xor
or
xor
clc
lret
cmp
inc
insl
xor
xor
into
cs
dec
sbb
or
jno
mov
xchg
es
xchg
add
push
je,pn
push
xchg
mov
sbb
lods
pop
pushf
stos
das
pop
hlt
sbb
push
cmp
mov
xor
cmp
out
call
pusha
jg
or
push
mov
fwait
add
xchg
mov
cmp
push
mov
or
push
or
mov
or
or
repz
push
ret
add
inc
dec
cs
xor
into
subb
and
fwait
add
data16
lcall
add
cmp
dec
add
mov
adc
mov
pop
or
mov
and
inc
inc
adc
ss
or
and
or
out
sub
jo
push
data16
mov
pop
clc
out
add
inc
inc
dec
or
roll
sbb
data16
outsb
mov
pop
jg
mov
iret
gs
xlat
inc
aad
or
es
xchg
dec
push
pop
xlat
out
fsubl
mov
es
enter
sub
int
add
dec
ret
mov
mov
xchg
add
out
push
add
and
subb
cmpsb
dec
push
mov
xchg
sub
xor
mov
sbb
mov
mov
hlt
add
xor
xchg
inc
mov
xchg
push
rclb
insl
mov
pop
and
adc
sub
dec
int
es
inc
dec
sub
ljmp
mov
divl
js
push
ror
testb
pop
hlt
jnp
je
adc
dec
daa
sbb
pop
pop
xchg
jge
pushf
jnp
push
inc
fildl
je
inc
dec
cwtl
mov
jecxz
adc
pop
pop
inc
inc
cwtl
adc
sub
ss
pop
cmp
ljmp
add
outsb
inc
jno
loop
rcrb
imul
push
adc
push
jo
push
pop
adc
dec
ds
and
les
addr16
sub
add
filds
add
out
add
mov
adcb
cmpsl
les
popf
jo
ret
andb
jl
stos
push
popf
sbb
lret
and
xor
add
clc
inc
add
aas
pop
subb
ljmp
lcall
jo
jb
inc
shlb
or
xor
in
jmp
sti
add
push
icebp
sti
daa
dec
inc
add
cmp
sbb
iret
xchg
insl
pop
cmp
inc
mov
nop
xor
jle
cmpsl
xchg
push
aaa
sbb
sbb
out
inc
mov
test
fcoml
pushf
adc
les
push
scas
je
sbb
push
xor
popf
inc
adc
adc
iret
push
fwait
adc
shlb
push
test
iret
cmpsl
loope
ror
push
xor
js
pop
out
add
xor
and
and
nop
shrl
fiadds
ljmp
and
shl
add
mov
cmpl
fisubrl
and
or
inc
add
repnz
lcall
dec
loopne
aad
int3
pusha
push
and
sbbb
cmpsb
sbbb
sub
pop
and
mov
mov
shll
data16
ret
sbb
and
cmp
mov
dec
pop
int
add
mov
jecxz
or
cmpsl
orb
add
xlat
fbld
mov
mov
leave
pop
xor
cmp
xor
movsb
popa
jno
cwtl
shlb
ds
in
popl
add
xchg
stc
hlt
adc
push
cmpsb
add
mov
jmp
and
std
mov
stos
push
data16
push
scas
clc
dec
idivb
sub
or
fwait
stos
mov
adc
dec
or
out
and
in
out
pop
fdivrl
lods
pop
add
fldcw
pushf
add
xchg
loop
je
xor
in
jecxz
mov
jbe
aaa
xlat
dec
jo
sbb
shll
push
out
int
hlt
lret
mov
lods
or
mov
inc
sahf
rcl
sbb
jmp
ret
sub
jb
test
andb
mov
sbb
fisubs
loope
or
jmp
inc
sub
mov
sarb
cmp
inc
sbb
outsl
push
popa
cmc
pop
inc
sub
call
clc
cmpsb
lret
mov
xorl
jl
xor
push
lods
loop
sbb
call
movsb
scas
sbb
in
iret
sub
arpl
sub
int3
and
adc
adc
sbb
jne
jo
sbb
and
xchg
inc
call
inc
aam
sbb
cmp
fnstsw
mov
mov
adc
xchg
inc
jno
and
push
add
add
and
adc
or
jns
add
cmpsl
mov
add
daa
cmpsb
dec
sub
bound
push
cmp
and
dec
xor
jne
hlt
mov
push
push
sub
int3
pop
pop
mov
clc
scas
fdivrs
pop
fadds
clts
ret
aam
test
and
and
pop
or
aaa
int3
loop
inc
rcr
and
or
scas
imul
fcoml
jo
push
pop
cmp
mov
cmp
xchg
lret
in
inc
push
add
mov
mov
add
inc
shl
xor
cmp
addr16
fcoms
and
adc
mov
or
mov
rolb
nop
outsl
inc
in
mov
insl
cs
xchg
or
imul
stos
and
daa
push
and
inc
or
jmp
push
add
leave
fists
or
sub
adc
xor
or
add
and
aam
ret
sbb
jle
mov
inc
int
rcr
mov
and
add
mov
and
push
mov
xchg
jb
and
inc
pop
push
movsb
pop
inc
inc
adc
pop
push
xlat
jo
insb
inc
iret
mov
movsb
pushf
aaa
je
and
je
aaa
push
mov
add
push
shl
fcoml
adc
call
insl
add
xor
sarl
loopne
lods
jb
sub
xchg
or
lods
mov
shl
inc
inc
push
inc
xor
andb
enter
cmp
add
push
int3
outsl
or
xchg
mov
fisubrs
push
mov
mov
stos
pop
pop
adc
and
push
repnz
fwait
out
fwait
imulb
and
andl
pusha
pop
push
and
sub
loopne
sbb
jae
xor
adc
cmp
test
add
adc
adc
push
ret
roll
cltd
jo
popa
xchg
inc
imul
and
sub
jp
xor
icebp
into
rcll
mov
mov
fdivrl
call
stos
add
lock
fldl
movsb
enter
lcall
xchg
je
ja
sbb
das
inc
les
rol
inc
adc
dec
sbb
out
push
cmp
jg
push
into
add
mov
jecxz
add
xchg
es
xor
xor
cmp
cmp
lea
jbe
js
mov
add
ds
enter
test
and
and
sub
mov
mov
inc
or
add
mov
sub
and
jbe
lds
xchg
inc
aad
in
mov
iret
inc
daa
ret
or
or
jle
sbb
pop
lock
xchg
push
iret
out
add
stos
push
int3
cwtl
fidivl
das
test
dec
imul
push
lock
lcall
add
fs
mov
push
lahf
mov
dec
inc
push
pop
in
in
sbb
dec
and
mov
push
or
jns
gs
push
cmp
mov
cmp
sti
adc
orb
pop
add
fsubrs
adc
and
inc
or
push
mov
into
or
out
dec
shll
outsl
push
rol
xchg
pop
push
xchg
enter
add
jbe
das
dec
mov
pushf
sahf
sub
mov
jg,pn
sbb
adc
push
and
dec
ret
add
aas
push
add
and
pop
adc
shlb
push
mov
push
mov
stos
adc
jo
inc
cltd
sub
test
dec
dec
sub
ljmp
ss
sub
ret
dec
roll
mov
cmp
add
mov
pop
adc
and
xchg
push
or
iret
lds
arpl
mov
in
pop
sub
and
and
dec
mov
ja
aas
je
jb
mov
mov
mov
aam
aam
pop
mov
inc
lahf
cmp
out
fnstenv
stos
cmp
adc
cmp
or
rclb
mov
fildll
push
mov
mov
je
addr16
push
test
lods
fcoms
pop
int3
aaa
iret
push
addr16
mov
in
cmpsb
and
orb
stc
or
mov
icebp
add
mov
je
int3
sub
inc
cmp
fidivl
lods
dec
mov
jb
xor
mov
in
xor
dec
cmp
popf
stos
mov
or
cmc
mov
gs
xchg
jmp
inc
cmpsb
shrb
lods
ss
mov
mov
pop
ja
pop
lods
ret
mov
popa
add
push
scas
ds
mov
add
repz
fildll
ja
or
sub
lock
sbb
sub
popf
iret
xor
sub
xor
mov
out
inc
add
mov
sub
sbb
jno
sbbb
or
fldenv
xchg
sub
mov
lods
aam
dec
inc
pop
cmpsl
xchg
mov
mov
fisubl
je
ds
mull
cmp
and
add
xor
xchg
mov
scas
dec
adc
mov
ret
rol
shl
mov
dec
loope
mov
pop
and
pop
rolb
cmp
adc
movsl
sub
ret
sub
test
fmull
mov
sub
mov
inc
mov
xchg
fisttpll
les
sar
fs
mov
pop
fisubs
cwtl
dec
lds
pop
cmc
data16
sub
int3
xlat
shll
addr16
dec
sub
xor
pop
adc
fidivl
xor
pushf
mov
adc
inc
sbb
sahf
sbb
mov
xor
add
orb
xchg
mov
mov
cld
and
xor
aam
add
xor
push
jns
xchg
pop
cmp
inc
pop
stc
mov
and
mov
imul
cmp
mov
addb
sbb
sahf
mov
sub
mov
push
addl
add
sbb
sahf
fstpt
jecxz
test
and
popa
fildl
jmp
push
aad
in
add
cmpsl
clc
fadds
test
adc
jle
scas
lods
scas
roll
mov
and
sbb
scas
push
inc
ret
out
test
scas
stos
insb
pushl
sub
fnstenv
fs
loop
int3
xor
push
pushf
int3
push
stos
and
pop
faddl
add
push
aam
call
mov
aad
orb
push
out
xchg
mov
sbbl
lret
scas
mov
mov
inc
andl
sbb
add
repz
enter
sub
orl
or
cmp
ret
add
aaa
jge
dec
or
stos
ret
mov
jnp
pop
mov
shrl
addb
cmp
inc
inc
xchg
or
push
push
ja
aam
mov
push
lret
test
pcmpeqd
addb
rorb
xor
pop
push
hlt
and
test
push
jo
mov
and
stos
pop
xchg
arpl
outsb
add
mov
stos
stos
mov
adc
fdivrp
adc
add
loope
daa
push
mov
adc
aad
dec
cli
push
movsl
push
pop
scas
fs
add
mov
adc
ret
pop
push
ficompl
inc
vpaddsb
xchg
inc
inc
sti
js
call
test
jp
aad
aaa
sbb
and
sub
rcrl
ss
push
test
pushf
mov
xor
loope
mov
add
jmp
mov
inc
mov
addr16
ret
je
sub
test
push
pusha
xor
xchg
mov
mov
imul
or
lods
jbe
push
push
addr16
jne
sbb
mov
pop
adc
add
sbb
bound
or
mov
inc
roll
fldcw
add
lret
fildll
mov
fdiv
pop
xor
cmp
dec
or
notl
and
fcmovu
mov
adc
mov
lahf
sbb
inc
push
inc
mov
push
bound
and
mov
xor
inc
fwait
sub
or
inc
inc
cmp
jge
inc
add
das
mov
fmull
inc
mov
das
xchg
ret
sub
or
push
shlb
sub
mov
adc
mov
int3
adcl
mov
inc
fstpt
icebp
pop
mov
dec
and
push
daa
sub
push
cmp
push
xor
scas
scas
sub
xor
and
cmp
iret
or
test
cs
fadds
aad
inc
lcall
add
fwait
cli
dec
push
adc
inc
cwtl
or
cmp
fnop
inc
test
ret
fsubr
sbb
dec
inc
mov
mov
movsl
ret
cmc
mov
inc
push
idivb
cmpsl
jbe
mov
add
int3
xchg
vmwrite
mov
dec
or
icebp
orb
imul
ja
addr16
repz
pop
aaa
and
and
or
loopne
sbb
jo
scas
adc
jae
xor
dec
or
mov
add
les
lahf
sbb
dec
jb
adc
mov
mov
sbb
testb
and
adc
mov
adc
mov
inc
icebp
adc
shl
adc
ret
and
sbb
adcb
outsb
dec
repz
xchg
adc
inc
xchg
xchg
inc
dec
mov
cmp
dec
movsl
fstpt
and
jmp
ljmp
xchg
pusha
pop
xchg
out
jae
inc
and
adc
push
dec
out
lret
jmp
sub
stos
imulb
pop
lds
mov
add
mov
push
aaa
stc
and
pop
adc
or
jno
lds
push
push
fs
cmc
sbb
jns
shlb
mov
fcmove
push
push
push
and
imul
bound
and
jns
xor
push
sub
cwtl
loopne
rclb
mov
mov
and
and
xchg
sbb
scas
sub
addb
cmp
mov
add
stc
xor
and
or
inc
mov
adcb
or
testb
cmp
dec
adc
lods
sub
xorb
loope
lods
mov
and
aam
inc
daa
repnz
mov
dec
das
in
xchg
push
adc
aaa
push
or
add
cmpsl
mov
dec
dec
in
pop
iret
sbbl
cmp
xchg
xor
and
lret
pop
xchg
pusha
or
cmp
xchg
ljmp
inc
pop
add
arpl
fldt
movb
and
loopne
sbb
fcomps
cmp
inc
sarb
add
lret
add
sbb
fmulp
mov
and
add
mov
push
adc
shrl
pop
pushf
xor
sahf
adc
popf
add
push
pop
mov
imulb
pusha
mov
or
or
sub
xor
bound
mov
push
sub
add
push
dec
sti
add
adc
cmp
mov
enter
mov
jno
inc
ljmp
sub
mov
xlat
sub
fnstcw
push
jl
or
fldcw
mov
push
repz
lds
mov
repz
sbb
jns
cmpsl
lcall
cld
cmc
sbb
or
mov
pop
repnz
push
inc
divb
adc
add
or
cmp
lds
inc
add
shll
test
push
pop
fwait
test
pop
jns
dec
and
loopne
and
xor
cmpsb
mov
shll
fnstcw
imul
add
dec
mov
pop
jo
shl
rolb
inc
fnsave
iret
pop
adc
cmp
rclb
sbb
ret
mov
and
imull
dec
dec
loop
inc
lods
adc
pop
cmp
push
inc
jp
sbb
cmp
shlb
push
xor
xor
cmp
sub
andb
mov
mov
inc
xor
mov
fistpll
mov
fidivl
add
loop
push
pop
test
push
add
pop
push
lock
mov
push
adc
sub
fiadds
inc
adc
or
rorl
int3
push
push
add
daa
adc
mov
mov
push
inc
popf
push
subl
push
into
mov
mov
inc
and
in
xchg
pushl
sub
push
aad
aaa
dec
lods
and
mov
cmp
cmp
dec
stos
ljmp
and
adc
cwtl
inc
fbld
cld
daa
js
or
ljmp
cmp
fsts
inc
scas
sahf
pop
pushf
mov
jmp
xor
iret
pushf
sti
mov
fs
in
jne
lds
add
dec
add
stos
arpl
cmpb
dec
add
jae
xchg
add
adc
pop
cmp
adc
mov
sbb
xor
addl
sub
mull
xchg
mov
dec
xchg
divps
test
push
imul
pop
mov
bound
adc
xor
mov
add
lods
call
lret
popa
in
push
xchg
sub
cmc
mov
adc
xchg
xchg
sub
inc
int3
inc
xchg
lret
lcall
or
jge
out
xchg
push
and
fstl
outsl
xlat
lcall
and
lcall
or
add
andl
sub
xchg
test
cmp
xchg
test
popl
sub
xchg
jb
or
xlat
xchg
ja
cmp
pop
inc
out
orl
sub
test
push
sbb
test
bound
lahf
sti
push
push
and
xor
mov
mov
xlat
mov
mov
pop
adc
sbb
jbe
leave
add
or
stos
sub
lds
jp
sbb
and
add
repnz
add
mov
adcb
popa
mov
in
cmp
jle
roll
stos
test
jmp
jmp
into
sbb
adc
inc
dec
stos
popa
push
xor
xlat
inc
es
andps
and
pushf
add
lods
jmp
jmp
mov
mov
pop
pop
pop
hlt
sbb
pop
incl
cmp
add
stc
sub
inc
mov
mov
rolb
imul
out
mov
push
sbb
movsb
sbb
jl
andb
rcll
mov
lcall
push
inc
sub
pop
rol
and
incb
inc
lcall
cmp
mov
outsl
in
aas
lcall
or
je
cmp
add
mov
or
stos
or
adc
sub
loope
push
sti
dec
jo
daa
repnz
jns
and
out
dec
add
mov
mulb
mov
pop
adc
adc
pop
shrl
xchg
mov
fbstp
test
addr16
push
repz
push
sarb
mov
daa
adc
push
inc
mov
addr16
shl
push
popf
cmp
ljmp
mov
out
xchg
mov
push
mov
ja
add
iret
decb
pop
jb
or
stos
add
and
mov
mov
mov
mov
sub
js
scas
hlt
push
nop
dec
test
sub
adc
sbb
call
adcb
scas
or
cmpsb
mov
jnp
add
sub
jnp
popa
es
xlat
lds
jno
aad
divl
nop
adcl
xor
sbb
sub
shrl
pop
sub
loopne
int3
rclb
dec
jg
je
sbb
mov
aaa
sub
xchg
orb
loopne
popa
ret
aaa
shr
pop
sbbb
cs
cmp
iret
cmp
dec
cmpsl
cmp
cmpsb
jge
iret
nop
pop
out
rorl
inc
lret
dec
pop
testb
sbb
or
lds
cmovnp
insl
xchg
scas
and
dec
sti
in
sti
push
xchg
add
stos
enter
nopl
dec
sarb
pop
or
jne
addr16
es
push
xchg
adc
jno
jb
adc
adc
mov
cmp
mov
aam
loop
pop
pop
add
stos
pushf
adcl
sarb
add
iret
mov
add
cli
pop
mov
and
xchg
sahf
pop
testl
fsubp
dec
jo
imul
jae
outsl
movsb
push
jno
ss
and
rorl
out
movsb
xlat
loope
add
pop
cwtl
mov
sbb
and
xlat
out
stos
and
pop
mov
xchg
sub
lods
mov
into
sub
out
jg
or
push
add
icebp
scas
sbb
aam
push
xor
mov
and
inc
pop
cmc
mov
movsb
imul
jp
adc
or
and
into
sbb
in
cmp
push
roll
pop
mov
jo
mov
adc
not
test
icebp
sbb
inc
xor
jae
mov
stos
mov
xor
add
f2xm1
mov
add
jns
pop
mov
xchg
add
mov
dec
mov
adc
or
and
outsb
lods
sti
ss
xor
sub
sub
mov
mov
xchg
jo
iret
xlat
sbb
aam
add
daa
mov
xchg
sub
mov
sub
dec
mov
int3
adc
and
rorb
adc
push
xchg
xor
xor
add
xlat
out
iret
fidivrl
lret
adc
sbb
sbb
fucomi
imul
cs
test
sub
sub
les
mov
cmpsl
loopne
and
dec
xchg
mov
cmp
mov
cmp
aas
das
add
and
addb
ja
and
add
call
jns
pop
xor
pop
xchg
orb
sbb
sbb
out
or
insl
inc
xchg
shlb
outsb
xorb
add
add
mov
into
xor
add
test
jns
sub
and
mov
lahf
test
push
add
out
lahf
pop
pop
add
fstl
dec
ja
mov
out
or
in
inc
sub
pop
jnp
push
adc
dec
adc
movsb
mov
jp
inc
mov
push
jae
fucomip
mov
dec
add
stos
dec
add
flds
iret
push
mov
mov
mov
arpl
loop
andl
movsb
lock
pop
cmp
add
xchg
into
outsb
or
cmp
pop
fistpll
ss
adc
lahf
in
push
mov
into
xchg
mov
fsubrs
push
push
jo
lahf
jg
into
in
jo
or
push
fwait
push
push
stc
dec
sbb
shlb
or
cmp
jmp
mov
fadd
xor
andb
jecxz
insb
jbe
and
jns
into
jbe
and
adc
out
or
stos
jne
lahf
sbb
stos
xor
lock
ss
in
jae
add
aad
and
adc
imul
sub
jne
andb
jne
adc
pop
add
insb
dec
and
xchg
adc
repz
fiadds
xchg
push
or
add
push
inc
out
add
ja
xchg
add
adc
sbb
mov
mov
scas
xor
jmp
push
dec
out
lock
sbb
mov
mov
pop
xor
sub
das
push
dec
xor
cmp
movsl
fsubrs
xchg
sbb
xor
pusha
js
dec
jbe
add
mov
dec
add
add
add
loope
test
loope
cmp
inc
mov
dec
xchg
add
inc
lds
mov
dec
sub
xlat
fisubrl
repnz
repz
data16
and
xchg
sub
adc
fdivl
call
fildll
xor
out
loope
cwtl
lods
subl
and
jbe
sbbb
ljmp
mov
inc
push
inc
lcall
arpl
mov
jmp
dec
add
push
fwait
orb
fldt
pop
incl
dec
scas
popf
insl
jl
fcompl
pop
arpl
add
lock
popa
insb
cmpsb
pop
enter
in
xchg
mov
andb
dec
mov
les
jae
cltd
mov
rol
idivb
sti
mov
xor
mov
ds
movsb
fwait
or
push
xchg
ret
into
and
jmp
or
cmpsl
jg
sub
jecxz
das
ret
ret
arpl
call
xchg
fs
xor
mov
pusha
mov
pop
shl
dec
sldt
int
sub
imull
lret
loopne
cs
add
jo
lret
dec
pop
mov
xchg
adc
xchg
imul
pop
add
jae
adc
mov
or
cwtl
addps
sub
sahf
stos
xchg
xor
jb
mov
rep
cmp
pop
xchg
fs
ds
enter
gs
xor
xor
cld
xorl
aaa
and
lret
stos
cmp
call
xor
fnstcw
es
xor
sub
add
pop
pop
or
ss
adc
js
es
mov
shlb
adc
mov
jecxz
xchg
mov
popf
cmc
lds
xchg
dec
fldl
mov
xlat
dec
jns
xor
xor
mov
inc
adc
divl
add
pop
and
xor
fcmovnu
xchg
lds
jle
dec
inc
push
ds
ret
xchg
lahf
add
adc
sub
addl
dec
add
leave
add
xchg
int3
cltd
roll
outsl
inc
sub
dec
lea
movsl
mov
mov
push
jno
pop
sbb
dec
ret
sahf
add
xchg
roll
xor
xchg
aad
adc
sub
decl
movsl
cmp
sti
pusha
add
into
adc
mov
insl
out
icebp
push
ret
aas
xchg
fistl
cmp
add
les
mov
insb
out
xchg
lret
xchg
loop
out
dec
fists
push
out
insl
xchg
xor
outsl
xchg
iret
sbb
sbb
outsb
daa
sbb
xchg
cmp
mov
lcall
popf
or
arpl
mov
mov
data16
je
and
mov
rcr
into
insb
push
push
mov
popf
inc
mov
shrb
or
arpl
sbb
adc
mov
cmpb
push
ds
mov
cmp
cmpb
jbe
dec
movsl
adc
sbb
sbb
adc
and
mov
es
jne
xor
aad
cltd
push
rorl
push
push
sbb
and
cmp
push
mov
xchg
mov
loopne
enter
jno
and
and
inc
dec
shll
ret
out
stc
imul
and
pop
mov
jecxz
fwait
mov
movsb
push
pusha
mov
pusha
mov
mov
outsb
ds
mov
dec
stc
pop
inc
pusha
xor
sbb
sub
or
jmp
mov
mov
std
add
mov
sbb
cmp
into
ret
xchg
jl
movsb
jmp
test
call
shll
loopne
pusha
inc
mov
jg
push
fadd
jnp
cli
dec
mov
sbb
insl
stos
jae
sbbl
cwtl
mov
cs
lcall
pop
adc
outsl
out
imul
js
mov
lahf
aaa
adc
inc
sub
les
push
ss
mov
mov
jecxz
insb
rclb
adcb
or
add
push
jge
and
mov
push
test
rolb
ficomps
inc
inc
xchg
orw
jno
or
lahf
adc
xchg
test
test
and
sbb
out
push
adc
or
inc
cmp
insl
sub
adc
js
and
fprem1
or
mov
hlt
xor
pop
fcmove
xlat
add
out
add
inc
aas
inc
call
mov
sub
mov
les
adc
sbb
sarb
adc
fcmovnb
mov
scas
and
das
mov
mov
divl
mov
add
lret
inc
inc
stos
ret
add
cmp
in
pushf
cmp
popl
test
and
cmp
loope
push
arpl
jno
es
lret
jnp
loopne
pushw
and
stc
or
stos
aaa
fisubs
nop
enter
into
xor
movsb
bound
aaa
mov
adc
sbb
dec
xchg
mov
fcomp
sbb
push
sbb
cmp
mov
sbb
sub
jo
in
or
mov
xlat
pop
and
and
into
out
das
dec
mov
add
adc
fistl
dec
pop
aaa
mov
adc
xchg
mov
jb
sub
and
or
daa
addr16
push
testb
or
fstps
iret
data16
adc
inc
dec
or
add
mov
sbb
and
and
or
inc
mov
push
insl
dec
out
add
adc
mov
mov
add
add
or
mov
jne
addr16
daa
sbb
adc
and
loopnew
shll
shll
xor
push
loope
mov
insl
jbe
jmp
popa
cmpsl
and
fs
or
cmp
cmp
popf
mov
insl
add
add
cmpsl
adc
sbb
xor
es
into
inc
mov
sub
mov
fldt
addr16
add
fcompl
push
pop
jmp
push
stc
push
sbb
lds
mov
into
sahf
bound
imul
negl
mov
test
sbb
lock
pop
push
cli
sub
lcall
out
jnp
arpl
or
adc
pop
mov
jbe
jge
push
or
imul
pop
sub
outsl
add
fcomp
insl
cmp
inc
inc
aad
add
push
mov
fcomi
je
cmpsl
out
out
mov
or
add
mov
out
pusha
stc
cltd
pusha
dec
mov
mov
ret
jge
pop
add
pusha
aam
out
mov
push
or
adc
add
into
sub
hlt
sub
pop
add
fs
sarb
sbb
add
push
push
sahf
loop
call
ss
push
cmc
add
nop
push
xchg
jge
sbb
mov
ljmp
adc
mov
out
outsl
jbe
mov
mov
out
pushf
pop
aas
insb
inc
clc
inc
fisubs
clc
in
xchg
outsl
pusha
adc
or
push
iret
mov
add
pop
sbb
in
mov
stos
test
cmp
mov
sbb
loop
xchg
fwait
add
popf
xorb
mov
aaa
js
mov
add
loopne
ret
pop
leave
es
ja
jl
mov
add
pop
and
cmpl
popf
in
mov
mov
int
xlat
sbb
xor
adc
push
aas
add
add
out
shlb
cwtl
mov
xchg
daa
or
test
inc
sub
add
sub
or
push
mov
repz
push
push
pop
cmc
and
and
je
jecxz
test
mov
insb
leave
add
std
arpl
ds
add
leave
mov
push
in
sub
cmp
divb
ret
add
cmp
sub
js
andl
push
mov
push
dec
test
push
sub
inc
scas
pop
jae
push
jl
and
cmp
in
movsb
push
rcrb
xor
dec
je
sub
push
xor
mov
in
aam
xchg
add
jle
mov
clc
pop
and
push
jno
cmp
jle
aam
ss
xchg
sti
mov
pop
test
push
ljmp
fucomip
jg
int
daa
negl
cmp
xchg
sub
das
cmpsl
lock
sub
adc
xchg
mov
fstpl
pop
sbb
mov
jl
xchg
mov
jae
pop
fmull
outsb
jns
lea
and
dec
pop
rolb
mov
mov
inc
pop
adc
outsb
lret
sbb
sbb
cmp
fmull
mov
xor
cld
mov
int
fisubrs
lods
leave
jns
les
inc
add
ja
jmp
mov
lret
cmp
add
adc
sub
pop
leave
fcompl
insb
adc
jecxz
shlb
pop
mov
or
xchg
outsb
test
dec
inc
xor
cmp
popa
aam
pop
clc
dec
rcl
shl
mov
sub
aaa
cli
xchg
dec
sti
cs
addr16
dec
and
dec
lret
lret
mov
push
xchg
into
jecxz
mov
sbb
sub
sub
pusha
imul
mov
pusha
decl
clc
sbb
insl
stos
popa
cmp
jmp
rcrb
ja
mov
pop
xor
loope
jge
sbb
sti
lods
sub
jg
imul
push
ret
and
mov
jnp
jmp
imul
mov
sub
leave
ret
dec
rorb
xchg
in
aaa
add
mov
add
cmpsl
repz
pop
clc
int3
pop
inc
add
cmpsb
push
sub
outsl
jnp
adc
or
ret
je
mov
jecxz
jo
xlat
into
fwait
xchg
sbb
fildl
lods
pop
or
lock
fsubrl
cld
pop
or
cmp
mov
jmp
enter
jmp
xchg
xor
inc
int3
pop
imul
sbbl
add
mov
cld
mov
add
ret
pop
mov
ret
jne
mov
pushf
sbb
in
aaa
fidivs
mov
sbb
inc
push
shll
daa
add
shlb
mov
jb
cld
lcall
lods
stc
pop
xor
add
lock
das
inc
mov
adc
mov
inc
lods
xchg
outsb
into
add
or
push
xchg
pop
hlt
pop
pop
xchg
cmp
scas
sahf
daa
lret
and
add
mov
and
sbbl
mov
loope
icebp
ret
arpl
cmpb
dec
mov
loope
stos
pushl
dec
movups
xchg
aaa
ss
ja
cmpsl
xorl
mov
sbb
pop
andl
lar
mov
test
sub
dec
inc
shll
pop
pop
adc
adc
rol
int
xor
lods
insl
jmp
test
pop
cli
jg
lock
sub
lds
jns
and
aaa
ds
and
or
fucompp
test
jns
push
popf
test
xor
mov
fucomp
mov
push
lret
insl
test
mov
aad
std
scas
xchg
mov
push
push
call
std
icebp
out
add
rcrl
loop
dec
jo
jnp
outsl
pop
mov
mov
data16
fidivl
outsl
sub
push
ret
mov
je
xlat
mov
mov
out
mov
xchg
lods
and
dec
pop
ds
pop
add
push
sub
mov
loope
mov
ret
jno
insb
jle
lret
adc
ficomps
mov
mov
or
dec
lcall
in
pop
add
mov
aaa
push
in
add
and
adc
inc
movl
insb
sub
cld
xor
stos
jge
inc
rolb
in
loopne
in
push
call
jns
xor
fimuls
sbb
lods
xor
xchg
pop
shlb
sarb
pop
stos
fldt
imul
imul
imul
or
pop
cmp
cltd
mull
mov
into
jne
push
xor
outsb
nop
dec
xchg
and
pop
outsb
sahf
daa
bound
loope
fcomp
outsl
pop
adc
cmp
xchg
and
outsb
inc
fistl
fs
aad
sub
loopne
fisttps
add
dec
xchg
lretw
fstps
pop
mov
dec
pusha
insl
fildl
xor
cmp
mov
pop
enter
fldcw
lea
xchg
ret
les
mov
insb
loop
cmc
stos
rolb
sbb
or
push
repz
int
sbb
bnd
lods
jecxz
mov
or
cmp
or
ret
int
sahf
out
jecxz
cwtl
daa
pop
xor
notb
pop
nop
gs
lret
sub
orl
cltd
jns
insl
mov
sub
gs
stos
fwait
stos
addb
ficoml
js
cmpl
pusha
fwait
incl
int
mov
add
aaa
movsb
push
add
cli
stos
or
stos
test
cli
ret
jecxz
rcr
lods
in
pushf
cli
stc
xchg
out
add
std
jmp
and
lea
pop
out
ret
stos
loopne
dec
fdiv
mov
out
dec
add
jge
cmp
mov
mov
je
mov
pop
fcomps
rcrb
xor
mov
lods
mov
adc
and
in
sbb
out
mov
cmc
vmread
push
push
out
jbe
mul
add
pop
rolb
roll
dec
jb
jae
pop
sbb
sbb
call
jge
inc
out
add
in
test
cmp
lahf
xorl
jb
testb
fs
jp
dec
divl
mov
fcmovb
xchg
sub
loop
adc
aaa
pop
cmpsb
imul
jmp
in
loope
fucomi
push
popf
push
movsl
outsl
mov
push
out
shl
sbb
sbb
cs
mov
ss
or
push
outsl
jl
in
mov
clc
aad
inc
loopne
xchg
insb
sbb
les
mov
xlat
cmp
mov
add
mov
inc
dec
das
unpckhps
addr16
dec
xlat
add
or
addb
inc
in
pop
xchg
das
mov
push
pop
inc
shll
ror
or
stos
mov
jl
sbb
sahf
lds
sbb
fcmovu
ds
mov
iret
xchg
aad
jo
stos
testb
ret
add
imul
add
xchg
mov
adc
movsl
lcall
cmp
dec
outsl
or
pop
add
pusha
outsl
in
das
jne
gs
mov
sbbb
addl
adc
cltd
xchg
fisttps
cmpsb
jp
in
cltd
arpl
les
fcoms
mov
scas
mov
inc
aam
cmp
adc
dec
dec
inc
xor
and
inc
out
push
jbe
push
mov
push
in
ret
add
fadds
fwait
pop
sarl
out
in
out
fst
jnp
mov
fcompl
push
inc
dec
inc
arpl
jae
mov
mov
addr16
js
data16
out
lea
mov
es
shll
pop
cmp
mov
push
add
mov
xchg
lods
in
xor
ss
imul
and
repz
shlb
neg
adc
ljmp
insb
pop
or
mov
dec
mov
sbb
jb
sbb
scas
push
out
lods
add
inc
fs
push
dec
aas
mov
std
enter
cwtl
shll
add
idivb
fistl
stos
xor
pop
sub
mov
ss
and
mov
rorb
mov
jmp
add
sub
or
mov
negl
adc
cmp
mov
scas
mov
add
ret
test
arpl
xor
mov
sub
hlt
mov
rcrb
outsl
je
push
into
or
es
mov
movsl
inc
xor
push
sub
loop
ret
mov
inc
rorl
out
cmp
push
push
xchg
mov
or
cli
fcomps
movsl
rcrb
das
out
out
rcrl
adc
sahf
mov
jbe
insl
fistl
mov
test
nop
cltd
mov
or
xchg
nop
je
dec
in
mov
inc
or
jo
inc
dec
pop
neg
xchg
pop
sbb
cs
insl
ror
and
lcall
dec
pushf
hlt
ss
ss
clc
call
movsb
mov
les
insb
enter
or
pop
movb
rorb
and
or
dec
ljmp
sarb
out
sbb
lods
adc
rclb
and
test
pop
push
in
shrb
call
cmp
sarl
ret
pop
movsl
inc
jnp
int
adc
daa
cmp
lea
fadd
imul
sub
jne
mov
fisttpll
cmp
cmp
fimull
loope
inc
orl
test
adc
dec
psubw
push
ret
cli
rclb
insb
jns
repz
incb
lods
icebp
ficomps
pop
ss
clc
stc
jle
mov
jmp
popa
cli
pop
xor
out
mov
outsb
rorb
das
fldt
xor
shrl
leave
dec
movsl
mov
out
jecxz
imul
jecxz
push
aaa
push
push
outsl
jae
adc
cli
mov
int
outsb
push
int3
adc
test
mov
push
dec
test
ss
pusha
add
flds
daa
nop
ja
fwait
add
rcll
sbb
adc
imul
loop
xchg
sbb
inc
pop
jb
push
fadds
xchg
mov
jnp
mov
adc
aam
aad
xor
xchg
inc
insb
mov
cmp
cmp
inc
xor
push
outsl
xchg
fdivl
fiaddl
movsw
and
scas
cmp
inc
aas
jb
stos
imul
sbb
hlt
cmp
cmp
ljmp
sub
pusha
adc
inc
and
icebp
into
jnp
loopne
jbe
push
icebp
sub
mov
lahf
sub
cli
cmpsl
enter
cmc
je
xchg
mov
add
call
jnp
insb
sbb
add
lret
aad
testb
jo
push
add
js
mov
pop
insl
fdivrs
mov
in
mov
pop
int3
out
jl
jecxz
mov
xor
sbb
or
nop
ja
dec
mov
dec
sbb
pop
shll
in
cld
xchg
pop
push
fcoms
add
int3
xor
dec
mov
cli
mov
jecxz
mov
dec
data16
push
call
mov
scas
inc
dec
test
pushl
imul
cmc
pop
dec
adc
jp
sbb
insl
or
cmp
int
cld
int
pushf
inc
push
pop
inc
sbb
es
ret
loope
pop
push
sub
aaa
jle
mov
jne
mov
push
insl
jno
insl
mov
test
cmp
cmp
push
mov
cmp
mov
and
sarl
rolb
inc
jbe
mov
shlb
push
jmp
cs
cli
xor
cmpsb
gs
insl
pop
mov
pop
mov
inc
xor
add
inc
add
or
inc
ret
testb
sbb
ja
pop
insb
dec
pop
fists
push
add
pop
xchg
xor
test
cmp
jne
pop
add
test
cmp
sub
pop
popa
adc
and
mov
out
cmp
shlb
xor
adc
jmp
shl
cmp
xlat
outsb
sub
jo
and
imul
xor
movsb
ds
cli
andb
outsb
or
aad
inc
mov
rol
mov
mov
sar
mov
in
or
add
or
loope
stos
xor
mov
add
mov
jo
in
jbe
adc
out
dec
cvtps2pi
dec
mov
or
shlb
adc
dec
sbb
sar
add
arpl
rcrb
mov
jno
sbb
fstl
lcall
stc
mov
movsb
and
mov
popa
pop
xor
pop
out
sbb
icebp
push
and
iret
rolb
push
movsl
test
data16
dec
lock
dec
psubusw
out
add
xchg
cltd
in
jp
rolb
mov
pop
lods
cmp
or
int
dec
jb
sub
mov
lds
sbb
and
je
mov
xor
cltd
clc
mov
inc
xchg
push
fcoml
jmp
fsubs
inc
icebp
pop
lods
lods
mov
das
sub
or
lret
jle
xor
mov
cmp
add
leave
jmp
or
add
sbb
rcrl
call
imul
xor
fidivs
jge
dec
es
mov
and
lock
mov
popa
roll
dec
fldl
int3
mov
mov
das
pop
xlat
outsb
xlat
jo
xchg
pop
or
xchg
int
rclb
ret
loope
cmp
sbb
mov
sbb
dec
cmpsl
add
jl
shl
pop
inc
cmp
rcrl
dec
insb
mov
mulb
dec
xor
in
lock
xor
movsb
xchg
and
sbb
pop
mov
and
cmpb
pop
adc
xor
mov
jno
jle
fcmove
xchg
mov
pop
mov
aas
movsl
cli
aas
mov
in
ja
lea
lret
xor
mov
dec
adc
rolb
mov
iret
pop
mov
fimull
icebp
mov
lea
dec
sbb
daa
sti
fcompl
mov
lods
lock
lds
inc
xor
lea
cmp
dec
insb
shl
lds
out
insb
mov
adc
inc
dec
shrb
out
sub
xor
xor
out
push
sti
lcall
sub
cmc
xor
pushf
dec
hlt
inc
out
adc
fucomp
outsl
leave
and
push
in
outsl
fsts
dec
sahf
pop
inc
mov
ljmp
out
aaa
call
insb
lret
cmpb
mov
add
sbb
cli
cmp
sub
cs
aad
add
loop
mov
jne
inc
imul
loopne
adc
in
mov
clc
out
sarl
hlt
sub
mov
sarb
lret
lret
mov
dec
fistpl
mov
sbb
rorl
mov
bound
jbe
lea
test
sbb
jge
sbb
cld
fidivrs
in
inc
das
dec
jae
adc
call
lahf
push
dec
jae
or
add
pop
into
add
ja
jp
test
sbb
ljmp
cmp
daa
mov
mov
xchg
xor
mov
daa
inc
xor
or
push
and
jae
mov
push
mov
arpl
sbb
xor
inc
mov
in
int3
dec
cmp
cli
sbb
jno
push
xchg
add
je
pop
jle
mov
xchg
repz
fcompl
add
and
popl
rorl
and
outsb
mov
outsb
dec
rcr
push
shrb
out
cs
shrb
xor
mov
mov
lret
jbe
mov
lret
inc
xchg
les
cwtl
pop
mov
inc
loopne
test
shl
mov
ja
mov
idivl
cmp
xlat
mov
stos
lahf
mov
mov
in
js
rcl
out
in
in
or
and
and
sub
add
mov
ffreep
xchg
add
sbb
verw
rcr
loop
stc
cltd
dec
sub
mov
or
js
xor
or
sti
movsl
push
stc
mov
in
clc
ljmp
or
mov
adc
cli
mov
mov
adc
cwtl
jp
mov
mov
and
and
push
addr16
into
sbb
pop
stc
pushf
pop
inc
push
stc
mov
xor
mov
popa
push
xor
adc
fstp
cmc
fnstsw
add
leave
or
imul
sti
sub
add
mov
jecxz
inc
test
jp
nop
scas
mov
sub
jmp
mov
add
call
out
pop
mov
in
cmp
mov
out
add
outsl
mov
jo
push
cmp
int
fdivs
in
ret
jg
mov
mov
shrl
arpl
jg
xor
inc
jne
fsub
psrlw
sbb
mov
jae
bound
test
xchg
xor
pop
fcmovu
aam
incb
loop
mov
sbb
mov
lods
mov
fldl
std
lret
sub
push
mov
jmp
fs
ja,pn
fxtract
decb
enter
mov
mov
idivb
int3
mov
pop
clc
cmpsb
or
loop
loopne
push
out
mov
jo
and
fwait
push
fld
mov
mov
cmpsb
nop
or
or
mov
mov
lock
jb
inc
in
fstpl
push
outsb
repnz
fsub
imulb
lret
pop
pop
jge
jnp
adc
mov
jno
test
inc
jmp
sti
sub
mov
in
sbb
jo
jmp
push
dec
xor
xchg
mov
icebp
pop
out
jp
fsubrl
fcmovnb
mov
shll
popa
arpl
jl
lret
lahf
insb
add
mov
shll
ret
mov
pop
mov
je
lret
lock
insl
push
push
xor
push
xchg
cmp
dec
pop
outsb
in
mov
cmp
ds
aad
push
sbb
sub
movzbl
insb
jle
test
fnsave
xchg
stos
sbb
mov
fmuls
pop
test
mov
je
inc
pop
push
aam
mov
mov
fistl
sbb
xor
inc
movsb
into
rcll
aas
mov
lods
push
push
rol
fnstcw
mov
shrb
shr
xchg
addr16
mov
outsb
push
cmp
xor
popf
mov
jmp
gs
sbb
mov
dec
dec
and
push
shrb
mov
das
inc
jmp
sbb
xor
lods
in
pop
cmp
mov
fdivs
jl
out
outsl
inc
outsb
out
add
nop
aaa
push
pop
aad
adc
pop
fnstsw
cmpsl
pop
sub
ret
add
jp
xor
adc
sbb
mov
or
imul
aam
xor
add
mov
mov
pushf
cmp
dec
sbb
in
adc
pop
gs
inc
std
mov
mov
xlat
mov
sti
in
das
mov
out
aaa
imul
xchg
cmp
and
pushf
cmpsl
int
lock
adc
jnp
aam
dec
pop
mov
loopne
xchg
das
mov
arpl
mov
repz
fmull
fiaddl
outsb
sub
shl
leave
jle
rclb
les
inc
rolb
out
jne
jmp
dec
sub
ret
or
or
data16
repnz
movsb
daa
xor
push
mov
stos
pop
aad
add
adc
sbb
push
jmp
lods
xchg
fiaddl
push
cli
push
push
inc
mov
into
xchg
adc
dec
aaa
push
add
bound
mov
outsl
push
or
fidivrl
cld
rorb
fimuls
sbb
aaa
lds
ds
cmp
or
pop
push
repz
outsl
push
pop
push
pushf
or
cld
add
jb
jmp
mov
mov
int
pop
or
mov
xlat
mov
sub
lcall
xlat
push
push
fimuls
cmp
add
mov
aaa
outsl
or
mov
arpl
inc
xchg
lret
aam
xor
sub
clc
cmp
or
out
sub
js
dec
xchg
mov
cmpsl
adc
ljmp
das
dec
std
loope
jbe
daa
into
and
das
aaa
sub
aaa
daa
push
or
ret
inc
call
jns
or
pop
pop
in
mov
aad
les
insb
in
movsb
stos
xchg
popl
xchg
add
lahf
ss
push
out
and
daa
incl
pop
insl
adc
ss
xlat
or
xor
dec
pop
xor
mov
mov
sahf
iret
or
sbb
add
push
imul
add
adc
add
jnp
sub
push
imul
inc
add
lea
sbbl
lea
sub
jmp
dec
add
addr16
dec
xor
pop
jmp
sbb
dec
push
mov
jmp
scas
pop
and
add
pop
mov
xlat
cmp
xor
sbb
xor
or
xor
ror
fldenv
daa
push
and
dec
ss
decl
insl
dec
xor
xor
outsl
xor
cmp
jmp
jnp
add
stos
sbb
add
sti
cmp
ja
in
lret
or
inc
and
sbb
aas
out
addr16
dec
or
ja
push
iret
out
fiadds
xchg
add
pop
or
cmp
mov
xor
daa
ds
add
outsl
out
imul
add
ss
mov
jecxz
fsubr
jnp
xlat
ds
cmp
jge
jae
add
jae
jmp
testb
hlt
cmp
in
or
or
sub
xchg
pop
lahf
out
testb
sbb
and
daa
ret
add
movswl
push
fstpt
add
lods
jl
stc
add
divb
push
cmp
push
push
scas
and
or
sub
fdivs
xchg
adc
repz
mov
add
inc
lret
pop
fists
fdivs
ret
inc
cmp
xor
cmp
add
fwait
cmp
incl
mov
push
pop
sub
es
into
mov
sub
adc
push
roll
das
cmp
add
cmp
mov
push
adc
lods
das
adc
add
jle
push
aaa
arpl
daa
popf
adc
push
push
cmp
shll
imul
lret
je
cmp
cli
cmp
adc
inc
pop
cmp
cmp
popf
sbb
daa
sbb
call
jmp
or
sbb
mov
pop
and
add
adc
adc
jb
jae
and
outsl
adc
cmp
push
jnp
das
lret
into
push
sbb
pop
pop
cmpsl
and
sbb
and
cmp
adc
adc
lret
cmp
aaa
push
scas
or
push
pushf
jnp
xor
pop
push
add
dec
push
or
push
xor
cli
xor
push
out
or
add
orl
sub
fsubrs
push
push
jae
mov
outsl
in
inc
adc
sbb
jb
lahf
and
daa
add
loope
mov
add
in
rcrl
and
mov
scas
fnstenv
fistl
cmpsl
or
imul
mov
adc
and
pop
idivl
add
add
or
jge
jbe
add
mov
out
int
cs
adc
xchg
lahf
add
jnp
mov
or
rcrl
dec
sub
cmp
leave
mov
popa
or
in
or
or
repnz
inc
xlat
add
jle
xor
push
fdivs
xor
mov
adc
test
daa
xor
lcall
mov
adc
add
cmc
or
not
push
pop
add
add
ss
test
add
idivl
imul
inc
fbld
add
pop
or
fmull
add
cwtl
mov
and
sub
jae
and
mov
inc
dec
out
mov
and
adc
or
pusha
sbb
cli
mov
or
es
xor
pop
leave
mov
ss
dec
icebp
pop
and
movsl
jg
mov
pop
mov
cmpsl
sbb
call
call
jb
data16
mov
aas
addr16
mov
dec
xlat
cmpl
mov
push
xchg
ja
push
call
mov
pop
mov
sti
or
add
jb
ljmp
inc
adc
or
insb
test
jle
cs
pop
outsb
into
sub
enter
sbbl
or
mov
dec
adc
xor
imul
xchg
push
fcmovnbe
lea
and
or
adc
xchg
add
add
fldt
bound
cmp
sub
nop
sbb
dec
or
movsl
aaa
shll
dec
sbb
push
xor
aam
ja
jnp
pop
sbb
sbb
mov
mov
sbb
andb
xchg
or
insb
and
mov
sahf
into
aam
or
daa
jecxz
jl
rclb
cld
cs
xor
fisubrl
fiadds
or
mov
add
mov
dec
mov
sbb
cmp
fsts
testl
sbb
sahf
popa
fidivl
stc
adcl
sti
js
test
xor
jbe
mov
mov
add
jle
inc
data16
push
mov
test
mov
aaa
fs
mov
adc
adcl
dec
enter
dec
sub
cmp
or
pop
fwait
adc
cmp
mov
fldenv
inc
pop
add
mov
rcrb
into
push
xchg
adc
mov
fld
cmpsb
xchg
cld
and
in
mov
mov
pop
or
fnstenv
cmp
cmp
mov
aas
adc
or
add
inc
push
lods
aad
sbb
jnp,pt
sub
iret
outsb
imul
xchg
cmpb
jb
test
adc
mov
insb
test
adc
leave
and
pop
mov
pop
fmuls
cmp
leave
dec
adcl
adc
loope
arpl
mov
mov
cmpsb
sbb
jae
and
pop
jg
lods
fstpl
imul
add
xor
fs
inc
push
sub
fnstcw
xor
adc
add
gs
push
scas
fidivrs
aas
fildll
add
fsubr
arpl
fldl
fistl
subb
and
ja
and
dec
cwtl
adc
xor
ss
fwait
es
add
mov
daa
roll
xchg
xlat
push
push
cmp
xchg
pusha
dec
aaa
fildl
sub
xchg
shl
testl
dec
jbe
fdivr
fcoms
je
lret
aaa
cmp
push
pop
pop
jb
push
insl
add
pop
lret
fwait
xorl
pop
or
aaa
pop
decl
in
mov
test
jnp
dec
adc
jmp
mov
pop
inc
lret
popa
xchg
push
add
ss
nop
jecxz
pop
adc
or
cmp
daa
jne
and
push
repnz
or
sbb
js
jp
xchg
xor
cmp
sub
adc
enter
jno
scas
mov
or
xchg
add
and
adc
es
popa
sbbb
nop
mov
leave
jns
jbe
cmp
push
mov
adc
and
or
mov
fnsave
adc
mov
dec
clc
xchg
push
cmp
pushf
mov
mov
insb
aaa
out
xchg
nop
mov
mov
es
cmp
or
adc
out
xlat
and
insb
gs
dec
enter
in
jnp
xor
imul
push
cli
push
mov
ret
fsubs
mov
fs
push
sbb
mov
addr16
adc
aas
adc
xchg
or
in
test
xchg
adcl
or
into
cwtl
popf
add
es
sti
mov
and
adc
and
dec
arpl
inc
mov
and
push
and
adc
cs
into
inc
into
or
or
test
cld
dec
sub
sub
jne
sbb
jo
push
rolb
fwait
push
nop
push
mov
stos
jecxz
cmpb
cmp
xorl
dec
lcall
sbb
je
ret
bound
sti
and
mov
adc
rcrb
mov
mov
mov
sub
xor
icebp
cmp
mov
dec
xchg
cmp
mov
ds
cmp
xorl
jp
xor
dec
jmp
fdivs
lea
das
push
rorb
popa
movsl
rorl
inc
shrl
xchg
sbb
popf
sub
pop
sahf
add
pop
adc
lret
xchg
popf
into
dec
sahf
fstpl
or
sub
sub
xchg
and
xor
jge
mov
in
or
cltd
sbb
repz
xor
aaa
jbe
push
cmp
cs
sbb
sub
cmp
xchg
dec
nop
sub
adc
dec
cmp
push
sbb
push
cmp
pusha
jo
lds
and
jne
or
dec
insl
dec
rcll
pop
fimuls
and
xchg
rcr
mov
xor
xchg
das
push
andb
pop
lahf
xchg
outsl
adc
lods
movsb
data16
cli
aad
test
jo
cmp
dec
add
repnz
mov
loop
push
mov
xchg
icebp
dec
lcall
pop
inc
lret
fcomps
or
and
nop
cmp
movsb
mov
and
and
bound
or
jns
push
in
adc
sbb
dec
push
pop
out
fwait
inc
adc
jg
pop
and
gs
in
popf
push
imul
jb
daa
sbbl
add
jnp
add
and
xchg
aam
movsl
or
out
pop
or
int3
sub
mov
les
cmpb
and
gs
orb
movsb
out
pop
add
pop
jo
data16
sbb
ret
pusha
inc
int
adc
notl
sbb
testl
pop
push
sub
fadds
mov
xor
or
mov
xchg
test
icebp
dec
dec
out
fwait
mov
or
mov
or
push
idivl
mov
jo
and
iret
push
dec
ss
add
mov
push
jns
ds
ret
ss
out
mov
push
adc
shll
and
and
bound
lea
xchg
xor
fists
add
push
movsb
push
add
mov
xchg
ljmp
cmp
pop
sbb
mov
hlt
jg
sbb
js
cmp
pop
and
out
push
es
jno
jo
aad
push
aaa
sbb
es
jnp
push
jmp
ss
sbb
int3
jle
movsb
iretw
pusha
cmp
sbb
cmp
add
popa
jmp
popa
or
add
dec
or
jle
jne
sub
flds
cmp
fdiv
shll
add
add
add
out
add
cmp
fs
popf
ljmp
out
lret
add
sbb
or
es
addr16
mov
mov
or
add
add
add
sub
js
jb
mov
xchg
mov
mov
imul
fsubs
sbb
in
in
lods
lock
loop
pop
sub
jbe
pusha
sbb
arpl
test
jo
and
mov
and
add
arpl
xor
imul
jne
mov
pop
arpl
jbe
ss
cmp
aad
dec
mov
popa
pop
pop
cmpsl
mov
out
jp
or
jnp
adc
cltd
pusha
scas
mov
add
es
test
jp
cmp
adc
aas
ffree
fisttpll
jo
outsb
imul
dec
add
lods
inc
jge
pop
sbb
lcall
add
xlat
mov
push
or
addr16
sbb
pop
pop
push
and
push
out
cmpsb
pop
add
addr16
add
xlat
cmp
dec
and
adc
fcomps
shll
jge
and
fcmovnu
dec
inc
jae
inc
pop
addr16
insl
inc
js
popa
in
inc
imul
imul
add
add
dec
jno
insl
fcmovnbe
and
dec
xchg
inc
imul
add
xlat
cmc
sub
data16
js
adc
imul
sub
dec
pop
imul
add
bound
push
out
inc
jp
push
add
rcrl
pop
jp
jl
int3
mov
jnp
test
fimuls
jbe
jl
outsb
outsb
mov
test
xlat
test
sub
sbb
push
inc
dec
out
jnp
imul
inc
bound
fdivl
jle
ficomps
clc
add
mov
jbe
mov
jno
adc
outsb
fcoms
roll
dec
aad
iret
mov
jno
in
or
push
mov
cwtl
mov
and
in
into
in
push
add
add
add
cld
pop
jae
add
outsl
js
pop
add
arpl
add
fadd
add
ja
jne
jo
out
cmp
pop
add
insb
hlt
test
and
add
jae
jae
mov
bound
xrelease
mov
int
jle
out
divb
insl
fs
sbb
push
dec
out
xor
sbb
nop
out
pop
mov
cmp
push
arpl
xor
mov
xchg
push
fistpl
addr16
or
push
clc
sbb
mov
push
dec
sbb
or
mov
or
jge
cmpl
cmp
jg
sbb
xchg
mov
in
icebp
fmuls
gs
pop
sbb
fcmovbe
sbb
inc
popa
push
or
push
out
xor
or
mov
popf
pushf
adc
rorb
stc
clc
in
sbb
push
sub
out
ja
arpl
ja
test
add
xor
or
je
popa
imul
or
rorb
push
push
test
push
loope
jnp
adc
dec
mov
ja
outsb
adc
and
popa
push
clc
inc
pop
lcall
add
shl
fnstenv
mov
sbb
cld
fcoms
andb
mov
and
cmp
sbb
or
jbe
fsubs
js
add
addr16
fwait
nop
movsb
xorl
lahf
hlt
lcall
or
jne
push
imul
repnz
xchg
cs
lods
iret
addl
insb
shlb
xorl
fnstenv
adc
scas
cmp
jg
jle
out
lods
mov
fiaddl
inc
push
sub
cmp
js
inc
xchg
jg
js
leave
leave
je
inc
xchg
aaa
adcb
xchg
push
add
xchg
xorb
pop
bound
adc
add
cwtl
pop
or
fisubs
jno
lods
mov
cmp
test
aaa
leave
insl
ja
and
jg
into
xor
mov
jg
dec
cmp
cmp
dec
xor
sbb
push
push
push
push
sub
and
sbb
sub
movsb
popa
and
pop
les
clc
xchg
std
sahf
add
xor
mov
data16
sbb
jle
and
or
xchg
xor
push
shrb
xor
popf
mov
andb
dec
loopne
scas
cmp
and
imul
and
mov
mov
dec
dec
xor
and
addb
mov
scas
mov
push
sbb
lea
xor
js
sbb
lret
dec
or
jno
testl
subb
les
and
cmp
inc
and
push
inc
fs
repnz
xchg
rolb
imul
sti
pop
fists
pop
ret
test
loop
dec
cmp
add
aam
or
test
mov
lcall
pop
inc
jge
inc
cmp
ret
adc
pop
xorl
out
xchg
lods
push
js
cmp
lods
inc
inc
repnz
adc
xchg
xchg
ds
or
adc
push
sarl
test
popf
icebp
pusha
xchg
or
ja
add
adc
dec
or
shlb
xchg
and
or
or
inc
lea
or
xchg
pop
call
pusha
je
stos
add
andb
in
push
out
inc
xchg
add
daa
sub
mov
test
das
jge
inc
inc
ret
cmp
adc
mov
mov
inc
out
xchg
or
jnp
cltd
cmp
ret
pop
ja
daa
lds
pop
pop
popa
rorl
scas
adc
sub
add
popf
xchg
jns
out
dec
out
push
int
popf
and
sbb
shll
int3
jg
daa
xchg
push
xchg
push
inc
daa
andl
dec
or
jl
jae
or
dec
push
bound
dec
mov
inc
sbb
pop
rcl
adc
dec
push
jne
sbb
sti
test
js
aas
inc
pop
xchg
iret
cmp
cmpsb
ds
ficoml
push
push
pop
push
arpl
fmul
js
inc
dec
outsb
jb
xor
cmpsl
mov
pop
pop
in
fldl
jmp
inc
sbb
mov
push
outsb
and
inc
mov
cmp
push
jae
mov
inc
ss
test
push
inc
pop
lods
popa
push
and
insl
xor
and
lods
movsb
popa
push
push
cmc
dec
mov
sbb
sub
xor
fildl
mov
mov
dec
aaa
push
add
divb
lcall
dec
ja
add
jnp
inc
dec
dec
adc
je
fisubl
pop
sub
cmp
mov
and
dec
inc
push
adc
pusha
mov
jb
inc
pop
push
aad
sbb
pop
inc
daa
inc
xchg
popf
jae
sbb
push
rcrb
push
adc
inc
shll
loopne
and
sahf
sub
and
ss
ss
cmp
fs
xchg
sub
insb
ret
dec
jb
arpl
xlat
inc
aaa
push
imul
mov
xor
outsb
jno
and
add
inc
inc
jne
sbb
or
lcall
add
int3
xor
push
pop
xchg
push
pop
imul
loopne
jmp
loopne
push
out
dec
rorb
cmp
add
mov
loop
pusha
mov
jnp
inc
inc
push
dec
inc
rep
arpl
sbb
lcall
xor
jbe
inc
inc
inc
push
pop
ds
pushf
mov
push
outsb
mov
push
sub
clc
push
imul
jae
cs
push
inc
das
addr16
jae
es
call
inc
inc
inc
ja
imul
push
imull
add
inc
push
jp
dec
enter
sub
in
nop
ss
inc
add
test
insb
bnd
add
xchg
in
cmp
push
jo
dec
adc
jb
xlat
dec
andb
jo
ret
mov
inc
cltd
sarl
mov
ret
jnp
scas
add
jp
push
dec
push
jns
shlb
sbb
das
daa
aas
fildll
inc
scas
xlat
cmp
sub
push
shll
daa
lock
insl
fs
push
inc
jne
lock
data16
outsb
push
jmp
add
mov
dec
xor
in
mov
jae
push
or
xor
pop
es
inc
mov
adc
daa
add
bound
cmovl
push
jo
leave
ds
pushf
repz
pop
lret
cwtl
int3
mov
imul
push
jae
jb
sub
mov
jno
fwait
loopne
sarb
ja
jae
data16
daa
inc
scas
and
sbb
push
rclb
movsl
dec
push
imul
and
xchg
push
dec
sahf
gs
or
sarl
shlb
fdivrs
mov
lea
mov
cwtl
jnp
jecxz
arpl
aas
jle
popa
push
push
sub
and
pop
or
andl
bound
dec
mov
fs
lods
pop
fnstcw
sub
sub
sbb
xor
andl
or
cmp
fildl
aad
sub
inc
sub
mov
mov
add
mov
mov
xchg
mov
inc
insb
mov
mov
inc
mov
popa
xlat
mov
je
movsb
xchg
add
xorb
sbb
es
dec
add
lods
inc
add
or
addr16
jl
mov
push
or
jb
xchg
cwtl
call
scas
mov
add
outsb
clc
or
jae
sbb
push
add
adc
adc
pusha
imulb
popl
mov
inc
mov
adc
mov
cwtl
add
push
push
or
sbbl
lea
mov
jnp
pop
sub
push
dec
inc
or
test
xchg
test
testl
dec
nop
sti
mov
jnp
jle
adc
xchg
pop
pop
lods
stos
or
add
mov
push
or
push
mov
xchg
mov
xchg
push
push
cld
sahf
and
aaa
cmp
fisubrl
idivb
dec
dec
sbb
dec
inc
cmpl
sub
and
sbbl
sbb
jge
add
fs
mov
jecxz
fxch
sub
cmpsb
testb
dec
es
aas
add
lret
push
jle
mov
xor
mov
daa
jb,pn
fsubrs
pop
daa
add
in
test
std
dec
dec
xor
sbb
dec
mov
ror
push
inc
ljmp
add
adc
inc
add
pop
std
jbe
stc
xor
pop
or
insl
inc
pop
movsb
sahf
roll
sbb
inc
adc
push
sbb
fwait
sbb
sbb
inc
and
push
xor
inc
pop
or
out
pop
insl
out
fwait
mov
inc
dec
push
and
mov
dec
inc
mov
jmp
out
cmpsl
pop
push
add
imul
push
outsb
pop
aam
inc
movsl
fiadds
cmpsl
or
pop
xlat
mov
add
and
add
nop
fcmovnu
dec
inc
imul
cld
xchg
fs
fiadds
inc
add
imul
jge
add
out
jle
sbbb
pop
cmp
inc
into
lds
mov
ljmp
inc
lret
icebp
out
gs
imul
push
push
cmc
adc
ret
sub
push
mov
iret
cmp
je
pop
cmp
sldt
inc
mov
add
andps
out
rorb
or
jae
ss
sbb
push
mov
xor
xorl
sbb
push
jbe
push
mov
ret
push
dec
cmp
fs
sbb
ss
enter
xor
xor
pop
xchg
jo
jge
imul
xchg
cmpsb
dec
dec
add
js
dec
cwtl
dec
fwait
push
pop
subl
dec
inc
jle
sbb
pop
popa
add
mov
arpl
fsubrl
ss
adc
cmp
or
inc
xchg
lock
sbb
or
flds
dec
dec
dec
push
pop
mov
mov
mov
adcl
bnd
lods
lods
add
sub
out
push
ret
lds
call
mov
or
imull
and
pop
or
pop
mov
add
fwait
mov
inc
and
xchg
subl
sub
or
add
dec
test
ljmp
clc
movsb
das
add
push
hlt
push
dec
inc
cltd
pop
add
add
sub
add
or
pop
sbb
pop
inc
adc
mov
rorb
adc
scas
push
inc
addl
cwtl
xor
add
in
dec
or
push
add
add
inc
subl
mov
bound
cltd
inc
sarl
dec
outsl
fs
loopne
fcomps
push
inc
adc
jb
outsb
je
jbe
mov
outsl
insl
jo
je
rcr
gs
popa
insl
gs
adc
imul
notb
adc
sbb
adc
or
mov
arpl
ss
fsts
movsl
sahf
data16
cmpsl
mov
outsl
imul
fnstsw
imul
js
xor
imul
cmpsl
inc
div
mov
incb
insl
popa
jo
into
out
jbe
outsb
jbe
je
jb
inc
push
mov
jnp
jle
dec
popa
cmp
imul
inc
fidivs
insb
adc
inc
outsb
repnz
data16
jno
cmp
inc
popa
xor
xor
je
mov
pop
fcmovnbe
or
or
inc
push
or
nop
add
mov
add
add
pop
inc
sub
add
cld
or
add
add
push
add
je
adc
in
cmp
xor
xchg
insb
ret
pop
adc
cmp
and
imulb
pop
adc
jg
add
movb
add
out
test
add
inc
dec
inc
inc
mov
xor
xchg
jmp
mov
daa
filds
sti
loopne
ss
enter
rolb
or
xchg
add
add
imul
add
inc
daa
add
jmp
pop
sti
push
daa
add
pop
cmpsb
movsb
sbb
jb
cmp
xchg
pop
ret
daa
add
mov
addl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
