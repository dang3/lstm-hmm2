test
je
ret
add
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
mov
call
push
call
cmp
sbb
inc
pop
ret
jmp
mov
xor
aaa
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
mov
cmp
je
jmp
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
xor
divl
test
jne
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
mov
cmp
je
jmp
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
je
lea
mov
xchg
inc
mov
xchg
mov
dec
inc
inc
lea
mov
xchg
lea
mov
mov
lea
mov
dec
inc
dec
mov
cmp
je
jmp
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
sub
mov
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
push
mov
mov
xor
call
mov
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
mov
mov
call
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
push
mov
mov
xor
call
mov
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
lea
mov
push
jmp
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
je
lea
mov
xchg
inc
mov
xchg
mov
dec
inc
inc
lea
mov
xchg
lea
mov
mov
lea
mov
dec
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
movb
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
mov
push
push
push
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
push
call
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
call
mov
push
push
push
call
mov
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
push
call
incb
cmpb
jne
mov
pop
ret
decl
add
add
pop
jae
push
jae
push
jne
fs
push
mov
add
mov
mov
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
mov
mov
movl
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
fdivrl
adc
mov
cld
neg
mov
cld
ljmp
cld
into
fstpt
pop
enter
jae
add
mov
mov
mov
shlb
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
pop
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
mov
repz
add
mov
je
clc
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
mov
cld
cld
cld
pop
hlt
mov
repz
out
hlt
mov
clc
mov
or
cld
cld
pop
repz
hlt
mov
mov
int
pop
repz
mov
out
hlt
mov
mov
repz
je
clc
mov
hlt
mov
clc
mov
out
repz
clc
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
je
lea
mov
xchg
inc
mov
xchg
mov
dec
inc
inc
lea
mov
xchg
lea
mov
mov
lea
mov
dec
inc
dec
movl
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
cmp
je
mov
subb
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
mov
xorb
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
incl
mov
cmp
jne
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
push
mov
push
call
mov
pop
ret
lea
push
mov
add
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
movb
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
mov
pop
ret
push
mov
add
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
call
call
call
call
call
test
jne
mov
jmp
movw
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
call
lea
mov
pop
ret
lea
push
mov
add
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
push
push
push
call
mov
call
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
mov
pop
ret
add
je
jae
inc
dec
insb
and
and
add
add
add
jae
movl
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
mov
mov
lea
call
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
ret
mov
ret
lea
fwait
add
int
add
add
call
outsl
fildll
add
add
add
xchg
lods
adc
cmp
icebp
lahf
or
sbbb
lret
xchg
lock
in
cmp
add
add
jo
adc
add
add
enter
add
ja
rolb
add
mov
add
adc
lret
add
jecxz
inc
sub
les
jp
pop
clc
out
add
or
add
mov
add
clc
sub
popa
mov
pop
add
ja
add
repz
lahf
xlat
mov
ds
add
mov
data16
xchg
mov
ds
add
mov
dec
lods
push
cmp
add
push
add
jmp
hlt
popf
dec
xor
mov
fisubs
loop
sbb
je
fcompl
fdivl
jo
inc
imul
cli
add
add
jns
add
lock
add
add
lods
inc
jb
add
lret
out
pushf
add
push
xor
mov
fldl
add
clc
add
add
fdivrl
daa
add
stos
add
add
and
test
add
inc
add
lcall
add
add
add
mov
sub
fildl
add
movsl
add
add
pop
add
dec
cmp
js
pop
add
lcall
add
and
add
add
add
add
ds
add
add
mov
test
push
inc
in
fadd
add
mov
lcall
add
pop
lcall
ds
push
inc
add
add
mov
add
and
movsl
add
add
dec
fadds
push
lea
add
jb
jns
add
add
fwait
in
add
aas
add
sbb
shlb
add
divl
test
aaa
loope
arpl
or
add
in
push
push
mov
sbb
outsl
insl
jl
fucomip
xor
inc
xchg
mov
and
cld
cmp
insb
add
mov
ret
or
lret
xchg
rorb
adc
outsb
imul
daa
shrl
in
add
push
or
adc
ss
xor
add
sub
add
lea
jb
xlat
fcmovnbe
icebp
add
out
add
ret
add
add
lock
movsb
pop
add
add
ret
add
add
cmp
mov
jmp
shlb
ss
add
fdivrs
ljmp
fisttpl
add
popf
add
add
mov
mov
mov
or
mov
pop
add
test
mov
mov
sub
add
loope
loopne
mov
mov
push
add
addb
pop
sub
sub
adc
add
test
outsb
icebp
add
pop
jmp
dec
in
jmp
ds
or
adc
fiadds
js
add
movl
sub
mov
add
js
add
test
aaa
int
xorl
insb
rcr
add
stos
add
add
pop
adc
lret
rorl
shrl
fdivl
pop
add
inc
cmp
add
test
add
add
test
dec
jmp
test
jp
loope
sub
lock
add
lods
xlat
mov
add
xor
divl
repnz
or
mov
add
gs
mov
fsubrl
adc
sbb
mov
xchg
clc
mov
or
movups
jp
xchg
mov
imul
scas
lcall
loope
mov
xchg
out
imul
cmpsl
mov
xchg
pop
ret
btsl
aas
pop
insb
mov
jmp
imul
les
data16
notb
push
dec
or
adc
pushf
pusha
ret
pop
pop
or
loop
in
je
push
and
loop
or
jbe
gs
adc
fisubrl
insb
xchg
pop
mov
sub
hlt
push
fdivrp
test
lds
push
pop
mov
jno
mov
push
push
pop
hlt
mov
mov
in
jge
pop
fistps
mov
mov
add
es
fisttpll
setl
xor
cwtl
into
subl
inc
cmp
mov
mov
cmp
mov
daa
jmp
sub
jl
mov
pop
dec
out
ds
sbb
and
rcll
push
les
or
cli
inc
adc
mov
imul
pop
ficoms
dec
and
loope
pop
hlt
sub
sub
cmp
jnp
outsb
adc
repz
lret
push
fimuls
cmp
sbb
inc
insl
add
in
xor
int3
push
sbb
or
sub
movsl
xlat
lcall
mov
sub
or
test
out
jg
leave
repnz
movsl
jmp
mov
mov
sub
lret
hlt
into
cmp
xchg
fiadds
lret
fcmovb
inc
xchg
and
add
cmc
iret
ret
xorb
loope
outsl
jmp
add
stc
lds
push
movsw
nop
push
lods
fldenv
mov
inc
out
jns
cli
js
cmp
lock
or
sub
mov
jl
loopne
inc
lock
or
fxch
adc
jno
adc
mov
lahf
xchg
xchg
add
push
out
js
mov
mov
sbb
mov
mov
rcl
stos
and
sub
outsb
xor
and
repz
jmp
sbb
std
pusha
cmp
xor
push
shlb
pop
pop
int3
adc
push
jmp
mov
das
inc
xlat
mov
inc
stos
pusha
movsb
aas
push
loop
jb
mov
xor
fs
into
jecxz
testl
mov
test
mov
cmp
lret
dec
shll
fstpt
push
mov
pop
movsb
mov
inc
xor
push
pop
das
cmpl
inc
mov
xor
rcll
iret
add
movsb
stc
dec
sub
movsl
cmpsl
call
iret
mov
cld
jmp
pushf
scas
mov
sarb
jns
cmc
sbb
mov
sbb
sub
testl
push
call
pop
and
add
jns
mov
jmp
popa
gs
lods
push
in
mov
inc
pop
fstl
mov
inc
or
inc
push
pusha
cltd
xchg
sti
jae
int3
mov
sub
xchg
repz
dec
popa
adc
test
mov
sbb
mov
sbb
xchg
add
stos
xchg
lret
add
aad
out
pop
inc
mov
lcall
mov
or
xchg
xor
into
out
mov
enter
sub
pop
je
jecxz
ljmp
inc
nop
notb
sub
fcompl
pop
aas
fbstp
addr16
out
pop
jmp
pop
jns
xchg
dec
in
push
fcoml
out
gs
or
addr16
push
pop
jp
fs
mov
dec
cmpsl
mov
jp
dec
jle
aaa
call
pusha
jl
jae
cwtl
std
popa
xchg
ret
jmp
sub
jae
jns
mov
xor
outsb
stos
fdivrs
insb
rcll
jnp
adc
scas
cmp
fs
adc
es
test
enter
or
jae
pop
popl
mov
jno
icebp
psraw
dec
push
fisubl
mov
xchg
pop
inc
loop
loop
js
jo
out
popf
add
lds
into
movsl
shlb
mov
les
cltd
hlt
or
arpl
xchg
jbe
popf
idivb
mov
dec
aaa
jp
lock
inc
les
xchg
xchg
jl
and
pop
adc
push
repnz
into
xor
repz
scas
jo
jg
adc
std
cmp
or
push
cmp
cmpsb
out
dec
in
outsl
adc
call
and
jno
popf
addr16
lret
ljmp
cmc
frstor
inc
add
lahf
rclb
xchg
icebp
in
cld
adc
inc
mov
mov
insl
js
sti
sub
fisubl
pushf
push
and
loope
pop
jo
or
sub
lahf
lret
jbe
gs
cmpsb
mov
adc
lea
fistps
xor
pop
push
and
int
adc
pop
push
out
cs
neg
insb
lcall
cmpsb
and
test
mov
jg
dec
adc
add
fsubl
cmp
sbb
push
fdivrl
push
jnp
testl
mov
mov
mov
into
lret
cmc
xchg
movsb
pop
xor
pop
lahf
loop
cmp
sbb
and
outsl
loopne
data16
mov
xchg
ss
xchg
dec
cli
stos
iret
cltd
xor
dec
jo
stos
in
mov
loop
mov
loopne
xchg
stc
pop
sub
xchg
lods
scas
imul
sti
ret
xchg
pop
repz
cli
fwait
out
push
std
xchg
xlat
leave
outsb
jnp
mov
mov
in
xchg
jns
ljmp
aad
aaa
cwtl
nop
std
cld
mov
inc
xor
cmp
pop
add
hlt
xchg
mov
cmc
cli
lea
stos
imul
jp
xchg
adc
sbb
pushf
aaa
sbb
out
pop
pop
out
lea
lds
cli
aas
hlt
cmpsb
jae
out
imul
rcll
je
xchg
in
jecxz
addr16
sbb
and
cwtl
mov
adc
mov
cmp
push
dec
mov
sub
mov
cmp
lock
sub
mov
mov
aad
es
jmp
es
out
clc
mov
fsubl
addr16
adc
inc
lret
sub
std
cmp
xlat
xchg
push
mov
sar
xchg
rolb
xor
aam
xor
imul
sbb
int
clc
aas
push
dec
ljmp
sahf
lods
inc
add
mov
cmpsl
mov
xchg
test
cs
cmove
add
mov
test
push
push
mov
dec
mov
dec
enter
in
cmp
loopne
xchg
pop
pop
inc
cmp
push
js
scas
add
lods
arpl
mov
xchg
or
mov
iret
cmpsl
mov
or
ja
das
add
dec
int3
mov
inc
daa
adc
or
cmc
stos
fwait
push
pop
push
dec
cmp
stos
jne
jp
mov
mov
out
aaa
xlat
lcall
jns
in
xchg
xchg
xchg
out
movsb
stc
sub
add
xor
jp
out
mov
xlat
xor
scas
xor
enter
inc
insl
pusha
pop
mov
adcb
push
cmp
or
push
cmp
mov
outsb
cld
fcoms
xchg
lea
bound
cmp
mov
scas
mov
and
adc
mov
cmp
mov
inc
cli
aad
jae
xchg
faddl
or
push
lgs
xchg
mov
jnp
lea
imul
fiadds
clc
lds
les
ret
sub
repnz
movsl
loopne
cld
cwtl
shl
insl
shlb
cltd
mov
cmp
and
sub
xor
aaa
cmp
repnz
and
add
pusha
mov
inc
adc
aad
xorb
pop
aad
dec
jecxz
and
pop
jmp
add
push
mov
cmpsb
push
adc
enter
daa
out
fidivrs
mov
shll
idivb
jp
in
in
pop
ret
inc
movsl
pop
les
fisubs
test
jge
test
push
push
mov
or
je
mov
sbb
jns
pop
sbb
ljmp
aad
loope
mov
cmp
cli
outsb
fstps
add
jae
fwait
andb
sbb
cmc
add
int
xor
push
push
and
mov
sti
stc
sub
cmp
push
imul
pop
imul
sahf
dec
cs
cmpb
lret
aad
mov
push
mov
mov
xor
dec
adc
cmp
or
sbb
or
mov
shll
mov
mov
lods
mov
cmc
pop
jmp
sbb
paddusb
jmp
inc
stc
xor
fs
xor
stos
js
mov
xor
xor
xor
mov
add
fdivp
loopne
mul
pop
inc
or
jg
push
imul
out
xchg
sbb
cmp
cmp
mov
mov
icebp
js
sti
cltd
jo
cs
jecxz
aad
sub
nop
fmul
cmpsl
dec
jmp
pop
inc
inc
and
stc
cwtl
rep
xchg
cmc
das
aas
call
into
cmp
pop
sub
in
pushf
loop
mov
dec
imul
das
jmp
aas
xchg
outsl
cmpsl
jb
imul
add
je
xlat
mov
scas
sbb
negb
hlt
std
lods
out
xor
sbb
mov
hlt
push
clc
pop
cmp
fcmovnbe
es
dec
xchg
mov
lcall
aas
sbb
mov
andl
shll
jno
sub
mov
dec
and
out
scas
mov
mov
inc
cld
aas
stc
pop
lret
pushf
pop
sub
and
sub
pop
out
add
rcl
enter
cs
sbb
call
cmp
jp
in
cmp
jmp
xchg
or
out
and
push
jo
lock
push
outsl
sbbl
cltd
add
scas
mov
mov
xchg
and
das
in
test
xchg
xchg
cmc
les
cmp
rcll
lahf
es
jb
sbb
add
popl
xor
mov
dec
xor
and
enter
jbe
ja
sti
pop
ljmp
dec
mov
push
stc
or
xchg
mov
dec
pop
daa
in
inc
icebp
repz
inc
or
push
leave
mov
jns
add
xchg
in
pushf
out
xlat
imulb
add
addr16
xchg
das
jp
push
pop
mov
adcl
jmp
sbb
dec
cli
in
aad
pusha
mov
mov
clc
xchg
push
dec
ret
xchg
mov
xchg
push
lcall
popf
mov
dec
mov
test
mov
and
int
cmpsl
outsl
push
jnp
fldt
and
adc
inc
iret
lcall
pop
scas
sahf
sub
dec
jae
or
inc
test
out
or
out
mov
mov
pop
xchg
or
pop
sbb
das
fildll
inc
ret
xchg
loopne
sub
lea
push
in
jae
inc
hlt
lahf
xlat
scas
arpl
out
xorb
mov
sbb
push
jle
fdivl
inc
int3
pushf
jae
pop
outsl
outsb
lret
push
mov
scas
jo
roll
pop
and
daa
int3
cmp
or
test
outsl
dec
cmpsb
in
ds
in
cmp
scas
or
cmp
cmp
lahf
jecxz
jl
mov
addb
and
mov
cmp
xchg
and
inc
sar
iret
inc
add
and
js
mov
pop
pop
inc
insb
push
cmp
loope
sub
testb
mov
outsb
cmp
sub
rcrb
shrb
je
push
sbb
sub
jmp
mov
int
movl
lcall
lods
fadd
or
sahf
in
cs
sub
inc
jg
pusha
sahf
mov
jl
mov
mov
and
pop
aaa
mov
lock
cmp
jo
test
dec
fadd
or
sbb
cltd
sbb
and
xor
inc
outsl
xchg
daa
loop
dec
and
ljmp
adc
std
lret
lods
pop
stos
inc
mov
sahf
out
push
int3
cli
adc
jp
jne
adc
or
lods
lea
and
pop
pop
push
out
adc
pop
imul
pop
xor
dec
mov
jmp
sub
fwait
sti
in
pop
fistpl
dec
js
cs
outsl
aad
jle
nop
mov
sahf
dec
dec
xchg
filds
dec
out
fxch
jp
les
shll
ds
movb
mov
pop
jbe
call
dec
out
sbb
adc
adc
cmc
into
jmp
mov
pop
xor
add
inc
sti
adc
data16
sahf
inc
dec
scas
xchg
fdivl
xlat
jecxz
adc
mov
insb
pop
cwtl
push
cltd
xchg
mov
push
adc
jbe
dec
xchg
in
cmp
mov
pop
lock
sbb
push
adc
add
dec
and
xchg
test
es
shrb
dec
sbb
outsl
cmpsl
in
or
mov
mov
or
mov
in
jmp
pop
push
adc
shlb
mov
insb
ret
xchg
cmpsb
pop
pop
clc
mov
fstl
fistl
lods
pop
fnstsw
out
insl
dec
call
push
dec
call
loope
jle
test
aaa
mov
movsb
mov
arpl
and
xchg
mov
addb
bound
in
adc
jnp
popa
xchg
dec
push
mov
lahf
cmp
loop
leave
stc
mov
or
into
dec
mov
xchg
test
mov
movsl
mov
dec
mov
cmp
mov
les
add
shlb
test
cmc
mov
and
cs
push
or
xor
inc
out
jg
sub
sti
pop
scas
addr16
jbe
jp
or
mov
push
test
aad
jle
jmp
xchg
imul
lcall
iret
loopne
sbbl
xchg
mov
xor
push
ret
popf
fcmovne
ds
out
loope
pop
dec
mov
nop
xchg
out
adc
scas
data16
imul
in
stc
fldl
ret
mov
inc
adc
cmpsb
leave
roll
add
or
bound
adc
cmp
arpl
pop
imul
jno
scas
xor
rorb
inc
mov
mov
mov
inc
arpl
cmp
ret
jge
rclb
je
lds
mov
test
iret
clc
loope
pop
xor
pop
sahf
nop
imul
pop
mov
into
scas
or
das
aaa
cmp
ficoml
sbb
and
das
enter
daa
in
mov
sbb
jno
mov
jnp
ret
dec
lret
mov
add
and
out
lahf
sbb
xor
test
pushf
fiaddl
pop
lahf
xchg
mov
aas
js
xor
pop
xchg
sbb
push
pop
lods
loope
dec
adc
dec
pop
outsb
lahf
es
fstpt
shlb
mov
xchg
addb
incl
add
push
sub
out
leave
js
sub
imul
jecxz
lcall
out
fsubrl
inc
sub
xlat
sahf
and
test
xchg
enter
ljmp
xchg
and
test
xor
fstpt
or
testl
fwait
inc
mov
jns
lret
into
jae
sbb
jmp
add
mov
sti
outsl
loop
and
stc
mov
decb
adc
data16
shrl
test
out
stc
jae
inc
sbbl
mov
cmp
inc
loop
jns
decb
push
gs
push
pop
test
imul
incl
xchg
mov
mov
sbb
cmp
mov
out
sub
adcl
sbb
aas
in
adc
testl
aad
aaa
xchg
mov
sbb
cmpsb
neg
add
repz
imul
call
int3
and
cld
adc
mov
push
jmp
in
pop
fadd
dec
inc
repz
inc
push
and
mov
dec
es
add
int3
dec
fdivp
jecxz
add
sti
int3
dec
cwtl
rcll
rorl
es
dec
jge
or
mov
adcl
das
std
or
mov
out
or
and
imull
xor
js
sbb
dec
pop
push
cwtl
cmpsl
in
repz
popa
jbe
cld
xchg
jno
lret
jp
jnp
xor
jne
in
xacquire
sub
mov
fcom
sub
call
pop
rcr
sbb
clc
lock
xchg
mov
jnp
dec
mov
popa
shl
lods
orb
mov
rolb
or
arpl
punpcklwd
lret
cltd
outsb
xchg
incl
push
ljmp
inc
cmpsl
test
stc
xchg
pop
sbb
imul
push
mov
push
popa
jns
add
std
and
lcall
push
or
dec
mov
mov
aam
aam
lds
pop
pusha
sub
inc
dec
movsl
cmp
or
dec
outsb
fwait
loope
inc
dec
in
push
iret
or
aam
scas
bound
cmpb
add
loope
lea
repnz
neg
fs
fidivrs
pop
test
cs
ss
jle
xor
in
sub
pusha
call
mov
jmp
push
inc
xchg
sbb
pop
push
test
popf
add
push
es
stos
lret
sub
insb
jge
and
xor
scas
leave
cmp
push
mov
cmc
adc
movsb
sbb
pop
js
ret
dec
pop
sbb
incb
cmc
jae
lret
pop
inc
mov
push
mov
es
shll
xchg
mov
xchg
fisubrs
sti
fcmovnb
ss
shlb
dec
mov
adc
pop
hlt
xor
addr16
add
xchg
xlat
sbb
dec
cmc
aaa
jbe
testb
icebp
sub
int3
jb
repz
int
adc
jle
aas
xor
pop
jb
scas
in
mov
cmp
jne
movsb
test
cmp
or
dec
daa
in
mov
jno
mov
dec
dec
xor
scas
ds
in
movsl
outsl
cmp
and
mov
test
addr16
xchg
test
mov
lcall
je
push
daa
mov
sub
dec
cmp
outsb
add
adc
adc
inc
nop
lahf
sbbb
lea
pop
fdivs
mov
add
sub
int
push
subb
cmpsb
scas
pop
dec
cmp
cmp
mov
inc
sub
movsb
sahf
xor
test
mov
or
andl
test
mov
testb
call
push
lcall
cmp
testl
sub
mov
negl
stc
dec
push
into
push
inc
std
cmc
mov
mov
outsl
inc
mull
stc
pop
in
cmpsl
loop
adc
xor
lods
in
lds
ret
and
xor
mov
cmp
or
outsb
xchg
loope
outsb
xchg
xchg
fbstp
pushf
leave
pop
movsb
clc
dec
adc
dec
test
jbe
adc
hlt
add
xchg
dec
arpl
cmp
aas
hlt
sub
aaa
in
in
xor
sti
cmpsb
shll
aad
push
out
nop
imul
fnstenv
test
dec
xor
and
inc
lea
scas
call
dec
loopne
pop
inc
shrb
jmp
cli
jmp
fcomps
jnp
icebp
inc
jp
inc
inc
xor
aas
jo
inc
jb
mov
into
je
nop
jmp
fcmovne
mov
std
mov
sub
mov
movsb
icebp
mov
sbb
dec
push
mov
mov
mov
or
scas
das
faddl
hlt
mov
cmpsb
push
mov
ljmp
es
cs
call
dec
adc
pop
mov
cmp
aad
jmp
or
cld
dec
add
rorb
sub
aam
icebp
ret
movsl
jb
push
mov
dec
fnstsw
jp
clc
sub
enter
mov
shll
popa
fcomps
lods
in
pop
js
xor
out
xor
push
add
jnp
shrb
cltd
movsl
adc
test
insb
and
sub
into
imul
mov
mov
fwait
sbb
pop
out
inc
and
add
repnz
sbb
xor
add
xor
sbb
stc
mov
xor
pop
sbb
movsl
inc
mov
cwtl
jp
inc
xor
or
fs
fwait
adc
enter
xchg
lods
or
mov
xchg
out
and
insb
aam
xchg
shr
stos
out
sub
pop
pop
xor
icebp
hlt
popf
addr16
lret
xchg
cld
lea
imul
mov
xchg
repz
in
lahf
pusha
adc
fbstp
add
xchg
loope
es
pop
mov
das
push
dec
cmp
popf
sub
mov
outsb
out
ds
mov
rorb
jnp
and
scas
sub
loopne
testl
iret
mov
push
ret
aam
push
cs
inc
es
sub
adc
or
pop
fsubr
inc
or
mov
sbb
lock
imul
push
int3
sbb
mov
add
aas
insl
lcall
outsb
push
hlt
orb
arpl
cmp
js
jge
dec
adc
ljmp
or
sti
dec
int3
pop
movsb
jno
cld
and
call
push
mov
repz
add
mov
push
outsb
xchg
cmpsb
jbe
mov
bnd
enter
daa
jecxz
popa
cmp
adc
fisubrl
dec
mov
cmpl
jbe
hlt
and
cmc
lahf
pop
and
test
xor
inc
insl
xor
sbb
xchg
pop
push
sarb
pop
adc
stos
xchg
loope
sahf
mov
and
lea
or
push
gs
adc
in
rclb
out
mov
sbbl
mov
jbe
das
pop
mov
xchg
xchg
pop
lret
sbb
ficoml
subb
jmp
sub
cmp
sahf
aad
fiadds
movsl
addr16
xchg
inc
mov
daa
stos
mov
divb
inc
mov
cmp
clc
ss
add
lock
fwait
ror
testb
or
cmc
jns
mov
outsl
and
mov
stc
shrd
xor
jp
cli
mov
data16
subb
fcom
out
roll
stos
sub
xor
mov
cmp
mov
ljmp
push
mul
push
push
sbb
push
stos
adc
xor
imul
loopne
mov
dec
xchg
sub
sbb
js
in
add
int
clc
scas
xor
popf
cli
sti
push
daa
xchg
fidivs
nop
inc
lret
addr16
cli
push
fldcw
xchg
les
push
mov
stos
lea
shld
call
lret
pop
stc
and
adc
hlt
push
xchg
nop
popa
pop
push
push
mov
inc
dec
jg
aas
inc
jb
jo
dec
adc
and
jecxz
xchg
out
imul
bound
adc
mov
movsb
mov
fistl
cwtl
out
dec
stc
jne
addr16
das
mov
mov
mov
jne
sbb
insl
jg
es
add
and
loop
cmp
pop
popa
push
icebp
fdivrp
jmp
pop
lret
pop
add
mov
cli
es
mov
imul
pop
jbe
sub
or
pop
adc
xor
int3
push
jp
inc
frstor
xchg
clc
sbb
xchg
xor
ret
ljmp
sbb
ljmp
or
imul
inc
nop
mov
mov
inc
cltd
fdivrl
flds
add
dec
lret
cmp
or
sbb
jns
shl
lock
iret
stos
cs
test
add
xor
mov
xor
jae
xor
ret
mov
ja
pop
mov
cs
ja
push
jl
mov
inc
sbb
mov
fwait
aas
and
data16
mov
mov
fsubrp
out
xchg
mov
out
jmp
add
divl
push
out
sub
xlat
or
mov
mov
mov
lcall
adc
je
mov
adc
pusha
push
adc
xchg
mov
pop
jmp
ljmp
push
or
popf
push
cld
sub
movsb
movsl
stos
mov
pop
and
push
insb
push
cltd
into
jnp
ficompl
popl
ficoml
mov
cli
iret
push
mov
test
sti
and
cmp
fwait
xor
xchg
pop
pusha
or
rcrl
inc
mov
or
in
daa
imul
sahf
fisubrs
sti
lds
rcrb
mov
mov
cmp
dec
mov
add
jb
pop
jbe
cltd
xchg
jge
in
sbb
sti
xlat
or
push
nop
int3
dec
pop
mov
push
inc
xor
xor
adc
leave
mull
xchg
stc
movsb
mov
mov
cmpsl
in
fnstcw
enterw
daa
loop
jno
mov
cld
jno
push
jmp
xorl
cmp
and
in
clc
lahf
jp
dec
push
mov
dec
jp
std
int
inc
cld
push
jmp
pop
jp
push
js
popf
aad
push
mov
push
loop
loope
jge
sub
hlt
jno
mov
xchg
xchg
adc
enter
dec
loop
add
mov
js
in
add
dec
shlb
daa
sbb
in
sub
jl
lcall
mov
outsb
fimuls
es
imul
outsl
add
es
mov
push
out
mov
ret
fdivs
jnp
ss
and
fdivs
dec
push
lret
and
gs
inc
mov
mov
jb
sbb
ds
inc
sbb
sbb
sti
sahf
loop
fcmovu
stc
push
add
adc
jmp
lods
mov
stos
mov
mov
cli
fisttpll
cli
cmp
nopl
dec
sbb
mov
jae
lahf
sub
jmp
mov
adc
fcomp
adc
xchg
aas
add
call
sbb
mov
sbb
inc
shrb
aam
mov
or
std
cs
lret
outsl
aad
mov
mov
or
fldenv
and
out
adc
cmp
nop
mov
dec
loope
pop
lods
cmp
adc
std
pushf
cmp
pop
rcll
inc
addr16
scas
xchg
jb
jae
dec
mov
je
add
inc
imulb
arpl
roll
push
sub
sub
fcmovnb
pop
mov
dec
cmp
ret
das
lcall
mov
add
mov
test
or
pop
cmpsl
loope
jl
dec
out
sti
icebp
out
cmp
pop
pop
mov
add
out
xor
pop
mov
repnz
lods
sub
mov
loop
js
ret
dec
cmp
loope
fisttpll
lds
jae
nop
ljmp
xchg
lods
ret
sub
nop
xor
out
stc
fimuls
mov
aas
movd
jno
lret
cltd
adc
xor
mov
jae
xor
jno
mov
sbb
in
xchg
pop
inc
daa
test
sbb
jge
add
dec
cwtl
lods
pushl
or
aad
push
or
mov
data16
scas
mov
pop
xchg
lea
dec
jle
in
inc
mov
orl
and
outsb
mov
sub
pop
test
stc
idivl
jno
fsubs
pop
dec
jns
dec
push
in
in
fists
jnp
cmpsb
sub
out
pop
addr16
jno,pn
idivl
gs
adcl
xor
pusha
mov
mov
cmp
pop
mov
push
addl
add
shlb
mov
jecxz
pop
stos
and
jnp
in
movsb
cltd
insb
mov
push
pop
scas
repnz
ss
test
fistl
lea
iret
jne
in
ret
mov
insb
in
inc
cmp
int
loop
addr16
xchg
bound
push
or
fiaddl
lock
sbb
aas
aad
stc
jae
ficoms
ss
lret
xor
je
and
or
leave
mov
hlt
push
xlat
aas
arpl
jge,pn
les
sbb
inc
aaa
mov
sub
fwait
adc
add
ds
pop
rol
daa
arpl
xor
jo
mov
and
pop
pop
cmp
xchg
movsb
inc
rclb
cmpsb
jl
add
shl
enter
daa
loope
fstpt
in
xor
rolb
ds
jg
fs
pushf
out
movsl
test
and
pop
addr16
pop
or
push
enter
mov
sahf
adc
pop
mov
xchg
inc
pop
xchg
cwtl
fldcw
int
loope
addl
push
movsb
cmc
adc
mov
or
rol
aaa
sbb
gs
div
stos
push
xor
es
or
popa
and
xchg
arpl
jne
jge
sbb
inc
sahf
sbb
test
frstor
jg
push
shll
inc
and
mov
pop
xchg
and
iret
cmp
outsb
hlt
testl
sar
push
mov
cmp
xchg
cmc
pop
mov
inc
outsl
loope
inc
loop
or
jge
and
adc
insb
inc
lods
lcall
out
mov
xor
push
testb
jg
xlat
repz
cmpsb
fs
xchg
pop
pop
add
pop
imul
rolb
iret
add
sbb
out
xchg
jmp
sub
lods
inc
mov
jae
or
mov
pop
movsb
aad
aad
add
nop
cli
inc
ss
and
push
mov
fsub
inc
inc
nop
loope
dec
sub
lea
xchg
call
enter
pop
pop
aaa
adc
sahf
pushf
in
jae
jo
mov
inc
invlpg
inc
subb
aas
dec
ja
jb
stos
mov
je
cmp
ret
imul
fs
xchg
aaa
repz
mov
cld
add
andb
dec
sub
fcomi
and
sbb
inc
mov
add
sbb
adc
cmc
mov
mov
cltd
rorl
insb
es
ret
insl
mov
mov
cmpsl
loopne
or
jge
icebp
mov
push
xchg
lock
jmp
mov
test
std
dec
sub
xlat
ds
xor
push
and
push
add
fnsave
jecxz
mov
or
popa
sbb
movsb
mov
pop
out
xchg
lcall
paddusw
sub
cltd
dec
insl
adc
mov
mov
dec
dec
cltd
mov
aas
xchg
es
sbb
shll
push
pop
stos
or
sbb
in
mov
aad
imul
xor
xor
add
xor
or
mov
lcall
dec
cmpb
jno
popl
shrl
fwait
popf
out
dec
jno
cmc
jne
in
fdivs
push
enter
inc
adc
stos
pop
in
js
xchg
mov
nop
or
push
pop
or
mov
addr16
cmpsb
jae
sub
in
adc
mov
repnz
add
jo
in
xchg
fists
fucomp
jmp
subb
adcl
xor
xchg
xor
or
inc
stos
xchg
mov
mov
mov
scas
push
xchg
lret
dec
rcll
push
or
inc
push
sbb
cltd
jae
jp
inc
xchg
fcoml
push
mov
xchg
push
cltd
adc
and
sahf
fidivs
stos
cmp
popl
mov
pop
lcall
popa
cmp
jbe
cmp
jge
sbb
aaa
jb
mov
add
bswap
push
dec
int3
pop
mov
jo
cmp
ret
scas
push
data16
cmp
lods
pop
movsb
shrb
mov
shrl
jmp
movsl
enter
daa
loopne
mov
pop
push
jmp
test
pushf
pop
dec
out
inc
sbb
push
push
jg
mov
pop
and
xor
mov
add
push
xchg
xchg
lods
inc
sbb
adc
leave
mov
adcl
push
insl
pop
loope
test
sub
jmp
cmp
rolb
adc
jle
jbe
or
ds
mov
out
mov
iret
cltd
xor
sbb
cmp
mov
mov
dec
lret
ja
inc
ss
int3
test
fadd
aas
pop
sub
ret
test
xor
push
jg
cli
sub
mov
and
nop
cmp
sub
ja
inc
jl
lret
xor
xchg
out
stc
in
sbb
or
cmc
into
mov
ljmp
pop
mov
xor
repz
inc
adc
mov
outsb
out
repz
cli
inc
imul
sub
xchg
add
pop
and
adc
imul
dec
add
cs
jb
pop
sbb
sub
xlat
rcll
push
cmp
mov
jle
fimuls
lahf
cs
aam
aad
mov
nop
aad
in
test
inc
lret
jle
fsts
dec
sub
dec
dec
mov
sbb
sbb
or
xchg
mov
pop
adc
ficomps
push
mov
inc
xchg
sub
inc
popf
pushf
cmpsl
aas
in
pop
jb
push
jns
jns
fidivs
jecxz
js
divb
test
std
ds
cwtl
js
adc
xchg
inc
dec
adc
fcomp
and
sti
adc
lock
das
das
pop
and
mov
sub
and
rcrl
xlat
rcll
dec
decb
fistpll
xor
cld
insb
pushf
xchg
lret
movsl
mov
jecxz
dec
and
push
mov
rcrb
xchg
xchg
aam
mov
leave
push
ret
push
sbb
clc
pop
fidivrl
ljmp
cmp
cltd
dec
lcall
loope
xchg
loope
movsl
push
insb
cmc
mov
add
push
inc
cltd
cmpl
mov
add
xchg
mov
add
lds
negl
pop
jecxz
shl
dec
pop
pop
lcall
push
nop
out
add
add
xor
jnp
fisttps
ja
mov
mov
and
das
mov
pop
pop
xchg
ja
lcall
fists
orl
lock
dec
push
pop
xorb
loopne
scas
cs
das
repnz
mov
in
push
cwtl
xchg
push
or
lock
fstpl
addr16
mov
xor
pop
add
jle
mov
test
out
inc
sbb
xchg
sub
data16
in
push
push
mov
gs
popa
xchg
stos
or
inc
and
test
xchg
ljmp
mov
sub
inc
rcl
iret
xor
popa
pop
das
cmp
jae
rolb
inc
lcall
push
pop
test
xor
in
outsl
imul
dec
ficomps
xor
shrb
mov
scas
pop
lahf
leave
mov
movsl
hlt
lods
out
int3
arpl
mov
jge
or
sbb
pop
sbb
xor
or
in
cs
or
sub
jno
push
in
pushf
inc
xor
or
and
cmpsl
mov
movsb
pop
jecxz
push
add
sbb
mov
jmp
daa
fistps
cmp
push
jno
vhaddps
push
add
les
jne,pt
push
movsl
xchg
and
and
cmpsb
in
add
push
pop
hlt
addl
pop
and
inc
pop
out
test
pop
adc
adc
shlb
aas
repz
and
cmp
add
adc
pop
in
loope
imul
and
sbb
lea
xchg
orb
xor
sub
jl
pop
mov
lret
popf
fsubrl
fisubrl
repz
xchg
sahf
popa
jecxz
test
out
adcb
dec
jg
mov
cld
mov
lds
and
mov
add
in
pop
testl
in
and
sub
mov
cmp
in
test
mov
xchg
xor
dec
mov
lahf
push
jl
andl
jmp
loope
pop
inc
add
ss
mov
lods
push
sub
cli
jbe
mov
push
mov
sub
lcall
mov
push
loopne
jmp
pop
aas
fsts
adc
fistpll
adc
jns
add
shll
pop
sub
mov
xlat
add
inc
sub
jns
mov
dec
mov
mov
aad
ret
inc
nop
mov
jno
jecxz
insl
inc
ficoms
mov
dec
push
loope
push
bound
aam
sbb
call
movb
lds
das
pushf
cmp
mov
stos
hlt
ljmp
and
jb
mov
dec
lock
je
stos
push
es
div
jne
and
cwtl
xor
sub
mov
jbe
incl
sbb
dec
cwtl
or
addr16
std
lock
test
aaa
xor
mov
cmp
and
cmp
shrl
or
insl
addb
stc
jecxz
cmpsl
ficomps
mov
imul
cld
xchg
mov
ds
push
aas
inc
mov
out
jl
imul
daa
idiv
aam
inc
int
jo
into
push
xchg
out
push
inc
ja
xor
fldl2e
add
or
lods
add
jge
popf
movsl
fucomi
and
enter
xchg
push
inc
call
inc
add
clc
cmp
mov
sub
mov
in
xchg
dec
dec
addr16
mov
xchg
add
sbb
ret
push
rorl
test
stos
ljmp
add
lahf
shlb
push
xchg
mov
into
push
loop
out
je
xor
lahf
dec
mov
iretw
or
ret
ja
mov
xor
or
push
pop
fwait
sti
mov
cli
jne
mov
mov
mov
push
jns
push
in
mov
pop
mov
xor
fsubrl
pop
or
sbb
jp
sub
mov
sarb
jle
mov
pusha
mov
and
into
outsb
sbb
inc
mov
xchg
push
adc
xorl
push
pop
ret
in
pop
xchg
mov
mov
cmp
jnp
incl
sbb
imul
push
pop
jno
adc
dec
lock
xchg
push
ret
mov
cwtl
fs
pop
stos
xchg
jae
push
inc
popf
sub
or
mov
mov
inc
xchg
les
sbb
insb
mov
fdivrp
add
lds
push
rol
jg
pop
pop
popf
repnz
xor
sub
idiv
jle
scas
das
adc
cmpsb
stos
jge
mov
xchg
pop
xchg
aaa
lock
or
add
int3
hlt
pop
out
mov
xor
andl
rcrb
xchg
cmp
ljmp
add
sub
enter
daa
fidivrs
xchg
jno
lcall
int3
push
push
ds
out
movsl
cltd
mov
and
mov
notb
push
aad
pop
test
sub
leave
out
push
pop
push
insb
xor
in
jo
push
pusha
subl
bound
sub
xor
cmp
nop
outsb
push
test
adc
xor
insl
orb
sbb
add
lahf
scas
xor
push
push
ds
inc
xchg
sub
movb
sub
push
jp
lods
fcompl
icebp
jmp
loop
out
sahf
add
or
sub
pusha
jg
dec
cmpsl
mov
pushl
mov
jns
and
ljmp
cmp
lahf
data16
idivl
mov
rol
cmp
out
pop
into
test
loope
pop
call
push
outsl
jle
mul
push
test
pop
fs
sub
lahf
lods
dec
or
out
repz
test
movsl
add
or
or
dec
sbb
inc
cmc
pop
gs
add
pop
pop
inc
adc
imul
cmpsb
add
xchg
clc
out
dec
sbb
lahf
popa
mov
sub
outsb
adc
in
mov
icebp
sti
rolb
int
dec
aad
cmp
dec
inc
lds
icebp
ficompl
flds
leave
dec
repz
inc
push
test
dec
call
inc
adc
adc
add
movsb
mov
push
sub
scas
cmpsl
inc
sarl
imul
xor
je
ficomps
jecxz
fs
mov
popa
pop
cwtl
out
mov
mov
clc
dec
mov
lock
pop
fstpt
mov
mov
jp
lock
sbb
push
dec
mov
lock
imul
int3
inc
es
jbe
insl
imul
pop
mov
inc
rclb
cld
ret
lret
adcl
mov
sbb
push
clc
pop
push
or
sub
std
in
push
and
push
dec
nop
dec
xor
lds
jae
test
pop
mov
outsl
push
test
test
push
and
psubd
lcall
inc
call
roll
into
scas
sub
test
sbb
inc
aam
lock
stos
pop
add
mov
les
or
fdivs
call
dec
mov
pop
fdivrs
jge
add
pop
mov
inc
or
rcrl
push
xor
in
std
bound
xchg
movsb
arpl
scas
orps
xchg
push
sub
shrl
lods
jp
mov
mov
loope
mov
aas
adc
jle
loopne
in
cmpsb
jge
and
pop
mov
jmp
loope
aas
add
sbb
fidivrl
fwait
popf
adc
mov
fildll
mov
insb
push
outsl
jnp
jecxz
scas
jle
push
mov
shrl
icebp
and
jp
rcrb
cltd
pusha
inc
push
dec
loope
mov
loop
push
add
flds
xchg
sbb
sbb
into
popf
imul
cmp
shl
icebp
mov
push
aam
mov
pop
arpl
jmp
cmpb
rcrl
jae
aaa
scas
stos
je
addr16
add
mov
int3
fbld
pop
push
xor
push
mov
mov
inc
scas
add
les
movsb
jno
and
cwtl
sub
pop
pop
in
enter
daa
frstor
out
cs
cltd
jl
xor
mov
movsl
mov
sub
test
mov
cltd
sbb
sub
ret
test
pop
cmp
xor
pop
push
push
lods
xor
insl
cmc
sub
adc
cmp
xchg
outsb
mov
and
rorb
cli
leave
sbbb
or
mov
inc
add
add
xchg
push
inc
ret
add
pop
lds
jg
pop
out
push
rcll
fadd
pop
ds
cmc
push
sahf
cmpsl
sbb
inc
mov
stos
mov
stc
leave
mov
cli
sbb
mov
cmp
pop
pop
push
lret
mov
pop
push
mov
inc
loope
into
mov
xor
dec
lock
push
and
fs
sbb
aam
lods
leavew
mov
mov
add
mov
cld
popf
xor
cmp
popf
ja
ja
cmp
mov
gs
loopne
xor
adc
xor
jmp
or
adc
fcmove
mov
sub
ljmp
xor
xor
inc
nop
and
dec
mov
xlat
pop
fnstcw
test
repz
or
call
les
pop
sub
jge
movl
pop
jmp
hlt
and
mov
jl
out
insl
fnstsw
leave
and
jb
nop
pop
dec
fiadds
pop
jecxz
sar
sti
sub
std
xor
xchg
mov
pop
mov
mov
dec
aad
lahf
fldt
and
mov
mov
movsl
das
cmc
pusha
dec
mov
cmpsl
pop
int
mov
inc
jne
es
push
out
push
scas
orb
jmp
mov
sbb
jo
in
jb
lret
repnz
enter
jmp
mov
and
jge
sub
push
addr16
mov
add
fidivs
fstl
pop
clc
enter
scas
add
popa
jns
cld
lods
fidivl
int
sti
sbb
xchg
mov
pop
push
std
or
add
push
mov
test
pushl
inc
daa
cwtl
dec
xor
xor
add
cmpsl
sbb
mov
dec
pop
fwait
bound
enter
jns
movsb
add
aad
call
dec
push
or
dec
pushl
xchg
mov
in
ror
mov
cmp
hlt
ja
test
dec
cmp
mov
dec
fwait
pop
movsb
sub
std
fnstsw
pop
adc
mov
xlat
xor
ljmp
or
ret
test
or
int3
push
addr16
inc
jp
repnz
mov
cmc
and
push
jle
in
test
lds
and
shrb
fisttps
push
xchg
cmpsb
nop
mov
xchg
lods
dec
rolb
and
mov
push
test
arpl
jno
aad
mov
scas
loope
ss
call
jae
iret
push
fcmovnb
ret
pop
pop
aam
addl
fwait
inc
mov
push
repz
test
fiaddl
out
sbb
add
imul
lds
push
sar
xor
test
scas
leave
sbb
pop
hlt
lea
sub
out
jbe
in
jge
cmp
pop
pop
sbb
outsb
hlt
stc
or
xor
stos
test
mov
push
xchg
cltd
pusha
xor
aaa
push
insb
scas
in
mov
cmp
cmp
movsb
cld
cmc
sub
out
bound
or
inc
in
inc
js
enter
daa
fmull
cmp
into
js
add
gs
dec
stos
xlat
cmp
fiadds
dec
and
mov
push
jnp
call
push
mov
dec
cmp
pop
fs
js
push
jle
into
into
mov
loope
lods
add
leave
dec
cmp
xor
adc
ljmp
xorb
mov
add
mov
cmp
int
leave
push
sub
pop
inc
cltd
push
lcall
cmc
fdivl
subb
sbb
jo
push
andb
jg
mov
mov
sub
xchg
mov
mov
mov
and
pop
push
mov
xor
adc
or
lret
mov
out
mov
rcrl
jno
sub
outsb
adc
cmc
ljmp
outsl
cmp
push
loop
enter
or
fs
adc
mov
subl
mov
cli
setbe
xor
int3
sarb
add
or
add
incb
addr16
loopne
jno
pop
pushf
sub
nop
inc
inc
imul
push
aam
lcall
sbb
adc
mov
mov
in
mov
cmp
push
loope
cs
push
jae
or
nop
inc
lret
sbb
cmp
inc
pop
pop
jle
out
dec
mov
js
mov
push
aam
and
inc
lea
pop
call
inc
inc
in
fimuls
jecxz
cmp
cmpsl
jmp
or
xchg
jmp
jecxz
or
test
push
lret
lock
push
subb
xor
jecxz
pusha
dec
idivb
cmp
jb
xchg
mov
mov
push
cmp
dec
rcrb
faddl
mov
imul
das
aam
pop
mov
pop
lds
inc
dec
scas
rcll
cmpsl
enter
push
dec
ljmp
mov
lock
cld
sbb
jae
outsl
inc
mull
aam
pop
pop
inc
outsl
adc
or
sti
aam
fcoml
sbb
lahf
cmc
fnsave
jb
add
fcoms
pop
into
shll
jne
lods
inc
rcrl
out
dec
push
scas
xchg
std
sub
dec
sub
add
movsb
cltd
pop
roll
mov
rorl
sbb
test
xlat
popl
jmp
push
les
inc
mov
stos
mov
inc
push
sbb
call
add
pushf
das
sub
xor
xchg
pop
or
jne
data16
mov
das
add
mov
repz
ss
xor
imul
mov
fwait
mov
ljmp
xor
out
stos
xor
sub
in
sub
in
sbb
out
mulb
or
test
cmp
add
ret
inc
jnp
cwtl
out
mov
pusha
pop
stc
imul
jns
arpl
sub
xchg
ja
cmp
push
pusha
xorb
xor
push
pop
loopne
stos
les
jbe
es
inc
inc
mov
jbe
pop
scas
inc
clc
inc
push
das
xchg
adc
cltd
lahf
ret
popa
pop
or
jecxz
mov
or
or
xor
gs
add
sbb
aaa
jns
xchg
leave
dec
sbb
or
or
in
stos
vpmulhw
push
cmp
mov
sti
cmp
leave
nop
fisubrl
arpl
sub
jbe
xor
jge
push
xor
ret
aaa
sub
push
cmp
inc
sar
mov
fistps
add
xor
xchg
jmp
scas
ret
dec
ja
mov
loope
xchg
notb
jno
cmpsb
mov
icebp
in
sub
enter
daa
sub
jno
lock
jl
imul
ds
icebp
movsl
scas
mov
and
aaa
fcompl
dec
jecxz
test
mov
and
xor
pop
mov
js
jl
pop
or
push
mul
fwait
xchg
sub
push
push
cmp
clc
dec
adc
lds
out
lds
stc
xor
loope
xor
ret
inc
push
inc
test
int
bound
pop
ret
xchg
sbb
jg
adc
sbb
lock
in
sbb
push
cmpb
jg
push
mov
push
mov
les
ljmp
roll
es
or
idiv
clc
cltd
lret
and
xchg
add
adc
js
cmc
mov
pop
xor
adc
xchg
iret
movsl
addr16
icebp
mov
sbb
jb
xlat
iretw
sbb
mov
sbb
mov
jecxz
xor
cmp
or
leave
test
cli
add
sub
mov
mov
lret
and
cwtl
adc
sub
adc
push
pop
xchg
xlat
cld
aas
cld
sub
in
mov
cmc
mov
dec
notb
cli
aad
lock
nop
sbb
testl
imul
xor
repz
daa
mov
leave
inc
call
ret
pop
xchg
xchg
test
jne
aam
out
aas
jmp
loopne
pop
and
inc
cmp
dec
inc
and
lret
seto
cmp
dec
int3
sbb
cmp
testb
mov
or
push
mov
xchg
orl
mov
mov
inc
mov
ja
lock
decb
mov
inc
mov
adc
cli
cltd
shl
xchg
mov
push
outsb
dec
insl
push
test
sub
scas
andb
pop
mov
lret
rclb
mov
and
outsl
data16
arpl
mov
aam
mov
ret
lods
mov
push
xchg
aad
fstpl
stos
xchg
sub
imul
int3
lret
push
popa
cmpsl
loop
lods
mov
adc
pop
mov
in
inc
push
adc
pop
imul
test
cltd
xchg
push
test
fdivs
dec
pop
mov
add
jg
add
xor
shrl
stos
cmpsb
sbb
push
mov
push
outsl
add
mov
pop
xor
or
mov
xor
mov
adc
dec
push
mov
ja
popa
das
dec
and
inc
shlb
or
xchg
xchg
ret
movsl
add
xchg
cli
jecxz
jbe
dec
out
mov
bound
or
jns
bound
in
fwait
inc
xchg
cltd
sub
out
lcall
shlb
cmp
jp
lea
out
out
mov
pop
in
dec
sbb
xlat
xor
dec
aas
movsl
xchg
dec
mov
int
inc
jo
inc
push
and
popf
mov
mov
pushf
rcl
dec
scas
and
lods
push
jnp
sbb
scas
cmpsl
mov
push
jbe
push
adc
pop
mov
mov
or
jne
inc
mov
imul
pop
inc
test
inc
addr16
andb
or
cmp
sahf
imul
faddp
jl
or
xor
imul
pop
dec
sahf
hlt
and
arpl
scas
xchg
jbe
repz
push
leave
dec
sbb
repz
in
adc
fdivr
stc
int3
mov
nop
mov
xor
in
xchg
shrl
push
divb
cmp
jb
adc
push
ret
xsha256
cmpsb
adc
in
adc
enter
daa
fisubrl
cmp
pop
jno
push
bnd
inc
jne
mov
stos
movsl
mov
mov
lahf
jb
adc
adc
push
push
loopne
je
pop
repz
ret
pop
mov
mov
pop
dec
dec
pop
push
out
imul
out
jmp
outsb
loopne
lds
mov
lea
sbbb
sbb
lret
in
das
shlb
jle
push
dec
adc
int
loopne
sub
les
inc
sbb
lcall
paddusb
inc
cltd
sub
mov
sbbb
adc
ret
and
mov
ds
and
les
ss
idivl
mov
outsb
idivl
or
mov
inc
sbb
push
xlat
into
xor
add
js
int3
xor
das
loop
mov
stc
jle
lahf
fs
and
push
ja
lods
jmp
dec
mov
pop
out
and
in
xor
dec
sbb
int3
stc
dec
xlat
icebp
push
loopne
cs
pop
ficompl
imul
push
add
push
sbb
mov
jle
add
mov
pusha
adc
cs
into
push
aad
cmc
enter
pop
dec
mov
add
fstps
add
mov
inc
sub
or
push
test
pop
inc
dec
test
pushf
xchg
test
icebp
pop
fsts
inc
shlb
aas
repz
cmpsb
or
jb
fdivrp
dec
inc
pop
jecxz
leave
idivl
jecxz
insb
and
les
inc
cwtl
fisubl
mov
andl
mov
aam
dec
jmp
into
das
xchg
ret
cli
mov
int3
mov
pop
cld
dec
shll
nop
shrl
add
andb
loop
xor
outsb
mov
inc
mov
cmp
mov
and
rorb
jl
aam
out
ret
cmp
push
jg
ffree
addl
ljmp
sub
or
out
adc
xor
mov
pcmpeqd
mov
lret
push
clc
test
mov
xchg
fs
push
lahf
test
xchg
mov
roll
xlat
xlat
pop
pushf
fsubrl
push
bound
daa
add
es
fnsave
insl
mov
adc
push
jo
adc
shlb
mov
add
adc
ds
imul
fwait
out
xchg
idiv
jne
test
mov
xchg
adc
imul
jns
aas
sbb
fidivl
xchg
call
mov
sub
mov
pop
mov
mov
or
mov
sti
push
push
jle
int3
cmpsl
in
repnz
pusha
xchg
lret
imul
mov
or
repnz
fwait
std
popf
scas
lahf
or
stos
mov
test
push
jmp
aad
or
push
mov
lret
push
iret
insl
and
movb
inc
xchg
dec
sti
jae
addr16
inc
lods
loop
or
shll
inc
add
and
popf
call
mov
pushf
mov
jno
sub
cli
lds
in
dec
rorb
jne
jmp
mov
pop
cltd
hlt
outsb
sbb
out
stos
jge
sbb
mov
aaa
stos
out
or
or
add
mov
pop
shl
push
aas
sub
xor
dec
push
jbe
adcl
in
popf
cld
adcb
push
cmpsb
xchg
push
cwtl
in
clc
sbb
enter
daa
fstps
cmp
jno
faddp
jl
out
int3
dec
test
xchg
movsl
mov
xchg
enter
clc
push
hlt
jbe
test
and
out
mov
pop
pop
js
adc
subl
mov
sub
loope
cmp
inc
xor
inc
pop
je
das
jnp
sarb
sbb
imul
sbb
hlt
add
in
xor
sbb
dec
push
pushf
int
inc
jnp
in
cmp
rcrl
push
sub
stos
into
sub
repz
mov
mov
mov
jmp
mov
adc
and
mov
test
inc
or
jp
add
shll
sbb
push
pop
into
pop
sbb
cmc
aas
mov
xor
mov
outsl
and
cld
push
stc
xor
pop
adcl
aad
xchg
lods
rcl
or
out
stc
sbb
xor
and
sub
xor
out
pop
cmp
dec
jge
pop
stos
push
pop
stc
popf
hlt
adc
js
imul
and
inc
lods
push
xchg
ljmp
movb
jp
xor
mov
lret
ss
js
aad
pop
fsts
sbb
iret
cld
fsts
pushf
repz
sub
adc
jno
shr
pop
divl
pushf
cmp
adc
call
jb
inc
inc
dec
out
inc
pop
repnz
inc
or
jb
mov
dec
mov
rolb
pop
das
inc
std
iret
int3
or
mov
mov
stc
cmpl
and
fldt
nop
mov
out
adc
add
jno
push
mov
jecxz
outsl
roll
push
loopne
in
xor
dec
fistl
xchg
jne
ret
shrl
lret
scas
inc
dec
mov
inc
fwait
xor
pop
mov
cmp
sub
mov
aam
imul
push
sbb
clc
mov
icebp
xchg
stos
push
dec
ljmp
and
xchg
dec
out
je
int
rorb
int3
push
imul
inc
cltd
add
filds
push
inc
xchg
sbb
addr16
test
inc
push
xchg
repnz
sbb
aaa
rcrl
fistps
loopne
test
mov
add
inc
sub
xchg
xor
mov
push
xor
inc
out
and
fs
dec
in
cltd
add
pop
and
mov
fimull
or
ret
sub
mov
inc
mov
pusha
repz
dec
cmpsl
sti
bound
xchg
gs
rcrb
aaa
ja
out
cmp
push
or
imul
jp
neg
mov
lods
nop
mov
push
stos
jle
stos
ret
in
incl
fisttps
adc
push
out
xchg
fdivs
rclb
push
lods
popf
and
push
sbb
mulb
mov
stc
jbe
orl
scas
insl
or
push
add
pop
adc
fcmove
int3
in
pop
ret
adc
mov
xor
inc
jae
cltd
adc
cld
push
or
mov
lock
push
scas
and
xchg
and
imul
fmulp
pop
xor
mov
push
mov
hlt
je
leave
cmc
adc
hlt
mov
mov
jge
ljmp
push
clc
or
jne
add
fsubrl
jbe
jbe
add
cmp
and
sysexit
jne
mov
scas
pusha
ret
inc
sbb
cmp
or
push
sub
cmpsb
pop
mov
dec
enter
daa
fcomp
cmp
mov
dec
test
push
frstor
repz
mov
push
inc
test
jmp
mov
or
jns
outsl
pop
add
xchg
pop
lret
push
mov
sub
out
cmp
add
rclb
xlat
popl
lock
sbb
lock
push
push
lea
add
sub
movsl
pop
inc
cmpsl
mov
push
test
fcompl
lcall
push
and
pop
cmpsl
add
imul
sub
ds
ss
fadds
out
idivl
fidivrl
dec
cli
cmp
sbb
pop
mov
xor
push
outsl
mov
jbe
stc
in
jge
sub
push
adc
cmp
lods
mov
mov
out
push
lods
cli
fildl
dec
xor
int3
mov
fistpll
adc
loopne
cmp
adc
pushf
cmp
xchg
jno
bound
xchg
mov
sbb
push
mov
xlat
mov
in
fisubl
xor
fiaddl
cs
pop
mov
nop
lods
cmp
dec
jl
xchg
iret
jp
lret
xchg
add
movsb
pop
xor
xor
stc
rcr
call
aas
mov
aam
adc
jmp
jmp
incl
inc
into
cwtl
add
jne
sbb
in
fidivl
rorl
pop
cld
jecxz
mov
jbe
push
cwtl
push
adc
mov
adc
mov
fistpl
dec
lods
mov
clc
cli
lock
push
xchg
das
push
sbb
mov
outsb
sti
mov
fnstcw
insl
ror
or
xor
cmpsl
xlat
es
dec
das
ret
mov
movsb
mov
inc
xor
pop
shrb
xor
int3
sub
xchg
jge
sarb
scas
ret
pop
xchg
push
fldt
aad
adc
or
out
dec
pop
xchg
jmp
cld
pop
popa
in
add
lods
icebp
cwtl
jbe
data16
xlat
or
xchg
sbb
push
inc
mov
in
add
cmovo
mov
add
lahf
icebp
test
xor
out
sbb
jns
pop
repnz
and
test
cltd
add
pop
test
xor
mov
sub
test
cmp
mov
fisttps
dec
cld
push
nop
inc
xchg
or
and
insb
ja
jne
mov
out
daa
aad
enter
lock
out
cmp
sub
mov
mov
jp
mov
cmp
mov
movsl
movd
loop
call
jmp
fbld
ret
add
and
sbbl
stc
popf
std
pop
mov
pop
jns
stos
mov
movsl
push
insb
in
jnp
xor
scas
shlb
cwtl
adc
mov
es
aam
out
lcall
push
les
mov
push
lcall
xchg
and
jl
imul
fidivs
scas
lds
test
mov
inc
lcall
add
pop
arpl
fcmove
jbe
out
sub
sbb
sbb
or
xchg
and
popf
add
popa
out
xchg
pop
xor
fisttpl
add
sti
pusha
jo
or
scas
aas
icebp
pop
and
sti
stos
cmp
dec
inc
push
jp
jne
lcall
enter
daa
xlat
aad
cmp
ja
jno
pop
and
cmp
aad
cmp
lea
movsl
lret
and
outsl
xchg
fisubrl
push
mov
bound
out
cmp
sub
scas
jo
std
jg
or
inc
push
lods
iret
loope
pop
mov
daa
shlb
sub
outsb
or
push
shlb
add
xchg
test
nop
add
dec
shlb
inc
lahf
push
push
js
int
mov
sub
inc
mov
mov
inc
cwtl
push
fstpt
sti
sub
out
jns
fwait
test
stos
push
sub
xchg
jg
outsb
mov
mov
clc
mov
popa
aas
fnstsw
outsl
fdivrs
or
jne
popf
shl
xchg
mov
mov
pop
test
into
fisttpll
add
mov
iret
outsl
xchg
sub
fwait
stc
mov
pop
int3
adc
inc
cmc
lods
mov
mov
xor
cli
push
and
xor
cmpsb
cmp
push
jb
xor
cs
xchg
loopne
pop
aaa
stos
push
adc
das
das
adc
clc
adc
gs
dec
dec
dec
sbb
cmp
xchg
clc
loopne
sub
mov
mov
lret
dec
subb
nop
mov
dec
jnp
jbe
enter
loopne
scas
lret
pop
and
xor
inc
call
mov
test
adc
fstpt
xchg
js
jmp
out
pop
ret
inc
push
dec
fldl
sub
aas
sbbl
jb
add
test
into
je
jl
jecxz
jl
testb
test
or
sub
push
push
lock
or
mov
xchg
push
stos
inc
cmp
das
dec
xor
icebp
jnp
and
clc
and
push
es
adc
insl
mov
imul
in
mov
and
add
out
jnp
lret
mov
test
fistl
rolb
aam
sub
push
xor
fwait
push
ret
call
xor
fnstsw
xchg
repnz
sub
sub
sbb
popa
add
xchg
lods
pop
pop
mov
cmp
push
pop
dec
cmp
xchg
cwtl
in
fwait
push
inc
cltd
jo
mov
arpl
xchg
dec
lahf
mov
arpl
push
push
pop
popf
lret
call
sahf
add
ja
test
dec
je
xor
ja
cmpsb
cmp
xor
sbb
mov
jle
aaa
mov
lcall
dec
out
mov
inc
cs
adc
fwait
jae
clc
dec
dec
movsl
or
mov
ss
push
pop
mov
gs
out
jg
mov
xchg
aad
mov
sbb
iret
sub
mov
sbb
mov
jp
xor
mov
dec
xchg
jae
inc
inc
xor
out
inc
in
bound
ffreep
dec
jg
cwtl
xor
test
cld
push
das
sub
popf
and
push
mov
cwtl
imul
and
imul
xchg
mov
push
pop
scas
xor
dec
push
xchg
fwait
sub
not
sahf
iret
mov
sti
pop
push
xchg
movb
jae
enter
mov
push
jle
test
mov
pop
xchg
jl
int
call
add
cmpsb
lds
out
mov
lcall
hlt
dec
sbb
arpl
jo
jbe
adcb
fwait
jl
imul
or
add
xor
sbb
dec
inc
lahf
pop
pop
jno
push
call
lret
in
pop
pop
pop
scas
push
and
and
lods
cmp
out
movsb
notl
push
leave
mov
cmpsb
sbb
shll
pop
shlb
push
fwait
cmp
push
mov
mov
inc
stos
adc
mov
dec
movsl
shll
js
sub
sub
insl
ficoml
push
sbbl
cmpsl
jmp
mov
js
dec
mov
push
push
ljmp
insl
xor
in
ds
insb
pop
mov
or
rorb
movsb
les
or
pop
add
add
xor
adc
push
xlat
or
sarb
sbb
ds
push
lcall
mov
jb
push
sub
lret
sahf
sbb
push
addb
jg
cmp
jb
sub
and
es
cmp
ja
pop
divl
lret
ffreep
jns
inc
mov
jo
sbb
mov
cmc
xchg
ds
xor
jns
outsl
jbe
dec
loop
add
int3
fs
lahf
adc
push
mov
jne
lods
xchg
mov
xchg
fdivr
inc
icebp
xorb
mov
cmp
cmpb
pop
ds
gs
loopne
cltd
sub
ss
addb
adc
loope
add
das
ret
and
cmp
sub
aaa
adc
sub
popa
mov
or
cmp
cmp
and
in
lods
aad
repnz
arpl
dec
cmp
cmp
imul
mov
les
lcall
fstps
call
cmp
xor
adc
decb
jmp
xchg
mov
gs
incb
pop
jmp
aas
and
sub
dec
pop
int
je
push
std
jecxz
mov
not
xor
std
les
cwtl
aam
mov
sahf
pop
mov
pop
pop
dec
inc
pop
neg
testb
mov
lahf
adc
push
dec
mov
mov
test
xor
dec
jg
jo
and
fistps
xchg
insl
mov
jmp
scas
jno
icebp
cli
sbb
cld
sbb
cs
sti
les
mov
push
adc
incb
jle
in
call
aam
jmp
loope
popa
scas
pop
frstor
xchg
gs
xchg
addr16
pminsw
dec
and
and
lods
repz
les
out
popf
pop
ss
cmpsl
addr16
push
cli
cmc
jns
repnz
and
scas
add
sub
push
roll
push
mov
push
xchg
dec
sbb
lods
popf
pop
dec
pop
jge
push
test
push
out
push
rolb
jno
jmp
mov
or
add
mov
shrl
pop
push
push
mov
or
dec
loop
loopne
lds
or
ret
mov
mov
addr16
cwtl
ja
cmp
cmp
clc
imul
in
adc
xchg
and
mov
lahf
xchg
jge
sti
push
popa
or
stos
jp
pop
sub
lds
jle
stc
call
pusha
std
pop
int
in
or
repz
inc
xchg
cmp
pop
cmpl
fsts
repnz
popf
dec
adc
mov
xlat
fisttpll
and
push
sbb
jnp
shlb
scas
out
push
fldenv
adc
add
iret
jmp
push
mov
inc
rclb
xchg
movb
xorb
inc
std
addl
rcrl
sbb
stos
push
imul
inc
lds
stos
lods
popa
mov
in
add
pop
adc
arpl
test
jge
lret
and
outsb
aaa
cmpsl
popa
add
add
cmp
int3
aaa
imul
lret
in
or
mov
inc
scas
std
pop
cld
and
pop
imul
fisttps
leave
repnz
cmpsb
mov
push
and
leave
repz
aad
push
cmp
push
jno
imul
mov
cltd
sarl
inc
and
cmp
or
push
scas
test
dec
enter
push
pop
pop
jne
xor
ss
xchg
cmpsb
loope
sahf
lds
sbb
iret
pushf
loop
dec
movsb
mov
and
jnp
mov
dec
sbb
scas
add
push
inc
xor
stos
inc
int
scas
out
sub
orb
imulb
mov
sub
cmp
and
jg
or
mov
sbb
mov
insl
jae
dec
push
js
pop
jae
arpl
fdivs
cmc
test
jbe
sub
pop
mov
mov
sbb
rcrl
xor
rep
push
cltd
icebp
loop
sbb
int3
cmpsb
jl
dec
push
data16
pop
lods
outsb
mov
mov
call
pop
cli
je
mov
mov
test
out
adc
jnp
mull
mov
ja
jne
in
push
inc
das
imul
pop
in
add
jne
sbb
mov
cmpsl
xlat
jbe
fsubrl
inc
stos
out
mov
ja
add
cs
stos
push
aad
jmp
nop
mov
mov
pushf
pop
nop
fnstenv
jg
lds
repz
push
xchg
cmp
out
lea
addr16
call
mov
imul
jg
adc
add
inc
arpl
cwtl
inc
mov
aas
shll
jb
sbb
dec
xchg
inc
mov
jecxz
xor
adc
imul
cwtl
adcl
test
xchg
loopne
dec
sub
into
push
mov
lock
fs
in
mov
mov
pop
cmpsl
sub
lock
sarl
cltd
mov
mov
pop
dec
xchg
and
loope
out
roll
cld
inc
je
lret
push
pop
mov
pop
push
pushf
mov
sbb
cmp
aam
mov
xlat
push
and
mov
clc
mov
dec
repz
sahf
lods
xor
mov
add
ret
push
aad
loopne
push
inc
popf
add
out
jns
fidivs
test
cmp
dec
insl
popf
ret
mov
xchg
aaa
aam
shlb
or
mov
xor
stos
inc
out
push
xchg
add
add
lods
add
xor
cmp
sub
inc
and
add
fs
adc
add
push
ja
aad
mov
or
dec
sbb
adc
pop
xchg
mov
pop
addr16
les
bound
sub
in
mov
out
repz
sub
cmpsb
mov
outsl
jp
cmp
mov
movsb
mov
mov
cli
jle
cmpsb
xor
std
sbb
filds
lret
mov
jmp
add
add
mov
push
mov
push
out
sti
icebp
enter
jp
sub
cmp
and
repz
dec
ds
ds
mov
inc
lret
sbb
or
mov
adc
stc
sub
jl
xchg
ficompl
cs
andl
ficomps
rol
aam
rcl
fstpt
inc
inc
das
leave
rcrl
hlt
in
mov
inc
push
push
jge
fstp
sbb
push
sahf
or
and
int3
and
mov
cmpb
xchg
push
jo
cmp
fcoml
push
cmp
inc
repnz
addr16
test
in
jnp
out
enter
daa
aam
pushf
cmp
push
jno
cmpsb
stc
jl
mov
dec
and
jae
fistpll
sbb
adc
test
pop
lds
inc
into
push
iret
test
pop
js
mov
pop
sub
mov
jne
sub
inc
fdivrs
dec
mov
pop
adc
ret
popl
xchg
push
sbb
movl
jae
push
pop
icebp
pop
int
test
sub
pop
cmp
push
test
lock
fmul
pop
imulb
cmp
and
bound
rolb
cmp
push
mov
ljmp
cwtl
mov
popa
cmpsb
pop
cmp
popf
fsubr
and
divl
arpl
shll
mov
into
xchg
xor
cmp
xor
mov
outsl
xor
mov
aam
ret
xor
fs
lret
adc
fwait
or
data16
lods
push
jmp
xor
mov
popa
cli
cmpsl
scas
and
xchg
or
push
cld
adc
pop
insb
xchg
sahf
cwtl
pop
gs
adc
gs
mov
xchg
pop
jns
sub
out
imul
mov
add
xchg
xchg
cmp
sbb
in
xchg
stos
xlat
mov
stos
sub
pop
sahf
in
loop
mov
cs
sbb
nop
sbb
lret
dec
clc
lods
fiadds
xlat
push
cmpsl
sbb
rcr
imul
xorb
cmp
and
dec
pop
in
cmp
and
scas
repnz
xchg
mov
cli
pop
stos
data16
ljmp
aas
pusha
dec
insb
jb
testb
pop
imul
jecxz
lock
push
daa
adc
cwtl
cmp
pop
mov
jo
mov
and
subl
push
mov
lahf
lds
lock
hlt
inc
mov
push
xor
and
jmp
and
in
mov
dec
ret
cmpsl
sarl
out
mov
test
mov
jo
aad
fstps
lahf
and
lods
dec
dec
pop
cmp
out
sarb
sub
je
aam
loop
ret
xchg
sbb
out
mov
clc
fnsetpm(287
mov
icebp
imul
lods
popf
sahf
xor
arpl
mov
xor
jg
cmpxchg
cltd
adc
dec
popa
mov
testb
aam
inc
test
roll
sbb
outsl
or
cmp
das
or
xor
sbb
enter
daa
imul
aam
xor
sarl
mov
inc
and
lret
outsl
arpl
pop
push
dec
enter
repz
or
mov
rorl
out
jne
cli
enter
das
out
mov
std
icebp
jns
fists
sbb
ficoml
movsl
ret
leave
mov
or
stos
mov
ror
mov
sti
push
mov
xchg
add
jle
inc
cmp
add
leave
pusha
xor
mov
and
scas
jmp
iret
sbb
sbbl
push
js
push
popf
cltd
and
push
push
push
and
cs
clc
insb
cwtl
mov
jnp
pop
fwait
scas
pop
mov
xchg
out
ret
mov
inc
jb
jae
mov
inc
mov
push
push
or
inc
sti
jbe
fcmove
push
ficoml
jmp
sti
pop
fdivrp
mov
lds
jb
mov
xchg
aaa
test
dec
inc
lock
xor
pop
arpl
test
jge
rorl
sbb
mov
or
or
jns
or
jecxz
push
xchg
pop
xorb
outsb
stos
scas
mov
xchg
cmp
scas
movsb
push
mov
dec
cmpsb
cmpsb
nop
mov
bound
mov
icebp
pop
cmp
pop
jecxz
push
pop
pop
dec
xchg
imul
out
or
cli
addl
dec
mov
push
out
das
test
loop
lcall
pop
push
ret
and
jns
dec
pop
add
add
push
jo
sub
insl
adc
cli
sbb
outsb
xchg
jae
adc
popf
out
push
aaa
sbb
pushf
sbb
push
dec
xor
mov
int
ds
sub
or
mov
pop
in
push
aaa
idivb
daa
ja
add
in
pop
adcb
jg
mov
mov
in
inc
mov
jb
mov
jns
and
xchg
ss
inc
out
test
xor
hlt
mul
lret
xchg
sarl
mov
mov
sti
into
imul
mov
and
out
outsl
adc
popa
stc
jg
xchg
fs
adc
ljmp
lods
cmp
adc
mov
fdivr
ficompl
cmp
aad
or
mov
or
xchg
pop
mov
sub
sti
pusha
mov
cli
std
adc
xchg
push
add
jae
sbb
sub
jecxz
hlt
rorl
push
shlb
cmpl
aad
or
dec
push
lea
rorl
repz
sub
aas
lds
add
inc
call
mov
cmp
pushf
ds
dec
jmp
das
fstpl
inc
inc
jno
mov
aas
jmp
jb
add
jl
push
negb
in
cwtl
testl
mov
out
add
or
mov
cmc
jns
pop
roll
stos
xor
int
int
in
and
aaa
outsl
rcrl
cmp
push
xor
cmpsl
rorb
fs
jg
and
lret
dec
sub
and
inc
add
pop
pop
add
rorb
call
aam
pop
cmp
push
stos
sarl
fst
shrl
xchg
and
dec
ljmp
mov
mov
popa
clc
xchg
jl
xor
out
clts
testb
pop
pop
cltd
dec
pushf
addb
push
dec
cmp
dec
test
lods
and
ss
shll
mov
clc
stos
push
hlt
repz
xlat
cmp
add
jecxz
cmp
ret
mov
xchg
or
mov
mov
mov
ljmp
jp
ja
outsl
orl
aas
inc
mov
cmp
rcll
dec
fnsetpm(287
adc
mov
aam
out
xor
bound
cmp
in
jg
xchg
adc
dec
out
push
add
pushf
add
xor
jp
push
add
inc
rcr
mov
cmp
or
or
inc
mov
stos
jmp
lcall
push
cmp
xor
inc
fidivrl
stos
loope
xor
inc
in
pop
insb
add
mov
popf
push
lea
scas
adc
push
iret
push
cmp
dec
xchg
pop
pop
cli
out
out
loope
je
add
inc
rcrl
mov
mov
and
inc
jp
nop
fiaddl
xchg
out
sbb
test
imul
cmpsl
ficomps
push
cltd
rorb
jl
into
xchg
xchg
repnz
cmc
leave
mov
or
and
dec
loop
lea
mov
in
rorl
fsubrs
sub
clc
aad
pop
sbb
cmp
jo
mov
lcall
js
movsb
push
enter
adc
dec
insl
jae
mov
addb
mov
dec
add
ds
xlat
movsl
in
shl
and
sbb
test
lods
mov
movsb
or
pop
ljmp
pop
inc
out
push
stc
test
push
aad
ds
test
int3
jno
and
add
lock
call
adc
push
fcmovnu
int
fcmovnb
sub
int
cmp
push
mov
popf
fcompl
test
and
test
popl
jo
cmp
push
xchg
mov
mov
mov
ss
cmp
arpl
fincstp
mov
xor
xor
adc
mov
xlat
int
inc
fsubrl
ffreep
cmc
mov
mov
jl
aaa
outsl
repnz
inc
loop
xchg
lcall
adc
adc
int
pushw
or
sbb
out
inc
mov
xor
loop
pop
add
cmp
aad
in
loope
btl
rorb
xor
xlat
adc
sarl
xor
dec
sbb
arpl
mov
fwait
mov
sbb
mov
flds
jno,pn
sub
shrl
cmpsl
nop
iret
mov
repnz
aad
fsts
xor
sahf
movb
lea
push
call
cmp
into
pop
fcoml
adc
sub
jmp
pop
icebp
or
fildl
sbb
aas
sahf
adcb
adc
dec
sti
jp
je
ljmp
fsubr
mov
cwtl
mov
jmp
ret
push
mov
leave
sbbl
popf
mov
lock
xchg
das
mov
mov
test
xchg
and
fmuls
shrl
arpl
and
mov
pop
cmp
push
pushf
sub
sahf
or
mov
sbb
and
loop
bound
jp
pop
add
mov
xchg
aam
sub
ret
mov
sub
ficoml
sub
arpl
ljmp
or
fimuls
ret
or
pop
in
outsb
imul
andl
stos
mov
mov
sbb
sbb
sub
sarl
xchg
fisubrs
jp
sub
cmp
jmp
je
add
les
push
lock
int
out
sub
out
pop
inc
sbb
dec
scas
xor
into
or
rorl
fwait
pop
aad
dec
mov
jmp
mov
sub
dec
bound
jns
xor
aaa
xchg
pusha
call
repz
xchg
addb
mov
daa
adc
lods
pop
aas
mov
jae
xor
gs
in
dec
pop
pusha
imul
test
mov
dec
jmp
lea
push
and
popf
out
mov
sub
push
rcl
jmp
and
insb
outsb
pushf
sbb
scas
and
inc
push
cmc
addr16
adc
in
ret
pop
pop
xor
jae
gs
les
or
xor
inc
stc
jnp
fidivl
push
int3
sbb
cli
imul
push
and
cmp
add
cmp
xchg
hlt
pop
lods
arpl
inc
jbe
and
insl
sbbl
js
aaa
mov
add
add
pop
bswap
jecxz
cli
pop
dec
add
push
push
icebp
out
out
or
pop
mov
jns
mov
cmp
popf
fsubl
pushf
sti
cmpsb
lods
inc
mov
xor
enter
daa
rcll
xorb
dec
jl
pop
adc
adc
pop
sahf
clc
movsl
hlt
je
and
pop
inc
lahf
mov
push
mov
mov
sub
mov
inc
jnp
inc
into
in
fcompl
xor
rclb
orl
adc
ljmp
cmp
cmp
jbe
pop
sbb
addr16
rorb
pop
mov
add
pushw
out
push
push
gs
int
pop
and
mov
fldenv
ret
push
in
push
fmul
scas
pop
sub
push
dec
orb
xlat
mov
lea
mov
in
jecxz
xchg
outsl
lcall
push
and
lret
faddp
insb
jnp
mov
pushl
das
lret
jg
ja
or
xlat
mov
inc
loop
jns
stc
in
xor
clc
xor
in
and
lods
or
mov
adc
inc
out
cmp
cli
inc
xchg
pop
xor
mov
cmp
add
incb
gs
xor
stc
pop
icebp
movsl
adc
cmp
adc
pop
aam
mov
inc
mov
cmp
lret
push
aam
mov
and
cmp
cs
lods
aad
mov
push
dec
adc
jg
icebp
loopne
repz
movb
iret
clc
xchg
call
mov
bound
pushf
xchg
jb
jmp
imul
xchg
iret
stos
inc
jg
js
xor
int
arpl
dec
jb
mov
mov
negb
stc
add
pop
fistpl
orb
xor
negl
loope
stc
mov
xorl
lea
das
imul
inc
mov
cmp
cltd
sar
adc
outsb
sbb
and
pop
dec
mov
jno
shlb
fs
sub
push
mov
es
add
js
sbb
cltd
mov
cmpsb
sub
dec
ffreep
inc
lea
frstor
fdivr
mov
movsl
ljmp
push
ficoms
das
sub
out
mov
adcb
fs
bswap
aam
add
push
roll
in
faddl
or
movsl
test
sbb
xchg
mov
test
pop
lahf
add
push
sbb
adcl
andb
jo
xor
lahf
jge
mov
adc
dec
mov
cld
dec
fdivs
lcall
mov
test
pusha
dec
mov
cli
dec
mov
fwait
mov
xlat
filds
jns
aad
in
rolb
push
xor
cs
loopne
xchg
xchg
loop
xor
jp
sarl
fistl
pushf
rcll
loop
inc
jle
jecxz
in
js
pusha
add
and
xchg
mov
shr
push
push
xchg
xor
addl
pop
push
sarl
lods
mov
adc
pop
stos
movl
sarl
cmp
adc
or
iret
dec
ret
fistpl
cmc
jb
divl
jae
mov
inc
sbb
or
jns
cmp
sti
sub
xchg
xchg
xchg
sbb
pop
imul
pusha
fsubp
mov
out
sarb
cltd
mov
mov
leave
lods
loopne
hlt
adc
scas
arpl
insb
js
fisttpl
mov
lret
dec
jl
bound
aaa
add
xchg
adc
push
cmp
lods
fisttpll
scas
pop
test
enter
mull
xchg
out
cmpsb
das
dec
push
in
pop
sbb
mov
pop
daa
shlb
sarb
inc
mov
movsb
jl
aas
pop
dec
fimuls
sbbb
sti
jp
and
mov
lahf
test
ljmp
popa
dec
push
inc
add
or
xchg
in
pop
cmp
pop
ret
push
add
loope
cmp
sub
loop
cmp
fildl
adc
cs
cmp
adcb
in
sbb
out
add
adc
push
push
ret
cmp
lcall
dec
fdivl
sub
jae
sahf
out
pusha
and
cmpsb
aaa
cmp
push
push
lahf
mov
sub
mov
dec
hlt
mov
mov
lds
mov
sarl
fstps
lret
pop
roll
pop
mov
out
into
adc
pushl
xor
enter
icebp
loop
xchg
xchg
stc
movsb
and
adc
lahf
mov
lods
icebp
cwtl
jno
pcmpeqd
cli
jae
test
out
mov
mov
or
xorb
sbb
nop
fcompl
rorl
je
imul
inc
adc
dec
popa
ja
mov
paddb
mov
mov
mov
andl
sti
push
aad
cs
pop
popf
aad
cmpsb
cmp
je
testb
dec
flds
fisttps
or
les
cmpsb
xchg
aaa
mov
das
adc
sar
aas
add
jmp
scas
enter
xchg
add
push
aas
fadd
scas
jb
imul
jmp
cs
jecxz
cltd
psadbw
aam
scas
jbe
cwtl
sub
scas
mov
inc
or
mov
dec
les
fistl
pop
add
sub
xor
or
dec
adc
mov
pop
iret
rorl
sbb
icebp
insl
or
imul
add
cmp
lret
xchg
jae
mov
jg
push
mov
mov
int3
add
mov
lock
shl
es
repz
fisttpll
test
xchg
loope
dec
ljmp
push
lods
dec
in
mov
out
aaa
and
push
mov
push
sbb
dec
cvttps2pi
add
mov
cltd
icebp
mov
mov
pushf
jno
xchg
or
push
test
mov
xchg
enter
rcl
movsb
jb
dec
inc
in
jmp
test
sarb
add
adc
mov
into
xor
out
xchg
pop
push
mov
push
lahf
inc
mov
mov
mov
dec
xchg
and
inc
dec
or
or
push
lret
mov
and
insl
cmp
pop
aam
bound
icebp
jns
sbb
in
fistps
xchg
dec
out
mov
or
andb
and
mov
ret
adc
mov
ret
in
or
pusha
lahf
nop
mov
lahf
push
jbe
pop
or
jmp
sti
push
cmp
xchg
sahf
mov
test
popf
xor
leave
xchg
push
push
imul
mov
mov
cld
insb
inc
rorl
stos
into
sbb
addl
rep
jne
and
adc
lahf
out
aas
inc
add
push
inc
lret
or
hlt
xchg
push
inc
notl
jle
fisttpll
sbb
sbb
imul
imul
dec
xor
pop
out
out
mov
fists
leave
and
sub
pop
hlt
test
cli
push
jbe
sub
jge
xchg
sbb
xchg
stos
or
and
mov
xor
push
sbb
imul
scas
aaa
clc
mov
outsl
push
out
dec
aad
movsb
or
cmpsb
mov
fucomip
inc
adc
stos
xchg
or
iret
dec
xlat
cmp
jne
lock
dec
dec
lret
dec
movsl
push
pop
movsl
add
mov
data16
push
xor
xlat
push
push
mov
mov
push
push
xor
xlat
jno
gs
xchg
push
xchg
aam
scas
les
sub
pop
pop
cmp
xchg
inc
adc
or
sub
sub
and
lea
adc
test
ds
or
sub
mov
lcall
neg
pop
cmp
jecxz
movsl
sahf
xchg
dec
push
test
adc
repz
mov
and
imul
and
fisubl
fcoms
and
rcrl
push
sbb
xchg
adc
cmc
add
movsb
jno
cmp
loop
loopne
stc
pop
mov
in
adc
outsl
data16
mov
call
pop
cli
cmpsb
pop
les
movb
mov
fisubs
push
pop
loopne
aad
pop
das
jnp
adc
push
imul
lods
icebp
xchg
fimuls
adc
stos
xlat
lock
sub
and
mov
stc
inc
add
add
cs
nop
pusha
xchg
dec
shll
mov
hlt
aam
mov
xor
dec
lods
dec
lea
ljmp
cmc
xchg
stos
adc
gs
ds
pop
fisubrl
inc
inc
aam
inc
push
out
stos
jb
dec
rorl
ja
je
dec
xchg
jecxz
lods
jg
movsl
jae
std
push
outsl
inc
cwtl
jecxz
stos
or
andl
xor
inc
mov
shlb
mov
xchg
lcall
popa
in
mov
test
mov
rcrl
adc
insl
repnz
cmp
cmpsl
into
insl
push
adc
sub
inc
cmp
xor
and
mov
jmp
xlat
lea
fwait
push
inc
sub
nop
ret
and
mov
push
fnsave
aaa
clc
add
xchg
and
sub
test
lods
mov
or
push
addr16
xchg
cwtl
fwait
jae
divl
xchg
xor
push
test
dec
pusha
mov
cmp
xchg
dec
xlat
movsl
dec
test
fidivrl
sbb
outsl
movsl
sarl
pop
fs
fidivrl
or
add
dec
and
xor
mov
xlat
xor
xchg
cmp
xchg
mov
mov
jb
divb
or
and
fisttpll
sarl
jmp
xor
fs
mov
mov
out
and
pushf
jns
add
rcll
xchg
dec
lock
xor
sub
mov
addr16
daa
jp
cmp
xor
call
mov
mov
jle
mov
cld
pusha
cmp
fistpll
sbb
jmp
mov
andl
push
inc
mov
popf
pop
pop
sarl
nop
jnp
stos
lods
test
insb
scas
sub
pop
aam
scas
dec
loope
push
lret
adc
gs
iret
xorb
pop
mov
or
daa
ret
inc
int
adc
push
lock
push
jbe
push
fimull
popf
xchg
xor
xchg
sbb
out
imul
in
rolb
jae
jne
mov
dec
and
repnz
jl
fwait
jnp
hlt
cmpsl
fsubl
mov
jbe
pop
cwtl
jge
add
sbb
shll
adc
cmp
add
mov
int3
movsb
test
loope
add
dec
xor
xor
adc
add
movsb
xchg
add
inc
push
mov
in
in
enter
daa
into
out
add
jno
pop
fidivrs
cmp
dec
ds
or
fistps
add
movsl
sub
dec
inc
sub
dec
pop
xchg
js
mov
pop
inc
xchg
push
push
fistpll
jae
sub
test
cmp
call
adc
in
cmp
cmp
mov
int3
addr16
pusha
xor
push
clc
das
push
outsb
pop
push
or
movsl
sub
pop
fadds
ss
ficompl
ljmp
sub
sbb
rorb
sbb
call
mov
add
mov
mov
mov
push
andl
nop
out
cmp
pop
cmp
dec
push
pushf
imull
or
shll
adc
jg
xor
add
mov
fadds
cmc
int3
xchg
xorl
inc
icebp
outsl
outsb
nop
sbb
inc
bound
stc
adc
jecxz
cltd
mov
jne
mov
xor
mov
out
and
lods
xor
cli
fxch
mov
popf
mov
rorl
movsb
mov
jo
xor
push
loopne
jbe,pn
dec
daa
adc
cmp
imul
cmp
xchg
sub
sbb
dec
jne
xlat
das
xor
insb
mov
fs
sti
mov
push
cs
mov
aad
lods
aas
nop
cmp
dec
xor
push
and
fcmovu
icebp
pop
pop
les
repz
insl
test
dec
or
lea
inc
call
xor
mov
and
xchg
popf
por
int3
adc
or
adcl
aas
sbb
mov
pop
pop
jmp
je
ret
outsl
jecxz
add
sar
cld
dec
cwtl
sahf
repnz
mov
push
mov
lcall
mov
push
dec
mov
mov
lock
lods
das
push
mov
mov
pusha
in
mov
shr
xor
idivl
into
dec
movsb
pop
push
cmpsl
int
daa
mov
mov
dec
cld
jb
adc
jae
fs
lea
sub
idiv
pushf
shrb
mov
aam
scas
add
out
bound
fstpl
mov
cmp
mov
cmp
pop
jg
mov
mov
sbb
sar
rorl
ljmp
cltd
pop
sub
and
xchg
insl
dec
lds
imul
sbb
pop
jo
mov
cld
daa
push
push
jp
add
push
add
loope
out
push
fstpt
sbbb
mov
cmp
pop
sub
mov
push
inc
jge
push
or
and
dec
dec
es
jne
jle
mov
pop
or
fnstsw
bound
mov
xchg
pushf
and
add
orl
sub
push
int
or
dec
mov
das
mov
cs
lods
pusha
aad
into
pop
xchg
xchg
add
jmp
xchg
fs
xorl
rcrb
insb
clc
mov
iret
movups
mov
push
out
or
repnz
adc
xchg
iret
loope
xor
stos
mov
pop
or
insl
das
jae
inc
mov
rolb
cmp
push
cmc
mov
fiaddl
xchg
fs
mov
mov
jmp
les
xchg
test
into
testb
movsl
xchg
mov
test
aas
leave
adc
sub
repnz
lods
stos
pop
jbe
add
cld
dec
sti
aaa
lahf
pop
aaa
or
shlb
jo
pop
push
jne
push
jecxz
test
mov
scas
cmc
mov
js
mov
lahf
stos
push
nop
sbb
or
int3
int
enter
daa
int
dec
cmp
test
jno
inc
pushf
jl
cwtl
xor
ds
adc
pushf
inc
jge
add
cld
mov
or
push
inc
mov
xchg
fiaddl
js
aaa
popf
pop
jg
ljmp
fcmovb
loope
inc
or
push
lret
adc
sbb
xlat
sbb
xorl
sbb
orb
sbb
mov
add
push
leave
xor
daa
xchg
push
jno
ror
dec
adc
test
xchg
pushf
lcall
sub
jne
shrb
roll
xlat
add
pop
mov
xor
mov
xor
jno
cli
ds
nop
loope
mov
shll
pop
or
jnp
and
or
lods
lret
mov
enter
push
push
sbb
xor
into
mov
add
xor
imulb
call
inc
stc
leave
ror
fs
xor
fldenv
lods
cmpsb
ss
add
loop
or
sub
je
mov
or
sbb
xchg
pop
andl
lcall
xlat
xor
imul
subps
pop
mov
cmp
or
mov
iret
fwait
xchg
sti
pop
or
cs
int
aad
movb
add
and
fldcw
stos
jno
sbb
lods
insl
push
fldcw
call
mov
out
pop
cltd
push
adc
xchg
inc
test
enter
pop
inc
fwait
lahf
mov
lcall
mov
movsl
mov
je
mov
jecxz
mov
popa
std
mov
sarb
mov
mov
nop
push
adc
test
fistpl
dec
xor
cmp
xlat
das
in
andb
cmc
xor
in
shll
sbb
es
fldcw
cmp
cmp
int3
mov
mov
mov
or
jl
or
jmp
insb
or
inc
cli
inc
sub
and
jle
jge
cmp
pop
ffree
fs
clc
js
mov
ljmp
mov
add
leave
xchg
es
inc
push
lods
push
cmp
dec
mov
add
xchg
imul
jb
in
dec
movsl
enter
jmp
loope
push
push
sub
iret
stos
mov
enter
in
jmp
test
incl
das
iret
or
xor
cli
mov
sbb
xchg
mov
call
and
adc
bound
dec
loope
dec
pop
mov
fsubl
mov
sbb
out
mov
out
jns
shr
jmp
sahf
and
pop
test
jle
fisubl
dec
sti
jp
xchg
mov
sahf
and
in
adc
pusha
jo
addr16
nop
mov
jmp
pop
insb
pop
addl
push
int
xor
mov
push
sub
and
in
insb
test
jnp
sub
adc
popf
push
pop
clc
cmp
test
call
ret
jmp
inc
mov
inc
and
scas
jae
cmpsb
roll
mov
gs
inc
je
sbb
mov
add
loop
jbe
xchg
mov
xchg
add
fidivs
mov
fidivs
movsb
shrb
outsb
repnz
hlt
cmp
call
ret
xor
mov
fnstenv
pop
mov
add
sbb
mov
jp
loope
xor
addr16
xor
out
imul
cld
sbb
sub
dec
cmp
pop
movsb
lods
mov
fbld
cli
cmpsb
cmp
add
enter
daa
int3
mov
fbstp
popf
mov
xor
lret
sahf
sub
push
leave
insb
movsl
pop
jnp
and
add
lahf
and
nop
push
stos
add
test
outsl
jnp
inc
inc
shll
popf
dec
aas
pop
aam
adc
push
ficoml
mov
mov
sub
mov
xor
adc
lcall
andb
sbb
inc
and
add
push
je
je
fdivrs
and
mov
lcall
xchg
fsubl
cmp
push
sahf
jp
mov
adcb
sarb
push
mov
lods
xor
lock
push
ss
cmpb
sub
loop
rcrl
mov
push
into
sahf
mov
cmc
pop
rol
xor
inc
cmp
insb
add
stc
adcb
scas
mov
mov
lods
lea
cmpsb
out
ret
sar
aas
leave
xlat
xor
xchg
cmc
pop
or
xlat
push
mov
cmp
loopne
sbb
mov
cmpsb
imul
daa
sub
scas
mov
sbb
lds
xlat
lods
gs
dec
fisubrl
in
cmp
or
ret
fldt
jnp
ss
icebp
or
inc
inc
test
fstps
mov
repz
xor
push
sbb
dec
call
xor
pop
push
sub
mov
or
addr16
ret
jecxz
inc
and
pop
aas
pop
andb
lds
xchg
je
cmpsl
jae
inc
orl
dec
mov
cwtl
adc
int
cmp
or
dec
jo
jecxz
int3
daa
sahf
mov
es
lock
ret
movsb
das
les
mov
into
mov
xchg
es
outsl
adc
mov
lcall
mov
pusha
sbb
cld
enter
push
lea
and
test
pop
xor
sahf
rclb
popa
sub
aam
jmp
inc
push
lcall
fucom
lds
xchg
fstl
scas
popa
add
out
cmc
imul
jnp
xor
insl
mov
push
mov
clc
push
pop
popa
add
cltd
int
les
sub
xchg
fisttps
mov
test
iret
loopne
jae
test
sbb
push
rol
sbb
stos
cmpsl
ret
dec
or
add
cmpsb
sub
divl
sub
sub
mov
pop
test
mov
mov
or
loope
stos
push
sti
fwait
js
fimuls
xchg
mov
jmp
arpl
imul
je
jo
cmp
mov
out
or
test
jp
mov
insl
mov
or
mov
arpl
inc
dec
fistps
mov
cltd
stc
mov
adc
inc
push
nop
push
ja
roll
add
dec
les
push
int3
out
and
adc
addr16
jge
scas
je
mov
cmpsl
dec
adc
add
lahf
lahf
cmp
pop
jnp
addb
jae
dec
push
inc
mov
push
repz
cmp
push
sbb
dec
mov
ficoms
sbb
fidivs
mov
sub
movsb
leave
add
shlb
push
jbe
cmpsb
sarb
cltd
cwtl
sbb
or
sbb
lds
dec
mov
pop
lds
push
test
orb
icebp
into
scas
mov
jnp
mov
hlt
and
aaa
shrb
push
jbe,pn
cmpsb
mov
arpl
enter
daa
lret
jmp
dec
jno
push
mov
test
xor
movsl
push
jne
and
shlb
inc
std
repz
jle
cmp
cmp
aad
dec
pusha
mov
sti
lret
out
push
add
pop
std
mov
jmp
or
sub
mov
outsb
lods
out
jle
adc
or
jne
add
jne
fstpl
imul
xor
push
mov
ja
mov
aas
sbb
lahf
pop
xor
mov
daa
lcall
jb
lret
cmp
sub
mov
test
aas
subb
cwtl
mov
dec
bound
cmp
and
mov
xchg
cmp
cmpb
lret
hlt
shl
jae
inc
scas
out
sbb
push
ds
and
pop
xor
cltd
push
outsl
or
stc
aaa
jge
fs
pop
adc
aad
call
lods
je
xchg
mov
ja
out
sarl
xor
aam
cmp
outsb
inc
or
pop
shll
dec
sub
fsubrs
dec
adc
push
stos
adc
xchg
mov
sbb
cltd
sbb
add
fcmovbe
in
inc
mov
mov
movsl
inc
push
cs
ret
nop
int3
push
sahf
dec
dec
and
inc
pop
dec
enter
dec
les
pop
repz
and
push
aad
lea
mov
mov
lods
pop
shrl
mov
xchg
cli
jle
pop
pop
mov
inc
aam
sub
idivl
mov
je
sbb
jecxz
movsl
xor
mov
mov
icebp
cmp
cwtl
iret
inc
mov
jbe
pop
cmpl
xchg
adc
repz
lock
mov
mov
mov
jge
cltd
rcl
mov
xorb
mov
outsl
cmpsl
lret
mov
aaa
lods
adc
lret
sarb
and
pop
mov
dec
shl
jno
sub
dec
aam
add
ret
pushf
pushf
out
ret
fisttpll
or
xchg
sbb
shr
inc
popa
pop
aam
lods
pusha
sbb
add
fisubrs
push
arpl
sysret
mov
xchg
cltd
add
adc
push
xor
jo
js
jne
jae
lea
repnz
pop
sbb
stc
je
sbb
pop
mov
lret
inc
push
out
inc
dec
add
mov
pop
pop
xor
jle
cmp
mov
mov
mov
jmp
pop
mov
js
push
cmp
mov
mov
cltd
fwait
cmpsl
jecxz
repz
es
mov
bound
xchg
jns
push
cs
arpl
out
jb
sub
je
sub
sub
jp
mov
push
mov
jl
push
jle
aad
in
mov
and
cmp
out
xchg
jl
fs
bnd
andl
push
push
and
popf
clc
incl
mov
mov
cltd
stos
jns
inc
and
lods
imul
jnp
xchg
mov
xlat
sbb
push
out
lock
or
jmp
pop
mov
push
inc
cmp
jae
ss
inc
frndint
push
or
pop
cmpsb
iret
inc
jb
rcr
sbb
xchg
nop
movsb
mov
imul
fidivs
out
add
loope
fstpt
jle
movsl
leave
ja
inc
hlt
shrl
cld
jbe
cmpsl
jne
lds
inc
aaa
fdivrl
push
add
sub
push
mov
xor
mov
dec
jo
fstpt
and
cmp
xchg
pop
movsb
ret
push
jge
sub
addl
cmp
push
jno
ret
fwait
jl
orl
mov
movsl
and
mov
lahf
clc
push
test
add
sub
and
fcomps
xorl
inc
fs
cmp
push
push
add
pop
sub
cmp
and
in
outsb
adc
lcall
adc
ss
orb
lahf
add
lock
dec
add
jp
lods
int
inc
sub
popf
cmp
xor
lcall
xor
jbe
shrl
mov
sahf
sarb
test
fwait
mov
push
sub
cmc
ds
mov
rcrl
push
mov
inc
ljmp
cmp
adc
int3
mov
rorl
push
sbb
out
xor
push
mov
ljmp
stc
out
inc
iret
lds
mov
shll
out
lods
pop
fdivr
mov
int
out
arpl
xor
andl
or
xor
inc
adcb
pop
ss
lret
adc
lods
imul
mov
xor
lcall
cmp
push
sub
das
mov
adc
add
cs
ret
aad
push
nop
cmpsl
sbb
dec
scas
and
inc
insl
and
fxch
cmp
les
mov
iret
pop
add
lea
in
mov
pop
je
aam
cmp
xor
pop
sub
lret
mov
xor
inc
aas
xchg
cmc
cld
jb
mov
dec
mov
je
fsubl
jecxz
or
std
cwtl
cmpsb
das
cwtl
mov
daa
mov
ja
mov
addb
into
arpl
sub
mov
dec
mov
and
in
xorb
mov
cmp
pop
and
mov
shll
imul
icebp
mov
lret
nop
shl
cmpsl
leave
test
adc
icebp
push
arpl
push
addb
mov
mov
test
or
add
mov
cld
xor
ljmp
push
test
pop
clc
sub
xchg
pop
adc
ljmp
lods
lret
movsb
dec
mov
inc
mov
pop
push
loopne,pt
pcmpgtd
pop
add
idiv
test
orl
xchg
fimuls
sub
test
push
filds
sbbl
dec
stos
test
addr16
mov
lcall
lret
xor
sub
mov
in
hlt
mov
sbb
pop
ja
jno
dec
inc
lds
or
mov
fwait
outsb
mov
mov
jne
push
fbstp
pop
sti
lds
or
jns
sub
in
jp
xchg
fsubs
movsl
sub
outsl
push
adc
mov
pop
mov
es
mov
jmp
add
inc
in
mov
test
pop
aas
xchg
dec
xchg
jmp
mov
sub
popf
pop
loop
mov
lret
mov
stos
in
aam
and
inc
insb
dec
dec
jnp
insb
xlat
scas
cmp
add
xor
iret
pop
test
ret
repz
jmp
stc
aad
dec
mov
or
cwtl
je
icebp
das
std
fcmove
mov
pop
sbb
push
packssdw
and
pop
fldl
sar
sbb
sar
jno
out
mov
hlt
push
sahf
inc
arpl
cmp
push
sbb
sbbl
fwait
push
int3
or
pop
add
bound
aam
pop
ret
push
outsl
mov
pop
jo
fnstcw
and
cmp
cwtl
fstpt
push
bound
fidivs
in
push
pop
xchg
daa
leave
iret
sub
jno
mov
mov
or
push
insl
ja,pt
sbb
or
push
and
shrb
dec
mov
mov
jns
dec
push
and
sbb
pop
jnp
cmp
sar
loope
sti
ljmp
adc
jae
call
shrb
mov
xchg
push
sbbb
push
add
out
xor
mov
jge
xchg
int
js
sub
xchg
push
lcall
dec
fsubl
mov
sub
scas
sahf
arpl
out
jne
mov
jg
std
cli
mov
xor
mov
push
or
jl
cmp
divb
or
mov
enter
repz
into
inc
jp
cmc
scas
pushf
shlb
mov
outsl
leave
outsl
test
and
mov
fs
add
test
lods
inc
fimull
test
sub
fmuls
cmp
fsubl
loop
pop
das
push
gs
sbb
xor
mov
xor
adc
adc
popf
je
aaa
push
dec
xchg
notl
or
jbe
sbb
push
test
cmpsb
out
mov
jnp
add
cs
mov
cmc
nop
cmpb
dec
or
xor
flds
sbb
dec
or
pop
mov
test
xchg
test
add
adc
pushf
in
pop
imul
fdivr
pop
pop
lods
sub
inc
mov
fiaddl
test
jb
lret
sub
jecxz
mov
gs
aas
mull
mov
into
jae
pop
pop
cmp
xor
lahf
fistpl
xchg
mov
sbb
cmpl
mov
popa
lcall
repz
and
dec
sbb
jae
sbb
insl
pop
shrl
and
mov
in
dec
mov
mov
mov
push
mov
xchg
pop
mov
lea
int
mov
hlt
ret
mov
sbb
fs
xchg
lcall
popa
inc
lcall
cmpsl
and
xchg
inc
dec
rcll
mov
pextrw
scas
xchg
add
ret
sub
test
inc
orl
jle
dec
dec
inc
mov
mov
lock
testl
notl
stos
je
or
xor
xchg
cmp
icebp
push
xor
cld
push
jbe
lock
or
mov
xor
mov
mov
sub
mov
aam
push
ja
call
xchg
imul
add
cmp
jne
sub
or
cmp
bound
idivl
jmp
in
in
xchg
daa
sub
out
xchg
cs
push
or
sub
lret
or
mov
sarb
sbb
in
lock
pusha
test
js
xor
jle
fists
mov
push
fldenv
adc
or
arpl
sub
cmpb
in
scas
popf
out
in
je
mov
iret
mov
ljmp
dec
out
adc
flds
cmp
or
push
pop
and
cwtl
hlt
fiaddl
xchg
fstpl
sbb
imul
mov
xadd
lret
jmp
repnz
cmp
lods
sub
imul
mov
pop
push
xor
xor
jg
pop
jmp
or
mov
jbe
jg
es
inc
push
push
mov
cmc
jo
in
lret
nop
inc
and
cmp
in
movsb
fcoms
cmpsb
inc
loop
in
dec
jb
enter
daa
enter
fucomip
add
sarl
jl
adc
dec
push
jo
ds
and
cli
inc
push
imull
fldt
fwait
addl
repz
pop
jo
arpl
sbbl
sbb
add
push
orb
insb
jg
outsb
mov
adc
push
push
push
subb
pop
add
xor
push
sbbb
sub
loopne
pop
xor
lcall
and
int3
das
or
insb
fwait
insl
sahf
push
jbe
test
pushf
in
cmpb
jg
add
mov
outsb
sbb
jecxz
test
and
dec
ss
cmp
mov
shl
sub
js
mov
push
sbb
mov
into
sub
and
jbe
xor
movsb
outsl
test
fs
scas
sti
stc
pop
leave
jl
fistpl
aam
dec
mov
mov
mov
out
adc
xor
shlb
incb
push
gs
sbb
loopne
in
pop
or
imul
xchg
add
sub
stc
sbb
mov
or
test
push
push
mov
out
push
sti
lret
cs
popf
adc
nop
pop
js
dec
insb
cmp
xchg
jo
fnstcw
daa
xor
push
test
repz
pusha
mov
lea
call
das
sahf
push
pop
fisubrl
adc
mov
loop
pop
jp
dec
add
jno,pt
inc
and
jp
jb
push
pop
dec
mov
popa
mul
jg
jecxz
jp
dec
std
out
sbb
cmp
mov
inc
xor
dec
sbb
ret
fisttpl
mov
mov
das
inc
pop
push
mov
stos
mov
and
xor
rol
lahf
shll
or
insl
inc
pushf
xchg
dec
xchg
cmpsl
not
mov
mov
add
mov
mov
pop
mov
mov
dec
shlb
inc
sub
mov
orb
cmp
fldl
das
aad
fldenv
imul
das
mov
pop
arpl
xchg
mov
adc
dec
daa
cmp
lcall
aaa
adc
push
xchg
xor
push
xchg
sbbb
add
rcrl
iret
mov
fsubrl
fcomps
dec
add
lcall
loope
or
cmp
mov
icebp
mov
pop
sbb
ja
in
dec
sub
repnz
pop
pop
xor
fwait
xor
ja
pushf
mov
jne
adc
aaa
negl
out
pop
roll
bound
subb
cmp
in
mov
sub
sub
gs
leave
addr16
repnz
jp
mov
mov
leave
pushf
mov
push
sub
jno
ja
insb
fists
dec
pop
jmp
push
jg
orl
ficompl
into
arpl
dec
pop
inc
stos
shrb
cmp
sbb
and
add
int
mov
pushf
int
sbb
les
pop
push
enter
aaa
mov
call
or
and
xor
cmp
fidivl
arpl
xchg
mov
xchg
imul
mov
lds
test
mov
ja
sub
faddl
hlt
mov
inc
arpl
sbb
jbe
arpl
sbb
in
sbb
or
sbb
or
jle
pop
and
jbe
lods
xlat
cmp
scas
adc
das
decl
push
push
pop
movsb
arpl
into
push
push
pop
cmpsb
lret
in
ss
pop
enter
daa
mov
or
mov
or
push
ds
inc
inc
and
xlat
test
push
lret
test
data16
inc
adc
push
pop
xchg
add
stc
fmull
push
addl
sub
dec
cmp
jae
outsb
cmp
shl
xor
push
test
sarl
add
into
cmp
cld
sarl
or
int
subw
mov
lcall
xor
ja
pop
rcl
sahf
test
xor
sbbb
sbb
pop
pusha
or
mov
ss
stc
fsubrs
imul
shl
lret
pop
rcll
mov
xchg
jnp
into
or
ret
gs
cwtl
outsl
xchg
loop
popf
sub
adc
arpl
sahf
jns
or
mov
inc
js
cmpsb
xor
xor
mov
xor
mov
js
pop
jg
loopne
lret
daa
dec
xchg
adc
and
adc
hlt
movl
jge
in
sbb
in
inc
jae
call
je
mov
push
xchg
sti
jns
jp
mov
push
aad
xchg
pop
nop
cmp
ljmp
in
fnstenv
pop
les
add
dec
rcrb
cmp
xor
mov
sub
scas
dec
bound
subl
inc
push
mov
inc
pop
repnz
dec
inc
lds
inc
inc
ds
aas
jae
fdivs
xchg
iret
dec
sbb
loopne
pop
and
jecxz
fnstsw
std
lea
mov
pop
adc
inc
adc
dec
pop
dec
jg
mov
sub
setae
lock
in
xor
pop
js
mov
popa
xchg
hlt
and
jno
rcll
and
mov
sub
dec
cmpl
mov
xchg
pop
loope
lahf
and
jl
sbb
mov
into
inc
pop
iret
rcl
rorl
aam
mov
ret
fdiv
and
xor
ja
xchg
sbb
add
lock
inc
imul
push
rcll
sbb
jae
add
cltd
loopne
lods
test
inc
mov
adc
xchg
or
out
and
sbb
xchg
cmp
stos
push
xchg
xchg
push
jnp
int3
add
daa
push
lahf
cmp
xor
xchg
insl
inc
or
rcr
lea
push
mov
scas
movsl
insb
mov
dec
adc
ja
fs
dec
pop
xchg
push
inc
sahf
enter
nop
negb
jg
sub
or
xchg
sub
out
testb
pop
lahf
jns
pop
jle
sub
mov
sub
pusha
sub
sarb
jp
inc
stc
mov
cmp
push
mov
into
xchg
jle
xor
pop
mov
pusha
adc
xchg
enter
insb
call
rolb
hlt
cmp
or
cli
push
mov
push
and
cmp
sarb
xchg
movsb
scas
arpl
adc
shll
ret
cmp
test
jae
test
inc
in
xchg
inc
call
add
xchg
in
or
xchg
imul
mov
inc
dec
pusha
lds
push
dec
rorb
mov
lret
leave
push
xchg
arpl
icebp
cmpsl
jbe
xor
jge
data16
sbb
mov
cmp
aaa
add
int
dec
je
push
sbb
data16
dec
lds
lcall
movsb
out
push
mov
jne
sbb
push
pop
daa
movb
jno
mov
js
xor
push
loopne
sbb
inc
xor
lahf
fimuls
push
popf
ja
test
xor
inc
mov
jg
pop
mov
adc
pop
cmp
cld
loope
cld
repz
in
cmp
leave
popf
outsb
pushf
push
ficoms
mov
sbb
adc
mov
jl
loope
enter
lret
fidivrs
xchg
int
mov
sub
jae
pop
jle,pn
lcall
loop
and
xlat
sahf
dec
sbb
or
in
xorb
mov
xchg
mov
fsubs
and
pop
or
push
jmp
cmp
daa
dec
mull
dec
fwait
shr
scas
mov
mov
into
lock
cmc
add
shll
rorb
outsl
mov
fidivrs
movsb
fs
ds
adc
lods
sahf
mov
dec
lods
mull
mov
fucomp
out
shll
jno
aas
xor
idivl
cmp
or
in
decb
inc
test
pop
inc
sbb
adc
pop
inc
adc
push
rolb
dec
xchg
xchg
inc
xchg
lds
daa
incl
xlat
daa
push
popf
sub
dec
mov
in
mov
scas
ds
addr16
nop
adc
fs
sub
inc
mov
mov
mov
push
fdivrl
cmp
lea
xor
add
xchg
sub
dec
jnp
cwtl
inc
inc
pushf
in
sub
pop
xchg
or
dec
mov
inc
pop
mov
clc
jb
dec
cmp
add
je
xor
or
std
xor
mov
mov
ljmp
outsl
dec
test
sub
mov
mov
lock
cmp
mov
sbb
mov
shll
or
packsswb
insl
adc
cs
jl
and
fdivp
movsb
icebp
push
das
cld
lret
lret
jmp
cmpsl
mov
lds
sub
out
repz
rolb
sub
inc
mov
popa
ret
testl
rol
xchg
clc
adc
dec
sub
add
lods
ja
mov
int
ja
pop
insb
test
psrad
add
not
cltd
pop
lcall
dec
stc
movsb
mov
cmp
xchg
rclb
insl
mov
ror
orl
inc
je
push
push
lahf
cmp
add
dec
fnstcw
sbb
xor
aaa
in
mov
icebp
int
mov
add
push
cmp
scas
push
or
xorb
fwait
sub
test
jne
fs
mov
jne
out
aad
xchg
bound
ret
test
add
fsts
iret
scas
loope
imul
or
dec
addr16
mov
mov
lea
jne
insb
mov
sub
in
das
leave
pusha
lods
es
aad
gs
fwait
jmp
add
subl
push
and
popf
mov
sarb
movl
and
ja
jb
push
jnp
jnp
scas
push
jno
dec
divl
adc
jmp
in
pop
inc
jo
icebp
jae
ret
jne
call
pop
shrb
sub
in
jmp
fsts
inc
cmpsw
imul
adc
and
shrb
mov
sbb
push
hlt
dec
lahf
inc
arpl
jp
jge
aad
sbb
mov
or
das
xlat
or
int3
out
negb
push
orb
jnp
xor
fs
shrl
sub
pop
mov
loopne
cmpsb
rclb
clc
enter
daa
cmp
arpl
pop
imul
dec
mov
inc
adc
je
loope
std
sbb
test
cld
hlt
xchg
inc
das
mov
bnd
pop
in
or
cmp
pop
ja
cld
push
push
push
loope
out
fwait
sub
movsl
adc
mov
outsb
call
aam
mov
inc
adc
xor
mov
add
push
xor
jp
int
in
sub
sarl
aaa
xor
add
fmul
xchg
push
sahf
out
imull
or
cmp
and
mov
popa
decb
std
sub
ss
dec
cmp
loop
sub
lret
pusha
roll
sub
stos
pop
mov
cmc
lret
ja
xor
bound
inc
aaa
ja
jno
inc
stc
sbb
adc
ss
insb
lods
fidivs
or
cli
movsb
imul
mov
dec
stos
inc
int3
gs
pop
loopne
iret
out
gs
imul
dec
pushf
sub
jae
test
add
mov
dec
loope
cmp
xlat
dec
dec
sub
jp
sti
cltd
mov
sti
xlat
stc
cmp
js
call
nop
out
popf
cltd
dec
mov
inc
int3
push
les
xor
in
cmp
imul
out
lods
xor
push
adc
leave
pushf
cwtl
mov
xchg
and
pop
cmp
ss
shrl
inc
jbe
inc
aas
mov
xchg
jb
xor
dec
push
mov
out
jecxz
adc
inc
or
std
cwtl
xor
mov
addl
sbb
adc
dec
mov
jp
lock
pop
mov
iret
inc
loopne
mov
in
outsl
es
and
clc
test
cmpsl
les
mov
inc
adc
pop
je
mov
int3
mov
mov
or
mov
jmp
loope
xchg
idivb
hlt
push
push
sbb
pop
xchg
clc
push
les
xchg
fucomip
ljmp
mov
mov
xor
loop
test
xchg
cmovno
in
icebp
pop
pop
cltd
dec
pop
int
pop
jmp
push
xchg
repz
iret
iret
sbb
bound
and
and
stos
xor
sti
add
pop
out
js
push
xor
popa
or
xor
mov
xor
addr16
rol
ja
out
xor
stc
je
int3
mov
or
dec
pushf
fwait
rcll
inc
fldt
dec
roll
out
mov
push
bound
push
mov
inc
xlat
adc
push
dec
jo
push
mov
or
jbe
and
call
mov
add
mov
push
jge
jle
sbb
pusha
dec
mov
cmc
xchg
outsb
add
jmp
mov
lds
in
pop
popf
loop
lcall
jp
stos
sub
data16
dec
jnp
sub
sub
mov
bound
iret
cmp
ret
gs
cld
jmp
inc
jnp
jmp
push
inc
movb
sbb
push
insb
bound
xchg
lcall
imul
fimuls
lea
rolb
call
leave
inc
repnz
xor
jbe
xor
jge
daa
enter
outsl
aaa
push
jbe
or
push
rolb
rclb
outsl
pop
lods
jl
push
fimuls
xor
mov
arpl
cmp
aam
movsb
add
jnp
push
or
or
in
jmp
and
je
sub
les
jno
xchg
lock
pop
mov
adc
and
xrstor
das
or
inc
xchg
dec
test
xor
xchg
gs
mov
insl
pop
or
add
repz
mov
pop
push
push
jge
lods
push
push
sub
cmp
cmp
xchg
outsb
jmp
add
dec
shlb
loope
jo
xor
ljmp
xor
push
push
mov
push
sub
push
cmp
sub
inc
lcall
repnz
jg
sub
imul
ljmp
mov
outsl
imul
sarl
pop
jae
ss
and
stc
out
lcall
movsl
push
jle
ffree
pop
push
mov
je
into
mov
cmc
xchg
push
sub
mov
loop
sahf
mov
cmp
pop
mov
adc
and
lods
lds
stos
mov
cmc
add
mov
loop
xor
mov
cmp
out
mov
dec
inc
or
into
stos
pop
gs
adc
pop
test
imul
mov
xchg
es
jbe
cmp
jecxz
in
fsubs
xchg
test
pop
fistpl
adcb
xchg
mov
fsts
lods
jns
subb
fistps
insb
lea
or
sub
pop
cmpsb
notb
pushf
inc
push
out
jmp
xchg
pop
pop
inc
pop
xchg
inc
xchg
jmp
aas
push
mov
jb
dec
mov
je
pop
and
mov
sti
std
std
and
cwtl
in
lahf
gs
cmp
mov
lock
enter
inc
stc
mov
iret
xor
test
das
mov
nop
mov
dec
and
sar
cmp
insl
fucomip
and
pop
out
cmpsl
ret
or
mov
sbb
test
mov
rcrl
add
sub
shrb
aam
out
sti
ret
test
adc
mov
and
mov
jmp
ljmp
add
mov
xor
pusha
or
test
add
xchg
cltd
test
test
divb
lea
add
imul
mov
jmp
pop
dec
pop
sub
pop
jp
push
fs
add
js
sti
call
jecxz
xor
sbb
outsb
xchg
mov
ja
push
mov
jnp
stc
ja
sti
js
clc
mov
orb
adc
lock
sbb
sub
in
mov
inc
sub
bound
arpl
dec
fsub
int3
in
xchg
mov
jecxz
aad
clc
sub
push
xor
and
icebp
mov
push
mov
test
xchg
jle
stc
jbe
je
push
pusha
jecxz
and
adc
stos
xchg
inc
push
imul
rcll
dec
dec
xchg
push
test
add
or
mov
inc
fildll
sahf
xlat
jbe
dec
sahf
outsl
jnp
lcall
xlat
xor
aaa
je
iret
xchg
and
pop
xor
or
or
or
mov
pop
xchg
call
xchg
icebp
and
imul
mov
sub
sub
popf
pop
ffree
sahf
in
mov
ret
sub
leave
mov
pop
arpl
pop
jbe
pusha
scas
jge
pop
loope
dec
loopne
aaa
adc
jge
add
enter
call
push
rcll
jo
je
scas
stos
loop
and
out
cmp
icebp
inc
movsb
mov
aas
cmpsb
clc
fsubrp
rcrb
enter
daa
ret
loope
cmp
jecxz
jno
xor
test
ds
mov
and
inc
cmp
outsl
push
test
xchg
ret
dec
ret
js
mov
xor
js
inc
sbb
cmc
cmp
loope
inc
subl
outsl
cmp
and
imul
dec
sbb
iret
ljmp
and
cmp
mov
push
cld
ror
hlt
dec
sub
cwtl
pop
stos
or
push
cmpsl
imul
and
mov
pop
push
fcomps
lahf
jne
addb
mov
ficompl
mov
into
test
sbb
cmp
pop
mov
mul
repnz
lret
inc
shrl
sbb
push
lods
into
cltd
vpmaddwd
les
roll
add
inc
loop
pop
cmp
fs
insb
adc
fsubrp
popw
out
mov
into
push
push
out
sar
cli
or
mov
fidivl
add
or
add
inc
loopne
and
pop
mov
mov
dec
stos
mov
add
lahf
mov
fcomps
sub
add
std
pop
mov
xor
inc
ss
jno,pt
movsb
inc
mov
inc
repnz
xor
mov
repnz
outsl
in
lea
sub
jne
aaa
stos
cs
pop
pop
fidivl
adc
test
sbb
jle
in
loope
roll
mov
clc
jb
lcall
xchg
jecxz
push
fwait
test
in
sub
dec
mov
stos
repnz
mull
xorl
sbb
jae
mov
repnz
jbe
das
fwait
arpl
mov
cmp
scas
sbb
dec
leave
jb
cwtl
cli
inc
insl
je,pt
insl
pop
jmp
mov
out
push
cld
dec
aas
xchg
cmp
mov
jge
idivl
pop
dec
mov
sarb
outsl
sub
movb
xchg
xchg
push
fcmove
test
clc
pusha
lea
xchg
jle
popa
iret
dec
jle
mov
rclb
div
xchg
xchg
in
push
pop
push
cmp
lahf
ud0
add
push
mov
test
inc
mov
pop
or
stos
out
test
in
xchg
mov
iretw
jne
rcrb
pop
stc
pop
imulb
pop
inc
push
add
xchg
lret
pusha
pushl
cmpsb
repz
adc
mov
mov
lods
cltd
pop
ss
sti
ja
mov
dec
jmp
or
testb
xchg
fwait
pop
pop
push
jne
int
mov
leave
xchg
out
jb
jge
loope
mov
in
dec
addr16
add
xchg
out
fisubrs
or
and
jp
sub
mov
push
inc
mov
hlt
cmp
jle
iret
and
jnp
push
fbstp
bound
adc
sub
dec
cld
in
dec
mov
push
imul
popf
xor
adc
cmc
dec
loop
test
stos
adc
sbb
insb
jnp
rolb
push
gs
adc
iret
testb
adc
loop
inc
xchg
nop
add
adc
inc
icebp
fdivl
push
push
repnz
mov
sbb
and
xchg
jne
iret
loop
lds
inc
sarb
and
leave
das
in
hlt
hlt
sub
arpl
daa
jbe
add
sbb
push
dec
or
pop
fadds
add
adc
xchg
xor
movsb
shr
xor
jne
jb
mov
and
push
push
cmp
idiv
push
cmc
sub
pop
pop
sub
fwait
fs
daa
ret
cmp
cwtl
jbe
cmp
dec
lock
ds
lcall
inc
mov
cmc
push
jmp
or
push
pop
cmpsl
arpl
xor
pop
pop
dec
scas
js
and
pop
xor
bextr
cmp
add
nop
add
shrb
dec
fisttpll
and
sub
xor
mov
push
xchg
imul
sarl
pop
sub
and
aas
aam
fmul
jae
sub
popa
mov
test
add
andb
adc
imul
sub
mov
sbb
hlt
ss
sub
cmp
adc
sbb
lret
mov
mov
out
sub
jl
cmp
and
xor
outsw
loop
out
sub
stc
cmpsb
lods
fs
and
lcallw
mov
mov
dec
stos
out
xorl
mov
out
cmp
cmc
inc
or
inc
adc
inc
gs
push
loopne
insl
ljmp
sub
adc
or
in
xchg
dec
mov
sbb
adc
sub
mov
adc
push
je
mov
movsb
scas
nop
jg
orb
push
inc
add
inc
sub
xchg
inc
repz
pause
jb
inc
fadds
sub
pop
or
sub
pushf
cltd
roll
pop
and
ret
insl
xchg
aas
mov
jb
push
push
dec
imul
jecxz
fstpl
std
rcrb
cmp
mov
clc
mov
mov
or
add
int3
mov
ret
lock
mov
jp
sbb
hlt
xchg
leave
and
xchg
mov
pushf
popf
repnz
in
dec
push
lods
jle
stos
cmc
and
sub
cld
jbe
aaa
lret
cmpsl
in
mov
loope
cld
mov
push
test
push
lcall
inc
mov
push
popf
pop
sahf
clc
add
xor
pop
adc
out
sahf
lods
and
lods
out
pop
mov
push
push
addr16
divps
incb
sub
mov
test
hlt
mov
cwtl
int
xchg
outsb
addr16
adc
js
imul
pop
shrl
xchg
fcompl
call
push
stos
adc
add
scas
fstpt
xor
mov
xor
and
fnsave
lcall
ja
lahf
loop
ficoms
xchg
lods
cmp
stc
xchg
rcrl
xchg
push
mov
arpl
out
push
mov
inc
jns
and
in
jecxz
push
pop
and
fcmovnbe
mov
pop
mov
or
les
out
out
jp
gs
mov
arpl
jle
cwtl
repz
sti
cwtl
pusha
sbb
adc
push
rolb
mov
aas
fcmovnbe
xchg
adc
enter
movsb
popf
push
add
push
ret
cmp
stos
test
sahf
and
daa
mov
jnp
lret
push
fidivrs
push
gs
or
in
xlat
pop
iret
push
imul
mov
pop
mov
roll
inc
hlt
vpternlogd
jmp
andl
out
mov
imul
out
fidivs
sub
stos
and
rcl
idivl
imul
inc
hlt
jbe
outsb
arpl
mov
jge
ja
sbb
push
jae
xchg
mov
or
bnd
xchg
addr16
int3
xchg
pop
lcall
jg
xor
rcrb
and
cmp
movsb
movsl
adcl
fsubrl
pop
enter
daa
roll
cmp
jno
loop
jl
xorb
mov
sahf
and
cmp
push
mov
aam
push
sub
and
jecxz
dec
xor
pop
inc
js
lcall
inc
jl
loope
and
sub
repz
dec
testl
xlat
xor
add
sbb
sbb
data16
adc
push
xchg
dec
pop
int
xchg
pop
sub
dec
pop
test
jns
push
push
bound
jns
dec
sub
das
mov
jnp
movl
movsl
mov
mov
shlb
mov
roll
lahf
pop
cmc
cmp
into
dec
outsb
mull
dec
push
dec
add
adc
mov
aam
push
inc
into
pop
sub
cmc
out
push
xor
ds
loop
jb
stc
pop
cmp
fs
and
js
inc
sbb
lods
jp
jbe
xlat
shl
mov
pushf
xor
mov
or
cwtl
mull
add
lods
pop
loope
leave
adc
sti
pop
imul
fldt
add
in
lock
dec
aas
push
xlat
bound
sub
sti
andl
xchg
rorb
cs
mov
nop
pop
cmp
pop
inc
sbb
mov
mov
xor
repz
jne
inc
lea
mov
xchg
test
fcompl
mov
sti
pushf
inc
int
jmp
mov
pop
les
push
inc
loop
fidivrs
sub
aad
dec
loop
divl
repz
test
arpl
ja
cmpsl
cwtl
sbb
adc
mov
and
andl
shr
pop
mov
mov
mov
mov
das
pop
jno
mov
stos
dec
mov
jmp
in
shr
mov
es
mov
cli
dec
arpl
cmpsl
rol
mov
popf
and
cld
mov
ds
mov
call
insb
mov
mov
mov
sub
push
and
or
idivb
pusha
push
fstl
cld
xchg
xchg
fs
push
out
std
push
shrl
push
imul
mov
outsl
jns
icebp
mov
bsr
adc
sub
mov
sbb
xchg
imul
sbb
or
roll
lods
mov
in
inc
in
dec
shlb
leave
pushl
xor
cmp
xor
repnz
mov
inc
arpl
mov
lods
pop
mov
ss
shll
pop
inc
sub
or
cmpsl
push
fwait
jge
push
dec
sarl
and
xor
pop
jns
jns
add
in
or
out
inc
dec
sub
inc
je
addr16
mov
mov
cmp
dec
es
rorb
dec
jle
push
push
in
push
jbe
jo
or
ss
aad
loopne
and
icebp
enter
jmp
or
stos
testl
insb
mov
mov
jmp
lods
scas
mov
xchg
push
lods
testl
ret
iret
pop
fsubrs
inc
cmpsl
cmp
hlt
xchg
inc
negl
repz
in
sub
jo
push
daa
into
xchg
mul
xor
sbb
enter
adc
sbb
shr
mov
mov
js
hlt
rol
arpl
mov
jno
mov
pop
push
sbb
test
push
inc
mov
add
dec
ss
jle
xor
mov
fdivl
sub
scas
dec
ja
and
sarl
pop
and
push
xchg
pop
mov
pop
jbe
in
xchg
sbb
pusha
mov
cltd
cmp
adc
out
and
sub
rcl
ds
movsl
imul
and
mov
cmp
push
rep
pushf
inc
cli
pop
test
out
js
movsb
adc
mov
cmpsb
push
fwait
adc
or
push
cmp
in
outsb
out
adc
push
ljmp
loopne
addb
sbb
out
add
push
and
movsl
mov
push
cwtl
movsl
hlt
int
cmp
sub
gs
add
and
add
in
add
xor
cltd
adcb
jg
scas
pop
mov
mov
mov
mov
and
loop
test
mov
nop
mull
hlt
xchg
lret
mov
mov
pushf
sbb
dec
pop
cmc
scas
adc
loop
mov
loop
int3
lods
stc
adc
cld
xor
out
mov
xlat
dec
mov
jae
cli
mov
or
or
pop
sbb
lea
pop
add
icebp
imul
std
sub
ds
add
adc
add
mov
pop
mov
sbb
loopnew,pn
aad
lcall
fs
inc
sub
pop
fpatan
jo
les
mov
lea
dec
call
pop
jb
lret
test
out
pushf
leave
jmp
push
popf
pop
addr16
inc
jbe
cmp
std
aas
int3
das
fwait
jb
rclb
pop
loope
je
xchg
out
jecxz
mov
pop
std
push
loope
cwtl
fsubrs
mov
stc
call
cld
fildl
ret
pop
out
xchg
mov
xchg
pop
lock
das
cmp
andl
jbe
clc
sarl
adc
insl
jnp
push
dec
pop
in
arpl
adc
pop
icebp
je
into
cld
int3
and
lret
test
mov
out
mov
int
test
pop
sar
mov
aam
shlb
and
stos
fnstsw
mov
lock
lea
data16
pop
mov
xchg
shll
nopl
pop
add
cltd
popa
les
popl
fiadds
loopne
mov
add
sbb
xchg
xlat
stc
lods
pop
cli
xor
stos
ret
add
in
add
xchg
popa
shlb
fcomi
mov
xor
adc
mov
inc
lret
mov
addr16
jbe
adcl
inc
mov
xchg
std
fwait
lods
push
into
dec
mov
mov
mov
rcrb
out
psrld
insb
mov
lock
clc
addr16
xchg
out
repz
out
and
or
bound
mov
pusha
push
mov
inc
cwtl
insl
jle
push
mov
pusha
dec
fisubl
lea
push
xchg
stos
lods
pop
addl
cmc
popf
movsl
mov
mov
inc
dec
inc
stos
push
shlb
cli
pop
les
pop
jnp
or
sbb
push
repz
jne
mov
les
pop
cpuid
push
inc
mov
xlat
jae
lret
cli
lret
pop
bound
out
sbb
xchg
dec
xor
inc
push
pop
imul
mov
mov
popa
lds
sbb
xchg
xor
or
nop
arpl
pop
jbe
popf
fdivrs
and
aaa
adc
or
cmp
add
push
cmp
imul
push
dec
mov
adc
adc
adc
lahf
stc
inc
cmp
xchg
xchg
push
loop
out
loop
in
outsb
mov
enter
daa
mov
in
dec
jno
and
bound
sub
ds
jecxz
jb
pop
and
movsb
add
out
test
mov
adc
test
pop
js
inc
aaa
pop
icebp
sahf
push
outsl
and
sub
xchg
out
cmp
xchg
adc
mov
nop
fiaddl
std
leave
lods
add
aaa
xor
push
fwait
jo
int
ret
arpl
loopne
pop
rorl
push
add
jb
iret
ret
popf
sub
sbb
shll
xorb
jg
aad
mov
ret
jns
adc
and
pop
ret
cmp
inc
pop
xor
loopne
cmp
rorl
xchg
mov
sbb
fs
into
and
clc
shll
cmp
pop
push
loop
pop
in
lret
inc
mov
adc
test
and
mov
mov
cli
int3
scas
xor
inc
jne
lea
jge
into
gs
cmpsl
push
loopne
mov
cwtl
adc
and
mov
adc
jae
add
test
xchg
or
cmp
clc
cmp
xor
xlat
loopne
add
and
ja
test
add
sti
icebp
rcrl
cs
aad
sub
nop
adc
stos
inc
ds
fldcw
cld
aam
mov
xor
push
icebp
jnp
jae
or
rcrb
cmpsb
push
jbe
and
jecxz
pushf
lcall
pop
or
inc
std
in
cmpsb
inc
sbb
aas
imul
dec
shrb
je
repz
push
push
dec
not
xchg
std
lds
in
cwtl
xchg
movsb
push
mov
stc
mov
sbb
xorl
fldt
pop
inc
mov
and
inc
xchg
fwait
lock
das
pop
in
push
movsl
mov
rorl
sbb
insl
bound
dec
pop
add
jge
mov
dec
xchg
cld
idivl
out
mov
idiv
fisubs
aas
pop
ror
dec
fldcw
pop
jbe
aam
fisttpll
ret
push
imul
out
xchg
fucom
shrb
mov
ljmp
cmp
fs
addr16
cmp
xchg
or
push
cmpsl
adc
jnp
rolb
arpl
cltd
cwtl
clc
jl
lcall
xchg
ret
adc
sbb
sbb
pop
movsl
mov
push
xchg
sub
add
incl
xor
and
xor
mov
stos
adc
jb
sbb
pop
and
xor
inc
push
in
or
dec
imul
pop
rorb
mov
cmpsl
pop
out
out
arpl
jns
scas
pop
in
sbb
xchg
cmp
je
sub
cmp
inc
addr16
bound
mov
lods
dec
mov
mov
or
stos
adc
xchg
outsb
cmp
call
xor
and
mov
adcl
popf
int3
popa
icebp
mov
sbbb
and
or
movsb
jnp
dec
push
scas
jnp
stc
push
cmp
xor
jle
enter
push
ret
mulps
loop
mov
in
inc
std
lods
aam
rcll
pop
sub
inc
or
xchg
movsb
mov
inc
imul
sbb
inc
cmp
shlb
inc
repnz
leave
or
lea
xor
push
stc
jge
lret
cmpsb
sbb
push
xorb
ds
or
jmp
mov
pop
cmc
in
xor
stos
jne
jo
out
shrl
out
mov
movsb
inc
sbb
push
xor
in
push
xchg
enter
daa
mov
jo
jno
jne
jl
push
imul
push
movsl
jns
shll
mov
sbb
xor
add
push
mov
and
pop
notb
sbb
xor
pop
push
imulb
loope
test
sub
pop
xchg
push
outsb
mov
ret
sbb
rclb
jns
insb
ds
sbb
addl
push
xor
push
push
sahf
scas
mov
sub
fidivrs
es
pop
loop
fdivrl
leave
sub
xor
sahf
fs
test
push
orb
mov
or
mov
mov
je
push
jmp
add
lret
pop
shll
pop
sbb
adc
or
cmc
cmp
mov
outsl
pop
out
inc
loop
sbb
add
fs
repz
data16
test
cld
mov
jae
cli
or
xor
icebp
icebp
or
sti
adc
gs
mov
mov
ficomps
or
adc
sbb
adc
cmp
add
xchg
pop
es
decl
mov
mov
adc
xlat
sti
mov
mov
pusha
nop
jmp
bound
xchg
lret
inc
push
sbb
sbb
repz
dec
or
jle
std
lea
call
and
fsubr
adc
imul
fistps
inc
in
inc
test
inc
xor
aas
or
push
dec
inc
mov
adc
adc
xor
cwtl
dec
cs
mov
movsl
aam
daa
jg,pt
dec
cmpl
mov
add
jae
mov
das
mulb
push
mov
rorb
and
pop
mov
es
pop
push
insl
dec
and
or
jbe
or
and
sahf
cld
and
hlt
lret
arpl
fidivrl
std
mov
insl
pop
out
popf
rcrb
sti
addr16
cmp
ret
fisttps
repz
lcall
dec
jb
ljmp
push
lods
iret
xchg
mov
out
in
push
xchg
dec
out
ficoml
or
add
pop
cltd
iret
shrb
mov
xor
xchg
fldt
xchg
pop
sbb
mov
pop
push
mov
stos
mov
les
push
in
add
in
call
mov
or
inc
push
xor
push
dec
mov
or
mov
fucom
pop
ja
adc
dec
inc
in
ljmp
or
int3
jne
dec
fbstp
int
dec
shr
jns
jnp
in
and
mov
pop
sub
xor
jb
sbb
pop
sbb
int
push
pop
lcall
jle
inc
push
in
pop
aas
pusha
test
lahf
pusha
je
xor
jmp
inc
inc
cmp
cmp
popf
repz
mov
mov
sbb
insb
lret
jnp
pop
mov
addl
iret
shrl
ret
cmp
add
enter
incb
inc
add
je
sub
dec
push
in
fidivl
push
jl
sti
xor
sbb
inc
mov
fdivrp
adc
vmaxsd
mov
mov
adcb
arpl
hlt
sbb
pop
mov
aaa
popl
test
int3
aas
jg
pop
divb
jno
jb
fnsave
ficomps
in
data16
push
jnp
sub
sub
mov
gs
cmp
cltd
enter
daa
mov
test
ret
cli
dec
sbb
fistpll
sbb
movsl
andb
lahf
cmc
and
push
or
out
test
push
or
inc
cmpsl
push
mov
or
pop
sbb
cmp
cmp
dec
loope
cwtl
je
add
dec
popa
outsb
pop
dec
or
outsl
push
jne
or
xlat
cmpb
sbb
ljmp
xor
push
mov
addb
cmpsb
scas
pop
movsl
lcall
sub
and
adc
test
nop
fwait
andb
cmp
add
clc
mov
xchg
insb
and
sub
ss
scas
or
mov
cltd
xchg
lret
pop
sarl
xchg
jmp
push
cmc
add
mov
repz
mov
xchg
loop
adc
fs
sahf
adc
add
mov
das
out
mov
insl
xor
and
cmp
add
or
jne
ret
sub
mov
add
pop
pop
stc
lcall
xchg
mov
add
push
jbe
xchg
sarb
je
xlat
pop
mov
mov
jg
or
dec
out
cs
adc
movsb
jp
nop
sbb
dec
or
neg
cwtl
rol
int
pop
repz
cmpl
call
movsb
jns
pop
mov
inc
adc
add
push
sbb
inc
dec
xchg
in
aas
test
mov
in
dec
mov
jecxz
andb
adc
scas
cwtl
or
outsb
pop
int3
mov
in
cmpl
loop
mov
pop
mov
mov
push
das
aad
mov
mov
cmp
in
shll
mov
inc
insl
xor
int
dec
in
and
test
ja
cld
dec
js
lret
rolb
mov
add
xlat
mov
add
ja
sub
and
mov
push
insb
out
fnsave
push
sbb
sub
mov
ljmp
cmp
lock
dec
mov
xchg
push
pop
movsl
stc
pop
or
mov
daa
test
les
mov
pop
mov
xchg
mov
lahf
sbb
sbb
pop
sti
mov
stos
test
jl
fsts
add
xor
push
xor
adc
or
shlb
dec
pushf
aam
or
dec
popf
test
inc
test
or
inc
dec
fwait
cmp
mov
out
mov
mov
bound
outsb
jns
in
xlat
in
jnp
xchg
fistl
out
ja
sub
cs
addr16
xor
mov
mov
mov
mov
xchg
rcrl
pusha
and
fucomip
shrb
sub
xchg
or
inc
xorl
rcll
mov
push
mov
dec
dec
stos
ret
sbb
and
out
insb
xor
es
inc
cld
notl
int3
loop
xor
loopne
xor
ret
lods
pop
mov
sub
std
jae
jecxz
inc
add
bound
adc
mov
lds
xchg
push
in
and
stc
jg
test
fisubs
jmp
jae
js
and
or
leave
stc
cmp
int
lods
jmp
jno
out
push
sbb
sub
dec
dec
push
or
cmp
int3
sub
pop
and
xor
out
jo
loopne
scas
lret
pop
jae
cmp
mov
movsb
pop
daa
inc
push
iret
in
into
cmpsb
imul
in
and
repz
daa
mov
xchg
stc
jno
mov
dec
mov
ds
and
pop
lahf
adc
leave
push
sub
push
pop
call
push
int
mov
js
xchg
lret
ss
andb
loope
iret
push
sub
mov
cmp
lahf
out
adc
dec
cli
push
adcb
push
add
inc
lds
loope
iret
push
movsb
mov
int
mov
sub
add
pop
and
add
or
xchg
sahf
stos
cmc
dec
test
mov
jg
mov
ja
int
mov
jnp
ss
and
das
fdivs
cld
negl
loop
ror
pop
mov
mov
aaa
cmc
lret
xor
test
loop
cmp
lock
aam
add
data16
and
lods
std
xchg
mov
sbb
outsl
cld
inc
xor
call
lods
out
jl
test
les
adc
sbb
imul
int3
filds
jp
mov
scas
cli
xchg
cmp
push
xlat
popf
sub
sub
outsl
mov
ljmp
cs
push
aad
aaa
jecxz
mov
add
fxch
jne
fdivs
movb
call
and
aas
pop
les
pushf
fwait
and
sti
lds
pop
repz
inc
imul
dec
jb
jbe
dec
xor
or
jecxz
mov
pop
std
mov
std
and
mov
pusha
adcl
push
fstpt
icebp
mov
loop
lock
sub
and
cmp
mov
jmp
sub
push
pop
dec
dec
rclb
repnz
mov
shlb
call
lret
inc
je
mov
or
xor
rcrl
push
rcl
fsin
sub
repz
add
jb
std
cwtl
mov
das
sbb
clc
arpl
scas
ljmp
imul
add
push
cmp
cwtl
adc
iret
cltd
cmp
sbb
pop
xchg
inc
push
test
mov
sbb
icebp
shll
outsl
loop
cmpsb
mov
xchg
xor
push
jl
pop
add
push
loopne
decl
and
or
aas
test
loopne
mov
dec
out
mov
push
add
jmp
or
bound
fwait
push
les
jne
insb
arpl
mov
sbb
inc
adc
add
in
sub
in
es
jno
xor
sub
jg
sbb
jp
mov
mov
std
jne
jle
push
xor
lods
mov
fisttps
dec
or
or
dec
add
mov
popf
inc
les
stos
cwtl
push
cmp
sarl
push
js
insb
mov
mov
enter
mov
iret
movsl
ffreep
add
xchg
pop
jmp
jno
fidivrs
sbb
leave
in
inc
push
or
or
nop
aaa
inc
jecxz
insb
ficoml
leave
add
xorb
inc
pushf
jns
aad
pop
shlb
mov
pop
daa
mov
jo
sub
cmp
jno
mov
sbb
jge
and
sbb
mov
aaa
or
xor
add
rcrl
push
mov
push
fstps
jo
mulb
and
add
lcall
push
push
jnp
cmpsb
out
lods
xchg
in
or
enter
daa
mov
xor
jbe
push
das
pop
dec
stc
jae
ds
leave
xor
subb
xor
jp
addr16
notl
aam
lds
add
push
into
js
test
pop
in
mov
push
les
sub
mov
int3
outsb
fucom
test
addl
xchg
andb
sub
iret
add
push
cmpsl
and
int
iret
and
dec
icebp
arpl
mov
imulb
push
pop
cmpsb
neg
jnp
xchg
sub
bnd
xlat
mov
in
pop
pushf
inc
mov
adc
mov
lea
and
push
mov
cmp
xor
fdiv
xchg
or
shll
mov
lea
into
mov
mov
xchg
jae
xor
shrl
cmpsl
or
adc
pop
data16
mov
lods
in
or
lcall
xor
mov
lods
decb
das
andl
cltd
fcomps
in
adc
and
imul
pop
cmc
xchg
mov
dec
cmp
inc
add
lock
mov
push
lret
sbb
lods
or
cs
movsb
cltd
aad
pop
ja
jl
pop
dec
aas
inc
push
inc
mov
inc
repz
cmpsb
lea
lods
cltd
mov
inc
js
push
lds
pop
mov
pop
xchg
xchg
dec
inc
sbb
mov
test
sahf
aas
out
inc
jb
gs
lods
or
je
mov
push
mul
in
fdivr
popa
in
cwtl
jg
sub
cmpsb
jle
sub
ror
fucomi
jbe
mov
dec
stos
mov
jo
lock
dec
dec
das
xchg
cli
xor
cmc
or
and
in
in
rol
fldt
es
add
lds
dec
inc
daa
dec
cmpsl
mov
or
stc
xchg
cld
mov
fs
repnz
fisubl
iret
pop
inc
or
rclb
outsl
sub
gs
iret
push
stos
ret
mov
mov
jle
cld
clc
sahf
repnz
xchg
or
pminsw
test
lods
adc
out
cmp
out
push
inc
and
adc
orl
jecxz
scas
out
cltd
je
mov
push
insb
mov
mov
xchg
push
sti
test
andb
push
push
sbb
movsb
mov
pop
push
xor
xor
pop
dec
das
add
imul
fstps
jp
cmc
or
cmpsb
lds
shlb
mov
push
in
add
cltd
inc
dec
sbbl
mov
add
jle
xchg
sbbb
jne
divl
push
or
cmp
jns
mov
jb
jns
dec
out
dec
mov
and
mov
jp
mov
mov
inc
sti
mov
insb
xlat
inc
jle
enter
sub
pusha
push
jmp
fildll
ret
cmp
lods
cmp
jmp
mov
jecxz
push
sub
popf
push
pop
insl
push
jl
loop
test
cs
insb
or
js
add
orl
adc
sub
iret
out
out
ret
es
and
jmp
repz
inc
or
outsb
push
bound
fimull
enter
push
imul
fsubp
iret
lret
lds
rclb
nop
repnz
xor
hlt
xor
arpl
mov
jbe
pop
jae
xor
sbb
jle
mov
lea
add
push
mov
sbb
jo
and
and
sti
cmp
lock
jb
xchg
push
insl
dec
xchg
icebp
mov
enter
daa
mov
mov
xchg
xor
cmp
in
test
movsl
xchg
rol
and
lret
orl
push
mov
push
inc
push
xor
pusha
pop
xchg
adc
cmpsl
pop
sub
cmp
sbb
loope
test
pop
cmp
xchg
mov
adc
add
aam
mov
shl
add
mov
xor
mov
stos
xor
int
int
sub
je
pop
and
inc
push
mov
jnp
es
sub
or
pop
rolb
xlat
inc
mov
sub
gs
mov
push
xchg
je
ret
pusha
rcr
jmp
div
fwait
loop
lret
jbe
std
cmp
fildl
push
into
xchg
or
cmc
pop
dec
push
xor
inc
outsl
fisubl
loop
sub
stc
pop
adc
adc
addr16
lods
lret
xchg
mov
cltd
mov
shll
imul
or
adc
adc
pop
mov
popa
leave
imul
lods
jae
cwtl
cmp
xchg
fs
ret
jbe
cmp
lods
mov
sbb
adc
arpl
sahf
mov
rcrb
cs
nop
push
add
mov
popf
inc
insb
fnstcw
into
sbb
shl
jecxz
mov
lea
dec
shr
enter
and
mov
lods
xlat
sbbb
sub
inc
leave
inc
mov
xchg
test
jb
mov
dec
and
dec
je
rcrl
scas
shl
push
lcall
stos
ret
add
sbbl
fistpl
out
mov
bound
das
jb
daa
mov
lods
aas
loope
mov
rorb
insl
in
orb
mov
mov
mov
icebp
jle
sub
into
inc
fmulp
pop
sbb
adc
test
mov
leave
inc
shr
cmp
fidivrl
aam
call
ret
sbb
mov
movsl
out
clc
fnstcw
mov
lahf
jmp
popa
sahf
push
lods
jnp
jp
call
jbe
xchg
imul
push
out
in
add
push
pushf
movsb
add
dec
scas
cltd
stos
cltd
cmpsl
test
loope
mov
bswap
xchg
inc
adc
popa
ficompl
mov
repnz
addl
jne
xchg
push
ret
add
xchg
decl
mov
or
lock
mov
add
mov
leave
push
ja
int3
int
jbe
lret
imul
dec
push
je
jne
push
add
dec
jns
bound
pop
jns
push
leave
in
cmpl
enter
repz
sub
pop
lock
sbb
out
mov
aam
or
cld
outsl
jle
xor
in
push
mov
fisttps
hlt
xchg
jg
inc
jmp
insl
pop
adc
inc
mov
popf
and
mov
mov
pop
mull
test
jp
jbe
push
jnp
daa
popf
scas
push
cli
push
popf
xchg
adc
xchg
dec
cs
pop
pop
insl
addl
jae
popa
dec
inc
or
jmp
les
push
loope
pop
pop
push
xchg
push
out
enter
aas
imul
fimuls
fisttpll
shrb
repnz
leave
pop
or
hlt
into
and
arpl
sti
inc
jbe
adc
sbb
mov
popl
dec
insb
or
jmp
fstps
push
lret
xor
test
xchg
scas
popa
mov
and
rorl
std
lods
xchg
push
mov
and
enter
daa
mov
xchg
mov
cmp
jl
mov
dec
xlat
cmpsl
and
and
or
push
push
xor
test
xorb
jecxz
dec
push
cmp
pop
mov
sbb
pop
imul
push
daa
hlt
loope
dec
pushf
sub
dec
sahf
cmp
fsubl
mov
les
popl
xor
inc
mov
add
out
xor
mov
lods
mov
int
scas
in
sub
outsb
pop
mov
mov
push
mov
sub
in
fildl
popf
pop
test
fsub
cmp
add
es
or
pop
pop
xchg
lret
aaa
rcll
sbb
sti
out
into
ja
das
cmc
pop
mov
xor
and
loop
out
adc
adc
scas
scas
adc
jae
xor
lods
mov
mov
cwtl
stc
mov
xor
jge
aaa
or
jns
decb
pop
gs
jle
pop
fabs
cmp
imul
push
adc
sbb
add
pop
adcb
or
cmp
jmp
pop
sub
push
and
sub
or
icebp
cs
aad
je
xor
dec
std
shlb
fnstenv
stc
pop
fcomi
mov
inc
lods
lea
pop
call
mov
imul
add
imul
out
inc
daa
jle
inc
mov
pusha
mov
loopne
dec
lcall
jecxz
lcall
scas
and
mov
pop
sbbl
jge
fisttpl
pop
mov
mov
lock
movb
fidivl
fs
inc
pop
shll
add
mov
cmc
insl
int3
dec
decl
mov
cmpsl
mov
sbb
cld
stc
fsub
lret
mov
cmc
and
add
mov
sarb
xor
pop
ret
stos
sub
push
js
out
int3
xor
xchg
mov
sub
rorl
lods
out
sbb
aam
mov
leave
fsubr
lgs
add
in
cltd
loop
mov
mov
mov
xchg
adc
test
scas
mov
sbb
sarl
inc
rcrl
adc
gs
push
add
pop
pop
xor
outsb
or
sub
mov
pop
adc
daa
pop
test
ja
test
imul
or
daa
sbbb
cmp
jne
icebp
mov
dec
ss
sub
test
jns
push
sbb
lds
cmp
sub
sbb
or
jp
push
outsl
mov
addr16
mov
dec
out
jle
mov
shl
pusha
mov
lods
fildll
and
out
test
cmp
subl
push
or
push
popf
mov
mov
cli
push
insb
stos
test
fwait
push
xlat
insb
loope
pop
jnp
add
mov
adc
js
ret
cld
pop
nop
and
inc
fidivs
inc
clc
or
add
and
inc
mov
mov
or
scas
ss
sbb
pop
repz
fisubrs
neg
rol
fdivrs
push
filds
hlt
sbb
or
cmp
cmpl
push
stc
cmc
aaa
dec
xchg
xchg
or
outsb
mov
or
adc
orb
jo
mov
scas
inc
pop
and
shlb
mov
mov
enter
daa
mov
dec
int3
jno
data16
mov
dec
inc
aaa
popf
ds
movsl
mov
adc
lahf
nop
dec
rclb
movsb
test
dec
mov
jnp
sub
scas
mov
mov
sub
push
out
loope
adc
sub
aam
cmp
mov
push
insl
mov
shlb
lret
roll
jmp
fwait
xor
lods
xor
in
lds
shlb
pop
and
adc
fs
out
fdivrl
sub
sahf
mov
sbb
jg
pop
cmc
mov
rep
mov
into
mov
inc
jbe
or
dec
ss
xchg
int
fsubs
jb
sbb
lret
icebp
shrl
jno
mov
lds
or
cwtl
xchg
cmc
out
add
mov
mov
stos
stc
int3
adc
mov
stos
adc
pop
xchg
mov
lods
cltd
divb
xchg
mov
out
sar
cli
cmp
xor
sub
les
addb
fcoms
loopne
sub
clc
in
adc
dec
imul
fcmovnu
add
mov
sbb
popa
mov
lds
dec
mov
xchg
in
xchg
mov
add
jg
jge
pop
adc
sti
dec
pop
pop
dec
inc
ret
adc
les
stos
repz
push
nop
xchg
push
fsubp
cwtl
call
pop
data16
or
pop
adc
outsl
pushf
inc
ljmp
jg
std
inc
scas
dec
lods
inc
aad
xchg
aas
in
jb
imul
cmp
jp
outsl
lret
stos
mov
lds
sub
mov
xorl
adc
mov
mov
mov
pop
das
xor
mov
sbb
or
mov
jnp
cmp
sbb
mov
add
aam
cmpsl
mov
or
icebp
sub
in
and
movsb
lret
std
int
mov
daa
je
mov
mov
push
cmp
xor
ret
cmp
rclb
cmpsl
fs
dec
adc
xchg
leave
jns
ljmp
cwtl
lods
push
jns
inc
jl
out
aaa
mov
adcb
in
unpcklps
jle
call
push
sbb
xchg
incb
sbb
pop
test
and
xchg
cwtl
sbb
outsl
rorl
daa
imul
push
xchg
add
sbb
jae
push
or
xor
repnz
cmp
fwait
xchg
jp
and
stos
pop
aas
and
ja
rcr
pop
nop
or
add
fwait
and
push
dec
int3
repz
lods
test
pop
sarl
bound
pop
cmpl
push
in
sub
xchg
data16
push
out
insb
lcall
insb
test
sarb
mov
scas
sarb
sbb
in
rorl
pusha
daa
jg
filds
jmp
add
pop
cmp
cmp
int3
popf
cs
fstl
mov
cmp
stos
add
xchg
insb
dec
stos
pop
jnp
cmpsl
jg
xor
test
popa
inc
adc
mov
or
push
pop
jnp
inc
or
jae
or
adc
and
andl
xchg
add
icebp
pop
imul
addr16
and
vpcmpeqb
shl
pop
mov
cmpsl
test
hlt
fs
arpl
pop
jbe
xlat
mov
sbb
inc
and
or
or
add
repnz
rorl
adc
push
gs
sbb
jl
pop
sbb
and
dec
arpl
jbe
scas
movsb
adc
lods
push
pop
pop
test
cmpsb
sub
daa
mov
cmp
inc
mov
out
mov
push
xor
in
dec
insl
movsl
stos
add
sahf
lahf
scas
xchg
cwtl
push
cli
xchg
adc
push
and
inc
add
pushf
pop
repz
pop
push
lret
js
add
pop
jmp
pop
jno
xlat
ds
sub
mov
adc
xchg
pop
popl
push
xor
sbbb
jmp
add
dec
or
in
pusha
pushf
push
mov
mov
dec
sbb
dec
pop
lahf
movsb
or
mov
or
sahf
fldcw
repz
insb
jg
mov
jns
lret
mov
xor
sbb
and
cmp
adc
fcomps
fincstp
fmul
cmp
aad
rol
ret
mov
xor
cmp
cs
xor
imul
stc
orl
fs
stos
dec
adc
mov
mov
xchg
pop
xor
xchg
xor
cli
outsb
push
test
cmp
int
or
sarl
xchg
mov
outsb
loopne
mov
pop
pop
out
fistl
sbb
lea
inc
jb
xchg
lods
mov
stos
cmp
inc
sub
mov
add
outsb
loop,pn
sbb
dec
and
mov
vpsubusw
gs
cmp
aas
pop
sbb
xchg
pop
push
lea
add
cmp
lock
sahf
push
imul
sub
mov
add
jmp
and
adc
jns
inc
lock
aas
arpl
jb
sub
mov
xchg
je
mov
jle
lods
imul
xchg
dec
std
std
out
cwtl
imul
mov
adc
orl
loop
cmpsl
iret
mov
jg
add
or
and
shll
roll
inc
ljmp
imul
cmpsl
mov
mov
add
ret
lret
insb
into
mov
jle
in
and
cmp
rcrb
sbb
arpl
sub
add
enter
sub
fstpl
jp
clc
mov
ja
clc
mov
popa
jecxz
mov
mov
mov
out
lcall
push
jg
mov
jae
ja
sti
mov
cltd
push
stos
jne
bnd
mov
mov
add
jg
jb
js
push
xchg
cmp
sbb
outsl
imul
sub
pop
std
pop
jg
inc
inc
negb
stos
scas
out
add
xlat
mov
ljmp
call
dec
or
add
and
xor
mov
aam
cmp
mov
push
add
or
psrlw
scas
mov
inc
mov
and
lds
mov
add
in
jle
xchg
mov
xor
jl
adc
xchg
pop
hlt
mov
sbb
popa
fwait
mov
add
test
iret
es
pusha
ret
fbld
iret
int3
jmp
into
sbb
mov
aad
add
push
mov
js
push
and
outsb
and
mov
ljmp
cli
adcb
adc
mov
push
test
pop
push
mov
js
inc
adc
inc
cmpsl
inc
adc
or
inc
pop
sbb
jae
pop
xor
sbb
lahf
sub
sbb
jae
push
lds
add
dec
mov
cli
pop
or
ret
sahf
repnz
scas
movsl
inc
arpl
jb
jbe
jmp
jl
leave
and
aaa
enter
insb
rcrl
adc
sub
pop
aas
ja
push
dec
jmp
xor
mov
mov
or
sub
sub
push
test
aaa
mov
lea
aaa
enter
daa
mov
mov
jne
or
jl
das
cmovnp
test
adc
loope
mov
dec
and
fiadds
int
subl
nop
pop
inc
pop
sbb
js
xlat
ficoms
sub
fldcw
add
out
or
mov
int
sbb
mov
insb
jnp
mov
negl
in
xchg
dec
add
cmpl
int
stos
mov
mov
push
lcall
xor
shrb
sub
pushf
cmpsl
sahf
jl
dec
test
or
jp
and
inc
mov
mov
insl
push
and
ljmp
sbb
clc
fcom
xor
notl
leave
or
pop
mov
mov
sbb
cmc
je
cmp
jo
inc
outsl
push
sbb
push
stc
cmp
dec
adc
add
mov
lods
addr16
mov
adc
xor
sahf
sahf
cmp
stos
cltd
or
das
mov
loopne
in
stc
pop
ss
cmpsb
adc
pop
cmp
dec
sbb
xor
popl
aam
lods
xchg
jo
movsb
sbb
xlat
adc
fwait
lret
xor
in
insb
das
cmc
sti
sbb
cs
cmp
aad
fistl
dec
sbb
std
inc
jmp
mov
les
repz
xchg
cltd
lea
repnz
sbb
xchg
or
sub
pop
lds
push
or
fidivrs
add
jb
push
orb
inc
je
sbb
notb
xor
cld
std
movsb
sub
es
add
gs
fiadds
mov
dec
mov
mov
adc
popw
in
das
out
pop
sahf
mov
mov
and
mov
cmp
insl
orl
mov
scas
mov
fidivl
xchg
cld
jp
cmc
lret
fistl
adc
add
jg
ss
paddq
add
push
and
push
shll
fldl
mov
lds
jp
imul
lods
daa
and
mov
std
lret
lods
xchg
xchg
push
pop
adc
psrld
mov
push
call
sub
sub
mov
push
dec
out
mov
xchg
rcrl
jge
or
pop
test
sti
stos
xor
push
dec
jmp
mov
repnz
dec
mov
xor
roll
mov
xor
mov
repnz
mov
es
ret
pop
dec
inc
or
inc
movsl
daa
pop
or
inc
setnp
inc
xchg
jne
xor
out
lds
lea
sbb
jns
icebp
cmp
and
add
popa
out
mov
or
cmp
xchg
outsl
jp
add
mov
stos
loope
and
cmp
jle
pop
xchg
in
fisttps
ffreep
popa
les
roll
xchg
cltd
scas
scas
sbbl
clc
push
push
push
jns
sub
std
push
mov
imul
and
xchg
ss
scas
idiv
out
mov
mov
gs
push
pop
xor
jbe
jae
shrb
pusha
add
inc
fstl
fcmove
lods
dec
xchg
mov
mov
imul
int
lcall
sarl
dec
imul
cmp
lock
cli
and
arpl
outsb
or
filds
aaa
xchg
xchg
or
xor
stos
dec
fmul
xchg
xchg
outsb
pop
xor
sub
in
stos
mov
jo
and
fnsave
and
outsl
cmp
aad
movsb
sub
cmpsb
add
je
mov
sub
or
mov
js
test
insb
jno
les
dec
xchg
fiadds
movsl
mov
insb
js
in
sub
pop
test
lods
and
inc
pop
cli
dec
aas
pop
push
inc
js
cmp
push
push
pop
mov
add
pop
xchg
jl
push
outsb
das
mov
rolb
sub
add
adcb
push
sbb
fdivr
add
pop
pop
xor
dec
pusha
int
sbb
sub
mov
pop
popf
dec
loopne
push
ret
imul
cmp
sub
call
cmpb
jg
shlb
cmp
mov
add
and
adc
jmp
ret
fcoms
push
sti
lret
lret
shl
pop
mov
inc
sbb
nop
mov
cmp
lret
aaa
pop
outsl
xor
or
and
adc
xchg
inc
xchg
lods
dec
mov
mov
jns
cli
aam
adc
pushf
inc
inc
cmp
pop
std
or
ds
fistl
in
loopne
cmp
push
or
imul
sbb
add
mov
xor
pop
sbb
adc
inc
sub
jnp
in
xlat
and
push
cs
outsb
aad
push
add
sahf
fisttpl
sbb
inc
cld
leave
pop
fsts
aas
les
pop
arpl
cltd
dec
adc
das
lret
in
pushf
mov
cmpsb
adc
mov
jmp
inc
divps
sbb
add
inc
ficompl
mov
dec
jbe
outsl
je
ret
pushf
repnz
divb
inc
std
dec
dec
xchg
data16
pop
sub
xorl
fcmovnu
add
xchg
outsl
mov
mull
shrl
mov
aas
fidivrs
and
loope
rcrl
test
in
cmpsl
mov
arpl
mov
gs
movsl
jns
lret
dec
sbb
les
repz
std
mov
rorb
shrb
test
xchg
push
add
out
push
push
test
clc
add
xchg
xchg
ljmp
add
and
pusha
ret
lea
xor
mov
add
push
jb
mov
mov
mov
fucomi
xchg
dec
movsl
test
std
ds
addr16
sbb
lea
rcll
xchg
stos
and
icebp
pop
mov
add
xchg
or
xor
sub
mov
fs
fidivrs
jo
mov
mov
jo
xor
jno
or
inc
icebp
fwait
mov
test
fnstcw
mov
dec
mov
movsb
repnz
jmp
push
jns
or
xchg
push
scas
mov
sub
push
jl
addr16
in
out
bound
push
les
mov
xor
jle
mov
pusha
clc
mov
xchg
sahf
push
dec
jmp
fs
faddl
adc
sub
das
pop
cltd
push
negb
xor
mull
insb
rcrb
scas
pop
out
loopne
add
pop
adc
in
sub
stc
ret
rcrb
js
sub
jecxz
inc
andb
insl
test
in
or
pop
or
fidivrl
xchg
or
sbbl
mov
cld
bound
mov
inc
aam
xor
das
mov
mov
mov
hlt
inc
imulb
jbe
addr16
pop
jb
sbb
mov
jl
push
jg
add
popa
int3
addb
pop
popf
inc
push
push
sbb
push
jo
ret
call
and
cmpsl
sarl
xor
push
inc
iret
push
cmpsb
xorl
pop
lods
cmp
and
cmc
daa
mov
out
cmp
inc
mov
orl
dec
add
ds
lods
movsl
mov
pop
aad
or
push
jae
push
test
ja
lods
inc
scas
and
in
and
xchg
mov
aaa
cmp
cmpsb
nop
mov
loope
cwtl
popf
sub
xor
outsb
xchg
jp
adc
and
lret
pusha
and
sbb
daa
add
loope
xor
filds
mov
jno
sub
sahf
lcall
fsubrl
lods
fsubrl
sbb
sahf
ret
test
cli
gs
xchg
dec
mov
cmc
xchg
clc
out
and
mov
cmp
dec
stc
icebp
notl
popa
inc
roll
jbe
leave
pop
inc
into
out
insl
cmc
add
lods
outsl
adc
pop
loop
xlat
xchg
test
sbb
adc
jnp
mov
les
mov
arpl
pop
push
pushl
jae
sbb
loope
or
sbb
mov
jnp
lds
in
mov
sbb
mov
adc
sub
add
or
xchg
notb
push
sbb
dec
mov
mov
mov
inc
lock
sti
jbe
adc
aad
xor
jns
mov
inc
bndldx
flds
std
rep
cmp
pushf
insl
aaa
lea
mov
stos
stos
jp
sbb
dec
pop
xchg
mov
mov
mov
cmc
test
pop
jno
lret
inc
inc
mov
jb
mov
nop
je
mov
mov
std
repnz
add
pushf
pop
add
mov
movsl
orl
pushf
jnp
jmp
push
lock
inc
das
lods
shl
mov
imul
push
and
pop
push
shr
sbb
cmp
dec
and
cltd
cmpsl
mov
xchg
mov
mov
push
lret
mov
jl
and
or
sbb
sbb
xor
fdivl
popa
sub
inc
jne
es
inc
jbe
fisttpll
lods
fcoms
push
fsubrs
popa
sub
sbb
out
out
ret
scas
cmpsl
xchg
adc
fwait
mov
add
ficompl
adc
fbstp
mov
xchg
movsb
test
ret
pop
inc
dec
sbb
test
xchg
pop
incb
lock
psubsw
push
xchg
cmp
dec
pop
roll
sub
cmp
pop
pop
xor
or
bound
mov
cmpsl
push
insl
mov
sub
pop
dec
sub
inc
rcr
mov
shll
daa
fwait
loopne
sub
pop
arpl
jne
xchg
jae
push
cli
ds
xorl
jns
mov
in
outsb
xor
add
je
or
push
ret
push
jp
jbe
mov
ss
jnp
push
mov
jmp
in
jge
pusha
xchg
mov
filds
mov
jmp
das
roll
push
fsub
jne
jns
inc
mov
xor
jmp
insb
clc
test
jnp
aad
scas
mov
inc
sbb
out
lahf
iret
xchg
xor
cwtl
jne
pop
mov
aam
jae
mov
or
push
inc
xor
das
lea
xchg
popa
mov
iret
imul
mov
lds
push
mov
repz
sub
pmuludq
dec
push
jbe
aam
jge
call
imul
pop
or
dec
add
xchg
cmp
insl
push
bound
imul
cmp
jo
jns
scas
fwait
lock
xor
push
in
jl
aas
xchg
js
xchg
jge
cmpsb
push
popa
mov
enter
daa
mov
fnstsw
push
xchg
jl
and
dec
jno
inc
jns,pt
cltd
movsl
adc
data16
sub
adcl
lods
test
inc
outsl
adc
mov
pop
mov
lds
in
cld
push
xor
xor
and
fistpl
outsb
cmc
pop
jns
mov
dec
sbb
cmp
pop
inc
add
cmovb
sub
push
mov
stos
out
sub
cmp
aam
mov
loope
mov
sahf
gs
mov
mov
movsb
jg
jmp
push
mov
and
and
pop
ss
mov
cmp
or
cmp
aam
push
lret
mov
mov
pop
sbb
and
into
leave
mov
pop
xor
push
mov
aam
stc
pop
dec
push
inc
xchg
ds
repz
inc
cmp
jle
in
out
rcrl
xor
xchg
cmp
cmp
or
pop
repz
push
into
pop
xchg
ss
cmp
pop
and
add
lret
mov
cmp
leave
shrl
mov
sub
lods
mov
sti
and
pop
jp
push
xchg
nop
push
inc
mov
inc
and
jns
cmp
inc
lahf
add
lock
lcall
adc
test
pop
scas
mov
inc
push
pop
push
aas
fbstp
xor
or
je
psubd
mov
jbe
std
cltd
cmp
cwtl
push
inc
xor
ds
jg
movsb
mov
je
arpl
mov
mov
lods
lock
pop
das
mov
mov
lods
cltd
movsb
and
sub
sarl
add
insl
ss
cmp
das
mov
cmpsl
sub
icebp
pop
mov
fmul
sub
mov
dec
enter
jbe
pop
cmp
shrb
add
stc
ret
add
pop
push
or
mov
mov
mov
jbe
and
ljmp
data16
push
sub
mov
xchg
pop
shr
push
jmp
imul
jno
add
push
cltd
sub
roll
in
xchg
xor
daa
test
sbb
xchg
mov
roll
xchg
pop
test
push
aad
aaa
push
jge
shll
add
push
jmp
or
or
jbe
imul
add
out
das
ja
cmpsl
sbb
inc
push
or
into
pusha
fwait
psubd
dec
cmp
cmp
lods
pop
cli
mov
mov
pop
bound
inc
idivb
adc
xchg
icebp
sub
out
mov
sub
cld
mov
aaa
jp
cmp
aas
mov
in
movsl
jle
roll
jmp
mov
cs
fbld
and
xchg
inc
mov
pop
xchg
cli
bound
enter
fwait
shrl
popf
mov
rcrl
loope
and
or
inc
scas
pop
mov
push
mov
dec
iret
out
inc
stos
xchg
lods
pop
fcmovbe
pop
inc
inc
add
jae
rcll
or
jecxz
sbb
pop
loop
test
sbb
popf
adc
push
pop
fdivrp
mov
push
shrb
mov
inc
lret
add
hlt
fistl
jb
sbb
mov
mov
push
aaa
les
or
or
ror
pop
jae
pop
sti
xchg
leave
push
aam
xchg
xor
and
mov
and
cmp
mov
lret
push
in
into
cmpsb
mov
push
in
sub
cmp
sbb
cmp
shll
sbb
dec
loopne
loop
pushf
pop
jmp
and
jp
lahf
dec
xor
push
sbb
push
or
cmp
imul
js
call
add
daa
cmp
dec
mov
sub
pop
sbb
mov
outsb
pop
cmp
fdivs
mov
enter
movsb
xchg
loopne
idivl
push
ret
int
enter
pusha
jecxz
sbb
lcall
sub
jle
aaa
sub
das
loop
or
mov
shlb
jg
inc
repnz
sub
hlt
mov
mov
and
insb
mov
dec
fadd
push
cmc
notl
leave
sbb
mov
loope
xor
lods
into
lods
sbb
xor
imul
stc
push
jns
fs
adcl
lret
lods
add
mov
and
insl
movsb
cmp
and
sbb
or
lcall
xchg
and
push
xchg
adc
cwtl
push
mov
mov
pusha
dec
lock
enter
clc
into
sbb
ret
mov
xlat
adc
mov
sbb
mov
aam
cs
jl
mov
sbb
xchg
cmp
sbb
pop
mov
repz
rol
mov
or
sbb
adc
pushf
dec
in
push
jmp
test
mov
fadds
inc
ja
cmpl
push
xor
repz
je
mov
jecxz
jle
idivb
mov
cwtl
adc
lods
mov
add
cmp
je
xchg
clc
sub
bound
jecxz
shl
ljmp
bound
and
dec
pop
rorl
ds
sbb
lret
mov
inc
mov
ss
cld
es
lret
xchg
dec
in
mov
push
cmp
pop
inc
dec
rolb
cmp
ret
xchg
lret
int
lret
aas
int3
clc
mov
inc
xchg
inc
adc
aaa
in
push
outsl
pop
lods
rol
ret
xor
out
mov
xchg
mov
je
cmovle
add
insl
cltd
arpl
cmp
test
ret
sahf
cmovge
or
xchg
sbbl
cltd
insb
mov
push
addr16
stos
in
jle
push
ficompl
add
pop
jge
incl
pop
xor
xchg
or
push
or
mov
sub
in
jne
mov
cli
pop
dec
push
je
inc
add
iret
or
push
dec
fwait
ds
dec
push
push
cmc
jne
test
or
cmp
movsb
adc
repnz
in
pop
in
inc
shrb
out
out
jmp
or
mov
cmc
jp
mov
pop
mov
push
mov
and
leave
ret
inc
ret
pop
lcall
lds
adcl
push
pop
cmp
loopne
fs
mov
or
cmp
subl
mov
aad
cmp
popf
xor
dec
ret
mov
pop
addl
jae
pop
testb
rorl
les
dec
xchg
cmp
xchg
mov
sbb
outsl
es
fstp
mov
lcall
dec
inc
js
cltd
test
leave
push
mov
test
fdivrl
jbe
or
sbb
push
xor
or
loop
add
jno
int3
inc
push
pop
sub
mov
jo
and
scas
pop
jp
and
xchg
push
movsb
push
fisubrl
push
xor
cmpsb
or
in
adc
enter
daa
mov
jmp
jno
nop
cmpsl
jl
in
dec
dec
and
ds
cmc
test
lahf
imul
out
push
fmuls
inc
pop
sub
cmpsb
cld
pop
icebp
fnstcw
js
sahf
stos
pop
arpl
ret
rcll
sub
stos
int
cmp
outsb
mov
push
xchg
shlb
lret
or
ljmp
scas
xor
sbb
jl
mov
js
sbb
leave
gs
fsubrl
lds
in
adc
sbb
dec
and
movsb
jmp
push
sbb
xchg
sub
and
stos
ss
and
fdivrs
iret
notl
lret
or
rorl
push
sbb
into
popl
jne
aaa
dec
jp
mov
push
loop
imul
int
jmp
adc
mov
dec
xchg
mov
je
shl
nop
cmp
cli
mov
das
sub
push
sar
addr16
gs
cmpsl
loopne
xor
shll
adc
test
xchg
adc
pop
roll
lahf
or
aas
cltd
mov
pop
mov
push
xlat
push
shlb
outsb
and
mov
addl
subl
aad
and
or
iret
dec
cmc
movsl
add
inc
jg
sub
movsl
les
mov
movsl
xchg
lock
cwtl
mov
push
pushf
hlt
daa
pop
jmp
test
cli
inc
pop
lret
xchg
fidivrs
jb
ljmp
int3
stos
jnp
fmuls
ss
out
push
cwtl
int
push
mov
mov
or
rcrb
sub
rorl
adc
sub
lock
pop
hlt
mov
sbb
mov
rcr
pop
or
into
sub
insl
add
jge
adc
or
or
repnz
cld
push
pop
sbb
push
in
mov
pop
or
mov
jns
xchg
rclb
cmc
sub
call
scas
push
nop
shr
fldl
out
cmp
ljmp
pop
lods
add
out
in
sub
xchg
ljmp
shrd
add
negl
xor
xor
xchg
jnp
dec
jmp
mov
sbb
aaa
xor
lock
fs
call
stos
fsubrl
push
jge
mov
loope
add
or
in
push
mov
inc
les
add
jo
mov
pop
jecxz
ja
rol
dec
add
or
cmpsb
lahf
fwait
insl
inc
add
jne
adc
xchg
out
and
pop
bound
adc
in
push
pop
xchg
mov
xchg
sub
repnz
out
adc
les
cld
js
mov
rcrl
jns
push
in
pop
dec
pusha
fs
jns
ljmp
xchg
nop
jle
and
enter
push
popf
out
imul
repnz
push
pop
sub
jl
fildl
fs
sbb
adcl
inc
dec
iret
movsb
pop
adc
shrl
pop
dec
fmull
inc
push
push
pop
jae
xor
inc
daa
popf
or
fldcw
cmp
adc
fimull
js
mov
sbb
adc
xor
inc
inc
inc
mov
adc
data16
mov
es
jno
shll
mov
jge
movsb
fstpl
sub
or
push
imul
sahf
xchg
dec
cs
inc
push
lcall
jo
adc
scas
cmp
and
or
movsb
loopne
and
cmpsb
sahf
jae
divl
enter
daa
mov
in
cmpsl
jg
jno
fadd
jl
test
dec
mov
fadd
movsl
fstpt
and
cmp
mov
and
fsts
inc
ljmp
pop
sbb
out
pop
mov
xor
js
sub
iret
gs
lock
enter
sub
fdivl
repnz
jmp
add
xchg
out
xchg
add
push
enter
sbb
out
sub
repz
push
sbb
loop
aam
xchg
sub
adc
dec
mov
test
ret
jg
or
or
out
and
lods
cmp
cmp
adc
adc
jecxz
mov
or
in
test
into
jb
cmc
push
inc
xor
test
loop
add
mulb
adc
mov
pop
data16
lea
outsl
jne
out
xor
cli
roll
fnsave
iret
test
cmp
ds
or
das
dec
decb
xor
loopne
in
pop
lock
cmp
aam
lods
imul
xchg
aam
add
xor
xlat
xchg
pushf
lds
loope
mov
out
popa
sbb
xor
xchg
cs
data16
aad
pop
nop
in
inc
dec
push
adc
arpl
les
repz
test
call
pop
dec
and
pop
sbb
adc
pushf
lahf
aaa
aaa
jmp
insl
xor
inc
out
hlt
inc
lods
adc
aas
mov
push
sub
leave
cwtl
pop
je
clc
fwait
jecxz
fiaddl
ret
std
mov
cwtl
mov
mov
fistl
subl
dec
fcomi
sub
lock
pushf
lock
push
das
sub
pop
mov
rolb
jne
sub
push
insl
jmp
outsl
dec
push
mov
cmp
in
cmp
fs
mov
pop
inc
mov
cwtl
or
inc
push
sub
ret
mov
scas
push
push
test
pop
clc
daa
test
ljmp
in
lods
test
xchg
and
dec
in
xchg
xor
fmuls
or
movsl
add
out
test
data16
leave
int3
ret
xchg
sub
push
fprem1
sbb
dec
or
stos
lret
and
push
and
add
xchg
pop
or
sbb
xor
sbb
aam
xor
enter
and
mov
out
mov
pop
sub
ja
cs
dec
hlt
pop
clc
inc
das
std
stc
or
rolb
pushf
or
dec
in
inc
jne
push
adc
out
dec
xchg
lret
jns
icebp
adc
test
sbb
adc
mov
in
jnp
cmovb
in
lret
cmp
mov
daa
mov
mov
pushf
mov
pop
pusha
jmp
sub
jg
repz
mov
adc
xchg
pop
or
xorl
push
in
test
push
xor
push
xor
cmpsb
stos
lcall
insb
movsb
sahf
inc
jnp
inc
pop
scas
dec
add
push
imul
ret
pop
pop
jg
jno
bound
lock
sub
or
push
and
lods
mov
sbb
clc
repnz
out
mov
sarb
ja
aas
jmp
hlt
mov
jl
jbe
adc
jge
stos
and
out
sti
aaa
add
or
test
add
aam
pop
mov
xor
sbb
and
mov
je
imul
rcr
xor
fisubs
daa
scas
sub
fidivl
dec
out
jl
stc
add
ds
gs
and
cmp
jg
xchg
inc
dec
test
outsb
cli
testl
or
aas
jl
js
aas
pop
loope
sub
inc
sub
xlat
sub
enter
jecxz
outsb
cmpl
shrb
stc
cmp
sbb
loop
lds
mov
fs
xchg
lret
shr
cmpl
adc
pop
xchg
mov
ds
jae
adc
jg
mov
sahf
icebp
and
andb
mov
outsl
cmp
mov
pop
pop
and
arpl
lods
and
fdiv
add
not
dec
fxch
insl
stos
out
sarl
mov
aam
sbb
add
in
add
outsl
outsl
js
loop
roll
cmp
and
ret
adc
cltd
xor
lods
mov
addr16
mov
dec
xor
out
or
lods
dec
mov
add
in
int3
test
pop
movswl
cmpsl
data16
and
outsl
testb
pop
aaa
xchg
lds
mov
cmp
xlat
shr
test
mov
pop
push
push
sti
loope
jb
cli
sbb
nop
rolb
inc
outsb
mov
fstps
aam
repz
aam
stos
in
or
adc
inc
pop
push
dec
lods
adc
jle
dec
sbb
pop
cmp
adc
aas
pop
inc
call
dec
inc
iretw
je
cwtl
out
imulb
testb
jns
inc
mov
cmpsl
mov
sub
dec
setae
mov
xorl
in
das
pop
mov
inc
mov
mov
stos
sarl
cmp
aam
gs
shlb
dec
or
in
scas
lea
mov
mov
inc
and
in
insl
mov
data16
mov
mov
dec
sar
dec
mov
aam
sub
push
push
stos
xchg
fstl
test
bound
pusha
ljmp
insl
lods
adc
cltd
mov
mov
push
xchg
js
pop
push
push
push
mov
add
pop
xchg
test
repnz
xchg
jg
int3
xchg
pop
dec
mov
sbb
dec
jg
lds
jbe
pop
push
mov
stos
mov
xor
add
scas
in
jmp
lds
pop
test
xor
jge
mov
idivb
mov
rolb
ja
push
out
out
pop
inc
push
or
push
sub
dec
pusha
jne,pt
pop
adc
out
fisubs
je
pop
pop
pop
in
jecxz
xchg
sub
dec
dec
sub
call
cmpb
adc
dec
mov
popf
mov
pop
pusha
lcall
xchg
nop
mov
jmp
es
cmpsl
es
popf
cmp
cmc
mov
jo
into
stos
or
scas
xchg
cmpsb
jnp
lret
stos
lods
mov
outsb
mov
mov
mov
pop
mov
pop
inc
insl
std
les
mov
or
iret
mov
inc
push
xor
scas
or
adc
add
faddl
bound
fimuls
jb
rcl
push
mov
xchg
js
leave
jnp
jmp
arpl
pop
jbe
ret
int
or
shlb
shrb
add
testl
add
aas
pop
mov
lods
push
pusha
xchg
fwait
xor
xchg
xor
and
mov
movsb
divb
push
and
cwtl
cmpsb
xchg
or
in
lds
cmpsb
daa
scas
dec
jp
or
loop
jl
inc
push
pushf
sub
pop
and
imul
arpl
arpl
or
pop
and
pop
and
mov
lret
loope
xchg
pop
sub
xchg
pop
cmp
jecxz
in
add
inc
xor
lcall
sbb
cmp
xor
mov
ljmp
pop
push
shlb
push
lret
fsubrl
push
jbe
mov
mov
test
push
xor
jb
mov
pop
mov
add
and
xor
cmp
scas
sub
testl
pop
xor
sbb
es
cmp
push
xor
outsb
outsl
dec
dec
insl
loop
aam
stc
repnz
fs
pop
dec
adc
cmp
and
lods
lahf
inc
cli
mov
add
cli
cmp
insb
xor
mov
or
push
cmp
shrb
sbbl
jp
pusha
imul
outsb
jno
mov
inc
sbb
scas
pushf
sbb
bsr
sub
and
mov
les
mov
nop
push
sbb
pop
mov
in
fwait
les
divl
inc
cmpl
xlat
les
dec
xrelease
rol
scas
leave
mov
mov
mov
pop
or
push
adc
stos
pushf
cmc
rorb
or
sarb
jecxz
lcall
or
mov
je
mov
jecxz
inc
insb
testb
std
fsubl
mov
mov
fdivrl
adcl
loope
mov
push
mov
das
push
or
das
out
insb
mov
inc
movsb
add
sbb
ror
sti
outsb
es
dec
mov
dec
add
mov
cmpsb
mov
sbb
shl
stos
lret
push
inc
adc
and
scas
ret
fisubs
sub
pop
aam
leave
cmc
ret
iret
mov
push
flds
jns
popf
imul
mov
push
lods
jg
xor
adc
repnz
sbb
adc
add
je
test
and
iret
lret
push
repnz
cmp
sbb
rcll
add
and
pushw
inc
add
lret
inc
mov
xor
in
xor
xchg
mov
cmp
pop
lea
ja
jno
dec
ficompl
xor
fs
push
mov
in
stos
mov
int3
mov
cmpsb
out
mov
dec
aaa
jns
data16
mov
psubb
pop
push
mov
adc
xchg
jecxz
push
or
lods
sbb
jge
test
loop
fwait
in
mov
sbb
bound
arpl
jmp
icebp
sbb
lret
pop
xchg
popf
arpl
sbb
scas
xlat
jae
andb
insb
jp
push
jnp
adc
push
dec
fstl
aad
adc
in
adc
ret
cmp
in
xor
js
ss
and
add
or
dec
iret
inc
aad
sub
xchg
imul
imul
pop
lds
fdivrs
mov
in
mov
repnz
add
push
out
arpl
call
or
pop
push
lahf
aaa
jg
inc
or
cmp
dec
int3
out
lea
inc
push
push
xor
in
arpl
scas
aad
xor
cmc
aas
mov
pushf
xchg
pusha
movsb
adcl
cmpsb
sbb
xor
lods
stos
inc
enter
daa
lods
repz
hlt
jno
fwait
or
dec
or
jnp
lock
and
js
lahf
in
mov
test
add
mov
cmp
cli
js
aas
mov
push
mov
sub
aaa
jno
hlt
adc
outsb
inc
out
arpl
scas
rcrb
add
stc
nop
lds
fstpt
cmp
add
push
shll
dec
int
mov
sub
mov
arpl
and
push
daa
jo
mov
xlat
loopne
cmp
gs
dec
pop
mov
leave
daa
mov
fidivs
std
jg
cmp
push
testl
shrl
cmp
adc
adc
sbb
mov
mov
and
loop
or
stc
test
dec
pop
adc
cmp
mov
and
mov
ret
cli
insb
arpl
push
pop
xor
or
xchg
repz
adc
adc
xchg
pop
dec
sbb
dec
hlt
fwait
imul
shll
movsb
push
sbb
ljmp
sub
mov
and
das
test
jbe
rcrb
adc
jbe
jbe
test
outsl
int
xchg
cli
xchg
push
les
and
push
out
mov
inc
lea
in
pop
clc
xchg
add
pop
mov
xchg
push
pushf
mov
push
pop
pop
adc
inc
jnp
filds
and
jb
shlb
cs
loope
clc
aam
jecxz
arpl
mov
int3
std
andl
mov
mov
aam
cs
imul
fstpt
adc
inc
xor
js
lds
mov
imull
in
fst
rcll
fs
es
sbb
mov
jl
cmpsl
lods
xlat
repz
imul
lret
ret
mov
je
addr16
rcrb
cmc
iret
das
shlb
in
aam
mov
ds
pushf
push
cli
frstor
mov
pop
ljmp
adc
fistpl
out
js
jae
push
and
int
sub
pop
add
xor
pusha
ficompl
jmp
ja
dec
test
test
pop
add
enter
dec
xor
stos
bound
cwtl
push
or
ja
std
cmp
fcos
pusha
movsb
pushf
xor
or
pushf
xor
in
mov
jl
xchg
dec
jbe
ja
pop
add
pop
movsl
inc
hlt
int
or
inc
mov
fdivrs
mov
add
push
pop
bound
pop
data16
icebp
xchg
lret
or
iret
bound
fisubrs
addr16
hlt
jp
lods
xor
test
lods
mov
inc
jle
inc
cltd
in
cmc
fisubs
dec
aas
adc
xchg
ss
jmp
mov
and
mov
pop
aad
push
out
outsl
test
scas
out
insb
in
idivl
and
push
cmp
in
iret
and
mov
inc
xor
jae
and
inc
xor
pop
push
push
pop
pop
ficoml
xchg
ret
sbb
repz
subb
shll
jmp
or
cmp
hlt
leave
imul
sbb
jbe
adcl
ds
inc
or
xchg
ret
test
pop
adc
add
xor
inc
cmpsb
nop
scas
mov
out
and
insl
jp
or
push
mov
dec
loopne
xchg
cmp
cld
xchg
mov
lods
sbb
cmp
jno
js
jl
dec
lods
dec
jp
dec
outsb
dec
mov
idivl
and
stos
push
push
or
sbb
push
iret
push
cld
inc
es
std
test
js
sahf
ljmp
aam
xor
lods
cmpb
push
loope
stos
push
outsb
adc
cli
out
pop
mov
mov
es
sbbl
aam
jo
mov
pop
add
adc
sbb
push
js
aas
faddl
add
into
test
mov
sarl
mov
imul
rorb
mov
das
or
or
loope
sarl
loop
mov
adc
inc
push
inc
into
out
lahf
cmc
cmp
sub
jmp
psrad
jae
stc
pusha
in
mov
adc
push
jg
fcompl
cmpsb
lods
insl
add
insl
out
inc
gs
lahf
das
xor
inc
pop
cmp
or
inc
out
sbb
cmp
adc
or
jle
pop
adc
mov
push
sub
push
popf
fdivrl
and
in
xor
lods
test
mov
lcall
cs
xor
pop
sub
nop
push
test
inc
cmpsl
ljmp
mov
repz
fld
mov
lea
jg
adc
adc
pushf
dec
mov
inc
pop
and
xchg
dec
push
sbb
add
lret
dec
dec
movsl
cmpsb
pusha
je
jno
jecxz
ret
daa
test
hlt
std
sub
or
sbb
cmpsb
xlat
add
and
daa
mov
pop
shlb
hlt
mov
mov
scas
push
adc
imull
shll
es
add
dec
cli
pop
cmpsl
stos
ret
or
dec
icebp
inc
xor
cld
sub
xor
mov
jnp
mov
in
mov
shlb
sub
aam
add
push
pop
aam
ffree
sub
clc
adc
clc
ljmp
adc
jl
out
fistpl
xchg
dec
mov
js
es
lods
nop
xchg
test
xchg
mov
push
mov
dec
in
fsubr
test
mov
cwtl
sbb
mov
mov
ja
stos
xchg
test
add
add
xor
pop
or
xchg
add
dec
dec
mov
lock
add
fs
shlb
or
rcrb
pop
std
dec
jo
cmpsl
jne
mov
pxor
xlat
bound
sbb
jns
insb
in
mov
xchg
sbb
out
mov
sbb
or
jp
pop
ljmp
cld
jae
in
insb
jg
sub
inc
pusha
imul
lret
or
aad
xchg
ja
lock
popf
mov
jnp
inc
fidivs
push
sub
fcmovb
and
mov
inc
jnp
repz
aam
notb
rorb
iret
jg
test
xor
jle
pop
mov
mov
mov
inc
mov
data16
push
sarl
mov
sbb
mov
add
je
iret
lds
jmp
mov
mov
leave
loopne
fdivp
call
in
jbe
mov
jge
lods
adc
shr
aam
std
test
or
mov
mov
pop
inc
dec
mov
xor
mov
ja
and
lods
inc
cmp
jmp
movsb
xchg
adcl
push
adc
mov
divl
daa
stos
leave
lock
jns
jl
adc
dec
jmp
dec
mov
and
add
lahf
and
mov
cli
in
test
lcall
rolb
js
pop
test
push
pushf
das
loope
sti
pop
sub
mul
cmp
xor
fcmovnb
adc
aad
fmuls
aad
jecxz
dec
decb
xor
je
int
xchg
xchg
jle
lcall
mov
sub
mov
test
orb
out
mov
fisubl
pop
cmc
test
pop
ret
push
js
dec
pop
sbb
int3
in
lret
mov
dec
rorl
cmpsl
into
loope
sbb
add
xchg
xor
sbb
fcomip
loop
adc
stc
pop
xchg
lds
ficoms
inc
jle
pop
ret
push
mov
xchg
out
sar
cli
sarb
xor
dec
cmpsl
cmp
rorl
or
andl
loopne
orl
mov
enter
jne
in
mov
add
xor
xchg
shl
add
pusha
fisubl
sub
jns
mov
add
gs
xchg
aad
into
nop
sub
daa
dec
das
insb
jp
mov
fs
xchg
push
enter
sbb
sbb
dec
call
xchg
mov
adcb
lret
div
xchg
jmp
mov
lds
sub
inc
xor
es
xlat
or
jb
cli
pop
dec
sbb
ret
je
popa
js
xor
notb
add
cwtl
das
aas
pop
mov
mov
push
sbbl
fcmovnu
pop
xor
shrl
dec
out
call
mov
gs
stc
and
fs
shll
xchg
dec
cmc
ss
stos
xor
mov
pop
inc
xor
push
add
mov
cmpb
mov
xor
fwait
sub
mov
jg
pop
ret
jl
jns
and
mov
clc
dec
push
jmp
ljmp
lods
ror
mov
fnstenv
push
ret
in
movntq
add
xchg
nop
cltd
in
testl
sub
dec
test
mov
inc
sbb
push
xchg
cli
jnp
pop
add
stos
jbe
call
add
sbb
repz
mov
xor
lcall
add
mov
mov
mov
dec
mov
sub
or
cmp
push
and
jne
lahf
xchg
mov
mov
cmpsb
bound
fs
in
cmc
xchg
mov
dec
in
or
out
fisubs
stos
pop
jp
jbe
insl
and
pop
mov
dec
mov
fldenv
jne
fistps
test
jmp
push
mov
addl
push
mov
ss
fadds
mov
insb
sub
stos
flds
insb
mov
mov
scas
aaa
out
push
arpl
adc
sub
add
dec
push
inc
cltd
cmp
jae
mov
inc
cmp
or
mov
fwait
popf
fidivrl
mov
jo
cmp
pop
imul
ficoms
stos
xor
int3
pusha
and
inc
mov
mov
fisubs
leave
push
nop
jl
xor
icebp
arpl
adc
jge
sub
sbb
xchg
rorl
fs
add
push
repnz
mov
jae
jae
pop
push
in
inc
bound
std
mov
pop
add
scas
mov
cmp
or
movsb
and
daa
cmpsb
mov
loope
enter
daa
stos
cli
push
cmp
insb
ljmp
test
sarl
mov
movsl
add
addr16
lahf
inc
pushf
and
ljmp
mov
xorl
add
jge
sbb
out
push
xor
add
push
cmp
sbb
and
mov
dec
push
popl
call
push
int3
add
jno
xor
lods
push
fcmovb
test
xchg
add
jp
in
adc
push
push
es
mov
sub
and
js
test
sbb
mov
mov
xor
aad
shll
jbe
movsb
repnz
cmp
fwait
test
testl
xchg
cmp
mov
into
les
pop
cmc
enter
mov
xchg
outsl
lret
loop
loop
stc
into
ficomps
fs
and
cmp
mov
inc
out
jecxz
cli
add
jl
cmp
mov
js
pop
mov
gs
mov
movsb
pop
stos
ret
loop
into
sbb
push
icebp
adc
call
adcb
cltd
mov
fwait
rorl
mov
mov
jo
jge
dec
pop
cmp
jmp
push
jne
pop
xchg
adc
lock
int
popa
fldcw
filds
ret
mov
into
mov
js
inc
adc
pop
aam
inc
adc
push
jmp
sbb
pop
imul
and
jbe
sbb
or
dec
xchg
add
out
inc
dec
clc
notb
std
js
mov
ljmp
mov
sub
dec
cmpsb
stos
push
fisttpl
or
mov
mov
lock
arpl
or
ljmp
es
roll
sbb
jno
cmpsl
test
cmp
icebp
out
jge
cld
jle
dec
lret
jo
cwtl
and
sbb
out
push
mov
sub
into
aam
mov
or
pop
push
in
sub
adc
and
cmp
fldenv
or
mov
mov
adc
inc
adc
add
cmp
cltd
sbb
mov
push
cld
jb
das
dec
mov
inc
mov
sbb
je
rcll
xor
push
stos
gs
push
repnz
add
ss
push
cmp
scas
or
hlt
sahf
mov
inc
sub
out
jns
fdivs
sub
inc
mov
xor
xor
mov
xor
cmp
mov
jns
add
in
mov
xchg
mov
cli
cvtps2pi
aaa
or
jp
loop
mov
popa
cmp
jae
jle
arpl
in
add
pusha
mov
inc
push
xchg
scas
mov
cmpsl
xchg
sbb
popf
mov
popf
jmp
mov
stos
push
movsl
stos
dec
jecxz
and
leave
shrb
mov
scas
lcall
adc
lret
iret
cmp
pop
pop
leave
mov
xchg
pop
xor
cmp
jae
xor
fsubrl
sub
inc
sar
cmp
sub
push
sahf
sbb
int3
inc
imul
fidivrs
push
or
pop
in
mov
xor
cld
leave
into
arpl
hlt
jle
outsb
arpl
mov
cltd
jge
xchg
aaa
jnp
pop
or
fnstcw
mov
icebp
aaa
pop
mov
aam
xor
pop
in
scas
push
inc
xor
cmp
xchg
movsb
lods
push
sbb
cmpsb
and
ret
in
dec
data16
in
out
daa
test
mov
jno
out
jl
push
sti
dec
arpl
xlat
and
movsl
or
xor
lahf
popa
sbb
test
xor
addr16
inc
adc
pop
sub
or
and
pop
scas
xor
jg
loope
sahf
jno
popa
add
push
outsb
rol
lods
adc
mov
dec
jne
addl
pop
call
movsb
push
fldl
cld
sub
mov
fstps
jge
sbb
lret
pop
inc
imul
ret
in
pop
jg
xor
mov
mov
or
shr
ss
add
push
lea
lret
imul
jbe
push
sbb
dec
loopne
cmpsl
ss
cmc
jne
xor
cmp
stos
lcall
int
fs
ret
adc
or
lods
and
and
mov
cli
cmp
xor
inc
fimuls
add
aam
jg
pop
gs
rcrl
out
cltd
jg
imul
movl
push
out
inc
sbb
cmp
xlat
dec
xchg
mov
push
ss
in
fisttpl
sti
sti
sbb
cs
dec
cli
aad
jl
nop
loop
cli
dec
in
js
inc
loopne
cltd
ftst
push
rol
test
mov
mov
push
sub
nop
xorl
jae
pop
pushf
dec
aad
jmp
cmp
inc
xchg
push
fiadds
cmpsl
aas
adc
cmc
nop
dec
or
lahf
jecxz
jnp
notb
dec
lds
pop
out
mov
inc
dec
xchg
sub
fstpt
jle
mov
pop
gs
xor
lock
notb
mov
repz
push
lods
sub
out
sub
dec
jmp
stos
cmpsl
test
pusha
mov
cld
test
cmp
and
mov
mov
jno
pop
shr
mov
sub
sahf
aam
iret
sbb
lcall
fnstsw
cmp
ret
jp
fs
adc
neg
out
add
push
xchg
and
pop
push
jns
shld
sub
add
mov
test
pusha
xchg
mov
dec
and
test
sub
sbb
shrl
lods
gs
push
xchg
push
xchg
lahf
or
sbb
inc
add
fcoml
or
outsb
xor
mov
and
jmp
dec
stos
ja
and
dec
cltd
mov
fimull
and
sub
cmp
jne
cltd
pop
mov
shll
loope
iret
pop
mov
popa
inc
push
in
jbe
xchg
pop
xchg
out
out
inc
sub
lret
addr16
sarb
mov
lds
push
mov
imul
push
in
rorl
cmp
out
pop
add
xor
pop
aad
xchg
call
mov
aad
lods
loope
repz
push
ljmp
and
or
insb
xchg
in
push
add
push
push
mov
adc
ror
pushf
ds
ret
mov
inc
scas
iret
lods
jae
dec
xor
aas
mov
jo
mov
mov
push
call
adc
mov
repnz
ficomps
faddp
fisubrl
fdivrl
test
hlt
leave
imul
jge
leave
mov
add
daa
or
mov
mov
andl
jo
ja
scas
xor
and
push
pop
cmp
cmp
movsb
cmp
ds
sti
sbb
cmpsl
xor
call
call
inc
jno
push
addr16
push
xor
ds
std
xchg
movsl
adc
lahf
sbbb
test
sti
inc
bound
xor
js
or
lcall
loope
movsl
ss
lret
pop
negb
adc
inc
mov
push
ss
sbb
in
mov
adc
lds
loopne
dec
int
ljmp
adc
adc
aam
sub
sub
sahf
lretw
fsubrl
xchg
jg
mov
mov
js
mov
stos
xchg
mov
push
cld
and
jo
sub
dec
fcoms
sub
lret
push
rcrl
clc
sbb
aad
into
mov
clc
cmc
push
push
add
push
or
xchg
cmp
sbb
mov
cmp
jno
cmp
rcll
das
xor
callw
lods
or
or
xchg
lcall
mov
or
mov
cmp
adc
inc
pop
adc
imul
jno
cmpsb
pop
notb
mov
dec
into
xlat
mov
sub
mov
inc
add
shrb
scas
test
call
dec
dec
add
jno
sbb
les
js
shlb
dec
out
call
ucomiss
cmp
call
jmp
sbb
pop
scas
jbe
inc
push
and
inc
test
aas
mov
and
dec
xor
push
jecxz
jmp
neg
mov
pusha
dec
ds
inc
push
mov
pop
add
arpl
push
xchg
push
lock
mov
das
and
or
mov
and
movsl
xor
mov
shrb
dec
out
adc
fdivs
std
icebp
pushf
push
stos
cld
aam
imul
mov
mov
xchg
adc
mov
nop
rcll
shlb
aam
gs
sub
frstor
adc
push
cld
xchg
mov
mov
mov
cmpsl
dec
out
addr16
xchg
imul
enter
int
sbb
sub
mov
test
add
xchg
movsb
sbb
jmp
lods
sbb
xchg
xor
inc
sar
jns
pop
add
into
stos
inc
pop
mov
cmp
adc
insb
ljmp
mov
js
xor
mov
enter
mov
nop
and
pop
out
das
movsb
ja
pushf
arpl
das
aam
out
and
out
ja
adc
clc
dec
cld
xor
jne
lods
mov
test
adc
daa
ja
add
push
out
add
mov
addr16
mov
jp
xor
mov
dec
cmp
mov
xchg
cmp
cmp
push
pusha
xlat
enter
lret
je
push
push
jmp
mov
mov
push
cld
sub
popf
dec
xlat
ljmp
and
and
push
insb
cld
xchg
out
add
loope
pusha
adc
push
fwait
jne
adc
pop
pop
iret
sti
int3
cmpps
aaa
das
in
mov
test
inc
inc
or
push
iret
push
xchg
jne
or
mov
mov
popa
insl
xchg
rclb
insl
repnz
jns
leave
mov
addb
out
mov
jge
lock
mov
or
push
ror
fwait
and
sbb
push
xchg
into
cmp
mov
and
testl
push
dec
popa
repz
sub
lret
sbb
enter
daa
cmpsl
movsl
pop
cmp
and
mov
jle
push
jp
movsl
pop
aad
sbb
mov
sahf
or
push
sub
xchg
test
rclb
inc
push
int3
mov
pop
ja
into
js
mov
push
xor
inc
sarb
cmp
or
adc
inc
mov
andb
push
and
shrb
xor
in
add
jecxz
add
mov
push
jp
pushf
add
sub
jno
xlat
xchg
sbb
cmp
add
arpl
stc
sbb
repz
imul
cmp
in
mov
sbbb
or
insl
test
fmul
pop
xchg
test
dec
cli
shll
lods
mov
sbb
cmp
insl
sub
xor
jp
outsl
addr16
loop
loop
repz
push
fs
rorl
imul
lods
lock
mov
jnp
xchg
mov
sahf
jns
xor
in
xchg
add
or
ljmp
cmp
mov
movsb
popf
aas
pop
pop
nop
adc
jge
imul
das
add
int3
xchg
sbb
dec
out
or
enter
in
ret
lods
or
mov
adc
pop
fsubl
cs
aam
mov
sarl
xchg
in
push
cmpsl
sbb
push
cmp
les
cli
pop
mov
mov
call
mov
in
cmp
and
add
les
pop
push
inc
lret
inc
movsl
xchg
adc
popa
and
push
pop
sbb
rorb
loope
je
push
jecxz
lahf
pusha
negb
cltd
aad
sbb
and
mov
decl
sbb
xchg
mov
mov
mov
das
call
push
mov
inc
into
mov
shl
imul
dec
loope
jmp
or
paddb
add
lret
pop
cmc
adc
and
jmp
push
pop
scas
lret
xchg
lret
sbb
das
aad
aam
push
pop
ret
mov
sub
cmp
push
sub
in
push
shll
insb
loopne
mov
lret
xchg
mov
fcoms
mov
movb
fs
cltd
rorb
mov
push
xchg
or
sub
xchg
push
stc
sbb
sbb
push
roll
xor
sbb
fstpt
and
xchg
push
lcall
mov
test
test
xor
divl
mov
outsb
xor
stos
stos
jbe
sub
inc
jle
push
or
lea
inc
nop
cmp
pop
aas
jne
and
repnz
fwait
out
sar
cmc
cmp
in
inc
adcl
rcrl
or
out
addr16
adc
mov
clc
in
stos
xor
mov
cmp
jle
push
lcall
mov
fists
popf
cmpsl
jmp
jle
sub
push
mov
in
mov
push
ss
insb
addr16
jnp
xchg
ret
pusha
or
adc
xor
iret
pop
pop
in
ret
pop
pop
outsb
insb
outsl
inc
lds
mov
or
cmpsl
notl
dec
inc
xchg
fiaddl
lea
clc
sbb
fisubs
mov
shrb
jmp
leave
xor
je
div
fidivs
popf
and
sti
push
sbb
mov
mov
jo
add
movsb
pop
das
jp
push
js
call
jo
fcom
scas
out
or
xchg
popf
sti
pushf
movsb
dec
inc
stos
push
cltd
cmpl
fbld
std
dec
ja
fisubrs
daa
cmpsb
out
cmp
cltd
mov
jp
adc
arpl
inc
mov
and
mov
loopne
std
mov
test
xchg
in
inc
andb
mov
pop
sahf
insb
sub
lcall
bound
push
cmp
rcrl
icebp
push
rcrb
mov
xor
xchg
sbb
add
inc
xchg
xor
xchg
int
mov
insb
pop
push
out
cwtl
lcall
cmpsl
faddl
imul
lods
xlat
movsl
test
mov
mov
push
add
mov
jp
adc
outsl
and
jnp
ss
mov
fadds
or
cs
hlt
mov
int3
mov
pop
xor
into
push
adc
cmc
in
add
outsl
inc
jnp
loop
xor
stc
stos
jno
fs
adc
data16
fstl
mov
push
and
xor
sbb
xor
call
addr16
push
add
faddl
adc
xchg
imul
mov
les
xchg
mov
inc
repnz
fistpll
pop
pop
cmp
sbb
sti
or
ret
jne,pn
pop
aad
push
int3
nop
jae
jns
or
gs
sbb
mov
lret
repz
xchg
or
lea
mov
cmpsb
in
or
addl
dec
pusha
lahf
jmp
xor
pop
cmc
std
incb
gs
inc
mov
jecxz
jb
repz
dec
outsl
jae
je
jmp
jge
fdiv
pusha
xor
adc
mov
xchg
mov
sbb
dec
push
cmpsl
pop
fcmovnb
jb
mov
dec
mov
dec
sub
push
std
scas
das
fmulp
mov
mov
xchg
je
roll
mov
outsl
repz
insl
icebp
lcall
movsl
sbb
icebp
dec
shll
sub
lret
lret
stc
sbb
movsl
lock
pop
into
xlat
push
shlb
cld
sub
mov
cmpsb
ret
inc
dec
out
icebp
vpternlogq
daa
xchg
aaa
lock
ljmp
inc
lods
xlat
aaa
stos
mov
sub
je
push
or
aad
ret
add
fxch
cltd
testl
mov
pop
mov
dec
push
std
ret
inc
dec
xchg
pop
sbb
sub
pop
pop
push
jns
and
push
jle
adc
scas
inc
push
add
scas
mov
dec
js
or
call
mov
push
push
sub
gs
jp
jb
or
mov
jp
jb
fisttpl
add
jne
std
cmpsl
mov
loope
out
mov
mov
jne
jns
fdivl
in
adcl
loopne
sub
mov
notb
mov
enter
mov
in
cli
pop
in
nop
mov
or
arpl
xchg
sti
add
jmp
dec
mov
orl
insl
push
andb
fwait
xlat
idivl
cmpsl
or
and
xchg
insb
rclb
jnp
icebp
xlat
scas
mov
rclb
sbb
iret
mov
xchg
lock
movsl
dec
das
inc
shlb
dec
jae
mov
rorb
mov
push
cltd
sbb
fildl
pop
fiadds
jle
outsl
adc
ror
sub
jge
in
leave
stos
sbb
hlt
stos
test
arpl
leave
sbb
in
ja
sahf
or
pop
mov
inc
xchg
enter
stos
push
pop
cwtl
mov
jo
cmpsb
and
int
pop
and
push
stc
movsb
frndint
push
push
call
fs
in
push
enter
daa
movsl
stos
into
cmp
jno
jb
jl
push
in
andl
arpl
sub
pop
and
test
lahf
fnstsw
fistl
movsl
cmpsb
test
pop
dec
lahf
inc
cmovae
pop
lds
addr16
inc
in
push
jmp
push
mov
loope
xchg
mov
or
jp
outsb
pop
call
shl
pop
stos
icebp
fstpt
sbb
or
xor
xchg
jmp
push
pop
sub
leave
arpl
ret
lcall
icebp
fsubrl
stos
lcall
jno
or
or
mov
jmp
mov
and
mov
aad
and
out
ss
cmp
inc
js
testl
jmp
mov
sub
sbb
out
in
cmc
stos
push
je
jnp
shrl
jae
loop
push
inc
stc
popa
lock
fsubl
xor
aas
call
mov
cmpsl
cmc
out
stc
sub
xor
mov
jmp
pop
or
call
loopne
fisubl
lcall
fistpl
add
add
das
cmpsb
stos
cmp
icebp
mov
sub
pop
scas
mov
xchg
sti
mov
xchg
fdivrs
dec
or
nop
dec
cltd
xor
ret
sub
xchg
fld
sti
xchg
aad
jne
leave
jmp
mov
mov
pop
push
jge
adc
aam
pushf
clc
mov
je
push
pop
cwtl
scas
repz
mov
adc
imul
pop
int
out
cmp
jecxz
shll
std
mov
test
push
imul
dec
cmp
testb
dec
ret
mov
jno
insb
das
mov
int3
and
pop
ficoml
ss
repnz
insl
fsubs
xor
jno
add
and
lret
cmp
inc
mov
lods
je
mov
in
call
test
sbb
and
ret
or
sub
fadds
clc
mov
mov
push
data16
cmpl
xchg
ds
dec
push
in
aas
mov
addb
cmpb
sub
mov
or
xchg
das
pop
dec
mov
mov
xchg
call
pusha
mov
jno
add
sbb
adc
push
and
cmp
lcall
push
xor
cmp
sahf
mov
mov
xor
mov
and
cmpsb
daa
xor
mov
inc
lods
sub
fwait
mov
xlat
mov
mov
mov
or
jns
lods
stos
in
push
gs
sti
ret
out
jnp
mov
fsubs
pop
gs
testb
add
add
sbb
in
mov
shlb
xor
scas
jmp
adc
inc
sbbl
out
ret
mov
out
aam
mov
and
stos
insb
cmp
pop
loope
mov
sub
or
iret
sbb
dec
pop
xchg
inc
fucomi
xor
mov
popa
or
popf
adc
dec
mov
fisubrl
fs
jno
imul
mov
jmp
std
fcmovnb
jecxz
clc
mov
shlb
leave
and
jbe
cmc
mov
aad
lds
dec
sbb
mov
mov
subb
int3
xor
pop
lea
repnz
pop
mov
and
adc
cmp
dec
push
push
aaa
xchg
lea
lret
pop
cmp
aam
push
daa
movsb
hlt
pop
cmp
stos
mov
or
sahf
push
repnz
ds
pop
movsl
das
cmp
and
push
lahf
cld
rolb
test
daa
or
sahf
test
dec
pop
in
cmpsb
cli
js
jnp
pop
xchg
inc
movsl
push
test
loope
sub
sub
sub
cmp
flds
outsb
ret
adc
rcr
lret
testl
lret
add
and
xor
mov
in
and
int
out
sub
pop
or
jle
cmp
push
xor
or
sahf
repnz
test
fistpll
dec
jl
jg
jmp
mov
jp
mov
cld
pop
and
xchg
dec
ss
cmp
std
fs
testl
sbb
mov
lcall
jb
shll
hlt
inc
outsl
add
inc
loop
adc
test
mov
hlt
adc
lods
movsl
movsb
push
mov
cmc
pop
out
and
jecxz
sub
aam
or
icebp
inc
cs
inc
gs
and
jne
hlt
pop
sbbb
mov
and
loop
xor
sbb
std
push
pusha
xlat
test
sub
ret
mov
movsb
sti
data16
xchg
cmp
mov
dec
enter
aas
mov
push
loopne
es
cltd
jnp
int3
dec
outsl
ljmp
or
lcall
sub
or
push
jo
cmp
inc
cmp
clc
inc
icebp
mov
aas
xor
icebp
dec
pop
sbbb
fwait
and
mul
mov
dec
cwtl
dec
pop
cmp
jnp
testb
sbb
add
das
adc
mov
std
pop
lock
rorl
push
mov
lds
stos
xchg
xchg
rcr
add
jne
sub
mov
dec
shl
cmpsl
mov
xchg
sbb
cld
xorb
test
pop
adc
mov
or
dec
sub
addr16
or
gs
jg
ja
ret
inc
daa
clc
jmp
pop
xchg
mov
into
ljmp
push
lods
lods
bound
repnz
out
repz
xchg
test
push
shrb
jo
pop
pop
cltd
mov
sbb
in
lock
dec
and
sub
dec
sbb
sbb
adc
or
scas
in
xchg
les
add
fcoms
xchg
push
xor
xchg
rorl
pop
stos
pop
xor
out
test
xlat
ret
sub
ret
pop
fistl
dec
dec
pop
idivl
or
pop
or
dec
mov
pop
mov
mov
out
jae
jbe
scas
mov
jns
and
in
negl
xchg
shrb
xor
roll
mov
mulb
dec
mov
push
dec
sbb
sub
mov
add
in
scas
pushf
pusha
inc
sti
cs
or
jmp
fildll
aaa
subl
push
push
or
popf
jmp
clc
js
and
fldl
and
fildll
and
adc
push
mov
push
adc
cs
enter
adc
or
out
cmp
add
cli
inc
dec
lret
add
sbb
mov
ficompl
jb
shll
mov
fimuls
cmc
sar
les
and
or
int3
xchg
hlt
inc
and
arpl
lea
ss
sbb
jp
or
xchg
add
ror
sbb
sub
push
and
mov
test
test
scas
mov
and
call
call
cmp
ss
fucomi
mov
lahf
enter
daa
mov
sub
jno
fidivrl
mov
ds
cmpsl
and
push
mov
sbb
push
jbe
cmp
repnz
inc
sub
outsb
pushf
pop
adc
push
js
dec
ja
aad
in
push
pop
mov
mov
adc
outsb
and
jle
shrb
push
cld
subb
sbb
mov
cmp
sbb
mov
sub
aam
pop
mov
stos
lcall
sbb
push
pusha
sub
jae
sahf
xchg
xchg
push
test
pop
andb
jg
and
cwtl
cmp
mov
test
push
and
mov
cmp
mov
ljmp
mov
clc
pop
mov
into
stc
or
xor
lock
outsl
jecxz
fsub
testl
fs
cli
data16
popa
lods
mov
mov
xlat
sbb
cli
push
dec
xor
insl
decl
popf
sarb
push
stos
push
gs
xchg
pop
loopne
clc
xchg
fadd
adc
or
adc
lea
jmp
sbb
cmp
int
sub
inc
pop
in
pop
adc
mov
aad
cmpsl
pop
nop
add
xchg
dec
daa
decl
inc
push
jg
fldcw
dec
fs
jmp
pop
repz
iret
and
pushf
call
mov
test
mov
dec
lds
or
pop
fsubrp
filds
aaa
popa
inc
or
xchg
aas
iret
popa
mov
dec
aam
pop
je
mov
jecxz
pop
pusha
imulb
mov
or
call
mov
ret
outsb
adc
xchg
mov
mov
push
xchg
mov
jmp
lock
ret
jnp
mov
sbb
mov
mov
clc
or
cmpsb
pop
in
int
ret
cmpsl
mov
insl
mov
cld
stos
inc
push
lret
sbb
int
mov
mov
pop
sub
xor
fildll
sub
inc
xchg
aam
inc
ret
hlt
bound
cmp
fcmovnu
sub
test
xchg
hlt
sar
hlt
insb
pop
popa
scas
das
jb
sbb
adc
push
and
xchg
int3
xchg
ficoms
lret
dec
pandn
iret
cltd
pushf
push
test
push
fdivs
lock
imul
mov
cmp
mov
push
pop
pop
jne
stos
out
add
pop
rolb
repz
xchg
lock
jno
or
nop
mov
mov
sbb
mov
pop
xchg
pop
divb
ret
mov
dec
jmp
inc
fisubrl
add
in
arpl
pop
jne,pt
out
mov
mov
out
push
mov
bound
arpl
cmp
in
fsts
out
mov
add
dec
add
test
mov
adc
push
dec
lret
test
aad
pop
rcrl
fidivrs
mov
adc
sbb
sub
push
cmpl
pop
popf
adc
mov
fs
add
xchg
jo
insb
adc
jnp
mov
push
decb
out
shlb
fistl
pop
dec
leave
or
push
jae
mov
inc
push
pop
rorl
xchg
jns
inc
dec
das
inc
ficoml
xchg
xchg
sub
xor
sbb
fisubrs
xchg
mov
rcrb
inc
mov
jbe
pop
leave
nop
hlt
mov
sbb
jbe
push
jge
or
adc
mov
aam
push
cmp
int3
or
pop
jmp
and
add
sub
jo
mov
and
mov
jns
movsb
jp
popa
push
aad
xchg
cmpsb
mov
clc
repnz
daa
mov
pop
shlb
and
xchg
mov
ds
push
pusha
movsl
cmp
push
cld
lahf
cmp
or
push
mov
inc
insl
fwait
xchg
jno
js
stos
loopne
adc
sti
push
aas
pop
loope
ret
test
dec
iret
sti
cmp
sbb
outsl
mov
rorb
cmp
addb
incb
push
lea
out
addl
mov
push
cmp
pop
inc
lcall
stos
fsubrl
or
sahf
cmp
test
xchg
adc
out
xchg
mov
xor
mov
inc
inc
and
daa
ss
push
pusha
testl
rcrb
xor
sbb
adc
or
add
mov
mov
add
jb
loop
mov
push
fs
sub
or
add
sbb
lods
jae
testb
add
cli
popf
push
or
xchg
sti
jno
insb
fidivl
je
in
pop
imul
stos
shrb
jno
pop
add
xchg
adc
xchg
add
loope
xchg
lods
fs
sbb
jae
xor
add
pushf
sub
jno
mov
enter
les
adc
and
mov
inc
gs
fldenv
out
mulb
repz
sbb
mov
push
mov
pop
insb
test
adc
mov
std
jmp
mov
cmpl
daa
adc
jb
enter
and
cwtl
mov
mov
out
std
mov
mov
mov
xor
add
loop
fildl
test
mov
cmp
lock
das
pop
les
paddsb
and
add
es
fldcw
push
sbb
sbb
mov
cmpsb
inc
sti
cld
out
lret
xchg
push
and
repnz
adc
mov
sub
mov
push
ret
xor
push
std
shll
popa
push
sbb
addr16
popa
mov
mov
push
fistpll
out
mov
push
or
int
add
mov
test
jb
mov
jb
xchg
into
sub
loop
test
or
sbb
jp
or
pop
add
jns
push
or
filds
push
pop
adc
xor
cmpl
mov
pop
aas
outsb
mov
push
mov
push
dec
ds
insb
inc
jno
test
imul
dec
adc
in
das
mov
into
cmpsb
out
xor
adc
idivl
xchg
xor
out
push
xchg
sub
cmpsl
pop
jge
add
pusha
mov
outsl
mov
mov
and
in
pop
cmp
mov
les
jmp
jne
dec
addl
push
mov
popf
aaa
mov
nop
push
sbb
mov
es
and
sbb
sbb
jne
mov
sbb
and
sti
iret
xor
cmpsb
negl
cmp
inc
cld
xor
inc
push
arpl
or
push
mov
fcmovb
notl
jg
push
sbb
sub
rcrb
lret
pop
sbb
leave
sbb
cwtl
hlt
jmp
and
call
jge
mov
and
cmc
aaa
jae
or
push
add
adc
repz
pop
sbb
push
out
xchg
xor
xor
popf
and
incb
xor
test
sub
cmp
in
sbbb
daa
mov
inc
movsl
jno
cmp
jl
aas
cmpsl
cli
ds
movsb
into
movsl
inc
sbb
inc
insb
fstps
sbb
shrb
mov
pop
inc
dec
jne
pop
cmpb
popa
lods
adc
mov
ret
push
sub
rol
leave
sub
pusha
mov
sub
xchg
adc
arpl
or
insl
popa
cli
adcb
xlat
add
push
or
cmc
out
adc
and
das
cmp
mov
lcall
movsl
iret
es
dec
xor
decl
jg
mov
js
add
into
mov
push
and
jp
jmp
ljmp
mov
sbb
mov
in
mov
fistpll
into
mov
imul
and
loop
gs
cmp
sub
pop
shll
jge
loopne
pop
shlb
out
mov
loop
push
sbb
jnp
cmp
data16
hlt
loopne
popf
push
pop
rcll
sbb
push
adc
aam
add
inc
in
sbb
scas
out
xlat
inc
push
adc
sahf
dec
nop
mov
xor
sti
jae
lret
out
mov
push
cmp
dec
in
lods
inc
js
sbb
add
push
repz
push
lea
dec
loopne
lret
sub
mov
pop
pop
je
adc
push
call
jmp
enter
decb
inc
iret
bound
inc
jo
aas
or
ljmp
ret
je
rclb
enter
scas
mov
std
push
loope
cwtl
jge
popa
mov
sub
mov
addl
push
scas
out
mov
repnz
cwtl
das
cmp
mov
mov
andb
mov
push
es
mov
insl
je
jecxz
ret
mov
cmpsl
mov
ds
icebp
jge
add
add
lret
testb
and
fbld
imul
sub
aam
aam
mov
ret
adc
and
rorb
je
dec
clc
pushf
xchg
gs
jb
xchg
fiaddl
popa
fnsave
fidivrs
sbb
notl
push
dec
cmp
popf
notb
setns
sti
in
in
adc
imul
loop
pop
push
cmp
enter
sub
pop
shll
movsl
pop
scas
add
int3
sahf
mov
add
sub
jno
aam
shll
call
dec
add
fistpl
mov
mov
xchg
mov
ja
outsb
sub
out
cld
inc
or
mov
dec
xor
stc
mov
cld
pop
out
adc
jne
stos
es
pop
insb
in
lcall
mov
push
or
es
ljmp
mov
mov
lods
jle
cmp
pusha
adc
in
fists
in
xchg
sbb
outsl
jmp
inc
fwait
iret
adc
adcl
popa
rcrl
imul
push
and
or
jnp
jge
scas
adc
mov
arpl
xchg
and
ret
push
pop
mov
dec
sub
outsb
xor
or
mov
xchg
inc
dec
mov
xchg
loop,pn
cli
paddb
xchg
aas
fidivs
sti
lds
mov
dec
inc
add
repnz
push
leave
std
cmpsb
pop
hlt
and
push
mov
jbe
or
jge
out
dec
sbb
mov
loop
dec
lcall
fiadds
xor
xor
mov
lds
insb
or
out
sahf
movsb
nop
xchg
lods
push
jae
push
cmpsb
mov
es
rclb
daa
mov
loop
jno
lret
xchg
daa
dec
dec
scas
popa
lahf
adc
sbb
dec
cld
pop
and
xchg
sti
lahf
js
fists
je
test
push
inc
fildl
jmp
and
out
mov
pop
js
sub
pop
xchg
shll
push
lret
call
movb
xlat
sti
sbb
jle
adc
ds
jmp
sbb
sar
xor
lds
int
and
popf
pop
or
test
faddl
mov
jle
out
test
roll
bound
xchg
mov
fnstenv
stc
movsl
ss
or
addr16
testl
add
rcll
mov
lahf
fxch
mov
insb
xor
fisubrl
xchg
loop
jae,pt
hlt
add
call
data16
jns
inc
push
mov
pop
cmc
push
cli
add
add
cmp
xor
push
aaa
mov
inc
iret
loopne
jmp
adc
pushf
imul
jbe
add
sub
xchg
xor
daa
cmp
xchg
pop
xlat
andl
mov
sahf
test
sti
and
shrb
in
rcl
andl
xchg
xchg
fimuls
clc
movsb
inc
mov
adc
rcll
test
fcom
loop
fsubs
lea
popf
movl
repz
pushf
dec
sarb
pop
int3
xchg
pop
jae
inc
push
mov
inc
pop
jecxz
aas
lods
add
dec
cmp
je
pop
popf
jecxz
sti
div
clc
sar
mov
cwtl
cmp
std
mov
cmpsl
sbb
fnstcw
outsl
fneni(8087
pop
in
mov
or
lock
loope
sbb
cmp
inc
pop
sub
rcrl
fdivl
xorl
mov
mov
mov
jo
test
cld
sub
pop
lret
gs
mov
iret
in
mov
mov
rcrb
push
sub
xchg
pop
aam
in
cmp
mov
inc
or
fwait
xor
clc
xlat
push
ljmp
outsb
lods
pop
test
mov
jg
clc
xchg
mov
sub
paddb
testb
cltd
inc
or
test
inc
lock
mov
dec
dec
shrb
xchg
push
sbb
adc
mov
nop
pop
pop
pop
iret
stos
mov
pop
push
add
inc
jnp
pushl
jge
cmp
or
sbb
xor
jl
mov
jecxz
ss
xor
sbb
lcall
das
pavgb
adc
lds
push
cltd
mov
cmp
cli
push
lret
pop
test
pop
jns
xchg
into
fldl
out
push
shrb
popf
fwait
push
jmp
cmpl
jno
stos
fwait
inc
mov
and
mov
jo
or
insl
fildll
aaa
xchg
in
mov
jmp
or
andl
push
adc
xchg
push
gs
and
lea
fimull
std
jnp
jg
scas
js
rcll
dec
adc
inc
ror
repz
in
adc
pop
out
or
jae
lds
lret
inc
or
add
mov
fisubrl
negl
sbb
leave
cwtl
imul
scas
lds
inc
scas
mov
outsl
hlt
leavew
je
mov
insb
add
jbe
xchg
sbb
push
sbb
inc
pop
mov
int3
leave
bound
js
popa
push
lods
aad
xor
out
and
decl
cmp
inc
notb
jecxz
cmpsb
inc
add
xchg
loope
mov
sbb
sbb
jnp
jl
fldt
ds
xor
jbe
adc
ret
test
push
cmpsl
movb
dec
in
mov
js
dec
fcoml
sarl
jecxz
cmp
sub
decl
cmp
jae
adc
sbb
mov
sbb
push
mov
xor
push
sti
adc
int
cs
fisubl
pop
xchg
and
rcl
fsubrl
fnstenv
sahf
and
adc
and
or
mov
dec
mov
bound
pop
lods
jae
cmp
test
push
test
ljmp
movsb
mov
sbb
pusha
cmc
push
rcrl
pop
xchg
mov
stc
stos
pop
sub
lods
adc
lods
out
orw
sbb
jns
jle
and
xor
mov
sahf
or
scas
fstpl
fnstsw
jl
loope
jmp
adc
xchg
push
imul
insb
jle
lods
aaa
inc
xchg
cmc
bound
cmp
or
shr
sub
shr
or
ds
rorl
insl
aad
xchg
jno
jo
outsl
dec
mov
xchg
repz
mov
inc
repz
dec
cld
fisttpl
add
shll
pop
test
cmp
fldz
mov
xchg
add
fldl
inc
fstpl
jno
dec
in
or
cltd
or
dec
mov
sti
je
cmp
mov
xor
outsb
ljmp
movsl
jo
orb
fisttpl
and
mov
mov
lock
mov
mov
stc
fcomi
and
pop
push
shrl
or
add
push
insl
inc
jg
dec
mov
popf
sbb
sub
jb
push
lds
lret
aam
scas
mov
rorb
ret
pop
add
cmpsl
mov
popf
sub
hlt
sub
add
ret
xor
add
ret
clc
adc
inc
xchg
lock
ljmp
ret
lret
mov
out
loop
and
pop
pop
mov
pop
push
outsl
add
mov
push
test
scas
cmp
cld
sbbl
xchg
pusha
push
sbb
or
pop
add
dec
fcomps
repz
cld
add
call
jg
xor
xchg
xorl
sub
outsl
nop
pop
pop
adcb
and
sbb
ret
jl
ss
dec
fwait
mov
fidivrs
lret
out
into
bound
add
mov
sbb
and
sub
cwtl
xchg
push
addr16
mov
jle
andl
mov
popl
ja
fisubs
cld
dec
fisttps
subl
add
push
xchg
xchg
push
xlat
repnz
popf
lods
data16
pusha
out
stos
cmp
xor
insb
mov
inc
out
scas
fistl
push
push
sbb
xchg
adc
mov
and
daa
xchg
pusha
pop
es
sbb
pop
movsb
inc
pop
sub
clc
push
inc
pop
stos
fcmovu
test
xchg
test
icebp
sbb
push
sbb
and
fidivrs
stos
rolb
clc
bnd
leave
jmp
xchg
hlt
mov
in
arpl
divl
ja
jge
pusha
push
sbb
mov
or
outsb
add
cmp
mov
lcall
sti
cmp
nop
loopne
xor
inc
jnp
scas
out
xchg
and
cltd
or
es
cmpsb
lds
dec
enter
daa
sahf
jle
cmp
push
pop
jl
arpl
dec
mov
mov
movsl
pop
mov
and
sub
lahf
mov
xchg
push
xchg
add
push
jmp
movsb
xchg
cmpsl
add
out
mov
movhps
xor
push
and
loope
test
sub
or
cmp
pop
aaa
adc
hlt
lahf
jg
int3
loopne
sbb
cmpsb
add
mov
fs
dec
int
sbb
sub
mov
lcall
out
sbb
sub
sub
test
mov
clc
jg
mov
mov
adc
mov
ss
int3
mulb
xchg
inc
dec
ss
ret
sahf
stos
fcomps
xchg
idivl
jp
nop
mov
mov
cmp
cmc
sbb
push
xor
add
outsl
ds
pushf
loop
lea
fs
cmp
lods
fmull
jge
test
imul
pushf
cmp
xlat
into
or
test
outsb
gs
xchg
loopne
stos
ljmp
adc
add
repnz
mov
add
outsb
xchg
mov
push
xchg
cmp
pusha
xlat
incl
push
sub
or
in
je
or
xorb
aad
or
nop
dec
orb
mov
push
flds
xor
repz
fadd
fisubrs
nop
lea
call
add
packssdw
xor
gs
movsl
in
daa
jmp
pop
inc
pop
or
adc
xchg
add
movsb
jb
fisttpll
dec
daa
bsr
push
jecxz
out
idivb
stos
std
dec
or
mov
sub
addl
pop
mov
mov
imul
out
out
xlat
das
decl
mov
in
shlb
mov
xchg
lcall
dec
mov
mov
add
mov
xorb
mov
fldl
sbb
shrb
sub
cli
jp
into
push
insb
ret
mov
subl
dec
int
xchg
das
sbb
ljmp
jnp
das
ret
xchg
mov
inc
or
lcall
mov
cltd
scas
pop
fwait
test
push
scas
xchg
cli
cld
dec
mov
mov
xchg
jne
inc
add
sbb
pop
stos
cltd
leave
push
xchg
pop
and
jp
cmp
xor
lret
and
mov
nop
mov
test
mov
cmp
int
dec
or
int3
inc
int
xor
sbb
dec
fisubl
jne
in
mov
cld
adc
lods
cmc
dec
bound
mov
stos
in
xor
xchg
insb
test
inc
insb
mov
sbb
or
movsl
cmp
mov
push
dec
mov
in
pusha
jle
test
nop
pusha
in
jl
lods
cmp
sti
fstl
addl
daa
popf
sarl
mov
lahf
cmp
stos
mov
push
or
push
insb
sub
scas
ds
inc
push
popa
push
adc
cmp
pop
pop
addr16
jae
cmp
inc
pusha
add
or
cli
popf
js
ficoml
call
imul
ficomps
xor
cmpsl
push
cmp
mov
lock
repnz
inc
call
arpl
sub
jge
outsl
inc
sbb
dec
aaa
outsl
pop
xchg
or
sub
nop
int3
lahf
pushf
loope
cmp
sub
pushf
jmp
add
and
movsb
xor
repnz
dec
fdivrs
sbb
enter
daa
popf
arpl
cmp
or
dec
jl
sbb
rorb
adc
jnp
push
movsl
pusha
cmpsb
insb
and
push
push
push
fwait
daa
push
mov
xchg
inc
xchg
pop
push
pushf
pop
std
orb
inc
scas
pop
dec
and
js
sub
out
mov
outsb
ja
mov
ror
mov
sbb
jge
dec
add
add
or
repnz
ss
add
int
in
push
sub
decl
push
adc
xchg
ljmp
xchg
xor
sahf
roll
mov
add
mov
push
scas
mov
xchg
push
and
cmp
cmp
sbb
pop
idivl
xchg
repnz
pop
rcrl
cmpsb
mov
bndstx
sub
sbb
jecxz
repnz
hlt
outsl
sbb
add
stc
sbb
jae
xor
jno
xchg
cwtl
sbb
fwait
out
lods
divb
into
mov
inc
lods
out
mov
or
cmp
push
jns
and
dec
cmpb
mov
mov
cmp
mov
data16
push
cmp
xchg
jnp
lods
sbb
lcall
sub
dec
mov
fildll
imul
test
movsb
nop
es
dec
popa
adc
fnstcw
jle
sub
add
loope
aas
lea
dec
movl
xor
outsl
dec
pop
mov
cmp
push
dec
aas
mov
aaa
jb
in
dec
sahf
xorb
jecxz
inc
pop
idivb
mov
inc
sbb
dec
das
dec
mov
add
jno
dec
xchg
iret
adc
mov
mov
mov
lock
push
xor
addr16
xor
and
or
insl
adc
test
scas
or
cmpsl
pushf
cmp
adc
fsts
cwtl
cld
lods
jge
lret
mov
sbb
in
pop
mov
in
dec
rcl
jno
sub
movsb
mov
ret
dec
ret
int3
into
js
adc
clc
mov
xchg
outsb
push
movsl
ljmp
or
and
test
mov
jbe
arpl
inc
mov
sbb
test
cltd
out
sub
push
sbb
cmc
lret
inc
test
adc
sbb
dec
clc
sarl
xor
cmp
add
xchg
sbb
call
lds
xor
jge
pushf
imul
fistpl
mov
lods
fs
mov
clc
inc
ja
sahf
cmc
add
inc
xchg
fwait
sbb
dec
mov
inc
loopne
cmpb
mov
bound
inc
cwtl
in
or
xchg
mov
daa
subb
dec
in
addr16
sub
nop
mov
imul
rorb
outsb
inc
jle
mov
in
in
pusha
adcb
int3
push
rcll
bnd
xchg
insb
ret
adc
bound
mov
dec
push
ficoms
inc
stos
and
mov
xchg
dec
or
sbb
scas
mov
jne
adc
push
ret
lret
or
inc
xor
xchg
jae
pop
or
arpl
or
jne
insb
inc
inc
push
ret
fiaddl
xchg
xor
loop
cmpsb
out
mov
shrl
cs
movsl
sarb
lcall
insb
stc
hlt
dec
sbb
shll
sub
popa
mov
leave
mov
movsb
mov
add
inc
int3
mov
xchg
pop
add
sar
xor
imull
scas
movsb
pop
and
sub
movsb
mov
jbe
cmpsb
lret
jo
in
add
in
enter
daa
pushf
int3
movsl
cmp
gs
jl
lock
xrelease
sahf
pop
movsl
addr16
jo
inc
push
negl
cmp
push
pop
scas
push
jg
fiaddl
outsb
cmpsl
sub
xor
js
sbb
dec
push
dec
es
repnz
mov
or
adc
stos
aad
xor
negl
orb
xchg
ret
roll
int
mov
addl
jns
lcall
dec
fdivl
sbb
int
or
test
add
andb
clc
jg
sbb
mov
xor
popf
xchg
ss
jb,pn
adc
mov
idiv
cli
push
lret
dec
shrl
and
xor
iret
into
cs
cld
cmc
stos
push
repz
loop
lods
ret
cmp
fs
repz
data16
out
lods
fldl
mov
xor
je
iret
bound
xor
int
or
pop
push
mov
lock
pop
mov
adc
add
push
popa
adc
inc
cmp
pop
repnz
mov
or
aad
rcl
mov
sub
femms
mov
dec
pop
ds
fimuls
push
outsb
add
nop
add
sub
sarl
xlat
mov
scas
pushf
movsb
les
fpatan
adc
scas
in
push
lea
dec
sub
daa
dec
movl
cli
mov
pushf
sti
pop
mov
fildl
push
inc
leave
ja
aas
sub
es
adc
aad
jecxz
in
idiv
std
lcall
mov
mov
add
adcb
pushf
adc
mov
cmpsb
mov
pop
lock
hlt
xchg
das
xchg
xor
fnstcw
add
push
rcll
in
enter
repz
stos
pop
int
fwait
xchg
sarl
mov
mov
fcoms
sbb
and
mov
jmp
cmp
pop
add
psrld
arpl
fs
fucomp
fs
nop
push
fnsave
pop
mov
ret
adcl
push
cmp
lods
add
cmpsl
push
out
or
xor
cwtl
outsl
jns
js
dec
add
xchg
lret
mov
test
fistpll
test
arpl
pop
jae
test
mov
xchg
sbb
sbb
pop
push
bound
push
fsubrl
add
mov
in
out
adc
daa
fmuls
adc
and
dec
pushf
mov
out
xchg
xchg
mov
mov
clc
ja
mov
jp
sti
push
pop
or
out
fwait
dec
mov
dec
mov
add
aas
out
imul
jns
xlat
stos
in
cmp
xchg
or
call
sub
mov
call
jp
xor
mov
mov
cmp
jle
mov
in
dec
pusha
sbb
pop
fucomip
dec
adc
jmp
fisubrs
push
and
mov
sbb
loope
and
sti
scas
insb
add
je
ss
scas
add
sbb
in
adc
push
outsl
mov
ret
lcall
popf
pushf
jae
ret
jne
or
fadds
inc
ret
mov
push
xchg
mov
imul
fisubs
fld
add
repnz
cmp
hlt
cwtl
and
jbe
add
jge
cmp
addb
in
jo
or
out
int3
jne
pop
xor
xor
cmp
sub
scas
addl
cmp
lds
test
dec
jge
in
ljmp
daa
fwait
mov
divl
cmpsb
mov
dec
flds
aas
movsl
outsb
mov
and
popf
ret
mov
push
push
pop
xchg
test
dec
jb
inc
movsl
cmp
lock
pop
pop
dec
ret
inc
js
mov
pop
int
adc
loope
int
sub
sub
pop
outsb
cmp
shlb
rolb
mov
xor
mov
shl
xor
lds
int
cmp
sub
jbe
lcall
outsb
fisttpl
sub
sbbl
lret
cmp
shlb
mov
pop
add
mov
ss
cwtl
sbb
nop
mov
test
imul
pop
sbb
inc
into
adc
jne
jno
ret
fwait
cltd
outsl
inc
loop
mov
fs
push
sbb
xor
jg
les
mov
out
shl
cli
add
imul
stos
or
shll
loopne
insb
dec
pop
jnp
imul
in
push
adc
mov
xchg
add
out
mov
fidivrl
adc
adc
push
and
in
mov
add
shl
mov
or
adc
mov
pop
xchg
movsb
inc
ljmp
les
jne
jecxz
add
xor
call
movl
rclb
int3
push
jmp
pop
jne
testb
inc
stc
inc
mov
aas
mov
jb
sahf
dec
mov
xlat
je
push
xor
and
pop
testb
std
inc
cmp
cwtl
fistpll
and
mov
popf
hlt
or
sub
jmp
mov
imul
jae
das
mov
aad
popf
and
fisttpll
adc
outsb
dec
movsl
inc
mov
lcall
icebp
xchg
lret
nop
mov
mov
repnz
mov
and
shlb
movsb
sub
in
aam
ljmp
push
xor
pop
bound
xchg
in
dec
aaa
ljmp
lods
jo
or
outsb
outsl
xor
jae
inc
inc
test
cmovns
cltd
push
clc
fiadds
or
xchg
push
jbe
ret
incb
xchg
inc
negb
pop
sti
sbb
push
aas
pop
mov
push
stos
data16
jg
aad
jnp
flds
lret
aas
test
mov
xor
mov
inc
xor
imul
cmp
outsb
adcl
jecxz
cmp
inc
or
mov
fwait
ja
fisttpll
sahf
cmp
sub
mov
mov
out
dec
dec
inc
fldcw
arpl
push
in
mov
loopne
sar
lods
sub
test
addr16
leave
adc
fisubrl
inc
mov
dec
inc
jae
jnp
xchg
or
pusha
mov
insl
fisttps
inc
in
or
int
loopne
cwtl
xchg
add
xorl
js
jecxz
popf
popf
dec
pop
mov
push
pop
push
stos
or
mov
insb
imul
in
or
ss
cmp
into
jae
ret
adc
inc
and
stc
jae
insl
in
inc
imul
icebp
inc
inc
ret
leave
fisubrl
adc
sbb
aad
imul
fiadds
mov
cmp
dec
shl
cmp
repnz
fwait
pop
leave
cmpsl
push
hlt
jecxz
fbld
mov
jbe
lret
repz
cmp
rorl
cwtl
and
pop
arpl
xor
lods
lods
loopne
bound
cmp
dec
jmp
xlat
or
sar
shr
jne
daa
lcall
jno
or
cltd
int3
movsl
dec
dec
aam
ds
mov
jne
jne
jge
repz
xor
push
loope
sub
adc
inc
push
mov
into
pop
jb
cmp
call
push
dec
ss
int3
mov
cmp
cmpsl
sahf
outsb
mov
cmp
shlb
push
popl
in
sbbb
fs
xlat
pop
add
xor
xor
jmp
int
mov
sbb
add
cli
lcall
jbe
xchg
sub
adc
ds
addl
mov
mov
dec
mov
xchg
xchg
and
pop
pushl
aam
pop
cmp
dec
jo
idivl
or
fucomp
dec
mov
ret
js
sahf
hlt
dec
mov
cmp
cmc
outsl
mov
pushf
mov
fs
call
xorl
lods
stos
adc
add
ja
jns
cmp
xor
jp
cmp
adc
test
push
decb
mov
pop
lcall
imul
and
push
xchg
les
mov
cmp
stc
xlat
sti
jno
sub
in
mov
and
ja
cmp
out
cs
lcall
push
ss
jle
aad
std
xchg
les
mov
ljmp
call
add
lea
mov
pushf
push
adc
jmp
divl
cltd
cmp
inc
add
inc
cmp
jb
xor
add
jecxz
lock
test
cmp
cwtl
lcall
mov
ja
andl
and
cli
sub
mov
fisttpl
pop
dec
sahf
das
push
jnp
mov
mov
fldenv
fists
xchg
leave
xor
mov
dec
mov
je
mov
pop
or
cs
out
mov
stc
call
cwtl
pop
inc
lods
rorb
dec
sub
sbb
ret
sti
pop
mov
fldl
xchg
psubsw
lcall
popa
jle
adc
mov
out
shll
call
dec
or
mov
and
ja
mov
out
xor
pusha
xchg
addr16
test
mov
cmc
sbb
pusha
add
shrl
pop
xchg
stos
push
negl
and
add
out
xchg
ljmp
push
cmpsl
or
jg
xor
sub
mov
jne
sub
sub
les
and
inc
sub
mov
into
fwait
cmpsb
pop
sub
lock
mov
mov
imul
insb
sbb
jns
in
push
in
xchg
loope
test
cmp
push
adc
pop
mov
or
test
stc
fst
jp
xor
xchg
mov
mov
xchg
loopne
lcall
fildll
inc
cmp
fildll
jmp
int
mov
cmpsb
int3
std
popf
outsl
test
out
push
fwait
mov
stos
jl
sahf
and
insb
orl
xchg
popf
je
lret
push
jge
mov
iret
sub
xchg
cmp
ja
push
or
sbb
inc
insb
jecxz
or
out
loope
shll
pop
aad
xchg
aaa
mov
sbb
out
xchg
fsubrp
sub
rorb
mov
popa
pop
nop
leave
ds
add
jge
jbe
stc
and
sbb
clc
icebp
aaa
imul
add
jg
int3
dec
add
xchg
out
arpl
jmp
xor
or
scas
inc
iret
test
jno
cmp
dec
sbb
insl
arpl
mov
lcall
fcomps
dec
xchg
int
les
dec
mov
jmp
movsl
jl
push
and
stc
cmp
mov
sub
push
loopne
pop
inc
ret
cltd
jbe
test
xchg
push
js
and
pop
dec
and
cmp
clc
loope
out
push
adc
outsb
add
adc
cmp
subb
mov
add
call
add
or
sbb
sub
std
arpl
in
rcr
xor
loop
dec
push
insb
sahf
repz
mov
lds
adc
dec
movsl
mov
decl
mov
push
int
frstor
jo
push
in
aaa
fadds
mov
xor
dec
sub
je
add
mov
lock
jmp
xor
dec
stos
loop
loope
stc
cmc
fdivs
rcrb
push
lods
xchg
rcrl
out
stc
arpl
push
or
cmp
hlt
pop
or
cmpsb
test
scas
movsl
dec
gs
mov
loopne
push
sub
and
in
imul
adc
add
adc
xchg
xchg
loope
xchg
in
out
and
dec
sti
jmp
je
jl
ljmp
aaa
pop
dec
fstpl
add
push
fsts
les
imul
in
sub
call
orb
pop
mov
loopne
jecxz
jp
cld
das
xchg
jmp
push
repnz
cmp
jbe
pop
scas
cmc
inc
sbb
push
aas
add
or
jp
jl
aam
movsl
jecxz
pop
das
test
mov
jbe
cwtl
push
andb
in
push
xor
cli
pop
sub
fldt
loope
mov
inc
ja
shll
push
das
xor
mov
mov
push
xchg
es
js
insl
lods
insb
int3
dec
fwait
rcrb
mov
xor
fsubrp
lret
outsb
fbld
cwtl
aam
and
gs
mov
sbb
mov
aam
fwait
sub
mov
sbb
lea
clc
je
pushf
xchg
push
lret
ljmp
push
lods
inc
add
mov
xor
adc
push
sub
xchg
sarl
xor
insb
testl
and
dec
xchg
rorl
rclb
les
rcrl
insb
push
pop
pop
pop
stos
inc
mov
push
lds
js
mov
in
add
xor
int
xor
push
or
mov
fnsave
mov
in
into
ja
mov
jne
rclb
fwait
aad
add
cmp
movsl
sub
out
or
jecxz
shrl
in
mov
jecxz
popf
inc
sub
jp
int
clc
jne
jp
inc
aam
mov
sahf
mov
sub
shll
mov
divl
fisttps
or
into
and
xchg
cwtl
sub
orl
push
imul
ret
push
ficompl
and
shrl
xchg
jnp
sti
into
scas
sub
mov
adc
xor
iret
mov
ret
mov
jo
mov
pop
sarb
mov
inc
outsl
std
push
or
faddl
nop
ficoml
fwait
enter
fs
or
lock
push
repz
mov
ror
jb
hlt
jns
arpl
mov
jmp
adc
sbb
out
ds
xor
add
add
pop
roll
loop
lahf
xor
arpl
or
add
sub
lahf
testl
cmpsb
xlat
pop
sbb
lahf
jge
enter
daa
cwtl
cwtl
cmp
ja
and
jl
clc
sbb
lds
sub
movsl
cmpl
mov
inc
lahf
jo
rclb
shrb
stos
jl
inc
push
xor
cmp
pop
rcl
js
dec
adc
mov
int
mov
sarl
add
data16
rclb
xor
cmpb
pop
sbb
push
add
repnz
xor
repz
push
adc
ror
les
sub
out
pop
add
jns
inc
sbb
paddd
cmp
jg
xchg
hlt
out
dec
jbe
orb
divb
xor
add
sub
and
adcl
cmp
rcll
lret
inc
or
mov
das
lcall
in
push
push
cmc
movb
outsl
js
stos
loop
pop
movsl
stc
lods
stos
popa
fs
push
adc
or
data16
lods
jns
mov
out
push
push
cli
fwait
iret
sbb
test
bound
cld
jecxz
movsl
dec
out
mov
test
sub
push
inc
adc
push
pop
add
nop
dec
sbb
rcr
xlat
jns
mov
test
ss
in
testb
lcall
aad
std
jne
insl
xor
cmp
sbb
push
sbb
fs
and
push
ffree
lock
jge
mov
icebp
inc
push
aad
push
arpl
cmp
test
jnp
pop
fbstp
inc
mov
jecxz
xor
mov
cmc
dec
icebp
stos
jecxz
pop
jge
dec
or
testb
in
ss
adc
mov
or
loope
xchg
jo
dec
sub
jno
pop
pop
mov
cwtl
ljmp
adc
in
mov
cli
dec
xchg
and
fisubrs
es
lcall
xchg
jae
cmpsl
xchg
add
ss
or
xchg
cld
test
push
lret
fstpl
mull
add
sbb
xorb
shl
loop
sub
jb
ret
sbb
test
ror
xor
scas
fisubrl
test
fdivrs
popf
lods
mov
int3
mov
xchg
cmpsb
xchg
flds
mov
hlt
push
and
dec
xchg
adc
inc
mov
mov
outsb
daa
xchg
push
pop
dec
clc
clc
pop
test
adc
xchg
popf
push
sbb
arpl
outsl
iret
fistps
add
xor
fstps
push
mov
add
xlat
ljmp
lret
xor
push
das
or
mov
aas
mov
sti
fstpl
add
pop
lahf
cmp
ja
js
dec
mov
repz
or
cs
dec
sub
xorb
inc
mov
sbb
out
out
mov
xchg
or
jns
xchg
cmp
mov
pop
xchg
inc
fmul
out
popf
dec
sub
jne
mov
notl
movsb
mov
ljmp
cltd
xorl
in
xor
xchg
push
fbld
cmp
xchg
arpl
cltd
push
sub
xor
fdivrp
xor
stos
lcall
js
jnp
sbb
scas
nop
cmp
push
or
inc
iret
jmp
mov
pop
cmpsl
loop
inc
push
cld
jae
add
inc
jb
movsl
or
fcoml
nop
inc
mov
adc
xchg
in
or
aaa
cmp
xor
vpcmpgtw
inc
std
push
mov
pop
outsl
sbb
sub
popf
hlt
les
jbe
shl
or
sbb
pop
aaa
jmp
dec
inc
add
mov
and
dec
pop
lock
push
xor
mov
sub
xchg
mov
mov
push
cmp
cmpsb
pop
aaa
sbb
xchg
add
xchg
sbb
daa
xchg
xchg
or
mov
adc
jl
dec
mov
arpl
ds
dec
mulb
dec
movsb
ret
lahf
mov
push
pop
dec
inc
test
jbe
dec
inc
loope
sbb
cld
adc
dec
or
pop
leave
mov
jecxz
mov
push
sub
lcall
leave
outsb
stos
adc
icebp
mov
xor
xchg
jb
add
push
mov
push
adc
and
fwait
cmpsb
cmp
jg
jl
push
outsl
pop
push
fwait
mov
xchg
jp
sub
sahf
cmp
test
int3
addb
gs
xor
mov
xlat
pop
and
movsb
adc
popf
leave
ret
dec
xchg
fdivrs
idivl
mov
shll
int3
sbb
or
popf
or
cmc
lea
into
xor
insb
outsl
push
movsl
leave
loop
or
fs
and
outsb
mov
xor
xacquire
jbe
cli
cli
into
in
dec
xor
fwait
xor
add
cmc
inc
xchg
lods
jo
loopne
xchg
pop
divl
jne
outsl
stos
subb
imul
and
xchg
or
movsb
lods
cmp
ret
mov
push
mov
popa
sbb
sti
dec
aaa
mov
aad
das
push
dec
fwait
mov
fld
or
les
pushf
repz
xchg
imul
and
xchg
ss
jle
or
adc
pop
pushf
push
jecxz
jmp
arpl
cmpb
adc
jae
aas
inc
rol
xor
dec
push
verr
pop
add
dec
mov
mov
mov
sub
mov
inc
addb
fldenv
xchg
loopne
pop
mov
das
out
add
mov
mov
out
and
shl
mov
insl
jp
inc
dec
xchg
stos
in
xchg
and
xchg
icebp
jecxz
pop
cld
scas
xchg
mov
push
mov
mov
lahf
jl
rol
enter
adc
aam
popf
xor
test
push
pop
and
push
clc
ljmp
ljmp
pop
lods
sbb
push
mov
cli
hlt
loopne
and
push
filds
sbb
pop
adc
repnz
sbb
mov
out
xchg
xchg
adc
test
popf
sbb
sub
ds
push
pop
pop
pop
jne
stos
and
add
aaa
js
decl
pop
test
es
lock
cli
xor
in
inc
mov
ds
ret
mov
pop
imulb
scas
xor
inc
out
je
or
or
fwait
xor
aaa
jne
scas
sbb
push
bound
pop
mov
xchg
xchg
test
mov
or
adc
xor
cmp
mov
mov
jae
jle
or
and
filds
push
jmp
cs
bound
out
pop
imul
pop
stc
stos
aad
stc
and
xor
scas
repz
mov
in
adc
movsl
push
ret
xor
inc
jne
xchg
jae
mov
dec
or
push
jg
inc
ds
mov
xchg
cmp
negb
xchg
aam
incb
data16
fiaddl
pop
sbb
pop
scas
movsl
mov
pop
enter
int
hlt
comiss
arpl
jae
jbe
push
cmpsb
jge
lds
sbb
pop
in
test
pop
or
pop
or
int3
or
dec
pop
pop
jge
push
test
js
ret
cmp
jo
push
jl
ficomps
and
mov
cmp
pop
test
enter
xchg
enter
daa
xchg
push
mov
aad
gs
push
sub
mov
jo,pt
dec
movsl
xchg
xor
and
xchg
push
push
sub
jae
push
inc
rcl
inc
jo
not
mov
fnstsw
pop
push
or
push
mov
loope
xor
push
dec
aaa
cmp
clc
mov
int3
push
lcall
or
int3
cwtl
adc
xor
sbb
int
xchg
add
push
cli
add
and
cld
push
repnz
inc
fdivl
add
sub
cmp
test
outsb
add
add
mov
xor
mov
xchg
adc
or
ss
popa
cmp
aaa
or
divl
lock
add
mov
ljmp
xorb
cmc
push
lock
ror
add
fprem1
loop
ljmp
add
adc
push
push
inc
arpl
out
xchg
inc
cli
add
pop
cmp
nop
dec
or
std
sbb
add
out
aas
sbb
mov
and
adc
aam
add
mov
cmp
cmp
xlat
mull
mov
incb
in
int3
mov
sub
movsl
dec
sub
nop
and
dec
cli
rolb
lock
stc
les
test
out
jb
negb
lea
push
std
push
loopne
rcrb
pushf
std
jp
jmp
psubw
js
inc
pushf
mov
outsb
aas
loop
jo
test
test
je
jecxz
jecxz
cmp
test
add
mov
into
js
cmpl
xchg
inc
mov
mov
loop
das
into
frstor
push
sub
push
lahf
cmp
dec
mov
cmpsl
xchg
push
sbb
mov
sbb
mov
adc
stc
iret
pop
mov
loop
sub
sbb
ret
aaa
jb
push
and
and
and
inc
cmc
ljmp
cld
lods
xchg
mov
pop
js
xchg
addr16
push
mov
lds
outsb
lret
addr16
sbb
addb
pop
adc
adc
xchg
cli
jbe
sbb
ret
adc
push
scas
jge
add
push
clc
and
test
sbb
addr16
aad
mov
cmpl
push
ja
jnp
dec
mov
sbb
or
mov
pop
dec
repnz
sub
movsl
xor
bound
int3
in
ss
xchg
in
and
pop
clc
lds
imul
cmc
push
inc
jp
stos
sub
test
sti
mov
int
sub
adc
pusha
mov
mov
mov
sbb
cmp
es
mov
fwait
popf
or
pusha
mov
xchg
insl
pop
stos
dec
in
sub
insb
cmpb
scas
push
inc
scas
push
cltd
mov
adc
jnp
ret
rcrb
and
adc
jae
mov
cltd
or
rolb
inc
fisubrl
and
xchg
xchg
mov
sbb
xchg
push
imul
pop
fidivs
and
fisttps
mov
lods
push
or
hlt
pop
sub
shll
jmp
pop
hlt
jno
in
fidivs
adc
or
popa
pusha
int3
mull
in
mov
xor
je
in
scas
mov
std
inc
cmp
int3
and
push
fsubrs
cmpsb
pusha
dec
cmpsb
in
push
rcl
enter
daa
xchg
sbb
jno
pop
cmpl
jnp
xchg
inc
mov
test
push
push
add
test
inc
decl
cmc
pop
xor
inc
sbb
push
or
loope
jecxz
sub
leave
in
cmp
outsb
jne
adc
cmpsl
pop
cmp
loope
xor
add
add
or
xor
ja
sbb
dec
int
mov
xchg
loope
pop
jge
xor
dec
in
mov
sub
mov
ss
movsl
jecxz
jl
stc
jno
mov
xor
cwtl
or
mov
stos
cmpsl
and
mov
and
cld
fdiv
mov
fmul
sbb
adc
push
and
arpl
sbb
lcall
add
mov
adc
adc
mov
mov
mov
out
out
jns
cli
xor
xor
cmp
rorl
cmp
aaa
loopne
or
pop
xor
clc
inc
imul
inc
xchg
xchg
xchg
add
jb
sbb
sub
inc
push
mov
aaa
xor
cs
push
aad
mov
fwait
dec
pop
push
std
fnstenv
dec
nop
les
xchg
inc
stc
mov
repz
nop
jl
dec
pop
sbb
adc
pop
pushf
test
out
jmp
jg
pop
enter
and
iret
aas
sbb
pop
dec
push
and
jecxz
mov
not
les
cwtl
inc
add
mov
cmc
jg
mov
xchg
es
in
mov
in
out
lock
in
lods
outsl
adc
xchg
fldenv
rorb
jg
sbb
and
dec
dec
xchg
or
mov
jns
cld
add
imul
and
rorl
mov
imul
push
aam
out
sti
ret
jbe
push
in
jecxz
dec
xor
cmc
xchg
data16
stc
ljmp
hlt
lods
repnz
sub
xchg
scas
or
movups
aam
xorl
data16
xor
lds
notl
test
insb
cmpsb
xchg
cmp
je
int
mov
jp
add
sbb
insl
mov
decl
sti
xor
rcrl
push
outsl
xor
xor
pushf
mov
les
cmp
daa
scas
ja
ret
jns
xchg
push
sub
in
or
inc
pop
fwait
xchg
test
mov
decl
mov
xor
out
test
bound
fistpll
fsubrs
in
mov
xchg
xor
imul
push
lcall
cmp
addr16
std
imul
sbb
mov
out
icebp
jle
outsl
sbb
mov
fidivl
xchg
jmp
jmp
rolb
orl
stc
popf
xor
push
mov
gs
stos
mov
imul
jnp
sbb
mov
inc
adc
iret
or
ret
adc
inc
push
inc
mov
shll
cld
inc
jnp
mov
cmpsl
stos
mov
dec
sbb
inc
cmp
jb
fdivrl
imul
loopne
ficomps
mov
inc
rclb
lcall
mov
repnz
pushl
iret
loop
incl
fistps
lahf
xlat
cld
aaa
es
or
je
int3
loop
loopne
jge
or
xor
iret
dec
cmpsb
scas
pushf
int
and
cmp
jnp
aas
movsb
adc
adc
pop
or
jecxz
xchg
in
cmp
sbb
test
dec
daa
xchg
movsb
dec
cmp
or
lods
jl
inc
add
loop
lea
mov
in
movsl
lahf
mov
loope
in
and
push
shr
test
cmp
inc
mov
rcl
das
out
pop
mov
push
xchg
adc
sbb
sub
pop
enter
outsb
repnz
adc
or
popl
addb
rcll
add
bound
cmp
ds
pop
insb
sub
loope
imul
fstp
mov
sub
sti
int
and
fiaddl
cli
std
mov
cwtl
inc
iret
mov
lcall
mov
lret
cmpsb
and
cmp
lods
sarb
div
fsubrs
lret
sub
testb
cltd
sbb
pop
es
loop
mov
outsl
hlt
dec
cmp
xchg
dec
sbb
mov
fs
outsb
adc
inc
data16
pop
lods
adc
je
out
jecxz
cli
addr16
xor
pop
cmp
lea
push
enter
loope
shll
loopne
in
xor
loop
adc
in
adc
jg
sub
xchg
push
jmp
sbb
lods
in
xlat
jne
test
mov
mov
pop
shrl
imul
aad
sbb
fchs
add
inc
jbe
outsl
pop
movsl
fldenv
pop
les
divb
cld
sub
enter
push
sti
cmp
enter
les
jmp
mov
pop
imul
stos
adc
aas
and
xor
dec
out
int
inc
je
mov
mov
push
js
std
shlb
add
stos
pop
sti
sub
or
mov
or
mov
lret
daa
data16
mov
mov
pop
int3
movsl
lods
mov
pop
test
test
xchg
jp
mov
push
mov
fdivrl
and
xchg
cld
outsl
test
cmp
insb
sub
add
push
mov
add
outsl
jbe
clc
fwait
jae
xchg
movsl
jbe
ljmp
mov
pop
stc
pop
mov
and
xchg
cmc
add
jo
jne
jo
jne
xchg
rorb
cltd
aad
sbb
stos
jbe
xchg
mov
imul
lret
les
stos
out
mov
hlt
into
inc
add
mov
jmp
push
lcall
icebp
shlb
movsb
inc
mov
pop
xchg
in
mov
stc
dec
mov
js
xor
xchg
dec
mov
sub
out
arpl
jns
lea
in
jg
xchg
xorb
sub
popa
xchg
mov
jp
sbb
mov
jno
mov
push
jle
adc
in
ficoms
repz
aam
jecxz
mov
sar
fsubr
mov
mov
sbbl
mov
cmp
mov
pop
sub
lret
push
adc
in
and
fwait
leave
insb
pop
push
cmp
dec
pusha
scas
sbb
in
daa
outsl
mov
inc
or
xchg
clc
negl
subl
jae
addl
push
mov
add
inc
xchg
sbb
adc
jne
mov
inc
xchg
shrb
and
push
or
leave
or
arpl
into
or
mov
ret
repz
aaa
in
decb
movsl
lret
mov
insl
rcrl
out
xor
push
inc
add
sub
jmp
cmp
in
movsb
lahf
dec
ficoml
xchg
and
fmulp
jg
xchg
daa
xchg
mov
cmp
jno
push
mov
orl
push
pushf
movsl
cmpsb
xchg
dec
and
cld
es
cmpsb
xchg
test
mov
sbb
aas
pop
subl
int
pop
lds
mov
adc
jns
mov
dec
popf
adc
pop
movsl
das
lahf
sub
sbbb
dec
add
adc
push
pop
in
cmp
sub
repnz
lcall
fdivl
mov
xchg
sahf
vmovlps
adc
sbb
stos
mov
int3
sub
aaa
fldcw
cmp
push
out
lret
add
test
negb
fmul
pop
into
sub
cmc
test
inc
mov
loop
movl
mov
sbb
sti
lods
cld
clc
jae
ficoms
push
xor
imul
icebp
lahf
or
out
incb
in
loopne
loope
pop
jae
push
adc
mov
jnp
popa
jp
xchg
sbb
sbb
call
shrl
call
mov
add
xchg
fst
dec
fmull
mov
orb
cmp
pusha
sahf
and
les
sahf
mov
incl
roll
call
jp
lcall
push
in
pushf
cmp
jmp
stos
jae
push
sub
inc
xor
inc
mov
or
jb
pop
xor
idivl
je
pop
jno
lcall
std
jns
test
into
movsl
mov
repz
mov
mov
and
xlat
addr16
mov
shr
and
sbb
sub
adc
push
dec
jge
mov
pop
mov
icebp
aas
cmp
lret
or
fnstcw
sub
sub
sbb
in
rorb
push
aam
nop
push
ret
in
mov
fstl
lret
adc
and
dec
popa
pop
and
mov
xchg
xor
bswap
add
sub
mov
bound
and
rorl
imul
sbb
shrb
shll
fdivl
pop
or
push
xchg
gs
add
mov
stos
rdmsr
jb
inc
or
lods
xor
mov
mov
stos
jmp
pop
inc
test
dec
jnp
mov
or
int3
jnp
out
filds
jne
jb
mov
stos
sub
inc
out
push
bound
add
sbb
push
in
mov
lock
pop
sub
pop
jg
repnz
jp
arpl
mov
in
test
push
sbb
mov
loopne
jle
movsl
pushf
in
inc
imul
imul
test
xchg
movsb
cmp
sub
push
insb
push
sti
imul
orb
mov
push
loop
stos
mov
repnz
nop
jnp
inc
add
outsb
in
and
iret
push
rol
or
pop
inc
mov
dec
sub
sbbl
add
push
xor
inc
add
xchg
cwtl
daa
cmp
push
xchg
and
ficomps
xchg
lds
ror
mov
cmpsb
xor
xor
arpl
je
jbe
push
test
sbb
xlat
fisttpll
cwtl
imul
add
jb
fistpl
mov
jo
iret
mov
and
mov
jmp
inc
xchg
push
cmpsb
jmp
daa
nop
enter
daa
xchg
inc
stc
cmp
inc
dec
jl
pop
jp
shl
ds
loopne
movsl
lods
aam
and
das
lahf
sub
xchg
push
jns
push
test
insl
insl
mov
lret
fidivl
pop
stos
add
js
outsl
xchg
pop
add
ja
pop
push
mov
sub
inc
mov
imul
adc
cmp
outsl
xorb
faddl
adc
push
and
int
mov
sub
adc
cli
xchg
xchg
lcall
dec
shll
sahf
push
pop
iret
xorb
adc
clc
xor
mov
or
mov
fstpt
inc
push
daa
ss
mov
jne
and
pusha
divl
lret
out
rcll
scas
sbb
sub
into
or
pusha
cmc
jo
xorb
xchg
insl
outsl
mov
repnz
js
stc
testb
fs
and
data16
mov
dec
jmp
cli
int
nop
xor
stc
jmp
or
lret
movsb
or
pop
ljmp
mov
imul
jo
and
and
xlat
repz
sub
cmp
in
js
mov
cs
sahf
aad
add
dec
jbe
mov
cwtl
rcr
aad
mov
sub
mov
sub
jmp
stc
dec
pop
pop
pushf
ret
hlt
adc
pushf
test
fstpl
divb
inc
xlat
bound
jb
popf
sub
je
jl
jecxz
shrb
pushf
cmp
and
lods
cwtl
jb
fdivl
xchg
lahf
jle
sbb
add
xor
inc
jns
lock
mov
inc
movsb
ds
mov
andb
in
call
dec
js
imul
jg
icebp
push
shlb
cld
xchg
lret
mov
xor
mov
cmp
fst
loop
sub
adc
push
pop
mov
push
sub
movsb
sar
adc
or
xchg
xor
cmp
mov
xchg
sbbl
push
es
inc
ucomiss
add
xor
mov
pop
xor
stc
xchg
cmp
ficomps
test
pop
fstps
add
cmp
leave
add
mov
or
es
mov
ret
adc
lea
mov
add
ja
mov
dec
outsb
mov
inc
loope
pusha
or
into
jecxz
push
mov
ljmp
add
out
and
jns
loop
in
sbb
xchg
and
sub
push
pushl
jp
pop
sbb
xor
mov
jle
jp,pn
rorb
pusha
sub
fbld
xor
vpshlb
jae
push
mov
lret
inc
mov
cmp
sbb
jnp
cs
outsl
jnp
sti
and
loop
repz
mov
les
std
lock
push
push
sbb
or
pop
push
inc
test
or
mov
sbb
xchg
out
jmp
sbb
in
imul
repnz
fadd
in
dec
mov
stc
xchg
sub
hlt
xchg
arpl
pop
dec
jbe
repz
jge
xchg
scas
sbb
out
aaa
arpl
testl
out
mov
mov
adc
push
pop
sub
cmpsb
daa
imul
xchg
out
and
sub
movsb
mov
in
adc
xchg
cmpsb
insb
out
in
lock
daa
xchg
push
fdivrl
aam
ret
jno
jmp
jl
stos
popf
dec
das
cs
cmpsl
test
mov
in
and
test
lahf
dec
mov
push
dec
pop
cwtl
test
cmp
inc
cmp
in
pop
sarl
js
movsl
rclb
inc
faddl
roll
push
sub
pop
sbb
outsb
sbb
loope
daa
lahf
rclb
xchg
mov
add
sbb
repz
add
imul
and
ss
sub
adc
jns
jp
sbbb
push
movsl
inc
or
mov
shrl
lds
or
add
orb
jg
fmuls
mov
mov
adc
or
cmp
fmulp
dec
divl
mov
lret
movsl
shrl
mov
jb
ss
cmp
out
inc
sbb
aaa
pop
outsl
xor
sbb
dec
pop
fdivr
lods
pop
cmc
fs
push
test
mov
xchg
stos
out
cmp
add
xor
stos
cmp
into
and
inc
push
gs
jbe
loopne
push
inc
pop
mov
dec
adc
arpl
divb
add
fstl
cmp
ret
xlat
xor
cs
jo
mov
jecxz
dec
sti
arpl
cs
xor
aad
mov
nop
push
cltd
dec
aad
pop
inc
test
mov
les
mov
lahf
lea
xchg
push
js
ja
dec
iret
or
fistl
push
fstl
and
dec
pop
push
mov
inc
inc
repnz
and
push
je
cmc
xchg
mov
dec
aaa
std
or
rolb
mov
lds
cltd
mov
mov
outsl
mov
das
sub
mov
sti
sbb
sarl
cmp
insl
in
cs
jae
lock
nop
jae
mov
in
mov
lret
out
mov
and
cmp
xchg
mov
adc
imul
push
lock
and
in
nop
clc
dec
cmp
bound
xor
or
ss
dec
cmpsl
in
sahf
scas
mov
dec
push
mov
lret
push
add
test
cltd
jp
xor
mov
sub
insb
fisubrs
mov
mov
pop
pop
lods
rep
mov
outsb
mov
fldenv
xor
stos
and
xor
xor
push
nop
mov
rorb
imul
or
dec
popa
dec
fiaddl
jb
or
mov
mov
jne
sub
mov
jno
out
add
bound
sbbl
outsl
and
mov
push
adc
lock
sbb
fidivs
pop
push
or
fldcw
pop
pusha
cld
call
adc
xchg
lock
add
adcl
into
jo
mov
shrb
stos
xchg
inc
insb
cltd
out
jnp
js
scas
inc
adc
cltd
adc
adcb
xor
pop
sub
cmp
mov
lahf
jae
stos
ljmp
add
xchg
fs
fisubrl
aam
sbb
or
imul
in
lds
js
mov
dec
and
leave
insl
ds
rcll
inc
arpl
pop
jbe
cmp
cwtl
sbb
inc
cmp
jle
iret
add
dec
mov
sbbb
in
push
cli
mov
xor
cmp
lds
pushf
je
cmp
push
movsb
inc
sub
cmpsb
out
out
arpl
xlat
aam
enter
daa
nop
lock
pop
inc
xchg
jno
mov
jl
lret
sahf
sub
movsl
mov
icebp
rcrb
pop
xchg
test
add
push
push
lahf
pop
clc
fucom
js
outsl
push
addb
loope
jg
sub
mov
sub
xor
adc
out
cmpsl
and
adc
sbb
repnz
sbb
push
jne
in
sub
popa
int
fwait
push
sub
adc
clc
bound
push
cld
mov
fdivl
mov
test
lcall
inc
mov
jmp
sbb
or
ss
pop
cmp
cltd
dec
or
icebp
daa
cmp
rol
ret
int3
pushf
mov
icebp
sbb
cld
into
shlb
jp
cwtl
cld
xor
outsl
or
movsl
loop
ja
stc
fs
xlat
fs
dec
adc
xchg
repz
lods
mov
ds
je
out
mov
cli
xor
xor
and
or
fucomp
ljmp
loopne
aaa
imul
aaa
adc
shrb
push
adc
xor
lds
bound
cmp
and
sub
imul
out
cmp
inc
mov
divl
aad
js
nop
inc
rorb
inc
mov
sub
les
push
or
div
sub
testb
pop
add
loopne
ljmp
movntps
inc
xchg
inc
or
insl
js
jbe
cld
dec
test
shl
sbb
mulb
int
std
outsb
and
cwtl
call
jae
mov
push
orl
addr16
stos
bound
ror
inc
lock
enter
push
dec
mov
xchg
imul
ror
mov
cmp
lret
out
fmull
pop
int3
cmpsl
into
mov
mov
imul
jmp
dec
mov
aas
test
fmuls
sbb
mov
jl
pusha
xchg
and
call
mov
mov
fisttpll
arpl
xchg
mov
hlt
push
popa
mov
mov
scas
nop
rcll
fdivrl
dec
add
dec
mov
mov
inc
test
and
dec
dec
xor
or
aaa
mov
sbb
sti
loop
daa
cli
aaa
pop
or
outsl
stos
stos
add
add
hlt
pushf
push
jmp
fnstenv
imul
cmpsl
arpl
xor
xor
mov
xor
mov
ja
pop
ja
out
dec
push
sahf
cmc
inc
push
or
dec
fwait
jl
fmull
cmp
sahf
xorl
sub
and
inc
enter
add
mov
jmp
inc
or
jmp
add
dec
jno
mov
cmp
mov
adc
jle
sbb
in
lret
pop
mov
fistps
adcb
xor
xchg
mov
cmpb
cmc
cli
xor
adc
imull
dec
int3
icebp
insb
add
mov
mov
pop
push
inc
xchg
rclb
mov
ror
aad
ret
jmp
inc
ret
jae
inc
filds
dec
out
stos
aad
push
mov
push
ficompl
mov
sbb
add
imul
mov
or
rcrb
sarb
jmp
fwait
hlt
sbb
lods
arpl
cld
jbe
cli
mov
sbb
lret
inc
fwait
or
scas
add
icebp
push
pop
push
jecxz
xor
xchg
es
imull
mov
cmp
ret
and
lret
push
es
mov
xchg
cmpsb
jb
dec
in
mov
push
loop
or
mov
data16
mov
xlat
ds
movsl
ret
and
jno
lahf
xchg
mov
fldt
jmp
adc
jp
pop
and
and
mov
push
hlt
dec
loope
or
sub
ss
cmp
pop
outsb
loope
scas
adc
leave
rclb
sbb
lods
sub
lret
sbb
cmp
inc
xlat
push
sub
int
in
sub
scas
pop
ja
or
push
dec
rcr
arpl
mov
testb
add
shlb
lret
iret
add
and
xlat
ss
int3
cmp
push
pop
dec
divl
sub
mov
sbb
mov
lds
outsl
dec
mov
loop
lds
fs
adc
adc
ret
mov
fsubrl
lret
out
mov
cli
data16
xor
dec
pop
or
pop
decb
cwtl
cmp
sub
hlt
pop
out
add
adc
sarl
and
add
mov
cmp
lods
std
xlat
mov
subl
mov
outsl
in
mov
in
cs
movsl
push
aad
leave
ja
and
dec
xchg
into
es
into
js
fnstcw
adc
jne
repz
in
or
cwtl
lea
mov
jno
jbe
arpl
add
dec
hlt
mov
jmp
xor
pop
lcall
inc
sub
cmp
das
dec
and
je
loope
jecxz
xor
gs
lret
sbb
cwtl
mov
mov
mov
dec
and
lock
push
rorl
xchg
xchg
lock
xor
das
out
loop
clc
sub
adc
and
xor
sbb
lea
dec
imul
mov
shll
icebp
fwait
outsb
sar
pop
dec
mov
les
mov
jae
xor
xchg
push
inc
rcrb
int
push
xor
aam
ret
ffreep
and
rclb
mov
popa
clc
ret
xchg
loopne
dec
ljmp
cmp
mov
sbb
mov
orl
rep
lods
cltd
call
iret
aam
sub
xor
sub
push
dec
xchg
js
mov
xchg
xchg
sbb
sarl
rcrl
and
push
and
add
pop
mov
add
or
mov
sbb
cmc
data16
push
inc
ja
bound
pushf
jg
adc
dec
inc
mov
lret
lret
xor
daa
pop
das
jne
jne
mov
mov
bound
mov
in
je
xchg
or
cld
lcall
idivl
jp
mov
mov
inc
push
mov
orb
in
mov
inc
fistpll
outsl
xchg
lock
push
jmp
xchg
pushf
and
push
push
pop
mov
test
push
push
or
and
out
insb
outsl
les
jnp
shl
or
push
mov
loopne
mov
mov
ret
xlat
pop
xchg
pop
insl
inc
int
xor
sbb
inc
in
lret
or
das
ret
icebp
inc
cmpl
hlt
adc
add
ret
imul
fsubrp
inc
insb
lds
pop
dec
mov
repnz
leave
pop
hlt
addr16
cltd
arpl
sbb
sub
jge
sub
add
xor
mov
negl
int3
fs
pop
xchg
decb
xor
icebp
rclb
ret
cmp
aam
movsb
push
data16
add
cmpsb
cmc
pop
sub
movsl
adc
data16
stos
daa
mov
insb
jno
mov
call
mov
out
roll
cmpsb
imul
shlb
popf
push
cltd
dec
repnz
call
mov
push
js
shrb
imul
and
sub
addl
inc
xchg
pop
adc
movsb
or
int
cld
xor
sbb
xchg
xor
sub
push
cs
js
lret
sub
gs
testb
fwait
outsl
inc
push
stos
add
sub
jnp
xchg
imul
push
ja
addr16
mov
push
push
sbb
and
cmp
cmp
invlpg
lret
push
shl
out
aas
cli
in
ret
dec
fmulp
cwtl
mov
mov
test
cmp
or
loop
inc
pusha
stc
shlb
addr16
sub
stc
data16
lods
jg
mov
out
xor
cltd
xchg
sbb
cmp
dec
jnp
mov
shrb
jmp
enter
mov
scas
xchg
adc
in
subb
jecxz
in
repnz
sub
scas
xchg
call
jne
cmp
les
out
inc
jge
daa
repnz
mov
and
gs
jo
ljmp
jle
nop
sti
aas
mov
inc
loope
jecxz
mov
aaa
rcrb
repz
push
mov
les
call
cmc
jp
pop
push
sbb
sbb
inc
aam
pop
inc
inc
push
aas
aas
fcmovb
std
jb
mov
dec
xchg
inc
inc
je
push
mul
in
add
test
fdivr
mov
loope
mov
je
mov
icebp
xorl
xchg
fldt
daa
push
mov
test
lock
aad
das
insl
scas
mov
and
and
mov
shrl
filds
insl
cltd
adc
fs
dec
cmpsl
lea
sarl
jb
ja
xor
lret
xor
mov
dec
and
mov
mov
mov
sub
jp
jle
ss
scas
push
outsb
push
cmp
push
clc
std
xor
pop
outsb
es
lods
into
mov
jne
mov
push
xchg
xor
stos
add
add
ret
outsl
cltd
pop
mov
outsb
mov
cli
dec
xchg
sub
push
pushf
test
ja
xchg
lock
insb
inc
pop
pusha
test
push
mov
push
add
leave
int
mov
jo
or
lock
mov
lret
loopne
pop
in
mov
ja
sub
dec
cmp
inc
cmp
sbb
jecxz
or
inc
jne
mov
mov
xor
bound
add
in
cmp
xchg
pop
stc
cli
out
test
sub
inc
adc
jp
push
ss
je
mov
out
arpl
jle
fisttpl
pusha
xchg
push
and
imul
xchg
push
xlat
sub
lret
popf
inc
mov
add
lahf
out
loopne
pop
and
lods
insb
or
enter
outsb
lcall
imul
fistpl
lcall
into
cmp
or
stos
gs
mov
mov
xchg
dec
sub
jae
imul
fimuls
leave
and
push
insb
repnz
inc
adc
leave
rcrb
arpl
movsl
jbe
shr
jge
jns
sbb
push
add
clc
int3
dec
stos
repnz
movb
xor
dec
outsl
xchg
scas
mov
aam
push
xchg
mov
movsb
loope
sbb
push
xor
js
xor
mov
add
cmp
testb
enter
jmp
aam
stos
inc
mov
shl
cwtl
and
lahf
lds
push
cwtl
jno
test
fs
ret
inc
ja
das
lcall
js
inc
xor
aas
cltd
jge
popf
aaa
sbb
popf
mov
cmp
stos
shrb
mov
adc
jg
or
fnstcw
sbb
or
xor
pop
dec
push
xor
lods
int
and
sub
movsb
pop
jne
cmp
add
pop
fdivl
inc
push
sahf
xchg
stos
and
mov
fs
jle
mov
push
push
push
jg
mov
adc
and
cld
jg
fiaddl
pop
imull
or
or
mov
mov
ss
into
jnp
insb
cmc
push
mov
xor
dec
outsl
or
cld
mov
mov
cmc
fs
fsts
test
adc
mov
xchg
out
cmp
xor
push
cmp
sbb
or
mov
jbe
repnz
imul
sub
dec
inc
imul
mov
xchg
stos
cld
je
xlat
cmp
xlat
cs
sub
das
inc
in
mov
sti
pop
js
cs
aad
xchg
aaa
nop
adc
and
hlt
mov
lret
pop
scas
repz
pop
scas
lea
in
call
je
fstpl
push
xor
negl
jmp
mov
loopne
addb
roll
sbb
jns
shlb
sbb
fadd
je
push
icebp
jecxz
and
imul
push
or
arpl
in
ds
orl
fistpl
adc
and
lea
movsl
jbe
push
cli
dec
mov
daa
iret
lret
lods
icebp
es
das
insl
xorb
pop
pushf
dec
cmpsl
mov
add
dec
loopne
cld
pop
cmpb
cmp
or
test
xor
add
out
inc
fs
aam
push
scas
ret
sub
push
cld
dec
imul
cs
cmp
and
pop
in
ljmp
daa
lods
dec
in
mov
fdivr
in
xchg
out
fists
mov
add
dec
sub
test
sbb
mov
dec
pop
xchg
pop
dec
gs
test
enter
jecxz
sbb
jns
shrl
or
stc
stos
js
cmp
add
inc
std
dec
incl
repz
or
mov
int
mov
fmul
inc
mov
test
or
xchg
mov
movb
mov
jecxz
dec
in
aam
jne
dec
jnp
xor
add
jl
and
dec
adc
outsb
outsb
in
push
ret
jb
out
jg
sub
ds
addr16
int
jp
shlb
mov
pop
std
or
sub
cmc
aad
pusha
xor
fistpll
and
shlb
pop
fs
lea
bound
into
mov
stos
push
jb
and
icebp
in
jnp
pop
or
sbb
adc
iret
add
daa
pop
add
jo
jecxz
loope
popf
lcall
fistps
ret
scas
add
je
enter
clc
sbb
jmp
in
fidivs
imul
imul
mov
cwtl
jno
leave
dec
add
hlt
std
loope
arpl
jbe
ljmp
ja
xchg
aaa
push
push
mov
dec
cmc
push
add
sbb
int3
cmp
pop
cmc
cltd
push
xchg
dec
jo
xor
xchg
xor
and
scas
fstpt
xor
daa
movsb
insb
icebp
rclb
cmp
cmpsb
sti
cwtl
mov
jae
mov
daa
mov
sarl
lods
jl
xchg
loopne
pop
mov
int
xlat
jl
and
adc
lea
jns
test
das
cs
pop
mov
lret
js
pusha
adc
jle
clc
push
out
loope
sbbl
lcall
or
inc
adc
pop
ret
outsb
cmp
cmp
and
repnz
mov
xor
mov
imull
in
cwtl
pop
hlt
xor
lcall
jns
loopne
sub
aas
sahf
cmp
mov
mov
push
mov
ret
dec
pop
mov
sbb
mov
xor
cmp
test
out
in
mov
lret
cmc
rcrl
pop
mov
ja
into
pop
sub
sbb
outsl
in
mov
sar
test
outsl
bound
ror
dec
data16
lods
lods
dec
sub
mov
ret
push
cli
call
les
shrb
xchg
xor
jbe
scas
gs
mov
mov
dec
adc
adc
movl
add
cmp
loope
cmp
jne
sub
out
pop
in
cli
mov
std
cs
aad
adc
fisttpll
mov
inc
pop
sub
cmp
call
movsl
mov
sahf
mov
call
repz
adc
adc
loop
pop
or
inc
loop
mov
jns
lcall
jne
dec
test
and
imulb
bound
or
cwtl
aam
pushf
mov
test
andl
mov
mov
outsl
mov
pop
addr16
pop
mov
mov
mov
test
roll
inc
es
ret
pop
das
imul
and
cld
mov
lret
adc
repnz
pop
dec
sub
hlt
test
rcl
adc
sub
xchg
aam
sbb
ret
int
mov
frstor
gs
xchg
popf
loopne
ljmp
int3
lods
mov
push
mov
cmp
xchg
sub
std
jbe
push
or
cltd
xlat
lock
mov
dec
xchg
or
xchg
pop
cwtl
sbb
mov
roll
dec
jns
addr16
push
or
cltd
add
pusha
inc
xlat
fisttps
mov
adcl
mov
pop
cmp
pop
arpl
ja
jge
dec
and
mov
or
cmp
sub
jne
push
mov
out
pop
sub
jbe
imul
insb
in
les
xchg
cli
das
xchg
out
out
push
shll
cmp
jp
jmp
dec
jp
push
mov
jbe
jo
xor
fisttpl
mov
in
divb
into
lcall
aaa
xchg
xchg
out
fldl
push
aas
or
mov
or
call
sub
mov
jbe
es
push
pop
stc
bound
pop
jl
iret
pop
mov
ret
ljmp
int
jae
inc
and
mov
or
mov
mov
daa
mov
fistps
xor
imul
push
lds
jb
mov
jmp
jo
rorb
hlt
dec
sub
outsb
ret
jbe
ja
jge
ret
xor
loopne
cmp
outsl
push
int3
and
shll
and
add
cmpsl
scas
jae
mov
jnp
lcall
xor
push
out
mov
cmpsb
jle
imul
push
push
es
mov
cltd
jno
aam
jl
xlat
je
leave
mov
icebp
dec
mov
fidivs
and
inc
xor
mov
test
cli
push
jg
xchg
add
mov
xadd
mov
dec
das
loope
sahf
sub
jmp
xchg
cmp
in
inc
outsb
insl
ficoms
xor
mov
xorb
xor
push
ljmp
adc
test
pop
mov
xchg
scas
push
pusha
fmull
lret
fnsave
dec
test
push
int
in
nop
in
jg
push
mov
xor
sti
jbe
and
fsubrl
inc
addr16
imull
dec
shll
sbbb
xor
cmc
loope
push
xor
sbb
stc
imull
scas
adc
test
mov
lods
xor
rorb
rorl
xor
pop
xor
leave
push
cmp
cmp
or
and
stos
loopne
push
movsb
pop
imul
adc
jl
push
adc
adc
mov
adcb
outsb
js
rolb
sub
rol
in
gs
xor
jge
jno
out
cs
imulb
dec
rolb
shll
fsts
clc
repz
repz
pop
push
bound
pop
arpl
jb
fs
sbb
mov
cli
loop
es
pushf
inc
imul
mov
clc
jb
and
nop
je
stos
inc
jecxz
sub
jno
outsl
std
mov
out
xorb
lods
mov
sbb
mov
push
gs
gs
scas
cmp
arpl
mov
cmp
dec
shlb
inc
xchg
cli
insl
dec
icebp
out
dec
push
push
dec
cmpsl
mov
mov
mul
fdivrp
mov
xchg
lret
sbb
mov
stc
mov
filds
sub
cmpsl
data16
xor
aam
ss
push
add
aam
clc
scas
pop
imul
xlat
cltd
daa
lods
and
mov
sahf
add
push
push
and
fiaddl
aas
cli
pop
cltd
les
test
mov
mov
mov
or
aad
test
daa
lcall
cmpsb
addr16
cmpsb
xor
icebp
stos
push
xchg
add
jnp
sub
jle
ja
or
xchg
or
pop
add
test
mov
jle
bound
cwtl
pop
push
iret
ss
in
les
mov
les
or
fwait
addr16
arpl
sbb
jne
mov
mov
bound
xchg
sarl
lods
xchg
dec
xor
out
shrl
test
cmpsl
or
loope
ljmp
mov
fcompl
mov
mov
stos
sahf
sbb
add
data16
xchg
cmp
add
push
push
and
andl
xor
adc
popf
mov
bound
push
dec
je
stos
cmp
daa
and
outsb
pop
jnp
jle
scas
xchg
mov
push
cmpsb
or
adc
xor
mov
push
pop
jb
movb
jae
sub
inc
cltd
std
jl
lods
inc
es
xor
jns
fidivrl
lods
xchg
push
cmp
lods
push
scas
imul
sub
lds
xchg
ds
leave
aaa
mov
and
xor
jbe
js
jge
mov
dec
aaa
pushf
in
rorl
xor
ja
or
dec
int3
adc
mov
push
lahf
pushf
push
dec
loop
xor
pop
repnz
and
test
cmp
int3
sub
sbb
cmpsb
add
adc
push
inc
dec
daa
mov
cmp
xor
jecxz
test
dec
cmp
clc
ds
fwait
movsl
in
in
sub
inc
call
test
lds
inc
and
xlat
jecxz
mov
loop
fwait
js
push
out
cld
push
out
mulb
loope
push
add
outsb
rol
ja
sbb
rclb
leave
jae
idivb
sub
pusha
pop
mov
repz
dec
jg
push
cmp
cs
mov
sub
sti
fiadds
repnz
adc
push
push
sub
cmp
sub
mov
test
ja
jg
gs
mov
mulb
mov
sti
fdivrs
sti
pop
sbb
imul
rorl
mov
loope
sbb
dec
into
and
push
cmc
test
lret
loopne
outsl
stos
jg
loop
push
stc
scas
jne
fs
cmpsb
adc
test
sarb
mov
arpl
fs
xor
xchg
mov
les
xor
bound
xchg
imul
add
bound
dec
fisubrs
cmp
call
dec
sub
lret
cmp
in
shl
inc
sti
sub
imul
in
pop
aad
cmp
nop
movd
mov
out
lea
nop
repz
or
pusha
icebp
in
add
adc
cmpsl
dec
pushf
add
add
pop
leave
mov
inc
lock
and
mov
push
popf
dec
jb
or
je
outsl
cld
jecxz
xchg
xor
mov
or
pop
push
cwtl
dec
rolb
jnp
je
sub
lahf
adc
mov
fucomi
dec
in
mov
pop
lock
add
inc
jmp
jns
cld
push
dec
and
xchg
mov
es
adc
insl
xor
adc
mov
into
cwtl
popf
cld
fimuls
sbb
and
jp
pop
pop
xor
mov
sub
sti
aam
movsl
mov
jmp
push
inc
lods
vpmaddwd
mov
xchg
sbb
ljmp
cmpsl
lods
mov
add
out
add
xchg
xchg
mov
push
enter
fwait
add
sub
loope
test
ss
xchg
xchg
xchg
dec
dec
lcall
xchg
loop
sbb
cwtl
shll
add
or
adc
push
xchg
lock
xchg
adc
lcall
stc
sbb
xor
pop
mov
mov
jne
mov
test
inc
arpl
aad
or
lods
in
fwait
xchg
cmp
dec
xchg
scas
mov
mov
lahf
push
bound
fwait
in
popf
xor
subl
sub
das
iret
lods
addr16
mov
pushf
or
mov
shl
or
pusha
add
xchg
btc
xchg
jge
inc
subl
pop
popf
fucomip
cmpl
sbb
lods
icebp
jmp
aam
lock
xchg
inc
jnp
pop
xchg
in
and
aad
test
sbb
dec
xchg
pop
test
mov
inc
pushf
jecxz
or
xchg
mov
inc
mov
xchg
lea
mov
push
inc
imul
jmp
lds
inc
and
mov
xchg
int
leave
scas
adc
fidivs
jbe
in
es
pushf
jne
test
pop
aaa
pop
add
add
push
jo
xorb
push
das
icebp
inc
xor
mov
pop
fisubl
mov
leave
inc
movsb
or
repnz
sub
enter
daa
mov
aad
mov
fstpt
ds
sub
and
adc
lahf
inc
aas
lahf
push
in
pop
movsl
add
nop
cld
fwait
inc
mov
gs
cmpsb
int3
jo
or
js
daa
cmp
cmp
or
stc
inc
mov
jb
cmp
scas
inc
adc
jmp
jbe
push
ret
pop
in
sbb
jmp
test
cmp
push
sub
xchg
pop
jno
jb
sbb
push
pop
mov
stc
sub
xchg
andb
loope
insl
cmp
sub
xchg
mov
sub
ss
lea
jbe
pop
fdivs
int3
dec
lret
call
mov
insl
mov
into
pop
repz
outsl
dec
in
xor
in
outsl
mov
mov
stc
gs
adc
insb
data16
lods
add
testb
jns
cli
cwtl
pop
out
xor
cmpsl
cmpsl
or
cmp
aaa
gs
pop
and
mov
inc
adc
imul
push
imull
xchg
mov
cltd
sbb
ss
xlat
sub
mov
cmp
sti
fcmovne
fsubrl
lods
xlat
into
aad
in
nop
inc
xor
mov
inc
mov
fld
lods
pop
les
dec
scas
repz
insl
sbb
cmc
sub
push
dec
xor
jo
jp
out
adc
mov
jmp
jbe
pop
insb
adc
jno
lret
aas
cmc
fstpl
mov
cltd
test
jecxz
cmp
cmp
mov
lea
sbb
inc
subl
cmp
sbb
and
inc
sub
pop
das
and
mov
mov
dec
and
sub
inc
es
add
insl
sbb
or
pusha
cmpsl
mov
add
cld
or
mov
pop
xchg
mov
jo
mov
pop
push
and
rorb
cmp
and
jne
pop
jp
je
or
mov
clc
and
stc
xchg
pop
ljmp
add
pop
mov
out
fs
xchg
add
push
fld
mov
test
mov
xor
test
mov
leave
xchg
xchg
cltd
dec
add
es
in
xchg
mov
lret
add
push
cmc
mov
add
mov
aam
mov
sbb
xor
mov
mov
inc
insl
mov
xchg
loopne
ja
pop
cmc
dec
stc
jge
inc
xor
or
and
dec
jns
daa
jne
mov
mov
lods
xor
clc
pop
lret
bound
xchg
inc
jns
cltd
lods
in
pop
pop
xchg
out
sbb
push
imulb
sub
sub
mov
xlat
xchg
mov
jg
mov
sbb
adc
in
mov
pusha
pushf
add
xchg
loop
jbe
je,pt
xchg
dec
inc
sub
push
cltd
shll
popf
push
mov
mov
lret
stos
pop
test
and
or
icebp
cmp
jnp
testb
cld
push
xor
sbb
iret
jl
loopne
leave
out
ficomps
jl
inc
cmpxchg
inc
lahf
cmp
enter
xchg
inc
xor
pop
fiaddl
xor
test
or
imul
movsb
fidivrs
and
mov
in
stos
leave
and
repz
arpl
xlat
sbb
pop
push
sbb
shlb
sbb
lea
ss
xor
out
mov
push
adc
movsb
xor
adc
xor
xor
push
movsb
cwtl
div
push
fisttpl
cmpsb
pop
orl
cvttps2pi
enter
daa
mov
cmp
cs
jl
fwait
rorb
mov
ds
andb
arpl
mov
push
mov
aaa
test
pop
jmp
das
imul
ret
pop
jp
mov
loope
enter
mov
mov
adc
push
mov
subb
sbb
repz
inc
adc
inc
fmulp
int
xlat
pop
sub
ds
lock
lcall
sub
mov
sub
bound
mov
jg
jg
imul
mov
addb
xchg
mov
adc
jno
int3
imul
test
sarl
mov
int
sbb
sti
into
ljmp
xor
cli
outsw
push
xchg
lock
sbb
cmc
fs
mov
sbb
addr16
lods
jmp
xor
out
adc
lret
add
addr16
sub
pushf
sahf
or
sub
add
sti
gs
mov
pop
enter
int3
imul
adc
adc
xchg
jp
cmc
sbb
jno
loope
imul
inc
mov
cmpsb
xchg
aas
sti
mov
mov
movzbl
push
repnz
sbb
rorl
inc
push
cmc
fsincos
je
les
inc
pop
xchg
and
rorb
cwtl
sub
out
mov
je
stos
mov
call
pop
packssdw
rclb
aas
xchg
and
jb
imul
iret
repz
jecxz
sub
add
cmpsb
aad
cwtl
sarb
mov
sbb
dec
fcompl
fisttpl
push
add
mov
cmpsl
lock
add
xor
ficoms
jle
xorb
es
bound
insl
add
cmpsb
dec
inc
inc
jg
xchg
mov
jl
movsl
cld
xor
jbe
int
xlat
mov
ja
push
mov
jo
lock
mov
es
jg
ret
or
xor
fldl
cmp
pop
mov
inc
ljmp
lods
popa
mov
push
std
shr
mov
daa
push
mov
mov
add
sub
notl
mov
dec
push
or
xchg
jne
sbb
and
pop
out
stos
and
jmp
cwtl
jnp
sbbb
lcall
test
or
stos
xor
or
mov
sub
jecxz
dec
inc
xchg
ja
push
add
insl
test
in
mov
fwait
hlt
dec
mov
scas
in
jne
inc
pop
mov
int
out
xlat
lret
ret
jns
std
movsl
in
aad
ss
out
xor
adc
and
jno
jp
fimull
mov
xchg
mov
mul
in
arpl
pusha
aaa
pop
vxorps
add
jmp
adc
aad
int
scas
push
pop
inc
in
sub
xor
stos
xchg
lret
add
js
pop
pop
add
push
repnz
shlb
jnp
cmp
mov
inc
iret
fcmovnu
imul
pop
xchg
dec
inc
sbb
adc
jg
inc
mov
push
fs
scas
and
dec
or
sbb
mov
dec
fisubs
mov
inc
pop
mov
repnz
icebp
mov
aaa
fs
pushf
movsl
xor
mov
arpl
push
pop
jbe
xor
jge
add
pop
aaa
fnstenv
or
int
int3
sarl
xor
cmc
ljmp
outsb
sub
scas
out
ss
and
dec
jl
movb
and
fwait
cmpsb
mov
stos
enter
daa
xchg
or
jl
das
jb
test
jge,pt
sub
cmp
rclb
lods
das
test
sub
sub
xchg
dec
cmpl
lods
dec
push
loopne
loope
jae
sub
shrl
outsb
stc
fs
mov
addb
xor
jge
insb
xor
clc
int
inc
js
dec
mov
outsl
mov
cmpb
or
fdivl
test
cmp
imul
ret
jo
mov
cmc
or
daa
sub
and
cmc
out
ss
je
les
fsubrs
into
imull
leave
rclw
sbb
sbb
cltd
into
int
push
cmc
std
jae
xor
ret
sahf
loop
subb
lods
stos
fs
andl
jecxz
shlb
mov
xor
cli
pop
mov
ds
mov
or
sbb
gs
jo
add
gs
out
adc
pushf
push
adc
out
add
and
cmpl
xchg
out
xlat
test
mov
dec
adc
mov
adc
jecxz
jb
es
arpl
dec
mov
ds
imul
test
repz
test
xchg
call
outsb
insb
sahf
pop
dec
lock
add
bound
add
inc
test
jge
add
imul
xchg
dec
fcom
nop
je
mov
jecxz
popa
xchg
idivb
mov
cwtl
jnp
mov
add
sbbl
js
mov
popa
gs
test
lock
mov
and
enter
es
cmp
dec
inc
mov
adc
push
xchg
into
cld
pop
or
mov
jle
dec
mov
movsb
shl
lds
andps
aam
ljmp
mov
test
push
cmpsb
clc
lcall
ljmp
lods
int3
lea
mov
sub
mov
cmovae
mov
test
loopne
mov
les
inc
ljmp
mov
ja
scas
test
shll
in
push
pop
or
push
mov
cmp
or
pop
data16
add
fxch
cli
adc
xchg
or
frstor
mov
outsb
ss
jl
or
ja
aam
dec
fists
sahf
inc
pop
scas
lock
mov
and
dec
aas
sbb
jne
cmp
mov
add
out
mov
inc
bound
xchg
push
cmc
in
fcoms
test
daa
out
jmp
or
cmpsl
inc
addr16
test
xchg
sbb
mov
clc
test
mov
pusha
ror
test
xchg
mov
stc
jmp
fdivp
ljmp
and
fs
dec
sbb
in
and
repz
jnp
jge
scas
and
stos
adc
or
jmp
ret
inc
pop
dec
push
imul
mov
or
pop
pop
fwait
inc
cs
xor
cmpsb
mov
sbb
psubsb
mov
iret
jge
or
xor
leave
adc
arpl
mov
hlt
and
jge
nop
test
aaa
cwtl
pop
dec
or
into
adc
fs
int3
mov
cmpb
aad
xor
leave
arpl
scas
into
test
sbb
movsb
scas
jb
push
jns
stos
cmpsb
or
test
jmp
cmp
je
jl
xchg
int3
dec
hlt
or
mov
xor
push
sahf
push
sub
in
daa
test
icebp
mov
xor
pop
jle
ja
cmp
push
pop
clc
jge
push
dec
loope
inc
insb
sub
mov
sub
cs
adc
jl
mov
adcb
add
ret
cmp
push
inc
test
int
mov
pop
out
pop
add
fsub
lret
lds
or
scas
sahf
or
cmp
xorb
dec
jl
mov
fwait
daa
mov
sub
cli
pushf
cmp
adc
jns
imul
fsub
testb
pop
inc
xchg
shrl
mov
cmp
into
mov
cwtl
cmc
les
outsl
es
sub
sahf
mov
jo
mov
inc
adc
into
mov
mov
cmp
gs
cli
xor
xor
add
xor
decb
add
mov
loopne
imul
jb
jmp
adc
adc
add
sti
sbb
out
and
out
push
mov
arpl
jl
inc
sti
call
dec
das
aad
cmp
rcrl
fisttps
cmc
aas
inc
jns
imul
sub
fimuls
es
shr
cmc
test
in
sahf
sub
adc
sbbb
mov
push
repnz
inc
or
sbb
add
aas
shlb
mov
loop
je
enter
fnstenv
std
hlt
ljmp
ja
sbb
das
out
push
dec
mov
cld
inc
fbstp
jbe
jo
mov
cmp
mov
hlt
in
shll
js
es
or
shll
xor
cmp
ja
test
stos
icebp
sub
movsl
cld
mov
lret
stos
mov
and
out
ficompl
scas
mov
arpl
push
mov
cmp
daa
fwait
xchg
push
push
fstpt
clc
aad
inc
xchg
pop
cwtl
js
sti
fisubs
lods
aaa
sbb
lea
xchg
xlat
jge
push
push
lret
cpuid
cmp
cltd
xlat
mov
or
icebp
stc
xchg
insb
dec
sub
xchg
out
rorl
sub
stos
add
lea
faddp
mov
add
lcall
test
pop
mov
or
mov
mov
mov
ja
xlat
mov
inc
cmc
xchg
push
or
jge
fwait
push
addr16
dec
and
jne
xchg
adc
xchg
mov
call
mov
in
aas
jge
aam
out
adc
sub
sbb
jge
in
je
dec
std
in
mov
add
mov
js
pop
hlt
ret
icebp
xor
dec
neg
xchg
addr16
xchg
pop
push
stc
jmp
test
mov
ficompl
add
icebp
push
xchg
xchg
stos
js
cld
and
sbb
and
addr16
scas
xchg
call
dec
fists
inc
xlat
test
ret
les
mov
inc
xor
in
inc
test
out
mov
fisubrl
dec
jmp
lods
mov
xchg
add
ret
push
xor
lea
fisubs
add
adc
mov
lret
mov
adc
or
dec
mov
std
sbb
inc
or
xchg
aad
sti
push
int3
cmpsl
mov
pop
ds
push
mov
int3
insb
jo
mov
scas
lods
and
and
es
xor
mulb
repz
cmpsb
nop
xor
in
les
cmp
cmp
pop
cmp
and
jno
int
jl
aam
dec
arpl
ds
dec
pushf
movsl
or
mov
mov
pusha
push
test
mov
aam
mov
std
pop
movsl
mov
ljmp
arpl
loope
xor
fnstsw
dec
adc
jnp
xor
push
mov
roll
sub
jae
mov
xor
lods
push
dec
mov
sbb
inc
stc
flds
insl
mov
lcall
lret
fmull
stos
sahf
scas
mov
and
jmp
jbe
mov
repz
mov
cmp
mov
lret
xchg
lret
inc
roll
mov
test
nop
cmc
mov
add
fstpt
mov
xor
sbb
inc
pop
mov
cmp
mov
cld
ja
shrw
fs
mov
xor
clc
idivb
je
or
mov
loopne
jbe
pop
and
movsl
dec
imul
jbe
xor
add
packssdw
xlat
es
cmp
xor
mov
out
sbb
cmp
mov
sub
es
scas
xchg
sbb
push
std
inc
mov
lcall
shlb
sub
xor
aas
add
push
push
pop
mov
movsb
adc
inc
push
jmp
sahf
mov
and
inc
ss
daa
aas
jno
cmpsl
jb
test
je
xor
testb
lahf
std
fwait
lret
ret
cwtl
icebp
jl
mov
or
add
aad
fcmovnbe
mov
popf
mov
insb
cmp
shll
jno
popf
sbb
icebp
mov
jg
pushf
shrl
fisubl
push
inc
popf
insl
mov
fs
test
inc
icebp
add
cld
mov
ror
sbb
inc
mov
mov
mov
int
push
rcrb
ret
ret
mov
or
fnstsw
push
notl
outsb
push
out
popa
popa
pushf
mov
mov
lock
inc
push
inc
xor
sub
mov
in
cltd
push
jmp
push
mov
bound
dec
adc
jle
mov
sbb
push
dec
shl
out
pop
arpl
push
add
sbb
xor
les
les
xor
xchg
mov
hlt
cli
cld
mov
xor
ja
pop
inc
dec
lds
inc
mov
call
dec
add
push
scas
mov
stos
cmp
bound
mov
add
in
cli
or
adc
or
sbb
jp
sbb
mov
ja
mov
pop
sbb
loope
in
into
mov
or
pop
fbstp
or
xchg
je
sbb
movsl
inc
sbbb
ss
push
or
aad
and
jle
popf
les
scas
jmp
mov
adc
fs
clc
sbb
pop
mov
int
jae
cmp
inc
stos
sub
lret
push
sub
je
or
sub
scas
inc
imul
cmp
dec
sbb
rolb
mov
xor
jge
add
hlt
push
inc
adc
hlt
insb
insl
jbe
add
jge
push
pop
sbb
push
aaa
push
cmpsb
or
or
add
in
pop
pop
insl
mov
sahf
xchg
jg
mov
and
sarl
pop
push
iret
cmpsb
adc
fmulp
xor
aad
test
imul
in
dec
xor
dec
in
dec
rcrb
insb
movsl
fisubl
iret
adc
lahf
fdivl
push
add
fldcw
xchg
lds
mov
negb
lret
cmpb
popa
pop
jbe
add
mov
loope
dec
pop
sub
adc
xchg
popf
mov
ret
shlb
mov
clc
cmpb
test
mov
push
push
dec
inc
sbb
rcl
jp
mov
mov
lcall
push
fdivrl
in
sub
dec
and
fdivs
subb
xchg
mov
test
mov
lea
sbb
popa
cmp
pop
cmp
mul
xchg
int
ds
lods
rcl
lock
imul
jbe
jo
push
sbb
xor
and
loop
xorb
push
lea
dec
xor
push
add
and
arpl
mov
ret
jle
cmp
mov
mov
mov
mulb
inc
add
pop
inc
inc
mov
imul
pusha
sbb
ret
xchg
xchg
push
sbb
pop
js
xlat
xlat
repnz
ljmp
in
push
lret
jne
cs
mov
aad
andps
test
inc
lahf
std
mov
xlat
stc
inc
les
icebp
repz
lods
sub
cmp
mov
negb
arpl
push
mov
add
leave
jmp
adc
inc
sbb
test
aas
adc
jb
mov
push
je
in
jns
jnp
adc
inc
dec
sub
inc
nop
mov
cmc
imul
fldt
sbbl
test
add
popa
mov
jbe
lock
xchg
das
jl
sbb
inc
jl
and
add
adc
aad
pop
insl
lahf
sub
dec
xor
je
add
xor
cld
loopne
inc
lret
mov
mov
xchg
popf
daa
mov
in
loope
shrb
sub
jno
aam
and
ret
inc
push
mov
fildll
sbb
ljmp
xor
addr16
push
mov
xchg
xchg
punpcklbw
add
inc
out
cltd
inc
jmp
xchg
mov
pop
sbb
add
loope
stc
test
dec
sbb
push
sarl
sbb
push
ret
fbstp
sub
add
push
js
xlat
lret
dec
fbstp
or
cmp
xor
pop
pop
mov
aaa
or
or
jmp
ja
imul
xor
adc
fcoml
mov
repz
call
js
mov
sbb
out
push
stos
bound
cmp
jns
clc
dec
in
or
out
mov
stos
or
mov
jcxz
out
jp
out
xchg
mov
mulps
mov
ret
xor
jae
mov
xadd
adc
int3
xchg
aas
jmp
xchg
push
push
in
aad
jp
call
stos
pop
in
pop
and
xlat
insb
or
daa
jnp
xchg
scas
dec
dec
cmc
push
xchg
adcl
ljmp
sub
inc
pop
repz
les
mov
inc
scas
lret
add
push
stos
push
fidivrl
insb
stc
sbb
push
lds
jne
fsubrp
mov
lds
popf
rcrb
mov
addl
leave
js
hlt
mov
bswap
jbe
xor
sbb
dec
adc
aad
arpl
aad
push
add
xor
int3
jge
pop
pushf
mov
push
orl
jo
mov
imul
and
aam
cmp
and
push
mov
cmpsb
xchg
cltd
test
xchg
adc
enter
daa
andl
jno
ljmp
inc
mov
or
pop
and
mov
jecxz
test
push
jne
inc
or
daa
push
pop
repz
and
mov
pop
push
mov
loope
xchg
sub
jg
cmp
inc
popf
adc
or
inc
call
sbb
es
add
xchg
and
clc
lret
dec
cmp
sub
aaa
add
pop
imul
lcall
data16
sub
xlat
xchg
add
pop
xchg
dec
add
dec
jg
mov
mov
movb
ja
mov
and
daa
sub
fnstcw
cmp
sbb
pop
lret
inc
outsb
dec
mov
add
enter
pop
ds
xchg
fwait
aas
outsl
ret
stos
test
push
inc
mov
scas
lock
push
maskmovq
notl
lcall
lods
insb
ja
mov
rcll
xor
shl
or
jp
mov
and
xor
aaa
pop
arpl
imul
push
lret
xchg
dec
push
adc
cmp
aad
sub
fwait
adc
in
mov
dec
ret
pop
std
aad
adc
fs
imul
pusha
cmc
and
repz
cmp
das
pop
lea
dec
mov
push
adc
inc
daa
adc
cmp
dec
ret
pop
arpl
inc
insb
jmp
mov
out
std
dec
mov
lret
std
stos
jecxz
fnstenv
mov
add
addr16
mov
fidivrl
mov
xor
dec
jae
je
xor
imul
jecxz
lock
aaa
mov
std
jmp
and
xchg
push
rorl
sbb
insl
xchg
dec
sub
pop
jecxz
aaa
hlt
lods
icebp
scas
mov
lret
clc
in
mov
lcall
mov
or
sarb
gs
sub
ret
sub
ret
aam
dec
push
lcall
clc
xchg
gs
aam
scas
ljmp
imulb
insb
nop
out
mov
sahf
xchg
lods
and
push
sti
dec
movswl
xchg
xlat
ror
cltd
jl
insl
test
dec
mov
xchg
push
dec
imul
je
xchg
jl
rcll
lret
into
pop
in
outsl
push
add
push
push
mov
xor
lahf
ds
jle
mov
jp
mov
div
inc
ja
sti
bound
test
dec
or
dec
outsl
dec
lret
pop
sbb
mov
mov
bound
xchg
push
in
imul
ror
out
aas
fldcw
or
fisubs
stc
push
jp
jbe
mov
lret
adc
pop
mov
in
mov
pusha
ds
ss
imul
jmp
or
cmp
sub
adc
mov
inc
push
inc
push
outsb
stos
shll
ret
sbbl
push
fidivs
push
iret
mov
inc
ret
stos
pop
sub
mov
or
mov
les
xrelease
sub
fidivl
fwait
xchg
or
sbb
push
outsb
imul
pop
faddp
jns
sarl
push
leave
out
dec
cmp
arpl
cmc
jmp
jge
mov
push
aaa
xchg
add
enter
ror
int3
push
mov
cmp
dec
cmp
xor
popf
add
cmpsb
clc
out
pop
mov
adc
cmpsb
sbb
test
jns
adc
sub
mov
jno
scas
xchg
jl
addb
ds
ds
sub
add
test
lret
mov
push
sbb
push
inc
sti
jbe
pop
sbb
ficoms
hlt
ljmp
lcall
cmp
dec
outsb
call
xchg
stc
shr
decl
out
in
and
insb
sbb
sbb
loop
in
push
push
lods
ror
stos
xchg
sub
lret
insl
lcall
adc
mov
cmp
cwtl
mov
test
and
and
aaa
jg
rcr
mov
cmp
aam
sahf
jo
and
loope
ss
add
rcl
hlt
mull
ss
push
mov
clc
sbb
cmp
into
cmp
test
xor
sub
outsl
mov
xor
fcmovnbe
fstpl
jp
jmp
or
lods
push
mov
mov
subl
jno
test
mov
movsl
aam
push
gs
mov
loopne
adc
pop
cmp
adc
jne
adc
add
xchg
or
jl
test
cmp
repnz
jecxz
int
mov
stos
mov
sub
sti
movsb
loopne
cs
lock
nop
aas
outsb
adc
outsl
cld
inc
lds
inc
les
mov
sbb
xor
lds
mov
or
jmp
fimuls
mov
mov
pop
cmp
jmp
inc
or
jo
inc
sub
xchg
jb
jae
dec
sub
mul
cltd
popa
mov
int3
mov
lds
mov
int
mov
out
lods
orl
popa
mov
adc
loop
das
cmp
pop
mov
and
pop
xor
insl
insl
stos
aad
sub
mov
push
fcomi
xchg
cld
ss
cmp
andl
mov
xor
pop
sub
lods
rclb
mov
aam
in
inc
repz
pop
dec
mov
sub
sbb
ljmp
pop
lods
jecxz
or
xor
sbb
popf
dec
nopl
mov
mov
add
cmp
mov
dec
test
rorb
push
test
jo
xchg
mov
fld
cmpsb
shr
in
pop
pop
cmpsl
pop
stos
mov
cmp
lods
cmc
add
mov
xor
lret
lods
or
stos
inc
xor
div
mov
mov
pop
out
pop
mov
mov
ret
push
fmuls
shl
inc
push
xchg
pop
or
mov
fwait
push
aam
dec
scas
lea
jmp
mov
adc
mov
inc
into
jecxz
mov
xor
out
ss
sub
pop
lahf
xchg
insl
sbb
mov
stos
cwtl
mov
and
in
inc
mov
or
adc
fcoml
lcall
jecxz
aad
mov
push
out
pop
pop
popf
pop
or
inc
push
or
stos
inc
xor
scas
insb
ficomps
cwtl
scas
adc
push
and
dec
in
iret
adc
sub
popa
mov
fnsave
push
jmp
or
outsb
sbb
inc
test
outsb
sbb
scas
lahf
jmp
cltd
insl
aas
fidivs
ror
lds
dec
rclb
repnz
bswap
mov
ss
jbe
out
jge
mov
aaa
push
cmp
add
jbe
push
xchg
bound
push
popa
push
inc
mov
mov
scas
sub
and
push
sbb
adc
aam
gs
push
add
and
pusha
jp
enter
daa
add
xchg
jno
cwtl
les
xchg
dec
pop
mov
ds
test
and
mov
enter
aaa
xchg
test
call
pop
lock
mov
push
jo
pop
test
push
push
fnstenv
mov
add
sbb
cmpb
and
outsb
dec
imul
rol
inc
dec
dec
out
repz
dec
add
imul
lahf
int
insl
sub
sub
xor
mov
sti
push
adc
in
sub
sti
push
test
fiaddl
gs
mov
out
mov
mov
mov
adc
inc
fsub
ss
outsl
mov
scas
push
xchg
mov
push
and
inc
lret
sbb
pushf
jp
mov
popf
stc
sbb
sahf
adc
pop
mov
add
inc
into
pusha
outsl
xorl
jno
push
std
nop
data16
pop
mov
push
cli
xor
xor
jns
testl
gs
inc
mov
pop
mov
mov
imul
into
movl
iret
popf
mov
stos
jecxz
cmp
mov
and
sub
xchg
outsb
mov
xchg
pop
sahf
sti
push
cmp
les
aad
aas
nop
sbb
dec
lds
and
jl
pinsrw
repz
jb
fcomp
call
push
sub
adc
popa
gs
add
mov
adc
push
pop
test
inc
scas
xchg
je
mov
jb
jb
sub
dec
mov
sbb
test
add
std
aaa
rcrb
inc
mov
andl
popa
sbb
xchg
jne
mov
or
mov
jmp
lock
sub
add
sarl
test
mov
pop
les
insl
push
ret
and
mov
pop
pop
pop
cld
popa
bound
lret
fyl2x
mov
test
sbb
pop
dec
mov
jno
fsts
aam
dec
popa
ret
repnz
fistl
dec
insl
fstl
clc
cld
fistpl
xchg
push
mov
ljmp
rcl
jl
pop
xchg
cmp
cmp
jge
add
std
nop
fstps
inc
je
mov
int
xchg
in
cmp
data16
mov
xchg
mov
xchg
pop
addps
lods
cld
test
or
dec
sub
mov
scas
xor
push
or
lds
dec
rol
mov
hlt
repz
insb
inc
sbb
cmpsb
jnp
xchg
lods
imul
mov
movsb
mov
mov
jne
cmp
je
sub
lock
fucomp
jns
scas
push
sub
ficoml
push
mov
outsl
or
repz
xor
mov
push
mov
xchg
out
jle
push
in
sub
je
mov
xor
loop
jp
out
negb
lret
xorl
xchg
popf
repz
mov
ret
stos
mov
pusha
and
mov
jnp
jae
scas
jne
xchg
push
insb
dec
mov
iret
je
fld
popa
outsl
cmpsl
pop
cwtl
ss
inc
sub
push
call
xchg
or
jmp
or
fcmovu
adc
sbb
add
test
aad
rol
repnz
push
shrb
addr16
repz
fst
scas
hlt
adc
sbb
jno
jge
test
sbb
fisubl
aaa
adc
sbb
scas
clc
aaa
add
outsl
xor
ds
pop
sub
push
xor
jmp
mov
or
cli
cmp
adc
lock
mov
push
outsl
push
pop
pop
or
inc
cmpl
andb
jno
movsl
mov
mov
jb,pt
mov
and
dec
mov
push
dec
scas
jge
push
mov
push
mov
jb
pop
push
mov
pop
jb
shrl
clc
icebp
loope
adc
cmp
ljmp
sahf
xchg
push
lods
cmp
addb
add
xchg
jp
lret
xor
iret
push
pop
out
int
adc
test
nop
pop
call
stc
notb
jmp
inc
sub
ds
bound
push
shlb
add
and
pop
or
sti
and
mov
jo
fmuls
mov
loope
jns
or
inc
shll
mov
popf
mov
push
add
shl
mov
inc
sbb
adc
mov
adc
jecxz
lods
and
stos
mov
fucom
pop
jae
cli
arpl
cmp
push
int3
or
mov
sbb
mov
loopne
loope
pop
sarb
bnd
adc
lock
pop
ficoms
sarb
mov
xlat
popa
call
mov
xor
push
aad
insb
push
nop
cmc
or
addb
lcall
mov
repz
es
call
out
jb
xor
inc
adc
mov
scas
pop
js
decl
