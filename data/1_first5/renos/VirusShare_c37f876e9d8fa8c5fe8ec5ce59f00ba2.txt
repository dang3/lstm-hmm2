xor
xor
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
push
mov
push
mov
mov
mov
pop
pop
ret
mov
push
mov
add
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
call
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
mov
mov
push
call
mov
mov
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
call
mov
mov
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
xor
xor
add
add
xor
xor
xor
add
xor
cmp
xor
xor
add
push
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
call
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
call
movl
movl
movl
mov
push
mov
push
mov
push
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
call
call
call
call
call
mov
pop
ret
lea
ret
lea
push
mov
add
mov
mov
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
mov
cmp
je
jmp
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
xor
divl
test
jne
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
mov
pop
ret
lea
push
mov
add
mov
mov
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
push
mov
add
mov
cmp
je
jmp
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
sub
mov
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
push
mov
mov
xor
call
mov
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
movb
movb
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
lea
mov
push
add
jmp
mov
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
lea
mov
push
mov
jmp
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
sub
add
add
mov
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
mov
mov
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
movl
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
pop
ret
lea
push
cmp
testb
pop
sbb
addb
test
xorl
jo
sbb
dec
andl
subw
sbb
dec
andl
data16
sbb
test
push
gs
andl
sbb
pop
jge
dec
xorw
jl
jge
sbb
jg
data16
es
jl
test
sbb
sbb
jge
data16
sbb
sbb
sbb
jl
test
test
sbb
sbb
dec
lahf
add
fdiv
mov
sahf
pop
repz
lock
repz
cli
cmp
sbb
pop
sbb
cmp
pop
sbb
cmp
pop
sbb
cmp
pop
sbb
pop
sbb
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
fsubs
lock
push
push
xlat
lahf
fmuls
mov
mov
lahf
fcom
movsl
pop
sbb
movsl
pop
sbb
add
fsub
lahf
pop
and
aam
jle
lahf
pop
loopne
pop
inc
dec
lahf
pop
loopne
pop
and
pop
loopne
dec
fs
pop
loopne
pop
and
loopne
pop
cmp
lahf
pop
loopne
pop
cmp
pop
add
lahf
pop
loopne
dec
push
lahf
pop
add
pop
hlt
jl
sbb
lahf
gs
mov
add
pop
xor
pop
add
pop
call
cwtl
sbb
sbb
rclb
pushf
sbb
sbb
pop
pop
add
pop
int3
add
sbb
lahf
pop
int3
lahf
pop
and
pop
add
lahf
pop
loopne
dec
sub
pop
add
pushf
lea
sbb
lahf
pop
int3
xchg
xor
insb
adc
pop
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
incl
pop
or
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
jmp
pop
cld
ljmp
pop
cld
lahf
sbb
dec
lahf
pop
add
pop
loopne
dec
xor
cmp
cld
pop
push
mov
enter
dec
lahf
pop
add
pop
loopne
dec
xor
xchg
pop
clc
sbb
pop
cld
sbb
pop
cld
xchg
xor
insl
mov
lahf
pop
int3
xchg
jo
sbb
popf
xor
pop
call
pop
add
pop
lock
pop
loopne
pop
inc
mov
in
js
sbb
lahf
pop
loopne
fsubs
lahf
pop
in
lahf
pop
loopne
dec
push
sbbb
sbb
jle
lahf
pop
loopne
pop
cmp
pop
loopne
dec
dec
sbbb
sbb
jle
lahf
pop
and
pop
loopne
dec
dec
lahf
dec
lock
jge
movsl
pushf
cmp
hlt
repz
xor
insl
out
cltd
add
hlt
repz
repz
sbb
movsl
pop
sbb
add
lahf
insl
and
cwtl
sub
mov
sbb
sbb
sub
add
sbb
sub
add
sbb
addr16
cmpsl
push
pop
test
add
sbb
or
addr16
xor
sbb
sbb
insl
or
push
sbb
sbb
inc
leave
add
loope
adc
pusha
fprem
and
add
sbb
addr16
cwtl
hlt
sbb
jae
push
pop
pop
lea
mov
mov
insl
sbb
xlat
sub
pop
add
repz
add
repz
jns
and
movsl
pop
sbb
repz
ret
repz
loopne
lret
xlat
mov
add
fdiv
repnz
and
sbb
ficompl
sbb
pop
out
sbb
fcomps
out
mov
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
repz
mov
icebp
sbb
pushf
sahf
sbb
sbb
pop
out
sbb
fcomps
hlt
sahf
sbb
daa
sahf
dec
out
mov
repz
out
sahf
pop
out
cs
icebp
insl
sbb
pop
out
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
pop
out
sbb
fcomps
sahf
dec
out
and
repz
daa
sahf
dec
out
and
sbb
cmp
mov
sahf
pop
out
sahf
cwtl
and
pop
sbb
sahf
pop
out
sahf
dec
icebp
mov
sbb
pop
out
cwtl
jne
sbb
lahf
std
push
xlat
movsl
pop
sbb
add
mov
mov
pop
cmp
mov
dec
pop
sbb
fdivrs
daa
sahf
or
and
sbb
cmp
mov
dec
pop
sbb
fdivrs
sahf
cwtl
and
pop
sbb
mov
sahf
cwtl
and
pop
sbb
sahf
or
mov
sbb
fdivrs
sahf
dec
cmc
mov
sbb
fdivrs
and
sbb
sahf
or
and
sbb
cmp
mov
sahf
pop
cmc
sahf
cwtl
and
pop
sbb
pop
repz
repnz
push
xlat
add
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
push
push
push
call
mov
lea
mov
subl
movb
movb
movb
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
mov
call
mov
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
mov
call
mov
cmpl
je
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
lea
push
push
mov
sub
push
mov
push
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
cmp
je
mov
subb
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
xor
add
mov
xor
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
incl
mov
cmp
jne
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
push
mov
push
call
cmpl
je
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
push
mov
pushl
xchg
push
jmp
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
cmpb
jne
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
movb
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
pop
ret
push
mov
add
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
call
test
jne
mov
jmp
movw
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
call
lea
mov
pop
ret
nop
push
mov
add
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
mov
mov
mov
push
call
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
mov
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
call
movl
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
mov
mov
push
call
call
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
push
call
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
mov
mov
mov
push
call
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
mov
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
call
movl
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
mov
mov
push
call
call
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
pop
ret
xor
aaa
xor
xor
cmp
add
xor
xor
xor
cmp
cmp
cmp
xor
add
jae
jae
js
cs
insb
and
add
push
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
call
mov
mov
mov
push
call
movl
movb
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
call
movl
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
call
movl
mov
push
call
call
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
movl
movb
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
movl
movl
movl
mov
push
mov
push
mov
push
call
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
call
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
mov
pop
ret
add
add
xor
xor
xor
xor
add
subl
jae
mov
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
mov
lea
call
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
ret
nop
ret
lea
add
jns
add
leave
add
shrl
subb
add
andl
fwait
add
rcl
imul
sbb
add
jo
in
sub
test
fwait
jle
mov
ret
inc
add
aad
or
repnz
add
mov
nop
add
sbb
bound
data16
outsl
mov
jmp
add
mov
push
add
inc
rcr
xor
enter
outsb
xchg
test
pushf
add
insl
sub
push
add
add
add
loopne
inc
inc
push
add
add
xchg
shlb
mov
add
xchg
aas
add
jp
cld
std
jns
fs
pop
or
fwait
int3
add
inc
and
mov
pop
ljmp
add
add
sbb
add
sti
scas
mov
jl
js
xor
cmpsb
mov
pushf
dec
sub
add
icebp
mov
push
add
icebp
add
dec
inc
xor
inc
jmp
cmpsl
push
mov
add
jne
add
insl
addr16
pop
or
outsb
jb
add
add
pop
rclb
loopne
jne
add
add
decb
xchg
adc
xchg
add
insl
add
and
pushf
rolb
dec
xchg
jno
dec
add
add
or
add
add
inc
icebp
add
ljmp
and
add
data16
stos
dec
xor
cs
and
jb
ret
adc
add
jl
ljmp
inc
cmp
add
dec
lahf
push
mov
inc
pop
add
jno
dec
sbbl
cmpsl
and
xchg
cmp
jmp
inc
lret
dec
add
in
dec
jo
add
push
pop
mov
jns
leave
cmp
inc
ret
verr
xchg
pop
add
orl
add
pop
cmpsl
push
ds
sub
mov
adc
add
testb
cmp
loopne
mov
addb
push
push
lahf
aad
fwait
sbb
mov
ret
add
add
mov
cmp
push
mov
add
out
mov
or
jo
call
sbb
ljmp
xor
push
add
inc
jp
lret
add
sbb
movsb
bound
inc
incb
loop
mov
icebp
mov
xlat
dec
add
add
inc
or
fbstp
add
xor
jge
sub
lods
fiadds
pop
add
dec
insl
or
mov
nop
inc
push
xchg
in
push
jnp
cmp
add
and
pop
add
xchg
inc
das
jecxz
imul
arpl
or
xor
mov
clc
add
add
ret
arpl
push
add
add
add
scas
jno
aas
testb
mov
xchg
add
add
mov
add
add
add
mov
xor
jo
roll
mov
mov
add
add
gs
in
ja
cli
xchg
inc
lret
mov
inc
add
add
sub
add
push
add
loope
add
pusha
add
pop
rol
outsb
add
add
push
jne
cmpsl
imul
in
add
add
popl
aas
mov
add
stc
pop
add
pushf
inc
test
sub
filds
es
add
insl
lods
and
cmc
add
imul
test
mov
pop
nop
jecxz
pop
test
xchg
jnp
pop
inc
bound
pop
stc
in
add
sub
xor
adc
xor
xchg
add
add
mov
test
jl
xchg
aad
xor
adc
push
inc
nop
mov
adc
sub
rcr
insl
xor
xlat
pop
sub
movl
cmp
cmpl
insb
fldt
mov
test
lcall
test
and
and
mov
ret
scas
sub
inc
xchg
daa
std
cmova
aad
and
insb
subl
lret
out
stos
fimuls
push
jno
lock
js
mov
xor
rol
or
xor
xchg
ljmp
sbb
fisubl
push
jp
popa
adc
bound
testl
data16
loope
sbb
popf
mov
dec
test
push
push
pop
pusha
aad
sub
inc
clc
hlt
sbb
xchg
ljmp
rcrl
push
iret
stos
les
out
mov
mov
push
test
data16
add
jne
xor
add
mov
mov
dec
adc
mov
bound
loop
inc
adc
inc
inc
js,pn
sbb
test
inc
or
add
cmp
test
jns
negb
movsl
or
sub
mov
mov
dec
dec
sbb
fwait
repnz
stos
mov
mov
arpl
insb
mov
fldl
mov
popa
bound
sbb
dec
lea
or
test
push
nop
outsb
sub
cli
jns
addr16
clc
jp
lahf
pushf
and
popa
pop
insb
shll
ret
daa
push
jle
adc
lcall
jnp
xchg
xor
std
pop
lock
rolb
int
imul
repnz
push
inc
or
push
pop
inc
in
outsl
ja
xchg
push
mov
cmp
cmp
cmp
adc
sbb
leave
xor
pushf
arpl
sti
inc
out
scas
mov
mov
std
inc
rclb
nop
mov
add
sub
mov
xor
fimuls
dec
or
cmpsl
es
mov
xor
pop
cmp
add
imul
jecxz
xor
xor
push
aaa
stos
push
lahf
or
mov
jl
mull
dec
cmpsb
xchg
mov
call
jl
jecxz
fisubrs
test
test
sub
cwtl
cmpsb
push
int
in
pop
cs
enter
daa
sbb
or
loope
cmovs
pop
cmpb
lods
mov
stos
bound
and
dec
push
lahf
lock
pop
push
pop
push
fcompl
fidivrs
pop
xor
adc
mov
gs
xchg
add
pop
or
dec
push
rcrl
sub
dec
adc
xchg
pop
add
mov
jp
mov
pop
andb
jle
push
nop
add
int
shll
pop
orb
rorl
stos
sbb
fstpl
int3
enter
movsb
jg
subl
sub
sbb
clc
adc
and
cmp
inc
or
idivl
xchg
lret
clc
xor
pusha
cmp
sub
into
cmp
imul
ret
ret
xor
leave
popf
loop
add
repnz
add
add
mov
cbtw
popa
jecxz
stc
mov
push
out
pop
cli
sbb
push
mov
jbe
sub
sbb
sub
gs
jmp
dec
adc
ja
or
enter
jp
rcrb
jmp
stos
fsubs
inc
push
cmp
stc
out
sub
inc
adc
mov
pop
fucomp
pop
mov
aad
imul
lcall
mov
aam
je
std
mov
iret
mov
ds
call
jg
xchg
pop
ljmp
dec
lods
push
dec
fcmovnu
inc
mov
inc
push
inc
mov
xchg
aas
and
outsb
jb
loopne
mov
scas
lods
push
rcll
stos
sti
testb
addr16
nop
cli
mov
jno
mov
mov
mov
cld
add
xor
pop
push
loopne
sbb
gs
nop
movsl
lcall
jnp
aam
mov
mov
sbb
int3
dec
push
lret
pop
stos
sti
mov
sub
push
lods
xor
mov
cmp
in
mov
add
push
shlb
hlt
cltd
jns
cmc
test
inc
push
mov
mov
sbb
enter
and
das
xchg
xor
adc
pop
xor
ja
pop
call
adc
fnstenv
je
pop
add
jle
or
pop
xor
inc
sub
jae
aaa
xchg
imul
xchg
fbstp
or
dec
lret
fwait
test
mov
call
adc
xchg
jmp
mov
jns
sbb
xchg
mov
mov
jo
mov
pop
mov
ja
pop
push
dec
cmp
ja
loop
xchg
into
add
mov
jne
cmp
out
and
mov
jmp
jecxz
loopne
pop
in
sub
cmc
adc
jp
bound
adc
insb
sub
loopne
jb
sbb
fs
in
push
imul
inc
andl
daa
sub
jae
lahf
sub
lods
or
cmp
xor
sbb
cmpsb
mov
jge
subl
pop
scas
adc
sbb
pop
pushf
imul
out
ret
ror
lods
negb
hlt
inc
repz
push
pop
mov
or
pop
cmpsl
xchg
inc
aas
shl
inc
das
pop
add
shrb
mov
lret
rcr
mov
mov
ret
mov
xchg
xchg
dec
or
ret
lods
shlb
mov
sbb
bnd
imul
cmp
or
dec
adc
lahf
iret
xor
ds
jo
jg
fsubs
pop
lret
fsubrl
imulb
cmpsl
cmpsb
fisubrl
or
jae
daa
pop
ficoml
loope
jp
sub
stc
mov
ds
jmp
into
sub
lahf
rcll
sbb
fistpll
jl
daa
pop
mov
js
ret
dec
push
inc
mov
faddl
frstor
outsb
dec
icebp
mov
shlb
push
mov
fdivrs
sub
ds
lds
push
xchg
jmp
int
cli
subl
mov
pop
lcall
inc
mov
sbb
std
test
pop
subb
fistpll
dec
or
jecxz
test
int
out
xchg
arpl
sbb
cwtl
out
fdivr
jl
idivl
lods
xor
mov
xor
xchg
cmp
mov
or
in
sbb
dec
push
cmc
jbe
outsl
xlat
stc
test
imul
repnz
sbb
lods
loopne
lcall
cmc
sar
dec
inc
pop
mov
loope
fwait
sti
leave
arpl
jne
dec
gs
lret
data16
out
mov
flds
jmp
out
sbb
repz
xor
xchg
lea
sbb
jl
rcl
xchg
fldt
pushf
and
adc
sub
pushf
shlb
add
push
jo
cs
aad
das
pushf
nop
enter
sbb
cmp
dec
call
jge
jecxz
jl
jae
out
movsl
or
sbb
call
mov
dec
xchg
ja
fildl
adcb
fnsave
xchg
mov
aas
ret
mov
jb
pop
dec
mov
cmp
shl
int3
std
pop
adc
cwtl
dec
adc
dec
nop
leave
mov
cmpsl
icebp
arpl
cld
das
test
lret
int3
call
mov
lock
ss
outsl
mov
sub
std
sbb
fcmovne
in
sub
mov
pushf
mov
add
add
cmpsl
push
push
mov
inc
popf
in
lods
pushf
adc
sbb
mov
mov
pop
xor
push
pop
cltd
mov
test
xor
push
fdivp
jl
jp
ds
push
int
push
loopne
roll
lea
ljmp
jp
hlt
xchg
mov
insb
in
roll
add
ljmp
xor
fstpt
xchg
or
jno,pt
sbb
or
push
fwait
mov
or
mov
imul
mov
loopne
cmpsb
out
jns
jecxz
in
pop
outsb
xchg
adc
in
mov
fisubrl
cwtl
pushf
ss
das
sub
mov
fiaddl
gs
loopne
jne
out
aad
and
bound
mov
ss
jmp
pop
add
sub
lock
fwait
jp
fnstcw
sub
mov
xchg
lfs
das
mov
xchg
sub
inc
cmp
push
mov
je
pop
pop
test
inc
cmc
xor
jae
pop
or
outsl
stos
jge
fs
adc
fcomps
setno
xor
or
in
push
shr
add
ss
iret
lret
ret
pop
leave
and
fs
popf
int3
arpl
addb
xchg
xlat
adc
es
pop
mov
int3
mov
aam
lahf
imul
fsubs
mov
ficoml
lea
and
sub
xchg
movsl
sbb
xchg
sbb
dec
lcall
lds
dec
test
lock
cltd
inc
in
scas
pop
xor
test
roll
inc
lock
in
sub
daa
push
pop
cmp
dec
loope
or
sub
cmpsb
lds
sub
jb
movsl
adc
loop
imul
stc
push
lods
fyl2x
sbb
add
xchg
pop
xor
bound
aas
es
pop
mov
inc
pop
mov
push
jmp
push
jb
mov
sub
jp
adc
dec
cmp
mov
in
lock
test
and
dec
xchg
adc
fisubrs
xchg
adc
lcall
cltd
mov
insb
sbb
scas
dec
sahf
pop
fs
addb
ficoml
clc
mov
loope
stc
lcall
adc
or
fdivs
sub
stos
xor
push
xor
shlb
into
add
cmc
aam
wrmsr
push
jbe
outsl
mov
jnp
cmp
rolb
push
push
data16
dec
mov
mov
out
push
dec
cli
sbbl
pop
in
dec
fwait
jle
js
adc
xor
and
outsl
inc
inc
pop
xchg
repnz
ret
fnstcw
mov
cli
and
rep
setb
clc
je
cmp
sahf
sub
mov
negb
sbb
aad
les
mov
movsb
in
inc
leave
pop
and
je
push
hlt
jecxz
mov
jbe
rorb
xchg
fs
jge
cld
pop
push
mov
cmpl
mov
orb
sbb
inc
inc
jmp
jmp
xchg
mov
call
sti
rcl
mov
push
adc
popf
cwtl
push
mov
or
inc
retw
inc
test
lret
cmp
scas
mov
dec
jne
inc
or
das
dec
or
jae
out
push
and
aam
dec
jg
mov
sbb
pop
scas
shrl
cltd
cltd
dec
or
icebp
cmpsl
adc
pop
jo
pop
mov
jmp
mov
xchg
mov
mov
jle,pt
rclb
insl
push
cltd
out
insl
test
test
add
jno
frstor
xor
dec
ljmp
mov
stos
xchg
int
out
ds
out
dec
push
cmp
into
rdmsr
pop
jb
out
mov
or
ds
iret
mov
xchg
inc
push
dec
inc
test
rorl
xchg
xchg
jbe
add
fwait
loop
enter
mov
sarb
sub
sub
rdmsr
stc
add
push
push
in
test
xchg
fs
aam
add
fidivrs
xchg
mov
xchg
dec
and
mov
pop
in
mov
divl
jb
scas
jne
or
jge
out
and
jns
jmp
jns
test
jnp
sti
out
ljmp
jmp
jp
jne
bound
add
and
test
push
jnp
fadds
jle
fs
in
popa
inc
pusha
cmp
lcall
xchg
leave
pushf
inc
add
pop
jae
push
cmpsl
push
xor
movsl
popf
mov
dec
mov
pop
adc
xchg
adc
add
imul
scas
dec
inc
push
sbb
popf
iret
sub
jnp
lcall
arpl
das
inc
clc
mov
or
push
sbb
fisubrl
jp
int3
ja
cmp
lret
neg
divb
sar
movsl
mov
sub
aad
movsb
or
push
pop
lret
jg
xor
jge
les
sbb
aaa
out
cltd
or
pop
cmp
sbb
jl
outsl
sub
push
or
cmp
or
std
jo
push
add
cmp
push
mov
popf
inc
jg
push
cmpsb
loopne
adc
aam
dec
enter
daa
adc
fistpl
gs
inc
cmp
icebp
sarl
imul
and
addr16
dec
push
repnz
orb
add
xchg
je
ljmp
pop
mov
push
js
sti
pop
pop
movl
push
fcompl
or
mov
outsb
psubb
adc
daa
out
xchg
popa
push
rolb
mov
mov
cwtl
jecxz
cltd
mov
push
cltd
sbb
mov
pop
std
aas
jb
ss
rcll
mov
out
cli
ret
lcall
cmp
pop
es
jg
out
mov
jnp
stc
push
test
fs
xor
mov
lds
jb
mov
repnz
mov
cmp
inc
mov
das
mov
add
fwait
jge
xor
gs
subl
add
ret
add
lods
scas
loope
mov
mov
cli
mov
sbb
mov
cmp
mov
mov
add
loopne
adc
pop
mov
enter
xlat
fnstenv
jle
repz
jns
sbb
bnd
xlat
mov
push
sub
xchg
pop
pushf
sub
mov
mov
push
aad
mov
pop
dec
fnstcw
fdiv
add
dec
mov
jecxz
xor
jns
jno
jae
call
cld
push
xchg
pop
add
adc
insl
lds
gs
popa
pop
dec
int3
sub
adc
jb
add
mov
mov
dec
mov
call
std
stos
jno
cwtl
shl
mov
pop
rorl
jb
cld
test
lret
stos
xor
loop
insl
mov
lock
inc
mov
or
sbb
xor
mov
loopne
dec
pop
sub
cmpsl
adc
insb
mov
jno
inc
lods
jb
and
movsb
incl
push
adc
pop
pop
iret
rcl
jmp
into
push
test
pop
adc
fs
out
enter
loopne
jmp
out
add
mov
mov
stos
subb
out
inc
jb
xchg
cs
push
adc
mov
add
sahf
cmpsb
or
pop
test
mov
lcall
test
andl
cmp
mov
adc
inc
pushf
jl
or
negl
rorl
lock
in
shl
dec
outsl
xor
dec
sbb
jns
popa
shl
sar
or
inc
sub
jne
pop
push
sahf
and
test
dec
adc
xchg
sahf
mov
data16
ljmp
mov
mov
fisubl
add
mov
jmp
inc
jg
orl
mov
bound
sub
out
mov
je
mov
into
jecxz
and
or
push
jle
adc
in
sub
fsub
push
filds
xchg
jle
fistps
mov
inc
or
cmp
push
cmc
dec
cli
popf
mov
cmp
push
or
stos
cmp
sub
jle
jl
pop
in
pop
scas
cmp
adc
pop
cmp
ret
arpl
adc
shl
out
shlb
call
aad
daa
pushf
out
push
mov
aam
add
cmp
lods
ficomps
xchg
scas
rclb
or
and
cmp
push
jmp
push
cmpsl
mov
jbe
loop
jge
xlat
je
pop
into
dec
aaa
cmpsb
fiadds
jno
push
xchg
jl
inc
es
bound
in
ror
insb
jo
jne
scas
sbb
inc
and
movsb
lock
push
cmpsb
ljmp
divl
mov
xor
cmp
xchg
loopne
test
loop
mov
pop
movsl
pop
pop
xchg
and
fstps
sbb
icebp
sub
mov
add
dec
mov
jle
adc
push
sbb
push
and
fmull
add
sub
sbb
jb
lock
add
std
orb
mov
fs
and
fs
loopne
inc
sub
dec
lcall
sbb
lcall
call
inc
jb
sbb
adc
or
fsubs
and
fstpt
stos
ss
cmpsb
cmp
sub
mov
jge
sarl
cmp
inc
add
sahf
adc
into
sahf
pop
cmc
bound
adc
push
mov
outsl
je
loop
adc
je
es
cmpsb
adc
push
imul
movsb
lcall
xchg
adc
mov
daa
out
cmpsl
out
cli
out
xor
loop
shr
pop
pop
sti
xchg
fiadds
adc
movsl
rep
pop
aam
or
push
scas
add
adc
fs
cmp
pop
cmp
mov
sub
std
xor
push
std
test
shll
sarl
adc
sbbl
nop
pop
inc
imul
outsb
inc
out
movb
mov
or
mov
fidivrl
add
jnp
mov
mov
or
insl
inc
sub
fistl
push
inc
sub
in
and
and
mov
adc
jle
ficompl
sub
xchg
mov
std
push
testb
jl
jg
test
mov
fsubs
icebp
call
mov
lret
sbb
mov
mov
jp
lock
dec
cmc
das
or
sbb
add
sbb
cmp
inc
ret
aad
mov
insl
scas
or
cmpsl
adc
shlb
insb
jmp
jge
mov
mov
pop
jl
push
sarb
or
jne
daa
sar
out
push
gs
sbb
into
xchg
and
sbbl
outsl
push
mov
mov
and
lock
leave
adc
adc
or
dec
lcall
scas
xchg
dec
xchg
das
sub
leave
enter
test
inc
xor
or
mov
and
je
into
add
or
jmp
inc
xor
adc
sbb
xchg
lods
mov
or
xchg
dec
or
cmp
sub
dec
cmp
imul
or
out
jecxz
fisubl
or
jmp
mov
out
adc
pop
or
imul
add
and
lods
insb
fdivs
stos
jnp
js
jle
mov
in
call
jae
pop
fbld
cltd
xchg
push
add
dec
inc
push
inc
inc
jae
push
fcoml
mov
cmp
dec
out
xchg
xchg
stos
scas
lahf
out
xchg
sarl
imul
scas
pushf
es
adc
jae
iret
out
cmc
ret
inc
leave
mov
mov
arpl
std
arpl
dec
fsin
inc
cmp
inc
add
ret
jnp
dec
or
pop
sub
pop
fidivrs
adc
insl
and
shrb
outsb
mov
rcl
lods
cmp
pop
sbb
jbe
iret
and
into
push
sbb
jmp
les
and
mov
jl
in
dec
rcll
push
roll
sbb
stos
stos
mov
and
pushf
test
and
filds
pop
push
cmpsb
out
loopne
mov
out
ret
daa
adc
xor
out
cmpsl
fucom
xchg
mov
sub
cmpsl
pop
cmp
rep
ds
xor
es
mov
lahf
mov
je
icebp
stos
inc
add
lahf
cmp
mov
mov
js
adcl
inc
cmp
sbb
fdivl
out
outsb
aad
insl
adc
fisttpll
pop
sbbb
xorl
pop
cmc
int
mov
sub
andl
pushf
lods
cli
sarl
mov
pop
jg
pop
xor
sti
test
clc
adcb
js
dec
dec
je
mov
xor
sbb
sub
jbe
jo
inc
fsubr
pop
mov
lret
sub
stos
jecxz
cmp
push
ret
or
mov
push
xor
sub
push
loope
loop
jno
imul
mov
lods
jl
lret
mov
or
repnz
stc
cli
sbb
or
lea
sti
test
incb
lahf
lods
gs
add
out
pop
repz
insb
adc
and
push
push
les
xor
xchg
cltd
jbe
sbb
push
jbe
sub
lds
insl
mov
jle
ret
cs
xchg
sti
aad
fdivrl
nop
xor
xchg
dec
xchg
cmp
inc
add
push
dec
les
mov
sbb
sbb
pop
jg
cltd
lea
mov
cli
lret
imul
pop
fcmovnb
sbb
inc
mov
ret
sahf
cmpsb
aas
aas
add
std
and
mov
gs
and
fnstenv
pop
cwtl
aaa
das
movsl
mov
xor
push
lahf
enter
xchg
cld
fcmovnb
mov
mov
xlat
mov
cmpsl
push
lock
mov
das
jmp
add
sub
jl
sti
insb
jp
pop
mov
movsb
es
cmpsb
insl
xchg
sbb
dec
std
movsb
sub
mov
lahf
stc
lods
lods
dec
imul
mov
xchg
mov
fwait
jge
rorb
repnz
jg
push
ljmp
clc
push
adc
fs
imul
movsb
push
and
mov
pop
leave
stos
pop
cmp
out
push
cmp
lock
lret
jg
cmovg
add
or
or
rcrb
js
mov
mov
fisubrl
xchg
xlat
push
sbb
lods
inc
lret
or
ljmp
pop
dec
pop
add
and
in
incl
pop
and
repnz
in
lock
cmp
sub
ja
ret
adc
les
adc
lcall
sbb
divb
mov
mov
push
mov
ret
and
xchg
fimull
subl
sub
push
imul
jb
lds
mov
in
inc
cmp
jnp
insl
fnstsw
dec
push
in
fs
push
lret
sbb
xchg
and
stos
pop
cmp
and
call
call
mov
aam
cmpsb
stos
and
sbb
aam
lcall
adcb
mov
sub
ret
dec
leave
lcall
hlt
mov
lock
shlb
or
ret
xchg
mov
fldt
ret
add
sbb
cvtdq2ps
rol
vunpckhps
mov
es
cmp
dec
movsb
stos
push
ficoml
push
ljmp
test
sbb
cmp
or
out
jno
cmp
jl
pop
sub
les
xor
add
and
test
in
fwait
sub
cmpsb
imul
test
cli
aas
adc
cmp
sbb
loope
lods
fldt
movsb
push
cmp
sbb
movsl
sub
mov
lahf
stos
mov
push
stc
loopne
sbb
testb
inc
xor
jl
dec
lods
fwait
pop
sub
pop
test
xor
nop
cmp
fcompl
sub
push
pop
sbb
sub
pusha
das
jbe
mov
and
xorb
jge
jge
in
outsb
lret
dec
adc
mov
and
mov
jp
pop
lcall
inc
mov
jno
sbb
out
scas
test
mov
sbb
insl
add
jbe
das
lods
add
adc
divl
insb
dec
gs
mov
pop
out
je
in
xor
lret
stos
or
into
mov
push
xor
jns
cmp
adc
out
adcb
arpl
jo
push
data16
xchg
arpl
sbb
icebp
pop
imul
adc
mov
clc
insb
cmp
xor
idiv
and
push
loopne
lock
dec
ficoml
push
jge
fsts
test
xchg
xchg
pop
and
cmp
mov
push
adc
cmp
nop
jmp
jae
cs
repnz
add
dec
negb
fwait
dec
cmp
jecxz
cmp
orl
jns
xor
ficoms
dec
cs
repnz
inc
cmp
xchg
inc
push
sub
jb
push
mov
lock
shr
sub
std
mov
sub
mov
out
mov
sbb
xchg
lret
push
test
lret
mul
stos
mov
cmp
das
lret
mov
repnz
ret
repz
jecxz
sub
insl
jge
mov
cmpsl
adc
push
mov
stos
and
lods
mov
mov
xchg
mov
mov
fdivr
cltd
ret
cli
inc
test
bound
push
lods
loopne
fnstsw
outsb
stos
xchg
mov
jo
sar
iret
jecxz
xor
sub
imul
in
scas
xlat
mov
or
mov
mov
mov
imul
xchg
jo
inc
popa
mov
or
in
adc
push
mov
and
add
pop
jle
movsl
jl
xor
xchg
imul
jb
sub
mov
notb
pop
cmpl
divl
mov
lds
adc
jne
pop
cmp
jmp
mov
jmp
movsl
scas
dec
xorl
pop
sub
xlat
aad
addr16
popa
jp
mov
sbb
push
mov
lea
rcrl
pusha
test
cli
lock
idivl
or
xchg
testb
movsl
loop
daa
fstpt
push
adc
cmp
outsl
and
sbb
and
scas
bound
mov
jae
movsl
adc
ret
cmpsl
leave
jbe
insb
hlt
push
fstpl
inc
add
aas
or
ds
jne
ljmp
es
pop
mov
jnp
sbbb
lds
jns
fs
repz
jns
push
cmp
xchg
pop
movsb
xor
or
jbe
push
sub
addr16
sbb
xchg
aaa
jecxz
sbb
or
lret
jno
jecxz
jl
test
dec
scas
cli
mov
xchg
in
out
es
pop
scas
mov
push
or
mov
cli
or
in
pop
test
jo
adc
cmc
and
daa
adc
loope
lock
jmp
add
ds
leave
cmc
movsl
xor
aad
jo
cli
lahf
leave
push
push
int3
in
sbb
ja
testl
push
xor
comiss
pop
lods
pop
ret
add
push
and
cltd
mov
outsb
fwait
jne
adc
xchg
jns
fisttpll
inc
mov
dec
mov
mov
pop
enter
ret
cmpsl
mov
std
pop
xor
lcall
hlt
mov
pop
xchg
mov
movsl
sahf
mov
pop
test
adc
cmc
dec
dec
mov
in
pushf
stc
sub
and
adc
inc
sub
scas
cmp
fcomps
and
lret
stc
xor
sarl
dec
imul
mov
lods
cmc
mov
jg
pop
lahf
xlat
outsl
adc
loop
or
imul
add
jns
sub
lods
dec
add
push
insl
popf
out
std
sub
mov
arpl
cmpsl
sti
jecxz
jg
inc
mov
gs
xchg
jge
jbe
sub
jmp
adc
or
inc
les
xor
repz
lahf
xchg
pop
inc
cmc
sbb
fidivs
xlat
mov
subb
sub
sbb
pushf
aam
jae
mov
aaa
sub
pop
mov
dec
push
push
sbb
outsl
push
dec
mov
mov
jecxz
leave
sbb
lea
add
call
clc
push
jp
iret
jmp
jmp
pushl
pop
aam
pop
inc
mov
enter
cmp
xchg
jnp
mov
cmp
ljmp
fdiv
cwtl
lods
mov
mov
sbb
mov
out
icebp
insl
test
pop
or
mov
das
pop
lock
dec
movsl
mov
jmp
mov
ret
subb
scas
scas
mov
dec
rep
pop
cmpsl
adc
dec
popa
int
stos
lods
push
push
into
mov
xor
and
mov
cmp
shlb
cmpsb
jns
adc
add
push
jo
frstor
clc
int3
out
add
ljmp
jae
fildll
stos
cmp
push
out
int3
xlat
or
addl
push
or
ds
mov
cmpsb
mov
test
adc
xchg
and
fsubrl
mov
or
ret
int
out
push
pop
push
cmp
pop
jmp
incl
xor
or
in
xor
mov
and
pop
cmp
and
out
mov
loope
pop
mov
leave
in
mov
and
loope
pop
jne
insb
sub
adc
bound
out
aam
push
mov
xchg
jo
fwait
addl
out
cmp
sub
shr
sahf
addr16
dec
jp
push
les
dec
jnp
movsl
stos
jle
dec
and
pop
xchg
pusha
inc
add
xchg
lret
pop
test
dec
inc
aaa
inc
and
inc
scas
push
add
leave
popf
dec
xor
push
push
adc
pop
pop
arpl
sub
imul
xchg
scas
lds
mov
jne
adc
inc
iret
add
and
mov
mov
in
popw
hlt
push
jg
arpl
or
pop
shr
or
mov
call
dec
add
ds
push
jno
pop
mov
push
mov
add
je
dec
out
out
repnz
out
cmc
cmp
pop
inc
movsb
sar
push
jecxz
test
dec
sarb
sbb
mov
aaa
mov
inc
and
pop
mov
jl
enter
cmc
lahf
push
jp
fbstp
mov
mov
and
cs
and
inc
dec
mov
cmpsb
outsl
popa
push
in
push
test
lock
daa
adc
and
push
dec
sub
sbb
ds
movsl
cmp
adc
lahf
sbb
sbb
mov
sbb
shrl
cmc
pop
js
inc
js
es
pop
add
fwait
push
jl
mov
sub
aas
outsb
mov
adc
outsb
mov
adcb
mov
push
mov
in
and
push
push
push
test
jnp
jl
and
js
pop
pop
js
int3
lcall
sahf
mov
sbb
sbb
sahf
negl
add
jp
out
icebp
jg
xor
inc
mov
stc
in
andb
adc
shlb
cmp
sbb
dec
divl
mov
pop
cli
jl
das
stc
jb
repnz
and
push
inc
cmc
jle
dec
xor
xchg
mov
imul
loope
add
lods
xor
js
out
ja
cli
mov
les
into
int
sti
xchg
insl
out
push
shll
in
loopne
ja,pt
push
pushf
adc
add
cmp
sbb
xchg
loop
arpl
sbb
xlat
icebp
enter
imull
adc
push
pushf
jg
xor
aaa
mov
aad
js
nop
lds
xchg
dec
mov
inc
inc
cmp
mov
sub
push
je
das
jecxz,pn
cltd
daa
mov
out
jbe
sbb
jbe
leave
ja
add
subb
dec
add
je
push
xchg
add
shrb
inc
inc
inc
into
inc
lea
aas
sbb
mov
mov
push
leave
inc
rorl
std
out
lock
cwtl
push
xlat
rorb
inc
fs
pop
call
inc
mov
je
push
mov
lock
pushf
cmp
in
and
loopne
ljmp
sbb
xor
insl
dec
lahf
or
cmpsl
movlps
and
popa
popa
in
mov
mov
push
jl
and
pop
adc
pop
rorb
dec
inc
cltd
xor
movsl
test
mov
mov
inc
mov
fisttpll
add
ljmp
pop
mov
mov
das
adc
xchg
inc
inc
push
pop
mov
testb
aaa
adc
daa
or
xor
and
mov
test
xor
test
cmpsb
mov
sbb
mov
or
insb
dec
fwait
cld
fistpl
add
je
cmp
jecxz
cmp
jmp
push
jns
push
aad
mov
xchg
ds
sub
mov
mov
ja
lret
aam
lret
mov
mov
xchg
leave
rorl
rcrl
lahf
cltd
jo
pop
and
stos
mov
xor
ds
movsl
fsts
int
dec
outsl
jb
int
shll
lret
insb
test
jnp
out
jle
mov
adc
mov
sbb
popf
dec
mov
inc
inc
lock
jae
fnsave
into
lret
popf
jne
push
mov
xchg
lahf
push
stos
jp
loopne
sbb
inc
mov
scas
sub
push
ret
xchg
push
adc
mov
iret
arpl
mov
leave
fs
hlt
pushf
jne
arpl
jp
inc
or
push
or
xor
incl
mov
fcmovu
dec
hlt
add
popl
call
xchg
lds
jl
mov
pop
mov
cmp
in
adcb
push
jbe
or
jge
nop
inc
sbb
and
popa
cmpsb
sbb
icebp
add
xor
movsb
dec
lea
and
push
dec
stos
scas
ja
shll
scas
pop
das
test
dec
orb
fldcw
jge
xor
enter
daa
rsqrtps
cmp
loop
sub
xchg
push
cmp
and
ljmp
mull
lahf
pop
xor
test
int
lods
add
lahf
push
xchg
xchg
pop
lahf
mov
js
test
push
das
aad
roll
mov
pop
and
sub
push
sbb
in
push
adc
dec
mov
fwait
data16
loop
aas
mov
lock
repz
lods
push
stos
xchg
dec
jecxz
mov
pop
notl
rcr
mov
aam
jle
adc
ret
fmuls
mov
or
xor
mov
pop
fdivrp
fwait
jo
fs
pop
adc
pop
ss
cmpsb
fcom
shr
divl
sub
lret
test
push
repz
sbb
pop
movsl
into
xor
jle
xor
mov
sub
adc
pop
fwait
add
aaa
push
sbb
mov
loopne
out
jne
cli
out
arpl
cmp
sti
inc
adc
decb
mov
es
outsl
aaa
rcll
xchg
iret
fsqrt
mov
push
repz
andb
loope
sbb
push
jecxz
xlat
xor
fsts
leave
sub
pushf
sub
jg
jle
adc
aad
leave
fwait
nop
mov
jecxz
inc
dec
jecxz
dec
mov
push
dec
jecxz
lods
ss
mov
les
icebp
pop
out
imul
rcrl
mov
dec
out
mov
repz
jp
inc
int
sbb
inc
jecxz
mov
push
mov
xchg
sub
fnstcw
mul
add
xchg
jmp
mov
mov
ret
sbb
cld
xchg
lret
inc
jl
mov
xor
ret
push
enter
in
mov
xlat
sbb
aam
repnz
xchg
ds
jmp
repnz
mov
sti
xchg
mov
mov
jbe
pop
and
repz
lods
pop
pop
or
rcr
shll
test
pop
mov
push
divb
fnsave
stos
add
jo
stc
sar
pop
negb
and
xchg
inc
fists
aaa
rcll
bswap
pop
pop
add
popf
or
push
shll
lods
movsb
fwait
dec
pop
jo
test
sarb
ss
sbb
mov
or
ljmp
mov
jb
add
lods
xlat
xor
lcall
adc
jl
lea
insb
mov
mov
push
ja
sub
dec
pushf
jnp
jno
push
mov
add
hlt
dec
cmpsl
lahf
leave
jne
mov
mov
jp,pn
jb,pt
bound
es
xchg
push
rcrb
out
out
arpl
enter
outsb
xchg
jp
jecxz
and
or
insb
out
mov
hlt
jle
and
in
loopne
pusha
jp
mov
insb
jns
jo
jno
push
mov
shll
adcl
pushf
jns
mov
shrb
adcb
adc
imul
add
or
mov
iret
ret
ret
lods
leave
fildl
lock
out
popf
arpl
xor
or
scas
pop
cmova
sbb
add
jbe
in
dec
pop
pop
jmp
fisubrs
je
adc
mov
mov
jb
sarl
inc
fnstsw
movsb
xor
push
add
push
jge
sti
pop
sbb
daa
xor
in
cltd
jno
mov
jl
test
push
inc
icebp
jecxz
jnp
jl
jno
ss
push
push
lret
and
cmp
push
or
push
sbb
inc
push
into
shr
and
dec
push
daa
push
repz
loope
xchg
scas
sub
loop
cmp
aam
movsl
dec
push
or
inc
mov
lahf
and
add
aas
add
icebp
xor
je
pop
fsubs
loopne
jbe
orb
push
sub
ljmp
adc
and
push
cli
cmpb
pop
sti
loope
lcall
push
scas
xchg
jge
dec
sbbl
jbe
sbb
jno
mov
sbb
cmc
sahf
je
icebp
test
int3
xor
rolb
sti
mov
arpl
stc
push
stos
dec
fnstcw
adc
int3
mov
mov
ja
imul
lret
fmulp
inc
add
cmp
enter
dec
and
sbb
sub
or
jl
sub
outsl
scas
pop
push
loop
icebp
cmp
adc
mov
int
mov
in
push
outsb
mov
in
neg
cli
sbb
lods
mov
movsb
jle
sti
lock
mov
xchg
pusha
inc
pop
mov
rclb
pop
clc
stos
fnstenv
scas
nop
les
jg
out
repnz
push
xchg
cmp
jmp
inc
adc
outsl
inc
pushf
aad
or
insl
or
into
sbb
sub
cmpsb
or
jb
xchg
inc
popa
jmp
dec
pop
outsl
cmpsb
je
les
jecxz
add
stos
lea
call
jne
mov
xor
imul
adc
pop
mov
dec
pop
inc
ret
sbb
sbb
pushf
jge
mov
sbb
adc
sub
push
imulb
inc
or
cmp
lret
cwtl
mov
fisttpll
ds
mov
or
loopne
mov
xchg
xorl
inc
inc
test
sub
bound
adc
es
push
call
dec
in
push
mov
adc
daa
lods
pop
cmp
mov
cltd
rclb
rcrl
cmp
pop
ss
shrb
subl
jp
mov
xchg
fstp
inc
sub
xchg
lahf
xchg
out
ljmp
lret
mov
stos
or
out
cmc
gs
push
adc
jle
sub
cmc
or
mov
scas
pop
sub
in
mov
pop
sbb
mov
mov
cmp
fwait
pop
mov
movb
jmp
sbb
xor
or
sahf
mov
aad
mov
pop
mov
push
xor
ja
push
call
mov
in
cltd
mov
outsl
mov
dec
mov
jne
lock
out
sbb
movsl
scas
jmp
roll
and
jae
xchg
or
popf
sub
insl
lret
xor
lds
pop
jnp
mov
jle
jge
in
cmp
pusha
adc
fwait
fwait
xchg
inc
mov
les
and
dec
aad
push
dec
enter
lret
sarl
inc
fwait
stos
pusha
push
xchg
lret
popf
test
mov
imul
ss
out
pushf
fists
pushl
adc
push
mov
and
rol
ljmp
hlt
xor
arpl
sub
clc
adc
push
xor
pushf
loopne
ret
sbb
iret
dec
outsb
pop
inc
insl
int
push
ret
xchg
test
xor
cmp
xchg
xor
push
rorb
adc
adc
sbb
test
fildll
inc
or
xchg
adc
jl
and
push
and
push
xor
int3
xchg
aad
xchg
in
out
inc
imull
clc
xor
or
mov
loope
xchg
daa
or
in
inc
loope
gs
xchg
add
cmp
sub
movsl
push
xchg
fdivl
ficomps
sbb
int
cmp
aam
bound
sbb
mov
js
std
mov
push
jb
push
sbbl
pop
outsb
daa
xor
sar
inc
xchg
pop
push
stos
orb
lods
mov
add
adc
int
xchg
jg
jmp
jnp
lcall
fisttps
in
sbbl
aaa
inc
sub
mov
sahf
mov
fs
rcll
or
ss
rcll
dec
mov
imull
xchg
mov
mov
gs
cltd
lea
cmpsl
add
into
sti
mov
ret
hlt
xor
loop
cmpsl
daa
imul
jg
add
xor
lods
out
std
mov
push
out
std
pop
cli
dec
pop
shll
setne
sti
lahf
movsb
pop
roll
gs
cmp
loop
push
adc
inc
inc
les
inc
repz
cmp
push
dec
out
cmp
movsl
scas
mov
xchg
adc
out
pushf
adcb
pop
fwait
cmp
mov
cwtl
xlat
nop
push
jl
dec
ror
sahf
inc
je
sbb
mov
je
mov
xchg
or
lea
fs
hlt
xchg
xchg
pop
fwait
and
mov
fs
negl
pusha
test
cmp
or
aas
stc
out
jb
out
mov
cmpsl
popf
mov
ja
xor
imul
std
jecxz
sbb
cltd
mov
mov
pop
add
icebp
leave
fsub
cld
fnstsw
lret
and
rorb
out
out
lock
subl
sahf
and
sub
dec
stc
aam
sbbl
jo
insl
add
pop
dec
fcomip
push
cmpsl
or
icebp
mov
sub
lods
lret
mov
mov
movsl
icebp
mov
push
call
in
cltd
mov
scas
mov
push
push
fldl
mov
dec
xchg
fimuls
out
push
xchg
pop
shrl
subl
cs
je
jns
ss
or
cwtl
mov
mov
cld
dec
in
in
test
fildll
test
xor
fldpi
or
bound
push
jmp
out
pop
add
inc
movsl
inc
mov
jns
testb
sub
mov
pop
es
sub
dec
lods
rcrb
fnstsw
dec
jbe
insl
pop
mov
mov
mov
out
cld
and
arpl
dec
jmp
pushf
lea
out
jb
sub
mov
xchg
mov
and
inc
xchg
insb
jnp
inc
cmp
lret
jne
shll
gs
fistpll
outsb
pop
test
testb
jae
aaa
dec
push
or
add
mov
dec
pop
jmp
shrl
xchg
and
mov
daa
jmp
scas
push
mov
push
cwtl
dec
ja
out
mov
or
ret
sub
leave
sub
hlt
jge
leave
arpl
push
stc
or
movsl
xor
hlt
roll
int3
mov
mov
fidivs
repz
jmp
iret
mov
sbb
cmp
mov
or
cld
push
jge
jl
sbb
fistl
aaa
sahf
mov
or
outsl
std
jno
dec
cmpb
dec
fiaddl
cwtl
xor
daa
pop
dec
scas
adc
mov
push
fbld
xchg
xchg
cmpsb
jnp
sbb
enter
daa
or
popa
cmp
loope
pop
mov
stc
mov
ds
hlt
test
push
sbb
jmp
add
jmp
stos
sbb
mov
xchg
xor
ljmp
adc
and
pop
in
pop
jbe
push
and
push
fcomps
nop
sub
das
outsb
mov
or
lahf
mov
xor
xor
push
and
stos
lret
in
sub
sub
pop
je
ret
sbb
lahf
jnp
mov
jecxz
sahf
mov
lods
add
push
add
mov
lea
stc
rorb
out
mov
adc
daa
ss
sti
cmp
add
fwait
loope
es
xor
ds
or
cmpb
lcall
outsl
insb
adc
imul
mov
add
inc
hlt
mov
lods
int
mov
cmp
fsqrt
jg
jmp
jp
or
testb
jns
sbb
pop
int3
inc
std
adc
out
mov
lahf
js
les
pop
repz
xchg
out
mov
sbb
add
sbb
lea
or
into
pop
stc
pushf
sub
xchg
jmp
out
loop
add
arpl
mov
data16
xor
aad
xchg
push
je
test
jecxz
xchg
push
dec
lea
inc
lock
jae
pop
dec
mov
andl
mov
push
inc
fucomp
inc
stc
setae
cwtl
sbb
jb
inc
pop
mov
xor
mov
imulb
sub
push
daa
dec
mov
ljmp
mov
pop
dec
lret
xchg
cmc
and
mov
fdivr
lock
jns
add
std
mov
mov
dec
push
dec
shlb
insl
out
mov
cmpsl
or
pop
popa
inc
xor
jle
mov
fucomi
sub
je
xor
cltd
or
dec
xchg
mov
std
and
pop
ja
daa
and
repz
ljmp
pop
or
out
add
mov
inc
and
enter
call
repz
or
mov
mov
xchg
jp
test
les
sbb
das
inc
jmp
dec
or
pop
push
mov
push
add
loopne
pop
lcall
mov
jns
lret
sbb
mov
mov
lahf
lret
in
mov
jecxz
pushf
ja
popa
int
mov
mov
mov
dec
push
ror
jle
and
fstpt
idivb
jmp
addr16
fwait
out
loope
sub
mov
fidivs
jp
pusha
pop
and
xchg
add
adc
jle
or
in
pop
movsl
pusha
dec
jo
fistps
out
xchg
jmp
push
mov
jae
fsubr
push
rclb
pop
mov
clc
xchg
stos
inc
mov
cmc
sbb
jno
imul
inc
scas
mov
loope
fists
lahf
loop
iret
mov
leave
inc
cmp
enter
or
cmp
or
and
cwtl
inc
xor
enter
das
add
xchg
int3
movsl
push
fstps
mov
add
mov
in
mov
imul
cmp
push
movsb
ja
mov
jbe
mov
jge
xchg
sahf
sbb
rcll
mov
int3
inc
jl
aad
dec
dec
push
jnp
jmp
mov
jo
cmp
sti
sub
push
jp
mov
adc
push
jb
fcmove
lcall
out
cmp
xchg
mov
dec
ja
sub
ret
mov
in
jno
inc
movsl
pop
pop
add
adc
popa
push
mov
dec
sbb
xor
mov
pusha
pop
cmp
pop
cmp
test
das
mov
jl
fists
outsb
in
dec
pop
adc
mov
fmuls
mov
mov
mov
gs
and
cmpsb
push
mov
mov
sub
into
stc
pop
repz
lcall
testl
adc
test
xlat
add
fisubs
mov
scas
stos
stc
ja
or
jp
mov
ss
outsl
cmp
rcr
imull
lods
lret
mov
cmp
mov
or
adc
xor
xchg
jmp
loop
scas
push
imul
xlat
add
mov
and
pop
mov
dec
jb
ljmp
mov
in
xor
std
inc
je
sbb
jg
subb
pop
jmp
add
push
stos
les
jne
push
or
sbb
inc
mov
dec
sub
or
and
in
jmp
pop
xor
data16
cld
aad
test
dec
int3
sub
cmp
dec
jl
lret
sbb
xchg
or
jns
shr
repz
repnz
jnp
add
daa
cmpl
leave
pop
cmpsb
test
inc
jmp
daa
xchg
aas
aaa
push
popa
jb
out
push
mov
mov
cmpsl
lods
div
cmp
xor
mov
cmp
icebp
ja
mov
lret
add
lret
es
lock
popa
ret
das
jecxz
ja
vmovapd
gs
rorb
insl
into
mov
sbb
pop
lods
mov
push
jb
lods
mov
arpl
mov
loop
jno
pop
or
xchg
shlb
icebp
adc
push
inc
cmpsl
mov
aad
push
add
outsl
clc
cs
xchg
pop
test
ljmp
into
pop
loope
add
out
push
mov
hlt
mov
insl
cmova
mov
xor
jb
mov
mov
inc
mov
xchg
arpl
sbb
inc
cltd
inc
sbbb
or
sub
fwait
out
jmp
das
dec
mov
sti
out
jnp
xor
inc
iret
in
aad
xchg
leave
or
cmp
sahf
inc
movsl
ja
sarl
xchg
mov
mov
push
adc
enter
pop
pushf
jne
stc
movsb
mov
dec
dec
out
mov
xor
xchg
xor
pop
out
lds
sub
mov
stos
addr16
mov
and
dec
mov
jle
inc
xor
pusha
out
mov
jp
add
bnd
inc
jns
xlat
jae
xchg
push
xchg
movsb
adc
cmp
xchg
mov
int3
sbb
xchg
shlb
sbb
push
imul
sti
push
es
test
ds
push
ret
or
out
hlt
adc
arpl
mov
inc
sbb
dec
push
mov
daa
ficompl
adc
mov
or
nop
xchg
jle
rorl
mov
sub
cmpsb
shlb
aaa
mov
mov
mov
add
divl
mov
jge
mov
insl
out
aaa
sbb
mov
jno
jno
jl
in
loope
mov
movsb
jl
xchg
xor
jo
sbb
ror
and
mov
fists
xchg
mov
sbbl
stc
enter
daa
or
inc
loope
mov
sub
pop
nop
cmp
in
xchg
in
movsl
gs
and
hlt
test
scas
lds
loopne
xchg
add
xorl
pop
bound
js
pop
mov
jl
adc
pushf
ficoms
or
fdivl
inc
cwtl
outsb
push
inc
cs
nop
scas
lock
jbe
repz
xor
adc
and
xchg
cld
push
mov
and
sub
dec
pop
jb
dec
lcall
mov
imul
sbb
sbb
addb
mov
in
xor
push
fs
cmpsl
stc
test
iret
fdivrs
mov
lret
jecxz
cmp
lcall
ret
movsb
test
mov
xchg
xchg
outsl
sub
and
sti
imul
adc
call
ret
fwait
add
mov
stos
cli
in
cmp
in
push
rorb
lods
mov
push
gs
ss
add
fwait
adc
roll
jle
cmp
and
fcomps
jnp
mov
sub
push
adc
pushf
subl
cs
out
and
dec
cmp
nop
out
push
dec
out
rolb
dec
repz
xchg
je
fstpl
mov
xor
loopne
mov
pop
and
jno
dec
pop
mov
fiaddl
xchg
mov
pop
dec
push
push
inc
jo
rolb
push
xchg
aas
xchg
and
shlb
dec
data16
fs
sub
xor
adc
fsubs
dec
cwtl
lret
mov
or
mov
xchg
fdivr
pop
mov
mov
xlat
inc
lock
das
ret
mov
stos
loop
aam
aam
ret
imul
inc
test
dec
shlb
cmpsl
or
aam
push
sbb
outsb
inc
subb
fdivrl
jmp
jp
pop
mov
stc
sar
jp
cltd
jnp
xchg
test
xchg
mov
repnz
lds
fnsave
je
imul
leave
shll
mov
stos
out
cmpl
push
jle
xchg
xsha256
cmpsb
xchg
fildl
rorb
pop
or
out
or
dec
clc
mov
mov
cmc
jae
xchg
dec
pop
xchg
in
inc
sbb
or
lret
dec
fwait
push
cmpsl
push
push
shlb
add
push
pop
mov
xor
inc
cmp
popa
mov
lret
xchg
sbb
mov
or
pop
pop
test
dec
xchg
mov
adc
mov
sub
dec
jne
les
out
cltd
inc
lods
bound
xlat
jmp
std
pushf
loop
das
int3
xor
add
clc
or
add
jp
loop
and
insb
push
leave
jb
add
pop
jle
push
in
test
pusha
add
xchg
xchg
pop
and
push
enter
ss
hlt
cmp
push
sub
mov
or
jae
daa
push
xchg
xorb
jp
mov
adc
loop
popf
aam
ret
pop
leave
cmp
arpl
mov
adc
push
xor
or
mov
add
push
jmp
lcall
sarb
mov
adc
movsb
lea
pusha
jbe
add
jge
insb
cmc
sbb
lret
or
or
cmp
jl
fldenv
daa
ds
scas
mov
xor
cmp
cmp
and
xlat
test
adc
filds
pop
cmpsb
add
insl
in
test
ss
daa
or
pushf
cmp
aad
loope
sbb
inc
shll
cmp
ljmp
insb
aaa
mov
dec
cltd
adc
fs
arpl
pop
sahf
pop
add
ja
xor
lahf
sbbb
sarb
fiadds
mov
addr16
push
fnsave
fsubl
imulb
mov
xor
adc
imul
aad
and
lods
inc
and
jo
push
mov
ret
aad
out
icebp
jns
lcall
jnp
push
mov
sbb
popa
ljmp
in
and
in
ftst
mov
aaa
stc
in
pop
fs
imul
adc
scas
ss
pop
adc
ss
shl
stos
mov
lret
in
xor
ret
pop
es
into
xchg
in
xor
mov
outsl
or
loop
test
imul
ds
add
insl
inc
aam
lods
addb
mov
fdivr
sbb
in
mov
sti
sti
pop
sbb
mov
loopne
ret
sub
jns
jg
inc
testb
mov
repz
cmp
repz
jmp
mov
out
xlat
stos
inc
mov
out
repnz
mov
jmp
addl
in
nop
ret
dec
dec
inc
rcrb
dec
push
push
je
mul
jecxz
mov
and
inc
out
call
lock
in
pop
addr16
mov
jno
mov
cltd
xor
pop
in
ja
inc
mull
loope
dec
xchg
push
aas
jne
mov
mov
sar
or
mov
mov
std
jg
xor
test
outsb
mov
bound
pushf
adc
icebp
and
lret
ficoms
mov
in
fs
or
mov
mov
xchg
xchg
ret
cli
mov
sub
stos
stos
dec
lret
mov
cmpsl
or
fdivrs
test
jae
jbe
mov
mov
lock
add
rcl
pop
ror
cmp
test
mov
push
or
faddl
fwait
clc
movsb
shlb
and
lahf
rorl
cmp
pop
aaa
shrl
jno
out
in
rcll
pop
test
syscall
sbb
add
bound
or
sysenter
aaa
jns
mov
mov
mov
test
in
xor
sbb
inc
mov
jbe
int3
inc
rcrb
xchg
ss
xor
enter
ja
xor
jns
and
xchg
faddl
push
stc
adc
push
shlb
or
js
mov
clc
outsl
mov
lcall
jne
repnz
mov
bound
fmul
xchg
enter
mov
call
jne
stos
pop
and
jp
xor
insb
jno
loopne
mov
mov
jno
fsubp
xchg
shr
pusha
sbb
ret
fistpll
adc
pop
pusha
mov
rclb
sbb
mov
mov
dec
in
stos
lahf
ds
sbb
inc
adc
jl
scas
fisttpll
push
adc
ss
cld
fimuls
leave
movsl
xor
hlt
test
or
inc
pop
lock
or
xchg
aam
inc
mov
push
add
cwtl
sbb
je
fidivrs
add
rclb
mov
fs
popa
cmp
js
pop
imul
push
das
rcrl
jecxz
in
lcall
jno
daa
mov
cmp
xchg
pop
jg
xchg
mov
xor
xchg
sub
and
add
jo
ret
cmpsb
xchg
jb
fadd
enter
daa
or
clc
loope
mov
cmp
mov
movsb
fsubs
jecxz
adc
push
aaa
sub
add
rcl
insl
pop
mov
pop
mov
dec
js
dec
pop
cli
cmpl
pop
out
push
xor
mov
or
in
lods
arpl
push
adc
rolb
orb
ret
and
push
and
push
rclb
int
inc
sbb
push
push
ja
jo
xor
sti
sarl
sbb
inc
sahf
inc
add
cmp
add
jg
fstl
mov
int
stc
pushf
jg
sbb
sub
mov
cmpl
imul
xor
mov
cmp
sbb
rclb
sbb
mov
push
dec
mov
repnz
ds
imul
dec
cltd
enterw
imul
icebp
out
xlat
sar
dec
pop
out
imulb
xchg
sti
or
popa
incb
jle
loopne
xchg
dec
pop
dec
inc
adc
fnstcw
les
repz
xchg
cli
into
clc
sbb
icebp
test
and
adc
icebp
movsb
pushf
xlat
clc
mov
cs
mov
cmp
dec
lods
in
inc
rcrl
dec
loope
fidivs
push
mov
in
call
outsl
inc
push
pop
sbb
jb
xor
fcmovne
call
add
mov
inc
gs
aas
adc
leave
jb
xor
sti
and
in
roll
nop
dec
idivb
cmpsb
lahf
cwtl
inc
mov
mov
cmp
fdiv
cld
push
cld
mov
add
dec
dec
inc
mov
addr16
das
adcb
sub
lods
test
mov
jnp
dec
aad
insl
addl
cmpsl
pop
jnp
mov
pushf
push
imul
arpl
div
adc
lock
mov
cltd
jmp
shll
scas
mov
clc
fbstp
sbb
push
ljmp
dec
pop
loop
cmc
stos
mov
ds
leave
test
fs
xor
fildll
or
arpl
or
shll
dec
call
and
xchg
dec
inc
inc
inc
test
or
mov
fwait
je
mov
add
dec
je
fildl
js
add
jns
xchg
in
adc
xchg
mov
xorl
iret
mov
dec
insb
push
es
or
xchg
dec
fdiv
add
test
out
push
pop
bound
bnd
xchg
mov
out
sub
fisttpll
test
sarl
xor
lds
mov
bound
in
orl
mov
adc
xlat
add
xchg
xor
fisubs
lcall
push
fcoml
mov
mov
rclb
sub
ret
inc
arpl
push
sti
sahf
scas
adc
jp
iret
pop
in
add
pop
xor
sbb
in
hlt
idivl
inc
and
jmp
inc
das
test
testb
dec
pop
int3
push
push
insl
pop
pusha
mov
fsubp
push
mov
sarl
shlb
mov
mov
cmc
cmp
movsb
mov
mov
jge
aad
sbb
sbb
or
aaa
lds
and
aaa
fmuls
jne
je
in
or
out
dec
imul
adc
pop
push
cmpsb
pop
jmp
cmpsb
or
mov
enter
daa
pop
lret
push
addb
pop
xor
outsb
dec
push
ds
repnz
movsl
jp
or
jle
mov
or
scas
sbb
pop
push
lods
inc
sbbb
int3
js
inc
repz
cmp
subl
mov
xor
fwait
lcall
insl
movsl
shlb
into
pop
xchg
jno
addb
das
mov
sbb
push
ret
cmp
int
mov
sub
push
lods
pop
out
nop
ds
in
mov
mov
mov
xchg
sahf
jmp
mov
sbb
outsl
jg
in
mov
inc
fdivr
push
arpl
adc
fisubrs
push
cmp
lods
sub
lret
push
xor
in
or
push
into
dec
sub
cmc
jge
ja
movsl
int3
fldcw
pop
pop
loop
sub
imul
mov
and
and
jle
jle
sbb
xchg
jg
sti
mov
cmp
gs
loope
loopne
ja
pop
or
adc
loop
fnstenv
in
mov
rcrb
mov
xchg
into
cmp
lods
sub
lret
xchg
adc
cld
das
jmp
push
lods
cs
aad
fs
js
cmp
testb
mov
stc
inc
je
and
mov
and
out
lock
pop
int
mov
dec
inc
cmpsb
push
fcomi
ficomps
pop
jns
add
dec
mov
mov
mov
mov
mov
jmp
adc
idiv
loopne
std
int
stc
cwtl
sti
or
mov
pushf
mov
icebp
rorl
jo
mov
and
mov
inc
mov
das
pop
add
mov
cmp
aam
sbb
int3
stos
int3
insl
push
adc
cmpsl
push
jp
mov
mov
fsubrs
sahf
lret
mov
xor
mov
pavgw
shlb
add
subb
and
call
fucomp
popa
jno
sbb
addr16
push
stos
xchg
fistpll
out
stos
or
pop
push
movnti
jp
or
mov
mov
les
dec
dec
pop
std
test
in
mov
fimull
inc
inc
fiadds
or
test
mov
add
and
jp
xor
dec
out
jns
cmp
imul
xchg
add
enter
mov
jge
mov
jns
sub
mov
js
je
mov
jl
mov
test
sti
aad
dec
jmp
pop
mov
push
sub
mov
push
push
jp
in
icebp
and
ss
adc
xchg
in
cwtl
and
rcrl
fcomip
dec
xlat
xchg
or
pop
into
fwait
mov
jae
adc
aad
aam
cs
enter
test
xchg
sub
push
sbb
dec
movsl
imul
scas
mov
inc
pop
adc
shrl
ret
lret
leave
xchg
or
add
jno
inc
and
sub
call
fisubl
fcomps
int3
cmp
mov
insb
adcl
lds
dec
rorb
xor
enter
jp
movsb
cs
inc
push
stc
imul
pop
out
mov
sbb
ret
insb
cmc
jl
xchg
ret
fldlg2
push
pop
cwtl
aam
mov
inc
jo
mov
scas
dec
jle
and
enter
mov
cli
inc
loopne
out
cmpsb
lea
or
push
mov
cmp
sbb
sub
sbb
xchg
and
mov
sbb
sub
fnsave
sbb
aas
xor
das
addr16
outsl
ret
and
js
fmuls
js
int
inc
add
push
loop
inc
fsubl
xchg
sub
mov
adc
cld
stos
rorl
adc
push
mov
dec
dec
mov
sbb
and
iret
push
ficoml
cmp
sub
ss
outsb
hlt
lcall
jbe
pop
sub
sbb
push
arpl
hlt
sbb
mov
stc
or
pop
adc
mov
cmp
insl
mov
lret
xchg
xor
subl
cmc
inc
fldl
outsl
cmpsb
mov
loop
dec
dec
imul
imul
lods
aaa
push
testl
mov
jns
and
jl
cld
popa
and
push
mov
jmp
pop
xchg
xor
repnz
fldl2t
aaa
mov
repz
in
jecxz
adcb
addr16
xlat
or
sub
mov
fwait
pushf
sub
cli
dec
cs
push
or
cmp
dec
push
cmp
stc
jnp
dec
iret
or
jecxz
push
pop
cmpsb
insb
popa
lea
call
insl
and
pop
adc
subl
movsl
out
aad
addl
mov
push
lods
fidivl
push
das
and
mov
shll
in
mov
cwtl
mov
mov
idivl
mov
fs
stos
aam
cld
or
out
lret
sub
mov
xchg
lock
adc
jns,pt
mov
xchg
rol
cmpsl
xlat
jae
dec
negb
push
call
lds
push
fcompl
lret
lods
mov
imul
icebp
pushf
and
data16
stos
pop
jo,pn
rolb
add
lea
fwait
mov
or
fstl
sbb
xchg
xchg
mov
or
jmp
stos
cmpl
push
ljmp
add
cmpsb
lret
or
add
sbb
jp
andl
dec
mov
std
test
dec
and
lea
jo
lea
jmp
pop
stos
cmp
and
lcall
sbb
jns
cmp
testb
mov
icebp
sub
inc
inc
push
ja
mov
xlat
mov
jl
mov
out
inc
dec
mov
xlat
ljmp
pop
aaa
bound
adc
mov
hlt
aad
imul
lsl
sub
fwait
in
ret
addr16
jp
push
cwtl
and
add
rclb
in
adc
fists
sub
pop
add
xchg
mov
push
into
inc
popf
sti
insb
je
test
jp
pop
jbe
stos
clc
sub
or
orl
scas
push
lock
dec
rclb
sarl
ret
or
scas
hlt
mov
sti
arpl
sub
mov
or
add
push
inc
sub
stc
insl
add
outsb
int3
daa
push
xchg
pop
mov
iret
sub
iret
in
shrb
push
repnz
xchg
pop
cmp
lahf
push
dec
push
fidivs
pop
bound
iret
jne
adc
mov
xlat
loope
or
fdivl
lds
dec
jecxz
lods
push
cmp
xor
movsb
fdivrs
and
cli
test
cmp
push
inc
outsl
adc
adc
xchg
enter
daa
add
aad
popf
sub
ficoms
ds
imul
daa
test
mov
lcall
ljmp
adc
mov
pop
and
decb
mov
repnz
cmp
mov
jns
int3
outsb
aas
outsb
out
sti
fidivl
push
pushf
xchg
andb
pop
mov
insl
mov
push
leave
in
pop
int
das
push
sub
pop
in
mov
lcall
lret
add
sbb
adc
daa
test
push
pop
orb
or
add
mov
rcrb
rorl
adc
ss
movsb
cmp
and
mull
jae
xor
cmp
repnz
pop
push
mov
adc
stos
cmc
or
xor
push
outsl
test
push
loop
mov
sahf
adc
cmp
dec
push
mov
adc
sbb
out
in
mov
in
xor
addr16
sti
pop
xchg
pop
jmp
sub
shll
pop
movsl
movsb
fwait
adc
scas
fldenv
jmp
les
dec
sahf
xchg
inc
and
cmc
cmp
add
adc
sbb
jmp
stos
sub
mov
jb
nop
cs
cmp
inc
or
add
shlb
in
adc
test
aaa
pop
call
in
fnstcw
xor
addl
jnp
push
test
dec
inc
adc
sub
icebp
cld
mov
mov
lcall
mov
subl
sbb
mov
in
mov
mov
cmpl
xor
lcall
mov
sub
lock
inc
mov
mov
jge
push
aam
ljmp
shlb
dec
mov
stos
cmpsl
add
xlat
mov
loope
shrb
rcll
and
add
test
rcrb
cmp
cltd
mov
and
xchg
cmp
dec
xchg
push
in
ljmp
push
pop
jecxz
gs
jo
adc
jo
and
sahf
shlb
lds
inc
jno
iret
mov
xor
jbe
mov
lret
dec
sbb
cmp
sbb
jg
or
xor
js
sub
add
movsl
add
test
dec
jns
mov
in
dec
cmpsb
xchg
mov
lea
pop
add
ja
inc
adc
jo
mov
out
movsb
mov
push
movsl
repnz
test
push
jne
xchg
lds
hlt
subb
sarl
jbe
hlt
fwait
pop
cmp
or
xchg
sahf
dec
sub
xchg
icebp
mov
bound
jp
jbe
and
ret
fs
sbb
inc
sbb
adc
lods
out
shll
ljmp
scas
inc
or
add
jae
aad
push
and
ret
jb
mov
scas
cs
imul
sbb
movsl
mov
sub
scas
imul
iret
js
push
ret
mov
hlt
aad
push
arpl
inc
sub
stc
or
jge
push
inc
lods
xchg
add
sub
adc
fmulp
jp
lds
pop
rol
pop
mov
mov
mov
imul
movsb
inc
or
push
xchg
jp
jbe
push
idivl
and
sbb
jmp
sahf
or
loope
insl
inc
clc
jl
loop
dec
push
push
push
push
dec
dec
xor
cmp
and
push
fsubrl
pop
adc
cmpsb
xchg
pop
and
sub
enter
daa
add
cmp
loope
and
sub
je
cmp
or
xchg
mull
dec
fwait
nop
lahf
pop
sub
adcl
add
xor
test
sbb
enter
imul
sub
ficoms
mov
fdivrl
xlat
push
outsb
mov
fcomip
shlb
aaa
push
cmpb
jl
decl
scas
and
je
int
inc
xor
cmp
or
insb
xchg
push
lcall
pop
mov
mov
sbb
sub
push
test
jnp
sub
xchg
jg
adc
mov
iret
sub
js
mulb
stos
adc
movzbl
push
in
cmp
fnsave
jno
mov
testl
or
cmp
cmc
rcrb
xor
jg
loop
sub
adc
nopl
inc
xchg
mov
aam
xor
mov
lret
cmpsb
out
addr16
pop
or
push
pop
add
sti
mov
das
gs
and
popf
push
pop
les
adc
inc
leave
sarb
xchg
push
sub
sbb
sbb
and
