sbb
add
mov
dec
pop
das
and
lea
lahf
xchg
add
push
mov
xor
xlat
jle
cmpl
fxch
aaa
sub
mov
jmp
and
cmpsl
cmpsb
fucomip
cwtl
int
mov
addl
cmpsl
push
jecxz
fwait
popa
dec
outsb
xchg
add
test
enter
addr16
mov
mov
mov
loopne
shr
xchg
jmp
xchg
pop
in
sti
shrb
fs
popf
mov
mov
sbb
xchg
clc
fildl
es
ror
xchg
pop
add
in
mov
xchg
add
mov
cmp
inc
aas
jmp
bound
in
inc
jnp,pt
lret
mov
int3
mov
inc
sbb
ds
or
or
push
repz
jge
sub
in
or
imul
mov
or
pop
dec
filds
jmp
xchg
es
mov
jns
xchg
mov
into
and
subl
sub
lcall
or
or
pop
push
cmp
push
rorb
das
movsb
inc
loope
push
sbb
cwtl
sub
pop
push
sbb
sub
inc
out
mull
and
mov
jg
mov
stos
jae
lret
inc
adc
cld
pushf
hlt
scas
test
cltd
jnp
repz
lock
lods
fimull
cmp
gs
stc
arpl
popf
xor
mov
clc
jge
rol
cld
cwtl
jecxz
adc
shlb
pop
outsb
jmp
fisubrl
or
cmp
gs
push
and
scas
xchg
imul
push
dec
insb
cmp
sbbb
mov
lea
cmp
adc
adc
orb
repz
xchg
mov
lea
ds
std
or
or
lahf
pop
aad
icebp
ret
push
mov
cmp
ja
push
add
int3
mov
or
cltd
push
add
push
not
pop
mov
repz
and
repnz
sbb
xchg
pop
or
push
rcll
in
mov
add
subl
fisubs
push
imul
push
push
loopne
mov
adc
sbbl
sub
xor
popa
xlat
jbe
out
jae
mov
or
jo
sub
mov
stc
sub
out
sub
or
stc
mov
sbb
das
scas
inc
addr16
xchg
mov
subl
pop
cmpl
dec
test
ljmp
or
pop
lret
inc
add
cmpb
or
push
jnp
mov
mov
mov
fdivrl
cmp
mov
cmp
dec
inc
adc
mov
repnz
mov
mov
adc
addb
pop
adc
xchg
mov
movq
fisubrl
out
xchg
adc
pusha
jae
in
les
jb
jl
mov
cmp
test
loop
sub
ret
shll
lcall
outsb
ret
icebp
mov
es
daa
or
xchg
rorl
xor
and
ja
xchg
cmpsl
aaa
rol
rcr
xchg
in
sbb
insb
adc
into
lcall
dec
xor
jns
outsb
ret
or
ss
sbb
sbb
and
jmp
mov
or
pusha
std
cmc
andb
mov
neg
movsl
or
sbb
jmp
push
mov
dec
adc
cli
dec
push
mov
ret
mov
adc
pop
sub
out
inc
in
add
ds
pushl
jmp
jb
lock
negl
daa
xor
mov
and
scas
leave
dec
cmp
in
roll
cld
scas
mov
out
outsl
test
sbb
aas
xchg
out
push
int
rorl
sbb
and
pop
hlt
mov
or
repz
mov
lahf
push
cmpsl
jl
bound
add
jl
and
mov
mov
pop
in
push
xchg
inc
call
fimull
adc
mov
add
lods
adc
push
add
test
mov
movsb
sbb
cmp
inc
mov
jne
cmp
push
xchg
call
mov
test
rol
push
inc
adc
std
leave
xor
dec
decb
ud0
adc
insl
mov
adc
push
mov
lea
repnz
jbe
hlt
outsb
addr16
mov
mov
mov
sbb
add
push
jg
adc
ret
out
int
fmull
test
ljmp
les
loop
pop
test
arpl
mov
loopne
jo
rclb
ja
dec
xchg
jne
xchg
xor
jae
cmpsb
mov
movsb
fs
insl
lea
mov
test
sbb
dec
add
pop
cmp
outsb
inc
lcall
dec
dec
adc
or
cs
jno
div
insb
popa
and
out
inc
cld
jo
adc
popl
inc
adc
mov
cmc
sbb
xchg
push
sbb
jnp
mov
call
movsl
fdivr
out
dec
lahf
cwtl
or
cmc
popf
data16
xchg
jg
in
mov
addr16
pop
sbb
cmpsl
fidivs
clc
xor
xchg
rolb
and
test
into
pusha
inc
push
clc
rcll
xor
hlt
mov
insl
jecxz
aas
jge
adc
lods
sbb
mov
mov
push
mov
mov
and
pop
jg
mov
arpl
push
jno
decb
in
dec
lea
xchg
sub
dec
xchg
mov
xor
out
aaa
repz
ljmp
add
or
inc
xchg
call
nop
cli
scas
mov
jnp
icebp
mov
adc
popf
push
push
dec
xchg
fldenv
xor
mov
loop
es
push
cmp
popa
arpl
popa
jno
scas
cld
iret
aaa
cmpsb
xchg
inc
mov
cmpsl
push
mov
pop
add
aam
rcll
xchg
sbb
mov
add
cmp
and
add
pop
and
pop
adc
or
sti
xlat
xlat
add
imul
icebp
out
daa
mov
ss
cld
aam
mov
shlb
jecxz
shr
loope
js
nop
xchg
movsl
mov
loop
fadds
add
inc
cmp
mov
shrl
push
xor
fwait
es
fcomps
fcoms
mov
das
out
pop
ds
lea
cmpsl
imul
xchg
lret
ja
sub
jb
push
fiaddl
outsb
xor
mov
push
sysret
mov
add
imul
dec
pop
shll
adcb
jo
lret
aam
mov
mov
pusha
shlb
xchg
fldl
das
jne
add
jo
out
add
mov
in
pop
fdivr
adc
cmp
movsb
push
imul
pop
rorb
sahf
or
loop
sbb
aas
lea
addr16
mov
mov
jle
ret
sbb
out
mov
cwtl
mov
sub
into
nop
mov
dec
es
lods
or
inc
xchg
inc
push
mov
push
lcall
mov
fwait
imul
mov
mov
pop
leave
nop
mov
pop
sbb
imul
aaa
mov
lods
mov
enter
pop
fisubrl
loope
ss
in
aad
dec
dec
imul
xchg
mov
pop
mov
test
sahf
and
mov
mov
inc
lods
jle
xchg
pop
push
xor
add
sti
lods
outsb
xor
pushf
aam
push
mov
in
arpl
push
movsb
fiaddl
out
and
sbb
iret
xor
fdivl
sub
pop
adc
add
pop
sbb
aaa
jbe
js
mov
in
pop
mov
dec
mov
pop
out
cmpsl
mov
icebp
ja
jge
int3
push
call
out
mov
mov
xor
adc
icebp
pop
lcall
cmp
mov
mov
inc
cwtl
jo
icebp
dec
mov
cwtl
pop
aam
jnp
dec
popa
mov
mov
and
out
push
shl
push
and
jg
jo
mov
movsl
pop
sbbl
stos
clc
sub
test
divps
xchg
lahf
inc
flds
div
jnp
mov
mov
test
dec
push
cmp
popf
push
rorl
push
outsb
adc
fistpll
xchg
mov
loope
loop
push
lods
push
xchg
sbb
dec
push
xor
call
fsubrl
mov
dec
mov
adc
rcrb
loopne
xchg
mov
pop
movb
in
dec
cmp
jmp
jns
loop
mov
pushf
mov
mov
sbb
psllq
sti
insb
addb
pushf
jne
stos
clc
jo
xchg
mov
adc
data16
adc
sub
mov
pop
xorl
insl
sarb
ficoml
xchg
sub
lahf
adc
jecxz
dec
lret
mov
in
sub
cwtl
loop
leave
adcb
mov
lret
stc
and
rorb
imul
mov
or
sbb
pop
ds
test
lds
andb
push
lods
mov
adc
fcomps
enter
xlat
xor
push
jp
or
negb
sub
fucomp
out
dec
push
cld
stos
inc
push
loopne
inc
pushf
mov
mov
fdivs
lcall
xchg
pop
cvtps2pd
test
cltd
in
notb
ss
pop
sahf
push
and
cmp
dec
in
cmp
cmpb
jle
or
mov
aas
mov
inc
lods
pop
aam
aas
cmp
and
pushl
fistpl
lea
data16
stos
test
lods
mov
jb
outsl
insl
mov
push
pop
adc
es
or
xchg
adc
mov
imul
pop
sub
clc
mov
dec
repnz
cmc
jbe
and
int
pop
or
shl
icebp
sbb
ja
mov
pop
dec
mov
jo
arpl
add
mov
addb
xchg
rorl
xor
or
out
cli
lret
shlb
iret
popa
mov
outsl
cmpsl
sahf
aaa
mov
out
or
mov
add
orb
divl
mov
in
cld
mov
jg
mov
stos
mov
dec
insb
sbb
ficoml
int3
cmpsb
cmp
cmc
test
mov
jne
test
or
dec
fimuls
inc
sbb
xor
or
add
add
repnz
jp
mov
repz
push
push
mov
es
sub
lcall
ret
scas
loop
stos
dec
cs
pusha
push
mov
adc
iret
push
push
jmp
dec
hlt
jae
dec
in
mov
jecxz
xchg
or
int
mov
push
nop
push
inc
sub
fucomp
cli
mov
jle
in
int3
sahf
sub
rcrl
mov
hlt
stos
in
movsl
xor
cmp
popa
xor
out
push
adc
lds
cmp
outsb
pop
mov
decl
jmp
push
adc
adc
fwait
mov
leave
mov
scas
add
cmp
fsubrl
fnsave
mov
insb
inc
and
insl
sarl
mov
repnz
cs
jge
movsl
fistpl
mov
insb
jo
movsl
cmp
mov
jmp
lock
sbb
popa
jnp
push
lock
push
scas
inc
and
sti
push
pop
jne
mov
mov
bound
cs
sub
es
sub
lcall
enter
xlat
in
outsb
aaa
dec
gs
mov
lahf
jl
adc
je
test
ja
js
jecxz
pop
neg
pmullw
inc
jp
mov
sti
test
imul
sbb
fwait
inc
dec
in
stc
xchg
jo
shll
repnz
xchg
mov
jp
jne
out
or
and
xchg
scas
int
add
cld
jo
out
rcrl
jl
aaa
jae
mov
fwait
jmp
hlt
cltd
mov
scas
jmp
fbstp
and
in
mov
out
into
fdivl
in
in
adc
mov
inc
ret
xor
popa
ss
cmpsb
lahf
mov
sti
ss
jge
mov
cmp
aad
or
mov
xor
idivb
xchg
mov
shrb
aad
negb
lret
in
lcall
mov
add
fisubl
je,pn
mov
test
or
xchg
sub
int
or
mov
cmp
icebp
dec
pop
mov
xchg
mov
std
sub
or
jmp
or
sahf
adc
je
les
lret
pop
mov
stos
inc
push
or
mov
pop
jecxz
mov
mov
lret
in
or
inc
xor
pop
add
repz
das
shrb
mov
mov
aas
int
xlat
push
dec
sbb
stc
xor
push
add
shll
mov
dec
sub
ja
sub
divb
mov
popl
inc
clc
pop
mov
jbe
sbb
mov
andl
jle
push
cs
test
call
push
jo
adc
dec
push
sahf
shlb
push
ss
xchg
test
push
sub
hlt
sub
cwtl
inc
cs
int
sti
jge
scas
fsts
lea
xchg
lahf
ja
mov
or
fdivr
bnd
out
sub
xchg
loopne
mov
lds
or
fwait
pop
inc
mov
test
sti
pop
add
add
push
add
push
push
add
push
sub
pop
outsl
into
and
mov
loopne
icebp
mov
pusha
push
lahf
jo
inc
sti
hlt
inc
pop
call
adc
cmp
add
mov
mov
jno
dec
out
mov
test
shrb
sahf
imul
mov
cltd
jbe
mov
int
cmp
inc
ljmp
cld
or
pop
mov
test
sti
cmp
cmp
mov
ja
xor
mov
inc
imul
imul
mov
jne
mov
lret
xor
ljmp
aas
lret
or
push
jmp
jo
adc
push
sbb
mov
mov
dec
mov
push
push
ss
dec
mov
imul
xchg
loop
in
push
mov
inc
dec
loop
cmpsl
xchg
pop
std
imul
sbb
push
inc
fwait
out
add
sub
popa
inc
mov
clc
fs
xor
jecxz
data16
sbb
mov
xor
and
mov
lret
fdivp
sbbb
rcrb
mov
int3
inc
dec
movhps
ret
or
pop
push
mov
aam
shll
fstpl
push
mov
int3
imul
jecxz
faddl
ret
inc
jae
cmpsb
fbld
popf
push
or
xor
push
insl
sbb
push
aaa
fucomip
cmp
jae
and
jp
popf
inc
ret
ja
mov
xchg
mov
cmpsl
fst
scas
pop
xor
lds
inc
in
cmp
scas
dec
lock
jbe
mov
xchg
pop
addr16
js
out
mov
arpl
sbb
in
lds
cwtl
push
and
mov
rcrl
push
leave
xchg
repnz
mov
sub
add
cmp
push
in
pop
daa
jg
xchg
mov
stc
loopne
enter
mov
std
mov
push
add
shr
data16
rclb
lcall
pop
push
loopne
xchg
cmp
ds
arpl
or
add
mov
or
mov
test
movsb
jno
xchg
mov
les
or
pushf
adc
mov
mov
fsub
jl
and
nop
inc
nop
sbb
into
mov
jne
adc
pop
je
sbb
jecxz
hlt
imul
arpl
push
cmpsb
js
jo
mov
imulb
push
add
and
addr16
or
jge
mov
inc
loopne
outsb
clc
gs
pop
xchg
hlt
aam
jno
loop
call
mov
cli
xor
sbb
leave
inc
xchg
dec
xor
ja
add
call
lods
mov
fdivr
out
sub
or
mulb
test
pop
dec
xchg
push
add
jae
xor
pop
enter
add
cli
int
imul
shl
insb
test
jmp
sub
call
scas
cmc
or
mov
sbb
shll
mov
cmp
pop
ljmp
mov
in
dec
imul
or
adc
xor
mov
sbb
addl
aam
sahf
ret
and
out
es
daa
xlat
sub
sub
adc
push
outsb
push
nop
xor
ds
fsts
into
jge
imul
jbe
mov
jo
inc
xor
cmp
pop
push
sbb
mov
inc
sub
outsb
mov
push
or
pop
dec
jl
xchg
adc
movsb
imul
scas
cmp
icebp
or
call
jno
adc
mov
sbb
sub
cmp
sbb
xchg
pop
push
lcall
test
or
lcall
mov
mov
sub
repnz
fistpl
push
and
adcl
jo
ficoms
ret
jnp
stc
dec
sbb
mov
test
push
fisttpll
xor
sub
dec
sbb
movsl
pushf
inc
fadd
out
add
mov
dec
xor
out
sub
in
mov
and
decb
jb
inc
fadds
test
fildl
lds
loop
dec
xchg
mov
mov
shll
fidivl
lcall
sub
inc
xchg
or
daa
enter
dec
xor
adc
test
in
in
jle
lods
jecxz
adc
mov
mov
shll
fwait
xchg
fwait
outsb
jnp
adc
out
psllw
cmc
mov
push
in
arpl
dec
xorb
int3
sub
lea
dec
mov
movsb
xchg
mov
mov
fists
shlb
xchg
mov
ret
pop
sbb
mov
bound
xor
and
jle
jo
pop
loopne
cwtl
push
movsl
movhlps
movsl
mov
cwtl
dec
sbb
sub
jmp
cmp
adc
shll
in
mov
and
sub
push
jle
or
lcall
rep
sub
dec
cmp
std
out
inc
pop
imul
incb
pop
shll
movsl
and
cwtl
mov
sbb
fnstenv
imul
or
or
mul
sbb
xchg
jns
sub
or
mov
xchg
pop
pushw
push
loop
clc
pop
aam
aaa
cmp
pop
inc
and
and
insl
add
nop
adc
and
dec
stos
fidivrs
arpl
mov
adc
jg
test
test
dec
adc
mov
sub
jbe
bound
scas
adc
insb
arpl
int3
mov
adc
nop
mov
mov
cld
push
adc
sti
movsl
pop
in
xchg
sub
mov
xor
insl
fwait
add
pop
lcall
out
inc
in
xchg
std
or
clc
fiadds
pop
out
cltd
idiv
pop
ds
flds
outsl
jno
mov
roll
push
sahf
fisttps
inc
add
mov
inc
sub
cmp
fwait
in
nop
add
mov
adc
stos
pop
mov
mov
sbb
std
and
mov
or
or
inc
std
int
or
sahf
cmp
popa
sarl
loopne
js
jae
lret
sub
cmpsl
adc
aas
ret
jecxz
and
popa
and
movsl
and
sbb
push
out
ror
jb
cmp
loop
mov
test
dec
xor
or
or
loop
icebp
mov
inc
sbbw
mov
fwait
gs
repnz
repz
in
rol
jl
add
xchg
into
test
jmp
aam
mov
lahf
pop
fcoms
aam
in
or
pushf
jbe
dec
pop
or
mov
sub
roll
mov
mov
cmp
xchg
stos
inc
popl
lret
push
xchg
rorl
add
dec
pop
or
mov
clc
nop
lock
repz
loopne
rcll
add
ror
cmc
loopne
mov
or
jmp
sbb
loope
sti
adc
scas
mov
bound
ficomps
xlat
jno
fbld
sub
and
rclb
or
sbb
mov
fdivl
mov
cmc
push
rcl
cltd
stc
test
or
inc
scas
and
jno
mov
insb
aaa
rcrb
mov
push
dec
insb
mov
sub
mov
das
int
mov
jecxz
push
and
aaa
in
push
test
mov
inc
sahf
nop
test
dec
std
stc
aad
mov
inc
int
gs
in
addr16
movsl
subb
or
and
inc
stos
cmp
imul
mov
push
roll
sbb
mov
push
inc
sub
dec
stc
lret
and
push
stos
xchg
push
out
jmp
push
in
push
stos
das
arpl
mov
jae
dec
test
adc
xor
sub
shl
adc
pop
lcall
stc
sbb
mov
and
pop
mul
xlat
jg
pop
sub
cmp
pop
mov
pop
inc
imul
mov
dec
xor
sbb
dec
jo
mov
jb
cmp
repz
inc
pop
mov
pop
test
fisttps
mov
cmp
mov
xchg
or
pop
sub
mov
movl
nop
rcrl
sahf
test
or
xchg
push
aad
stos
mov
jne
fcomip
pop
in
das
aad
loope
rcrb
leave
and
jb
insb
das
stc
mov
jbe
nop
rorb
xchg
in
xchg
push
icebp
xor
cmp
or
pop
xchg
subb
sarb
or
add
jl
pop
scas
lods
mov
xchg
fisubrs
dec
adc
mov
int3
xlat
out
inc
mov
xchg
stc
sahf
push
push
jp
inc
rol
jno
inc
arpl
test
and
popf
nop
ret
pop
jnp
test
cmp
int
sub
mov
rcr
jge
xchg
sti
xor
sub
sub
fmulp
sub
fildl
cld
add
add
fstpt
push
bound
lahf
andb
stos
jb
das
xor
jle
inc
test
mov
add
aad
xchg
jns
ret
push
nop
mov
jae
cmpsl
lods
gs
iret
sub
cs
das
or
sbb
in
xchg
jg
js
mov
cmp
pop
in
adc
cwtl
les
fcoml
sbb
xorl
mov
xchg
mov
push
inc
iret
int3
pop
xor
test
leave
mov
mov
testl
mov
stos
je
js
jb
sbb
xor
and
cmp
mov
add
inc
rcrl
lock
mov
add
scas
push
mov
fdivrp
in
mov
in
jg
dec
ja
jle
fsubr
inc
xchg
leave
hlt
imul
inc
add
add
nop
adc
mulb
dec
jecxz
loope
enter
push
sti
jns
xor
imul
mov
fcmovu
mulb
xchg
adc
rclb
xorl
add
cmp
pusha
inc
outsb
repz
outsb
les
out
jbe
das
sbb
push
mov
mov
mov
fsubl
sbb
pop
insl
rorl
lret
mov
inc
push
out
ja
dec
xchg
inc
insb
sbb
mov
pop
dec
dec
bound
cmp
xchg
sahf
test
and
inc
pop
notb
cmp
dec
mov
lcall
fdivrs
arpl
subl
iret
sbb
pusha
mov
push
ds
xchg
pop
dec
inc
ffreep
mov
cli
into
pop
bound
verw
pop
fistl
cltd
cmp
rolb
add
imul
add
aaa
xchg
push
or
loopne
xchg
out
push
jmp
iret
pushf
xchg
jb
push
test
icebp
test
xchg
jno
repz
inc
xchg
mov
and
scas
loop
mov
gs
fs
jge
aam
or
dec
addb
mov
inc
js
adcb
pop
int
pushl
push
or
and
mov
int
inc
mov
sub
or
inc
xchg
adc
dec
loop
or
in
push
jp
or
dec
in
sbb
inc
imul
push
cwtl
imulb
bswap
sub
jle
icebp
add
inc
cmp
rorb
jae
or
imul
pop
mov
test
inc
scas
mov
or
in
jl
cltd
sahf
fdivs
mov
jnp
cmp
nop
fstps
pop
aam
iret
das
or
ret
stos
inc
ljmp
xchg
inc
and
lret
in
dec
ficomps
test
sbbl
add
nop
je
xchg
dec
lea
fsub
test
loope
adc
push
lock
loopne
jmp
daa
mov
pop
and
cld
mov
sbb
dec
sub
push
cmp
sub
push
pop
int
xchg
pop
arpl
adc
repnz
icebp
outsb
jbe
push
push
jno
xor
dec
pushf
cmp
syscall
push
lds
xor
aam
xchg
mov
cmp
std
push
add
or
cmp
addl
int
mov
mov
daa
jmp
in
xchg
push
push
mov
mov
xchg
pop
cmp
shlb
push
int3
inc
or
add
cmpsb
pusha
push
pop
std
mov
push
or
adc
xorb
and
and
add
lahf
and
jno
outsl
cmp
jecxz
popf
movsl
hlt
insl
mov
gs
jns,pt
rcrb
andl
add
add
mov
mov
cmpsl
xchg
mov
pop
and
lods
push
in
je
push
mov
mov
pop
xchg
arpl
xchg
push
sbb
stc
int3
and
xor
push
shll
mov
jmp
mov
or
lea
add
cwtl
sub
enter
sbb
cmc
adc
nop
mov
addr16
add
and
xchg
aaa
out
jge
test
aad
in
stc
mov
dec
cmp
push
adc
aaa
adc
fs
or
les
mov
sbb
pushf
jp
xchg
sbb
pop
mov
dec
ret
sub
out
fidivl
repnz
inc
xor
loopne
inc
mov
idivb
mov
filds
clc
mov
adcb
mov
xchg
push
cmp
add
test
mov
mov
insl
outsl
out
insb
or
cmc
mov
jnp
out
loopne
out
out
icebp
mov
cmp
jns
mov
les
gs
mov
xor
in
add
cmp
cmp
mov
push
sar
cmc
test
in
stc
lahf
pop
scas
repnz
nop
cltd
test
movsb
gs
push
test
mov
mov
or
aam
cwtl
push
iret
jo
push
or
imul
pop
mov
mov
inc
pop
hlt
dec
xchg
ja
sub
popl
dec
imul
stc
sbb
push
aaa
add
lcall
adc
hlt
jo
or
push
adc
or
scas
sub
outsb
loopne
pop
inc
jl
inc
and
into
push
jecxz
rorl
ret
xor
and
xchg
adc
add
add
mov
addl
jo
adc
pusha
cmp
push
push
cmpsl
fbld
push
inc
mov
in
imul
sbb
xchg
add
fisubs
shl
sbb
xchg
loope
loope,pn
cmp
andl
add
xor
inc
mov
ss
add
outsb
cmp
daa
mov
mov
gs
or
mov
or
push
mov
mov
icebp
inc
sbb
clc
roll
sub
mov
inc
popa
dec
andl
imul
mov
jl
movsb
cmpsb
sahf
jne
scas
xor
aad
fs
in
cmp
ja
xchg
add
push
mov
int
out
popa
icebp
sub
cmc
pop
mov
sbb
aad
pop
rcl
pusha
pop
jl
fucomi
mov
add
movsb
add
cmp
and
sbb
add
cmpsb
std
xor
sbb
jnp
pop
cmp
jbe
jo
mov
pop
imul
xchg
pop
mov
lcall
dec
pop
cmp
pop
inc
ror
push
cmc
sbb
push
stc
push
pop
cmp
out
scas
adc
add
mov
xchg
xchg
mov
pop
push
add
dec
add
ds
pop
lock
outsb
cmp
lods
pop
sbb
mov
cmp
or
or
dec
jge
fs
out
sub
aas
mov
repz
mov
xchg
clc
rorl
cltd
in
cmpsl
dec
or
sub
cltd
cmpsl
scas
pushf
in
adcl
rcrb
xor
or
in
imul
data16
shlb
push
fucomip
aas
sbb
out
call
out
por
lods
pshufw
insb
push
shrb
mov
imul
inc
pusha
sub
mov
jge
push
imul
xor
jne
pop
add
sbb
sub
fldt
jle
clc
or
cvtpi2ps
pop
fwait
idiv
in
jg
lret
sub
fs
lahf
fisubrl
stos
mov
fldt
add
out
mov
add
push
out
mov
dec
push
xchg
repz
xchg
test
inc
jnp
lret
mov
mov
cmp
xchg
mov
adc
bound
js
lods
loope
inc
cwtl
cmp
sub
lds
bound
mov
scas
lcall
mov
mov
popa
cmpsb
shll
inc
xchg
out
clc
hlt
push
sbb
lock
mov
mov
les
js
call
cmpsl
xchg
sub
orl
movsl
xor
loop
aam
fiaddl
fidivrs
lahf
or
mov
xchg
mov
jecxz
scas
das
adc
fs
sub
iret
push
popa
mov
dec
xchg
dec
and
push
push
aaa
fcoms
rcrb
jb
adc
hlt
pop
jl
mov
sbb
cmp
pop
xor
lret
dec
fs
lock
ret
repnz
push
add
inc
sub
xchg
subb
aad
bound
and
inc
in
int3
in
popf
cmp
mov
dec
dec
call
mov
jae
fstpt
dec
test
jns
scas
xor
pop
add
cs
mov
xor
push
repz
std
adc
mov
imul
push
ficomps
inc
or
je
aaa
std
mov
jnp
add
fldl
aas
pop
les
cs
push
dec
insb
push
jb
jno
out
mov
lock
push
sbbl
xor
mov
dec
push
add
add
mov
inc
pop
sub
lock
push
lret
mov
icebp
and
gs
sub
cmp
inc
nop
mov
push
and
mov
xor
cltd
add
cmpsb
aad
inc
mov
nop
aaa
divb
mov
jnp
insl
sarl
jecxz
sbb
std
mov
stos
adc
push
cmp
mov
cltd
test
sub
add
mov
adc
mov
mov
addr16
data16
mov
arpl
add
aaa
add
arpl
imul
fcompl
lods
push
ret
xor
fs
scas
xchg
out
jmp
inc
sub
dec
lcall
cltd
and
aad
and
clc
je
dec
test
cmc
jnp
in
mov
stc
addb
mov
out
ss
push
jecxz
in
mov
int
sti
adc
mov
out
xchg
ret
sti
stos
clc
sbb
out
fstp
push
lock
lock
sbb
lret
push
pop
pop
mov
adc
popf
gs
clc
jns,pn
fadds
lods
imul
sub
pop
cwtl
ja
sub
inc
mov
inc
mov
aaa
sub
loope
sub
ret
mov
repz
jmp
cld
sbb
inc
jb
mov
imul
jne
lock
test
cli
lret
xchg
filds
xchg
stos
adc
ror
mov
cwtl
leave
pop
ja
mov
add
mov
mov
mov
scas
cmp
icebp
jnp
jge
cmp
imul
leave
jne
addr16
or
xchg
in
in
cmc
dec
xor
adc
push
add
test
faddl
pushf
xor
aam
movsb
orb
or
add
test
xor
inc
adc
mov
cmp
ds
fistl
adc
das
sbb
dec
imul
jmp
cmpsb
sub
pop
sbb
push
push
inc
orb
in
push
out
pop
inc
mov
jmp
lds
cwtl
mov
loope
inc
cmp
dec
dec
sub
mov
sub
push
push
imul
rcl
cltd
test
fsubl
nop
dec
in
mov
stos
inc
outsb
lods
out
push
jecxz
xchg
out
pop
mov
fwait
sarl
imul
inc
pop
add
dec
push
mov
xchg
mov
push
mull
pushf
cmp
loope
pop
call
addr16
pop
pop
adc
push
mov
adc
push
fstpl
lret
ret
arpl
cmp
dec
xor
sub
mov
sarb
pop
aam
int
push
rcrl
push
js
loope
jp
outsl
add
xor
fldl
fnstsw
push
jns
movsb
in
jp
clc
adc
pop
cli
mov
pop
clc
setg
nop
out
inc
stos
sbb
cmpsb
and
cltd
popf
add
pop
sbb
push
lods
mov
dec
xchg
mov
pop
idivb
sub
jne
pop
sub
mov
push
jle
inc
outsb
inc
cmp
out
mov
mov
sbb
sbb
pop
lahf
movsl
out
insl
mov
dec
int3
add
jge
dec
xchg
loop
cltd
xchg
mov
ffree
dec
sbb
mov
push
fsub
mulb
mov
mov
mov
lock
jno
jecxz
or
int
or
mov
add
test
sub
addr16
cmpsl
sub
int3
fnsave
pop
popf
lcall
xchg
test
clc
pop
cmp
scas
mov
enter
push
mov
jnp
mov
push
push
fs
pop
xor
enter
cmp
and
cmc
jg
or
lock
sbb
push
pusha
faddp
imul
jb
push
fsub
clc
sbb
std
cmp
cld
dec
nop
mov
cwtl
dec
ljmp
lds
push
hlt
scas
add
mov
xlat
mov
aam
mov
jo
out
mov
inc
push
enter
add
inc
push
sub
mov
mov
mov
das
mov
pmulhuw
out
test
jae
into
subl
or
lret
ja
or
fldcw
sbb
cs
insl
add
jb
mov
stos
sub
and
lock
sbb
xor
outsb
mov
out
test
push
scas
leave
and
shl
sub
out
sub
mov
xor
mov
mov
adc
stos
push
das
outsb
or
insl
scas
pop
ja
aad
in
fcompl
lahf
int3
and
push
divl
jmp
lods
fxch
or
outsl
mov
stos
sbb
or
add
mov
push
nop
enter
addl
jnp
mov
lret
stc
cmpsb
jmp
mov
dec
decl
sub
or
dec
testl
adc
addr16
mov
int
jmp
cltd
ret
mov
shll
imul
es
push
cmpsl
add
inc
jl
movsb
test
ja
pop
iret
in
mov
enter
andl
cltd
xchg
adc
or
rcrb
mov
hlt
mov
jge
push
inc
mov
pop
add
mov
divl
push
pop
outsl
jg
bound
jne
out
into
rclb
test
xor
js
loopne
push
jne
outsl
ljmp
pop
rorb
and
les
add
imul
mov
push
or
push
pop
call
lret
and
push
ret
push
divl
mov
les
inc
mov
lods
lock
mov
sti
gs
cmpsb
xlat
jbe
imulb
jno
dec
dec
imul
dec
fisubs
stc
and
fnstenv
xor
pop
insb
ds
push
pop
movsl
movsb
rcrb
test
push
scas
jb
ss
cmc
and
xlat
sbb
mov
outsl
repz
fisttps
inc
cmc
in
mov
lahf
mov
aam
push
loope
push
gs
add
mov
pop
es
xlat
jbe
movsl
outsl
sbb
outsb
negl
jbe
mov
sub
lds
cmp
orb
push
xorb
jno
std
outsb
sub
into
add
fsubr
cmp
scas
sub
push
xchg
int
orl
mov
mov
int
lahf
push
dec
adc
imul
in
outsl
imul
loop
scas
dec
cmpsl
mov
mov
data16
push
and
pop
xchg
cld
mov
in
adc
cmp
sahf
imul
in
or
xchg
cmpsb
mov
mov
xchg
or
and
in
filds
mov
add
mov
xchg
pushf
cmp
lcall
xor
jo
arpl
lods
dec
filds
mov
ds
inc
loopne
mov
dec
and
mov
xchg
jecxz
jnp
stos
rcrb
mov
xchg
dec
dec
mov
xchg
xchg
mov
sbb
enter
pop
stc
xor
test
xchg
hlt
lock
into
push
ret
in
push
loope
cmp
ror
rol
int
in
inc
mov
push
and
or
and
scas
shrb
repz
xchg
test
sbb
mov
mov
mov
mov
ret
cmpsb
xchg
fistl
add
adc
movsl
sub
dec
or
pop
or
mov
int
es
lds
mov
add
lret
adc
jo
test
mov
mov
xchg
add
aad
daa
lods
mov
inc
js
into
fldcw
add
fstpl
movsl
sub
ret
das
push
or
cmpsl
mov
pusha
stos
inc
daa
push
mov
fs
mov
dec
dec
adc
pop
xlat
cwtl
xchg
xor
loop
xchg
pop
push
xchg
fdivs
mov
scas
sbb
repz
mov
sub
push
sbb
adcb
pop
cltd
packssdw
pop
loop
mov
mov
push
or
or
dec
mov
inc
pop
dec
or
sub
lcall
movl
and
push
loop
loopne
jl
inc
inc
and
jecxz
fmuls
test
jecxz
cli
mov
packssdw
mov
test
fstpt
jo
mov
fcoms
notl
mov
icebp
xchg
inc
mov
jo
mov
push
jle
or
inc
subl
and
movaps
and
test
pop
add
fwait
in
adc
mov
lret
mov
cwtl
pop
or
mov
xor
leave
xchg
pop
or
ljmp
mov
mov
jmp
push
fucom
mov
jmp
test
out
hlt
in
imul
or
mov
mov
mov
into
mov
inc
imul
jbe
movsl
inc
lahf
pop
fisttpl
dec
jmp
rolb
add
movsb
dec
sub
shr
push
sub
pop
cltd
push
imul
iret
sbb
insb
jns
popf
sbb
mov
aad
adc
push
pop
jmp
xchg
in
cmc
jo
movb
dec
inc
jl
popf
pop
fidivrs
mov
mov
adc
xor
ret
lds
mov
addr16
lret
loope
mov
cli
mov
bound
push
in
jo
cld
testb
or
add
test
xchg
pushf
dec
pop
iret
pushf
pop
jnp
mov
repz
bound
sbbb
sbb
or
outsl
or
push
mov
out
les
loope
test
inc
xchg
stos
or
cmp
mov
pushf
adcb
xchg
cwtl
add
outsb
mov
dec
dec
fdivrs
mov
jl
std
rorb
add
or
inc
pop
add
xchg
xor
insb
scas
sub
stos
adc
bound
insb
mov
pop
mov
jae
ljmp
xor
xchg
call
cmp
mov
insb
mov
es
xlat
and
shl
lret
cmp
mov
xchg
arpl
cmp
mov
popa
inc
mov
in
sub
fcompl
dec
cmp
xor
mov
into
repnz
xor
fadd
and
sbb
xchg
pushf
mov
mov
cmp
or
lret
xchg
jecxz
aad
pop
fsubs
sub
cli
pop
mov
pop
mov
push
push
mov
lods
stos
test
pop
jl
mov
lods
push
aam
or
popa
fsts
jg
cld
xchg
adcl
jae
sahf
pop
xchg
dec
adc
imul
jle
jae
or
sbb
int
mov
sti
adc
xchg
adc
fwait
cmpsb
sub
lods
inc
out
and
insl
cmpb
jmp
bound
loopne
mov
pop
sbb
lods
jb
outsl
xchg
push
hlt
jnp
push
repz
out
adc
aam
mov
jnp
dec
inc
dec
sti
fnstsw
pushf
xchg
out
ret
lahf
scas
cmp
ja
push
mov
stos
outsb
inc
or
mov
xchg
insb
add
ss
xchg
loope
stc
dec
lea
push
mov
loopne
and
insl
rclb
push
pop
adc
cmp
fimull
aam
in
mov
mov
sbb
or
inc
rclb
adc
mov
lods
enter
push
mov
rclb
pop
mov
jnp
arpl
std
repnz
aas
cmc
lahf
jmp
fstpl
cld
sbb
in
pusha
out
js
mov
ljmp
adc
mov
adc
push
call
cmp
sti
mov
pop
jno
mov
pop
daa
pop
add
add
negl
cmp
lahf
ss
or
into
or
rorl
adc
inc
jg
ret
sub
jno
adc
cmp
pop
adc
ss
lods
inc
pop
aaa
cmp
sub
cmp
rcll
fidivrl
or
stos
cld
dec
or
ds
pop
sub
rorb
xchg
inc
nop
jbe
stos
mov
movsl
dec
stc
cmp
mov
dec
jo
cmp
xor
leave
lahf
test
fsubr
mov
and
jnp
xor
xchg
add
jp
lock
cmp
xchg
fbstp
shlb
sub
or
imull
xchg
adc
and
or
lock
add
dec
sbb
pop
xor
lret
pmovmskb
push
ds
mov
mov
jl
sbb
jae
mov
loope
push
fucomi
add
pop
ds
cmc
out
leave
lea
push
out
sahf
and
mov
inc
cs
fildl
mov
push
mov
sbb
push
shl
cmpsl
xchg
test
mov
ss
fisubl
mov
cmp
je
push
inc
cwtl
leave
sbb
sar
dec
es
fimull
ds
dec
insb
mov
inc
sub
adc
xor
int
jge
xlat
cltd
pop
mov
pop
jns
shlb
ret
push
inc
cs
ss
lcall
add
scas
aad
aas
push
or
xchg
sub
push
adc
or
aad
mov
mov
adc
and
xchg
mov
or
mov
fistl
aam
xor
jl
xlat
stc
fists
dec
call
adc
mov
std
jp
and
mov
dec
sti
jne
fwait
dec
gs
sub
stos
lahf
out
ss
xor
pop
mov
pop
insl
outsb
fnstenv
rorb
add
mov
enter
mov
push
repz
add
iret
pop
imul
dec
dec
pop
aaa
sub
js
arpl
pop
lods
inc
sbb
or
scas
cld
jb
js
lret
and
notl
popa
popa
dec
cmp
test
jl
fists
push
push
mov
js
cwtl
fisubrs
xchg
cs
cwtl
mov
and
adc
mov
pop
in
add
rorl
popf
ss
xchg
cld
dec
popl
fxch
dec
cmp
bound
sti
mov
jae
adc
mov
push
in
cmp
xor
inc
iret
pop
inc
jb
dec
mov
pop
rorb
loope
pop
mov
mov
push
pop
cltd
fsubs
sub
mov
jno
mov
int
pushw
jp
lret
fs
shr
cmpl
jnp
cmp
and
pop
idiv
inc
lret
leave
push
xlat
es
mov
push
jl
pop
scas
dec
adc
dec
sub
and
aam
sub
addr16
loope
xlat
loopne
mulb
lea
gs
rcrl
sbb
jecxz
jbe
cmc
mov
mov
stos
push
ds
push
or
out
push
lock
mov
inc
pop
gs
shll
adc
stos
xor
divb
je
jge
aam
dec
push
xchg
push
xor
decl
loop
jne
int3
ja
push
cmpsl
test
insb
cmc
and
test
inc
sti
sbb
mov
aad
outsb
or
cld
jno
ret
push
jnp
and
into
dec
int
add
insb
jb
xlat
scas
lock
add
std
stos
cwtl
cmpsb
andl
jb
stc
or
mov
pop
ljmp
xchg
cli
mov
mov
shlb
fs
in
inc
or
cmp
xchg
jns
adc
xchg
push
in
xchg
mov
push
jge
lods
dec
mov
push
ret
adc
lret
sarb
xchg
push
push
ljmp
cmp
jl
movsb
pop
rcrl
lea
aaa
pusha
ret
sbb
sub
stc
inc
mov
inc
pop
mov
mov
add
adc
adc
xor
adc
out
out
fiadds
xor
cmpl
and
lret
fiadds
test
mov
mov
jne
decb
inc
hlt
sub
imul
clc
and
ss
loopne
lock
enter
push
sub
xchg
insb
scas
jb
gs
sbb
cmp
xor
add
idivl
adc
jmp
lret
xchg
pop
enter
xor
fcomps
addl
imull
shlb
fisttpl
push
out
test
inc
dec
jle
dec
mov
sti
repnz
insl
mov
add
push
mov
pop
outsl
push
add
cltd
mov
jae
or
adcl
push
pop
fidivl
jg
dec
inc
pop
mov
add
inc
fnstcw
fldl
push
sahf
dec
mov
or
into
sbb
ret
xchg
fwait
je
test
popa
aam
or
das
sbb
rorl
xchg
das
test
cltd
bound
bound
jbe
push
les
aad
or
fbld
pop
mov
push
sub
inc
inc
pop
fldt
adc
adc
int
pop
sbb
enter
inc
fimuls
loop
ret
imul
aaa
aam
sbb
lea
rcr
add
sbb
rcrl
or
cs
ljmp
jl
cmpb
clc
inc
sub
sub
push
or
or
mov
push
mov
or
shrb
in
mov
push
lea
sub
cmpsl
sti
push
cltd
shlb
jmp
mov
cltd
pushf
xorl
arpl
stos
pop
mov
dec
fdivl
sub
or
cmovbe
dec
fs
mov
or
fisubrs
repz
mov
jmp
add
sub
cwtl
inc
test
arpl
xor
lea
push
cwtl
cs
sub
test
sbb
out
rclb
adc
ret
shll
cmp
pop
or
stc
je
add
ret
sub
arpl
dec
push
movsl
out
call
add
clc
lret
in
int3
push
sbb
cltd
mov
sbb
subb
xchg
dec
fxch
lods
inc
or
jp,pt
js
in
dec
cmp
add
xlat
or
shlb
fsubrl
adc
imul
in
test
pop
and
fnstcw
pusha
and
shr
adc
push
xchg
jae
movsb
sarl
xor
xchg
and
mov
push
add
add
cmpsb
test
jno
mov
cmp
popf
shl
loopne
jmp
std
sub
push
cmp
mov
push
adc
ja
test
add
adc
mov
aad
in
adc
push
mov
outsl
adc
fmuls
push
sbb
add
cwtl
cwtl
mov
xor
cwtl
or
movsl
pop
cwtl
loop
cs
sahf
ficoml
sbb
mov
rclb
pop
sbb
xchg
mov
daa
mov
mov
in
sbb
ret
jl
mov
aaa
add
sbb
mov
stos
mov
pop
pop
mov
push
pop
hlt
adc
sbb
movsb
push
test
rcl
sbb
push
xlat
jl
mov
dec
jnp
pop
call
mov
push
pop
inc
xchg
nop
xchg
or
int
notb
jo
cltd
fcmovbe
lods
inc
repz
fwait
inc
mov
pop
mov
dec
pop
arpl
outsl
sub
shrb
cld
cmp
mov
test
shl
fistpl
pop
call
gs
jmp
sub
mov
adc
pop
mov
test
or
jecxz
and
testl
bound
adc
cmp
push
dec
and
jmp
inc
inc
sbb
aad
jecxz
out
mov
jge
loop
pcmpeqd
or
and
jecxz
xor
pop
nop
sub
fwait
aad
dec
mov
jge
inc
xchg
aam
stc
xadd
testl
push
pop
mov
and
adc
ret
or
in
xor
cld
lods
ret
into
sub
or
je
pop
daa
int3
lcall
dec
js
jmp
pop
pushf
jecxz
jo
iret
fsubs
mov
inc
fists
aad
inc
xchg
sbb
sub
cmp
out
popa
xchg
jns
adcl
lret
imul
xchg
and
xlat
fcom
je
mov
or
addr16
movsb
mov
scas
rorb
jle
cs
fs
push
jl
fisttps
ja
test
stos
js
pop
xchg
aas
out
sbb
xchg
pop
lea
aam
mov
insb
xor
fnstsw
mov
mov
xchg
xchg
addb
and
mov
out
imul
xchg
xchg
ret
hlt
loopne
dec
push
jae
inc
jnp
imul
mov
outsl
repnz
jbe
out
jns
cmc
dec
inc
mov
icebp
aas
out
arpl
xchg
inc
rclb
pop
clc
lock
xor
cltd
cld
in
and
cmp
aas
nop
fwait
sbb
bound
data16
pop
enter
js
mov
les
sti
mov
adc
push
jle
xor
adc
cmpsl
out
jns
inc
lds
adc
push
xchg
test
out
xchg
inc
testb
lea
mov
xor
xor
movsl
movw
repz
call
clc
cld
jg
stc
cs
stos
add
xor
or
insb
xor
add
mov
mov
add
popa
lods
mov
xchg
sbb
sub
sbb
add
or
loope
test
sbb
xor
out
mov
data16
and
xor
faddl
ret
cmp
jecxz
mov
sub
shll
inc
or
add
xorl
dec
pushf
xchg
daa
adc
xchg
js
add
and
or
push
pusha
jno
mov
mov
jmp
xchg
push
cmpsb
fs
cmpsb
pop
insb
pop
fchs
mov
ja
mov
jle
mov
pushl
inc
daa
pop
mov
jo
cmp
ret
test
mov
or
sub
add
adc
lock
pushf
nop
pop
cmp
jge
mov
and
test
nop
fildll
cmp
push
xor
xor
int3
lret
xor
aas
lods
lahf
aas
stc
adc
stc
ds
ds
insl
cltd
push
call
pop
xchg
addr16
in
xchg
xchg
push
xchg
dec
out
outsb
adc
xor
mov
pop
in
popf
and
cmc
dec
mov
adc
jg
sbb
and
jo
xchg
cmp
and
push
icebp
inc
mov
lods
mov
ss
nop
mov
sarl
sbb
push
push
mov
jp
pop
lret
fstpl
xor
test
js
adc
test
cmp
mov
stc
mov
lds
push
xor
mov
test
jbe
adc
loopne
subb
inc
push
leave
jno
add
inc
mov
cmp
xchg
test
jns
test
inc
sub
sarb
rcr
sahf
pop
addr16
cmp
xchg
lret
jle
jno
xchg
loope
nop
pop
inc
sbb
into
loop
dec
mull
arpl
jb
mov
xor
std
in
mov
pop
or
inc
jnp
jg
xchg
or
jecxz
aam
xor
push
add
cmp
fldcw
je
cwtl
and
outsb
in
dec
sahf
aas
movsb
aad
xchg
fldcw
add
cltd
and
out
clc
mov
jns
stos
fsubrs
dec
cmp
add
call
cmpsb
push
imul
mov
fs
call
xlat
sbb
pop
xor
dec
pop
les
lods
cmp
repnz
push
sub
cmovnp
inc
add
sbbl
nop
mov
mov
inc
mov
mov
fcomip
cmp
and
sbb
es
add
lret
shll
push
out
xor
mov
sbb
rclb
add
js
dec
fs
adc
outsl
inc
sub
cwtl
and
movsb
mov
sar
pushf
inc
mov
adc
cltd
xchg
test
daa
lahf
mov
cmp
fisttpl
pop
js
repz
fidivl
or
inc
outsb
sub
out
or
outsb
dec
mov
mov
leavew
fcomi
push
inc
jo
xor
sbb
pop
mov
push
or
or
sbb
js
aas
into
pop
insb
adc
xlat
jbe
icebp
mov
dec
jmp
aam
call
ds
shrb
lock
fcoms
fnsave
and
pushf
fisubs
and
ljmp
or
pop
cwtl
cmp
in
pop
dec
jno
mov
fadds
ja
popf
jae
push
xor
cmpsb
xchg
dec
push
sub
mov
sub
popf
jg
pusha
push
pop
data16
xchg
and
xor
inc
jmp
and
xchg
and
and
gs
mov
test
or
fdivrp
lea
xchg
jmp
call
mov
rolb
cmp
add
cld
ret
out
jg
orl
lods
js
add
iret
inc
mov
sti
and
outsl
ret
cmp
or
xorl
dec
ljmp
cli
aas
adc
sti
dec
arpl
sbb
pusha
mov
inc
inc
mov
xor
push
xor
aad
sbb
pop
inc
dec
xchg
jbe
mov
out
pop
insl
sti
js
pop
arpl
xor
in
nop
xor
stos
sub
jb
and
push
push
xchg
dec
outsl
cmpsb
insb
andb
mov
pop
imul
mov
mov
mov
shl
es
add
add
jecxz
sub
pop
pop
cmp
arpl
sahf
dec
dec
sub
mov
sti
and
or
and
icebp
jo
inc
popa
add
mov
xchg
and
adcl
and
cmpsb
ja
mov
dec
xor
push
xor
pop
movsb
sahf
call
mov
popf
add
fcomp
aas
popf
mov
sub
gs
in
leave
jb
or
rorb
dec
subl
dec
mov
idivl
in
fxch
push
std
mov
mov
inc
cmp
rcr
mov
mov
lret
fs
xor
out
push
mov
jns
mov
mov
pop
sub
jg
pusha
pop
and
mov
gs
mov
dec
jnp
mov
test
mov
scas
out
cli
loope
and
xchg
lods
dec
dec
out
data16
mov
jle
mov
stc
jp
mov
movsl
flds
insl
call
repz
std
fisubs
adc
addr16
loope
addr16
jmp
push
fimuls
cmp
lock
sbbl
cltd
push
lahf
or
mov
xor
repz
aam
enter
fildll
aaa
pop
push
mov
leave
mov
cmpsb
mov
not
mov
pop
arpl
int3
mov
jo
push
arpl
imul
std
fstpl
je
fadds
jge
add
cmc
mov
mov
push
xor
xchg
xor
inc
pop
push
scas
mov
inc
jmp
mov
outsb
mov
mov
adc
shll
out
sbb
push
icebp
mov
imul
cmp
sar
pop
jl
cmpsl
inc
arpl
setbe
test
fldpi
xchg
std
loope
ficompl
inc
test
pusha
adcl
lret
lods
xor
fwait
ret
inc
out
shl
and
add
mov
jo
rcll
mov
call
in
push
sub
ret
mov
fcomi
jns
mov
ret
and
out
sbb
mov
and
in
pop
push
je
dec
in
int3
lea
inc
xor
aam
stos
and
movsb
mov
or
cmp
scas
loop
pop
jae
lea
nop
xchg
out
cmc
sbb
in
aas
test
cs
sub
adc
ficoms
sbb
cmp
loope
out
ret
or
mov
mov
pop
in
ljmp
outsb
push
lret
nop
mov
mov
out
ficompl
mov
hlt
mov
pusha
or
mov
dec
push
out
adc
insb
mov
test
jns
push
mov
push
mov
pushf
push
aas
push
mov
xchg
ret
cmpl
mov
das
jge
jb
and
sarb
cld
lods
int3
xor
add
into
and
mov
adc
dec
mov
xchg
push
fists
adc
xchg
cld
into
xor
xchg
int
and
lock
sbb
cmc
mov
xor
int
add
pop
btc
and
mov
aam
imul
jmp
and
inc
push
sub
mov
cld
or
adc
jl
mov
cld
dec
or
out
mov
and
stc
leave
cmp
outsb
dec
jmp
cmp
jg
mov
rcrl
sub
mov
push
sbb
imul
stos
pusha
pusha
pop
paddq
cmp
lcall
outsl
xor
xor
mov
adc
outsl
mov
push
shrl
cmpb
mov
loope
stos
leave
hlt
int3
push
or
push
ret
jns
into
cmpsb
jecxz
mov
adc
jnp
pop
or
mov
pop
test
stos
outsl
lcall
pop
push
rcr
mov
cmp
outsl
ljmp
push
sub
lcall
dec
add
mov
xchg
and
pop
cltd
jns
jecxz
jge
subb
arpl
js
negb
stc
push
push
cmp
pop
pop
pusha
xor
ds
jl,pt
add
cmp
in
adc
mov
clc
test
mov
dec
cld
jl
pop
movsl
call
scas
mov
adcl
or
push
jmp
movsl
xor
fcoml
mov
sahf
movsb
sbb
jle
jle
nop
loopne
mov
jno
jecxz
lods
mov
push
xor
mov
inc
mov
inc
cmp
out
and
aam
push
test
mov
popa
cltd
pop
cmp
xchg
lcallw
push
subb
sub
pop
and
mov
pop
pop
push
mov
dec
dec
js
mov
push
add
out
jmp
or
jge
mov
mov
insb
sti
push
andb
jnp
pop
fstps
and
xchg
inc
aad
dec
cmp
imull
aam
push
ret
stos
shrl
mov
ja
or
insl
or
jnp
leave
mov
in
push
fdivrl
or
popa
insl
pop
mov
cmp
stos
add
adcb
and
mov
xor
sti
xchg
jmp
mov
stos
adc
iret
sub
sbb
or
sbb
xchg
bound
iret
mov
sub
jl
push
xchg
gs
cmp
aaa
jg
cmp
or
add
fucom
and
fcomip
in
sub
jnp
arpl
mov
sbb
or
adc
ja
xor
dec
orl
or
repz
jnp
mov
mov
stc
adc
cltd
xorb
stos
cwtl
xchg
inc
mov
ljmp
js
fimuls
scas
and
or
dec
or
push
hlt
sbb
dec
or
ljmp
cmc
or
int
mov
mov
scas
add
mov
cmp
lock
divb
adc
push
ret
aas
dec
mov
stos
addr16
divl
cld
in
add
sbb
pop
mov
or
outsl
mov
fwait
rep
enter
cmp
cmpsb
sub
mov
loop
cmpsb
out
iret
test
inc
mov
cltd
dec
dec
test
inc
cltd
push
jg
fdivl
repz
loope
or
and
icebp
mov
mov
rcrb
divb
jg
push
mov
pop
pop
xchg
pop
arpl
out
dec
sub
add
cmp
test
add
repz
cmp
push
das
xchg
insb
xorb
xchg
push
jmp
test
and
cmpsb
sahf
adc
lahf
jo
sbb
lods
and
push
lds
stos
insl
orl
jae
mov
lea
fs
call
jno
push
sbb
jne
pop
xor
jno
sbbl
in
in
shll
lock
fwait
or
mov
in
mov
xchg
mull
mov
push
repz
int3
jmp
jmp
pop
loop
push
adc
loope
scas
mov
in
mov
aam
pop
lret
pop
hlt
mov
shlb
je
jecxz
jge
test
cmpsb
jl
add
lds
pop
push
xor
mov
xchg
std
push
dec
push
out
outsb
push
test
shl
cmpsl
sub
jp
movsl
shlb
mov
xchg
xor
into
jge
add
mov
add
jnp
mov
pop
cmp
fwait
add
jb
and
lds
test
dec
fldcw
xchg
xor
faddl
pop
dec
aaa
dec
dec
fsubl
sbb
lcall
hlt
insl
scas
push
xlat
sbb
jno
mov
setg
push
cmp
dec
ss
xchg
out
lods
bound
push
and
das
push
jo
sub
idiv
aaa
push
dec
imul
clc
xor
das
xorl
insl
jno
cli
jg
mov
and
jnp
jecxz
xor
cmp
out
hlt
pop
pop
lods
cmpsb
sub
pop
jle
fnstcw
test
das
pop
mov
insb
dec
mov
inc
sub
sti
sbb
adc
xor
mov
call
test
in
mov
or
test
loop
xchg
rclb
out
shll
jae
lcall
rolb
faddl
bnd
adcl
or
add
test
jecxz
pusha
sub
jo
out
es
adc
inc
and
pop
out
or
mov
ret
inc
out
or
clc
clc
jns
lods
dec
or
lods
jo
jp
dec
cld
lcall
data16
mov
jnp
inc
xor
fstps
xchg
jae
xchg
fsts
xchg
xor
lock
pop
adc
addb
push
xchg
out
faddp
insb
sub
test
xor
outsb
or
cltd
mov
add
sub
daa
push
push
jg
jmp
das
icebp
lsl
filds
lret
push
imul
ja
pop
xchg
stc
sub
in
aas
jb
mov
mov
xchg
pusha
sti
outsb
pop
jbe
ja
xor
mov
dec
das
cli
mov
imul
andb
ja
ja
in
std
fidivrl
push
sub
fisubrl
ja
ftst
fs
cmc
jb,pn
lcall
popf
das
xlat
lcall
inc
mov
hlt
shr
js
and
mov
cwtl
int
out
push
pop
sub
and
in
ljmp
mov
call
out
outsb
adc
orb
lret
pop
add
jae
sub
mov
icebp
lret
mov
test
xchg
je
int
mov
lret
stos
jge
adc
jo
in
sbb
add
mov
mov
int3
sub
out
test
movsl
jae
push
int3
sbb
lahf
mov
rcr
test
push
jnp
mov
test
adc
out
mov
or
mov
lret
pop
cwtl
lahf
cmp
mov
daa
mov
mov
imul
addb
mov
scas
lret
das
roll
pop
fdivl
dec
leave
push
sub
int3
sbb
aaa
jb
pop
dec
push
xor
jl
int3
cld
int3
cmp
nop
lods
shl
shll
leave
in
jmp
inc
ljmp
arpl
imul
in
loop
jl
fmuls
rorb
sub
movsl
insb
sbb
push
cli
mov
rcrl
pop
jns
adc
dec
push
test
adc
daa
xchg
ret
loop,pt
xchg
pop
pop
adc
push
xchg
mov
mov
js
or
arpl
adc
pushf
into
xor
scas
imul
popa
or
movsb
popf
mov
hlt
test
sub
fstpl
mov
cmpsb
or
ds
sbb
out
pushf
ds
imul
xor
insb
sbb
xor
xor
xchg
or
fnstenv
adc
sarl
push
dec
cld
add
xlat
dec
pop
outsl
int
xchg
xchg
sub
mov
and
shll
je
and
jp
dec
ja
sbb
subb
in
xchg
inc
push
dec
jecxz
mov
add
rolb
testb
stc
cs
sbb
pop
sahf
or
scas
jmp
jns
push
out
pop
fwait
pop
mov
cmpsl
adc
inc
push
cwtl
mov
and
loopne
jnp
scas
and
sbb
sub
arpl
xchg
mov
xchg
push
and
xchg
mov
cli
xchg
cmp
mov
adc
shll
mov
ss
rcrb
push
sub
mov
mov
mov
outsb
or
pusha
clc
mul
ss
push
in
mov
mov
lret
mov
adc
jg
sbb
xor
addr16
mov
pushf
dec
stos
out
adc
cmp
cli
xchg
stos
or
into
rorb
imul
sbb
add
xchg
add
shlb
pop
test
pushf
incl
jmp
push
lcall
and
push
add
cmp
call
pop
push
mov
cs
xchg
add
dec
icebp
cs
out
mov
adc
outsb
xchg
jge
and
and
mov
adcb
loopne
pop
push
lret
adc
sbb
jmp
cmpsl
loop
fucom
aas
or
iret
pop
rcrb
mov
and
mov
push
loope
cld
or
out
pop
cmc
fbld
push
mov
sbb
divl
fisubs
mov
das
mov
mul
ret
mov
inc
nop
pop
cmp
push
movntps
dec
pop
jns
lds
push
push
mov
xor
fucomip
lds
and
sbb
mov
repnz
jae
aaa
es
lret
test
fbld
ds
nop
sub
mov
adc
push
add
repz
pushl
mov
mov
cltd
push
jbe
dec
mov
dec
xchg
sbb
xor
xor
sti
rolb
sub
mov
icebp
fnstcw
sbb
sbb
sub
gs
push
pop
mov
sti
out
adc
mov
in
lcall
cltd
mov
push
mov
shl
inc
push
loope
adc
jecxz
pop
hlt
pop
call
call
test
sbb
test
pop
mov
cmp
aad
add
lods
xor
add
push
stos
mov
int
enter
lret
xchg
shll
ljmp
adc
rcrb
jl
nop
pop
fldt
lock
test
mov
mov
out
inc
sub
push
cmp
mov
adc
test
pop
movsb
loop
in
shrl
cmc
sub
sbb
xchg
scas
cs
andl
in
int3
divb
dec
std
ljmp
in
dec
sarb
mov
aaa
ljmp
mov
cltd
addr16
pop
call
cbtw
lahf
add
out
aas
jo
and
ljmp
push
lds
xor
pop
push
cmp
pushf
jecxz
and
mov
add
sub
add
cli
adc
jle
aad
inc
ja
xchg
jl
out
xchg
adc
inc
sarl
ss
or
xor
push
stos
sub
daa
cmc
dec
jl
out
ret
or
xorb
jecxz
and
int
and
inc
dec
mov
jl
pop
lea
das
imul
adc
popf
icebp
inc
xchg
popf
xchg
outsl
enter
bound
imul
mov
addl
push
test
rorl
push
mov
adc
xchg
or
rcr
push
mov
push
test
jno
mov
and
and
icebp
pop
lahf
es
xchg
jg
push
pusha
addr16
dec
xchg
xchg
adc
jmp
jge
pop
push
iret
test
xchg
popa
jp
xchg
sbb
mov
push
inc
mov
std
es
daa
int
aas
mov
mov
jns
fidivl
and
rol
add
insb
inc
and
test
or
es
ljmp
inc
rcrl
sbb
add
adc
cmp
jle
insb
daa
mov
fwait
xlat
imul
inc
cmp
cmp
jne
pop
out
in
add
xor
and
arpl
pop
push
repnz
in
out
fidivrl
add
pusha
in
or
pop
inc
cmpsl
jns
adc
fistps
inc
cmpsb
ss
mov
add
sub
sahf
pop
pop
dec
ret
jo
dec
or
fldenv
cmp
cmp
scas
imul
jb
sbb
push
jb
clc
fsubrs
adc
and
adc
sahf
jle
ja
stc
sub
pop
mov
cmp
push
fdivrp
in
jp
cli
fistpll
xor
inc
int3
or
lahf
test
jecxz
in
scas
cmp
xchg
push
mov
ret
and
gs
ficoml
cmp
cmp
cwtl
insb
mov
xchg
inc
into
sub
and
jno
sub
ret
lahf
sub
dec
push
daa
aas
mov
ret
mov
push
xchg
mov
push
pop
jmp
gs
test
leave
lea
sbb
sub
cmp
negl
cmp
inc
jo
lock
fs
fldl
cli
outsl
xor
fsubs
fdivs
push
mov
xor
dec
test
xchg
pop
push
ja
pop
or
xor
daa
lcall
les
divb
cmpl
mov
shll
pop
aaa
sbb
and
stos
nop
xchg
aad
cmp
lahf
push
mov
ficoms
xchg
aam
add
pop
pop
fidivrs
clc
cld
push
or
lret
mov
lahf
popf
pop
jnp
bound
add
adc
or
loop
lods
pop
inc
dec
mov
aas
cld
scas
or
adc
or
ficomps
jp
or
rcl
push
sbb
imul
jmp
js
stos
cmp
movsb
fwait
in
pop
test
or
jp
mov
es
pop
pop
or
and
out
add
mov
filds
jnp
mov
pop
pop
test
inc
push
pop
mov
addr16
add
in
and
in
dec
lea
movsl
xor
xchg
sub
jns
dec
push
push
iret
data16
mov
loop
ljmp
lock
out
lods
xorl
push
push
cmpsb
fbstp
xchg
cmpsl
stos
mov
jo
dec
insb
rcrl
clc
cmp
pusha
push
pushf
dec
dec
jg
pop
mov
mov
es
cld
fbld
repnz
push
push
ret
mov
add
push
pop
xor
mov
ficomps
inc
nop
clc
cli
sbb
sub
cs
aam
out
sbb
fs
lock
push
scas
sub
test
sbb
into
test
xchg
or
inc
inc
addr16
mov
mov
hlt
out
or
ret
push
push
imulb
dec
sub
jb
in
cmp
test
sub
rcrl
cmp
adc
xchg
arpl
pop
adc
mov
gs
cmp
push
xor
sub
pushf
jbe
inc
js
pusha
inc
cs
rolb
xor
jne
pop
xchg
mov
cmc
arpl
pushf
call
pop
adc
mov
jo
push
mov
test
loope
cmpsl
jge
xor
push
sbb
fs
sbb
das
adc
daa
leave
clc
stos
xor
add
test
lret
sahf
and
pop
mov
push
lock
in
xor
bound
daa
outsl
test
adc
pop
mov
sub
scas
cmp
xor
aam
inc
cmp
out
inc
pushf
mov
sbb
orl
cmp
out
adc
push
gs
cmp
mov
lcall
xchg
popf
mov
shr
push
sbb
xlat
mov
stos
mov
sub
and
loopne
stos
adc
iret
sbb
fnstcw
out
mov
sub
pop
test
push
pop
lock
mov
and
adc
fiadds
push
sbb
xchg
pminub
inc
mov
dec
fistps
cmp
fs
jmp
xchg
mov
sbb
push
pusha
imul
test
hlt
push
ss
in
jg
arpl
fcompl
pusha
or
fldcw
mov
sub
adc
push
test
mov
stos
cmpsl
or
pop
sbb
rol
test
fnclex
mov
repz
test
mov
cli
adc
jg
jbe
movsl
mov
loope
roll
mov
movsl
popf
xchg
hlt
sub
decl
and
rcll
lahf
mov
mov
xchg
push
mov
cmp
es
leave
dec
enter
push
roll
stos
mov
stos
outsl
lcall
rolb
mov
fsubrs
sub
xchg
ficoml
pop
and
sub
fidivl
subl
mov
xor
popf
call
adc
jbe
rolb
push
stos
into
int
rolb
das
jnp
cmp
dec
dec
push
adc
stos
cmp
mov
adc
ljmp
jns
cld
aaa
mov
or
adc
xchg
sub
push
es
stos
xor
out
mov
int3
loop
sub
xor
push
inc
adc
popa
popf
or
mov
shr
cwtl
jno
mov
sbb
cmp
pop
in
or
xchg
push
mov
je
add
addr16
enter
aas
lods
das
scas
push
xor
and
decb
aad
in
cmpsl
mov
leave
dec
xchg
js
or
call
pop
out
cmp
jnp
scas
push
push
add
or
stos
inc
nop
xchg
cltd
cmp
sti
xor
pop
incl
hlt
out
push
sbb
lds
movsb
leave
inc
shll
gs
insl
push
xor
sbb
scas
jns
rcr
mov
jb
dec
jl
mov
jmp
adc
rcll
or
mov
push
lods
leave
mov
inc
scas
ja
sti
pop
mov
adc
lea
imulb
in
mov
xlat
les
sub
lret
ljmp
stc
pushf
cli
cmpb
arpl
push
mov
push
setns
mov
arpl
gs
push
pusha
cltd
jge
jne
loop
mov
cmp
pushf
sbb
ret
addl
mov
fst
mov
sarb
xlat
pcmpeqw
fidivs
jns
mov
cmpsb
rorb
mov
ud0
out
jecxz
push
ja
adc
mov
ljmp
jecxz
jo
enter
mov
add
lret
repz
push
jle
xchg
loope
out
xor
mov
sub
mov
movl
cmp
push
cld
adc
repz
test
jb
fcmovbe
loope
stos
imul
pop
out
pop
fstpt
ror
dec
push
lock
jns
mov
pop
pop
les
jp
mov
inc
cmp
movsb
mov
push
pop
jg
cmc
push
jne
outsl
sbb
test
sarl
inc
ret
imul
xor
icebp
int
xchg
iret
push
cwtl
pop
sbb
pop
jl
mov
add
inc
clc
ljmp
or
fldt
cmp
mov
jne
mov
rorb
rol
mov
lret
jmp
jmp
jg
adc
mov
aaa
cmp
xlat
mov
nop
mov
imul
or
scas
test
inc
cmp
jne
xor
ss
push
adc
imul
loope
sbb
sub
and
dec
mov
xor
pop
mov
xchg
aad
pop
lock
dec
dec
xor
les
loop
repz
popa
adc
mov
popa
pop
dec
mov
and
dec
push
adc
dec
push
movb
es
imul
in
shrb
jge
loop
scas
outsb
popf
mov
pop
jg
das
xor
push
jp
aad
push
scas
adc
pop
shl
mov
cmpsl
addb
xchg
lcall
push
cli
sub
imulb
xor
mov
inc
leave
push
sbbb
ror
lret
mov
clc
pop
mov
lock
loop
adc
push
cmpsl
add
aaa
aam
aas
lret
jecxz
fbstp
movsb
notb
scas
sub
dec
and
rcll
push
adc
icebp
inc
in
push
cmp
andl
sub
fidivl
cli
mov
cmpsl
dec
lret
rcrb
insb
pop
out
sub
nop
pop
push
or
lods
outsb
jb
out
sbb
rolb
xor
xor
cmp
cmp
cmp
fnstsw
fcomp
mov
inc
ds
or
fs
hlt
hlt
add
xchg
ret
std
loope
icebp
or
pop
repz
adc
adc
xchg
in
cmpsb
jne
shrb
es
mov
inc
pop
push
lods
movsl
in
rolb
rcll
push
into
adc
sbb
jmp
ret
fdivr
dec
fcmovb
ja
jb
pop
rcll
cmpsl
mov
ljmp
fs
sub
push
sub
push
pop
or
pop
mov
and
sahf
jmp
orl
xor
cmpb
push
push
test
ficoms
nop
mov
mov
jnp
xchg
lds
add
cli
arpl
fs
lods
mov
enter
add
mov
pop
jno
adc
and
cmp
push
faddl
add
std
in
xchg
rorl
js
jmp
in
imul
xor
cwtl
iret
and
aad
das
cmp
data16
lods
cmc
aad
adc
pop
int
jge
jmp
mov
inc
mov
testl
xor
pop
mov
fs
aad
decl
dec
and
and
dec
or
out
test
js
lret
repnz
sarl
test
push
std
inc
and
sub
cld
ja
fnstenv
decb
fsts
push
push
fwait
test
fdivs
dec
mov
icebp
mov
adc
aas
and
and
mov
mov
sbb
and
outsb
mov
icebp
dec
sub
pop
xchg
pop
dec
xor
adc
hlt
and
mov
pop
push
or
ljmp
int
rcrb
outsl
mov
test
addr16
popf
push
cmpsb
sub
ja
stc
lahf
stc
mov
ja
mov
stos
cmp
adc
push
mov
push
mov
push
mov
hlt
xchg
mov
imul
mul
sub
cli
mov
mov
out
loope
sub
sub
lahf
cmp
pop
mov
je
xchg
cmp
fldt
sbb
pop
jl
sarl
mov
ficomps
dec
popf
xorl
and
push
mov
sbb
call
addr16
mov
sub
rcll
std
imul
push
pop
lods
nop
sahf
mov
mov
sets
aam
add
push
repz
aad
ror
xchg
push
fidivrl
cmp
ss
fwait
sub
out
or
pop
cmp
sbb
sti
jmp
push
cltd
mov
imul
sarb
out
inc
mov
lret
add
jge
mov
inc
and
and
xor
mov
stos
jae
in
repnz
daa
push
lret
adc
mov
mov
mov
jo
lods
sub
adc
push
lahf
xor
add
xchg
add
outsb
testb
es
mov
scas
xor
jb
mov
hlt
jmpw
pop
fsubr
repz
push
fldl2e
scas
inc
sbb
ja
and
cmp
ret
fmuls
mov
xchg
in
xchg
xor
jo
testb
in
icebp
ds
lret
ficompl
jp
jnp
int3
mov
mov
cmp
repz
or
push
lret
std
mov
add
sbb
jb
jmp
inc
pop
jge
pushf
push
cs
xor
cli
adc
das
daa
loope
mov
add
bound
ss
jo
mov
daa
mov
jnp
pop
mov
test
test
enter
push
add
pop
xor
jp
ds
addl
sub
shlb
std
shrb
sub
jmp
inc
in
jb
out
icebp
xor
mov
mov
int
sub
pop
mov
arpl
enter
flds
xchg
push
pop
in
jecxz
mov
sbb
arpl
test
pop
push
je
dec
out
in
stc
mov
xor
jns
mov
dec
adc
out
or
das
dec
adc
cmp
or
push
push
rol
sti
dec
inc
cmp
repnz
ret
pop
movsl
fwait
xor
mov
mov
movsl
gs
pop
pusha
out
sarb
xchg
xchg
popf
outsb
add
cmpsb
and
jae
sbb
cmp
shlb
dec
xor
mov
iret
push
pop
mov
lock
ljmp
fs
jb
sbb
pop
in
mull
ja
sub
dec
xchg
mov
and
jbe
lret
pop
sub
ret
ss
adc
sub
adc
dec
or
pop
nop
rcl
jle
std
jo
int
mov
jge
or
sub
out
jae
sbb
pop
in
dec
xchg
push
test
jp
lcall
arpl
aad
push
jne
pop
mov
repnz
test
scas
cmp
fs
dec
insb
adc
test
lahf
mov
inc
xchg
test
mov
outsl
sahf
mov
lret
loop
call
scas
ljmp
aas
xor
jns
inc
test
sub
cmp
or
cmp
popf
and
adc
cld
jecxz
cmc
or
cltd
int
push
mov
out
sub
arpl
pop
icebp
push
jns
test
dec
loope
cmp
outsl
or
test
int3
mov
push
jmp
pop
aas
pop
iret
cmp
mov
lret
push
jno
imul
add
xchg
cltd
fidivrs
mov
sub
adc
dec
lods
adc
aaa
push
lahf
sub
sti
lods
in
sbb
inc
gs
in
inc
sbb
inc
mov
nop
movsb
add
cwtl
jmp
jecxz
sub
push
pusha
push
inc
cmp
sbb
push
cs
mov
jbe
in
mov
in
leave
lea
adc
mov
mov
pop
inc
aad
pop
aaa
mov
sbb
rcl
add
dec
mov
jg
fsubs
mov
pop
popa
push
int
iret
mov
jbe
or
fistpl
jg
fnstsw
mov
enter
lret
add
xchg
xor
mov
add
sub
stc
bswap
mov
dec
hlt
sbb
movb
and
les
ret
xor
leave
ja
mov
pushf
sub
aad
pop
std
jecxz
or
sbb
pop
mov
inc
lds
test
mov
sahf
repnz
inc
mov
aad
outsb
or
sbb
pop
cmp
mov
jne
adc
bound
xor
enter
imul
cmp
mov
jo
stc
lret
pop
pop
pop
xchg
iret
inc
rorb
mov
adc
dec
mov
push
sbb
add
dec
mov
call
add
icebp
sub
lods
les
sub
lods
popf
insl
movsb
je
aam
and
dec
jne
xchg
sarb
mov
in
enter
out
sahf
bound
fldl
fcmovb
loop
lea
mov
xor
adc
icebp
das
arpl
lea
out
dec
imul
add
pushf
cmc
pop
insl
add
or
pop
sub
cmp
movsl
lds
mov
int
sti
sahf
mov
or
aas
adc
mov
mov
les
pop
clc
cmp
sub
rorb
sbb
or
daa
pop
sub
jnp
push
aaa
mov
das
push
push
sbb
movsb
scas
fwait
jbe
rolb
fstl
icebp
and
jns
aas
cmp
xor
stc
inc
insb
out
pop
push
push
pop
push
xchg
add
das
out
ret
in
mov
sbb
cmp
in
int3
pop
and
out
ficoml
mov
push
iret
pop
xlat
in
xor
jl
adc
cltd
aam
cmpsl
or
sub
iret
adc
sbb
es
sub
sub
ja
dec
movsl
sbb
xchg
dec
leave
aad
xchg
mov
popf
in
adc
cmp
mov
addb
leave
add
pop
add
add
mov
lret
cwtl
rorb
push
mov
movsb
shlb
push
sarl
aaa
push
xor
das
je
std
cli
dec
and
sbb
das
sub
dec
aam
aam
testl
in
sub
sbb
push
lret
in
leave
dec
adc
jnp
jp
cmpsl
pop
sbb
adc
orl
lcall
in
movsb
dec
dec
stos
sbb
test
cmpsb
fwait
pop
ss
mov
push
push
dec
jmp
mov
inc
xchg
imul
popa
outsl
jmp
and
inc
inc
and
bound
mov
lds
shl
xchg
cltd
pusha
std
adc
outsl
mov
aas
mov
mov
add
rcll
push
imul
out
push
fiadds
sbb
and
pop
push
das
enter
outsl
sub
mov
outsl
aas
sahf
imul
inc
mov
jno
orl
sub
pop
in
das
enter
sbb
and
test
shlb
stos
sbb
scas
push
lea
jle
cmp
dec
inc
xor
cmpxchg
inc
pop
mov
jecxz
divb
stc
lret
inc
jecxz
or
data16
pop
mov
aam
adc
xlat
sbb
and
jb
popf
cmp
arpl
jle
xchg
call
jae
aas
scas
dec
pop
jmp
shll
in
mov
fcmovnbe
lret
mov
scas
cmpsl
imul
ret
cmp
mov
movsb
cmp
mov
cmp
lret
mov
cmpl
jge
in
mov
daa
or
add
mov
mov
dec
std
mov
sbb
jg
test
orb
jl
or
xor
pop
inc
notl
mov
adc
mov
mov
icebp
cmp
inc
adc
sub
jnp
push
notl
sbb
imul
inc
cli
pop
and
daa
dec
outsb
jae
add
cs
jle
mov
xor
mov
cmp
outsb
stc
dec
dec
movsb
and
outsl
sbb
inc
je
shll
inc
arpl
int3
pop
jne
sbb
sbb
lret
xor
subb
fsubrl
push
fistl
ljmp
enter
ficoms
cli
push
push
mov
cmp
sahf
movsb
push
add
push
mov
mov
sub
sub
iret
xchg
xchg
add
test
jno
cmp
add
ja
fsub
outsb
sahf
idivl
shll
jne
xchg
mov
ljmp
add
je
idivl
cmp
mov
inc
mov
pop
jmp
sbb
out
fsubrp
push
mov
fs
orl
je
or
mov
xlat
cmp
xor
mov
in
mov
ret
xor
jb
xchg
ja
jle
fs
jae
push
mov
xor
fidivrl
mov
nop
push
fwait
xchg
mov
ljmp
cltd
cmpl
adc
cmp
inc
mov
pop
scas
aam
lods
add
scas
bnd
jge
jge
stc
and
idiv
out
jg
sub
jb
outsb
mov
lcall
lock
pusha
faddl
mov
movsb
mov
xor
dec
shlb
dec
int
aad
or
jae
jns
pop
cmpb
lods
in
push
cmp
ficoml
lea
sbb
cmpsl
cmp
and
mov
in
mov
jne
adc
lock
leave
clc
sbb
inc
out
pop
mov
loopne
out
lods
adc
aaa
sarl
sub
cmp
pop
mov
rorl
pop
js
jnp
sti
add
cli
mov
sbb
sbb
sub
and
jns
mov
and
cmc
inc
outsb
fwait
xchg
icebp
xchg
cmc
inc
xor
loopne
fildl
and
ja
rcrl
dec
leave
aam
push
cmp
adc
cmp
push
adc
adc
mov
add
dec
icebp
jb
je
hlt
jecxz
mov
cmpsl
insb
or
pusha
movsl
mov
daa
shrb
stc
mov
out
nop
pop
jecxz
sub
pop
in
cmp
mov
add
aas
xchg
jge
jmp
pop
lods
ss
imul
mov
in
jno
dec
adc
je
mov
sub
xchg
popl
adc
adcb
lcall
fwait
and
dec
mov
mov
or
ljmp
and
fwait
pop
pop
ljmp
addr16
push
sub
xchg
mov
push
and
or
stos
or
in
sbb
sbb
popf
inc
push
pop
pop
push
xchg
mov
sbb
push
repz
data16
xor
xchg
cwtl
mov
scas
mov
jp
xor
xchg
sbb
sahf
jae
jle
out
pop
sbb
or
mov
mov
test
sub
mov
das
and
cmp
cmp
inc
inc
cmp
pushf
fbstp
stos
inc
lcall
adcb
loop
add
insb
mov
mov
jl
ja
shrb
out
stc
ljmp
mov
fimull
js
inc
mov
push
pop
dec
enter
xor
add
push
outsb
mov
xchg
jge
inc
or
xor
dec
sbb
mov
test
xlat
pop
sub
mov
fdivrs
jns
std
imul
cli
mov
jb
movsb
and
dec
jne
mov
dec
dec
xchg
iret
dec
mov
fsubl
fwait
dec
push
addb
cmp
cs
out
and
pop
cmp
test
mov
andb
pop
jae
ret
ja
sbb
xchg
pop
mov
or
mov
not
jmp
add
and
je
push
push
clc
lret
mov
lahf
cmp
das
cmpsb
push
xchg
sbb
ret
pop
rorb
lret
mov
clc
bound
loop
push
mov
jl
mov
cmp
stos
pusha
cmp
ficoml
test
test
cmp
inc
push
test
sbb
xchg
adc
cmp
leave
fistl
pop
cmp
dec
xor
outsl
sub
into
or
dec
pop
mov
lods
mov
push
add
xchg
ds
sbb
xor
sub
xchg
adc
aad
mov
int
fbld
repz
mov
push
nop
jbe
cmpsb
add
inc
cltd
aad
hlt
jl
and
les
lea
push
mov
in
xor
add
lods
test
stc
mov
jmp
and
pop
and
push
and
pop
out
pop
in
sub
ja
mov
push
bound
jecxz
adc
sub
lcall
out
pop
mov
sub
enter
sbb
jecxz
insl
ret
jbe
inc
and
aad
sub
dec
xor
popf
push
jmp
and
or
subb
cmc
inc
fstpl
cmp
pop
fildl
lea
std
fs
inc
lret
sti
sarb
movsb
add
adc
adc
xchg
jmp
out
test
ss
xlat
in
and
xor
pop
jecxz
jae
adc
das
cli
mov
lahf
jl
sub
cltd
aas
add
inc
mov
jp
xchg
xor
or
cmp
and
xchg
cmpsl
xchg
clc
call
xchg
cld
mov
imul
hlt
push
and
xchg
ret
loopne
data16
xchg
out
xchg
jle
scas
and
and
jmp
fmull
add
xor
orb
xor
push
mov
jae
pusha
test
fisttpll
outsb
jecxz
fidivrl
lods
ljmp
sub
dec
rcll
daa
mov
lods
sbb
dec
ja
pop
xor
mov
pop
lcall
imul
add
mov
es
scas
xor
push
lahf
insl
xlat
loope
ja
test
fnsave
movsb
jb
adcb
push
mov
xchg
pop
mov
mov
cltd
aas
std
dec
rcl
xchg
pop
movsw
rcr
xor
sbb
outsl
mov
fcoms
pop
out
scas
cmp
adc
shlb
dec
xor
sbb
fwait
fwait
aaa
or
jno
loopne
sub
push
sub
js
mov
pop
mov
ror
pop
pushl
or
andb
jno
xchg
or
xor
mov
mov
fucom
push
adc
fisttpll
add
fwait
in
lret
mov
leave
add
cmp
into
in
filds
jl
add
adc
jns
loopne
orb
jecxz
push
jno
adc
sub
js
sub
stos
sbb
nop
add
and
fiadds
pop
sbb
pusha
add
mov
je
inc
adcb
loopne
mov
or
fdivrl
fnstsw
push
lcall
mov
mov
xor
mov
xchg
xchg
fstpl
cmp
addr16
imul
in
std
insb
mov
cwtl
aad
jbe
cmp
push
cmp
outsl
test
push
sti
adc
mov
lret
sbb
test
adc
scas
inc
mov
adc
dec
daa
or
sub
mov
mov
adc
mov
or
push
leave
stos
dec
outsb
mov
aam
popa
mov
loopne
int
es
arpl
mov
or
fs
cmp
push
push
je
fcompl
cld
bound
or
mov
mov
inc
and
jmp
add
mov
stos
mov
pop
mov
inc
add
scas
dec
imul
cwtl
mov
adc
lock
insb
roll
push
xchg
push
or
add
out
push
mov
cli
jmp
into
flds
mov
int3
pop
jg
int3
jnp
push
ljmp
sbb
not
sbb
xchg
push
lahf
mov
iret
mov
test
lea
fcoms
mov
movsl
andb
icebp
push
sub
mov
lods
ficompl
popa
push
mov
mov
rcrl
push
xchg
adc
testl
mov
in
pop
inc
ret
add
lret
lods
adc
in
lea
mov
mov
or
lea
push
ss
dec
xchg
mov
sub
fldcw
add
inc
mov
sub
inc
xor
jge
push
pop
cwtl
movsl
out
sbb
stc
mov
mov
mov
je
insl
hlt
or
cmc
xchg
mov
rorb
adc
jp
sarb
shr
arpl
pushf
jns
push
xchg
or
std
andb
bnd
sti
pusha
push
dec
cld
jg
xchg
cli
pop
xor
leave
loope
movb
sbb
les
inc
mov
sub
popf
enter
rclb
adc
cmp
out
xchg
cmc
fdivs
sbbb
arpl
sbb
push
aaa
cmpxchg
test
cmp
hlt
xor
xchg
mov
add
std
fwait
mov
adc
mov
pusha
jp
aam
int
jmp
push
cmp
ret
test
fdivrl
or
daa
lds
mov
pop
lret
mov
pushl
stc
lahf
add
outsl
fidivrs
mov
loope
mov
cmpsl
popf
jns
outsl
mov
adc
push
mov
add
pusha
cmp
inc
mov
and
loope
and
stos
lahf
cmpsl
int3
inc
mov
outsb
xchg
pop
push
add
pop
adc
push
lahf
mov
mov
add
and
rorl
inc
int
std
inc
filds
sbb
decl
adc
fcomip
cvtpi2ps
data16
int3
push
mov
std
gs
cmp
inc
push
jo
out
inc
cmp
cmpb
jg
sbb
subb
adc
mov
leave
cmpsw
es
mov
sub
das
sub
cs
push
aas
aad
shlb
je
inc
pop
sbb
cmp
or
mov
mov
sbb
jbe
leave
hlt
push
push
jecxz
cwtl
aaa
fisttps
out
stc
shrb
mov
inc
xor
out
dec
and
fisttpll
add
ljmp
ret
int
mov
ficoms
idivl
in
cmp
cld
dec
ja
gs
aaa
sub
mov
add
sbb
aam
mov
jno
push
int
pop
pop
and
fdivr
fimull
pop
out
nop
mov
dec
xchg
jb
dec
and
cmpsb
clc
jns
sbb
sbb
dec
mov
push
mov
xchg
in
ss
xor
inc
or
stos
in
xlat
ljmp
sbb
mov
int3
jg
xchg
push
xchg
sub
filds
bnd
mov
dec
movsl
jns
mov
mov
stc
leave
addr16
into
mov
insb
add
lret
xchg
pop
sar
pop
js
imul
mov
mov
les
movsl
pop
add
jp
xchg
popf
add
sbb
xchg
pushf
inc
push
push
mov
cltd
insl
xchg
xchg
mov
mov
and
out
fcoml
inc
mov
push
sbb
arpl
iret
adc
adc
cmp
scas
pop
insb
loope
shlb
add
inc
or
add
arpl
mov
push
mov
xchg
mov
popa
mov
notb
mov
rolb
sar
aaa
mov
or
cmp
cmp
mov
outsb
fdivrl
int
std
xor
pushf
xor
jae
jl
scas
xor
xchg
pop
or
and
inc
xchg
sub
pop
xor
mov
mov
stc
cmp
mov
repz
cmpsl
adc
mov
jp
adcb
mov
pop
loop
push
clc
mov
dec
std
or
xor
adc
mov
in
lret
xchg
xchg
movsb
in
pop
in
xor
dec
sub
xchg
test
popf
dec
push
mov
sbb
sub
cmpsl
mov
aam
inc
xor
ja
push
sbb
cwtl
lods
or
mov
std
xchg
data16
cmp
adc
repnz
pop
test
adc
xor
push
aaa
add
jmp
cld
xchg
xchg
mov
cli
xor
jmp
jo
jecxz
gs
jns
inc
fsubr
js
nop
and
inc
rolb
pop
scas
adc
push
jmp
pushf
xchg
jl
mov
fs
dec
jno
hlt
lea
inc
testb
mov
xchg
xchg
add
xchg
sub
lahf
shr
lret
lods
adc
mov
dec
es
outsb
dec
dec
ds
sbb
into
jno
int
mov
dec
iret
out
outsb
ljmp
int
insb
inc
jb
cmp
in
sti
mov
xchg
scas
or
aam
add
in
jbe
lret
jge
sti
xchg
xchg
cli
out
jns
jbe
dec
iret
loope
aaa
imul
shr
xchg
call
test
inc
pop
push
pop
mov
mov
dec
xor
cmp
push
mov
xchg
fs
das
lcall
ja
inc
out
pop
jns
jg
mov
push
test
je
daa
push
out
mov
xchg
arpl
or
xchg
hlt
ss
adc
sub
cmp
push
popa
std
bound
jns
cs
push
sbb
repz
lds
ss
xchg
pop
addr16
bound
pop
fwait
and
cmp
pop
pop
mov
subl
or
mov
ficoml
add
std
and
cs
pop
add
cmp
pop
sub
push
addr16
and
out
adc
inc
sub
sti
mov
vmovhpd
xor
mov
cmp
leave
sub
lret
mov
adc
rorb
adc
shrl
mov
mov
out
jmp
and
mov
ffreep
push
adc
pop
jmp
and
inc
pop
jg
push
add
mov
lret
cld
hlt
and
or
movsb
es
xchg
shlb
push
add
int3
std
xchg
gs
fdivr
insb
push
out
rcll
mov
hlt
roll
ficoms
das
xchg
pop
or
bound
test
mov
pop
mov
or
sub
mov
mov
xor
into
pop
pop
sbb
push
fdivs
xchg
mov
pop
xlat
adc
sub
insl
pop
or
scas
aas
sti
pop
xor
and
xor
push
or
push
js
idiv
iret
pop
mov
xchg
sub
sub
orb
es
insb
add
inc
jbe
adc
dec
in
es
pushf
rclb
aas
and
pop
ljmp
mov
add
or
pushf
add
sahf
dec
or
ljmp
popf
lods
adc
arpl
out
push
dec
fsqrt
jo
inc
lret
xor
mov
mov
and
sbb
jmp
iret
in
xlat
pusha
fists
fldl
sub
cmp
mov
mov
push
in
cmp
xor
xor
mov
pop
push
mov
outsb
rolb
sub
mov
cmp
jge
mov
xor
xlat
insb
aas
cld
fisubrl
or
sub
push
seto
push
jle
lcall
pop
mov
pop
test
lea
leave
lods
repnz
sbb
movsl
push
cmp
arpl
movsl
stos
cmp
lock
shll
aaa
sbb
imul
ror
mov
inc
mov
out
push
and
stos
xor
pop
aad
inc
daa
xchg
dec
xor
dec
pop
test
mov
stc
aas
into
gs
mov
in
mov
inc
ret
subl
pop
hlt
fst
and
enter
stos
out
inc
daa
mov
adc
in
imul
pop
fwait
pusha
xchg
push
push
xchg
xchg
imul
les
iret
xlat
sbb
or
xor
xchg
cs
add
outsl
rcrb
dec
jp
loopne
or
lods
xor
push
xchg
mov
pop
in
adc
popf
mov
xchg
or
pop
xchg
fsubrl
mov
mov
rolb
cwtl
arpl
mov
sbb
and
sbb
inc
ffreep
mov
out
pop
aaa
aam
sub
pop
test
pinsrw
inc
adc
imul
in
cmp
mov
sbb
inc
mov
pop
cmpsb
push
cmp
scas
std
dec
into
in
outsb
cmc
dec
outsl
jle
xor
push
xor
fldt
stc
jae
and
js
shlb
adc
mulb
cmc
daa
add
adc
sahf
pop
inc
in
jmp
ret
fsubrl
xchg
push
mov
cltd
ljmp
lock
in
movsl
in
pop
hlt
cmp
adc
and
xchg
repz
loopne
test
inc
scas
lcall
outsl
and
sub
les
push
dec
je
mov
jno
or
add
fists
mov
push
arpl
cmpsl
xor
push
aas
push
loopne
js
orl
mov
xor
imulb
and
fs
in
mov
in
cmp
repz
pop
int
scas
loope
or
sbb
push
sahf
ss
pop
inc
xchg
push
pop
idivb
in
sbb
and
mov
int3
or
xor
pop
mov
lcall
fidivrs
mov
stc
jns
sbb
loopne
xchg
or
bound
mov
cld
mov
inc
xchg
jl
push
inc
rcl
jo
jl
insl
fadd
cmp
jne
pop
ljmp
and
je
mov
mov
xchg
pop
loopne
mov
ret
cld
inc
sar
xor
mov
and
lcall
mov
call
and
scas
dec
push
into
fwait
xor
dec
test
add
jo
or
jno
lea
test
mov
in
mov
sub
imul
mov
jae
sahf
dec
mov
sub
sti
mull
mov
adc
scas
mov
pushf
mov
cmp
dec
ret
mov
imul
shll
mov
mov
ds
jmp
negl
sub
aam
dec
movsl
mov
push
add
mov
sti
mov
scas
and
add
push
jecxz
xchg
mov
push
adc
mov
mov
pop
mov
lods
hlt
notl
lods
fs
sbb
in
jp
sbb
cmpb
pop
sbb
stos
fsubs
sub
dec
add
ss
xchg
jmp
jecxz
xchg
sbb
xor
sti
jge
shll
xchg
movsb
outsb
mov
aam
stos
sbb
adc
ffreep
sub
cmpsb
cwtl
es
ret
sbb
jne
cmpsb
jne
lret
mov
bound
sub
jne
push
xor
push
decb
inc
dec
cmc
push
pop
movsb
or
arpl
idiv
rcll
pop
fisubrl
add
lods
adc
imul
in
call
sti
push
xor
stos
xchg
gs
adc
mov
push
push
add
and
dec
bound
push
jg
push
xlat
bound
jmp
cmpsl
and
jnp
popf
dec
inc
push
cmpsb
lahf
pop
cmc
lock
jbe
xor
add
dec
lock
bound
shl
pop
fcompl
lcall
dec
sub
add
or
out
pop
lcall
aaa
lock
add
push
mov
call
and
mov
fisttpl
call
into
dec
jg
shrl
insl
mov
aad
adc
jl
fs
popf
sub
out
mov
mov
mov
sbb
test
cltd
lahf
aad
leave
jecxz
fst
loope
outsl
xlat
and
fstl
loope
lea
xchg
stos
bound
jge
jmp
scas
adc
and
pop
movsb
iret
out
pop
bound
pusha
cmp
cwtl
stos
shlb
repnz
out
fisubs
in
or
int
shll
and
cmp
mov
push
mov
repnz
pop
js
ret
xor
cmp
out
lock
pop
fdivrl
jns
je
mov
pop
dec
fidivs
mov
adc
dec
ds
or
pop
inc
lahf
cmpb
ss
aad
xor
jge
jb
imul
xor
push
mov
add
rorb
ficoms
shlb
mov
add
pop
lds
out
pop
out
pop
test
sbb
sbb
nop
insl
sbb
push
fdivs
cmp
fsubs
nop
imul
fwait
mov
push
mov
or
mov
sbb
cmp
jge
inc
stos
sub
ret
lock
mov
mov
fidivl
js
ss
xchg
push
add
push
mov
add
aas
cwtl
into
ret
add
jmp
int
int
mov
popf
inc
lock
adc
rclb
adc
mov
mov
clc
push
int
add
mov
pop
sub
mov
clc
dec
push
shll
push
subl
adc
or
mov
jmpw
dec
jmp
or
pop
test
pusha
mov
fstl
bound
out
mov
push
arpl
ljmp
push
mov
add
imul
popa
cmp
fs
push
les
dec
mov
lods
ss
pop
push
shr
xchg
leave
idivl
xlat
or
add
mov
push
frstor
insb
test
add
js
repnz
pop
orl
push
aam
sub
shl
adc
mov
jecxz
adc
movl
and
dec
pop
addr16
outsl
xor
push
subl
sbb
in
dec
sbb
dec
test
pop
sbb
xor
ljmp
leave
das
jo
push
dec
ret
jmp
clc
adc
pop
cmp
fsub
mov
adc
push
mov
je,pn
pop
xor
xor
call
xchg
pop
divb
aam
mov
push
outsl
push
repz
or
fisubl
int3
sub
add
cmp
mov
dec
sub
daa
and
and
pop
popa
mov
jnp
dec
mov
jo
cwtl
mov
add
add
xlat
xchg
lds
push
xor
out
data16
pop
fwait
inc
cmp
addr16
adcl
int3
jo
bnd
push
and
repz
subb
cmp
lock
shr
mov
js
adc
std
mov
icebp
lds
inc
loopne
jo
inc
mov
dec
push
bound
xor
cmp
inc
xchg
or
xchg
in
xor
adc
ja
dec
test
inc
sbb
xor
lahf
xor
movsl
mov
sub
inc
push
mov
add
jo
mov
and
jne
or
movsl
adc
jmp
pop
sahf
outsb
jno
mov
filds
cmp
push
into
jb
dec
cli
adc
ret
fistpl
in
pop
out
inc
popa
and
gs
test
dec
cli
xchg
jecxz
in
sti
lods
xchg
mov
call
stos
xchg
and
jl
sbb
cld
scas
or
mov
inc
in
xor
andl
loopne
cmp
test
fwait
mov
aam
jo
xorl
mov
push
test
push
das
cmp
popf
aad
fsub
pop
in
or
dec
mov
stos
cwtl
mov
dec
mov
dec
aas
addr16
and
in
fsubrl
jmp
cld
jg
jmp
in
mov
scas
pslld
insl
stos
leave
sub
mov
lods
sub
lods
notb
outsb
aaa
pop
dec
loop
mov
ret
fildll
icebp
push
push
push
in
mov
dec
xchg
sub
push
lret
or
stos
or
adc
mov
or
pop
subb
dec
dec
jbe
int3
hlt
lock
adc
jmp
divb
push
cs
fst
or
and
push
or
mov
pop
push
lret
inc
push
je
fisttps
add
cmp
inc
mov
xlat
lcall
mov
test
lret
je
movl
xchg
xor
and
mov
outsl
loope
sbbb
jo
dec
sub
hlt
rolb
repnz
mov
std
mov
pop
pop
insl
pop
lock
leave
lea
std
lahf
jmp
adc
lcall
inc
jmp
je
mov
fcmovu
sub
jmp
add
inc
inc
cmp
inc
pop
push
xlat
sub
dec
stos
or
hlt
add
insl
into
shll
xchg
inc
shlb
jecxz
es
mov
in
dec
and
mov
cmp
lods
dec
pop
mov
ss
fsubrp
jbe
add
test
push
fcmovu
movsl
nop
xchg
adc
lods
int
js
and
mov
sub
fistps
push
aam
and
pop
mov
cmp
int
fs
pop
call
pop
shl
inc
cmp
mov
sarl
xchg
pop
pushf
out
add
push
pop
in
out
push
inc
or
lods
pop
or
stc
lahf
icebp
and
xor
jp
out
sbb
punpckhbw
jl
adc
lock
in
lcall
scas
lock
and
xchg
mov
dec
mov
cmp
sbb
arpl
xor
sbb
push
pop
into
sub
les
xor
push
xchg
iret
sti
push
cmpb
sbb
aad
dec
sbb
and
jno
mov
shl
sbb
test
sub
jl
sbb
cmpsb
inc
dec
test
mov
inc
mov
jge
sub
mov
dec
mov
mov
pop
iret
lea
mov
fidivrl
pop
mov
sub
or
and
jmp
xchg
or
sbb
cltd
cmc
xchg
je
and
xor
inc
leave
jno
insl
imul
mov
mov
inc
stos
shl
add
adc
loop
pop
or
daa
pop
inc
fmuls
sub
inc
bound
shr
dec
xchg
cmp
sahf
pusha
xor
fldt
mov
out
stc
push
cmp
shl
cwtl
dec
ret
aad
icebp
out
lock
mov
rorb
jbe
nop
shr
mov
jo
lock
xchg
addr16
repnz
fwait
dec
inc
imul
sbb
cmp
dec
rol
inc
cmp
push
add
push
xor
dec
xor
aaa
jl
cmp
in
test
out
andb
mov
xchg
xchg
mov
xchg
inc
cmpsb
enter
xchg
xor
es
add
imul
ds
cmc
and
mov
mov
test
lcall
and
in
mov
jp
and
push
cmp
stos
push
ret
test
push
repnz
rclb
ret
push
jg
xchg
sub
loop
popa
xchg
or
fldl
mov
and
das
popa
enter
daa
sub
jp
leave
sbb
dec
test
ficompl
into
aam
jo
repz
int3
push
dec
jmp
xor
mov
sub
in
mov
and
dec
testl
add
cmc
sahf
xor
test
xor
mov
fidivl
or
dec
mov
lock
mov
sub
adc
adc
test
insb
outsl
dec
add
adc
add
mov
adc
adc
ror
das
fs
fcoml
push
inc
jle
xchg
imul
push
popf
inc
js
sarl
xorb
je
push
and
xor
xchg
sub
pushf
adc
pop
mov
sarb
add
ja
mov
dec
jl
mov
or
aam
popf
cmpsb
xchg
aad
pop
dec
mov
push
scas
les
sub
div
cmpsl
mov
jg
xor
cmp
inc
fcoms
xor
enter
sbb
jge
pusha
ljmp
ret
outsl
out
jns
xor
cmp
inc
sahf
ret
jno
xchg
add
sbb
sbb
aaa
xor
jo
xchg
sub
leave
mov
push
or
icebp
xchg
ss
fcomip
push
aad
and
push
cmp
cmp
mov
dec
imul
cli
inc
lods
jns
mov
jno
or
imul
cmp
pop
or
scas
idivl
sbb
incb
adc
inc
dec
xchg
popf
cs
xlat
cmp
or
cmc
scas
fldcw
sub
cmpsb
std
outsl
cld
lret
mov
push
sub
mov
ret
out
addr16
xor
aad
push
lock
ret
mov
sbb
xor
popf
pop
gs
cmc
lea
sahf
pop
stc
xchg
out
mov
xor
dec
push
or
ret
push
sahf
push
inc
xor
jp
add
out
out
andl
jg
add
test
inc
adc
sub
or
jp
sbb
stos
cmp
inc
mov
dec
lahf
mov
rcll
lea
lret
int
pop
test
push
stos
lods
adc
mov
cmp
ljmp
cmp
leave
mov
lret
push
xchg
inc
out
mov
cs
insl
mov
mov
in
mov
mov
mov
mov
movsb
aad
into
jo
mov
mov
or
insl
cmpsl
xor
cmp
movsb
ret
push
mov
mov
rolb
and
jb
adc
aam
popf
mov
ss
sub
fwait
push
mov
hlt
shlb
icebp
jl
in
ljmp
lahf
inc
or
int
hlt
lcall
mov
fisubl
or
aaa
sub
or
inc
ret
and
sbb
ss
cld
or
add
adc
jmp
xor
add
adc
pop
mov
clc
mov
push
mov
push
cmp
aaa
push
cli
movsb
add
dec
out
lea
pop
test
adc
or
push
call
add
xlat
frstor
xchg
popf
pop
sub
mov
out
mov
add
in
testl
js
push
push
dec
rcll
pop
fstp
aaa
mul
insb
lcall
dec
cmc
jnp
rcl
hlt
mov
das
mov
int3
jb
jmp
stc
sbb
pop
push
loopne
fnstsw
or
outsl
jmp
push
cli
mov
mov
xchg
pop
shrl
mov
push
sahf
xor
and
sub
add
sbb
jnp
xchg
or
mov
test
cwtl
xor
sbb
rcrl
sub
rorl
cltd
pop
xor
es
xchg
lock
test
push
les
lock
sti
mov
dec
fs
bound
sahf
sub
adc
cmc
fwait
addr16
mov
cmp
lcall
fsubrs
mov
pop
and
mov
iret
mov
mov
mov
loop
xor
dec
adc
ror
popa
xchg
repz
pop
cld
pop
mov
lock
loop
cmpsl
and
idivb
out
leave
xorl
and
xchg
addr16
adc
cmpsb
rorl
cmp
sub
insl
mov
outsl
mov
xorl
mov
in
int3
sahf
push
xchg
scas
dec
mov
xchg
ss
aaa
icebp
movsl
adc
fdivrs
adc
ret
insb
pop
cld
clc
das
outsb
out
sub
sub
or
bsr
in
pop
jecxz
sub
adc
repnz
jmp
stc
shlb
ljmp
sbb
les
dec
into
xor
mov
cmpsb
data16
in
aam
or
mov
call
cmpsl
roll
or
bound
mov
sarl
in
in
jecxz
outsl
sub
or
aam
mov
inc
fdivrp
pusha
lds
cld
xor
mov
jne
shll
lret
mov
or
nop
mov
in
pop
dec
or
clc
mov
add
lods
into
jge
mov
push
in
sub
std
addr16
mov
push
sub
or
subl
test
fstpt
xchg
xchg
sbbl
or
je
dec
dec
neg
fistl
aaa
push
cmp
das
mov
xchg
les
or
add
outsl
pop
cmpl
lret
add
push
fimuls
mov
dec
data16
movups
pop
xchg
pop
mov
adc
and
inc
daa
pusha
bound
mov
or
mov
mov
cmp
xor
inc
or
jmp
dec
add
hlt
mov
fisttps
lret
lods
adc
pop
fmul
sbb
sub
stos
push
fdivs
lock
xchg
push
outsb
inc
mov
inc
add
jo
aaa
inc
push
stos
sub
inc
fdiv
out
rcrb
sbbb
addb
int3
push
pop
push
lret
fwait
jmp
hlt
std
stc
subl
rclb
adc
cltd
sbb
clc
or
mov
push
stc
and
lahf
call
jl
jb
mov
daa
nop
xor
daa
addl
in
loop
popl
inc
ds
sarl
jmp
nop
sub
mov
dec
add
cmpsb
sub
add
mov
cmp
jecxz
in
ss
jne
xchg
xchg
jbe
sbb
and
jmp
aad
jg
jb
jo
pusha
xchg
xchg
insl
out
out
jg
mov
or
xchg
jnp
sub
sbbb
cmc
repz
stos
inc
ja
idivb
shll
movsl
mov
test
push
jns
adc
out
mov
lahf
jo
jp
ljmp
sub
hlt
icebp
sbb
jns
push
test
decb
xlat
inc
in
das
jmp
imul
adc
xchg
into
mov
in
call
push
inc
xchg
mov
mov
cmpsl
sub
ret
or
add
test
popa
pop
push
jp
outsl
movntq
xchg
test
ret
xor
inc
ljmp
pushf
repnz
sets
add
xchg
insl
insb
dec
int
xor
jmp
and
mov
lcall
jg
dec
clc
fdivs
adc
lds
loop
into
test
xor
jle
push
in
push
int
aad
inc
cmp
pop
mov
insb
mov
in
in
jmp
icebp
sub
scas
sub
scas
xchg
push
stc
jne
cmp
loope
lods
xor
data16
mov
jbe
jg
aaa
loop
push
popa
fbstp
mov
or
loop
dec
xor
jl
pop
and
imul
cmpsb
in
and
and
pusha
daa
or
cmp
loop
jle
loop
jmp
aam
pop
mov
pop
xchg
test
and
pushf
push
sub
or
aas
xor
and
rcr
popa
xchg
ret
mov
and
cmpsl
sbbl
fdivs
shrb
pop
dec
pop
mov
mov
mov
in
es
pop
test
test
fsubrs
fildl
or
jae
adc
jns
inc
push
jecxz
lret
jge
dec
xor
add
pop
jae
add
mov
fistpll
mov
dec
jp
xchg
sahf
fbld
int3
into
mov
negb
enter
adc
inc
pop
jp
pop
pop
cld
aas
dec
leave
add
pop
mov
into
adc
xchg
dec
repz
ficoml
aaa
hlt
xchg
cs
fs
add
push
inc
sub
and
into
negl
in
mov
insl
push
adc
inc
data16
xor
inc
sub
loop
lea
iret
jp
fdiv
sbb
pop
pop
mov
xchg
sbb
sbb
mov
cmp
les
insb
adc
xlat
sub
inc
mov
insl
pop
mov
lea
lds
push
sub
push
jnp
mov
or
shll
mov
lods
jg
sahf
in
pop
add
and
addb
in
sbb
lcall
mov
pop
por
bound
ret
push
movsb
test
push
xchg
mov
out
cmpb
ljmp
adc
adc
inc
dec
lods
mov
mov
test
insb
movsb
push
cmp
sbb
mov
push
pop
ljmp
ja
gs
mov
inc
out
scas
xor
cld
adc
shlb
pop
gs
mov
add
cld
adcl
mov
push
out
insl
rorl
adc
pop
repnz
adc
stos
or
cmp
movsl
sarl
into
pop
shlb
in
fldenv
cmp
cmp
push
ret
sub
fwait
orl
popf
mov
loope
addr16
lret
push
inc
out
movsb
adc
andl
ss
scas
in
adc
clc
rol
pop
lret
mov
adcl
ljmp
xchg
mov
fistpl
fs
scas
shrl
inc
nop
pop
cltd
xchg
les
mov
sbb
inc
mov
loope
cli
out
cmp
push
movsl
js
mov
std
mov
lcall
jnp
addr16
cltd
aaa
fwait
mov
pop
jp
test
pop
mov
fidivrl
or
das
push
push
sbb
movsl
xchg
or
mov
adc
lret
xor
pushf
les
pop
out
jmp
jno
dec
cmpsl
xchg
imul
and
nop
sahf
clc
jb
ret
mov
pop
push
nop
ja
imul
es
and
jb
call
xor
popf
pop
mov
mov
scas
std
cmp
cmp
int
inc
fwait
mov
scas
fs
arpl
and
xchg
repnz
mov
mov
or
jmp
mov
in
stos
stc
dec
into
push
xchg
pushf
scas
test
lahf
sub
nop
mov
cmp
repnz
jecxz
xor
inc
enter
dec
das
cltd
dec
into
pop
push
and
mov
psubd
mov
test
cmp
push
adc
dec
xlat
loopne
adc
lea
es
imul
sub
jbe
gs
das
fdivr
fsubs
loope
sbb
inc
loope
pop
push
in
enter
jb
jbe
mov
inc
decl
gs
fdiv
out
addr16
jp
in
mov
mov
std
mov
mov
pop
push
ficompl
dec
xchg
xor
and
jle
mov
and
jo
cmpsb
dec
sahf
out
ljmp
subb
mov
add
imul
clc
movsl
sub
or
int
pop
jno
and
insl
jno
in
pop
add
pop
push
jae
sbb
jne
push
pop
xor
sbb
sahf
xchg
aam
adc
popf
fistpll
push
xchg
push
xor
mov
wbinvd
lret
cmpsb
outsb
mov
sarl
rcr
jp
mov
leave
in
pushf
cmp
ret
and
rolb
dec
in
mov
out
out
cmpb
cmc
inc
pop
mov
mov
aad
adc
in
dec
sub
jp
js
clc
and
rorl
fstpl
jne
xchg
cli
xor
imul
sub
inc
pop
inc
mov
pop
cmpps
push
mov
mov
and
jne
std
filds
and
fsts
or
mov
nop
cmpsl
ja
jl
je
mov
pop
push
decl
stos
xchg
pop
mov
pop
dec
mov
das
sub
xor
sbb
xlat
pop
add
dec
xchg
mov
mov
pop
mov
xor
sub
jne
mov
mov
sub
aad
jb
fwait
xor
jmp
addl
test
int3
xor
sbb
das
push
add
and
mov
mov
je
push
mov
or
dec
push
push
orl
jnp
jecxz
jne
inc
mov
dec
movsb
rcll
pop
es
out
cmp
or
sub
aad
push
bound
popa
pop
jl
les
mov
jmp
les
or
push
popf
cli
mov
jl
jge
cmp
adc
dec
add
popf
lods
repz
rcrb
xor
roll
sub
out
leave
push
mov
and
pushf
xchg
sbb
popa
add
loope
in
jbe
lret
sahf
cld
imul
loopne
sbb
push
pusha
inc
flds
xor
hlt
insb
or
in
loop
cli
mov
popf
sbb
mov
outsb
repnz
push
inc
cmp
xor
test
mov
push
mov
inc
jns
bound
sub
add
scas
sbb
pop
stos
leave
fdivs
cld
shlb
les
enter
rolb
mov
mov
xor
push
movsb
pop
dec
xchg
dec
dec
jle
lock
jmp
mov
arpl
xor
jns
rcl
xchg
dec
ret
cmpsb
orb
lret
mov
cltd
je
int
fiaddl
or
scas
outsl
out
or
xchg
pop
lret
insb
les
js
rcrb
xchg
ljmp
push
jb
rcrb
insb
push
xchg
cmpl
shlb
push
push
out
jecxz
sahf
pop
push
pop
aad
inc
add
xor
lds
cmpsb
fcoml
jmp
popf
pop
aad
or
hlt
jae
sub
and
mov
xor
es
mov
shrb
inc
dec
xor
orl
push
add
jae,pn
cld
dec
aaa
cmc
iret
add
push
pushf
ds
mov
outsl
or
cmpsl
ss
cli
sbb
and
lahf
insl
fldenv
in
mov
cmp
mov
lahf
inc
jns
sbbl
bound
in
cmp
xchg
push
sub
movsl
arpl
dec
mov
and
dec
inc
in
push
insb
ret
dec
rclb
les
orb
out
wrmsr
repnz
cwtl
xlat
or
add
push
xchg
lahf
inc
ror
sbb
in
pop
push
imull
adc
push
dec
mov
pusha
lock
adc
fld
xor
shlb
push
mov
or
insb
sub
sbb
adc
push
mov
adc
mov
and
pop
fs
lahf
add
pop
sbb
ljmp
dec
sbb
mov
loop
fsubl
inc
mov
dec
mull
leave
stos
mov
xor
ss
xchg
dec
testl
push
icebp
out
and
and
push
jl
or
or
mov
test
jnp
push
pop
lods
mov
outsl
pop
aam
mov
or
push
jmp
call
mov
mov
cmc
insb
or
xor
and
iret
enter
jmp
xchg
mov
pop
or
out
data16
in
xor
loop
mov
ja
incl
stos
jbe
ret
sbb
push
paddw
xor
sub
mov
clc
daa
ss
adc
or
xor
adc
nop
cmp
xchg
jb
cld
fcmovnb
in
xchg
adc
jbe
out
out
outsb
arpl
call
ljmp
lret
pop
insl
loop
sti
les
movsl
dec
mov
add
or
jbe
je
add
js
sti
stc
lock
psubb
test
jmp
cmp
mov
mov
mov
pop
es
cs
mov
jb
call
lret
aas
jge
push
pop
ljmp
push
lods
xor
sbb
loop
xchg
popf
jns
test
add
jb
cmp
pop
std
ret
aam
sub
xchg
xchg
ss
out
inc
inc
test
and
shrl
aas
jl
call
shlb
sti
pusha
push
xor
ljmp
xchg
and
jb
mov
stos
or
inc
and
and
mov
mov
xchg
and
sub
dec
sbb
ss
fiadds
lock
stos
jmp
outsl
push
mov
adc
mov
in
out
push
sub
gs
fsubrs
or
add
and
mov
mov
pop
stos
loopne
jge
inc
insl
mov
stos
test
sbb
push
in
ja
pop
fistl
loope
std
inc
int
push
cmp
and
ud1
dec
pop
mov
sbb
mov
ror
mov
lods
xor
xor
stos
imul
push
jo
test
in
sarb
je
mov
mov
xchg
sub
shlb
add
ret
mov
movsb
inc
inc
sbb
and
mov
shlb
movsl
jbe
jns
call
addl
jno
xchg
pop
jmp
out
pop
mov
pop
rolb
inc
stc
int3
push
negb
pop
sahf
inc
pop
pop
sub
xchg
cli
push
add
iret
aaa
push
das
imul
add
das
dec
mov
fwait
xor
dec
nop
cltd
mov
iret
rol
cmp
pushl
data16
dec
insl
cs
cmp
or
outsb
jge
cmp
rcll
jp
mov
loop
addr16
pop
je
shll
sbb
popf
inc
mov
add
sbb
stos
jmp
fsts
loop
jbe
test
hlt
lret
outsl
cmp
leave
ds
jno
sbb
dec
jge
xchg
out
lock
fnsave
bound
imul
fbstp
and
in
and
cltd
inc
push
enter
mov
inc
xchg
and
mov
mov
mov
push
xchg
enter
push
test
test
insl
jno
aad
stc
daa
push
dec
sbb
jno
daa
fwait
pop
and
dec
lret
push
pop
pop
pop
mov
aam
enter
jb
jmp
mov
loope
aad
add
and
jmp
pusha
xchg
mov
fistpll
push
pop
jne
mov
inc
inc
js
test
scas
inc
test
add
scas
js
imul
sbb
inc
pop
jge
mov
sti
pop
adc
jmp
sti
shr
add
fldcw
in
dec
lock
pop
call
jg
or
jne
push
jo
jg
push
pop
xchg
jne
and
add
sub
jbe
repz
mov
or
fisttpl
cmpl
push
jno
ljmp
es
shll
out
dec
mov
mov
scas
mov
inc
into
mov
cmpsl
fs
mov
popa
test
iret
popa
stc
dec
stos
push
aaa
or
push
out
call
pop
outsl
mov
mov
insb
xlat
add
outsl
cli
dec
add
pop
fcomi
lods
inc
xchg
pop
rorl
imul
jno
push
mov
in
dec
gs
lds
pop
lret
push
jle
imul
or
addr16
enter
rorb
and
aas
or
add
mov
call
mov
mov
aas
test
cs
insb
lcall
das
inc
jl
in
mov
xchg
int
pop
dec
cmc
movsb
int3
xor
or
mov
mov
mov
and
cmp
add
sbb
xchg
out
cmpsb
add
inc
and
cld
aam
outsl
bnd
mov
push
inc
sahf
mov
inc
inc
jp
mov
mov
cmp
and
scas
sbb
xchg
into
sbb
jmp
je
xlat
fnstcw
das
dec
int3
push
mov
jge
lea
xchg
gs
dec
push
in
or
loope
aaa
jl
call
decl
aad
dec
lods
pusha
repz
push
mov
xor
add
and
mov
pop
mov
add
push
and
aaa
std
cmp
push
sar
insb
incl
leave
adc
mov
cmp
std
lret
mov
fstl
stos
push
int
pop
pop
or
push
push
lock
xlat
or
xor
sahf
mov
shl
pushf
dec
cld
pop
addl
and
and
movsl
pop
push
arpl
out
outsl
popf
dec
push
lock
lret
cmp
jne
and
fdivs
lods
pusha
arpl
not
sti
dec
jne
xchg
inc
adc
in
mov
lret
outsl
sbb
lahf
loop
lods
cmc
sub
mov
movsl
lret
aaa
leave
jae
sub
pop
xchg
cmp
imul
dec
loope
jge
cmp
push
xor
mov
ss
mov
push
jp
jge
lock
je
icebp
jmp
pop
or
xchg
in
jb
mov
lock
stos
jnp
mov
xchg
mov
mov
dec
bnd
xor
dec
loop
push
cs
es
push
add
call
enter
pop
test
inc
pop
cmp
push
and
push
clc
adc
cmp
inc
test
pop
test
cwtl
iret
test
sub
jbe
lcall
add
xchg
add
out
sbb
jle
sahf
flds
repz
inc
test
inc
fstpl
dec
pop
jmp
fsubr
out
shrb
jecxz
imul
ss
push
rol
popl
cwtl
je
nop
mov
push
divb
mov
xor
sub
cmc
enter
ss
popf
addb
les
lock
popf
and
push
push
pop
jle
imul
aam
or
adc
pop
incb
xchg
add
add
negb
mov
mov
movsl
scas
outsl
lods
repz
adc
and
inc
cld
sbb
xchg
notb
scas
jmp
lock
cwtl
shlb
rcl
fimuls
push
icebp
or
aam
add
aaa
test
dec
inc
stos
cmpsl
inc
mov
inc
sahf
mov
adc
or
xor
jns
das
sbb
and
push
adcl
test
pushf
out
ja
test
sbb
icebp
xchg
push
mov
jne
xor
lds
je
pop
jge
cld
mov
sbb
into
mov
mov
imul
shrb
ret
mov
gs
mov
push
fnstcw
ljmp
mov
dec
inc
out
cmpsl
sti
mov
icebp
fcoml
cmp
mov
mov
sub
cmpsb
xchg
nop
out
xchg
mov
es
aas
jmp
inc
aam
dec
jae
push
mov
loope
inc
dec
or
or
xor
les
aam
jne
test
sahf
sub
mov
jmp
sbb
pop
daa
pop
inc
filds
test
push
loope
scas
enter
ficoml
repnz
shlb
sbb
lods
xchg
dec
adc
cs
xchg
aam
mov
xchg
xchg
adc
lcall
rcrb
out
and
add
aas
arpl
jo
dec
add
jo
ret
insl
add
ret
fisubrl
mov
popa
loop
add
bound
pop
ja
push
aaa
xor
stos
out
in
inc
fwait
ret
and
mov
mov
inc
mov
fmul
enter
lods
scas
in
push
cmp
arpl
in
loop
mov
das
mov
and
or
or
fisubl
stc
jp
push
loope
lret
jb
daa
push
shlb
sbb
adc
test
lret
mov
push
out
adc
movsb
xor
int3
pop
adc
xchg
cmp
mov
jg
pop
jno
inc
mov
outsl
sub
aas
mov
mov
add
lcall
mov
out
jo
push
xchg
ret
je
in
shlb
fbstp
rcrl
fwait
repnz
ss
push
fwait
pushf
xor
push
in
jmp
ret
add
and
mov
mov
pop
test
repnz
stc
lcall
aaa
mov
daa
and
xchg
or
jecxz
ds
out
inc
shrb
adc
add
sub
dec
outsl
inc
rcll
iret
decb
xor
push
or
adc
ret
int3
mov
push
mov
loope
mov
mul
pop
lds
inc
cltd
in
add
scas
adc
mov
sub
push
sbb
dec
sub
data16
sarl
xabort
mov
cmpsl
fidivrs
push
mov
sarl
cld
jo
and
incl
xchg
push
aam
ret
nop
xchg
mov
or
fwait
dec
push
sbb
popf
sti
sbb
push
fcoms
xchg
mov
stc
jl
data16
inc
out
test
inc
int
int3
add
in
inc
icebp
adc
mov
mov
cs
fidivrl
mov
push
or
add
jle
add
loope
test
nop
sahf
xlat
adc
test
push
sbb
into
les
cmp
leave
xor
push
idivl
dec
sbb
cld
mov
jb
pushf
out
loopne
dec
xor
inc
cmp
ja
push
jnp
ret
es
mov
dec
daa
cvtpi2ps
dec
or
popa
rorl
cld
in
bound
cltd
fdivs
and
pop
ja
out
stc
push
and
xchg
fmul
or
mov
sub
xor
hlt
mov
jae
jae
in
movsb
pusha
cmp
mov
bound
mov
call
push
mov
movb
pop
bound
lds
mov
jnp
mov
fisttps
cmp
push
mov
jns
add
xchg
jae
cmp
adc
cltd
lods
js
in
into
jnp
fisubs
xchg
or
std
jno
addr16
dec
cli
cmpsb
stos
loope
mov
pop
dec
xlat
lods
mov
xchg
jp
jecxz
mov
and
adc
lahf
arpl
mov
mov
add
dec
xor
lods
gs
sahf
ds
lods
jae
xor
or
push
xlat
mov
shll
shlb
pop
jbe
sbb
cli
jbe
in
loope
jo
ss
jge
jl
ja
stos
fistpll
jecxz
sub
popf
mov
cli
mov
inc
xchg
idiv
mov
xor
inc
adc
inc
mov
ja
or
push
stc
xor
sbb
rcr
cmpsb
and
imul
call
daa
int3
xchg
mov
sti
ds
mov
inc
or
int3
and
sarb
jle
inc
lods
mov
mov
push
add
add
stos
jmp
push
adc
xor
cli
enter
add
mov
mov
xor
bound
and
pop
lock
test
ja
bound
js
in
shll
andl
lods
in
cmpsb
stc
daa
rcrb
repz
out
popa
out
dec
cmp
push
int3
aas
div
je
repnz
xor
stos
stc
loop
mov
mov
dec
mov
outsb
dec
aaa
mov
dec
sub
pop
stos
lahf
clc
les
insl
call
repz
nop
xchg
sub
mov
sub
cmp
or
scas
xchg
test
inc
fwait
sbb
sub
je
movsl
gs
mov
scas
xchg
out
pop
fmuls
pushf
andb
mov
pop
add
lods
sti
fimuls
or
popf
adc
mov
xchg
or
sbb
inc
outsl
or
sbb
pop
loope
cmp
inc
push
inc
jbe
xor
mov
adc
out
je
cmp
add
mov
or
mov
inc
insl
aaa
push
jbe
clc
pop
pop
cld
popf
cmp
psadbw
lcall
or
jp
and
mov
pop
mov
fidivrl
scas
add
mov
xchg
cmp
cld
outsb
test
add
out
cld
test
std
sti
sbb
inc
add
in
aaa
pop
mov
lcall
in
outsl
mov
stc
jo
mov
icebp
mov
outsl
cmp
lea
pusha
push
fcomip
mov
mov
and
leave
popf
jnp
leave
js
fists
xchg
in
jmp
out
xor
leave
sti
add
and
and
jnp
scas
and
jmp
and
cmp
ret
jns
push
pop
out
mulb
pop
rorb
mov
jmp
dec
movsl
push
adc
subb
pop
cmp
push
leave
push
and
pop
xchg
dec
mov
xor
scas
dec
and
jae
test
test
or
sub
fsubrs
out
xor
jns
lods
prefetch
cmp
mov
sub
xchg
hlt
sti
add
dec
cmpsl
hlt
add
fisubs
pop
adc
mov
fimuls
aam
in
fsub
fsubrl
out
or
divl
xchg
inc
xor
xchg
loope
cmp
lods
cmp
popf
push
int3
andl
cmp
push
mov
push
scas
mov
inc
mov
call
fisubs
add
je
bound
or
ret
icebp
cmpsl
mov
or
mov
jns
lcall
shl
mov
mov
shrd
and
mov
mov
pop
pop
pop
or
cmp
mov
mov
xchg
in
pop
flds
loop
and
lcall
push
mov
test
jl
push
push
stos
idivl
stc
cmp
add
or
sub
mov
sbb
xor
mov
in
add
mov
sub
clc
inc
in
out
in
pop
dec
add
inc
sub
jle
mov
pmaxub
mov
xchg
pushf
add
mov
es
sub
sub
mov
inc
adc
jnp
idiv
sbb
mov
ret
popa
divb
xchg
notb
gs
in
mov
clc
cli
negb
test
pushf
insl
ja
dec
jae
pop
lret
mov
push
jl
movsb
mov
fwait
hlt
jns
mov
cmc
jl
dec
xor
mov
decb
repnz
insb
inc
cmpsl
pop
repz
movl
je
inc
sbb
push
into
pop
mov
jno
jle
push
movsl
mov
test
inc
jb
cld
repz
pop
push
sbb
pop
xchg
cmp
sub
ret
xchg
pop
adc
adc
mov
pop
test
mov
dec
inc
pushf
bound
leave
cmc
mov
push
cmpsb
mov
jae
daa
dec
das
mov
jl
nop
mov
lods
lea
mov
shll
or
cmp
mov
iret
add
add
clc
jb
in
cmpsb
cmpsl
jle
fidivrs
and
andl
daa
ret
lods
repnz
adc
mov
and
jg
inc
mov
xchg
push
xchg
dec
call
cwtl
pop
ror
jb
lret
fcoms
push
xchg
add
xchg
ljmp
mov
mov
push
out
pop
out
dec
mov
dec
test
jg
loop
jl
cmpsb
dec
popf
pop
roll
aas
adc
pop
shlb
idivb
ss
mov
add
xchg
mov
shr
fistpll
and
lods
cltd
popf
adc
mov
sbb
sti
dec
pop
imul
jge
inc
push
inc
pop
xor
xlat
fwait
iret
lods
and
test
out
popa
adc
xchg
push
mov
ljmp
data16
push
stos
pop
ret
cmp
xor
pop
sbb
jecxz
push
dec
call
add
and
call
fs
add
inc
stc
cmp
arpl
not
adc
sub
xchg
mov
fwait
sub
add
xor
lret
adc
ret
pop
aas
aas
out
sbb
or
popa
cltd
dec
sub
shrl
lret
cli
dec
sti
bound
jle
sbb
mov
sub
stos
nop
shll
les
jl
das
xor
push
mov
loope
shl
pop
and
shll
or
mov
sub
push
nop
dec
dec
pop
imul
repz
fs
mov
sub
loop
lock
cs
add
jp
dec
add
fsubrl
mov
push
xlat
arpl
sub
dec
mov
dec
add
test
scas
jnp
jmp
sti
cli
cmp
add
mov
lahf
mov
push
sbb
and
ds
stc
xlat
es
cli
mov
jo
pusha
mov
sbb
or
scas
aaa
ret
mov
jecxz
mov
movzbl
dec
repnz
out
inc
mov
jmp
in
aaa
out
dec
es
push
sbb
mov
aam
sar
shrb
push
punpcklbw
popf
imul
adc
ja
xor
es
sub
and
test
cmp
jge
pushf
mov
adc
out
push
fcmovnb
aas
sub
jns
sub
dec
rcl
and
test
cmp
popaw
add
pop
call
dec
sub
mov
fwait
dec
and
push
or
dec
lahf
pop
adc
fldcw
popa
mov
lahf
daa
pop
ljmp
sub
pop
fwait
mov
pusha
lcall
enter
inc
xchg
xchg
clc
or
ret
repz
or
jns,pn
adc
cmpb
ret
insb
xchg
sti
dec
pop
lret
sar
mov
xchg
popa
sahf
adc
add
mov
or
imul
imul
xor
adc
dec
inc
sarl
mov
call
pop
pop
jle
adc
mov
fistps
in
mov
xor
push
jb
jp
js
sbb
xchg
mov
mov
dec
jbe
or
fstpt
pop
cmpsb
pop
cwtl
dec
cltd
ror
xchg
sub
out
stos
outsl
data16
sahf
and
mov
mov
test
jge,pt
sub
popf
rcrb
dec
cmp
ret
gs
or
out
pop
sub
mov
inc
sbb
or
ficompl
aad
mov
iret
add
sub
and
and
stos
pop
mov
mov
movsb
pop
ret
je
sub
pushf
mov
adc
xor
jmp
xor
jge
loopne
pop
outsb
dec
mov
or
add
push
fcoml
cmpsl
test
lods
stos
pushw
jp
arpl
sbb
mov
xor
pop
fucom
inc
pushf
shll
lahf
mov
je
les
jge
mov
xchg
repnz
ficompl
dec
xchg
hlt
out
dec
les
xor
inc
aaa
das
addr16
adc
dec
loopne
mov
xchg
cld
mov
jmp
das
test
mov
and
jle
inc
sub
lea
in
push
loop
xchg
jne
push
and
ficompl
jb
clc
ss
mov
xor
xchg
int
mov
xchg
pop
rcl
jp
inc
jne
adc
lcall
jle
cmp
mov
aas
inc
xor
mov
mov
in
xchg
inc
hlt
es
jno
scas
ja
push
mov
popa
cwtl
rclb
push
inc
mov
mov
pop
mov
les
rol
inc
idivb
add
push
fistpll
out
push
out
clc
fcomps
mov
adc
push
cmp
inc
xor
sbb
jp
stos
mov
in
cmp
or
pop
mov
ficoml
test
mov
rclb
push
add
in
out
xchg
xchg
dec
sbb
std
hlt
inc
nop
jg
mov
jns
cmpsl
or
out
int
pop
mov
ficompl
out
mov
cmp
dec
rclb
dec
dec
insb
mov
xchg
pop
outsl
enter
orl
pop
xchg
jb
hlt
fcmovb
popa
aam
mov
mov
dec
and
dec
out
std
out
or
inc
mov
in
mov
scas
lock
ficomps
pushf
sti
mov
pop
dec
insl
and
imul
mov
jns
cmovs
and
incb
sti
mov
lret
ja
mulb
repz
inc
inc
or
mov
mov
xor
ficomps
bound
inc
mov
jne
and
xchg
and
into
xor
mov
mov
sbbb
add
dec
adc
jge
sbb
sbb
jns
xchg
sbb
jns
cmpsb
imul
out
mov
jl
gs
push
push
insl
movsl
jle
push
fnsave
push
mov
fisubrs
mov
jbe
cmp
inc
cmpsl
lock
shrl
pop
test
cltd
movl
xchg
sahf
jmp
and
cmp
icebp
add
jo
fstpt
mov
mov
insl
jmp
cmc
lcall
call
sbb
xchg
dec
push
push
mov
mov
outsb
push
jno
fbld
icebp
adc
push
sub
sub
outsb
and
sub
pop
je,pt
cmpsl
in
lea
xor
jecxz
sbb
pop
xor
and
pop
jg
dec
jmp
xor
push
out
add
xor
add
testb
dec
sbb
in
push
push
bound
xchg
mov
in
jae
test
int3
jo
psubsb
xor
push
or
rcrb
push
fwait
pop
or
sub
lock
xchg
mov
scas
push
add
mov
ds
lods
jb
inc
sti
dec
mov
mov
mov
lock
stc
test
mov
ljmp
xor
loop
jnp
icebp
sub
pop
into
sub
adc
popf
sbb
jge
push
jmp
insl
jns
testl
pop
gs
ret
fsubrl
cmp
loopne
aad
js
push
sarb
and
jbe
xor
inc
sub
adc
cmp
adc
push
push
test
xor
je
sahf
loopne
xor
lock
mov
xchg
mov
push
lret
fsubrp
test
int
inc
xor
lahf
sarl
test
push
std
push
sarb
lock
ja
cltd
push
xor
hlt
int3
and
fnop
in
leave
inc
into
cmp
jg
aad
adc
test
aaa
xchg
push
mov
ss
mov
lea
pop
outsl
or
int3
pop
pop
insb
movsl
or
sub
addb
mov
sahf
xchg
pusha
xchg
call
imul
in
data16
adc
mov
ret
mov
mov
iret
and
rclb
je
add
and
xchg
or
ret
es
rol
pop
enter
pop
mov
cwtl
notb
fstl
and
mov
movsl
ret
add
addr16
mov
xchg
adc
pushf
jne
popf
inc
pop
push
sbb
xchg
loopne
mov
cltd
sub
leave
xchg
cmpsb
jne
movaps
cmp
rcll
xchg
rcr
mov
call
mov
dec
push
mov
mov
adc
dec
out
test
int3
sub
dec
pushf
dec
mov
push
sub
fildll
push
mov
pop
fldenv
loopne
stos
mov
dec
push
imul
or
and
inc
mov
jp
adc
sub
adc
or
and
and
loopne
movsb
xor
jns
dec
in
mov
outsb
push
les
das
mov
lods
leave
andl
mov
or
and
xor
ret
mov
stos
push
or
bound
shrb
mov
dec
jbe
add
pop
out
mov
mov
and
jmp
data16
jae
or
xor
cmc
sbbl
fstps
out
mov
lahf
push
mov
cmp
and
in
pop
xor
fwait
xchg
mov
adc
imul
cld
sub
lret
jmp
iret
scas
adc
jecxz
xchg
gs
mov
ficoms
push
hlt
into
push
mov
sub
aam
dec
jmp
add
mov
js
test
loop
add
repnz
test
enter
mov
es
test
adc
lahf
popa
bound
adc
dec
stc
jae
jae
call
jbe
lahf
pop
test
push
sbb
dec
jbe
mov
push
and
pop
mov
lret
int3
mov
and
inc
mov
push
sub
clc
movl
in
xchg
sbb
sti
outsl
jo
jmp
inc
fld
sbb
test
and
and
mov
imul
push
fldl
cmp
sbb
inc
mov
push
mov
loope
inc
xchg
sub
xchg
add
cmc
inc
hlt
push
addr16
push
jne
negb
iret
out
std
mov
jecxz
mov
in
cmp
fnstenv
push
sbb
adcb
inc
add
stc
and
or
dec
mov
insl
push
and
cmp
fisubrs
in
inc
pop
xor
aas
xchg
or
je
or
jecxz
push
sbb
jl
call
mov
xchg
leave
loope
dec
push
fwait
adc
rorb
xchg
dec
cld
pop
lcall
unpcklps
jne
xor
sub
lahf
roll
test
and
bound
pop
cmc
jle
jbe
sub
out
ja
mov
pop
lcall
fstl
mov
and
mov
lahf
dec
pop
sbb
xchg
ficoms
sbb
cmp
pushf
insl
dec
loopne
stc
stc
mov
popa
jns
fadds
pop
and
add
daa
fsub
jge
push
aaa
enter
jae
repnz
xor
bndldx
popf
outsb
push
in
popa
push
add
dec
cmp
out
and
lret
clc
cmp
sti
ret
mov
stos
mov
push
in
fsubrl
jmp
pop
lds
and
ret
push
xchg
mov
es
sti
js
pop
xchg
popa
in
arpl
insl
in
sub
and
lret
repnz
sbb
xchg
jl
in
int3
push
stos
shll
jne,pt
cmp
outsb
aam
in
leave
sbb
pop
mov
and
std
pop
in
out
fldt
nop
cmp
lock
push
pop
xchg
sbb
and
cmp
mov
fcmovnu
add
add
addr16
jae
adc
sbb
sub
jge
imul
out
push
outsl
lcall
ficomps
pop
and
loopne
fstpt
test
les
push
jmp
out
or
add
pop
xor
jne
cmpsb
xchg
rorb
shrl
jecxz
pusha
mov
sahf
shrb
sbb
ret
mov
stc
insl
in
or
add
aaa
jle
int
sub
orl
xor
mov
sbb
scas
fimuls
shl
xchg
jl
pushf
jmp
rcrl
dec
fucomi
xchg
das
leave
int3
mov
sbb
add
je
imul
xor
push
popa
lcall
aas
lret
pop
fsubrs
mov
mov
jnp
adc
cld
adc
out
jbe
dec
adc
fadds
jbe
repnz
or
and
adc
xor
outsl
or
inc
out
jnp
sub
mov
and
aaa
xchg
addr16
cmp
popf
add
aad
clc
js
xchg
repz
out
pop
add
pop
pop
in
jecxz
cmp
mov
idivb
loope
xor
dec
mov
push
js
cmp
ja
movsl
dec
mov
aad
lret
bound
lret
or
in
icebp
push
ret
or
repz
push
ret
aam
sarb
push
jle
jp
insb
push
fcomp
insb
ret
adc
push
adc
lea
out
ficompl
dec
mov
fucomip
ds
test
js
and
cwtl
inc
or
fwait
cltd
cmp
mov
jg
mov
int3
cmpsl
adcl
mov
push
and
sbb
addr16
mov
or
add
imul
mov
dec
xchg
sbb
icebp
scas
mov
out
push
in
fistpll
mov
lea
test
push
push
push
xchg
fdiv
scas
pop
es
jg
shlb
jb
jno
out
popa
dec
cli
adc
sbb
or
out
pop
cmp
push
lret
rcrb
cwtl
pop
pop
mov
shr
mov
test
aad
xchg
in
cmpsb
cmp
hlt
dec
inc
dec
lds
lods
sbb
fistpll
mov
scas
ds
cmpsb
push
decb
cld
movsb
imul
sub
xchg
test
xchg
ret
pop
add
fcom
mov
sub
jg
adc
cli
out
adc
std
scas
cmp
push
fcomip
fsubrs
mov
push
test
mov
fs
adc
fmulp
jmp
ficompl
mov
or
adc
testl
mov
xchg
aas
out
pop
dec
mov
mov
jbe
pop
data16
mov
fistl
adc
sbbb
dec
cmp
mov
icebp
adc
rcl
xchg
push
jne
stos
adc
cmpsl
pop
cs
push
cs
aaa
imul
lds
dec
outsb
pop
pop
xor
push
leave
jno
add
pop
scas
ja
mov
or
lret
out
movsl
dec
pop
xchg
insb
mov
mov
sbb
clc
outsl
pop
jmp
mov
daa
sarl
sbb
push
inc
xor
mov
or
addr16
adc
mov
sbb
pusha
lea
add
out
idiv
push
push
adcl
sub
xorb
aas
stos
movsb
pop
xor
inc
movsl
int
pop
test
std
push
sbb
bound
xchg
jle
rcrl
add
dec
push
js
inc
jecxz
rcl
pusha
inc
ljmp
mov
push
mov
imul
pop
insb
lea
loopne
sbb
xchg
shll
push
imul
insl
int3
into
les
jnp
xchg
push
mov
ljmp
mov
lret
mov
scas
pcmpgtd
jmp
sbb
stc
popf
pop
movsl
dec
sahf
popa
push
pop
outsl
xorb
fsubs
cld
mov
mov
sub
pop
fnstenv
xor
enter
cmpsl
cli
cmp
push
fildl
jecxz
dec
shll
into
mov
jbe
stc
and
jp
inc
push
cmc
adcl
pop
mov
sub
add
iret
inc
sbb
adc
push
fbld
cmp
stc
pop
lret
bound
push
ja
pop
out
stos
data16
dec
adc
pop
push
jmp
jmp
jle
add
bound
js
pop
push
jnp
pop
nop
inc
push
mov
test
cld
sti
pop
pop
lods
insb
xchg
fmull
cmp
dec
sbbb
mov
loopne
fisubs
and
and
pop
push
jne
out
xor
fstps
inc
xor
aam
inc
mov
dec
test
int
jge
rorl
push
stos
sub
int
imul
add
out
xor
and
es
xchg
xor
mov
cmp
xor
sub
iret
inc
jno
jg
and
mov
mov
jae
aad
into
jg
push
pmulhuw
mov
or
mov
leave
dec
clc
sahf
add
mov
lret
fucomi
push
imull
popf
jno
xchg
adc
icebp
aaa
div
fildll
push
outsl
icebp
xchg
or
mov
lods
mov
cs
sti
xor
neg
insb
std
sbb
mov
out
cmpsb
push
orl
in
mov
scas
mov
lds
cmp
daa
cs
mov
adc
mov
mov
sbb
mov
xchg
int
mov
mov
jmp
shrl
xchg
push
inc
mov
sbb
mov
cmp
call
mov
pop
mov
mov
out
xchg
gs
aad
jmp
mov
and
xor
pusha
push
push
or
or
dec
int
jecxz
outsl
pop
adc
mov
mov
mov
imul
ret
dec
cmpb
cs
push
jno
sub
push
pop
inc
pop
jle
dec
out
pop
lods
dec
test
int
stc
in
mov
inc
sahf
call
loop
scas
rol
mov
and
add
and
test
fwait
orl
dec
clc
pop
enter
test
xchg
shrb
lret
and
mov
fs
shr
jg
cmp
xchg
and
push
lds
jg
lods
loop
ficoml
jge
mov
ds
popa
adc
jmp
jle
push
outsl
sahf
mov
xor
mov
xor
xchg
and
xchg
mov
pop
and
in
xchg
enter
scas
lods
dec
addl
push
jg
inc
out
jo
add
and
pop
push
mov
lret
subb
lock
sbb
shr
and
adc
rcll
popa
into
adc
cs
lods
test
dec
mov
xchg
mov
mov
ja
pop
lretw
ret
xchg
pop
negl
movsb
scas
cmpsl
xor
daa
jns
mov
in
sub
pop
test
mov
js
add
cmp
mov
aam
or
subl
add
xchg
xchg
dec
addl
inc
or
mov
xorb
arpl
icebp
adc
sahf
dec
mov
inc
cwtl
dec
imul
mov
test
mov
popf
ja
inc
sti
inc
sub
mov
xor
mov
mov
mov
lea
in
cmp
mov
push
sub
jmp
pop
outsl
cmp
dec
nop
ds
cmp
push
ficompl
mov
inc
add
pop
ss
mov
xor
jl
xor
fcoms
rcll
dec
nop
lahf
push
stos
jmp
incb
in
push
jnp
cwtl
adc
fwait
add
inc
sbb
xchg
xor
dec
adc
mov
dec
movsl
sarl
pusha
shl
ret
sbb
xor
or
popa
and
out
pop
divl
int3
loope
and
sti
xorl
pop
scas
cltd
sbb
push
je
sti
cmp
push
call
imul
jmp
mov
pop
adc
imul
outsl
pop
int
out
lahf
test
mov
sti
repnz
stc
sbb
xor
rcrb
jnp
loop
fs
fisubl
jl
cmp
inc
adc
xchg
adc
leave
jle
sub
ja
cs
psubd
inc
adc
in
sbb
daa
mov
lret
notb
adc
stos
repnz
sub
xor
cmp
iret
loop
adc
addr16
ret
pop
ss
pop
je
in
shlb
popa
jg
inc
xchg
dec
adc
mov
insb
dec
arpl
dec
sbb
push
mov
inc
inc
lahf
jb
xchg
call
negb
jl
in
and
nop
aam
insl
xchg
xor
movsb
dec
shr
roll
add
daa
in
lea
push
shlb
mov
mov
and
jmp
sbb
cmp
scas
out
dec
sub
test
inc
popa
push
lret
push
bound
fimull
mov
add
std
test
call
rcll
lea
add
dec
scas
adc
stc
data16
outsb
push
push
mov
out
mov
leave
fldl
lods
lods
int
add
ret
sbb
lahf
push
andl
jecxz
cmp
mov
popf
jae
mov
movsb
out
jecxz
mov
push
mov
loopne
sti
in
nop
mov
cli
lcall
xor
enter
cld
jmp
cltd
sub
jb
mov
mov
scas
pushf
adc
sbb
rol
sub
negb
js
lods
mov
pop
mov
sbb
push
out
pop
jl
fldl2t
imul
mov
push
ds
movsb
xor
pop
push
xor
cltd
sub
pusha
mov
je
lea
jne
iret
or
cwtl
scas
and
xchg
stc
adc
addr16
sub
sub
add
add
sbb
push
cmpsb
add
xor
xchg
sbb
div
xchg
push
aad
fldcw
jns
mov
loope
insb
repnz
dec
or
iret
outsb
and
scas
pop
sbb
sahf
pop
xchg
mov
or
add
jmp
push
and
jle
xor
shl
fildll
xchg
pop
ja
xchg
sbb
fisubl
js
mov
out
popf
jnp
sti
insb
adc
mov
scas
and
lret
xor
ret
ja
push
inc
call
pop
mov
push
mov
ljmp
pop
sub
mov
sbb
ja
adc
in
cmp
stos
clc
scas
ds
daa
inc
add
cmp
hlt
or
std
push
pop
aaa
push
faddp
lret
test
jb
mov
cmp
call
or
mov
sti
mov
jo
and
mov
add
pop
xor
aad
jmp
mov
repz
rorl
add
add
cmp
das
fs
dec
dec
int
dec
sbb
repz
ret
mov
mov
jl
ss
or
xchg
adc
mov
lret
mov
jo
add
jb
push
xlat
test
xor
cmp
sub
hlt
mov
scas
jno
in
fadd
aas
sbb
push
scas
nop
jb
shrb
cmp
cmp
icebp
cvttps2pi
outsl
icebp
sub
mov
sti
pop
lret
jp
je
mov
data16
push
jg
mov
mov
adc
or
xchg
sub
cmc
mov
and
lcall
pop
mov
pop
adc
jns
ja
xchg
cmp
pop
shr
scas
loopne
cli
mov
ds
xlat
sub
jb
push
scas
mov
out
and
adc
fimull
repnz
mov
push
mov
mov
aam
push
mov
xor
add
push
clc
enter
push
jno
js
inc
lods
mov
pop
inc
pop
dec
repnz
insb
je
and
pop
inc
out
cmp
xorl
xor
pop
dec
mov
jno
mov
push
jp
rclb
mov
jno
pushf
cmp
or
jae
ljmp
nop
stc
jge
push
jg
push
mov
mov
xor
and
adc
xor
lcall
mov
sahf
call
scas
pop
lods
or
clc
add
repnz
add
out
add
sbb
lret
and
mov
mov
iret
xchg
sbb
arpl
out
xor
lahf
mov
xchg
mov
enter
hlt
pusha
sub
sbb
mov
insb
orb
jl
lea
sub
test
dec
push
cmp
add
mov
std
xor
jae
mov
int
pop
add
das
leave
inc
cmpsl
std
stos
sub
inc
add
cmp
jmp
push
push
and
inc
cmp
cmp
lret
jbe
es
adc
push
test
adc
mov
movsb
xor
movsb
adc
pop
push
aad
xor
cmc
sarl
imul
pusha
lret
lods
add
jge
popa
mov
cmp
scas
jne
fs
inc
mov
adc
gs
call
push
scas
std
movsl
jl
loop
das
push
mov
pop
imul
jnp
ret
cmpsl
test
int3
outsl
sub
test
call
xchg
ror
mov
mov
sbb
ljmp
jne
jge
push
lret
movsl
lock
ficomps
jg
mov
pop
imul
adc
cwtl
mov
xor
mov
gs
or
test
pop
lahf
sbb
test
outsb
pusha
rcr
dec
sahf
dec
jmp
dec
dec
outsl
xor
test
cmp
add
and
add
mov
push
jl
cwtl
ficomps
jp
jns
cmp
xchg
imul
dec
jno
mov
ljmp
xlat
ds
or
gs
das
movsl
cltd
loop
jns
gs
mov
push
leave
and
jo
ja,pn
lock
mov
dec
inc
dec
jns
lods
mov
xchg
int3
popa
cmpsl
cmp
test
sbb
imul
cli
push
dec
cmp
lcall
jae
add
lea
in
repnz
pop
pop
inc
and
or
fistpll
mov
hlt
cld
add
mov
stc
divl
or
data16
pop
cmpsl
cmp
enter
test
test
mov
in
lea
lret
mov
mov
cld
sub
sahf
std
xor
add
out
pop
push
pushf
int3
icebp
push
cs
cmp
jo
das
dec
stos
cld
mov
cmc
pop
arpl
hlt
pop
stos
js
sbb
jno
dec
out
jo
xor
movsl
adc
leave
pop
lahf
inc
loope
inc
push
sub
mov
divb
sbb
out
test
or
cmpsb
sbb
call
push
cld
loope
and
mov
and
lret
shlb
or
fdivrs
xchg
sarb
add
imul
xor
jl
sbb
dec
jl
loopne,pt
in
add
push
lods
mov
mov
adc
std
xor
repnz
addb
in
adc
out
push
pop
pop
push
ljmp
lea
xchg
jge
pop
and
in
out
cltd
sbb
aad
sub
andb
fisttpl
mulb
and
or
std
rcl
shll
sbbb
inc
cmp
into
mov
enter
xchg
addr16
and
sti
in
fimuls
repz
out
pop
mov
push
sbb
ret
insl
lcall
fs
mov
xchg
ret
xchg
pushl
cltd
test
into
dec
or
ret
in
sbb
dec
icebp
repz
inc
icebp
jno
loope
rclb
sub
mov
in
push
jnp
push
xchg
stc
xchg
jl
mov
sub
add
mov
inc
mov
xchg
cmp
cmp
je
mov
neg
cmpsb
hlt
jecxz
push
stos
dec
rep
popa
sub
cs
xchg
mov
jl
mov
fdivrs
push
jo
pop
cmp
lock
sbb
or
push
nop
std
pop
sbb
fsubrl
into
mov
and
aam
inc
adc
sub
and
mov
das
jae
adc
movsb
mov
negb
in
aad
and
xacquire
push
cmpsl
icebp
push
lds
es
push
pop
fdivrs
fwait
clc
inc
lds
pop
in
movsb
mov
movsl
paddq
iret
test
fsubr
out
into
pop
sbb
push
filds
dec
add
ss
ss
sub
xor
cmp
mov
cmc
mov
xorb
in
cld
mov
jp
xor
loope
push
jno
cli
pop
rolb
jno
push
test
mov
cmpsl
push
test
cltd
adc
sub
repnz
xor
push
sbb
sub
lcall
cmp
sub
sub
sbb
ss
rcll
icebp
in
mov
cmp
mov
and
mov
sti
push
xlat
jle
or
lret
into
mov
into
cs
xor
sbb
sub
or
adc
mov
push
adcl
jne
push
cmp
cmc
pusha
add
lods
sub
xor
sahf
push
and
add
xchg
push
and
movsb
cltd
push
or
wrmsr
sbb
dec
adc
arpl
lret
loope
push
dec
push
shll
mov
xchg
ja
aad
pop
je
lret
hlt
js
test
and
sarb
out
and
mov
repnz
pop
xchg
sbb
sub
pop
jns
hlt
or
push
cmp
out
inc
cmp
popa
dec
push
mov
jp
roll
add
pop
out
xor
inc
outsl
push
xor
lret
cmp
fwait
iret
lds
jmp
popf
cmc
or
push
sbb
bound
mov
mov
sbb
cwtl
push
dec
dec
push
mov
adc
shll
xchg
lock
dec
dec
ffreep
and
je
cmp
inc
push
clc
cmp
jmp
test
cli
roll
inc
dec
lcall
mull
in
outsb
mov
jecxz
add
pop
xchg
add
loop
mov
fdivrs
dec
cli
xchg
bound
cmpsb
rol
insb
and
mov
cwtl
test
ret
mov
mov
inc
inc
pop
fadds
jl
add
jmp
ljmp
jg
div
xlat
rclb
inc
shr
jno
cld
sub
test
xchg
sub
std
dec
jne
sbb
pusha
repz
push
xchg
lods
xor
sub
cld
jne
cltd
jge
push
icebp
pop
mov
xchg
dec
xor
mov
popa
and
xchg
insb
sub
popf
sbb
test
movsl
rcll
data16
jns
dec
cmp
int3
cwtl
aad
dec
jg
arpl
jns
fimuls
ja
lods
xor
sbb
xchg
stc
sub
dec
mov
pop
cwtl
xor
shll
xchg
in
adc
push
push
adc
xor
in
insb
dec
mov
add
sbb
cmp
pop
push
add
ds
loop
cmpsb
ror
lock
fisttpl
mov
mov
pop
outsb
pop
jb
cmp
ret
fwait
sar
in
and
lcall
push
pop
enter
sbb
lcall
into
addl
xor
fists
mulb
inc
jmp
adc
jbe
push
stc
dec
and
jne
iret
divl
sarl
cmc
mov
xchg
pop
push
mov
outsl
pop
inc
rcll
test
push
cs
fwait
rorl
mov
mov
lods
push
out
cmc
mov
lahf
sub
sub
mov
jno
pop
cli
out
roll
mov
mov
imul
lods
fsubrl
mov
lds
imul
in
or
dec
scas
add
or
fwait
aad
or
jge
or
int3
lds
mov
call
dec
dec
add
loop
xor
lock
xor
enter
daa
jmp
push
les
sbb
add
adc
aam
push
sbb
lcall
ds
insb
mov
daa
xor
xchg
leave
and
xchg
repz
arpl
mov
aad
mov
outsb
jp
push
ret
fcmovb
inc
test
into
sbb
call
push
aas
outsb
and
inc
xor
loope
js
cli
inc
xor
dec
sub
fildl
fcompl
cmpsb
push
sti
loop
mov
dec
lea
jnp
adc
cltd
jnp
xor
fcmovbe
ret
mov
mov
stc
sahf
mov
dec
push
movsb
xor
jno
ficoms
add
outsb
dec
enter
cs
push
fldenv
ret
cmp
aam
ljmp
ljmp
xor
mov
fldl
fistl
xchg
stos
negb
sbb
das
loopne
push
adc
mov
ja
pop
push
xor
jo
mov
stos
xlat
push
mov
jns
adc
push
mov
add
sbb
sbb
mov
mov
cmp
fiaddl
ss
jo
xchg
addr16
add
in
and
push
pop
dec
inc
jl
mov
push
xorl
push
push
xchg
lret
mov
cmp
in
cwtl
leave
pop
xor
mov
js
jle
jecxz
imul
fcompl
add
jne
ficompl
mov
pop
push
dec
and
push
pop
jmp
addb
mov
mov
adc
bts
jecxz
mov
jo
mov
cltd
xchg
mov
test
ja
cmp
add
jecxz
clc
sub
pop
adc
mov
cmc
movsb
cld
aam
fildll
push
mov
add
push
push
stos
inc
push
mov
inc
call
test
pop
push
mov
lods
loop
inc
mov
xchg
mov
inc
jmp
sbb
ret
and
jne
test
push
inc
xchg
xchg
jle
xchg
or
push
icebp
outsb
aad
mov
addl
js,pn
mov
iret
sbb
call
icebp
jb
cmpsb
xor
insl
sub
loopne
jns
pop
lret
inc
pop
mov
sbb
add
enter
inc
ret
add
inc
jle
stos
ja
xchg
repz
hlt
mov
clc
jno
mov
pop
mov
ss
mov
push
mov
push
jp
xchg
cli
adc
shrb
pop
and
rcll
out
iret
leave
icebp
mov
jg
sub
inc
or
inc
rcrl
decb
and
push
bound
jmp
loop
xor
xor
ret
in
das
fisubl
mov
pop
loop
cmpsb
inc
mov
sbb
ret
pop
shrl
lods
inc
mov
dec
inc
stc
push
shll
mov
mov
insb
in
inc
xor
push
pusha
shl
xchg
je
mov
outsb
out
sahf
movb
rcpps
aas
adc
adc
mov
mov
outsl
test
lret
pusha
xchg
lret
mov
mov
cmpsl
pop
sbb
push
movb
ss
daa
cmpsl
push
in
add
fcmovb
lahf
jne
add
fwait
iret
rorb
mov
into
mulb
mov
in
rorl
push
out
popl
shr
sbb
popa
push
dec
out
dec
lret
sub
fnstsw
pop
sub
shlb
clc
mov
shll
cmp
xlat
sub
shll
lods
or
mov
sub
mov
lcall
jmp
xchg
sbb
aam
xchg
out
stos
ret
je
fisubs
jae
aas
int3
pop
jle
sub
push
aaa
bound
movsl
jae
cmpsb
xchg
adc
fwait
into
scas
nop
lret
or
dec
push
cwtl
rcll
xor
dec
or
int3
adc
enter
jae
adc
aad
mov
imul
dec
push
cmp
push
les
push
mov
sahf
adc
mov
xor
or
dec
adc
adc
mov
and
call
fldenv
adc
test
jp
fbld
sti
pop
je
aad
leave
adc
mov
add
fucom
pop
mov
pop
ret
repnz
and
inc
test
sbb
mov
in
cmc
cmpsb
jp
push
adc
sub
dec
scas
add
sub
movsl
xchg
mov
in
dec
push
dec
sub
mov
stos
xchg
ret
mov
mov
scas
mov
mov
cmpsl
jae
dec
inc
sbb
test
cli
imul
adc
lods
xchg
in
mov
mov
and
pop
mov
and
inc
test
push
sub
sub
out
mov
mov
call
xor
enter
popa
mov
out
lods
out
mov
push
jp
es
sub
es
jns
sbb
pop
fcom
add
daa
xlat
or
testb
mov
gs
iret
in
popa
jg
outsb
cli
adc
enter
shrl
out
pop
push
inc
sub
or
enter
mov
add
jmp
sub
rclb
ja
test
scas
lahf
cmpl
sbb
scas
xchg
jns
cwtl
gs
popa
aaa
cmp
cmp
push
stos
add
notb
xchg
mov
sbbb
loope
cmp
inc
stc
cmp
cs
enter
rcll
ret
cmc
mov
insb
sbb
mov
std
xchg
add
push
xor
jmp
mov
push
sbb
xor
pop
repz
movsl
jp
inc
sub
mov
mov
mov
pop
cmp
mov
andb
xchg
add
lods
dec
dec
fisubl
or
loop
stos
jne
jo
and
loop
mov
mov
xchg
dec
or
cmp
ror
or
popf
lea
cmp
leave
and
push
mov
in
adc
mov
or
jns
xchg
sub
sbb
adc
int
jp
add
mov
out
scas
adc
in
push
mov
cs
icebp
pop
add
hlt
js
std
sahf
loopne
ret
cmpsl
jbe
enter
sbb
in
enter
mov
add
mov
fs
inc
push
pop
mulb
xchg
pop
daa
cmp
add
sub
jg
pop
add
enter
in
in
in
cmc
stos
fiaddl
mov
adc
adc
sub
push
inc
and
shl
repnz
insb
dec
mul
cmp
or
or
lea
in
inc
jge
pop
add
inc
loop
stos
mov
fmul
test
xchg
sbb
call
sbb
push
mov
iret
mov
push
mov
fsubl
lret
stc
rclb
imul
dec
addr16
bound
ret
push
mov
dec
arpl
push
fwait
int3
dec
and
jle
push
test
jno
sbb
adc
mov
mov
cmp
pushl
xchg
cmp
and
dec
loop
into
or
sbb
rorb
push
sub
es
sti
stos
pop
fdivs
or
pop
adc
xor
sub
sahf
call
jne
add
xor
stos
push
lea
fstl
cmpsb
out
jb
inc
outsl
hlt
inc
adc
sub
addr16
inc
sbbb
mov
andb
add
hlt
fld
pop
jp
xor
in
mov
sbb
adc
cmp
cmp
mov
inc
es
push
push
mov
or
insb
in
push
xchg
xchg
les
xchg
fsubrs
adc
dec
xorb
mov
xchg
test
loopne
xor
je
es
popa
sarb
lods
outsl
daa
mov
aad
mov
and
cmp
ret
sub
and
scas
enter
pop
dec
and
int3
aas
repnz
shr
fwait
bound
xor
push
cmp
sbb
cmp
xor
cmpsl
pop
neg
cmpsl
ret
jne
cmp
jnp
stos
sbb
mov
mov
pop
cmp
loopne
push
fldcw
outsl
jb
movsl
cs
les
fs
push
push
jnp
adc
sbb
sbb
addb
in
mov
adc
pop
test
mov
leave
mov
jns
and
cmc
insl
mov
ds
mov
pop
inc
popf
js
mov
and
and
jecxz
int
stos
dec
pop
jo
repnz
jnp
lret
test
hlt
fmuls
pusha
xchg
adc
lods
add
dec
ret
bound
test
sub
mov
stos
es
insl
aad
xchg
xor
jns
adc
shrb
insl
pusha
xorb
aaa
dec
jbe
fcmove
mov
test
imul
cmp
fdivrl
mov
mov
cmp
stos
pop
xchg
mov
ret
cld
gs
and
cmp
cs
xchg
repnz
out
ret
mov
dec
jnp
mov
sub
addr16
fwait
out
aas
test
pop
les
arpl
ljmp
pop
and
mov
adc
cltd
xchg
jno
loope
jmp
ss
and
pop
iret
or
shl
and
mov
or
mov
and
cmp
mov
jg
pop
xchg
outsl
scas
mov
icebp
xor
mov
fstps
xor
or
pop
jecxz
fnstenv
ljmp
shl
pop
ja
call
pop
dec
jae
push
dec
cmp
sbb
lods
daa
push
pop
cmp
imul
jp
enter
xchg
clc
lcall
out
cmp
sbb
xchg
sbb
or
or
out
mov
add
jl
iret
pop
shlb
leave
adc
cmp
repnz
repz
push
pushf
dec
xchg
out
testb
fisubrl
enter
inc
arpl
xlat
xlat
and
push
inc
popa
push
xchg
imul
lock
fsubl
jg
mov
push
ret
in
pop
mov
cmp
xor
add
mov
adc
mov
fcoms
bound
test
and
mov
lea
inc
leave
cltd
xchg
push
add
or
hlt
sub
push
pop
mov
insw
sub
xchg
mov
loope
rclb
jmp
and
cld
js
dec
aas
or
jecxz
adc
jge
jns
xor
lret
dec
cmp
stc
mov
push
arpl
sbb
test
les
ja
fstl
fwait
adc
mov
sbb
mov
jle
xor
cmp
inc
cld
mov
sub
stos
movsb
jo
mov
int3
stos
cmp
pop
mov
jecxz
sbb
push
dec
in
cmp
fnstenv
mov
aaa
jns
daa
pop
stos
dec
inc
outsl
push
xchg
lcall
testl
pushf
or
aam
xor
into
xchg
xchg
pop
fscale
pop
daa
data16
jo
movb
sbb
std
imul
popa
xchg
call
bound
dec
dec
jle
and
pushf
icebp
loop
add
cmpsl
inc
push
inc
imulb
nop
pop
pushf
loop
lea
cmp
jecxz
stos
dec
cmpsb
jle
sbb
outsl
dec
popf
dec
fcoml
loopne
out
cmpsb
and
push
mov
nop
das
sub
sub
mov
repnz
movsl
lds
xchg
in
mov
test
inc
sub
mov
jmp
push
loopne
ds
xchg
sbb
inc
xor
seto
jmp
ja
jmp
push
xor
push
out
orl
mov
pop
jmp
xchg
jbe
jmp
push
out
addr16
add
inc
int3
pop
mov
and
add
mov
push
cwtl
or
jmp
ret
fdivrs
add
cmp
xor
xchg
pop
jb
testl
insb
test
mov
add
or
mov
addr16
in
push
int3
mov
aas
mov
lahf
jno
pushl
cwtl
xchg
pop
jne
stos
dec
repnz
sub
rcll
pusha
jmp
cltd
mov
nop
subl
daa
xchg
pop
jge
mov
push
stos
mov
pop
repnz
pop
dec
fdivl
fsubrl
bound
call
popa
ret
add
cld
pop
leave
and
xor
jbe
sub
insb
testb
jg
shrl
jl
jo
pushf
push
mov
pop
insl
jle
sbb
int3
mov
sti
cs
push
call
cmp
push
dec
lea
fsubs
fimull
popf
pop
fsubl
cld
push
push
aaa
stc
push
outsl
xor
mov
js
dec
mov
cld
roll
popf
popf
push
mov
inc
pop
ds
les
inc
jb
sti
and
adc
xor
dec
dec
dec
sub
in
mov
adc
mov
inc
xor
stos
outsl
test
add
in
xor
mov
call
xchg
jle
repz
decb
jns
das
adc
lcall
ret
jno
xor
mov
sub
shlb
int3
popf
jbe
std
rcl
fwait
rcl
mov
aaa
pop
inc
cwtl
xor
cmp
cmc
xlat
mov
test
mov
jge
cmp
lcall
cmpsl
out
inc
mov
xchg
popa
inc
repnz
nop
add
rorl
cmp
cmp
addr16
and
cmpsl
jne
fdivl
das
inc
mov
mov
add
jp
jno
sub
xchg
das
push
sub
cmpb
mov
add
fwait
mov
jmp
add
dec
in
inc
jmp
push
cli
mov
aam
mov
icebp
dec
pop
ss
dec
sub
jmp
addr16
cmp
jns
cli
cmp
sbb
inc
xor
xor
pop
xchg
ficompl
or
fnstcw
dec
aam
cmpsb
adc
adc
lret
jae
in
jg
add
cwtl
xor
pop
gs
into
sbb
js
std
jno
mov
cmp
ja
cmp
sar
mov
mov
push
insb
xchg
inc
jo
bound
mov
call
test
mov
lea
lret
pop
or
sbb
xchg
pop
ret
pop
lods
shll
mov
bswap
xor
rol
sahf
add
ret
inc
outsb
xchg
xor
loopne
scas
jg
imul
mov
mov
dec
cld
fildl
hlt
adc
dec
js
or
lods
je
mov
into
push
in
in
xor
add
cmp
arpl
adc
mov
scas
enter
leave
xlat
scas
or
push
and
leave
fcmove
cmp
add
mov
inc
les
les
xor
test
xor
adc
les
ja
mov
and
add
cltd
mov
lods
mov
push
xchg
and
popf
aas
dec
fdivr
ds
jae
lock
cmc
mov
movsb
sbb
or
sub
cmp
sub
jo
xchg
push
rclb
dec
dec
cmp
cmp
xchg
jge
test
insb
arpl
out
dec
adc
out
xor
push
sbb
jl
pusha
push
sahf
push
xor
push
xor
or
in
push
sbb
or
ss
int3
sti
out
testb
pusha
aam
and
sub
and
jae
push
and
sti
out
into
testb
dec
hlt
fldcw
sbb
pop
pop
xchg
adc
sub
push
sub
lock
les
fimull
mov
inc
test
jge
pusha
mov
push
imul
lea
xor
and
xor
mov
cltd
mov
or
or
inc
adc
add
cmp
mov
lods
sbb
cmp
es
in
mov
or
xor
jb
dec
sarb
adc
xor
nop
xorb
sub
mov
enter
mov
jns
nop
push
stc
orb
test
xchg
push
inc
loopne
insb
shlb
xchg
daa
stc
fdivrl
mov
push
dec
je
loopne
and
xchg
scas
pop
dec
bound
dec
and
jns
sub
sbb
push
test
out
pop
sti
imul
sbbl
mov
sbb
sbb
cmp
dec
mov
sbb
out
sub
cmc
or
cmp
lret
out
xor
cmp
jnp
ffreep
notl
imul
jmp
lods
cmp
popf
aam
and
mov
xchg
ss
pop
hlt
xor
cmp
test
ljmp
ss
pop
add
adc
fsubr
test
pop
sarl
xchg
pop
repnz
insl
xor
cs
arpl
inc
ds
cmp
mov
fisttpll
cltd
into
test
imul
mov
inc
movsl
sbb
ja
insb
sub
icebp
mov
mov
leave
push
xchg
mov
repnz
jo
mov
adc
sub
adc
leave
push
add
call
mov
repnz
int3
and
imul
dec
jnp
in
pop
push
mov
sub
inc
imul
and
mov
jle
inc
into
aas
inc
ljmp
xchg
je
fcmovu
dec
cli
mov
aas
jns
dec
push
pop
push
mov
mov
pop
add
or
sbb
test
inc
sbb
dec
movsl
push
scas
mov
dec
cmpsb
push
add
jg
js
jns
push
mov
or
inc
mov
add
scas
dec
cmc
cmp
push
mov
ljmp
ljmp
jbe
or
jo
rcrl
push
mov
fdiv
nop
test
add
test
mov
push
incl
data16
mov
sarl
shl
xor
sub
adc
cmp
mov
or
pushf
or
cmc
add
mov
imul
push
hlt
in
xchg
cld
push
scas
out
push
rclb
add
xchg
test
pop
inc
roll
inc
lcall
xchg
imul
dec
xor
loope
scas
mov
sub
xlat
je
dec
imul
xor
in
push
add
aas
pusha
inc
lds
rcl
clc
cmp
sub
jno
icebp
fwait
jge
cmp
call
push
ja
mov
sbb
xlat
xchg
dec
cmp
inc
scas
int
lea
push
int
jg
rol
sarb
jb
xchg
fs
je
movsb
sti
enter
test
rcrl
jp
cmc
loope
cld
jnp
sub
add
push
xchg
pop
and
jg
push
lret
push
fsubrl
aaa
call
mov
mov
xor
mov
xchg
lret
je
imul
cltd
sub
stc
pop
fistl
imul
cmc
je
sub
jmp
movsl
or
xor
scas
push
cmp
cmc
pop
adc
cwtl
push
ljmp
and
dec
dec
imul
jl
or
ret
xor
outsl
pop
mov
data16
mov
push
test
in
cwtl
push
push
xor
jg
les
mov
xor
mov
jne
jecxz
sbb
mov
sbb
mov
push
icebp
sub
test
insb
std
cwtl
scas
fidivrs
cmpsb
ja
cmp
add
imul
cmp
xor
push
dec
scas
push
ja
sub
mov
mov
int3
add
push
ljmp
dec
outsb
ror
icebp
fistl
outsl
fcomps
icebp
push
mov
fldt
dec
roll
pop
mov
sbb
aam
out
stc
and
mov
xchg
in
and
add
lahf
arpl
sahf
push
cmp
incb
adc
mov
push
mov
push
loop
lahf
lret
hlt
fwait
push
ret
ljmp
cltd
popf
stos
pop
xor
and
dec
testl
bound
fiadds
cmpsl
and
pushf
loopne
rcr
dec
mov
jg
jecxz
push
outsl
or
jp
mov
repz
je
popf
adc
aaa
xor
mov
ficoml
push
fsubl
xchg
sub
sub
testl
cmp
loope
jns
je
movsb
add
fbstp
outsb
pop
in
xor
add
add
xor
or
into
scas
push
insb
cltd
inc
aas
sub
xchg
jmp
dec
pop
mov
cwtl
mov
mov
mov
addr16
mov
push
pushf
cmp
leave
sbb
mov
sub
jne
mov
ret
dec
mov
test
iret
fldenv
hlt
aad
loope
daa
aaa
insl
mov
lock
cmc
out
test
insl
mov
pusha
lods
lods
sbb
pusha
dec
outsb
cmp
push
mov
sbb
rcrl
testl
mov
mov
mov
xchg
jl
ret
sbb
mov
adc
sbbb
fidivs
lods
xor
or
sbbb
mov
push
dec
sub
pop
sbb
cmp
lds
adc
lods
jl
push
sub
and
jo
pop
add
dec
add
enter
mov
inc
aad
movsl
sub
inc
iret
and
repz
enter
push
xor
pop
xchg
mov
adc
pop
test
mov
cmpsb
pop
inc
push
lods
add
iret
sbb
pushf
imul
out
fbstp
cmpsl
mov
mov
mov
cld
xchg
shlb
dec
in
iret
arpl
mov
xor
icebp
hlt
std
sbb
jmp
repz
xchg
jp
and
lds
jno
movsb
mov
shlb
jo
aaa
jle
pop
aaa
mov
add
aam
out
mov
push
mov
addr16
dec
sbb
outsb
mov
push
xchg
pusha
xor
cmpsb
sbb
cmp
idivb
mov
lahf
mov
mov
jl
lcall
test
icebp
add
inc
push
lods
adcl
or
movsl
push
fadd
movsl
sub
mov
xor
shl
rorl
mov
js
add
mov
push
fisubrl
jmp
sub
and
inc
cmpsb
outsl
mov
jmp
push
dec
mov
mov
mov
dec
xchg
lods
push
mov
inc
repz
cmp
xchg
and
add
sarb
or
push
cs
in
or
cmp
and
repz
out
pop
js
mov
dec
cmp
out
ljmp
std
cmp
cwtl
pop
adc
sub
xorl
outsl
ret
xor
lcall
push
mov
or
adc
jnp
out
mov
or
and
andl
das
imul
mov
inc
and
sub
xchg
scas
xchg
insl
stos
mov
jae
out
dec
adc
orl
gs
adc
adc
ret
or
fdivl
xchg
stos
jmp
fs
lock
orl
jmp
pop
sub
and
pushf
or
xor
lcall
pop
and
lods
stos
jns
imul
test
and
stos
mov
aam
cs
mov
dec
cmp
pop
int
loope
shlb
push
fimull
movsb
xchg
adc
arpl
fidivrs
mov
punpckhbw
push
add
dec
and
pushw
outsl
rcr
shlb
loope
popf
mov
or
add
mov
mov
test
jp
jmp
out
out
pop
aad
mov
jb
xor
mov
jne
xor
inc
int
cmp
push
ror
mov
fsubrl
repnz
or
fisubs
mov
xchg
dec
cmp
aam
stos
cmc
jb
lock
sub
stos
gs
adc
cld
sbb
jbe
xchg
mov
fisttpl
inc
fsts
xchg
fistpl
outsl
mov
push
cli
pop
enter
std
push
and
pop
cs
jnp
lcall
inc
mov
das
adc
and
lods
scas
movsl
xchg
inc
lds
xchg
mov
lea
fnstcw
cmp
inc
add
js
loopne
test
pushf
jl
jns
or
arpl
mov
addr16
or
leave
fs
sub
dec
or
push
xchg
arpl
jns
jmp
jae
add
fldcw
lahf
adc
mov
xor
adc
addr16
movsb
cmpl
mov
or
add
dec
dec
call
cmp
mov
jmp
sbb
pop
cld
push
lret
gs
adc
xchg
mov
or
jbe
cmpsb
push
push
ficompl
aaa
jbe
gs
inc
xchg
rcll
jecxz
imul
data16
jmp
add
sub
sub
insb
int
ret
push
and
call
repz
and
mov
ret
xor
out
mov
sahf
inc
fcoml
outsl
pop
push
lea
cmp
mov
in
fsubr
lock
ja
dec
pop
xchg
push
arpl
cltd
sbb
adc
xchg
mov
lock
pop
mov
pop
testl
fisttpll
add
stos
pop
pop
cmpsl
call
shlb
daa
jns
push
or
ret
jb
push
cmp
jp
push
mov
cwtl
dec
xchg
push
xchg
and
mov
jmp
sbb
sub
inc
or
push
pop
filds
sub
addb
cmp
mov
scas
pop
adc
xchg
addl
movsb
aaa
out
negb
pop
inc
mov
imulb
int3
out
mov
push
lret
pop
jns
xchg
int3
jns
jae
sub
sub
push
pusha
mov
dec
std
sub
js
pop
xchg
ret
xor
pop
daa
in
xchg
sub
in
xchg
dec
push
jno
test
addr16
push
and
or
or
cs
pop
sbbb
insl
dec
sub
xchg
jns
adc
inc
pop
aas
xchg
leave
and
adc
cmp
fcomi
js
push
cmc
rorl
xchg
sub
lock
hlt
and
lods
sahf
xor
int3
rolb
pop
dec
cmp
iret
les
adc
sahf
mov
sbb
mov
lea
xor
mov
idivb
cwtl
dec
add
xchg
push
add
jge
jg
jns
sbb
push
movsb
sbb
lea
adc
push
adc
jge
cwtl
out
pop
aaa
xor
test
xchg
inc
mov
call
adc
out
aaa
ss
inc
int3
out
out
in
sub
pop
push
lcall
adc
js
int
rcrb
jbe
inc
pop
cld
cmp
pop
xchg
gs
jmp
jecxz
call
sbb
push
faddp
push
hlt
and
insl
xchg
mov
mov
sbb
dec
mov
xchg
movsl
bound
outsb
test
stos
ljmp
adc
out
pushf
pop
lods
jbe
roll
test
fdivr
out
das
mov
xor
jbe
mov
cmp
and
sub
xor
jg
adc
push
imulb
sbb
pop
daa
cli
dec
cmp
jbe
sbb
sub
out
sub
ficompl
je
inc
mov
pop
jno
mov
add
and
cmp
je
aad
lods
jnp
pop
sbb
in
cwtl
into
movsb
pop
sbb
push
pop
cs
lods
mov
fs
sbb
sub
and
lahf
and
mov
mov
pop
inc
add
scas
loop
add
loop
je
clc
sub
xchg
mov
and
mov
lret
cmp
jae
loopne
je
add
cwtl
and
rcrl
push
ret
dec
xchg
dec
stos
lret
mov
shr
jmp
ljmp
sbb
mov
xor
test
lret
push
fldcw
or
dec
stos
cmp
inc
and
jne
cwtl
sahf
and
repz
cwtl
addr16
popf
mov
int3
xlat
testb
add
sbb
jg
pop
cld
adc
lods
inc
cmp
test
and
test
stos
outsb
loope
cli
stc
repz
adc
and
pop
in
mov
out
sbbb
ja
add
push
repz
sahf
mull
addr16
fsubr
call
sahf
mov
xor
lea
or
shr
ja
popf
jecxz
ret
lret
cmp
data16
lret
or
cmc
mov
lods
aaa
hlt
pop
xlat
push
jp
adc
out
sub
jnp
inc
les
jb
hlt
lea
mov
push
es
sub
imul
test
cwtl
push
shl
out
push
adc
sbb
loopne
call
adc
je
pop
repz
dec
lods
xlat
mov
in
mov
adc
cmp
mov
cmc
dec
ss
rclb
mov
stos
or
jl
inc
outsb
mov
mov
aad
xor
sbb
jnp
xchg
xchg
mov
fstl
or
mov
popf
stos
push
pop
sbb
push
aaa
sub
pusha
xor
pop
inc
or
mov
and
sub
inc
adc
pop
or
add
add
jmp
in
inc
or
negl
addr16
pop
dec
ret
inc
adc
push
out
lahf
mov
lret
inc
lcall
cmp
mov
push
outsl
fldenv
jge
es
jo
adc
aaa
rclb
mov
dec
enter
mov
in
loopne
pop
test
mov
loope
jge
outsb
lcall
loop
push
cmp
mov
cmpsl
jns
sub
popf
insl
sbb
je
nop
and
js
jmp
insl
mov
js
push
loop
cmc
ds
lcall
je
adc
xchg
inc
jp
cmp
clc
in
loope
xchg
hlt
pop
iret
int
xchg
jmp
pusha
int3
cmpsb
fldt
sar
lds
or
xor
sar
mov
mov
xchg
loop
push
push
inc
mov
and
jecxz
or
mov
mov
xor
add
push
jle
xor
cltd
or
jb
push
push
xor
and
outsl
xlat
push
rorb
js
out
push
xor
cmp
divl
cmp
test
fwait
inc
imul
jns
into
cwtl
fwait
inc
popa
mov
sbb
test
add
cmp
je
pop
imul
jg
fisttpl
test
push
fstpl
sbb
add
rorb
xchg
loop
adc
pop
mov
xor
ds
out
shlb
fucom
mov
push
icebp
js
lret
mov
into
jae
cmc
clc
inc
xchg
iret
xchg
lods
rcrb
cmp
adc
jbe
sub
dec
and
jge
push
push
push
add
iret
pop
push
xorl
repz
movsb
stos
stos
nop
dec
loope
xchg
jp
pop
or
gs
xchg
inc
mov
dec
loop
jo
push
adc
or
or
sahf
inc
add
negb
dec
push
xchg
idivl
sbb
sbbb
test
fimuls
inc
or
xor
std
sbb
mov
cli
jmp
or
mov
test
push
mov
popf
jmp
jp
repz
bound
aas
lds
mov
sarl
mov
inc
aad
dec
bound
and
mov
dec
scas
sbb
std
push
rcl
add
repnz
ljmp
jb
inc
fwait
lret
mov
adc
mov
jle
enter
mov
xchg
shrl
in
test
push
push
xchg
xchg
sub
lret
js
movsl
icebp
data16
adc
in
lea
or
xchg
mov
xor
fs
xchg
push
lret
ljmp
xor
mov
inc
fmull
popa
pop
xchg
test
not
mov
sbbl
adc
and
in
stos
push
sub
daa
push
xlat
xchg
rorl
sarb
hlt
add
out
jb
adc
push
jo
cmp
add
ret
icebp
inc
fidivrl
hlt
outsl
or
jne
cmp
into
bound
dec
or
test
rclb
xor
gs
inc
xchg
sarb
inc
adc
addr16
imul
jno
mov
lods
sub
sub
fcomp
sbb
add
push
mov
ret
push
mov
fidivs
push
cmp
pop
filds
adc
hlt
jecxz
mov
xchg
jl
mov
adc
mov
mull
cmp
mov
xor
inc
stos
and
lcall
negl
add
outsb
mov
mov
jns
mov
sbb
mov
dec
fs
bound
imul
out
dec
inc
stos
cmpsl
aam
dec
fdivrs
cmp
xchg
xchg
cld
jecxz
sub
adcl
imul
testb
sbbb
fidivl
sahf
ret
jae
pusha
lods
pop
sbb
stos
add
sub
outsl
call
leave
jns
andb
ficompl
shrb
scas
xor
imul
or
jae
jp
shl
fmuls
pop
sti
mov
stc
fnstenv
call
inc
push
iret
inc
insl
jne
or
and
in
cmp
pusha
mov
cld
pop
jne
rorb
sarl
and
xchg
loopne
mov
lds
push
or
push
jb
js
add
pop
jno
and
mov
cmp
cmp
fisttps
shll
jmp
sub
shlb
xchg
sbb
inc
xor
out
jns
shll
sti
adc
mov
xor
pop
cmpb
or
lahf
add
push
or
xor
popa
jne
fistpl
sbb
or
pop
fwait
mov
or
popa
push
cmp
and
rorb
mov
outsl
lcall
pop
arpl
mov
adc
popa
loopne
or
xor
mov
xchg
mov
mov
andb
jl
in
fucomp
add
dec
imull
or
push
dec
lock
xchg
push
js
hlt
rorl
sahf
or
add
jg
and
lods
jge
out
mov
fiaddl
sahf
test
addr16
imull
es
xchg
jg
or
push
addl
sarl
hlt
mov
adc
add
push
popf
pusha
popf
subl
fsubrl
jne
push
add
jns
jmp
pop
xor
cs
lock
int
cmpsl
cld
dec
cmpsb
xor
or
adc
xor
ja
xchg
shlb
icebp
out
sahf
mov
mov
bound
mov
das
ljmp
daa
jno
push
cld
leave
hlt
push
std
cli
test
ss
xchg
mov
push
fisttpll
sahf
inc
mov
or
add
cmpsb
xor
and
dec
pop
cltd
sub
cmpsb
jno
pop
jns
in
scas
mov
mov
mov
adc
and
arpl
insl
mov
pop
jle
xorb
lret
cmovbe
inc
test
imul
xor
mov
test
movsl
sub
jl
pop
insl
lret
call
jmp
mov
mov
loope
sub
mov
cmpsl
enter
inc
ja
std
nop
aad
xchg
add
adc
sti
push
mov
insb
lcall
cmpsb
dec
outsl
popa
fisttpll
ljmp
mov
fisttpll
pop
loop
and
lret
push
imul
cld
and
rolb
test
movsb
mov
fyl2xp1
mov
test
arpl
sub
jl
iret
add
iret
pop
jl
fstpt
roll
ljmp
sbb
xor
dec
pop
cltd
push
sub
mov
adc
in
sbb
es
ret
lds
jb
xor
sbb
iret
jno
ficompl
and
incb
imul
jno
mov
subl
mov
jb
push
xor
xchg
jle
arpl
int3
jo
int3
xchg
aas
sub
push
gs
jmp
cmp
repz
cmp
pop
jle
leave
or
leave
and
aas
jge
pop
mov
out
arpl
or
fisubrs
mov
in
add
popf
pop
pop
mov
xor
das
fwait
lock
loopne
xor
push
nop
subl
ret
adc
xchg
imul
shll
divl
das
into
addr16
call
jo
negl
or
push
xchg
xchg
test
outsl
ret
jmp
push
icebp
outsb
inc
mov
fidivrl
add
js
mov
inc
lock
xchg
mov
xchg
fbstp
outsl
sub
pop
not
daa
add
idivb
mov
pop
xorl
pop
or
fimull
mov
mov
test
mov
sub
ret
mov
add
testl
pop
sbb
inc
xchg
cmpsl
jb
xorb
inc
jmp
ds
sbb
test
lret
push
out
or
call
add
lds
stc
test
rclb
mov
cmpsl
rcll
cmp
imul
insl
cmp
mov
cmc
icebp
dec
shrl
idivl
call
inc
dec
mov
pop
not
test
mov
imul
arpl
and
in
fsubp
cmp
mov
out
dec
es
or
cmp
and
sub
mov
sbb
cbtw
add
arpl
mov
or
ja
cltd
add
pop
and
jge
int3
mov
jno
or
es
push
push
sbb
inc
mov
cmpsl
sub
lea
inc
das
out
inc
movl
out
mov
mov
inc
fnsave
aam
jp
xor
sbb
adc
loop
pop
or
jb
dec
sub
cmp
imul
cs
flds
mov
in
bound
mov
shl
and
mov
loope
pop
cmc
or
rorl
cmpb
xchg
sbb
lret
mov
les
mov
movsl
std
add
stos
pop
sub
orb
leave
inc
push
lods
fs
push
sahf
lcall
jbe,pt
shlb
insb
or
movsb
pusha
cmpsb
push
dec
push
add
mov
cmp
xor
mov
aad
cwtl
xlat
xor
push
fisubs
divl
lods
int
jge
jne
sbb
push
lret
dec
ljmp
xchg
test
loop
dec
ret
mov
test
test
cltd
clc
mov
cmpsl
push
push
dec
jp
cli
loop
lahf
mov
test
inc
xor
stos
outsl
cmpsb
dec
sarl
out
lock
mov
cli
mov
xchg
sti
loope
aaa
ret
lret
cmp
insl
mov
movsb
pop
call
imul
ret
jg
es
jmp
xor
sbb
mov
lahf
daa
mov
in
mov
or
mov
lret
popf
les
movsl
dec
dec
cmp
lds
push
sbb
unpckhps
add
pop
pushf
cmp
xchg
jecxz
aaa
arpl
xor
cmpsb
mov
sbb
int
in
das
and
mov
inc
sub
cmp
fiaddl
inc
dec
dec
sarb
cmp
das
dec
xchg
sbb
loope
sbbb
xlat
xor
dec
cltd
lock
xor
fstps
sub
xchg
mov
iret
inc
fwait
popf
mov
pushf
xlat
lods
or
shll
jle
in
adc
inc
pushf
arpl
repz
fwait
dec
filds
mov
sbb
imul
and
icebp
movsl
das
or
xchg
pop
mul
mov
mov
fcoms
not
shrl
aam
push
cs
pop
xchg
add
xor
popa
gs
fdivrs
dec
inc
je
inc
test
shlb
lods
xchg
les
sub
sbb
pop
add
sbb
mov
cmc
insl
cltd
sbb
dec
shll
and
push
sbb
jbe
sub
xor
jno
mov
jp
xor
cmp
xchg
cmp
push
int3
jo
mov
mov
sub
or
cmp
test
scas
and
jmp
fdivr
add
pop
adc
ss
sub
jecxz
mov
adc
or
cld
loopne
and
cmp
iret
ja
jae
shr
ja
into
sahf
adc
in
jp
cmp
incb
and
xor
jbe
mov
cmp
fdivl
das
dec
cmp
jl
inc
or
adc
cmpsl
mov
lods
push
repz
cmp
jo
jae
dec
insb
adc
mov
mov
dec
std
pushf
lds
fbstp
pop
xchg
ret
stos
push
jge
sub
push
jno
fcoml
adc
or
cmp
xchg
or
in
or
mov
dec
mov
mov
xor
dec
fstps
mov
xchg
cmp
mov
sub
or
test
xchg
shll
jp
jne
ljmp
lods
xchg
out
hlt
imul
jb
ljmp
xor
and
stos
and
imul
movsl
mov
cmp
scas
mov
xor
add
test
cli
repnz
lret
movsl
jb
add
dec
jbe,pn
inc
sbb
mov
pop
inc
mov
movsb
cmp
leave
push
dec
orb
xchg
mov
fmull
xchg
cltd
pop
sarb
adc
jne
push
mov
xor
dec
fists
test
add
mov
dec
mov
sbb
adc
jae
movsb
sbbl
jno
mov
dec
jmp
lea
fadd
outsb
xchg
nop
ds
xchg
push
push
adc
or
mov
fwait
test
lea
inc
leave
cld
ret
xorl
into
mov
adc
repnz
dec
out
in
mov
lods
adc
out
mov
out
addl
or
adc
icebp
push
dec
or
call
loope
pop
je
movsl
testl
push
test
inc
ja
daa
inc
jmp
das
lods
dec
daa
mov
inc
daa
jne
loope
lcall
lret
jecxz
adc
out
inc
xor
rcrb
lods
repnz
outsb
jbe
insl
cmc
out
inc
mov
mov
sbb
mov
adc
inc
sbb
out
add
cmc
push
sub
adc
jl
mov
xchg
adc
std
adc
andl
mov
xor
orl
in
inc
mov
pop
jbe
inc
push
scas
xor
adc
jmp
mov
out
add
hlt
imul
das
mov
mov
jmp
hlt
xchg
inc
sti
out
mov
inc
xchg
clc
add
faddp
jmp
lea
cmpsb
loop
inc
jl
push
int3
in
jne
dec
test
push
jl
cmc
repz
xor
pop
xor
addr16
push
and
jnp
negb
lret
jp
jnp
xchg
sub
cltd
cmpsb
jmp
and
rclb
mov
jns
dec
icebp
xor
ret
and
stc
lods
jmp
sbb
notb
iret
mov
lcall
fildl
push
rorb
mov
out
mov
jp
scas
iret
int
xor
xchg
mov
repz
and
rol
gs
out
add
xchg
sub
shrl
js
mov
and
fimuls
lods
jo
js
xchg
and
jbe
jp
test
push
cmp
pop
push
push
push
mov
stos
repnz
and
shll
gs
or
lods
pop
daa
adc
bound
sub
mov
cwtl
pop
xlat
cltd
cld
gs
shl
test
lds
ficoms
jmp
pop
jo
jecxz
mov
inc
push
cmp
loopne
in
sbb
xchg
nop
stos
xor
nop
xor
inc
out
push
xchg
fnstsw
sbb
pop
cmp
push
add
jge
and
outsl
mov
inc
mov
push
sub
adc
jnp
fmull
popa
js
int
push
and
xor
mov
push
dec
xchg
loopne
jp
scas
jmp
mov
jp
mull
jl
les
mov
insl
test
add
int
test
xchg
dec
mov
jge
jae
cltd
add
cmpsb
push
mov
xlat
sub
shll
aad
in
in
push
jnp
sub
cmpsb
lret
mov
leave
push
push
out
xor
shll
pop
pushf
les
add
or
test
add
test
adc
filds
scas
mov
repnz
sbb
addr16
mov
jno
out
mov
jne
dec
push
stc
inc
mov
addr16
and
xchg
repnz
jbe
mov
sbbl
xor
addr16
cmp
ljmp
sub
add
out
pop
mov
sbb
adc
mov
ss
mov
scas
inc
in
int3
push
ret
push
cmpsl
sahf
mov
lock
pop
sbbb
jb
push
and
xchg
sarb
sub
rorb
loopne
cmovs
insb
xor
repnz
popf
sbb
adc
inc
icebp
test
mov
adc
cld
push
dec
xchg
mov
mov
fwait
add
adc
adc
imul
xchg
push
js
sbb
movsb
dec
call
dec
xor
lret
xor
adc
cmc
mov
test
sbb
push
inc
or
add
icebp
lahf
mov
ljmp
jno
pop
sahf
test
push
dec
insl
nop
mov
cmpsl
sub
pop
push
in
mov
mov
int
fcomps
or
jo
data16
inc
dec
addb
sbb
mov
in
dec
mov
pop
push
lds
push
loope
push
fisubrs
inc
sub
das
fstpt
sahf
test
jge
push
out
arpl
or
dec
cli
imul
cld
icebp
inc
mov
cli
sbb
sti
vpaddb
mov
int3
dec
sbbl
imul
subl
ret
loopne
push
mov
clc
fnstcw
dec
clc
jb
out
roll
cld
xchg
cmp
sub
mov
int
lcall
mov
xchg
or
fwait
mov
outsb
push
outsl
push
adc
les
sti
mov
ret
adc
add
out
in
lods
or
mov
push
xor
and
dec
push
pop
pop
cmpsl
icebp
divl
jns,pn
in
ret
jecxz
loopne
insl
test
les
testl
pusha
jns
shr
xor
jae
dec
mov
mov
push
jne
sub
sub
push
add
sbb
push
in
outsl
daa
inc
pop
pop
ljmp
mov
add
xchg
fsubrs
pop
sub
iret
imul
repnz
pop
in
and
dec
mov
lcall
mov
iret
inc
rcl
sti
ret
mov
mov
popa
dec
or
dec
pop
jbe
xchg
mov
jnp
rcrl
jmp
mov
hlt
insb
xchg
mov
adc
cmp
out
mov
and
or
pop
fnsave
push
repnz
jl
push
push
dec
daa
or
sub
lret
add
cmp
aam
xchg
push
or
xor
pusha
mov
pop
cmp
or
ss
fistps
enter
lret
ret
lock
bound
inc
fdivr
pop
js
xchg
pop
gs
cmc
adc
into
sub
inc
cmp
mov
insl
mov
jge
jl
js
rorb
xor
dec
mov
pop
addr16
ja
lret
cmp
sbb
fsts
push
jb
sarl
mov
in
dec
mov
mov
daa
pop
jmp
mov
and
repnz
stc
daa
cmp
mov
fdivl
xor
xor
test
arpl
add
int
pusha
mov
pop
xchg
adc
and
xlat
leave
aad
popf
std
aas
shlb
and
fcmove
sti
jnp
std
mov
inc
loope
std
push
imul
xchg
xchg
or
mull
adc
mov
pop
imul
and
mov
inc
sbb
cmpsl
jge
inc
movsl
dec
out
xchg
inc
cld
mov
and
add
cwtl
xor
imul
lret
shlb
inc
das
out
stos
sub
hlt
aaa
xor
push
jge
pop
xor
dec
mov
lret
sub
cmp
inc
insb
in
iret
test
in
ret
xor
and
dec
fmul
mov
outsb
cwtl
push
testb
sbb
cmp
push
pop
adcl
push
jbe
xchg
adc
repz
dec
scas
pop
inc
popa
jnp
push
cwtl
lret
xchg
sub
aas
lahf
ja
clc
sbb
mov
in
arpl
lock
add
lret
cmp
mov
pop
pop
lods
jbe
sub
sub
jle
popf
xor
mov
lahf
icebp
int
repnz
push
push
test
mov
sahf
nopl
pop
mulb
push
je
in
psadbw
cld
adc
iret
push
pop
push
sbb
xor
mov
jecxz
pop
je
aam
stos
xchg
test
arpl
or
mov
xchg
test
pop
cmc
out
iret
sub
shlb
outsb
decl
xchg
mov
or
nop
jae
push
sbb
adc
loop
push
test
adc
das
sub
rcll
and
xlat
adc
xchg
sbb
arpl
test
scas
inc
mov
subb
mov
adc
inc
push
test
mov
movsl
dec
cmp
cltd
sar
dec
outsl
std
idivb
std
inc
out
add
push
andl
cmp
lahf
mov
or
sub
inc
mov
rcrl
fstl
sbb
nop
insl
xor
lods
jge
aam
gs
jmp
push
out
xor
mov
jb
mov
aaa
pop
xlat
jnp
sar
jge
jmp
xchg
hlt
dec
or
stc
add
mov
lcall
cmp
fnstenv
frstpm(287
lret
fcompl
and
lret
je
or
ds
xchg
out
inc
int3
xchg
add
fs
sbb
pop
sbb
add
pop
sbb
inc
int
mov
je
or
push
insb
ret
movl
scas
fnstenv
call
xchg
test
lcall
movups
xor
pop
push
mov
jne
push
or
aas
push
dec
imul
mov
xchg
mov
push
shlb
int
sub
stos
cwtl
sbb
mov
xchg
lea
mov
cltd
rcr
adc
gs
add
into
inc
rcr
push
push
ds
mov
pop
imul
cmpsl
xor
imul
lock
imul
bndstx
pcmpeqb
sub
or
pop
fldl
loopne
and
notb
hlt
lods
sbb
sub
shll
fistpll
out
pop
sarl
add
in
mov
out
out
mov
ret
pop
dec
push
std
dec
xchg
incb
mov
push
jae
or
rol
roll
out
sub
jbe
bound
mov
sbb
mov
mov
jno
movsb
or
in
push
mov
mov
mov
jae
pmulhw
and
icebp
in
sbb
mov
adc
sub
fnstenv
mov
repnz
mov
or
jns
mov
roll
push
cs
pusha
jbe
data16
rolb
xchg
inc
xor
int
int
sub
in
push
mov
stos
push
jno
inc
dec
cmp
dec
nop
scas
sub
xchg
stc
mov
dec
cld
cmp
icebp
jmp
bound
fadds
jg
das
cmp
movsb
inc
ds
dec
lock
xchg
adc
push
cli
cmp
shr
stc
into
sub
addr16
push
xchg
insb
call
out
sbb
out
dec
push
jmp
in
loop
xor
stc
push
lods
cld
clc
jecxz
aas
add
mov
nop
mov
adc
loop
sub
rorb
imul
jp
lcall
add
xchg
push
lock
pop
rorb
leave
insl
stos
mov
mov
jge
out
mov
xchg
test
insl
fstpl
mov
mov
pushf
xchg
loope
popa
adc
lds
mov
js
pop
dec
nop
xor
xchg
jl
lcall
push
dec
jo
stos
iret
lahf
loop
out
icebp
push
shr
lret
in
addb
add
xchg
fildll
pop
xchg
sbb
push
jae
and
push
cmp
or
fildl
cmp
cmp
rol
incb
jb
shrb
fs
je
sbb
sbb
arpl
in
std
mov
add
and
mov
xor
iret
int3
mov
push
mov
add
push
cwtl
ja
pop
mov
sub
jmp
or
xor
movsb
jmp
mov
cmc
cmp
addr16
jns
mov
movl
and
cltd
hlt
lret
push
test
adc
push
hlt
adc
out
push
jno
or
mov
imul
xor
insl
push
stc
add
push
pop
sbb
cmp
iret
inc
test
pop
jns
mov
pop
or
inc
out
jne
lods
dec
mov
dec
inc
adc
jo
mov
std
mov
add
and
xor
mov
loop
sub
pop
jno
cwtl
std
stos
dec
pop
sub
push
ficomps
ret
or
aad
inc
lods
xor
mov
xlat
in
daa
aad
std
pop
jle
cmpsb
and
mov
aam
movsb
pop
inc
cmp
imul
xor
loope
call
add
xchg
out
test
cmp
mov
add
popa
push
sub
movsb
dec
inc
loopne
test
fs
jne
sbb
adcl
aam
ja
int3
sbbl
enter
pop
pop
and
and
fld
shrb
pusha
or
mov
testl
dec
inc
imul
jge
or
dec
mov
dec
push
jae
jmp
xlat
negl
xlat
xor
mov
iret
pop
stc
fmull
pop
ds
sub
pop
push
mov
mov
jecxz
inc
aaa
outsl
cltd
or
out
daa
jne
xor
scas
mov
sbb
mov
jns
or
fcomi
mov
jae
ret
cld
sub
je
inc
add
repnz
push
shrl
mov
adc
pop
mov
ja
inc
out
sbb
pop
cs
sub
sbb
mov
aam
mov
pop
addr16
aaa
out
mov
mov
pop
inc
je
fmul
dec
divl
cmpsl
mov
fldenv
lahf
xchg
add
and
jne
lea
pop
pop
lods
pop
mov
add
lea
je
into
in
fisttpl
mov
push
imul
xchg
aad
dec
sbb
out
inc
fmulp
out
insb
or
lcall
cmc
pop
in
add
sub
negl
add
adcb
out
enter
jae
movsb
loopne
inc
daa
popa
and
xlat
pop
fnstsw
or
push
outsb
add
jne
jle
cmc
jb
out
insb
pop
mov
repz
stos
mov
sub
jne
push
popf
mov
xorl
adc
xchg
sub
push
pop
dec
jns
cltd
test
xor
mov
into
xor
fisttps
xor
push
mov
and
xchg
mov
mov
pop
mov
mov
or
jnp
test
and
fstl
push
add
sbb
lea
popa
and
js
ljmp
hlt
stos
ds
in
inc
dec
in
jne
mov
ljmp
orl
loopne
test
cltd
xor
fs
adc
lds
inc
loop
dec
les
scas
jge
mov
hlt
popf
add
dec
and
or
sar
fldl
clc
stos
shrb
cmc
xchg
inc
cld
adc
outsb
push
stos
xchg
xor
cmp
sbb
ss
dec
leave
xorl
xchg
xchg
mov
dec
jb
jecxz
jp
mov
jno
inc
mov
pop
cmp
mov
loope
repz
and
scas
rcr
bound
ja
dec
push
xor
nop
xor
mov
movsl
imul
mov
pushf
outsb
loop
xor
leave
add
xchg
and
repz
sub
mov
data16
jne
xor
lds
mov
push
es
adcb
cltd
fists
adc
inc
mov
into
push
mov
push
xchg
xlat
mov
pusha
sbb
and
fwait
insl
in
jae
and
and
shr
mov
and
fdivrs
js
das
pop
divb
addr16
test
std
jne
pusha
mov
sbb
or
xchg
adc
lret
pop
int3
je
ret
cli
movsb
xchg
adc
daa
mov
lcall
jb
clc
sahf
xchg
fldt
add
addl
mulb
repz
sbb
sbb
pop
inc
mov
cmp
test
pop
lds
stc
xor
xor
mov
pop
mov
or
leave
add
leave
inc
push
and
fadds
jno
mov
fsubrl
mov
sahf
mov
movsb
mov
loop
mov
push
data16
shrl
hlt
rcl
int3
and
push
cmp
adc
or
ljmp
or
or
imul
fs
dec
cwtl
mov
xchg
mov
cmp
lods
jbe
repnz
lock
sbb
or
rorb
sbb
push
pusha
mov
movsb
jb
test
mov
jp
or
idivl
dec
inc
mov
mov
js
add
ja
and
pop
xchg
scas
push
mov
mov
mov
push
shll
ds
inc
dec
pop
xchg
xchg
mov
mov
lods
jle
addr16
loope
sahf
adc
addb
popf
mov
add
adc
insl
fildll
jmp
dec
sub
jne
cmp
je
loopne
and
jge,pn
mov
fwait
rorl
mov
mov
xor
push
push
sub
call
and
fcmovb
jno
gs
adc
dec
add
adc
mov
pop
push
das
test
mov
adc
cwtl
stos
pop
out
imul
es
inc
mov
inc
rolb
cmp
into
cltd
and
xchg
mov
pop
enter
mov
mov
mov
std
sub
in
mov
cli
loop
lahf
jecxz
aad
mov
in
pop
adc
mov
sub
ljmp
fwait
je
add
mov
inc
adc
inc
mov
addb
adc
sub
mov
pop
add
mov
pop
cmp
dec
xchg
int
test
push
xchg
pop
shlb
xor
sbb
jno
sti
jmp
loopne
aaa
repz
imul
pop
insl
jl
sbb
add
add
xor
adc
inc
daa
shrb
sub
minps
inc
lods
pop
aad
push
ss
push
jnp
add
imul
mov
scas
inc
loopne
pop
xor
mov
adc
sbb
ss
out
ret
stos
mov
or
repnz
fcomps
pusha
mov
mov
xor
mov
dec
cmp
notl
pop
faddl
inc
jae
jnp
imul
gs
lods
and
sbb
cmpsb
lret
lahf
xchg
std
xchg
mov
sbb
add
addr16
cmc
ja
xchg
subb
in
dec
lret
dec
mov
lods
iret
inc
pusha
inc
and
lods
xchg
mov
push
test
cmp
or
or
and
pop
imul
out
push
popa
or
push
out
xchg
test
and
sbb
dec
ljmp
rcl
mov
ss
push
lcall
mov
cs
xorb
int
push
xor
xchg
add
jmp
shrl
sub
add
data16
pop
pop
xchg
test
imul
cmp
sbb
test
adc
push
sarl
or
outsl
outsb
ret
enter
inc
repz
into
mov
fstpt
out
push
stos
cwtl
insb
push
sbb
pop
fcoml
test
adc
mull
add
fsubl
outsl
push
cmp
xor
mov
pushf
dec
das
mov
nop
push
movsl
imul
mov
sbb
push
pop
popf
sbb
sbb
mov
xchg
add
mov
fildll
rol
js
pop
push
out
pop
les
mov
mov
test
push
and
bound
xchg
shll
push
inc
gs
mov
frstor
repz
cmp
ret
jecxz
xchg
loop
mov
sub
in
movsb
out
mov
rcrl
xchg
enter
jecxz
xchg
scas
rorb
ljmp
mov
sbb
inc
dec
mov
push
stc
stos
push
xchg
orb
imull
ja
adc
xchg
iret
clc
inc
sub
or
out
adc
lret
in
out
cld
sahf
int3
or
repnz
cli
pusha
add
imul
jmp
mov
imul
cli
clc
lods
pusha
push
and
inc
scas
rclb
pop
jl
sub
rolb
aas
aas
es
lret
mov
push
scas
lahf
xchg
sub
lcall
in
out
out
mov
imul
and
mov
cmp
xchg
repnz
inc
push
cmp
mov
xor
lods
mov
xorl
jp
lods
in
push
fwait
sub
cmp
or
out
xchg
cmp
gs
clc
sub
mov
sbb
cmpsb
imul
push
add
sti
rclb
les
stc
sbb
icebp
lret
sbb
or
ja
fcmovbe
insb
aas
lcall
adc
adc
stos
sub
fsubrs
add
cli
cmpsb
stos
leave
lods
call
fwait
mov
sbb
mov
in
xor
xor
xchg
xchg
cltd
out
or
inc
pop
scas
les
adc
dec
push
jns
add
xor
or
mov
cli
enter
iret
adc
leave
sbb
inc
jo
test
pop
popa
fwait
xchg
jl
mov
adc
xchg
je
in
jle
repz
push
pop
std
leave
add
in
sub
dec
icebp
scas
pop
pusha
push
inc
xor
nop
filds
pusha
inc
xor
and
sub
add
push
mov
out
mov
in
mov
mov
repnz
loope
mov
and
lods
mov
das
ret
rcrb
sbb
cmp
jecxz
mov
andl
push
hlt
es
mov
sbbb
or
popf
sub
dec
cmc
xlat
push
js
mov
int3
sub
les
and
addb
or
adc
test
std
mov
add
shlb
shlb
jnp
lods
call
negl
in
pop
aam
or
popf
jg
hlt
xchg
cmp
sbb
sarb
stc
and
cmp
xor
and
shl
and
jg
mov
jecxz
shlb
xchg
mov
orb
xchg
dec
out
mov
add
mull
push
push
mov
pop
dec
mov
out
into
test
into
hlt
cmpsb
pushf
inc
adc
and
enter
xrelease
ja
push
add
ljmp
pop
jnp
scas
adc
push
roll
ds
pop
add
cwtl
les
mov
add
mov
push
xchg
fwait
dec
mov
inc
jl
push
test
mov
inc
and
pop
pusha
push
push
popa
and
pop
cmpsb
jae
fdivs
cmp
lds
fmul
mov
mov
mov
scas
push
cmp
cwtl
insl
push
lods
bound
int
ss
std
mov
pop
inc
or
jne
sbb
adc
inc
adc
ljmp
xor
mov
mov
add
pop
xchg
mov
or
xor
mov
scas
cld
sbb
outsb
bound
jp
push
sub
pop
mov
jmp
insb
rol
repz
pop
cmp
jnp
jns
adc
mov
mov
outsb
out
xor
aam
ss
push
cld
imul
lods
dec
add
adc
mov
inc
into
and
fcomps
push
and
xlat
sahf
dec
je
xchg
adc
subl
inc
adc
sahf
test
and
sbb
pusha
outsb
push
cmp
push
icebp
daa
pop
popa
xor
shrb
xchg
sar
mov
push
outsb
xor
out
pop
popf
aad
fbld
out
fiaddl
jge
fs
cs
pop
xlat
sub
inc
mov
sbb
xor
jmp
add
jl
mov
stc
test
nop
pop
dec
inc
mov
stos
xchg
pop
push
shlb
cmp
jo
sbb
adc
push
daa
pop
test
sub
dec
das
lahf
in
shlb
cld
pop
mov
cs
mov
jne
pop
ds
je
push
xchg
pop
neg
sti
or
outsb
jnp
addr16
fiaddl
add
mov
push
xor
das
outsl
inc
inc
or
pop
sbb
push
shl
xchg
out
adc
cmpsl
adc
mov
in
lcall
movsl
scas
out
cmp
pop
jo
or
xchg
or
sbb
stc
ret
cmp
and
sti
aas
xchg
orl
pushf
adc
sub
lahf
xchg
ds
jp
push
fnstenv
adc
rorl
mov
pop
lock
push
pop
incb
and
mov
clc
cwtl
mov
lcall
aas
xchg
bound
test
inc
and
repz
jbe
jo
in
fsubrs
jae
and
int
mov
ljmp
nop
sbb
xchg
add
cmp
sub
mov
add
mov
push
jg
fstps
pop
outsb
in
lea
xor
jo
gs
out
cwtl
out
ret
inc
subb
push
sub
loopne
fisubl
ret
cmpsb
cmp
inc
arpl
inc
add
xchg
push
sahf
push
xchg
add
pop
fwait
mov
inc
pop
data16
add
dec
cmp
xchg
loop
mov
dec
mov
xchg
adc
adc
lea
mov
adc
dec
cmp
lock
es
aam
push
mov
incb
xchg
mov
xchg
sahf
arpl
or
jecxz
insl
insl
fimuls
test
rcrb
mov
imul
jne
into
int
repnz
inc
mov
xor
ffreep
xor
xor
pushf
jnp
lods
mov
inc
sbb
mov
lret
ret
cmp
ds
cs
pop
aad
cmpl
cmp
push
in
and
sti
push
mov
mov
mov
push
nop
sub
push
xchg
out
adc
test
movsl
push
jp
cli
add
cmp
push
dec
cmp
daa
and
sbb
scas
dec
sbb
and
cs
in
test
xchg
sbb
loope
xchg
shll
sbb
out
xchg
adc
inc
jge
add
std
pop
scas
mov
scas
neg
fistpl
out
dec
xchg
sahf
fstpl
add
int
jb
fs
lock
pushf
jge
gs
nop
sti
cmp
pop
popf
fmuls
repnz
push
inc
pop
and
adc
loop
push
mov
int
xchg
stos
mov
sub
pusha
dec
jl
mov
les
scas
push
dec
es
in
sbb
cmp
xor
insl
rorl
xor
add
sub
fidivl
mov
mov
mov
aaa
sbb
and
push
add
les
or
cltd
in
xor
test
mov
pop
aaa
stos
pop
lock
push
andb
and
mov
jb
dec
incl
sub
pop
jg
jae
stos
mov
je
inc
push
mov
mov
jo
and
test
cmc
fsubl
lea
push
sbb
jne
lds
movsb
ret
cmc
stc
in
test
lcall
sbb
cwtl
gs
or
mov
imul
jb
dec
xchg
jns
add
fdivs
fwait
fwait
in
sub
xor
clc
fldl
cwtl
push
push
aaa
inc
out
cmp
add
add
ss
xor
mov
xchg
in
inc
lock
jl
daa
rolb
push
xchg
pop
adc
adc
insb
outsb
or
jmp
cs
and
cld
push
sub
in
lret
inc
mov
shlb
mov
push
mov
sbb
push
xor
sahf
jle
arpl
cmpsb
stc
push
pusha
lods
pop
fldcw
adc
dec
jo
or
rolb
lret
shll
sub
add
mov
ficomps
dec
insl
xchg
adc
ds
cmp
inc
and
push
out
sbb
and
test
jns
outsl
mov
mull
mov
aad
or
push
xchg
outsl
dec
inc
cltd
mov
jbe
loop
jae
shrb
icebp
jae
sbb
in
in
test
or
add
mov
repnz
in
pop
add
rcrl
inc
pushf
mov
adc
outsl
scas
icebp
push
leavew
and
pop
enter
pop
popa
pop
sbb
fmul
lods
cmp
rolb
mov
push
adc
inc
xor
lods
scas
ja
lahf
push
leave
mov
aas
inc
mov
mov
das
dec
fadd
jns
ficoms
xchg
js
jmp
jo
aad
js
push
jmp
rcrb
in
iret
and
lahf
andb
je
test
inc
or
xor
popa
pop
iret
mov
cwtl
fwait
addr16
shll
cmp
ficomps
pop
cwtl
mov
leave
mov
jo
imul
out
inc
cld
cs
scas
pop
or
push
mov
xor
push
push
pop
mov
or
push
sbbb
popf
ds
lods
cs
jbe
sbb
es
dec
in
in
cs
and
push
jecxz
aad
dec
mov
pop
push
xor
inc
stos
adc
cmp
test
dec
pusha
dec
mov
sbb
ja
stos
inc
fisubs
or
jnp
insb
scas
sub
ss
out
push
movsl
les
fdivs
movsb
xchg
adc
arpl
iret
shll
push
lahf
sub
outsb
push
cli
dec
inc
faddp
das
jmp
lret
fcompl
add
jbe
icebp
jecxz
adc
pop
and
mov
dec
lods
xor
les
dec
incb
xchg
sbb
fstpl
shlb
in
pop
xorl
cmp
mov
ss
aad
rclb
mov
sbb
xor
jle
mov
sub
lcall
push
push
xor
int3
adc
cmp
pop
cmc
leave
mov
pop
hlt
scas
mov
jae
cmp
pop
out
xor
dec
stos
and
sti
cs
xor
or
popf
dec
dec
outsl
xor
inc
test
xchg
loopne
mov
into
and
jg
adc
xor
testl
add
dec
sbb
gs
cmpsl
inc
pusha
sbb
jnp
outsb
inc
xor
outsl
inc
sub
test
loope
shrl
dec
push
jbe
or
out
je
xchg
xchg
xor
jo
or
jl
or
dec
sub
ljmp
jl
sbb
bound
jne
mov
push
sbb
ret
lods
add
jle
aad
xor
jl
dec
rcrl
out
and
nop
in
mov
lock
es
repz
sti
dec
xchg
sub
pop
clc
dec
out
sbb
bound
in
cmp
xor
cmp
in
sub
cmpsl
test
bnd
bound
shll
xchg
sub
inc
aaa
paddsb
out
xor
xchg
cmp
das
cmp
outsb
cmc
mov
les
sarb
inc
push
jle
sbb
add
repnz
fisubl
sahf
imul
lods
imul
pop
cmp
popa
rorl
in
sub
jne
or
popa
imul
cmp
dec
lods
lahf
and
movsb
iret
movsb
fdivrp
inc
pop
sub
leave
add
mov
pop
xchg
or
cmp
jns
dec
inc
xor
fidivrs
push
fmul
shll
dec
pop
popl
dec
pop
mov
mov
pop
add
shlb
xchg
push
pushf
push
cltd
mov
jbe
adcl
dec
jge
arpl
adc
sub
ret
dec
ljmp
push
jmp
or
imul
mov
outsl
mov
xor
xchg
jbe
mov
sbb
addb
or
sub
pushf
mov
sub
push
xchg
xorb
lock
xor
es
add
jmp
in
jae
into
cli
sbb
lret
iret
jmp
andb
and
out
enter
mov
aas
or
orl
pop
inc
div
mov
test
pushf
sub
rcll
sub
mov
leave
pop
or
scas
ss
in
mov
mov
jge
inc
retw
add
sti
mov
push
outsb
cmp
mov
pextrw
data16
mov
push
xor
jnp
mov
je
mov
xor
add
imull
jle
push
sbb
js
push
repz
sbb
push
loopne
cmpb
int3
pop
xchg
data16
popa
in
xorb
mov
cs
push
aam
dec
into
and
scas
pop
cmpsl
in
xor
rorb
mov
mov
sbb
sub
fmul
rolb
xlat
pop
cltd
int
xorb
aaa
sub
adc
push
in
push
loop
pop
mov
sbb
mov
add
popf
mov
xchg
xlat
das
dec
inc
pusha
inc
push
adc
sti
xor
fcoms
push
sub
xor
das
add
leave
int3
inc
sbb
pushf
push
adc
movsb
mov
aas
mov
mov
addl
sbb
and
add
fldt
movsl
lret
push
lcall
lahf
lds
lock
jmp
insl
scas
mov
inc
in
fdivrl
push
fstl
dec
lret
popf
sti
mov
pushf
test
in
into
push
pusha
sbb
push
and
push
add
fiadds
add
ljmp
sbb
pop
and
loope
subl
nop
in
dec
inc
add
add
mov
adc
fs
xchg
jno
pusha
lret
pop
xchg
outsl
xor
lock
xor
enter
mov
mov
rcrb
xlat
xchg
into
adc
fistl
mov
add
dec
mov
in
jbe
cmpl
push
and
push
in
movsl
lret
inc
lea
sub
sub
xor
and
push
decb
lahf
xlat
sti
js
out
push
cs
and
jl
repnz
test
loopne
inc
and
mov
aad
push
sbb
pop
mov
lods
push
fcomi
sub
gs
movsl
cld
int
jmp
repnz
mov
sbb
inc
xchg
aas
outsb
test
or
push
cld
inc
or
clc
nop
and
push
jbe
sub
adc
or
std
pop
data16
ds
dec
ljmp
pop
inc
fwait
cmp
pop
lods
xor
stos
sarl
ror
imul
pusha
movsb
dec
mov
dec
outsl
cmp
imul
mov
or
cmc
and
push
inc
fisubrs
adc
xor
jns
pushf
addl
rolb
sbbl
push
dec
pop
jg
and
pop
or
ss
lods
cmc
jp
xorl
sar
dec
sub
cwtl
je
jns
in
xchg
popf
dec
sub
mov
fistpl
ds
xor
inc
bound
in
nop
xchg
mov
dec
jbe
stos
xor
push
cmp
and
in
dec
aad
ss
jge
aam
mov
aad
xor
dec
sbb
inc
out
add
sub
pop
sbb
roll
icebp
cwtl
xor
pushf
jno
mov
dec
xor
push
out
mov
sbb
shll
xchg
jmp
xchg
xlat
les
cmp
and
cmpsb
popa
stos
popf
and
inc
push
rcll
les
fs
aaa
jle
pop
jg
lods
lahf
hlt
mov
adc
sbb
outsl
dec
rcll
stos
mov
and
jb
pop
daa
push
xchg
adc
clc
sahf
cltd
pop
cmp
fdivl
ficomps
int3
cmp
fldl
or
or
stos
stc
hlt
loop
test
test
mov
mov
decl
jnp
push
mov
fidivs
std
mov
mov
and
inc
movsb
cmpsl
xor
lcall
sub
in
pop
push
mov
fwait
xchg
xor
push
xor
jg
fdivs
xchg
cmpsb
xchg
jp
rolb
movsl
inc
adc
aad
out
and
fisttps
stos
stos
and
push
or
inc
js
lret
sti
inc
rol
mov
dec
jp
imul
hlt
pop
cld
movsb
inc
lock
sahf
cmp
push
pushf
outsb
fidivl
mov
test
cmc
call
dec
or
sbb
inc
popl
cs
fldz
ret
lods
stos
fs
aad
stos
xchg
out
dec
in
mov
stos
push
aad
push
pop
sbb
addl
mov
inc
int
das
incb
mov
push
test
dec
ret
sbbl
sbb
lods
sarb
fistl
mov
mov
mov
push
fsubrl
and
or
mov
jecxz
gs
inc
inc
repz
inc
movb
mov
mov
dec
pop
sbb
les
cmp
in
lock
imul
clc
shrb
dec
mov
push
jno
loopne
sbb
cmpsl
int3
pop
jmp
aas
push
fcompl
lods
test
pop
mov
cmp
jb
inc
mov
icebp
popf
std
mov
jmp
sub
mov
mov
sbb
je
add
adc
test
mov
cmpb
and
cmp
jb
loopne
sub
adc
mov
adc
xor
cmp
or
call
clc
outsl
fcmovne
add
outsl
pop
repz
pop
pop
stos
cmpsl
pusha
and
das
mov
mov
mov
addb
pop
or
sub
push
push
or
cli
sub
add
outsl
lods
mov
mov
dec
in
incb
pop
xchg
jo
negb
fadds
jle
mov
mov
lcall
jg
sub
ret
loope
mov
clc
rcr
negb
movb
jp
jns
jmp
call
pop
mov
push
ljmp
lds
stos
insl
cmp
stos
jo
and
ljmp
mov
dec
int3
adc
outsb
push
mov
dec
inc
loop
push
leave
sub
cmp
mov
xchg
cld
pop
subl
ret
mov
movsb
xor
aad
sub
or
lock
das
sbb
jg
sub
fsts
dec
in
ret
push
ja
add
cmp
in
sbb
cmpsb
dec
int
les
inc
jmp
dec
mov
mov
fldenv
enter
inc
mov
xor
mov
andb
or
arpl
frstor
outsb
ret
and
fildll
fistl
bound
movsb
pop
int3
mov
idiv
pop
aas
and
xor
insb
dec
jge
ljmp
hlt
out
fimuls
int3
cwtl
cld
shll
popf
push
sub
sbb
movl
push
xlat
test
fnstcw
jmp
and
sub
push
push
lcall
outsb
cmp
arpl
sbb
fcmovne
mov
in
sub
addr16
and
cld
jbe
test
sbb
or
cmp
inc
jle
xrelease
cltd
xor
iret
dec
ja
out
xlat
in
push
jae
cld
iret
sbb
cmpsb
pop
lahf
es
enter
iret
or
shll
sub
fwait
cltd
inc
mov
jge
xchg
cmp
mov
jecxz
mov
decl
and
aaa
inc
add
pushf
mov
mov
clc
jle
test
or
adc
pop
pop
jb
cld
aam
js
cld
ret
pop
ja
out
push
cltd
jae
push
cmpsl
and
or
jmp
call
xor
in
sub
pop
mov
mov
pop
cld
and
int3
cwtl
and
mov
inc
out
test
sahf
clc
out
dec
adc
jge
out
imul
fisubs
push
sbb
xlat
out
sbb
sbb
mov
mov
cmp
loop
popa
repz
push
bound
jecxz
addl
push
dec
push
inc
inc
jecxz
pop
push
mov
outsl
or
add
cmp
mov
jo
sbb
out
inc
scas
mov
jbe
testb
sahf
jge
or
cwtl
push
ljmp
xor
int3
ljmp
in
and
jmp
xor
inc
jb
add
cmp
mov
inc
add
lret
repnz
or
xlat
xor
mov
lds
mov
pop
outsb
scas
insb
outsb
push
stc
pop
pop
pushf
fwait
xor
sar
xchg
je
jle
cmp
cmc
sub
cltd
fsub
push
cmp
jl
and
or
loope
cli
add
mov
movsl
push
popa
lcall
xor
sarb
xchg
or
lcall
fsubrp
sti
pushf
jmp
mov
stc
rcll
jae
rclb
pop
xor
outsl
inc
push
push
sbb
pop
imul
sti
cltd
rolb
lahf
stos
push
out
std
mov
push
dec
pop
ficoml
inc
pop
out
lods
in
ror
inc
insb
test
cld
jbe
mov
pop
arpl
mov
and
div
aaa
sbb
ret
inc
rolb
cmp
call
add
bound
jnp
lahf
sbb
sbb
and
pusha
push
and
mov
icebp
mov
inc
dec
or
clc
iret
std
outsb
dec
test
and
sub
and
ret
mov
call
adc
faddl
push
xchg
inc
pusha
and
outsl
jg
or
sbb
bound
mov
cmp
das
out
mov
pop
add
xchg
sbb
fsubr
outsb
int3
mov
xlat
mov
std
imul
push
dec
mov
add
and
in
repnz
xchg
xor
ljmp
dec
out
mov
pushf
cmp
std
xchg
xchg
cmp
mov
js
pop
inc
pop
xor
dec
popa
mov
pop
scas
dec
fildll
inc
data16
xchg
pop
fucomi
or
sarl
mov
in
aaa
arpl
sarb
jne
sbb
icebp
je
filds
add
cmpsl
jns
rorb
mov
and
mov
mov
adc
insb
or
ja
test
clc
pop
jo
pop
pop
add
dec
inc
in
add
arpl
arpl
xchg
adc
xchg
cli
fstl
outsb
jae
mov
pop
shl
cwtl
out
pop
inc
jl
popa
mov
pop
dec
push
and
bnd
jbe
call
mov
dec
aaa
push
outsl
jno
mov
and
adc
push
mov
cmpsl
js
scas
rolb
mov
cmp
mov
push
push
pop
fiaddl
das
adc
rolb
xchg
ljmp
mov
aad
mov
sbb
dec
jmp
jo
push
out
cmp
or
std
xlat
sbb
inc
fnsave
jnp
in
adc
sarb
ljmp
aas
pusha
inc
jge
xchg
in
icebp
leave
call
out
repnz
dec
pop
sti
dec
andl
dec
lea
mov
lret
dec
jle
mov
pushf
sub
test
adc
or
enter
mov
cmc
stc
mov
lahf
xor
adc
fdivl
and
push
in
dec
aam
aaa
icebp
outsb
shlb
enter
fisttpl
and
push
les
dec
les
xor
xor
push
mov
sub
push
sub
mov
or
push
pop
dec
sub
inc
inc
inc
shrb
insb
rclb
repz
sub
ret
std
dec
lret
pop
popf
push
push
scas
fdiv
scas
and
scas
js
xchg
sub
mov
scas
or
push
int
mov
out
lea
hlt
ret
inc
repz
inc
push
add
test
push
into
or
scas
pop
mov
ds
lods
add
mov
xor
add
shll
subl
xor
fbstp
push
push
aaa
jnp
xor
push
pusha
jne
pop
mov
mov
xchg
jne
movsl
mov
sahf
fwait
pusha
scas
dec
jno
insb
fidivrs
jmp
ret
xlat
cs
push
xor
adc
repz
loop
imul
ss
mov
pushf
outsb
int3
rclb
xor
pushf
mov
add
cmc
push
aam
xor
insb
mov
and
addr16
rol
lret
adc
popa
xchg
and
loop
stos
push
mov
dec
jmp
jge
mov
test
dec
lahf
xor
aad
sbb
out
loope
jnp
sbb
in
push
sbb
dec
sub
test
int
clc
test
cli
push
int
mov
add
mov
notb
insl
mov
sbb
push
out
pop
in
xorb
ret
adc
in
pop
cmp
push
push
nop
cmpsb
cmp
data16
mov
or
adc
add
daa
mov
pop
imul
roll
outsl
add
negb
push
out
outsb
out
and
out
les
cmp
rcl
xorl
je
adc
xorl
jae
cwtl
adcl
out
push
test
add
add
mov
jge
dec
leave
cs
push
shll
push
sbb
mov
add
in
stos
js
iret
in
mov
dec
cltd
sub
jle
push
test
xor
add
test
sbb
adc
adc
fwait
loopne
sub
mov
pop
fdivrl
mov
cltd
daa
and
xor
lcall
mov
sub
jnp
out
test
jmp
xchg
xor
lods
imul
mov
mov
lret
mov
xchg
cmp
mov
cmp
sub
adc
fadds
lods
out
aaa
lock
sub
incl
fdivrs
and
outsb
lods
aam
add
jg
in
std
cmpsl
imul
shll
xor
mov
ds
mov
add
push
pop
call
sbb
fldl
dec
stos
fistpl
ja
imul
xchg
xchg
push
out
les
outsb
sahf
ret
loopne
aaa
pop
mov
sub
insb
mov
imul
invd
insl
int3
and
push
lahf
add
dec
aad
mov
sub
shrb
sbb
pop
sti
icebp
push
and
into
cwtl
and
cmp
or
out
sub
mov
bound
ljmp
test
decl
iret
out
cmp
test
mov
mov
test
pushf
adc
lcall
xchg
and
std
insl
push
adc
rcl
cmpb
cmp
adc
ja
jns
iret
jl
movaps
mov
out
sub
outsl
movsl
testl
cli
add
into
out
in
lcall
rcll
jno
push
aas
and
enter
jnp
fsubrl
mov
fs
cld
movsb
test
pushf
xchg
lret
adc
xchg
int
add
loop
cs
mov
cli
jns
repz
mov
pop
stos
shlb
mov
loop
lret
jg
imul
mov
pop
sub
out
addr16
pusha
js
loope
jmp
adc
loope
xor
inc
sti
je
inc
dec
iret
pop
cmp
test
jge
pop
pop
mov
loop
hlt
xor
adc
dec
dec
lea
ljmp
call
mov
xlat
test
lods
insl
adc
cmp
into
push
lock
xchg
jge
in
ds
das
sub
sub
lea
rcrb
adc
inc
push
cmc
pop
dec
mov
sti
mov
inc
cmp
cs
push
repz
movsb
testl
clc
sar
xchg
not
stc
cmpsl
sbb
pop
stc
loopne
push
aad
inc
imul
mov
adc
pop
enter
js
movl
push
push
push
and
jp
add
lret
stc
out
and
dec
adc
mov
xor
call
add
fildl
or
jae
and
das
pop
push
iret
nop
aaa
mov
pusha
cmp
gs
das
and
lea
jns
stc
test
mov
sbb
jnp
adc
je
jne
cmp
push
xchg
or
lea
aas
pop
lods
enter
and
sbb
out
push
mov
loopne
pop
test
test
and
shrl
jecxz
mov
cmp
add
pop
loopne
std
ds
in
mov
push
sub
mov
lods
fs
cld
xlat
aad
mov
xor
insl
sbb
push
outsl
xor
ret
in
fsubrs
lods
pop
pop
dec
push
cmp
sbb
lods
loopne
jbe
out
or
mov
inc
cmp
sub
inc
incl
sahf
popl
lret
xchg
xchg
xchg
loope
mov
xor
lock
cmp
jmp
mov
cmc
nop
lahf
jg
push
mov
jge
jg
xor
xchg
stos
pop
mov
add
fadd
sbb
jp
sbbl
cmp
pop
jge
jge
cmpsb
mov
imulb
push
jne
push
pop
xchg
cwtl
inc
shl
xor
cmp
adc
subl
xlat
scas
add
cmp
mov
fistps
or
xchg
mov
mov
movsb
cmc
xchg
loopne
jmp
mov
mov
pop
dec
out
ds
pushf
mov
rcrb
clc
pop
test
cmp
or
inc
mov
pop
dec
leave
jmp
int
or
cli
or
jl
xchg
xchg
in
sub
sti
arpl
sbb
lahf
cmpsb
inc
push
fldenv
jge
lcall
cmp
and
out
shlb
xor
ljmp
scas
pop
mov
sahf
dec
sub
xchg
add
mov
jle
xor
in
push
sbb
inc
inc
dec
lahf
pop
sub
mov
inc
push
jecxz
or
cs
add
inc
test
or
into
scas
inc
mov
cmp
bound
jl
xchg
lret
ljmp
pop
andl
sbb
fwait
shrl
jl
jge
sub
loope
cmp
icebp
lods
sbb
imulb
iret
mov
in
sti
push
xchg
cmp
push
fincstp
lret
sbb
sub
cmp
xor
sub
dec
repnz
mov
sub
cs
mov
lahf
mov
jle
mov
cmpsl
mov
enter
or
pop
mov
or
xorb
sti
dec
xchg
mov
int
dec
ss
xor
mov
lret
mov
mov
xor
popl
insl
outsl
sti
loope
popa
xor
xor
imul
stos
lahf
pop
dec
jns
aas
inc
cmpsb
sub
rcl
lods
loopne
pusha
sbb
fwait
cmp
cmc
sbb
push
adc
or
dec
jg
rclb
jnp
and
jno
pop
mov
mov
xor
xchg
iret
sbb
add
gs
or
xlat
in
ljmp
cmc
scas
repnz
fnstenv
inc
fnsave
lahf
mov
mov
jmp
adc
xchg
or
jbe
mov
pop
adc
push
loopne
test
pop
leave
dec
insb
stc
jl
mov
loopne
filds
xlat
in
sbb
cli
or
xchg
icebp
mov
push
mov
sub
sbb
dec
mov
sbb
ret
sbb
leave
lds
test
jl
lret
cmp
jae
das
jne
jmp
pop
push
mov
mov
in
cmp
stos
pop
out
pop
or
daa
mov
test
jmp
adc
into
test
inc
push
aas
es
pop
enter
add
mov
lods
ret
hlt
fildll
mov
cltd
xor
cltd
push
out
jp
inc
mov
into
sti
adcl
mov
scas
mov
jg
and
pushl
pop
pusha
pop
js
in
lea
inc
shlb
les
cmp
rorb
jmp
pusha
pop
ret
jp
hlt
dec
and
xchg
sti
fsubrl
aas
fcos
dec
into
dec
or
std
sbb
lods
popa
adc
push
mov
movsb
mov
hlt
add
mov
mov
in
cli
push
repz
ret
and
mov
sub
mov
mov
pop
jge
stos
xchg
inc
out
xchg
cltd
jns
mov
mov
push
call
hlt
rcll
lods
mov
cmpsl
inc
add
and
push
dec
cmp
ret
xor
push
pop
push
stos
aad
cltd
adc
dec
mov
mov
and
jle
lods
lret
add
mov
js
adc
faddp
jne
mov
bound
cld
call
inc
adc
iret
jbe
and
inc
lcall
lods
dec
dec
push
push
insl
xor
hlt
pop
mov
dec
cmp
inc
mov
in
adc
ret
mov
mov
fnsave
ss
mov
repnz
dec
push
sarl
or
add
cmc
jo
inc
dec
lret
sbb
mov
out
clc
mov
dec
es
cmp
jo
sbb
stos
scas
cmp
in
mov
cwtl
mov
adc
cmp
and
jns
pop
adc
pop
push
and
inc
jno
push
in
pop
cmp
roll
push
fidivrs
pushf
inc
ret
out
cmp
leave
and
mov
fcompl
aaa
jmp
imul
jecxz
jbe
outsl
cmp
jmp
pop
pop
push
fcomp
sbb
or
add
sub
mov
push
jnp
movsb
fbstp
popf
shrl
leave
out
mov
bnd
int
ja
adc
outsl
inc
sti
xchg
rcrb
jmp
fimuls
shlb
insl
rol
fdivs
sub
push
jnp
fdivl
int
ljmp
or
lcall
fimull
stos
scas
daa
mov
stos
sbb
addr16
dec
test
lret
pop
and
adc
shlb
bound
xor
idivb
xchg
outsb
aam
mov
subb
pushf
sbb
outsl
bound
outsl
enter
enter
push
lahf
add
das
or
rcrb
aas
ljmp
and
scas
push
pushl
addb
ds
or
test
test
out
fs
xchg
jnp
mov
lahf
xchg
sbb
jb
bound
adc
icebp
dec
fwait
mov
pop
out
pushf
mov
into
sub
jmp
mov
jno
lea
mov
xchg
lcall
jp
add
outsl
sbb
lods
lret
stc
and
adc
lods
adc
shlb
test
jp
and
inc
cwtl
mov
arpl
movsl
sbb
sbb
sbb
push
icebp
pop
dec
fwait
sub
add
and
push
je
ret
cmp
add
mov
in
test
imul
jge
sbb
or
rcl
sub
pusha
cmp
fcoms
ret
leave
adc
add
sti
mov
mov
mov
and
add
cli
cmpsl
xchg
aad
fbld
sbb
jg
fiadds
pop
sub
repz
ds
test
dec
insb
out
add
mov
test
je
push
adc
dec
sbb
fsts
call
mov
inc
out
int3
adc
test
jns
stc
jge
cmpb
jns
mov
nop
lods
adc
outsl
fsub
mov
cmp
adc
sbb
or
pop
mov
and
push
pop
test
push
mov
sbb
ljmp
ficoms
sahf
or
xlat
int
sub
orb
push
xor
cmp
pop
sti
and
loope
add
add
mov
cmc
pusha
addr16
ret
cmpsl
sub
adc
fdivs
jl
lods
lret
test
mov
dec
jae
arpl
outsl
add
cmp
out
inc
inc
and
outsb
repz
cmp
jmp
lods
jmp
mov
sbb
inc
je
jmp
or
out
fnsave
pop
mov
fldenv
push
adc
sbb
inc
mov
lcall
sub
jnp
cmp
leave
clc
push
insl
xchg
imul
cmpb
jl
sub
add
ljmp
jl
adc
adc
push
imul
fstl
and
push
cmp
call
loope
bound
xor
aaa
cmovg
lcall
imul
sti
mov
enter
xchg
mov
cmp
push
hlt
sbb
sbb
adc
jmp
mov
hlt
inc
push
das
sub
cmp
popl
movsb
lods
inc
push
jle
hlt
dec
lret
cltd
fdivrs
inc
xchg
sub
jle
ljmp
mov
or
add
or
rcr
push
xor
movsb
xor
fdivrl
pop
out
mov
std
mov
lcall
xchg
mov
push
aam
imul
mov
movsb
cmpsb
jb
ror
mov
test
lds
sbb
inc
shlb
jle
into
add
shrl
and
add
lea
push
xor
daa
lea
sbb
test
inc
pop
push
dec
xchg
add
jnp
inc
sub
orb
dec
fildl
push
inc
mov
xor
das
jp
or
enter
dec
call
ljmp
jo
and
cmp
dec
call
push
cltd
xchg
sbb
ret
add
and
repz
std
ret
xor
jecxz
subl
jg
mov
jmp
cli
add
andl
or
xor
lahf
lcall
les
push
sbb
sbb
push
outsb
clc
add
sbb
pushl
push
sub
push
popf
mov
cmc
pop
push
hlt
fsubl
mov
cmpsb
jg
lock
mov
inc
and
sub
out
cltd
adc
jmp
pop
xor
popf
and
pop
scas
mov
jnp
push
sbb
pushf
ficompl
lret
pop
xor
lret
addb
jns
inc
jmp
arpl
fdivl
dec
roll
and
mov
addr16
xor
mov
or
lods
push
sbb
stc
out
cmp
int3
sub
xor
xchg
ret
mov
in
ss
imul
add
adc
loope
movsb
jp
xchg
pop
mov
jge
shll
pop
in
hlt
sub
addb
inc
sub
cmp
ja
jg
insl
and
jg
ss
add
fimuls
mov
mov
fsub
sbb
fdivrl
rcr
add
push
and
dec
lock
enter
and
cmpsb
out
into
inc
adc
mov
movsb
xor
popa
ret
in
loop
lret
es
ja
cmpl
push
mov
jecxz
cs
push
movsl
rclb
push
xchg
xlat
cmp
adcl
std
xor
jmp
outsb
xor
mov
lret
or
lock
mov
repz
xor
and
dec
fwait
enter
mov
lcall
jmp
xor
inc
xor
clc
jnp
inc
mov
mov
cld
imul
add
push
jne
inc
xor
mov
loop
cmp
es
adc
fistl
pop
test
in
xchg
out
inc
mov
imul
outsl
loope
jge
xchg
enter
out
dec
xchg
lds
test
lahf
test
dec
inc
xchg
mov
or
inc
push
mov
pop
inc
or
jno
pop
xchg
and
push
dec
movsb
movsl
sahf
loop
gs
repnz
lock
and
push
add
in
push
fwait
movsl
jo
inc
out
repz
jbe
imul
and
inc
lea
pop
ds
fstpt
vpcmpeqw
out
jle
pushl
sbb
mov
stc
mov
pop
int
jecxz
push
into
cmp
stos
lods
dec
hlt
aas
cmpsl
cli
xor
push
mov
inc
inc
rolb
dec
jno
imul
xchg
popa
daa
lods
push
outsb
ss
ljmp
adc
ret
stc
cmp
fnsave
sbb
cmp
xor
and
lret
sarl
lcall
inc
push
push
dec
dec
and
mov
insl
outsb
jl,pt
jbe
jae
ss
shrb
jo
pop
push
push
in
test
push
adc
adc
and
out
xchg
sbb
xor
stc
cs
test
pop
pop
push
lret
dec
popf
lods
fmul
fmull
dec
lcall
mov
xor
add
cmpsl
mov
decb
shrb
adc
ds
pop
mov
add
stos
cli
loop
or
push
test
je
push
pop
lock
jnp
btc
xchg
aad
lods
push
lds
push
in
mov
cmpsl
xchg
push
cld
scas
outsb
jecxz
jge
fiaddl
fnsave
mov
lret
aaa
xchg
loop
into
insb
pop
pushf
das
mov
cld
mov
jns
insb
mov
mov
aaa
in
mov
mov
mov
pop
jp
fldcw
dec
xchg
mov
adc
jo
xchg
imul
and
fistl
aaa
fiadds
outsl
jp
xchg
jb
xchg
push
xchg
jp
cld
pop
adc
js
jbe
jg
stc
xor
fwait
loop
outsb
xor
hlt
or
imul
frstor
in
std
int3
adc
sub
adc
xor
push
add
push
push
or
addr16
shl
ficomps
jo
movsb
leave
call
push
adc
and
lds
or
cmp
aam
push
aas
jle
cmpb
ret
ror
out
clc
mov
pcmpgtw
imul
add
call
fsubrs
sub
adc
xchg
pop
clc
mov
mov
dec
pop
push
pop
xchg
adc
scas
sub
ret
lret
in
push
push
mov
fisttps
daa
out
xchg
pop
xor
mov
fwait
pop
cmpsb
js
rcrl
ljmp
jae
fdivrs
mov
jecxz
pop
mov
adc
fs
sub
movsb
mov
jbe
aam
mov
addl
gs
out
lods
imul
ss
cwtl
sub
push
idivb
jge
and
lea
test
cmc
inc
pop
lock
shl
dec
jg
xchg
dec
mov
cli
push
or
imul
movsl
insb
cmpl
loope
out
pop
rcrb
rolb
test
sbb
jns
leave
fmul
ss
sahf
cmpl
or
mov
enter
sub
clc
lods
jg
pop
out
mov
insl
dec
push
loop
aam
xrelease
ficoms
int3
push
negl
cmpsb
adc
popf
lods
rorb
loop
loopne
mov
pop
test
or
push
jmp
jb
mov
mov
cmpsl
jge
stos
xchg
lret
push
mov
sbb
mov
lods
jno
inc
or
std
xchg
sbb
leave
popa
outsb
inc
lds
inc
sti
jbe
jl
insl
mov
and
dec
inc
push
jae
in
mov
mov
pop
pop
outsb
mull
aad
push
cmp
ja
jne
icebp
repz
arpl
pop
out
in
sub
mov
fistl
dec
xchg
jg
dec
sub
pop
mov
cltd
faddl
shl
fidivrs
push
icebp
or
or
mov
arpl
lods
jg
push
push
aas
fwait
orl
fbld
xchg
stos
mov
dec
dec
dec
aaa
or
mov
imul
ret
xor
dec
sahf
out
jo
loope
lock
add
js
mov
icebp
subl
and
push
add
xlat
cmpsl
jmp
sbb
mov
out
mov
ficompl
dec
popa
fwait
or
cwtl
push
mov
pop
mov
jecxz
pop
jg
aam
mov
xor
and
test
lcall
mov
mov
out
cmp
jg
in
test
aam
cld
out
movsb
jbe
mov
mov
cmp
data16
loop
pop
imul
rorb
cmovns
mov
dec
mov
add
jecxz
xor
and
std
cmp
clts
sub
rolb
jno
inc
loop
xchg
mov
ljmp
aaa
jp
cs
adc
outsl
addr16
das
nop
ja
sub
jb
dec
sub
xchg
xor
pop
pusha
sub
loope
arpl
into
jmp
cmpsb
add
mov
aad
and
test
pop
and
movsl
cmp
jb
and
mov
inc
outsb
pop
mov
call
pop
sahf
push
shlb
add
aam
stos
push
xchg
adc
je
mov
xchg
aas
pop
std
lahf
sbb
mov
cwtl
ljmp
push
mov
jp
add
rcrl
insl
scas
or
and
fnsave
jnp
adc
sub
xchg
out
cmp
fnstsw
ficoml
xchg
mov
xor
adc
adc
icebp
in
les
lret
shll
dec
imul
jns
adc
adc
fucomip
pop
outsl
xor
jo
nop
dec
mov
shr
adc
icebp
pop
ficoms
sub
inc
or
jle
loope
daa
mov
jb
popa
jp
adcb
mov
push
sbb
add
ja
das
mov
lds
inc
mov
ds
pop
incl
out
into
loope
in
sub
jle
inc
cmp
xor
and
ret
or
xor
mov
scas
pop
pop
mov
lods
jmp
sarl
push
movsl
push
dec
out
ficompl
xlat
cmc
imul
lds
test
les
push
ja
or
lock
dec
arpl
iret
pop
fidivs
xchg
sbb
sub
divb
pop
insb
sbb
inc
ret
pop
repz
rorl
int3
and
mov
pusha
sbb
xchg
scas
cmp
and
inc
sbb
or
andl
loope
push
pop
int3
aas
inc
add
sub
lcall
int
or
movsl
sbb
xor
out
mov
ret
stos
jnp
or
sbb
subb
jmp
push
mov
es
adc
mov
loope
mov
adc
mov
jno
push
inc
sub
popa
pop
idivb
mov
or
nop
adc
shrb
repnz
inc
icebp
dec
out
dec
mov
shrb
or
jae
mov
jno
jno
hlt
loop
sbb
push
mov
int
dec
std
push
imul
in
and
inc
xlat
inc
push
aaa
adc
and
mov
push
in
dec
or
jb
add
jno
insb
mov
mov
test
jge
in
dec
imul
jmp
mov
sub
addr16
pop
dec
outsl
mov
push
sbbb
add
daa
and
cli
popa
fnstsw
cltd
cwtl
xchg
mov
lds
dec
and
fldl
sbb
imul
bound
pop
mov
push
jle
jmp
cs
iret
xchg
in
cli
test
push
inc
mov
mov
sub
cltd
dec
jecxz
rcr
xor
icebp
pop
push
inc
cmc
inc
jne
sub
jge
outsl
push
or
jg
stc
mov
mov
sbb
hlt
or
aam
dec
dec
ds
aaa
rcrl
ja
pop
pusha
mov
xchg
mov
test
xor
cltd
cs
sbb
cmp
adc
jae
cld
inc
inc
cmp
xlat
jmp
ret
mov
aad
xchg
mov
arpl
sti
ja
stos
fnstenv
mov
cmp
or
or
mov
lods
inc
sbb
das
in
enter
aas
xchg
mov
xchg
mov
ja
in
cmp
scas
ss
sar
stos
or
push
stc
rcrb
test
push
dec
mov
adcl
and
stc
das
test
lods
mov
imul
jne
mov
lret
and
out
dec
push
and
sbb
sbb
jl
nop
mov
pop
lods
sub
cltd
test
add
and
pop
add
dec
in
lcall
cmpsb
dec
xchg
pop
mov
imul
jno
bound
push
stc
jmp
pop
aam
lds
xchg
dec
mov
inc
imul
mov
js
jne
scas
mov
mov
test
pop
pop
shr
mov
jecxz
jae
mov
add
shlb
sbb
in
or
rcl
rol
xchg
lock
sub
mov
pop
dec
and
stos
dec
int
push
cld
and
out
je
es
mov
pop
icebp
into
xchg
mov
xchg
inc
pop
cmp
mov
addr16
cmp
pop
cld
test
into
cwtl
je
adc
cmpsb
adc
mov
jnp
jno
test
dec
mov
divps
xchg
ja
scas
xchg
sbb
sti
sbb
cmp
mov
rolb
shrb
stos
cmp
add
push
jge
pop
cmc
adc
dec
cld
push
sub
cs
ret
jb
or
jg
dec
jmp
rolb
jae
or
jmp
das
mov
mov
lods
inc
notb
mov
sub
pop
mov
adc
rcll
lret
mov
orb
adc
cli
aad
lea
cli
cmpb
pop
pop
jmp
inc
mov
mov
movsl
cmc
jl
std
cmp
dec
lods
ffreep
rcrb
and
leave
fistps
and
popf
inc
xchg
jae
push
sub
in
cmp
or
sbb
sbb
mov
sbb
hlt
pop
adc
adc
xchg
inc
sub
pop
fucompp
in
lea
xchg
push
cmp
adc
inc
in
mov
mov
arpl
mov
ds
loopne
sub
sub
xchg
inc
mov
inc
aas
test
pop
push
cmovl
add
pminsw
into
int3
fiadds
out
pop
mov
adc
mov
or
call
lods
dec
jnp
push
sbb
in
push
test
fs
cmp
or
scas
mulb
jg
add
sahf
xor
or
aaa
dec
xor
scas
scas
mov
daa
pop
xor
out
sub
and
push
sbb
fsubl
cmpsl
fwait
cli
jo
hlt
pop
mov
mov
clc
add
gs
dec
addr16
loope
pop
adcl
push
adc
imul
sub
rclb
pop
xlat
push
adc
add
mov
push
ret
lods
pop
sbb
stos
stos
imul
je
jo
dec
mov
xchg
xor
jns
fcmovb
aad
cmpsl
adc
push
out
mov
push
mov
cmp
mov
xchg
xlat
cmp
xchg
dec
push
pop
push
cmpsl
sbb
aam
fimuls
adcb
pop
sbb
xchg
pop
dec
enter
xor
cmp
push
movsb
jmp
jecxz
adc
out
or
lds
ss
xchg
inc
cmp
xchg
scas
push
mov
andb
lahf
cmp
loop
add
pop
lret
sbb
rcll
cs
es
mov
inc
mov
aam
push
es
mov
mov
loope
pop
cmp
test
test
xchg
ja
push
add
cmc
pop
inc
sbb
xchg
cmpsl
sub
sub
add
lret
repz
movsl
jb
js
mov
lret
fsin
or
int
outsb
sub
out
das
mov
jecxz
ds
push
dec
jp
vmulsd
sarl
jmp
jge
rcll
add
fcoml
adc
add
cmp
frstor
push
mul
mov
arpl
lret
mov
push
push
movb
add
adc
arpl
add
adc
enter
mov
jb
out
jge
ds
call
sbbl
shrl
mov
loopne
or
mov
call
ss
mov
sbb
mov
pop
or
xchg
pop
dec
int
pop
hlt
jecxz
aas
mov
subl
push
adc
or
insb
mov
mov
or
lret
fdivl
in
imul
sub
jne
mov
xor
hlt
in
lcall
aaa
in
lahf
popa
imulb
int
lods
pop
movsb
lock
out
or
inc
adc
movsl
cmp
hlt
push
mov
into
mov
sub
cmp
lret
imul
mov
add
sti
and
add
mov
lea
pop
fldcw
lcall
and
popf
sub
push
sbb
sti
testb
sahf
fcmovnbe
loope
lea
mov
in
clc
xchg
popf
sbb
add
call
js
int
xor
ljmp
mov
cs
push
fmulp
xor
cmpsl
ljmp
fsubl
mov
cmpsb
push
sbb
mov
in
xlat
inc
or
out
mov
adc
dec
pusha
add
stos
ljmp
jnp
test
cmc
mov
pop
pop
ss
aam
xor
shrl
and
les
cmp
push
leave
jge
mulb
leave
adc
lcall
xor
mov
aad
es
fcmovne
cmp
cmc
lcall
sbb
fsubrs
push
jne
mov
ret
jns
sbb
add
arpl
pop
shlb
jno
and
cmp
push
scas
js
std
add
xchg
aam
lret
les
mov
icebp
es
pushf
cltd
cmp
out
in
mov
inc
jp
mov
fwait
push
or
dec
dec
or
fwait
movsb
shrb
mov
rcll
mov
leave
in
cmp
outsl
fistl
mov
sub
pop
and
movsl
or
test
cmpsb
dec
in
xchg
mov
push
in
leave
or
mov
fsubp
jbe
addr16
dec
mov
and
les
outsl
push
fidivl
fs
dec
mov
fcmovbe
in
inc
mov
ljmp
lret
jne
in
out
sbb
ds
mov
sub
jl
stos
and
mov
mov
fistl
rorb
inc
mov
sub
mov
ret
pusha
in
testb
shrl
data16
gs
sub
loopne
add
dec
mov
cs
dec
push
lds
push
sub
xchg
cltd
jbe
sbb
inc
nop
shlb
sbb
xchg
imul
mov
jmp
cmp
pop
jno
add
pop
mov
add
push
daa
sub
pop
or
fidivl
test
cmp
bound
loope
subl
sbb
pop
mov
fsubrs
mov
add
xchg
pop
ret
cmc
outsl
mov
mov
pop
sbb
cmp
adc
cmp
repz
jno
sub
xchg
push
shrl
imul
xor
ds
lods
aam
mov
mov
jecxz
sbb
xor
dec
mov
adc
inc
cltd
sbb
mov
xchg
xor
cltd
xor
push
addr16
in
jbe
stos
mov
dec
push
in
cmp
in
and
stos
test
and
mov
xor
mov
mov
push
jl
nop
sbb
dec
adc
rol
arpl
jp
and
cmpsb
mov
adc
sub
lret
mov
adc
shlb
sub
xchg
mov
fwait
dec
sarl
orl
or
stos
or
lahf
push
push
inc
cwtl
mov
cmp
push
push
in
pop
add
incb
pop
xchg
jno
arpl
push
sbb
nop
call
push
pop
sbb
divb
je
pop
pop
pop
sbb
fwait
pop
push
inc
in
das
out
pop
imul
test
fs
ret
ss
in
push
mov
stc
xchg
rorl
stos
push
cmp
jge
add
into
sbb
orl
cmpsb
adc
add
inc
add
ret
ja
pop
scas
fisubrs
fdivl
lods
mov
loope
jno
jg
mov
cmp
inc
push
or
xor
daa
fs
xor
test
subb
test
inc
inc
dec
mov
mov
mov
sub
je
scas
xor
sub
and
negb
notl
jg
frstor
jle
xlat
int
sub
lret
push
dec
cmpsb
xor
mov
frstor
prefetch
pop
orl
aas
xchg
aas
push
dec
xor
iret
mov
add
orl
in
outsb
je
sub
outsl
aas
inc
ret
push
ds
xor
insb
pop
leave
push
jns
inc
shl
inc
xor
inc
in
cmp
mov
in
nop
pop
inc
pop
or
mov
negl
mov
shrl
xchg
inc
mov
pushf
pop
mov
pop
sub
movsb
lcall
or
dec
les
inc
enter
jns
mov
adc
shll
out
mov
js
cltd
fwait
xlat
aam
stc
test
ret
pop
cmp
pop
lock
subl
lret
jecxz
pop
lahf
fstpt
pop
shrl
call
xor
fs
cwtl
mov
dec
sti
enter
jge
push
out
and
sbb
lods
push
jge
fucom
and
dec
fcompl
js
call
mov
je
fstps
cwtl
hlt
push
stos
push
push
popa
ljmp
ja
sahf
mov
in
xchg
mov
fistpll
ljmp
inc
cmp
and
ret
filds
jo
out
cmpsl
jns
cmpsb
daa
cld
mov
or
push
iret
fmuls
sbb
int
inc
clc
jg
cltd
adc
jecxz
add
ja
xlat
lahf
jle
mov
and
adc
mov
mov
or
add
xor
cmpsl
jae
ret
cmpsb
push
into
loopne
cmp
andb
or
arpl
adc
in
adc
inc
dec
cs
insb
movsl
lea
sub
fidivrl
xchg
cmp
loope
das
push
adc
test
pop
dec
sbb
fiadds
dec
mov
stos
pop
jecxz
mov
jnp
pop
mov
imul
adcb
ret
or
adc
sbb
pop
and
lahf
stos
cmpsl
fwait
insb
xchg
popa
fdivs
jne
sbb
xor
mov
xchg
and
leave
add
cs
icebp
pop
cs
mov
jns
sahf
lea
lahf
add
jecxz
sbb
sbb
out
aad
mov
pop
add
sbb
fsubs
fs
push
xchg
lret
pop
bound
lret
insb
push
jg
xor
dec
add
out
jge
mov
das
outsl
fistl
je
lret
mov
lahf
in
xchg
dec
pop
jle
imul
push
sbb
pop
fimull
lds
call
dec
cltd
stos
int
into
dec
adc
fidivl
rolb
and
or
pop
xor
lea
outsl
xchg
sahf
insb
ss
xchg
stos
jp
inc
push
pop
push
data16
jno
xor
mov
pop
nop
lcall
mov
lea
sbb
or
jbe
push
mov
mov
filds
xchg
rcll
in
push
lods
orb
cmp
push
inc
mov
pop
jno
or
mov
mov
cmp
aad
pop
rclb
jb
pop
push
lea
or
fnstenv
adc
xor
mov
mov
mov
das
or
jns
cltd
sbb
movsl
arpl
shlb
add
into
xchg
fldenv
sub
inc
pop
int
adc
jge
into
or
xchg
sub
aas
inc
sbb
test
jno
mov
sti
xchg
inc
sub
into
and
fimull
adc
aam
or
into
add
cmp
lahf
int3
sbb
cli
shlb
adc
test
fists
call
lahf
sub
push
add
test
sub
mov
jg
mov
ljmp
jne
sbb
leave
add
imul
xlat
fimuls
adc
and
js
hlt
push
fldl
int
dec
pushf
repnz
push
rcll
sbb
lcall
pop
in
cld
jno
mov
pop
xchg
and
jg
int
cmp
fisubl
pop
xchg
cmp
fcmovne
mov
cmpl
out
mov
icebp
xchg
sbb
dec
es
mov
in
pop
and
or
inc
lahf
ret
xchg
mov
inc
xor
jnp
icebp
lahf
xchg
jbe
push
sub
repnz
add
daa
add
push
arpl
xor
cmp
mov
mov
int3
mov
sbb
pop
dec
push
jae
pop
les
add
scas
dec
inc
imul
sbb
out
test
pop
outsb
mov
jo
sub
cmpsl
jge
data16
mov
fdivr
pushf
fadd
out
fisttpll
movsb
ret
scas
outsb
ljmp
lret
leave
cmp
aam
fs
xor
into
mov
cmp
mov
mov
adc
push
lret
dec
xor
pop
jb
rcl
cmp
mov
imulb
push
iret
lret
pop
jbe
xchg
std
and
jmp
arpl
mov
int3
imul
int
imulb
xchg
or
in
add
aas
dec
sub
mov
cld
lret
cs
xor
ds
insb
mov
push
ds
push
das
test
and
cmpsb
data16
lret
arpl
mov
sbb
adc
xchg
pop
cmpsl
add
jmp
adc
in
outsl
and
sar
jp
push
scas
jl
addr16
fbstp
pop
mov
loopne
bound
rcl
call
sub
out
add
or
enter
mov
outsb
mov
push
lret
fnstcw
bound
jmp
out
mov
jl
mov
mov
sub
xor
daa
daa
add
xchg
faddl
or
jne
ljmp
cwtl
cli
int3
aaa
gs
inc
imulb
clc
push
and
lods
lods
xor
lcall
or
adc
cli
lods
mov
cmp
mov
adc
outsl
xlat
sub
les
lahf
xchg
fucomi
xchg
test
mov
gs
pop
pushf
sub
call
adc
test
inc
jmp
dec
addb
mov
add
cmp
xor
es
pop
scas
sahf
xchg
out
pop
ja
mov
sbb
push
push
mov
or
lret
lods
push
out
leave
push
and
fcomps
sahf
or
addr16
jle
xlat
or
dec
pop
mov
cmp
sub
mov
sbb
sbb
sahf
les
mov
fsubr
xchg
bound
jae
cmpsb
push
mov
xchg
sbb
pop
or
lds
jne
popa
push
or
push
push
xlat
dec
clc
dec
push
dec
inc
xchg
push
rclb
add
fbstp
mov
inc
xor
es
loop
push
inc
push
push
bound
loope
in
loop
xor
daa
out
and
fdecstp
cmp
dec
jg
add
xor
or
mov
push
shlb
sbb
jg
decb
mov
fnstsw
imul
or
mov
dec
shll
mov
add
fcomps
jmp
cmp
mov
jne
aaa
pop
sbb
or
outsl
xchg
add
push
sub
pop
mov
sub
jae
rcrl
cld
adc
mov
cmpb
mov
nop
outsl
push
sub
out
xor
push
js
push
or
movsl
push
push
xchg
addr16
pushl
in
call
cwtl
lods
fcomi
sbb
inc
lods
ds
out
dec
sub
and
inc
aaa
push
loopne,pn
mov
adc
clc
xchg
sbb
mov
stos
test
cmp
push
or
aas
dec
enter
xchg
pop
push
push
sub
in
int3
or
rcr
adc
xchg
mov
mov
leave
in
push
lcall
stos
mov
rcrl
push
dec
popf
xor
int
lock
sub
jo
int3
insb
gs
mov
push
les
xchg
in
mov
fsubl
adc
cmp
fldenv
mov
lods
inc
add
jb
xor
test
into
mov
scas
inc
xor
sahf
dec
insl
adc
mov
xchg
std
and
pop
insl
mov
xor
sub
insl
repz
or
sti
ret
jp
movsb
pop
push
jae
mov
jns
mov
mov
data16
imulb
fsubr
mov
mov
shrl
jge
stos
shlb
mov
rcrl
ret
xor
mov
inc
ficomps
jnp
outsb
push
and
mov
nop
cmp
and
cmp
arpl
push
mov
adc
mov
clc
addb
and
stos
xlat
jle
negl
xor
dec
lret
fstpt
sbb
repnz
inc
cli
and
jle
or
ret
movl
cmc
jmp
sub
lock
mov
mov
xchg
scas
jge
out
or
mov
mov
pop
cmpsl
push
aaa
in
xchg
push
fwait
imul
imul
scas
test
and
adcb
mov
and
cli
cmovne
arpl
mov
push
scas
lods
mov
imul
enter
pushf
out
sahf
out
xchg
push
lcall
cmpsb
lock
pop
xor
mov
cmp
adc
fucomp
ror
jns
scas
jg
or
test
lock
rcrl
inc
mov
mov
fsubrs
pushf
adc
push
sub
out
sbb
pop
stos
pop
dec
out
pop
sub
push
inc
sub
and
repz
ret
xchg
scas
add
testl
das
cs
or
jge
push
in
jnp
enter
xchg
aad
xor
inc
jmp
loop
dec
adcl
xchg
outsb
nop
push
or
loope
cmp
push
push
in
cmpsl
pushf
mov
inc
popf
adc
add
jno
add
fbstp
inc
push
in
pop
lock
pusha
imul
fcompl
xchg
adc
lcall
js
stos
cmc
shl
test
stos
mov
inc
inc
jge
jae
pop
stos
push
rclb
mov
xchg
aaa
into
sub
jge,pt
subb
aaa
dec
pushf
cmpsl
mov
push
gs
dec
xor
pop
add
push
xor
scas
push
in
xor
mov
cli
xor
push
mov
shlb
mov
pop
shrl
sahf
xchg
imul
dec
cltd
mov
inc
push
jne
sub
loopne
and
clc
mov
push
test
nop
add
xor
cs
jb
mov
xchg
testl
mov
stc
inc
lcall
mov
cli
scas
cmp
cwtl
or
push
insl
daa
dec
sub
adc
addl
fists
inc
test
aam
clc
bound
add
jb
xchg
sbb
out
or
xor
into
push
dec
aad
inc
clc
pop
jle
and
and
add
xchg
bound
repnz
mov
sahf
pop
cmp
inc
scas
dec
pop
leave
cltd
jmp
imul
lcall
iret
repz
repnz
push
icebp
pop
iret
sbb
movsb
cmp
dec
fwait
ror
mov
push
stos
push
mov
xor
mov
mov
lret
xor
cld
mov
lret
sbb
inc
adc
fildl
dec
jno
inc
test
sub
jmp
repnz
adc
jmp
fimuls
in
push
loope
jge
lahf
pop
inc
jg
loope
add
pushf
push
mov
inc
insl
adc
imull
repnz
pop
pop
add
arpl
mov
jne
mov
call
push
xchg
sub
insb
test
lcall
dec
and
pop
fstp
scas
sbb
incl
or
sub
out
test
or
lds
ja
pop
sub
cwtl
aaa
rorb
cmc
xorb
outsl
ficompl
or
punpckhbw
jle
xchg
and
rcl
popa
adc
lret
insb
cmc
movsl
jg
in
test
out
add
sbb
out
add
add
fs
sbb
sti
adc
xchg
jmp
push
rclb
and
fdivs
adc
aaa
xrelease
mov
xor
inc
das
cmp
push
push
add
inc
das
xchg
sub
adc
popa
cld
sbb
clc
dec
cmpsl
xchg
je
cmpsb
xchg
call
pop
sub
jg
fldcw
pusha
xchg
xchg
rcrl
sub
lahf
call
fistpll
out
pop
stos
sub
dec
lock
mov
mov
clc
mov
cmp
push
das
mov
dec
cmc
sbb
ljmp
sbb
cmc
aaa
mull
sbb
mov
xor
movsb
leave
adc
inc
test
adc
ljmp
in
mov
iret
cwtl
xchg
push
lahf
xchg
mov
mov
or
sub
cmp
decl
adcb
iret
adc
imul
js
lcall
or
lcall
lock
cli
xchg
cli
and
pop
fstpt
and
test
pop
cmp
mov
mov
adc
stos
leave
inc
or
out
or
adc
jecxz
push
icebp
int
dec
jo
dec
repz
jg
pushf
push
jno
aam
sbb
jp
push
repnz
xorl
fildl
push
in
dec
loope
mov
gs
aaa
xor
js
and
or
in
jns
loop
js
in
push
add
flds
pop
aas
add
mov
jge
repnz
mov
mov
mov
mov
inc
mov
pop
shrl
and
cmp
push
cmp
cmp
imul
sub
addl
inc
lods
fwait
sub
stos
int3
arpl
cltd
loop
ret
xchg
fidivrl
icebp
xor
adc
int
mov
loop
dec
incl
cmpsb
pop
fidivrl
pop
sub
outsl
cmpsl
mov
mov
pop
or
mov
dec
mov
jmp
int3
mov
pushf
xor
push
adc
sarl
negb
roll
adc
es
in
std
dec
sbb
icebp
icebp
and
daa
aad
addr16
cmp
dec
movsl
pop
fimull
jle
pop
popf
fadds
mov
fiaddl
mov
fdivp
stc
jae
and
dec
add
out
sbb
repnz
mov
popf
ss
pusha
imul
int
cltd
xor
fwait
std
inc
movsb
jmp
add
in
push
jne
out
xchg
dec
sbb
xor
xlat
fldcw
pop
mov
adc
sbb
stc
leave
add
pop
insb
aad
adc
inc
add
dec
daa
push
pusha
adcl
jg
flds
or
and
mov
rcll
sub
adc
jbe
icebp
popf
or
mov
lods
int
xor
insl
add
loopne
cs
lcall
sbb
lret
loopne
cmp
jae
adc
or
inc
or
fstps
fidivrl
dec
and
mov
icebp
mov
xchg
mov
mov
jmp
insb
aas
and
test
cld
mov
andl
inc
scas
inc
mov
jb
cltd
mov
jecxz
jae
cwtl
mov
mov
repz
mov
mov
and
scas
std
daa
add
add
rorl
xor
mov
movsb
sbbl
sub
pop
mov
xchg
scas
jbe
jge
fdivl
sub
popf
sub
push
icebp
dec
add
movsb
fiaddl
lock
mov
rorb
jmp
out
test
fdivrp
fcomps
repnz
lea
popl
sbb
popf
aaa
jl
jmp
das
test
cmp
mov
aad
push
add
jg
xchg
xlat
mov
cmpsb
scas
xchg
movsl
inc
and
int
fstpt
movsb
outsl
scas
imulb
or
icebp
test
ljmp
pop
jns
pop
and
push
stos
mov
je
pop
mov
add
pop
cmpl
loope
pop
add
bound
and
cmp
daa
rclb
or
call
push
add
dec
cbtw
pop
test
fdivrl
int
sbb
aam
out
loope
fcmovbe
add
inc
inc
sahf
dec
dec
into
or
push
jmp
das
call
push
mov
aam
rcrl
rorl
dec
jl
mov
mov
sub
repnz
mov
mov
add
pop
xlat
push
enter
addb
mov
mov
push
roll
in
or
add
movsl
xor
aas
movsl
sbb
push
mov
add
mov
xchg
mov
or
shrb
dec
into
ffree
xor
mov
ss
xchg
push
sbb
lock
adc
fcoml
in
cmc
sub
and
mov
inc
div
push
mov
cmp
int
inc
int
std
cltd
inc
arpl
xchg
ljmp
mov
jg
in
pop
jle
cltd
rorl
ljmp
int3
in
inc
outsl
loop
pusha
shl
or
or
cmp
push
aam
mov
lock
add
icebp
jno
push
sti
sub
xchg
inc
call
add
loop
adc
lock
je
out
pop
stos
dec
and
adc
pushf
add
sbb
mov
pavgb
std
xchg
daa
mov
inc
inc
and
mov
push
shrl
hlt
cld
jbe
push
add
cmp
repnz
lock
in
test
inc
fmull
jnp
or
loope
cmpsb
les
fisubrs
cmpsb
jmp
les
leave
sti
out
loop
mov
xor
faddl
loopne
push
cmpsl
inc
dec
stos
or
or
testb
inc
mov
iret
cld
push
fwait
pop
test
ret
daa
popa
mov
pop
movsl
stc
ljmp
fdivs
sbb
out
cmp
add
xchg
jno
test
lds
addb
ret
por
push
imul
inc
sbb
or
jg
xchg
pusha
das
adc
adc
mov
scas
add
mov
jmp
bnd
and
aam
shl
jns
and
outsb
jns
in
out
scas
push
or
imul
stos
jo
sbb
jge
std
mov
rcrl
out
ret
pop
int3
push
divl
movsb
sbb
xor
das
and
xchg
jmp
mov
dec
mov
movsl
ret
jmp
push
ret
in
sub
xchg
insb
jno
jmp
jns
push
aaa
js
push
idiv
push
std
and
inc
loope
mov
in
stc
test
push
cmp
sub
sub
dec
fldcw
out
pop
inc
or
push
adc
icebp
jp
sub
pop
or
inc
dec
xchg
lea
scas
pop
lret
inc
mov
js
mov
call
mov
inc
in
incl
push
mov
mov
jae
ss
cmp
es
enter
sti
sbb
mov
fsub
enter
sub
out
ja
adc
jmp
sti
dec
and
adc
mov
rcl
pop
dec
push
pop
sub
lcall
fwait
mov
push
test
int
mov
ljmp
int
aas
scas
stc
pop
pop
cmp
mov
je
xchg
repnz
data16
xor
xor
hlt
pop
into
out
push
arpl
rcl
jbe
mov
sub
nop
sbb
popf
mov
stos
and
xchg
ret
mov
les
test
push
or
roll
sub
sbb
imul
push
decl
fstpt
insl
mov
adc
je
rolb
imul
cli
xlat
pop
inc
pop
je
sti
mov
scas
js
or
cltd
ljmp
and
ja
pop
sub
jmp
adc
mov
cmp
mov
mov
push
cmp
shlb
into
mov
lock
out
jb
push
cmp
inc
mov
xchg
mov
push
loope
fisubrl
mov
sbb
xchg
jmp
adc
cli
mov
pop
jmp
jne
sub
inc
sub
cld
adc
dec
fwait
jl
stos
mov
adcb
data16
imul
jl
mov
sub
mov
xchg
lods
mov
clc
dec
pop
or
imul
ja
popa
push
jb
jne
xchg
adcb
lods
pop
sbb
cwtl
mov
das
push
and
xor
data16
std
adc
mov
dec
test
mov
sbb
adc
shl
in
hlt
es
xor
ds
std
call
sub
in
aaa
shrb
rcrl
loop
sti
cmpsl
add
out
xchg
out
leave
xor
push
mov
push
xlat
daa
mov
repnz
mov
inc
arpl
pop
enter
lcall
popf
lret
pop
add
out
mov
sti
sar
xor
cmpsb
add
jo
push
inc
lds
or
in
mov
xchg
push
ret
adc
ja
data16
bound
cmpsl
adc
jecxz
dec
into
testl
adc
test
cli
clc
movsb
cmc
pop
push
mov
lahf
call
dec
cli
or
cltd
jnp
insl
aaa
in
xor
push
jp
push
xor
cmpsb
xor
xchg
jecxz
fwait
mov
ja
or
xor
outsl
cs
pusha
push
aaa
test
rorb
orb
push
test
pushf
shl
xlat
push
xor
push
pop
jg
add
cmpsb
sub
out
movsl
and
in
jl
out
and
jno
push
push
js
and
pop
shlb
fdivl
test
xchg
pusha
dec
mov
lea
pop
or
inc
icebp
mov
pop
test
cmc
cmp
push
pop
cli
mov
add
pop
imul
lcall
popa
fdivs
test
mov
in
xchg
pop
xchg
xor
outsb
inc
cmp
inc
xor
dec
std
je
adc
mov
pop
pop
fcoml
shlb
mov
push
push
mov
sub
repnz
loope
jecxz
push
fdivl
and
dec
xlat
mov
cli
xor
fwait
adc
iret
lcall
cwtl
pop
ljmp
push
pop
jae
mov
or
and
lahf
movsl
dec
and
xlat
in
sub
cmp
or
cmpsl
sbb
ss
inc
sbb
loopne
clc
ds
push
scas
sti
mov
movsb
and
mov
mov
sahf
clc
or
int3
lods
push
xchg
fmuls
inc
movsb
loop
jo
es
push
cs
dec
push
jmp
mov
push
sub
addr16
xchg
xchg
es
mov
mov
dec
ret
std
add
push
xchg
xchg
scas
hlt
pop
cld
out
pop
pop
fs
fstl
shlb
pusha
jns
pop
or
fistpl
mov
inc
xchg
sbb
jne
lret
mov
lods
idivl
sbb
ret
shlb
fstl
ficompl
mov
fnsave
or
fdivrp
int
sub
outsl
pop
fimuls
inc
or
not
lock
test
push
sbb
int3
jmp
add
popf
cmc
mov
hlt
addr16
xor
imul
add
add
lret
ss
xlat
nop
je
mov
sbb
test
pop
sbb
je
mov
add
xchg
shlb
sub
and
call
sti
xchg
fisubrl
fstl
loope
xor
jno
clc
sbb
lock
mov
fistl
pop
cmp
sub
insb
xor
ljmp
fdivl
test
cmp
cwtl
push
pop
aam
jno
and
sub
mov
sbb
sbb
jp
out
jmp
add
cltd
in
data16
pop
popa
sbb
cmp
shll
or
lods
lret
inc
jae
test
pop
fistpll
lods
jp
and
add
or
ja
movsl
mov
imul
xchg
pop
sarb
in
call
mov
and
sahf
dec
imul
or
push
inc
sub
fbstp
aas
push
cmpsb
mov
outsl
add
jecxz
xchg
aam
adc
lea
outsb
das
cmpsl
loopne
dec
shr
mov
and
mov
sub
mov
lods
leave
test
sbb
dec
fsts
sub
dec
ljmp
push
out
jne
jno
mov
inc
bound
mov
mov
push
ficoml
xchg
mov
cmpsb
scas
insb
loop
jb
stos
push
int
jb
jne
pop
xorl
adc
pop
cli
fwait
xchg
cmp
xchg
add
popa
xchg
mov
xor
xlat
push
fnstenv
mov
imul
cmp
clc
and
into
ss
add
pop
jg
into
and
icebp
jae
and
xor
daa
mov
pop
mov
test
pop
scas
sub
dec
sti
rorb
fisubrs
or
add
sub
adc
sti
jl
out
repnz
xor
movsl
pop
lods
int
cmp
cs
xlat
sub
cmp
mov
jmp
dec
mov
xor
pop
mov
out
xor
pop
xchg
push
stos
mov
js
test
addb
dec
inc
xor
cmp
imul
enter
lcall
and
jp
in
add
pop
sub
ret
xchg
rorb
lret
scas
xor
jmp
data16
cltd
mov
insb
das
pop
popf
gs
xchg
add
test
inc
test
add
outsl
mov
xchg
inc
imul
dec
jae
pop
int3
push
mov
mov
adc
fidivrl
push
shl
pop
cmp
jg
pop
push
test
pop
inc
outsb
rolb
stc
jle
out
bound
aaa
cmpsl
push
imul
leave
push
or
mov
mov
mov
pop
ja
xor
repz
leave
xor
sub
insb
add
pop
dec
repnz
ret
adc
mov
in
jo
mov
orps
in
popa
movsb
cs
imul
sbb
mov
mov
sub
push
push
pop
notl
push
push
ret
push
loop
mov
pushf
aaa
cli
xlat
sti
nop
jp
lea
adc
sbb
dec
sub
and
sbb
gs
pusha
cmpb
jp
dec
in
xchg
in
pusha
movsb
outsb
push
adc
cwtl
mov
adcb
jge
push
cmpl
dec
test
repz
mov
mov
bound
divl
inc
push
ljmp
jp
mov
test
sbb
addr16
mov
sbbl
sub
mov
orl
adc
loopne
out
stos
in
ja
cmpsb
std
mov
or
mov
xor
dec
jge
sub
add
mov
mov
frstor
pop
jb
stos
clc
jmp
test
decb
je
imul
daa
jmp
in
clc
movsl
jb
gs
cmpl
xlat
jl
imul
inc
inc
lahf
mov
fisttps
sbb
pop
test
imul
shlb
pushf
test
adc
gs
sar
add
lock
sbb
jmp
add
mov
int3
cwtl
mov
sub
xchg
jge
jns
add
ljmp
mov
jmp
sub
call
adc
inc
pop
push
inc
mov
sub
out
cmp
in
mov
lds
cmp
lods
ja
jno
pop
push
cmp
sbb
gs
out
ds
loop
jle
sbb
iret
pop
inc
popf
jl
lea
fisubs
adc
enter
fiaddl
inc
push
cmp
push
push
cmp
mov
push
sti
dec
int3
or
mul
in
jg
jmp
dec
xor
push
xchg
addb
inc
pop
arpl
insl
mov
and
mov
ret
adc
add
scas
mov
int3
mov
je
mov
aaa
mov
stos
popf
cmp
lock
sbb
movsb
sarl
stos
jb
out
outsb
sbb
call
negl
lcall
cltd
push
sub
pop
decl
push
inc
iret
in
arpl
std
pop
pop
inc
repnz
je
daa
mov
xor
jecxz
sub
xor
adc
rcrb
mov
jno
sahf
pop
dec
leave
sub
jecxz
push
repnz
mov
rol
push
gs
aaa
movb
inc
mov
or
push
scas
pop
mov
mov
shl
aad
and
sbb
add
in
adc
test
test
and
or
outsb
inc
popa
arpl
jno,pt
jp
ljmp
shll
mov
inc
push
xchg
or
xlat
lcall
and
in
sub
push
loope
xor
leave
mov
lods
stc
fnstenv
mov
out
fiadds
dec
mov
mov
mov
test
subl
mov
data16
sub
idiv
leave
cmp
sub
loopne
dec
jg
sbb
pop
mov
inc
or
in
cli
add
pusha
dec
cmpl
ret
mov
push
inc
or
int3
mov
push
cli
jnp
fsubrl
cmp
std
adc
and
push
test
mov
mov
mov
jne
and
std
cli
iret
into
and
shlb
mov
inc
cld
mov
enter
add
push
in
mov
mov
cmp
repnz
imul
out
jmp
or
out
jg
dec
xor
pop
jns
push
mov
mov
int
filds
xchg
push
xchg
add
jae
data16
xor
cli
pusha
jge
int
addl
xlat
push
jbe
pop
cmpsl
add
adc
flds
lods
mov
xor
push
stc
cmp
inc
cmp
testl
cli
ds
fmuls
push
mov
cmc
mov
dec
inc
arpl
xor
dec
sub
jmp
mov
push
aaa
lods
add
adc
xchg
int
dec
mov
adc
aaa
sbb
adc
decl
mov
or
xor
push
sbb
mov
sbb
adcl
dec
push
pop
loope
into
ds
sbb
dec
movsb
jecxz
ss
mov
mov
xor
jmp
outsl
and
lods
or
mov
std
pop
mov
in
test
in
sub
adcb
add
push
jp
out
add
mov
adc
rcr
cli
and
dec
jl
add
movsl
adc
repnz
cmp
pusha
daa
xchg
add
pop
mov
cmp
mov
iret
mov
fiaddl
or
divb
mov
push
mov
rcll
repz
dec
dec
gs
add
call
mov
je
pop
xchg
push
add
pop
lods
popl
fcompl
xchg
fdiv
push
mov
ja
sub
sub
sub
mov
cltd
jge
rclb
scas
adc
cmc
sub
jno
ret
mov
jle
dec
pushl
test
inc
dec
lret
gs
cwtl
lahf
cmp
mov
inc
pop
pop
subl
jecxz
push
pop
push
outsb
cld
add
es
mov
int
jnp
or
pop
fst
or
add
push
lock
scas
sbb
loop
sti
imul
xor
and
inc
and
outsl
inc
lret
dec
lret
jle
cld
and
add
xor
inc
xchg
ljmp
in
pop
lock
jg
inc
add
xor
mov
stc
dec
sti
pop
daa
icebp
lods
xor
pusha
jle
mov
lret
xchg
test
mov
test
rcrb
or
lahf
fucomp
mov
sub
mov
lea
mov
notb
test
cmp
into
jg
mov
je
sub
push
imul
adcl
stos
aas
lcall
in
add
loop
popw
mov
push
test
or
sbb
or
popf
cli
pop
mull
lahf
mov
test
dec
jns
jbe
cmc
out
dec
sarb
addr16
cmp
ficomps
loop,pn
pop
cmp
dec
cmpsl
xor
cmpsl
aam
in
jns
fidivrl
mov
hlt
aam
aas
fsubrl
aam
sahf
ss
and
ficoms
or
fwait
ss
test
xchg
repz
ds
mov
daa
shr
inc
xchg
mull
sub
aad
sbb
cli
xchg
aad
or
clc
inc
sbb
insl
pop
xchg
int
clc
xchg
jg
add
ret
stos
loope
arpl
cwtl
movsb
jg
loopne
adc
lods
xchg
lret
or
mov
sub
repz
jbe
push
call
arpl
inc
outsb
sbb
mov
inc
imul
imul
sarb
popa
iret
test
cli
cwtl
rclb
jo
push
lea
inc
ja
iret
subb
imul
add
jo
cwtl
fcoms
das
add
inc
lods
movsl
data16
clc
lcall
sbb
mov
add
mov
lret
mov
jnp
xor
mov
cmp
lods
mov
mov
sbb
or
out
pushf
inc
jge
in
sbb
test
mov
sahf
mov
mov
inc
push
scas
add
add
add
fcomp
cmpsb
fidivrs
je
lock
pop
jnp
sarb
gs
movsl
negb
or
jae
push
xchg
add
xchg
xor
mov
unpcklps
xor
lret
mov
rclb
push
mov
scas
mov
mov
into
cld
popa
into
dec
mov
inc
jmp
inc
lods
dec
movsb
jl
mov
dec
js
lcall
add
xor
aaa
jb
out
das
ja
insl
xor
adc
jae
cmp
push
addr16
popa
es
nop
and
std
mov
adc
push
mov
xchg
leave
lods
and
int
cmp
inc
out
pop
jg
xor
dec
push
stc
shlb
out
inc
cltd
test
lds
sbb
dec
jle
xchg
dec
cwtl
cmp
in
call
jbe
arpl
shll
inc
fcompl
pop
sub
add
pop
pop
inc
fidivrl
mov
or
dec
cltd
xchg
and
in
call
push
mov
push
pop
adc
push
pop
jg
in
pop
push
xchg
call
add
fadds
pop
mov
pop
mov
ds
fs
test
mov
sub
or
repnz
adcb
xor
scas
pop
out
pop
stos
dec
test
xchg
outsb
insl
cmpsb
push
test
jge
enter
adc
jae
dec
push
out
popa
loop
push
fsub
negl
call
inc
into
xchg
fstl
cwtl
ret
jle
mov
mov
dec
sti
push
dec
push
cmp
inc
push
mov
call
lock
stos
sbb
pop
lahf
cltd
repz
mov
fadds
sahf
push
xor
shl
push
fildl
and
les
repz
mov
fstl
outsl
or
or
sbb
push
mov
push
push
jecxz
pop
das
lcall
clc
xchg
movsb
add
jecxz
fcomps
jmp
mov
lea
pop
ret
popf
testb
cmp
xchg
jbe
fisubl
icebp
outsl
pop
mov
pop
push
test
leave
lds
push
addl
pop
or
pcmpeqw
stos
inc
xor
call
dec
js
pop
aad
xor
aam
int
jns
rcr
hlt
insl
or
add
mov
aad
andb
sbb
fistpl
jg
pop
and
jbe
test
xchg
pop
stc
out
ficompl
dec
std
xchg
insl
ja
xchg
nop
lds
sbb
imul
mov
sbbl
popa
mov
dec
cmp
push
push
adc
mov
stc
mull
push
mov
cli
xchg
std
addr16
out
sbb
cwtl
push
daa
loopne
out
xchg
in
inc
mov
or
push
mov
fcomi
xchg
mov
les
icebp
xor
jnp
popa
or
les
pop
imul
jno
cmpsb
mov
int
faddl
sub
inc
fstpl
mov
ret
add
mov
jno
fcompl
and
pop
push
rolb
xlat
and
xor
sub
lea
mov
add
and
shll
mov
std
lods
out
aaa
jb
and
or
push
mov
loop
nop
clc
test
pop
cmp
xchg
push
icebp
daa
pop
add
dec
hlt
in
sbb
cmp
sub
loopne,pt
pop
xor
lds
dec
sbbb
pushf
or
mov
xchg
inc
lret
adc
xchg
xor
or
lret
jae
fdivrs
push
jbe
jg
cmpsb
dec
negb
mov
pusha
mov
adc
and
daa
xlat
mov
xchg
cli
mov
inc
push
pop
cmpsb
into
cmp
pop
jo
mov
xor
jmp
out
repz
cwtl
mov
or
test
mov
push
fimull
outsl
adc
dec
cltd
je
loop
int
jmp
mov
test
sbb
jo
xor
mov
dec
sub
push
mov
fbld
bound
xchg
xor
fdivr
adc
jmp
xchg
les
lea
xlat
aad
push
cmp
sbb
sbb
inc
movsb
add
mov
shrb
xchg
add
clc
inc
lds
into
pop
xlat
push
xchg
hlt
lea
mov
ror
in
fcom
ret
pop
push
mov
subb
in
push
mov
xor
push
mov
insl
mov
add
out
mov
out
sub
mov
out
std
lea
nop
lret
xor
test
decb
mov
gs
scas
in
enter
sbb
gs
sarb
push
pop
dec
in
sub
mov
jge
and
push
outsl
fiadds
sub
xor
pop
dec
andb
jge
xchg
inc
scas
xor
xor
sub
cld
mov
scas
scas
insb
aam
jp
test
xor
dec
or
inc
cmp
popa
jmp
ja
xchg
push
add
mov
ja
lock
jge
insl
mov
imul
popa
xchg
adc
pop
gs
push
stc
add
and
jp
lahf
insl
ret
mov
jecxz
mov
dec
push
lds
test
imulb
jmp
mov
rcrl
dec
rcl
es
ss
xlat
aaa
pusha
xor
mov
imul
adc
daa
arpl
pop
cmp
or
shrb
out
push
jns
mov
pop
sbb
ja
aas
mov
xor
cmp
sbb
inc
stos
pop
push
sbb
aas
mov
out
orb
lods
pop
or
sub
xchg
xor
mov
xor
scas
pop
movsb
mov
inc
stc
fmull
decl
lret
mov
es
fmuls
dec
mov
clc
and
loopne
mov
out
pop
or
movsb
roll
sarb
xor
into
in
jns
pop
and
sbbl
or
mov
xchg
cwtl
shlb
clc
es
jmp
fcoms
mov
iret
movsb
jb
pusha
add
push
mov
add
adc
xchg
jno
mov
jne
jno
mov
sarl
jbe
int
rclb
bound
dec
push
hlt
jle
cs
insl
adc
mov
out
loop
mov
push
jb
mov
test
jae
and
inc
sbb
mov
lcall
jmp
jae
sub
mov
sub
push
out
lahf
mov
in
adc
enter
push
out
stos
call
xor
sub
mov
cli
sub
incb
and
nop
and
push
fisubrs
lahf
outsb
push
stos
mov
bound
addl
mov
mov
mov
xor
repnz
pop
repz
push
aas
pushf
inc
loope
dec
mov
repz
jmp
imul
dec
and
in
adc
pop
jle
iret
push
in
movsl
pop
stc
into
jge
shll
xor
mov
mov
lods
ror
adc
jl
rcr
in
inc
les
sahf
lods
mov
out
or
pop
pop
or
test
insl
addl
mov
bound
cltd
mov
insb
fsubl
insl
lds
and
lock
xchg
inc
int
loope
sbb
sbb
js
ficoms
push
push
cmpsl
inc
cmp
and
mov
mov
add
xor
nop
hlt
aam
pcmpgtw
aam
stos
mov
cli
pop
xor
and
push
test
cmp
imul
pop
lcall
ja
cmc
dec
cmp
pop
adc
in
jno
hlt
pop
cmp
adc
mov
add
push
stos
mov
xor
lods
subl
cmp
sbb
scas
xor
shlb
gs
ss
xchg
sti
jns
outsl
adc
sub
loopne
mov
ficoms
filds
cli
adc
and
ss
popf
out
sub
nop
fsubs
ret
pop
enter
cltd
fldl
orl
cmpsb
pop
add
sbb
push
test
adc
rol
jns
cwtl
or
lcall
sbb
mov
cltd
xchg
jecxz
fbld
jecxz
lret
in
mov
imul
lds
fstps
inc
rcll
mov
xor
fnstenv
jmp
cli
mov
int
mov
ret
sub
movsb
notl
sti
test
data16
jmp
jecxz
iret
and
cltd
fwait
stc
lcall
addb
lock
call
pop
jbe
bound
call
fs
pop
dec
pop
xchg
arpl
and
or
ljmp
hlt
loopne
mov
rcr
notl
inc
stc
sahf
aam
in
add
push
or
in
cli
lods
sub
dec
mov
and
into
mov
ret
adc
dec
pop
notl
and
loope
in
push
popf
rorl
test
sti
test
xor
cmp
push
jne
jne
xlat
popa
jp
sbb
cmpsb
lock
cli
add
pop
sub
mov
xchg
in
ja
mov
add
or
dec
das
adc
cs
xchg
xor
jae
xor
mov
and
and
bound
cs
rolb
fsubrp
in
mov
in
fwait
sub
movsl
ds
jmp
and
mov
mov
add
andb
sbb
out
add
lret
popa
mov
aad
cli
mov
dec
dec
xor
std
cmpsl
movsb
mov
scas
ret
adc
fwait
hlt
mov
shl
cld
adc
cli
loope
mov
mov
ljmp
mov
mov
jbe
inc
psrld
pop
out
cmp
fsubrp
push
xlat
fistpl
movsb
ds
xor
imul
and
shll
sbb
aaa
fisttps
adc
or
sbb
or
jnp
es
push
sub
outsl
mov
in
pop
stos
int3
cmpsl
pop
dec
pop
in
push
in
out
push
pop
xlat
or
push
and
mov
push
mov
movsb
imul
pop
mov
gs
cmp
dec
lret
inc
dec
jbe
push
push
inc
aad
adc
cld
test
mov
adc
adc
pop
aas
nop
cld
aas
xchg
in
sbb
imul
inc
repz
cltd
mov
mov
test
pop
int3
adc
ficoms
nop
ja
sub
xchg
add
sbb
xor
icebp
sbb
addr16
mov
jb
xor
out
mov
testl
addr16
mov
das
jae
and
and
adc
test
mov
aad
negb
stos
push
mov
js
mov
sbb
mov
inc
lea
mov
jne
adc
lret
lcall
mov
dec
inc
iretw
jb
mov
push
push
daa
adc
xor
xchg
jnp
xchg
imul
adc
add
fcoml
inc
nop
paddusb
mov
les
cmpsl
xor
ret
lds
fistpl
lods
repz
test
pop
mov
shl
jecxz
mov
cmp
push
xor
sahf
into
cwtl
inc
fwait
dec
sti
mov
scas
and
les
std
add
pop
sub
sbb
fsubp
pop
inc
push
movsl
fildll
mov
out
pop
mov
xlat
mov
cli
outsb
xor
and
js
leave
xlat
dec
sub
add
xor
add
iret
out
out
push
inc
lods
pop
pop
jne
jae
pusha
sub
cmp
mov
sub
aaa
pop
loop
cs
insb
lods
cmp
shl
rcl
and
pop
lea
sub
into
stos
jge
mov
enter
and
sub
gs
lock
loope
xchg
insl
dec
adc
mov
in
xchg
addr16
jnp
test
pop
push
cmp
pusha
xor
out
sti
je
jge
add
or
into
mov
mov
jb
push
dec
test
inc
xor
int
outsb
or
push
pop
lret
lds
mov
and
daa
push
jle
xchg
adc
dec
inc
jo
xchg
xor
loop
push
lahf
push
pop
inc
or
gs
cld
pop
test
mov
mov
mov
rclb
sti
sahf
popf
orl
inc
ret
add
sbb
pop
jae
aad
lret
jmp
imull
dec
and
mov
sub
push
xor
inc
int3
cmp
push
add
push
pop
shl
adcb
inc
out
out
js
into
test
popf
and
push
mov
lcall
dec
jnp
xchg
test
icebp
test
pop
out
sbb
std
sbb
mov
lods
lods
lahf
enter
pop
mov
xchg
push
adc
jle
jae
push
sbb
cwtl
mov
fstpl
dec
outsl
pop
mov
inc
push
les
out
bound
std
push
push
das
xlat
outsb
jecxz
push
xchg
or
xchg
out
dec
aas
mov
loope
mov
xor
sbb
jns
test
gs
and
jecxz
mov
inc
sbb
shll
dec
lds
roll
insb
test
cmp
mov
dec
cltd
xchg
int
sbb
fisubs
ret
xor
movb
loope
into
mulps
xchg
or
add
into
andl
sub
inc
jns
lock
mov
xor
into
pop
push
push
sub
mov
jnp
or
lods
or
mov
push
cmp
xor
lea
div
in
adc
fisttps
out
nop
mov
sub
dec
stos
mov
ja
jmp
or
push
pop
jns
mov
mov
cmc
inc
lods
pop
sbb
out
aas
fsub
sbb
jo
adc
flds
xchg
insb
mov
hlt
cs
scas
or
imul
sahf
jg
pop
cmc
dec
jae
dec
lcall
inc
xchg
pop
push
dec
push
or
cwtl
adc
jle
js
popf
pcmpeqb
in
sub
enter
roll
mov
andl
pop
cmp
hlt
sub
cs
movsb
inc
pop
dec
cmp
xor
mov
and
lcall
leave
lcall
in
mov
xchg
iret
test
push
push
sarb
subb
sbb
or
xchg
nop
push
int3
cmpsb
cmp
arpl
add
mov
xchg
cmp
cmp
mov
or
in
mov
into
sub
pop
shlb
cmp
jecxz
inc
mov
sar
movsl
push
daa
jb
enter
imul
mov
sub
push
test
ja
cld
bound
pop
mov
pop
test
pop
lea
xor
pop
rcrb
ds
out
fsubrs
pusha
jnp
adcb
pushf
rcr
popf
mov
js
cmp
test
and
inc
jle
pop
mov
xchg
mov
cltd
sahf
push
push
lahf
loop
idivb
mov
mov
loopne
les
push
sbb
cwtl
sub
icebp
sahf
mov
mulb
xchg
or
mov
push
repnz
pop
aas
adc
ficomps
jmp
mov
mov
loopne
aad
out
mov
scas
mov
mov
xor
push
or
mov
xchg
hlt
or
rorb
pop
popf
out
test
ds
js
pop
xchg
test
divl
lds
fnstcw
sub
inc
push
sbb
loop
push
pop
imul
jle
in
pop
xor
mov
mov
push
add
mov
jae
jmp
xor
lret
cltd
sub
sar
jecxz
in
in
pop
pop
pop
push
test
into
inc
imul
pusha
fstl
rcll
xor
into
pop
adc
xchg
notb
lock
es
dec
pop
xchg
sbb
dec
sti
xor
fs
dec
in
dec
aaa
out
mov
lods
mov
sti
fldl
adc
call
add
out
testl
mov
mov
add
lahf
les
aad
sbb
orl
mov
mov
js
dec
mov
lahf
cmp
add
rcrl
or
jbe
mov
cmp
sarb
loope
divb
inc
pop
test
mov
clc
data16
es
bound
pop
lret
adc
out
pop
shlb
bound
test
add
test
push
mov
aaa
adc
sti
and
imul
sarl
dec
cmp
inc
add
aaa
lock
pushw
testl
hlt
mov
std
fsubl
push
pop
shll
sub
or
out
nop
fs
pushf
aas
push
pop
movsb
fs
xor
mov
mov
sbb
mov
arpl
std
cmp
xor
call
cmp
add
xor
sti
mov
icebp
inc
mov
stos
dec
scas
add
imul
jb
shl
dec
mov
aas
ret
adc
leave
pop
and
lods
ja
js
outsb
xlat
adc
cltd
addl
addl
mov
ss
notl
enter
je,pt
adc
test
mov
cwtl
pop
push
shlb
jl
js
sub
aam
pop
iret
ret
xor
mov
mov
push
xor
mov
cwtl
jae
cwtl
inc
packuswb
in
and
fisubrs
test
push
add
lea
sbb
adc
rol
xor
jns
lcall
adc
imulb
ror
enter
divb
inc
ss
mov
jno
in
loope
shll
mov
ds
nop
mov
jge
sub
out
repz
scas
pusha
inc
add
inc
add
rcrl
cmp
inc
shrb
ret
inc
imul
icebp
lods
xchg
fstps
aaa
mov
cmp
enter
xchg
push
int3
ret
addr16
in
imul
ret
negl
inc
mov
test
sub
mov
frstor
ja
add
out
movb
sub
sub
mov
dec
divl
mov
add
shlb
mov
aaa
and
in
xor
test
lahf
push
hlt
and
dec
std
insl
jb
shrb
xlat
sbbb
mov
outsl
pushf
mov
sbb
insb
mov
xchg
jbe
icebp
cld
sbb
cmpsb
out
mov
nop
in
push
aam
push
sub
out
xchg
dec
pop
dec
xlat
pop
jnp
cmc
add
adc
lods
adc
cltd
stc
clc
mov
mov
nop
jmp
jne
rorb
push
arpl
fnstenv
jl
out
aaa
pop
ret
dec
rolb
outsb
mov
sbb
jne
sub
insl
add
cs
mov
mov
lock
and
movsl
mov
movsb
mov
stc
push
test
jge
cmp
or
inc
dec
cmpsl
jle
rcll
mov
lea
scas
pop
mov
stos
pcmpeqw
inc
adc
mov
les
ret
xchg
fsubl
outsl
fldl
xchg
sti
ss
cmpb
aam
sub
cwtl
mov
sub
mov
adc
lea
jno
inc
jle
loope
addr16
movsl
jbe
cld
push
xchg
fstp
arpl
jne
cmpsl
adc
std
arpl
popa
movsl
cmp
cmpsb
jnp
xor
bound
call
outsb
pop
mov
call
jecxz
test
jo
lods
adc
or
xor
int
jb
insl
cmp
push
in
push
mov
inc
inc
insb
sub
pusha
imulb
xor
fbstp
lods
push
and
stos
fdivs
adc
pop
gs
add
add
jmp
pop
sbb
mov
mov
pop
popf
cmp
fs
xchg
push
push
adc
rorl
int3
push
dec
fwait
cmp
addr16
mov
lret
cmc
mov
push
or
push
push
jb
jg
jg
dec
xor
or
sbb
xchg
pop
fistpll
push
push
addl
insl
push
and
push
sub
sub
sarb
fcomp
xchg
jne
push
mov
jns
mov
cmp
jno
dec
sbb
dec
in
dec
cltd
lret
jo
repz
icebp
or
popf
js
mov
aaa
fdivl
sbb
adc
mov
or
ficoms
outsb
push
imul
xchg
lret
and
mov
mov
ret
int
mov
push
adc
add
jne
cmp
fscale
inc
pop
sarb
jno
add
lcall
in
adc
push
mov
mov
xor
adc
pop
xchg
or
mov
mov
mov
idivb
cs
push
and
iret
and
dec
xlat
test
add
fisubl
or
enter
add
dec
sub
sub
fisubrs
call
add
cld
addps
dec
mov
mov
out
cmp
fisttpl
mov
insl
push
test
or
or
xor
stc
ret
shrl
ljmp
jp
cli
aam
shll
inc
lret
js
adc
jae
mov
out
insb
mov
or
push
push
out
js
push
xchg
xor
mov
cmc
push
test
sub
or
dec
icebp
mov
ret
pop
and
test
xchg
and
std
dec
jno
arpl
pop
repz
dec
mov
jp
or
lret
clc
inc
jmp
mov
and
scas
fildll
cmp
lods
xor
or
inc
pop
mov
xor
mov
icebp
ficomps
inc
leave
in
addl
dec
sbb
jb
lock
mov
jmp
mov
addps
mov
testb
push
jecxz
lods
jl
jmp
cld
jae
lcall
pop
rcll
jo
inc
sbb
in
dec
cltd
adc
iret
add
out
pop
or
mov
dec
jge
rclb
scas
adc
add
js
xchg
in
or
xchg
dec
xor
cltd
arpl
cmpb
imul
addr16
lret
fadds
in
sub
add
adc
and
xchg
in
sub
add
jge
out
lcall
fidivrs
es
sbb
arpl
mov
in
sbb
stos
mov
inc
pop
inc
outsb
xorb
mov
aad
addb
shll
loope
inc
push
out
imul
jb
inc
insb
jne
addr16
xor
mov
scas
notb
xor
lret
mov
mov
push
ret
add
test
push
fstps
inc
add
mov
sub
imul
pop
fldcw
jecxz
mov
stos
mul
xchg
cmp
lods
pop
iret
lret
lcall
cld
fmuls
lock
or
bnd
in
cmovle
sar
insl
cli
or
push
jge
js
inc
pop
mov
enter
push
nop
fwait
xor
scas
or
cwtl
jle
out
lcall
xor
pop
cmp
adc
jle
lds
mov
dec
movsb
arpl
adc
loopne
subl
push
sahf
stc
jo
shll
xor
and
das
mov
pop
mov
inc
inc
fldenv
and
std
adc
ret
clc
jge
mov
or
movsl
lock
push
dec
jnp
mov
sti
cli
xchg
sbb
mov
add
xor
jnp
sbb
adc
dec
inc
inc
push
xchg
inc
adc
push
push
dec
imul
stc
je
pop
sbb
aaa
hlt
jge
xchg
jp
push
leave
add
inc
xchg
bound
daa
aad
jl
and
xchg
cmpsl
outsb
lret
sbb
fsubrp
and
cli
push
shrl
stos
cmpsb
enter
repnz
jge
mov
cli
sub
cmc
and
push
mov
cmp
dec
lods
mov
or
lock
xor
frstor
add
push
mov
ror
xor
in
imul
enter
rcll
mov
out
jge
cmpsl
lret
rclb
add
leave
int3
jmp
pusha
mov
xchg
cli
pop
cli
or
pop
pop
std
js
jae
dec
or
sbb
push
xorb
lock
mov
jo
cmp
pop
fnstcw
pop
ss
aaa
xchg
jl
adc
cmpsl
ds
outsl
ds
gs
and
clc
pop
cmp
mov
out
cmc
or
mov
ljmp
inc
cwtl
lcall
push
imull
into
int
mov
pushf
imul
mov
xchg
xchg
cmp
pusha
in
jbe
inc
cmpsb
adc
mov
data16
fs
mov
fbld
daa
or
mov
adc
negl
lret
push
mov
jae
imul
insb
stos
test
cmp
icebp
or
lds
lret
addl
mov
xchg
enter
nop
ljmp
jmp
sbbb
stc
hlt
cmp
fnstcw
pop
mov
pop
and
or
mov
xor
mov
add
lock
ja
push
in
in
mov
pop
andb
mov
dec
in
jne
repnz
push
iret
push
cmpsb
jle
int3
icebp
xchg
cmp
cli
lret
mov
dec
lods
cmpsl
imul
mov
sbb
fsts
fisubrs
cmpsl
call
fldt
jg
push
inc
xchg
or
addr16
push
mov
pushf
cmp
test
sub
pop
mov
sbb
add
cld
cltd
mov
sbb
bound
loope
dec
aad
pop
loop
cmpb
test
inc
push
das
dec
xchg
sub
gs
sahf
aam
jne
jnp
add
fidivl
cmp
xchg
inc
push
inc
pushf
dec
and
mov
mov
pop
test
lods
into
js
sbb
jbe
dec
mov
fadds
or
mov
pop
ja
mov
in
js
xlat
in
mov
cmpsl
inc
in
lds
jecxz
cmp
add
push
fdivrl
mov
hlt
pop
jae
or
mov
hlt
loope
push
mov
pusha
xchg
mov
or
popf
fdivp
dec
aaa
adc
pushf
adc
xor
orl
cmp
daa
xchg
pop
fs
jne
pop
dec
test
hlt
loopne
sub
cmpsl
pop
std
loopne
rorb
sub
int3
mov
movl
cmpb
push
mov
je
scas
sub
mov
inc
mov
mov
sub
pop
div
das
sti
adc
pop
sbb
shl
pop
mov
popf
ss
scas
mull
mov
cmp
pushf
mov
nop
pushf
jge
push
sbbb
shl
mov
bnd
test
add
pop
mov
imul
enter
out
inc
es
mov
pop
adc
cmp
je
sahf
lret
push
imulb
pop
dec
fnstenv
out
out
int3
adc
fnstcw
rcr
iret
jae
cmp
cmp
and
mov
ljmp
lret
xchg
fcoms
inc
pop
lcall
mov
mov
outsb
mov
cld
out
cmc
add
mov
pop
sar
adc
mov
jo
fidivrs
xor
leave
push
cmp
subl
pop
jns
test
and
mov
shl
pop
push
lahf
fwait
xor
cld
aam
test
or
inc
pop
sub
fbld
mov
jg
adc
jg
cmp
lret
sub
inc
lea
jns
mov
bound
loop
mov
xor
pop
jge
push
xchg
cwtl
sbb
jno
into
inc
push
scas
mov
cwtl
dec
xor
cmpl
ss
popa
movd
stc
cmp
xor
movsb
cmp
push
in
ds
jmp
add
mov
add
sarb
test
xchg
arpl
ja
aaa
jno
lcall
daa
fbstp
mov
scas
inc
lret
mov
aaa
lcall
fs
lret
sarl
mulb
inc
or
dec
lock
mov
out
inc
push
mov
jle
je
pop
mov
jp
std
cmp
mov
imulb
aas
lahf
aaa
test
pop
out
pusha
mulb
add
mov
pop
mov
in
jbe
pop
fisubs
daa
xor
popa
mov
fcmovnu
cmc
jmp
cs
push
adc
outsb
jmp
inc
call
sub
push
in
leave
jae
push
popa
push
sbb
xchg
dec
and
lods
dec
cld
cmp
loop
je
negb
das
popf
dec
test
rolb
adc
cmc
sbb
jne
cltd
cli
push
mov
lock
loope
push
pop
push
xor
insl
ret
cmpl
bound
idivb
jmp
pop
mov
add
lahf
andb
jp
mov
js
arpl
ja
cmpsl
sbb
in
out
inc
push
dec
mov
jo,pt
jae
cmp
insl
addr16
pop
fisubrs
sti
adc
mov
stos
lea
push
and
mov
in
daa
repz
jle
jae
fcomip
mov
cltd
lock
repz
cwtl
push
aas
pop
cmc
notb
rorl
mov
dec
add
push
es
push
movsb
inc
xchg
cmc
push
pop
loop
sarb
mov
jge
adc
outsb
ret
mov
popf
sbb
ljmp
mov
jmp
jecxz
adcl
inc
adc
cmpsl
roll
push
popa
adc
pop
shrb
cmpl
cs
movsl
mov
jns
and
icebp
loop
xchg
xchg
mov
incl
daa
dec
out
in
push
xchg
shl
dec
mov
push
pop
lds
daa
sti
or
jp
int3
mov
jbe
push
daa
xorl
test
adc
adc
mov
pop
es
sub
subl
fdivl
addr16
xor
imul
mov
lret
imul
shll
dec
mov
fwait
pop
aaa
fstps
add
jmp
pop
push
ljmp
add
sub
push
ds
rorb
cmpsl
jle
addr16
daa
data16
xchg
adc
lret
adc
jge
push
or
pop
imul
jns
mov
shll
cld
into
ret
adc
mov
mov
dec
in
in
adc
lods
sub
insb
pop
jmp
push
push
and
sahf
dec
mov
loopne
adc
mov
pop
push
stc
xor
pop
pop
mov
mov
insb
int
mov
push
leave
enter
mov
lea
aas
inc
insl
into
insl
jnp
cmpsb
sbb
mov
jae
test
js
jl
pushf
cmp
fstpt
jbe
dec
sub
negl
mov
lods
dec
fsubr
push
scas
popl
pop
ja
dec
and
es
call
lea
adc
or
enter
icebp
adc
xchg
jmp
dec
push
test
out
push
jp
pop
inc
jb
addr16
shr
add
mov
ror
and
cwtl
lret
andl
push
ds
outsl
cmp
ja
jmp
dec
sbb
pop
inc
fcmovu
movsb
mov
mov
daa
les
in
loop
or
ja
mov
xchg
jp
push
lret
sbb
dec
inc
bound
xlat
sbb
mov
push
lret
enter
sahf
lret
sub
incl
mov
in
rcr
dec
pushf
stos
mov
insl
pop
pop
push
outsb
std
aam
inc
std
adc
ss
jg
or
hlt
add
lret
lcall
push
roll
ds
inc
js
lock
mov
loope
inc
cmp
mov
cwtl
outsl
pop
cmp
xchg
sbb
jge
rcl
inc
push
arpl
jp
inc
out
out
pop
mov
push
push
push
std
and
pop
cltd
mov
push
loope
mov
and
xchg
inc
into
negb
xchg
jge
daa
mov
pop
addb
mov
mov
add
out
in
push
movsl
test
cmp
lods
and
cmp
jno
cmc
add
adc
rorl
orl
fwait
popa
mov
mov
decl
fisttpll
pop
jb
push
xchg
mov
jne
push
and
sbb
xchg
jo
lods
jl
xchg
or
pop
rclb
cmp
hlt
cwtl
mov
adc
mov
jne
mov
lods
repz
aad
sub
out
push
shlb
dec
add
lods
jmp
out
jmp
push
xchg
test
pop
cmp
dec
je
push
cmpsl
js
xchg
es
adc
inc
jle
inc
sub
js
sbb
cli
and
sbb
fistl
jl
stos
stos
repz
lds
loop
lea
push
je
popa
dec
cltd
inc
loope
aad
lods
in
sub
into
out
bound
fucomp
rcl
jmp
adc
push
xor
lea
mov
mov
jmp
stos
ja
sub
dec
cltd
arpl
push
xor
sub
repnz
flds
pushf
ret
adc
push
cmp
pop
pop
xchg
mov
test
inc
pop
jns
lret
jle
push
pop
movsl
std
mov
imul
in
popa
jmp
add
nop
xchg
cmc
pop
dec
sub
test
inc
xchg
mov
in
push
jg
shrl
rclb
loop
or
loop
movsl
das
add
jp
inc
subb
frstor
or
in
push
mov
xor
pusha
xchg
nop
data16
xchg
xor
mov
or
dec
inc
jmp
pop
push
movlps
mov
imul
fisttpll
mov
and
imul
push
mov
imul
jb
pop
xchg
xchg
mov
enter
jbe
int3
fiadds
mov
xor
pop
jo
inc
roll
sbb
sbb
loope
jge
mov
xor
lret
mov
repnz
in
shlb
scas
pop
add
loopne
push
cwtl
stos
decb
aad
testl
ss
pushl
pop
or
rolb
jns
scas
add
sub
mov
xor
mov
paddq
adc
mov
data16
xchg
cmp
loope
or
fldenv
lods
cmpsb
in
xchg
xchg
out
push
sbb
stc
bound
or
xchg
sub
fdivrl
xchg
jne
iret
in
loop
xor
out
inc
arpl
in
insb
cmp
push
movsl
pop
cmpsl
dec
outsb
out
inc
jg
dec
inc
fwait
nop
in
push
daa
inc
imul
in
jmp
les
cwtl
jne
add
sti
loop
in
pop
adc
mov
in
out
out
in
pop
lods
in
movsl
push
lret
and
daa
into
pop
rcrl
ret
fsubl
push
push
dec
sbb
sub
push
mov
mov
ficompl
lahf
test
aaa
xchg
dec
stos
mov
lea
sbb
mov
or
loope
stc
aaa
cmp
dec
inc
daa
xor
orl
push
arpl
sub
sbb
ljmp
dec
insl
mov
arpl
dec
mov
inc
sbb
pop
cld
js,pn
call
dec
adc
mov
xorb
insl
pushf
insl
adc
dec
cs
dec
pop
fnsave
movsb
xor
sbbb
push
daa
nop
push
or
adcl
fcmovu
mov
icebp
outsb
fstps
decl
mov
push
dec
aad
cli
mov
aas
push
add
sbb
lret
test
sub
pop
mov
fisubrs
std
out
insl
sub
pushf
bound
aam
cmp
outsb
js
enter
cwtl
push
mov
clc
sub
loopne
sub
outsb
jae
clc
sub
pop
sbb
mov
jb
repz
pop
pushf
scas
data16
clc
pop
inc
push
into
in
adc
les
mov
xchg
mov
and
add
jno
out
imul
dec
je
lret
lahf
xchg
mov
rcrl
nopl
push
stc
sbb
loopne
hlt
or
add
dec
push
mov
or
push
push
xchg
xor
notl
mov
add
mov
pushf
lods
setae
leave
adc
xchg
ja
inc
inc
int3
xchg
inc
adc
sbb
jne
inc
in
mov
je
lgs
xor
aad
and
xchg
mov
jnp
dec
push
mov
cmp
add
mov
or
xlat
push
fnstcw
iret
sbb
test
in
pop
out
dec
and
inc
rcrb
adc
je
int
test
cmp
and
movsl
orl
inc
hlt
dec
dec
adc
std
mov
testl
inc
push
cmp
or
leave
sbb
enter
movsb
mov
push
pop
movsb
mov
jp
inc
or
xor
mov
cwtl
movsl
cmc
adc
adc
sub
and
xor
daa
and
repnz
jne
pop
and
movsl
jnp
bound
insl
test
loopne
xchg
fbld
aaa
imull
mov
mov
push
fisttpll
add
popf
sub
das
xchg
or
test
sbb
repz
aas
push
or
push
sub
inc
pop
mov
dec
or
pushl
rcll
add
fadds
lcall
mov
mov
mov
fs
fisubrl
ror
cmp
aam
stos
cmc
push
js
xlat
sub
out
je
adc
inc
loopne
jge
andnps
lock
sub
js
outsb
std
mov
push
loop
stos
fnstsw
lock
stos
mov
mov
sub
loop
inc
popa
lds
flds
aam
data16
popl
jbe
aam
fnstcw
vpacksswb
cmp
xor
lock
inc
push
fildll
iret
xchg
push
push
loop
imul
jno
xor
hlt
mov
mov
in
les
aad
cmp
fldenv
imul
push
lcall
cltd
mov
lret
dec
xor
test
add
inc
push
pop
xor
dec
aam
cmpsl
sahf
pusha
jmp
pop
mov
sub
sub
push
adc
mov
shrl
and
leave
mov
pop
dec
lret
test
push
or
add
xchg
mov
inc
mov
sub
jne
add
sub
mov
mov
cmp
dec
leave
cmc
push
lahf
pop
jae
rclb
subl
mov
xchg
xchg
jo
fs
pop
lahf
sbb
push
jae
addr16
jmp
pop
movsl
mov
frstor
rcll
jne
pusha
popf
imul
scas
xor
push
jnp
movsb
inc
mov
dec
fchs
fwait
pop
test
cltd
jg
dec
xor
in
fimuls
mov
xor
rcr
shrl
fstpl
sbb
xor
jbe
mov
add
lcall
pop
mov
testb
outsb
sbb
inc
test
xor
addr16
cld
mov
cmp
mov
xchg
jo
stc
and
dec
xor
clc
daa
xor
xor
ljmp
shrb
into
mov
movb
flds
repnz
jecxz
and
cs
add
dec
and
repz
outsl
inc
mov
inc
ret
or
sub
sub
inc
dec
push
inc
or
dec
and
mov
add
movq
push
mov
xchg
cli
shlb
cli
and
pop
mov
sbb
jecxz
dec
cwtl
jg
lea
mov
cmp
adc
xchg
lods
pop
mov
dec
sbb
xor
loop
imul
cwtl
adc
outsb
lahf
jl
subb
inc
lea
in
adc
sub
fs
sub
xor
cmpsl
insb
shrb
sti
std
cltd
addl
adc
stos
hlt
bound
icebp
std
jne
iret
sub
pop
rcl
mov
pop
nop
jl
lret
cli
das
je
test
pop
divb
mov
fcomp
leave
loop
pop
dec
mov
sub
and
add
movsl
fdivl
ss
inc
mov
mov
adc
lcall
loopne
add
pushf
test
xchg
or
fldenv
ret
iret
pop
lea
int
decb
inc
fs
scas
xor
jo
js
scas
pop
enter
xchg
mov
fs
aas
xchg
mov
fcoml
cltd
dec
insb
jb
adc
dec
adc
dec
pop
mov
ret
stos
mov
xchg
ss
or
scas
fbstp
into
pushf
je
cld
xchg
aam
fistpll
scas
mov
sbb
ucomiss
cmpb
or
and
cld
ficoms
mov
jns
fwait
or
clc
inc
ret
add
dec
inc
push
dec
and
testl
mov
xchg
out
push
popa
mov
xlat
and
xchg
in
inc
imul
je
leave
pop
jg
mov
add
jge
sbb
add
adc
push
movsw
xchg
push
test
pusha
or
lahf
xor
pop
inc
imull
int3
js
es
cmpsl
pop
lret
adc
push
subb
out
mov
push
cmpsb
push
es
dec
cli
fstl
adc
mov
popl
test
enter
insb
imul
dec
mov
int3
cmp
mov
orl
adc
stc
mov
inc
femms
xor
adc
jmp
cmc
jle
inc
out
or
shlb
pop
rcr
dec
fdivp
mov
push
inc
dec
adc
jbe
add
rcrl
fs
lock
test
test
sub
movsl
pushf
inc
enter
mov
test
jmp
daa
jl
mov
cmc
in
pop
and
mov
sbb
inc
jl
inc
clc
out
mov
mov
sbb
pop
loop
lock
jbe
sbb
cltd
fcoml
xchg
cmpsb
fldlg2
mov
call
mov
pop
push
mov
inc
popa
lcall
iret
pop
es
fmull
cwtl
repnz
push
mov
xor
pusha
mov
dec
add
push
and
jp
mov
decl
fdivrs
push
mov
dec
loope
push
mov
stos
test
in
cmp
imul
mov
jg
jge
loop
push
sbb
popl
jle
pop
divl
xorb
mov
lcall
loopne
cmp
mov
ret
in
add
xor
xor
iret
sbb
mov
push
xchg
xor
jmp
push
inc
mov
cli
mov
xchg
incl
or
hlt
lods
jmp
in
out
cmovno
inc
pop
bound
inc
inc
xchg
cmc
loope
sub
outsb
ret
lcall
loopne
lods
popa
cmp
add
xchg
gs
in
adc
xor
clc
xlat
in
sbb
notb
jmp
movsb
imul
dec
jo
sub
pop
leave
mov
sbb
mov
ljmp
xorb
sbb
jno
xchg
lods
ret
mov
pop
sbb
lds
cli
xchg
lock
enter
push
mov
addr16
loope
shlb
repnz
call
addr16
jle
cs
fcoml
or
mov
bswap
lret
movsl
lds
mov
arpl
or
mov
cld
and
mov
mov
sub
push
call
aaa
jno
lret
sbb
fistpl
xchg
jle
in
mov
rcl
xchg
ror
fwait
stos
inc
mov
jg
and
jae
cltd
sub
mulb
mov
cmp
inc
mov
push
fsubs
adc
dec
rcrl
call
shrl
cmp
lret
sti
subl
cld
jmp
xchg
dec
jmp
ss
jae
adc
gs
and
lock
xorl
add
jge
mov
lds
lea
ret
pop
lds
aad
lods
jnp
outsb
dec
jge
enter
scas
popl
mov
push
rcr
add
daa
mov
mov
les
ret
adc
out
push
shll
test
cs
or
push
icebp
and
xor
insb
add
or
dec
mov
jb
adc
mov
xlat
or
cmpsl
pop
jge
lods
pop
pop
dec
mov
iret
xchg
add
add
xchg
xchg
pop
sarb
mov
pop
movsb
sub
inc
andl
jmp
mov
pop
shrl
mov
lods
push
ret
mov
adc
mov
push
push
inc
xchg
jae
in
mov
popf
jne
jmp
push
shr
scas
jmp
mov
insb
inc
mov
shrb
cwtl
fmull
pop
cltd
xor
movsb
loopne
lret
sbb
add
add
mov
xchg
mov
xlat
adc
add
dec
xchg
imul
lret
push
cmp
push
ds
dec
jle
mov
arpl
sbb
cmp
cmpsb
pop
scas
scas
sub
call
add
or
ret
or
lcall
ret
cmp
xor
sti
cmp
inc
fstp
pop
dec
adc
pop
mov
call
jb
dec
movhps
movsb
mov
aaa
aam
leave
movsl
xor
and
fidivrl
mov
push
and
clc
xchg
jmp
push
in
xor
mov
in
addr16
inc
sub
addb
or
and
xor
sub
scas
lahf
shll
out
mov
mov
xchg
jb
xor
mov
pop
inc
or
pop
cmp
sbb
shl
pop
orps
xlat
push
jp
pushf
lods
fsubrl
scas
adc
add
fwait
jecxz
sbb
sahf
outsb
ret
mov
or
push
push
mov
fadds
hlt
xchg
ffree
add
jo
sub
in
sbb
push
outsl
pushf
xor
stc
test
ljmp
jno
sub
movb
cmp
cmpsb
imul
lods
jnp
cmpps
pop
cltd
shll
pop
sbb
push
push
mov
push
mov
pop
iret
push
sbb
adc
xor
fwait
rorb
outsb
xor
mov
and
sub
repnz
repnz
lds
aam
jmp
outsb
dec
pushf
dec
mov
jae
fwait
mov
cs
inc
cmp
jo
addr16
lods
repnz
mov
les
pop
inc
push
sbb
dec
inc
out
add
xchg
outsl
mov
mov
rcrb
stos
test
cmp
adc
jo
mul
popa
or
mov
fistl
sub
adc
sub
pop
pop
mov
jg
pop
xor
fmull
xor
push
out
push
push
nop
push
mov
lcall
aad
mov
push
mov
jg
test
leave
out
pop
xchg
loopne
fcoms
pop
add
aad
sti
or
xor
and
pop
mov
adc
inc
out
inc
push
jge
imul
fsubrs
lret
push
sub
ljmp
pop
jb
cmpsl
jb
sbb
xchg
fwait
sub
sub
idiv
test
mov
add
in
sbb
cli
push
pusha
adc
sahf
xor
mov
jae
stos
cmp
rorl
lds
xchg
or
adc
add
addr16
pop
xlat
cld
in
or
lret
sbb
lds
xor
dec
bound
ljmp
or
sarb
dec
es
stc
fimull
ja
decb
stos
aas
and
pusha
sbb
inc
out
xchg
sbb
pop
sbb
enter
dec
dec
mov
mov
pop
sbb
add
sahf
stc
test
xchg
das
ds
popf
js
addl
arpl
pop
bound
notb
cld
push
lret
push
xchg
daa
pop
push
mov
add
and
orl
lret
mov
stc
dec
adc
push
rcrl
dec
imul
add
jle
scas
jge
jmp
rcr
jecxz,pn
cwtl
push
idivl
cmp
lods
push
pusha
pop
enter
mov
mov
and
repz
jo
jle
adc
and
mov
fs
push
mov
lock
xchg
mov
jno
mov
xor
je
inc
lock
pop
jo
cmp
lcall
dec
jmp
mov
mov
and
scas
cmp
sbb
jmp
mov
adc
and
xlat
and
dec
aaa
adc
sti
lret
mov
sub
arpl
or
or
daa
jae
mov
add
dec
inc
out
ljmp
push
fldt
int
daa
xlat
inc
insl
leave
sub
loopne
bound
cmp
or
xchg
xchg
jecxz
lods
mov
xor
out
push
xor
mov
push
lds
std
ds
push
mov
adc
bound
ret
outsl
mov
pop
xor
outsl
adc
pop
icebp
sub
cmpsl
dec
mov
mov
das
lock
arpl
mov
dec
jp
sub
and
push
repz
out
push
xchg
or
movsb
fimull
mov
xor
mov
mov
in
loop
sub
adc
dec
mov
push
xchg
cs
hlt
cmp
cmp
mov
cmp
inc
scas
adc
js
xchg
cmc
add
push
jne
adc
mov
inc
hlt
aas
adc
adc
cmp
pop
mov
mov
fwait
imul
add
push
pop
push
loop
fs
ss
dec
and
clc
aad
lods
out
inc
negb
pop
cmp
lock
aaa
shrb
outsb
gs
rolb
mov
popa
mov
outsb
arpl
cmpsl
sahf
aas
les
fnsave
pop
xchg
ror
int
xchg
jmp
push
xor
faddl
es
jne
bound
insb
les
cmp
les
push
out
push
xchg
loope
cmp
mov
cmp
fldcw
mov
lods
jmp
pushf
xor
std
push
xchg
stos
mov
cmpsl
pop
jg
push
mov
rorl
mov
add
adc
enter
xor
xor
rol
and
fdivs
out
push
ss
dec
add
mov
jo
mov
call
mov
inc
cmp
addr16
stc
mov
cmp
repz
push
jne
cmp
and
ss
andl
pusha
loope
test
dec
dec
sub
sbb
lahf
out
icebp
push
lock
mov
scas
icebp
fs
and
in
mov
xchg
and
pop
mov
mov
popf
dec
mov
lret
scas
fld
in
add
mov
push
sub
insb
xchg
ljmp
out
add
adc
int3
sahf
xor
fsubl
sbb
scas
and
jnp
fimuls
mov
jne
gs
inc
pop
pop
repz
adc
rorl
mov
lahf
aad
lods
icebp
lods
add
lods
or
mov
pop
ret
incl
adc
mov
push
cmp
jp
push
insb
jp
pop
ret
fwait
pop
dec
ret
arpl
loopne
and
xchg
sub
stc
ss
xor
rorl
sbb
lret
adc
insl
mov
xchg
icebp
cld
jae
cmc
insl
xorl
mov
sub
outsb
mov
cli
rorl
cmpsb
aaa
lea
push
popa
dec
pop
lret
or
pusha
or
lock
cmpsb
icebp
sar
imulb
out
and
insb
xor
cmp
mov
aaa
insb
sub
outsl
cmp
pop
xchg
xchg
add
lcall
cmp
or
daa
je
xlat
repz
push
push
out
lock
jmp
sti
mov
mov
mov
test
in
loop
cltd
ja,pn
insb
in
sbb
je
fwait
pop
add
mov
sbb
push
inc
cli
and
daa
xchg
adc
lcall
lcall
scas
or
sub
xchg
aaa
push
mov
xchg
jo
and
xor
test
aad
daa
and
add
lcall
push
mov
push
rorb
pop
ja
pushf
xor
ret
mov
xor
push
arpl
lds
out
fnstenv
mov
dec
test
pusha
jb
jmp
ljmp
dec
pusha
int
loop
shl
js
cli
inc
jg
cmpsb
ficompl
and
lret
mov
sub
shrb
shrb
jb
std
push
in
inc
es
inc
xchg
sub
mov
sbb
pop
jg
mov
push
pusha
inc
pop
mov
rol
ret
lock
add
test
add
and
movsb
ja
jae
pop
xlat
dec
fs
cmpsb
mov
pusha
mov
addl
jns
je
inc
mov
pop
pop
call
fadds
in
out
sub
insb
xor
insl
pslld
mov
sub
test
aad
push
lcall
jl
mov
push
xor
das
xor
shl
xor
in
dec
int3
mov
cmp
adc
sbb
test
sub
add
mov
sub
outsl
nop
or
sbb
push
xchg
sub
adc
and
pop
sbb
mov
mov
jmp
xor
out
pop
mov
inc
mov
fsubr
out
je
in
test
negl
out
mov
and
movsl
addb
sbb
pop
ds
jno
push
jmp
pushf
mov
xor
fbld
ret
daa
jns
mov
mov
cmpsl
fistl
sub
mov
in
push
push
test
xchg
outsb
lods
adc
jnp
push
test
fcomp
add
pop
cld
cmp
rolb
cld
sub
ljmp
ret
rorb
pop
mov
jg
cld
cmpsb
pusha
push
lds
jecxz
mov
lds
or
jne
cmp
loop
loope
loop
push
and
fcomi
js
mov
pop
push
push
loop
inc
fcoml
xchg
icebp
mov
jmp
out
jmp
fcmovnu
push
repz
xchg
adc
inc
dec
leave
stc
mov
loop
sbb
decl
sti
ficoms
enter
xchg
lahf
pop
loop
loop
js
mov
dec
xor
jb
mov
adc
test
out
inc
sub
mov
dec
sar
pop
xor
push
mov
incl
push
nop
add
lret
jge
jg
aas
test
es
xchg
adc
int3
iret
sbb
in
lret
in
xchg
mov
movsb
mov
or
fstps
cld
push
mov
pop
xor
pop
fldt
jge
loopne
jecxz
leave
mov
lcall
punpcklbw
inc
add
sub
pop
movsl
dec
sbb
lret
cmpsl
mov
repnz
pop
mov
pop
repz
xor
mov
sbb
sub
xchg
fiadds
adc
jnp,pn
mov
stos
leave
sbb
dec
or
pop
popa
cmp
jne
inc
adc
dec
or
inc
mov
xchg
cmp
repz
mov
ret
and
lahf
mov
movsl
or
das
add
mov
xor
mov
mov
mov
mov
pop
dec
mov
and
push
xor
adc
sbb
adc
arpl
mov
adc
lock
iret
bound
and
out
pushf
int
enter
into
lahf
inc
or
fstpt
sbb
ds
push
add
and
lods
jb
mov
jbe
cmp
pop
mov
dec
imul
mov
orb
xor
mov
push
lret
push
cmpsb
lock
icebp
push
dec
sbb
fwait
xchg
les
rol
hlt
insl
es
out
iret
lea
pop
les
cmc
imul
sti
dec
and
shrl
cwtl
stos
xchg
cmp
movsb
lock
adc
sbb
ja
add
mov
jnp
fs
mov
data16
xlat
add
aad
aad
cmpsl
mov
setb
pop
mov
loope
jno
sub
xchg
mov
jmp
push
mov
and
adc
pop
in
xchg
add
jo
js
ja
fbstp
cld
repnz
push
pusha
sbb
test
aaa
divb
fldln2
jo
ret
jp
cmp
xchg
repnz
cmc
mov
enter
mov
int3
xorl
push
addr16
and
and
mov
stos
sub
ljmp
lods
ljmp
in
in
xchg
mov
stc
test
cmp
cld
inc
aas
jo
cmp
jge
cmp
adc
ja
outsl
adc
jecxz
add
add
dec
imul
fnstenv
push
sub
pop
fmul
adc
test
sub
cmp
lret
sub
cmp
and
das
repnz
xor
xor
add
fsubs
or
stc
fwait
push
das
out
push
rcrl
sub
push
lock
ret
shl
pop
xchg
popf
popa
lds
pop
push
lret
add
jle
xlat
jp
lret
xchg
adc
push
jmp
inc
sub
xor
mov
mov
xlat
push
xchg
and
movsb
or
push
push
es
popf
inc
xchg
xorl
iret
xor
shll
push
je
xlat
pop
in
or
call
mov
fists
imul
xchg
mov
mov
addr16
cmpsb
jbe
xlat
adc
jno
dec
in
sbb
xor
bound
jmp
jb
add
jbe
bound
fisubrs
xchg
fwait
popf
in
and
dec
popf
ret
mov
jg
push
rcrb
push
jmp
mov
mov
and
imul
sbb
je
in
out
dec
adc
jbe
bound
test
sahf
cmovnp
or
loop
dec
testb
cld
adc
stos
mov
test
sar
rcrl
jecxz
push
mov
lds
adc
jns
mov
xchg
popf
and
add
popf
mov
pop
dec
xlat
rcrl
mov
jbe
push
sub
fildll
nop
repz
out
sbb
mov
or
lods
sti
or
aas
subl
sbb
out
and
jo
xor
sti
pop
xchg
xchg
pop
outsl
aaa
push
mov
cmp
cltd
imul
cmp
fwait
mov
stc
push
adc
fldenv
xchg
inc
test
and
lods
xchg
into
js
rorb
ja,pn
js
es
and
sub
mov
mov
vsqrtsd
sbb
adcb
mov
sub
repz
adc
loop
jne
sbb
xor
fs
push
and
int
hlt
push
ja
lods
into
and
cmp
add
pop
popl
cmp
cwtl
sbb
dec
lds
push
out
lds
cmp
stos
pushf
push
test
mov
fisubrs
sub
push
inc
loopne
xor
iret
jnp
xchg
hlt
xchg
cmpsl
int3
cli
add
add
jmp
rorb
popa
subb
dec
fsubr
pop
sbb
and
ds
jno
xchg
dec
push
xchg
inc
mov
jns
mov
xorl
ds
sti
mov
jo
subl
fidivs
decl
iret
mov
orl
filds
mov
call
pop
cmpb
mov
imul
lahf
add
mov
lcall
inc
popa
lcall
rcrl
jl
scas
test
cli
jp
sbb
inc
pop
sbb
pusha
fidivrl
cmp
cltd
and
and
int
and
fcoml
fcmovnu
stos
rorl
push
add
sub
loop
xchg
js
mov
xchg
sti
sarb
test
roll
in
mov
movb
daa
out
ss
dec
test
cwtl
jns
pop
add
inc
jecxz
iret
stos
jmp
loope
popf
pop
loopne
cs
out
or
loop
jne
jl
mov
mov
icebp
mov
inc
dec
lcall
roll
push
xor
and
lret
out
sub
push
jmp
dec
sbb
xchg
mov
and
pop
shrb
sbb
scas
push
sbb
imulb
test
fucomp
add
mov
mov
xor
jmp
add
xor
or
scas
add
jb
jo
dec
or
jg
jns
cld
pop
cmp
and
loope
sub
push
and
ret
imul
orb
pop
fwait
sub
scas
inc
push
pushf
ss
sub
xchg
sbb
fimuls
loope
ja
clc
sbb
repz
fwait
gs
sbb
mov
pop
pop
test
repz
ret
daa
test
inc
lret
xchg
push
fsubl
aaa
outsl
mov
in
adc
test
inc
or
lods
push
popa
push
mov
shr
call
or
sub
ds
pop
cld
repz
pushf
pusha
dec
and
add
xchg
ret
xchg
xor
data16
fldcw
ljmp
and
add
mov
mov
cvtpi2ps
testb
out
cmp
push
test
adc
shlb
mov
jns
montmul
cmpsb
pop
arpl
incl
jns
fmuls
test
test
mov
rcrb
test
inc
enter
js
call
jnp
inc
xor
sbb
add
mov
jns
adc
incl
movsl
lods
and
fistpll
and
pushf
call
test
insl
pop
int3
in
daa
cltd
mov
mov
lods
adc
push
ret
outsl
int
mov
rolb
xchg
lock
fstpt
mov
in
push
mov
icebp
pop
mov
imul
lods
push
push
push
test
xchg
icebp
mov
lcall
sub
cmp
data16
mov
pop
inc
shlb
orl
mov
xchg
jns
xchg
add
mov
leave
ret
mov
push
in
shlb
enter
dec
add
push
cmp
outsl
wbinvd
push
fisttpll
adcb
mov
mov
jle
lods
int3
dec
xchg
xchg
push
or
dec
lret
lahf
pusha
adc
inc
add
add
jge
or
inc
pusha
add
cmp
daa
adc
adc
pop
mov
adc
ror
sbb
xor
dec
loop
ficomps
inc
cmp
dec
and
jge
popa
jns
sbb
seto
jbe
or
adcb
es
out
push
shrl
pop
jo
mov
jae
lret
daa
pop
lods
arpl
shlb
push
in
sbb
jns
cmp
fsubrl
fs
push
test
lea
adc
in
std
into
or
inc
aad
clc
shlb
pop
repnz
sub
xchg
dec
je
iret
mov
jg
pop
je
incb
add
and
cli
mov
sti
inc
jae
xor
push
test
add
sub
sbb
mov
out
inc
mov
lea
xlat
movsb
stos
mov
sub
cmp
add
movsb
ja
mov
pop
scas
mov
stc
and
or
adc
push
and
in
loope
add
xorl
cmpsb
jg
jg
cmp
jmp
into
inc
add
mov
cmp
shrb
ret
ret
xor
sub
insb
fists
ret
cs
stos
rol
xchg
mov
ss
adc
fidivl
sbbl
fisttps
int3
push
cld
add
sti
nop
jae
sbb
sub
mov
lds
inc
ds
leave
sbb
add
mov
mov
scas
out
add
pop
cmp
movsb
jl
bound
mov
xchg
dec
loopne
mov
xchg
add
daa
add
add
inc
in
aas
out
scas
sub
pop
cmp
add
daa
push
fdivrl
inc
jl
test
xchg
jmp
pop
xor
sub
pop
inc
mov
divb
rcrb
arpl
into
xor
xor
ret
inc
ljmp
fsubrs
es
xchg
mov
inc
pop
lods
cmpsb
mov
or
dec
mov
les
sarb
jbe
mov
cmp
sub
in
sub
jle
enter
add
out
pop
nop
push
stc
int
push
xchg
daa
inc
push
jl
sbb
std
sbb
and
scas
push
scas
inc
push
dec
jge
mul
aad
fnstcw
mov
addr16
sub
mov
and
inc
incb
popf
insl
push
add
mov
lea
inc
xor
xchg
mov
push
pop
scas
fwait
mov
das
test
hlt
jae
mov
lea
or
jl
lret
jne
and
pop
sarl
lcall
hlt
jp
das
dec
cmp
push
jne
sbb
cmp
sub
test
jb
out
je
mov
or
mov
push
cs
sbb
push
sub
addr16
sbb
cmp
in
hlt
bound
or
loope
xor
sbb
loop
and
mov
cs
xchg
jp
movl
insb
movsb
dec
shrb
nop
cmc
ja
lret
cmp
sub
in
lods
pop
jge
or
mov
xchg
jae
mov
add
js
sbb
mov
xchg
adc
xor
dec
adc
cmp
or
pop
scas
push
test
inc
adc
sub
and
inc
xor
fists
sub
pop
call
pop
push
aaa
jbe
test
int
xor
repnz
cmp
mov
lock
add
sbb
cmp
mov
loopne
sbbb
sub
scas
sti
arpl
fwait
pop
xchg
or
loopne
shl
adc
and
push
and
icebp
and
insl
mov
adcb
aas
jbe
mov
pop
add
adc
mov
and
xchg
mov
sti
je
or
inc
mov
and
jno
lcall
push
repnz
lds
div
lcall
rcrl
sub
fildll
pop
adc
mov
scas
fwait
dec
or
adc
and
mov
frstor
sbb
and
rorb
jle
or
ljmp
add
fwait
or
sbb
aam
and
rolb
scas
sti
adc
jne
pop
sub
and
or
loop
int3
in
lret
test
sbb
or
cmp
cld
dec
mov
mov
in
ljmp
pop
sub
scas
fsubrl
lods
mov
push
cmc
sub
lods
fucomp
xchg
and
cmp
or
mov
iret
jl
stos
repnz
lea
xchg
daa
clc
pop
add
add
sti
jl
ljmp
into
aaa
lods
push
dec
hlt
clc
adc
data16
mov
into
dec
xchg
dec
mov
lea
cmpsb
push
loop
jmp
out
mov
inc
neg
fistl
cmp
cltd
test
and
mov
and
ret
lcall
sub
movsb
lods
push
mov
push
xchg
lods
fucomi
outsl
mov
or
cwtl
stos
mulb
or
roll
dec
mov
mov
jge
bnd
shr
scas
orb
add
cmp
adc
mov
mov
mov
fimull
xor
pop
adc
bndldx
arpl
popl
and
or
pop
cld
jl
jmp
adcb
aad
adc
jo
stc
push
jge
sbb
jge
aaa
fwait
xlat
cmp
mov
cmp
mov
lods
inc
movsl
jp
sub
lahf
push
call
and
mov
pop
movsb
cltd
and
lret
cmp
repnz
jle
jecxz
inc
lahf
xchg
out
fists
lahf
test
sbb
adc
xor
fisubrl
mov
int3
add
dec
pop
mov
loope
lcall
push
aad
sbb
cmp
out
mov
lcall
test
add
xchg
jge
sub
jp
nop
sub
fstl
or
inc
push
fstpl
inc
loopne
mov
mov
cmc
outsl
sub
sbb
loop
and
in
pop
lret
adc
push
movsl
loope
mov
inc
fwait
sbb
xchg
mov
vmovaps
outsl
pop
nop
xchg
push
jbe
pop
addb
notl
sub
les
cs
popl
movsl
xor
mov
cmp
ret
out
sub
std
jg
or
dec
sbb
in
adc
add
mov
fistps
lods
inc
dec
xchg
mov
sbb
lock
das
add
push
add
ficompl
xchg
in
add
ret
adc
or
ficompl
pop
out
xor
arpl
andb
add
pop
cltd
push
xchg
xor
or
mov
mov
call
add
jle
iret
jbe
test
test
cltd
fimuls
mov
imul
rclb
call
add
jne
mov
call
test
ljmp
push
push
mov
ja
push
ret
xchg
jg
bsf
insl
mov
or
or
rorl
pop
jnp
mov
dec
xor
push
jnp
es
sbb
cmp
dec
and
imul
dec
bound
jmp
cmp
adc
sub
sub
into
call
cld
das
movsl
and
fcmovne
dec
push
sub
mov
xor
adc
dec
xor
ss
dec
jno
loope
cmp
aam
lock
push
add
adc
lods
outsb
fdivs
mov
push
or
dec
shlb
outsb
pusha
call
mov
sub
addr16
mov
int3
les
mov
roll
push
cmp
or
adc
adc
pop
sbb
imul
movl
or
xor
cmp
sbb
sbb
xchg
adc
adc
out
mov
xlat
push
sub
mov
subl
cmpsb
inc
jnp
jbe
fisubs
cld
into
dec
cmp
int3
xor
mov
hlt
mov
ss
xlat
cmp
js
into
push
fcomip
push
jge
outsl
daa
xchg
and
or
pop
ret
add
gs
aas
push
int
aas
adc
pop
adc
mov
mov
pop
sbb
mov
ds
in
scas
insb
push
cwtl
in
frstor
jge
imul
movsb
adc
or
sub
out
aad
in
popf
fimull
and
in
add
test
adc
cmp
leave
xchg
lods
fadd
aam
push
pop
mov
fnsave
test
hlt
cmp
jns
xor
sub
add
pusha
or
pop
cmpl
jl
loope
xchg
lcall
pop
push
cmp
rorb
or
lods
xor
add
push
pop
rorl
push
fsub
inc
sbb
dec
movsl
and
out
add
pop
xchg
and
test
adc
cltd
int
and
push
leave
push
movl
cmp
movsb
jle
fwait
aam
adc
and
rep
stos
scas
inc
sub
and
enter
mov
lds
sbb
xlat
shlb
push
or
dec
xchg
mov
pop
inc
inc
movsb
lret
inc
popa
push
add
add
push
cmp
mov
aas
push
stos
mov
loopne
repnz
dec
sahf
add
mov
pop
adc
and
sbb
repnz
jmp
sbb
in
cwtl
inc
sub
imul
add
in
pushf
fsub
std
add
push
xchg
pop
dec
ja
push
cmpsb
push
rorb
mov
add
mov
jnp
cmp
xor
or
call
dec
pop
loope
mov
mov
popl
cmp
mov
sbb
imull
lret
xchg
jno
mov
inc
mov
outsb
xor
data16
pop
bound
or
shlb
xchg
rorl
ljmp
in
ds
sub
orb
call
vhaddpd
imul
lds
adc
push
ficoms
push
lcall
repnz
push
push
or
push
or
sbb
repz
and
jg
jns
mov
sahf
stos
pop
jnp
in
inc
xchg
adc
out
mov
cmp
cmp
mov
xor
loopne
int
add
lods
lock
cld
rorl
mov
les
xor
push
push
outsl
jns
inc
pusha
pop
in
lcall
pop
pop
decb
sbb
loope,pn
ret
mov
inc
pop
clc
xrelease
cmp
fdivrl
add
std
mov
xchg
mov
push
mov
loop
xor
xchg
add
shl
fsubp
outsb
push
loop
mov
ja
call
jbe
popf
mov
loope
stos
cmc
jne
sti
adc
mov
mov
orb
testb
jo
push
mov
pop
cld
pop
mov
inc
push
mov
roll
and
loop
stos
pop
push
stos
mov
in
leave
lock
cli
and
call
pop
pusha
shrl
adc
push
or
jo
jg
mov
pop
pop
jno
sbb
enter
sub
sub
or
jb
push
test
fildll
push
xor
fimull
call
cmpsb
data16
mov
mov
pop
sub
mov
mov
jg
hlt
inc
mov
cmp
mov
movl
leave
inc
loop
in
add
out
sub
cmp
fucomi
or
les
xchg
adc
or
cmpsl
sar
ljmp
inc
ret
inc
ret
xchg
or
repnz
jne
adc
popa
mov
call
push
inc
ret
mov
clc
sbb
dec
or
cmp
push
movsl
cs
daa
fmuls
pop
pop
cmp
daa
lods
mov
cmpb
scas
std
call
outsb
push
jne
jge
mov
inc
pushf
push
mov
fs
out
cld
lea
cli
stc
mov
int
and
insl
cmp
cmpsl
push
leave
cmp
xlat
mov
imul
out
daa
lods
dec
dec
mov
lea
dec
test
popf
xchg
xchg
mov
pop
cld
mov
aas
mov
xchg
bound
in
xchg
stos
sbb
into
xchg
or
mov
xor
xchg
mov
fcmovnbe
or
sub
push
mov
mov
push
fisubrs
in
mov
mov
mov
xchg
mov
dec
add
xlat
sbb
sbbl
ja
sbb
pop
inc
idivb
cmp
or
inc
dec
out
add
jb
adc
cmc
inc
mov
inc
scas
push
mov
fisubs
cli
jg
mov
inc
pop
push
sbb
fidivrs
mov
fstl
popf
adc
ss
nop
test
ret
xchg
jge
pop
lret
mov
sub
into
ret
out
mov
mov
mov
xlat
and
ret
test
cmp
or
repnz
xor
cmc
daa
adc
in
and
or
pop
ljmp
inc
fisttpl
loop
add
push
shr
ret
mov
xchg
pushf
mov
pop
cmp
cmpb
dec
sub
mov
cmpsl
popf
out
lock
clc
jg
add
mov
xchg
jo
stos
xor
mov
mov
push
inc
into
ret
inc
jmp
jbe
scas
mov
ljmp
xchg
testb
fs
jmp
inc
jge
shll
test
int
testb
cmpsb
or
pop
inc
mov
in
ret
pop
insl
repz
movsb
xor
pop
push
or
xor
pop
pop
ret
push
ja
pop
sbbb
outsb
ffree
push
int
stos
aaa
icebp
mov
xor
pusha
test
imul
psllw
adcl
rorb
int3
xchg
cltd
cmp
or
pop
arpl
je
push
and
add
mov
popa
lods
movsl
clc
loop
sub
ret
xchg
jbe
cmp
push
push
mov
mov
dec
add
push
pop
cmp
sub
jg
pop
arpl
sahf
pop
out
std
icebp
jecxz
jns
ret
xchg
push
mov
enter
push
cmp
cmp
enter
mov
mov
addr16
in
imull
xor
movsl
out
dec
push
push
add
cmp
mov
jecxz
in
and
in
push
pop
fstpt
mov
pusha
mov
sub
outsb
je
dec
lret
inc
adc
out
out
cmpsl
cmpsl
push
test
jl
mov
ret
jbe
cmp
adc
outsb
sbb
mov
lock
das
fstpt
xor
aad
test
sti
ret
mov
inc
enter
movl
xor
adc
shrl
mov
dec
xchg
push
pop
roll
insl
nop
xlat
cmpsl
mov
divl
and
xchg
notl
add
stos
mov
ja
pop
pop
seta
int3
push
pop
lea
popf
adc
or
mov
xor
int3
lods
or
and
mov
sti
stos
pop
aaa
pop
cwtl
outsl
roll
mov
iret
pop
adc
movsb
or
add
xor
and
push
orl
lock
or
xchg
sbb
jecxz
les
and
jg
out
push
hlt
inc
loop
adc
addr16
fs
inc
hlt
aam
xchg
or
mov
xlat
mov
mov
pop
lea
nop
jecxz
push
ja
dec
std
scas
test
fimuls
mov
push
push
jecxz
sbb
das
jbe
sti
cmpsb
or
lods
movsb
stc
es
shl
add
mov
pop
add
sbb
aad
in
adc
jae
push
cmp
hlt
mov
pop
fs
inc
fcoms
sti
add
loopne
fs
mov
and
inc
faddp
cmp
jle
mov
mov
lcall
aad
dec
or
repz
scas
mov
mov
sbb
ljmp
mov
mov
xor
loop
cmp
hlt
or
lahf
dec
les
jmp
inc
mov
adcl
popa
gs
shl
mov
jmp
and
jb
fstl
lret
push
pop
sub
pop
pop
aad
out
xchg
pop
mov
push
push
orl
in
sbb
jb
repnz
add
mov
xor
adc
xlat
mov
push
rorb
ja
insb
and
int
mov
xchg
loope
popa
add
test
bound
int
je
enter
adc
and
fs
xchg
sar
test
mov
mov
dec
lahf
shrl
xor
shrb
ljmp
jnp
mov
push
jge
or
scas
dec
pop
mov
int3
mov
push
adc
jbe
push
lret
sbb
push
push
arpl
aam
xchg
std
fiaddl
push
cmpsb
mov
fldl
sub
loop
pop
push
lods
out
scas
ret
pop
push
imul
aad
xchg
rol
out
push
cmpsl
xchg
jae
and
xchg
out
addr16
sbb
or
jle
insl
push
inc
push
jl
dec
jmp
jmp
and
cwtl
inc
insl
push
mov
ficompl
push
sub
sbb
lret
push
push
jecxz
leave
dec
add
jmp
xor
mov
or
lret
adc
insb
in
sbb
lldt
and
int
nop
cmp
mov
dec
mov
mov
es
and
xchg
sub
jecxz
bound
sub
inc
xchg
enter
pop
xor
in
insl
or
jns
mov
sub
imul
mov
daa
hlt
pop
mov
fisttpll
dec
sbb
mov
hlt
popl
aam
lret
pop
adc
or
in
sub
xor
or
push
rcrb
push
scas
mov
mov
test
jb
fidivrs
jg
xor
pop
insb
dec
mov
icebp
or
rclb
inc
cld
mov
sub
stos
sub
outsl
mov
insl
js
pop
mov
sti
jmp
fcoml
sbb
push
pop
mov
dec
cmp
xchg
pop
push
dec
int3
fadds
jp
xchg
outsb
addr16
xchg
xor
jb
insl
pusha
lea
int3
xor
push
push
out
jb
imul
lods
mov
xchg
fwait
inc
xor
add
dec
mov
jns
mov
lahf
inc
cmp
add
fcomp
pextrw
adcl
push
add
push
add
fdivr
bound
adc
push
sub
into
repnz
fldt
and
pop
clc
jmp
adc
adc
data16
mov
and
mov
scas
jg
push
inc
xchg
and
sbb
test
dec
cmc
xor
mov
icebp
loopne
jg
inc
insb
mov
data16
les
or
rorb
mov
jne
pop
xlat
xadd
mov
push
or
mov
add
inc
add
sub
fcoml
jecxz
test
cmp
lret
adc
lret
fs
xor
sub
out
clc
pop
popa
gs
test
push
sahf
sbb
push
addr16
enter
sub
jecxz
mov
fucomp
or
imul
mov
leave
xor
mov
dec
loope
xorl
imul
cmpb
int3
sar
lret
xor
lods
mov
and
or
xchg
les
mov
adcl
mov
fdivl
int3
sbb
dec
push
movsb
outsb
push
movsb
push
outsb
repz
ja
cwtl
mov
stos
test
or
add
je
push
add
push
aas
mov
pop
dec
jns
cmp
mov
repz
add
lret
popl
sub
xorl
cmp
lds
movsl
cmpsl
or
pop
add
jle
mov
or
sbb
rorl
cmp
pushf
js
jno
xchg
sarl
inc
outsl
mov
pop
mov
leave
or
adc
popa
inc
push
jmp
es
aad
jbe
fs
dec
push
cltd
add
xchg
jp
cmpb
mov
or
cld
sub
xor
arpl
xor
xor
or
outsb
add
lds
movsb
lcall
adc
ficompl
xlat
mov
mov
fucomi
sarb
push
stc
aad
dec
dec
cltd
mov
jmp
loope
cli
jbe
xchg
xor
sahf
inc
or
sti
inc
push
out
pop
sbb
setge
in
mov
pop
cmp
xchg
lret
push
mov
in
movsb
mov
mov
movsl
lea
xchg
pop
xor
cld
add
int
jo
mov
sub
cmpsb
mov
mov
push
cld
push
repz
mov
jno
push
push
fwait
inc
push
jbe
pop
cmpsb
push
icebp
mov
in
into
mov
mov
sbb
cltd
test
enterw
arpl
dec
or
std
xor
mov
into
sbbb
dec
loopne
pop
lds
mov
lods
popa
push
in
mov
adc
mov
sub
mov
xor
cmpsl
sbb
ljmp
in
mov
adc
cltd
jl
jo
mov
dec
aam
lret
leave
inc
push
or
xchg
add
adc
mov
imul
mov
movsb
loopne
inc
xchg
cmp
push
mov
lds
mov
repnz
mov
das
stos
pop
dec
jb
stos
scas
mov
pushf
das
jp
ret
cmpsb
ljmp
xor
add
insb
sub
cmc
dec
dec
clc
loop
push
lds
xor
lods
mov
hlt
and
sub
pop
int3
or
pop
sar
mov
or
inc
xor
cmpsl
imul
repz
int
pushf
lods
jb
shr
mov
ficomps
bound
pop
dec
jae
pop
imul
mov
push
daa
mov
imul
jno
test
xor
dec
adc
lock
inc
lds
push
mov
push
out
dec
aaa
push
loopne
or
enter
xor
in
push
dec
inc
xor
in
dec
pop
jb
jno
cmp
scas
pushl
adc
addr16
sbb
or
out
nop
lahf
mov
pop
decb
call
sbb
push
pop
loopne
shrl
aad
lock
jns
arpl
mov
loope
testb
add
testl
sub
inc
xchg
gs
pop
mul
das
mov
fidivrl
or
orl
push
pop
ds
xchg
xor
mov
mov
jnp
pusha
push
mov
lcall
mov
adc
mov
push
lret
jg
mov
filds
adc
inc
xlat
push
sbb
les
aaa
popa
mov
xchg
insb
cli
mov
daa
inc
jno
fld
push
mov
jnp
lahf
push
repz
lods
iret
ljmp
jae
cli
or
pushf
dec
or
daa
int3
into
and
fwait
cmpsb
fsubr
scas
iret
dec
pop
mov
fnstenv
mov
je
or
mov
dec
sarl
sbb
push
ss
mov
dec
filds
xchg
jno
add
and
or
subb
loope
jecxz
stc
testb
shr
lods
into
cs
pop
xor
xlat
rorb
xor
lahf
iret
adc
mov
mov
mov
inc
bound
inc
insl
popa
push
cmpsl
dec
add
jecxz
in
cmpl
adc
mov
xchg
js
jmp
arpl
data16
pop
cs
and
out
les
mov
call
xchg
aaa
push
dec
xchg
inc
mov
inc
clc
fmulp
mov
cli
cmp
into
sub
mov
mov
loope
ror
rolb
mov
icebp
sahf
mov
mov
in
sub
rorl
movsb
sti
scas
xchg
adc
xlat
aaa
add
and
mov
xchg
mov
out
push
pop
adc
aas
imul
cmp
xor
daa
lock
pop
sbb
mov
mov
hlt
insb
lods
push
cli
sub
test
iret
nop
sti
mov
lock
stos
jge
push
into
cld
adc
mov
out
lahf
fsts
and
bound
int3
dec
out
cmp
jp
sub
xchg
pop
or
cli
sbb
mov
mov
jbe
dec
xchg
scas
mov
jmp
xor
pushw
mov
fidivs
dec
dec
stc
cltd
repz
loopne
add
push
sub
mov
mov
push
mov
push
sbb
adc
cs
inc
cli
call
imull
sub
jo
push
xchg
dec
enter
jmp
or
jno
xchg
into
cmp
cmp
in
iret
test
rclb
fisttpll
dec
mov
push
adc
into
mov
and
fidivrs
fstpt
ficomps
jno
mov
dec
cld
pop
xchg
cpuid
mov
rcrb
mov
xor
or
cmpsb
enter
in
loope
cmc
rcrl
stc
inc
or
cmpsb
dec
dec
out
enter
mov
and
mov
inc
cmp
and
add
ljmp
mov
push
arpl
mov
ja
pop
ljmp
push
shll
insb
ljmp
mov
mov
pop
idivl
mov
ret
aaa
rcll
pushl
xor
cmp
xor
out
sbbl
aam
push
cmp
xchg
cmp
lret
ljmp
jo
je
imul
ret
jno
in
jmp
xchg
push
xchg
mov
je
xchg
cmpsb
cltd
lods
sbb
inc
outsb
pusha
pop
jae
push
adc
mov
addr16
stc
inc
mov
inc
ljmp
adcb
mov
add
mov
loop
pop
or
jmp
sbb
hlt
in
push
mov
adc
repz
xor
dec
out
or
push
jb
xchg
fisttpl
jae
xchg
cmp
inc
cs
lret
mov
jae
adc
imul
jle
lods
arpl
lock
mov
into
and
pop
pop
mov
inc
inc
jp
mov
xchg
fwait
pop
mov
lods
and
daa
cmpsb
ljmp
popf
xchg
push
cmc
pop
test
dec
push
cmp
jle
pop
mov
lahf
scas
pop
sti
xor
mov
les
ds
in
cltd
xor
push
sub
cmpsb
rolb
sbb
lods
xor
push
xchg
cwtl
fwait
shr
xchg
out
and
sbb
test
mov
imul
scas
ret
fcoms
loope
dec
hlt
nop
js
or
shr
loop
cmp
loope
cmp
insb
dec
mov
inc
js
clc
mov
mov
ficoms
imul
mov
imul
bound
push
lods
shll
arpl
sbb
fdivl
jge
lret
fbld
sub
jo
xlat
sub
push
je
mov
mov
jmp
in
cli
and
or
lods
popf
push
lock
add
mov
adc
cmp
clc
icebp
xchg
es
les
subl
sbb
sbb
sbb
pop
insl
lds
jmp
inc
and
rclb
adc
jns
ss
test
push
inc
in
stos
jno
daa
mov
popf
jl
aaa
icebp
imul
adc
cmp
mov
aad
ljmp
push
sbb
and
push
lock
adc
xor
add
adc
pop
hlt
cwtl
stos
movsb
dec
pop
and
leave
shlb
push
fdiv
dec
xchg
inc
test
pop
push
insb
cmc
popf
mov
adc
jne
push
into
lock
mov
adc
lods
inc
lods
imul
in
andl
push
ret
mov
dec
mov
clc
mov
sbb
sbb
or
sbbb
pusha
sub
cmp
arpl
xchg
in
jae
mov
lock
test
andl
pop
inc
leave
fldcw
mov
mov
jbe
dec
xchg
lock
inc
shr
cmpsl
or
or
int3
lods
in
pop
fsts
adc
pop
les
xor
dec
imul
hlt
paddd
lret
push
cs
aad
xchg
push
test
std
lds
sbb
insl
movsb
xor
cmp
les
out
mov
cmc
and
xor
push
stos
mov
xor
mov
dec
add
cli
outsl
pop
mov
cmp
dec
psubsw
mov
lock
xchg
sub
inc
or
popl
jo
out
cmp
ljmp
das
jl
shl
jo
sbb
movlps
int3
xchg
push
popf
cmp
es
sbbb
push
add
adc
push
adc
adc
fwait
dec
xor
jne
mov
jnp
mov
inc
add
cwtl
aad
fnstcw
mov
popa
sub
jae
and
fs
xor
in
into
adc
mov
js
loope
mov
cmp
or
mov
pusha
pop
popaw
jg
sar
sub
or
mov
aad
adc
mov
jbe
push
repz
pushf
out
nop
ret
cmpsb
pop
sub
mov
sbb
dec
cmp
stos
je
mov
sbb
or
inc
cmpsl
mov
ret
cmp
shll
and
rolb
int3
test
addr16
bound
mov
test
test
aaa
jbe
leave
push
incl
cmp
call
jle
inc
int3
xor
dec
lret
sbb
xchg
mov
dec
add
and
cmpl
cmp
or
loopne
repz
add
aas
push
dec
popa
inc
push
mov
shll
andl
test
mov
ljmp
daa
enter
cmp
bound
lods
into
jmp
ret
cmp
inc
mov
js
mov
xchg
xor
notl
pop
popa
jge
rorl
rcrb
in
xor
jno
and
fcmovbe
push
mov
inc
and
or
mov
fbstp
cltd
mov
adc
mov
mov
and
pop
xabort
jno
sbb
push
js
jne
adc
jp
inc
push
popa
dec
shll
test
xor
jp
pop
push
pop
add
sbb
xchg
mov
ret
scas
mov
xchg
arpl
in
or
cld
test
test
xchg
popa
gs
imul
imul
mov
xor
or
mov
inc
loope
adc
fsubrl
mov
fsubrs
dec
add
mov
dec
xor
fcompl
mov
sbb
addr16
daa
push
out
jo
outsb
nop
xor
or
mov
push
js
mov
push
mov
jle
mov
xchg
mov
out
icebp
pop
xchg
mov
mov
jle
jmp
cld
test
aam
arpl
fwait
cmp
test
inc
cmpsl
mov
xor
stos
je
inc
cmp
push
sub
fdivr
cmp
xchg
stos
xchg
push
dec
mov
lds
sbb
int
jp
in
fisubs
or
pushf
add
cmp
mov
ja
dec
adc
ljmp
test
outsl
lods
loop
std
mov
int3
dec
push
push
mov
push
scas
lret
iret
inc
and
shlb
sbb
pop
int3
cmp
imul
pop
inc
les
jle
push
cmpsl
insb
pusha
repnz
in
test
in
dec
scas
xchg
xor
test
adc
popf
or
mov
dec
mov
sarb
test
pop
mov
loop
ret
icebp
dec
mov
cmpsl
mov
sbb
lret
push
jnp
cmp
push
or
mov
ljmp
in
and
jae
mov
icebp
lahf
jecxz
dec
insl
fcoml
push
dec
fimuls
push
aas
filds
in
mov
xchg
xor
xchg
add
lea
or
cmc
inc
mov
pop
ret
mov
dec
les
cltd
sub
dec
stos
push
jne
adc
or
mov
and
stc
mov
fs
mov
sbb
jmp
dec
mov
jmp
inc
int3
mov
jb
out
fisubrs
ret
pop
and
jo
mov
inc
js
push
inc
add
and
pusha
xchg
and
sbb
test
xchg
sti
mov
sbb
and
insb
sub
int3
das
cltd
pcmpeqd
mov
lahf
sbbl
ja
ja
pop
adc
inc
aad
cltd
stc
std
and
push
mov
cld
rolb
jo
jge
and
outsb
icebp
call
mov
xor
insl
sbb
jmp
test
notb
repnz
and
lea
cmpl
sub
mov
adcl
xchg
addl
sub
dec
pop
cmpsl
push
scas
jnp
adcb
push
lods
mov
imul
hlt
cmc
movsl
add
cmpl
dec
aas
popf
lret
or
loop
into
in
aaa
sub
lods
ret
sbb
inc
mov
insb
mov
or
leave
dec
fiadds
mov
add
jae
or
push
andb
daa
aas
and
or
imul
sbb
arpl
mov
jb
mov
movzwl
jae
int
jge
cmp
xchg
sub
push
jl
and
aam
in
sbb
and
outsl
push
push
push
adc
xchg
push
ret
jb
xor
call
fucomp
and
inc
pop
iret
arpl
or
nop
add
push
out
and
mov
popf
sbbl
out
jae
pop
mov
mov
jne
rep
xor
js
xchg
jl
mov
rclb
pusha
mov
div
pop
leave
pop
cli
sub
fdivl
push
aam
inc
inc
orb
xor
into
xlat
std
xlat
mov
xchg
mov
arpl
sbb
push
fstpl
addr16
xchg
xor
and
bound
fisttpll
mov
in
rcr
push
jmp
xor
pop
aaa
mov
or
adc
loope
clc
mov
jp
cmc
sub
out
jne
push
mov
fmuls
sub
push
xchg
scas
adc
je
push
gs
test
adc
jns
cltd
lods
sbb
scas
mov
call
or
adc
sub
ja
sti
or
out
je
mov
dec
push
loope
outsb
sbb
push
shl
lret
daa
jl
es
dec
sarl
gs
pushf
es
adc
icebp
pop
out
pop
adc
out
xor
in
cmpsl
ds
or
aas
mov
pop
iret
clc
sahf
lods
out
notl
add
cmp
dec
andb
test
inc
aad
jmp
ret
lcall
in
cltd
adc
fidivrs
pop
push
sbbl
std
test
xor
das
adc
jle
push
lea
mov
sub
sbb
mov
jno
add
push
cli
mov
mov
or
xchg
sub
test
xchg
scas
inc
in
dec
gs
mov
loope,pn
aas
lahf
icebp
inc
or
push
test
stc
jl
cltd
sub
divb
pop
jl
mov
lret
adc
fisubrs
xorb
dec
mov
stc
add
sub
xlat
fimuls
pop
fiaddl
lea
popf
hlt
xchg
pop
sarb
xchg
xchg
adc
inc
call
push
loopne
lea
fld
push
int3
out
pop
xor
or
out
stos
add
fmull
popa
xchg
js
dec
ror
pop
add
and
push
add
les
into
das
push
fcom
cld
jg
fwait
shlb
gs
fbld
cs
enter
sub
xor
ss
mov
lret
mov
inc
jo
and
call
iret
loopne,pn
dec
dec
mov
enter
add
sub
adc
cs
pushf
add
popf
dec
jmp
les
aam
push
shl
ljmp
cli
lahf
xor
out
mov
and
mov
push
aam
add
cmpsb
pusha
pop
mov
pop
or
push
divb
jne
inc
shlb
jp
ficoms
test
cli
jl
ljmp
repnz
xchg
adc
pop
jo
sbb
mov
xchg
ljmp
std
repz
inc
ljmp
xor
rorb
clc
push
test
push
xor
xor
pop
inc
add
mov
jp
pop
lock
jmp
ss
push
jae
dec
lods
dec
jno
arpl
test
and
mov
xchg
sbbl
repnz
lods
out
out
add
test
hlt
enter
mov
mov
fbld
sbb
insl
jne
sbb
loop
popa
pop
xchg
std
and
lret
cs
pop
pop
dec
in
test
adc
jg
xchg
dec
popl
sub
and
mov
scas
push
dec
sub
xor
pushf
push
int3
aaa
sub
aas
call
jl
push
xor
clc
es
xor
ret
push
test
cmp
add
fsts
into
mov
mov
mov
loope
inc
addl
jbe
adc
push
subl
add
mov
clc
pop
orl
lcall
fcomps
mov
pop
leave
scas
aam
jo
jmp
inc
pop
add
sbb
dec
sbb
pop
in
mov
mov
sbb
shl
loopne
and
out
pop
ljmp
hlt
dec
fnstcw
push
fdivr
pop
mov
xchg
jae
inc
in
fadd
jbe
ja
fists
dec
xchg
test
int3
mov
shrb
push
je
sub
iret
imul
add
sub
fistl
daa
sub
lods
push
or
stc
sub
or
pop
or
into
xchg
js
adcb
pop
aaa
and
aaa
nop
cltd
lcall
lock
mov
sahf
dec
imul
orl
inc
out
cld
call
test
pop
or
gs
sub
arpl
pop
xlat
popa
mov
fmul
jns
cmp
sub
testl
cmc
inc
ljmp
inc
cmpsl
nop
add
and
push
dec
xor
mov
sbb
or
int3
mov
mov
in
xchg
lret
mov
jmp
gs
inc
shlb
rcrb
loop
jp
push
mov
and
or
dec
rolb
gs
outsl
pop
outsb
xchg
pop
adc
dec
push
lahf
jnp
movsb
and
callw
xor
loopne
and
xchg
decl
sbb
jge
dec
popf
addr16
rep
push
push
and
daa
pop
test
jmp
mov
inc
pop
ret
jno
movsb
jp
jbe
cmp
das
lret
add
cmpsl
shr
adc
push
push
push
inc
lock
mov
and
inc
in
jmp
fidivl
je
pushl
das
cmpsb
cmp
pusha
rcrb
pop
dec
and
jno
or
out
pusha
loope
add
insl
push
push
lret
jp
mov
sub
jg
in
jl
sti
xchg
jle
decb
out
pop
popf
push
gs
daa
push
addr16
mov
jmp
mov
jbe
dec
stos
mov
lret
repz
sbb
lahf
sti
jmp
push
push
jle
adc
jb
cmp
in
and
ja
mov
out
insb
xchg
xchg
lds
dec
mov
xchg
outsb
repz
out
push
lcall
push
rclb
enter
fs
repz
mov
mov
jmp
jge
lcall
mov
pushf
fmulp
out
push
pop
push
in
out
mov
cs
jne
xchg
in
sahf
mov
sbb
mov
add
mov
dec
inc
mov
sbb
into
and
add
mov
int
mov
or
push
mov
mov
and
inc
dec
adc
stc
mov
clc
sbb
sbb
sahf
cmp
xchg
inc
sbb
adc
adc
fisubl
imul
jnp
mov
xor
mov
test
pop
iret
pop
lea
rol
sahf
mov
sub
ret
adc
fwait
dec
jns
shll
movsb
rorb
sbb
insl
lret
jmp
pop
stc
dec
cmp
leave
fstps
ret
push
fisubrl
mov
cmp
mov
pop
inc
and
nop
sub
cmp
int3
insb
testl
mov
loope
or
loop
xchg
inc
movb
fmulp
pop
stc
cwtl
enter
jne
in
xchg
sbb
mov
out
shll
cmp
push
call
outsl
inc
mov
add
aaa
jle
mov
sub
cmp
jge
lods
mov
jl
xchg
jp
mov
addl
faddl
sub
mov
jbe
sbb
pop
fwait
test
push
lds
in
dec
dec
mov
mov
push
xor
lock
sub
mov
das
int
out
cmp
mov
stc
dec
dec
scas
dec
cli
adc
shrl
rcll
es
xchg
pusha
test
in
mov
dec
pop
je
mov
inc
dec
add
sub
loope
pop
inc
cmp
xor
insl
xor
shlb
add
ret
and
bound
rol
sbb
and
xlat
dec
mov
outsb
jp
cld
ja
inc
cs
fsubr
sub
dec
cmp
jns
lea
inc
add
mov
jae
sub
adc
addb
push
mov
and
xor
int
jp
movsb
stos
cltd
les
inc
sbbl
aam
out
test
push
mov
out
mov
icebp
je
adc
pop
push
je
lock
xchg
push
mov
icebp
xor
jns
push
sub
insl
lcall
jbe
stos
jmp
leave
repz
lock
jno
loop
mov
test
in
cmp
jp,pt
in
pop
jmp
nop
cltd
shlb
jmp
cltd
ss
addr16
in
mov
out
jb
add
add
mov
pop
jle
pop
lock
movsl
repnz
das
mov
mov
mov
scas
out
negb
icebp
fdivs
cmpsl
or
fdivr
xchg
dec
mov
mov
push
jne
enter
das
sub
imul
adc
jmp
pushl
insb
dec
mov
xor
ljmp
xor
sbbl
adc
andb
pop
inc
mov
into
jg
sub
xchg
jb
and
mov
lods
enter
lret
scas
push
push
pusha
mov
inc
cwtl
mov
cmp
add
into
aam
jmp
adc
in
fwait
cli
mov
lods
inc
jmp
or
sar
pop
or
les
add
idivl
cmp
data16
push
dec
cli
jae
dec
mov
out
jbe
repz
fldt
mov
adc
jmp
mov
loop
dec
pop
add
xchg
cli
divb
pop
into
movsl
icebp
cmp
mov
mov
mull
aam
pushf
mov
push
dec
dec
inc
test
adc
ds
mov
xor
pop
mov
cli
and
mov
mov
pushf
mov
call
cli
loope
mov
sbb
add
and
pushf
xor
mov
xchg
and
sbb
sub
xchg
jl
cmpsl
xchg
dec
jno
xor
pop
mov
loopne
lods
or
fisubrl
in
cltd
aas
fdivrs
mov
stos
pushf
add
pop
jp
sub
test
push
lahf
sbb
sub
xlat
jae
pop
inc
sbbl
jg
out
or
fxtract
sub
or
pop
aad
enter
and
xchg
mov
jb
les
int3
xor
pop
dec
ja
fsubs
fs
adc
cwtl
xchg
repz
cld
bound
imul
mov
mov
xor
pushf
or
and
push
sub
loop
or
jle
lahf
mov
sub
or
inc
xchg
mov
pushf
lcall
cmp
sti
xchg
inc
ficoml
dec
in
mov
shr
outsl
imul
pop
inc
out
mov
fsubr
jl
cld
push
sbb
fs
movsb
dec
xor
xor
stos
lahf
mull
sbb
je
in
push
jnp
xlat
andl
aam
mov
out
mov
cmp
jle
xchg
push
add
repz
xchg
ss
lea
call
in
lea
mov
insl
and
bound
popa
or
inc
mov
sbb
mov
adc
push
cld
jb
fbstp
out
iret
xor
push
out
sbb
or
cmpsl
push
and
cmp
mov
sbb
cmp
iret
sub
jl
adc
cmp
add
adc
popa
repnz
std
jo
sbb
ja
outsb
jmp
mov
imul
fmull
and
lcall
mov
push
mov
rol
mov
sub
sub
cmp
xor
dec
jle
incb
or
test
push
arpl
sti
lock
lahf
hlt
mov
xchg
pusha
imul
sbb
mov
sbb
and
push
sbb
sbb
loopne
cld
mov
xor
fnstcw
mov
int
xchg
jno
daa
add
sti
pop
xchg
and
pushf
rolb
mov
cmpsl
mov
fadds
push
fwait
das
int3
mov
add
mov
cmp
jg
xlat
cli
in
mov
cld
inc
push
leave
sbb
std
pop
fldl2t
mov
divb
fistpll
lods
arpl
loop
ljmp
gs
add
sbb
mov
mov
or
sub
inc
jb
imul
dec
add
insb
mov
imul
adc
cmc
out
test
enter
dec
lahf
int
call
lcall
inc
mov
inc
and
push
imul
int
adc
insl
and
adc
aas
pop
in
movl
test
xor
xor
loop
int
pop
ja
xbegin
push
add
int3
stos
outsb
out
rorl
pop
mov
push
mov
sbb
mov
dec
cs
dec
xchg
mov
mov
daa
inc
mov
cmp
pushf
ss
jno
pusha
jp
cmc
add
sub
xor
jae
sub
xlat
addb
xor
sub
frstor
lds
ss
xor
xlat
cmp
sti
xor
movb
sbb
inc
ljmp
pop
je
mov
inc
cmp
push
bnd
inc
and
in
cmp
add
mov
adc
rorl
or
imul
add
jae
aaa
clc
aam
jp
add
aad
mov
lock
das
loope
nop
pop
dec
sub
out
in
pop
add
pop
shld
out
sbbl
xchg
and
arpl
mov
lods
cld
add
push
jp
out
data16
adc
cli
push
jnp
frstor
jmp
pop
and
fstl
in
dec
dec
xchg
add
mov
fbld
in
add
je
ds
divb
das
popf
fabs
lods
imul
xchg
cs
iret
inc
fsubs
outsl
add
jnp
mov
mov
adcb
insb
pop
jae
or
xor
cmp
aas
xchg
inc
mov
ja
pop
fcomps
adc
scas
cmpsl
push
and
xchg
push
enter
cmp
jo
iret
jnp
xchg
roll
lret
out
lods
pop
mov
push
mov
cmpsl
or
inc
test
jmp
sbb
or
or
loopne
ret
stos
add
fsubrs
icebp
xor
xor
or
les
or
in
insl
mov
fistpl
sti
sbb
push
sbb
xchg
or
push
jno
push
adc
fcoml
inc
or
or
cltd
ss
test
aam
or
out
pop
jae
bound
mov
mov
push
xchg
xchg
ret
mov
out
and
mov
add
sbb
jge
jmp
dec
cmp
pop
inc
fdivs
and
bound
push
in
dec
pop
and
enter
adc
inc
insb
push
aaa
call
mov
sbb
in
sbb
in
or
outsl
xor
out
add
or
loop
xchg
aam
or
rorl
xor
in
out
xchg
xchg
mov
lock
out
mov
pop
inc
xchg
xor
jns
and
insl
add
inc
jg
mov
cmp
ret
sbb
test
lret
je
cmpsl
jne
mov
xor
out
aam
icebp
xor
lods
and
movsl
cld
mov
lock
in
adc
loope
test
xchg
rcr
testb
sbb
sub
mov
sti
mov
clc
push
add
mov
push
cmp
mov
out
adc
xlat
test
pop
push
rep
addr16
shlb
lods
push
mov
jnp
lea
dec
push
aam
int
add
leave
push
adc
sbb
loope
repnz
mov
mov
jae
movsl
cmpsb
imul
sub
das
push
sbb
insl
xchg
fisubs
fsubs
inc
arpl
mov
jbe
leave
jae
out
hlt
aad
push
mov
gs
arpl
dec
aam
pop
jnp
shl
adc
xchg
test
push
mov
out
aad
sti
fiaddl
shll
call
data16
or
test
mov
jge
lahf
cmp
mov
inc
mov
pop
mov
mov
fildl
mov
dec
data16
les
daa
sbb
inc
mov
cmp
push
test
imul
out
sahf
mov
enter
sahf
nop
rolb
jge
push
stos
mov
orl
adc
es
popf
lret
push
jne
xor
cmc
fld
adc
daa
clc
imul
sarb
sub
push
aam
push
and
jge
inc
jg
fiaddl
stc
ds
scas
xlat
jmp
pop
mov
je
and
pop
pop
cmp
xchg
or
sub
mov
mov
mov
push
xchg
sub
daa
js
bound
xor
daa
push
push
mov
jle
insl
xor
icebp
jae
sub
out
and
rolb
xchg
or
pop
jp
push
mov
movl
ds
cmp
adc
idiv
lods
dec
movsb
cmp
clc
in
push
leave
cmp
mov
aad
mov
inc
shl
push
les
in
mov
jae
mov
sti
fildl
ret
fisttps
pop
adcb
push
cmc
xor
add
adc
aaa
jnp
add
je
mov
cli
inc
mov
mov
and
mov
cmp
aad
jbe
mov
scas
cmp
jbe
push
fwait
ds
repz
add
dec
jmp
mov
push
push
mov
mov
stos
arpl
cli
and
dec
call
loop
cmp
daa
adc
insb
inc
push
jecxz
pop
adcl
inc
mulb
sbb
rcrb
lods
add
inc
jb
mov
loopne
imul
ss
and
cmp
movsb
ljmp
jecxz
insb
loopne
js
or
xchg
sarb
jg
dec
ja
jne
rol
dec
sub
mov
mov
sbb
push
std
xlat
iret
bt
outsl
pop
lret
dec
xchg
lcall
sbb
aam
lret
ret
mov
insb
or
jb
push
or
lock
add
dec
or
fstl
ds
dec
jg
xchg
xchg
and
xchg
mov
rcr
push
movsl
stos
inc
jns
decl
xchg
mov
pop
pushf
xor
adc
inc
and
aad
rcr
rclb
fcomps
cmpsb
outsl
push
test
pop
sbb
mov
mov
mov
xor
out
ficomps
cmpsl
pop
mov
es
in
mov
push
pushf
nop
ret
sub
pop
lea
out
js
popf
mov
in
adc
mov
jmp
sub
jno
sub
cmp
repnz
out
lret
push
sahf
mov
xor
loopne
and
cmc
stos
or
sbb
in
push
dec
stc
push
and
inc
fwait
and
xchg
leave
sbb
les
and
or
mov
mov
jp
cs
aas
and
out
out
cmp
lock
movsb
iret
stos
btr
test
jnp
insl
xchg
mov
jle
xor
ret
sahf
inc
lret
ret
addr16
or
out
xor
ret
imul
and
int3
rclb
xor
adc
pop
lods
inc
mov
adc
pop
sub
pusha
popa
pushf
clc
hlt
push
daa
mov
mov
out
xor
lods
push
sub
inc
cmpsb
xor
sub
push
jae
sbb
daa
push
lret
cs
and
popa
sub
or
cmpsl
push
rorb
ret
cmp
aam
jnp
js
or
std
push
sub
ja
jnp
popf
push
inc
jle
fldcw
cmpsb
or
movsl
popf
adc
adc
repz
test
cmpsl
lcall
in
sahf
into
jl
imulb
or
in
xor
push
push
push
mov
int3
cmp
ss
adc
jle
les
out
jmp
outsl
test
jnp
adc
push
push
test
stos
lods
fisttpll
jl
test
mov
dec
inc
mull
inc
jle
add
aam
or
outsl
lea
mov
adc
jmp
push
sub
push
mov
dec
dec
or
mov
sbb
mov
mov
sub
push
test
jl
adc
mov
lea
jge
int
xchg
inc
mov
aad
push
mov
popa
cmp
inc
movsl
or
out
dec
test
out
sub
outsb
xor
repnz
sub
add
mov
fmul
xchg
mov
out
push
mov
jne
mov
pusha
jmp
pop
push
out
in
lds
sbb
cs
pop
mov
mov
and
sahf
cmp
pop
popf
js
pop
add
bound
fcoms
gs
cmp
cmp
or
out
sbb
shlb
inc
jnp
test
dec
mov
push
sbb
js
mov
js
adc
pop
int
fst
sarl
mov
push
dec
fimuls
out
add
inc
inc
fwait
pop
insb
int3
into
and
sub
xchg
cmc
bound
sarb
stos
int
movsl
push
ljmp
push
mov
mov
mov
call
es
jo
pop
std
pcmpeqd
dec
loopne
ror
imul
fcoms
pop
add
cmp
aam
and
jbe
scas
adcb
jae
or
add
xchg
arpl
and
in
mov
xchg
in
movsl
int
cmpb
movsl
dec
pushf
shll
and
or
xchg
push
insl
shrb
xor
arpl
test
outsl
mov
xlat
out
data16
push
dec
sbb
pop
call
push
test
pop
or
mov
or
sbb
jg
jge
dec
sahf
sub
lods
sbb
jne
ds
das
bound
cwtl
pop
ja,pn
and
pushf
repnz
sbb
mov
mov
sbb
das
loopne,pn
ja
mov
jnp
inc
adc
mov
xchg
mov
mull
mov
test
scas
push
sbbl
lahf
subb
mov
sahf
mov
push
mov
push
pop
and
jne
mov
adc
aaa
out
dec
sbb
mov
clc
in
cltd
push
inc
push
aaa
out
or
push
lock
cltd
bound
das
cmpsb
sub
repz
mov
shlb
cltd
out
jg
ret
daa
or
sbb
mov
repz
or
push
push
cmp
popa
je
xchg
pop
test
xchg
xchg
daa
push
rclb
out
ret
mov
dec
jecxz
lock
sbb
outsb
lret
xor
cwtl
mov
cmpsb
cmp
fiaddl
daa
outsb
pop
or
mov
clc
xor
jmp
sarb
outsl
sub
call
sbb
and
push
push
push
in
sub
addb
ja
mov
push
inc
inc
and
mov
pop
pop
repz
dec
add
or
int
fs
mov
and
fxam
sbb
lret
jae
pop
shll
adc
jns
in
jp
xchg
lds
sub
ror
ficomps
lds
lds
push
fisttps
mov
jg
hlt
addr16
dec
out
pop
mov
adc
add
cltd
fimuls
inc
out
inc
mov
aad
adc
shl
out
loope
cs
jmp
add
int3
add
call
out
loopne
fs
ss
aaa
adc
push
or
inc
aaa
mov
mov
gs
push
mov
dec
sbbl
mov
ja
gs
adc
pop
xchg
cmp
adc
cld
push
mov
pop
cli
je
xor
fdivrs
das
repnz
xchg
adc
xor
fnstenv
rolb
cmp
imul
cmp
push
add
push
in
mov
inc
sbb
xor
imul
jmp
popf
xchg
cmp
jno
push
fs
pop
in
loopne
pop
jne
push
cmp
sahf
daa
mov
inc
fsts
addl
jbe
xchg
aaa
out
ljmp
xchg
imul
sbb
pop
sahf
jo
mov
repnz
push
dec
push
push
aas
insl
negl
les
jp
dec
and
loop
shl
cmp
sbb
inc
mov
xchg
push
mov
subl
push
pop
pop
adc
cli
jae
mov
dec
dec
push
loop
mov
imul
mov
mov
jmp
test
jb
dec
addr16
cld
mov
mov
test
cmp
add
cmp
out
adcb
cmp
sbb
out
dec
dec
js
ja
ss
sbb
xor
mov
mov
jo
aaa
inc
dec
imul
lret
imul
icebp
pushf
mov
mov
mov
jb
xor
mov
or
sti
cmc
or
push
cwtl
pop
and
sbb
mov
data16
in
and
mov
and
int3
lea
sahf
push
dec
dec
xor
mov
in
push
test
aaa
sbb
out
ret
loop
jne
cwtl
mov
xor
push
fadd
mov
jb
cmp
pop
insb
sbb
pop
and
lcall
jb
adc
lcall
pop
cltd
push
mov
sti
adc
imul
ds
cltd
cmpsl
xor
lods
and
mulb
in
nop
add
test
add
sti
sbb
pop
scas
push
mov
or
adc
pop
or
loope
mov
movsb
and
les
or
and
popf
int
sub
test
add
leave
and
ret
mov
or
or
dec
xchg
mov
dec
mov
gs
sub
pop
insl
addl
jbe
mov
into
push
ret
pop
adc
cmp
and
ljmp
outsl
test
jbe
dec
popa
hlt
out
call
scas
mov
imul
repnz
sub
movsb
loop
and
cld
sti
shl
mov
imul
ss
stos
mov
lock
fistl
jne
lret
adc
jns
push
adc
vpmuludq
cltd
xchg
mov
mov
rolb
aaa
scas
inc
imul
into
cmpsl
and
mov
mov
inc
mov
lods
add
cmp
popa
dec
cld
icebp
test
fcoml
jle
push
arpl
call
mov
js
cmp
popf
pop
adc
adc
shl
cmp
adc
cmp
sbb
sahf
add
or
xor
push
test
lret
adc
jecxz
jns
push
inc
gs
and
fiadds
sub
int
sarb
leave
test
pop
mov
clc
inc
pop
mov
pop
and
jg
dec
arpl
ljmp
out
sbb
ja
jp
jge
dec
std
mov
insb
dec
mov
sub
daa
outsl
and
push
mov
pop
pop
cmpsl
fdivrs
aaa
inc
iret
arpl
jno
data16
xchg
dec
pop
dec
jbe
shll
shrl
lret
jns
rcrb
sahf
int
call
jb
and
test
lret
bound
lea
sbb
aam
pushf
pop
dec
aas
add
push
cmpsb
jne
add
sbb
mov
mov
or
adc
sub
jle
fdiv
mov
cmpsl
pop
jo
stos
inc
mov
pop
mov
repz
into
sub
cmp
mov
das
pop
pushf
aad
cmp
add
mov
insl
aad
xlat
or
adc
aad
andl
add
dec
lock
lea
pop
xor
fwait
push
sub
mov
push
outsl
push
sahf
fmull
or
mov
push
fldt
cmp
or
idivl
adc
or
inc
push
js
sbb
and
inc
pop
int
or
ret
jle
pop
mov
test
ret
jmp
jmp
xor
cmpl
std
repnz
ja
out
call
mov
bnd
jg
fwait
push
push
or
jle
inc
pushf
pusha
cwtl
xchg
jmp
jnp
idiv
call
sbb
gs
lcall
xor
mov
inc
xor
rolb
in
add
das
fcomps
cli
nop
out
xchg
fldl
pop
mov
and
test
lahf
repnz
adc
mov
int3
idiv
shlb
lret
dec
mov
lahf
mov
fildl
pop
insb
scas
push
icebp
mov
mov
or
jmp
xchg
scas
outsl
sbb
clc
mov
int3
pop
fimull
pop
lds
add
mov
pop
andl
jge
jg
scas
push
clc
xor
xor
ds
sti
insl
lds
push
loopne
xor
fiadds
iret
pop
aad
jns
pop
loop
push
in
les
add
ret
outsl
add
sub
push
or
push
negl
push
or
cmp
mov
loopne
sbb
rol
xlat
sti
or
xchg
dec
xchg
out
js
je
mov
mov
aad
lret
imul
add
jle
push
jbe
ds
mov
repz
add
xchg
lcall
and
or
inc
mov
in
jp
movsl
sub
adc
stc
pop
cld
test
out
and
daa
ficomps
push
sub
xchg
push
divb
sarl
dec
cmpsl
and
sub
scas
fisubrs
stc
cmpsb
pop
sbbb
inc
or
and
xchg
nop
jae
mov
inc
jmp
aam
aam
fucomip
xchg
popf
adc
push
xchg
arpl
fmulp
sub
or
aaa
add
gs
push
aaa
mov
lret
jno
loopne
in
cmp
stc
cmp
jmp
dec
pop
jp
shr
in
or
push
or
jecxz
adc
push
or
lock
test
jb
adc
and
outsb
mov
cmp
jg
push
inc
outsl
and
dec
jno
lods
inc
sub
cmp
inc
in
repz
loope
jo
lcall
ds
imul
push
aaa
lods
sbb
icebp
push
and
cmc
sbb
jae
call
sbb
test
push
repnz
out
mov
lret
jecxz
cli
mov
mov
inc
ret
pop
mov
cmpsl
enter
xchg
fnstcw
jne
mov
mov
xor
fwait
mov
ljmp
xchg
int
adc
iret
mov
dec
mov
adc
jns
pop
outsl
aad
pop
scas
push
push
cs
in
cmp
inc
cmp
pushf
inc
adc
sbbb
test
test
add
leave
nop
ficompl
add
lahf
cmp
jmp
outsl
orb
push
movsb
test
mov
and
out
loope
pushf
jae
mov
adc
sub
push
cmp
mov
cmovne
mov
adc
popl
popf
popf
aaa
inc
cmc
pusha
movsb
outsb
inc
and
jge
loop
cmpsl
mov
lock
rorb
dec
jb
or
out
int
mov
gs
and
mov
sub
insb
pushaw
movsb
jle
and
cmpsb
adc
add
in
js
lods
addr16
jo
mov
push
adc
adc
sbb
sbb
jne
pop
insb
mov
fs
aam
data16
ret
xchg
pop
pop
xchg
das
cmpsb
or
xor
lret
imul
ret
mov
mov
in
dec
mov
les
push
fsubr
or
sarb
pop
xchg
inc
xchg
inc
push
pop
ret
leave
clc
aam
sub
out
rcrb
addr16
xchg
or
sbb
mov
cmpsb
and
je
and
iret
les
push
rclb
sub
xchg
in
rsm
lcall
lds
fistpl
or
sub
movsl
mov
in
lock
pop
xchg
cmp
stos
fnstcw
shll
clc
sub
sbb
dec
popa
cmp
jle
sub
or
in
mov
call
xchg
fldenv
mov
jbe
fstl
cs
es
xchg
shlb
sahf
flds
cwtl
out
out
and
cmp
movsl
les
xor
mov
lea
sbb
das
push
fwait
ret
std
xchg
stc
xchg
cmc
mov
xor
mov
out
ret
movsl
test
add
ljmp
sub
inc
and
stos
mov
ret
xchg
mov
fistps
mov
gs
insl
cmp
and
mov
mov
mov
adc
push
mov
test
lret
sarb
dec
sub
sbb
mov
mov
mov
lods
out
pop
out
jge
xchg
and
test
cmp
lcall
popf
xchg
xchg
and
ret
add
sub
subl
jne
ljmp
clc
lea
cmpsb
mov
jmp
push
jae
lods
in
add
mov
cmp
movsl
jge
jl
add
pop
pop
xchg
jge
jmp
sti
bndldx
dec
cmp
insb
jnp
ficompl
lds
jo
dec
mov
xor
pushf
mov
lods
fdivl
test
stc
and
jns
xor
mov
stos
jne
mov
gs
jne
pusha
or
fwait
mov
rcll
xorl
movsl
push
or
pop
and
stos
or
in
cmp
in
gs
or
fcoml
ss
in
outsb
sti
shlb
imul
push
xor
popl
cli
and
lret
mov
mov
dec
je
das
outsb
or
mov
cli
aad
and
test
insl
gs
xchg
mov
pop
mov
add
cs
pop
and
lret
jo
mov
in
jns
add
inc
jle
dec
out
ss
sbb
push
sbb
xor
pop
addr16
mov
pusha
out
test
mov
lret
cmp
cld
ja
lea
sarl
pop
mov
idiv
jne
mov
jg
lock
mov
decl
add
xlat
push
or
jns
add
cltd
lds
dec
shrl
into
jnp
xchg
popa
aas
incl
cmpl
jl
jnp
adc
sarl
mov
insl
lret
jmp
call
repnz
mov
xor
inc
popf
scas
movl
lcall
out
aam
scas
in
movsb
xor
cmp
mov
xor
xor
aam
xchg
fdivrs
mov
add
adc
test
stos
ret
mov
movsl
sub
lods
stos
push
and
orl
xor
lods
in
pusha
dec
pop
pop
jno
push
in
imul
sub
movsl
jle
push
add
or
push
or
aad
or
subb
roll
cmp
shrl
loop
cli
xor
pop
pusha
xor
push
stos
jno
ljmp
inc
rcrl
jo,pt
scas
es
addl
ficoml
adc
cmc
add
or
lahf
xor
in
cwtl
dec
sbb
add
in
xchg
andl
clc
out
scas
bound
push
xchg
out
fimuls
mov
sub
hlt
nop
dec
shll
mov
jmp
cmp
dec
add
lock
jnp
push
cmp
sub
movsb
push
or
testl
push
dec
xor
dec
pop
sbb
lahf
test
rep
lahf
ss
je
pop
popa
in
push
lods
pop
out
or
push
hlt
cld
das
cs
cmpsb
int3
lea
orl
mov
add
int3
clc
sbbb
pop
push
pushf
in
push
pushf
xchg
int
ljmp
mov
inc
xor
insl
or
add
jp,pt
cmc
xlat
jo
mov
stos
xchg
and
in
ficomps
inc
lret
lds
punpckhbw
test
and
mov
mov
or
mov
sbb
mov
sub
push
aad
jns
stos
popf
lcall
test
push
sbb
stos
jo
sub
dec
jns
sub
add
shlb
lcall
push
sahf
inc
dec
loopne
cmp
fcompl
sub
jo
mov
dec
bound
xor
sbb
daa
in
add
jae
lods
mov
into
push
xchg
push
lret
pop
call
loopne
nop
std
add
sbb
orl
int
mov
shl
jno
sbb
js
pop
icebp
xchg
sbb
jmp
jmp
in
cmp
jo
mov
leave
cmpsl
ret
adc
rcrb
sahf
mov
bound
sbb
fs
sbb
jbe
push
xchg
lods
inc
out
mov
dec
ds
cmp
xchg
jne
push
push
add
xchg
and
xor
pop
mov
pop
inc
dec
dec
out
push
imul
out
ret
add
mov
xchg
lahf
or
xor
inc
xor
ljmp
sbb
sbb
ss
jbe
pop
into
aam
xor
xor
movsl
mov
gs
out
ret
cmp
fildl
fmull
sbb
adcl
lds
mov
mov
imul
xchg
push
xor
rclb
bound
test
aad
into
ss
push
xor
iret
sahf
xor
sbb
or
test
mov
mov
xchg
clc
xchg
in
fistl
jl
mov
adc
push
ja
and
sub
adc
aad
cmp
inc
pop
stos
stos
push
lds
gs
adc
test
repnz
pop
test
mov
adc
or
xor
adc
dec
cmp
mov
mov
dec
or
inc
adc
in
jecxz
fisubl
and
add
jno
les
or
or
push
push
cwtl
xor
pop
xchg
scas
cwtl
pop
hlt
iret
xchg
cs
stc
imul
pusha
mov
lcall
dec
cmp
jge
mov
push
xchg
flds
ret
insl
aad
push
mul
loope
push
mov
dec
jmp
mov
and
adc
pop
pusha
dec
mov
push
pop
ja
shlb
out
and
sub
or
mov
stc
pop
mov
aad
cmp
mov
cli
test
mov
negl
adc
cmc
div
mov
sub
icebp
or
push
js
incb
jecxz
punpcklwd
push
mov
test
push
loope
cwtl
loope
mov
data16
outsb
repnz
testl
push
and
sbb
nop
imul
cmpsb
fcompl
xchg
sbb
data16
adc
dec
popf
popa
imul
xlat
gs
pop
add
lret
push
cwtl
sub
push
jb
dec
push
std
or
inc
fidivrs
in
jbe
outsb
jg
push
adc
push
ja
cmpl
jo
jne
add
sub
hlt
aam
adc
inc
xchg
inc
jo
cmpsl
cmp
mov
pop
inc
rorb
or
mov
cmp
nop
sub
loope
and
loopne
sbb
outsb
sub
cmp
xor
leave
sbb
inc
sbb
int
mov
or
je
shrl
and
mov
rclb
and
xchg
mov
addr16
popa
dec
and
cli
xchg
insl
mov
add
adc
jae
in
gs
jbe
orl
push
xor
add
mov
jmp
test
inc
cs
lods
xchg
xor
mov
imul
push
lock
push
or
push
les
loopne
hlt
lea
and
fistpll
mov
xchg
out
pop
pop
stos
cmp
ret
loop
pop
int3
out
js
int3
lea
mov
loopne
jg
enter
dec
push
fidivrl
jne
adc
faddl
pop
mov
fisubrl
mov
addr16
stc
mov
adc
adc
jle,pn
int
leave
mov
dec
mov
add
sti
sbb
seta
aas
sub
cltd
and
out
dec
repnz
push
inc
ret
sbb
jg
sbb
mov
adc
les
sbb
push
sbb
cmp
jmp
mov
call
rorb
and
movsl
jbe
push
test
in
sahf
lret
adc
sarl
scas
es
test
mov
xchg
sbbb
pop
data16
cmpsl
scas
xor
fs
icebp
mov
xor
mov
adc
dec
pushf
xchg
add
lods
rcrl
jbe
rcll
inc
jae
popf
dec
dec
imull
xor
push
lds
sbb
push
rorl
and
sahf
daa
testl
fs
cmp
xor
andb
push
cli
dec
dec
ss
jmp
cltd
stc
addl
and
mov
call
js
dec
cwtl
sub
mov
aaa
call
dec
icebp
dec
js
clc
lea
add
jb
xchg
push
push
cmp
std
mov
cmc
jns
idivb
or
xchg
out
sbb
mov
insb
sarb
or
jbe
pop
daa
in
jo
xor
dec
rclb
movsl
lods
mov
mov
outsl
iret
lods
mov
pop
jae
scas
cmp
add
xor
pusha
push
aam
dec
mov
jnp
xchg
push
cmc
adc
xor
aad
stc
mov
fstps
jp
xchg
in
imul
push
insl
and
lods
bound
or
iret
or
or
fcomi
xor
sub
sahf
mov
dec
dec
scas
call
out
setl
outsb
add
xchg
xchg
dec
inc
inc
mov
leave
sbb
js
movb
mov
sbbb
ret
jge
xor
cwtl
mov
jmp
js
fs
and
mov
ds
or
call
call
mov
movsl
negb
into
orl
ret
fisttpll
insb
jp
out
dec
pop
movsl
or
push
ss
xor
loopne
mov
jecxz
mov
jb
sbb
shlb
jbe
push
and
icebp
pushf
xchg
pop
cltd
pop
fxch
sbb
das
sub
sub
jno
mov
inc
out
loopne
testl
daa
mov
popa
pop
stos
pusha
mov
inc
xor
aam
getsec
sbb
icebp
pop
sbb
inc
inc
mov
dec
test
add
push
stos
sbb
sahf
xor
hlt
jo
push
sub
mov
imul
fcoms
inc
outsl
push
pop
push
jne
mov
stos
dec
xchg
cmpsl
or
gs
and
test
pop
sub
addr16
adc
les
lret
jge
xlat
lock
mov
aaa
mov
jl
bound
pushf
xchg
push
sub
in
lds
fstpl
gs
xchg
and
iret
adc
bound
sub
fldl
popa
cwtl
push
cmp
out
xchg
xchg
dec
pop
cs
dec
mov
adc
icebp
xlat
sub
aaa
push
fisubrs
rcrl
mov
ret
sub
fistl
mov
stos
add
xchg
jle
mov
mov
dec
pop
pcmpgtw
mov
addb
jge
in
dec
sbb
test
repnz
out
cwtl
xchg
push
sbb
jns
hlt
xchg
outsb
sbb
mov
xor
movsb
pop
test
cld
dec
sahf
add
outsl
data16
daa
push
cmpsb
dec
popa
je
dec
xchg
jae
sahf
inc
mov
add
dec
ljmp
mov
add
push
mov
cmpsl
mov
add
out
pusha
dec
push
jb
xlat
test
jo
stos
pop
and
imul
mov
lcall
adc
sti
xchg
stos
fnstsw
ficomps
push
adc
lcall
vmwrite
add
jl
push
push
mov
out
push
sbb
mov
das
and
jo
test
cmpl
adc
lods
push
ficoml
cmp
clc
ss
enter
call
and
mov
dec
dec
dec
or
mov
and
mov
cmp
cltd
jmp
fldcw
xchg
rcrl
mov
inc
inc
pop
inc
fcmovu
rorb
sbb
fldt
popa
pop
dec
push
inc
cli
jne
mov
gs
jns
jl
addr16
dec
cmp
fisubrs
xor
jp
cmp
sbb
pop
inc
dec
adc
enter
mov
ret
sub
movsl
xor
idiv
mov
sub
add
adc
andl
dec
sbb
movsl
out
add
pop
movsb
mov
adc
dec
mov
mov
mov
push
sub
sbbb
pop
or
add
push
mov
xor
or
dec
out
jecxz
cld
mov
push
jg
sbb
lcall
lcall
add
mov
xchg
xchg
pop
rclb
cltd
xchg
mov
mov
push
sar
out
jae
cmc
sub
inc
cwtl
rcll
adc
push
js
iret
rol
pop
inc
pop
fwait
dec
xchg
jmp
xchg
int
mov
stc
insl
push
xchg
jno
out
mov
jecxz
or
fwait
xlat
cltd
xchg
inc
les
dec
dec
fcomi
pop
cmp
sar
imul
fidivl
xchg
jle
sbb
inc
sub
jo
jp
rcl
mov
xorl
fistps
adcl
jo
daa
pop
push
push
sub
or
lcall
pop
push
xchg
iret
lret
inc
jbe
clc
inc
inc
xlat
pop
lds
jne
xchg
test
lods
inc
rcrl
das
sahf
fsubs
add
shll
add
pop
clc
xor
inc
cmc
mov
cld
test
push
lret
ret
fiadds
call
xchg
dec
pop
push
lcall
jbe
mov
imul
inc
fbld
cmp
lret
pop
ficoms
lock
cli
sbb
add
hlt
loop
loop
imul
push
push
add
in
pop
jecxz
in
cmc
lea
adc
aad
pop
adc
inc
sub
mov
es
mov
and
mov
scas
loop
les
addl
jno
repz
pop
int3
or
push
int
jnp
push
iret
adcb
imul
mov
mov
ret
or
sub
xlat
mov
jle
bound
lods
sub
jp
rcr
psubb
mov
pop
dec
hlt
push
xor
mov
jle
mov
ret
repz
out
cmp
data16
mov
pop
loope
fcomps
mov
push
and
leave
mov
mov
xchg
lods
rcrb
aas
mov
sar
jl
jns
outsl
ss
push
or
cmpsb
loop
lods
in
inc
sbb
and
pop
jl
stc
and
mov
enter
cmpsl
jmp
lds
xchg
inc
cmpsb
sub
stos
or
mov
dec
sbbb
add
nop
sub
jo
movsb
out
das
into
cmpsl
sub
add
add
or
adc
add
adc
cmp
pmulhuw
ret
mov
push
aam
mulb
mov
shlb
pop
cld
int3
sub
adc
aam
sbb
rolb
pusha
sub
mov
mov
notl
shll
aas
add
stos
imul
pusha
repnz
lods
out
stos
call
xor
repz
shl
add
mov
push
sub
lock
pop
fs
add
insl
mov
stos
pusha
xor
repz
jno
mov
sub
inc
ret
ds
inc
into
dec
xchg
xchg
clc
fs
ljmp
leave
adc
cwtl
adc
mov
inc
xor
fsubl
in
mov
jae
and
mov
js
cld
and
push
inc
jg
sbb
in
pop
ret
loope
sbb
bound
xchg
adc
sub
movsb
fistps
mov
dec
cmc
xchg
ret
cs
jne
dec
add
add
inc
gs
fisubl
aad
in
test
lcall
notl
adc
jo
out
or
adc
iret
sub
mov
pop
xor
jne
xchg
mov
mov
xor
jge
loope
add
push
push
repz
cmp
pop
mov
push
push
stos
push
xchg
and
test
cmpsb
sub
adc
xchg
sahf
int
cli
and
adc
inc
std
fimuls
push
lods
scas
inc
in
stos
and
sub
pusha
daa
adc
dec
or
xorb
nop
or
dec
jnp
dec
outsl
sti
push
icebp
ret
mov
pop
rorb
loop
xchg
jl
dec
or
pop
incl
call
mov
xchg
jp
pusha
or
in
jmp
in
xchg
in
or
push
gs
sbb
out
ret
enter
ret
jl
push
les
icebp
cmpsb
movsl
popa
jnp
fcompl
test
outsb
dec
imul
orb
pop
es
insb
cld
stos
inc
xchg
dec
jmp
jbe
mov
xchg
adc
sub
cltd
jmp
or
jg
arpl
cmp
and
movsb
out
or
pop
insb
in
and
inc
out
sarb
push
pop
shrl
fdivr
fcomi
lock
xchg
mov
xchg
push
ja
mov
xor
sbb
fistpll
jno
mov
sub
lret
cmp
stc
xchg
test
aam
mov
loopne
mov
and
repz
int
jmp
in
adc
bound
inc
or
push
mov
mov
jnp
pop
mov
int3
xor
xchg
add
cltd
je
mov
cs
mov
inc
rdpmc
imul
push
fcoms
cmpsb
ficoms
sub
aas
jl
aad
sahf
jge,pt
lret
mov
and
stos
into
cmp
xor
or
leave
loop
add
ds
mov
pop
stc
loope
jp
lcall
jnp
repnz
sub
add
iret
lret
push
add
out
lock
cmpsb
dec
daa
mov
xchg
iret
mov
push
mov
and
repnz
aam
shl
test
idiv
pop
jecxz
rorl
sub
push
mov
test
push
div
sbbb
xchg
lds
loope
sub
testl
mov
pop
fs
dec
inc
xor
xchg
repnz
jmp
xchg
dec
push
sti
push
movsl
jb
adc
daa
out
cwtl
ret
sub
mov
add
jp
je
cwtl
test
cmc
adc
hlt
ja
loopne
fdivrp
sbb
fsubrl
aaa
push
jno
sbb
fimull
inc
cmp
roll
jp
test
mov
fsubs
push
ret
xchg
lret
dec
mov
adc
adc
out
or
out
outsb
push
imul
adc
sub
mov
in
sub
xor
xchg
xor
rorb
push
int3
and
inc
pop
push
rorl
jmp
mov
jmp
sbb
xchg
add
or
xchg
pop
mov
adc
mov
pop
xor
xchg
stos
bound
cltd
inc
sbb
dec
cmpsl
sbb
mov
pop
cmp
xchg
ljmp
mov
jge
mov
scas
jle
nop
aad
loop
inc
push
icebp
cmc
outsb
sub
rcl
or
jle
ds
cmp
scas
jb
add
cmp
and
sbb
sbb
and
mov
adcl
mov
mov
pop
pop
mov
out
mov
lcall
mov
addl
add
subb
jne
int
jecxz
jle
es
loope
xorb
sbb
xchg
mov
sysenter
mov
fwait
pop
insb
incb
lret
and
mov
or
enter
enter
insb
xor
pop
pop
je
pop
lods
faddp
ret
mov
cmc
test
sub
push
out
or
xlat
mov
mov
mov
int
xlat
jo
mov
sbb
stos
cltd
jl
inc
mov
mov
out
xor
hlt
stos
lahf
pop
test
mov
xchg
mov
test
adc
call
lods
roll
mov
mov
inc
jp
or
xorl
mov
lods
dec
mov
inc
addl
out
in
cld
add
loopne
sti
pop
cli
lock
xchg
pop
dec
enter
jne
push
dec
lret
cmp
loop
mov
xchg
inc
dec
and
test
insl
sti
sti
out
int
mov
fidivs
andb
pop
leave
lret
inc
jnp
and
fstps
test
cmp
push
notb
push
mov
adc
push
pop
popa
repz
sbb
lea
xlat
dec
push
stos
enter
pop
jb
mov
adc
jg
adc
mov
out
or
and
stos
inc
mov
cld
or
mov
aas
loope
enter
dec
cld
fsubl
je
mov
cltd
js
adcl
roll
xor
xchg
push
xor
dec
mov
xor
mov
jno
adc
clc
std
sbb
insb
adc
jmp
cmpb
imul
je
les
repz
add
aam
sub
sbbb
mov
loope
lret
mov
xchg
aas
cmp
xor
sti
push
and
cmp
daa
and
push
push
clc
pop
test
outsb
aad
scas
pop
movsb
pop
scas
loop
call
xchg
int
data16
xchg
cmpsl
jbe
push
cmp
or
incb
sbb
popa
mov
popa
cltd
jmp
xchg
rcrb
in
xchg
les
int3
push
insl
cmpb
in
loope
in
lret
outsb
push
jo
js
scas
push
jp
and
movsl
cmp
mov
outsl
mov
fsqrt
dec
insb
mov
jmp
mov
popa
cmp
mov
fildl
pop
fwait
sub
pop
test
lret
xor
xchg
insb
fs
rclb
popa
xchg
lods
pop
xlat
repz
int3
fmull
mov
adc
add
or
icebp
dec
xchg
insb
mov
xchg
cwtl
outsl
int3
lods
fdivrl
or
in
mov
push
loopne
call
pushf
sub
or
insl
mov
pop
insb
mov
daa
in
pop
pop
adc
xor
or
out
subb
out
scas
fcmove
xchg
jl
jno
sbb
int3
stos
addr16
fcomip
je
imull
insl
jle
xor
xchg
out
enter
je
test
mov
aas
and
xlat
ss
jbe
cmp
mov
ret
dec
inc
xor
mov
dec
sub
sbb
jae
ret
jb
jg
or
fsubrs
scas
mov
cmp
fcoms
aaa
test
xor
test
imul
pusha
dec
les
rcll
push
scas
mov
and
mov
inc
or
imul
adc
add
insb
jnp
or
and
lods
mov
add
xchg
cmc
fwait
push
or
loopne
mov
inc
test
mov
std
std
sub
in
lock
test
jne
jo
lea
or
das
cmp
add
cmp
test
sub
fucomp
mov
loopne
adc
fcomps
das
out
mov
ret
fs
cmp
cmc
int
out
dec
push
sbb
mov
pop
popa
es
adc
or
xchg
add
xchg
imul
and
insl
les
pop
pop
pusha
cmp
cld
dec
add
stos
cs
mov
std
and
jno
xor
xor
into
lds
jo
sbb
scas
adc
jmp
hlt
inc
mov
mov
clc
xchg
adc
xor
cmp
sbb
rorl
mov
jae
cli
jl
leave
sub
mov
mov
stos
outsb
aam
xor
aam
lods
push
mov
inc
mov
imul
cwtl
cld
sti
jnp
cli
push
ret
aam
int
mov
jecxz
dec
mov
out
dec
insl
test
sbb
fcmovu
in
pop
les
or
int3
call
mov
in
inc
and
lds
es
inc
stc
in
cmp
inc
notl
stc
int
outsb
outsl
xchg
jecxz
adc
dec
xchg
push
pushf
ds
cmp
scas
push
mov
adc
insl
pop
in
xor
mov
shll
and
lock
aad
jecxz
frstor
out
adc
in
xor
inc
jbe
xchg
inc
and
sbb
loop
jl
je
push
jno
mov
mov
inc
imul
mov
pop
lds
test
shl
jae
fcoms
iret
jmp
or
dec
cmp
gs
sbb
cltd
push
inc
jb
pop
incl
dec
dec
repnz
xchg
icebp
fs
dec
pop
mov
sub
fidivrs
xchg
cmp
mov
into
pop
mov
pop
xor
sub
push
cmp
inc
pushf
add
cltd
loop
popa
mov
xor
adc
and
lods
push
cmpl
movsb
clc
or
xchg
add
push
test
scas
dec
repz
adc
ret
mov
dec
test
xor
cmpsb
mov
mov
call
cmp
jb
daa
xor
pop
pop
loop
jge
inc
adc
and
test
dec
sub
mov
ret
loopne
pop
sub
mov
imul
dec
cmpsl
repz
les
jecxz
gs
loop
iret
aaa
push
cltd
addr16
daa
mov
lret
cmp
xor
push
sub
bound
inc
pop
jb
loope
imul
xchg
sub
nop
in
inc
js
mov
xchg
adc
mov
mov
pop
je
sbb
inc
xchg
dec
shlb
in
in
adc
popf
std
jle
cs
test
dec
mov
jl
dec
and
loop
add
jp
shll
imul
loopne
in
scas
test
add
ljmp
lods
out
fwait
call
das
pop
cmc
sub
jl
inc
pop
fisubrs
bound
sub
jle
iret
icebp
shll
push
inc
popf
mov
ret
imul
loopne
out
loop
xchg
lds
mov
mov
add
loope
popa
cmp
lods
hlt
mov
sbb
jnp
sub
test
push
ror
in
cwtl
cmp
dec
xor
sub
mov
xchg
jb
cli
enter
ja
inc
aad
add
loopne
inc
jns
jge
xor
enter
inc
jae,pt
mov
fstpt
ja
sbb
js
fcoms
scas
sti
sub
out
xchg
das
xor
inc
pop
fimuls
shl
cmp
inc
addr16
push
inc
and
das
lret
in
push
js
mov
push
pop
mov
and
mov
xor
mov
adc
stos
nop
roll
mov
dec
popf
ja
sub
sbb
cwtl
mov
ljmp
jl
lret
mov
push
es
xchg
repnz
dec
call
pop
jb
sub
mov
jp
jp
push
cmc
cmp
sub
jl
in
xchg
push
hlt
mov
xchg
scas
or
incl
lahf
mov
insl
popf
mov
cltd
pop
fnstcw
ljmp
jbe
adc
sbb
pop
test
ljmp
jp
js
pop
lods
adc
adc
repnz
lds
popa
stos
insl
lock
adc
or
lcall
das
aam
fidivs
ss
dec
sbb
aas
push
test
stos
repnz
inc
push
push
jb
scas
dec
push
ss
aas
sbb
and
push
xchg
pop
popf
sbb
fistps
cld
adc
jmp
push
push
jle
loop
outsb
test
cmp
push
mov
lret
inc
sarb
into
inc
mov
and
mov
mov
cmp
out
sbb
push
xor
xor
cmp
adc
outsl
inc
dec
loope
mov
stos
pop
mulb
dec
adc
into
cmp
push
imul
jle
and
adc
sarl
in
fwait
mov
inc
xchg
mov
jl
xchg
testb
xor
jnp
std
fildll
push
jp
sti
mov
jg
int
dec
pop
xlat
fwait
cld
test
lahf
ljmp
xor
adc
xor
add
dec
dec
cwtl
dec
sbb
lahf
cmp
scas
mov
insl
push
mov
sarl
stos
cmc
enter
mov
fmuls
stc
fisubl
clc
aam
dec
mov
push
jg
pop
out
in
add
inc
xor
sub
stos
sar
jno
push
jnp
jp
out
xchg
sbbl
daa
jp
jp
mov
fldcw
std
dec
outsl
std
test
and
push
jle
repz
and
ret
movsl
pushf
inc
jp
add
stc
rolb
frstpm(287
xor
jp
scas
popa
mov
and
jmp
xor
shlb
ss
loope
cmpsl
bound
mov
pop
mov
mov
adc
push
fadds
imul
movsb
fildll
add
sub
lds
sbb
addr16
ret
xchg
xor
insb
adc
daa
pop
mov
mov
bound
push
pop
roll
sub
xchg
push
jne
sbb
cmc
fwait
ret
mov
and
in
push
clc
xor
in
scas
add
push
test
stos
mov
and
jae
sub
cmp
scas
repz
popf
and
xorb
fs
incb
jle
pop
xchg
push
push
nop
mov
cwtl
mov
popa
out
jg
stos
pop
fidivrs
lret
mov
cmp
xorl
test
dec
loope
mov
inc
xor
test
ficomps
cwtl
inc
xor
xchg
leave
aam
orb
orl
or
xor
xor
add
push
add
stos
xchg
ja
cmpsl
mov
mov
cli
es
cltd
pop
inc
mov
std
dec
lahf
mov
lahf
mov
inc
insl
rcl
cwtl
imulb
sub
or
jo
gs
cmpsb
mov
lcall
push
cs
ss
shlb
mov
cmpsl
sarl
push
jg
aad
pop
aaa
cld
fiadds
jge
sbb
dec
in
ljmp
nop
imul
fwait
icebp
je
dec
rcrl
nop
and
pop
push
cmpsl
or
dec
imul
sbb
mov
jns
outsl
cmp
xor
adc
sbb
rolb
aas
dec
test
pop
jecxz
sbbb
mov
mov
mov
arpl
subb
push
je
negl
or
jle
shll
push
cwtl
enter
inc
or
rcll
icebp
outsl
popa
cmpsb
and
mulb
mov
dec
stos
daa
jb
mov
lods
fdivrl
cli
pop
stos
pop
cld
cmp
in
stos
mov
ss
test
mov
lock
adc
add
push
dec
sub
or
cmp
sub
popf
repnz
orl
sbb
cld
call
jmp
xchg
ficomps
movsl
out
pop
rorb
jbe
inc
lock
js
aad
pop
rcrl
adc
aas
inc
addr16
add
pop
sub
jno
xchg
pop
push
xor
repnz
push
in
mov
imul
pop
adc
ret
dec
aaa
mov
ljmp
mov
scas
mov
jp
fs
fs
inc
sbb
jns
psllw
cld
pop
fldenv
shl
iret
ds
cmp
out
push
dec
dec
test
addb
arpl
push
faddl
ljmp
and
or
jge
mov
mov
in
in
movb
lods
mov
insb
jecxz
jne
pop
and
icebp
jae
int
ror
inc
sarl
or
push
iret
call
mov
lret
mov
sti
lret
dec
fcmovu
mov
pusha
pop
out
adc
insl
mov
inc
enter
fiadds
add
sbb
rorl
cs
std
xlat
in
outsl
loopne
test
add
mov
imul
inc
inc
and
dec
shrl
adcl
or
lret
in
adc
xor
push
lods
mov
mov
aam
xor
add
xchg
pop
cmpsb
mov
pop
mov
pop
xor
test
ds
fwait
jbe
pop
in
jne
xor
popa
pop
add
pop
sub
add
dec
mov
ljmp
jnp
mov
and
out
dec
movsb
lods
subl
inc
popa
nop
jae
dec
push
mov
inc
in
push
inc
pop
xor
hlt
xor
adc
add
mov
jecxz
add
inc
push
ret
into
jnp
imul
loopne
inc
pusha
jge
mov
jecxz
outsb
lret
push
pop
sbb
mov
cmc
sarl
insl
bound
jne
lea
jecxz
into
fidivrs
and
aas
inc
mov
add
dec
inc
mov
adc
cld
aaa
cmpsb
sbb
inc
ja
xchg
pop
xchg
lcall
mov
cs
fstps
out
inc
xor
repnz
movsl
and
or
xorl
xchg
test
mov
add
aam
aaa
enter
bswap
and
popa
rolb
inc
jae
mov
mov
push
cli
lcall
loopne
dec
clc
int3
data16
ficoml
inc
jmp
flds
rcrl
in
jne
shll
add
xchg
xor
stc
sub
fldenv
movsb
xor
xor
out
loope
lahf
in
insb
call
mov
xor
dec
fneni(8087
cmp
push
ret
cmp
outsb
jno
xchg
mov
push
and
mov
mov
push
cmp
mov
jge
and
mov
sbb
mov
mov
push
aam
imul
pop
aas
pop
or
aas
sbb
cmp
push
shr
cmp
or
jno
stc
mov
inc
int
ret
mov
cltd
test
repnz
fistpl
or
xlat
sbb
lock
xchg
dec
fwait
mov
xor
lcall
ret
mov
jbe
and
push
and
adc
inc
lret
out
mov
cmp
push
dec
and
sahf
insb
cmp
test
lods
jge
mov
push
pop
fnstcw
lock
jecxz
mov
cs
cltd
out
and
jne
lods
mov
jge
insb
daa
aaa
mov
scas
loopne
inc
jno
mov
mov
cmc
jno
shlb
xlat
adc
pop
in
mov
sub
out
jno
mov
adc
ret
xor
xchg
mov
pop
sbb
add
xchg
jmp
fcoms
pop
icebp
mov
aaa
push
add
dec
cmpb
dec
mov
testl
cmp
jmp
mov
fmuls
cs
test
pop
xor
ret
xchg
ret
testb
push
insb
imul
push
lret
xor
mov
inc
lock
pop
insb
mov
out
dec
cmp
sub
outsl
int
xchg
xchg
pushf
xor
xchg
mov
aas
inc
lcall
add
sub
repz
lods
jns
inc
sub
and
das
inc
mov
jns
jb
lock
fildl
cmp
fdivs
mov
bound
push
xor
enter
or
shlb
popf
and
jmp
and
ja
xor
jno
xor
int3
ret
test
push
sub
mov
sbb
pop
mov
pop
xchg
and
add
stos
call
lret
std
mov
ja
in
xchg
int3
fidivrl
pop
jmp
dec
push
inc
or
sub
xchg
mov
inc
call
or
mov
mov
fsubs
outsl
adc
ret
xchg
add
mov
xor
les
push
jbe
notl
jecxz
xor
inc
and
mov
pop
jne
fmull
pop
and
stos
outsb
sbb
test
and
repz
mov
sbb
lahf
test
scas
test
aad
and
add
sub
insl
xchg
pop
mov
jg
or
xor
shl
xchg
sub
and
and
xor
xchg
adc
nop
scas
iret
mov
xchg
inc
sti
and
inc
jo
and
mov
scas
lock
aas
cmp
push
mov
mov
mov
jmp
mov
adc
subb
hlt
sbb
rcll
gs
in
inc
sbb
dec
fcmove
lods
push
mov
imull
in
sbb
pop
stc
add
mov
scas
ret
jne
jno
addr16
enter
sub
mov
xchg
cmpsl
cld
push
gs
inc
inc
jle
rorl
push
cwtl
and
mul
fisubrs
push
lea
xor
fcomps
sbb
das
xor
or
ror
push
mov
or
xchg
out
mov
les
push
inc
fwait
add
mov
stos
addr16
fisubs
sub
xchg
aad
movsb
jns
lea
sbb
mov
mov
or
mov
enter
sub
std
mov
mov
pop
bound
std
adc
xchg
lahf
mov
push
arpl
or
xor
mov
mov
cmp
sub
cmp
pop
add
lret
mov
mov
jmp
sub
out
cvttps2pi
test
mov
push
fsubp
jnp
dec
push
shll
sub
dec
cmp
fs
mov
call
clc
rolb
push
sub
mov
and
or
inc
js
test
fildl
rorl
push
daa
into
cmp
shll
aad
popf
dec
ror
loop
sbb
enter
hlt
cmp
pop
xchg
xorb
mov
or
rcr
xchg
nop
imul
jmp
aas
lods
sti
pop
mov
mov
xor
rcrb
inc
pushf
sbbl
adc
jnp
int3
js
test
aaa
sbb
push
les
pop
push
int3
mov
mov
jge
gs
shrb
shlb
out
fs
xor
fsub
push
hlt
popf
push
xor
dec
popf
xor
inc
inc
imull
mov
daa
adc
lea
adc
rclb
push
sub
push
shll
jp
jo
mov
or
fisttps
int3
outsl
ljmp
outsl
dec
push
nop
imul
push
mov
sub
repz
and
jne
adc
xchg
movsb
cmpsb
adc
inc
iret
bound
sbb
insb
aas
xchg
scas
jbe
sbb
sbb
test
bound
out
cli
sbb
sbbl
xchg
mov
shrb
mov
or
mov
daa
jb,pn
mov
pop
sub
shll
out
sbb
sbb
rclb
popf
or
and
aad
aad
or
push
jge
or
sbb
mov
popf
ds
cld
lods
outsb
cmp
pop
pavgb
jl
jecxz
push
pop
pop
out
test
mov
or
imul
lock
nop
mov
setae
xchg
out
ljmp
imul
or
inc
or
repnz
mov
negl
push
cld
mov
test
push
push
push
loope
movsl
sbb
testb
cmpsb
xor
jmp
pop
sahf
popa
ja
pop
adc
scas
sub
mov
es
dec
sub
or
push
in
and
ret
mov
cwtl
movsl
das
mov
cmpsb
lahf
ss
ficompl
outsb
out
xchg
out
lock
ss
push
dec
in
leave
push
icebp
cmp
push
pop
fistps
sbb
shll
gs
sbb
xor
and
mov
xor
add
jl
mov
dec
cmc
inc
jo
push
out
sarl
mov
unpckhps
int3
into
scas
sbb
xchg
pushf
push
and
adc
jl
mov
xor
pop
dec
mov
cli
and
add
ret
addb
cld
imul
jle
jno
fwait
pop
or
test
fs
cmp
jae
and
insl
loope
in
push
fdivrl
lods
loop
push
stos
in
imull
pop
addr16
iret
pop
mov
mov
cmpsl
cwtl
mov
cmc
cmp
push
cmp
sub
pop
sbb
aam
and
lds
int
jno
mov
inc
push
inc
mov
xchg
hlt
xor
addl
push
mov
ret
mov
divl
jge
movsl
imul
ss
mov
or
rcl
into
sbb
sub
popf
das
cmp
test
mov
jecxz
add
repz
pop
jbe
push
int3
inc
fbld
pusha
inc
adcl
outsb
pop
in
inc
add
nop
or
xor
mov
and
cmp
stos
sub
jbe
mov
push
push
icebp
mov
fwait
insb
or
mov
and
lods
loope
sbb
xlat
fadds
cmpsb
fwait
in
push
out
pop
loope
js
cmpsl
lret
mov
sbb
xor
cmp
enter
pop
jno
mov
pusha
daa
pop
and
jmp
sbbb
pop
pop
test
jl
push
dec
lret
in
and
push
mov
js
dec
ficoml
adc
sti
cmp
dec
fmuls
pusha
int
andb
jge
sbb
test
and
push
out
hlt
pop
test
or
sbb
dec
loope
jmp
icebp
cmp
adc
sbb
cmpsb
sub
stc
jns
mov
repnz
fildl
stos
pop
enter
xor
cld
jg
xchg
test
xchg
subl
mov
mov
mov
jmp
jne
test
aaa
add
scas
pop
imul
cmp
fdivl
and
mov
add
mov
jmp
das
push
ret
insl
push
xchg
test
andb
jmp
and
lcall
add
inc
mov
ss
sub
push
stos
push
xor
xor
sub
cmp
add
scas
or
mov
outsb
clc
xchg
inc
mov
pop
and
dec
mov
js
call
lcall
flds
mov
clc
mov
mov
mov
stos
pop
push
pop
cli
push
jbe
jno
pop
mov
inc
mov
mov
daa
hlt
adc
adc
pusha
cmp
gs
jmp
add
fisubs
add
xlat
sbb
ds
mov
enter
ds
std
xchg
adc
shlb
jmp
push
cld
mov
or
jmp
cmpsb
mov
inc
jo
nop
jo
pushf
shrl
adc
mov
pusha
sbb
fwait
sub
ss
xchg
push
lods
inc
stc
hlt
cmc
xor
mov
mov
and
mov
addl
ret
xchg
mov
subl
call
popa
sbb
movsl
fsubrl
adc
and
mov
and
mov
int3
inc
push
jo
sbb
and
cmp
add
ret
mov
xor
inc
sub
mov
or
jl
xchg
cltd
js
sub
jae
fsubs
in
fwait
jns
ljmp
xchg
mov
repnz
int
fwait
sbb
imul
shl
fisttps
lret
mov
outsl
daa
scas
adc
in
cmpsb
dec
sahf
int
push
inc
sub
bound
inc
mov
arpl
xor
adc
pop
cmpb
or
dec
cmc
push
test
les
ficompl
stos
mov
movsb
add
pop
inc
hlt
sbb
gs
int3
push
push
pop
mov
cwtl
xchg
stos
sub
fnstenv
jecxz
sub
or
push
or
pop
jp
lods
imulb
repnz
xchg
nop
cmpsl
inc
into
movsb
icebp
xchg
adc
icebp
add
mov
js
jg
ret
sbb
out
jp
sbbb
lahf
xchg
cmp
idivl
jns
mov
pusha
pop
jb
aad
iret
adc
fadds
mov
sub
call
jg
and
sbb
push
add
mov
mov
sbb
cmp
decb
sbb
lret
jno
xor
pop
andb
sub
sub
cld
cmp
cmp
sbb
adc
cltd
jnp
xchg
add
sub
mov
or
add
int
data16
mov
mov
mov
and
push
ljmp
jmp
or
xlat
mov
xor
test
sarl
lock
add
xor
mov
lcall
mov
cmpsb
push
sbb
clc
inc
xor
jns
push
xlat
xor
out
lret
repz
nop
xor
sti
pop
pop
in
jmp
sbb
mov
shll
shlb
mov
xlat
rsm
pop
aad
mov
jno
mov
jmp
das
jle
dec
pop
or
sti
out
leave
pop
xchg
out
mov
stc
out
lods
and
xor
mov
in
loope
sub
cmpsb
xchg
sub
dec
cmp
push
ret
sbb
xor
mov
xlat
lahf
fbstp
mov
scas
dec
pusha
push
gs
pop
push
xor
and
shl
and
fs
gs
andb
add
movsb
sub
nop
jno
mov
jecxz
sar
xchg
and
cmpb
or
xor
cmc
dec
add
sub
add
inc
dec
sub
dec
repz
aad
xchg
addb
scas
leave
mov
and
fldenv
cvtdq2ps
cltd
in
xor
jmp
shlb
lds
push
inc
mov
sub
jmp
test
sarb
xlat
adc
dec
dec
mov
jge
mov
ds
sti
sbb
and
lods
fsubr
xchg
mov
aas
xchg
mov
repnz
mov
test
mov
pop
js
sbb
jecxz
jmp
shr
rclb
push
lea
fsubs
imul
mov
mov
xor
sub
mov
inc
scas
mov
inc
xchg
xor
insl
mov
mov
sti
lods
stc
popf
mov
add
les
push
lret
sub
popf
cld
mov
jns
mov
or
xchg
adcb
lods
xor
sbb
pop
in
mov
pop
das
jo
inc
stos
imul
and
and
jbe
pusha
or
cmp
push
jecxz
xor
test
add
jge
lsl
sbb
add
xor
adc
popa
jb
icebp
dec
mov
addr16
and
es
dec
pop
scas
sbb
cmc
adc
sub
dec
mov
into
push
aas
add
mov
mov
inc
push
out
jmp
adc
in
push
and
dec
out
pusha
sbb
outsb
pop
nop
dec
in
test
pop
fdecstp
shll
dec
das
add
push
mov
cltd
sub
lods
and
stos
inc
lock
push
inc
xchg
push
inc
aaa
ret
icebp
lahf
not
repz
test
cwtl
cmp
clc
inc
push
push
rolb
fwait
inc
fidivrs
mov
in
daa
arpl
out
jle
dec
jns
mul
xor
aam
call
ss
jmp
pop
es
int3
add
lea
faddl
rcl
xchg
jle
adc
add
loope
loopne
mov
dec
mov
adc
pusha
leave
xchg
xchg
mov
je
imul
xlat
jmp
stos
sub
jecxz
fldcw
xchg
insb
push
je
sub
xor
jmp
mov
movsl
xor
mov
filds
insb
mov
push
push
jecxz
aam
pop
xchg
test
xchg
xchg
push
lcall
mov
int3
imul
ljmp
stc
cmp
mov
xchg
fistpl
mov
and
daa
xor
out
mov
arpl
sub
add
inc
hlt
cmc
cmc
icebp
outsl
xor
or
and
push
sub
popf
or
cmp
ffree
data16
jno
mov
and
int
stos
lcall
je
ret
inc
into
mov
imul
xor
shrl
addr16
sbbl
nop
in
jl
push
pop
mov
push
jae
stos
sub
mov
sub
call
sarb
push
jp
test
aad
mov
mov
leave
loopne
aam
jb
push
mov
sub
push
xorb
mov
mov
adc
push
stos
xlat
adc
fistl
dec
cwtl
adc
out
cld
mov
movsb
xor
lret
icebp
fxtract
inc
sub
cmpsl
call
and
lret
pop
call
aas
jno
out
jge
in
lods
mov
aad
out
sbb
add
icebp
xchg
cmp
jge
dec
jb
push
inc
jae
mov
leave
push
mov
cmp
insb
outsl
mov
pop
arpl
sub
push
and
nop
loopne
sub
xchg
sbb
xchg
add
pop
dec
or
adc
mov
jno
inc
xor
mov
setne
fs
aas
mov
push
sbb
adc
jo
jge
mov
out
cmc
out
fstps
out
sbbb
rolb
push
rclb
pop
sti
shlb
fdivr
xchg
out
xchg
pop
popl
mov
jae
mov
inc
mov
adc
mov
int
jbe
jp
sbbl
outsb
iret
inc
int
jae
cmpsl
cmp
push
imul
loopne
push
outsb
lods
pop
cmp
ss
dec
cs
mov
dec
cmpsl
cmp
out
orl
sbb
pop
stc
std
sbb
test
jecxz
add
xlat
and
xchg
outsb
sub
popl
sbb
ficoml
xchg
dec
cmp
jo
adc
push
inc
out
imul
ds
or
clc
xor
xchg
cmp
cmp
cli
xor
xor
mov
loopne
lahf
hlt
pop
jnp
pop
ret
int3
mov
and
addl
add
imul
das
in
mov
dec
cmpsb
inc
dec
loopne
xchg
test
lret
jne
rcll
mov
stos
push
loop
lret
aas
loopne
imul
xor
test
jne
mov
jl
call
or
test
xor
aam
in
push
pop
push
aas
push
pop
enter
sub
sbbb
rcll
js
cmp
imul
fcmovu
lcall
sub
sub
fnstenv
pop
mov
sbb
xor
dec
jne
jb
adc
xor
insb
lcall
pop
cmpb
sub
repz
xor
out
mov
gs
jg
mov
push
imul
fisubrl
test
dec
xchg
or
pop
arpl
out
test
test
lods
add
outsb
inc
into
arpl
pop
lods
or
inc
cs
cli
pop
xchg
testl
or
ret
hlt
or
pop
adc
mov
repnz
xchg
sbb
nop
mov
jle
in
push
adcl
leave
mov
repnz
add
pop
inc
sbbb
sarb
in
popa
xor
mov
aaa
add
pop
ret
js
bound
ja
push
daa
popf
fiaddl
add
xchg
sbb
xor
rorb
arpl
das
pop
lcall
inc
in
sub
sbb
inc
shr
test
jne
loop
outsb
insl
sub
mov
mov
or
repz
mov
mov
cwtl
int
mov
xor
push
push
ret
lret
push
out
rorl
push
rcl
shll
mov
ja
enter
das
mov
mov
add
std
xor
adc
pop
dec
in
in
cmp
inc
outsb
mov
icebp
out
adc
jle
cmp
xchg
and
lcall
mov
iret
lret
add
jae
mov
jp
push
sarb
ret
push
sub
xor
movsb
fidivl
mov
fcomp
movb
mov
sub
jp
sar
pop
outsb
xlat
ret
mov
xor
enter
pop
or
mov
adc
mov
sub
out
pop
cmp
mov
dec
and
jmp
pushf
insb
and
aaa
dec
adc
lahf
mov
fldcw
ret
push
pop
xchg
xchg
daa
or
cmc
fsubrs
test
fucomip
out
out
leave
scas
ja,pt
loope
lea
cmp
insl
inc
into
sti
outsb
mov
adc
mov
xchg
sbb
pop
xchg
test
scas
xor
hlt
jmp
pusha
loopne
pop
loop
js
sbb
mov
sub
mov
xor
out
shll
cmp
and
out
fcoml
jge
jp
shr
xor
nop
lret
adc
xor
arpl
xor
dec
pop
lods
test
xor
pop
inc
arpl
jp
leave
and
loop
ds
sub
pop
imull
xchg
lahf
outsb
adc
test
sbb
xchg
int3
mov
in
stos
and
ret
sahf
mov
pusha
out
fsub
or
out
xor
dec
insb
ja
cmp
xchg
pop
movsb
or
push
outsl
lock
jne
insb
mov
push
and
das
pop
data16
mov
and
ffree
test
stos
stos
jne
mov
fdivr
jmp
push
lcall
lret
lock
xor
mov
pop
sahf
adc
test
mov
int3
mov
ret
cmp
fimuls
stos
jnp
clc
sub
xor
idivb
mov
stos
test
lods
out
cld
cmpsl
rorl
ljmp
aaa
inc
add
fstps
mov
add
push
add
mov
dec
aad
sarl
and
je
pop
sbbb
hlt
pop
shll
cmpsb
divl
je
lea
ds
cmpsl
and
loopne
ljmp
testb
lret
inc
pop
lods
aad
jne
pop
aaa
sub
fldcw
push
rorl
ss
daa
adc
push
mov
out
fs
ds
xchg
and
sbb
in
rcrb
pushf
or
bound
in
mov
cli
das
jno
nop
sbb
push
inc
adc
xchg
add
aaa
cmpsl
push
inc
jl
xor
pop
inc
movb
pop
das
push
and
sub
mov
out
cmp
push
mov
xchg
inc
call
clc
push
cmp
out
push
jl
daa
or
mov
mov
insl
faddp
sbb
mov
cmpb
aaa
sub
push
dec
add
stos
jp
mov
add
xor
inc
mov
sbb
push
ret
and
sub
jne
and
xchg
cld
xchg
cmp
sbb
jnp
dec
cs
ror
lds
xchg
cltd
jne
out
outsb
mov
aam
sub
movl
lahf
hlt
insb
dec
push
lds
and
aas
inc
lock
repz
pop
xor
ffreep
enter
push
data16
inc
scas
mov
cwtl
or
testb
ljmp
mov
push
fdivrl
jmp
xor
cwtl
xor
add
sbb
int3
or
in
cld
out
mov
movsl
popf
int
push
scas
ss
xchg
push
cmpsl
push
in
inc
pop
mov
or
jle
cwtl
popa
jae
push
push
or
push
cmp
nop
push
cld
jnp
test
ret
addr16
mov
and
push
add
test
mov
fidivs
scas
out
call
out
test
push
js
das
into
fnstenv
ja
sbb
shlb
mov
sub
push
sbb
stos
push
sbb
iret
rcrb
sub
pop
pop
mov
pusha
outsb
iret
pop
mov
add
push
aam
xor
cmp
push
cmpsb
inc
fadd
jecxz
faddl
dec
jns
imulb
loop
mov
movl
out
mov
shl
aaa
mov
cmp
xor
xchg
sbb
dec
push
cmp
rolb
inc
xlat
ljmp
sbb
mov
in
jns
lret
jmp
fdivrl
and
stos
mov
pop
mov
lcall
cmp
jbe
push
mov
mov
andb
xchg
jmp
and
xchg
andl
test
and
je
mov
mov
mov
jae
test
subb
mov
aad
aaa
decb
jae
inc
stc
sub
das
sub
push
loope
enter
mov
push
js
lock
pop
xchg
loop
jae
lret
aas
push
mov
out
or
push
mov
or
dec
add
and
lcall
jns
jae
nop
and
test
lea
jno
rcl
sbbl
pop
sub
xchg
sbb
enter
rcl
mov
or
sti
idivb
adc
cmp
add
or
cvtps2pi
rclb
cli
in
lods
mov
cmp
cmp
out
insl
sarb
mov
movsb
jbe
sahf
pushf
lret
fdivrl
jne
pop
mov
xchg
lret
ja
and
xchg
mov
lock
push
sub
std
in
in
scas
out
lcall
pop
jae
scas
dec
pop
cmpl
test
arpl
std
repnz
aad
or
mov
fs
mov
pop
push
sarb
fstpt
xor
mov
cmpsb
inc
mov
or
mov
dec
aas
je
xor
dec
decb
mov
jb
out
cmp
sarb
push
out
mov
shll
ffreep
mov
insb
addr16
lcall
stos
inc
test
popf
fiaddl
ficoml
mov
fcomip
insl
imul
push
inc
pop
adc
dec
cvtpi2ps
sub
mov
test
jnp
sub
pop
int
mov
je
in
imul
jne
and
add
fcompl
jae
data16
push
arpl
movsl
iret
and
stos
pop
mov
sub
jmp
jge
xor
jmp
ljmp
and
hlt
icebp
movsl
sub
sub
mov
inc
dec
xor
xchg
mov
xchg
adc
pop
ja
imul
outsb
test
add
or
push
mov
push
push
cwtl
push
dec
mov
and
dec
fsubr
xchg
jmp
fldenv
cld
mov
mov
ficomps
xor
js
int3
sbb
aam
outsl
icebp
popf
jae
es
mov
fistps
std
mov
xchg
push
xchg
out
mov
cwtl
roll
pop
or
mov
leave
mov
mov
jecxz
js
xchg
jne
cmpsl
mov
lret
xchg
xchg
andl
int3
mov
jns
shll
cmpsb
pop
add
popf
faddl
nop
das
sub
cmpsb
in
push
mov
xchg
adc
mov
stc
out
push
aam
push
or
adc
inc
jae
stc
fidivl
jnp
shl
mov
inc
out
push
sub
test
cmp
push
push
aad
xor
xchg
movsb
or
and
xlat
jg
push
sub
clc
sbb
xor
popa
xchg
out
push
mov
push
xlat
neg
mov
jae
inc
ss
sub
push
jp
call
fistpll
adc
dec
mov
fwait
stos
iret
or
sbb
mov
add
orb
and
jmp
push
pushf
adc
mov
repz
imul
rcl
cmc
leave
pop
mov
jge
fdivrs
rorl
loopne
jbe
jno
push
and
test
int
cmp
stos
pusha
dec
jp
and
mov
fidivl
inc
lods
push
frstor
add
xlat
ss
jecxz
out
inc
xchg
repnz
ss
sub
xlat
dec
or
jnp
call
dec
jo
sbb
push
sub
mov
cmpsb
add
push
bound
sarl
push
test
notl
fsubp
fwait
fwait
out
add
es
xchg
stos
push
xchg
pop
in
sahf
jb
sub
scas
sub
fimuls
jnp
push
push
bound
clc
xor
loope
lcall
loopne
std
iret
int3
stc
fs
sahf
pop
sub
fs
sti
sar
or
jo
dec
aad
xor
mov
cmpsl
fidivs
mov
inc
xor
repz
andnps
jae
cmp
xor
repz
push
scas
rcrl
mov
call
mov
jg
mov
jns
sub
test
xlat
aaa
fwait
mov
mov
iret
push
popf
das
fisttps
push
xor
ds
in
sub
push
sbbb
xor
frstor
outsl
outsl
inc
in
xchg
mov
mov
pop
xor
jb
xchg
into
rcr
leave
pushf
and
outsl
testl
stos
jbe
fisttpll
push
sbb
lea
jnp
mov
add
mov
fcmovne
xor
stos
rorb
dec
fiaddl
mov
add
inc
loopne
rol
xchg
add
and
scas
add
fidivrs
test
jecxz
aam
loope
lret
add
shl
inc
push
push
lea
fisubrs
fisubl
dec
pop
daa
xchg
jp
xchg
dec
or
adc
cmp
pop
dec
lret
aas
mov
sbb
jle
or
insb
cli
sub
jbe
and
sbb
paddusb
sbbb
dec
xchg
mov
push
pushf
sbb
adc
mov
test
sub
mov
lret
cmpsl
insb
xchg
imul
les
lock
mov
out
fisttpl
lock
ja
mov
push
rcrb
adc
lock
and
mov
pop
cmp
sarb
test
inc
divb
nop
jle
push
in
jle
insl
addl
jge
xor
add
add
sub
inc
les
lods
clc
cmp
mov
test
dec
push
out
cmpb
lret
cmpsb
test
outsw
mov
cmp
sbb
test
inc
pop
fsubrs
mov
adc
adc
decl
xchg
test
sbb
or
cli
rclb
push
in
mov
xor
add
sub
push
xchg
sbb
cmp
dec
lods
lea
sub
pop
into
pop
lcall
fstpt
imul
or
mov
xor
es
fisttps
adc
js
adc
push
jecxz
jo
xchg
push
xor
movsl
orb
sub
jb
mov
mov
std
xchg
lods
call
mov
bound
lds
sub
pop
rcrb
sub
ja
or
jnp
cld
add
push
jo
mov
in
fists
rcr
xor
rcrl
fistps
pop
loop
sbb
jnp
xor
gs
jb
mov
insl
or
out
test
icebp
pop
shr
nop
out
mov
mov
push
adc
xor
movsb
hlt
dec
and
ror
cmpsb
pusha
xchg
sti
jp
leave
add
insb
fisttps
loope
mov
jl
arpl
jns
dec
cmp
fistl
sub
or
rorl
dec
cs
loope
stos
mov
pop
outsb
scas
cmc
mov
dec
adc
pop
mov
add
mov
pop
dec
xchg
xor
cmpsl
insb
xchg
mov
mov
sub
in
cmpsb
jns
hlt
rolb
mov
dec
mov
outsb
imul
mov
pop
outsb
mov
push
ja
adc
add
inc
pop
ss
cltd
out
clc
adc
jno
push
pop
sbb
push
xchg
xor
add
data16
cmp
rcl
mov
jae
lret
cmp
fcoml
xchg
scas
divl
xchg
or
mov
mov
fisttpl
mov
mov
pop
and
call
and
sbb
push
pushf
andb
mov
or
stos
rclb
xchg
notb
pop
in
inc
in
xchg
insb
mov
jbe
loope
mov
mov
rclb
jnp
rcll
pop
cmp
jl
jg
xchg
jb
leave
addr16
and
shlb
in
mov
cmp
or
inc
xor
movsb
add
push
icebp
jmp
lcall
mov
lea
pop
mov
cs
adc
ja
out
cli
xchg
pusha
jle
lods
add
or
into
mov
jb
mov
icebp
xor
aas
jp
incl
pop
sub
pop
gs
out
xchg
std
inc
and
sarl
fldenv
imul
addr16
sub
xor
and
jae
jmp
lds
mov
or
lods
pop
clc
dec
xchg
testl
dec
test
add
cmp
cmpsb
fists
sbb
pop
dec
add
adc
adc
sahf
and
scas
inc
imul
or
mov
sbb
jb
push
scas
pop
test
cmp
mov
pushf
cmp
xor
popf
ss
dec
mov
push
push
push
daa
sti
sbb
push
mov
mov
push
sahf
jmp
pop
sub
cwtl
or
push
int3
pop
and
add
xchg
pop
cmpsl
ds
sub
adc
adc
sarb
ljmp
jl
addr16
into
add
pop
add
inc
add
mov
sub
insl
xchg
push
jg
cmp
xchg
pusha
in
push
loop
rcll
ds
inc
jb
mov
adc
sahf
push
cmp
add
stc
in
filds
es
fmul
clc
xor
imul
inc
sub
clc
push
jne
jne
ret
jno
dec
loopne
dec
inc
outsl
testb
xchg
push
rclb
sbb
sti
jne
xor
xchg
hlt
outsb
add
subb
mov
push
daa
pop
xor
or
clc
inc
fstps
xchg
jns
cmpsb
lea
divl
add
loop
rorb
sbbl
or
pushf
popf
adc
fiadds
xchg
dec
mov
and
pop
mov
jno
into
or
mov
mov
and
out
fdivr
jae
mov
cmpsl
in
sub
cwtl
xchg
or
jno
shlb
sbb
mov
repnz
mov
fsubrs
or
std
fmul
jge
xor
xor
xor
pusha
or
and
inc
int3
movsl
dec
fidivrs
or
and
adc
das
lret
jno
xchg
sub
fldcw
sqrtss
sbb
into
and
out
dec
add
sbbl
jmp
xlat
adc
ret
inc
jp
std
lret
push
stos
stos
adcb
cmp
fwait
mov
mov
gs
cld
mulb
cs
stos
mov
mov
and
enter
pop
out
ja
inc
shlb
xchg
mov
imul
xchg
adc
mov
jle
fdivs
cs
jae
or
mov
xlat
jle
cmc
lcall
imul
rcl
bound
outsb
aam
fists
xchg
icebp
sub
pop
add
jo
loop
cmp
lret
stc
push
mov
nopl
inc
push
xlat
in
ljmp
fldt
shll
xchg
jle
and
cmp
fmul
pushf
adc
mov
mov
call
add
lods
xor
jae
movsb
sahf
jg
scas
dec
lahf
dec
mov
jns
jl
nop
stos
cmp
out
inc
mov
push
cmp
cmc
test
aas
gs
scas
scas
xor
jne
sbb
and
das
add
out
mov
lock
mov
hlt
dec
subb
ds
rcr
rcrl
push
sbb
imul
jne
rol
mov
jb
dec
int
sbb
aas
lahf
mov
jae
mov
std
push
mov
lock
cmp
push
ljmp
xchg
jns
cltd
cmpsb
dec
cli
inc
mov
pop
jle
fldcw
ror
pop
mov
imul
leave
stos
cld
daa
jo
push
push
cli
aam
dec
sub
xchg
shll
in
mov
mov
push
push
mov
pop
jecxz
ss
adc
push
stc
cmp
orl
sub
jecxz
adc
jno
lret
scas
sbbb
and
gs
inc
fwait
xor
add
pop
cmpsl
xlat
mov
scas
push
nop
adc
mov
xchg
sub
sub
push
imul
les
pop
push
jmp
out
mov
sub
jmp
dec
or
or
shl
xor
div
jg
mov
lahf
jp
mov
movsl
ficomps
mov
arpl
pusha
lcall
shll
pop
cmp
jmp
inc
push
fmuls
mov
mov
movsb
and
cmpb
mov
xchg
outsl
lods
lea
enter
dec
push
addb
xchg
jp
pop
inc
hlt
daa
sub
jmp
xor
cld
scas
push
adc
push
or
ljmp
sub
dec
clc
mov
adcl
xor
mov
inc
out
push
sbb
popf
repnz
dec
lods
out
dec
adc
jbe
lahf
xchg
sub
mov
es
sbb
test
dec
xor
sbb
push
outsl
push
es
daa
sub
mov
sub
andb
lods
shrl
pop
cmc
sub
stc
cmpb
or
jo
add
les
addb
test
jo
aaa
xchg
xor
or
into
dec
out
in
js
pusha
or
test
add
sti
and
fbld
cmc
pop
popa
sbb
inc
xchg
push
fbld
lcall
mov
jle
inc
push
jp
lret
adc
cmp
xlat
add
pop
fcomp
push
shlb
loope
mov
push
loopne
hlt
pop
sbb
pusha
ss
adc
sub
lods
sti
sub
fs
out
dec
inc
ret
push
sbb
dec
inc
lea
ljmp
inc
repnz
mov
add
ljmp
es
dec
dec
hlt
test
nop
jns
push
mov
fs
sub
decb
push
sahf
sbb
dec
and
ss
pop
mov
jnp
mov
int
cs
shrl
xor
shrl
fdivp
pusha
cmc
loope
sub
int
in
clc
sbb
mov
pop
sbb
jae
mov
daa
pop
jge
out
push
add
repz
clc
xor
insb
and
cs
insl
in
out
fcmovnb
jbe
arpl
push
jo
out
jp
shrb
add
jo
mov
rol
sti
push
xchg
pop
pop
int
sub
jg
push
scas
dec
cmp
push
jns
pop
aas
mov
mov
dec
fbld
xor
inc
std
dec
nop
je
mov
push
inc
mov
sahf
les
loop
dec
xor
in
fld
lcall
loopne
addr16
mov
iret
test
data16
sbb
inc
mov
sub
inc
xor
mov
lds
add
jbe
repnz
popf
mov
xor
xor
mov
into
mov
dec
stc
pop
movsb
pop
jl
push
sbb
cmp
repnz
sub
enter
test
test
and
dec
shrb
test
sbbl
in
jnp
pop
jb
int
inc
inc
jb
add
bound
mov
mov
xchg
mov
xchg
lret
jne
cmp
push
ret
in
int
scas
or
dec
inc
iret
sahf
add
lea
fs
push
inc
xchg
in
inc
push
lea
sub
and
jp
das
or
or
or
and
sub
mov
fs
and
add
pusha
xchg
movsl
sub
jb
aad
imul
loop
sarb
and
test
jbe
dec
test
js
fisubl
lods
or
shlb
mov
mull
cmp
mov
adc
inc
push
dec
jl
add
ja
hlt
lock
sbb
cwtl
js
addr16
jl
lcall
ss
dec
cmp
push
sub
pop
cli
and
add
sbb
ss
push
int3
pop
cmpsb
mov
scas
and
outsl
mov
mov
or
inc
push
cmp
cld
add
add
cmp
pop
int
stos
push
imul
gs
mov
mov
js
push
ljmp
mov
mov
xchg
dec
rcrb
shrb
out
push
inc
jne
out
and
daa
xchg
mov
out
fisttpl
cld
rol
scas
mov
jns
adcl
imul
push
fdivrs
cmpsl
movsl
xor
test
loopne
add
push
xchg
or
idivb
dec
inc
and
das
inc
movsb
in
cld
or
push
std
sbb
out
xor
sbbl
scas
inc
pop
xchg
inc
iret
loope
cmp
ret
dec
lds
xor
dec
mov
into
mov
inc
dec
cs
lock
xchg
popl
mov
enter
ret
push
xor
out
inc
add
mov
inc
or
adc
fiaddl
loopne
addb
iret
test
dec
xchg
jne
push
mov
popa
inc
adc
mov
gs
jns
sbb
adc
sarb
mov
lods
ret
xchg
andb
mov
stos
cmc
addb
push
sbb
leave
inc
sbb
jl
adc
adc
sub
inc
stos
ljmp
jmp
ds
push
dec
inc
nop
jg
fildl
sbb
decb
jns
in
push
sub
mov
mov
repz
push
scas
mov
inc
and
stc
dec
sbb
jo
fcompl
lds
dec
xor
or
or
cmc
loope
mov
mov
mov
outsb
jl
ret
mov
sbb
sub
mov
repz
std
ds
inc
add
cmp
gs
fstps
push
push
or
adc
pushf
jle
insb
rolb
push
mov
add
imul
cmpsl
repz
push
data16
or
push
cmp
ljmp
test
cmp
movsb
xor
call
inc
sub
cli
adc
and
mov
test
cmp
cwtl
mov
xor
iret
xchg
rcrl
pop
xchg
cs
in
mov
sub
lahf
jno
fs
mov
cmc
mov
ret
dec
movsl
js
popf
insl
ds
call
xor
ss
xchg
enter
lcall
mov
inc
pop
das
gs
lods
mov
popa
adc
push
rclb
aas
sub
inc
adc
xchg
movsb
ja
pusha
xlat
cmp
xchg
ljmp
push
repz
shl
out
pop
jae
repnz
mov
test
pusha
mov
cmpsl
ret
fcompl
sbb
jnp
sub
mov
mov
lods
lds
xchg
pusha
cmc
mov
dec
cltd
dec
test
sahf
imul
xor
lock
sbb
loope
inc
jnp
mov
and
sub
cltd
rcll
shlb
aam
jnp
ss
push
and
daa
xchg
cmp
inc
cmpsl
jno
out
adc
std
xorl
iret
decb
jnp
fisubrs
movsl
cmp
lds
push
push
daa
push
test
jae
dec
xchg
mov
xchg
pop
dec
adc
fcomip
cmp
inc
jmp
ret
dec
inc
and
mov
adc
xor
dec
in
dec
movsb
mov
mov
repnz
mov
jg
xchg
mov
outsl
jns
inc
int3
sbb
out
push
ret
cmp
add
in
mov
xor
jg
jge
cmpsl
jo
xchg
in
and
addb
ss
leave
push
adc
fimuls
adc
xchg
dec
mov
ja
faddl
cld
and
icebp
lock
or
pop
scas
push
xrelease
test
lahf
dec
adc
lret
mov
es
sub
movntps
push
xor
clc
xor
and
lret
sub
pop
mov
jne
pop
mov
movsb
rep
out
gs
xor
xchg
sbb
sbb
nop
into
lret
rcll
movsb
mov
inc
jne
xor
pop
adc
faddl
dec
xchg
shll
mov
adc
mov
mov
pusha
lret
push
out
outsl
or
mov
lret
xchg
mov
mov
lahf
mov
int3
fadds
mov
or
jg
ficoms
mov
out
shrb
scas
xor
pop
and
fs
std
push
addr16
mov
cmp
lods
mov
cld
pop
push
xor
lcall
mov
subl
test
jg
out
bound
cmp
popf
xor
jp
and
inc
jbe
dec
scas
pop
aas
cld
xor
test
dec
xchg
cmp
dec
sahf
adc
dec
leave
xor
repz
mov
jmp
mov
jno
mov
mov
push
lds
inc
mov
fdivl
popf
insb
jl
test
insb
shll
iret
popf
push
shll
loopne
sbb
push
inc
out
jnp
lea
pop
aad
and
sahf
jmp
jmp
push
mov
mov
jno
call
sub
jl
jge
fs
cwtl
jge
fimull
cli
push
sub
loopne
inc
pusha
cwtl
sbbl
lds
push
pop
fcomps
sti
mov
mov
test
je
mov
je
mov
dec
test
xlat
add
sahf
pop
adc
idivb
leave
aaa
jno
mov
cli
adc
push
sbb
outsb
ljmp
iret
dec
and
decl
pop
test
test
stc
sbb
jns
jmp
divb
pop
pop
and
push
inc
ds
add
jnp
idivb
add
test
push
sub
xchg
xor
sub
xchg
fsts
or
rol
add
scas
xchg
outsb
outsb
in
testb
adcl
testl
jbe
dec
pop
inc
xchg
mov
es
sub
movsl
call
xchg
sub
push
btr
xor
sub
arpl
clc
sub
mov
mov
les
mov
mov
mov
repnz
test
ds
ret
xchg
fs
dec
pop
sub
fldcw
mov
mov
mov
pop
sub
mov
inc
test
inc
scas
pop
fstpl
push
test
int3
cs
cs
popa
sbbb
mov
push
ret
sub
mov
popf
out
jne
cmp
cmc
ret
and
shl
or
xorl
loop
pop
dec
adc
mov
jo
ljmp
adc
mov
xor
ja
mov
imul
or
inc
add
add
push
ror
or
shl
scas
loope
ja
je
push
mov
test
jo
cmpsb
pop
jno
inc
lcall
xchg
shlb
pop
mov
xlat
loop
popf
inc
mov
sub
fs
loop
push
push
les
inc
push
mov
mov
jnp
ja
push
lods
insl
add
dec
xchg
add
bound
inc
pop
pop
stos
jmp
arpl
or
orl
aaa
sub
push
iret
movlps
mov
filds
push
fucom
shrb
std
and
outsl
or
fisttps
sub
sti
test
push
add
mov
sti
add
cmp
lock
jge
inc
imul
movsb
sahf
adc
fildll
add
jecxz
cmp
and
stc
out
shrl
fsubrl
inc
adc
fs
rcrb
lock
adc
andl
js
mov
lcall
adc
inc
jmp
cmp
mov
ret
xchg
lods
repnz
jbe
jo
lret
mov
sbb
push
adc
and
daa
fsubl
sub
push
loop
jnp
dec
clc
and
dec
movsb
sub
lods
sub
inc
xchg
test
jb
sub
test
mov
jmp
sti
add
int3
xchg
hlt
and
mov
push
lret
out
jmp
test
lret
cmp
mov
push
shrb
lcall
sahf
adc
cmpsl
lock
sysret
xchg
rolb
test
rorb
inc
jle
cli
add
popa
inc
je
and
and
mov
or
xor
dec
pop
test
in
scas
ret
lcall
rcrb
sarb
rol
mov
stos
and
pop
push
mov
mov
jge
cmp
inc
cwtl
outsb
ja
jmp
mov
push
imul
push
sub
mov
pushw
jnp
out
scas
std
inc
dec
xor
xor
sub
lods
mov
dec
mov
jns
and
sub
inc
daa
stos
xor
push
add
and
out
hlt
sub
adc
adc
mov
nop
fistl
repnz
add
iret
or
inc
pop
xchg
push
jecxz
arpl
or
dec
push
fstps
stc
lret
push
rolb
add
jb
cltd
push
test
push
cmc
test
es
sbb
out
mov
xor
stc
dec
cmp
jae
cltd
into
nop
pop
inc
fsubs
fwait
cwtl
sahf
push
pop
int3
sub
pop
popf
pop
sub
xorl
jo
mov
add
clc
mov
ja
jle
and
and
mov
cli
sbb
aam
adc
xchg
xchg
xchg
aas
xchg
cmp
push
lret
sahf
inc
test
and
lds
clc
mov
push
or
das
call
loope
mov
cmc
mov
in
mov
push
mov
rorl
dec
out
mov
loope
iret
cltd
mov
jb
cltd
push
or
mov
fcompl
cmpsl
inc
aad
cli
mov
arpl
jb
xchg
dec
jecxz
lods
mov
out
fcoml
pop
outsl
ljmp
fdivl
sbb
mov
lock
mov
fs
stos
pushf
and
in
into
scas
lock
mov
mov
and
in
pop
jnp
push
orl
stc
jne
lahf
sbbl
or
fs
xchg
jle
xchg
xchg
fimuls
loopne
push
out
call
add
in
lret
imul
sub
repz
pop
out
cmc
aam
imul
jo
cmp
add
ds
xor
scas
daa
gs
push
mov
sahf
es
and
xor
add
cs
or
hlt
inc
mov
cwtl
in
or
addl
cmp
imul
jo
jo
sub
xchg
out
mov
inc
mov
into
mov
add
testb
push
mov
pop
or
fistpll
jb
repz
mov
xchg
js
adc
leave
lcall
cmp
push
pop
push
push
mov
sbb
ret
or
xchg
pusha
mov
jl
cmpsb
dec
and
cmpl
jg
sub
pop
test
push
fsubrs
xchg
adc
cmp
jle
add
imul
cli
pop
push
stos
lods
mov
out
int
arpl
out
cld
cmp
ss
pop
aad
push
mov
push
mov
mulb
add
loopne
mov
jg
imulb
mov
std
adc
and
cltd
leave
inc
std
fimuls
or
iret
lods
add
lds
xlat
addl
push
lods
stos
inc
pop
loopne
lret
push
jge
aas
and
push
xchg
stos
sbb
daa
fisubrs
mov
rcll
roll
add
nop
lahf
push
cltd
addr16
adc
and
adc
fbld
rorl
jbe
jecxz
lea
mov
repnz
test
loope
loopne
push
mov
mov
pop
push
leave
lahf
and
sub
inc
aad
adc
mov
insl
mov
cmpsb
lcall
out
push
sub
lds
inc
fisubs
push
jp
insl
rorl
in
jbe
or
mov
fs
push
mov
mov
xlat
push
imul
lods
mov
fs
leave
aad
dec
insb
fwait
push
jmpw
fadds
mov
ja
mov
jl
jne
mov
pusha
loop
push
lods
mov
cmp
lcall
shlb
lahf
inc
les
clc
stos
loop
xchg
imul
add
add
andb
gs
es
xor
daa
in
xor
add
pop
out
scas
je
mov
pop
mov
mov
inc
fnstcw
icebp
popa
mov
imul
xor
repnz
ss
shl
cmpb
loop
sub
mov
mov
fs
add
sbb
push
mov
std
sub
rorb
cld
pusha
sub
adc
inc
sub
mov
mov
aam
adc
into
int
enter
pushf
jecxz
dec
cmp
xchg
inc
xchg
test
lcall
cmpb
pop
movsb
daa
cmpl
or
add
and
popa
mov
xchg
test
repnz
pop
nop
fidivrl
shrb
js
sbb
sbb
pop
outsl
sbb
add
mov
dec
inc
dec
cmp
adc
testl
out
adc
rol
stos
and
push
ja
push
std
mov
push
cmp
dec
movsb
imul
jb
fcmovnb
push
dec
cwtl
mov
stc
nop
scas
jo
not
lods
inc
sti
jl
lock
aam
fistl
inc
ret
ja
cs
xchg
xchg
mov
test
mov
addr16
adc
xchg
pop
ror
daa
push
push
and
or
xchg
nop
test
or
out
fs
int3
rcrl
scas
adc
rcll
sub
addb
adc
and
daa
jns
or
sub
add
push
xlat
add
aad
fstpt
jge
xlat
repz
sbb
shll
scas
push
fnstenv
mov
in
out
sbb
mov
lds
cmc
xchg
out
cmp
or
pop
add
js
jmp
bound
inc
js
cmc
fidivrl
nop
xorl
dec
out
mov
rep
scas
imul
pusha
push
fildl
add
pop
mov
pop
mov
fisttpl
cwtl
mov
jnp
cmpsb
imul
jb
or
xchg
es
lds
cltd
cmp
je
lock
popa
pop
test
nop
fwait
mov
jg
adc
es
gs
push
test
jno
stos
jg
arpl
sub
dec
sbbl
or
mov
push
pop
xchg
mov
mov
dec
jns
iret
loope
in
scas
and
adc
xlat
adc
cmpsl
jns
xor
mov
addb
ds
pop
pop
call
les
pop
in
push
mov
mov
cli
xchg
pop
clc
cmp
negl
test
or
test
adc
pop
xor
lret
adc
pop
in
sar
popa
push
dec
cmp
jmp
sbb
cld
ds
or
jnp
jge
mov
push
and
popf
pusha
inc
adc
or
pop
mov
push
mov
jg
stc
mov
adc
test
jbe
ss
outsl
add
add
add
or
jl
or
mov
das
pushf
dec
mov
jnp
fwait
scas
cld
testl
in
nop
inc
mov
cs
adc
jbe
test
mov
and
scas
out
or
and
mov
pop
xchg
push
sub
js
mov
mov
pushf
inc
dec
mov
and
pusha
push
adc
jg
sbb
out
xchg
and
loop
push
mov
daa
xorl
mov
adc
cld
cvttps2pi
sbb
in
lods
mov
repz
fistps
mov
in
adc
jne
and
andb
cmp
divb
fcompp
idivb
xor
sahf
fdivp
shrb
aad
sbb
dec
pushf
ret
out
aam
outsb
push
xor
aad
lahf
jle
or
push
cmp
pusha
mov
addl
xchg
outsl
mov
mov
movsb
push
shll
jp
add
mov
xchg
ds
add
imul
movsb
add
adc
lcall
loop
xor
jge
rcr
xchg
pop
jmp
je
int
or
jge
negb
insl
or
nop
adc
mov
and
xchg
adc
sbbl
dec
imul
adc
popf
mov
ja
mov
push
pop
leave
push
xlat
pop
sub
add
and
xor
inc
push
mov
pop
or
jo
insl
nop
std
jne
test
stos
int3
push
cmc
xchg
in
dec
dec
lcall
xorl
jge
mov
cmp
into
xchg
mov
and
je
test
repz
cmp
cmp
loope
push
dec
pushf
mov
outsl
cld
inc
stos
mov
xor
rcrb
in
pop
mov
mov
fnsave
cmpl
jnp
dec
daa
rcrb
mov
stos
mov
sub
and
xchg
mov
adc
inc
jp
gs
cmp
pop
mov
push
lret
jne
add
fidivl
adc
jno
push
add
adc
lods
or
push
int
iret
add
inc
lahf
pop
int3
xchg
dec
ljmp
insl
inc
insb
shlb
sub
push
cmp
ljmp
mov
aad
lret
xor
pop
stos
sbb
inc
rcrb
and
dec
fidivs
out
jg
jp
jecxz
leave
das
ficoml
lret
bound
jle
sti
sub
iret
pushf
jne
jl
nop
cld
out
or
loope
mov
scas
rcll
xor
sub
imul
aas
or
mov
cmp
xor
and
xchg
ja
inc
enter
sub
aad
inc
fstpt
xchg
cmp
dec
dec
fcompl
ja
arpl
pop
in
pop
and
cmp
lahf
adc
insb
test
mov
fldenv
fildll
addr16
xchg
pushf
mov
data16
push
cmp
outsb
iret
stc
mov
adc
jecxz
int3
cltd
jl
xchg
iret
lods
stos
movhps
adc
push
pop
lcall
lods
sub
add
mov
pop
cs
movsl
je
lcall
movq
pusha
xor
movsb
mov
fidivrl
mov
adc
cmpsl
out
sbb
sub
inc
test
jo
cmc
lahf
addb
dec
lahf
fsubp
jns
and
fwait
jecxz
xchg
adc
and
lcall
add
xchg
ds
xchg
mov
sahf
jmp
push
inc
rol
mov
lahf
int3
lock
lods
sbb
je
nop
push
mov
lret
test
and
xor
movsl
or
jg
cmc
mov
fsubrs
inc
outsb
loope
mov
mov
add
sbb
jle
int3
stos
movsl
inc
aaa
xor
cmc
inc
jae
pop
adc
movb
jnp
mov
xor
add
dec
pushf
xchg
aam
std
cmp
jb
sbb
adc
icebp
notb
sub
xchg
call
mov
sbb
out
adc
call
mov
xor
lods
ss
mov
adc
pop
stos
inc
mov
leave
movsl
sub
ljmp
out
fwait
adc
mov
sbb
int
ljmp
scas
aaa
andb
ds
xchg
sbb
mov
ret
mov
dec
or
adc
jo
les
sti
add
ja
rorl
or
data16
dec
sbb
lret
cmp
iret
iret
cli
or
loopne
aam
and
mov
fdivp
call
insb
out
jge
inc
mov
sub
push
jae
cwtl
adc
adc
nop/reserved
andl
fcos
sub
das
mov
cltd
jb
cmc
xchg
add
add
xchg
or
lods
leave
inc
add
aas
adc
jmp
jno
inc
test
cmp
push
lock
les
pop
sbb
mov
xor
push
push
xor
add
test
or
int
xor
icebp
dec
inc
in
pop
ror
lods
adc
imul
shrl
add
pushf
jl
mov
xor
push
add
es
frstor
cmp
jne
stos
out
add
mov
fiadds
rorb
pop
add
fisubl
push
sbb
xlat
and
out
adc
and
jg
sub
sahf
loope
out
mov
pop
pop
sub
dec
out
arpl
mov
es
iret
bound
push
and
call
mov
cltd
pop
decl
pop
addr16
xchg
call
xor
mov
dec
push
mov
xchg
sbb
mov
jo
dec
sub
ja
loopne
stos
addr16
dec
jmp
xor
dec
daa
xor
cmpsl
in
je
and
aam
orl
xor
inc
mov
scas
jp
repnz
mov
jecxz
test
mov
cmp
data16
sbb
leave
mov
loope
fs
mov
xchg
adc
xor
jo
hlt
int3
loop
addr16
jno
cmp
repnz
into
testl
dec
repz
cli
test
dec
pop
jbe
inc
xchg
popf
add
xchg
adc
dec
pop
frstor
xchg
dec
inc
stos
push
and
xor
pop
stc
cld
es
in
xorl
in
pop
sbbb
jns
stc
fidivrs
sti
pop
ret
cs
pop
cmp
out
loope
push
cwtl
pop
xor
add
pop
ret
inc
insb
out
sarb
in
mov
xor
jne
js
xchg
aaa
aad
into
scas
xor
inc
cmp
mov
adc
dec
stos
jmp
push
fwait
mov
pop
jmp
dec
popa
imulb
roll
fistl
sub
mov
xor
sub
int
cld
lcall
lods
cwtl
mov
xor
out
loop
push
add
mov
mov
mulb
mov
fsubl
xor
inc
out
test
mov
cld
into
repnz
cmp
test
and
pushf
and
dec
mov
sbb
push
mov
mov
pop
sbb
in
aam
pop
decl
fsubs
xor
xor
xor
mov
pop
data16
fldenv
push
ljmp
or
mov
push
sahf
sarl
lock
ja
lret
insb
cli
and
mov
test
bound
movsb
push
pusha
cmpsl
adc
xor
sub
lcall
or
test
mov
movsl
or
stos
mov
xor
mov
jnp
ja
in
lea
sub
mov
mov
test
mov
jo
push
cmp
adc
in
push
jbe
andb
pop
inc
jmp
jmp
ljmp
cmc
mov
das
xchg
movd
jp
add
jne
dec
insb
lret
sbb
mov
sbb
and
gs
inc
insl
pop
mov
test
or
or
notl
mul
fdivl
xor
inc
hlt
icebp
push
or
push
rcll
pop
mov
lds
or
xchg
add
popa
mov
xchg
and
push
dec
push
lcall
int3
mov
or
inc
mov
jle
mov
out
out
into
xchg
in
dec
jb
jb
jne
mov
jb
mov
popf
fnsave
mov
stc
ja
mov
jle
xlat
data16
adc
pop
mov
xor
dec
popa
or
add
jae
push
xor
es
and
jne
mov
xor
pop
push
loope
addps
push
jecxz
and
loop
in
outsl
pop
test
sbb
lret
insb
push
out
mov
test
jo
sub
bswap
inc
mov
icebp
in
inc
cmp
xor
xchg
lods
imul
and
jns
xchg
iret
add
pusha
and
mov
movsl
push
mov
xchg
int3
arpl
add
or
inc
not
cld
shlb
mov
in
xor
pop
mov
cmp
dec
push
sti
xchg
rolb
call
dec
mov
rorb
pop
xor
aam
mov
xchg
out
jns
fistpll
iret
jl
pop
cmp
insl
stc
fisttpl
dec
lock
or
aad
lock
loope
dec
fstl
cmpl
mov
mov
cmp
mov
sbb
mov
push
jl
inc
test
ficoms
lock
add
ja
nop
mov
inc
sbb
cs
sbb
in
lock
push
xor
sub
lods
jnp
idivb
push
outsl
jg
mov
push
repnz
adc
dec
movsl
mov
pushf
push
mov
or
xchg
jmp
pop
cmp
xor
push
xchg
pop
inc
adc
push
shl
xchg
cmp
fstpt
out
xchg
push
fstps
push
mov
adc
int
aad
scas
insl
jle
loopne
rclb
ja
push
xor
out
jmp
and
imul
add
mov
bound
test
or
adc
jg
cltd
iret
rcrb
adc
mov
roll
sub
lret
sarl
jae
sahf
xlat
xchg
imul
aaa
iret
out
dec
jnp
xor
xor
push
mov
pushf
fisubl
sahf
ljmp
icebp
movsl
jg
pop
test
dec
shrl
mov
or
sbb
and
mov
repnz
mov
adc
xchg
sub
pop
dec
jecxz
cwtl
adc
ja
rorb
nop
aam
popf
jbe
xor
lea
mov
or
cwtl
pop
not
mov
jl
jo
ss
aas
js
fimuls
test
popa
es
mov
or
push
push
test
movsb
enter
popa
stos
xlat
push
out
xchg
imul
pop
sbb
and
mov
popf
adc
jmp
jl
rclb
inc
insb
mov
mov
sbb
jno
pop
rcl
xchg
mov
jp
les
scas
lods
aad
hlt
je
jns
rcrl
mov
fs
std
ret
inc
hlt
sub
pop
or
push
cmp
sub
dec
sub
jne
fs
add
lods
xchg
cltd
adc
shl
data16
stc
add
mov
lahf
inc
xor
push
cmpsb
xor
push
mov
jge
es
jbe
imul
mov
in
idiv
aad
cmp
mov
scas
fucomi
fcomi
fistpl
sbb
fwait
inc
lods
add
in
or
enter
sub
or
ficoml
xchg
sahf
inc
xlat
mov
add
sbb
sub
xchg
test
inc
pop
ret
cwtl
push
or
hlt
stc
aad
sbb
pop
xchg
out
mov
in
fildll
and
mov
andb
pop
decl
xchg
je
fcomps
mov
lods
cmpsl
xchg
mov
mov
cmp
stc
pop
xor
push
mov
fnsave
jl
cmpsb
and
and
cmp
cmp
int
mov
fld
cmp
call
out
lret
out
inc
cmp
xor
xor
add
insb
imul
pop
outsl
out
mov
pop
addr16
or
mov
cltd
scas
adc
sbb
fistl
inc
and
push
ljmp
mov
sbb
nop
nop
adc
xor
lock
nop
stos
test
sti
push
or
cwtl
or
test
mov
mov
fs
mov
repz
shlb
cmp
pop
sbb
and
pop
pop
mov
dec
in
jbe
ljmp
cmp
xorl
int3
dec
sbb
mov
jbe
scas
or
xchg
mov
or
pop
pop
rclb
aam
xchg
xchg
cltd
mov
mov
popl
pusha
and
enter
loopne
mov
xor
idivb
xchg
mulb
xor
scas
aaa
je
sub
push
imull
xchg
inc
fistps
sub
adc
cmp
divl
movsb
pop
mov
mov
mov
fidivs
ja
test
sub
adc
xchg
ja
xor
and
or
aad
negb
sbb
sti
ss
sbb
cmpsl
js
xor
xchg
iret
rclb
inc
jb
mov
stos
adc
in
mov
or
sub
jge
std
shrl
push
insb
into
sti
jecxz
shrl
push
mov
mov
ja
mov
or
inc
push
out
mov
jmp
cmp
hlt
dec
add
in
icebp
loop
or
sbb
mov
daa
dec
fwait
paddsw
faddl
pop
mov
and
sti
pop
das
cmpsb
fsubs
xchg
pushf
jne
aas
fucomi
pop
jmp
addr16
add
mov
scas
adc
mov
ret
mov
scas
enter
cmc
mov
out
xchg
sub
into
inc
movsb
sub
add
and
mov
inc
ret
dec
clc
movsb
pop
movsb
fwait
xchg
xchg
fstps
testl
jmp
rcrb
dec
inc
xchg
insb
lret
test
pop
lcall
sub
cmp
rolb
add
stc
cli
pop
xacquire
sub
testl
jae
cmp
iret
jl
inc
test
fwait
sub
shll
es
enter
dec
or
push
mov
mov
and
aam
neg
pop
int
push
lods
xchg
data16
das
cmp
push
std
mov
dec
add
mov
xor
cwtl
cmpl
arpl
or
push
or
pop
add
xchg
mov
jmp
pop
out
lea
xor
jno
adcl
and
sbb
sub
mov
pop
repnz
sbbl
test
arpl
imull
addr16
push
fs
into
cld
flds
mov
dec
mov
dec
inc
scas
push
daa
cmp
and
cmp
mulb
idiv
repnz
enter
push
loopne
mov
push
mov
cmpsl
data16
gs
sbb
push
dec
ja
cmpsl
sahf
aam
push
jb
add
or
mov
shll
and
aam
loop
dec
mov
test
sbb
cmpsl
popa
add
xor
inc
stc
rorl
inc
inc
ret
pushf
shl
mov
jg
cwtl
dec
test
and
fcomi
mov
mov
dec
out
xchg
cmp
adc
push
rorb
insl
mov
mov
sub
pop
xchg
divb
jg
push
cltd
imul
push
mov
pop
loopne
xor
lcall
mov
lahf
inc
dec
ja
insb
and
hlt
inc
test
ljmp
mov
popa
mov
sub
cs
xchg
rcrb
or
mov
pop
push
push
mov
mov
stc
push
mov
movsb
gs
cmpsl
out
mov
clc
xchg
and
sub
mov
xchg
roll
cmp
mov
jle
sarl
add
add
xor
insl
fs
ds
jmp
into
mov
mov
fldcw
ja
leave
mov
rcl
dec
or
xchg
stos
dec
pop
ret
push
adc
inc
outsl
inc
stc
jne
and
pop
cmp
sbb
pushf
mov
push
jge
jo
jp
xor
ja
loop
jmp
pop
jb
sahf
mov
out
and
ret
inc
dec
sub
xchg
cmp
cmc
push
sti
lret
in
mov
out
pop
pop
test
pop
mov
pop
xchg
sbb
pop
sub
jb
fisttpl
movsl
in
mov
mov
arpl
test
aas
pop
lods
dec
sub
sarl
fdivs
fisubs
add
pusha
shll
pop
or
jp
jbe
in
call
push
push
pop
push
mov
enter
and
movsb
stos
addr16
mov
sub
inc
out
movsb
cltd
in
cmp
pop
xchg
les
adc
fsubrs
loopne
adc
push
jmp
lret
fadd
pusha
notl
subb
ss
outsb
or
aad
sub
jnp
dec
aad
call
test
popf
mov
xchg
mov
push
inc
lcall
inc
jle
push
pop
sbb
clc
in
add
push
xchg
and
dec
inc
mov
or
call
or
bound
mov
in
jne
test
dec
xor
ret
inc
fs
inc
mov
ret
cwtl
out
push
shll
in
push
inc
cmp
repnz
sub
inc
je
shlb
jl
push
int3
dec
pop
or
movsb
lods
jnp
mov
lret
cli
js
jp
mov
outsl
fcomps
inc
adcb
fmuls
cmp
push
mov
inc
insl
cmp
lahf
pop
pop
jg
pop
mov
mov
in
mov
test
outsl
loope
scas
dec
pusha
sbb
jns
xchg
jno
adc
fldl
sub
adc
ds
sbb
outsl
int3
ret
test
outsl
cmc
lret
push
imul
pop
jns
xchg
mov
popa
xorl
xchg
cmp
loop
jle
pop
xchg
jno
popa
pop
scas
in
icebp
adc
pop
gs
fldl
sub
ljmp
xchg
and
mov
jl
add
inc
int
sbb
jnp
sbb
lods
shlb
jns
call
cmp
or
cmp
xchg
pop
fs
ss
sbb
enter
jae
xor
pop
fists
sub
ja
push
sub
sbb
out
mov
imul
jns
lret
out
mov
and
pop
sar
adc
pop
outsl
stos
cmp
and
das
and
jne
ja
inc
addb
mov
mov
int
icebp
aam
sub
in
cwtl
dec
inc
xchg
jle
test
sbb
testl
jp
sbb
sbb
mov
mov
add
fcom
or
mov
push
and
call
adc
out
and
sbb
lea
or
dec
push
xor
add
in
or
mov
test
sub
or
mov
jl
dec
sub
xor
xchg
lea
or
shll
imul
mov
popl
jp
out
pop
sahf
mov
out
xor
arpl
shl
and
leave
mov
scas
sbb
sub
inc
add
sbb
insb
divb
and
dec
mov
idivb
fcmovnb
xor
fs
cwtl
lea
bnd
das
xchg
iret
test
push
and
rcr
leave
push
stos
xor
push
enter
sbb
mov
mov
fucomip
fsubs
outsl
jecxz
lea
sub
int
int3
imul
nop
test
js
stos
divb
sub
xor
push
cmp
dec
add
lcall
pop
inc
cmpsl
push
popa
fimull
or
mov
loop
je
aad
jp
sbb
shll
and
ffree
int3
fadd
dec
out
stos
mov
pop
fldpi
push
outsl
popa
xchg
mov
xor
cli
push
gs
hlt
push
mov
mov
out
enter
adc
ficomps
in
add
pop
mov
add
or
out
push
mov
in
fwait
outsl
sub
mov
jle
ficoms
sub
int3
mov
mov
pop
fs
or
push
jne
int3
lret
icebp
pushl
sbb
xchg
push
ss
out
data16
aam
adc
lret
sbb
shl
push
pop
pop
jb
xchg
int3
les
lahf
pop
aam
xchg
mov
out
mov
xchg
rolb
mov
test
cmp
add
or
lds
jo
pop
pusha
or
movsl
scas
adc
inc
pop
cltd
dec
neg
sarb
cwtl
loop
enter
sbb
mov
stos
or
adc
es
aad
lahf
inc
mov
fidivrl
out
pusha
aas
pop
lret
xchg
pusha
adc
cs
add
xchg
scas
sbb
aam
fisttps
push
aaa
pop
ss
dec
dec
inc
jmp
xor
push
lds
mov
orl
addb
mov
mov
stc
pop
daa
sbb
mov
ljmp
lods
mov
insb
pop
std
mov
adcl
data16
test
dec
cmpb
ret
pop
shlb
ss
sbb
jo
xchg
testl
mov
jg
or
imul
inc
add
add
gs
jge
cmp
jl
ljmp
xchg
push
das
cmp
adc
into
mov
jbe
push
call
dec
add
cmp
adc
cmp
pop
je
negl
mov
pop
fwait
push
stos
rcll
mov
aam
into
jo
popf
nop
cmp
mov
out
out
mov
mov
mov
xchg
pop
cmp
andnps
lret
stos
shlb
dec
aaa
pop
and
pop
or
into
mov
adc
lods
sbb
jle
push
icebp
and
fnsave
push
xchg
es
jg
lcall
jmp
push
cmc
xchg
dec
sub
imul
out
push
lods
mov
or
adc
fcmovb
xor
mov
or
and
ds
cmpsb
dec
lods
mov
mov
aam
pop
dec
in
outsb
into
scas
add
daa
sbb
xchg
ss
dec
lods
cld
orl
push
and
aas
push
loopne
mov
test
mov
subl
add
inc
xchg
scas
mov
lds
clc
fstps
mov
stc
add
mov
push
lea
xchg
xchg
icebp
push
stos
xchg
xchg
scas
push
lods
out
pop
jbe
push
xlat
sbb
mov
xchg
xlat
push
pop
or
jae
adc
sbb
push
push
dec
stos
clc
out
dec
dec
adc
clc
mov
pushf
or
adc
cltd
jbe
shrb
mov
xor
stos
mov
and
mov
int
clc
icebp
iret
mov
mov
inc
jno
je
add
xchg
adc
mov
pop
rcrb
repz
or
and
in
or
stc
mov
push
icebp
inc
aam
fld
in
in
sti
inc
stos
imul
mov
push
mov
mov
cltd
icebp
int3
inc
mov
mov
push
push
jp
fwait
mov
inc
mov
insl
jbe
xor
lret
push
mov
dec
pop
pop
jb
dec
or
sub
popf
call
shrb
ss
adc
out
popf
repz
aas
shr
divl
pop
adc
xlat
xor
sbbb
loop
into
mov
xor
movsb
stc
adc
ja
lahf
dec
sbb
mov
mov
fwait
inc
rcll
pop
nop
sub
cltd
fiaddl
in
pop
mov
cld
jl
push
cli
cwtl
fcomps
test
fmull
cs
push
jg
arpl
repnz
imul
dec
pop
cltd
pusha
je
cmp
xchg
mov
jne
sub
mov
inc
dec
ljmp
push
cmpsb
push
xchg
int3
fwait
jbe
ret
mov
add
fldl
lret
popl
adc
xor
pmulhw
push
insl
bound
lret
or
jmp
repnz
movsl
imul
fidivrl
daa
mov
stc
shll
pusha
into
popa
test
or
int
xor
xor
in
sub
mov
fidivrs
icebp
mov
scas
mov
call
push
cmp
cltd
clc
loopne
sub
pop
insl
out
push
idivl
test
pop
movsl
mov
sbbb
bound
jge
pop
ja
cwtl
loope
jge
mov
in
and
mov
mov
mov
and
inc
or
or
imul
rcl
push
fiaddl
rcll
adc
clc
fadd
add
insb
lret
and
xor
pusha
xchg
adc
push
js
daa
sbbl
push
cmp
loope
out
inc
mov
sbb
adc
cmp
sbb
xchg
sbb
cmc
mov
add
rclb
scas
inc
cmp
dec
daa
push
testl
pop
adc
add
int3
push
call
xorps
test
lock
or
lods
outsl
push
cld
and
cmpsl
popf
out
lock
out
xlat
cmp
sti
mov
cli
loopne
xchg
xlat
mov
add
popf
int3
jmp
push
notb
enter
test
cmpsb
xchg
mov
movsb
xchg
lods
add
adc
outsb
outsl
push
js
or
dec
xchg
insb
jg
fwait
or
mov
out
jle
jle
xor
push
pop
roll
inc
fcompl
add
packssdw
push
lods
ffree
adc
mov
pusha
popa
out
add
js
jp
scas
mov
adc
mov
and
pop
jns
cmpsl
pop
daa
call
movsb
lods
sub
cmc
push
enter
mov
inc
push
test
sub
dec
pushf
xchg
adc
or
jecxz
jns
fbstp
faddl
push
xor
test
ret
lods
loope
add
inc
ljmp
lods
lcall
clc
mov
or
sbbb
mull
fsubrl
das
dec
pop
pop
ljmp
and
adc
sti
int
testl
jge
jge
popa
mov
xor
and
ljmp
shll
rorl
popa
ja
jno
jo
roll
xchg
xor
addr16
pushf
adc
movsb
push
mov
lcall
scas
fsubs
push
rcll
aad
sub
std
outsl
pop
mulb
dec
and
adc
and
roll
mulb
pop
cmpsl
sbb
test
imul
push
lret
ja
and
daa
cmc
jmp
mov
mov
mov
mov
inc
jo
fists
popf
jle
push
xchg
decl
dec
das
push
or
mov
jle
mov
aas
mull
enter
mov
in
movsl
call
pop
jge
xchg
sub
dec
add
mov
xor
lret
movl
cmp
and
xchg
enter
add
sbb
gs
or
xlat
lods
pop
cmc
jno
pop
scas
rcrl
sahf
push
sahf
outsb
pop
inc
call
filds
mov
cmpsl
rolb
xchg
clc
sub
mov
mov
ret
jecxz
mov
jp
test
and
jle
cmpsb
lods
inc
fisttps
sbb
mov
ss
stc
jl
int3
dec
push
clc
lods
add
mov
jecxz
xor
jl
ds
push
xor
add
cmp
lahf
jns
mov
leave
cmp
jmp
pop
enter
outsb
pop
mov
mov
or
fldt
movsb
pop
movsb
mov
dec
dec
insb
jb
mov
loop
cltd
mov
lods
dec
xor
sbb
xchg
out
pop
mov
sti
lea
dec
sarl
pop
mov
imull
mov
pop
cmpsb
int
cmp
mov
movsl
add
pushf
fbld
call
xlat
mov
stos
out
push
xor
rcrl
mov
ja
pop
jbe
insb
outsl
push
sbb
sub
in
inc
xchg
add
mov
push
cmp
pop
movsl
fidivs
outsl
push
xor
hlt
mov
cltd
gs
pop
inc
mov
pushl
in
shlb
cmp
pushf
cs
cmp
leave
mov
cmp
addr16
pop
jl
push
mov
ret
jne
push
inc
jle
pushf
jo
inc
push
mov
push
aam
out
dec
loop
icebp
shll
jb
lock
inc
add
or
jp
mov
fcomp
xor
dec
xor
inc
push
outsl
scas
add
push
clc
outsb
cmc
sub
sub
add
out
into
jmp
fldcw
sub
shlb
push
jl
test
notb
cld
xchg
fs
mov
sub
add
cmc
adc
rclb
xchg
mov
fstpt
jae
xchg
push
xor
imul
scas
clc
xor
adc
call
push
loope
fmuls
into
xchg
pop
stc
adc
dec
loope
push
lahf
add
ret
lcall
leave
imul
inc
mov
aam
test
inc
je
dec
inc
fsub
mov
pop
out
out
mov
and
stos
fcompl
movsl
xor
mov
jno
and
icebp
repz
test
jmp
jmp
push
sbb
jns
xor
repnz
call
adcl
int
andl
imul
xchg
lret
ljmp
int
pusha
cmp
mov
jne
sbb
xlat
stc
icebp
push
push
rorb
aas
jg
mov
sub
dec
out
gs
divb
mov
mov
jae
mov
jg
lret
cli
stos
aaa
xchg
lds
addr16
sbb
es
pop
daa
aaa
push
cmpl
cmp
push
xchg
add
es
and
faddl
insb
rol
int3
loopne
hlt
push
add
pop
inc
push
mov
pop
adc
imul
repz
adc
out
daa
pop
and
iret
in
insb
data16
add
out
outsb
clc
adc
dec
adc
aad
dec
push
cmp
mov
mov
xor
lret
xor
push
ljmp
mov
sub
sahf
aas
movsl
pusha
cmp
in
dec
mov
neg
test
insb
mov
jb
int
rorb
fsub
mov
andl
jb
mov
std
fwait
int
shl
andb
push
es
cs
xor
adcb
lret
fwait
mov
and
adc
cmp
or
mov
pop
sbb
add
add
push
or
iret
int3
or
sub
push
aaa
loopne
lret
mov
mov
or
mov
rep
pop
cltd
out
int
notb
imul
fnstsw
fmulp
sbb
push
or
jge
inc
out
mov
out
ret
push
inc
test
dec
out
pushf
fwait
sbb
fistps
xchg
in
xchg
xchg
pop
fstps
in
lret
mov
inc
sti
jle
orl
cmc
cld
out
mov
xor
hlt
rorb
call
out
mov
sbb
push
xor
jae
mov
ds
adc
repnz
dec
xor
push
and
data16
test
sbb
dec
pop
pop
adc
repz
adc
push
pop
sub
loop
pushf
pusha
mov
mov
arpl
push
mov
das
sub
into
pop
sub
sbb
pop
pop
mov
call
loope
xchg
in
dec
jle
sbb
mov
xchg
loope
and
xor
add
jnp
push
and
push
mov
std
test
ret
push
and
sbb
xchg
out
jno
mov
lds
loopne
mov
aas
push
mov
xchg
or
repnz
sub
cwtl
aad
xchg
inc
sbb
outsl
or
adc
cmp
mov
ss
and
inc
inc
and
insl
adc
repz
scas
in
dec
fsubrs
add
xor
jle
mov
daa
bound
mov
mov
and
stos
dec
mov
je
daa
mov
push
and
or
insb
jmp
pop
sub
ja
push
loope
inc
pop
jp
ja
outsb
xchg
sub
push
insb
iret
mov
outsl
sub
addb
dec
out
aas
sbb
ficoml
push
outsl
sbb
data16
jmp
sahf
fldl
cmp
movsl
test
push
movl
mov
xor
out
or
sub
push
ret
lods
mov
idivb
pop
leave
dec
call
cmp
pop
lea
xor
sub
bound
xchg
daa
and
jl
sub
movl
dec
mov
jecxz
push
lea
aaa
mov
sahf
je
push
imul
dec
sub
mulb
xchg
inc
imul
adc
mov
mov
xor
or
fdivrs
sub
das
repnz
out
imul
xchg
data16
test
sti
and
dec
xorb
mov
test
mov
daa
jmp
mov
fsubl
pop
fwait
arpl
xchg
fistl
jp
bnd
enter
stc
inc
fcoms
ret
in
adc
mov
fisttps
mov
pop
scas
mov
sub
lock
cmp
aam
push
jmp
push
addr16
mov
mov
lods
gs
push
push
in
push
sbb
push
xchg
xchg
inc
loope
sbb
inc
inc
into
lret
jecxz
imul
xchg
dec
in
dec
sub
sbbb
mov
sbb
jg
aas
and
sbb
mov
cmc
icebp
xchg
jne
adc
mov
stos
push
out
and
push
sub
sbb
sub
lret
adc
ret
std
cmp
rcrb
aad
pop
inc
jp
divb
cltd
sbb
lahf
es
jno
jmp
inc
adc
jmp
aaa
mov
dec
cmp
pop
cli
clc
mov
loopne
shrb
test
lea
adc
xlat
aaa
inc
fimuls
in
insb
mov
or
and
xor
imul
ret
cs
pop
lret
fwait
aas
bound
jb
mov
dec
dec
out
add
sub
xchg
inc
js
jne
into
cmc
in
dec
pushf
imul
push
outsl
mov
add
add
shll
and
xchg
out
mov
jmp
inc
es
bound
stc
push
dec
inc
call
sub
cmp
rcl
test
out
push
pop
data16
fmulp
stc
xor
fwait
in
push
inc
jmp
sbb
clc
pusha
pop
shrb
add
mov
enter
jg
push
jl
fisubrs
mov
ljmp
daa
out
xchg
mov
and
mov
cli
cmp
scas
mov
test
or
or
orb
xor
test
mov
xchg
inc
jmp
xor
in
ljmp
pop
in
lret
rcrb
test
movsb
xlat
movsb
add
subl
xchg
fisttpll
dec
sbbl
mov
flds
mov
mov
fs
and
push
jecxz
js
jno
out
dec
call
dec
test
pop
push
fdivs
roll
decb
sbb
nop
loope
xor
arpl
pop
lock
insb
push
aam
push
push
mov
sub
out
push
inc
lds
fwait
cld
ss
hlt
mov
shrb
inc
push
and
cmpb
mov
mov
jg
jge
test
push
data16
mov
mov
leave
add
mov
bound
lds
sti
or
je
sub
adc
xor
leave
mov
in
ret
sub
pop
test
xchg
pop
or
fistps
mov
xchg
test
xchg
insl
dec
pop
loope
leave
loope
bound
aaa
stc
mov
xorb
loope
mov
fucomi
xchg
mov
cmp
ja
cwtl
sub
mov
pop
flds
lea
cltd
mov
mov
adc
addr16
jno
aas
dec
mov
and
imul
or
arpl
inc
mov
jmp
jge
jnp
mov
xchg
jae
jne
test
sti
mov
push
pop
mov
in
in
sub
xchg
int3
hlt
pushf
and
mov
pop
movsb
sub
gs
in
insb
pop
jbe
adc
lea
stc
jmp
test
inc
in
filds
cwtl
xchg
jg
in
ja
icebp
stos
sahf
jecxz
pop
mov
lret
pop
mov
test
xchg
or
lods
mov
imul
jle
jns
mov
ror
lea
clc
pop
ja
dec
outsb
pushf
cmp
fiaddl
mov
push
pushf
in
pop
push
cmp
leave
out
shll
or
adc
add
test
dec
pop
imulb
push
insb
insl
mov
or
arpl
adc
pop
popa
mov
mov
mov
sbb
jmp
xchg
jb
inc
rclb
pop
out
loopne
mov
imul
pop
call
or
sub
or
imulb
dec
sub
or
mov
leave
insb
mov
test
push
mov
cmp
loopne
inc
fadds
xchg
lds
add
jmp
fldl2t
sbb
cmp
mov
test
ret
mov
inc
in
clc
loopne
arpl
sarb
pop
aas
jg
popf
out
mov
movsb
push
dec
leave
sbb
imul
push
and
test
mov
jbe
sbb
fwait
xorl
popa
in
rcr
fbld
sahf
push
cmp
pop
out
jnp
rcl
and
sahf
loop
cmp
push
mov
dec
insl
jle
mov
jae
xchg
addr16
popa
aas
or
faddp
dec
int
xlat
stos
pop
iret
add
clc
or
enter
in
mov
sub
loope
daa
push
lahf
pop
mov
mov
add
ds
sub
mov
pop
cmpsb
cmp
jl
xor
sarl
inc
xlat
setle
stc
out
and
vmptrst
ret
inc
cmc
xor
sbb
mov
arpl
lods
mov
push
mov
popa
adc
aas
arpl
insb
inc
mov
sub
mov
mov
mov
movsl
outsl
push
dec
orl
fstpt
add
xor
test
mov
or
cmp
adc
push
add
sub
fisubs
jecxz
pushf
xor
add
rolb
jle
pop
inc
and
push
addl
mov
jg
push
or
inc
xor
and
cmp
inc
dec
faddl
xchg
aas
out
xchg
fsubr
jo
cmp
pop
jns
outsb
push
fadds
dec
iret
loope
mov
xor
daa
dec
push
clc
mov
sub
add
sub
xlat
lods
xchg
adcb
jl
xor
mov
das
adc
sbb
mov
movsl
rcll
lret
das
movsl
stos
xor
mov
pop
sub
push
loopne
jg
xor
or
mov
push
jae
jb
repnz
lret
mov
pop
popf
push
inc
loop
lock
mov
push
orl
aaa
ficompl
push
cld
mov
insb
mov
enter
sbb
es
jne
loopne
jg
add
stos
push
cmp
lods
into
mov
cmp
push
sbb
fstpl
pop
push
mov
sbb
mov
shll
and
add
sbbb
xchg
in
push
out
xchg
cmp
pop
inc
jg
test
xchg
arpl
fldt
add
outsb
pop
mov
cwtl
sahf
pavgb
int3
mov
add
dec
sbb
fldl
icebp
add
jp
scas
in
sbbl
pop
mov
test
adc
or
cmp
cmp
push
mov
jg
push
sbb
mov
push
fildl
fldcw
pushf
insb
pop
inc
js
test
pop
mov
inc
cmc
int
mov
in
fidivrs
icebp
int3
ss
mov
lcall
pop
cmp
ja
cmp
lods
push
test
fadd
mov
xlat
mov
sbb
jns
inc
clc
movsb
push
sub
sub
and
sbb
xchg
shll
in
xor
mov
ret
sbbl
gs
orb
sub
dec
add
cmp
jns
cli
pushf
pop
jo
aaa
sti
enter
stc
xchg
push
and
loop
fdiv
xor
xchg
xchg
mov
jmp
xor
inc
cmpsb
pushf
or
out
je
iret
lret
es
jbe
shll
inc
imul
rcr
jne
neg
fsubl
dec
jne
repnz
orl
std
cmp
mov
inc
test
mov
pop
stos
jne
push
xlat
jp
adc
fcomip
push
cmp
jb,pt
add
repz
push
jle
xor
lahf
in
mov
test
add
test
lahf
fadd
cli
out
sbb
jnp
outsb
mov
dec
mov
dec
scas
mov
stos
or
mov
jae
je
cmp
xor
mov
mov
xchg
dec
xchg
cmp
mov
test
cmc
je
xchg
mov
pop
cmpsb
inc
jnp
adc
enter
inc
mov
mov
cmp
sub
mov
mov
adc
test
ret
mov
mov
cmp
mov
in
dec
xchg
shrl
dec
dec
lret
jmp
sbb
inc
es
movl
les
rolb
aaa
out
es
cld
and
xor
test
jne
outsl
and
pop
and
xorb
lods
stos
dec
mov
lret
jae
dec
inc
mov
sbb
and
mov
mov
fdivp
inc
aas
shll
xlat
pop
ss
rolb
dec
mov
inc
imul
roll
into
or
imul
fsubrs
fs
aaa
neg
xchg
inc
jle
inc
jbe
aas
in
test
xchg
add
andl
popa
sbb
jbe
popf
iret
jbe
lret
scas
fdivrl
xlat
icebp
jns
popf
cmp
jl
test
mov
inc
push
divl
addr16
xor
dec
push
ja
subl
or
add
or
mov
dec
xor
enter
insl
jno
in
inc
daa
cmpsb
lock
xchg
mov
jmp
je
inc
mov
repz
sub
sbb
sub
test
test
add
mov
mov
negb
pop
dec
addr16
ret
inc
mov
pop
stos
je
rorl
xlat
jge
out
inc
dec
fistpl
aam
mov
mov
lock
mov
out
sbb
int3
add
in
sbb
cltd
and
aaa
cmpsl
outsl
mov
mov
push
push
test
fstl
jecxz
ffreep
pop
lcall
inc
aaa
xchg
out
or
push
cmp
lcall
mov
jmp
outsl
pinsrw
bound
xchg
sbb
jg
daa
inc
push
lret
lret
dec
adc
cmp
pop
mov
int
xor
push
mov
push
add
and
mov
cmp
rcrl
mov
outsb
inc
sub
and
and
movsl
jp
jecxz
add
in
mov
hlt
mov
push
jnp
inc
push
cmp
lock
leave
leave
dec
lods
pop
js
dec
hlt
lea
xor
lods
int
adc
enter
jb
imul
push
testl
ss
and
mov
mov
jmp
mov
insl
push
orl
xor
adc
push
mov
in
xchg
jg
pop
and
ljmp
pushf
push
loop
adc
popa
and
sti
xor
xchg
or
mov
pop
pushf
xor
mov
sahf
pop
jl
cs
cmpsl
addr16
into
imul
out
add
shlb
dec
or
pop
test
iret
and
add
clc
nop
mov
sbb
lahf
add
ret
gs
cmp
stc
in
mov
ficompl
pop
mov
fcompl
mov
jmp
or
rcl
imul
xchg
push
add
sarl
mov
imul
cwtl
push
or
cmp
pop
mov
adc
push
dec
cmpb
dec
push
dec
loope
pop
ss
mul
xchg
sub
mov
leave
clc
cltd
into
pop
xor
dec
push
push
pop
js
aaa
xor
dec
xchg
insl
mov
ret
ds
add
das
push
aad
mov
pusha
cli
aad
or
je
push
sbb
fidivl
cmp
loope
outsl
adc
pop
arpl
cltd
cmpsb
xchg
into
adc
stos
pop
push
pushf
pop
fs
sub
orl
push
jb
movsb
xchg
adc
repz
xor
insl
cld
sub
jp
test
cli
enter
pop
std
dec
es
scas
in
xor
sub
push
and
push
das
ficomps
sbb
xchg
pop
and
sbbb
in
popa
insb
addb
lds
push
inc
aaa
fimull
mov
push
fiadds
mov
sub
fnstenv
mov
and
push
dec
sbbb
mov
dec
in
cmpsl
les
stc
jecxz
sbb
sub
jmp
iret
xchg
mov
pop
sbb
jle
sti
mov
sub
fiadds
mov
cmc
rorb
jnp
xchg
aas
ss
rcll
mov
stc
lahf
cwtl
xchg
sub
mov
dec
gs
push
push
cwtl
loope
insl
cmp
add
jecxz
pop
test
lods
mov
movsb
not
imul
xchg
mov
sub
dec
mov
fsubl
sub
lret
imul
pop
imul
mov
inc
sbb
and
fcomi
jno
mov
movsb
enter
clts
stos
ja
aad
lret
mov
ja
out
sbb
in
sbb
cmp
adc
clc
aam
insb
std
cmp
push
xchg
jg
mov
movsb
mov
in
sahf
cmpsb
push
js
cmpl
fisttpl
or
sbb
add
sbb
adc
add
enter
repz
add
shll
out
mov
repz
test
divl
movsl
xor
imul
or
ror
pop
xor
ja
mov
adc
or
lret
jp
and
or
aam
jmp
push
popa
push
mov
addb
or
xor
pusha
mov
out
jle
jecxz
mov
inc
pop
in
jle
jle
add
lahf
push
mov
nop
jbe
and
negl
mov
bound
jmp
or
xchg
cmc
arpl
jg
sbb
ffreep
lret
jp
ret
stos
mov
add
sbb
add
jmp
popf
je
ret
out
scas
mov
popf
push
cltd
outsb
xchg
cwtl
int
sbb
mov
mov
dec
mov
and
and
dec
cwtl
das
and
iret
nop
mov
divb
xchg
jbe
inc
fiadds
mov
jmp
jo
aaa
icebp
fwait
sub
and
fcmovbe
shll
sbb
dec
jge
mov
movsb
clc
mov
ja
adc
dec
adc
addr16
es
and
lcall
push
dec
sub
xchg
aad
aaa
push
adc
pop
sti
pop
pop
lods
xor
lods
inc
add
inc
cwtl
loop
es
jns
jg
mov
adc
mov
xor
mov
push
leave
mov
mov
sub
xor
or
adc
add
lock
mov
mov
imul
rorb
sbb
ss
cld
pop
in
jb
add
rorb
arpl
pop
mov
cli
mov
pop
pushf
jbe
icebp
mov
add
aaa
jp
outsl
add
mov
xchg
dec
and
xor
mov
scas
rclb
mov
xchg
xchg
imul
pop
push
cmp
mov
imul
data16
and
push
mov
cmp
xchg
repz
add
dec
pushl
mov
mov
ds
jmp
pop
rcr
sbb
arpl
in
adc
jp
or
inc
push
mov
pop
mov
cmc
cld
cmc
push
mov
add
add
pop
js
push
pop
jno
mov
sub
arpl
mov
imul
mov
sbb
push
lret
and
scas
xor
mov
roll
xor
clc
gs
std
loopne
mov
inc
mov
mov
inc
xchg
repz
xor
pop
push
sbb
lret
imul
jno
mov
out
fidivs
ret
cmpsb
dec
dec
pop
fimuls
insb
jg
cmp
ja
sbb
cmpl
or
hlt
adc
lahf
dec
insl
out
repnz
xchg
mov
dec
pop
adc
pmuludq
pop
ret
or
pushf
pop
shrl
push
lds
push
pop
out
xor
cmpsl
sub
jbe
push
sub
push
lahf
je
and
movsl
jecxz
daa
leave
into
and
in
mov
cmp
adcl
mov
enter
ss
test
mov
movsl
push
inc
repz
mov
out
ret
out
mov
imul
call
cmp
xchg
ss
hlt
sub
inc
mov
pop
stc
cmpsb
pushf
pop
push
sub
or
scas
pop
pop
sub
insb
mov
shll
mov
mov
and
gs
lret
lock
mov
pop
mov
decb
repz
test
cld
mov
jmp
jp
bound
stos
inc
pop
incb
lea
adc
fcom
pop
sbb
test
dec
xor
popa
jns
add
push
mov
push
push
loope
push
int
mov
clc
out
shll
lock
pop
stc
out
jle,pt
add
add
movsl
xchg
test
or
push
stc
movl
imul
out
sub
sub
cmc
sti
lcall
mov
adc
out
imul
jo
push
cmpsl
jle
div
in
jnp,pt
adc
loop
xor
sbb
dec
test
les
fdivrp
shrb
lret
dec
pop
shlb
cmc
pop
mov
fisubs
icebp
enter
or
sti
adc
jmp
lret
lahf
cmc
xchg
lret
fdivp
cmp
adcb
push
cmp
adc
jns
imul
xchg
jnp
mov
lret
push
leave
fisttpl
cmpsl
push
outsb
and
test
add
jne
call
pop
xor
repz
inc
pop
inc
cmp
xchg
sub
lock
jbe
mov
inc
adc
sbb
int3
jbe
push
push
movsb
fnstsw
fidivl
jb
sbb
or
das
and
rcll
mov
in
mull
mov
jb
out
mov
push
lahf
push
cmp
jns
push
lahf
push
fistl
aad
and
fcoms
int3
push
out
sti
pop
lret
mov
mov
push
mov
fucom
pop
movsb
jg
add
xchg
fdivs
cld
clc
push
roll
sahf
cmp
aad
ja
repz
inc
nop
push
mov
sub
ret
addr16
int
inc
pusha
adc
das
fists
lods
inc
add
out
cs
xchg
mov
je
divb
push
lds
neg
pop
jle
popf
and
jno
or
gs
inc
dec
sahf
stos
xchg
clc
jo
or
or
out
inc
fbstp
je
fs
stos
mov
mov
outsb
sbbb
idivb
push
lahf
jl
pusha
cmp
xchg
call
sub
mov
and
into
lock
lcall
in
adc
ljmp
cmp
jl
sub
flds
dec
arpl
addb
jbe
adc
cmc
test
and
outsl
stc
imul
cmp
mov
adc
les
pop
aas
adc
jbe
lea
push
push
sub
add
hlt
mov
outsb
add
dec
push
std
or
into
sub
out
pusha
mov
shll
lcall
ljmp
imul
filds
add
push
fildl
jge
jecxz
lcallw
lret
das
push
mov
cmp
std
loop
push
test
pusha
pop
scas
int
fcoml
aad
inc
int3
gs
out
sub
inc
push
inc
adc
and
and
push
xchg
arpl
sub
mov
push
or
mov
cs
outsb
repnz
pop
mov
mov
sbb
lods
sbb
mov
stos
jle
sti
ret
mov
loop
lds
push
cmp
sbb
xchg
aad
jg
inc
dec
xchg
sub
xchg
mov
pop
mov
ljmp
fnstenv
lock
ret
aas
fstpl
aas
cmpsl
aad
or
dec
out
push
int3
inc
pop
mov
in
cwtl
imul
dec
ret
arpl
push
cmp
cltd
sahf
and
xchg
jge
and
sbb
pop
cmpsl
add
xor
adc
movsb
and
shrb
rolb
pop
cmp
dec
sti
xor
ror
jmp
sbb
or
out
push
sarl
push
ss
shl
add
cmp
mov
jp
sahf
xor
and
xchg
inc
in
inc
pop
bound
inc
push
lea
int3
in
into
subb
cld
pop
stc
aas
aad
loop
mov
cmc
and
js
jmp
aaa
mov
jns
out
sub
es
xchg
dec
sbb
mov
xchg
ds
pop
push
cmpsl
mov
and
xchg
jb
or
dec
popa
inc
ss
mov
sbb
pop
mov
mov
or
dec
lods
fldenv
cmp
call
sub
stc
sub
push
xor
mov
cmpsb
mov
outsl
loope
call
dec
xor
out
std
stos
aaa
aaa
inc
add
sbb
sub
adc
cld
sub
push
cmpb
inc
test
mov
jno,pn
sub
fxch
cmp
pop
fsubrs
movl
mov
mov
lret
test
insl
pop
mov
xchg
mov
lret
mov
aam
mov
push
jns
scas
cmp
imul
cld
test
mov
add
lret
ljmp
les
push
sarb
cld
clc
and
pop
sub
push
xchg
mov
loopne
mov
and
or
pop
sub
push
test
inc
fwait
pop
adc
pop
ret
adc
xor
ja
fistpl
xor
mov
push
mov
and
add
cmp
hlt
xor
jp
dec
or
dec
mov
cwtl
mov
push
xchg
pop
xchg
repz
das
loope
xchg
lods
fucomi
lcall
and
sahf
and
sbb
in
ja
and
dec
add
scas
std
push
sbb
and
or
idivb
pusha
shr
jge
jge
outsl
and
dec
shll
cmp
jne
pop
pop
jne
lret
dec
fisttpll
mov
repz
imul
lods
lods
push
fnstsw
shlb
xchg
mov
pop
popa
sbb
pusha
data16
in
gs
add
in
push
lret
xchg
xchg
push
movl
aad
mov
jle
sarw
rol
sub
mov
cli
loope
cmc
das
dec
or
mov
data16
push
cltd
inc
add
pop
xor
pop
cmpsb
inc
mov
pop
dec
int3
in
lods
inc
or
test
cmp
jecxz
cmpsb
adc
test
jecxz
daa
cmp
pop
mov
test
hlt
iret
sub
cld
divl
call
aam
lahf
or
cmp
pop
pop
xor
xchg
mov
or
in
jae
hlt
or
sahf
jno
fistpl
mov
cmp
adc
jbe
arpl
data16
stc
jge
sahf
ljmp
aam
push
jge
fldt
jl
sti
lods
jle
inc
mov
repnz
fiaddl
jae
xchg
jns
mov
fwait
mov
push
lea
std
pop
outsb
out
outsl
out
fisttpl
cmp
push
pop
js
push
adc
imul
movsl
dec
and
insb
xchg
cld
cmp
pop
stos
fs
inc
outsl
xchg
rcll
add
push
add
out
add
adc
sbb
jl
dec
sbb
out
pop
mov
cmp
fwait
ret
xor
mov
ret
mov
ret
adc
jns
dec
cmp
inc
in
fdivrs
or
sahf
or
pushf
rcll
int3
icebp
mov
orb
xor
lret
mov
jb
or
pop
adc
add
lods
push
and
mov
lods
bound
sarl
jle
subl
mov
das
and
roll
mov
lds
sarb
or
mov
gs
xchg
push
shlb
inc
scas
rol
popf
mov
add
xchg
dec
or
dec
jnp
push
push
fwait
inc
mov
mul
or
fisttpl
jmp
push
cmp
xchg
ljmp
and
lahf
jg
test
insb
pop
mov
in
test
push
fld
es
incl
cld
std
xlat
aad
adc
pop
jb
nop
jecxz
rcrl
pop
add
lods
movsb
mov
pop
xor
and
xor
xor
jnp
push
lods
mov
cld
stos
rcrb
stos
out
jmp
mov
fildl
in
fs
sub
gs
sub
cwtl
inc
mov
or
and
mov
jnp
and
pop
mov
rcll
scas
and
mov
pop
push
out
jmp
sbb
xor
clc
popa
hlt
sarl
pop
mov
sbb
mov
lcall
cmp
data16
in
xor
sbb
ss
sub
xchg
movsl
mov
rcrl
es
filds
in
and
or
sbb
cmp
sub
xchg
sbb
fistpl
fidivl
lahf
in
ds
lds
jbe
shrb
xchg
mov
out
xchg
jae
fmuls
lods
int
stc
dec
test
stos
mov
mov
mov
out
xchg
jg
adc
bound
push
fldenv
mov
push
sub
pop
cmp
aam
insl
aaa
pop
cmpsb
or
pusha
pop
dec
cltd
arpl
pop
fadd
xchg
fisubs
ds
cmp
xor
dec
or
sub
jge
xchg
xor
jmp
cli
push
mov
xchg
pop
insb
inc
pusha
pop
repz
jbe
or
js
adc
dec
sti
or
ficompl
loopne
mov
stos
xor
cmp
pop
pop
lods
sbb
ss
pusha
insl
repnz
lock
int
rcrb
push
int
mov
js
and
nop
scas
jle
sbb
xor
lahf
pop
fdivrl
mov
cs
sti
sbb
flds
adc
or
dec
add
int
add
ljmp
sub
pop
and
dec
mov
xchg
push
lock
movb
stc
gs
xor
jo
insb
in
fs
cmp
daa
xchg
inc
les
or
mov
mov
jae
dec
xchg
adc
sub
fisubl
aaa
dec
outsl
xor
jge
stos
iret
vprotd
ret
jge
subb
in
sub
fmulp
inc
pop
mov
fdivs
arpl
stc
pop
out
gs
mov
loope
adc
test
js
loop
dec
mov
and
sbb
sub
xchg
pop
or
or
ret
frstor
stc
push
aas
vphsubdq
inc
sub
ss
mov
and
addr16
add
data16
mov
sbb
in
or
push
dec
aad
xor
adc
push
jp
mov
int3
push
add
out
repnz
dec
jg
lea
decb
addl
and
mov
mov
mov
and
push
push
cmpl
push
inc
and
pop
pop
int3
daa
fsubrs
sub
in
jg
shlb
xor
divl
fstp
sbb
inc
jecxz
sbb
scas
roll
or
sub
pop
scas
fwait
sub
inc
mov
mov
in
rolb
int
sahf
mov
cld
and
jbe
cmpsb
and
subl
cmp
push
xchg
call
aaa
add
sbb
pop
test
push
addr16
insb
and
imul
imul
pop
and
data16
lock
mov
rorl
mov
push
arpl
aaa
push
aad
xor
test
call
lahf
arpl
pusha
dec
cmp
iret
cmp
lret
repnz
scas
stos
sarb
cmp
sti
scas
imul
mov
fnstcw
faddl
sbb
shlb
adc
cmp
or
mov
jae
imul
cmp
das
or
fisubs
xor
jo
aaa
jecxz
xor
in
nop
sub
dec
dec
mov
test
xchg
mov
mov
sub
ljmp
fnstsw
xchg
add
sub
div
fildll
inc
xor
call
jg
mov
sti
mov
pop
pop
mov
pop
mov
aas
jg
add
lcall
fdecstp
mov
in
mov
cld
fs
popl
andl
loopne
jnp
aas
mov
add
out
push
shlb
cmp
ret
nop
ljmp
xchg
push
ss
xchg
or
or
fbstp
stc
std
pop
jo
mov
mov
shll
repz
aam
add
lods
jecxz
cmp
test
sahf
ret
popa
mov
out
in
bound
cmpsb
inc
xchg
outsl
test
rclb
sub
and
pop
mov
stc
adc
inc
nop
or
out
dec
pop
lea
aas
jno
or
sqrtps
cld
xchg
mov
test
or
jge
and
inc
nop
pop
icebp
jo
xor
mov
test
mov
mov
xchg
or
xor
inc
dec
aaa
shrl
pop
cmp
mov
aam
jnp
pop
jmp
mov
movsl
inc
in
movsb
and
inc
js
orl
mov
xchg
cmp
fistpll
js
iret
push
imul
jp
or
mov
mov
fildl
test
loop
out
ljmp
in
clc
divb
xor
push
out
mov
pop
stc
dec
mov
arpl
adc
or
and
and
add
or
andl
sub
adc
and
or
adc
inc
jno
insb
lahf
ficoms
das
pop
jo
cbtw
stos
push
pop
xor
mov
in
cmpsl
sbbb
aas
fidivs
mov
sbb
xchg
pop
ds
and
cmp
addb
xor
cmpsl
lods
dec
call
in
mov
std
outsb
mov
cltd
dec
adc
and
les
test
lcall
fbstp
loop
adc
mov
faddl
xchg
xor
aaa
xor
pop
dec
mov
loope
insb
addr16
pop
imul
and
out
sub
mov
and
cmp
xchg
push
sbb
xor
pop
dec
imul
jl
lea
mov
push
cmp
jbe
cmc
mov
push
mov
pop
cmp
jmp
iret
dec
xchg
mov
cmp
adc
test
mov
cmpsb
pop
nop
jnp
mov
fcmovnu
sbb
cmp
adc
pop
xchg
aaa
insb
adc
jge
push
xchg
test
or
adc
daa
mov
or
add
rcr
fsubrl
pop
test
stos
js
js
xchg
out
adcl
movsb
out
adc
ss
dec
and
mov
arpl
and
sub
sbb
xchg
jp
lods
faddp
in
insb
mov
iret
adc
ficomps
mov
cmp
in
push
mov
out
mov
lods
and
in
and
fists
xor
mov
and
cmpsl
sarb
mov
add
sbb
clc
xorb
add
cmc
sbb
or
fisttpll
fidivrl
sbb
cmp
sub
pusha
xor
in
mov
aas
jnp
dec
xor
xor
xlat
orb
mov
xor
dec
mov
push
or
out
loope
mov
lea
mov
repz
and
enter
mov
shrl
push
mov
jnp
inc
push
faddp
sbb
mov
sbb
in
push
decb
mov
pop
rcl
ds
gs
je
cmovne
cmpsl
pop
jmp
xlat
xor
sbb
xchg
shlb
scas
call
je
and
lcall
sbb
sub
fisttps
lods
xlat
sub
jl
mov
mov
or
mov
sbb
clc
arpl
and
cltd
mov
je
mov
dec
sub
add
push
lcall
cmp
jmp
mov
or
jb
xlat
icebp
jb
sub
enter
lock
add
fidivrs
rcrl
mov
mov
int
in
cltd
call
leave
xchg
lret
mov
or
lea
jae
sbb
dec
fprem
cmp
icebp
sbb
pop
pop
push
and
push
mov
mov
sbb
pop
movsl
loopne
mov
addl
or
cmpsb
cmpsl
xlat
pop
popf
pushf
cmpsl
push
and
fbld
add
sbb
sub
add
outsb
jecxz
dec
cmp
adc
dec
mov
pop
clc
jmp
shlb
and
mov
movsl
inc
xchg
daa
pop
jl
call
and
cmp
js
xchg
or
mov
pop
call
or
mov
jno
add
das
outsl
pop
sbb
dec
sbbl
pushf
insl
pop
adc
jnp
ret
sbb
sbb
les
pop
into
inc
lahf
add
inc
jbe
cmp
jns
mov
lock
data16
xor
fldt
or
hlt
cmc
sub
movsl
jae
js
decb
sbb
pop
shl
hlt
add
imul
aas
in
xchg
pop
popa
mov
xchg
mov
inc
shlb
fcomip
xchg
jl
xor
in
pop
push
sbb
adc
ret
imul
negl
mov
sbb
faddp
das
mov
push
inc
into
mov
adc
pop
mov
mov
pop
fildll
lret
xchg
jge
adc
shl
adc
roll
lahf
xor
mov
idivl
movsl
in
cmp
pop
dec
push
mov
hlt
add
mov
adc
inc
jle
cmp
jge
test
jecxz
bound
scas
ss
mov
fdivl
ret
les
xchg
aaa
dec
ljmp
dec
push
dec
pop
mov
pop
cmp
pusha
sbb
outsl
inc
ss
aad
and
data16
lahf
fisubrl
or
nop
sub
pushf
mov
sti
loopne
push
xor
daa
sub
hlt
stos
pushf
jg
sahf
repnz
xor
mov
jmp
aaa
testb
mov
loop
arpl
xchg
negl
test
scas
aaa
sub
cmp
or
add
add
add
pop
cltd
cld
ret
and
fistps
push
pusha
ret
push
sbb
aad
mov
and
out
xlat
inc
push
or
ljmp
repnz
pushf
cmp
and
dec
ror
xchg
int3
insb
xchg
lret
movl
cmpsl
inc
jmp
stos
mov
mov
bound
pop
jmp
xrstor
shrl
xor
pop
inc
and
lods
out
push
movsl
daa
cli
imull
int3
xchg
cltd
mov
aad
pop
xchg
out
cld
inc
mov
out
jnp
dec
test
or
bound
push
fbstp
mov
push
sbb
mov
xchg
mov
or
das
ljmp
cs
cmp
xor
mov
bound
xchg
sti
sub
sub
add
push
into
dec
jnp
das
xor
jle
jbe
pop
cs
sarb
and
iret
js
test
insl
adc
jmp
sub
push
test
aaa
xchg
bound
and
imul
test
push
test
orb
cmp
aaa
out
mov
pop
push
jb
fcmovnu
mov
dec
stos
nop
push
xor
jo
push
outsb
ficomps
out
jbe
jmp
adc
incl
rclb
jge
jne
jae
pop
lahf
bound
mov
lret
fwait
xor
outsb
adc
stos
out
push
lret
mov
ljmp
dec
push
sub
stos
add
shll
ret
mov
repz
shlb
loop
aam
xchg
movb
pop
mov
jp
sbb
aad
je
cld
aad
das
sub
inc
cwtl
jns
mov
mov
pop
push
xchg
shr
outsb
sub
adc
or
push
xor
xor
push
test
mov
xchg
mov
ljmp
or
mov
dec
dec
sbb
mov
mov
add
in
outsl
arpl
or
push
push
and
inc
lods
xchg
sahf
imul
adc
sbb
rclb
pop
dec
repz
xchg
add
test
cmpsb
call
iret
mov
fs
imul
dec
imull
les
hlt
add
and
and
dec
test
std
xor
jbe
lret
jmp
pop
push
cmc
sub
inc
jge
movl
int
out
push
pop
insb
je
xchg
sarl
ja
sbb
movsb
xor
addr16
mov
jne
mov
hlt
push
push
arpl
adc
inc
xlat
adc
and
mov
call
xchg
jb
movl
dec
dec
sub
insb
push
loope
shlb
insb
mulb
ja
mov
out
stos
mov
popf
cmpsl
sti
pop
xchg
sti
pop
cmc
xor
push
cltd
sub
mov
jbe
pop
out
std
mov
dec
and
dec
aaa
pop
test
adc
push
lock
xchg
dec
cmp
loopne
jae
add
mov
cmp
imul
outsl
lds
sub
scas
movsb
mov
fdivl
xor
ja
lea
ja
das
add
mov
adc
es
fcoml
or
xchg
fstpt
jmp
out
cmp
les
sti
cmp
push
jns
clc
xor
fdivr
mov
xor
adc
sbb
addb
insl
push
in
adc
dec
mov
xlat
cld
gs
mov
and
mov
das
mov
lret
shrl
out
push
push
mov
inc
cmp
sbb
push
arpl
jns
add
mov
repnz
pop
cmp
xchg
pop
into
sbb
and
sub
sub
hlt
outsl
lahf
jmp
dec
int
xlat
outsl
xchg
push
mov
fsubr
xor
ljmp
or
xchg
movsl
iret
loopne
sub
js
dec
popf
xchg
sysexit
mov
iret
inc
pop
scas
cmpsb
das
enter
daa
shrb
jae
add
inc
inc
clc
fstl
pop
loope
adcb
or
je
rclb
sahf
sbb
xor
adc
cwtl
stos
in
ficoml
test
add
stc
ss
mov
pop
lret
fsubl
mov
and
shlb
push
iret
jne
mov
incb
mov
jnp
mov
js
pop
or
and
adc
or
inc
xchg
dec
lea
and
mov
mov
dec
push
sub
add
mov
add
jae
sbb
rcr
rcrl
lods
aas
sbb
imul
or
sbb
cmpsl
in
mov
rcrb
loopne
loope
inc
stos
sbb
lods
repnz
stos
fisubrl
xchg
lret
xchg
loope
sub
enter
pop
push
fildll
sbb
push
jnp
add
push
sahf
xor
ret
adc
aaa
inc
dec
daa
arpl
jae
dec
out
call
jbe
jmp
jno
dec
lds
shrb
and
fisubrl
mov
dec
sub
jb
shll
or
loopne
out
pop
loop
adcb
sub
cmpsb
daa
loop
mov
and
shrb
jmp
and
js
rclb
adc
push
mov
std
ret
lret
mov
in
pop
test
lds
jns
arpl
and
mov
sbb
mov
fwait
add
gs
mov
shll
mov
cld
enter
shrb
into
and
xchg
btr
pop
or
xchg
push
xchg
xchg
aaa
aam
xlat
or
arpl
js
fs
or
cmp
lret
adc
pushf
push
mov
movsb
insb
sarb
xchg
pusha
lods
lahf
dec
in
push
movsl
xchg
add
enter
add
scas
sub
mov
lahf
int
pop
push
inc
push
movsl
lret
add
mov
mov
push
and
cmp
or
lds
arpl
les
adc
insb
test
pop
fnstenv
or
jl
jle
cs
xchg
ds
dec
mov
push
leave
nop
or
push
movsb
xor
lea
or
xchg
outsb
jle
ja
mov
pcmpeqd
or
pop
sub
pop
mov
xchg
sbb
dec
pop
stos
iret
or
mov
inc
jecxz
and
sub
push
les
mov
hlt
adc
pusha
fs
mov
mov
lret
sub
push
das
insl
push
mov
push
pushf
inc
mov
push
scas
outsb
enter
sbb
jl
mov
fdivr
add
mov
stos
sbb
sbb
sub
cmpsl
sbb
mov
cmp
adc
sbb
xor
lock
mov
rcl
sbb
inc
mov
fisubs
lret
sbb
pop
ds
shr
inc
xor
inc
xchg
pop
loope
sbb
cmp
lock
std
mov
into
xchg
push
insb
dec
mov
mov
xchg
push
into
push
icebp
std
add
mov
mov
andb
mov
int
dec
add
inc
pop
gs
and
gs
aaa
js
mov
or
fsub
mov
dec
add
cmpsb
insl
outsl
shufps
mov
cmp
xchg
mov
xor
in
lods
and
mov
and
adc
mov
out
and
cltd
inc
pop
cmp
jne
rcl
mov
pop
ret
lods
adc
adc
stos
popw
gs
mov
cltd
cmp
insl
bnd
imul
xor
cmp
adc
mov
push
insb
mov
ret
repz
pop
mov
add
out
adc
jecxz
fsub
dec
rcr
sbb
sbb
pop
out
pop
and
mov
mov
sbb
js
cmpsb
pop
aaa
std
rorl
fisttpll
xor
cmp
mov
and
or
pop
dec
jmp
inc
xchg
clc
loope
jp
xorl
movsb
and
repz
jp
nop
dec
aas
frstor
es
pop
pop
outsb
rcll
out
and
scas
mov
stos
sub
adc
pop
repz
fdiv
or
dec
fbstp
add
push
add
call
jl
hlt
mov
movsb
in
xchg
mov
mov
adc
gs
push
jns
out
sbb
rol
adc
adc
lods
add
imul
add
ja
pop
in
pop
and
es
clc
iret
xor
dec
test
dec
cmp
jns
cwtl
xor
mov
fucomi
inc
fs
cltd
push
pop
lahf
fmull
or
adc
jne
lcall
in
push
push
push
and
cmp
push
jl
mov
jno
or
push
mov
jmp
lahf
mov
jl
pusha
stos
test
sbb
pop
jae
cmp
inc
dec
add
into
notb
int3
and
pop
popa
mov
pop
mov
test
fsts
push
imul
push
adc
loop
mov
inc
jo
movsl
xor
mov
mov
imul
inc
or
pop
pop
lds
jb
in
data16
nop
arpl
dec
pop
mov
addl
addb
xchg
cmp
jecxz
das
and
mov
pusha
mov
push
out
pop
rolb
notl
in
sub
inc
mov
or
lods
aas
subb
cmp
inc
mov
add
cmp
push
push
lcall
sbb
inc
mov
iret
mov
dec
les
push
into
repz
push
fildll
xchg
mov
xlat
push
jne
or
sbb
gs
mov
cmp
jae
inc
out
sbb
andl
lds
dec
pop
and
mov
adc
loop
xor
lret
lock
mov
sahf
das
repnz
pop
inc
es
pop
push
mov
in
jmp
and
int
ja
enter
push
push
push
cwtl
subb
dec
or
ljmp
add
xchg
xchg
out
bound
push
pusha
in
or
xor
std
sarl
pop
je
add
loope
repnz
lea
cld
cmp
out
faddl
gs
xor
aam
popa
mov
lods
lds
xchg
cbtw
add
adc
lcall
jns
lahf
mov
fists
inc
cmpb
out
rcl
ret
sub
aad
mov
xor
aaa
faddl
mov
and
cmp
cmpsb
pushf
mov
xchg
out
mov
adc
dec
lcall
adc
add
mov
adc
mov
in
pusha
pushf
scas
cmp
out
in
xor
jno
inc
js
cmp
in
xchg
fwait
ret
sbb
pavgw
dec
stos
enter
icebp
sub
and
xor
or
push
mov
adc
ret
mov
add
inc
lahf
push
scas
cltd
fmul
jmp
mov
push
pop
test
sti
aas
jp
mov
aam
cwtl
stos
mov
sub
imul
mov
scas
jo
dec
xchg
outsl
neg
int
rcrb
dec
sahf
mov
ljmp
cmp
fcmovnb
inc
rcl
or
inc
cld
gs
cwtl
jmp
jnp
hlt
popf
push
mov
les
mov
mov
rcr
sub
cmp
ss
jae
fs
mov
data16
into
sbb
dec
fmull
into
or
and
rcrl
xor
arpl
mov
divb
shl
sahf
les
sbb
cmpsb
jmp
stos
popa
popa
inc
inc
dec
xchg
lret
add
jbe
out
scas
into
jl
repnz
adcl
scas
repz
fsubs
mov
sbb
xor
cmpsl
dec
or
orl
dec
cltd
cmp
add
pop
test
push
adc
lret
or
pop
inc
sub
test
push
in
lahf
dec
mov
pop
and
aam
rclb
pop
lea
sbb
mov
adc
or
push
fidivrl
mov
imul
sub
sub
jns
cwtl
sbb
push
mov
pop
mov
adc
out
imul
out
inc
lahf
cmp
test
movsl
pusha
or
popa
push
push
aad
leave
pop
mov
jp
pop
addr16
add
divl
jno
adc
fwait
xorb
mov
aas
insb
push
popa
and
mov
adc
repnz
repnz
sbb
clc
mul
sbb
into
cld
data16
add
mov
and
popf
xchg
xchg
add
xor
ja
scas
jno
imul
or
movb
mov
call
pushl
incl
push
mov
sbb
das
lods
adc
cmp
stos
fstl
add
dec
addr16
and
pop
mov
andl
imul
in
pushf
jl
sub
jecxz
dec
addr16
jl
and
scas
lods
and
lods
scas
out
lret
data16
ja
push
push
dec
xor
lret
mov
xchg
sar
inc
xchg
fisubrl
pop
or
mov
mov
cmpsl
sub
jl
outsl
ljmp
pushf
in
les
cltd
inc
sbb
sub
mov
sub
xchg
cld
pop
test
popf
ljmp
mov
rol
or
xor
jbe
cmp
cwtl
sarl
add
push
and
ljmp
pop
push
imul
sbb
sbb
push
add
out
jecxz
xor
cmp
mov
arpl
push
aas
mov
cs
dec
xchg
fisttps
sbb
sbb
dec
jo
lods
stc
ret
sub
rorl
xchg
sbb
jb
in
sti
mov
mov
jnp
lds
es
push
test
jmp
das
push
push
dec
mov
sbb
cld
lock
adc
ljmp
mov
pop
sbb
data16
xchg
add
mov
mov
andb
divl
cld
inc
daa
push
xchg
mov
sub
aas
push
dec
aam
add
sbb
lds
mov
aaa
push
fs
cmp
mov
ljmp
idivl
mov
sar
jb
clc
icebp
xchg
push
aam
cwtl
jl
aad
push
bound
fldl
sub
loop
aaa
dec
sub
mov
popf
mov
ja
daa
popa
scas
stos
ficoml
orb
testb
push
cmpl
pop
push
push
incb
lods
jbe
push
pop
movlps
je
adc
jo
jns
xchg
push
lret
movsb
sub
xor
cmp
xchg
mov
sbb
sti
xchg
scas
dec
aad
inc
sbb
jns
xlat
inc
out
fisubs
lods
mov
pop
lock
insb
and
addr16
xchg
xchg
cmp
xchg
popf
mov
sub
cli
nop
ljmp
test
bound
ljmp
dec
mov
ja
ljmp
mov
inc
iret
in
mov
repz
xor
pop
cltd
xlat
out
out
aam
pop
push
or
pop
jae
std
dec
repnz
sub
out
lcall
sbb
push
insl
cmpsl
icebp
pushf
cmp
pop
pushf
sub
leave
ret
addr16
xor
sub
xchg
outsb
mov
inc
xchg
push
adc
pop
test
xor
sub
push
xchg
je
ficoms
or
jge
add
fnstsw
dec
push
mov
jno
addr16
cmpsl
cli
cmp
jae
push
imul
mov
pop
mov
mov
dec
into
cs
inc
jb
push
xchg
fs
mov
fadds
stc
xor
push
enter
push
and
mov
mov
pop
jl
shlb
and
loop
movb
dec
jg
inc
in
add
int3
fadds
mov
push
pop
inc
and
lret
pop
jno
scas
jbe
pop
pusha
xchg
fbld
pop
call
add
jne
adc
ja
add
movb
loope
lds
adc
test
mov
push
sub
inc
cmp
cmp
xchg
negb
in
dec
cwtl
sbb
repz
leave
and
fdivrs
test
adc
cltd
dec
sbb
jns
pushf
dec
jg
inc
cmpb
inc
mov
mov
inc
shrl
jns
out
scas
pop
jmp
outsb
mul
popf
movsl
mov
cmp
or
mov
mov
aad
cmp
sti
subl
lods
cltd
sub
sti
loop
movsl
jnp
mov
cmp
decl
loopne
mov
xor
adc
fdivs
js
add
sub
sub
jecxz
jg
scas
cli
push
lods
iret
cmp
add
xchg
pusha
arpl
decl
rcll
stos
mov
cld
ret
iret
mov
call
dec
xchg
pop
inc
or
jmp
fst
mov
push
rcl
divb
and
out
sti
in
call
inc
adc
adc
cmp
pop
push
cmp
pop
dec
and
mov
mov
faddl
dec
fimuls
inc
or
xor
add
push
ret
out
jp
push
add
pop
sti
pop
in
xor
stos
cmp
das
test
xor
jnp
xor
and
pusha
fsts
bound
mov
cmp
inc
pop
pop
pushf
adc
ss
loop
push
lods
cmp
push
xor
adc
repz
ret
ljmp
xchg
fildl
xchg
in
bound
inc
imul
or
sbb
dec
pop
sub
orb
aam
mov
outsl
div
fsubrp
mov
orl
adc
xchg
cmp
mov
cli
and
mov
and
stos
lods
add
jge
xor
mov
addr16
jp
addr16
sbb
sbb
xor
sub
dec
mov
xor
mov
sbb
ret
push
repz
mov
into
adc
and
fldt
hlt
adcb
in
jns
pop
je
ficomps
cmpsl
sbb
mov
inc
lock
aam
xchg
daa
out
pop
es
mov
shr
sbb
xchg
fcomps
mov
or
fldt
add
daa
ljmp
ret
scas
and
rorb
cmp
jl
cmp
jp
cltd
data16
aam
pcmpeqw
jecxz
sub
or
loopne
sahf
int3
pop
push
xor
rcll
inc
popa
mov
adc
testl
xchg
mov
lock
movsb
mov
sub
sub
dec
jae
add
inc
sub
fcomp
popa
pop
cmp
mov
add
out
xchg
jg
lods
jnp
add
dec
and
xlat
mov
stc
xchg
test
ljmp
mov
mov
mov
iret
xor
arpl
pop
dec
dec
in
dec
cmp
jecxz
ds
push
adc
into
pop
dec
jno
cmp
or
push
xchg
out
andb
addb
mov
stos
push
scas
popf
test
inc
jbe
jnp
les
jge
test
xchg
movl
add
and
bound
xchg
cmp
sbb
add
test
test
or
inc
jne
fsub
outsl
mov
mov
cltd
mov
and
pop
insb
jno
inc
mov
or
lods
lret
loope
les
jb
dec
out
inc
and
xchg
mov
ret
aas
fwait
mov
enter
int3
jb
xchg
fwait
sub
test
mov
dec
leave
mov
xchg
jp
scas
mov
xor
sbb
aaa
stc
adc
xchg
jecxz
mov
shll
int3
sbb
mov
xor
add
jnp
cs
jb
and
lret
movsb
addr16
adc
repnz
sub
push
cltd
dec
mov
xlat
jnp
and
cltd
xchg
mov
into
in
lcall
xchg
or
mov
in
inc
mov
jmp
dec
sub
leave
in
dec
jl
add
xrelease
dec
add
jl
dec
push
xor
inc
mov
std
call
jle
adc
push
xor
sahf
fisubrl
mov
pop
or
lret
insl
mov
sti
jl
shrb
imul
ret
or
fadds
in
inc
push
push
jecxz
jo
mov
cwtl
ror
push
jg
daa
out
ja
sub
leave
xor
cmc
dec
pushl
inc
sub
pop
pusha
addr16
popf
mov
movsl
stos
dec
mov
shll
adc
aaa
lahf
push
push
cmp
inc
lret
jbe
adc
repnz
xchg
rcll
in
insl
mov
popf
push
clc
mov
rcrb
in
or
into
mov
insb
out
sbb
jo
add
out
lcall
cmp
add
mov
dec
jge
mov
scas
cltd
pop
sub
mov
sbb
xchg
test
cmp
jecxz
add
push
jo
lods
in
pop
scas
lret
pushf
mov
cli
rcrw
jno
pop
aas
lds
dec
jne
add
xchg
inc
fisubrl
xchg
iret
out
jne
push
cmpsl
mov
cmp
ja
lret
push
movsl
dec
xor
jl
cmc
aas
sbb
into
sub
dec
adc
mov
aas
push
fildll
mov
and
in
orps
jp
add
test
insl
sub
bswap
and
inc
dec
or
sbb
inc
cmp
lret
or
rorb
lret
xchg
out
adc
in
enter
arpl
aad
jo
xchg
xor
cwtl
add
dec
repnz
sbb
mov
popf
pop
enter
adc
push
pop
push
pop
sti
xor
stc
stos
jbe
mov
mov
cmp
out
cltd
enter
test
cs
pusha
mov
out
cmp
out
or
shll
push
dec
loope
clc
in
xchg
adc
outsb
xor
ret
out
push
shl
sub
out
lds
cmp
adc
jnp
or
imul
ds
repz
dec
shlb
js
xor
inc
dec
imul
mov
fsts
add
ja
fisttps
test
stos
adc
dec
mov
sub
mov
lcall
in
mov
insl
pop
jne
rorb
pop
sarb
sbbb
call
out
xlat
ss
cs
sub
insb
mov
hlt
sub
fldt
and
mov
aas
sbb
fcmovu
in
das
pop
popa
adc
das
bound
sbb
push
sub
mov
sub
cmp
fdivr
fxch
es
xchg
sarl
cli
adc
mov
lcall
xchg
je
sbb
pusha
push
mov
rcll
loopne
mov
xor
out
fcoms
mulb
jmp
adc
adc
rolb
mov
sbb
xchg
clc
stc
loope
xchg
inc
xor
pop
cmp
daa
aam
and
mull
sub
xorl
xchg
jbe
js
les
sbb
add
mov
js
int
aam
push
cmp
arpl
jmp
movsb
push
outsl
push
or
jecxz
fsqrt
adc
pop
xor
mov
das
movsb
hlt
add
in
pop
pop
dec
data16
adcl
mov
sbb
pop
loopne
cmpsl
sub
sub
prefetch
mov
cmpsl
ljmp
pushf
xchg
jg
dec
flds
idiv
ret
test
aas
stc
imul
lret
daa
add
aam
lods
pop
push
sbb
add
movl
call
js
sub
mov
sub
lret
xchg
stos
push
clc
mov
or
movsl
movsl
outsb
scas
je
in
sbb
pop
repz
fdivrs
xor
inc
in
cmp
je
pop
jo
push
or
cld
or
push
out
in
mov
push
iret
jbe
adc
inc
mov
push
imul
test
std
setno
cwtl
dec
xor
icebp
int
into
mov
loopw
mov
push
jl
pop
fsubrl
dec
inc
out
insl
outsl
sbb
test
push
add
enter
mov
sub
mov
fcomi
sbb
adc
xor
xchg
jp
fdivp
push
xchg
push
dec
push
and
mov
mov
adc
xor
mov
scas
cmp
inc
cmp
pop
movsb
ljmp
dec
add
cmp
pop
aaa
push
cmp
shlb
lods
xchg
lods
cmpsb
in
push
mov
inc
adc
jge
and
in
int
adc
lcall
mov
jl
xor
scas
mov
cltd
mov
sub
or
addr16
es
into
xor
add
xchg
outsb
lret
mov
fbstp
adc
push
dec
sbb
or
das
fldcw
into
int3
dec
fs
mov
imul
imul
scas
pop
outsl
jbe
or
jo
cmpsl
out
xchg
movsb
enter
xor
mov
gs
cmp
xchg
sub
adc
jg
sbb
dec
xchg
xchg
ljmp
sbb
mov
or
jmp
add
bsr
push
loop
clc
sub
pop
pop
enter
push
popf
sub
xlat
push
lret
test
pushf
cmp
lcall
in
fdivl
jmp
loop
cmp
neg
mov
nop
es
push
ljmp
cmp
xchg
cmp
hlt
into
test
pushl
inc
stos
idivl
cmpl
mov
mov
lcall
push
add
sub
aad
subb
mov
int3
push
dec
xor
ja
popf
xorl
jge
or
pop
dec
inc
clc
mov
fisubl
orb
jp
push
shlb
rcrl
adc
mov
xchg
mov
bound
mov
pop
repnz
jge
iret
loop
xchg
pop
stos
xchg
xor
jp
push
lock
xor
lret
cwtl
push
aad
test
inc
push
and
jb
hlt
scas
sbb
or
mov
cmp
in
popf
mov
cmpsl
adc
int3
mov
mov
inc
xchg
push
stc
mov
je
cltd
and
or
loope
push
cli
xor
xlat
sbb
jle
pop
in
test
adc
pop
sbb
adc
pop
popa
sbb
mov
xchg
cmpsl
push
sti
cmp
lock
nop
mov
push
mov
xor
xchg
insl
and
loope
cmp
sub
push
mov
dec
loopne
dec
xor
fstps
sub
xchg
adc
and
rorb
cld
rcr
dec
mov
stos
pop
lods
jnp
cmp
negl
and
xchg
add
sbb
xchg
mov
out
lds
mov
and
icebp
push
sub
mov
into
jae
jae
sbb
and
popa
arpl
sub
xchg
jle
rclb
fidivl
ret
cwtl
and
cs
clc
adc
mov
sti
stc
fisubs
add
xchg
and
xchg
ljmp
fcmovb
sbb
mov
add
lods
and
arpl
test
push
cmpsb
xchg
mov
mov
repz
cltd
outsl
cs
das
nop
or
jo
movsl
jl
jbe
dec
mov
mov
or
sub
shlb
test
or
xlat
les
inc
js
sar
clc
sub
add
movsl
lcall
xrelease
add
push
pop
into
std
cwtl
xchg
sbb
and
jns
scas
mov
jb
mov
mov
xor
addr16
jne
jg
push
inc
movsb
cltd
loopne
sti
and
iret
inc
mov
sub
push
fdiv
dec
movsb
shlb
adc
mov
sti
orl
mov
ret
pop
push
push
push
xchg
jmp
xchg
out
test
shl
ja
pop
jg
stos
pop
sub
pop
mov
or
mov
cmpsl
das
daa
insl
sar
push
mov
jle
aam
push
ret
leave
add
imul
movsl
in
cmp
icebp
out
ja
inc
mov
icebp
das
jge
cmp
cmp
jae
inc
imul
and
test
pop
orl
mov
scas
out
mov
jns
loop
adc
mov
outsb
je
mov
cmp
cld
push
stc
cli
fiadds
mov
cld
insb
sti
mov
push
mov
sti
dec
mov
push
fsubrs
mov
addr16
idivl
test
push
in
push
xor
lods
pop
xchg
leave
testb
in
jge
movsb
jno
sbb
cmc
out
and
das
fcmovu
shll
jecxz
dec
xor
pushf
out
icebp
mov
sbb
arpl
xchg
icebp
js
ret
jl
insb
aas
pop
popa
mov
pushf
popf
and
fnsave
pusha
and
int3
popa
popf
subl
int3
cwtl
roll
imul
add
outsl
mov
push
test
mov
jmp
sub
popl
ror
pop
pop
inc
dec
aas
in
jle
mov
fs
sub
jg
mov
mov
inc
ss
mov
ret
adc
xor
mov
mov
jl
mov
xor
sbb
shlb
or
pop
sbb
pushf
daa
shll
add
xchg
ret
xor
aad
cmc
push
jecxz
jge
mov
or
cmc
dec
add
push
dec
out
stos
fnstcw
push
inc
add
movsl
dec
or
ljmp
cmp
sbb
notl
test
sub
push
and
pushf
sub
lock
pushf
mov
push
push
pop
push
subl
xchg
ret
pusha
subl
jbe
inc
bound
popa
push
leave
call
fimull
sbb
inc
fs
cltd
repnz
dec
lcall
pop
in
pushf
lret
repnz
rorl
pop
sbb
test
aad
mov
dec
ret
jle
xor
jnp
pusha
leave
or
jge
mov
icebp
in
or
lret
sbb
aad
repz
mov
sub
or
jle
leave
ret
or
sub
sbb
xor
or
inc
call
mov
addb
mov
negl
xorl
dec
adc
adc
xor
adc
push
arpl
or
movsl
adc
fdivrl
repz
push
insb
ja
mov
decl
idivb
shrl
pop
mov
sbb
test
dec
xchg
imul
sbb
loope
lcall
sub
or
jge
add
jmp
enter
add
outsl
ret
call
mov
push
scas
jae
imul
fsts
push
xlat
mov
dec
xchg
sub
pop
outsl
ljmp
cld
dec
mov
adc
pushf
or
xchg
push
outsb
pop
rclb
cwtl
aaa
pop
call
bound
xchg
sub
cwtl
adc
pop
paddq
hlt
out
mov
leave
xlat
pop
and
cmp
mov
adc
dec
mov
repz
jmp
xchg
movsl
push
fistl
dec
xchg
mov
pop
sbb
std
mov
packsswb
jne
mov
mov
push
mov
pop
fistps
int3
cmc
mov
insb
or
cmp
jmp
push
cmc
call
sub
clc
nop
sbb
pop
sbb
pop
inc
popa
ds
dec
test
sbb
cltd
mov
mov
jae
pop
enter
in
sbb
icebp
stos
xchg
jg
clc
loope
mov
jb
in
push
xor
ds
lahf
fidivrl
inc
xchg
mov
aad
push
push
popf
add
and
pop
inc
and
and
jne
inc
leave
fdivs
aad
int3
idiv
add
fistl
fcmovbe
lods
mov
lret
dec
lea
xchg
mov
push
sbb
push
push
mov
inc
insb
jge
subb
loopw
negb
sti
push
and
fists
aad
jne
push
jo
pushf
cli
in
mov
mov
xchg
or
daa
xlat
fwait
sub
jle
push
mov
cmc
push
lcall
push
out
fs
dec
fadd
lock
add
movsb
cmc
xchg
cli
fs
cli
mov
outsl
jecxz
lods
sahf
scas
sub
mov
add
sahf
mov
push
out
fcmovnbe
in
lods
das
cmpsb
test
jmp
dec
scas
mov
loope
and
cmp
push
dec
fmuls
cltd
clc
loopne
stos
inc
xlat
jne
dec
fld
mov
adc
ja
and
cs
push
pop
cmp
xor
testb
sar
push
push
js
data16
or
test
pop
jae
fnstcw
add
xor
cmpsl
or
mov
pop
lds
test
ficompl
cwtl
sar
fbld
push
arpl
call
es
aaa
dec
dec
sbb
pop
pop
push
testb
jo
into
adcl
push
movsbl
icebp
or
int
cmp
xchg
pop
cmp
or
mull
ja
mov
inc
jmp
lock
xor
mov
xor
cmpsl
mov
dec
fwait
pop
xchg
adc
jge
subb
bound
cld
sub
lret
sbb
out
mov
sbb
das
xor
xchg
jle
adc
sbb
cmp
cli
int3
fadd
sbb
scas
cwtl
cmp
xchg
iret
stos
in
xor
jle
cld
je
inc
call
sub
xchg
fsubrs
and
cmp
inc
sub
lods
out
mov
popl
pop
popa
inc
mov
mov
pop
test
outsb
ss
mov
xchg
dec
push
sbb
push
sbb
subb
jle
push
bound
cmpl
cmp
in
mov
adc
xchg
fs
fxtract
sub
subl
xor
ficoms
cmp
std
fwait
adc
add
loop
push
push
jnp
out
ds
add
in
ljmp
dec
sbb
and
test
ret
bound
cmpsl
pop
mov
das
inc
xchg
outsb
xor
push
into
sub
push
sub
push
aaa
imul
loopne
and
jbe
jge
subl
incb
call
inc
adc
es
outsl
aaa
jl
outsl
sahf
sahf
inc
xor
stc
ljmp
sub
dec
xchg
fistpll
repz
cmp
icebp
mov
pop
iret
jge
mov
mov
rcl
fists
lret
push
mov
cmp
int3
xchg
jle
jne
mov
xlat
pop
imul
out
mov
dec
cmp
repnz
push
sub
test
lcall
icebp
aaa
call
jo
push
inc
pop
mov
sbb
pop
ret
test
and
or
xchg
daa
ficoms
lods
ja
push
pop
adc
cwtl
out
add
mov
ss
mov
mov
mov
cmpsb
nop
lcall
imul
lret
leave
xchg
jmp
das
inc
jae
cmp
bound
push
shl
mov
arpl
pusha
jmp
mov
mov
push
pop
cmpsl
mov
cmp
pop
mov
push
pop
mov
sub
nop
popf
sbb
sub
dec
xchg
sbb
jmp
aaa
add
jo
jns
push
lods
sbb
in
dec
mov
rorb
cwtl
mov
sahf
out
pop
ss
mov
lcall
cmp
pusha
xor
dec
xor
add
mov
cmp
pop
pop
icebp
sbb
out
das
popl
neg
mov
das
dec
push
and
dec
pop
mov
xor
mov
in
js
xchg
lods
cmc
or
push
call
lock
dec
lcall
orl
mov
adc
mov
xor
adc
xor
and
or
popl
jmp
adc
fs
cmpsl
popf
sbb
dec
insl
xchg
push
cmp
aaa
enter
dec
jmp
push
out
and
push
jne
rep
jae
xor
jne
cmp
xor
in
shll
fsubrp
imul
sub
jge
jg
pop
and
sub
and
xchg
jb
dec
add
sbb
out
mov
data16
mov
lahf
and
mov
add
lret
and
fsts
js
sub
or
pop
pop
shl
sub
sbb
in
fldenv
cmp
imul
lcall
sub
pop
cs
in
mov
mov
stos
xchg
jb
jg
sbb
cld
push
jno
xor
cmp
mov
lret
cltd
int
push
mov
pop
adc
xor
filds
enter
adc
mov
push
lds
push
lods
or
rolb
mov
stos
jne
stos
pop
xchg
mov
mov
add
dec
cwtl
xlat
sbb
fwait
mov
test
push
jmp
vpaddq
outsb
xchg
sbb
cwtl
mov
sub
and
mov
cwtl
ja
xor
pushl
lret
out
push
xor
xor
daa
push
sarl
inc
pop
shrl
call
and
mov
pushf
pusha
push
mov
xor
dec
xor
subl
pushl
icebp
cmp
rclb
ficomps
pusha
mov
les
jmp
cmp
adc
or
aaa
and
dec
call
sub
pop
insb
dec
scas
scas
xchg
fmull
jge
jae
mov
mov
je
sub
jecxz
enter
sbb
dec
sub
or
nop
push
inc
test
insb
pop
push
mov
mov
push
pop
cli
jle
push
in
insb
and
sbb
and
xor
xchg
std
movb
adc
loop
adc
push
mov
imul
push
cmpsb
push
sbb
fildl
xor
mov
inc
mov
mov
stos
imul
add
mov
pop
or
popa
xor
out
inc
test
xor
mov
in
push
sub
mov
mov
lods
adc
mov
stc
in
xchg
or
sub
xchg
sbb
std
pop
xchg
sbb
dec
adc
add
xchg
ss
jecxz
rorb
loop
jge
jno
xchg
fistpl
mov
and
lcall
ljmp
cld
enter
vpinsrw
sub
scas
and
insl
dec
ds
loopne
xor
cmp
aam
xor
int3
or
xchg
in
and
les
fs
lock
mov
scas
inc
mov
or
sarl
xchg
scas
call
xor
iret
movsb
jb
cmp
add
jbe
scas
jnp
jle
out
push
mov
imul
inc
mov
mov
ret
cltd
lcall
sbb
aad
dec
in
pop
add
jmp
sub
add
jb
gs
pop
push
and
dec
pop
cmp
sub
js
lods
imul
cmc
dec
sti
aam
sub
jns
push
mov
jle
in
into
cmc
rol
rol
shll
or
mov
outsb
inc
imul
enter
in
stos
sbb
jmp
cmp
mov
push
loope
es
add
les
ret
sti
push
xor
add
dec
enter
outsl
adc
cmp
or
out
xchg
insb
data16
dec
shr
int3
repz
cs
add
out
in
or
sarb
ds
call
mov
mov
mov
xor
pop
adc
mov
jo
inc
or
iret
imul
mov
mov
xor
jg
roll
lods
rolb
dec
xchg
stc
and
pop
adc
add
enter
cmpsl
icebp
btr
scas
pop
sub
sub
int
out
js
sub
push
mov
mov
adc
repnz
mov
push
lahf
je
fucomip
insb
mov
xchg
imul
jno
sub
mov
insb
pop
int
repz
adc
addr16
ja
test
fld
push
fwait
scas
popa
xor
adc
mov
lret
addl
cmp
sbb
cmpsb
sub
clc
xchg
test
pop
push
lret
push
push
mov
and
push
sub
dec
dec
outsl
add
jae
and
push
mov
stos
or
mov
lcall
inc
or
push
xchg
push
aam
dec
jnp
mov
aam
int3
mov
jns
pop
movsb
adc
les
out
pop
ljmp
shll
cmp
push
gs
dec
shll
into
lds
jge
lods
pushf
ja
sbb
stc
cmp
aad
sub
jle
ss
jo
mov
inc
lods
mov
dec
sub
mov
loopne
rcrb
repz
inc
lret
mov
fisubs
std
pop
insl
jns
adc
and
cltd
test
clc
shlb
outsb
sbb
push
loopne
scas
ret
lahf
pushl
jbe
mov
leave
test
negb
add
test
cmp
and
gs
add
cmp
adc
jl
shrl
ret
sub
fwait
xor
xchg
loop
les
cmpsb
push
bound
int
popl
sbb
rorl
mov
cwtl
mov
xor
pop
jle
mov
and
enter
jmp
jnp
or
lods
push
mov
lods
add
mov
jnp
push
mov
aam
inc
xchg
push
repz
cmp
pop
sarb
jo
test
dec
rol
arpl
and
push
cwtl
cld
lcall
adc
pop
rcrl
jp
xchg
pop
adc
out
ffree
mov
push
cmp
mov
adc
fistps
ljmp
lret
and
inc
add
sahf
push
pop
outsl
jns
enter
adc
fdiv
sbb
mov
test
add
mov
outsl
inc
and
out
xlat
pushf
lods
inc
repz
sarb
loopne
cmpsb
into
mov
les
mov
push
les
push
pop
cmc
in
rclb
sti
adc
add
dec
and
or
stc
fdivrl
pop
push
jo
imul
xor
stc
adc
stos
adc
and
jmp
insl
popf
xchg
xchg
inc
data16
inc
test
cltd
xchg
arpl
cmc
jb
sub
int
test
aas
int3
pop
push
lods
push
sbb
or
lods
add
dec
repz
sub
fwait
mov
cld
adc
fdivs
fs
mov
cmpsb
fstp
ljmp
dec
or
adc
ss
lcall
xchg
adc
lods
push
jp
inc
push
or
mov
repnz
push
hlt
dec
inc
enter
outsb
addl
test
jle
hlt
repz
outsl
sub
leave
mov
xchg
ret
ret
pop
cmp
out
jnp
xor
and
add
or
icebp
cld
adc
pop
popa
mov
outsl
data16
or
jg
aam
or
xor
lds
ja
sti
pushf
scas
lret
test
sub
out
insb
movsb
inc
lahf
cltd
aam
and
push
les
jae
xchg
outsl
int
inc
add
ss
pop
std
push
addl
xchg
and
mov
out
mov
mov
stos
addl
jge
les
push
mov
and
nop
fiaddl
xchg
dec
rolb
push
sub
xorb
or
arpl
mov
sti
xor
iret
add
inc
imul
repz
bound
dec
bnd
cltd
std
scas
adc
rolb
sub
inc
mov
xor
xchg
out
bound
fildll
out
mov
out
fildl
aaa
mov
and
or
nop
fnstenv
int3
lcall
imul
int
push
cmp
mov
and
aas
mov
jnp
adc
std
or
mov
mov
je
popa
leave
push
aad
cld
mov
out
xchg
test
lret
rorl
lea
xor
int
mov
in
mov
mov
lods
adc
cmpsb
out
mov
jmp
inc
jg
bound
stos
inc
cmp
or
xor
rcll
fildll
and
sub
cmc
push
push
adc
sti
cld
mov
mov
dec
imul
inc
outsl
test
xor
and
ja
mov
js
add
sbb
add
orb
lcall
jo
dec
pop
push
xor
add
cld
push
mov
push
jmp
and
pop
mov
icebp
pop
jnp
xchg
cmp
mov
inc
fdivr
ror
xchg
adc
mov
mov
and
test
aas
or
inc
clc
hlt
inc
mov
push
pop
sub
bswap
dec
out
sbb
mov
push
push
jo
fdiv
ljmp
lods
mov
ret
pop
inc
bound
mov
mov
gs
mov
sub
pop
imul
push
out
cld
sub
mov
sub
add
sub
adc
pop
inc
pusha
shlb
ljmp
stos
fcmovnbe
movsl
mov
sbb
ficoms
add
les
pop
jbe
js
popl
scas
arpl
loop
sub
mov
cmp
add
mov
mov
jns
sub
out
adc
inc
imulb
rorl
xor
sahf
push
mov
mov
push
jge
aam
jg
testl
gs
shll
dec
push
mov
mov
ret
incb
jp
cmp
or
rcll
pop
mov
pusha
mov
or
push
data16
xchg
cmp
add
data16
cmp
mov
xchg
dec
adc
std
test
fidivrs
sub
push
inc
inc
lock
pop
mov
iret
ljmp
movsl
int3
mov
push
mov
adcl
jo
orl
ficoml
and
das
arpl
xchg
in
pusha
outsb
mov
mov
fbld
add
int3
lret
cwtl
call
cmp
aam
xor
dec
out
adc
int
out
or
cmp
lcall
pop
les
dec
out
mov
imul
testb
mov
addr16
imul
jae
sbb
out
xchg
nop
inc
in
mov
dec
stos
aas
push
xchg
add
xchg
cmp
icebp
and
xchg
xchg
pop
cmpsb
sarl
in
bound
in
int
negb
jae
mov
std
sub
fwait
mov
mov
ljmp
pop
sbb
aas
ja
lahf
mov
fsubs
mov
mov
repnz
push
push
insl
enter
jns
add
mov
push
mov
mov
lea
push
push
ljmp
gs
or
cmp
and
aad
adc
cmc
sbb
movsb
inc
dec
pop
pop
xor
adc
cmp
sub
cltd
fbstp
stos
loop
cmp
out
in
sbb
sbb
aas
jae
pop
mov
push
push
js
fldcw
or
ljmp
mov
mov
cmp
ret
outsl
fwait
add
adc
and
adc
fcomp
xlat
int
jno
loope
jmp
or
cmp
fdivrs
aaa
adc
repnz
xchg
push
cltd
add
jo
popa
mov
jle
sti
inc
sbb
scas
mov
dec
js
add
inc
and
push
dec
in
add
sbb
movsl
stos
cmp
lahf
cmp
jge
sbb
mov
xchg
fnstenv
adcb
int3
jno
xor
imul
test
xor
jge
add
es
std
pop
cmpsl
movsl
mov
test
mov
mov
jns
xchg
jo
push
outsb
sub
cli
sbb
mov
push
subl
cmp
xchg
xlat
push
stos
adc
or
jbe
jmp
cwtl
mov
test
jnp
push
jns
mov
mov
or
push
push
lods
cmp
pushl
loop
js
nop
mov
adc
ja
mov
loop
stos
lret
xchg
push
pusha
dec
call
je
das
and
mov
jl
adc
in
sub
scas
pop
jg
cmp
add
scas
ret
mov
push
movsb
rorl
hlt
cwtl
xchg
mov
movsl
mov
pop
xlat
filds
jne
ret
idivl
xor
gs
sbb
mov
mov
xchg
lahf
iret
adc
sti
pop
adc
dec
jbe
fwait
test
inc
sub
mov
in
mov
jne
sbb
jge
test
jne
sbb
jno
pop
sbb
in
pop
mov
jnp
mov
lods
aad
loopne
adc
mov
xchg
outsb
push
mov
lret
jno
loope
icebp
pop
cmp
inc
lret
fisubrl
leave
xor
mov
sub
arpl
sbbb
ds
sahf
jne
lods
inc
aaa
fbld
sub
xchg
int3
in
pop
fbld
cmp
test
add
in
sub
hlt
shlb
sbb
add
ja
sub
mov
fisttps
and
lret
jp
aas
jbe
pop
jle
adcl
jp
mov
stos
mov
sub
dec
dec
pop
mov
arpl
sub
out
jae
xchg
sbb
jns
xchg
in
pop
out
jle
cld
xor
mov
cld
cmpsb
js
add
mov
fdiv
jbe
jge
rol
cmp
test
dec
lahf
imul
mov
stos
mov
push
push
setae
push
shrl
or
push
cli
lret
fdivrs
push
and
push
pop
lret
pushf
into
mov
xor
mov
mov
movsl
fadd
jne
outsl
sub
xor
imul
movsb
ffree
aas
ljmp
pop
jmp
fs
test
rcrl
popa
addr16
hlt
xor
push
xchg
fucomp
cmpb
lcall
ds
jg
mov
negb
pop
dec
xchg
mov
inc
sbb
test
shrl
cmp
stc
outsb
sar
outsl
leave
adc
bound
push
imul
out
xchg
mov
addl
add
int
insb
hlt
jle
idivb
es
inc
dec
sub
pop
ds
pop
roll
arpl
dec
add
jbe
or
pop
repz
dec
dec
faddl
mov
ja
xchg
out
in
stos
lods
xchg
pop
mov
daa
mov
push
out
jne
dec
shrl
adc
xor
adc
fmul
sub
jge
add
sti
pop
sbb
mov
mov
enter
xchg
ds
jne
shlb
adc
test
ja
add
jecxz
and
inc
aas
imul
ret
scas
shl
mov
mov
mov
fidivrs
mov
mov
sub
mov
jne
ror
or
push
pop
lea
mov
es
add
push
cltd
pop
fucomip
gs
mov
fs
push
xchg
inc
inc
mov
out
lcall
xor
jbe
mov
mov
imul
pop
mov
nop
xchg
and
mov
mov
mov
test
xchg
xchg
icebp
xor
or
lods
fs
sbb
and
push
jae
or
pop
pop
es
bound
dec
inc
mov
xor
inc
jecxz
movsl
or
setnp
movsl
and
js
js
jecxz
or
ret
ret
out
mov
mov
and
xor
filds
movsb
call
scas
ljmp
xlat
mov
icebp
xor
or
shll
mov
in
lret
pop
vmwrite
repnz
pop
int3
xor
and
xchg
scas
std
shl
test
scas
iret
xor
sub
jne
insl
ss
pop
xchg
sub
dec
orb
repz
es
in
push
nop
mov
adc
mov
rcr
xchg
inc
repz
inc
push
mov
out
popa
lahf
sub
mov
mov
shll
jne
mov
push
jnp
push
ljmp
fsubrs
iret
gs
adc
enter
shll
movsl
loopne
lahf
and
das
cwtl
xor
inc
adc
aad
jle
cmp
jmp
sbbb
dec
stos
loopne
les
stc
into
mov
dec
fwait
pop
out
mov
sub
cli
ret
fs
lcall
stc
in
out
add
leave
sub
stos
sbb
pop
push
mov
mov
jg
je
mov
and
cmp
scas
leave
cmp
leave
sbb
jae
mov
jle
sbb
mov
sahf
jmp
imul
rolb
jns
xor
sub
cwtl
add
jnp
adc
push
jg
push
sarl
mov
add
add
or
fldl
pop
pop
add
mov
daa
mov
repz
cmpsl
loope
fsubl
out
fmull
movsb
mov
cld
ss
and
popf
sub
icebp
rcrl
addr16
mov
mov
insb
add
inc
idivb
mov
xchg
push
adc
sbb
and
cmpsb
mov
les
out
out
adc
rcr
cmp
in
les
lret
jmp
push
pop
sub
aam
push
int3
mov
fdivrl
decl
loopne
inc
inc
lahf
out
xchg
adc
movsb
mov
or
sub
dec
movsb
scas
out
or
movsb
cmp
dec
xchg
jns
fwait
lock
popf
inc
imul
sbb
rcll
pop
ljmp
inc
call
aaa
xchg
adc
movsb
mov
pop
test
dec
subl
mov
dec
pop
adc
fnsave
add
and
outsl
mov
out
xor
mov
and
aam
int
mov
data16
addr16
xchg
jp
xchg
icebp
mov
jge
mov
sub
push
shrb
ljmp
out
jg
sbb
add
gs
aas
loop
cmpsb
pop
xchg
lea
in
pop
xor
adc
int3
push
addl
xor
lahf
outsb
inc
jnp
std
pop
add
addr16
pop
mov
or
repz
sarb
mov
fildll
jae
loope
js
mov
ret
clc
adc
and
ret
jno
cwtl
jl
outsb
mov
jp
inc
pusha
dec
aaa
mov
push
ss
pop
adc
repz
out
loope
jg
pop
push
adc
imul
sub
or
sub
mov
repz
aas
jle
mov
int
imul
lret
cld
mov
stc
cwtl
push
inc
cmpsb
jo
pusha
mov
enter
dec
in
or
shl
fsubs
xor
mov
orb
test
popa
and
lds
aad
es
or
shrl
out
stos
and
jmp
iret
cmp
sub
ljmp
sbb
jbe
loopne
daa
or
or
clc
dec
inc
enter
ficomps
jmp
jmp
add
sub
sahf
pop
inc
mov
push
mov
es
mov
cmp
pushf
inc
in
out
data16
cld
xchg
fdivs
or
lds
mov
jle
or
fcmovb
mov
subb
rclb
add
dec
int
xor
inc
push
fldcw
orb
sbb
or
in
mov
test
push
jnp
adcb
inc
dec
repz
add
je
fnstcw
dec
dec
rcl
push
aas
aam
ja
add
xor
mov
scas
popa
jl
push
mov
shl
lret
nop
rorl
xor
sub
adc
jl
mov
std
and
xchg
jl
outsb
into
mov
push
inc
sahf
les
in
cmpsl
inc
sub
int3
shrl
jp
mov
imul
jns
das
pushf
mov
adc
dec
test
cmp
andl
dec
mov
mov
xor
push
push
mov
rclb
mov
std
test
inc
pushf
push
add
jb
xor
or
lods
loope
mov
fndisi(8087
mov
out
lods
pusha
push
das
fcomi
in
inc
push
stos
in
inc
aas
pop
and
int3
and
and
mov
loop
push
mov
sbb
pusha
pop
sub
or
sbb
sbb
push
push
adc
and
or
cmpsl
or
not
lea
add
pop
mov
nop
mov
sub
fldt
inc
push
pop
hlt
adcb
inc
int3
xchg
sti
mov
push
sub
clc
cmp
xchg
aaa
gs
cmp
cmp
lods
adcl
and
rcr
push
in
mov
cmp
mov
jbe
cmpsb
mov
sub
es
sub
aam
add
sti
dec
pcmpgtb
and
test
mov
outsl
mov
test
ret
imul
insl
ss
xchg
sti
daa
mov
xchg
aam
test
frstpm(287
pop
int
test
fdivrp
fimuls
dec
test
lahf
aaa
mov
stos
pushf
out
jl
in
mov
fidivl
and
pushf
adc
cmpb
fcmovne
xchg
das
ds
insl
sbb
fcompl
mov
fwait
rcrl
xchg
adc
mov
int
shrb
xor
shlb
mov
sub
inc
mul
xor
mov
cmp
aas
ret
xchg
in
jmp
cmp
mov
push
ljmp
icebp
stos
sahf
stc
jb
mov
mov
and
cmp
xchg
dec
lcall
inc
or
jns
push
jae
xchg
icebp
inc
sbbl
pusha
sarl
xchg
jmp
aad
rcll
mov
mov
mov
data16
js
cmp
push
sub
sbb
rcl
and
pusha
and
daa
decb
clc
push
mov
cmp
shl
ds
or
jno
test
arpl
arpl
push
cli
mov
out
mov
jecxz
dec
xor
dec
cli
adc
xlat
jae
xchg
aas
xor
icebp
loop
push
ja
std
cld
ds
lahf
and
ret
cmp
mov
xchg
fdivl
cmpsb
jle
clc
cmp
dec
add
mov
call
shr
out
or
jl
sarl
inc
jnp
aaa
xchg
adcb
jp
pop
adc
les
stos
clc
pop
fdivrs
pop
jns
sub
or
movsb
adcl
jno
pop
ss
dec
aam
iret
loope
addr16
pop
hlt
add
inc
xor
cmp
inc
xchg
les
xlat
dec
mov
push
xchg
and
popf
cmp
mov
cs
cmp
adc
repz
jns
dec
andb
loopne
cmp
sub
imul
gs
outsb
adc
lahf
out
add
rcll
and
push
rcrl
mov
iret
bnd
insl
mov
xchg
out
jae
jnp
icebp
xchg
mov
cmp
sbb
cmp
pop
xchg
xchg
hlt
jne
or
leave
hlt
gs
aad
jle
stos
pop
ljmp
shlb
sarl
jo
mov
xlat
push
in
mov
mov
inc
dec
mov
stos
repnz
out
or
pop
xchg
cmp
adc
xor
pop
pop
and
into
push
cmp
data16
lock
andb
cs
cltd
push
shl
xchg
and
mov
jbe
jecxz
pop
or
push
stos
dec
push
push
push
pop
int3
dec
call
test
outsb
inc
inc
xor
mov
push
inc
mov
sub
iret
adc
js
data16
xor
dec
and
dec
mov
sbb
add
repz
adc
rolb
jne
adc
mov
mov
cmp
push
repnz
rcl
and
jecxz
mov
adc
xlat
aam
pop
push
fldz
int3
jmp
add
mov
out
inc
shlb
push
and
push
pop
dec
cli
aas
mov
jg
adc
mov
cmp
adc
daa
sbb
lods
mov
lds
inc
mov
divl
add
push
inc
push
arpl
loopne
inc
mov
stos
das
into
add
push
les
iret
data16
cmp
insb
test
cmpsb
bound
or
inc
lods
mov
mov
mov
jle
and
cs
lods
xchg
aam
and
fnstsw
jp
popf
mov
adc
outsb
shl
cmp
push
cmp
mov
jp
add
out
out
push
jne
mov
push
idiv
fdivl
jmp
add
or
pop
adc
or
or
pop
jo
gs
fnstcw
mov
and
push
lret
insl
jge
fwait
in
jmp
popf
mov
pop
cli
push
dec
subl
xchg
add
out
fildll
out
js
jge
pop
ret
cmp
loope
out
mov
sub
push
mov
mov
in
push
jecxz
mov
mov
rcll
fistps
lret
mov
roll
pop
jns
inc
ljmp
jns
sub
push
sbb
or
leave
inc
ret
jns
out
inc
jno
mov
or
and
mov
lcall
jae
cwtl
xor
test
push
sti
rcrb
sub
adc
or
jbe
xchg
shlb
add
jne
into
mov
xlat
dec
addr16
daa
test
adc
cmp
decl
fs
stc
push
inc
test
xor
push
jg
xchg
arpl
sbb
mov
int3
out
std
mov
stos
jmp
or
mov
jmp
stos
aas
les
push
lcall
test
lahf
adc
movsl
inc
push
mov
cmovl
pop
shll
daa
in
lea
jno
dec
inc
es
mov
xor
fisubs
popa
ss
adc
aam
movsl
fcoms
out
popa
in
aas
mov
shlb
ja
jns
mov
in
mov
leave
adc
cmp
xchg
enter
jae
inc
shrb
mov
jmp
add
jno
cltd
and
or
push
mov
pop
dec
add
sar
xlat
hlt
aas
jo
out
adc
pop
mov
jae
cmp
in
outsb
push
sbb
ret
lods
mov
test
es
cmp
adc
or
mov
xor
test
jp
mov
shlb
loop
sub
xchg
cld
and
mov
in
lret
jae
mov
xchg
imul
jl
mov
inc
jp
cmp
mov
int3
bound
movsl
sarb
lea
cmp
inc
pop
ficomps
inc
mov
lahf
outsl
inc
cmp
push
arpl
mov
imul
sbb
pop
test
dec
mov
fwait
cmpsb
xorb
daa
jns
aad
adc
loope
xchg
cmp
outsb
gs
gs
imul
mov
mov
stos
jae
pop
imul
pop
into
fists
cs
jae
pushf
jecxz
adc
sbb
sbb
insb
dec
mov
das
ret
push
pop
xchg
daa
daa
movsl
lea
lret
or
ret
jnp
aad
add
add
cld
xor
fdivr
inc
mov
repnz
cmp
mov
pop
scas
add
xchg
sti
out
xchg
dec
test
xchg
test
cmc
pop
push
pop
sti
stc
pop
aas
outsl
sahf
mov
in
rcrl
rcll
scas
mov
ljmp
mov
clc
icebp
sub
and
ret
leave
jle
lock
std
jnp
and
icebp
lret
mov
and
out
mov
and
xor
sub
sub
jp
cli
loope
sbb
rcrb
pop
scas
inc
loope
nop
ds
jo
popa
cmc
jo
jbe
das
out
or
mov
int3
push
scas
xor
sbb
sbb
outsl
cli
fstpl
adc
inc
ret
mov
adc
cmp
gs
out
or
add
mov
hlt
xchg
pop
pop
jmp
or
sub
out
push
push
mov
or
out
int
adc
fldenv
jmp
fdivrl
cmpsb
movsl
rorb
sbb
dec
pop
pop
dec
xor
cmp
xchg
add
and
test
mov
dec
mov
xchg
or
cmpsl
in
push
dec
popa
dec
and
xor
popa
mov
cld
xchg
cmp
and
std
sub
pop
aaa
inc
lret
movsl
xchg
mov
rorl
cmp
mov
cmpsl
adc
js
fdivr
mov
xchg
jae
push
test
rcl
sub
cwtl
lods
hlt
fdivl
xchg
and
insl
jno
clc
adcb
pop
cmc
aas
or
sbb
inc
out
add
cmp
out
xor
push
lret
xor
pop
hlt
pop
push
mov
in
push
or
sti
cmp
scas
sbb
cmpsl
xlat
lock
in
jbe
test
or
ss
scas
mov
mov
int3
or
mov
sub
enter
xchg
xor
cmc
out
leave
xchg
push
iret
popa
adc
jns
xchg
lods
in
pushf
sbb
aas
dec
sbb
mov
or
ret
push
cmp
lea
aas
inc
iret
push
xchg
jmp
shll
je
fwait
out
pop
jecxz
orb
mov
push
popf
aaa
lret
jns
movsl
aas
js
adc
adc
add
ljmp
fistps
xor
push
jo
in
cmpsb
adc
jp
xorl
add
cmp
je
and
into
fisubrl
xor
lret
jnp
mov
jmp
es
mov
pop
sub
repnz
and
fcomp
push
pusha
loopne
xor
sub
in
sub
pop
pop
jne
pop
lods
and
mov
sub
nop
sbb
jb
into
and
iret
int
mov
enter
sbb
jmp
outsl
std
dec
mov
sub
and
pop
sbb
xor
sbb
addb
inc
inc
inc
or
lcall
fwait
aaa
outsl
sbb
mov
lret
ret
ret
in
add
jae
out
ja
and
pop
in
pop
arpl
sub
stos
cltd
cmp
dec
adc
lret
js
inc
dec
dec
pop
int
pop
sub
inc
add
ret
mov
dec
jmp
xor
mov
iret
xchg
and
dec
es
daa
and
cmpsb
mov
sbb
dec
int3
outsl
mov
adcb
test
icebp
test
in
mov
add
sub
lock
adc
scas
sbb
or
jl
lds
push
ficompl
stos
call
cmpl
jno
int
dec
ret
sbbl
inc
divb
xchg
jmp
sahf
test
and
insl
dec
sti
loope
inc
inc
jnp
outsb
pop
mov
cld
addr16
daa
data16
add
add
loopne
gs
je
mov
imul
sub
data16
lods
ss
insl
sbb
je
les
loopne
mov
adc
insl
adc
sti
push
mov
fildl
and
stos
aad
ret
test
aas
cmpsb
sti
enter
shrb
adc
adc
and
mov
cmpsb
sarb
cs
sub
lea
incl
add
data16
leave
jl
add
xor
shll
fstpt
pop
cld
cmp
test
xchg
in
dec
inc
inc
icebp
fistl
sbb
dec
inc
mov
cmpb
dec
loop
pop
imul
dec
xlat
mov
cmp
xchg
popf
fcmovnu
mov
xchg
rolb
and
std
in
cmpsb
inc
sti
cmp
fdivl
mov
jno
mov
pusha
movsb
push
add
cltd
dec
and
push
fldcw
add
shll
roll
and
out
push
dec
shr
call
xlat
les
aad
hlt
adc
ffreep
jmp
idiv
sub
inc
inc
insb
test
pop
pusha
push
bound
sub
sbb
cmpsb
in
pop
cmpsl
xchg
dec
dec
push
jge
adc
push
in
mov
push
inc
dec
movsl
int
pop
lods
and
dec
cld
data16
xor
rcrb
jg
std
cmp
jb
pop
pop
and
shl
icebp
adcb
lret
lret
in
mov
sub
enter
xor
xchg
rorl
jno
call
push
sub
lock
mov
jge
jp
adc
push
xor
xchg
mov
cmpsl
jl
pusha
cli
pop
add
push
sbb
popa
into
and
dec
sbb
push
popf
mov
mov
sub
stc
hlt
sbb
jge
fcmovnbe
and
hlt
loop
adc
lret
sub
inc
push
shlb
xchg
jb
add
xchg
mov
jle
ret
lods
adc
stos
pop
lea
mov
jb
outsl
cmpsl
andb
loopne
mov
mov
jge
adc
fidivrs
cld
sbb
negl
mov
stos
sub
out
adc
and
pusha
imul
mov
mov
mov
mulb
and
xchg
fisttpll
jmp
js
dec
mov
xlat
dec
xchg
in
mov
sti
fst
inc
shlb
fstpt
std
or
sbb
test
aas
mov
inc
lret
int
sub
imulb
andb
pop
stos
dec
lea
pop
sub
sbb
enter
arpl
fmull
xor
sbbl
push
inc
add
fnstsw
xor
mov
push
cmp
mov
inc
mov
pop
jno
or
loop
fidivrl
in
shlb
test
rcrl
xorb
or
popa
outsl
lret
xchg
pop
iret
add
cwtl
scas
data16
pop
inc
mov
aaa
stos
loop
mov
shrb
imul
add
and
mov
imul
subb
mov
xchg
cltd
dec
cld
push
in
xchg
mov
jo
cmpsl
sarl
cmovbe
add
in
nop
inc
rclb
adc
sti
scas
dec
lods
inc
fnstsw
cs
loop
inc
pushf
lcall
dec
jle
cli
les
pop
dec
enter
roll
cli
and
hlt
adc
xchg
cli
imul
jae
in
mov
leave
cld
or
icebp
or
popa
pop
dec
sarb
mov
arpl
lret
mov
cmpl
mov
daa
xchg
cmp
xor
jl
leave
cs
jl
and
xchg
aam
jg
dec
cltd
adc
decl
push
fstpl
sbb
imul
es
jb
push
jne
mov
popa
daa
in
sub
sbbl
jmp
adc
and
mov
icebp
cwtl
and
sub
ds
cwtl
or
lret
sarb
xchg
pop
data16
popa
jb
negb
lock
pop
mov
or
orl
les
fnstsw
jge
and
inc
iret
add
mov
ss
ljmp
push
stos
or
and
fbld
inc
stc
in
in
adc
pop
push
imul
pmaxsw
movsb
mov
xchg
xchg
mov
test
pushf
stos
mov
sub
rcr
aad
stc
mov
mov
pop
dec
orb
mov
mov
add
pop
jo
je
adc
dec
sti
xlat
rcrl
jmp
dec
xchg
test
jl
outsb
xor
lods
aad
frstor
hlt
rcrl
push
test
je,pn
dec
ljmp
add
pop
adc
movsb
out
mov
pop
sub
adc
sbb
sub
stc
jno
add
dec
ret
jmp
fisubrs
int3
loope
iret
and
ja
movsb
cwtl
mov
fcmove
cmc
repnz
cmpsl
loopne
mov
out
adc
and
aad
sbb
push
out
sbb
or
add
loop
or
and
push
insl
decb
xchg
es
int3
cmp
pop
aas
enter
mov
popf
push
pop
pop
test
jg
inc
mov
mov
cmpl
sbb
push
cmp
gs
sub
loopne
mov
jge
or
rclb
jg
add
dec
jnp
stos
jne
jo
pslld
push
stos
outsl
push
jmp
fdivs
cld
dec
outsl
and
pop
ds
fldlg2
popf
mov
mov
mov
pop
loopne
sarl
pop
push
and
or
lret
lahf
nop
pop
dec
xchg
ljmp
jp
mov
mov
pop
add
adc
fdivr
sti
dec
mov
and
mov
mov
cmpsl
pop
xor
jmp
mov
lea
jmp
jo
fistps
push
popf
rclb
push
sbb
rorb
and
cmp
mov
mov
cmpsl
mov
inc
jle
out
scas
adc
ja
dec
sbb
xchg
mov
ret
fwait
pop
filds
mov
enter
sbb
jge
arpl
rclb
out
stos
mov
push
sahf
mov
push
aam
aas
cld
xor
lahf
sbb
mov
mov
push
loopne
dec
dec
and
xchg
cmpsl
cli
rcrb
and
mov
ja
sub
pop
addr16
dec
mov
les
loopne
lock
lds
les
push
outsb
lahf
lret
push
push
out
shrb
or
loop
lods
push
fmull
std
nop
lcall
ljmp
loopne
sub
fmul
adc
call
cwtl
push
icebp
cmpsb
xchg
scas
stc
add
js
add
testb
and
sbb
push
ljmp
enter
in
adc
jno
hlt
mov
sub
std
subl
or
mov
scas
imul
mov
icebp
mov
out
sbb
adc
ret
adc
out
push
cmp
sub
in
call
adc
xlat
cmc
inc
test
rorb
pop
pop
mov
xchg
rolb
mov
dec
cmp
add
loop
out
jl
sahf
add
xchg
insb
mov
xor
xchg
and
pop
and
ds
mov
mov
pop
and
lods
dec
inc
nop
adc
loop
xchg
ficoms
popf
mov
lods
lds
inc
mov
in
lds
sahf
ret
jge
sub
bound
mov
nop
mov
sti
cmpsb
mov
push
mov
adc
dec
xchg
in
push
jo
jg
shlb
repz
pusha
add
sub
imul
cmp
pushf
jb
out
mov
push
xchg
jne
add
imul
adc
push
xchg
call
fwait
ljmp
imul
lahf
adc
xchg
sbb
add
push
mov
cmpsb
mov
and
pop
pop
js
jge
pop
jmp
inc
in
push
popa
rol
add
jmp
mov
jno
das
jl
xor
adc
outsb
xchg
cwtl
push
pcmpgtd
mov
es
fildl
and
scas
mov
xchg
out
shll
xor
std
scas
and
and
cmp
mov
lcall
faddp
inc
jo
lret
pop
pop
ljmp
jno
mov
xor
fldt
cli
int3
jle
movnti
fdivrs
jecxz
out
cmp
aaa
lret
xor
xor
jg
int3
cmp
jae
imul
iret
adc
js
rorl
cmp
push
jp
add
call
mov
fst
arpl
rorb
hlt
inc
and
iret
mov
jno
ds
xchg
sar
dec
leave
out
dec
stos
pop
int3
xor
mov
xlat
mov
push
das
rclb
sub
and
hlt
lds
xor
dec
xchg
add
and
cltd
jmp
xorl
ret
adc
pextrw
bound
imul
iret
pop
inc
into
push
roll
incb
xchg
fwait
push
inc
pop
jl
in
mov
and
pop
imul
movsb
addl
inc
imulb
push
add
jbe
jmp
and
inc
lcall
xchg
push
psubusb
sbb
in
adc
test
jg
jb
fcomps
sar
insl
add
ret
in
cmp
add
mov
mov
mov
xor
test
mov
xchg
cld
lahf
inc
popf
hlt
in
lds
lret
mov
or
out
inc
je
ret
cmc
and
es
es
in
jnp
pop
repnz
xchg
outsb
mov
popf
mov
cmp
jecxz
jp
cli
xchg
cmp
sarb
out
jne
xchg
call
mov
and
cwtl
lret
test
gs
mov
in
jb
push
xchg
and
cmovp
jno
sub
cmp
repz
movsb
jmp
jp
inc
xor
in
ja
jo
sarl
mov
dec
sub
cmp
mov
or
and
push
or
les
xchg
orb
mov
insl
ret
sahf
cmp
stc
fwait
jnp
dec
push
add
cmp
jo
sub
and
pop
or
clc
mov
insb
adc
aam
mov
insb
pop
and
or
clc
xchg
cwtl
xchg
cmpsl
and
push
ss
jmp
mov
sbb
rep
aaa
pop
mov
xchg
mov
lods
loopne
adc
test
hlt
arpl
das
mov
xorl
xor
inc
gs
push
inc
xchg
in
test
fsubp
call
cmp
push
cmc
jo
jg
cmp
lcall
push
out
cli
inc
or
dec
dec
and
shlb
call
sub
jne
add
jb
or
aad
jle
mov
jecxz
or
aaa
imul
jnp
mov
mov
mov
push
mov
cmc
cwtl
fst
mov
call
ss
in
cwtl
cmc
sub
jne
arpl
insl
mov
adcb
cmp
movsl
sub
push
das
es
stos
dec
out
push
arpl
dec
mov
ret
or
push
stc
aas
lcall
jae
jo
mov
and
insb
mov
pop
dec
sbb
scas
add
pushf
add
outsl
jg
cld
stos
sbb
xchg
gs
jnp
fs
xchg
test
pop
mov
lea
cmp
cwtl
mov
cs
fwait
push
xor
jp
sbb
repz
jbe
lods
std
rol
or
push
aas
push
jecxz
fidivl
roll
or
pop
dec
mov
dec
ds
dec
aaa
ret
cmc
cmpsl
insb
push
lds
fstpl
xor
sbb
add
mov
mov
fists
push
pop
pushf
lods
test
cmpsb
push
pop
stos
mov
add
adc
outsl
pop
mov
jge
ss
cmpsb
rorb
xor
out
cmp
jg
push
test
jmp
lea
outsb
pop
mov
adc
dec
pop
movsb
or
notl
push
or
jl
inc
xor
mov
out
inc
push
xchg
inc
push
sub
loopne
sti
and
shrb
popa
xstore-rng
cmpsl
add
data16
frstpm(287
stc
xchg
jae
adc
jg
loope
dec
sahf
push
push
inc
movsb
stos
jge
mov
in
push
lock
push
mov
mov
mov
jmp
fbstp
test
lret
in
dec
frstor
lea
fdivl
dec
xorps
loopne
xchg
cmpsl
add
out
jecxz
data16
cmpl
je
in
outsl
in
add
bound
sub
push
jmp
outsb
cs
cmp
adc
repz
push
or
in
in
xor
mov
iret
stc
dec
add
mov
negl
and
xchg
cmp
loopne
push
ret
mov
fwait
scas
and
mov
imul
push
sbb
xchg
pop
bnd
insb
push
loope
push
cwtl
jge
gs
jnp
sub
mov
dec
jns
int3
movsb
sub
cmc
mov
mov
nop
jo
imul
rolb
cltd
sahf
cmp
inc
fs
repnz
lret
popf
pop
or
lahf
cltd
cmc
lret
outsl
adc
test
and
push
jg
out
scas
adc
out
cmc
jecxz
shll
fnstsw
adc
mov
add
pavgb
jb,pn
stc
mov
mov
adc
sahf
enter
loopne
jg
mov
mov
push
pop
daa
mov
jle
aaa
lea
mov
sbb
xor
and
mov
sub
mov
cmp
int
cld
pop
xchg
ficoml
push
test
mov
out
adc
cli
xor
cmc
cli
xorl
xchg
add
adc
dec
and
lods
jp
cmc
outsb
lcall
outsl
pop
pop
and
scas
and
xchg
cmpb
push
jne
or
inc
mov
xchg
arpl
int
adcb
or
icebp
cmpsb
push
and
aaa
push
subb
pop
add
imul
js
push
cmpsl
xchg
or
cwtl
fmuls
loope
aas
cmp
pushf
int
fs
mov
leave
xor
lods
jge
movsb
jge
sarb
adc
sarb
enter
dec
adc
push
xchg
ds
jle
scas
sbb
shr
jmp
dec
xchg
fdivrs
adc
sbb
aam
and
sti
jno
and
or
bound
inc
mov
les
popa
cli
addr16
push
fadd
xor
jns
xchg
xchg
lds
push
test
inc
lods
outsb
in
xchg
adc
aaa
js
push
in
ret
add
add
cmpsl
call
mov
fistpl
fsubs
scas
mov
inc
loop
mov
daa
push
lock
and
mov
addb
push
xor
lcall
fldl
in
sub
xchg
mov
add
fcmovnu
je
iret
pop
xor
xor
fadds
js
clc
dec
push
fstps
das
cmpsl
out
notl
cmc
push
aas
mov
iret
lods
and
mov
pop
sti
and
fyl2xp1
and
mov
jns
jge
xor
mov
idiv
adc
xchg
fwait
jmp
pop
insb
jae
clc
leave
adc
les
movsl
ror
dec
imul
data16
sub
dec
adc
insb
hlt
push
inc
lret
push
push
das
outsb
fdiv
sbb
rcll
cmp
lcall
imul
pop
mov
dec
push
dec
inc
pop
mov
push
sub
dec
sarb
mov
int3
push
data16
outsb
scas
mov
loop
fisttps
shl
mov
sub
xor
adc
inc
jb
mov
mov
dec
and
or
fimull
cmp
mov
ret
lcall
out
and
cmp
or
leave
repz
aas
mov
ficomps
cmp
cmp
pop
rcrl
pop
or
mov
and
inc
cmpsl
fcomps
test
incb
and
xor
sub
lock
mov
dec
adc
fiadds
xor
jmp
loopne
addr16
arpl
cmp
and
adc
scas
xchg
or
adc
jns
les
aam
addr16
xchg
jns
rol
jno
cs
rcrb
jns
xchg
sub
pushl
xor
fsub
mov
ret
cmp
sub
lock
pop
push
push
pop
jmp
xchg
cmpb
pop
dec
popa
adc
fld1
jp
and
pushf
and
xorb
xchg
inc
sbb
mov
push
adc
and
dec
dec
pop
sysexit
add
lea
lcall
fsubr
mov
sahf
movsl
insl
aad
or
jg
lock
cmpsb
cmp
xchg
lods
push
xchg
int3
push
test
daa
xor
sbb
xor
or
sub
sbb
inc
xchg
fsts
inc
mov
repz
rorb
outsl
cmp
and
test
jecxz
js
ficoms
and
jp
and
adc
cli
add
cs
xor
andl
stos
dec
cli
insl
sbb
imul
xchg
clc
mov
inc
rep
mov
push
adc
mov
cmp
sub
aam
in
jne
shl
sub
sub
mov
in
cwtl
xor
enter
xchg
jle
adc
pop
out
add
mov
add
popf
inc
mov
push
shll
pop
mov
jb
xchg
jbe
lods
shlb
pushf
test
jmp
jp
xchg
inc
mov
aaa
mov
call
push
pusha
or
xor
mov
or
loopne
xor
shlb
jl
lods
pop
arpl
movsl
xorl
jo
pop
mov
sub
nop
mov
test
mov
pop
mov
inc
xchg
ja
clc
push
in
jg
mov
mov
sbb
or
push
in
pop
pop
int3
je
inc
iret
jbe
inc
je
push
dec
js
pop
mov
or
adc
mulb
push
scas
mov
add
lea
adc
fistps
lds
adc
pop
imul
xchg
sti
lret
mov
mov
xchg
into
lods
add
pop
out
mov
call
js
gs
dec
fs
mov
movsl
arpl
dec
sbb
outsb
xchg
in
into
adc
sbb
mov
jbe
push
into
rcrb
and
mov
shll
jg
es
push
add
je
inc
sti
lret
lods
je
xchg
mov
scas
out
loop
scas
dec
cmp
sahf
mov
pop
shl
xbegin
pop
pop
sub
jp
cmp
jl
out
scas
cld
scas
int
lock
xchg
stc
xchg
or
rorw
add
mov
fcmovnb
inc
pop
shl
cmp
fs
mov
push
xorl
cmp
jmp
push
push
fiadds
lcall
popl
popa
movb
sub
xchg
notb
clc
ja
sub
aaa
outsl
fdivr
fistpll
mov
push
cmp
movsl
mov
adc
mov
icebp
loope
cmp
pop
xchg
inc
xor
push
or
mov
fs
xchg
cmp
mov
int3
dec
mov
popa
cmp
pop
jge
inc
addr16
js
subb
xchg
clc
cmp
and
popf
push
cmp
mov
std
fmuls
xchg
jb
or
loope
cwtl
and
clc
xor
int
jmp
and
mov
aas
xchg
gs
insl
xor
fnsave
mov
pushf
outsl
frstor
js
out
xchg
pop
mov
jle
pop
mov
xchg
nop
pop
and
pop
sbb
iret
mov
push
adc
jns
mov
shll
and
cmp
fists
mov
adc
aad
test
icebp
bound
hlt
aam
add
dec
sub
movsb
mov
push
imul
ljmp
je
ret
cmpsb
pop
and
cld
ljmp
fmuls
loopne
dec
mov
cwtl
xchg
lret
imul
pop
gs
fisttpl
and
les
insb
cli
scas
adc
cmp
hlt
fsubrl
or
in
test
jns
mov
mov
push
cmp
xor
pop
xchg
pop
xor
repnz
add
shrb
xchg
outsb
add
jl
or
jae
mov
outsl
and
movsl
fsubs
mov
addr16
addr16
in
dec
add
mov
mov
daa
leave
jno
mov
daa
dec
stos
or
and
out
in
ds
fwait
and
stos
adc
sbb
or
out
jb
jle
mov
test
and
mov
xor
stos
push
and
jp
pop
rcll
push
add
insl
sarl
xor
clc
xchg
stos
hlt
into
fwait
test
sub
subl
aaa
xor
mov
les
inc
dec
addr16
clc
sub
daa
jp
sub
movsb
rcrb
or
dec
test
dec
daa
cmp
push
rcr
pop
jne
dec
loopne
and
es
add
insb
loope
add
lret
mov
mov
push
add
push
pop
mov
cltd
pop
sbb
xlat
push
adc
lret
dec
pop
sub
les
outsl
pushf
jae
push
fmuls
cmp
add
add
fiaddl
daa
adc
cmp
orb
test
mov
callw
or
stos
aad
and
xchg
pop
jae
mov
pop
push
push
into
arpl
movsb
push
in
push
jle
xchg
cwtl
test
jecxz
ficomps
mov
loope
sbbb
push
and
jmp
push
dec
dec
insb
aam
fcompl
sub
out
pusha
sbb
sbb
jmp
jecxz
js
sub
or
jle
pop
lahf
sarb
outsl
xorl
adc
xor
int3
icebp
add
dec
mov
xchg
out
push
push
cmpsl
repnz
jle
ficompl
stc
pop
aad
jmp
popf
popf
add
jmp
dec
adc
or
or
jge
pop
addr16
xor
mov
xor
movsl
aaa
lea
sbb
ret
loop
xor
or
clc
dec
cmp
push
ja
mov
fisttpl
pushf
sarb
mov
cli
xor
adc
outsl
push
sbb
sbb
inc
push
cltd
out
lods
pop
pushf
xor
js
stc
and
inc
mov
jae
pusha
sbbb
pusha
jge
paddd
jl
iret
dec
and
rolb
aas
stos
daa
enter
lret
inc
xchg
inc
lret
rcl
outsb
jae
repnz
je
rcl
add
mov
and
stc
ja
bound
roll
out
adc
jae
or
test
hlt
or
jo
adcb
sahf
mov
cld
add
adc
jns
in
xchg
sub
mov
dec
mov
aam
scas
dec
loope
shlb
testb
lret
inc
aas
jecxz
add
bound
push
aam
negl
jp
fadds
adc
mov
sti
push
inc
sti
mov
inc
lods
mov
test
xor
push
xor
addb
pop
fnstcw
dec
ret
btc
data16
sub
imul
push
cmp
mov
mov
jle
pop
in
sub
popl
mov
addr16
ret
shr
mov
data16
sub
mov
sbb
arpl
add
sahf
xchg
jo
dec
lret
js
pop
rcrb
add
mov
rdpmc
dec
jns
movsl
cltd
jp
xor
push
dec
mov
cmc
add
adc
daa
repnz
in
sbb
pop
mov
icebp
ljmp
adc
negb
cmp
test
stc
mov
ret
inc
mov
push
adc
outsl
and
data16
push
mov
lods
loop
dec
bound
fldenv
test
dec
jp
push
xchg
push
cmpsl
sarl
loope
insl
add
fldt
add
mov
jp
lods
movsb
insb
ss
fimuls
iret
sbb
les
cmpl
add
pop
scas
mov
and
xor
xchg
scas
push
adc
lods
gs
mov
add
push
sbb
inc
and
sti
sahf
lret
scas
jne
ret
lods
jecxz
fdivrp
dec
scas
fsubl
pop
insb
bound
insb
out
cmp
out
out
xchg
loop
push
mov
test
xor
cli
cmp
push
mov
inc
xchg
mov
adc
mov
call
stos
cmc
dec
movsb
xchg
fsubrs
addb
stos
mov
insl
lds
lock
cmp
out
movntps
loope
cld
jmp
lods
mov
cmpsb
or
ret
roll
testl
jns
ror
pop
mov
cmp
das
and
imul
lret
mov
rorl
cli
repz
sbb
pop
jle
adcl
mov
adc
xorb
mov
adc
in
out
and
mov
cmp
fdivs
into
sub
arpl
ja
out
in
push
mov
and
pusha
sti
jg
test
mov
int
arpl
ds
xor
dec
movsl
outsl
fcompl
stos
xchg
call
stos
xor
cwtl
add
adc
sub
mov
push
ljmp
mov
mov
cmp
dec
ret
out
sbbb
mov
pop
in
adc
roll
cwtl
sbb
ficoms
jmp
or
scas
scas
subl
icebp
stc
sbb
cmp
loope
xor
push
and
jmp
dec
leave
loopne
aam
sub
mov
enter
jecxz
xchg
mov
xlat
dec
xor
dec
mov
lea
mov
xchg
lret
aad
push
clc
and
xor
cltd
mov
cli
fisttps
icebp
push
out
lret
sbb
inc
iret
movsb
or
iret
ja
fwait
std
mov
jae
push
cmp
lds
pushf
adc
or
sub
or
add
jbe
xor
pushf
add
pusha
scas
cs
roll
test
mov
xor
xorb
outsl
outsb
inc
cmpsb
rcrb
frstor
and
xor
mov
ja
xchg
push
nop
mov
pop
sub
icebp
sub
test
addr16
jge
sub
icebp
mov
lods
es
add
icebp
mov
fwait
mov
jle
dec
sub
lret
push
mov
into
ffreep
popf
dec
rcl
jecxz
sub
das
out
sbb
gs
jecxz
insw
sub
lret
movsb
iret
repnz
in
jecxz
or
out
sahf
lcall
test
sbb
pop
jg
cmc
sarb
aas
fstpt
lods
add
mov
stc
lahf
mov
insb
mov
sub
loopne
push
adc
sti
fsts
decb
cmpsb
and
cmpsb
dec
out
jne
sbb
ja
add
push
arpl
rcl
mov
lcall
pop
dec
and
and
sbb
pop
or
sbb
leave
jbe
xor
inc
mov
mov
stc
pop
inc
adc
sbb
or
jge
sbb
mov
inc
andb
mov
jnp
pop
lret
inc
test
pop
gs
lret
std
cmpb
lods
sub
data16
sbb
lret
cltd
jb
fcmovbe
lret
mov
cmpsl
dec
ss
push
std
dec
mov
inc
dec
es
mov
and
in
jmp
pop
push
shrb
xor
xchg
arpl
and
push
mov
jbe
movb
jmp
fcmove
inc
cmp
addb
pop
repnz
pop
in
mov
and
arpl
scas
and
imul
pinsrw
aas
repnz
cmp
aas
cmp
insb
mov
in
std
jecxz
das
pop
daa
repnz
sbb
cmc
mov
xlat
sarb
and
cltd
ss
popa
insb
test
pop
jo
or
xchg
xor
inc
dec
push
lods
push
sbb
mov
mov
cmp
push
test
or
cmp
cmpsb
or
push
adc
ret
hlt
pop
or
or
test
mov
dec
lret
mov
jae
addr16
pop
fsubrp
rcll
xchg
push
xchg
push
mov
jno
or
mov
adc
je
mov
sbb
and
push
mov
shrb
mov
aad
ss
gs
mov
movhps
call
or
inc
dec
cli
mov
repnz
mov
out
stc
arpl
fmul
mov
push
in
mov
sar
daa
test
inc
xor
add
add
mov
lods
mov
push
push
in
iret
cmpl
push
jmp
popf
mov
call
push
xchg
leave
outsl
push
mov
movsb
lahf
mov
ja
insb
arpl
fucomp
hlt
fsubl
and
lret
sub
or
test
add
or
push
pop
call
aam
inc
pop
xchg
test
jle
pop
pop
mov
pop
push
jnp
sub
insl
leave
repnz
leave
push
xchg
sub
imulb
pop
mov
movsl
mov
mov
xor
add
mov
cltd
adc
xor
rcll
or
push
repnz
push
inc
cmp
add
push
sbb
std
dec
nop
sbb
cmp
in
mov
xor
jecxz
and
inc
stos
nop
lods
or
mov
aad
dec
scas
cwtl
and
xchg
adc
jg
insb
test
cmpsb
into
enter
lea
fadds
or
cwtl
cltd
aam
xchg
and
add
xor
push
sub
loopne
hlt
repnz
jae
pop
dec
xchg
mov
fistl
or
push
popa
hlt
sarl
xchg
mov
inc
rcr
xor
dec
xchg
jmp
and
or
aam
aam
je
daa
jge
and
mov
dec
jbe
adc
pop
add
lods
or
test
or
pop
xor
cmp
jmp
dec
mov
xchg
push
imul
icebp
sub
rcrl
sbb
cmp
sti
xchg
dec
mov
pop
push
nop
data16
pusha
or
rolb
and
xlat
push
mov
loop
pop
mov
rorb
mov
mov
idivb
dec
imul
cmp
dec
ja
mov
out
sbb
or
fisubl
pop
test
mov
dec
dec
sbbb
jnp
cmp
pop
inc
sub
aaa
push
into
push
or
cmp
push
cmp
mov
xchg
cld
sbb
mov
push
inc
add
in
aas
pop
sbb
push
cli
data16
shrl
xchg
sahf
xor
sbb
mov
add
outsl
pop
fmuls
push
setbe
push
adc
sbb
and
ds
gs
scas
or
or
orb
and
xchg
adc
out
aad
lret
cmc
shrl
jmp
rclb
test
xchg
popf
andl
out
jp
cwtl
sub
call
hlt
add
cs
jae
fcomps
and
loopne
add
mov
mov
out
imull
cmpsb
add
jae
test
lock
out
js
sbb
mov
xor
adc
fsubs
fsubl
push
push
adc
pop
lahf
dec
leave
rorb
dec
lods
mov
std
adcb
push
sub
imul
mov
mov
repnz
ffree
inc
add
mov
mov
mov
push
gs
mov
push
ficoml
ficoms
out
sub
lods
cltd
fldenv
xor
test
gs
lcall
add
pop
mov
mov
and
cmpsl
sub
jge
xchg
lret
int3
in
push
enter
sub
sbbb
inc
or
mov
bound
inc
adc
and
stos
ss
fimuls
dec
roll
adc
inc
dec
jb
cmp
jae
cmp
stos
push
push
sub
xchg
push
cmpsb
dec
jo
sahf
jb
push
or
int3
inc
ficompl
mov
cmpsl
push
mov
and
dec
push
out
mov
xor
repz
orb
cmpsb
mov
outsb
pop
push
pushf
adc
xchg
ljmp
jmp
mov
xor
push
adc
and
mov
adc
test
mov
in
pop
bound
cltd
stc
cmpsb
jecxz
fimuls
xchg
pop
dec
test
xchg
push
sarb
mov
dec
xor
sub
loope
sahf
xchg
jnp
fidivs
mov
add
mov
loope
pop
cmp
ret
clc
push
pop
mov
lcall
pop
cmp
push
add
push
sbb
mov
nop
add
cmp
jg
jecxz
inc
bound
or
xchg
jb
movsb
clc
idiv
xor
cwtl
jg
and
ret
mov
in
ret
mov
xchg
out
sub
sbb
cmpb
jnp
mov
mov
cmp
pop
sbb
jno
imul
pop
cmp
testl
mov
jge
pushf
out
test
lods
sub
push
iret
mov
enter
or
test
adc
iret
call
mov
lea
jnp
loope
mov
mov
or
scas
mov
dec
out
and
idiv
pusha
mov
stos
push
cmp
aaa
mov
shll
outsl
pusha
add
ja
jp
stc
lea
cmpb
out
subb
pop
xchg
or
popa
adc
inc
adc
fs
stos
test
inc
inc
xor
int3
jbe
lods
insb
into
arpl
pop
xchg
mov
mov
jecxz
mov
frstor
sbb
dec
cltd
aaa
in
fs
call
jne
gs
popf
inc
in
dec
rcrl
cli
mov
mov
add
mov
jno
xchg
mov
inc
jnp
adc
dec
xchg
in
cltd
jns
cmp
outsb
mov
adc
sahf
cmp
and
dec
fdiv
push
mov
cmp
dec
scas
pop
mov
mov
clc
sahf
je
xor
jo
mov
repz
std
movsb
daa
mov
jp
out
dec
dec
jnp
imull
pushf
sbb
xor
out
subl
adc
fimuls
lret
push
cmp
jo
adc
fmuls
aas
jbe
mov
into
mov
sarb
popa
inc
jg
dec
in
mov
ror
stc
push
lods
clc
leave
inc
aas
and
inc
sub
iret
jecxz
xchg
icebp
push
pop
int3
aaa
and
mov
jo
stos
lcall
rcpps
add
divb
jmp
and
mov
sbb
mov
push
test
outsl
movsb
mov
mov
sbb
mov
les
adc
je
xor
mov
lret
cmpsb
cmp
push
andb
xlat
in
dec
aas
lcall
std
dec
sbb
or
fldt
adc
cmp
andl
sbb
cmp
or
mov
jb
out
cltd
clc
lock
inc
adc
push
jmp
enter
sub
repnz
adc
adc
rcll
xchg
test
sarb
cwtl
scas
dec
mov
sub
sbb
popf
pushf
arpl
mov
pop
mov
mov
jle
adc
push
pause
mov
cmp
sarl
data16
negl
in
and
divl
sbb
inc
nop
lock
xor
mov
xor
bound
or
mov
sarb
cmp
je
aaa
pop
jg
xor
and
or
push
sbb
pop
or
and
xor
dec
mov
jne
fdivrs
lea
mov
dec
repnz
mov
xor
ret
sti
dec
ret
push
cwtl
xlat
sub
dec
sbb
rol
mov
mov
adc
cwtl
mov
pop
push
inc
loop,pn
loopne
push
sub
push
jmp
jle
push
fnstcw
sarb
arpl
push
iret
std
fcomp
mov
sub
and
mov
pop
xchg
cmc
and
mov
sbb
dec
pushf
cmp
mov
or
pop
push
imul
ret
xchg
pop
mov
cli
dec
mov
jbe
xchg
decb
inc
push
cld
out
aam
ja
sbb
mov
dec
aas
ret
in
testl
jnp
mov
fwait
in
test
add
mov
mov
jge
lea
cmpsb
int3
fldl
pop
test
pushf
repnz
repz
cs
pop
pop
lahf
cmpsl
or
arpl
stos
aam
movsl
in
mov
mov
pop
scas
lea
or
dec
movsl
xchg
add
mov
jle
inc
xlat
and
nop
mov
xchg
sub
dec
mov
repnz
es
out
in
mov
add
ret
add
lcall
ficoms
and
add
jp
jecxz
mov
data16
mov
mov
xchg
dec
mov
addr16
outsb
in
or
stc
jae
lret
das
push
ljmp
in
cmpsl
test
ficompl
inc
mov
outsb
dec
adc
pop
aad
mov
test
add
xor
push
mov
loope
cmp
rcl
mov
or
pop
pop
mov
aad
lret
test
ljmp
loop
mov
push
loope
jl
ja
sbb
into
jnp
repnz
and
xchg
test
fdivl
test
xchg
cmp
sbb
lea
xchg
inc
jecxz
cmc
fcompl
pop
les
rorl
jle
ret
mov
and
cmp
test
pop
out
pop
dec
sbb
adc
loope
jns
pop
xchg
popf
inc
cmp
dec
sub
pop
mov
push
insb
and
mov
jbe
cmc
call
sub
andb
dec
push
push
out
iret
into
out
pop
rol
mov
mov
leave
push
hlt
pop
jecxz
and
jmp
mov
dec
mov
test
xor
pop
fstpt
aas
ljmp
push
xchg
shrl
push
xchg
hlt
lcall
jns
inc
push
xchg
scas
cmp
cltd
xor
sub
aaa
sub
lock
sub
out
xor
xchg
ss
push
movaps
sbb
lret
and
mov
xlat
sbb
push
cltd
sub
inc
jae
inc
clc
lahf
jp
sarl
data16
cli
lea
int3
jbe
fnsave
jp
int
popa
lret
adc
push
notl
hlt
mov
push
xchg
cmp
iret
dec
gs
inc
inc
pusha
shll
cwtl
je
or
adc
pop
mov
cltd
enter
mov
outsl
mov
pop
andl
jae
addr16
imul
ret
pop
inc
lods
inc
ljmp
mov
cld
jne
push
stos
lcall
push
outsb
add
adc
gs
shll
enter
inc
cmp
ret
clc
cmp
jl
sub
enter
xor
inc
pop
inc
jmp
push
xor
push
stos
or
mov
xchg
jb
test
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
