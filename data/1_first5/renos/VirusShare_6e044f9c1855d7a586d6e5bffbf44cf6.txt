jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cmp
popa
xor
cmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
movl
mov
push
push
call
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
push
push
call
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
movl
mov
push
push
call
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
movl
mov
push
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
mov
cmp
je
call
ret
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
xor
divl
test
jne
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
mov
cmp
je
ret
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
mov
cmp
je
add
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
cmp
je
mov
movl
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
sub
mov
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
mov
mov
call
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
push
mov
mov
xor
call
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
lea
mov
call
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
push
call
mov
mov
mov
call
mov
mov
mov
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
mov
movl
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
lahf
lahf
repz
lcall
mov
test
test
repz
xchg
lahf
mov
movsl
xchg
mov
mov
repz
mov
test
pushf
xchg
test
loope
lahf
lahf
repz
repz
repz
mov
repz
repz
repz
repz
repz
repz
jl
je
or
adc
xor
adc
mov
mov
int
mov
sbb
mov
adc
mov
sti
fnstenv
repz
fnstenv
repz
fnstenv
mov
jp
or
push
jae
mov
jp
or
push
ja
mov
jp
or
push
jnp
mov
jp
or
push
jg
mov
jp
or
push
arpl
repz
or
push
addr16
repz
or
push
imul
jp
or
les
jp
or
stos
stos
scas
xor
xor
sub
add
mov
xor
jl
xor
mov
xor
mov
cmpsb
jl
je
cmp
jp
cmp
das
mov
cmp
mov
mov
mov
mov
jl
sti
jp
pop
jl
cmp
mov
mov
mov
jl
cmp
mov
jp
seta
repz
mov
jl
iret
hlt
mov
jp
add
divb
repz
sub
je
div
add
repz
sub
mov
jp
daa
sbb
repz
repz
repz
daa
jl
push
mov
mov
mov
je
sbb
add
repz
daa
je
repz
jl
daa
jl
hlt
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
daa
jl
jecxz
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
pop
or
jl
pop
jl
adc
repz
jl
cmp
mov
jp
sbb
jl
pop
jl
pop
hlt
cmc
jp
and
je
cmc
mov
jl
cmp
mov
jp
je
adc
je
pop
idivl
je
xrelease
mov
out
mov
je
push
add
adc
adc
jl
fcomi
mov
jp
or
jl
fistpll
pop
cmp
repz
jecxz
mov
je
jmp
jl
cmp
mov
repz
repz
cmp
mov
mov
repz
repz
sti
mov
mov
jl
pop
jle
xlat
movss
popf
repz
or
adc
ret
adc
div
xor
mov
cmpsb
jl
xchg
jl
sti
jl
decl
inc
jae
sub
inc
cmc
sbb
or
cmp
xchg
repz
ret
lods
repz
inc
cmc
mov
jecxz
shl
repz
test
xchg
pop
sbb
sbb
sub
repz
pop
and
xchg
bound
sbb
repz
repz
repz
jae
testb
mov
data16
inc
repnz
add
mov
xor
jmp
ret
sbb
adc
adc
cmp
sbb
adc
test
sti
repz
repz
jp
dec
adc
adc
lds
add
adc
fidivrl
jp
xor
cmpsb
jl
jb
or
adc
jp
idiv
arpl
arpl
repz
jge
or
cmpsb
or
arpl
arpl
mov
xchg
cmp
bndstx
adc
mov
mov
repz
repz
jge
or
div
les
ja
or
adc
adc
int
or
repz
xrelease
cmp
or
les
jge
or
or
dec
addr16
adc
adc
xor
or
dec
jmp
repz
xor
repz
or
or
jae
arpl
xor
or
arpl
arpl
mov
xchg
push
scas
xor
mov
cmpsb
jl
mov
xor
arpl
repz
sti
arpl
arpl
sti
arpl
arpl
repz
cli
arpl
arpl
mov
jnp
push
les
push
cli
arpl
mov
les
mov
jnp
jmp
repz
push
cli
arpl
arpl
arpl
arpl
arpl
cli
arpl
arpl
repz
push
les
jge
push
jge
jmp
repz
jge
adc
xor
add
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
movl
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
mov
call
mov
cmpl
je
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
cmp
je
mov
subb
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
xorb
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
incl
mov
cmp
jne
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmpb
jne
call
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
movb
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
mov
pop
ret
lea
push
mov
add
call
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
call
call
call
test
jne
jmp
jmp
movw
movb
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
call
lea
mov
pop
ret
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
push
call
cmp
jne
push
call
test
jne
push
call
mov
cmpl
je
push
call
call
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
pop
ret
add
push
add
add
outsl
add
add
add
add
jae
jae
add
insl
add
push
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
sbb
jne
mov
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
call
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
ret
ret
lea
inc
jno
outsb
outsb
cwtl
push
add
mov
adc
adc
dec
mov
or
rcrb
push
cltd
add
push
add
nop
sti
add
les
in
mov
jbe
add
add
daa
ja
add
xlat
add
in
mov
add
mov
lahf
insl
imul
jle
call
add
add
jo
mov
or
fucomip
jne
les
xchg
push
fwait
in
cmp
sbb
stos
push
hlt
jl
add
add
cs
popf
cmp
add
nop
cmp
push
push
ss
ljmp
mov
mov
add
repnz
in
add
test
lock
pop
ret
add
test
xor
pop
add
es
sub
negb
add
in
xchg
in
mov
jb
and
add
add
int
into
data16
push
add
lahf
add
and
std
adc
jo
fiadds
int
pusha
outsb
repnz
add
inc
add
ret
sub
loopne
aaa
add
cmpsl
add
dec
mov
mov
loop
movsb
push
aad
mov
daa
pop
sbb
add
jno
addr16
xor
mov
xchg
add
xchg
add
jb
dec
das
add
push
push
add
add
push
pop
inc
inc
jg
push
jecxz
or
stc
sbb
xlat
leave
sub
add
add
cs
dec
popf
bound
jle
jns
scas
add
add
insl
incb
cmp
adc
bound
cwtl
or
push
hlt
mov
jge
jp
cld
push
add
add
sbb
hlt
sbb
add
loope
add
dec
sti
add
cltd
pcmpeqd
add
add
inc
add
add
data16
repz
aam
xchg
add
cltd
add
sub
xor
add
jbe
or
add
and
adc
push
push
pushf
mov
add
dec
add
inc
aas
add
and
mov
lds
xchg
add
pop
add
xchg
out
jne
adc
das
lret
cmp
xchg
dec
dec
add
loop
pop
pop
add
add
aas
pop
add
jno
push
add
adc
repz
add
into
sub
fadd
out
outsl
add
add
xor
mov
push
sbb
iret
dec
pop
or
add
add
add
add
add
rolb
loopne
mov
push
dec
inc
add
mov
lds
jecxz
add
rolb
cmp
add
insb
xchg
xchg
repnz
popa
add
add
dec
dec
test
mov
add
cmp
adc
into
jp
rolb
sbb
push
or
jbe
arpl
cltd
inc
add
mov
in
add
ss
and
sbb
mov
add
outsl
sub
aaa
cltd
push
enter
roll
sbb
push
push
or
lods
fs
inc
add
add
jle
dec
fcmovne
mov
out
add
dec
int
add
jecxz
pop
add
in
adc
test
add
xchg
push
idivl
push
jg
add
and
stos
add
add
cmp
daa
loop
jo
shrl
xor
pop
jbe
or
push
jnp
mov
mov
jp
mov
xor
ret
add
add
ret
jg
sbb
movsl
mov
ret
add
dec
and
and
inc
dec
inc
cmp
jns
add
add
pop
pop
ljmp
fisubrs
pusha
lds
roll
pop
in
bnd
jae
leave
mov
jbe
arpl
test
test
adc
push
test
repnz
adc
in
add
int3
mov
pop
icebp
push
shrl
sbb
pusha
and
push
cmp
or
movsb
pop
push
cmpsb
lret
xchg
cmpsb
scas
mov
shl
mov
daa
ret
and
cmp
mov
add
sub
aas
dec
andl
movsl
push
sbbb
mov
push
push
ss
test
xchg
mov
sub
js
imul
sarl
nop
pop
cmc
mov
ret
cmp
sub
mov
test
orb
dec
lret
pop
iret
or
lahf
sbb
mov
add
lods
pop
xor
push
push
xor
int
ljmp
pop
stos
int
lcall
nop
fsubl
inc
jle
pop
leave
mov
test
fidivrl
mov
stc
nop
mov
mov
mov
sub
dec
ss
out
cmp
pop
popf
test
lret
adc
mov
add
cltd
pop
mov
pop
test
xor
jae
outsl
add
mov
stc
out
fnsave
xchg
or
adc
xor
pop
movsl
mov
into
cmpsb
sbb
mov
mov
xor
in
pop
cmp
push
or
fsubr
gs
push
loopne
xchg
adc
ja
adc
push
mov
adc
jb
add
xchg
sub
fsubrs
cmp
in
pop
sub
xor
std
push
mov
cs
xor
cli
test
dec
inc
pop
inc
bnd
adc
les
lcall
jno
pop
call
stos
icebp
mov
add
adc
call
out
pop
jle
sub
inc
lods
xchg
inc
aas
out
jo
jb
loope
dec
hlt
jmp
je
leave
push
jecxz
push
sbb
sub
fistps
hlt
lods
mov
xor
xchg
dec
mov
aad
mov
pop
mov
fisttpll
movsl
pop
das
fwait
push
push
mov
cmp
dec
sbb
dec
sbb
es
mov
insl
leave
repz
insl
outsb
inc
cmpsl
ret
mov
out
or
pop
lret
cmp
fimull
xor
imull
or
jg
imull
sub
xlat
aam
mov
adc
mov
fldl
clc
out
mov
ljmp
xlat
lods
mov
repz
testb
xchg
in
jns
push
cmp
lods
ud0
add
adc
sbb
das
and
stos
icebp
push
test
mov
xchg
dec
push
sbb
xor
rclb
pop
stc
pop
ljmp
pop
sahf
out
add
xchg
mov
cltd
xor
in
cmpsl
or
pop
lds
or
sub
mov
jne
mov
ss
ja
mov
inc
cli
mov
or
iret
lcall
cli
jp
cmp
clc
fucomi
jb
push
vcvtpd2udq
incb
xchg
add
out
xchg
cld
sub
dec
scas
in
and
and
xor
mulb
mov
cs
jle
cmpsb
pop
in
sbb
dec
fbstp
inc
xor
jmp
dec
movsl
addr16
out
push
imul
popf
xor
aad
cmc
fmull
test
repnz
adc
insb
mov
inc
jnp
add
out
rcll
sar
adc
lret
or
mulb
ret
stos
pop
push
pop
inc
xchg
scas
pop
jae
out
inc
icebp
adc
push
push
fidivl
xchg
dec
repnz
sbb
out
imul
and
iret
cmp
and
mov
mov
mov
xor
das
enter
mov
arpl
test
jmp
scas
jge
ret
lea
add
push
mov
add
and
int3
test
jl
or
push
movsb
xorl
stc
mov
scas
mov
and
fisubl
cmp
xchg
adcl
adc
in
mov
sub
adc
jmp
dec
lock
movsl
movsl
pop
fbld
inc
adc
lahf
pop
inc
xor
inc
fisubrl
pop
xchg
inc
fadd
imul
pop
pop
push
js
mov
pop
xor
xor
negl
loope
fwait
lds
loopne
cmp
sbb
shrb
clc
dec
cs
andb
jae
pop
stos
add
out
dec
xor
test
push
xchg
mov
repnz
push
repz
sub
movsl
push
decb
fmul
mov
sub
aam
sahf
fsubs
es
out
and
jg
into
jno
mov
mov
jl
and
shll
mov
iret
fcoms
xor
mull
mov
roll
mov
mov
sbb
and
xor
adc
pop
cmp
sub
lods
stc
cmpsb
enter
sbb
adc
jne
lcallw
inc
pop
mov
pushf
mov
cli
cmp
mov
jge
sub
jae
adc
mov
jne
loopne
fcoml
adc
icebp
pop
imul
add
inc
adcb
mov
cmp
xor
sub
mov
mov
push
cmpsl
pop
mov
movlps
cmpsb
cli
mov
flds
gs
repz
dec
jb
pushf
fmuls
jnp
sub
pop
or
pop
adc
outsl
outsl
pushf
cltd
adc
popa
cmp
mov
xchg
pushf
inc
pop
sbb
mov
mov
dec
imul
jecxz
lock
std
shlb
cwtl
bound
push
mov
sbb
lret
sahf
xor
inc
sub
and
adc
jp
sub
hlt
lods
out
pusha
xor
es
in
lods
cld
mov
cmpsl
shr
mov
in
cld
jbe
xchg
lret
cmpsl
fdivrs
mov
loope
shlb
push
mov
sub
pop
mov
ret
mov
push
xchg
pop
clc
add
xchg
push
inc
xchg
ljmp
mov
mov
adcl
pop
add
add
fiaddl
test
cmp
xchg
movsl
imul
popa
jg
imul
ret
rcrb
pop
movsb
cmp
std
add
add
scas
lret
push
jge
xor
divb
add
cmp
std
insl
in
lcall
ja
mov
insl
inc
xchg
daa
jl
stc
adc
dec
mov
fdivs
mov
cmc
out
push
pop
mov
inc
push
jns
cmp
xchg
push
mov
out
mov
or
repz
stos
jp
or
mov
lock
and
lret
outsl
dec
in
mov
fists
clc
xchg
out
xchg
jmp
adc
pop
adc
cs
mov
push
ret
mov
mov
insb
push
add
cmp
scas
push
cmc
repz
gs
adc
xchg
push
mov
ret
std
pop
mov
lock
xor
sahf
or
scas
lret
int3
inc
jmp
test
xchg
lahf
test
out
repz
fidivs
cmpsb
lds
imul
imul
hlt
jbe
mov
jbe
mov
shlb
xchg
mov
add
fimull
push
xchg
nop
xor
ror
subl
xor
push
xor
movsb
movsl
and
push
inc
je
cmpsb
fsub
stos
in
mov
dec
xchg
daa
rorl
inc
cmpsl
fnsave
popf
jnp
or
push
dec
pop
mov
ds
ja
movsl
fs
and
cmpsl
or
push
mov
das
mov
inc
imul
inc
xor
adc
icebp
pop
jae
pop
push
arpl
loope
push
sub
repnz
dec
sub
outsb
mov
popf
rolb
cmp
lea
xorb
ljmp
test
xor
jecxz
push
xchg
test
insl
iret
jb
test
mov
rcr
jns
pop
sub
mov
into
test
cli
pop
jg
in
out
mov
sbb
mov
inc
mov
and
test
or
into
pop
mov
bound
sbb
mov
and
add
pop
sar
out
insb
xor
loope
loop
stc
es
pop
push
inc
fs
in
adc
adc
xchg
rep
jp
leave
mov
es
mov
sub
xchg
cmp
jne
or
outsl
arpl
xor
loopne
cmp
pop
loope
ja
rol
xchg
imul
mov
inc
xchg
pmulhuw
sbb
dec
into
imul
rcll
loop,pt
mov
sarl
sti
xchg
add
cs
add
mov
loopne
pop
in
in
dec
add
call
jns
mov
ss
jne
inc
lea
lret
imul
test
pop
mov
xchg
jmp
std
push
pop
loopne
inc
out
fadd
inc
loop
sub
sub
sbb
dec
loop
je
out
jecxz
mov
jecxz
ja
rcrl
jb
mov
hlt
xchg
out
mov
fcmovnbe
pushf
or
js
std
mov
in
lock
clc
das
pop
adc
mov
stos
fs
shr
or
es
pop
insl
xchg
adc
dec
arpl
push
mov
popf
fistps
cld
mov
xor
call
fldt
mov
call
sub
mov
aam
sti
rol
xor
rcr
xchg
test
cmp
lcall
cmp
popa
std
dec
push
lods
mov
sbb
mov
fisubl
bsr
inc
cltd
sub
test
test
clc
mov
in
inc
xchg
je
test
mov
sti
sbb
xor
dec
in
lds
dec
daa
into
add
leave
out
out
push
push
adc
mov
or
adc
or
inc
fcmovbe
mov
lods
es
ret
dec
rcll
cltd
or
es
jge
stos
dec
rcll
jne
icebp
push
out
xor
jl
pop
add
cmp
in
test
xchg
lahf
pop
gs
clc
jecxz
out
and
or
lea
sub
jp
sti
leave
mov
repz
std
or
dec
sub
in
xchg
xor
dec
lret
add
das
jmp
loopne
xlat
xor
mov
icebp
mov
sbb
add
popf
stos
divl
daa
and
add
jnp
mov
push
lods
bound
iret
mov
in
ret
pop
fadds
test
cmpsl
test
xchg
mov
or
sub
lret
inc
push
dec
push
xchg
negb
sub
pop
or
enter
adc
pop
shr
sub
mov
push
aaa
hlt
shll
arpl
lahf
jbe
pop
fdivrl
movsl
stos
sbb
pusha
aaa
push
inc
testl
cs
jle
movsl
pop
imul
xor
sub
scas
dec
sbb
or
cmp
ds
movsb
xor
adcb
cmpsb
cmpsb
pop
sub
out
enter
daa
shlb
cmp
dec
jno
stos
dec
jl
mov
ds
in
movsl
imul
and
push
lahf
cwtl
xchg
push
popl
cmp
repz
push
inc
cli
insb
cmp
sar
pop
test
out
js
xor
mov
xor
xor
or
mov
xlat
popa
cmp
sbb
outsb
out
sub
adc
fimuls
or
movb
xor
fsubr
int
inc
jo
call
pop
lcall
and
and
push
sub
xor
pushf
test
adcb
jg
adc
mov
clc
lret
mov
pop
push
ss
aas
cmp
mov
sbb
and
sub
dec
imul
sbb
loopne
cmc
scas
lcall
insl
xchg
loop
push
cltd
stc
adc
cld
xor
out
mov
cmc
mov
mov
cli
mov
ret
test
or
or
pop
cmpsb
movsl
lea
loopne
test
adc
adc
fsub
add
call
adc
cmp
pop
dec
sub
pop
inc
in
sbb
inc
and
divl
iret
add
jecxz
fs
adc
enter
or
out
repz
jmp
xchg
lea
sbb
daa
inc
cmpsb
pop
jb
jl
mov
fstpt
pop
addr16
testl
cs
jb
pop
pop
dec
pop
mov
inc
jecxz
int3
mov
xchg
jge
push
sub
cwtl
fdivrs
orb
arpl
fildl
jne
mov
push
mov
jle
lock
jns
aad
pusha
mov
jbe
push
sarl
lods
and
insl
jnp
mov
cmp
mov
je
inc
cld
int3
loopne
lret
test
mov
out
into
cmp
test
jle
clc
push
inc
sub
out
cmp
fdivs
xchg
push
and
and
mov
xor
xchg
rcll
xor
popa
adc
mov
mov
pop
movsl
push
xchg
shll
nopl
add
imul
mov
testb
adc
and
les
jg
repnz
xor
pop
cli
jo
stos
fldt
inc
push
lock
add
in
add
xchg
int
fstpt
lcall
jb
mov
cmpl
pop
addr16
pop
dec
les
jns
mov
adc
dec
mov
jb
xchg
movsb
adc
pcmpeqw
bound
mov
inc
xchg
out
inc
mov
sub
cmp
movsl
xor
mov
sbb
ja
xchg
mov
fistpll
fstpl
nop
fs
dec
jge
imul
pop
iret
jmp
stos
mov
addl
push
popf
movsl
jle
mov
inc
shlb
sbb
insb
hlt
mov
jnp
cmp
scas
sbb
push
repz
cmp
ret
pop
push
inc
mov
out
pusha
popf
lahf
inc
cli
add
pop
insl
xchg
lods
add
out
out
fcmove
cmpsl
mov
sbb
xchg
xchg
imul
push
lds
push
mov
fwait
leavew
sqrtsd
or
jmp
jbe
adc
jge
imul
outsb
aaa
adc
out
int3
imul
popa
push
dec
push
sub
jo
inc
subl
cmpb
mov
xor
push
loop
loop
hlt
in
outsb
inc
inc
enter
daa
mov
xchg
outsb
jno
dec
cmp
pop
mov
push
adc
push
bound
mov
inc
mov
fistps
hlt
jno
adc
pop
popf
push
push
in
loope
xchg
into
sub
xchg
cmp
sahf
mov
gs
sarb
mov
sbbb
sbb
fs
xor
push
fwait
cmpsl
clc
int
int
sub
addb
imul
cli
jmp
add
fmul
add
rorl
test
push
jg
cmp
mov
or
mov
insl
push
ss
push
scas
fadds
mul
push
dec
lret
add
or
leave
mov
sbb
pop
popa
into
and
jecxz
xor
std
xor
jecxz
xor
lret
pusha
shlb
add
push
xlat
hlt
and
lods
dec
dec
sti
mov
hlt
jns
jae
xor
std
xlat
cmp
jae
or
jmp
gs
shrb
sbb
icebp
pop
pop
add
adc
and
adc
adc
push
jl
int
mov
sbb
shlb
and
aaa
mov
test
push
jnp
lret
aad
xchg
jno
adc
inc
fdivl
sub
repz
loope
jnp
mov
call
cmpsb
adc
adc
push
imul
cmc
pop
or
addr16
std
xchg
cld
inc
sbb
test
jb
daa
push
dec
rorb
je
push
outsb
jecxz
and
not
sar
lds
xchg
mov
mov
nop
arpl
nop
cld
dec
dec
pop
jecxz
fldt
adc
ds
jae
inc
jl
lock
das
pop
xor
mov
sbb
sti
and
int
rorl
shl
insl
in
addr16
pop
push
cmpsl
mov
lcall
dec
inc
daa
cld
idivl
lret
hlt
sub
repz
arpl
pop
and
lret
push
icebp
sub
shr
aam
mov
xor
movsl
mov
loop
call
xchg
adc
addr16
in
fs
out
out
adcb
cmpsl
xor
or
add
sub
lcall
xchg
pushf
test
loope
xchg
repz
xor
shrl
sbb
pop
movsl
leave
scas
stos
lret
push
xchg
andb
pushl
pushl
outsb
and
cs
or
pop
pop
xor
out
mov
push
mov
pop
and
sub
cmc
cld
dec
mov
inc
inc
push
pusha
pop
or
into
sbbb
jns
jne
mov
mov
out
push
cmp
sub
leave
sti
in
mov
mov
sub
cmp
cmp
jp
cmc
jmp
mov
mov
mov
sbb
xchg
cltd
mov
fildll
mov
jmp
jbe
cmp
ja
jle
int3
sub
mov
andb
stos
fnsave
sbb
mov
orb
jnp
sbb
test
adc
sbb
jb
cli
ret
ficomps
sbb
mov
mov
inc
std
jecxz
or
pop
sti
es
data16
jle
mov
movsb
fistpl
lock
mov
pop
adc
lds
mov
and
push
xor
bound
scas
hlt
push
loop
arpl
test
sbb
shlb
inc
mov
aam
add
pop
negb
pop
test
push
xor
sbb
jo
push
lret
cmp
and
jne
cmp
xor
out
arpl
push
adc
push
xor
xor
fstl
insl
jno
xor
fstl
ds
inc
outsl
movsl
jns
mov
mov
addr16
fsubs
xor
pop
ds
mov
inc
sbb
mov
pop
negb
js
add
pop
xor
push
fst
loope
adcb
push
inc
ljmp
test
stos
pop
subb
xor
test
and
xor
push
push
sahf
out
int
cmp
pop
es
gs
dec
fdivrl
and
ret
sahf
fs
push
orb
mov
push
jb
mov
or
xor
ss
xor
fdivr
dec
push
negl
icebp
mov
mov
sbb
xchg
into
or
inc
cmc
cmp
xchg
xor
xchg
fs
mov
ss
xchg
ja
sub
data16
pusha
lds
mov
push
cli
or
std
cmp
mov
or
out
adc
gs
mov
fwait
pop
ds
les
dec
insl
subb
lods
adc
sbb
pop
call
std
sbb
call
jle
pop
cld
repnz
test
cmp
scas
jmp
aad
mov
jmp
adc
mov
inc
push
and
fldenv
pop
repz
sbb
out
je
imul
fdivrl
jg
fdivr
adc
aam
inc
idivl
jmp
aad
pop
lods
popf
call
inc
xor
aas
or
jb
jp
dec
inc
jnp
je
push
jb
adc
stos
adc
insb
or
mov
xchg
inc
mov
or
andl
add
pop
jno
mov
pushf
jae
push
faddp
lock
das
test
mov
shlb
and
rcl
fsubr
xchg
es
mov
sub
std
mov
mov
and
pusha
lret
arpl
inc
mov
std
ljmp
out
movsb
rcrb
push
push
aam
sbb
push
test
gs
clc
in
xchg
inc
xchg
dec
cmc
sbb
roll
inc
mov
xchg
dec
pop
test
mov
outsl
add
mov
iret
imul
enter
pop
push
xchg
out
test
fbld
xchg
jp
in
roll
imulb
push
ss
add
sbb
fdivrp
rcrl
xor
stc
push
xor
mov
mov
or
in
ss
mov
dec
stos
arpl
or
pusha
out
or
dec
jp
int3
jne
mov
out
int
in
shlb
pop
xchg
jno
push
rcrb
in
pop
out
repnz
sub
xor
mov
sbb
add
mov
xlat
adc
bnd
sbb
in
xor
inc
clc
xchg
xor
fsubr
sbb
ds
inc
and
andl
and
sbb
cmpsl
push
mov
add
and
jae
insb
lret
jnp
mov
scas
fidivrs
int
pop
ds
rorl
ret
insl
pop
jge
out
enter
adc
inc
add
scas
or
lcall
fidivl
ja
xchg
sti
outsl
or
fwait
cmp
xchg
add
fdivrp
addr16
or
mov
mov
push
leave
xorb
mov
jle
jbe
imul
movsl
or
lods
cmp
aaa
popl
pop
add
inc
mov
pop
imulb
push
adc
xor
cmp
sub
lds
and
cmc
xchg
cmpsb
call
enterw
daa
mov
push
jp
push
test
ds
sbb
es
mov
and
lahf
cmc
pop
notl
mov
cli
push
push
ljmp
or
pop
sbb
lret
outsl
sar
or
xchg
jnp
add
jge
outsb
pop
gs
shrb
mov
cmpb
sbb
and
sub
xor
adc
adc
mov
mov
pop
movsl
rclb
push
mov
add
sub
inc
lds
cmpsl
sub
jg
xchg
sbb
add
and
aas
je
stos
es
mov
xlat
fdivrs
pushf
mov
and
dec
sarl
xor
cmp
into
jmp
in
add
cmp
repz
or
sub
loop
cwtl
cmpsl
stc
cmp
cltd
fs
js
mov
ja
sub
fsubrs
mov
xchg
out
cld
aam
cmp
xor
fsubl
shrl
ret
add
mov
jae
pop
pop
fcompl
adc
out
adcl
sti
pop
xchg
sbb
icebp
sbb
cmp
pushf
xlat
pop
adc
dec
in
mov
jg
cmp
dec
sbb
cs
sub
movsb
in
nop
lret
lods
dec
sub
cwtl
cltd
rol
int
repz
cwtl
movb
push
call
movsb
cmp
pop
mov
mov
pushf
lock
or
or
cmp
outsl
stos
inc
or
add
addb
fmuls
dec
mov
verr
and
ret
negb
insb
std
adc
insl
mov
sbb
mov
dec
mov
dec
xor
xchg
xor
add
cmp
jmp
pop
mov
xchg
repnz
adc
insl
xor
dec
dec
cmp
cmpsl
mov
outsl
inc
icebp
stc
xor
cld
dec
aaa
add
sarb
mov
add
shlb
add
ds
aam
into
jge
outsb
andl
xor
aas
clc
sub
ds
or
cmp
cmp
int
dec
iret
ret
xchg
xchg
dec
adc
pop
push
mov
add
call
sbb
mov
sub
test
jo
xchg
fisubrs
sbb
push
dec
pop
sti
idivb
test
je
fldcw
lcall
int
xor
pop
mov
mov
into
mov
enter
dec
adc
push
pop
cwtl
mov
das
dec
popf
punpcklbw
outsl
or
insl
fwait
cmp
fnstenv
adc
mov
mov
adc
push
cmp
pop
sahf
in
sbb
in
mov
fstpt
sbb
xor
push
rcrb
dec
imul
fnstenv
mov
test
in
das
mov
fucomip
mov
xchg
push
repnz
adc
or
std
mov
popf
sbb
push
push
decb
stos
ret
add
insb
xor
pop
adc
enter
xor
mov
ret
inc
pop
mov
mov
shll
sbb
mov
inc
add
or
adc
jns
in
notl
inc
cmp
test
adc
dec
xchg
std
rcrb
mov
or
push
hlt
in
repnz
cld
lods
jbe
les
out
negl
addr16
dec
dec
pop
or
mov
int3
sub
jne
and
int3
xor
xchg
orps
pop
cli
cmp
int3
movsb
movsb
pop
fcoml
aas
xchg
cmpsb
imul
in
and
enter
daa
mov
cmp
jno
inc
xor
test
pop
aad
loop,pt
movsl
xchg
jp
out
rcrb
fucomi
ds
pop
ss
ss
push
pop
inc
jns
and
pop
scas
mov
cmp
fs
jo
pop
cmp
mov
adc
dec
test
mov
xchg
xlat
pop
sbb
pusha
mov
push
movsb
rol
dec
sarl
rclb
lcall
imulb
mov
dec
pop
test
mov
jg
popa
mov
jns
mov
inc
mov
cmp
and
mov
out
pushf
mov
fdivs
xchg
negl
dec
sub
iret
rorl
add
jno
into
into
out
cmc
lret
xor
jmp
sbb
sub
stc
lock
mov
add
dec
lods
std
push
mov
fwait
adc
outsl
mov
jle
push
cmpsl
or
mov
pushf
gs
xor
pop
jl
sbb
lock
imul
stos
movsl
add
push
xchg
ficoms
js
jne
rcl
lods
imul
lret
in
ljmp
repz
aad
mov
xor
sub
fxch
adc
fcom
test
xor
inc
movb
call
and
dec
adc
adc
pushf
fwait
bound
sti
cmp
pop
repz
inc
xchg
push
stos
inc
imul
pop
jb
mov
movsl
je
imul
xor
adc
mov
or
mov
and
jmp
dec
and
xor
pushf
int
lock
pop
jle
mov
iret
mov
ds
shlb
pop
jbe
jbe
enter
ja
pop
loop
dec
dec
js
mov
shl
stos
cld
js
cwtl
lret
inc
bound
das
and
xor
ja
and
scas
rolb
sub
dec
aam
aad
ret
std
sub
pextrw
ret
inc
clc
arpl
xchg
int
ret
and
lods
movsl
incl
mov
xchg
frstor
and
add
xor
insb
loopne
movsl
pop
cmp
push
sub
xchg
loop
dec
fwait
in
shll
stos
cwtl
pop
cmpsb
lret
sbb
jl
in
add
push
iret
dec
decl
orl
daa
and
or
sbb
mov
pop
or
push
adc
dec
nop
outsl
or
sbb
insb
or
add
fwait
push
pop
data16
push
iret
mov
into
xchg
out
mov
lahf
out
jns,pt
sbb
in
leave
sti
xchg
sub
sub
sub
inc
sbb
mov
or
and
adc
std
push
in
nop
mov
fisttps
sub
xchg
fchs
cmp
or
int
xlat
add
add
and
rclb
mov
cmp
mov
in
insb
mov
jmp
scas
movsb
pop
push
push
add
setb
vprotd
nop
pop
jmp
push
inc
ficomps
jae
pushf
std
inc
push
inc
push
or
nop
pop
out
jecxz
or
xchg
test
sarl
sub
fiadds
cltd
shlb
mov
pop
outsb
xchg
leave
jo
xor
cmp
arpl
xchg
scas
jge
outsb
fistpl
and
orl
fwait
jg
and
int3
adc
cmp
xor
repnz
lds
jmp
lock
dec
push
push
push
into
dec
cmpsb
out
arpl
enter
daa
mov
faddl
jl
out
adc
stc
xchg
ds
mov
jmp
sbb
lahf
xor
push
scas
fs
ljmp
nop
fcmovnu
pop
imul
js
adc
push
stos
adc
jnp
pop
sub
mov
into
outsb
std
adc
and
cwtl
push
andb
mov
out
out
mov
mov
int
fisubl
pop
mov
sbb
neg
jnp
jns
nop
aaa
sahf
dec
dec
pop
test
fs
fnstsw
jg
decl
mov
pop
ljmp
xlat
pop
and
and
xor
mov
xor
neg
repz
outsl
shll
mov
or
sbb
lret
mov
xchg
pop
sbb
test
cmpsl
loop
pop
stc
cmpsl
and
ljmp
data16
inc
push
lods
in
push
mov
adc
cli
mov
dec
mov
or
push
lds
pop
loopne
or
pop
fwait
enter
jmp
imul
out
hlt
xchg
mov
xchg
cmpb
xchg
fwait
xlat
fmul
stos
sub
mov
adc
push
lret
lods
cmp
mov
xor
cmpsl
nop
jl
push
dec
aas
imul
push
sub
repz
movb
fs
mov
outsb
sahf
adc
jb
inc
push
sub
ljmp
inc
sbb
cmpb
lds
jb
lods
adc
out
je
sbb
inc
sbb
mul
arpl
std
popa
das
lea
in
mov
mov
jae
or
fucomi
sub
mov
pop
lock
js
das
xchg
popf
out
mov
cmc
mov
rol
cmp
mov
dec
insl
push
cmp
jbe
cmpsl
mov
mov
icebp
cmpsl
mov
cld
mov
push
mov
and
iret
dec
popa
pop
inc
out
popa
rclb
outsb
sub
rcrb
das
jbe
mov
fistl
les
fnstsw
leave
clc
sahf
cmpl
popa
xchg
inc
lods
adc
add
push
pop
or
adc
mov
idiv
sbb
cltd
je
lahf
test
je
mov
test
xchg
pop
and
xchg
flds
rorl
je
stos
xchg
xchg
push
pop
mov
aaa
add
dec
ljmp
and
or
add
ja
shl
push
mov
push
sti
xorl
cmpl
pushw
test
xchg
xor
jne
ss
repz
push
andb
lds
aam
in
lret
aad
jns
push
jo
std
sub
and
addr16
xchg
jp
pop
shlb
dec
dec
inc
mov
jle
lahf
mov
mov
mov
push
pop
adc
sub
mov
xchg
mov
jbe
push
and
popf
push
xchg
hlt
push
jl
inc
stos
test
sub
stc
jb
add
cwtl
mov
adc
fldcw
out
or
ret
test
divl
jmp
loopne
or
adc
push
bound
or
dec
hlt
pusha
xchg
add
pop
imul
fsubp
es
lds
rclb
dec
repnz
ja
leave
out
test
adcl
lret
jbe
rcrl
aaa
int3
insb
jb
mov
or
orl
mov
pop
dec
jo
push
lret
scas
mov
jle
out
push
in
and
mov
cmp
enter
daa
mov
xor
jno
jmp
jl
inc
mov
test
movsl
xchg
dec
and
lods
lahf
push
adcl
push
mov
fildl
enter
lret
ficomps
loopne
js
xchg
jg
sub
jnp
add
sub
pushf
xor
outsb
inc
xor
xor
es
mov
adc
dec
shrb
push
stos
push
int
fadds
pop
and
lcall
paddusb
sbb
mov
cli
test
xchg
cmp
pop
jg
cmp
mov
jb
mov
popf
mov
mov
out
clc
hlt
ss
push
cmp
jmp
pop
negl
jo
sar
gs
add
sbb
mov
xor
add
movq
or
ret
stc
pop
sbb
xchg
adc
push
sbb
lret
and
out
out
cli
aad
mov
cmp
in
push
movsb
fs
sub
js
mov
repnz
icebp
mov
mov
sub
or
sub
cld
inc
fnstsw
jmp
fst
sbb
sub
shll
rcrb
mov
dec
fcoml
sahf
lods
cmc
inc
popf
dec
jge
cmp
in
shl
mov
mov
stc
call
and
fwait
pop
movsb
cmpsb
mov
pushf
icebp
sbb
dec
pop
cmp
inc
lahf
test
xchg
jb
iret
fmuls
test
enter
jnp
and
stc
std
or
jne
cmp
mov
mov
cltd
inc
or
adcl
dec
idivb
cld
mov
dec
cmp
cli
lods
mov
jb
xlat
mov
lods
pop
sahf
and
or
rcll
shlb
xor
jmp
dec
inc
jno
cmpsl
mov
pop
popa
icebp
jle
adc
lret
pop
or
mov
sbb
adc
bound
sub
mov
lcall
push
mov
fcomp
movsl
mov
clc
xchg
dec
ljmp
sahf
shl
lods
jnp
pop
mov
jno
mov
push
out
pushf
testb
mov
cltd
cltd
stos
xor
test
add
mov
loop
xchg
dec
xchg
test
popf
popf
xchg
or
mov
mov
loope
and
push
jne
movsb
push
ret
add
xchg
mov
xor
push
mov
and
mov
pop
push
andb
orb
dec
pop
leave
jns
ja
iret
fmuls
dec
xchg
inc
dec
in
or
lock
dec
push
or
jne
or
out
dec
sbb
bound
lret
in
and
out
cwtl
aaa
sub
pop
aas
stos
sbb
jp
xor
cwtl
mov
fucomi
sbb
or
mov
int3
insl
fisttps
dec
xchg
jg
push
xchg
insl
aaa
loop
fcomip
lret
stos
dec
popf
out
stos
mov
mov
inc
sbb
insb
jbe
mov
pop
fisubrl
popf
xor
iret
dec
push
daa
ret
push
pop
pop
or
hlt
enter
xor
inc
or
mov
les
xchg
inc
loope
loop
std
test
sbb
push
lea
fs
mov
shrb
repnz
sub
into
sbbl
jge
dec
sbb
rcrl
xchg
push
rolb
dec
out
int3
jmp
call
push
lahf
frstor
jo
mov
popa
push
adc
adc
cmp
jb
movsb
std
dec
ds
mov
fcom
in
fadds
loope
mov
cmp
jno
hlt
aaa
jl
jb
dec
xlat
iret
jmp
movsl
pushf
add
mov
in
cltd
push
push
clc
inc
test
adcb
jecxz
call
pop
mov
stos
cltd
pop
imul
loope
inc
repz
dec
std
cmp
bswap
outsb
mov
das
dec
rcr
popl
cmp
sbb
ja
push
push
stos
xor
mov
lods
in
outsl
int
mov
mov
mov
out
push
or
pop
sub
pop
sahf
xchg
push
or
adc
xor
jbe
mov
mov
or
and
adc
mov
cmp
fsubs
pop
pop
lret
repz
sbb
scas
nop
into
ja
push
cmc
pop
je
xor
mov
mov
jbe
stc
adc
dec
cwtl
adc
pusha
xor
lods
mov
jle
pushf
inc
enter
dec
cli
or
pushf
xor
pop
cmp
dec
pop
or
insb
inc
decb
out
mov
in
add
les
imul
clc
lds
daa
bnd
sbb
es
xlat
pop
xchg
in
sub
cmc
cmp
sub
sti
or
cs
fs
xor
xor
cs
std
cmc
xchg
inc
mov
cmpsb
fnstenv
stc
js
repz
js
lea
aad
inc
loopne
mov
xchg
fstl
add
pushf
pushf
mov
int3
pop
fdivrl
js
mov
ret
xor
dec
lcall
jecxz
lods
ret
mulb
popf
std
scas
insb
insl
cwtl
cmc
cltd
mov
push
mov
mov
sbbl
cld
fcomp
dec
into
test
nop
xorb
push
cmc
shrb
jmp
mov
arpl
xor
shll
jp
mov
xchg
fcmovb
dec
cmp
dec
cmpsl
mov
shlb
stc
xchg
call
mov
and
fwait
pop
subl
sub
nop
aam
loope
ret
stos
mov
fcmovnu
int3
incb
clc
adc
pop
xchg
mov
sahf
popa
mov
push
lods
out
cmp
xchg
ds
out
aam
mov
push
leave
xchg
add
jmp
cltd
loop
mov
fsub
icebp
mov
xorl
scas
jp
dec
mov
loope
cmpb
loopne
pop
sbb
sarl
jl
pop
cmpsl
inc
inc
stos
fs
clc
push
gs
into
add
mov
mov
add
cwtl
cltd
mov
mov
pop
mov
mov
test
dec
imul
ja
cmp
mov
cmc
cmp
jne
js
mov
jp
out
sub
or
dec
pop
jns
xor
in
int3
or
out
movsb
jnp
es
or
xor
jp
lds
mov
dec
fstps
jle
gs
in
or
pusha
mov
fildll
push
jmp
cmp
add
or
xor
inc
or
mov
and
inc
pusha
jnp
cmp
scas
int
mov
in
aas
adc
fwait
jg
cmp
and
mov
popa
jae
out
inc
lfs
sub
inc
push
pusha
add
xchg
scas
jno
sbb
push
lds
es
sub
mov
and
hlt
and
repnz
es
hlt
sbb
arpl
pushf
nop
jbe
mov
jge
lret
push
or
aaa
dec
lcall
out
push
int3
mov
loope
mov
xor
add
cmpsb
scas
inc
add
je
cmp
int3
push
push
or
inc
cmpsb
ja
sub
stos
sbb
cmp
jp
pmaddwd
jno
and
jb
dec
inc
sub
lret
movsl
mov
andb
daa
adc
dec
or
dec
andb
flds
lock
loopne
push
js
push
mov
stos
movb
dec
into
xchg
loope
push
cli
sub
shrl
cmp
shrl
test
push
jecxz
shlb
out
pop
sbb
mov
add
nop
mov
sbb
in
int
jle
sub
push
sbb
and
lods
lcall
stos
fdivrl
sub
sahf
ss
subb
idivb
mov
jp
push
pop
xchg
mov
mov
push
ss
std
and
int
dec
fsubs
sbb
sbb
lret
nop
shrl
scas
mov
imul
into
pop
das
fdiv
out
aad
mov
pop
test
call
das
lds
xchg
adc
mov
mov
lods
cltd
cmpl
cli
cmp
bound
pop
sbbb
xorb
jb
inc
lds
loopne
incb
adc
add
iret
cmp
mov
pop
xchg
ljmp
cmp
push
xlat
cltd
cmp
jg
es
loop
xchg
mov
dec
jg,pn
pop
aad
subb
gs
dec
pop
inc
and
sbb
stos
push
push
add
pop
repz
push
nop
int3
adc
fsubrp
imul
pop
sub
pop
or
adc
push
pushf
inc
sub
jmp
xor
inc
scas
hlt
int
aad
ret
aas
les
jb
mov
dec
adc
dec
je
and
jecxz
frstor
std
push
loope
cwtl
mov
test
mov
jle
mov
outsb
dec
int3
adc
js
sbb
mov
push
pop
das
xor
pushf
mov
into
or
shll
rcll
cmc
sbb
cmpsl
mov
xor
sub
clc
cld
and
sub
std
rolb
push
and
mov
xor
nop
das
ret
out
imul
cmp
push
cmp
mov
xchg
leave
cld
pop
ljmp
dec
lods
push
lds
mov
aaa
shrb
xchg
stc
loop
push
movsb
xchg
adc
xchg
add
mov
aas
test
adc
mov
push
mov
sbb
test
pop
mov
sbb
xchg
mov
pop
fistps
and
or
insl
add
mov
jae
push
or
or
xor
dec
xor
fwait
or
mov
aas
xor
jns
int3
dec
pop
negl
or
xor
and
add
int3
mov
lret
mov
fistpl
pop
je
bound
loopne
jns
jg
push
lret
lret
xchg
inc
stc
and
sub
adc
adc
lock
push
mov
mov
mov
in
cld
pop
pusha
daa
out
fcmovnu
xchg
xchg
and
daa
xchg
xchg
add
jno
int3
xchg
scas
popf
fstp
loopne
jle
jne
cmp
and
and
stos
popf
jnp
fisubl
xor
fcoml
jnp
cmp
or
mov
pop
push
adc
or
aas
inc
adc
push
or
jl
arpl
das
in
arpl
pop
xchg
add
xor
jns
mov
mov
cmpsl
lret
xor
dec
cli
adc
arpl
outsb
xchg
jbe
dec
mov
sub
inc
aaa
or
pop
or
roll
jge
rorl
push
gs
add
pop
inc
adc
pop
mov
and
aad
cmp
push
movsb
adc
dec
cmpsb
cli
sbb
push
enter
daa
mov
xchg
cmp
jle
sbb
jl
inc
add
dec
mov
in
and
movsl
stos
xor
out
filds
scas
jbe
push
cli
pop
sbb
push
add
pushf
push
pop
pop
pop
push
mov
pop
jmp
inc
pop
loope
stc
mov
cmp
icebp
je
imul
sbb
icebp
shl
sbb
outsb
cli
xor
xor
push
mov
jae
dec
sub
sub
inc
and
lahf
sbb
lea
fimuls
fsubl
dec
mov
dec
aam
sahf
fld
dec
test
dec
orb
jg
add
stos
mov
mov
sub
sbb
sub
cmp
pop
xchg
fcomps
neg
shl
lret
push
rol
cld
mov
cmp
cmp
sbb
adc
or
loop
popf
pop
stc
andl
fs
dec
inc
adc
outsl
fsubrl
xchg
push
sub
xchg
je
cli
outsb
lods
and
out
fstpt
or
and
xchg
jp
gs
cli
sub
hlt
and
pop
pop
rcll
adc
pop
cmp
call
stos
add
mov
sbb
pushf
stos
jmp
sub
outsl
in
add
sti
imul
nop
call
xchg
mov
int3
push
add
les
mov
repz
xor
lea
es
sahf
pop
push
pop
mov
and
repnz
ret
jmp
cwtl
pop
pop
and
inc
xor
ds
or
jno
dec
mov
divb
sub
imul
or
cwtl
imul
mov
push
mov
dec
rorl
dec
mov
mov
mov
gs
jp
lock
pop
das
cmovns
mov
pop
mov
roll
cwtl
lret
es
hlt
push
xor
aaa
cmpsl
mov
daa
mov
add
cld
dec
inc
int3
lret
insb
rorl
jle
leave
and
cmp
pop
mov
xchg
outsb
sub
loop
ret
enter
and
fstpl
inc
js
mov
dec
xchg
or
iret
ljmp
stc
lods
mov
jecxz
out
lcall
push
jg
cmc
daa
addl
push
inc
mov
repnz
add
mov
adc
jb
test
std
or
lret
shl
addr16
std
pop
mov
push
stos
add
test
ljmp
dec
test
sbb
xor
bound
and
aam
fiadds
mov
inc
pop
cli
insl
arpl
andl
jge
or
mov
fwait
push
push
insl
dec
scas
cmp
jne
adc
out
out
sub
cmpsl
lods
jns
pop
and
fistpl
push
out
pop
loopne
hlt
mov
mov
xor
fbstp
cli
and
mov
clc
cmp
sti
imul
ret
fbld
xchg
sbb
xchg
into
cli
sub
mov
popf
add
or
js
sahf
stos
jne
add
leave
imul
jnp
aas
or
jb
into
adc
cli
iret
push
int3
ret
lahf
pop
adc
inc
adc
adc
mov
stc
adc
push
pop
loopne
ficoml
jae
xchg
pop
outsb
fstps
fiadds
imul
hlt
fidivs
sbb
js
loopne
std
cmp
repnz
movsb
add
hlt
scas
add
arpl
test
jge
jnp
sbb
xor
enter
insb
sub
add
scas
int3
lods
pop
imul
adcb
mov
bound
cmp
xlat
push
test
out
fucomip
lea
mov
mov
pop
cmp
xor
out
jl
out
pop
dec
and
mov
movsl
mov
cmpsb
and
shr
int
ljmp
xlat
or
stos
jge
pop
adc
js
data16
pop
sub
push
imul
cmp
xchg
adc
insb
sub
mov
outsb
mov
add
mov
pop
push
mov
push
int
mov
sub
jns
lcall
push
stos
subb
cmpxchg
jp
sbb
jg
push
scas
mov
roll
mov
int3
sbb
sub
insb
ss
cmp
xlat
inc
and
xchg
aam
lret
jb
pop
sub
sbb
jbe
and
mov
jo
and
rcrb
cmp
jmp
adc
push
mov
lods
addr16
mov
push
jns
mov
pop
xor
or
iret
mov
add
loopne
pop
xlat
pop
ss
adc
and
adc
cmp
aam
scas
xchg
jo
fwait
sbb
xlat
mov
mov
mov
insb
cs
jl
cs
push
xlat
aad
inc
push
ret
xchg
ss
sbb
mov
fstps
push
lock
adc
repz
mov
xchg
rcr
lea
sbb
sbb
lea
adc
les
jmp
lds
fcmovbe
inc
mov
cli
xchg
aas
add
jb
gs
dec
call
mov
push
jns
jecxz
or
divb
push
mov
movsb
jbe
cwtl
es
add
gs
sbb
mov
fcmovnbe
add
mov
adc
mov
cld
pop
lock
jbe
out
std
sbb
mov
in
pop
rcll
push
es
bound
insl
adc
test
mov
mov
icebp
sar
jp
or
test
mov
sti
push
mov
fmulp
shlb
das
mov
mov
gs
loope
ret
push
mov
push
rcrl
clc
lds
xchg
inc
pop
inc
ljmp
mov
fdivl
out
std
loop
xchg
xchg
outsb
push
pop
sar
sar
mov
push
out
cs
xchg
lcall
jmp
xchg
pop
rorl
sarl
sub
push
dec
inc
push
add
repnz
pop
xor
sbb
std
faddl
xor
lret
cmp
and
mov
mov
stc
ja
cli
dec
inc
jae
inc
movsl
mov
int3
fwait
addb
jne
sbb
mov
out
bound
mov
or
in
sti
xchg
add
test
jle
sub
or
cltd
jp
stos
xchg
mov
retw
push
cmp
lret
in
or
pusha
pop
pop
cs
inc
call
jmp
cltd
mov
push
push
dec
inc
popf
sub
mov
mov
adc
loopne
ss
and
adc
scas
notb
dec
push
mov
insl
mov
ret
cmpsl
pop
xor
xchg
sub
inc
sbb
mov
pusha
or
fiaddl
adc
fcmove
aam
xchg
mov
push
sbb
pop
push
or
jne
jo
sbb
mov
dec
mov
leave
cmp
inc
arpl
in
jge
sub
sbb
lret
sub
in
int3
xchg
add
clc
push
sub
dec
jo
push
pop
scas
fstpl
test
pop
xor
in
pop
movsb
sub
push
clc
mov
cmpsb
add
out
in
je
and
sub
cld
daa
mov
mov
jno
jg
jl
imul
xchg
shrl
xor
pop
movsl
mov
fldt
push
mov
xchg
lods
add
inc
pop
lea
and
pop
push
adc
arpl
imul
cli
inc
fs
cmp
sub
pop
idivb
jl
dec
outsb
das
mov
scas
rolb
xchg
popl
imul
sbb
ja
add
es
xor
andl
sbb
lcall
xor
jge
aaa
sub
push
or
test
inc
jp
jg
sbb
mov
xor
lods
pop
jmp
ss
mov
fcoms
pop
nop
lret
push
shl
sbb
arpl
cmc
cmp
xor
mov
js
loop
xchg
stc
icebp
incl
fs
dec
adc
into
inc
ds
mov
mov
push
xor
in
or
xor
fucomi
mov
fisubrl
sub
int3
adc
push
scas
adc
mull
xchg
xor
repz
adc
cmpsl
sub
jbe
in
xlat
and
sti
movl
fs
mov
jno
jns
scas
inc
cld
shlb
push
inc
faddp
and
sub
cltd
add
adc
aad
das
lcall
and
adc
inc
pushf
dec
jo
jmp
mov
pop
push
scas
and
leave
aas
mov
mov
jbe
divl
fs
add
jbe
dec
xchg
mov
mov
loopne
mov
inc
xorl
mov
mov
push
or
ficoms
int
or
aas
stc
pop
and
and
lahf
in
es
insl
push
add
cmpsl
mov
in
inc
push
imul
cltd
xor
lret
dec
push
cs
cmp
mov
std
cltd
pop
rorb
std
mov
aam
xor
ret
out
pop
push
test
popf
clc
add
jl
xchg
scas
ljmp
jb
xchg
or
mov
pusha
fimull
in
adcl
and
and
cltd
mov
test
filds
dec
push
test
int3
mov
sbb
mov
rcll
shrb
icebp
outsb
test
or
ljmp
je
repz
mov
mov
fs
ja
adc
lahf
ja
mov
inc
cmp
mov
call
jbe
dec
jne
pushl
sbb
out
movsb
xchg
pusha
jmp
or
pushf
xor
icebp
mov
cli
out
pop
stos
sub
push
lret
add
add
mov
sbb
push
addl
daa
sbb
in
popa
imul
daa
pop
pusha
clc
xor
cmp
sahf
sbb
lret
xchg
fs
subl
mov
push
mulb
push
mulb
lret
popa
dec
insb
iret
mov
pop
push
sti
scas
pop
push
imul
sub
sub
test
mov
jae
push
filds
movsb
test
in
xlat
in
inc
pop
int
fidivrl
xchg
or
push
sahf
mov
imul
cwtl
fidivrs
lock
xor
mov
mov
fs
arpl
mov
pop
mov
repnz
inc
and
in
inc
pop
or
addb
push
push
mov
xor
outsl
repnz
scas
mov
cs
movsb
mov
push
push
inc
and
in
pop
aaa
dec
and
sub
mov
test
jno
cmp
jl
mov
mov
push
cmp
mov
jbe
lahf
or
pop
push
jae
push
test
ja
xchg
inc
scas
mov
in
ja
jl
jnp
sahf
stos
pop
cmpsb
adc
loope
xchg
fsubrs
xor
outsb
xchg
xchg
rcll
mov
or
pop
gs
xor
call
int
jl
sub
or
rclb
sub
shl
sahf
ret
test
jmp
mov
mov
dec
pusha
mov
inc
inc
and
pusha
ss
lahf
jb
imul
xchg
scas
enter
mov
jp
leave
mov
inc
cmc
add
push
outsl
adc
add
xor
and
test
or
adc
jnp
es
shrl
lods
xor
les
out
cmpsb
inc
cli
pop
mov
fdivrs
mov
dec
xchg
xchg
gs
mov
lds
xor
add
adc
or
adc
or
add
lahf
pop
xchg
testb
sbb
dec
dec
push
xlat
xchg
push
jns
adc
xchg
or
inc
out
mov
or
aad
popf
pop
nop
jns
sbb
fwait
dec
inc
mov
flds
sbb
rep
punpcklbw
pushf
movsb
mov
stos
jp
sbb
dec
pop
mov
mov
jmp
push
aad
lret
inc
inc
lods
inc
aas
inc
xorb
lret
dec
in
movsl
sub
jmp
mov
divb
fwait
jb
pushf
push
mov
or
mov
dec
orl
dec
dec
mov
cmp
lock
pop
das
lods
jae
mov
testb
cli
stc
push
shr
jo
es
roll
insl
dec
dec
jne
and
cmpsl
mov
lea
mov
cld
shl
out
mov
push
in
and
or
repnz
sbb
rcl
inc
sub
in
jne
pop
push
inc
insl
pop
fisttpll
cmp
xchg
lds
ljmp
push
lods
std
lret
add
pop
out
ret
lds
push
adc
seto
sbb
cmc
sbb
test
sub
call
dec
mov
sbb
pop
push
out
sbb
rolb
jmp
call
stos
subps
xchg
xchg
xor
sub
imul
rcl
mov
cmp
pop
mov
cmpsl
xchg
test
pop
sub
loop
sub
or
lahf
in
fwait
loopne
stos
dec
pop
cli
dec
jne
jge
mov
sub
out
adcl
jle
pop
jns
sarl
jl
mov
mov
stos
in
sub
add
jmp
mov
icebp
repz
jne
lret
jle
cmp
in
call
filds
insl
mov
jno
fsubr
shrl
cmpl
mov
fcom
xchg
push
notl
popf
mov
into
mov
subl
jnp
or
scas
mov
mov
adc
add
xchg
ret
ds
mov
repz
pop
inc
push
adcb
stos
and
cmpb
or
das
mov
xchg
popa
negl
dec
fbstp
ficomps
lds
inc
stos
mov
repz
mov
nop
jnp
arpl
pop
fidivs
dec
in
xor
sbb
dec
xchg
aaa
add
push
jecxz
fsts
ja
insl
iret
mov
sbb
push
icebp
mov
in
jo
test
scas
fwait
xchg
stos
and
or
aas
cmp
rclb
cmpsb
push
sbb
enter
daa
mov
or
jno
sbb
sahf
dec
jno
nop
jns,pt
rep
movb
pop
es
lahf
sub
inc
test
inc
dec
cli
inc
cmp
or
mov
push
xor
in
push
mov
mov
xor
icebp
sub
ficoml
outsb
cmc
jbe
adc
std
clc
pop
mov
ja
sbb
cs
xor
idiv
push
mov
mov
sub
or
pop
fwait
lds
push
pop
sbb
lret
pop
pop
and
pop
mov
push
dec
pop
mov
mov
dec
mov
sbb
push
dec
lock
sub
cmp
or
not
icebp
ror
mov
mov
fistps
clc
aad
into
leave
cmp
leave
adc
xor
repz
pop
dec
stc
pop
imul
lret
inc
fnstsw
sbb
in
jle
mul
xchg
adc
cli
cmp
mov
dec
stos
in
xchg
stc
rorb
lods
cld
and
push
gs
jge
pop
xchg
sbb
pop
sub
mov
outsl
sub
sbbl
sbb
mov
mov
sub
ficompl
lods
lea
and
push
mov
nop
push
repnz
cld
addl
cmp
les
lahf
insb
repz
adc
lahf
cmp
loope
gs
lcall
adc
ret
sub
loopne
pop
scas
or
push
lret
pop
mov
mov
dec
fs
je
outsb
test
mov
in
loopne
cltd
test
cwtl
push
push
add
ds
or
arpl
pop
cmpsb
mov
cmp
mov
fstps
lock
cs
mov
mov
lods
mov
and
pop
sarl
mov
stc
dec
sbb
insb
cmpsl
mov
pop
pop
adc
lret
sub
mov
dec
repz
mov
cmp
shrb
pusha
lret
aam
in
add
enter
push
fnsave
adc
xor
ljmp
ljmp
pop
dec
out
movsl
xor
jmp
mov
add
les
push
add
inc
xchg
insb
xor
enter
jmp
xchg
gs
sbb
in
sbbb
stos
inc
aam
aaa
test
add
inc
sbb
jmp
push
jns
in
xor
lcall
mov
pop
loop
arpl
clc
pop
out
into
ja
stos
push
dec
sbb
inc
push
rorl
stos
fwait
shrd
dec
cmp
jne
inc
fidivl
bound
test
cmp
push
xchg
icebp
jg
out
insl
pop
sub
cld
push
xchg
fnstsw
mov
in
fstpt
cmp
cwtl
js
jmp
and
fbld
pop
inc
xchg
inc
push
jmp
cli
inc
dec
or
mov
popf
mov
push
inc
push
je
mov
and
or
jnp
jle
scas
pop
lret
es
mov
adc
call
adc
pop
fidivl
inc
inc
and
jae
movsb
jnp
and
dec
or
jecxz
sub
xor
mov
fdivr
imul
repz
adc
xchg
outsl
add
mov
inc
adc
hlt
fcomi
in
inc
test
jbe
sub
js
mov
shlb
and
cmp
jo
mov
pop
sti
dec
test
xor
and
push
shlb
clc
cmp
or
push
in
cltd
cmpsb
mov
mov
daa
mov
fidivrl
inc
and
dec
and
xchg
xlat
rorb
in
pushf
xor
int
adc
cmc
jmp
dec
push
sbb
imulb
or
int3
in
imul
js
ja
pop
and
in
decb
xchg
loope
lods
imulb
push
push
cmp
push
popf
adc
fsubs
push
pop
filds
enter
movsb
mov
xor
push
fildl
ret
int
rcll
sub
out
lcall
pusha
fdivrl
ret
mov
or
xchg
jae
adc
sarl
cmpsl
dec
mov
je
mov
adc
inc
jns
mov
lock
ret
sbb
lretw
adc
mov
xchg
mov
xchg
mov
into
lods
mov
cmc
nop
or
xchg
outsl
shlb
adc
push
xchg
mov
adc
lret
lret
lods
add
int3
mov
into
out
push
in
cli
insl
dec
xor
mov
or
incb
gs
add
maxps
pop
jge
mov
push
adc
sub
add
pop
test
jl
push
sbb
ret
inc
xlat
xlat
adc
mov
sti
jo
mov
sbb
mov
aam
jmp
aad
cmpl
xchg
pusha
dec
inc
xor
hlt
xchg
les
or
dec
mov
lea
jns
mov
jl
pop
cmp
nop
adc
pushf
dec
sub
pop
push
pop
pop
inc
fsubr
daa
inc
ja
dec
aas
jle
mov
cmp
je
adc
xchg
mov
cmp
mov
cwtl
adc
int
mov
push
mov
dec
repz
xchg
stos
arpl
jmp
lock
test
push
add
fucomip
inc
mov
adc
mov
es
adc
insl
sbb
sbb
mov
and
ss
cld
es
lret
xchg
aas
leave
mov
push
arpl
pop
pop
and
ja
xchg
xchg
xor
repnz
ret
xchg
pop
test
mov
fstp
or
xchg
inc
xchg
jmp
popa
push
push
lods
rol
jg
pusha
addr16
out
mov
xchg
mov
and
add
ja
arpl
iret
mov
pop
loope
ret
aad
dec
adc
test
fsubs
xchg
or
rcrl
cmpsb
xchg
stos
in
icebp
xor
fidivl
cmp
pop
insb
adc
inc
ja
xor
out
or
cs
xor
mov
es
xchg
push
mov
mov
std
add
push
or
iret
sbb
push
ljmp
or
or
inc
fisttpl
movsb
cltd
sub
es
xchg
inc
and
and
testl
out
jp
pop
mov
mov
push
stos
pop
jle
mov
jg
leave
xor
xchg
pop
popa
dec
jmp
lds
push
push
pop
xor
popf
adc
mov
mov
test
cmp
adc
cmp
sub
data16
sbbb
adc
adc
ret
jno
adc
mov
inc
and
lods
or
pop
xchg
mov
ficoml
pop
rcrb
scas
xchg
imul
jge
mov
inc
mov
mov
cltd
out
test
les
push
out
xor
subb
jo
push
aaa
xor
or
dec
icebp
add
in
std
int3
inc
jmp
mov
mov
mov
pop
sbb
push
call
and
scas
cmp
stc
cmp
in
adc
adc
mov
add
je
shll
dec
jge
mov
adc
movsl
aam
sub
nop
shrl
imul
test
fsubr
test
mov
ds
icebp
movsb
and
dec
sub
sbb
mov
pop
sub
test
jno
mov
rcll
jge
push
andb
sbb
pop
cmp
scas
xchg
xor
lock
lds
int
aam
sub
mov
lcall
sub
sub
mov
sahf
stos
xchg
test
jmp
mov
mov
pop
or
fxtract
mov
jne
jmp
iret
cltd
or
pop
sarb
notl
das
lret
mov
dec
sub
sbb
adc
push
cmpsb
cmc
push
push
xor
jl
outsl
mov
in
repnz
stc
int
adc
adc
mov
lods
ljmp
out
jl
cli
mov
ljmp
mov
idiv
addr16
sub
add
xchg
mov
fists
add
imul
sahf
pusha
xchg
aas
nop
fistps
and
outsb
or
into
dec
in
addl
sbb
cs
inc
aad
mov
nop
or
je
cmc
enter
dec
adc
sub
xchg
les
mov
sbb
movsl
enter
nop
push
call
cwtl
sbbb
mov
data16
inc
sbb
pop
hlt
lcall
xchg
int
aas
sbb
xor
je
or
jecxz
popf
shl
cwtl
cmc
std
out
ret
xlat
cmpsl
mov
mov
popa
adc
aam
fcmovnb
pushl
test
bound
sub
ret
jb
xchg
mov
fwait
pop
loopne
fldt
xchg
insl
add
in
adc
cmpsl
mov
lock
or
sbb
lret
push
fcomp
mov
pop
aaa
or
jns
std
rclb
test
mov
aam
mov
push
nop
lret
add
add
in
jg
xchg
cmpb
stos
xor
popa
insl
mov
sarl
in
aas
adcb
scas
sub
add
cwtd
lcall
mov
sbb
dec
jmp
pop
ds
mov
sbb
pop
sti
shl
xchg
call
push
push
jge
or
jns
cmp
pop
mov
mov
sbb
adc
jl
addr16
ds
mov
pop
repnz
aad
dec
add
mov
or
and
lahf
dec
add
jne
loop
fs
out
and
or
in
icebp
mov
out
push
jo
pop
inc
fisttpll
repnz
outsb
jp
mov
mov
push
jp
cld
aaa
sub
jns
adc
stc
andl
pop
mov
xchg
ljmp
xchg
nop
pop
inc
and
push
and
popf
out
ss
mov
repnz
popa
and
dec
insb
cmp
shrb
sbb
out
js
dec
iret
movsb
jle
ret
ds
dec
ja
inc
push
jbe
jae
add
inc
daa
aam
or
fyl2xp1
aam
pop
xlat
rcr
dec
clc
xchg
les
sbb
push
mov
mov
xchg
loopne
mov
add
mov
in
add
leave
ljmp
pusha
popf
shlb
dec
mov
sbb
xchg
pusha
aaa
inc
lock
push
shlb
sahf
push
clc
int3
cs
pop
pop
xrelease
lcall
jo
inc
sub
cmp
mov
cmp
mov
push
xorl
push
ja
testl
sbb
mov
jo
cmpsl
es
stc
xchg
xor
xor
loop,pt
lea
sub
inc
push
mov
jnp
push
mov
cmc
daa
icebp
adc
pop
sbb
pop
mov
sbb
sub
into
push
outsb
push
filds
mov
inc
mov
jbe
adc
ss
add
mov
xor
in
xchg
sbb
or
cwtl
xor
pop
sbb
leave
push
sbb
ds
pop
sub
aam
mov
test
and
imul
popa
jge
mov
jb
mov
sub
and
cmpsl
cmp
cmp
pop
lret
rol
jecxz
xchg
mov
inc
clc
sbb
jle
cmc
push
sub
outsl
nop
dec
loop,pt
mov
stc
test
ss
and
mov
cwtl
data16
testb
jbe
cli
shrl
cmp
std
cli
and
decb
pop
xor
xor
pop
lock
adc
mov
imul
adc
sbbb
cmp
xchg
mov
xchg
pop
insl
sub
push
pop
mov
out
pusha
cld
sti
xor
jge
xchg
jge
aad
cli
adc
push
xor
xchg
fldenv
mov
pop
and
test
jae
push
out
addr16
pop
or
or
adc
imul
loopne
pop
xchg
shr
inc
out
mov
lods
add
aas
mov
pop
mov
leave
jae
je
push
xor
out
pop
test
mov
mov
ds
faddp
mov
jp
subl
rcr
pop
int
mov
sub
mov
das
sub
es
es
shrl
dec
mov
push
and
sub
or
scas
jno
mov
in
aaa
cld
jl
ror
jne
mov
and
js
push
cwtl
jmp
shrb
push
dec
sub
mov
mov
push
jl
leave
ret
adc
xchg
shl
ljmp
inc
lods
test
les
out
dec
sti
test
jl
jae
or
pop
add
cmp
aas
test
jl
mov
dec
push
mov
test
sbb
mov
stos
lret
xchg
sub
and
add
bound
or
or
scas
jnp
dec
daa
jae
mov
mov
pop
xchg
mov
pop
cmp
ja
xor
dec
hlt
test
or
dec
ficompl
in
cmp
mov
mov
out
pushl
lret
jns
or
in
stos
xchg
fidivrs
or
adc
sub
in
lret
jne
cmp
daa
ja
mov
subb
xchg
dec
pusha
call
into
xchg
mov
outsl
cmpsb
xchg
pop
jmp
out
push
in
and
mov
xor
mov
push
imul
popf
scas
dec
sbb
arpl
data16
mov
ret
ret
lock
inc
bound
jno
sub
test
inc
xlat
and
xchg
mov
int
imul
test
sarb
mov
aas
inc
pusha
leave
add
pmuludq
jbe
mov
jge
testb
out
aaa
aaa
add
or
fxsave
xor
push
xor
insl
sbb
xor
ss
sub
iret
sub
cmp
out
movsb
imul
shlb
fwait
cmpsb
adc
in
fisubrs
jae
or
push
daa
scas
jo
cmp
cmp
or
jl
mov
sub
add
nop
mov
lahf
cmpsl
aas
fcoms
or
sti
lret
outsb
f2xm1
inc
jns
into
mov
clc
pop
aas
inc
inc
js
push
add
loope
push
push
sub
imulb
sbb
xchg
push
outsb
adcl
cmp
testl
lds
shll
cli
xchg
push
lret
test
sub
adc
pop
xchg
arpl
lcall
add
jg
aam
ret
sbb
sahf
icebp
js
test
sub
and
jg
rclb
mov
iret
pop
mov
mov
and
cmp
hlt
adc
lret
xchg
sarl
mov
push
in
sbb
mov
in
dec
xor
jle
outsl
outsl
sbb
adc
stc
cmp
jbe
outsb
pop
aad
push
in
test
lods
mov
mov
out
hlt
mov
xor
cmpsb
mov
lods
and
loopne
pop
sbb
cpuid
adc
sar
rorl
mov
sub
mov
xlat
shrb
sub
mov
pop
dec
mov
cs
das
xchg
xchg
out
nop
shlb
dec
mov
cmp
fstps
repz
mov
outsl
stos
and
lea
and
adc
mov
jae
adc
xchg
pushf
dec
pop
pop
jmp
push
out
insl
mov
inc
enter
pop
movsl
sbb
imul
jecxz
adcl
jl
mov
pushf
push
mov
xchg
lds
movlps
hlt
pop
mov
push
mov
js
lock
jbe
pop
pusha
or
mov
xchg
and
inc
std
sarl
mov
insl
sar
out
or
cmpsl
scas
sarb
mov
mov
add
push
mov
pop
and
adc
sar
adc
sub
dec
aam
or
push
mov
inc
clc
bound
xchg
add
pop
ljmp
push
lods
adc
loop
insl
sbb
out
mov
mov
js
je
push
add
packssdw
add
divl
dec
lods
test
int3
enter
pop
xor
xchg
or
in
jmp
sahf
mov
pop
push
hlt
cmc
stos
mov
mov
imul
aam
jmp
sub
or
out
xor
fsubl
mov
div
lds
rclb
ret
adc
dec
out
repnz
cltd
inc
or
dec
xchg
negl
leave
inc
inc
mov
int3
out
out
fiadds
pop
xor
jns
jne
in
xorb
xchg
add
pop
or
xchg
jp
or
mov
mov
je
in
or
fistps
jge
jmp
es
addl
push
cmpsl
sbb
inc
mov
jo
movsb
stos
or
stos
aad
pcmpeqd
jnp
std
mov
stos
jmp
adc
push
loop
bound
ret
sub
inc
insl
sbb
jae
je
inc
sub
enter
andb
hlt
jecxz
scas
xor
sbb
sbb
imul
push
mov
loope
aad
dec
mov
xchg
mov
repz
pop
daa
das
arpl
cmpsl
jbe
cmp
sbb
insl
cwtl
or
push
add
mov
stc
pop
mov
pop
push
pusha
sub
xor
xchg
fs
scas
testb
cmp
js
movsb
not
nop
push
and
cmpsb
xchg
ret
lds
enter
daa
scas
xchg
in
cmp
popf
sbb
cmp
into
into
sub
movsl
jmp
shl
stos
mov
test
cmp
inc
or
adc
ja
rcrl
mov
enter
jg
push
hlt
mov
cmpsb
xchg
adc
xchg
adc
inc
int
outsb
in
sub
sbb
rolb
lcall
sbb
push
xor
gs
push
into
jbe
int
xor
pop
push
xchg
rcrb
lret
fsubrl
nop
adc
mov
bound
mov
xchg
cmpb
jg
fnsave
stc
fidivs
and
test
cmp
scas
cmp
jb
lret
sub
mov
cmp
sbb
cmc
lods
fsubrs
sahf
outsl
dec
out
iret
loop
pop
fyl2xp1
repnz
inc
fs
cli
popa
adc
jecxz
fsubrs
mov
arpl
divb
xor
idivb
and
rolb
hlt
loopne
lock
pop
cs
sbb
imul
add
sbb
scas
sub
cmovo
mov
les
je
nop
dec
insb
cs
add
nop
fwait
jae
dec
adc
xchg
inc
addl
les
and
xchg
sahf
scas
add
call
adc
sbb
adc
out
pushf
cmc
adc
pop
fstl
clc
inc
hlt
arpl
jecxz
jo
cli
push
js
mov
mov
je
jmp
jecxz
pop
xchg
testb
std
fsubrl
cwtl
js
mov
mov
pop
aad
xchg
mov
fisttpl
or
jle
mov
cmp
mov
inc
mov
cmp
enter
push
push
inc
insl
mov
dec
jnp
lods
mov
mov
xchg
xor
pop
lret
push
cmp
mov
insl
or
mov
shr
into
dec
mov
aam
test
ret
iret
inc
jbe
fnstcw
jbe
jns
in
clc
popf
clc
xchg
aas
dec
xchg
ljmp
shrl
xor
adc
pop
jb
xor
xchg
lret
add
cmpps
lods
xchg
add
dec
push
std
das
test
push
sub
adc
cld
loope
add
stos
test
or
lret
inc
adc
je
mov
lahf
xor
in
mov
cmp
out
mov
lea
testl
filds
fwait
cli
lcall
nop
add
mov
cmc
add
mov
iret
fnstsw
adcl
jl
mov
sub
jecxz
jmp
jp
push
or
jge
push
mov
imul
push
jecxz
pusha
xor
inc
sbb
mov
mov
icebp
cld
adcl
jg
arpl
mov
push
scas
pop
mov
and
and
jnp
inc
fxrstor
gs
push
icebp
inc
push
adc
pushf
imul
or
es
js
mov
adc
xor
lcall
movsl
aaa
inc
aad
fisubl
je
imul
sbb
cmp
lock
adcb
orl
dec
in
in
xor
repnz
inc
pop
arpl
pop
adc
sbb
aaa
jg
pop
or
movsb
cltd
add
add
out
or
pop
out
cmp
inc
call
adc
in
xchg
adc
aad
lret
and
mov
pushf
scas
xchg
movsb
sub
test
in
lods
xor
sbb
cmp
sbb
jl
sbb
dec
or
scas
movsl
lock
jb
cld
out
lahf
in
in
cmp
test
add
mov
cmp
pop
lea
js
into
or
pop
xor
push
jo
loope
in
sub
add
hlt
inc
inc
outsb
inc
pop
mov
stc
mov
subb
lods
add
es
xor
adc
push
shrl
int
ret
or
stc
lcall
push
aad
sub
cs
adcb
jg
scas
es
adc
jo
xorl
ljmp
push
shl
dec
sbb
lret
iret
shrl
ficompl
adc
cmc
jae
jl
mov
fucom
cmp
adc
ja
movsb
push
xor
lods
xchg
jl
cli
insb
jge
xor
cmp
je
or
mov
repz
gs
mov
pop
dec
inc
adc
mov
adc
mov
add
push
dec
xchg
dec
fwait
adc
ljmp
sub
jae
mov
das
test
sti
aas
cmc
jge
shlb
adc
ds
jbe
cmp
xchg
and
add
les
sti
repz
mov
adc
pop
into
add
les
mov
int
pushf
mov
ret
test
subb
inc
jnp
sbb
aas
cltd
add
jb
pop
sub
enter
xor
adc
mov
std
subl
pop
cmpsb
pop
mov
fidivrl
dec
in
cli
fstpt
into
mov
cltd
mov
and
cltd
jno
das
lds
pop
mov
jl
rcll
mov
fisubl
dec
dec
iret
cmpsl
lods
sbb
icebp
imul
test
ret
mov
je
lahf
mov
cmc
mov
shlb
inc
rcl
jmp
in
loop
pushf
dec
sahf
frstor
dec
aaa
xchg
jle
inc
ljmp
and
push
dec
out
js
push
xchg
push
nop
or
mov
ljmp
lret
pop
test
mov
jmp
scas
addr16
test
pushf
xchg
jbe
sbb
dec
dec
rorl
pop
stos
mov
xor
or
add
in
jmp
mov
add
mov
sub
dec
xor
inc
push
mov
jl
ds
dec
test
dec
int
add
dec
mov
fwait
sub
and
and
out
pushf
hlt
bound
xor
arpl
out
xchg
sub
fidivrs
xor
push
add
mov
sub
mov
adc
sbb
in
and
mov
aad
ss
xor
cmpb
test
push
sub
mov
mov
out
repnz
stos
repz
scas
loop
insb
in
sub
push
xchg
scas
jno
out
push
cmp
adc
sti
add
and
ret
js
and
mov
jae
repz
xor
fdivl
pop
push
inc
push
and
call
jbe
divb
push
imul
rorl
xchg
rorb
sub
repnz
leave
imul
xor
clc
mov
push
bound
pop
mov
xchg
or
std
cwtl
add
add
int3
fisubl
pushf
pop
adc
fwait
xchg
xor
inc
aad
scas
mov
jge
mov
cmp
lds
add
cmpsb
fwait
pushl
xchg
push
pusha
enter
daa
lods
pop
sarb
jae
aam
push
xor
dec
jp
mov
outsb
and
movsl
mull
add
push
or
outsl
test
iret
xor
inc
es
std
jnp
pop
mov
mov
jbe
fists
sahf
insl
mov
loope
pop
or
and
outsb
stos
insb
fists
cli
xchg
xchg
pop
scas
pusha
add
or
adc
mov
out
jp
roll
sub
aam
cmp
mov
sub
pop
adc
daa
lcall
jmp
adcb
sub
jbe
test
mov
stos
jg,pt
and
mov
out
out
fs
push
test
rcrb
cmp
and
inc
and
inc
dec
test
mov
add
into
incb
jmp
sbb
loop
cli
mov
pusha
or
wrmsr
adc
jno
data16
bound
pop
add
out
xchg
cli
lahf
stos
xor
add
mov
jno
push
sbb
or
popf
ffree
pop
insb
xor
adc
shrb
jle
jns
and
add
ss
push
adcb
and
jo
sub
cmpsl
push
in
lcall
cs
insb
aad
xchg
nop
nop
push
xor
dec
rorb
filds
icebp
xchg
fnstcw
movsb
add
mov
and
adc
mov
lea
dec
sub
adc
pop
outsb
xchg
outsb
xlat
xchg
pushf
dec
std
push
jmp
xchg
inc
pop
and
or
idivl
sbb
adc
adc
movsl
sbbl
into
xor
std
sub
pop
cwtl
je
mov
sbb
or
jp
shlb
mov
lock
hlt
mov
imul
jb
and
xchg
mov
data16
es
mov
insl
xchg
cmp
or
icebp
inc
out
sub
sub
mov
jnp
shlb
test
shlb
sub
aam
loope
ret
in
aam
push
pop
lret
xchg
ffree
cmc
mov
adc
dec
ljmp
mov
push
xchg
sarb
xchg
dec
cmpsl
push
call
jg,pn
int3
sub
stos
test
xor
aad
insb
dec
in
out
test
lea
sbb
shll
mov
stos
xchg
sub
lods
divb
add
icebp
push
cld
pop
xor
or
mov
hlt
sub
mov
or
imul
dec
rorb
inc
mov
insb
or
aas
add
dec
jo
jne,pn
movsb
enter
repnz
jnp
fwait
bound
mov
test
xchg
sbb
pushf
sub
fnstenv
icebp
or
mov
ror
sarl
add
fmull
sbb
xchg
inc
stos
lods
aaa
xchg
or
jmp
xchg
xorl
mov
inc
insl
mov
sub
rcrl
mov
insb
push
idiv
jnp
es
aam
ret
cmp
iret
jg
dec
ret
mov
inc
mov
pusha
inc
ss
mov
inc
cmpsb
outsb
inc
sarl
fcmovb
push
mov
sbb
in
sbb
cld
and
arpl
lds
shlb
add
repnz
leave
loopne
and
call
push
jbe
add
dec
sbb
clc
and
std
xchg
or
or
xchg
xlat
jge
lds
aad
inc
decb
xor
mov
sbb
and
xor
cmp
push
mulb
shr
cmpsb
push
int3
dec
in
jp
push
idivl
sarb
jg
jno
xor
jl
rcr
dec
jmp
and
movsl
and
and
jae
lahf
and
push
faddp
mov
push
lcall
shlb
pop
fstpt
jnp
mov
jge
repnz
add
jmp
int
mov
jl
push
mov
or
xchg
aad
in
mov
addl
cltd
sub
outsb
je
mov
stos
mov
pop
xchg
je
call
pop
xchg
inc
dec
lcall
loope
sub
jle
jge
out
test
outsb
orb
divb
pop
rorb
fwait
sub
and
jb
ss
lret
cmpsb
cmp
loopne
aaa
test
ret
lret
mov
aas
and
loope
xor
add
daa
xor
pop
outsl
jmp
xor
pop
cwtl
call
fs
pop
jns
lods
push
inc
out
mov
mov
cli
shl
int3
xor
or
or
pop
cmpsb
and
dec
loopne
repnz
pop
mov
adc
sbb
adc
insl
cli
add
lret
fadds
sbb
pusha
imul
and
mov
add
cwtl
test
xchg
ds
sub
fs
das
mov
mov
incl
xchg
xchg
repz
xor
std
bound
pop
and
adc
add
pop
jmp
das
jle
sub
mov
fldl
sub
aas
xlat
outsl
sub
dec
sbb
adc
and
xor
notb
js
std
rcr
adc
fdivrl
mov
dec
mov
or
mov
nop
lods
mov
push
add
dec
push
fildll
or
mov
gs
loop
fldl
not
mov
sbb
loopne
adc
outsb
pop
xor
test
stos
je
mov
pop
add
cld
push
ret
mov
cmp
repnz
xor
subl
add
aam
jl
ret
jl
xchg
rorl
dec
movsl
pop
xchg
cld
mov
xchg
popa
divl
call
out
lock
xchg
xchg
and
movntq
lods
add
sahf
push
cltd
in
and
xor
xchg
fs
test
xchg
icebp
negl
ja,pn
sar
mov
pop
add
xchg
dec
lods
cmp
sbb
push
lcall
test
xor
stc
sbb
add
adc
mov
mov
push
inc
and
mov
dec
push
mov
jne
mov
mov
jmp
pop
bound
jg
in
xchg
sub
mov
and
aam
sub
in
inc
jp
insl
adc
push
jecxz
pop
add
jle
xchg
and
and
out
pusha
push
in
fistps
push
int3
jmp
push
nop
flds
mov
or
jge
cmp
scas
push
stos
fldcw
and
stos
jb
mov
mov
or
into
sbb
lcall
ret
mov
inc
cltd
pop
jl
pop
andl
int
xchg
test
inc
push
pop
repnz
mov
dec
lcall
pop
add
jae
inc
lahf
or
cmpsb
in
test
fisubrs
hlt
xor
icebp
jbe
xchg
movsl
jae
sbb
cwtl
cmc
or
lret
lcall
fnstcw
push
in
fcoml
aaa
and
jo
xchg
pop
scas
jb
jbe
scas
cmp
shll
movsb
and
lods
push
pop
in
cmpsb
mov
insb
jecxz
repnz
stos
cmp
mov
jl
push
je
mov
movsl
add
out
inc
jg
push
mov
sbb
imul
pop
add
js
pop
xchg
pop
sbb
jno
xchg
sbb
loope
mov
sub
adc
push
inc
outsb
jo
ficoml
mov
sbb
call
out
addl
mov
xchg
int
into
push
sub
sub
adc
std
push
and
sub
movsl
sahf
and
pop
test
xlat
jl
test
adc
adc
mov
ja
mov
push
mov
fimuls
sub
fwait
xchg
jns
mov
imul
insl
push
xchg
mov
ds
enter
mov
pushf
outsl
lret
loop
imul
adc
xchg
pop
lods
cmp
jecxz
push
sbb
out
es
add
aaa
or
pusha
or
mov
into
mul
rcrl
mov
stos
cmpsb
jl
xchg
dec
imul
add
movsl
lahf
sbb
fwait
push
jbe
or
cmp
in
jo
jns
dec
nop
pop
cs
mov
adc
mov
pushf
inc
int
mov
lods
cmp
sahf
sub
ret
mov
fyl2x
call
adc
inc
pop
aam
nop
adc
lock
mov
mov
imul
mov
dec
xlat
or
jbe
adc
dec
xchg
loopne
je
add
jecxz
pop
std
js
imul
leave
cmp
cmpsb
sub
mov
and
mov
das
bound
enter
or
lds
roll
jae
arpl
or
repnz
dec
lock
test
loope
icebp
out
cmp
jle
pop
lret
psllq
inc
test
movsl
mov
push
sahf
mov
sub
adc
ret
or
push
in
mov
clc
mov
inc
ljmp
jo
sub
pop
mov
mov
jle
push
sahf
stos
push
cmovbe
and
andl
xchg
insl
xchg
dec
mov
adc
xchg
repnz
fwait
and
push
xchg
push
pop
lods
pop
rep
gs
sbb
ss
test
std
cmc
fmull
xchg
xchg
jecxz
or
into
mov
inc
movsb
repz
jns
fdivl
sub
dec
cmpsb
push
inc
mov
scas
jno
mov
pusha
dec
ss
xchg
aad
mov
fucomi
cmp
movsb
jns
sbb
in
sub
out
mov
sub
iret
faddp
addr16
and
mov
mov
lret
data16
cmp
pusha
mov
es
xchg
scas
addr16
addr16
repz
sbb
xor
popf
pushl
aaa
mov
stos
sarl
and
les
es
jnp
adc
sti
push
or
xchg
das
iret
cmp
int
pop
leave
cmp
jae
xor
inc
cmp
jg
xor
out
push
rol
add
sub
mov
sbb
or
imul
fidivrs
add
pop
aam
mov
xor
push
leave
into
ds
hlt
jle
pop
arpl
iret
sbb
jbe
cmpsb
jge
rclb
aaa
jnp
or
inc
std
add
jo
pop
mov
imul
incb
loop
push
in
and
sahf
cmp
push
movsb
lods
movsl
add
cmpsb
and
inc
in
dec
icebp
cmp
in
xor
dec
cmp
push
jno
mov
stc
dec
push
push
xlat
cli
mov
and
pop
lahf
popa
inc
push
test
std
test
xor
inc
inc
or
sub
fsts
pop
xor
push
data16
loope
cltd
or
add
cmp
fmuls
rorb
mov
fcompl
mov
sub
pop
mov
push
fnstsw
fs
jb
pop
xchg
dec
aas
lcall
jmp
sub
xchg
sahf
ret
or
test
push
add
adc
xchg
add
dec
movsl
cld
mov
fisttps
ss
js
xchg
popf
ljmp
xlat
cmpsb
lret
roll
mov
add
into
add
into
cmpsl
int
cmc
pusha
int3
xor
and
dec
shl
outsl
lret
stc
test
cli
fs
in
adc
pop
das
data16
mov
out
mov
jg
mov
jl
aas
add
or
add
gs
xchg
pop
leave
out
adc
mov
add
dec
test
push
out
sbb
lret
mov
dec
pop
xchg
push
sbb
jno
fisttpl
sti
sti
dec
test
dec
bound
nop
loop
mov
inc
loopne
dec
ftst
mov
xchg
popa
cli
mov
jae
call
nop
inc
mov
adc
in
pushf
dec
adc
jmp
stos
stos
pop
or
inc
xchg
shrl
xchg
cmpb
in
mov
pop
cmp
dec
or
push
jecxz
mov
notb
xchg
iret
cwtl
movsl
adc
nop
mov
adc
fstpt
xor
scas
lgs
pop
lock
cltd
jbe
or
cmpb
fcmovbe
rcll
loop
out
ljmp
imul
test
push
mov
lds
inc
lret
jle
out
push
out
mov
jno
push
sub
stc
aam
scas
sub
lcall
fnstsw
xor
les
xchg
jp
adc
popa
and
lods
fidivrs
add
les
jns
mov
add
and
test
rolb
jbe
test
roll
xchg
je
shrl
in
stos
push
cli
and
add
push
shll
cmc
daa
xor
mov
or
stc
mov
mov
mov
pop
xor
icebp
ja
and
dec
cltd
es
inc
push
push
mov
movsb
and
dec
sbb
xor
test
out
sbb
jns
pop
test
xchg
pop
jmp
shrl
adc
or
iret
jp
pop
sub
push
popa
ret
nop
or
xlat
jmp
xor
push
pusha
cmp
fistps
lcall
xor
sbbl
push
cmp
repnz
es
mov
ljmp
and
add
jnp
xor
std
rol
push
push
and
iret
pushf
popa
cmpsb
ret
and
inc
scas
out
sbb
and
inc
aas
hlt
cmpsb
or
mov
jo
push
stos
loopne
mov
push
pop
inc
sbb
push
imul
hlt
ficomps
loopne
ficompl
shlb
mov
test
jle
inc
mov
hlt
leave
enter
popf
gs
in
jge
adc
sbb
and
aaa
cmp
or
xor
pop
shll
push
mov
leave
xor
mov
ss
xor
js
aam
adc
das
push
mull
aad
cmpsb
cmpsl
jmp
fmulp
call
sub
cmp
pop
in
mov
jno
aas
adc
or
movsl
adc
sbb
add
sbb
addb
test
sti
out
addb
xlat
or
cmp
enter
notl
lcall
loope
mov
sbb
pop
sub
outsb
cmp
shlb
loope
aam
or
push
cmp
xchg
add
shll
push
loopne
mov
sub
stos
pop
adc
pop
push
aam
fcmovnu
sub
loope
dec
lods
inc
sahf
and
test
fcomps
fisubrs
jg
sbb
mov
mov
sahf
mov
mov
and
andl
cmp
cmp
lret
std
rcrl
sub
std
mov
into
mov
jge
push
inc
adc
push
fwait
outsl
mov
push
loop
test
push
cmp
or
sub
lods
mov
std
out
sub
imul
xchg
pusha
cmp
jbe
or
aas
mov
push
movsl
pop
call
sub
imul
xchg
cmpsb
repnz
mov
fstpt
sub
mov
in
inc
add
sti
stos
lret
pop
cs
shlb
mov
sub
repz
and
mov
stos
repz
jne
mov
scas
lea
pop
call
psllw
pop
cmp
pop
adc
push
adc
cmpsl
jns
scas
int
inc
push
int
inc
test
aas
mov
add
dec
or
or
pop
mov
std
dec
mov
pusha
push
clc
mov
inc
fmull
and
clc
fldt
mov
mov
sbb
das
and
std
mov
jle
mov
imul
xchg
cmpsl
cmpsl
fldcw
fcomp
or
pushf
adc
cld
aam
xor
in
cmpsl
sub
xchg
aas
push
mov
nop
movsb
push
rol
in
loopne
cmp
aam
inc
pop
sub
add
pop
pop
frstor
sbb
xchg
mov
mov
adc
add
fiaddl
out
addr16
xchg
imul
dec
and
sbb
push
cltd
mov
test
aam
xchg
fcmovnb
dec
mov
test
jmp
xchg
inc
sbb
mov
pushl
stos
inc
iret
inc
push
cmp
pop
add
jnp
int
mov
push
add
add
add
ja
lret
mov
mov
out
ds
ja
lahf
xchg
dec
mov
push
xlat
outsb
insl
fwait
adc
out
cld
enter
xchg
xchg
divl
bound
push
jns
inc
loope
add
push
ss
out
mov
aam
addr16
cmc
aaa
jp
mov
pop
xor
jge
jle
push
xchg
pusha
xlat
aaa
push
xchg
push
xor
jmp
mov
mov
push
cld
and
mov
sub
and
gs
insb
cld
nop
lods
jnp
adc
mov
loopne
adc
pop
dec
iret
sti
out
mov
pop
aaa
lret
mov
pop
xor
inc
push
or
sub
dec
inc
iret
pop
jbe
xchg
add
jne
jbe
dec
imul
add
lds
pusha
rclb
inc
repnz
rcrb
mov
fistpll
jbe
ret
lcall
aaa
stc
loop
or
cltd
in
int3
jno
ja
add
les
xchg
gs
xor
push
dec
lds
addr16
cmp
fs
movsb
ret
js
push
dec
mov
cmpsb
sub
inc
enter
daa
cmpsl
call
movsl
jno
lahf
sbb
push
orl
mov
jnp
sahf
jns
lahf
lahf
or
test
scas
insl
inc
icebp
aam
int3
scas
scas
pop
ja
add
pop
mov
push
sbb
inc
lret
ja
aaa
arpl
push
cmp
outsb
cltd
popl
or
cmp
xor
jb
and
out
pop
xor
shrb
mov
fisttpll
lcall
add
xlat
rclb
cmp
sahf
or
sbb
stc
or
jg
lahf
lret
mov
mov
or
mov
loope
and
addr16
cmp
int3
imul
lret
mov
mov
sbb
test
insl
rcrl
xchg
xor
test
pop
loop
push
xchg
stc
repz
fs
jb
adc
popf
imul
mov
mov
xchg
sahf
and
cltd
daa
cmp
mov
insl
inc
int3
push
gs
mov
movsb
or
pop
pop
jae
adc
inc
xchg
imul
dec
add
ret
and
loope
cmpl
enter
in
test
xchg
in
mov
cwtl
sti
pop
pcmpgtd
adc
ret
aad
gs
nop
cwtl
jo
dec
stos
mov
xchg
fsts
lock
int
mov
dec
lea
jl
mov
jecxz
in
pusha
push
adc
daa
mov
mov
aaa
scas
pop
push
xchg
add
cmp
inc
mov
jp
jb
pop
push
dec
clc
mov
imul
sbb
in
cwtl
sbb
mov
cmpl
mov
mov
jbe
lock
jbe
mov
inc
jmp
inc
shl
mov
mov
dec
loope
leave
cmpsl
cmpsb
pop
mov
icebp
jae
idiv
inc
or
call
stos
and
jmp
sbb
scas
lods
popf
rclb
xor
ret
mov
and
fisttpll
dec
seta
filds
ljmp
cld
lods
insb
mov
lret
xchg
mov
lea
adc
arpl
add
imul
mov
fildl
out
dec
ja
sub
sbbl
push
cld
pop
pop
lods
mov
xor
push
fisttpl
movb
add
mov
idivb
or
test
jno
adc
mov
in
mov
stos
mov
dec
jg
stos
inc
jle
jmp
fwait
inc
inc
fmull
mov
jne
push
dec
mov
inc
push
out
arpl
jns
lret
mov
xor
movsl
pop
out
out
push
sub
shlb
addr16
push
dec
jp
adc
mov
mov
mov
sbb
and
in
mov
pusha
jb
out
fists
fs
dec
loop
xchg
jle
dec
cmpl
mov
mov
mov
push
sbb
and
and
mov
lea
add
adc
iret
pop
xorb
fildl
inc
vandps
rclb
inc
inc
add
or
cmpsl
xchg
inc
dec
or
xchg
int3
xchg
cmc
sbb
pop
scas
imul
sbb
mov
cmp
mov
sub
push
leave
xor
xor
add
sbb
sbb
push
aaa
mov
xlat
ljmp
sub
sub
js
insb
xor
imul
add
cli
push
inc
cmp
loopne
push
cltd
mov
lods
xchg
shr
std
xlat
ror
fidivrs
cmp
push
mov
dec
adc
ds
gs
pop
out
cmp
int
std
js
test
xchg
repnz
xorb
pop
sahf
aaa
scas
js
sub
push
addb
sbb
cmp
fsubs
rcrb
push
xchg
out
xorb
sbb
add
popa
xor
mov
mov
data16
rolb
mov
lcall
lret
faddl
fiadds
ljmp
jg
sub
mov
fmuls
mov
test
and
mov
ss
pop
cmp
xchg
test
lret
aad
leave
test
sbb
lret
into
push
test
mov
outsl
inc
push
loop
mov
dec
fs
scas
adc
test
sub
cmp
xchg
push
cli
shll
inc
cmp
fdivl
call
xchg
dec
loopne
test
adc
xchg
push
imul
rolb
les
das
sbb
xchg
stos
sub
cmp
les
mov
sti
or
mov
jne
xor
add
push
mov
dec
inc
sbb
lahf
and
repz
push
imul
or
test
adc
arpl
mov
pop
inc
sub
dec
inc
mov
inc
bound
cmp
outsl
dec
or
and
mulb
dec
std
adc
mov
mov
test
mov
xchg
inc
dec
push
es
and
bound
push
sub
das
fisubrs
mov
clc
in
or
xchg
adc
inc
add
outsl
stos
lods
insl
icebp
and
xor
mov
sahf
cld
sub
push
and
xchg
addr16
into
mov
fsubrs
es
das
aam
outsb
fdiv
push
icebp
pop
add
mov
adc
jne
icebp
xchg
aaa
jae
ljmp
pusha
lods
xlat
ss
mov
sub
fisttps
cmpleps
loopne,pt
cltd
mul
xor
ljmp
push
or
test
adc
xchg
pop
sbb
sbbl
jle
stc
add
mov
adc
dec
mov
and
add
mov
push
lea
fdivp
mov
ja
and
inc
adc
jle
fwait
jb
xor
cwtl
jbe
enter
dec
adc
bound
test
xchg
hlt
pushf
add
das
xchg
in
sub
mov
cmp
jp
std
sub
mov
jp
mov
data16
in
mov
fstp
mov
mov
inc
mov
xchg
dec
imul
or
dec
push
sbbb
fwait
mov
sub
mov
and
sbb
pop
jnp
and
scas
es
ds
lret
mov
popf
sbbl
addl
jae
nop
mov
dec
cmp
shlb
stc
inc
int
xchg
mov
sbb
sbb
imul
imul
outsl
mov
add
jge
mov
stos
hlt
mov
arpl
fstps
call
or
ja
push
or
rcr
int3
inc
adc
pop
pop
dec
scas
push
pop
das
push
jo
aad
scas
int
xchg
and
insb
shlb
cmp
cmpsb
xor
mov
enter
daa
movsl
out
push
cmp
test
ss
repz
sbbl
arpl
shll
hlt
xchg
lahf
frstor
mov
test
pop
sub
pop
push
and
js
rclb
push
outsb
std
push
fwait
mov
sub
adc
insb
lods
imulb
push
add
testl
cmc
addb
sbb
daa
and
push
jmp
pop
adc
loope
cld
pop
lea
lds
sub
sub
sbb
or
subb
jg
mov
fisttps
pop
xor
and
stc
cwtl
ss
mov
inc
xchg
testl
jne
pusha
jl
mov
cmpsl
ljmp
test
cmc
stos
cmp
xor
mov
and
lea
fdivrl
notl
sbb
lods
data16
and
cmp
mov
test
cli
add
jecxz
or
sbb
int
or
mov
and
adc
pop
inc
psubb
in
cltd
imul
je
add
jp
arpl
sbb
ret
xlat
inc
fsubs
rolb
xchg
mov
xchg
sar
loop
fcoms
imul
sub
rclb
repz
aam
leave
and
add
call
mov
pushf
pop
push
movsb
scas
adc
jo
jmp
rorl
pop
cwtl
push
je
mov
lock
pop
inc
aas
xchg
pop
push
jb
mov
add
jecxz
out
mulb
sarl
push
insb
in
mov
xlat
mov
cmp
test
lds
jno
sti
das
mov
push
repz
pop
jns
rorl
call
aam
xlat
xchg
test
jno
mov
cld
push
cmp
lret
cmp
and
mov
in
lret
not
cmp
sub
add
ret
mov
out
fstp
or
xchg
xchg
jbe
repnz
sbb
test
xchg
xor
mov
mov
push
mov
cltd
cs
mov
xchg
data16
dec
mov
test
xchg
ret
pusha
fistps
add
jae
add
stos
adc
aaa
push
and
jns
xor
cltd
mov
xor
mov
std
add
xchg
test
mov
and
ja
sub
dec
gs
mov
lods
movsl
xchg
or
les
dec
movsl
outsb
inc
jne
daa
lock
in
mov
xchg
push
jle
sbb
cmp
pop
mov
out
mov
sub
mov
mov
jp
popf
jge
ja
test
jle
aam
in
sbb
sbb
jmp
adc
imul
movsl
xchg
popf
ret
mov
out
xor
addr16
insb
cmp
push
loop
mov
icebp
push
jo
out
adc
push
ret
inc
pop
fsubrl
inc
fisttpl
lods
jae
xchg
incl
in
or
popf
fbld
dec
jne
fisubrl
mov
mov
imul
jbe
jmp
test
shl
xchg
mov
shrb
inc
hlt
cmc
sbb
arpl
insl
jbe
adc
popl
int
out
lret
rcrl
mov
outsb
int3
xor
push
pop
lea
mov
jo
mov
xchg
and
cwtl
push
movsb
fs
xchg
out
cmpsb
mov
jae
lret
in
enter
daa
movsb
aaa
pop
cmp
push
fbstp
sub
repnz
xchg
movsl
das
addr16
and
test
mov
cmpb
ljmp
adc
jno
js
or
push
imul
mov
sub
daa
add
sbb
adc
rorb
mov
sbb
push
xor
cli
push
in
pop
ror
repnz
sub
pop
or
daa
lcall
or
fdivs
shrl
or
out
sahf
repnz
test
mov
dec
imul
inc
shll
outsl
push
mov
pop
mov
ss
fcmovnu
std
jae
testl
xchg
and
dec
aam
push
push
in
jb
and
and
outsl
add
xor
fs
xchg
stc
sbb
ds
adc
or
lret
clc
lods
movsl
das
cmc
mov
inc
popa
out
data16
aaa
lock
jecxz
sub
xchg
and
cs
cmpsb
ret
dec
mov
pop
arpl
mov
jnp
adc
ljmp
divb
cmp
fbld
test
cli
sub
mov
repnz
in
cs
mov
xchg
xchg
ficoms
enter
aas
ret
imull
loopne
and
pushf
insb
push
int3
test
ljmp
or
inc
pop
push
push
adc
cmp
mov
push
pop
cmp
inc
icebp
jge
aas
xor
stos
jb
cmp
dec
pop
pop
cmc
je
subb
data16
out
aas
std
bound
cld
cwtl
dec
add
jnp
fiadds
sub
mov
cmpsl
pushf
mov
call
sahf
das
pushf
popa
sti
mov
data16
and
xor
rcr
push
or
jne
das
insl
mov
inc
insl
cmpsl
mov
cmp
xorb
mov
mov
clc
mov
or
test
or
lock
and
ret
gs
sub
decl
cmp
push
scas
xchg
mov
ret
ljmp
xchg
lods
lods
popa
inc
mov
repz
xchg
test
dec
push
rcl
jo
data16
ret
or
lods
xchg
daa
push
dec
and
loopne
cltd
mov
sbb
cmp
rcrl
mov
stos
dec
sbbb
pop
ja
mov
add
push
cmp
pop
test
mov
xlat
cmp
dec
dec
pop
pop
sbb
inc
push
lcall
loop
dec
mov
push
jne
lret
add
addr16
jae
jns
cmp
in
xchg
sbb
xor
pop
enter
sbb
jp
lock
xor
sub
daa
jle
xor
jge
inc
push
fcomip
out
stc
xchg
mov
cmp
xchg
fisttps
pop
subl
push
push
or
jmp
xchg
and
les
jle
mov
stc
jnp
inc
ds
in
adc
push
mov
inc
adc
push
cmp
pop
adc
mov
inc
dec
add
or
sbb
leave
inc
lret
icebp
out
pop
out
xchg
stc
sbb
fucomi
xor
mov
mov
jge
adc
mov
mov
and
leave
cwtl
cmpsl
jnp
inc
orb
or
sub
mov
iret
aaa
cmc
jge
or
jno
dec
pushf
dec
int3
sbb
push
and
mov
jo
scas
add
mov
cmp
add
out
push
add
aad
cmpsb
xorb
mov
hlt
enter
daa
mov
sarl
jno
dec
enter
rorl
jno
ds
add
lahf
sbb
push
jbe
adc
repnz
repz
sub
gs
pop
adc
aad
mov
imul
movsb
lcall
fcomip
sub
adc
lret
outsb
and
jmp
enter
pushf
subb
sbb
cmp
add
scas
jp
sbb
int
insb
shrl
xlat
mov
leave
lcall
arpl
adcl
mul
dec
sahf
xchg
call
sub
jg
out
mov
addl
cmp
fwait
xlat
ss
enter
test
mov
in
xchg
lret
or
mov
lods
mov
fiaddl
stc
sbb
cmc
cmp
jl
jecxz
mov
stc
iret
hlt
or
adc
adc
jo
cs
adc
cli
push
xchg
xor
sub
or
xorl
pop
cmpl
imul
xor
xchg
jmp
in
cmp
rcrl
sub
cmp
in
pop
adc
sti
adc
in
aad
adc
nop
add
repz
daa
and
inc
push
xchg
jmp
or
imul
iret
pop
xlat
lea
push
call
mov
arpl
mov
adc
lret
sahf
ret
jg
pop
fiadds
inc
shl
inc
or
sarl
iret
les
dec
or
dec
aam
dec
je
adc
stos
sub
imulb
add
std
or
jmp
pop
dec
mov
mov
push
adcl
cmp
or
mov
daa
icebp
adc
jnp
lret
xor
mov
xor
data16
insl
cmpsb
out
dec
int
popf
cmpsl
mov
adc
icebp
iret
test
cld
stos
add
sbb
jp
mov
pop
sbb
sub
repz
xor
sub
mov
add
hlt
cmc
adc
cmp
clc
clc
es
call
ljmp
dec
lods
sbb
xchg
push
cmp
xchg
int3
add
push
fwait
jp
pandn
hlt
add
mov
pushf
popa
and
mov
dec
mov
jge
lret
sbb
dec
jp
mov
jge
pop
mov
stos
out
jae
push
addr16
add
repz
call
mov
xor
sbb
sub
mov
fdivrl
xchg
insb
aad
and
daa
dec
dec
push
add
and
or
int3
lea
imul
jne
shr
mov
in
out
push
push
push
bound
push
jns
push
int3
in
js
xchg
loope
loopne
mov
cmp
lods
outsb
mov
add
jp,pn
divl
mov
aam
adc
mov
pusha
fisubrs
pop
xchg
je
out
sub
inc
xchg
stos
fidivrs
mov
xchg
push
popf
adc
iret
mov
fs
or
xchg
imul
adc
mov
insl
stc
sub
js
adc
cmpsl
iret
repz
pop
dec
fs
inc
icebp
nop
mov
inc
push
xchg
pop
or
xchg
dec
cwtl
inc
dec
repnz
ficoml
lods
call
sbb
push
fldt
test
lds
mov
mov
jbe
sub
maskmovq
hlt
mov
ljmp
loope
jge
pop
inc
sbb
ret
scas
test
push
mov
int3
or
mov
push
add
inc
xor
aad
add
and
add
jns
push
movsb
jp
gs
aad
popf
cmpsb
mov
sbbl
push
mov
jno
mov
dec
shlb
push
movsl
cmp
ret
mov
push
dec
addb
es
push
mov
aad
fwait
xor
mov
les
sbb
adc
push
push
es
sub
into
cmp
mov
mov
xchg
rorb
pop
popl
cmp
shlb
out
xor
int
leave
adc
push
pop
mov
or
rcrl
fidivrs
fsubrl
dec
dec
sub
jno
sahf
cmp
mov
andb
out
sub
mov
cmpsb
lea
push
shlb
stos
std
cmp
jae
loop
cmpl
lret
mov
mov
sbb
enter
shrb
add
sub
adc
cmpsl
stc
xchg
fs
jo
or
sbb
rorb
sub
cli
popf
aaa
xor
cltd
jo
or
sbb
je
lods
gs
xchg
loopne
das
lcall
int3
imul
push
add
je
xchg
lods
pop
push
sbb
jae
mov
sub
pop
pop
mov
enter
fnstsw
add
mov
and
int
fbld
lock
gs
fldenv
or
testb
shrb
arpl
push
pop
push
or
jecxz
insb
iret
mov
pushf
stc
inc
imul
adc
pop
inc
daa
add
jb
psllw
cld
outsl
je
negl
mov
pop
sbb
cwtl
ret
mov
cmp
popa
mov
subl
into
les
shlb
mov
das
pop
jcxz
cwtl
mov
shlb
es
daa
insl
lea
lds
or
cld
movsl
in
lret
xchg
out
and
repnz
cmp
dec
pop
enter
test
aam
mov
ret
addl
fisttpll
fdivrp
popa
jecxz
xchg
xor
gs
popa
fwait
mov
mov
mov
and
lock
cltd
shrl
mov
mov
inc
in
xchg
add
test
push
push
xchg
mov
rorl
jge
pop
add
xchg
or
test
lret
add
push
or
xor
enter
negb
fs
aam
pop
out
mov
mov
mov
push
lret
jbe
jecxz
inc
dec
ds
xchg
inc
jno
inc
or
mov
dec
test
jne
cmp
mov
std
xor
xor
aam
push
bound
pushf
in
scas
call
cmp
insl
or
icebp
mov
mov
sub
mov
inc
and
in
xchg
pusha
jns
jae
xor
xor
xchg
jne
jnp
inc
int
push
mov
sarb
mov
or
ds
jle
cli
jnp
jae
scas
mov
dec
push
inc
nop
pushf
adc
jg
xor
lods
sbb
aad
inc
cld
push
adc
das
pop
inc
push
lcall
push
pop
inc
inc
leave
jbe
fcmovb
push
xor
dec
imul
shl
push
lds
dec
add
leave
fs
xchg
movsl
hlt
dec
mov
jbe
jbe
jge
xlat
into
sbb
sbb
aaa
jae
push
or
testb
cmc
mov
pop
sbb
int
ss
jo
xlat
pusha
scas
dec
stos
cmpsb
and
test
cmp
sub
and
test
subb
enter
daa
mov
in
jge
xchg
clc
mov
dec
aas
lcall
inc
popa
xlat
and
pop
lahf
pop
xchg
push
sbb
outsb
test
mov
mov
or
pop
jns
pop
popa
ja
js
xor
push
jmp
push
adc
sub
pop
dec
cmp
rcl
jmp
xchg
adc
arpl
adcb
inc
add
xchg
xor
and
subb
loop
mov
lcall
lods
push
jbe
aad
lcall
lea
sub
test
mov
add
popa
mov
leave
sbb
gs
sti
lcall
cmp
cs
testl
add
mov
pop
mov
inc
stos
mov
cmc
push
push
xor
push
mov
loop
in
inc
stc
cmp
lret
pop
es
jge
test
mov
inc
out
cld
pop
cli
rclb
hlt
xor
fdivrl
fiaddl
xchg
adc
gs
loopne
or
pop
shll
xor
dec
adc
mov
add
cmp
sbb
scas
jne
xlat
inc
flds
mov
xor
sti
jae
inc
cs
sub
in
jno
js
push
fstps
adc
or
aad
mov
lret
sti
mov
mov
mov
adc
xchg
adc
jmp
cmp
pop
and
and
or
jge
or
inc
nop
dec
ret
je
das
sub
enter
scas
sub
std
push
sub
cwtl
jge
divl
push
cmpsb
and
jmp
bound
mov
fnsave
lock
mov
mov
sbb
lret
push
scas
es
push
insl
je
mov
xlat
xchg
cmpsl
mov
in
icebp
jge
fs
add
lret
idivb
mov
enter
lea
pop
imul
mov
aam
xchg
lret
pop
cmp
inc
mov
clc
pushf
and
fisubrl
andl
adc
push
sub
pop
arpl
push
push
cld
push
setge
push
add
xchg
fadds
inc
popa
xchg
and
dec
pop
and
test
adc
xchg
dec
rcrb
mov
shll
negl
icebp
stos
int3
adc
lods
cmp
add
mov
call
xchg
pop
xor
or
or
and
xor
cmp
insb
add
mov
mov
jl
or
adc
jno
dec
xor
inc
or
or
and
fwait
pop
pop
dec
xor
jne
or
mov
sub
addr16
jns
jae
in
cmp
xchg
jg
inc
out
test
sub
mov
imul
mov
mov
ljmp
je
pusha
adc
rcr
mov
jmp
inc
jp
adc
fs
push
pop
popf
pop
mov
sub
dec
stos
push
rclb
add
insb
jmp
mov
scas
adc
or
sub
cmp
add
mov
addr16
jno
ret
adc
or
mov
jb
dec
jg
fidivrl
xchg
xchg
imul
test
aam
jne
sbb
rorb
mov
sbb
mov
std
cmpl
sahf
dec
jbe
jg
jge
cmp
aaa
xor
add
pop
and
pop
dec
jbe
push
lret
xor
mov
scas
sub
xchg
cmp
mov
movsb
nop
xor
cmpsb
mov
mov
enter
daa
mov
mov
jno
test
jl
out
dec
scas
push
dec
ds
and
fildl
inc
lahf
js
test
cmp
push
push
and
push
and
or
mov
and
xchg
push
ds
mov
loope
call
inc
cmp
sbb
xchg
jbe
stc
sarb
imul
sbb
icebp
dec
xor
cld
xchg
int
xor
pop
or
lcall
sbb
test
cmp
adc
push
xorb
xchg
mov
add
mov
xorb
pop
ss
test
fsubr
out
add
add
lret
pop
rcll
mov
push
push
into
mov
push
sbb
inc
mov
loop
hlt
and
adc
stos
out
inc
mov
inc
jle
jg
aam
add
cli
xor
mov
pop
or
stc
dec
mov
jo
loopne
cld
sahf
pop
loopne
fcoms
add
mov
adc
loop
cmpsb
push
xchg
add
mov
lods
sbb
jmp
jecxz
sub
mov
outsb
in
sahf
cmpsl
xchg
and
movl
scas
nop
xchg
inc
mov
sbb
mov
dec
xor
repz
enter
dec
call
pop
aad
pop
rcrb
push
adc
adc
jmp
aas
add
lret
push
cmp
inc
pop
rclb
data16
mov
dec
cmp
stc
je
mov
leave
div
outsl
gs
incb
xor
adc
xlat
sbb
ja
fneni(8087
mov
inc
mov
mull
cmp
das
sbb
mov
inc
ja
and
pusha
aad
sbb
add
sub
scas
dec
mov
inc
mov
icebp
push
sbb
sub
inc
lret
sbb
iret
movzbl
mov
rcrb
subl
in
data16
lret
outsl
ret
mov
cmp
fstpl
testl
dec
movsb
push
lods
pop
cmpsl
dec
mov
jg
stos
xchg
mov
fistl
add
cmpsb
lock
gs
xchg
mov
dec
sarb
test
addr16
xchg
push
sbb
mov
shll
inc
in
mov
outsb
push
add
inc
push
pushl
cli
xor
test
or
divl
cli
mov
add
enter
movl
and
mov
jno
or
mov
fwait
mov
dec
adc
cld
jne
cmp
je
out
jo
cli
movsl
call
in
sbb
into
xor
sub
popf
ljmp
sbb
push
fidivrl
jns
jle
inc
stos
in
lds
pusha
scas
fcoml
xchg
in
ja
jmp
or
andl
push
adc
addr16
test
mov
push
hlt
sub
and
andb
test
jnp
mov
scas
js
cmp
adc
neg
iret
repz
ret
push
pop
out
mov
inc
jae
xchg
xchg
add
push
or
fisubrl
push
inc
xchg
sub
or
xchg
ljmp
cltd
adc
shrb
mov
outsl
cmp
je
mov
arpl
leave
jbe
std
sbb
rolb
xchg
aaa
icebp
pop
dec
or
sub
movsl
fisubs
pop
js
popf
push
lods
insb
addr16
out
in
pop
lds
call
or
sahf
loop
movsb
sbb
push
push
ret
cmpsb
inc
mov
xchg
mov
pusha
inc
cmp
fidivrl
jl
lcall
xor
push
xchg
and
sbb
ret
test
push
xchg
inc
imul
test
cltd
clc
js
fchs
pop
roll
push
add
loope
xor
sarb
xchg
outsb
mov
push
inc
jb
rcrb
push
mov
cmpb
dec
add
scas
int
push
xchg
sti
inc
adc
repz
pop
xchg
lcall
or
das
sbb
sub
jecxz
test
in
cmpl
xchg
pop
mov
cmp
int
orl
test
xor
sbb
movsl
fsubs
xchg
popf
push
aad
ljmp
sbb
sub
push
mov
pushf
outsl
pop
cmp
inc
shll
fs
xchg
adc
add
lods
sub
mov
jbe
out
hlt
cmp
push
js
cmp
fsub
or
jnp
fnsave
gs
jp
jl
pop
pop
incl
adc
pop
shrb
jo
adc
dec
mov
xchg
cmc
pop
ss
and
pusha
xlat
shlb
test
xor
or
out
sarl
aad
call
nop
jo
fmull
lret
cmpsb
inc
sahf
sahf
nop
ds
les
les
cmpsl
sbb
fildl
in
ja
call
xchg
sbb
dec
push
adc
sub
pushf
cli
xor
jmp
pop
and
xor
inc
mov
aas
dec
dec
xorl
cmp
je
pushf
out
out
jmp
std
movsl
mov
and
cmp
pop
dec
mov
xlat
push
mov
jne
lock
mov
dec
mov
stc
test
popa
mov
int
add
aas
insl
inc
or
mov
loopne
mov
sub
stc
cld
push
test
aam
call
and
ret
int
pop
cmpsl
xchg
shrb
adc
aam
push
aad
xor
sub
sahf
sahf
ffree
jo
clc
adc
xchg
lock
cmpsl
popa
or
jmp
lret
pop
test
xchg
call
into
cvtdq2ps
add
ret
jno
js
jno
cli
int
mov
adc
xchg
mov
mov
add
xchg
and
xchg
xchg
rorl
inc
bound
adc
repz
dec
add
pop
ss
adc
das
xor
insl
dec
xor
rorl
mov
scas
mov
xlat
pop
mov
sbbb
and
push
inc
rcll
int3
pop
fwait
mov
jne
jne
aam
mov
sarl
into
xor
lea
jns
and
xchg
sbb
fistpl
or
in
jp
sbb
mov
and
mov
data16
ja
jecxz
dec
imul
dec
fldl2t
add
ds
gs
hlt
or
popf
lods
xor
inc
cmp
stos
cmp
sub
jnp
js
scas
fldt
scas
push
sbb
loope
fisubrs
iret
push
movsl
dec
ret
scas
pop
es
inc
sbb
xor
or
jg
xor
sbb
fcmovu
stos
xchg
test
xchg
sbb
xchg
push
imul
mov
push
outsb
rolb
bnd
leave
jmp
fdiv
mov
enter
jbe
out
das
jge
stos
into
sbb
jns
mov
decb
xor
mov
int3
mov
stc
pop
cmpsl
scas
sub
nop
ja
xor
inc
stos
outsb
scas
out
jp
xchg
inc
xchg
cmp
insb
movsb
cmpsb
in
add
jns
cmpsb
lds
in
xor
xchg
jmp
sahf
shrl
pop
or
jl
and
dec
mov
bound
adc
push
push
xchg
arpl
jmp
aaa
test
cmpsl
cld
push
pop
orb
adc
dec
loope
mov
test
xor
je
adc
hlt
dec
adc
int3
out
sbb
dec
add
rcll
and
out
incb
xchg
pop
daa
xor
ds
cli
pop
push
int
lcall
mov
ficompl
sub
andl
in
inc
sbb
mov
pop
push
mov
add
and
sub
cmp
pop
and
idivl
jnp
nop
out
push
xorl
aad
shr
aas
into
push
test
outsl
ds
aas
loop
adc
stc
bound
fs
aam
pushw
push
push
lods
jg
repnz
ss
cli
imul
lcall
adc
add
pop
sbb
pop
push
mov
adc
lea
adc
xchg
and
cmp
push
xchg
mov
push
push
cmp
cli
xlat
incl
int3
mov
je
cmp
and
cs
fcompl
aad
jne
nop
dec
xor
inc
mov
push
flds
lahf
les
sub
repz
ljmp
fcompp
call
add
ss
sub
pushf
movsl
sub
jmp
xchg
sbb
xchg
sti
inc
fs
js
ljmp
dec
daa
ljmp
cmc
cli
push
js
xchg
std
dec
push
es
scas
mov
mov
sub
mov
mov
dec
stos
fstpl
ds
mov
push
mov
das
mov
jge
mov
adc
in
outsl
not
mov
dec
js
sub
dec
mov
shlb
jecxz
icebp
add
sar
xorb
inc
mov
imul
mov
sar
mov
sub
push
mov
into
xor
ret
mov
js
fucomp
leave
jbe
dec
pop
and
xor
cmp
fstl
out
inc
and
xchg
das
les
aam
btsl
cltd
scas
mov
test
loope
xchg
xor
dec
mov
imul
push
adc
inc
sub
shll
sub
and
cltd
cmp
push
xchg
scas
daa
add
jp
inc
pushl
adc
and
sbb
mov
imul
in
cmp
rcl
dec
or
inc
or
fidivrs
dec
push
jne
iret
pusha
mov
sub
bound
sub
ds
fucom
outsb
rcr
xchg
insb
xlat
pop
out
and
or
call
std
mov
adc
mov
fistpll
in
xchg
imul
inc
ds
xchg
push
cwtl
jmp
mov
sti
pop
push
lcall
mov
lahf
mov
andb
divb
sub
in
scas
or
adc
pop
mov
pop
pop
add
inc
sub
ljmp
xchg
push
lds
xor
sti
imul
imul
ficomps
rol
sti
dec
shlb
xor
adc
and
add
inc
arpl
xor
push
inc
jge
mov
push
aaa
outsl
pop
scas
or
xchg
mov
rcll
int3
lahf
sbb
lock
push
jae
icebp
xor
pushf
sbb
scas
and
sub
push
pusha
incl
cmpsb
dec
movsb
and
mov
popf
cmpsb
xor
jo
je
out
add
jl
jg
dec
sti
sbb
jnp,pt
xchg
movsl
pusha
sarl
lods
add
aad
aad
push
mulb
mov
xlat
inc
xchg
push
scas
pop
std
dec
xchg
sarl
pop
dec
test
push
movl
cmp
adc
ja
dec
adc
iret
pop
xor
sbb
or
dec
pushf
fildl
daa
lret
xor
and
push
add
sub
sar
sub
ret
push
cmp
push
xchg
and
xchg
movsb
sahf
sahf
sbb
dec
push
addb
inc
jg
enter
push
or
mov
cmp
mov
scas
pusha
cmp
sbb
addr16
or
sbb
mov
out
sbb
loopne
into
dec
mov
cmc
jecxz
and
push
cmpsl
icebp
outsl
sbb
mov
sbb
xor
lret
adc
dec
lods
idivb
out
cld
cmp
xor
push
mov
or
adc
and
mov
pop
cmp
push
lods
adc
xor
lret
lods
jnp
jnp
cmpsl
sbb
lcall
sub
push
mov
fildll
mov
lock
aad
dec
lods
nop
es
cmp
les
fnstcw
std
les
xlat
mov
loope
dec
lea
xor
or
jmp
mov
pushf
push
clc
or
in
loop
pop
mov
fildl
adc
mov
jb
sub
dec
sahf
aas
ljmp
push
sti
idivb
pop
cwtl
imul
mov
push
sbbl
pop
sub
mov
pushf
shl
xchg
xchg
das
mov
xchg
loopw
and
jne
roll
pop
jl
or
mov
cmpsl
pushf
stos
cltd
mov
fxch
inc
cld
lods
cmp
lret
mov
mov
and
stc
pushf
add
in
ret
rcl
cmp
sub
decl
aam
addr16
push
imul
pop
or
xchg
outsb
aam
ljmp
pop
lods
lcall
out
test
aad
jbe
pusha
push
mov
out
add
and
out
insb
test
lcall
add
pop
dec
cmc
inc
test
fisttps
sbb
je
sarl
shrb
cmp
aas
add
inc
pop
xor
or
pushf
inc
mov
add
mov
push
out
ja
clc
xor
std
int
inc
add
or
ret
aas
fwait
sbb
in
mov
sub
sub
mov
inc
jns
pop
fsubp
stc
stos
or
lret
sub
mov
mov
mov
mov
mov
outsb
cmp
jle
lea
pusha
add
cmp
xchg
mov
jmp
insb
mov
inc
push
pop
dec
das
popf
cli
cmp
ficoms
mov
pop
in
insb
xchg
dec
jp
xchg
scas
mov
loopne
adc
retw
loope
xchg
cmpsl
addr16
xor
xor
xor
arpl
push
inc
leave
outsl
fiaddl
xchg
xor
sbb
sub
push
fiadds
push
sarb
lock
inc
imul
jl
arpl
lea
lods
fistpl
fcom
aaa
cmpsl
dec
or
sub
into
int3
mov
pop
add
imul
jo
lcall
mov
inc
mov
leave
xchg
add
jae
pushf
cmovno
mov
and
jl
scas
dec
push
add
sahf
pop
movsl
addr16
push
and
dec
lahf
hlt
fidivrs
push
jb
push
jg
pop
inc
push
add
sub
sti
aad
lods
aaa
pop
mov
and
loope
in
dec
sub
mov
stos
outsb
fisubl
xchg
adc
stos
test
xor
out
sub
add
loope
xor
push
pop
push
add
and
sub
addb
cmp
lcall
fdivl
pop
fldcw
add
sahf
or
pop
andb
movsl
jg
jnp
mov
adcl
add
and
movsl
cmp
adc
fcom
test
cmp
jbe
ffree
scas
test
mov
test
xor
xor
stos
inc
cmc
xor
orb
rclb
fs
inc
xchg
data16
jmp
pusha
mov
test
inc
sub
iret
or
xor
mov
cmpsb
dec
xchg
incb
hlt
gs
loopne
xchg
adc
stos
imul
and
add
pop
xchg
ds
out
sbb
aad
loope
jge
insl
sub
idiv
mov
dec
pop
jb
fidivrs
cs
test
lret
mov
add
dec
shl
inc
xlat
xchg
sbb
scas
aaa
aaa
les
cmc
div
adc
and
lea
push
test
xor
push
movl
and
ficomps
jmp
testb
sub
inc
leave
data16
sub
push
jb
addr16
adc
xor
jecxz
test
std
lcall
mov
mov
or
adcb
mov
and
lock
and
das
xchg
fmuls
mov
push
dec
mov
rcll
inc
lea
insl
idivl
dec
stos
scas
andl
mov
lret
cld
fcom
adc
and
and
xchg
mov
jle
movsb
sbb
aam
out
addr16
fnstsw
push
popl
mov
ret
adc
xchg
lods
pop
ljmp
ret
sub
js
or
ret
stos
add
vmread
add
sahf
insb
cltd
sbb
pop
mov
inc
xchg
adcb
test
inc
dec
pop
sbb
push
or
stos
ja
inc
push
fadd
je
hlt
and
jae
out
jbe
xor
test
add
out
or
mov
mov
mov
pop
movsb
je
lock
sti
inc
sti
iret
nop
or
jge
fwait
dec
cmp
dec
mov
lock
out
imul
bound
jb
lods
repnz
xchg
or
adc
mov
addr16
jl
jp
fldlg2
mov
pop
and
push
aas
jle
mov
in
icebp
int
sbb
std
xchg
cmp
add
jmp
mov
pop
push
and
sbb
repnz
insb
stos
xchg
enter
idiv
insb
add
push
ss
icebp
scas
add
and
out
dec
lea
outsl
dec
xchg
outsl
aam
ret
adc
inc
ds
push
inc
inc
jnp
jecxz
push
ret
gs
mov
sbb
aaa
mov
fisubs
xchg
rcl
or
mov
adc
fwait
inc
pcmpeqd
jp
jge
sbbl
jae
or
popa
out
jne
dec
pop
xor
cmp
cmp
xor
push
xor
subl
and
pop
cmp
movsb
inc
sti
loop
xlat
leave
cmpsb
dec
xor
in
ljmp
daa
fwait
cld
dec
cmp
and
jno
popa
inc
jl
mov
dec
fnstenv
shll
loop
fistpl
push
pop
mov
dec
push
nop
inc
movsl
lret
or
pop
dec
mov
popa
sbb
pop
int
fs
pop
sub
pop
enter
sub
cmp
fisubrl
call
test
mov
add
fsubrl
out
push
xor
cld
lods
int
inc
sub
scas
out
ret
pop
cmpl
lcall
out
sbb
outsl
scas
mov
mov
les
aas
xor
mov
out
mov
aaa
push
mov
sbb
ss
ja
fcoms
jmp
lret
sbb
inc
in
mov
inc
sbb
cld
into
adc
cwtl
xor
lret
push
stc
xchg
pop
fs
icebp
jge
xor
jmp
mov
lods
les
push
push
mul
jp
adc
add
xor
popf
cmp
lds
or
stos
jnp
nop
loopnew
call
or
adc
inc
pop
imul
push
add
mov
sub
adc
aas
sub
in
mov
mov
mov
cs
cmpsl
aad
sub
xchg
mov
inc
ljmp
les
xchg
repz
sub
out
pop
lea
dec
movl
adc
or
lret
pop
mulb
inc
stc
out
enter
and
sbb
in
pop
dec
mov
addr16
gs
jecxz
inc
mov
cwtl
fisttps
mov
lret
add
push
add
or
lods
outsb
fcmovne
out
dec
mov
aas
xorb
ret
iret
das
jae
push
adc
mov
and
jl
shll
inc
push
insl
fisubrs
dec
movsl
xchg
mov
lcall
icebp
xchg
cld
add
lret
nop
movsl
fistpll
repnz
push
mov
and
shlb
int3
sub
aas
dec
aam
leave
scas
ret
insb
ljmp
pop
sub
adc
ljmp
fisubrs
jg
out
outsb
xchg
push
jae
repz
gs
push
loope
push
xchg
dec
test
mov
mov
fistpll
dec
ret
or
xchg
or
sbb
jl
push
or
mov
dec
inc
push
jg
inc
add
lret
xlat
decl
ljmp
jno
mov
xor
mov
xchg
nop
ja
aam
dec
jecxz
sahf
inc
xchg
rcl
or
ja
lock
xorl
mov
filds
out
dec
repnz
fpatan
pop
jns
sub
in
pop
rcll
shlb
int3
or
jns
sbb
or
scas
icebp
pop
mov
jle
xorl
mov
or
les
loopne
sete
sub
xchg
push
jecxz
mov
dec
rcrb
pop
shl
stos
or
popf
insb
imul
in
adc
and
dec
adc
adc
jae
lock
add
push
inc
dec
leave
popf
jae
inc
mov
imul
imul
stos
ljmp
cld
adc
imul
fiadds
add
inc
fld
icebp
push
cmpl
movl
popa
jbe
cmp
les
cmp
cld
or
jnp
add
test
pop
arpl
push
sbb
sub
lods
fstpt
bound
and
and
cmp
arpl
push
dec
sub
in
rcrl
mov
cmp
notl
jae
xchg
jl
mov
dec
gs
xchg
movsl
jne
jmp
jge
iret
lahf
xor
push
loope
subl
push
flds
ficoml
mov
int3
pop
jb
mov
pushf
sbb
pop
or
jmp
xor
loope
jecxz
cmpsb
mov
icebp
fcmovbe
outsb
mov
cmpsl
loope
pusha
or
push
or
sbbb
sbb
lock
add
push
mov
pop
test
push
or
or
sub
pushf
pop
add
sbb
aad
faddl
pop
int3
sahf
push
mov
sbbb
jg
out
mov
mov
imul
in
ss
outsl
cmp
dec
jg
idivl
push
lret
out
rcr
loopne
cmp
sbb
fbstp
fs
outsl
mov
and
lds
fs
adc
movhps
add
cli
xor
xor
xor
test
mov
gs
pop
pop
loopne
inc
pop
lcall
imul
add
add
add
les
mov
dec
mov
sub
lret
pop
mov
and
mov
cmp
push
cs
pop
aad
xor
nop
mov
js
jle
inc
inc
std
mov
fstps
repz
mov
lock
into
call
add
pop
add
pop
adc
lods
jmp
push
pop
cltd
nop
loop
xorb
ljmp
aas
pushw
imul
push
je
jmp
lods
testb
cwtl
lcall
mov
ficomps
andl
out
fistpll
mov
push
das
push
push
xchg
mov
mov
pop
and
jle
shl
in
pop
es
andb
mov
mov
mov
pop
mov
lret
fldenv
mov
stc
adc
inc
nop
sub
sub
mull
push
adc
push
cmp
gs
and
out
out
sarl
mov
dec
mov
repz
xor
data16
ret
inc
mov
cmpsl
dec
sub
test
mov
xchg
popa
sbb
xchg
shll
pop
dec
stos
push
fmuls
add
out
scas
ljmp
fwait
pop
or
pop
mov
mov
jne
push
mov
sub
dec
dec
mov
sub
insl
or
insl
cld
fwait
cmpsb
mov
inc
jne
mov
or
bound
jns
or
xchg
test
or
push
leave
or
jg
ja
stc
and
mov
cmp
mov
insb
lcall
fildll
sub
xchg
fbstp
xlat
pop
jbe
int
xlat
cmpl
mov
outsl
je
mov
fwait
aaa
xchg
stos
jl
inc
and
insb
orb
xchg
shlb
scas
lret
push
jge
sub
and
pop
clc
ret
mov
inc
push
sub
jae
cs
inc
insb
sbb
push
shrl
ficompl
mov
sbb
call
fsubrp
addb
ret
jns
rorb
mov
popa
lahf
loope
ds
mov
arpl
jo
jge
fadd
sbb
pop
push
aaa
imul
add
cli
inc
int3
dec
jg
pop
xchg
mov
aam
outsb
in
jo
lcall
jno
xchg
cmp
push
and
rolb
test
or
and
add
jno
dec
cmpl
dec
mov
cmpb
std
pop
movsl
jl
mov
sbb
lahf
push
adc
push
mov
jmp
xor
scas
stos
inc
ret
sub
jbe
es
cltd
pusha
pop
js
mov
pop
dec
movsl
stos
push
mov
inc
sub
mov
mov
dec
sbb
cmp
gs
pushf
subb
aam
daa
lods
addb
out
xor
test
int
es
sub
rorb
ljmp
fdivl
adc
sub
fstps
lds
xchg
xorb
jg
scas
aam
inc
xor
loope
ds
mov
ss
inc
daa
cmp
push
enter
push
js
dec
xchg
mov
je
sub
mov
into
xlat
sub
xor
in
adc
mov
psubw
repz
adc
lock
xchg
loopne
lods
xchg
pop
or
cld
lds
cli
push
mov
or
cltd
lods
scas
jl
gs
mov
cmp
or
leave
repz
mov
inc
add
movsb
stos
xchg
xchg
inc
cmp
fwait
mov
mov
mov
sti
jmp
mov
jl
rcl
mov
out
dec
fldl
inc
adc
fsts
les
xchg
repz
lea
cmpsl
call
or
pop
mov
dec
adc
push
inc
pushf
cld
outsb
cmpsb
jmp
lret
cmp
cmpsb
inc
pop
pop
ret
inc
sbb
aas
aas
add
push
std
xor
xchg
jecxz
outsl
popf
test
stos
std
pop
adc
mov
jne
mov
insl
call
dec
inc
pop
cmpsb
fldt
xchg
add
rcrl
adc
xor
mov
inc
imul
roll
lea
push
das
in
insl
lods
notl
dec
fwait
pop
and
aad
mov
cld
pop
popf
jo
outsb
rcl
mov
add
mov
popa
roll
rcrb
sets
lds
ret
mov
push
ficoml
jb
popa
xchg
jmp
push
mov
xor
les
sub
ljmp
dec
pushf
cltd
ret
test
sub
push
pop
fimuls
int3
loope
loop
sub
les
inc
pop
pop
xchg
inc
stos
inc
sub
push
lds
add
mov
push
xor
test
xor
jne
mov
mov
cmp
pop
in
push
ja
mov
mov
or
mov
jle
dec
int
jne
nop
xchg
mov
gs
or
jle
jns
mov
in
pop
pusha
xchg
negl
jl
push
icebp
orl
repnz
clc
mov
ja
mov
inc
mov
sub
jle
dec
xlat
in
in
push
pusha
in
data16
dec
sub
xchg
mov
ret
jg
xchg
cwtl
or
push
imul
mov
ficompl
ja
out
mov
xlat
insb
inc
xchg
pop
jnp
cs
scas
sub
cmc
jo
add
pusha
iret
mov
rol
cltd
hlt
pop
pop
jo
or
pop
fbld
inc
outsl
xor
or
popa
add
mov
xchg
mov
imul
and
lea
cwtl
lds
rol
daa
dec
mov
repnz
jne
mov
adc
jns
mov
jbe
sbb
arpl
sbb
repnz
jl
int3
sub
shll
xor
arpl
and
pop
cmp
std
fwait
push
jmp
pop
cmpsb
xlat
adc
enter
daa
cwtl
fistpl
jno
cld
mov
fmull
mov
mov
mov
test
jo
add
test
stos
pop
mov
push
ret
test
cmp
cli
pop
rcrb
pop
mov
xchg
push
cld
dec
loope
xor
sub
shl
dec
xor
outsb
data16
adc
push
loopne
pop
lcall
pop
mov
ret
xor
movb
adc
inc
sub
mov
pop
add
lcall
das
dec
icebp
sub
mov
test
orb
sbb
xor
dec
and
xchg
ss
push
fnstsw
shll
inc
addr16
rorl
repnz
scas
jb
in
sbb
into
mov
insl
mov
sbb
outsl
js
push
loop
loop
stc
lods
movb
pop
pop
and
or
testl
fdivr
fwait
jbe
xor
jl
cmp
imul
rcl
adc
js
loopne
push
fstpl
mov
adc
in
adc
xor
dec
xchg
sub
mov
sub
xor
in
testb
lcall
aad
push
std
dec
cmp
je
and
jns
repz
shlb
lock
call
mov
mov
cmp
out
cmpsl
pop
std
jmp
out
negl
fwait
inc
mov
movsb
sbb
icebp
xchg
jecxz
pop
and
or
cmpsl
std
ss
cwtl
adc
fbstp
jp
sub
inc
fistpl
or
mov
aad
lock
add
int
xchg
mov
jge,pn
rcll
push
gs
xchg
xchg
daa
dec
xchg
ret
xchg
test
push
icebp
or
sub
test
sarb
pop
loopne
mov
adcb
shl
test
aaa
aam
push
gs
sbb
push
push
fwait
push
rcr
xchg
jge
scas
imul
ljmp
shrb
add
jns
fldpi
lods
push
add
mov
hlt
inc
mov
dec
fwait
inc
cltd
stc
aaa
sub
inc
sti
xchg
mov
clc
add
test
jecxz
xchg
pusha
cmpsb
sbb
outsb
shrl
pop
mov
cmp
push
pusha
mov
sbb
jne
imul
rcll
int
push
mov
mov
sti
push
xchg
lahf
dec
pushf
ja
jnp
dec
mov
outsb
push
or
lods
jb
add
mov
pop
fdivs
jecxz
mov
inc
xor
out
mov
xchg
vmwrite
fmull
inc
sub
out
push
sub
jne
or
jp
scas
sub
das
shll
mov
sbb
in
pop
aaa
pusha
xchg
notl
lds
xchg
arpl
fnstsw
dec
push
sub
xor
mov
lea
push
sbb
and
ja
jnp
dec
sub
push
or
lcall
cmc
ret
dec
pop
cmpsl
jge
inc
push
lods
jae
aad
inc
jb
cmp
iret
inc
mov
cmp
in
mov
std
movsl
inc
imul
and
xor
imul
jae
mov
pop
mov
leave
sub
jae
xlat
lock
aaa
jns
or
add
outsb
or
aaa
jmp
mov
add
push
int3
and
cmpsb
push
lds
xor
mov
lret
lds
xchg
daa
cmpb
pusha
stos
movsb
jae
xchg
push
cmp
and
xchg
cs
xchg
fsub
cmp
int3
sbb
rorl
push
cmp
dec
and
or
dec
adc
lahf
lcall
and
push
jbe
cmpsb
inc
loope
popf
cld
or
out
sub
fwait
pop
leave
cmp
loope
pushf
push
sub
cltd
fidivrs
incb
adc
icebp
push
inc
adcb
sbb
outsl
adc
int3
dec
xchg
push
adc
dec
sub
mov
jg
or
fwait
leave
pop
faddl
repnz
shll
subb
jge
jl
lods
mov
xlat
and
mov
ss
inc
sarl
adc
cmpsl
lret
fld
mov
mov
xchg
into
popf
lahf
hlt
cmc
repnz
add
dec
sbb
fisttpl
loope
jbe
xchg
adc
mov
lods
pusha
test
repnz
out
je
cli
into
xchg
dec
xor
push
mov
inc
repnz
shl
jp
cmc
push
out
lods
fwait
pushf
loopne
mulb
notl
adc
pop
imul
leave
cmp
and
lock
cld
push
daa
xlat
mov
push
andb
sbb
cs
fnstenv
nop
dec
out
repnz
ficomps
pop
fld
cmpsl
xchg
les
into
repz
push
repz
lea
fs
jle
xor
sbb
sub
pushf
push
and
xchg
or
shl
inc
adc
idivb
inc
and
jb
pushf
mov
je
outsb
cli
jecxz
adc
testb
std
fisttpll
dec
mov
outsb
mov
cmpsl
incb
pop
pop
jge
xchg
mov
jae
lock
mov
mov
imul
loope
es
cmp
adc
dec
xchg
stc
out
cmpsl
xchg
push
icebp
jecxz
test
scas
inc
or
dec
movlps
push
fsub
mov
lahf
pop
pop
rol
out
lahf
outsl
imul
test
repz
pop
sbb
sub
clc
ljmp
ljmp
and
mov
fcoms
fbstp
rcpps
add
xor
test
btr
xor
dec
pop
pop
out
fsubrs
mov
in
sub
pop
pop
mov
stos
and
mov
or
adc
aaa
addr16
decl
mov
aam
xor
popf
dec
ret
mov
ds
xchg
mov
pop
add
mov
cltd
in
out
out
mov
mov
dec
sysexit
mov
jno
sub
mov
mov
in
scas
xor
fadd
cmp
or
scas
divb
jp
and
jo
pop
dec
mov
data16
jle
loopne
in
xor
pusha
and
jb
pop
xor
xchg
cs
subl
out
dec
push
popf
in
pop
mov
pop
jl
stos
aad
dec
and
xor
jnp
xor
dec
push
push
pop
sbb
mov
mov
dec
enter
pop
movsb
pop
fdivrp
sbb
dec
jae
scas
inc
jne
xchg
push
dec
xor
xor
fidivl
add
cmp
xor
imul
add
shll
rol
pop
jb
rcrb
mov
pop
cmovl
mov
mov
arpl
xchg
jbe
enter
adc
sbb
imul
test
mov
add
in
ror
or
push
push
test
cmp
jo
dec
and
fdivrp
jae
sub
cmp
clc
mov
cmpsb
fnstsw
cmp
insl
push
xor
daa
xchg
pop
fistpll
aad
or
rcrl
mov
mov
and
push
push
lahf
scas
gs
sub
into
or
xor
mov
lret
lret
mov
rclb
or
sahf
push
xchg
mov
into
sub
sub
inc
mov
outsb
sub
push
adc
int3
add
push
andb
int3
xor
fsubs
xor
fwait
sbb
int
mov
cwtl
pop
call
pop
push
repnz
sbb
or
les
pop
add
dec
mov
fimull
ret
and
pop
push
ss
add
aaa
sbb
divl
xchg
lret
in
sarl
mov
out
mov
dec
mul
into
add
cmc
push
fldt
xor
pop
outsl
ss
loop
jno
stc
sbb
add
mov
pushw
or
lock
cmp
out
mov
add
xor
dec
or
sbb
gs
adc
out
scas
ja
push
mov
daa
imul
sub
js
iret
cmp
leave
mov
mull
leave
mov
int3
mov
pop
movsl
pop
jg
jne
mov
dec
cli
mov
inc
dec
not
fyl2xp1
jbe
les
mov
notb
inc
call
std
sbb
rol
aad
call
mov
outsl
pop
and
push
movsb
aas
loop
jns
test
pop
dec
filds
fninit
insl
dec
scas
notb
dec
dec
cwtl
xchg
pop
mov
shll
lds
cmpl
dec
mov
jne
lock
adc
mov
push
int3
aam
xor
es
repnz
insl
popa
je
dec
mov
push
cmpsl
xchg
stos
xchg
mov
mov
xlat
sbb
mov
inc
stos
and
ss
mov
sub
sti
movsl
ret
aaa
add
je
and
notb
lret
push
xchg
popa
pop
lods
xchg
mov
pop
adc
mov
call
adc
pop
cmp
mov
xlat
jb
pop
dec
ja
push
test
mov
xchg
and
sbb
add
stos
adc
add
push
out
ljmp
cmp
xor
xor
mov
xorl
fs
jle
dec
mov
xchg
int
pop
cmp
lock
repnz
jne,pn
mov
mov
inc
dec
out
movsl
xlat
dec
bound
loop
in
aad
xchg
in
ret
out
scas
in
sub
imul
addr16
cwtl
out
jp
push
jnp
adc
sub
sub
cmp
mov
dec
xor
mov
clc
xchg
stc
inc
scas
cmp
inc
push
mov
in
or
in
push
jl
push
xchg
lock
cmpb
push
pop
xchg
push
cltd
pop
pop
adc
sahf
jae
rcrb
pop
adc
divb
inc
js
je
inc
pop
in
rclb
inc
mov
dec
xlat
xchg
xchg
in
outsb
sbb
aad
imul
scas
fidivs
rol
fbstp
test
mov
jp
lods
pushf
out
leave
sbb
pop
mov
arpl
pusha
gs
int
jge
aas
loop
in
add
addr16
or
fdiv
int3
mull
mov
xchg
sub
mov
or
scas
mov
test
movsb
mov
mov
cmpsb
pusha
add
in
push
pop
ror
add
daa
xchg
pop
jo
or
xchg
mov
ds
sbb
test
test
xchg
lahf
int
das
push
add
test
or
add
push
leave
cmp
pop
xor
ror
pop
inc
loop
push
repz
ficomps
cmp
outsb
mov
shlb
xchg
sub
add
das
add
daa
inc
xor
int
sbb
into
int
xchg
inc
sub
test
mov
fsts
and
shrl
or
sahf
jg
outsb
test
push
dec
sbb
test
aam
mov
js
mov
or
and
lret
and
aad
mov
mov
divl
push
icebp
lret
mov
rclb
jmp
into
arpl
jbe
sbb
fdivs
sub
mov
loop
xchg
rcll
cmp
mov
hlt
adc
shll
scas
int3
lods
cs
mov
xor
or
xor
daa
xor
cmp
cmp
scas
pop
sub
cmp
sbb
mov
pop
xor
mov
jge
pop
icebp
inc
add
dec
xchg
xchg
sbb
push
jb
sbb
ss
sahf
sub
jg,pn
dec
cmp
aaa
xor
cs
lret
sub
nop
incb
dec
pop
mov
fnstenv
ljmp
mov
shlb
vphaddwq
pop
cmp
adc
xchg
jecxz
test
por
pop
enter
and
and
in
leave
aas
addl
dec
push
sti
mov
add
jecxz
xchg
not
cmp
cwtl
inc
adc
mov
add
frstpm(287
or
mov
mov
fcmovbe
lock
mov
lods
adc
mov
pop
xor
iret
jno
sarl
jecxz
and
insl
dec
mov
popf
cmpsl
xchg
jb
mov
xchg
xor
cld
add
pop
and
sbb
repnz
rcl
imul
inc
aam
int
ret
or
in
out
dec
add
pusha
ds
xchg
pushw
mov
popa
icebp
and
sbb
rolb
xchg
scas
jbe
push
xchg
xchg
js
adc
add
mov
popa
mov
or
sbb
fwait
dec
sub
cmp
sbb
or
pop
mov
cmp
add
bound
insl
jnp
decl
cmc
xor
sbb
or
xor
jb
mov
les
call
ja
dec
dec
xchg
jge
inc
sbb
xchg
or
ret
fcomps
aad
jns
pushl
cltd
mov
arpl
out
test
mov
jns
repz
push
push
lret
imul
or
mov
mov
addr16
inc
mov
xor
out
mov
out
lahf
jle
inc
enter
cmp
dec
mov
xchg
mov
jmp
les
in
jne
out
xor
sub
call
andl
in
sbb
jnp
dec
lea
loopne
rcll
insb
push
jl
in
dec
pop
dec
loope
inc
mov
lea
iret
arpl
and
or
dec
out
inc
cmp
mov
xchg
ljmp
imul
pop
ficomps
adc
iret
rclb
nop
repnz
leave
xchg
xchg
ja
movsl
fdivp
arpl
xlat
jbe
inc
fs
push
mov
aaa
es
or
out
test
sbb
add
outsb
push
push
xor
iret
jge
scas
pushf
jo
and
add
jnp
push
adc
dec
push
daa
lods
out
cmpsb
jecxz
mov
cmp
daa
xchg
out
cmp
mov
jno
pop
inc
jl
add
dec
loop
test
mov
mov
and
sub
in
pop
pop
push
shll
xor
into
inc
mov
inc
es
js
dec
pop
pop
xchg
push
add
sub
push
cmp
or
shrl
std
es
cmpb
inc
lock
orb
test
cmp
push
sbb
data16
imul
lcall
push
mov
mov
test
mov
cwtl
test
mov
inc
cmp
pop
jo
and
mov
fs
lods
fbstp
cmc
shll
mov
loopne
into
inc
repz
loop
pop
xor
out
stc
mov
fs
or
xor
les
lods
adc
ret
sub
jae
in
and
push
mov
orl
pop
mov
sub
and
vmovhlps
mov
imul
shrl
sbb
lods
jae
xlat
jne
add
jne
shlb
mov
lea
imul
add
fimull
addr16
inc
outsl
arpl
les
leave
mov
cld
fs
lea
imul
sti
mov
adc
gs
pop
imul
inc
mov
push
and
xchg
pop
dec
int
bound
imul
xchg
notb
out
ret
std
shlb
cwtl
cld
loope
mov
mov
and
fmuls
mov
mov
movsb
loope
jl
clc
das
mov
mov
mov
and
into
cmp
insl
das
out
dec
adcb
cmpsl
xchg
mov
scas
icebp
push
js
lret
cltd
sub
mov
and
je
insb
lahf
nop
pop
cld
push
xchg
sarb
push
sub
addr16
push
push
aam
cmpsl
in
sbb
fwait
add
ljmp
xor
mov
and
xchg
cmc
insb
ficoml
orb
lahf
fildl
xchg
xlat
lret
cltd
aad
adc
jge
xchg
leave
mov
cmp
pop
ror
incl
stos
out
cmp
hlt
and
in
add
mov
xor
add
lret
int3
jno
jle
iret
mov
pop
fiadds
pushf
add
push
ja
xchg
cmp
mov
movl
sbb
xchg
dec
mov
push
cmp
arpl
fsubrp
mov
in
push
fcoms
gs
sub
popa
loop
rep
lahf
jp
ret
xchg
mov
sub
mov
push
rolb
jo
mov
les
ja
repz
jo
xchg
rol
aad
mov
imul
cmp
inc
popf
pop
cmc
lcall
gs
stos
cs
aad
out
xchg
mov
pop
push
push
jnp
jle
scas
sbb
adc
adc
sahf
iret
addr16
sub
clc
negb
dec
push
inc
xchg
push
xchg
jae
push
mov
jle
in
or
enter
mov
sub
sbb
push
xor
imul
vpmaxsw
shrb
or
push
push
xchg
leave
or
hlt
lock
arpl
loope
jbe
xor
jge
dec
fistpl
pop
add
movsl
xor
int
ja
lods
mov
xor
sub
and
mov
cmp
lcall
movsb
lahf
out
push
jbe
shll
and
daa
xchg
hlt
push
cmp
ret
js
jl
movsb
fmuls
js
ds
jbe
cmpsb
shll
fildll
push
cmpsb
dec
adc
mov
mov
or
mov
js
pop
aaa
pop
lds
and
mov
sub
inc
jo
mov
arpl
rcrb
pushf
lahf
dec
rolb
jno
lret
add
das
push
xor
adc
and
cmp
lcall
sbb
loopne
sub
jne
sahf
lds
test
mov
in
aaa
addb
enter
xchg
lret
sub
test
stc
sbb
push
jmp
adc
mov
jnp
into
sub
cwtl
cmc
test
je
outsl
shrl
dec
loop
dec
mov
aas
adcb
test
stos
jo
cmpsw
dec
mov
mov
in
out
adc
cli
lcall
cmp
pop
orl
adc
scas
loopne
push
lcall
pop
xlat
adc
adc
adc
push
sub
in
in
call
push
aaa
sub
mov
or
and
cs
stos
fwait
aad
inc
pop
nop
mov
pop
dec
pop
dec
pop
inc
andb
sahf
mov
cli
repz
jno
jl
rorl
test
xchg
pop
jmp
lea
pushf
js
jmp
push
push
pop
push
adc
xor
addl
cmp
mov
mov
outsl
je
mov
jecxz
mov
pop
push
fld
cwtl
mov
push
mov
sar
mov
outsb
mov
fildl
xchg
mov
in
jnp
pop
lock
xchg
comiss
mov
jmp
and
mov
out
sub
cld
insl
push
cmc
mov
jge
test
xchg
mov
mov
aas
negb
lret
or
or
mov
sbb
sub
lahf
aam
outsl
jno
in
movsl
push
push
out
fstl
pop
call
ljmp
mov
mov
xchg
mov
cmp
jp
dec
dec
adc
iret
add
cltd
or
fwait
test
mov
xchg
dec
out
dec
sti
je
test
pop
in
xchg
imull
pop
or
scas
stos
fisubs
inc
push
xchg
mov
repnz
or
mov
xor
call
lods
mov
and
inc
cmpsl
xor
mov
jle
jnp
sub
pop
outsb
or
dec
inc
fwait
out
xchg
cmp
je
jne
pop
popa
mov
fidivl
out
inc
xchg
lock
aaa
jns
add
addr16
cmpsl
xchg
shr
cs
sbb
xlat
or
addr16
jp
or
mov
test
mov
shrl
in
outsb
pusha
pusha
mov
neg
add
inc
jmp
pop
jnp
subl
xor
add
add
pop
sub
je
scas
jg
test
adc
and
iret
cmp
or
das
inc
mov
push
xchg
inc
adcl
inc
rclb
fiaddl
and
cwtl
lret
sbb
rorb
ficomps
stos
lds
ror
arpl
cmpsb
jl
leave
jg
outsl
hlt
cmp
arpl
xchg
jbe
xchg
jb
dec
and
sbb
or
sbbb
pushf
pop
fistl
push
xor
sysexit
fisttps
jo
jo
pop
repnz
cmp
cmpb
dec
in
jmp
mov
enter
daa
xchg
test
mov
std
or
push
dec
shr
ds
mov
movsl
lods
ljmp
lahf
sub
int3
test
insl
dec
or
lret
rorl
stos
into
in
je
or
push
cmp
les
inc
sub
imul
dec
sarb
inc
adc
mov
jb
test
jb
add
adc
xlat
jmp
push
and
int
sar
add
in
pop
cli
push
addr16
add
ficoms
scas
sub
inc
or
jbe
mov
xor
jg
pop
adc
std
jecxz
mov
cmp
and
mov
in
das
jg
xchg
or
and
jae
cmp
hlt
rcll
xchg
sarl
sbb
fisttpl
into
or
std
cmc
jo
lret
outsl
mov
add
stc
imulb
pop
fs
jae
data16
lods
jecxz
add
jno
ljmp
mov
cmp
or
or
mov
sub
es
pop
pop
cmp
stc
lret
cmp
xchg
loopne
adc
mov
les
adc
mov
xlat
repz
xor
pop
aas
adc
js
sti
mov
fsubrs
xor
adc
pop
xor
sub
inc
xchg
lahf
sbb
sbb
les
pop
add
or
lea
and
call
stc
or
pop
pushf
ljmp
test
fisubl
pop
mov
fiadds
sahf
push
xlat
push
in
pop
mov
jb
in
dec
mov
negb
inc
cwtl
jb
outsb
mov
test
xchg
push
outsl
sbbl
rolb
mov
fs
xor
test
dec
aad
mov
inc
mov
ret
shrl
es
movsb
jbe
std
out
dec
js
leave
cmpsl
xchg
fistpll
icebp
push
lea
cld
xchg
lret
ja
sub
xor
pop
cmp
aam
loop
adc
jb
cmp
push
ds
jae
lret
add
adc
adc
xchg
and
ljmp
in
xor
mov
inc
mov
ss
addl
ucomiss
add
int
test
xor
dec
bound
xchg
stc
jmp
sarl
xlat
pop
mov
dec
stos
int
ficomps
cmp
add
mov
imul
lds
or
and
mov
fiaddl
pop
add
ja
mov
dec
outsb
sbb
inc
loope
pop
or
dec
xor
jle
sbb
or
imul
leave
bound
fistpll
std
push
in
mov
xchg
and
jle
imul
sub
push
dec
cmpsl
addr16
push
push
jp
add
mov
mov
cltd
jle
add
addr16
sub
jnp
and
push
jmp
and
push
movsl
push
mov
xchg
mov
inc
dec
rcll
jmp
fisubs
sbb
lea
lea
subb
and
adc
lahf
sub
ret
negl
or
inc
lods
add
jae
sub
inc
test
fisubrs
and
mov
fnstcw
out
es
sbb
and
imul
xor
sti
xor
jae
sub
fstps
hlt
xchg
mov
jbe
push
jge
loope
sbb
cmc
inc
aaa
arpl
jg
mov
scas
add
xchg
int3
mov
ret
inc
push
pop
rcr
cmpsb
adc
jo
pop
in
scas
cmp
cmp
or
shll
adc
lock
jne
mov
cmp
adc
jno
cmpsb
in
jl
imul
ds
jle
movsl
mov
ljmp
cltd
je
dec
and
in
or
loope
cmp
mov
pop
rorl
js
xor
pop
inc
pop
push
push
push
int3
sub
push
sbb
sbb
pop
adc
adc
pop
sbb
sbb
mov
add
mov
xor
divb
int
inc
cmpsl
sub
stc
pop
jns
rcrb
jge
fmull
iret
and
or
test
mov
orb
jg
cmp
mov
jmp
out
cmp
dec
ss
and
ds
push
divl
xchg
ror
out
add
sub
lcall
clc
into
out
fcmovu
cmc
aaa
inc
lea
xchg
daa
sub
loop
in
stc
lods
jns
fs
mov
mov
lret
mov
in
out
jl
cli
add
in
fsubs
cmp
lea
inc
in
gs
mov
je
mov
mov
imul
push
gs
lahf
call
mov
xlat
xor
sub
push
pop
mov
jecxz
sub
arpl
aad
cmc
loope
push
mov
inc
test
int
or
mov
mov
in
repz
mov
movb
or
jnp
push
js
pop
pop
dec
negb
pushf
push
sbb
jmp
pop
inc
pop
push
punpckhdq
cmpsb
mov
repnz
std
stos
mov
dec
xor
jbe
sub
lcall
shlb
push
dec
cwtl
sub
mov
lcall
xor
mov
je
mov
pop
push
lock
das
sub
cmp
sti
ss
and
dec
lods
sarl
rep
insl
in
adc
cmpsl
nop
mov
mov
in
inc
aas
cld
mov
xchg
lret
out
mov
mov
pushf
and
cmp
push
shlb
out
add
sbb
les
push
lock
in
and
xchg
bound
out
dec
mov
mov
out
dec
insb
adcb
dec
mov
iret
jmp
int
dec
cltd
jp
data16
push
xchg
xchg
nop
dec
leave
ja
test
leave
out
xchg
mov
rcl
mov
pop
pop
in
les
ffree
bound
fsts
or
sbb
pop
or
sub
xor
scas
and
rolb
sub
xchg
xchg
push
ja
or
daa
inc
js
xchg
or
and
dec
popa
dec
test
pop
add
add
pop
bound
sahf
iret
in
orb
js
out
add
sub
push
bound
lock
jp
mov
mov
or
mov
mov
sub
fldenv
les
filds
int
dec
es
xchg
pop
add
mov
popf
into
cmp
push
shl
cmp
xor
sub
stos
scas
inc
sub
push
cld
fistpll
fsubrs
sbb
test
push
pop
sub
inc
mov
imul
mov
xchg
inc
adc
cmp
mov
fisubrl
xcrypt-ctr
cmpsl
sbb
dec
jge
cwtl
inc
out
movsl
dec
dec
lds
addr16
mov
dec
imul
insl
sbb
arpl
add
add
sbb
dec
cmp
jle
xchg
add
jbe
mov
pop
cmp
mov
cli
and
xor
cmp
jae
sbb
cmp
cltd
movsb
inc
lret
arpl
dec
cmpsb
out
movsl
out
xlat
pop
bswap
jo
mov
cmp
in
mov
jb
jl
mov
sahf
sbb
movsl
mov
pusha
push
lahf
push
pop
inc
test
add
lret
push
dec
add
js
push
orb
push
dec
psraw
mov
cmp
cmp
jle
mov
shr
push
fimuls
mulb
push
lea
xor
aas
push
sub
out
sub
loope
pop
clc
and
das
push
cld
out
out
xor
dec
sub
or
sub
adc
pop
mov
xchg
jmp
pushl
sbb
sarl
cltd
pop
push
div
sub
rol
cli
mov
test
gs
into
sarb
out
xor
sahf
stc
outsl
jo
mov
stc
fs
xchg
fs
out
adc
mov
movsl
mov
ret
cs
testb
adc
xor
loop
or
rolb
ljmp
loopne
cmpsb
pusha
pop
sarb
sbb
pop
adc
adc
add
pop
std
xchg
bound
sbb
cltd
mov
sub
pop
mov
dec
out
in
adc
testl
js
xor
mov
stos
xor
les
push
or
idiv
sbb
notb
ret
negl
adc
adc
pushf
ljmp
pusha
pop
test
rolb
movsb
mov
pushf
sarb
jb
pop
add
test
and
jecxz
das
into
mulb
inc
xchg
outsb
imul
lock
ja
or
test
fcmovnbe
pop
test
shlb
and
or
mov
mov
cmpsl
and
cltd
cmp
or
es
adc
jns
dec
outsb
stos
mov
adc
mov
les
cld
fsubrl
push
mov
aas
mov
mov
js
not
mov
jno
call
sbb
push
mov
pushf
fisttpll
cs
fildl
mov
popa
fs
ljmp
sbb
scas
cmpsl
les
fsubrl
paddsb
add
push
or
lahf
inc
gs
clc
popl
xor
dec
test
pop
or
sbb
and
shll
xor
lds
cmpb
add
hlt
mov
jmp
xchg
xor
daa
or
nop
dec
mov
adc
xor
push
or
jmp
daa
inc
packssdw
in
jl
stos
dec
inc
es
loop
pop
mov
and
fildll
bound
jg
jns
jecxz
in
mov
jge
jno
sbb
and
or
out
inc
mov
mov
hlt
mov
adc
jle
repz
pusha
pop
es
icebp
fistl
jge
adc
adcl
push
inc
jae
popf
cmc
lds
push
adc
stos
cli
sub
sub
mov
push
imul
mov
or
jecxz
add
inc
scas
adc
pop
push
aas
inc
ret
jae
adc
inc
mov
cltd
push
mov
out
pop
pop
lahf
xchg
popf
sbb
push
inc
imul
adc
dec
jnp
lds
or
jo
imul
lahf
xor
sbb
lds
adc
jbe
jno
jge
or
sbb
xchg
loope
or
jno
pop
add
jo
pop
push
jp
xor
xchg
push
mov
not
out
and
jl
cmp
fidivs
push
mov
jg
jb
jne
mov
mov
out
cmp
jge
jno
arpl
jl
jge
dec
or
out
movsl
ret
and
loopne
lahf
xchg
push
repnz
fisttpl
cmp
bound
add
adc
test
in
xchg
js
pop
push
pop
shll
loope
add
pop
cmp
stc
outsb
loope
xor
leave
jg
sbb
pop
sub
iret
sbb
or
adc
push
sub
inc
sub
and
ja
cmp
push
test
mov
stc
sahf
push
dec
cltd
test
cmp
addb
js
adc
mov
iret
pusha
jbe
jae
add
mov
jmp
mov
divl
nop
lret
rcrl
mov
sbb
mov
xor
in
outsl
dec
push
jae
cmpsb
stc
sbb
lods
fs
scas
jnp
out
loopne
mov
sub
cwtl
ret
add
out
hlt
lret
cli
data16
xor
or
or
imul
enter
ret
pop
loopne
jmp
pop
out
in
adc
mov
jns
pop
adc
dec
aam
popf
mov
mov
mov
cmp
cmp
sub
jae
mov
pop
mov
pop
mov
sbb
xchg
icebp
adc
jg
fnstcw
cmpsl
xchg
sbb
xchg
mov
popf
lea
shr
jno
inc
jbe
cs
mov
aad
dec
das
push
pushf
stos
bswap
jmp
movsl
pop
pop
lcall
inc
sub
aas
cmp
jmp
dec
and
dec
je
inc
mov
mulb
push
std
adc
cmpsb
cltd
mov
mov
mov
jmp
loopne
mov
outsl
outsl
adc
mov
divl
inc
pusha
popa
das
out
lea
imul
push
rcrl
and
xor
xchg
insl
mov
xchg
dec
imul
loope
fwait
sub
lret
les
or
jae
pop
pop
xchg
cmp
rcrb
movsl
sub
lock
mov
mov
lcall
ret
xchg
loopne
ljmp
movsb
lods
je
inc
mov
adc
xor
mov
pusha
cmovnp
arpl
stos
out
out
sub
faddl
xchg
or
test
mov
xchg
inc
repz
mov
stos
lcall
add
sets
incl
pushf
mov
or
cmc
pop
xor
jp
aad
push
mov
or
stos
scas
ja
dec
pop
dec
inc
or
cmpsb
or
or
dec
or
stos
das
jb
daa
hlt
lret
pusha
mov
mov
out
mov
data16
lret
aam
xchg
adc
xchg
or
mov
sub
dec
inc
je
out
add
jp
das
mov
mov
mov
pop
dec
in
ljmp
jle
mov
jmp
xchg
sbb
pop
mov
popf
sbb
jnp
icebp
hlt
les
mov
stos
insl
mov
and
mov
jnp
repz
scas
or
push
mov
cmc
ret
pop
xchg
hlt
lea
add
inc
lea
or
das
xchg
xchg
inc
ss
jle
push
daa
iret
xchg
hlt
dec
jecxz
add
imul
fsubrp
sahf
push
lds
idivb
repnz
leave
pop
mov
hlt
addr16
arpl
sub
mov
cmp
add
xor
mov
pop
daa
add
int
xchg
mov
push
rol
xor
icebp
out
pop
scas
and
and
movsb
push
add
mov
in
movsl
popf
pushf
enter
daa
mov
icebp
cmp
xor
js
jl
inc
rorl
pop
xchg
mov
popa
and
jae
lahf
cmpsb
dec
adcl
cmc
test
cltd
daa
outsl
inc
call
cwtl
pop
pop
inc
adc
pusha
dec
repnz
add
popf
push
and
sub
adcb
and
stos
or
movsb
mov
jno
cld
cmp
test
add
subb
adc
adc
cs
js
lret
sub
xor
pop
testb
fwait
xchg
lds
cmp
sub
sahf
hlt
sub
fildl
push
repnz
fldcw
bound
and
ss
mov
cmp
movups
lret
pop
shl
imul
mov
cmc
mov
dec
xor
stos
mov
push
into
aam
sarb
xor
xor
leave
aam
jg
mov
lds
adc
cli
cltd
sbb
pop
push
push
cmp
or
xor
ja
movl
adc
mov
imul
add
sub
rcll
mov
test
rcpps
xlat
out
mov
daa
fnstenv
mov
and
sar
jo
mov
aad
jmp
das
dec
repnz
inc
loope
and
mov
loop
sarb
inc
repz
push
shll
in
xor
pop
push
jno
pushf
push
inc
xchg
jmp
jno
pop
cmp
adc
inc
inc
inc
xchg
aas
fisubl
mov
je
mov
jecxz
fwait
lods
imulb
inc
sub
jg
xchg
mov
jno
ja
push
pop
dec
nop
fldt
mov
xchg
push
lock
add
das
adc
mov
push
mov
pushf
sub
shrl
xchg
and
cltd
fwait
out
dec
fs
mov
mov
jb
sar
xor
lret
xor
add
dec
dec
mov
pop
mov
jg
cs
aad
aam
shll
cmp
clc
std
mov
adc
arpl
popa
xchg
stc
ret
lods
sbb
jne
cli
xchg
lahf
data16
xchg
loop
rsm
and
push
lret
pop
push
ja
mov
test
das
bound
sub
xchg
pop
mov
aad
xchg
pop
pusha
and
stc
cmp
sub
imul
xchg
dec
sbb
mov
cltd
inc
pop
mov
in
cltd
pop
ja
sub
dec
cmp
adc
cmp
pushf
cmpsl
fiaddl
sbb
mov
jne
fwait
push
mov
pusha
jo
popf
push
stos
bound
sub
scas
pop
or
push
ficoml
xchg
pop
dec
cmp
sub
inc
push
adc
jp
cli
movsl
mov
das
cmp
fstl
les
mov
in
inc
push
fistps
pop
jmp
push
mov
xorl
push
lret
popf
inc
xchg
mov
and
and
push
insb
cmp
mov
pushf
push
shrl
adc
mov
ret
into
pop
int
xchg
inc
fmuls
jae
or
nop
cmp
or
stos
xor
inc
mov
xor
shrl
sbb
mov
imul
fimuls
je
rclb
mov
inc
push
repnz
shlb
hlt
mov
fsubs
shr
lret
jge
les
mov
lret
push
xorl
inc
popa
sub
pop
xor
push
mov
or
scas
mov
out
and
cmp
jl
jo
loope
je
push
test
in
mov
fmul
popa
jns
daa
lea
mov
mov
enter
jmp
fstpt
stos
push
push
and
lahf
lds
inc
test
fs
inc
ja
mov
pop
insl
push
mov
pop
aas
sbb
push
push
imul
xchg
movsb
mov
outsb
cmpsl
dec
adc
jg
adc
movaps
mov
sub
push
xor
push
int
das
int3
sub
popf
pop
jne
push
lcall
mov
sub
add
sbb
xorb
dec
mov
lcall
gs
and
jae
cmp
lret
imull
adc
mov
cmc
rorl
xlat
sbb
xor
jnp
mov
xor
jge
outsl
or
orl
cmp
adc
scas
lods
mov
rcl
out
jl
cli
int3
arpl
xor
mov
or
stos
xchg
push
jp
gs
loopne
mov
pop
sub
adc
mov
mov
and
xchg
stos
repz
sbb
dec
out
xlat
cs
outsb
sub
sub
mov
sti
pop
stos
cmpsl
cs
pop
aad
add
dec
push
fdivrp
inc
hlt
ret
or
call
ss
xor
xchg
sti
lea
out
clc
call
je
pop
sbb
and
add
pop
loopne
bound
lods
jle
pop
xor
pop
jb
inc
dec
dec
push
mov
je
jge
jecxz
aaa
jge
jmp
xlat
std
arpl
rcrb
ds
lret
orl
std
test
pop
mov
aaa
mov
sbb
stc
mov
or
xlat
jge
and
outsb
movsl
shl
add
cmp
movsb
dec
pop
jmp
cmpsl
mov
mov
icebp
dec
fwait
stos
cld
pop
aas
outsb
lret
mov
test
and
test
push
and
add
loop
dec
xor
ret
ds
fldl
nop
xchg
xchg
pop
push
les
pop
mov
mov
fcoms
dec
xchg
out
sbb
wbinvd
popf
adc
sbb
cltd
push
xchg
and
push
insl
xchg
mov
test
xchg
pop
xchg
adc
xchg
jmp
or
fisubrl
imul
add
push
incl
mov
or
xor
sub
mov
fdivrl
jge
sub
sbb
ja
xchg
std
dec
sub
mov
data16
or
nop
jne
cmp
mov
push
movsb
out
jl
jb
jecxz
lcall
hlt
fstl
cli
ss
sub
jp,pt
addr16
adc
lahf
xorl
pop
lock
jle
pushl
in
add
fistpll
fucompp
bound
inc
xchg
sbb
mov
lea
fdivrl
into
cmp
stos
push
pop
shlb
in
insb
inc
lock
jnp
dec
in
scas
rol
call
adc
iret
add
xchg
ret
jle
add
mov
jae
insl
out
inc
xchg
les
and
jno
fidivl
xchg
mov
sub
push
jae
fidivs
ret
sahf
mov
gs
cwtl
mov
insb
hlt
std
inc
frstor
incl
jge
mull
sbb
sbb
or
cmpsl
add
xchg
call
pop
cmc
jns
push
xchg
xor
cmpsl
pusha
mov
xchg
xlat
loopne
call
push
movsb
insb
nop
das
push
lahf
mov
sti
dec
sahf
in
jae
mov
daa
mov
or
jl
push
rorl
lods
aas
ds
test
movsl
xlat
cmpsl
aad
not
movsl
lahf
in
inc
push
imul
rclb
das
or
push
pop
mov
pop
xchg
or
and
jle
adc
into
xchg
loope
jle
sub
cltd
pop
cmp
fnstcw
adc
pop
jb
cmp
andb
stc
sbb
in
movl
mov
test
cwtl
and
sub
xlat
aam
hlt
rep
lcall
cmpsb
fsub
cmpsb
mov
jo
rcrl
mov
lods
pop
jg
aad
mov
or
sub
and
test
push
fadds
mov
pop
or
sub
pop
ret
sbb
xor
mov
pop
mov
stc
inc
lahf
add
in
adc
sbb
data16
call
mov
push
cli
cmp
xor
sti
mov
or
inc
mov
in
loopne
xor
subb
adc
loope
add
xchg
outsb
pop
mov
cmp
clc
mov
or
ljmp
into
lcall
cmp
xlat
dec
mov
ss
pop
xor
fstps
lret
or
repz
jge
adc
lods
lea
popf
sbb
repz
int
into
mov
arpl
push
pop
pop
andl
inc
loop
dec
inc
jns
js
sbb
int3
dec
test
jne
mov
sbb
imulb
fyl2x
std
or
mov
mov
mov
sub
xor
mov
ja
sub
lock
mov
scas
mov
mov
and
pop
test
es
dec
push
dec
pop
jle
cmpsl
mov
stos
icebp
and
xchg
cld
mov
or
adc
mov
pop
js
mov
hlt
mov
rcl
xlat
adc
cmp
ss
sti
jl
int
cld
push
mov
pop
mov
xchg
popf
arpl
ljmp
icebp
lods
mov
arpl
cmp
enter
mov
add
clc
cltd
lea
test
mov
mov
xchg
adc
test
jge
xchg
and
fmull
pop
mov
fisubrs
or
es
pusha
xor
fcomip
push
xor
lock
pop
das
mov
pop
mov
mov
arpl
ja
andb
imul
or
mov
lret
dec
rclb
out
mov
in
pop
into
lahf
bound
pop
jns
pop
push
in
arpl
xchg
cli
cmpb
jge
stc
sub
cmp
addr16
jg
sbb
cwtl
mov
int
inc
jle
inc
sti
in
and
lret
fdivs
mov
pop
xchg
cmp
arpl
push
push
ss
mov
or
iret
andl
mov
lods
jnp
pushf
push
xor
jp
pop
imul
pop
fisubl
ret
movsl
pop
cmp
jae
adc
inc
xchg
ret
inc
or
push
mov
test
xchg
stc
mov
sbb
jb
imul
shrl
sub
xchg
mov
jmp
cmp
shr
hlt
dec
xchg
subl
fimuls
mov
or
ljmp
and
mov
imul
jo
aaa
mov
and
loop
ljmp
push
out
fsubr
cmpsb
jle
and
pop
test
enter
daa
mov
push
cmp
or
fnstsw
jmp
leave
jnp
ds
es
fisubs
push
lahf
add
fistl
jl
test
cli
std
pop
inc
xchg
xchg
xchg
and
pop
mov
sahf
adc
mov
xor
lret
cltd
sbb
bound
outsb
insl
fdivp
adc
xor
xorb
push
add
jo
xor
dec
inc
int
std
lds
pop
xchg
pop
jae
test
scas
inc
and
mov
push
sahf
fldl
jge
in
jg
jg
int
mov
stos
xchg
mov
lahf
jo
sti
aad
and
push
fstpt
inc
jbe
imull
std
shll
test
into
inc
pop
cmc
loope
insb
xor
mov
push
stc
test
push
adc
sti
cmp
jmp
lret
mov
adc
cli
xor
add
loop
lds
clc
mov
add
cld
inc
add
insl
pop
imul
imul
or
fnstcw
xchg
xor
rcrl
adc
lods
dec
sub
into
pop
in
gs
sub
jge
pusha
cs
or
nop
mov
inc
sbb
movsb
fsts
faddp
repz
repz
push
stc
scas
call
jb
lcall
add
pushf
push
out
jmp
insl
adc
inc
imul
adc
mov
jl
adc
int
je
or
adc
divb
xchg
mov
lret
inc
out
mov
xlat
fwait
mov
adc
dec
sbb
cwtl
fstpt
in
inc
mov
push
lods
lock
imul
mov
inc
jns
and
cmc
rcl
popf
mov
insl
dec
jl
dec
push
movsl
test
lahf
jns
icebp
negl
lret
or
mov
bound
mov
adc
dec
sub
jg
aam
adc
cmpsl
push
cmpb
clc
scas
in
pop
xchg
fsub
pop
ljmp
loopne
and
mov
sahf
sbb
xchg
je
jmp
and
xor
fwait
aam
aas
add
test
jecxz
mov
inc
inc
dec
xor
xchg
mov
push
rcr
loope
pop
popa
hlt
fisubrl
scas
roll
inc
or
jnp
mov
xor
push
sub
cli
ss
xor
jecxz
mov
bound
pop
push
fidivs
or
sbb
and
or
mov
fwait
addr16
dec
mov
push
jne
mov
in
cmp
and
or
scas
in
and
out
out
mov
or
lods
addr16
mov
xchg
push
mov
cmp
addr16
jne
in
cmpsl
lea
negl
cli
jmp
xchg
cmp
test
push
lods
fcoml
popa
mov
adc
popf
mov
icebp
jge
dec
div
stos
cmp
sub
mov
insl
adc
aad
imull
cmpsb
ja
adc
xor
iret
mov
fnsave
jb
ss
stc
cmp
jae
std
add
xor
or
sbb
fcmovu
gs
sbb
cmp
mov
adc
lods
jl
shlb
push
leave
aaa
lcall
lcall
jge
or
sbb
lcall
pushf
lock
xor
xchg
add
gs
adc
pop
push
push
pushf
push
dec
jns
xor
pop
and
scas
push
cltd
pop
and
or
cmp
imul
add
in
inc
leave
popf
enter
daa
mov
movsb
jno
xor
jl
scas
decb
push
sbb
adc
mov
and
and
test
lds
inc
and
std
jecxz
lock
loop
push
js
loopne
pop
cld
shr
push
dec
cmpsb
loope
fsubr
sub
add
loope
sub
adc
adc
negb
orb
sbb
mov
xor
sti
push
cmp
mov
sub
lret
repnz
mov
ss
sub
mov
cmpb
test
data16
into
enter
sbbl
mov
jb
cmp
sti
push
imull
mov
rorl
mov
pusha
test
jg
clc
into
and
ret
cmc
test
mov
adc
hlt
outsl
stos
and
push
fmul
stc
scas
nop
cs
jge
inc
xchg
sbb
mov
cmpsb
pop
cli
gs
xor
inc
rorl
je
jge
mov
out
sub
xor
pop
mov
adc
jo
imul
add
push
xchg
hlt
jge
sbb
sti
ja
xlat
jmp
das
sub
mov
mov
shl
sar
push
cs
add
aad
cmpsb
mov
dec
outsb
fcomip
inc
sub
and
div
mov
mov
mov
fcomps
icebp
scas
adc
xor
push
adc
loop
pushf
add
jmp
dec
mov
inc
lock
scas
jp
aas
push
add
jb
dec
decb
dec
lahf
je
into
sub
and
std
pop
fwait
std
cwtl
dec
fcomip
mov
stos
loop
sub
mov
ror
sub
push
fucomi
add
cmp
add
das
inc
mov
xlat
inc
xlat
mov
enter
in
xchg
ret
enter
and
push
pusha
and
shl
lods
icebp
into
push
dec
cld
fimuls
lret
out
inc
sbb
imul
pop
xor
push
sub
push
ret
test
jmp
es
inc
mov
test
jmp
out
ljmp
hlt
lods
mov
bound
add
pop
xchg
mov
lds
and
cltd
sti
push
cmp
loope
iret
mov
test
xor
sub
xchg
movsl
push
sbb
sbb
xor
subb
in
lds
xchg
add
call
push
or
xor
mov
arpl
and
pop
fstps
dec
push
test
sbb
sub
fwait
xchg
in
inc
dec
xchg
inc
lock
outsb
xchg
mov
into
push
out
sbb
mov
repz
in
cmp
xchg
cwtl
leave
add
and
sub
das
push
mov
jp
das
jl
and
pop
mov
stos
push
mov
in
nop
aas
pusha
add
out
sbb
jp
jb
popf
xchg
jge
rolb
iret
sbb
sbb
rep
lods
fsub
and
inc
mov
jnp
mov
push
in
out
xchg
adc
dec
mov
sbb
dec
sbb
mov
jo
or
cmovbe
lret
xchg
mov
iret
fimull
pop
js
push
adc
ficomps
popf
popf
lds
repnz
sarb
xchg
adc
leave
scas
in
push
hlt
fimuls
sbb
push
ljmp
out
sbb
add
outsl
add
lea
pop
and
push
das
mov
xor
mov
add
and
in
movsb
or
inc
lock
test
mov
dec
adc
inc
cmp
jno
cld
fidivrs
mov
ds
push
movsl
in
sarl
andl
test
nop
fldt
mov
rcl
ret
push
pop
or
mov
mov
pop
cmp
mov
imul
sub
jno
cmp
lds
shr
sbb
sbbb
sbb
or
push
cmp
pop
scas
sub
fwait
pop
jno
pop
lcall
xor
loope
test
sahf
and
jbe
xor
pusha
sbb
enter
mov
mov
mov
int
jb
inc
add
cmp
mov
out
imull
iret
int
jg
fs
rorl
cmpsl
insl
into
pop
mov
cmc
outsl
cmp
outsl
mov
xchg
ljmp
adc
adc
test
lods
add
mov
sar
cwtl
add
nop
add
cmp
inc
or
xor
gs
mov
into
sub
pop
test
mov
fistl
outsb
cld
add
cld
lock
mov
fs
ss
xlat
sub
inc
sub
stos
mov
cmp
sti
fildl
xor
lods
out
hlt
aad
push
in
inc
in
dec
int
push
inc
inc
mov
les
imul
jno
rol
pop
adc
push
pop
dec
jo
std
pop
out
adc
push
fld
pushf
lods
leave
sbb
cwtl
jmp
push
ja
jle
lret
aas
cmc
inc
enter
adc
je
je
out
jecxz
push
jo
testl
test
sbb
cmp
icebp
or
fistpl
notl
and
test
inc
sbb
gs
das
and
jnp
push
xor
and
int3
repz
dec
jge
inc
mov
insl
sbb
nop
dec
dec
scas
call
mov
movsl
cs
cld
or
cmpl
adc
add
sub
iret
fcmovbe
jne
and
jp
push
fstpl
cmp
and
ja
pop
insl
out
mov
pop
popf
lods
negb
mov
idivl
push
fnstenv
jne
jg
cltd
xor
push
in
ret
add
lret
pop
dec
add
mov
xchg
lret
mov
stos
xor
int3
push
cmc
or
add
mov
out
mov
fs
call
jmp
xchg
mov
mov
jae
xchg
out
dec
ja
pop
xor
stc
in
inc
xor
daa
or
mov
pop
dec
jns
lcall
fcmovnu
out
clc
jmp
das
sbb
inc
mov
in
cmpsb
xchg
push
lods
stos
sub
sub
fisubs
pop
sbb
jle
mov
cmp
mov
sbb
xor
mov
pusha
pushf
jo
fistpll
insb
or
ds
jmp
dec
and
cld
push
cltd
lret
push
jge
mov
lret
stos
pop
imul
jmp
dec
insb
icebp
cmp
scas
pop
lahf
mov
xor
lahf
adc
in
inc
leave
cmc
lds
pop
xchg
test
pushf
or
je
or
adc
sbb
inc
mov
fistpl
inc
je
adc
sbb
mov
lret
or
xlat
subb
les
jmp
in
mov
hlt
sub
arpl
dec
dec
jge
test
push
or
enter
dec
int3
out
adc
cmp
adc
shlb
xor
and
fstpt
bswap
jbe
cwtl
xchg
pusha
push
fistpl
cmpsb
pop
cmp
dec
and
mov
ja
xchg
jmp
aad
push
jg
ds
pop
mov
arpl
int3
push
mov
cltd
test
pop
enter
dec
mov
pop
xor
xchg
jp
mov
loope
ret
pushf
sub
mov
cmp
aas
lcall
adc
mov
jbe
outsb
fistpll
add
push
mov
in
adc
inc
adc
xchg
sub
or
cmc
lcall
cmpsl
fmull
les
mov
outsb
jns
or
pop
mov
lret
mov
fistpll
mov
addr16
jno
xor
lret
repz
mov
dec
lea
movsl
cmc
ss
push
sbb
fs
pop
rcll
rdtsc
jl
dec
push
bound
cmpsl
sbbl
push
adc
lret
test
pop
cmp
pop
ret
mov
push
adc
sti
sub
out
pop
adc
add
cmp
lock
xchg
xchg
jp
fs
jno
push
xlat
imul
mov
cmpsb
xchg
ret
sti
mov
shrb
int
aad
pop
aam
sbb
hlt
mov
fsincos
les
dec
repz
das
push
and
lea
push
call
out
subb
stos
repz
push
stc
mov
pop
cmpps
jge
inc
in
sarl
xchg
test
push
mov
dec
popa
xlat
je
push
xor
aas
inc
lret
scas
add
cmpsb
and
cwtl
ror
mov
jo
mov
fisttpl
sub
add
dec
mov
xchg
xor
das
add
mov
push
jmp
mov
roll
sbb
dec
inc
xchg
test
cmp
dec
icebp
jl
jns
xor
mov
mov
ja
cli
mov
jo
outsl
shlb
addr16
aam
pop
pop
or
push
lret
rclb
clc
pop
dec
aaa
xchg
cltd
js
ljmp
dec
lods
popa
mov
out
rorb
mov
hlt
pmulhuw
dec
add
fwait
cltd
imul
mov
scas
mov
inc
cmp
dec
push
das
cmp
rcr
pop
pop
pop
bound
test
cwtl
sbb
addr16
sbb
lcall
push
xor
mov
cmp
imul
cs
mov
stc
jecxz
jo
pop
dec
push
popf
ja
push
mov
in
aam
inc
addr16
fwait
hlt
sti
clc
dec
pop
inc
test
xor
mov
cld
cmp
xlat
insl
adc
imul
nop
in
gs
out
in
insl
sub
and
mov
jp
adc
mov
mov
jle
int
in
mov
pusha
aaa
lret
mov
xchg
mov
mov
xor
shrl
int
mov
popf
sub
shll
xchg
mov
and
call
inc
jnp
mov
shlb
jnp
nop
adc
sti
jl
fmul
test
inc
sbb
add
push
out
mov
jae
push
scas
out
jbe
xchg
push
mov
sbb
loopne
imul
jne
pusha
dec
xor
inc
or
shl
sarl
stos
or
je
dec
arpl
xor
jbe
stos
or
push
hlt
sbb
addr16
fnstcw
aam
int
jae
shll
and
loopne
dec
push
cmc
xorl
scas
out
fstps
cmp
pop
data16
and
scas
push
sub
and
enter
daa
xchg
push
cmp
dec
push
jno
cli
cmp
clc
dec
test
jge,pt
mov
cli
jno
and
lods
pop
lahf
jg
dec
push
mov
test
or
inc
shll
sub
mov
push
adc
adcl
dec
shl
daa
outsb
push
sub
rclb
rol
outsb
stc
jnp
adc
mov
add
addl
cmpsb
add
lock
push
inc
inc
je
fwait
dec
or
dec
or
dec
lcall
push
fdivl
call
push
sahf
imul
aam
pop
nop
cmpl
xor
sbb
cli
mov
mov
ss
mov
les
jnp
test
int
xor
mov
into
int
xor
and
sub
or
les
lretw
pop
push
lods
rolb
das
mov
je
cli
incb
jmp
ds
cmp
and
or
or
jno
gs
jmp
add
ds
out
mov
imul
movb
cmp
push
lret
cmp
enter
addr16
dec
in
adc
mov
aad
into
loopne
clc
imul
mov
inc
data16
fnstenv
jnp
les
std
cmp
and
enter
stos
call
outsb
das
or
pop
pop
adc
xor
jmp
jne
pop
mov
aam
test
inc
add
xor
mov
dec
fsubrs
dec
je
idivb
std
dec
cmp
mov
cmp
sbbl
sub
mov
outsl
int
sbb
jo
nop
aam
mov
imul
push
insl
ljmp
cmpsl
xchg
mov
push
push
ss
pop
enter
cmp
jle
mov
adc
shl
mov
imul
aam
leave
cmp
cwtl
sub
sbb
pushf
cmp
xchg
pop
xchg
fadds
cmc
ljmp
outsb
lods
int3
mov
mov
sub
in
push
popl
test
inc
leave
cmp
mov
cltd
mov
call
inc
and
dec
iret
cmc
cmp
scas
inc
mov
pop
cwtl
in
ss
scas
pop
or
mov
add
out
outsl
cli
js
xor
mov
mov
imul
pop
mov
pop
or
ja
xlat
dec
fistpll
inc
pop
sub
or
and
push
dec
aas
mov
jne
imul
fisttps
repz
ja
xchg
test
out
mov
lret
or
negb
addr16
cli
jp
cmp
mov
outsb
xchg
mov
clc
pushf
cmp
in
mov
fbstp
dec
xchg
mov
or
sub
icebp
xchg
xchg
pop
sbb
popf
push
mov
mov
dec
mov
jle
sbb
sub
push
cmc
jnp
mov
scas
and
ret
adc
mov
cmp
into
ret
hlt
pop
dec
out
sub
xchg
jae
dec
popl
test
pop
pop
inc
cs
xlat
fisubl
ficomps
imul
scas
fiadds
or
popf
rorb
stc
repnz
adc
hlt
mov
pop
jbe
jl
jge
fildl
aaa
cwtl
pop
iret
or
xor
cltd
int3
mov
xor
fsubrs
xor
leave
xchg
push
scas
into
dec
jmp
cmp
mov
pusha
data16
or
xor
enter
daa
xchg
add
aas
das
lahf
jl
push
xlat
dec
hlt
lcall
mov
pusha
xchg
and
aaa
xchg
push
pop
mov
test
icebp
popf
ret
lds
out
out
pop
jle
jle
cmp
mov
loope
cmp
cmc
cmp
inc
js
xor
cwtl
sarb
jb
int
xchg
popa
repz
hlt
add
loop
xor
fistpll
mov
inc
lcall
mov
sub
jl
sahf
or
nop
test
cli
mov
dec
fists
mov
loop
mov
mov
and
scas
cmp
adc
cmp
out
jae
mov
scas
mov
mov
or
into
mov
in
les
xchg
outsl
fisubrl
stc
mov
clc
fs
sti
adc
test
lods
mov
call
out
push
lcall
push
ret
ret
xor
jmp
dec
lock
loopne
fsub
pop
push
subl
imul
je
adc
lock
add
mov
call
fcompl
xlat
out
sbb
mov
pop
fwait
in
jl
int
call
gs
mov
jo
ljmp
fldcw
rol
inc
lahf
repz
pushf
es
xlat
cld
cmpsl
cli
call
in
popa
or
add
cmp
pushf
lods
aam
jmp
popa
push
push
dec
dec
inc
or
mov
aas
rcrb
xchg
jb
in
dec
dec
mov
in
pop
in
std
test
sub
hlt
xor
arpl
cmc
mov
pop
dec
mov
sbb
cmpsb
imul
leave
fnsave
xchg
mov
lock
mov
mov
fsubs
mov
and
cmp
iret
cmp
insl
rol
mov
cmp
push
cmpsl
test
mov
sub
and
stos
mov
arpl
out
call
rol
out
sub
adc
fcmovb
daa
and
rcrb
xchg
push
repnz
aad
mov
sti
lds
dec
adc
aaa
xchg
lea
xchg
xlat
call
lea
mov
ret
xlat
daa
mov
les
inc
jp
dec
ss
and
or
adc
mov
mov
and
add
dec
xor
xor
cwtl
imul
mov
aad
mov
ja
ficoml
rcl
mov
or
cld
dec
fwait
push
sbb
adc
xor
out
xchg
push
mov
scas
add
into
sbb
jbe
mov
aam
enter
pusha
sub
sbb
addr16
pop
jp
movsb
jge
cmpb
mov
mov
pop
lret
mov
es
pusha
insl
mov
fstl
and
mov
push
adcl
jnp
jb
add
lea
push
ljmp
xor
dec
insb
xor
outsb
jnp
lcall
or
iret
cltd
and
ret
xlat
pop
test
inc
xor
testb
add
sbbb
inc
lods
dec
ficompl
movsl
xchg
add
sbb
nop
push
imul
mov
cmpsb
ret
stos
lds
rol
sub
mov
adc
hlt
or
andl
shll
xchg
cmp
aaa
push
cmpb
out
cli
addr16
in
int3
cmpsl
xor
pop
ds
push
mov
mov
jo
loope
scas
lods
ret
mov
cmp
dec
movsb
cmp
push
enter
nop
jmp
in
leave
addr16
daa
test
push
cmp
lret
mov
mov
and
lds
ret
pop
outsl
movsl
or
cmpsb
lahf
mov
daa
fisubrs
mov
addr16
mov
outsl
pop
movsl
xchg
pop
aaa
push
enter
and
xor
sub
jg
cmp
outsb
mov
lds
rclb
push
shrl
popa
andb
push
add
sub
push
dec
repnz
imul
repnz
insl
jbe
lcall
add
lea
pusha
sub
cmp
sahf
scas
test
orb
clc
mov
mov
int
mov
fwait
loop
push
aad
cmp
mov
into
out
dec
loopne
roll
mov
pop
cli
into
xchg
inc
add
mov
xor
out
outsl
add
adcb
cmp
inc
adc
lret
shll
lods
sahf
cmp
mov
cmp
cli
fstpl
xor
mov
cmp
xor
lahf
div
imul
sub
push
loopne
in
pop
and
insb
hlt
imul
outsb
sbb
xor
gs
ret
leave
pop
sbb
and
push
es
sub
push
sbb
out
sub
cmp
insb
aad
fisttpll
nop
scas
inc
outsl
dec
dec
xor
mov
pop
fldenv
fistps
rep
cmpb
push
push
call
insb
sbb
adc
xorb
clc
jp
inc
xchg
js
inc
ss
aas
jno
jecxz
pop
int3
clc
dec
jb
je
cmc
jecxz
test
testb
mov
fwait
push
sahf
cwtl
icebp
mov
mov
test
call
sub
fcmovnbe
outsl
stos
mov
mov
das
popf
rorb
lret
jmp
push
shrl
jecxz
push
stc
jle
mov
mov
cmpsl
test
mov
icebp
add
sub
mov
movsb
lret
sbb
les
mov
mov
int
mov
cltd
je
sub
push
in
aam
lcall
adc
push
fnstsw
loop
xchg
push
mov
ljmp
aam
mov
pop
lods
out
lock
xchg
push
mov
mov
add
test
sbb
or
popf
pop
mov
lods
repnz
shlb
pop
arpl
scas
stos
lock
rcrb
or
mov
cmp
mov
les
xor
out
mov
hlt
jno
mov
addb
ja
bound
inc
mov
mov
fwait
or
movsb
jne
inc
cmpsb
mov
frndint
out
je
lds
sahf
cmp
pop
jge
add
lret
out
arpl
sub
push
push
addr16
push
jp
ret
and
push
xor
mov
dec
pop
jle
mov
inc
pusha
or
fbstp
out
sbb
insl
xchg
je
mov
push
movsl
cmp
mov
mov
stos
jmp
imul
data16
popf
ret
pusha
jnp
inc
cld
scas
jmp
pop
sbb
sbb
sbb
clc
lods
ret
sbbb
lahf
inc
cmp
ret
or
inc
stos
fs
push
sub
add
or
fistl
scas
movsl
jecxz
int3
xchg
jl
dec
outsl
xchg
ffreep
inc
insl
loopne
inc
xor
add
add
dec
hlt
push
mov
test
jnp
jge
pushf
pop
sbb
cld
aaa
push
sub
or
jae
add
insb
mov
push
sahf
push
push
xor
jg
adc
subb
jmp
and
fsubl
pop
jno
cmpsb
adc
stos
inc
pusha
enter
daa
test
int3
jno
add
jl
mov
ds
arpl
iret
cmpl
fcompl
push
add
lret
inc
lret
ret
push
jle
jne
or
int3
xchg
xor
xchg
xchg
pop
jbe
mov
loope
inc
push
sub
adc
cmp
and
adc
xor
xor
and
mov
outsl
xor
ret
sub
call
int
filds
sub
repz
jmp
cmp
das
sub
mov
pop
test
sbb
subb
lret
lret
xor
or
movsl
ss
stos
mov
pop
dec
xor
in
xchg
lret
pushf
rcl
mov
sub
into
jbe
push
cmc
push
add
leave
outsl
in
cwtl
loop
or
stc
clc
les
dec
xchg
lods
test
out
out
cli
xchg
push
jb
ret
cmp
cmp
js
or
xchg
push
decb
insl
cld
loopne
add
je
sbb
xor
aas
ret
push
xchg
xchg
push
sbb
pop
pop
aas
xlat
gs
mov
movsl
xchg
leave
mov
push
ret
pop
sti
inc
test
cs
into
aad
jp
nop
mov
dec
iret
inc
lahf
add
xchg
mov
inc
into
outsl
repz
add
sub
dec
lret
call
jmp
mov
adc
lds
add
pop
fwait
mov
fildl
and
jb
out
dec
cmp
dec
shl
test
testb
std
inc
fstpt
mov
outsb
add
pop
shld
fildl
repz
popa
repz
gs
jl
inc
mov
inc
xchg
stos
and
movsb
test
mov
sub
insl
lahf
mov
dec
xor
and
orl
icebp
fcoms
xchg
lret
mov
cs
xchg
enter
cltd
jge
in
les
sub
int3
or
ret
inc
sti
hlt
push
xlat
mov
xchg
clc
dec
out
xchg
xchg
int
ljmp
imull
lcall
gs
into
push
and
punpcklbw
icebp
cltd
inc
test
test
iret
shlb
dec
mov
test
js
xchg
mov
sarl
push
sbbl
stos
fildll
fiaddl
cmp
call
sub
test
cmp
xor
mov
fwait
mov
cmpb
cmp
scas
dec
mov
inc
sub
pop
fistpl
call
arpl
out
push
dec
jecxz
push
ret
aam
test
mov
int
xchg
jb
sub
adc
ret
dec
sarb
out
mov
lret
mov
das
mov
sub
cltd
jmp
xor
aam
mov
repnz
adc
xchg
aas
enter
rcrb
jl
popf
leave
mov
mov
add
rcrl
insb
or
jge
sahf
mov
popa
push
xchg
out
cld
adc
cltd
fmulp
push
pop
sbb
sub
pop
repz
rolb
jae
sarl
or
js
sub
rcll
gs
xchg
mov
xor
pop
jmp
mov
push
xchg
pop
out
rcrb
mov
orl
js
repz
mov
and
jbe
test
jge
roll
aaa
aad
inc
or
mov
data16
jge
lods
pop
pushf
gs
and
jo
mov
mov
cmp
rorb
xchg
push
sub
lahf
enter
daa
and
cmp
movsl
idivb
mov
inc
jg
or
movsl
push
sub
push
add
stos
inc
test
push
push
jecxz
or
push
adc
mov
jmp
mov
loope
andb
jle
cmp
pop
rclb
or
or
loope
add
mov
xor
popf
imul
aaa
sub
rcrl
lcall
fsub
push
sub
add
sahf
cmc
mov
mov
jg
sbb
clc
or
pushl
cmp
jo
pusha
adc
fcomps
dec
pop
mull
rol
outsb
or
mov
dec
sbb
dec
mov
pop
aad
cmc
sbb
xor
dec
jecxz
push
jae
scas
or
fs
scas
mov
data16
test
lods
insb
add
mov
adc
cli
lret
xor
xchg
lahf
or
idiv
mov
inc
cmp
loopne
cmp
pop
arpl
stos
adc
or
adc
gs
add
sub
pop
stos
xor
cwtl
jp
xlat
movsb
pop
mov
sbb
pop
in
mov
jnp
cs
jo
aad
jnp
nop
imul
outsb
enter
in
nop
lods
les
aas
repz
push
pusha
das
popf
adc
xor
adc
sbb
adc
mov
jmp
mov
repnz
mov
fdivs
jb
sbb
leave
cmp
cmc
jecxz
in
sbb
mov
in
jmp
inc
repz
fstp
mov
lcall
jae
sbb
mov
cmpsl
mov
into
xchg
lock
das
pop
mov
sub
xchg
xor
rorl
shrb
xchg
fs
sub
pushf
or
aaa
fwait
scas
icebp
scas
inc
pop
cld
or
scas
lret
clc
fistps
and
mov
sbbl
pop
out
sarb
sub
sub
push
adc
mov
jp
lcall
clc
xchg
xchg
aam
cwtl
ljmp
dec
lods
js
stos
mov
mov
gs
lods
mov
sti
adc
and
xlat
fnstenv
cltd
jl
mov
mov
loop
xchg
jl
imul
je
icebp
xchg
mov
loop
mov
shll
and
stc
add
push
pushl
shlb
andb
jns
dec
mov
jp
sub
mov
movsl
pop
testb
ja
pop
dec
stos
adc
inc
mov
leave
rcrb
lret
repnz
mov
iret
pop
out
xor
bound
lods
mov
xchg
rcrl
out
imulb
sub
or
lret
cmp
jp
sbb
jo
mov
ret
outsb
in
fists
pusha
ds
mov
or
out
cwtl
fnstsw
popf
lock
mov
inc
mov
stos
rcrl
subb
jnp
out
repz
scas
std
fcoms
and
adc
inc
xchg
iret
mov
sbb
cmp
jmp
inc
push
jb
jae
fildl
inc
mov
int3
or
repz
sub
inc
sbb
jb
adc
add
sbb
add
fimuls
sbb
jns
jne
jle
mov
leave
out
and
out
arpl
or
stos
dec
inc
jge
in
nop
sbb
dec
xorl
enter
rorb
push
push
push
mov
adc
inc
lock
dec
inc
xchg
and
mov
cltd
push
mov
outsl
cmpsb
sbb
cmp
sub
cli
daa
xorb
jno
push
jl
aas
pop
dec
mov
pop
ds
push
and
mov
test
sbb
out
sti
insl
scas
pop
sbb
js
ret
hlt
insl
sbb
push
and
lcall
cmp
arpl
repnz
adc
call
or
and
test
sbb
cmpsl
xor
mov
jno
sahf
mov
sub
mov
ljmp
push
push
mov
fucom
sub
sahf
cwtl
or
adc
jg
xor
ret
mov
mov
iret
aam
ss
aaa
ss
je
pop
push
cmc
mull
out
and
pop
roll
ret
sbb
in
pop
into
cmp
xchg
loopne
aaa
xor
pop
xchg
outsl
mov
mov
stos
fnstsw
mov
lods
push
cmp
mov
das
cli
std
fs
jno
sub
int3
jle
or
adc
aam
sahf
gs
mov
loopne
sub
sbb
adc
shrb
loopne
mov
sbb
roll
dec
sub
daa
jmp
sti
movsb
adc
cs
pop
inc
aad
loope
nop
aas
sbb
dec
inc
flds
ffreep
push
test
repz
ret
xor
lea
outsb
add
jmp
add
rcrb
mov
mov
mull
inc
xchg
adc
mov
je
rolb
movsb
test
cmp
nop
adc
and
mov
shl
mov
push
fiadds
pop
aas
cltd
rorl
mov
adc
loop
pop
das
cmp
mov
mov
and
adc
rcrl
es
cmp
ss
cmpsl
subl
shl
sbb
cld
sub
mov
mov
mov
jecxz
adc
sub
adc
aam
lret
je
arpl
push
push
pop
inc
in
sub
stos
fistl
rorl
cmpsb
decb
jecxz
mov
sbb
add
xrelease
push
add
sahf
jg
mov
test
push
xorl
rcrb
das
test
aas
jge
sub
sbb
out
shr
daa
pop
pop
fs
stos
mov
xchg
dec
add
outsb
push
call
adc
or
test
les
mov
mov
cmpsl
fstps
loop
ja
adc
sahf
cmp
or
or
push
xchg
jne
aam
mov
imul
jns
jmp
and
fwait
in
aaa
sub
pop
out
mov
loope
xlat
jp
pop
stos
mov
mov
adc
inc
call
xchg
fists
stos
nop
xchg
cmpsl
mov
xchg
aad
insb
andl
mov
out
push
jne
pop
fdivrs
lock
repnz
orl
inc
sbb
and
repz
call
jbe
and
std
out
iret
adc
xor
pop
popa
cmp
inc
pop
mov
jae
sub
inc
mov
mov
outsb
ljmp
and
mov
cltd
loopne
fidivs
sub
imul
mov
sub
leave
cwtd
push
hlt
ss
or
jbe
pop
sarb
hlt
sbb
cmp
mov
or
pop
cli
add
fidivl
nop
loop
scas
sub
iret
and
fmuls
adc
jnp
addl
mov
cmpsb
pushf
test
in
pusha
add
repz
orl
out
jno
push
pop
jl
lret
xor
test
ds
sbb
and
popa
and
stos
sub
jl
mov
pop
lods
imul
ljmp
sbb
js
cmp
xor
pushw
shlb
mov
mov
cmp
push
fisubrl
sbbb
ret
out
orb
xor
sbb
ss
mov
push
push
repz
js
sub
hlt
rcrb
adc
and
sub
push
pop
test
rolb
gs
aaa
mov
cs
mov
addr16
jmp
out
out
pop
out
cmp
mov
mov
and
mov
pushf
cmc
rorl
push
adc
pop
cmp
cmpsl
das
pusha
xor
int
sbbl
stc
sbb
sbb
fnsaves
cmp
mov
adc
xor
mov
dec
mov
sahf
or
divl
sub
pop
mov
ja
imul
lods
jns
outsl
test
mov
cmp
sbb
les
jle
mov
xchg
pop
mov
les
call
lds
ja
jl
mov
repz
test
mov
push
push
mov
pushf
add
and
adc
pop
test
cmpsl
inc
scas
and
andb
in
aad
jb
jno
dec
mov
js
jecxz
inc
push
testb
in
aaa
sub
mov
inc
inc
mov
pop
dec
dec
loopne
fistl
mov
lock
int3
aas
mov
imul
and
dec
nop
shrl
jnp
insl
push
dec
test
mull
cmpsl
addb
popf
imul
popa
and
lret
int3
inc
mov
test
lds
dec
pushf
push
shl
mov
sub
scas
sbb
int
adc
repnz
push
and
inc
fstl
clc
cld
push
xchg
push
aaa
sub
popa
mov
add
imul
jl
outsb
xchg
cmp
imul
rorl
jge
test
std
xchg
pop
cltd
ljmp
mov
mov
mov
into
cwtl
test
andl
roll
gs
seta
outsl
rcrb
or
clc
mov
mov
pushl
xchg
or
and
mov
add
mov
insb
push
add
test
stc
inc
call
and
dec
xchg
dec
lods
jne
and
out
lock
fs
stc
leave
loopne
sub
sub
int
scas
sahf
imul
inc
xor
jp
dec
cld
mov
imul
mov
cmc
inc
in
push
pop
pusha
je
push
fbstp
or
push
jmp
mov
in
push
mov
push
popf
ds
test
ret
stos
mov
dec
and
lea
scas
jne
push
insb
mov
adc
rcrb
pop
cwtl
roll
inc
addr16
jne
push
mov
loopne
mov
push
push
sub
popf
fcmovu
cmp
xchg
mov
sbb
inc
mov
movsl
je
repnz
push
scas
cltd
xchg
jl
or
fnsave
dec
arpl
mov
lods
jge
iret
pop
sbb
jmp
push
or
ljmp
sub
sub
pushl
jmp
xor
and
mov
sub
movsb
lock
push
ret
pop
into
int
inc
push
enter
daa
and
cmp
push
or
dec
pusha
mov
imull
loope
mov
movsl
jb,pt
sub
cmp
adc
jbe
test
mov
push
inc
mov
imul
lcall
push
loope
or
sub
mov
cmp
add
rcrb
pop
roll
xchg
divb
gs
adc
insb
sbb
std
pop
call
and
push
insb
and
fsub
ds
sub
imul
add
and
icebp
or
mov
and
outsl
mov
mov
cmp
loope
adc
or
shll
mov
sbb
sbb
xchg
into
add
cmc
outsb
mov
xor
in
loop
cmp
stc
aam
mov
adc
lcall
jg
jae
pop
mov
cli
arpl
xor
mov
ud2
lret
sbb
xor
xchg
mov
inc
push
ss
rcrb
imul
iret
xchg
add
lock
rolb
dec
cmp
xchg
xlat
popa
imul
jno
imul
xor
sti
add
mov
xlat
adc
and
mov
fnstenv
rorb
cmp
lea
leave
call
out
or
push
repz
hlt
pushf
scas
inc
insb
jmp
cld
test
mov
cmc
inc
mov
cmp
cmpsb
pop
cli
dec
sbb
repnz
push
pop
notb
sbb
cwtl
cwtl
lods
les
cmpsl
out
cmpl
add
mov
aas
dec
mov
jo
lock
xor
std
mov
and
add
shl
sar
clc
imul
jge
insl
cmp
dec
push
jp
cmpsl
jg
mov
icebp
xor
out
cld
mov
mov
mov
scas
push
ret
mov
push
inc
xchg
sub
in
and
cwtl
in
ret
add
lods
fnstsw
cmp
aaa
mov
lock
cmc
lods
mov
inc
dec
out
rcll
mov
sbb
fdivl
sbb
adc
cli
cltd
and
les
gs
xchg
or
gs
test
push
sbb
sbb
aam
xchg
mov
mov
in
push
mov
in
add
movsb
lods
xchg
call
aaa
xor
xchg
pop
inc
aaa
mov
inc
dec
mov
daa
pop
push
ja
lds
inc
jg
push
or
or
dec
je
push
jne
jmp
out
iret
insb
adc
jns
dec
loop
mov
sbb
xchg
xchg
scas
or
sub
fbld
and
mov
xchg
fnstcw
addr16
jle
cmpsb
enter
inc
pusha
pshufw
dec
jae
xchg
dec
xchg
std
jmp
imul
addl
push
je
dec
popf
mov
push
add
stos
sub
ret
insb
mov
push
jnp
sub
scas
fmuls
mov
arpl
cmc
ret
or
or
inc
jb
in
jae
xchg
jge
mov
pop
push
inc
cmpsl
fildl
mov
sbb
jle
imul
fidivrs
imul
add
xlat
mov
iret
and
or
int3
push
arpl
push
sub
je
cmp
xchg
sbbl
shll
push
or
icebp
dec
int3
sub
xor
mov
push
or
mov
xchg
scas
out
and
mov
jle
shll
xlat
cmpsb
mov
sti
pop
enter
daa
jg
push
cmp
fnstenv
xchg
push
jl
pusha
sbb
loopne
ds
push
jns
jns
lahf
ja
push
push
and
popf
test
jle
sbb
lret
adc
vmread
loopne
pop
mov
jmp
loope
inc
sub
imul
adc
adc
jns
orl
mov
mov
xor
mov
pop
call
sub
fnstcw
dec
cmp
ret
stc
jl
sub
sbb
jnp
loop
xor
jg
mov
testl
arpl
push
cmp
add
inc
mull
iret
jne
lret
mov
sbb
inc
cmc
xor
jg
outsl
aas
jne
loop
mov
dec
adc
sub
jecxz
fsubrs
jp
cmp
pop
hlt
cltd
cli
xchg
inc
mov
cmp
ds
cmp
adc
loopne
aam
pop
filds
push
imul
inc
inc
add
mov
sbb
test
pop
xlat
mov
dec
mov
imul
insb
mov
ret
stos
push
dec
adcl
inc
pusha
jle
ljmp
xrelease
cmp
jg
and
xor
pop
in
or
mov
ljmp
lret
inc
mov
jl
aas
sub
xor
nop
daa
pushl
mov
movsb
loopne
xchg
dec
paddw
mov
xor
push
mov
sbb
out
pushf
testb
outsb
add
repz
aam
sub
xor
shrl
es
pop
insl
and
mov
cmpsl
jle
enter
and
or
cld
mov
and
mov
cmp
mov
adc
xchg
push
rorb
into
cmp
arpl
xor
adc
pop
frstor
cmpsl
enter
inc
ljmp
subl
insl
pop
xchg
enter
imul
mov
pop
movhps
pop
cltd
imul
rclb
repnz
add
out
jno
pop
gs
stos
mov
enter
loop
mov
push
dec
xor
sti
js
mov
movsl
mov
aas
mov
lahf
out
dec
push
ss
loop
add
gs
ja
sub
or
leave
mov
push
jb
jne
in
jo
sub
shlb
inc
jns
ja
in
fsubrl
std
dec
mov
and
push
sub
clc
movsl
scas
fisubs
sbb
inc
js
popa
mov
jo
fidivrs
dec
add
push
pop
cwtl
pusha
stos
jle
fildll
sbb
in
test
adc
dec
push
aaa
orb
mov
mov
stos
popf
iret
cmp
shrl
out
pop
ljmp
cmp
adc
push
adc
test
cmpsl
ret
push
pop
push
call
cli
jae
stos
pop
inc
mov
sti
pop
push
es
adc
mov
pop
sbb
mov
imul
ficomps
jns
lds
mov
in
xchg
mov
and
leave
lret
lret
lcall
dec
shlb
push
popf
jge
inc
mov
mov
xorb
icebp
push
or
sub
adc
jne
xchg
xor
mov
jae
and
sbb
cmp
push
loopne
icebp
add
in
adc
hlt
cwtl
daa
jle
cmp
popf
movsb
test
in
jl
push
sbb
mov
loopne
and
pop
lahf
xchg
and
push
cmc
add
push
dec
adc
inc
fmuls
pop
xor
sarb
and
lock
push
cmp
pop
stc
dec
cmp
loopne
adc
push
sub
subb
sbb
clc
jle
loopne
xchg
xor
int3
xchg
pop
daa
fmulp
cmp
pop
out
xor
sbb
lods
fdivrl
lock
sub
fsubrs
orb
inc
int3
lret
mov
gs
dec
aad
mov
push
lds
jb
lret
sub
pop
fdivrs
es
lret
add
popa
in
mov
xchg
lcall
mov
cli
into
enter
cld
fstl
pop
pop
stc
outsl
push
or
loop
xchg
stc
inc
or
or
cmpsl
data16
pop
lods
out
or
out
mov
cli
leave
icebp
inc
xor
push
mov
or
cmp
gs
sti
dec
loopne
insl
add
jae
adc
and
imul
push
cmp
sbb
cwtl
xchg
sbb
sbb
mov
or
sub
dec
mov
aam
ds
pusha
sbb
sbb
lods
mov
loop
lcall
adc
les
xchg
dec
ds
lea
dec
call
in
movsb
pop
cwtl
insb
xor
pushf
add
push
adc
xchg
inc
inc
insl
xlat
inc
repz
lds
lret
jb
iret
loopne
pop
pop
dec
je
cltd
dec
jecxz
cmp
neg
cli
jmp
sub
adc
outsl
ret
mov
and
mov
or
into
iret
inc
lock
ljmp
mov
ror
and
loope
rcrl
fiadds
ljmp
jge
repnz
loop
clc
cld
loop
aaa
lret
and
mov
mov
sahf
jne
cmpsb
xchg
rcl
pop
add
aam
cs
adc
lahf
ret
imul
cmp
lods
and
cmovne
ljmp
jae
out
addr16
movsl
rolb
packssdw
lcall
cltd
stc
movl
xchg
fisttpll
inc
lea
and
add
roll
and
stos
jns
lahf
push
testb
xor
add
pop
stc
call
pop
icebp
or
addl
jns
add
mulb
mov
dec
push
push
inc
lods
dec
sub
xor
dec
cmp
loopne
scas
mov
xchg
inc
out
lea
jns
inc
ftst
into
loop
xchg
dec
shll
cmpsb
sub
repz
jecxz
add
lea
xchg
jle
in
in
hlt
lret
mov
xchg
xchg
repz
push
out
xchg
add
fsts
cli
js
popf
mov
or
push
jg
outsl
stos
adc
popf
and
js
insb
mov
jnp
ja
scas
sahf
push
sub
incb
sbb
pushf
ret
lods
pop
cmp
decl
mov
cmp
or
pop
cld
lods
inc
movsl
cmp
icebp
arpl
xchg
mov
insl
xor
add
mov
in
add
add
mov
jne
mov
hlt
and
cli
cmp
jge
iret
test
aaa
dec
ss
or
push
int3
cmp
pop
mov
iret
push
rcll
addr16
and
movsl
or
and
and
movsb
xchg
stc
loop
inc
or
test
or
cld
xorb
imul
jno
pop
stos
jl
inc
lock
fldt
mov
movsl
inc
push
mov
or
xchg
lahf
mov
ret
push
enter
cmp
add
lret
pop
js
fsts
nop
lea
jne
loope
flds
les
dec
adc
das
mov
jle
aas
mov
and
sub
push
popa
int
gs
sub
aam
pop
gs
lcall
jno
in
cmc
sub
mov
mov
andb
jg
sti
gs
fbstp
mov
inc
lret
mov
dec
jne
addl
fdivrs
sahf
negl
mov
mov
pop
mov
adc
stos
jo
cmc
ret
mov
std
mov
jmp
stc
daa
push
fs
in
adc
jmpw
lods
mov
pop
cld
mov
cld
push
lahf
xor
insl
or
inc
inc
incb
inc
lcall
fs
ffree
sub
lods
data16
sub
add
lahf
sub
inc
lea
cli
push
mov
push
and
lret
mov
aas
mov
bound
push
inc
clc
aad
mov
nop
xchg
push
dec
inc
test
inc
and
sbb
out
les
adc
movb
lea
add
xchg
pop
dec
mov
pushf
mov
pop
jmp
and
inc
lret
inc
lds
push
aas
imul
xchg
je
mov
inc
negb
sbb
std
shrl
and
mov
dec
xor
jle
insl
dec
cmc
stos
mov
dec
and
mov
int
mov
xchg
xchg
lock
pop
xchg
mov
inc
sbb
xlat
data16
out
jge
push
imul
jnp
cmpsl
jl
cs
mov
inc
lret
xchg
std
mov
les
cmp
lds
shlb
xor
sub
add
push
sub
xor
clc
call
cld
pop
ljmp
cmp
iret
insb
out
or
mov
push
sbb
push
stos
add
aaa
cltd
jne
test
mov
call
push
dec
xor
pop
lret
sub
pushf
lods
mov
stos
push
rorb
add
int
pushl
mov
xor
push
cmp
in
or
lret
fistps
pop
pop
call
dec
dec
pop
mov
inc
inc
jne
or
shll
or
sbb
inc
adc
insb
cs
mov
in
cmp
test
sub
out
pop
mov
fdivl
pushl
mov
cmpsl
movsb
jle
jno
in
icebp
dec
pusha
loopne
cld
fildll
jmp
int3
fiaddl
xor
test
popf
fidivrl
jmp
push
mov
and
cmc
xchg
xchg
jnp
inc
mov
push
mov
iret
lock
dec
pop
je
scas
inc
xchg
in
jae
stos
mov
or
aad
sbb
sbb
fisubl
jp
push
and
fisubs
in
push
jbe
rcrb
and
enter
mov
add
push
jbe
xchg
xchg
jge
inc
push
sbb
adc
aaa
push
incl
jp
cmp
dec
frstor
int3
ljmp
push
mov
outsb
xor
push
es
scas
test
and
mov
sub
push
push
lea
jecxz
cwtl
enter
daa
jl
scas
cmp
leave
aaa
jno
sti
mov
dec
dec
je
ds
ljmp
cmpsl
xor
aam
lret
push
fwait
pop
aaa
test
fistpll
inc
notb
repz
rcrb
add
ret
xor
inc
gs
adc
xor
outsl
outsb
cmp
lods
rorb
pusha
test
sub
addb
icebp
movl
in
mov
add
or
mov
lcall
cmp
nop
icebp
or
pusha
gs
sahf
push
movl
subb
mov
mov
mov
xor
nop
ror
ss
lods
mov
xor
jne
lret
popa
rorl
movsb
sbb
mov
inc
cmc
mov
outsl
fdivrl
stc
mov
shlb
std
adc
lock
data16
mov
leave
mov
adc
pop
push
cli
das
jo
xor
dec
cmp
jno
or
push
sbb
imul
pop
cmp
pop
adc
xchg
sub
sahf
lods
add
mov
xchg
sahf
inc
add
xor
mov
call
in
stos
out
sti
mov
xchg
adc
je
nop
popa
in
loopne
mov
aad
push
xchg
repz
aam
movb
add
xchg
inc
jo
jecxz
lea
push
jp
mov
int
jmp
mov
pop
mov
dec
inc
push
addb
or
jb
adc
cmc
cmpsl
pop
je
dec
jecxz
cmp
jp
stc
cwtl
test
stos
mov
push
mov
adc
jo
fstpt
mov
mov
jecxz
je
push
mov
incb
and
inc
mov
ss
es
psubq
sbb
dec
or
cmpsl
jnp
insb
mov
nop
pop
jl
cmp
add
mov
lret
sbb
hlt
xchg
fistpl
in
pop
rolb
dec
aam
pop
out
mov
inc
fstl
lea
xchg
lea
add
jns
in
popa
xor
push
dec
xor
xchg
popf
mov
push
clc
cmp
addps
inc
add
cltd
std
xchg
in
test
mov
xchg
mov
test
je
xchg
cli
loope
or
shl
call
pop
data16
stos
push
pusha
int3
push
cmp
int3
add
adc
dec
push
xor
mov
shlb
adc
mov
push
es
adc
pushl
pop
pop
dec
push
in
mov
or
sti
mov
sub
aas
jne
mov
cmp
cmpsl
bound
leave
stos
in
jmp
xchg
ljmp
sub
jmp
cmp
jp
sbbb
jecxz
loop
mov
repnz
push
mov
and
xor
leave
and
xchg
jbe
addl
add
mov
std
mov
and
push
jns
insb
pusha
stos
ret
xlat
cmpsl
scas
fs
les
js
adc
or
iret
dec
loopne
ret
imul
sbb
pop
inc
movb
mov
xlat
push
mov
add
imul
jp
add
faddp
xchg
arpl
shlb
dec
mov
sbb
leave
xor
xlat
hlt
clc
mov
jbe
bound
sbb
or
dec
pop
or
mov
loope
and
aad
mov
adc
jmp
xor
mov
and
stos
das
fwait
cmp
movsb
cmpsl
lods
rclb
push
cmpsb
scas
add
in
lret
enter
daa
jnp
out
imul
dec
mov
test
lcall
mov
cmc
test
stos
stos
roll
pop
inc
push
dec
push
js
and
push
or
cmp
sub
cltd
cmpb
push
outsb
popf
aam
adc
in
orb
mov
sbb
icebp
adc
jo
mov
int
mov
sub
pop
mov
arpl
addr16
jne
cmp
ret
sub
jmp
test
inc
pop
jg
xlat
mov
jo
mov
sub
ss
xchg
mov
fdiv
and
negl
xchg
shll
inc
mov
mov
jecxz
push
adc
outsl
mov
add
stc
addr16
sub
jbe
adc
int3
out
and
mov
sub
pop
adc
cli
bound
adc
sub
or
jl
dec
dec
add
or
loopne
scas
sbb
push
notb
andl
adc
arpl
xchg
popa
pop
int3
sbb
jo
rcl
pushf
sub
das
popa
in
adc
test
data16
xchg
pop
nop
cmp
or
add
inc
dec
mov
mov
repz
fsubr
movb
lea
movsl
call
bound
cmc
adc
shl
stos
or
pop
push
xlat
pop
inc
fstps
lret
inc
inc
popa
sbb
cmpsl
insl
stos
jb
add
insb
vpcmpeqb
popf
cli
mulb
fsincos
cwtl
aas
inc
sbb
mov
dec
subl
mov
and
lock
paddsw
push
push
mull
mov
jp
in
insl
movsl
roll
push
sub
mov
add
movsb
fwait
mov
addr16
jo
adc
rolb
mov
add
cli
sub
bound
ret
dec
mov
push
fnstsw
adc
pop
adc
xchg
int3
div
ljmp
push
lods
rorb
mov
into
mov
xchg
in
sbb
cld
test
mov
outsb
add
xchg
cltd
xor
test
cmp
dec
mov
or
mov
ja
pop
adc
shrb
cmp
pop
out
roll
repnz
outsb
and
xor
mov
or
stc
xor
xlat
dec
mov
xchg
js
mov
into
sub
ja
or
dec
inc
add
xor
or
or
dec
jecxz
jns
xor
lret
sub
bound
es
jns
cmpb
cmp
adc
sbb
int3
fimull
jp
cmpsl
adc
push
xchg
ret
mov
test
in
pop
repz
push
sub
xchg
insb
cmp
jmp
bound
adcl
push
inc
adc
or
cmp
nop
stos
imul
insb
lret
xchg
inc
jnp
sub
scas
xor
stos
push
sbb
ret
sub
rolb
jae
mov
adc
lret
sbb
fimull
loope
xchg
rcrb
imul
cmp
cmpsl
xchg
lds
cmpsb
mov
outsb
dec
inc
leave
cmpsl
mov
hlt
inc
data16
mov
push
jbe
mov
icebp
sbb
sbb
or
mov
int3
rolb
inc
push
and
jl
lods
xor
or
out
and
hlt
fidivrs
adc
shlb
mov
cmpsb
xor
push
enter
daa
jp
or
imul
jo
sub
ds
pop
shll
frstor
lahf
adc
cs
inc
mov
test
jne
daa
inc
adc
out
adc
pop
push
sub
js
mov
insb
push
pusha
psraw
sbb
cmp
lock
outsb
add
mov
shl
out
pop
cmpb
sbb
jns
add
shll
push
push
add
mov
sub
sub
xchg
aam
push
jbe
xchg
fsub
inc
lret
sub
mull
mov
xor
push
xor
mov
xchg
and
sbb
ss
pop
cmp
stos
push
pop
negl
mov
mov
sbb
mov
ja
into
push
sbb
cmc
sbb
push
xor
movsb
mov
loop
xchg
arpl
push
pop
shlb
xchg
popa
jae
data16
loope
mov
pusha
mov
leave
out
out
cli
xchg
mov
push
or
in
cmp
pop
loopne
xchg
sub
adc
xor
inc
add
jge
add
in
xchg
and
mov
cmp
jl
sub
lcall
xorb
jns,pn
fcmovnbe
cmp
stos
nop
pop
jl
dec
pop
inc
cmpsl
inc
pop
rorl
les
sub
dec
sbb
shrb
mov
inc
pop
adc
insb
sub
pushf
mov
lret
sub
pop
stc
test
inc
pusha
and
inc
pop
int3
lods
aas
inc
ljmp
jecxz
divb
repz
inc
out
mul
das
inc
std
enter
cli
sbb
imul
mov
stc
addl
adc
fisubl
xor
mov
cli
pusha
mov
insb
enter
out
pop
rcl
mov
repz
insl
movsl
frstor
cmpsl
jns
lods
mov
loope,pt
cld
mov
lret
fbld
ds
sub
jne
and
stos
hlt
or
lcall
ret
fucomi
push
push
jne
adc
gs
clc
cltd
fdiv
xchg
or
cs
in
lods
cmp
or
xor
daa
xchg
sub
movhps
stc
cltd
imul
test
xchg
hlt
xchg
das
dec
or
ret
xchg
std
leave
sbb
movsl
shll
fwait
test
xorb
add
inc
mov
bound
in
or
call
mov
mov
mov
aad
mov
pop
mov
dec
ss
lret
adc
lea
movb
jne
cmp
or
jns
in
inc
inc
xchg
mov
cmp
mov
stos
sub
fistpll
push
jp
addb
cmp
jnp
shrb
in
inc
sti
pusha
mov
mov
or
xchg
aas
in
mov
push
sbbl
out
popf
dec
stc
xor
jnp
shrl
inc
or
jnp
inc
cltd
scas
sub
push
pop
andl
lods
pop
iret
or
adc
pop
sbb
rolb
jae
daa
push
inc
int3
sbb
push
mov
jb
xchg
pop
mov
xchg
imul
push
fimuls
sub
shrb
adc
mov
push
inc
movsl
hlt
mov
jbe
pop
imul
mov
loope
push
push
mov
prefetchw
stos
pushf
pop
pop
jb
mov
pop
push
xor
push
mov
in
pop
cmp
pop
push
movsb
mov
lret
mov
inc
in
cwtl
cmp
enter
daa
jns
add
pushf
lds
sub
pop
dec
xchg
jmp
add
pop
add
lahf
xor
push
adc
arpl
inc
or
inc
mov
lahf
repnz
jns
loope
aaa
mov
cmp
cltd
imul
imul
push
outsb
arpl
sbb
fwait
jg
inc
jnp
orb
sbb
or
push
insl
cs
int
xchg
stos
sub
mov
lcall
or
xchg
sub
sub
movl
jg
loop
mov
shll
pushf
pop
add
push
lods
ss
loopne
out
push
fsubs
xchg
negl
dec
cmpsl
lret
repnz
xchg
sbb
call
scas
xor
call
mov
stc
aad
cmp
loop
mov
xor
push
clc
lods
jb
sub
pop
cmp
cli
enter
add
cmp
sbb
decb
and
loopne
xchg
ret
dec
dec
adc
dec
insb
imul
push
jnp
out
std
sbb
out
mov
sbb
mov
jmp
cmp
lret
fcompl
aad
add
nop
repnz
dec
mov
sbb
jg
mov
mov
adc
add
pusha
fsubp
pop
pop
decl
pushf
pop
and
jmp
or
pop
pushf
and
mov
aas
in
push
jb
jnp
dec
pop
in
mov
xor
and
and
xchg
daa
pop
mov
outsl
push
dec
cwtl
mov
inc
mov
lea
dec
mov
dec
mov
pop
outsb
mov
loop
mov
lock
mov
pop
mov
add
adc
jbe
and
adc
dec
sti
ds
cmpsl
js
mov
adc
mov
cmc
mov
loopne
sbb
lds
inc
sarb
and
xchg
mov
aam
adc
ret
push
dec
push
cmp
fisttpll
test
dec
add
popa
jne
lods
cmpsb
mov
mov
xchg
or
xchg
push
mov
push
add
into
out
test
add
jno
jb
inc
pop
cltd
xchg
not
sar
rcl
pop
addr16
stos
and
inc
push
and
or
add
dec
ljmp
add
pop
mov
xor
pop
mov
sbb
mov
inc
mov
and
inc
inc
inc
mov
mov
decl
leave
mov
mov
push
fwait
out
call
mov
jns
in
out
add
ss
add
fidivl
add
mov
cwtl
and
mov
jle
cs
or
test
sub
out
jmp
clc
inc
push
subl
and
leave
push
out
popf
jbe
dec
mov
mov
xor
and
loope
mov
and
scas
lea
xor
pusha
sbb
iret
insb
mov
ret
arpl
mov
jae
fldenv
iret
mov
or
rcll
and
mov
outsb
pop
pop
sbb
inc
add
and
fsubrp
shl
lds
test
mov
mov
adc
dec
xchg
jl
hlt
fsts
test
jbe
subb
adc
aaa
or
or
cmc
add
test
mov
pop
fwait
xor
ret
negl
add
pop
and
cmp
sub
dec
das
jns
lret
and
cmpsb
aaa
bound
gs
js
leave
cmp
orl
dec
std
mov
mov
lods
and
out
lahf
push
ja
push
out
jb
or
rclb
pop
inc
xor
pop
cltd
ja
pop
mov
fs
pop
push
xor
loope
push
jo
fsubrl
movd
pop
or
jbe
pop
movsb
inc
xor
ds
and
xchg
xor
push
jo
pop
int
pop
iret
sub
mov
xchg
push
and
inc
fdivrl
lea
sbb
stos
sahf
negb
xor
cld
and
rorb
hlt
jnp
int3
mov
ss
test
fsubs
jl
neg
inc
inc
lret
jl
jmp
mov
jnp
int
je
sbb
sub
jp
add
pop
aam
loop
push
jl
mov
fs
inc
aaa
adc
add
xor
push
add
push
push
enter
shlb
xlat
ja
cmp
dec
adc
inc
xchg
mov
test
mov
push
mov
imul
mov
lds
and
push
mov
push
fcomp
sti
jp
sbb
aas
push
sub
nop
int
push
dec
sbb
aad
sbbl
les
cmp
push
dec
cmp
jle
inc
fisttps
pop
lret
adc
mov
push
jmp
lods
inc
pop
aas
mov
int
xchg
fisubrs
jb
pop
leave
dec
shl
mov
jecxz
popa
mov
push
sar
push
mov
jo
pop
mov
cmpsl
mov
jno
pop
dec
mov
pop
fstpt
push
adc
js
adc
jo
aam
lock
push
mov
ficompl
stos
and
out
iret
shll
jo
stc
loope
insl
jae
rorl
fisubl
push
cmp
cld
in
ds
mov
add
and
pusha
je
pop
pusha
cli
and
push
and
sub
push
ret
stc
sbb
push
sti
mov
fnsave
xor
xchg
mov
inc
cs
popa
mov
adc
out
imull
xchg
xchg
mov
mov
call
cltd
fnstcw
test
sbb
fdivs
push
mov
adc
sbb
inc
sti
rorl
jl
adc
movsb
stos
adc
push
enter
lock
decl
sub
xor
fisttpll
iret
sub
mov
mov
pop
popf
mov
loopne
inc
pop
jmp
ja
xor
sbb
std
inc
aaa
popa
popf
or
sub
fwait
in
daa
dec
mov
xchg
mov
mov
out
imul
push
out
adc
out
test
sub
aad
adc
xchg
ja
adc
loopne
mov
jns
outsl
jle
jg
in
mov
test
inc
xor
xchg
in
jge
movsl
gs
ret
sub
cmp
mov
mov
ds
in
push
stc
push
shrl
jb
jl
or
sarl
lds
lock
add
adc
mov
jo
or
cmp
in
inc
lret
jae
iret
movsl
inc
rol
jmp
push
lahf
iret
inc
fisubl
mov
xchg
lds
sbb
sbb
imul
mov
nop
loop
lds
iret
mov
push
push
lahf
repnz
or
popa
hlt
and
push
arpl
pop
or
ljmp
aaa
leave
cmpsb
or
xchg
xchg
add
cmp
pop
mov
and
adc
scas
jae
idivl
cmp
push
movsb
roll
sbb
sbb
pushf
cmpsb
mov
jb
enter
daa
ja
inc
cmp
repnz
jno
daa
jge
jp
repnz
jne
sarb
lods
sub
movsl
push
push
and
mov
push
test
mov
inc
shrl
pop
ret
pop
pop
and
mov
inc
push
sahf
or
xchg
aas
jge
inc
pop
lahf
cmp
sbb
outsb
sub
adc
push
les
add
mov
mov
lds
jne
pop
add
jno
xor
pop
int
add
pop
pop
inc
or
mov
in
push
jnp
mov
out
test
or
push
sahf
cltd
insb
cmp
orb
or
insl
out
mov
add
mov
mov
and
pop
sbb
std
enter
enter
insb
xor
lret
roll
inc
sbb
dec
test
insl
lret
xor
aad
enter
inc
loop
subb
push
add
xor
dec
xor
mov
mov
shl
push
je
cli
jp,pn
xor
push
xor
mov
loope
push
ret
out
mov
loopne
leave
das
pop
xlat
pop
push
adc
lret
aad
mov
ret
sbb
add
dec
inc
sbb
pop
stc
mov
cwtl
jnp
sub
mov
shll
sti
sub
out
mov
add
dec
jnp
aas
inc
xchg
push
jp
mov
int
repz
mov
add
xor
pop
jge
ljmp
xlat
dec
jmp
adc
pop
loop
stos
inc
cmc
test
aas
and
jb
aam
dec
mov
pop
jecxz
aad
imulb
jecxz
cwtl
sub
pusha
mov
inc
bound
or
dec
ja
mov
mov
insb
shl
lret
pop
push
das
iret
add
mov
sbb
shrl
es
int
pop
xchg
sbb
cmpsl
jbe
xchg
ret
popf
or
cmovnp
mov
out
pushf
jg
sti
pop
pop
pop
jg
and
sti
aam
adc
aas
push
mov
push
cli
clc
dec
mov
mov
mov
mov
fidivrl
pop
cmp
xchg
add
xor
rcr
rdpmc
call
add
sarl
test
inc
testl
cmp
pop
xchg
inc
push
shll
or
add
push
imul
add
xchg
sub
xor
inc
aam
std
xor
mov
sahf
xchg
xchg
mov
mov
repnz
pop
jne
into
bound
or
mov
outsl
xor
jne
mov
mov
sub
bound
int
in
inc
sub
cmp
imul
push
and
mov
jp
dec
aam
sbb
mov
shll
les
adc
add
fbld
sub
pushf
push
lret
xchg
mov
orl
dec
call
cmp
cmp
push
xor
outsl
call
jnp
sub
scas
push
stos
movsb
push
xor
hlt
adc
cmp
iret
sub
pop
pop
jns
mov
es
or
inc
es
mov
and
subb
pop
cmp
sbb
leave
test
fidivs
out
lds
jecxz
sarb
and
mov
xlat
nop
hlt
outsl
pop
ja
mov
jbe
xor
jge
movsl
sbb
xchg
sub
mov
int3
insb
cltd
mov
push
or
shlb
fsubrs
mov
push
mov
in
enter
sub
push
imul
test
daa
jbe
outsl
cmp
pushf
lds
decb
inc
leave
shrb
and
in
lahf
mov
adcb
xor
mov
into
in
pop
add
out
out
cmp
je
pop
call
lds
sub
xor
cmp
jnp
adc
sub
xchg
jmp
insb
sbb
push
xor
sbb
jbe
fmul
jb
sub
jbe
add
ficomps
lcall
rcr
aad
sub
dec
cwtl
sahf
cmp
or
and
sahf
jg
mov
jecxz
add
jp
and
push
and
inc
scas
ss
imull
cmp
xchg
icebp
mov
push
les
lret
cmp
sbb
scas
sbb
sbb
into
loopne
data16
xor
cmp
xor
jecxz
push
cmp
loop
jecxz
stc
cli
out
inc
fs
jmp
add
std
ret
lods
daa
imul
dec
cmp
push
push
add
popa
lret
fdivs
test
cmp
xor
or
jbe
js
fs
inc
shl
add
mulb
mov
arpl
adc
sub
add
mov
cmp
sub
jmp
sub
and
fsub
cld
cs
sbb
fidivrl
inc
test
popf
clc
ficoml
into
call
lea
call
pop
adc
fnstenv
pop
out
or
push
inc
sub
ret
scas
inc
jl
in
lret
inc
add
jb
mov
fnsave
inc
jecxz
lea
std
and
cwtl
out
add
and
push
movsb
dec
bound
fistl
lret
in
mov
out
test
es
das
scas
mov
mov
dec
lcall
and
cmp
mov
insl
inc
adc
cmpsl
jne
jle
into
sub
cld
cmp
lret
fwait
and
mov
cmc
jl
mov
sahf
nop
pop
shl
and
aam
adc
ret
pop
push
pop
push
orl
mov
test
mov
ljmp
mov
mov
mov
in
inc
push
sbb
out
xchg
aam
add
mov
cltd
inc
lret
sub
mov
mov
xchg
mov
test
jns
xchg
clc
add
std
out
pop
push
xchg
jle
push
imul
decl
scas
repz
sahf
shlb
stc
jecxz
arpl
jne
pop
ja
ss
add
faddl
mov
or
mov
mov
jne
dec
shlb
rcl
bound
or
in
out
xchg
sti
adc
mov
adc
pop
addr16
push
jp
divl
mov
fisttpl
mov
bound
std
insl
in
int3
add
xchg
test
mov
out
xchg
fistpll
fisttpl
push
popf
jmp
loop
mov
fwait
push
ja
add
mov
mov
jnp
push
sub
push
jns
ret
adc
jecxz
iret
mov
dec
pop
cmc
orb
loopne
test
xchg
fdivrs
add
xor
int
popf
mov
fimull
mov
inc
imul
sbb
fnsave
mov
inc
aas
mov
or
cli
mov
mov
loop
jbe
mov
jge
push
pop
sbb
aaa
inc
in
adc
pop
ljmp
push
inc
fcomps
sbb
jmp
jb
push
bound
mov
and
fiadds
movsb
jmp
lret
or
xor
repnz
daa
jne
xor
push
xor
je
push
in
imul
and
in
int
lods
pop
and
add
test
insb
mov
inc
fbstp
sub
adc
daa
lret
mov
mov
push
cwtl
outsb
out
js
adc
pop
adc
pop
rcrb
test
add
sub
jns
pop
int
add
icebp
pop
pop
out
mov
sub
out
cmp
dec
gs
or
aas
push
inc
jg
or
js
mov
insl
mov
and
imul
cltd
enter
movsb
fcoms
xchg
notl
dec
lret
leave
shll
popa
sbb
cmpsl
into
ret
lahf
xor
mov
add
stc
mov
push
fs
cmp
adc
pop
in
add
subb
mov
out
mov
lret
xor
cmp
in
or
xor
jbe
ljmp
adc
jo
pop
fistl
ljmp
repz
sbb
sarb
xlat
push
movsl
sub
imul
aas
and
xchg
cs
xchg
ja
pop
inc
inc
dec
cmp
gs
mov
xchg
pinsrw
into
repz
lahf
xchg
pop
add
rcrl
in
call
pop
mov
mov
pop
mov
xor
inc
xor
inc
add
scas
inc
out
or
jb
loope
dec
ss
pop
mov
divb
fs
or
cwtl
mov
adc
xorl
add
mov
in
mov
rorl
lock
mov
jmp
and
arpl
pop
js
addb
dec
out
mov
add
icebp
jno
cld
gs
das
lret
or
push
and
xor
pop
mov
icebp
cltd
sub
cmp
push
addr16
cmpsb
fildl
in
clc
rolb
ljmp
call
mov
and
sub
cmc
xor
psllw
mov
jle
jmp
mov
hlt
xchg
dec
dec
or
stos
fadds
lock
inc
rcll
pop
adc
stos
loopne
stos
push
mov
syscall
test
push
add
ds
sub
xlat
xor
mov
xor
pop
xor
pop
push
mov
and
fdivrl
xor
adc
loope
cmc
cmp
rorl
or
ror
jno
push
dec
xor
dec
pop
mov
dec
cmp
bound
dec
mov
mov
push
xchg
adc
cwtl
out
mov
ja
dec
fs
popf
jp
push
xchg
adc
add
lods
sub
in
jmp
popf
fbld
and
mov
cld
xchg
and
subl
push
aad
out
adc
inc
mov
mov
subl
addr16
insb
dec
push
jnp
inc
das
scas
sbb
adc
mov
loopne
inc
xchg
jmp
sub
out
jmp
dec
jae
dec
clc
inc
push
sbb
fidivrl
push
sbb
mov
movsl
fidivrs
jo
inc
rclb
repz
and
xor
repnz
enter
ret
add
xorb
scas
loop
sti
sbb
sbb
adc
adc
jae
inc
mov
fisttpll
into
in
xchg
das
or
or
and
cwtl
andl
cmp
sbb
dec
enter
daa
je
jl
fwait
jp
jno
repnz
jl
inc
push
dec
ret
ds
mov
movsl
jg
xor
jg
xor
xor
mov
call
xor
outsb
xlat
lock
movsl
pop
rcrb
test
pop
pop
data16
push
xor
loope
fdivs
mov
sub
jmp
pop
outsb
push
push
adc
loop
push
sub
xchg
sbb
jae
add
add
push
jl
push
int
push
cmp
insb
fisttpl
faddl
lahf
lcall
nop
fsubr
push
sbb
sahf
orb
sbbb
jg
pop
aad
aad
pusha
mov
in
mov
cltd
test
ss
scas
es
or
push
stc
lret
adc
inc
and
mov
push
mov
cmpsb
das
test
ret
xor
fisubrl
stos
shl
hlt
inc
sbb
push
fiadds
data16
mov
jg
push
cmpsb
xchg
cli
mov
xor
mov
push
mov
scas
dec
pop
xor
sti
adc
daa
imul
add
mov
iret
sbb
or
push
cwtl
sub
clc
je
inc
sbb
in
add
lock
ss
mov
aad
outsb
mov
dec
cwtl
xor
inc
iret
movsl
arpl
inc
sub
rep
add
pop
and
mov
fistpl
aas
pop
xchg
and
lcall
in
pop
lret
lcall
add
cmp
add
sbb
dec
lods
andl
stos
mov
jecxz
leave
add
jbe
sub
mov
lock
pop
pop
mov
cmp
or
push
pop
mov
sbb
out
insb
sub
mov
mov
and
fdivrl
es
cmp
loop
pop
cmpsl
jae
adc
dec
sahf
ds
nop
std
iret
lret
jns
dec
mov
add
mov
fdivl
ja
pushf
rep
sub
aam
push
cmp
xor
pop
push
fisttpll
idiv
sti
leave
outsb
xchg
test
pop
popa
call
and
out
out
sbbl
xchg
aad
daa
push
rolb
lar
mov
fldl
push
mov
je
mov
sbb
sbb
stos
test
stos
iret
pop
enter
cli
add
call
cmpsl
dec
xor
ret
pop
les
insb
into
mov
lods
mov
jmp
out
ja
dec
cmpsb
dec
call
aas
sub
lcall
sbb
or
cmpsb
scas
test
inc
dec
in
bound
fwait
idivl
jg
in
xor
or
or
and
shrl
gs
imul
mov
xor
dec
aas
in
push
pusha
push
inc
mov
xchg
xor
mov
xchg
out
and
cmp
lds
cwtl
or
popf
cmp
mov
cmc
sub
stos
mov
adc
into
sbb
push
jge
mov
iret
scas
jl
movsl
push
pop
add
cmpsl
ja
iret
inc
arpl
pop
arpl
cmp
dec
adc
sbbb
inc
mov
sub
push
mov
ret
sbb
lret
stos
addr16
sbb
jb
int
loop
push
or
mov
mov
jl
call
mov
jbe
sbb
jge
pop
adc
mov
inc
insb
or
cmp
pop
mov
dec
push
mov
sub
mov
cli
and
jmp
adc
xchg
in
cmpsb
mov
sbb
daa
jae
inc
cmp
mov
ret
jl
push
dec
xor
leave
movsl
xchg
and
int
jmp
arpl
or
push
add
flds
inc
pop
push
fsubl
pop
movsl
addb
je
loope
push
aam
repz
cmp
dec
push
adc
mov
jnp
cmp
jbe
push
add
sbb
call
les
int
jns
out
sub
pop
movsl
sub
xlat
icebp
sub
sub
xchg
pop
sahf
and
lret
jne
fs
mov
mov
rcl
mov
xlat
mov
aad
and
mov
cmp
enter
xchg
loope
lret
inc
rcr
mov
ja
sbb
mov
cmc
mov
cmpsb
xor
pop
outsl
mov
jge
xchg
stc
pop
xchg
les
mov
mov
int3
lods
faddl
xor
push
adc
cli
cli
testb
push
les
loope
jl
test
arpl
and
pop
push
mov
mov
adc
out
add
outsb
xchg
jns
std
sbb
dec
dec
add
xchg
pop
pop
sub
dec
mov
insl
test
sti
in
inc
cs
dec
aad
mov
nop
adc
mov
notl
in
jle
ret
sti
loope
repz
fmull
in
ret
sbb
adc
cwtl
outsb
pushf
pop
cs
and
outsb
hlt
add
inc
sbb
inc
aas
lahf
ret
pop
dec
and
test
jecxz
dec
sub
mov
sub
movsb
jmp
jae
shll
cmpsl
xchg
mov
lret
xor
aaa
loop
das
dec
in
sbb
or
inc
mov
inc
stos
xchg
sar
aam
es
dec
insl
notb
cli
dec
fnstsw
mov
pop
xchg
mov
mov
push
jns
lret
and
addr16
aad
sti
psllq
outsl
sub
sub
add
out
dec
ret
les
pop
fnsave
pop
clc
mov
js
test
push
lods
sub
aad
out
or
stos
jecxz
imul
pop
mov
test
xchg
xchg
and
and
mov
push
dec
sub
add
pop
imul
add
add
xchg
xor
out
or
add
mov
stos
ljmp
cmpsb
dec
arpl
sbb
inc
sub
stos
or
dec
xor
sti
jo
jne
jbe
mov
lds
out
and
xchg
jns
push
and
rorb
mov
xchg
out
into
pop
sub
mov
pop
lcall
arpl
mov
movsb
inc
xor
repz
jl
stos
dec
sub
inc
and
loop
lods
xchg
add
xchg
jmp
mov
popf
push
pop
sti
dec
popf
pusha
fdiv
mov
xor
or
and
out
test
nop
jnp
push
scas
fbld
push
dec
jbe
adc
vcmpss
pop
lcall
jae
cwtl
mov
loope
xor
mov
push
fisubl
lods
leave
sbb
je
lcall
lds
shrb
pushf
mov
push
out
leave
pop
cmp
out
arpl
mov
lea
mov
ds
test
adc
clc
xor
int3
sbb
lods
push
xchg
out
test
in
subl
push
jle
mov
mov
movsl
cmpsb
dec
pop
shr
jmp
xchg
dec
daa
jb
outsb
cmp
scas
test
jl
bound
dec
mov
cmp
movsl
lea
shll
mov
dec
lahf
or
push
fsts
test
int
scas
inc
mov
mov
pop
mov
out
js
test
push
imul
repz
xor
outsb
sbb
xor
cwtl
sbb
ficomps
adcb
lret
sbb
mov
xor
jae
int
lods
jne
bound
sbb
cs
das
fdivrl
test
sub
mov
test
fildl
mov
in
jnp
mov
fnsave
cmpsb
mov
mulb
es
ss
cmp
cmp
or
notl
sbb
push
sub
fs
push
and
out
ljmp
mov
imul
jb
stc
shll
fstps
mov
mov
fwait
out
out
push
stc
cli
sub
scas
sub
jl
xchg
or
imul
pop
add
loopne
lods
mov
jb
push
adc
adc
je
mov
add
mov
iret
sbb
adcl
sub
enter
sbb
sti
xchg
scas
xlat
cs
or
push
nop
out
fimull
push
clc
add
loope
fnstenv
mov
dec
leave
loopne
or
jnp
pusha
xchg
push
fstps
jge
and
add
cwtl
mov
inc
cwtl
dec
cmp
aas
ds
repz
popl
dec
fwait
mov
aaa
jecxz
adc
repz
add
sbbb
sbb
mov
movsb
add
push
scas
jle
push
aaa
orb
fst
lock
mov
das
sub
lret
mov
ror
xor
dec
jmp
jno
fldl
cmpsl
jno
push
icebp
mulb
sub
push
fistl
and
add
ljmp
xchg
js
push
xchg
rcl
mov
adc
push
add
push
lea
fstpl
push
lods
xchg
add
jb
testl
xor
and
jge
dec
rol
xchg
arpl
orb
push
jae
sbb
xor
or
xchg
xor
xchg
test
sub
pop
adc
push
stos
lods
lods
cwtl
push
lcall
add
repz
and
dec
cmp
mov
in
and
pop
popa
outsb
and
insl
or
push
cwtl
inc
roll
fwait
mov
pop
jne
mov
and
add
pop
bound
jns
aam
in
leave
mov
add
out
out
add
int
mov
pop
rcll
sub
mov
cmpl
pop
stc
mov
xchg
push
in
cwtl
fisubs
pop
filds
lods
adcb
sub
test
add
popf
xchg
and
jae
cmc
stos
je
mov
cld
jmp
jnp,pn
mov
jns
xchg
dec
insb
adc
iret
add
icebp
dec
pop
shrl
inc
or
dec
jae
fildl
lcall
push
mov
inc
cltd
scas
mov
xchg
iret
icebp
inc
sbb
cltd
inc
imul
push
movsl
rolb
or
les
hlt
out
mov
adc
push
jbe
push
scas
jge
negb
xor
out
or
add
ret
and
pop
ljmp
xor
inc
push
push
imul
fsubs
or
cmpsb
int3
insl
mov
shlb
enter
daa
jno
idivb
xor
mov
loop
in
jl
cmp
das
insb
jg,pt
push
sub
sub
and
cwtl
sahf
lea
jecxz
out
or
fistpll
cmp
pop
and
push
pop
adc
and
cmp
clc
and
adc
jae
orl
mov
mov
push
test
popf
sub
inc
loope
pop
insb
gs
add
sub
cmp
test
ret
mov
push
outsl
xchg
mov
jae
mov
mov
inc
mov
xor
stos
xchg
cmp
ds
test
inc
outsl
sbb
or
sub
sbb
movsb
icebp
into
dec
xchg
fcomip
pop
sbb
xor
rolb
loop
xlat
jl
lea
mov
sub
sbb
sub
and
push
jl
cli
pusha
in
loop
mov
repnz
dec
xchg
pop
daa
mov
gs
out
push
dec
adc
frstor
imul
mov
pop
add
incl
sbb
mov
sub
cmpsb
and
inc
popa
daa
sti
inc
dec
pop
cs
xlat
aam
mov
loopne
dec
mov
inc
inc
or
push
fldlg2
lds
adc
sahf
repz
xchg
gs
pop
lea
dec
call
pop
mov
adc
pushf
mov
shr
add
flds
xlat
repz
push
adc
aas
mov
dec
adc
cltd
je
popf
jbe
cwtl
and
aas
jmp
push
pop
mov
shr
mov
push
mov
dec
stc
mov
mov
jp
jmp
sahf
sub
or
mov
fldt
and
inc
enter
in
mov
pop
insl
fcmovnbe
dec
roll
xchg
mov
int
pusha
cld
adc
lret
jae
mov
sbb
imul
into
jne
adc
outsb
rcl
jge
ss
loop
icebp
push
push
mov
fprem
lods
push
cmp
push
lret
popa
sub
pop
cld
mov
lods
cwtl
push
xchg
stos
xor
push
popa
in
cmp
add
inc
outsb
test
xor
mov
int
xchg
and
test
cmp
xchg
or
pop
mov
sahf
sub
cmp
and
add
push
lahf
jmp
cli
or
cmp
xor
cwtl
andb
iret
add
sbb
ja
inc
mov
jae
inc
pop
pusha
cltd
or
and
sub
dec
leave
jne
das
mov
and
shr
pushf
stos
idiv
xchg
jns
cmc
xchg
in
adc
dec
loop
out
mov
sub
mov
xchg
rorb
jp
fisttpl
mov
out
mov
adcb
in
inc
pop
pusha
and
inc
fbld
dec
dec
xchg
stos
rcrb
push
sarb
andl
test
scas
inc
enter
lds
cmp
and
or
insb
stc
xor
scas
movsl
clc
dec
push
fmull
ss
fs
int
xchg
ja
pop
or
inc
pop
cmp
jae
clc
insl
inc
out
xor
push
sbb
fimull
ss
es
scas
sbb
aas
xchg
imul
fiadds
pusha
mov
pop
lret
nop
mov
lods
aad
leave
dec
dec
mov
xor
cwtl
arpl
mov
inc
jge
sbb
jmp
sub
add
lcall
out
jecxz
sbb
out
push
pop
shlb
dec
jae
jo
pop
or
cld
int
cmp
out
movsb
mov
xchg
in
mov
out
enter
daa
jo
cmp
cmp
jl
into
pop
dec
jle
jns
mov
test
and
adc
jg
repnz
arpl
inc
stos
sbb
mov
push
pop
fmul
in
dec
xchg
push
jbe
loope
popf
inc
sub
test
push
outsb
fidivs
loop
dec
xor
pushf
xor
sbb
xchg
repz
mov
xor
fadds
mov
popa
sub
adc
fcoms
fs
fcompl
fcoml
dec
sahf
push
mov
test
add
push
jg
shl
mov
xchg
arpl
in
mov
rclb
in
stc
xor
lret
and
mov
mov
or
mull
les
push
lret
push
ret
adc
inc
jno
stc
inc
add
adc
add
xchg
and
das
ret
dec
out
jbe
cli
xchg
jbe
xor
leave
or
add
gs
stc
pop
pop
mov
adc
inc
adc
mov
xchg
ret
sbb
stc
filds
sub
add
in
scas
jnp
sti
repnz
and
dec
ficoml
adc
lock
sbb
movsb
fldenv
in
scas
les
xor
push
or
arpl
xlat
sub
pop
in
push
adc
fwait
sub
pop
insl
pop
push
mov
jge
insl
inc
ds
jl
mov
mov
dec
mov
je
jmp
movsb
testb
push
cwtl
dec
push
pop
mov
mov
subl
inc
dec
lods
aas
mov
sub
lock
fwait
sbb
call
cmpsl
inc
mov
out
add
ljmp
insl
stos
push
xchg
dec
into
dec
pop
cmpsl
outsl
mov
mov
movsb
inc
jae
cmp
lret
xor
cmc
pop
and
cmp
or
pop
mov
shr
add
inc
in
jae
dec
icebp
imul
outsb
cmc
push
adc
fucomp
xchg
sar
out
cmc
xchg
xorl
add
and
jo
out
andps
xchg
icebp
ss
bswap
sub
cltd
xchg
adc
mov
rorb
adc
inc
test
dec
roll
clc
dec
roll
loopne
pop
push
add
loopne
dec
add
push
iret
daa
incl
fdivl
lret
hlt
mov
xchg
xor
or
jne
dec
clc
leave
mov
out
or
xlat
addr16
xor
je
out
pop
in
aas
dec
aas
fwait
pop
mov
dec
movsb
mov
fidivl
mov
xor
and
popf
xchg
sahf
ud0
rcl
sub
lods
dec
or
jp
mov
bsf
shll
pop
xor
pop
pop
push
pop
pusha
mov
cmc
clc
xchg
jge
or
pop
lods
adc
sbb
xor
mov
popf
aad
push
mov
icebp
inc
mov
and
dec
jle
fs
jnp
arpl
or
cmp
adc
jmp
movsb
xor
pop
aas
mov
aas
jae
push
pop
inc
ljmp
push
xchg
ret
and
mov
out
sbb
mov
cmp
vpaddw
sarb
mov
lcall
cwtl
leave
les
hlt
jl
push
arpl
xchg
ret
jbe
pop
jns
and
sbb
sbb
or
lret
roll
cmc
jp
int3
mov
cmp
jg
jo
pusha
mov
into
dec
cmp
aam
movsb
sub
push
xchg
inc
jae
shl
arpl
sahf
jmp
int
outsl
xor
cmp
mov
jg
in
out
ds
movsl
mov
adc
lahf
xchg
push
push
jg
test
mov
inc
cmp
pop
call
out
pop
mov
mov
test
sub
mov
cmp
inc
insl
mov
shrb
fildl
orb
sbb
xor
xor
inc
push
mov
pushf
int
pop
xor
shll
pop
push
inc
mov
push
xor
fdivrl
mov
add
jmp
mov
xchg
cmp
mov
in
mov
aas
mov
or
and
lds
adc
aad
fdivs
mov
sarl
and
ss
adc
add
xor
xchg
xchg
loop
ds
stc
sti
sbb
add
aas
adc
js
orb
hlt
jmp
mov
xor
icebp
cmp
jo
or
cs
insl
insb
shlb
jle
mov
adcl
pop
jle
adc
inc
or
jge
bound
imul
mov
adc
jno
mov
xchg
in
sbb
sti
mov
dec
adc
inc
popf
rclb
jae
cli
inc
cs
inc
fstps
add
mov
imul
call
push
cmp
pop
adc
cmp
jmp
jecxz
pop
cli
loop
inc
sub
mov
jb
adc
dec
add
push
je
mov
jecxz
add
inc
std
cmc
mov
inc
mov
int3
xor
rorb
iret
int3
clc
fcmovnu
jg
mov
jle
mov
push
lock
pop
and
dec
dec
push
and
sub
es
cld
lcall
mov
test
xor
icebp
jnp
inc
cld
addr16
lret
movsb
lock
mov
lea
sarl
pop
ja
pushf
sarb
push
daa
aam
cmp
ret
add
data16
enter
lret
xchg
xchg
shlb
popa
pop
fwait
subb
gs
jb
adcb
aaa
adc
sub
and
cltd
enter
or
lcall
mov
ja
subb
imul
and
dec
pop
adc
int3
push
push
xorl
add
mov
loop
loop
push
popa
cmpsl
or
add
push
scas
mov
mov
sbb
mov
inc
jmp
lock
cmpsl
test
or
dec
loope
mov
or
jns
mov
mov
sub
sbb
and
movsb
jl
in
adcb
in
or
or
inc
jbe
loopne
fnsave
adc
xchg
mov
repz
cmp
or
or
xchg
push
mov
jmp
out
push
add
notl
addr16
jae
cld
cmp
mov
xor
js
int
std
and
xor
and
call
mov
push
test
iret
and
ret
outsl
pop
jbe
repz
sub
addr16
inc
in
movsb
ss
mov
sub
outsb
sbb
repz
push
lea
roll
lds
insl
rclb
push
repnz
xchg
mov
cmp
outsl
hlt
cmp
out
cmpb
mov
aaa
sbbb
add
icebp
pop
ja
and
xor
push
jnp
scas
mov
loopne
and
sarb
movsl
xchg
movsb
mov
dec
push
loope
sbb
in
test
hlt
enter
daa
outsb
push
push
cmp
xchg
std
mov
dec
pop
ljmp
test
daa
lcall
and
cmp
push
stc
add
inc
enter
aaa
rol
pop
es
js
loope
loopne
in
mov
loope
xlat
pusha
sub
jo
cmp
push
mov
fdivr
fcmovbe
add
pop
pop
adc
sbbb
fs
add
add
repz
ds
mov
jge
dec
in
pop
je
lcall
ljmp
sahf
push
andb
cld
dec
mov
mov
push
mov
jmp
in
pop
mov
out
outsl
out
testl
pop
rcl
sub
lahf
mov
sbb
xchg
and
insb
mov
outsl
push
movsl
loop
inc
mov
fs
shll
xchg
mov
mov
cmp
out
testb
movsb
sbb
cmp
out
fisttpl
cwtl
mov
push
gs
mov
pop
out
push
test
imul
roll
mov
sbb
outsl
jp
xlat
iret
dec
xchg
xchg
in
test
sti
push
mov
cs
rcl
nop
pop
push
dec
shlb
pusha
fsts
pop
mov
inc
outsb
data16
outsb
cmpl
dec
andb
int
pop
enter
cmp
pushf
mov
lock
das
mov
popf
add
inc
mov
stc
jecxz
jl
push
dec
ja
pop
je
jle
jecxz
fst
testb
inc
std
pushf
adc
xchg
mov
dec
hlt
dec
mov
and
mov
inc
and
lock
pusha
das
cmpsb
in
and
add
and
mov
adc
insl
jns
out
les
push
insw
lret
imul
mov
push
mov
sub
sbb
xchg
mov
sub
aam
aam
fcmovb
ret
jmp
push
cltd
sub
fnstsw
loope
clc
pop
xchg
xchg
lcall
lods
popa
jb
inc
lods
aas
push
mov
aad
xchg
repnz
lcall
lods
outsl
cltd
lcall
mov
cmpsl
mov
dec
ficoms
test
xor
rcrl
aad
and
mov
fstps
xchg
stos
imul
cmp
add
std
outsb
xor
orl
fisubrs
xor
mov
inc
mov
mov
pop
dec
mov
ja
in
dec
lcall
or
sbb
fwait
mov
xor
push
xor
mov
int3
cs
jge
bound
das
dec
in
jmp
xchg
cmp
shl
xlat
imul
add
or
or
jp
mov
or
cmp
inc
and
push
jp
into
movsb
xchg
pusha
cmc
push
fistpll
lds
dec
addr16
xchg
mov
outsb
adcl
push
sub
lock
outsl
ljmp
pop
cmp
jnp
xor
scas
into
std
cmpsl
push
mov
pop
adc
adc
sub
mov
inc
cmp
sbb
lock
or
or
push
inc
xchg
call
stos
xchg
sub
sbb
sub
fsubrp
ljmp
mov
sarb
movsl
inc
or
es
adc
arpl
and
jge
fxch
sbb
lcall
popa
cltd
add
je
int3
scas
inc
iret
pop
cmpsb
mov
ljmp
test
and
mov
xchg
cmp
movsb
inc
push
movsl
push
xor
in
in
insb
out
in
enter
daa
insl
notb
add
mov
ds
jl
cmpsl
scas
dec
lret
mov
or
repnz
mov
jmp
mov
popa
rclb
add
push
leave
sbb
push
cmpsb
cli
movsb
ss
dec
ret
aam
sti
fdivrl
pop
pop
add
push
int3
dec
loope
sub
sub
adc
cmp
cmp
fildll
mov
dec
rcrl
out
add
sub
xor
inc
mov
xchg
stos
dec
adc
pop
push
sub
push
loope
data16
shrl
stc
gs
pop
jae
jg
adc
xchg
mov
sub
and
lods
ss
sti
dec
cmp
sub
adc
adc
shrl
mov
fadd
into
fcmovne
mov
xor
arpl
ds
stc
jne
stc
imul
mov
sbb
lods
inc
mov
pop
out
jl
cli
sub
movsl
xor
aad
push
aas
out
or
fldcw
rclb
lods
loopne
adcl
xchg
imul
outsb
add
dec
sbb
cmp
cmpsb
stc
sub
movzwl
out
ret
jmp
orb
nop
shlb
xor
loope
push
xchg
les
cs
jno
mov
or
insb
push
push
in
pop
jnp
mov
pushf
pusha
or
jmp
aas
add
inc
cmp
outsl
inc
mov
stos
sti
jb
imul
movsl
arpl
sbb
aam
dec
testb
std
inc
push
pop
cwtl
jns
xchg
mov
jle
mov
scas
sub
pop
popa
fstpt
sti
movsl
mov
adc
lock
or
das
test
sbb
mov
xchg
rcl
dec
in
lcall
dec
mov
pop
aas
mov
sub
mov
jge
mov
xor
les
mov
out
popa
mov
sub
int
ret
push
nop
xchg
push
pop
cmp
pusha
fsubrp
clc
cwtl
xlat
cmp
ljmp
fildll
mov
pop
xchg
mov
int
jmp
mov
cltd
ss
jge
and
test
outsl
loope
inc
fimull
xchg
xchg
or
mov
imul
or
push
leave
pop
roll
movsl
scas
xchg
jmp
out
jb
aad
or
pop
mov
mov
cmp
mov
or
dec
jmp
inc
mov
pop
or
shlb
jmp
push
mov
nop
or
bound
loopne
inc
loopne
in
xchg
mov
cltd
out
out
sub
sahf
cmp
addr16
push
push
jp
mov
lret
ja
mov
pop
mov
vaddsd
aad
addr16
nop
loope
fistps
push
jmp
jl
xlat
and
inc
push
in
das
xor
xor
sbbb
out
and
push
insb
movsl
cmp
push
scas
xor
ret
jb
iret
loopne
sti
ret
push
pop
in
dec
inc
inc
aad
jae
out
inc
repz
mov
mov
jp
inc
adc
jp
aam
jb
andb
mov
imul
ficoms
cs
lret
aaa
out
mov
clc
and
hlt
pop
lret
pop
add
jbe
leave
lret
mov
xlat
sub
stos
test
stos
mov
mov
lcall
push
out
sahf
xor
pop
in
push
scas
je
push
and
mov
movsb
int3
rorl
jg
mulb
push
enter
mov
stos
cmp
sub
jno
jmp
dec
cmp
add
movsl
mov
push
and
xchg
lahf
aam
push
lret
jp
test
out
inc
out
mov
pop
je
mov
ja
pop
pop
cmp
mov
xchg
mov
lret
cmp
imull
inc
bound
mov
pop
inc
addb
imul
and
xchg
cmp
int
adc
inc
xchg
pop
aam
lcall
lock
arpl
push
mov
sahf
lcall
xorb
push
jg
mov
mov
adc
mov
movsb
mov
and
fidivs
mov
in
ljmp
inc
mov
call
xchg
mov
jb
add
into
mov
imul
outsl
stos
outsl
int3
sbb
loop
fists
fs
shlb
mov
ds
mov
lods
sub
add
out
xchg
cli
pop
mov
sbb
fs
or
mov
gs
flds
add
adc
test
adc
pop
rolb
push
gs
into
xor
cmp
fs
insl
sub
mov
pop
sub
dec
jecxz,pn
outsl
aad
imul
addr16
fcos
icebp
cmpsb
les
fs
cli
je
push
lea
jl
inc
in
pop
sarl
pop
cs
adc
in
mov
jmp
adc
pop
jecxz
dec
inc
ret
inc
mov
clc
pop
jb
addr16
dec
gs
fbstp
pushf
jecxz
pop
lcall
jp
cwtl
xor
and
mov
lods
dec
nop
pop
jns
insb
lods
fisttpl
int3
jnp
lock
outsl
das
mov
cmp
outsb
loopne
and
jns
shll
div
es
ljmp
imul
int3
lds
add
jnp
icebp
jmp
lds
movsb
popw
aam
rcl
xor
mov
aam
adc
ret
lods
js
push
pop
mov
jge
sarl
pushf
ljmp
mov
mov
fwait
leave
popa
xchg
or
pop
cmovs
filds
mov
stos
cltd
insl
mov
lds
xchg
nop
ret
dec
lods
inc
aaa
test
insb
leave
xchg
shr
sbb
mov
shll
dec
pop
push
popa
xchg
insb
pop
add
xor
shlb
mov
fidivs
arpl
xor
movl
mov
ret
dec
add
cmp
inc
dec
mov
ds
sbb
dec
xor
xchg
mov
pop
sub
cmp
mov
pop
jns
xor
in
je
xchg
fisubrl
fst
es
cltd
mov
addr16
sbb
jp
push
add
mov
lods
cmp
in
cmp
sub
mov
mov
or
aad
push
mov
rcrl
cmp
push
in
sahf
pop
stos
fidivs
xchg
lods
jnp
adc
push
aas
lea
jg
arpl
aas
out
ret
bound
or
jae
or
sbb
add
push
inc
xchg
sbb
inc
xchg
fnstcw
sbb
out
imul
loope
xor
inc
lds
inc
mov
dec
cmp
mov
nop
sub
add
jbe
push
mov
addr16
aaa
jb
popf
or
int3
test
pop
add
out
leave
jp
xor
bound
scas
push
push
imul
lret
movsb
push
test
cmpsb
fisubrs
cmp
jmp
imul
cmp
jmp
jl
pop
dec
dec
test
sub
movsl
mov
fstps
push
sahf
ss
xchg
lock
push
pop
push
repz
jne
inc
subb
js
movsl
sti
pop
popf
cli
shrl
fists
sub
shrb
cmp
mov
outsb
int
pop
adc
xchg
inc
xchg
xchg
les
or
repnz
lds
xchg
in
into
int
push
sub
and
lcall
out
fsubr
mov
inc
sahf
cmp
nopl
xend
mov
xor
and
mov
ss
fistpll
mov
lret
ffreep
xchg
xor
mov
jmp
xor
pop
cmc
sarl
lret
xlat
outsl
stos
cli
mov
pop
jge
stc
xlat
faddl
fs
imul
add
cmp
push
inc
pop
out
adc
cli
xchg
mov
xor
incl
or
xchg
sub
stc
mov
out
loopne
cwtl
fstps
repnz
adc
lret
lods
pusha
add
mov
add
mov
sti
sub
cld
jb
adc
xchg
pop
add
cs
lcall
in
cmpsl
dec
out
es
jp
xchg
fnstenv
dec
or
push
lret
mov
lods
ja
lea
mov
popf
jae
loope
or
pushf
mov
jmp
stos
mov
inc
dec
cmp
inc
hlt
jb
aas
xchg
pop
fdivl
xchg
int
fdivrl
jecxz
std
lods
not
enter
adcl
out
cmp
mov
out
push
mov
push
jo
jnp
imul
mov
dec
in
lgs
das
inc
add
movsb
mov
mov
popf
out
shll
cmp
insl
cs
cli
dec
mov
jmp
push
fdivrl
xlat
aaa
mov
adc
adc
mov
inc
in
mov
repz
fildll
adc
arpl
aas
scas
jns
cmp
fsts
mov
xor
xchg
mov
cmc
pop
popa
mov
push
lods
andb
jmp
dec
xchg
xchg
push
xor
xstore-rng
cmpsl
pop
or
cltd
movsb
mov
inc
mov
out
xchg
out
cld
gs
xchg
and
sarl
dec
popf
stos
ss
add
and
add
push
sar
ficomps
or
inc
inc
xor
int3
add
mov
pop
cwtl
mov
jle
cld
ja
daa
fimull
fistpll
xchg
fwait
inc
repnz
mov
jne
mov
jmp
sbb
jns
sub
lds
pusha
cmp
sub
xchg
mov
sub
mov
hlt
mov
sbb
scas
jle
pop
pmulhw
xchg
fisubrl
xchg
pushf
add
bound
push
inc
push
jae
pop
popf
cwtl
fsts
mov
sub
lods
stos
cltd
mov
and
mov
push
scas
notl
insl
adc
cmp
sahf
push
push
pop
push
mov
cli
jae
ja
inc
stc
mov
or
jnp
jp
adc
mov
xchg
xor
lahf
sbb
test
imul
std
imul
rolb
push
mov
sahf
adcl
arpl
dec
jbe
push
popf
jge
popf
ficomps
dec
aaa
aad
jl
sub
nop
mov
call
adc
pop
xor
push
lods
adc
in
jo
lods
adc
xor
push
cmp
pushf
mov
cmpsb
popa
lods
mov
and
call
daa
push
xor
jno
push
push
test
pushf
sarl
je
loopne
lds
cmp
lea
fcoml
es
test
and
cmc
and
inc
fcoms
js
addr16
push
ja
loope
sti
jo
mov
lea
sarl
xor
clc
push
rcl
jo
mov
subb
mov
xchg
inc
xor
in
inc
push
lcall
sub
jp
pop
shlb
lcall
rcr
xchg
or
fcomps
mov
add
scas
jl
mov
mov
mov
scas
out
sahf
int
ss
cmp
pop
inc
leave
testl
movsl
shrl
inc
sbb
pushf
into
test
mov
xor
outsl
mov
xor
mov
xor
mov
sbb
pop
adc
in
data16
fldenv
out
es
cli
lds
xor
sub
sbb
push
gs
icebp
loopne
sarl
cs
xchg
imul
adc
dec
dec
xchg
push
push
add
pop
lahf
mov
sub
cmc
mov
xor
sti
or
shrl
test
pop
nop
cmp
dec
dec
stos
pop
inc
repnz
insl
dec
les
adc
addb
lea
mov
sarl
stc
pop
xchg
cs
fsubrl
pushf
popa
mov
add
lcall
sarb
inc
nopl
jb
stc
lds
mov
adc
add
je
adc
cmp
cmp
cwtl
stos
push
ja
pop
inc
in
mov
mov
loopne
lret
mov
jnp
lock
das
and
mov
fsubl
sbb
test
rol
sbb
insl
adc
jnp
imul
lret
iret
add
iret
push
dec
mov
dec
jne
mov
adc
rcr
xor
sub
push
call
or
rcll
ret
sub
or
ljmp
or
call
in
fwait
nop
rcll
ss
or
push
cltd
test
xchg
mov
sub
fwait
mov
test
repz
adc
sbb
call
pop
stos
and
addb
xor
add
inc
stos
std
fldt
or
adc
and
inc
mov
xor
aaa
pop
cmp
ja
fisttps
out
inc
jns
fisttps
test
xor
shrl
insb
pop
fidivl
stc
xchg
andl
lret
stos
dec
jnp
js
mov
jecxz
stos
sub
pop
add
inc
imul
xchg
inc
mov
mov
jle
add
ljmp
sub
test
daa
mov
xchg
fldl
call
popf
mov
or
imul
or
inc
and
cli
jnp
add
pop
pop
ss
int
xchg
adc
out
dec
ret
mov
inc
fs
jae
and
inc
cld
sbb
or
notb
lods
sub
lahf
sbb
mulb
imul
fidivrs
mov
adc
cmc
rcrb
mov
icebp
xchg
leave
mov
arpl
dec
xchg
jge
cld
cmpsl
sbb
fwait
mov
or
push
add
pop
stos
inc
pop
bound
push
movsb
les
sbb
fs
adc
and
push
mov
cmp
add
insl
or
insb
dec
pop
cmpsb
in
jle
or
mull
imul
add
iret
dec
xchg
ds
add
movsl
int3
inc
xor
sub
test
inc
dec
in
test
lock
inc
xchg
pop
dec
push
jl
pop
jmp
mov
dec
push
ret
lds
fbld
outsb
xchg
mov
adc
dec
je
xor
push
repz
pop
add
or
xor
stos
add
popf
decb
mov
pop
pop
push
sub
push
cmp
xor
sub
mov
test
jecxz
jg
cld
bound
or
mov
and
mov
cmp
push
dec
shl
or
add
xor
fisttpl
sbb
inc
sbb
dec
adc
xor
mov
sbb
inc
push
adc
inc
push
jmp
jo
xchg
mov
or
mov
push
cli
clc
out
xor
jne
dec
loopne
ret
pop
cmp
repz
gs
sub
loopne
movsb
pop
mov
adc
push
imul
push
dec
xchg
pop
xchg
or
xchg
sbb
sub
mov
loopne
fwait
fs
mov
jnp
aad
mov
lret
dec
lods
xor
inc
mov
out
jl
imul
jge
test
mov
and
push
push
pop
inc
pop
mov
pushf
or
jns
js
lret
pop
int3
loopne
inc
push
and
inc
sub
repnz
aad
call
dec
lret
je
das
adc
loop
push
mov
std
filds
cwtl
gs
mov
sbb
mov
orl
nop
mov
adc
lds
xchg
mov
xchg
cmp
adc
insl
cld
mov
xor
gs
out
test
aas
cld
imul
and
push
imul
pop
xor
shrb
dec
dec
aam
loopne
ret
pop
lret
push
mov
insb
xchg
cmp
aam
in
push
lods
push
pop
mov
inc
aad
out
les
jge
loop
xor
or
pcmpgtw
icebp
add
loope
cltd
adc
ja
in
mov
dec
loope
adc
nop
fsubrl
push
and
push
xchg
jne
adc
sbbb
pop
in
add
adc
lcall
orb
mov
push
mov
dec
cmpl
hlt
xchg
ja
xchg
xchg
dec
pop
mov
push
or
lahf
cmp
dec
fld
shlb
mov
mov
push
fdivrs
bound
or
in
cmp
xchg
mov
arpl
mov
jne
adc
inc
mov
cli
imul
push
in
mov
dec
fistps
lock
push
outsb
ficoml
sbb
popf
out
jns
mov
lret
push
stos
or
stos
jg
std
and
or
adc
scas
mov
jae
adc
mov
imul
sar
inc
outsl
mov
jae
push
push
inc
push
sub
jno
test
dec
imul
fisubrs
imul
dec
ficomps
cmp
shlb
cmp
movsb
xchg
jnp
inc
mov
leave
add
fistpl
jbe
mov
jge
ds
aaa
cli
cmc
mov
add
pop
jg
inc
push
adc
xchg
inc
jns
jb
leave
xor
jae
cmp
and
xchg
jmp
pusha
in
out
adc
enter
daa
push
in
jno
les
dec
testb
shr
push
and
inc
ret
leave
fs
pop
mov
dec
push
mov
pop
mov
leave
xchg
out
pop
adc
test
test
pop
pop
dec
dec
push
ret
lock
sub
movsb
daa
cmp
push
dec
outsb
notb
adc
xchg
into
shlb
test
lock
pop
sbb
shll
xor
lods
call
int
iret
in
sub
mov
push
lcall
add
in
sbb
or
push
sahf
es
pushf
cli
xchg
sbbb
clc
mov
aam
mov
or
ss
fcom
out
test
fs
mov
mov
sbb
inc
pushf
cmc
push
repz
xor
push
movsb
outsl
dec
mov
loop
lea
cld
test
fs
sub
adc
data16
jb
leave
mov
movntq
add
sub
mov
inc
cmc
loop
sub
or
push
bound
cmc
gs
test
cld
pop
test
jmp
sub
js
sbb
ret
adc
push
add
inc
xchg
fimull
sbb
shrl
xlat
dec
adc
sub
cmpsb
xor
push
pop
sar
push
xor
outsl
fstps
nop
jge
sub
rorb
ds
push
repz
lods
movb
sbb
cs
iret
adc
cli
cmp
adc
cs
pop
outsl
mov
inc
fisubrs
pop
inc
inc
mov
aas
je
divl
pop
or
je
sbb
jecxz
and
lcall
cwtl
and
mov
jae
mov
mov
dec
cmp
daa
fldt
cmc
mov
arpl
xor
call
dec
in
loopne
jg
pop
sub
mov
ds
xchg
bound
sub
jecxz
cmpsb
xor
cmpsl
sbb
mov
pop
dec
cmp
dec
xchg
lret
lods
inc
pusha
mov
push
shll
adc
pop
push
insb
fcom
and
sub
jmp
aam
ja
ret
jmp
dec
mov
clc
mov
and
ljmp
test
shll
out
daa
jg
xchg
sub
push
adc
mov
les
xchg
fsubr
out
dec
mov
xchg
mov
mov
xchg
imul
call
iret
sarl
sti
xchg
stos
add
push
add
sub
lcall
pop
ret
or
jno
xor
aam
mov
mov
mov
scas
insl
pop
ja
dec
dec
adc
inc
cmpsl
pop
testb
jp
aam
sbb
sarl
push
push
daa
bound
push
dec
jns
out
into
in
jbe
xchg
push
or
out
sbb
sub
test
addr16
je
jp
sub
mov
ja
aas
mov
imul
in
out
outsl
pusha
xchg
pop
popa
fbstp
mov
xchg
adc
cmc
ficoml
arpl
push
mov
lods
out
sub
stos
repnz
leave
insb
mov
add
scas
and
rclb
cmpsb
adc
jge
iret
mov
push
add
xchg
imul
jae
dec
test
or
in
mov
inc
mov
ficoml
fwait
xchg
xor
push
push
imul
faddp
jl
lds
cli
fcmovnb
push
inc
mov
inc
fstpl
repnz
xchg
mov
hlt
aam
sub
mov
jbe
xchg
cmpl
jg
jle
imul
imul
mov
xor
pop
rcr
push
push
sahf
cltd
xor
into
arpl
iret
cmc
push
and
and
movsb
sbb
push
or
pop
cmpsb
ljmp
enter
daa
addr16
cmp
xchg
inc
jno
push
in
sub
or
pop
loopne
lahf
pop
push
add
sub
adc
dec
inc
mov
inc
mov
sbbl
es
cltd
pop
pushw
jne
loope
adc
sub
cmp
outsb
pop
push
push
rolb
repnz
loope
mov
add
icebp
xor
mov
sub
aas
push
lcall
xor
xchg
std
shrl
sahf
sbb
leave
fildl
mov
pop
lods
mov
xor
mov
xor
and
stos
shlb
or
data16
movsl
lret
shl
das
mov
inc
sbb
pop
push
into
sub
aaa
push
outsl
daa
mov
je
mov
mov
add
ds
mov
lods
mov
lea
inc
je
cli
pop
in
dec
xor
xor
cmp
incb
mov
pop
cli
out
adc
clc
imul
mov
cmpsb
xchg
popf
je
sbb
or
pop
xlat
mov
sub
xchg
in
jno
sti
sbb
shrb
ss
aaa
std
nop
pop
loopew
imul
xor
fsts
and
jg
sbb
out
inc
sbb
xorl
call
dec
aas
aas
pop
lods
int
adc
cmp
pushf
bound
mov
adc
scas
inc
pusha
xchg
push
aas
adc
mov
dec
mov
pop
movsb
jecxz
ss
neg
insl
std
sub
sbb
cwtl
push
mov
cmpl
push
fistl
fimull
scas
push
mov
mov
inc
mov
leave
in
shll
add
insl
lret
dec
mov
cwtl
sub
xor
add
mov
test
mov
pop
jge
mov
outsl
jne
rclb
and
out
sub
xchg
ret
js
lret
adc
clc
cli
fdiv
xchg
mov
repnz
popa
adc
mov
mov
dec
xchg
jo
fstl
popf
dec
mov
jne
jmp
inc
cltd
xorb
test
fwait
mov
icebp
fldl
scas
mov
and
sbb
push
xchg
pop
insl
xor
stos
repnz
push
fwait
cmp
add
int
mov
adc
mov
add
lods
sub
mov
jne
mov
push
xchg
ja
push
dec
aas
aaa
lret
inc
ds
ds
pop
sti
fwait
add
inc
dec
lahf
scas
adc
sarl
mov
sbb
and
and
push
in
or
gs
movsb
out
push
mov
and
mov
xorb
jp
pop
xchg
mov
sub
push
les
xchg
mov
in
addl
dec
sub
push
orb
call
and
or
cmp
mov
jg
adc
sub
call
call
add
stc
lock
insb
daa
movsb
sbb
cmpsb
clc
scas
adcl
push
mov
push
out
sbb
xor
aad
inc
test
sbb
add
sbb
in
inc
push
test
fiaddl
mov
into
sbb
inc
movsl
imul
push
fisubs
or
test
adc
insl
mov
mov
ljmp
hlt
pop
pop
arpl
in
jge
jo
sbb
mov
js
mov
pop
xchg
add
int3
sbb
push
pop
out
cmp
cmp
xor
in
jo
push
dec
scas
scas
call
cmp
inc
movsb
push
inc
add
ljmp
mov
jnp
daa
jmpw
gs
adc
or
jl
pushf
stc
dec
aam
idivl
add
movsl
loope
into
and
xchg
push
lahf
jle
jo
mov
in
and
push
ja
inc
inc
xlat
repz
dec
pop
jmp
pop
sbb
pop
fsubrs
push
fnsave
loope
pusha
push
sub
stos
sbb
jge
shrl
mov
adc
fmull
push
aas
dec
xor
sbb
sbb
adc
arpl
imul
cmpsb
ljmp
loop
sub
push
cwtl
pop
into
nop
aas
lcall
push
faddl
jp
ljmp
test
leave
push
mov
in
jge
jno
pop
mov
mov
and
shrl
jo
imul
inc
add
mov
ljmp
sbb
enter
movsb
loopne
xor
mov
movsb
loop
pushf
push
stc
push
xor
adc
jne
lods
xchg
sub
inc
xchg
out
cli
xchg
jle
xor
dec
aam
andb
test
add
aam
loopne
sub
pop
out
aas
adc
inc
shrl
push
jl
movsb
imul
sbb
inc
add
xlat
jno
sub
fwait
test
test
dec
sti
enter
xor
mov
nop
xor
dec
lret
inc
fstps
aam
mov
repz
mov
fdivl
int
mov
pusha
adc
rcrb
lods
pop
mov
or
jno
inc
jnp
sarl
mov
aad
adc
pop
dec
das
sub
je
lock
jecxz
cs
aam
push
cwtl
xchg
test
mov
mov
mov
dec
orl
loope
fildl
mov
ss
ret
sahf
and
mov
mov
idiv
roll
xchg
andb
lret
cs
mov
xchg
dec
pushf
mov
cmpsl
gs
mov
icebp
or
mov
mov
mov
gs
mov
mov
jne
out
mov
ret
pop
sbbb
dec
sbb
mov
jnp
test
pusha
popa
sub
lods
xchg
xchg
mov
in
adc
xchg
mov
notb
add
jb
movsb
jmp
test
ds
sahf
inc
xchg
or
jecxz
shrl
rcrb
stos
loope
nop
push
ds
add
int3
xchg
jns
push
xor
push
lahf
or
shl
mov
adc
clc
mov
and
xchg
es
xor
scas
inc
aad
lcall
add
adcb
mov
out
out
jne
and
jns
movsl
add
out
jle
mov
lahf
out
mull
jnp
stos
lds
stos
dec
sahf
mov
stc
push
mov
inc
adc
mov
jge
pusha
int
pusha
fbstp
aas
xchg
mov
out
xchg
xchg
or
roll
inc
mov
mov
addr16
stos
fsubrs
and
fwait
pop
insb
xchg
lock
jnp
adc
push
jmp
inc
push
iret
jns
into
ret
cli
pop
gs
inc
nop
or
test
or
ja
nop
dec
sbb
cmpsl
cmp
lea
xchg
jecxz
push
sbb
add
adc
push
clc
cmp
das
mov
es
cmp
push
insl
hlt
push
mulb
mov
mov
sbb
icebp
daa
aaa
aaa
pop
jo
dec
flds
int3
pop
dec
mov
push
sbb
xor
test
out
fcomip
and
test
adc
pop
movsb
cltd
incb
cmpsb
lock
pusha
enter
daa
gs
xlat
cmp
loop
jl
pop
popf
dec
inc
je
and
and
mov
test
sbb
les
stc
stos
adc
test
pop
pop
mov
loope
sarl
in
jmp
outsb
pop
out
in
adc
mov
or
addb
pop
sbb
xchg
sub
push
test
aaa
sbb
pop
dec
retw
lcall
out
fsubr
push
hlt
sub
pop
gs
bswap
dec
test
push
sub
cmp
and
mov
inc
pushf
mov
pushf
cmp
cmp
ss
jo
repnz
mov
add
div
push
pusha
lret
clc
shll
inc
mov
and
sbb
sbb
repz
hlt
cmc
imul
xor
xchg
inc
outsl
in
jecxz
xchg
jb
stc
and
popa
fs
loop
adc
hlt
shll
xlat
xchg
clc
hlt
ja
inc
cmp
cli
int3
cmp
cwtl
aas
or
sar
lret
pop
sub
jg
loopne
mov
int3
adc
repz
addr16
adc
pop
xchg
and
inc
sbb
or
xlat
push
call
outsl
mov
inc
inc
jmp
cs
lods
mov
or
inc
nop
push
aas
daa
dec
sub
inc
in
mov
flds
adc
lea
lea
insb
call
dec
sub
adc
xor
in
pop
pop
out
pop
inc
jae
or
mov
test
mulb
dec
cmpsb
popa
cmpsl
je
dec
push
mulb
std
jnp
adc
push
pushf
pop
mov
js
cmpsb
jge
dec
std
mov
adc
lock
movsl
mov
outsl
add
and
pop
mov
dec
sbb
push
insl
cwtl
data16
xchg
rcrb
fs
mov
loope
cmp
inc
mov
cli
push
push
mov
insb
and
mov
lods
xchg
jnp
stc
outsb
xchg
sub
popf
xor
add
ret
xchg
inc
ja
je
mov
cwtl
xlat
xchg
jo
lds
into
sub
popa
inc
jp
lods
add
shr
push
dec
adcb
jg
psraw
add
dec
or
js
sub
and
push
dec
jge
aam
fisubs
xchg
stc
rol
dec
mov
stos
shlb
aam
cmc
push
add
jge
adc
sbb
xor
or
insb
mov
push
cmp
mov
loopne
push
ja
lcall
insb
mov
pop
mov
popf
dec
gs
jne
pop
in
mov
les
fcmovnbe
mov
std
jne
in
sub
xchg
add
arpl
jbe
outsl
les
outsb
jp
jmp
gs
mov
and
pushf
jns
or
lods
fists
xchg
jmp
aam
pusha
sbbl
push
add
andb
cmpsb
aam
stos
dec
dec
pop
and
imul
jnp
cmp
popf
push
xor
adc
iret
fmul
pop
ret
mov
cmp
inc
fwait
int
jae
test
inc
or
cltd
or
pop
dec
inc
or
adc
insb
shrb
sbb
fwait
cmp
adc
lds
sarb
leave
es
jge
leave
loope
fdivp
mov
sbb
subl
sbb
adcb
jb
addr16
repnz
push
mov
sbb
into
enter
jae
loopne
cmp
push
xchg
cli
ret
cmpsb
jae
jg
mov
pop
daa
idivl
cmp
fisttpll
jl
call
push
ds
into
mov
and
aaa
aas
lahf
mov
or
test
out
lahf
inc
pop
pusha
pop
aad
or
mov
mov
push
enter
push
sub
add
cmp
aaa
inc
outsb
andb
adc
xchg
inc
testl
mov
add
inc
ja
or
push
lods
cltd
adc
mov
dec
sub
popl
int3
mov
push
push
lock
fisubrs
enter
mov
jle
mov
jb
jg
mov
mov
rorb
scas
push
and
jmp
divb
fcmovnu
mov
pavgb
sahf
les
mov
jmp
int
enter
xor
int
cmc
xor
xor
mov
loop
jl
stc
fcomps
fs
adc
sub
inc
data16
mov
mov
inc
pop
out
data16
cli
idivl
cmp
pop
nop
or
aas
sub
out
out
cli
adc
add
and
xchg
js
sbb
cmp
add
cmpsb
rcrl
cs
xlat
inc
loop
sub
cmp
push
sti
fimuls
aad
arpl
nop
jmp
sbb
inc
incl
fnstenv
out
or
pop
loopne
mov
aaa
call
lret
loop
pop
mov
adc
dec
in
pushf
arpl
fs
sti
xchg
movsl
inc
cli
inc
popf
inc
mov
in
aas
lock
mov
dec
sbb
adc
xor
imul
and
lcall
xor
cmpl
jge
mov
pop
mov
mov
fwait
mov
es
mulb
adc
movsl
es
push
cwtl
dec
xchg
test
arpl
mov
cld
inc
inc
fmul
imul
jecxz
jae
aas
mov
int3
test
ror
mov
sub
lret
test
int3
sbb
ret
and
sbb
fnstsw
lods
adcl
pop
mov
popa
mov
mov
pop
xchg
inc
cli
jecxz
orb
cmovo
fcomps
adcl
xchg
mov
test
push
ret
call
hlt
pop
outsb
xor
mov
test
add
cwtl
mov
xor
mov
int3
mov
xchg
lret
in
hlt
bound
sarb
and
fildl
inc
add
dec
or
fpatan
fwait
nop
scas
mov
dec
xor
mov
mov
out
xor
bound
loope
mov
adc
in
mov
mov
cmc
mov
sbb
addr16
or
jp
cmp
lahf
mov
and
jb
adc
mov
fbstp
imul
xchg
lahf
subl
enter
test
push
jns
in
clc
stos
mov
pop
or
push
jnp
das
xor
ja
inc
adc
lcall
ret
shll
cmpsb
out
jae
lret
movsb
inc
push
add
fsubr
inc
mov
jg
xchg
jb
sbb
add
imul
push
lds
jge
mov
jecxz
mov
hlt
add
jmp
jge
out
sbb
jns
mov
sbb
xor
ret
fstpl
lods
push
loope
xchg
xor
cmp
movsb
scas
dec
fstps
jae
jno
xor
movsb
scas
jno
push
inc
jmp
popf
in
jb
dec
enter
daa
arpl
pop
cmp
pop
xchg
jno
add
dec
and
loope
testb
and
es
lahf
fistl
test
mov
and
or
cwtl
sbb
cs
js
out
pop
xchg
je
push
dec
jp
arpl
lods
cmp
inc
cs
insl
fstl
subb
pusha
add
mov
xor
mov
push
scas
adc
int
inc
into
sub
popf
push
lcall
mov
sub
xchg
dec
test
push
mov
jg
dec
jne
pop
cwtl
sbb
mov
jmp
cmp
cmp
js
lods
testl
inc
mov
hlt
add
mov
xor
icebp
jne
outsl
mov
mov
hlt
fs
lods
adc
es
testb
dec
incl
out
adc
cli
sub
xor
push
cmp
notl
pop
pop
adc
cmpsl
sbb
aam
rorb
pop
adc
icebp
imul
pop
repnz
cwtl
notb
cmp
and
test
sub
push
mov
sbb
xor
cs
std
xchg
aad
in
nop
les
dec
out
mov
adc
adc
out
ss
stos
mov
repz
fstpl
lea
loopne
call
dec
and
jns
pop
adc
or
adc
add
cs
inc
int3
sti
jecxz
insb
push
jb
popa
into
dec
xchg
mov
in
push
jg
jmp
fdivs
mov
cmc
push
mov
mov
hlt
dec
ror
rcr
mov
mov
mov
xor
out
ja
cmp
jmp
cmp
xchg
mov
cmc
and
in
stc
dec
es
and
int3
inc
cmpsl
bound
icebp
fidivrs
cld
imul
lret
fsubrs
jle
jp
adc
pop
jmp
cli
rcrb
popf
sub
xchg
push
mov
push
cli
scas
mov
clc
out
pusha
xchg
mov
fsubr
mov
repz
outsl
lock
fmuls
and
push
xchg
mov
push
pop
mov
setg
sbbb
test
mov
cmp
xchg
clc
insb
test
add
sbb
xlat
xlat
pop
sbb
stos
scas
das
scas
push
daa
fcomi
add
mov
outsb
call
insb
xor
dec
pushf
or
mov
push
rol
mov
into
dec
mov
push
fwait
mov
dec
or
aam
lcall
fwait
mov
out
xchg
jne
add
mov
mov
scas
bound
dec
adc
add
in
fwait
xchg
xchg
mov
cmpsb
sti
sub
insb
in
xor
jl
jp
inc
das
mov
inc
xor
js
jle
push
pop
in
shlb
rcl
iret
xchg
xor
mov
call
push
popf
cmpl
push
mov
mov
adc
shrl
xor
and
lods
insb
ror
cmpl
lret
mov
jge
iret
xchg
or
pop
or
ret
inc
mov
enter
scas
inc
adc
pop
push
or
push
xchg
call
inc
movsl
imul
pushf
jb
fnstcw
xlat
mov
ss
leave
iret
push
xor
dec
dec
inc
arpl
or
jbe
mov
jge
subb
test
or
loopne
add
sti
xor
pop
pop
push
les
xor
xchg
iret
sub
push
push
xor
cmp
movsb
cmp
push
push
xchg
sbb
jns
lock
pop
cmp
cs
bound
mov
jl
test
dec
nop
mov
andl
cli
das
adc
test
jge
incb
stc
ja
pop
cmpsb
pop
cli
test
js
dec
fs
aam
es
sbbb
add
sub
test
and
dec
pop
stc
adc
dec
mov
addb
sbb
mov
int
cmpsl
push
inc
push
mov
jle
or
adc
pop
lret
lcall
jge
out
jb
sub
popa
flds
inc
push
jg
jmp
fmull
clc
imul
push
or
jl
mov
fdivs
mov
ror
test
mov
adc
cmc
shrb
dec
test
orb
stc
inc
lea
fs
jb
mov
lods
xor
call
cli
pop
lret
xchg
push
lods
push
cmp
fs
or
ret
xor
pop
gs
fadd
loopne
mov
lahf
inc
adc
adc
adc
pop
jg
rcl
xchg
insb
or
sbb
xor
or
mov
mov
sti
test
rcll
aad
leave
pause
lahf
cwtl
repnz
inc
pop
mov
fldenv
leave
lods
repz
repz
xchg
sub
lea
cmc
call
leave
jecxz
pop
sub
jp
xchg
adc
mov
ja
pop
inc
mov
mov
aas
cs
xlat
jb
sbb
fcmove
je
mov
jns
mov
sub
and
jo
js
xor
mov
push
fadds
mov
pop
icebp
mov
sbb
lock
pushf
hlt
das
sbb
test
xchg
rcll
addb
cmp
insl
dec
shll
mov
add
xor
xchg
mov
lret
inc
inc
hlt
mov
addl
psrld
jp
ret
aam
in
ret
inc
sub
push
mov
xchg
xchg
repz
pop
ljmp
test
mov
jle
rcll
repnz
adc
dec
xorl
test
stc
les
mov
out
test
das
hlt
xchg
add
ror
rcl
pop
les
sbb
lret
add
into
xchg
mov
cmc
pop
insl
xor
add
or
xor
sar
sbb
inc
aas
mov
adc
xorb
push
dec
jbe
inc
xor
xchg
mov
dec
push
mov
ljmp
push
sub
push
je
and
jg
add
xchg
xchg
lock
out
sbb
mov
addr16
push
jp
jmp
mov
sub
mov
test
inc
pushf
outsb
in
dec
mov
cmp
or
icebp
scas
je
pop
mov
sub
xor
mov
push
dec
outsb
or
push
fs
push
arpl
insl
and
insb
ds
jnp
pop
jmp
push
add
mov
mov
scas
mov
pop
inc
mov
or
and
inc
adc
mov
push
mov
xchg
fiaddl
push
lcall
push
inc
imul
ficoms
lahf
pop
shl
cmp
mov
lahf
leave
inc
dec
div
xchg
pop
lods
arpl
mov
jbe
inc
adc
add
aaa
xor
in
or
cmc
adc
aaa
sbb
pop
fimull
mov
mulb
bnd
in
or
cltd
sub
lock
movsb
lds
push
in
dec
cmpsb
cld
push
test
inc
loop
enter
daa
popa
ljmp
push
scas
mov
dec
pushl
shll
add
lahf
sbb
test
fdivrl
and
dec
lret
loope
or
pop
and
mov
aas
popa
pop
adc
movsb
loope
pop
push
sub
cmp
outsb
stos
insb
jbe
ja
dec
shlb
dec
xchg
sub
push
lock
fnstcw
xor
xchg
push
mov
iret
int
in
sub
in
lcall
adc
sub
es
test
scas
sbbb
jg
mov
mov
mov
dec
mov
sbb
and
outsb
fdivrl
out
pusha
testl
cs
jl
lods
mov
notl
cmc
xchg
xor
cmpsl
test
outsl
popa
xchg
mov
fst
idiv
std
fwait
shll
adc
jp
cmp
lods
sbb
mov
movsb
lcall
loopne
xor
push
sbb
or
sub
adc
loopne
mov
pop
cmp
repz
cmpsb
inc
add
ljmp
jae
cmp
imul
pop
int
mov
repz
xor
fcmovnbe
sub
addr16
jp
inc
dec
movsl
push
cmp
cmp
push
repz
jecxz
xchg
jmp
enter
push
dec
sub
filds
sbb
jmp
lahf
pushf
fs
jmp
mov
pop
in
incl
outsl
sub
cmpsb
pop
aas
int
shll
fwait
inc
dec
sbbb
jecxz
add
imulb
push
std
pop
into
cwtl
cmp
pop
and
add
jl
test
out
add
pop
iret
or
popf
les
mov
dec
or
or
push
rorl
mov
insl
xor
or
cmpsl
pusha
lretw
icebp
movsl
icebp
cmp
es
lret
mov
mov
inc
jecxz
and
dec
xor
sahf
rolb
cwtl
sub
lods
ret
sar
mov
xorb
fnsave
or
pop
mov
xchg
xor
ljmp
cmp
lret
fsubrl
cmpsb
push
adc
cmpsb
minps
roll
cli
and
movsb
aam
mov
cli
leave
xchg
jnp
test
lock
xchg
ss
and
arpl
aaa
stos
mov
dec
push
insl
mov
jmp
jp
xor
inc
pushl
or
mov
pusha
xor
pop
int3
in
aas
ja
loope
dec
icebp
shlb
or
pop
setnp
inc
fnstenv
cmp
mov
add
bound
xchg
aaa
jns
and
in
pop
mov
out
or
sub
bound
andl
outsb
int
xchg
and
mov
jb
aad
imul
inc
pusha
aam
pushf
fists
xchg
push
xchg
fimull
pop
xchg
add
dec
adcl
jae
push
ret
arpl
mov
fstl
and
fidivl
jnp
pushf
jb
aad
and
pop
lret
or
iret
push
pop
push
ret
push
pop
js
xchg
test
xor
decl
dec
and
fidivrl
xor
xchg
xchg
jmp
mov
add
push
mov
fmull
mov
loope
aaa
arpl
mov
dec
jge
arpl
aaa
repnz
sbb
add
jge
int3
sahf
cmp
xor
mov
push
jo
and
scas
call
aaa
pop
cmp
xchg
sbb
dec
push
cmpsb
jg
imul
daa
imul
and
out
xchg
push
and
cmp
jl
jno
dec
outsb
jo
ds
jmp
fwait
insl
or
push
scas
mov
test
adc
jge
lcall
pop
dec
loopne
js
leave
mov
push
or
shrl
lahf
idivl
xchg
pop
out
outsb
push
outsb
aad
mov
pop
pop
mov
push
andb
sbb
adc
hlt
lock
mov
mov
or
or
mov
lcall
icebp
faddl
sub
pop
test
sahf
jo
in
shll
aaa
push
mov
xchg
cld
and
xchg
add
xor
test
pop
sahf
lret
cmp
adc
mov
sbb
xchg
shl
dec
or
xor
loopne
outsl
inc
mov
fdivr
mov
mulb
int
lds
data16
mov
inc
mov
cli
ret
test
fstpt
mov
mov
jp
mov
sub
mov
repnz
push
jg
shlb
add
and
repnz
xor
test
repz
pop
push
mov
pop
ret
loop
dec
xchg
aad
rolb
push
cmp
dec
add
sub
orb
repz
cwtl
pop
aas
cwtl
sbb
shr
push
or
hlt
push
pop
xchg
xchg
inc
popa
xchg
mov
jmp
inc
sbb
push
cli
jb
pop
orl
sub
shl
xchg
jne
mov
movsb
std
mov
and
mov
fchs
mov
xchg
sbbl
inc
push
mov
daa
mov
jmp
xor
mov
add
popf
and
inc
fcmovb
jecxz
inc
push
les
in
dec
jle
xcrypt-ctr
cmpsl
pop
adc
icebp
adc
sbb
in
jo
lret
and
xlat
cltd
and
call
and
outsb
sub
std
addr16
popa
pop
outsl
push
inc
sub
fstpl
push
clc
xchg
xchg
ljmp
jbe
sbb
cmp
outsb
fwait
es
aas
stos
enter
loop
in
adc
bsf
pop
add
jnp
add
test
aas
icebp
xchg
xchg
stc
xchg
aam
sbb
xor
pop
stos
jnp
sub
adc
xchg
add
sar
xor
mov
notl
mov
mov
rcr
pop
xchg
ja
jge
dec
in
sub
push
rorb
mov
dec
aam
xorl
inc
out
scas
push
mov
and
lods
xchg
mov
out
imul
pop
imul
mov
int3
push
mov
push
xchg
jle
or
pusha
outsl
add
xchg
lods
lods
dec
jmp
lret
mov
rcll
pop
cli
popf
inc
or
sbb
stos
mov
and
pop
cmp
pop
push
xchg
cmp
adc
insb
pop
iret
mov
in
aam
xchg
pop
scas
jno
inc
rclb
test
add
or
les
inc
xchg
out
xchg
in
lret
sub
out
dec
mov
pop
idivb
mov
das
adc
xor
loop
sub
xchg
arpl
aam
jbe
int
jge
stos
lock
shlb
mov
imul
gs
int3
mov
push
insl
movsl
dec
xor
cmpsb
cwtd
scas
cld
andb
ja
cmp
leave
movsb
fildl
push
orb
add
in
push
fdivrs
daa
pop
and
cmp
data16
jno
in
out
andb
ds
insb
cmp
and
lods
sub
push
sbb
test
fidivrs
addb
imul
outsl
jecxz
js
call
daa
push
popa
adc
sub
fsincos
cmp
add
arpl
add
or
cmpb
sbb
mov
xor
sbb
mov
adc
orl
pop
inc
cmp
lcall
sbb
jae
test
test
xchg
adcb
sub
mov
pop
push
inc
push
or
cmp
outsb
loope
cmpb
pop
dec
out
stos
mov
sbb
into
inc
sub
xor
push
outsl
pop
mov
loop
mov
dec
fisubrs
jmp
mov
das
inc
movsb
mov
fidivl
ds
sar
shlb
insl
cld
cmp
mov
sar
popf
mov
inc
loopne
test
pop
mov
xcrypt-ofb
cmpsl
imul
and
insl
cs
sbb
in
mov
sub
mov
leave
lock
sti
xchg
sub
ljmp
nop
xor
jae
pop
and
lret
xlat
push
gs
sbb
lea
bt
inc
inc
jg
inc
mov
jge
mov
subb
popf
sub
inc
cmp
cmp
cmpsb
add
push
push
je
cs
out
cmc
ja
std
gs
cwtl
mov
jae
nop
fdivs
xorl
sti
test
mov
out
shl
push
push
pop
das
mov
outsl
mov
mov
mov
mov
insl
add
jns
and
arpl
dec
cld
pop
sub
xchg
pop
cltd
mov
xchg
insl
fsubl
addr16
in
jmp
sub
aam
mov
ret
lock
push
push
out
cmpb
clc
shr
notb
subb
lods
test
arpl
mov
xlat
push
movl
add
call
jno
sti
sub
out
lea
xchg
inc
ror
pushf
loopne
stos
push
scas
push
mov
adc
pop
mov
add
mov
jp
dec
or
outsb
mov
add
into
loopne
out
inc
mov
inc
mov
loopne
pop
dec
xlat
cmpsb
flds
mov
or
mov
sbb
add
xor
mov
bound
mov
in
insl
and
test
sub
pop
fbld
fs
jp
imul
mov
push
es
scas
das
dec
in
cmp
pusha
or
loope
cmpb
les
jmp
mov
ljmp
cmp
mov
and
imull
mov
movsl
insb
jg
xchg
arpl
push
fidivrl
adc
mov
rcrl
pushf
inc
fisttpll
jae
and
inc
sbb
enter
sub
inc
push
mov
inc
xchg
inc
mov
repnz
fidivrs
mov
rolb
mov
or
leave
stos
cli
call
arpl
dec
in
jbe
mov
aad
adc
aaa
jo
mov
add
scas
dec
int3
je
inc
pop
addr16
mov
dec
or
add
cmpsl
scas
cmpsb
punpcklbw
push
in
clc
cmp
dec
push
push
rorl
in
cmc
sub
enter
daa
pop
adcl
xlat
rolb
dec
xor
sbb
mov
and
add
lahf
jbe
leave
push
push
cmp
test
test
pop
mov
insl
sub
lret
jo
aaa
pop
rolb
mov
sub
out
cmp
andl
aam
stc
adc
mov
repnz
orb
add
les
jecxz
cmp
mov
add
sub
mov
mov
sub
push
cli
pop
fcompl
adcl
subb
mov
outsl
sahf
mov
and
mov
jle
and
inc
mov
xchg
fcomps
shrl
idivl
sahf
lret
push
mov
jns
xchg
cmp
into
sub
mov
mov
les
xchg
stc
push
stc
and
loop
add
xor
lods
iret
mov
mov
cmp
out
ss
sub
xor
pusha
inc
or
pop
insb
cmp
loopne
shlb
fidivs
push
adc
lcall
xchg
xchg
js
loop
add
loop
mov
mov
in
xor
xchg
sti
inc
push
jne
dec
cmc
icebp
aad
inc
mov
ret
inc
jno
int3
flds
cmp
repz
ret
loope
lea
dec
call
lds
aad
lock
hlt
pushf
gs
pop
jmp
push
pop
pop
int
xchg
inc
and
and
push
cmp
stos
jecxz
jb
jns
dec
out
adc
lods
jecxz
jle
idivb
mov
mov
dec
pop
mov
xor
dec
push
pop
inc
mov
scas
dec
lock
mov
das
xchg
pop
xchg
mov
jo
adc
push
sarl
cld
es
outsl
loope
jmp
fucomi
cmpsl
pop
inc
addr16
ret
cld
inc
sbbl
and
push
xchg
pop
pop
xchg
sarb
push
xchg
mov
ret
jg
cmp
push
mov
or
in
scas
ljmp
cmp
mov
add
jae
push
mov
test
add
inc
push
test
or
mov
xchg
data16
insl
aas
test
lods
hlt
xchg
shll
jbe
stos
pop
clc
ret
fsubrs
cmp
divl
mov
movsl
cmpsl
xor
in
insb
mov
sub
push
pop
std
cmp
ja
inc
insl
dec
lret
inc
lea
cmpsb
or
fcomp
fwait
stos
cltd
adc
jne
add
insl
nop
lea
lea
in
hlt
lds
pop
test
inc
jecxz
or
stos
addr16
hlt
mov
mov
mov
dec
leave
in
push
mov
fildll
cli
xchg
push
xchg
xchg
popa
dec
dec
addl
push
pop
xchg
sbb
xchg
dec
mov
cmp
xchg
dec
jp
jo
mov
enter
ljmp
scas
mov
xlat
adc
dec
iret
jno
mov
cli
add
sbb
pusha
pop
jae
add
inc
and
std
or
mov
push
pop
ficoml
cmp
mov
incb
lds
inc
shlb
mov
aad
cltd
leave
and
hlt
ret
arpl
and
jge
jecxz
sbb
pop
fidivl
das
push
adc
out
pop
add
push
pushf
pop
xchg
cld
pop
push
xor
call
scas
test
inc
and
xchg
or
int3
pop
test
adc
or
inc
in
fcompl
enter
daa
pop
mov
and
jno
mov
inc
dec
mov
and
andl
push
rcll
mov
sbb
je
addl
adc
andl
pop
vmread
push
and
loope
jnp
sub
enter
ds
aaa
sub
adc
push
sbb
test
fstpt
add
sub
xor
jp
int
sarb
jns
xchg
inc
mov
sub
sti
jle
inc
pushf
pop
sub
mov
imul
jg
das
movsb
mov
push
mov
icebp
add
popa
and
das
cmp
fcmove
pop
idiv
adcl
ds
lret
rorl
into
or
cwtl
xor
mov
fstp
adc
sub
stc
fnstcw
or
hlt
bound
push
aas
in
dec
xor
mov
xchg
jbe
cmp
aas
cli
pop
cmp
and
add
inc
or
outsl
jecxz
jecxz
sub
out
loopne
in
add
cmpsl
dec
adc
or
add
clc
sbbl
sub
mov
lahf
leave
cld
sti
out
cmp
mov
or
inc
and
out
and
rcr
inc
test
or
cmp
adc
add
jno
lea
mov
movl
adc
pop
pushf
adc
jmp
pop
inc
pop
jo
scas
inc
stos
jne
inc
outsb
ljmp
incl
aam
push
ficompl
std
mov
jnp
sub
mov
bound
loopne
sbbl
or
mov
lret
mov
mov
lock
adc
mov
daa
push
pop
dec
rol
out
mov
lret
insl
shrb
and
leave
add
cld
insl
inc
dec
lret
jb
dec
mov
movsb
push
mov
movsl
lods
push
rclb
std
inc
aam
lcall
mov
pop
clc
dec
jnp
xchg
cs
ljmp
test
pop
call
push
out
push
out
push
jge
inc
psubusw
jmp
cmpsb
cmp
test
sbb
mov
movsl
xchg
xchg
fbld
test
mov
hlt
sbb
xlat
int
sbb
in
stos
dec
cmp
stc
out
add
push
xchg
push
call
sub
xor
mov
mov
fwait
mov
push
insb
sarl
jg
ja
push
mov
or
mov
xor
data16
pop
mov
out
dec
stos
cmc
bound
sarb
or
in
into
dec
xchg
jnp
int3
out
aas
sub
dec
sbb
addr16
xor
mov
fwait
mov
adc
push
in
shr
pusha
inc
jmp
fisttps
loopne
mov
gs
sub
std
adc
sbb
sbb
inc
scas
mov
sahf
imul
push
in
jnp
cmp
push
push
adc
ret
lea
jne
inc
repz
insl
and
inc
and
loope
xor
imul
sbb
sbb
imul
faddp
rolb
jnp
sarb
sub
icebp
leave
cltd
movsl
dec
hlt
or
add
jbe
std
jno
xchg
push
sbb
push
dec
or
jmp
bswap
dec
mov
pop
lds
inc
push
push
mov
mov
mov
ret
inc
adc
js
mov
xorl
movsb
jl
jbe
outsl
frstor
in
ret
jbe
enter
daa
pop
iret
sub
arpl
fdivrl
xchg
dec
sub
mov
pop
outsl
das
movsl
daa
sub
lahf
mov
ljmp
lock
push
aas
push
loope
and
in
or
pop
in
js,pt
mov
repz
xchg
dec
loope
xor
sub
jge
cmp
inc
outsb
lcall
shrb
xorb
mov
push
in
xor
and
call
fimuls
les
mov
push
test
lret
fdiv
xchg
sahf
lret
test
sarb
xor
jg
jecxz
mov
cwtl
inc
mov
mov
mov
jo
xchg
ss
mov
cmp
xchg
pop
push
idivl
inc
mov
outsl
ljmp
icebp
loop
into
out
pushf
sub
push
add
outsl
mov
sbb
stc
nop
sbbl
mov
test
lods
popf
enter
andb
cmp
cli
sbb
cmp
push
mov
stos
mov
gs
push
lahf
loopne
cs
pop
sbb
adc
jb
imul
jmp
out
dec
xchg
add
xchg
clc
adc
cmp
xchg
cmpsl
mov
or
sahf
jmp
adc
add
orb
outsl
test
clc
aaa
xchg
aam
push
movsb
jne
loop
in
call
ret
inc
cltd
pop
pop
mov
sahf
mov
pushf
mov
jb
pop
adc
cmp
inc
mov
add
mov
or
ret
jp
idivb
in
cwtl
in
xor
rcrl
mov
dec
inc
dec
and
pop
dec
push
mov
pop
pushl
fs
mov
inc
push
push
mov
ret
rcll
fsubl
dec
mov
sbb
in
push
pop
adc
icebp
jo
mov
lret
loope
mov
stos
pop
cwtl
mov
ud1
mov
aam
and
dec
js
icebp
xor
sbbl
ljmp
pop
lods
lds
jmp
xchg
jge
addr16
pop
push
rorb
cmp
addb
arpl
cltd
fstp
mov
mov
cli
movsb
xchg
inc
cmp
fdivrs
xor
add
test
shrl
sbb
pushf
jmp
cmp
jo
mov
scas
pop
inc
xor
rorl
adc
jnp
mov
scas
pushf
jmp
and
pop
jae
fwait
ja
adc
dec
mov
dec
inc
mov
js
fwait
or
adc
shlb
dec
and
out
sub
ret
bound
loope
jns
mov
fs
lret
out
outsl
imul
shr
addr16
and
inc
cltd
rorl
push
sub
dec
mov
pusha
cmp
test
das
test
popa
mov
push
loopne
lock
loope
dec
mov
fldl
jp
idiv
ret
js
jnp
dec
outsb
scas
les
push
scas
mov
aad
das
in
add
and
pop
mov
xor
inc
es
cmp
mov
mov
fidivl
gs
sbb
and
imul
or
lds
cmp
mov
jnp
mov
adc
hlt
pop
xchg
add
inc
sub
dec
mov
sbb
je
lods
and
int
inc
add
xchg
int3
xor
int3
cmpsb
push
stc
mov
xor
adc
scas
inc
pusha
leave
and
subb
pop
pop
out
push
mov
aad
in
stos
jae
enter
daa
pop
mov
out
pop
pop
jnp
cs
cltd
nop
mov
subl
add
into
xchg
xor
or
inc
gs
mov
mov
out
or
or
sub
pop
out
push
push
mov
loope
push
push
sub
push
cmpsl
cmp
add
std
sarb
int
rolb
mov
add
aam
jns
fldl
repnz
push
sub
cmp
int
and
sub
repnz
inc
sbb
push
jmp
pusha
sub
ljmp
ja
add
lcall
adc
or
shlb
jg
xchg
ss
and
fcoms
push
idivl
lret
faddp
push
dec
jl
adc
sbb
pop
adc
roll
cmc
xor
inc
xor
and
outsl
fwait
sbb
dec
testb
or
dec
xchg
sub
movb
cmp
cli
ret
xor
mov
lret
stos
push
sub
pop
gs
test
lods
pop
cmp
imul
add
xchg
shll
cmp
mov
jl
xchg
sub
movsb
pop
mov
jne
jae
dec
pop
data16
not
sar
push
nop
pushf
and
repnz
stos
jnp
fldenv
fwait
cli
repz
in
xchg
insl
jmp
repz
adc
mov
jmp
dec
mov
mov
insb
inc
mov
test
rcll
movsl
sub
mov
je
notl
pop
mov
std
add
or
mov
js
movb
mov
pand
notl
add
lock
mov
mov
xchg
lret
mov
shll
jno
shlb
insl
sahf
cmpsl
dec
gs
cmpsl
pop
les
icebp
inc
test
ret
dec
cmp
push
inc
push
mov
mov
mov
pop
jecxz
pusha
shlb
and
pop
aam
sti
movnti
fcoms
scas
sbb
push
testl
ljmp
mov
mov
fbld
xchg
negb
seta
adc
adc
push
test
cmp
mov
xchg
xchg
andl
lods
popf
arpl
push
iret
sub
cmp
es
lret
push
aas
loopne
add
mov
stc
xor
int
xor
rcll
xchg
adc
lret
jae
pop
rcrl
mov
cmpsl
xchg
or
push
in
fwait
aaa
in
dec
inc
cs
jne
dec
push
mov
mov
out
or
out
cltd
pop
inc
jns
flds
iret
jg
xchg
sbb
fsub
nop
adc
clc
out
bound
inc
sbb
insl
jp
int
mov
das
stc
mov
or
jp
cmp
push
clc
jmp
xor
int3
rcrb
xchg
ret
xor
or
mov
fmull
mov
sbb
dec
stos
leave
iret
mov
or
loope
jnp
and
daa
std
ficoml
je
adc
mov
mov
ss
ret
inc
or
inc
sub
or
sub
incl
es
fisubrl
std
xchg
mov
decl
pop
inc
outsl
pop
shlb
movsl
repnz
mov
leave
xchg
pop
hlt
mov
lret
and
jge
scas
sbb
shlb
insb
je
or
aaa
aad
pop
rcll
and
dec
pop
and
push
fsubl
xor
insl
repnz
sahf
xchg
cmp
push
jg
xchg
mov
push
or
push
mov
xchg
push
arpl
bound
out
leave
add
xor
pop
push
rorl
jecxz
movsb
fnstsw
movsl
xor
pop
cmp
mov
sarl
inc
hlt
std
pushf
jae
push
pop
xor
js
sub
xchg
call
cmp
jp
adc
and
pop
pop
pop
fiaddl
mov
call
xor
mov
loop
mov
sub
push
xor
ret
lcall
xor
inc
fadds
sahf
adc
mov
sbb
jg
push
outsb
mov
xchg
ret
mov
inc
xchg
mov
ss
adc
fmuls
cs
idivl
dec
pop
lret
mov
mov
mov
xchg
into
mov
sub
clc
inc
mov
outsl
jp
xor
stc
repnz
adc
or
shr
jl
imul
out
data16
cli
cmc
and
xor
sub
or
decb
gs
mov
jecxz
pop
adc
imul
in
test
mov
cmp
mov
xlat
mov
push
pop
in
loopne
loop
cld
xchg
fldcw
fsts
sub
sbb
nop
ja
into
dec
adc
inc
mov
pop
test
push
push
push
repz
rol
stos
fnstcw
mov
sub
call
xchg
pop
les
adc
pushf
adc
pop
pop
jns
inc
inc
aam
inc
mov
mov
testl
jl
jecxz
xchg
testb
test
mov
dec
mov
andl
push
test
mov
int3
add
sbb
test
adc
cmp
mov
fsubs
shll
jge
test
dec
pusha
dec
push
cmpsl
pop
mul
mov
push
cld
sar
xchg
ror
mov
xchg
sti
and
mov
in
add
rorb
outsl
movaps
xchg
aam
sub
aad
out
inc
loopne
clc
stc
mov
push
ljmp
dec
lods
fwait
inc
and
xchg
xchg
xchg
xchg
or
mov
testb
cltd
dec
or
mov
jo
xchg
pop
mov
ror
test
imul
add
aad
cmpl
xchg
lea
