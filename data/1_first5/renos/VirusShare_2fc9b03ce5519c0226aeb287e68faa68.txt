jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
bound
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
movl
mov
mov
mov
push
mov
push
call
mov
pop
ret
add
add
add
add
xor
add
add
xor
add
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
add
xor
aaa
xor
xor
aaa
xor
add
push
mov
add
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
movl
mov
push
call
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
mov
pop
ret
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
add
add
push
mov
add
mov
mov
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
mov
cmp
je
jmp
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
mov
xor
divl
test
jne
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
mov
cmp
je
jmp
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
lea
mov
jmp
xchg
mov
lea
mov
lea
mov
lea
dec
dec
dec
dec
dec
je
mov
mov
mov
mov
dec
mov
cmp
je
jmp
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
mov
sub
mov
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
push
mov
mov
xor
call
mov
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
mov
mov
mov
call
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
push
mov
mov
xor
call
mov
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
lea
mov
push
jmp
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
lea
mov
jmp
xchg
mov
lea
mov
lea
mov
lea
dec
dec
dec
dec
dec
je
mov
mov
mov
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
mov
sub
add
add
mov
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
mov
mov
movl
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
mov
pop
ret
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
sub
mov
cld
fidivrs
repnz
fidivrs
lret
cld
mov
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
in
jne
xor
cmp
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
dec
mov
repz
mov
add
mov
je
clc
dec
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
dec
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
dec
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
dec
mov
cld
cld
cld
pop
hlt
dec
mov
repz
mov
out
hlt
dec
mov
clc
dec
mov
or
cld
cld
pop
repz
mov
hlt
dec
mov
dec
mov
int
pop
repz
mov
dec
mov
out
hlt
dec
mov
dec
mov
repz
mov
je
clc
dec
mov
hlt
dec
mov
clc
dec
mov
out
repz
mov
clc
dec
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
dec
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
lea
mov
jmp
xchg
mov
lea
mov
lea
mov
lea
dec
dec
dec
dec
dec
je
mov
mov
mov
mov
dec
movl
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
mov
mov
call
mov
cmpl
je
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
mov
cmp
je
mov
subb
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
mov
xorb
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
incl
mov
cmp
jne
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
mov
call
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
push
mov
push
call
mov
pop
ret
mov
push
mov
add
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
movb
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
mov
mov
pop
ret
mov
push
mov
add
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
call
call
call
test
jne
mov
jmp
movw
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
call
lea
mov
pop
ret
nop
push
mov
add
cmp
jbe
xchg
xchg
mov
mov
dec
inc
mov
lea
mov
mov
inc
dec
dec
lea
mov
mov
mov
mov
mov
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
push
call
mov
call
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
mov
pop
ret
add
dec
add
add
add
add
add
add
add
add
jae
mov
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
call
call
movl
mov
mov
mov
push
mov
push
call
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
movl
mov
push
call
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
movl
mov
mov
mov
push
mov
push
call
lea
mov
mov
xchg
lea
xchg
mov
lea
mov
mov
mov
lea
inc
dec
jne
xchg
lea
mov
inc
inc
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jae
mov
mov
mov
xchg
dec
inc
cmp
jnp
mov
mov
lea
lea
lea
mov
mov
lea
xchg
inc
mov
mov
inc
inc
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
lea
mov
jmp
xchg
mov
lea
mov
lea
mov
lea
dec
dec
dec
dec
dec
je
mov
mov
mov
mov
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
js
mov
lea
inc
mov
lea
inc
mov
lea
xchg
lea
mov
lea
lea
mov
lea
dec
je
mov
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jbe
xchg
lea
lea
xchg
xchg
mov
xchg
lea
dec
dec
inc
mov
mov
mov
mov
inc
inc
inc
lea
mov
mov
movl
mov
push
call
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jbe
mov
mov
lea
lea
mov
xchg
inc
dec
je
mov
inc
mov
mov
mov
mov
dec
inc
mov
inc
call
call
movl
mov
push
call
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jp
xchg
mov
mov
mov
mov
xchg
inc
inc
lea
mov
mov
lea
mov
mov
xchg
mov
dec
dec
inc
dec
jne
mov
call
mov
mov
mov
lea
call
cmp
jge
lea
xchg
xchg
inc
inc
mov
lea
lea
lea
mov
mov
lea
lea
dec
jne
mov
mov
lea
lea
ret
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
cmp
aaa
ss
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
xor
xor
xor
aaa
add
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
xor
xor
add
cmp
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
mov
mov
int
add
loop
aam
mov
add
in
in
out
mov
jle
add
push
pop
pop
jle
dec
add
lret
mov
add
add
sbb
insl
pop
lret
inc
add
add
mov
add
sbb
pusha
call
add
mov
mov
jbe
xor
or
adc
add
not
inc
xor
leave
jmp
cld
icebp
add
add
add
push
sbb
repz
mov
adc
inc
stos
addl
jb
fcmovnbe
dec
add
add
adc
add
add
loopne
aaa
mov
xor
add
add
testl
adc
add
add
add
add
jbe
lret
repnz
push
jae
movsb
push
les
setbe
xchg
xchg
push
das
add
add
mov
sub
add
xchg
fmuls
and
add
add
or
add
add
les
into
dec
std
je
jno
add
mov
rorb
mov
add
stc
add
imul
flds
outsb
enter
add
fildl
jnp
add
jmp
add
mov
or
and
testb
xorl
push
loope
adc
cwtl
mov
add
dec
mov
add
iret
jecxz
cmp
adc
jae
add
and
cld
outsb
rorb
cld
add
fisubl
xchg
add
add
mov
aas
fnstenv
and
add
and
push
add
xor
stc
jl
fs
pop
mov
sbbl
or
leave
xchg
mov
ds
pop
std
lods
add
jg
adc
add
dec
and
out
int
xchg
scas
add
es
add
aad
add
sub
add
add
and
cmp
adc
pop
addl
cmp
add
add
and
loopne
or
ret
inc
rclb
xchg
add
out
sub
jno
sahf
clc
mov
add
mov
ljmp
jmp
mov
add
inc
xchg
js
pop
add
or
fs
add
xchg
add
add
dec
add
add
sub
add
push
pop
push
xlat
add
cmp
int
mov
add
dec
cwtl
push
add
add
jnp
xchg
jnp
add
add
xchg
movsl
add
add
addb
jo
arpl
mov
lret
mov
mov
fs
xchg
cmp
sub
pop
jnp
xchg
add
cld
lods
sbb
insl
sbb
add
stos
add
mov
push
xchg
enter
nop
pop
bnd
jl
setle
adc
cmp
sub
ljmp
ds
iret
mov
and
mov
add
ficomps
insl
mov
mov
aaa
add
push
aam
scas
add
cmc
jns
or
stos
add
and
dec
add
mov
add
mov
daa
add
gs
and
inc
arpl
cmpsl
cmp
std
xor
test
sbb
add
add
repnz
add
sbbb
mov
xor
push
shrl
inc
push
add
add
push
movsl
xchg
push
inc
push
add
in
cmp
push
mov
out
out
push
add
pop
add
movsl
add
icebp
mov
pop
sti
and
divl
rcrl
xchg
scas
add
dec
les
sub
mov
adc
sbb
shrl
add
stos
ret
dec
mov
mov
cmc
loope
shr
in
clc
imul
jmp
lds
xchg
cwtl
cmpl
cmp
in
sbb
fadd
out
rclb
mov
push
jns
out
das
cmp
rcrb
cwtl
push
aam
push
cmp
mov
sub
insl
dec
sbb
cmpsl
bound
mov
outsl
mov
mov
cli
int
and
pop
xchg
pop
pop
jmp
aam
aaa
arpl
cltd
pop
sub
test
scas
repnz
cli
fucom
sub
clc
out
test
xchg
shll
add
stos
scas
inc
add
push
lret
imul
sbbb
gs
add
xor
inc
shlb
mov
nop
dec
dec
mov
cmp
dec
or
inc
lcall
fwait
mov
push
ret
add
mov
add
push
ds
add
mov
mov
push
xchg
mov
gs
xchg
inc
rcrl
xchg
ja
fadd
jp
or
in
inc
mov
xchg
or
jne
lea
mov
or
out
adc
lods
jmp
push
cld
cmpl
out
jge
sub
insb
pop
push
addr16
stos
xor
sub
push
or
insb
shr
push
sub
dec
and
sahf
pop
outsl
push
xchg
fwait
inc
cmc
pop
or
inc
mov
mov
xchg
enter
fisubrs
popf
rolb
mov
and
adc
shl
js
call
mov
sub
mov
dec
sbb
xchg
into
lods
repnz
iret
fdiv
dec
int3
mov
repnz
xor
vpsadbw
push
addl
mov
sub
add
lcall
out
int
daa
rcr
cmp
pop
jge
and
stc
jecxz
cmp
mov
cmp
std
push
xchg
push
jbe
dec
imul
push
aaa
je
int3
cmp
pop
jnp
sub
dec
nop
push
inc
push
repz
xor
xchg
push
pushf
scas
sub
and
or
test
push
jge
ds
jl
jns
jnp
pop
push
mov
push
mov
loope
lahf
push
sub
enter
adc
ds
mov
gs
test
inc
lahf
xor
clc
stc
repnz
mov
xor
mov
mov
pop
aam
or
sahf
sub
sub
xchg
push
adc
dec
pop
in
into
ja
mov
cmc
adc
ja
and
leave
pop
push
mov
int
dec
push
sub
push
xchg
lret
lret
scas
shl
orb
stc
sahf
clc
fdivrs
test
addb
jg
in
mul
dec
shl
stc
inc
dec
mov
adc
gs
es
xor
xchg
testl
divb
push
pop
imul
sbb
int3
push
ror
pushf
add
cmc
shl
xor
outsl
adc
adc
push
xchg
adc
push
mov
mov
lods
xor
inc
mov
or
out
sub
sub
sti
test
mov
into
sti
test
gs
mov
dec
pop
bound
mov
and
xchg
mov
mov
fcomip
cli
data16
fs
ret
test
pop
sub
push
adc
inc
jmp
mov
rorl
loope
lds
inc
and
jb
lret
lds
push
inc
je
or
xchg
adcb
popa
clc
call
leave
inc
dec
mov
jnp
subl
mov
pop
inc
xor
inc
or
fwait
inc
out
imul
iret
adc
addb
cmp
cli
imulb
pusha
cwtl
andb
mov
or
mov
xchg
mov
lret
inc
aad
mov
movsb
xchg
lock
jmp
das
sbb
shlb
test
ret
aam
jecxz
ret
inc
pop
and
cmp
dec
repnz
mov
ret
mov
ljmp
pop
lods
inc
push
fistpll
sbb
shl
mov
or
add
xchg
cltd
xchg
repnz
insb
jns
mov
repnz
clc
and
cli
xchg
repz
mov
ror
lods
sbb
or
out
jns
in
xchg
rcrl
outsb
paddd
sub
or
nop
mov
mov
imul
push
inc
xchg
cmp
std
or
sbb
or
sub
out
aas
sti
push
lret
add
into
mov
dec
bound
dec
in
xchg
ficoml
sbb
xchg
ja
insb
jae
ja
mov
sti
mov
inc
or
dec
push
pop
aam
movsb
clc
pop
mov
and
xchg
pop
mov
jmp
xor
in
out
hlt
fsubrl
addr16
jae
rcll
movsb
xor
insb
inc
out
insb
mov
jnp
xor
jle
xchg
xor
and
pusha
cmp
lahf
ret
ficomps
fisubrs
jae
xchg
fsts
dec
test
popf
test
pop
push
arpl
cmp
test
xchg
aas
xor
sbb
mov
imul
scas
jb
mov
in
dec
adc
je
repnz
xor
xchg
ficompl
inc
adc
or
into
push
cmp
sbb
aaa
lods
int3
mov
sbb
fidivrs
xchg
aad
lds
sub
hlt
and
mov
cltd
roll
movsb
push
in
xorl
push
jge
in
jl
loopne
sub
cmp
jno
or
jl
jo
dec
decl
push
cmpsl
and
xor
lock
scas
or
adc
lahf
shrl
lret
or
cmpsb
cld
sub
in
inc
or
outsb
daa
popa
int
push
jne
loope
mov
aaa
cmp
mov
andb
rcll
adcb
sbb
adc
add
leave
shll
movsb
and
push
add
pop
and
pop
adc
pop
lcall
popa
fcompl
cmovle
mov
sbb
and
xor
pop
dec
mov
mov
mov
fwait
loope
and
mov
nop
sub
inc
push
lret
popf
sarl
mov
sbb
dec
inc
sahf
fwait
popf
mov
sbbb
jg
mov
stc
std
push
aad
enter
sbb
ss
mov
sub
add
ret
xor
jns
cmp
test
or
mov
test
xchg
xchg
outsl
popa
fdivs
imul
movsl
in
dec
mov
cmp
adcb
inc
fistps
mov
repz
sti
xor
inc
push
push
ljmp
inc
sbbb
or
push
repz
repz
push
mov
das
add
sbb
outsb
jae
xlat
add
pop
fisttps
adc
xorl
lock
fisubrl
and
inc
aad
push
lea
movsl
leave
mov
dec
sbbb
je
inc
cwtl
jecxz
mov
xchg
inc
out
fistps
lahf
call
dec
testl
test
inc
mov
inc
mov
bound
int
mov
dec
int3
and
stc
stc
rorl
adc
std
pop
rorl
adc
jne
std
mov
roll
mov
pop
cld
lock
adc
stc
push
rolb
xchg
mov
xor
shlb
pop
es
xchg
pop
dec
addl
ljmp
daa
lods
scas
rorl
mov
inc
fisubrl
and
dec
pop
sub
cwtd
lret
test
xor
dec
int3
fnsave
lahf
clc
pop
popa
repnz
xor
cld
shll
int
pop
outsl
dec
mov
mov
push
out
fsub
cmp
adc
minpd
or
mov
sub
or
mov
lds
es
test
xchg
pop
iret
inc
enter
add
mov
push
insl
add
inc
mov
xchg
jge
bound
js,pt
dec
in
sbb
mov
lret
loope
mov
int3
sbb
stos
xor
pop
mov
jb
xlat
dec
icebp
std
pusha
jne
out
aam
add
rcrb
jmp
add
mov
xchg
or
out
loopne
sub
bound
addr16
stos
pop
in
and
stc
and
outsl
loopne
imul
cmp
pop
inc
fists
adc
ret
dec
pop
js
inc
push
test
adc
out
mov
mov
js
xchg
xchg
fiaddl
mov
adc
push
dec
push
mov
push
pop
adc
fdiv
mov
mov
cmp
arpl
push
inc
pop
insb
outsb
or
dec
imul
addb
push
inc
sbb
into
cwtl
test
fsubrl
pop
or
pop
fidivs
arpl
rorb
fwait
mov
sub
aam
cmpsl
pop
mov
push
push
add
aas
cmp
jge
dec
pop
sbb
out
jmp
xchg
fldl
sub
cld
dec
outsb
add
push
mov
xor
dec
outsl
out
scas
call
xchg
stc
test
adc
lds
aad
cmpsb
jg
leave
in
daa
xchg
out
enter
daa
pusha
es
loope
leave
inc
sub
mov
jmp
movsl
or
das
and
cmc
sub
data16
xor
int3
loope
push
pop
dec
dec
fnstsw
js
pop
push
inc
push
lcall
push
faddl
sub
cmp
out
aas
mov
sti
mov
jle
mov
mov
mov
adc
and
dec
push
mov
mov
sub
fdivs
lret
add
adc
pushf
mov
inc
sbb
push
out
test
jmp
int
in
lret
loop
push
stc
mov
sahf
fs
pusha
adc
popa
add
cmp
test
add
cli
ret
jo
xor
push
push
cmp
cltd
xor
stos
call
lods
cmc
dec
xchg
xor
outsl
inc
in
adc
cmp
cmc
adc
inc
lsl
push
mov
popa
sti
lods
add
mov
mov
out
sbb
shll
mov
pop
loope
sti
loop
sar
jp
in
gs
xor
out
inc
dec
mov
fsts
xor
repz
mov
repnz
cmpsl
sbb
test
push
int
xchg
into
lret
cmp
pushf
pand
jmp
int
xchg
aad
lret
adcb
jbe
jb
outsb
clc
dec
stc
add
xchg
cli
jecxz
inc
fadd
cwtl
je
lea
jge
push
cli
ss
or
dec
dec
xchg
shrl
mov
sub
inc
push
out
inc
sbb
adc
cmc
push
cld
mov
xchg
add
mov
mov
cwtl
clc
push
jns
sarl
xor
arpl
in
dec
sub
and
shrb
mov
je
lock
dec
push
das
fdivs
rcrb
cmpsl
inc
sub
cld
jno
popa
dec
enter
test
dec
jle
or
or
dec
ja
sbb
jo
outsb
outsb
cmp
pop
adc
dec
test
add
mov
test
mov
push
inc
inc
imul
xor
jno
lods
sbb
adc
sbb
stos
jnp
sbb
aas
loope
xchg
popa
mov
in
loopne
bsf
cmp
sti
xorb
cmp
mov
mov
cmp
int
pop
aaa
xor
imul
dec
mov
adc
push
add
add
xor
xor
mov
nop
loopne
in
cli
notb
mov
mov
iret
ja
and
fstpl
mov
daa
mov
xchg
xor
mov
out
dec
aam
lods
jne
cli
inc
mov
xchg
xchg
out
scas
stos
add
int
sbb
andl
sub
outsb
or
and
popa
stos
mov
and
ds
cmp
jle
add
in
push
and
xchg
lahf
fildll
cli
lahf
ret
ja
scas
lods
roll
popa
jae
decb
popf
inc
js
mov
loope
jbe
jmp
test
gs
mov
push
stc
xor
cmp
mov
adc
cmp
mov
gs
ja
leave
xor
inc
hlt
sub
nop
arpl
xchg
sbb
or
les
inc
xchg
add
repz
dec
int3
mov
dec
rcl
pop
inc
insl
shrb
adc
mov
mov
fildl
sub
cmp
mov
sbb
stos
aaa
mov
sub
lret
jno
inc
cmp
xchg
dec
fldl
mov
jo
mov
scas
aas
jno
add
test
fidivs
dec
inc
sub
add
push
add
jnp
cli
daa
pop
add
inc
push
fs
clc
mov
inc
pusha
xor
cmc
arpl
ss
lahf
push
pushf
add
popf
xor
add
icebp
arpl
adc
adc
movsb
in
pop
outsl
dec
or
xchg
in
pop
xchg
xor
lcall
cmc
fsubr
mov
xor
lcall
mov
mov
adc
mov
out
mov
ffree
and
ja
mov
mov
cmpsl
pop
inc
sahf
push
lret
adc
stos
mov
insl
sbb
sahf
loope
xchg
test
pop
adcb
stos
loop
pop
cmp
pusha
test
ja
mov
cmp
inc
lahf
cmp
fs
imul
fildll
xor
enter
cmpb
inc
loopne
cmc
adc
jp
outsl
pop
hlt
rclb
mulb
leave
sub
adc
cmp
fwait
inc
jnp
lods
call
jecxz
out
xlat
push
mov
leave
cmove
xchg
sti
cmp
popf
mov
gs
mov
pop
mov
dec
fxch
xchg
xlat
inc
and
add
xchg
mov
jb
fnstenv
cmp
cmpsb
xlat
andb
cltd
sbb
mov
xchg
test
ljmp
nop
xor
dec
arpl
das
jb
or
xorb
jecxz
sbb
fwait
sbb
lea
decb
inc
cmpsb
add
cli
arpl
xor
mov
jg
and
iret
mov
pop
sub
inc
cmp
push
mov
mov
pusha
jae
sub
aaa
div
push
add
cwtl
mov
scas
mov
jnp
mov
jmp
stos
cld
pop
outsb
or
xchg
stos
mov
mov
out
push
das
mov
cltd
shr
in
loop
cmpsl
dec
cli
aam
xchg
lock
push
es
fistl
add
dec
jns
loop
pop
add
ljmp
mov
mov
xchg
loop
addl
rorl
scas
jl
cmp
test
cmp
push
push
cmpsb
dec
fldl
popf
sub
push
mov
pop
lds
inc
stos
push
shr
mov
jo
push
ror
bndstx
pop
xor
fmull
outsb
push
xor
and
dec
andl
rcrb
xchg
sub
mov
gs
pop
clc
push
mov
jb
pop
add
call
int3
mov
dec
pop
stos
jns
mov
in
sub
xchg
test
das
mov
pop
inc
mov
push
jp
xor
mov
repz
ret
mov
aaa
dec
mov
ljmp
out
out
mov
arpl
les
pop
xorl
sub
pop
aam
addr16
fs
and
push
cmpb
addr16
es
aaa
pop
js
or
aaa
fisttps
addr16
xchg
or
jae
xchg
in
xchg
xor
popf
insb
cmpsb
sub
and
cmp
adc
repz
scas
fwait
cli
dec
push
fimull
pop
iret
adc
leave
stos
jne
hlt
ja
hlt
arpl
std
pop
inc
sbb
jae
push
push
pop
inc
or
repnz
add
leave
es
je
cmp
or
test
loopne
nop
rolb
mov
push
xchg
cmp
adc
push
push
sarl
jbe
push
mov
shlb
adc
jns
jo
jne
std
xor
jno
sbb
jl
mov
dec
les
xor
add
sub
push
and
push
test
mov
cmpsb
test
sub
enter
daa
pop
fs
mov
subl
cmc
push
xchg
sbb
push
movsl
sbb
lahf
jbe
sub
sbb
cmp
add
add
xor
fsub
test
pop
xchg
xor
int
shlb
jp
cli
cmp
sub
push
outsb
aam
cmpsb
adc
mov
pop
mov
bound
sub
and
pop
push
mov
lods
cmpsb
sub
stos
jae
cvtps2pi
push
jae
roll
mov
mov
xchg
mov
test
mov
cmp
sbbl
xchg
mov
sti
fs
aas
ss
out
cmp
pop
add
aas
inc
cmp
sub
stos
xor
aas
daa
or
push
mov
outsl
incb
cmpsb
adc
cmp
inc
xor
xchg
add
mov
data16
or
mov
test
xchg
sub
or
psubq
gs
push
lock
out
loopne
dec
lcall
mov
add
add
repz
mov
cmp
cmp
mov
adc
sbb
pushf
negb
mov
sub
aad
push
lods
nop
or
jp
ret
jb
loopne
dec
out
aad
sbb
xor
sahf
cmp
adc
mov
mov
outsb
lea
push
xchg
loop
int
sub
imul
stos
out
mov
jo
xchg
adc
js
sub
cmp
push
std
or
rcrl
mov
icebp
ret
cld
inc
pusha
jg
add
jae
inc
call
dec
lock
add
das
xchg
popf
das
sarb
dec
pop
aam
data16
jg
cli
es
inc
jmp
dec
jno
pop
es
repz
ss
loop
data16
out
cmp
mov
popf
js
mov
xchg
fwait
add
jnp
test
dec
xchg
mov
pop
jmp
leave
jg
lcall
add
add
jo
mov
add
jle
push
mov
dec
leave
xor
and
push
insb
bt
inc
xchg
sbb
cmp
dec
lret
inc
lea
or
ja
fwait
stos
in
js
push
dec
cs
cmp
loopne
xchg
jns
aad
in
mov
xchg
sub
sbb
test
pop
std
imul
lahf
jecxz
jp
mov
push
mov
mov
cmpsl
inc
jne
mov
in
pusha
out
insl
rorl
push
insl
adc
mov
dec
inc
addl
out
pop
xchg
sub
push
mov
stos
jo
sbb
enter
ljmp
jle
aas
pop
in
and
fildll
hlt
ret
lods
pop
sbb
lahf
mov
push
pop
test
popf
xchg
mov
mov
pop
jno
ficoml
cltd
xchg
fwait
stos
mov
inc
imul
ret
push
and
mov
iret
jno
cmc
repnz
leave
leave
and
enter
mov
mov
inc
and
popf
push
test
testl
pop
cmc
cltd
pop
xchg
dec
int3
ficomps
jl
lds
lahf
shlb
mov
in
xor
int3
rolb
icebp
imul
jbe
mov
repz
mov
aaa
das
mov
cmp
ljmp
fsubr
es
mov
data16
xor
pop
jle
scas
test
push
sub
xchg
push
je
push
inc
inc
rcrl
in
fmull
add
pop
dec
into
push
sub
sub
out
cmp
in
and
into
lahf
xchg
negb
sbb
in
add
imul
sub
mov
stos
sbb
setnp
push
push
sbb
inc
sti
jecxz
push
repz
outsl
adc
in
mov
rcl
mov
jo
and
out
push
rcl
int
jge
sub
les
inc
add
call
mov
jo
sbb
jle
sahf
daa
cmp
add
push
shll
loop
push
movsb
stc
fyl2xp1
outsl
fs
cmc
notb
push
xor
lret
push
dec
cmp
jo
es
xor
sub
testl
out
cmc
mov
dec
pop
outsl
fstpl
or
cmp
push
mov
and
add
or
lods
mov
inc
mov
add
cmp
into
sub
xlat
mov
lahf
call
dec
jecxz
push
gs
mov
loopne
jl
pop
std
sub
inc
test
sub
cmp
pop
in
addr16
repz
pcmpgtw
pop
test
xlat
decb
stos
test
adc
jl
adc
jmp
jno
cs
add
nop
out
loopne
and
lods
dec
pop
cwtl
sub
loopne
les
lods
lea
enter
movl
sbbl
mov
sub
inc
jmp
stos
rolb
outsb
stc
cs
dec
xlat
xchg
mov
daa
or
and
pop
add
loop
idivb
mov
cwtl
sub
mov
add
and
cltd
pop
xor
insl
es
mov
mov
lock
das
jne
mov
sub
cltd
outsb
ret
push
sub
es
insl
rcr
cmpsl
dec
outsl
or
pop
int
ljmp
in
pop
pop
stc
mov
int3
bound
mov
das
loop
test
ja
test
pop
push
mov
sbb
push
mov
mov
sarb
aas
clc
dec
sub
sbb
mov
pop
sbb
stos
dec
dec
in
push
icebp
je
jge
adc
xor
and
or
xor
or
push
sbb
fcomi
test
lods
inc
xchg
popa
inc
and
sbb
flds
push
stc
pop
mov
sub
mov
or
jae
mov
in
lea
xchg
jnp
sbb
jge
pop
pop
mov
or
jbe
mov
mov
cs
dec
jge
repz
ljmp
dec
in
and
es
jmp
sub
je
rolb
out
push
subl
mov
jecxz
sbb
filds
jnp
push
jmp
in
popf
sub
jp
fisttps
sbb
mov
inc
repz
jae
xchg
aas
push
sbb
scas
mov
sahf
dec
leave
fiaddl
rclb
data16
imul
scas
popa
scas
push
push
push
fists
repnz
add
hlt
or
mov
inc
and
pop
or
xor
int3
in
or
jo
add
mov
int3
dec
push
leave
pop
lds
faddp
inc
xchg
or
jnp
int
sbb
mov
js
xchg
cmp
sbb
outsl
rcrb
popf
xchg
imul
dec
sbb
stc
jmp
jno
xor
add
orb
sub
xor
mov
int3
scas
test
sti
jle
test
aas
push
cmp
push
lahf
cmpsb
mov
cmp
insb
inc
adc
pop
mov
push
lcall
nop
pushf
sub
ds
data16
pop
jae
lahf
mov
xor
sbb
jns
push
and
cmp
push
pop
in
push
js
imul
xchg
push
outsl
push
test
jnp
lock
sub
cmpsb
outsb
lcall
shrb
mov
mov
call
mov
sbb
mov
aaa
jb
jo
sbb
les
int
xor
pop
les
lret
push
shrl
mov
xor
push
test
sbb
and
aad
pusha
out
loop
mov
push
fs
xor
mov
dec
jmp
shll
hlt
idivl
popf
in
pop
into
popf
cmp
ss
ds
push
xchg
cmc
push
lds
outsb
aam
outsl
mov
pop
adc
imul
xchg
push
popa
add
sbb
data16
jg
lods
popf
repz
cmp
adc
popf
lcall
or
sar
push
outsl
loopne
dec
loope
loopne
mov
push
inc
xchg
ds
outsl
rclb
jbe
repz
push
xchg
xor
sbb
xchg
cmpsl
xlat
cmp
aad
adc
popa
cmp
fwait
test
aad
push
xor
dec
lock
and
dec
aad
cmc
je
inc
or
shrl
push
call
ret
test
jo
cmc
xor
dec
inc
in
movsl
fistpl
pop
adc
inc
inc
mov
mov
fidivs
and
jo
rcll
iret
sti
idivb
rorb
cwtl
in
mov
mov
jo
push
cld
cwtl
rcr
loope
leave
mov
into
xchg
mov
ret
test
das
push
sarl
shlb
sub
into
ret
popf
push
cmp
dec
ja
insl
mov
nop
dec
push
jbe
pop
clc
inc
ljmp
test
mov
out
es
stos
and
mov
les
mov
pop
mov
fstpt
xchg
push
dec
dec
pop
out
clc
orl
insl
add
sbb
adc
roll
movsb
stos
aaa
push
and
lret
push
sbb
pop
and
xor
or
inc
loope
out
push
mov
lds
cs
push
dec
xchg
or
push
inc
mov
pop
arpl
pushf
pusha
cmp
add
daa
ljmp
mov
jns
pop
and
inc
mov
popf
mov
xor
mov
jae
shll
mov
jp
in
sbb
inc
js
mov
xchg
jne
lods
in
mov
pop
movsl
out
sub
addr16
stc
push
pusha
jmp
imull
mov
out
inc
ljmp
inc
insb
addr16
in
shlb
notb
outsl
jnp
pop
loopne
sbb
in
jle
pusha
fildl
stos
mov
lcall
stc
aam
mov
and
loopne
mov
mov
pop
push
frstor
setno
pushf
sbb
sub
scas
les
push
scas
lods
leave
adc
xchg
cli
iret
das
scas
push
bnd
stos
leave
adc
cmp
pop
adc
arpl
mov
es
mov
xchg
inc
subl
int
stos
add
mov
js
hlt
pop
jg
fs
push
lds
rclb
popa
and
sub
movsb
pop
sbb
gs
loope
jge
cwtl
cwtl
sbb
pop
aaa
lods
repz
jb
jl
sbb
xchg
stc
aas
test
mov
xchg
jl
inc
mov
test
or
inc
inc
and
push
lods
push
in
stos
sahf
repnz
daa
pop
lahf
mov
mov
clc
sub
and
and
andl
lahf
shll
add
sbb
aaa
add
xor
push
jno
mov
dec
pop
or
js
fsubrs
lcall
push
fcompl
std
mov
std
notl
adc
inc
inc
fists
popa
orl
jg
lret
push
xchg
outsb
int
int3
pop
sub
mov
lret
pushf
roll
mov
sahf
insl
cmp
sbb
lcall
stos
stc
inc
and
adc
sub
ss
mov
cmp
push
test
idivl
cli
ret
xor
sbb
or
cmp
aam
xor
leave
outsl
outsl
fwait
pop
or
jecxz
insb
imul
aaa
movsb
dec
imul
out
testl
orl
repnz
sub
enter
shl
test
dec
pop
cmp
dec
inc
stos
mov
xchg
les
fcmovb
repz
int3
imul
jl
pop
adc
xor
cmc
sti
add
pop
pop
jbe,pn
cmp
rorb
sub
dec
fisttps
jle
movsl
xchg
inc
dec
dec
das
mov
jecxz
adc
lea
insl
call
inc
or
mov
orl
les
ret
mov
xchg
aas
aas
xchg
mov
mov
dec
push
shll
mov
std
add
mov
mov
sahf
test
inc
loopne
cld
ret
cs
push
aam
mov
scas
lea
mov
hlt
shlb
or
sub
cli
lods
ret
sub
mov
sarb
scas
dec
gs
dec
cmpsl
pop
cmpsl
xchg
ljmp
and
std
jmp
and
out
xor
pop
jecxz
flds
iret
cmp
test
ja
mov
push
sub
lds
mov
inc
lret
sbb
push
rcl
sub
pop
jno
int3
stos
sbb
xchg
les
adc
addr16
xor
dec
xchg
xor
inc
inc
mov
enter
orl
test
mov
xchg
inc
dec
inc
push
ret
xchg
lahf
push
aas
push
lock
mov
xchg
decl
add
fdivrl
xchg
sbb
iret
ds
xchg
sbb
mov
xlat
xchg
mov
cs
ja
out
jp
xchg
inc
mov
mov
mov
mov
inc
in
jne
aam
mov
add
out
or
pop
jmp
ret
xor
adc
nop
jmp
loope
inc
mov
addr16
outsl
and
add
jnp
cmc
in
cmp
in
ret
aam
jbe
nop
mov
ret
mov
out
inc
or
jp
or
xchg
popf
or
mov
sbb
xchg
fisubrl
mov
mov
repz
idivb
adc
pop
fmul
mov
repnz
sbb
mov
arpl
or
sub
or
push
add
popf
add
cmp
and
sbb
mov
scas
shlb
or
sahf
insl
fs
or
movsb
xchg
je
push
or
mov
dec
sbb
add
aaa
insb
pop
enter
cmp
xlat
add
pop
cmc
ret
jbe
push
fcompl
mov
insl
inc
push
scas
and
test
stos
insl
test
aad
and
cmpsb
xchg
sub
in
xchg
jg
enter
daa
pop
adc
push
xchg
xchg
loope
test
sub
xorl
movsb
or
cmp
sbb
sbb
inc
sbb
xchg
pop
sub
jae
pushf
pop
xor
pop
pop
int3
xchg
sbbl
inc
aaa
adc
outsb
pusha
mov
adc
and
cmp
mov
ret
mov
clc
push
lret
int
dec
mov
ljmp
lret
rol
call
cmpsl
sbb
lods
sahf
adc
dec
sbbb
sbb
pop
xor
loop
cmp
lods
and
adc
popf
ss
xchg
mov
fmuls
pop
insl
idivl
lock
cli
cmc
jmp
xor
xchg
test
inc
add
mov
fcomi
clc
int3
and
and
scas
outsl
jp
xchg
mov
push
imul
dec
data16
xor
rorl
sub
push
adc
loopne
insl
sti
cld
imul
loopne
jp
pop
pop
xchg
lret
cmp
les
xchg
outsl
repz
cmp
pushf
jnp
cmp
not
mov
nop
clc
adc
pushf
adc
mov
aad
cvtdq2ps
ds
jb
xor
movsb
je
sti
shl
icebp
cmp
stos
xor
lea
rol
shr
mov
cmpsl
rorl
fstpt
lock
inc
inc
pop
inc
inc
mov
rorl
xorl
jge
fcomps
or
mov
sahf
testb
test
adc
dec
xor
icebp
push
push
cmp
jo
lret
mov
sbb
lret
lock
das
adc
lods
rorb
push
cmp
jp
mov
ret
mov
js
insl
test
cltd
cmpsl
pop
fcmove
ljmp
shrl
dec
mov
mov
pop
adc
add
push
loop
popa
cltd
dec
inc
int3
test
subl
jecxz
push
aad
fldl
ss
stc
push
les
sarl
roll
rcrb
out
xchg
leave
and
or
dec
psadbw
xor
xchg
mov
xor
fpatan
mov
lret
mov
dec
ljmp
xchg
adc
inc
jmp
pop
cmp
data16
push
loop
add
cmpsb
hlt
je
in
fsubrs
sub
insb
jns
jo
in
adc
loope
xor
les
pop
jmp
lcall
je
sub
cltd
xchg
sub
jnp
mov
es
mov
mov
mov
fstl
xchg
xchg
jne
lea
cmpl
out
add
sub
aas
insb
push
addr16
jne
and
pop
insb
xchg
cmp
jnp
sub
in
insb
frstor
push
xchg
fucomip
mov
ret
out
pop
stc
ja
inc
adc
cmp
ficoml
popf
das
jmp
inc
push
pop
ljmp
mull
adc
jo
scas
mov
pop
push
cmp
ss
in
aaa
add
and
test
outsb
pop
hlt
out
sbb
arpl
xchg
inc
sub
sahf
or
cmpsb
int3
cmc
inc
subl
and
or
pop
push
add
fisubrs
cmpsb
lret
ror
add
xor
das
cmp
and
pop
push
jge
icebp
fcomps
mov
in
push
cmp
rorb
or
jl
mov
sbb
mov
loope
jo
decl
scas
add
inc
push
je
test
mov
and
adc
in
js
sbb
pop
push
xchg
daa
pop
add
or
dec
lret
xchg
sub
mov
cmp
fwait
ds
cld
movsl
cmp
cmc
and
pop
pop
lahf
adc
xchg
sub
lods
sbb
cmc
les
dec
lcall
outsl
cmp
adc
das
pop
or
adc
mov
fdiv
popf
cmp
or
pop
adc
sti
lock
xchg
ret
jl
movsl
mov
test
and
and
push
sub
add
inc
add
xor
pop
mov
cmpsl
leave
sbb
jnp
mov
fiaddl
xor
jg
sbb
jne
adc
and
and
xlat
out
cmp
movsl
ret
in
cli
sub
sbb
scas
pop
loop
mov
scas
into
xchg
pop
fprem1
mov
loop
outsl
pop
cmpsl
inc
adc
jb
adc
jecxz
add
cmp
cwtl
lcall
xor
out
pop
pop
sub
out
mov
dec
mov
stos
gs
outsl
mov
jmp
fdivp
mov
inc
rolb
push
fsts
les
pushf
jbe
inc
adcl
pop
cmp
mov
cli
int
pop
ja
mov
pushf
mov
pop
mov
cmp
mov
nop
push
lods
dec
popf
pushf
lods
jb
or
imul
iret
lods
nop
jmp
call
inc
push
orb
xchg
push
dec
add
pop
cld
adc
inc
movl
insb
aas
vmovupd
add
pop
roll
sub
testb
jb
adc
dec
lahf
mov
cmc
icebp
imul
xchg
cs
mov
sbb
lock
lahf
das
icebp
inc
test
fst
cmp
jno
xor
ret
dec
data16
or
pop
dec
dec
pop
int
cmpsl
pop
xchg
shr
xor
cmc
lods
push
jge
mov
pop
sub
mov
and
cltd
adc
test
jecxz
mov
add
insb
sbb
xchg
sub
test
out
pop
mov
fucomip
hlt
jo
xchg
push
mov
inc
andnps
bound
cmp
xor
sbb
movsb
repz
push
sarl
xchg
mov
inc
adcb
or
cmp
negl
test
popf
add
sarl
decl
fnstsw
icebp
xchg
in
aas
fcoml
js
xchg
mov
movsb
xorl
jp
call
mov
scas
push
mov
mov
dec
or
jne
dec
and
enter
jb
bnd
pop
jp
orl
cmpsl
out
mov
sub
cmp
sbb
sbb
stos
scas
sbb
cmp
xchg
in
fnstsw
or
pusha
lods
sbb
fisttps
mov
ret
pop
pop
xor
mov
test
mov
arpl
push
lcall
xchg
dec
sub
mov
loopne
ss
in
mov
shlb
iret
dec
add
je
sti
leave
jne
or
cmp
jle
mov
inc
das
mov
or
and
pop
inc
add
or
mov
gs
adcl
fwait
lds
inc
add
out
icebp
mov
les
movsb
test
scas
push
stos
mov
inc
jge
je
sbb
imul
inc
nop
cmp
addps
or
jl
and
push
mov
call
dec
scas
loopne
mov
inc
cmpsb
shrb
or
cmpsb
xchg
mov
in
pop
in
addr16
daa
pop
jle
push
pusha
xchg
loope
adc
cmp
xor
ds
and
mov
xor
push
add
push
cmp
mov
dec
pop
adcb
lcall
pop
jecxz
push
add
call
sub
dec
mov
adc
xor
jmp
lds
and
cs
lock
add
pop
rorb
lret
pop
ret
mov
daa
sbb
imul
or
jb
dec
add
loop
outsb
imul
stos
aam
adc
mov
cmp
addl
fwait
xor
adc
or
aam
into
jp
push
xchg
add
shrl
adc
imul
and
data16
and
cmp
pop
mov
jns
sub
adc
mov
daa
sti
pop
and
test
test
jns
ljmp
push
mov
dec
add
mov
adc
jp
ljmp
xlat
cmp
ja
sub
adc
push
inc
pushf
sub
jmp
jge
cs
xchg
es
inc
fcoml
cld
push
sbb
fbld
ret
push
pop
mov
and
fimuls
mov
je
adcl
pop
fistpl
jmp
pop
lahf
daa
adc
push
int3
inc
cmc
nop
inc
aas
fs
fdiv
mov
out
push
push
sub
std
testb
shlb
lds
enter
int3
mov
cld
inc
jno
lret
popf
mov
cmp
rolb
inc
das
shrb
shlb
out
aam
subl
fstps
add
imull
cmpsl
push
int3
cltd
ljmp
lods
jno
fdivrl
jnp
cwtl
and
shl
pop
inc
popa
push
cltd
mov
cwtl
fnstenv
pop
push
xor
xchg
leave
lock
outsl
cmpsl
adc
aaa
pusha
jne
das
cmp
stos
repz
out
push
or
xchg
cltd
or
push
les
scas
xor
xor
adc
insb
mov
shll
lods
test
mov
xchg
and
jl
add
outsl
xchg
or
inc
movsb
fwait
les
push
sub
testb
nop
dec
ljmp
pusha
fisubs
sahf
pop
jns
push
mul
jo
popf
xchg
push
repnz
jl
mov
pop
test
ja
mov
jp
ret
and
mov
pop
jecxz
dec
in
mov
jne
mov
cwtl
out
cmpsl
stos
sub
test
xchg
and
cli
sbbl
add
or
aaa
fsubrs
push
inc
mov
jnp
push
mov
movsb
in
ljmp
daa
mov
cli
pop
xchg
inc
sub
xchg
jae
cmp
push
in
hlt
xlat
popf
jge
sub
fnstcw
arpl
subl
movsl
sbb
imul
fldt
lret
push
mov
fwait
sub
iret
stos
rolb
leave
in
and
arpl
sbb
or
pushf
in
jge
jg
xor
cltd
stc
sbb
sbb
xor
mov
jge
lock
cmp
pop
mov
push
jae
cmp
or
push
cli
mov
sbb
lret
sbb
test
cmp
xchg
jno
frstor
fidivl
dec
push
add
outsl
xor
jle
ret
scas
mov
jb
test
ss
mov
cmpsb
sbb
in
inc
jp
enter
daa
push
jnp
push
push
pop
loope
jge
sub
xchg
test
mov
and
movsb
and
or
adcb
cmpsl
sbb
push
add
mov
xor
or
ja
js
pop
sbb
mov
push
adc
and
faddl
dec
sub
inc
shrb
xchg
std
adc
mov
out
jecxz
divb
push
lahf
mov
or
push
roll
test
pop
ret
and
aas
lcall
bound
mov
and
xchg
in
subb
jg
movsb
loop
sbb
and
fs
rcll
cs
jp
pop
call
fdivrs
push
idivl
ja
mov
ret
xor
pushf
or
iret
jge
dec
das
xor
add
adc
or
pop
adc
mov
and
xchg
add
mov
mov
ss
test
fdiv
ljmp
push
iret
sti
or
mov
loopne
sub
pop
mov
cli
inc
idivb
xorb
les
scas
xchg
int
test
adc
mov
cmpsb
adc
out
adc
push
sbb
stos
jmp
gs
add
aad
jbe
nop
or
jb
push
push
dec
sub
mov
mov
in
push
call
ds
lds
call
mov
fildl
aad
inc
xor
aad
jg
adc
adc
jno
xchg
sbb
shll
sbb
std
popf
and
cwtl
mov
mov
add
sti
cli
arpl
mov
das
jae
or
mov
pop
lock
sub
cld
das
scas
lahf
and
subl
pop
push
lock
push
fistps
cmp
dec
push
cmpsl
das
cmpsl
push
mov
ljmp
fsubrl
cmp
inc
dec
and
pop
pusha
pop
pop
pop
stos
mov
sbb
xchg
cltd
lock
test
mov
jns
push
and
fnstsw
scas
repnz
test
cltd
sbb
loopne
roll
mov
out
mov
shrb
movlps
adc
out
orb
lret
pop
popf
xchg
mov
aam
fmull
and
test
cmp
xchg
decb
popf
aam
scas
lock
or
and
push
push
lret
mov
ja
idiv
cmpsl
dec
test
and
fisubrs
xchg
push
ret
js
lock
addr16
ret
pop
sbb
ja
int
jp
cmp
mov
popa
sarb
aam
dec
iret
in
jne
push
xchg
mov
fsubr
xchg
jnp
sbb
jmp
out
movsl
subl
clc
out
lcall
or
test
addr16
fwait
stos
xchg
mov
xlat
jmp
push
jle
lahf
mov
outsl
mov
jp
inc
lds
ret
add
add
xor
mulb
push
scas
xchg
repnz
movsb
daa
jl
fnstcw
push
push
sbb
sbb
cld
sub
push
sbbb
lods
icebp
push
adc
cwtl
iret
or
mov
arpl
jmp
inc
xor
es
inc
xor
add
jno
fisttps
xchg
lds
lahf
test
sbb
hlt
scas
and
xchg
int
pop
movsb
mov
and
das
xor
and
or
push
mov
cmpl
dec
les
push
push
and
jo
mov
scas
sahf
jns
push
in
jno
test
add
inc
xor
inc
cmpsb
popf
mov
in
sub
lcall
push
sti
lcall
inc
ret
pushf
sub
xor
mov
push
sub
and
xor
and
cltd
sbb
ljmp
rcrb
js
stos
pop
enter
ret
in
push
mov
xchg
fdiv
leave
xchg
sub
sti
subl
mov
ds
pop
xor
add
and
adc
xlat
int
daa
subb
push
pop
pop
mov
mov
sar
cmp
cmpsl
adcl
xchg
ficompl
sbb
lods
jg
jo
loop
std
cmp
fiaddl
sarl
jge
jg
mov
imul
mull
aaa
fcomip
cli
sar
xor
popf
cmp
stc
mov
add
xor
sbb
outsl
divb
inc
adc
lcall
push
movsl
std
add
data16
pop
lods
pop
adc
lods
test
cltd
sub
add
mov
call
fcomps
fs
in
pop
stos
push
inc
or
mov
cmp
adcl
test
scas
pop
nop
ja
adc
addl
gs
mov
xor
aad
dec
mov
lret
jns
lahf
fisubrs
jecxz
sub
mov
int
dec
out
call
mov
push
repz
add
jbe
popf
pop
in
cmovne
inc
sub
in
aas
mov
add
push
and
outsb
add
notb
inc
std
inc
loopne
cwtl
inc
lock
mov
jp
ret
cld
lcall
mov
and
out
mov
xchg
jbe
mov
enter
pop
sub
xor
out
mov
es
ljmp
dec
jb
cmpsl
push
into
cs
outsl
lods
inc
movl
mov
aad
scas
mov
jle
leave
add
mov
out
sbb
cmp
popf
imul
in
out
out
sbb
insl
fcompl
cmp
sbb
add
push
jp
orb
cmpl
popf
add
xor
xchg
xchg
popa
ds
xchg
inc
test
pop
std
xchg
inc
and
inc
inc
xchg
or
xlat
sbb
outsb
je
add
adc
ljmp
test
jns
dec
sub
xchg
stos
mov
fldcw
aad
cli
ja
xchg
loop
shlb
mov
aaa
mov
mov
sub
jno
mov
imul
adc
xchg
jmp
sub
jae
jmp
mov
cs
out
out
sub
sub
stos
or
test
xor
insb
inc
jbe
jnp
sahf
mov
ljmp
pusha
jge
add
rcll
pop
aad
mov
jae
hlt
imul
scas
or
adc
mov
fucompp
jle
xchg
push
pop
xchg
sbb
pop
shrb
adc
push
pop
jl
adc
or
imul
leave
fisubl
hlt
sbb
shlb
pop
sub
xchg
pop
or
xchg
pop
lods
inc
jge
insl
or
faddl
dec
sbb
pop
push
icebp
leave
fidivs
mov
lahf
fs
sarb
cli
mov
jge
add
test
pop
push
cwtl
enter
xor
sub
movsb
cld
xor
daa
addr16
cmp
sti
pop
jno
jmp
jl
lcall
dec
lods
cli
xor
xor
and
shlb
push
int3
or
jne
cmpsb
and
in
adc
mov
dec
das
sbb
push
push
jns
movsl
mov
je
sbb
push
ds
sbb
jns
inc
add
lahf
lcall
sbb
inc
push
xor
into
aaa
inc
xchg
adcl
lcall
push
fcompl
jp
outsb
dec
pushf
cmp
lret
cmp
std
mov
repz
mov
ficompl
fld
rolb
mov
jmp
push
xchg
pop
cmp
movsb
lock
mov
cmp
insl
test
in
jg
aas
fsub
rcll
stc
xchg
jmp
dec
dec
call
ss
lret
rorl
div
in
cli
hlt
jge
xor
mov
pop
sub
or
mov
cmc
jmp
adc
adc
pop
test
outsl
push
outsl
adc
jecxz
add
jno
popaw
data16
lods
out
pusha
orb
lahf
inc
sub
rorl
in
imull
sti
addr16
xchg
sti
shlb
gs
sbb
dec
mov
pop
cmc
cmp
sbb
imul
jb
les
or
jge
add
pop
enter
sarb
testb
adc
test
jmp
sub
aad
add
add
out
jb
jb
dec
push
push
loope
sarb
fld
mov
push
xchg
call
cmp
cltd
mov
inc
adcl
pushl
movsl
jmp
pop
mov
cwtl
inc
jecxz
out
inc
inc
inc
sbb
inc
in
aas
mov
fistps
and
adc
sarl
mov
notb
orb
cs
mov
lret
lock
push
lds
lret
ljmp
mov
push
mov
loope
arpl
insl
or
pop
sub
rcl
mov
repz
xchg
les
loop
loope
or
push
dec
inc
shrl
cmpsl
push
xchg
fucomi
daa
les
xchg
mov
jno
repz
fnstcw
fmull
xchg
outsl
push
pop
popf
dec
cwtl
add
lea
sub
push
movsb
mov
clc
and
es
ret
sbb
lods
shll
cmpsl
stos
shl
out
adcb
push
push
pushf
stc
psrlw
popf
xor
jmp
mov
arpl
push
lret
test
or
dec
push
cmpl
or
fwait
push
jnp
push
adc
push
add
sub
dec
mov
adc
in
xor
mov
xor
mov
ja
push
inc
sbb
jo
jecxz
cmpsb
add
xchg
sbb
jne
lock
inc
dec
push
xchg
mov
lods
jae
test
inc
orl
out
inc
lds
es
addr16
jmp
jnp
jne
xchg
add
movsl
jnp
or
in
xchg
xchg
pusha
sbb
movsl
filds
or
ljmp
in
bound
xor
outsl
imul
pushf
adc
xchg
stos
mov
sbb
hlt
into
imul
push
mov
scas
adc
enter
rcrb
hlt
gs
arpl
xor
sbb
or
pop
in
jb
test
loop
and
mov
pop
or
fxtract
xor
mov
mov
adc
cmp
lret
aam
ret
push
out
out
jbe
scas
dec
jge
data16
pop
test
out
fidivrs
sti
pop
inc
jno
sub
pop
push
dec
mov
inc
xor
jecxz
scas
pop
jmp
push
xchg
or
inc
push
xchg
or
cmpsb
mov
js
enter
daa
push
mov
push
sub
mov
pop
dec
cmp
adc
pop
movsl
pop
mov
and
pop
test
dec
dec
push
sbb
mov
add
ret
gs
and
add
cmp
or
pop
inc
outsb
lahf
lcall
xchg
fmull
push
sub
or
mov
popl
or
xor
scas
dec
mov
inc
pop
and
scas
je
faddl
das
int
out
das
sub
jns
pop
mov
dec
xchg
shll
loope
jge
mov
imul
test
inc
sbb
mov
adc
push
pop
xor
dec
bound
outsb
mov
sbb
inc
ss
sbb
insl
mov
inc
cli
daa
mov
xor
or
dec
or
test
call
xor
repnz
mov
pop
adc
mov
aam
xchg
push
pop
lods
aad
dec
mov
or
xor
cli
sub
mov
sti
push
int3
adc
push
clc
subl
pop
adc
fiadds
movaps
daa
mov
repz
mov
xchg
push
stos
dec
sbb
insl
jno
xlat
xor
mov
ss
adc
scas
jmp
mov
sub
mov
cltd
push
jb
js
jb,pn
dec
popa
dec
lea
je
stc
push
jecxz
mov
push
lea
lahf
xor
lret
mov
mov
subl
jae
pop
sub
adc
push
jo
loopne
jmp
xchg
in
and
or
insb
not
or
xchg
add
cwtl
mov
jne
mov
sub
cld
lock
enter
mov
pop
test
mov
and
das
dec
dec
jae
cld
push
pop
sub
aam
es
ret
adc
pop
jno
out
dec
sub
cmpsl
push
loopne
ljmp
add
sbb
out
js
pop
cwtl
sub
jecxz
in
mov
mov
ret
jno
xchg
sub
test
mov
mov
mov
and
das
jbe
clc
pop
inc
enter
xor
add
mov
stos
scas
or
xchg
mov
ret
push
xor
wrmsr
cmp
or
push
call
xchg
out
jl
push
into
addr16
dec
rolb
dec
add
or
mov
fwait
xorb
in
adc
dec
mov
push
bound
adc
xchg
inc
iret
xor
pop
fimull
dec
or
adc
xlat
dec
mov
std
iret
mov
adc
add
shrl
jae
insb
out
and
mov
xchg
dec
fstl
sbb
pop
out
adc
or
shrb
stos
out
out
cltd
and
or
jnp
cmp
pop
in
xchg
jp
mov
adc
mov
sub
inc
push
mov
push
push
fidivs
mov
in
popf
sbb
mov
aad
xchg
dec
pop
xchg
add
sub
imul
sbb
ss
adc
add
daa
xor
repnz
dec
hlt
mov
jnp
rcll
or
mov
add
or
dec
add
push
int3
imul
dec
fidivrs
lds
adc
mov
cmpsl
or
pop
or
ss
jbe
fwait
mov
pop
aas
sbb
mov
jl
cs
mov
jl
push
dec
dec
adc
jb
adc
cmc
xor
ljmp
push
test
mov
pop
mov
cmpsb
es
add
loop
enter
daa
push
xchg
or
stos
sub
loope
xchg
cwtl
sub
inc
sti
cmp
or
cltd
in
movsl
mov
and
push
lahf
lret
test
sbbl
jge
mov
mov
enter
inc
in
jecxz
stc
sbb
pop
test
add
mov
int3
fdiv
imul
adc
sbb
push
mov
les
mov
scas
mov
std
fldenv
mul
xor
fistpll
shrb
mov
pop
cmp
cmc
lret
pop
sarl
sbb
jb
test
xor
jg
ljmp
ljmp
fs
out
adc
fbstp
imul
fsubrs
jle
divl
cli
pop
movsb
out
xor
jbe
cmp
or
or
adc
cmc
imul
outsl
xchg
ljmp
pop
int3
aad
mov
add
movsb
adc
add
xor
sahf
push
notl
sub
mov
sar
pop
test
mov
loopne
xchg
inc
inc
adc
inc
sti
les
repnz
xchg
cs
test
pop
xlat
je
add
adc
inc
pop
jmp
lods
and
mov
xor
or
nop
je
add
mov
orb
xchg
je
leave
inc
jecxz
ret
mov
sarl
cmp
addl
fildl
shlb
into
fildll
jl
popf
aas
jg
sbb
dec
adc
and
pop
mov
fstl
mov
sbb
int3
std
cmp
cwtl
ja
test
sub
icebp
incl
ljmp
push
sti
mov
dec
sbb
das
sub
jle
cmp
sub
inc
mov
push
es
pop
mov
cmpsl
push
scas
test
popa
fistpll
mov
ljmp
add
pop
fcomi
pop
add
xor
or
push
sub
cmpsb
fstl
xchg
clc
xchg
cwtl
adc
movsb
lret
outsl
sbb
inc
negb
mov
inc
popa
aaa
xchg
cld
jecxz
push
or
jg
sbb
or
mov
cmc
fiadds
mov
sub
xchg
mov
cmp
decb
in
fwait
scas
mov
push
push
pop
pop
add
arpl
incl
out
bound
or
jns
imul
mov
dec
mov
pop
push
push
ret
hlt
insb
jp
push
int
push
jns
mov
test
dec
pop
and
jne
sbb
into
incl
and
jmp
sbb
adc
out
push
aam
xor
or
mov
stos
popa
jp
and
ret
insb
adcl
jnp
xor
in
sti
adc
call
out
ret
out
pop
jp
dec
inc
popa
add
jae
test
push
mov
dec
cli
mov
adc
fiaddl
pop
les
adc
fldt
push
shrl
sub
adc
imul
leave
aas
out
hlt
sti
adc
inc
inc
lods
ret
or
add
adc
sbb
or
pop
add
sarl
js
mov
scas
jae
pop
test
lds
lret
inc
andl
loop
cmp
add
push
test
jbe
std
fidivrl
cmp
sbb
dec
inc
aaa
fs
adc
or
jg
sbbb
xor
inc
fs
scas
sbb
push
cmp
test
sub
xor
dec
in
leave
xchg
sub
cmp
daa
push
sub
push
mov
lahf
sub
ds
cmp
lahf
std
ds
int3
cmpsb
and
test
jo
and
push
jae
xor
pop
sub
andl
les
lcall
data16
popl
outsb
js
adc
clc
leave
mov
cli
stos
mov
or
and
pop
call
int
inc
or
pop
mov
mov
rcll
mov
les
jns
sahf
sub
popf
xor
out
jg
sub
jp
iret
stc
mov
cmp
sub
mov
xlat
mov
push
bound
divl
push
icebp
cli
lea
xor
add
cmp
mov
or
lods
cmc
xor
outsl
jb
call
imul
add
add
mov
imul
mov
cmp
cmp
fs
gs
xor
loopne
jl
push
add
inc
push
dec
jg
xchg
movsb
mov
repz
sbb
jecxz
int3
xlat
mov
adc
adc
rcrb
push
cmp
push
dec
or
xchg
jb
mov
icebp
je
in
mov
imul
cmp
rcl
mov
lret
fistpl
icebp
dec
outsb
sub
xor
in
pop
jno
cwtl
inc
js
mov
aas
push
ss
inc
test
and
cld
push
shrl
push
negb
std
loopne
jp
xor
mov
push
xor
sbb
aaa
cmp
mov
jp
mov
loope
lock
shlb
mov
aam
jo
ret
xor
sbb
dec
outsl
dec
cmp
cmpsl
push
add
popa
imulb
jb
add
mov
icebp
lock
mov
cli
push
mov
cltd
add
cmp
in
or
fnstsw
aad
roll
sbb
xchg
cmp
arpl
test
mov
xor
out
add
xor
push
mov
mov
jecxz
dec
dec
and
popf
test
xchg
cltd
xchg
mov
mov
or
out
fidivs
push
cli
out
add
jle
and
les
jns
pushfw
in
cltd
push
xchg
loopne
jp
dec
add
pop
shll
cmpsl
sbb
mov
sbb
mov
pop
loopne
ds
cltd
jne
lds
out
loope
daa
xchg
aaa
xchg
sbb
dec
popf
cmp
in
lock
aam
sub
jae
pop
cmp
addr16
push
and
pop
push
insb
out
out
dec
jnp
in
bound
xchg
les
jp
xor
ret
lret
pop
mov
fldl
iret
jae
xchg
mov
popf
or
mov
push
pushf
mov
xchg
scas
xchg
loope
mov
lock
push
jne
push
adc
cli
loop
mov
sbb
hlt
inc
pop
sub
inc
inc
repnz
cld
inc
jns
out
or
out
cmpsl
aas
pop
int3
arpl
push
pop
lret
faddp
out
pop
lds
adc
mov
leave
cli
cmpsb
cmp
movsb
jne
das
push
aam
pop
jbe
shrb
mov
in
sbb
and
jno
mov
jl
rcr
dec
out
iret
ret
mov
xor
mov
mov
push
or
fldcw
clc
testb
sub
add
mov
fcmove
xor
cmp
add
add
add
adc
fistpll
movsl
je
xchg
and
fs
orl
sbb
leave
inc
xor
xor
dec
ffree
pop
xchg
incb
js
repnz
pop
add
lcall
aad
dec
mov
ret
outsb
fistpl
rclb
rol
cwtl
sbb
gs
cltd
les
adc
dec
push
movb
cmp
lods
shr
jne
xlat
add
sahf
lret
xchg
mov
aad
jg
cmpsb
sub
stc
insl
bound
adc
add
leave
arpl
sahf
mov
and
rcrb
cmp
aaa
xchg
or
push
dec
into
scas
or
cmc
idivl
xor
scas
outsl
push
jbe
adc
sbb
or
adc
and
add
out
insw
je
lods
mov
push
sub
mov
in
mov
rcr
incb
scas
mov
mov
inc
pop
jno
enter
jns
int3
cmpsl
repnz
xchg
repz
mov
sbb
push
aam
repnz
ficompl
stos
xchg
adc
lods
pushf
adc
in
loopne
scas
cs
fwait
jg
cwtl
rclb
nop
sub
dec
jb
pop
add
je
gs
jecxz
xchg
cmp
lea
cmp
cmp
mov
cmp
jp
jb
das
dec
pop
mov
pop
adc
add
inc
mov
cmp
mov
jp
mov
mov
jle
negb
jmp
cwtl
in
in
and
sub
fadds
lret
cmpsb
push
add
mov
in
lock
cmp
jmp
adc
sub
call
ds
ret
es
ljmp
xor
std
ljmp
or
pop
sub
mov
jo
lods
and
std
jge
pop
sbb
add
push
mov
mov
lcall
movsb
xchg
repz
or
aad
and
push
sbb
rcl
nop
loop
pop
pop
notb
stos
jl
sub
or
inc
xchg
mov
xchg
push
rorl
dec
push
xor
in
mov
lock
fnsave
add
xchg
stos
pop
dec
mov
jp
xchg
xchg
or
inc
cmp
fisttpll
mov
jne
popf
gs
add
cltd
sub
incl
jns
pop
mov
cmp
aas
pop
mov
cs
mov
jl
loope
push
and
jp
enter
mov
bound
movsb
jne
sar
mov
das
out
rcrb
or
jmp
mov
push
addl
dec
sub
adc
addr16
in
stos
inc
stos
sub
rep
leave
insb
pop
mov
mov
inc
mov
cltd
icebp
add
filds
push
mov
icebp
mov
iret
inc
ja
ret
in
push
inc
in
xlat
popf
mov
fcoms
movsb
mov
xchg
push
andb
xchg
cmp
push
and
mov
jne
iret
inc
in
repnz
ror
sub
add
arpl
push
loope
inc
lods
jmp
add
push
clc
sub
or
je
add
loop
int3
dec
sub
sub
inc
sbb
sarb
aas
and
cmp
sbb
add
lods
push
and
jge
cltd
mov
dec
imul
loop
aad
movl
jl
repz
lret
mov
aaa
xchg
jo
xor
scas
fdivr
mov
fbstp
push
ret
inc
mov
mov
cmpsb
scas
sbb
pop
enter
daa
push
add
lods
sbb
sub
mov
cmp
cmp
movsl
jnp
sub
dec
push
test
sub
adcb
mov
jae
xor
aad
pop
mov
mov
jb
cmc
enter
lahf
xchg
hlt
jge
sub
outsb
ds
je
cs
shrb
mov
scas
mov
daa
test
push
call
sub
pop
mov
ljmp
sub
les
inc
xor
es
adc
mov
loop
mov
add
adc
ljmp
xor
insb
divl
mov
ljmp
mov
dec
cmc
mov
inc
inc
outsl
xor
insb
adc
sub
imul
testb
out
jae
lock
stos
lods
jno
loop
xor
sub
enter
loop
in
push
sub
shlb
fldenv
lea
pop
nop
dec
pop
inc
jnp
xchg
flds
dec
popa
les
repz
test
and
cmp
and
xor
inc
pop
ret
adc
jne
jmp
sub
cs
xor
fistpll
xor
hlt
pop
out
jb
ret
lret
cmp
je
xor
jecxz
sub
push
decb
mov
and
mov
cmp
inc
shlb
nop
cmp
pop
mov
and
mov
or
pop
jnp
mov
jb
outsl
and
cmp
mul
sub
std
add
mov
dec
mov
test
add
adc
inc
inc
mov
xor
test
mov
rorb
mov
aam
or
ret
push
repz
jno
mov
mov
or
pop
xchg
cmpsl
dec
xor
ljmp
sub
mov
xchg
mov
and
cwtl
jae
pop
cmp
inc
add
xchg
push
test
pop
mov
pop
notb
cld
pop
bound
inc
sbb
sbb
adc
or
stos
imul
aaa
test
push
pushf
outsb
mov
xor
cmpsb
ljmp
loop
mov
jmp
shll
cmc
sub
xchg
push
mov
inc
iret
imul
cmp
mov
inc
fcom
add
mov
xor
and
pop
jns
dec
fsubp
enter
jle
add
clc
mov
push
ja
cld
sub
sub
mov
les
inc
pushf
mov
fisubrs
dec
add
jo
mov
inc
and
lahf
test
int
cmp
adc
adcl
add
or
cmpsl
scas
stos
mov
push
popa
jnp
lods
adc
mov
addb
pop
fistps
jl
ret
dec
pop
pop
pusha
xchg
inc
addb
jae
jp
push
add
leave
popf
mov
cs
shll
jno
sbb
aaa
sbb
lea
inc
js
scas
push
pop
loope
jae
in
iret
mov
insb
adc
movsb
insl
push
fdiv
push
inc
dec
fiaddl
push
ja
xor
add
test
int3
cmp
pop
sub
fimuls
pop
and
leave
cmp
rcr
repz
out
enter
lcall
inc
push
jbe
fstps
sbb
xlat
sub
mov
rorb
jl
out
dec
int
orb
push
xor
push
mov
xchg
push
mov
mov
push
mov
inc
inc
sbb
cmpsb
xor
adc
daa
dec
repz
push
aas
jae
das
out
sub
cs
cmp
stos
std
ds
and
aad
lahf
inc
cs
subb
mov
in
push
xor
insl
aam
and
mov
in
pop
subl
das
push
adc
xor
arpl
sub
mov
mov
mov
mov
add
xor
push
jmp
cltd
int
jne
sub
popl
pop
aaa
xchg
sbb
rcrl
pop
mov
imul
das
sbb
lret
test
addb
jg
jno
loop
fcoms
mov
test
cmpsb
pop
leave
ss
addr16
adc
xlat
divl
loope
es
lds
inc
xchg
cmp
mov
or
out
jne
dec
cmc
test
xor
adc
and
imul
cmp
pop
cmp
jae
shrb
mov
add
je
das
mov
jns
iret
sti
adcl
movsb
shlb
pop
scas
lock
sub
fnstcw
lcall
push
lahf
cld
xchg
in
cld
sbb
xchg
cmp
jo
inc
pop
jne
lock
and
jmp
xor
sbb
aad
adc
nop
loopne
adc
dec
in
jb
mov
bound
shl
xchg
jp
lret
cmp
lea
out
ss
mov
jae
andl
cwtl
ficompl
into
and
mov
inc
call
mov
sbb
rcr
cmp
mulb
clc
scas
cwtl
arpl
mov
addb
icebp
pop
mov
mov
test
int3
mov
out
movsl
lock
das
cmpsl
mov
rcrb
ljmp
jae
test
loopne
or
hlt
jecxz
insl
jb
into
dec
sub
bound
mov
inc
popa
cmp
inc
lods
xor
jo
or
fcomp
and
xor
pop
push
sbbl
mov
jle
test
cwtl
test
cmp
mov
xchg
add
xchg
mov
ss
ds
mov
out
shlb
xchg
sbb
xchg
ud2
dec
add
jle
mov
fimuls
bound
in
ror
push
pslld
jbe
arpl
or
mov
in
fwait
imul
jecxz
inc
add
iret
sub
bound
call
in
cmc
es
int
pop
mov
jecxz
mov
repnz
inc
inc
shll
jb
scas
mov
adc
out
sub
imul
xchg
xchg
mov
fsubr
xor
adcb
pushf
out
jmp
sub
or
scas
addr16
stos
sub
dec
push
insb
das
jge
jnp
mov
jle
sbb
in
ja
pusha
mov
cmpsb
adc
pop
dec
dec
pop
push
std
mov
jae
push
repz
std
pop
popf
fsubrl
dec
push
adc
fcmove
pop
mov
mov
sbb
pop
insl
imul
and
lret
pusha
adc
dec
fildll
adc
fcmovne
add
or
mov
cs
sbb
jb
push
jle
inc
dec
jl
or
out
lahf
mov
testb
and
push
add
int3
and
sahf
pop
push
adc
fisubrs
mov
dec
mov
cmpb
cwtl
movsb
movsb
push
daa
push
push
rol
jbe
or
sbb
ret
aaa
pusha
sbb
jno
mov
dec
cmp
les
xorb
jo
push
test
push
test
sub
pop
inc
test
inc
cmpsb
mov
pop
in
addb
dec
xchg
mov
xchg
loope
xchg
mov
cmp
loope
ds
mov
movsl
mov
lahf
sbb
cmpb
add
ret
cmpsl
xor
movsl
xchg
and
pop
push
enter
or
das
lcall
js
dec
scas
les
push
arpl
outsb
add
push
adc
fs
inc
cmp
mov
ficoml
ds
out
cs
int
mov
movsl
pop
mov
repnz
sti
shll
out
sbb
dec
aad
push
cmpl
pop
jecxz
adc
loop
pop
idiv
xchg
and
adc
ss
cwtl
and
iret
in
jb
das
jge
cli
pop
shrb
cmp
mov
or
and
cmc
dec
outsb
adc
push
imul
xor
inc
add
leave
push
data16
mov
pop
add
out
cmc
mov
in
aaa
sti
xor
cmp
ja
loopne
jns
pop
into
pushf
pop
inc
mov
mov
mov
cmp
jo
xchg
cmp
push
push
xlat
scas
cli
ret
pop
sub
les
add
aad
or
mov
ss
mov
dec
push
jp
je
pop
jecxz
rclb
into
cwtl
pop
lea
ds
mov
arpl
aaa
ss
sbb
mov
imul
xchg
rorl
pushf
and
mov
loopne
pop
and
lret
push
mov
std
jl
xchg
cwtl
push
push
push
mov
dec
test
cmp
icebp
xor
lock
repnz
mov
outsl
mov
adc
das
xchg
jecxz
out
mov
insb
aam
repz
outsl
jo
es
lret
insl
pop
add
and
ljmp
dec
cld
popa
push
pop
shrl
dec
mov
or
lcall
mov
cltd
fistps
mov
mov
hlt
sbb
mov
mov
arpl
rcll
inc
sbb
xor
xor
push
call
scas
xor
mov
or
mov
add
dec
xchg
jns
dec
mov
adc
xchg
jno
dec
cli
faddl
rolb
jne
xchg
fwait
lcall
add
ljmp
bound
mov
outsb
sarl
mov
dec
mov
imul
or
idivl
ja
aas
or
push
shll
sar
scas
lds
lret
jne
pop
adc
pop
push
fcoml
sub
mov
xor
out
jae
sub
add
lods
stos
lods
stos
mov
pop
add
fnstsw
jnp
jle
jb
in
sarb
push
lea
sub
pop
lea
bound
enter
in
push
mov
mov
dec
aad
fiaddl
adc
imul
imul
ret
popf
cs
popa
mov
push
leave
xchg
push
pusha
hlt
jb
lods
arpl
xchg
mov
push
jne
sub
pop
lods
add
mov
jnp
xchg
into
xchg
rclb
mov
and
dec
shll
mov
jbe
scas
push
jge
fstps
aaa
pop
sbb
aas
jno
ret
mov
dec
stos
push
xor
arpl
test
or
aaa
scas
jne
jl
pop
xchg
addr16
and
push
inc
aaa
sbb
cmpsb
cmp
xchg
dec
testl
daa
dec
mov
test
sub
popf
sbb
xchg
fdivr
imul
movsl
nop
fiadds
sbb
call
or
mov
jnp
int
sti
imul
pop
je
pop
sub
xchg
imul
push
lret
lcall
xchg
fdiv
add
outsb
xlat
xchg
aas
xchg
xor
mov
push
loop
adc
mov
inc
imul
icebp
mov
fisubrs
sub
rolb
xor
test
rorl
mov
into
aas
sbb
and
xorb
jg
dec
outsl
loop
pandn
dec
add
adc
ss
sbb
cmp
mov
out
imul
mov
jo
hlt
in
cmp
adcl
cmp
cmc
adc
ret
and
adc
dec
imul
mov
mulb
ret
es
mov
pop
sbb
pop
gs
in
dec
out
inc
sti
fucomip
mov
adc
push
loopne
out
pop
in
dec
add
outsl
jnp
test
mov
repz
fisubrl
imul
cmp
cld
xchg
xlat
out
sarb
adc
sbb
jmp
nop
lret
dec
mov
nop
xchg
mov
adc
mov
dec
into
jo
jecxz
outsb
jmp
shrl
jmp
pop
call
xor
jae
adc
out
dec
add
popf
dec
pop
mov
pop
mov
push
mov
aas
cmp
lods
mov
xchg
cmpsb
out
out
ja
mov
lahf
imulb
xchg
enter
mov
nop
or
stc
mov
cld
sbb
pop
arpl
in
enter
dec
das
gs
rol
xchg
sub
mov
xchg
mov
insl
inc
addr16
pop
cltd
fisubl
xchg
and
imul
pop
mov
adc
popf
mov
xchg
popa
popl
fnstcw
sub
cmp
mov
inc
mov
fldl
int3
clc
clc
int
xchg
push
fildl
shr
icebp
pop
lret
add
stos
cmp
out
cwtl
mov
add
inc
loop
leave
aaa
adc
and
lods
or
out
xor
jle
mov
repnz
mov
xor
xchg
dec
in
xor
mov
dec
fwait
leave
mov
push
sub
sub
add
leavew
bound
repnz
xchg
imul
in
stc
rcrb
jp
ja
cmpsl
imul
push
aaa
mov
push
pop
sub
lods
sbb
lock
scas
out
cmp
cwtl
xchg
push
cmc
push
jmp
fsubrl
sub
out
outsb
fs
addr16
stos
adc
and
jecxz
add
or
and
lea
lock
cmp
and
mov
aam
push
dec
fildll
popf
sub
cmpb
in
pushf
fidivl
pop
xchg
bound
repz
scas
xchg
xchg
fcoms
adc
adc
nop
repnz
hlt
mov
or
lret
arpl
testb
mov
lahf
out
cmpsb
push
hlt
jae
or
mov
std
int3
cli
sahf
daa
pop
mov
pop
fdivp
mov
shrb
add
test
cmp
cmpsl
nop
movsb
sub
insl
push
pop
xchg
jbe
enter
or
aaa
xchg
jg
fisubs
fnsave
push
out
jl
mov
mov
xor
addr16
mov
sub
push
out
mov
xor
xor
enter
daa
dec
bound
shlb
cmpsl
loope
pop
mov
cmp
pop
mov
fbld
mov
sbb
movsb
sti
or
mov
movsl
add
fs
xor
stos
sbb
ret
xchg
lods
cli
pop
ds
sbb
fsubl
gs
lret
adc
sbb
movsb
clc
jne
mov
test
mov
dec
pusha
mov
push
int
test
xor
mov
ror
lretw
xor
sbb
enter
ljmp
xchg
ret
fistpll
inc
cmp
stc
add
adcl
ds
call
fadds
sti
imull
sarb
cmp
sub
or
pop
into
push
repnz
fisubrl
imulb
sbb
inc
inc
xchg
imul
rcrl
mov
data16
ja
lods
or
jno
out
jmp
jnp
fimull
cltd
in
mov
flds
orl
pop
or
test
fcomip
push
cli
les
pop
xchg
cs
sbb
inc
cmp
xlat
sub
jo
adc
push
pop
pushf
imul
jmp
in
cs
pop
push
aad
pop
mov
jno
mov
jo
outsb
jb
js
dec
inc
dec
add
arpl
xchg
aam
push
lea
jnp
mov
jno
mov
jo
andl
fisttpl
pop
inc
addl
push
lods
inc
cmp
test
dec
push
mov
roll
mov
imul
rolb
cmp
mov
pop
push
mov
loopne
jmp
lret
rorl
mov
cmp
mov
jg
lock
sub
rclb
lods
aam
sub
ret
std
pop
es
aad
daa
mov
dec
sbb
cmpsl
dec
enter
lods
ret
popa
orb
jne
cli
mov
pop
or
mov
mov
push
add
sti
and
test
fimull
push
jg
adc
clc
xor
mov
pop
mov
fwait
shlb
inc
pop
jbe
dec
stos
daa
rclb
lods
rcll
mov
movaps
aas
or
ss
scas
adc
cmc
inc
add
sbb
xchg
in
dec
loopne
jmp
sub
jae
dec
push
xlat
fwait
clc
or
incl
and
ljmp
popa
idivb
icebp
in
inc
mov
mov
xlat
nop
mov
and
cmpsb
jp
shrb
ss
mov
repz
lea
jne
stc
jge
dec
adc
mov
jmp
cmpsl
mov
out
fsubp
sub
stc
pop
into
stos
mov
int
data16
jle
jnp
pop
test
in
scas
in
mov
aaa
ret
lahf
pop
sti
lods
rolb
jae
jp
push
adc
popf
push
dec
add
push
int
and
out
test
sbb
mov
dec
scas
hlt
popf
mov
shll
jo
iret
pop
mov
repnz
mov
ret
inc
hlt
or
jl
dec
cmp
push
sbb
or
pusha
inc
roll
push
dec
or
sub
add
sub
in
push
pop
in
inc
ficoms
mov
mov
cmp
sub
stos
movsl
push
movsb
mov
mov
jbe
push
fnstcw
and
aaa
popf
mov
cmp
sbb
jno
lahf
cmpl
dec
mov
dec
push
sub
xor
ret
scas
xor
scas
test
mov
jmp
cmpsb
ds
in
sbb
adc
push
xchg
es
jp
sub
pop
cmp
sbb
aad
sahf
outsb
push
and
push
lahf
ret
repnz
xor
aam
jmp
mov
xor
loopne
jbe
jnp
push
js
pop
push
pop
jge
sub
outsl
repnz
fmull
mov
outsb
sub
jl
shl
jo
push
cmc
sbb
mov
mov
cmpsl
or
outsl
or
push
mul
adc
sub
aad
pop
xor
pop
les
mov
ret
adc
test
push
subb
push
jg
or
mov
jp
mov
inc
aaa
ss
fadds
push
dec
imull
cli
repnz
inc
xor
mov
es
add
stc
xor
sub
jns
adc
rdtsc
imul
adc
jg
pop
lods
hlt
mov
addr16
testl
icebp
out
hlt
in
and
lea
pop
cmp
gs
loopne
sti
outsl
pop
sub
ja
push
das
mov
mov
repnz
notb
in
test
xlat
insb
or
pop
inc
mov
adc
dec
pushf
push
mov
jmp
cld
pop
cmpsb
pop
scas
aad
ds
nop
dec
jb
dec
iret
xor
dec
dec
mov
sbb
jecxz
jb
xlat
imul
xor
lea
cld
sbbl
fstpt
iret
pop
out
movsl
inc
sub
aas
ja
mov
add
xchg
inc
rcll
jb
xor
fcompl
jl
insb
mov
mov
jmp
jae
pusha
lret
inc
sti
dec
mov
pop
gs
int
lock
dec
pop
das
and
mov
sub
ja
aam
inc
fadd
sbb
cmp
add
insl
push
loope
dec
adc
mov
ljmp
hlt
lods
loopne
inc
mov
inc
add
and
lahf
imul
rorl
add
in
jle
test
lcall
rcrl
aam
clc
outsb
sub
xchg
pushf
push
xor
rcrl
jg
push
leave
mov
pop
lods
fcoms
jecxz
lea
xchg
mov
or
xor
mov
clc
pop
sbb
in
test
aad
jb
or
and
inc
ret
or
and
fwait
daa
sub
add
cmp
or
ds
lahf
leave
sbb
xchg
aas
xlat
in
pop
sub
and
pop
fidivrs
emms
int3
add
mov
push
dec
mov
fldl
jne
pusha
test
cli
push
xchg
cld
xchg
jmp
jb
ret
ja
out
rorl
push
jmp
stos
in
stc
sbb
imull
and
jo
jle
xor
cmpsb
pusha
lods
mov
ret
pop
pop
xor
ds
mov
arpl
popf
js
mov
push
or
clc
ficompl
out
sbb
mov
scas
push
lcall
mov
mov
repnz
push
loopne
divl
hlt
push
mov
arpl
adc
mov
insl
xchg
dec
push
repnz
or
insl
add
int3
rclb
pop
adc
lds
shlb
mov
into
push
dec
cmp
xchg
jne
jbe
push
jle
inc
sbb
lea
pop
inc
mov
jno
inc
dec
jl
sbb
dec
clc
mov
pop
xor
sbb
adc
push
roll
test
test
xor
cmp
cmpsb
rcl
in
add
sub
dec
inc
dec
push
lods
push
loope
mov
and
mov
cwtl
inc
movsl
movsl
int3
adc
in
jg
lahf
loop
mov
or
push
add
push
push
xor
stc
pop
mov
dec
jne
or
sub
mov
std
xchg
push
cmp
fdiv
add
push
ja
outsb
nop
out
adc
sar
ret
mov
inc
mov
std
int3
mov
adc
mov
xchg
int
inc
pop
sub
xor
mov
or
jp
sbb
add
test
leave
or
mov
xor
loop
push
cmc
fs
call
aas
les
insb
cmp
mov
sub
cli
and
addl
out
rorl
xor
stos
into
in
jp
push
mov
outsl
push
lret
or
or
xchg
adc
xor
add
mov
data16
insl
lods
fildl
ja
sub
aaa
mov
nop
sub
sti
in
add
jl
inc
gs
sti
lcall
jne
inc
in
pop
cmp
dec
scas
rol
mov
xor
or
mov
xlat
stos
imul
mov
aaa
add
imul
in
mov
popa
dec
cmp
jb
or
xor
xlat
jecxz
fisubrl
ficoml
pop
call
mov
ja
jmp
nop
jmp
fldt
push
inc
mov
push
inc
outsl
shrb
push
stos
mov
xchg
or
mov
mov
cld
shll
xchg
std
sbb
popf
cwtl
or
lcall
mov
sahf
xor
std
jno
mov
jg
lock
das
add
leave
sub
dec
xor
push
insl
ret
stos
lcall
cmc
repz
adc
clc
cmpsl
dec
sub
ljmp
lods
dec
js
mov
gs
add
sub
test
add
adc
mov
in
mov
iret
inc
push
add
std
lods
clc
test
pop
clc
sbb
data16
icebp
insl
jae
int3
cmp
add
lahf
or
mov
mov
jg
xor
jp
test
xchg
in
dec
pop
xchg
or
xchg
addr16
dec
lods
clc
inc
pop
push
outsl
or
sub
adc
add
lcall
add
jns
pop
ret
in
push
mov
gs
mov
cltd
jp
ja
idivb
aas
inc
dec
movsl
je
imul
dec
push
cmc
jbe
dec
sub
mov
hlt
mov
xchg
iret
popf
jmp
cmp
mov
or
dec
les
or
or
addr16
cld
shll
xchg
call
or
inc
dec
mov
pop
jns
lret
pusha
rcr
mov
ret
jne
imul
add
xchg
pop
dec
popf
lahf
sub
mov
dec
dec
or
dec
jmp
xchg
addr16
pop
lret
and
outsl
scas
mov
dec
jp
xchg
xchg
and
fnstsw
push
leave
outsb
xchg
hlt
sahf
mov
ljmp
mov
addr16
jno
sbb
jecxz
das
add
popa
int3
mov
inc
inc
jl
pushf
sarb
in
fldenv
popa
packssdw
sbb
pop
push
dec
dec
data16
int3
in
in
sti
mov
aaa
sbb
cmp
adc
or
push
push
out
ja
xor
js
xor
movsb
jmp
test
push
lea
cmpsb
inc
or
mov
enter
daa
dec
jne
push
js
loope
sbb
sub
imul
push
outsl
jo
idiv
fisubl
mov
lahf
add
pop
sbbb
call
add
dec
lret
aaa
adc
pop
leave
out
js
je
pop
sti
or
push
sbb
test
sub
and
pop
adc
stos
sahf
rorl
movb
mov
mov
mov
pop
and
push
std
cmc
clc
int
loope
sub
jnp
lret
cwtl
shll
sbb
test
cmc
mov
cmc
jg
xor
stc
and
test
adc
lods
dec
cmp
jbe
gs
popa
ret
cli
pop
xchg
enter
pop
cmp
adc
or
mov
adc
das
mov
out
mov
mov
aaa
add
push
insl
lods
ret
mov
out
lahf
or
es
in
sti
nop
jl
fwait
inc
scas
lahf
mov
loopne
pusha
or
xor
jo
test
dec
leave
in
mov
xor
ss
divb
xlat
ljmp
adc
lret
insb
xchg
sub
insb
ds
shrb
nop
add
in
jb
and
dec
stos
int
je
clc
mul
lock
fnsave
test
adc
xor
fadd
mov
dec
mov
jne
out
sub
or
inc
mov
iret
aas
mov
jmp
sub
mov
adc
shl
rcl
divb
subb
adc
mov
gs
cli
lret
push
test
mov
jp
mov
xchg
dec
lock
out
fcom
or
movl
cmp
add
push
scas
js
fsubr
fwait
dec
or
cmpsl
dec
and
popa
lds
mov
mov
xor
scas
mov
adc
add
mov
test
repnz
enter
fmull
jae
in
mov
sbb
jbe
ja
xchg
stos
hlt
es
and
test
cltd
jbe
cmovne
xor
mov
test
mov
ja
mov
loop
dec
shll
test
jae
xchg
pop
dec
mov
lret
or
push
fwait
test
dec
add
jno
dec
jl
xchg
out
and
in
mov
mov
loopne
mov
push
dec
mov
jp
xchg
call
mov
fisubrl
cmp
jne
pop
addr16
add
out
mov
call
mov
cmp
fsub
in
sub
ljmp
stos
fisttps
mov
mov
repz
jle
jnp
in
imul
clc
negb
pop
mov
shll
pop
adc
icebp
jecxz
adc
push
mov
fiaddl
icebp
sahf
xchg
mov
nop
stc
imul
jp
sbb
repz
mov
repnz
xorl
hlt
jmp
push
loopne
pop
int3
jne
cmp
das
push
lock
cmp
add
push
int3
cmpsb
push
mov
fidivrs
push
lds
or
xchg
push
in
mov
hlt
sti
mov
iret
jbe
movsb
pop
mov
xchg
mov
jge
mov
insl
aaa
mov
jno
cli
inc
jl
les
dec
sub
adc
rcll
xor
test
sbb
inc
add
sbb
iret
fwait
ret
enter
daa
dec
test
testl
cmp
cmp
aam
mov
sub
and
push
sbb
xchg
and
lods
mov
pop
lock
js
fiadds
pop
cmp
mov
lea
xor
dec
and
outsb
push
mov
adc
xchg
je
add
sbb
mov
fbstp
pushf
push
add
test
pop
mov
lods
lret
js
cmp
rcrb
popf
dec
addr16
xchg
fiadds
int3
ss
cmp
xchg
fs
mov
enter
sub
xor
xchg
imull
cmp
push
cmp
add
pushf
into
stos
cmp
xor
mov
adc
add
add
mov
lods
test
icebp
cli
out
cmp
mov
lretw
sti
dec
inc
and
ret
gs
loopne
xor
pop
mov
les
test
fnstcw
mov
repz
imul
sub
xlat
sub
adc
push
pushf
pop
ret
pop
jmp
fsubrl
iret
sbb
aad
cmp
nop
fucom
sti
dec
in
dec
scas
jb
insl
pop
dec
and
adc
pushl
loopne
mov
out
ret
pop
call
scas
add
add
aaa
or
or
jae
mov
bound
mov
sub
and
push
jnp
inc
or
push
std
data16
cwtl
sub
mov
scas
pop
mov
cmp
inc
cld
hlt
mov
lret
lea
mov
push
and
das
rcrb
inc
movaps
in
aam
nop
jmp
mov
lret
push
inc
lods
cmpsl
inc
pushf
jmp
aad
push
popa
jbe
and
adc
scas
inc
mov
aaa
int
mov
xor
data16
clc
mov
mov
mov
push
mov
sbb
add
add
pop
mov
xchg
pop
jmp
sbb
icebp
rcrl
xor
stos
jecxz
in
xchg
xchg
or
sub
movsb
rclb
or
jnp
xor
mov
add
add
sub
jbe
out
cli
stos
dec
lods
fadds
testl
cmc
add
mov
dec
bound
subl
mul
mov
jmp
xchg
icebp
ja
push
jp
xchg
pop
mov
adc
mov
inc
dec
sbb
dec
jne
in
and
xchg
test
xchg
jne
mov
xchg
roll
orl
pop
sub
in
cmpsl
pop
call
and
mov
sbb
mov
jle
mov
pusha
testl
addr16
xlat
cmp
jae
mov
fcomps
dec
aas
sbb
and
xchg
adc
sub
scas
addb
cmp
adc
aad
fwait
ret
out
leave
pop
pop
fxtract
xor
mov
xchg
jecxz
bound
shrl
xor
sbb
leave
push
fxch
xchg
adc
pop
mov
sub
lds
ss
mov
mov
xchg
cmp
dec
sub
les
jbe
adc
fiadds
cmp
or
mov
dec
inc
or
push
mov
add
sub
jmp
cs
out
dec
iret
ret
adc
out
flds
mov
adc
mov
das
enter
daa
inc
imul
cmc
loope
dec
xor
lret
scas
shr
ds
data16
negl
sbb
cltd
xor
cmp
xor
pop
pop
lret
mov
and
lcall
neg
divl
sub
iret
popa
outsb
mov
test
shlb
arpl
insb
mov
mov
and
fmuls
pop
shr
sub
pop
inc
pop
das
xchg
aad
and
fs
insb
lcall
sub
loopne
add
sbbb
jo
imul
loop
xchg
adc
xchg
mov
fs
mov
push
sub
ss
in
sahf
imull
in
cli
mov
fs
cmp
into
pop
or
lods
sbb
mov
cli
mov
pop
and
imul
mov
mov
lods
nop
daa
and
es
loope
or
loopne
dec
out
in
rcr
inc
sti
stc
add
in
dec
gs
popa
loopne
adc
faddl
sbb
fptan
add
fistpll
repz
in
push
xchg
std
jecxz
sbb
insb
and
xlat
push
lret
std
adc
and
pushf
ret
jmp
add
cs
mov
nop
mov
pop
dec
jb
in
loopne
cwtl
add
je
and
jecxz
stos
xor
lea
fucomip
or
sub
cs
mov
jp
sbbl
cmp
aaa
or
pop
jb
cmp
sbb
ror
aas
repz
mov
loope
xchg
xchg
mov
idivb
into
negl
js
lret
mov
adc
sahf
cld
pop
mov
lret
cld
add
in
test
das
lahf
int
shlb
cmpsl
inc
aam
cli
das
ret
pop
add
es
js
stos
test
dec
add
std
ljmp
imull
mov
and
mov
dec
pop
ret
add
xor
ret
mov
mov
inc
rcl
clc
pop
shll
cwtl
jp
sbb
mov
pop
int
int
rclb
xchg
push
xchg
pop
push
dec
or
add
push
inc
jno
xchg
push
inc
xor
xchg
mov
add
pushf
dec
cli
jg
dec
jb
xchg
stos
dec
lahf
jl
inc
push
sub
or
mov
cltd
push
sti
ret
mov
cmpsl
pop
loope
mov
cli
jns
mov
in
pop
inc
xchg
inc
clc
dec
mov
aad
mov
lret
ja
jmp
pop
mov
aas
ret
ret
mov
bound
mov
pop
shr
jbe
xor
in
mov
rolb
xlat
or
loopne
cmp
testl
and
mov
push
outsl
aaa
jle
xchg
fxam
fildll
xor
out
iret
fbstp
xchg
scas
or
mull
jae
mov
push
fbld
popf
adc
lret
lods
repnz
or
fisubl
xor
sbb
pop
scas
jecxz
mov
orb
adc
pusha
and
cli
call
xor
hlt
jg
nop
arpl
fcoml
push
out
pop
mov
add
fmul
jl
mov
faddp
jmp
lds
and
mov
sbb
cmp
xor
cmp
jbe
in
jge
out
xchg
sbb
scas
ds
xchg
jno
aas
push
jl
shrb
cwtl
pop
repz
mov
mov
mov
sub
movups
mov
add
sbb
cmpsb
int
sub
sbb
enter
daa
inc
sub
push
adc
loope
sbb
movsl
cmp
cmpl
jmp
stos
and
inc
lahf
pop
add
sbb
aas
add
and
xor
sti
scas
outsb
lock
ds
js
outsb
add
mov
das
dec
push
and
arpl
mov
lret
sbb
xchg
adc
cmp
inc
xor
jb
push
lcall
mov
ja
int
sbb
push
pop
scas
arpl
shrl
mov
jl
sti
cmpsl
pop
sahf
int3
mov
xchg
xorb
jg
dec
lods
loop
mov
stc
dec
or
fs
movsl
adc
xor
rcrb
mov
fsubs
sbb
stos
repnz
mov
jno
lock
and
test
xor
inc
cmp
adc
pop
inc
imul
loop
add
pushw
cmp
daa
mov
in
out
stc
int
jg
push
mov
cmp
sti
sti
test
idiv
or
std
gs
pop
loopne
push
xchg
pop
lea
cmp
xchg
sub
sbb
ljmp
xchg
rolb
sbb
cmpsl
fisubl
pop
rclb
pushf
insl
sahf
out
jmp
lock
aad
sbbb
xchg
push
dec
stos
jae
jb
mov
sbb
mul
sbb
enter
insb
sti
call
lods
in
mov
sub
movsl
pop
adc
insl
adc
inc
and
xchg
lds
jecxz
test
mov
dec
shl
push
jecxz
cmpb
std
mov
xchg
cwtl
imulb
scas
mov
lock
ljmp
lret
imul
mov
cs
lock
das
jle
jle
xchg
cmc
sub
or
retw
out
dec
es
xor
dec
cld
sarl
push
mov
mov
jae
lods
neg
repz
icebp
and
xor
outsb
jmp
and
int
inc
mov
jmp
push
adc
pop
fstl
dec
clc
xchg
scas
seta
lea
int
xchg
dec
inc
sub
das
stos
shll
dec
cmc
nop
xchg
xchg
add
push
punpckldq
mov
or
mov
dec
xchg
xchg
mov
idivb
and
in
popf
dec
dec
xchg
aam
inc
mov
or
int
lcall
sahf
mov
popl
ret
lcall
clc
bound
aaa
jbe
rorb
dec
add
jle
ret
cmp
aam
or
out
mov
daa
add
jne
ds
mov
mov
addr16
sbb
sub
imul
dec
sub
fistl
movsl
pop
mov
and
mov
fdivrs
pop
add
mov
out
pushaw
sub
aad
ret
negl
pop
dec
inc
lock
jae
icebp
call
mov
pushf
jb
les
imul
ret
ret
int
ret
flds
scas
inc
aam
push
leave
adc
add
push
iret
pop
call
repnz
dec
insb
leave
dec
jl
hlt
lret
arpl
xchg
clc
or
inc
addl
or
es
int3
or
xor
mov
push
shr
dec
mov
lods
stc
mov
hlt
or
push
mov
jbe
sub
jge
pop
enter
nop
aaa
pop
sarl
cmp
push
shlb
cwtl
mov
dec
and
push
xor
in
iret
scas
insl
ds
lock
jl
jae
scas
mov
xchg
in
test
std
daa
inc
jno
push
lods
inc
loope
adc
sub
inc
xchg
sbbl
movsl
enter
hlt
sbb
bound
xor
pop
add
push
xor
jb
xchg
pop
gs
js
xchg
mov
testl
push
jns
jecxz
dec
mov
outsb
jg
dec
adc
pop
ljmp
adc
cmp
jge
dec
and
xchg
push
push
or
lret
sub
push
insl
pop
sub
fs
inc
jle
sbb
sti
movsb
sahf
outsl
pop
rolb
dec
es
jg
pop
ret
loop
or
stc
add
inc
fs
repnz
adc
lcall
mov
xor
and
lret
xor
pop
in
into
push
jno
cmc
dec
push
sub
outsl
lds
adc
dec
sbb
iret
pop
mov
repz
xchg
xchg
push
pushf
lods
pop
pop
push
out
pop
push
sub
clc
xor
in
cmpsl
jb
sti
push
xlat
cmp
sub
out
cli
sbb
pop
in
jecxz
dec
mov
movsb
cmc
pusha
div
insl
imul
sbb
loop
pop
xlat
out
push
pop
jae
test
outsl
or
pushf
sbb
jmp
mov
rcl
in
mov
dec
dec
or
dec
xchg
pop
je
mov
dec
jmp
pop
pop
call
sub
mov
jmp
dec
pop
scas
sbb
xchg
dec
into
pop
mov
and
inc
aas
xor
dec
hlt
data16
or
shrl
pop
push
test
and
pop
stos
cwtl
mov
cmp
xchg
outsb
dec
icebp
rcll
lret
fidivl
aam
insb
cmp
xchg
xor
mov
sub
int3
cmp
es
scas
insl
js
sbb
pusha
imul
pop
jg
and
push
lods
bound
xchg
mov
dec
lods
mov
lea
add
cltd
into
dec
and
pop
push
aam
lcall
pop
jo
push
and
or
movsb
push
mov
stos
mov
insl
out
mov
adc
add
xchg
test
mov
ljmp
rolb
xchg
dec
pop
pop
push
roll
test
insb
inc
dec
sbb
mov
out
push
inc
lods
ds
aas
clc
or
cmp
adc
sarl
jecxz
enter
cmp
inc
pusha
jno
inc
jne
jp
xlat
fdivs
and
add
sbb
das
std
mov
enter
xor
xchg
xchg
out
sbb
jmp
xor
sub
rcrb
add
push
pop
movsb
inc
add
stos
loopne
and
pop
dec
insb
pop
jge
jnp
push
jle
cmp
test
enter
je
push
ret
push
pop
jl
adc
jae
jb
push
test
popf
sarl
xchg
mov
xchg
sbb
outsb
out
dec
imul
push
adc
fmull
iret
mov
dec
pop
leave
roll
hlt
adc
ss
inc
imul
mov
jbe
mov
jns
int3
push
inc
inc
pop
sub
dec
sub
xchg
inc
xchg
rolb
mov
inc
mov
cmp
insb
push
xlat
ja
jbe
loop
jge
mov
sbb
mov
stos
cmp
imul
adc
int
xchg
aas
push
pop
push
test
aas
test
daa
push
ret
sub
cmp
faddl
movsl
mov
rcr
sub
hlt
xchg
daa
inc
cmp
push
std
xchg
loope
sub
cwtl
push
jmp
mov
dec
das
movsl
iret
xor
and
and
cmpb
sbb
clc
add
add
xor
insl
call
pop
mov
js
dec
mov
and
lcall
out
clc
push
sub
ret
daa
adc
repnz
mov
mov
inc
or
enter
fadd
pop
push
or
pop
int
fs
sub
pop
lods
xchg
dec
decb
rcll
push
sbb
or
cwtl
mov
push
mov
insl
leave
loop
xchg
sbb
mov
push
cmpsl
adc
int
ss
push
push
cmp
sbb
sub
push
ljmp
and
or
sbbb
xor
inc
or
div
jg
movsb
mov
adc
cmp
imul
xor
add
je
lods
inc
rcll
push
mov
out
leave
push
sub
mov
xchg
sbb
in
adc
jle
push
out
decb
sti
gs
jns
loopne
cmp
add
mov
pop
mov
fsts
push
lahf
repz
je
inc
xchg
push
cmp
lea
adc
mov
pushf
ret
leave
xor
add
cs
push
dec
aad
push
into
nop
dec
xchg
add
test
jb
mov
jmp
jecxz
fbld
in
sbb
lea
lcall
stos
aad
mov
rorb
fcmovnb
push
jl
pop
add
inc
adc
aas
shrb
mov
push
rorb
inc
clc
sarl
xor
add
cwtl
insb
mov
in
les
cld
mov
arpl
in
xchg
lock
mov
imul
mov
imul
xor
add
and
dec
repnz
out
cmpsl
inc
mov
ljmp
xchg
lods
int
or
aaa
jp
and
fmull
add
lods
cmovg
test
cltd
add
nop
divb
xchg
test
or
xchg
push
inc
push
sbb
push
dec
sar
test
stos
lahf
ja
out
adc
xchg
and
clc
and
and
nop
xor
and
xor
or
mov
or
lds
jmp
and
js
sbb
inc
lods
or
cmc
sbbb
mov
add
call
int
jns
jl
in
mov
xchg
xor
nop
mov
test
pop
pop
sti
push
sub
jp
stos
mov
out
lcall
add
fs
mov
jo
out
adc
xchg
jmp
cmp
leave
shl
push
stos
push
mov
out
addr16
stos
push
imull
push
jns
insb
enter
pop
js
jle
pop
mov
hlt
cmpsl
pusha
arpl
movsl
ret
mov
inc
push
xchg
push
sub
or
cmp
fidivrl
mov
sbb
scas
or
jp
push
dec
jno
mov
sub
pop
cmp
repnz
test
leave
cmp
sub
pusha
sbb
arpl
fdivs
inc
outsb
pop
bound
cmp
inc
imul
or
out
inc
int3
cmp
les
lods
out
inc
sbb
jo
mov
shll
inc
movsb
psrad
es
jbe
adc
jge
out
sbb
sti
mov
xchg
test
cmp
addr16
mov
jl
icebp
mov
add
sbb
xor
lcall
push
xchg
push
fldcw
adc
out
inc
int
jb
push
enter
test
enter
daa
inc
xchg
push
add
loope
arpl
cmp
out
leave
shll
push
and
jmp
in
orb
xchg
repnz
xor
movsl
mov
js
popf
push
pop
jne
lcall
daa
sub
lock
imul
int
orl
mov
mov
push
shlb
out
icebp
push
xor
sub
and
lock
in
shrl
and
in
sub
pop
scas
sub
test
sub
test
stc
outsl
hlt
stos
adc
out
adc
lahf
ss
popf
clc
cmp
fsubrs
dec
mull
cli
mov
dec
xor
cld
cmp
cmp
into
sbb
xor
push
jo
outsl
orl
adc
jnp
adc
push
adc
adc
xchg
cmp
push
mov
out
out
not
sub
and
fucomp
jge
stos
sti
mov
sub
jno
stos
gs
insb
and
and
sahf
inc
jb
inc
fxch
sbb
les
xchg
repz
adc
sbb
pop
js
xlat
mov
adc
sbb
add
mov
pop
sbb
enter
repnz
dec
je
je,pn
outsb
push
jecxz
and
icebp
pop
ds
sub
xorl
sahf
pop
sbb
inc
popa
sarb
cmpsl
aas
outsl
ret
adc
pushf
xchg
xchg
mov
push
rcll
testb
std
test
popa
cli
mov
mov
mov
outsl
aam
cld
lret
repnz
mov
mov
mov
dec
and
das
sbb
and
aam
in
mov
xchg
sahf
xor
sbb
lcall
pop
mov
ljmp
dec
lods
cmp
inc
push
mov
pop
loope
mov
lret
test
add
icebp
sbb
or
push
pop
mov
xor
inc
mov
sbb
out
jnp
push
fisttpll
pop
jns
test
out
jbe
notb
mov
shll
or
es
das
adc
adc
dec
sub
test
pusha
rolb
imul
jp
pop
or
arpl
lahf
movsb
mov
xchg
add
adc
ljmp
and
mov
xlat
jmp
xchg
and
xchg
mov
mov
xorl
xor
mov
push
adc
jbe
inc
mov
dec
mov
es
cmc
add
repnz
jmp
lret
sbbl
out
sub
cmpsb
or
sbb
stos
xchg
rcl
xor
cmp
or
mov
pusha
jno
fbstp
dec
sbb
ljmp
jae
inc
ficoml
jmp
jle
mov
cmpl
xor
ret
xchg
enter
les
inc
scas
outsl
int
push
sahf
jle
adc
pop
test
leave
scas
push
arpl
mov
or
mov
xor
ljmp
add
cmp
pop
mov
or
movsb
inc
pop
sarb
insl
mov
lretw
mov
sbb
movsb
lcall
jbe
mov
jge
add
test
cld
aaa
push
pop
cmpb
pop
leave
jno
jnp
jl
test
dec
push
and
inc
xor
cmc
test
lods
push
imul
fs
fucomp
push
inc
pop
or
cmp
mov
daa
inc
pop
xchg
push
mov
or
outsb
mov
cmp
sub
ds
jns
movsl
xlat
and
insb
sbbl
inc
inc
sbb
add
xor
xor
cmc
xchg
pop
ficoml
xchg
mov
test
mov
xchg
cmp
dec
addr16
xchg
outsb
test
add
test
ret
scas
and
or
jnp
sub
mov
mov
int
cmp
pop
stos
shll
in
mov
lds
mov
or
sbb
sub
iret
andb
stos
inc
fdivrp
fistps
popf
sbb
adc
pop
mov
fcoms
dec
lock
mov
add
or
inc
cmc
mov
fisubrs
mov
adc
hlt
imul
shrl
sbb
lods
adc
mov
sbb
and
dec
mov
call
push
mov
xchg
mov
gs
outsb
loopne
mov
xchg
inc
test
add
sub
repz
mov
sbb
xchg
jg
xlat
mov
mov
scas
pushf
sbb
jmp
inc
mov
aad
mov
insb
dec
es
push
jb
jne
dec
jmp
inc
je
sarb
repnz
cltd
lea
sbb
jo
lahf
test
sbb
dec
add
adc
and
and
inc
call
stc
dec
aas
push
and
mov
loopne
not
sbb
icebp
testb
cwtl
loop
mov
sub
icebp
inc
stos
push
cld
notb
lret
daa
mov
cmp
mov
cmp
movsl
sub
cld
fs
and
in
insl
sub
mov
cmpsl
inc
push
mov
xchg
movsl
lods
mov
out
mov
popa
adc
adc
fcompl
ljmp
cltd
jae
addb
std
push
sbb
push
mov
xchg
roll
mov
shrl
lock
pop
push
xchg
push
push
pmaxub
xor
sbb
pushf
mov
adc
dec
xchg
pop
ja
scas
or
mov
inc
adc
fisttpl
movsl
adc
sub
in
add
cs
call
dec
gs
hlt
mov
jns
push
xchg
in
mov
loope
jge
jp
sbb
jno
push
ja
and
jp
insb
xchg
mov
ss
sub
outsb
aam
jne
xchg
pop
mov
mov
rorl
jle
mov
sub
xor
pop
and
arpl
fistpl
mov
inc
shlb
dec
leave
push
insb
sahf
push
inc
jnp
cmpsl
data16
divl
cltd
inc
scas
xor
in
pop
and
inc
sbb
jae
inc
nop
fists
scas
popf
scas
popf
xlat
dec
lods
mov
inc
add
xchg
pop
std
and
sub
imul
scas
rcrb
push
in
mov
iret
aad
mov
leave
es
hlt
mul
push
arpl
call
mov
cs
aaa
inc
imul
add
dec
das
int3
adc
pop
mov
or
rclb
fucomp
stos
and
and
lret
and
mov
scas
stc
jge
add
inc
outsl
lahf
aaa
adc
jns
xor
mov
out
pop
aas
icebp
xor
push
dec
or
push
cmp
and
push
test
lret
lock
pop
std
and
and
leave
enter
daa
inc
lods
pop
push
and
loope
inc
ret
sub
into
cmp
push
fs
fisubl
pusha
add
lahf
stc
jne
xorb
xor
lret
push
mov
cmp
js
negb
lcall
insl
fdivr
lods
sub
cld
outsb
or
lahf
rolb
lret
mov
pop
stos
jl
movsb
cmpb
add
pop
iret
int
cld
pop
sub
jnp
pop
sub
pop
lret
jno
pop
jbe
mov
xor
push
sahf
sti
jno
test
push
insb
jg
rcl
cmp
insl
dec
sub
adc
xchg
or
pop
mov
cmp
dec
out
mul
lahf
pop
cli
lock
or
ret
cmp
jmp
push
into
fildll
cmc
insb
das
xor
mov
cli
adc
jle
mov
sahf
jl
das
inc
popfw
sub
lods
cli
jle
mov
out
fucomip
sub
xchg
repnz
push
xchg
dec
sti
adc
pop
gs
jg
loopne
adc
mov
sbb
cmp
leave
les
adc
pop
xchg
pop
jl
imul
xlat
loop
or
adc
mov
jmp
pop
inc
cs
lods
aad
xchg
fisubrl
lea
sub
mov
jecxz
ja
cmc
sbbb
mov
pop
jb
sub
mov
loop
fisttpl
aas
fistl
add
sub
outsl
jmp
inc
fsubs
aas
lods
cmpb
inc
outsb
mov
imul
shrl
psadbw
cmp
std
notl
sub
pop
aas
into
icebp
sbb
or
xchg
sti
out
clc
adc
lock
pop
sub
fld
inc
shlb
cmpsl
outsb
aam
pop
popf
ret
mov
xor
push
jae
insl
adc
testl
imul
jge
adc
push
jg
mov
mov
movsl
adc
lods
aaa
xchg
pop
or
cmp
mov
and
inc
mov
push
loopne
mov
adc
sub
mov
stos
ficompl
dec
aam
roll
clc
pop
iret
mov
adc
cmp
inc
xchg
cli
or
popf
or
cmp
shl
or
jae
iret
jne
mov
push
sbb
stc
shrb
xchg
mov
sbb
inc
test
sahf
or
mov
push
push
int
incl
dec
or
je
jno
xchg
jns
xor
in
lods
out
xchg
pop
hlt
dec
mov
xchg
mov
sub
mov
inc
mov
hlt
mov
cmp
mov
gs
push
cli
fdivl
loopne
mov
cmp
out
mov
mov
jmp
pusha
and
sub
ficoms
push
or
das
inc
addr16
stos
ja
xchg
and
sahf
insb
or
jnp
gs
jle
mov
in
loop
pusha
xor
cmpsl
fcomip
xchg
rol
mov
imul
jae
and
jno
lret
popf
xor
jmp
icebp
push
orb
cwtl
outsb
rclb
mov
imul
scas
xor
adc
iret
xor
adc
cmp
daa
leave
popf
mov
hlt
inc
push
inc
ja
fmull
test
shll
outsb
mov
pop
int3
jns
pop
jmp
test
shrb
mov
mov
jbe
mov
lods
push
adc
shlb
cmpsl
jge
jecxz
sbb
xchg
aaa
rolb
cmp
mov
sbb
or
push
ljmp
jo
cli
jge
enter
psrld
adc
add
inc
jp
xchg
pop
repz
enter
daa
inc
xchg
xor
mov
mov
inc
sub
lods
sti
cmp
jmp
xor
movsl
jmp
xchg
sti
scas
popa
lahf
sbb
add
inc
fnstenv
add
mov
xor
icebp
fcompl
jo
js
add
pop
xor
inc
push
sub
loope
movsb
enter
rclb
outsb
adc
rcrb
and
mov
inc
mov
add
hlt
cmp
and
in
int
mov
inc
pop
test
leave
lret
into
shl
in
mov
xor
cmp
mov
pop
adc
insb
jg
jecxz
loop
ret
mov
sbb
inc
bound
cmp
or
cli
and
out
fisttps
fstpt
jle
or
mov
cmc
cs
jecxz
bound
outsl
and
je
mov
xor
shlb
mov
push
iret
lods
loope
pop
mov
mov
out
cltd
insl
sub
das
fwait
mov
mov
int
fisubrl
mov
loopne
xchg
pop
subb
fnstenv
add
push
sbb
js
loope
push
xor
cmp
dec
xchg
xlat
and
mov
and
or
outsl
adc
jmp
mov
cs
mov
nop
mov
enter
outsl
jb
sbb
dec
fptan
mov
out
cltd
jecxz
xchg
xabort
dec
lea
xchg
call
cmpsl
out
mov
xor
hlt
scas
rcr
sbb
pop
out
add
xchg
je
jge
ljmp
push
mov
divb
sarl
add
sahf
push
cwtl
pop
lret
mov
jmp
icebp
hlt
les
lret
add
scas
push
mov
in
scas
lock
sbb
mov
and
nop
in
aam
push
out
inc
pushf
pop
mov
lods
and
cmpsl
aas
add
ljmp
or
les
and
dec
insl
imul
mov
add
mov
cltd
loope
pop
test
jmp
and
mov
in
idiv
enter
mov
incl
call
stos
pop
mov
out
lahf
xchg
inc
iret
or
cld
lcall
lret
xchg
or
push
mov
mov
sbb
dec
pusha
push
test
and
xchg
out
dec
inc
test
inc
aas
gs
fwait
sub
int
jo
push
add
fs
inc
call
xchg
and
jns
mov
in
or
mov
jae
mov
out
icebp
ja
fmuls
mov
bound
pop
sub
xor
sub
xchg
pushf
mov
std
out
cmpsl
lods
xchg
or
push
je
sub
addl
adc
mov
xchg
and
int
je
xchg
jnp
out
jle
gs
adc
sub
paddd
sbb
pop
adc
inc
xor
sub
loopne
and
xor
add
and
fldcw
push
rcll
dec
enter
jno
sbb
loope
aaa
divl
cwtl
pop
adcb
fcoms
and
ror
repnz
popa
mov
adc
xor
mov
xchg
arpl
or
jp
out
or
and
mov
fsubp
or
add
lcall
adc
lds
xor
rorb
push
and
jno
cmp
cmpb
mov
pushl
dec
idivl
stos
jmp
aaa
xchg
adc
sub
loopne
sbb
add
push
push
int
lret
lahf
mov
shrl
loop
repnz
ds
xchg
and
bound
sub
out
ffreep
enter
daa
aas
jecxz
push
push
in
lahf
mov
sub
gs
ds
push
dec
and
rorb
cli
int
jge
loope
xchg
repnz
xor
inc
or
add
movsb
pop
dec
repz
adcl
fcomps
or
dec
mov
sub
push
outsb
roll
cmc
sarb
xor
add
add
aas
xchg
push
sbb
adc
jecxz
in
pop
daa
mov
mov
icebp
mov
or
sahf
inc
xlat
push
test
xor
xor
cwtl
jg
or
stc
dec
ja
fs
adc
dec
mov
fadd
hlt
mull
cltd
cli
push
aam
xor
call
jecxz
movsl
pushf
in
cmc
shll
outsl
ljmp
mov
notl
imul
adc
lods
enter
cmp
out
xlat
and
movsb
out
mov
sub
fsin
std
pop
mov
adc
mul
pushf
or
inc
mov
insl
enter
and
inc
cmp
xchg
adc
aaa
cmpl
pusha
lods
add
movsl
mov
sbb
sbb
cs
shrb
xchg
inc
mov
dec
inc
jb
jb
aaa
jl
push
and
xor
jo
xchg
xchg
sti
pop
dec
lea
int
es
mov
pop
adcl
idivl
scas
jnp
pop
mov
mov
cmpsb
mov
aas
jmp
mov
cltd
push
add
rorl
and
notb
sub
inc
mov
dec
mov
xchg
add
lret
pop
lods
cld
ja
in
je
mov
ljmp
xchg
in
rorb
push
sub
and
ret
sarb
es
xchg
insl
loop
leave
dec
fnstcw
jbe
and
loopne
movsl
popa
stos
or
lods
in
out
mov
out
sub
mov
inc
xor
mov
sbb
scas
test
sar
mov
xchg
pop
push
data16
frstor
pop
clc
xor
sub
mov
xor
scas
mov
adc
add
je
mov
pop
push
daa
outsl
jne
sti
jle
xor
adc
ret
arpl
xchg
inc
dec
in
test
mov
xchg
rorl
in
mov
inc
scas
or
arpl
fwait
pop
inc
xchg
adc
add
jg
and
bound
loopne
in
mov
dec
mov
push
mov
mov
ja
jp
push
xchg
mov
scas
or
daa
mov
pop
and
fldcw
push
out
outsb
cmp
loopne
mov
movsb
and
notb
or
xchg
adc
in
lret
jbe
addr16
xchg
stos
pop
repz
xchg
iret
dec
insb
fbld
xor
ud2
pushf
in
call
loop
cs
inc
pop
lock
xchg
jae
adc
test
mov
add
aad
xchg
and
sbb
jo
mov
scas
sti
rclb
xor
adc
out
jno
repnz
repnz
leave
leave
mov
arpl
decl
inc
jge
icebp
or
lahf
daa
cmp
out
test
push
push
addl
aam
pop
inc
adc
pop
cmp
shl
shlb
jl
mov
movsb
cmp
shrl
aas
cld
push
mov
sub
mov
jg
jno
mov
cmp
inc
jno
testb
push
pushf
push
mov
pop
xor
popa
fwait
cmp
push
mov
add
or
xor
mov
add
aad
mov
and
push
sahf
or
mov
jne
sbb
cmp
insb
cmp
js
cmp
xor
lahf
push
jmp
sub
int3
sbb
mov
mov
jg
rcl
mov
mov
loope
mov
push
fisubl
mov
outsb
xor
mov
adc
inc
mov
loope
mov
out
mov
mov
clc
and
outsl
arpl
push
mov
ljmp
jg
lret
mov
and
mov
mov
sahf
in
in
ret
orb
loop
adc
add
in
fs
xchg
mov
in
movsl
ss
repz
fdivrs
sti
negl
mov
xor
and
and
cmc
mov
add
xor
lret
imul
loop
data16
dec
lods
scas
xor
xor
cltd
stc
sub
and
xchg
lahf
xor
and
and
sbb
aaa
mov
mov
fabs
pushf
or
inc
into
push
repz
js
xchg
fdivs
mov
cmp
xchg
xlat
lahf
ds
pop
pop
and
adc
cmpsl
stos
pushf
lds
xor
popf
fbstp
aad
cmp
nop
imul
mov
mov
je
stos
and
xchg
jae
clc
pop
hlt
scas
mov
pop
out
movsl
or
mov
mov
cmpsl
pop
aaa
dec
lret
fcmovnu
fcomi
pop
sub
sbb
aas
mov
mov
and
xor
pop
add
negb
mov
xor
idivb
out
mov
pushf
fmull
mov
push
rcl
das
jbe
lcall
dec
and
out
jg
ret
pop
cltd
or
cmpsl
sti
insl
leave
dec
push
dec
aam
mull
push
add
inc
lods
dec
imul
jge
jns
jle
das
pop
data16
add
cmpsb
mov
test
loope
push
sub
test
mov
clc
insl
popa
sbb
gs
roll
stos
jns
cmp
into
out
gs
jge
iret
xchg
push
add
inc
cvtps2pd
xor
pop
cmpsb
or
scas
mov
mov
inc
mov
pop
stos
mov
test
mov
in
sub
in
inc
insl
dec
fmull
push
pop
push
mov
push
add
out
inc
bound
imul
sbb
mov
push
xchg
or
lds
mov
xor
pop
andl
jg
aas
jp
popa
sub
mov
lahf
cmp
dec
cli
and
mov
mov
jae
mov
mov
xchg
roll
mov
lret
stos
or
or
stos
rolb
and
adc
js
mov
xor
pusha
add
ljmp
jno
inc
dec
add
jle
mov
popf
jae
jbe
pushf
xchg
push
aas
cmp
xchg
jnp
negb
mov
imul
pop
push
add
adc
cli
test
push
inc
je
xor
test
hlt
and
arpl
xchg
adc
sbb
xchg
addl
mov
add
add
mov
aad
fidivrs
xor
inc
sbb
rol
cwtl
mov
inc
mov
lods
leave
add
adc
jbe
mov
sub
sub
divl
jns
push
jno
outsl
out
cmp
inc
push
xchg
adcb
mov
test
push
mov
test
aam
cmpsb
inc
daa
arpl
in
mov
xchg
les
cmp
fsts
int
add
cmpsl
loopne
fwait
and
and
sub
cmp
das
sbb
imul
stos
push
xor
push
insl
pop
popf
movsl
mov
pop
out
addb
sarl
movsl
adc
xor
adc
dec
xchg
adc
out
inc
mov
mov
and
aad
shll
jp
push
and
int
ljmp
and
inc
xchg
sarl
mov
mov
or
test
ljmp
data16
mov
dec
stc
mov
inc
mov
ss
in
cmp
cmp
neg
push
inc
cli
mov
and
or
xor
imul
xor
pop
outsl
mov
pop
mov
adc
push
xchg
imul
test
lods
xchg
ficoms
mov
cmpl
mov
in
push
iret
les
and
loopne
dec
xor
inc
in
add
sbb
les
stos
repz
xor
fwait
or
pop
pop
jl
mov
push
push
pop
or
pushf
jo
outsb
jmp
scas
shrl
adc
outsl
nop
inc
mov
jb
adc
xchg
enter
movsb
dec
add
add
sahf
lea
fsubr
xlat
xchg
imul
mov
sbb
mov
loopne
or
mov
inc
mov
lret
sbb
aas
sub
lret
push
out
pop
inc
and
or
cmpsl
sub
neg
add
cwtl
mov
mov
sbb
mov
jns
mov
lret
push
add
pusha
mov
adc
das
push
adc
icebp
push
loope
jne
test
ret
out
std
sbb
sub
xor
sub
cmpsl
cmp
adc
sbb
popa
fnstenv
lods
mov
dec
jge
sub
xchg
and
sbb
inc
add
jo
cltd
xchg
dec
test
popf
sbb
push
in
lds
clc
test
push
xchg
push
outsl
pop
sbb
mov
xchg
pop
jnp
jp
sub
setne
jp
push
fstl
cli
xor
or
dec
xor
bnd
dec
jns
xchg
pop
jne
xchg
mov
test
sbb
xchg
dec
sbb
jbe
or
pop
fwait
mov
jb
add
mov
mov
lock
mov
jbe
jns
sbb
cmp
pop
inc
iret
mov
lret
mov
pop
sbb
ja
inc
push
jp
and
mov
mov
mov
push
push
dec
fstpl
imul
mov
adc
xchg
mov
cmp
ljmp
or
adc
and
push
inc
jnp
add
jle
xor
pusha
mov
dec
int
insl
ret
xor
or
push
out
jae
adc
push
jge
cmp
xlat
mov
hlt
fisubl
xchg
shrb
js
insb
fldt
shl
sarl
dec
out
adc
adc
mov
mov
insl
xchg
out
sub
xchg
inc
sbbl
aad
push
in
adc
cmp
sbb
or
or
stos
in
pop
pop
movsl
pop
pushf
fisubs
cld
add
mov
dec
mov
fsubr
dec
cmp
insl
movsb
fmull
push
dec
pop
add
std
cld
xchg
jge
push
pop
sbb
lods
lock
into
push
cmpl
sbb
jno
or
jl
pop
sti
dec
or
or
jbe
test
jo
mov
inc
and
mov
sti
push
lahf
sub
cmpsb
jmp
pop
in
mov
lahf
ret
daa
cmp
aas
push
leave
jmp
sub
mov
xor
mov
pop
cmc
xchg
and
sbb
adc
jne
mov
mov
dec
pop
into
pop
aam
js
icebp
or
jl,pn
lcall
push
fcoml
imul
mov
outsb
cli
sahf
cmp
lret
mov
or
mov
push
mov
popa
cwtl
and
outsb
push
and
cmp
enter
push
jge
pop
movsb
out
or
xchg
leave
mov
dec
mov
xchg
sbb
pop
negl
shrb
jg
lcall
jo
in
fisttps
adc
push
pop
cmp
cmc
pop
xchg
negl
add
leave
insb
cmp
sbb
or
push
into
dec
nop
lret
cmc
dec
fsubs
outsl
pushf
mul
adc
inc
imul
dec
dec
data16
xchg
lods
jge
or
sbb
pop
mov
push
aad
jle
sti
xchg
sub
add
insl
adc
pop
cld
std
inc
testl
mov
mov
mov
pop
or
sbb
cmc
into
repz
sbb
or
jle
or
inc
movsl
jae,pn
adc
imul
and
lock
int
dec
mov
mov
adc
aad
mov
jg
add
dec
ret
call
mov
aas
addb
lret
cmp
adc
inc
adc
mov
mov
mov
loop
shl
cwtl
and
std
cmp
adc
pop
xchg
adc
push
test
cld
clc
inc
lret
shll
mov
mov
sbb
insl
lock
aam
das
xor
and
sub
aam
cmp
cmpsb
sbb
lods
pop
mov
xchg
sbb
lret
cmpsl
cmp
jae
lock
int3
lods
and
scas
sahf
mov
mov
mov
movsb
dec
rolb
sbb
cmc
cltd
mov
adcl
fst
rorl
dec
stos
sbb
lret
cmp
mov
add
stos
pop
das
inc
out
sub
pop
xchg
pop
rorb
push
mov
stos
add
or
and
and
scas
jmp
xchg
mov
xor
fwait
ret
scas
or
xchg
pop
fwait
call
hlt
mov
xchg
jecxz
add
jmp
decl
cmp
jns
xor
movsb
int
xchg
stos
ds
mov
jl
mov
rcrl
jp
xchg
jmp
cmpsb
imul
mov
dec
dec
rolb
jne
inc
jae
sti
lret
or
adc
mov
xchg
push
call
inc
out
jbe
sub
test
lahf
adc
sbb
jnp
xchg
ss
mov
in
ffreep
pusha
cmp
inc
fisttps
or
pop
imul
pop
pop
xor
push
inc
or
popf
rorl
push
mov
aaa
clc
xchg
sub
adc
testb
and
in
aad
adc
mov
or
mov
jns
inc
xchg
shrb
cmpsb
inc
arpl
fmuls
sub
mov
int3
xchg
pushf
add
movsl
int3
faddp
cmp
push
nop
push
imulb
push
cmp
mov
addr16
sahf
call
dec
jge
lods
mov
mov
sahf
fnstsw
idivb
jl
loop
dec
jns
fmull
pop
pop
int3
xor
jb
pop
scas
and
pop
out
loope
push
cmpsb
inc
inc
mov
cmpsb
outsb
jl
in
mov
enter
daa
cmp
push
insb
add
sti
dec
cs
xchg
arpl
loop
fistpll
loope
mov
add
lahf
mov
ret
pop
fstpl
pop
lods
inc
add
xor
xor
mov
adc
pop
pop
jmp
xlat
js
fisttps
lcall
ja
sti
mov
mov
pop
in
adc
movsl
sahf
popl
movsl
mov
in
pop
mov
adc
pop
dec
push
daa
xor
int
cmp
sub
insb
movl
mov
aaa
shl
pop
mov
lret
push
pushf
sahf
int
xor
sbbb
jg
shll
stc
daa
cmp
rclb
ss
xor
mov
insl
negl
cli
and
pushl
adc
adc
into
xor
adc
xor
sbb
adc
sub
roll
add
fnstenv
fs
mov
repz
out
test
mov
aad
sar
sub
mov
xor
stos
pop
sbb
inc
or
flds
jnp
repz
xchg
and
cmp
xor
pop
or
gs
push
mov
jmp
fwait
sbb
and
aad
jb
nop
cld
out
rorb
jb
mov
fnstenv
xor
movb
mov
int
jno
and
push
mov
out
subl
fldt
sahf
pop
push
aaa
dec
inc
cltd
int3
sub
mov
aas
sbb
aaa
cmpl
inc
dec
insl
mulb
add
loope
ficomps
insb
mov
mov
daa
jnp
cld
and
lret
xor
xchg
mov
xor
pop
cmc
push
das
adc
rclb
mov
aam
xchg
push
ret
or
jmp
xor
insl
jle
mov
lds
cmpsl
cmp
sub
lods
popa
add
out
lods
nop
aaa
mov
jb
fldenv
dec
movsl
pop
pop
ret
add
das
sahf
sbbl
pop
pusha
cmpsl
push
jb
and
incb
clc
push
dec
inc
xchg
mov
sbb
mov
pop
shrl
pop
stos
push
js
out
mov
xchg
movsb
mov
emms
insb
test
cli
mov
or
push
aam
xchg
sub
mov
sub
dec
arpl
xor
add
inc
xor
in
fwait
pop
push
push
lahf
imul
sbb
dec
add
xchg
stc
xor
jns
jmp
in
rorb
xchg
stc
jg
mov
mov
lcall
push
pop
jp
mov
lahf
mov
in
adc
dec
mov
in
pusha
mov
lock
ljmp
jmp
and
pop
adc
call
sub
movsb
dec
shlb
scas
jo
sub
and
iret
cmp
in
test
adc
fwait
daa
in
movsb
ss
cmp
xchg
mov
pop
mov
lods
fnstenv
and
call
jecxz
push
cld
int
fcmove
adc
xchg
orb
sbb
push
iret
imul
mov
push
sub
xchg
cli
iret
outsb
std
stos
repnz
leave
addr16
hlt
add
aam
dec
jg
inc
mov
pusha
push
loop
mov
and
dec
sbbb
pop
add
inc
rclb
out
ss
and
aas
push
movsb
repnz
jnp
in
mov
pushf
jge
out
sbb
xchg
aaa
dec
outsl
add
sub
test
adc
repz
call
mov
xor
int
jne
add
push
add
test
xor
inc
adc
jno
cmp
ret
daa
cmp
push
ret
shl
adc
mov
jo
cmp
pop
imul
sarb
mov
nop
ret
int3
adc
xor
lds
pop
adc
leave
js
popa
mov
lods
cli
mov
push
ss
mov
cmpsb
int3
pushf
sub
inc
xlat
outsb
rcrb
rolb
into
dec
mov
add
mov
jmp
and
lahf
push
sub
int
ss
dec
lock
mov
icebp
push
sarl
mov
fistpl
das
push
push
jo
out
test
popf
lods
cmpb
jg
or
pop
stc
fiadds
cmc
push
pop
adc
mov
stos
cmp
imul
push
push
push
xor
add
in
and
fwait
into
adc
or
xor
adc
push
jns
imul
add
leave
shlb
mov
lods
dec
inc
cmp
sbb
xchg
sub
cmp
inc
in
inc
icebp
jl
fcompl
inc
gs
mov
pop
cmp
inc
sbb
shll
push
punpcklwd
jl
fstpt
imul
pop
and
inc
adc
stos
pushf
jno
mov
pop
mov
cmp
aad
imull
dec
push
mov
inc
dec
mov
les
jecxz
jnp
or
xchg
lea
adc
mov
inc
and
jbe
push
fistpl
in
inc
and
dec
inc
pop
and
aas
push
xchg
popa
mov
sub
and
rcll
sub
mov
or
mov
leave
pop
mov
jno
cld
dec
mulb
js
sub
mov
fldt
repnz
sbb
push
lea
pop
int
aam
inc
jno
fwait
ret
mov
mov
loop
gs
xor
cmpsl
cmp
ljmp
sub
mov
xchg
dec
add
mov
loop
sub
inc
add
test
test
out
dec
push
xor
mov
clc
pop
sbb
lret
lods
outsb
sbb
push
stos
shll
fcompl
repnz
cmc
test
jne
xchg
jmp
and
xor
xor
jns
mov
inc
push
mov
sub
adc
stos
fldcw
loope
xchg
dec
test
inc
leave
lret
roll
push
inc
mov
mov
cmp
dec
int3
mov
pop
fnstsw
inc
or
mov
add
sarb
dec
push
mov
jp
xchg
hlt
mov
inc
mov
nop
mov
or
xchg
les
leave
dec
or
ja
pop
xchg
in
sbb
pop
repnz
mov
inc
addr16
inc
lods
stos
pushf
cmpl
add
fildll
in
jnp
add
lods
in
int
pusha
jno
in
mov
ret
xor
ficoms
je
test
mov
and
popf
movd
mov
cmp
jle
xlat
das
dec
sbb
test
shrl
scas
ljmp
adc
jle
int
test
add
mov
arpl
xchg
jb
or
push
pop
insl
inc
popa
std
sbb
adc
add
dec
int3
imul
xor
jo
arpl
sub
xchg
cmp
cmp
shrl
mov
jge
push
sbbl
pop
cwtl
aaa
or
loope
pop
sbb
jl
xchg
dec
push
lcall
push
lcall
loope
rsqrtps
enter
jne
push
add
mov
pop
and
enter
daa
cmp
xchg
push
iret
jle
sub
sub
and
cmp
or
daa
add
sbb
andl
xchg
sub
dec
jmp
incb
dec
dec
xor
inc
xchg
daa
and
cmp
mov
jmp
xchg
lea
fisubrs
in
xor
outsb
and
adc
pop
dec
pop
popl
dec
sub
add
push
and
pop
push
sub
pop
shrl
pop
jbe
and
pop
lret
rcll
mov
js
pop
cltd
push
sahf
adc
sbb
adcb
lret
loop
out
stc
xchg
repz
adcb
jo
or
aaa
jo
cmp
es
pushf
neg
fucomp
cli
mov
mov
or
pop
or
lahf
out
fisttps
mov
jmp
rcll
add
or
sbb
sub
sbb
cmp
push
ss
popl
in
stos
xchg
mov
mov
imul
pusha
into
gs
loopne
lret
pop
push
push
inc
xor
fxtract
and
les
cmc
repz
fistps
cmpsb
les
pop
xlat
mov
adc
out
push
jmp
xchg
mov
aad
loope
nop
mov
xor
jb
aaa
insl
dec
sbb
je
sbb
jecxz
addr16
or
mov
ret
or
and
mov
mov
lcall
fcmovne
cmp
pop
xchg
inc
cmpsl
aaa
pop
inc
cmp
lret
sub
and
inc
shl
jne
mul
push
sub
das
stos
dec
cwtl
jne
data16
pop
xchg
mov
aad
or
jns
pusha
lret
push
dec
rorl
adc
lock
popa
das
rcrl
xchg
sub
aam
inc
insb
ret
sub
xor
ss
pop
insl
dec
jns
dec
mov
mov
ljmp
push
lods
data16
pop
imul
mov
add
imul
and
pushf
push
clc
test
clc
xchg
jp
xchg
or
in
sarl
pop
daa
divb
stos
in
scas
out
push
popf
jl
xor
std
push
dec
std
sysexit
sti
jne
mov
push
sbb
daa
mov
mov
cs
mov
test
sub
pusha
pop
lcall
test
jne
sbb
in
lock
and
cmp
insb
mov
bound
mov
pop
in
rcrl
mov
inc
adc
add
aam
cmp
xor
and
out
and
fmuls
imul
mov
ja
out
test
ficoms
outsb
push
lods
xchg
mov
mov
out
cmp
sub
lcall
stos
orps
and
test
insb
popa
lcall
loope
imul
or
insl
fucomip
cmp
ret
sbbl
ret
mov
push
mov
popf
ss
mov
jp
mov
xchg
js,pn
sbb
mov
imul
subl
sti
push
adc
xlat
iret
sub
push
repnz
movsl
leave
push
push
and
cltd
test
arpl
roll
or
or
andl
jb
push
cmp
add
lods
int3
push
mov
stos
fisubrs
mov
rolb
mov
and
jns
aas
xor
push
mov
or
or
stos
jge
or
sbb
adc
aaa
lret
cmp
out
jl
addr16
dec
hlt
cmc
push
add
xor
sbbl
shlb
test
lret
out
inc
repnz
neg
enter
add
mov
fisubrs
loope
xor
xor
out
dec
cmpsb
ds
rcr
and
sbbb
sbb
fcmovb
add
aam
xor
incl
pusha
jns
js
and
lcall
pushf
fdivr
insl
shrl
fsub
data16
xchg
adc
fs
lss
loop
rcll
and
cmp
fnsave
pop
mov
jmp
aaa
mov
add
aas
sahf
mov
icebp
test
push
scas
subb
and
stc
dec
inc
fbld
mov
ss
aaa
cmp
loope
push
negl
jo
xor
clc
adc
add
cs
add
cmp
outsl
sbb
fldt
inc
enter
insl
add
push
jo
cmp
insb
lods
sbb
cltd
out
stc
mov
mov
push
adc
repnz
inc
gs
cmpsb
cmp
mov
js
pop
inc
inc
dec
or
sub
les
call
sbb
loope
mov
pop
mov
adc
test
sub
cmp
jmp
inc
nop
lea
lcall
ret
xchg
dec
cmc
je
leave
mov
out
xchg
mov
adc
int3
call
lahf
lret
cmpsb
mov
adc
xorl
es
xor
lcall
lret
add
inc
lcall
lcall
shll
repnz
sub
std
pop
pop
cwtl
xor
imul
lret
xchg
movsb
testb
jge
pop
mov
in
mov
lret
shl
xor
dec
das
mov
hlt
rclb
add
sub
iret
aam
pushf
test
mov
xchg
jmp
cmpsl
aaa
insb
shr
adc
dec
xchg
lods
rcrl
mov
and
and
mov
and
add
sub
addr16
in
mov
inc
xchg
push
mov
cs
clc
iret
outsb
push
xchg
dec
mov
and
jecxz
rcrb
test
mov
nop
xchg
jns
popf
push
and
adc
xchg
enter
fnstsw
or
jno
mov
xor
dec
cwtl
xor
loopne
popa
dec
fdivl
inc
mull
or
les
movsb
int
push
mov
xchg
add
jb
or
mov
sbb
in
iret
mov
sbb
push
pop
mov
inc
mov
aad
enter
xchg
mov
cmp
dec
dec
dec
xor
jne
cmp
out
xchg
mov
xchg
sbbl
out
mov
scas
or
idivl
sbb
and
lret
int3
fnstcw
test
add
sub
dec
dec
xchg
pusha
cmpsl
lret
pop
mov
or
in
in
inc
mov
jae
ss
dec
or
mov
mov
in
xchg
test
sub
mov
scas
mov
stos
push
stos
jp
adc
in
iret
mov
add
leave
int3
xor
in
or
sub
inc
xchg
sbb
or
cld
jl
inc
pop
rolb
add
jbe
int3
inc
mov
sub
lds
movsb
shlb
mov
mov
jne
idiv
movsb
xchg
and
push
fcmove
in
jbe
xchg
jge
out
xchg
sbb
stc
cmp
inc
xchg
cmp
cmp
mov
push
in
lea
faddp
test
push
jp
das
test
xchg
addr16
inc
addl
int
mov
mov
aaa
pop
subl
and
sub
add
sahf
sbb
ds
sub
movsl
sub
mov
outsb
cmp
lahf
das
mov
jno
pop
sbb
mov
xor
sbb
adc
sbb
js
pusha
inc
pop
imul
pop
push
cmp
fsubl
pop
mov
jmp
sub
rclb
dec
ljmp
jge
mov
jp
xchg
mov
and
sub
lret
xchg
sub
mov
lret
adc
inc
jle
mov
adc
sahf
pop
mov
or
test
fcomps
stc
add
xchg
adc
jl
ss
sbb
fcomps
out
out
or
imul
into
into
mov
or
push
mov
idivl
add
punpckhwd
mov
jmp
jmp
mov
cmpsb
scas
mov
ret
movsl
out
push
shrl
inc
mov
andl
adc
dec
in
je
in
xchg
arpl
inc
push
std
and
xlat
cmp
dec
mov
mov
adc
cmp
xlat
pop
scas
xchg
pop
cmp
sub
mov
xor
bound
add
cmp
movsb
dec
or
add
jecxz
or
adc
cmp
call
push
mov
pop
or
bsf
daa
in
adc
movsl
pop
inc
mov
roll
fcmovnbe
aas
jecxz
mov
push
fs
push
imulb
jge
jge
mov
jmp
push
mov
sbb
mov
subl
cld
iret
xor
lret
in
mov
mov
call
inc
das
sti
push
shl
test
aas
out
aam
inc
ret
ret
dec
in
xor
cmp
or
xchg
cld
dec
mov
push
cmpsl
ss
imul
pop
clc
popa
arpl
lods
cmp
pop
mov
decb
nop
mov
aas
push
add
add
jb
sbb
jle
fstpl
testl
in
xchg
pop
jge
mov
sbb
dec
xchg
rcrb
call
jmp
repz
jecxz
inc
stos
xchg
or
fldenv
mov
xor
rorb
rolb
xchg
pop
test
arpl
or
and
fwait
sarl
movsb
push
sub
int
aaa
cmpsb
add
ljmp
sbb
jns
xor
js
xor
mov
mov
ja
add
jbe
fstps
mov
test
jo
das
loope
jne
jo
mov
dec
loopne
pop
ljmp
mov
dec
fildll
movd
cld
scas
jmp
or
pop
lock
cmc
push
xlat
and
cmp
pop
jnp
ljmp
dec
mov
cmp
es
jne
fisttps
test
xchg
sub
push
wrmsr
negb
cmp
sub
jbe
ficoml
je
sbb
adc
imul
push
repnz
icebp
adc
jge
iret
ljmp
leave
inc
mov
hlt
das
test
jle
xchg
pushf
sub
jns
loope
ja
pop
inc
fiadds
jl
xchg
rcrl
mov
lds
sarb
mov
dec
pop
cmp
dec
rclb
lods
cmp
cwtl
inc
jge
mov
leave
aaa
dec
fidivrl
cmp
imul
jl
jecxz
dec
movsb
cmc
jno
enter
arpl
jo
ds
scas
jle
hlt
push
dec
lods
ljmp
popa
cmp
inc
adc
loope
or
stc
je
ss
push
sub
sub
cs
cmp
mov
movsl
xor
sub
test
js
insb
orl
in
xor
pop
loopne
fisttps
mov
scas
mov
or
test
jmp
and
push
xchg
jle
fcoml
mov
mov
mov
adc
in
dec
and
mov
arpl
mov
inc
xchg
aaa
outsl
push
ss
ret
int
adc
sub
in
sahf
fwait
mov
dec
mov
rcr
jns
pop
shll
mov
dec
test
das
dec
and
and
cli
and
loop
outsl
repz
mov
dec
adc
sub
add
fcoms
ja
pop
push
ss
and
xor
pop
cmp
fisubrs
or
fs
mov
jo
xor
iret
xchg
outsl
repnz
bound
pop
sbb
adc
push
mov
push
out
lods
data16
lods
out
rorl
adc
push
pop
mov
in
and
cwtl
es
cmp
mov
push
push
mov
pop
mov
js
imul
and
lcall
xchg
lock
inc
sbb
push
out
sub
xchg
pusha
pop
lock
sahf
adc
mov
imull
lds
dec
nop
inc
push
daa
dec
lcall
dec
jg
sub
in
or
sub
repz
popf
sub
mov
mov
sbbl
fistl
jno
inc
and
inc
cmp
and
aas
subb
mov
fs
rcl
mov
divb
mov
cwtl
cmpsb
fdivl
lds
pop
mov
cld
cli
inc
inc
lret
pop
push
push
mov
push
lock
add
outsb
mov
shlb
lea
ret
xlat
sub
lahf
insl
add
dec
lods
adc
xor
pusha
popa
jp
insl
lods
cmpsl
hlt
mov
mov
mov
sbb
pop
fisttpl
add
xchg
daa
test
fbstp
inc
push
enter
in
inc
adc
xchg
loope
sbb
jmp
sarl
loopne
stos
mov
out
jge
out
pop
or
push
rsqrtps
xor
xchg
xchg
xor
lock
mov
aaa
ret
push
call
xchg
cmc
out
dec
ret
inc
and
push
mov
add
into
or
add
jb
sbb
fcoms
bound
and
out
push
xchg
test
lcall
aaa
pop
pop
xor
dec
dec
jp
or
mov
lods
daa
mov
pop
js
dec
adc
mov
sbb
push
add
push
sbb
sbb
sbbl
dec
sub
mov
lods
addr16
mov
ja
pusha
jp
insb
mov
adc
jle
mov
dec
pusha
fnstsw
in
inc
xlat
mov
repnz
pop
mov
cwtl
inc
mov
in
xlat
push
rol
fwait
popf
stos
fidivs
push
aaa
imul
xor
sub
xchg
add
scas
jbe
nop
push
cmp
mov
repnz
inc
leave
mov
daa
mov
inc
cwtl
xchg
or
repnz
in
inc
pop
mov
or
sub
jge
pop
sbb
pop
out
jbe
ficoms
push
rcrb
shll
frstor
inc
cmp
movsb
test
shl
jbe
sbb
dec
sbb
xorb
aas
push
jno
inc
cwtl
jl
pop
xchg
dec
adc
xor
xchg
int3
mov
and
test
sub
out
inc
lahf
pop
cmpsb
orb
hlt
sbb
enter
daa
xor
add
repnz
das
lret
or
ds
das
movsl
cmp
xchg
lahf
insl
and
sbb
imul
bound
push
insl
js
cwtl
mov
lcall
xchg
fdivr
xchg
scas
sub
mov
stos
xchg
rol
xchg
cld
popl
jle
mov
into
cmp
bound
push
cmp
int
test
pop
sbb
and
jo
xchg
mov
fsubl
sbb
dec
mov
test
addr16
jg
jae
loop
add
into
lods
fwait
call
lods
cmpsb
iret
ss
inc
fidivrs
adc
inc
not
fdivr
cli
push
xchg
sbb
data16
popl
into
or
cmc
mov
arpl
adc
jge
adc
fsubrl
jecxz
ds
lods
into
pop
xor
adc
loopne
and
xchg
mov
push
jns
sti
inc
mov
pop
jne
gs
mov
test
inc
jl
jp
rcrb
test
pop
xchg
xchg
mov
cld
sbb
xchg
jns
xlat
xchg
jmp
adc
nop
insl
pushf
enter
add
add
sub
cwtl
nop
push
pop
mov
stc
xor
jb
pushf
movsb
dec
testb
and
xor
sbb
add
lea
test
mov
xchg
popl
or
mov
pop
call
mov
jle
and
ret
nop
