cmp
imul
inc
add
lods
cmp
cmp
test
mov
cmp
cmp
cmp
cmp
cmp
in
fdivrl
cmp
cmp
aam
int3
mov
cmp
enter
in
push
push
add
jne
jg
in
fucomi
add
fs
je
push
or
sbb
ret
jge
add
leave
mov
lea
pushl
dec
test
jne
call
xor
mov
mov
mul
add
mov
push
cld
pop
pop
ret
lea
imul
gs
scas
std
xor
cs
insb
xchg
add
add
inc
add
dec
xlat
je
fisttpll
push
clc
adc
pop
jo
outsl
pop
pop
dec
in
mov
xor
or
in
mov
lcall
add
push
lea
lea
mov
mov
add
sbb
or
iret
outsb
jmp
adc
mov
movsb
fdivp
mov
cs
jmp
push
pop
mov
pushl
mov
xchg
dec
dec
jne
xor
mov
sbb
into
add
xchg
mov
mov
xchg
je
in
shr
add
push
cld
xchg
mov
repz
or
mov
hlt
or
add
scas
loopne
in
push
call
clc
xchg
decl
sbb
jmp
xchg
mov
xor
lea
add
paddd
incb
lret
mov
mov
dec
mov
in
mov
push
psubsb
into
fcomps
fcomp
push
loopne
call
fsubrp
or
icebp
mov
jb
mov
xchg
and
add
std
or
adc
out
dec
sub
shrb
sub
or
sbb
dec
push
movsb
lea
idiv
inc
xchg
mov
or
add
jo
fidivl
mov
dec
jmp
mov
rcll
xchg
dec
mov
js
rcrb
int3
adc
rcr
aam
divl
cmp
push
mov
mov
test
jno
sub
addl
cmp
xchg
sub
adc
pop
idiv
fcomip
pop
mov
mov
mov
mov
cmp
jnp
mov
mov
jmp
xor
adc
stc
es
jmp
mov
inc
in
xchg
mov
xchg
and
mov
xchg
and
inc
push
pop
xor
mov
mov
stos
clc
mov
mov
mov
call
mov
lahf
jmp
and
mov
mov
push
enter
mov
mov
add
loope
idivb
sti
dec
loopne
push
pop
fidivs
or
xor
adc
mov
inc
rcr
mov
push
dec
inc
call
sbb
adc
mov
repnz
lea
jl
or
mov
mov
out
jg
push
rclb
adc
add
mov
push
outsl
lcall
add
lea
xchg
and
inc
movb
pop
cld
aaa
mov
push
pop
xor
xor
cmp
std
cld
xor
xor
aaa
xor
add
push
push
xor
sbb
mov
add
sub
add
xor
aas
dec
cmpsl
int3
mov
test
jbe
add
push
cmpsb
pop
sub
lahf
pop
push
mov
sbb
sbb
icebp
mov
mov
xor
push
sbb
or
lea
jg
and
inc
jmp
jns
fs
mov
inc
cmp
xor
jbe
mov
rorl
jmp
mov
ud0
in
push
pop
inc
dec
je
xchg
in
cltd
shl
fistpl
add
sub
lea
mov
inc
sbb
and
clc
loop
jl
out
pop
add
movsl
das
in
jns
or
add
sub
stos
loopne
jmp
scas
push
mov
mov
push
data16
adc
mov
lahf
lock
ss
bnd
pop
dec
in
loope
mov
or
cmpb
movsl
mov
xchg
out
push
in
mov
pop
pop
cmp
adc
add
and
in
or
inc
insb
repz
or
fsubl
rclb
mov
push
xor
addl
mov
xor
sbb
jl
lea
sbb
jns
dec
and
push
cld
in
lret
lret
or
add
mov
sbb
dec
sub
pop
test
xchg
inc
pop
xchg
imul
movsb
mov
scas
scas
inc
nop
mov
jo
sbb
addl
stos
das
xchg
cmc
push
cmpsb
dec
cmp
and
or
scas
lods
dec
stos
inc
rol
add
sbb
sbb
paddusb
adc
and
lahf
lock
push
push
xchg
adc
inc
aam
push
fwait
insb
or
add
jo
pushl
test
int3
jle
out
les
or
mov
out
pop
add
mov
jns
enter
daa
lods
push
es
xor
xor
xor
lcall
cmp
outsl
lcall
aaa
sub
fs
jnp
fs
cmp
xchg
add
cld
mov
mov
mov
rep
pop
pop
dec
pop
mov
les
xor
ja
or
movsb
jne
shr
mov
ret
xor
mov
add
loopnew
std
adc
mov
movsl
push
hlt
sub
sbb
pop
cld
aam
mov
xor
popa
xor
jg
mov
mov
sub
call
lock
dec
enter
mov
and
cmp
pushf
pop
pusha
jne
push
jge
adc
loop
movzwl
mov
ret
add
sbbl
outsb
decl
jne
jo
loopne
mov
add
scas
jne
jge
ret
iret
pop
cmpsl
mov
mulb
dec
clc
add
sti
std
push
outsb
sbb
je
or
adc
xorb
fdivp
mov
and
cmp
pop
add
bound
sub
sub
jmp
js
pop
sti
add
adc
or
add
lret
imul
mov
or
mov
adc
sbb
rorb
aam
push
jl
in
and
cmp
push
push
push
pop
jge
jl
rol
je
mov
pusha
mov
inc
or
loop
test
xor
and
cmp
sbb
and
jo
mov
mov
xor
cmpsb
jns
dec
in
in
ljmp
or
test
je
pop
xor
insb
not
push
je
mov
xor
add
in
imul
or
in
insl
mov
pop
adc
mov
cmp
mov
cmp
loop
dec
icebp
lds
loopne
ret
and
add
daa
js
cmpl
iret
push
sti
cmp
pop
push
push
das
add
or
shrl
sbb
mov
xor
sub
sbb
insl
sti
sti
outsb
imul
jmp
sbb
scas
loop
dec
dec
mov
inc
add
sbb
das
aaa
int3
aad
and
xor
mov
mov
and
arpl
push
sbb
ljmp
mov
add
adc
adcl
pop
mov
pushf
or
inc
test
lock
dec
pop
je
fucomp
jb
inc
loop
and
in
push
jo
fisttpll
add
mov
inc
ret
bound
jmp
movsb
sub
pop
pop
adcl
dec
inc
sub
dec
mov
mov
sub
pop
sbb
add
sbb
sbb
movsl
lods
js
inc
push
and
and
adc
rcrb
xor
inc
add
xchg
out
adc
cs
cmp
sub
daa
dec
hlt
ljmp
in
pop
jmp
xor
add
jg
shlb
jns
shl
jne
test
jne
xchg
ds
dec
js
daa
inc
imull
mov
sbb
dec
subb
fsubs
jge
or
adc
je
push
repz
test
orb
inc
dec
push
out
rcrb
add
mov
hlt
or
inc
rcll
cmp
jbe
loope
loope
pop
jmp
jl
pop
or
sbb
pop
or
xchg
or
push
mov
and
push
cmp
inc
mov
jmp
push
adc
inc
push
or
jae
iret
in
stc
ds
dec
rcll
add
cmp
ljmp
pushl
fcoms
hlt
push
popl
outsl
shrb
and
idiv
out
clc
testl
arpl
fs
jae
cmp
popa
fs
imul
xchg
dec
jo
outsb
push
push
pushl
sbb
outsl
jae
dec
popa
outsb
fs
add
imul
addr16
fistpll
bound
arpl
insl
popa
jo
imul
inc
adc
out
insl
scas
std
je
popa
insb
inc
insb
outsb
arpl
cwtl
ljmp
pop
inc
repnz
insb
dec
outsl
jbe
dec
gs
outsl
dec
xor
dec
ss
test
pushf
fucomp
inc
outsb
je
out
shr
inc
jne
ss
dec
xchg
cmp
mov
pop
mov
call
call
sbb
test
cmp
or
test
adc
pushf
stos
fs
add
je
pop
fxtract
jge
inc
xchg
pushf
adc
push
bound
lock
cmp
jb
loope
or
add
inc
jle
adc
jl
cmpl
ss
ljmp
rolb
mov
adc
call
jne
mov
add
sub
inc
or
or
add
pop
pop
adc
jge
xor
test
cmp
hlt
xchg
jl
lahf
jbe
mov
push
pop
leave
push
repnz
inc
mov
and
mov
push
dec
mov
orb
incl
sub
add
loope
cmp
pop
mov
lea
xchg
xor
cld
adc
les
sub
fldl
fwait
and
js
mov
lahf
movsb
adc
mov
sub
ja
sbb
and
push
repnz
xchg
data16
lock
lock
pushf
xchg
sbb
pop
dec
xchg
or
inc
push
mov
rorl
in
int3
and
and
pop
jbe
insb
jae
and
jo
fstl
mov
inc
and
adc
and
jb
call
les
mov
out
call
in
push
pop
xor
lods
rorb
lret
or
dec
sbb
sbb
add
xor
mov
call
sub
shr
ja,pt
and
mov
push
shlb
sbb
fldcw
loop
daa
add
loope
mov
ja
mov
lcall
cs
xor
sbb
rolb
jge
lahf
add
mov
and
cltd
cmp
add
or
imul
add
outsb
or
add
add
fistpl
sbb
ja
outsb
sbb
add
pop
aaa
movb
ds
enter
sbb
pop
sbb
mov
push
push
add
or
push
stos
push
fistps
jge
push
or
dec
mov
in
mov
push
sbb
push
cmp
mov
inc
push
push
andl
clc
lret
movsl
rclb
cmp
jl
ljmp
sbb
xor
movb
sbb
mov
jb
sbb
or
cmp
aaa
mov
or
cli
imul
cld
or
test
add
loopne
scas
adc
lods
sahf
dec
mov
or
outsl
arpl
push
imul
inc
jmp
rorb
dec
dec
cmp
add
dec
and
inc
mov
jnp
add
jmp
xor
jno
adc
push
subl
rolb
repz
xchg
add
jle
int3
fdivr
push
add
mov
inc
xor
adc
insb
xor
mov
popf
jmp
xor
mov
movsl
add
popa
mov
cmpsb
push
icebp
decl
sbb
inc
jns
dec
dec
cli
inc
lea
push
jle
mov
test
adc
cmpl
shr
subb
and
adc
loop
push
xchg
gs
aam
pop
movsl
stos
cmpsl
decb
push
mov
and
subb
adc
push
inc
inc
add
mov
or
or
subl
mov
xchg
fidivrl
sbb
and
unpcklps
adc
push
sbb
jbe
in
add
outsl
pop
dec
adc
push
and
sti
and
or
mov
pop
mov
scas
and
or
and
movb
push
dec
dec
and
test
cmp
es
or
in
repnz
push
pop
ret
inc
mov
cmp
stos
inc
jle
pop
sub
daa
filds
or
push
jno,pn
xchg
dec
out
mov
xor
dec
push
mov
jbe
push
outsl
jp
stos
loope
pop
pop
mov
cltd
and
aas
loope
mov
cmp
fs
jbe
mov
in
fiaddl
jne
cmpsl
out
das
notl
xchg
insb
dec
in
inc
outsl
ja
jo
jno
add
in
mov
mov
push
fwait
pusha
cmpsl
dec
js
subl
mov
outsb
xor
jnp
dec
mov
mov
ds
adc
inc
outsl
stos
jmp
adcb
xchg
cmpl
mov
cltd
fmuls
orb
rorl
out
xchg
movsl
cwtl
pop
lcall
mov
movsl
jb
lds
lods
inc
scas
inc
jo
and
sbb
test
je
cmp
dec
lret
lds
pop
or
lret
add
daa
fmulp
hlt
int
test
shlb
jbe
in
adc
rcrl
rcl
mov
pop
mov
pop
pushf
jae
mov
mul
xchg
in
dec
fsub
fildll
filds
mov
aaa
add
inc
jmp
pushf
popf
pusha
aaa
aam
daa
adc
xchg
test
pop
mov
repnz
daa
cmp
push
cmc
pop
xchg
test
push
fadds
pop
or
jmp
jns
das
mov
xchg
push
cmp
pmulhuw
insl
mov
add
daa
out
pop
stc
push
mov
pop
mov
sbb
adc
xor
sbb
ljmp
lods
and
add
sub
sub
outsl
adc
popa
sub
xadd
leave
or
aas
or
testl
ss
pop
pop
daa
faddl
or
loopne
inc
iret
mov
addr16
nop
push
enter
pop
mov
and
pop
dec
push
stos
mov
jl
pop
mov
pop
and
ljmp
cld
pusha
mov
xlat
cltd
fmuls
mov
lret
add
stc
jno
mov
daa
cmp
andb
daa
xchg
fsts
xchg
fwait
cmpsl
nop
xchg
fisttpl
xchg
mov
dec
mov
sbb
mov
jae
pop
dec
leave
sub
mov
nop
mov
leave
sub
and
pushf
add
cmpsl
in
negl
dec
in
das
pop
mov
leave
imul
mov
daa
fdivrl
jbe
lds
jmp
push
fmuls
cmp
push
aad
out
xor
pop
mov
ficoml
push
fisubrl
mov
adc
dec
mov
fsubr
das
mov
enter
pop
mov
pop
fiadds
mov
pop
iret
aaa
out
dec
adc
mov
pop
daa
hlt
cmc
xchg
divb
pop
jo
cmp
pop
xor
outsl
mov
cmp
cmp
pop
insb
enter
add
movl
aaa
std
popf
nop
adc
or
hlt
or
push
mov
sub
push
aaa
pop
pcmpgtb
push
jo
aaa
lods
adc
dec
and
adc
pop
fwait
adc
call
out
aaa
imul
and
ja
sbb
dec
scas
xchg
das
andb
and
aaa
ficoml
iret
es
in
les
iret
daa
pop
and
outsl
es
dec
sub
add
sub
pop
movsb
cmpsl
pusha
repz
dec
sub
xor
orb
aaa
push
xor
adc
sub
xor
xor
push
loopne
xchg
xor
das
bound
cmpsl
ss
shlb
outsb
cmp
mov
cmp
daa
das
loop
dec
adc
pop
cli
aaa
scas
popf
jbe
addr16
xchg
aas
test
or
sub
das
or
inc
ds
pop
lods
nop
push
cmpsl
push
push
aas
dec
sbbb
das
sub
inc
lds
insl
fldt
push
aas
lds
in
insl
add
sub
das
push
pop
aas
cmpsl
fsubrs
pop
and
cmp
mov
mov
fcomps
push
insl
pop
mov
dec
inc
jp
pop
jo
ja
mov
cltd
jae
je
dec
jne
leave
je
mov
das
out
add
dec
dec
jp
or
mov
fildl
das
inc
jg
pop
jg
rorl
pushf
jb
dec
push
mov
xchg
in
and
rorl
xchg
bound
cmpsb
das
fstps
daa
nop
addr16
fiaddl
das
ja
inc
enter
push
xor
mov
mov
std
xlat
fsubrs
arpl
jbe
outsl
pop
setg
push
mov
dec
mov
jb
cmpsb
fwait
stos
mov
mov
adc
aam
or
xlat
push
add
mov
jno
mov
pop
push
rorl
cmp
jbe
inc
pop
enter
in
and
leave
lahf
xchg
test
int3
cmpsl
jbe
add
das
test
cmp
aas
rorb
and
outsb
shll
jb
loopne
sarl
das
rorb
daa
stos
sarb
mov
bound
xor
aaa
rcl
fsubrp
mov
dec
and
adc
insl
cmp
adc
cmc
aaa
and
push
or
pop
popf
fs
jecxz
pop
sbb
movsb
cli
bound
cld
iret
or
aaa
cmp
pop
insb
jle
xor
das
inc
enter
bswap
sahf
add
iret
insl
push
imul
add
scas
daa
dec
cmp
pop
or
or
divb
and
mov
lds
hlt
sbb
push
push
in
fcmovu
negb
daa
cmp
popf
nop
push
fldenv
jg
pop
fisttpll
clc
push
in
sbb
imull
push
nop
sub
inc
cmp
mov
or
cmp
movsl
jle,pt
aaa
or
cmp
lods
inc
pusha
outsl
outsl
or
push
push
pop
enter
test
dec
ds
leave
sub
pushl
aaa
inc
push
cmp
das
dec
push
pop
add
arpl
jne
test
add
pop
bound
test
sahf
jae
jae
dec
in
insb
jae
je
jne
out
notl
jns
pushf
in
daa
sbb
jl
dec
in
les
jge
mov
mov
fimull
adcl
sbb
dec
adcl
sbb
ja
pusha
pop
fwait
xchg
das
in
cmc
mov
mov
pop
andb
rcrb
dec
outsb
sub
daa
mov
fcompl
es
popf
push
iret
outsl
or
xchg
xchg
pop
insl
dec
mov
inc
movsb
cmp
das
dec
jbe
movsb
gs
add
fsubs
push
test
pushf
test
add
lods
cltd
bound
inc
lods
aaa
push
in
aad
xchg
dec
fidivl
dec
mov
aaa
sub
fwait
mov
pusha
addr16
cs
les
mov
bound
ret
xchg
mov
adc
fstpt
fs
dec
call
push
and
data16
in
rolb
dec
leave
sub
aam
aad
mov
shl
adc
push
frstor
jle
loope
in
xchg
insb
out
sub
out
pushf
mov
mov
cs
push
out
jmp
fistpl
loop
movsl
out
push
inc
push
cmp
addr16
jbe
popf
popf
sbb
aaa
add
pop
idivb
cmp
clc
inc
cld
and
jnp
inc
addb
aaa
jo
add
ret
push
or
scas
fdivs
fwait
mov
pop
mov
pop
in
cld
cmpsl
and
sbb
fadd
das
xchg
das
in
test
pop
stos
sbb
bound
fcomp
cmp
or
test
fidivl
and
jno
dec
mov
insb
sub
sub
das
fs
xchg
jno
aaa
ret
sub
daa
das
add
xchg
lahf
pusha
pop
jb
xor
xchg
ss
fwait
nop
push
enter
dec
jmp
push
aaa
notl
add
xchg
inc
aas
pop
in
inc
fimuls
addr16
mov
sbbb
jns
lds
or
outsb
mov
and
daa
inc
daa
or
push
aas
movsl
dec
daa
jle
push
sbb
sbb
aaa
push
rorl
jbe
push
pop
iret
push
xchg
xor
bound
sbb
add
add
adc
xorl
das
in
mov
into
into
dec
stc
mov
mov
psllq
cmp
outsb
icebp
xchg
fsubrs
jbe
outsl
cwtl
lcall
test
mov
push
and
das
mov
int
xchg
cmpsb
movsl
stc
movsl
add
xlat
cmpsb
fcoms
jmp
lcall
popf
scas
in
loopne
mov
aaa
mov
mov
mov
daa
das
xchg
add
jg
lds
inc
mov
sub
mov
enter
outsb
mov
mov
pop
ret
shll
dec
lods
into
daa
mov
jns
ror
loope
bound
in
out
icebp
pop
xchg
imulb
xor
or
add
jb
aaa
lcall
jge
outsl
jb
add
sbb
add
sbb
or
add
push
mov
sbb
or
cltd
jbe
fistl
call
push
pop
mov
adc
add
mov
cmp
dec
cmp
or
ja
sti
mov
jne
jnp
jns
jbe
ja
cmp
xor
sbb
jno
cmp
dec
push
jne
add
ss
lcall
jns
cmp
sbb
sbb
add
pop
repz
add
test
pop
xor
add
cmp
fstpl
pop
adc
pop
scas
sub
pop
mov
mov
les
jae
lahf
int
lcall
into
movsl
xchg
imull
add
jp
push
jle
inc
jo
insb
add
add
inc
jbe
aas
cld
or
sbb
or
loope
in
mov
add
sbb
sbb
add
daa
call
mov
inc
add
and
or
jns
arpl
or
or
jmp
pop
jne
sbb
mov
or
sub
inc
outsb
mov
lods
pusha
sbb
fcomps
mov
jae
push
mov
dec
in
or
ja
je
mov
insb
and
ss
hlt
lea
sbb
add
push
js
push
pop
ljmp
imul
adc
pop
addr16
pop
mov
aaa
and
or
cwtl
jle
push
ficompl
mov
jnp
pop
sbb
fcomps
mov
xchg
fidivl
push
popa
xor
test
jge
inc
mov
test
lret
sub
fcmovu
sub
add
test
fwait
xchg
mov
imul
imul
adc
ss
lahf
jmp
xor
jno
inc
pop
arpl
ljmp
and
xor
push
mov
sti
push
mov
inc
arpl
pop
in
test
mov
push
pop
adc
test
push
outsl
push
adc
or
pop
xchg
sbb
push
inc
jge
dec
inc
xchg
lcall
rolb
bound
and
mov
add
sub
mov
and
and
or
lods
or
mov
adc
or
insl
mov
adc
mov
cmp
or
sbb
inc
inc
sub
stos
xor
cmp
sub
push
push
xchg
lahf
repz
mov
addb
mov
pop
dec
stos
push
pop
test
pop
and
xor
xor
or
push
jg
push
and
push
xchg
sub
add
or
fldt
iret
mov
jo
int
test
xlat
pop
xchg
dec
mov
lea
test
pop
sub
sbb
test
push
popa
jne
mov
pop
jae
mov
dec
sub
sbb
mov
pop
add
mov
in
stos
imul
iret
xor
stos
adc
push
popa
mov
or
sub
mov
test
push
or
aaa
call
xchg
orl
sub
inc
orl
addl
push
roll
rorl
sub
rol
pop
and
sub
sub
sub
mov
or
xchg
pop
push
lods
mov
stc
insl
aad
add
jnp
test
mov
xchg
pop
adc
pop
mov
sub
aad
mov
mov
lret
xchg
jne
inc
mov
mov
int
aam
inc
lods
jbe
dec
jmp
or
cmp
icebp
push
adc
sub
and
lods
xchg
pusha
imul
adc
xchg
shll
sbb
sub
and
sub
aad
pop
popf
lds
aam
push
test
sub
cmpsl
inc
mov
add
xchg
mov
mov
addr16
rcr
ljmp
mov
lahf
adc
cmc
imul
push
rcll
xor
push
xchg
das
push
bound
sbb
cmc
popa
aas
ja
lock
dec
add
sbb
neg
add
sub
fadds
mov
fcomps
add
sbb
add
or
jle
mov
in
inc
add
mov
scas
add
or
xchg
jnp
adc
mov
xchg
adc
xchg
add
fisttpl
sub
lods
sub
pop
inc
fsubr
mov
pop
or
insl
jl
sbb
faddl
push
jo
idivb
and
lea
xchg
popf
push
insb
ljmp
pop
sbb
int3
sahf
stc
pusha
imul
insb
nop
cmp
inc
cmpsl
jl
les
xchg
gs
clc
scas
mov
mov
mov
test
pop
fs
testb
hlt
add
mov
mov
ret
sahf
cmp
out
arpl
sbbl
aas
sub
mov
in
aas
insb
rclb
in
testb
jg
sbb
cmp
rcrl
lods
repz
ret
xor
sbb
or
mov
mov
idivl
inc
movsb
and
and
adc
in
loopne
inc
pop
fsubrs
test
mov
or
add
mov
pop
test
bound
ret
inc
rorb
iret
push
cwtl
popa
nop
mov
movb
aad
andl
pop
xchg
pop
or
inc
mov
dec
movsb
xchg
jo
jbe
mov
add
xor
or
pop
xor
jno
pop
popl
jmp
push
outsb
xor
in
movsl
lock
adc
push
and
in
jne
mov
cmp
and
lret
mov
mov
pop
adc
cmp
cmp
inc
outsb
pop
jne
mov
adc
dec
mov
popa
ret
rorl
dec
cmp
sbb
dec
and
add
cmpsb
icebp
ds
cmp
push
je
jl
sbb
jo
stc
insb
std
addr16
jb
xchg
pusha
imul
andl
adc
cwtl
xor
js
push
mov
pushf
inc
subb
inc
cwtl
push
insl
ffree
jnp
dec
pushf
inc
rorl
rcrb
lea
or
jecxz
pusha
fcomps
adc
xchg
test
imul
xorb
mov
jge
sub
cmp
jle
mov
loop
rol
cmp
dec
test
pop
dec
mov
jecxz
fcoms
mov
shrl
movsb
sbb
mov
adc
pop
je
push
or
inc
mov
xor
mov
rolb
adc
pop
int3
aam
rclb
movsl
out
or
das
rorb
data16
cld
xor
int
xor
ret
xchg
cld
add
mov
call
addr16
jo
hlt
insl
loopne
call
fsub
test
arpl
fcoms
dec
sbb
sbb
inc
push
dec
es
push
cmp
adc
bound
lods
or
fs
ja
inc
mov
arpl
add
mov
imul
add
mov
lret
fisubs
add
out
mov
out
sbb
inc
and
lods
pop
xor
add
sub
xor
popa
addr16
aad
mov
imul
mov
gs
mov
inc
xchg
shll
rorl
nop
sub
dec
lock
dec
mov
adc
mov
scas
gs
inc
fwait
mov
in
xor
ja
ss
stos
lods
jl
dec
jns
jnp
xor
je
out
mov
push
push
lret
fisubrs
js
pusha
lret
mov
arpl
sbb
dec
dec
push
sub
add
mov
sahf
push
out
dec
push
hlt
and
pop
lock
repnz
inc
sarl
adc
imul
lock
pop
add
movsb
sbb
adc
fwait
pop
sbb
add
bound
mov
dec
inc
push
inc
repz
hlt
xchg
loope
mov
mov
adc
pop
or
adc
dec
xchg
mov
push
push
lret
mov
insb
jle
jle
in
jge
mov
jmp
fsubrl
push
lock
cmp
sbb
add
ljmp
sbb
hlt
int
ss
cmp
mov
rorb
ss
pushf
test
inc
push
or
lcall
or
sbb
or
insb
in
orb
mov
sbb
aam
push
fmuls
mov
add
fiadds
pusha
icebp
pop
add
mov
jge
inc
lock
jl
xchg
sti
cmp
xchg
shrb
push
es
repz
cmp
xor
out
ljmp
xor
cmpsb
sbb
mov
inc
add
je
in
orl
and
lret
out
fldt
les
cmpsb
cmp
and
aad
fisttpll
out
jle
push
and
add
pop
inc
arpl
inc
add
lret
add
dec
xchg
aaa
hlt
jb
mov
mov
test
pushf
stos
inc
xor
imul
ret
sbb
and
sbb
push
cltd
jno
mov
sub
push
mov
cmp
mov
pop
mov
iret
adc
test
stos
pusha
or
imul
mov
cmp
add
incl
fwait
sarb
dec
into
mov
das
add
pop
cld
add
sub
add
int3
mov
add
mov
cmp
fsubrs
test
push
cld
aad
mov
pop
bnd
mov
mov
cmp
sbb
insl
in
sub
mov
jb
xchg
add
repnz
add
jl
xor
pop
adc
mov
lods
sub
hlt
jecxz
popa
jle
push
sub
mov
and
inc
fwait
inc
inc
test
mov
pop
outsb
lods
ret
adc
test
add
cmpb
aaa
movsb
push
add
fsubr
fdivs
sbb
inc
jp
xor
stos
in
cmp
into
sbb
add
inc
mov
pop
mov
enter
sbb
push
test
push
pop
push
pop
push
dec
pop
scas
fcomps
test
sub
cmp
test
test
mov
mov
jg
add
mov
out
lcall
pop
mov
mov
jo
jge
xchg
inc
fcmovu
dec
inc
hlt
jb
jo
cmp
data16
aam
dec
jl
xchg
mov
jp
jmp
scas
or
pop
xor
mov
nop
gs
lods
dec
clc
ss
sub
insl
cmpsb
movb
add
test
dec
dec
in
js
push
int
push
or
cmp
and
fists
xor
xchg
sbb
and
push
lock
mov
mov
pop
jge
or
adc
call
mov
fnstcw
out
mov
sbb
call
inc
mov
dec
sub
pop
incb
sysret
cmp
jle
loopne
shlb
lds
xor
xor
gs
aaa
or
push
sbb
icebp
fdivs
fdivl
je
or
scas
or
push
std
loopne
lcall
ljmp
es
cmp
push
xor
dec
push
shl
and
jbe
add
sbb
mov
mov
xor
leave
add
sti
and
add
test
cli
loop
jl
mov
inc
inc
xchg
add
mov
icebp
dec
js
add
cmp
insl
ja
sbb
inc
push
xchg
inc
sbb
jmp
jp
cs
mov
loop
fs
push
insl
xchg
rcrl
arpl
data16
dec
xchg
je
jae
adc
and
pop
xor
shlb
sarb
jnp
inc
jle
out
dec
and
popa
mov
mov
fidivl
cmp
inc
inc
sbb
call
pusha
push
dec
repnz
push
fstps
xchg
sub
xchg
rcl
push
push
add
jge
cmp
lret
int3
ret
mov
add
lock
jb
pop
fs
push
pop
xchg
jecxz
std
push
mov
addl
das
lock
test
mov
and
cltd
cmpsb
leave
sub
icebp
sahf
nop
loop
cmpl
testb
clc
rclb
inc
push
push
sub
inc
cld
stos
aad
inc
roll
pop
add
add
cmp
push
pop
or
jge
js
mov
mov
push
mull
rol
jb
movl
loope
mov
cld
xor
pop
popf
cmpsb
pop
jg
sbb
roll
xor
ret
sub
and
mov
dec
pusha
cmp
aas
outsl
jp
into
loopne
push
and
popa
lock
std
sbbl
mov
dec
jno
shl
inc
fwait
loop
lock
mov
out
ret
and
popf
pop
mov
jbe
jecxz
mov
fisttps
mov
dec
jns
movsbl
out
pusha
lock
cld
enter
in
cmp
imul
push
pushf
cmp
in
jecxz
test
mov
gs
mov
mov
add
inc
xchg
cmp
aaa
rclb
dec
xor
orb
jae
xchg
inc
add
add
or
ret
fcomps
push
rcrl
mov
pop
jge
and
cmp
jge
dec
cltd
loope
xchg
sbb
xlat
jo
dec
pop
sti
push
in
stos
mov
inc
das
mov
divb
adc
pop
sbb
or
cld
loop
test
inc
jle
fcomip
sbb
add
orl
adc
andl
lahf
out
test
in
test
xor
testl
xchg
loope
mov
mov
and
add
add
loopne
setle
pop
push
in
outsb
pushf
or
nop
dec
jo
aam
mov
ds
dec
jb
in
dec
dec
dec
jo
js
andb
fdivrl
aaa
sub
loopne
push
xlat
or
repnz
xchg
pop
sahf
in
ds
cmp
pop
or
loopne
pop
jg
lock
cli
inc
mov
inc
hlt
push
cmp
mov
cld
or
pop
jge
sbb
adc
sbb
lds
subl
add
push
das
mov
popa
or
lock
pop
mov
jp
and
pcmpeqb
lahf
inc
xchg
jmp
icebp
dec
ljmp
dec
push
outsl
add
sub
push
fnstsw
mov
outsb
push
adc
test
in
mov
mov
sbb
jle
xor
xbegin
imul
sahf
push
xor
jo
lahf
aaa
arpl
stc
xor
mov
pop
gs
pushf
or
or
cld
mull
add
movnti
lock
cli
pop
sbb
mov
lods
mov
rcr
cmp
pop
add
add
add
mov
sahf
or
ret
jnp
test
mov
dec
cld
movsb
mov
sbb
inc
add
ret
lock
sbb
cld
xor
scas
lock
push
sbb
fldl
mov
filds
sbb
cmp
jb
cmp
aas
pop
cmp
lds
xor
repz
xchg
dec
dec
jb
dec
clc
and
jb
call
jne
push
cmp
and
sbb
or
fisttps
scas
adc
xlat
add
aad
sbb
enter
sbb
inc
mov
lock
lds
push
rolb
pop
or
mov
adc
sbb
outsb
push
stos
xor
pop
mov
pop
xchg
into
push
cmp
inc
js
and
mov
scas
jno
add
xchg
cli
xchg
mov
add
insl
ds
mov
pop
popf
cli
mov
jle
outsl
ja
adc
pop
js
or
pop
es
dec
jno
cmc
or
xor
cmp
sbb
xor
gs
pop
in
ret
adc
hlt
mov
add
pop
je
add
js
dec
out
or
sub
mov
mov
dec
ret
push
mov
xchg
push
xchg
inc
lds
out
add
mov
lods
or
mov
sbb
jge
in
cmpsb
push
xor
sbb
dec
and
inc
jo
clc
int3
add
das
sbb
mov
mov
xchg
ficomps
je
xor
in
or
sahf
sbb
dec
in
sbb
push
outsl
inc
aad
lock
roll
adc
mov
push
stos
jb
pop
xor
adc
dec
movsl
xchg
mov
mov
ss
xchg
jp
lods
adcb
sahf
in
push
enter
stos
sahf
push
shll
adc
movl
and
mov
mov
mov
inc
fstpt
inc
pop
sbb
push
and
cli
in
jmp
xchg
ror
clc
pop
insl
cld
dec
cmpsb
test
dec
sbb
jo
cmc
mov
push
sub
fstpl
aam
clc
cli
hlt
mov
sub
xor
adc
lock
push
fisttps
add
pop
popf
adc
roll
daa
pushf
mov
fiaddl
pop
jecxz
sbb
push
jns
xchg
mov
dec
add
inc
mov
xchg
add
add
icebp
sbb
adcl
xchg
dec
mov
jo
aad
mov
pop
icebp
repnz
adc
sub
sbb
jg
daa
jle
dec
xchg
cwtl
add
pop
sbb
adc
popf
aas
lock
sbb
xchg
mov
pusha
jmp
ss
sub
inc
scas
jo
cli
adcb
xchg
scas
push
and
outsb
mov
dec
les
int3
or
dec
iret
or
adc
add
mov
mov
xchg
mov
sub
mov
pop
outsb
rolb
mov
inc
cmp
mov
xchg
mov
lea
rcrb
dec
jo
fstpl
and
mov
adc
loopne
mov
int
cwtl
push
sbb
pop
adc
in
push
cmp
icebp
xchg
pop
add
and
mov
pop
add
push
push
ja
into
mov
fs
insl
push
daa
pusha
push
sub
push
mov
shrl
mov
dec
dec
adc
inc
lds
and
jb
stos
and
jle
int
dec
mov
std
adc
add
out
adc
dec
in
lret
ret
mov
loopne
adc
out
ficoms
and
jb
orl
call
sub
or
xor
mov
dec
movsb
dec
dec
subb
dec
inc
adc
push
sbb
aad
dec
movsl
xorb
movsb
dec
dec
mov
fucomi
dec
sbb
add
dec
in
sbb
mov
adc
dec
jo
jo
xchg
loopne
cmp
sbb
cmp
fcomps
sbb
dec
clc
test
cmp
repnz
pop
push
enter
movsb
and
xchg
pop
adc
sub
test
cmc
push
incb
les
xor
adc
or
jle
sbbb
test
les
xchg
addb
bound
add
add
mov
insl
push
nop
add
js
mov
test
cmp
test
roll
or
mov
gs
add
mov
sub
sbbl
and
inc
lods
aam
adc
clc
xor
add
push
add
jno
pop
popa
mov
pop
sub
mov
dec
mov
fmull
fists
fsubrs
xor
add
or
sahf
scas
loopne
sti
adc
xchg
pop
push
adc
sahf
fcmovnu
adc
sbb
push
popf
add
or
inc
lahf
add
dec
jle
mov
leave
and
cmp
dec
hlt
jp
adc
pop
push
invd
call
mov
xchg
xorb
sbb
aaa
ret
dec
add
mov
fimull
jbe
pop
icebp
jae,pt
cmp
outsl
adc
add
enter
cltd
push
lock
lods
les
push
lock
dec
in
add
add
adc
mov
dec
lods
lock
outsb
adc
ret
push
and
or
les
clc
je
lock
lock
and
xchg
sahf
pop
dec
fsubr
je
out
test
outsl
jne
rorb
cmovno
push
out
ljmp
inc
xor
xor
and
xor
out
jle
push
orl
xchg
scas
jno
pop
test
cs
ret
imul
mov
push
lret
cld
sub
scas
stc
lock
pop
insb
icebp
dec
inc
fwait
jnp
or
jmp
add
jo
loopne
jb
jecxz
jge
inc
insb
cli
dec
fadd
mov
pop
loop
rcrb
int
sub
loop
into
xchg
movsl
test
fs
rclb
mov
mov
sti
push
jl
pusha
jg
pop
mov
fiadds
out
and
stos
das
pop
cltd
add
mov
lock
dec
stos
add
outsl
mov
cmp
jno
wrmsr
rcrb
xor
dec
jnp
jbe
xchg
add
add
fucomp
cmp
sbb
sbb
inc
out
sarl
stos
push
shll
or
shlb
lea
xchg
xchg
call
xchg
mov
pop
mov
push
sbb
int
adc
cmp
imul
movsl
movb
loop
stos
adc
dec
dec
iret
adc
push
fsubs
arpl
leave
enter
inc
dec
hlt
add
cli
push
mov
fdivs
adc
or
out
add
pop
pop
jge
add
adc
cld
ss
xchg
xchg
in
mov
aad
or
sbb
cwtl
test
mov
and
jmp
insb
push
shl
mov
shlb
ds
adc
fsubrl
add
pop
lcall
sahf
xchg
inc
pushf
icebp
cmp
jb
add
popf
or
mov
sbb
std
cmp
jmp
fsubp
das
sub
xchg
sbb
mov
loopne
cld
shl
cltd
xor
inc
adc
xor
mov
hlt
or
insb
push
loop
adc
jmp
pop
sbb
mov
xor
mov
sbbl
addb
pop
mov
add
sbb
adc
xchg
pop
inc
pusha
sbb
ret
jmp
inc
adc
arpl
lret
mov
mov
gs
aaa
rorb
push
int3
out
add
pop
cli
aad
dec
in
icebp
adc
lods
mov
in
add
cmp
testl
sbb
push
sbb
sbb
in
int
out
sbb
or
or
xchg
shl
loope
add
loop
or
push
test
jbe
arpl
mov
ret
repnz
rcrb
pushf
jbe
addb
mov
mov
loopne
sbb
int3
lods
psadbw
adc
ja
push
mov
pop
push
cmp
mov
jae
pop
pop
adc
push
pop
mov
lret
scas
mov
add
inc
push
sub
or
je
and
jmp
pusha
xor
mov
cmp
sub
sub
ljmp
inc
fdivs
pop
pusha
add
push
xlat
mov
or
push
inc
jecxz
add
adc
sub
fdivp
and
imul
aad
xor
jne
dec
cmp
dec
hlt
cmpsl
mov
pop
pushf
ds
ss
popa
cmpsl
inc
call
ss
sbbl
in
mov
mov
mov
fisttps
imul
les
pop
xchg
push
xchg
push
nop
jmp
sbb
lea
sahf
mov
mov
enter
fwait
shl
or
subb
in
cmp
jmp
mov
jo
inc
sbb
out
cmpl
das
push
int
add
pop
lods
icebp
push
pop
inc
sub
add
sub
test
and
push
mov
and
shrb
add
jle
push
push
push
xor
data16
sbb
fimuls
jge
inc
test
movsb
popf
add
inc
pop
or
xchg
jl
outsl
cmp
sbb
jb
sbb
jecxz
mov
push
adcb
in
daa
adc
add
sbb
data16
lock
mov
pop
out
fmuls
xchg
add
rolb
add
ja
test
mov
lret
adc
cmpsb
lock
adc
pushf
add
sbbl
nop
jne
push
mov
mov
rorl
icebp
and
pushf
in
sarb
mov
je
push
pop
inc
add
pop
push
adc
pusha
repz
mov
sbbl
mov
dec
dec
mov
xchg
mov
scas
std
fiadds
sbb
lods
les
sub
push
sbb
xorb
mov
push
aam
ss
loopne
xor
add
mov
incl
call
mov
sbb
add
push
lcall
rolb
dec
mov
fsub
add
sbb
test
je
mov
test
jb
and
call
inc
imul
sar
lods
mov
pop
jge
push
and
in
pop
hlt
sub
mov
jb
int3
notl
or
stos
lock
push
mov
push
dec
push
cli
dec
pop
xchg
out
stos
jno
in
jle
push
mov
sbb
fldenv
jp
mov
cld
ret
xorl
xchg
push
jne
dec
push
mov
jp
je
in
lret
pop
sbb
das
iret
pop
add
lods
mov
jns
daa
aas
rorb
ret
cmp
cwtl
mov
xor
fsubrl
inc
dec
xor
pusha
into
sbb
adc
dec
clc
icebp
xor
idivb
xor
in
push
pusha
jmp
inc
jge
xor
push
pop
outsl
lods
or
xchg
iret
lea
cs
loop
mov
add
cmpb
iret
sub
dec
loope
pop
xor
test
mov
or
fidivl
pop
and
sbb
or
enter
adc
cwtl
jb
gs
dec
push
add
fsubrs
jl
push
cmp
mov
shrd
adc
movsb
dec
pop
lock
decl
mov
or
push
mov
arpl
or
xchg
clc
lds
add
adc
repz
sub
js
sbb
xchg
jae
clc
jecxz
lock
ljmp
push
xchg
pop
jne
loopne
inc
cmp
dec
push
cld
xchg
arpl
mov
rcll
xor
xchg
sbb
call
lock
sbb
sbb
inc
dec
mov
or
mov
xor
jg,pt
out
movsl
adc
cmp
add
mov
or
lock
rcl
xlat
sar
inc
inc
lods
lret
pushf
das
pop
hlt
push
enter
cmp
push
loope
adc
sub
das
push
mov
xor
or
jle
adc
push
cmpsl
jo
in
xchg
repnz
and
add
adc
loopne
or
cli
sbb
cltd
and
pop
sarb
outsb
push
sub
sub
test
adcb
ljmp
adcl
pop
mov
aaa
sub
push
dec
shrb
xchg
nop
pusha
dec
pop
adc
out
and
push
mov
pop
dec
lock
das
adc
test
insb
pop
cmp
cmpsb
bound
mov
sbb
cmp
add
jmp
jo
add
or
test
add
daa
out
ja
and
xchg
and
int3
or
mov
data16
jne
sub
sub
lods
add
mov
sbb
jo
dec
loopne
add
sbb
nop
cmpsb
mov
pop
hlt
and
out
in
or
leave
jno
adc
leave
inc
xchg
cs
push
lock
push
mov
pop
pop
lods
fcmovu
mov
add
cld
arpl
jbe
push
nop
pop
pop
ret
test
lock
dec
adc
test
pavgb
fsub
cmp
icebp
sub
insl
fisubrl
test
xor
js
div
push
enter
add
xchg
shll
add
js
test
sub
loope
sbb
fmull
rcl
ds
add
ds
push
scas
push
jo
clc
jne
mov
pop
aad
xchg
lock
test
sub
mov
push
push
mov
test
jns
add
incl
inc
pop
push
mov
out
jno
or
mov
into
push
xchg
pop
add
aaa
fcomps
xchg
lds
ror
mov
or
or
mov
sbb
in
lret
mov
lret
sub
push
push
stos
jp
adc
daa
xor
inc
push
xor
movsl
jb
jns
jae
lds
pop
dec
xchg
ret
mov
add
shll
cld
mov
shl
call
sbb
mov
push
mov
adc
mov
jno
pop
fsubrs
mov
mov
mov
add
mov
sub
mov
es
push
jae
and
mov
insb
sbb
inc
mov
lock
lret
mov
adc
cmp
fdivrs
loop
mov
into
inc
insb
mov
std
mov
pop
pop
dec
addl
out
lret
sti
add
or
adc
sub
add
cmp
rcll
pop
xorl
push
fcoml
sahf
add
jmp
clc
adc
add
ds
scas
bound
fldt
dec
pop
cwtl
ficompl
cmp
push
jne
push
cmp
std
sub
inc
adc
int3
pop
int3
repz
fadds
xchg
push
mov
test
stos
in
popf
rcrl
lock
pushf
sbb
inc
sub
clc
cmp
stos
call
mov
sub
inc
jl
xor
imul
ret
insl
jl
fisttpl
jb
flds
loopne
test
lret
pop
incl
mov
pusha
inc
pop
rcll
fildl
fiadds
pop
mov
cmp
jae
enter
ds
mov
inc
pusha
inc
inc
nop
nop
push
fisttpll
rolb
inc
or
rolb
pop
cmp
cltd
push
cmp
cmp
test
repz
lahf
add
mov
mov
cmp
add
jbe
inc
stc
mov
call
stos
cmp
scas
jmp
push
hlt
sub
clc
adcb
add
mov
adc
into
mov
sbb
jle
iret
lret
inc
inc
cmp
cmp
and
dec
or
out
pop
pop
sbb
mov
and
push
fmul
mov
mov
rcrb
inc
xchg
pop
pop
push
inc
es
lods
daa
inc
sbb
dec
loopne
jecxz
sub
add
add
lret
cmp
adc
xchg
mov
shlb
add
js
pop
and
mov
xchg
xor
insb
lahf
ret
push
jb
rclb
popf
xorb
inc
lret
add
xlat
pop
mov
data16
fiaddl
add
mov
sbb
inc
cmp
es
out
xchg
pusha
add
xchg
cmp
mov
cmp
fnstcw
fistps
adc
jle
js
scas
rorb
xor
xor
adc
mov
repnz
xlat
mov
adc
dec
add
or
or
mov
arpl
jae
mov
rcll
cmp
cmpl
roll
lods
flds
sub
xor
xor
adc
sbb
lods
sbb
lret
das
push
lock
and
mov
push
out
pop
push
out
mov
sbb
pop
fwait
out
cld
add
ja
mov
inc
jl
add
mov
fldcw
sbb
mov
pop
pop
push
sbb
jg
lock
imul
jnp
mov
enter
roll
stos
mov
pop
mov
lock
rcl
sub
hlt
mov
add
sahf
add
imul
adc
shlb
xor
fsubs
add
cmpsl
mov
out
pusha
data16
imul
push
hlt
movsb
aam
sbb
ret
sbb
out
cmp
loopne
add
add
sbb
pop
mov
nop
add
nop
or
js
shl
adc
and
mulb
mov
dec
fadds
and
and
scas
test
push
ljmp
add
ss
repz
xor
jmp
adc
jge
inc
data16
inc
icebp
or
mov
arpl
loope
pop
pop
es
xchg
add
pop
cmp
mov
test
je
cmp
adc
sub
add
iret
push
and
sub
pop
es
inc
movsb
or
gs
mov
lock
out
sbb
cmp
xchg
fistpll
out
jns
daa
divl
pop
mov
add
push
mov
inc
inc
popa
inc
cld
loopne
cltd
fistpll
bound
shrl
jl
stos
adcl
fs
ret
lea
pop
cmpsl
mov
xchg
and
inc
mov
fsubrp
cwtl
pop
push
and
xchg
call
adc
sbb
iret
push
push
pop
mov
shrb
push
or
sbb
pusha
test
js
jl
out
mov
jge
jnp
mov
lock
sarl
sub
add
test
jae
rcrl
sub
inc
movsl
aaa
aad
dec
add
or
test
xor
pushf
hlt
inc
mov
int3
push
add
rcl
push
inc
loopne
pushf
cwtl
outsb
inc
sub
push
xchg
mov
push
rol
jb
jl
push
xchg
jge
ss
dec
add
cli
lcall
mov
mov
movsb
shlb
jp
fmuls
insb
lock
fmulp
icebp
sahf
in
faddl
ds
imul
inc
cltd
imul
pop
iret
sub
mov
jns
jg
adc
push
rcr
lock
or
hlt
mov
jo
push
shlb
out
sub
in
mov
pop
and
add
loope
mov
xchg
fs
loope
adc
cmp
sahf
xchg
mov
popf
sbb
push
add
xchg
pop
jb
rcr
mov
loop
lahf
cmpl
push
ffreep
adc
add
fistps
test
lret
sbb
inc
mul
shlb
loopne
dec
inc
jecxz
mov
popa
lock
xchg
setns
call
movsb
push
aas
mov
call
add
mov
js
scas
enter
pop
jo
or
dec
adc
xor
pop
insb
imul
xchg
leave
sub
jge
lret
lahf
mov
mov
lea
or
and
adc
inc
push
stc
scas
adc
divl
icebp
or
xlat
ds
push
out
xor
pavgb
or
add
mov
mov
sbb
jmp
adc
fstp
rcr
inc
pop
sbb
adc
pop
mov
in
sub
push
fisubl
in
push
dec
dec
mov
daa
xor
jle
sbb
mov
jae
add
sbb
jg
jnp
push
jne
sbb
cmp
stos
inc
sbb
xor
aad
aaa
movl
in
in
icebp
addl
push
mov
dec
ss
loop
ja
dec
rcrb
scas
aaa
stos
pop
xchg
xchg
clc
ret
ja
imul
fwait
mov
pop
lahf
xor
loope
pushf
xor
cmp
repz
das
mov
pop
stos
mov
xorb
pusha
enter
jmp
fadd
sbb
sbb
loope
dec
sub
repz
pusha
cmp
cmp
fcmovbe
mov
es
jmp
mov
and
push
leave
fsts
test
std
hlt
push
dec
test
xor
pop
add
xor
inc
pushf
add
loopne
leave
inc
test
fsubl
jmp
pusha
sbb
add
js
sub
xchg
or
icebp
shlb
mov
inc
mov
sub
pop
sub
imul
imul
fdivrs
ret
std
sbb
jns
or
inc
xchg
int3
mov
fstpl
pusha
cltd
pop
dec
out
xor
sub
xchg
jo
pop
inc
shl
pop
ret
js
stos
sbb
daa
add
mov
xor
push
insl
mov
hlt
add
inc
inc
xchg
xchg
out
sub
fbld
push
push
hlt
push
rclb
imul
bound
push
adc
pop
add
out
adcb
mov
adc
test
das
dec
mov
lock
jmp
loopne
jae
fcomp
outsb
mov
call
jbe
test
outsb
sahf
mov
push
mov
cltd
rcll
push
lock
clc
cld
xchg
hlt
cmp
push
add
popa
pop
or
add
cmp
in
dec
dec
mov
shlb
cld
std
call
lods
sar
cld
in
dec
gs
mov
rolb
fisubs
lock
cmp
pop
mov
sbb
adc
and
xor
adc
cmc
xor
xor
mov
fucomip
pop
add
add
sbb
or
pop
mov
pop
sbb
add
jnp
sbb
push
pop
dec
sbb
jp
push
pop
mov
aam
or
ja
adc
or
push
cmp
repz
or
jae
cmp
jecxz
adc
cmc
loopne
or
ss
imul
rclb
add
sub
mov
cltd
mov
lods
ficompl
xor
pushf
add
mov
lock
or
sbb
push
or
sti
insb
movsb
add
pop
inc
faddp
rcll
dec
push
out
jno
rdpmc
out
jnp
sbb
insl
sbb
leave
push
scas
pop
repz
xlat
loopne
push
sub
gs
sbb
and
out
push
cmpb
mov
cmpsl
mov
insl
inc
jle
sbb
mov
fsubrs
addb
mov
mov
jecxz
pushf
aam
jl
mov
mov
shlb
lock
and
ljmp
jae
adc
and
pop
js
pop
out
insb
mov
mul
pusha
add
dec
cltd
cs
scas
nop
rcrl
inc
mov
fldcw
pop
bound
and
shr
fnsave
mov
and
mov
out
imul
sub
cwtl
pop
jle
pop
andb
stos
push
or
adc
sbb
push
xor
rol
sbb
add
ds
and
cmp
rol
lret
iret
aaa
xchg
mov
push
adc
aaa
sub
divb
fnstcw
pop
fcmovbe
int3
xchg
adc
xor
inc
mov
fsqrt
aam
push
loope
jo
inc
cld
dec
add
stc
subb
icebp
pop
dec
ds
sbb
jecxz
xchg
je
mov
push
lock
loopne
jp
addl
inc
xchg
cmc
std
xchg
lds
shl
daa
mov
test
lods
test
clc
inc
push
inc
add
xchg
xchg
jnp
mov
clc
push
xchg
aaa
sahf
les
pusha
sub
add
test
inc
push
xchg
sbb
jle
jl
xchg
add
mov
clc
cwtl
adc
push
out
shr
sub
and
cmp
xchg
pop
dec
lods
adc
clc
das
leave
adc
inc
cltd
fstps
mov
rolb
xchg
mov
adc
jecxz
rolb
in
jge
ffree
and
inc
inc
jle
pop
lock
fldt
sbb
sbb
call
notb
fiadds
sbb
jo
int
mov
xchg
aaa
js
cmovnp
bound
pop
add
mov
mov
loopne
add
cmp
cmp
js
xor
rolb
mov
aaa
mov
pop
pop
call
and
jbe
jo
add
orb
push
sbb
xchg
in
out
xlat
inc
sub
test
les
jmp
shrl
xchg
nop
xchg
test
add
shll
cmp
fs
push
outsl
in
sbbl
sti
out
hlt
in
sbb
icebp
xchg
xor
cmp
inc
cld
mov
mov
cmpl
mov
js
dec
or
sbb
test
jmp
pop
ret
adc
jge
repz
and
add
and
add
add
in
loope
pop
ret
inc
mov
test
push
and
cli
lods
sbb
add
add
cmpsl
or
push
insl
cmpsl
and
mov
dec
addb
mov
fisttpll
xchg
inc
and
jo
cltd
loopne
cmpsb
out
jne
lods
loopne
xchg
adc
mov
mov
lds
nop
sbb
xchg
dec
test
pop
fldl
dec
icebp
jecxz
jge
ja
fldenv
cmp
enter
or
pusha
dec
xchg
pop
fdivr
mov
mov
sbb
out
cmpsl
sbb
jmp
xor
stc
add
repnz
xchg
add
adc
mov
arpl
jno
push
pop
jle
call
out
jo
cltd
push
or
call
scas
xor
mov
insl
add
xor
mov
popa
dec
shrb
mov
shrl
faddl
mov
xor
xchg
xchg
ret
aad
fstl
mov
jb
xchg
mov
test
lcall
hlt
xor
inc
mov
pop
adc
jnp
add
and
ja
cmp
jns
clc
jmp
lea
xor
mov
enter
sub
stc
loope
popl
movsl
int
movsb
xor
adc
mov
andl
aas
jb
lahf
sbb
mov
es
adc
rcrb
mov
mov
xor
or
das
adc
pop
adc
sub
ret
mov
adc
mov
mov
mov
out
rclb
bound
pop
or
xor
mov
jns
movsl
push
mov
sbb
aam
pop
mov
xchg
pop
subb
or
push
sbb
rorb
jbe
movsb
cmp
loopne
movsb
adc
scas
stos
pop
mov
push
cmp
lock
mov
lods
in
test
pop
push
ss
jp
dec
icebp
arpl
mov
mov
and
daa
cmp
lods
sahf
push
dec
mov
xor
adc
mov
insb
add
and
js
inc
stos
or
and
mov
scas
int
aas
js
xor
jl
dec
js
mov
xchg
pop
fsub
add
cltd
roll
jp
out
lcall
xor
xchg
mov
push
lock
les
bound
es
sbb
or
scas
pop
jno
dec
inc
add
and
cmp
push
sbb
add
mov
int3
adc
sbb
inc
sarb
pusha
cmp
push
mov
push
sub
xor
jp
cmp
hlt
out
pop
jp
into
daa
lret
gs
jmp
mul
repz
hlt
fidivs
enter
imul
jle
clc
xor
add
cmc
xor
xor
adc
setne
ret
daa
add
test
mov
add
cmp
test
cmp
pushf
jae
adc
inc
and
ret
test
cmp
push
or
mov
and
ds
shl
fmuls
pop
pop
mov
push
adc
inc
dec
xor
out
inc
mov
loopne
roll
fidivs
sbb
adc
add
cmp
add
orb
stos
or
add
pop
loopne
sub
fs
lcall
aam
cmp
test
sbb
inc
js
or
sbb
test
bound
int
rclb
add
add
push
imul
mov
fisttpll
lock
imul
sbb
inc
int3
jp
add
scas
test
xor
and
add
js
or
jmp
add
loopne
rclb
inc
and
mov
xchg
out
aam
cmp
aas
push
adc
pop
xor
adc
in
xchg
jo
sbb
jecxz
aas
ret
lods
cmpsl
rorl
mov
cmp
push
xchg
pop
sbb
pop
sbbb
push
jmp
or
sbb
ret
xchg
adc
ljmp
jge
rcrb
pop
inc
sub
or
ljmp
sbbl
repz
cli
inc
push
mov
mov
out
out
pop
xchg
pusha
fcom
fisttpl
pop
and
mov
push
or
imul
or
jns
notl
addr16
sbb
pop
jb
shrl
cmpsb
lock
push
in
dec
inc
jo
imull
sbb
rorb
mov
ror
adc
adc
cmpsb
and
push
and
ja
sub
pop
sub
add
int3
imul
fists
fimuls
bnd
mov
leave
sub
daa
sub
push
xor
sbb
addb
mov
xor
pop
pop
inc
ret
mov
and
out
adc
in
hlt
lret
sub
sub
inc
mov
out
mov
cld
sub
and
sbb
das
add
xor
cs
movb
movsl
rcl
xor
fs
mov
add
repz
jne
mov
ret
adc
add
pushf
push
call
and
adc
jno
adc
mov
push
sub
xchg
pop
mov
xchg
sarl
test
xchg
js
out
pop
loopne
adc
sarb
mov
add
push
shrb
xor
lods
sub
sbb
mov
test
push
mov
mov
xchg
pusha
cli
pop
dec
xorl
hlt
sbb
test
ds
dec
jge
movsl
add
scas
inc
jmp
xlat
inc
mov
dec
jl
mov
mov
lahf
mov
mov
lods
addr16
push
xlat
pop
push
and
mov
sbb
cmp
fsts
idivl
sbb
and
mov
fld
shrl
push
fnstenv
jl
mov
pop
inc
and
or
cmp
movsl
mov
xor
mov
pop
adc
push
jae
jle
jae
les
js
andl
mov
push
addl
xor
xorl
aaa
into
filds
cmp
adc
push
push
xor
xchg
ret
lcall
sbb
jl
sub
fstpt
cltd
inc
int
push
clc
incb
xor
jmp
cmp
pop
push
xchg
lahf
inc
inc
inc
mov
add
loopne
inc
test
push
adc
pop
and
lds
push
mov
fsubrp
cmc
add
outsl
mov
pop
sub
xchg
add
mov
ds
push
loope
sahf
adc
les
sbb
and
mov
cltd
mov
xorl
push
adc
jp
jb
sub
test
pop
cmp
push
data16
addr16
loopne
addl
inc
xor
icebp
dec
or
xchg
add
push
lock
scas
ja
lret
jmp
mov
mov
cli
lock
fs
and
xorb
lcall
mov
mov
or
xchg
dec
cmpsl
imul
aad
repz
sbbl
addb
mov
jbe
ret
in
test
mov
or
mov
lock
sbb
mov
adc
cmp
cmp
mov
jb
adc
adc
shlb
adc
loop
ja
popf
fcomps
push
js
les
push
cmpb
je
add
inc
ficomps
jns
jge
inc
xchg
xchg
fisubrl
fldenv
mov
fs
loopne
adc
adc
push
jle
inc
xchg
js
mov
ljmp
or
xor
add
cld
cmpsb
and
push
add
push
loopne
ljmp
or
orb
mov
push
or
jp
inc
mov
push
pushf
xor
adc
dec
mov
dec
push
xchg
xor
bound
imul
test
jmp
jnp
and
cmp
aaa
push
add
movsb
xchg
test
adc
insb
xor
pop
out
rorl
out
or
cmp
mov
and
rolb
cs
movsl
sub
xchg
sub
inc
jecxz
xchg
les
jecxz
mov
dec
icebp
and
inc
ja
lock
jecxz
aas
dec
popl
push
cmp
mov
fdivl
dec
xor
cwtl
inc
out
dec
inc
and
repnz
add
inc
mov
add
aam
in
jo
pop
mov
inc
add
test
data16
mov
rcrl
cmp
push
push
mov
pop
arpl
xor
sbb
add
add
sbb
js
mov
add
mov
pop
adc
cmp
inc
pop
push
addl
loop
pushf
sbb
xchg
fldl
stos
pop
iret
addr16
test
pop
cmpsb
aad
inc
mov
push
sbb
mov
aaa
test
fwait
dec
js
ljmp
loopne
fcmovb
sti
or
into
iret
add
inc
mov
or
adc
sub
dec
inc
add
jbe
or
jg
lock
mov
mov
movb
ljmp
sbb
cwtl
push
lods
add
lcall
sbb
rcl
adc
popf
sub
xor
dec
jno
jnp
xchg
inc
pop
imul
stc
or
mov
or
prefetchw
push
outsl
or
add
cmp
pop
mov
mov
shl
sahf
add
cmpsb
lea
xor
push
popa
inc
mov
imul
sbb
mov
shrl
lods
pop
js
dec
jmp
leave
das
ja
add
ds
mov
or
dec
dec
dec
aad
in
push
roll
ror
add
and
out
xchg
aam
jno
jecxz
sub
icebp
cmp
jnp
and
loop
adc
cmp
jmpw
inc
sub
push
jo
insb
fs
mov
inc
pop
push
xor
lea
adc
xor
or
xchg
pop
sbb
jp
add
gs
sbb
sub
sbb
add
or
and
push
xor
mov
lock
popa
push
lahf
std
sti
push
popa
mov
stos
mov
ffreep
adc
aad
addb
in
inc
mov
adc
add
scas
add
loope
ret
pop
and
pushf
xchg
pop
adc
lock
subl
pop
rcr
sbb
test
mov
popf
inc
jno
je
jp
insl
adc
cwtl
add
ror
dec
mov
or
xchg
cmp
sahf
cmp
dec
pop
and
or
mov
jmp
shr
push
aaa
stos
xor
bsr
mov
adc
sub
and
or
push
subb
mov
mov
pop
and
pop
ret
xchg
mov
loopne
sub
xor
out
aas
mov
adc
jne
pop
add
pop
jl
into
inc
cmc
cltd
add
hlt
add
test
lcall
shrl
pop
inc
push
xchg
mov
xor
cmpl
divb
je
xor
add
fisttpll
mov
jae
lahf
jo
jnp
mov
cmpsl
adc
dec
cwtl
push
repz
adc
jno
dec
sbb
inc
arpl
and
or
not
rcll
stc
lea
jecxz
lret
les
xor
mov
pop
cltd
mov
inc
es
push
push
mov
mov
jg
shll
adc
negl
jae
lock
inc
inc
aas
andb
jo
ja
xor
sbb
sar
mov
into
adc
sbb
mov
stos
sbb
in
lock
and
adc
insb
jnp
jl
jne
insl
mov
je
push
mov
pop
sbb
test
les
scas
cmp
jb
hlt
aaa
add
push
mov
xor
iret
push
mov
push
xorb
adc
dec
xchg
hlt
fcmove
inc
pop
loop
fsub
mov
sub
cltd
std
or
iret
test
push
push
dec
add
push
rolb
push
xchg
adc
push
out
lods
in
jae
pop
add
adc
inc
mov
cmp
lret
ja
sbb
scas
sbb
pop
dec
or
stos
push
add
fistps
or
or
mov
test
push
inc
insl
adc
mov
adc
inc
mov
icebp
push
test
sbb
xor
shlb
dec
xchg
ret
mov
fistpl
add
int
cwtl
sbb
mov
pusha
lds
adc
repnz
jecxz
test
cwtl
mov
and
lock
mov
pop
jno
insb
mov
cli
jo
cmp
dec
xor
sub
test
test
rcrb
push
sbb
add
mov
xor
mov
insl
ret
cmp
sbb
andl
push
imul
rolb
pop
dec
mov
mov
pop
xlat
pop
add
mov
hlt
push
push
sbb
and
xor
ss
inc
adc
push
sub
sbb
sbb
scas
add
cmp
rorb
dec
pushf
orl
jno
rcrb
add
push
pop
add
insl
orb
xor
mov
fmull
cmp
repnz
imul
ret
cmp
jb
pop
xor
mov
movsl
into
dec
scas
rorb
in
or
or
dec
dec
sbbb
adc
out
into
mov
xchg
push
push
iret
push
mov
test
loope
xor
inc
jmp
mov
mov
pop
lods
inc
and
fisttpll
fdivs
or
pop
test
cli
push
jp
test
popf
les
mov
orb
fiadds
in
lock
add
pop
mov
ret
push
adc
add
clc
or
out
pop
das
insl
bound
pop
sub
xor
dec
fwait
adc
imul
push
lods
shrb
idivb
test
insl
sbb
fmuls
cmp
adc
mov
mov
je
jl
adc
imul
call
fstpt
mov
xor
cmp
call
pop
stos
dec
inc
addb
mov
fistpl
cld
aam
inc
add
add
movsl
mov
insl
xchg
stos
mov
pushf
call
mov
ret
xchg
dec
inc
loope
lret
adc
push
xor
dec
pop
in
or
pop
jo
push
leave
cli
or
xchg
decl
daa
test
or
dec
clc
push
mov
add
sti
aaa
add
jmp
sete
outsl
leave
sbb
dec
jo
adc
pop
adc
jmp
xor
frstor
test
mov
xchg
xor
add
or
push
xor
lahf
lock
ljmp
cmc
pop
adc
mov
movl
addb
add
cmp
das
mov
fidivl
inc
mov
push
daa
xchg
fdiv
push
mov
and
or
cli
add
jae
dec
xchg
lret
push
xor
out
ret
dec
pop
int
mov
push
and
mov
jecxz
stos
adcl
jecxz
out
push
add
call
sbb
pop
sbb
fisttps
and
mov
and
mov
cmp
imul
pushf
add
lea
jne
test
sahf
jmp
sbb
push
jno
lahf
fiadds
test
xlat
push
dec
xchg
cld
jmp
out
ret
iret
sub
lods
out
inc
imul
mov
or
mov
push
add
mov
jmp
push
leave
lods
jbe
sub
in
and
mov
xchg
je
outsb
dec
js
xor
loopne
loopne
xchg
adc
aaa
push
push
cld
mov
push
loopne
cmp
mov
test
and
add
xchg
fnstenv
xchg
add
add
sbb
push
lea
mov
pop
mov
dec
xorl
jl
mov
or
and
leave
cmp
minps
sub
jne
aaa
stos
or
lds
std
call
js
out
std
adc
cmp
popw
movsb
ret
jmp
pop
mull
mov
pushl
adc
stos
cmpsb
mov
shll
test
or
aam
cld
test
insb
push
in
rolb
movsb
inc
insb
vmread
in
cmp
mov
cmpsb
sub
cmp
mov
movaps
cmp
test
jmp
adc
rorb
xor
mov
mov
bound
ss
mov
or
daa
ret
lea
xlat
and
adc
xor
mov
imul
adcl
or
dec
and
push
xor
mov
enter
addl
loop
dec
xchg
out
sbb
and
push
sub
pop
mov
sbb
mov
jb
push
push
jbe
or
add
cmp
xor
sub
hlt
cmp
jbe
bswap
mov
sub
jno
fistps
les
and
xor
adc
iret
inc
rol
and
arpl
add
mov
pushf
inc
mov
stc
dec
dec
dec
es
mov
mov
je
pop
inc
sub
pusha
call
add
fnstenv
xchg
jb
fucomp
xor
fmuls
sahf
cmp
xor
fsubs
rcrb
inc
jb
shrb
jmp
pop
push
push
jp
mov
aad
daa
dec
gs
xor
push
sub
mov
mov
cmp
dec
pushl
data16
rolb
in
repz
leave
fstl
fsubs
jecxz
add
ljmp
sbb
repz
mov
aas
pop
arpl
and
fistps
and
push
cmpsl
rcll
ficomps
add
gs
movsb
mov
adc
std
jbe
xor
cmp
push
pop
add
int3
sub
outsb
pop
jo
scas
mov
push
sahf
shlb
sbb
aam
rcll
cmp
add
cs
ljmp
loope
ljmp
add
repnz
push
add
inc
out
loope
stos
sbbl
xor
fidivl
cmp
lods
mov
dec
xor
scas
outsl
enter
cmp
push
jp
push
fnstenv
andl
outsl
shll
pop
mov
add
sub
push
inc
sbb
das
sbb
adc
test
mov
lods
ficoms
int
ret
push
loop
jo
movsl
adc
mov
cmc
add
lret
sbb
movsb
mov
insb
sbb
or
adc
push
mov
nopl
loop
adc
adc
cmc
or
adc
dec
xchg
jb
cmp
jl
cmpl
xor
mov
add
push
jne
js
mov
stos
lods
stos
add
std
fistpl
sbb
push
pop
add
decl
arpl
faddl
sbb
xchg
pushf
mov
xor
pop
movsl
sbb
call
xchg
rorl
in
in
mov
insb
mov
js
in
pop
popa
dec
pop
push
gs
pop
jg
test
sarb
sub
insl
ficoml
fisttpl
sub
xchg
dec
dec
ds
fs
jl
pop
jmp
and
out
pop
adc
xor
sbb
loope
ja
cmp
icebp
add
in
jb
into
mov
adc
aas
sbb
add
iret
adc
pushf
push
sti
jg
pop
add
push
in
test
and
lods
mov
clc
rcll
pop
hlt
dec
outsb
xlat
rolb
jo
xor
ret
repz
jb
rcrb
xchg
push
fistpl
sbb
jb,pn
mov
cmpl
popf
out
dec
add
cs
push
xor
sub
fs
out
cmpsl
sub
xchg
adc
sbb
lods
add
ret
cmp
js
test
push
in
fwait
cmp
or
sub
das
outsb
xchg
xchg
fisubl
ficoml
dec
into
pop
in
mov
and
hlt
add
test
dec
in
xchg
mov
mov
or
mov
leave
push
les
adc
mov
popf
aam
roll
mov
push
mov
ret
add
dec
out
lock
leave
movsl
xchg
dec
lods
dec
adc
inc
xor
sbb
test
nop
mov
pop
lods
xchg
lods
jbe
fbstp
aaa
push
sub
or
cmp
mov
or
enter
insl
sub
push
bound
popf
mov
or
mov
mov
cmpb
loop
les
xchg
fbstp
mov
or
dec
scas
aam
addb
jne
push
inc
pop
ret
sub
loop
cmp
jns
sbb
out
xchg
xchg
imul
add
or
popa
and
inc
dec
popa
stos
lods
rorb
cwtl
in
popf
outsl
mov
jg
sbb
fs
add
xor
lcall
clc
inc
mov
clc
xor
addr16
dec
movsb
xor
or
dec
gs
out
inc
fdivs
inc
xor
push
push
mov
hlt
adc
push
mov
loope
sbb
mov
shrb
shrl
fdivrl
fucomp
pop
jle
fsubs
cld
sbb
jmp
jo
fsubl
jg
lds
and
mov
push
mov
std
adcl
sbb
sar
int3
cmp
js
or
jmp
sbb
adc
cmp
and
cmp
lods
adc
sub
xchg
cmpsb
adc
std
lcall
inc
es
xchg
jbe
pop
fstpl
scas
mov
mov
dec
add
dec
push
inc
aam
pusha
aam
das
cmp
les
mov
xchg
jo
pop
sbb
add
push
mov
adc
out
mov
jno
or
sub
xor
les
mov
inc
stos
pop
mulb
jmp
pop
or
rorb
dec
jne
mov
pop
cmp
sbb
in
lea
insb
and
lret
push
fcomps
aaa
push
push
cmp
mov
nop
dec
rclb
pusha
loop
dec
int
pop
add
xchg
dec
cmpsb
mov
js
push
inc
push
sbb
mov
movsl
dec
mov
mov
pop
add
fdivr
pop
mov
xor
mov
mov
nop
dec
aaa
test
test
add
jb
pop
dec
loop
sub
inc
popf
or
or
cmovo
xor
add
loopne
out
mov
cmpsl
jmp
mov
sbb
mov
outsb
jbe
add
pop
add
nop
mov
sbb
add
out
and
add
ret
push
add
call
or
or
add
popf
popf
dec
xchg
pop
enter
inc
xchg
push
stos
movsl
or
adc
push
jle
xor
adc
cmp
mov
or
clc
dec
and
dec
mov
or
out
mov
call
rorb
jb
mov
aam
sub
and
mov
vmread
sub
mov
add
mov
cmpl
mov
or
lcall
push
stos
mov
add
xchg
xchg
fiadds
int3
out
hlt
ljmp
sbb
daa
add
int3
add
out
ja
mov
jbe
rol
fcoml
pop
cld
add
pop
js
popa
cld
lods
cmp
enter
xchg
outsb
pop
inc
mov
mov
jecxz
dec
jb
pop
rcrb
filds
fsin
add
pop
add
call
or
add
cmpb
add
jnp
xor
sub
mov
les
fcompl
inc
mov
inc
sbb
cmp
pop
jne
jecxz
mov
int
in
fcoml
mov
nop
push
dec
sub
sbb
or
cwtl
lcall
enter
dec
bound
dec
xchg
cld
popf
fsubrl
popa
and
dec
sub
pop
cmpsb
cmp
mov
inc
add
mov
and
jo
fstl
cmp
in
mov
push
negl
or
push
add
js
loopne
mov
push
in
loopne
inc
xor
fistl
adc
sub
je
sub
and
xor
xlat
test
cwtl
push
adc
or
dec
or
ds
loop
add
adc
shrb
subl
jmp
mov
xchg
mov
leave
or
loop
dec
ja
lret
cmp
cld
movsl
and
pusha
sub
mov
ret
push
mov
jno
aaa
mov
arpl
xchg
lock
test
icebp
mov
sub
test
icebp
add
movsb
into
shl
push
loopne
push
mov
xchg
add
add
sahf
in
pop
inc
inc
pushf
or
repz
in
mov
push
imul
inc
dec
fistps
push
jbe
pop
cmp
jg
dec
dec
add
rorb
insl
in
insl
cmp
and
push
lsl
push
mov
dec
sbb
popa
dec
inc
scas
jecxz
cwtl
adc
imulb
mov
jecxz
divb
fsubrl
pop
add
jle
jge
xchg
shll
and
push
call
ret
inc
mov
xor
insl
imul
addl
sub
push
xchg
shrl
xchg
fbld
mov
sbb
pushf
bound
imul
add
push
outsl
pop
mov
insb
nop
stc
xchg
jno
inc
clts
outsb
insl
jb
loope
jge
inc
rcrb
outsb
inc
cli
gs
mov
insl
fsub
hlt
test
gs
cs
sbb
sbb
aad
sub
test
mov
pop
ja
adcb
aad
mov
xorl
and
imul
add
imul
xor
add
iret
xchg
stc
dec
pop
cmpsb
lock
mov
xchg
into
mov
add
cmp
xchg
push
icebp
add
pop
js
cltd
pop
ficomps
in
mov
shll
inc
repz
sub
in
pushf
daa
xchg
xlat
enter
sti
enter
mov
mov
push
xchg
or
sbb
cmp
addl
scas
or
iret
jle
imul
arpl
mov
out
adc
js
lahf
push
leave
popf
dec
jo
jbe
xchg
imul
rorb
push
aaa
popa
sub
inc
call
xchg
mov
nop
out
jo
enter
jl
lret
mov
push
stos
xchg
add
pop
add
add
mov
loop
testl
loopne
pop
enter
lret
xchg
push
punpcklbw
ja
cwtl
lds
in
push
fsubl
rorb
daa
mov
sbb
fwait
push
and
cmp
mov
js
mov
jl
and
ss
cmp
pop
add
icebp
mov
mov
stc
lock
add
es
sbb
mov
in
test
xorb
mov
dec
sbb
adcb
movsb
and
rorb
out
popf
roll
or
pop
shrb
add
xor
inc
rcl
jge
mov
push
inc
xorl
fnsave
out
repnz
cmp
add
mov
out
rol
scas
xchg
movsl
add
aaa
lods
ljmp
and
ds
aam
movsl
sarl
cmc
push
sbb
push
pop
ds
add
xor
pop
lret
push
outsl
dec
imul
popf
add
test
dec
xor
add
jo
xor
jmp
or
adcb
aaa
filds
add
lea
jecxz
sub
sti
add
insb
cmp
aam
dec
add
push
push
adc
lock
and
mov
movsb
jl
dec
jb
jnp
sub
mov
xor
xchg
sub
aam
pop
mull
pop
dec
mov
scas
adc
es
push
push
mov
or
add
data16
add
addr16
xchg
xor
pop
add
pop
push
loopne
fsubrs
inc
std
inc
dec
adcl
and
test
enter
and
adc
clc
and
lret
xchg
aam
ficoms
rolb
pop
add
es
outsb
and
sti
inc
int3
andl
push
cmpsb
movsb
ret
dec
test
lds
cltd
inc
jmp
inc
xchg
shlb
fidivrs
test
inc
dec
movsb
mov
int3
sbb
adcb
fistpl
jno
mov
mov
and
sub
sub
out
jge
xor
pop
dec
ret
dec
pusha
lock
mov
pop
clc
sbb
add
ss
mov
incb
ret
cmp
inc
imul
aad
xor
pop
jp
popf
xor
ljmp
pop
lret
sbb
sub
mov
outsl
ret
add
dec
jl
shlb
dec
push
mov
cmp
lods
jbe
lock
mov
xor
aad
adc
iret
sub
rolb
push
cmp
mov
imul
pop
jmp
add
jle
lahf
jle
lret
shll
call
jo
cmp
shll
jl
ret
rorb
jno
sub
jmp
int3
jo
pop
fst
xchg
mov
mov
jns
xchg
frstor
in
push
pop
imul
xchg
mov
pop
cmp
push
mov
les
dec
sub
mov
call
mov
lret
pop
faddl
insl
dec
pop
bswap
cmp
add
xor
cmp
les
xchg
push
test
in
mov
push
push
add
mov
mov
push
movsb
sbb
xchg
mov
mov
ss
lret
sbb
lcall
cmp
cmp
mov
ret
fcompl
inc
or
adc
add
push
test
dec
je
bound
mov
xchg
xor
pop
cli
add
jno
es
addl
sub
dec
jge
sub
cmpsl
inc
adcb
cwtl
std
push
jmp
mull
pop
ret
mov
movb
dec
inc
add
dec
mull
loopne
push
in
not
adc
sbb
stc
repz
xacquire
mov
mov
ljmp
or
sbb
add
inc
jmp
add
stos
repnz
or
add
lcall
add
icebp
mov
and
rcrb
das
cmp
movsl
lock
or
push
add
test
jg
fcomps
inc
les
pop
loope
lcall
fimuls
sub
mov
fmull
jmp
jle
add
lock
ret
fistps
inc
clc
mov
add
mov
dec
repz
or
jne
sub
cmp
or
jmp
mov
aaa
loope
mov
movsb
mov
adc
inc
xchg
gs
xchg
xlat
or
pop
les
into
mov
rol
loopne
call
jo
popf
add
lock
cmp
stc
pusha
aam
adc
push
xchg
and
mov
insb
and
fimuls
mov
mov
in
inc
fmull
cmp
cmpsl
rorb
dec
jge
inc
enter
out
xchg
int
scas
rorl
shll
test
xchg
mov
std
subl
fisubrl
in
cltd
hlt
hlt
fldl
add
or
inc
adc
mov
ret
add
cmp
push
sub
sbb
cmp
add
or
insl
jbe
lahf
imul
jecxz
jp
xchg
js
xor
imul
pop
ljmp
jle
fstpt
in
cwtl
pop
mov
shrb
mov
cmpsb
jae
push
mov
lcall
sbb
inc
add
mov
push
xchg
push
fstps
add
push
call
sbb
outsb
add
in
pop
dec
mov
jne
inc
loop
dec
mov
pusha
call
lds
addr16
lock
fildl
cltd
mov
cmp
inc
adcl
inc
jecxz
dec
or
jmp
call
js
mov
xor
xchg
cmc
and
push
mov
orb
call
cmp
lock
push
sub
jecxz
push
or
pop
push
and
or
pop
adc
jbe
fstpl
sub
insb
daa
jns
popa
inc
mov
push
popa
jle
pop
sbb
movsb
cmp
jne
aaa
or
push
xor
fwait
xchg
insl
xchg
mov
xchg
mov
inc
popa
js
insl
adc
sub
push
inc
push
sub
jns
xchg
add
dec
add
xchg
loopne
fcoms
fcoml
popa
mov
sub
call
ficoml
adc
adc
loope
fsubr
shll
jb
fcoml
jle
push
sbb
sahf
add
addr16
roll
test
frstor
lds
inc
sbb
and
fstps
mov
mov
dec
or
cmp
push
push
sub
jno
movsb
outsl
xchg
adc
dec
pop
pop
mov
add
shlb
mov
fwait
adc
mov
cmp
leave
cmp
and
loop,pn
xorb
or
nop
and
adc
sbbb
inc
inc
cmp
and
cwtl
push
cmp
insl
ds
test
jno
sahf
and
imul
jo
mov
gs
mov
test
adc
push
iret
add
pop
push
push
stos
cltd
adc
cmp
sbb
xor
or
nop
addl
mov
fcomps
mov
cmp
mov
pop
ljmp
pop
or
outsb
push
xlat
add
fstps
pop
jp
cmp
cmc
cmp
popa
and
repnz
or
jno
ficompl
mov
and
nop
adc
or
outsl
inc
jle
xchg
add
inc
sbb
xchg
inc
loopne
test
pop
jns
aas
gs
js
mov
pop
xor
and
outsl
icebp
push
lahf
cmc
movsb
add
xor
je
jecxz
shlb
pop
ret
xchg
xchg
mov
add
push
jl
xor
fwait
cmp
mov
scas
js
fistpll
mov
or
icebp
lcall
jae
loope
mov
sbb
addl
cmp
rorb
icebp
jae
push
sti
stc
sub
ss
adc
les
or
stos
lcall
xor
cs
push
repz
lcall
pop
xchg
push
inc
or
nop
and
test
and
mov
jne
and
and
cmp
dec
jecxz
or
lret
push
pop
adc
xchg
sbb
or
xlat
outsb
add
xadd
mov
rol
pop
orl
call
and
add
daa
pop
add
lahf
fisubrl
xchg
fwait
loopne
add
mov
jecxz
mov
aad
cli
aas
loop
mov
insl
clc
js
inc
add
shr
ljmp
cmp
add
mov
pop
hlt
mov
mov
sahf
pop
pop
xchg
das
sbb
jns
push
gs
je
loopne
jecxz
outsb
pop
xchg
xchg
pusha
movsl
mov
cltd
in
lea
mov
shlb
add
push
add
mov
pop
pusha
pop
mov
jb
loope
push
loopne
mov
ret
icebp
mov
in
mov
dec
sbb
fs
cld
xor
lock
ja
dec
sbb
mov
or
iret
lret
in
subl
adc
lock
inc
and
mov
inc
lods
or
dec
add
scas
cs
sub
lock
mov
xchg
cs
xor
push
shlb
outsb
mov
loope
dec
jno
insb
xchg
and
cmp
dec
sbb
call
mov
popf
cmpsl
fnstcw
or
mov
test
testl
xchg
icebp
fs
mov
pop
jno
adc
out
in
add
imul
xchg
pop
sbb
add
pop
mov
sub
pop
ljmp
xchg
adc
pusha
pop
subb
clc
pop
lret
loop
js
cmpsl
pushf
mov
js
test
jb
out
jmp
jnp
add
jmp
test
xchg
ja
sbb
lods
push
inc
cmp
loope
movsb
xchg
xchg
lea
nop
cmp
test
in
subb
adc
jne
cld
das
sbb
xchg
test
je
jb
je
pusha
push
hlt
push
dec
cli
dec
lods
dec
icebp
std
out
in
ret
ja
lods
sub
movsl
leave
dec
add
dec
mov
mov
xchg
or
mov
orb
orb
shlb
or
inc
mov
jno
addb
cld
out
rolb
outsb
nop
int3
data16
push
int3
mov
xchg
fnsave
adc
xchg
cwtl
inc
xchg
xor
inc
das
mov
inc
sub
imul
push
push
sub
loopne
icebp
clc
loop
mov
mov
add
and
xchg
or
aas
pop
adcl
leave
setle
out
pop
or
or
or
and
xchg
orb
shrb
or
push
sbbl
out
ret
js
icebp
test
movsb
mov
add
into
sbb
push
jno
popf
inc
lods
mov
pop
hlt
test
and
mov
inc
mov
push
test
push
dec
inc
mov
jp
mov
dec
push
and
aaa
rcl
js
adc
mov
xchg
sbb
ret
mov
cld
fsubr
push
sub
int
xor
mov
mov
in
rorl
in
dec
xchg
cmp
inc
or
and
negl
pop
mov
cli
pop
pusha
mov
into
cmp
push
iret
push
sbb
and
push
aas
add
push
adc
es
mov
stos
nop
cs
mov
rcrb
mov
mov
mov
adc
push
mov
popa
xchg
shlb
dec
fsts
sub
or
inc
in
push
mov
pop
mov
clc
add
jns
loope
lock
lds
xchg
add
cli
dec
jmp
inc
push
mov
addl
add
jne
inc
mov
dec
sbb
je
fsubs
push
and
cmpsb
jecxz
xor
jne
sub
xchg
pop
and
or
sbb
push
aam
add
cmp
pushf
sub
or
popf
mov
mov
lret
jge,pn
jo
dec
and
aad
es
mov
dec
pop
shr
pop
mov
sbb
mov
inc
pop
fs
pop
sbb
push
scas
add
sbb
cli
stc
lret
pop
sbb
jmp
pop
dec
loope
sbb
aam
cmp
pop
mov
insb
stos
cltd
xchg
imul
daa
insl
xchg
add
xor
outsb
xor
mov
add
out
mov
lods
mov
iret
and
int3
popf
inc
add
fnsave
pop
mov
mov
xor
push
xchg
jecxz
fstl
loope
dec
sub
stc
jecxz
enter
cmp
or
hlt
movsb
add
popf
out
adc
test
pop
lock
pop
loope
sahf
add
jmp
mov
mov
pop
and
lock
ds
mov
pusha
xchg
mov
outsb
and
push
add
jne
scas
cmc
add
pop
lods
daa
mov
nop
sbb
scas
imul
add
rcll
mov
xchg
repz
push
mov
sub
dec
xchg
xchg
lcall
dec
mov
xor
xor
test
ficompl
inc
movsl
inc
insb
test
and
test
fstps
add
cmp
jecxz
popf
or
call
add
adc
inc
add
xchg
push
lock
mov
dec
mov
cmp
dec
push
movsl
cli
cmp
mov
data16
sub
adc
nop
inc
mov
xorl
icebp
jnp
push
jb
push
add
adcl
int3
dec
push
out
sbb
sub
sub
sbb
out
or
add
pop
outsl
outsb
pusha
sbb
jne
push
xchg
in
popa
dec
pop
popa
sub
mov
divl
pop
sarl
ficoms
jo
test
ja
inc
mov
aas
jmp
lods
and
add
xchg
jb
dec
faddl
xor
add
mov
add
jp
popf
out
push
adc
inc
ret
clc
xchg
push
sbb
movb
xchg
dec
inc
inc
ficoml
faddl
adc
push
push
adc
sbb
fwait
imull
add
mov
addb
ret
das
sbb
inc
mov
mov
sbb
add
stos
mov
in
sub
or
jnp
xor
and
les
pop
lock
cmp
mov
jb
pop
xor
shrb
xchg
cmpl
sub
ret
loopne
orb
sub
push
mov
push
add
sarl
mov
inc
sub
sub
dec
cmp
xchg
not
sub
inc
mov
movb
mov
jge
add
xchg
insb
mov
dec
xchg
shll
clc
aad
lret
lds
repnz
inc
stos
rcl
adc
inc
adc
sbb
adc
roll
adc
mov
sbb
jmp
pop
test
imul
push
js
lods
sbb
adc
jg
add
dec
jae
sbb
callw
out
sub
xlat
sbb
add
or
repz
dec
addr16
inc
daa
push
push
rep
xchg
fs
pop
sbb
add
adc
cmpl
sbb
push
nop
and
push
add
lock
incb
xchg
push
cmp
loopne
test
cmp
test
test
pop
mov
mov
flds
loope
cltd
mov
fidivs
in
outsb
mov
adc
or
inc
insl
sbb
cmp
sub
inc
pop
push
in
adc
roll
adc
jmp
adc
ret
cmp
sbb
ret
insl
icebp
or
add
sbb
pop
gs
fcoms
sub
xor
xchg
or
adc
push
sbb
xchg
movb
mov
cmc
in
jp
add
outsl
mov
ret
dec
xor
cmp
lock
push
pop
seta
sbb
adc
gs
loop
jmp
jae
adc
fisubl
pusha
bound
push
test
jne
jno
mov
mov
add
dec
decl
mov
mov
mov
xchg
rcrl
cwtl
incl
add
enter
push
jo
js
add
ret
inc
adc
sbb
daa
cmp
aaa
sbbl
jo
xchg
sub
out
lock
ds
dec
dec
dec
movsl
dec
or
loopne
pop
mov
dec
push
mov
stos
inc
dec
jno
sbb
shr
xor
cmp
insb
mov
jns
cmp
out
add
sbb
cltd
test
cmp
cs
push
in
push
mov
mov
inc
pop
add
ficomps
sbb
inc
lret
add
inc
leave
pop
pop
insl
repnz
outsl
mov
or
clc
xchg
push
or
mov
jge
push
mov
adc
push
andl
fistl
lret
sbbl
mov
add
aaa
push
aam
push
fcoml
inc
dec
xchg
jp
push
or
rorl
loop,pn
add
add
pop
mov
jne
fists
fwait
inc
sbb
sti
and
fstpt
sub
xchg
jl
dec
push
xchg
xchg
repz
sbb
or
sbb
lcall
xor
xchg
add
pop
sbb
inc
adc
adc
adc
xor
adc
mov
fisttpl
les
call
lcall
and
push
sub
call
dec
xor
push
loopne
insl
cmc
mov
and
add
sub
fistps
adc
push
xchg
or
pop
inc
test
lds
fcoms
jnp
adc
or
xlat
mov
inc
adc
outsl
movsb
mov
add
mov
mov
or
mov
cmc
pushf
cli
jmp
jmp
in
dec
push
data16
loop
cli
out
add
sbb
cmp
add
add
cmp
add
lods
add
loop
push
js
outsl
push
dec
rcr
scas
adc
pop
imul
xor
addr16
xchg
xchg
imul
cmp
loopne
hlt
in
pop
int3
loopne
push
sbb
and
mov
xor
pop
leave
ret
push
mov
lock
cmp
add
pcmpgtd
ljmp
or
outsb
dec
movsb
cwtl
mov
pushf
adc
xor
jmp
push
dec
icebp
rol
div
jbe
lock
out
lock
lock
fmull
mov
pop
jo
and
pop
leave
sbb
push
in
inc
je
cmp
sub
repnz
push
imul
testl
dec
jmp
fcom
pop
adc
cmc
popa
inc
mull
and
arpl
repz
lahf
and
or
xorl
push
push
or
cmp
dec
leave
outsl
add
push
imul
sbb
insb
cmp
dec
loope
mov
pop
addr16
loopne
inc
inc
mov
mov
sub
xor
add
sbb
orb
sbb
inc
sar
sbb
and
push
in
pop
test
dec
out
jne
shll
dec
adc
add
cmpsl
shrl
jg
add
mov
fldenv
sarl
inc
in
add
cmp
lcall
dec
dec
nop
jmp
dec
dec
push
clc
sahf
sbb
int3
pop
dec
adc
or
pop
int
in
inc
and
sub
rcrl
rolb
and
lock
fldcw
jo
jmp
xchg
dec
or
scas
xchg
sbb
pop
inc
addr16
fdivrs
mov
fists
imul
icebp
rcrb
pusha
jno
cmpsl
xor
dec
dec
sbb
push
sbb
mov
clc
sub
cld
xor
das
out
into
ja
int3
inc
fwait
pavgb
or
mov
sbb
std
dec
pop
pusha
sarb
fcomp
loope
adc
lahf
enter
or
or
pop
mov
inc
dec
int
repnz
clc
loopne
jge
push
mov
add
test
data16
add
push
jbe
jge
xor
bound
push
mov
fimull
xor
cli
loopne
aaa
push
jo
stos
dec
mov
cmpsl
inc
sub
pop
ja
mov
shl
dec
and
pop
or
icebp
cmp
adc
daa
mov
loope
xchg
bound
xchg
or
add
in
sub
push
pop
je
int3
or
sbb
sub
add
inc
sbb
lret
or
repnz
bound
inc
inc
inc
mov
test
popa
cmp
movb
jns
imul
add
sbb
out
add
cmp
lock
jae
and
xor
movsl
adc
into
pop
sub
dec
fldl2t
mov
les
lcall
repnz
sbb
push
popf
fs
loopne
stos
mov
lret
inc
pop
cmc
or
sub
out
add
pop
in
lahf
mov
mov
jge
add
dec
into
pop
sbb
lret
je
ret
adc
outsl
sbb
in
sbbl
push
jns
adc
add
loop
test
inc
adc
das
inc
je
push
test
std
imul
lock
in
cmp
ret
push
call
adc
mov
mov
and
js
adc
sub
enter
mov
add
pop
je
mov
cmp
sbbb
cmp
jbe
push
adc
pop
inc
xchg
add
xlat
push
stos
pop
fwait
xchg
sbb
popl
pop
ljmp
orl
mov
ret
xchg
adc
out
insl
and
out
in
push
inc
mulb
pop
pop
xchg
icebp
push
out
push
dec
push
or
mov
mov
imul
cmpsb
adc
sbb
lods
mov
mov
and
xchg
gs
sbb
dec
pop
add
ret
sbb
out
sub
dec
lods
lock
in
or
nop
and
sbb
je
adc
aaa
in
mov
hlt
inc
or
push
enter
xchg
inc
sbb
in
outsb
out
fisubrs
sbb
out
and
xchg
mov
out
pop
mov
pop
dec
lock
mov
movsb
lock
mov
and
xor
add
loopne
jmp
sbb
in
xchg
mov
xchg
sarb
push
sbb
mov
mov
add
adc
xchg
add
in
and
mov
sbb
shll
test
inc
and
rolb
adc
cli
xchg
or
push
mov
push
dec
shlb
loop
popa
push
pop
sbb
jmp
lret
add
jge
adc
bound
mov
mov
cmpsl
mov
pop
popf
inc
test
add
xchg
cmp
loopne
shll
loopne
cmp
xlat
outsl
adc
cmp
push
into
fdivrl
xorl
clc
push
leave
in
sub
add
pop
adc
lods
sbb
test
out
fstps
xchg
or
mov
faddl
pop
dec
loopne
hlt
mov
or
fsubl
andb
mov
sub
mov
xlat
icebp
jge
fsts
xchg
cmpsl
mov
xor
and
call
sti
fimull
les
add
cwtl
mov
adc
add
sub
push
pop
test
fnsave
out
pop
jo
or
lods
inc
cltd
xor
int
pop
xor
mov
add
add
test
mov
cmp
add
mov
fwait
shl
sbb
out
pop
mov
lods
sbbl
test
and
xor
pop
xchg
insl
filds
stc
mov
imul
and
ficoml
mov
and
xor
cmp
and
mov
lret
sbb
rcl
aam
jmp
lea
push
out
pop
and
dec
jb
jno
bound
in
cltd
sbb
clc
daa
add
stc
loope
fists
mov
data16
add
sbb
lods
or
iret
cmp
lock
aam
xchg
rclb
pop
mov
pop
sub
cwtl
adc
mov
test
es
adc
dec
outsb
inc
adc
div
adc
push
ret
xchg
fmul
clc
adc
insb
jge
int
clc
in
and
outsl
push
repz
add
fwait
sbb
lds
pop
inc
pop
andb
mov
and
jmp
lahf
xchg
cmpsl
push
lods
cmp
popa
xor
imul
sub
mov
imul
in
pop
pusha
pop
mov
inc
inc
outsl
pusha
sbb
mov
arpl
or
jle
cmpsl
push
or
out
cmc
loop,pn
xchg
xor
push
adc
xor
popa
mov
repz
dec
mov
jnp
xchg
sub
adc
mov
jno
or
fcomps
and
push
out
pop
adc
cmp
sti
nop
pushf
and
notl
jecxz
add
adc
rcrl
add
subl
xchg
add
push
dec
xlat
sub
mov
pop
scas
and
add
outsb
in
inc
loop
loop
je
mov
les
mov
and
mov
test
pop
dec
repnz
adcb
scas
add
mov
shrb
xor
inc
jl
and
or
mov
sbb
lock
daa
mov
jno
movsl
inc
jno,pt
addb
sbb
xor
push
cmp
test
xchg
jge
sahf
lods
popf
subl
fistpl
movl
mov
in
or
xor
xor
jnp
sbb
inc
std
jb
pop
pop
sub
jnp
inc
test
sub
adc
nop
pop
mov
jo
add
mov
adc
out
outsb
push
xchg
pop
enter
ficoml
inc
hlt
pop
fwait
jp
mov
outsb
scas
pop
ss
bound
cmc
shrl
lds
sub
sbb
inc
mov
pop
pop
mov
js
int
dec
sbb
repnz
add
xchg
mov
push
pusha
sub
repz
mov
pop
inc
pop
jne
jae
inc
and
loopne
xchg
in
add
adc
scas
push
imul
rol
jle
xchg
leave
add
add
lock
ret
popa
pop
mov
mov
outsb
stos
shll
iret
jno
ja
es
dec
ds
fsubrs
sbb
add
incb
aas
cmp
mov
int3
setne
sbb
jp
push
inc
mov
ljmp
mov
jns
sub
or
movsb
cmpb
cwtl
adc
cmp
into
inc
ret
cmp
cmp
or
andl
mov
adc
int
sbb
inc
jo
rol
mov
sbb
mov
loop
addr16
dec
cmp
imul
mov
jp
inc
cmp
jmp
and
sti
jge
daa
adcb
xchg
insb
push
pop
test
sbb
sbb
sbb
daa
ss
inc
add
xchg
mov
daa
sbb
add
or
int
imul
cld
mov
ret
pusha
mov
cltd
insb
mov
mov
cwtl
sbb
jb
inc
repz
popl
cli
jl
and
push
cltd
orl
enter
lahf
stos
lods
and
inc
sbb
imul
mov
adc
xlat
add
push
sbb
inc
aas
fsubr
incl
push
jg
push
xchg
ds
ljmp
scas
mulb
cmpsb
sbb
adc
leave
mov
inc
test
dec
push
lock
mov
pusha
loopne
mov
jb
mov
fcomps
and
mov
sbbl
bound
fstps
mov
push
out
fstpt
pop
jnp
xor
xor
dec
clc
push
loop
push
arpl
mov
push
dec
lock
jecxz
mov
pop
push
testl
jne,pn
movsl
sub
aad
ret
out
scas
hlt
cmp
xchg
and
pop
lods
test
mov
dec
sbb
push
sbb
scas
xor
sbb
cmp
scas
pop
sub
gs
adc
in
outsl
and
clc
push
jle
adc
outsl
lcall
loop
adc
lcall
bound
lahf
jp
mov
adc
pop
std
push
movsb
xchg
pop
adc
aam
add
pop
sbb
add
xor
push
adc
mov
add
mov
add
sbb
push
add
enter
addr16
cmp
sti
aam
popa
enter
into
inc
push
inc
pop
mov
sbb
arpl
dec
or
cmp
pushf
fsubrp
adc
aaa
ficoms
fldl
xchg
inc
add
adc
imul
sarb
sar
out
lock
sti
push
dec
sbb
and
shlb
push
shl
push
enter
pushf
adc
push
aad
stos
mov
lock
jo
sbb
adc
stos
pushf
pushf
out
jecxz
xor
push
pop
test
icebp
dec
cmp
mov
ret
fisttpll
push
rcrb
and
pop
or
sbbl
movsl
rcrl
add
add
out
out
mov
push
xchg
push
adc
xchg
repnz
mov
or
sarl
sbb
andb
stos
mov
adc
ss
test
ret
dec
sub
xchg
adcb
es
in
sub
aad
inc
inc
in
or
add
dec
lret
and
das
pop
loop
addr16
sbb
push
popf
push
sahf
dec
cmc
add
fs
adc
cmp
les
jno
dec
xor
adc
xlat
jne
dec
xchg
push
sbb
jecxz,pn
mov
add
and
add
sti
mov
adc
push
data16
cmp
mov
xor
loope
jo
dec
push
jmp
icebp
push
daa
or
jb
call
out
out
or
push
push
imul
fwait
jle
aaa
adc
xor
add
xor
sbb
adc
icebp
adc
inc
jp
ficomps
int3
imul
jge
shlb
dec
ret
rcrb
aas
in
mov
ja
xchg
sarb
mov
pusha
seto
push
imul
iret
je
push
mov
sbb
pop
ficoms
xchg
pop
mov
je
adc
call
cli
insl
aaa
add
sbb
out
sbb
dec
dec
adcb
xor
imul
je
inc
shrb
inc
fiadds
pop
sbb
inc
cmp
pop
or
test
loop
fidivrs
lods
add
pusha
sbb
inc
pusha
adc
inc
insb
push
pusha
loopne
inc
xchg
sub
mov
pop
aad
cmp
scas
fsubr
add
movsb
mov
das
or
addl
in
adc
add
inc
pop
pop
sub
and
jbe
aam
add
movsl
insl
xchg
call
stos
pop
ss
shlb
xchg
or
sub
push
fwait
in
cmp
call
xchg
aas
std
mov
inc
sub
or
daa
or
dec
rcrl
clc
xchg
and
push
or
or
fs
sbb
add
sub
mov
and
xchg
pop
sbb
out
lret
lcall
and
xchg
push
movsl
fs
push
mov
or
push
and
neg
js
cmp
and
xor
aad
scas
mov
sbb
fisubs
sub
insb
sub
push
inc
loope
addl
push
dec
stos
xor
adc
dec
adc
test
dec
dec
xchg
mov
cmp
pop
adc
adc
maxps
loop
lods
push
pop
pop
mov
je
rclb
lret
adc
data16
inc
mov
js
daa
insl
nop
xchg
cmc
pop
loop
add
stos
call
shlb
or
les
mov
fwait
sbb
mov
arpl
xchg
dec
cli
mov
lcall
insl
test
sbb
cmp
std
daa
cwtl
gs
push
mov
pop
sahf
lods
pop
add
mov
cmc
add
loopne
add
mov
or
or
pop
pop
ljmp
stos
test
mov
push
or
lods
xchg
stos
add
cwtl
lcall
sbb
adc
rclb
or
inc
in
mov
or
fcoms
pop
cltd
in
aad
mov
and
je
adc
push
sbb
subl
jne
xor
test
lods
fsts
xorl
je
fstl
push
subb
mov
inc
sbb
mov
test
lock
and
push
xlat
inc
xlat
dec
sbb
insl
popa
sub
jbe
fdivrs
iret
cmp
mov
out
dec
and
xor
cli
incb
xchg
adc
add
mov
xchg
mov
fs
cmp
mov
jno
movsl
dec
insb
dec
cmp
sbb
sahf
ja
push
adc
leave
xor
mov
jecxz
sahf
inc
sub
std
jecxz
push
and
icebp
mov
mov
orl
xchg
sbb
xchg
pop
loope
and
out
pop
lods
pusha
pop
lock
insl
test
mov
je
insl
fs
ret
sub
mov
sbb
insb
je
outsl
mov
push
int3
jb
xchg
cmp
icebp
je
scas
pop
insl
or
pop
pop
pop
popa
addl
inc
leave
ret
sti
and
xor
mov
fisubrl
shlb
lods
adc
jae
mov
or
xor
movsl
sbb
insb
xchg
icebp
ds
shrl
scas
pop
iret
and
push
and
ja
sbb
dec
cmc
faddp
dec
add
mov
cmc
faddl
add
imul
pop
add
lea
adc
movsl
push
inc
stos
pop
add
inc
inc
mov
js
push
stos
add
rcll
pop
or
push
pop
add
add
jnp
cmp
in
movl
xchg
sub
vpackuswb
shlb
pop
jl
mov
xchg
loopne
push
in
xor
lods
iret
push
push
adc
pop
xchg
loopne
mov
pop
or
push
rorl
inc
inc
ljmp
adc
rolb
sbb
pop
inc
fstpl
push
mov
ljmp
push
cmp
in
lock
inc
lret
cmp
cmc
add
dec
push
call
xchg
hlt
jae
or
push
push
std
in
lea
push
and
lcall
fimull
inc
insl
repnz
mov
adc
sbbb
dec
ret
repz
add
popf
subl
pop
ljmp
aaa
outsl
clc
jb
add
sub
mov
xor
dec
xchg
stos
pop
cmp
fstpl
popl
or
xchg
sub
movsl
cltd
out
inc
push
push
imul
imul
xchg
mov
add
xorl
movsb
cmp
or
sar
out
add
xchg
inc
pop
push
mov
les
pop
test
mov
test
insb
sbb
mov
movsl
divl
lods
int3
addr16
sbb
clc
dec
cld
fwait
dec
xor
lock
jmp
jo
dec
shlb
jne
fcmovne
cmp
pop
xor
gs
and
inc
pusha
adc
pop
cmp
xchg
jno
push
sbb
aaa
mov
lods
push
jecxz
int3
mov
aam
xchg
jmp
mov
xchg
dec
fcoms
inc
outsl
mov
push
push
loop
mov
out
xchg
lods
add
lcall
sbb
pop
cmc
add
lret
fadds
outsl
pop
jge
cmp
jo
repz
and
inc
dec
in
cmp
mov
inc
xchg
jmp
sbb
icebp
fld
push
stos
mov
xlat
jecxz
mov
in
pop
mov
icebp
mov
and
repnz
in
mov
sbb
imul
bound
lret
mov
xor
xchg
sub
xor
fildl
gs
add
cmp
mov
or
or
or
sub
clc
mov
jae
pop
mov
push
jbe
and
rcrb
sbb
adc
out
mov
scas
clc
xchg
or
imul
adc
rclb
fdivl
fbld
fdiv
cli
sbb
je
xchg
mov
mov
stc
inc
xor
call
icebp
and
out
push
loop
rolb
mov
jo
sub
adc
and
jmp
push
push
cltd
movsl
hlt
push
and
cltd
inc
mov
pop
ss
mov
xor
jecxz
and
cmp
inc
js
in
pop
jnp
inc
adc
sbb
jo
test
popf
inc
cmp
mov
jle
add
js
jmp
in
mov
test
jle
adc
fisubrl
pusha
cmp
mov
push
cmp
outsb
arpl
out
ds
add
adc
add
cmp
push
imul
sub
loope
call
daa
rclb
jg
push
leave
mov
test
jle
adc
cmp
push
sbb
pop
sub
and
pushf
ret
insb
sbb
loope
ret
lods
mov
pop
sub
dec
mov
inc
popa
xchg
mov
or
xor
fcmovnbe
fistpll
cmp
or
jecxz
clc
enter
sbb
push
add
pusha
dec
dec
scas
jae
fwait
add
dec
jo
and
mov
xchg
mov
pusha
xor
jl
push
add
arpl
repnz
cmp
mov
mov
xchg
mov
rol
call
xlat
les
cmp
js
dec
pop
clc
jae
pop
dec
add
xor
jo
sub
xchg
xor
sub
pop
lret
add
adc
or
push
ja
xor
out
andb
inc
or
adc
repz
sbb
out
xor
psrad
jmp
mov
xor
mov
jae
sbb
inc
ret
or
mov
dec
hlt
dec
mov
dec
inc
jmp
jno
mul
jmp
mov
add
xchg
push
les
push
outsl
and
mov
mov
test
repz
sbb
ja
sahf
pop
sub
inc
insb
adc
lret
jno
cmp
popa
test
lds
stos
dec
push
cwtl
and
inc
outsb
or
rolb
sahf
push
imul
or
int
mov
mov
jl
ret
add
aaa
lret
or
fwait
movsl
cmpsb
mov
adc
pop
and
jle
divps
adc
push
les
fimuls
ljmp
jae
fwait
lahf
cmp
jp
push
adc
popf
adc
or
add
push
lock
cmp
xchg
je
bound
pop
dec
das
popa
mov
sub
add
mov
jl
push
lock
push
leave
ror
xchg
and
out
lods
int3
les
add
daa
sub
or
out
jbe
inc
and
dec
ret
jl
jb
push
add
adc
lods
fwait
movntq
js
lret
les
jmp
add
sbb
sbb
insl
jbe
inc
out
ljmp
mov
pop
jns
ja
das
pop
insb
dec
mov
mov
jno
add
add
adc
inc
sarb
mov
inc
mov
add
xchg
cwtl
mov
shlb
pusha
jo
loope
push
sbb
and
pop
aam
add
lahf
sbb
sub
add
daa
jo
fistpl
fwait
mov
cmpb
cld
jp
inc
cmc
dec
jecxz
repz
arpl
mov
loop
inc
dec
add
inc
mov
sbb
cmp
das
int3
out
adc
add
and
push
add
popa
rorb
xchg
fisubl
inc
mov
xchg
dec
lock
rcrl
ss
in
pushf
dec
sub
pop
push
mov
push
fldz
add
or
jne
jns
jecxz
mov
jecxz
repz
adc
jmp
mov
add
and
test
pop
xor
pop
mov
jae
ljmp
mov
add
inc
xchg
sbb
xor
mov
loop
jmp
add
sbb
loope
xchg
jl
xor
xchg
test
xor
inc
dec
push
rclb
xchg
cmpsb
mov
adc
test
ds
movsl
add
mov
mov
or
xor
pop
pushf
add
mov
aad
sahf
push
add
or
roll
les
pop
dec
push
or
cmp
arpl
push
add
inc
les
add
xchg
dec
cmpsl
mov
mov
das
or
mov
or
or
inc
aas
cwtl
mov
mov
xor
out
push
or
popf
shll
fwait
in
add
mov
mov
or
add
sarl
int
in
in
xor
mov
pusha
std
add
and
into
out
inc
mov
jl
add
cli
ljmp
adc
stc
add
lret
dec
cmc
push
clc
movsl
shlb
or
inc
add
pop
mov
xchg
dec
lock
in
sub
mov
xor
sub
sbb
ret
mov
rclb
insb
jmp
div
jmp
icebp
inc
cs
in
cmp
pop
mov
inc
out
lahf
test
pop
and
cmp
insb
fldl
dec
sbb
cmc
icebp
jecxz
adc
sub
or
dec
jno
ds
negb
js
lock
dec
or
mov
aad
cmp
inc
sub
adc
lock
aam
inc
push
call
push
inc
inc
dec
push
sub
lods
shlb
adcb
rclb
mov
nop
imul
iret
in
sub
or
jnp
jno
fistpll
jno
push
cmp
dec
cmc
arpl
loope
ljmp
arpl
inc
mov
push
adc
push
hlt
dec
dec
jg
out
outsl
sbb
inc
add
ficompl
mov
movsl
adc
ja
sbb
sbb
loope
stc
adc
loope
out
xor
loopne
add
adc
mov
mov
or
add
fimull
sub
es
xchg
mov
dec
test
stc
movsl
add
rcrl
mov
adcl
dec
fxch
subb
shlb
hlt
mov
ret
inc
mov
inc
add
pusha
lods
aas
mov
mov
add
dec
lock
jb
inc
mov
xor
int3
pop
fsubs
popa
popa
add
pop
scas
outsb
or
cmp
stos
add
add
popf
cmpsl
and
xchg
test
shrb
push
push
test
repz
mov
mov
sarl
aas
adc
adc
lret
rolb
sbb
adcl
xchg
mov
add
xchg
adc
sbb
loopne
std
mov
sub
scas
push
or
jg
inc
and
sahf
add
dec
inc
adc
aam
mov
and
fcomp
jo
ret
loop
icebp
ja
xchg
mov
mov
add
adc
and
fcoms
sub
adc
jmp
mov
fs
xchg
outsb
test
lods
jae
dec
or
int3
or
mov
cmp
mov
add
jne
xor
repnz
pop
mov
add
inc
cmp
mov
insl
dec
cmc
mov
and
sbb
nop
add
sbbl
enter
or
inc
add
cltd
add
ss
mov
dec
cmpsl
lock
stos
pushf
clc
outsb
roll
mov
aas
out
jae
inc
das
jmp
xchg
pop
or
add
lods
pop
les
dec
pop
jp
or
cmp
in
mov
movsl
sarb
jmp
push
je
mov
add
mov
popf
pusha
add
popa
je
das
je
xchg
icebp
frstor
add
jno
adc
popa
rcrl
inc
push
push
test
jecxz
les
loope
inc
insb
test
hlt
adc
cmpsl
or
rorb
mov
mov
inc
push
aam
ret
lock
push
addr16
mov
dec
das
mov
mov
ss
loopne
cmp
push
inc
mov
ja
mov
dec
xchg
sbb
add
pusha
jo
mov
int
xchg
fsts
dec
fistl
or
hlt
xchg
es
rol
push
xor
adcb
dec
andb
fwait
ficompl
movsl
mov
push
loopne
pop
nop
adc
mov
xchg
movsl
shl
jmp
mov
mov
popa
add
add
cmpsb
xchg
dec
xchg
imul
in
xor
sbb
xchg
mov
cmp
fwait
sarb
movsb
jnp
add
xchg
insl
bound
fwait
dec
jge
addb
jno
scas
push
sbb
jbe
test
mov
mov
mov
mov
inc
test
mov
adc
or
leave
dec
les
sbb
lock
clc
xchg
insb
cmp
pop
negb
jp
mov
fs
inc
loopne
adc
jb
adc
inc
or
dec
pushf
xchg
adc
mov
call
adc
or
jo
das
cmc
pop
add
test
test
xorl
insb
popf
dec
insb
cmpsb
or
ret
push
xchg
pushf
mov
test
mov
dec
push
xor
sub
adc
ret
mov
adc
ja
scas
shrb
fcompl
add
jno
ja
jmp
dec
mov
repz
adc
bound
test
dec
add
inc
cmovae
cmc
jmp
shlb
dec
ja
aad
mov
and
arpl
call
nop
incl
nop
or
testl
leave
rorb
test
test
loope
xor
mov
dec
fwait
orl
insl
pop
pop
cld
iret
cmp
in
rolb
pop
je
imul
je
jne
cwtl
dec
out
dec
les
cmp
sbb
sbb
movsb
or
xor
es
add
js
mov
jge
sub
pop
add
scas
adc
pushl
mov
adcb
test
cmpb
cmp
in
lret
mov
ret
inc
mov
dec
inc
add
sub
test
pusha
mov
andl
cltd
jecxz
gs
je
xlat
int
cmp
arpl
into
sub
lods
arpl
sbb
or
outsl
xchg
daa
mov
xorb
add
or
pop
adc
inc
je
adc
push
cmpsb
lock
xor
outsb
jl
cmpsb
aam
std
push
or
push
mov
fcomps
popf
pop
push
mov
mov
cmpsl
jo
push
cltd
mov
inc
jl
aaa
xchg
shlb
js
aaa
cmp
jno
jb
sub
sbb
add
and
in
xor
ret
mov
sbb
and
data16
push
inc
mov
dec
cmp
push
or
clc
add
jl
mov
call
cmpl
outsb
pop
xchg
cmp
rcrb
cltd
and
push
in
dec
test
cmp
mov
inc
mov
out
push
pop
pop
push
dec
mov
or
mov
mov
and
adc
mov
mov
xorl
in
xor
push
loopne
imul
mov
test
pusha
in
inc
sbb
xor
mov
ret
dec
pop
push
xchg
cld
mov
xorl
jb
lods
rcll
jp
in
in
add
daa
clc
inc
jge
rcrb
idivl
js
mov
out
lds
enter
enter
in
sbb
mov
sbb
sarl
loopne
ss
mov
stos
and
dec
bound
out
enter
sbb
mov
or
or
icebp
fsub
hlt
or
push
cltd
pop
movsl
add
mov
rcl
xchg
cmp
cmp
fstps
lldt
rorb
and
or
xchg
imul
or
jle
insl
add
add
cs
sti
popf
mov
cld
in
fs
push
rolb
mov
fs
cmpsl
add
adc
pop
pop
mov
mov
cmp
test
rolb
fidivs
testl
mov
ljmp
xchg
dec
pop
insl
jb
fwait
test
mov
daa
sub
mov
lcall
rorb
aaa
leave
int
in
inc
notb
dec
push
repz
mov
lahf
add
sbb
inc
add
rclb
adc
push
bound
ja
fnsave
icebp
mov
jnp
pop
add
jg
sbb
and
jbe
in
or
aad
and
sub
add
add
sbb
rorl
adc
cmp
lods
jne
fwait
insb
pop
fcomp
xor
push
popf
mov
add
sbb
cmp
pop
rolb
lods
xor
dec
js
adc
pop
cmpsb
and
sbb
jmp
jp
push
cmp
dec
xor
mov
jae
add
in
movsl
sub
lea
mov
cmp
imul
add
imul
in
push
inc
pop
sbb
lock
xor
or
sub
cwtl
fldt
js
jmp
mov
addl
or
fwait
xchg
pusha
mov
mov
adcl
mov
inc
sbb
jge
mov
das
pop
rep
mov
adc
pop
sbb
dec
push
icebp
lahf
int
adc
add
adc
sbb
xchg
das
les
and
and
sub
mov
insb
mov
lret
movsl
push
cmp
out
rorb
lret
mov
dec
outsl
jno
ret
mov
xchg
xlat
aam
dec
or
jns
pop
push
push
ret
add
lea
adc
dec
inc
xchg
sub
or
push
out
ss
and
and
outsb
add
add
shrl
mov
test
cmp
ds
sub
push
test
xchg
fstpt
jp
jg
or
movsb
jp
dec
or
and
mov
xchg
inc
jo
sub
stc
inc
jle
dec
push
sbb
inc
orl
ss
dec
in
aaa
nop
sbb
mov
fsubl
cmc
lods
dec
je
shrb
imul
cltd
dec
arpl
and
inc
inc
loopne
adc
push
push
add
xor
lret
sub
and
pusha
fs
test
push
push
dec
or
loope
or
lock
push
adc
lods
pop
addr16
fdiv
movsb
jge
imul
bound
add
push
pop
xchg
rcrb
loopne
dec
push
sbb
push
das
dec
movsb
add
movsb
lock
cmp
shl
add
lods
out
fistps
cwtl
adc
jno
clc
ret
lea
mov
aaa
dec
ret
loopne
lret
add
cmp
cmp
xor
and
sbb
pushf
xlat
push
js
lcall
jo
out
jp
xor
dec
cmp
sub
cmp
iret
dec
fldl
mov
add
xor
adc
and
mov
ret
sbb
jb
mov
popf
and
jo
aas
pop
pop
dec
js
adc
and
pop
dec
es
inc
bound
push
dec
sbb
mov
sub
repnz
push
pop
loopne
jg
adc
and
jb
xor
mov
and
dec
xchg
push
add
push
test
scas
adc
test
popa
insl
shl
mov
cld
insl
sbb
cmc
mov
hlt
stos
arpl
int
adc
fistl
and
xor
mov
jge
jo
rcrb
test
mov
add
aam
mov
enter
jg
add
xchg
les
sub
sbbl
hlt
and
xchg
in
cmp
mov
dec
in
sbb
xor
cmp
sub
push
sbb
test
mov
sub
outsl
repnz
and
push
dec
or
ficoml
enter
mov
roll
cmp
stos
loope
aaa
lock
mov
pop
mov
xor
jnp
inc
add
adc
jbe
or
push
lea
adc
pop
cmc
adc
enter
call
pop
xchg
inc
in
mov
cmp
dec
rorb
outsl
jb
imul
testl
inc
push
fistl
sub
pop
xchg
push
popa
mov
sti
xchg
add
jno
xchg
push
addl
jno
add
add
clc
push
mov
adc
add
xchg
cs
xchg
test
leave
lcall
lret
xchg
rol
xchg
xchg
inc
jle
add
es
xorl
imul
push
sbb
adc
fsub
add
fisubrl
sbb
adc
fs
xchg
aaa
or
and
mov
fwait
pop
xor
or
add
jle
inc
andl
and
add
pop
add
add
lods
out
mov
lock
in
sbb
ret
inc
push
mov
mov
add
xor
loopne
sub
mov
or
mov
push
dec
mov
push
call
inc
xor
dec
lods
mov
fisubrs
cmp
sbb
mov
sub
jb
or
sti
inc
mov
pop
jns
popa
or
xchg
jae
jmp
in
mov
pop
or
mov
js
cmp
pop
dec
sub
imul
nop
lock
jmp
inc
fs
push
cmp
out
gs
add
push
push
rcl
andl
and
and
pop
jne
test
inc
jns
sti
xchg
mov
rclb
js
in
sarl
mov
jecxz
int
mov
mov
xor
add
mov
mov
lock
xor
imul
outsl
xor
push
lock
lods
dec
jecxz
in
leave
cltd
mov
ret
cmp
add
ds
daa
mov
jl
leave
add
mov
mov
cmc
loopne
adc
faddp
sub
iret
adc
sbb
fcoml
rorl
movsl
stc
push
jo
or
add
mov
xchg
xor
cmp
subb
adc
movsl
mov
inc
jae
shrb
pop
mov
ljmp
add
xor
ret
push
push
stos
lods
or
add
and
adc
popf
data16
sbb
lods
stos
loope
rolb
jo
das
test
inc
push
pop
xor
ret
add
lock
addr16
lcall
sbb
arpl
lahf
mov
loope
dec
rcll
jge
popa
sub
scas
icebp
sbb
adc
mov
xchg
cmp
aaa
stos
cld
vmread
xchg
lcall
int3
subb
lods
add
lock
sbb
mov
test
and
insb
push
sub
jnp
sub
inc
fstpl
pop
imul
sbb
icebp
sbb
andb
hlt
jl
popa
jno
add
inc
cmp
dec
nop
sbb
lahf
mov
aad
push
sbb
dec
xor
scas
sub
arpl
frstor
sbb
cmp
jo
test
jmp
shl
add
sbb
mov
cli
scas
lret
mov
cwtl
ja
cmp
sub
mov
aaa
mov
fnstsw
dec
mov
rcrl
les
or
xlat
dec
or
out
cltd
or
cmc
dec
jbe
cmp
pop
test
ret
xor
ds
mov
dec
or
jnp
push
les
imul
xorl
xorl
adc
pop
pop
js
cs
loope
pop
rolb
cwtl
testl
add
testb
or
adc
enter
adc
mov
adcb
ss
ss
adc
in
jne
loope
jb
call
and
and
cmp
fmuls
sub
lahf
xlat
rolb
aad
and
sti
cld
jb
push
mov
ret
jo
sbb
jno
aaa
call
cmp
loopne
adc
adc
adc
movsl
aam
out
adc
xchg
jo
fistpll
enter
icebp
rcll
packuswb
nop
cmp
sub
cmp
inc
cwtl
inc
lahf
xchg
jo
imul
ja
fidivrs
mov
pop
filds
mov
and
add
push
orb
inc
xor
rclb
sbb
cmp
lret
cs
xchg
loopne
xor
test
jnp
mov
shl
andb
adc
fiadds
pushw
fcomps
adc
or
push
mov
dec
sbb
les
xor
mov
mov
jne
jne
or
lods
pop
xchg
std
add
fistps
xor
push
andl
cmp
cs
jecxz,pn
in
inc
rolb
fbstp
or
mov
lret
hlt
enter
das
and
adc
call
lds
add
and
adc
pop
sbb
mov
call
jb
inc
out
movsb
xor
push
mov
xchg
push
lods
inc
inc
sub
rorb
mov
mov
mov
fcomps
add
add
push
add
aaa
jle
stc
enter
add
sbb
mov
call
cmp
ss
into
xchg
add
mov
and
les
in
hlt
popa
add
xchg
leave
push
shrb
ds
ds
ret
aas
adc
push
mov
ret
or
aam
xlat
mov
jecxz
ret
pop
add
jmp
rolb
ja
sbb
xchg
pop
nop
add
cmp
repnz
fsubrs
sbb
pushf
add
xor
test
mov
push
and
adc
inc
outsb
pop
lcall
mov
mov
xlat
add
push
mov
dec
adc
mov
xor
out
movsb
sub
cmp
sahf
movsb
inc
ljmp
cmp
popf
add
push
inc
jnp
aad
sbb
pop
mov
mov
push
mov
adcl
in
jae
ja
es
sarb
jne
mov
mov
test
jp
and
les
dec
andb
pop
push
pop
mov
pop
loopne
pusha
rclb
add
out
push
push
mov
addb
movsl
lods
xor
pop
sbb
mov
mov
lds
stos
in
inc
pop
cmpb
adc
xorb
ja
or
nop
add
add
or
icebp
test
push
sub
hlt
test
sbb
and
mov
incl
cs
das
xor
popa
adc
test
add
cmpsb
and
ret
sub
jnp
fcoms
and
int
dec
mov
jnp
loop
stos
push
inc
cmp
push
xchg
or
mov
dec
cmp
push
popa
inc
stos
dec
xor
test
inc
mov
gs
xchg
imul
cmpsl
bound
int
and
nop
xor
jmp
mov
loop
pop
outsb
pop
arpl
cmp
mov
std
mov
mov
test
mov
mov
adc
movups
and
mov
out
stos
lods
les
inc
lods
lods
and
sub
das
xor
cmpsb
add
mov
hlt
jae
mov
stos
or
imul
test
loopne
iret
rcll
lock
adc
test
shrl
add
push
mov
xchg
push
fs
repnz
mov
je
scas
mov
mov
out
mov
popa
repz
imul
cmp
mov
loop
int
inc
add
xor
test
out
pop
int
pop
repnz
adc
out
pusha
pusha
pop
loopne
sub
adc
push
sub
pop
std
sub
sub
and
sbbb
add
enter
xchg
push
pop
cmp
push
adc
fldt
xor
inc
stos
mov
imul
dec
cmp
jb
or
or
xor
xor
xchg
arpl
add
ss
adc
add
dec
xor
pusha
loop
xor
add
rcll
mov
outsb
add
fists
pop
mov
sub
lods
pop
out
sbb
gs
xchg
push
adc
push
push
add
mov
cmp
cmp
adc
rcrb
insb
gs
fdivrs
mov
sbb
xchg
ja
enter
hlt
mov
xor
cmp
std
js
adc
pop
into
add
fwait
out
or
les
sub
adc
pop
or
ficomps
sbb
inc
jmp
cmpsl
test
push
dec
ss
dec
mov
fistl
or
or
jbe
xor
ja
dec
xor
jle
lret
sbb
nop
ljmp
lret
fisubs
push
inc
pop
dec
dec
hlt
inc
or
pop
adc
or
xor
adc
and
or
fwait
jnp
add
mov
repz
xchg
dec
mov
inc
ja
addr16
in
inc
add
xchg
insb
rcrb
xor
mov
testb
in
add
nop
scas
jae
sbb
std
test
mov
dec
sbb
adc
je
jl
dec
inc
hlt
dec
aaa
xor
add
enter
jp
xchg
sbb
push
push
clc
sub
mov
leave
push
insb
mov
or
jb
jge
xchg
pop
pop
cltd
mov
aas
notl
sub
sub
das
lock
sub
lock
sub
rcll
inc
repz
adc
stos
sbbb
or
inc
sbb
icebp
and
roll
pop
les
xchg
or
sarb
lods
mov
subb
insb
dec
xor
pop
xchg
add
and
ljmp
inc
and
orl
mov
gs
or
jle
ret
and
enter
mov
cmpb
outsl
sti
mov
fwait
lds
in
cmp
idivl
sub
fisubl
int3
or
and
push
popa
add
and
sbb
xor
icebp
in
shlb
movsl
cltd
cmp
leave
adc
mov
jno
pusha
stos
lds
mov
add
incb
jg
push
lock
mov
aaa
mov
popf
ret
push
adcl
and
xchg
xchg
xlat
push
ret
mov
popa
cmp
mov
dec
imul
pop
mov
cmp
mov
mov
std
or
xlat
xor
imul
inc
adc
pop
cmp
pop
push
cmp
and
dec
jp
pop
shl
jns
stc
mov
sbb
leave
inc
es
push
xorb
or
dec
imul
and
lods
dec
cmpsb
daa
cmp
mov
out
add
insb
pop
add
xor
push
test
addb
sbb
jecxz
and
push
mov
dec
test
addb
cmp
enter
add
inc
mov
test
addr16
inc
loopne
popa
test
and
cmp
sub
pop
fadd
pop
or
push
or
xor
movsb
int3
fimull
pop
ds
pop
cmp
out
xor
lock
ds
les
xchg
cs
cmp
sub
loop
ja
mov
addr16
outsb
lds
or
dec
or
dec
mov
in
sub
push
sub
popf
jmp
js
fs
test
sub
lret
push
jbe
add
cmpsl
mov
stc
scas
mov
cmp
cmp
add
ror
mov
pop
adc
cmp
int
leave
or
lock
adc
roll
adc
movsl
nop
push
test
sub
and
mov
and
out
push
mov
or
sti
mov
aaa
addr16
call
aas
inc
mov
mov
shlb
pusha
mov
push
adc
int3
ret
lock
jno
scas
adc
push
and
jg
lock
data16
ret
out
dec
out
ret
add
xchg
pushf
ss
jecxz
adc
lea
push
ss
mov
adc
pop
mov
lods
mov
cmp
or
pop
sub
jo
inc
nop
inc
test
sbb
jae
scas
pop
jmp
push
mov
pop
xchg
xor
sbb
cs
cmp
add
pop
mov
mov
stos
pop
push
push
push
push
mov
lahf
inc
push
sub
mov
push
pop
fisubs
mov
inc
sti
lock
dec
jecxz
or
adc
inc
mov
dec
shlb
fldenv
add
and
lods
daa
add
test
mov
ja
inc
or
shr
bound
imul
xor
inc
bound
push
repnz
scas
popa
lock
aas
jge
xlat
int
popa
out
movsb
push
sbb
sbb
add
jmp
xor
sysret
dec
add
jnp
clc
shlb
pushf
sbb
and
idiv
push
sahf
push
ret
cmpsl
setnp
xlat
xor
xchg
ja
pop
sti
fdivl
sub
add
adc
lods
jno
sub
push
jno
add
dec
inc
lahf
je,pn
add
andb
dec
and
adc
push
outsl
cltd
gs
imul
or
lahf
test
lock
push
push
cmp
ret
xchg
xor
pop
xchg
clc
in
daa
and
fdivrs
sbb
lock
and
add
dec
inc
pop
loope
push
push
lods
push
out
test
xchg
mov
sub
arpl
cs
sbb
call
clc
in
pop
mov
cmp
imul
cmc
xor
inc
and
lods
imul
movsb
enter
add
rolb
and
dec
and
arpl
jecxz
rolb
and
xchg
dec
in
cmc
xchg
pop
mov
pop
dec
pop
lock
loope
cmp
add
dec
pop
adc
ss
and
xor
imul
push
gs
out
cltd
gs
sbb
mov
xchg
push
cwtl
lahf
or
movsl
out
add
pop
xchg
lock
xchg
jno
jo
pop
mov
clc
ret
pop
popa
cmp
mov
cmp
mov
or
cld
push
rclb
hlt
xor
push
insb
add
xchg
jle
jp
fsubs
push
cs
and
xchg
jecxz
sub
mov
sbb
fwait
inc
pop
ret
adc
mov
je
lret
ljmp
sahf
movsb
push
sti
imul
inc
and
or
in
pop
add
or
sbb
fldt
mov
mov
pop
mov
xchg
inc
ret
inc
mov
lods
and
mov
enter
adc
dec
subps
imul
movsb
cmp
movb
test
movl
lahf
pop
or
inc
dec
inc
mov
negl
std
or
fisubl
jo
rorl
ror
push
sbb
sub
xchg
mov
adc
pop
pop
sub
fwait
adc
loope
push
mov
push
in
stos
cmp
and
or
cmp
dec
or
dec
add
dec
inc
outsl
outsb
call
xor
clc
ja
xor
mov
push
pop
fisubrl
or
mov
daa
pop
adc
xchg
xchg
lds
popf
mov
addr16
shlb
mov
pusha
xor
jns
rcrl
dec
sbb
adc
repz
add
add
add
daa
fisttpll
inc
push
sbb
and
inc
sbb
roll
in
inc
pop
imul
jg
ret
test
das
stos
or
test
xor
outsb
mov
in
stos
ret
sub
add
movsl
dec
ljmp
ret
ret
push
add
insl
sub
roll
cmc
pop
sub
loope
dec
pusha
orl
inc
test
mov
sub
pop
push
stos
cmp
xchg
push
push
or
xchg
test
jge
out
xchg
push
jmp
lock
adc
mov
add
ret
shlb
lods
pop
les
pop
xor
fxch
xchg
test
xor
xlat
xor
test
inc
incl
loope
jecxz
or
xor
out
cltd
push
aas
dec
xchg
in
sbb
jle
and
sub
pop
or
loopne
sub
popf
mov
sub
inc
roll
xchg
fdivp
adc
or
jno
inc
test
vmread
lock
pop
cmc
xor
xchg
add
push
mov
jmp
shlb
fmull
adc
aas
sar
push
adc
jmp
lret
test
int
push
pop
xchg
int3
adc
mov
mov
pushl
sub
cmp
rclb
mov
sbb
xchg
add
aaa
sub
cmp
sbb
sub
les
push
adc
adc
mov
sub
sbb
mov
mov
push
setnp
fcoms
adc
fmull
or
xchg
movsl
movb
or
cmp
movsb
cmp
adc
sahf
jno
push
xchg
dec
out
sub
cmp
aam
xor
stos
fnstenv
fldcw
dec
jo
or
les
push
cs
or
mov
or
or
jl
jne
cwtl
lock
jo
push
push
mov
adc
dec
or
xrelease
push
xchg
cltd
nop
out
add
or
and
inc
mov
sub
les
push
xchg
dec
cmp
sarb
adc
push
addr16
loopne
cmp
xchg
add
sbb
inc
push
fs
inc
sub
jmp
cmpsb
lods
aaa
lea
or
jp
add
fs
xchg
insl
das
roll
or
adc
hlt
sbbl
enter
add
rcrb
or
popf
push
sub
addr16
cmp
sub
jo
rol
mov
or
mov
cmp
jo
call
cs
mov
aad
movsl
enter
aas
mov
add
push
bound
inc
mov
mov
test
lods
mov
add
add
or
cmp
outsb
ret
xor
cmpsl
or
or
js
mov
iret
or
inc
popa
add
test
or
sbb
test
pop
add
push
in
sub
popf
lret
mov
loopne
dec
jmp
hlt
fs
or
shl
dec
int3
fsubs
jmp
and
inc
nop
imul
adc
sbb
or
mov
scas
andb
dec
lea
inc
sbb
mov
jae
push
sub
ja
jae
std
mov
imul
xchg
sbb
fsubrs
fmull
ret
icebp
insl
add
outsl
pop
sub
adc
add
stos
clc
ds
lock
mov
subl
mov
mov
push
loope
add
adc
sbb
fldenv
cmovb
dec
adc
dec
rolb
dec
mov
sbb
push
add
add
pop
cmp
dec
orl
adc
popa
je
pop
push
jno
add
push
mov
mov
sbb
push
and
outsl
xchg
mov
sbbl
xor
adc
xchg
das
shl
enter
xor
repnz
mov
sbb
push
dec
inc
ret
inc
ret
faddl
and
mov
add
add
xor
scas
or
fimull
neg
inc
jbe
outsb
or
shlb
or
add
aaa
adcb
dec
je
gs
rcrb
add
ret
sub
xor
pop
jmp
and
ret
mov
sbb
icebp
scas
ja
push
lock
inc
nop
dec
and
jmp
sub
mov
mov
jge
loope
jo
bound
mov
les
or
iret
into
add
cmp
sub
pusha
test
or
adc
xchg
jne
and
adcb
cmpsb
js
fsubrp
xor
fisubs
lock
bound
add
or
test
scas
mov
imul
sbb
xor
lock
nop
mov
movsb
push
push
repz
mov
lods
dec
leave
sbb
stos
mov
pushf
xor
xor
pop
cmpb
icebp
je
mov
sbb
pop
scas
cmp
mov
jbe
out
sbb
and
dec
mov
xor
jmp
dec
movsl
sub
addb
mov
dec
sub
mov
sub
imul
ljmp
dec
pop
flds
les
add
mulb
pushf
xchg
cmp
sub
and
popl
push
xchg
movsb
daa
aam
xchg
nop
popf
jp
mov
fnstsw
fwait
repnz
sub
imul
stc
xchg
sub
pusha
je
fnsave
and
or
xor
dec
jns
jp
outsl
mov
lock
pop
loopne
addr16
or
loop
test
pop
fcomi
xor
aaa
popa
jns
call
loope
xchg
fadd
or
mov
push
or
or
arpl
sub
dec
sub
hlt
mov
pop
add
sbb
add
fidivl
xor
out
loope
xor
mov
fnsave
int3
jo
cmp
dec
mov
push
pop
push
jb
or
add
jae
mov
pusha
xchg
call
test
in
push
jle
stos
jl
add
sbb
or
mov
mov
jnp
add
pop
cmp
bound
scas
shlb
xchg
fidivl
and
aaa
mov
aad
cmc
movsl
insb
fs
sub
xor
andb
dec
cmp
add
sub
popf
pop
sub
pop
nop
lock
lret
sub
adc
sbb
enter
int
es
inc
popf
xor
or
or
mov
dec
dec
jmp
jne
out
sbb
mov
jecxz
rolb
push
mov
cltd
popa
mov
gs
lods
xchg
pop
dec
push
repnz
lret
shlb
adc
andb
repnz
sarl
imul
push
jne
xlat
sub
and
add
daa
lock
xor
lahf
in
out
and
cmp
inc
les
into
dec
dec
outsl
test
out
in
mov
push
jb
xchg
mov
in
add
push
js
mov
cmp
pop
loopne
pop
mov
sbb
pop
adc
adc
cwtl
sarb
imul
scas
add
cmpb
fiadds
inc
adc
test
xchg
xor
jp
imul
or
pop
mov
dec
cmp
xlat
and
inc
xor
ss
mov
add
inc
inc
push
repz
xchg
loopne
stos
out
xor
push
aaa
fmull
sub
xor
jmp
cmp
adc
hlt
pop
mov
or
das
push
sbb
cli
mov
jle
hlt
mov
mov
movb
fstl
outsb
sahf
stc
inc
mov
add
inc
mov
push
pop
enter
ss
jnp
pop
lret
fs
push
jb
push
leave
jnp
sub
loop
ja
into
adc
xor
int3
adc
adc
mov
out
fcmovbe
cmpsl
mov
ret
push
add
ret
js
cld
test
loopne
arpl
stos
aaa
sahf
push
fucompp
pop
and
cmp
stc
pop
mov
aad
push
cmpsl
inc
gs
add
fisttpll
sub
mov
xor
push
jbe
or
ss
cmc
adc
loopw
pop
cmpsb
or
cld
out
ficomps
and
sahf
xchg
or
dec
shlb
pushf
mov
rolb
xor
jne
add
add
push
dec
pop
fs
jo
jl
push
push
aad
and
add
dec
arpl
inc
push
mov
xor
or
sbb
cs
ret
adc
ror
lock
mov
inc
fucom
fildl
das
add
mov
out
adc
sbb
mov
add
fistps
xor
add
loopne
call
cmp
mov
cmp
sahf
cli
or
jbe
xchg
sbb
rclb
or
xchg
xor
enter
xor
adc
jb
or
xor
push
sbb
call
ret
sbbl
fisubrs
aad
pop
daa
test
roll
cmc
adc
cli
and
xor
cmp
mov
or
and
orb
xchg
pop
sub
in
rorb
push
test
pop
cmp
xorl
or
sbb
lock
outsb
sbb
pop
mov
fldl
push
mov
mov
cmp
stos
out
or
inc
pop
sub
xchg
jns
mov
dec
and
and
mov
sbb
push
cmp
aas
xbegin
leave
popa
push
pop
cld
adc
mov
jne
mov
mov
les
adc
hlt
add
sub
add
test
sbb
xchg
sub
push
dec
int
dec
inc
outsl
or
push
aam
int
mov
jmp
shl
popa
mov
test
adc
inc
cmp
cmp
mov
push
push
ja
mov
popa
inc
cld
sbb
mov
imul
rcll
es
adc
jge
inc
cmp
jno
rol
in
and
insl
fmuls
ja
and
xchg
push
dec
int3
xchg
lahf
addb
pop
daa
outsl
or
lods
cmp
or
or
repnz
sarb
and
mov
xchg
out
push
outsl
ljmp
add
jmp
xor
rol
xchg
shll
lea
add
adc
or
and
movsl
call
mov
pop
xchg
loopne
movb
dec
cmp
ficomps
push
lods
call
pop
pop
pop
and
jmp
pushf
mov
cmp
adc
enter
out
xor
in
inc
lods
mov
in
cmp
add
mov
push
adc
mov
lods
subb
xchg
mov
and
adc
or
addb
out
cli
dec
lock
jbe
and
shrl
insb
fiadds
sti
fstpt
adc
out
jb
insl
test
push
lds
pushf
sub
xor
dec
dec
bound
js
decl
cmc
lea
or
jns
push
lock
mov
int3
and
xlat
adc
js
mov
add
pop
pop
pop
sarb
cmp
movsl
xchg
ret
ret
mov
aas
fcom
imul
add
add
leave
add
xchg
shrb
add
arpl
mov
sub
and
xchg
jo
add
hlt
inc
xor
push
mov
fs
es
adc
adc
shll
and
inc
mov
mov
add
inc
dec
inc
pop
dec
test
mov
in
add
aaa
cli
jmp
mov
icebp
popa
jmp
lock
adc
shr
por
cmpb
xchg
mov
ja
sbb
push
aas
inc
cltd
orb
adc
out
icebp
xchg
dec
clc
cmp
imul
gs
test
jp
clc
pop
cmc
shlb
gs
les
or
mov
movsl
mov
bound
mov
imul
and
add
pop
jge
out
ja
dec
adc
adc
add
adc
insb
jg
addr16
pop
arpl
xlat
inc
cltd
mov
cmp
add
repz
mov
jg
pop
pop
push
inc
jns
sbb
mov
and
mov
cmp
int
aam
cmp
mov
in
sbb
movsb
stos
test
mov
adc
pop
xor
pop
aam
test
ja
sbb
clc
sbbb
sarl
sbb
lds
xchg
lcall
or
shl
sub
pop
adc
xchg
orb
fadds
scas
adc
adc
sub
dec
lock
xor
rorl
shl
sarl
into
sbb
aam
orl
pop
out
div
js
ja
arpl
movsb
dec
cmc
or
cld
inc
rorb
cwtl
jae
cmp
jecxz
adc
adc
in
insl
push
cmp
mov
xor
cld
in
add
push
mov
add
xor
mov
xchg
cmp
or
xchg
mov
push
pop
cs
xchg
cmc
jbe
xchg
sbb
aam
push
xchg
iret
cmp
into
xchg
hlt
cmpsl
mov
mov
cmp
aam
mov
mov
jnp
fiaddl
inc
stc
cmp
xor
sbb
mov
adc
lock
add
fucomip
dec
sbb
cld
imul
push
aaa
icebp
or
fldcw
addb
add
movsb
orl
mov
mov
dec
jmp
scas
sbb
push
push
pop
add
inc
sub
pop
jge
xor
pop
mov
add
xchg
negl
mov
das
imul
cmpsb
stos
daa
dec
lods
and
int3
sub
arpl
insb
jbe
jbe
push
or
gs
sarb
xorps
xorb
or
dec
cmp
movsb
insl
aad
mov
lods
push
mov
mov
notl
scas
in
fwait
sub
call
mov
xor
xchg
dec
pop
dec
sub
or
jg
jno
or
push
add
dec
xor
scas
inc
out
push
adc
gs
push
inc
xchg
or
daa
ds
adc
adc
lock
nop
xchg
and
adc
adc
faddl
sub
and
inc
lds
mov
dec
insb
adc
sarb
test
into
dec
js
rorb
sbb
cwtl
add
push
xchg
sub
xchg
pop
xor
loopne
mov
push
popa
and
jg
jl
mov
cmp
insb
out
push
mov
out
cs
mov
filds
adcb
repz
add
rolb
adc
mov
dec
loopne
fdivrl
lock
test
dec
je
xor
ret
fimull
pop
fsts
into
ja
int3
inc
inc
out
rorb
sub
inc
xor
or
cmp
mov
xlat
fisubrs
mov
insl
and
xchg
xchg
mov
add
fmuls
xchg
popf
add
mov
jno
leave
sub
and
push
fdivrs
pop
add
ret
add
xbegin
push
push
stos
pushf
inc
cmp
out
ljmp
es
loopne
push
mov
xchg
rolb
test
push
scas
xor
adc
push
movsl
mov
subl
pushf
cmpl
jle
lock
or
jnp
mov
aaa
xchg
pop
sub
sbb
pop
test
sbb
add
fadds
jecxz
lock
xor
dec
inc
jp
xchg
xchg
and
add
call
rolb
or
ret
inc
cmpsl
xchg
ljmp
mov
popf
inc
mov
sub
sub
jae
pop
add
pop
xchg
add
pop
add
aaa
inc
jmp
insl
sub
hlt
mov
gs
xchg
mov
or
push
xor
js
xchg
sub
aam
into
shrb
cmp
jp
adc
cmpsb
and
clc
filds
cmp
fstl
cmp
mov
dec
add
add
push
dec
mov
xor
cmp
jo
cmp
fildl
jmp
jno
daa
adc
and
les
inc
sahf
scas
sbb
fimuls
sbb
dec
test
movsb
pop
cli
popa
xor
call
push
sub
cltd
hlt
push
iret
cmp
adc
inc
push
in
push
bound
sbb
sbb
lods
inc
scas
dec
imul
cltd
mov
jae
fwait
incb
ret
adc
ficoms
pop
out
xor
mov
mov
inc
shr
mov
adc
lret
addb
rcll
xchg
push
xor
push
push
xchg
repnz
jmp
fsubrl
imul
pop
push
pop
mov
xchg
xor
jmp
xor
inc
push
dec
sti
out
mov
sbb
ja
aaa
mov
cwtl
xchg
imul
arpl
and
mov
inc
clc
or
or
add
fsubl
lock
jbe
jp
and
pop
popf
xorl
mov
test
xor
xchg
cmp
divl
pop
xchg
pop
dec
lret
sbb
loopne
xor
enter
jecxz
push
aas
mov
cmpsb
adc
adc
insb
mov
add
pop
ss
inc
jecxz
mov
mov
or
mov
test
loop
add
pop
pop
push
inc
pop
nop
inc
pop
sbb
hlt
xlat
push
xor
icebp
test
movsl
cmpsl
bound
pop
daa
xor
cmpb
loope
cmp
pop
pop
inc
sub
adc
mov
mov
inc
xor
adc
cmpsb
fcomp
stos
jne
pop
loope
icebp
xchg
js
pop
icebp
push
xor
jmp
loop
push
sbb
fs
test
add
cwtl
jl
nop
loope
jecxz
fcoms
scas
icebp
adc
mov
inc
jecxz
cmp
xchg
jo
sti
bound
arpl
pop
int3
inc
mov
sbb
sbb
jae
mov
add
push
mov
scas
adc
sahf
and
push
ret
jmp
cmp
js
aad
jmp
cwtl
sbb
or
sbb
and
pop
sub
jmp
xchg
dec
push
jb
sti
dec
mov
add
inc
pop
mov
imul
xor
cltd
rcrb
pop
add
mov
sbb
xor
popa
out
sub
ret
loope
adc
ret
xor
insb
mov
jmp
sahf
add
sbb
dec
test
movsb
sahf
sbb
adc
push
sub
out
jno
and
xor
dec
lock
enter
sub
add
xchg
push
cmpsl
add
jecxz
mov
mov
xchg
or
xchg
push
clc
lock
jae
pop
ljmp
pop
sbb
clc
sbb
subl
insb
jmp
jmp
jecxz
push
ret
and
xchg
xchg
jmp
inc
lahf
and
sbb
mov
sahf
mov
pushf
pushf
ret
xor
int3
xor
imul
shll
mov
and
fldenv
pop
fldcw
add
sbb
jo
ficompl
lcall
xchg
mov
lret
clc
adc
adc
sub
mov
sbb
jbe
cmpsb
loop
dec
aaa
test
inc
or
leave
mov
add
clc
orl
cli
or
outsb
adc
outsl
std
and
loopne
test
dec
in
enter
andl
sbb
sarl
and
lea
adc
mov
sbb
xor
sub
xchg
gs
pop
rorb
in
in
xor
into
and
pop
aas
push
pop
add
cmp
adc
mov
cmp
repnz
mov
jmp
aam
sub
aas
inc
jbe
lret
in
push
cmp
xchg
shl
add
xchg
xchg
adc
sbb
rolb
mov
mov
sub
fists
out
inc
stc
add
mov
and
and
or
rsqrtps
jecxz
mov
movsl
test
or
shlb
jl
mov
fistpl
mov
stc
mov
iret
and
jne
add
add
or
dec
and
out
ret
cwtl
cwtl
jo
scas
add
jecxz
push
adc
mov
ror
inc
popf
enter
mov
pop
adc
dec
push
mov
dec
cmp
or
xchg
mov
arpl
dec
inc
test
add
adc
sbb
lock
lret
test
mov
lock
jne
mov
sub
inc
pop
mov
enter
inc
int3
xchg
adc
jae
add
movsl
movsb
in
xchg
mov
inc
cmp
pop
adc
jb
mov
xor
cmp
inc
dec
inc
shrb
mov
xchg
or
inc
loope
push
shll
iret
loopne
test
insl
iret
shrb
les
insl
jns
cwtl
jmp
and
pop
in
rcl
xor
xchg
xchg
xchg
in
push
rorb
lret
stos
lock
and
push
mov
add
rolb
cmp
add
idivb
pop
daa
scas
lock
or
fs
add
or
ret
lcall
out
and
popa
dec
movsl
mov
sub
pop
dec
pusha
dec
cmp
and
and
ficomps
and
scas
mov
enter
pop
inc
hlt
add
or
push
push
mov
adc
sbb
mov
sbb
push
out
adc
mov
pop
aam
inc
popa
adc
sbb
xchg
or
sub
pop
icebp
jge
js
adc
add
sub
sub
adc
sub
pop
ret
daa
add
push
push
push
rcrb
sub
dec
sub
nop
popf
adc
jno
pop
sbb
ret
loop
sbb
adc
xchg
es
jo
xchg
push
mov
icebp
sbb
add
aas
xorb
jbe
pop
lock
xchg
inc
rolb
jne
call
pop
push
adc
movsb
inc
inc
test
adc
xor
gs
add
loope
lahf
sub
addl
lea
pop
jne
lcall
push
sub
lds
xor
jecxz
or
dec
popa
clc
pushf
vmptrst
xor
movsl
xchg
nop
rcr
dec
lods
sbb
mov
stos
adc
push
or
cmpb
lcall
fs
or
adc
out
pop
add
rclb
mov
add
addr16
movsb
adc
sub
fmuls
std
push
dec
shl
hlt
negl
pop
movb
jle
mov
std
add
aam
pop
mov
dec
push
push
dec
lcall
fldl
mov
push
ret
xor
std
aaa
clc
inc
orb
clc
push
inc
adc
fildll
dec
push
dec
loop
cmc
sti
xchg
insb
ret
inc
pop
adc
inc
and
pop
outsb
add
test
cmp
rclb
test
insb
gs
add
rolb
cmp
ss
push
dec
jmp
lret
clc
sbb
imul
mov
sub
bound
es
sbbb
das
loope
lock
popf
mov
test
in
mov
inc
mov
or
xor
cmp
sbb
ret
xchg
rolb
lea
addr16
adc
xor
jge
cmp
pop
adc
ja
jmp
inc
push
lret
in
inc
mov
icebp
iret
aas
add
ret
push
popa
add
or
adc
push
pop
lods
or
arpl
in
push
cmpsb
scas
popf
cli
test
rcrb
add
sub
sub
pop
adc
test
pop
subl
into
push
cltd
movsb
pop
loopne
fwait
or
cmp
push
shlb
ret
mov
enter
xchg
or
cmpsb
pop
int3
movl
mov
aad
mov
inc
popa
xchg
fistpll
insl
push
std
lods
pop
mov
sti
or
sbb
and
jl
and
xchg
cmpsl
andl
mov
stos
test
fisubs
pop
add
sub
sub
insl
mov
pop
insl
leave
rcl
add
lcall
subps
push
push
rorl
ss
imul
mov
aad
jl
mov
mov
dec
les
adc
test
icebp
cmp
push
fs
aad
leave
arpl
jno
loop
sahf
shrb
into
fstl
ret
sub
mov
cmp
ds
mov
pusha
inc
in
pop
lock
inc
xchg
prefetch
or
or
push
jb
pushf
or
hlt
out
cmp
loope
enter
lret
xchg
jne
sub
shrb
in
mov
stos
sbbb
xchg
sbb
pushf
fcom
or
jo
outsl
sbb
aaa
push
xchg
mov
insl
insb
insl
add
push
loope
js
dec
adc
push
fwait
movsb
aam
int
sbb
sahf
test
adc
jge
sbb
in
mov
xor
aam
mov
add
sub
lcall
sbb
ja
or
sarb
inc
mov
xor
sbb
and
mov
fsubl
cmp
or
out
dec
mov
daa
jne
in
adcl
fsubrs
jecxz
jae
cli
and
push
push
loope
or
cmp
sbb
jns
les
add
jb
ja
or
xor
sbb
add
inc
pop
mov
sbb
inc
lods
xchg
adc
out
jo
pop
add
das
movsl
mov
xor
out
xor
arpl
adc
ja
aaa
js
sbb
and
es
paddq
jno
xchg
cs
test
push
push
sahf
sbb
dec
add
sbb
sub
fdivl
stos
bound
rcrl
lods
sub
adc
sbb
mov
sbbb
xchg
sub
shrb
out
mov
mov
sbb
pop
add
push
mov
jmp
jno
jg
xorl
jecxz
lar
or
add
adcb
jo
adc
push
xchg
cld
int
outsl
mov
in
daa
stc
addb
loop
sub
clc
nop
sahf
push
jl
sub
sub
cmp
pop
cmpb
and
xor
ds
xchg
testl
push
pop
sub
add
out
fists
test
rcrl
sub
xor
and
dec
pop
stos
cmpsl
sbb
sbb
inc
es
xchg
pop
shll
mov
mov
adc
inc
dec
movsl
dec
loope
arpl
fdivp
push
je
scas
sbb
pop
les
cmp
dec
test
aam
dec
add
pop
test
mov
mov
push
mov
aam
xchg
outsl
push
cmp
add
mov
jl
rol
add
call
ret
cli
lods
icebp
and
dec
cmp
mov
sub
in
xchg
popa
dec
int
add
pop
sbb
inc
jo
sti
test
test
inc
ret
xchg
mov
sahf
pop
add
sbb
test
loope
enter
add
or
push
ret
mov
xchg
movsl
xchg
adc
or
and
cmp
or
adc
lock
add
outsl
shll
cmp
test
jp
pop
in
and
cmp
insl
nop
ret
arpl
pop
divb
sbb
nop
cltd
pop
pop
dec
dec
test
xor
pop
mov
cmpsb
loopne
gs
pop
call
cmovno
rcrl
jle
push
push
dec
xor
lds
sbb
insl
xor
std
xchg
mov
xchg
push
rcrl
adc
test
inc
pushf
es
mov
clc
jo
xchg
inc
leave
jp
pop
xchg
bound
sbb
jae
sbb
lret
in
sub
adc
adc
movsb
lret
out
sbb
xchg
stos
roll
jmp
fists
add
rcrb
call
out
add
js
cmp
push
and
hlt
mov
nop
test
sbb
adc
arpl
push
pop
push
iret
pop
or
sbb
stos
pop
inc
and
mov
out
outsb
fidivl
ljmp
sbb
sbb
dec
bound
fmul
xor
rcl
xor
dec
in
xchg
sub
xorb
sbb
rol
add
push
or
loopne
les
jno
js
inc
inc
inc
pop
dec
lret
jbe
mov
sbb
call
push
lods
xchg
fadd
cmc
out
es
adc
mov
les
xlat
cwtl
enter
adc
pop
jne
inc
jb
test
loope
faddp
mov
dec
mov
mov
inc
push
xor
cmp
or
lock
repz
lods
push
mov
xchg
and
sub
insl
call
mov
adc
lods
xor
cmp
or
dec
or
imul
add
sbb
sti
mov
pop
xchg
cmpsb
cs
push
fimull
nop
add
and
les
sub
subl
add
or
dec
jmp
and
jo
fimuls
int3
add
mov
pusha
xor
notl
add
rorl
loope
mov
add
fwait
dec
cltd
and
sub
jle
insb
ss
ret
rorl
addr16
adc
and
inc
ja
dec
mov
roll
imul
jo
inc
test
cmp
push
xchg
movsb
dec
mov
lcall
cmp
cld
shlb
mov
lahf
dec
push
adc
scas
pop
out
mov
outsl
push
xor
sahf
pusha
sub
popf
je
and
pop
pop
imul
test
mov
idivb
lock
fcmovne
nop
out
insl
loopne
xchg
xchg
mov
mov
push
sub
cs
pop
mov
mov
add
xlat
add
push
xchg
aaa
das
imul
repnz
push
mov
dec
cmpsb
inc
add
sbb
lock
int
mov
divb
inc
data16
fs
and
xor
nop
or
mov
out
pop
ss
insb
push
cmpsb
mov
sbb
rcl
inc
jnp
inc
bound
int3
pop
rcll
sbb
pop
leave
hlt
or
mov
fidivs
xor
repz
sbb
int3
and
arpl
dec
dec
adc
xchg
je
mov
push
dec
fdivrs
clc
xor
inc
dec
ja
lahf
lods
xor
dec
imul
jmp
add
mov
sub
arpl
iret
adc
mov
bound
inc
fidivl
pop
xchg
dec
insb
mov
fsubr
das
add
add
sbb
or
dec
js
je
cmp
aaa
sbb
sbb
mov
or
data16
mov
pushf
jle
or
xor
adc
push
fcomps
repz
xchg
fiaddl
sub
mull
mov
xchg
add
loopne
xor
inc
push
sahf
push
inc
pop
sbb
cmpsb
xor
and
std
jbe
stos
or
xor
jl
orl
ret
test
les
movsb
ret
loop
mov
pop
or
dec
bound
dec
add
add
clc
bound
adc
adc
sbb
add
leave
cwtl
rcrl
fadds
fmuls
push
movsb
inc
lret
push
outsb
push
inc
imul
inc
jbe
es
rclb
xchg
inc
push
push
test
psubq
cmp
daa
sbb
xchg
push
pop
sub
les
mov
data16
sbb
sbbb
in
cld
enter
div
js
jo
lock
or
xchg
mov
out
mov
and
dec
data16
insb
negl
adc
push
and
xor
jo
push
dec
aam
test
lret
movsb
decl
out
lret
cmp
mov
adc
add
push
nop
lcall
popa
cmp
roll
mov
ja
xchg
fbld
lret
call
lock
dec
adcb
clc
testb
sub
mov
sbb
cmp
mov
add
adc
hlt
and
movsl
icebp
call
jb
mov
or
and
xor
mov
loopne
int3
or
pop
dec
sbb
or
insl
add
ret
xchg
out
pushw
jl
ret
mov
add
push
popa
loope
xchg
add
jp
mov
inc
lock
test
aaa
mov
mov
mov
adc
mov
imul
adc
sub
cmp
cli
test
push
pop
loopne
mov
divb
fcoml
fstps
fstl
add
sbbb
loopne
mov
or
lcall
es
jb
push
rolb
aaa
mov
inc
mov
call
pop
and
xor
pushf
lock
jecxz
xor
je
and
sub
pop
jmp
roll
cmp
dec
sbb
push
sbb
pusha
cmp
xor
bound
das
sub
pusha
int3
sub
add
mov
cmp
cmp
loopne
or
mov
mov
inc
or
sbb
shlb
mov
aam
loop
xor
mov
lock
lods
popa
aam
pop
add
dec
fsts
mov
xchg
data16
hlt
loope
pop
and
push
mov
and
ret
sub
arpl
or
lods
adc
jp
sahf
push
pop
pop
cmp
sahf
hlt
inc
sub
mov
xor
inc
mov
fmull
sbb
ret
or
cltd
add
adc
lret
xor
outsb
jecxz
repnz
jne
iret
pop
pusha
add
and
xorl
cmp
scas
xorb
sti
add
dec
add
xchg
and
add
and
push
int3
sub
cmpl
fs
test
aaa
gs
daa
mov
pop
cmp
rcrb
call
or
in
mov
dec
jo
mov
testl
daa
sbb
fs
xchg
dec
out
and
and
loopne
sbb
das
cmp
fucomp
jnp
or
or
xchg
test
adc
repz
cmp
sbb
mov
add
cmp
fwait
mov
rorb
dec
xchg
jb
insb
or
inc
aad
and
jbe
sub
pop
add
inc
xor
rorb
dec
cmpsb
or
arpl
inc
ret
fadd
inc
clc
nop
jns
pop
leave
sbb
adc
arpl
cmp
lods
dec
sub
mov
cmp
scas
inc
dec
ret
fwait
pop
xor
icebp
or
sub
xchg
pop
push
test
cwtl
add
sub
sahf
xchg
lods
nop
and
sbb
dec
jno
inc
jp
add
jnp
pushf
dec
adc
mov
lods
or
push
push
mov
loop
inc
stos
sbb
scas
pop
add
call
push
leave
and
cltd
aam
and
lock
push
push
add
inc
dec
sbb
mov
xchg
dec
mov
or
or
sbb
pop
and
lock
mov
push
mov
adc
jl
addr16
jecxz
push
or
sbb
cmp
xchg
or
imul
nop
dec
push
jo
mov
test
inc
mov
pusha
and
xchg
fbstp
adc
dec
cmp
add
sbb
jo
and
add
or
test
jne
inc
xor
fbld
cld
xor
sub
mov
cli
test
mov
or
push
push
clc
lahf
jae
mov
ja,pt
xchg
sub
inc
jo
adc
sarb
rcr
lds
add
or
sbbl
sbb
mov
jno
mov
lea
sbb
or
xor
mov
xchg
jb
sbb
fstpl
test
or
push
cs
mov
xchg
cld
rorl
adc
mul
xchg
xor
divl
sbb
sub
cmpsb
mov
bound
stos
xor
insb
insb
mov
or
sarl
dec
cmp
lret
clc
lock
inc
jg
add
adc
and
pop
push
sbb
cmpb
xor
jmp
aad
jnp
xchg
mov
or
loope
arpl
pop
mov
cmp
xor
mov
pusha
insl
and
ficoml
mov
dec
cwtl
push
lcall
mov
mov
int3
adc
cmc
rcll
inc
fldcw
iret
cmp
icebp
add
mov
xor
js
adc
push
ffree
enter
inc
fcmovnb
add
dec
pop
emms
push
and
loop
inc
dec
mov
sub
mov
push
mov
inc
popf
aaa
ror
cmp
in
cmc
aad
shll
mov
mov
jle
sbbl
mov
sbb
push
jae
outsl
insl
or
dec
add
lods
mov
xchg
imul
out
sbb
pusha
dec
cld
loope
fnstsw
push
add
jae
scas
lea
sbb
ret
test
and
adc
rol
pop
mov
mov
loopne
mov
filds
lods
add
mov
sbb
adc
add
xchg
lods
push
xchg
imul
xchg
add
sbbl
ds
mov
add
adc
jp
or
das
test
gs
add
fsubrs
inc
lods
fnstenv
push
add
femms
fsubl
add
pop
add
into
loope
mov
rolb
inc
out
mov
mov
push
cmpl
jb
nop
pop
inc
or
mov
xchg
mov
rcrb
aam
fimuls
mov
xlat
and
rcr
dec
add
movsl
push
fldenv
cmp
mov
or
mov
fstpl
movsb
push
mov
mov
push
sub
cmpsb
xor
mov
inc
testl
mov
and
xchg
ljmp
imul
adc
jecxz
fwait
cmc
insb
test
sbb
cli
adc
lds
rcrl
jo
or
cwtl
pop
bound
dec
or
fstpt
cmp
lahf
jl
push
and
xor
inc
loope
les
rorb
cmc
insl
adc
add
dec
fisttps
fwait
add
ret
sbb
addr16
jne
push
jb
andb
lods
adc
mov
mov
cmp
cmp
xor
pop
push
das
jb
cmpsl
pusha
adc
cmc
jle
pop
daa
in
lock
push
mov
roll
xchg
sbb
add
sbb
xor
test
add
sub
pop
fwait
insb
adc
pop
or
adc
out
and
adc
push
cmp
dec
ret
fbld
pop
sub
xchg
icebp
xor
inc
xor
leave
aas
fistpl
addr16
inc
insl
xchg
test
fdivs
lock
mov
sub
loopne
data16
xor
push
mov
jecxz
orl
ret
xchg
loopne
stos
cmp
inc
fnstenv
and
pop
dec
shll
nop
mov
ljmp
or
insl
push
test
or
aaa
and
cmp
lods
fstpt
nop
hlt
dec
loope
fsts
jno
and
negb
nop
sbb
stos
lret
imul
or
dec
lret
loopne
and
ret
loop
call
or
aaa
icebp
ret
arpl
xchg
fldcw
mov
jmp
and
sbb
ret
movsl
ret
or
popf
sbb
fldt
or
stos
int3
adc
add
xor
cmp
xor
add
imul
mov
dec
ret
mov
xchg
mov
jnp
push
sar
into
es
inc
dec
popa
sbb
mov
insb
js
popa
mov
jmp
adc
mov
shrl
sbb
test
inc
subl
ja
sahf
inc
jae
popa
and
ficoms
push
xor
or
add
sbb
inc
mov
rclb
test
fistpll
test
push
mov
rcrl
adc
aam
cs
addb
orb
mov
loop
adc
push
lahf
test
xchg
mov
adc
inc
inc
aaa
mov
jge
dec
push
add
in
hlt
add
rorb
insl
dec
jo
sahf
fistps
xchg
push
test
aam
push
fnsave
mov
imul
jl
cwtl
fwait
xchg
or
fs
les
imul
dec
or
add
adc
jo
push
jno
test
mov
les
cmc
test
mov
adc
enter
push
mov
lock
cld
adc
mov
out
xchg
fmuls
repz
sti
xlat
xchg
dec
adc
jle
popa
imul
negb
jb
and
xorps
push
adc
pushf
ret
lretw
cmp
or
adc
cli
or
fdivs
ss
rcrl
icebp
inc
mov
pop
test
test
hlt
in
add
movsb
xchg
daa
push
push
out
into
popf
mov
or
das
test
arpl
ljmp
repz
mov
daa
call
jb
out
sbb
sub
repz
pop
pop
mov
mov
cs
int
imul
mov
daa
add
mov
jae
data16
and
push
inc
mov
fs
jae
xor
push
cmp
sbb
adc
pop
mov
call
dec
pop
out
mov
or
fildl
pop
add
or
sub
jecxz
pop
inc
sbb
cmp
mov
cmp
inc
and
add
pop
jnp
add
push
in
inc
scas
and
fisubs
dec
pop
push
cmpl
aaa
rolb
or
pop
inc
dec
dec
jmp
cmc
addl
andl
js
mov
loop
in
mov
xlat
ret
fadds
and
add
scas
mov
sbb
lock
fxch
inc
adc
mov
sti
ljmp
je,pt
push
mov
add
sti
ret
sub
inc
inc
adc
test
das
push
xchg
gs
xlat
mov
lods
aas
loop
cmpsb
dec
mov
repz
fbld
test
or
and
mov
jg,pt
aad
mov
sar
out
cmp
ss
mov
loope
imul
sub
pop
cmpsl
push
xchg
dec
xchg
loope
xchg
push
xor
mov
mov
ret
insb
data16
and
xchg
addb
sub
xor
add
mov
jge
adc
dec
rcr
sub
outsl
or
or
push
incl
lods
push
or
rolb
cwtl
add
pop
shl
ret
aam
pop
std
out
pop
dec
inc
lock
or
xchg
icebp
dec
jnp
push
add
cmp
lock
or
and
mov
addr16
add
mov
pop
pop
enter
test
pop
out
xor
mov
dec
loope
sbb
ljmp
push
dec
mov
je
cs
mov
pop
xor
mov
adc
inc
cmp
sub
xor
inc
add
sub
orb
int
xchg
mov
mov
imul
adc
jge
sbb
sbb
enter
mov
rorl
mov
xor
pop
mov
movsl
dec
inc
sub
push
fdivs
push
jne
adcb
add
xor
dec
xchg
cmc
and
sbb
hlt
ret
push
outsl
push
or
mov
into
add
pop
push
mov
xor
jecxz
movsl
cltd
js
loopne
xorb
stc
test
insl
mov
sbb
loopne
dec
sti
cmp
pop
mov
add
dec
aad
cs
cwtl
stos
ja
insb
insl
push
cmp
jle
lock
inc
mov
and
push
push
mov
out
xlat
das
sbb
mov
sbb
jg
fnstcw
push
dec
int3
xor
xor
sub
lea
addr16
mov
mov
cmp
push
adc
daa
and
cmp
xor
sbb
mov
loop
inc
dec
fildl
ret
lea
lods
fwait
data16
add
mov
cwtl
fldt
imul
loope
aad
shrb
cmpsl
je
stos
or
dec
push
aam
xchg
inc
add
and
std
pop
adc
jb
adc
stc
mov
les
xchg
and
aam
mov
les
mov
and
bound
rcrb
jns
hlt
cwtl
or
and
lea
pusha
daa
pop
jl
filds
mov
push
inc
push
decl
lret
inc
ljmp
adc
pop
push
les
iret
arpl
cltd
test
loopne
fadds
add
js
insl
pop
fwait
adc
and
fsubrl
dec
inc
bound
les
or
and
scas
lods
cld
add
xor
mov
jge
insl
int
fsts
mov
push
add
cmp
add
push
and
jecxz
fsubr
test
sbb
or
sub
xchg
adc
inc
xchg
ss
stc
adc
cmpb
sbb
ds
cltd
orb
jp
xchg
dec
cs
fs
pop
rcll
jbe
or
in
or
mov
and
jp
xor
or
es
dec
xor
add
cld
sbb
xchg
and
xchg
inc
scas
stos
ret
das
dec
xlat
in
lock
cmpl
test
pop
cli
cmp
xor
je
sub
xchg
hlt
dec
fistps
jae
mov
insl
ss
cld
nop
arpl
add
or
lods
mov
pop
add
loop
sbb
dec
test
pop
fs
xchg
pop
inc
call
inc
fildl
mov
je
arpl
xor
push
or
dec
dec
mov
std
cmp
or
mov
loope
std
mov
rcll
xchg
sub
sbb
and
push
prefetch
or
adc
in
addr16
sub
mov
adcb
out
xchg
pop
sub
and
add
les
jp
xor
icebp
sub
icebp
xlat
and
or
cwtl
imul
pusha
sub
dec
les
add
or
xor
mov
xchg
inc
inc
les
pusha
stc
popa
cmp
loopne
mov
ljmp
mov
mov
sub
adc
xor
es
pop
cmp
push
pusha
mov
or
cmpsl
mov
and
sahf
pop
dec
test
add
sbb
mov
cmp
add
push
xchg
gs
movsb
lock
lock
std
lods
imul
cmp
sbb
mov
add
sbb
in
test
cmp
xchg
push
add
push
cmp
inc
jae
cmp
and
cwtl
inc
mov
adc
mov
mov
or
add
mov
mov
imul
adc
pop
fildl
pop
js
and
dec
cmp
clc
mov
inc
or
pop
mov
jle
xchg
les
sbb
repz
bswap
or
popf
and
push
outsl
sub
adc
data16
mov
cmpsb
cmpsb
jge
jecxz
mov
lods
pop
cmc
add
and
rolb
xchg
iret
rol
inc
mov
fbstp
sbb
push
mov
and
call
pop
jno
adc
bound
mov
add
jns
addr16
stos
xchg
rcr
pop
cld
ret
mov
push
mov
leave
jecxz
popf
xor
cmp
adc
mov
jno
icebp
dec
data16
add
popa
roll
sub
ljmp
adc
inc
push
ds
push
dec
add
cwtl
cs
pop
push
ret
mov
push
or
add
xchg
xor
out
sbb
ljmp
enter
sbb
sar
and
sbbl
in
popa
int3
push
in
push
shlb
mov
or
or
push
add
loopne
lea
xor
push
xor
aad
test
add
push
pop
sbb
out
sbb
pop
mov
dec
daa
loopne
shlb
scas
lcall
imul
inc
mov
xorl
sub
ds
jnp
dec
imul
lock
pop
pop
dec
add
mov
out
cmc
je
sbb
push
push
mov
loope
mov
call
dec
mov
decl
add
test
cmp
adc
mov
push
pop
lods
sbb
out
sub
bound
out
dec
lock
xchg
adc
imul
cmp
loop
lods
xlat
sbb
lret
cmp
push
fs
adc
jb
jmp
add
mov
mov
add
cmp
js
fidivrl
sub
test
mov
pop
mov
sub
push
xchg
sarl
push
adc
mov
sub
mov
xchg
dec
or
mov
sbb
mov
mov
push
pop
push
int
pop
sub
lods
jo
mov
add
movsb
push
pop
addr16
cmp
sarb
pop
push
lahf
aaa
fdivl
shl
lock
jle
in
sub
int3
test
push
mov
sub
lock
or
cmp
dec
lock
setnp
rorl
test
and
je
mov
pop
adc
push
mulb
push
stos
mov
cmp
or
sbb
popf
out
or
mov
add
mov
stos
and
lahf
nop
sahf
sub
daa
loopne
gs
mov
xor
stos
push
inc
sbb
les
mov
imul
dec
pop
divl
pop
mov
mov
mov
sbb
dec
add
mov
sub
sub
rcrl
mov
inc
mov
dec
leave
jecxz
gs
movsl
mov
pushf
cli
or
cmp
or
xor
add
bound
dec
popa
xchg
and
xchg
cwtl
add
jl
mov
sbb
adc
popa
not
fs
mov
lcall
mov
imul
sub
mov
xchg
adc
push
cmpsl
mov
and
jbe
fcompl
cmp
sub
in
dec
add
xchg
cmp
cmpsl
test
add
ficompl
xor
dec
fsubp
sbb
inc
mov
or
pop
push
sbb
dec
int
cmp
dec
lock
orl
arpl
pop
dec
addr16
or
xor
inc
addr16
dec
mov
add
das
mov
mov
dec
cmp
loopne
dec
into
aam
adc
out
sbb
push
inc
adc
push
push
jne
push
fwait
xor
sti
fsubl
fsts
add
jbe
mov
icebp
clc
les
cmpsl
out
test
sub
inc
pop
out
roll
xor
add
aad
or
pusha
cwtl
rdpkru
mov
cwtl
push
xchg
repz
mov
mov
lods
adc
pop
sti
insl
dec
mov
mov
jle
out
icebp
mov
xchg
cmpsb
mov
popa
mov
mov
push
inc
or
mov
add
push
dec
fiaddl
aas
popa
add
pushf
test
pushf
pop
push
pushf
push
push
fldl
sub
jb
inc
or
dec
and
xchg
orb
mov
in
cmpsb
push
in
fdivl
insb
lods
inc
mov
mov
movups
in
or
movsb
mov
in
sbb
jo
xor
cs
les
outsb
ljmp
dec
sub
sub
lret
push
and
jne
pop
cmpsb
and
scas
mov
in
pop
cmp
mov
push
or
xchg
push
dec
xor
loope
and
loopne
dec
nop
push
mov
mov
ret
subb
push
mov
jo
adc
add
outsl
mov
call
adc
mov
mov
sbb
stc
add
sbb
jnp
dec
ret
adc
inc
or
mov
shlb
xor
cmp
adc
repnz
pop
rorl
mov
cmpsl
gs
dec
mov
add
xor
repz
pusha
and
jne
mov
inc
mov
mov
adc
sub
jl
add
or
fucomip
xchg
mov
imul
xor
push
sub
sbb
sbb
in
nop
pop
rolb
pop
sbb
sbb
cmp
repz
pop
and
xchg
scas
scas
call
xor
lea
ficoms
push
cmp
sbb
add
clc
jle
aam
push
mov
sbb
pop
insb
and
adc
dec
fstpt
test
mov
dec
inc
cmp
out
test
inc
andb
xchg
or
cltd
repz
cmpsb
inc
pop
call
rcr
cmp
ja
push
dec
mov
jns
in
sub
nop
test
adc
xor
in
js
push
in
fsubl
push
mov
je
clc
sub
cmpsb
dec
and
cmp
call
and
lcall
or
insb
adc
adc
in
jne
daa
rcll
fdivs
ja
int3
sahf
push
and
adc
jge
add
pop
or
push
cmp
jg
or
xchg
xchg
dec
cmp
leave
inc
loop
xchg
icebp
pushf
jl
push
loope
push
mov
cmp
hlt
fistpl
lods
jmp
push
outsl
adc
jo
jg
loop
fistpll
repz
ficoml
adc
stos
ss
dec
sbbb
aas
and
push
insb
and
mov
sbb
and
dec
sti
mov
pop
push
xor
push
test
or
push
out
pop
adcl
fiaddl
imulb
push
sbb
sub
jb
loopne
test
stos
xchg
sti
xor
js
adc
andl
jb
inc
aas
sub
add
imul
lret
insb
lock
add
nop
js
fdivs
das
push
int3
cmpsl
add
dec
rcr
sbb
mov
add
mov
cmp
cmp
or
addb
jbe
cmp
pop
rcll
mov
mov
pop
jo
inc
gs
and
or
mov
test
pop
cmp
xchg
dec
jb
inc
aaa
rcrl
adc
jae
ret
xchg
add
cs
push
or
in
mov
add
mov
add
mov
stc
fcmovne
jne
or
aam
aam
andb
insb
mov
xor
lahf
xchg
mov
jl
xchg
insl
test
test
sub
lret
mov
sarb
andb
lods
ss
xchg
mov
sub
repnz
mov
cmpsb
pop
or
dec
sbb
sbbb
or
shl
or
and
cmp
pusha
filds
xchg
popf
or
sbb
dec
xchg
lock
int
push
cmp
daa
mov
push
das
jb
shr
jne
push
push
sahf
and
xor
or
add
push
ret
icebp
or
fcomps
add
insl
and
mov
cmpsb
clc
inc
insl
aad
icebp
loopne
cltd
cld
inc
in
mov
push
aam
mov
aaa
cmc
aaa
mov
les
shrb
lods
push
jmp
jg
movsb
adc
shlb
sbbl
mov
push
or
lgs
jnp
and
test
xor
sub
mov
mov
insb
pop
mov
shll
loope
aam
js
lret
pop
add
enter
das
jo
jae
xor
sub
add
sbb
stos
dec
add
sbb
cwtl
stos
pop
and
jnp
pop
sarl
cli
sbb
insb
add
sub
and
push
mov
test
test
add
sbb
outsl
jl
lret
pop
push
rol
and
xor
push
test
ret
arpl
mov
mov
xchg
mov
add
insl
jne
xor
test
lret
subl
jp
sbb
inc
rcrb
loope
push
xlat
mov
aas
je
jo
push
push
mov
pop
ret
iret
popf
lock
pusha
mov
sbb
xchg
xchg
ljmp
clc
ret
pop
ljmp
subl
xchg
adc
test
ret
mov
or
jge
ja
add
loopne
out
push
add
xor
icebp
aaa
fucomi
aaa
sbb
repnz
subl
loope
les
sbb
mov
sbb
inc
lcall
out
xchg
nop
in
push
push
mov
fildl
mull
mov
iret
fcomip
sbb
insb
add
add
dec
ret
dec
addb
dec
in
xchg
jge
jecxz
jns
and
sbbl
in
and
out
fwait
leave
add
inc
int3
std
dec
mov
mov
xchg
aam
add
sbb
int
mov
mov
mov
push
mov
xchg
push
leave
mov
je
adc
lcall
inc
push
pop
push
and
pop
je
int3
adc
les
and
adc
sub
test
xchg
mov
xor
dec
xor
inc
pop
jnp
test
je
push
add
add
dec
iret
xor
and
arpl
psrlw
adc
inc
or
sbb
bound
fwait
add
bound
push
nop
sbb
jg
sbb
sar
lret
pop
add
cmc
mov
push
lods
inc
sbb
and
ja
xor
loope
rcl
mov
mov
xor
push
add
in
pop
and
adc
inc
dec
pop
xchg
lcall
fwait
dec
mov
mov
and
mov
adc
ret
cmpsl
cmp
or
arpl
xchg
outsb
add
mov
stc
or
test
rclb
or
cld
test
call
shlb
add
icebp
inc
call
pop
dec
and
jmp
inc
or
push
mov
add
lock
mov
inc
outsl
cmp
imul
shlb
sbbl
push
mov
xchg
mov
sbb
pusha
mov
mov
mov
ret
sbb
cmpsl
push
adc
test
or
es
sbb
mov
cmp
je
push
mov
mov
push
inc
jle
out
xor
sbb
mov
dec
mov
insl
mov
dec
cmp
xchg
pusha
mov
cs
pop
cmp
aaa
hlt
push
xor
lea
mov
mov
push
pop
pop
push
push
sub
push
pusha
ds
mov
add
in
dec
add
mov
xchg
outsb
sub
sbb
movsl
push
adc
mov
insl
push
push
add
ja
mov
dec
inc
iret
or
add
cmpsb
js
sbb
scas
adc
dec
xchg
lock
leave
in
xchg
sbbb
jnp
ljmp
or
xchg
stc
insl
xor
ljmp
xchg
mov
add
arpl
outsb
add
adc
inc
bound
ljmp
mov
sti
rorb
push
cwtl
or
mov
leave
add
dec
pop
sbb
jl
mov
mov
cwtl
imul
daa
pushf
mov
or
sbb
clc
pop
sub
pop
mov
xchg
lods
out
lret
cmpb
bound
sbb
gs
mov
or
xor
lret
iret
dec
out
fmuls
adc
sbb
pushw
xlat
inc
sub
sbb
fwait
addl
fisubrl
scas
aad
lods
adc
and
mov
mov
or
inc
scas
mov
popf
lock
mov
pusha
andb
pop
cmpb
loopne
and
mov
jno
sbb
sbbb
add
fwait
aam
jne
mov
fs
inc
idivb
cmp
sub
dec
mov
sub
lcall
or
jmp
fisubs
cmp
mov
add
xchg
xchg
add
cli
mov
dec
icebp
call
psubusb
inc
arpl
jl
mov
pop
psubsb
dec
mov
jl
or
fadds
push
adc
jns
mov
jp
or
ss
sub
data16
ds
sub
inc
adc
or
ja
repz
aas
or
sbb
xlat
adc
orb
adc
cld
je
dec
enter
add
fdivrl
inc
push
or
pop
sbb
adcb
adc
loope
fucomp
inc
push
mov
clc
fildll
mov
and
movsb
cmp
add
loopne
gs
sbb
xchg
push
and
jmp
test
and
sub
pop
or
insb
dec
xor
inc
gs
orl
sbb
call
sbb
js
iret
rclb
and
xor
mov
or
inc
dec
sub
pop
adc
cmp
pop
cli
pop
lea
shlb
lods
push
jne
and
or
inc
dec
cli
mov
lods
addl
and
pop
and
pop
leave
enter
push
xchg
ret
or
addps
ja
xchg
mov
and
push
sbb
call
orl
push
in
imul
mov
mov
hlt
pop
xor
mov
inc
fwait
jle
mov
inc
test
pop
dec
pushf
mov
add
pop
pushf
or
cltd
inc
fisubrs
adc
xor
movsl
clc
dec
lds
mov
int3
dec
sub
lea
mov
sahf
out
sub
inc
inc
push
pop
xor
pop
movsl
inc
adc
pop
popf
mov
adc
push
flds
xchg
movsl
jge
clc
xchg
jno
out
les
movsl
pop
push
mov
mov
or
and
out
lret
sbb
jb
adc
add
out
adc
mov
push
or
in
gs
jne
add
pop
xor
stos
cmp
in
lock
icebp
nop
int3
cmpl
xchg
sbb
sub
aad
or
pop
lahf
in
inc
sahf
addr16
add
or
movsl
dec
mov
shrl
popf
cmc
loop
jmp
or
clc
push
popf
outsb
mov
jns
das
mov
pushf
int3
adc
xchg
cmp
in
data16
nop
test
adc
xor
out
daa
jne
inc
nop
outsb
jecxz
mov
xchg
daa
sub
sub
mov
xchg
rcll
pop
jne
sub
loope
push
jno
sub
pop
or
jns
sbb
adc
push
push
les
adc
adc
lock
add
fwait
mov
jl
fistpl
cmp
cmp
and
test
mov
cmpsb
lods
or
jp
pop
movsl
mov
dec
in
cltd
lock
adc
loopne
xchg
xchg
pop
outsb
add
inc
lea
add
mov
add
pop
pop
scas
mov
or
das
mov
add
sbb
and
mov
mov
adc
ljmp
das
rolb
popf
mov
jl
mov
outsb
mov
mov
dec
imul
cmp
imul
insl
sub
jl
xchg
jb
sbb
sbb
das
dec
mov
inc
push
sbb
xor
hlt
or
or
pop
cmp
stos
mov
pop
jbe
call
push
cs
add
adc
adc
rclb
xor
fdivrp
mov
push
lcall
mov
push
fisttps
popf
mov
fdiv
div
push
add
fiaddl
xchg
ret
xor
sub
je
outsl
std
xor
lock
mov
fmull
mov
pusha
ret
stos
mov
scas
push
mov
push
leave
inc
ret
jae
pop
xor
rcrl
sub
adc
ret
ja
cmp
pop
insl
or
add
xchg
and
insb
or
out
shrl
push
sub
jbe,pt
mov
push
loop
pop
and
lods
adc
xor
adc
push
add
in
and
mov
ds
loope
jmp
pop
pop
nop
mov
call
push
jnp
mov
pop
mov
add
out
and
insl
pop
sbb
jle
fcoms
nop
repz
xchg
sbb
xchg
fs
mov
and
aam
fcompp
ja
lret
xchg
or
add
dec
ret
push
std
xchg
iretw
fnstenv
add
push
xlat
cmp
fstpt
rclb
lock
xchg
cld
pop
fistpl
int3
xchg
push
loop
add
sbb
jne
dec
cmp
dec
push
pop
js
int3
jecxz
jnp
and
or
rorl
or
fsubl
xchg
insb
test
push
dec
xor
in
push
mov
xchg
data16
inc
xchg
fistl
push
mov
xchg
les
addb
sbb
xlat
add
js
cmpl
add
inc
inc
sbb
mov
pop
pop
or
pop
daa
cmc
scas
insb
and
add
adc
ret
lods
cmp
or
xor
push
or
lock
rolb
sbb
jle
stos
sbb
push
mov
mov
mov
cmp
ror
lea
cwtl
sbb
xorl
push
js
xor
in
shlb
ds
cli
inc
or
adc
xchg
and
sub
js
lret
jle
sarb
pop
and
aam
fmuls
sbb
mov
or
pushf
mov
inc
sub
mov
sbb
add
mov
cmpb
enter
push
cmp
dec
lock
mov
rolb
out
adc
outsb
adcb
ret
out
adc
add
call
and
mov
jecxz
gs
ret
sub
pop
div
jmp
sbb
out
loop
sbb
ror
sbb
fists
add
popf
mov
push
or
pop
and
jecxz
jnp
je
rolb
pop
jae
add
add
and
ljmp
xchg
dec
xor
xor
add
pop
xor
filds
cs
add
call
adcb
js
sub
sub
jecxz
sbb
and
bound
sub
nop
jecxz
insl
mov
rolb
adcl
or
add
push
sub
mov
add
inc
xchg
aad
faddl
mov
pusha
test
les
hlt
adcl
addr16
int3
lret
adc
dec
dec
lahf
add
cmpl
adc
mov
xchg
add
jle
pop
pushf
sub
adc
jecxz
add
mov
mov
adc
fwait
je
mov
push
mov
js
pushf
mov
roll
subl
dec
ljmp
xor
insl
add
xorl
adc
xor
jp
pop
jnp
js
mov
outsb
or
add
cmp
mov
lods
jnp
xor
mov
lret
xchg
cmc
push
out
mov
xor
jl
xor
dec
sbbb
mov
sbb
push
mov
or
cli
xchg
mov
faddl
pop
and
mov
xorb
pop
jns
jnp
pop
aad
mov
hlt
lds
pusha
jb
ss
lret
jo
xchg
and
add
push
shll
into
out
adc
movsb
arpl
mov
dec
or
js
push
loope
fwait
enter
add
insb
and
andb
dec
add
leave
add
add
andl
rcll
cs
adc
rorb
shrb
push
mov
add
inc
xchg
add
mov
insb
lds
mov
lock
call
jl
jp
test
jecxz
test
pop
or
std
pop
jmp
shl
adc
orb
fldl
dec
clc
and
cmc
stos
or
xchg
es
cmpsl
pusha
fs
adc
cmp
push
pushf
mov
cltd
mov
mov
les
push
inc
sbb
xchg
mov
daa
icebp
xchg
dec
pop
xchg
dec
xchg
pop
xchg
sub
sbb
cmpsb
and
icebp
mov
mov
cltd
sub
push
rolb
cmp
or
add
dec
test
imul
fwait
xchg
cmp
les
dec
inc
cli
xor
aas
inc
mov
test
sahf
fcomp
out
jecxz
add
icebp
and
xor
xor
xchg
rorb
mov
pause
sbb
push
out
xor
adc
mov
or
mov
loop
cmp
test
sub
popf
movsl
loopne
jge
jae
dec
mov
rolb
nop
loope
sbb
cmp
push
or
mov
or
and
rorl
sub
mov
jp
dec
sub
mov
shl
mov
or
adcb
dec
into
gs
add
mov
loopne
js
and
mov
sub
push
jl
cwtl
les
push
int
adcl
notl
jne
and
cmp
add
jg
mov
dec
add
push
mov
jb
jo
ds
ret
je
imul
add
jb
inc
dec
jmp
pop
sbb
fsubr
insb
repz
xchg
js
xchg
inc
mov
and
xchg
mov
cmpsb
mov
add
inc
inc
push
movsb
orb
fwait
or
aad
add
stos
mov
in
push
and
fisubs
push
ret
add
int
ss
push
js
sbb
xchg
loop
pop
or
pop
idivl
fistpll
in
mov
jo
add
sbb
inc
inc
inc
adc
and
mov
mov
adc
mov
sti
lcall
cmp
cmp
nop
dec
adc
insb
push
inc
xchg
sbb
adc
outsl
ljmp
inc
push
pop
inc
sub
out
mov
shll
jmp
mov
dec
add
push
stc
and
sub
jbe
add
stos
push
xchg
lods
sbb
sbb
mov
repnz
sbb
jb
add
int
sbb
outsb
negl
xor
or
sbb
lds
ret
or
neg
jl
lds
sbb
pushf
test
mov
bound
rorb
xchg
mov
pop
and
into
or
sbb
lock
cld
pop
in
jb
call
mov
xor
roll
sbb
or
fidivrs
fistps
es
fcomps
jbe
sbb
lods
fldl
rolb
pop
jl
push
pop
pusha
int3
inc
pop
pop
dec
lahf
mov
add
lret
cld
xlat
mov
sub
mov
dec
push
add
icebp
enter
jg
xor
and
cmp
mov
verr
int
push
lock
sbb
leave
jmp
cmpsb
adc
adc
adc
ljmp
adc
fdivrs
jmp
lock
test
prefetch
dec
inc
jmp
les
push
dec
pop
in
add
sahf
mov
aam
ret
cmpsl
or
pop
mov
aas
cmp
inc
xchg
rcr
insl
pop
sbb
xchg
adc
sub
testl
ficomps
push
push
js
sub
mov
ljmp
add
out
enter
cli
push
scas
dec
hlt
cwtl
shlb
pop
jmp
push
dec
cmp
mov
imul
popf
outsb
jo
push
cld
or
add
std
sti
xchg
decl
and
leave
or
inc
idivl
cmp
enter
test
and
pop
sbb
hlt
rcrl
dec
lods
lods
lds
insl
xor
cmp
aas
add
int
mov
adc
sbb
xor
test
sbb
mov
popf
inc
pop
adc
add
dec
jmp
push
pop
sbb
lods
sub
push
repz
add
fistpll
daa
movsl
push
pop
sbb
ret
mov
add
lods
sbbb
popf
xchg
push
ja
add
inc
inc
lock
add
dec
fiadds
jecxz
nop
push
mov
add
mov
lea
fs
push
add
fcoml
pop
pop
mov
cli
sub
add
adc
sub
add
adc
push
dec
outsl
and
lock
es
inc
cmc
ret
daa
or
mov
inc
sbb
and
rcrl
mov
sti
dec
fcmovnu
sbb
leave
xor
inc
cmp
inc
xchg
lods
pop
push
movsl
daa
dec
testl
clc
dec
cmp
aad
ja
addb
dec
imul
dec
mov
insb
fstps
push
sbb
int
leave
pop
push
loop
imul
adcl
fldenv
add
ret
pop
adc
inc
pusha
cmp
fidivrl
add
int3
add
popa
loopne
xchg
jne
add
icebp
adc
dec
aas
sub
xor
sbb
push
jno
adc
mov
mov
loope
cld
mov
sbb
out
push
testl
push
cwtl
ljmp
add
xchg
add
insb
pop
pop
lcall
mov
pop
call
sub
andb
dec
iret
ret
test
testl
cmpl
xchg
and
pop
or
fnsave
push
or
mov
in
pop
pop
lds
pop
loopne
mov
add
les
jg
movsl
outsl
insb
and
cwtl
xor
mov
sarl
mov
loope
loopne
or
xchg
pop
leave
pop
xchg
loopne
imul
bound
test
mov
rorl
xchg
mov
or
mov
movsb
pusha
sbb
es
int3
inc
lea
mov
repnz
fisubrl
insl
sbb
nop
and
mov
mov
push
lret
pop
jne
orl
mov
lods
mov
adc
pusha
inc
js
lods
push
test
lods
insl
add
loopne
inc
add
jnp
into
movsb
imul
imul
jg
into
insl
adc
dec
lock
fisubs
aad
insb
push
cmp
or
mov
adc
lock
insl
repz
add
adc
xchg
notb
cmp
and
scas
jmp
shrb
gs
out
movsl
add
lret
sbb
loopne
pop
adc
pop
add
das
sub
in
lret
xchg
push
or
inc
or
movb
cmp
cmp
or
scas
imul
push
fsts
lret
testb
pop
cmp
sarl
inc
addb
pop
jo
popa
mov
xor
outsl
nop
cmp
iret
push
arpl
jns
pop
lock
ja
stos
pop
sbb
ss
mov
add
xchg
inc
cli
cmp
mov
or
and
mov
dec
add
jo
mov
fmull
adc
push
mov
sub
jne
pop
xchg
push
mov
arpl
loopne
in
push
xlat
push
mov
movsl
nop
xor
mov
push
loope
dec
add
shlb
mov
xor
notb
xor
test
push
sbb
mov
ret
add
xor
pop
fcompl
pop
lds
pop
cmpsb
pop
stos
imul
fs
push
sbb
adc
xchg
sub
sbb
push
mov
fcoml
cmp
jae
stc
xor
and
sub
push
orb
inc
sbb
push
ficoml
js
add
mov
pop
xlat
xor
push
mov
sbb
sbb
dec
add
jecxz
adc
and
ror
ljmp
mov
pop
leave
and
xor
fcoml
and
jp
push
mov
mov
jbe
sbb
and
fdivl
clc
inc
or
jl
sbb
sub
std
xor
add
or
test
add
add
xor
push
in
mov
jge
and
aas
adc
dec
aad
fsubl
nop
pop
pop
add
xchg
cmp
pop
sbb
push
add
push
outsl
insl
out
lods
std
mov
fwait
xor
dec
sub
dec
push
add
in
xchg
popf
outsb
adc
aad
pop
add
in
jle
push
or
or
push
xchg
adc
mov
and
lea
loop
mov
mov
add
add
jnp
xor
pop
xor
enter
shr
aas
repz
imul
adc
fs
pop
inc
pusha
imul
dec
or
je
push
sbb
mov
push
adc
mov
outsl
add
sbb
out
mov
adc
dec
adc
push
mov
dec
sub
xor
aaa
adc
inc
push
test
sbb
lock
cwtl
xchg
pusha
decb
sbb
sbb
xor
mov
add
jne
jo
sbb
mov
loope
aas
lret
je
adcb
mov
cmpsl
push
adc
pop
inc
push
add
or
ret
push
xchg
aam
data16
mov
add
cli
dec
inc
push
cmp
or
jmp
sbbb
cmp
or
push
pop
adc
adcb
and
lahf
mov
jne
cli
rcrb
data16
pop
stos
test
or
sub
cmp
dec
movsl
fcom
mov
xchg
hlt
xor
sub
cli
les
xchg
add
sbb
xchg
mov
mov
dec
and
dec
jg
dec
jo
jae
out
inc
mov
rorb
insb
xor
xchg
mov
mov
insl
fstpt
push
rcll
cmp
negl
insl
js
shl
push
test
mov
push
rcrb
ss
pushf
mov
lock
mov
repnz
dec
dec
and
dec
sbb
loop
inc
sbb
cmp
xor
sub
or
add
imul
adc
pop
clc
jo
inc
test
cs
addr16
pop
add
jmp
aad
cmp
cli
adc
fiadds
push
imul
xor
ds
out
adc
daa
sbb
push
enter
sbbl
push
ret
insb
enter
imul
add
xlat
inc
outsl
aaa
movsl
arpl
lds
test
jnp
push
cwtl
push
lods
lret
or
lock
shl
and
mov
mov
jne
add
shll
mov
add
pop
dec
shlb
mov
push
adc
icebp
stos
dec
xchg
sbb
out
inc
aam
cmc
inc
outsl
push
mov
mov
ljmp
push
jbe
mov
lock
push
jge
mov
lret
sbb
test
xchg
pop
stc
icebp
sbb
les
sete
xor
notb
fadd
and
notl
dec
adc
mov
xchg
dec
and
cmc
dec
test
jae
js
add
adc
mov
pop
mov
outsb
mov
test
push
mov
adc
sbb
loope
jp
inc
out
leave
pop
out
bound
dec
xor
xchg
xor
or
cmp
xorl
movsl
sbb
xor
inc
imul
add
jmp
lock
mov
push
aam
cwtl
mov
mov
jbe
gs
outsb
andl
xlat
call
adc
add
mov
mov
mov
jp
mov
les
and
dec
add
imul
aaa
mov
fildl
dec
mov
hlt
mov
out
shll
pusha
adc
cmp
ljmp
xchg
lahf
dec
or
mov
fldl
inc
or
lret
sbb
add
mov
popa
or
std
inc
imul
and
or
pop
or
lahf
xor
inc
xchg
in
and
push
jnp
add
sbb
mov
sbb
mov
jp
and
jecxz
rcrb
xchg
dec
lods
aam
push
data16
xor
je
or
loope
fdivrl
jecxz
add
lods
add
pop
pop
add
bound
and
fmul
cmp
movsl
push
mov
pop
sub
test
scas
gs
push
adc
jecxz
jmp
and
shll
add
xchg
add
adc
imul
or
insl
test
fistpll
xchg
repz
scas
cmc
mov
roll
lock
addb
fs
ja
jge
repz
arpl
hlt
inc
mov
xor
into
push
add
adc
lret
sahf
cltd
adc
push
mov
sbb
roll
mov
xor
sti
sbb
int
clc
int3
orl
mov
pop
sub
cmpb
test
andb
clc
shl
sbb
cmp
inc
mov
repz
lods
sub
push
push
xchg
out
sbb
adc
idivb
sbb
xchg
movsb
out
mov
daa
in
or
jnp
pop
jecxz
daa
mov
dec
test
test
pop
and
add
pusha
ljmp
pop
add
sbb
pop
pop
xchg
aaa
mov
repz
cmp
push
xlat
xorl
sub
pusha
nop
rcl
xchg
mov
add
push
inc
shlb
push
fcmovnb
xchg
cltd
rcrb
sbb
mov
pop
cs
or
push
inc
push
pop
cmp
adc
or
push
mov
div
sbb
pop
dec
fidivrs
sbb
mov
pusha
pop
clc
icebp
fs
xlat
ret
pop
pop
imul
cltd
adc
push
add
pop
xorl
lret
loope
mov
pop
rcrb
decl
fwait
stos
test
lea
les
add
popa
shl
fldenv
mov
cmpsb
mov
or
or
sti
mov
push
push
test
xchg
sub
test
nop
jg
jge
inc
inc
insb
push
into
aam
es
gs
xor
loopne
and
sub
ja
mov
pop
or
fldt
fprem
mov
fidivl
or
mov
xorb
inc
adc
imul
sbb
inc
roll
xlat
cmpsb
popa
test
bound
add
imull
push
push
push
dec
xor
sbb
lock
dec
into
int
into
cmp
insl
test
bound
mov
or
and
mov
test
test
or
mov
jnp
inc
adc
push
loope
shll
fmull
pop
pop
adcb
fidivrl
xchg
ds
sbb
and
std
int3
pushf
jge
lds
dec
and
ljmp
pop
and
adc
xchg
fdivrs
add
mov
les
lods
ret
imul
or
push
fadds
inc
popa
mov
or
outsl
sbb
in
aad
inc
sbb
jge
xor
sbb
push
shlb
inc
adc
xor
adc
and
adc
push
aas
push
hlt
test
push
cmp
sub
movsl
jge
pop
clc
flds
pop
xchg
lahf
addl
jbe
sbb
or
sbb
lea
and
cmp
dec
cmp
movsb
adc
rcrb
imul
push
aas
sbb
push
movsb
rcll
in
add
out
loopne
stc
pusha
and
push
pop
adc
lock
mov
sub
add
test
mov
inc
ljmp
lock
sbb
sub
ss
xchg
xorb
xchg
inc
push
xor
jp
mov
and
ret
pop
inc
aaa
icebp
pop
jle
sbbb
push
mov
jne
lock
mov
xchg
rorb
popa
adc
sbb
inc
xor
test
lods
lds
xor
test
fcom
and
xchg
xchg
push
ret
xchg
sbb
dec
sbb
add
pop
add
sbb
add
pop
push
dec
jg
add
cld
dec
mov
movsb
cmpb
adc
adc
pop
sbb
lea
lods
aas
mov
or
inc
fdivl
jne
mov
roll
leave
inc
lock
sub
inc
sbb
ss
or
or
lret
popa
sbb
xor
sbb
mov
fucom
dec
nop
xchg
imul
movsb
mov
sbb
cmpsb
jne
push
fwait
popa
pop
test
jbe
sbb
lds
jo
mov
or
adc
xor
inc
outsl
stc
push
fimull
and
out
push
pop
out
pusha
mov
lock
mov
movsl
adc
sub
test
adc
sbb
or
inc
ds
es
fsubp
stos
call
sti
adc
or
test
into
sub
xor
lret
xor
in
pushf
mov
pusha
mov
stos
sub
jmp
call
push
mov
cmp
fmuls
mov
cmc
jo
adc
xchg
push
inc
daa
rcrl
sub
adc
xchg
add
insl
je
loope
cli
fldenv
nop
add
pop
out
sbb
mov
test
ss
aaa
or
daa
push
aad
ljmp
add
add
jne
mov
dec
enter
sub
dec
inc
mov
mov
pop
cmc
xchg
out
xor
jl
sbb
sbb
cmp
insl
call
add
insl
lock
fwait
sbb
push
inc
inc
notb
fs
xor
insl
cld
dec
xor
fwait
push
sbb
cwtl
cmp
mov
cli
or
dec
inc
cmp
imul
sbb
pop
sarb
adc
and
mov
inc
movl
fdivl
pop
fldl2t
cmc
and
add
sbb
mov
mov
mov
adc
xor
sarb
add
lahf
out
xor
js
mov
stos
sbb
sahf
and
push
lret
outsl
add
adc
cmp
jo
es
cmpsl
pushf
jp
xchg
rorb
les
lea
push
dec
push
fwait
dec
cmp
mov
repz
sbb
cmc
fcmovnu
out
adc
push
mov
outsb
xchg
jecxz
or
flds
lods
mov
inc
dec
jae
add
pop
mov
shlb
push
leave
pop
xor
inc
pop
dec
pop
add
lods
mov
aad
xorl
test
mov
call
fwait
cmp
mov
or
lock
pushf
push
imul
sub
mov
and
xchg
mov
and
ret
xchg
outsl
inc
add
pop
out
push
hlt
pusha
test
inc
test
divb
add
cli
roll
shl
dec
xor
mov
mov
call
mov
mov
inc
ret
sub
loop
add
dec
and
jns
std
push
lret
sbbb
add
add
lret
jp
cmp
sub
mov
inc
aaa
lahf
xor
push
aad
or
push
test
cmp
xchg
loopne
pop
outsb
inc
inc
dec
and
and
jb
rcrb
dec
add
mov
sbb
and
mov
psraw
mov
inc
mov
jp
test
ficompl
and
sarl
pop
ret
dec
inc
push
loope
nop
sbb
xor
mov
sbb
test
cmp
fildl
cmpb
pop
push
pop
xchg
and
mov
mov
flds
out
add
mov
push
xor
or
sbb
push
sbb
mov
cs
test
cs
popf
adc
add
or
sbb
dec
or
inc
push
out
or
push
aaa
lea
xchg
rcrl
or
xor
cs
jb
cmp
jb
loope
dec
cmp
sbb
sbb
dec
xor
call
mov
shrb
push
add
xor
faddl
jbe
lea
add
or
imul
add
push
xchg
test
push
inc
pop
cmpsb
arpl
add
and
jo
xor
les
fwait
jno
ret
ror
test
repz
sub
adc
outsb
adc
mov
insb
adc
inc
push
mov
add
rolb
or
sbb
or
lret
dec
addr16
in
shrb
xor
sbb
cwtl
jb
sub
pop
inc
push
sahf
mov
adc
ficoml
xlat
sub
add
adc
ret
inc
cbtw
pop
inc
lcall
andl
cltd
cmp
dec
stos
dec
pop
xor
sti
sbb
out
ficoms
push
test
dec
pop
loop
and
mov
fdivrs
mov
cmpsl
call
and
cmp
cmpb
push
insb
pop
xchg
enter
fcmovb
xchg
loopne
pusha
or
mov
fwait
icebp
mov
jnp
push
outsb
std
scas
aaa
jo
sub
ret
inc
lret
dec
mov
mov
mov
mov
aas
and
ret
xchg
mov
and
adc
loope
xor
inc
test
inc
cmp
push
inc
imul
outsl
cmpsb
jle
fyl2xp1
inc
cmp
mov
push
cld
dec
insb
push
pushf
mov
push
push
lret
lock
cli
je
in
cmp
sbb
and
jbe
and
lock
cmp
pusha
push
ja
imul
add
mov
cmp
push
add
add
mov
daa
into
lods
cmpsl
stos
cmpsb
in
adc
or
inc
arpl
imulb
sbb
adc
lock
fs
xor
shll
sbb
popf
adc
cld
sbbb
inc
dec
xor
andb
xchg
bnd
inc
push
mov
rol
fsubrl
xlat
push
or
aas
mov
cmpsl
aam
ds
ficoml
dec
sub
rcrb
adc
arpl
lods
mov
mov
orl
adc
xchg
push
enter
inc
rorl
cmp
adc
xchg
xor
add
pushf
add
popa
lock
add
arpl
mov
lea
mulb
js
inc
lods
in
xor
cpuid
dec
cmp
push
ds
or
mov
add
inc
dec
mov
lret
mov
ret
and
mov
mov
mov
push
adc
icebp
cmp
or
pop
and
rcrl
push
inc
push
dec
repz
xlat
or
pop
popf
loopne
movsb
and
and
sahf
jb
jns
jbe
call
xchg
cs
adc
xor
mov
and
sub
das
sbb
mov
rcll
inc
sub
lcall
ljmp
jne
pop
inc
cmp
sbb
mov
push
cmp
mov
aad
xor
lahf
jo
fwait
mov
rcr
xchg
test
inc
add
into
popf
jno
jo,pn
shlb
ficoms
inc
and
dec
xchg
loopne
pop
pop
popf
mov
xor
dec
into
cmp
and
cmp
sub
sbb
fisttpll
jge
xor
or
cmpsl
fdivrs
lods
or
xchg
mov
jge
adc
inc
test
sub
popa
ljmp
inc
jno
int
adc
out
or
jae
repnz
mov
sbb
mov
sub
xor
push
pop
push
repz
mov
cwtl
test
push
hlt
mov
sbb
push
nop
mov
ret
sub
es
jg
xchg
xor
and
and
pop
or
mov
mov
and
fnstcw
imul
xor
arpl
adc
add
sbb
jbe
loop
mov
nop
andb
adc
mov
add
lcall
push
cmp
cmpsb
cld
inc
andl
xor
jle
insl
call
vprotb
lock
or
and
inc
jno
outsb
push
push
clc
add
push
cmp
aaa
mov
outsb
aad
sbb
stos
inc
mov
sub
out
fxam
dec
cmp
lcall
mov
jmp
lock
daa
outsb
push
bound
jmp
sub
cld
or
mov
das
adc
xor
bound
ds
dec
testl
inc
mov
add
pop
sbb
nop
and
push
jmp
pop
ja
lock
or
sub
dec
pop
daa
add
xor
inc
or
mov
dec
xchg
push
xchg
ret
ret
cmp
sub
inc
addr16
dec
loop
test
fwait
fs
lahf
sbb
and
loopne
push
adc
dec
inc
lods
push
fimull
ret
pop
dec
cmp
xchg
push
push
es
loopne
xchg
loopne
ret
cs
jg
dec
mov
dec
das
loopne
jo
insl
xchg
pushf
mov
js
inc
loopne
sbb
xlat
pop
shlb
mov
int
lret
add
gs
hlt
nop
nop
jno
jno
push
data16
jle
iret
mov
cmp
mov
lds
and
jmp
leave
xor
pop
add
cld
push
jle
add
jb
lock
out
dec
xor
dec
jae
aaa
mov
push
fbstp
fsubs
mov
test
add
js
pushf
sti
lock
nop
mov
cs
xlat
jno
mov
add
movsb
cmc
cltd
add
cmp
xchg
jb
adc
push
push
sub
stos
mov
loope
sub
jb
jae
push
arpl
push
out
loope
xchg
or
std
xchg
inc
mov
test
sar
and
lock
xchg
pop
pop
out
adc
rclb
jle
sbb
lret
dec
add
loopne
cmp
mov
out
xchg
ds
dec
popa
push
icebp
add
sub
adcl
cli
ss
add
add
adc
faddp
mov
or
inc
push
sahf
rorl
inc
inc
enter
popa
dec
mov
dec
rolb
xor
icebp
mov
mov
aas
sbb
fisubrs
movsl
sbb
cmpsl
and
repz
test
sbb
dec
sub
mov
xor
add
jp
xchg
cmpsb
cltd
fs
lock
jo
bound
dec
imul
lea
push
xchg
inc
aaa
les
adc
xchg
lea
nop
in
or
xchg
pushf
int3
mov
dec
int
pop
add
and
or
ss
jo
in
push
pop
pop
lods
add
inc
ss
jl
subb
sub
inc
insl
fwait
imul
cmc
or
test
test
mov
mov
xchg
into
mov
sbb
sbb
popa
aam
xor
cmp
pushf
dec
pop
rcrb
jle
sbb
add
enter
cs
mov
bound
add
add
sub
or
dec
xlat
dec
push
mov
xchg
sbb
sahf
push
mov
and
popf
pop
adc
sbb
dec
jecxz
inc
rclb
adc
push
shlb
mov
cmp
movsl
in
mov
and
popa
adc
sbb
jl
rorb
mov
inc
cltd
aas
cwtl
dec
sbb
add
pop
dec
push
ret
cmp
ds
cld
jnp
insb
push
dec
js
in
mov
add
or
cmp
test
or
mov
shlb
jo
add
cmp
adcl
cmp
enter
jo
mov
insl
mov
sub
daa
sub
add
mov
rcl
add
movsb
adc
pop
pop
pop
jb
jne
popa
sahf
pop
popa
aad
adc
push
xchg
lock
and
jb
adc
mov
sub
dec
push
lods
push
add
mov
push
xor
pop
mov
add
mov
sbb
adc
popa
ljmp
add
sbb
enter
adc
movsl
std
mov
fadds
icebp
dec
call
fstpl
in
inc
stos
dec
leave
lret
roll
cwtl
fcmovbe
daa
mov
xor
mov
inc
mov
jl
loop
gs
mov
fsubrs
jne
das
test
sbb
add
adc
mov
sub
sahf
mov
mov
aaa
and
scas
lock
dec
mov
movsl
arpl
sub
xor
dec
adc
sub
shll
mov
js
jecxz
cmp
in
movsb
adcb
push
sarb
and
pop
sbb
adc
andl
outsb
xchg
mov
lods
mov
push
shrl
cmp
mov
imul
es
mov
add
adc
sbb
or
xorb
mov
jge
sbb
leave
and
es
mov
add
arpl
sub
xor
pop
pop
jne
pop
dec
sbb
or
imul
ret
mov
inc
js
insl
xor
jle
mov
ljmp
mov
mov
lods
ljmp
dec
repz
mov
pop
or
sbb
ja
xchg
cmc
sub
outsb
leave
cmp
pusha
ja
ret
or
loope
xchg
push
xor
xchg
mov
mov
fldl
cltd
rcr
js
jno
cs
add
dec
insb
add
stos
push
add
popf
ljmp
and
jnp
mov
jl
cmpsl
mov
cmp
push
xor
push
xchg
push
or
fsubs
outsb
push
xchg
addr16
mov
lret
shll
inc
inc
jno
imul
xlat
push
mov
ja
mov
pushl
and
mov
inc
mov
inc
sbb
adc
popf
sbb
push
sub
ret
les
stos
arpl
test
pop
test
test
xorl
dec
pop
std
adc
adc
jne
popf
push
loope
jno
fcoms
pop
mov
cld
sbb
aaa
jno
pushf
inc
sub
sbb
pop
pop
sub
pop
rorb
and
cmpb
cmp
and
jmp
leave
ror
pop
xchg
ret
iret
add
sub
mov
repz
push
and
loope
sbb
loope
xchg
mov
sbb
mov
fisttpl
rol
in
push
and
inc
sbb
stos
pop
push
jge
sub
mov
ret
icebp
xchg
and
adc
pop
mov
push
rclb
pop
pushf
cmp
mov
jne
sbb
sarb
or
test
jb
hlt
mov
outsl
or
adcb
or
push
or
pop
adc
cmpsl
add
popf
stos
test
sub
inc
adc
fdiv
adc
cwtl
lcallw
cmp
xchg
fld
push
lahf
xchg
add
arpl
mov
push
mov
xor
test
jne
fcompl
add
push
popa
mov
pop
jne
fsubrs
aas
clc
test
es
bound
ss
adc
and
jecxz
xor
clc
sub
sbb
xchg
xor
test
sub
sub
mov
add
xor
ja
pusha
sbb
adc
pop
sbb
inc
jb
mov
and
jo
mov
inc
int
lds
jno
mov
ret
push
fs
frstor
push
popa
faddl
sbb
xor
mov
dec
inc
sbb
mov
shl
jle
cltd
out
xchg
outsl
roll
mov
add
inc
test
das
stc
aam
push
lret
add
sbb
xchg
mov
ja
test
dec
ss
lock
mov
xlat
pop
or
sub
ret
out
je
or
jb
inc
not
mov
cmp
lret
xor
or
bound
push
call
shrb
jnp
xor
das
subl
test
mov
lock
into
jnp
add
dec
hlt
jl
sbb
int3
adc
les
pop
jl
loopne
mov
cld
inc
movsl
sbb
jb
sub
icebp
xor
ja
pop
and
sbbl
aaa
filds
rolb
or
jmp
and
aam
sub
rcr
xor
add
fstl
push
xor
cli
inc
and
pop
subb
xchg
xchg
mov
dec
cwtl
dec
adc
inc
cmp
sbb
jbe
sbb
xchg
mov
mov
xor
mov
lods
push
sub
scas
subb
test
inc
xor
xor
jne
into
rcrb
mov
inc
mov
hlt
out
sahf
insl
jl
repnz
inc
xchg
daa
adc
imul
cmpsl
mov
xor
loopne
xchg
lret
lock
and
or
jnp
or
repz
test
fistpll
int
ret
dec
inc
mov
xor
mov
dec
inc
clc
fcom
add
pop
dec
mov
lock
adc
sahf
mov
push
push
cmp
es
ret
and
sbb
inc
add
add
push
or
mov
jnp
mov
shll
aad
or
das
cmp
je
xor
mov
xor
push
xor
add
stos
ret
jmp
xchg
add
rcr
jno
sarl
enter
mov
aaa
fs
addr16
push
mov
stos
add
jge
xor
rcll
push
pop
in
xor
add
jo
adc
jmp
cmc
aaa
test
popf
lds
fstpt
insb
aam
int3
mov
mov
sbb
push
clc
pop
addl
add
sbbl
lock
fs
xchg
push
jl
xchg
xchg
js
inc
mov
shrl
and
xchg
inc
inc
cmpsb
or
mov
and
xchg
jno
or
sarb
mov
mov
mov
pop
lret
sbb
add
push
mov
lret
adc
clc
pop
and
bound
hlt
jbe
jb
cmp
add
xor
fdivrl
repz
es
aad
cmp
add
dec
inc
mov
xchg
fimull
jne
lea
in
pushf
sbb
sub
shlb
cmp
dec
pusha
adc
mov
or
jae
inc
mov
dec
xchg
mov
pop
sahf
movsl
sub
jg
xor
repnz
add
and
cmp
pop
lods
push
pop
ret
mov
push
scas
add
sarl
mov
test
iret
les
sub
cmp
sbb
sarl
or
into
jl
pop
push
pop
mov
shll
ljmp
jo
inc
pop
and
sbb
sti
dec
add
pusha
dec
jg
pop
pop
popa
push
inc
inc
inc
jp
test
or
stos
adc
push
adc
inc
jo
cmp
adc
cmp
ja
mov
pop
and
data16
sub
scas
add
out
push
mulb
xor
or
fistpl
and
ds
xchg
sub
inc
ss
js
inc
test
subl
sub
dec
lock
fists
or
mov
add
mov
shll
test
add
sub
or
gs
dec
mov
in
mov
sub
mov
sub
mov
mov
inc
push
lods
mov
clc
sbb
lock
xchg
inc
rol
mov
sub
sub
mov
add
dec
mov
andb
jo
jge
cmp
rcrl
sbbl
lret
lock
jg
lods
ja
or
inc
dec
movsl
test
or
jne
sbb
shlb
adc
pop
ss
test
lock
je
fsubp
inc
mov
clc
add
das
or
xor
cmp
aas
enter
cmp
inc
add
pop
or
ret
jecxz
clc
add
cmp
sahf
adc
mov
scas
jno
mov
push
test
xor
pop
adc
imul
push
gs
push
push
mov
mov
mov
add
das
rcll
movsb
sahf
inc
ss
and
cs
lret
cmp
xor
clc
mov
and
data16
push
in
test
sahf
loope
fcomp
add
les
bnd
dec
icebp
xchg
and
imul
mov
xlat
rcl
adc
call
int3
jp
loope
jle
pusha
xor
je
dec
clc
cs
jecxz
aaa
lret
jb
arpl
inc
adc
push
or
push
pop
cmp
sub
mov
mov
int3
sbb
xchg
jnp
hlt
add
sub
mov
popa
jo
add
pop
xor
mov
jns
sbb
xchg
bound
ds
sub
pushf
adc
fwait
cwtl
fwait
test
aam
sbb
or
flds
push
es
enter
insl
dec
pushf
inc
lret
test
dec
lock
fimuls
add
inc
jp
jg
shrl
movl
int
push
ficomps
cwtl
ret
ffreep
and
xchg
sub
lahf
sbb
add
xchg
adc
mov
pop
push
inc
loop
xchg
mov
stos
mov
add
loopne
repz
and
addr16
es
lock
xor
out
insl
cmp
out
cmp
or
xor
or
test
out
and
aas
add
xchg
mov
pop
add
test
cmp
cs
cmp
xchg
arpl
or
cmp
cmp
cmp
mov
clc
or
push
push
add
xchg
mov
xor
and
or
inc
sbb
leave
xorl
and
push
pop
or
adc
adc
add
push
ljmp
in
sbb
push
inc
lret
xor
xchg
and
cmc
pop
mov
jp
xor
lock
xchg
daa
arpl
add
outsl
jno
push
outsl
add
pop
push
negl
test
and
or
loope
hlt
test
pop
test
cmp
loopne
jecxz
shr
aad
mov
addr16
cmp
inc
push
add
adc
push
loop
inc
pop
sub
sarl
xor
shr
xor
outsl
xchg
mov
movl
mov
sbb
jp
dec
test
mov
fwait
jne
mov
scas
imul
xchg
inc
xlat
push
ret
inc
fdivs
adc
movsl
xchg
or
xchg
fnstsw
push
stos
outsl
mov
shlb
cmp
je
xchg
rcr
sarl
in
addl
js
dec
inc
inc
aam
fbld
or
inc
sub
lds
mov
jo
mov
test
ljmp
inc
js
mov
jmp
push
inc
mov
pushf
jmp
or
insl
dec
ds
cmp
or
pop
or
orl
sbb
mov
out
icebp
add
mov
and
insb
xorl
inc
jle
mulb
sub
mov
aam
ret
sarl
ret
add
call
shl
fcmovnu
faddl
test
adc
outsl
or
sub
mov
mov
enter
xor
out
push
lcall
movsl
and
in
cmp
mov
cmpsl
lcall
cld
cltd
mov
add
lock
jg
adc
adc
jecxz
sbb
in
add
call
and
lret
adc
inc
push
jbe
and
add
jl
push
push
jne
rclb
adcb
add
and
dec
in
filds
sub
repnz
jmp
push
mov
xchg
or
test
js
les
jecxz
xchg
or
and
sub
inc
out
das
test
test
mov
test
inc
invd
add
and
fisubl
in
cmp
test
nop
repz
out
outsl
fistps
xchg
push
mov
fs
pop
ss
movsb
cltd
les
inc
adc
cmp
leave
in
mov
lcall
and
in
push
push
ret
das
jecxz
or
popa
jo
fiaddl
sarb
loop
movsb
mov
fsubr
out
gs
outsb
xchg
mov
and
and
push
xchg
int
xor
or
jge
sbb
loopne
and
push
lods
insb
ret
int3
aaa
out
push
aam
inc
add
xor
cmp
jns
sub
icebp
jp
sbb
pusha
xchg
mov
mov
enter
daa
and
imul
adc
or
mov
push
or
sub
test
iret
incl
lods
and
dec
mov
mov
inc
cmp
inc
bound
xchg
loop
ret
movsl
lea
cmp
fs
add
or
movsl
adc
mov
fidivs
pop
mov
push
add
pop
cltd
mov
pop
cmp
inc
call
sub
sbb
cmp
push
movsb
sahf
dec
adc
lds
test
lret
and
pop
repnz
insl
inc
cmc
mov
lock
xchg
and
mov
aaa
xchg
adcb
scas
mov
cmp
daa
lods
xchg
icebp
sub
mov
mov
sub
xchg
shlb
fnsave
or
ds
pop
cmp
sbb
jge
gs
lcall
sbb
sub
mov
vpcmpgtb
mov
mov
xlat
and
jb
aaa
mov
ret
arpl
adc
shl
add
add
xorb
jno
lret
sbb
aaa
push
xor
addr16
adc
mov
jne
mov
push
addb
fdivl
hlt
mov
mov
rcrb
mov
imul
dec
adc
adc
sbb
pop
lcall
sbb
dec
pushf
imull
stos
and
dec
loopne
ret
push
mov
add
sub
add
test
imul
enter
ja
test
mov
xor
pop
xchg
pushf
das
cld
mov
insb
subl
stos
sbbb
jp
and
bound
adc
adc
cmpl
nopl
fistl
fstpt
push
add
or
test
lret
add
out
lods
mov
mov
hlt
and
popa
daa
jne
aam
and
add
loope
shll
loopne
cwtl
inc
jg
rol
sub
jmp
mov
shlb
loope
subb
leave
jae
cmc
or
cli
inc
shl
out
inc
mov
dec
jge
shlb
dec
cmpsb
inc
push
add
push
push
in
int3
and
ficoms
test
mov
fildll
or
shll
mov
shrl
dec
fwait
adc
or
stos
andb
jmp
fwait
in
or
lock
add
inc
iret
out
xchg
mov
xchg
mov
rclb
mov
into
add
in
in
jns
shll
sbb
test
add
gs
mov
pop
or
call
mov
cmc
fdivs
repnz
push
bound
jmp
mov
out
test
repz
jb
sub
inc
call
xlat
sbb
imul
leave
pop
lods
rclb
sahf
xor
loop
cmc
push
mov
push
ds
and
out
add
and
and
jmp
movsb
lods
adc
sbb
or
xor
jg
cmp
pop
in
sub
imul
leave
ret
pop
sub
loop
mov
pop
push
cmp
pop
inc
push
xor
lcall
adc
mov
lea
xchg
dec
dec
popa
cmp
fldl
inc
push
aaa
movsb
mov
enter
popa
pusha
mov
mov
mov
addl
adc
push
sub
mov
xchg
add
push
sbb
inc
cmp
call
adc
rolb
mov
ds
dec
mov
aad
dec
cmpsb
inc
outsl
xchg
movsb
fbstp
pop
dec
lahf
dec
out
or
sbb
lds
outsl
adc
imul
rclb
sub
sbb
je
mov
inc
sub
insl
loope
jbe
jnp
adc
aam
sub
aam
sub
or
cmc
jmp
sahf
or
inc
leave
test
je
adc
jecxz
push
sbb
jecxz
adc
mov
mov
fildll
arpl
push
jecxz
in
adc
shll
ss
movsl
mov
xchg
subl
out
lock
inc
sbb
xchg
push
in
addb
push
movb
dec
rorl
shrl
cs
mov
jno
addb
in
imul
shlb
rorl
mov
repnz
movsl
das
movsb
sbb
mov
pop
ret
add
dec
andb
nop
test
jno
add
xor
test
fisubl
imul
cmp
or
inc
ljmp
sarl
jecxz
mov
lea
sbb
lock
jno
push
roll
lock
mov
or
push
sub
and
ret
aaa
dec
and
xor
icebp
fdivs
ja
add
mov
xchg
jl
ds
xor
mov
mov
cmp
sub
or
lret
ljmp
adc
cs
inc
xchg
test
shlb
sub
jb
lcall
push
lret
mov
mov
sub
mov
cmp
test
xorl
push
push
mov
mov
jle
lods
jnp
cmp
ds
push
fsqrt
insl
stos
pop
mov
xchg
and
xchg
cmp
addl
nop
pop
mov
pop
or
pop
push
add
jb
jmp
mov
jp
enter
test
mov
jns
push
sub
sbb
mov
sub
lock
mov
fidivl
xor
push
adc
dec
inc
push
jle
shrb
inc
cld
push
cmp
mov
jmp
ret
mov
leave
xlat
xchg
shlb
adc
jg
mov
fmull
mov
mov
mov
incb
ficompl
xor
add
ret
mov
mov
fldl
cmp
int3
mov
mov
call
outsl
je
lock
push
lcall
push
add
loop
mov
cli
cmc
mov
mov
nopl
imul
movsl
cltd
daa
lock
mov
add
xchg
add
sub
iret
out
adc
std
repnz
aaa
or
push
mov
inc
std
sub
add
jmp
and
sbb
popa
push
mov
sarl
mov
sub
mov
and
add
cltd
pushf
sbb
data16
mov
add
movsl
outsl
cmp
mov
int3
sbb
mov
mov
mov
adc
pop
cmp
in
mov
mov
popa
dec
mov
jno
jbe
mov
or
mov
test
das
sub
mov
std
add
sub
cs
lea
aad
lret
shrb
sub
mov
xchg
popa
adc
shl
or
mov
xchg
mov
jo
lret
xchg
xor
cmp
aaa
fmuls
push
ds
jns
mov
push
das
aam
adc
stos
and
mov
rorl
add
dec
divl
aas
adc
lock
pop
dec
mov
pop
jae
push
xchg
lcall
and
in
rcrb
fdivs
pushl
pop
rol
jp
mov
jge
loope
push
inc
roll
popf
ret
mov
stc
orb
add
jae
sbb
data16
cmc
mov
leave
adc
or
mov
cmpsb
stc
mov
ss
pop
inc
or
add
icebp
loopne
jmp
js
mov
adc
mov
insb
add
loop
mov
fsubrs
jmp
subb
sarl
xchg
mov
pop
lock
into
xchg
ljmp
fimuls
and
clc
add
mov
ja
add
aad
enter
cmpb
push
int3
jl
mov
fdivs
dec
add
lea
adc
into
or
xchg
xchg
mov
out
dec
jecxz
pushf
cmp
scas
lcall
test
fwait
sahf
mov
popf
cmp
test
xchg
les
imul
cmc
sub
push
xchg
lret
rolb
add
xchg
mov
pop
and
dec
imul
cmp
xor
jmp
or
xor
hlt
stc
inc
icebp
lds
in
push
mov
mov
xchg
daa
add
or
dec
jge
rclb
xchg
cmp
insb
or
push
arpl
cmpb
jo
dec
or
jbe
pop
test
scas
xchg
push
call
lods
push
dec
clc
xor
ret
shrl
es
mov
and
xor
dec
mov
and
jge
push
jb
inc
sbbl
and
or
je
std
inc
sbb
fsubp
or
iret
int3
jb
mov
dec
or
adc
xor
or
cmp
xchg
sbb
rcrb
fsubs
xor
fidivrl
or
jmp
add
out
xor
fwait
dec
addb
and
scas
out
add
cmpsb
or
adc
sbb
push
sahf
pop
cmpsl
mov
sbb
xchg
and
jae
test
pop
inc
hlt
sarb
sti
mov
xchg
mov
addr16
out
lcall
cltd
pop
jg
scas
adc
ktestw
add
and
out
sub
addr16
sbb
inc
xchg
cmp
push
push
sub
test
dec
das
lea
or
sub
cltd
xor
popa
outsb
jmp
inc
jle
mov
mull
cmp
add
jmp
jecxz
add
mov
xor
lret
add
jo
pushf
xchg
mov
jbe
sbb
pop
adc
ret
xchg
dec
pusha
add
lods
lret
aaa
pop
add
cmp
inc
out
xchg
xchg
mov
push
hlt
add
cmp
jmp
flds
inc
rorb
lcall
fs
and
dec
sbb
jno
pop
inc
ret
jg
and
push
jno
jmp
bound
sub
and
lds
or
pop
gs
es
push
pop
pop
jecxz
scas
pop
jle
mov
jp
insb
adc
sbb
and
cmc
pop
xchg
xchg
xchg
mov
mov
fwait
aad
push
aas
dec
adc
into
mov
insl
add
pop
inc
lahf
and
push
or
sbb
imul
add
popf
out
dec
enter
mov
pop
lahf
mov
inc
pop
and
xchg
cmp
or
outsb
dec
rcr
push
inc
inc
dec
pop
fs
sbb
pushf
dec
xor
push
and
push
pop
mov
mov
xchg
lahf
nop
imul
lea
js
xchg
adc
rolb
hlt
cltd
mov
pop
pop
adc
add
pop
cmp
adc
dec
xchg
add
sbb
sbb
and
stos
jb
cmp
repz
lock
outsl
add
sub
test
push
xchg
mov
hlt
xor
inc
cltd
mov
clc
mov
or
inc
inc
ljmp
push
xchg
or
hlt
popa
insl
mov
push
lcall
mov
sbbb
mov
movsl
mov
xchg
in
ret
sub
popa
cmovge
mov
dec
js
and
mov
in
and
or
inc
idivb
testb
lahf
cmc
xor
sub
aad
aas
mov
jmp
stos
mov
fisubl
lret
sbb
out
xchg
inc
push
pusha
inc
adc
movsb
pop
adc
xor
xor
mov
mov
cmp
dec
xor
dec
cmp
sbb
xchg
cmp
mov
dec
mov
push
mov
sahf
fiadds
fdivrs
sbb
push
mov
rorl
pop
or
inc
mov
mov
or
adc
nop
inc
ret
test
adc
jne
mov
and
push
xchg
sbb
inc
ret
lret
stc
rol
daa
sbb
mov
ffree
sbb
jbe
mov
gs
icebp
addb
subl
imul
lods
lds
mov
decl
ror
sbb
jecxz
and
jo
cmp
add
inc
pusha
mov
push
or
mov
lods
sub
fstps
fcoml
xor
pop
pop
add
and
mov
sub
inc
aad
scas
dec
pop
into
jno
push
or
pop
sbb
and
jg
inc
aam
sub
adcl
push
mov
xchg
arpl
fldl
pop
or
inc
loope
imul
or
push
add
adc
mov
or
rorb
mov
sbb
xchg
or
mov
mov
sub
fmuls
xchg
mov
add
test
adc
inc
in
cmpsl
dec
mov
sti
add
nop
out
sbb
sub
pop
mov
xor
cmp
push
jl
sub
mov
inc
insb
dec
pop
js
lods
adc
cmpsb
xchg
add
int
loope
push
stos
pop
iret
push
add
xchg
jo
jb
mov
xchg
push
ljmp
inc
mov
mov
xorl
cwtl
pop
out
sub
negl
xchg
or
sbb
push
xadd
add
jo
hlt
mov
je
sahf
aas
inc
jmp
or
xchg
clc
add
cmpsl
pop
dec
repz
mov
xchg
adc
add
inc
fdivl
data16
cmpb
push
sahf
jne
aam
bound
push
add
jnp
adc
bound
jo
add
pop
add
dec
add
movsb
push
fnstsw
enter
dec
testl
pusha
inc
jbe
push
pop
hlt
popa
rcrl
cmpl
aad
sbb
or
aaa
cmp
cmp
add
jl
jle
mov
xchg
xchg
lock
or
jl
loopne
popf
sub
inc
and
mov
inc
lret
in
ja
or
adc
imul
icebp
add
jbe
and
or
mov
push
pushf
pop
mov
insl
mov
or
pop
loop
cmp
nop
test
and
call
outsl
mul
inc
movsl
dec
xor
inc
shlb
sbb
xor
xor
ret
sbb
push
lahf
and
es
push
int
mov
jae
sub
or
inc
shrb
out
sbb
dec
loop
mov
aam
outsl
mov
adc
inc
cmc
int3
inc
ret
push
dec
in
mov
cmp
and
xor
int3
jecxz
add
mov
inc
mov
rcrl
push
adc
or
mov
pop
pop
stos
fbld
push
xchg
les
jp
push
push
rclb
sub
sbb
scas
or
dec
adc
push
sbb
xor
loopne
xchg
or
mov
cmp
push
fld
inc
arpl
mov
scas
xlat
lret
add
test
pusha
pop
xchg
cmp
outsl
sahf
adc
and
pushf
cmp
std
and
sub
jp
add
loopne
jl
fwait
cmp
sahf
cs
adc
xchg
mov
jno
std
fwait
inc
sbb
dec
gs
aaa
jge
fsin
dec
lods
add
sbb
fld
loopne
or
popa
push
inc
mov
adc
imul
mov
lea
xor
jecxz
mov
insl
pusha
xchg
notb
inc
mov
push
adc
popa
lahf
xor
adc
and
pop
or
or
mov
imul
mov
cmp
daa
push
and
loopne
sub
pusha
inc
mov
pop
adc
dec
sub
lret
lret
sbb
jg
and
inc
jmp
mov
push
imul
pushf
gs
mov
push
mov
add
dec
xor
movsl
fistpll
inc
xchg
ja
sub
sub
or
in
outsb
and
insb
add
cmpsl
jo
inc
pop
test
xorl
movsb
add
rolb
lods
push
clc
lret
mov
into
cwtl
sub
dec
jns
pop
add
sbb
sub
or
fsubl
inc
scas
add
gs
push
pop
pop
vhaddps
and
inc
push
add
iret
es
and
out
xor
sbb
cmpsb
lods
add
inc
mov
xchg
sbb
or
inc
pusha
icebp
inc
in
cmp
aaa
addr16
subb
test
lock
maskmovq
testl
cmpsb
cltd
add
sbb
inc
push
adc
inc
iret
inc
dec
cmpsl
cltd
dec
inc
or
push
add
adc
add
divl
mov
mov
mov
dec
pop
mov
aas
push
outsb
lcall
and
movsl
dec
idivb
cltd
fwait
pop
and
push
in
sbb
je
mov
xchg
jp
gs
xchg
push
test
fisubs
cltd
iret
mov
mov
sbb
push
popf
xchg
ficomps
rolb
cmp
ret
scas
push
mov
std
sbb
inc
jnp
addr16
and
jmp
add
push
mov
outsl
sbb
add
mov
jmp
dec
mov
or
in
lea
add
cwtl
adc
out
add
pop
add
cmpsl
packssdw
les
mov
push
mov
les
jecxz
sub
and
mov
mov
clc
inc
or
jnp
dec
jp
ljmp
mov
inc
pop
adc
xor
xor
sbb
mov
repz
insl
inc
mov
or
sbb
pop
popa
dec
adc
adc
addl
mov
push
inc
loope
lret
or
cmc
cmpsb
jp
dec
jo
or
jb
dec
or
mov
clc
push
sub
mov
clc
xor
test
jle
mov
and
add
mov
or
ret
sahf
subb
leave
sbb
sbb
mov
push
xorl
cmpsl
pusha
push
mov
push
and
cs
andl
mov
loopne
xor
aam
mov
push
fcompl
std
or
xchg
and
lret
add
lcall
aaa
fwait
and
les
inc
lret
sbb
add
xor
xchg
mov
sbb
jb
lock
add
xchg
xor
test
cmp
adc
mov
aas
or
cmp
neg
pop
call
incl
sbb
scas
jne
xlat
push
xchg
add
call
pop
shlb
cmp
mov
out
xor
in
pop
push
or
fs
popf
mov
scas
loopne
cmp
pop
add
add
push
rol
mov
mov
push
sbb
hlt
mov
xchg
loop
and
xchg
mov
pop
adc
sahf
add
movl
add
jecxz
mov
mov
jmp
jo
jmp
adc
loope
adc
adc
imul
lret
jp
jo
test
add
mov
and
sub
and
push
movsl
add
inc
addl
pop
fstpt
imul
cmp
and
pop
loop
in
shl
ret
add
sbb
inc
dec
arpl
sub
and
inc
popa
pop
add
iret
inc
inc
sbb
lea
imul
xor
inc
mov
cmp
xchg
dec
add
pusha
add
mov
mov
loopne
dec
lods
jno
mov
xchg
push
shll
aad
movsl
adc
inc
stos
dec
mov
enter
pop
inc
pusha
andl
jmp
inc
fistps
xchg
mov
arpl
mov
push
imul
mov
scas
sub
sbb
push
ja
sub
insl
pop
or
dec
jecxz
test
lret
jecxz
stos
leave
or
jp
inc
lret
dec
bound
add
cmpsb
push
sub
pop
add
sbb
lock
shrb
sub
mov
jo
popa
arpl
scas
gs
sbb
jb
aam
scas
xchg
test
sahf
mov
loop
mov
test
roll
stos
xchg
xor
dec
sbb
add
sbb
fwait
inc
xor
outsb
jge
hlt
cwtl
rorb
pop
or
mov
add
inc
mov
fildl
jns
pop
jp
test
and
add
jno
add
pop
movl
pop
adc
sarb
jb
loopne
rclb
and
pop
mov
lods
test
cltd
cmp
ret
sarb
sti
lods
shrl
pop
and
add
or
popa
sub
je
loopne
xlat
cmp
inc
sbb
in
jle
add
dec
pop
jo
adc
pop
and
sub
sarb
cli
push
mov
push
sbb
aas
roll
mov
push
ret
jge
mul
inc
sub
cmovnp
dec
and
jecxz
lods
mov
push
sub
popa
and
or
scas
je
out
loope
sarl
bound
ja
add
push
ss
ja
movsl
adc
bound
test
lret
mov
js
sbb
es
mov
insl
leave
repnz
xchg
xchg
inc
rolb
mov
jge
sub
int
shlb
das
inc
cmp
pop
cmp
lods
adc
das
lock
sbb
push
or
add
push
inc
push
movsb
push
lods
mov
fistpll
cmp
push
jno
jmp
sarl
aad
roll
adc
mov
pop
xlat
loop
jbe
rorb
aad
test
pop
mov
cs
cs
mov
mov
aam
cmpsl
movsl
nop
pop
or
xor
fs
inc
call
mov
mov
dec
pop
sub
jg
and
cmp
fwait
mov
pop
imul
inc
add
mov
sub
fucomi
and
jbe
inc
ret
pop
push
fs
lds
and
out
ficompl
scas
mov
lods
push
or
sub
or
jnp
pop
add
and
mov
imul
sbb
pop
dec
mov
insb
loopne
dec
sub
cmp
or
rclb
out
cltd
mov
mov
sbb
dec
push
lds
add
pop
or
rorl
xlat
mov
bound
add
xchg
cmpsb
and
mov
lret
xchg
inc
das
or
in
loop
sbb
add
stos
iret
mov
and
mov
adcb
jae
xor
test
cmc
loope
adc
sub
jne
xorl
dec
sub
das
sub
push
sbb
mov
jnp
iret
jo
mov
mov
loope
movsl
or
fildl
pop
sbb
lahf
jmp
sbb
and
jl
sub
jecxz
cmp
shl
insl
aaa
push
mov
imul
xor
add
mov
pop
push
into
shll
add
cmpsb
dec
stos
dec
addl
push
enter
ja
sarl
rolb
add
sbb
cltd
lock
aaa
aad
outsb
movl
xchg
or
leave
sub
pop
insl
sbb
ss
roll
add
pop
add
sbb
push
and
mov
les
jge
mov
aas
pop
rorb
jb
stc
test
inc
cmp
clc
lods
bound
lods
filds
lahf
popa
xchg
or
std
ljmp
sbbb
mov
lcall
pushl
dec
push
pop
arpl
push
movsb
inc
lods
sbb
movsl
adc
clc
ret
adc
push
inc
adc
lock
rcll
mov
push
mov
adc
pop
xchg
out
negl
pop
pop
imul
jnp
addr16
or
out
sub
ds
or
sbb
jg
inc
fisttpl
cmp
out
mov
push
mov
mov
cmp
imul
in
jmp
mov
jmp
shlb
or
test
xchg
rclb
jp
pop
add
pop
jne
xchg
or
loopne
mov
jmp
fidivrl
popf
out
add
add
shlb
jmp
add
movsl
lods
add
roll
dec
dec
orb
mov
dec
ja
mov
push
and
in
xchg
mov
or
scas
or
or
out
xchg
testl
cmp
rorb
cwtl
pop
pop
shll
lods
push
add
pop
or
and
inc
outsl
sub
ret
and
pop
fs
int3
push
dec
rcll
jmp
lea
sub
icebp
test
imull
loopne
js
lcall
popa
pop
or
add
imull
or
mov
rorl
or
dec
sbb
sbb
mov
nop
or
inc
pop
hlt
mov
shll
das
inc
pop
lods
sbb
stc
into
js
lods
stc
jne
sbb
push
mov
loope
jo
bound
adc
xchg
adc
rclb
inc
inc
arpl
cmp
test
push
cmovg
pop
loop
sub
repz
add
mov
push
cmc
jns
add
dec
push
pop
inc
ds
clc
add
mov
cmc
out
dec
sbb
sbb
lds
add
cmp
shrl
test
test
sub
aaa
sbb
xor
xor
xor
cmp
lods
jmp
xor
cmp
ret
cmp
push
pop
or
pop
add
push
inc
mov
les
pusha
xchg
arpl
fsubrs
daa
insl
or
add
jne
lock
xchg
mov
mov
insl
lds
add
and
test
cltd
push
cmp
pushf
adc
sbb
in
leave
xchg
movsb
sub
and
pop
addb
les
dec
popf
fldcw
pop
int3
adc
movsl
push
aas
mov
sub
fiaddl
mov
cmpsl
lock
push
lret
sbb
rolb
push
mov
ret
ja
inc
mov
sahf
mov
adc
adc
rorl
shl
jb
sbb
pop
imul
mov
xchg
and
xor
xor
pop
xchg
ret
mov
js
aas
stos
movsl
jnp
mov
pop
sbb
ret
outsb
pushf
push
mov
or
iret
pop
cmp
mov
rolb
popa
nop
xorb
sub
inc
or
das
dec
gs
out
and
or
xchg
adc
imul
or
dec
imul
push
in
dec
nop
add
sbb
test
jmp
mov
sbb
mov
gs
xchg
out
xor
xchg
adc
xchg
sub
and
test
xchg
out
scas
in
nop
scas
test
adc
push
je
adc
pop
xchg
hlt
and
xchg
stos
inc
add
adc
in
lret
cwtl
ljmp
or
daa
and
and
sbb
ret
inc
cmp
xor
imul
es
and
dec
pop
mov
push
ss
push
sbb
xchg
pop
inc
pushl
insl
and
out
mov
test
inc
adcb
ja
sbb
cmp
test
or
in
fistps
cld
sar
sbb
lcall
adc
idivl
mov
pop
js
in
dec
filds
cs
cmp
data16
ja
dec
cli
xor
out
push
es
sub
fcmovnu
ja
popa
cmp
leave
cmp
mov
xor
arpl
sub
jmp
inc
fstl
pop
xchg
and
sub
call
pop
in
push
pop
dec
jno
mov
pop
push
dec
mov
icebp
mov
sub
fidivrs
xor
aaa
inc
jae
in
pusha
andl
sub
jge
pushf
scas
nop
xchg
test
mov
mov
and
ret
xor
mov
mov
sbb
or
loopne
jbe
and
sub
push
mov
mov
adc
stc
pushf
xchg
mov
ret
and
ss
mov
in
pop
int3
testl
scas
fisubs
adc
or
and
std
ret
lods
push
inc
cs
cmp
es
mov
sbb
sub
sbb
gs
std
push
out
and
and
xchg
push
and
inc
push
pushf
bound
mov
jae
inc
cmp
sbbl
sbb
jo
fsubs
aam
test
sar
mov
jecxz
mov
mov
jmp
mov
test
or
rolb
or
ljmp
or
or
or
jmp
cmp
fsubrl
fiadds
mov
xchg
mov
aas
repz
in
xor
leave
mov
mov
test
fsubrl
sub
das
bound
or
popf
add
jno
sub
cmpsl
insl
test
idiv
xor
push
xor
xor
outsb
jbe
mov
xor
ret
in
fcmovbe
mov
pop
inc
pop
pop
jb
xchg
out
fisttpl
xchg
lds
arpl
out
jns
pop
pop
jl
std
xchg
inc
jl
mov
push
mov
popl
ss
into
xor
mov
setne
imul
and
pushf
cmp
jo
dec
xor
imul
fs
pop
sub
lcall
xchg
pop
mov
sbb
push
pop
mov
test
xor
jae
jne
popa
add
test
movsb
push
rcrb
addr16
xchg
rol
daa
loope
daa
test
das
mov
or
push
xor
adc
pop
adc
sbb
fcoms
aas
js
lods
jne
cwtl
jge
inc
enter
hlt
fcoml
aam
test
call
daa
lock
and
push
xchg
sahf
pusha
cmp
lea
stos
push
mov
push
add
sbb
ds
negl
push
jo
jmp
popa
in
sub
shrb
push
into
lods
in
add
add
pop
das
xor
lea
sub
mov
push
jl
jbe
scas
bound
jno
sti
fucomi
loope
js
bound
inc
pop
and
lock
movsl
es
std
dec
fldt
or
shll
mov
sub
jo
iret
xchg
mov
xor
dec
pusha
ret
sbb
add
lahf
sub
leave
push
or
xchg
push
xchg
or
nop
and
sbbb
xchg
les
adc
imul
or
xchg
add
pop
rorb
inc
testl
adc
fwait
lds
add
mov
test
adc
push
push
mov
inc
call
dec
in
fsubl
push
dec
sbb
lcall
and
adc
push
insb
inc
out
notb
or
aam
push
dec
es
pusha
sbb
je
js
movsb
sarb
pop
dec
das
sbb
daa
xor
and
int3
movsb
rorb
inc
and
and
mov
lods
inc
jns
mov
aam
mov
pop
repnz
xor
shlb
add
loope
sbb
adc
arpl
mov
loopne
cmp
insl
out
insl
and
sub
and
adcl
fcoml
and
xchg
sub
mov
mov
out
inc
insb
pop
push
jmp
hlt
leave
cmpsb
mov
cmc
rcrl
in
js
shlb
sbb
cmp
rcll
stos
inc
fsubr
fnsave
cmp
inc
xchg
cmp
mov
ja
push
mov
mov
jno
imul
shrb
movsb
lods
int3
sub
mov
jle
adc
push
cmp
push
inc
cmp
jo
mov
xor
rorl
adc
add
push
jno
sarl
pop
add
mov
das
dec
dec
dec
cmp
xchg
mov
add
mov
add
es
pop
fnstenv
sbb
ljmp
xor
pop
adc
test
test
ret
les
loop
or
and
imul
mov
add
nop
test
imul
mov
subl
popa
dec
and
pop
adc
sbb
jae
inc
or
pop
dec
and
outsb
add
insl
xor
insb
adc
outsb
lea
dec
shlb
es
stos
xor
mov
cmp
or
icebp
popf
sub
jmp
fnsave
mov
dec
ret
mov
les
add
stos
and
sbb
das
outsl
popa
loop
dec
add
repz
leave
ret
add
ret
and
ja
cmp
mov
test
inc
outsl
adc
outsl
ret
or
cmp
xor
dec
sbb
push
cwtl
das
js
or
popf
les
adc
adc
in
add
loop
test
add
popa
es
pop
add
nop
test
imul
int
sub
cmp
sbb
push
insl
jno
add
xor
dec
jne
sarl
xchg
mov
inc
xchg
sbb
cmpsb
addl
fidivs
test
pushf
popa
cwtl
push
cld
mov
inc
aad
clts
out
add
jo
and
mov
jnp
push
in
dec
mov
mov
mov
add
mov
xor
ret
inc
adc
mov
inc
jnp
fnsave
sbb
sbb
sbb
xchg
dec
lods
push
and
stos
shrl
dec
add
sbb
std
popa
cmp
sub
les
dec
cmp
dec
inc
adc
add
sbb
mov
push
add
or
push
jnp
roll
mov
gs
xchg
andb
mov
fsubrl
sbb
int
pop
cs
sti
ret
roll
ret
mov
cmpsl
addb
ret
add
adc
imul
xor
test
adcl
mov
push
inc
mov
push
and
outsb
add
stos
addl
adc
mov
int3
cmpsb
sub
std
xchg
mov
imul
or
push
les
icebp
orb
inc
push
pop
insl
jmp
cmpsb
xchg
and
les
cmp
bound
imul
add
insl
jmp
call
add
dec
insb
ret
add
repz
enter
dec
pusha
add
jns
je
or
sub
or
ret
testl
add
sbb
adc
fwait
mov
es
adcb
or
imul
or
add
and
pop
inc
mov
les
out
data16
aaa
and
inc
dec
nop
xor
mov
push
ret
or
add
sbb
push
insb
insl
sub
add
subb
xor
sbb
sub
andb
sub
das
pop
orb
out
movsb
fadd
add
jns
ss
das
call
adc
js
sub
jno
insl
daa
xchg
test
and
faddl
movb
lret
repz
add
sub
or
and
vmread
inc
adc
sbb
ret
add
icebp
addb
ret
or
test
add
cmp
loop
mov
or
rolb
outsl
movsb
adc
insb
insl
xchg
add
divl
fisubs
xchg
xchg
add
pop
mov
sysret
pop
sub
mov
imul
gs
mov
push
ja
mov
xchg
dec
rolb
mov
stos
cmp
cmpl
sbbl
repz
cs
pop
mov
xor
cmp
insb
cmp
mov
iret
push
mov
mov
sahf
or
dec
shlb
pushf
out
or
das
and
nop
xor
pop
jl
cmpb
ret
jnp
test
dec
dec
incl
jo
cmp
shl
add
sub
popf
aad
sub
pop
cli
and
add
mov
lock
rcr
push
xchg
pop
or
sti
add
add
and
and
inc
dec
or
adc
add
mov
pop
add
push
sbb
or
and
add
cmp
iret
sbb
mov
cmpsl
cmpsb
or
pop
pop
clc
push
add
add
sbb
add
pshufw
xor
popf
mov
xchg
adc
sbb
inc
mov
nop
or
pusha
pop
and
mov
mov
mov
dec
and
mov
mov
aaa
sbb
bnd
cmp
adc
shrb
add
adc
lcall
dec
fmull
mov
xchg
sub
aas
les
pop
mov
fwait
mov
xchg
pop
and
loope
xchg
daa
rolb
xchg
mov
push
adc
jbe
xchg
shrl
iret
dec
repz
les
leave
pop
jl
movl
pop
add
dec
push
mov
adc
popa
and
jbe
xchg
adc
add
mov
or
xchg
xchg
xchg
cmp
fwait
dec
xchg
rcr
adc
push
pop
sbb
shrb
popf
fwait
adc
add
push
cmpsl
les
add
xchg
or
and
rcll
test
push
test
fucom
rorb
loope
in
or
adcl
and
into
and
sbb
and
fidivrl
adc
xchg
or
insb
mov
add
xchg
arpl
insb
cmp
movsl
arpl
add
mov
add
movsl
nop
dec
mov
mov
fstl
sahf
add
push
mov
or
and
outsl
rclb
mov
nop
sbb
sbb
sbb
sahf
add
mov
push
adc
cs
or
jo
mov
fcmovnu
jge
fcomps
dec
pushf
adcb
mov
cli
lret
ds
test
pop
jo
dec
xor
out
arpl
push
push
js
test
xor
dec
cmp
movsb
cmp
or
xchg
fwait
bound
pop
sahf
add
mov
xchg
movb
sbb
add
and
xor
lea
or
out
mov
push
mov
and
jmp
dec
rorb
mov
add
sub
mov
add
inc
ficompl
call
clc
aaa
ret
xor
push
or
mov
dec
or
mov
nop
mov
and
or
dec
xor
addr16
pusha
sbb
or
cmp
lret
daa
and
cmp
xchg
jmp
or
push
dec
push
movl
cs
stos
pop
inc
sub
std
inc
and
dec
dec
or
lahf
inc
loope
add
stos
sbb
into
insl
cld
cmp
rclb
and
cmovae
add
adc
lcall
scas
out
sbb
adc
and
push
xorb
or
pop
dec
cmpsl
insb
test
rolb
dec
rclb
dec
dec
pop
adc
and
dec
dec
and
push
dec
test
mov
jg
pusha
arpl
xor
inc
sub
add
push
xorl
push
jo
popa
pop
adc
aad
and
mov
add
or
cmp
rcrl
pop
test
mov
shll
inc
mov
push
int
sub
jno
and
or
jno
mov
insl
cmp
inc
rol
dec
dec
cmp
add
pop
xchg
cltd
and
and
insb
pop
nop
icebp
lods
adc
mov
fwait
test
mov
sbb
xchg
call
xor
or
mov
stos
flds
jge
jb
pop
test
call
mov
push
sbb
lods
ja
add
mov
shlb
and
push
push
loope
cmp
push
xchg
pop
imul
jp
adcl
xchg
addb
mov
in
xor
pop
inc
or
xchg
sbb
js
push
rolb
adc
mov
pop
test
mov
and
xor
add
shlb
push
sbb
mov
xor
rclb
sbb
inc
mov
jle
fcmovnu
push
push
mov
test
orb
sbb
sub
dec
in
jge
cmc
sub
push
add
sub
mov
push
idivb
lea
jmp
lret
add
outsb
adc
mov
push
dec
fdivl
js
icebp
lods
outsl
stos
mov
mov
xor
jl
add
mov
and
les
xor
add
or
sbbb
insl
xor
push
cmp
or
daa
sbb
rcrb
xor
loopne
shlb
idiv
inc
lds
jo
sbb
aam
or
mov
mov
jg
add
test
lock
adc
or
cmp
scas
shrl
mov
adc
and
aaa
gs
shll
or
das
movsl
mov
mov
das
dec
add
jbe
testl
xchg
cmpsb
test
outsl
loop
and
aaa
ja
inc
push
push
cmp
jbe
xchg
jl
push
or
sbb
push
aad
push
push
add
icebp
add
push
leave
pop
icebp
xchg
adc
cmp
mov
xor
cwtl
add
cli
mov
cmp
ret
fidivl
dec
push
out
jo
ljmp
pop
push
and
inc
jb
hlt
adc
mov
in
pop
xchg
or
dec
and
xchg
mov
fstps
bound
orb
icebp
movsl
inc
jle
pop
mov
push
xchg
sub
mov
add
movsl
addl
mov
add
sub
or
add
aaa
push
mov
mov
clc
pop
and
add
ljmp
and
add
ja
pop
push
mov
add
sbb
push
xorb
xlat
add
jne
and
add
shll
mov
cmp
dec
push
add
mov
push
popa
xchg
lahf
lret
adc
rorb
stos
inc
sub
shl
subl
dec
pop
popa
out
shll
lods
add
cmpsl
add
mov
fwait
gs
add
push
pop
repz
mov
mov
movsl
mov
push
mov
inc
cwtl
cmp
das
outsb
add
fsubrp
dec
xor
mov
pop
in
xchg
cmp
push
orl
pop
jecxz
push
adc
lock
mov
inc
xor
jo
pop
adc
test
and
or
sti
add
lods
mov
dec
stos
aaa
cmp
jmp
jno
icebp
or
dec
jmp
push
stos
es
imul
fadds
lcall
cmp
xchg
rcrl
pop
outsl
iret
or
or
pop
pop
sub
les
cmp
mov
and
test
and
pop
add
mov
dec
or
cwtl
dec
or
add
scas
push
fwait
inc
mov
ret
mov
pop
cmp
fbld
dec
and
dec
inc
jp
push
sbb
sbb
pop
mov
add
sbb
mov
addb
lahf
mov
loop
cmp
pop
pop
or
jle
xchg
add
lret
push
std
lret
mov
aad
cli
mov
mov
popa
je
into
lret
push
sub
mov
orl
jb
popa
sub
mov
push
dec
jns
dec
jl
jo
sbb
mov
jo
add
js
test
sub
jno
push
xchg
sbb
shrb
sub
pop
lods
mov
add
mov
scas
add
adc
test
fsubs
xor
mov
jge
pop
inc
pop
or
adc
ja
xorb
lret
push
loope
movsb
inc
addr16
stos
xlat
fs
lret
lods
xor
inc
push
int3
add
sbb
mov
in
inc
sbb
adc
xchg
and
stc
adc
or
mov
mov
xorl
dec
loope
lods
es
shll
xchg
cwtl
push
mov
mov
insl
xor
push
rol
or
add
dec
mov
mov
imul
das
mov
flds
or
out
pusha
and
cwtl
add
push
or
mov
shlb
adc
mov
sub
pop
mov
sub
icebp
loope
jecxz
jecxz
add
push
sbb
mov
and
adc
and
cmp
dec
enter
iret
dec
pop
adc
dec
in
and
dec
repz
add
cmp
mov
ret
std
xor
sub
mov
fiadds
call
sbb
xchg
mov
add
orb
or
test
add
sbb
imul
pusha
cmp
int3
xor
dec
cmp
push
adc
sbbl
sub
sbb
add
dec
nop
into
in
test
daa
imul
out
add
dec
xor
xchg
repz
lea
negb
or
dec
push
jb
adc
xor
out
sbb
inc
jp
inc
lcall
fisubrl
and
mov
sub
pop
or
sbb
mov
aam
dec
out
inc
jmp
outsl
add
lcall
and
dec
fwait
cmp
stos
fisttps
fstpl
add
ret
test
pusha
cmp
mov
lods
xchg
pop
lock
pop
rcrb
lret
lahf
xor
mov
jmp
cmp
int3
dec
inc
pushf
push
mov
out
fsubrl
add
sbb
xor
add
inc
push
ficompl
pop
fwait
mov
jns
add
dec
in
push
lds
jno
dec
aad
push
incl
mov
outsb
dec
xchg
or
add
ja
adcl
sbbb
inc
sbb
loopne
addb
fs
test
paddd
inc
lock
mov
sar
jo
pop
test
cmp
repnz
or
unpckhps
je
stos
in
rclb
aam
mov
cmp
jp
repz
and
sub
clc
mov
push
jns
fdivl
cmp
xor
cmpsl
dec
rolb
jp
int
movb
adc
jo
mov
enter
mov
lods
adc
or
dec
xchg
fs
adc
pop
pop
arpl
test
jmp
xor
movsl
jo
fiaddl
std
ret
pop
insl
lods
rcrb
sahf
and
xor
je
xchg
mov
test
adc
repz
sbb
mov
adc
or
push
xor
lds
leave
sub
dec
daa
add
out
cmpsb
lock
lds
pop
stos
mov
ja
sub
dec
dec
jb
push
fsubrl
sbb
nop
mulb
pop
inc
adc
add
or
jecxz
shrb
outsb
dec
add
mov
mov
mov
das
clc
cmp
sub
shll
xor
xchg
bound
xor
mov
dec
jle
aam
and
fdivs
imul
and
pop
inc
and
arpl
and
out
mov
outsb
rcrb
les
inc
sub
mov
outsl
popf
icebp
add
sbb
dec
movsl
loop
jmp
inc
popa
cltd
das
mov
xchg
cmpb
mov
mov
ljmp
and
add
and
je
sub
push
jb
addr16
and
inc
ret
shlb
popa
or
mov
test
addb
sbb
sub
int
or
iret
add
inc
test
cmp
sub
jne
dec
cmp
dec
lcall
push
inc
xchg
fsts
or
inc
jne
pop
xlat
addr16
ret
inc
aam
lods
stos
dec
mov
in
movsb
ljmp
mov
pushf
add
adc
lret
jbe
xchg
and
push
push
hlt
jle
daa
ss
shlb
mov
add
aaa
or
adcb
dec
das
or
jmp
mov
mov
test
mov
push
mov
insb
imul
xchg
orl
push
pop
add
sti
out
stos
dec
test
mov
xchg
jo
lds
mov
ret
rorl
and
and
inc
inc
add
and
add
dec
xchg
xchg
daa
les
dec
mov
push
dec
mov
clc
nop
push
pop
jne
es
adc
mov
xor
test
icebp
scas
popf
inc
lock
ror
sahf
mov
rorl
xor
sub
loope
adcl
jb
adc
ret
or
dec
and
and
lds
jl
add
in
pop
inc
add
cmp
add
xlat
mov
inc
xchg
rorl
fmull
pop
add
lret
out
aam
sub
nop
dec
ds
mov
fwait
xchg
in
add
pop
gs
push
insl
cs
adc
add
inc
xor
lea
rcrl
push
outsl
mov
and
xchg
movsb
pop
in
shrl
jg
stos
and
xor
and
push
fwait
ret
sbb
lock
sbb
xor
lea
pop
mov
add
inc
loopne
jb
mov
mov
scas
add
mov
jne
pop
sub
mov
icebp
dec
test
wbinvd
dec
in
inc
imul
test
in
adc
push
js
aaa
jg
pusha
pop
cmp
hlt
js
cmp
iret
and
cmp
pop
or
sarl
adc
enter
sbb
xor
mov
adc
cmpsb
jnp
sbb
rcrl
mov
ret
mov
and
adc
imul
lcall
ja
pop
add
leave
pop
add
dec
pop
mov
dec
sbb
hlt
add
orl
movl
hlt
and
add
cmpsl
adc
and
cmp
loop
cmp
dec
inc
push
adc
mul
pop
inc
cmpsl
push
sub
and
test
sti
cmp
dec
clc
int
daa
popa
out
test
outsb
movsl
js
mov
sub
add
push
inc
loop
fmull
cwtl
dec
pop
scas
ja
pop
or
aad
jp
adc
jg
aad
test
inc
pop
pusha
mov
inc
mov
add
pop
pop
add
movsl
movsl
pop
xor
rcl
add
movsl
inc
out
inc
lods
adc
push
jo
loop
xor
orl
fildl
add
enter
or
movsl
nop
hlt
jo
arpl
lock
pop
sbbb
sub
jmp
fwait
jge
push
push
loopne
leave
fmuls
sbb
xor
ja
imul
lahf
xchg
adc
in
add
xchg
cmp
out
xchg
movsb
push
call
pop
mov
adc
in
inc
loopne
xor
sub
test
xor
sbb
jnp
aaa
cmpsb
lods
sbb
xchg
jno
dec
or
push
adc
std
mov
and
inc
pop
daa
imul
lods
adc
jle
push
pusha
mov
push
icebp
inc
imul
add
outsl
add
or
inc
iret
jecxz
jp
mov
adc
cmc
adc
cwtl
mov
sub
mov
cmp
daa
or
fstl
fs
jo
or
mov
jl
int
inc
sub
inc
ljmp
mov
dec
jo
rdmsr
lds
jle
lahf
cltd
sahf
pop
loope
rorl
cwtl
sarl
lret
imul
mov
push
and
or
inc
mov
test
mov
cmpsb
mov
jb
adc
psubusb
pusha
push
dec
lret
test
sbb
jno
jnp
push
cs
mov
inc
sub
xchg
mov
and
dec
lods
test
cmpsb
lock
pop
mov
shrb
je
pop
jecxz
sbb
or
ficoml
addr16
push
ror
pop
pop
xlat
bound
lds
sub
cmp
pop
test
adc
adc
xchg
sbb
aam
pusha
add
adc
dec
pop
xor
xor
mov
movsb
aaa
and
xchg
xor
jecxz
or
sahf
and
sahf
mov
mov
mov
fisttps
xchg
add
sbb
bound
sub
push
push
popa
cmp
adc
cmp
fmuls
add
pop
in
insb
lods
sbb
dec
lock
rcrl
insl
sbb
lock
and
dec
push
arpl
popa
mov
cmp
mov
mov
cmpsl
xor
xor
xchg
mov
mov
inc
sti
shrl
lret
movsl
pushf
and
out
pop
test
cmp
mov
nop
lods
sub
mov
cmp
xor
xchg
gs
push
adc
xor
pop
cmpsb
pop
leave
test
push
xor
cli
into
movsl
push
sbb
call
inc
inc
lods
jle
or
pusha
rcll
aam
outsl
xor
orb
xor
push
and
mov
jae
add
dec
xchg
inc
push
out
test
in
movsb
dec
out
je
or
cmp
out
xchg
insb
std
jl
cmp
lcall
or
mov
sbb
mov
or
and
loopne
push
jns
pop
xor
push
in
test
add
popa
out
repz
or
jecxz
shrb
xor
into
rol
out
xor
call
adc
or
pop
dec
xchg
sahf
pop
xchg
sbb
push
in
lods
rclb
mov
rorb
dec
dec
inc
sub
lock
push
aad
xor
mov
adc
lea
and
addb
xchg
sub
test
mov
leave
add
clc
xor
xlat
xchg
jmp
push
or
or
inc
xchg
inc
orb
or
pop
rol
popa
adc
add
pop
mov
add
roll
mov
push
sbbl
cmpsb
test
cmp
orl
fwait
clc
xchg
jne
ret
or
or
iret
imul
lods
pop
and
dec
push
jecxz
lret
loope,pt
inc
sbb
push
iret
mov
xor
stos
and
and
lahf
fiaddl
daa
or
mov
icebp
cmpsb
dec
cmc
sbb
cmovnp
mov
and
push
fcmovnb
or
lds
outsl
dec
leave
push
insb
lock
loopw
cmc
or
popa
outsb
mov
xor
xor
rcl
pop
push
fmull
jns
sbb
nop
loopne
mov
out
push
fadds
fistpll
and
cmp
notl
pop
dec
add
jae
pop
or
xchg
mov
test
pop
ljmp
nop
dec
shl
in
call
jne
jns
add
leave
rolb
ss
insl
xorb
insb
or
fwait
arpl
popa
xorb
mov
mov
or
das
xchg
push
xchg
ret
xchg
and
lods
push
cli
sub
popf
mov
sub
popa
push
and
mov
pop
xor
rclb
cltd
mov
testl
ret
in
adc
pop
rorl
push
jmp
out
mov
in
pop
push
mov
daa
xchg
push
and
ljmp
adc
pop
mov
adc
or
jmp
outsl
jno
movsl
sbb
sahf
push
xchg
pop
or
pop
and
negb
inc
jl
ret
movsb
rorb
aas
insl
add
nop
and
scas
or
pop
sbb
aam
mov
cmp
pop
cmpsl
pop
xor
ds
mov
or
jns
jp
add
jne
xchg
aaa
ds
mov
shrl
and
or
push
jecxz
pop
lods
xor
ljmp
sub
mov
jecxz
je
popa
add
cli
shl
adcl
mov
loope
xchg
xchg
xlat
adc
inc
push
jns
jmp
icebp
pop
movsl
popa
pushfw
adc
inc
adc
movsl
pop
jo
insb
mov
cmc
sahf
dec
adc
pop
popf
xor
add
push
mov
cwtl
ret
scas
cmp
int3
lock
add
mov
loope
ja
sbb
add
lock
pop
mov
pop
sub
mov
mov
sub
or
mov
inc
mov
paddusb
aam
cmp
ret
xchg
shrl
xor
cmp
dec
xchg
pop
mov
fstpt
insb
je
push
out
or
sub
inc
call
fnstcw
shl
xlat
addb
mov
loop
mov
pop
add
or
insl
push
cwtl
add
jnp
rclb
inc
push
xchg
add
dec
ret
inc
sbb
or
add
inc
push
add
lret
pushf
add
andl
mov
or
add
dec
pop
nop
dec
xchg
push
add
push
das
arpl
push
les
cmp
movsb
icebp
mov
mov
out
add
fnsave
cs
adc
cmp
lret
and
repnz
xorb
lock
mov
push
js
mov
or
push
cmp
pop
stc
lods
leave
sub
push
mov
mov
cmp
iret
xor
xchg
push
mov
cmpsb
popa
xor
and
inc
inc
push
or
sbb
xor
or
out
scas
cmp
sbb
loope
jp
or
push
xchg
jo
stos
in
adc
mov
movsl
sbb
lock
ss
and
and
dec
loopne
sbb
mov
insl
imul
adc
in
addr16
adc
dec
stos
ss
jno
clc
es
clc
or
lock
push
ret
xchg
lea
add
add
xchg
out
add
inc
fsubrl
mov
xchg
les
mov
xchg
cmc
xchg
enter
inc
jl
and
icebp
repnz
test
mov
icebp
mov
movsl
dec
xchg
jb
fildl
xlat
or
loope
test
adc
lret
push
add
xchg
cwtl
ret
icebp
xor
inc
scas
sub
add
rcr
lret
cmc
inc
jg
push
inc
sbb
sbb
jecxz
pop
jbe
xor
pop
mov
add
fistps
js
popa
lahf
notl
fwait
sub
push
shrl
and
adc
xchg
xchg
bnd
fwait
mov
and
sahf
cmc
add
xchg
mov
movsb
push
sti
adc
pop
cmp
test
dec
jno
testb
mov
and
daa
xor
stc
loope
add
icebp
dec
dec
mov
aad
xchg
mov
mov
push
xor
push
adc
mov
add
mov
bound
push
pop
push
stos
imul
jp
xor
sub
aad
aaa
adc
lds
jg
lock
gs
sub
mov
popf
idiv
and
xchg
data16
xor
jo
inc
xchg
lods
mov
lahf
mov
je
or
ret
sub
sub
mov
ret
dec
sbb
arpl
in
inc
mov
pop
xor
popa
sub
ja
pop
xchg
mov
inc
add
xor
jmp
stos
das
daa
loopne
sub
lret
add
adc
andb
popf
aam
movsl
adc
or
fcompl
xor
inc
and
pusha
xor
je
adc
test
nop
pusha
fiadds
sbb
push
fwait
xor
add
xor
sbb
jns
pop
xor
imul
add
inc
dec
jg
lock
pop
pop
jnp
inc
jne
les
mov
and
bnd
ret
xchg
add
into
xor
popf
fstpl
or
movsb
into
add
rclb
pusha
add
aam
or
imul
add
fnsave
loopne
inc
inc
adc
dec
inc
outsb
sbb
stc
inc
sbb
test
out
es
add
mov
sub
lea
mov
daa
cwtl
jno
and
mov
add
xchg
xchg
cltd
movb
sbb
xchg
loope
push
inc
mov
dec
pusha
adc
inc
popa
orl
lahf
mov
xor
and
push
add
jae
pop
mov
push
cmp
lret
xchg
sbb
adcb
jle
push
lock
shrb
outsb
adcl
cs
jmp
sbb
aad
add
cmp
cmp
movsb
dec
inc
adc
mov
adc
les
pop
mov
add
rcrl
loopne
repz
sar
jl
lock
jle
or
in
or
dec
orb
inc
shlb
xor
and
sbbl
dec
popa
jecxz
lret
and
mov
xor
sbb
bnd
xor
cmc
mov
je
sbb
andb
outsl
insb
loope
pop
mov
pop
mov
cmc
cmp
sub
sub
xor
xor
rolb
sbb
popa
in
icebp
push
sbb
sbb
mov
mov
dec
sbb
ljmp
outsb
pop
add
in
adc
adc
add
pop
xor
loope
or
dec
lahf
rolb
jl
insl
jo
inc
or
jge
inc
xlat
popa
push
loopne
sub
mov
pop
movsl
inc
push
rclb
mov
pop
add
xchg
inc
dec
mov
bound
push
dec
and
add
mov
add
in
das
imul
icebp
xchg
pop
cmp
mov
loopew
sub
mov
inc
inc
cwtl
push
das
and
jno
inc
xor
sbb
loop
add
or
imul
sub
enter
push
mov
and
xor
jge
mov
pusha
outsl
mov
aas
dec
inc
in
sbbb
je
imul
push
ss
fstl
push
mov
rolb
call
test
repz
xchg
es
cmpsl
mov
sti
mov
cltd
mov
shlb
adc
xor
cmp
pop
dec
jo
popa
mov
fwait
sbb
dec
adc
push
or
mov
mov
and
dec
inc
add
sarl
jmp
cmc
or
loopne
and
or
xchg
add
sbb
aas
pusha
cmpsl
fadd
xchg
jae
rcll
pop
xchg
jg
mov
sub
pop
out
push
jno
in
mov
push
or
movsb
jo
ret
dec
cltd
lds
imul
add
or
sub
xor
mov
xchg
adc
push
mull
cmpsb
sbb
and
mov
adc
lods
icebp
and
pop
dec
and
or
insb
or
jecxz
sub
sbb
and
aad
sub
jo
push
inc
xor
aam
inc
movsl
enter
nop
popf
and
lock
rclb
push
outsb
notl
bound
pop
mov
pusha
lcall
fadds
aam
push
arpl
sub
push
pop
aas
add
xor
mov
es
jp
data16
shlb
movsl
aad
jno
sahf
xor
push
and
aam
aam
sbbl
shlb
push
outsb
cs
cwtl
and
inc
loope
js
mov
push
push
jecxz
mov
sbb
sbb
pop
in
push
mov
lea
sbb
loope
mov
gs
call
ss
dec
sbb
aad
add
cwtl
rclb
push
lock
mov
or
popa
cmp
scas
adc
xor
subl
mov
pusha
bound
mull
loopne
mov
or
repnz
pop
mov
shll
nop
xorb
cmpsb
mov
aaa
leave
or
add
mov
push
cmp
daa
sub
xor
push
sbb
pushl
arpl
mov
ret
lret
dec
add
ljmp
arpl
pop
popf
leave
mov
incb
sbb
js
sbb
and
or
pop
or
fbld
movsb
push
cld
fcoms
ficoml
and
jo
push
or
pop
mov
or
ret
scas
lahf
rcl
or
fstpl
xor
pop
xor
fsubs
pop
daa
imul
push
lods
mov
gs
mov
icebp
xor
sbb
dec
pop
or
xchg
and
mov
add
adc
dec
les
test
jmp
cmp
shlb
or
in
fistpl
dec
and
mov
in
or
or
inc
out
addr16
or
xchg
dec
clc
pop
push
gs
clc
addr16
sbb
push
mov
and
cmp
repz
out
out
jmp
or
sbb
jo
inc
cmp
inc
ja
or
add
out
push
test
ret
cmp
imul
nop
ja
add
dec
mov
cltd
rclb
sub
add
add
xchg
add
cmpsl
push
xchg
inc
add
mov
imull
hlt
ret
gs
mov
inc
push
out
dec
ljmp
pop
outsb
dec
mov
cltd
and
xchg
xchg
int
out
mov
sub
fnsave
shrl
mov
adc
pusha
jg
inc
push
divl
lods
jmp
into
adc
insl
lret
jb
loopne
out
nop
stos
xor
movb
mov
mov
test
andb
and
mov
adc
pop
push
popa
loope
in
dec
filds
popa
rorb
pop
lahf
insb
xchg
fdivrl
outsl
mov
je
mov
subl
das
out
lock
push
insl
or
inc
sbb
dec
jne
movsl
cmpsl
aaa
jb
xor
aaa
aad
loop
in
cmp
imul
mov
add
cmc
dec
call
stc
xchg
add
jmp
pop
push
fs
or
subl
mov
mov
fs
pop
xchg
mov
pusha
shl
pop
sbb
add
popf
xchg
or
nop
movsb
pushf
ljmp
add
movsl
int
inc
sub
add
pusha
aam
and
push
dec
adcl
cli
loopne
jmp
inc
sahf
nop
jp
ja
jns
or
fs
jne
xchg
add
add
repz
out
sub
pop
add
orb
lea
or
or
mov
or
xorb
in
lea
mov
sub
jno
cwtl
rolb
lret
cmp
leave
xchg
add
lcall
mov
cmp
xor
push
test
es
and
dec
stos
test
movsl
mov
ret
add
ss
in
xchg
dec
push
sub
push
and
jo
lcall
jge
adc
or
xor
aam
addb
push
sbb
nop
sahf
sbb
scas
test
dec
incl
jns
movsb
jmp
inc
and
push
xchg
cmp
inc
mov
mov
leave
adc
push
pusha
test
push
cmp
sbb
cmp
lret
sti
fwait
add
push
test
jecxz
ljmp
push
push
push
pop
lods
fst
popf
test
push
insl
pop
pop
xorb
jnp
stos
add
jmp
lds
frstor
mov
lea
sti
negb
stos
xchg
div
int
cmp
push
push
add
aam
sbb
mov
sub
add
pusha
pusha
arpl
sbb
sbb
mov
lsl
or
lret
nop
shlb
imul
outsb
xchg
into
push
out
loop
popa
inc
inc
push
rcl
push
pop
test
aaa
inc
jb
test
push
and
xor
push
xchg
mov
mov
movsb
dec
dec
test
out
push
rorl
outsl
loopne
test
push
dec
out
popl
insl
sub
es
inc
fucom
adc
jnp
sbb
sub
dec
sbb
shl
repz
xor
cmpsl
jmp
loopne
sbb
jno
xchg
fwait
aam
push
pop
loopne
jae
mov
or
dec
lea
int
jnp
mov
xor
jg
imul
push
in
dec
lret
gs
xchg
pop
push
dec
mov
adc
or
push
add
pop
mov
add
dec
sbb
js
clc
inc
sub
add
mov
sbb
pop
add
sub
push
sbb
repz
push
int
push
test
mov
fstpt
jo
dec
sub
or
fwait
rorl
mov
add
cmp
rolb
dec
cmp
jb
dec
push
shrb
push
add
jecxz
push
cmp
sbb
jp
dec
fsubrp
pop
js
adc
fbld
or
add
and
or
loop
jne
push
sbb
pushf
mov
push
cltd
push
sti
sbb
stc
inc
adcl
loop
pop
ret
cld
xchg
push
or
mov
xor
fidivs
and
sbb
sbb
add
adc
ret
stos
xchg
ss
mov
push
pop
popf
mov
cmpsl
loop
addb
inc
rcr
sbb
ds
pop
push
ret
mov
pop
sbb
lcall
loopne
xor
push
xchg
mov
push
sbb
xor
inc
stos
std
add
xchg
cwtl
outsb
movsb
push
xchg
jnp
rcr
push
or
lahf
jo
mov
lea
inc
fwait
subb
cmp
sub
mov
sub
addl
lods
dec
out
cmp
push
out
ret
dec
call
push
adc
test
push
sbb
cli
fistpl
insl
ljmp
jecxz
ret
fcmovne
imul
add
sahf
sub
rcll
push
scas
insl
cs
dec
adc
not
cltd
ret
jo
push
inc
ds
and
adc
jae
push
ficoml
adcl
adc
lock
cld
inc
sbb
bound
and
insl
std
xorb
cmp
cmp
mov
ja
test
inc
sub
xchg
lret
call
pop
push
int3
jbe
xchg
xchg
dec
and
inc
bound
cmc
outsl
out
jae
jge
or
jg
jmp
mov
bound
mov
out
into
mov
adcl
arpl
mov
mov
push
push
or
data16
lock
icebp
cli
sub
inc
cmp
insl
repz
adc
enter
cs
mov
or
add
imul
data16
cmpsl
dec
pop
add
jg
sbb
add
and
inc
ljmp
movsb
aad
shrl
fs
add
sbb
lcall
aad
xor
inc
add
fsubl
sbb
jo
je
xchg
add
test
test
xor
outsl
sbb
xor
mov
cmp
cs
xor
adc
or
xchg
sbb
pop
nop
mov
or
je
lea
xchg
add
insb
dec
andl
add
movsb
fyl2x
xchg
push
adc
sub
scas
and
dec
push
jb
ja
jmp
jne
cmp
hlt
es
dec
push
jb
sbb
mov
pop
add
ret
fdivrs
int3
mov
mov
add
xlat
fidivrl
xchg
mov
push
mov
lods
sub
lret
cmp
data16
arpl
mov
push
lret
cmp
nop
push
repz
rclb
sub
dec
pop
sbbl
sub
lds
iret
jmp
pop
imul
ret
mov
dec
leave
push
nop
xchg
sahf
cmp
cmp
je
jne
push
sub
xchg
adcb
aas
pop
lods
rclb
popa
cmp
or
jb
sbb
loopne
stos
inc
inc
cwtl
dec
bnd
xchg
sti
xor
pop
adc
addl
cmpb
pop
imulb
pop
sub
add
push
and
dec
cmp
inc
jo
in
es
outsl
xchg
shrb
sub
mov
add
xor
mov
add
xchg
add
push
insl
dec
mov
xlat
add
and
sbb
or
fs
inc
adc
pop
call
jp
hlt
cs
sub
mov
sahf
jno
and
mov
inc
test
arpl
je
cmpsl
add
fstps
jl
or
nop
or
mov
data16
jp
jp
xor
mov
mov
xchg
mov
mov
int
pop
cmpsl
movsb
cmp
aas
movsb
mov
pop
mov
popf
inc
out
mov
addr16
sbb
sub
mov
pop
rolb
cmp
pop
xor
rolb
iret
mov
or
rolb
rolb
add
repz
sbb
roll
popa
movb
shlb
pusha
add
pop
xchg
pushf
jo
mov
out
inc
xchg
mov
pushf
pop
pop
ror
and
addr16
and
and
add
mov
rclb
jnp
insl
fsubl
and
cmp
push
cmpsl
pop
cmp
mov
daa
dec
scas
mov
sbb
roll
mov
loop
cltd
out
loop
cwtl
and
popf
mov
mov
rolb
add
shlb
jl
mov
mov
loopne
inc
mov
sbbl
std
call
add
cmp
adc
pop
xchg
dec
fsubr
shr
add
mov
inc
jae
inc
daa
jno
in
adc
imul
or
iret
or
jl
sbb
lds
sbb
jo
fisubrl
shrl
sbb
shlb
sub
mov
aas
cmp
adc
test
adc
pop
pop
push
pushf
add
rcrb
or
mov
xor
adcl
xor
or
outsb
pop
adc
or
fwait
cmpsb
in
and
push
inc
popa
adc
js
jmp
call
gs
mov
popa
pusha
cmp
rcrb
insl
daa
negl
and
mov
or
mov
xchg
test
or
data16
sub
push
data16
xor
jl
sub
ret
xor
clc
cmp
sbb
mov
mov
test
inc
sbb
dec
cmp
xor
clc
loop
sub
mov
icebp
jno
outsl
sbb
clc
adc
test
nop
mov
adc
in
sbb
lea
clc
pop
sub
xchg
jno
sbb
dec
mov
inc
inc
push
inc
mov
inc
or
jo
test
aam
and
mov
ss
mov
dec
out
xchg
jg
dec
call
add
or
add
out
sbb
shlb
movsl
pop
add
xchg
xchg
sub
add
js
ds
add
pop
pop
add
aas
inc
mov
pop
mov
das
rcrb
and
mov
aam
sbb
dec
lock
push
jno
mov
lret
push
popa
cltd
cld
adc
add
push
mov
pop
mov
dec
xorl
sub
or
fsubr
insb
or
cltd
or
pop
out
hlt
jno
es
push
popa
jle
or
sbb
mov
jmp
sahf
pop
repnz
adc
test
dec
loopne
imul
aam
sub
mov
mov
xor
xchg
adc
popf
sub
bound
decl
and
sub
jbe
aas
and
push
rcrb
inc
xorl
imul
jnp
pushf
xor
test
das
dec
and
adc
lds
enter
pop
mov
daa
inc
subb
hlt
sbb
sbb
sbb
mov
mov
inc
pop
adc
inc
pusha
xor
clc
adc
test
lret
push
scas
pop
cmp
fimull
add
adc
or
orb
add
mov
cmpsl
dec
mov
mov
inc
cmc
daa
mov
push
pop
xor
adc
add
out
aas
pop
pop
js
js
add
jecxz
icebp
in
dec
pusha
std
es
jg
outsb
inc
mov
ffree
cmpb
sub
ss
sarb
jnp
or
push
pop
fwait
mov
pop
and
or
sbb
xor
push
in
xchg
cltd
imul
and
enter
popf
fimuls
iret
mov
out
or
add
es
xor
pop
loop
mov
mov
cmpsb
outsb
xchg
mov
scas
loopne
mov
inc
inc
cli
es
fidivrs
pop
loopnew
fidivl
cmp
jecxz
cld
imul
inc
and
pop
in
aaa
pusha
push
dec
sbb
orb
cmpsb
loopne
movsb
je
adc
inc
inc
or
or
nop
flds
dec
fadds
adcb
mov
popa
loop
test
ret
pop
or
pop
add
enter
xchg
or
mov
inc
bound
xor
cmp
scas
lds
lods
ss
xchg
sbb
cmp
out
jo
dec
loope
pop
test
jo
test
or
outsb
sti
andb
les
add
adc
pop
icebp
adc
lea
pop
jge,pn
add
std
out
mov
cmpsl
dec
out
inc
pop
mull
push
cmp
roll
int
sti
fmuls
mov
shr
aas
sti
sbb
xchg
mov
cmpsl
or
movsb
xor
mov
mov
in
xchg
test
xchg
mov
and
fnstenv
pop
fnstenv
lds
cmpsb
lock
cltd
shll
arpl
push
xor
sbb
mov
or
lods
xchg
out
push
call
or
xor
sbb
add
mov
xchg
mov
and
jb
cltd
fimuls
mov
xor
push
shr
cmp
sbb
mov
adc
add
cmp
inc
stos
sub
sub
adc
shlb
add
xchg
imul
sbb
and
lret
leave
nop
dec
add
pop
or
fwait
xor
js
push
jl
xor
movsl
mov
xchg
mov
mov
jp
jmp
adc
jno
gs
add
and
mov
adc
push
add
loop
or
and
lods
cltd
jb
mov
sbb
adc
sbb
lds
data16
imul
jo
add
and
sarb
rorl
dec
pop
xor
mov
cmp
mov
xchg
in
add
add
imul
stos
adc
push
sbb
sbb
mov
popa
out
push
mov
cmp
mov
and
mov
aad
scas
jno
adc
sbb
bound
jno
lods
mov
xor
fs
mov
inc
dec
push
mov
out
sbbl
cmp
xchg
inc
mov
mov
loope
std
cmp
mov
jmp
out
popa
mov
xchg
hlt
push
vmovshdup
sbb
mov
pop
add
xchg
xor
test
jle
or
sbb
lock
repz
inc
outsl
or
push
push
push
cmp
push
or
cmp
dec
lret
lret
les
sub
jbe
shrb
das
xchg
cli
ret
add
cmp
jle
add
gs
adc
pop
in
lea
popa
cmc
cmpsb
repnz
clc
and
into
sqrtps
add
std
dec
push
loopne
push
sbb
jo
dec
dec
pop
xchg
pop
push
sbb
sbb
adc
inc
mov
movnti
ret
and
sbb
imull
dec
popa
pop
cs
arpl
nop
jo
push
push
push
leave
std
mov
cmc
jae
test
mov
iret
lock
fadds
test
cs
mov
add
aad
adc
cwtl
adc
adc
jne
or
inc
mov
cli
cmp
into
inc
push
pop
sub
pop
fmuls
cmp
add
cmp
popf
mov
jmp
push
in
xor
jne
inc
jge
aaa
xchg
or
mov
stos
incl
test
xor
pop
sbbl
bnd
dec
mov
adc
xorl
hlt
xchg
push
or
add
pop
xlat
add
mov
sub
jl
add
movsl
cmp
add
jmp
mov
daa
test
das
sbb
addr16
cmc
fnstcw
dec
fwait
clc
mov
adc
or
jo
xchg
dec
repz
jne
repz
lods
pusha
mov
sub
jbe
xorl
stos
popa
test
loopne
xor
cmp
pop
ds
jg
or
mov
js
mov
stc
lcall
stc
sub
mov
sahf
pcmpeqd
push
cwtl
adc
dec
dec
popaw
sbb
repnz
loope
outsl
cwtl
push
test
movsb
scas
sub
and
adc
in
lcall
ret
out
xchg
mov
cmp
push
cmp
inc
cmp
rcrb
mov
lea
lods
daa
mov
in
and
sbb
dec
or
dec
lea
fildll
add
mov
icebp
xor
add
cmp
andl
scas
scas
sbb
mov
lahf
mov
xchg
and
xchg
adc
xlat
lods
icebp
data16
xchg
add
popf
roll
sub
loopne
movsl
inc
and
imul
test
and
insb
pop
and
jns
adcb
push
ret
push
add
xchg
cmp
xchg
push
ret
imul
fidivrs
push
inc
mov
push
jge
movhps
shll
adc
mov
or
inc
loopne
push
outsl
pop
inc
push
pop
pop
lcall
icebp
jge
inc
jecxz
roll
add
push
and
add
popa
in
sbbb
push
and
mov
or
push
push
loope
mov
push
inc
leave
xor
rcr
lock
aam
mov
inc
cmp
clc
cmpsb
clc
js
addr16
jge
mov
inc
xor
mov
das
popf
loopne
dec
pop
pop
fs
inc
pop
sbb
add
mov
loop
push
addr16
cmp
xchg
loopne
orb
and
fsub
sbb
jle
mov
push
mov
xor
adc
jl
or
insb
pop
adc
jp
xor
cmp
jmp
jnp
daa
jmp
jl
neg
xchg
test
pop
stc
call
pop
gs
dec
test
push
pop
adc
std
mov
jne
inc
lods
sbb
mov
outsl
mov
inc
dec
inc
test
mov
inc
mov
pop
arpl
sub
xchg
and
daa
sbb
add
sub
lahf
pop
push
push
jns
jmp
mov
ret
les
lock
pusha
xchg
xchg
movl
dec
sbb
cmpb
jp
mov
xor
inc
outsl
add
inc
sub
sub
in
pop
and
insb
imul
ret
out
gs
jne
inc
int
loope
cwtl
add
rolb
ja
sub
ret
push
lock
lock
pop
and
mov
adc
xchg
lret
cltd
and
dec
or
ret
mov
xor
xchg
cmpsl
xchg
pop
mov
movsl
xchg
mov
mov
adcl
add
adc
test
xchg
ja
faddl
mov
js
arpl
or
lret
mov
adc
int
adc
lock
rcll
pop
or
and
pop
push
sub
call
dec
jb
arpl
pop
pop
outsb
insb
or
sbb
mov
je
pop
inc
int
ret
insl
and
adc
rorb
sbb
dec
outsl
mulb
and
mov
sub
cmp
cmp
adc
idivl
lods
xchg
sbb
cmp
lods
popl
fwait
icebp
bound
popa
pop
or
orb
push
xchg
push
repz
push
mov
inc
int
ljmp
push
mov
inc
push
loopne
sbb
jmp
or
cmp
imul
inc
or
outsb
adc
cmp
cmc
mov
add
adc
dec
lods
push
fisubrs
shll
jb
fistpll
insl
adc
jmp
testl
sub
dec
das
xor
mov
jp
mov
jge
jl
cmp
pop
mov
push
xor
xchg
push
add
mov
sbb
gs
add
mov
dec
cld
adc
mov
pop
jnp
in
sbb
cmp
js
pop
inc
sbb
mov
nop
and
mov
int
xchg
fcomps
cmp
je
les
fcoms
out
mov
aam
add
push
test
rorb
sbb
adc
inc
sub
and
fsts
jmp
jne
mov
aam
sbb
and
mov
stos
dec
lods
aam
jo
sub
adc
and
popa
sbb
lods
fcoms
or
pop
xor
add
fmuls
cmp
push
jns
xchg
sar
hlt
add
jge
dec
mov
adcb
jl
add
adc
cmp
daa
sbb
out
adc
pop
add
inc
and
aam
mov
xor
sahf
mov
adc
add
mov
cmp
gs
add
fwait
sub
mov
cmp
push
popa
add
xchg
sahf
pushf
and
nop
sarl
lock
push
cld
inc
ds
dec
repnz
dec
nop
or
lds
push
test
or
lcall
loop
mov
clc
push
pop
mov
sub
clc
ljmp
arpl
xor
xchg
popa
es
xadd
lods
sub
nop
call
push
sub
push
aam
jae
dec
jb
push
xchg
jp
sbb
sbb
push
push
and
cmp
xorl
lods
mov
xor
or
add
insb
add
adc
sti
sbb
or
sar
inc
outsl
pop
ja
adc
daa
and
imul
mov
in
sbb
pop
sahf
adc
mul
lock
xor
cmp
xchg
adc
enter
cmp
lods
sub
int3
push
mov
inc
or
inc
inc
das
xor
fcmovb
js
popf
dec
lock
lock
mov
pushf
dec
mov
mov
inc
dec
jne
add
in
fcmovnu
or
inc
mov
jns
aaa
dec
daa
and
paddb
cwtl
stc
jb
inc
sub
shll
loopne
lock
or
add
or
jns
test
popa
dec
sysenter
out
cmc
and
push
aas
push
jb
outsb
movsl
out
test
push
cwtl
bound
fsts
shll
rorb
adc
subl
in
cmp
clc
mov
push
jle
movsl
cmp
fadd
enter
xchg
jb
inc
jo
push
fwait
shl
popa
pop
scas
jb
pop
cmpsb
dec
push
add
dec
testb
addl
test
inc
add
test
mov
push
sbb
inc
lret
roll
aaa
cmp
nop
push
dec
lock
add
push
pop
call
and
inc
enter
sbb
sahf
jo
mov
mov
or
xor
push
add
inc
xchg
sbb
pop
push
mov
fidivrs
xchg
or
rorl
push
pop
pop
fsubrs
push
push
mov
loope
pop
adc
jae
mov
pop
sub
pop
int
pop
add
rcll
popa
add
xchg
int3
in
add
add
stc
dec
inc
xchg
adc
lods
sub
cmpsb
addl
lock
inc
jg
shrl
add
sub
sub
jo
pop
lahf
mov
adc
popf
jge
sub
dec
mov
sub
push
mov
add
stc
sbb
jae
inc
ja
and
fs
mov
add
ret
or
das
dec
arpl
mov
push
pop
add
sbb
insb
mov
mov
gs
lea
cmp
xor
pusha
stos
or
or
addr16
leave
jne
inc
lock
lret
aaa
mov
rorb
inc
test
fimull
and
inc
imul
popa
adc
popl
hlt
hlt
xor
orb
ret
dec
cmp
stos
in
pusha
lock
adc
mov
enter
lods
pusha
rcl
mov
ficompl
dec
push
sub
mov
lods
out
stc
jl
inc
sbb
sbb
test
mov
adc
test
wrmsr
and
inc
dec
add
push
pop
add
cmp
dec
push
pushf
rcll
dec
ret
pop
add
daa
and
shrb
pop
or
aas
in
and
inc
pop
or
dec
mov
sbb
inc
pop
jns
jo
jo
cmp
ds
pop
mov
dec
ret
dec
and
pop
lcall
scas
lcall
clts
es
test
stos
xchg
jge
inc
mov
jle
add
mov
push
stos
sbb
mov
inc
addr16
fistl
arpl
out
fidivrl
dec
das
shl
pop
cld
push
push
leave
inc
lock
add
call
push
insl
das
mov
dec
cmovnp
push
call
jmp
adc
or
je
ss
inc
jnp
mov
pop
sbb
mov
test
dec
cmp
inc
or
cmpl
ret
push
gs
icebp
ljmp
movsb
push
pop
push
sarl
jno
ds
sbb
xchg
mov
inc
cltd
gs
fiadds
xchg
add
cwtl
push
ss
ljmp
xchg
mov
sbb
daa
popf
pop
sbb
sub
aas
dec
test
cltd
xchg
adc
fsubs
push
pop
adc
sub
adc
sub
or
je
jae
fwait
inc
push
das
sarl
add
xlat
test
mov
cmp
pop
inc
js
mov
aas
dec
sbb
sbb
lahf
sub
ficoml
ret
adc
and
adc
jno
add
insl
push
push
aam
xchg
xchg
dec
clc
pop
push
js
das
lret
add
les
cmp
or
aaa
ja
xchg
mov
jo
cmpb
addr16
mov
lock
mov
inc
and
jb
or
inc
add
pop
aaa
cmc
add
stos
dec
lds
jae
or
mov
lea
fdiv
fnstsw
and
mov
add
fimuls
int3
mov
dec
dec
dec
inc
test
mov
jo
sbb
jne
push
mov
jg
xchg
push
pop
outsl
or
fsubl
or
adc
fwait
push
aad
lea
test
sbb
dec
out
add
and
lcall
icebp
or
lea
sbb
fwait
inc
jb
and
xchg
mov
push
loope
pop
hlt
das
mov
insb
or
dec
jae
outsb
xor
add
rcr
or
scas
push
xchg
loope
push
xor
loopne
std
repnz
int3
pusha
or
mov
or
cltd
shrl
nop
cmp
xchg
fadds
sbb
xchg
adc
test
push
sub
xchg
int3
lock
adc
jl
and
mov
adc
fcoms
test
loopne
sub
add
aas
push
or
sub
cmp
cmp
xchg
fildl
cmp
ret
jge
lock
shrl
popl
and
les
ds
add
lcall
dec
cmp
mov
add
push
mov
mov
add
xchg
cs
xchg
mov
add
push
call
push
cs
andb
fidivrs
pop
daa
test
insb
pusha
push
push
adc
int3
mov
popf
adc
jge
push
push
pop
daa
xlat
mov
and
cmp
add
mov
mov
jae
xor
jns
movsb
and
adc
dec
mov
testl
into
xor
sti
cmp
in
inc
popf
jmp
dec
inc
pop
mov
shlb
ds
iret
cmp
add
movsb
or
in
roll
jns
inc
clc
add
jmp
xadd
and
pusha
or
adc
out
fbld
movsl
jmp
pop
insl
ret
gs
adc
xor
and
pop
movsl
dec
pop
lods
aaa
test
add
shrl
lods
or
mov
xor
add
cs
sub
and
jb
xchg
loope
mov
mov
lods
scas
aam
sbb
clc
je
add
mov
jmp
rorb
mov
icebp
outsl
mov
loopne
in
movsb
or
mov
xor
lock
lods
add
jo
pop
orb
fcomip
mov
adcb
push
sub
mov
xor
mov
xor
push
mov
scas
adc
adc
or
jge
dec
push
sbb
or
adc
jae
mov
inc
mov
pop
adc
mov
adc
jge
shl
add
add
inc
fstl
pop
fcoml
scas
xchg
sub
std
pop
movsb
outsl
xor
test
push
and
das
xchg
pop
mov
and
cmpsb
mov
and
lcall
int
or
lods
mov
gs
shll
sbb
mov
and
arpl
xchg
sbb
add
hlt
adc
repz
gs
inc
int
mov
dec
dec
inc
movb
cmp
xchg
mov
inc
dec
movsb
std
mov
cwtl
xchg
or
sub
pop
push
sbb
push
mov
sub
mov
pop
ret
arpl
mov
loop
cmp
jo
and
shrl
fcompl
push
loop
xchg
sbb
sub
aam
popa
addl
push
push
xchg
adcb
lret
pusha
mov
xchg
or
jecxz
xor
mov
inc
sti
pop
je
mov
mov
sbb
popf
fcoms
xor
rclb
dec
out
mov
add
xlat
mov
enter
pop
insl
sarl
sbb
xorb
popf
ret
inc
clc
jecxz
lock
inc
sbb
pop
adc
inc
test
pop
push
lock
outsb
adc
mov
outsl
add
les
addb
pop
lret
inc
xor
movsb
les
popf
pushf
stos
jg
sbb
add
cmp
outsl
lods
xchg
rorl
and
rcrb
out
lock
rcrb
addr16
push
adc
mov
xor
push
clc
mov
insb
xchg
pop
push
addb
jmp
xor
ss
fcoml
dec
mov
mov
and
sub
push
sub
movsl
out
add
add
pop
push
xlat
xchg
sub
pop
addr16
inc
push
outsb
xchg
cmpsb
pop
mov
lock
add
jb
int3
mov
nop
xor
dec
movsl
mov
xchg
rcll
adc
cmp
add
push
xor
push
mov
and
cmpb
cmp
lcall
movsb
jg
adc
push
and
lock
jae
jecxz
sub
pop
iret
jns
and
jecxz
in
insl
jg
xor
fisttps
pop
gs
repz
inc
jp
or
adcl
adc
ljmp
cmc
sbb
int
dec
loop
lahf
filds
jbe
and
add
pop
xchg
mov
pushf
aas
test
in
repz
repnz
adc
push
jo
ret
jmp
add
xchg
ljmp
fsubs
sub
movsl
int3
js
mov
sub
jb
movsb
outsb
dec
mov
xor
push
and
test
push
sbb
sbb
sbb
xor
leave
jno
in
cmp
test
movsb
mov
addl
inc
loope
int
daa
nop
flds
add
icebp
sbb
sbb
fisttpl
pushf
xchg
outsb
and
aas
push
push
orb
mov
sub
popf
xchg
sbb
mov
sbb
stos
adc
cmp
push
popa
jmp
inc
adc
test
lock
cmc
jnp
jmp
lahf
xchg
jo
aaa
adc
iret
mov
imul
aad
das
cmp
outsl
call
push
outsb
push
add
xchg
mov
or
shl
sbb
andl
mov
in
leave
sbb
xchg
cmc
xchg
inc
fdivrl
add
dec
sbb
sub
cmp
ret
sbb
xor
push
lea
rorb
cwtl
and
xchg
add
testl
mov
adc
sbb
lock
add
data16
add
mov
fisttpl
push
fs
ret
data16
enter
jmp
push
inc
mov
xor
pop
enter
addr16
mov
add
and
or
and
inc
test
adc
dec
sbb
aad
ret
sarb
jecxz
mov
icebp
mov
xor
ret
push
addl
or
push
loope
bound
in
sahf
add
scas
xchg
js
adc
sub
lret
adc
repz
add
movsl
xorb
pop
call
add
dec
rcrb
push
inc
fstpl
rolb
movlps
mov
add
mov
xor
or
js
cmc
cld
and
xchg
push
inc
mov
dec
xorl
mov
jne
pushf
mov
jo
mov
lret
mov
inc
or
pop
inc
arpl
jno
inc
mov
cmpsb
xchg
mov
les
stos
pop
sahf
inc
inc
arpl
dec
rcrb
fadds
adc
or
or
fisttpll
and
mov
std
xlat
jne
dec
mov
jb
sub
js
loope
mov
imul
sbb
adc
loopne
ret
dec
sub
leave
das
xchg
ret
or
inc
push
lods
sbb
sbb
test
dec
sub
cwtl
push
jmp
xor
aad
fadds
les
jecxz
dec
lods
xor
popa
pop
out
xchg
push
enter
movsb
aaa
cmp
add
or
xor
sub
and
testl
int
lods
orb
and
dec
pusha
test
adc
xor
push
rorb
aaa
test
mov
daa
into
insb
or
and
cmp
cltd
adc
mov
push
fwait
addb
push
ss
and
hlt
dec
xchg
mov
pop
add
cmc
adc
arpl
pop
and
push
sbb
les
daa
jle
push
jo
lea
adc
lds
adc
pop
scas
jecxz
incb
loop
xchg
add
lret
lds
aad
icebp
repz
mov
cmpsb
push
cmc
xchg
jg
pop
imul
addl
pop
insb
jmp
jo
shl
aam
mov
push
adc
xchg
xor
and
jp
jb
fisubl
adc
cmp
pusha
out
daa
sbb
outsl
xor
or
adc
out
mov
jle
hlt
dec
add
xchg
push
and
or
addl
sti
je
lret
test
loope
jmp
mov
icebp
repz
pop
outsb
sbb
pop
sbb
pop
adc
repz
jg
mov
andb
pop
mov
por
push
xchg
sub
sub
xor
dec
push
jbe
mov
les
sbb
orl
icebp
xor
std
add
xchg
shlb
pop
add
and
xor
inc
mull
and
imul
faddl
lcall
sub
sbb
push
adc
sahf
xor
sbb
icebp
inc
cmp
push
add
mov
ror
push
cmpsl
gs
fistl
or
adc
xor
nop
clc
in
push
pop
jl
call
inc
add
data16
xchg
xlat
mov
int
lea
push
or
mov
sbb
ss
hlt
loop
clc
push
jp
cltd
add
inc
orl
inc
lcall
and
xchg
xchg
pop
add
clc
cmp
std
push
add
sbb
in
int3
in
sbb
negb
outsl
daa
cmp
jo
hlt
in
test
add
dec
pop
or
or
inc
pop
mov
dec
lea
insb
rorl
push
imul
fists
clc
pusha
and
cmp
add
xchg
lock
jb
mov
daa
adc
leave
sub
mov
imul
mov
scas
jo
cmp
and
inc
pop
ja
xchg
sbb
sbb
mov
adc
bound
add
or
jno
add
cmp
adc
test
lcall
sub
mov
dec
fisttpl
and
in
mov
test
dec
sbb
test
sbb
xadd
push
jae
pandn
subb
ficompl
jo
das
cmpb
pop
jo
pop
pusha
and
aam
insl
sub
subl
test
out
mov
push
jmp
push
push
imul
jb
cwtl
loope
and
sbb
cmpb
xchg
xlat
inc
sub
loopne
add
and
inc
test
and
call
daa
loope
cmp
xor
xor
xchg
insb
mov
stos
pop
sbb
add
xor
xchg
ja
push
loop
lock
mov
ret
and
cmpsl
out
jmp
pop
jle
push
or
mov
sub
sub
aaa
mov
insb
cmovp
ret
cmpsl
pusha
jo
push
daa
xor
outsl
adc
xor
cmp
mov
add
lcall
data16
andl
call
add
pusha
aaa
add
mov
mov
and
inc
xor
adc
orb
push
je
int3
jge
xchg
add
xor
mov
dec
jb
inc
ds
adc
rcl
add
call
sub
and
push
sub
rclb
daa
cmp
pop
adcl
inc
jge
jl
inc
out
dec
cmp
popl
jmp
sahf
dec
mov
imull
aam
cmp
sub
mov
adc
hlt
sbb
inc
ffreep
shrb
rcl
mov
jbe
xchg
add
mov
dec
cld
lcall
pop
jp
aad
sub
xchg
jg
push
fbld
pop
lock
mov
or
sbb
sarb
xchg
push
insl
cmp
push
out
test
jo
jb
lock
in
lock
mov
push
shlb
and
pop
leave
add
xor
imull
jo
cmp
pop
andl
mov
mov
es
jb
inc
add
movsb
push
pusha
pop
sti
xor
mov
ret
pop
xorb
cmp
mov
jmp
cltd
mov
or
out
adc
pop
scas
mov
or
scas
cmp
mov
xchg
fcomi
xchg
mov
sbb
in
cmp
pop
pop
mov
fdivs
lock
inc
sub
ss
xchg
jb
call
push
mov
push
rorb
adc
int3
adc
test
jo
movsb
jp
and
cs
lret
std
mov
shll
hlt
xchg
add
adc
call
cmpsl
xor
xchg
adc
dec
sbb
sbb
sub
mov
cmc
rcl
xchg
xchg
pop
adc
rclb
fsts
sub
imul
lret
orl
shl
xchg
lret
cmpsb
fadds
aam
inc
mov
movsb
add
pop
mov
mov
xchg
andl
je
mov
and
adc
push
js
pop
lret
lret
pushf
xlat
add
enter
add
lods
test
test
insb
out
pusha
mov
imul
cmp
mov
lahf
and
mov
sub
outsl
add
push
inc
ljmp
test
dec
lea
add
xchg
sbb
test
or
ret
push
mov
lock
cmp
fiaddl
scas
adc
enter
inc
jle
pusha
rclb
mull
test
fwait
jl
push
lea
sarb
jb
or
dec
sub
cwtl
shlb
xchg
aam
add
mov
pop
xor
pop
xchg
push
lcall
pop
negl
dec
push
call
fcomip
mov
in
mov
lahf
int
cmp
mov
cmp
pop
lcall
lods
fistl
add
dec
or
popf
fstpt
cmp
fcomip
sub
pop
pop
xchg
lock
xchg
push
pop
js
stos
push
xchg
cmp
enter
xor
out
addr16
sbb
push
jecxz
push
mov
push
or
dec
add
test
push
pop
out
je
adc
mov
sbb
push
mov
inc
lahf
cltd
or
addr16
sbb
jnp
rclb
push
sahf
loope
mov
jne
or
sbb
pop
sbb
jne
dec
or
dec
in
xlat
lahf
fsubs
fs
in
xchg
fiadds
pushf
mov
dec
dec
jecxz
add
pop
sub
jb
pop
cld
and
adc
iret
fildl
icebp
add
sti
and
push
push
in
hlt
loop
sub
addr16
enter
sub
adc
das
xchg
shlb
sahf
jb
xchg
jbe
push
xchg
lock
in
adc
rolb
or
js
xchg
orl
mov
xchg
lcall
mov
xlat
jecxz
or
nop
jae
adc
or
hlt
lods
subb
pop
jb
or
jne
bound
roll
fsts
notl
push
pop
add
outsb
outsl
out
pusha
xchg
mov
adc
jge
cmp
fwait
cmp
clc
xchg
adcb
fdivrl
mov
dec
pusha
popa
xchg
mov
aad
add
stos
add
dec
xlat
add
das
jp
pop
add
sub
lock
or
xchg
inc
jbe
iret
mov
add
add
add
and
add
and
mov
mov
mov
fwait
lret
xchg
sarb
pop
fyl2xp1
push
push
mov
das
insb
out
loope
shll
orb
cltd
xor
mov
rol
lods
out
sbb
cmpb
push
insb
cmp
add
mov
cmp
pop
jbe
and
sbb
mov
lods
add
xorb
mov
xor
repz
rorl
xchg
mov
inc
loope
in
or
xor
push
mov
add
roll
inc
push
pop
mov
add
std
cmp
push
xchg
nop
movsb
adcl
insb
icebp
cmp
shll
aam
aas
adc
add
out
mov
mov
fsubl
subl
push
test
aad
xchg
sub
or
fidivs
scas
or
add
cmpsb
xchg
aad
dec
and
cmpsl
jne
xadd
imul
cs
sbb
loope
js
addr16
mov
jbe
lret
outsl
fisubrs
jb
out
imul
add
inc
adc
xchg
imul
push
fcmovnbe
arpl
inc
fistl
cs
call
std
into
pushf
lret
dec
add
jecxz
and
mov
lret
sbb
pop
add
test
xchg
push
sbb
cli
xor
test
pop
sub
add
mov
loopne
sbb
daa
lods
icebp
fiadds
add
cwtl
js
sbb
inc
in
sbb
das
inc
ja
out
cmp
add
pop
inc
loop
push
cmp
inc
add
add
and
add
push
add
adc
adc
and
or
add
insb
add
out
movl
or
addl
push
popa
or
js
test
notl
push
adc
mov
pop
sbb
les
ja
rclb
sub
adc
lods
popa
mov
dec
jmp
les
or
mov
and
jns
sbb
ret
cmp
dec
push
push
pushf
mov
sbbb
call
add
pushf
mov
mov
sub
add
les
jb
jmp
repnz
mov
repnz
lods
add
divl
push
add
bound
add
push
out
xchg
push
icebp
out
add
jp
mov
add
jbe
fwait
in
aam
xchg
add
cmp
mov
add
mov
or
add
cmp
sbb
dec
mov
loopne
out
jl
pop
or
xchg
jbe
sub
pop
aaa
adc
xor
push
jge
mov
add
mov
lock
mov
addr16
popf
sti
into
je
jge
xchg
dec
xchg
lods
push
pop
les
lods
and
rorb
loopne
sbb
pop
pop
xchg
pop
push
outsl
sbb
add
and
sbb
test
lds
pusha
or
nopl
ret
sbb
shl
ficompl
rcl
pop
cmp
iret
aam
cmp
mov
ret
lock
movsl
xchg
insl
xchg
daa
pop
adc
xor
xchg
cld
xchg
lods
jle
movsl
les
mov
cmpsl
popf
add
or
xchg
imul
insb
sbb
inc
and
pop
rorb
into
or
pusha
dec
movsl
pop
jl
add
movb
ficompl
cld
loop
add
jmp
push
sbb
push
xchg
mov
mov
addb
fdivl
ljmp
xchg
jb
sub
jne
cmp
pop
inc
loop
addr16
mov
roll
sub
insl
xchg
pop
loop
add
mov
sub
fists
mov
dec
lcall
daa
or
cmpsb
xor
lock
imul
popf
mov
jge
imul
xor
test
call
aaa
add
adc
shll
lock
cmpl
mov
push
xor
les
sbb
jne
cmpb
and
add
popa
xchg
test
xor
mov
stc
xorb
add
sbb
repnz
iret
movsl
inc
mov
inc
xchg
lret
push
cltd
push
ds
aad
add
cld
jp
mov
adc
push
rorl
mov
fidivrl
mov
cmc
adc
pop
sbb
outsb
mov
cmc
add
movsl
jo
sbb
outsl
lea
in
add
lds
push
add
data16
mov
test
lods
push
fisttpl
aaa
add
test
add
mov
add
cmp
loope
mov
xor
rolb
outsl
loop
inc
enter
push
xchg
sbb
mov
inc
inc
lret
dec
lds
scas
dec
loop
adc
adc
fwait
or
rcrb
sbb
sub
xchg
insl
insb
std
inc
inc
ret
cmpsl
xor
lock
repz
xchg
inc
test
push
fdivrs
or
ret
shrl
repz
push
mov
cmc
or
hlt
push
adc
sti
popa
sub
leave
aaa
inc
and
mov
push
adc
add
or
sub
ljmp
push
or
outsl
pushf
inc
fwait
pusha
cmp
add
jo
add
pop
in
adc
add
lock
mov
add
lods
inc
loop
inc
out
ret
mov
add
add
mov
add
daa
roll
adc
insb
inc
pop
inc
stos
jl
sub
add
ljmp
fldt
cmp
mov
andl
jle
push
add
add
and
sbb
jp
icebp
xchg
sub
icebp
enter
dec
or
lods
pop
pop
lahf
jnp
xlat
xchg
mov
add
add
pusha
cmp
repnz
push
stos
addb
pop
in
arpl
cmp
mov
push
push
push
and
mov
xchg
sbb
xor
adc
mov
adc
addr16
repz
inc
movsb
dec
imul
out
nop
sarb
add
sub
movsb
je
shll
in
fcompl
inc
mov
cli
cmp
adcb
cmp
add
inc
jg
pop
cmp
push
adc
lock
lods
sub
sbb
adc
jmp
sbb
outsl
ficomps
sahf
inc
imull
push
and
push
out
mov
enter
or
xchg
inc
and
push
jmp
jne
popa
jnp
inc
test
sahf
incl
clc
out
testl
arpl
gs
sub
addr16
into
rorl
test
movsl
xchg
sbb
pop
sub
shlb
add
mov
ljmp
add
or
cmp
xor
out
fists
and
or
jmp
pop
jp
push
push
mov
add
movsl
inc
mov
ds
ficoms
jno
add
aam
push
popa
adc
dec
lret
loopne
test
and
inc
and
mov
lcall
aas
sub
add
inc
inc
mov
loope
adc
stc
or
xchg
fcmovnu
inc
mov
sub
das
sbb
xor
and
leave
sbb
mov
dec
orl
cltd
jmp
push
xchg
aaa
mov
data16
sarl
cmp
xchg
shll
sbb
adcb
inc
popf
jb
inc
mov
or
mov
dec
lock
je
mov
and
ja
or
sti
push
mul
leave
xor
pop
dec
pop
dec
xchg
fistps
negl
jo
ret
cmp
sub
or
pop
bound
or
inc
roll
xchg
jo
jmp
push
pop
push
cmp
pop
inc
mov
xchg
pop
and
aaa
lea
mov
dec
jnp
fcoml
data16
arpl
dec
dec
pop
xor
add
jb
jns
inc
mov
and
pop
cmc
stos
and
nop
test
cmp
jl
cmp
xchg
lahf
or
jge
out
insb
xchg
mov
pusha
jo
xchg
lock
mov
adc
mov
ja
test
sbb
push
push
jb
clc
hlt
insb
jae
fists
dec
movsb
or
scas
xchg
jo
push
adc
outsb
jo
xchg
outsb
push
inc
lret
xchg
or
adcb
pop
xchg
jo
ret
lea
add
fcomps
ss
decl
add
ljmp
cmc
dec
fstl
and
mov
nop
es
psllw
mov
orb
mov
mov
xchg
pop
psraw
inc
xlat
shlb
pop
stc
inc
cmp
add
enter
sbb
push
sbb
dec
movsl
pop
pop
dec
pushf
pop
xchg
or
push
mov
jmp
jbe
popf
pop
sarb
aad
mov
add
dec
xor
mov
scas
or
lea
cmp
jecxz
sbb
les
add
mov
inc
das
gs
cmp
jp
inc
pop
pop
lods
cmp
xchg
or
xchg
adc
jns
add
mov
push
xor
push
pop
hlt
js
mov
inc
dec
mov
lret
in
jnp
inc
les
pusha
xchg
rcrl
lds
or
mov
sub
dec
sbb
xchg
cmc
sbb
pop
sti
jg
sbb
insl
sbb
loopne
je
push
inc
adc
inc
fs
addb
mov
inc
pop
adc
push
dec
jbe
test
add
mov
js
pop
push
sub
imul
push
and
inc
nop
xor
in
mov
add
jle
aaa
lahf
sub
pop
aas
xchg
xor
and
addb
inc
cmp
pop
mov
xor
sub
les
or
xor
es
push
adc
cs
gs
lcall
mov
call
cmp
gs
nop
test
pop
or
xor
mov
test
mov
fisttpl
or
sub
loope
push
scas
mov
scas
mov
cmp
iret
rclb
pusha
sbb
mov
push
aam
xchg
adc
gs
sub
insb
fistps
add
das
lea
loope
jp
int3
push
jns
dec
dec
dec
imulb
adc
lcallw
or
or
cmp
or
lahf
mov
inc
es
clc
xor
inc
aaa
in
adc
sahf
mov
inc
out
or
xchg
iret
inc
arpl
ljmp
inc
push
cmp
ret
mov
and
dec
jbe
or
lock
outsb
or
fwait
adc
add
add
popa
icebp
adc
in
je
cmpsb
dec
push
movsl
aad
xchg
negb
add
outsl
sub
mov
dec
or
or
stc
inc
pop
fwait
add
pop
in
sbb
jnp
pop
cmc
add
lea
push
and
dec
insb
cmp
lcall
gs
push
push
jnp
test
fadds
add
roll
mov
dec
sbb
stos
pop
cmp
push
js
adc
mov
add
les
xchg
add
jmp
icebp
push
mov
dec
sub
add
and
sbb
push
jl
mov
test
xor
test
inc
inc
adc
pop
adc
adc
push
sbb
sbb
cmc
nop
adc
popf
inc
repnz
orb
xor
jb
ret
sbbb
stos
std
rol
or
push
jns
icebp
adc
mov
mov
in
pop
cmpsl
outsb
test
pop
pop
pop
inc
pop
or
pop
push
jo
rolb
mov
es
dec
mov
and
or
pop
or
cmpsb
nop
fistps
add
push
push
cmpsb
imul
dec
adc
scas
mov
sbb
adc
scas
lds
add
mov
div
mov
lds
mov
xor
test
sbb
sub
dec
imul
nop
imul
in
lock
pusha
sbb
push
pop
mov
xchg
scas
pop
stos
mov
ss
lahf
lods
lds
cmp
pop
sti
mov
xchg
adc
jo
jl
in
xor
movsb
xor
adcl
enter
dec
sbb
flds
orl
shl
outsb
lods
push
loopne
in
int
fcoml
divl
cmpsl
xchg
lock
pop
pop
cmp
scas
xchg
lods
pushl
nop
cmp
pusha
jo
adc
aaa
icebp
mov
movsb
sub
inc
xor
xor
int
sub
jmp
dec
mov
cmp
adc
dec
jnp
or
fwait
jo
std
insl
enter
push
push
rcrb
mov
popa
push
sub
loope
rolb
jo
movsb
pop
aas
test
jg
mov
push
sbb
and
stos
movsl
test
or
inc
or
and
or
push
sbb
ret
notl
pop
scas
or
xor
pusha
test
inc
mov
push
aas
jecxz
adc
adc
test
push
pop
mov
ss
xor
jnp
arpl
loop
inc
pop
pusha
or
mov
dec
pop
cmp
mov
or
mov
lods
fwait
fs
mov
subb
ss
lea
mov
pop
repnz
in
mov
sub
hlt
mov
cli
push
sbb
cmc
lock
loop
test
inc
cmp
cs
mov
pop
sbbb
out
je
lea
icebp
mov
sbb
xchg
sub
loope
or
repz
fwait
ds
or
popf
in
or
adc
push
mov
and
lcall
aas
xor
mov
jp
rcrl
lret
mov
sub
cmc
int
jmp
fsts
push
lret
les
jge
sbb
imul
dec
inc
insb
mov
sbb
or
dec
je
and
hlt
push
jge
popa
add
jp
test
pop
cld
mov
ds
xlat
shrb
sahf
mov
sbb
add
sub
lcall
sbb
xorb
add
or
mov
mov
imull
and
xchg
outsl
std
sub
daa
fwait
insl
int3
mov
iret
xor
loope
cld
lods
fs
sbb
pop
adc
mov
xchg
mov
test
daa
mov
and
sub
cmp
inc
push
fwait
sbb
pushf
ret
clc
call
lods
mov
daa
fisubs
mov
mov
inc
insb
orb
sbb
and
xor
lods
lods
xchg
mov
mov
icebp
test
xchg
sub
dec
xor
leave
and
xor
lret
add
xchg
mov
adc
dec
ss
sbb
cmp
mov
mov
ja
and
pop
and
daa
nop
popf
shlb
rcl
sbb
pop
shll
and
sub
xor
cld
lret
test
ja
loope
int3
jb
leave
call
jp
mov
popa
xor
fsubs
jge
sub
fwait
inc
add
scas
je
cmp
pop
dec
imul
or
aam
fwait
aaa
lods
mov
je
xor
jl
push
adc
jbe
add
inc
sbb
xchg
in
shlb
das
inc
mov
pop
std
das
pusha
jle
mov
hlt
in
mov
pop
aam
push
aaa
push
ss
scas
or
mov
adc
int
jmp
lock
cwtl
jp
ds
xlat
popa
pop
mov
fsts
ljmp
sbb
or
push
push
fwait
push
adc
jl
cmc
cmpsl
outsl
loope
dec
or
push
cs
push
inc
sbb
xor
push
sbb
loope
stos
adc
cli
arpl
mov
popa
or
sub
mov
icebp
and
adc
call
ja
add
jecxz
pand
bound
xchg
imul
cltd
popf
mov
adc
xor
xor
xchg
adc
pusha
jge
inc
push
ss
aaa
mov
add
mov
popf
mov
or
inc
data16
roll
mov
push
sbb
addr16
orl
and
std
out
inc
mov
and
inc
mov
sbb
dec
divl
out
sbb
scas
movb
sbb
pop
mov
lret
mov
sbb
xor
inc
mov
mov
or
sbb
rcll
push
mov
addb
dec
mov
gs
out
xchg
lods
add
dec
cmp
mov
loopne
pop
cmpsl
movsb
nop
std
test
les
pushf
sub
jno
xor
sbb
popa
incl
mov
imul
pop
popa
mov
mov
mov
add
mov
or
pop
nop
fs
push
shrl
jmp
dec
rcl
mov
and
dec
movsl
inc
dec
dec
jecxz
push
pop
add
popf
ret
pop
loopne
cmp
push
push
rcr
ret
dec
mov
lahf
ret
push
push
insl
inc
call
inc
pop
jge
fsubrs
push
pop
ret
loopne
pop
fstpl
cmp
or
xor
push
fcomip
aas
or
call
jnp
mov
loope
aas
repnz
or
jle
and
loope
and
rorb
lods
cmpsb
arpl
ja
cld
and
sarl
inc
imul
cwtl
xor
adc
imul
add
fimuls
inc
dec
add
insb
add
add
addl
mov
inc
adc
push
cmp
or
dec
aam
adc
push
mov
mov
adc
fwait
js
inc
or
sub
scas
or
dec
push
enter
jle
cmpsb
jno
jecxz
jns
or
popa
rep
add
addl
add
cmpsb
movsl
and
and
xchg
xchg
pushf
inc
or
xchg
sub
insl
mov
iret
xor
jnp
sub
ja
xor
push
push
add
jle
mov
mov
inc
add
or
xchg
inc
xor
or
call
sbb
and
mov
inc
mov
pop
xor
out
shrb
loop
inc
sub
mov
icebp
in
lock
and
xchg
jo
adc
add
ret
test
out
je
jbe
stos
xchg
idivl
std
adc
and
push
mov
je
or
lret
push
lock
mov
testb
test
enter
imul
es
insl
add
les
add
xchg
rcrb
jae
int3
scas
xor
aaa
or
xchg
in
xor
cmp
mov
push
in
adc
pop
inc
or
push
mov
dec
in
dec
or
inc
jno
cmp
inc
sub
gs
pop
inc
pusha
and
or
jecxz
add
mov
jno
add
add
push
cmp
mov
jmp
in
out
xchg
mov
adc
daa
push
dec
mov
sub
push
popa
fidivrl
ret
xor
add
fstpt
movsb
xchg
xor
add
pop
xor
insl
sub
or
push
sbb
jb
fdivl
adc
ret
mov
cwtl
ja
cmp
inc
inc
xchg
insb
dec
add
lcall
aaa
int3
lods
mov
test
inc
xor
push
push
sbb
adc
sbb
mov
xchg
pop
adc
adc
add
mov
xchg
ljmp
add
out
fistpl
add
les
mov
and
dec
push
or
pop
ss
mov
jbe
adc
cmovns
mov
jbe
in
inc
cmp
inc
mov
inc
pushf
iret
or
ds
mov
add
repz
pop
jno
push
in
subl
dec
mov
loope
or
loopne
pusha
imul
ret
jge
scas
sbb
lods
mov
mov
xor
mov
scas
aaa
in
add
add
test
xchg
xor
jle
xor
loope
or
add
or
pushf
mov
sbb
inc
mov
pusha
add
inc
popa
hlt
bound
sbb
sar
imul
sarl
fabs
add
mov
mov
jmp
stos
mov
push
dec
sbb
adcl
dec
out
dec
jle
cmpl
jae
sahf
clc
jbe
push
push
mov
sbb
test
adc
bound
sub
repz
and
add
add
notl
jmp
add
adc
mov
add
inc
lods
adc
push
jp
sub
mov
je
jb
pop
in
inc
or
movb
insl
cmc
jbe
push
loope
mov
pusha
jecxz
and
inc
and
rcll
stos
pop
aaa
push
mov
mov
lock
xor
rcrl
cmp
and
addb
sbb
add
and
loopne
inc
xchg
mov
and
add
inc
add
add
inc
jae
jp
push
mov
add
sbb
jmp
or
xor
imul
add
add
inc
pop
test
and
add
out
stos
call
cmp
and
aas
add
fxch
adc
cs
xchg
cmp
movsl
aam
lock
dec
js
push
sbb
jge
dec
jp
adc
mov
pushf
push
dec
ret
xor
add
push
inc
and
add
shlb
xchg
jmp
fldl
mov
or
add
sub
and
in
or
insb
or
and
push
notl
add
inc
lcall
add
push
mov
adc
and
add
pop
ret
cmp
pmulhuw
dec
mov
test
ret
sub
pop
adc
ret
js
in
adc
dec
ret
lret
ret
pop
shll
jl
repz
test
pop
add
mov
add
mov
test
fstps
les
mov
dec
and
sub
popf
adc
imul
or
xchg
xor
or
dec
and
mov
add
xchg
rclb
mov
mov
dec
ret
add
in
test
mov
cmp
hlt
and
lcall
inc
dec
mov
inc
mov
fxch
add
or
pop
test
fisubrs
sub
mov
or
mov
sbb
add
loope
adc
sbb
icebp
popa
ret
jns
xchg
inc
inc
mulb
add
pop
test
movsb
out
cmp
xchg
leave
notb
sub
xchg
scas
mov
push
adc
mov
mov
sar
add
add
insb
insb
xor
and
rcrb
inc
fcoms
dec
dec
outsl
push
cmp
jno
mov
add
jb
mov
jo
dec
mov
xor
push
loop
pop
shrl
cli
jae
sub
xchg
outsb
or
add
cmp
jne
push
loopne
push
rep
repz
sbb
xchg
nop
pop
icebp
push
loope
dec
ret
jmp
add
lea
outsl
insl
ftst
mov
popa
insl
push
add
arpl
pop
sbb
jne
pop
inc
add
sub
hlt
iret
and
pusha
test
fcoms
adc
inc
ss
mov
mov
pop
add
dec
mov
out
xor
jnp
jl
gs
scas
add
rcrl
jl
cmp
xor
or
dec
lret
clc
imul
into
fdivrs
push
push
xor
ljmp
outsl
dec
js
or
jmp
outsb
push
add
mov
insl
add
mov
pushf
and
mulb
dec
xchg
bound
enter
push
jb
adc
addr16
mov
jnp
cmp
je
or
push
dec
mov
push
addr16
or
pop
roll
pop
mov
daa
mov
cwtl
popa
cmpl
mov
aad
push
dec
dec
mov
cwtl
cwtl
or
add
insb
pop
mov
push
and
dec
js
fwait
jg
popa
jno
jo
das
xchg
pop
adc
mov
jns
and
sub
jnp
push
add
sbb
pop
adc
jns
and
sbb
or
mov
shrl
int
enter
pop
ljmp
sub
pop
sbb
sbb
gs
insb
add
and
mov
loopne
das
fs
pop
popf
add
mov
jp
pop
and
add
dec
popf
dec
mov
add
pop
jle
add
in
or
insb
or
mov
mov
sbbb
lods
imul
or
inc
mov
xchg
popa
add
pop
sbb
xor
stos
xchg
push
push
or
fmul
fsubl
fs
push
inc
mov
jecxz
xor
xor
add
popa
filds
mov
add
adc
sbb
pop
push
xor
and
add
iret
adc
and
and
or
add
dec
insb
testb
lret
xchg
pop
xlat
test
inc
mov
shlb
add
jmp
mov
lea
shlb
jb
lock
fs
repz
js
add
nop
jecxz
adc
sbb
je
sbb
add
in
pushf
rcr
es
jae
add
cmp
sub
arpl
iret
add
ss
add
mov
popa
jne
adc
jecxz
ja
fiadds
jmp
inc
jne
js
sbb
adcb
sarb
jl
add
xchg
mov
inc
sbb
mov
jl
mov
sub
repz
shll
outsl
inc
jecxz
mov
shr
pop
xor
scas
movsb
loope
add
cmc
pop
adc
lods
sarb
mov
sub
addb
push
mov
adcb
add
xor
push
pop
jns
outsb
icebp
mov
test
xor
xchg
pop
mov
rolb
dec
mov
add
push
pop
stos
jne
xchg
jno
dec
jecxz
add
stc
sbb
adc
out
add
add
xor
add
dec
or
mov
sbb
sbb
mov
es
popf
fildl
or
test
add
lods
shlb
mov
dec
pop
das
aad
sbbb
or
cmp
sbb
mov
cmc
popa
ret
aas
andl
movb
mov
push
lahf
xchg
jecxz
push
mov
pop
sub
xor
ffree
sbb
cmpsl
js
subl
aam
xor
adc
and
or
cmp
xor
imul
push
loope
xlat
push
push
ficompl
mov
test
xchg
xchg
lods
inc
dec
lods
xor
cmp
mov
out
dec
addr16
mov
imul
dec
sbb
xchg
add
mov
jb
pop
daa
adc
xchg
inc
mov
mov
loopne
sbb
sub
clc
ss
inc
popf
aaa
mov
inc
inc
add
jne
inc
loope
fsubrs
test
jmp
push
pop
cmp
gs
icebp
sub
xor
jbe
mov
dec
inc
insb
dec
push
cmp
push
mov
dec
scas
jmp
jo
mov
and
lar
dec
mov
mov
inc
dec
fwait
and
enter
addl
mov
das
test
leave
dec
inc
sbb
push
inc
sbb
test
push
inc
mov
dec
or
cmp
push
outsb
adc
inc
test
inc
test
ljmp
jp
and
or
test
mov
pop
mov
cmp
and
pop
loope
dec
sub
xor
xchg
adc
and
out
lret
out
push
pushf
or
or
xlat
jnp
sub
out
xor
add
cmp
shll
jl
inc
jnp
adc
ljmp
push
and
testl
add
and
call
movsb
hlt
jmp
dec
lock
jmp
sub
mov
adc
loop
or
or
repz
jno
les
mov
test
ds
pushf
cld
insb
and
and
movsb
mov
punpcklbw
cmc
mov
loope
xor
mov
in
cwtl
xchg
and
imul
mov
fstps
xchg
adc
push
adc
in
and
push
mov
xchg
add
cvtpi2ps
and
lock
sbbb
enter
shll
push
in
or
orb
loopne
jno
punpckhwd
ja
notb
rolb
fiaddl
popf
fcompl
inc
lret
hlt
test
and
fbld
rclb
dec
and
clc
xchg
xchg
nop
pop
pop
sub
mov
jo
loopne
cmpxchg
adc
int
push
fs
ss
ja
sub
mov
rolb
or
scas
xor
js
out
stos
in
cmp
stc
leave
and
gs
mov
stos
movsb
jecxz
jno
pop
dec
sub
xchg
pop
pop
loope
out
push
fwait
les
scas
cmp
out
xor
add
lea
popa
cltd
pop
pop
adc
rorb
loope
xor
mov
push
testl
xchg
and
in
xchg
addb
inc
xor
fildl
inc
shlb
les
nop
insl
add
push
fisubl
adc
jne
inc
pop
or
inc
pop
stc
sub
enter
xor
adc
addb
nop
xchg
inc
sub
dec
xchg
mov
mov
test
cmp
jmp
xor
cmp
adc
mov
arpl
cmpsb
jmp
out
int
jo
mov
lret
pop
dec
lock
adc
aam
xor
popf
ss
and
add
xor
les
push
hlt
cmc
enter
cmp
or
cmpsb
xchg
push
nop
outsb
add
xor
push
jge
out
dec
lods
xor
pop
xor
dec
xchg
fldl
aad
xor
outsl
lcall
lock
inc
mov
mov
bound
dec
cmp
hlt
dec
and
mov
fucomp
je
lcall
rclb
popf
out
lock
push
jbe
popa
mov
add
insl
jne
ret
dec
stc
add
mov
mov
push
jo
and
pop
xchg
adcl
xor
fsubl
cmpsl
icebp
push
xchg
jns
mov
add
add
mov
mov
xor
inc
cmpsl
inc
add
fwait
es
sub
cmc
add
pop
xchg
push
lahf
sub
dec
cmp
push
aas
adc
sbb
gs
shl
hlt
inc
add
xor
shll
fldcw
add
cltd
xchg
or
sub
stos
or
pop
cmp
dec
mov
sbb
xchg
adc
lret
fcmovnb
mov
lods
clc
jno
fbld
mov
movsb
xchg
xor
dec
pop
or
cwtl
and
cltd
adc
popa
or
and
ret
rcl
add
add
add
movsb
adc
je
dec
cltd
loop
test
mov
mov
dec
flds
pop
cmp
cmp
dec
inc
or
push
mov
push
movsl
jl
mov
lea
hlt
in
or
mov
mov
andl
adc
out
mov
mov
bound
addb
sbb
cmp
fwait
pusha
pop
adc
mov
loop
lret
movsl
xchg
sbb
xchg
fcompl
push
push
sbb
clc
fdivrs
out
inc
push
mov
dec
xor
js
jnp
xor
and
xchg
inc
xor
insl
add
push
add
push
mov
sbb
or
dec
mov
clc
outsl
push
push
push
inc
pop
sub
stc
or
jae
lret
push
adc
cmp
cmp
add
cmpsb
arpl
mov
gs
fiaddl
sbb
popa
dec
or
lret
push
insb
or
out
loope
add
sub
shlb
push
inc
shrb
mov
pop
push
or
push
sbb
jb
dec
add
xchg
rclb
or
pop
sub
rcrl
or
je
test
mov
or
adc
enter
mov
cmpsb
sbb
xor
lock
and
test
mov
lahf
sbb
lock
test
cmp
pop
mov
jb
pop
ret
or
inc
pusha
pop
mov
sbb
sub
loop
push
scas
adc
inc
push
jo
adc
ret
pushf
jp
inc
imul
pop
pop
mov
pop
inc
mov
mov
adc
and
inc
ljmp
or
lods
xchg
in
iret
je
cmp
dec
jb
cmpsl
sarb
lods
or
sbb
popa
or
pushf
in
enter
test
cmp
xchg
cmp
xor
movsl
div
ds
scas
xchg
xchg
pop
jne
inc
mov
movl
jecxz
sbb
mov
bound
ss
xchg
pusha
int3
cmpsb
ss
sbb
lock
cmpl
pop
pop
clc
jge
call
inc
aam
icebp
lock
daa
ss
mov
jnp
jns
and
andl
cmp
fiaddl
adc
or
inc
fdiv
clc
test
sub
mov
hlt
pusha
xchg
and
cmpsl
movsl
add
mov
or
outsb
push
push
add
js
dec
jno
movsb
sbb
xchg
movsl
add
rcll
inc
xor
or
out
pop
sarb
enter
pop
out
adc
pop
inc
icebp
adc
mov
cmp
or
sub
jne
pop
push
xor
xor
movsb
or
inc
jne
roll
fucomip
jge
cmp
sti
and
xor
push
stc
sbb
xor
mov
addr16
fcomps
lods
or
hlt
xchg
mov
ret
sub
pop
test
into
std
xor
adc
push
mov
pushf
std
inc
dec
lods
cld
pop
ja
add
jb
sbb
cmpsb
call
inc
fistpll
mov
loope
xchg
sbb
add
sbb
sbb
inc
sbb
pop
ret
inc
add
add
loope
cmp
sub
loope
nop
das
cmpb
sub
xor
in
insl
loop
add
hlt
cmp
pop
mov
sbb
sbb
cmpsl
imul
andl
mov
lods
or
dec
jae
add
fucomp
test
cmovae
std
pop
pop
push
jecxz
je
loop
test
mov
lds
or
test
test
jne
imul
pop
dec
lret
push
aaa
and
and
outsb
fnstcw
mov
push
insl
popa
movl
or
cmp
outsb
xchg
mov
xchg
into
lock
xchg
xchg
and
pop
pop
adc
dec
adc
jge
and
in
dec
lahf
cwtl
dec
rcr
push
adc
movsl
enter
icebp
adc
shrl
bound
cmp
mov
inc
sub
movsb
mov
lock
loopne
adc
push
inc
cmp
xchg
pop
dec
iret
int
sub
arpl
jl
sub
mov
add
pop
push
sub
mov
or
sbb
inc
pusha
xchg
mov
enter
adc
jbe
ror
inc
fwait
pop
test
pop
mov
aas
out
or
and
mov
xor
add
enter
xchg
dec
mov
jmp
adc
dec
push
jle
adc
mov
loope
sbb
xchg
mov
cltd
add
ja
rcll
js
out
dec
roll
dec
and
test
mov
sbb
mov
loopne
push
xchg
nop
jae
scas
rorl
adc
xchg
pop
popa
arpl
fs
adc
test
jno
xchg
divl
xchg
add
cmp
mov
push
push
repz
add
adcl
mov
orl
adc
iret
inc
push
mov
jno
lret
mov
lea
addb
or
popa
repnz
gs
xchg
inc
and
add
fcomi
lret
and
add
jmp
fs
mov
pusha
mov
es
xchg
aaa
xchg
add
jne
add
sti
cltd
or
mov
fwait
lea
arpl
shll
cmp
xor
xchg
or
dec
loope
and
fildl
cwtl
call
mov
add
dec
in
test
popf
xchg
pop
lods
ret
jmp
andb
fsubs
es
std
mov
xor
and
shll
or
lods
cmp
and
addr16
imul
add
and
inc
sbb
in
enter
pop
cwtl
std
adc
gs
xchg
inc
adc
xchg
pop
insl
sahf
adc
rolb
pop
or
call
add
xchg
pop
sbb
or
dec
test
movsb
aas
pop
or
cmp
and
or
and
cmc
fs
jbe
cmp
mov
sbb
aaa
push
fiadds
orl
xor
or
sbb
nop
xor
xorb
pop
mov
cmp
mov
mov
sub
mov
sub
sub
sub
push
js
xchg
rol
mov
and
pop
mov
sub
icebp
fsubl
or
popf
test
mov
xor
sub
outsb
fs
cmp
cmp
rolb
pop
mov
les
and
xchg
and
cmp
xor
jmp
and
sbb
out
xor
xchg
pop
dec
cmp
mov
outsl
xchg
cmp
out
and
stos
and
imul
xor
lods
pop
sub
add
and
cmp
adc
movsl
sbb
cmpsw
sub
cmp
push
dec
scas
mov
dec
cmp
or
and
jl
out
mov
jl
push
cmp
out
pop
jo
adc
cmp
jnp
push
inc
loop
dec
ja
sti
sarb
add
rcll
iret
xor
outsl
jmp
xchg
data16
sub
or
push
js
hlt
fisttps
popa
push
cltd
mov
js
ret
push
nop
add
mov
mov
push
jns
mov
mov
into
insb
and
dec
movsb
xor
jecxz
cmc
jne
insb
xorl
sbb
sbb
add
pushf
and
das
xchg
hlt
pop
push
add
dec
daa
sarl
cmpsb
mov
mov
cwtl
or
lock
and
sub
or
lcall
jno
pop
lods
iret
stos
adc
notl
insl
sbb
add
cmp
lds
loop,pt
dec
fldl
pop
cmc
xchg
sbb
pop
js
xchg
mov
or
dec
or
or
js
inc
or
popa
mov
xor
xor
aas
shll
dec
test
add
dec
mov
fcom
sub
and
pusha
mulps
jge
mov
std
outsl
stos
mov
mov
iret
test
and
inc
movl
dec
leave
push
xchg
mov
repz
ret
inc
movsb
and
mov
stos
ret
pop
sub
inc
loop
or
ds
sbb
or
sub
pushl
psubusb
repz
or
lods
and
inc
fdivs
push
add
sahf
inc
loopne
push
inc
cmp
xchg
push
pop
testl
fldcw
dec
sub
not
mov
inc
rol
cld
icebp
rorb
mov
sbb
movsl
sbb
pop
orl
adcl
fnstenv
in
push
sbb
add
fidivl
iret
add
fmull
sub
es
adc
sbb
or
jnp
mov
dec
dec
mov
and
lar
sub
nop
leave
arpl
inc
or
push
and
and
and
movsb
inc
nop
push
shl
cmp
adc
movsb
pop
mov
sbbb
cmpsl
pop
xchg
push
bound
stos
add
and
stos
xor
push
dec
adc
and
pop
xchg
fadds
mov
mov
jp
add
jne
bound
sbb
adc
sub
add
sbb
sub
out
add
aas
add
add
stc
adc
icebp
sub
sbb
inc
faddl
mov
gs
mov
lahf
out
and
sub
loope
pop
loop
jne
insl
cmp
dec
jae
add
cmpsl
or
js
pop
mov
or
loopne
shll
in
sbb
and
cmp
divb
jnp
adc
mov
sbb
addl
add
and
ret
inc
mov
daa
and
sub
xlat
inc
bswap
add
movsl
xorl
or
add
push
xchg
in
inc
adc
repz
aaa
js
punpckldq
and
mov
mov
or
or
xor
out
adc
sbb
imul
imul
or
in
adc
dec
or
out
mov
mov
lods
adc
fs
fidivl
mov
xchg
jp
pop
addb
lcall
fstl
fbstp
imul
xchg
mov
adc
adc
fcomip
js
hlt
mov
add
lret
sbbl
push
jae
aad
xor
lea
mov
test
jecxz
call
xchg
fldenv
xchg
push
cmp
jbe
testl
sub
xchg
and
and
mov
jns
loope
inc
dec
movsb
xor
rcl
fldt
out
xchg
leave
push
cmp
dec
and
lea
loop
dec
mov
and
mov
ffree
add
rolb
shlb
push
adc
sub
adc
pusha
movsb
or
xchg
inc
and
xchg
pop
fiaddl
movsl
xchg
adcb
mov
inc
add
leave
jl
or
addb
mov
mov
scas
xor
push
dec
mov
faddl
mov
lret
movsl
sbb
cmpsb
mov
push
jle
inc
outsb
and
mov
dec
inc
cmp
sbb
addr16
mov
cltd
pop
jo
add
roll
dec
lret
push
pop
shlb
cmp
jg
mov
xchg
adc
push
push
push
push
xlat
roll
adc
insb
mov
test
test
inc
jo
inc
sbb
lret
int
push
push
adc
sti
jo
jp
addr16
dec
call
mov
xchg
icebp
mov
and
fcmovne
stc
aad
ret
call
out
daa
jmp
fnsave
mov
mov
xchg
and
inc
mov
mov
iret
pop
push
add
or
out
add
sbb
loop
or
push
loope
insb
pusha
sub
and
mov
rcrb
cwtl
sbb
push
ret
in
jb
push
in
mov
clc
ss
imul
mov
adc
outsl
insl
test
push
push
sbb
jbe
mov
adc
xchg
xor
mov
mov
mov
and
stos
rol
aaa
sbb
adc
les
add
shll
xchg
lods
pop
push
out
jmp
aas
test
je
jl
jb
pushl
scas
lods
rcrb
sbb
adc
scas
std
push
push
and
push
mov
push
pop
dec
xorl
push
imul
add
mov
inc
lock
pop
sbb
sub
mov
adc
xor
aaa
rcrl
push
or
mov
inc
aam
movsb
xchg
mov
add
divb
ss
sbb
cwtl
jne
jecxz
sub
cmp
out
cmpsl
orl
mov
test
fstps
mov
das
jbe
clc
mov
pop
pop
cwtl
add
xchg
push
xor
sub
popl
ds
and
rorb
scas
adc
aaa
xchg
adc
mov
pop
dec
stos
call
cmp
jg
or
jns
fisttps
sub
movsb
lods
clc
fstpl
call
jno
idivl
push
xor
ret
ret
mov
fists
cmp
and
mov
mull
fcmovnbe
or
push
les
lock
movsb
sbb
sbb
cli
sub
push
ja
jns
add
add
and
movb
mov
test
jmp
adc
jmp
rcll
add
pop
sti
loop
dec
mov
add
dec
pop
fisttpll
sbb
sub
mov
adc
xchg
cmp
daa
out
or
and
aam
xchg
or
rcrl
fists
sbb
fldcw
pop
or
and
inc
daa
pop
fcmovnu
add
sarl
jl
xchg
xor
insb
and
insb
or
adc
outsb
sbbb
sbb
ret
push
xor
mov
mov
mov
lods
and
inc
adc
fmul
inc
xor
push
in
into
ja
out
xor
push
dec
int
jl
cmp
push
inc
sbb
add
add
add
fdiv
mov
sub
loopne
addr16
pop
sub
popf
scas
into
lret
pop
fcmovb
sub
lss
push
inc
xchg
pop
and
mov
pop
push
xchg
testl
mov
shrl
sbb
cmp
iret
sub
and
jns
ret
loope
aaa
xchg
adc
test
inc
cmp
call
or
inc
adc
add
test
jp
and
aas
inc
pop
add
fldenv
pop
xor
pop
fistps
and
dec
push
stos
pushf
push
imul
add
or
add
loop
sbb
mov
lds
test
int3
imul
and
das
jp
test
mov
adc
js
add
daa
xchg
mov
sub
xor
les
inc
mov
add
mov
sub
cmp
mov
cmp
mov
aam
push
shrb
repnz
out
sbb
xchg
repnz
test
insl
loop
inc
outsl
and
adc
sbb
rol
jae
inc
cwtl
sub
mov
sub
stos
mov
xor
pop
inc
loop
adc
push
and
push
icebp
or
push
pusha
push
pop
xchg
jo
cld
nop
push
adc
pusha
xchg
xchg
aas
loopne
jo
fwait
movsl
sub
sub
add
jnp
fs
out
lret
sbb
xchg
adc
nop
cmp
add
push
fsub
or
xor
stos
cmp
xchg
mov
push
jnp
mov
mov
xchg
or
pushw
sub
dec
sbb
negb
add
in
addb
rcll
cmpsb
outsb
adc
ficoms
mov
imul
or
mov
inc
pop
push
test
in
stos
add
dec
rorl
add
pop
fldcw
dec
and
pop
shlb
mov
dec
inc
xchg
push
lods
add
scas
test
gs
push
xchg
xchg
sbb
test
xchg
inc
mov
mov
mov
mov
push
add
xchg
pop
adc
hlt
add
lods
pop
or
lahf
outsb
cmpsl
cmp
mov
add
add
mov
loope
jno
inc
insb
out
mov
adc
xchg
rclb
out
mov
sub
xlat
insl
cmp
popf
mov
sbb
lods
xchg
rcrb
fcomps
cmp
mov
mov
pop
adc
xchg
sarb
sub
leave
jo
adc
xor
sbb
or
ljmp
or
fyl2x
or
cli
cmp
push
or
test
or
jp
sbb
scas
lret
jp
sti
incb
loope
loopne
iret
dec
dec
movsb
scas
movsb
mov
fildl
mov
or
or
xchg
mov
inc
leave
ljmp
push
iret
nop
loopne
adc
jecxz
hlt
cmc
and
mov
mov
movsl
jl
jo
hlt
mov
adc
into
add
fsts
dec
fsubrs
jmp
or
iret
lret
enter
sub
mov
sbb
and
ret
roll
pop
or
xchg
enter
enter
or
loopne
ret
add
mov
pop
mov
shl
aas
adc
movsl
imul
ficomps
insl
popf
in
xor
mov
shll
js
mov
data16
call
add
sub
sbb
jle
aam
or
pop
lret
dec
xchg
xchg
fs
add
sbb
fsubp
adcl
xchg
push
shlb
add
cmp
jbe
jb
int3
pop
adc
je
aam
loope
push
popa
push
loopne
mov
mov
adc
rorl
mov
adc
mov
mov
pop
imul
movb
rcrb
rolb
dec
cmp
cli
clc
shrl
test
rorb
in
loopne
int
xor
xchg
test
mov
sbbl
out
pop
xchg
je
outsl
sti
adc
rol
pop
pop
sbb
loopne
hlt
jnp
bnd
xchg
mov
jb
fnstsw
int
dec
pop
out
sbb
add
repz
sbb
sbb
in
lret
imul
clc
clc
ret
test
cmpsb
iret
inc
xchg
adc
in
inc
cmp
and
xor
cmp
lock
cmp
cs
push
xlat
pop
mov
das
loopne
cmpsl
mov
cmp
mov
jb
jo
loopne
inc
xor
add
jb
scas
je
push
or
stos
jle
lock
or
test
pop
and
push
push
mov
bound
dec
sti
jns
inc
das
xor
inc
test
jecxz
outsl
ss
push
stc
sbb
or
add
lods
jb
mov
mov
ret
nop
testb
scas
aas
lods
and
xchg
pop
popa
mov
xor
sti
mov
lcall
mov
adc
call
mov
cmp
lods
lock
insl
sub
leave
ss
xor
mov
popa
xchg
mov
or
xchg
mov
mov
mov
sub
push
je
add
rorb
mov
dec
out
push
lods
out
push
loopne
cmp
or
pushf
dec
call
push
hlt
les
adc
movsl
cmp
pop
sbb
shrl
mov
or
adc
shrb
shll
jmp
call
stos
pop
push
repz
jmp
jne
scas
push
out
lods
in
in
jg
and
dec
inc
inc
jg,pt
cli
xor
or
sub
sbb
cmp
and
and
imul
rcl
pop
rcr
outsb
cld
clc
aam
lods
loope
fcmovu
scas
pop
rorb
push
lock
or
adc
or
lds
lret
test
roll
pop
in
test
popf
nop
xchg
and
cmovne
jl
push
lods
xor
scas
clc
push
or
mov
loope
pop
outsl
or
or
mov
fbld
dec
cmp
jo
pusha
pop
mov
mov
add
fnstcw
out
cwtl
scas
leave
lahf
sbb
push
jns
push
negb
sbb
pop
xor
pusha
test
repz
adc
loope
into
ret
add
lret
adc
mov
imul
rolb
push
mov
xor
enter
sbb
hlt
sub
rorl
sub
es
add
jl
pop
fwait
mov
push
mov
lock
adc
xchg
push
push
fcmovnbe
loopne
or
loop
fdivl
shl
lret
mov
sbb
icebp
add
in
jb
leave
cmp
test
shlb
test
ficoms
cmp
adc
jno
sbb
fistl
enter
loope
push
sub
add
fcom
addl
push
cmp
idiv
push
test
js
pop
mov
adc
arpl
sbb
adc
push
lahf
add
inc
and
or
movsl
rolb
pop
or
and
loop
popa
add
pop
xchg
or
xor
mov
inc
push
cs
xchg
push
xor
xchg
xor
int3
cmp
test
cmc
or
cmp
mov
mov
dec
rorb
imul
pop
add
fs
mov
sti
mov
stos
movsl
test
enter
js
pop
ret
xchg
fmull
mov
adc
call
jecxz
daa
call
or
fstp
out
in
subb
mul
cmpl
cmp
or
and
loopne
je
push
cmp
sub
xchg
mov
sbb
push
repz
sbb
dec
ret
loope
ret
add
clc
xor
or
or
mov
mov
movsb
adc
stos
inc
add
cmp
mov
dec
arpl
or
push
cmc
mov
les
shlb
cmp
sbb
movb
xor
andb
mov
xchg
add
sub
sub
jo
add
push
lock
xchg
loop
leave
out
add
xorb
sbb
out
xchg
sbb
xchg
xor
aad
mov
and
loopne
pop
sub
add
push
out
imul
add
fisttps
jo
pop
push
inc
shlb
sub
es
inc
adc
jns
jne
js
out
ret
inc
or
shrl
ret
lcall
sbb
adc
loope
jmp
mov
pop
ja
inc
lcall
or
sub
dec
orl
or
shll
jb
jne
sbb
pop
repnz
mov
imul
or
test
std
popf
movsl
int
adc
ret
js
aas
in
fbstp
sbb
push
fnclex
fmull
adc
mov
js
or
adc
ss
sub
call
enter
js
mov
in
pusha
xor
stc
push
popa
add
jle
lock
sahf
pop
loop
enter
mov
sbb
adc
ret
fwait
sub
mov
les
mov
cmpsb
stos
shr
xor
out
test
push
movlps
push
lock
cwtl
add
xor
adc
daa
leave
add
jo
jecxz
iret
stos
sub
xchg
imul
and
xchg
xchg
cmpsb
outsb
rsqrtps
dec
das
por
mov
loope
xor
xchg
pop
dec
rclb
pop
fisubrl
xchg
fists
dec
push
int
pop
ljmp
shll
aas
mov
shl
mov
stos
fnstenv
movsb
and
mov
movsb
int3
add
test
pop
mov
mov
sub
xchg
xor
test
daa
test
jl
cmp
mov
shlb
push
sbb
mov
dec
repnz
adc
add
xor
pop
sbb
scas
ss
and
cmpsb
xor
mov
clc
push
jmp
scas
xadd
adc
pop
lds
xor
imul
add
xor
mov
cld
std
add
shl
in
cmp
sbb
in
cmp
jo
clc
loopne
add
loopne
loopne
lock
dec
inc
movsb
sub
dec
inc
enter
test
push
in
xor
adc
mov
cmp
popa
xchg
or
das
lock
ret
adc
xor
mov
jmp
mov
aad
dec
mov
cs
adc
ret
mov
cli
enter
cmp
push
jecxz
xchg
pop
jb
jl
rcl
add
add
push
cmpsl
lods
js
pop
inc
jecxz
pop
aas
push
testb
xchg
data16
out
pop
cwtl
movsl
mov
scas
xchg
push
adc
stos
xchg
adc
adc
les
ds
adc
test
xchg
hlt
push
mov
mov
xchg
rorb
sbb
pop
or
fadds
xor
mov
cmpsl
mov
pusha
shlb
or
out
in
lcall
cmp
cmp
sahf
inc
and
sub
repz
clc
cmp
mov
add
adc
nop
inc
sti
sarb
adc
xorl
fsubs
adc
mov
adc
push
inc
sbb
orl
adc
adc
test
xor
lret
push
add
add
fwait
scas
xchg
adc
cmpsb
inc
fnstenv
notl
ja
les
mov
push
dec
aam
adc
ja
addl
cmpsl
mov
popf
loope
icebp
adc
inc
push
push
shrb
jg
sub
das
mov
pop
xchg
pop
test
add
push
in
xlat
xchg
and
lods
int3
jg
ret
adc
cmpsl
mov
arpl
mov
mov
mov
inc
xlat
inc
jecxz
movsb
xor
std
daa
jl
call
ss
xor
rorb
add
xlat
ljmp
shlb
push
mov
loopne
push
rolb
shll
adc
xchg
lds
or
jp
rclb
or
inc
mov
add
or
inc
lods
dec
in
js
add
sbb
cmp
shlb
inc
rcll
lcall
sbb
jns
or
or
dec
enter
mov
push
push
sub
mov
jecxz
and
xor
inc
mov
pop
mov
fildll
clc
add
andl
mov
sbbb
icebp
into
in
js
mov
mov
call
push
sub
adc
cli
addl
mov
adcl
mulb
cmpsl
jecxz
xor
out
mov
aas
push
into
sahf
repz
flds
add
add
cs
pop
and
movsb
shlb
pop
or
in
mov
add
pop
dec
mov
and
data16
sbb
dec
sbb
lds
in
add
adc
insl
pop
xlat
dec
add
xor
lret
inc
sbb
sub
xor
jns
adc
push
shll
adc
lret
push
mov
rcr
cmp
jg
daa
mov
lahf
lcall
lds
imul
sbb
mov
sub
test
or
sub
inc
sbb
pop
outsb
xor
push
call
mov
es
mov
outsl
add
call
insl
add
push
das
add
jl
fidivrl
jbe
fs
push
cmp
pop
xchg
test
repnz
js
dec
cmp
adc
pop
scas
or
sbb
in
add
lods
imul
and
adc
bound
or
mov
cmp
test
jg
and
inc
repz
insb
jnp
mov
sub
inc
jecxz
mov
jo
pop
sbb
test
xchg
das
sbb
mov
sub
pop
push
scas
ret
or
repz
leave
xchg
adc
xor
fistps
add
push
nop
cmp
add
dec
ljmp
push
add
cmp
popa
add
movsb
repnz
adc
jne
fbld
lods
out
or
sahf
mov
inc
inc
ljmp
mov
les
dec
dec
dec
add
add
dec
leave
push
mov
jle
mov
or
fwait
mov
pop
pop
fmull
mov
adc
mov
out
data16
sub
push
out
push
insl
cmp
xchg
push
xchg
aaa
push
shrl
sub
and
xchg
sub
lods
dec
and
mov
add
xchg
data16
mov
std
lock
mov
jg
add
and
sbb
dec
xchg
imul
movsb
hlt
cmp
cmc
xchg
shrb
push
sub
fistl
das
nop
lea
call
pop
xor
inc
xchg
lret
ds
stos
sub
ret
movsl
iret
ret
jbe
xor
sub
fprem
and
pop
sbb
shl
cmp
std
insb
gs
add
iret
add
jnp
add
arpl
pop
popa
inc
dec
subl
mov
mov
loopne
aas
push
and
push
andb
push
mov
mov
or
jnp
xchg
das
jnp
xchg
inc
mov
and
aaa
mov
sub
inc
pcmpeqb
adc
addb
fisttpl
mov
jmp
fidivrs
add
mov
pop
inc
repnz
dec
bound
or
jo
sbb
add
mov
sbb
addr16
sub
inc
and
mov
add
or
sahf
push
sbb
jae
add
pop
mov
into
pop
dec
cmp
pop
and
notl
push
cmp
loop
sbb
inc
xchg
lock
js
in
xor
lods
jb
and
fcmovnu
orl
and
ja,pn
adc
pop
ret
sub
into
push
cmc
sbb
adc
imul
adc
icebp
mov
cmp
push
mov
xchg
xorl
call
add
rcl
daa
jne
test
inc
push
and
cmp
imul
cs
mov
and
nop
or
andl
test
inc
xor
jle
inc
sub
icebp
stos
xchg
xchg
mov
sbb
mov
add
shll
cmpb
jno
sbb
gs
or
push
and
mov
and
imul
aad
fiaddl
fstl
loop
and
stos
inc
inc
lea
out
adc
repnz
push
and
adc
adc
cmc
and
mov
xchg
cmpl
jmp
ret
cmpl
loop
lret
test
arpl
lock
pop
mov
ss
sub
adc
sbb
ret
into
imul
out
adc
insb
add
adc
loop
xchg
fwait
or
jne
or
pop
xchg
shl
pop
sbb
push
or
push
mov
sbb
cvtps2pi
mov
int
dec
jnp
fists
mov
pop
adc
push
inc
aam
pop
pop
lock
mov
and
lock
xchg
int3
add
sub
loopne
push
inc
fnstenv
xorb
push
loope
jo
mov
rclb
add
ss
shrb
sub
arpl
ret
push
sbb
hlt
jecxz
rclb
out
mov
stos
xor
sub
test
adc
fs
sbb
shrl
jmp
and
xchg
xchg
jle
sbbl
mov
xchg
or
and
or
cmpsl
pusha
xor
lock
add
bound
mov
cmp
mov
push
cltd
xor
rcrl
adc
addr16
add
lret
insl
mov
inc
sbb
js
inc
dec
xchg
xchg
mov
dec
sub
cltd
xchg
inc
inc
inc
ljmp
xchg
jae
pop
inc
iret
inc
leavew
clc
mov
cltd
dec
dec
pushl
add
add
out
popf
fs
aam
mov
sarb
lret
adc
mov
js
arpl
xor
push
inc
and
sub
lock
xrelease
and
add
xlat
sbbl
cwtl
sbb
and
rolb
mov
ret
mov
movsl
mov
sub
int3
xchg
icebp
jno
mov
fiadds
mov
xor
jge
push
or
dec
pop
cmpsb
mov
lretw
jle
sbb
out
ror
popa
xor
sbb
jmp
test
iret
aad
add
cmp
cltd
lock
xchg
test
into
xor
and
and
sbb
xlat
mov
mov
addr16
setb
cmpsb
mov
mov
adc
je
loopne
xchg
push
sub
add
push
mov
inc
or
popa
icebp
adc
bound
dec
and
movsl
and
and
iret
jle
sbb
mov
mov
jb
adc
lcall
in
lock
inc
xchg
or
inc
pusha
popa
dec
loopne
xor
push
add
int
xchg
xor
ss
sbb
les
movsb
out
in
int
sbb
mov
loopne
dec
jne
rclb
jo
jge
sub
adc
loopne
rcll
imul
xchg
bound
or
ljmp
inc
divb
fidivrl
das
and
sub
jne
sbb
xor
call
xchg
ror
insb
mov
test
lock
mov
cmpsl
scas
inc
or
movsb
mov
and
jno
aaa
xchg
xor
mov
pushf
xlat
pop
xchg
jle
das
daa
jmp
icebp
loope
idivl
xor
pop
orb
je
and
push
scas
jecxz
imul
pusha
loop
std
inc
add
sub
sub
dec
sbb
dec
sbbb
aad
add
pop
mov
nop
addb
subl
pop
in
inc
cmp
mov
sbb
sbb
gs
movsb
aaa
sbb
mov
shll
hlt
enter
lods
xchg
shrl
or
aam
dec
loope
cmp
pop
setns
mov
jp
push
mov
js
and
test
out
dec
in
pop
mov
adc
les
mov
add
aad
xor
fistl
cs
popf
pusha
mov
rolb
adc
addl
add
adc
sub
xchg
xlat
pop
mov
pop
in
divl
cltd
popf
lret
push
daa
mov
std
mov
and
adc
stc
and
addr16
cmp
mov
shlb
testl
inc
or
jmp
cmpb
fs
jp
movsb
or
push
lahf
lods
dec
loope
jge
nop
jbe
and
mov
out
and
pop
ss
xchg
pop
push
test
loop
or
mov
in
fldt
mov
nop
add
jge
aaa
or
lahf
adc
adc
jbe
add
rcrl
push
xchg
adc
notb
fcompl
inc
push
dec
jo
cmp
loop
fmul
pop
cmp
rclb
add
shlb
test
adc
mov
mov
cmpsb
sub
pop
add
add
popa
mov
mov
fstpl
pop
adc
roll
sarl
rclb
out
subl
cs
pop
adc
adc
add
xor
pop
mov
cmpsb
sbb
inc
or
imul
ret
mov
arpl
adc
add
and
xlat
inc
cli
xor
lds
adc
sbb
or
popa
pusha
dec
adcb
insl
mov
lds
dec
pusha
or
jne
inc
mov
arpl
out
jmp
ja
and
mov
hlt
outsl
or
inc
xchg
pop
push
and
and
pushf
add
mov
leave
mov
jns
push
sbb
iret
inc
mov
inc
jecxz
test
jecxz
lock
aad
lds
mov
leave
push
call
fbstp
or
mov
imul
mov
push
mov
push
aaa
or
in
add
or
adc
xchg
mov
jne
ror
sbb
mov
pop
mov
ror
outsb
sbb
mov
xchg
lock
jecxz
stos
jp
pop
rcrb
jp
cs
push
insl
lds
xor
loope
sub
xor
repz
ret
sub
adc
les
fwait
pop
dec
fnsave
loopne
adc
sub
adc
imul
xor
fsts
or
fwait
add
inc
push
out
stc
push
jbe
popa
lock
sub
jno
or
adc
and
mov
pop
out
adc
shrb
mov
cld
loope
outsl
mov
mov
add
stc
aad
es
pand
loope
nop
push
mov
js
fmull
out
xchg
jmp
jmp
or
or
adc
ss
pop
inc
push
cmp
add
addl
dec
fidivrs
mov
push
dec
jle
lea
lods
test
dec
or
add
and
out
push
imul
les
lds
popa
data16
inc
mov
inc
testl
or
inc
jne
push
cmp
orb
or
outsl
sbb
les
dec
and
ja
dec
fiadds
push
pop
sahf
mov
adc
pop
dec
popa
and
outsl
sti
mov
jg
std
jle
sbb
add
jo
cli
clc
mov
mov
imul
xor
subb
insl
sbb
mov
or
pop
push
add
aam
mov
pop
enter
and
out
pop
js
push
add
mov
mov
imul
or
xchg
lods
daa
or
and
lds
out
push
sbb
mov
push
jg
sbb
and
stos
and
and
rolb
add
clc
or
or
imul
faddl
push
fistps
cmpsb
lea
or
mov
mov
xchg
nop
imul
shl
adc
subl
jecxz
pop
test
add
and
adcb
xor
dec
ds
adc
loope
stos
xlat
adc
adc
xchg
sbb
in
sub
and
xchg
and
mov
and
pusha
test
xchg
shrb
fcmove
jecxz
mov
lock
shld
mov
cmp
ret
fs
add
fstpt
or
inc
out
inc
or
cltd
inc
call
pop
pop
xor
rcll
movsb
shrb
lods
and
mov
mov
loopne
xor
int
dec
fwait
mov
jmp
add
xor
xchg
nop
scas
adc
jp
sti
mov
inc
imul
sub
cld
fucom
movb
imul
push
mov
pusha
arpl
cmp
pop
pusha
mov
and
mov
sbb
imul
push
gs
dec
arpl
pop
cmovg
and
inc
or
cmc
mov
jne
call
sub
pop
scas
add
add
mov
insl
leave
xor
mov
push
out
xchg
mov
popa
or
pop
bound
xlat
sbb
mov
inc
cmp
cmp
cltd
jo
add
mov
dec
test
aas
xor
js
dec
add
sbb
gs
push
adc
mov
or
scas
sti
push
and
or
fs
add
pop
adc
insl
or
mov
es
je
int3
movsl
ret
dec
stos
inc
fistpll
lret
mov
mov
out
test
jb
cmp
adc
fwait
mov
pop
fsubs
loop
data16
adc
jb
jno
pop
mov
inc
jl
fld
jge,pt
rolb
sub
jb
xor
xor
cmpsl
int3
fdivrs
mov
inc
mov
test
roll
dec
and
xchg
adc
mov
or
pop
jmp
fwait
sbb
fs
mov
in
mov
and
sbb
pusha
adc
add
mov
add
out
jb
lock
jno
cmpb
xchg
jno
or
icebp
into
loop
aam
add
inc
adc
sub
xlat
jg
cmc
rcll
dec
jb
inc
popa
movsb
in
lock
lahf
ds
sbbl
lock
rcrb
ret
ss
das
and
dec
pop
adc
in
mov
fisttpl
mov
push
inc
out
add
jp
popf
jb
loop
and
cwtl
repz
insl
cmp
mov
or
ret
mov
jp
push
insb
push
cmp
jge
add
or
sbb
stc
dec
dec
sbb
or
inc
xchg
mov
addl
faddl
call
inc
aaa
in
dec
mov
xrelease
xchg
imul
cltd
outsb
inc
aas
lock
xor
inc
mov
xchg
and
sub
fcoms
dec
xor
inc
xchg
add
fnstcw
movsl
pop
or
sub
xchg
dec
scas
pop
movsl
fiadds
cmp
cmp
aas
lock
xchg
sub
sbb
add
fbstp
outsl
and
cmpsl
in
rcrl
fdivs
pop
out
and
and
daa
add
out
fsubs
push
sbb
adc
in
popa
je
pop
add
mov
out
popf
cmp
jnp
icebp
cs
xchg
mov
shr
mov
sbb
dec
xorl
inc
inc
test
or
rclb
mov
test
sarb
add
nop
cmp
das
or
adc
adcb
repnz
out
rcrb
and
xchg
mov
int3
inc
dec
dec
sbb
sahf
out
add
ret
jo
fisubrs
in
enter
out
mov
and
jge
or
and
push
lahf
push
dec
cli
test
sub
jb
test
imul
push
cmc
mov
jg
in
add
push
xor
mov
and
inc
jmp
outsb
mov
and
arpl
dec
iret
add
xchg
fidivrl
dec
insb
movsb
push
dec
inc
and
dec
fcomps
dec
vxorps
je
out
sub
pop
ds
fcompl
lret
pop
pop
cmc
mov
cmpsl
cmp
or
lock
mov
ljmp
fcomps
aam
sahf
aad
xlat
push
xchg
xchg
popl
mov
xchg
dec
orb
mov
mov
and
mov
fidivrs
sbb
mov
jp
push
lcall
pop
aam
cmp
shlb
mov
and
pop
loop
push
adc
cmp
les
loop
sbb
add
nop
icebp
les
arpl
loopne
dec
loope
mov
rorb
outsl
insb
xlat
orl
mov
fwait
adc
imul
inc
std
les
fiadds
clc
dec
sub
lcall
and
add
xor
aad
stos
imul
inc
sub
pop
jns
insl
mov
lds
cmpsb
add
dec
sub
sbb
and
popf
sub
mov
fwait
sahf
es
and
mov
mov
inc
mov
js
dec
nop
dec
dec
cmp
dec
iret
add
insl
cmp
pop
sahf
sahf
dec
adc
cmp
jbe
or
andb
xchg
imul
dec
dec
xchg
push
in
jb
pop
lret
mov
sub
xchg
lods
jl
dec
dec
imul
ja
dec
sbb
test
xchg
xchg
xor
mov
dec
jmp
and
daa
clc
cmp
insl
cwtl
scas
mov
mov
shll
pop
or
bound
mov
xlat
xor
add
cld
add
or
push
push
and
push
fdivrs
inc
outsb
bound
fisubs
fstps
clc
repnz
push
stc
pop
ss
sbb
filds
inc
insl
fbld
or
fdivrs
repnz
sub
sarl
ja
fldenv
add
in
icebp
sbb
pop
scas
mov
rorl
adc
cmp
dec
adc
add
mov
pop
sbb
pop
or
jne
push
mov
push
jge
cmpsl
cmp
lock
leave
push
aas
stc
mov
inc
and
mov
push
xchg
popf
mov
push
xchg
inc
sbb
lock
xchg
push
fists
add
sbb
push
test
leave
insl
mov
ja
inc
cmc
push
jle
hlt
add
addb
inc
outsb
inc
sbb
sahf
test
insb
js
adcl
lock
cwtl
ljmp
call
sub
sbb
inc
movsl
cmp
sub
cmpsb
dec
loope
insb
sub
and
popa
mov
sbbl
fld
fst
pop
jno
into
pop
lea
xor
testb
pop
aaa
cmp
int3
aas
std
shll
jecxz
mov
add
sbb
stos
in
test
popa
mov
stos
cli
in
ds
fimull
jnp
imul
loopne
lock
mov
outsl
or
int
loopne
dec
mov
dec
xlat
and
lea
daa
and
std
dec
mov
ss
outsl
incb
lds
test
and
nop
dec
push
loope
dec
push
pop
and
pushf
sarb
clc
pop
sahf
rcl
in
jecxz
loopne
int
jo
inc
insb
mov
in
mov
lret
leave
push
mov
xor
add
add
dec
add
adc
ljmp
ret
sbb
mov
loope
jb
dec
dec
pop
xchg
mov
push
test
pusha
mov
loope
xor
adc
loop
cmc
andb
adc
dec
add
push
popf
sub
push
push
pop
mov
jecxz
jne
scas
sub
movhps
fsts
movsl
lods
ret
cmc
out
insb
cmp
xorl
push
cmp
dec
inc
sbb
lods
sarl
loopne
pop
dec
mov
add
pop
mov
lods
push
pop
jbe
push
jno
dec
incl
xlat
cmpsl
cmp
je
mov
dec
jmp
jo
pop
lret
loopne
or
pop
dec
out
xor
inc
jl
js
jbe
loopne
subb
ret
mov
jne
add
shll
das
fdivs
test
loopne
mov
cmp
add
mov
jl
dec
add
stos
add
dec
call
cmp
sbb
nop
cmp
lods
sub
rclb
loopne
push
push
xchg
mov
and
pop
stos
pop
data16
std
icebp
cmp
dec
imul
pop
sub
mov
nop
pop
mov
or
jge
enter
jns
fmuls
jecxz
pop
int3
or
cwtl
mov
and
jno
jnp
jae
nop
xchg
jnp
pop
cmpsb
stos
movsl
sbbl
notb
add
xchg
add
cmp
into
pusha
sub
jne
pop
imul
in
xchg
outsb
daa
or
cwtl
pop
sbb
pop
out
pop
addb
into
jbe
hlt
loope
scas
mov
adc
pop
add
xchg
fdivrs
mov
xchg
cmp
mov
loop
das
dec
push
ds
sub
sub
movsl
sub
pop
adc
dec
sti
and
notl
movsb
enter
mov
fwait
mov
lcall
xorb
fcomps
mov
cmp
inc
imul
mov
inc
test
sbb
or
lods
jmp
hlt
xor
outsb
aaa
dec
lods
loope
mov
sbb
es
cld
and
push
xchg
adc
push
sbb
and
pushf
jns
fcomps
dec
arpl
xor
popa
jmp
dec
jb
sbb
add
imul
jmp
int3
adc
or
aam
stos
jmp
pop
adc
jecxz
jo
sbb
jno
fdivrl
bound
and
mov
subl
jmp
cs
and
xor
xchg
add
cmp
jecxz
test
mov
pop
gs
andl
ffreep
sub
sub
push
pop
sub
imul
push
xchg
inc
and
pop
inc
in
cmp
les
shrl
and
std
dec
repz
jno
jo
xor
jmp
mov
xchg
icebp
inc
push
sbb
inc
ret
xchg
mov
dec
aas
rcrl
mov
mov
test
adc
mov
jnp
cmp
outsb
dec
hlt
out
mov
nop
lock
aaa
dec
dec
push
sbb
js
incb
jmp
add
xchg
fwait
outsl
inc
leave
adc
call
pop
ret
adc
rclb
push
push
leave
insb
or
and
orl
mov
cmp
lahf
cmp
mov
cmp
lret
fmuls
or
dec
js
and
sbb
xorb
mov
add
add
out
inc
push
push
xchg
stos
shl
ret
dec
sub
pop
shlb
sub
mov
mov
sbb
or
push
test
pop
in
and
push
cmp
mov
add
jne
loope
inc
lods
inc
lret
pop
lea
mov
sbb
xor
shrl
sbb
je
mov
mov
xchg
and
add
dec
loope
inc
dec
adc
adc
stos
and
mov
fmull
add
fmuls
jbe
aaa
enter
mov
xchg
push
xlat
inc
add
cli
cmp
sarb
jg
out
mov
jnp
je
test
pusha
shll
mov
add
xor
mov
cs
adc
push
add
cmc
nop
ljmp
or
lret
mov
lods
push
pusha
adc
jge
push
xchg
sub
add
xor
inc
hlt
ds
dec
shr
pop
test
cwtl
in
xor
sbb
push
add
jbe
dec
sbb
inc
dec
add
cmp
rol
pop
in
and
andl
arpl
arpl
mov
mov
and
aad
mov
xor
cmc
sub
adc
add
jecxz
dec
sub
sbb
jb
iret
scas
dec
jecxz
push
insl
test
hlt
mov
adc
xchg
test
inc
movsb
adc
ret
shl
lock
pop
push
xchg
jecxz
dec
lea
loopne
inc
sbb
lret
xchg
je
int
sbb
dec
int3
jge
xchg
popa
inc
popf
mov
sbb
inc
mov
xchg
int
ja
clc
jmp
loop
movsb
pop
roll
jae
jbe
adc
dec
cmp
lea
adc
jl
clc
adcb
sti
enter
cwtl
and
or
test
leave
daa
pop
cmp
mov
call
arpl
mov
or
adc
cmp
les
pop
stos
add
xor
dec
xchg
mov
hlt
mov
add
and
sbb
sub
int3
out
and
sbbl
add
aam
lds
rcrl
cli
jbe
sbb
xchg
adc
nop
jno
ljmp
jno
loop
imul
in
aam
pmaxsw
lock
mov
dec
call
aad
push
lock
inc
inc
dec
xor
adc
push
inc
mov
jo
cmp
pop
mov
imul
je
fadds
fs
sbb
insl
insl
psraw
clc
mov
xchg
cmp
orl
faddl
call
ret
cmp
hlt
mov
push
and
push
or
fwait
jb
inc
mov
dec
jecxz
add
add
enter
dec
arpl
lret
add
inc
sbb
xor
or
xchg
add
or
imull
lds
test
iret
jo
add
jbe
aas
xchg
dec
jo
adc
dec
inc
mov
fstl
add
xchg
xchg
les
xchg
add
add
adc
mov
lock
popa
fisttpll
or
inc
sbb
fcmovb
scas
adc
add
inc
fiadds
pop
dec
loope
mov
loopne
sbb
dec
adc
test
into
test
imul
mov
mov
or
or
fimull
or
mov
dec
push
int3
loop
sbb
fnstcw
outsl
pop
sbb
popa
aam
rolb
shlb
sbb
popf
jbe
cwtl
adcb
add
sbb
sbb
sbb
inc
push
jecxz
and
movsl
jle,pt
sub
dec
xchg
movsl
xor
loopne
pusha
mov
arpl
dec
push
stos
mov
mov
lcall
loope
imul
adc
inc
loop
push
cmp
lret
mov
fbstp
fmuls
sub
fnstenv
mov
jb
or
add
xor
adc
test
movsb
push
mov
or
mov
add
call
mov
mov
cmpsb
or
movsl
fnstenv
adc
sub
xor
sub
rclb
repnz
incb
and
leave
xor
or
mov
add
std
xchg
leave
xchg
cmpsb
pop
outsl
aas
cmpsl
cmp
pop
cmp
mov
lock
xchg
adc
icebp
pop
cmove
mov
arpl
sbb
sbb
inc
xchg
jns
fs
push
or
pop
or
pop
ret
addb
xor
xor
ss
stos
pop
sub
sbb
lret
outsl
xor
pop
test
dec
insb
mov
and
mov
dec
and
cvtpi2ps
add
add
cmp
fcmovb
fdivrp
inc
xchg
dec
iret
pop
xor
lahf
pop
rcrl
sub
push
cmp
jp
mov
xor
mov
test
lock
stos
adc
pop
movb
dec
sahf
sub
subl
jge
pop
movsb
daa
inc
jbe
jl
shrb
inc
popa
lret
imul
adc
cmp
pushf
mov
repz
xlat
sub
sarl
mov
inc
or
insb
pop
mov
ret
xor
imul
pop
push
out
push
nop
mov
adc
add
daa
jecxz
cmpsl
aam
inc
test
or
mov
xor
stos
dec
icebp
cmc
ljmp
sbb
and
or
mov
or
push
dec
lock
sbb
jns
sub
ljmp
adc
cmpsl
lock
pop
and
scas
movsb
and
push
insb
cmpsl
or
mov
sbb
xchg
pop
icebp
nop
shlb
mov
data16
test
leave
mov
cmp
sub
das
and
lea
les
or
loopne
xchg
mov
outsb
adc
push
cmp
imul
pop
mov
jmp
jbe
aad
mov
push
mov
cmc
dec
sbb
pop
or
sbb
shrl
jo
sub
faddl
sbb
jne
and
mov
lock
xchg
xchg
push
sub
jbe
xor
mov
or
adc
sbb
xchg
jns
dec
jno
mov
fs
js
sbb
push
mov
mov
enter
sbb
scas
inc
loop
push
enter
enter
cmpsb
aad
ret
add
xchg
jecxz
add
and
lock
jmp
ffree
or
lcall
pusha
xor
int
pop
inc
mov
rcll
and
aas
out
add
push
cld
jnp
sub
xor
arpl
clc
bound
cwtl
pop
or
nop
dec
pop
dec
pop
ja
arpl
fdivrl
xchg
inc
insb
cmpsb
addb
stos
movsb
test
aas
in
ss
test
push
pop
pop
add
shlb
rolb
add
jae
push
cwtl
mov
mov
addl
popa
or
add
or
inc
xor
ret
out
mov
imul
ljmp
outsl
jecxz
or
nop
mov
add
outsb
adcb
cs
adcb
sbb
dec
popl
sub
adc
inc
shll
push
mov
shlb
adc
xchg
push
mov
clc
adc
popa
cli
fdivr
jb
pop
dec
inc
pop
sarb
inc
mov
jb
leave
movsl
jne
sbb
jle
mov
sbbb
call
xchg
jne
sub
inc
xlat
add
aam
insl
adc
test
cmp
fistpll
daa
and
add
aas
test
andb
test
cwtl
push
and
mov
add
dec
dec
int
push
fwait
shrb
into
mov
and
jg
and
sub
xchg
out
into
jle
scas
ret
push
inc
xchg
cmp
dec
jo
outsl
sub
xor
jno
loop
fwait
mov
ret
and
scas
stos
outsb
out
icebp
ds
pop
jg
and
xlat
cmp
and
sbb
xor
pop
movsb
enter
movsl
pop
mov
divl
popa
mov
push
int
mov
dec
jmp
enter
lock
xchg
pop
pop
inc
dec
mov
imul
mov
and
xchg
and
in
sub
add
or
cmpsb
mov
jae
adc
add
leave
xorl
xchg
movsb
icebp
jg
in
xchg
incl
je
mov
adc
xchg
enter
mov
push
cs
xor
arpl
mov
mov
cwtl
mov
mov
decl
cmp
loope
push
fildl
addb
mov
cmc
inc
or
sbb
add
cwtl
push
xor
add
mov
scas
and
sub
mov
push
push
sub
xadd
sahf
inc
shrb
add
xor
movsl
das
mov
rorl
add
mov
addl
gs
add
dec
cmp
or
push
out
out
scas
jb
mov
jne
mov
fmull
add
cmp
push
gs
cltd
xorl
xchg
scas
cmc
popa
lea
nop
aaa
ret
gs
pop
add
pop
sbb
sub
nop
mov
inc
push
dec
xchg
mov
adc
sub
jae
dec
dec
dec
rcl
push
add
pop
dec
or
adcl
mov
ret
std
push
in
push
mov
pop
mov
or
enter
icebp
inc
addb
add
push
cmp
xchg
mov
imul
pusha
jp
loopne
and
pop
dec
pop
mov
mov
add
dec
inc
in
test
loope
xchg
xchg
cmp
repz
and
xchg
leave
sbb
sub
stos
int3
test
cmp
xor
inc
sbb
mull
stos
or
iret
mov
imul
lock
in
cltd
mov
mov
add
test
ljmp
daa
lret
xor
jnp
stos
cmpsb
add
testb
insb
add
nop
scas
scas
cltd
jbe
rolb
mov
xchg
dec
pop
nop
add
in
roll
mov
dec
mov
int3
fbld
pop
push
inc
imul
and
sbb
inc
mov
orl
or
mov
push
push
stos
inc
dec
add
call
in
addr16
sub
popa
sahf
xor
sub
or
lods
push
dec
sub
insb
bound
sti
int3
fdivrl
rclb
sbb
aad
mov
cmpsb
aad
stos
and
add
jp
or
sub
sub
scas
push
lock
pop
pop
adc
add
loop
mov
hlt
jle
dec
xchg
push
xor
imul
daa
arpl
jne
imul
fnstenv
sbb
mov
movsb
mov
push
xorb
dec
ficomps
fiadds
lea
mov
pop
add
aas
lods
inc
das
std
loopne
pusha
mov
add
push
js
movb
adc
mov
inc
cmp
inc
addr16
push
pop
jl
cmpsl
jb
push
sbb
push
add
push
mov
mov
mov
sbb
pop
xor
inc
cwtl
and
ljmp
cmpsb
andb
testl
pop
sub
insl
das
push
imul
xor
push
jo
nop
aam
mov
mov
or
loope
inc
mov
pop
rcrb
add
add
xchg
test
sub
and
xchg
inc
jmp
and
out
lock
fs
push
sbb
mov
push
and
imul
and
or
ja
imul
push
ss
mov
addl
cs
inc
adc
pop
sbb
mov
push
jae
or
imul
cwtl
lret
dec
jmp
mov
cld
add
test
in
loop
pop
mov
pop
sti
lock
or
add
push
cmp
mov
and
cmpl
xor
add
dec
roll
fldl
jmp
pop
andb
lods
cmc
cmp
clc
xor
mov
loope
lock
push
mov
call
push
xchg
icebp
pushf
push
shrd
pop
insb
jle
xor
lret
jl
or
jo
clc
adc
dec
sarl
sub
dec
sbbl
pop
pop
addr16
and
and
lods
add
rcrb
and
sahf
dec
cmpsb
mov
adc
enter
shlb
push
outsb
add
nop
mov
and
pop
adc
cli
inc
xlat
xor
jo
cltd
push
mov
dec
jb
hlt
sbb
dec
dec
out
sub
mov
add
sub
inc
xchg
add
mov
add
pop
leave
xchg
mov
adc
out
adc
sahf
add
movsb
pop
test
dec
sub
sub
sub
sti
xchg
movsl
test
push
sarb
add
popa
pop
jecxz
pop
outsl
xchg
mov
ret
pop
dec
cltd
shrb
or
sub
dec
test
dec
shr
aas
dec
and
inc
ret
xor
loop
pop
insl
test
popa
popa
sbb
sbb
out
stc
inc
lock
cli
cs
nop
adc
jge
push
cmp
in
push
mov
fdivs
or
fldcw
xor
add
xor
mov
add
divb
push
xor
push
sub
daa
in
add
cmp
or
push
inc
inc
jmp
adc
pop
sbb
fdivl
push
pop
jmp
mov
sub
or
or
roll
add
push
mov
and
xorb
pop
or
adc
loope
push
out
mov
dec
rcll
xor
jmp
test
add
dec
sbb
sub
test
daa
in
add
test
enter
or
dec
addb
adc
and
aaa
add
adc
movsl
pop
in
ja
or
call
sahf
sbb
sbb
mov
inc
and
xchg
sbb
out
add
ljmp
ret
fnsave
cltd
add
mov
or
jbe
jb
bound
cmp
aas
in
mov
inc
push
cmp
add
hlt
and
fs
push
dec
subb
mov
mov
icebp
pop
sub
xchg
fadds
jns
bound
jbe
push
jecxz
dec
and
lds
xorl
push
cmp
and
shrb
pop
lahf
lcall
cmp
sub
call
popa
and
inc
sub
sub
inc
aas
push
lock
jbe
addl
aas
daa
repz
loope
add
bound
sub
xchg
mov
ficoml
cwtl
popa
or
cltd
inc
pop
rolb
push
lahf
push
mov
lods
mov
in
loopne
nop
push
mov
xor
sar
inc
pop
push
jecxz
bound
rorl
and
leave
mov
insb
adc
and
mov
sub
outsl
dec
push
ret
xchg
into
mov
fdivl
lcall
xchg
incl
sub
out
pop
pop
in
jo
shl
lret
js
add
in
lret
jno
movsb
mov
pop
mov
cmp
std
aaa
cmpl
xchg
mov
testl
or
cli
lock
sbb
push
jb
movsb
cmp
adc
xchg
push
push
mov
dec
imul
test
iret
add
mov
xchg
icebp
mov
push
and
mov
dec
xor
inc
xchg
pop
stc
imul
rorl
cmpsb
pop
icebp
ja
cli
cwtl
leave
lahf
loop
rcll
mov
daa
add
sub
lahf
or
ljmp
lret
shl
lcall
adc
out
mov
push
leave
jo
adc
mov
cmp
ret
adc
sub
jne
jmp
iret
fiaddl
dec
movsb
int3
xchg
roll
shll
or
jo
cld
push
imul
inc
enter
jb
mov
imul
pusha
xchg
pushf
aam
sbb
pop
cmp
shll
pop
or
lods
xor
out
loope
sub
test
imul
popa
aam
add
rol
cltd
jne
mov
fadds
lods
xor
lock
cltd
pop
cmpsl
jle
gs
jmp
push
mov
pop
mov
and
push
pop
xchg
add
and
out
xor
sbb
aaa
jge
insl
mov
ret
outsb
pop
xor
lea
pop
xor
push
cmp
fsubrp
adc
ja
rorb
mov
mov
jb
mov
mov
test
and
rcrb
fsubs
lea
ja
sub
test
mov
int
pop
scas
adc
das
push
mov
push
xor
mov
mov
adc
or
or
xchg
push
adc
mov
push
dec
push
xchg
and
bound
adc
sbb
call
mov
and
inc
mov
addr16
jp
mov
cmp
roll
mov
pop
push
jp
test
add
lret
ret
adc
scas
sub
push
js
movsb
test
pop
imul
jno
lret
imul
scas
test
sbb
call
inc
in
push
dec
mov
sbb
sub
sbb
imul
or
add
dec
lods
test
jl
inc
dec
mov
in
mov
in
add
lods
sbb
movsl
cmpsl
dec
push
repz
jo
sub
add
and
lret
and
and
stc
inc
dec
push
push
mov
add
mov
jmp
lock
icebp
cmp
pushf
jle
or
add
sbb
insl
loopne
pop
jae
inc
mov
xchg
and
jnp
sbb
mov
cmpb
iret
cmpsl
and
dec
add
inc
test
ficoms
test
insl
hlt
movsl
push
das
sahf
int3
or
loopne
sub
std
mov
adc
out
loope
shlb
adc
rolb
xor
das
xor
or
rorb
xor
inc
cmp
push
sub
cmp
out
les
outsl
insl
add
xor
adc
xchg
mov
add
arpl
in
je,pn
daa
mov
cmp
cs
std
pop
dec
lock
jg
lret
js
ljmp
or
outsl
jae
hlt
popa
mov
sahf
add
stos
sbb
ret
xchg
push
lds
add
cltd
jno
call
sarl
push
inc
aad
mov
xlat
push
lret
ret
push
mul
sbb
das
mov
jecxz
clc
add
cmp
movsb
outsb
and
mov
xor
dec
iret
cmc
mov
jle
loope
sbb
outsb
sub
xchg
cli
mov
fwait
mov
into
clc
adc
enter
test
arpl
or
cmpsb
mov
xor
pop
out
test
pop
fldcw
and
mov
push
lock
scas
fsubs
sbb
dec
fs
lock
lea
cmp
adc
jl
inc
mov
fists
add
jo
add
sub
stos
dec
pop
ffreep
cwtl
rdpmc
mov
lods
movsb
jnp
and
sbb
mov
dec
dec
dec
jb
mov
popf
sarb
add
and
cmc
xorb
mov
outsl
popa
mov
add
mov
jns
cmp
mov
adc
sarb
pop
adc
sti
ffreep
inc
stos
int
jne
mov
push
mov
iret
movsl
popa
mov
add
test
sbb
les
daa
xor
jl
mov
xor
shll
sub
lock
imul
and
iret
addr16
mov
dec
xlat
pop
std
ret
xor
add
jmp
cmp
add
sbb
inc
pop
cmpsb
sub
adc
pusha
xor
jmp
adc
addr16
or
out
push
push
rorb
sub
pop
les
xor
cmp
push
mov
lea
inc
mov
aam
test
jl
pop
xor
sub
mov
sbbb
add
push
sbb
push
or
pushl
icebp
jnp
cmp
push
xor
xor
cmp
pop
or
scas
add
dec
mov
fucomip
pop
jbe
mov
rol
sub
cmp
loop
popa
xchg
in
jmp
adc
xor
dec
cmp
cmp
dec
mov
pop
cmp
repnz
out
dec
sahf
mov
icebp
cwtl
cld
jno
push
pop
pop
or
shll
jne
jnp
sti
mov
xor
es
jns
jo
sub
sbb
xor
enter
mov
dec
pop
xchg
scas
mov
xchg
add
mov
jo
jno
xor
cs
xchg
or
push
lea
sbb
xor
jnp
or
insl
cmp
popf
add
stos
sbb
jl
loopne
leave
pushf
mov
push
inc
fs
push
out
imul
adc
test
pop
imul
xchg
addb
adc
sbb
je
and
and
dec
dec
adc
movsl
lahf
xchg
xor
inc
mov
dec
inc
push
adc
push
cmp
test
add
push
inc
sbb
data16
pop
jne
sub
xchg
mov
inc
sbb
call
sbb
and
sbb
jp
or
push
push
and
push
inc
and
mov
rcll
loop
mov
jbe
pushf
jp
mov
dec
and
sub
sahf
gs
movsb
mov
xchg
aam
out
push
cmp
inc
adc
xchg
pop
nop
sahf
cmp
adc
xchg
cli
leave
rolb
and
scas
scas
rorb
inc
xchg
shlb
jnp
movsl
inc
test
sub
adc
stc
cwtl
xor
pop
fidivrl
dec
dec
xor
movsl
jle
mov
or
sbb
and
jns
or
add
xorl
shl
es
cmp
mov
or
inc
xchg
mov
adc
xchg
aaa
fdivrs
mov
sarl
or
xchg
lea
mov
jo
shrb
and
bound
sub
cmpsb
test
jns
sbb
cmc
ds
or
mov
mov
dec
xor
sub
mov
ja
jl
aas
inc
mov
dec
outsb
loopne
inc
inc
adc
add
dec
xchg
ljmp
push
cmpsb
fcoml
adc
xlat
cmp
daa
mov
leave
sbb
fisttpll
add
push
pop
addb
mov
cwtl
fisttpl
add
xchg
cmp
mov
imul
pop
rclb
call
dec
pop
pop
pop
fdivr
pop
test
std
or
jp
test
push
lods
xor
mov
dec
inc
or
dec
cltd
andl
imul
cmp
xchg
mov
xor
pop
adc
jns
lahf
cltd
outsl
adc
out
out
lock
lret
pop
sbbl
out
or
and
jecxz
repnz
add
xor
fwait
sbb
mov
fcoms
sar
mov
adc
mov
xor
push
ljmp
rcrl
ret
pop
cltd
in
mov
jno
es
mov
fcompl
loopne
lock
or
or
dec
call
or
dec
mov
pop
lods
scas
mov
xor
in
pop
adc
inc
insl
sbb
dec
sub
mov
and
fmuls
inc
in
fisubl
adc
pop
jno
insb
mov
psraw
mov
lahf
and
icebp
mov
std
xor
sub
test
sahf
sbb
pop
in
loope
adc
add
xor
mov
test
sub
push
and
sbb
scas
sub
mov
popf
pushf
ret
inc
jmp
add
nop
adc
popa
stos
dec
adc
xchg
pop
inc
sbb
and
int3
out
pop
sbb
ret
jne
dec
sbbb
adc
and
pop
addl
int
pop
dec
call
mov
hlt
xchg
cvtdq2ps
or
sub
mov
fistpl
lods
xor
adcb
push
cmp
add
push
push
mov
aas
sub
ret
add
jno
pop
inc
pop
push
les
sub
lds
fbstp
pop
fists
popa
fldl
mov
add
xor
push
in
and
lds
xor
test
fs
or
xor
sti
xchg
icebp
add
out
mov
nop
pop
popa
ss
adc
shll
test
fsubs
inc
insl
dec
xchg
int3
pop
cmpsb
xchg
arpl
inc
sbbb
pushf
fwait
xchg
push
push
in
or
fcompp
jp
or
jl
add
pop
aaa
ljmp
and
bound
adc
or
mov
sub
dec
daa
push
pop
adcb
dec
adc
push
mov
mov
inc
mov
adc
and
popa
mov
jb
add
dec
pop
clc
fiaddl
dec
cmp
ss
into
jmp
fs
sub
and
shl
mov
pop
xor
cmpb
or
test
call
dec
mov
and
mov
dec
and
mov
and
dec
lahf
mov
push
pusha
xchg
movsb
out
mov
inc
inc
subb
jno
xlat
scas
inc
sbb
mov
add
xchg
fdivrs
pop
mov
push
js
inc
inc
dec
test
dec
movsl
adc
xchg
imul
xor
dec
lods
xor
lock
push
pop
out
add
scas
sbb
mov
dec
cmp
imul
xchg
shr
mov
or
imul
test
inc
push
in
lock
mov
fldl
mov
or
sub
aad
mov
sub
mov
sub
or
or
lahf
mov
push
pushf
shll
std
sbb
dec
or
rcll
fildl
mov
ds
sub
ss
jecxz
push
xchg
js
push
lret
inc
pushf
jmp
sbb
and
sub
lods
mov
add
out
out
movsb
in
fsubr
sti
jae
rcrl
sbb
pop
add
shr
or
and
xchg
adc
test
popf
call
and
fbld
push
xor
insb
add
jle
cmp
add
cwtl
cmp
cmp
cs
movsl
push
mov
mov
mov
pextrw
mov
lahf
ss
fldenv
sahf
or
jo
mov
cmpb
lret
andb
fistl
cmpsb
sub
push
psrlw
mov
push
mov
cmpsb
adc
inc
pop
fs
inc
sbb
dec
add
pop
inc
sbb
mov
out
dec
ds
fstpt
push
dec
or
in
cmp
push
and
jo
pop
fnsave
aam
or
fwait
je
mov
cmp
frstor
jnp
les
insb
inc
sbb
adc
orl
sub
push
stos
test
pop
stc
lret
push
scas
lcall
inc
addr16
dec
mov
pop
add
rol
sbbl
ror
push
sub
push
mov
push
gs
int
dec
mov
xchg
xchg
pop
addr16
dec
or
add
or
fisttpl
mov
rcrl
mov
scas
imul
pop
imul
sbb
fs
stc
mov
enter
sti
movsb
jne
orl
pop
mov
lds
adc
test
insl
inc
inc
or
ret
sbb
mov
add
ret
sbb
jecxz
xchg
jmp
pop
inc
or
out
add
fs
cmc
test
pop
notl
in
xchg
cmc
js
mov
popa
sub
inc
mov
inc
xchg
incl
or
gs
decb
add
inc
sbb
mov
outsb
adc
cmp
jle
hlt
mov
loopne
adc
push
xchg
add
outsb
or
movsb
out
adc
and
mov
pop
and
jp
mov
dec
ja
pop
cmc
and
mov
stc
push
pop
add
xchg
jne
sahf
adc
sahf
xchg
rol
dec
sub
lcall
mov
or
mov
shlb
add
mov
xchg
inc
sub
inc
js
je
ret
sbb
jno
push
mov
cli
and
add
add
or
int
adc
pop
lods
cmpsl
movsl
lods
dec
mov
push
mov
sbb
push
and
in
dec
stos
andl
sbb
mov
rolb
lds
push
adc
pop
mov
and
mov
push
cmp
add
cmc
cmc
xchg
inc
les
or
inc
imul
aad
in
mov
push
sbb
adc
bound
pop
out
ret
pusha
inc
fbld
roll
dec
pop
fsubr
pop
add
call
and
inc
fsubl
fstl
xchg
fisttpl
mulb
ret
cmp
in
fwait
push
cmp
mov
or
cmpsb
int
aaa
lods
inc
cmp
dec
pop
pop
xchg
popf
push
ret
pusha
fdiv
add
xchg
lea
loope
pop
or
fwait
xchg
mov
out
ret
push
dec
inc
or
xchg
dec
xor
addb
rol
or
adc
jecxz
jbe
pop
inc
sub
cmpsb
xor
lea
out
les
add
add
inc
pop
cmp
adc
in
mov
push
es
leave
add
mov
push
mov
mov
enter
inc
inc
or
xchg
rcll
pop
cmp
add
insb
lea
into
mov
fwait
cwtl
andb
xchg
inc
sub
and
mov
adc
xchg
mov
cmp
fmul
sub
cmp
fcmovbe
adc
frstor
fistpl
negb
push
lea
push
lock
xchg
add
adc
xor
aad
nop
dec
mov
inc
jb
outsb
popa
outsl
mov
in
ja
out
popf
fcmovnu
mov
sub
mov
pop
mov
jbe
fstpt
mov
sub
fcomps
add
jmp
sub
mov
and
push
cmpsl
sub
sbb
mov
adc
add
push
repnz
ds
shrb
mov
sub
pusha
mov
imul
inc
sub
mov
pop
sar
adc
push
inc
loopne
xchg
pop
push
or
pop
mov
cmpsl
movsl
mov
adc
dec
xor
adc
fsts
pushf
mov
fwait
dec
jge
xor
push
fs
stc
pop
or
and
inc
sbb
sub
xchg
pop
leave
sbb
mov
sbb
cmp
xor
rcll
add
add
and
xchg
pop
mov
ret
xor
sbb
leave
sbb
add
mov
cmp
xchg
jne
cmp
push
bound
imul
push
mov
dec
ror
cltd
mov
lods
into
ja
add
pop
mov
adc
xchg
or
cltd
add
test
je
popf
jo
ret
push
and
mov
les
xchg
xchg
mov
lods
push
aaa
rcrl
fcomi
gs
adc
repz
xchg
cmp
movsl
test
enter
mov
pop
dec
xor
les
dec
dec
jo
push
pop
nop
pushw
lret
and
daa
cmp
push
shl
or
add
mov
cmp
xchg
mov
sarb
das
inc
movsb
insl
push
add
push
or
inc
adc
mov
add
pusha
pop
sub
mov
inc
ret
sbb
cvttps2pi
aad
xchg
mov
aad
adc
jno
sub
rcrb
bound
shl
enter
sbb
je
loop
sbb
push
dec
ja
pop
adc
xchg
test
sub
mov
jp
sbb
negl
roll
fdiv
mov
std
sbb
mov
insb
pop
sub
outsb
popf
out
or
fistpll
jle
stos
add
inc
inc
mov
loope
sub
lock
rol
std
inc
xchg
mov
lods
ss
lea
insb
js
inc
xor
arpl
fbld
push
inc
sbb
stc
fistps
mov
add
xchg
xor
and
sti
mov
add
add
pushf
add
inc
mov
sbb
adc
rorb
cmpsl
stos
icebp
leave
jle
das
lock
push
inc
dec
les
movsb
inc
pop
sbb
cvtpi2ps
pop
les
adc
or
sub
and
or
fcmovu
test
sbbl
mov
adcb
and
mov
popa
and
dec
dec
jmp
pcmpgtd
mov
subl
add
sub
je
dec
jnp
and
push
add
ds
int
push
mov
sub
or
lret
adc
lods
test
push
test
js
adc
sbb
mov
mov
ljmp
and
sub
dec
adc
adc
test
sub
dec
orl
cmpsb
add
mov
and
pop
inc
lock
mov
inc
or
rolb
out
and
inc
stos
lret
cwtl
push
ficomps
sti
jb
xorb
shlb
xchg
sub
dec
icebp
insb
das
xor
cld
add
lret
fbstp
add
leave
push
and
div
inc
mov
mov
dec
mov
jle
inc
or
xchg
mov
fbld
pop
pop
int3
cmp
addl
mov
shlb
or
sub
and
daa
dec
xchg
pop
cltd
add
lods
cmovbe
xchg
xor
andl
sbb
imul
sbb
jl
push
or
cltd
jnp
in
mov
push
jbe
test
dec
xchg
jno
push
mov
es
mov
inc
mov
roll
mov
inc
pop
ljmp
aam
repz
or
inc
add
das
pop
stos
inc
add
xor
inc
sahf
subb
pop
push
pusha
pop
loop
jge
mov
test
add
pop
bound
or
aaa
mov
sub
loope
jg
flds
int
rol
movntq
aaa
mov
pop
pop
xchg
mov
cmpb
mov
dec
dec
movsl
mov
xor
adc
imul
stos
push
movsb
xchg
sbb
test
or
fwait
or
lock
jb
les
add
add
fidivrl
push
loope
cwtl
cmp
add
sbb
sub
aas
mov
lods
inc
popa
bound
leave
inc
push
dec
faddl
cld
sbb
cmp
push
cmc
jne
cmp
sub
jno
cmp
test
push
dec
gs
imul
inc
mov
outsl
cli
add
movsb
hlt
out
out
add
scas
add
lcall
cs
cwtl
add
add
movsb
pusha
ss
nop
pop
mov
in
lods
mov
dec
stos
ja
test
xchg
dec
or
bound
mov
std
jl
sub
sbb
fistpll
adc
sub
cmp
out
aaa
mov
xchg
dec
aad
mov
sub
add
and
loope
mov
loope
orb
mov
popa
lock
ret
dec
ss
movsb
mov
sbb
cmp
in
das
sbb
fadds
scas
jo
inc
sbb
push
fwait
cli
add
subl
mov
imulb
adc
iret
das
sbb
clc
rcll
repnz
and
push
ret
dec
xchg
push
insb
pushf
outsl
fwait
outsl
xchg
loop
andl
lahf
jo
packsswb
aad
out
cwtl
mov
andl
xchg
sbb
or
push
push
xlat
inc
adcl
add
pushf
movsb
xor
shlb
jo
mov
adc
sub
insb
adc
jle
pop
sar
add
ret
sub
pop
lcall
push
enter
pop
dec
shl
loop
std
arpl
sar
test
mov
lods
and
cli
jnp
push
mov
add
mov
ret
in
xor
adc
mov
sub
add
mov
or
fneni(8087
imul
subb
pop
repnz
test
xchg
mov
andb
push
add
pop
cmp
jmp
movsl
sbb
jno
shl
loop
cmpsb
push
jmp
out
lcall
ret
and
scas
xchg
ja
aaa
cld
icebp
gs
loope
push
out
add
andl
adc
or
jne
mov
mov
inc
pop
inc
or
dec
mov
iret
fucomip
daa
pusha
mov
loop
pop
inc
pop
insb
inc
vmovhpd
mov
aas
test
loope
arpl
cmp
or
lea
push
ret
insl
add
push
gs
add
dec
popa
add
xchg
popf
jo
test
out
mov
pop
dec
test
bound
int
pop
aam
mov
inc
pop
jmp
and
outsb
jnp
lock
and
fwait
cmpb
bound
mov
push
popa
xor
sub
adc
xchg
mov
sub
sbb
dec
int
cmp
lock
rolb
aas
rorb
icebp
fdivr
test
icebp
add
cmp
xchg
pusha
fistpl
pop
xchg
inc
lock
dec
arpl
cwtl
cmp
push
mov
jmp
in
in
xor
mov
arpl
flds
int
dec
inc
jge
fnstsw
ret
mov
comiss
inc
bound
rorl
or
ljmp
mov
mov
adc
inc
cmp
movsl
xor
and
mov
dec
movsb
xchg
pop
in
jge
xor
sub
inc
mov
and
mov
sbb
sub
xchg
pop
fwait
or
inc
pop
pop
adc
sbb
dec
fsubl
and
or
pop
or
sub
mov
daa
add
lret
dec
call
out
and
adc
pop
insl
jecxz
jo
or
mov
mulb
or
and
and
inc
push
rcrb
inc
insb
adc
arpl
mov
lea
imul
mov
dec
xchg
pop
aam
and
ja
loop
test
or
mov
sub
lds
pop
pushf
xchg
dec
pusha
xor
scas
adc
loop
movsb
mov
addr16
jnp
les
lock
scas
or
ret
mov
rorl
mov
fldl
lock
scas
loop
inc
pop
test
lret
adc
nop
jae
push
inc
pop
dec
adc
inc
pop
push
fisttps
and
jo
clc
imul
les
xchg
pop
int3
out
pop
and
dec
inc
popa
xchg
movsb
mov
pop
jae
gs
add
scas
xor
adc
and
dec
loope
xchg
and
iret
test
int
jp
outsb
inc
sbbb
shlb
xchg
adc
dec
movsl
adc
xchg
inc
loope
arpl
shrb
xlat
xchg
xchg
addr16
fmull
cwtl
cmpsl
imul
call
xchg
jno
es
xor
xlat
mov
ljmp
sbb
sub
and
es
dec
std
lds
and
sbb
or
sbb
xchg
xor
sbb
lods
aas
pop
movsl
movsl
and
call
mov
popa
adc
jne
pop
mov
rolb
push
jne
jb
cmp
cmpl
jo
leave
andb
mov
sub
loopne
adc
push
add
sub
test
sub
xchg
pop
sub
rolb
imul
pop
fstpt
fsub
dec
inc
cmp
mov
sbb
xchg
push
xchg
lcall
inc
daa
push
dec
sub
sbb
jp
in
mov
into
add
adc
or
jle
subb
test
jecxz
mov
imul
mov
sbb
jge
in
fcoml
div
jb
sbb
dec
sbb
aas
rcl
inc
adc
add
sub
jecxz
arpl
xchg
or
sub
xchg
aam
sarb
pop
bnd
mov
popa
add
gs
sbb
or
jl
pusha
push
loope
es
add
jno
push
ret
pop
adc
adc
pusha
adc
lods
xchg
out
or
sbb
mov
scas
jmp
aaa
sub
cld
sub
mov
pop
adc
outsb
int
add
inc
js
enter
xchg
shr
out
inc
test
inc
icebp
fldcw
xor
cmp
adcb
insl
mov
inc
mov
nop
adc
insl
jno
add
mov
jno
jnp
jecxz
push
or
movsb
cmp
pop
lahf
mov
adc
and
insb
sub
shrl
pop
xor
adc
cmc
pop
or
loopne
add
mov
add
xor
jg
in
dec
test
jnp
orb
mov
xor
or
sbb
popa
mov
test
inc
sbb
mov
pusha
loopne
int
idivb
movsl
dec
mov
pop
add
xchg
xchg
mov
les
add
or
cmp
js
dec
mov
les
loopne
jo
lods
out
sub
cmpl
es
das
or
cltd
loope
pop
shl
or
inc
or
cmpsl
decb
inc
push
adc
cmp
pusha
sarl
std
test
and
push
dec
cwtl
lock
les
outsl
fcoml
mov
pop
ficoml
dec
les
sub
cmp
add
rorl
mov
dec
out
inc
pop
sub
sti
cmp
dec
imul
rcrl
insb
in
xchg
pop
rolb
sub
and
or
ficoms
inc
fs
dec
scas
test
mov
cltd
adc
jne
imul
les
add
test
add
xchg
shlb
and
aad
sbb
jns
xor
pop
mov
push
and
rcr
fisubl
ret
sbb
pushf
jo
daa
ret
stc
push
xchg
xchg
jo
jne
or
cmp
jge
and
nop
pop
insb
pop
cld
add
dec
jb
inc
rcll
dec
icebp
rcr
dec
xchg
xchg
nop
add
lea
lods
out
loopne
mov
cmp
gs
sub
or
mov
cmp
dec
xor
mov
push
lods
ret
lahf
lock
sbb
xchg
add
outsl
stos
sub
jge
movsb
jbe
shll
pop
dec
aam
xchg
rclb
cwtl
in
jb
mov
add
mov
stc
adc
popa
or
enter
pop
jnp
pop
jae
mov
jns
addr16
cld
push
cli
mov
loope
pop
xchg
sbb
xor
or
pop
pop
cwtl
add
ss
les
jl
and
dec
inc
adc
dec
inc
push
dec
mov
sbb
mov
jecxz
or
dec
int
addl
push
jae
pop
xor
movsb
adcb
and
rorl
mov
add
insl
fistpl
add
or
je
adc
push
test
push
inc
mov
or
fsubs
lahf
mov
les
psubb
jbe
lret
ja
mov
inc
xor
sarb
add
add
movsb
pop
add
dec
sbb
sub
push
inc
out
mov
cmpsl
insb
mov
icebp
and
add
adc
movsl
loopne
inc
or
jecxz
dec
add
subl
cmp
mov
and
dec
daa
mov
xchg
stc
and
ret
mov
dec
inc
add
imul
arpl
aad
pop
daa
or
loope
pop
aam
ret
mov
pusha
cmp
mov
pop
fnsave
mov
dec
jmp
or
adcb
movsb
dec
aaa
mov
daa
fs
int3
sub
in
mov
add
popa
pop
ror
dec
mov
rorb
inc
jle
sub
jbe
or
jb
cwtl
cmp
loopne
call
mov
cmpsl
ss
and
adc
pop
push
loopne,pn
jno
xchg
int
xchg
adc
lcall
jne
loop
sbb
inc
xchg
scas
dec
int
mov
arpl
out
mov
fmuls
ja
inc
jnp
push
js
imul
jb
popa
xor
pushw
leave
push
pusha
push
jle
sbb
xchg
iret
lods
or
mov
sub
mov
cmp
es
and
cs
insb
insl
repz
cmp
aad
xor
insb
mov
dec
or
xor
pop
mulb
aad
dec
xlat
rolb
dec
scas
popa
xchg
fs
lods
es
mov
cmpsl
inc
pop
mov
sbb
add
jmp
pop
push
pop
scas
sub
fcmovne
stos
adc
or
aad
outsl
test
iret
or
pop
imul
add
and
and
dec
loopne
sub
mov
lea
add
jae
lods
test
and
add
mov
pop
test
sbb
xorb
inc
test
movb
push
pop
or
jns
je
add
push
into
es
orb
inc
leave
int
pushf
lds
pop
lock
mov
push
adc
test
add
jecxz
dec
pop
or
adcb
test
jle
push
int
in
call
movsl
pop
push
fstpl
out
lock
lds
pop
and
test
repnz
loopne
movsl
lock
sub
mov
cmp
pop
inc
push
and
mov
inc
das
push
inc
and
test
sub
cmp
int
test
adc
xor
aaa
es
add
dec
ret
jp
push
inc
aam
and
outsb
test
popaw
mov
mov
cs
in
xor
add
addl
outsl
mov
push
in
mov
cmpsl
inc
aas
fmul
enter
pop
xchg
push
sbb
push
mov
jl
inc
popa
add
inc
pop
mov
add
add
mov
sub
add
dec
popa
jnp
or
jae
and
xchg
jne
jne
pop
cmp
mov
mov
mov
out
cmp
mov
insb
sub
sbb
dec
and
fisubrs
dec
add
push
in
outsb
insb
cltd
es
out
shlb
add
insl
push
mov
fs
jae
pop
jne
xchg
aam
arpl
std
popf
imul
push
add
cli
push
cmpsl
out
test
push
mov
add
addr16
mov
cli
fisubrl
aas
sub
pop
add
or
lods
aaa
mov
int3
nop
dec
dec
js
or
mov
iret
fdiv
jae
les
add
push
jl
xor
mov
icebp
add
add
jo
movsl
sub
subb
inc
add
rolb
aam
mov
outsb
hlt
add
push
rolb
popa
ja
addb
stc
stos
dec
sbb
lock
stos
rclb
adc
pop
xor
shlb
inc
aaa
addr16
add
dec
dec
push
jb
pop
push
dec
xchg
andb
dec
xchg
xchg
jecxz
adc
adc
aaa
cmpsb
mov
fcoms
xchg
xor
mov
loopne
pusha
imul
adc
into
xchg
pop
ljmp
rolb
add
jp
lods
and
and
imul
pop
sbb
dec
jle
cmp
mov
jg
or
js
rcll
lea
out
insb
jno
xchg
adc
clc
and
daa
dec
imul
dec
dec
sbb
out
fwait
jge
dec
out
test
cmova
mov
and
and
push
jb
lock
loope
insl
iret
add
push
inc
aaa
sahf
adc
mov
mov
dec
mov
out
or
stos
iret
mov
scas
pop
loop
ret
xor
gs
int3
int
lock
push
and
lea
dec
sub
and
pop
cmpsl
pop
mov
out
and
in
and
pop
cmpsb
xchg
inc
sbb
mov
fisubrl
dec
jb
add
xor
push
push
ds
dec
jnp
rcrl
movsb
inc
xchg
mov
sbb
cmpb
ss
add
add
adc
addl
ljmp
sbb
mov
ss
les
clc
movsb
sbb
loopne
pop
jo
sahf
hlt
mov
inc
fsubrs
movsl
test
adc
imul
popa
shrl
and
addl
add
mov
xchg
sahf
nop
fnstsw
les
data16
mov
dec
or
dec
jne
mov
and
movsl
jno
sbb
or
insb
popa
add
pushf
add
call
adc
nop
outsb
sub
push
push
test
fiadds
add
lcall
inc
sbb
int3
shlb
xor
pop
lcall
and
sub
lods
jmp
jne
inc
sbb
lret
xchg
dec
xchg
xor
jb
add
adc
add
mov
int3
jmp
and
mov
loopne
shlb
add
adc
cs
dec
pop
or
pop
mov
loope
les
add
out
inc
or
outsb
aaa
and
test
xchg
add
pushf
je
inc
push
mov
outsl
push
or
jbe
insb
scas
jns
push
test
adc
les
inc
mov
dec
in
in
or
add
sbb
adc
test
adc
cmp
js
out
mov
std
mov
jne
movb
cmp
adc
sub
mov
inc
sub
inc
mov
subl
adc
neg
push
insl
adc
mov
repz
daa
lea
jae
loopne
bound
xchg
in
xor
shl
mov
xor
in
test
inc
pusha
xchg
adc
jp
add
jg
xchg
sbb
shr
push
mov
pop
dec
xchg
mov
inc
inc
inc
lods
add
push
dec
aaa
or
daa
aad
rol
sbbb
and
xor
and
jns
jns
clc
in
adc
dec
mov
outsb
inc
call
cwtl
sbb
call
sarb
mov
mov
mov
in
test
mov
sbb
in
add
loope
lea
inc
es
fistpl
in
adc
add
cmp
arpl
add
in
imul
lcall
sub
cmp
mov
cli
dec
dec
cmp
xor
adc
xor
pusha
cmpsl
jo
out
sub
movaps
lret
xor
in
scas
pop
sbb
mov
adc
shlb
mov
arpl
pop
mov
inc
sbb
fcmovnbe
cmp
cmp
sahf
adc
je
xor
mov
cmp
loopne
popf
cmpsb
cwtl
or
adc
pop
lock
xor
dec
or
fwait
and
in
xor
stos
sbb
shufps
and
add
push
inc
pusha
jbe
inc
and
cs
jle
lret
add
ja
ljmp
aam
shlb
adc
and
enter
in
add
mov
sub
and
adc
pop
mov
push
cltd
or
mov
loope
inc
addr16
popf
push
dec
imul
punpckhbw
fsubrl
sarb
dec
inc
xchg
mov
sbb
repz
aaa
sub
cmpsl
in
and
adc
pusha
insb
sbb
sub
enter
sarb
js
add
scas
inc
add
movsb
movsb
aaa
xor
push
xchg
xchg
and
jo
sti
jl
out
shrb
push
inc
cltd
icebp
in
mov
and
jp
inc
outsb
jl
pop
inc
out
pusha
or
aam
xor
or
movsl
pop
inc
fcomp
repz
add
stos
jmp
shll
push
loopne
andl
inc
ret
jae
testl
inc
cmp
jnp
xor
jl
adcb
xchg
xchg
inc
pop
jno
inc
subl
add
xor
les
or
cmc
ss
cmc
cmp
or
push
testl
sbb
ret
fcmovbe
add
and
mov
es
and
fdivs
xor
fs
pop
xchg
bound
into
jo
leave
out
aad
sub
cmp
bound
jo
leave
or
pop
cld
and
dec
or
and
es
sbb
sbb
pop
out
and
clc
sbb
nop
push
inc
pusha
sbb
inc
popf
popa
sbb
rclb
xchg
mov
or
hlt
or
stos
rcll
ljmp
adc
aam
xor
fs
pop
ret
mov
cs
out
adc
or
adc
mov
cmpsb
mov
stc
jnp
out
enter
sbb
sbb
push
cmp
pop
in
sbb
inc
push
aaa
mov
inc
pop
negb
xlat
and
dec
pusha
mov
or
jecxz
nop
scas
inc
mov
repnz
or
cwtl
mov
loopne
xchg
cmpsl
mov
xor
adc
shlb
ds
mov
ret
adc
pop
movsb
rolb
test
xor
cli
fwait
adc
rol
mov
dec
mov
mov
xchg
adc
push
sub
aam
xlat
lea
mov
cmp
xchg
adc
add
rorl
not
sub
movsl
lds
cmp
out
and
lods
cwtl
sti
test
jge
or
jg
xchg
mov
sbb
dec
mov
int3
adc
lret
inc
adc
xorb
sbb
ja
mov
sbb
pop
mov
sub
inc
xchg
cmpsb
and
xchg
out
inc
inc
addr16
add
push
pop
iret
cs
jl
jmp
ds
cmp
scas
xorl
jge,pt
call
or
sbb
enter
cmpsb
test
pop
int3
inc
enter
inc
pop
fstpt
repz
jecxz
in
dec
mov
aam
data16
lret
push
push
inc
ja
sbbb
mov
daa
sub
dec
bound
cmpsb
sub
add
pause
nop
mov
mov
dec
faddl
popf
out
in
adc
adc
sub
mov
or
push
xor
or
pop
add
push
push
ret
push
aam
imul
sbb
call
jnp
xchg
roll
pop
pop
push
inc
fisubrl
lock
mov
pop
xchg
push
mov
sbb
jp
mov
add
cs
or
arpl
outsl
jns
es
sub
nop
or
in
mov
xor
push
icebp
mov
cmp
movsb
mov
jbe
sbb
fidivrl
mov
xor
inc
or
iret
gs
test
dec
imul
xchg
mov
push
sbb
push
rcrl
cmpsl
cs
daa
es
or
xor
pop
loopne
add
cmp
xchg
inc
sbb
mov
jp
into
call
adc
in
mov
test
stos
pop
cwtl
cmpsl
xchg
test
sub
and
mov
xchg
push
gs
push
pop
jl
inc
cs
xchg
add
arpl
and
xor
inc
adc
mov
into
add
sarb
mov
push
sbb
les
inc
insl
mov
dec
adc
cld
mov
and
and
push
mov
dec
jle
pop
mov
pop
ret
pusha
popa
loope
xorb
sbb
mov
imul
pop
push
outsl
cmp
movsb
pushf
insb
or
pop
cmp
inc
inc
mov
popf
and
xorb
lahf
inc
insb
sbb
js
xor
into
adc
and
ljmp
xchg
repnz
add
dec
mov
ret
cli
add
adc
sbb
shlb
xchg
es
mov
adc
dec
shlb
test
adc
xor
movsl
xchg
xchg
push
pop
sub
dec
or
pop
call
sbb
loopne
xor
test
dec
gs
lcallw
inc
leave
roll
push
or
inc
inc
jp
mov
push
cmp
sbb
popa
cmpb
jnp
test
jae
loope
sti
loopne
mov
and
movsb
dec
dec
mov
push
outsb
cmpsl
adc
xor
dec
and
fisttpl
pop
xor
and
mov
pop
inc
mov
add
inc
dec
mov
xchg
jecxz
das
inc
ret
xor
pop
bound
lcall
enter
xchg
mov
aaa
test
xlat
ds
mov
bound
aam
lods
push
inc
jae
cmp
push
nop
clc
rcrb
jmp
icebp
cmp
mov
fwait
jmp
sbb
lea
pop
push
pop
fs
fnsave
push
das
movsb
add
dec
mov
imul
jnp
xor
mov
xor
lret
cmp
cmpsl
inc
sub
in
add
push
scas
inc
lock
dec
push
outsb
mov
xor
mov
fstpl
dec
and
push
enter
add
or
test
and
jo
inc
mov
ds
add
xor
rol
cmp
jnp
cmpsb
sbb
push
lds
cmp
pmaddwd
and
fwait
popf
ja
xor
dec
sbb
xor
lret
fwait
out
sbb
push
xor
jns
push
pop
jnp
and
dec
nop
add
add
dec
adc
fildll
sbb
xlat
xchg
adc
fcomp
xchg
xchg
jnp
push
dec
iret
xorb
push
cmpsb
rcrb
hlt
xchg
dec
cmp
aam
lock
iret
int
imul
lods
adc
call
mov
pop
cmp
hlt
add
ds
icebp
insl
sbb
fisubrl
icebp
nop
inc
out
cwtl
pushf
xchg
and
data16
mov
cltd
rclb
pop
mov
cld
mov
jo
or
and
insb
inc
iret
cs
mov
xor
pop
clc
sub
lock
popa
lock
push
aas
gs
add
repz
neg
sbb
out
ljmp
mov
iret
cmp
pop
imul
cwtl
inc
mov
icebp
hlt
adc
dec
cwtl
loope
inc
mov
movsl
mov
xor
mov
pop
div
dec
mov
lea
dec
aas
add
stos
cmp
dec
fsubrs
push
fdivp
mov
test
mov
les
pop
aaa
mov
out
faddl
insb
jle
lds
sub
cltd
sub
lods
push
dec
rorl
pop
jmp
stos
mov
add
adc
mov
cmp
std
push
popf
mov
add
icebp
cwtl
mov
xor
daa
lock
out
js
or
scas
or
shll
test
repz
std
mov
icebp
sti
add
inc
movsb
mov
ss
sbb
cmpsl
adc
testb
cmp
stos
xor
negl
popf
xor
mov
jno
inc
sbb
outsl
in
ffreep
sbb
push
pop
inc
sub
iret
aam
jl
cmp
scas
enter
or
aas
xchg
cmp
sbb
mov
xacquire
jnp
mov
push
or
in
push
sub
jns
xlat
roll
or
xchg
pop
out
cmpsl
call
xlat
imul
or
cmp
or
add
sub
jecxz
push
push
ss
rol
subl
sbb
push
mov
ss
mov
lods
fstl
imul
mov
add
pop
notl
adc
dec
pop
push
push
lcall
add
dec
mov
push
scas
sub
lahf
loopne
sti
xor
xchg
xchg
loope
lock
sbb
ret
pop
and
cmc
loopne
ds
xchg
js
pusha
sti
mov
inc
jmp
arpl
dec
xor
xlat
loope
mov
pop
lahf
sub
dec
mov
and
xor
push
andl
cs
sarb
sub
cmp
pop
add
xchg
insl
fsubs
jnp
test
mov
lea
jecxz
jle
roll
aaa
mov
pop
dec
ret
dec
sbb
orl
and
push
lods
rclb
jecxz
push
fildll
lods
cmp
cmp
mov
cli
sub
sbb
enter
fsubl
add
sbb
inc
add
js
and
subb
outsl
fwait
cmpb
cmpsb
ljmp
push
mov
sub
movsb
mov
adcl
pop
cmpsl
or
lods
cmc
or
lea
mov
leave
loopne
cmp
fnsave
mov
xor
dec
jl
pop
or
addr16
mov
mov
and
cmc
pushf
mov
dec
stos
adc
adc
add
or
add
in
fadds
cmp
in
shrb
lods
mov
inc
sbb
aad
mov
lock
xchg
mov
and
ficoml
loopne
hlt
js
dec
mov
out
les
sub
inc
add
ja
xor
xchg
sub
xor
sbb
int
jl
xorl
cwtl
xchg
add
enter
das
fnstenv
cld
cmp
cmp
nop
mov
sub
andl
imul
push
insl
or
adc
xor
xchg
or
loopne
sub
test
repnz
jne
dec
andl
out
pop
bound
inc
hlt
xchg
mov
jno
addr16
add
xor
pop
notl
or
xchg
sub
fwait
mov
sub
testb
cmpsl
in
push
popa
mov
out
push
adc
cltd
xor
fisubrl
inc
popa
insl
stos
inc
jb
inc
mov
outsl
repnz
jp
inc
or
inc
dec
aas
icebp
push
jmp
flds
pop
aas
and
std
mov
addr16
xor
mov
sbb
fdivl
push
arpl
in
lods
inc
dec
pop
dec
pop
out
unpckhps
mov
test
add
dec
xchg
mov
sbb
negl
push
jecxz
adc
or
jae
mov
mov
mov
push
add
in
push
sub
loopne
adc
rol
dec
and
cltd
cltd
xchg
mov
xor
pop
xchg
add
sbbb
repz
push
push
pusha
mov
dec
mov
mov
add
mov
rcr
pop
xor
pop
push
mov
pop
and
xchg
ss
sub
add
pop
rcrb
push
push
pop
std
test
cmpsl
test
imul
mov
adcl
xor
mov
adc
jno
fs
shrl
insl
test
sub
ja
sub
add
shrb
xor
cwtl
cmp
hlt
adc
call
add
adc
sbb
mov
nop
je,pn
lods
out
mov
loopne
mov
sub
dec
add
lods
dec
sbb
add
push
mov
loopne
div
outsb
imul
iret
pop
xchg
cs
or
nop
sub
test
cli
jne
cmp
add
and
gs
cmp
das
jg
cmc
cmc
out
xchg
and
xlat
and
bound
fnstcw
inc
fbstp
out
xchg
cwtl
icebp
ret
and
mov
mov
dec
insl
insb
pop
xchg
jne
sub
push
test
scas
mov
pop
mov
cmp
push
fnstenv
movsb
stos
std
push
mov
add
fcompl
pusha
sbb
mov
out
mov
rcrb
xchg
xor
out
mov
and
pop
xchg
and
je
stos
sbb
inc
dec
popf
sahf
add
mov
push
daa
inc
rcrb
inc
loope
mov
minps
sub
dec
sub
loope
jge
cmp
ss
inc
and
test
sbb
push
dec
imul
iret
mov
and
bound
sahf
hlt
sub
cmp
outsl
jg
pop
pop
lea
loop
inc
pop
pop
push
inc
or
and
aad
and
pop
push
mov
ret
push
add
hlt
iret
dec
test
repz
jnp
ja
mov
hlt
out
pop
repz
jae
jnp
test
sbb
xor
aaa
into
inc
mov
test
int3
cs
movsl
sbb
push
pop
cwtl
mov
pcmpeqb
pop
pop
and
lret
sub
popa
pop
test
je
movsl
add
lcall
xorb
push
and
and
lea
jae
pop
roll
lock
pusha
sub
imul
pop
fstpt
int3
fld1
mov
lret
xchg
lcall
fwait
sbb
pushf
pop
mov
push
das
in
stc
xchg
and
and
imul
add
and
pop
imul
mov
mov
rolb
sarb
lods
in
add
repnz
inc
cmpsb
add
and
cmp
or
mov
fisubrl
leave
sbb
pop
xor
mov
into
out
call
lret
add
adcb
arpl
dec
fcompp
mov
inc
bound
cmp
inc
jle
cmpl
addl
imul
outsb
popf
push
div
mov
cltd
fxch
or
out
jmp
fmuls
push
xor
dec
cmp
enter
adc
loop
or
lds
icebp
dec
add
sub
mov
lock
jle
sub
jg
xchg
fsubrp
adc
and
pop
pop
xchg
inc
mov
push
inc
and
sub
sub
xor
inc
or
ljmp
dec
ds
lods
mov
xor
mov
xor
test
jnp
cwtl
test
dec
jo
ficomps
cmp
mov
xchg
clc
sbb
movsl
dec
and
dec
push
out
fsubrp
jbe
mov
jnp
mov
or
sub
xor
loope
fmul
mov
inc
int
aam
mov
das
inc
imul
mov
div
dec
push
lahf
sub
dec
dec
add
add
add
jne
mov
int
movsb
fs
dec
lds
sbb
xchg
out
push
mov
frstor
xchg
fisttpl
mov
jmp
xchg
int3
mov
rolb
cmc
mov
aad
sbb
shl
pusha
aam
enter
mov
sub
cltd
fcoms
lcall
sbb
popf
mov
lahf
pop
add
and
cmp
in
insl
mov
inc
inc
jg
cmp
or
aad
enter
loope
aam
test
das
cli
arpl
sbb
cltd
cmpsl
mov
cli
add
jb
stos
incl
jge
adc
and
push
imul
fcmovnu
adc
leave
bound
mov
in
ret
pop
les
push
out
push
pop
sub
div
mov
out
add
fiadds
jae
mov
insl
or
jge
out
ljmp
pusha
xchg
aam
xor
mov
adc
sub
xchg
shlb
ret
pop
lahf
sub
dec
call
leave
repnz
test
rcrb
sub
test
mov
mov
mov
sarl
or
jo
mov
pop
add
xchg
sub
in
inc
add
and
into
push
imul
incb
scas
sbb
das
dec
pop
push
aad
jo
lret
leave
loope
sub
add
mov
fsubl
add
sahf
mov
rcrb
mov
sub
mov
push
stos
sbb
xor
and
add
mov
jae
xchg
movsb
sub
xor
and
test
xchg
test
pop
jo
negl
test
push
jne
std
add
pop
cld
ret
lds
jge
clc
pop
iret
loop
inc
xchg
mov
mov
xor
test
scas
pop
xorl
int3
mov
sbb
push
icebp
push
add
xchg
cmp
xchg
insl
or
mov
ss
pop
insl
sbb
loop
cmp
pop
pusha
pop
es
stos
ja
dec
test
faddl
push
lcall
das
je
dec
iret
jnp
cld
add
jbe
xchg
int3
sbb
test
mov
pop
or
imul
mov
mov
out
stc
cmp
dec
pop
shlb
movsl
cs
aaa
jbe
inc
fcoml
add
lahf
in
sub
js
mov
push
psubb
xor
lea
cmp
xor
daa
add
ja
cwtl
pusha
into
in
jmp
ret
adc
shl
ss
rcrl
cld
mov
add
pop
into
aam
add
daa
fisubs
lea
sbb
xor
add
add
out
rclb
adc
or
test
in
sti
lods
fnstenv
cwtl
xchg
cmpsb
add
sar
movsb
int
mov
rcll
sbb
sub
mov
cli
lret
insl
dec
cmp
scas
loopne
or
test
add
jp
xchg
sti
inc
add
add
popa
js
outsl
lds
in
adc
lret
pop
pop
jecxz
sti
loop
int
rcll
mov
mov
mov
ss
mov
addb
jg
mov
add
or
add
std
push
lcall
and
out
arpl
in
mov
fadds
add
cli
adc
mov
loope
push
cmp
in
rcrb
mov
inc
mov
push
cmp
fdivs
lcall
mov
inc
lods
pop
pop
push
add
stos
mov
jl
cli
push
scas
jmp
jb
fdivl
fdivl
std
mov
dec
pop
scas
add
fcompl
sbb
or
cmp
mov
shlb
mov
popf
jne
mov
test
daa
add
adc
cwtl
xchg
shrb
sbb
and
stc
insb
cmp
fldl
pop
bound
insl
sbb
push
and
jo
mov
lcall
push
and
shlb
or
dec
mov
dec
adc
cmc
enter
stc
shll
mov
inc
jae
pop
addl
inc
sti
dec
add
jno
aas
mov
outsb
push
add
out
sbb
adc
mov
and
add
xchg
aaa
inc
mov
and
in
ss
jno
out
sbb
je
clc
test
shll
inc
adc
mov
adc
push
jecxz
hlt
pop
dec
add
add
sbb
lods
or
and
add
pushf
adc
sub
movsl
cmp
cmp
popf
cmp
add
pop
mov
mov
xchg
or
cmp
pushf
popa
ret
cmp
ja
lret
and
ja
push
push
push
cmp
cs
sub
sbb
push
jo
cmp
push
xor
repz
sub
xchg
xor
orl
les
aad
sub
in
lock
cmpsl
imul
call
sub
loopne
mov
push
xchg
push
stc
cmp
sbb
push
jbe
dec
dec
lock
mov
lods
pushf
pop
mov
addl
or
jmp
imul
mov
push
fs
sbbb
cmp
sub
aaa
stc
lock
loopne
dec
mov
fistpl
aas
or
fwait
test
inc
mov
dec
das
and
xor
arpl
push
xchg
iret
add
sbbb
js
icebp
mov
shlb
flds
dec
mov
mov
dec
push
pop
pop
mov
xchg
cmp
ret
or
data16
xor
stos
addr16
in
les
fwait
out
push
dec
jecxz
dec
jp
out
cmp
bound
and
pop
fwait
xchg
pop
in
adc
sbb
ds
pop
and
icebp
hlt
fdivrs
icebp
mov
pop
pop
add
push
push
lds
adc
mov
pop
mov
ret
enter
arpl
movsl
jnp
push
jmp
test
mov
rorb
inc
push
push
rcll
movsl
mov
pop
pop
xlat
pop
jg
xor
cmpsl
mov
add
sub
push
out
andb
cmc
cmpsl
push
hlt
inc
cmp
mov
xchg
int3
iret
dec
loopne
mov
mov
add
jnp
pusha
pop
or
xor
push
jbe
mov
loopne
pusha
in
and
loopne
add
pop
push
and
movsl
sbb
mov
dec
test
xlat
sbb
push
pop
scas
sub
push
test
xchg
gs
mulps
adc
subb
leave
dec
or
out
mov
pop
xchg
mov
jp
mov
cmp
push
dec
push
ljmp
add
stos
and
cmp
andl
dec
out
cmp
std
jb
nop
jge
hlt
push
std
movsb
icebp
enter
fisttpll
lods
cmpsl
test
out
push
mov
vpunpcklbw
aad
and
mov
flds
sbb
push
cmp
mov
jp
jl
mov
cmp
repz
sub
vcvtpd2psy
ss
add
orb
hlt
hlt
out
pop
dec
mov
stc
jns
bound
jo
test
sbb
scas
imul
jnp
aaa
mov
std
mov
push
adc
mov
inc
add
add
scas
inc
mov
or
orl
sbb
pop
int3
mov
sbb
mov
xchg
xor
and
mov
popa
xchg
shlb
pushf
loope
enter
jb
dec
pop
jne
popa
mov
mov
fcomps
mov
adc
cmpb
icebp
push
mov
dec
or
mov
popf
sbb
push
std
clc
pop
dec
stos
mov
dec
sbb
or
sbb
adc
in
add
add
jge
call
xor
rolb
push
popf
cmp
mov
xchg
std
adc
mov
and
xlat
addb
mov
pop
mov
pop
fsubrl
mov
cltd
lock
mov
les
mov
mov
pop
adc
pop
ljmp
cmp
dec
xchg
or
pop
sbb
cmp
dec
daa
push
mov
aam
push
test
verw
jmp
inc
rolb
inc
xchg
mov
push
pop
lock
and
aad
dec
test
inc
sub
inc
shll
pop
jecxz
pusha
adc
and
mov
shl
sbb
sbb
adc
cmc
push
add
imul
dec
xor
clc
xchg
sbb
test
or
mov
pop
imul
sub
out
rclb
dec
jmp
add
lret
cmp
jno
out
dec
je
sbb
lock
fidivrl
subl
ds
dec
shll
std
ss
stos
mov
add
sbb
es
adc
mov
xchg
test
int
dec
add
or
inc
jo
nop
ret
push
dec
shrb
adc
xchg
test
or
pop
sub
gs
add
loope
dec
xchg
loopne
or
adc
in
loope
cmp
xor
movsl
or
mov
xchg
mov
mov
popa
mov
push
add
and
outsl
cmp
jno
adc
mov
and
lahf
mov
dec
test
pop
pop
in
and
cmp
sub
mov
cmp
pushf
fs
push
nop
hlt
adc
orl
fistl
xchg
outsl
scas
lods
fwait
mov
pop
xor
stos
cmp
int3
mov
imul
jle
sbb
adc
and
inc
or
test
ljmp
dec
sbb
cmp
js
mov
test
out
mov
repz
rcrl
mov
pop
inc
xlat
jmp
into
or
outsl
push
lahf
enter
test
ljmp
test
cltd
fadds
pop
int
xchg
std
inc
lods
dec
addb
xchg
dec
shr
sub
test
repz
mov
aaa
adc
imul
insl
insl
insl
stos
cltd
inc
lds
xchg
ficoml
in
lods
lods
insl
push
ja
sti
push
test
rorl
push
and
and
mov
mov
imul
or
push
addl
jmp
inc
lods
bound
inc
xor
fidivl
jge
stos
sub
push
shrl
mov
mov
adc
pop
mov
test
divl
mov
test
sbb
adc
inc
push
test
repz
insb
mov
fstl
xor
or
ficoml
mov
movsl
stos
cmp
insb
mov
push
and
dec
jno
cmpsb
push
sti
mov
bound
leave
stos
inc
xor
stos
add
insb
icebp
icebp
jg
adcb
jo
adc
dec
push
lods
push
orl
adc
adc
dec
sub
xchg
mov
mov
xchg
es
aaa
inc
or
mov
mov
inc
sbb
or
movsl
push
sub
pop
sbb
mov
shrl
or
popa
stos
inc
test
push
decl
mov
mov
pop
ret
or
sbb
mov
test
or
and
ja
sbb
das
loope
adc
lds
out
mov
adc
push
loope
aaa
lods
mov
leave
icebp
stos
pop
dec
mov
push
sbb
dec
das
inc
fisubrl
lods
push
mov
push
bound
or
stos
int
mov
add
pusha
adc
push
stos
loop
mov
cmp
mov
aad
xchg
mov
insl
mov
xor
orb
stos
icebp
dec
dec
inc
mov
rorl
push
push
mov
sub
dec
mov
mov
mov
shll
or
dec
lods
push
ret
ljmp
mov
cmovnp
pop
repz
mov
push
in
xchg
add
or
lea
sbbb
loope
ffreep
push
xor
mov
lods
stos
add
adc
adc
imul
mov
in
popa
adc
pop
push
dec
xor
movsb
add
sarl
lds
negl
add
loopne
add
jmp
mov
inc
push
and
mov
inc
dec
sbb
xchg
push
ja
data16
bnd
xor
sbb
or
adc
aas
jle
mov
xor
or
sub
sbb
xchg
outsb
ja
cmp
xchg
pushf
add
mov
mov
movsb
jns
adc
fcomip
stos
in
jbe
ja
or
inc
inc
cmpb
push
in
not
jle
or
jne
mov
jne
scas
dec
js
add
or
je
pop
cmp
lahf
xor
ds
or
jbe
sub
jae
cwtl
jae
inc
or
push
cmp
mov
jbe
inc
push
xor
outsb
ja
scas
imul
or
jb
insb
mov
push
add
sbb
mov
jno
dec
or
int3
data16
ljmp
sbb
std
sbb
jg
push
or
mov
testl
jns
mov
mov
and
jp
xchg
jp
push
and
sarb
jnp
jnp
jl
ss
in
mov
fdivl
pop
jge
jge
frstor
mov
adc
lods
pop
jle
inc
je
ficoml
xchg
pop
out
mov
ja
bound
jno,pn
into
mov
push
imul
shlb
push
or
fiadds
xlat
fnsave
movsb
or
lods
push
mov
xchg
cmp
sub
jns
ja
and
inc
xor
add
mov
pop
or
add
or
ja
ljmp
lock
clc
ja
imul
mov
add
sbb
ror
movl
and
out
pop
cmp
inc
jb
stos
cld
push
fldl
mov
cwtl
rclb
cwtl
sbb
push
pop
mov
sbb
imul
inc
xchg
jle
int3
out
jnp
inc
and
jnp
fcompl
or
or
dec
in
inc
les
shlb
jg
push
jge
xchg
fidivs
leave
sub
or
and
adc
pop
aas
sub
fldcw
dec
sub
imul
sbb
dec
bnd
mov
jecxz
pushf
inc
xlat
xlat
lods
shlb
add
ds
ja
lcall
add
push
or
in
incb
and
sbb
push
xchg
lahf
push
push
fldl
jle
xchg
mov
jne
iret
cmp
add
jp
lock
std
jle
add
xor
nop
scas
stc
or
cmpsb
or
inc
scas
aaa
filds
sbb
sub
into
popa
sbb
xchg
scas
mov
stos
push
mov
add
orb
clc
mov
push
std
loop
push
mov
enter
fdivr
mov
lcall
pop
sti
add
cmp
push
add
icebp
pop
adc
jp
jae
xor
xchg
add
adc
xorl
mov
pop
cmc
out
xor
dec
push
pop
loopne
lcall
ret
cmp
jbe
xor
je
loopne
sub
mov
xchg
mov
data16
shr
xchg
shrl
mov
sbb
gs
dec
cmpsb
shll
fiadds
hlt
nop
rcrl
mov
add
scas
add
mov
and
mov
mov
sti
out
loopne
mov
ds
mov
add
add
notl
inc
cmp
addr16
fldl
sbb
pop
mov
cmp
or
notl
mov
fiaddl
push
mov
addl
or
test
out
popf
fisttpll
add
ret
xchg
sub
add
into
inc
insb
mov
pusha
popa
jnp
fildl
mov
movsb
fstpt
cmpsl
aaa
xchg
jo
lock
movb
aaa
mov
cmp
movb
test
fmuls
add
cwtl
push
adc
outsb
pushl
leave
int3
shlb
sbb
xor
pusha
mov
xchg
movb
cmp
insb
cs
push
cmc
ficoml
lods
sbb
out
jp
xor
jbe
sbb
scas
insb
addb
movsb
repnz
jle
stos
stos
insl
stos
jl
adc
outsb
sbb
add
shrd
cltd
shlb
xchg
mov
dec
mov
mov
sub
or
dec
xor
idivl
and
lahf
jp
mov
adc
mov
fcompl
mov
mov
cmp
jecxz
mov
mov
rcrl
divl
mov
mov
mov
push
rol
add
or
ds
mov
pop
mov
or
xchg
mov
subb
push
mov
xorb
pop
cmp
mov
rcl
int3
cmpsl
or
scas
lds
out
or
lcall
ss
jae
pop
inc
fisttpl
dec
sbb
sub
xchg
pop
stos
rclb
dec
mov
mov
push
adc
jl
dec
jne
vmaskmovdqu
leave
testl
in
add
in
sbb
push
inc
sti
ljmp
mov
add
xchg
jbe
ss
dec
int
fistl
cld
or
fcoms
dec
mov
andl
xchg
in
xchg
mov
push
xor
sbb
mov
lret
movb
xor
cli
jb
ljmp
inc
lcall
pop
and
sbb
int
inc
mov
mov
pop
in
push
pop
inc
jmp
insb
adc
lock
and
decl
mov
insl
cli
inc
jmp
mov
mov
cld
je
cs
clc
xor
jmp
mov
outsl
pop
popf
fistpll
jl
push
add
hlt
mov
dec
scas
stc
ja
ret
sbb
in
dec
clc
test
mov
aad
daa
mov
rolb
sahf
push
xor
mov
pop
bndstx
in
pop
or
clc
or
fsubp
sbb
mov
jno
push
lds
aas
adc
das
pop
mov
or
insl
repz
jg
bswap
test
and
mov
pop
dec
pop
mov
mov
movsb
out
sbbb
add
inc
xchg
cmp
mov
inc
xor
cs
mov
lock
std
flds
scas
fiadds
dec
xor
inc
push
jnp
dec
mov
jnp
fwait
sahf
fcoms
cli
fwait
jp
bound
fs
jae
add
in
popa
icebp
add
lock
add
fists
scas
push
stos
loopne
push
sahf
jmp
mov
adc
xchg
addl
xchg
mov
cmp
imul
fldt
call
es
test
mov
pusha
adcl
jp
mov
fcmovne
cli
ret
pop
push
ss
pop
sub
insb
loopne
cmp
add
popa
add
hlt
sub
mov
cmp
mov
gs
test
pop
pop
dec
je
mov
and
fbstp
lret
jl
loopne
pop
xchg
xchg
in
and
dec
rol
data16
inc
mov
jno
into
xor
test
jecxz
fimull
ficoml
das
mov
sub
xlat
std
clc
xor
ret
or
mov
ret
dec
add
xchg
mov
rorb
enter
lahf
pop
sti
mov
dec
rclb
jbe
ret
in
sbb
loopne
cmp
xchg
push
xchg
pusha
in
ffreep
stos
push
repz
xchg
cmpb
mov
les
ljmp
xchg
jmp
mov
mov
icebp
roll
ret
fsubs
test
mov
insl
lods
pop
nop
out
ds
in
pop
dec
inc
add
cmp
push
mov
enter
orw
add
js
mov
mov
pop
call
pop
jg
call
sbbl
gs
aam
rcrb
push
lds
js
push
and
add
mov
sbb
dec
hlt
push
ret
adc
sub
mov
pop
scas
xchg
jl
pop
mov
popa
pop
add
cmpb
sub
icebp
mov
lret
fisubs
in
xchg
movsb
lahf
xor
subl
jno
xchg
or
mov
push
cmp
hlt
ret
push
jmp
repnz
fisttpl
enter
push
insb
jg
imul
mov
in
icebp
sbb
push
aad
jne
mov
fistpll
rolb
test
add
ret
mov
xchg
stos
mov
push
jne
xchg
inc
sub
sbb
adcb
pop
pop
jl
es
test
jecxz
push
jo
inc
inc
add
call
imul
popf
dec
in
ret
push
mov
push
call
jg
push
clc
stos
sahf
add
cmp
into
pusha
mov
sub
pop
push
hlt
lds
pop
icebp
mov
outsb
and
sti
cli
test
pop
cwtl
ret
insb
jle
ret
loop
dec
sbb
xorl
imulb
mov
pop
push
pop
mov
jl
lds
xor
roll
lds
mov
xor
rcl
mov
sbb
dec
jb
sbb
push
pop
fmul
cwtl
pop
cli
adc
sbb
push
fs
rcr
int3
jecxz
pushl
out
sub
js
in
add
stos
xorb
cmc
mov
stos
jne
xchg
inc
mov
pop
sbb
mov
mov
test
enter
mov
xchg
jge
sbb
ljmp
inc
sub
fdivl
sub
inc
push
and
pop
xchg
fisttps
adc
push
mov
mov
mov
fdivs
scas
xchg
cs
imul
cmp
xor
adc
js
cmpsb
call
loopne
or
push
addl
adc
adc
icebp
adc
lahf
lods
jno
jbe
loope
cltd
push
and
xchg
movsl
jo
popf
fwait
jo
stos
repnz
add
rcrb
cmc
icebp
rorl
mov
test
sbb
mov
push
or
sbbb
jecxz
pusha
inc
xlat
lods
sbb
pop
fwait
or
orb
fisubrs
pop
les
add
xchg
int
ljmp
test
adc
adc
mov
rolb
in
mov
push
mov
or
shl
mov
cmp
add
lods
xchg
test
or
jle
mov
mov
mov
movsb
sub
mov
stos
test
jo
loop
test
in
ss
push
inc
pop
add
scas
outsl
sbb
cmp
adc
add
cmpsb
mov
lahf
add
add
adcb
mov
mov
call
imul
out
mov
mov
add
inc
push
fildll
push
in
cmpsb
leave
push
push
push
fbstp
cmp
mov
decb
lds
push
push
lock
cmp
pop
dec
add
fs
and
pop
rcl
mov
xor
push
insb
jne
adc
mov
mov
aaa
lahf
data16
js
sbb
stos
fs
test
pop
sbb
cmp
ja
jp
sub
fistl
test
cmp
push
sub
mov
cmp
mov
mov
add
into
je
cltd
add
sarb
out
jae
imul
lock
sbb
jns
test
fwait
int3
sub
and
cli
sahf
xchg
mov
add
and
shrb
leave
fsubs
dec
push
lahf
mov
mov
cld
movsl
pop
sbb
mov
pop
pop
nopl
fcoml
mov
nop
mov
pop
push
enter
inc
fildll
xchg
lret
cmp
mov
test
xchg
shl
mov
or
testl
or
add
adc
xorl
sbbl
or
xor
loope
rorl
repz
test
inc
sahf
adc
bound
insb
fnstcw
mov
inc
cs
js
in
mov
mov
sti
push
movsl
push
inc
push
cmp
cmp
arpl
jp
fistl
xor
sarl
and
in
stos
mov
scas
std
dec
push
and
sbbl
frstor
idiv
mov
dec
jp
xor
hlt
aam
leave
stos
jo
push
jbe
gs
scas
cs
mov
add
repnz
sbb
mov
and
aam
orb
test
clc
repnz
sbb
testl
jp
scas
mov
ficoml
data16
push
loop
das
lcall
add
gs
mov
hlt
mov
std
imul
adc
mov
mov
movsb
xchg
loop
add
std
les
nop
lods
sub
inc
loopne
mov
ds
cmp
cmp
sahf
pop
stc
fmull
mov
inc
fnstsw
lret
mov
fiaddl
fcomp
or
shrl
add
inc
inc
sbbb
inc
jp
popa
out
cmc
jecxz
xor
in
add
adc
sti
inc
ror
sbb
push
loop
repz
add
add
sub
shrl
cmp
in
xor
inc
insb
insl
nop
xchg
push
test
and
sub
loopne
add
mov
or
inc
rcrb
sub
shl
in
mov
dec
xchg
cmp
pusha
add
leave
jp
add
xorb
cmpl
lret
jmp
xchg
dec
lock
sarl
mov
push
jecxz
outsb
mov
ret
add
mov
mov
test
cmpsb
aas
daa
mov
nop
xchg
nop
fs
mov
mov
dec
loopne
jl
mov
js
mov
pop
fdivl
fsts
sbb
sub
pop
mov
and
inc
mov
xor
addr16
push
sti
add
xchg
ror
cmp
mov
in
sbb
popf
push
test
ret
jne
and
xlat
loop
pop
cmp
mov
fldenv
lcall
pop
or
mov
sub
cwtl
cmp
data16
ficompl
jb
sub
fisttpl
scas
test
into
push
xchg
andb
mov
scas
add
inc
push
xchg
call
add
push
push
js
movsb
push
dec
jecxz
or
fcomp
push
adc
jbe
ljmp
je
test
xchg
cmp
inc
push
pop
into
or
js
mov
movsl
xchg
xchg
mov
popa
lods
push
pop
je
mov
push
scas
icebp
adc
pushf
sti
dec
cmp
pop
pop
push
or
pushf
jl
addr16
or
aad
jo
das
movl
sbbl
pushf
icebp
hlt
sub
push
pop
add
movsb
cmc
inc
cld
adcb
mov
movsb
dec
mov
inc
cmp
cli
mov
repz
mov
in
clc
sub
push
loop
jo
cmpsl
mov
mov
or
xor
or
lock
cmpsb
inc
adc
mov
in
fadds
dec
add
movsb
es
lock
jns
out
jae
jp
pop
mov
movsl
shl
cmpsb
and
adc
pop
xchg
and
fldenv
sahf
insb
or
xor
xorl
pop
push
jbe
jo
test
lret
xchg
mov
and
or
push
add
std
mov
inc
lock
and
js
push
xchg
cli
ja
xchg
mov
jne
lcall
fdivs
cmp
rol
pusha
aas
cmpsb
mov
add
or
inc
jo
sbb
ficompl
stos
push
js
push
shl
shrl
cmc
nop
je
out
test
mov
test
mov
add
add
pop
fwait
push
in
loopne
adc
push
mov
mov
inc
dec
outsl
xor
sub
push
rcr
lcall
dec
aas
jbe
int
push
mov
jle
push
std
push
add
mov
loopne
pop
sbb
push
incb
lcall
xlat
push
call
push
outsl
nop
mov
out
test
cld
inc
inc
sub
rcl
in
loope
in
loopne
and
mov
mov
pushl
call
cmpsl
movsl
mov
xor
fidivrl
ret
fiaddl
lret
adc
mov
rclb
jo
sbb
mov
pop
sahf
push
int
push
pop
jno
rcrl
cmp
xor
dec
pop
stos
mov
xchg
icebp
pop
mov
cmc
pushf
dec
push
insl
push
idivl
aad
lock
pop
loope
hlt
mov
mov
adc
fildl
dec
shll
mov
sbb
enter
sub
insl
pusha
xrelease
gs
cmp
pop
movl
push
mov
bound
xchg
cld
adc
xchg
push
stos
mov
and
mov
rorl
jne
rorl
fwait
into
cmc
scas
cmp
mov
mov
inc
loopne
ja
in
fists
test
mov
inc
mov
mov
jmp
movb
or
pop
push
ja
std
xor
xor
shll
pop
call
xchg
aas
jl
xchg
lcall
add
mov
cmp
sub
clc
or
sbb
dec
in
in
mov
add
dec
pop
add
mov
cmp
stos
inc
add
dec
pop
mov
shll
cmp
pop
jg
or
stos
jmp
clc
aam
push
push
mov
test
orl
sbb
push
mov
fisubrl
ja
push
and
movsb
push
jecxz
jge
push
mov
push
jb
sub
push
xor
je
loope
and
push
in
push
icebp
mov
lret
cwtl
and
push
hlt
dec
push
out
std
rolb
inc
inc
jne
inc
inc
subb
xchg
push
dec
pop
xorl
dec
es
mov
sub
fsubl
orl
cs
mov
mov
lcall
dec
loop
or
adc
insb
mov
popa
xchg
cmpsl
outsb
mov
cli
cli
and
inc
adc
in
add
jle
push
shrl
ss
addr16
repnz
cs
inc
pop
gs
ss
clc
add
add
inc
cmp
push
and
ret
push
stos
stos
es
shll
xchg
inc
dec
call
lcall
or
pop
popa
pop
scas
push
xor
pop
xor
adc
into
call
mov
and
outsl
std
frstor
mov
jbe
ret
lds
cmp
adc
lret
push
or
mov
mov
mov
std
sahf
inc
rol
cld
mov
in
add
sub
push
ljmp
shl
ret
jno
fs
shl
out
adc
dec
test
xchg
push
scas
outsb
cmp
dec
inc
cld
loop
cmp
adc
push
jnp
cmpsl
xor
ljmp
xor
sub
gs
sbb
nop
jb
out
cli
xchg
dec
ss
mov
pop
jp
mov
andb
adc
push
mov
in
inc
int
in
sbb
jl
lcall
pop
fsub
cmp
push
xor
hlt
pop
mov
add
push
pop
mov
scas
das
mov
sbb
sahf
pop
pop
xchg
and
scas
ds
cli
add
clc
sarl
push
add
ja
mov
ss
lock
stos
test
pop
pop
stos
loopne
mov
roll
mov
push
jo
xchg
cmp
bound
cs
jp
dec
cli
pusha
mov
nop
mov
pop
mov
jno
ficoms
mov
shlb
iret
adc
pusha
gs
mov
daa
call
insb
iret
rclb
hlt
js
cmpl
push
jge
mov
cmc
je
data16
data16
pop
push
add
aam
je
cmp
rol
sbb
inc
pop
add
enter
mov
add
lcall
out
mov
lahf
lods
imul
or
cmc
pop
clc
arpl
push
insl
or
mov
call
mov
std
push
lds
cli
push
les
fstpt
incl
jne
dec
into
xlat
ret
inc
lcall
pop
pop
movb
sbb
push
notl
mov
wrmsr
adc
xchg
ret
insb
mov
xor
mov
add
shll
outsb
cli
ljmp
ret
leave
pushw
cli
jle
lods
jb
out
jmp
loopne
mov
rolb
in
lods
dec
je
aad
mov
pushf
mov
into
imul
inc
jl
xor
and
sbb
or
pushf
inc
lock
xor
pop
fnsave
std
rcl
fbstp
jle
dec
mov
fdivrs
into
adc
mov
inc
rclb
xchg
iret
mov
mov
xchg
popa
addr16
stos
fcoms
aad
cs
int
addl
mov
inc
xchg
out
inc
add
lods
cmp
aas
pop
pop
pop
movsl
jae
fsubrl
dec
cli
push
cmp
arpl
jl
imull
pop
sysenter
ljmp
fcomps
cmp
ljmp
addl
das
push
gs
push
lret
sarb
add
jl
sub
cmp
lea
add
icebp
adc
loopne
and
sbb
imulb
xchg
sub
inc
push
andl
sub
clc
loop
jne
or
jo
sbb
pop
ds
int
mov
inc
add
xor
jmp
bound
lds
inc
faddp
cmp
jp
adc
mov
jl
in
push
inc
aam
dec
mov
shl
enter
jnp
push
and
pop
je
dec
push
outsl
mov
adc
stc
aam
clc
dec
add
xor
stos
mov
cmp
sub
cmp
sub
mov
cwtl
mov
jb
sub
aad
jg
pop
outsb
in
loope
into
push
arpl
jmp
cmc
cmp
sub
cmpl
lret
inc
push
adc
push
mov
aam
and
lods
inc
lahf
add
and
ja
mov
cld
jb
push
and
imul
add
sbb
and
jg
jle
xor
adc
add
outsl
loop
pushf
mov
popf
xorb
scas
sbb
push
jae
mov
insl
xor
rclb
or
xor
lret
rcrb
ljmp
push
mov
add
std
adc
lock
mov
out
mov
add
das
dec
jge
inc
shr
dec
jns
hlt
mov
and
lock
aad
aam
jnp
and
lret
adc
and
decl
adc
sub
push
xor
stos
call
roll
sub
ja
test
add
aad
addr16
and
cmp
cmp
clc
clc
jle
cmp
lods
or
push
inc
loopne
outsl
add
inc
neg
inc
test
dec
push
cs
jl
into
mov
ret
outsb
jle
cmpsb
mov
xor
adc
sub
xchg
cmp
mov
push
loopne
mov
loopne
idivl
shrb
sbb
sbb
fisubs
std
shll
or
sub
xlat
test
xchg
pop
sub
xor
inc
inc
jge
hlt
pop
cli
add
ds
push
cmp
cli
add
add
std
dec
cmpsb
rclb
hlt
mov
add
xlat
popf
adc
inc
and
dec
clc
jecxz
pop
add
aam
sbb
add
in
popa
push
and
mov
mov
jl
ss
int
aam
push
call
je
jbe
pusha
cmp
push
or
fdivs
arpl
mov
rorb
je
scas
push
inc
rorl
xchg
push
pop
pop
xlat
or
cmc
sti
xchg
rep
mov
ret
push
push
cmp
in
or
inc
mov
pop
cld
mov
outsb
test
out
fisubl
xor
cli
aad
popa
movl
test
mov
repz
add
inc
in
inc
cmp
cs
xchg
or
scas
adc
fsubl
xchg
jmp
mov
outsb
dec
lds
sub
add
jae
sbb
popa
cmp
loopne
clc
fcoml
sub
pop
adc
sbb
cmpsb
fs
sbb
dec
dec
dec
inc
sub
ret
or
out
loop
gs
insb
ds
xchg
add
roll
cli
add
andl
cmpsb
cmp
xchg
iret
dec
cmp
cli
cmp
push
fidivl
cmp
incb
xchg
xchg
cwtl
addb
push
std
lock
push
dec
in
fistl
dec
xchg
lret
cmp
inc
fdivrs
adc
outsb
rol
test
push
mov
sbb
ja
mov
mov
dec
cmp
dec
ljmp
fisubrl
outsl
scas
iret
mov
scas
adc
insb
xchg
fisubs
movsl
sub
adc
xchg
lock
xor
cmp
inc
pop
xlat
es
push
sbb
dec
lahf
mov
cmp
cs
push
dec
loope
fmuls
cmp
mov
les
xchg
out
push
movsw
mov
xor
icebp
xchg
xchg
das
add
fs
shll
xor
loop
ret
lea
stos
sbb
sti
jmp
cltd
xchg
mov
fdivs
in
hlt
imul
sbb
add
add
inc
xchg
push
mov
lock
sbb
pop
mov
fcompl
lea
out
xor
xchg
sbb
cmp
and
clc
andb
jmp
xchg
orb
mov
fldl
add
push
loope
xor
addr16
cmp
jne
sbb
push
xor
mov
inc
testb
cmp
lds
add
inc
aas
test
shrl
sbb
pop
and
sub
lahf
jge
jmp
fwait
mov
nop
in
lock
add
add
popf
mov
dec
popa
outsl
in
ds
insb
push
or
sbb
add
setbe
mov
sub
cwtl
add
jns
mov
ret
mov
dec
fisubs
push
orl
aaa
lock
pmaddwd
and
mov
sti
add
pop
adc
rolb
lret
add
aaa
xor
rorl
ja
push
pushf
mov
push
rcrb
mov
int
adc
fstpl
iret
pop
shl
dec
and
inc
jge
inc
sbb
test
scas
jae
loopne
mov
adc
data16
push
inc
xor
repnz
fnstcw
xor
xor
imul
adc
repnz
into
push
stos
and
jno
sub
mov
fmul
and
lret
inc
out
jmp
imulb
lods
sahf
cmp
fbstp
js
jp
out
jne
stos
cld
movsl
mov
call
popf
dec
inc
cmc
mov
sarb
jl
adc
bound
lahf
outsl
stos
lcall
add
and
mov
scas
jbe
inc
xor
les
mov
pop
fs
andl
and
cmp
popa
adcb
stos
scas
movsl
loopne
fadds
andb
mov
add
loope
add
push
ret
lods
in
adc
or
adc
cmpsl
sbb
call
test
rcrl
fimuls
push
inc
dec
sub
pop
inc
mov
add
push
mul
cmc
push
xchg
push
cmp
rclb
lods
mov
sub
or
fisttpl
or
addb
scas
xchg
call
mov
add
imul
push
inc
shrl
out
push
sbb
xor
mov
sbb
loop
mov
stc
ja
sbb
outsl
scas
or
dec
pop
arpl
dec
int
call
cmp
pop
out
fistpl
ret
repnz
xor
lods
clc
scas
ljmp
jns
add
mov
nop
popa
jge
jg
jl
add
fcoml
test
stc
push
test
outsb
pop
cmp
xor
fdivl
mov
inc
jle
or
bound
dec
pop
rcrl
mov
mov
pop
mov
cmp
test
dec
call
add
mov
sbb
add
pop
test
mov
sub
lahf
push
sub
call
xchg
iret
test
xchg
inc
iret
mov
pop
insl
or
push
adc
mov
mov
into
mov
push
stos
push
cmp
sbb
pop
movsb
xor
push
sarl
inc
arpl
in
daa
cmpsl
popf
and
xchg
je
adc
loop
dec
insl
push
inc
adc
adc
cmpsl
mov
js
fidivl
lods
adc
lock
mov
mov
fdivrl
test
outsl
mov
xchg
jmp
push
out
orb
js
sbbl
xchg
dec
jbe
pop
roll
or
sub
mov
mov
push
add
jns
mov
cmpb
test
clc
mov
mov
sub
xor
add
cmp
flds
negb
push
xchg
adc
jge
pop
in
add
xchg
dec
in
icebp
xchg
jp
pusha
pushf
push
mov
ja
dec
mov
loopne
arpl
stos
inc
imul
sub
xorb
or
or
hlt
push
xchg
sahf
push
push
or
add
push
sbb
fcomip
adc
cld
or
push
popa
ljmp
sbb
pop
sbb
repnz
scas
lret
add
inc
loop
dec
js
loopne
das
xor
xor
lret
jge
sarb
bound
shlb
inc
insl
fwait
shrl
cmpsl
aam
inc
ljmp
into
js
add
cmpsl
push
fcomi
rorb
adc
jnp
mov
sub
pop
jb,pn
xor
nop
push
mov
sub
imul
loop
adc
cwtl
jbe
pop
lock
or
xchg
hlt
mov
lcall
mov
ret
in
cwtl
stos
push
dec
sub
ja
cld
scas
fiadds
mov
xor
add
jne
repnz
inc
in
shlb
push
xchg
lret
mov
sbbb
ss
shl
mov
cmpsl
cld
sbb
stos
or
add
and
xchg
je
mov
cmpsb
imul
and
pushf
movsl
jbe
aam
or
ret
mov
sbb
or
jl
push
mov
inc
sbb
mov
cmp
cmp
or
push
addb
inc
clc
inc
inc
ds
loopne
add
inc
mov
insl
mov
fcoml
shlb
jg
push
js
and
fstpt
jge
gs
nop
fnsave
mov
test
into
shr
and
mov
jge
push
outsl
sbb
adc
xor
sub
and
push
mov
push
bound
adc
sub
add
or
les
repnz
and
or
mov
cld
aam
scas
sti
or
sbb
adc
push
sbb
dec
sbb
mov
mov
or
pop
mov
or
sbb
cmp
or
cmp
jg
push
push
rorb
jo
je
sub
sbb
je
int3
cld
push
pop
jnp
xlat
sub
sub
or
jae
adc
inc
stos
sbb
inc
and
insb
loop
fbld
dec
cmpb
adc
les
bound
pop
loopne
adc
pop
pop
divl
and
movsl
and
sbb
push
fstps
xor
arpl
cmc
fsubrp
js
jo
insb
dec
es
out
sti
data16
dec
xchg
jae
sub
outsl
idivb
lods
or
int
fucomip
sbb
test
mov
adc
adc
adc
mov
adc
pop
or
push
jge
xlat
jne
dec
and
inc
fs
pushf
lea
push
mov
hlt
fwait
mov
or
adc
adc
pop
std
fcompl
and
mov
movsl
sbb
sub
test
jo
fadd
xor
adc
adc
inc
mov
xor
xchg
adc
popf
adc
addb
sbb
jnp
neg
adc
or
push
xor
lahf
mov
or
jnp
leave
pop
or
insb
inc
nop
push
sub
in
fwait
jge
mov
movsb
or
ja
xchg
mov
pop
cmp
call
push
or
inc
or
pushf
xchg
jge
pop
filds
or
ret
jmp
outsl
xchg
in
arpl
or
or
or
and
xor
or
push
mov
or
cs
jno
mov
pop
mov
mov
loope
outsl
or
inc
push
outsl
out
mov
pop
ds
sti
sahf
mov
jo
jnp
or
fdivl
sbb
das
or
or
push
or
or
fs
dec
scas
push
sbb
test
or
rclb
mov
inc
lock
dec
or
or
push
or
or
daa
pusha
or
mov
mov
loopne
pop
mov
jmp
mov
push
hlt
adc
jl
testl
shlb
sbb
rcr
and
and
adc
sub
sub
pop
or
cmp
js
and
or
movsb
outsb
dec
clc
in
xlat
cmc
cli
fiadds
mov
out
jne
addr16
sub
insb
adc
ja
mov
push
mov
sub
or
int3
inc
pusha
xor
and
fstps
or
jo
xchg
sarl
sbb
jmp
or
nop
push
mov
inc
sbb
jne
stc
sahf
add
jl
adc
aas
mov
ret
lret
addr16
sub
add
dec
ja
jne
inc
add
jo
or
push
sti
mov
test
add
or
inc
cmp
add
jnp
inc
adc
xor
adc
dec
add
cltd
mov
lar
pop
jge
jnp
and
aam
scas
das
lock
loopnew
adc
pop
fiaddl
xor
or
sub
add
add
add
mov
insb
jns
aas
nop
out
data16
or
and
fdiv
lea
xor
xor
rolb
cmpsl
or
add
or
jno
loope
add
in
pop
or
cmp
mov
scas
sti
sahf
adc
xor
pop
lock
popf
pop
dec
fwait
scas
add
sub
cs
mov
inc
adc
xor
or
cli
je
sti
inc
cld
gs
or
lds
jmp
pushf
cmp
pop
push
jns
ret
or
or
mov
mov
inc
addb
inc
scas
push
jne
scas
push
or
movsl
enter
lock
jle
in
jne
pop
xchg
mov
in
or
or
add
pop
jecxz
mov
and
testb
cmc
int
xchg
or
mov
and
push
nop
mov
scas
xor
or
cld
iret
dec
xor
pop
mov
dec
sbb
add
repnz
mov
cmp
xor
mov
faddl
jns
sysenter
in
mov
sbb
cwtl
dec
mov
imul
shl
outsb
int
mov
jb
add
dec
sbb
inc
out
add
cmpxchg
sbb
xchg
int
jbe
or
push
mov
push
inc
sbb
add
idivl
or
sbb
std
mov
mov
outsb
mov
sbb
mov
add
rcl
repz
and
jno
dec
scas
sbbl
push
sub
jnp
push
sub
adc
lret
or
dec
pop
or
push
inc
mov
or
pushf
pop
in
jle
cmp
jb
mov
mov
mov
sub
imul
sbb
or
rorl
mov
or
fdivrs
or
dec
jno
mov
cmp
or
movsl
cmp
cld
or
arpl
or
sbb
mov
jbe
push
xchg
mov
pop
xor
cli
mov
adc
fwait
mov
add
sbb
loop
mov
mov
pop
adc
mov
nop
adc
mov
xor
mov
or
fmull
mov
push
sbb
sbb
push
mov
pop
mov
fs
sbb
enter
mov
fisubl
jbe
stos
mov
filds
inc
fnstsw
popa
inc
add
sub
fadd
inc
aas
or
cltd
push
repnz
daa
mov
add
xor
ss
adc
xchg
inc
add
dec
sbb
cs
fstps
loop
sbb
fimull
mov
pusha
lods
int3
or
out
sub
cmp
mov
das
and
loopne
loope
mov
sahf
jno
test
mov
enter
scas
fwait
mov
test
cmp
push
cwtl
sbb
pop
jno
xor
cmpsl
sub
fwait
jae
push
and
and
pop
popa
std
subl
std
mov
ret
test
ljmp
sub
ja
xchg
jmp
aam
ret
mov
jb
adc
inc
aas
mov
mov
js
imul
int
fwait
push
jmp
test
dec
pop
adc
ucomiss
xchg
xor
bound
call
and
lret
loope
lret
fs
xor
mov
ss
sbb
or
int
daa
test
push
jnp
lret
sub
xor
js
inc
xor
cmp
push
mov
adc
jne
outsl
sbb
lret
xor
pop
adc
jle
aad
add
xchg
adc
adc
dec
and
or
add
sahf
sbb
pop
pop
pop
adc
fnsave
jnp
cs
in
dec
arpl
adcb
and
adc
and
repz
fiadds
lods
arpl
loope
test
aaa
mov
inc
and
pusha
adc
loopne
dec
cmp
stos
popf
cmp
push
lahf
lds
xchg
les
lahf
dec
or
out
into
rcr
ret
aam
jg
mov
mov
add
stos
loope
int
cmpsl
clc
cld
sti
jns
cmpsb
insb
je
pop
clc
cmp
jne
and
mov
xchg
int3
and
shlb
push
mov
out
mov
mov
dec
or
pop
out
es
frstor
push
adc
jne
xor
add
cmpsb
js
xchg
cmp
pop
das
sub
push
imul
adc
call
jns
stos
add
mul
pop
or
ret
roll
cmp
sbb
stos
inc
jno
outsb
fistl
jg
inc
pop
out
push
sub
pop
add
int
jae
popf
mull
mov
int
js
sub
pop
ret
clc
pop
sbb
fdivs
lock
jbe
loopnew
pop
fxch
mov
outsb
adc
adc
inc
sahf
shlb
sub
adc
icebp
scas
jb
mov
inc
xor
cmp
or
rcrl
xor
adc
test
adc
in
scas
aaa
add
pushf
xor
adc
nopl
ja
test
adc
mov
add
or
repz
sub
ds
loopne
push
xor
push
sub
and
hlt
popl
lds
rcl
hlt
dec
scas
in
das
shrb
sbb
in
das
sbb
dec
pop
mov
jge
sbb
aaa
sarb
or
adc
add
jne
mov
sub
divl
pop
adc
aaa
mov
subb
pop
cmp
dec
out
or
dec
add
mov
js
dec
inc
fadds
cwtl
mov
xor
roll
or
add
xor
and
add
mov
daa
subb
jmp
add
jno
call
scas
ss
test
roll
xor
adc
je
stos
std
mov
movsb
jbe
cli
ss
mov
rorb
add
or
push
add
pop
popa
lds
xchg
test
ret
movsb
aas
jp
pop
lods
sbb
cmp
pop
pusha
lcall
arpl
scas
xchg
pop
popa
lcall
cmp
shll
testl
pop
and
ss
mov
fcmovnb
dec
xor
jge
mov
stc
xor
sub
js
mov
pcmpeqb
jmp
mov
push
add
push
cmc
inc
cmp
cwtl
jp
add
jo
dec
mov
sub
addr16
add
cwtl
cmp
adc
rcll
push
mov
gs
imul
fdivrl
stos
icebp
or
sub
imul
outsb
fisttpl
test
and
xchg
hlt
ret
imul
js
mov
mov
jge
xor
sub
sbb
mov
xchg
loop
sbb
cmp
ud2
clc
sub
test
loopne
push
add
jns
sub
insb
or
cmc
xchg
sbb
or
loope
sbbb
ds
mov
jecxz
enter
inc
xchg
lahf
scas
sbb
call
mov
jb
mov
mov
xor
pop
mov
mov
gs
cwtl
adc
pop
xor
jno
test
out
rol
int3
sbb
mov
rolb
inc
mov
inc
sub
pop
inc
mov
add
add
test
test
sub
jge
pop
roll
dec
push
fstpt
icebp
mov
packssdw
shr
xlat
jne
push
insb
push
pop
mov
sti
test
pusha
pop
adc
push
or
sub
jnp
sub
ret
rcr
insl
sbb
push
push
loopne
mov
pop
sbb
sub
pop
nop
mov
lds
in
sarl
pop
xchg
das
cmpsl
dec
pop
mov
adc
xchg
ja
mov
push
xor
pop
dec
sbb
dec
pop
pop
sub
fisubrs
inc
mov
jge
add
incb
fstp
sub
adc
mov
sbbb
lods
sbb
mov
mov
sbb
jnp
pop
mull
add
inc
push
mov
pop
mov
dec
xor
sub
cmp
adc
xor
rclb
adc
xor
call
in
loopne
lcall
and
ret
inc
push
mov
adc
sub
adc
ret
cltd
sbb
add
inc
out
scas
cmp
pop
mov
cmp
cmpsb
mov
sbb
insl
fcomip
push
push
add
push
stos
xchg
xlat
gs
xor
sbb
jnp
or
scas
jge
or
xor
cmp
inc
popf
mov
fmul
inc
aas
popf
pop
xchg
in
fwait
lret
aad
loope
xchg
fnstenv
repz
push
push
dec
sbb
arpl
daa
dec
sbb
scas
or
xchg
enter
or
and
dec
mov
clc
add
cmp
popa
mov
shl
adc
shrb
mov
sub
push
adc
aad
aad
inc
or
jge
add
xchg
adc
ret
pop
cmp
iret
xor
cli
rolb
or
sub
fcmovbe
pop
ja
push
mov
les
mov
outsl
cs
sub
dec
mov
xor
shrl
pop
xor
cli
mov
andl
adc
int
and
lret
sub
pop
add
mov
lock
or
lret
adcb
fsts
add
lds
fsubrl
inc
add
fisttpll
loop
dec
iret
sub
and
out
xchg
movsl
dec
jge
mov
mov
lock
jmp
rcrb
cmp
lea
mov
je
andl
adc
lea
add
pop
das
mull
inc
aam
jge
rclb
lods
mov
sti
insl
inc
popa
cmp
push
sub
scas
rol
scas
sbb
popa
or
xorb
add
xchg
adc
push
sbb
loope
or
or
push
cmp
add
enter
testb
jge
popf
out
rclb
push
sub
rcrb
pop
je
or
sbb
popa
test
dec
inc
popa
enter
adc
xor
jnp
std
push
scas
lea
add
sbb
js
ljmp
stos
jno
mov
aaa
cmp
pusha
add
in
xor
xorl
mov
fiadds
push
andl
adc
dec
test
sbb
add
aam
leave
int3
add
add
imul
xor
loope
jae
cmc
add
mov
notb
loope
adc
or
cmp
das
adc
cmp
jp
testl
or
add
and
scas
test
jge
aaa
aad
inc
les
rcr
fldcw
and
jnp
xor
das
mov
mov
adc
ss
mov
mov
idivl
jecxz
dec
mov
mov
mov
mov
jo
adc
push
movsb
lret
sbbb
jo
mov
stc
pop
enter
inc
and
xchg
test
mov
das
xor
pop
mov
mov
stos
rcr
jmp
lcall
cmp
arpl
inc
inc
inc
pusha
sbb
mov
xchg
jmp
mov
stc
addr16
mov
mov
mov
add
dec
test
add
clc
jmp
mov
and
adc
ror
lea
jb
cmp
inc
add
mov
xor
nop
jns
rol
pop
pop
clc
and
or
shlb
pop
imul
xchg
xor
adcl
jne
push
rcll
add
gs
in
popf
xor
daa
andb
outsl
es
test
sbb
loopne
xchg
shlb
mov
sub
sub
jnp
and
dec
adc
rorl
arpl
or
dec
mov
mov
push
push
lock
or
in
call
dec
push
jbe
mov
adc
sbb
sbb
mulb
outsl
add
xor
push
mov
push
xor
and
fcomps
es
xchg
and
mov
jl
imul
push
js
shlb
in
gs
sbb
jecxz
movsb
in
js
iret
add
jmp
mov
sub
add
pop
mov
push
cwtl
or
inc
xor
adc
stos
add
jo
popa
jg
cmpsb
push
and
lods
pop
or
push
rorb
push
jle
inc
std
in
add
icebp
sar
in
mov
daa
lds
std
push
lock
clc
les
cld
xlat
xor
xor
fwait
loopne
mov
sbb
sbb
mov
sub
test
pop
pop
rorb
dec
movsl
adc
xor
popa
jo
jecxz
add
xchg
sub
mov
or
dec
pop
mov
enter
dec
add
pop
scas
mov
std
pusha
cli
int
lods
popa
add
xor
scas
fcoml
jmp
rorb
cli
jno
lea
jg
ljmp
scas
bound
mov
adc
insl
push
test
lods
shlb
xchg
inc
sub
adc
and
fstl
sub
ja
dec
mov
in
and
or
mov
cwtl
pusha
mov
lods
insl
jp
daa
fildl
pusha
fdivrp
add
push
sub
mov
iret
or
data16
dec
shlb
testl
aaa
sub
sti
mov
aaa
inc
outsl
arpl
mov
xor
jae
push
pop
jg
push
xchg
or
and
shll
lods
add
sbbl
fdivrs
sbb
rolb
jecxz
pop
test
mov
push
pop
xor
cmc
add
or
pusha
je
not
scas
mov
shl
cmp
mov
imul
in
popf
xchg
mov
call
and
jle
roll
cmp
cld
mov
in
insl
rorb
mov
add
push
mov
add
cmp
sub
movsb
aas
sbb
push
mov
mov
out
je
and
and
mov
sti
imul
dec
fstpl
outsl
push
mov
jnp
test
jne
sub
push
adc
xchg
das
loopne
push
in
sub
mov
repz
sub
inc
sbb
stos
lds
push
sub
subb
cmc
out
pop
outsb
subl
pop
test
dec
mov
pop
jno
adc
add
sbb
jnp
push
fcoms
xor
fwait
scas
enter
ret
shl
push
nop
les
adc
lahf
mov
in
adc
pop
lock
pop
mov
mov
std
and
add
les
pxor
mov
xor
mov
int
ljmp
push
push
std
outsl
jmp
sub
adc
inc
flds
mov
adc
fidivs
mov
scas
daa
xchg
xorb
pop
in
ds
insl
popf
mov
pop
sub
les
popa
and
sub
xor
mov
inc
ret
clc
xchg
mov
icebp
std
shr
xorb
fwait
loop
stos
sbb
movl
pop
arpl
add
push
xor
leave
xor
mull
inc
scas
test
lret
pop
push
gs
fnstsw
dec
mov
outsl
mov
sarb
lds
fs
inc
and
pop
xchg
rcr
sbb
sub
and
rcll
jno
cmp
pop
adc
pop
mov
mov
mov
subl
sti
ffreep
and
rorb
sub
rcrb
les
lret
adc
pop
add
mov
aaa
lea
loopne
out
inc
adc
add
fld
mov
ljmp
or
ret
push
mov
jnp
inc
and
xor
adc
dec
sbb
inc
push
pop
pusha
sbb
push
imul
push
ss
test
pop
ficompl
faddl
jno
shl
ja
xchg
nop
pop
fbstp
dec
pop
xchg
sti
jecxz
sub
sbb
adc
shll
xchg
push
add
cmp
cmpsl
mov
mov
leave
test
hlt
jo
mov
inc
push
pop
push
xor
and
cmp
std
adc
sbb
add
push
stc
mov
sub
cmp
lcall
xchg
cmp
enter
add
iret
or
adc
popf
ret
das
aad
popaw
pop
sbb
adcb
pop
pop
ss
rolb
das
inc
test
pop
sbb
andl
push
in
inc
js
pop
cmp
mov
aad
out
xor
mov
push
lea
xchg
rorb
aaa
bound
or
add
jns
and
xor
jmp
int3
mov
mov
adc
call
movsb
sbb
and
xor
pop
arpl
xor
nop
bound
inc
out
mov
push
pop
adc
jecxz
sub
pop
leave
test
jo
or
test
jno
insb
xchg
or
imul
sub
cmp
gs
mov
push
xor
sbb
cltd
mov
fnstenv
outsb
enter
pop
jns
xorl
sbb
and
fs
adc
fs
add
pop
jg
jae
mov
sbb
mov
xchg
stos
adc
jge
pop
fsubrl
pop
divl
sub
movsl
push
push
int
js
std
push
daa
lds
in
aam
es
aad
sbb
mov
jo
add
loopne
sbb
add
repnz
push
inc
mov
popa
xor
jnp
aad
xchg
jbe
xor
ret
jbe
mov
das
mov
and
add
push
pop
cmpsl
pop
pop
stos
dec
pop
lock
adc
sbb
or
pop
cwtl
scas
repnz
pop
or
mov
test
add
jbe
movsb
sbb
ret
mov
std
cmpsl
loopne,pt
shlb
and
jmp
sbb
pusha
sub
outsb
jbe
or
or
push
add
or
sub
jmp
sub
aad
adc
aaa
pusha
sbb
pop
loopne
test
in
and
mov
push
pusha
test
rcrl
push
push
movsl
inc
sub
and
movsl
ret
pushf
jle
cmpsb
es
pop
inc
jg
mov
xor
jnp
cmp
mov
mov
movsb
pop
lods
sub
movsl
xchg
mov
imull
mov
iret
adc
add
int3
scas
cli
aas
negl
push
xor
xchg
jge
inc
sub
stc
in
or
dec
hlt
xlat
push
test
add
addr16
stos
aaa
movsl
xchg
mov
mov
std
stos
and
push
mov
push
mov
dec
movsb
aam
mov
mov
cmpsb
popa
mov
cmpsl
jo
mov
nop
or
and
cmp
push
add
pushf
mull
cwtl
jmp
call
pushf
outsl
inc
js
hlt
leave
jb
add
adc
out
in
dec
movsb
pop
push
xchg
fnsave
aad
jae
pusha
pop
aad
sbb
sbb
enter
arpl
mov
jmp
sbb
hlt
fistl
cmp
dec
and
jnp
mov
cmp
imul
mov
dec
mov
rolb
mov
jl
addb
cmp
or
loopne
sub
shl
mov
push
mov
lods
adc
test
inc
pop
mov
mov
lea
lods
sbb
and
adc
or
xlat
iret
js
pop
xor
mov
jno
mov
sub
dec
adc
imulb
cmc
adc
sbb
lods
pusha
and
jmp
cmp
cmp
pushf
add
call
xchg
mov
test
pop
dec
movsl
lret
scas
dec
dec
popf
pop
pop
lahf
mulb
fwait
or
jmp
ja
xchg
bound
test
sbb
fmul
push
and
xor
fstps
xchg
rorb
lret
cmp
mov
daa
test
adc
and
lods
sti
loope
movsl
jne
push
lret
add
and
popa
pushf
imul
rorl
mov
leave
cs
mov
sub
int3
or
adc
lods
mov
add
inc
pop
push
lret
inc
and
and
ret
in
add
adc
push
mov
cltd
das
pop
subb
mov
loopne
and
pop
sbb
jge
lods
loope
dec
mov
xchg
inc
sub
add
push
stos
sbb
jmp
sub
jge
test
mov
jno
xchg
push
jno
vphadduwd
mov
cld
adc
add
movsb
les
decl
xor
inc
xchg
popf
in
xor
outsl
bound
sbb
shr
push
sub
shrb
fwait
or
jge
cmp
add
pop
dec
jns
clc
xchg
mov
or
call
call
jp
das
jae
lret
inc
xor
insb
and
mov
iret
xchg
ss
sahf
add
sbb
jne
mov
fstps
jne
jle
mov
dec
pop
push
inc
cmc
sbb
lret
mov
mov
negl
sbb
add
call
cli
pop
pop
je
mov
mov
loope
fisubl
pop
cmp
dec
cmp
repz
or
xor
push
dec
mov
jp
or
lods
ret
adc
call
adc
sbb
inc
xchg
adc
dec
or
bound
xor
xchg
cwtl
xor
shlb
or
add
or
adc
sbb
sbbb
mov
or
mov
sub
push
pushf
stos
jmp
push
sbb
pop
addb
push
popf
add
in
outsb
and
push
push
ljmp
dec
xchg
rolb
ret
push
or
add
int
js
inc
nop
sub
scas
cmpsb
loop
xchg
xor
mov
cmp
or
add
fbld
or
pop
or
mov
and
sbb
mov
aaa
sbb
xchg
lahf
sti
xchg
ljmp
mov
test
mov
mov
lret
fimull
xor
sub
loope
dec
pop
or
mov
and
xchg
int3
mov
xor
add
ljmp
dec
add
ret
push
test
and
popf
pushaw
push
adc
aad
arpl
jmp
scas
mov
xchg
dec
pop
ljmp
fstps
fstpt
negb
cmpsl
ret
scas
pusha
sbb
test
cwtl
subb
lods
mov
xorl
jle
mov
pop
mov
fadds
push
mov
ret
mov
cmpl
popa
mov
sub
lcall
sub
cld
aaa
mov
add
fistl
and
mov
pop
cmp
pop
push
movsl
mov
mov
xor
jbe
outsl
and
testl
in
xor
mov
and
pop
popf
shrb
mov
adc
ja,pt
imul
cwtl
rcrl
fcomps
sbb
jo
push
or
push
push
and
sbb
jno
inc
mov
jg
in
jge
xor
mov
push
sbb
dec
pop
dec
sbb
jmp
xchg
js
ja
scas
fnstsw
dec
js
shlb
in
shrb
lods
xchg
mov
cmpsb
mov
and
xchg
mov
or
push
sub
fdivrl
xor
adc
cmp
shlb
or
rcrb
insl
cmc
jae
test
mov
hlt
repz
pushf
xlat
int
cltd
movsl
test
jmp
int
mov
loopne
and
push
or
sbb
sbb
andps
add
xor
or
xorl
xor
outsb
inc
lahf
jo
jl
sub
inc
repz
sbb
mov
in
xor
pop
cmp
pusha
inc
xor
shrb
insb
inc
cmpsl
or
cmp
jp
sbb
cmp
jno
imul
cld
insb
sbb
inc
xchg
out
jns
adc
inc
and
or
sar
or
or
xchg
repz
sbb
inc
and
or
fcoml
sbb
fcompl
push
and
add
mov
or
or
jbe
mov
aam
rcrb
or
jle
add
movsl
jbe
or
xor
sbb
dec
cmp
mov
pop
shlb
push
aaa
pop
adc
sub
je
mov
or
int3
das
push
sbb
mov
or
lods
adcl
aas
mov
mov
sbb
add
dec
fimuls
jle
insb
push
and
jge
sbb
mov
jno
jno
ljmp
mov
fs
js
or
or
push
add
or
xchg
adc
jl
sbb
push
add
or
and
fsubrl
jp
and
mov
jnp
mov
and
push
loope
dec
adc
pop
or
jb
push
pop
rolb
test
std
adc
cmp
je
push
push
cmp
scas
jg
ds
or
push
add
cmp
mov
ret
push
push
add
sub
pop
jecxz
fnsave
movsb
lods
pop
mov
in
cmp
push
inc
or
sti
ds
and
and
cmp
pop
add
or
and
ja
jae
repnz
sti
cs
mov
pop
sbb
int
pop
in
cmp
gs
cmpsb
cmp
dec
or
pop
or
mov
arpl
add
mov
sbb
lock
push
and
daa
inc
test
outsb
add
mov
mov
add
add
jns
inc
mov
or
shrb
mov
aad
jnp
add
rolb
pop
fildl
cwtl
jno
daa
mov
cvttps2pi
sbb
insb
xchg
mov
mov
inc
es
adc
rcrb
pusha
lret
or
loope
cmpsb
push
pop
mov
jne
int
dec
jo
jl
push
jno
pop
sbb
pop
mov
xor
xor
insb
dec
add
jl,pt
push
insl
dec
insb
push
imul
pop
push
popf
xorb
pop
push
jle
jo
mov
loope
fnstsw
push
imul
push
gs
and
mov
push
ja
jbe
sub
add
outsl
rcr
add
dec
push
push
jns
jg
push
jg
out
mov
push
daa
enter
sbb
jno
ja
cmc
mov
xor
xor
mov
insl
and
push
pop
in
in
ja
and
push
lcall
jo
jns
repnz
cld
push
je
pop
filds
aas
jge
icebp
jnp
ss
loopne
imul
inc
imul
push
mov
add
lock
repz
add
ss
ja
xor
pop
sahf
xor
jns
sbb
insb
xchg
outsl
mov
out
add
aam
es
add
fldenv
push
jne
sarl
jo
dec
shlb
jo
xchg
mov
nop
mov
mov
loopne
add
dec
mov
insl
jne
dec
aas
mull
fadd
cmp
xor
insl
imul
sub
outsl
cmp
push
pop
dec
rcrb
push
push
mov
imul
xor
mov
add
adc
xchg
int3
out
lds
ljmp
imul
fmull
jle
or
dec
jmp
in
pop
adc
out
pop
jns
jl
or
add
push
ja
lock
push
popa
ret
sarl
add
push
cmp
enter
jnp
movsb
sbb
jne
js
js
fnstsw
push
or
sbb
push
adc
pop
jl
sbb
adc
sub
mov
xchg
sbb
insl
fidivrl
idivb
mov
pop
fisttpll
popa
jno
jne
mov
push
cmp
mov
ss
je
sbb
push
dec
addl
jl
popf
mov
jp
jno
ja
sbb
sbb
sub
pop
and
sahf
jge
jge
repz
jnp
jno
adc
mov
jae
imul
pmaxub
pop
inc
inc
dec
jg
push
insl
pop
xor
add
push
cmova
or
sub
push
pop
shrb
mov
into
sbb
xchg
je
adc
test
jno
repz
fnsave
mov
shll
inc
xchg
mov
call
push
jle
int
sbb
lock
jmp
test
and
lds
xchg
push
ret
sbb
push
mov
xor
mov
aad
mov
xchg
jecxz
push
test
cmp
jnp
clc
dec
dec
pop
dec
mov
add
add
push
push
pop
push
out
mov
sub
sub
sub
mov
outsl
andb
pusha
add
aas
adcb
das
sbb
pop
dec
dec
mov
jno
icebp
je
pop
nop
mov
into
jmp
mov
jl
pop
push
pop
hlt
ljmp
in
push
sub
mov
dec
cs
mov
aaa
mov
in
push
jnp
insl
jbe
pop
adc
push
pop
dec
lods
cs
aad
jno
jns
inc
in
popa
mul
jge
jno
dec
xor
cmpsb
sub
mov
imul
push
js
xchg
les
dec
aas
xchg
adc
add
push
cmp
test
mov
inc
cmpsl
push
cmp
pusha
lcall
xor
out
xor
enter
dec
jl
enter
lods
dec
daa
cmp
xchg
or
jmp
lods
fstpl
sub
cmovns
mov
adc
pop
pop
push
inc
sub
sbb
jbe
cs
lods
jg
mov
ficoms
movsb
bound
addr16
lahf
dec
inc
in
loopne
mov
loope
imul
pop
pop
push
dec
pop
fs
sti
ficomps
add
inc
add
daa
inc
dec
lcall
fldenv
div
fs
divl
push
lahf
aad
rcrl
jno
into
int
int
push
mov
lret
xlat
jbe
pop
inc
movsb
push
in
xchg
sarl
push
pop
call
mov
inc
aam
dec
cs
ret
and
jecxz
mov
jnp
popf
ret
cli
popa
cld
sub
push
and
cmp
lahf
push
out
pop
dec
sub
pop
mov
shr
fiaddl
push
nop
xor
sbb
cmp
add
sbb
nop
xchg
or
or
xor
add
popa
orl
pop
aad
fsub
xor
mov
into
arpl
shl
cmc
cmp
clc
push
add
add
push
stc
ret
xchg
idivl
addb
add
mov
inc
pop
cli
sti
or
std
loopne
sub
push
es
adc
lock
in
lods
cwtl
push
add
jmp
pop
jb
cmova
sti
loope
fstpl
lock
jecxz
insl
lock
in
loope
nop
dec
pusha
xchg
mov
test
iret
ffree
frstor
imul
mov
xlat
ds
fcmovne
out
xchg
pop
mov
js
pop
lods
sub
inc
cld
adc
adc
cmp
push
cmp
push
or
loop
pop
loope
ds
rcr
pop
iret
pop
inc
sub
pop
inc
mov
imulb
jns
ret
inc
call
mov
pusha
sti
fwait
mov
mov
leave
iret
xor
add
mov
fwait
sbb
imul
fisttpll
xor
add
add
fidivl
imul
rol
xlat
pop
add
dec
mov
pop
ljmp
or
jge
incl
xchg
movzbl
add
fildl
jecxz
sti
rclb
lock
or
pop
cmp
repnz
or
pop
ljmp
fadds
xchg
loope
adc
lds
pop
push
andl
sar
aaa
scas
adc
fadds
jne
pop
mov
popf
push
mov
push
insl
sbb
pop
daa
dec
aad
jle
sub
out
add
sub
incl
pop
mov
push
push
cmpsl
add
cmp
cmp
jno
in
jecxz
jne
pop
add
pusha
mov
lods
sti
std
inc
repnz
push
mov
je
push
or
sbb
add
divl
cmc
adc
inc
or
fistps
pusha
roll
add
add
mov
mov
add
cmc
add
dec
aad
pop
or
adc
fcomps
jle
jbe
idivl
push
sub
sbb
sub
jg
cli
andb
sub
movb
inc
sub
jmp
in
insb
imul
jno
popa
push
jo
cmp
je
pop
cmp
xchg
add
dec
popa
aaa
mov
add
inc
cmp
pop
int
loopne
in
jns
cs
mov
xor
je
cmp
and
add
mov
call
ror
xor
add
jo
out
cwtl
cmpsl
sub
jecxz
adc
mov
pop
pop
add
insb
push
sbb
gs
adc
push
popl
inc
or
push
jl
jns
stos
nop
or
dec
pop
push
xorl
jno
jge
mov
inc
mov
ret
jno
xor
cmpl
mov
mov
lods
or
jns
add
ja
jg
sbb
jl
pop
jg
sbb
push
dec
push
bound
faddl
fbstp
in
movsl
std
jae
pusha
mov
inc
js
lea
dec
dec
test
sbb
daa
jno
sub
call
ret
jne
pusha
les
aad
pusha
les
cmpl
das
jp
adcb
cmp
popa
add
popf
pop
xor
inc
and
insb
inc
sub
fcompl
add
and
dec
inc
fcmovnu
pop
xor
xchg
icebp
rorb
mov
jo
addb
ficompl
cmp
aas
mov
jl
or
mov
xor
xor
inc
movsl
sbb
sub
inc
jge
movsl
mov
seto
sahf
dec
add
push
ja
inc
or
lods
jle
fadds
push
mov
inc
dec
test
neg
aaa
cmpsl
test
add
pusha
add
ja
insb
out
add
mov
jbe
mov
sbb
shlb
push
mov
popf
push
popa
sbb
or
add
push
push
popa
dec
clc
add
ds
mov
push
ds
jmp
pop
dec
pop
push
sub
add
xor
imul
les
or
xchg
cmp
jno
dec
js
or
iret
jo
sbb
sbb
mov
jmp
cmpsb
roll
repz
adcb
mov
mov
jp
mov
add
adc
sbb
das
in
push
sbb
mov
sub
pop
sub
add
push
push
mov
andb
mov
ja
ljmp
jg
popaw
mov
fstps
xchg
pop
xor
mov
add
repz
jae
shrb
jmp
pop
pop
pop
imul
add
dec
outsl
arpl
inc
mov
sbbb
fimuls
iret
out
jno
jne,pn
add
jb
add
pop
fidivrs
jne
sbb
test
add
decb
fs
sarl
dec
or
pusha
push
jo
pop
push
pop
out
add
push
pop
scas
adc
pop
inc
test
lds
sub
adc
decb
movsl
inc
das
add
and
cs
pop
insb
push
or
inc
push
jmp
jae
xchg
or
xchg
shll
mov
sahf
pop
daa
or
js
push
js
sbb
push
pop
test
mov
mov
mov
push
bound
add
pop
shl
cmp
gs
mov
adcl
iret
adc
pop
out
or
jno
loope
add
push
in
sti
jno
and
rcrl
mov
jge
xor
sbb
test
inc
insl
jmp
popa
shlb
add
jne
adc
bound
mov
mov
add
or
rolb
xlat
and
jo
dec
cmp
jns
and
cmp
push
mov
mov
and
push
jecxz
or
mov
add
push
rorl
mov
xchg
cmp
inc
pushf
movsl
inc
add
push
mov
jmp
inc
add
xchg
jge
jnp
stos
push
mov
mov
dec
xchg
or
sub
jae
push
xchg
xor
popa
lea
jno
xor
mov
sar
rorl
icebp
sub
sbb
in
or
cmc
mov
add
jno
daa
mov
add
popa
iret
addr16
popf
push
sub
stc
add
rolb
ja
dec
je
push
or
loopne
popf
shll
adc
pop
rorl
cmc
shr
lods
ret
jae
inc
movd
data16
add
mov
inc
pop
push
fwait
adc
sbb
add
sbb
ror
inc
outsb
lods
dec
add
cmp
add
inc
or
cmp
ret
pxor
rorb
xlat
push
out
pusha
jo
jmp
std
rolb
inc
inc
addl
clc
stos
cmp
pop
or
clc
dec
and
adc
add
dec
or
add
movsl
mov
add
fistps
test
pop
pusha
add
xlat
or
mov
lods
mov
push
pusha
xchg
arpl
mov
jb
ret
inc
mov
stos
sbb
bnd
push
insb
mov
pop
add
std
bound
jbe
js
pop
dec
xchg
push
add
or
stc
outsl
push
pop
add
movsb
jnp
push
xor
inc
xchg
jo
or
adc
sbb
jle
test
inc
dec
js
ret
imul
in
imul
ja
loopne
add
ficoml
dec
ds
and
es
lock
xchg
fucomp
pop
mov
jl
jo
mov
push
jle
loopne
imul
fstp
xchg
cmpsb
scas
fstps
xlat
jbe
add
loope
in
push
adc
adc
frstor
xor
cmp
cmp
pop
mov
sub
pop
icebp
sub
pushf
sbb
sbb
in
add
insb
jle
and
add
xor
dec
dec
inc
imul
push
xor
js
cmp
ja
sbb
mov
jb
xchg
dec
dec
push
push
insb
push
cli
aam
call
inc
js
ja
shlb
add
cmc
mov
insb
fidivs
jns
inc
inc
jbe
pop
into
sub
call
push
dec
push
inc
fldt
je
cltd
cmc
cmp
inc
xchg
push
mov
loope
lods
cmp
scas
push
ljmp
jne
jbe
lock
test
and
xor
and
push
adc
addr16
subb
pop
insb
jo
pop
xorl
push
jb
pop
sub
inc
dec
jle
jno
jb
inc
push
push
xchg
pop
xchg
xchg
cltd
shll
cltd
push
mov
fstpl
jmp
push
notb
jbe
ja
insb
xor
jb
dec
push
lahf
add
adc
jo
or
dec
pop
xor
loopne
mov
push
leave
roll
inc
pop
xor
pop
popa
adc
clc
mov
pop
push
sarb
add
lods
add
adc
out
inc
stos
xchg
mov
add
adc
add
lods
outsb
inc
fldl
insl
std
es
les
and
xchg
jno
add
mov
dec
das
sub
inc
pop
pop
pop
stos
add
and
cmp
pop
sub
adc
mov
sub
sbb
pop
xchg
push
test
xor
std
sub
sbb
add
dec
adc
and
sub
lods
or
push
rcrl
icebp
and
push
xor
add
pop
inc
inc
test
adc
adc
jecxz
or
mov
lds
movsl
inc
mov
dec
rolb
mov
add
jne
cmp
lds
sbb
sbbl
mov
mov
ja
adc
lods
aad
out
mov
push
arpl
and
lods
lods
movsl
jae
sub
mov
out
lcall
mov
jecxz
imul
mov
movsb
sub
fs
jecxz
or
sub
cmp
lods
test
daa
pop
fstl
pop
das
adc
pop
inc
mov
dec
and
mov
rcll
test
and
xchg
sbb
lds
mov
push
in
sbb
and
xor
and
sbbl
xor
out
adc
adc
xchg
push
inc
sub
stc
lea
xor
push
outsl
incl
rcll
outsl
lea
mov
fcmovnu
add
jae
push
sub
add
test
sbb
js
or
outsl
xor
mov
dec
adc
stos
add
roll
adc
aaa
popa
inc
inc
arpl
subl
add
xor
or
dec
or
inc
push
sub
adc
adc
pop
fwait
cmc
inc
lods
mov
adc
xor
std
outsl
orl
mov
ljmp
mov
push
lods
push
lods
mov
sub
mov
push
xorb
pop
inc
xchg
mov
cmp
test
sub
jmp
jecxz
add
stos
add
cmc
xchg
xchg
pop
and
and
ja
or
push
pop
dec
inc
xchg
aaa
out
stos
les
lret
or
arpl
jne
add
test
mov
outsl
shll
xor
pop
push
shr
mov
jb
sti
add
insl
push
test
stos
push
adc
addr16
dec
icebp
or
cmp
scas
mov
lgs
mov
sub
je
xchg
sub
cmp
mov
push
mov
incl
inc
leave
pop
pop
xor
test
or
dec
les
or
adc
and
setns
or
mov
testl
or
das
jg
pinsrw
dec
mov
insl
or
jo
out
lret
sbb
mov
or
mov
adcb
outsb
in
add
dec
dec
add
add
lahf
rorb
pop
add
sahf
push
cmpsl
jge
fisttpl
adc
pop
inc
push
lcall
inc
daa
jg
sbb
or
jns
jecxz
sub
and
and
test
sbb
sbb
or
mov
adc
aaa
fmuls
pop
movb
sbb
sbb
insb
and
je
xor
jae
js
xor
out
mov
insb
sbb
loop
cli
jbe
pop
cmp
dec
jle
push
mov
add
add
cmpb
lds
fmul
pop
call
cmp
data16
andl
adc
fs
imul
in
imul
lods
subl
pcmpgtd
adc
sub
inc
dec
sbb
or
xor
sbb
sbbb
ret
arpl
dec
xchg
or
in
inc
add
shrb
pusha
bound
mov
jns
fdivl
add
or
adc
ja
aaa
jnp
mov
pop
sbb
dec
lock
cmp
test
cmp
js
xor
push
mov
sbb
jle
sub
loope
in
pop
sbb
add
imul
cs
sbb
sub
das
jo
in
inc
stos
pop
sbb
cs
push
pop
fidivl
add
sbb
dec
hlt
fiadds
and
and
jge
add
add
sub
sub
jo
add
sub
mov
ljmp
inc
inc
movsl
pop
inc
into
pusha
xchg
add
ja
jb
fnsave
popf
test
add
fidivrs
xor
lods
das
or
or
lock
repnz
loope
mov
stos
inc
cmp
js
and
lret
ret
mov
inc
pop
mov
rcll
lods
lret
lds
adc
and
aam
jbe
cld
adc
jl
dec
clc
enter
cmp
jnp
jno
mov
cmp
enter
jp
frstor
imul
mov
fisubl
push
or
mov
sbb
mov
xor
add
in
loopne
pop
xor
sub
pop
into
aas
add
add
sbb
cli
and
mov
aas
jne
les
cmp
push
or
xchg
mov
scas
cs
sbb
pop
scas
out
mov
cmp
add
pop
xor
dec
shll
jo
add
shl
sub
and
sub
in
loop
push
mov
popf
pop
inc
cmp
cs
sub
add
rorb
mov
push
push
push
dec
je
push
aad
ficoms
push
inc
test
adc
fisubl
dec
or
popa
subb
pusha
pop
xchg
pop
daa
push
outsb
aaa
adc
negb
es
cvtpi2ps
ja
push
adc
fwait
jl
popa
mov
mov
xchg
mov
adc
push
mov
ds
nop
sbb
push
je
cmp
xchg
sbb
nop
mov
inc
stos
mov
adc
scas
loop
test
cmpsb
adc
cmpl
scas
add
je
pop
xor
popa
jne
push
sub
dec
or
mov
cwtl
or
dec
and
mov
subl
les
xor
push
jg
test
adcb
sub
inc
mov
stos
push
sub
mov
or
inc
lret
popf
push
xor
push
pop
mov
shlb
adcb
push
push
fst
push
or
pop
vpsrlw
aad
and
lea
adc
dec
or
lea
mov
sub
mov
xor
adc
ljmp
xlat
mov
stos
std
sbb
sub
pop
push
popf
jno
mov
movsl
out
adc
sub
and
stos
sti
or
ljmp
mov
inc
xorl
lods
mov
imul
adcb
daa
mov
add
movsl
add
push
and
movsl
jmp
push
movsl
inc
dec
mov
bound
dec
add
adc
jns
adc
leave
push
inc
adc
sub
andl
ss
cvtdq2ps
and
add
dec
add
push
and
push
xchg
jne
mov
mov
fldl
aad
sarl
sbb
cmc
imul
rclb
gs
xor
dec
sub
or
pop
bound
jae
xchg
sub
or
fnstenv
bound
fwait
arpl
aad
scas
arpl
add
mov
aad
mov
push
xor
sub
mov
lret
dec
mov
adc
jnp
mov
or
mov
adc
movsb
mov
and
lods
add
stos
sub
mov
push
mov
loope
mov
push
dec
jnp
stos
aam
repz
xor
add
adc
pop
or
ljmp
mov
add
mov
lds
sub
orl
inc
mov
inc
or
fistl
aas
adc
push
push
inc
rcrb
jecxz
and
push
push
mov
sub
mov
add
push
stos
add
push
xor
pop
pop
les
iret
mov
pop
sbb
pop
mov
fdivs
ret
clc
dec
or
repz
roll
adc
xor
push
iret
repz
fs
mov
test
add
push
mov
inc
add
test
add
or
test
mov
inc
cmp
out
and
cs
inc
mov
and
leave
and
fistps
mov
adc
add
or
sub
add
fcom
popa
cmp
push
sbb
xchg
add
ja
ret
adc
pop
push
dec
shlb
pop
das
test
pop
fbstp
inc
es
xor
xchg
sti
gs
imul
jb
inc
imul
arpl
inc
outsl
jo
cmp
adc
add
inc
insl
cld
push
sahf
subb
inc
outsb
jne
dec
adcb
mov
fcmovnu
push
data16
imul
adc
les
mov
addr16
fistps
sbb
movsb
push
imul
outsb
addr16
jge
cltd
int
push
xor
inc
adcl
cmp
popa
pushf
mov
pusha
xor
jbe
and
jo
imul
outsl
inc
stos
ja
rclb
push
sub
lods
sbbl
push
ret
stos
cmp
es
ss
inc
test
push
mov
xlat
test
and
push
out
dec
outsl
mov
arpl
aas
stc
jmp
push
inc
add
dec
add
add
pop
inc
sub
add
or
les
mov
daa
lcall
adc
sbb
add
xchg
insl
sbb
push
cmp
das
adc
add
mov
shrl
add
push
sub
in
or
inc
dec
inc
inc
in
and
add
stc
and
push
pusha
inc
inc
push
inc
mov
adc
inc
rolb
and
xchg
push
or
add
or
fs
popa
add
loopne
add
test
and
cmp
add
lock
add
jae
dec
ja
mov
xor
ss
filds
push
add
and
add
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
