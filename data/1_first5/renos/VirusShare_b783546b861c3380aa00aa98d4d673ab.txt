push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
or
mov
mov
orl
mov
mov
push
call
adc
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
incl
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
xor
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
and
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
or
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
cmp
je
mov
mov
mov
sub
mov
add
mov
mov
mov
sbb
add
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
adc
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
cmp
je
mov
mov
add
and
mov
mov
mov
dec
jne
mov
mov
mov
sub
mov
sub
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
decl
mov
push
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
add
mov
and
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
add
add
jns
add
push
push
add
add
inc
add
aaa
add
dec
add
add
dec
add
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
cmp
jb
mov
mov
mov
add
mov
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
push
call
call
mov
push
call
call
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
or
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
add
cmp
jb
or
sbb
mov
mov
mov
mov
mov
mov
sub
mov
call
mov
xor
sub
mov
mov
mov
mov
mov
and
mov
mov
movl
call
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
call
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jbe
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
and
call
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
call
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
jne
mov
mov
sub
mov
mov
mov
mov
add
mov
call
mov
mov
mov
sub
mov
mov
sub
mov
mov
sbb
adc
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
sub
sub
mov
mov
adc
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
sub
sub
mov
push
push
pushl
call
mov
mov
and
mov
add
mov
add
mov
pop
ret
nop
nop
push
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
cmp
jbe
mov
sub
mov
push
call
mov
sub
mov
mov
sub
mov
mov
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
mov
add
sub
mov
mov
mov
or
mov
mov
mov
mov
call
mov
add
mov
sub
mov
mov
pushl
push
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
ret
nop
nop
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
ret
nop
nop
push
mov
add
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
add
mov
add
mov
mov
mov
subl
mov
push
call
mov
or
mov
mov
orl
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
sub
mov
add
mov
mov
mov
mov
leave
ret
nop
nop
nop
mov
mov
sub
mov
mov
mov
mov
mov
add
sbb
mov
mov
mov
mov
ret
nop
nop
nop
mov
sub
sub
mov
mov
mov
mov
sub
mov
push
call
mov
mov
sub
sbb
mov
addl
push
call
mov
mov
add
mov
add
mov
call
push
call
mov
add
mov
mov
call
mov
sub
mov
mov
mov
ret
nop
mov
mov
add
add
mov
mov
push
mov
push
mov
push
call
sub
mov
mov
mov
mov
mov
sbb
mov
ret
nop
push
mov
add
mov
mov
mov
mov
cmpl
je
mov
mov
mov
add
mov
sub
mov
mov
sub
adc
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
sub
cmp
jg
xor
mov
mov
sub
mov
mov
mov
mov
mov
mov
incl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
call
call
mov
mov
add
adc
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
leave
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
push
push
mov
push
pushl
call
mov
mov
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
add
mov
mov
orl
mov
mov
mov
mov
leave
ret
nop
nop
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
push
call
call
mov
sub
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
add
mov
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
sub
mov
mov
cmp
jo
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
add
and
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
xorl
leave
ret
mov
mov
add
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
ret
nop
mov
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
xor
mov
sub
mov
mov
push
push
call
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
ret
nop
nop
push
mov
add
mov
mov
sub
mov
mov
mov
add
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
sub
mov
mov
incl
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
leave
ret
nop
nop
nop
push
mov
add
adc
mov
mov
mov
mov
orl
mov
push
call
mov
mov
mov
mov
mov
sub
mov
movl
mov
mov
mov
pushl
pushl
pushl
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
nop
mov
mov
sub
test
jb
mov
mov
sub
mov
mov
mov
push
push
and
push
call
mov
sub
sub
mov
mov
mov
push
push
push
pushl
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
subl
mov
mov
ret
push
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
mov
mov
mov
mov
cmp
jne
mov
mov
sub
mov
mov
mov
mov
push
call
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
call
mov
add
mov
mov
mov
addl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
sub
cmp
jbe
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
xor
mov
mov
mov
xor
sub
adc
mov
mov
mov
mov
mov
sub
cmp
jns
mov
or
mov
mov
inc
mov
cmp
jne
mov
mov
sub
sub
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
push
call
mov
mov
sub
mov
mov
mov
dec
mov
mov
mov
sub
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
sbb
push
call
mov
mov
sub
mov
mov
mov
push
push
push
push
call
mov
mov
add
mov
mov
mov
mov
push
call
mov
add
mov
mov
adc
push
call
mov
add
mov
cmp
jae
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
sub
mov
mov
add
add
mov
mov
xor
mov
test
jbe
mov
sub
mov
mov
mov
add
cmp
jne
mov
mov
sub
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmpl
jl
mov
mov
sub
mov
mov
and
push
call
mov
mov
mov
mov
mov
mov
call
pop
ret
nop
nop
nop
push
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
cmpl
jne
mov
adc
mov
mov
and
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
or
mov
mov
mov
andl
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
andl
mov
mov
mov
mov
mov
pop
ret
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
int3
int3
add
add
add
add
add
add
jbe
add
add
add
add
imul
dec
js
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
inc
add
inc
add
add
add
add
add
add
add
dec
add
dec
outsl
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
add
add
add
add
pop
add
add
push
add
add
cmp
add
add
dec
add
add
add
js
add
jbe
add
inc
add
add
add
add
add
dec
add
pop
add
add
add
inc
add
add
add
add
inc
add
add
je
add
push
add
add
add
add
add
jo
add
pop
add
pop
add
je
add
js
add
add
add
add
jno
add
add
add
push
add
add
add
add
add
add
js
inc
add
add
add
je
add
dec
add
push
add
xor
add
add
data16
add
add
add
add
push
add
jo
add
add
add
add
add
outsb
add
aaa
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
dec
add
add
push
add
cmp
add
add
add
add
add
je
add
dec
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
pop
add
add
dec
add
add
add
add
imul
add
outsb
jns
add
bound
add
xor
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
dec
add
push
add
add
jp
add
jp
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
data16
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
inc
add
add
push
add
add
inc
add
add
add
add
inc
add
add
jo
add
add
aaa
push
aaa
add
add
imul
add
xor
pop
add
dec
add
add
inc
add
gs
add
add
xor
add
add
add
add
add
data16
pop
add
dec
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
add
xor
add
add
add
jne
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
inc
add
xor
jo
add
add
push
add
dec
add
add
add
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
add
data16
add
outsb
add
add
add
add
add
insb
add
add
add
add
push
add
add
add
add
xor
add
ja
add
add
dec
add
add
add
add
add
add
add
add
xor
xor
add
add
add
inc
add
je
add
add
dec
add
add
jb
dec
add
add
add
add
add
jno
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
add
add
add
add
add
add
add
add
insl
jns
add
jns
add
add
add
add
inc
add
add
add
add
add
pop
add
add
add
aaa
add
add
add
add
add
jp
add
dec
imul
jae
xor
add
add
add
insb
add
add
add
add
jno
arpl
leave
ret
add
mov
add
popf
add
outsb
add
scas
arpl
push
add
xchg
push
add
dec
loop
popa
imul
add
add
add
add
lahf
add
mov
inc
add
add
add
add
mov
mov
addl
add
and
add
add
pop
add
add
add
fdiv
add
push
xor
add
add
imul
add
add
add
push
push
add
add
inc
add
and
xor
dec
push
pop
sub
test
inc
dec
add
add
inc
dec
add
push
add
jno
add
add
jno
add
inc
jbe
inc
add
popa
bound
add
dec
add
push
push
jne
dec
add
imul
add
add
add
push
push
xor
imul
dec
add
add
add
add
imul
add
add
add
push
add
add
add
jae
add
ss
add
jo
add
dec
inc
add
add
add
add
add
xor
add
add
add
jns
add
add
add
add
add
xor
add
add
add
push
add
inc
add
add
add
add
add
inc
add
add
xor
add
add
jne
add
add
inc
add
bound
add
dec
add
add
add
add
insl
inc
add
add
add
push
dec
imul
add
add
add
add
add
xor
dec
add
add
add
add
add
jb
add
add
inc
add
add
add
add
xor
add
push
add
add
add
add
js
add
add
bound
add
add
add
add
add
add
add
add
dec
arpl
add
inc
add
add
add
add
xor
add
add
jno
add
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jbe
add
add
add
insb
add
add
add
add
add
add
add
pop
aaa
add
add
jp
add
xor
data16
add
aaa
arpl
cmp
call
loope
lcall
push
sbb
pop
and
or
adc
inc
loope
lcall
sub
lret
sub
cmc
subb
shl
pushf
mov
rcll
and
fstps
or
sbb
std
data16
loope
dec
mov
sbb
xchg
sub
pop
and
addr16
stos
cmc
mov
iret
add
xchg
push
inc
lcall
add
insb
mov
mov
or
xchg
mov
lock
test
loop
jno
es
xchg
xchg
mov
adc
mov
rcrb
loope
inc
cmpsl
clc
fists
cltd
xchg
cmpsl
cmp
out
and
loop
and
inc
cmc
mov
add
popf
stos
inc
loopne
and
outsb
sbb
cmp
xchg
inc
fbstp
mov
movsl
jb
xor
cltd
dec
int
push
popf
pop
stc
fists
cltd
adc
sub
loope
lcall
mov
jp
sbb
loope
lcall
pop
inc
mov
ret
cmc
mov
or
xor
adc
mov
bound
out
test
clc
cmc
sub
icebp
add
adc
mov
loope
lcall
mov
xor
loope
lcall
adc
fsub
fwait
mov
fbld
or
inc
adc
loope
lcall
adc
mov
loope
test
aas
mov
cmpsl
and
push
adc
xchg
and
loope
adc
sahf
adc
shl
cmp
loope
mov
mov
cmp
mov
adc
jne
adc
arpl
mov
scas
mov
add
sbb
lcall
xchg
popa
or
push
clc
jae
loope
lcall
adc
loop
jo
mov
lods
push
mov
ss
adc
iret
xor
aaa
sbb
es
lcall
xchg
loopne
xchg
mov
mov
cmp
loope
jle
xchg
outsl
cmc
das
fwait
daa
lods
fists
cltd
mov
inc
mov
fists
cltd
xchg
mov
mov
lock
adc
and
loopne
cltd
add
inc
sub
adc
mov
push
cltd
cmp
adc
cmp
adc
mov
pop
or
inc
arpl
cmpsl
ds
in
lret
shl
sbb
pop
dec
dec
cmp
adc
or
mov
arpl
mov
or
adc
mov
loope
lcall
sub
int
jecxz
jmp
mov
push
cmpsb
loope
mov
or
mov
or
aad
mov
pop
imul
or
xchg
repnz
adc
mov
sbb
lcall
adc
add
lret
jbe
loope
lcall
int
fcmove
xor
lcall
cmp
fcomps
into
cmc
pop
and
rclb
fisttpl
enter
mov
xchg
xchg
or
repz
call
lret
sub
mov
arpl
or
hlt
fwait
ror
ljmp
pushf
push
in
mov
popa
insb
dec
hlt
or
mov
test
mov
repz
lea
hlt
sub
and
rcrl
dec
int3
outsb
sub
loope
sbb
jecxz
ja
adc
lret
pop
add
shr
jmp
in
loop
daa
shl
orb
xchg
addb
jbe
xchg
icebp
adc
stos
mov
arpl
cmpsl
and
in
lret
shl
sbb
setg
loope
mov
movsl
jbe
and
loope
lcall
mov
scas
ss
xchg
loope
xchg
xchg
test
sahf
scas
adc
mov
bound
pop
out
test
cli
cmc
sub
icebp
or
lcall
mov
or
adc
xchg
adc
shl
mov
loope
lcall
mov
or
lcall
jp
fcmove
cmp
loope
jmp
es
lcall
sub
lcall
loope
jb
std
lcall
fsubl
or
adc
stos
loope
lcall
or
sbb
mov
or
adc
mov
loope
lcall
loopne
or
adc
loope
lcall
or
or
adc
mov
stc
adc
mov
mov
or
push
lcall
divl
rorb
and
shl
and
int
cltd
or
popf
push
in
jbe
or
fiaddl
mov
fdivrs
hlt
xchg
pop
imul
mov
adc
iret
ds
or
adc
dec
mov
and
loope
js
iret
fstps
sub
mov
and
idivb
add
cltd
adc
push
scas
mov
or
push
or
adc
shll
mov
rcll
fs
jmp
andl
clc
or
xchg
cmpb
sahf
pop
adc
dec
or
xchg
sahf
jp
or
fwait
push
xchg
jbe
cwtl
or
fs
and
loope
test
adc
mov
loope
lcall
mov
daa
inc
cmp
shl
and
in
lcall
mov
or
push
pop
lret
mov
sub
lret
lret
mov
loope
lcall
aad
dec
loope
mov
loope
mov
idivb
into
or
bound
loope
shlb
mov
movsl
jp
adcb
icebp
or
lcall
xor
lahf
or
adc
divb
lcall
jno
or
adc
mov
int
sbb
inc
mov
shl
dec
xor
test
inc
popf
out
sub
rolb
rolb
movsb
leave
ret
adc
jg
xchg
adc
into
sub
and
rcrl
adc
adc
add
pop
dec
pop
mov
xchg
and
ljmp
mov
or
mov
cmc
mov
into
inc
pop
lcall
test
mov
adc
divb
loope
mov
in
out
cmc
mov
jg
adc
aaa
loope
push
in
mov
cmp
adc
out
cmc
mov
pop
jecxz
aaa
loope
loop
divb
cmp
cmc
mov
loop,pt
aaa
loope
mulb
loope
push
outsl
loop
out
cmc
mov
std
loop
aaa
loope
mov
loope
jle
jecxz
out
cmc
mov
lahf
loop
aaa
loope
lcall
adc
mov
loope
and
dec
mov
and
loope
jo
sub
sbb
pop
loope
lcall
mov
xchg
data16
sarl
cltd
cmp
lods
repnz
adc
sbb
pop
shr
sbb
push
sbb
loopne
add
loope
cmp
or
ljmp
movsb
lock
imul
mov
mov
push
cli
xchg
xchg
sbb
xchg
sahf
sub
inc
daa
xchg
mov
loope
test
or
fildl
into
js
and
loope
pop
icebp
mov
lcall
adc
and
stos
cmpsl
mov
or
shrl
mov
loope
inc
repnz
adc
or
cmp
sub
cmc
popf
mov
data16
lcall
lcall
aas
mov
or
loop
rcrl
test
mov
or
lcall
mov
or
xchg
lcall
mov
or
lahf
pop
fs
lcall
adc
mov
cmp
or
adc
mov
inc
push
fistpl
dec
aas
and
cmpsl
add
cltd
mov
popw
lcall
mov
cmp
adc
or
adc
mov
stc
adc
mov
inc
adc
jno
push
mov
mov
adc
sbb
pop
jmp
push
sbb
out
add
ret
xor
test
call
xchg
mov
or
mov
loope
sbb
lcall
dec
mov
and
loope
insb
mov
lds
outsl
cmc
aas
cmp
xchg
popa
cld
or
vmovupd
xchg
ja
rol
loopne
and
inc
ror
sbb
mov
xchg
stc
adc
push
add
loop
gs
or
addr16
adc
adc
in
lock
mov
add
cmpsl
idivb
loope
lcall
aas
cmpsl
push
loopne
cltd
xchg
jbe
cltd
mov
fists
test
mov
loope
femms
add
cmp
add
mov
pop
mov
adc
pop
loope
fwait
lea
push
loopne
cltd
pusha
insb
addr16
mov
data16
hlt
mov
or
fwait
lret
sbbb
imul
inc
push
mov
or
sahf
xchg
data16
cltd
mov
loope
clc
data16
or
dec
and
adc
or
ret
cmc
out
or
adc
push
aas
icebp
mov
add
lcall
xchg
nop
or
mov
mov
incb
add
xchg
xchg
xor
push
xor
arpl
add
outsb
add
add
add
jb
add
add
add
add
jp
add
add
add
add
add
add
dec
add
add
xor
add
pop
add
add
add
push
add
add
dec
add
add
add
push
add
add
add
inc
add
insl
add
xor
add
add
add
inc
add
add
dec
add
ja
add
add
add
xor
add
cmp
add
push
add
add
add
push
add
outsl
add
add
dec
push
imul
add
add
add
insl
add
dec
add
add
jns
add
add
add
add
dec
add
xor
add
add
ja
add
add
add
dec
dec
add
xor
add
add
add
outsl
add
aaa
add
push
add
jb
add
add
push
push
add
add
add
add
add
js
add
add
dec
push
add
add
je
add
add
add
add
xor
add
add
add
jne
add
add
add
add
add
add
add
add
add
jp
add
inc
add
add
push
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jns
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
pop
add
push
add
add
xor
push
add
xor
jae
imul
add
ja
add
insl
add
add
imul
add
add
add
add
add
add
add
add
inc
add
add
inc
add
xor
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
imul
add
xor
add
dec
xor
add
add
add
add
cmp
add
add
add
add
inc
popa
add
add
add
xor
add
add
add
add
add
xor
add
jb
add
xor
js
add
add
add
dec
imul
add
add
add
inc
add
cmp
add
add
add
add
add
add
add
je
add
add
add
add
dec
add
add
add
popa
add
add
add
add
inc
add
push
add
add
pop
add
push
add
arpl
add
add
add
add
add
aaa
add
add
je
add
add
add
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
push
add
add
jne
add
add
push
add
add
push
add
add
add
add
insl
push
inc
add
add
add
add
add
cmp
add
xor
add
add
add
inc
add
add
add
jno
add
xor
add
add
add
outsl
add
add
cmp
jo
add
add
jae
add
add
add
add
add
push
add
add
add
add
dec
push
add
add
add
inc
add
add
add
add
add
add
add
add
pop
push
add
add
aaa
add
add
xor
add
add
add
add
cmp
add
add
add
dec
add
dec
add
popa
add
jp
add
cmp
add
add
add
add
add
add
xor
add
add
add
add
push
add
add
dec
add
add
inc
add
xor
je
add
add
add
add
push
add
pop
add
add
jae
add
add
xor
dec
dec
add
add
insb
add
add
je
jae
add
add
add
add
add
ss
add
add
add
add
dec
ja
insl
add
add
dec
inc
add
dec
insb
add
add
jo
ja
add
inc
xor
dec
jae
arpl
je
add
dec
jne
add
add
or
mov
stos
mov
dec
mov
je
mov
js
add
test
inc
add
pop
andb
xchg
or
sbb
add
jge
or
pop
inc
push
push
lahf
xchg
xor
lods
rolb
add
push
xchg
cs
add
inc
loop
daa
jno
out
fistpll
xchg
decl
adc
mov
roll
mov
gs
jle
fld
iret
adc
push
jb
add
or
jle
mov
mov
call
adc
aaa
pop
mov
mov
dec
jecxz
loop
add
inc
iret
lret
and
jnp
cld
es
loopne
xchg
enter
dec
mov
mov
js
jg
jp
mov
sbb
jbe
cmpl
jg
lea
pop
pusha
add
push
jmp
daa
cmpl
inc
jns
add
mov
jmp
mov
pop
pop
xor
jp
ja
call
clc
loope
add
addl
shl
pop
pop
xchg
mov
adc
nop
dec
xchg
mov
jmp
push
daa
xor
cs
add
clc
xchg
add
inc
cltd
dec
mov
sbb
test
ja
stos
add
xor
scas
mov
cmp
inc
jne
cmp
adcb
add
adc
std
mov
ljmp
mov
pop
repnz
lcall
add
lds
dec
mov
call
jne
add
icebp
cmpl
scas
or
lds
dec
lock
xor
fisttpl
sbb
sub
pop
mov
aas
sti
or
dec
xchg
mov
pop
inc
addb
data16
push
leave
or
mov
jne
dec
test
pop
mov
dec
ljmp
lea
jns
decl
test
fistl
enter
xchg
stc
jl
popf
fisubrs
jg
xchg
test
mov
shlb
dec
lret
loope
imul
pop
or
or
loopne
xor
add
push
or
clc
scas
xor
rcl
xchg
inc
dec
add
adc
adc
lret
sub
fdivl
in
pop
xor
jns
mov
inc
and
cmp
adc
cwtl
mov
add
jl
jbe
mov
imul
aad
out
mov
test
cmpsl
pop
inc
sbb
mov
bound
xchg
rcrb
mov
idiv
out
mov
fsubrp
sub
lds
inc
sarb
jg
rorl
add
push
cmpsb
sbb
fsubr
add
nop
mov
fwait
aaa
mov
flds
sahf
pop
cmp
mov
lods
add
andl
inc
icebp
xchg
cld
inc
lods
mov
loope
lret
add
cmpl
clc
mov
lahf
inc
pop
outsl
dec
int
jnp
vcvtpd2ps
sbb
mov
faddl
in
aas
cwtl
jp
dec
mov
jns
lock
adc
mov
dec
mov
dec
fs
mov
nop
cld
push
mov
addr16
test
mov
jo
ja
inc
pop
sub
mov
xor
lret
xchg
xchg
mov
repnz
jg
adc
xor
add
jle
or
jns
stos
push
loope
leave
pop
div
inc
add
popf
in
jb
mov
mov
xor
rorb
imul
inc
lcall
xchg
sub
mov
imul
inc
adc
fmuls
jo
cli
add
mov
pop
sbb
dec
dec
aas
test
aad
lds
jne
push
xor
int
xchg
pop
pop
cwtl
add
mov
cmc
push
addl
and
xchg
or
out
xor
sub
xchg
add
int
jno
std
or
test
fisubl
push
testl
cmp
lcall
icebp
mov
sub
aas
leave
into
xor
xor
jmp
xor
dec
clc
mov
add
xor
pop
sub
and
roll
into
rorl
sarb
mov
gs
loop
cltd
mov
push
pop
mov
push
xchg
rorb
add
movsb
lret
repnz
cld
cmp
je
cmp
aam
into
call
add
adc
mov
or
mov
cmc
lea
pop
add
test
gs
push
adc
sahf
lret
movswl
popa
pop
mov
mov
add
push
les
push
or
add
je
dec
adc
shrl
loopne
test
mov
lods
sti
lcall
dec
jmp
push
mov
cs
or
adc
aas
push
mov
dec
test
in
add
add
mov
mov
cld
outsl
loop
stc
push
mov
sbb
cmp
loopne
repz
mov
or
dec
bnd
leave
jl
push
pop
push
pop
je
add
popf
sti
ja
jne
jge
inc
mov
add
sti
loope
mov
sbb
cli
rorb
fcmovnb
cmpl
xchg
jmp
lret
iret
aas
je
sbb
clc
sbb
sbb
pop
add
pop
jo
leave
add
push
jae
add
cmpsb
repz
test
add
xor
adc
mov
and
xchg
push
rcrb
jae
repnz
sti
inc
xor
popf
mov
loopne
jl
sbb
leave
mov
mull
fistpll
push
add
inc
mov
lret
and
mov
outsl
sbb
jmp
lods
cmp
cwtl
mov
push
jns
call
adc
inc
add
jae
mov
fs
sub
push
add
pmaddwd
push
jg
push
adc
adc
inc
mov
dec
mov
test
and
pop
mov
sbb
pop
sbb
movsb
jmp
test
cmpb
adc
adc
popf
push
sbb
pop
push
rol
cli
rclb
jge
sti
inc
je
and
fsubrs
dec
andb
ds
push
adc
lret
sub
ret
lahf
push
aas
push
adc
add
mov
xor
outsb
std
je
inc
pop
repz
mov
dec
jne
popf
movb
call
pop
xor
into
inc
lods
int
sub
lea
push
cmp
add
cltd
jo
sbb
mov
enter
icebp
xor
andl
add
pop
mov
mov
mov
into
stc
mov
pop
jns
or
ret
mov
repz
dec
sub
aas
inc
into
dec
cmp
outsb
pop
lea
sub
sbb
ja
add
sub
mov
adc
shll
imul
sub
xchg
push
insl
sbb
push
pushf
jbe
pop
cwtl
and
fwait
inc
icebp
leave
mov
lea
dec
into
pop
dec
inc
jb
jnp
sub
or
fsubs
repz
add
js
insb
das
bound
and
cmp
call
mov
cmc
add
add
mov
push
lds
aad
jp
inc
dec
jmp
icebp
add
mov
sub
or
jbe
and
jg
lea
add
pop
rcl
sbb
or
mov
pop
pusha
out
test
add
insl
xchg
test
and
ud0
imul
push
ja
subb
orb
rorl
push
or
mul
mov
cmp
add
xchg
add
mov
outsl
mov
into
push
outsl
cwtl
or
mov
enter
pop
adc
add
popf
pop
xchg
clc
push
xchg
add
or
xor
push
jmp
cmp
sbb
mov
mov
sbb
repz
loop
call
xchg
aad
jbe
int
add
ja
loopne
xchg
orb
push
mov
inc
test
jae
lret
pop
adc
dec
jg
cmpb
pop
add
push
jo
cmp
xchg
leave
add
das
std
cs
pop
add
mov
add
ret
jmp
inc
mov
dec
lods
mov
dec
jmp
dec
inc
jne
push
hlt
xchg
stos
mov
movb
mov
mov
mov
test
pop
mov
sub
and
es
jp
xchg
cltd
in
push
adc
mov
lcall
inc
add
add
fcoml
pop
les
cmp
lcall
daa
pop
arpl
dec
fmull
push
sbb
repnz
sub
inc
mov
inc
je
push
mov
mov
icebp
les
inc
inc
popa
or
shr
adc
flds
jo
fldl
adc
inc
mov
inc
pop
dec
xchg
cltd
add
std
mov
pop
inc
add
stc
jnp
add
dec
dec
pushf
add
sti
xchg
add
popf
outsl
lds
push
fwait
aaa
add
fs
adc
sahf
sub
or
repz
enter
or
js,pt
sbb
dec
adc
adc
pushf
out
mov
add
xor
mov
cmp
dec
lock
lock
mov
sti
ret
call
xor
mov
bound
push
int
add
xchg
clc
add
sbb
icebp
pop
ret
stos
mov
scas
jae
mov
sub
push
dec
mov
in
fs
dec
jg
inc
jo
mov
rolb
ret
pop
outsl
mov
sub
les
push
adc
outsb
ret
add
xchg
ficompl
lahf
test
stc
mov
jmp
add
sahf
pop
scas
jge
lock
cmp
mov
ljmp
addr16
in
add
xlat
xchg
rorb
sti
repnz
pop
push
adc
pop
add
ljmp
or
lret
or
lldt
xchg
std
incl
outsb
nop
bound
mov
aad
add
stos
xor
or
rorl
inc
nop
aas
sub
push
add
add
sbb
push
mov
add
dec
addb
leave
xor
js
in
xchg
mov
pop
add
outsb
fimull
add
lds
mov
jg
mov
push
lret
add
inc
div
in
lea
cmp
sbb
xchg
clc
and
push
fsubrl
adc
popf
pop
fimull
lea
je
jbe
mov
jle
clc
dec
js
add
test
andb
movl
loop
and
lods
lahf
enter
rorb
sbb
aas
adc
ret
xor
add
inc
push
rclb
add
mov
sbb
test
add
adc
add
push
mov
popf
pusha
push
add
std
loopne
add
mov
into
mov
xchg
stc
pop
cltd
dec
push
mov
punpckhwd
imul
add
jno
push
jge
addl
inc
sub
jae
dec
mov
iret
adc
je
mov
ror
xchg
testb
mov
sbb
daa
cmp
add
call
mov
add
enter
xchg
xchg
adc
aad
jmp
pop
lahf
mov
add
stos
rclb
xchg
mov
jmp
inc
sti
push
jne
bound
xor
add
dec
dec
inc
or
mov
jmp
or
stc
pop
daa
add
mov
jl
inc
popf
add
jmp
add
or
clc
cmpb
jg
jb
or
cmp
fs
pop
fdivrl
cmpsb
ja
imul
arpl
adc
aas
add
dec
fildl
add
mov
sbb
lock
add
adc
push
push
push
add
push
call
je
cli
lret
inc
lds
iret
add
dec
inc
adc
mov
movsl
sbb
sub
lret
call
decb
push
pop
mov
into
shlb
mov
cmp
cmp
mov
sti
fisttpl
sbb
push
add
scas
sub
lds
mov
mov
popf
cmpb
cld
push
lret
and
lahf
mov
push
inc
jno
call
add
lcall
sbb
add
aam
mov
pop
inc
push
bound
or
dec
orl
push
add
xchg
scas
or
aaa
int3
xor
sbb
pop
loope
test
cmp
jecxz
enter
pushf
sbb
sub
or
inc
or
iret
imul
in
mov
dec
dec
enter
jecxz
dec
jl
outsb
add
dec
xlat
sub
and
int
pop
lret
jp
mov
or
adc
cltd
dec
filds
popf
inc
loopne
mov
lea
fs
nop
mov
mulb
int
push
mov
fs
fmulp
dec
mov
mov
jnp
lret
push
fildll
mov
cmovno
imul
and
orl
aas
jp
sub
add
pop
jle
mov
in
ljmp
mov
negl
into
mov
mov
xchg
ljmp
xchg
add
inc
hlt
pop
or
xlat
add
jmp
call
adc
rol
inc
add
scas
loope
lods
iret
lds
push
push
or
sbb
fnstcw
ret
sbb
adc
cmp
loop
test
aas
sti
cmc
adc
dec
bsf
mov
pop
test
fwait
push
cli
xchg
dec
adcl
dec
mov
add
dec
insl
repnz
adc
lret
aad
pop
pushf
inc
stos
or
negb
sbb
or
push
fwait
adc
add
test
js
push
and
stc
mov
xchg
dec
stos
adc
orb
inc
cmp
mov
add
leave
clc
pop
jle
pop
inc
pusha
lahf
add
fisttps
add
clc
lods
stc
and
add
in
xchg
adc
mov
mov
loopne
test
arpl
stos
stos
hlt
mov
int
pop
rorl
mov
pop
pusha
pushf
cmp
xchg
fnsave
xchg
das
mov
test
aam
adc
xchg
jns
outsl
inc
inc
das
cmp
je
xchg
adc
cwtl
pop
add
cmp
enter
and
inc
xchg
ret
dec
cmpsl
xor
pusha
add
leave
rcll
add
lds
add
jnp
repnz
idivb
add
mov
test
frstor
adc
pop
sbb
dec
add
sti
addr16
jg
push
mov
clc
lds
xchg
ljmp
popa
mov
js
aaa
ds
gs
gs
xor
jecxz
shll
mov
arpl
daa
arpl
iret
cmc
jbe
inc
xorb
insl
mov
add
inc
push
xor
pop
test
and
aas
mov
outsb
ss
dec
shll
jge
mov
lahf
lret
xor
aaa
orb
add
pusha
stc
sbb
mov
pop
and
sbb
loopne
sti
add
add
xor
jmp
mov
bswap
mov
xor
mov
cmp
lods
inc
lahf
xchg
mov
nop
dec
or
add
xor
sarb
aad
sub
mov
jecxz,pt
add
and
imul
clc
std
test
mov
imul
jge
pop
aaa
add
insl
adc
xor
mov
mov
dec
add
or
vminsd
repz
fiadds
bound
mov
clc
sbb
mov
mov
add
test
jbe
daa
dec
cmpsb
add
add
add
xor
popf
mov
imul
iret
addr16
push
add
stos
push
inc
lcall
xchg
cwtl
xchg
shl
push
fs
pop
add
add
adc
add
adc
flds
mov
jg
lahf
daa
dec
push
add
or
lcall
inc
mov
jmp
add
mov
sub
jg
mov
aas
add
adc
mov
mov
dec
pop
ficoms
mov
movsl
in
fists
dec
icebp
xchg
xor
cmp
das
xor
out
xchg
push
push
movsl
dec
mov
pusha
jb
pop
ret
daa
sbb
lea
clc
pop
fidivl
stc
addr16
faddl
push
cmc
add
cli
sti
enter
push
or
sbb
xadd
hlt
int3
pop
ds
and
jg
stos
mov
loope
jle
shrb
ja
andb
adc
in
add
push
xor
dec
jp
sar
lret
ret
and
add
and
dec
inc
pop
clc
lea
add
mov
push
add
movw
sti
xchg
dec
dec
pop
cli
push
add
mov
mov
enter
jmp
shll
sub
push
in
add
call
stos
jge
and
insb
mov
cmpl
add
cmp
andb
mov
stos
sarb
ret
call
sub
sbb
clc
xchg
inc
js
add
std
adc
jb
add
fildll
add
cmp
mov
sbb
call
icebp
inc
faddl
dec
outsb
lock
jns
sbb
out
call
and
add
mov
jne
or
jnp
call
bound
ror
leave
out
push
popl
push
and
inc
mov
cmp
sub
mov
add
or
pushl
aad
add
mov
jl
rolb
add
nop
inc
or
cld
mov
insb
adc
xor
roll
or
add
repz
add
cmpb
inc
rcl
mov
inc
sbbb
lret
nop
sbb
pop
stos
jg
add
add
lods
xchg
add
push
add
pop
mov
mov
sbb
push
testb
xchg
xor
je
sub
dec
xchg
xchg
mov
les
stos
into
iret
xor
mov
xor
lret
pop
add
xchg
mov
inc
stc
outsl
add
adc
xchg
ret
call
lahf
divl
add
inc
test
sarb
pop
lcall
test
lock
mov
cmpl
or
rorl
mov
mov
sub
xchg
xchg
add
push
pop
sbb
lcall
add
loop
std
cli
jmp
push
add
cwtl
hlt
fdivs
and
imul
sub
rclb
scas
and
fadds
cmp
mov
or
lret
mov
fdiv
adc
sub
js
fnsave
lock
fdivp
pop
xchg
sbb
add
push
call
pop
imul
mov
and
shll
adc
push
negb
push
out
dec
aad
cmp
test
into
pop
stc
mov
scas
mov
xor
fs
lock
and
mov
lcall
push
clc
loopne
adc
sbb
xor
daa
adc
xchg
jmp
add
or
add
jle
inc
push
addb
call
ja
sar
mov
mov
dec
lock
psubw
call
pop
xor
sti
add
inc
mov
mov
fcomps
add
int3
and
pushf
cmp
lea
xchg
jnp
pop
dec
sbb
into
mov
add
daa
cmpsl
adc
jge
jg
push
push
add
sub
addr16
sbb
dec
in
testl
out
out
ss
add
lock
iret
insb
aaa
call
lds
mov
xor
sbb
jnp
push
frstor
inc
dec
pop
pop
add
js
inc
mov
xor
and
idivb
sbb
add
jl
aam
push
mov
clc
adc
and
inc
popf
mov
pop
decl
sbb
dec
sbb
sti
loopne
lds
jno
xchg
movsb
sub
inc
mov
sarb
or
mov
in
loopne
sbb
mov
jp
pop
add
push
outsl
pushl
mov
lahf
jae
roll
adc
dec
pop
std
jl
adc
cli
jg
push
loopne
cmp
add
dec
mov
out
icebp
push
jmp
xchg
rcr
fidivrl
dec
int3
pushf
pop
sbb
sbb
dec
mov
dec
jmp
rcrb
add
call
mov
fcoms
jg
mov
aad
adc
pop
sbb
bound
popf
inc
add
adc
push
mov
inc
stos
cmpsb
sti
icebp
jae
outsl
add
lret
mov
daa
loope
jg
cmpl
sbb
xchg
add
mov
sub
insb
shr
imul
mov
cmc
andl
push
jb
push
push
add
into
adc
mov
cli
or
push
add
adc
pushw
mov
adc
pop
lods
fwait
add
lods
or
push
call
mov
mov
fwait
add
int
xor
add
sub
push
stc
clc
mov
jmp
lahf
or
mov
mov
xchg
pop
dec
pop
add
pop
push
aaa
mov
xchg
dec
push
cmp
jle
rcr
adc
cmc
and
mov
dec
cmpl
push
popa
dec
add
fucomip
mov
test
cmp
cltd
sub
xlat
mov
jle
inc
fwait
je
out
add
rcr
cmp
fdivl
andb
push
push
insb
jno
and
ffree
add
xor
push
push
xor
sub
or
add
stc
mov
xchg
dec
cli
jbe
mov
fcmovne
sub
sbbl
fiaddl
test
dec
fwait
sbb
mov
movsb
jmp
mov
xchg
or
xlat
std
lds
or
add
into
test
cmovnp
dec
add
mov
push
hlt
lret
ja
idivl
xchg
ret
mov
divb
jg
out
mov
std
add
and
pop
mov
movsb
pusha
stos
mov
add
or
out
arpl
sbb
leave
pop
push
add
add
adc
push
add
fwait
out
xchg
jp
pop
add
and
dec
add
xor
call
fs
rcrb
outsl
addr16
cmpsb
and
mov
push
movsb
outsl
add
cmp
shlb
cli
rclb
dec
cld
int3
int
inc
addl
inc
mov
add
mov
adc
xchg
cld
mov
filds
add
fwait
ss
add
insl
cmc
aam
fcomp
mov
adc
add
mov
je
xor
mov
mov
data16
add
add
mov
add
ljmp
cld
popf
cmc
xchg
mov
inc
inc
out
imul
jecxz
enter
cmc
addr16
push
mov
push
jle
hlt
daa
in
jp
xchg
lock
popa
test
mov
add
push
jae
mov
mov
sbbl
imul
pop
lcall
popa
xchg
lea
call
ret
aas
adcb
push
rcl
test
clc
dec
push
and
sbb
incb
jg
fistl
inc
mov
mov
pop
add
in
icebp
cmp
or
or
mov
test
mov
mov
cmc
imul
pop
mov
enter
sbb
add
mov
hlt
lcall
test
sti
or
mov
mov
iret
call
hlt
and
add
mov
xor
add
xchg
cmpsl
adc
add
ret
mov
lods
idivb
outsb
iret
and
call
mov
xchg
push
fadd
rolb
scas
pop
mov
sub
push
jbe
and
mov
add
or
push
ljmp
aas
in
mov
loopne
jl
ret
push
nop
int3
xchg
sub
cmp
push
and
lods
fwait
sarb
mov
sub
mov
xor
cmpsb
sahf
jno
int
mov
add
mov
push
mov
inc
jmp
jl
jno
push
rcrb
cmpsl
adc
mov
addr16
inc
add
neg
mov
in
add
sbb
cmp
repnz
fists
push
adc
mov
adc
leave
es
jbe
lock
cmpl
pusha
call
mov
movsb
mov
aam
shlb
rorl
lret
add
mov
js
test
mov
std
sub
adc
mov
pop
adc
sarl
or
ljmp
test
sti
add
aam
out
mov
add
gs
je
push
movl
push
xlat
or
mov
jnp
lahf
push
jne
psrlq
das
jno
in
mov
in
sbb
imul
lcall
idivl
push
enter
movb
arpl
and
inc
sbb
mov
push
and
out
xchg
ds
pop
add
out
sbb
aas
push
outsl
add
jl
clc
mov
call
mov
mov
push
sbb
mov
push
paddsb
inc
sarb
cmp
adc
or
mov
or
push
mov
sbb
jge
sub
mov
lcall
push
dec
jb
call
mov
jae
mov
push
aas
adc
dec
sub
jmp
push
cmc
test
std
jo
xor
scas
lret
push
mov
test
stos
mov
add
add
dec
mov
sub
sbb
aam
add
inc
sub
mov
dec
hlt
jne
mov
pop
pop
in
add
daa
mov
push
outsl
fs
xchg
cmp
mov
push
push
pop
call
inc
add
or
leave
push
sahf
mov
pop
fs
cld
or
sbb
mov
outsb
js
and
mov
push
dec
shlb
pusha
rcll
loopne
fadds
jge
popf
lret
mov
xchg
ljmp
add
mov
cmp
test
add
inc
call
pop
lods
lahf
out
mov
aas
repz
cmp
push
jns
in
add
pushf
or
add
in
add
or
dec
or
out
dec
push
add
loopne
rorb
xchg
lea
mov
adc
mov
addb
push
mov
inc
insb
sbb
add
xor
pop
add
in
jno
mov
dec
add
addr16
test
sar
dec
test
dec
add
call
add
pushf
mov
jbe
pop
add
mov
push
add
or
jbe
cli
popa
pusha
add
jno
jb
mov
inc
or
mov
pop
jmp
fidivrs
sahf
pop
rorb
aas
jl
adc
into
sub
aas
cmp
enter
mov
mov
negb
cmp
lods
add
mov
push
push
jge
mov
mov
ja
sub
add
inc
mov
sbb
mov
push
enter
jne
jge
inc
adc
or
imul
rorl
or
pop
jns
test
fwait
mov
mov
pop
mov
ret
les
xchg
scas
clc
bnd
int3
add
insb
testl
mov
fmul
pop
mov
lret
add
sub
inc
add
negl
out
push
nop
scas
rolb
mov
push
cld
push
add
sub
adc
aas
push
cwtl
ficomps
lret
mov
data16
xchg
mov
xor
sbb
popa
jge
icebp
leave
xchg
loopne
inc
arpl
jge
repz
cmp
add
add
outsl
xor
add
dec
cmp
mov
sub
xchg
jg
or
cmp
lret
aas
clc
je
pop
mov
fmuls
mov
mov
pop
lcall
lock
mov
or
dec
sahf
add
xor
or
nop
stos
mov
fbstp
test
adc
xchg
dec
sbb
out
push
add
add
cld
cli
push
icebp
insl
stc
xchg
jmp
arpl
push
fstp
push
ror
ja
push
add
adc
in
xor
scas
sub
out
add
mov
lds
icebp
cmp
sti
add
xchg
outsb
pop
xchg
into
xor
and
fwait
mov
add
dec
pop
inc
icebp
push
add
jno
adcl
push
inc
arpl
push
cwtl
movsb
sti
inc
leave
lods
ss
aas
inc
mov
ret
addr16
dec
insb
add
adc
mov
xlat
add
lret
clc
mov
sarb
ljmp
push
insb
dec
inc
cwtl
out
fisubrs
ret
cmp
xor
adc
cmpsl
pusha
adc
mov
je
pop
or
mov
cmp
dec
mov
jg
rolb
fnsave
or
fbstp
incl
or
ss
cwtl
xor
shl
mov
xchg
push
push
lret
pop
aas
cmp
dec
arpl
enter
test
je
xor
and
mov
pop
iret
push
pop
lret
add
mov
xor
adc
imul
aas
mov
lods
aas
add
lock
shll
das
mov
into
imul
in
add
js
jo
outsl
xchg
add
mov
hlt
clc
mov
enter
rorb
cmp
mov
jnp
int
enter
fmull
nop
add
inc
xor
inc
lods
cmc
push
xchg
dec
hlt
outsb
mov
cmp
xchg
sub
call
mov
add
cli
inc
repnz
aam
pop
lea
lahf
aaa
jle
mov
mov
push
mov
xor
jmp
mov
test
popf
add
or
xchg
fnstsw
jg
test
xchg
sbb
add
xor
add
decb
push
add
pop
ficoms
pop
pop
push
inc
jae
dec
add
push
pop
gs
adc
ror
icebp
jno
add
fwait
adc
stos
add
jp
rolb
sub
push
stc
add
ljmp
inc
jnp
push
enter
mov
out
insl
in
add
sub
movl
push
mov
sbb
in
mov
stos
cmp
ret
sbb
mov
sbb
lret
add
mov
and
pop
rol
arpl
sarb
xchg
push
cmp
xor
fbstp
push
aad
or
mov
push
cltd
pop
pop
push
mov
push
into
int
scas
ljmp
xor
mov
dec
lock
dec
shlb
pop
es
push
pop
add
jo
roll
btc
or
push
cmp
sbb
test
or
pop
je
aas
pop
pushf
imul
out
mov
jae
inc
push
or
adc
mov
repz
bound
sbb
sbb
sub
inc
pop
xchg
adc
clc
pop
loopne
mov
add
popf
and
mov
test
ret
pushf
sub
arpl
fwait
addl
iret
mov
mov
sbb
add
scas
dec
add
ret
or
loopne
add
ds
lock
push
cld
add
pop
push
repnz
add
pop
in
orl
or
xor
sarb
jp
push
fisubs
cmp
push
add
int3
push
arpl
mov
add
or
and
lds
mov
pop
repnz
xor
and
adc
and
mov
mov
call
mov
pop
jg
dec
push
add
sti
mov
add
xchg
movb
dec
and
pop
jg
ljmp
lock
cli
mov
jmp
stos
push
std
add
int
jno
mov
fldt
push
neg
dec
jle
pop
movsb
clc
sub
cli
filds
add
jae
jge
lock
je
sbb
jmp
push
gs
cmp
je
out
popa
iret
xchg
fwait
cmp
add
shr
adc
repz
push
mov
lea
clc
dec
out
jge
mov
shl
iret
or
pop
inc
shlb
jbe
cmpsb
dec
mov
arpl
add
mov
fists
add
mov
ss
sub
or
jmp
decl
cld
push
nop
xchg
pop
push
mov
sub
cli
mov
jne
push
inc
lahf
aas
mov
loope
aam
cmc
dec
call
jmp
aaa
xor
ror
sub
loopne
iret
pop
test
sbb
out
inc
push
stc
add
call
mov
sbb
dec
sbbb
lret
inc
or
mov
and
add
scas
add
icebp
mov
orl
xchg
xorb
sub
mov
mov
jno
push
rorl
cmpsl
mov
popf
push
mov
pop
shl
mov
cmp
aas
jle
sub
or
mov
aam
lds
mov
into
shll
xor
xchg
add
icebp
insb
daa
jnp
add
push
and
je
js
push
push
add
nop
rorb
dec
mov
loop
repz
js
add
mov
add
push
pop
mov
inc
ljmp
or
jae
jbe
sahf
fistl
pop
mov
mov
push
pop
pop
mov
cli
sub
pusha
out
cmp
aas
dec
sbb
push
ds
shlb
pop
jne
in
inc
aas
mov
shl
add
lock
ja
faddl
out
loopne
out
and
push
pop
push
push
xchg
dec
sub
dec
mov
xchg
rorb
repz
je
sub
pop
push
into
mov
in
push
xchg
add
inc
test
mov
inc
outsb
pop
dec
pop
lahf
adcb
xchg
push
flds
sub
outsb
cmpsl
cli
lret
dec
rcl
movl
out
xchg
js
push
or
add
out
pop
push
sahf
pusha
sti
add
lahf
or
andl
add
cltd
scas
lea
or
dec
add
enter
ror
stos
add
push
loop
aas
or
add
inc
pusha
enter
sti
dec
jg
out
xchg
ror
push
test
adc
mov
jmp
test
movsb
inc
dec
push
mov
pop
iret
mov
xor
add
push
loop
cmp
add
fsubs
add
jbe
cmp
mov
roll
inc
popf
roll
das
outsb
mov
add
bound
aas
push
enter
sub
clc
loop
outsl
or
data16
aam
jnp
cltd
pop
mov
add
fbld
cmpl
cli
shrl
lret
loopne
xor
dec
sbb
add
sbb
enter
add
lds
outsb
out
call
imul
pop
add
movl
adc
dec
lahf
xchg
and
inc
js
sub
add
ror
add
xor
pop
clc
push
mov
incl
fwait
sarl
cmp
push
outsl
div
pop
test
movl
jge
adc
fimuls
push
dec
add
sahf
inc
jnp
pop
pop
sbb
dec
jg
xlat
imul
je
js
jl
pop
lods
lods
lcall
int
dec
jl
js
push
jl
lahf
out
fwait
add
fnsave
popf
loopne
loope
inc
mov
dec
mov
fdivs
sti
pushf
iret
stos
xor
push
aaa
les
clc
fistpll
mov
inc
lods
add
push
lds
arpl
adc
lahf
push
rcrl
sbbl
xor
push
push
pop
lea
sbb
lahf
xor
pusha
leave
mov
insb
pop
inc
pushl
lcall
scas
dec
jle,pt
sub
lahf
mov
mov
jmp
imul
movsb
inc
gs
xchg
fnstcw
icebp
mov
rcrl
and
dec
imul
mov
das
mov
fdivrp
out
je
jge
mov
loopne
andb
lods
adc
enter
mov
sub
pop
adc
add
jae
arpl
add
shlb
mov
mov
stos
outsl
push
mov
aaa
and
popf
push
mov
mov
enter
jg
mov
shrl
mov
mov
adc
faddl
push
hlt
icebp
inc
rcrb
add
sub
mov
push
ret
cmpsb
call
scas
mov
push
addr16
xchg
lret
sub
mov
or
jp
sbb
test
les
add
jbe
mov
leave
mov
jno
pop
inc
jne
lods
add
enter
adc
out
push
popa
lds
push
inc
in
gs
sub
repz
mov
mov
mov
mov
add
fwait
and
add
shlb
mov
out
mov
xchg
pop
mov
nop
incb
enter
jno
imul
adc
aaa
popf
dec
mov
pop
nop
scas
inc
mov
dec
faddl
cmp
inc
lret
lea
test
loopne
shrl
in
adcl
xor
fidivl
in
fs
mov
dec
in
adc
sub
mov
iret
je
or
rorl
xchg
in
sti
imul
packsswb
add
pop
call
add
or
jno
push
pushf
out
popa
add
inc
mov
out
fs
or
inc
rclb
lods
jmp
test
and
push
cmpsb
push
mov
repnz
js
inc
mov
add
jmp
mov
add
adc
pop
arpl
add
and
aad
jg
and
xor
mov
add
imul
push
xor
ss
bound
mov
push
lret
add
pop
xchg
sub
and
lcall
nop
std
or
and
loopne
cmpsl
in
ja,pt
mov
pushf
dec
jecxz
xor
or
and
mov
inc
dec
fdivrl
jg
jae
mov
shr
add
bswap
les
fbld
test
jo
mov
testb
pop
push
dec
xorl
test
cs
jl
add
add
mov
add
adc
sbb
aam
scas
pop
pop
or
rclb
out
sbb
iret
jmp
mov
cmpl
mov
add
jne
data16
iret
rcrl
add
out
add
xchg
imul
repnz
dec
jg
sub
mov
pop
inc
and
add
aam
xor
push
add
adc
fs
movsb
mov
je
pop
pop
addl
xor
pop
call
mov
jge
fidivrs
loop
ja
and
cmc
push
or
xchg
xchg
cs
int3
mov
aam
mov
adc
popf
dec
sbb
jne
add
iret
in
sarb
inc
push
not
add
cmp
sub
loop
mov
or
mov
inc
hlt
add
add
lods
int
adc
add
mov
add
test
push
dec
mov
mov
xchg
test
cmc
mov
fnstcw
jne
lret
lahf
add
add
mov
fidivs
cmc
add
cltd
subb
lock
add
cmp
inc
and
lea
mov
cld
sub
mov
cmpsb
push
mov
push
sbb
mov
test
jbe
sbb
mov
add
mov
cmpsl
add
mov
fldt
xchg
aad
ds
outsb
popf
addr16
fisubs
arpl
aaa
mov
push
jg
xchg
sbb
mov
lret
enter
push
into
mov
sbb
adc
je
lret
add
inc
or
mov
adc
movsl
push
pop
sbb
pop
add
add
cli
push
dec
enter
bound
orl
pop
and
add
enter
icebp
test
dec
xor
add
add
jnp
std
sbb
mov
pop
jmp
cld
add
test
ret
inc
cmp
add
in
les
mov
dec
add
sahf
cmp
mov
xor
pop
inc
movsl
insb
add
cld
daa
xor
mov
scas
mov
pop
add
imul
add
testl
add
fcomip
jge
and
fwait
or
lock
pushf
inc
mov
popf
incl
out
add
das
mov
adc
stc
lods
xor
push
and
sbb
aas
iret
add
sbb
icebp
dec
mov
pop
mov
cltd
loopne
lahf
int3
add
std
push
xchg
cld
mov
dec
fld1
fcmovne
mov
jae
sub
mov
xchg
sbb
loopne
or
inc
pop
mov
jmp
cmp
mov
insb
inc
mov
mov
inc
push
dec
inc
lods
and
pop
push
add
ds
and
outsl
call
pop
das
jp
cmp
push
add
add
dec
push
dec
dec
jae
add
pop
jp
inc
add
add
add
add
add
dec
add
xor
xor
add
push
add
add
add
dec
je
add
add
push
inc
add
add
addr16
add
add
insb
inc
push
add
jo
add
add
add
popa
add
add
add
js
push
insl
add
add
xor
jns
add
gs
add
add
cmp
jnp
lock
xchg
add
mov
cmp
call
insb
mov
pop
cmp
fwait
jmp
mov
add
repz
lods
ss
repnz
stos
mov
mov
adc
mov
in
add
stc
mov
xchg
pusha
add
test
jnp
pop
mov
mov
xorb
sbb
aaa
pop
jo
adc
js
scas
and
jp
mov
jb,pn
popa
je
mov
inc
out
adc
mov
xchg
sbb
xchg
mov
hlt
mov
jo
inc
dec
add
cwtl
arpl
fsubrl
stos
mov
or
mov
mov
xchg
leave
mov
and
add
sahf
jl
adc
cmpsl
das
xor
sbb
imul
mov
cmp
push
sahf
lods
das
pop
ja
xor
js
pusha
cmp
mov
aaa
sub
test
jo
std
enter
nop
ja
fcmovnbe
lea
mov
cmp
pushf
sahf
test
fdivs
fcmovnu
popf
push
scas
test
nop
cmp
loopne
xchg
das
in
pop
sti
mov
cwtl
cmpsb
call
in
sahf
push
fcomi
lea
cld
int3
sahf
test
clc
ja
popf
adcb
cmp
mov
add
xor
mov
popf
mov
cs
testl
adc
int3
imul
shlb
mov
add
scas
out
mov
sbb
clc
sbb
mov
push
out
fsubr
stc
loopne
mov
mov
call
mov
mov
stos
mov
dec
hlt
jne
pop
mov
call
mov
aas
aas
lcall
inc
incl
push
pop
decb
or
push
call
mov
add
add
stos
lock
mov
das
dec
clc
cmpsl
cld
cmp
ss
stos
popf
and
cld
cmp
cld
dec
pushf
std
sub
jb
add
mov
or
or
lods
adc
mov
cs
or
xor
xchg
or
cmp
adc
sbb
sbb
and
ss
ret
xor
sbb
sahf
and
and
ja
jnp
popf
push
scas
push
mov
shlb
mov
mov
push
fistl
pop
jnp
popf
pusha
scas
fs
sti
adc
pop
dec
pushf
mov
pusha
test
xor
insb
sahf
jo
je
lock
insb
mov
xor
sub
jo
je
fstpt
jl
xorb
sahf
fsubrl
jnp
lds
out
mov
test
sub
xor
adc
ss
mov
sub
or
xor
cmpsl
cmp
dec
mov
cmp
mov
cmp
std
jge
xchg
cmp
inc
add
test
mov
jp
fisttps
push
inc
or
mov
or
scas
mov
mov
mov
enter
jne
cmp
test
mov
mov
jns
cmpsb
ja
inc
xor
mov
mov
lcall
mov
pushf
lahf
and
mov
add
lea
xchg
rorl
rorb
dec
mov
rol
cmp
sbbl
cmp
mov
push
mov
mov
lret
addr16
xor
test
scas
cli
mov
mov
push
inc
or
fimuls
leave
push
mov
daa
mov
out
mov
mov
sub
movsb
mov
scas
mov
sarl
mov
rcll
mov
sub
cli
cmp
lcall
sahf
in
jne
das
in
mov
mov
dec
stc
sub
cmpl
cmpsb
adc
xchg
mov
repnz
xchg
sub
enter
xchg
in
adc
jno
or
scas
cltd
mov
adc
popf
mov
arpl
sahf
push
pop
test
ljmp
jne
subl
enter
mov
gs
mov
adc
sbb
pop
mov
fldenv
popf
mov
mov
mov
fistps
setne
sub
jmp
imull
cmp
in
std
ss
enter
popf
les
xchg
sahf
adc
push
mov
jmp
sub
loope
pushf
xchg
mov
popf
xor
test
pop
mov
push
std
mov
sbb
std
push
shrb
loopne
cmp
in
ret
call
in
push
movsb
bound
in
imul
jo
sti
loopne
cmp
call
push
jecxz
lock
hlt
push
scas
clc
lods
push
scas
adc
ds
stos
movb
xchg
xor
call
inc
sub
enter
mov
enter
add
imul
fbstp
imul
sub
pop
fdivrl
add
fmulp
sbb
lods
add
ficompl
cmp
mov
call
or
push
enter
lea
adc
mov
mov
jno
push
mov
stos
test
rol
sti
test
mov
push
push
mov
dec
call
add
sub
mov
outsb
ja
sbb
ret
xor
mov
mov
mov
jo
icebp
sbb
inc
sti
mov
push
or
mov
jp
das
dec
add
mov
call
sahf
cmpsl
push
adc
test
lods
mov
sub
pop
cmp
push
stos
out
adc
jno
sti
jne
mov
lods
add
mov
mov
mov
push
mov
inc
add
add
sub
ss
lock
sbb
sub
pop
xchg
call
jns
push
out
lods
push
cld
mov
push
xchg
inc
add
test
lahf
push
xchg
cmp
jp
xchg
sbb
sub
es
lods
cli
lret
cld
aaa
cli
mov
fistl
xchg
cmp
movsb
cs
xchg
scas
mov
sbb
stos
sub
insb
xor
mov
cmp
pop
dec
out
movb
ret
mov
mov
shr
add
lea
xchg
lahf
push
push
push
push
fwait
xor
aam
mov
jg
call
cmp
mov
push
stc
jbe
or
cs
sbb
test
outsb
push
jle
pop
xor
pop
fdivrp
cmpsl
xor
stos
or
enter
imul
xchg
lods
call
mov
sub
mov
movsb
fldcw
dec
cmp
mov
mull
aas
fimuls
cmp
dec
push
es
test
fdivrl
in
scas
pop
call
cltd
stc
in
ljmp
inc
xchg
sub
cmp
scas
and
rorl
icebp
cmpsl
test
or
jae
xchg
call
rcrl
jp
dec
stos
clc
fstl
sub
les
jecxz
push
icebp
inc
mov
mov
stos
push
clc
lea
data16
mov
push
add
cmpsb
lds
mov
xchg
cmp
xchg
push
les
imul
mov
mov
adc
sti
rcll
scas
and
sub
and
cli
cmp
mov
test
xchg
clc
out
sub
insl
inc
out
std
leave
inc
mov
sub
cmp
call
fcmovnu
mov
sbb
popf
pusha
cmp
mov
ret
jnp
xchg
pop
sahf
fbstp
pop
pushf
div
aaa
jbe
mov
out
mov
pop
seta
mov
sub
xor
mov
mov
or
inc
mov
add
cmp
mov
into
dec
daa
test
scas
sub
mov
add
movsb
pop
mov
pop
pop
pop
repnz
cmp
in
pop
cmpsl
push
mov
xchg
mov
sub
add
jbe
fstpt
pop
loope
push
mov
inc
repz
in
cmpsb
int3
decl
fldt
push
cmc
mov
sbb
pop
pushf
jmp
mov
popf
cld
push
fcmovbe
aam
ljmp
and
mov
add
jbe
pop
gs
push
jl
repz
and
xchg
or
add
pop
int3
mov
add
repnz
not
dec
mov
lea
in
lods
dec
in
das
mov
iret
inc
and
sar
add
movsl
pop
enter
add
movsb
mov
lock
loopne
outsl
cli
cld
das
js
scas
cli
jp
inc
int3
pop
lods
cmp
movl
sbb
inc
fdivrs
ret
sbb
pop
incl
aaa
add
out
or
loope
fwait
xorl
cmc
xchg
test
icebp
mov
sub
and
mov
fisttpl
insl
jae
bt
sti
jmp
mov
lcall
lods
mov
sub
and
insl
xor
mov
dec
xchg
cld
scas
ret
mov
mov
fmul
stc
mov
fdivrl
cld
ja
cs
mov
inc
ret
push
das
stc
push
cld
lods
mov
aad
fwait
addr16
idivl
mov
cli
scas
cli
sbb
push
cmpsl
test
mov
call
cs
cmp
ds
bound
and
sar
sahf
mov
in
jbe
sub
arpl
mulb
lcall
push
test
xor
hlt
sbb
jae
mov
aad
insb
aas
sub
push
inc
enter
dec
mov
mov
inc
test
pop
fmull
inc
mov
pop
lea
mov
mov
hlt
aas
pop
sbb
movsl
fs
mov
ret
pop
outsl
add
mov
xchg
or
out
inc
sbb
aam
test
lods
adc
push
test
sbb
das
and
mov
repnz
mov
mov
hlt
cs
or
cwtl
shl
stos
jl
not
or
mov
cmp
rorb
and
insb
test
imull
sub
jl
sub
cmp
movb
int
jp
call
inc
cmp
int
xor
xor
lock
in
repz
fisubl
pop
orl
cmpsl
add
cltd
inc
push
enter
mov
fsubr
mov
decl
call
cmp
mov
clc
mov
xchg
pusha
mov
xchg
add
sbb
out
dec
in
sahf
inc
popf
nop
out
push
dec
cmp
ja
mov
mov
fdecstp
cmc
mov
sub
inc
dec
xchg
mov
clc
push
mov
pushf
sub
jnp
arpl
rcrb
les
cmp
aas
push
mov
sub
xchg
sahf
mov
push
icebp
xlat
out
mov
lahf
jns
or
cmp
mov
add
loopne
sub
inc
shll
mov
mov
int
pop
gs
jno
and
push
lcall
push
push
push
jbe
jo
out
daa
dec
ds
mov
lods
daa
call
in
popf
insb
mov
dec
push
add
ret
or
in
ds
add
cmp
lods
sbb
dec
push
leave
cmp
inc
sahf
adc
in
in
mov
mov
fcomip
mov
pop
or
popa
pop
imul
sub
fistps
ficompl
xchg
cmp
pop
ja
jmp
xchg
and
mov
push
dec
jno
cmp
scas
call
mov
sahf
aas
arpl
xor
xor
rcr
sbb
out
aad
jl
sbb
jo
push
xchg
hlt
push
pusha
xchg
es
test
and
je
cmpsl
sbb
mov
test
in
outsl
lcall
dec
sub
push
add
adc
notl
lock
jnp
mov
mov
mov
lock
mov
sti
mov
jp
aaa
fiadds
adc
std
out
mov
aam
outsl
adc
sub
fstps
adc
js
mov
lret
sbb
inc
outsb
cltd
aas
mov
lods
and
sbb
dec
xlat
mov
xchg
jmp
out
jns
shlb
mov
call
cmp
push
xchg
call
mov
sbb
lock
xchg
adc
jg
sbb
xchg
clc
mov
mov
mov
pop
mov
mov
pop
aaa
ficoms
lcall
out
cmc
xchg
inc
scas
pop
jns
shrd
pushf
out
xchg
push
fstpl
ds
fimull
fisttpll
mov
sti
mov
pop
mov
sub
add
sahf
sub
stos
add
mov
call
adc
aad
pop
inc
adcl
sti
fcomps
xchg
dec
lock
dec
adc
mov
ja
std
push
in
sahf
test
jbe
movl
pop
jno
mov
sbb
sub
add
int3
lea
or
into
mov
repz
fisubrs
jl
dec
bsr
xor
jmp
mov
xchg
xchg
nop
cltd
mov
mov
xor
jge
mov
aaa
mov
xor
mov
push
xchg
push
add
movsb
sahf
mov
lods
cwtl
push
cmp
fstl
in
dec
cmc
jbe
sarb
mov
fwait
push
push
scas
fucomi
std
incb
mov
call
mov
rolb
in
xchg
sub
push
fwait
out
movsb
sbb
or
push
fwait
mov
imul
jmp
out
imulb
stos
call
test
adc
push
xlat
cmp
scas
fucom
lock
addb
cmp
shll
lret
xchg
int3
outsb
adc
and
ficoms
mov
scas
test
je
or
mov
nop
or
sbb
push
stos
add
jae
xor
sbb
mov
or
or
mov
dec
adc
aas
or
ficomps
mov
xchg
repz
in
fldl
mov
mov
mov
mov
test
loopne
sti
mov
stos
add
daa
ljmp
jmp
jnp
repz
inc
enter
xor
das
jno
lods
call
sub
xchg
pop
cmp
ret
inc
jnp
mov
cli
fcoml
jb
int
imul
lods
sub
leave
xlat
das
mov
fdivrs
movb
mov
mov
out
nop
mov
call
shrl
ficompl
subl
rep
jne
mov
int3
push
mov
jne
subl
mov
mov
dec
daa
pushf
jge
hlt
push
sahf
cli
call
xchg
fstl
mov
lods
call
sbb
or
rcll
in
and
mov
jne
push
cmp
jl
out
cmp
repz
mov
cmp
jne
xchg
pop
cbtw
and
lock
mov
fs
sbb
add
adc
test
push
pushl
xor
out
xchg
popf
add
push
out
movl
mov
mov
mov
ret
mov
push
cmpsl
jae
or
fwait
cmp
and
push
lea
fnstcw
sti
enter
push
mov
jns
and
aas
call
mov
stos
mov
stc
sahf
adc
scas
mov
add
div
fisubs
jp
rcl
adc
cmp
mov
lahf
mov
mov
addr16
mov
rcrb
jne
pop
test
xchg
xchg
je
mov
and
push
mov
push
mov
mov
test
iret
inc
movb
and
fldenv
push
mov
hlt
xor
in
lock
pop
testl
and
hlt
jnp
imul
ds
sti
scas
testl
lods
push
jo
cli
stc
inc
lcall
xchg
in
outsl
cli
dec
xor
mov
mov
lret
out
out
rdtsc
popf
fs
repz
rcrl
jp
das
pop
sub
inc
inc
sti
stos
fwait
add
xor
add
mov
or
jg
sbb
pop
jns
ffreep
mov
out
xor
sub
test
fsub
push
adc
out
jl
pop
into
clc
push
lods
lds
xor
mov
fsubrs
jne
movsb
rorl
mov
dec
or
dec
cmp
stc
sub
fwait
xchg
cwtl
stos
xor
out
call
jl
sbb
sub
add
mov
test
jne
push
push
fdivr
incb
pusha
repnz
lret
and
test
push
push
outsb
jo
clc
or
push
fnstcw
arpl
adc
sub
ret
sub
cmp
pushf
sub
jp
dec
and
cmp
push
mov
scas
dec
mov
inc
inc
jle
in
or
push
std
cmp
xchg
mov
fidivrl
sti
push
mov
lea
idivb
aaa
incl
mov
mov
fmul
push
scas
mov
std
mov
inc
push
mov
mov
pop
lods
out
adc
xchg
loop
stc
jge
cwtl
push
das
mov
call
adc
adc
jmp
jecxz
andb
lods
push
call
add
leave
nop
popf
aas
push
push
lods
aaa
cmp
sub
les
or
repnz
fdivrl
jl
xor
lret
dec
inc
aaa
mov
ljmp
es
stc
aaa
nop
jae
enter
int
lods
sahf
mov
fs
hlt
test
pop
add
cmp
push
sbb
jle
fucomi
cmp
jne
jae
sbb
lods
test
xor
enter
push
mov
jne
in
pop
mov
mov
arpl
push
sub
testb
cmp
call
mov
lahf
test
mov
pop
fsubrl
in
daa
data16
pushf
or
pop
in
cwtl
test
sub
aam
mov
mov
out
int
loope
es
sbb
aad
and
out
or
cmpsb
mov
mov
push
xchg
mov
out
mov
loope
mov
cmp
jno,pt
dec
pop
xchg
out
jle
mov
jge
ret
dec
lcall
aam
mov
adc
mov
leave
cs
mov
or
xchg
xor
data16
adc
mov
or
and
decl
sub
xchg
mov
fucomp
mov
adc
xchg
cltd
add
sub
rcrl
cld
lea
test
jno
add
mov
rorl
jmp
into
lcall
popa
sahf
add
popf
push
int3
aas
mov
lret
and
cli
xchg
push
mov
or
ds
mov
fmull
cmpsb
xlat
pop
pop
aad
hlt
push
push
sub
shrb
je
mov
ret
lahf
adcl
dec
sbb
subb
sbb
shl
sub
cmp
mov
lods
dec
movsl
mov
xor
adc
jne
sub
int
mov
ret
outsl
mov
fldcw
push
lock
add
inc
mov
rcll
mov
js
or
gs
test
dec
outsl
sbb
push
notl
mov
repnz
stc
push
ret
scas
enter
hlt
jle,pn
xchg
bound
leave
sub
jns
mov
lods
mov
fsub
fstps
movsl
stc
pusha
fwait
cwtl
cmp
pop
sti
mov
fnsave
cmp
lea
push
push
cmc
push
dec
cmp
pop
movsb
mov
notl
fdivrs
sbb
push
push
jnp
call
cmp
jg
call
loopne
in
mov
cli
dec
add
jl
in
adc
fs
sbb
mov
xchg
mov
pop
iret
sub
xor
dec
fisttpll
xor
xchg
cmpsb
or
repnz
into
das
xchg
jp
fdivl
enter
mov
mov
pushf
repz
ret
fld
repnz
and
hlt
mov
sub
inc
cld
stos
shrb
fsubrp
inc
mov
jae
mov
adc
sbb
mov
popf
add
sub
adc
in
stos
push
incl
sub
xchg
mov
inc
dec
xorb
mov
aas
mov
inc
xor
sbb
jo
sub
rcl
popf
xchg
jns
mov
push
sub
mov
mov
ret
push
lea
xchg
loopne
mov
incb
mov
mov
mov
cmp
inc
mov
daa
in
test
xor
insl
sub
mov
xchg
lcall
outsb
sub
outsb
dec
dec
sbb
xor
jle
paddusw
jecxz
lods
push
leave
xchg
jae
test
test
int3
ficompl
sub
jo
cmp
push
pusha
sub
push
sbb
loop
stos
push
popa
mov
mov
add
in
sub
push
hlt
push
mov
xchg
test
mov
jg
xor
dec
pop
sbb
mov
or
lea
int
mov
call
push
xchg
adc
jge
jge
cmc
in
imul
push
cmp
es
dec
pop
sub
mov
sub
push
xchg
or
dec
jns
mov
mov
pop
ljmp
add
xor
inc
dec
mov
outsb
sar
loopne
fisttpl
sub
inc
sets
sbb
clc
in
fsubs
lcall
popa
sub
out
and
or
pop
lahf
jbe
lret
push
outsb
mov
in
add
inc
mov
push
push
mov
push
sub
rorb
call
movl
repz
cmc
dec
iret
xchg
adc
sbb
test
scas
or
movsl
in
adc
insb
fstps
sub
push
pop
lea
cmp
negb
or
imul
inc
pop
and
arpl
jmp
push
jl
or
jge
ss
popf
scas
push
sub
popa
aas
push
lahf
sti
mov
call
and
xchg
sbb
sub
push
mov
pop
xchg
cmp
aaa
mov
pop
lods
jne
xlat
ja
mov
or
xor
push
mov
fsubs
jns
enter
rolb
and
mov
shrb
cmp
ret
adc
jmp
or
mov
dec
out
mov
jmp
int3
cmp
les
mov
cmpsb
test
movsb
cmp
mov
ja
fistl
mov
cmp
xor
cmp
out
ja
fisttpl
dec
movsb
arpl
sarb
cld
pusha
sahf
fs
push
lea
mov
cmp
addb
jne
inc
mov
jmp
adc
pushf
mov
xchg
in
or
stc
ret
sbb
push
lret
xlat
mov
fsubs
dec
ret
in
int3
mov
idivb
lea
insl
jb
sub
mov
jae
sub
dec
rol
movsl
xor
jo
mov
mov
shll
sbb
mov
pop
push
cmc
ss
push
push
or
sbb
lock
xchg
xor
pop
js
in
cmc
int
mov
fdivrl
sub
mov
cmp
dec
mov
fs
and
call
mov
insb
mov
adc
inc
xchg
lea
aam
stos
stc
push
jns
adc
sbb
cmp
and
add
xor
and
cmp
lcall
cmp
repnz
push
push
and
dec
jg
adc
enter
jmp
out
sbb
dec
cmc
fwait
push
push
mov
push
mov
stos
and
push
lea
imul
lahf
out
mov
and
pop
cmp
nop
push
mov
or
sub
idivl
pop
adc
outsl
in
or
and
ljmp
inc
sub
pop
filds
add
lock
test
mov
sbb
std
arpl
pop
sahf
add
or
loope
out
js
pop
lea
xlat
mov
jbe
push
pushf
lods
or
cmc
dec
dec
and
fdivs
mov
aam
inc
negl
mov
mov
stc
aam
mov
sbb
lock
or
jle
mov
enter
pop
ja
es
push
sti
bound
lods
xchg
fwait
movsb
divl
iret
adc
adcb
cmpsb
or
dec
or
mov
inc
mov
mov
fldenv
testl
xchg
lahf
lock
ds
daa
ficomps
xor
aas
sub
ds
daa
mov
movsl
or
mov
into
mov
adc
dec
aaa
cmpsb
inc
add
nop
mov
sub
arpl
mov
mov
mov
mov
lea
testb
xchg
adc
orb
fistpl
jbe
enter
scas
cmp
outsl
mov
pop
mov
bound
subb
mov
out
sahf
lea
ret
loopne,pn
repnz
ss
sub
es
pop
cs
popf
xor
sub
ss
es
call
idivb
imul
test
cmc
mov
mov
scas
mov
in
lahf
ret
lods
jle
test
xchg
add
sub
std
add
out
mov
mov
testb
popa
add
jl
dec
inc
pop
push
test
xchg
cli
add
xor
ljmp
push
in
roll
push
inc
inc
pop
push
je
pusha
ja
jo
mov
inc
mov
aas
add
push
jns
mov
inc
adc
xchg
cld
jns
popf
xchg
cmp
jo
push
subb
and
inc
sub
addr16
xor
incb
lods
std
cmp
je
in
jnp
mov
jg
outsl
jp
icebp
add
cmpsl
mov
rorb
out
jae
sub
pop
jno
adc
in
lahf
out
mov
mov
pop
cmp
xchg
out
pop
js
pushf
cmpsl
xor
imull
out
fistpll
out
scas
fbld
sbb
js
lahf
push
mov
scas
hlt
sub
out
dec
xlat
loopnew
mov
push
lret
cmpsb
aas
decl
mov
ja
mov
jno
push
add
lods
mov
cmp
fldl
mov
dec
lock
fwait
push
mov
pop
push
add
mov
out
jns
xrelease
add
popa
ret
adc
mov
or
mov
aad
in
dec
add
sbb
mov
les
dec
imul
inc
add
xchg
xor
or
lahf
int
pop
fbld
test
pop
xchg
aas
in
sarb
mov
push
pop
adc
jg
lods
push
mov
out
lret
mov
adc
fxch
add
cs
add
add
dec
ret
mov
push
add
xchg
call
insl
in
xor
daa
jns
xor
cld
imul
arpl
push
mov
out
cmp
pop
pushf
cltd
jge
add
pop
add
pop
in
push
push
cmp
out
rcrl
gs
xor
outsl
add
add
jg
es
js
repnz
sbb
outsb
mov
mov
sbb
rcrl
rclb
mov
ja
lods
inc
das
jnp
cmp
stos
fistpll
adc
push
das
dec
mov
xor
movsl
mov
fistpll
or
stos
push
jo
mov
mov
add
fwait
xlat
add
test
or
mov
cs
xor
push
adc
xchg
push
stos
leave
cmpsl
lock
sbb
add
fdivrp
addr16
dec
push
mov
or
ja
xchg
fcoms
jge
mov
xchg
daa
jecxz
xchg
imul
iret
pop
add
jns
bound
ss
mull
add
in
mov
xor
ret
call
ja
add
bound
aas
add
push
and
shlb
lahf
jg
dec
push
inc
pop
xor
and
cmpsl
aas
cli
imul
xor
or
stos
iret
add
inc
xor
out
push
ja
scas
xor
in
cli
jnp
cs
pop
test
fwait
neg
dec
jge
inc
add
inc
push
or
call
js
outsb
adc
jmp
pop
lods
mov
lret
push
std
xchg
mov
push
jecxz
xor
lods
jb
rolb
mov
ljmp
out
test
ja
addr16
jbe
stos
mov
and
sarl
aas
mov
sbb
mov
xchg
adc
scas
jecxz
mov
jnp
aad
mov
dec
ds
scas
out
je
cmpsl
add
imul
inc
sub
out
scas
arpl
ja
fdivrs
sub
jmp
mov
mov
aam
out
xor
icebp
push
sub
cli
std
lret
mov
jl
jp
aas
sti
push
clc
pop
jae
out
inc
xor
cmpsl
dec
pop
popf
lods
stos
mov
out
movsb
cmp
and
aas
push
jp
add
mov
rolb
mov
ljmp
push
bsf
adc
lret
iret
cmpsl
pushl
ja
and
jmp
mov
mov
mov
push
adc
into
add
jmp
add
arpl
add
jae,pn
mov
popf
scas
cwtl
mov
add
inc
ljmp
stos
push
arpl
mov
mov
push
cmpsb
icebp
jnp
lock
xlat
fstpt
xor
cs
popf
cwtl
sti
mov
enter
loopne
hlt
scas
or
sbb
sub
ss
lods
pop
fwait
push
popf
cwtl
sti
mov
enter
in
hlt
popf
clc
lahf
add
sti
adc
ss
lods
jo
xor
mov
shlb
in
clc
popf
or
divl
cs
shlb
lods
jl
nop
imull
fsubr
ss
scas
or
outsb
mov
fwait
cmp
inc
cs
popf
fs
js
ss
lods
lods
fwait
not
cs
in
sti
clc
or
push
ds
ss
inc
fwait
push
mull
push
mov
mov
neg
cs
push
in
jns
aas
dec
pop
sbbl
push
mulb
inc
mov
adc
xchg
scas
mov
xchg
hlt
popf
mov
out
mul
fmull
lret
cs
ds
scas
lods
mov
lods
mov
mov
ss
jo
push
fs
popf
pop
sti
push
dec
xor
out
inc
cmpsl
xchg
add
and
xchg
dec
pop
arpl
mov
mov
scas
mov
js
mov
rolb
rorb
jne
mov
mov
out
pop
ss
cs
add
add
mov
xchg
mov
clc
ret
addr16
repz
ja
mov
pop
pop
arpl
pop
jae
movl
test
stos
sti
dec
jecxz
push
std
xchg
jbe
aam
sahf
out
lock
jbe
mov
out
pusha
aas
fcoml
pop
push
add
inc
xor
cs
dec
pop
jle
jle
js
js
inc
jb
mov
outsb
fs
shl
movsb
push
xchg
lds
xchg
mov
aas
dec
push
push
inc
push
push
shrl
mov
shrl
stos
arpl
inc
dec
insb
inc
xor
pop
xchg
popa
arpl
in
outsb
xor
inc
inc
imul
shlb
stos
stc
and
insl
cmpsb
addl
enter
mov
jle
xor
fs
inc
add
push
imul
mov
and
gs
jnp
data16
idiv
and
jo
or
adc
arpl
bound
jno
ja
mov
aas
push
data16
adc
inc
jb
inc
push
sub
dec
xor
iret
inc
jmp
lods
jne
inc
mov
push
push
dec
jne
inc
test
pop
jae
nop
out
fildll
imul
outsb
pop
push
aas
add
mov
fs
sbb
push
and
lcall
insl
clc
jg
cmp
cld
fmull
pop
add
into
fs
sbb
dec
xor
dec
gs
lahf
popa
jmp
dec
ret
jne
cwtl
fistl
std
pop
xchg
jo
cmpsl
outsb
outsw
cltd
dec
inc
xchg
ss
xor
mov
push
cld
lahf
inc
lea
mov
or
imul
lea
sbb
stos
int
jne
dec
jg
add
sbb
jl
inc
insb
jo
mov
cmpsl
sahf
out
dec
push
jne
stos
pop
cmc
mull
addr16
pop
in
fs
xchg
pushf
sub
push
fimuls
cwtl
mov
btr
adc
xchg
push
out
push
and
aas
cmp
inc
clc
xor
mov
sbb
xor
jb
movsl
and
popa
lods
mov
pop
cmpsb
and
addr16
push
popf
dec
mov
pop
mov
lahf
pop
and
xchg
inc
sbb
arpl
in
test
inc
inc
push
inc
pop
pop
jl
xor
les
jne
xor
dec
xor
inc
xor
mov
outsl
jae
and
inc
and
and
ja
inc
pop
mov
dec
mov
aas
push
movsl
push
xchg
stos
push
in
movsb
adc
mov
dec
mov
add
push
pop
pushf
mov
inc
sub
aas
fstl
dec
inc
mov
mov
nop
pop
jns
in
out
fnstsw
mov
xor
loop
add
inc
mov
bound
aas
stos
mov
imul
adc
jo
xchg
adc
nop
aaa
mov
adc
push
shlb
pusha
pop
sbb
repz
cs
and
es
jno
stos
mov
lret
fdivs
stc
add
idivl
push
popf
nop
sti
adc
xorb
scas
dec
fsubrs
mov
xchg
lock
or
jmp
data16
cmpsl
xlat
scas
stos
cmp
nop
mov
cmp
add
ja
push
mov
pop
cwtl
sbbb
enter
xor
loopne
mov
cmc
mov
testl
lock
mov
cwtl
push
in
mov
xor
pop
jbe
sbb
dec
mov
aaa
fdivrs
lods
movups
cltd
sbb
mov
pop
mov
int
mov
dec
mov
pop
push
add
jae
jo
outsl
addr16
mov
xchg
imul
and
addb
jo
addl
and
popa
add
push
fiadds
dec
add
jg
cmp
add
or
pop
icebp
or
sahf
sub
mov
adc
mov
ljmp
mov
enter
dec
add
sbb
jp
insb
push
nop
push
mov
sbb
test
adc
pop
outsb
push
cmc
adc
pop
add
cli
cmpsb
xchg
lods
and
xchg
incl
test
fistpll
add
fwait
dec
push
inc
push
loopne
int3
xchg
cs
popf
testw
adcb
jmp
lods
xchg
into
gs
cmp
mov
scas
mov
test
rcrb
scas
and
inc
ss
sarb
mov
mov
fdivl
sbb
mov
aam
leave
xchg
ret
int3
mov
mov
jmp
add
cmp
clc
pusha
cmp
mov
jge
jnp
dec
ja
pop
cld
dec
mov
shlb
pop
sbb
je
dec
xor
daa
hlt
mov
cmp
mov
lret
leave
fnsave
or
mov
rol
mov
push
fwait
jne
xchg
cmp
mov
add
pop
push
in
jg
lret
xor
das
fmuls
dec
push
or
repnz
mov
dec
mov
lcall
push
fadds
sub
pop
xorb
mov
fisttpll
cmp
in
pushf
scas
mov
push
shl
sbb
jge
sub
sub
mov
mov
and
mov
or
test
pushf
xor
call
imul
addl
cmp
jp
mov
adc
ret
outsl
movsl
cmc
cmp
jb
xchg
pushl
call
adc
fwait
scas
jo
fstpt
std
insb
mov
in
imul
xchg
subb
push
and
add
sub
mov
fsubl
adcb
call
cs
mov
lods
fcomi
scas
or
mov
adc
mov
xchg
popf
xchg
mov
sbb
in
lret
lret
mov
lret
mov
cmp
aam
popf
loope
jmp
fidivs
or
xchg
add
mov
int3
and
orl
push
call
scas
add
rcl
ss
jb
lahf
es
mulb
scas
inc
jle
mov
std
pop
add
xchg
in
add
movsb
imul
fcmovnu
xchg
mov
inc
lods
movb
mov
movsb
mov
enter
xor
ja
dec
xchg
insb
aaa
cmp
aam
scas
cmp
xor
push
jge
mov
pushf
jno
popa
sub
adc
jns
test
mov
inc
xchg
jle
cmp
test
nop
nop
mov
pop
sub
sub
and
movsl
shll
cwtl
and
sbb
mov
test
decb
sarl
sbb
test
in
push
mov
or
add
or
dec
jne
mov
cmpsb
mov
fdivrl
xor
xor
pop
in
pop
popf
and
lret
and
or
sub
mov
enter
insl
ljmp
ret
push
psrlq
mov
mov
popf
add
jae
call
cli
mov
fadds
incb
mov
hlt
push
call
add
mov
mov
call
not
rclb
es
mov
push
or
sbb
jl
hlt
mov
fdivrl
stc
mov
mov
fcmovbe
shl
and
cmp
lock
xchg
jle
cmp
test
jbe
or
lahf
daa
negl
je
repz
jo
aad
stos
xor
xlat
add
movsl
jmp
iret
push
push
xchg
pop
in
repnz
xchg
mov
sbbb
les
jle
dec
popf
test
xchg
inc
mov
out
fcomps
ds
inc
mov
mov
add
cld
fbld
call
pushf
repnz
sub
cmpsb
cmpl
in
mov
xor
push
rorb
stos
or
inc
hlt
mov
mov
push
inc
les
add
mov
arpl
cli
cmp
mov
repnz
loopne
sub
pop
in
xor
cmp
faddp
sahf
and
sbb
mov
addr16
mov
fwait
scas
dec
lcall
leave
jo
repnz
fucomip
sti
loopne
add
scas
xchg
mov
push
push
pop
stc
push
jecxz
dec
lods
je
mov
test
sub
dec
sub
cmp
dec
cmc
lods
lods
mov
and
or
mov
les
call
sub
test
lcall
clc
movsb
call
dec
or
jle
adc
fdivrs
out
cld
cmp
fwait
add
cmpsb
in
mov
jge
jbe
xchg
lahf
mov
clc
lods
and
add
jle
movsb
call
push
testb
insb
jmp
adc
movsb
or
jae
xchg
sbb
mov
mov
pop
ss
mov
xor
xor
mov
hlt
sbb
es
inc
dec
lock
lahf
push
cmp
ja
jl
out
dec
adc
out
fs
xor
inc
or
aaa
call
mov
mov
xor
jae
sbb
fstl
push
push
sub
hlt
sub
inc
xor
xchg
sbb
and
push
mov
inc
adc
push
pop
mov
xchg
push
xor
sub
or
xchg
push
add
mov
dec
cmp
clc
xor
lods
mov
sub
enter
outsl
ds
sub
lods
or
jl
bound
lods
jge
sub
js
mov
fadds
pop
call
neg
dec
scas
inc
pop
rcr
pop
mov
roll
in
popf
mov
jl
lcall
int3
std
or
lea
dec
cmp
lock
and
sub
lea
sub
cmp
mov
pop
daa
daa
jge
movl
and
aad
movsb
je
push
loopne
and
call
out
xor
js
jl
cwtl
adc
test
lea
jne
fldl
mov
jo
cmp
sub
daa
adc
jecxz
jo
pop
pop
repnz
repnz
loopne
fcomip
mov
cmp
rolb
inc
or
adc
dec
sti
push
adc
cmp
std
dec
mov
push
pushf
sbb
or
mov
mov
negl
push
call
out
xor
clc
cmp
jg
mov
mov
decb
test
push
cld
inc
nop
and
cmpsb
out
test
push
call
mov
jns
iret
je
xor
add
add
outsl
pop
add
add
add
jb
add
add
add
push
add
push
add
add
add
insb
bound
push
dec
dec
outsb
add
add
add
add
jne
add
inc
add
arpl
pop
xor
add
add
xor
add
add
jns
cmp
jae
push
add
inc
add
dec
add
add
add
add
add
jb
add
add
push
add
dec
imul
push
cwtl
stc
sbb
shr
or
pop
popf
mov
test
stos
outsb
js
mov
aam
xchg
add
add
or
jo
jnp
and
cld
xchg
mov
data16
mov
or
fcoml
mov
stos
ljmp
pop
add
lock
xchg
mov
loopne
push
push
jnp
loop
je
mov
jo
mov
add
mov
mov
rorb
loopne
cmp
inc
sbb
mov
mov
jle
idivb
mov
mov
jbe
sbb
iret
pop
ss
in
jge
hlt
sub
add
iret
shlb
aad
sahf
add
lods
jecxz
scas
xlat
pop
sbb
fists
roll
adc
pop
jge
mov
out
mov
test
fbld
ja
jnp
lcall
aas
mov
push
aam
mov
jmp
movsl
repnz
fisttpl
dec
add
and
mov
pusha
paddsw
add
inc
cltd
sub
sbb
mov
adc
cmp
sbb
leave
je
xor
add
add
add
jge
or
pop
or
add
nop
push
dec
clc
pusha
mov
jg
or
cmp
sub
dec
ss
lcall
clc
adc
pop
add
subb
push
pushf
adc
pop
shll
cmp
int3
cmp
jg
sti
arpl
lahf
aas
insl
xor
dec
pop
xor
xchg
clc
add
xchg
cmpsb
push
sub
lea
mov
mov
xchg
test
adc
add
lds
add
and
dec
jo
add
movl
add
jns
jne
mov
cmp
leave
cmp
mov
mov
inc
push
fiadds
inc
inc
into
mov
mov
daa
mov
add
xchg
push
push
mov
mov
mov
add
lcall
fwait
in
add
jnp
inc
xor
add
dec
pop
ja
lods
ret
stc
fistpll
xchg
cmp
xchg
popa
adc
xchg
xchg
and
inc
sub
shrb
ret
mov
jecxz
sub
sti
fwait
sub
adc
jnp
dec
sub
aas
test
iret
repnz
loop
push
cmp
mov
rcrb
lods
pushl
sbb
dec
cmp
or
repnz
and
xor
cmpb
aas
std
ret
ljmp
fcom
jne
and
add
ret
jp
add
adc
xlat
xorl
push
inc
stos
js
leave
mov
adc
andl
or
push
cmp
inc
test
push
rorb
addl
adc
xchg
inc
out
add
pop
cmpsl
fnstenv
pop
xor
push
xlat
mov
and
outsb
jnp
mov
fwait
mov
clc
fldt
shl
pop
cld
mov
inc
scas
sub
sbb
and
pop
add
es
rolb
pop
xchg
lds
or
add
jge
xchg
std
test
cmp
push
jmp
dec
push
mov
mov
mov
inc
div
and
mov
xor
push
rorl
test
add
push
jle
jb
aad
push
sarb
dec
lret
aam
f2xm1
jne
movsb
fisubrl
dec
add
fildll
dec
add
dec
adc
xchg
jo
sarb
jl
jmp
ret
inc
and
dec
mov
add
in
addr16
mov
ljmp
push
lds
add
rolb
pop
aam
adcl
push
dec
sldt
or
lods
imul
outsl
pop
mov
sbb
push
leave
inc
push
mov
cltd
xchg
jbe
mov
push
pop
std
aas
out
jmp
idivl
mov
add
xchg
out
xor
mov
xchg
push
enter
lret
insl
popa
add
sbb
jmp
ret
insb
sti
stc
stos
jg
sub
shrb
mov
dec
mov
pop
repz
mov
xchg
pop
adc
add
dec
add
xor
push
jg
inc
add
je
adc
push
call
or
andb
inc
fdivrl
out
pop
and
ret
pop
dec
pop
push
fs
sub
sub
ret
xchg
lds
xor
push
mov
das
inc
or
ja
jge
pop
out
adc
ret
sbb
cltd
add
mov
or
add
pop
les
sbb
adc
xchg
pop
add
in
jmp
add
test
je
lea
aas
rcl
xchg
pop
fmull
or
cmpb
cltd
jmp
xlat
mov
inc
leave
and
add
add
mov
push
jno
jg
jg
div
lret
pushf
add
shlb
loope
lea
in
or
inc
sbb
cmp
jne
cmc
mov
movq
or
cmpsb
xchg
not
jno
mov
sbb
xor
into
dec
sbb
sub
xor
testb
pop
popa
push
xchg
cmp
push
fstps
lahf
int3
add
or
mov
mov
or
lea
jge
mov
push
sbb
inc
cmp
xchg
lret
stos
or
add
ljmp
repnz
ret
leave
mov
lods
shl
fs
add
pop
pop
mov
add
lds
mov
rorl
push
xchg
push
loopne
cltd
ss
mov
push
call
std
xchg
add
mov
mov
add
inc
adc
dec
mov
inc
cwtl
je
into
incb
jnp
repnz
inc
call
mov
fwait
mov
mul
adc
xchg
hlt
int
lret
andb
lods
stos
sbb
popa
rcr
mov
cmp
icebp
outsl
dec
les
or
es
int
add
push
xchg
jno
dec
pushf
lret
push
lds
test
mov
mov
mov
mov
ret
scas
stos
iret
imul
pop
jp
lods
call
loope
or
jbe
dec
repz
mov
filds
repnz
dec
aas
test
mov
jbe
xor
aam
in
repz
orl
insl
imul
rorb
adc
clc
mov
out
loope
mov
jle
ja
dec
lock
imul
and
imull
popf
gs
repnz
mov
in
mov
inc
add
sub
clc
or
mov
jle
xchg
add
mov
faddl
packsswb
pop
pop
add
xchg
call
sbb
mov
das
add
fsts
adc
sub
test
mov
add
sbb
lret
fdivrs
fisttpll
lock
jbe
add
mov
push
popf
cmp
rcr
enter
dec
popa
std
clc
ds
lret
pop
cmp
xchg
sbb
insb
add
jle
dec
fcompl
add
or
orl
add
std
int3
xor
inc
sbb
in
dec
sahf
pop
enter
clc
fmul
sti
inc
jbe
jae
add
push
repz
scas
inc
or
addr16
in
mov
sbb
ret
mov
sti
xor
enter
cmp
inc
aad
mov
push
cmpl
pop
pop
loop
add
insl
ljmp
add
aas
cld
mov
mov
push
stc
cmc
push
subb
js
mov
or
stos
mov
pop
in
lret
add
pushf
sbb
std
negl
pop
lock
push
idivl
xor
cli
lahf
sbb
incl
mov
sti
imul
push
call
das
sbb
sub
outsb
aas
les
adc
aad
jmp
mov
in
cwtl
xchg
or
pop
add
pop
sub
lret
test
lahf
xor
repnz
add
movsl
insb
jl
test
add
cs
mov
mov
dec
pop
call
push
push
outsl
mov
test
iret
ss
add
fldenv
add
dec
fwait
je
aam
inc
ret
cmpsb
mov
add
jecxz
es
lcall
mov
add
xchg
push
push
fucomp
stos
loop
loope
mov
jecxz
cmp
lret
mov
mov
fidivrs
sti
sbb
lods
jle
mov
test
mov
and
imul
xchg
enter
das
or
fdivrs
mov
pop
aas
push
add
aad
push
jmp
mov
movsbl
lret
mov
mov
stos
xor
adc
outsl
mov
jo
cmpsb
dec
mov
sahf
pusha
in
inc
pop
insb
pop
iret
dec
jnp
out
xchg
outsb
notb
sub
or
imull
imul
mov
lea
pop
add
cmp
cld
cmp
add
sub
push
mov
xchg
neg
lds
fistl
call
subb
add
push
jne
jno
dec
sub
bnd
jg
lahf
adc
mov
stos
lock
mov
add
pushf
xor
xchg
mov
push
pop
mulb
loope
dec
es
jno
dec
aas
outsl
xor
js
mov
inc
jo
pop
push
push
arpl
jne
push
sahf
push
insb
mov
sbb
mov
inc
and
rcll
dec
aam
sub
adc
push
push
imul
inc
xor
iret
push
iret
js
jae
mov
add
rcr
inc
sar
mov
fadds
inc
pop
test
sbb
add
dec
add
fwait
dec
int
lcall
std
xchg
in
rol
sbbl
add
rcll
nop
sti
add
out
xlat
rorl
iret
and
push
test
jo
xchg
scas
push
add
dec
adc
mov
nop
cltd
mov
xchg
test
cmp
je
stos
add
popl
dec
fwait
mov
lahf
and
dec
pusha
jecxz,pn
push
mov
dec
lret
pop
pop
gs
dec
mov
add
sub
fisubrs
incb
jmp
adc
jo
popf
or
push
sub
push
sarb
add
int3
dec
imul
inc
roll
fadds
add
or
xchg
nop
aas
pop
push
mov
add
adc
lods
shlb
fcompl
aas
push
call
adc
push
mov
hlt
out
sbb
add
fwait
mov
push
jmp
mov
ret
or
test
mov
shll
or
mov
sbb
adc
jmp
les
int3
pop
lcall
adc
mov
cmp
fcompl
addr16
loopne
dec
push
and
xor
call
pop
fwait
push
clc
lock
leave
mov
jmp
shlb
cld
fsts
fwait
les
lds
add
adc
or
sub
cmp
adc
mov
clc
sbb
test
pop
shlb
sub
push
clc
sub
leave
mov
jmp
rcrb
cmp
adc
dec
sti
addb
dec
push
pusha
das
dec
repz
les
push
pop
rcll
clc
pusha
dec
push
adc
mov
aad
xchg
pop
add
jo
pusha
adc
mov
aad
xchg
popf
insb
popa
pop
add
test
sarb
popf
add
dec
adcb
mov
mov
aad
popf
mov
dec
add
cwtl
int3
aad
popf
pushf
clc
les
mov
jmp
dec
test
sarb
lods
clc
add
dec
mov
popf
out
sbb
mov
fwait
sti
lahf
mov
dec
rorb
lret
pop
add
lret
ret
push
mov
enter
mov
cld
mov
xchg
stos
in
inc
jmp
lock
enter
lea
popf
cld
dec
fcompl
add
or
sbb
add
aas
ret
push
mov
push
incl
cmpsb
add
pop
rolb
adc
dec
rclb
mov
ffreep
movw
sarb
pop
pop
ret
mov
mov
mov
xchg
lock
mov
mov
mov
jns
jg
call
lods
add
movswl
mov
push
add
dec
cli
call
mov
stc
mov
cmp
jp
add
inc
inc
aas
je
neg
mov
mov
pusha
ss
aam
mov
sbb
call
into
test
jge
cmp
leave
pushl
add
into
add
sub
add
sar
out
xchg
or
add
mov
lock
jns
mov
mov
mov
push
push
add
out
lods
pusha
mov
jnp
add
test
fs
mov
pop
inc
movb
push
cld
scas
call
mov
lahf
mov
xchg
push
popa
cmp
fwait
pop
bt
in
add
add
mov
ret
or
rolb
jo
pop
inc
push
push
mov
xlat
call
add
xor
leave
or
fstp
mov
idivb
add
mov
add
enter
mov
ret
aas
fnstenv
mov
test
sub
mov
add
rcrb
mov
xor
add
rorl
aas
in
push
call
aas
pop
popf
and
mov
mov
fisttpl
call
stc
adc
shrl
mov
inc
add
add
cwtl
ret
lock
rcl
mov
std
jg
lods
jp
sti
add
inc
fcoms
pop
pop
mov
cli
aas
rcrl
pushf
push
mov
push
sbb
cmp
fucom
inc
stc
dec
fcomp
adc
inc
add
je
call
sbb
mov
jg
lods
add
out
add
ror
add
dec
and
fcoml
stc
lret
pop
call
inc
mov
mov
mov
loopne
std
roll
pop
xor
or
add
shlb
rolb
add
test
sbb
add
mov
mov
lret
pushf
add
sti
pop
icebp
xor
mov
push
sub
and
rolb
and
call
mov
adc
jae
mov
inc
out
mov
leave
lods
mov
movsl
pop
mov
mov
mov
sbb
cli
or
imulb
mov
sbb
stc
dec
pop
cwtl
mov
pop
jo
add
int3
test
inc
ja
enter
jns
arpl
cwtl
add
int3
sarl
iret
mov
mov
out
out
cmp
mov
mov
xchg
mov
jne
icebp
lock
imul
jle
sarl
lea
mov
add
ret
fadds
mov
shr
mov
test
mov
aas
pop
dec
fadds
std
dec
inc
clc
enter
ds
mov
cmp
stc
push
hlt
mov
cwtl
push
xchg
jmp
std
mov
sub
pop
pop
insl
cmpsl
imul
push
dec
push
xchg
sbb
jg
je
xchg
xchg
movsb
std
push
mov
imul
and
xchg
dec
rorb
sbb
dec
mov
subl
shl
movsl
push
mov
call
pop
push
xchg
mov
inc
jl
mov
aas
adc
add
imul
mov
sub
sub
push
add
adc
xchg
mov
repnz
addr16
out
mov
cmp
int3
pop
call
add
lret
imul
outsb
dec
lahf
mov
lret
mov
cmp
inc
inc
sar
and
push
call
popa
mov
pop
loopne
xchg
mov
push
call
mov
push
mov
mov
jo
insl
cmp
dec
sbb
sub
cmp
push
pop
mov
clc
add
push
pop
stos
dec
or
and
dec
add
mov
add
add
add
mov
test
loopne
mov
shlb
sub
jl
mov
mov
inc
adc
in
stos
mov
int
jecxz
xchg
jecxz
jno
loopne
or
inc
sbb
leave
lds
add
pop
ret
adc
notl
push
lahf
es
mov
push
lret
and
push
mov
shrb
jle
mov
mov
shlb
fldt
add
aaa
leave
ss
xchg
jb
xchg
inc
in
add
xchg
mov
int
push
ljmp
add
das
cmpsb
mov
pop
push
sti
pushl
aas
jge
filds
cmpsl
dec
aad
orb
xchg
jns
xor
add
shl
pop
add
ret
fsub
mov
cmp
dec
inc
nop
push
add
shrb
xorb
ljmp
and
dec
pusha
fwait
dec
adc
std
add
or
sbb
les
jo
lret
mov
pop
cmp
scas
aam
xor
subl
popf
mov
mov
xor
jg
ret
into
add
mov
pop
jmp
test
int
mov
mov
pop
fmul
mov
push
sbb
leave
push
push
call
mov
add
mov
mov
iretw
push
iret
inc
add
push
rorb
sub
faddl
lods
leave
idivb
push
ds
aas
jge
sbb
mov
push
jecxz
jge
test
add
jg
cli
mov
ret
add
jb
push
mov
lock
push
imul
call
pushf
dec
add
scas
and
xchg
test
xchg
aad
lcall
and
repz
jecxz
call
and
enter
adc
xchg
xor
sbb
mov
add
leave
scas
add
dec
repnz
imul
icebp
jno
stos
sub
fwait
add
xchg
add
push
bound
into
pop
add
inc
add
mov
add
sti
jge
int
or
out
out
or
rcrl
push
mov
mov
cltd
xor
lret
add
scas
pop
add
adc
sub
lret
sarl
xchg
dec
test
js
inc
add
insl
sbb
int3
stc
mov
add
push
dec
loopne
mov
popa
adc
push
jge
push
mov
mov
dec
dec
in
popf
fistpll
push
mov
pop
mov
mov
mov
inc
loope
clc
mov
inc
jno
aam
xchg
std
pop
mov
mov
add
rolb
mov
cltd
cmp
add
mov
das
ljmp
jge
pop
sbb
xor
push
pusha
int
jmp
call
lret
mov
rcrl
rcl
add
rep
cmp
and
add
mov
aam
mov
or
push
int3
push
arpl
mov
sti
int
xchg
push
add
cmp
imul
aad
cmp
mov
mov
jbe
les
jg
lahf
lock
ja
add
cld
mov
add
aam
sub
add
fdivrs
fsts
mov
dec
stc
in
pop
mov
cmp
cli
sarb
mov
pop
mov
xchg
push
push
inc
add
inc
sub
mov
cmpl
adc
mov
imul
mov
repz
mov
ret
cmpb
pop
icebp
xchg
xchg
jo
sub
cmc
scas
fs
enter
out
mov
nop
mov
xchg
mov
push
pop
jb
popa
add
xchg
add
add
add
push
add
pop
jle
mov
cmpb
lahf
mov
enter
add
clc
lret
push
sbb
lahf
push
jmp
fadds
lock
mov
mov
xchg
and
and
dec
sub
xchg
test
mov
xor
cs
rol
paddsb
fwait
pusha
sahf
adc
insb
jle
repnz
sarl
gs
sub
add
pop
mov
icebp
add
call
mov
mov
add
mov
mov
pop
mov
sub
aas
xor
lock
and
sti
ret
test
lret
jecxz
aad
dec
pop
mov
mov
lock
lahf
or
add
pop
lret
mov
clc
cmc
mov
in
cmpl
mov
xor
xchg
jl
cmp
decl
out
aas
add
pop
jle
ljmp
cmp
inc
lret
jo
das
arpl
iret
push
push
jne
or
add
mov
imul
cmc
out
xor
shr
fcoml
orb
xchg
mov
aas
cmp
jns
sub
rorl
mov
add
int
jle,pt
push
int3
push
jmp
or
sub
or
mov
lds
xchg
lret
add
arpl
xor
mov
mov
xor
inc
inc
add
push
sub
mov
aad
xchg
aam
xor
jae
scas
add
jns
cli
xor
leave
push
add
mov
in
test
lea
add
mov
negb
mov
shl
call
add
sub
popf
add
or
sub
mov
ss
mov
scas
test
lahf
fidivl
or
fdivs
outsl
mov
inc
mov
add
add
mov
stos
mov
adc
and
ljmp
or
lldt
stc
sti
pop
adc
adcl
dec
jmp
lret
aas
pop
dec
cli
inc
adc
lock
or
setg
add
into
ret
mov
jecxz
dec
push
roll
pop
jg
dec
add
push
or
mov
add
fsubrs
jg,pt
daa
divb
lahf
mov
out
and
aam
and
add
dec
add
mov
cmp
out
add
mov
push
pop
inc
mov
mov
add
out
sub
and
mov
mov
ret
jne
outsl
inc
add
rorb
pop
sub
jl
inc
pop
lcall
sub
lods
aad
ja
add
je
sub
ret
into
push
pop
add
loopne
shll
add
movsb
sbb
add
sub
je
sub
aas
inc
cmp
into
pop
cmc
add
xchg
xor
xor
movsb
mov
sbb
dec
add
add
int
insl
outsl
xlat
adc
incl
add
pop
rorl
aas
je
or
mov
daa
movsl
push
mov
or
or
dec
push
shl
jb
in
push
aaa
push
cli
jg
cmp
lret
cmp
cmp
or
mov
pop
pop
jb
lret
jmp
pop
leave
add
xchg
sub
push
outsl
cli
shll
cltd
jno
push
adc
out
xor
inc
and
jl
testl
push
mov
out
add
stos
rcl
cwtl
jl
add
pusha
add
mov
je
lds
inc
add
inc
xor
push
lods
add
lods
in
out
addl
js
jmp
dec
add
or
mov
inc
fiaddl
push
jge
rcll
mov
lock
pop
das
popf
xor
push
fmuls
arpl
js
sbb
or
add
mov
cmp
cmp
bound
lret
clc
mov
test
add
mov
shl
mov
cmp
pop
push
mov
jmp
sub
jbe
inc
pop
js
sub
clc
call
subb
clc
mov
inc
lret
insb
aas
push
faddp
add
sub
push
call
mov
mov
mov
pusha
add
or
and
fwait
cmp
pop
xchg
shlb
mov
lods
mov
add
fmuls
ljmp
cli
push
push
mov
rcl
and
mov
mov
ss
loopne
repz
mov
leave
inc
adc
mov
lods
cmp
je
push
inc
fucomip
dec
add
add
adc
jne
mov
pop
mov
pop
lods
mov
add
repz
or
jo
push
call
int3
dec
lods
lds
dec
and
inc
xor
cmp
pop
cmpsb
push
into
add
leave
push
push
pop
inc
add
pop
mov
iret
and
test
mov
lret
mov
mov
push
mov
push
add
push
push
lea
mov
jne
addr16
inc
ds
cmc
xchg
xchg
dec
mov
gs
pop
rolb
sbb
adc
scas
mov
pop
mov
dec
clc
cmp
mov
cmpl
cmp
jl
sahf
xor
add
inc
dec
dec
out
lea
pop
xlat
rclb
lret
leave
xchg
add
mov
mov
add
sub
sbb
je
ljmp
leave
cmpsl
xchg
add
dec
sub
sbb
add
fbld
cld
mov
iret
int3
lds
mov
roll
lock
aam
gs
add
add
das
pop
cmp
push
mov
lock
ret
cmp
sti
pop
fstpt
inc
iret
mov
and
add
enter
mov
outsl
push
mov
cmp
int3
and
pop
mov
xor
or
sti
push
fstpl
inc
iret
xchg
arpl
loopne
in
adc
mov
pmaddwd
dec
fsub
jmp
inc
insb
pop
mov
adc
xchg
sbb
pusha
je
jle
cmp
xor
stc
cltd
add
in
mov
inc
push
out
iret
mov
fwait
lods
rorl
call
outsl
cmp
outsl
mov
add
test
jge
sbb
cltd
int
jns
cmp
das
mov
stos
xchg
insl
std
inc
or
das
sub
jl
adc
int
and
pop
push
xor
lret
add
lret
or
mov
mov
xor
add
or
ret
add
mov
inc
test
jbe
leave
xor
adc
loope
sub
pop
fisttpl
clc
xchg
pop
or
stc
loop
xchg
fcom
popf
jle
inc
jge
mov
mov
or
iret
add
or
dec
and
lds
add
adc
inc
cld
xchg
or
add
ljmp
add
pop
mov
add
je
add
out
add
xor
pop
imul
rcrb
mov
add
ret
sbb
je
lea
dec
cld
mov
xchg
or
xchg
push
pop
add
or
add
test
incl
movl
sarb
mov
scas
inc
xor
xor
popa
aad
add
test
or
repnz
ret
dec
shrb
pop
add
push
xchg
mov
rorb
sub
mov
add
ret
cltd
inc
stos
and
cmp
cltd
rorl
lea
gs
dec
push
add
xor
rcll
push
jb
cwtl
or
dec
cmp
pop
into
cmc
incb
and
or
dec
lret
push
pop
xchg
sub
in
shufps
and
jp
add
pop
imul
pop
or
mov
in
and
dec
in
daa
mov
loopne
push
add
iret
xchg
mov
sti
or
aaa
lret
lea
mov
push
add
hlt
pop
inc
cld
mov
in
stos
mov
jg
jl
das
mov
add
out
pop
je
mov
outsl
std
addr16
movb
lods
jge
aam
or
andb
adc
inc
add
scas
add
hlt
xor
inc
cmc
mov
push
lret
mov
out
jecxz
pop
xor
call
jne
mov
mov
mulb
pushf
or
add
jmp
jne
addb
push
xor
fidivrl
dec
add
pop
mov
xchg
mov
or
pop
cmp
pop
out
gs
xor
cmc
pop
repnz
dec
dec
mov
movb
xchg
outsb
iret
sbb
add
mov
xchg
add
iret
rorb
xor
sarb
xor
mov
adc
mov
insl
xchg
push
notl
push
add
cmp
insb
pop
cwtl
or
fiadds
mov
xor
sub
dec
mov
fs
mov
hlt
add
stc
and
push
les
fldt
pop
popf
int3
je
pop
add
pop
call
mov
frstor
cmp
push
jo
sti
pop
sub
push
push
xchg
add
pop
roll
setno
and
cli
jl
stos
iret
push
add
daa
mov
mov
movb
pop
cwtl
adc
lods
inc
mov
frstor
sbb
popa
jp
call
add
or
mov
lret
dec
pop
ret
sub
aaa
mov
mov
inc
mov
sub
shlb
inc
and
fbstp
inc
js
add
mov
cmp
cmovnp
fnstcw
test
int3
sub
sbb
xor
mov
sub
pop
psubsb
jns
or
pop
shl
cmp
adc
fs
mov
rclb
std
je
add
xor
clc
xchg
xchg
push
mov
inc
dec
pop
lock
mov
cmp
popl
or
roll
aas
fcompl
add
mov
shr
ds
stos
mov
inc
mov
push
popf
adc
add
sub
jmp
int
adc
je
add
dec
movsb
mov
mov
fwait
adc
adc
add
fs
adc
clc
aas
mov
add
lahf
std
out
lock
xchg
pop
inc
push
add
push
mov
mov
into
dec
mov
mov
dec
aas
sbbl
xor
mov
xchg
aaa
add
mov
mov
mov
dec
ret
repz
xor
mov
or
dec
add
ss
and
xchg
sub
and
mov
add
mov
push
push
or
add
fistl
xor
out
mov
outsl
jge
rorb
clc
mov
mov
adc
mov
mov
pop
xchg
test
dec
lret
lret
inc
push
add
fsubs
mov
ds
dec
cltd
xor
fs
iret
pop
push
inc
roll
add
test
add
mov
test
and
icebp
sub
inc
jle
repz
mov
lret
call
mov
xchg
enter
addr16
jl
mov
jnp
cmp
add
subb
mov
filds
mov
into
shl
test
push
cmp
orl
adc
inc
mov
cmp
pop
add
ss
js
mov
cmc
mov
sahf
xchg
inc
icebp
dec
push
xchg
mov
add
cmp
ret
jo
pusha
inc
mov
adc
pause
sbb
enter
ret
mov
pop
mov
test
leave
out
xor
clc
fwait
pop
add
movl
push
dec
cmc
andl
sbb
fbstp
lea
repnz
int
push
mov
outsl
sbb
pop
nop
pop
pop
sub
push
mov
add
push
sbb
out
data16
pop
shlb
add
mov
scas
iret
push
adcl
repnz
cmp
xor
into
ljmp
nop
add
inc
ret
xlat
sbb
mov
pop
mov
add
push
lcall
call
and
enter
push
mov
push
mov
stc
jge
add
inc
mov
cmp
jmp
sar
pop
lret
ficoms
inc
sarl
aas
negb
sbb
mov
push
aas
scas
out
mov
lods
pop
sbb
push
into
add
gs
leave
jl
inc
push
ror
lret
xchg
enter
mov
test
mul
cmc
xchg
lcall
aaa
hlt
in
mov
es
xor
andl
or
and
dec
cmp
in
shrl
mov
push
add
push
test
xor
mov
int3
inc
mov
aam
fisttpl
pushf
cli
sbb
mov
leave
inc
sarb
xchg
xlat
push
push
add
repnz
adc
movsb
jno
imul
push
dec
gs
decb
add
loopne
dec
xchg
inc
xchg
add
add
repz
ds
jmp
loopne
fsubr
aas
sbb
dec
dec
cltd
mov
or
aas
lret
sub
pushf
test
test
in
sub
add
sub
lds
add
push
mov
mov
aas
mov
pop
addr16
sbb
add
cmc
sub
mov
push
and
call
pop
imul
fiadds
jbe
pop
fbstp
mov
push
dec
idivl
addb
jae
sub
add
mov
pop
ret
xchg
add
cmp
dec
or
iret
stc
dec
mov
cmp
jno
jp
sub
cmp
lret
pop
aas
xchg
lods
dec
jge
add
add
pushf
sub
fsub
sbb
cltd
adc
btc
add
mov
movl
mov
pop
ret
mov
sbb
xchg
and
xlat
or
ss
sub
push
push
repnz
notb
call
push
ds
andb
mov
mov
add
dec
and
jo
or
and
cld
mov
jmp
dec
add
fmul
not
mov
adc
push
push
out
mov
cs
call
bound
mov
fs
sbb
push
mov
test
xchg
inc
add
or
clc
pop
mov
push
push
sahf
addl
mov
shl
push
adc
add
mov
mov
push
cmp
add
add
xchg
sub
jge
lret
sbb
test
inc
popa
cmp
xchg
mov
and
and
xor
mov
xor
enter
add
outsb
ret
xchg
shrb
mov
add
xchg
add
aaa
xor
into
sbb
sbb
shrl
sbb
dec
insb
dec
icebp
pop
add
xchg
cmp
jmp
sbb
jb
add
outsb
jae
xor
repz
pop
sbb
incl
in
jb
lods
add
pop
sbb
movsb
je
aam
adcl
cmp
fbld
sub
and
or
and
add
sub
aas
mov
push
or
fildl
loopne
fwait
ret
mov
inc
js
push
stos
xor
inc
jle
lds
xor
addr16
adc
in
cmp
fisubl
dec
fsubr
add
shll
in
mov
gs
sbb
mov
cltd
push
test
jne
add
or
add
mov
call
int
int3
jg
and
pop
mov
mov
aad
iret
xchg
jg
sti
add
cld
test
or
mov
jg
add
aas
xchg
push
push
add
jecxz
call
jb
out
mov
scas
push
std
idiv
pop
mov
mov
pop
mov
xor
mov
scas
sarb
xchg
xchg
push
jp
leave
divb
push
fs
sub
repz
jge
out
sub
out
xor
pop
cmp
lret
addl
setnp
mov
mov
mov
jle
mov
daa
add
ret
sbb
mov
jnp
pop
mov
mov
dec
daa
push
sub
mov
in
idivb
xchg
mov
pop
aas
xchg
enter
add
sbb
fstps
sub
call
push
dec
or
push
push
mov
ja
xor
outsl
xchg
imul
cmpsw
cmp
xchg
jp
jae
insb
fisubl
inc
pop
inc
fisttpll
pop
push
sbb
push
pop
ds
xor
cmpsl
dec
ret
jno
jbe
push
jmp
push
xor
je
cmpsb
imul
js
jbe
dec
inc
xor
pop
adc
or
and
cmpsb
add
cmpl
pushf
popf
mov
lret
out
mov
add
rcrl
testb
mov
xchg
mov
mov
dec
fbld
inc
add
sub
fidivs
sbb
pop
add
push
or
xchg
jns
rolb
add
push
xchg
add
lret
int
jg
xorl
dec
sbb
pop
fisubrs
xor
lea
xor
loope
push
and
jae
daa
inc
je
fmuls
cmp
sub
dec
lea
fbstp
pop
dec
xchg
cmp
bound
cmp
imul
add
pop
fstpl
ret
lret
jle
mov
lods
jo
popa
stos
sbb
jl
jnp
or
lret
nop
scas
outsl
and
les
ljmp
inc
cli
add
fbld
lea
dec
jle
icebp
adc
adc
fnstsw
or
mov
push
push
add
clc
push
fwait
cltd
adc
lret
adc
jno
jmp
cmp
test
mov
dec
clc
push
into
rcrl
enter
pop
adc
adc
add
mov
or
insl
push
xor
imul
xchg
add
mov
mov
and
js
xchg
stc
jp
nop
cmpsl
in
add
pop
popf
movsl
lahf
and
jae
or
fsts
adc
pop
push
lahf
iret
aaa
cwtl
add
popf
inc
int3
cmp
xchg
sbb
add
push
xchg
mov
pop
jecxz
xchg
dec
lret
insl
mov
dec
cmpb
xchg
loop
cli
fs
into
dec
push
add
fdivrl
or
pop
mov
add
xchg
push
shll
int
ret
notl
decb
out
add
or
cmp
add
ret
pop
or
cs
repnz
cmpsb
lret
jno
mov
ds
call
mov
inc
fisttps
pop
cltd
dec
je
add
cmp
mov
pop
add
cmp
push
dec
mov
rorl
add
lcall
jmp
push
mov
pop
dec
push
sbb
adc
pop
mov
lret
mov
mov
sbb
aaa
cmp
mov
nop
jge
addr16
nop
xorb
add
dec
insb
enter
stos
call
in
dec
nop
je
mov
popf
lcall
cwtl
push
fstpt
mov
cmp
mov
movsb
fsubs
add
out
push
pop
call
push
cltd
outsb
inc
push
cmp
in
negl
push
xlat
testb
inc
pop
dec
shll
cltd
into
add
xchg
or
xchg
push
jmp
popf
xor
jne
and
fxch
lods
push
test
fneni(8087
add
push
cs
add
and
mov
add
divl
in
add
push
rorl
shlb
jbe
add
cmp
leave
or
add
sarl
jno
jp
add
into
pop
adc
add
in
add
cwtl
xor
ja
pusha
test
or
loopne
push
mov
orl
bnd
push
and
test
mov
dec
fmull
movsb
push
lock
inc
xchg
mov
paddb
ret
jmp
xlat
sahf
shll
sbb
adc
xchg
add
psubusw
add
xor
std
sub
add
push
jl
cmp
mov
jmp
add
xchg
stc
dec
loopne
nop
pop
add
cli
shll
or
rcrb
lock
push
add
add
pop
pop
shr
pop
js
mov
ja
push
call
int
adc
ror
pop
mov
xor
inc
xchg
mov
ret
mov
nop
lods
add
subl
hlt
add
stc
push
push
add
fldl
stos
mov
push
jg
or
packssdw
inc
mov
pop
lret
jle
pop
fprem
ja
mov
stos
mov
xchg
pop
cmp
leave
jnp
pop
sbb
adc
mov
add
add
sub
add
push
jg
dec
ljmp
mov
test
leave
das
dec
push
cmp
mov
xor
int3
mov
sbb
dec
icebp
mov
mov
mov
add
inc
xchg
pop
std
int3
cltd
fildl
and
pop
pop
pushl
shlb
inc
call
sub
jl
push
add
add
mov
test
add
or
adc
imul
add
ja
fldt
cltd
add
pop
jnp
add
aam
push
sub
icebp
ret
push
push
hlt
sub
aad
pushf
add
sbb
mov
add
mov
bound
adcb
shr
xlat
mov
js
aaa
add
lcall
scas
jo
sbb
sub
add
aam
add
add
add
add
ja
dec
je
add
add
add
add
add
add
add
fs
outsl
add
add
xor
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
pop
add
push
add
dec
jp
add
push
cmp
add
outsl
add
add
imul
xor
add
add
ss
add
pop
add
add
add
add
je
mov
mov
inc
js
fsts
ret
jnp
arpl
push
loope
mov
xor
loop
out
imul
jne
std
lea
mov
iret
lods
outsl
mov
or
std
mov
loopne
sub
rclb
repz
mov
xchg
sbb
fstl
cld
mov
mov
adc
enter
mov
call
lds
in
sub
ljmp
loope
push
test
aaa
mov
ja
aas
add
lret
add
in
push
mov
js
mov
mov
cld
mov
insl
int3
pop
mov
lahf
movsb
mov
mov
jecxz
fistpl
fwait
dec
mov
lods
inc
jnp
lret
rorl
aaa
mov
mov
sub
push
mov
sbb
ds
mov
hlt
cmpsl
pushf
jecxz
push
add
push
xor
or
add
clc
lcall
in
xchg
adc
and
fiaddl
out
adcl
xor
xor
mov
les
add
enter
push
add
jmp
roll
addr16
std
add
pushf
fwait
orb
mov
sbb
sti
dec
fnstcw
shll
xchg
pop
inc
jg
jmp
lret
repnz
stc
lcall
push
sub
lea
aam
add
and
cld
dec
filds
nop
lods
out
add
enter
mov
inc
test
cmc
pop
pop
push
add
and
lcall
repz
add
shrb
cmp
xlat
out
add
nop
xchg
xchg
bound
fldl
mov
idivb
lds
cltd
cld
mov
lock
mov
fwait
stc
or
pop
pop
xchg
mov
mov
dec
roll
into
std
push
fmull
lahf
in
cmpb
fstpl
mov
clc
mov
jle
int3
pop
out
push
add
test
test
cmc
mov
mov
clc
push
insb
leave
psraw
lods
pushf
addr16
or
add
cmp
add
jns
pop
pop
push
fadd
cmpsl
add
add
or
jmp
addr16
lock
out
pusha
mov
in
int
add
push
scas
push
inc
cmp
mov
adc
jg
test
iret
insb
add
int3
leave
mov
mov
test
jle
icebp
cmp
sahf
and
mov
addl
std
in
lods
enter
add
dec
outsb
rolb
and
movb
lock
dec
push
iret
andb
mov
sbb
add
mov
sbb
aam
lret
test
push
pop
rclb
sahf
dec
adcb
mov
hlt
andl
and
addb
data16
jmp
jecxz
mov
repz
mov
cmp
push
leave
cltd
add
jns
addl
jmp
stos
enter
mov
add
nop
js
leave
cmp
xor
cmp
out
shl
bound
test
sti
cwtl
push
popl
sahf
popa
pop
jmp
dec
or
into
fldl
push
inc
pushf
and
jle
or
lods
cmp
into
in
dec
cmp
insb
mov
xchg
outsl
cwtl
hlt
add
mov
sbb
sbb
add
leave
jno
add
jo
xor
xchg
add
adc
mov
add
xor
adc
xlat
int
mov
mov
insb
lea
cmpl
popf
pop
repz
push
dec
mov
in
int3
sti
adc
pop
add
dec
das
pop
sub
inc
or
add
rcrb
adc
mov
leave
or
add
jo
hlt
rol
out
add
and
xor
or
add
out
mov
add
enter
leave
dec
mov
and
sub
add
inc
call
or
jg
jno
je
mov
insl
fisttpl
call
mov
aam
jae
fadds
in
inc
test
cmp
push
aas
mov
iret
mov
leave
xor
mov
xchg
fwait
sbb
fcom
sti
dec
into
mov
shlb
aas
jne
pushf
jb
add
ror
ret
xchg
or
ret
fadds
sbb
sub
mov
add
sbb
inc
mov
mov
imul
popf
std
mov
enter
add
lea
mov
cmp
aas
movsl
xor
mov
int
jg
test
sbb
add
and
std
add
imul
fucomp
jmp
mov
jge
inc
sub
lds
add
add
xlat
shlb
aad
push
hlt
add
rcrl
fs
mov
inc
rolb
mov
adc
cmp
das
mov
mov
aam
mov
dec
xchg
cltd
fdivrs
push
mov
scas
or
bound
mov
pop
push
pusha
filds
mov
pop
sti
jle
popf
mov
pop
outsb
lret
mov
push
push
push
dec
addr16
dec
cltd
pop
stos
insb
cmp
push
xchg
sti
mov
pop
cmp
lret
add
nop
xchg
mov
shrb
aas
rolb
sub
stc
mov
push
mov
and
lret
mov
rorb
and
sbb
dec
mov
xchg
enter
lret
push
std
sbb
rolb
inc
pop
shll
push
popa
cmp
in
mov
push
jb
dec
decl
mov
add
cltd
fs
jle
les
lret
sti
mov
mov
sbb
push
mov
cmp
dec
jnp
sti
mov
popf
xchg
scas
push
mov
push
fcomps
ljmp
es
fs
or
push
sbbl
sub
std
or
pop
shl
cmp
sti
mov
mov
lret
mov
add
lock
mov
out
cmp
mov
mov
shlb
push
addr16
add
add
xchg
adc
adc
mov
mov
pop
js
inc
in
jne
adcb
add
adc
mov
in
and
arpl
mov
jecxz
insb
xor
fisttpll
mov
pop
fcomps
xor
add
rcll
xchg
add
jns
add
push
cmp
mov
mov
mov
xchg
pop
inc
xchg
aas
fsub
cmp
add
inc
lods
mov
mov
sarl
add
jb
mov
and
les
dec
sbb
repnz
pushw
xor
test
or
sbb
shll
mov
pop
add
sbb
dec
and
testl
add
es
in
popa
fbstp
aas
bound
ljmp
mov
push
push
fidivrl
jge
xor
xchg
rolb
fiadds
sarl
popa
out
cmp
sbb
in
xchg
jg
mov
mov
cmp
adc
push
shll
enter
std
cltd
dec
jns
push
pusha
fmuls
and
add
icebp
ret
std
sbb
shrl
fdivs
les
or
xor
mov
add
cwtl
fiaddl
add
es
add
mov
sub
loopne
mov
sbb
stc
cmc
out
dec
sub
cltd
mov
sahf
out
fimuls
add
xor
std
out
in
xchg
aas
xchg
pop
mov
test
add
pop
mov
add
inc
jmp
sbb
mov
ficomps
pop
mov
adc
aam
mov
clc
fsubrs
aas
adc
inc
adc
add
sbb
cmpsl
out
inc
cmp
jns
push
out
inc
iret
mov
lock
sub
cli
add
mov
out
mov
pop
cmpsb
dec
lahf
adc
add
fildl
adc
pop
pop
sub
jmp
pop
jns
lret
xorl
cmp
call
fwait
repnz
mov
mov
adc
jecxz
mov
dec
psllq
or
aam
aas
xor
xchg
add
xchg
iret
mov
mov
fildll
add
scas
sarb
cmp
outsb
cmovb
xorb
cmp
xchg
cmp
mov
shlb
dec
pop
lods
add
xchg
xchg
add
int3
sbb
lods
sub
lret
mov
jge
add
stc
push
sbb
fcomps
push
push
mov
adc
jo
or
xchg
add
xchg
incb
mov
daa
inc
ljmp
xchg
test
mov
iret
mov
je
insl
add
ds
mov
jmp
aad
test
mov
negl
ficoms
lret
xchg
jecxz
push
mov
sbb
add
lock
nop
xchg
fwait
sbb
scas
add
lcall
movsb
ds
pop
xchg
mov
shrl
andl
and
stos
adc
xchg
leave
xchg
cmp
pusha
mov
pop
xor
sbb
mov
and
lds
push
pushf
mov
in
sbb
xchg
xchg
pusha
fiadds
inc
loopne
add
sub
and
inc
outsb
fidivrs
lea
mov
leave
idivl
mov
add
icebp
subb
cmp
mov
in
decl
daa
add
adc
add
jp
sbb
and
loopne
faddp
cmp
mov
add
sbb
out
pop
sub
mov
jl
and
stc
cltd
mov
push
push
icebp
or
aas
fimuls
add
add
ret
sahf
data16
fwait
daa
cmp
mov
pop
push
dec
jb
daa
mov
jmp
cmpsl
sub
repnz
sbb
rcr
jns
jl
adc
xlat
mov
jmp
lods
sub
ja
in
sbb
cmp
cmp
cmp
sbb
add
inc
adc
adc
push
jo
aas
inc
mov
orb
jnp
add
mov
mov
es
rolb
add
lahf
jns
add
int3
fiaddl
and
push
adc
jae
js
incl
fs
addb
xchg
cltd
inc
mov
ficoml
push
mov
popf
movsl
stc
xchg
filds
push
sbb
mov
das
fsubr
mov
test
aas
sub
add
shrb
int
adc
and
fnstsw
aad
pop
mov
adc
hlt
xchg
add
jg
gs
push
imul
mov
aam
lahf
lods
mov
insb
lcall
inc
xor
cmp
xor
mov
faddl
push
add
sbb
mov
add
cmpsl
ja
in
cmp
test
leave
mov
mov
sub
iret
mov
leave
push
mov
insl
dec
mov
std
mov
sub
xlat
xor
sbb
loope
dec
clc
xor
push
xchg
mov
ss
xchg
add
mov
add
sub
insl
xchg
cmp
lods
lret
mov
fisttpl
dec
aas
sbb
add
push
inc
ss
sub
mov
in
xor
iret
cmpsl
add
mov
or
jg
mov
imul
cmpsb
pop
inc
das
cmc
sub
mov
or
pop
shlb
xor
pop
pop
jae
mov
sub
pop
cmp
aaa
jl
cmp
mov
dec
scas
mov
jae
aaa
inc
mov
outsl
pop
push
pop
dec
pop
inc
loope
inc
sub
fisubrs
dec
push
inc
loopne
cmp
cmp
mov
inc
mov
push
dec
shrl
cmc
xor
pop
scas
cmpsb
jb
mov
jg
fs
push
mov
ja
bound
push
cltd
fildll
lcall
xchg
aaa
std
cmp
cwtl
pop
ja
mov
sbb
adc
inc
pop
jg
xchg
sub
out
cmp
ja
sti
mov
cmp
push
add
mov
fwait
adcb
add
sbb
add
lds
cmp
jns
and
sbb
mov
insl
out
lock
or
sub
mov
out
negl
sub
enter
sbb
ffreep
cmp
mov
movsl
pop
nop
sub
jg
mov
sti
pop
adc
adc
and
xor
outsb
imul
leave
jmp
mov
pop
aas
pop
stc
inc
adc
test
int3
lret
add
leave
nop
cmp
and
jno
shlb
jo
mov
out
int
mov
inc
pop
outsl
and
mov
daa
stc
push
aas
insb
sbb
push
lods
ljmp
dec
add
mov
sbb
cmp
jnp
add
pusha
pop
add
popf
xchg
aad
aam
out
in
mov
push
and
aas
iret
jecxz
lods
pop
jg
add
mov
sti
add
push
test
mov
dec
xchg
lret
jno
add
aam
test
mov
pop
and
push
cmp
jg
mov
in
jmp
cmp
pop
mov
sub
pop
testl
mov
aam
mov
cld
dec
shrl
sbb
out
test
popf
imul
std
add
inc
cmp
add
and
icebp
pop
cmpsl
mov
arpl
ret
out
and
or
and
push
add
notl
mov
sub
xchg
cmp
add
jne
cmc
mov
adc
mov
add
data16
pop
pop
sbb
add
lret
outsl
xchg
aaa
add
and
mov
pop
aas
and
push
in
lahf
loop
mov
inc
push
mov
mov
and
sub
test
insl
dec
jecxz
xchg
add
scas
test
cmp
inc
mov
mov
or
mov
into
test
add
sar
std
mov
or
push
es
shlb
and
das
repnz
add
cmp
imul
ss
lea
and
push
xchg
mov
aad
out
cmpsl
fdivs
ss
lods
jg
icebp
xchg
hlt
xor
mov
push
dec
pop
jne
add
jnp
sbbl
inc
std
cmpsl
xchg
int3
add
popf
out
stos
sbb
pop
outsb
lods
mov
clc
xchg
or
and
in
add
daa
adc
mov
imul
test
mov
lds
out
pop
or
sbb
mov
cmp
inc
dec
dec
mov
scas
jp
add
push
xlat
subl
in
testl
cmp
add
mov
pop
pop
add
sub
punpckhwd
outsb
add
lahf
xor
in
inc
add
jno
add
mull
jne
and
add
sub
add
xor
jecxz
push
notl
decl
out
push
jae
stc
enter
hlt
fdivrs
mov
push
mov
jg
jns
mov
rorb
test
adc
sbb
movsl
inc
adcl
jp
stos
mov
mov
hlt
add
or
jge
stc
add
frstor
rcll
pop
popf
sub
jb
js
xchg
jge
or
add
and
push
lcall
dec
mov
dec
or
add
shlb
xor
sbb
dec
daa
ror
pop
xchg
mov
pushf
push
movsb
icebp
stos
sub
mov
and
pop
sarl
shr
add
iret
xor
insb
xor
xchg
mov
cmpsl
xchg
addl
lret
jmp
fnsave
add
and
xchg
sub
popf
sub
in
add
cld
and
inc
mov
push
inc
mov
lret
xchg
mov
adc
add
pop
xchg
jbe
shll
dec
xlat
jns
sbb
mov
lret
daa
pop
js
add
xchg
test
inc
nop
add
mov
hlt
cmp
inc
mov
sbbl
notb
inc
mov
dec
rcll
jns
mov
add
jns
add
add
sub
jmp
xchg
insb
add
mov
out
std
repz
sub
pop
xor
push
sub
pop
icebp
or
mov
jmp
fmull
xor
jecxz
iret
pushf
pop
xor
jo
lods
out
aaa
imul
adc
or
xor
mov
and
lret
or
mov
fistps
int
sub
ja
xchg
add
push
push
enter
out
mov
add
sti
add
and
push
fsts
divl
add
inc
jl
gs
mov
movsl
aas
mov
adc
ljmp
lods
daa
jecxz
add
cld
mov
mov
cli
in
push
aas
push
jmp
push
mov
xchg
iret
jne
fdivrl
push
call
std
add
mov
loope
dec
pusha
lds
mov
aam
and
shrb
jmp
xchg
xor
sub
andl
sub
lret
add
hlt
ljmp
loopne
jecxz
cmc
pushf
inc
mov
loope
add
dec
cmp
add
push
adc
jne
ljmp
or
sbb
dec
popf
add
jl
loope
adc
loopne
xchg
pop
xchg
insb
add
jno
sar
loope
das
pop
push
pop
add
aas
cs
ja
jge
mov
mov
inc
fldl
dec
sti
std
mov
scas
inc
rorb
aaa
cmp
pop
imul
add
push
mov
cmp
fcmovne
outsb
pop
out
popa
cmpsl
add
testl
dec
add
adc
dec
jns
cmp
jne
mov
ja
nop
mov
loop
pop
sub
mov
adc
fwait
mov
rcrb
sarb
cmovg
pop
add
setge
out
push
jnp
xchg
xchg
mov
test
xorl
fistpll
loope
inc
cwtl
add
in
sti
mov
jg
push
add
xor
add
lods
mov
pop
hlt
xor
mov
add
sarb
xor
mov
sbb
cli
and
cld
adc
imul
mov
pop
xchg
xchg
mov
mov
adc
push
outsl
jmp
cld
mov
push
xchg
aad
into
in
add
add
jno
loop
and
sub
jle
pop
xchg
mov
and
sbb
shrb
cmpsl
lock
divb
or
dec
and
aaa
pmaddwd
add
push
sbb
nop
imul
inc
mov
sbbl
mov
daa
js
jle
xor
pushf
enter
and
adc
rorb
ja,pn
sahf
add
arpl
std
test
mov
pop
int3
int3
nop
ja
int
add
add
mov
inc
imul
dec
mov
fistpll
sbb
push
dec
flds
push
cmp
cli
add
adc
out
cmc
jae
incl
sbb
xor
loope
jg
rcrb
sub
xchg
insb
cmp
hlt
cmpsl
sarb
or
lret
add
push
push
icebp
xchg
fwait
out
dec
add
add
movsl
dec
jae
mov
push
in
out
mov
mov
es
dec
cmpsl
add
jno
dec
inc
mov
mov
lret
mov
mov
imul
jns
cmp
addr16
add
mov
fsubrl
push
cmp
jne
dec
rorb
nop
mov
jecxz
inc
mov
iret
adc
dec
cmp
xchg
add
mov
lret
cmpsl
fildl
xchg
jmp
xor
leave
inc
sbb
jo
push
mov
xchg
cltd
insb
mov
out
push
aaa
or
xor
inc
popf
outsl
movsl
dec
dec
dec
add
adc
jne
xchg
sbbl
sub
icebp
lret
jg
push
jg
mov
repnz
push
int
fldt
testb
mov
sub
test
add
gs
aas
xchg
mov
cmc
out
cld
push
fdivrl
push
lret
or
sub
mov
cmove
dec
cmp
sub
jb
and
mov
dec
hlt
sub
add
into
cmp
lret
adcb
sbb
fmull
add
out
in
xchg
int
adc
push
mov
jae
mov
cmp
xchg
mov
movsb
jge
leave
and
or
and
ds
adc
sub
dec
add
bound
aad
xchg
into
jecxz
inc
add
std
xorl
jge
adcl
dec
and
notl
dec
pop
add
popf
push
insl
mov
into
movsl
xor
incb
bound
dec
xchg
ja
and
inc
add
xor
outsl
add
out
or
cmp
xor
jns
lret
je
int
in
hlt
xchg
xchg
sahf
fldt
sti
or
ss
test
shrb
cmp
pop
into
rcrb
push
add
lret
mov
sti
mov
vcomisd
iret
cwtl
add
xor
lret
push
lahf
lret
jne
mov
test
dec
aas
and
push
fsubrl
pop
fs
pop
mov
pop
pop
add
xchg
xchg
mov
in
adc
xchg
add
std
shll
xchg
xlat
cltd
add
push
push
mov
fistps
fstpt
add
or
into
addl
sbb
inc
add
dec
dec
jns
push
and
mull
add
fnsave
jge
cmp
inc
xchg
out
out
mov
mov
mov
sti
insb
push
andl
ds
jecxz
pop
incb
xchg
cmc
stos
mov
jmp
add
or
sub
pushl
add
leave
cld
mov
add
jg
fnstsw
fldcw
xor
neg
xor
jmp
add
inc
cmpsl
shlb
cwtl
jecxz
push
mov
out
hlt
pop
cmp
shl
test
int3
pop
pop
add
inc
popa
xlat
inc
pop
mov
lea
sbb
mov
in
sbb
daa
sub
loopne
cmc
or
inc
add
iret
adc
inc
sbb
insl
cltd
lret
test
add
pop
imul
sbb
jge
sbb
cmp
mov
sub
add
sbbb
arpl
add
add
add
seta
scas
fcmovnu
cwtl
loope
sub
jbe
jae
push
incb
shll
sbb
sbb
ret
or
add
mov
nop
daa
push
add
das
adc
xchg
fsubrl
cmp
sub
dec
lds
adc
outsl
into
sbb
stc
daa
adc
out
mov
pushf
and
flds
das
push
outsl
cmp
fst
lds
rcrl
leave
mov
and
mov
xlat
cld
lods
add
cmpsl
les
pop
push
mov
xchg
jle
lret
pop
iret
jo
mov
andl
pop
dec
jmp
testb
mov
mov
and
push
mov
popa
ret
xchg
les
popa
ljmp
xchg
xor
cmpsl
push
lock
add
and
push
lds
mov
jg
sub
dec
dec
mov
jae
cmpsl
sbbl
xchg
call
mov
hlt
clc
cmp
cmp
pop
cmp
mov
add
pusha
ds
imul
inc
jnp
cmp
push
cmpsl
xor
daa
add
push
and
adc
adc
cmp
ljmp
cltd
dec
xlat
cmp
mov
fimull
dec
roll
xor
iret
popf
mov
movsb
push
adc
int
mov
in
lods
sbb
or
aas
mov
hlt
jae
or
rclb
negb
aam
pop
mov
orl
cltd
mov
cmc
xor
mov
incl
add
xor
int
test
sbb
add
xchg
dec
pop
or
pop
xchg
sbb
cmp
lods
mov
xchg
mov
test
daa
daa
add
xor
faddl
push
push
jns
dec
xor
add
rcrl
aaa
mov
add
pop
cmp
mov
pop
daa
cmp
ret
push
into
repnz
stc
xor
leave
lret
cmc
mov
rcr
cmp
addr16
jnp
fldenv
cld
lahf
leave
jb
ret
aas
add
fidivrl
loopne
mov
add
and
xchg
add
add
inc
pop
sbbl
mov
rorl
call
dec
fs
loop
imulb
push
push
xchg
insl
js
fisttps
jecxz
sub
shll
adc
add
gs
sti
sarb
stos
iret
mov
jmp
pusha
cld
add
rorb
xchg
mov
mov
les
nop
lods
or
xor
add
jnp
sbb
mov
cwtl
arpl
lea
mov
lods
add
sti
movsb
pop
add
test
movsl
cmp
into
and
push
jge
outsb
dec
mov
mov
insl
ja
and
arpl
ja
bound
iret
xchg
add
divb
pop
cmp
les
mov
iret
scas
jle
and
cld
data16
pop
mov
pop
aas
add
inc
add
adc
add
jnp
mov
test
addr16
call
incb
ss
jecxz
add
mov
lahf
popf
push
scas
adc
sbb
nop
cmp
and
mov
add
xchg
jge
pop
jns
pop
add
inc
pop
mov
test
aas
mov
or
add
push
out
pop
outsb
shlb
dec
adc
movsl
shll
cwtl
test
mov
mov
daa
add
add
movsl
jne
sub
pop
xchg
jns
add
dec
pop
aas
jae
mov
mov
das
mov
mov
sbb
mov
outsl
and
hlt
mov
call
inc
jns
push
xor
dec
cltd
lods
inc
mov
dec
mov
adc
sub
hlt
dec
add
dec
aam
cltd
sub
add
add
inc
jg
loop
in
cld
add
repz
fildll
mov
mov
add
jmp
test
inc
mov
jne
jecxz
out
cli
or
stos
and
outsl
sub
add
stc
mov
gs
lods
cmp
sti
sub
in
mov
mulb
arpl
rol
sar
aaa
out
mov
ss
dec
hlt
add
and
xor
jb
mov
scas
rolb
jne
stc
add
jno
pop
sub
inc
xchg
movsl
cltd
jg
cmpsl
cmp
and
mov
hlt
lcall
adc
push
dec
add
xchg
iret
mov
mov
subb
loop
divb
add
rolb
inc
repz
mov
sti
jecxz
nop
jg
repz
add
jl
insl
add
mov
dec
xor
addb
ficomps
lds
pop
testb
bswap
add
in
hlt
adc
jg
ja
sarb
xchg
into
sub
or
cmpsl
testb
dec
mov
dec
mov
mov
jnp
and
aaa
push
or
cmpsl
sub
xor
inc
ja
xchg
pop
sub
mov
jbe
mov
lret
jns
scas
and
leave
cmp
cmc
std
add
rclb
pop
cwtl
add
mov
nop
mov
shr
mov
fnstsw
add
fwait
mov
push
lcall
pop
xchg
pushf
pop
and
cltd
jge
or
mov
mulps
test
lea
xchg
dec
mov
nop
mov
rcr
mov
ds
pop
testl
mov
inc
inc
cmp
loop
sti
pop
jae
dec
ja
or
aad
icebp
jle
pop
mov
rcl
in
jns
lret
shl
daa
loop
add
push
mov
mov
or
cmpsl
cmc
xchg
add
jne
mov
xorb
inc
cmpsl
lret
sub
xchg
inc
pop
stos
cmp
int3
imul
add
cmp
adc
dec
cmc
push
in
dec
jne
outsl
add
xchg
mov
roll
dec
lret
lret
cmp
iret
aaa
sbb
cmp
adc
jle
rorb
mov
xchg
aas
jecxz
popa
fs
add
xchg
push
push
pop
scas
mov
xor
fucomp
adcl
mov
incb
push
mov
hlt
mov
mov
cmp
aas
mov
adc
inc
mov
cld
mov
arpl
mov
insl
loope
ror
shlb
out
push
add
gs
fsubrl
jp
adc
mov
add
mov
lods
scas
test
das
mov
xchg
xor
mov
xor
and
popa
add
roll
xchg
dec
and
cmp
arpl
cmpl
xchg
pop
add
into
popa
aad
sti
insl
dec
sbb
mov
andl
mov
adc
mov
pop
cli
insb
decl
or
jno
and
dec
nop
cmpb
mov
int
mov
shlb
stos
cli
dec
push
sub
hlt
sbb
mov
xchg
fisubs
dec
jge
add
lds
xchg
mov
inc
int
jbe
add
dec
sarl
scas
xchg
sub
xchg
add
xlat
cmp
sbb
add
cs
mov
fcomi
or
sub
mov
cmp
add
push
lret
and
pop
jae
mov
ret
and
lock
and
lret
sar
xorb
add
neg
enter
push
add
imul
xchg
sbb
add
sbb
xor
jnp
popl
cltd
dec
mov
and
arpl
xorl
mov
addr16
rorb
adc
cwtl
or
adc
inc
inc
add
xor
pop
xor
cld
and
cmp
lret
inc
rclb
jbe
das
fwait
adc
rcrb
mov
sbb
or
nop
dec
and
dec
imulb
or
xor
lret
add
mov
repnz
in
cmc
in
pusha
xchg
jg
mov
xor
xchg
outsl
mov
cmpb
arpl
sahf
imul
into
in
ja
jno
add
push
inc
filds
sbb
out
divl
add
add
xchg
shrb
mov
pop
add
cld
jo
mov
std
in
push
cmpsl
add
mov
out
xlat
cld
loopne
repz
frstor
mov
jp
ret
mov
xchg
imul
add
imul
xor
push
add
fisubs
iret
add
mov
enter
sbb
lcall
flds
mov
ss
xchg
testb
jge
adc
xor
cld
cmp
insl
fiadds
cmp
add
dec
sahf
gs
xor
xor
std
mov
add
fwait
and
or
inc
xor
pop
mov
adc
mov
add
cmp
outsb
js
jl
subb
mov
out
rol
xchg
jge
pushf
xor
add
movsb
or
cmpsl
lods
xorl
int3
imul
aam
or
and
dec
add
jae
mov
pop
adcl
push
jle
adc
sbb
and
sub
inc
test
aas
aas
orl
add
pop
adc
add
insb
dec
mov
cltd
jl
sbb
aas
nop
jb
mov
mov
std
dec
mov
lea
mov
popf
mov
sarb
fsubs
imul
dec
lock
or
popa
test
stos
lods
or
adc
es
mov
add
push
shl
xor
cmpsl
cmp
jno
out
pop
dec
pop
mov
push
push
dec
add
sub
push
pop
cmpxchg
je
fnsave
and
test
push
notb
shl
add
cld
les
add
adc
and
enter
xor
cmp
and
cmpsl
dec
dec
push
and
fmull
hlt
push
jnp
add
jl
stos
mov
movsl
inc
pusha
add
xlat
push
bswap
into
pop
imul
dec
add
js
jl
icebp
out
test
mov
pause
in
mov
pop
ffree
aas
fwait
dec
mov
lods
cmp
dec
and
in
xchg
pop
xchg
fldl
cmp
popa
jl
cmp
insl
mov
sbb
andl
dec
add
imul
push
clc
xchg
das
mov
sub
outsl
in
ret
add
sbb
hlt
and
repnz
je
lea
iret
hlt
jo
xor
pop
mov
lds
mov
clc
loop
xchg
and
push
dec
mov
fcoml
test
subl
nop
dec
inc
mov
or
sbb
sub
jo
into
ja
or
movsb
mov
cs
ret
add
or
nop
popf
pop
pushl
add
add
xchg
movsb
mov
mov
popf
mov
aam
jmp
loope
out
hlt
imul
jmp
mov
leave
and
stc
push
aas
mov
add
dec
lods
add
push
std
and
dec
mov
nop
cmp
xchg
dec
add
adc
insb
lea
add
jne
idivb
push
sub
dec
or
push
jae
cmp
jg
repnz
xchg
ret
adc
xchg
xchg
das
add
push
pusha
adc
out
movsb
dec
int3
add
hlt
popa
xchg
add
sbb
and
sub
divl
mov
outsl
je
imul
cld
rolb
or
and
lret
popf
push
gs
push
popa
add
pop
xlat
fdiv
cltd
pop
cmp
lahf
and
mov
insb
das
je
jl
push
mov
pushf
outsl
ret
mov
cmpsl
int
add
xchg
shll
fucom
fildl
pop
insb
cld
je
cmp
lods
mov
dec
repz
fucom
mov
hlt
and
lds
sbb
add
sub
movsl
and
add
stc
pop
adc
add
jl
rorl
rorb
repnz
xor
enter
cld
inc
adc
repz
sbb
pop
out
mov
loope
inc
pop
adc
rolb
add
icebp
xchg
pushf
cmp
mov
xchg
fmull
add
aas
xchg
sbb
shl
or
mov
and
cmp
mov
sbb
aam
or
or
sub
loope
xor
lret
jae
sbb
sub
xlat
cmp
inc
das
fwait
test
mov
add
daa
xchg
popf
xchg
das
dec
add
aam
daa
inc
fwait
cld
negb
daa
in
lcall
inc
insb
dec
js
lea
enter
cld
adc
ret
cmp
inc
jge
ret
sbb
ljmp
dec
mov
add
mov
mov
add
jnp
cmpb
push
add
icebp
scas
cld
pusha
fnstsw
rolb
push
dec
dec
pop
shll
imul
sub
fsubr
jae
sub
push
jbe
pop
rcrb
xchg
and
aam
dec
in
push
sti
inc
xor
jmp
dec
mov
mov
cmpsl
faddl
aaa
adc
nop
mov
lods
sub
js
fwait
mov
in
push
inc
sbbb
sub
push
lea
add
cmp
les
ljmp
lret
dec
lods
add
or
in
in
fwait
mov
and
mov
xor
lahf
push
or
and
movsb
ljmp
push
aam
popa
pop
in
pop
pop
cld
mov
inc
add
and
mov
call
jae
in
mov
int
xchg
sarb
clc
pop
mov
ds
cwtl
sub
rcrb
cmpsl
add
inc
pop
lret
movsl
inc
pop
dec
mov
push
adc
mov
or
gs
adc
inc
stos
mov
imul
jnp
inc
lods
mov
mov
pushf
sbb
pop
push
faddl
or
xchg
xchg
hlt
mov
add
ret
adc
sbb
stos
out
pop
es
nop
outsl
pushf
test
sbb
sub
fldt
inc
add
mov
add
mov
push
xchg
pushf
cltd
movsb
cltd
add
les
faddl
dec
hlt
push
popf
ret
adc
sub
out
mov
std
mov
add
fcmovnb
test
shrb
call
pop
in
add
daa
mov
lea
push
lahf
inc
arpl
in
xchg
out
cmpsl
je
add
loopne
jmp
lods
sub
cmp
cmp
loop
inc
lods
jge
inc
rclb
fstpt
mov
jns
loope
dec
inc
lods
cld
pop
dec
add
cmc
sub
mov
in
push
test
cmp
and
xor
fwait
nop
and
das
sub
std
mov
nop
push
sbb
and
dec
dec
and
xor
jg
leave
xor
or
add
mov
pop
movl
lahf
pop
lock
imul
dec
scas
mov
xor
inc
insl
sbbl
cmp
push
rcr
push
cmpsb
scas
hlt
sbb
xchg
pop
lcall
jb
pop
push
jg
push
pop
xor
xor
xor
lods
fs
jbe
sahf
cmp
ja
push
arpl
dec
sbb
dec
xor
ss
pop
push
jno
push
ds
push
inc
dec
jg
inc
fisubrs
cmp
je
sub
xor
dec
dec
js
add
pop
popa
inc
cmpsl
mov
push
xchg
int
adc
sub
dec
inc
sti
pop
pushf
lods
jecxz
mov
icebp
cmp
je
sar
jp
xchg
sahf
pop
xchg
add
mov
cwtl
ret
pushf
cmp
loope
jg
rolb
xchg
outsl
faddl
dec
je
test
push
mov
hlt
and
pop
jno
leave
pop
mov
icebp
dec
sub
push
das
mov
xlat
xchg
fwait
pop
sub
adc
push
sbb
inc
dec
adc
xchg
in
cltd
add
popf
add
sub
sarb
add
xor
lods
sarl
jns
add
jmp
mov
jns
or
das
add
push
pusha
into
call
dec
insl
les
cwtl
jae
add
xchg
cmp
jmp
lret
inc
jl
add
sub
mov
jle
dec
movsb
dec
lret
imul
add
pop
push
mov
push
pop
add
test
gs
cmpsl
ret
dec
add
movsl
pop
or
rorl
punpckhdq
jns
inc
push
std
pop
sbb
out
fdivs
jmp
dec
cmp
std
leave
ret
inc
nop
adc
pop
cmp
push
aas
inc
sub
add
mov
nop
add
add
shrb
mov
jle
ljmp
in
lret
push
add
hlt
or
adc
xchg
pop
mov
push
daa
adc
mov
sub
les
ds
add
sar
outsl
pop
jmp
cmpsl
add
and
aas
mov
mov
pop
add
xchg
push
lret
sbb
enter
mov
push
and
mov
jl
out
shlb
mov
jb
adc
add
lea
mov
call
adc
jb
cmpb
add
jmp
test
int3
mov
loop
inc
xchg
xchg
sti
add
outsl
mov
xchg
cmpsb
mov
pop
out
bound
add
push
pop
sbb
jl
push
loop
dec
jecxz
add
call
push
adc
add
cmp
lret
repnz
mov
fs
dec
arpl
pusha
scas
add
aad
je
sbb
call
rcll
jae
push
mov
aas
or
cmp
add
ja
stc
pop
dec
test
mov
lret
sub
sub
mov
pop
cs
jl
dec
mov
xchg
mov
dec
lret
pop
jg
mov
add
dec
int
jg
int
leave
jbe
pop
mov
shr
data16
pop
dec
add
add
add
add
add
add
jns
add
add
jns
ja
add
add
pop
pop
jb
add
add
push
insb
jno
add
add
add
dec
cmp
popa
add
xor
add
add
dec
push
add
add
add
xor
dec
pop
xor
add
cmp
push
add
dec
ss
add
add
jbe
add
arpl
jae
add
bound
inc
add
push
add
or
aad
imul
sarl
addr16
push
test
sub
add
ret
cwtl
shll
addr16
dec
fmuls
mov
ret
data16
sbb
mov
or
cmpsl
add
enter
test
and
mov
enter
add
sub
fidivl
push
aas
ret
cmp
inc
je
test
or
lret
lods
sbb
cmp
add
mov
rcrb
add
jle
faddp
sti
jne
add
jbe
xchg
add
or
mov
sti
scas
mov
cmp
pop
pop
pop
and
dec
jecxz
xchg
in
mov
lock
add
out
cld
outsl
xchg
fsub
repz
mov
enter
jecxz
shrb
inc
push
call
and
add
push
jmp
test
dec
ja
sbb
or
mov
dec
jg
lea
pop
dec
push
mov
xchg
or
push
push
mov
add
sahf
inc
mov
xor
and
mov
jmp
push
test
adc
pushf
mov
sub
cmp
lods
dec
and
mov
inc
mov
fisttpll
cmp
and
cld
adc
inc
popa
int3
mov
lahf
dec
mov
push
dec
test
cmp
lock
jnp
inc
add
out
and
mov
ficomps
jo
popf
mov
pop
call
add
xchg
cmc
repz
add
rorl
sarb
cld
sub
subl
js
mov
es
or
sbb
mov
std
mov
add
mov
sub
add
xlat
mov
mov
mov
jnp
or
shr
sbb
mov
push
test
mov
insb
lcall
mov
enter
ljmp
xor
cmp
pop
adc
add
jecxz
fdivrl
dec
add
pop
mov
add
ror
das
adc
pop
adc
sbb
rcl
mov
arpl
add
pop
mov
dec
and
sub
push
and
test
cmp
sahf
xchg
pushf
jecxz
xchg
ss
add
data16
cmpb
es
insb
popa
pop
cmp
pop
pushf
add
inc
in
dec
cld
cmp
aad
push
and
mov
inc
add
and
add
movsb
fs
sbb
pop
add
sti
sub
cmpsb
notl
add
cld
scas
inc
ret
sub
sbb
dec
cs
mov
push
and
mov
or
adc
icebp
jo
repnz
dec
loop
fimuls
dec
lods
dec
sbb
insb
pop
in
inc
sbb
icebp
jb
stos
fs
aam
int
fistpl
mul
pop
mov
add
inc
cs
mov
mov
dec
insb
cmpsb
fdivl
shll
jg
mov
icebp
add
lods
popf
mov
outsl
and
mov
xor
cmpb
cmc
sbb
and
imul
or
movl
inc
sti
jle
adc
out
mov
mov
jbe
inc
in
lock
in
pop
in
push
jne
or
aam
add
int
je
jmp
sbb
pop
mov
pop
xor
es
add
inc
pop
mov
add
xor
or
jmp
inc
xlat
movl
cli
jno
ficoms
std
mov
adc
data16
mov
fnstsw
lea
sub
clc
aas
cld
orl
jae
mov
hlt
aas
fucom
push
jecxz
jmp
je
xor
mov
outsb
sub
adc
xchg
shl
inc
daa
je
rcrl
mov
cmp
mov
inc
jno
inc
sarb
push
xlat
loope
or
and
push
movsl
xchg
cmp
arpl
push
add
jb
jp
jmp
push
xchg
add
jl
mov
mov
dec
cld
stc
ror
push
insl
mov
scas
jecxz
mov
or
push
add
stos
or
out
pushf
ret
outsl
in
xchg
popa
xchg
jne
imul
aad
xor
daa
fs
push
mov
push
add
mov
popl
test
aas
xor
enter
add
dec
int3
rclb
cld
add
jbe
xchg
sbb
jae
and
fbstp
fucomp
call
inc
adc
test
into
pop
and
and
adc
jnp
cmp
mov
xchg
imul
int
lock
shr
dec
mov
adc
xor
or
iret
decl
jne
dec
fs
add
sar
mov
xor
test
daa
add
mov
lods
adc
mov
mov
jl
pop
stos
inc
mov
dec
xor
incl
push
cmp
dec
lock
ret
std
in
xchg
and
imull
add
stc
pop
xchg
adc
cmpsb
mov
mov
xor
aad
push
jno
mov
sbb
ficoms
pop
inc
and
lock
cmp
fcompl
adc
xchg
in
jg
divl
add
outsb
cmp
dec
mov
pop
dec
call
sub
lock
lods
stc
dec
mov
inc
sbb
in
add
in
test
cmp
jno
clc
arpl
xchg
add
xor
lret
leave
push
mov
mov
mov
fwait
mov
add
jge
xchg
roll
fcomp
mov
cmc
imul
das
xor
das
push
insb
or
mov
or
lods
mov
cli
jp
nop
std
add
repnz
push
cmp
pop
or
incb
push
call
adc
pop
lret
dec
adcl
fs
pusha
inc
jg
lret
mov
pop
push
popf
mov
dec
mov
lcall
mov
scas
test
lods
inc
add
icebp
into
int
adc
iret
rcll
or
mov
add
mov
icebp
inc
pop
mov
jbe
xchg
mov
ja
movsl
neg
add
lods
mul
and
js
cwtl
pop
clc
pop
sbb
push
sbb
subb
leave
lcall
jge
adc
popf
jns
add
pop
dec
loop
icebp
add
into
cld
xor
cmp
mov
stc
sub
sbb
xor
incb
mov
ja
cmc
inc
and
test
mov
jge
insl
mov
pop
les
add
push
pop
add
scas
sarl
mov
push
mov
xor
and
je
and
adc
call
inc
jg
adc
ljmp
adc
mov
push
add
inc
push
loopne
add
add
into
dec
jmp
pop
push
push
lea
pop
mov
add
xor
imul
nop
mov
mov
inc
jl
pop
adc
ret
jle
inc
or
mov
aas
jbe
push
filds
jne
jno
aaa
dec
cwtl
pop
mov
je
mov
cmp
bound
xor
fs
lods
jb
or
arpl
cmp
fcmove
jp
inc
mov
andb
inc
scas
jns
push
das
pop
jae
insl
cmp
mov
clc
mov
and
dec
mov
push
and
subb
cmp
inc
notb
inc
adc
inc
sub
and
mov
mov
adc
dec
rolb
adc
adc
inc
aas
negl
jle
push
outsl
xchg
jne
jnp
test
push
fwait
and
add
imul
in
pop
hlt
push
cli
add
mov
add
xor
imul
jmp
add
aaa
sub
inc
addl
imul
or
xchg
fldenv
push
xor
mov
addr16
mov
jge
xchg
outsb
lahf
movsb
mov
aaa
repnz
add
idiv
sbb
jle
aaa
mov
cltd
and
add
scas
push
mov
mov
fstpl
aaa
jno
loop
dec
rcrb
fimuls
sahf
mov
lret
cwtl
sar
loopne
inc
cld
pop
add
xor
imul
jnp
mov
sbb
fidivrs
jne
les
pop
lret
bound
popl
shrl
popf
add
adc
pop
cmp
outsl
fcmovnb
xchg
fwait
cld
inc
xchg
add
push
ficoms
in
repnz
or
add
mov
sub
cwtl
fildll
mov
dec
fildll
out
sub
nop
add
adc
and
das
mov
inc
and
add
xchg
into
pop
in
sub
xchg
dec
add
nop
cmp
push
addr16
pop
orl
mov
fcoml
cld
roll
aas
cmp
dec
push
cmc
insl
out
pop
jge
jmp
add
xchg
xorb
xchg
int
fsts
mov
test
mov
iret
mov
dec
fisubs
out
inc
mov
xchg
mov
in
and
inc
in
mov
test
fwait
jbe
outsl
mov
mov
in
stc
pop
and
jecxz
add
sub
inc
fsts
mov
andl
lods
dec
add
fwait
mov
popl
xchg
icebp
xchg
mov
sub
das
stc
sub
lods
sbb
imul
pop
mov
fucomip
or
inc
mov
es
add
jno
in
mov
mov
fisubs
aaa
sbb
inc
aas
sub
cmp
repz
push
mov
mov
sub
aam
stos
cmc
add
sub
add
les
inc
pop
inc
mov
jo
jne
test
mov
into
add
lods
pop
clc
add
inc
mov
fsubs
add
loopne
xor
outsl
ficomps
add
jle
push
mov
cltd
push
cli
sbb
adc
pop
scas
sub
into
and
jmp
push
inc
std
iret
add
in
sub
mov
xorl
ljmp
add
jne
and
add
jp
push
sbb
or
inc
add
add
imul
pop
lds
mov
jmp
iret
add
mov
cmc
sbb
fildl
icebp
mov
into
aas
mov
shr
test
lods
push
xchg
and
push
mov
gs
mov
repz
fidivrs
mov
mov
lret
outsl
loopne
iret
out
dec
clc
pop
decl
xor
inc
mov
sub
scas
sbb
cmpsb
nop
mov
sub
inc
jmp
scas
mov
push
rolb
cmp
xor
add
and
mov
ret
lret
add
and
nop
adc
inc
jns
jbe
cwtl
dec
frstor
les
popf
in
cmp
aas
cld
divps
mov
and
push
push
inc
insl
repz
mov
cld
sahf
xchg
mov
cmp
sti
leave
xchg
neg
jne
imulb
or
js
das
xchg
sub
cmp
pop
dec
jle
push
bound
jae
jp
mov
dec
fwait
dec
mov
inc
mov
add
out
cld
stc
cmp
or
fnstenv
dec
sub
cmp
outsb
das
ja
sti
or
cltd
sbb
sub
movsl
sarb
cmp
pop
sar
add
xchg
pop
push
add
outsl
sub
xchg
rcr
mov
daa
enter
fidivrl
out
xlat
pop
cmp
xchg
add
push
sub
cmp
dec
xchg
adcb
bound
insl
cmc
xor
cmpsl
nop
mov
mov
mov
icebp
in
idiv
pop
cwtl
iret
mov
shl
out
inc
pop
ja
hlt
mov
and
jl
fdivl
xchg
adc
movsl
in
cld
dec
fisubs
or
test
mov
into
xor
add
int
add
outsb
pop
mov
cmp
mov
sub
stos
mov
mov
xchg
add
shll
mov
loopne
adc
fbstp
cmpsb
sub
and
rol
test
stos
int
xchg
rorb
add
mov
int
add
jns
orb
add
imul
add
hlt
and
lret
xchg
xlat
add
fwait
bound
or
das
mov
test
mov
lds
pop
xor
inc
daa
ljmp
add
pop
scas
mov
and
xchg
stos
xchg
stc
pop
or
lock
mov
orb
jb
int
subl
add
int3
and
sbb
pop
add
dec
movsl
jno
js
add
sub
shr
in
jmp
repz
sahf
adc
push
popf
sub
xlat
add
jno
xchg
and
out
test
lods
mov
pop
in
push
inc
pop
ss
in
mov
pop
enter
lea
fidivs
outsl
jecxz
push
mov
out
lahf
std
lret
add
sbb
out
sub
stos
or
lods
adc
xor
pop
std
lcall
sub
lds
movsl
pop
add
pusha
inc
shrl
addb
cmpsl
lahf
xchg
cmc
in
lret
add
je
imul
dec
fwait
pop
mov
fistpll
std
cmp
add
clc
sub
mov
mov
xchg
decb
cltd
popf
dec
sahf
aas
aad
push
pop
loopne
add
ror
dec
sbb
dec
pop
popa
inc
xor
adc
pop
add
xchg
lods
mov
call
das
jmp
icebp
dec
lds
aaa
jbe
pop
add
add
insl
dec
dec
adc
add
ljmp
mov
sbbl
jg
cmp
inc
mov
add
mov
mov
mov
pop
pop
mov
cmp
scas
ds
inc
lahf
xchg
push
xchg
dec
xor
flds
fistl
cmp
movsl
dec
lret
xchg
scas
push
xchg
nop
dec
cmpsl
int
mov
adc
xor
pop
iret
dec
add
jb
js
mov
mov
and
lahf
stos
lock
lret
loope
aaa
xor
test
jno
sub
out
cmp
pop
mov
mov
rorb
jge
mov
or
int
in
in
mov
xchg
and
push
jno
hlt
arpl
cmp
jne
fwait
negb
dec
aad
sub
xchg
or
icebp
sbb
xor
lods
bound
mov
popf
push
cmc
daa
enter
xor
jecxz
hlt
adc
jge
jno
out
setle
ret
lret
aam
pop
loopne
inc
out
testl
mov
scas
cld
sets
sub
pop
sti
adc
ret
bound
repnz
and
pop
add
dec
dec
sbb
push
or
lea
jns
movsl
pop
adc
mov
cmp
daa
fiaddl
popf
in
out
cld
les
xor
mov
or
add
add
dec
jno
lods
pop
out
dec
and
cmp
cli
xchg
xlat
movsb
push
aas
aad
jnp
sbb
cmp
mov
test
cmp
push
mov
jmp
in
mov
jnp
insl
pop
lret
xchg
jecxz
and
in
cmpsl
sbb
adc
jecxz
lea
leave
mov
scas
cld
les
das
sub
add
aas
jle
into
imul
out
cmp
or
sbb
dec
fiadds
or
mov
pop
leave
jecxz
repz
cmp
xchg
or
xlat
add
push
xchg
mov
sub
add
or
add
in
std
es
popf
push
pop
rcll
jbe
insl
decl
stos
sbb
mov
fisttpll
lahf
popa
mov
std
mov
and
mov
cmp
sub
into
test
pop
fstl
push
add
lock
add
popa
mov
adc
shl
jne
add
js
mov
filds
out
mov
loopne
jecxz
imul
xchg
mov
and
add
dec
xchg
es
ss
test
aaa
faddl
or
popa
xlat
in
in
add
dec
sbb
xchg
mov
out
sar
fstp
aaa
in
cmp
xor
loope
loop
adc
cmp
pop
out
in
mov
mov
xchg
push
xchg
pop
add
jl
fildl
cmpsb
sbb
int
xlat
mov
push
add
std
mov
add
lret
pop
arpl
jp
cmpb
cmpsl
xchg
xchg
add
lods
pop
mov
int3
cmp
dec
push
lock
imull
popa
add
sti
mov
aas
xor
push
out
sbb
add
dec
adc
iret
sub
pop
mov
push
test
ret
dec
mov
jns
lahf
add
mov
cmp
add
adc
lods
jecxz
jmp
sarl
es
xchg
arpl
imul
mov
sbb
fidivs
aas
adc
jge
sub
icebp
add
cld
adc
xor
sub
add
rcll
lods
mov
cmp
les
mov
sar
aas
sbb
and
daa
add
or
adcb
sbb
std
cmp
and
inc
fsubr
fs
jl
rcl
cmp
mov
jecxz
cld
scas
push
jns
jle
ret
cmp
insb
in
xchg
fmulp
das
faddl
pop
aaa
pop
adc
pop
add
or
fsubrs
sti
loop
mov
push
iret
sub
jne
mov
rcrb
jg
iret
addb
hlt
cmc
mov
sbb
push
sbb
gs
mov
mov
add
shll
enter
loope
sbb
add
aaa
gs
jo
cld
jbe
outsl
popf
dec
jge
xchg
lret
sub
cmpsl
outsl
lds
dec
ret
mov
pop
call
aas
cmp
lcall
imul
cmp
add
mov
cmp
sbb
jns
xor
push
iret
mov
insl
sub
mov
and
jg
into
push
cmp
xchg
add
pop
testl
and
sbb
inc
push
mov
outsl
pop
mov
rcll
insb
je
lea
xchg
cmpsl
mov
mov
lahf
xor
and
pavgw
loop
testb
sbb
add
jp
add
mov
call
frstor
inc
mov
push
add
mov
loope
push
out
and
add
fcmovnu
dec
repz
xor
pop
jae
jge
cmp
inc
inc
push
imul
std
inc
mov
lods
mov
fmull
pushl
incb
sbb
dec
dec
gs
pusha
add
data16
imul
mov
mov
sti
add
lret
or
sbb
incb
es
sub
aaa
mulb
sub
mov
jmp
ret
sbb
add
das
or
sub
jno
pusha
fimuls
pop
popf
mov
out
outsb
addr16
jnp
imulb
lds
cmp
sbb
rcr
or
push
add
xor
orps
jno
mov
fsts
dec
add
jnp
hlt
inc
fisubs
repz
xlat
aas
imul
mov
dec
xchg
cmp
cmp
xchg
sub
cmpsl
pop
xchg
lahf
lods
scas
jno
mov
lock
imul
lods
push
cmp
sbb
aas
and
imul
xchg
dec
mov
stos
movsl
cmp
popa
dec
push
dec
arpl
fidivrl
xor
dec
inc
jp
push
sbb
sub
fwait
sub
add
popf
adc
cmovnp
out
pop
mov
mov
test
jnp
pop
popa
add
adc
add
jbe
movb
dec
push
nop
rcrl
lds
xor
add
pop
stos
or
pop
pop
roll
inc
sbb
inc
pop
mov
add
push
mov
sbb
lahf
inc
xchg
sbb
ss
inc
inc
dec
add
push
outsl
incb
jne
ds
cmp
mull
dec
lahf
sbb
mov
pop
mov
gs
mov
sbb
add
scas
inc
add
adc
dec
cmpsl
int
mov
dec
hlt
mov
sysexit
int3
shlb
sub
xor
nop
cmp
lret
repnz
add
jb
sub
push
cmc
inc
add
shlb
cmpsl
xchg
xchg
pushf
cmp
scas
pop
rolb
divb
jo
xorps
add
test
aad
in
or
cmp
lret
pop
push
add
push
and
pop
cwtl
sbb
lret
xlat
add
sub
out
add
sub
test
adc
push
dec
pop
cmc
sarl
pop
jg
sub
cltd
rclb
sbb
cli
add
arpl
xchg
push
cwtl
out
pop
out
int3
mov
adc
mov
pop
jecxz
test
and
mov
inc
outsb
mov
push
inc
jecxz
into
lods
popa
fistpll
ret
jae
sub
xor
add
push
cld
pop
cwtl
pop
pushf
in
mov
and
push
mov
faddp
pop
pop
or
sti
test
mov
out
mov
out
pop
add
xchg
dec
das
loop
in
dec
lcall
pop
decl
add
dec
and
cmp
xchg
iret
cld
test
lret
fsubs
sbb
cwtl
int
pop
add
add
addr16
mov
lret
aas
loop
lcall
int
xor
or
jge
outsb
fstl
popa
stos
rcrl
jg
sbb
jg
roll
push
and
pop
repz
add
out
xchg
and
and
inc
test
scas
cld
sbb
je
jns
jg
mov
and
ljmp
lea
leave
mov
jecxz
mov
mov
dec
push
nop
aaa
xchg
mov
iret
pushf
pop
roll
data16
add
inc
adc
cmpsb
aas
fwait
shlb
mov
test
sbb
push
adc
in
test
adc
nop
add
imul
push
add
sub
imul
mov
jge
jmp
sbb
mov
jae
sbb
push
add
stos
sub
cmp
push
dec
imul
add
jns
mulb
incb
and
pop
pop
xor
cmc
push
adcb
sbb
lahf
add
sar
inc
cltd
dec
add
xor
imul
sbb
push
aas
pusha
mov
nop
jecxz
stc
add
mov
or
stc
cmc
sub
jg
imul
mov
mov
data16
sbb
pop
push
dec
std
movl
cld
xchg
fdivl
jns
jecxz
insl
jmp
ja
sti
out
sahf
outsb
outsl
stos
addl
add
xchg
mov
or
or
sbb
add
lahf
xchg
mov
out
int3
incb
fmulp
or
sbb
cmpb
dec
hlt
fs
jg
cmpl
mov
mov
mov
pop
mov
js
or
xlat
int
sbb
and
sub
out
cmp
rcll
mov
cmpsl
cld
in
add
mov
pop
aas
insb
ficomps
and
js
cmp
loope
repz
imul
adc
mov
sub
xchg
and
test
aad
jge
cmp
mov
imul
sarb
cmpsb
mov
mov
lret
jno
fistps
mov
out
addb
push
cmpsl
inc
pushf
dec
test
mov
lds
pop
xor
cmp
xchg
pop
js
add
out
cmp
aad
push
pop
insl
cmp
pop
lcall
loop
stc
mov
rcrb
test
das
aaa
negl
mov
and
jns
jle
int
jmp
out
mov
dec
mov
add
jae
mov
popf
sub
xchg
push
mov
mov
jo
fwait
aas
shll
xchg
jmp
push
dec
lret
dec
jg
movsl
repz
add
sub
add
into
dec
push
sbb
jmp
add
dec
dec
cmpb
pushf
das
mov
insl
mov
mov
enter
or
jle
jbe
cmpb
cmp
xor
pop
ja
dec
pextrw
add
push
dec
cwtl
pop
add
or
frstor
std
cld
mov
popf
add
mov
loope
jno
testb
iret
sbb
sarl
mov
shrb
ljmp
ficoms
pushf
arpl
dec
jecxz
or
dec
lods
pop
fstpt
int
add
jnp
mov
and
inc
and
sbb
aas
jae
pop
add
pop
jno
jbe
outsl
mov
testb
push
xchg
les
fcomps
lods
mov
aaa
pop
add
test
aaa
arpl
add
push
and
rolb
iret
mov
test
aad
dec
mov
insl
jle,pt
mov
sub
iret
mov
xor
xchg
clc
add
add
sub
push
mov
hlt
scas
fisubs
pop
loopne,pn
xor
jecxz
loop
in
in
add
into
loope
jo
or
add
or
insl
lret
mov
loopne
or
dec
addb
mov
push
mov
test
sahf
xlat
cmp
or
xor
or
mov
ss
jne
dec
dec
pop
add
xor
pop
add
mov
imul
push
mov
test
inc
loopne
sti
dec
xchg
push
and
out
testl
test
add
rcrl
mov
sub
fwait
std
push
iret
adcb
and
cwtl
outsl
dec
cmpsl
sar
mov
js
orb
scas
clc
mov
xlat
test
shr
sub
jecxz
xor
sub
add
pop
jp
imul
decl
mov
xchg
xchg
pop
andl
mov
pop
jg
sti
aad
add
push
andl
in
add
xor
cltd
orl
cmpsl
mov
cs
loop
push
fwait
sbb
xor
sarb
lock
inc
sbb
fdivrs
imul
test
pop
and
mov
lea
pop
aad
add
sub
dec
or
je
mov
imul
push
std
fwait
rorl
subl
xor
nop
inc
orb
mov
pop
test
sbb
out
orl
add
sbb
mov
xor
cmp
popf
mov
imul
add
rcl
aad
js
neg
mov
das
xor
sbb
add
icebp
dec
adc
iret
jl
jns
pop
hlt
cmp
jo
aad
inc
pop
pop
stc
push
popl
mov
divb
pop
xchg
and
cmpsl
xchg
iret
aas
ds
sbb
pop
lahf
pop
sub
adc
mov
pop
pop
outsb
fdivs
mov
dec
rolb
dec
lds
mov
xor
dec
js
ffreep
sbb
ret
xor
testb
aad
add
push
push
out
out
mov
das
arpl
leave
add
sbb
add
stos
into
test
push
data16
adc
movsl
mov
lds
sbb
cmpsb
jnp
adc
test
int3
cs
dec
repz
pop
xchg
add
cmp
ret
aad
push
sub
xor
push
or
mov
test
sti
sub
dec
arpl
stos
pop
fwait
add
or
popf
icebp
cltd
rolb
xchg
jae
lods
cmp
sub
pop
mov
mov
ss
jg
push
mov
ss
inc
jns
xchg
inc
outsl
addl
iret
lret
and
add
nop
pop
scas
add
fdivrl
mov
dec
insl
into
add
sub
cmp
adc
push
or
add
pop
out
cmc
test
sbb
and
cwtl
inc
mov
rorb
shl
add
js
stc
test
fldl
xlat
add
sub
add
push
inc
xor
js
mov
dec
rcll
fwait
sub
mov
add
inc
cmp
popf
cmpsl
xchg
pop
sbb
adc
repz
xchg
subb
test
or
or
add
xor
scas
faddl
nop
add
mov
sbb
addr16
cmp
int3
dec
mov
pop
sub
xor
insb
push
xchg
ja
lds
mov
int
ss
or
inc
out
shl
mov
add
dec
cmp
outsb
enter
repz
add
sbb
daa
and
xor
aas
test
dec
add
xchg
adc
cmp
push
mov
daa
aas
leave
xchg
iret
sbb
fldenv
jae
pop
cmp
mov
adc
lahf
sbb
and
jg
xor
and
jge
das
xchg
adc
not
arpl
dec
mov
mov
outsl
xchg
add
adc
push
xor
loop
cmc
mov
aaa
addr16
inc
sub
inc
sbb
cmpsl
ja
adc
repz
add
test
sar
sbb
cmp
inc
enter
in
test
add
icebp
dec
dec
jns
push
sub
out
xchg
cli
mov
addl
ror
add
fiadds
pop
mov
mov
mov
sbbl
lea
or
cmpsl
push
jl
enter
lods
sbb
add
ss
cmp
jle
das
sbbb
bound
cmp
mov
add
xchg
add
mov
adc
cmp
aaa
push
cmp
inc
sbb
mov
lcall
sub
outsb
fstl
rorl
or
xchg
aad
out
add
inc
shl
ret
mov
jge
pop
cld
cmp
adc
adc
imul
add
std
mov
cmc
dec
push
jg
inc
movsb
push
add
inc
sub
das
in
add
cltd
or
xor
clc
sub
adc
into
add
jo
inc
add
test
gs
int
xor
repnz
loope
icebp
sahf
out
cmp
dec
add
popf
dec
daa
loopne
jmp
enter
add
add
or
push
fnstcw
sub
lahf
sub
mov
and
aas
enter
icebp
cmp
mov
sbb
ret
xor
pop
jno
sub
xchg
in
fildll
add
js
idiv
fidivrs
mov
xchg
aas
pop
sbb
add
sub
fdivr
faddl
pop
cmp
pop
call
lock
clc
and
popf
push
xchg
dec
pop
add
lahf
push
cmpsl
pop
lea
or
cld
and
inc
cltd
mov
je
js
lods
into
jns
sub
jp
push
pushf
add
add
sbb
add
frstor
mov
jno
cmp
int
inc
inc
add
dec
into
dec
sbb
push
mov
xchg
sarb
xorb
or
rolb
test
aaa
mov
and
les
mov
aam
fistps
in
adc
hlt
test
cld
aas
fadds
sti
add
icebp
in
lcall
or
sub
or
cmc
mov
or
xor
aaa
cld
pop
sbb
mov
subl
fcoms
call
idivb
cwtl
add
lea
out
lods
mov
push
lahf
negl
shlb
mov
das
add
add
dec
dec
xchg
daa
lret
sbb
sti
cmp
pop
pop
cmp
xor
and
arpl
in
imul
xor
ret
cld
cmp
imul
xchg
dec
aas
sbb
pop
nopl
mov
jo
add
xchg
xor
add
jle
jmp
pushf
dec
enter
aad
cmpl
inc
fisttpll
jae
leave
les
out
jns
adc
lods
inc
xchg
les
mov
loop
shlb
jns
mov
nop
xchg
push
sbb
add
call
or
add
jp
imul
mov
sbb
lods
add
adc
mov
ljmp
or
pop
pop
and
xor
mov
mov
fcompl
dec
aam
outsb
ficomps
cmp
cmp
testb
inc
mov
sbb
rolb
icebp
xchg
lea
movsb
dec
stos
jecxz
insl
mov
fisubs
jl
cli
sub
or
ret
int
cmpsb
lret
jmp
inc
add
xchg
cld
movsb
cmp
scas
sub
ds
xlat
divl
mov
test
mov
add
aad
fstl
or
lret
clc
mov
xor
roll
mov
xchg
out
cld
in
add
push
enter
dec
sbb
adc
and
movb
mov
lcall
ret
dec
and
std
dec
xor
lds
cmp
cmc
mov
into
pop
mov
add
and
push
rorb
jg
pop
idivb
inc
dec
loope
pop
adc
outsb
cwtl
outsl
dec
mov
inc
push
arpl
ja
insb
addr16
test
test
pop
pop
arpl
jbe
cmp
jp
xor
pop
dec
sbb
dec
push
cmp
rcr
xor
outsb
sbb
jo
push
jmp
dec
jle
rorb
sti
pop
lock
insl
aad
ljmp
add
pushf
cmp
add
nop
in
xchg
sbb
mov
les
mov
mov
cmpb
lods
add
push
add
outsl
ret
ficompl
add
pushl
jnp
sbb
add
fcmovnbe
add
repnz
leave
pop
inc
lods
mov
aad
test
mov
mov
add
pop
sbb
add
mov
jns
and
pusha
mov
xor
mov
or
iret
adc
loope
pop
adc
mov
iret
pop
add
xchg
ret
sub
scas
stc
fiaddl
mov
pop
inc
std
jg
pop
add
xor
push
jp
dec
das
and
mov
sbb
sbb
jle
cltd
aas
add
mov
ja
aad
cmp
lret
push
enter
outsb
add
mov
sbb
pop
lahf
popf
in
mov
mov
mov
js
cltd
jmp
dec
xlat
push
and
iret
sub
ds
jo
das
pop
push
inc
jbe
inc
or
into
mov
rol
cmc
aas
adc
popl
mov
xchg
dec
inc
shlb
dec
pop
lods
arpl
add
push
pop
aas
mov
std
or
mov
pop
mov
or
pop
sbb
in
add
push
std
inc
cli
jbe
pusha
add
imul
mov
inc
cmp
mov
leave
ds
outsl
cltd
lahf
mov
mov
int3
jne
xchg
lds
xchg
cli
add
std
lea
sub
inc
and
cmp
imul
pop
jne
or
fildll
and
push
inc
es
les
add
push
jg
add
out
sbb
sbb
loopne
push
jno
mov
aas
repz
orb
test
cmpsb
and
lods
or
pop
dec
pop
es
jne
clc
das
sub
jbe
mov
sarl
cmp
test
and
mov
pop
mov
gs
cmpb
adc
jge
mov
mov
add
and
sbb
lret
or
add
sbb
dec
add
lret
pop
int3
add
jb
lahf
mov
jl
je
aas
movb
popl
mov
lods
call
add
test
or
lea
mov
add
mov
xchg
sub
rol
add
and
add
cmp
aas
xchg
stc
daa
mov
iret
push
ficomps
xor
addr16
out
jle
mov
lret
sbb
xor
pop
sbb
mov
xchg
xchg
xchg
mov
mov
push
sub
jmp
in
mov
jg
sbb
loope
leave
xchg
pop
sub
aas
jmp
mov
daa
jb
ficoms
xchg
add
repz
ret
cmp
sbb
mov
pop
in
leave
add
sarb
jle
jbe
mov
pop
jecxz
adc
add
cmc
cmp
push
and
mov
xor
imul
cmp
pop
fcoms
hlt
pop
dec
fldl
sbb
fcomps
fists
aad
mov
and
sahf
add
aaa
xor
es
int3
incl
adc
icebp
test
int
inc
rcrl
push
cwtl
add
fs
cmp
out
add
pop
sub
rcr
and
sub
pop
mov
cmpl
xchg
icebp
xchg
clc
jnp
add
ficomps
mov
mov
dec
adc
add
xchg
push
pop
add
sbb
push
das
les
cmp
jle
jo
mov
ja
pmaddwd
bound
loope
and
add
cmp
cmp
add
ljmp
inc
sub
lods
xchg
mov
xor
in
xchg
call
mov
addr16
negl
mov
movsl
std
mov
icebp
test
nop
aam
ja
fadds
jbe
and
pop
outsb
in
cltd
mov
jb
fdivs
add
push
jae
xchg
pop
pop
mov
cmc
aas
mov
popf
das
pop
js
aas
inc
jbe
xchg
push
imul
fwait
mov
xor
push
pushf
cld
fidivs
pop
add
fimull
cmp
inc
mov
rolb
jecxz
mov
add
loope
pushf
stos
ljmp
mov
loopne
repz
mov
mov
mov
jecxz
fidivs
stc
dec
add
fcoms
sub
lea
cmp
lret
and
in
push
pop
inc
cmp
xlat
mov
rolb
aaa
xchg
lahf
mov
add
in
outsb
ja
inc
pop
mov
push
cltd
mov
and
int3
sub
jg
sub
xchg
mov
mov
stc
lods
loope
sarb
xor
push
mov
outsb
mov
push
movsb
enter
mov
rorl
dec
mov
mov
inc
xor
pop
pop
mov
add
fidivrl
aas
xchg
fmul
fildll
jno
xor
pop
mov
pop
mov
fldt
add
inc
jmp
push
cmp
aas
fstpt
xor
mov
push
mov
mov
xor
sub
mov
adc
jle
pop
or
addr16
aaa
mov
stos
out
sar
icebp
add
jbe
fnsave
daa
call
push
pop
mov
mov
mov
add
cwtl
rclb
mov
fadds
mov
inc
into
dec
mov
add
lret
add
sbb
dec
pop
add
adc
popa
inc
add
jno
xchg
lahf
int
xchg
add
idivl
fdivrs
dec
mov
or
mov
mov
lods
add
mov
mov
adcl
add
cmc
sbb
pop
jns
jno
mov
std
mov
push
fdivl
dec
inc
jne
dec
mov
jg
add
mov
add
hlt
iret
fidivrl
stc
sbb
add
add
stos
mov
xchg
and
dec
xchg
fs
adc
ret
hlt
dec
mov
mov
cmpl
jbe
shll
push
sbb
das
dec
add
pop
add
and
ret
inc
scas
mov
xchg
in
or
add
pusha
fimuls
sahf
loop
push
dec
sbb
insl
xor
add
fstpt
mov
adc
lea
add
pop
popa
mov
js
test
mov
jg
shrb
push
add
sub
repz
fadd
and
add
out
jne
sbb
sarb
mov
cmp
jb
frstor
lret
inc
add
sbb
dec
add
cs
sbb
and
add
mov
jg
fists
xchg
sbb
cmp
popa
add
lret
cltd
loope
add
add
sbb
imul
adcl
lret
mov
add
mov
inc
in
fidivrl
adc
aam
mov
inc
movsl
jg
jg
add
mov
pusha
pop
add
inc
xchg
dec
leave
jno
pop
add
sahf
xor
add
dec
add
dec
add
fs
add
add
add
add
add
push
add
jne
add
push
add
add
add
add
xor
inc
add
add
add
imul
add
add
add
add
add
add
add
add
arpl
add
add
popa
add
add
add
je
add
pop
add
dec
push
add
add
add
cmp
dec
add
add
push
cli
mov
popf
xchg
roll
mov
imul
movl
sbb
push
les
enter
imul
adc
push
add
add
mov
jb
cmp
aas
jne
shll
jge
lock
mov
outsl
pusha
push
mov
inc
out
ret
sub
incb
into
dec
jo
lock
add
or
pusha
mov
xchg
pop
subl
cmpb
clc
decb
jnp
inc
out
fyl2xp1
mov
fistps
ds
xchg
cli
jmp
enter
dec
fwait
add
sub
adc
mov
mov
pop
sahf
call
cli
mov
test
sbb
add
popf
and
dec
xchg
xchg
sbb
addb
inc
jne
mov
nop
adc
mov
rorb
and
stc
cmp
insb
bound
pop
lock
mov
push
mov
mov
movq
js
sub
sar
loopne
add
shlb
add
sti
dec
or
pop
mov
in
into
mov
sub
mov
add
ret
shr
add
and
in
mov
iret
lds
daa
fadds
push
and
adc
fsubr
add
cmp
inc
inc
mov
jae
adc
je
sbb
mov
mov
sar
aas
pop
dec
in
jmp
add
mov
pushf
popf
or
dec
dec
push
inc
mov
inc
add
jmp
lods
push
cltd
add
call
test
add
add
mov
fdivp
push
vpaddd
add
xor
xchg
sub
adc
test
mov
loope
add
add
dec
imul
out
add
ja
add
testb
inc
sbb
nop
mov
arpl
fst
ficomps
incb
imul
sahf
mov
lds
adcl
pop
inc
aad
pushf
int3
ret
outsb
xchg
fwait
pop
cmp
push
and
sbb
push
shrl
mov
scas
dec
cld
iret
add
popa
mov
pop
add
or
cmovae
add
insb
lahf
jl
ss
mov
push
add
aam
and
cltd
inc
int3
iret
add
lahf
cmp
inc
sbbl
adc
adc
and
xchg
loop
xchg
or
add
decl
mov
ret
outsl
pop
sub
out
mov
xor
mov
mov
xor
adc
lods
imul
bnd
add
pusha
add
mov
mov
jp
mov
pop
or
inc
in
dec
aas
mov
lret
ds
stc
add
iret
enter
jns
add
fisttpl
jbe
test
add
or
jg
push
mov
std
dec
loop
cmpsb
mov
cwtl
adc
imul
call
inc
add
stc
test
pop
adc
mov
mov
cmp
and
daa
and
cmp
xor
mov
xchg
pop
rorl
add
aad
mov
clc
leave
inc
and
add
adc
adc
cmp
and
cmp
inc
out
mov
push
cmp
mov
mov
dec
push
add
lret
push
fnstcw
test
mov
push
ret
lcall
dec
arpl
pop
mov
int3
test
inc
add
ret
sub
aad
adc
add
cmp
out
mov
cltd
lods
mov
jge
das
push
aaa
add
shlb
mov
fistpl
add
outsb
dec
les
mov
xchg
int
add
cmp
jne
jge
call
sbb
daa
movl
fwait
jmp
aas
mov
add
push
mov
pop
mov
cld
lret
aas
cmp
dec
add
mov
push
sub
inc
lds
test
pop
pop
add
nop
pop
outsl
into
dec
mov
dec
mov
mov
cltd
xor
repz
cmp
jge
jne
push
cmp
jo
dec
mov
insb
pop
jp
arpl
lret
jo
jle
push
and
push
mov
pop
cmp
mov
rorl
inc
dec
dec
nop
je
mov
lea
ja
inc
mov
push
test
xchg
lret
imul
xchg
push
xchg
push
daa
lcall
add
adc
add
ljmp
call
jmp
add
fmull
popf
xor
sub
out
and
sub
push
pop
repz
add
arpl
adc
lahf
dec
and
std
sbb
jnp
cltd
dec
imul
and
add
testl
cmp
div
cmp
test
inc
xor
sub
xchg
adc
dec
mov
test
shlb
mov
dec
call
sub
mov
mov
mov
aas
out
adc
jecxz
jge
push
mov
push
stos
push
mov
inc
dec
cmp
sub
add
pop
pop
add
push
jno
pop
adc
mov
ja
sti
pop
push
mov
mov
inc
adcl
mov
or
add
add
sub
mov
fwait
add
adc
inc
mov
push
mov
push
add
lods
xchg
divl
stos
iret
mov
je
dec
movb
sub
push
enter
mov
add
pusha
outsl
dec
lahf
cmp
jmp
dec
or
add
int3
out
mov
leave
ret
push
dec
add
push
inc
add
jae
push
mov
cmpsl
insb
imull
sbb
call
or
or
sub
mulb
es
mov
cmp
jl,pn
flds
and
movsl
loope
cli
add
imul
mov
add
push
add
cwtl
test
mov
out
dec
and
ja
incb
mov
mov
or
xor
inc
push
imul
mov
dec
dec
pop
inc
push
add
mov
shll
lods
pop
std
imul
mov
jp
les
or
sub
insl
push
cs
jmp
ret
lods
sub
fcomi
into
push
mov
mov
in
add
add
or
add
xchg
rcr
push
push
ja
add
cmp
push
cwtl
or
mov
xor
add
push
mov
out
adc
int
lahf
push
push
add
ss
std
mov
in
outsb
and
add
cmp
jno
fldl
shll
cltd
or
call
sbb
mov
rol
push
add
arpl
mov
jle
adc
push
filds
sbb
cmp
jne
add
push
mov
mov
aam
jno
ret
pop
dec
add
test
std
aas
push
push
cld
adc
shrl
xchg
dec
pushf
xchg
pop
mov
mov
int
sub
dec
xchg
mov
cld
aas
xchg
sti
mov
cmp
fwait
sbb
or
xchg
scas
add
lret
sarl
adc
inc
cld
nop
add
lea
ljmp
dec
dec
pop
aam
cmc
sub
mov
repz
out
xchg
lods
fwait
add
rclb
sub
shl
adcl
imul
inc
insl
xchg
push
cmc
push
pop
addr16
shrb
fucomi
imul
cmpsl
clc
and
mov
stc
ret
mov
nop
xchg
and
xlat
cmp
daa
add
jmp
into
add
or
int3
lea
add
enter
shr
mov
iret
push
pop
pop
cmp
jns
jnp
call
enter
in
cltd
shrb
pop
jecxz
add
jo
inc
shll
jns
sbb
mov
dec
add
cwtl
dec
jne
in
xchg
mov
xor
test
shrb
out
jg
stc
data16
add
pop
push
sbb
mov
jnp
fstl
call
add
clc
cmpl
add
dec
icebp
jne
sbb
in
add
jno
ret
andl
adc
negb
add
push
add
add
cs
fstpl
shrb
aas
push
jbe
mov
daa
or
jmp
pop
fdivl
pop
mov
mov
stc
test
xor
adc
pop
sti
or
addps
imul
ret
jecxz
mov
ja
popf
sub
push
shlb
adc
mov
mov
insb
cmc
inc
movsl
outsl
incb
cmpsb
dec
dec
adc
je
sbb
pop
ss
or
add
pop
xchg
or
add
arpl
icebp
mov
adc
outsl
je
pop
xchg
jo
or
jle
mov
testb
add
loope
call
aas
xchg
dec
bound
cmpsl
inc
push
lods
add
ja
aam
gs
add
in
rorb
and
jbe
call
jge
lods
aam
inc
mov
jne
inc
ss
loopne
xchg
popa
and
lret
mov
add
enter
lret
dec
and
mov
sbb
fisttpll
inc
iret
or
jb
add
shlb
mov
mov
or
pop
fiadds
or
jmp
add
out
enter
mov
bound
and
push
adc
jno
arpl
mov
xor
push
mov
xor
std
xchg
add
add
sub
call
in
or
cmp
int
mov
xchg
or
pop
inc
xorb
call
out
mov
repz
pop
out
push
out
push
out
mov
add
or
add
jge
xchg
stc
cli
sarl
sbb
js
dec
lods
test
pop
add
inc
sub
mov
hlt
ret
push
pop
scas
sbbb
push
popa
xchg
mov
add
mov
in
cmp
scas
mov
pop
adc
xchg
in
jp
lret
xor
icebp
add
pop
lods
xchg
lret
outsb
add
push
ja
bound
push
mov
xchg
inc
pop
mov
cmp
sbb
jl
loopne
pop
cltd
rcrl
stc
add
pop
fsubs
add
add
aas
test
add
enter
sub
pushf
adc
int
pop
cli
cwtl
cmp
test
mov
ds
pop
icebp
xor
mov
pushl
xchg
adc
ret
lds
pop
dec
or
cltd
sbb
popa
add
sarl
pop
jns
dec
mov
add
rcrl
cmp
inc
mov
loopne
mov
jbe
rcl
mov
add
int
add
jns
mov
inc
incl
push
mov
adc
fwait
rcrb
fisubrs
jge
sbb
insl
sub
into
call
mov
xchg
rol
mov
rcrl
mov
mov
mov
add
lret
push
jmp
fimuls
sti
sar
add
out
push
add
or
mov
rclb
or
add
stc
add
in
pop
pop
sbbb
data16
lods
dec
jge
add
mov
cli
jae
ljmp
fists
mov
xchg
sbbl
movl
fwait
push
out
add
loopne
push
or
or
xchg
sbb
jb
pop
mov
jp
jle
ret
outsb
mov
aam
inc
add
stc
mov
pop
mov
pop
mov
loope
add
shrl
mov
dec
arpl
dec
iret
call
add
jp
xchg
aas
or
pop
int3
xor
or
rcr
mov
jecxz
pop
mov
xchg
push
xor
loop
pop
call
pop
fsubrs
aas
jo
xchg
push
jno
outsl
pop
sub
inc
cmp
mov
lea
add
aaa
roll
lret
mov
push
or
aas
sub
xchg
add
repz
add
dec
or
test
shl
enter
jae
jne
add
inc
and
push
adcb
daa
fildl
dec
out
or
jge
inc
push
leave
mov
pop
ds
jmp
ret
sbb
pop
xor
into
sub
ds
and
inc
icebp
les
outsb
movsb
cld
aad
cmpsl
cmp
add
and
xchg
pop
sti
mov
repnz
push
test
daa
xchg
inc
cltd
add
cs
into
cli
lea
outsb
and
xor
sti
adc
push
add
add
ja
aaa
mov
mov
add
rcrb
cmp
repz
xchg
cmp
and
iret
popf
mov
jae
pusha
jbe
adc
adc
rolb
sbb
add
sbb
push
addl
add
dec
es
lea
jp
mov
shr
mov
fldcw
push
push
add
icebp
xchg
lahf
fwait
popa
jp
mov
push
aas
and
fcmove
xchg
adc
iret
lret
ds
or
sti
add
icebp
es
lret
lea
push
push
mov
lock
dec
imulb
ja
adc
xchg
outsb
xor
je
and
call
popf
hlt
inc
jge
mov
pop
xchg
scas
lds
mov
iretw
lods
mov
mov
inc
stos
into
popf
add
jecxz
xchg
jle
ja
cld
push
mov
call
icebp
mov
ffree
test
inc
pop
subb
cmp
psubw
pop
push
pop
enter
push
xbegin
shlb
andl
in
inc
add
mov
sarl
jo
in
outsl
aas
and
in
pop
imul
cld
sub
inc
idivl
mov
jle
xlat
jp
lret
andl
or
push
lock
mov
sahf
mov
movsb
mov
pop
shll
add
jnp
cmc
push
add
add
dec
pop
fildl
add
ljmp
loopne
push
mov
out
jecxz
pop
push
aam
push
cmpsb
addr16
mov
add
pushf
and
testb
add
popf
or
into
std
addl
pop
lahf
jbe
in
inc
dec
inc
aas
addl
adc
out
push
add
mov
and
shlb
movb
adc
fs
add
mov
leave
adc
filds
push
xchg
repz
sti
or
pop
fnsave
lcall
cmp
push
and
ljmp
pop
inc
mov
pop
pop
or
fstpl
out
dec
cmp
lret
mov
xchg
push
add
push
stos
mov
sub
cmp
sbb
push
cmp
clc
jp
sbb
add
je
lods
push
sbb
mov
sub
push
pop
jnp
inc
mov
mov
sbb
int
lahf
or
jge
push
or
lcall
xchg
call
roll
sub
xchg
lret
dec
clc
add
sbbb
mov
push
andnps
add
inc
cmc
adcb
inc
lods
mov
add
addl
xchg
in
adc
insl
or
mov
xchg
movsl
testl
movsb
int3
or
mov
stc
es
inc
popa
dec
add
and
pop
mov
sbb
and
lods
push
in
mov
sbb
dec
call
add
das
sbb
jmp
add
cs
subb
xor
out
mov
ja
adc
cmpsb
cmp
adc
pop
or
je
fildl
pushf
aam
pop
xchg
in
sub
push
sbb
lods
out
aad
add
pop
jmp
mov
add
test
shl
imul
dec
push
xchg
mov
ja
jmp
pop
lahf
add
dec
shlb
jae
add
sub
mov
cmp
or
cmp
outsb
dec
inc
cmp
xor
add
or
push
inc
lret
icebp
pop
mov
inc
cmp
dec
mov
kmovb
int3
xor
or
push
add
jno
lods
mov
lods
mov
and
loop
lret
cmp
data16
mov
sbb
add
cmp
rolb
sub
cmpsl
add
das
outsb
dec
xor
sbb
sub
mov
call
orl
jg
jae
incl
inc
and
mov
cli
cmp
setae
pop
pop
call
push
mov
push
or
lret
add
imul
dec
mov
test
mov
iret
inc
pop
add
loop
insb
jecxz
loope
add
mov
xor
jg
or
cwtl
add
and
inc
or
xchg
ret
popa
xchg
dec
fistpl
mov
mov
pop
jg
dec
in
ret
rorb
rorl
adc
xor
lahf
or
xchg
and
add
inc
push
pop
lcall
dec
xchg
imul
clc
or
movsb
nop
test
lret
xor
or
pop
adc
push
xchg
push
shll
les
sbb
push
and
add
faddl
mov
data16
jg
sbb
movsl
xchg
insl
mov
mov
fisubs
sbb
adc
shrb
ret
cmpl
push
push
jg
call
int
adc
std
push
pop
repnz
aas
test
lods
mov
addr16
orl
cli
decl
mov
mov
pop
decb
aas
jge
outsb
xchg
add
mov
call
arpl
or
gs
add
add
jno
push
cld
inc
pusha
mov
and
add
add
testl
arpl
jecxz
push
fmuls
mov
adc
sbb
pop
movsbl
mov
cmpsb
in
dec
xor
or
div
int3
add
in
add
int3
xchg
jmp
leave
sti
xor
sub
add
outsl
or
jnp
fmuls
jmp
ss
sub
lcall
adc
mov
mov
xlat
adc
add
and
add
in
in
mul
lret
adc
sti
pop
or
or
jmp
addl
cmc
adc
nop
add
mov
adc
or
or
cmpsb
pop
cmc
jge
cld
cwtl
pop
scas
aaa
sub
or
cli
aad
mov
pop
fistps
sub
and
or
push
mov
sbb
adc
add
popa
call
cltd
xorl
sbb
aas
lcall
les
mov
sbb
fnstcw
xchg
test
ja
push
cli
add
sub
lds
out
mov
push
lahf
pop
push
sub
xchg
pusha
xor
jle
sbb
add
adc
in
popf
in
push
add
decl
add
xchg
cmp
add
data16
sbb
aaa
xchg
pushf
inc
arpl
push
add
mov
int3
testb
or
add
std
rcl
adcb
jae
sbb
add
jno
int
fldcw
test
xchg
cmp
jae
scas
hlt
sbb
pop
out
clc
sub
outsl
imul
enter
adc
and
cld
add
push
dec
mov
mov
mov
cmpsb
das
mov
push
cwtl
sbb
dec
pop
xlat
dec
fldl
cltd
flds
fimull
nop
push
shrb
mov
jecxz
mov
xchg
mov
pop
add
lret
cmpl
pop
push
push
icebp
xchg
cmc
mov
psubusb
push
cld
daa
mov
xchg
nop
sbb
movl
fists
sub
call
mov
fldcw
xchg
cltd
lret
jno
add
test
sub
xchg
sbb
std
add
mov
roll
add
or
cmpsl
pop
dec
iret
cmp
call
add
mov
mov
ja
dec
cli
mov
push
push
lret
jnp
clc
add
mov
add
mov
insl
and
cmpl
dec
add
aaa
dec
sbb
fnstsw
inc
orl
inc
es
cmp
jb
add
and
jmp
mov
add
popa
cld
add
add
add
shrb
add
je
jecxz
clc
in
addb
jne
gs
pop
sbb
insb
mov
mov
fiadds
call
fs
mov
int3
pushf
and
xchg
mov
not
add
jo
int
pop
shrb
xchg
loope
es
jge
xchg
xchg
add
or
lods
add
jns
out
and
push
pop
ds
xor
mov
fistpll
ja
and
mov
ret
add
pop
add
jns
cwtl
xor
and
mov
add
fwait
sub
dec
xor
push
pop
sub
leave
dec
lret
int
inc
pop
or
cld
add
jo
adc
call
inc
sub
div
adc
or
aad
mull
mov
mov
out
jmp
or
add
notb
mov
insb
and
ds
stc
out
decl
popf
dec
mov
and
test
mov
rorl
repz
sbb
sbb
enter
out
add
push
lock
arpl
loopne
cmp
sbb
sub
pop
dec
adc
adc
leave
push
jnp
shlb
sahf
test
arpl
add
leave
cmp
add
out
sbb
arpl
int
ds
clc
mov
inc
sbb
pop
aaa
imul
push
inc
add
push
in
fadds
rcrb
fsubrp
dec
mov
and
std
enter
add
lds
sub
cltd
lahf
inc
cli
and
out
mov
popf
das
lods
mov
test
xchg
adc
jge
and
lock
add
scas
rcrl
pop
push
loope
sti
mov
adc
fsubs
loop
mov
add
sub
dec
sbb
add
scas
push
push
push
into
xchg
js
push
fdivs
mov
xchg
testb
sti
std
sbb
xor
inc
add
jle
lea
jg
call
enter
adc
pop
mov
jl
xor
cmp
jb
sbb
or
jbe
push
cld
fwait
mov
jp
ret
int3
pop
jns
addb
push
mov
js
lds
popa
loop
dec
mov
ss
arpl
sbb
adc
fldl
inc
jge
mov
xor
or
cmp
adc
add
idivl
push
xchg
aam
jmp
sbb
stos
push
fisubrl
rolb
lcall
test
mov
mov
mov
movb
ds
and
cmpsb
or
rcl
cmc
stc
xor
lcall
lods
cmp
inc
movl
fists
mov
movsb
inc
sub
pop
jnp
mov
je
movsl
add
push
lret
sub
push
call
dec
icebp
stc
je
xor
mov
out
gs
adc
adc
test
xchg
ja
push
mov
out
lahf
add
roll
cmpsl
mov
push
aad
jae
or
ja
shrb
or
and
push
daa
call
cld
int
into
inc
add
xlat
adc
mov
enter
push
add
and
imul
add
orl
dec
add
jnp
movl
mov
add
push
or
xchg
add
test
push
not
mov
leave
roll
gs
pop
xchg
outsb
test
pop
test
pop
mov
sub
addr16
dec
fwait
mov
xor
neg
pushf
lea
add
stc
sbb
mov
cltd
sbb
push
add
leave
lcall
bound
xorb
or
shll
cld
and
jbe
repz
push
add
or
lds
push
shlb
mov
jp
js
hlt
fwait
mov
add
inc
shlb
nop
out
mov
sti
test
and
sub
sbb
mov
insb
add
jge
test
and
mov
negl
add
movsl
dec
jb
orl
mov
push
in
rcrl
bound
fs
mov
inc
add
mov
add
adc
sub
sahf
sbb
xor
dec
and
out
lcall
push
adc
adc
cmp
loope
bound
mov
mov
bndldx
dec
je
and
sti
xchg
dec
aas
addl
lds
cmp
std
and
jmp
dec
in
aas
outsb
cmp
jecxz
push
arpl
mov
lods
bound
push
fwait
inc
dec
or
jge
sbb
jbe
xor
xor
dec
and
add
bound
mov
sbb
aas
rol
pop
rorl
lock
mul
orl
mov
add
pop
scas
xchg
mov
dec
daa
xchg
or
mov
pushl
or
pop
pop
jg
pop
dec
dec
rolb
pop
sti
arpl
mov
xchg
andnps
jle
pop
fsubrs
fisttpll
jne
or
and
or
popl
icebp
cwtl
stc
enter
lret
sti
pop
add
push
add
add
push
adc
or
daa
add
iret
ss
mov
cmp
mov
dec
adc
call
pop
sbb
cmp
and
cmpl
int3
dec
mov
add
pop
add
and
push
ja
ss
incl
les
test
pop
mov
sahf
jg
mov
push
out
mov
add
jg
mov
popf
mov
add
inc
icebp
xchg
jne
cmp
into
testb
lock
in
cs
out
mov
aaa
out
daa
test
mov
cmpxchg
pop
add
bound
xchg
and
and
sub
rclb
sar
add
push
jle
mov
adc
pop
dec
lock
cmc
push
push
xor
and
negl
adc
mov
cmp
jg
and
inc
arpl
xchg
js
add
mov
dec
test
mov
shrb
movb
fsubs
aam
fidivs
lods
cmp
mov
shlb
add
fdivr
sub
cmp
dec
cmp
add
inc
cld
shl
sbb
sbb
cmp
jne
jbe
dec
dec
cmp
add
pop
sub
cmp
sub
inc
sahf
lock
nop
int3
add
mov
push
or
scas
push
lahf
inc
imul
push
push
or
mov
pop
call
insb
bound
test
add
jg
inc
cwtl
or
addb
imul
add
push
mov
sub
bnd
add
lods
cmp
cmp
xchg
cmp
or
pop
sub
mov
arpl
jmp
xor
mov
cmpsb
adc
aas
lret
push
mov
in
add
add
pop
fbstp
addr16
mov
aad
fidivs
or
test
movsb
pop
pusha
ret
xchg
add
and
and
call
rcrb
push
andps
push
pushf
add
test
in
or
jl
add
outsl
insb
add
fs
clc
add
les
data16
jo
movsl
push
sub
dec
insb
repz
jbe
push
les
xlat
imul
inc
pop
jmp
pop
mov
mov
insb
mov
enter
add
pop
pop
inc
fstpt
dec
jg
mov
leave
xchg
add
sub
rcll
or
mov
jl
pop
popf
btr
or
aas
mov
fiaddl
aaa
je
xor
add
test
lods
xchg
cli
or
addr16
call
test
bound
lret
movsl
pop
and
xchg
xor
clc
add
test
ret
cli
cmp
sahf
mov
js
inc
pop
jl
dec
frstor
divb
popf
adc
pop
sbb
cmp
push
pusha
inc
sbb
lret
dec
lahf
add
mov
cmp
cmpsl
outsl
or
add
add
rclb
mov
jmp
dec
pop
scas
fwait
mov
or
jg
add
mov
mov
jecxz
mov
call
add
in
pop
lret
lea
mov
fisubrl
cmp
orb
iret
push
add
adc
xchg
in
mov
inc
std
or
mov
rorl
imul
dec
pop
sub
cli
mov
push
cmp
lds
pop
mov
or
hlt
lods
dec
dec
rclb
or
aas
cmpb
xchg
xor
cld
xchg
mov
repz
orl
dec
adc
mov
imul
scas
add
data16
xchg
insl
je
popf
push
push
pop
jno
dec
pop
jbe
xchg
jle
sub
clc
in
jmp
pop
dec
mov
mov
loope
push
inc
xor
jl
and
js
mov
loopne
shll
popa
sbb
sub
cld
test
add
adc
add
jg
aam
add
push
jae
and
add
lea
fcom
clc
jecxz
test
add
ljmp
cmp
push
into
push
call
aaa
and
inc
rolb
inc
mov
mull
dec
mov
mov
add
dec
cmp
or
popf
push
iret
push
push
pop
mov
daa
xor
fwait
lcall
rcll
test
pop
jg
rorb
movsl
lods
jmp
mov
add
stc
bound
fwait
xchg
test
add
mov
push
add
nop
mov
add
sbb
cmp
mov
inc
mov
add
inc
push
mov
inc
add
mov
add
in
push
je
push
mov
repz
inc
add
add
xchg
add
repz
mov
lods
xor
and
adc
and
mov
xchg
push
scas
mov
es
shlb
bts
push
ret
clc
xchg
aas
je
enter
jno
mov
sub
and
fsubr
add
clc
mov
jns
dec
and
loopne
adc
inc
mov
push
push
aad
popf
mov
data16
iret
inc
iret
insb
iret
inc
andb
imul
insb
push
push
cmp
mov
jo
dec
pop
xor
push
jbe
jns
insb
jb
xchg
mov
mov
cltd
dec
push
jno
nop
dec
sarb
in
dec
xor
test
dec
cmp
dec
mov
xor
xchg
stos
gs
inc
inc
mov
fnstcw
dec
sbb
mov
mov
outsb
leave
cmc
ss
lds
mov
mov
lock
cltd
ja
jg
shl
stos
xchg
mov
cmp
dec
adc
mov
rcl
shlb
mov
lock
pop
cmp
push
fildll
xor
mov
loopne
ret
jmp
push
incl
pop
or
mov
sbb
jg
lds
mov
dec
lret
add
movsl
cwtl
jbe
dec
add
fcoms
and
add
ror
add
cmp
add
jg
mov
inc
testb
sbb
add
inc
sahf
inc
mov
pusha
jmp
add
loopne
or
sbbb
aas
or
pop
loope
pop
rcrl
rolb
adc
mov
sbb
jmp
add
or
add
mov
mov
and
xchg
andl
add
enter
add
push
imul
mov
fs
in
jl
int
pop
pop
lds
cmp
jmp
mov
pop
pop
popf
sub
dec
add
or
mov
icebp
hlt
mov
dec
add
int
loop
jecxz
movsb
add
mov
pop
push
push
inc
filds
dec
outsl
arpl
fwait
xor
push
lds
cmp
add
enter
xor
inc
loopne
inc
push
dec
push
dec
xlat
push
jmp
xor
imul
je
mov
inc
push
sti
out
adc
add
push
jae
adc
jmp
fs
mov
cmc
and
or
lock
add
push
lea
in
add
aas
push
jb
fisttps
mov
int
pop
loope
and
sbb
add
pop
inc
int3
mov
and
pop
or
dec
dec
fbstp
aas
pop
insb
fwait
pop
add
mov
popa
push
aas
addl
sub
mov
inc
repz
sub
xlat
dec
jne
xchg
dec
cmpsl
mov
push
add
imul
out
xor
aas
arpl
pusha
rclb
add
aad
pop
call
stc
mov
sbb
out
push
push
sti
add
orl
xchg
jno
jnp
dec
rcll
outsl
inc
xor
pop
stc
cwtl
xor
dec
sbb
ja
push
lea
mov
pop
add
sub
jl
cmpsl
pop
add
aas
jne
repz
push
inc
addl
fs
push
mov
jge
jg
push
test
pop
adcl
jo
mov
lea
or
test
out
push
add
enter
mov
js
pusha
jmp
add
cmp
push
adc
idivl
mov
fists
addr16
or
sbb
pop
dec
inc
mov
imul
sti
testb
cmc
dec
in
mov
loopne
into
adc
dec
sub
out
xor
dec
mov
dec
xor
push
xchg
lods
xor
add
cld
xor
jb
sbb
or
adc
adc
jg
jne
add
dec
shll
dec
mov
or
jmp
arpl
cltd
mov
jg
in
xor
xchg
addr16
sub
mov
mov
xchg
add
and
inc
pop
std
cmp
cmp
cld
cmc
test
movsl
aas
mov
into
add
and
enter
add
mov
dec
add
dec
sarl
push
popa
js
cwtl
push
imul
dec
mov
cli
cmp
jne
imulb
out
nop
lods
in
inc
xor
xchg
dec
or
mov
inc
sub
add
sbb
loope
dec
mov
add
outsl
pop
sub
add
rolb
sub
mov
fwait
popf
outsl
fs
iret
or
cmpsl
pop
aad
mov
std
imul
mov
sbb
ret
loopne
dec
mov
subl
aas
jns
pop
pop
int
sbb
mov
decl
push
mov
xor
dec
push
popl
test
mov
rcpps
icebp
xor
sbb
adc
cli
stc
nop
mov
jecxz
inc
outsl
jae
add
mov
aas
fstl
lds
dec
xchg
sub
arpl
mov
sub
inc
jnp
cwtl
inc
int
xchg
jge
add
addr16
mov
inc
frstor
rclb
and
push
adc
addr16
inc
xchg
mov
cli
subl
rolb
xor
add
dec
push
fildl
xor
icebp
loope
leave
xchg
push
mov
xchg
incl
out
jne
xchg
je
cld
push
movsl
in
sahf
add
jl
add
xor
das
or
cmp
adc
addr16
jno
icebp
dec
cld
add
inc
es
jecxz
leave
add
aam
sbb
jne
insb
dec
out
inc
rorb
rcrl
pop
test
sbb
imul
outsl
mov
ja
aas
and
add
sub
aas
mov
cld
or
inc
mov
imul
add
int
add
lods
shrb
jb
jns
movsb
mov
add
scas
std
xor
add
push
clc
mov
jmp
dec
inc
loopne
xchg
add
lods
add
adcl
call
js
inc
inc
test
jne
add
call
add
mov
pop
mov
cwtl
mov
jo
jecxz
add
mov
mov
test
into
jmp
lcall
jg
lret
mov
fmuls
fwait
orl
xchg
jmp
inc
add
pushf
leave
inc
add
or
fisttps
adc
xchg
inc
and
flds
xchg
pusha
sbb
add
push
push
push
add
cmp
mov
aaa
adc
mov
xchg
add
jae
es
roll
push
xchg
mov
shrb
aas
fwait
jbe
or
lret
prefetch
dec
cmp
lcall
inc
inc
push
push
addl
imul
inc
adc
dec
xor
or
sbb
add
js
dec
popa
outsb
ret
pop
cwtl
mov
sbb
test
outsl
mov
jae
jo
callw
cmpsb
sub
push
mov
lret
add
mov
xor
loope
add
inc
xchg
rorl
arpl
mov
ja
popa
fists
jo
aam
adcl
mov
int3
xchg
mov
adc
adc
xor
dec
out
mov
inc
add
inc
jb
add
gs
sbb
add
mov
bound
push
push
aas
jae
fnstcw
cltd
xchg
rcll
push
inc
repz
insl
addr16
and
add
push
dec
cli
pop
int
push
outsl
dec
cmp
pop
popf
popa
add
and
xchg
mov
push
dec
dec
push
inc
push
or
fwait
dec
int3
xor
lret
and
enter
push
add
xor
int3
cmpsl
add
or
xchg
add
push
fbld
test
insb
add
cmp
pushf
mov
popf
outsl
adc
inc
jmp
pop
dec
add
dec
sub
js
add
sahf
sub
mov
push
mov
into
fidivs
rcrl
in
xchg
out
xchg
inc
adc
fmuls
dec
adc
mov
lahf
mov
or
data16
mov
dec
fwait
xchg
mov
sub
add
mov
stos
ret
popa
lret
mov
icebp
fbstp
sbb
stc
mov
sub
vmovups
push
add
xor
data16
mov
push
jo
mov
sbb
and
inc
add
push
add
insb
pop
dec
jo
shlb
push
add
push
add
push
int
add
cmp
loopne
mov
xchg
rolb
fwait
inc
dec
add
mov
fists
add
xchg
popf
mov
js
fidivrl
pop
into
fs
mov
rolb
enter
lds
mov
loopne
mov
cmp
aas
clc
mov
mov
mov
ret
jmp
inc
dec
push
aas
dec
xchg
push
lret
cli
mov
xor
mov
mov
jmp
push
mov
lret
push
movsb
outsb
je
das
fsubp
jp
inc
jmp
mov
jbe
jo
adc
ret
rclb
rcr
pusha
sub
lock
mov
subb
outsl
rcrl
rol
add
loopne
xor
cmp
mov
push
rolb
add
adc
int
adc
add
adc
mov
pop
sbb
leave
mov
xchg
cmp
add
adc
add
ds
subb
mov
mov
shrl
inc
mov
stos
cmp
ss
xor
inc
and
xor
xor
sbb
push
dec
add
les
push
mov
cmp
idiv
aad
cmp
cmp
dec
add
lock
ljmp
enter
sbb
mov
icebp
cs
pop
inc
aas
add
mov
call
add
insl
loope
subl
pop
pop
add
xor
adc
mov
adc
add
push
fistps
popf
mov
add
pop
push
xor
mov
adc
aas
jbe
mov
push
push
push
add
sbb
popf
lock
inc
pop
mov
stc
add
fsubl
aad
or
add
or
or
add
shrb
int
popa
mov
mov
fs
in
dec
loope
pusha
in
outsl
icebp
std
add
les
cltd
hlt
mov
add
ret
jmp
pop
mov
sahf
jl
jne
mov
fmuls
mov
sbb
sbb
jmp
add
dec
into
or
loope
fsubrs
add
add
incl
mov
xor
or
cwtl
push
cltd
xchg
movsb
nop
add
mov
lret
in
aas
add
pusha
inc
push
inc
inc
xor
xor
inc
sub
inc
and
inc
sbb
push
xor
cmpsl
pusha
pop
cmpsb
cld
jg
push
hlt
sahf
bound
in
dec
mov
sar
mov
add
rcrb
rolb
shlb
sub
push
insb
push
pop
js
add
dec
add
dec
push
inc
add
dec
je
dec
jne
dec
add
add
add
cmp
jbe
add
push
dec
dec
dec
add
add
add
dec
add
add
aaa
popa
jae
jb
add
cmp
add
add
dec
push
add
inc
add
add
add
dec
cmp
jno
jp
add
push
add
add
add
add
push
bound
inc
jae
sub
push
jp
hlt
lahf
and
pop
scas
cld
rclb
lods
sahf
test
aas
fstpt
inc
hlt
in
mov
mov
xchg
cmp
lock
lea
cmp
inc
mov
std
add
inc
push
cmp
or
je
lahf
sub
lret
push
jge
or
and
push
cltd
in
inc
int3
mov
mov
add
xor
inc
mov
jmp
lcall
sub
cmp
bound
or
or
aam
clc
dec
add
data16
sbb
xchg
cld
push
push
sbb
andb
pop
mov
in
sbb
inc
int3
cmpsb
adc
ds
lods
shlb
jge
mov
adc
xchg
fisubl
cmp
add
mov
jae
mov
mov
mov
add
insb
jb
mov
sub
add
dec
xor
add
leave
sti
sbb
inc
mov
xorb
shlb
enter
repz
loopne
push
pusha
test
mov
ds
sub
fildll
int3
push
and
jno
in
mov
dec
xor
js
das
mov
int3
jne
incl
mov
xchg
daa
inc
mov
test
adc
sbb
xchg
mov
inc
aas
imulb
mov
sub
sub
pop
add
icebp
cmp
xchg
js
mov
adc
pop
inc
or
mov
push
sub
repz
inc
mov
cwtl
popf
fidivrl
call
cmpsl
icebp
fimuls
outsl
loope
push
loopne
lds
mov
repz
aas
pop
inc
cmpsl
xlat
inc
imull
mov
push
pop
cli
and
inc
sub
mov
ficoml
in
test
lret
add
sbb
add
mov
idiv
test
jmp
repz
hlt
dec
nop
insb
add
dec
int3
pop
adc
and
jno
notb
add
jp
fwait
setb
inc
and
xor
jo
xchg
loopne
sti
xchg
idivb
mov
xchg
mov
sbb
out
decl
popf
pop
xor
mov
mov
add
addr16
fisubrs
mov
mov
push
add
les
addl
and
shlb
in
lcall
mov
push
popa
jl
pop
add
addb
ret
loope,pt
negb
and
addr16
xchg
sbb
or
ja
mov
cmpsb
inc
addl
lret
sub
rorl
push
cltd
add
nop
mov
jns
mov
aas
aam
push
jnp
int
adc
jge
lahf
and
jmp
jge
jl
testl
adc
mov
scas
cmp
int3
inc
je
jp
decl
push
pop
jg
inc
jnp
ljmp
dec
clc
sbb
in
jno
sbb
daa
mov
lods
ja
mov
pop
mov
inc
scas
inc
nop
jg
mov
mov
mov
dec
test
mov
lock
lea
test
or
pop
add
in
mov
sbb
and
mov
in
sbb
push
enter
addb
sub
sarl
iret
jg
adc
fsubrp
enter
hlt
mov
cmc
std
sahf
add
pop
fldenv
add
dec
aam
stos
sti
enter
jnp
lock
ret
adc
insb
mov
mov
shlb
add
call
arpl
mov
pusha
add
lds
cmp
clc
repz
data16
lret
aas
cs
or
push
add
mov
dec
sub
push
sbb
mov
into
push
int
test
popa
push
and
mov
loope
jo
mov
xor
lods
push
sar
add
pop
rcrl
mov
sub
add
xor
cmp
mov
push
outsl
mov
mov
adc
aas
add
mov
xor
jae
lods
mov
mov
rorl
sub
xchg
push
add
push
das
jnp
mov
popf
inc
gs
lods
sub
lret
lea
push
push
test
xor
scas
mov
push
add
das
add
ret
mov
pop
fsub
mov
lods
cmp
cwtl
add
icebp
inc
push
loopne
enter
and
dec
lret
add
push
add
fnstsw
mov
push
inc
pop
jle
scas
add
xchg
std
sub
pop
lea
inc
dec
dec
jbe
rcl
mov
pop
sub
lret
outsl
lea
leave
out
xchg
testl
inc
mov
orb
loopne
mov
add
movsb
push
push
enter
mov
or
mov
addl
and
dec
mov
cmpl
inc
jne
addb
in
outsl
sub
incb
jl
push
lods
movsb
push
mov
rcl
movsl
pop
aas
repz
sub
mov
adc
scas
or
xchg
ja
mov
clc
test
je
mov
call
and
or
push
decl
inc
push
mov
mov
pop
dec
imul
mov
sarb
or
jmp
cmp
dec
mov
mov
or
and
jne
add
orl
adc
dec
mov
ror
xchg
lret
shll
and
push
add
adc
mov
outsl
andb
pop
inc
add
ret
lods
inc
push
aaa
insl
jecxz
jb
pop
inc
movsb
js
inc
mov
leave
mov
sti
sbbb
pushl
mov
add
mov
add
ljmp
mov
popa
out
adc
xchg
stos
aad
add
call
mov
scas
ljmp
loop
add
bswap
das
rorb
adc
mov
push
ret
inc
cmp
inc
bound
leave
gs
dec
aaa
scas
add
imul
fs
or
orl
aas
push
xchg
popa
pop
mov
das
movsl
cwtl
sub
jnp
jbe
rcrb
jne
faddl
add
adc
cmp
sub
add
xchg
add
test
fildl
stos
pop
dec
sbb
sbbl
mull
scas
in
decb
stos
mov
hlt
jne
mov
sahf
lret
ja
sbb
fistl
call
outsl
jbe
jmp
mov
sub
jnp
movsb
roll
ss
cmp
and
imul
push
stc
jbe
add
mov
lret
cli
add
cmpsl
ss
dec
adc
cmc
xchg
add
std
movsl
int
loop
xchg
mov
enter
test
inc
or
inc
shll
add
loop
dec
jne
xchg
add
jns
push
add
add
repz
nop
add
push
push
xor
cmpsl
mov
pushf
xchg
and
repz
pop
outsl
test
push
in
fs
cmp
inc
or
mov
xchg
dec
pushw
lods
enter
out
add
es
xchg
mov
jge
dec
push
aaa
adc
addl
dec
clc
jo
nop
push
push
pop
mulps
mov
lcall
push
add
push
or
call
adc
ret
mov
flds
enter
addps
xchg
daa
jmp
leave
inc
outsb
mov
sub
das
int
movsb
addr16
and
mov
mov
jns
pop
filds
call
adc
rorb
andb
popf
dec
call
clc
adc
mov
mov
sub
add
pushf
jle
inc
xchg
mov
xor
inc
lods
mov
in
and
loope
mov
sbb
pop
in
sub
add
pop
pop
mov
dec
dec
sbb
dec
mov
inc
jno
test
hlt
out
cmpsb
jnp
and
mov
lds
mov
push
and
addr16
dec
mov
sub
neg
jne
push
inc
pop
arpl
pop
xchg
cmpsl
push
das
lret
mov
add
mov
and
add
sbb
imul
xchg
arpl
cli
sti
out
dec
mov
or
pop
ljmp
and
jg
xchg
dec
inc
sub
xor
sbb
mov
sti
dec
sbbb
lahf
and
fprem
sbb
hlt
call
jae
inc
sarb
push
ss
adc
loop
adc
or
sbb
aas
popa
or
xchg
adc
divb
cmpl
jg
mov
mov
xor
jg
mov
daa
and
int
hlt
imul
sbbb
fwait
jg
jne
and
add
inc
push
mov
fnstsw
fwait
xor
mov
mov
dec
sub
jle
mov
cmpsl
movsl
lahf
push
xor
inc
cs
jo
js
dec
lahf
or
data16
push
push
cmpl
in
cmpsb
rol
or
sub
roll
or
dec
neg
bound
sub
xor
loope
movsb
sub
mov
gs
sub
mov
xchg
add
add
mov
je
xchg
or
outsb
jecxz
and
fistps
popa
add
jbe
add
mov
lret
enter
jb
imul
xchg
add
mov
mov
ljmp
stc
dec
je
cmp
popf
mov
or
mov
push
xchg
and
add
or
mov
ret
and
lcall
mov
scas
ret
in
es
ss
add
popf
insb
pusha
mov
sbb
jecxz
add
iret
adc
mov
mov
cmp
inc
push
or
mov
orb
icebp
sbb
push
cmp
in
push
jb
and
popf
add
int3
incb
sub
sub
pop
stc
outsb
or
cmp
xchg
addb
mov
lods
lock
sbb
sbbl
dec
popa
inc
add
cmp
jl
test
and
push
mov
and
imul
aaa
les
pushf
andb
cmp
mov
rorl
std
sub
or
inc
enter
add
jne
dec
stos
in
icebp
or
cs
cmp
adc
adcl
pop
mov
stc
mov
inc
pop
popa
jb
add
jmp
mov
add
cmp
dec
movsb
xor
jl
inc
or
add
mov
jg
and
orb
xor
sahf
cmp
lods
inc
imulb
int
cmpsb
ret
pop
add
inc
dec
repz
add
add
cmp
inc
add
or
adc
pop
out
imul
in
jmp
pop
cmpb
jg
xor
jmp
jmp
inc
bound
adc
cwtl
mov
in
jp
mov
dec
popa
pop
or
push
add
testb
je
sub
iret
xor
xor
mov
xchg
add
and
aas
adc
mov
jecxz
flds
fwait
adc
jbe
adc
add
fadd
pusha
repz
adcb
xlat
push
add
xor
add
pop
mov
mov
mov
aam
xor
cmp
sahf
mov
shlb
push
xchg
pop
mov
cmpsl
enter
add
call
fisttpl
mov
push
ljmp
xchg
lret
add
jp
ret
and
lret
pop
push
iret
inc
cmpsb
inc
pop
add
cmp
jg
jp
mov
adc
push
fdivrp
inc
jne
add
outsb
sahf
jecxz
and
mov
lds
addr16
filds
lahf
and
cmp
push
mov
mov
sub
xchg
loope
call
paddq
jbe
jg
push
push
cmp
call
dec
mov
das
fstpl
loopne
aas
xor
sbbb
or
int3
mov
sbbl
mov
cld
das
fs
outsl
add
lea
gs
and
xchg
pusha
mov
push
aam
in
and
jnp
fldl
add
and
jg
ret
out
pop
jg
rol
ret
cmpsl
adc
add
out
sbb
add
cmp
rcr
dec
fnstsw
add
xchg
je
sbb
add
jmp
xchg
incl
adcb
mov
fs
mov
adc
fwait
das
dec
add
xchg
mov
out
dec
add
sar
test
pop
call
adc
xchg
lcall
sbb
and
pushf
push
mov
pop
pop
daa
mov
dec
fdivl
jnp
add
mov
mov
cmpsb
inc
in
ret
js
cmp
jmp
mov
test
stos
rcl
in
fs
mov
out
cmpl
loop
or
adc
mov
mov
mov
mov
into
enter
mov
add
stc
sub
fucomp
ss
adc
or
cmp
mov
push
popl
rol
sub
adc
jbe
out
ja
sbb
bnd
cmpsl
pop
pop
clc
dec
dec
inc
mov
rorl
addl
mov
imul
mov
add
sarb
and
and
cmp
ret
aas
xor
cmp
inc
cmp
cmp
mov
xor
sar
jle
clc
dec
inc
dec
mov
inc
std
addr16
mov
dec
out
sub
movl
mov
add
lock
cmp
js
add
jl
push
mov
movsb
lea
mov
or
fadds
pushf
add
and
dec
jmp
add
inc
stc
add
dec
ds
dec
popl
dec
mov
pop
jp
inc
or
jne
lea
pusha
push
mov
js
pop
fisttps
xchg
les
cmpsb
or
jmp
iret
xor
add
mov
lret
and
in
hlt
and
gs
add
subl
nop
mov
cmp
jg
mov
addr16
xor
ror
push
inc
xchg
rorb
stc
xchg
dec
mov
mov
cmp
lahf
icebp
and
ljmp
jge
jg
xchg
rolb
js
add
test
popa
aas
ljmp
mov
add
pop
mov
ret
xchg
leave
dec
insb
cltd
add
data16
push
repnz
jo
add
into
xor
pop
sbb
cmp
mov
shll
mov
push
lcall
insb
ret
or
sub
stc
jbe
and
fcompl
dec
or
fildl
push
mov
jmp
push
xor
or
lds
pop
sub
mov
test
cmp
test
cmp
or
loopne
cmp
hlt
daa
pop
cmp
fiadds
add
push
add
push
jb
enter
add
jae
or
jbe
add
xchg
push
movl
mov
std
jnp
sti
mov
ret
mov
fimull
cmp
xchg
popf
je
add
roll
add
repz
add
pushf
fbstp
mov
addr16
add
add
pop
mov
mov
pop
stos
jle
mov
andl
lods
push
lods
notl
push
fists
arpl
mov
icebp
push
in
enter
or
mov
stos
push
or
movl
pop
ret
mov
lcall
fwait
cltd
add
daa
call
cwtl
add
aam
xchg
call
mov
cmp
dec
test
stc
mov
dec
ss
add
lcall
movsl
pop
jge
sbb
jg
mov
cmp
mov
or
mov
sbb
imul
cld
mov
rol
je
and
jb
xchg
xor
and
ret
cwtl
add
outsl
and
xor
nop
lods
or
pop
dec
adc
add
push
push
push
jmp
xchg
inc
iret
daa
insb
mov
add
xor
sbb
add
inc
adc
mov
int
fildll
push
add
orl
push
loop
inc
or
clc
mov
jl
xor
lret
test
add
xchg
imul
dec
outsl
rclb
add
into
gs
dec
dec
ret
outsb
push
xchg
pop
jne
add
clc
xor
pop
stos
push
sbb
xor
sti
insb
and
add
enter
fiadds
mov
sbb
ret
add
xchg
push
pushf
inc
xor
mov
push
cmp
pop
movq
sbb
ja
xor
push
iret
push
popa
out
sarb
and
sbb
and
cmovp
pop
sub
pop
daa
fs
ret
cmpsl
negb
inc
xchg
popa
cmpsl
scas
mulb
sbb
mov
jecxz
es
or
add
jne
aam
mov
addr16
test
xchg
lahf
push
push
add
jb
cmc
fcomps
mov
imul
dec
adc
pop
outsl
add
test
out
mov
aas
scas
imul
adc
pand
xor
inc
insb
fsubr
cli
addr16
ds
jne
pop
imul
pop
xchg
pop
cld
mov
pop
aas
or
addl
pop
lea
add
outsl
out
push
mulb
enter
imul
mov
lods
sub
mov
aas
dec
dec
adc
loop
add
inc
sub
jbe
imul
aas
sbb
data16
push
mov
inc
cmp
sahf
nop
xchg
mov
sbb
push
jns
enter
js
clc
inc
dec
pop
push
sbb
loope
push
jns
push
push
pop
add
aam
sub
sti
lds
punpckhwd
sub
dec
daa
jns
mov
loope
ljmp
nop
push
ds
sub
jb
add
pushf
jns
shlb
fwait
shr
ds
push
xor
mov
mov
xchg
clc
mov
add
jb
xor
rolb
cmp
fists
aad
jae
ror
push
mov
mov
fs
test
ret
push
rcll
add
adc
sub
jp
xchg
pop
jmp
adc
sub
xchg
adc
xor
lahf
rcrb
pop
repz
test
adc
sti
push
push
adc
fwait
scas
add
inc
push
jne
dec
add
movsl
mov
mov
mov
lret
mov
loopne
dec
inc
scas
mov
jl
mov
sbb
pop
add
and
mov
sbb
loop
cmp
add
inc
dec
pop
add
xchg
sub
mov
or
loop
jno
xorl
in
add
or
es
jg
mov
xchg
jnp
add
clc
cmpsl
jo
dec
mov
inc
dec
add
push
jnp
hlt
pop
add
rorl
add
cmp
xchg
test
lret
xor
sub
jl
or
mov
pop
mov
rcrb
sbb
pop
mov
int3
push
adc
push
jp
mov
add
test
jne
pop
cmp
dec
xchg
pop
aad
pop
add
mov
mov
mov
outsb
movsb
mov
jge
dec
cmc
int3
ja
jle
imul
jg
mov
loop
add
and
sbb
ljmp
and
std
inc
mov
insb
lret
mov
cmp
je
mov
inc
push
pop
lods
ret
jg
sbb
add
mov
mov
add
mov
mov
cwtl
adc
js
mov
ja
aas
loop
jae
ret
adc
mov
cltd
in
cli
int
mov
add
sbb
inc
insl
pushf
cmp
add
pop
fnstsw
cmpb
incb
arpl
mov
ret
scas
lret
fabs
into
lret
mov
add
pop
lcall
push
jmp
inc
mov
mov
cmp
xchg
pcmpgtd
sbb
jmp
mov
repz
mov
sub
pop
in
testl
pop
push
dec
cmpb
in
push
pop
mov
lds
repz
mulps
cltd
xor
sub
xchg
mov
cmp
jne
ret
loop
xchg
adc
add
push
jns
add
push
filds
inc
xor
fidivrl
jg
insb
mov
inc
pop
outsb
cmovp
or
jb
jne
add
mov
inc
or
sub
ljmp
mov
adc
aam
int3
and
xchg
cmpsb
rcrb
and
ljmp
add
cltd
movsl
adc
jmp
dec
jbe
push
xlat
mov
adc
ret
mov
fsubl
sbb
test
daa
loope
or
in
push
outsb
mov
pop
jb
add
fwait
add
shrl
mov
orl
add
dec
mov
add
sub
push
lahf
test
test
iret
add
jb
jnp
out
adc
push
mov
xchg
and
ret
sub
adc
mov
hlt
sub
pop
pushf
xor
out
mov
mov
imul
lds
push
push
add
and
out
gs
cmp
test
inc
add
jae
jge
addr16
jmp
aas
fmuls
jg
xchg
add
mov
iret
add
sub
jge
sub
sarb
jne
lret
test
and
mov
ret
lods
out
dec
sbb
sbb
and
mov
sub
xchg
sar
cmpsl
push
mov
into
pop
hlt
jg
and
xchg
add
xlat
pop
xor
cmpsl
pop
mov
fs
test
pusha
out
mov
sub
mov
mov
xor
call
aas
inc
lods
lea
sbb
push
cmp
add
mov
sbb
ja
or
stc
sbb
add
mov
in
mov
das
hlt
jns
sahf
sub
test
cld
add
mov
iret
mov
fistl
aas
std
aam
add
pop
ret
inc
sub
inc
clc
mov
jbe
or
movl
add
cmp
pop
push
or
add
iret
push
jbe
sbb
cmp
add
aaa
xchg
and
sub
inc
imul
push
sarb
pop
adc
mov
sahf
pop
xor
es
hlt
add
add
test
mov
repz
adc
fwait
push
movsl
and
mov
test
push
in
es
add
add
call
je
mov
loope
pop
dec
test
aad
mov
push
jb
or
inc
lds
orl
lods
psubsw
test
xor
mov
je
fldt
inc
mov
add
test
xchg
mov
and
cmp
jp
push
mov
cwtl
aas
notb
jnp
test
iret
stos
das
mov
add
adc
jne
popa
bound
jbe
xor
addb
sub
cmp
cmp
in
xchg
push
fnstcw
dec
setl
ljmp
adc
cmpsl
into
lods
xorl
lcall
or
pop
add
pop
nop
aam
leave
cmp
int3
cmp
daa
jg
loope
push
fistl
mov
xchg
pop
add
repz
enter
add
fsubs
mov
das
mov
add
test
mov
jp
andb
add
es
sbb
and
pushf
leave
cmp
outsl
push
imul
mov
push
sahf
popf
fcompl
push
fistps
das
add
mov
lss
dec
and
fstpt
mov
div
add
sbb
incb
sub
mov
mov
xchg
add
sub
rcrb
push
iret
daa
addb
fbstp
adc
repnz
xchg
cs
in
ffree
rolb
mov
cmp
inc
add
lods
sti
mov
in
fwait
clc
sti
or
sub
fwait
divw
sbbb
mov
div
cs
mov
and
cmp
push
cs
popf
gs
outsl
js
mov
pushf
mov
test
sti
out
std
aaa
pop
inc
ds
lods
das
fwait
aas
notl
fs
je
test
shl
ficompl
sti
push
and
sub
negl
outsl
popf
cmp
cmpsl
ss
ret
neg
cs
dec
sti
and
ss
lods
push
fwait
pop
imull
jbe
mov
pushf
lods
ss
imul
cs
scas
cmovns
ss
lods
fs
jb
mov
std
xor
inc
mov
inc
stos
out
or
xchg
or
mov
pushf
xchg
rclb
fistpll
mov
outsl
call
push
ret
inc
inc
fbstp
dec
outsl
arpl
insb
inc
int3
addr16
push
imul
jne
arpl
pushf
push
jo
je
inc
xor
xor
imul
jl
jo
xchg
addl
jb
jb
cld
pushf
dec
inc
popa
jo
xchg
and
lea
daa
pushf
push
inc
je
sbb
mov
pushf
mov
imul
inc
inc
push
scas
mov
scas
outsb
fisubs
jae
out
mov
mov
mov
mov
fs
imul
movsl
insb
jmp
inc
popa
in
bound
int3
push
jo
sub
xchg
mov
push
jns
or
movsl
dec
jae
xor
xchg
test
push
inc
inc
inc
out
insl
repz
inc
stc
or
aaa
mov
arpl
std
outsb
rcr
das
call
push
fdivrs
jg
xor
test
inc
dec
jge
je
insl
xor
xlat
aaa
call
addr16
std
insl
bound
js
arpl
jno
cmp
repnz
mov
js
je
popf
int
ret
jns
into
mov
push
push
inc
push
push
sbb
notl
lods
imul
popa
mov
outsl
jge
push
jne
mov
xor
les
mov
dec
cld
outsb
gs
adc
dec
arpl
cli
xor
inc
cmp
push
arpl
cmp
popf
mov
hlt
jns
sub
dec
jo
addr16
push
xorl
xor
jb
pushf
dec
sbb
and
mov
xchg
int
addr16
jne
ret
std
sahf
test
mov
aaa
popa
cld
jnp
sbb
push
bound
data16
inc
push
testb
subl
ss
xchg
jmp
sahf
fwait
add
jo
adc
xor
dec
jns
stc
cmpsb
push
and
data16
addr16
add
jo
out
jae
inc
cld
cmc
mov
push
lret
mov
pusha
cltd
cmp
jb
das
jbe
adc
xor
std
pop
push
repz
mov
jnp
cs
stos
fsubl
popa
in
popa
std
push
mov
inc
jne
in
inc
xchg
insl
inc
and
xchg
shlb
dec
xor
shrl
in
gs
lods
addr16
dec
lret
mov
filds
jns
lods
popa
sub
mov
dec
dec
dec
pop
xorl
push
insb
loopne
sbb
fmuls
mov
jmp
and
inc
insb
addr16
pop
movsl
outsb
xchg
cmp
add
cmp
arpl
stos
lret
ja
mull
mov
mov
inc
movb
add
out
gs
sub
jecxz
sti
sbbl
sti
inc
and
jbe
pop
movl
in
std
imul
push
add
insb
mov
xchg
std
mov
cwtl
jmp
inc
xchg
insl
cs
jae
add
aaa
ljmp
cltd
sti
inc
jge
imul
xor
test
mov
mov
mov
mov
addr16
ror
orl
into
add
mov
add
scas
mov
xchg
add
cmpsl
mov
cmpsl
loope
sbb
sbb
xor
cmp
push
sbb
jo
mov
rclb
mov
lahf
cmpsb
mov
stos
test
push
push
push
mov
jnp
inc
add
cmp
pop
cmpsb
inc
mov
movsb
push
ret
cmp
or
mov
mov
lods
dec
mov
mov
cmp
lea
and
adc
or
jmp
mov
mov
mov
mov
lahf
mov
xor
mov
aas
fidivrs
adc
rep
mov
cmp
or
xlat
xchg
stos
mov
out
pushf
jne
stos
mov
in
sub
mov
xchg
xlat
in
cwtl
sbb
stos
cli
xor
mov
stc
jae
shr
lods
mov
call
out
outsb
cmc
stos
gs
nop
pop
dec
cwtl
std
sbb
stos
cli
ja
xchg
mov
or
adc
mov
cmp
xor
mov
incl
fwait
jmp
cmp
outsl
cld
adc
enter
xchg
cmp
inc
and
cmpl
mov
inc
xchg
dec
imull
xchg
test
sub
xchg
jl
xor
mov
int3
cmp
icebp
pop
cmpb
inc
aas
cmp
xor
xchg
xchg
repz
xchg
jns
xchg
add
cmpsb
or
popf
cmp
fwait
xchg
popl
sub
mov
dec
sub
popf
aas
cmp
xchg
xchg
rorl
xor
sahf
sub
rcrb
dec
lret
mov
xchg
stos
mov
stos
mov
pop
fmuls
add
cmp
cmp
cmpsb
adc
lahf
dec
jle
sub
adc
lcall
or
sub
jne
lods
mov
mov
jle
jle
test
dec
sub
dec
sahf
adc
dec
pop
xchg
mov
pop
fadds
mov
sbb
mov
push
pop
cmp
or
xchg
jle
and
cmpsb
xor
cmp
mov
mov
insl
cld
mov
mov
call
popa
ss
adc
lea
fs
outsl
fidivl
push
fcoms
adc
cmp
and
mov
xchg
and
fidivl
mov
and
add
mov
popf
cmp
xor
or
ja
or
iret
aaa
out
jno,pn
mov
stos
lea
stc
mov
push
or
cmpsl
addr16
cmp
call
cmp
mov
es
dec
mulb
lea
add
fwait
push
testl
pop
xor
or
lret
imul
push
loop
sub
outsb
fidivrl
sbb
cld
adc
pop
xchg
mov
das
jb
cli
pop
stc
lea
jg
cmpsl
imul
fimull
in
dec
push
xchg
dec
xchg
inc
jno
mov
es
outsl
and
je
push
bound
sbb
iret
ss
push
icebp
sub
pop
insl
xchg
and
xchg
outsb
pop
xor
add
repnz
wbinvd
add
pop
cmp
aas
js
insb
and
call
cs
xor
je
pop
fs
ret
push
push
inc
sub
popa
inc
sub
rclb
cltd
jns
inc
pop
aas
ds
push
inc
insl
bound
and
pop
lea
arpl
test
jecxz
pushf
data16
sub
bound
xor
imul
pop
and
daa
push
mov
mov
jmp
aas
jo
iret
les
inc
push
outsl
stc
test
pop
cmp
cmp
sub
mov
inc
inc
mov
jno
pushl
ret
das
sarl
into
je
out
jne
xchg
out
adc
and
jecxz
sbb
pop
stos
aas
xor
adc
mov
sti
movsl
movsl
mov
inc
js
pop
sbb
inc
push
xchg
aas
pop
sti
mov
addr16
addb
shll
stos
adc
and
pop
inc
fsubl
subl
lahf
cmp
pushf
push
ja
jo
pop
bound
sti
sub
push
nop
lds
mov
decb
cmp
sub
dec
inc
inc
bound
out
cmp
inc
inc
jne
movsl
add
pop
xor
mov
and
pop
into
cmp
cwtl
mov
sbb
jnp
xor
xor
and
ret
and
arpl
popa
repz
ror
repz
ret
xchg
sahf
xor
sub
xor
xor
bound
popa
sub
dec
dec
inc
xor
mov
push
dec
push
xor
sub
or
adc
push
lods
fwait
dec
in
dec
push
dec
adc
loop
jl
mov
xor
jo
mov
lock
xor
jo
jo
jo
jo
jo
jo
jo
jl
xor
and
jl
insb
push
pop
pop
dec
addr16
cmp
mov
mov
dec
fmull
sti
dec
mov
sbb
or
jl
insb
jo
xchg
dec
lahf
dec
mov
dec
fisttps
jmp
dec
add
push
sub
dec
dec
dec
push
inc
pop
daa
hlt
inc
imul
mov
popf
and
and
and
and
cmp
xor
cwtl
and
fsubrs
cmp
sbb
push
pop
pop
pop
pusha
pop
imul
xchg
pop
popf
pop
movsl
pop
stos
pop
mov
mov
ret
pop
fstps
pop
add
data16
push
jbe
addl
inc
mov
mov
inc
flds
inc
incl
ss
lret
and
dec
lds
jg
xchg
rcrl
ror
fcmovnb
in
test
adc
mov
pusha
dec
imul
dec
mov
cwtl
dec
int
xlat
dec
in
dec
repnz
cld
dec
sbb
aas
pop
push
push
pop
push
pop
dec
arpl
inc
test
inc
stos
inc
mov
mov
inc
flds
inc
in
inc
cmc
inc
add
test
subl
sbbl
addl
mov
or
aam
loopne
call
mov
cmp
icebp
push
xor
sbb
inc
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jl
cmp
sub
sbb
or
jl
insb
insl
pop
jbe
jl
xchg
dec
mov
dec
ljmp
cmp
pop
sbb
push
xor
dec
pop
push
dec
push
dec
pusha
dec
jl
orb
dec
scas
dec
mov
dec
fisttps
out
dec
std
dec
pop
cmp
sub
ss
mov
push
dec
popa
dec
jo
jbe
jnp
test
popf
dec
lods
dec
ret
dec
dec
fisttpll
out
in
dec
repnz
testl
push
inc
push
dec
dec
push
dec
pop
inc
arpl
imul
mov
inc
int3
inc
fldl
inc
cld
inc
add
test
subl
xor
cmp
subb
sbbb
fiadds
clc
cmp
mulb
xor
jbe
insb
push
fsubrs
cmp
cmp
pop
pop
pop
imul
mov
pop
cwtl
pop
movsb
pop
lods
pop
mov
ret
pop
rcrb
pop
pop
xor
jbe
outsb
dec
push
pop
push
push
fs
insl
mov
jnp
addb
cltd
inc
mov
inc
mov
mov
inc
lret
inc
rolb
inc
out
icebp
sub
push
and
mov
xor
cmp
pop
and
insl
and
and
and
fisubs
jecxz
ljmp
xor
lcall
dec
dec
inc
pop
inc
pop
inc
arpl
and
mov
jo
jo
jo
jo
jbe
sbb
in
pop
negl
pop
pop
xor
jbe
outsb
pop
sub
cmp
pop
sbbb
subb
orb
sbb
mov
shlb
xlat
and
sub
in
or
xor
jo
mov
imulb
or
pop
lods
pop
mov
ret
pop
cli
pop
pop
test
jb
js
jle
xchg
xchg
sbbb
scas
cltd
mov
and
cmp
aaa
adc
and
sub
xor
inc
pop
push
pop
pop
pop
pop
jns
mov
pop
mov
pop
aam
out
out
outsl
or
adc
push
sub
dec
inc
dec
push
inc
pusha
inc
inc
jbe
xchg
inc
cmpsb
inc
mov
shlb
repnz
xchg
test
test
cmpl
aas
orl
jl
and
jecxz
mov
pop
icebp
and
sub
pop
sbbb
outsb
and
and
and
and
and
cmp
cmp
dec
clc
data16
mov
cmpsb
dec
mov
loopne
adc
pop
and
sub
dec
aaa
dec
dec
and
shll
sarl
rcrl
rcr
ljmp
cmp
and
push
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jge
ds
dec
lds
insl
shll
xor
xchg
adcb
lret
adc
sub
aas
and
dec
addr16
jo
jne
jp
mov
inc
movsb
inc
stos
inc
mov
inc
int3
inc
rolb
and
ljmp
sub
mov
lcall
xchg
ret
sub
pop
call
mov
or
mov
scas
gs
mov
mov
scas
lock
iret
popa
push
or
cld
ucomiss
scas
or
outsb
rolb
sub
and
push
iret
shlb
jmp
mov
pop
push
cmpsb
push
mov
shlb
test
xchg
negl
push
cmpsl
xchg
add
cmp
or
mov
sub
jecxz
fdivrl
lock
aad
mov
mov
push
iret
sbb
and
push
iret
decb
inc
mov
jl
cmp
mov
xchg
out
das
in
iret
int3
enter
stos
out
mov
jp
loop
popf
mov
in
int3
mov
jbe
add
negb
loopne
inc
test
mov
ret
xor
loop
dec
test
add
dec
nop
cs
bound
aam
lea
cltd
xchg
stos
stos
inc
and
sarb
inc
loopne
push
test
add
dec
nop
les
loope
inc
test
add
popa
nop
into
shlb
popf
inc
test
xchg
popa
nop
into
shlb
pusha
outsl
xor
mov
lcall
inc
test
add
inc
nop
cs
xor
loopne
sbb
pop
inc
test
mov
dec
nop
push
fwait
incl
test
sub
mov
mov
repnz
call
and
rcrb
jl
mov
shlb
pop
or
xchg
into
cli
aas
dec
xor
movsl
or
xor
mov
inc
or
push
mov
sahf
aaa
adc
cs
aaa
data16
or
mov
add
fwait
jmp
test
push
add
inc
nop
dec
shlb
add
xor
repz
hlt
fs
sahf
xor
cmpsb
mov
test
or
shll
popf
inc
test
add
inc
nop
cs
xor
loopne
inc
test
add
dec
xchg
popa
add
jp
xchg
hlt
push
shll
sahf
mov
jbe
mov
iret
movsl
rcrl
mov
xchg
cmp
xchg
cmp
xchg
fimuls
sti
xor
movsb
mov
movsl
mov
push
pop
imull
cmp
mov
mov
in
mov
int
mov
loope
in
std
push
inc
and
xor
in
in
cmovnp
mov
pop
das
jmp
xor
pop
mov
add
inc
fdivrs
xor
inc
hlt
shll
lret
add
mov
xchg
imull
add
popl
enter
mov
add
aaa
mov
pop
js
pop
imul
and
xor
stos
push
xchg
jae
add
dec
rcll
sub
mov
div
push
lgdtl
pop
and
jle
or
mov
mov
mov
push
pop
cmpsb
mov
sub
outsl
lods
cmp
pop
adcl
jle
jle
pushf
scas
xchg
sbbl
jmp
mov
push
repz
adc
ss
or
ljmp
insb
scas
pop
cmp
addr16
lea
pop
push
or
ret
call
add
imul
adc
cmp
add
subb
and
lahf
test
jbe
pop
leave
imul
xchg
pushf
mov
push
and
cli
imul
rcll
cwtl
adc
hlt
bound
sbb
sub
imul
mov
lock
clc
push
mov
sub
pop
test
pop
mov
sub
sbb
push
cld
adc
ret
aad
jbe
ret
lcall
xor
add
cli
sub
shrl
mov
repz
aaa
outsb
inc
jle
xchg
je
sbb
cmp
xchg
push
mov
scas
ljmp
push
incl
and
jne
mov
cmp
sbb
outsb
cmp
and
cmpsl
pop
push
jae
gs
imul
inc
lahf
hlt
sbb
mov
std
mov
add
insb
dec
arpl
add
add
add
ja
cmp
cmp
ss
inc
xor
xor
inc
add
add
pop
dec
push
aaa
data16
jo
add
bound
jp
add
add
add
add
add
imul
dec
add
add
dec
push
add
push
jne
xor
push
add
add
dec
add
dec
add
add
inc
add
pop
add
add
add
cmp
dec
inc
imul
dec
pop
add
dec
jl
in
fldl
call
mov
adc
jmp
test
adc
or
adc
pop
mov
fs
push
dec
jg
push
out
add
lret
imul
cli
jmp
inc
push
fildl
inc
js
ds
test
jecxz
out
data16
pop
imul
aam
add
jne
rolb
push
in
ljmp
jmp
dec
icebp
push
test
add
bound
mov
xchg
mov
rcll
push
fiadds
enter
add
inc
in
movsl
test
addl
inc
and
push
pop
enter
jle
and
mov
loopne
inc
add
push
nop/reserved
push
ss
pop
mov
cmp
mov
push
inc
mov
in
push
xor
lea
jae
xchg
jbe
xchg
scas
push
js
mov
mov
push
inc
push
ja
dec
push
iretw
popa
xchg
imul
mov
fsubrl
imul
mov
pop
dec
js
add
fld
mov
lock
cltd
adcb
notl
and
add
add
lret
mov
mov
call
scas
aad
out
mov
in
jge
aas
sbb
cmp
repnz
jnp
ljmp
fildl
addr16
daa
push
shrb
ljmp
mov
cmp
insl
out
addb
mov
xchg
add
scas
inc
add
push
fxch
das
jbe
add
fucomi
inc
mov
sub
lret
push
mov
mov
jg
repz
fcoms
lret
sarb
test
addb
rcr
jg
dec
jl
cmp
sbb
pop
jmp
pusha
sbb
add
mov
push
xor
ficompl
incb
sbb
adc
test
roll
mov
addr16
cmc
add
xchg
out
add
or
iret
mov
inc
or
mov
jmp
aas
xchg
xchg
loopne
mov
xor
or
out
icebp
in
xchg
jo
push
repnz
adc
imul
les
stos
cmp
mov
add
fcoms
push
or
enter
btc
cld
sub
aas
add
dec
xchg
adc
mov
push
cmp
pop
cwtl
enter
mov
dec
add
or
imul
les
pop
popa
mov
pop
xchg
add
sbb
add
popf
sub
out
sti
adc
mov
inc
mov
dec
test
into
push
xchg
ds
inc
test
outsb
inc
ret
fmuls
pop
and
push
pop
jp
lea
cli
jg
mov
lcall
decl
pop
scas
mov
push
mov
in
aam
add
iret
fwait
ss
adc
inc
inc
mov
dec
nop
dec
push
add
add
inc
imulb
jmp
pop
xchg
repz
out
rcrb
add
fs
mov
inc
mov
out
inc
xor
mov
in
data16
fs
xor
xor
call
movsl
add
hlt
mov
fs
xor
cwtl
cld
pop
push
jno
push
call
sbbb
xchg
testl
adc
mov
dec
cmpsl
aam
mov
mov
dec
jecxz
sub
sbb
popf
add
divb
mov
lcall
add
cmp
add
pop
adcl
add
aaa
test
inc
push
je
add
mov
stc
push
add
cmpsl
adc
add
push
fwait
pop
mov
inc
ficomps
xor
mov
dec
sbbb
lock
add
push
jmp
popl
js
ret
and
push
dec
mov
add
int
jne
push
dec
testl
xchg
inc
lret
pop
fdivs
mov
js
imul
je
mov
dec
into
adc
pushf
xor
call
pusha
jae
scas
pop
loope
test
adc
mov
and
nop
add
adc
mov
push
add
push
mov
jecxz
xor
add
xchg
data16
pop
adc
imul
ljmp
or
loop
and
popw
sbb
push
cmpl
add
jmp
jae
mov
lea
jne
dec
inc
mov
mov
xor
push
jmp
sub
testb
rcrl
pop
mov
adc
adc
sub
mov
push
jnp
mov
dec
addr16
jbe
add
cltd
xchg
sti
imul
iret
mov
sbb
sub
push
aad
and
cmp
dec
fnstenv
sbb
int
das
mov
add
jle
inc
sub
mov
add
ret
and
add
push
push
idivb
mov
cmp
or
or
shr
add
sub
leave
pop
lret
add
call
lea
jg
js
mov
xchg
mov
jg
pop
dec
imul
mov
xor
out
and
mov
or
es
mov
lret
or
dec
xor
or
cmp
cmp
mov
iret
push
jne
pop
dec
mov
mov
stos
sub
push
mov
jg
mov
and
inc
cmp
sub
inc
xor
lods
shll
pop
lcall
add
pop
jo
jg
leave
add
pop
rol
xchg
push
mov
pop
lea
sti
mov
fists
pop
sub
pop
jne
dec
jb
pop
loop
nop
and
fwait
add
jge
dec
test
push
lret
test
rol
jecxz
fwait
mov
push
aas
leave
clc
add
rcl
xor
cmp
mov
shlb
cmp
jns
cld
xor
mov
mov
jae
pop
aaa
pop
or
and
inc
cmp
cmp
addl
es
call
test
add
out
and
jmp
mov
jnp
or
mov
xchg
mov
cmp
xor
loope
push
inc
or
lahf
pop
stos
add
xor
fwait
sub
popf
inc
and
lcall
mov
jo
and
jae
sbb
std
sub
mov
ljmp
lcall
jl
idivl
add
jo
ret
movsb
dec
jb
push
std
add
and
mov
dec
pmulhw
movb
dec
jne
mov
sbb
push
xchg
add
push
add
aas
sub
and
mov
and
sbb
repnz
dec
jle
xlat
lds
clc
inc
add
shll
add
push
lret
jbe
cmpsl
jg
xlat
add
xchg
pop
dec
icebp
je
add
and
sbb
or
lods
inc
inc
movl
fwait
pop
ret
dec
fcoms
lret
mov
xchg
push
out
xchg
cmp
mov
mov
iret
add
aas
cmp
mov
and
add
fldt
dec
and
mov
outsl
lret
cmp
and
int
push
add
fnstsw
jo
addr16
adc
lret
lret
pop
je
popa
add
pushf
loopne
jl
push
push
push
lcall
pcmpeqd
push
add
adc
push
out
out
call
inc
or
arpl
movsb
sbb
mov
cmp
cmp
cwtl
mov
dec
aad
jge
icebp
ljmp
xchg
adc
and
repnz
das
clc
cli
mov
mov
dec
arpl
cmpsb
xchg
je
adc
mov
dec
sub
jae
iret
add
aad
cwtl
add
pushf
fs
jno
divl
sub
out
cmp
loopne
outsb
mov
fs
fdivr
icebp
push
subl
mov
fdivrs
xor
add
or
testl
add
aas
push
mov
outsl
movsb
test
adc
mov
inc
cli
inc
xlat
push
inc
test
inc
aas
clc
pop
cmpsl
pop
lea
mov
dec
mov
pop
add
lret
cmpsb
xor
push
or
bound
subl
mov
imul
xor
xor
andb
lret
add
pop
lods
push
sbb
push
or
xchg
insl
and
push
push
shlb
fcom
push
jg
cmpsb
pusha
ficomps
mov
je
pop
loop
push
add
jns
add
adc
lret
xor
push
cmp
cmp
lods
arpl
add
mov
pop
xchg
outsb
aam
neg
jne
mov
xchg
jle
pop
adcl
cmp
sbb
mov
xchg
aas
push
lods
sarb
cmp
pop
cmp
or
mov
inc
aas
jle
push
fnstenv
xor
dec
iret
xchg
xchg
sub
cli
add
call
mov
jecxz
mov
mov
push
or
or
and
std
sbbb
push
ror
or
xor
or
jae
rol
pop
mov
fdivrs
cmp
ror
addl
add
dec
xchg
fimull
lea
test
jbe
adc
mov
sub
pop
sbb
insl
add
std
add
sub
int3
dec
pop
jns
adc
js
or
int
jne
out
push
mov
xor
aas
nop
out
lahf
jle
ret
xchg
stos
lret
xorl
add
testl
iret
cmc
andl
push
cwtl
add
andb
test
push
xchg
jnp
subl
call
fistpll
mov
mov
std
inc
add
mov
int3
jno
jae
inc
or
call
xchg
test
lret
aas
add
sbb
xchg
xor
sbb
push
mov
push
loopne
jmp
ret
xchg
aas
push
push
sti
mov
std
dec
xor
addr16
xchg
or
dec
sub
mov
xchg
push
push
std
sub
adc
fs
int
sahf
lock
rcll
arpl
out
mov
les
dec
repnz
or
lret
pushf
dec
jnp
add
rolb
aad
adc
add
test
scas
sub
sbb
xor
lds
ret
sbb
test
cmp
cmp
je
dec
cwtl
jo
add
push
ret
cmp
or
adc
or
addr16
lcall
outsl
add
adc
hlt
je
int
xchg
jae
push
mov
sub
fdiv
dec
lret
inc
aad
add
pop
test
sti
dec
leave
and
test
sbb
mov
ror
push
sti
add
mov
push
in
add
sahf
add
loop
rol
sub
xchg
pop
mov
fildl
dec
enter
add
xchg
mov
xor
jbe
jo
ficompl
call
in
loopne
adc
stos
inc
dec
xlat
pop
add
inc
test
movb
rorl
xor
js
mov
sub
inc
adc
inc
adc
mov
ret
add
sbb
or
mull
xlat
jbe
sub
test
or
mov
push
sub
cmp
repnz
test
negb
sbb
repz
add
pop
movsl
into
call
mov
cmp
faddl
leave
dec
stos
mov
pop
add
and
sbb
sub
or
adc
add
add
fistl
sbb
inc
mov
jecxz
gs
iret
add
pop
xor
push
sbb
fstps
dec
add
or
lods
push
push
insl
add
or
int
sti
inc
add
orl
or
sbb
jno
pop
in
jmp
add
dec
loopne
pushl
push
ljmp
imul
push
cmp
or
jbe
je
idivl
add
or
jne
pshufw
ror
mov
mov
add
xchg
out
jecxz
or
jb
aas
dec
sub
int
fwait
mov
dec
mov
cmp
or
rorb
fisttps
insl
xor
mov
cmp
stc
outsb
int
or
pop
mov
clc
add
outsl
imul
push
popa
fsubl
cmp
or
jne
iret
lahf
lds
mov
adc
lret
add
repnz
shll
inc
xchg
sub
loop
pusha
and
std
fcomps
insb
pop
out
dec
add
pop
test
lret
gs
add
call
jae
in
pop
mov
sub
mov
cmp
fbstp
aas
flds
or
jecxz
add
je
push
js
cmp
call
fs
popa
cmpl
add
dec
cmpsb
or
movsl
xchg
test
ret
hlt
pop
inc
imul
add
mov
call
in
pop
push
mov
icebp
mov
fs
add
movl
dec
enter
xor
fiadds
cmp
push
iret
mov
nop
sarl
orl
add
dec
sbb
shlb
test
mov
push
add
add
cmp
lock
xchg
xor
add
adc
add
jecxz
xchg
scas
test
add
jne
cmp
rolb
test
in
jb
lock
lock
out
in
cs
cmpsl
outsl
rcrl
dec
loope
stos
xchg
dec
or
mov
das
hlt
dec
xor
subb
std
add
cmp
add
cvtps2pi
dec
mov
call
push
clc
jmp
or
cmpl
inc
jge
jns
add
dec
mov
out
mov
push
push
xor
lea
adcb
mov
sbb
lret
sbb
daa
out
nop
clc
out
push
push
dec
jp
push
test
js
dec
movb
leave
or
mov
icebp
cld
fisttps
sbbb
sbb
pop
add
testl
jmp
xorl
mov
push
lea
push
in
add
lods
sub
movsb
roll
mov
lea
mov
addr16
push
sub
repz
dec
xchg
daa
popa
popf
or
jg
pop
insb
mov
insl
xor
shr
cmp
fadds
fnstsw
shl
mov
divb
xchg
or
sbb
add
pop
cmp
call
in
jb
mov
or
insb
les
mov
adc
aad
shrl
sti
cltd
cmp
cli
or
add
push
pop
mov
stos
fcoms
or
inc
lret
adc
cwtl
xor
movl
aas
sbb
mov
stos
add
test
pushw
cli
repz
out
test
loop
xor
adc
add
cmpsb
aad
mov
sbb
and
cmp
mov
lock
sbb
jmp
out
mov
scas
push
add
inc
std
push
fwait
or
rorl
lahf
cli
mov
in
fildl
mov
test
mov
xchg
nop
mov
add
adc
jmp
orl
xchg
and
or
lock
pop
cltd
call
out
stc
push
xchg
sbb
push
adc
jecxz
xchg
add
pusha
pop
jle
cmpsb
mov
mov
pop
inc
mov
pop
jmp
add
add
das
out
sub
cmpsb
push
in
clc
hlt
jg
mov
mov
ret
pop
ret
jmp
es
dec
fildl
ret
add
fidivs
sbb
push
add
out
clc
lds
or
sub
or
lahf
add
movsb
sub
push
mov
or
cld
dec
mov
mov
fnstcw
call
icebp
dec
lods
pop
cs
mov
ret
dec
inc
aam
in
dec
mov
lock
mov
xchg
das
sub
pop
rcrl
cltd
push
fbld
aad
ret
mov
xchg
push
xchg
fwait
fmuls
sub
out
add
push
inc
and
push
daa
add
pusha
add
mov
sbb
adc
mov
pop
pop
aaa
xchg
inc
mov
imul
sbb
cmp
mov
xchg
push
dec
dec
rolb
sbb
sub
and
filds
adc
dec
add
cld
mov
add
dec
mov
lret
pop
add
xchg
imul
movb
add
enter
inc
aas
addl
xchg
rcll
fs
mov
leave
cmpsb
in
sub
pop
jle
jns
ret
loopne
cli
push
inc
xchg
and
xchg
mov
or
jnp
fsts
stos
scas
les
mov
iret
lds
add
je
mov
divl
add
inc
stc
mov
insb
sub
ds
cwtl
popa
std
jmp
ds
ret
jno
pop
fcompl
mov
mov
or
add
shll
add
mov
or
rcrb
and
clc
lock
enter
inc
xor
dec
jo
mov
push
inc
add
es
sbb
lret
cmp
adc
inc
pop
pushf
jbe
rolb
xlat
sub
pop
int3
adc
mov
inc
sub
outsl
and
add
xchg
cmp
cmp
fbstp
add
sbbl
shl
dec
add
fsubr
pop
add
xor
adc
imul
pop
inc
mov
cld
cmp
lahf
adc
xchg
int
add
aam
inc
or
push
testb
nop
das
pop
mov
lret
cmp
testb
or
add
sub
mov
adc
repz
mov
push
xor
jg
push
push
push
mov
xchg
ja
cmp
add
add
hlt
xor
mov
je
dec
add
incl
pop
sub
add
mov
or
jmp
xor
ljmp
fwait
out
ret
push
les
cli
mov
movsb
add
rorl
pop
cli
add
ret
mov
xchg
or
adc
mov
mov
in
icebp
cmp
pop
mov
cmpl
add
mov
imul
rcll
pop
pop
aam
mov
or
dec
enter
cmp
clc
lret
xor
dec
xchg
aas
pop
jo
shll
sub
leave
call
dec
lret
mov
or
daa
lds
popf
mov
mov
inc
add
mov
add
enter
jb
xor
inc
adc
int3
je
adc
inc
or
xchg
xchg
jns
dec
push
xlat
fs
add
mov
rcrb
ss
push
and
jl
sub
jge
or
lcall
int
test
xorb
add
cli
pop
xor
add
xchg
jmp
mov
mov
add
adc
adc
sub
inc
pop
or
push
fisubrs
dec
push
cmp
xor
test
decl
lret
mov
sub
aas
cmp
icebp
arpl
mov
sub
jle
sub
or
test
mov
mov
imul
fidivrs
lods
ds
add
lods
add
lock
in
gs
and
push
ffree
out
mov
in
mov
or
xchg
xor
jg
inc
cmp
mov
sti
mov
add
leave
test
push
data16
ret
lcall
mov
into
push
roll
and
lds
int
rol
jmp
pop
or
mov
add
dec
xchg
push
loope
and
push
pop
outsl
mov
xchg
push
jo
add
mov
rcrl
pop
imul
add
int
hlt
repz
add
pop
and
add
fs
sar
or
pop
add
pop
pop
dec
add
mov
inc
add
dec
in
sti
aaa
repz
aas
aaa
ds
sbb
jne
cmc
divl
and
insl
adc
xchg
andl
mov
pop
mov
outsl
sub
add
rcll
push
mov
mov
rorl
mov
ret
mov
mov
movb
icebp
mov
add
lret
popf
or
mov
push
out
add
insb
shl
popl
shrl
xor
add
addr16
jecxz
xchg
mov
ljmp
lret
mov
call
jmp
pop
shlb
test
add
cmp
xor
leave
mov
xor
add
adc
sbb
dec
into
mov
add
push
es
mov
xchg
rcll
jae,pt
add
push
jne
mov
rorl
cmp
incl
icebp
pop
in
jmp
inc
push
psubq
mov
push
add
mov
inc
mov
sub
jecxz
mov
jg
add
iret
leave
adc
pop
hlt
shll
mov
std
clc
outsl
in
add
mov
lock
add
sub
aad
ja
int3
call
out
cmp
jne
in
inc
pop
push
incb
shlb
fiaddl
out
adc
dec
mov
popf
push
fildl
sub
popa
in
add
daa
add
sbb
add
sbb
push
or
add
lods
cwtl
pop
popf
push
addr16
add
sub
int
fldt
js
push
scas
jg
adc
xchg
nop
or
sbb
outsl
loope
mov
int3
rorb
je
enter
push
inc
add
mov
lea
gs
add
je
mov
jne
xchg
imul
push
es
fs
add
movsb
push
call
xor
mov
bsf
sbb
jno
add
adc
xchg
sbb
pop
cmp
adc
add
sbb
icebp
enter
hlt
sub
popa
movsb
add
in
in
add
dec
push
rclb
jo
add
add
pushf
stos
lea
pop
mov
clc
pop
xchg
or
or
sarb
lea
leave
add
pop
inc
frstor
mov
adc
addr16
mov
jo
cmp
jbe
mov
lds
mov
jno
daa
aaa
mov
inc
jno
into
insb
jge
inc
xchg
sub
cmp
es
inc
sub
nop
mov
dec
je
cmp
ret
cmp
out
fstpt
ret
add
inc
leave
dec
mov
daa
filds
jg
sub
cld
sub
and
and
add
testb
sbb
pop
loopne
jg
and
lahf
or
xlat
mov
jae
stos
mov
pusha
adc
dec
pop
add
mov
es
adc
sub
mov
insb
dec
mov
inc
fnstcw
out
cmpb
imul
outsb
sbb
xor
pop
adc
add
flds
pop
or
adc
dec
and
stos
stc
lret
int
in
sbb
cmpsl
or
fwait
outsb
shrl
pop
ja
sub
add
js
or
add
mov
add
jg
add
jle
sbb
sti
sub
mov
jae
mov
pop
je
mov
cmp
ret
lidtl
lret
sbb
push
adc
or
cwtl
roll
stc
dec
jmp
mov
test
lret
loopne
in
out
sub
mov
add
dec
dec
mov
add
push
pop
cmp
std
jnp
dec
mov
push
rorb
into
mov
das
add
fwait
in
mov
imul
ds
sti
adc
int
sahf
push
add
ds
movsb
add
jmp
enter
sub
roll
sub
mov
add
gs
xchg
xchg
add
aas
dec
jge
xor
hlt
or
lcall
inc
add
mov
jo
into
jne
repz
add
push
int3
cli
add
aad
sete
repz
loopne
xchg
sbb
lods
and
xchg
mov
sub
jg
leave
xchg
add
sub
lret
jle
mov
int3
xor
ljmp
lods
dec
mov
std
adc
jg
js
jl
add
cmp
pusha
jnp
daa
psrld
inc
iret
mov
js
scas
arpl
ss
add
dec
pop
cmp
cmpsl
add
mulb
rorb
sub
test
mov
add
xor
inc
jnp
push
add
and
cs
jle
push
mov
sbb
vorpd
js
add
xchg
je
add
fsubr
pop
adc
adc
push
roll
lahf
scas
jg
mov
pop
nop
testb
adc
filds
pop
add
add
imul
movsb
mov
fadds
das
lahf
xchg
mov
jg
jb
push
jbe
loop
mov
sub
or
cwtl
cmp
jo
push
inc
outsb
mov
aad
push
aas
js
pop
mov
add
xchg
pop
orl
sub
add
inc
or
dec
int
pop
push
mov
pop
pop
jnp
iret
add
cmp
cmp
stos
mov
loop
mov
addb
dec
lret
mov
test
popf
add
mov
cmp
std
jne
add
testl
sub
jo
outsl
aas
jns
dec
imul
mov
push
les
xchg
pop
ljmp
inc
test
fiaddl
cmpb
shlb
inc
jmp
or
jne
lods
add
rolb
ret
mov
aas
cli
stos
icebp
add
xchg
mov
jo
adc
stos
into
add
adc
push
je
mov
mov
mov
aam
mov
clc
cmp
push
dec
fbstp
push
mov
xchg
into
sti
or
xchg
and
mov
add
movsb
jge
pop
inc
cli
mov
add
fmuls
jge
out
test
pop
mov
test
add
jo
je
mov
mov
movsb
lock
scas
jnp
add
imul
div
adc
or
ret
pop
add
or
dec
mov
push
iret
leave
inc
cmc
dec
add
push
andl
add
jmp
inc
xchg
jb
popf
addl
cmc
lods
sbb
clc
loope
inc
xlat
insl
inc
mov
jmp
dec
cltd
jle
push
dec
ret
iret
mov
inc
xor
lahf
ja
mov
dec
mov
lahf
hlt
dec
popf
sbb
je
jnp
xchg
jmp
lret
rcl
insl
stc
jbe
inc
rolb
fidivs
test
test
push
pop
pusha
sbb
inc
outsl
iret
xchg
add
nop
push
mov
sub
jne
adc
lret
call
xchg
pop
push
jmp
push
aam
and
xor
fwait
movsb
sbb
sbb
and
leave
mov
hlt
pop
verr
cmpsl
jne
std
add
push
mov
adc
pop
roll
aam
sbb
and
mov
add
mov
push
adc
mov
xchg
add
xchg
enter
lods
add
push
or
fs
push
into
and
out
rol
sbb
push
sub
ret
call
xchg
fadds
cmp
mov
add
jbe
dec
jno
mov
dec
ret
push
les
push
mov
mov
jg
and
ljmp
es
pop
dec
pop
int
add
movsl
push
add
cmp
inc
mov
jbe
das
or
lret
mov
dec
outsl
dec
dec
fmuls
push
mov
push
pusha
es
jae
mov
push
mov
test
push
loope
pop
outsl
pop
dec
int
jl
inc
dec
jne
mov
in
xchg
xor
test
jle
add
dec
lahf
push
ja
jbe
dec
je
jb
movsl
mov
xor
js
pop
ljmp
add
dec
pushf
jnp
cld
aad
push
sti
movsb
enter
insb
out
add
dec
out
addb
dec
loop
xchg
lret
fs
push
dec
inc
rolb
mov
push
dec
push
es
testb
enter
inc
xchg
push
mov
pop
sbb
add
gs
clc
jecxz
mov
ret
jl
adc
push
add
dec
dec
mov
sbb
sbb
pop
and
dec
push
add
cwtl
or
inc
ret
jle
xchg
lods
or
sub
add
cmp
or
pop
dec
clc
jle
push
add
or
lahf
dec
push
lret
dec
mov
push
lahf
loopne
mov
push
sbb
lahf
add
and
mov
push
inc
add
lcall
outsb
fstl
add
dec
movsl
push
stc
add
pop
adc
add
hlt
sub
mov
pop
ffreep
orb
push
sbb
add
call
push
push
jg
sbb
add
daa
cltd
orl
add
leave
jnp
movsb
lret
mov
jle
push
mov
fdivr
in
pop
pop
enter
jg
test
inc
adc
lods
sahf
cmp
cld
dec
xor
je
in
or
xlat
adc
lods
mov
cmp
mov
sahf
stos
xchg
pop
xor
pop
arpl
push
pop
cli
imull
jge
shlb
add
xchg
cmp
xor
mov
mov
dec
pop
incl
jmp
push
pop
clc
add
add
cmp
inc
andl
sarb
xchg
jecxz
cmc
fs
push
cmp
loope
sbb
jmp
add
push
mov
add
push
add
notb
add
scas
jns
mov
stos
jg
fiadds
add
cmc
pop
inc
or
pushf
xchg
add
gs
insl
aam
sti
inc
or
mov
test
scas
mov
pop
add
ds
nop
jae
js
mov
xchg
jns
or
cmp
add
add
popa
jno
or
and
add
sarl
dec
sbb
jns
and
es
cmp
popf
lret
dec
jp
fstl
dec
popl
lahf
out
hlt
push
jb
push
add
popf
xor
fidivrs
test
or
add
test
pop
adc
fstp
inc
ja
push
bound
cmc
lea
xchg
movsl
or
call
xchg
fnsave
insb
xchg
xor
lock
out
add
fistpl
jmp
test
mov
hlt
inc
cwtl
jno
psadbw
je
mov
stos
loop
add
pop
cmpsb
ret
iret
mov
add
sub
idivl
xchg
out
xor
xchg
add
cmp
mov
push
inc
repz
adc
mov
jbe
popf
sub
push
xchg
inc
jno
adc
sbb
xor
lret
sub
adc
dec
out
add
dec
or
ret
loopne
cmp
lret
stos
pop
in
xor
sbb
pop
inc
les
mov
leave
pop
xor
sarb
test
data16
ds
push
sarb
add
push
dec
sub
mov
lret
les
in
push
jg
leavew
mov
cmp
insl
add
cmp
cltd
cmpb
pop
add
in
in
test
push
sub
lea
xchg
push
pop
cld
lods
adc
add
pushf
popa
sub
lahf
movsl
addb
cli
out
jp
clc
stc
push
push
or
insb
das
add
mov
leave
or
adc
movsb
add
push
stc
mov
sbb
mov
loop
les
fiaddl
mov
enter
lea
sub
add
inc
inc
or
xor
xlat
xchg
add
mov
test
pop
pop
ja
add
mov
sbb
push
adcl
insl
jle
xchg
add
jne
fmull
sbb
cmc
adc
add
shrl
lahf
pop
mov
cs
dec
es
leave
jmp
sub
or
push
cmp
cmpsb
push
or
cmp
push
enter
test
movb
push
jmp
daa
dec
pusha
fwait
dec
jg
push
and
clc
mov
add
push
add
cmpsb
push
jb
and
pop
inc
mov
fnstsw
fidivrl
sbb
cmc
insb
hlt
or
push
out
popf
pop
mov
jns
and
and
lock
leave
pop
jb
cmp
lret
adc
ret
or
repnz
jno
cmpsl
loopne
icebp
dec
and
pop
pop
or
mov
cwtl
sub
xlat
inc
mov
ret
les
or
rorb
insb
add
inc
addr16
in
sbb
dec
bound
pop
sub
cmp
mov
shrb
pop
xor
cmp
loope
jmp
andl
sub
cltd
rorb
add
cmp
daa
add
mov
sbb
lret
adc
mov
mov
cmp
mov
lds
add
cmp
shll
jge,pn
add
daa
push
push
clc
or
repz
push
sub
adc
or
popf
xor
push
pop
inc
loop
test
add
cmp
mov
mov
jg
stc
add
and
mov
dec
or
mov
push
ret
lea
das
sti
rcl
scas
adcb
cmp
aas
mov
and
int
jae
hlt
pop
sub
sbb
xchg
outsb
cmp
mov
movb
hlt
inc
and
jmp
outsl
push
add
or
dec
jne
mov
mov
push
cmpsl
lea
and
pop
add
mov
imul
push
add
inc
fldl
movsl
jo
ret
int3
ja
inc
adc
in
repz
jg
inc
mov
xchg
sbb
and
inc
cmp
add
pop
in
mov
cli
add
in
filds
jno
out
inc
jl
cmp
sub
and
push
mov
xchg
adc
fcompl
mov
sahf
push
pushf
mov
push
pop
add
mov
add
mov
shrb
jb
jo
dec
cwtl
push
insl
mov
add
aas
xchg
cltd
jp
add
lret
jnp
xchg
aas
jb
sub
or
xor
ror
test
jecxz
inc
push
sahf
add
mov
lahf
add
and
leave
xor
mov
aas
into
and
mov
loopne
ss
push
dec
and
dec
fsubrl
adc
rol
orb
add
int3
sub
neg
xchg
add
mov
push
and
cltd
mov
roll
cmpsl
fwait
sbb
xor
xor
add
mov
cmp
inc
cltd
sbb
dec
push
mov
dec
add
test
push
add
sbb
mov
imul
sbb
jl
mov
arpl
adc
mov
aad
sbb
mov
lea
jmp
mov
xchg
jno
push
adc
push
andb
ljmp
add
lods
pop
xlat
add
xchg
mov
mov
sub
pop
je
or
or
add
jmp
fnstsw
mov
ss
sbb
mov
je
test
push
outsl
negb
or
inc
mov
mov
iret
jmp
sub
arpl
mov
or
addr16
cmovno
push
push
call
cmp
add
sub
push
ljmp
add
mov
and
in
sahf
xor
insb
add
jp
dec
xlat
adc
adc
mov
add
bound
add
dec
mov
xlat
and
stos
mov
cmp
mov
add
dec
icebp
mov
xchg
or
pop
aam
lock
mov
mov
out
js
sahf
lds
ret
cli
jb
or
lods
popf
pop
scas
js
fidivs
push
inc
push
cmp
pop
pop
ja
push
scas
dec
lahf
inc
fiadds
scas
pushf
jp
xchg
popf
jle
mov
mov
sbb
lock
rorl
add
push
rcr
call
test
sti
add
pop
lods
in
push
fwait
lret
dec
pop
iret
call
add
int
fwait
inc
ret
sbb
pop
add
sbb
push
das
jp
lock
pop
je
out
xchg
dec
jmp
repz
push
frstor
mov
jg
add
shr
mov
arpl
adc
mov
dec
int
repnz
jle
add
xchg
data16
adc
gs
add
ja
sub
mov
inc
jecxz
jnp
arpl
cmp
sbb
add
push
cltd
add
xchg
xchg
out
cld
add
std
dec
cmp
lret
mov
pop
dec
add
sti
les
mov
xchg
sub
jne
cmc
add
xor
xchg
cmp
repz
add
lea
nop
push
fildl
jecxz
pop
mov
call
into
and
jo
ljmp
push
mov
add
add
xchg
jge
xchg
inc
es
xor
jg
repnz
mov
jmp
test
mov
pop
and
dec
inc
jg
pop
mov
dec
add
lea
popf
jne
push
int
add
pop
cmpsb
jge
jns
add
adc
xchg
mov
pop
js
je,pn
add
iret
loope
xchg
xor
orb
pop
mov
lea
aas
rcl
inc
jmp
repz
mov
add
inc
out
fwait
sub
push
je
fstl
jne
xchg
out
and
xchg
mov
popf
in
es
mov
or
js
out
ljmp
pop
jg
lret
in
testb
or
sahf
mov
mov
cmp
fisubrl
cli
push
jg
push
je
mov
cmp
dec
imul
add
jecxz
out
lcall
mov
dec
push
addr16
mov
add
mov
sbb
add
std
sti
rclb
push
out
add
jge
fwait
add
enter
je
mov
mov
mov
repnz
leave
push
dec
jg
fs
or
hlt
into
daa
lcall
popf
and
push
ss
cmp
dec
jl
sti
pop
aas
sub
adc
mov
add
adc
push
push
mov
xchg
enter
cmp
push
aas
movsb
iret
mov
xor
mov
cmpsl
lahf
stos
lret
xorl
add
jmp
sbb
test
lods
push
fsubl
sub
add
jle
xchg
iret
push
jno
outsl
rorb
mov
add
cli
outsb
daa
mov
mov
repnz
xor
add
aaa
notl
adc
inc
mov
sbb
insb
jp
test
mov
movsb
or
cmpsb
cld
fdiv
sub
call
push
loop
mov
das
out
and
test
inc
xor
sbb
lds
add
xchg
outsl
in
pushf
inc
fmul
jecxz
test
setle
add
xor
add
lret
add
fcomip
stos
mov
rolb
push
or
cli
movsl
scas
fstpl
je
push
jge
lods
inc
pop
lret
loope
add
xchg
popa
dec
in
outsl
add
in
mov
add
add
cmp
pop
add
cmp
jne
lds
inc
test
push
add
scas
and
push
mov
fwait
mov
pop
test
rclb
jo
test
inc
or
add
push
sbb
push
pop
add
loop
lock
mull
pop
add
cmp
pop
and
inc
sub
xchg
push
sbb
ret
negb
dec
test
daa
mov
cld
out
add
aad
std
hlt
add
cwtl
pop
mov
incl
mov
xor
ja
jns
fcomps
mov
push
push
pusha
ja
push
mov
fwait
sarl
insb
jl
inc
imul
cmpsb
xchg
adc
add
mov
ja
jnp
adc
out
jmp
xlat
jno
cmp
adc
add
in
inc
ret
inc
mov
dec
rcrl
jl
arpl
repz
pop
add
pop
jb
pop
sti
fs
sbbb
dec
popa
ds
add
xorl
mov
into
cmp
inc
adc
fsubrl
pop
cmp
insb
dec
imul
mov
test
jle
mov
roll
lea
xor
and
clc
cmp
popa
das
add
lret
cmp
xor
mov
push
mov
iret
cmp
push
sub
add
data16
cmpsl
push
cli
loop
push
rcll
cmp
add
std
and
popf
fmuls
mov
repnz
add
cmp
andl
add
cmp
stc
and
dec
leave
je
or
enter
jnp
int3
dec
add
adc
xor
addl
add
insl
pop
inc
push
cmp
mov
in
add
xor
mov
add
mov
dec
add
inc
idivb
push
push
push
pusha
add
mov
push
mov
dec
xor
daa
nop
inc
cltd
add
add
cmp
inc
pushf
add
enter
dec
xor
das
iret
jmp
mov
push
dec
xchg
mull
mov
and
imul
fbld
sahf
popa
inc
add
icebp
daa
imul
fwait
xor
out
xchg
out
sbb
cmp
pop
nop
das
inc
movsl
and
int
mov
inc
add
dec
rorb
add
popa
clc
push
xor
les
dec
iret
bound
int
and
jnp
std
xor
pop
inc
lock
stc
push
push
add
inc
pop
stos
add
mov
ja
push
add
push
inc
add
add
push
add
add
dec
add
add
add
add
push
inc
add
je
add
add
add
add
jbe
dec
push
add
jbe
add
xor
add
inc
push
insb
add
dec
add
xor
add
add
inc
add
insb
add
add
push
add
xor
xor
add
add
aaa
add
aaa
add
add
add
inc
adc
add
test
fsts
shr
lret
add
std
fcoml
mov
push
mov
mov
fs
push
std
mov
addr16
inc
pusha
cmp
cmp
pusha
xor
cs
adcb
sbb
adc
push
cld
sbb
push
fadds
repz
lods
popf
test
push
mov
inc
aaa
jge
out
inc
js
je
jo
insb
inc
push
pop
inc
pop
inc
push
inc
pop
inc
dec
inc
in
stos
and
aas
cmpsl
push
or
pop
add
stc
cld
sbb
xchg
lock
in
sti
call
push
fmull
psllw
inc
enter
rol
jmp
addr16
jns
inc
push
cmpsl
lds
add
add
pop
test
add
adc
adc
add
loopne
das
jecxz
fmul
cmp
aaa
cmpsl
xor
xor
adc
push
sbb
push
addr16
ja
out
and
and
ud2
adc
mov
test
pop
popa
add
pop
sbb
add
sti
and
or
add
leave
ret
jae
cmc
sub
ss
pop
mov
lahf
fdivs
jl
add
inc
cltd
cld
push
xor
scas
daa
mov
mov
pop
mov
lea
xchg
mov
mov
sub
lds
inc
roll
inc
fildl
inc
rcrb
in
inc
repz
clc
inc
std
lds
add
or
adc
pop
inc
and
sub
inc
xor
dec
mov
cmc
pop
pop
addb
xorb
addl
popf
andb
mov
mov
or
iret
adc
fildl
jmp
icebp
xor
std
sub
xor
cmp
xor
and
push
push
add
popa
jae
dec
das
push
rcrl
shll
jo
jbe
jl
add
rorl
mov
shll
rol
movzwl
loop
call
add
and
xor
cmp
xor
push
adc
xor
ss
cmp
inc
lds
dec
nop
rol
shll
shrl
js
jle
test
mov
nop
rcll
stos
pop
mov
mov
mov
and
and
and
and
and
and
aas
add
xor
jecxz
mov
in
mov
xor
push
and
insl
and
ja
andb
and
and
and
and
and
aas
cld
xlat
add
push
pop
push
and
dec
pop
push
push
insb
dec
jb
jge
adcl
xchg
inc
lcall
inc
lret
inc
inc
fildl
inc
repnz
std
sbb
jp
push
push
das
movsl
das
xor
inc
out
xchg
jmp
pop
dec
addr16
je
test
test
mov
lret
inc
icebp
lds
add
push
inc
adc
sub
xor
and
dec
fcoms
jb
xchg
js
pop
mov
rorl
rcrb
pop
lock
cld
pop
add
mov
inc
mov
mov
je
jnp
xchg
xchg
cmp
pop
mov
xlat
inc
loope
repnz
stc
add
fidivrs
or
adc
pop
and
push
das
xchg
test
dec
adcl
cmpl
scas
add
rolb
add
or
inc
xor
push
and
fs
insb
push
orl
inc
mov
mov
inc
in
inc
stc
add
push
cmp
add
movsl
push
cmpsl
jecxz
ror
leave
gs
jne
jp
add
rcrl
aad
cltd
lock
lds
cmp
inc
and
mov
sbb
cmp
mov
pop
rcrb
pop
loope
call
iret
sbb
mov
cmp
pop
jle
push
bound
int
lret
jp
subb
rol
fdivl
cmp
aas
or
adc
sub
lds
sub
push
jne
pop
jmp
mov
lahf
pop
stos
sbb
pop
iret
pop
aam
out
add
inc
sbb
lods
sub
inc
mov
dec
cmpsl
push
jmp
imul
mov
push
mov
cmp
call
lods
xorb
pop
out
sub
sbb
or
pop
leave
dec
xlat
cmc
call
xor
xor
add
push
pop
pop
dec
aad
mov
cwtl
sub
scas
sbb
or
xorl
cmp
test
xchg
mov
add
adc
nop
jmp
repnz
jg
and
xor
mov
inc
dec
jae
pop
data16
movsb
dec
test
and
aas
cmp
dec
sahf
dec
push
pop
mov
push
aas
jno
cmp
stos
sub
and
mov
xlat
sbb
and
mov
fwait
or
add
in
pushl
popa
addl
jns
add
xchg
mov
stos
icebp
mov
shlb
iret
pop
ds
sbb
aaa
mov
inc
push
push
pop
or
jns
xchg
adc
ljmp
sbb
xor
mov
mov
lret
add
xlat
add
pop
xchg
or
xchg
sub
xor
cmp
push
popa
push
jno
orl
inc
faddl
sub
in
idivb
or
cmp
xchg
add
pop
and
mov
jmp
mov
xchg
and
push
out
sub
sbb
or
jl
insb
jmp
hlt
xlat
add
adc
daa
es
pop
mov
dec
cwtl
jbe
mov
movsl
cmp
int
and
xor
std
and
cmp
xor
mov
xchg
int
and
call
adc
sbb
pop
popf
push
cmpsb
mov
aas
push
dec
iret
and
cmpb
cmp
push
push
push
jl
outsl
test
fiadds
xor
into
addr16
ja
nop
leave
and
cmp
xchg
repnz
xlat
sbb
sub
push
cmp
lcall
mov
pop
in
jl
pop
imul
mov
adc
jp
das
sbb
xchg
gs
and
xor
and
mov
mov
push
add
and
adc
mov
adc
add
loopne
jae
jp
inc
add
in
inc
repnz
cld
xchg
xchg
aas
aas
push
dec
push
push
outsl
les
dec
leave
inc
fiadds
dec
out
mov
or
push
jo
add
filds
xchg
nop
int
mov
cld
imul
dec
setbe
pop
imul
jo
test
aas
stc
sbb
cmp
mov
leave
pop
repz
cmp
mov
in
pushf
ja
dec
out
pop
sbb
push
in
out
xchg
addr16
insb
sti
popf
sbb
or
jl
outsl
fisttpll
add
dec
adc
and
sub
pop
jb
lcall
stos
fildll
dec
lds
ds
inc
sbb
inc
mov
push
dec
pop
inc
outsb
outsb
jp
sbbb
xchg
dec
pushf
mov
add
sbb
pop
es
in
mov
xchg
push
fisttpl
lods
fwait
mov
jmp
add
nop
je
stos
loopne
xor
jecxz
aas
and
cmp
inc
push
dec
ds
enter
repz
stos
xorb
lret
fnsave
jo
jg
cmp
add
add
mov
movsl
xchg
mov
add
mov
adc
mov
mov
out
adc
imul
add
cmp
push
sbb
fwait
xchg
push
into
fnstcw
or
ret
jecxz
loop
das
cld
cmp
lret
outsb
dec
push
mov
scas
sub
adc
add
pop
pop
loopne
inc
jecxz
dec
cld
mov
mov
int
fists
jns
ss
mov
fldcw
outsl
xor
andb
icebp
mov
mov
leave
js
pop
fisubrl
pop
sar
mov
mov
add
paddd
mov
push
repz
add
sub
xor
and
and
outsb
jg
daa
loopne
add
cmc
inc
xchg
inc
pop
popa
pop
push
popf
jns
pop
pushf
pop
add
xchg
fistpl
arpl
cmpsl
sub
pop
push
fldl
and
sub
add
nop
sbb
mov
lret
out
out
xlat
add
jno
xchg
push
lcall
mov
jp
cmpsb
push
sbb
shl
add
cmc
idiv
add
mov
sbb
scas
jno,pn
mov
push
jg
sahf
std
cmpsb
add
int3
mov
test
pop
test
push
aas
push
or
out
daa
nop
mov
dec
and
jns
jo
mov
out
xlat
aas
imul
push
sar
dec
fistpll
out
out
aad
nop
sti
xchg
sbb
ja
or
rcrl
jae
cmp
fs
and
lods
add
add
pop
sub
je
daa
cwtl
mov
inc
test
lahf
test
mov
add
rclb
fadd
clc
lods
add
or
es
xor
cmp
xor
mov
fsubs
in
push
add
dec
insb
pop
cltd
sbbl
cmp
popf
imul
inc
imul
xchg
cmc
xchg
jae
pop
mov
sbb
mov
pop
lods
sbb
leave
outsb
into
dec
lahf
cli
push
add
addr16
inc
lods
cltd
movsl
aas
add
dec
loop
mov
stc
loop
jno
mov
movsl
outsb
cmpsl
addb
jmp
divl
inc
push
dec
testb
and
xchg
sahf
test
sub
xor
adc
mov
ja
jl
addl
stos
test
xlat
mov
add
dec
cmp
loop
adc
ja,pt
shll
xor
je
sti
ljmp
dec
orb
out
cld
pop
pop
pop
jg
repz
lret
sti
std
clc
jbe
jg
ret
dec
xchg
push
push
movsl
add
pusha
xchg
jb
jl
orb
cwtl
inc
scas
add
rcr
xor
dec
dec
add
imul
xor
jno
mov
sarb
popa
lret
jecxz
in
lret
add
or
push
cmp
inc
nop
push
jge
jae
add
xor
cmp
ficomps
aas
sub
arpl
fmull
dec
xchg
or
rorb
add
inc
ffreep
out
pop
adc
mov
cmp
popf
add
add
es
imul
stos
jae
mov
iret
add
or
sbb
dec
xor
mov
ds
push
xlat
add
push
and
xor
mov
imul
repnz
aas
es
aas
sub
and
push
jle
js
orb
ret
jl
das
shll
int3
jo
insb
add
or
sbb
and
mov
mov
inc
loop
lock
dec
xor
or
or
ja
popf
xchg
add
mov
fucom
add
rolb
xor
cwtl
or
lods
sub
leave
xchg
mov
pop
fsubrs
in
and
sbb
add
xor
imul
inc
jae
scas
pop
jne
ret
xor
out
and
mov
add
add
or
imul
mov
push
cld
pop
fisubrs
insl
xchg
addl
test
add
pop
sbb
jecxz
sub
sub
xor
outsl
xchg
icebp
jle
inc
pop
inc
push
dec
mov
outsb
pop
sub
cmpxchg
cltd
imul
xchg
lret
sub
sbb
aas
sub
mov
mov
fisttps
mov
mov
mov
mov
jg
aam
inc
fidivrs
sbb
dec
add
add
mov
cmpsl
imul
xor
mov
les
in
adcl
or
sub
push
iret
push
sbb
imul
out
xchg
test
test
jecxz
xchg
loop
mov
mov
loope
add
aas
inc
push
jp
mov
or
nop
sub
cmp
dec
fldt
sbbb
adc
xchg
stc
test
cmp
imul
imul
push
push
xchg
sub
add
adc
inc
sbb
add
in
in
popf
aaa
cmp
mov
imul
adc
out
js
jge
mov
inc
into
xor
jg
mov
jecxz
mov
pop
in
fisttps
mov
cmc
xor
pop
clc
add
ds
rcll
aaa
test
dec
mov
mov
mov
sbb
dec
xor
sub
push
jo
stc
mov
xchg
sbb
scas
das
aam
incb
push
xor
xchg
push
pop
ds
outsl
adc
pop
cmpsl
xchg
pop
mov
lret
mov
pop
push
xor
sbb
inc
jns
fstpl
lods
inc
jae
cmpb
std
jmp
sbb
add
push
pop
roll
push
sbb
ffreep
mov
ret
add
dec
out
scas
cli
add
add
cmp
add
cmp
xchg
mov
stos
dec
popf
fiadds
es
jecxz
loop
in
pop
cmp
rcll
add
int
lret
aad
fisttpl
rorb
xor
pop
gs
dec
cmp
imul
sub
movsl
lret
stos
leave
mov
mov
jge
jmp
dec
or
adc
lret
mov
and
and
lret
jbe
sbbb
xchg
adc
cwtl
fyl2x
add
fstl
mov
cltd
cmp
nop
and
dec
out
sub
cmpsb
xor
add
dec
xchg
mov
cmc
cld
inc
pop
pop
push
imul
sub
xchg
dec
mov
sbb
pop
pop
sahf
js
sbbl
popf
sub
aas
cmp
pop
jle
ja
pop
lea
mov
cmp
add
aad
inc
dec
lret
push
pop
add
push
cmpsl
movsb
pop
mov
mov
dec
aam
into
adc
and
lods
bound
sub
iret
pop
add
sbb
cmp
decl
mov
adc
aas
sahf
idivl
cmp
out
jb
mov
mov
lret
push
lods
cltd
mov
and
nop
sbb
mov
aad
push
xlat
repz
mov
jno
js
pop
test
pushf
jle
test
enter
aam
out
xor
insb
movsl
mov
jg
pop
xchg
popa
cmc
add
xlat
mov
les
aas
test
cmpsl
mov
and
xchg
in
xchg
fsubrl
sbb
lock
mov
bound
jb
ja
jge
mov
mov
les
xor
cmp
dec
pop
fsubl
jmp
sbb
mov
movsl
arpl
push
icebp
xchg
xor
int
add
testl
jg
inc
sub
or
fstps
iret
mov
pop
sub
loope
mov
sub
outsb
mov
push
mov
mov
lods
xchg
xchg
lds
pop
xor
add
fs
mov
or
mov
mov
sub
pop
ja
or
add
jns
aas
sub
inc
pop
and
stc
lret
xchg
dec
fistpl
add
and
cmp
or
push
pop
mov
sbb
out
mov
data16
daa
scas
cmp
dec
mov
cmp
mov
mov
movzbl
xor
stos
jb
xchg
dec
mov
xor
inc
insb
inc
test
adc
bound
inc
and
push
jbe
jmp
xor
lret
std
aad
cmp
movsl
je
push
xchg
aas
hlt
sbb
sub
jg
mov
adc
mov
sbb
call
sub
ja
sub
add
fwait
addl
dec
inc
test
dec
adc
addl
push
jns
add
jmp
pop
add
bound
mov
cmp
dec
ljmp
inc
dec
bound
mov
xchg
push
stc
loopne
push
adc
lret
lods
iret
pop
dec
jle
pop
call
dec
mov
fdivr
pop
xor
sti
mov
inc
and
push
dec
mov
add
add
or
jno
sbb
ficomps
arpl
cmc
mov
insb
cmp
inc
data16
or
push
or
dec
jmp
mov
stos
out
dec
push
jno
mov
movsl
xchg
iret
popa
fildl
or
cmp
sbb
mov
pop
dec
add
enter
add
inc
sbb
or
or
fdivl
shr
add
aas
pop
sahf
sbb
imul
mov
pop
xor
push
lea
fs
jp
push
lds
mov
lock
jge
int
add
clc
movsl
push
mov
adc
cmp
addl
inc
lds
cmp
fistps
or
or
sub
xor
jmp
mov
ret
test
add
mov
test
ret
mov
fstpt
jno
sarl
sub
sbb
dec
adc
stos
push
cmp
sti
cmp
and
pushf
pop
loopne
jle
int
es
push
mov
jl
push
and
ret
and
sub
std
mov
add
js
enter
les
mov
shll
roll
mov
xchg
sbb
inc
jns
sub
jg
and
add
fwait
sbb
mov
jae
push
push
stos
add
and
test
cmp
add
leave
fwait
mov
mov
jae
je
sbb
daa
xchg
add
push
fbld
adc
add
ret
mov
inc
mov
jle
popf
stc
or
pop
mov
pop
xor
jno
push
add
add
nop
pusha
sub
mov
jge
test
scas
add
lcall
mov
in
test
roll
add
cmp
in
je
xor
lock
addr16
fdivl
lahf
push
cmp
pop
push
sbb
lret
or
xchg
rcl
inc
and
test
outsb
cmp
add
inc
inc
popa
dec
gs
add
dec
ja
add
fs
add
lret
push
and
push
lods
cmp
int
or
mov
cmp
sub
dec
popf
lret
mov
cmp
adc
add
mov
cmc
push
and
mov
sbb
inc
cwtl
adc
enter
cmpsb
or
test
or
rorb
add
cmc
call
mov
ret
ss
cmp
add
xor
mov
lahf
jnp
adc
roll
call
rorb
or
rolb
mov
addr16
or
or
inc
mov
mov
mov
pop
mov
push
and
loope
outsb
or
jl
mov
add
jmp
inc
or
jecxz
inc
jo
pop
or
sbb
outsl
xchg
test
add
cmp
rorl
imul
sub
mov
aas
and
inc
xor
mov
loopne
bound
aam
lock
xchg
jge
scas
insb
add
jmp
je
mov
and
clc
fisttps
repnz
mov
mov
jnp
push
xchg
adc
xchg
mov
cmp
je
dec
sti
pop
add
sete
idivl
add
imul
add
enter
xchg
add
jmp
mov
adc
sub
lahf
aaa
sub
or
fcoms
dec
cmp
xchg
add
mov
or
inc
adc
ljmp
inc
xor
decl
cmp
adcl
adc
push
adc
ja
add
cmpsb
mov
lahf
rcrb
popf
jbe
add
pop
sar
int
add
sub
cmpb
adc
pop
xor
add
dec
clc
popf
dec
cmp
stos
jno
movsl
or
lret
add
es
pop
add
inc
test
push
aas
cmpsl
ss
jne
cmc
mov
test
mov
je
jno
jl
mov
add
mov
stos
in
or
hlt
add
or
xchg
add
mov
pop
jmp
pop
mov
push
add
add
notl
xchg
stos
fcoml
add
std
push
and
lret
jmp
orb
rcl
shr
or
mov
mov
dec
cmp
addl
cwtl
pop
jae
js
adc
mov
imul
decl
jmp
lods
cld
jl
push
xor
dec
lea
pusha
add
or
sub
add
jge
mov
add
lcall
xchg
aaa
ljmp
cmp
ret
sbb
pop
push
cmc
or
mov
mov
dec
mov
jge
mov
dec
or
out
inc
stos
pop
sub
xchg
pop
movsb
add
add
int3
roll
mov
or
lds
dec
fstps
add
into
push
jge
clc
add
inc
inc
cmp
xor
das
or
mov
bswap
pop
imul
cmpsb
jmp
mov
shr
cltd
mov
push
test
cmp
mov
add
sub
add
mov
xchg
rcrb
dec
sbb
sub
push
imul
mov
test
jp
add
addr16
inc
lds
verw
in
hlt
mov
sub
adc
jmp
les
jb
add
add
pop
je
add
push
fisubrs
and
mov
mov
sub
scas
lret
fistpl
add
add
jne
add
inc
outsb
mov
js
jbe
movsb
test
lret
insl
aas
addb
test
lret
cmp
xor
ja
xchg
outsl
pop
imul
push
adc
add
dec
loopne
adc
cs
mov
or
jp
jae
cmpb
aas
jnp
std
dec
dec
mov
or
aas
sub
testb
fsubrl
or
jne
verw
add
clc
add
adc
outsl
popf
mov
add
push
or
les
add
in
add
addb
add
jmp
fisttps
xchg
je
dec
xchg
sbb
mov
sbb
imul
xchg
iret
ret
dec
xor
dec
adcl
stc
sti
ja
lods
lret
mov
jne
das
enter
roll
mov
cmpsl
mov
push
jg
sbb
add
lahf
mov
xchg
aad
dec
inc
jge
inc
add
ror
cmp
ret
test
int
jp
xor
into
xor
enter
jmp
add
adc
xchg
cmp
jae
inc
pop
mulb
cld
push
add
xor
xor
adc
mov
enter
mov
mov
imul
popa
fwait
jle
sub
jmp
fldt
mov
mov
or
lret
jp
push
jne
mov
in
sbb
nop
jle
or
iret
es
fs
push
mov
or
jg
add
sbb
push
and
dec
sbb
adc
fbstp
clc
add
lret
je
sbb
add
sub
scas
mov
sahf
mov
outsb
add
aad
pop
scas
add
lds
or
leave
inc
dec
mov
lea
testb
lret
xchg
into
mov
roll
icebp
dec
sbb
ds
jo
lcall
out
pop
aaa
pop
dec
sub
add
inc
sbb
mov
add
sbb
mov
push
mov
pop
roll
subl
sub
rol
arpl
test
es
popf
scas
add
or
pop
rolb
mov
leave
mov
fistpl
sub
cmp
jl
iret
cmpb
xchg
stos
inc
mov
xchg
push
mov
incl
cmpb
pushf
add
or
sub
add
inc
xchg
dec
insl
lret
mov
ret
clc
inc
pop
lahf
cld
fs
mov
movsb
xor
or
addl
and
adc
push
dec
iret
test
or
mov
imul
mov
push
dec
xchg
mov
in
repz
xchg
sbb
pop
mov
test
hlt
add
insl
and
add
lea
fdivrs
dec
mov
mov
mov
pop
and
add
mov
jge
pop
test
rcrb
jle
mov
mov
adc
pop
fdivl
inc
dec
mov
xchg
es
mov
push
sub
call
cmp
lds
push
sub
pop
dec
test
imul
js
mov
add
push
lea
add
mov
jg
xor
jne
pop
jne
jge
mov
add
push
and
push
add
mov
repz
add
dec
sbb
add
and
pop
add
mov
out
jmp
and
adc
cmp
sbb
jl
mov
aas
mov
std
ficompl
cmpxchg
sub
mov
push
fildll
pusha
inc
sbb
jge
mov
shlb
lea
sbb
fstpl
cmp
pop
enter
rorb
in
xchg
push
cmp
adc
push
sub
andb
xchg
add
mov
or
xchg
mov
insb
aas
outsl
sub
add
nop
mov
dec
roll
stos
mov
out
std
lret
shl
mov
hlt
enter
fldl
cs
divb
add
add
bound
add
rol
jne
call
mov
inc
in
xchg
adc
inc
leave
roll
xor
mov
mov
add
or
testb
or
and
stos
jb
mov
sub
inc
lock
out
jo
js
fisttpll
sub
mov
bnd
jmp
lret
add
daa
ror
push
call
scas
ljmp
std
ret
sbb
add
mov
fadds
cmp
mov
xchg
add
mov
roll
loopne
in
imul
xor
push
dec
push
push
add
mov
sbb
int
jnp
inc
lcall
or
xor
js
mov
mov
mov
leave
mov
pop
je
fistps
mov
adcl
adc
or
sbb
or
fcomi
mov
pop
mov
ret
call
int
repz
aad
inc
jbe
mov
jg
jle
pop
cmovne
push
push
mov
or
insl
xlat
jns
sti
fs
xor
pushf
cmpsl
enter
inc
inc
add
aad
push
add
xor
cmc
mov
cmp
repz
aad
int
add
jl
scas
add
jae
das
jns
incb
cmp
mov
daa
adcb
movb
ffree
cmpsl
popl
imul
lods
std
and
arpl
call
rolb
pop
jge
shll
and
push
fstpt
or
push
or
call
or
add
add
cli
xlat
mov
bnd
fmulp
idivb
jbe
xchg
mov
mov
pop
js
lret
les
fwait
enter
add
cmpsl
mov
idivl
push
or
in
jecxz
dec
add
inc
jbe
sbb
cwtl
add
aad
call
dec
sbb
fistl
push
sbb
mov
xchg
orl
xor
daa
push
dec
dec
inc
add
mov
inc
add
sub
lods
add
adc
inc
rorl
add
outsb
sub
bound
dec
sub
mov
addb
sub
sub
pop
add
jl
hlt
add
push
popf
xor
int3
pop
add
imul
jnp
or
enter
movsb
sbb
cmp
dec
into
or
add
daa
cmp
inc
inc
dec
pop
add
inc
push
loop
mov
jl
push
test
push
or
add
in
enter
cmp
insl
lods
in
addr16
cmp
sbb
inc
xchg
mov
cmp
xchg
std
out
leave
sbb
add
and
inc
mov
xchg
and
pop
jg
inc
es
not
mov
lcall
adc
hlt
je
int3
or
mov
addl
imul
dec
scas
rolb
imul
lods
cmpsl
rolb
pop
aas
jmp
idiv
adc
xor
popf
xchg
shlb
sarb
or
fdivs
fcmove
push
outsl
adc
adc
pop
mov
mov
sub
add
xor
mov
sub
add
jg
add
cli
mov
xchg
adc
mov
sub
cmp
inc
cmp
orl
movsl
aaa
dec
jge
enter
fwait
lea
xor
fdivrs
pop
out
add
cltd
addl
pop
add
or
mov
ret
es
mov
mov
movsl
jb
add
subb
and
mov
and
cmp
shrl
adc
ret
mov
push
inc
push
aaa
std
cmpb
ds
pushf
lret
loope
or
outsb
add
mov
mov
insb
je,pt
bswap
inc
add
inc
dec
sub
mov
xchg
cmp
popa
js
imul
add
add
lret
pop
dec
mov
subl
add
mov
dec
loope
inc
outsl
mov
std
cmc
stc
dec
imul
inc
pop
rol
push
divl
incl
xlat
and
into
add
ds
outsb
mov
ds
adc
add
psubsb
mov
lock
cmpl
jle
dec
je
add
adc
test
add
mov
enter
mov
add
dec
outsb
and
cmpsl
das
mov
adc
mov
push
cltd
rorb
int3
add
push
mov
or
pop
das
push
cmpb
pushf
clc
rcrl
dec
aaa
lea
push
xor
add
mov
rorl
subb
cli
pop
in
dec
push
lahf
add
clc
add
cmp
inc
or
dec
jae
enter
dec
iret
loop
pop
mov
andl
xchg
add
rclb
icebp
inc
or
repnz
pop
adc
add
mov
test
lods
cmp
add
sti
push
add
imul
orps
push
add
inc
aad
xchg
mov
xchg
add
xchg
dec
sub
cltd
fistps
jmp
add
inc
sar
out
xchg
aas
call
mov
add
cmc
jecxz
push
xchg
pusha
aas
sbb
lods
bswap
jo
cmp
sti
insl
sarl
sbb
clc
push
pop
ds
arpl
inc
rcrb
push
lret
xchg
fisttps
outsl
jae
jnp
jno
xor
xor
leave
test
jbe
cmp
test
cmpsb
mov
fistpl
daa
repnz
sbb
icebp
jne
add
xchg
inc
dec
ror
jb
add
sbb
adc
add
sbb
neg
jmp
mov
or
icebp
or
sarl
sub
pop
pushf
add
or
test
jle
jmp
lods
add
mov
add
xchg
shl
es
lret
mov
inc
pushf
push
jnp
add
pop
cmpsl
cmp
push
addr16
dec
data16
mov
or
or
pop
add
bound
push
mov
jmp
mov
adcl
int3
js
pop
mov
add
xchg
leave
rorl
xchg
or
jbe
push
inc
cli
sub
leave
add
sbb
loopne
fwait
add
dec
popf
mov
je
xchg
cmp
in
outsl
lret
jb
mov
pusha
mov
sub
push
pushf
dec
push
ret
jmp
add
cwtl
inc
xlat
fldenv
adc
test
ljmp
shr
mov
jns
iret
add
mov
mov
cmc
dec
dec
sbb
push
add
jnp
lret
and
lea
sbb
cmp
inc
out
pop
dec
data16
sbb
push
add
inc
sbb
lock
xchg
movb
jne
decb
mov
pop
enter
jmp
incl
sarl
cli
std
leave
dec
inc
pop
add
ss
in
mov
int3
test
sbb
addl
add
sub
test
cmp
pop
dec
mov
dec
sbb
dec
or
into
mov
and
mov
faddl
outsl
lcall
ret
mov
pop
into
pop
notl
ret
call
jg
xchg
push
fwait
xchg
mov
orb
push
dec
dec
and
insl
add
add
aad
stos
push
into
inc
pop
add
mov
add
ss
and
xchg
and
ret
xchg
inc
xor
inc
push
mov
or
jl
xchg
add
sbb
ss
ror
sub
cmpl
or
mov
std
mov
fldl
lret
loopne
and
loope
mov
jne
mov
stos
mov
add
fstps
aaa
scas
sbb
dec
add
jne
inc
dec
pop
add
repz
xchg
cmp
add
mov
adc
xchg
imul
push
std
arpl
sub
loope
mov
out
insb
jo
add
cli
sbb
cltd
faddl
int
lods
mov
sub
insb
test
lcall
daa
enter
flds
add
mov
push
dec
push
imul
out
xor
lea
and
xchg
dec
fisttpl
inc
sub
add
add
jmp
aas
add
or
push
add
mov
pop
fstpt
cmpsb
rolb
mov
xchg
mov
arpl
push
add
mov
mov
cmp
scas
lea
outsl
shr
mov
cmp
add
jg
in
enter
xor
mov
dec
inc
out
xorl
sti
int
lret
push
push
andl
jge
imul
mov
mov
pop
addr16
mov
rorl
sub
sti
add
xchg
or
dec
stc
add
or
cltd
add
or
rcrl
push
or
cld
nop
fildll
movsl
add
mov
dec
inc
mov
pop
fwait
add
jno
mov
in
or
dec
push
dec
loopne
daa
sbb
xchg
pop
cwtl
negb
add
hlt
dec
sti
iret
push
call
fstl
fwait
movb
aad
cmp
or
push
iret
popa
pushl
cmpsl
inc
sarb
pop
push
jmp
call
push
sti
jg
sbb
jg
lods
aaa
nop
dec
flds
push
iret
shlb
xor
push
nop
enter
jmp
sbb
cmp
sub
repz
xchg
mov
add
jecxz
add
jae
lds
inc
push
bound
add
xchg
stc
iret
inc
popf
adc
cmp
movsl
cld
es
aas
mulb
mov
scas
lods
data16
pop
pusha
add
cmp
xchg
and
dec
sub
popf
popa
pushf
push
add
scas
lcall
add
in
jl
push
cmovbe
lods
add
adc
cld
not
add
adc
cmc
add
loope
gs
cld
push
add
push
or
dec
inc
sti
outsl
test
nop
cmpsl
xchg
lret
adc
dec
cwtl
mov
xor
adc
mov
movsb
inc
pop
sar
cltd
fcomps
sub
aam
adc
loop
push
clc
inc
dec
dec
or
mov
pusha
fdivrs
mov
cmp
fdivl
xchg
dec
push
or
fdivrp
and
or
pop
aas
push
xchg
jne
xchg
xchg
mov
adc
push
lahf
push
stc
pop
cli
add
dec
mov
sub
mov
roll
xchg
dec
jae
test
negb
add
add
call
push
scas
shl
add
adc
xchg
jmp
lahf
or
test
push
insb
cmp
dec
addb
incb
ljmp
and
inc
fwait
or
in
ds
add
pop
inc
fdivr
enter
in
sub
lock
xlat
mov
inc
mov
mov
or
push
add
cmp
leave
or
loope
hlt
sbb
clc
out
add
sbb
add
ret
cli
or
mov
aaa
leave
jnp
int3
jmp
das
dec
push
enter
fwait
mov
pop
mov
lcall
sub
aas
xchg
mov
repz
add
cld
push
xchg
inc
mov
add
gs
addr16
jne
add
js
or
pop
dec
sarb
nop
jnp
in
cld
test
fs
addb
xchg
mov
out
insb
push
jle
jo
jnp
loope
test
push
and
lcall
pop
popf
push
xor
mov
jg
sub
lock
pop
testl
push
nop
test
int3
roll
fmuls
mov
into
test
mov
gs
cmp
sub
out
jne
jae
push
inc
and
ss
sub
mov
xchg
inc
addr16
movsb
mov
loope
jno
sahf
dec
cmp
popf
sldt
adc
jmp
jmp
sub
mov
dec
in
xchg
xchg
add
stos
or
aam
sub
push
jno
pop
cltd
push
inc
sahf
add
aad
mov
sub
jae
aas
mov
xchg
jb
xchg
jo
push
lock
mov
mov
cmpb
add
leave
loopne
jmp
push
mov
jno
outsl
out
fmuls
mov
inc
add
lea
dec
mov
ja
add
xchg
je
dec
rclb
pop
das
adc
mov
stc
xchg
aas
or
inc
adc
mov
sbb
add
movsl
add
dec
inc
in
mov
cmpl
add
jg
pop
cld
out
lcall
mov
in
dec
push
lea
jnp
mov
inc
cmp
push
mov
or
and
mov
sti
add
cmp
xlat
add
mov
aad
add
fists
enter
xchg
inc
and
dec
aas
push
dec
fidivl
add
jge
inc
shll
sub
loopne
enter
fadds
ljmp
pop
mov
mov
pop
xchg
sahf
mov
int3
enter
pop
lds
xchg
int
dec
mov
nop
pop
sahf
push
pop
int3
xchg
jmp
push
or
cmp
rcrb
fmull
cli
incl
dec
pop
lret
add
orl
push
inc
rcrl
dec
cmp
add
fs
mov
aad
icebp
repz
sub
cmc
inc
mov
mov
add
mov
pop
add
add
test
cmp
adc
mov
xor
sub
out
hlt
add
psllw
push
aas
or
mov
pop
mov
xchg
out
nop
lret
add
inc
icebp
jp
imul
push
xor
push
add
and
out
sbb
stos
add
cmc
mov
fs
arpl
rcl
aas
sbb
xchg
pop
mov
sub
inc
push
sbb
dec
and
loope,pn
popf
cltd
mov
add
jmp
sarb
add
jle
xchg
jge
ljmp
jns
add
je
jne
inc
sti
cmc
mov
push
fucomi
push
aaa
mov
ret
hlt
and
ds
aas
add
mov
mov
popa
push
shr
pop
add
jmp
adc
mov
push
call
ret
std
test
lods
mov
stc
popf
pop
cmp
mov
idivl
pop
jle
or
test
aam
cmc
movl
mov
fwait
push
loope
jbe
or
xchg
bound
icebp
into
jnp
mov
mov
jl
aad
sbb
and
add
xchg
or
je
push
push
jne
or
push
lea
repnz
push
fistl
roll
push
mov
add
pop
dec
rcll
pop
clc
daa
lock
mov
les
add
loope
loopne
mov
sub
inc
test
das
enter
xchg
pushl
add
pop
add
in
push
rolb
pop
sahf
and
push
sub
mov
outsl
sbb
lcall
push
ds
dec
dec
add
add
movsb
inc
mov
pop
push
add
sbb
lahf
inc
add
jmp
mov
add
jmp
cli
add
push
gs
add
scas
lahf
xchg
lcall
out
jge
mov
repnz
shl
pusha
in
mov
inc
push
rolb
data16
inc
subb
gs
js
in
fisubrs
stc
sub
repz
dec
add
lock
xchg
idivl
xchg
and
add
push
cwtl
add
fwait
cmp
push
subl
sbb
pop
jg
cmc
jecxz
test
xorl
roll
outsl
inc
inc
cmp
lods
inc
or
dec
shll
aas
inc
repnz
shll
aas
test
add
add
add
imul
add
xor
dec
xor
inc
add
add
imul
arpl
jne
push
jns
add
jne
push
add
xor
add
add
add
dec
jne
add
add
add
add
js
add
insl
arpl
inc
ss
add
jns
ja
bound
add
xor
jp
add
dec
add
jno
add
cmp
jp
dec
test
xor
inc
insl
jecxz
mov
xchg
mov
js
pop
pop
cli
dec
add
enter
int3
rolb
push
jl
sub
inc
outsb
test
cmp
cmp
ja
shr
add
sub
sub
sbb
mov
fildll
xchg
push
xor
lock
shlb
lahf
jg
dec
ss
mov
and
orl
add
inc
lcall
push
in
sbb
call
dec
mov
repz
add
shll
sbb
roll
add
xor
insl
xchg
add
push
xlat
jns
inc
and
add
hlt
imul
cwtl
xchg
inc
mov
lcall
lea
mov
cmp
mov
or
jl
ss
andb
dec
in
addl
jb
sbb
jmp
add
push
repnz
mov
leave
cmp
andl
mov
adc
lcall
lcall
and
lods
call
add
scas
cli
add
or
add
or
xchg
push
dec
or
clc
fwait
sahf
ss
repnz
out
ljmp
ror
clc
add
lahf
lods
pop
add
sub
mov
cld
dec
push
pop
mov
xchg
test
add
cmpsl
dec
movsl
xor
cs
add
jge
pop
mov
cmc
test
add
fistpll
jne
data16
das
insl
mov
sbb
iret
and
pop
fbld
push
addr16
cmp
insl
sbb
pop
push
dec
push
clc
das
mov
add
mov
out
xlat
dec
fists
out
cs
cmpl
mov
dec
sbb
fisubl
enter
jbe
push
add
add
loop
add
dec
xchg
addl
add
lea
lds
fimuls
add
cltd
mov
sbb
push
fsubr
inc
push
mov
lret
add
imul
in
push
call
out
mov
es
arpl
xor
sub
or
dec
push
dec
movsb
iret
add
xor
dec
scas
jge
mov
clc
push
pop
movb
push
fs
es
sbb
daa
push
cld
aam
pop
rcll
pop
lods
int3
push
daa
pop
adcl
mov
outsb
add
inc
cwtl
push
mov
mov
pop
call
add
in
sbb
je
sub
inc
nop
sub
or
jl
int3
sub
lock
pushf
inc
mov
nop
mov
sub
cmp
js
and
fdivrs
jl
dec
test
add
xor
push
sbb
mov
mov
pop
add
push
cmp
push
dec
mov
adc
movsb
ja
xorb
aas
cmp
xchg
add
lea
mov
mov
xchg
mov
das
add
nop
push
or
pop
call
sti
mov
stc
inc
mov
mov
adc
ret
xchg
add
xor
mov
stc
addl
dec
jae
fadds
in
cmpsb
lahf
xchg
mov
add
mov
pop
imul
push
inc
daa
or
aad
push
lea
pop
cmpb
daa
in
sbb
ja
lods
cmc
stos
add
inc
adc
pop
call
mov
lods
lock
insl
push
cld
mov
add
cmc
jmp
or
inc
dec
data16
push
adcl
into
test
in
or
movsb
jg
inc
incb
pop
mov
dec
adc
and
loopne
dec
or
loope
xchg
push
jmp
dec
mov
aad
sub
cmpb
mov
sbb
xchg
lock
imul
add
cmp
orb
dec
gs
xor
mov
add
add
lret
repnz
push
test
jl
adc
pop
jbe
iret
test
int3
jb
aas
mov
jmp
mov
fstpl
add
mov
dec
into
xchg
pop
lret
jne
add
push
lea
dec
popf
hlt
push
push
aas
aam
sarb
leave
sbb
outsb
push
enter
jne
ret
jb
lock
push
dec
push
push
imul
orb
push
inc
sbb
leave
cmp
clc
add
inc
cwtl
ds
cld
sub
jge
popf
add
and
and
out
and
movl
pop
dec
mov
add
or
and
imul
pop
jb
data16
jp
mov
sub
add
inc
repz
test
pop
stos
jae
mov
je
addr16
daa
xor
adc
add
mov
sbb
and
mov
add
stos
push
leave
mov
sahf
pop
in
push
push
cmp
inc
xchg
jecxz
add
xor
test
popf
lcall
add
push
push
call
adc
sti
adc
push
and
or
data16
mov
add
xchg
mov
mov
addr16
fisttps
inc
iret
fbld
leave
mov
movb
dec
mov
mov
mov
mov
jp
cmp
lds
stos
add
test
add
xchg
test
repnz
das
sub
push
jno
cmpsb
imul
test
push
mov
jle
cmp
dec
shlb
es
rolb
adc
cmpsl
hlt
sbb
std
jae
out
mov
enter
inc
lock
xchg
jbe
inc
dec
cmp
test
shrb
mov
out
jno
loop
xchg
xchg
and
add
push
in
jb
mov
subl
add
aas
popa
dec
dec
xor
jecxz
call
lret
fsts
rcrl
sub
dec
popf
mov
push
dec
in
lock
xor
cmp
dec
mov
repz
sub
add
enter
popf
js
add
cmpsl
sbb
into
add
sarl
icebp
mov
iret
mov
sub
rcrl
mov
adc
loope
lahf
ret
fisttpll
cmp
mov
test
inc
xchg
lds
cmp
cwtl
jne
cmp
fwait
push
mov
add
test
inc
push
add
cmp
iret
shrl
mov
dec
pop
shlb
xchg
hlt
sub
cmp
mov
push
add
add
insl
jno
enter
add
sbb
jmp
sbb
outsb
pop
xchg
lds
jg
sahf
lret
mov
es
iret
dec
in
push
xchg
push
iret
test
dec
sbb
push
dec
xor
out
gs
aaa
loope
loopne
adcl
test
push
xlat
ja
outsl
scas
add
mov
idivl
xchg
int3
shrb
add
xchg
in
add
lods
add
mov
add
sbb
push
addr16
add
in
lcall
pop
fdivs
aas
mov
mov
in
cli
fists
mov
add
xchg
xchg
nop
or
mov
and
mov
fdivr
aad
mov
mov
iret
pop
adc
aas
cmpb
imul
pop
dec
outsb
inc
stos
out
js
xor
sub
mov
dec
adc
mov
insb
aas
push
daa
out
repz
lea
dec
inc
sbb
mov
or
rolb
cli
add
adc
and
out
popf
sbb
stos
shlb
sbb
lahf
mov
jbe
je
add
mov
xchg
pop
jp
dec
add
push
sbb
bound
rorl
add
fisttpl
call
sub
aas
and
stc
nop
or
sbb
lea
xor
mov
mov
scas
add
imul
rcrl
insb
mov
imul
sahf
jo
add
movb
sbb
add
sbb
fimuls
xchg
or
mov
mov
popa
xchg
mull
stos
cmpsl
and
add
inc
mov
add
adc
add
xchg
or
call
push
mov
mov
std
cmp
cmp
enter
inc
add
sbb
ss
dec
mov
pop
adc
mov
mov
adc
repnz
mov
mov
mov
or
add
jp
mov
cmpsl
jg
pop
test
dec
cmovl
les
mov
loopne
xor
mov
add
into
xor
cmp
push
lret
xor
mov
mov
dec
push
incb
push
or
pop
adc
mov
cmp
out
add
mov
or
mov
sti
mov
add
andb
lock
push
inc
pop
add
or
in
and
inc
addb
cmp
add
int3
call
sbb
add
cmp
mov
imul
push
loope
mov
orl
push
imul
xchg
mov
lahf
movups
test
xor
xchg
clc
mov
add
xchg
daa
nop
add
es
push
cmp
imul
dec
dec
adc
push
add
add
imul
sub
out
jg
stc
adc
jo
and
lods
mov
fsts
clc
sbb
bound
jg
loop
mov
addb
hlt
scas
repz
mov
lcall
cmp
inc
fnstcw
out
dec
push
add
ljmp
add
push
adcb
jg
cli
sbb
cmpb
pop
stc
sub
jg
mov
dec
mov
mov
push
jg
out
cmpb
adc
cmpsb
sbb
sbb
int
mov
mov
jmp
add
jo
jnp
je
fsubrs
out
adc
aas
mov
pop
xor
imulb
push
repnz
ja
mov
inc
dec
and
adc
jmp
cmp
incb
adc
jb
mov
ficompl
inc
xor
mov
leave
add
daa
into
xchg
lret
jecxz
call
rolb
loopne
mov
inc
push
jae
jae
adc
mull
out
jne
push
aaa
sbb
or
cmpsl
das
mov
sub
pop
inc
add
pop
mov
ret
mov
clc
add
popa
add
add
xor
lret
daa
das
push
add
dec
rcr
add
aas
pop
mov
push
push
sbb
lods
xchg
or
ljmp
add
or
aam
enter
dec
xor
xor
repnz
inc
shll
jge
iret
repz
rcrb
aam
ror
sbb
mov
jle
jne
lcall
mov
shll
daa
mov
mov
add
xor
iret
mov
les
outsl
lea
cmp
cltd
dec
or
lret
mov
jle
insb
rolb
dec
mov
bound
imul
sub
mov
pop
repz
inc
mov
add
fwait
shr
sbb
scas
xchg
and
mov
push
pusha
enter
mov
xchg
in
les
adc
loop
cmpsl
pop
pop
jbe
out
add
fs
sbb
or
cmp
mov
rcrl
cltd
cmc
mov
lds
push
leave
cmp
xchg
bound
in
mov
sbb
js
ret
add
sarl
inc
mov
adc
push
adc
in
or
negl
clc
jne
lret
and
push
pop
enter
cmp
sub
jno
pop
xor
lds
rcrb
push
sbbb
loopne
cmp
clc
mov
mov
nop
pusha
lcall
enter
movsl
or
mov
fwait
sub
cmp
adc
or
lcall
sub
movsb
mov
cmp
add
mov
or
xor
sahf
movsl
fs
jno
dec
xchg
insb
inc
cmp
mov
cmp
popf
popf
jne
xchg
inc
lods
add
pop
lds
cmpsb
mov
push
test
sbb
dec
mov
cli
scas
add
jecxz
sarb
push
push
and
dec
and
mov
and
pop
lds
sub
add
and
fwait
mov
add
jnp
push
add
call
les
sbbl
das
ret
add
sbb
stc
add
xchg
push
leave
jnp
dec
notl
inc
mov
pop
fidivs
mov
or
iret
xchg
dec
or
addr16
repnz
mov
adc
pusha
daa
add
jb
test
mov
add
mov
sub
add
xor
or
cmpsl
add
lea
sub
int3
mov
jge
lret
jg
fwait
incb
bound
push
xchg
test
push
add
sub
orl
daa
mov
fcmove
push
adc
xor
pop
push
dec
pop
cmpsb
jecxz
jp
mov
inc
and
mov
push
mov
scas
push
cmp
into
mov
xor
cmp
push
pop
pop
pop
push
or
cmp
cli
testl
mov
sbb
mov
mov
sbb
push
xor
jge
mov
pop
aam
sbb
dec
inc
iret
data16
mov
addr16
pusha
mov
mov
aas
stc
push
and
mov
loope
add
mov
mov
stos
sub
jecxz
add
nop
dec
pop
jnp
std
add
loope
push
or
je
add
sub
lret
rorl
pop
enter
test
inc
fists
iret
inc
mov
xor
lret
add
cltd
xchg
add
rcll
jnp
jno
out
sub
call
iret
out
mov
cwtl
roll
sarb
sub
mov
hlt
call
push
insb
mov
push
out
stos
add
shlb
popf
mulb
add
push
jg
imul
mov
pop
or
mov
add
dec
fnsave
clc
add
sub
xchg
sbb
stos
add
pop
cmc
stos
mov
adc
adc
ret
cmp
mov
mov
and
fbstp
add
xor
push
and
lcall
cwtl
adcb
mov
xchg
cmp
jle
mov
push
mov
ds
ja
shrb
add
aas
xor
cmp
mov
sbb
cmp
daa
add
xchg
testb
sub
cmpsb
dec
xchg
add
mov
xor
daa
cmpsl
dec
push
mov
jmp
add
sbb
or
mov
inc
mov
dec
mov
sub
movb
add
add
and
hlt
mov
daa
add
mov
aas
cmpsb
dec
cwtl
push
dec
push
add
dec
jno
dec
es
mov
jl
push
enter
mov
mov
jbe
add
dec
sti
xchg
mov
aam
jo
aaa
xchg
jb
adc
out
cltd
jge
std
mov
push
jnp
imul
aaa
push
es
fsubr
outsl
in
aas
mov
jecxz
mov
jns
stc
add
cld
sbb
inc
jge
and
mov
cmp
add
repnz
lock
jg
push
test
or
outsl
and
inc
jns
pushl
add
add
and
sbb
push
addr16
mov
push
imul
mov
ds
jmp
pop
sbb
push
mov
mov
dec
add
mov
lods
popa
dec
sbbl
enter
lret
les
pushf
or
add
mov
rorl
jbe
add
clc
out
sub
dec
add
mov
push
pop
rclb
lahf
cld
call
subb
mov
xor
inc
or
push
paddb
shlb
mov
cmp
pusha
pop
add
push
jae
mov
mov
leave
jecxz
add
add
mov
lods
pop
fwait
sti
push
pop
add
aas
bound
aad
mov
cmp
hlt
das
addl
mov
inc
movsl
test
push
and
add
dec
cmp
add
push
sbb
push
bound
add
imul
mov
pop
icebp
fwait
adc
mov
stos
movsb
int
adc
add
pop
inc
and
fadds
mov
cmp
add
rcrl
incb
ljmp
jb
add
xchg
jle
add
mov
add
and
cmp
cmp
jle
sub
scas
xchg
mov
rcll
in
lahf
xchg
mov
push
mov
pop
ljmp
or
add
sbbb
add
fiaddl
call
pushf
xchg
adc
mov
les
pop
push
mov
add
lret
je
dec
add
dec
leave
cmp
ret
mov
mov
rcll
sbb
jmp
add
lea
or
pushf
mov
int
hlt
mov
jecxz
mov
jmp
jns
cmp
cmc
add
xor
adc
pop
add
mov
mov
sub
mov
call
outsb
leave
movl
mov
es
add
cwtl
xchg
push
test
mov
mov
repz
pop
daa
add
test
sbb
movsb
iret
add
inc
push
aas
push
dec
mov
ds
and
leave
dec
add
sbbb
jno
rorl
add
lret
rclb
sub
mov
call
push
mov
and
push
add
test
mov
fninit
push
insl
mov
sbbb
jno
rep
aad
in
cmp
mov
jmp
xchg
fbstp
ror
dec
and
push
cmovs
dec
inc
add
fs
insb
cmpsl
adcl
enter
pop
push
inc
jecxz
mov
aas
pop
lock
jno
xor
in
adc
iret
orl
cwtl
enter
int3
mov
pop
sub
add
cmp
dec
rcrb
push
add
and
mov
dec
mov
fstpl
into
push
xor
jno
xchg
fidivrs
sub
ds
jmp
adcl
add
cmpsl
cmp
mov
daa
movsb
push
and
cld
subl
jae
cmc
mov
rcrl
in
rolb
daa
mov
sub
add
and
add
lret
hlt
loope
push
test
cmp
jmp
aam
add
cmp
je
and
and
jmp
test
and
idivb
das
jbe
inc
jge
mov
mov
test
repz
dec
xchg
mov
inc
and
jmp
mov
jge
xchg
inc
adc
call
mov
sbbl
inc
shll
mov
mov
jmp
push
fstl
add
out
in
add
cmpsl
mov
dec
daa
cmp
popf
add
movsl
push
jmp
mov
in
das
and
fsubr
rolb
imul
or
add
mov
adc
mov
xor
into
add
enter
add
loopne
pop
repz
xor
movsb
ret
clc
inc
mov
rorl
mov
loope
sbb
mov
add
mov
roll
movsb
cwtl
leave
jl
mov
iret
add
lods
dec
pop
dec
ja
push
add
fwait
mov
daa
add
mov
test
jge
jne
imull
loopne
mov
ljmp
daa
ret
jne
js
insb
int
jle
push
repz
test
pop
adc
iret
xor
inc
iret
push
mov
mov
leave
addb
xchg
dec
shrl
in
je
fnstcw
add
pop
stos
in
repz
jmp
mov
pop
sbb
dec
fcoms
mov
add
aas
cmp
popl
inc
add
inc
and
push
lret
push
mov
sahf
push
sti
mov
and
cmpsl
xchg
adc
add
jle
add
mov
jecxz
pusha
lahf
pop
loope
sbb
cmc
xor
jmp
cmpsb
jne
or
mov
pop
es
xchg
jae
xor
pusha
repz
add
scas
add
ret
jle
pop
fisttpl
arpl
cmp
and
and
mov
std
testl
pop
jnp
in
jg
ret
mov
sub
mov
shll
aam
cmpsl
add
call
add
dec
clc
lds
add
xor
mov
test
inc
popf
push
imul
mov
lock
in
fildll
add
jl
mov
add
call
fisttpll
sti
in
add
cmp
xchg
imul
nop
add
aas
or
stos
adc
add
mov
add
xor
adc
pushf
add
lcall
mov
mov
es
fdivs
mov
add
jae
cmp
jnp
test
push
aas
inc
pop
dec
add
mov
lds
testl
mov
push
aaa
add
lahf
mov
mov
into
sub
jne
add
pop
sti
jbe
pop
es
push
add
repnz
iret
add
push
es
jl
xchg
add
nop
push
inc
mov
out
mov
cwtl
int
xor
js,pn
jbe
add
inc
mov
xchg
mov
test
dec
mov
add
pop
mov
lret
add
das
movsl
lcall
call
or
mov
lods
add
fwait
cld
mov
lock
adc
jbe
adc
pop
push
sub
inc
mov
or
mov
xchg
hlt
jbe
mov
lret
outsl
mov
dec
shrl
mov
xchg
push
fisttpl
push
call
mov
mov
sbb
add
inc
out
xchg
xor
iret
mov
and
fadds
hlt
add
cmp
mov
lock
dec
lods
dec
mov
in
jecxz
mov
jmp
mov
sbb
pop
jl
mov
daa
xchg
data16
sub
arpl
int
add
mov
sub
fcoml
cmp
mov
test
cmp
mov
add
rorb
testl
mov
cmpsl
outsb
pop
and
mov
xlat
add
out
dec
add
leave
lods
inc
xchg
jg
mov
repz
push
pushf
popf
inc
xchg
xor
fs
jl
inc
out
sub
test
pop
mov
jcxz
dec
sub
and
stos
add
inc
aad
add
dec
or
dec
shlb
mov
aam
xchg
inc
mov
test
sub
dec
cmp
or
sbb
fbld
enter
cmp
sahf
xchg
lret
in
pop
jb
adc
push
aam
jmp
pushl
test
mov
popf
add
mov
sub
call
nop
gs
jg
lahf
xchg
jmp
push
mov
adcl
aas
pop
push
pop
xchg
in
mov
dec
les
outsl
sar
cmp
sub
insb
aas
loope
xchg
xchg
pop
loope
mov
xor
sbb
test
fildll
loopne
ja
add
push
mov
mov
scas
inc
pop
fisttps
shll
add
xchg
push
pop
inc
mov
cld
mov
fsubrs
shl
out
jo
mov
dec
movsl
imul
xor
or
aaa
jecxz
xchg
lods
ja
add
mov
pop
xchg
aas
push
icebp
cmp
out
hlt
mov
arpl
aam
testb
test
leave
loope
jno
add
pusha
mov
jmp
xchg
mov
and
aam
add
loope
incl
pop
cltd
inc
xchg
pop
fwait
enter
fsubs
pop
int
jmp
mov
ss
lcall
sti
push
ret
mov
inc
jne
popf
aas
push
cld
cwtl
add
cli
push
mov
or
call
pop
clc
adc
add
xor
xchg
sub
cmp
or
inc
inc
add
xchg
mov
int3
xor
add
xchg
ss
add
nop
icebp
popa
lods
sahf
xchg
enter
aas
inc
inc
fs
jg
xchg
sub
xchg
sar
push
subl
jnp
aas
add
inc
sti
sbb
call
scas
mov
ja
cwtl
add
mov
xor
push
jp
lock
mov
ret
inc
dec
test
hlt
ret
into
loop
mov
out
add
push
jae
add
sub
lahf
push
sub
mov
enter
adc
fwait
xchg
les
flds
sub
xor
lods
cs
ds
ret
enter
das
or
sbb
xor
or
in
cld
movsb
push
outsl
sti
lods
test
das
and
push
orb
sub
cmp
mov
or
xchg
add
popa
lret
adc
push
js
add
mov
loope
push
push
add
movsb
int3
and
cmp
fwait
jae
out
fistps
add
pop
aas
cmc
rolb
push
or
cmp
xor
mov
iret
mov
adcl
movl
mov
notb
mov
xchg
dec
mov
enter
mov
sub
push
adc
push
pop
dec
sub
cli
leave
lock
mul
enter
int
mov
xor
add
dec
push
and
cmp
ds
nopl
sub
add
jp
sbb
xchg
cmp
pop
insl
rcrl
mov
mov
imul
add
dec
mov
ljmp
jge
negb
cmp
movsl
iret
sarb
mov
mov
jbe
inc
add
test
sub
add
ss
inc
icebp
jbe
xchg
cmp
push
pop
or
pop
inc
sbbb
dec
mov
xor
sub
mov
ds
push
test
push
xor
pop
outsb
inc
jno
mov
xor
xor
outsb
fcmovb
xchg
xor
mov
push
push
imul
mov
add
mov
jne
add
mov
xchg
sub
push
mov
mov
movsb
mov
mov
push
push
repz
rolb
fwait
jbe
mov
xchg
and
xor
add
xchg
call
push
mov
mov
mov
insb
mov
lcall
cmp
adc
push
inc
pop
movsb
add
lret
push
nop
mov
xor
outsb
lock
pop
cmp
xchg
test
sub
ss
insb
mov
fxam
xor
jp
add
ret
nop
loope
push
cmpl
mov
clc
jns
mov
adc
add
push
mov
js
lcall
push
call
push
out
sbb
jmp
xchg
add
pop
mov
xlat
inc
or
add
lea
and
add
push
add
add
or
or
mov
jmp
imul
enter
adc
dec
decl
sub
cmp
shlb
inc
mulb
mov
add
cs
notl
test
push
and
movl
sub
verr
dec
imul
cmp
cmp
add
push
rcrb
icebp
mov
or
xchg
sub
repz
add
sbb
sbb
dec
mov
and
jmp
pop
jmp
cli
sub
pop
xor
andl
inc
sub
call
sbb
dec
subl
adc
sarl
pop
adc
mov
int
or
rcrl
insb
jb
xor
jo
dec
xchg
je
cwtl
jge
test
push
clc
jl
push
pusha
rolb
mov
mov
movsb
mov
clc
pop
mov
and
mov
out
aam
lahf
mov
test
lods
sbb
call
pop
add
xchg
rorb
mov
les
xor
xor
gs
sti
rcrb
push
aam
clc
cld
and
bnd
enter
cmp
loopne
into
mov
or
add
inc
jp
or
add
movsl
lret
in
push
sbb
cltd
cmp
jg
test
rol
dec
dec
or
pop
jns
add
sub
test
fwait
adc
sub
arpl
or
pushw
add
dec
pop
dec
push
pusha
mov
jno
pop
mov
mov
xchg
push
add
outsb
pop
fwait
jmp
mov
and
filds
repnz
stc
aas
jno
push
mov
ljmp
fadd
add
int
mov
pop
dec
cmp
ret
adc
xor
push
xchg
add
jecxz
mov
repnz
xor
dec
lret
xchg
mov
mov
jl
sbb
repz
mov
out
adc
or
mov
pusha
aas
mov
inc
dec
sub
pop
movsb
mov
mov
lods
pop
xchg
mulb
mov
jg
test
dec
dec
pop
mov
jmp
add
cmp
cmp
vmwrite
std
add
jbe
dec
call
in
ja
scas
mov
pop
and
mov
mov
add
call
mov
in
into
xorl
cmp
add
jne
notb
adc
mov
dec
and
push
test
adc
ror
jg
js
push
loopne
add
int3
xchg
dec
jnp
xorb
or
js
add
or
pop
cmp
and
dec
mov
rcrb
das
sub
arpl
repz
sub
pushf
push
jns
dec
push
in
xchg
sub
adc
jo
mov
xchg
js
mov
pop
jnp
loope
call
push
mov
xchg
pop
test
jl
cli
add
cmp
les
or
push
mov
lret
jg
xchg
iret
cmpl
int3
push
add
lds
pop
adc
notb
mov
push
dec
lock
dec
nop
nop
add
test
decb
add
mov
enter
adc
mov
and
gs
int
dec
cwtl
and
cld
sbb
pop
ror
cld
push
add
sub
push
scas
xor
lcall
push
add
xchg
inc
sub
pop
mov
cmp
decl
mov
cmc
add
in
testl
ret
inc
lret
sti
cmp
xor
mov
sub
decb
or
push
popf
add
fnstsw
pop
adc
add
or
add
sub
add
mov
sbb
inc
outsb
das
movl
and
xchg
cmpsb
aad
mov
addl
lea
outsb
pop
add
pop
mov
rcll
pop
and
cwtl
jne
add
fistl
or
enter
pop
lahf
mov
jbe
test
push
mov
add
cmp
popa
sbb
jmp
dec
enter
add
push
cli
mov
add
cmp
mov
stc
lahf
fldl2t
mov
rclb
push
mov
jecxz
xchg
mov
jg
pop
xchg
add
arpl
mov
jo
sbb
clc
lret
jmp
repz
mov
adc
or
lahf
add
stos
test
push
testb
lret
sbb
and
or
sahf
xor
jg
mov
adc
push
cmpsl
push
sub
add
jae
pop
pop
jns
mov
neg
cld
inc
popf
sbb
xor
pop
or
sbb
rol
into
sub
insb
pop
repnz
movsb
or
lret
push
nop
shll
bound
xchg
mov
dec
aas
cmp
sbb
ret
mov
mov
ja
or
call
imul
rcrb
add
cmp
mov
jg
lret
push
bound
push
mov
mov
popf
push
lret
mov
jbe
test
cmp
cwtl
add
rcrl
mov
lahf
add
stc
xchg
cmpb
push
mov
jnp
jecxz
add
cmp
into
lea
push
repz
dec
mov
mov
sub
loop
dec
xor
pop
pop
xchg
push
pop
leave
add
enter
mov
sub
out
test
push
rcr
sub
fisttps
fwait
testl
ljmp
sbb
inc
aas
or
std
mov
lods
mov
add
push
mov
enter
jmp
add
jmp
inc
addb
shlb
inc
mov
iret
dec
popa
les
aam
test
add
sub
stc
inc
push
inc
add
outsb
lock
add
dec
std
push
adc
push
sub
add
pop
jns
mov
pusha
xor
lea
inc
or
cmp
int3
ss
push
adc
add
rclb
mov
xchg
emms
add
leave
mov
pop
add
dec
pop
fwait
mov
lods
pop
or
sub
mov
cmp
add
xor
nop
add
dec
or
out
iret
mov
aad
cmp
jae
ret
pop
jg
sub
add
jmp
test
inc
add
mov
mov
or
xchg
cmp
push
sbbb
mov
sarl
filds
xchg
sbb
lahf
jp
jmp
rep
adc
sbb
lock
repnz
xchg
aas
fwait
or
sbb
add
lods
stc
add
lahf
mov
xor
popf
xchg
dec
lds
mov
jmp
xchg
mov
adc
xlat
mov
adc
mov
pop
mov
pop
mov
subl
faddl
sbbl
lea
fisubs
sar
and
mov
jnp
in
push
lock
sbb
jp
push
mov
lcall
add
pusha
sbb
stc
mov
jns
mov
pop
mov
jge
jmp
mov
inc
punpckldq
ja
xor
add
pop
pop
lea
and
cwtl
sbb
adc
pop
maskmovq
testl
repz
jl,pt
je
mov
imul
dec
in
dec
popf
pop
add
sub
shr
mov
ret
and
jb
pusha
cmp
sub
idivb
jne
add
shlb
inc
les
mov
ds
dec
pop
and
mov
mov
sbb
or
dec
rcrb
pop
ret
sub
shll
test
outsl
lcall
ljmp
hlt
pop
ljmp
orl
pop
lea
cmp
cmp
dec
mov
dec
inc
sub
stc
das
mov
or
push
xchg
and
inc
add
adc
in
fwait
mov
add
jae
push
add
push
lahf
popf
push
pop
arpl
clc
add
or
sub
fbstp
rolb
jb
psllw
ja
sbb
shrl
push
shll
out
pop
push
cltd
inc
je
paddusw
jg
cwtl
mov
cmovnp
mov
dec
jl
test
mov
stc
inc
add
jae
shll
cltd
push
cmpps
mov
push
fisubl
loope
pop
or
bswap
sub
xor
dec
push
and
ret
in
cwtl
mov
fwait
stc
push
sub
lds
lahf
sbb
roll
jecxz
mov
fcoms
lret
enter
add
arpl
les
shl
xor
mov
cmpsl
adc
test
mov
aam
mov
lahf
test
or
std
and
aam
lock
idivb
pop
add
pushf
dec
sar
loopne
mov
mov
sarb
push
xchg
test
ds
stc
xor
dec
jnp
cmp
call
enter
lret
jecxz
mov
icebp
dec
stc
fwait
ret
add
jmp
popa
in
dec
jo
sub
jg
xlat
addl
cld
sti
outsl
iret
pushf
mov
enter
cmp
mov
loopne
cwtl
rolb
mov
leave
push
fyl2xp1
jle
aad
jne
cltd
fsubrs
loopne
jmp
cmp
fcomps
mov
add
sub
aad
sbb
and
mov
dec
jmp
enter
mov
xchg
mov
mov
shrb
imul
adc
mov
ja
roll
insl
lea
or
repnz
xor
loop
call
leave
push
sub
push
add
jmp
hlt
jns
sbb
lods
rorl
xchg
int3
cmc
jno
icebp
cli
mov
ljmp
loopne
sbb
cwtl
xchg
inc
xchg
jns
enter
add
pop
mov
cmp
cmc
add
stc
mov
enter
addr16
jns
pop
xor
xor
push
jmp
rcll
popf
daa
adc
cmp
jb
lahf
jno
xchg
cwtl
das
push
lods
mov
mov
xchg
sti
lahf
mov
lret
aas
ljmp
mov
in
add
test
loopne
aad
pop
pop
shr
add
xchg
xchg
mov
xchg
sbb
cmp
xor
scas
arpl
scas
push
test
push
repz
or
add
fwait
aam
int3
xchg
adc
push
add
push
cli
repz
imul
mov
xor
mov
or
test
add
adc
das
popl
clc
enter
in
xor
fnsave
xchg
adc
xchg
imul
daa
lahf
into
rol
shrb
jmp
test
clc
or
ret
int3
add
cwtl
in
rcrb
mov
sub
das
inc
mov
sub
js
repz
fildll
add
mov
clc
push
fcmovne
mov
movsb
jno
push
mov
roll
out
sbb
inc
or
jg
in
repnz
stc
out
clc
call
enter
cld
sbb
pop
stos
mov
push
movsb
rcrb
dec
popf
enter
decl
out
mov
add
inc
mov
in
incl
lcall
cmc
les
adcb
stos
mov
lcall
aam
or
mov
dec
mov
aas
int
sub
mov
mov
pop
add
or
add
sub
pop
add
jle
adc
add
clc
cmpsl
outsl
cli
lock
add
in
repnz
leave
arpl
jg
jnp
cmc
sbb
add
mov
mov
ret
ret
jo
das
cltd
test
add
std
inc
repnz
loop
xor
mov
andl
add
add
sahf
inc
xchg
pop
nop
outsb
mov
fistps
cwtl
mov
testl
loop
pop
movsl
lock
mov
cs
jnp
mov
jmp
faddl
lcall
adc
in
push
in
pop
xchg
push
add
xor
inc
iret
jmp
shll
fisttpll
mov
push
cmc
test
orl
push
stc
jge
add
lock
out
mov
inc
call
cmp
cld
jnp
xor
gs
jo
dec
pop
int
testl
add
aas
jmp
lret
insb
test
mov
addb
lock
testl
ret
movb
aas
pushf
fs
mov
pop
add
cltd
push
mov
and
ja
mov
fucomi
mov
mov
mov
adc
add
push
subl
xchg
cli
in
add
dec
aad
jmp
hlt
movsb
movl
push
and
dec
add
sbb
sbb
mov
int
mov
enter
xor
pop
mov
call
jmp
xor
enter
int
mov
leave
lock
shrb
das
add
push
scas
mov
in
mov
int
pop
popa
rclb
fwait
cwtl
lock
mov
mov
inc
mov
pop
xchg
cltd
inc
lock
repz
fidivrs
jg
ret
mov
adc
fstpt
sarb
rorl
sub
pusha
mov
enter
shlb
jecxz
roll
aam
fildll
sub
outsb
mov
rolb
cli
or
shrl
push
sbb
add
add
xor
xchg
add
hlt
mov
xor
icebp
pop
xchg
repz
cmp
data16
nop
push
add
add
dec
add
jo
add
add
popa
dec
bound
add
popa
je
add
add
add
add
add
add
push
add
push
add
add
jbe
push
add
add
add
pop
add
dec
gs
add
dec
add
jb
add
xor
add
inc
dec
add
add
inc
dec
bound
add
add
imul
cmp
jno
add
add
add
add
inc
pop
add
dec
and
inc
mov
mov
repnz
jbe
mov
aaa
pop
je
adc
sub
daa
rclb
jge
add
sub
adc
lds
mov
jmp
mov
or
mov
mov
mov
popf
pop
jnp
pop
cmp
xchg
adc
mov
dec
push
pusha
push
incl
enter
mov
js
mov
add
inc
orl
add
data16
push
popa
imul
push
jmp
fiadds
inc
jg
pushf
inc
in
leave
sbb
xor
xor
sub
sbb
incl
int3
fdivl
jl
rcrb
in
lret
je
mov
jge
movsb
sbb
add
rorl
out
mov
pop
js
aas
lret
imul
add
sbb
push
sbb
pop
aad
adc
push
sarl
das
jne
lods
or
pop
mov
cmc
cmp
mov
pop
sbbl
jae
sbbb
push
or
dec
adc
or
aam
dec
jb
insb
xorb
mov
ja
mov
dec
push
lcall
inc
flds
sbb
in
out
mov
mov
mov
ret
sbb
and
pusha
add
incb
scas
mov
ss
sar
sub
add
mov
mov
fisubl
add
imul
call
add
add
xchg
jmp
xchg
sbb
repz
rcrl
xorb
mov
ret
prefetchwt1
or
push
push
dec
dec
fwait
cmp
xor
cmp
leave
clc
push
pusha
add
and
inc
and
pop
pop
xchg
adc
loope
push
lcall
popl
lret
mov
jbe
aas
inc
das
hlt
daa
ds
cmpsl
dec
add
mov
dec
cltd
daa
xchg
call
mov
add
ss
jl
cmp
sub
sbb
adcb
fwait
xor
in
ja
cs
lret
aad
mov
insl
mov
push
int
xchg
mov
inc
imul
enter
aas
lods
or
jmp
push
ret
add
mul
roll
decb
add
pusha
stc
jns
add
add
sub
lcall
icebp
pop
or
dec
cli
sub
sti
pop
in
push
adc
je
or
pop
scas
push
mov
mov
addr16
jmp
push
incl
imul
stos
int
call
lcall
add
mov
ss
test
mov
mov
push
xor
in
mov
lods
push
adc
or
cs
push
mov
mov
out
cld
dec
rorl
daa
sub
movsl
mov
pop
dec
int
jno
rol
out
sub
mov
repz
out
cmp
pop
jae
incl
test
add
cmp
jne
lret
stc
mov
loop
pop
add
sbb
mov
adc
call
cmp
repz
mov
mov
dec
fistl
sub
pop
add
or
cmc
cmp
xchg
sbbb
sbb
xor
or
adc
mov
int
das
pop
add
add
push
jb
push
lea
ss
xchg
sub
movsw
fistpll
hlt
cltd
arpl
ss
xchg
add
pop
divb
aas
arpl
fcmovne
jae
add
enter
loope
cltd
add
aas
dec
add
inc
lds
icebp
add
xchg
mov
add
push
mov
xchg
scas
xchg
daa
imul
sub
bound
repz
pop
iret
lret
int
mov
adc
hlt
fs
sbb
rclb
bt
aaa
jno
inc
pop
arpl
jg
rorl
mov
into
sub
divl
in
xor
test
mov
push
aas
outsl
adc
dec
add
lahf
mov
test
and
lea
push
mov
rcr
push
aas
cmp
outsb
mov
pop
cltd
pop
add
inc
pop
xor
lock
imul
bound
sub
jae
add
cmp
imul
cmp
adc
or
aad
xor
fwait
incb
mov
pop
je
mov
dec
push
xchg
rcrb
xlat
aas
xchg
inc
jnp
int
testl
push
imul
int3
pushf
push
pop
sub
adc
mov
nop
xlat
sbb
paddq
add
lcall
fs
mov
test
fdivs
and
dec
mov
repz
mov
push
jg
xchg
imul
fcoms
ljmp
add
rcrl
dec
lods
stos
mov
inc
or
xor
sub
out
ror
adc
aas
cmpsl
dec
fldcw
add
imul
mov
add
lret
rcrl
mov
mov
pop
icebp
test
inc
sbb
xlat
not
and
dec
aad
or
xchg
add
mov
push
int
add
shr
mov
sbb
ss
mov
fidivl
lods
loope
fimuls
and
mov
stc
add
iret
arpl
adc
fisttpll
push
mov
add
jp
fimull
adc
add
int
jbe
inc
add
mov
or
hlt
add
mov
mov
jo
ret
or
scas
add
iret
mov
fisubrl
add
mov
cmovne
or
aas
and
add
fists
into
mov
mov
out
push
sub
or
xchg
cltd
stos
and
inc
cmp
roll
inc
mov
loopne
and
lret
lds
sbb
daa
pop
add
xchg
dec
adc
mov
pop
sub
lds
jecxz
call
rcll
daa
ret
stc
bound
xchg
xchg
add
sbb
xor
pop
add
xor
add
daa
fdivr
leave
mov
cltd
add
and
clc
mov
pop
rolb
add
call
iret
add
in
stc
dec
xchg
aas
rcrl
xchg
inc
std
int3
mov
mov
cmovb
outsl
push
cli
add
pushl
add
dec
into
rcrb
mov
fcomps
out
sub
add
sbb
mov
jo
les
mov
cmpsb
sub
loope
imul
add
rorl
adc
push
call
pop
inc
dec
or
xlat
data16
les
push
mov
lea
jg
push
pushw
and
cmp
aaa
sti
sub
mov
loope
mov
outsl
shl
cmc
mov
cmp
pop
push
repz
in
mov
cld
jge
add
cmc
inc
ja
mov
xor
xor
adc
mov
mov
inc
mov
sub
pop
mov
lret
add
ret
sub
mov
adc
imul
cmpl
add
adc
lret
mov
roll
xchg
mov
mov
xor
stos
rcrl
rcrb
sti
mov
decb
inc
cmc
and
ret
mov
mov
mov
jge
mov
push
cmp
nop
xchg
imul
add
js
lds
fidivrs
xchg
xor
push
mov
stc
pop
leave
in
mov
inc
lea
sbb
addr16
add
add
and
stos
inc
fildl
xchg
mov
mov
stc
ja
cmp
rolb
xchg
push
flds
jge
test
mov
mov
pop
inc
jns
cmpsb
dec
inc
daa
mov
movl
dec
jnp
nop
add
into
hlt
mov
mov
mov
cli
repnz
clc
mov
pop
pop
xor
lods
xchg
add
popl
sub
leave
xchg
mov
sub
fstl
arpl
push
mov
and
sbb
rol
repz
jnp
and
pop
inc
adc
push
mov
sti
stc
dec
outsl
or
push
cli
incb
mov
jno
mov
adc
and
std
pop
iret
shrl
data16
lret
pop
dec
outsl
jmp
rcr
dec
or
mov
shlb
mov
out
iret
add
ss
mov
dec
mov
sub
add
mov
mov
mov
adc
add
add
add
enter
dec
les
pop
cmp
mov
add
scas
nop
fs
loopne
pop
adc
mov
in
xchg
mov
dec
pop
add
adc
mov
mov
pushl
jp
xchg
mov
movl
sbb
int
dec
add
xor
jo
mov
rclb
into
je
inc
outsb
nop
mov
mov
jbe
add
or
mov
inc
mov
fwait
jo
mov
cmp
idivl
pop
mov
mov
sbb
cld
add
mov
sbb
or
dec
cmp
add
rcll
xchg
add
pop
or
daa
mov
std
into
adc
add
repz
out
loope
mov
outsl
fwait
mov
cmova
mov
add
dec
in
enter
add
mov
pop
aaa
ret
mov
jg
push
add
call
int
add
leave
aad
inc
pop
outsb
inc
add
xchg
or
dec
leave
daa
push
mov
out
push
cmpxchg
or
scas
xchg
jmp
aas
add
arpl
lret
roll
sbb
dec
jecxz
mov
xchg
jg
lea
inc
mov
add
mov
mov
std
add
push
paddusb
or
movupd
jge
mov
mov
push
adc
js
loop
daa
in
jecxz
xchg
notl
test
or
out
add
lea
test
jg
ret
push
add
testl
sbb
adc
add
dec
mov
lahf
add
or
jb
fld
jl
mov
lea
xchg
cld
cmpl
or
aad
lcall
adc
imul
mov
jnp
incb
mov
push
jg
lret
iret
rcrl
mov
in
cmp
add
addr16
add
gs
mov
jmp
xchg
xor
or
jp
aas
mov
div
into
adc
lcall
jb
xor
and
and
mov
mov
add
xchg
add
rcrl
out
ror
clc
andl
and
push
ja
pusha
mov
aas
cmp
lds
inc
lahf
adc
mov
bound
mov
add
cli
js
incb
mov
adc
add
bound
sti
call
cmp
jns,pn
mov
jmp
or
dec
pop
fdivl
lret
jnp
imul
adc
jge
mov
or
das
mov
enter
or
popf
fdivrl
push
test
sbb
clc
add
sub
push
cwtl
cld
inc
leave
add
shll
dec
mov
and
popa
popf
insl
push
adc
add
add
sbb
pop
pop
cmc
xor
inc
add
push
testl
add
lock
mov
in
std
push
sbb
mov
dec
mov
mov
cmc
cmp
mov
iret
dec
or
les
adcb
mov
or
cltd
mov
add
sub
pop
push
inc
mov
inc
pop
ret
out
loopne
stos
addr16
rolb
mov
add
add
inc
mov
mov
or
xchg
hlt
stc
imul
call
xor
push
dec
xor
add
sbb
add
mov
mov
or
xchg
int3
dec
mov
pop
orl
push
add
lods
ret
les
mov
daa
call
mov
dec
shll
incb
leave
adc
mov
mov
cmc
sbbl
cmp
addr16
push
add
xchg
sbb
dec
xor
push
push
fdivrs
mov
xchg
flds
stos
enter
fsubrl
mov
daa
movsl
add
add
addl
xor
inc
arpl
aam
or
in
test
add
jge
xor
lods
or
jl
jae
mov
mov
sub
jle
mov
movsl
lock
mov
lret
adc
repnz
sub
pop
psadbw
push
add
push
mov
lock
add
scas
or
hlt
sub
dec
cwtl
rorl
pushl
loop
icebp
sbb
cmp
rcl
fstps
hlt
loopne
mov
in
pop
out
iret
inc
adc
icebp
shlb
adc
inc
pop
stos
push
jl
add
inc
mov
dec
ffree
clc
mov
jg
dec
jmp
enter
xor
outsb
adc
movsl
insl
mov
out
lret
cmp
or
cmp
pop
jmp
lret
loopne
cltd
fdivrl
popa
rolb
add
cs
lret
int
movsb
cmpb
into
jmp
les
mov
hlt
es
add
stos
ss
cmp
add
sbb
decb
add
shrb
int
enter
cmp
fmull
push
ret
or
adc
mov
icebp
pop
pop
add
jnp
add
lock
push
imul
xchg
stos
dec
incb
shlb
rorl
add
repz
addb
xor
add
cwtl
xor
xchg
fadds
mov
mov
mov
and
out
into
out
push
cli
xorb
inc
mov
cmp
mov
add
sub
rol
ret
add
xchg
loopne
cmp
imul
jnp
and
lret
jg
call
std
add
nopl
sbb
loopne
cmc
add
nop
adc
xchg
dec
iret
mov
rorl
sti
inc
mov
test
dec
push
or
in
scas
jge
hlt
out
lcall
adc
sbb
adcl
sarl
fucomp
mov
add
dec
add
add
xchg
xchg
cmp
mov
int
push
jg
jmp
mov
pop
push
test
test
mov
cmpl
mov
idiv
arpl
lock
dec
mov
mov
adc
testb
cld
mov
dec
adc
cmp
int
add
das
sarb
jge
and
sub
mov
scas
cmp
ds
cs
cmp
sbb
mov
mov
cld
aas
ret
xlat
std
sub
adc
add
mov
data16
out
lock
ret
mov
in
dec
pop
jl
pop
idivl
enter
dec
lds
mov
add
xchg
out
add
mov
dec
mov
mov
scas
ja
inc
mov
push
idiv
mov
pop
dec
adc
xchg
adc
add
or
fmull
push
mov
pop
pop
stc
push
pop
add
or
test
mov
aad
xlat
int3
xchg
lods
add
xor
mov
add
pop
dec
xor
push
add
push
mov
cld
mov
pop
push
mov
xlat
sbb
inc
sbb
mov
xchg
push
test
sbb
rolb
xorb
push
xchg
roll
add
out
pop
sbb
jl
add
xchg
mov
fidivs
leave
inc
mov
mov
add
mov
dec
add
mov
add
andl
pop
mov
cli
or
inc
sub
add
mov
mov
add
jl
aas
rcll
outsb
or
cmovns
xchg
mov
test
fstpt
xor
call
cmp
dec
mov
jno
mov
push
stos
call
xorb
mov
ljmp
adc
neg
out
roll
in
orb
sub
add
push
lea
repnz
add
rcr
mov
bound
push
int
mov
sub
aas
inc
sub
mov
inc
aas
jne
pop
shl
mov
add
xchg
aaa
pop
ss
inc
adc
xchg
add
test
call
inc
jmp
dec
movb
jae
insb
mov
jb
cmp
pop
mov
jo
enter
mov
sub
cmp
ss
add
push
and
add
xchg
cld
or
sti
adc
mov
cmp
stc
add
shlb
cmpsl
mov
sub
leave
mov
adc
add
movsb
mov
sti
dec
jo
cmc
lcall
mov
mov
fimull
and
cmp
ret
push
cli
jmp
movsb
add
mov
pusha
rolb
or
mov
in
shl
add
or
push
push
inc
adc
lahf
mov
add
dec
lods
push
mov
or
aaa
xchg
subb
inc
lock
jnp
cld
repz
jnp
decl
gs
dec
and
or
mov
movsl
push
das
pushf
mov
add
scas
mov
inc
test
mov
or
in
sub
sbb
fbstp
mov
inc
or
pop
adc
ret
xchg
enter
jns
adc
jp
xor
fdivrs
ficompl
add
call
imul
lods
setb
mov
jbe
lock
add
mov
nop
aas
idivl
push
int
add
int
call
add
mov
inc
jge
lahf
mov
hlt
cmp
add
mov
add
lods
push
iret
mov
out
dec
ret
add
std
xchg
add
clc
sti
mov
mov
mov
jae
sub
popl
mov
ljmp
pop
push
test
add
add
sbbb
fnstcw
xchg
repnz
aaa
in
mov
push
je
jno
xor
les
sbb
xchg
add
jmp
aam
fiaddl
add
mov
jae
inc
cld
insl
and
stc
aad
dec
bswap
ja
scas
mov
mov
ds
add
das
adc
aaa
add
push
or
mov
lock
or
add
mov
sub
sbb
xchg
mov
xor
pop
aas
inc
sti
int3
xchg
adc
add
add
ret
mov
sbb
add
and
sahf
testb
outsl
je
mov
aas
jge
fstps
dec
in
fs
pop
faddl
and
sbb
imul
push
xor
mov
nop
push
sub
test
sbb
sub
add
sbb
jo
imul
xchg
fstl
jbe
mov
gs
popl
cwtl
aaa
movsb
add
adc
cmp
jbe
add
jp
push
mov
mov
enter
add
add
push
cmpsb
nop
add
mov
jnp
pop
cmpsl
jp
sub
idivl
add
rolb
push
add
or
cltd
inc
fisttpl
lods
cmc
add
lods
mov
xor
xor
push
add
mov
pop
fwait
testb
adc
pop
fstpt
rcl
mov
std
lods
mov
add
fnstcw
shrb
cmp
pop
push
push
push
push
enter
test
fsubrl
jne
aas
cmpl
push
aas
ja
or
mov
mov
cmp
add
andl
mov
and
arpl
sub
fwait
jle
js
test
jo
loope
mov
jb
lea
xchg
mov
rcrb
repz
xchg
add
stos
and
jmp
sbb
jne
push
mov
or
pop
hlt
mov
sarl
inc
cmp
add
jae
lret
xchg
mov
into
lea
jne
add
cmpsl
and
jecxz
sbb
jl
repnz
mov
inc
fisubs
inc
push
sub
gs
dec
push
add
sub
ss
or
sub
sbb
shrb
in
add
mov
add
std
xor
pop
xchg
outsb
stos
pop
push
test
fisttpl
int3
pop
pop
call
std
mov
jl
cmpb
in
int
adc
mov
dec
mov
cld
xchg
add
add
push
cmp
jle
push
pop
mov
stc
testl
jne
cmpsl
pop
add
out
repnz
pop
mov
cwtl
xchg
add
xchg
sbb
fwait
push
inc
sub
hlt
aas
pop
push
rclb
add
cltd
add
test
decl
xlat
xor
mov
testl
jmp
add
fdivp
push
pop
js
jne
bound
filds
push
cmpsl
test
dec
cmpsb
pusha
add
sbb
sbb
jne
add
and
out
add
mov
inc
add
sbb
addl
gs
push
sbb
add
mov
sub
jmp
test
cmp
push
add
out
inc
sarl
add
ss
test
int3
out
xchg
add
into
mov
jge
inc
or
fisttpl
push
std
add
jns
jb
and
add
mov
ss
pop
add
and
jb
lods
add
shl
out
inc
jnp
cld
add
iret
mov
out
mov
jne
lcall
je
sbb
sub
cmp
jl
aas
pusha
ret
and
rcll
inc
push
mov
insl
je
dec
add
and
add
xchg
adc
inc
aad
inc
jl
push
mov
mov
js
push
add
cmpsb
push
out
imul
sahf
into
push
mov
mov
xchg
mov
nop
std
fildll
into
mov
jmp
lods
pushl
push
jb
add
and
push
std
mov
movsl
jge
mov
pop
outsb
test
cmp
add
sti
ds
fsubl
movsb
fistpll
fsubs
fstps
or
inc
add
mull
and
pop
enter
mov
rorl
sub
lahf
mov
and
add
icebp
xchg
xor
jle
cmpsb
mov
mov
arpl
push
sub
mov
add
leave
dec
xchg
int3
roll
test
lret
fildl
fnsave
scas
and
cltd
inc
lahf
cmpsl
cld
push
movsb
mov
aad
in
outsl
lret
call
push
jmp
or
ret
inc
mov
mov
mov
inc
loope
or
jecxz
inc
xchg
xor
xchg
jbe
add
fwait
push
push
fiadds
pushf
add
in
add
jnp
hlt
jbe
add
lock
mov
outsl
sti
inc
repz
jle
xchg
bound
aam
pop
out
fcomip
add
add
cld
or
adc
dec
rcr
push
mov
dec
mov
add
lea
mov
gs
fwait
aaa
iret
add
mov
cmp
popa
orl
lea
xchg
jo
sti
sbb
mov
cmpsb
roll
lods
dec
cld
or
icebp
jge
push
push
int
sub
cld
sbb
pop
xchg
inc
mov
push
add
jg
pop
iret
outsb
icebp
xor
xor
mov
imul
scas
jne
cmp
mov
lods
add
rcll
xchg
test
xchg
inc
dec
gs
cmp
mov
xchg
adc
lock
dec
sbb
cmc
xchg
push
xchg
mov
iret
ljmp
mov
insl
xor
addr16
xchg
testb
cmp
pop
cwtl
mov
mov
addb
imul
fmuls
push
add
decb
lea
std
add
out
icebp
jae
mov
test
dec
movsl
mov
cmp
jbe
in
addl
fbld
cmp
test
mov
adc
xchg
jno
mov
pop
rolb
add
and
xlat
lea
add
in
mov
repz
clc
or
add
push
dec
pop
and
xchg
int3
add
xor
jge
push
rclb
jmp
xor
mov
inc
mov
cmp
mov
sbb
cmp
dec
ss
xchg
mov
mov
jne
mov
add
stos
inc
xchg
insl
adc
inc
loope
mov
fnstenv
lret
sbb
pop
push
mov
mov
shll
cld
insb
into
in
outsl
jbe
ret
imul
aas
nop
mov
clc
lret
call
and
imul
add
roll
enter
mov
mov
push
add
pop
fiadds
dec
or
mov
inc
add
decb
clc
rolb
cld
scas
jae
cmpsb
imul
jg
mov
mov
sbb
jo
daa
jno
push
push
hlt
pop
jae
push
mov
mov
cld
sub
movsl
mov
add
mov
andl
mov
call
lea
lock
push
sbb
pop
aaa
jecxz
mov
or
cs
xorb
mov
jg
addl
inc
adc
adcl
mov
add
pop
stos
sub
sbb
xchg
mov
test
add
pop
orb
in
push
pop
inc
mov
push
dec
mov
pop
mov
sub
sub
xchg
dec
inc
add
xor
cmp
ret
icebp
dec
push
jl
stc
enter
lret
cmp
fwait
or
pop
jmp
and
xchg
inc
dec
sbb
aaa
inc
xchg
call
int
enter
out
imull
lret
xchg
iret
and
sti
jbe
xchg
add
pushf
or
inc
add
outsl
mov
push
lock
adc
dec
cmp
add
mov
sub
lds
mov
testl
jae
ret
hlt
lods
mov
les
jnp
call
fstpl
push
imul
dec
or
dec
inc
inc
add
fldenv
loopne
js
pop
push
mov
sbb
mov
dec
dec
ret
add
mov
add
xchg
popa
inc
mov
jmp
enter
call
testb
out
xor
add
lock
int
mov
into
add
mov
test
dec
roll
mov
rolb
jp
xchg
mov
dec
mov
rcr
dec
sbbl
mov
xor
cmp
mov
pop
stos
insb
mov
cmc
mov
sbb
jg
iret
dec
in
pop
loope
mov
out
call
imulb
add
fldenv
pop
xorb
mov
mov
or
push
shlb
add
xor
inc
idivl
rolb
add
jb
add
call
sbbl
inc
adc
xor
sub
add
leave
mov
cmpb
or
add
shl
push
cmp
add
adc
jnp
mov
loop
ja
push
rcrb
das
aaa
pop
je
fiadds
rcrb
pop
ljmp
xor
or
mov
xor
cmc
lret
adc
add
mov
daa
cmp
push
clc
mov
arpl
sub
and
mov
add
es
xchg
movsl
add
mov
sar
ret
dec
mov
xor
addr16
mov
add
repnz
inc
add
adc
or
add
push
xchg
add
jno
dec
add
mov
mov
lds
mov
ret
lahf
xchg
add
dec
mov
mov
pop
mov
repz
loop
sub
add
cltd
adc
xor
add
mov
pop
pop
jg
add
or
dec
shrb
test
loope
mov
icebp
add
shlb
fistps
aaa
jle
arpl
out
pop
cmp
add
adc
add
xchg
fistpl
add
mov
pop
incb
test
xchg
psrlw
jne
jnp
push
inc
mov
ret
icebp
push
mov
xchg
subl
cmp
subb
push
les
dec
lods
add
je
lcall
xor
lahf
add
jmp
cltd
dec
add
rolb
add
mov
dec
adc
fnstcw
cmp
pop
push
xchg
dec
outsb
add
cmc
xor
dec
cmpsl
xorl
aas
jge
test
dec
push
fcoml
rclb
adc
jo
xchg
in
mov
add
scas
fwait
sub
sub
mov
jae
sub
add
fisttpll
mov
push
and
push
add
mov
push
add
xlat
add
adc
mov
testl
daa
sbbl
inc
cmpb
leave
mov
inc
scas
or
aaa
pop
addr16
fwait
call
rolb
lods
fcmovbe
cmp
out
mov
sub
fadds
orl
mov
roll
mov
mov
scas
push
pusha
outsl
mov
daa
adc
repz
inc
and
test
add
stos
lock
mov
cmpps
jne
pop
jo
gs
aaa
sbbl
lret
jns
cmp
xchg
mov
jecxz
repz
push
add
leave
push
cmp
push
mov
xchg
cld
push
aam
mov
inc
mov
cmpsl
xor
adc
cmp
xchg
mov
add
rorb
push
or
or
pop
sub
fsubrs
pop
push
data16
cltd
add
out
mov
add
add
mov
sub
ds
pop
mov
or
outsl
cltd
sub
dec
add
adc
dec
lahf
sub
insb
out
mov
cmp
xchg
jg
aad
cmp
jns
sbb
call
pushf
cld
pop
aaa
mov
pushf
adc
int
add
xor
mov
gs
and
and
push
loop
out
sbb
add
xor
ja
out
int
je
jo
push
outsb
dec
das
jecxz
insb
add
stc
mov
inc
xchg
roll
push
sub
pushf
sbb
push
sbb
push
in
lea
add
add
cmpsl
jp
aad
adc
out
ss
jle
ret
out
popf
scas
push
xchg
add
loopne
adc
and
roll
xchg
stc
in
subb
inc
lret
roll
mov
add
pop
cmp
inc
idivb
dec
sub
lock
test
and
stc
pop
cld
jae
add
cmp
mov
lret
add
fbstp
push
sub
call
sbb
rcll
sbb
pop
aas
aam
ljmp
lds
add
xor
into
push
dec
ficoms
mov
adc
jle
cmc
mov
pop
push
add
xchg
aas
popf
je
lret
inc
call
aad
jnp
pop
push
add
add
icebp
adc
cmp
or
xchg
imul
daa
scas
lds
and
sbb
mov
cmp
jo,pn
sub
add
or
ds
mov
sahf
cmp
add
fstl
and
inc
or
push
mov
std
lret
sub
popa
lcall
mov
jno
push
pop
rorl
sub
and
add
iret
aas
add
loopne
subl
mov
mov
dec
aad
jne
fucomip
pop
lock
add
xor
std
xchg
and
or
add
or
cwtl
and
in
lods
cmp
ss
cli
test
push
stos
push
pop
adc
call
push
jl
jg
adc
int3
das
fimuls
add
popf
dec
adc
push
sub
dec
mov
mov
hlt
mov
adcb
into
mov
repz
fistl
in
mov
add
sbb
jmp
add
das
loop
pop
add
mov
fsubl
inc
dec
and
add
ss
add
jbe
jp
inc
add
mov
xchg
call
sbb
subb
add
std
xchg
jno
mov
add
mov
or
movsl
or
fidivs
add
in
xchg
nop
jae
lea
mov
or
jmp
add
outsb
sub
xor
mul
mov
jg
add
mov
add
xchg
and
mov
sub
inc
mov
or
cmp
cmp
inc
dec
out
fxch
mov
in
jg
pop
push
mov
inc
cmp
addb
mov
push
sub
pop
adcb
dec
mov
and
add
inc
inc
cmp
mov
enter
dec
jae
aad
and
call
xchg
pop
mov
imul
cmp
add
jne
les
jbe
lcall
jle
das
cmp
imull
and
push
aaa
push
cmp
loop
out
lods
cmp
lods
mov
pop
sub
shl
cmp
mov
add
mov
mov
ret
jmp
jne
test
xor
add
cmp
dec
mov
mov
mov
out
lea
jg
sbb
jg
popf
jg
and
add
jbe
sbbl
sub
shl
adc
adc
les
jb
out
xor
lds
div
jp
sbb
cmp
inc
cmp
fistps
das
add
push
cld
inc
or
mov
mov
push
mov
fisttpll
cli
aas
fwait
aas
mov
push
push
xchg
fldt
pop
ret
mov
pop
xor
mov
pop
enter
or
pop
jle
push
mov
ret
and
out
pop
jae
add
pop
mov
int3
mov
jl
ror
xchg
or
inc
mov
and
add
shlb
xor
pop
popf
cmp
in
mov
push
add
add
add
inc
rcrl
sarb
xchg
fdivrl
aas
dec
sti
or
add
mov
cmpl
add
dec
fmull
xchg
pop
adc
mov
adc
mov
fnstcw
sub
dec
push
xor
rcll
insl
incb
push
dec
cli
iret
bound
out
dec
pop
jae
add
jnp
shrl
in
sub
mov
pop
cmp
mov
int3
adc
iret
std
ret
xor
add
fistl
pcmpeqw
adc
xor
sub
dec
mov
icebp
call
add
dec
and
je
and
pop
lods
inc
stos
enter
sbb
jae
add
dec
or
loopne
pusha
ret
jne
add
sub
pushf
les
jle
add
mov
testl
mov
xor
jbe
loope
ficompl
or
jmp
cmp
imulb
int3
loopne
rcl
add
lds
sti
test
add
push
dec
inc
stc
mov
adc
inc
outsl
add
add
sub
add
xor
xchg
mov
aas
mov
mov
xor
mov
bnd
xor
push
jg
mov
out
sub
jae
mov
hlt
subb
rorl
pop
cmp
test
pop
lea
or
add
and
mov
ljmp
add
fwait
in
mov
imul
and
cmpsl
xchg
aas
pusha
adc
xchg
rcrl
add
jle
outsl
addr16
bnd
cwtl
add
jns
aaa
scas
ret
ljmp
inc
dec
mov
pop
pop
or
cld
jne
mov
outsb
jo
addr16
jl
jl
lock
pusha
cmp
jno
push
lcall
jne
adc
add
mov
js
cmp
lcall
mov
fdivrl
test
push
inc
sti
sbb
add
adc
or
mov
dec
imul
jae
cmp
idiv
add
addr16
and
jecxz
call
jg
fldcw
push
push
pop
push
fnclex
pop
out
mov
popf
jb
inc
dec
xor
xchg
add
clc
subl
insb
mov
push
dec
mov
add
add
lods
mov
or
pop
fcompl
push
mov
or
dec
sub
jmp
and
add
les
in
cmpb
dec
lcall
adc
pusha
push
popf
push
pop
and
add
mov
fstl
mov
into
imull
pop
data16
daa
aas
push
lea
xorb
mov
sbb
add
nop
pop
fstp
dec
rorb
lcall
testl
sbb
add
call
jmp
and
lds
movsl
es
rcr
js
sbb
push
addr16
dec
cmp
or
pop
cmp
push
sbb
sub
inc
add
outsb
popf
sahf
lret
ss
cmp
mov
mov
xor
sbb
lahf
pushf
insb
mov
decl
push
call
fists
add
sbb
mov
pop
mov
lcall
and
mov
push
mov
sub
call
inc
stc
adc
sub
push
fwait
push
xchg
push
mov
jg
push
add
stos
xchg
mov
dec
incb
xchg
arpl
mov
iret
leave
ds
cld
mov
into
add
or
jne
gs
add
sbb
xor
xlat
imul
sti
pop
push
add
mov
cmp
or
movsl
cmp
push
xchg
sub
xor
insb
sbb
add
ror
in
addr16
add
dec
js
add
test
pop
movsl
pop
mov
dec
push
mov
test
push
sub
fld
mov
paddsw
rcll
mov
outsl
in
pop
loopne
repnz
int3
add
leave
adc
add
or
lock
or
jecxz
outsb
mov
addr16
das
push
aas
and
stc
sbb
dec
aas
and
scas
xor
mov
mov
arpl
lret
add
mov
inc
add
enter
fsubr
call
dec
imul
cmpsb
pop
pop
sti
or
inc
test
pop
aas
jle
fwait
lock
out
add
test
fistpl
jle
dec
pop
jl
mov
cmp
ss
pop
mov
add
lea
call
mov
stc
mov
cmpsl
ret
daa
jle
adc
out
jo
je
les
movsl
mov
pop
call
or
push
or
aas
adc
adc
ret
call
adc
mov
inc
sbb
andl
jb
lods
jbe
aas
nop
lret
imul
and
ret
pop
xchg
push
xor
fwait
jo
pop
test
adc
int3
sub
mov
fcmovnb
mov
data16
fnstcw
sub
or
add
mov
pop
and
jmp
stc
movsl
xor
push
pop
push
add
lods
bound
imul
sub
cmp
cmpsl
addr16
in
add
in
je
outsl
push
pusha
ja
call
add
mov
mov
mov
mov
xor
inc
add
jne
popa
cmpsb
push
xorb
mov
mov
shll
or
mov
sub
enter
int
dec
push
add
or
push
add
cmpl
fadds
jne
mov
outsl
into
int3
shlb
dec
add
mov
or
adc
mov
sub
mov
outsl
je
mov
and
lock
push
not
dec
mov
add
or
and
and
add
cmc
dec
sub
sahf
repz
sbb
arpl
sub
dec
fsts
add
inc
xchg
mov
mov
mov
sbb
mov
daa
jae
mov
dec
cmp
rorl
mov
mov
cmpl
lret
mov
push
add
test
aas
mov
dec
aas
inc
mov
mov
add
push
call
jl,pn
xchg
cmp
mov
adc
mov
les
cld
ret
xchg
xchg
ja
imul
mov
rcl
and
jg
add
dec
xor
add
add
add
add
add
add
bound
inc
add
add
add
add
xor
outsb
add
add
jne
xor
add
add
jae
push
jae
add
add
insl
inc
add
add
add
dec
add
xor
jns
add
insl
add
add
add
inc
dec
add
inc
dec
add
jb
jno
add
add
add
add
add
add
add
je
fs
test
add
testl
pop
push
adc
aaa
push
xchg
in
jb
mov
add
daa
xchg
mov
or
daa
add
dec
es
inc
sbb
dec
clc
loope
icebp
add
outsl
xor
psubsw
add
adc
fucom
iret
jg
mov
mov
btsl
loopne
pushf
mov
fildll
int3
add
push
mov
out
aas
insb
inc
scas
mov
sbb
adc
and
adc
ret
or
cmp
xor
cltd
add
and
aad
push
mov
pop
sub
inc
aas
push
cmp
ja
jmp
dec
add
push
shlb
mov
mov
add
repnz
cmp
mov
sbb
inc
add
xchg
sbb
sub
test
aas
mov
inc
std
push
bound
pop
inc
stc
jno
mov
cmpb
setne
xchg
mov
mov
adc
nop
movsl
aad
xor
shr
add
push
xor
mov
incl
mov
dec
fistl
fwait
push
cmp
sub
icebp
xchg
pop
inc
out
add
inc
push
or
push
bound
aaa
xorb
cwtl
push
cmp
repz
add
mov
test
into
mov
or
dec
mov
and
flds
xchg
or
cwtl
add
add
in
cmp
mov
jae
dec
lods
test
and
push
xchg
imul
cld
cmp
dec
or
cmp
ret
add
mov
xchg
andl
ds
sbb
mov
dec
mov
lret
sbb
pop
inc
push
ja
push
repz
jo
mov
mov
add
mov
sbb
rcll
mov
icebp
push
packsswb
pushf
mov
testl
xorb
xor
xor
lret
outsl
sbb
popf
insb
push
dec
add
inc
jne
cld
mov
push
cli
stos
sbb
cmp
imul
sarb
clc
inc
js
aaa
scas
movb
mov
mov
mov
fnstenv
pop
push
push
or
adc
repnz
mov
xchg
dec
pop
add
push
push
add
add
lahf
pop
xchg
cs
push
mov
push
daa
pusha
fwait
mov
mov
xchg
mov
andl
test
aaa
pusha
add
add
mov
or
test
fsts
add
cs
stos
xchg
inc
popa
add
or
xor
xchg
mov
cmc
fmull
sub
and
jno
mov
std
or
add
dec
jge
mov
push
cmp
and
jl
cli
iret
dec
cmp
shrb
outsl
push
cmp
fs
sub
push
sbb
es
sub
jle
scas
roll
or
dec
push
jo
dec
jle,pt
iret
fistl
xchg
add
dec
popf
or
sbb
sub
cwtl
sbb
ds
pop
adc
test
fs
popf
xor
dec
add
mov
pop
in
mov
sbb
lock
pop
push
add
mov
dec
rcrl
cmp
outsl
sub
mov
add
in
sti
push
and
cs
repz
je
cli
mov
inc
int
jne
cld
mov
xchg
sbb
sbb
into
int
inc
add
inc
fidivs
icebp
add
adc
adc
xchg
fwait
in
insb
add
mov
pusha
mov
sub
cli
sbb
loop
inc
xor
pop
cmp
ja
rcll
add
decl
lods
arpl
xchg
mov
push
pop
rorb
add
and
testl
mov
xchg
add
in
sub
mov
es
sub
pop
lcall
dec
add
jmp
adc
das
inc
add
dec
icebp
loope
mov
test
or
mov
insb
xchg
pushl
hlt
mov
repnz
mov
jo
push
call
xor
cmpb
add
adc
push
dec
enter
add
test
adc
icebp
sti
loope
dec
add
lock
out
orb
mov
shlb
sbb
rep
roll
js
sbb
or
push
adc
lods
push
es
cmp
sti
mov
in
aas
jmp
fs
ror
mul
add
and
ret
mov
push
jge
jmp
add
jl
jno
hlt
add
sbb
add
gs
jge
call
cmp
mov
adc
aaa
lods
aas
or
mov
dec
dec
pop
subl
add
in
mov
aam
repnz
mov
inc
cld
add
add
leave
sbb
pop
mov
test
dec
dec
or
jl
add
mov
daa
lds
adcl
shlb
add
adc
pop
in
lods
add
xor
cld
in
mov
dec
test
and
mov
pop
faddl
inc
push
popa
sbb
pop
pop
push
mov
call
cmp
push
mov
add
jg
rclb
jp
mov
xchg
int
sub
jbe
popf
stc
cmpsb
lret
add
shlb
jne
gs
aas
popa
xor
idivl
add
cmpsl
inc
mov
dec
adc
or
daa
add
insb
std
and
inc
rorl
cmpsl
pop
xchg
add
lcall
mov
jbe
mov
clc
add
dec
sbb
jb
scas
add
cmpl
mov
push
mov
orl
in
or
mov
mov
les
in
inc
imul
roll
xchg
adc
iret
jge
cmp
les
arpl
pop
mov
fs
jg
dec
addr16
mov
sbb
xlat
mov
fwait
aam
sbb
mov
push
adc
dec
insb
test
adc
jle
xor
push
jb
dec
dec
add
xchg
imul
cmp
push
lret
mov
jmp
add
dec
cmp
nop
add
iret
int3
dec
test
dec
cmp
xor
lret
or
or
cmpsl
mov
push
loope
shlb
pop
pop
ljmp
js
imul
adc
jg
push
sbb
mov
cmp
push
pop
mov
dec
xchg
lods
je
jge
loop
mov
inc
movsb
rclb
es
inc
push
testb
loopne
sarl
lea
add
push
dec
ret
or
daa
lock
arpl
mov
aam
mov
add
inc
mov
mov
std
sti
sbb
test
add
push
punpckhdq
jae
cmpsl
push
lock
lret
or
je
push
mov
aas
mov
mov
sub
xchg
adc
dec
push
sub
push
dec
mov
lret
sub
ret
dec
jo
mov
add
notb
mov
fsubr
das
sub
addl
sub
pop
addb
jle
pop
inc
pop
push
mov
fxch
movsl
add
or
jmp
cmp
dec
push
in
pusha
loope
idivb
pop
or
cltd
adc
sahf
xor
cmp
mov
pop
mov
rclb
dec
or
mov
adc
addr16
popa
shlb
shlb
push
sbb
add
out
mov
lcall
mov
movb
movsb
pushf
push
leave
xor
mov
xor
mov
and
add
push
dec
enter
push
stc
sahf
inc
xchg
mov
mov
and
or
addr16
push
add
bound
mov
jg
sti
int
sbb
and
sbb
adcb
lea
xor
jmp
or
lret
int
mov
xchg
push
cmp
jne
add
fistpll
dec
in
jns
inc
dec
test
inc
int
dec
inc
subl
lock
mov
pop
shll
fmuls
movsl
fstp
inc
adc
xchg
xor
jbe
push
inc
add
xchg
lahf
cli
int
pop
xchg
add
jnp
and
inc
cmp
jb
jge
xor
xor
icebp
test
sahf
add
push
pop
adc
jne
add
stc
rorl
jmp
push
xlat
sbb
test
xchg
mov
lds
lcall
mov
pusha
xchg
add
jg
xchg
mov
insl
dec
xchg
xor
sti
add
pop
adc
inc
xchg
push
push
aaa
inc
jmp
jae
mov
subl
xor
fwait
or
and
cltd
mov
scas
inc
int3
add
add
sub
cmp
data16
add
popa
jl
and
push
mov
sbb
inc
mov
and
xchg
lahf
cmp
lods
mov
idivl
adc
popf
add
lds
jo
mov
pop
shlb
sarb
lret
mov
sbb
cmp
fnstcw
xor
push
add
mov
pop
add
leave
cmp
cmp
cmc
mov
icebp
mov
add
pop
scas
pop
adc
mov
xor
add
mov
push
add
jbe
xor
push
pop
inc
lods
dec
xor
dec
sbb
lods
inc
iret
fdivs
or
das
scas
loope
stos
jle
dec
add
push
xor
aas
cmp
jg
inc
add
cmp
lock
paddusb
sti
je
lret
or
mov
push
or
pop
daa
mov
dec
mov
test
stc
push
sbb
sbb
xchg
pop
data16
bound
dec
arpl
inc
jmp
daa
pusha
hlt
adc
int
add
mov
lock
xorb
add
jae
dec
repnz
jl
clc
mov
jp
insl
or
daa
out
cmp
add
iret
fwait
lods
sub
int3
pop
sub
xor
jo
xchg
and
lods
mov
or
xlat
stos
repnz
jmp
sub
jecxz
int
aad
xchg
jg
cli
or
ret
sbb
lcall
xor
repnz
icebp
loope
add
dec
mov
mov
mov
sbb
inc
rcll
adc
jb
add
aas
popa
clc
mov
adc
add
and
xchg
mov
push
mov
pop
out
in
andb
adc
negl
mov
mov
aad
add
mov
add
push
xor
jmp
imul
sub
ret
push
dec
sub
mov
xchg
or
mov
mov
xrelease
mov
arpl
fisttps
xor
add
out
faddl
pop
push
pop
mov
jne
sub
test
pop
inc
pop
daa
clc
dec
add
jmp
cmp
xchg
mov
add
cmp
clc
or
or
das
ja
and
inc
mov
inc
addr16
test
cmp
lret
jnp
mov
or
push
jg
cmpb
repnz
dec
sbb
ror
mov
cmp
inc
cmp
xchg
jl
jns
mov
jle
sbb
push
xchg
rcrb
ficoms
jo
in
mov
adc
jg
test
add
adc
sbb
sti
loopne
inc
push
mov
pop
pop
add
and
scas
aam
mov
xchg
stc
push
dec
push
enter
mov
cli
push
daa
jg
mov
shll
ret
push
iret
push
dec
add
aad
xchg
pop
and
push
and
mov
xchg
xchg
jne
aas
push
les
jb
pop
notb
push
sub
loope
mov
hlt
rolb
fs
mov
sub
shll
imul
xchg
or
add
bound
cs
add
lock
imul
lods
push
cmpsl
leave
sub
js
out
aaa
in
adc
std
push
push
add
xlat
das
add
xchg
pop
nop
cmp
hlt
pop
aas
mov
negb
addr16
gs
ja
test
add
lods
mov
pop
mov
mulb
adc
xchg
cmp
out
das
stos
pop
test
mov
mov
sbb
xor
test
pusha
or
out
pop
mov
add
adc
pop
inc
scas
xchg
jmp
int
adc
sub
xor
sarl
mov
jne
jg
imul
inc
and
dec
dec
xor
sub
push
add
popa
pop
jg
outsb
stos
dec
jb
mov
fwait
xchg
andl
cmpsb
inc
test
mov
dec
addr16
hlt
pop
pop
je
mov
dec
lret
insl
jle
sub
dec
xchg
xchg
push
lea
lods
jns
mov
ja
popa
jo
test
jg
push
fnstenv
rclb
mov
dec
loopne
sarl
enter
adc
inc
mov
jno
or
or
ret
mov
or
adc
and
cli
gs
negb
cmpsb
dec
lods
js
mov
fwait
sub
mov
push
mov
xchg
hlt
cwtl
sbb
mov
push
fildll
and
xor
xchg
dec
loopne
roll
dec
jo
adc
outsl
add
in
ja
mov
mov
inc
adc
adc
inc
int3
mov
xchg
lds
fiadds
or
or
inc
mov
sbb
test
jg
ds
add
jle
lea
js
push
jns
call
nop
add
cmp
and
pop
mov
sub
sub
cwtl
inc
iret
push
add
jmp
mov
jge
aas
add
add
mov
call
jecxz
fisubl
dec
add
push
rcr
or
shlb
xlat
js
add
out
dec
pop
pop
roll
jno
jns
nop
es
mov
mov
rorb
lods
aad
xchg
push
adc
outsb
adc
cmp
add
mov
int
mov
aas
repz
inc
dec
stc
inc
xchg
mov
sarl
pop
or
add
dec
pop
jbe
in
test
movsb
mov
xchg
das
inc
xor
jnp
jecxz
jmp
adc
add
pushf
rorl
sub
mov
stos
push
jg
push
dec
mov
sbb
mov
leave
lcall
push
cltd
and
sbb
aas
leave
popa
dec
push
lahf
mov
aas
cmp
push
rclb
insl
adc
jge
lea
sub
lds
pop
sub
add
or
hlt
or
jecxz
jle
lret
popf
and
out
dec
dec
mov
fildll
pop
gs
mov
jns
imul
inc
xor
dec
and
and
add
push
fwait
or
push
pop
mov
inc
out
xor
shl
jge
popf
sbb
addr16
sbb
lahf
ret
mov
add
sub
add
imul
cmp
dec
and
fs
out
adc
or
adc
test
daa
je
inc
jg
lock
cmpxchg
int3
sbb
mov
mov
cmc
ret
lea
pushf
add
dec
pop
push
add
iret
or
dec
mov
jg
sub
je
cmpsl
jp
js
sub
xor
imul
sub
icebp
inc
mov
cmpsb
xchg
incl
mov
sbb
xor
mov
xchg
jecxz
cmp
leave
cmp
addr16
rorb
pop
xchg
es
xchg
pop
cmp
pop
jb
repnz
ret
and
out
sahf
addr16
add
cltd
mov
jg
xchg
push
sarb
lret
or
les
add
pop
adcb
cmp
scas
dec
sub
xchg
xchg
shrl
out
pusha
outsl
out
sti
mov
filds
pop
jg
addr16
add
jnp
lret
iret
dec
addr16
fcoml
cmp
cmp
mov
dec
lcall
add
or
add
push
lods
call
fnstcw
pop
jnp
sub
js
das
cmp
movl
adc
mov
pop
push
push
sbb
inc
adc
insl
add
nop
jmp
je
lock
or
mov
pushf
cld
and
lcall
mov
popa
icebp
add
and
dec
adc
sub
cmp
push
add
jo
pop
pop
inc
dec
out
add
xchg
aas
push
imul
jmp
inc
add
sub
rolb
movsl
or
push
push
push
int
movsb
loope
jge
loop
clc
je
mov
pop
daa
jg
and
add
roll
xchg
xchg
inc
call
xor
push
add
xor
adc
lret
add
mov
mov
push
dec
add
mov
test
leave
std
xchg
xor
notl
pop
mov
rcl
fadds
add
scas
sbb
add
call
cmc
xchg
or
and
mov
adc
imul
iret
rorb
jae
std
add
xchg
dec
popf
inc
out
aam
mov
mov
add
or
dec
fistl
push
fidivrs
mov
mov
pop
iret
jmp
xchg
sbb
incb
insb
test
movaps
cmp
ds
out
sti
mov
cltd
cmc
push
jnp
add
sarb
enter
add
popa
mov
inc
leave
jo
es
mov
xor
or
jg
orl
jge
outsl
push
add
lods
sub
lods
mov
jns
push
pop
jp
and
test
insb
sbbl
add
mov
aad
add
or
movsl
clc
jns
mov
pop
inc
or
into
xlat
test
cld
xor
adc
lret
xchg
orl
push
mov
push
lds
int
jo
shl
add
or
xor
push
adcl
lock
add
or
add
dec
ljmp
ss
push
push
cld
pop
mov
cmpb
insb
mov
add
arpl
xor
push
sbb
cli
xlat
or
pop
insb
xor
add
das
push
jns
jno
mov
test
fstl
add
dec
sub
adc
movsl
and
push
xchg
dec
dec
arpl
ds
pop
ret
xor
add
mov
fnstsw
call
mov
add
icebp
mov
sarl
push
imul
pop
call
divb
pop
xor
loope
mov
and
pop
cmp
push
add
subb
add
ss
xchg
mov
mov
push
pop
iret
mov
aaa
mov
cmp
das
xor
fisttpll
xchg
ljmp
ja
lock
outsl
scas
sub
push
cmp
add
dec
inc
cltd
lcall
add
inc
cmc
mov
or
jmp
jno
add
enter
icebp
mov
jne
dec
iret
mov
cmp
aas
jl
ss
lea
mov
sbb
decl
into
push
add
lret
and
imul
test
ret
add
lea
ret
in
add
das
cltd
clc
jge
cmp
add
std
inc
ficoml
cmp
ret
pop
dec
dec
das
lret
sub
push
push
ja
cmp
js
std
call
add
mov
inc
imul
or
and
out
fnstenv
push
mov
jge
js
push
push
add
mov
bound
push
gs
repz
jl
dec
adc
and
int
add
sahf
fldenv
lret
pop
iret
inc
push
rorl
aam
pusha
mov
jle
lahf
xchg
cmp
add
adc
cmp
ja
int3
mov
decb
mov
dec
add
mov
mov
sbb
int
or
jp
pop
jae
in
sub
pop
sar
inc
fisttpl
mov
dec
aaa
daa
fsubp
sbb
cwtl
add
fs
scas
mov
dec
loopne
sbb
ficoms
pusha
jge
movsb
mov
clc
mov
jp
test
pop
pop
or
in
mov
lahf
es
sti
movsb
add
bound
add
xor
imul
loop
aaa
popa
mov
mov
push
rcrl
std
jmp
pop
testl
mov
push
test
sbb
push
pusha
ret
addr16
add
or
imul
roll
add
pop
sbb
add
arpl
mov
icebp
mov
pop
add
into
dec
fstps
mov
sbb
add
rorb
pop
jecxz
dec
sbb
leave
je
iret
and
inc
add
push
jae
and
popf
dec
pop
pop
add
lret
mov
pop
int
sbbb
cmp
jp
cmp
imul
js
inc
sbb
mov
cs
add
rclb
inc
mov
lcall
ltr
iret
adc
mov
ret
arpl
cmp
xchg
jo
sarl
inc
nop
aad
mov
ret
out
xor
add
std
mov
sub
jae
mov
adc
mov
jns
xor
int
dec
jge
sbb
jmp
pop
inc
lods
pusha
shrl
xor
add
push
add
out
dec
adc
movl
cmp
cmp
push
jmp
jns
cli
addr16
lret
adc
sbb
jno
mov
popa
jae
jg
rcrl
add
add
cmp
fiaddl
dec
jne
repz
pop
cmp
inc
test
ds
fwait
pop
jmp
iret
xchg
add
outsb
shlb
and
shl
call
xchg
and
dec
out
add
sub
in
mov
out
jmp
add
aad
mov
push
add
or
call
xor
add
mov
mov
add
sbb
push
fsubl
add
insl
lods
scas
mov
shrl
push
iret
nop
add
sub
adc
xchg
mov
dec
popa
lret
or
mov
mov
mov
jae
js
mov
in
mov
push
cmpsb
lock
outsb
xor
test
iret
mov
dec
add
imul
test
xchg
adc
mov
pop
mov
add
repz
mov
mov
gs
pop
lahf
push
jae
cmp
inc
sub
scas
mov
popa
enter
mov
or
scas
inc
jnp
addb
xor
loope
dec
pop
dec
push
add
pushf
inc
mov
enter
fwait
or
insl
movsl
insb
mov
push
mov
xlat
mov
fcoml
inc
xchg
or
mov
fistpl
add
mov
mov
jmp
sbb
test
xor
es
cs
and
push
out
lea
imul
xchg
negl
imul
cltd
add
leave
test
popa
lock
xor
ja
int3
das
jno
lcall
popl
and
inc
jne
rcll
pop
sbb
mov
jp,pn
aas
xorl
jb
xorb
jmp
xchg
in
mov
int
mov
fstpt
inc
or
dec
outsb
imul
add
ret
jno
xor
xor
test
das
sti
mov
mov
pop
mov
movsb
mov
jb
cmp
repz
mov
xcrypt-ecb
push
mov
jbe
jno
nop
pop
lahf
and
cltd
inc
imul
mov
out
sub
pop
cmp
fwait
add
jno
mov
add
inc
pop
adc
sub
sub
mov
in
dec
xor
or
jae
fists
push
push
adc
pop
add
js
rolb
fstpl
jle
add
test
or
adc
add
out
outsb
dec
add
mov
jmp
mov
adc
push
subb
add
inc
shl
cmpsl
lret
add
je
push
call
repnz
cmpsb
inc
xlat
and
mov
je
insb
sahf
adc
test
pop
fwait
mov
loope
dec
add
xor
dec
sbb
arpl
dec
jl
lret
add
fsubrp
push
incb
sbb
inc
rol
ja
stc
sbb
jg
mov
add
sarb
add
xchg
arpl
adc
call
pop
and
sbb
out
pop
add
insb
dec
pop
daa
add
inc
sbb
pop
ret
xchg
ljmp
mov
outsl
and
mov
jmp
fildl
xor
push
mov
mov
add
jne
jmp
pop
out
xchg
add
ljmp
and
loope
xor
add
es
jmp
mov
mov
and
iret
sub
mov
enter
dec
or
cmp
mov
je
inc
pop
cmp
stos
ds
cmp
push
pop
lods
jcxz
test
std
inc
sbb
xor
mov
push
push
mov
ret
mov
jmp
push
cmp
push
sti
mov
push
sbb
dec
xchg
stos
cwtl
jg
fs
cmp
mov
imul
daa
dec
or
mov
cmp
pop
das
dec
add
pushf
shl
push
ret
pop
and
cld
fbld
dec
add
cmp
pop
iret
mov
sub
and
repz
subl
jl
sub
xor
add
pop
stc
cmp
sbb
int
movsl
mov
pop
je
bound
mov
push
adc
call
xchg
rolb
test
pop
rorb
push
dec
or
rcrl
lret
push
pop
xchg
out
adc
dec
data16
jg
cmp
in
push
xchg
inc
sbb
sub
mov
cld
and
pop
mov
mov
or
mov
sti
stos
adc
aad
inc
cli
jmp
xlat
jl
leave
xor
and
push
push
mov
sahf
push
cmp
jnp
push
adc
ror
jo
aad
sbb
jns
call
sub
jo
mov
lods
js
mov
inc
xchg
push
outsb
dec
iret
jae
inc
enter
inc
clc
lds
sahf
in
xchg
mov
and
mov
movb
cmp
mov
mov
inc
and
jl
lock
or
lds
mov
mov
jae
jne
cld
incb
sbb
adc
mov
cmp
push
pushf
jecxz
xor
mov
mov
sub
dec
call
sbbl
outsl
scas
call
fcom
mov
cli
xchg
outsl
leave
pop
mov
jbe
mov
sub
dec
mov
cwtl
add
mov
adcb
add
adc
dec
mov
sbb
sbb
and
lcall
cwtl
mov
inc
loopne
push
dec
outsb
nop
stc
inc
outsl
pop
add
fmull
rcr
mov
fnstsw
xor
hlt
and
mov
sub
sbb
shr
inc
lcall
xlat
iret
fcmovb
push
mov
sub
mov
push
fisubrl
call
mov
lods
sub
add
cmp
sub
jge
add
lar
je
cmp
xchg
mov
and
in
cltd
jge
imul
insl
xor
sub
cmpsl
stc
mov
push
lods
cld
and
lret
call
jo
mov
in
mov
inc
mov
mov
repnz
sbb
add
sub
adc
pop
jl
mov
orb
and
cmpsl
pop
adc
add
outsl
push
mov
pop
sbb
loopne
ret
movsb
xchg
mov
mov
enter
sub
and
fcoms
mov
into
lods
movsl
cwtl
inc
pop
mov
dec
movsl
and
cmp
xor
cmp
sub
rolb
fcmove
mov
adc
sti
mov
pop
cmp
xor
and
or
mov
mov
push
dec
ret
pop
fwait
xchg
adc
mov
ljmp
adc
jno
cltd
cld
xchg
push
addr16
loop
sbb
or
mov
adc
add
fbstp
popf
lods
push
popa
dec
mov
js
insb
add
stc
sbbb
aaa
rcl
lods
and
mov
addr16
dec
lret
and
mov
dec
mov
es
les
pop
xlat
and
lahf
popf
add
pop
pop
vmovhps
pop
pop
mov
int
inc
xchg
inc
jae
hlt
in
ret
xor
mov
sub
dec
cmpsb
push
adcb
inc
les
xor
or
inc
and
inc
mov
scas
bound
sahf
adc
std
xor
out
sbb
cmp
jl
jno
shl
je
add
add
add
data16
int3
loopne
adc
dec
cmp
sub
mov
sbb
btr
xorb
sbb
inc
fwait
jecxz
cmp
subl
pop
repnz
cli
and
xor
fucom
jg
sbb
mov
int3
hlt
jl
fs
dec
clc
add
push
sti
push
lahf
adc
jns
push
add
lods
xor
popa
enter
jae
xchg
inc
mov
cmp
jecxz
sarl
add
push
mov
mov
jne
add
rorl
jl
xchg
movsl
xorl
dec
jns
push
jecxz
xor
cmp
daa
iret
leave
mov
add
cmp
movsl
mov
in
lods
rclb
mov
lods
and
lods
mov
push
mov
in
mov
push
mov
inc
push
pop
dec
or
xor
cli
lahf
adcl
mov
sbb
pop
inc
xchg
mov
enter
lea
mov
scas
mov
testl
bound
xchg
shl
jo
mov
mov
ret
adc
or
cmp
addr16
add
cmpsl
dec
or
ror
loopne
jns
out
or
dec
lods
inc
pop
and
in
pusha
add
mov
leave
call
inc
pop
lcall
mov
enter
and
lahf
inc
daa
sub
outsb
push
dec
inc
jle
test
adc
scas
cmp
das
lahf
jle
xlat
adc
push
pop
pop
lods
cmp
mov
jmp
clc
inc
cmpsb
add
cmpl
xorb
dec
xchg
mov
into
sub
ljmp
mov
xchg
sub
mov
imul
dec
dec
aas
adc
push
popf
xor
sub
mov
pop
xchg
add
inc
ss
mov
pop
mov
sub
lea
xor
aas
cs
pop
add
pop
pop
ret
mov
jns
rclb
out
or
or
lret
push
or
lea
lods
fprem
ds
and
mov
jnp
call
cmp
clc
rol
dec
orb
cmp
jle
pop
dec
jg
add
sbb
outsl
stos
sysexit
test
scas
int
xchg
and
jb
repnz
lahf
bsr
adc
pop
jo
out
rorl
xchg
out
xchg
aas
or
jmp
aam
lret
mov
xchg
add
or
mov
les
mov
inc
jo
inc
lret
mov
dec
and
inc
sub
xchg
cmp
pop
mov
fwait
mov
xor
mov
test
sar
popa
movsl
add
xor
into
stos
and
and
add
add
mov
mov
int
ja
pop
subb
add
daa
repz
mov
and
push
imul
push
lds
lcall
mov
in
jmp
outsl
xchg
icebp
add
js,pn
add
dec
negl
jo
je
mov
js
ret
fisttps
or
dec
add
sub
sbb
repz
mov
test
fs
imul
and
sbb
dec
mov
inc
adc
cmp
dec
and
lods
xor
leave
es
fwait
xor
lahf
es
mov
jno
pusha
mov
sub
cmp
add
xchg
aas
mov
sahf
push
call
dec
sbb
mov
mov
dec
add
add
adc
sbb
sbb
icebp
and
mov
lock
fldt
cs
mov
push
daa
push
mov
cltd
test
je
xchg
xor
inc
jecxz
std
jo
jne
mov
jmp
aaa
push
insb
add
aam
divl
iret
mov
ja
loopne
add
les
testb
movsb
dec
clc
push
ficompl
add
sub
mov
hlt
cmp
pop
cwtl
hlt
pop
add
imul
mov
add
push
mov
sbb
push
add
inc
scas
mov
push
push
mov
xor
pop
jnp
mov
testb
sub
add
sbb
fists
dec
and
inc
fiadds
int
call
mov
aam
dec
shrb
mov
xchg
push
cmovp
fstp
hlt
pop
mov
add
repz
dec
outsl
jmp
sbb
pop
pushf
sbb
sub
bound
cwtl
movsb
xchg
sub
mov
scas
add
hlt
es
add
sub
cmp
movsb
xchg
add
cmp
xor
push
and
add
arpl
add
adc
mov
enter
sub
ss
mov
cltd
add
int
inc
or
push
adc
fistl
fwait
jns
roll
or
pop
cli
std
mov
push
xor
and
mov
xchg
repz
lea
or
repz
sub
xor
or
into
fsubl
test
xor
cli
addr16
add
stc
divb
add
xchg
shrl
mov
std
mov
add
lahf
adc
movsb
jmp
add
std
ret
mov
leave
dec
sub
insl
dec
pop
xor
jg
xor
or
roll
fcompl
push
dec
rolb
int
aad
pop
sub
mov
aas
fimull
sbb
idivl
lods
lods
sbb
mov
ret
pop
adc
mov
stc
pop
stos
pushl
movb
fwait
subl
adc
adc
int3
xchg
test
xchg
jl
jmp
jge
xchg
push
push
or
add
ret
xchg
mov
jge
jg
jo
add
and
mov
hlt
idivl
push
leave
push
movsb
rolb
fiaddl
push
xlat
std
dec
xor
mov
mov
add
cmp
mov
sti
push
xor
es
rol
xchg
add
dec
dec
push
sbb
pop
inc
in
ja
leave
mov
mov
sub
dec
mull
lss
cmpsl
sub
xchg
add
add
pop
adc
mov
xchg
push
gs
or
cmpsl
notl
add
fistl
add
mov
adc
mov
lret
aad
mov
cmpsb
out
js
jo
shlb
push
movsb
cld
inc
mov
dec
xchg
lds
mov
fwait
lods
cmp
mov
sub
pop
xlat
cmp
hlt
add
mov
adc
mov
xor
test
out
pop
add
lret
mov
pop
fisubrl
mov
std
mov
dec
roll
xor
add
mov
imul
xor
cmp
pop
ficoml
cmp
mov
push
fistps
add
or
push
sbb
outsl
and
cwtl
hlt
mov
cli
add
ja
icebp
xchg
ret
test
fbstp
pop
add
lea
js
out
nop
arpl
add
xchg
push
add
pop
pushf
push
cmp
adc
push
push
cmc
dec
add
xor
repz
dec
les
mov
xor
ljmp
push
pop
loopne
add
inc
push
mov
in
push
repz
lods
mov
push
or
pushf
sub
test
imul
js
add
cmp
inc
les
push
xchg
push
push
mov
sub
inc
and
lcall
mov
push
fwait
out
into
mov
pop
pop
pop
dec
insb
add
leave
cmp
test
sbb
pop
stc
push
mov
cmp
stos
enter
insb
xchg
pop
addb
aas
cmpsl
movsl
mov
lret
push
mov
pop
in
sub
lret
xchg
jl
mov
fidivl
call
nop
dec
jb
push
pop
dec
jl
pop
pop
xor
add
xor
pop
cmp
int
lcall
jmp
mov
lret
das
jge
jae
jg
mov
add
imul
stos
sarb
and
add
sub
cs
add
mov
add
popf
cmpsb
into
pushf
add
sbb
sub
mov
ljmp
lret
inc
push
call
in
aad
rolb
push
daa
stc
test
nop
fdivrl
jmp
push
inc
ret
pop
or
xor
nop
sub
cltd
mov
cmp
hlt
int
dec
or
add
jne
mov
add
sub
call
add
rorb
hlt
shll
mov
mov
call
push
dec
orb
cmp
mov
add
dec
ret
cmp
ret
leave
mov
sbb
jb
lea
cmp
adc
lret
inc
std
add
push
jmp
xor
push
cltd
aas
cmp
sbb
xchg
incl
mov
adc
mov
jbe
jmp
inc
jmp
add
add
pop
int
add
cmp
repz
inc
jecxz
mov
pop
or
fcomip
inc
jbe
mov
xchg
jg
jb
ja
cmp
push
sbb
xchg
cmp
cmpsl
xor
cld
dec
xor
aas
add
ljmp
std
sbb
dec
jne
testl
jg
lret
imul
loope
push
xor
dec
int3
mov
lahf
sbb
neg
pop
shll
fsubrl
call
nop
add
sbb
daa
fwait
add
pop
jno
jl
cmp
rorb
fistl
out
or
sub
js
dec
dec
pop
xor
shr
sub
add
not
and
out
add
leave
add
hlt
mov
std
das
pop
sub
pusha
ret
pop
inc
imul
in
mov
add
mov
add
scas
add
shll
mov
ficomps
sar
stos
mov
test
push
pop
jb
cmp
mov
push
inc
mov
mov
cmp
cmp
jp,pt
and
adc
and
jno
mov
push
dec
add
xor
dec
iret
push
mov
xchg
nop
inc
inc
push
mov
imull
insb
jo
pop
insl
lods
sub
fstpt
jbe
sub
mov
call
outsb
or
inc
pop
xchg
dec
das
mov
imul
pop
mov
imul
ret
loopne
mov
jmp
adc
rclb
jne
add
mov
bound
cmp
movsb
mov
xor
jmp
or
dec
cs
and
add
xchg
jo
jne
lcall
aad
sub
sub
inc
out
mov
lret
adc
aaa
jp
mov
imul
push
dec
inc
push
xchg
stos
inc
rcll
rclb
add
insb
mov
clc
mov
aas
call
orl
lods
dec
and
sbb
add
jg
push
and
fwait
shll
add
stos
mov
ds
xor
hlt
jne
and
sbb
mov
ror
mov
add
in
insb
dec
inc
outsb
adc
frstor
ds
std
popw
and
add
adc
push
add
fiadds
lds
test
sub
mov
daa
test
rolb
mov
fisttpll
scas
leave
adc
sbb
lahf
lret
ljmp
fdivrp
sbb
add
shl
push
inc
adc
jns
gs
xchg
pop
cmp
cmc
mov
testb
dec
mov
jb
dec
push
sub
pop
mov
lret
popf
sbb
push
mov
mov
fiaddl
imul
cli
das
or
add
add
loope
add
aad
test
loopne
xor
decb
add
push
jo
or
mov
paddd
add
lods
stos
push
popf
or
push
or
lea
loopne
lock
cmpsl
movb
aad
stc
cmp
add
mov
stos
pop
mov
add
xor
push
cmpsb
or
mov
xor
mov
pop
insl
add
jp
xor
add
add
add
add
jbe
add
add
add
add
dec
add
cmp
add
arpl
xor
add
add
addr16
inc
add
add
xor
add
add
add
add
add
push
add
add
jno
inc
add
pop
imul
add
add
cmp
js
dec
insb
xor
add
add
inc
push
dec
imul
add
add
arpl
cwtl
and
adc
aam
push
les
jg
mov
push
pop
iret
mov
aam
call
xor
pop
add
jl
push
rolb
out
sbb
sti
call
mov
pop
imul
out
lods
mov
arpl
xor
ret
daa
cld
add
or
add
jne
xchg
lcall
lret
add
mov
adc
dec
lds
mov
and
adc
ds
iret
jmp
pop
into
add
fisubs
loope
pop
add
inc
cld
or
sbb
je
jmp
jg
xlat
nop
dec
loope
addr16
adc
pop
testb
call
es
mov
mov
mov
mov
push
rolb
popf
fistps
xchg
dec
mov
mov
call
inc
scas
testb
cmp
sarb
dec
dec
inc
push
fcomp
mov
lret
addr16
mov
add
jmp
cmp
sbb
mov
cltd
jg
mov
stc
pop
mov
jg
loope
lahf
add
jne
ljmp
std
or
test
add
push
sti
lods
push
cltd
dec
mov
mov
test
xchg
mov
cmpb
imul
push
cwtl
loope
idivb
sub
dec
out
inc
cmp
mov
lret
les
notl
lret
ds
lock
enter
mov
add
xchg
mov
hlt
dec
dec
add
adc
sti
add
xor
jno
xchg
pop
mov
insb
jbe
inc
xchg
ret
jecxz
test
mov
mov
lcall
mov
mov
add
mov
pop
add
ret
mov
and
cmp
lock
in
int3
ja
xchg
add
leave
arpl
adc
loopne
add
enter
ret
lock
icebp
addr16
ret
cwtl
add
add
dec
push
rclb
fstpt
or
popf
add
and
dec
mov
mov
fiadds
mov
inc
adc
lret
pop
jg
jnp
mov
dec
movups
push
aaa
sbb
mov
mov
mov
je
mov
std
pop
inc
imul
push
ret
add
or
inc
xchg
inc
add
cmc
cmp
xchg
das
xchg
movsb
dec
mov
push
xchg
jp
sbb
dec
inc
sub
add
add
movsb
inc
mov
add
sub
pop
test
mov
scas
mov
movsl
fnstsw
into
pop
mov
cmpsb
pop
fisubrl
shl
jecxz
xlat
add
mov
add
nop
add
mov
ss
sahf
push
cmp
add
xchg
add
sti
or
ja
cltd
pushf
mov
cmp
or
in
sub
mov
sbb
lret
mov
jp
rep
and
push
mov
or
ds
lds
ret
movsb
jmp
data16
push
push
sti
add
jne
ja
add
or
clc
or
dec
push
add
lods
fistl
das
leave
or
rcrl
sub
jb
pop
cwtl
sbb
jo
aas
pop
and
inc
cmovns
daa
sub
icebp
mov
push
ljmp
out
adc
mov
inc
xchg
js
nop
inc
cs
loopne
xor
sub
repnz
cmpsl
in
das
dec
popf
repnz
jg
cmpsb
jnp
xchg
pusha
add
movsb
repz
les
mov
and
test
dec
jg
or
jae
rol
sti
jo
aas
aaa
rclb
test
mov
decb
jne
movsb
getsec
fwait
jmp
add
iret
xchg
mov
je
xchg
aas
and
add
dec
add
xor
add
pop
rcll
mov
call
addb
rcrl
xor
fimuls
jne
xor
inc
mov
sbb
mov
add
push
popf
jbe
jne
mov
cmpsl
or
mov
inc
ret
je
mov
lea
testb
mov
xchg
mov
dec
adc
add
xchg
dec
adc
int
add
inc
add
sub
add
cmpsl
xor
mov
je
pop
rcrl
add
push
mov
xlat
cmp
mov
icebp
push
lret
add
add
mov
sarb
clc
add
mov
add
sub
cmpsb
add
dec
and
call
mov
fisttps
xchg
mov
pop
imul
std
pop
jmp
inc
add
sti
notl
pushf
sbb
data16
mov
cmpsl
push
ljmp
adc
adc
dec
jge
stc
mov
lret
mov
fistpl
dec
jle
ret
lods
enter
mov
notb
sbb
push
pop
fisttps
fwait
add
repnz
imul
pop
jnp
int3
nop
push
push
in
inc
mov
dec
cmpsb
mov
fstl
pop
jg
incl
mov
ret
or
push
dec
in
jb
sbb
or
rorb
xchg
lret
dec
std
add
xchg
in
loope
pop
push
and
add
mov
fcom
nop
add
inc
adc
clc
dec
ljmp
jmp
jg
cld
movsb
cmp
add
jmp
outsl
inc
or
fs
cmp
repnz
mov
sub
sbb
ja
jecxz
call
ret
add
adc
and
jg
add
ror
mov
add
stc
fisttpl
mov
mov
cmp
jne
iret
add
xchg
sarb
ficompl
mov
sti
pop
or
mov
int
and
xor
cld
cmp
scas
repz
mov
stc
int
add
lods
inc
sbbb
shll
imul
inc
bound
fldcw
nopl
or
rcll
sbb
cmpsb
jne
inc
add
stc
inc
xlat
jb
add
mov
mov
add
mov
shll
rorl
ret
movsl
icebp
jp
dec
sub
add
xorl
add
or
and
mov
xchg
push
add
add
push
push
push
and
add
mov
cmpl
adc
je
ja
scas
repnz
and
add
movsb
add
popf
or
push
daa
add
jae
repnz
lock
jg
mulb
push
adc
cmp
add
mov
lret
sub
or
loope
add
test
lret
adc
dec
cmp
cld
dec
mov
and
sbb
mov
dec
fistps
mov
repnz
shl
test
inc
push
mov
fwait
add
xor
cmpsb
add
xor
jns
mov
mov
cmp
lds
adcb
push
add
fiaddl
add
popf
lea
fstps
sub
mov
xchg
jo
iret
sbbl
mov
fldl
lock
push
sub
xor
xchg
mov
cmp
xchg
push
mov
dec
sub
sbb
mov
mov
and
addb
sub
sbbb
mov
or
add
fiadds
dec
sqrtps
nop
pop
mov
jp
aas
push
xor
push
add
pop
je
inc
test
mov
xchg
cmc
push
pop
sbb
add
js
subl
jecxz
in
mov
cmp
xchg
orl
enter
mov
dec
and
scas
xchg
pop
movd
insl
mov
aad
roll
add
jbe
scas
jle
inc
addr16
es
popf
jg
sti
pop
cmp
add
jl
and
xchg
gs
shl
xchg
pop
imul
test
pop
or
lods
jbe
imulb
cmp
lea
shll
lods
std
adc
cli
daa
je
dec
les
shrl
jmp
clc
insl
jno
xor
jns
or
mov
and
sbb
loop
pop
and
pushf
shrb
movl
xchg
adc
push
add
push
xchg
sarl
lret
mov
add
inc
mov
and
add
fisttps
adc
mov
push
sbb
add
inc
adc
mov
adc
add
adc
clc
add
and
andl
lods
incl
psadbw
or
adc
imul
add
jne
mov
or
xchg
mov
int
rcll
add
mov
jb
jp
push
gs
add
insb
das
cmc
mov
je
out
int3
dec
stos
movsl
pop
lods
adc
insl
push
loope
xchg
cmp
xchg
addr16
jge
jae
ja
or
bound
xor
push
into
jmp
push
addb
inc
int
jno
je
fwait
mov
sub
in
dec
adc
aas
dec
pop
or
add
fstl
dec
add
outsb
jmp
roll
fsubs
loop
aas
leave
or
out
inc
movsb
and
into
mov
mov
mov
negb
mov
rcrl
in
sarb
es
jb
xor
test
xchg
mov
mov
mov
sub
rclb
jg
inc
idivl
aam
out
mov
add
call
ud2
mov
lea
in
add
out
push
rcrl
and
xchg
in
adc
push
add
call
rolb
or
imul
cmpsl
jmp
pop
aas
add
cmp
popf
add
loope
push
pop
jbe
js
xchg
sbb
pop
sub
add
loopne
adc
out
dec
mov
je
dec
test
cltd
pop
add
push
push
inc
pop
js
imul
dec
mov
add
scas
add
xor
cmpsl
mov
test
mov
inc
or
mov
add
or
out
mov
sub
jne
pop
jns
icebp
addl
bound
testb
dec
cmpsb
shrb
clc
or
add
scas
rol
xchg
das
mov
lcall
orl
das
xlat
mov
imul
lds
sbb
dec
int
add
push
mov
dec
cmp
std
cmp
out
dec
cmp
addb
ja
push
int
addr16
mov
std
push
sahf
pop
add
mov
int3
roll
call
cmp
aaa
add
adc
iret
add
imul
push
ret
lcall
in
fldl
aas
sub
xchg
test
pop
mov
push
add
in
or
sub
lock
or
in
dec
loope
fisttpl
popa
outsl
mov
sub
decb
call
sbbb
inc
lds
cmp
sldt
aas
fldl
add
sbb
jl
popf
mov
add
adc
jnp
add
mov
lahf
stos
add
hlt
or
call
mov
push
jl
mov
pop
mov
fs
xchg
call
jp
mov
jbe
inc
add
or
loope
sbb
rcrb
xchg
lret
mov
mov
adc
arpl
mov
push
mov
mov
push
xchg
pusha
pop
filds
icebp
movsb
loopne
add
push
rcll
mov
inc
pop
std
fisubl
pop
mov
mov
lods
int3
ret
and
je
pop
xor
mov
mov
jo
pop
add
push
jno
push
jl
aam
cmc
mov
add
adc
pop
enter
xor
std
mov
sub
mov
add
mov
jnp
push
pop
pop
mov
and
push
sbb
incb
adc
hlt
mov
pop
or
pop
cmp
std
cmp
loopne
int
sbb
push
add
push
ficompl
jns
std
mov
add
mov
and
jmp
mov
call
movsb
mov
inc
cmp
lea
xchg
xchg
sub
mov
int
mov
jge
mov
xor
xchg
jno
popa
addr16
lcall
jecxz
cmp
pop
mov
push
int
sub
push
test
inc
pop
mov
pushf
dec
sub
push
mov
cld
add
leave
pop
mov
inc
mov
sbb
add
jbe
ret
inc
mov
mov
imul
cltd
add
and
sarb
add
arpl
cmp
cmp
call
cli
add
arpl
ucomiss
add
push
adc
add
lret
in
out
aam
sub
inc
outsl
dec
lock
dec
shr
xor
and
inc
insb
dec
cwtl
or
mov
jae
add
mov
jmp
cmp
push
in
sub
add
or
sub
adc
fiaddl
xor
sbb
push
push
or
lock
dec
xor
mov
pop
mov
jge
popl
push
cmp
inc
add
dec
jmp
addr16
mov
mov
test
xlat
push
inc
mov
pop
jno
add
nop
inc
cmc
iret
push
add
loopne
sbb
sar
mov
pop
fbld
cld
daa
leave
lods
add
je
add
es
mov
loope
dec
xchg
cmc
add
scas
add
push
shrb
in
mov
mov
or
shl
or
test
mov
and
add
fidivrl
jmp
sub
loopne
aas
sbb
jecxz
out
subl
stos
imul
pusha
pop
ret
cmp
sbb
cli
cmc
add
mov
jmp
xchg
inc
add
jne
lods
mov
into
cmp
xor
add
je
cmpsb
jb
sub
in
mov
setne
mov
aaa
xor
and
adc
or
mov
add
je
les
inc
rorl
fisttps
cmp
pop
stc
adcb
loope
adc
outsb
dec
outsl
fmull
pop
mov
jne
push
inc
adc
cmpsl
ret
dec
xchg
pop
mov
addr16
xor
sub
push
fbld
mov
sbb
insb
inc
lret
or
pop
fwait
mov
xor
add
rorl
aas
pop
orl
push
push
pop
pop
lret
sub
insl
pop
push
mov
mov
adc
dec
cmpsb
dec
outsb
into
outsb
cmpsl
adc
sub
jne
mov
iret
mov
arpl
add
subl
or
sub
lods
add
pop
out
add
adc
mov
in
xchg
aad
push
add
mov
andb
cli
pop
stc
je
inc
jae
inc
arpl
push
sti
into
data16
sbb
adcl
inc
arpl
testb
add
or
inc
out
les
push
push
mov
xchg
popf
mov
xchg
inc
jae
push
and
das
pop
adcl
gs
insl
jno,pt
sub
jbe
mov
jne
pop
clc
je
add
push
negl
adc
adc
fwait
add
cmpsb
sbb
andl
mov
mov
sahf
std
rclb
jle
pop
dec
mov
xchg
incb
jg
popw
inc
cmc
pop
lret
not
dec
mov
in
jo
test
fstps
imul
jl
jmp
shlb
idivl
add
adc
fildl
jnp
fbld
std
mov
int3
ja
jns
add
movsb
aaa
inc
icebp
into
add
in
or
clc
ret
mov
and
push
add
push
mov
mov
push
dec
add
sbb
mov
xchg
jnp
cltd
or
jae
sbb
sbb
mov
lret
arpl
mov
out
mov
enter
iret
push
cmp
fidivl
inc
aas
mov
mov
jae
js
mov
xor
cld
jecxz
dec
mov
mov
add
jnp
int
js
les
push
pop
mov
sbb
xchg
lcall
xchg
stc
mov
mov
nop
sub
mov
shll
dec
lods
add
jns
gs
jne
jmp
addr16
ljmp
stc
clc
jo
push
jecxz
rorb
add
xchg
or
pop
gs
int3
and
add
add
mov
xchg
push
je
int
add
jne
movsl
push
push
enter
hlt
imul
mov
rcr
mov
scas
or
rolb
jecxz
test
movsb
add
jbe
mov
add
repnz
mov
aad
xor
loop
cmp
mov
lret
and
dec
sub
test
repnz
or
stos
mov
incb
xor
out
sub
enter
stc
add
add
into
and
aaa
adc
test
sub
cmp
add
pop
add
sub
sar
add
cmp
out
adc
out
sbb
fbld
add
fisttps
call
jecxz
aas
inc
xchg
inc
ret
testb
push
lds
in
daa
jge
mov
mov
xor
aas
xchg
out
push
sub
xchg
mulb
add
shll
lahf
sarb
mov
out
lea
push
mov
add
mov
aad
add
push
pop
add
loope
cs
lahf
dec
mov
xlat
sar
jnp
jae
jmp
lea
push
pop
mov
rolb
lock
add
pop
sub
cwtl
scas
dec
or
js
mov
outsl
aas
adc
sub
jne
jmp
push
add
iret
cld
dec
jb
jae
add
out
inc
test
push
dec
sub
in
jmp
adc
mov
mov
roll
sbb
mov
dec
vmwrite
pop
mov
pop
jge
jp
test
dec
xchg
ffree
es
adc
pushf
jns
jl
push
flds
push
fsubl
mov
test
push
push
jne
add
testl
pop
mov
add
lea
or
inc
test
mov
inc
ss
add
push
adc
cmp
out
add
and
addl
lahf
cmp
add
lcall
ret
add
xchg
outsl
add
call
pop
in
mov
enter
adc
mov
xchg
push
incl
iret
mov
mov
dec
decl
les
mov
shll
pusha
xor
mov
push
cs
fs
push
repnz
lds
add
mov
push
maskmovq
divl
mov
sbb
shlb
add
mov
inc
mov
add
sbb
pop
ja
adc
test
test
fiaddl
test
sbb
add
or
sbb
add
pop
mov
mov
out
add
cmp
insl
add
mov
imul
rcrl
mov
jmp
iret
add
jno
je
inc
dec
lret
inc
inc
mov
pop
lret
push
lcall
iret
mov
fisubrs
add
or
jbe
testb
jle
aaa
sub
subl
fnsave
inc
xchg
add
shr
addr16
push
push
movsb
insl
sub
je
dec
add
jmp
sub
dec
aad
mov
push
add
push
xor
cld
ret
loope
and
arpl
in
inc
push
lcall
cli
adc
dec
jecxz
pop
jbe
aas
lock
push
pop
subb
adc
adc
or
shll
in
add
dec
fnstcw
xor
stos
add
cmp
dec
push
push
cmp
sbb
push
pusha
pop
cld
mov
mov
aad
movsb
push
imul
sub
push
out
sti
aad
adc
jnp
nopl
or
test
mov
push
mov
xlat
sbb
cmpsb
jb
les
sbb
ljmp
pop
pop
rclb
mov
push
add
and
inc
or
rorl
mov
jbe
add
mov
dec
jmp
mov
sbb
mov
xor
and
push
mov
sbb
pop
add
in
add
dec
shll
or
add
call
adcl
lock
mov
mov
gs
dec
pop
in
ret
test
lds
insl
repz
or
add
call
or
push
add
fimull
lea
inc
fcoms
hlt
sub
add
repz
cmp
rorl
dec
enter
or
add
jecxz
xchg
int3
add
cmp
dec
add
movsb
jge
ret
add
in
mov
add
pop
mov
cli
add
shl
and
sub
ja
lahf
testb
enter
out
nop
out
dec
sub
dec
test
mov
mov
sub
xor
add
mov
mov
cmp
cld
enter
pop
add
dec
aaa
mov
dec
mov
stos
add
xor
xchg
cmc
lret
add
roll
out
push
xchg
and
es
sub
pop
dec
xor
shrd
stos
adc
dec
test
cmpb
mov
or
pop
jno
inc
mov
jmp
pop
dec
insb
push
dec
pop
fs
pop
pop
insb
cmp
rcrl
test
dec
mov
bound
movsb
xor
pop
iret
insb
iret
jp
outsl
lods
dec
ss
mov
jle
dec
arpl
sub
scas
je
jns
out
jno
push
inc
dec
jg
outsl
ret
pushf
pop
sbb
aas
loopne
and
cld
lock
icebp
les
addr16
xchg
daa
adc
sub
mov
vbroadcasti32x8
inc
ja
popf
mov
decl
in
fldl
mov
aam
dec
jo
lods
xchg
add
repnz
mov
in
aas
push
outsl
arpl
mov
lret
lret
negl
xor
test
inc
adc
lea
movsb
add
enter
scas
xor
add
xchg
jbe
push
adc
sahf
add
jl
loope
add
cmpsb
xor
xchg
insb
cmp
xchg
les
iret
rolb
fs
mov
and
inc
outsl
jecxz
mov
mov
fucomi
int3
pop
pop
jb
push
add
xor
xchg
cmp
xor
sti
push
pop
inc
mov
add
push
popa
dec
pop
rcrb
or
or
adc
inc
mov
mov
xchg
ret
mov
call
loop
mov
sub
inc
pslld
mov
add
ds
dec
fdivrl
pop
pop
or
test
jmp
bound
pop
rorb
jecxz
jg
pushf
cld
add
cmp
mov
mov
add
sub
or
notb
add
gs
mul
std
add
dec
test
mov
sahf
aas
dec
hlt
call
std
pop
mov
mov
or
ljmp
adc
add
aam
dec
mov
lahf
in
std
addr16
add
fistl
push
push
push
push
loope
mov
scas
int
popf
cld
mov
add
dec
cmp
pop
lods
push
pop
testl
sub
jne
mov
or
outsl
aad
mov
rol
push
movsb
add
add
add
call
test
push
mov
jg
lahf
cmp
xchg
jo
les
pop
les
xchg
xor
mov
fadds
pop
add
cmp
mov
push
push
cld
or
les
mov
mov
cmp
out
or
clc
je
add
into
cmp
adc
inc
mov
rorl
xor
mov
test
movb
fisttps
or
mov
js
mov
xchg
mov
loop
call
sbb
cld
jmp
add
lret
add
or
sub
add
jbe
sar
addr16
push
test
mov
jo
js
inc
pop
or
push
mov
pop
mov
mov
aad
mov
dec
test
mov
sbbl
iret
xor
in
rcrb
out
fucomi
jne
inc
add
sub
scas
adc
push
dec
cmp
into
call
sbb
jl
lret
cwtl
ret
jmp
in
mov
push
pushl
cmp
popf
pushf
mov
dec
mov
pop
loopne
cwtl
pop
daa
sbb
movsl
sub
mulb
xchg
xchg
cmp
lods
sti
add
or
mov
mov
xchg
sub
stos
add
jecxz
lods
sbb
in
jp
xchg
xor
aas
mov
inc
je
lock
stos
mov
cmp
cltd
fmuls
ja
inc
gs
jecxz
sub
incl
lods
add
iret
add
je
mov
cwtl
push
enter
dec
cld
mov
cmp
adc
mov
mov
cmp
fwait
add
loop
aad
adc
mov
bound
mulps
and
push
add
test
fs
adc
mov
jecxz
push
xchg
inc
cmp
sub
call
jmp
lods
adc
in
add
in
ret
xchg
movsb
cmpsl
pusha
or
and
add
outsb
dec
pop
movaps
xchg
mov
fwait
adc
les
pop
cmp
je
lods
stc
mov
mov
mov
jne
ds
add
hlt
pop
leave
mov
push
jp
push
cli
scas
lahf
pop
jb
jae
cmp
movsl
mov
test
mov
mov
jle
mov
mov
adc
cwtl
mov
sarl
xor
insb
adc
xchg
cmp
add
mov
mov
mov
mov
or
sub
push
int
fsts
js
in
ja
add
lahf
jb
rclb
ljmp
xor
inc
shll
sub
push
xor
fdiv
and
cmp
jb
push
push
adc
dec
dec
std
in
mov
mov
aas
mov
mov
mov
jge
idiv
push
dec
leave
add
lds
leave
lahf
repnz
lcall
cs
sub
push
add
repnz
mov
in
loop
imul
testb
cli
jb
cmp
add
add
xor
jns
mov
jl
push
cmp
jne
lcall
add
shr
pop
loop
sub
hlt
popa
setnp
mov
hlt
testl
fmuls
loopne
add
pop
sub
xor
mov
xor
xchg
lea
inc
and
sub
addr16
jb
lret
loop
jne
outsb
xchg
shlb
ss
add
jge
shrl
inc
rolb
into
sbb
stos
leave
es
add
fcmovbe
std
add
jmp
and
inc
mov
bound
daa
stc
pop
inc
xchg
fwait
pop
jg
mov
or
xor
cmp
lods
ret
addr16
mov
mov
loopne
jecxz
jmp
inc
cmp
aas
adcl
call
xchg
movsb
int3
mov
enter
push
mov
lock
les
cld
mov
sbb
xchg
inc
mov
pop
aas
sbb
ret
add
xor
xchg
es
jae
mov
sub
cltd
int3
xor
cmpsl
mov
cmp
ret
push
ficomps
popf
xor
sub
xchg
xor
add
push
neg
loope
xchg
xor
cld
sub
push
cmp
mov
pop
pop
adc
push
aas
dec
mov
or
jae
pop
dec
imul
add
mov
push
sarl
decb
mov
add
jne
or
sbb
mov
push
mov
add
into
inc
mov
add
idiv
int
lret
adc
mov
add
mov
jecxz
mov
xchg
push
stos
jns
add
push
scas
fs
or
mov
lahf
call
loopne
lret
pop
xchg
adc
push
jle
fnsave
repnz
out
mov
push
mov
test
mov
inc
and
imul
mov
push
sub
inc
or
push
mov
or
rclb
aas
sub
add
xchg
out
jns
add
dec
loop
push
mov
lods
loopne
xchg
adc
jbe
lods
sar
add
push
in
add
stc
cmp
and
cld
call
mov
rorb
mov
cmp
add
inc
notrack
add
stc
xorl
mov
push
jge
dec
ljmp
cmp
add
mov
icebp
jne
mov
and
mov
loop
les
cld
ret
ltr
js
clc
mov
lret
xor
mov
inc
stc
test
mov
inc
enter
fnstenv
mov
unpckhps
xchg
jb
fisttps
sbb
mov
sbb
in
aad
xor
cmpsl
leave
imulb
push
sub
std
cmp
int
cmp
push
icebp
add
daa
inc
push
fdivs
aas
jmp
clc
sub
lods
add
repnz
cltd
add
jmp
mov
outsl
mov
rcrb
mov
add
or
lret
xchg
sbb
repnz
add
and
xor
ja
add
xchg
add
call
xor
popf
mov
mov
testb
mov
or
inc
cltd
mov
mov
push
ficoml
xchg
or
les
cmp
add
inc
mov
iret
dec
cmp
or
shlb
cmp
sahf
mov
jg
hlt
lods
sub
imul
add
mov
mov
pop
add
cmc
push
adc
mov
cld
flds
std
sub
ficoml
dec
push
adc
jnp
or
repz
add
iret
and
testl
fsubl
aas
scas
jb
inc
fdivr
out
mov
repnz
divb
inc
testl
sub
mov
rolb
ss
cmp
stc
xor
lds
jl
repnz
dec
mov
pop
aad
push
dec
dec
in
add
lret
es
inc
stc
cmp
add
adc
add
movsb
call
push
mov
cmp
xchg
enter
or
cmp
xor
stc
add
add
or
ljmp
popa
add
adc
ret
or
icebp
mov
adc
sldt
mov
cmp
push
add
daa
aas
popf
push
shl
dec
push
mov
call
cmp
cli
add
cld
pop
rolb
dec
int3
push
enter
data16
add
sar
fcmovnbe
call
movsl
adc
add
pop
cltd
mov
lock
mov
mov
mov
sbb
jge
and
repz
dec
jmp
xchg
push
adc
pop
scas
lea
repz
mov
fildl
jg
sub
sub
push
mov
mov
xor
fnstsw
add
jae
push
mov
pop
dec
or
inc
xchg
xchg
mov
mov
fistpll
add
fwait
dec
mov
iret
lods
dec
jo
sar
sub
ret
outsl
in
push
adc
cmpsl
mov
es
mov
push
push
jg
fs
add
sbb
push
mov
xor
aas
mov
jge
add
cmp
testb
push
jle
jl
ja
lods
add
aaa
and
cmp
in
rorb
jle
lock
popf
call
testl
std
mov
or
nop
aas
pop
int
sarb
fbld
leave
in
cld
mov
inc
das
repnz
ret
inc
mov
sub
sub
stc
enter
hlt
dec
mov
stos
imul
xlat
add
daa
or
and
sbbl
lret
dec
mov
int
test
daa
or
jcxz
stc
sbb
in
push
push
aam
rol
fisubrl
pop
nop
add
cmp
add
cwtl
pushl
mov
jecxz
mov
mov
ljmp
sbb
je
popf
add
cld
add
xchg
jbe
jg
dec
xchg
jg
or
mov
ja
sbb
call
inc
xor
pop
mov
adc
sarl
pop
dec
xchg
test
incb
into
out
dec
stc
push
pop
aam
sbb
aas
mov
es
lods
add
add
scas
and
lds
mov
xchg
mov
lret
or
add
add
and
dec
and
lahf
mulb
roll
mov
xor
dec
push
ljmp
mov
add
pop
mov
inc
xorb
add
mov
nop
and
push
mov
ss
mov
mov
incl
out
cmpb
and
gs
sub
or
icebp
cld
les
mov
shrb
add
leave
inc
loopne
lods
jne
jbe
mov
add
repz
test
in
loopne
push
sbb
in
add
cmp
pop
xchg
or
sub
addr16
add
inc
mov
inc
faddl
mov
cmpsb
aad
lret
fadds
xorb
orb
std
stc
jnp
iret
mov
xor
push
fs
pop
lret
add
jb
xchg
adcl
sbbl
push
leave
push
std
mov
add
gs
add
push
or
popa
sub
rorb
lret
popf
fdivrl
dec
dec
pop
sbb
fistl
test
scas
add
mov
testl
call
jge
or
sti
add
mulb
movsb
and
jne
add
sbb
mov
lods
and
add
add
sub
add
iret
notl
jno
jg
mov
repnz
add
jl
int3
xchg
bound
add
roll
mov
shlb
shll
mov
mov
gs
or
ja
rolb
push
add
popa
push
int3
cmpsb
dec
ret
clc
or
add
test
loop
xor
push
repz
hlt
xchg
daa
std
add
push
mov
cltd
or
mov
mov
add
loopne
jb
inc
mov
mov
add
movsl
jne
add
xor
cwtl
add
repnz
mov
add
mov
out
push
mov
in
in
adc
add
xchg
or
or
push
test
aas
jb
add
xchg
sti
jnp
sbb
mov
rcrb
add
sbb
xchg
insb
add
jp
shlb
add
dec
add
enter
sahf
ret
mov
rep
dec
fisttpll
fbld
lahf
leave
imul
leave
xor
into
shl
rclb
cmpsl
lret
or
add
iret
sub
lock
mov
rcll
push
pop
incb
hlt
rcl
negb
add
daa
and
cltd
cli
push
jb
adc
cmpb
repz
mov
xchg
jg
pop
mov
cmp
in
inc
lret
xchg
dec
aaa
fbstp
mov
pop
xchg
test
jmp
and
add
sbb
add
mov
xor
sub
cmp
addb
and
das
mov
lea
add
js
call
std
rorl
lock
cmp
scas
pop
cmpsl
inc
cs
dec
add
jp
out
repnz
outsb
dec
pop
mov
add
jp
xchg
enter
mov
jp
sub
out
cmp
insb
mov
fiaddl
aas
adc
lds
aam
jg
mov
add
je
adcb
out
filds
out
pause
fs
mov
mov
scas
loop
mov
jo
je
daa
xchg
hlt
sub
push
insl
jae
in
add
inc
and
or
icebp
int3
int3
add
jmp
push
add
mov
fcompl
mov
test
outsl
xor
daa
cmp
js
lock
mov
mov
add
mov
movsb
lods
les
push
into
addl
inc
add
ror
add
mov
out
fwait
push
movsl
pop
imulb
in
adc
aas
sub
ja
ret
or
xchg
std
mov
push
icebp
add
push
mov
lea
filds
rolb
pop
push
je
lea
add
jae
push
adc
mov
outsb
popf
or
nop
orb
inc
xor
jne
adc
dec
push
loopne
fs
pusha
lods
or
add
int3
cmp
out
inc
lret
or
dec
imul
icebp
repnz
js
rcll
or
jge
scas
leave
add
cwtl
repnz
sbb
mov
xchg
insl
adc
repz
add
cmp
test
ljmp
sbb
test
dec
je
add
out
ds
dec
adc
push
add
iret
xor
icebp
testb
push
add
repz
push
xchg
call
mov
or
das
aas
jp
sub
orb
dec
fnstcw
xchg
daa
dec
pop
popf
xor
filds
cmp
cmp
lods
mov
cli
mov
mov
xchg
in
add
sub
mov
and
adc
mov
sub
add
mov
and
adc
iret
or
ficomps
jmp
cmp
xchg
std
push
jge
adc
fnstsw
pop
push
mov
cld
aas
sbb
mov
push
xor
sahf
add
test
std
add
stc
add
loopne
mov
add
inc
lods
iret
and
sbb
or
gs
push
aas
mov
sbb
add
pop
mov
sub
mov
icebp
jne
xor
pop
mov
fldl2e
cmp
test
andb
push
add
mov
adc
or
push
test
add
adc
lahf
mov
inc
cmp
xchg
je
mov
push
jl
mov
jae
push
mov
fmuls
cmp
popf
aaa
xchg
mov
dec
mov
icebp
jb
inc
or
xchg
xchg
add
ret
sub
push
mov
push
outsl
sarb
add
shrl
inc
decb
inc
add
test
push
push
pop
stos
add
push
and
mov
or
imul
xor
lret
mov
adc
aas
aam
jb
mov
or
push
xor
dec
leave
pushf
lret
lds
sub
aam
mov
pop
add
lret
ret
fincstp
je
punpckhbw
jge
loopne
or
pop
and
pop
fists
pop
adc
add
inc
sbb
loop
std
cmp
push
dec
add
add
mov
sahf
mov
xor
outsl
xlat
mov
add
je
int
popf
pxor
pushw
add
push
xor
lods
push
mov
jbe
loope
lods
stos
bswap
add
sub
mov
dec
flds
adc
enter
fildl
in
push
push
addr16
mov
push
jns
inc
dec
es
adc
paddd
sti
outsl
jns
add
ret
int
fwait
xor
adc
insb
loope
mov
add
lret
push
stos
add
push
ret
inc
jmp
mov
sub
movsb
orb
dec
pop
push
sti
fistpll
sub
and
aas
push
movl
inc
mov
cmp
ja
dec
add
lret
mov
mov
pop
or
ja
mov
sbb
inc
inc
cmp
ret
cwtl
add
dec
fsubl
scas
ljmp
push
lcall
lea
rolb
cmp
incl
xchg
scas
inc
push
je
or
shr
add
test
add
jne
sbb
rorb
loope
jecxz
popa
or
aam
add
fwait
sarb
xor
jno
inc
aaa
incl
rolb
arpl
push
dec
test
iret
mov
hlt
sbb
push
mov
mov
xchg
cmpsb
iret
sbb
add
add
mov
cmp
fwait
add
xchg
shrb
inc
pop
lret
mov
adc
pop
aas
xor
mov
ret
adc
lret
jmp
insl
push
jae
jns
call
mov
add
sub
in
add
clc
cmp
mov
test
inc
inc
lds
ret
scas
sub
add
testl
add
or
mov
nop
mov
jno
out
cltd
aas
pusha
add
xor
dec
jbe
cld
pop
repz
add
inc
add
add
add
xor
push
add
xor
add
add
inc
add
inc
push
add
add
add
xor
push
outsb
push
add
push
add
add
xor
add
ja
add
add
pop
add
dec
inc
xor
add
push
add
add
xor
inc
dec
inc
add
push
dec
push
inc
fs
aaa
popa
inc
push
add
inc
add
push
add
push
add
add
imul
xchg
inc
fadds
shll
test
dec
and
adc
mov
or
int3
jnp
mov
cmp
jae
insb
add
sub
add
sub
hlt
lcall
cmp
inc
sarl
push
pusha
mov
icebp
cmp
add
lds
jb
xchg
xchg
mov
add
pop
inc
push
xchg
mov
decl
stos
dec
mov
insl
jmp
jle
push
stos
popf
xchg
mov
out
daa
and
add
add
iret
adc
cmp
sbb
add
add
pop
je
and
push
dec
divb
repnz
mov
mov
aas
arpl
and
xor
fbld
iret
inc
add
sub
aaa
mov
je
mov
fdivs
add
mov
cmp
sbb
jmp
sahf
and
imul
xchg
lret
pop
clc
pusha
add
inc
or
mov
loopne
fildl
cltd
fisubrl
jns
popf
faddl
xor
add
push
jb
in
sub
xchg
stc
fistl
xchg
clc
fidivs
lock
sarl
add
mov
pop
test
pop
inc
add
pop
push
sub
movsb
gs
add
fisubs
mov
or
daa
ja
xchg
pop
add
mov
bound
mov
clc
jb
xchg
decl
iret
jg
jge
fsubp
sti
mov
sarb
xabort
add
jmp
add
add
inc
mov
stos
scas
aas
jb
dec
mov
push
add
mov
xor
adc
sub
je
add
fsubs
mov
mov
pop
xor
lcall
push
fmuls
imul
sbb
lods
cmc
mov
mov
adc
aas
in
mov
pop
add
mov
rcrl
sbb
xor
ret
mov
pop
pusha
imul
add
adc
sub
add
jns
add
dec
ficoms
mov
xor
stc
shlb
imul
add
fidivs
scas
sbb
ja
fbstp
jle
movl
adc
movsb
add
fnstsw
loop
or
add
pop
sbb
fmuls
dec
cli
mov
and
outsl
jp
int3
mov
dec
pop
xchg
inc
add
add
fistl
push
adc
and
mov
inc
dec
cmp
pop
popf
insb
js
mov
pushf
inc
lods
inc
mov
aam
faddl
inc
call
or
mov
push
inc
shll
nop
sti
test
mov
frstor
xor
inc
xor
jg
lret
mov
cwtl
adcb
aas
fdiv
push
sub
fstpl
sub
inc
push
inc
pusha
ljmp
test
in
push
pop
add
mov
inc
dec
add
push
cwtl
mov
test
mov
cmpsl
cltd
or
sub
inc
push
dec
pusha
dec
jl
xchg
mov
int3
pusha
fsubl
jg
push
or
enter
xor
lret
push
mov
dec
movsb
dec
mov
inc
loopne
in
inc
hlt
inc
cld
push
or
stc
sub
popf
xor
dec
lret
pop
std
scas
insb
xchg
js
cwtl
and
jle
test
or
das
add
movsb
lret
mov
add
xchg
les
sti
cld
and
and
inc
ds
popf
push
pop
push
fisttps
mov
mov
shl
pusha
hlt
jnp
divb
cmp
pop
sbb
and
nop
std
mov
cwtl
xor
inc
in
roll
jl
test
xchg
sti
mov
rclb
mov
psrlw
mov
mov
pop
push
js
lock
les
lods
adc
adc
xchg
fs
cwtl
pop
add
dec
fsubs
adc
fildll
adc
cmp
or
aaa
inc
fdivrs
or
pop
xor
or
fldl
loop
ss
iret
xor
cmp
pop
movsl
aas
daa
es
and
lock
cs
out
mov
sub
ds
push
iret
adc
adc
adc
pop
push
sbb
sbb
arpl
imul
aas
add
mov
fdivrs
lret
xor
repnz
mov
xlat
pushf
jb
pop
loopne
fistpll
mov
and
mov
test
shlb
add
loope
jns
shrb
sarl
shrb
xor
rcr
jmp
les
mov
cwtl
enter
dec
inc
in
shl
leave
cltd
mov
shll
roll
into
nop
jg
add
and
xchg
add
ffreep
adc
inc
push
add
fwait
lret
ror
add
add
popa
lret
jo
add
jne
pop
gs
add
clc
outsl
ja
jae
or
push
in
inc
test
jb
outsl
lds
imul
gs
or
jp
inc
mov
push
aas
pop
aam
jne
insb
incl
je
popa
add
imul
xchg
jo
push
add
xlat
add
add
cwtl
xor
cld
mov
repnz
outsb
pop
bound
je
outsl
movsl
jno
jg
insl
xor
lcall
outsb
je
mov
pop
jmp
jg
add
in
imul
add
xlat
imul
js
cmp
jp
dec
push
mov
jae
jp
gs
mov
sbb
add
ja
cmp
clc
daa
rol
std
fnstsw
pop
lds
mov
cmp
push
adc
jl
idivl
jg
popf
sub
mov
cltd
fnsave
das
std
aaa
lahf
cmp
inc
lcall
add
mov
ret
rorl
lods
into
inc
mov
pop
fbld
cltd
dec
insl
add
js
dec
xchg
addr16
cmpsl
xor
outsw
jo
jns
loop
add
ret
ja
out
ficoml
add
pop
mov
stc
sti
add
in
add
jge
inc
cli
mov
mov
dec
jne
outsl
mov
scas
push
push
jmp
popf
add
pop
mov
out
push
pusha
fiadds
out
outsl
call
mov
cltd
stc
add
sbb
aad
cmovb
jns
pop
jp
fs
lock
sarl
inc
push
dec
mov
mov
mov
decl
inc
lret
frstor
inc
xchg
inc
xchg
jecxz
es
push
push
mov
bound
fmull
clc
outsl
sbb
lds
add
insb
sub
sar
repnz
pop
iret
push
push
and
int
nop
xchg
jne
pop
je
mov
jb
jno
popf
jo
push
outsb
xchg
lret
insl
sbb
sti
imul
int
mov
rol
arpl
lret
popa
lock
inc
push
ret
xor
adc
jb
push
addb
add
xchg
fisttpl
data16
icebp
adc
mov
jg
dec
int3
push
dec
mov
adc
scas
mov
jno
pop
rclb
push
std
add
push
dec
push
sti
push
popf
out
or
dec
mov
dec
mov
dec
rol
rolb
movl
sbb
mov
jecxz
mov
sub
adc
aas
pushl
outsb
jmp
mov
icebp
lcall
jle
insb
adc
nop
div
stos
or
mov
inc
aas
repz
cli
shl
nop
add
test
or
leave
loop
mov
clc
les
out
lds
cmp
pushf
test
push
mov
add
mov
lgs
jnp
dec
cmc
inc
sub
inc
add
push
jns
sub
popa
pop
shrl
inc
mov
lea
add
pushf
xchg
dec
jo
bound
add
jne
jl
cli
lret
mov
mov
mov
push
shrb
mov
test
pop
rcr
into
or
dec
arpl
xchg
add
fwait
lret
xchg
mov
xor
mov
xor
inc
xor
xor
add
push
pop
sbb
dec
mov
push
pop
fs
xor
xor
lret
xor
xor
dec
inc
loope
jb
jnp
add
pop
push
adc
loop
pushf
adc
outsb
xchg
add
es
add
adc
sbb
ja
out
mov
jmp
mov
mov
inc
mov
dec
push
ftst
add
pop
sbb
mov
jmp
rcrb
pop
mov
and
add
adc
nop
cmp
push
inc
lret
xor
mov
dec
scas
ljmp
push
enter
pop
jge
ss
aas
popa
test
fildl
add
jae
xor
jns
jl
inc
fildll
dec
aas
sub
pop
popa
adc
dec
filds
or
ss
add
sub
or
pop
add
lock
int3
xorb
jecxz
mov
mov
push
jl
jge
add
pop
pusha
aam
stos
push
insl
mov
out
loop
mov
cli
and
pop
mov
fimull
or
dec
dec
lret
add
roll
adc
adc
cmc
arpl
arpl
aas
jo
js
clc
sbb
mov
fldcw
aam
add
fwait
pop
lods
mov
mov
sub
add
les
lds
cmc
dec
or
iret
fwait
pop
gs
mov
mov
in
mov
or
out
iret
incl
add
cmp
xchg
dec
mov
add
loop
pop
and
jmp
cmp
daa
fildl
pusha
fistpll
shrb
mov
xor
ss
cmp
add
jge
pop
and
and
popf
pop
aas
push
mov
pop
dec
and
sub
sub
mov
xor
lock
add
hlt
jo
add
mov
cld
add
in
inc
add
les
shl
andb
xchg
sbb
pop
cli
and
inc
loope
sub
mov
idivb
nop
push
add
xchg
mov
sarb
icebp
movsl
push
aaa
rcr
les
clc
ret
pop
mov
add
xor
inc
icebp
add
pop
out
dec
add
adc
mov
add
mov
sahf
mov
mov
sub
out
dec
jg
leave
or
fdivrl
int
mov
dec
xor
imul
lock
sbb
nop
gs
pop
pushf
js
mov
mov
add
xchg
pop
dec
mov
sti
lea
rorb
dec
fiaddl
add
test
add
rcll
fstpl
adc
mov
xor
cmp
inc
xor
sti
xor
fwait
or
and
mov
enter
out
xchg
cmp
dec
cmpsb
leave
push
scas
lret
mov
je
mov
loopne
xchg
shrl
sahf
repz
mov
sbbl
cmp
xor
cli
pop
cmp
lret
add
dec
mov
push
sahf
pop
outsl
popfw
add
outsl
sub
mov
test
add
loopne
lcall
clc
sahf
cmp
fists
pop
popf
and
andb
inc
out
test
pusha
mov
sti
add
clc
sub
std
imul
cltd
add
sub
push
sarb
push
loop
mov
jno
sub
cltd
add
icebp
enter
or
push
inc
add
or
push
cmp
in
popa
clc
imul
dec
jle
sub
xchg
push
or
aad
movsb
das
leave
lret
or
push
push
int
idiv
sarl
push
inc
lret
in
das
das
cs
sbbl
sbbb
sub
cmc
addr16
push
cmp
mov
mov
sbbb
dec
add
loopne
xchg
inc
cli
test
sbb
sub
or
add
dec
cmp
pusha
pop
add
jmp
add
cmpb
mov
dec
stc
fs
popa
push
cwtl
dec
add
push
sub
shrl
or
mov
pushf
leave
jmp
sar
sbb
inc
loopne
addl
lods
div
add
lock
inc
and
or
insb
mov
or
jno
lret
mov
add
sbb
push
ss
cwtl
add
xchg
cmpsl
sub
fidivrs
add
xor
imul
jmp
rorl
sbb
push
lret
mov
lahf
mov
mov
adc
inc
pop
pop
adc
jo
pop
lret
jl
mov
sbb
mov
xchg
dec
sbb
std
add
dec
cmpsl
push
lock
and
push
loope
in
and
push
cmc
lret
and
mov
adc
jmp
dec
xor
leave
out
inc
popf
sub
lret
pop
loopne
push
and
xor
xchg
xchg
xor
mov
add
rol
in
or
cmp
mov
hlt
loopne
outsl
mov
mov
stc
mov
leave
or
mov
mov
sbb
mov
xchg
and
pop
cwtl
cmc
cmp
mov
jno
out
clc
mov
lock
sahf
mov
lahf
mov
cwtl
add
and
ret
mov
mov
into
popf
jno
fcos
inc
sahf
loope
cli
in
mov
pop
out
dec
mov
and
scas
sub
xor
sti
pop
pushf
inc
aas
popa
dec
popa
adc
pusha
bound
push
jb
jge
filds
cltd
mov
sbb
lods
std
sbb
lds
adc
loope
cmpsb
push
and
lock
pop
add
mov
call
repnz
add
cltd
mov
cmp
jg
pusha
aaa
test
scas
add
sub
das
mov
xchg
test
pop
scas
daa
fs
loopne
lds
xchg
add
add
push
orl
sub
cmp
xorb
in
xchg
add
bound
push
imul
test
adcl
cmp
ret
lahf
loopne
fucomp
mov
andl
int
leave
xor
mov
cmp
lods
dec
hlt
cmp
jnp
mov
dec
mov
stos
iret
push
addb
imul
rcll
xor
lock
cli
add
mov
mov
faddl
xor
jb
aas
gs
mov
lret
cmp
mov
stc
sbb
js
pop
leave
push
xlat
add
pause
push
mov
test
adc
lds
mov
stc
imul
gs
push
mov
jg
pop
cmp
lahf
shl
ja
jg
cli
xor
push
fwait
push
push
cmp
int
leave
fwait
outsb
push
leave
sarl
cmp
aas
insb
jmp
add
cmpsl
mov
dec
arpl
pop
pop
ss
and
sbb
mov
inc
add
mov
mov
scas
in
ds
add
mov
pop
cmp
pop
inc
fwait
add
mov
repnz
clc
daa
das
push
sbbb
out
add
icebp
dec
shlb
pop
mov
mov
dec
rcr
leave
jp
dec
cltd
jne
ret
xchg
sarb
std
jno
fwait
shll
mov
subb
lret
mov
mov
mov
mov
rorb
repnz
xchg
mov
cmp
jbe
adc
cmp
adc
daa
mov
das
xchg
pop
dec
cmp
or
add
fcmovnbe
dec
lock
test
sub
pusha
adc
jno
xchg
stos
sub
sub
jmp
stos
lret
sbb
das
sarl
cmp
mov
int
pop
loopne
pop
xor
xchg
pop
loope
int3
cli
jae
sbb
ret
cmp
dec
mov
pop
push
dec
arpl
stos
or
lret
or
jg
or
mov
out
inc
loope
jg
insb
int3
iret
adc
pop
cli
adc
mov
cmp
inc
cmp
dec
jl
push
aaa
sahf
pusha
cli
add
jb
jnp
mov
popa
andl
shlb
lds
jg
jmp
add
adc
mov
inc
lock
enter
dec
loopne
adc
xor
cli
into
loope
cmp
stos
pop
addr16
cmp
pop
aad
addl
ret
enter
push
mov
insl
ja
push
push
jnp
mov
xchg
mov
aas
jbe
mov
lock
jno
xchg
stos
mov
xchg
mov
cmp
pop
mov
shrb
pop
loope
in
loopne
mov
mov
test
popf
leave
push
sarb
fadds
mov
mov
inc
pop
xor
mov
lods
lods
inc
add
jae
push
outsb
fildl
mov
or
js
test
pusha
sub
popf
jg
aas
lock
mov
dec
pop
mov
mov
and
mov
add
shl
jl
stos
dec
rclb
popa
repz
add
xor
xor
std
adc
repz
sbb
sahf
and
cmp
sub
push
pop
push
pusha
lds
mov
mov
cltd
cmp
leave
mov
mov
jg
jle
pusha
push
sbb
out
js
orl
loope
adc
mov
sbb
sbb
sti
dec
popf
add
push
add
push
xchg
orb
mov
setbe
add
push
stos
lret
or
mov
mov
push
stc
mov
mov
jge
adc
inc
test
adc
jo
icebp
fwait
sti
xor
add
cmp
outsb
imul
jge
fbld
xchg
cmp
dec
adc
cli
test
inc
pop
push
dec
push
push
aas
pop
push
andb
inc
out
int3
rol
jno
fnstcw
add
pop
std
push
mov
mov
mul
or
jle
cmp
sbb
daa
and
mov
mov
cmp
add
dec
lds
insb
mov
pop
loopne
push
outsl
stos
ja
push
call
cmp
sahf
cmp
cltd
popf
adc
add
mov
sub
adc
pop
xchg
imul
rorl
movsl
add
inc
out
dec
dec
cmp
stc
add
jne
jg
pushf
dec
fldt
adc
cmp
clc
sub
cltd
jo
int
jne
add
xor
mov
cs
lret
mov
fsubrl
sbb
test
add
mov
clc
push
cli
mov
sub
movsb
xor
and
cmp
push
jl
xor
cmp
mov
inc
pop
dec
cwtl
insb
dec
mov
dec
int
loopne
cmp
inc
iret
cld
xchg
xchg
ss
xor
iret
addr16
jae
enter
je
aas
out
cmp
pop
jae
fcoml
push
jo
sub
lahf
xor
add
jmp
mov
outsb
xor
rolb
dec
iret
ja
insb
fwait
pop
lock
test
int
or
nop
add
mov
mov
mov
adc
inc
arpl
xchg
add
sti
enter
push
add
adc
iret
cmp
adc
popf
cld
add
loop
mov
jg
xchg
cwtl
mov
mov
aaa
les
int
mov
dec
int3
pop
jg
jb
push
divb
pop
cwtl
inc
push
shlb
push
sub
add
pop
mov
mov
xor
pop
enter
pop
mov
insb
std
fnstsw
call
int3
dec
adc
xchg
arpl
dec
test
mov
and
ss
xor
ja
adc
icebp
es
jbe
xorl
rcrl
mov
or
sahf
mov
and
loop
mov
cmpsb
sbbl
stc
outsb
mov
inc
push
mov
mov
xchg
shll
fistl
ljmp
push
or
popa
adc
sub
dec
outsb
loopne
pop
mov
adc
ret
bound
xchg
dec
lock
flds
jl
and
xor
daa
adc
pop
xchg
dec
in
and
inc
cmp
dec
jmp
xor
add
lock
push
enter
adc
adc
add
insl
in
les
sbb
cmp
sarl
aam
xlat
add
sbb
fadds
mov
mov
jo
ds
bound
push
into
or
mov
dec
sub
xor
and
aad
movsb
rclb
aam
stc
repz
mov
call
lea
pop
aas
imul
mov
push
dec
push
test
ja
lldt
sub
mov
sub
mov
insb
add
add
add
in
pop
imull
add
xchg
aam
or
jmp
push
lea
mov
xchg
or
sbb
dec
sbb
xor
in
and
push
testb
sbb
imul
dec
jp
test
inc
std
adc
inc
xor
imul
mov
test
dec
repnz
mov
lret
push
in
xor
bound
enter
add
repnz
insb
mov
addr16
push
add
add
into
or
push
dec
mov
jno
cmp
add
loop
mov
in
mov
add
cmp
out
sub
xor
xchg
adc
out
or
cmp
sbb
jnp
pop
repnz
cmp
sahf
test
fwait
add
inc
cmpsl
sub
mov
add
fcompl
mov
aas
test
cli
push
sbb
push
test
add
les
add
cmpsb
sbb
mov
sbb
into
adc
mov
dec
push
or
mov
mov
or
inc
add
pushf
or
rcrb
sbb
call
repnz
dec
test
jno
outsl
mov
mov
in
adc
dec
and
mov
dec
dec
sti
outsb
cmp
inc
out
adc
pop
inc
xorb
push
mov
push
pop
scas
pop
ja
jmp
xchg
adc
mov
cld
mov
cs
shrb
xchg
mov
sbb
fists
xchg
pop
push
shll
mov
lods
loope
scas
adcb
aad
push
cmpsb
stc
dec
xchg
add
inc
popa
and
push
add
ror
xor
es
fidivs
add
loopne
add
sub
xchg
xchg
add
and
nop
dec
mov
xchg
mov
pop
dec
lods
mov
mov
push
ror
cmp
sbb
rcr
cmpb
push
das
dec
mov
ds
xor
adc
jno
ljmp
add
lret
mov
jo
or
mov
mov
and
nop
dec
xor
add
mov
mov
add
mov
rdpmc
add
es
mov
or
or
or
int
or
mov
scas
in
sahf
xchg
cmp
das
push
les
and
push
lds
mov
jne
sbb
iret
add
lcall
xchg
or
mov
in
jb
xlat
aaa
cmp
test
add
and
jmp
ss
mov
add
addl
mov
xchg
adc
mov
es
daa
lret
shl
add
push
enter
sbb
push
push
dec
outsb
push
jmp
add
and
sub
cld
daa
sub
jle
xor
data16
pop
adc
clc
add
jg
subb
push
rol
push
mov
add
push
rol
sub
mov
push
data16
sbb
dec
es
in
imul
add
daa
add
movsb
inc
int3
and
lret
mov
push
push
adc
push
push
push
mov
call
ss
push
pop
push
add
adc
out
clc
mov
enter
xchg
add
pop
sbb
pop
xlat
enter
add
fwait
sbbb
test
jbe
outsb
popa
lea
pop
mov
push
test
add
or
hlt
test
insb
mov
jg
jge
notb
pop
dec
push
scas
outsl
or
pop
psllq
add
jne
adc
cs
cmp
hlt
adc
lock
pop
fiaddl
or
clc
mov
fs
adc
into
adc
ffree
sbb
pop
sub
cmp
shrb
sub
loopne
jl
enter
jno
mov
push
push
dec
fbld
cld
je
or
aam
add
call
add
hlt
and
rcrb
add
in
clc
cli
test
cmp
xorl
add
inc
xchg
xor
add
repz
jmp
test
mov
movsb
add
pop
gs
sbb
shlb
mov
sub
mov
test
je
push
int
nop
std
loope
jl
outsl
jecxz
shl
icebp
add
addr16
mov
in
add
lds
mov
out
mov
scas
pop
loopne
sub
jbe
shl
in
push
out
mov
rcrl
mov
jb
dec
mov
loope
test
sub
add
mov
mov
xor
mov
dec
repnz
add
enter
pop
xchg
sbb
lea
add
scas
aad
ret
jns
cli
mov
insb
mov
test
inc
jno
outsl
sahf
sbb
push
mov
repnz
mov
add
mov
jnp
lea
adc
repz
add
call
add
jmp
pusha
mov
dec
jp
push
add
dec
lea
sbb
inc
inc
push
dec
iret
stc
aaa
add
mov
jnp
push
mov
jge
dec
ret
pop
push
gs
push
pushf
inc
mov
add
and
push
push
lahf
sbb
mov
int3
xchg
adc
dec
loopne
aaa
bswap
mov
aas
ret
push
and
movsl
das
movsb
mov
sub
xor
push
mov
xchg
test
or
rolb
adc
shr
gs
push
frstor
xor
mov
inc
cmp
aaa
xchg
add
pop
dec
stc
jne
cltd
lret
mov
dec
or
mov
xor
ds
xor
shr
sub
mov
inc
mov
xor
cmp
iret
aaa
js
mov
mov
add
add
inc
lcall
push
push
js
sub
lret
mov
add
cmp
jbe
pop
fnstenv
cmp
pushf
das
fs
test
into
add
rol
xchg
mov
add
sbbl
movsb
cmp
add
dec
popf
cmp
xchg
sarl
add
cld
mov
js
xchg
arpl
mov
es
popf
out
add
push
mov
clc
xchg
push
or
add
je
lock
push
mov
cli
or
into
mov
lahf
enter
and
push
xchg
aaa
out
fstl
int3
rolb
cmp
call
xchg
push
mov
and
adc
push
adc
imul
dec
xor
jge
inc
rcll
insb
add
jne
mov
outsl
test
lahf
inc
mov
lods
sub
adc
imul
fs
repz
ss
mov
fwait
add
nop
dec
pop
sti
dec
dec
mov
sub
das
sbbl
jmp
or
jo
push
push
out
mov
inc
popf
sub
pop
sbb
and
test
lds
lahf
xor
sub
and
repnz
jo
xor
in
inc
mov
xor
and
lods
add
sbb
mov
popf
fwait
or
add
clc
cmc
je
pop
jmp
xchg
push
insb
xchg
enter
add
xor
lods
adc
push
faddl
cld
cmp
jne
decb
lcall
cld
jmp
jg
cmp
xchg
add
inc
jle
test
stos
jae
call
mov
arpl
cmp
xchg
xchg
aas
mov
dec
push
add
and
mov
stos
inc
ljmp
fs
es
cmp
pop
jae
adc
test
sub
leave
cmc
jb
out
add
add
pop
push
push
push
xor
pop
mov
push
fsts
cs
mull
add
add
shll
dec
lret
add
std
inc
jg
rolb
dec
mov
adc
sbb
add
test
inc
testl
lea
mov
add
add
repnz
or
push
pop
sbb
ret
mov
push
repz
pop
cmpsl
rcr
add
push
push
jbe
ret
mov
sub
jns
jne
stc
mov
bound
shrl
into
movb
ds
push
sub
mov
push
jge
xor
lods
push
ja
sub
inc
sbb
rcrl
andb
cmp
into
enter
add
push
push
cmpsb
and
xor
inc
es
adc
clc
xchg
mov
and
pop
xor
mov
std
jg
mov
fstp
push
cld
call
test
mov
push
ja
in
cmpsb
jp
jp
add
in
cmp
mov
xchg
data16
cmp
adc
push
mov
or
mov
lea
sbb
xchg
mov
push
test
mov
add
outsb
xchg
cld
dec
add
inc
ficompl
jne
aas
fisttps
sub
push
mov
or
pop
popa
stos
outsb
mov
push
pushf
mov
dec
fs
xor
bound
inc
out
test
mov
in
pop
mov
jge
arpl
test
in
jnp
mov
pop
push
shrb
hlt
movsb
ret
jae
in
sti
ja
outsb
add
test
lock
mov
fstps
xchg
xchg
ja
ljmp
jae
iret
sbb
add
xor
add
jle
aam
call
jb
pop
jae
inc
fsubp
int
or
add
jb
add
mov
mov
mov
lret
call
divl
jg
inc
data16
mov
xchg
push
inc
sbb
mov
fwait
jg
push
jno
add
add
adc
mov
jmp
or
add
push
fdivl
leave
add
dec
sub
jbe
les
ljmp
movsl
mov
adc
jo
push
adc
sbb
js
stc
push
mov
xchg
push
jle
jp
fs
add
aad
sub
in
inc
test
ljmp
adcl
repz
jmp
push
push
add
jns
jge
sbb
dec
rcr
mov
jmp
jbe
mov
inc
mov
icebp
mov
test
jmp
xchg
mov
pop
mov
les
pop
repz
loopne
lds
jle
cli
pop
icebp
in
lea
icebp
sahf
scas
add
outsb
sar
xor
push
push
test
or
add
add
mov
leave
dec
int3
adc
mov
fwait
jns
ficompl
cmp
sbbl
cmc
js
fdivr
rolb
jne
aam
adc
adc
xor
clc
lahf
and
int
xor
xor
fdivrl
mov
or
les
jge
add
outsb
or
dec
pop
adc
iret
add
sbb
adc
clc
mov
jg
mov
fistpll
in
out
xchg
xlat
add
mov
data16
test
and
roll
arpl
push
iret
idivb
jg
jno
xor
mov
push
cmp
aas
outsl
mov
xchg
popf
cmc
fs
add
dec
jnp
pop
leave
add
mov
inc
test
mov
cltd
push
pop
add
rorb
xchg
and
jb
mov
push
and
insb
add
cmp
cwtl
aas
int
mov
nop
push
lods
shl
imul
outsl
xorl
popf
test
sbb
jp
inc
mov
or
inc
mov
xchg
out
xchg
sarl
push
aas
add
int3
mov
add
int
outsl
or
dec
adc
add
pushl
push
lea
mov
call
mov
mov
adc
add
lds
push
aas
mov
mov
jge
mov
int
add
lahf
cltd
lcall
pop
inc
dec
movsbl
push
mov
cmc
mov
cmpxchg8b
push
in
into
add
and
mov
mov
ret
mov
es
pushf
movsl
neg
pop
loopne
dec
and
add
pop
shrb
data16
mov
push
das
jg
cmp
insb
mov
add
mov
sti
xchg
fs
add
lret
les
shll
mov
and
mov
inc
call
or
mov
mov
mov
imul
cwtl
inc
or
out
dec
aad
xor
add
arpl
test
sbb
adc
and
inc
fildll
push
cmp
pop
push
lds
add
movsl
sub
iret
mov
int
outsb
push
mov
add
inc
ror
xlat
rolb
cmc
je
aas
pop
mov
mov
xor
mov
add
push
lahf
icebp
out
hlt
adc
popf
shrb
sbb
addl
mov
outsl
rolb
and
divb
mov
mov
sbb
lret
add
xor
lret
mov
stc
cmp
pusha
add
ds
mov
leave
scas
add
hlt
arpl
dec
inc
sti
add
mov
sub
mov
push
push
mov
dec
add
cs
inc
add
push
fnstcw
and
dec
pop
daa
add
jl
add
add
cmp
aas
test
movsl
pop
adc
inc
lret
das
xchg
add
push
jge
in
stos
imul
xchg
add
inc
mov
pop
mov
pop
cmp
out
shlb
dec
dec
add
pop
mov
push
xchg
add
inc
dec
add
popf
lock
xchg
xlat
ss
repnz
std
mov
scas
pushf
sbb
jae
icebp
rol
add
push
push
jne
cmp
dec
mov
inc
inc
add
add
inc
test
sahf
pop
jg
dec
fbld
outsl
fldl
xchg
add
aaa
sbb
jmp
and
cld
add
mov
sbb
aaa
imul
aam
jl
imul
ss
dec
add
enter
lcall
lock
fdivrl
rcl
cmp
inc
cs
add
aas
mov
cli
rcrb
call
sbb
and
mov
mov
and
adc
lret
dec
fs
shrl
or
or
lret
mov
out
adc
push
jnp
mov
cmpsl
mov
jge
dec
mov
mov
mov
je
add
ror
cmpb
into
inc
aam
shlb
adc
test
mov
cmp
ret
pop
add
inc
xor
add
dec
dec
pop
in
icebp
out
mov
das
or
mov
fldl
push
bound
jne
push
dec
dec
dec
pop
sbb
pop
adc
movsl
ja
daa
sub
int
addr16
sub
mov
jbe
and
push
mov
sbb
xchg
loop
sbbl
add
push
mov
inc
mov
and
xrelease
add
in
out
in
push
int
ret
xor
xchg
jecxz
ret
add
ret
lret
dec
xchg
scas
lds
mov
cwtl
cltd
out
enter
add
add
cmpsb
add
inc
cmp
cmc
cmp
fbstp
mov
ja
inc
adc
movsb
adcl
mov
and
out
mov
int3
push
push
pop
add
sbb
xchg
cltd
add
mov
dec
and
pop
add
adc
out
je
mov
and
lret
sbb
or
sbb
stc
setns
test
inc
sahf
dec
or
or
ret
mov
test
lea
xchg
mov
sub
pusha
jg
sub
add
test
mov
cmp
add
adcb
push
mov
iret
xchg
push
cmp
pop
pop
incb
xor
mov
sbb
jmp
filds
or
addr16
fsubrl
push
pop
mov
sub
lret
pop
cld
push
jbe
add
mov
lock
xchg
sbb
ljmp
mov
jg
je
std
push
add
jno
stc
shr
cmp
or
and
fst
mov
and
mov
sbb
out
addb
jnp
enter
test
stc
insl
imul
aad
push
jp
cmp
dec
sub
cmp
mov
xor
mov
lcall
lret
xchg
xor
add
mov
xor
add
xchg
ret
into
lds
cmp
xor
add
mov
and
imul
mull
jmp
test
mov
cmpl
pop
add
sbb
call
test
xor
cmpsb
out
pop
add
flds
fstl
rcrb
dec
mov
mov
addr16
add
xor
or
sub
fcompl
add
mov
sub
dec
fcoms
mov
jecxz
loopne
jns
mov
ret
in
mul
inc
imul
xchg
pop
shl
sahf
in
rorb
add
push
insb
mov
and
mov
push
jnp
jne
xchg
insb
or
idivl
push
mov
fcompl
jnp
call
mov
adc
das
jp
imul
pop
fucom
cmp
dec
adc
pop
sbb
add
fdivrs
jge
pop
xor
pop
ds
mov
frstor
lcall
loop
xchg
xchg
cmp
fs
jecxz
add
mov
popa
add
and
daa
notb
push
jle
mov
lahf
pop
adc
dec
.byte
add
fs
dec
add
int3
mov
sub
mov
outsw
jle
or
insl
pop
aas
fwait
cmp
rclb
arpl
movsb
iret
call
lcall
xor
push
or
push
sbb
inc
mov
mul
cmpsb
add
mov
add
jmp
jne
add
fstpl
pop
add
inc
movsb
mov
push
stos
ss
or
or
cs
mov
daa
in
inc
sbb
or
sub
mov
es
add
jge
lea
mov
call
xor
fmul
or
jo
push
outsb
int
or
pop
scas
fwait
dec
pop
xor
add
mov
dec
add
adc
jecxz
cmp
leave
add
add
xchg
mov
or
outsb
mov
add
repnz
cmp
and
pop
add
pusha
sti
pop
gs
mov
aas
clc
sbb
lcall
xrelease
adc
icebp
or
mov
stos
mov
cltd
int
call
push
mov
outsb
test
cmp
cmp
in
int
mov
mov
add
and
loopne
mov
jge
pop
ret
push
fdivrs
hlt
add
dec
cmp
cld
imul
ljmp
mov
mov
in
or
inc
add
mov
cmp
mov
sub
xchg
jbe
lds
scas
dec
aas
aad
insl
in
bound
mov
mov
push
add
pop
jo
or
inc
into
mov
jge,pn
adc
push
fistpll
fnsave
std
out
jbe
test
xor
nop
cmp
push
mov
loop
data16
pusha
test
push
aas
out
jo
inc
add
pop
jb
negl
add
fbld
ja
jo
es
push
test
xchg
loope
imull
mov
mov
push
jno
mov
call
mulb
or
xor
dec
cmp
pop
lds
nop
mov
xchg
push
adc
movsl
xor
lahf
inc
jae
pop
add
icebp
not
leave
mov
push
inc
movsl
add
clc
pop
inc
mov
ret
icebp
adc
pop
mov
push
rolb
mov
adc
lock
mov
mov
adc
mov
mov
lret
xlat
push
sbb
outsl
aas
sar
out
add
je
add
das
sbb
mov
iret
sbb
mov
pop
pop
xor
xor
gs
mov
inc
iret
mov
mov
mov
add
andb
ret
jecxz
pop
cmp
pop
lds
sbbb
out
push
int
leave
push
add
jle
sbb
sbb
hlt
xchg
scas
cld
test
sarl
rolb
inc
inc
scas
mov
or
inc
xor
rclb
negl
or
daa
xchg
mov
not
inc
enter
stos
loop
sbb
nop
add
adc
sbb
pop
xor
cwtl
int3
punpckhwd
add
fwait
jnp
out
adc
fists
enter
push
inc
add
add
cmp
push
xor
inc
inc
add
add
add
add
xor
add
push
add
jb
add
pop
add
add
insl
add
add
pop
push
push
add
dec
add
add
add
add
push
data16
inc
outsl
add
insl
add
add
imul
add
add
xor
jno
add
add
add
insb
outsb
jno
add
add
add
add
add
push
push
add
inc
fistps
shlb
add
cmpb
cmp
and
int
aad
pop
xorb
cmpsl
cmpl
jecxz
pusha
mov
mov
cmp
out
out
call
repnz
xlat
cs
test
sub
std
adc
mov
sbb
mov
inc
mov
call
in
out
in
bswap
sahf
mov
adc
icebp
add
add
cmp
jl
pop
out
dec
cli
add
jecxz
insl
inc
sub
loop
push
mov
popa
inc
sbb
arpl
les
mov
decl
sbb
mov
loopne
xchg
xchg
cmp
insb
xchg
outsb
sbb
pop
fidivl
fs
clc
mov
jne
or
inc
mov
es
hlt
test
in
mov
mov
mov
les
add
mov
and
push
xor
mov
jae
push
pop
fildl
mov
cld
shl
or
repz
push
mov
adc
mov
bound
xlat
js
jne
scas
mov
movsl
xchg
mov
sbb
fnstcw
jl
fistl
sbb
mov
leave
pop
add
xlat
test
dec
lret
sbb
mov
bound
fisubrs
std
lcall
enter
sahf
mov
cwtl
dec
cmp
push
pop
mov
mov
out
adc
lea
or
je
call
inc
movsl
pop
out
pop
lahf
addb
cmp
jae
sub
out
add
jmp
iret
mov
sbb
sub
add
push
mov
fs
mov
cs
lahf
insl
cli
push
lea
mov
dec
movsl
or
shll
aam
movl
cmp
sbb
cmp
sarb
add
and
outsl
cli
mov
test
shlb
sbb
mov
lret
cmp
or
mov
cmp
mov
sbb
mov
cmpsb
sahf
inc
into
jl
andl
cmpsb
cmp
dec
xor
or
adc
in
add
rcrb
repz
sahf
pop
test
mov
mov
in
jg
xorb
adc
jbe
mov
push
lcall
ljmp
xor
cwtl
ljmp
leave
jne
mov
or
and
mov
es
pushl
lahf
call
add
sub
dec
push
mov
sub
mov
fs
cmp
test
xchg
pop
bound
je
push
xorl
push
and
xorb
mov
xor
repz
cmp
push
jg
mov
mov
and
inc
cmpsb
sbb
iret
jecxz
sti
jb
das
or
pop
sbb
sahf
push
push
and
es
subl
loopne
adc
clc
mov
jge
aam
icebp
mov
pop
pop
xchg
in
xchg
mov
dec
sub
pop
es
jno
divl
lcall
in
push
rcrl
mov
lods
add
mov
mov
fildl
out
lods
ss
cltd
xor
gs
sub
xchg
sub
in
pop
jle
or
ljmp
enter
shrb
cmp
daa
mov
popf
xchg
mov
test
jns
and
enter
dec
aaa
adc
scas
jae
sbb
add
sbb
jns
push
cmp
pop
add
jmp
das
imulb
jnp
jp
cmp
adc
mov
aas
cmp
lea
popa
les
mov
xor
push
int3
mov
mov
or
aas
shlb
add
cmp
stos
jmp
loop
shrb
js
push
sahf
add
insl
test
and
jecxz
mov
hlt
mov
mov
mov
push
mov
test
jne
dec
subb
sub
cmc
es
add
or
mov
sti
xchg
mov
xor
movsb
mov
push
fstpt
imul
mov
int
xor
xchg
loope
std
push
sarb
adcb
jge
jge
aad
push
repz
sbb
pop
pop
std
cmp
mov
mov
iret
cmp
into
mov
mov
add
mov
mov
loope
xor
test
std
xchg
adcb
daa
shrb
jle
dec
xchg
add
popf
jbe
out
aas
popf
inc
or
enter
sbb
in
cmp
push
push
pop
xchg
add
push
shlb
repnz
ja
aaa
mov
mov
mov
out
test
ret
mov
fs
or
ret
xchg
xchg
dec
and
sbb
in
dec
dec
lods
bound
sarb
xchg
cmp
and
je
loop
clc
hlt
or
inc
xor
cmp
pop
insl
in
mov
mov
mov
stc
fmuls
mov
ret
cld
or
or
mov
stos
mov
jnp
andl
notl
les
mov
and
xor
mull
mov
pop
xor
mov
jge
cmpsl
cmp
in
mov
popf
mov
or
jnp
push
cld
xor
call
push
adc
imul
lods
xchg
dec
or
mov
dec
jnp
xchg
push
or
ss
popl
mov
mov
cmp
lods
and
nop
mov
sbb
notl
out
lcall
imul
icebp
das
sub
bound
fadd
xchg
aam
xchg
sub
pop
xor
or
outsl
dec
sub
mov
push
fstps
jae
inc
lock
push
xor
lret
fistps
pushf
mov
cld
add
cmpl
add
fsubrl
mov
jbe
es
cwtl
testb
aas
lods
mov
cmp
inc
or
jb
mov
or
std
lret
scas
imul
xor
repz
and
lock
or
xchg
inc
sub
cmp
scas
pop
add
fnstcw
lods
cmp
push
mov
test
jo
push
call
jnp
jg
mov
cmc
sub
add
dec
lea
and
ret
test
jbe
orl
pop
idivb
cmpsb
add
lahf
sub
cmp
mov
cmp
push
faddl
hlt
leave
xor
repnz
pushf
out
inc
or
das
outsl
ja
aaa
mov
mov
into
adc
les
pop
adc
xor
testb
adc
lods
rorb
sub
sahf
or
cmp
les
or
mov
xor
xor
adc
shll
or
xor
xchg
xor
arpl
xor
dec
testl
lea
rclb
notb
dec
test
loop
ret
pop
pop
lea
imul
cmp
nop
mov
sti
jmp
sahf
mov
in
cmc
call
shll
sqrtps
sbbl
jbe,pt
mov
js
ror
mov
test
stos
sbb
xlat
rcrl
mov
test
jge
or
addr16
dec
rcll
pop
jo
cmp
mov
xor
xor
cmp
cmc
sbb
mov
loopne
jbe
adc
aam
cmpsb
out
inc
sbb
inc
mov
sti
mov
mov
push
cwtl
or
pop
mov
ljmp
aam
mov
fildl
stos
fisubrs
cmp
adc
mov
mov
rcrb
adc
sahf
and
adc
imul
aam
xchg
dec
push
lahf
ss
push
int3
or
dec
loopne,pt
in
popf
mov
movaps
adc
cmp
adc
push
xor
adc
inc
dec
jae
dec
int3
rcrb
loope
sbb
pop
add
jg
sti
push
cmp
dec
test
std
cmp
dec
je
and
mov
insb
xchg
out
jg
popa
push
rorl
popf
in
mov
or
cmp
icebp
std
jb
aas
fs
jne
push
or
es
nop
loop
icebp
sub
dec
dec
lock
mov
xor
jl
xchg
dec
or
cwtl
jns
mov
rorb
push
and
adc
sti
dec
sti
cmp
cld
mov
jge
add
cmpsl
mov
lock
sbb
xchg
mov
mov
enter
push
call
sub
iret
lcall
dec
testb
into
test
ljmp
stos
mov
dec
pop
jbe
mov
push
enter
pop
lods
ror
repnz
inc
or
pop
push
mov
popf
adc
decl
cld
call
gs
mov
jmp
cld
imul
lods
and
pusha
mov
dec
mov
or
mov
xchg
test
sbb
sub
lods
mov
pop
xchg
movsl
mov
into
add
push
popf
js
mov
or
mov
mov
ficoms
lock
push
mov
push
sub
cmp
subb
das
push
popf
pop
add
mov
mov
xchg
cmp
shlb
aam
insl
iret
dec
mov
icebp
pop
lock
cli
jl
out
std
adc
sub
sbb
push
xor
xor
jge
push
jb
sbbb
shl
xchg
js
outsb
daa
dec
fwait
mov
cmp
mov
stc
jge
leave
cltd
aad
into
add
inc
dec
xchg
xor
xor
ss
cs
cmp
jl
mov
lods
sub
test
loope
fisttpl
mov
addb
sahf
lahf
mov
pop
cmpl
pop
pusha
stos
sbb
test
sbb
jb
test
or
mov
dec
mov
mov
jae
push
cmp
or
je
jge
sub
and
and
sti
add
nop
sub
sti
sub
test
jae
xchg
fdivl
and
mov
aam
or
jnp
je
hlt
mov
mov
xor
call
out
call
sahf
cltd
lea
lret
les
out
orb
mov
dec
and
jg
push
js
xchg
mov
cld
cmp
add
inc
lcall
test
inc
fsubs
ficompl
mov
inc
mov
cmp
lea
mov
mov
xor
push
shrb
clc
inc
push
jo
scas
icebp
sbb
mov
cmp
jne
mov
push
test
lcall
xchg
jmp
js
mov
add
imul
cltd
das
test
inc
shlb
pop
jns
hlt
dec
icebp
push
jae
nop
mov
lcall
movsb
dec
lods
shrb
lcall
and
sub
ja
xor
xchg
or
sti
mov
cwtl
or
add
scas
pop
in
in
xchg
mov
loop
pop
imul
adc
and
lods
movsb
popf
mov
mov
lods
push
cmp
fadds
mov
into
or
xchg
popf
movsl
gs
cmp
add
push
push
int3
shl
mov
lods
nop
mov
cmp
in
test
scas
test
cwtl
or
mov
cmp
jae
test
push
jae
sub
cmp
dec
jb
fbld
xchg
pop
dec
or
cmpsl
push
call
loopne
add
subl
sbb
cli
mov
or
mov
push
arpl
and
xor
cmp
sahf
or
pop
hlt
or
sbb
xor
jne
leave
xor
sub
adc
jp
xchg
stos
xchg
jo
outsb
fs
xor
push
dec
insl
adcl
mov
xor
mov
js
mov
ret
pushf
inc
iret
jno
iret
pop
xor
mov
sbb
in
jmp
cli
inc
xchg
popf
icebp
sbb
sub
jno
xchg
outsb
and
jge
jp
std
fidivl
in
clc
mov
inc
iret
dec
cmp
jge
fimull
inc
insb
test
fwait
push
mov
js
fsubrs
icebp
mov
dec
fidivl
ret
xchg
push
add
pop
push
mov
out
inc
out
outsl
mov
mov
sbb
push
xor
jnp
push
inc
lea
dec
or
sbb
aaa
hlt
jb
xor
mov
pushf
dec
out
ja
adc
insl
lods
sar
ja
bound
xor
push
adc
sahf
push
lret
and
mov
mov
sar
ss
popl
ss
dec
sub
inc
icebp
arpl
outsl
orl
addr16
xchg
xor
mov
cld
xor
xor
xchg
dec
xchg
inc
bound
xor
out
inc
icebp
aad
push
sbb
adc
xchg
gs
cmc
fsubs
sti
js
inc
rorl
jg
xor
or
add
jmp
push
icebp
lahf
inc
in
push
mov
dec
out
push
mov
xchg
dec
mov
push
ja
ljmp
hlt
fwait
imul
pop
xor
out
pop
cmp
cmp
inc
adc
cmc
xor
nop
cmc
rclb
xchg
push
sub
imul
movsb
in
sbb
ret
add
imul
push
jne
jnp
aaa
lret
sbb
xor
inc
cld
mov
outsb
js
sbb
inc
jecxz
push
mov
cmp
mov
das
pop
xor
or
jnp
jne
or
cmp
stos
mov
call
cmp
loope
push
inc
out
pusha
scas
push
add
stos
dec
call
push
xchg
jmp
call
dec
nop
cli
xchg
jne
shrb
dec
xchg
out
xchg
cld
adc
sbb
mov
subl
imul
in
leave
and
and
sub
push
leave
ret
es
sahf
rol
cmc
addr16
pop
push
push
inc
push
dec
lds
push
je
pop
dec
in
xor
mov
push
lods
arpl
fs
mov
inc
inc
icebp
dec
lret
add
gs
in
push
pop
mov
xor
sub
mov
inc
mov
xchg
repz
popf
inc
xchg
scas
dec
mov
xor
mov
cmp
in
push
xor
test
stos
test
mov
mov
hlt
test
fsubl
push
adc
xchg
xchg
mov
mov
adc
in
into
sti
add
les
mov
mov
cmpl
inc
das
test
and
sub
push
sbb
lret
movsl
stos
xor
fcoml
add
push
push
push
push
push
arpl
mov
xor
call
js
imul
retw
push
out
mov
mov
pop
cmpsb
and
xor
lcall
mov
dec
outsb
dec
dec
ja
pop
std
insb
aaa
mov
pushf
out
enter
or
xor
ja
inc
mov
xor
pop
or
mov
inc
jno
dec
push
in
arpl
ret
dec
push
insl
ljmp
pop
jb
xchg
mov
sahf
xor
dec
mov
push
lret
jmp
stos
lods
dec
xchg
jmp
sub
popa
hlt
jb
jecxz
test
xchg
or
fs
out
fucom
insl
jo
ja
dec
hlt
dec
xchg
sub
out
jnp
pop
loope
aaa
sub
jne
fstps
call
sbb
loop
adcl
xchg
push
xchg
dec
stos
std
pop
jo
xor
dec
jae
xchg
jns
inc
sbb
xor
push
add
les
mov
scas
into
mov
ret
or
xor
mov
cmp
int3
fnstsw
push
fidivrs
cmpsb
scas
cmpsl
daa
or
lret
xor
lock
pop
int
add
cmp
cld
scas
shll
stc
cmp
cmp
xchg
xor
aas
or
mov
rolb
outsb
push
or
pop
fdivrs
mov
pop
sbb
mov
adc
dec
sahf
jg
gs
fadds
add
cmpsb
je
add
xor
xor
pop
mov
dec
dec
inc
xchg
lds
aas
pop
inc
es
stos
mov
cwtl
out
add
push
insl
pop
pop
mov
add
push
xchg
popl
sub
scas
xchg
xchg
call
cmp
inc
stos
in
out
pop
add
xchg
add
xor
push
push
jg
fdivs
push
mov
fmull
jae
add
mov
aas
xchg
mov
mov
mov
jl
push
cmp
fadd
add
push
not
mov
lahf
mov
outsb
cld
les
and
movsl
js
mov
cmpsl
cmp
pop
cmpsl
pop
fwait
scas
lods
ds
cli
push
rol
dec
out
aas
mov
add
ja
out
notb
add
popa
push
lahf
mov
jbe
ss
push
pop
dec
std
cli
divl
pop
push
out
sbb
cmpsl
clc
ja
pop
mov
sbb
or
cmp
jg,pn
and
fwait
loope
test
cmpsb
pop
or
cli
pop
dec
int3
inc
mov
jl
jp
aaa
pop
rcpps
out
shlb
mov
mov
push
jg
push
test
outsl
cltd
mov
cmpb
pop
scas
inc
aas
mov
outsl
mov
stc
adc
mov
movl
push
push
stos
add
mov
mov
mov
sub
outsb
insb
cmp
cmpsb
and
pusha
xchg
mov
jnp
lds
jl
or
outsb
lahf
iret
xor
cmp
and
push
mov
pop
inc
dec
roll
int3
mov
cli
add
mov
add
and
hlt
xchg
test
mov
add
jo
cmp
imulb
adc
int
add
and
faddl
cmp
enter
mov
cmpsl
push
push
mov
cwtl
das
incb
mov
mov
push
sbb
stos
dec
add
sbb
stos
rep
lods
das
mov
lea
mov
mov
jl
cwtl
inc
or
ret
sti
push
jmp
pop
mov
adc
add
std
xchg
addr16
push
jae
lahf
das
int3
mov
icebp
push
mov
js
jge
cmpb
aas
cmp
into
mov
ss
hlt
mov
dec
jnp
addr16
pop
push
outsl
ss
out
sahf
lret
dec
pop
and
outsb
sbb
mov
xchg
fnsave
or
movsl
dec
pop
mov
das
scas
sub
mov
out
cmpsl
stc
movl
ja
loop
lret
cmpb
fldenv
dec
inc
pop
lock
mov
sbb
daa
inc
das
push
mov
and
dec
pop
mov
fildll
cmpl
cs
in
and
daa
jae
xchg
testl
mov
dec
cmp
lahf
daa
pop
mov
lods
fbstp
scas
cld
stos
xchg
xchg
rolb
jo
cmp
mov
dec
pusha
neg
push
inc
mov
cmp
stc
ss
mov
sahf
pop
incl
movb
aad
lds
movsl
les
sbb
divb
or
mov
xlat
scas
out
xor
pop
cmpsb
adc
cltd
cmpsl
mov
or
cmp
dec
cmp
dec
xchg
bnd
dec
dec
pop
add
push
cmpsb
lods
dec
faddp
sub
in
fwait
xlat
xor
es
addr16
mov
xor
mov
add
or
leave
lahf
inc
out
pop
mov
out
inc
aas
mov
repnz
or
cld
pop
xchg
jle
jecxz
cmp
push
add
dec
test
pop
out
mov
xor
daa
call
pop
lods
cmpl
fidivrs
scas
rorb
popf
pop
out
adc
and
mov
lods
cmpsl
cld
outsl
stc
outsb
ret
jg
sub
repz
adc
je
push
or
aaa
lahf
negb
int
add
pop
jg
sbb
test
push
push
data16
into
xchg
add
test
push
jl
loope
aad
mov
test
adc
add
movsb
std
mov
jecxz
add
nop
jbe
aam
imulb
mov
sti
test
fsubrl
sahf
inc
loopne
ja
testl
pop
test
xor
jne
pop
jae
pusha
pop
rolb
push
inc
xchg
add
mov
cwtl
fwait
jno,pt
rcl
repz
rorb
xor
aas
fnsaves
stos
bound
xorl
cmp
lock
pop
pop
movsl
pop
jge
add
scas
adcb
aad
xor
add
fucomip
or
pop
inc
test
call
jb
loopne
sbb
out
push
jg
pop
cmc
aas
mov
mov
pop
jecxz
stos
scas
in
mov
sub
popa
les
stos
test
dec
jle
jns
mov
out
mov
test
mov
sub
mov
lahf
pop
lcall
int3
out
mov
inc
das
sbb
inc
mov
and
xchg
fcmovnb
or
sarl
xor
cmc
pop
cld
insl
mov
outsb
mov
push
repz
or
add
xchg
out
fwait
cmpsl
faddl
aaa
shrb
cmc
cmpsl
bound
in
dec
and
pop
fsubrl
dec
add
jnp,pt
and
repz
or
aam
mov
mov
repz
ret
orl
add
repnz
stos
into
idivb
add
or
mov
and
arpl
pop
pop
xchg
and
mov
xor
cli
jl
jg
pop
mov
aas
mov
inc
xchg
inc
sub
aaa
addl
dec
pop
xchg
test
xor
decl
outsl
push
add
mov
outsb
fdivrl
mov
sbb
mov
adc
push
pop
mov
push
das
aas
stc
push
dec
int3
lods
movl
das
data16
cltd
cmc
and
cltd
sahf
jp
mov
insl
scas
out
jo
scas
adc
and
test
aaa
jnp
int
es
repz
rolb
mov
cmpsl
in
inc
pushf
scas
cs
cmpsl
fistpl
ljmp
stc
cmpl
in
cmpsl
xlat
add
jg
xchg
xchg
loope
inc
daa
add
dec
or
push
mov
mov
jg
add
mov
xchg
or
cmp
sub
jp
jle
inc
add
jae
push
jecxz
add
aaa
push
lds
fcomps
cli
fildll
jmp
mov
xor
or
push
and
pop
imul
mov
cmp
sbb
push
das
jl
pop
dec
xchg
in
cmp
idivl
fst
dec
mov
sub
stos
pop
icebp
cmp
add
xchg
push
push
xchg
jecxz
sahf
pop
mov
out
repz
xor
fidivrs
mov
lods
jnp
cs
or
pop
mov
mov
movb
inc
test
pop
sbb
push
and
std
xor
jge
mov
ret
das
inc
add
push
add
scas
das
mov
adc
imul
or
scas
inc
dec
lock
and
add
jne
mov
orl
adc
test
dec
mov
mov
repnz
repz
xor
or
inc
or
fildl
jno
scas
inc
inc
aaa
outsl
add
and
lods
dec
loop
mov
out
pop
mov
stos
sub
hlt
pushf
cmpsl
pop
mov
pop
cmpsb
sub
mov
pop
mov
mov
push
outsb
mov
out
pop
scas
cmp
add
mov
mov
pop
aas
mov
jg
cmpsl
inc
cmp
fidivrl
ljmp
and
rsm
xor
test
lahf
mov
jo
mov
pop
popf
pop
mov
arpl
jg
xchg
push
ret
repz
sbb
lret
mov
out
call
and
fwait
jecxz
data16
jg
sbb
cmpsl
into
push
add
and
add
cmovge
dec
das
cmp
mov
jno
sub
add
cmp
cmpb
fnsave
cmp
movl
and
not
xor
and
iret
cmpsl
fsubl
push
pop
sbb
fnstsw
mov
es
mov
sarl
cli
adc
inc
std
pop
mov
xor
jl
add
out
out
btc
stc
ret
aaa
mov
mov
xchg
outsb
mov
dec
int
out
sti
fiadds
xchg
pop
mov
aad
scas
cld
dec
loopne
cmpsl
notl
cltd
fsubs
ds
out
stos
aam
and
imul
ss
bswap
es
mov
outsb
ja
lret
mov
ljmp
mov
jg
divl
les
scas
and
mov
test
cwtl
mov
pop
dec
in
pusha
mov
mov
sbb
sbb
rcrb
das
int3
push
xor
cwtl
je
pop
pop
push
or
pop
mov
mov
rcrb
and
mov
push
mov
nop
jae
neg
xchg
repz
mov
ss
les
call
fadds
mov
or
or
mov
push
add
popa
addr16
loope
push
lret
inc
jno
xor
dec
push
jnp
imul
ja
push
imul
cmp
inc
xor
add
pop
mov
dec
mov
jb
scas
push
push
inc
push
jno
inc
xor
dec
jbe
dec
sbbl
push
dec
ss
push
push
cmpsb
push
fnsave
jg
jns
imul
xor
xor
pop
shrl
hlt
je
ja
cmp
dec
xchg
mov
inc
xor
push
movd
add
dec
jae
dec
inc
cmp
lea
push
call
xor
test
dec
dec
dec
insl
pop
push
mov
int
cmp
imul
data16
inc
ds
loope
xor
push
inc
adc
inc
add
bound
fidivs
inc
mov
pushw
movsb
mov
inc
jle
jae
enter
hlt
dec
mov
dec
sub
mov
sbb
ljmp
jecxz
or
mov
lret
mov
dec
cwtl
mov
xor
negb
push
ss
out
dec
mov
xor
int
mov
jne
lods
add
mov
push
inc
xchg
jo
sub
aaa
ret
in
push
mov
divb
lret
lods
push
clc
mov
je
inc
ja
in
jp
pop
jbe
pop
bound
cmp
and
into
insl
jp
fs
enter
dec
inc
mov
jae
lea
inc
stos
xor
push
xchg
or
jl
dec
cmpsl
insl
cs
sub
test
inc
jns
in
call
and
imul
push
xor
arpl
clc
rcrb
sub
jbe
inc
ror
cmp
mov
dec
fidivl
push
xchg
enter
xor
or
hlt
inc
and
push
lock
stos
push
ss
js
sar
lds
xor
add
imul
outsb
mov
sti
dec
addl
imul
jbe
and
inc
imul
das
push
add
xchg
cmp
mov
cmp
xchg
andb
inc
je
iret
bound
mov
jecxz
pop
cmp
icebp
fs
mov
jbe
out
cmc
sub
xor
lds
xor
sub
pop
jne
cld
inc
ss
fucomip
loop
cltd
lcall
dec
nop
mov
sbb
ss
xchg
sti
xor
dec
xchg
adcl
xor
mov
jp
jo
cltd
cmp
outsb
xchg
outsl
push
mov
cld
loope
dec
and
pop
cmpb
inc
adc
sbb
xorl
fs
out
push
shll
inc
jne
sbb
in
lcall
xchg
cmpsl
aaa
jp
out
mov
ret
jmp
sti
test
pop
dec
into
das
out
cltd
mov
adc
dec
pop
sbb
sub
shll
sbb
add
stc
mov
inc
ficoml
sub
xchg
data16
cmp
or
sub
inc
iretw
push
pushf
rcll
out
in
push
fwait
inc
push
pop
push
xor
test
jo
xchg
push
fdivrl
sub
mov
cmp
jl
iret
sbb
insb
xchg
xor
enter
mov
mov
and
cltd
sub
imul
fcmovb
mov
gs
movsb
arpl
lods
int
push
popl
inc
dec
outsl
js,pt
ja
cld
or
inc
std
push
add
mov
mov
jnp
sti
dec
jae
stos
test
mov
out
pop
test
inc
xchg
jmp
arpl
rorl
add
ja
cld
je
mov
divl
lret
jmp
add
jg
or
mov
aam
mov
xor
jne
jge
add
lret
je
insl
scas
xchg
inc
mov
test
cmpsb
add
jo
mov
sub
cld
pop
add
push
ja
cmp
addr16
add
cmp
or
xchg
mov
add
or
jne
push
std
jmp
sbb
push
test
jl
fstpt
psrad
lret
or
push
mov
mov
arpl
mov
add
add
push
mov
std
cld
or
push
ja
jmp
or
fcomps
fldl
cld
jl
and
add
fimull
add
push
pushf
test
movsl
cmp
add
sbb
cmpsl
jne
add
push
popa
das
fistpll
test
add
add
scas
jge
jno
add
ret
dec
jmp
int
mov
or
jecxz
mov
xlat
stos
jmp
adc
test
jp
inc
icebp
out
add
call
int3
cmp
and
lea
test
dec
dec
fcoms
faddl
mov
call
cmpl
add
mov
mov
imul
cmc
test
aas
repnz
repz
mov
xchg
pop
aad
rcrb
dec
jp
vsqrtss
mov
adcl
test
xchg
in
and
add
mov
jl
push
cli
insl
test
cltd
in
pop
push
pop
add
cmpsb
leave
add
push
add
ret
imul
adc
loop
maskmovq
imull
cltd
cwtl
add
cmp
mov
or
jne
cmp
imul
mov
test
dec
xor
jnp
jns
dec
jno
leave
pop
adc
cmpl
adc
sub
pop
pop
clc
test
push
push
add
stos
rcrb
push
sub
or
jge
mov
jg
int3
aam
mov
scas
mov
lods
cmp
sbb
loopne
add
out
push
jmp
sti
lods
mov
mov
pop
inc
loopne
cmp
dec
in
add
fisubs
jge
push
aaa
inc
add
sub
fwait
addr16
loope
cmc
jmp
js
loopne
push
test
aas
adc
enter
std
add
ret
or
scas
pop
add
loopne
add
lahf
cmp
add
enter
inc
and
dec
lock
mov
add
inc
fcmovnb
ljmp
hlt
testl
inc
pop
sub
add
rol
jb
cmp
pop
sub
jbe
dec
inc
add
nop
pop
sarl
and
push
mov
call
xchg
xor
out
cwtl
addr16
mov
xchg
addr16
enter
or
or
clc
add
movsl
loope
push
scas
aas
mov
cmp
fldl
cmp
push
je
inc
pop
cmp
jle
push
inc
inc
aas
leave
or
aaa
cmpsl
std
pop
lret
jmp
jne
aas
push
mov
sarl
idivb
into
andw
mov
je
add
push
dec
add
cmp
pop
lret
cmp
inc
popa
add
push
lea
cld
add
sbb
cmp
pop
inc
roll
incl
rol
push
sub
jmp
add
lock
or
mov
pop
ret
add
test
push
dec
ltr
jge
dec
divb
inc
inc
pop
mov
cmp
stc
lret
add
add
mov
fimull
push
push
push
call
sti
add
or
call
mov
leave
pop
out
xchg
mov
sub
adc
call
jnp
dec
mov
hlt
das
es
mov
sub
fists
add
push
mov
pop
jg
xchg
lock
jae
hlt
add
mov
outsb
pop
jmp
mov
cmpb
or
pop
loopne
int3
mov
add
aam
adcl
into
test
add
mov
inc
cmpsl
add
mov
pop
inc
dec
inc
xchg
cmp
cmp
shrl
add
mov
dec
daa
add
add
movsb
cmpsl
cmp
add
pop
dec
sub
pop
orb
adc
add
sbb
lea
add
push
xor
fstpt
jmp
inc
pop
outsl
push
pop
or
lret
push
add
imul
stos
repz
jno
mov
dec
rcrb
jnp
mov
mov
bound
outsl
xor
xchg
add
aad
add
add
pop
xchg
or
xchg
push
lahf
add
test
jne
push
cwtl
and
adc
imul
inc
or
and
jg
idivb
les
lret
fbstp
call
mov
push
push
jne
jp
inc
dec
inc
xor
test
jae
inc
adc
std
jl
loop
arpl
xor
pop
roll
xor
pop
jne
lea
test
and
js
sbb
xchg
dec
add
jne
stos
lock
nop
push
or
out
pop
stos
lcall
aam
cmp
cld
outsb
dec
fadds
xchg
jnp
mov
push
mov
clc
add
cld
rcrb
stos
call
add
mov
pop
push
mov
jge
pop
jbe
inc
xchg
add
mov
add
mov
jg
or
loope
mov
jbe
lods
negb
dec
mov
ret
add
fdivr
test
sbb
filds
mov
mov
stc
add
sbb
add
add
xlat
subb
int3
xor
icebp
test
test
dec
push
cmp
aaa
lods
sub
jmp
movsl
cmc
cmp
int
dec
xchg
xchg
xor
cltd
test
outsb
pusha
push
and
mov
into
jg
pop
daa
push
add
cmp
adcb
fistpl
addr16
inc
mov
xchg
dec
cmp
mov
jmp
bound
add
lock
add
jmp
mov
pop
add
add
add
xor
cmp
jno
leave
sbb
iret
inc
test
and
rolb
push
add
mov
inc
shrl
add
sub
hlt
adc
add
mov
js
sarb
add
call
adc
lret
xchg
jo
aaa
into
push
and
sti
int3
hlt
add
xchg
mov
aas
cmp
movsl
jnp
mov
xor
fs
mov
and
ja
add
decb
cmp
push
adc
hlt
dec
in
lcall
scas
add
stos
ror
jo
push
add
mov
jae
mov
cmove
dec
dec
fldt
arpl
movhps
insl
pop
push
push
add
mov
mov
mov
pop
nop
fildll
cld
aad
shlb
sbb
scas
xchg
jae
mov
sub
dec
fldl
in
cmp
and
adc
daa
jl
aam
xchg
int
add
fildll
sbb
pop
add
push
sti
mov
and
test
pop
fsts
and
pushl
mov
mov
xchg
xchg
pop
push
je
jae
popa
add
pop
push
shr
pop
inc
add
pushf
sbb
mov
dec
inc
aaa
fisttps
push
dec
jne
adcl
push
xchg
add
sub
sbbl
aas
inc
rcr
loopne
jmp
mov
pop
popf
rolb
fcmove
push
call
daa
dec
idivl
pop
or
add
test
mov
jne
dec
add
add
cmc
add
cmp
sar
fs
dec
mov
sub
aaa
test
push
addr16
dec
cmpl
mov
pop
sbb
push
xchg
dec
add
gs
daa
movsb
daa
push
stos
or
lret
cmp
ret
adc
add
std
hlt
xlat
daa
lea
mov
cmp
aas
testl
push
push
add
stos
mov
andl
mov
mov
icebp
int
cmp
stc
push
sbb
pop
and
pop
mov
sbb
mov
lret
inc
in
add
leave
sbb
pop
fistpll
nopl
test
push
in
mov
pop
stos
inc
arpl
jg
sbb
out
xor
push
lahf
push
sarl
addr16
mov
add
jno
sub
ret
ljmp
dec
add
add
call
cmp
push
hlt
or
mov
dec
xchg
push
push
pop
push
push
push
mov
push
inc
jmp
out
rclb
test
stc
jb
lds
inc
push
ljmp
inc
sbb
jne
mov
test
ds
lret
filds
add
rep
mov
mov
mov
mov
xor
inc
sbb
loop
movb
cmp
mov
mov
mov
add
add
inc
pop
xor
sub
ret
inc
sbb
and
jmp
add
enter
repnz
or
out
add
inc
sbb
cld
jge
sbb
je
and
add
iret
icebp
inc
jne
in
inc
pop
addr16
mov
xor
test
data16
xor
movd
jne
pop
scas
js
add
jnp
dec
addr16
jmp
out
pop
xchg
add
es
push
dec
daa
xor
jne
out
push
mov
pop
sbb
enter
jmp
ja
mov
hlt
push
lret
add
addr16
shlb
add
int
fs
add
xor
addb
xchg
add
iret
lock
sbb
ret
add
test
popf
jge
jle
xchg
jle
imul
add
cltd
call
rolb
pop
ja
push
add
inc
and
popf
cmp
sbbl
cld
sbb
inc
sti
add
push
mov
and
pop
iret
out
mov
clc
decb
dec
cld
and
jecxz
pop
fwait
mulb
or
xchg
out
jl
insl
sub
loop
mov
inc
add
inc
mov
call
sahf
mov
xlat
lret
enterw
int
push
mov
sar
sbb
fbstp
or
inc
jp
pop
iret
add
sub
pop
subb
push
sub
in
outsl
sarl
jg
das
iret
or
xlat
aas
cmp
jge
inc
push
add
cmc
popf
into
jns
sub
nop
stc
lods
inc
or
cmp
mov
mov
pop
mov
hlt
int3
rorb
dec
lret
push
jmp
popf
and
cli
pop
xchg
mov
adc
int
inc
push
mov
test
mov
pop
iret
dec
call
push
hlt
mov
mov
add
mov
mov
add
push
jecxz
call
arpl
repnz
sub
pop
add
je
rcl
leave
scas
popf
jl
cmpl
jmp
xchg
aas
adc
mov
dec
rclb
push
push
mov
es
sbb
jae
scas
into
lds
cmp
push
outsb
jge
xchg
mov
mov
pop
outsl
mov
shll
add
adc
repnz
das
mov
mov
popf
pusha
das
lss
add
negl
iret
out
inc
cmpl
push
cltd
push
mov
movsl
mov
xor
loope
dec
iret
mov
test
mov
add
imul
call
sub
fiadds
add
add
stos
pop
jle
rorl
nop
xor
jo
and
push
add
cmp
mov
add
add
call
mov
lods
push
pop
add
sub
out
mov
pop
xchg
xor
mov
cmp
lret
ljmp
imul
leave
loop
pop
mov
lret
sub
dec
mov
dec
jne
arpl
mov
pop
loopne
add
loopne
add
loopne
add
add
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
add
add
add
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
add
add
loop
add
add
add
add
add
add
add
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
add
add
add
jecxz
add
jecxz
add
add
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
add
add
add
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
inc
add
push
add
add
inc
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
jb
gs
gs
jne
arpl
add
outsl
bound
inc
gs
gs
inc
je
insl
add
inc
gs
gs
inc
imul
arpl
push
gs
insb
insb
outsl
arpl
add
fs
push
dec
jne
je
inc
jns
add
dec
outsl
popa
fs
imul
add
push
popa
imul
insb
gs
bound
arpl
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
insb
jae
jb
jo
outsb
inc
add
inc
js
je
jb
arpl
jae
add
outsl
bound
inc
imul
inc
add
insb
jae
jb
insl
jo
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
je
jne
jb
outsb
je
push
add
inc
gs
push
dec
outsb
outsw
add
push
jb
je
inc
imul
je
popa
insb
inc
insb
insb
outsl
arpl
add
gs
add
jb
outsb
push
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
outsl
arpl
inc
jb
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
insb
jae
jb
outsb
inc
add
mov
add
fs
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
gs
je
inc
imul
add
inc
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
gs
popa
jb
outsb
je
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
imul
imul
inc
outsl
jb
popa
je
add
push
gs
jb
jo
add
inc
jb
popa
je
dec
arpl
add
push
outsl
jae
dec
gs
popa
addr16
add
inc
jb
ja
outsb
jne
popa
jb
add
je
outsl
jns
imul
push
gs
imul
outsb
addr16
add
inc
insb
imul
arpl
outsb
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
inc
gs
imul
dec
outsb
jae
jb
dec
outsb
jne
je
insl
inc
add
inc
gs
outsl
jb
addr16
jne
fs
imul
inc
outsb
popa
bound
outsb
jne
je
insl
add
dec
jae
push
jo
jb
add
push
jo
popa
je
push
imul
push
gs
popa
jb
outsb
je
add
je
imul
outsl
outsl
imul
add
dec
jae
imul
jae
popa
addr16
add
inc
outsb
fs
popa
imul
popa
ja
outsb
imul
arpl
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
js
push
add
inc
gs
jb
jo
add
dec
jae
arpl
imul
inc
outsl
arpl
add
inc
gs
imul
outsl
arpl
add
je
arpl
inc
gs
gs
je
jo
imul
inc
imul
dec
gs
popa
addr16
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
je
imul
js
dec
outsb
addr16
inc
add
inc
gs
inc
add
inc
insb
outsl
jae
inc
insb
imul
add
ja
jo
imul
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
add
gs
je
push
imul
inc
add
push
gs
outsl
arpl
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
dec
jae
imul
jae
popa
addr16
add
dec
outsl
popa
fs
jne
jae
jb
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
jbe
push
imul
dec
jae
arpl
jo
jns
add
push
imul
jae
bound
add
jae
push
jne
je
gs
popa
add
inc
jb
popa
je
dec
outsb
jne
add
je
arpl
insb
insb
push
outsl
jae
add
imul
ja
jb
insl
push
outsl
imul
popa
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
imul
popa
jae
inc
add
push
outsb
fs
gs
popa
addr16
add
inc
gs
outsb
jne
add
je
imul
outsb
addr16
add
inc
gs
insb
addr16
je
insl
add
push
push
jb
insb
insb
inc
popa
jb
add
je
arpl
insb
insb
push
popa
outsb
add
dec
outsl
popa
fs
je
imul
add
add
add
dec
add
dec
loopne
sidtl
add
or
sbb
add
movsb
add
add
adc
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
push
add
add
pusha
add
xor
add
je
js
add
add
add
adc
add
sbb
add
push
add
and
add
fs
je
add
add
add
add
add
add
add
add
add
inc
add
shrb
jae
add
add
adc
add
add
add
in
add
add
add
add
imul
or
add
push
add
add
add
add
inc
add
inc
jb,pn
jb
add
add
addb
add
add
jl
add
dec
add
inc
add
inc
add
add
add
add
add
or
dec
pop
mov
push
pop
call
sub
ljmp
int
cli
mov
push
pop
popf
mov
adcb
mov
pop
in
pop
insb
xchg
jp
lds
and
addr16
fistpl
insb
xor
cmp
mov
pusha
jecxz
push
ja
push
xchg
imul
dec
or
insl
fdivrl
filds
mov
fnstenv
and
jg
mov
jge
push
jbe
popa
testb
mov
jmp
nop
loop
dec
loope
xor
jp
test
xchg
cmpsb
repz
lahf
pop
lea
mov
inc
cmp
cmpsl
pop
into
inc
in
cli
jns
mov
jp
fs
lods
jge
fsts
push
sub
shrl
inc
mov
loope
xlat
test
inc
dec
insl
xchg
js
fidivl
mov
sub
imul
mov
imul
mov
dec
rclb
cmpsb
pop
in
xor
mov
dec
test
es
stc
scas
cltd
adc
inc
adc
dec
loopne
aas
aaa
fstl
add
mov
lods
mov
jb
pop
mov
scas
pushl
cli
in
or
lret
push
ret
out
sbb
insl
pusha
into
lret
lcall
mov
dec
mov
jo
fwait
lds
mov
xchg
jo
fimull
dec
push
insl
jecxz
jmp
push
pop
outsl
test
aaa
lcall
sbb
xchg
les
pop
pop
and
stos
mov
dec
inc
shr
push
xor
popf
push
sbb
sub
mov
sbb
push
rol
pop
jbe
jne
dec
add
sbb
pop
lods
dec
mov
adc
loope
mov
jg
lods
jno
and
dec
sub
or
outsl
arpl
out
pop
sub
sbb
lods
jno
pop
mov
in
fldenv
xor
outsb
pop
push
js
pop
add
pop
movsl
das
shll
or
aad
xchg
jmp
fildll
jmp
push
movsl
mov
pop
std
adc
xchg
add
mov
cli
xchg
in
inc
scas
pop
jg
out
xchg
and
xlat
f2xm1
ret
xchg
lret
xor
bound
cmc
cmpsb
cmp
scas
mov
out
pop
mov
imul
pop
cltd
add
sahf
sbb
out
imul
in
lods
mov
mov
int
dec
jne
or
and
pusha
mov
outsb
nop
popf
mov
enter
xchg
sub
test
mov
insl
cli
fnstsw
std
stos
lret
pop
into
mov
les
movsl
cmpsb
aaa
ss
jge
lret
mov
inc
das
int3
jle
les
mov
fldt
aad
sub
push
sub
xchg
insl
or
std
dec
repz
das
sub
lcall
jmp
fistpl
in
mov
sbb
out
cmpb
adc
lods
enter
fwait
pop
add
mov
jns
outsl
icebp
aas
scas
es
cmp
mov
scas
pop
int3
adcl
dec
inc
in
pop
out
push
jmp
pop
adc
shrl
repz
xor
mov
mov
dec
dec
pop
dec
ffree
fwait
push
outsb
or
cmp
enter
mov
xchg
mulb
pop
cmpsl
cmc
test
xchg
mov
dec
fnstsw
dec
ja
add
dec
push
lcall
add
dec
mov
fdivl
mov
loopne
mov
out
or
iret
call
cwtl
lret
mov
ret
add
jmp
push
cmp
test
je
inc
and
cmp
std
and
pop
out
mov
dec
call
scas
inc
mov
imul
xor
dec
mov
mov
lea
adc
jmp
fcoms
xor
push
dec
dec
out
fs
sub
add
lret
cmp
clc
cli
sbb
jae
fdivrl
add
out
mov
cmp
fistl
imul
inc
pop
enter
loopne
das
jmp
cmp
push
pop
aaa
sti
pop
and
or
jbe
inc
imul
fsub
pop
pop
aam
mov
ja
mov
movsl
pop
dec
xlat
xor
push
mov
cmpl
inc
or
xchg
testb
les
pushf
mov
dec
mov
ljmp
or
in
ss
cmp
jnp
sub
push
jne
xchg
roll
mov
and
fwait
sbb
xchg
in
or
inc
cld
inc
jnp
pop
test
mov
test
ss
fwait
mov
movsb
sub
xchg
fidivrs
push
ffreep
sub
mov
push
sbb
pop
adc
les
outsb
imul
ss
xlat
sub
push
lret
or
mov
fwait
aam
push
cmpsl
out
jbe
push
pop
test
cli
das
or
mov
jne
xor
push
xchg
dec
mov
gs
nop
sub
bound
mov
mov
pop
fidivrl
jle
cmp
and
sbb
fldenv
mov
out
mov
inc
mov
push
cld
mov
lret
daa
mov
into
fs
popa
xlat
ret
sbb
push
out
lret
loopne
jle
cmp
pushf
xor
mov
add
pop
sub
or
movsl
sbb
push
aam
mov
xor
ret
adc
mov
bound
sub
les
out
daa
stos
pop
mov
cmc
in
out
fiaddl
movsb
lds
imul
push
stc
cmc
mov
std
or
adc
ljmp
ret
sub
or
fcoml
push
movsl
push
mov
cmp
pop
outsl
stos
push
or
push
stc
jecxz
mov
adc
fwait
push
out
in
cmpsl
in
adc
mov
aam
call
mov
bound
loope
and
push
jp
mov
scas
test
movsl
fstps
sub
inc
jle
or
popf
push
mov
add
add
ljmp
lahf
test
push
popa
shll
xchg
xlat
addr16
sbbl
cwtl
lahf
nop
xorl
ret
dec
pop
mov
add
inc
cmp
sub
mov
pop
outsl
out
and
shlb
test
imul
xor
dec
mov
pop
push
dec
leave
add
movb
cmc
movsbl
test
pop
cmc
ret
jo
shll
mov
pop
cli
inc
push
mov
and
jmp
out
stos
stos
pop
ret
and
push
jnp
xlat
and
pop
lahf
xchg
mov
inc
pop
leave
sbb
test
into
subl
sti
or
pop
out
aam
jmp
sbbb
testl
mov
addr16
mov
add
mov
scas
or
jb
pop
int3
shl
xorb
dec
clc
je
add
xchg
imul
imul
inc
fdivrl
adc
cli
daa
mov
xchg
mov
test
notl
push
sub
mov
shrl
and
jnp
out
aas
outsl
pop
mov
mov
icebp
cmp
and
subb
adc
pop
mov
pop
addr16
jecxz
xchg
iret
xchg
xchg
xor
cli
jb
dec
pushf
sti
into
pushf
pop
mov
lea
cmpl
mov
call
push
rcll
push
push
loop
mov
cwtl
pop
int
out
add
cmp
xor
sbb
mov
movb
loop
pop
fadds
pop
mov
push
ret
jl
push
loopne
mov
pop
add
pop
mov
adc
lock
inc
and
movsl
mov
mov
das
arpl
movb
rolb
frstpm(287
test
xchg
mov
lock
mov
dec
lret
xor
sarl
ss
mov
out
push
inc
lret
jns
roll
mull
shl
jne
or
fsubrs
mov
subb
imul
test
sar
fs
mov
test
in
xor
lsl
ret
fld
inc
jmp
mov
les
out
ss
cmpsb
push
xor
out
aas
stos
aam
push
xchg
adc
imul
jge
lods
add
cli
jns
lahf
or
adc
add
xchg
dec
fld
mov
inc
inc
push
fildll
xchg
xchg
scas
stos
dec
int
xchg
adc
jno
jmp
test
mov
mov
inc
or
fistpl
xor
or
aad
mov
and
repz
ljmp
pop
push
and
roll
push
lret
lods
shl
and
in
or
popa
mov
pop
xor
rol
ficomps
mov
and
sbb
xor
shll
and
fcomps
aad
dec
repnz
or
pop
cli
inc
nop
sbb
jmp
push
outsl
cmp
mov
pop
dec
mov
mov
inc
out
adc
test
mov
jg
es
jbe
mov
iret
dec
rclb
jb
push
inc
jns
adc
inc
fstpt
mov
cmc
pop
sub
sub
lret
jmp
js
je
cmp
scas
ret
push
enter
lea
xchg
adc
xchg
add
lods
rcrb
fs
cwtl
mov
xorb
paddd
out
nop
movsl
xor
sbb
xor
xchg
stc
fwait
in
repnz
mov
ds
dec
add
lock
sub
add
cltd
sahf
das
js
add
hlt
mov
xor
and
and
pop
lahf
or
int
iret
mov
sub
ret
out
pop
negl
mov
jg
addr16
mov
cmpsb
adc
and
adc
add
in
fiadds
sub
outsl
fucomi
loope
iret
inc
nop
loopne
repnz
push
cltd
js
test
jbe
adc
les
int
mov
lcall
sar
pminub
push
data16
sub
lea
xchg
or
pop
dec
inc
mov
push
repz
mov
and
mov
int
mov
stc
outsl
inc
popf
xor
push
jl
jnp
fsub
xchg
lcall
jl
mov
add
dec
cmp
iret
add
add
fs
mov
shrb
sub
xlat
movsl
dec
jns
shll
push
sbbb
xor
cmpsl
adc
out
add
jmp
ja
push
fstp
jbe
js
push
xchg
xor
jne
fadd
pop
cmp
dec
inc
dec
add
xchg
pop
dec
inc
mov
lds
lds
push
add
push
mov
insl
nop
test
jmp
mov
and
and
daa
lcall
push
cmpsb
cmpsl
dec
mov
inc
dec
iret
xor
sahf
mov
getsec
gs
test
adc
out
xor
nop
adc
in
shll
push
jne
outsb
fdivr
dec
jne
pop
push
testb
xchg
mov
fnstsw
fs
or
incb
push
rorl
loope
add
xor
dec
sbb
or
ret
adc
int
cmp
lfs
fldcw
dec
xor
cmpsl
adcb
es
inc
fs
iret
push
aam
jnp
xchg
sbb
std
add
outsb
fstps
ja
adc
cld
ja
das
xchg
xor
fildll
popf
les
sbb
cmpsb
popf
out
and
sub
dec
sbb
dec
or
int3
push
mov
repz
xchg
cltd
sub
and
mov
fidivrl
lea
dec
or
cmp
push
push
jg
sub
xor
daa
cwtl
adc
into
mov
into
or
and
test
divb
sti
adc
insl
out
ljmpw
mov
sub
lret
loope
adc
es
push
in
test
mov
ds
jnp
pop
xchg
inc
jb
mov
push
sbb
loope
cld
inc
dec
jno
xor
dec
cmpsb
mov
sbb
push
imul
xlat
imul
loopne
dec
das
mov
dec
flds
jnp
jmp
xchg
test
xchg
inc
cmp
add
cli
les
pop
jb
pushl
jne
rorb
int
ss
std
inc
push
jbe
jnp
add
stc
fcomip
mov
jns
adc
inc
stc
jecxz
sub
jle
pop
bound
xchg
xchg
jbe
xor
xchg
sub
pushf
outsb
sub
or
pop
pop
lret
test
dec
repz
jge
mov
push
lods
outsl
test
in
mov
or
ret
repnz
enter
fidivrl
lcall
and
push
adc
inc
sub
sbb
jo
aad
int
jle
xor
mov
rcrl
push
xchg
pop
xchg
sub
sbb
repnz
mov
and
testb
nop
sbb
inc
adc
lahf
outsl
mov
and
inc
add
ret
daa
rcrb
jecxz
ficompl
jcxz
js
sub
add
scas
jp
adc
lods
mov
loope
xchg
jge
pop
and
fstps
in
jno
sbb
lcall
shrb
hlt
inc
test
std
push
sub
inc
shlb
cli
jge
mov
fildll
cmpsl
aaa
pop
mov
fwait
rclb
roll
dec
or
fsts
insb
mov
cmc
push
jecxz
xchg
adc
loop
jg
imul
xlat
sub
push
adc
pop
call
nop
fidivs
mov
sub
jbe
incb
and
loopne
in
push
xchg
jg
mov
andb
jns
movnti
inc
push
mov
xor
and
or
fwait
xchg
das
sbb
lahf
xchg
jno
add
mov
imul
push
sahf
mov
mov
inc
daa
push
inc
dec
ret
rclb
stos
sub
cmp
sub
insl
jmp
ja
jp
xor
out
or
fidivrl
dec
push
ja
insl
cmp
fs
mov
test
movsl
push
xorb
push
loopne
mov
or
jno
shl
push
aam
cli
sub
sub
mov
test
sub
loope
mov
xchg
test
mov
fldl
inc
nop
cmc
sti
pop
ss
xor
hlt
and
and
in
adc
jns
cld
sub
dec
jno
int
mov
push
mov
ds
mov
shrb
sub
out
add
in
mov
daa
push
fsubp
push
clc
mov
mov
or
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
