mov
jmp
call
dec
lea
lea
mov
dec
jg
scas
sti
and
lea
mov
xchg
in
cmp
jnp
mov
sub
adc
sbb
nop
and
jle
mov
sbb
mov
fucomi
test
jbe
inc
in
xor
xchg
fdivrl
outsb
out
inc
inc
xchg
xchg
inc
dec
inc
push
fucomip
outsb
call
mov
jle
mov
cmp
jle
std
data16
inc
ja
insl
fsubl
dec
dec
inc
mov
outsl
mov
mov
movsb
adc
gs
add
cmp
jno
jg
out
and
mov
dec
lea
jl
adc
int
mov
mov
add
mov
and
pop
outsb
xchg
jge
dec
inc
inc
ret
nop
push
mov
push
xorb
pop
pop
xchg
and
mov
pop
pop
sbb
in
call
std
incl
push
cmpl
sbb
inc
and
push
push
or
test
ret
jb
jae
in
pop
fmull
enter
shlb
enter
enter
orl
mov
mov
lods
push
jns
enter
or
fs
inc
add
nop
inc
push
dec
dec
inc
insb
dec
push
sbb
cmp
nop
inc
push
sbb
sub
push
sbb
and
sbb
sbb
jmp
inc
pusha
pop
add
sub
cmp
pushl
repnz
out
jns
push
out
lock
cmp
jbe
fnsave
cmp
xor
adc
lcall
jb
mov
mov
cmc
dec
cmp
jmp
fnstsw
inc
cmp
cmp
inc
mov
cmp
inc
fwait
loop
adc
sti
pop
sbb
pop
mov
ss
mov
fildll
out
sub
rcll
pop
xor
or
cmp
mov
pop
pushl
pop
xor
outsb
ja
push
mov
push
fdivrs
mov
xchg
mov
mov
lea
ds
pop
movsb
fdivs
push
dec
mov
mov
divps
dec
aaa
dec
std
outsb
lds
outsl
xor
cmp
sbb
hlt
mov
lds
pop
ret
lcall
jmp
mov
dec
dec
cmc
dec
mov
mov
std
dec
mov
jbe
xchg
popf
add
repnz
movsb
sbb
mov
add
outsb
xlat
lea
mov
mov
sub
mov
xchg
mov
dec
push
test
addl
das
lret
mov
mov
mov
push
mov
clc
or
cmc
inc
inc
subb
fstl
inc
loop
mov
mov
loope
repnz
ret
jb
jb
mov
scas
or
push
mov
xor
jae
adc
ss
mov
or
xchg
add
inc
adc
jmp
inc
jnp
pop
mov
int
pop
cmp
sbb
test
ja
pop
jns
dec
dec
ss
mov
sub
test
loop
xor
or
jg
pop
mov
js
out
pop
or
dec
cmp
cmp
cmp
mov
scas
mov
mov
add
cmpsb
mov
or
xchg
in
jo
mov
or
xor
mov
jg
jnp
jnp
lss
pop
add
jp
in
sbb
sahf
pop
push
lea
jbe
fidivs
mov
enter
mov
or
add
repnz
scas
or
xchg
fmul
mov
push
subb
insl
sbb
jbe
inc
cmp
xor
jb
sub
addr16
mov
xor
cmp
mov
repnz
insb
fcomps
pop
frstor
loope
mov
and
divb
cmpsb
insb
adc
test
notb
fcomps
mov
lds
add
lahf
dec
bound
jne
and
stos
or
in
or
call
xor
mov
mov
mov
and
jb
push
pop
xchg
fcompl
adc
mov
add
dec
push
movsb
je
and
sbb
pop
mov
cmc
sub
ds
ret
lea
jae
add
mov
mov
mov
xor
divl
test
jne
or
je
hlt
jmp
adc
insl
and
mov
in
ja
sbb
aaa
call
ja
sub
pop
lret
push
cmp
in
in
fs
fsubrs
adc
mov
push
dec
test
jb
rcll
rorl
mov
mov
outsl
in
ret
adc
mov
add
cmp
in
fs
sarb
xor
dec
sub
in
mov
fs
sub
fildl
jb
adc
push
cmp
cltd
ret
jle
adc
cmp
sbb
out
dec
rcll
add
and
sbb
call
daa
cmp
std
dec
in
jne
ret
clc
sahf
and
in
jl
cld
add
jmp
mov
add
je
jb
arpl
fs
jae
add
inc
cld
lea
sub
in
jne
clc
jge
rorl
fs
imul
loope
jns
insl
dec
jo
outsb
push
push
imul
jne
insb
inc
insb
insb
push
sbb
bound
ljmp
arpl
inc
mov
cmp
jp
dec
inc
inc
mov
shl
and
mov
xchg
jg
push
mov
dec
loopne
sub
mov
nop
mov
fisttpll
inc
mov
pop
mov
sbb
iret
shrl
inc
in
mov
cld
inc
cmp
adc
call
ret
ds
sbb
jno
jmp
push
js
jge
jg
dec
inc
dec
cmp
jp
mov
mov
xchg
sbb
ja
jb
pop
xor
mov
inc
inc
lock
mov
pop
adc
aas
ja
aam
xchg
clc
mov
mov
lea
aas
mov
insb
fnstsw
adc
add
inc
lea
jecxz
call
add
call
pop
push
add
adc
or
cmp
jo
mov
arpl
nop
sti
xchg
in
pusha
clc
cmp
and
jge
mov
dec
sub
popl
mov
pop
cs
pop
pop
inc
mov
sbb
hlt
add
lods
jl
fdivrs
jb
xor
je
inc
inc
inc
dec
push
push
arpl
or
lea
ret
into
je
scas
fimull
aam
lret
hlt
in
call
dec
fdivs
xchg
loopne
incl
mov
scas
xor
xor
loopne
pop
push
lock
dec
mov
cmp
jbe
dec
mov
int3
xor
ret
loop
mov
pop
or
push
sbb
xchg
dec
jmp
dec
or
cld
cmp
mov
decl
mov
lea
faddl
mov
out
jns
mov
or
shrb
xchg
icebp
jg
test
fldt
cmp
jge
lea
pop
mov
out
ds
ja
faddl
or
mov
pop
popa
mov
or
and
jne
or
insl
dec
fst
pop
adc
dec
inc
lock
imul
cmp
cli
inc
pop
fmull
cwtl
int3
int3
and
enter
cli
lret
sarb
jle
jle
xor
mov
fnstenv
adc
imul
pop
jmp
enter
cmp
ds
ret
mov
out
mov
xor
call
jl
inc
lods
outsl
jnp
xchg
fucomi
sbb
or
outsl
std
xchg
sub
mov
inc
dec
mov
mov
jae
jmp
mov
mov
cmp
and
push
hlt
dec
mov
inc
out
pop
je
dec
cmp
aaa
cmp
xor
cmp
mov
xor
xor
ss
xor
or
cmp
xor
inc
push
call
mov
addr16
mov
mov
push
xor
repnz
mov
mov
and
lock
inc
loope
mov
cmpl
test
aam
loop
in
dec
test
mov
mov
push
repz
mov
out
sti
cmp
or
je
repnz
fisttpl
mov
and
rorb
mov
and
xor
or
icebp
nop
add
and
and
sub
add
sub
mov
incb
jnp
hlt
jbe
unpcklps
xchg
pop
lds
jg
decb
jne
out
addb
cmp
clc
sub
lods
jo
lahf
or
push
mov
mov
xor
pop
adc
call
jnp
cmp
sbb
xor
dec
add
mov
add
adc
fs
cmp
cmp
and
jbe
cmp
inc
add
cmp
call
xchg
dec
inc
clc
lock
xchg
add
add
push
and
fwait
adc
in
dec
push
jge
fs
sub
and
ljmp
mov
pop
popa
imul
insb
insl
dec
bound
arpl
outsl
pop
dec
insb
inc
gs
imul
lcall
insl
imul
inc
add
pop
lea
mov
sbb
addr16
imul
mulb
inc
jb
sbb
insb
inc
outsl
jbe
dec
gs
jb
add
push
pop
inc
dec
inc
adc
gs
push
dec
lahf
jp
int
test
outsb
add
data16
add
pop
jmp
ljmp
out
adc
add
xchg
test
cld
mov
loope
rol
push
xlat
cld
shrb
cmpb
push
sub
imul
lret
loop
jo
mov
dec
push
rclb
je
fdivrl
cmp
add
clc
inc
pop
and
aam
mov
repnz
sahf
sub
lea
mov
lea
add
push
fisubs
mov
ret
ret
add
movsb
mov
repnz
pusha
mov
mov
pop
mov
add
xor
xor
ja
jne
xor
add
xor
negl
or
add
add
imul
pop
xor
xor
pop
mov
add
xchg
inc
xor
fwait
cwtl
lock
add
sbb
js
sbb
test
sub
adc
cmp
push
daa
sub
stos
popa
inc
pop
adc
bswap
outsl
dec
sbb
add
inc
push
movsl
ret
add
dec
cmp
mov
pop
push
sbb
hlt
sub
xchg
enter
mov
enter
add
add
jae
or
inc
mov
aaa
cmp
push
pusha
hlt
pop
shl
rolb
mov
aad
lea
pushf
movsl
or
aaa
mov
xor
jl
sub
or
xor
movsb
lahf
push
and
sub
imul
xchg
test
xchg
pop
sbb
jmp
andl
jl
push
push
movl
xchg
in
push
mov
cmp
ret
jae
adc
ud0
sbb
or
aas
lret
pop
adc
jae
sarb
call
jl
xorb
push
dec
lds
cld
call
jne
and
aas
inc
fldt
imul
push
pushf
add
pushf
mov
sub
sahf
in
and
sbb
call
pop
push
leave
sbbl
push
jne
out
inc
mov
and
push
je
dec
shrb
dec
ss
lret
jl
test
shrb
pop
cmp
push
inc
cmp
inc
cmpl
push
push
sbb
jl
mov
stos
adc
jo
inc
jg
mov
outsb
add
cs
insb
pop
movsl
push
xchg
jne
ja
xchg
add
out
inc
adc
or
movsb
mov
movsb
hlt
mov
mov
rorl
stos
in
call
mov
andl
sub
mov
ds
or
dec
pop
fnsave
popf
mov
cmp
ficompl
jl
jge
call
pop
xchg
fdivs
jne
add
mov
add
add
cmpl
ja
call
add
sbb
mov
mov
and
adc
xor
hlt
in
or
movsb
pop
push
mov
outsb
add
or
sub
jge
es
sub
jne
mov
bound
lret
jmp
cmpb
lahf
jl
cmpsb
hlt
clc
rcrb
cwtl
in
cmc
pop
push
or
mov
cmp
fst
loopne
in
mov
repz
aam
mov
mov
pop
fwait
xchg
push
pop
add
insb
cwtl
add
mov
lods
les
xchg
adc
enter
or
sub
xor
xchg
mov
andl
lahf
out
mov
loopne
mov
xor
xor
cmp
push
js
dec
sbb
scas
and
xor
clc
and
adc
add
xchg
mov
jl
pushl
fnstcw
push
mov
rolb
addb
xchg
and
movsb
inc
and
testb
daa
push
adc
push
push
decb
cmp
sub
sbb
mov
sbb
cmp
xor
icebp
repz
jmp
or
je
xchg
cld
and
xor
repz
aaa
mov
push
lock
pop
stos
repnz
dec
sub
dec
addb
sbb
add
int3
pop
fld
jb
and
xor
fmul
push
sub
mov
iret
aam
or
push
pop
arpl
js
int3
fidivs
push
cmp
pop
push
enter
ss
les
xor
enter
iret
movsl
mov
sbbl
mov
loop
push
popl
test
das
and
lahf
lahf
test
pop
mov
mov
adc
dec
cmp
dec
stos
in
inc
or
xchg
jns
mov
clc
psubusb
mov
xlat
sti
and
xchg
ljmp
dec
inc
test
sbb
cmp
jno
inc
inc
fsubrs
push
xor
add
push
dec
xchg
dec
add
popf
pop
pop
fmuls
dec
pop
in
jmp
mov
pop
stos
xor
aad
insl
push
mov
xchg
test
push
xchg
inc
inc
inc
incb
adc
shlb
cmpb
fimuls
push
xchg
sbb
pop
or
or
dec
push
add
sarb
hlt
pop
sarb
adc
out
inc
pop
cmp
mov
xchg
mov
lar
test
inc
nop
cmp
test
sbb
or
mov
xor
xor
xor
adc
rorl
push
dec
push
lock
xor
cmovne
les
push
mov
inc
daa
sbb
add
adc
cmpsl
movsl
cli
test
jge
pop
inc
or
push
inc
xor
sub
or
mov
xchg
sub
inc
loopne
cmp
pop
pop
cltd
mov
sbb
or
mov
cs
mov
lods
fdivr
sbb
and
call
scas
sbb
ja
cmc
rolb
add
rorb
dec
loop
adc
mov
lret
mov
sbb
cmpl
pop
mov
shll
xlat
sub
fwait
adc
fnstenv
push
popa
jbe
inc
cmp
mov
cmp
nop
test
test
mov
bound
mov
mov
mov
das
pop
jge
jl
inc
sub
or
dec
add
lea
mov
faddl
push
inc
outsb
jnp
add
add
jge
jo
iret
mov
fldl
push
mov
jae
shl
jne
je
repz
adc
fiadds
out
mov
add
pop
fcomi
jbe
ret
dec
mov
mov
clc
jle
dec
loop
std
cmp
mov
loopne
or
cmp
jnp
mov
jmp
pop
mov
xor
adc
scas
adc
addl
loopne
mov
and
sbb
loope
in
jecxz
gs
push
pop
sbb
daa
cltd
test
jnp
add
jno
push
addr16
cmp
in
adc
lret
adc
xor
fwait
stos
xor
mov
pushf
sub
lds
mov
sbb
xchg
mov
mov
and
test
mov
push
dec
push
push
mov
test
or
add
inc
mov
cmpb
aam
fcoml
adc
jnp
sbb
dec
mov
add
pop
fwait
cmp
gs
xchg
add
inc
cmp
int
adc
cmp
add
cmp
sbb
aaa
js
lea
mov
mov
adc
mov
sbb
ret
sar
aam
out
data16
jnp
add
jmp
mov
mov
pop
call
sub
jmp
xchg
push
xor
mov
sbb
test
shll
mov
inc
cmpb
push
leave
xchg
pop
leave
inc
pop
movsb
ret
add
inc
or
fdivrl
inc
and
xchg
stos
test
adc
imul
stos
xchg
adc
bndstx
icebp
mov
mov
jae
add
push
xchg
sub
dec
idivl
push
add
mov
add
add
or
add
adc
popf
add
adc
add
pop
fnstenv
push
pslld
outsl
cmp
shll
and
lret
lahf
and
or
add
out
or
jg
adc
incb
inc
inc
add
or
pop
add
pop
mov
stc
iret
dec
dec
inc
add
or
inc
adc
jae
pop
pop
or
inc
pop
idivl
xor
xor
dec
sbb
add
shld
add
add
or
mov
add
fldt
cmp
adc
and
sahf
add
adc
lods
mov
notl
adc
or
fnstenv
mov
imul
mov
out
sub
jge
in
and
in
mov
dec
or
testb
sbb
jbe
add
pop
fists
xlat
pushl
xchg
rolb
cmp
jo
ret
jb
xor
adc
das
add
cmpsb
jne
rol
inc
scas
add
jge
xlat
rorb
and
and
sub
arpl
jge
pop
cmp
cmp
aaa
divb
imul
sub
push
push
arpl
add
pop
sub
in
mov
or
jo
or
fsubr
mov
or
dec
sub
dec
imull
sub
in
mov
add
or
xchg
sub
loope
fdivs
adc
ss
add
sub
mov
push
imul
rcrb
icebp
add
or
fldl
pop
enter
push
das
xchg
dec
cmp
sbb
or
dec
mov
dec
inc
mov
adc
sub
xlat
jge
xchg
int
mov
imul
ss
cli
and
jnp
sbb
mov
imul
xchg
xor
pop
push
dec
push
arpl
test
mov
and
ja
cmp
fisttps
fsubs
add
rclb
dec
pushw
xchg
pop
lcall
jbe
lcall
ss
mov
inc
test
sub
ud2
mov
add
test
add
notb
sub
push
adc
fisttpll
dec
pop
lret
mov
or
mov
add
mov
mov
pop
jl
aam
les
push
xchg
jge
add
add
jb
sub
push
pop
push
jb
or
lcall
add
or
lock
xchg
mov
shl
sbb
cmp
or
lea
sbb
bound
ss
jns
int3
mov
out
and
jne
fists
jecxz
and
add
out
push
mov
xor
cmp
sub
out
outsb
ret
popf
jns
aad
and
ds
mov
xor
inc
xorps
pop
mov
fcmovnu
inc
out
xchg
and
lock
xchg
popa
xor
add
jb
push
incl
ficoml
jle
adc
sbb
cs
or
sub
xor
mov
aaa
mov
ficomps
mov
nopl
push
add
fldl
adc
dec
arpl
cli
or
addr16
repz
add
add
cmp
push
scas
xor
add
xchg
in
out
mov
insl
adc
xor
mov
pop
jno
jmp
mov
pop
fisttps
sbb
pushf
iret
jecxz
push
mov
loop
das
xchg
mov
aad
or
add
popa
mov
outsb
into
add
or
fwait
shl
mov
aam
dec
lods
inc
mov
push
mov
insb
fisttpl
push
cmp
xor
pop
ja
pop
imul
inc
jne
push
pop
clc
mov
clc
cmp
push
lret
xchg
shlb
lcall
loope
mov
inc
jb
dec
add
cs
daa
subb
cld
divb
jnp
js
sub
jae
dec
insl
jg
xor
jp
adc
loopne
insl
stc
popa
mov
mov
iret
jns
stos
fnstenv
xchg
pop
or
inc
jmp
fadds
mov
mov
lods
lds
jo
jmp
adc
das
cmc
in
out
mulb
jmp
xchg
aam
adc
stos
dec
sahf
scas
mov
sub
imul
fcompl
jnp
loopne
scas
or
dec
ss
or
cmpsb
sub
pop
js
adc
jnp
xchg
jae
jg
jae
div
data16
dec
ljmp
add
rolb
cmp
cmp
mov
or
or
xlat
ss
fildl
xchg
mov
inc
shl
jnp
push
or
jbe
mov
jecxz
js
mov
jae
arpl
cmp
add
cmp
out
out
cmp
xor
mov
aas
push
ss
cmp
sbb
data16
push
sub
add
sbb
xor
mov
add
or
sub
cs
lcall
or
clc
jecxz
lds
sbb
out
mov
or
sbb
shll
stc
aaa
push
into
idiv
sahf
into
xor
cmpsl
push
sarl
and
movsl
roll
jns
and
fwait
mov
insb
and
jecxz
test
xchg
jno
pop
xchg
dec
pop
cmp
add
sub
stos
jl
out
out
scas
cmp
jecxz
sbb
mov
out
outsb
imul
xchg
sbb
sub
mul
jle
imul
call
pop
ss
jbe
cs
cmpsb
popl
jmp
stc
or
mov
pop
jmp
add
aam
jno
add
loop
std
jb
ja
inc
inc
adc
sbb
repnz
cmpsb
xchg
ss
in
sbbl
ror
xor
pop
cmpsl
pop
shlb
xor
xchg
dec
ret
lods
js
jno
xor
js
xor
mov
push
insl
push
aam
push
jecxz
leave
xor
ss
mov
push
mov
jp
xchg
pop
orl
inc
insl
rcrb
lcall
popl
fdivp
jae
sub
sbb
mov
adc
mov
add
sub
mov
leave
enter
popa
mov
arpl
inc
sub
movsl
xchg
stc
cmp
jp
int3
pushl
inc
call
ds
int
rcl
in
inc
push
lods
sub
adc
cmp
xlat
pop
mov
out
into
mov
xor
imul
lret
jnp
incb
push
or
sbb
rorl
adc
mov
lcall
imul
cmpsb
dec
jmp
out
cwtl
dec
pop
rcrl
mov
push
jae
push
mov
mov
imul
mov
inc
cmp
cmp
sub
call
push
and
movl
xchg
test
sub
jmp
push
or
sub
fidivrl
push
ret
mov
arpl
lock
inc
ds
jo
jbe
jnp
cmpsb
xor
ror
or
test
clc
les
das
cmp
add
dec
cmp
push
dec
jno
sub
out
inc
test
subb
js
jns
insl
cs
mov
sbb
push
rcl
sub
cltd
in
andl
sarb
jbe
dec
mov
sbb
lock
mov
arpl
mov
mov
inc
cli
dec
mull
clc
andl
jno
mov
sub
pop
jge
cmp
dec
dec
and
push
mov
rcrb
mov
repnz
int
popf
icebp
ret
adc
or
mov
cmp
inc
cmpsb
ss
cmp
fcomip
mov
stos
out
pop
lret
out
clc
push
lods
jmp
bound
mov
sar
adc
pop
jo
xchg
and
fsincos
jns
inc
sbb
jp
push
lahf
or
dec
push
jge
outsl
mov
roll
mov
and
mov
xlat
inc
js
push
mov
jae
stos
xor
fmull
inc
movaps
in
xor
testl
push
mov
repnz
clc
test
aam
sbb
jo
jmp
std
cmp
pop
mov
rdpmc
mov
jge
xchg
dec
cmpb
mov
shlb
test
lock
lods
mov
call
lret
test
arpl
and
shrl
scas
sub
lods
sub
out
pop
mov
adc
pop
daa
sub
xor
stos
sub
aam
nopl
and
add
and
ja
fsubs
jo
scas
jae
and
hlt
mov
popa
mov
in
hlt
adc
scas
inc
sub
ret
sbb
push
jb
xor
or
add
inc
and
xchg
pop
inc
jl
fnsave
cmpsl
sarl
clc
roll
mov
jge
and
mov
iret
sub
insb
not
data16
jl
shlb
std
sbb
ret
scas
ret
adc
pusha
push
xor
outsl
adc
mov
inc
repz
xor
xor
jl
es
sbb
fldenv
jecxz
aad
insl
jg
mov
sub
and
loopne
inc
or
xlat
push
loop
mov
fidivl
ret
ljmp
mov
jmp
aam
xor
lret
cs
pop
xor
or
insl
mov
xchg
sbb
push
mov
and
negb
mov
cli
mov
in
sub
insb
aam
xor
inc
mov
sbb
cld
fimuls
push
xchg
cs
pop
int3
xor
adc
stos
and
add
imul
aaa
add
cmp
fadd
and
mov
insl
sahf
xor
pushf
rcrl
out
test
cmp
jne
pop
mov
and
mov
push
dec
leave
inc
cwtl
in
mov
push
mov
xor
mov
movsb
ds
leave
mov
mov
add
into
mov
rolb
imulb
daa
inc
cmp
js
aas
dec
pop
inc
imul
or
sbb
push
cmpsl
or
iret
aam
xchg
mov
jnp
jbe
dec
imul
ss
mov
xchg
out
imul
pop
call
test
imul
pop
jp
scas
loope
dec
xchg
and
mov
fisubl
xlat
aad
or
mov
pop
adc
les
fbstp
add
add
jae
sti
or
sbb
js
jge
push
roll
add
fildl
outsb
inc
inc
add
call
and
jne
jp
xchg
xor
aam
xorl
in
inc
adc
sbb
sbb
js
test
mov
jl,pn
push
fcoms
aam
mov
mov
or
jp
es
outsl
sub
pop
push
js
cmp
sbb
andl
xor
mov
into
rorl
rcr
mov
mov
shrb
sub
or
sbb
popf
adc
test
insl
sti
dec
aas
push
mov
add
outsb
frstor
sub
mov
loope
insb
push
or
adc
jne
rclb
shr
and
fidivs
rcpps
sub
cs
push
adc
and
stos
xor
pop
aaa
mov
sarl
daa
jl
cmp
sub
pop
xlat
inc
mov
fildl
mov
push
push
and
jecxz
add
add
rcll
sub
stos
in
shlb
shrl
insl
cmp
scas
sbb
inc
mov
xor
in
jne
push
xchg
leave
adc
aam
in
cmp
inc
cmp
cmp
sub
xor
adc
adc
inc
sbb
adc
inc
jbe
cmp
and
pusha
inc
js
add
ljmp
call
clc
xchg
jae
push
inc
adc
mov
jns
jne
arpl
into
ret
aas
push
cmpsb
test
sahf
mov
adc
sbb
jnp
insl
enter
dec
popa
and
cmp
das
cmp
add
pop
adc
in
mov
mov
add
mov
sbb
sub
sbb
int
sub
test
adc
loopne
incl
lods
xlat
hlt
stos
rorb
adc
std
or
add
jp
pop
call
test
rorl
clc
ret
enter
roll
cs
notl
pushf
adc
das
sahf
outsl
out
jb
aam
jmp
adc
inc
inc
aad
dec
mov
test
push
and
cmp
repnz
ret
insl
icebp
dec
push
mov
cltd
sub
es
enter
subl
das
mov
jp
adc
loopne
jmp
mov
movsb
xlat
insl
pop
int
add
movsb
jbe
aam
xlat
popf
int
dec
daa
dec
stc
loope
jnp
push
cmpsl
sub
cmc
test
in
shrl
daa
mov
xchg
xchg
ss
push
je
push
sbb
lahf
fimuls
int3
das
mov
lret
dec
mov
mov
mov
cltd
adc
and
mov
adc
test
or
fdivrs
inc
pop
push
mov
pop
lock
and
test
mov
xor
and
jle
xchg
mov
jl
sub
and
and
jno
shll
sub
or
inc
sub
adc
inc
or
fwait
call
inc
in
fiaddl
mov
insl
add
and
jge
inc
scas
xchg
mov
xorl
dec
test
pushf
test
lock
aad
or
mov
out
sub
out
hlt
push
adc
sbb
pusha
sbb
push
iret
rcl
cli
mov
cmp
push
ret
icebp
push
outsb
sbb
fists
in
xor
add
in
or
leave
mov
and
and
sbb
aaa
pop
sbb
movsb
and
xor
add
mov
xchg
or
push
cmpsl
mov
ss
out
movsb
sub
das
and
cmp
add
push
fsubl
xor
mov
scas
pop
inc
inc
inc
loope
push
mov
push
getsec
pusha
outsl
shll
fs
test
xlat
jle
mov
cmp
dec
pop
fs
int3
mov
jbe
loope
mov
push
je
daa
jle
mov
pop
mov
push
stc
push
pop
xchg
fisttpl
fisubrs
mov
loop
mov
or
lock
ss
xor
fwait
mov
sub
sar
inc
adc
jp
add
test
mov
xlat
xchg
dec
pop
sbb
fcom
mov
bound
push
icebp
jne
int3
pusha
lret
xor
mov
hlt
adc
mov
or
ret
xlat
faddl
sbb
push
ret
sub
inc
push
cmp
outsb
cmpsl
push
push
dec
lods
movsl
jb
inc
and
push
xchg
rep
mov
push
cmp
pop
rorl
add
ret
ret
cmp
cmp
cmp
rcrl
xor
fldcw
orb
jne
jmp
push
lods
add
sbb
pushf
dec
pushf
mov
je
cmp
pop
push
sub
or
push
arpl
and
enter
xor
ljmp
xchg
daa
iret
adc
inc
sub
and
dec
xor
paddd
scas
xchg
in
jmp
popf
jo
ret
push
sub
scas
into
push
cmp
push
adc
and
mov
mov
icebp
insb
cmp
out
xlat
lods
pop
arpl
jb
out
sbb
jo
add
ljmp
fildll
add
xchg
add
ss
addr16
pop
sub
lock
mov
int
mov
arpl
push
incb
mov
movsb
and
shlb
cld
cmp
sbb
xor
push
ret
lods
into
mov
aam
pop
pop
push
or
fsubrl
lret
mov
scas
lcall
into
movsl
lret
adcl
add
xor
cmp
pop
js
jb
sub
sub
inc
push
sub
fcomp
int3
adc
enter
jp
lret
lahf
jnp
clc
mov
and
jbe
mov
xchg
pusha
push
in
leave
in
or
movsl
pop
sbb
ds
and
inc
push
sbbb
push
cmp
xor
jl
subl
jp
lods
dec
cmp
les
icebp
jnp
rcll
orb
pop
cmp
shrl
cmp
fnstcw
insl
dec
and
fsubrs
cmp
enter
cli
aas
jnp
mov
jnp
pop
or
mov
add
sub
jbe
xchg
insb
or
dec
lahf
and
sub
or
inc
push
pop
jle
pop
add
arpl
mov
es
inc
andb
es
mov
hlt
add
jbe
and
xlat
cmpsb
jp
dec
js
data16
jecxz
mov
or
jo
sub
sub
push
sub
jge
push
xor
ret
loop
insl
js
mov
dec
pop
ja
inc
dec
mov
das
cltd
scas
sub
and
in
mov
enter
pop
int3
lock
gs
in
shrb
sub
mov
sub
mov
gs
xor
add
add
gs
mov
mov
test
out
jns
ucomiss
sbb
cld
sub
dec
into
loop
mov
cmc
in
sarl
jl
pusha
adc
mov
pop
jbe
pop
pusha
jmp
mov
dec
pop
stos
notl
divl
mulb
push
jb
sub
orb
sub
jo
jecxz
sub
cwtl
add
push
sarb
jne
ret
in
incb
jns
mov
inc
mov
push
mov
cmp
mov
adc
sbb
mov
cs
mov
xchg
sub
xlat
js
dec
clc
sub
xchg
push
aad
test
fistps
sub
in
pop
pusha
push
sbb
call
xchg
lock
adc
xchg
push
adc
insb
pushf
dec
xlat
push
test
je
lods
fstl
push
cmp
insb
inc
mov
add
jo
inc
xchg
jl
cmpsb
outsl
push
fildll
add
push
xor
mov
push
das
add
push
and
stc
push
add
in
outsb
or
mov
mov
push
push
add
add
iret
push
add
inc
call
cli
hlt
fildll
add
es
out
and
int
loop
sarb
mov
ljmp
scas
and
adc
push
xorl
adc
pop
inc
loop
mov
mov
insl
push
dec
mov
adc
pop
sub
add
addr16
test
add
jne
sbb
pop
adc
jns
pop
mov
sbb
jl
ja
sub
xor
js
test
pop
cmc
popf
ljmp
stos
add
add
pop
pop
shrb
xlat
loop
ret
mov
add
or
mov
push
xchg
jae
dec
push
jb
js
or
imul
sub
jo,pn
adc
test
sub
bound
pop
pop
pop
ret
into
pop
pop
xadd
inc
cmp
aaa
xor
mov
jb
pop
sub
fisubrl
push
push
fwait
and
pop
pop
and
mov
xor
sub
push
mov
pusha
int
pop
pop
push
add
and
xchg
mov
sub
mov
cs
push
cmp
stos
mov
push
inc
js
in
das
push
pop
adc
adc
mov
xor
mov
mov
fistl
push
mov
cli
add
adc
sbb
sub
mov
cmpxchg
mov
insb
xchg
mov
ret
push
mov
nop
add
icebp
fsubr
fidivrs
adc
pop
and
lods
mov
leave
insl
inc
lods
jbe
add
inc
or
mov
aas
loope
ret
rcrl
sub
sub
or
test
repz
jle
push
pop
push
mov
or
dec
js
adc
mov
and
sbb
sarb
js
push
outsb
fidivrl
cmp
cltd
inc
pop
or
fidivl
push
or
flds
call
jns
xor
adc
bound
lods
cs
or
shlb
mov
orl
mov
test
or
sub
out
pop
adc
pop
addl
adc
mov
scas
xor
pop
scas
mov
aas
mov
xchg
push
repnz
jno
mov
mov
mov
and
icebp
pop
pop
cmp
dec
in
loopne
adcb
loope
mov
cs
pop
sub
mov
add
dec
and
push
or
pop
test
push
mov
and
cmp
test
js
push
push
ds
ss
orb
ja
fwait
shll
out
dec
xor
lock
loopne
shrb
loope
mov
and
mov
insb
test
roll
dec
jp
inc
cmp
inc
lock
cmp
adc
push
int3
xor
fisubl
push
add
mov
mov
xchg
ljmp
pop
inc
call
lds
dec
mov
andb
cmp
arpl
mov
sub
sub
mov
sbbl
test
mov
rolb
fcompl
sub
xchg
fwait
stos
and
int3
or
ret
and
stos
pextrw
or
or
sub
insl
mov
sbb
mov
sub
das
push
rorl
jp
and
sbb
dec
ljmp
loope
xor
inc
mov
es
lds
dec
adc
addl
test
arpl
sti
and
or
mov
out
jge
adc
mov
dec
dec
out
mov
sbb
cmp
xor
popf
and
pop
stos
ret
test
data16
sbb
mov
les
pop
and
add
les
push
xchg
loopne
pop
daa
iret
or
mov
or
stos
add
xchg
les
int
and
mov
cmp
pushf
add
in
out
imul
lods
stos
mov
cwtl
ret
push
outsb
or
sub
outsl
fstl
jns
call
call
mov
jp
ljmp
sahf
mov
or
ljmp
pop
imul
sub
fisttps
jmp
xchg
push
mov
stos
xchg
jle
data16
jmp
push
pop
andl
js
xlat
push
enter
in
add
add
jnp
push
mov
dec
arpl
and
push
sub
xsave
push
adc
add
pop
pusha
lret
mov
das
insl
push
pop
shrb
fstl
ja
repnz
sbb
mov
dec
ja
sbb
and
and
add
mov
popa
ret
dec
fwait
sbb
xor
fstp
jmp
cmp
arpl
cmp
mov
sub
push
and
ret
mov
daa
mov
rcrb
mov
add
inc
push
pop
cmpsl
shlb
sub
inc
arpl
hlt
aad
pusha
push
cmp
cli
pop
push
sbb
test
shlb
lret
pop
add
jbe
cmp
pop
mov
adc
jnp
cmp
push
js
jb
adc
cwtl
cmp
jle
or
xlat
dec
ret
arpl
cmpsb
push
gs
xlat
lret
mov
aam
fisttps
lahf
test
call
adc
xor
xchg
rclb
jne
xchg
xor
adc
pop
push
imul
pop
jno
loope
inc
cmpsb
in
ret
sub
sbb
push
add
or
adc
jge
imul
std
repz
inc
add
pop
ja
arpl
or
pop
mov
and
shlb
xchg
xor
sbb
stos
jns
mov
mov
xchg
add
sahf
jb
add
imul
aas
jae
add
fdivs
mov
rcl
inc
pop
test
mov
add
jo
insb
or
frstor
sbb
sahf
mov
or
test
std
pusha
ret
mov
mov
in
xchg
adc
fldt
xchg
push
xchg
jb
cmpsb
repz
add
mov
mov
gs
jnp
xchg
scas
sub
icebp
cmpsb
jecxz
cmp
push
rclb
cmpsb
xchg
fmul
pop
ljmp
push
push
daa
xor
mov
int
jb
jecxz
mov
pop
push
out
adc
lods
dec
push
inc
lret
loopne
push
dec
add
push
adc
lret
iret
jb
repz
ret
lret
mov
fsubl
stos
pop
sub
or
adc
jp
add
bound
mov
cmc
and
inc
jno
nop
loop
clc
fs
fisubs
out
push
xor
mov
jb
push
outsb
inc
push
test
xchg
rolb
mov
cmp
pop
ret
cwtl
clc
and
in
es
adc
ss
mov
lds
dec
cmp
and
mov
insb
fdivl
lods
sbb
jmp
mov
push
xor
cmpb
subb
fsubl
and
iret
ljmp
js
inc
sub
cwtl
rorb
shld
rorb
or
jp
mov
scas
jne
ret
not
or
inc
jnp
push
and
adc
int
xlat
stos
xor
cmp
fsubs
mov
cmp
add
fisubs
movsb
pop
mov
mulb
add
pop
jecxz
mov
add
xchg
in
movsb
xchg
aas
repz
mov
sbbb
pop
divl
jg
sbb
iret
ret
insl
mov
pop
es
sbb
lods
jne
loop
jp
add
jbe
jge
aas
inc
xor
sub
mov
xchg
cs
jle
jne
inc
jne
stos
data16
pop
jmp
push
mov
dec
addr16
or
pusha
ror
add
push
cmp
sbb
inc
push
jnp
and
push
sub
sbb
adc
ud0
add
mov
cmp
je
jbe
rep
pop
shrb
push
xchg
jnp
fiaddl
ds
cmp
mov
sub
cmpsl
imul
or
xchg
sub
shr
jmp
scas
jmp
lret
xrelease
mov
jecxz
and
outsb
push
dec
and
popf
adc
bound
mov
lds
lea
and
pop
es
mov
jnp
ret
mov
sar
cwtl
sub
push
mov
ret
gs
xor
data16
jo
sbb
insb
mov
nop
lea
js
jnp
and
jno
push
in
and
or
or
mov
leave
movsl
cmp
cmp
jl
cs
mov
in
shlb
pop
das
pusha
xchg
out
fs
fcoms
stos
dec
cs
fistps
add
daa
cmpsb
aas
lds
pop
mov
imul
bound
call
push
pop
pop
xchg
int3
push
insb
dec
pop
adc
scas
int
dec
cmovge
ljmp
das
test
js
cwtl
in
pop
repz
sub
mov
and
jnp
pop
ret
nopl
xchg
add
lock
sbb
fwait
dec
mov
add
movsb
pop
frstor
mov
fdivs
and
inc
test
and
sti
hlt
sub
mov
add
cmp
test
pushf
push
ljmp
stos
dec
std
or
dec
rorl
and
mov
xchg
scas
ljmp
mov
das
jp
mov
jnp
into
in
shlb
shlb
fstpl
negb
les
and
jmp
cmp
jge
test
mov
or
shll
dec
in
pusha
arpl
data16
cmp
pop
pop
fwait
add
fnstcw
jge
pop
dec
cmp
push
dec
add
outsl
add
mov
out
or
sbb
sarl
cwtl
mov
sub
adc
sub
inc
mov
loopne
fiaddl
aaa
add
adcb
stos
fwait
adc
stos
imul
mov
loopne
popf
lret
orl
fidivrs
jge
and
inc
std
add
mov
loopne
push
pop
adc
lea
xor
and
mov
aas
enter
pop
arpl
int3
xor
mov
jmp
add
divb
repz
ret
lock
shlb
fbld
mov
cwtl
inc
xor
push
lahf
sbb
outsl
sub
sub
jae
ret
aam
sub
hlt
jmp
out
cvtpi2ps
mov
les
nop
aam
sbb
push
inc
in
mov
pop
cmp
push
cmp
pop
dec
jb
xchg
push
jl
push
sub
nop
lcall
out
mov
in
outsl
in
jl
push
inc
dec
popa
int
push
lock
adc
daa
add
sahf
aam
call
repnz
int
call
pusha
mov
mov
xor
and
xor
mov
jge
cmpsb
mulb
xchg
popa
les
loop
add
inc
fstp
ja
das
movsb
adcl
add
sbb
mov
ret
jno
aad
out
or
inc
mov
or
inc
inc
mov
fldt
pusha
sarl
arpl
xchg
or
cmovo
fidivs
inc
jmp
into
faddl
add
add
arpl
mov
test
add
push
test
dec
pushf
lods
sbb
scas
adc
pop
dec
mov
xchg
lods
mov
push
mov
inc
adc
xlat
and
cmp
cli
vdivss
cli
jl
xchg
or
cmpl
dec
scas
mov
mov
rcrl
rolb
add
es
aad
mov
loop
mov
mov
into
jb
inc
cmp
jle
jl
sbb
ljmp
insl
rorb
mov
das
das
insl
jp
push
cwtl
push
mov
js
or
cs
dec
shlb
popf
stos
jbe
xor
je
sbb
or
pushf
fcomps
or
les
jno
fisttpl
or
pop
pop
adc
arpl
cmp
jb
mov
xchg
ret
fldcw
pop
shl
sub
jbe
das
inc
xchg
pop
icebp
xchg
sub
sub
lods
inc
jge
or
push
mov
adc
aam
or
shll
pushf
pusha
or
addr16
mov
cmp
lahf
idiv
int
inc
scas
add
and
adc
test
push
mov
rol
sub
loope
popf
mov
ds
lock
jne
xchg
sbb
add
or
cmpsb
imul
add
ret
aas
fdivrs
push
rcrl
add
xor
arpl
aas
pop
and
das
fidivl
fwait
in
jb
mov
add
movsl
iret
jne
inc
in
pop
dec
push
add
ds
popf
mov
in
mov
outsb
mov
dec
sbb
cmp
fsincos
es
or
int3
push
insb
push
mov
adc
or
dec
and
aas
xchg
je
bound
test
dec
mov
out
mov
aam
push
dec
push
inc
flds
pmaxub
filds
call
adc
push
sub
aad
cmpsl
and
stos
insl
push
rcll
sar
aaa
loop
dec
dec
cmp
fsubl
or
jo
pushf
enter
loop
or
addr16
push
aam
lret
mov
js
jl
push
testl
imul
nop
divl
aam
loop
ljmp
mov
dec
scas
cmp
loopne
pop
mov
out
outsb
out
ficomps
or
fidivrs
cmpsl
pop
ljmp
loop
pop
push
fdivrp
enter
push
mov
imul
push
dec
and
mov
adc
dec
push
les
and
lret
insl
test
sbbb
and
in
adc
movsb
pop
add
cmp
jecxz
mov
imul
pop
repnz
aam
sbb
adc
js
dec
mov
inc
scas
out
ss
pop
rorb
pop
insb
sub
call
cwtl
push
fidivl
iret
mov
push
enter
test
push
cmp
push
push
and
inc
popa
push
pop
sti
rcr
jle
inc
and
rolb
hlt
pop
stos
fdivs
xor
add
sub
mov
jle
mov
aam
mov
cmp
jae
ret
xor
inc
cli
cmp
rcll
enter
enter
neg
jbe
jp
push
add
cmp
inc
push
xor
mov
popf
fsubr
fdivs
ficoms
jmp
fildl
sbb
lods
mov
out
jae
mov
adc
xchg
popa
jnp
hlt
shlb
loope
push
mov
pushf
or
fldt
roll
jmp
loope
adc
pop
lock
or
jo
and
bound
movsl
xchg
sahf
shlb
pop
xchg
jb
sbb
cmpsb
xor
lcall
shrb
jge
fstpl
jo
add
test
cmc
push
inc
in
jae
into
mov
adcl
mov
in
sbb
jnp
adcl
xchg
stos
cmp
add
in
ljmp
jl
xchg
mov
lock
mov
add
dec
es
jo
cmp
add
ss
into
sbb
pop
rcl
aam
js
pop
dec
and
into
dec
sbb
mov
sbb
sbb
mov
rcrb
fs
aas
imul
push
mov
movsb
es
xor
pusha
sub
shlb
mov
xor
cli
mov
mov
fiadds
fwait
inc
jg
aam
aam
xor
sarb
pop
test
jnp
jmp
daa
and
fisubl
push
mov
xchg
add
add
out
jne
scas
iret
loope
lahf
sbb
push
jmp
sbb
bound
push
adc
and
sbb
icebp
mov
mov
jmp
in
outsl
inc
pushf
movsl
sbb
sbb
mov
xor
and
das
mov
push
icebp
sbb
push
mov
out
pop
push
lock
enter
cld
ficoml
add
cmp
jno
cs
into
in
jp
push
ret
iretw
mov
shrb
shrl
repz
add
and
mov
mov
push
mov
cwtl
es
lret
fnstcw
mov
sub
xchg
shrb
rclb
int3
mov
fiadds
or
add
fcmovb
ret
imul
and
mov
outsl
or
mov
adc
add
jp
arpl
adc
loope
cmp
aad
sbb
into
ss
cltd
and
fdivrs
cmp
jae
aas
das
ss
adc
ja
xor
jae
divb
jnp
popf
xor
lods
xor
and
int
aaa
pop
cmova
xor
cli
rcrl
pop
dec
mov
out
jnp
push
pop
cwtl
push
pop
das
addr16
fildll
loope
nop
sub
addr16
out
and
and
jnp
sbb
inc
pop
push
xor
cmp
loop
adc
sub
stos
out
mov
int3
adc
mov
cmp
fs
imul
add
fs
ret
outsl
je
aas
ret
cltd
test
arpl
add
mov
mov
fstpl
imul
push
popf
in
mov
sbb
inc
jnp
mov
xadd
iret
loop
add
cmp
mov
mov
fldenv
jo
scas
jae
mov
pop
sub
mov
push
fldenv
sbb
sub
gs
and
daa
sbbl
ret
popa
mov
mov
xchg
fwait
mov
xor
inc
pop
lahf
and
loope
in
mov
xchg
jecxz
mov
xchg
cmp
or
out
xchg
mov
mov
sbbb
push
sti
dec
jbe
fs
lret
mov
fsubs
insb
repz
mov
divl
sbb
cmp
dec
iret
les
dec
sub
pop
icebp
in
mov
lcall
xchg
sti
mov
xchg
rol
and
data16
pop
xlat
insb
xor
or
imul
cmp
jecxz
das
adc
out
outsb
xchg
xor
and
xchg
and
cmp
or
sbb
sbb
add
dec
and
sti
mov
adc
adc
mov
aaa
jb
pop
subl
jle
add
inc
pop
shll
sbb
clc
mov
or
dec
xor
fldcw
jno
adc
das
jno
jmp
daa
dec
pop
add
pop
or
sub
into
xchg
mov
cmp
xchg
pushf
imul
or
fisubrs
push
cmp
cmp
cmp
rolb
jnp
in
fwait
dec
aaa
adc
jg
movlps
fldenv
cli
jae
and
negl
pop
mov
adc
jno
neg
lods
xor
cmp
adc
stos
imul
adc
xchg
mov
cltd
outsl
pop
arpl
push
sbb
addr16
imul
rep
fistpll
stc
pop
add
outsl
mov
ret
test
ja
sub
pop
mov
or
mov
ss
pop
dec
adc
and
lea
inc
daa
mov
fbstp
inc
loope
mov
fdivs
mov
pop
sbb
mov
mov
dec
sarb
sbb
xchg
push
stos
mov
push
fwait
add
addb
pusha
dec
mov
scas
jmp
popw
sbb
pop
lcall
xor
mov
adc
cld
int3
inc
lcall
test
mov
xor
stc
push
sbb
or
and
sub
cmp
add
test
shrl
pop
into
sub
jns
int
sub
out
subl
pop
cwtl
lret
or
mov
shrb
xchg
pop
jecxz
out
jp
cmp
mov
xlat
adc
scas
int3
or
mov
pop
jge
ljmp
scas
jmp
orl
shrl
ret
fidivrl
call
idivb
andl
xchg
jb
mov
es
insl
cwtl
int3
adc
xchg
sub
negl
ret
outsb
fbld
aaa
mov
aad
das
add
dec
test
das
lcall
or
shll
inc
pushf
hlt
loop
mov
or
push
outsl
stos
add
mov
faddl
adc
or
sub
roll
push
ret
test
lea
cli
les
shl
adcl
push
sbb
add
call
call
shll
addr16
iret
leave
push
int
xchg
push
cmovno
gs
fimull
inc
lea
stos
adc
in
shll
iret
push
jecxz
mov
inc
mov
mov
add
jl
jb
addb
inc
test
mov
cmp
xor
jl
outsl
sbb
std
sub
or
pop
adc
mov
xchg
rorl
scas
in
cmp
js
arpl
mov
fadds
jnp
xchg
dec
ljmp
inc
xchg
adcb
xor
out
add
adc
stos
stos
xor
inc
pusha
arpl
add
jnp
jbe
scas
js
jmp
adc
lcall
xlat
loopne
jb
xor
sub
je
dec
xor
lds
dec
jne
into
scas
jg
mov
cmp
addr16
adc
js
das
icebp
arpl
or
mov
js
dec
loope
sbb
or
mov
pop
call
inc
fstpt
mov
sbb
aam
aad
jg
sbbl
xchg
mov
ret
mov
lods
pop
xor
cmpsb
inc
int3
rclb
pop
mov
inc
xor
inc
insb
fcmovnbe
xchg
jb
imul
ja
dec
mov
decl
adcb
or
or
and
clc
int3
inc
imul
into
dec
and
dec
xor
push
jmp
dec
cmp
and
popf
dec
ret
add
cmp
push
mov
fisubrl
test
outsl
push
mov
ret
rorb
lods
and
stos
cwtl
std
sahf
adc
out
iret
test
sbb
jb
mov
pop
mov
add
cwtl
testb
decb
inc
mov
inc
sub
sbbl
arpl
cwtl
inc
inc
shrb
inc
arpl
cmp
js
adc
inc
mov
push
jb
and
mov
ret
popaw
lret
sbb
shll
push
icebp
mov
pop
mov
scas
and
movsb
inc
mov
imul
push
pop
sub
stos
stos
add
cmp
mov
jmp
scas
and
sub
inc
mov
aam
ret
add
mov
fcoml
push
repz
in
sub
xor
add
xor
jp
xor
push
pop
mov
mov
inc
je
das
add
xor
insl
and
rolb
movl
xor
out
sub
and
sub
orl
std
jl
or
mov
stos
bts
dec
push
shrl
jns
das
pop
sbbb
int3
cmpsb
mov
cmp
std
je
dec
and
mov
pop
cwtl
ret
imul
arpl
faddl
pop
movsb
lcall
sbb
fimull
push
and
mov
cmp
inc
mov
push
xor
movl
or
xchg
and
cmp
loop
cmpsl
xchg
mov
adc
dec
rorb
jecxz
lret
mov
adc
xor
fiadds
bound
and
and
sbb
popa
sbb
cmp
add
hlt
xor
loop
movsb
cmpsl
addb
mov
mov
hlt
xchg
mov
inc
pop
js
xor
in
shrl
mov
dec
int3
jo
push
mov
imul
or
data16
enter
popf
push
cmp
add
and
sub
mov
scas
jp
loop
mov
aaa
sti
and
lahf
add
inc
sbb
mov
cmp
pop
pop
lock
mov
and
sbb
or
sub
add
mov
mov
and
enter
in
and
pop
addr16
xor
xchg
fwait
xchg
addb
jo
mov
and
lods
dec
push
pop
and
sub
divb
mov
jno
lds
popf
jmp
cmp
pop
fistl
bound
mov
ljmp
mov
xor
or
fdiv
stos
lret
rcll
push
loopne
jle
mov
cmp
jle
xor
jp
shrl
add
pop
and
jmp
subb
ss
ficompl
mov
test
cmp
ljmp
sbb
mov
rclb
lock
icebp
cli
sub
mov
iret
push
subl
xor
xor
and
add
pop
push
movsl
sbb
sub
stos
inc
xor
aad
cmpsb
aaa
ret
inc
or
jmp
xchg
sbb
mov
inc
inc
fstps
lods
adc
cmp
cli
mov
push
clc
jnp
sbb
cmp
sub
int
pop
sbb
push
sub
or
mov
cwtl
xor
and
cmp
mov
sub
popf
xchg
aas
ss
mov
mov
mov
xlat
xlat
mov
ss
aas
sbb
cmc
pop
in
pop
cmp
and
sarb
sahf
imul
mov
mov
cwtl
addl
ret
data16
inc
mov
push
pop
aad
lret
push
cmp
rolb
lock
dec
shl
lods
push
add
cld
sarb
add
mov
pop
adc
push
push
jne
or
clc
clc
lods
das
or
adc
lahf
sbb
adc
inc
sub
daa
hlt
sarb
push
inc
cwtl
adc
test
sub
adc
add
roll
and
stos
xchg
jnp
cmp
adc
add
xchg
mulb
es
mov
xchg
andl
jne
or
in
pop
cmovne
mov
jne
ret
out
mov
add
out
xchg
test
lock
call
shrl
lds
add
push
pop
add
mov
cmpsb
imul
push
in
xor
subb
add
insl
cmc
lcall
jbe
lcall
mov
dec
xor
movsb
call
jae
or
pop
cmp
dec
and
pop
sub
shrb
inc
ja
cli
sub
sub
mov
lods
add
clc
ret
lcall
dec
adc
sub
push
es
cmp
outsl
and
mov
lret
out
fimull
pusha
decb
jecxz
xchg
jecxz
add
cmp
add
stos
or
xchg
imulb
imul
pop
popf
sub
add
mov
rolb
rclb
adc
test
sbb
dec
push
fdivrl
fwait
adc
cli
les
adc
inc
sbb
mov
pop
insb
push
pop
jne
cmc
shr
fildll
add
loope
leave
aad
outsb
movsb
and
in
das
push
xchg
cmp
cmp
andb
les
mov
hlt
stos
add
mov
gs
and
xor
or
mov
movl
push
gs
mov
and
mov
jb
jo
mov
push
bound
outsl
js
and
imul
pop
mov
sbbb
pop
and
std
jo
popa
dec
mov
das
loop
dec
xchg
mov
pushf
dec
sub
scas
and
xchg
xor
pop
push
push
jo
cmpsl
cmp
inc
in
popf
iret
inc
add
mov
es
clc
pusha
lods
ficoms
andb
in
stos
xchg
sub
and
icebp
pop
repz
jns
or
mov
mov
outsb
jae
inc
pusha
stos
xchg
pop
adc
mov
int
not
sahf
popf
fidivl
mov
js
in
pop
std
ret
ss
mov
icebp
loop
mull
mov
or
out
pop
dec
xor
add
mov
cmc
jmp
rolb
add
adc
jge
inc
sbb
scas
lock
sbb
test
pop
mov
rolb
sbb
inc
mov
das
dec
dec
xor
pop
or
fnstenv
js
pushf
push
add
sub
jg
or
pop
movsb
inc
xchg
adc
and
clc
jbe
xor
rcrb
shll
mov
and
jb
mov
leave
mov
pushf
jb
or
and
inc
jp
daa
or
lods
shlb
pop
add
faddp
sub
popa
fldl
mov
push
cmp
adc
adc
fwait
cmp
inc
rcll
xchg
sar
xchg
dec
jecxz
js
mov
pop
or
adc
adc
fistl
mov
cwtl
in
lahf
lods
rclb
mov
xchg
rcll
cmp
sub
in
mov
jecxz
pop
add
cmpl
cmp
pop
pop
movb
jno
xchg
out
and
or
test
adc
ficompl
add
fdivr
imul
scas
or
lock
jb
mov
cs
ja
pop
xchg
pop
mov
sub
jnp
sub
int3
out
cmp
add
push
pop
add
mov
mov
icebp
cmc
push
loope
add
adc
sar
and
sub
es
pop
inc
pop
lds
out
or
mov
jecxz
cmpsb
fisubrs
orl
xchg
lcall
pop
mov
jle,pn
mov
mov
icebp
into
icebp
es
jae
xor
pop
add
sub
adc
adc
mov
push
sub
repnz
inc
shlb
aas
ret
mov
add
leave
ja
cltd
sbbb
repnz
data16
and
cwtl
lret
cmp
pop
stos
mov
and
pop
scas
and
push
jns
or
add
js
mov
lds
js
mov
sbb
adc
xchg
pop
sub
imul
addr16
or
inc
pop
mov
shlb
pusha
adc
cmpb
stos
call
push
mov
jne
dec
adc
cmp
sub
inc
cmpsb
mov
mov
sub
andl
cltd
dec
inc
in
and
in
push
push
in
lods
sbb
sbb
stos
mov
ret
xlat
mov
sub
jge
inc
and
dec
adc
mov
loop
shrl
test
and
mov
lods
or
cli
sub
xor
lds
test
xchg
jp
data16
jae
stos
jb
sti
pop
aad
incb
or
bound
sub
jge
or
sbb
xor
ss
sub
inc
add
idivb
jmp
imul
scas
mov
scas
fucomip
inc
call
ljmp
inc
sub
call
sbb
rcl
jbe
mov
sub
in
arpl
test
sti
inc
cwtl
mov
insb
insb
jnp
bnd
add
shlb
gs
fldcw
hlt
repz
adc
and
mov
adc
push
jmp
out
outsl
mov
or
jmp
jbe
sti
ret
or
sub
push
ret
and
add
adcb
ret
mov
mov
inc
jne
std
cmpsb
cmp
inc
dec
movsb
rolb
push
inc
jmp
xchg
enter
je
mov
call
push
arpl
sub
inc
adcl
lcall
cmp
and
pop
jge
add
aaa
mov
das
out
test
inc
pop
and
outsl
inc
fisubrl
pop
xor
repz
je
add
clc
repz
inc
cmp
imul
repnz
fnstsw
or
mov
ss
outsb
add
push
mov
push
repz
dec
push
mov
cmp
das
in
or
aad
push
xor
insb
mov
lcall
adc
cmp
mov
mov
add
mov
mov
bound
leave
inc
jne
sub
das
mov
aam
out
push
xor
rol
insl
sub
inc
fwait
hlt
add
lds
cmp
push
jp
pop
sbb
sbb
fwait
adc
call
shlb
ret
and
adc
mov
arpl
mov
jno
or
mov
cs
and
adc
lahf
push
aam
iret
mov
pop
sub
mov
ret
or
jge
add
ret
sub
pop
fimull
and
mov
mov
mov
jnp
push
sub
cs
rol
push
pop
lea
cmp
imull
mov
mov
cmpsb
sub
sub
add
and
xor
sbb
mov
push
shlb
pushf
in
cwtl
fcompl
pop
movsb
test
pop
das
jecxz
sub
add
xlat
sbbb
daa
inc
add
adc
jo
sti
lds
adc
mov
aad
adc
dec
pop
loopne
jl
pop
inc
or
sbb
outsb
mov
inc
shrl
insl
andb
xchg
outsb
xor
jae
adc
dec
daa
daa
jb
cmp
int3
jne
mov
or
mov
sub
int
loopne
jo
inc
jle
add
pop
cmp
sar
mov
insl
pop
in
dec
orb
enter
shlb
add
jo
mov
into
fnstsw
dec
js
dec
data16
shrb
cmpsl
mov
shl
jl
xchg
mov
add
lods
jae
shlb
xchg
fcmovnb
add
imul
sub
jg
das
inc
pop
add
das
mov
aaa
mov
fistl
and
mov
je
jnp
jne
add
inc
mov
sbb
outsb
add
or
jle
mov
jb
rolb
je
in
cmp
sub
fbstp
inc
push
or
repz
push
push
add
push
aas
ret
pop
add
mov
adc
add
and
lret
inc
add
dec
cmp
and
int
inc
dec
scas
scas
inc
inc
pop
mov
mov
aas
mov
scas
add
and
xor
pushl
pop
jle
addr16
push
fucomi
adc
pop
sub
push
jo
or
and
and
outsl
jb
sub
cmp
rcr
dec
out
insl
sub
popf
add
scas
push
jge
lea
cmp
sbb
scas
loope
js
dec
das
out
ficoml
adc
xor
dec
mov
pop
cmp
mov
inc
ret
cmp
and
xor
movsl
dec
movsb
mov
fbld
insl
push
xor
cmp
imul
imul
jns
outsl
ss
dec
or
lds
add
pop
jecxz
sbb
decl
call
out
repz
and
jp
inc
loope
sub
jmp
js
cmc
pop
xor
out
inc
testl
ret
push
leave
pusha
es
add
dec
push
inc
push
imul
xorb
lahf
das
cmp
stos
int
jecxz
and
scas
sahf
sub
or
pop
push
mull
xchg
imul
cmp
in
cmpsl
push
sbb
aas
xor
ss
imul
or
push
hlt
in
fdivl
push
out
ret
outsb
dec
enter
sub
mov
popa
dec
push
aad
dec
cmp
and
scas
test
jae
test
andb
adc
dec
mov
mov
pop
xor
aas
pop
sub
test
mov
rol
or
ret
push
mov
aad
adc
movsb
pop
or
sub
pop
mov
jg
lret
sub
fiaddl
sbb
and
sbb
iret
movsl
adc
add
addl
inc
add
adc
jnp
push
hlt
je
mov
into
push
xor
sbb
lret
in
jb
push
push
pop
insl
add
lds
push
andb
loop
daa
xchg
daa
fwait
xchg
mov
pop
jmp
mov
insb
jp
mov
scas
add
push
push
lea
push
test
subb
inc
mov
inc
ljmp
repz
lret
add
int
jge
inc
mov
jb
pop
push
sub
xor
or
fsubr
push
jle
mov
outsb
cmp
js
int3
scas
and
test
sub
and
pop
rorl
fdivrl
fsubr
icebp
sbb
mov
pushf
inc
je
aas
mov
cmp
mov
leave
test
roll
test
rolb
push
sbb
mov
mov
xchg
dec
test
add
sub
loop
leave
sbb
test
pop
xorb
dec
xchg
into
cmpsl
mov
das
xorl
sub
addr16
jg
out
lret
cmp
mov
daa
mov
cmc
cmp
daa
pop
jp
ret
ds
mov
sahf
jmp
rep
jb
adc
popf
hlt
xor
adc
push
xchg
enter
dec
xchg
sbb
jge
lea
xlat
movsb
dec
fistpll
sub
adc
adc
sub
test
jg
cmp
mov
push
inc
jle
lds
sub
jg
movsb
push
jp
add
inc
lods
xchg
es
cwtl
jg
xor
cmp
dec
repz
ss
sub
loopne
out
fs
js
lea
js
inc
lods
push
add
into
dec
jb
jp
test
shlb
call
pop
mov
daa
sub
jge
push
xchg
testl
rcl
roll
and
out
dec
ja
push
lret
add
nop
movsb
dec
inc
inc
mov
dec
movsl
dec
shlb
dec
popf
cmp
ret
divb
jle
dec
dec
dec
loop
adc
bound
in
sbb
jns
push
pop
sbb
jl
push
push
out
add
mov
mov
fisubs
or
and
xchg
inc
jnp
popf
mov
mov
adc
js
push
and
adc
sub
lock
inc
xor
dec
pop
add
jae
and
pop
fistpl
insb
pop
mov
sbb
lea
sub
adc
mov
xchg
mov
jl
jnp
mov
or
or
out
jge
or
popa
adc
and
mov
aam
dec
adc
popa
add
pop
out
in
shlb
sub
test
mov
test
pop
cld
imul
mov
mov
xchg
jmp
out
cmp
stos
mov
and
sub
sub
in
sbb
in
sbb
aas
add
pop
and
inc
inc
mov
aas
lds
int
jmp
ret
mov
jno
mov
add
mov
xlat
bound
sub
mov
jecxz
adc
jnp
mov
out
out
cmp
dec
sar
jge
sti
cmp
decl
jno
sbb
sbb
xor
or
lret
or
xor
iret
sub
in
mov
ret
aaa
ret
add
xor
mov
xchg
push
cmp
and
mov
rcl
mov
pop
mov
and
jge
xor
jnp
sbb
roll
stos
cmp
jecxz
jecxz
jmp
and
jp
stos
ret
sbb
cld
cmp
fwait
jecxz
out
sbb
js
add
mov
sbb
sbbl
pop
mov
jecxz,pt
sub
orb
lcall
xchg
xchg
fmuls
push
jge
jne
psubb
sub
xchg
mov
pop
or
adc
inc
cmp
add
add
mov
bound
insb
jne
sbb
movlps
fimuls
sbb
jno
lret
loopne
xchg
rorb
daa
jmp
scas
inc
jne
aas
ret
pop
mov
add
dec
push
pop
iret
cmp
pop
stos
loop
mov
push
mov
pop
push
inc
int
sbb
aaa
sub
notl
inc
mov
dec
sbb
aam
jg
shlb
mov
mov
dec
ja
jmp
popf
sub
cmpsl
push
adc
pop
push
inc
lcall
and
js
inc
add
mov
push
xor
mov
bound
test
xor
out
xchg
test
roll
loop
mov
fsub
cmpsl
mov
xchg
loope
stc
imul
mov
xchg
hlt
testb
push
cmp
dec
lret
or
clc
xor
push
data16
or
pop
xor
add
mov
xchg
fs
add
lcall
xchg
mov
aaa
mov
sub
cs
pop
aad
shrl
ss
inc
sbb
adc
dec
jae
adc
pusha
out
add
into
outsb
sub
fwait
xor
jge
data16
mov
lcall
pop
out
shrl
mov
or
data16
sti
iret
arpl
comiss
sub
faddl
rcl
ret
test
cmpsb
push
out
cltd
mov
and
rorl
hlt
push
loope
inc
les
dec
cmp
les
inc
pop
xorb
rolb
outsl
ja
sbb
lret
bound
mov
jl
pop
daa
int
add
stos
fs
pop
mov
xchg
jo
jl
sbb
inc
addl
mov
repz
aad
inc
xor
pop
imul
add
mov
dec
mov
inc
sub
push
jnp
vunpckhps
mov
sti
stos
roll
lea
dec
jge
cmpsb
out
xlat
mov
or
inc
sbb
fdivl
mov
cmc
enter
outsb
fcmovnbe
and
js
das
popf
xor
lretw
in
sbb
divb
sub
pop
and
sti
and
add
mov
mov
andb
mov
push
fwait
lcall
or
jmp
mov
add
mov
inc
adc
and
fldt
movsl
mov
pop
inc
sarl
loope,pn
pushf
inc
or
sbbb
lock
jmp
and
scas
jl
lret
pusha
leave
pop
imul
push
stos
je
xorb
rol
sbb
sahf
call
xor
sbb
insl
shrb
outsb
fisubs
dec
divb
ret
push
add
sbb
mov
pop
adc
mov
or
push
sbb
mov
dec
mov
jmp
ljmp
inc
lods
sbb
mov
push
xchg
xor
xor
and
xchg
xor
jg
je
stos
in
xchg
inc
pop
xchg
mov
sub
fcomps
cmp
and
out
sbb
insl
stos
push
insl
dec
add
jb
test
dec
aaa
mov
or
loop
jnp
jae
mov
and
pusha
lock
je
sbb
ret
pop
in
cli
xchg
add
dec
xor
call
outsb
aaa
mov
pop
sbb
out
das
aas
lods
xchg
adc
jnp
outsl
jbe
cmp
aaa
sub
jbe
pop
sub
xchg
adc
adc
sub
outsb
add
jo
push
xlat
cs
lods
xor
test
sub
ds
out
aam
sub
xchg
sub
roll
daa
adc
imul
mov
add
pushf
jmp
les
aaa
lock
dec
mov
negl
aam
mov
sbb
mov
ja
adc
out
scas
sub
push
xchg
mov
sub
pop
push
or
in
rcrb
mov
lds
adc
iret
or
mov
pop
into
data16
add
cld
mov
jb
mov
cmp
andl
jecxz
xchg
bound
inc
mov
or
sub
sub
bound
pop
lods
cmp
insb
orl
push
popa
sub
add
mov
inc
stos
sub
lock
test
dec
shlb
sub
or
mov
bound
mov
push
add
fdivp
adc
adc
adc
inc
pop
adc
push
mov
mov
pusha
cwtl
inc
bound
mov
in
mov
lods
jns
sbb
ja
mov
cmp
pop
outsb
and
subl
or
push
mov
ja
adcl
pushf
lea
loop
mov
or
test
dec
sbb
adc
or
movsl
sub
popaw
inc
addr16
mov
add
adc
cmp
loop
sbb
imul
and
sbb
ja
push
push
or
leave
pop
loope
repz
mov
call
cmp
outsb
sti
rcr
loop
inc
adc
push
movsb
sbb
stos
test
sbb
mov
adc
fdivrs
int
jnp
mov
pop
dec
rcrb
imul
xor
insl
and
clc
sub
scas
inc
cmc
loope
ljmp
aam
and
lfence
push
imul
and
jne
mul
loope
jnp
outsl
push
bsf
bound
stos
push
mov
push
fmulp
testl
in
pushf
pop
mov
or
jmp
hlt
or
icebp
js
in
es
notl
test
xchg
jp
push
in
adc
cld
pop
inc
push
repz
xchg
jmp
je
ljmp
jb
add
inc
aaa
mov
jae
xor
dec
sub
sbb
sbb
jmp
push
aam
popa
les
jle
dec
rcrb
imul
or
fiaddl
xor
jo
aaa
add
cmp
lcall
jl
in
popf
inc
call
aaa
mov
out
pop
xchg
cld
mov
ret
mov
mov
inc
inc
xor
sub
out
mov
jb
jmp
pop
inc
adc
add
jecxz
call
push
and
jnp
dec
cmp
outsl
fwait
mov
mov
fimuls
or
mov
lret
rcrb
cmpsl
mov
xor
xchg
mov
test
inc
cmp
xlat
nop
addr16
cmpsl
xchg
add
dec
add
dec
loopne
or
add
das
or
and
pop
add
les
push
lods
lods
and
ret
mov
or
mulb
mov
xchg
mov
ljmp
mov
es
cwtl
les
and
sbb
adc
pop
sbb
or
mov
mov
mov
add
and
pop
test
fisttpl
or
movsb
pop
test
ret
fdivrs
shll
or
mov
and
xchg
imul
scas
lods
lods
and
xor
cltd
sub
inc
or
outsl
stos
stos
add
mov
mov
push
test
ljmp
out
cmp
fucomi
xor
sbb
mov
and
add
push
int
adc
mov
cmp
and
test
mov
mov
test
lcall
cmp
add
xchg
mov
test
xchg
lds
sub
xor
mov
pop
aas
sub
inc
jo
dec
push
mov
nop
mov
rolb
add
add
or
cmp
mov
sarb
add
xor
jp
pop
inc
shll
adc
inc
scas
mov
ss
and
mov
mov
int
adc
cmp
jle
mov
mov
xchg
je
adc
xchg
lock
jae
jge
gs
mov
movsl
insb
add
loope
xchg
jo
mov
xchg
daa
test
push
cmp
aad
ret
lcall
adc
or
push
dec
sub
pop
sbb
addr16
xchg
ficomps
add
push
insl
jae
sub
scas
outsl
jno
push
mov
test
or
lock
lret
pop
xlat
in
pop
insb
inc
xor
xchg
test
push
xor
mov
push
adc
jmp
rcll
or
inc
adc
pop
xchg
jbe
jne
outsb
incl
aam
sbb
adc
or
or
test
or
loop
jno
mov
cmpsb
push
xchg
rol
fwait
movsl
mov
ds
xchg
mov
lock
push
in
dec
adc
es
cmp
xchg
js
jmp
mov
stos
pop
outsb
dec
and
and
js
pop
loopne
fnstsw
mov
aas
mov
or
clc
fdivrs
xlat
cld
lahf
arpl
mov
sub
add
jp
int
dec
negl
push
adc
ss
cmp
add
push
xlat
and
xor
jnp
iret
sbb
push
scas
and
mov
xchg
sbb
xchg
add
cmp
sbb
inc
in
out
xor
ret
in
xchg
daa
sbb
push
subl
push
pop
xchg
add
sbb
imul
or
popa
lea
add
pop
mov
adc
rorb
jg
or
mov
or
leave
sub
dec
push
mov
mov
mov
dec
jle
jnp
or
and
popf
mov
push
dec
addr16
lahf
sub
lret
xor
inc
push
ret
insb
xchg
insl
add
pop
fs
sub
xchg
test
jmp
stos
pop
jg
sub
aas
lds
and
jg
sti
xchg
push
mov
rclb
loopne
inc
cmp
push
pop
mov
fistl
adc
lea
clc
negl
cltd
push
lahf
mov
adc
mov
dec
and
sub
ret
xchg
jae
adc
outsl
fwait
cmp
mov
push
repz
test
and
popf
test
inc
adc
push
or
cwtl
lea
pop
jmp
test
jmp
mov
cmp
nop
add
pop
sub
sbb
push
punpckhbw
aam
bound
pop
adc
xchg
ja
and
adc
push
or
pop
jl
adc
inc
jecxz
leave
or
xchg
jle
mov
push
xchg
xchg
adc
or
pop
ja
or
lods
push
xchg
test
sbb
push
int
gs
adc
imul
pop
adc
push
fs
sub
stos
push
fwait
sub
fiadds
sbbl
sub
arpl
sbb
add
inc
fsubl
pusha
shlb
outsb
pusha
mov
in
nop
push
mov
jmp
xlat
ljmp
mov
cmp
jne
inc
and
sbb
add
inc
stos
lret
xchg
and
js
lds
lock
cmc
adc
dec
in
out
divps
dec
inc
sbb
adc
jno,pt
enter
or
push
jge
pop
or
mov
addb
insl
xor
frstor
push
sub
or
add
stos
and
insb
push
aam
inc
int3
inc
in
popf
insl
pop
loop
popf
ret
lods
sub
dec
mov
fcomps
adcl
adc
and
cmp
and
sbb
out
or
pop
sbb
xchg
and
imul
int
mov
pusha
aad
pop
neg
ljmp
nop
rorl
in
mov
lds
xor
repnz
test
add
movsb
js
or
sbb
cmpsl
sub
adc
xor
and
xchg
out
mov
push
and
jl
cmp
fdivrs
xchg
pop
and
or
inc
roll
aad
mov
pusha
ret
jb
dec
sub
outsb
fwait
jp
xchg
mov
js
push
mov
ret
mov
in
scas
bound
rcll
dec
lahf
aam
lcall
lods
dec
xor
pusha
sbb
push
dec
ret
fsubrl
sbb
mov
lcall
mov
push
test
hlt
and
inc
rolb
cmovle
lock
pop
add
aaa
arpl
add
pop
daa
lcall
jnp
pop
dec
andb
nop
and
mov
popf
negb
and
xchg
ret
xchg
rorb
sbb
ret
fwait
lcall
clc
sti
xchg
mov
xchg
pop
mov
cld
bound
jo
and
sub
jl
jbe
pop
mov
jp
repnz
ds
pop
dec
cmp
xchg
mov
cmp
xchg
hlt
nop
pusha
cmpsb
out
ficomps
sbb
fs
adc
mov
xor
add
jno
arpl
pushf
push
pop
ret
xchg
push
xchg
scas
hlt
fists
add
and
rorb
nop
pop
add
mov
dec
rcrl
lods
cmpsb
sub
out
cmp
push
mov
push
mov
pop
adc
dec
lret
adc
dec
fdivrs
cmpsb
or
test
lcall
dec
popa
mov
cmp
add
lret
push
bound
or
xchg
jmp
nop
and
bound
mov
adc
sub
inc
mov
in
fdivrs
inc
jno
stos
or
mov
jno
scas
mov
out
fnstsw
pop
dec
mov
and
lahf
mov
ret
ja
pushf
mov
adc
inc
mov
lret
or
jmp
sahf
add
and
fnsave
push
pop
mov
inc
dec
xor
inc
jle
add
jp
sbb
push
xchg
loope
lods
mov
ror
xchg
add
xchg
es
mov
test
test
imulb
sahf
dec
push
imul
loop
paddb
mov
cs
push
add
cmp
or
jle
scas
lcall
repnz
push
dec
sub
roll
sub
lock
mov
test
arpl
das
lea
and
adc
dec
popf
xorb
cmp
shlb
ja
scas
test
cmp
les
inc
push
insb
add
mov
js
dec
adc
inc
and
or
arpl
sub
sub
jbe
inc
fcmovnb
or
fsubl
sub
sub
mov
lret
fldcw
pop
jae
ret
jl
std
and
data16
lds
push
insb
mov
and
adc
pand
mov
jp
inc
rcrl
lahf
imul
fiaddl
and
sbb
push
push
or
stos
xlat
and
js
data16
xor
mov
sbb
imul
sub
inc
stos
mov
mov
and
pop
addl
and
pop
mov
sub
add
addl
lock
adc
add
pop
scas
lahf
or
lcall
daa
pop
push
inc
and
dec
push
or
fcmovne
hlt
js
pop
and
popf
ficoms
fldcw
cmpsw
add
mov
stos
add
subl
pop
sub
fwait
test
int3
ret
rolb
or
sub
add
mov
push
xorb
cltd
mov
jg
je
andl
mov
mov
jno
leave
jp
xchg
movsb
and
add
ss
lods
inc
sbb
adc
arpl
push
inc
cmpsl
adc
int
sbbb
aam
cmp
and
inc
xchg
xchg
js
add
cmc
loope
push
cmp
test
jns
nop
ljmp
xor
outsb
movsl
xor
and
push
nop
dec
popf
mov
sub
loope
loopne
cmp
mov
sbb
pushf
pop
stos
xchg
add
cmp
mov
jo
and
sub
outsb
sbb
addb
jle
sbb
js
orl
sti
sub
cltd
test
mov
add
mov
int
lea
ss
or
dec
jbe
stos
mov
mov
sbb
and
je
mov
sub
ret
pop
cmpsl
mov
mov
dec
inc
les
ljmp
cmpsb
sbb
fidivl
xor
dec
adcb
pop
popa
fldl
shll
adc
and
int3
mov
and
cli
jl
mov
xchg
inc
add
decb
roll
jns
add
and
push
imul
call
pop
add
and
pop
pushf
sbb
or
add
inc
pop
pop
bound
jb
add
daa
add
dec
inc
inc
cwtl
sbb
rclb
inc
sbb
jg
rorb
dec
pop
push
add
mov
jp
adc
mov
mov
push
xor
adc
adc
mov
ds
lock
sbb
push
out
cmpsb
aam
orl
lcall
mov
out
cmp
loopne
xchg
mov
fs
jl
insb
adc
sti
xor
push
subb
mov
xor
mov
fadds
jb
cmpsb
stos
lods
push
xchg
push
insb
pop
rclb
mov
pop
push
xor
test
test
xor
pop
xor
cmp
or
lret
push
adc
je
gs
xchg
xor
push
jp
or
pusha
xor
dec
aad
mov
mov
imul
outsl
mov
das
or
loope
pop
xchg
aam
rcrb
shll
push
and
push
mov
jecxz
xchg
iret
adc
insb
inc
lcall
stos
daa
and
outsb
or
adc
in
sub
add
cmp
test
dec
and
repz
test
das
stos
movl
addb
push
arpl
scas
inc
ud1
push
xor
incb
shlb
adc
or
inc
test
xchg
jns
mov
popf
add
mov
push
push
fldl
dec
adc
and
nop
jge
test
inc
sub
test
sbb
je
cmp
adc
stc
fwait
sahf
notl
push
sbb
or
xchg
sub
adc
lods
pusha
sbb
rcl
add
sub
inc
mov
cmpb
add
mov
and
jo
loop
dec
cmp
sbb
add
nop
inc
add
jbe
adc
dec
adc
das
loop
mov
xchg
iret
nop
add
jl
inc
adc
push
arpl
mov
or
loope
nop
sbb
ret
jae
or
and
sbb
mov
fwait
add
sub
or
lret
dec
jmp
inc
xor
pop
sbb
in
xchg
rclb
inc
push
lahf
add
mov
jbe
adc
and
rolb
cmp
and
test
add
das
jge
xchg
mov
mov
pop
mov
xchg
repz
int3
outsb
cmp
xor
mov
add
fwait
xor
mov
xchg
scas
fwait
mov
xchg
test
push
rorb
les
jl
mov
inc
std
sbb
insl
add
or
loope
mov
xor
sbb
push
pop
dec
and
and
aam
mov
lret
daa
test
js
mov
arpl
push
pushf
rcr
mov
addl
pop
push
inc
pushf
xchg
testb
push
aad
rcrl
ret
jge
add
sbb
ror
pop
mov
push
adc
mov
fistpll
inc
and
jg
mov
jb
cmpsl
pop
xchg
add
popa
sbb
sbb
popa
loopne
aas
fdivl
push
std
mov
jo
mov
mov
jl
outsl
fdivrs
cmp
test
xor
sbb
shrl
cli
es
sub
pop
and
mov
pop
fists
push
adc
scas
inc
mov
jmp
and
sti
dec
mov
add
in
mov
sbb
xorb
fldcw
mov
stos
jb
xor
jae
sub
pop
mov
aam
push
imul
int3
mov
xlat
popf
js
push
dec
addb
mov
lods
sbb
mov
xchg
or
mov
arpl
pop
dec
mov
dec
xchg
inc
or
sub
loopne
data16
inc
or
xlat
je
and
jns
inc
lret
mov
pop
sub
jnp
mov
inc
insb
push
push
addb
xor
sub
les
jl
int
mov
ljmp
pop
jns
push
repnz
fnsetpm(287
lret
jecxz
sub
and
xchg
sub
cmp
aam
jno
insb
add
adc
mov
rcrb
ss
popf
scas
sub
pop
cmovl
add
sub
xchg
call
inc
sbb
xorb
and
test
cmp
or
xor
push
inc
sahf
cwtl
mov
test
ret
sub
into
sub
pop
adc
stos
inc
movsl
add
pop
iret
mov
push
aad
lcall
jnp
adc
adcb
paddq
and
jl
or
and
addl
cwtl
jo
mov
push
leave
dec
mov
push
stc
stos
addb
andps
inc
mov
inc
pushf
fisttpl
mov
int3
das
lock
xor
mov
and
xor
xchg
cmp
adc
add
mov
test
push
test
xchg
aas
fsubr
add
pop
aas
enter
dec
rclb
pushf
rcll
sub
sbb
xchg
inc
ret
stc
push
dec
insl
das
mov
jecxz
scas
lock
loop
sub
push
sbb
add
inc
bound
add
sbb
sbb
push
fstpt
pop
ret
int3
popf
add
out
add
push
fldt
sti
fimuls
lcall
stos
push
movsb
lock
out
mov
lds
out
xchg
sbb
xor
lods
xor
test
mov
push
bound
mov
loope
scas
clc
jp
das
cmp
call
shl
ret
adc
dec
jg
jl
xor
xchg
adc
and
sub
ror
popa
xor
inc
or
pop
or
pusha
and
fwait
adc
loope
pusha
roll
cwtl
push
cmp
pop
adc
aam
int
call
ss
pop
cmp
add
icebp
popf
inc
cli
cmpsb
inc
cmp
jns
sbb
test
sbb
push
je
xchg
push
cmp
addl
enter
outsl
inc
push
sbb
aam
lods
pusha
or
je
sub
lods
mov
mov
scas
clc
add
imul
std
pop
mov
les
cs
and
xor
addl
mov
add
fidivl
fcmovnu
and
sub
dec
ffree
clc
pop
or
cmp
test
jo
loopne
lock
test
orb
lea
fidivrs
je
test
pusha
out
push
inc
enter
adc
sub
sub
insb
fistpll
lods
inc
or
test
ja
ret
lods
xchg
sub
je
clc
je
push
dec
xor
fmul
push
jg
sbbb
bound
aam
or
inc
xor
jb
xor
adcb
lock
lock
pop
jne
xor
mov
push
or
xchg
push
js
adc
pop
ret
dec
mov
test
add
mov
stos
fildl
daa
sbb
mov
add
out
das
js
add
dec
imul
stos
sub
data16
xor
or
jg
inc
test
push
insl
or
stos
call
or
sahf
js
lock
inc
rcrb
test
test
or
pusha
sahf
adcb
and
cwtl
add
stos
fidivl
ljmp
mov
smsw
test
mov
sub
js
pop
aas
inc
xor
rorl
dec
xchg
adc
cmp
test
xor
sub
mov
push
ss
xchg
in
push
roll
scas
data16
jns
aaa
xchg
stos
and
lret
and
in
jle
in
sbb
lret
mov
xchg
ds
aam
cld
les
js
add
sub
and
adc
pop
pop
sti
add
xchg
cmpsb
orb
insl
mov
xchg
sbb
hlt
sub
mov
dec
xchg
dec
rcl
shlb
pusha
es
mov
xchg
dec
mov
bound
imul
or
adc
xorl
test
push
cwtl
sub
inc
xor
sahf
in
push
push
cmpsb
maxps
or
sub
gs
rclb
xchg
jmp
dec
or
popf
aad
les
pop
shlb
mov
pop
inc
sbbb
adc
enter
push
xor
jmp
int
jb
xor
push
mov
xchg
dec
sbb
pop
xchg
pop
pop
sub
xchg
jl
test
and
sub
mov
stc
mov
cmpsb
or
scas
or
fisttpl
adc
jbe
fiaddl
inc
xchg
sub
adc
add
dec
add
add
rcll
sbb
mov
add
pop
negl
pop
pop
adc
pusha
jl
push
addr16
call
adc
rcll
and
dec
adc
lds
cs
sub
outsb
arpl
js
add
xor
stos
lcall
insl
push
mov
call
jg
dec
jb
dec
xor
inc
inc
pop
inc
push
mov
mov
mov
pop
invd
add
sbb
cmp
jnp
or
jb
ja
mov
ret
fwait
insl
ljmp
fstps
imul
sbb
xchg
sub
dec
inc
adc
mov
scas
lods
pop
and
outsl
cmp
gs
push
adc
mov
jmp
sub
mov
fistl
test
push
fwait
outsb
cmp
pop
mov
add
imul
cmp
sub
push
mov
sbb
aaa
xchg
test
dec
sub
ljmp
cmp
push
add
int
xchg
cmpsb
daa
dec
adc
popa
jne
insl
call
sub
sub
shrl
filds
xlat
adc
sti
mov
aam
frstor
mov
push
xchg
adc
jo
js
out
push
addr16
mov
adcl
jb
cmpsb
mov
out
mov
pop
xorb
sub
icebp
aas
call
add
out
pop
sbb
mov
push
xchg
mov
aad
or
fdivl
arpl
cmpsb
mov
pop
leave
insl
ljmp
cmpsl
pushf
sub
push
jp
mov
aaa
test
and
loop
pop
bnd
jl
jecxz
mov
pop
insl
es
inc
mov
fcmovnu
pop
add
call
or
or
jmp
fldenv
adc
and
andl
and
push
cwtl
cmp
mov
xchg
jecxz
scas
cmp
pop
cmp
scas
rcrl
js
add
fnstsw
and
mov
mov
int3
test
je
sbb
cmp
call
sub
pop
sbb
cmpl
pop
test
fisttpl
sbb
ret
jmp
aas
daa
cmp
add
insb
mov
push
leave
and
shrb
push
add
sbb
ss
daa
orl
and
sbb
js
and
bound
rcrl
rep
or
in
xchg
out
test
adc
fimuls
lock
mov
mov
and
fistl
fimull
fcmovnbe
loope
cmp
cmp
aad
pop
jl
or
cmp
int
rcl
mov
fildl
dec
jb
ficompl
movsl
out
push
mov
fcoml
adc
mov
xchg
stos
pop
out
mov
lods
push
ds
adc
push
push
aad
fistl
dec
push
sub
inc
test
adc
test
popf
rol
shlb
mov
rsm
push
jbe
mov
push
jp
popa
adc
sub
adc
jle
repnz
or
loope
rcrb
in
adc
lcall
sub
adc
xlat
int3
cs
outsb
cmpsb
push
clc
ret
cs
movsl
out
mov
pop
xor
cltd
dec
mov
jmp
je
add
shrb
pop
inc
mov
or
es
push
add
enter
rcrb
xor
fdivl
fisubrs
xchg
rorb
mov
mov
pop
or
add
in
cmc
rorb
jge
dec
and
lods
xchg
and
sbb
into
nop
nop
and
cli
test
je
lea
ja
es
rorl
add
aam
or
ret
fldt
sbb
sub
clc
das
ret
and
push
or
add
cmp
inc
mov
cmp
or
add
adc
cmp
sbb
negb
xchg
xchg
or
sbbb
push
leave
xchg
and
cwtl
int
inc
in
push
push
or
jnp
mov
push
add
or
push
rclb
sub
stc
dec
jmp
cwtl
and
popf
add
cwtl
sub
dec
mov
and
cs
out
inc
jl
rclb
mov
jo
sub
mov
jmp
addr16
jmp
scas
jp
lds
ret
mov
cltd
dec
inc
xchg
pop
xor
fwait
and
stc
andb
adc
sub
aas
dec
loopne
sub
adc
mov
call
xor
ret
xor
inc
cs
adc
lahf
aad
mov
rclb
jp
lret
out
sbb
mov
add
jle
lret
jecxz
outsb
jecxz
loopne
dec
push
jb
in
lods
add
mov
data16
ficoml
dec
imul
sbb
push
pop
pop
lock
fistl
push
pop
and
loop
adc
adc
movsb
mov
mov
jle
fcompl
cmp
pop
mov
add
or
shrb
movsb
add
jbe
imul
sbb
fcomps
add
fsubs
test
sub
rolb
add
xor
mov
adc
mov
ret
pop
inc
mov
subl
dec
stos
mov
sbb
inc
add
or
push
cs
insb
je
into
mov
test
dec
sbb
add
xorb
iret
mov
push
xchg
testb
inc
mov
imul
cmp
add
sbb
mov
adc
jne
jb
mov
or
popa
adc
outsl
fstps
lds
in
cmp
jge
nop
xchg
add
mov
push
add
mov
lds
cltd
add
inc
inc
addl
inc
mov
mov
cli
xchg
mov
xor
jg
xchg
test
mov
xchg
mov
pusha
jo
out
in
dec
inc
rorb
add
cltd
cmp
sbb
pushl
add
icebp
rcll
push
pop
pop
fdivs
pushl
dec
mov
adc
or
or
sub
out
cmp
sub
mov
mov
fxam
pushf
fidivl
push
cmp
jmp
push
mov
jne
xorl
lret
add
jns
and
arpl
xor
lods
xchg
das
inc
andl
cld
jno
add
inc
xor
adc
or
mov
inc
xor
nop
arpl
sub
sub
movsb
jmp
mov
sahf
cwtl
or
fwait
pop
outsb
pop
pushf
sub
fsts
pop
shl
addb
xchg
subl
inc
jbe
fbld
mov
insb
and
add
out
cmp
cmpb
ds
adc
add
psubsb
call
mov
add
ret
je
and
pop
adc
aam
mov
cmpsl
mov
pop
loopne
adc
mulb
cmc
push
ret
mov
add
or
out
mov
adc
add
ret
sbb
xchg
pop
inc
push
out
fists
add
lcall
js
xchg
mov
add
call
sti
sub
sbb
and
sbb
int
mov
cmpsl
mov
mov
lret
ret
sub
fwait
jnp
mov
push
jle
shrl
mov
jno
xchg
iret
stos
ret
addl
ret
ljmp
mov
jl
xchg
jge
aad
fsubp
add
inc
and
xchg
sarl
jecxz
rcll
push
les
ss
xlat
push
sti
jnp
aad
aam
adc
adc
mov
ret
jg
mov
or
push
imul
insl
jo
pusha
cmp
or
cld
mov
mov
pushw
adc
nop
enter
pop
add
fists
pop
cmp
mov
xchg
jo
lret
stos
sbb
enter
jp
adc
push
lock
addr16
lcall
or
dec
adc
add
xor
mov
push
lret
push
mov
sub
pop
add
ds
mov
pop
xchg
mov
or
push
xor
push
sbb
inc
xchg
scas
idivl
imull
push
js
scas
mov
loop
push
andl
orb
ja
ds
shlb
negb
and
sub
dec
test
test
push
les
ret
xor
ret
imul
inc
dec
stos
sbb
pop
dec
push
or
inc
dec
popa
add
add
daa
mov
dec
mov
or
cmp
jnp
jnp
add
jnp
sbbl
roll
cmp
int
aam
scas
fcoms
adc
or
or
fdivl
sub
fstps
mov
les
dec
test
push
shll
fwait
pop
jecxz
inc
pop
sub
push
faddl
les
cmp
inc
test
and
cmp
dec
sub
mov
int
mov
incl
movsl
das
pop
jl
add
inc
mov
mov
add
es
dec
cmp
daa
loope
mov
sbb
fmull
sbb
mov
in
inc
lret
push
in
rcr
or
std
ret
add
cwtl
fcmovnb
pop
cmp
jl
and
add
outsl
jl
inc
loopne
cmp
mov
sub
and
or
pop
ret
test
inc
roll
aas
outsb
pop
adc
fsubl
sahf
ficompl
adc
add
shl
insl
dec
ret
pop
pop
fistpll
adc
add
mov
sbb
mov
lods
and
and
jmp
pop
cmp
jl
shlb
sbbb
lock
lock
xlat
pop
aaa
mov
cmp
je
sub
push
loop
pop
lods
ja
rcrl
xor
mov
pop
fdivs
in
pop
xor
and
jnp
aaa
call
and
insl
xor
push
ss
cmpsb
cmp
dec
mov
sub
ret
jno
push
arpl
pop
inc
leave
cmpl
adc
xor
dec
ljmp
sub
insb
jmp
mov
jb
ficompl
movd
xor
scas
xchg
jg
pop
add
pop
and
adc
fwait
mov
push
aaa
lahf
push
sbb
adc
push
ret
es
daa
lcall
lahf
test
lods
shlb
shl
mov
scas
stc
bound
push
mov
adc
xor
and
test
pop
lahf
cltd
std
loop
imul
sbb
sbb
out
mulb
add
mov
jmp
imul
lods
dec
ret
mov
scas
xchg
mov
jl
sbb
je
and
add
mov
and
add
add
orb
sub
pop
fadd
inc
loope
mov
mov
imul
sbb
loopne
call
nop/reserved
sbb
mov
cmp
sti
pop
daa
loope
dec
jl
add
jg
and
fisttpll
ljmp
cmpsl
mov
mov
in
push
ds
pop
dec
adc
push
mov
sub
cmp
cmp
xchg
add
or
gs
mov
and
and
xor
mov
jae
loopne
repnz
shlb
jae
adc
push
or
pop
sub
push
ret
xchg
arpl
jl
push
bndstx
or
lds
inc
std
mov
out
arpl
das
pop
fdivrp
fcompl
pop
xchg
pop
das
pop
int
cmp
mov
outsb
fistl
lahf
ret
sbb
sub
mov
outsl
or
pop
sub
sub
cmp
arpl
cmc
aam
sub
adc
ret
cmp
xor
int
outsb
pop
mov
mov
and
fcmove
adc
inc
jne
xlat
insl
pusha
sbb
inc
repnz
rorb
je
adc
or
mov
push
jo
cwtl
ja
pcmpeqb
add
jmp
imul
cltd
sub
insb
mov
sbb
push
adc
sbb
movsl
add
mov
mov
test
sub
push
out
sub
adc
int
ret
pop
divps
aaa
adc
add
aad
pop
pop
cmp
outsl
sub
das
adc
lods
idivl
mov
outsw
sub
dec
xor
or
test
cmc
faddl
addr16
inc
push
ret
xchg
and
hlt
and
jo
sti
cmpb
sub
push
lcall
lret
rcrb
in
in
in
mov
xor
xor
pop
out
push
jne
imul
aad
sub
cmp
cltd
and
mov
mov
lret
sub
xor
sub
fs
inc
out
pop
mov
push
test
adc
or
fwait
xchg
cmpsb
insl
call
mov
adc
add
mov
int
loope
pusha
daa
int
mov
daa
push
and
les
or
aaa
lock
ds
js
repnz
faddl
iret
xchg
rcl
jb
mov
cmp
and
lds
rcrl
leave
dec
sub
adc
inc
mov
pushf
pop
dec
cmp
lock
jmp
adc
ja
lods
adc
add
es
adc
in
pop
aad
mov
fcompl
ljmp
and
mov
js
mov
jae
pop
or
dec
shll
inc
sarb
fwait
inc
sbb
jl
out
push
inc
inc
jb
push
cmp
add
loopne
push
xchg
insb
mov
insb
cmp
mov
sbb
int3
scas
and
sub
lcall
in
std
dec
sarb
adc
sub
or
cmc
fimuls
popa
cmc
add
or
pushf
mov
aad
pop
push
push
cmp
cs
xor
ficompl
loop
push
jne
outsb
ss
jb
jmp
pop
cmp
and
adc
scas
pop
mov
adc
pop
and
das
or
shrl
xchg
xor
stos
sbb
data16
aam
xchg
xchg
loope
mov
mov
insl
jnp
or
ljmp
xorb
div
inc
xor
jnp
jp
scas
xor
test
mov
inc
je
lcall
cmp
das
or
sbb
call
or
aam
pop
ffree
int3
imulb
pop
sarb
mov
pusha
push
loopne
in
xchg
add
push
ja
loope
clc
data16
jne
or
adc
xchg
ljmp
push
sub
mov
adc
je
sarb
into
cmp
cmp
call
arpl
jo
test
jge
sbb
lds
and
or
and
loope
sarb
shrb
stc
test
sub
stc
pusha
sub
cmp
mov
fistps
mov
mov
inc
jge
scas
jmp
popa
pop
stos
pop
inc
bound
sbb
shl
sub
xor
cmp
lods
flds
popa
cmp
imul
jae
add
mov
push
xor
test
mov
pop
pop
mov
jge
insl
dec
arpl
add
jp
jns
icebp
loope
rcrb
pop
push
dec
shlb
fistpl
cmp
xchg
outsl
push
dec
xor
xor
mov
or
test
jnp
imul
outsb
std
pop
fcoml
sbb
mov
inc
roll
sub
jno
fdiv
in
add
inc
jb
jmp
das
insl
adc
adc
sub
ss
idivl
adc
sub
loope
xorl
mov
ficomps
inc
sub
and
pop
and
sub
leave
add
data16
xor
push
int
ret
pop
popf
stc
xor
sar
xor
or
push
aaa
mov
add
repnz
cwtl
daa
dec
daa
pop
and
push
xor
sbb
mov
pop
cs
push
jae
inc
rorb
pusha
mov
es
cmp
mov
mov
and
push
ja
push
js
push
cmp
decb
mov
mov
filds
orb
aaa
xor
cmpsb
sti
mov
adc
sbb
xor
pop
sbb
test
cli
lock
icebp
pop
inc
sbb
xor
dec
or
jne
arpl
addr16
and
testl
jno
pushf
addb
mov
sbb
fadds
js
test
aam
daa
js
mov
das
jnp
sub
cmp
movsb
mov
icebp
ret
ja
lret
push
daa
add
aas
into
loopne
adc
stos
sbb
cmpsb
fistl
pop
data16
ret
ja
addr16
fldt
ret
push
icebp
mov
mov
test
jl
cmpsb
dec
jmp
bound
pop
inc
or
dec
inc
pop
or
sarl
pushl
sbb
loop
lds
xchg
lods
sub
popw
and
aaa
lods
call
sub
bound
add
rolb
xor
cwtl
loopne
daa
shrl
xor
lcall
dec
xor
dec
add
pop
add
imul
incl
mov
adc
js
add
mov
xchg
jle
adc
pop
xchg
lds
out
pop
inc
ud2
jno
push
shlb
test
xor
scas
adc
xchg
pop
push
xorb
dec
bound
pop
xlat
jb
add
add
xchg
jp
pop
lods
scas
aas
scas
into
mov
cmp
inc
in
mov
shll
add
jne
xor
push
inc
push
add
shlb
jb
push
dec
jo
aad
sub
or
jg
pop
push
rol
mov
or
and
sahf
cmp
movsb
ja
mov
fcmovnbe
push
xchg
jle
push
daa
das
xor
and
call
ret
mov
lcall
dec
das
js
fisubl
sub
xchg
add
mov
xor
inc
jl
add
add
xchg
test
mov
pushf
movsb
imul
movsl
jo
xchg
and
sbb
add
dec
pop
insl
add
xor
xor
sub
inc
mov
and
pop
mov
loope
inc
mov
pop
dec
fistpl
mov
popf
cmp
cmp
adc
rcrl
pop
and
or
inc
sub
jge
inc
lock
hlt
mov
mov
mov
push
notb
int
dec
or
push
rclb
sbb
adc
incb
cmc
aam
leave
mov
dec
xchg
outsl
loop
test
mov
loope
push
add
popa
mov
fdiv
int3
ret
mov
sub
imul
jp
popf
mov
pop
or
lods
sbb
push
rclb
push
sahf
mov
mov
push
cli
outsb
push
jnp
pop
icebp
mov
js
bound
push
loopne
daa
addr16
add
ljmp
sub
adc
sub
fwait
push
imul
fstl
jecxz
xchg
or
dec
jne
fnsave
shrb
mov
scas
iret
xchg
shlb
sub
pop
jne
xchg
mov
inc
pop
mov
lock
add
sub
cmp
stc
push
cmc
andb
mov
xor
add
and
adc
xlat
or
cmpsb
sub
orl
mov
dec
lea
testb
stos
inc
ljmp
jge
mov
shl
inc
les
mov
mov
pop
mov
dec
mov
inc
push
mov
xor
ret
sti
and
pop
popf
xor
mov
push
mov
xchg
xchg
add
sub
xor
cwtl
rol
addr16
push
popa
sub
adc
or
pop
add
leave
mov
mov
aas
xor
aaa
enter
das
and
xchg
sub
dec
xlat
add
push
cmp
cmp
andl
cmpb
mov
sub
xchg
fistpll
adc
inc
dec
imul
mov
xchg
test
xor
jp
add
push
inc
push
push
mov
lock
out
sub
mov
dec
sti
mov
sarb
sahf
push
shrl
lahf
xchg
mov
sbb
loope
sub
call
add
sub
and
add
aaa
push
loopne
pop
xchg
cmp
push
mov
cmp
jno
or
or
sahf
cmpl
or
add
dec
add
idiv
shlb
mov
movsl
and
jo
leave
add
test
or
ss
add
arpl
cmpsb
popf
sbb
push
sbb
sti
cmpsl
or
pop
sub
fdivrl
aam
inc
and
cmp
mov
add
das
or
inc
aad
pop
aad
and
mov
push
hlt
aam
test
test
push
inc
xchg
jle
movsl
and
subl
mulb
xor
mov
push
pusha
mov
iret
popa
jp
pusha
add
jno
imull
popf
aaa
out
sbb
fisttpl
imul
mov
push
mov
lret
cs
test
xchg
fwait
gs
mov
mov
daa
outsl
cld
mov
repz
ljmp
pop
pusha
mov
cmp
fnstsw
ret
das
mov
hlt
pop
mov
mov
adc
or
cmp
sbb
inc
xlat
adc
iret
add
xor
pop
jg
xchg
cmp
int3
mov
push
hlt
cmpsl
pop
adc
movsl
xchg
dec
mov
push
andl
jno
fs
cmp
cmp
jno
sub
sbb
sub
lods
adc
mov
and
test
cmc
add
fistpl
loopne
lret
add
cmp
and
mov
and
add
cmp
add
leave
shlb
inc
fsubs
add
daa
movsb
push
or
or
fs
imul
lret
and
and
adc
lods
and
dec
add
aad
gs
adc
arpl
sub
shrl
mov
and
mov
mov
and
pop
arpl
ret
repnz
push
add
cmc
push
ret
cmp
jns
test
outsl
or
jb
inc
xor
loop
sub
jo
lret
dec
add
shll
aad
xor
jle
rcll
pop
add
fisttpll
mov
inc
scas
fdivr
pop
push
pop
icebp
lds
pop
cmovns
mov
ljmp
xor
sbb
test
push
mov
leave
dec
push
mov
mov
fidivrs
mov
xchg
push
mov
js
adc
pop
mov
pop
std
lds
ja
pop
xchg
pop
scas
pop
je
lcall
mov
and
fiadds
inc
fsubl
lods
jecxz
dec
pop
push
bound
sbb
mov
sub
dec
inc
add
lret
pop
pop
leave
pop
lcall
or
repnz
dec
idivb
and
inc
jmp
sbb
and
jae
pop
add
mov
sub
lds
inc
flds
test
shrl
js
loopne
gs
inc
sub
push
mov
xchg
js
or
jge
das
arpl
xchg
jg
rolb
insb
dec
push
adc
and
bound
fsts
lcall
jmp
jne
mov
es
adc
pusha
inc
xor
subb
or
adc
sub
mov
and
repnz
xor
jp
pop
bound
movsl
in
mov
pop
ja,pn
in
mov
jnp
xchg
add
pcmpgtw
xchg
js
in
test
adc
adc
les
stos
cmpsl
and
add
in
mov
shlb
mov
shlb
adc
and
push
sbb
dec
clc
jae
pop
push
and
out
xchg
stos
xorl
nop
and
sbb
push
sar
adc
vmovupd
aas
ret
cmpl
inc
nop
cs
mov
and
in
pop
aad
loopne
inc
sub
sbb
loop
inc
inc
push
adc
lcall
xor
ss
prefetchw
iret
js
xor
push
in
insb
insb
add
cmc
and
xchg
pop
sub
jecxz
push
movsb
cmp
int3
pop
inc
rorl
add
jl
inc
push
and
inc
neg
mov
add
cmpb
ss
jge
jle
in
divl
imul
and
mov
and
dec
add
inc
andb
in
les
pop
xor
xchg
mov
out
add
push
add
pop
xchg
dec
fildll
js
outsl
jle
xor
or
or
mov
mov
xor
cmp
cmp
cmpl
sbb
adc
add
stos
es
sahf
sbb
out
popf
sub
sbb
not
testl
call
jg
push
dec
add
in
bound
cmpsl
jg
andb
push
adc
popa
insl
or
in
jns
xchg
cmc
mov
or
lahf
aaa
and
jmp
roll
sub
adc
inc
inc
call
adc
mov
dec
orb
or
in
or
pushf
rorb
push
and
xlat
inc
jnp
cmpsb
cmpsl
gs
sbb
subb
sbb
popa
lods
shrl
fstpt
mov
cli
and
xchg
mov
adc
sub
loopne
jne
push
aam
sub
push
aam
leave
fs
mull
mov
adc
sbb
das
sbb
fisubs
insl
outsl
rorl
xchg
sub
inc
rorl
mov
mov
cld
and
sub
jnp
and
repz
push
mov
daa
cmp
pop
stos
lret
push
sbb
fwait
add
adc
out
mov
cmp
nop
and
popf
mov
mov
and
jl
ret
sbb
push
adc
fists
stos
int
mov
mov
ret
or
int3
pushf
jnp
ret
shrb
sbb
sub
jecxz
in
push
iret
mov
cmp
push
cmp
push
pop
mov
pusha
add
inc
xor
pop
sub
lcall
add
jb
shlb
xor
andl
and
adc
push
and
sbb
fmull
push
loopne
push
inc
pop
rclb
pop
out
rolb
pop
sbb
dec
or
repnz
adc
out
inc
mov
xchg
pop
mov
nop
sub
mov
stos
push
sti
sub
aaa
and
and
fistpll
push
jp
add
mov
dec
sbb
pusha
repz
or
ljmp
cmp
inc
inc
jne
roll
shl
sbb
sub
cmc
push
mov
test
ret
test
jno
aam
push
xor
iret
sarb
dec
mov
int3
rol
mov
or
jo
inc
int3
mov
push
test
and
and
jbe
mov
dec
mov
or
xor
movsl
daa
mov
add
ss
cmp
adc
or
jae
push
andb
call
cmpsl
sbb
inc
mov
inc
popa
push
and
cmp
add
or
fisubrs
pop
or
fcomps
hlt
loop
outsb
pop
pop
stos
push
or
stos
cmc
cmpsl
jae
cmp
jb
sarl
es
mov
data16
mov
jp
dec
mov
and
pushf
inc
das
in
ret
mov
add
xchg
xchg
inc
sub
fcoml
mov
add
push
mov
sarb
jno
pushf
push
inc
mov
lds
pop
add
push
out
pop
sub
cmp
lds
vcvtsi2sd
sbb
push
mov
mov
pop
cmp
mov
dec
jno
inc
push
jb
ficompl
and
orb
mov
sbb
lahf
inc
scas
push
iret
cmp
test
sahf
inc
dec
shll
into
xlat
push
push
mov
mull
lods
mov
push
roll
cmpsl
add
mov
rcl
push
clc
pop
xor
cmp
jne
dec
mov
sub
xchg
inc
push
cwtl
or
dec
pop
jne
xchg
lock
and
mov
jns
push
pop
outsb
shlb
mov
jge
mov
lcall
imul
mov
mov
stos
sub
jp
cmp
and
or
adc
add
push
cmc
mov
shlb
cmp
sbb
push
enter
adc
test
adc
jnp
dec
adc
inc
add
in
pop
mov
push
pop
jo
jb
divl
shlb
sbb
dec
jb
sub
movhps
and
stos
push
or
inc
xor
mov
out
adc
ja
add
pusha
jl
adc
dec
andb
add
jge
mov
popa
movsb
out
stos
jl
fdivl
repnz
loope
out
pop
mull
mov
sbb
add
push
add
out
and
adc
lock
in
in
mov
cmp
cli
call
jp
xchg
adc
pop
push
mov
stos
mov
mov
mov
mul
pop
adc
pusha
adc
imul
push
int
clc
push
mov
inc
xchg
dec
cmp
mov
inc
jge
sub
test
push
std
mov
add
mov
test
push
pop
ljmp
xchg
adc
stos
push
jl
cmp
jo
sbb
test
jl
inc
ljmp
mov
adc
jecxz
inc
cmpsb
stos
push
mov
sbb
mov
cmpsl
mov
adc
mov
insb
in
pop
jno
test
andb
or
aaa
pop
jp
lret
adc
mov
inc
pop
add
pop
cmpl
add
and
push
add
jnp
push
mov
sub
xor
and
mov
sub
icebp
jnp
mov
insb
xlat
js
lcall
push
lcall
xor
or
and
pop
adc
shll
pop
int3
xchg
sbb
ja
addr16
jne
int
stos
pop
xchg
stc
push
les
aam
push
add
xor
mov
mov
push
add
cmp
jge
cld
scas
in
push
xlat
pop
loop
scas
and
out
dec
mov
cld
adc
add
or
adc
xchg
addl
jae
inc
mov
shrb
xor
mov
push
xchg
and
xor
push
mul
int3
mov
or
popf
inc
xchg
pop
mov
add
push
push
xlat
add
pop
fsts
mov
sbb
cltd
xchg
inc
fwait
je
data16
fcompl
adc
andb
add
jbe
cmpsl
add
aam
fs
jle
pusha
pushf
roll
movsl
cmpsl
lcall
imul
notb
adc
sbb
into
int
enter
jecxz
lcall
adc
xchg
test
ja
pop
mov
lcall
mov
and
ja
in
or
cmp
push
jl
and
push
push
pushf
bound
lret
cwtl
push
add
fsubs
fistpll
je
insl
in
add
push
cmp
cmpsl
mov
mov
pushf
aam
jb
xchg
inc
dec
arpl
cmp
arpl
lahf
adc
sub
mov
jb
cmc
stos
mov
jo
inc
rolb
push
mov
jnp
sbb
js
pop
int3
das
bound
into
pop
inc
mov
mov
lds
pop
outsl
mov
add
vucomisd
or
cmp
stos
xlat
xorl
ret
jbe
inc
sub
jnp
cmp
cmpl
out
test
lods
stos
or
and
mov
das
insl
jo
into
jb
add
dec
shll
into
xchg
popl
and
mov
sbbl
int3
adc
popa
xchg
sbb
mov
jno
pop
mov
xor
add
lahf
shrb
mov
ds
push
pusha
repnz
clc
cmp
ljmp
lcall
cs
jae
ljmp
lret
call
les
push
repnz
xor
pop
push
dec
adc
das
xchg
fstpt
adc
pop
insb
cld
repnz
ret
dec
shll
jae,pt
sub
push
add
fisubs
cmp
test
fsubrl
popa
loope
mov
sbb
stos
push
inc
les
pop
and
pop
cmp
mov
scas
lahf
pop
mov
push
add
mov
test
inc
or
xor
and
xchg
inc
add
jo
outsb
or
xor
inc
movl
sub
lods
data16
lock
push
adc
sub
aaa
nop
add
dec
xor
and
sub
ss
cmp
mov
sub
inc
cmp
sbb
aam
xor
xchg
and
jl
xor
cmp
je
pop
jmp
orl
popf
adc
inc
jl
das
add
push
adc
aad
shlb
aam
mov
js
fwait
arpl
or
mov
cs
jp
adc
int
lea
sub
inc
push
fs
mov
dec
inc
cmp
shll
and
pushf
dec
rorl
jp
mov
aaa
movl
pop
shr
mov
sbb
jge
aaa
pop
fwait
push
lcall
mov
xor
or
repz
mov
cwtl
cmc
or
mov
ds
add
ds
adc
jmp
add
mov
push
mov
push
sub
daa
dec
lock
shrl
cmp
fcmovu
out
push
aam
sub
les
fcomps
and
mov
or
insb
sub
push
dec
xchg
stos
lret
outsl
jp
call
cld
outsb
outsb
clc
shlb
and
mov
add
push
sub
jae
sub
sub
in
movsb
scas
and
or
int3
imull
push
add
cmp
xor
and
shll
sbb
cltd
cmp
mov
fisttps
dec
das
push
push
add
in
insl
in
mov
scas
mov
or
mov
jnp
negl
dec
mov
push
nop
fnstsw
mov
nop
pop
mov
mov
cmpsb
push
jl
push
sarl
sahf
stc
adc
jge
nop
add
lcall
fmuls
insb
dec
call
pop
or
test
push
sub
inc
jne
sub
addb
sbb
or
jae
jb
js
inc
inc
mov
iret
scas
scas
subl
jne
aam
mov
jmp
das
xor
or
scas
test
lahf
clc
push
out
out
lds
add
dec
sbb
es
in
dec
push
jecxz
lds
inc
mov
sbb
bndstx
mov
icebp
and
mov
or
jo
cmp
shr
push
xorb
dec
or
cmp
imul
or
push
fdivl
jle
add
aad
lcall
ljmp
xchg
mov
andl
mov
push
mov
add
sbbb
inc
add
in
fiaddl
pusha
test
fisubrl
mov
or
ljmp
and
mov
popf
sti
ret
pop
mov
add
mov
sbb
or
mov
jnp
xor
mov
jne
mov
roll
push
sbb
je
push
sbb
mov
adc
outsb
ds
adc
or
std
add
pusha
sbb
xchg
add
mov
dec
add
aam
push
push
xchg
movsb
push
loope
jmp
cmp
mov
cmp
or
je
sbb
sahf
cmp
loopne
and
imul
mov
fcmovu
mov
inc
jne
and
sub
mov
add
jge
test
cmp
add
inc
mov
faddp
mov
cmpb
cltd
bound
jno
mov
add
xchg
add
ds
xor
je
divl
pop
int3
movl
pop
jl
mov
cmp
xchg
ret
adc
sub
sarb
daa
jbe
pop
pop
ljmp
sub
outsb
dec
in
ret
and
les
sub
add
push
popf
mov
sub
cmp
xor
clc
pop
mov
notl
cmp
cwtl
or
pop
xchg
or
mov
mov
push
std
lods
mov
lea
or
add
fwait
add
push
add
push
add
sbb
aad
cmp
loop
sub
int3
add
inc
sub
gs
div
mov
adc
loope
pop
sub
add
inc
lret
insl
aas
jecxz
push
inc
negb
ljmp
mov
repnz
pop
jl
jns
imul
push
mov
es
sarb
add
cmpsl
add
add
dec
sbb
sub
push
dec
push
push
outsb
jnp
dec
gs
cltd
mov
icebp
push
icebp
loopne
pop
mov
xor
inc
mov
xor
jne
int
pop
add
sti
stos
out
mov
cmpsb
xor
loop
and
pop
inc
rol
in
cmpsb
push
scas
adc
pop
roll
aaa
cmpsb
outsl
adc
pop
pop
hlt
cltd
cmp
mov
mov
int
xchg
adc
daa
jae
js
xor
test
adc
cmp
ret
push
jb
or
out
push
cli
push
sbb
lret
jecxz
push
out
imul
sub
xchg
out
mov
pop
adc
bound
mov
mov
mov
push
mov
mov
xorl
js
imul
iret
test
cmpsb
jne
call
sti
aam
and
mov
addb
mov
fidivl
jp
jmp
xchg
adc
pop
inc
aaa
movl
or
inc
pop
aas
data16
ss
lret
add
incb
or
push
cmp
or
faddl
push
aad
pop
inc
cmc
sahf
and
sarl
sub
aad
cmp
and
cmp
cmp
push
pop
xor
sub
scas
xchg
insl
jae
cmp
les
pop
mov
pop
pop
push
jnp
mov
jl
jae
or
push
adc
inc
scas
loopne
icebp
cmpsl
stos
ljmp
clc
jl
ficoml
aas
jne
fildll
ret
xor
add
popl
pop
in
xor
xor
jbe
adc
mov
into
push
dec
out
inc
or
sbbb
addl
ja
inc
in
cmp
mov
pop
jnp
loope
mov
movsb
gs
xchg
jb
inc
fs
jg
mov
jnp
push
je
adc
pop
cmp
xor
pop
mov
ret
adc
fistps
imul
or
inc
push
push
imul
stc
std
cmpsb
and
cmpsb
scas
sub
popl
mov
cld
mov
push
push
shrl
in
or
int
dec
fstps
test
push
roll
xchg
daa
or
and
and
dec
ljmp
pushf
in
xchg
pop
imul
ljmp
push
lds
hlt
jge
jle
add
in
clc
sub
xor
scas
xor
or
inc
test
xchg
xor
ss
lods
sub
cmp
push
dec
mov
or
movsb
cmpsl
inc
nop
push
jae
fsubs
fidivrl
jmp
loope
jb
xlat
ds
cmp
and
xchg
xlat
sbb
ja
sub
dec
xchg
daa
push
test
mov
and
xor
mov
out
fdivr
or
into
mov
sub
loope
loopne
mov
xchg
push
fidivs
rolb
fsubr
xorl
sub
dec
jno
sub
mov
out
adcb
in
inc
inc
fwait
testb
xchg
or
add
lods
insb
inc
fidivs
cmp
out
xchg
add
push
adc
sub
mov
push
mov
xor
adc
push
out
cmp
mov
pop
ljmp
and
es
stos
loop
cld
ret
insb
xor
fiadds
int
cli
pop
in
imul
popa
xlat
dec
push
gs
sti
mov
outsb
fstpt
sbb
dec
leave
cmp
push
adc
or
sti
xor
roll
jp
inc
xor
les
pop
mov
sbb
call
or
int
call
ret
sbb
mov
inc
add
or
or
rclw
cmc
inc
push
daa
push
gs
xor
notb
sahf
or
adc
int3
call
jl
jbe
push
or
and
mov
out
dec
cmp
add
test
outsl
mov
jno
mov
add
dec
es
orb
loope
pop
clc
add
sbb
rcrl
sub
lcall
mov
mov
sub
bound
xor
push
or
push
in
adc
fisttpll
rcrl
imul
fsubrs
mov
ret
pop
mov
fwait
jmp
mov
rcrl
sub
je
rcll
ds
jp
pop
or
or
dec
push
test
inc
cmpsb
rol
hlt
ret
sbb
inc
call
push
add
sub
fisubrl
in
fwait
inc
adc
add
jns
jbe
mov
mov
sbb
push
aam
pop
mov
rorl
jnp
cmp
je
mov
cmp
pop
sub
jg
sbb
cwtl
jno
inc
xchg
sub
fbld
xchg
sbb
stos
xor
and
cmp
mov
fcmovne
sub
popf
cld
movsl
dec
add
daa
lret
in
btr
lahf
bound
mov
dec
sbb
pop
xlat
sub
cli
pop
fisttps
aas
in
adc
xor
xor
add
cs
lds
dec
stos
cli
inc
inc
sub
loope
mov
movsb
sub
loope
pop
xlat
mov
or
add
and
test
scas
mov
mov
push
adc
cwtl
imul
hlt
pop
shrl
cmp
int3
lcall
jge
clc
pop
jle
fildll
or
jno
jp
cwtl
and
out
and
xchg
pop
cmc
sbb
sub
pop
dec
cwtl
push
shl
dec
mov
in
xor
into
cmp
mov
in
dec
mov
cmp
loope
push
xchg
mov
cmpsl
ljmp
in
push
lea
jnp
lret
cs
mov
sbb
add
pop
or
sub
imul
loope
mov
or
clc
xor
mov
fbstp
push
ret
loope
popf
std
data16
addr16
sti
pop
jno
dec
adc
pop
adc
in
jo
and
lods
adc
mov
scas
xor
pusha
insb
xchg
js
outsl
sub
pushf
pop
dec
testb
push
cmp
test
ljmp
jg
mov
jecxz
adc
push
pop
jp
ror
add
shrl
mov
mov
mov
jecxz
push
and
out
jp
mov
sbb
adc
xchg
push
adc
add
jnp
jno
jecxz
clc
int3
cmc
push
adc
inc
mov
lock
and
mov
cld
icebp
mov
insb
aad
dec
sbb
mov
mov
lcall
or
out
or
mov
or
mov
shl
clc
mov
xchg
mov
pop
in
push
sbb
or
mov
sbb
repnz
dec
test
xacquire
repz
inc
das
lea
scas
jp
xchg
mov
push
cld
loopne
inc
ja
xor
jmp
lods
incb
jp
subb
dec
add
and
and
sbb
sbb
xor
pop
scas
lods
or
add
cmpsl
xlat
sbb
call
xchg
outsb
jb
mov
ljmp
lds
dec
sbb
setl
add
lods
and
inc
cmp
imul
popa
fcompl
mov
hlt
sbb
call
push
pop
jo
jno
sub
add
loope
lretw
gs
shrl
adc
push
shlb
push
mov
adc
sbbl
rcl
push
fisttpl
test
mov
les
jecxz
mov
aad
xor
movzwl
and
ret
stc
or
repnz
inc
add
dec
cmc
stos
dec
push
sarl
mov
dec
sbb
mov
cmp
cmp
push
xchg
lds
faddp
lock
pop
lock
iret
jae
add
cmpsb
mov
sbb
add
add
enter
mov
lds
push
mov
dec
mov
inc
dec
jecxz
imul
arpl
inc
das
inc
js
add
xlat
imul
es
sbb
loope
into
sbb
cmpsl
dec
hlt
sbb
xor
sub
loopne
mov
and
ds
jbe
xchg
pop
testl
roll
shlb
xchg
or
popl
sub
pusha
cmp
cmp
sub
dec
pop
dec
sub
add
jge
inc
mov
aas
or
mov
je
sbb
out
lds
fs
push
daa
adc
jl
mov
jae
test
add
push
add
jge
jae
jae
ss
or
movsb
sahf
jne
rcr
sub
xor
aad
sbb
call
shll
lods
mov
cmp
in
icebp
movsb
pop
inc
and
xlat
ljmp
xchg
das
inc
pop
cmpsl
mov
or
cld
xchg
add
sub
in
pusha
sub
shrl
xchg
push
and
mov
rolb
test
jo
cs
pusha
nop
mov
or
sub
push
cs
lock
jnp
fdivr
aam
dec
push
and
jmp
sti
sti
or
jle
mov
jne
pop
sarl
mov
rorl
jne
or
inc
les
sbb
mov
fsubl
mov
mov
xchg
shr
and
sbb
and
sti
adc
clc
popl
ljmp
or
mov
rol
mov
cmp
or
sub
adc
or
insb
push
adc
rol
mov
push
ds
arpl
mov
and
imul
aas
in
inc
push
in
inc
imulb
rolb
dec
push
xor
sahf
mov
mov
or
sbb
mov
push
aaa
inc
fldl
lods
out
dec
mov
inc
cmc
ljmp
loop
repz
lret
sbb
adc
test
mov
jne
subb
xchg
pop
adc
push
jmp
adc
cmp
inc
mov
fisubrs
cld
loopne
mov
mov
iret
lret
mov
lock
loope
testl
and
jne
cli
cmp
sti
sarl
sub
das
rcl
push
add
rol
cmp
or
popa
push
mov
push
fucomp
shlb
push
pop
clc
mov
adc
imul
xlat
push
mov
je
push
push
js
cmpsl
lcall
dec
aaa
pop
xchg
xor
imul
shll
or
outsb
jecxz
scas
sub
mov
mov
mov
cmp
aaa
subb
fistpll
sub
mov
daa
loop
xchg
and
or
in
sub
ja
xor
sbb
int
mov
out
add
arpl
mov
in
lods
ffreep
dec
dec
insb
pop
mov
aas
xchg
sahf
imul
stc
mov
jp
mov
mov
dec
inc
add
test
pop
mov
xchg
inc
jno
dec
add
jo
imul
sbb
sbb
mov
sahf
xchg
ret
repz
mov
in
dec
sbb
dec
inc
pushf
push
and
shlb
sbb
xchg
push
pop
sub
shrb
xor
mov
aam
int
xor
or
mov
out
iret
dec
insb
xchg
movsb
fwait
cmp
xchg
subb
sbb
or
decl
xchg
xor
daa
nop
pop
notl
les
ret
ret
mov
sub
arpl
movq
testb
or
in
ret
out
clc
sbb
push
ja
jbe
scas
int
pop
ret
or
adc
mov
and
xor
pop
fildll
daa
mov
fs
xchg
jno
popf
pushf
adc
rorb
fiaddl
sbb
jne
int
aad
inc
sub
push
xchg
loopne
pop
adc
mov
mov
mov
daa
daa
int
pop
aad
inc
out
mov
push
cmp
add
xor
dec
in
daa
movl
popf
adc
outsb
ret
adc
pop
mov
scas
das
dec
add
in
sbb
call
test
xchg
mov
notl
bound
xchg
cs
pop
outsl
cli
mov
rorl
push
ret
in
rolb
or
repz
xchg
xchg
shlb
cmpsl
push
flds
push
jbe
cmp
loopne
pop
pop
ret
in
sub
es
add
and
or
nop
stc
cld
add
pop
cmpsl
push
adc
sub
add
dec
pop
inc
dec
lea
cld
mov
and
cmc
sub
imul
fsubrl
inc
addb
cmc
push
jb
inc
in
inc
push
lret
test
jp
shlb
pop
daa
sub
sub
mov
ljmp
sar
gs
push
mov
pop
shrb
lcall
inc
adc
daa
js
mov
inc
arpl
and
je
sti
xor
mov
push
mov
scas
loop
orb
and
xchg
add
cmp
xchg
cmp
les
mov
add
lret
mov
or
dec
and
add
cli
test
daa
jnp
push
lods
scas
mov
sub
loopne
mov
bswap
mov
stos
inc
mov
je
or
sub
loopne
insl
sub
push
and
inc
push
and
shll
adc
mov
sbbb
cmp
mov
or
adc
mov
das
push
pop
in
loop
ss
inc
jb
mov
pop
mov
test
ja
scas
cmp
or
ljmp
push
sbb
mov
jne
pop
jl
mov
adc
js
pop
inc
nop
push
pop
inc
shrl
sub
and
pop
aad
adc
xor
sub
or
jno
inc
out
inc
adc
cli
rcr
sbb
mov
imul
push
hlt
and
dec
or
push
loopne
sti
pushf
mov
scas
test
mov
insb
or
decb
xchg
inc
scas
adc
dec
stc
inc
mov
loop
fwait
adc
pop
mov
fcmovnu
std
dec
pop
adc
add
lock
add
add
lahf
adc
add
inc
rorl
call
push
pushf
mov
lods
mov
xor
jp
insb
mov
stos
adc
outsb
add
add
mov
js
pminsw
repz
popa
and
pusha
push
cmp
dec
mov
bound
push
sahf
in
aad
add
out
imul
or
jno
xchg
jae
fcomps
and
addb
push
mov
and
inc
cli
or
adc
aaa
add
xor
adc
jle
daa
xchg
xchg
sub
fisubrl
push
test
mov
mov
jae
dec
xchg
push
inc
popf
jmp
cmp
adc
movsb
cmpl
xchg
adc
inc
ja
loope
mov
push
add
push
ret
fsts
std
jae
addl
aaa
push
sbb
add
mov
lret
scas
aas
das
inc
leave
aaa
jnp
pop
mov
pop
les
outsl
cmp
jge
inc
ljmp
rcr
out
inc
je
cld
rolb
add
pop
jae
inc
xorb
dec
adc
popf
xorb
imul
pop
cmp
outsb
jbe
das
movsb
mov
xor
push
pop
mov
repnz
or
push
sbb
xor
mov
or
call
into
inc
in
shll
hlt
inc
out
int
or
xor
sbb
scas
adc
xchg
add
pop
pop
cmp
mov
push
in
cmp
sub
adc
rcrl
push
pop
dec
sub
xchg
mov
mov
add
jbe
hlt
and
sub
cmp
push
and
xor
shll
add
lds
add
mov
mov
frstor
add
sti
lds
push
cmc
mov
jae
enter
push
inc
add
aaa
or
out
mov
jne
mov
push
out
xlat
push
insb
sub
loopne
xor
rcll
pusha
adc
lock
subl
out
lock
cmp
jle
jne
push
cmpsl
mov
and
insb
pop
and
xor
and
das
sub
sbb
mov
fcomi
cmp
lock
sub
inc
jmp
mov
add
ret
adc
xchg
fldt
stc
lods
sbb
je
push
cmp
cmpsb
mov
into
mov
pusha
inc
scas
xor
adcl
stos
mov
mov
rcrb
pop
pop
rorl
hlt
dec
rorl
daa
addb
inc
cmpsl
dec
or
dec
inc
es
rcrl
cmp
jle
xor
addl
sbb
pop
and
sbb
popf
icebp
aam
ds
xor
jbe
xchg
ss
iret
iret
inc
int3
ret
and
jmp
pop
loopne
adc
ss
pusha
inc
push
push
and
mov
add
and
sub
pop
fistl
ja
mov
add
add
mov
inc
jp
adc
adc
lods
ds
mov
mov
push
sbb
sub
inc
popf
xor
data16
push
dec
push
cmp
add
sbb
cmc
adc
std
scas
lock
add
movlps
push
inc
cmp
in
rcrl
jb
push
xor
xchg
loopne
sub
out
push
inc
stos
mov
mov
cltd
scas
sbb
les
je
cmp
int3
sub
sub
jle
movlps
inc
icebp
mov
outsl
out
sti
inc
mov
mov
test
xor
cmp
or
and
lds
adc
clc
ret
clc
jno
call
jno
imul
sub
in
iret
out
sbb
cmp
cmp
dec
mov
lods
adc
pop
push
nopl
or
cmp
rcr
and
mov
dec
inc
xchg
push
test
loope
xor
mov
in
jno
test
test
test
and
frstor
jo
adc
inc
movsb
sbb
xchg
and
jae
push
aam
aam
jnp
or
sbb
dec
push
jo
add
push
sbb
addb
arpl
push
mov
jb
aad
pop
in
mov
mov
xchg
sub
push
add
sti
andb
adc
lods
push
pushf
push
lods
lods
insl
xchg
xorb
cltd
xor
add
and
shll
push
iret
aad
ret
adc
push
lock
jmp
or
sub
xor
lret
push
xor
mov
fdivp
in
scas
pop
loop
mov
add
into
mov
cmpsl
xchg
lret
nop
add
fs
push
fisttpll
xor
ja
fcompl
roll
loope
orl
cld
mov
cmp
cmp
lret
jb
sbb
std
mov
and
data16
pop
mov
mov
jae
xor
xchg
sub
lods
pusha
jmp
sub
inc
adc
sbb
outsl
sbb
cmp
sbb
add
push
es
or
or
xor
cmpl
inc
jno
mov
xor
out
cmpsl
jmp
adc
icebp
add
cmp
push
loop
mov
dec
push
hlt
stos
stos
sbb
mull
cmpsl
pop
sub
stos
cmp
rcrl
push
cs
lcall
adc
pop
aam
aad
mov
jge
ja
jl
je
adc
imulb
pop
das
movsl
dec
mov
mov
or
fcoml
xor
xor
cmp
das
popl
fs
test
or
or
aam
jo
xchg
inc
push
in
xchg
add
divl
sub
test
stos
jo
nop
sub
dec
jo
jae
pop
lds
jns
mov
into
into
jae
cmp
sbb
dec
inc
mov
roll
loopne
xchg
das
pop
sub
popa
dec
cmpsl
xchg
push
cmp
dec
dec
and
xor
and
mov
adc
inc
add
and
fwait
mov
and
in
xor
cltd
inc
cmp
and
dec
inc
stos
sbb
push
mov
push
and
out
add
pop
sub
mov
stos
xlat
add
add
scas
hlt
mov
mov
addb
sarl
or
iret
and
jbe
scas
int
les
jne
dec
xor
popf
inc
aad
insl
add
sub
push
sub
pop
push
outsb
inc
out
mov
mov
les
andb
sbb
mov
lahf
ret
mov
jge
push
scas
sub
or
dec
insl
mov
test
hlt
lcall
jl
mov
in
rcrl
outsb
push
roll
mov
movsb
jae
ret
pop
mov
dec
shll
pop
rcr
fmul
aad
jge
push
or
jae
sti
mov
add
xor
mov
cmc
mov
lock
int3
cmp
je
add
ret
dec
xchg
pextrw
sub
adc
or
loop
fcomp
inc
cmp
jle
call
das
push
mov
mov
loope
pop
push
mov
add
cs
sub
cmp
andb
or
push
sbbl
xchg
jb
cwtl
sub
aam
jg
add
or
push
je
mov
sub
mov
and
stos
or
add
mov
and
test
and
mov
add
iret
cmp
sub
sbb
dec
add
xchg
and
xchg
jne
dec
and
scas
mov
cmp
or
cwtl
or
jne
and
or
daa
sub
mov
mov
cmp
pop
lret
jbe
jbe
mov
data16
adc
data16
fnop
lock
lock
test
jle
repz
jns
fs
pop
js
jp
ret
xorb
pusha
or
addr16
fmuls
jbe
sti
ja
push
adc
inc
les
dec
inc
mov
push
add
push
cmp
inc
movsb
test
aad
ret
jmp
or
negl
enter
push
cmp
cwtl
xor
or
mov
mov
aad
add
add
jae
fwait
mov
push
int
ljmp
mov
cmp
mov
add
ja
pop
idivb
pop
mov
shrl
adc
sbb
xor
mov
gs
jnp
mov
aam
lock
xor
cmpb
dec
int
push
jecxz
push
mov
sbb
sbb
xor
mov
xchg
shrb
lds
shrb
rolb
repz
or
test
dec
xor
mov
mov
lret
ret
adc
sbb
xor
js
lahf
lods
decl
add
sarl
scas
xor
sub
out
add
jp
or
mov
adc
mov
faddp
pop
rorb
xchg
adc
pushf
jnp
jns
idivl
rcl
inc
push
jp
mov
jo
push
lcall
xchg
mov
pop
add
stos
push
inc
das
hlt
ret
loop
sbb
ss
cmp
ljmp
mov
jnp
cmp
xor
xchg
mov
cs
mov
pushf
scas
inc
adc
inc
out
add
fsts
mov
cmp
dec
mov
inc
adc
lret
add
das
int
inc
leave
mov
lahf
adc
ret
lahf
sub
and
jne
addps
mov
stos
mov
xchg
jnp
jmp
mov
sub
arpl
cmpsl
or
mov
notl
adc
movsb
outsl
or
mov
rclb
rcll
outsl
adc
es
mov
xchg
sahf
xchg
adc
and
insl
js
xor
cld
dec
or
lods
cmp
inc
push
in
jl
mov
inc
inc
mov
dec
aam
add
mov
sub
sub
sub
pop
or
fadds
rorb
ds
lea
mov
das
arpl
pop
mov
aas
cmpsb
xor
ret
inc
in
sub
pusha
rorl
or
jge
adc
add
adc
mov
xlat
shrb
dec
in
rorb
push
xor
das
aas
ret
fwait
imul
push
es
ljmp
mov
cmp
stc
sti
jl
inc
xor
les
push
adc
sub
push
xlat
incb
inc
leave
mov
mov
jecxz
into
push
push
cmp
xchg
pop
lahf
stos
xchg
xor
lahf
mov
jle
sub
xchg
push
push
arpl
mov
int3
mov
or
dec
inc
inc
or
or
cmp
inc
sti
ret
and
jne
dec
and
or
and
jb
test
adc
lahf
xor
aad
push
adc
aad
cmpsb
aas
push
ret
xchg
cmp
sub
jge
dec
and
test
cmp
jl
ret
dec
pextrw
xor
mov
cmp
or
pop
jge
sbb
push
inc
or
loop
test
ret
push
push
fimull
cmpsb
or
mov
fsubs
pushf
arpl
sbbl
filds
add
push
or
les
sub
fsubl
xor
or
mov
sbb
push
xchg
mov
push
lock
cmp
pushf
jb
ljmp
jbe
and
stos
dec
das
insl
repz
rorb
and
dec
push
cs
cld
out
dec
movsb
or
fldl
cmp
rcll
jp
mov
out
jb
fmull
inc
adc
or
fstpl
rcll
fldt
cwtl
xchg
pop
or
pop
pusha
popa
xlat
sbb
inc
outsb
push
push
and
les
lret
dec
arpl
mov
hlt
std
insl
cli
mov
inc
sbb
rorb
cmp
test
movsb
push
mov
je
mov
mov
adc
jne
inc
mov
shlb
add
pop
xor
idivl
and
cmp
pushf
or
mov
sbb
ret
mov
xchg
nop
lods
in
imul
or
leave
fs
mov
imul
test
push
inc
jecxz
fmuls
fsubrs
dec
fcomps
test
aas
and
aaa
add
mov
add
int
adc
test
inc
lods
data16
int3
sbb
adc
sbb
xorb
ds
add
inc
cwtl
repz
ljmp
adc
cmove
ja
mov
divl
dec
push
xlat
push
adc
in
xor
mov
sub
or
fwait
push
adc
ds
leave
and
mov
imul
sub
adc
and
mov
push
push
loope
adcl
xor
popw
pop
and
js
sbb
test
bound
push
mov
mov
push
jl
sti
addr16
push
sbb
ret
mov
add
shl
push
jne
xor
pop
stos
jmp
pop
pushl
bndldx
push
cmpsb
and
mov
sub
push
mov
add
das
aam
sbb
dec
dec
pop
ja
sub
lods
test
mov
inc
shlb
mov
loopne
test
jo
xor
cmp
lahf
sti
nop
or
inc
push
mov
adc
ret
jae
or
shr
xorl
inc
adc
push
int3
mov
dec
leave
nop
movsb
cwtl
push
lock
rclb
and
push
mov
add
popf
dec
adc
add
fbstp
mov
cmp
mov
arpl
xchg
test
mov
push
push
movl
mov
imul
and
and
adc
dec
or
mov
inc
pop
inc
or
ds
mov
mov
push
xor
jp
jns
mov
fdiv
xchg
jmp
pop
cmp
test
scas
jmp
xlat
or
mov
adc
pop
sbb
shlb
mov
pusha
mov
stos
in
cmp
clc
ljmp
jb
movsl
loop
dec
ret
push
xchg
cwtl
stos
sub
shll
pop
add
mov
popa
insb
scas
xor
popa
pop
addr16
stc
rol
add
xchg
in
xorb
xorl
cmp
rcr
int
sbb
mov
in
inc
incl
popa
jns
pop
adc
mov
mov
nop
cmp
stc
vmread
lret
cwtl
adc
xchg
mov
movsl
int3
sahf
orb
xchg
lods
mov
cli
lock
mov
js
mov
jb
stos
pop
push
push
sbb
sub
adc
or
mov
hlt
inc
cmc
xor
das
dec
stos
mov
mov
mov
test
xor
pusha
push
cmpsb
lock
scas
hlt
pop
loopne
arpl
mov
add
lods
repz
and
jno
outsb
movl
sub
xor
in
dec
mov
sbb
loop
or
dec
xorb
push
inc
cs
jge
push
sbb
inc
cli
shll
loopne
xor
dec
jb
xor
cmp
icebp
sbbb
aam
idivb
push
lahf
jb
sbbb
add
xor
je
and
push
inc
xchg
ficoms
pop
mov
sbb
adc
mov
push
and
mov
adc
cmp
jge
add
cmp
add
fldenv
fistl
jmp
jb
cmp
pop
pusha
push
inc
sti
or
sub
int
add
data16
jb
jmp
xlat
xchg
sub
inc
iret
inc
mov
icebp
popf
jle
idivl
les
adc
cmp
stc
mov
add
sbb
arpl
jb
jb
lods
sbb
dec
xlat
xlat
cmpsl
jnp
cmp
mul
and
cltd
test
shll
adc
jbe
in
sbb
adc
sbb
je
mul
xchg
addl
lcall
testl
or
stc
movsl
add
sub
andb
push
mov
add
mov
std
add
mov
add
mov
push
idiv
adc
lds
sbb
inc
xlat
sti
test
rcrb
pop
mov
sub
dec
das
ja
fs
cmp
bound
push
sub
subl
pusha
ret
jecxz
dec
ss
adc
int3
pop
add
jne
add
hlt
mov
call
cmc
insb
bound
jo
stos
fisttpll
jb
loop
mov
mov
mov
xor
lock
mov
xchg
jo
mov
sub
or
repz
or
mov
repz
or
or
sbb
mov
lret
mov
and
xchg
inc
jo
xchg
and
pop
js
stos
fsubrl
int
arpl
sbb
push
xor
add
fidivrl
sub
dec
ret
inc
insl
mov
push
push
jno
and
push
das
xchg
jp
sets
scas
push
or
pop
ss
or
cmp
and
pop
add
jb
inc
rolb
jae
aam
jmp
sub
stos
nop
jns
je
sub
ljmp
ljmp
popf
das
pop
jle
inc
sub
and
and
xchg
fstpt
sbb
add
insl
xor
insl
adc
pop
lds
xchg
add
mov
mov
shl
out
ret
subb
jb
pop
pop
insl
mov
mov
lds
stos
sbb
inc
fimuls
into
scas
stc
jbe
stos
dec
xor
inc
verr
ljmp
lret
push
cmp
jne
sbb
xchg
xor
pop
cs
xchg
xor
ljmp
je
stos
out
adc
inc
sti
or
mov
mov
mov
rclb
push
nop
lahf
jae
mov
test
pop
or
enter
inc
adc
push
faddp
add
sbb
adc
gs
ficompl
add
xor
or
jecxz
add
decl
shll
adc
xchg
adc
fld
add
les
mov
and
arpl
scas
pop
addb
adcl
cltd
push
andb
or
test
sub
dec
ret
push
pop
fldt
jp
adc
adc
push
int
push
pop
inc
add
adc
cmp
sbb
or
inc
sub
xchg
jge
inc
rcrb
mov
jecxz
inc
arpl
add
and
icebp
mov
fists
mov
xchg
adc
and
jo
mov
scas
daa
inc
hlt
mov
mov
jge
cwtl
test
cmp
xchg
cmp
ret
in
lock
mov
in
inc
jbe
adc
js
mov
mov
das
push
pop
dec
rolb
push
popf
stos
xlat
shl
test
adc
xchg
lcall
or
mov
mov
call
pop
or
mov
popf
incb
jmp
les
jg
jne
push
movsb
mov
mulb
xlat
mov
insb
push
gs
sbb
sub
rcrl
lds
xor
repnz
movsl
xlat
inc
shl
cmp
das
sbb
loop
add
cmp
lahf
add
and
mov
lods
lret
enter
cmp
inc
hlt
mov
adc
inc
fcmovbe
in
stos
mov
or
sub
cwtl
loopne
rcrl
and
mov
mov
sbb
pushf
and
sub
ja
mov
ret
mov
sub
cmp
cmp
mov
push
inc
jne
ss
push
lcall
pop
test
ja
push
mov
xchg
xchg
out
xor
lods
aad
pop
loopne
push
xchg
shll
xchg
jmp
ljmp
andl
add
pusha
aas
xlat
fsubrl
or
adc
ja
ljmp
scas
neg
ret
ret
out
push
stc
pop
adc
dec
cmpsb
dec
pop
aad
add
mov
es
xchg
shrl
add
inc
outsb
clc
push
fldl
pextrw
gs
out
repnz
out
fs
lock
inc
jns
ret
out
fs
in
fimuls
std
push
ss
adc
sbb
and
popa
sbb
inc
jae
in
rol
test
xor
rclb
lods
adc
inc
pusha
add
in
rolb
and
fdivs
jge
cmp
mov
leave
fsubs
mov
sub
adc
push
or
jmp
sub
cmp
and
xchg
push
mov
and
aad
icebp
dec
pop
cmpsb
mov
lods
jbe
add
mov
mov
pop
jno
mov
mov
adc
aas
or
jmp
xchg
das
loope
and
mov
call
push
sub
test
adc
and
cmpb
or
cmp
addr16
rclb
jb
jno
loop
int3
pop
das
cmp
ljmp
add
and
lret
pop
adc
dec
sub
push
mov
aaa
sbb
cmp
add
inc
and
add
sbb
cmp
pop
pop
ficoml
xorb
adc
push
sub
shll
dec
xchg
add
das
xor
cmpsl
push
leave
mov
sahf
ds
cmp
push
mov
xorb
std
mov
cs
add
in
push
push
cs
add
inc
int3
sub
mov
jo
add
leave
aad
ret
test
add
push
add
cmp
mov
add
jb
cwtl
adc
out
sbb
les
and
push
nop
jmp
mov
mov
mov
iret
pop
fildl
iret
jp
adc
ret
orb
mov
cmp
ret
adc
push
idivb
dec
push
hlt
aam
cmpsb
adc
sti
jp
push
push
sub
out
xor
ljmp
inc
shll
adc
xchg
xor
adc
mov
shll
addb
inc
push
and
mov
sub
pop
adc
dec
xor
and
aad
xor
adc
mov
sbb
and
loopne
addr16
sti
dec
mov
xchg
add
mov
cmp
sub
or
sbb
and
push
fcomps
push
sbb
jecxz
jmp
xchg
mov
aad
sub
repnz
or
les
pop
sub
cmp
lds
sbb
bound
test
adc
and
xorl
std
lock
add
or
lcall
enter
sub
dec
adc
adc
mov
test
mov
and
mov
in
cli
and
push
fcom
mov
pop
add
add
xchg
push
aam
aam
inc
xchg
mov
pop
lahf
mov
sub
xor
or
ret
imul
insl
lods
jae
sbb
sbb
cmp
jmp
inc
push
and
add
add
call
loope
icebp
pop
mov
jns
mov
int
mov
mov
mov
adc
insb
mov
and
sbb
pop
outsl
shlb
cmp
sub
dec
mov
or
sub
movsl
int
sbb
inc
pop
push
pop
push
mov
rorb
psubb
sub
je
push
mov
fidivs
mov
and
xchg
js,pt
jge
sbb
cmp
aas
cmp
popa
mov
adc
stos
ljmp
cmp
insl
sub
ret
stos
movb
xchg
mov
test
pop
mov
insb
sub
dec
xchg
and
loopne
sub
and
pop
inc
mov
pop
sbb
stos
push
subl
inc
and
push
cltd
xorl
outsl
add
mov
mov
gs
pop
or
jp
dec
scas
jbe
jle
lods
jge
add
mov
inc
rorb
inc
sarl
xorb
xorl
sbb
cli
pop
pop
mov
sbbb
and
mov
inc
mov
fs
sbb
sub
xor
pop
shrb
dec
inc
mov
cmp
xchg
fadds
pop
xor
push
adc
loop
sbb
stc
incl
mov
cs
pusha
adc
shll
not
add
les
mov
pop
jb
pop
movsb
js
stos
sbb
mov
lods
pop
sti
frstor
inc
ds
out
stos
popf
mov
mov
icebp
mov
call
jno
inc
pusha
dec
push
insl
dec
mov
clc
sbb
adc
test
push
add
inc
add
push
dec
add
mov
adcb
popl
loope
in
and
mov
sub
xor
jae
push
jne
lahf
inc
xor
test
fisubs
dec
mov
jb
add
mov
jnp
subl
push
addb
pop
negl
and
sub
xorb
out
mov
push
filds
fisubrs
lcallw
cmp
outsb
xor
rcrb
shr
hlt
fwait
sub
insb
ret
adc
mov
pop
adc
sti
fidivrl
adc
cltd
cwtl
nop
mov
movb
bound
test
xchg
clc
or
xor
mov
xor
imul
mov
push
aaa
sub
dec
mov
sub
cmp
mov
and
xor
loop
jne
int
inc
bound
movsb
fdiv
testl
iret
and
or
and
sbb
inc
xor
push
inc
push
add
fwait
mov
iret
push
xchg
add
aas
inc
push
rolb
mov
mov
rorb
cli
repnz
out
push
mov
sbb
dec
lret
mov
jo
pop
mov
ror
pop
fistl
xor
fwait
xchg
loope
ljmp
and
mov
or
es
mov
inc
sbb
mov
jge
or
cmp
daa
xor
sbbb
daa
add
add
push
sub
xor
dec
jae
shrb
rolb
adc
mov
xchg
xor
xchg
add
xor
xlat
and
add
insl
pop
fwait
xor
xor
adc
push
js
js
lret
call
test
push
and
cs
xor
add
out
add
rol
sbb
ds
imull
pushf
add
gs
rorb
ret
addb
mov
and
adc
adc
add
or
lret
push
lock
ret
sbb
add
sbb
dec
pop
cmp
fsts
and
rcrl
sub
fadds
mov
jecxz
add
shlb
sub
mov
sti
fildll
inc
scas
ja
pop
sub
std
inc
scas
int3
add
in
cmp
sub
mov
adc
icebp
les
arpl
dec
xor
sub
jb
lods
cmp
dec
dec
and
fwait
adc
sub
js
xor
int3
sub
jnp
imul
shll
inc
in
xor
or
xchg
jmp
insb
add
sarb
inc
push
pop
cmp
das
push
sti
cmp
cmc
or
cmp
pop
push
lock
push
sbb
or
inc
pusha
add
mov
nop
stos
nop
ret
and
dec
into
rcr
and
and
sub
negl
push
jecxz
mov
pop
xor
data16
sbbb
subb
insl
sbb
ret
mov
arpl
and
adc
pusha
adc
add
jle
mov
adc
sub
cmp
jnp
sub
test
ljmp
jo
scas
push
mov
mov
add
dec
lock
les
test
xchg
cmp
loopne
xor
pusha
test
sar
push
imul
add
push
pop
mov
fstpt
adc
jecxz
mov
data16
mov
call
pusha
mov
add
test
mov
stos
sahf
fisubl
inc
push
fistl
frstor
add
sbbb
out
daa
sbb
sbb
add
and
iret
int
cwtl
add
fdivs
and
push
push
inc
int
cmp
pushf
add
add
inc
xor
pop
mov
orb
gs
test
ljmp
sub
jp
add
cmp
data16
add
mov
inc
dec
in
es
lods
and
loopne
lret
adc
insl
scas
jae
mov
add
pop
inc
mov
sti
js
stos
push
inc
mov
fldt
push
add
imull
popf
jo
and
sbb
xor
and
cmp
add
sbb
pusha
out
adc
in
insl
jb
das
or
dec
pop
lds
xor
mov
mov
in
das
and
out
inc
mov
push
and
dec
push
div
xchg
call
push
loopne
insl
mov
jbe
sub
push
adc
adc
out
push
adc
out
xchg
cmp
les
inc
lods
sbb
pop
push
xchg
jno
xchg
mov
fldt
daa
rcll
aaa
push
lea
xor
sub
sbb
shrb
cmp
cmp
xlat
sub
dec
pop
aas
and
rclb
adc
mov
clc
cld
cwtl
add
les
push
inc
fs
and
mov
or
xchg
jmp
int3
adc
es
sub
add
adc
add
adc
sbbb
push
push
mov
mov
inc
sbb
mov
jmp
push
mov
xor
xor
inc
cli
add
lods
sbb
sub
lods
mov
lock
adc
aam
push
jb
aam
mov
ja
sbb
inc
xchg
stc
or
imul
rol
mov
cmp
movl
cmpsl
xor
ljmp
ljmp
fcom
arpl
das
adc
mov
pushf
xchg
repnz
jp,pt
fnstsw
js
nop
mov
add
ret
sbb
xor
lds
addr16
sbb
pop
jl
mov
ss
push
pop
sub
sub
ret
pop
mov
xor
add
add
xor
jb
mov
sbb
mov
sbb
mov
xchg
add
cltd
sbb
jp
mov
fcom
jp
jnp
scas
es
or
push
jg
add
add
mov
push
xchg
subl
icebp
add
and
or
or
or
sub
inc
call
and
mov
sbb
daa
inc
mov
outsl
cs
xor
cmp
cltd
mov
cmpl
sub
jns
es
mov
fists
push
in
les
xor
cmp
xchg
rcr
xlat
jl
xchg
add
add
dec
mov
xchg
jge
mov
ror
sub
mov
sbb
or
dec
outsb
mov
pop
enter
push
test
and
xchg
sub
sbb
xchg
add
insl
inc
stos
push
inc
xchg
adc
xchg
outsb
xchg
xchg
add
sahf
xlat
adc
in
and
add
iret
jle
jo
add
sbb
and
test
cmp
jo
and
mov
lds
leave
pop
mov
dec
out
xchg
xchg
sbb
sar
ffree
xchg
xchg
aam
or
pusha
xchg
aam
call
mov
push
push
adc
clc
add
mov
jne
dec
test
jp
shrd
daa
jne
push
fs
test
cmpsb
mov
pop
aas
dec
or
test
jbe
scas
sub
ret
inc
and
dec
pop
cmc
out
scas
lods
lret
clc
xchg
mov
sbb
cmp
push
or
or
pop
aaa
mov
add
mov
jnp
arpl
push
mov
adc
push
push
cmp
cmp
call
rclb
imul
fistpll
sbb
add
add
testl
aam
dec
js
push
mov
fldl
inc
mov
out
push
arpl
add
mov
std
pop
cmp
ja
retw
hlt
ret
scas
dec
xchg
xchg
xlat
xor
data16
bound
jae
das
mov
clc
dec
rcrl
ss
sbb
xchg
mov
inc
jnp
and
or
loop
xchg
ret
cwtl
shlb
xchg
adc
int
lahf
scas
push
repz
outsl
fcompl
dec
inc
testl
aaa
mov
and
sti
sub
sysret
jae
out
inc
dec
outsl
mov
cli
call
adc
sahf
ljmp
inc
jecxz
jb
push
scas
or
aam
sarb
or
ret
repnz
rcll
sub
mov
push
inc
xchg
adc
adc
mov
data16
adc
ficoms
jnp
cld
dec
lea
mov
xlat
int
xor
xchg
cmpsl
stos
iret
cli
add
fisttpl
pushf
adc
sub
call
push
pop
adc
fstps
pop
das
insl
push
cmpsl
sub
sbb
xchg
fnstcw
add
cmp
sti
xchg
dec
lds
adc
sub
into
and
sbb
inc
fistpl
or
sti
insl
pop
mov
fiadds
lahf
js
pop
bound
cmp
jmp
sarl
mov
rolb
pop
cld
and
shrl
jg
sbb
lret
pop
jecxz
mov
cmp
adc
lds
pop
sbb
ret
dec
sbb
or
inc
sub
das
shll
call
pop
not
out
add
inc
add
aas
jp
inc
int3
fmull
jb
shlb
mov
adc
ret
pop
pop
mov
jns
imul
sbb
push
scas
mov
stos
pop
sbb
cmp
mov
adc
ret
push
scas
daa
mov
pop
aas
pop
jmp
push
je
jnp
add
enter
sarb
xlat
mov
lea
mov
adc
mov
inc
mov
mov
jno
sbb
out
xchg
frstor
shrb
scas
aas
adc
lret
sbb
insl
xor
push
mov
push
and
ja
xchg
cmp
or
mov
sbb
jmp
es
mov
arpl
sbb
orb
insl
and
pop
lds
test
addr16
fcomp
cmp
std
push
jle
adc
sbbl
cmpsl
jnp
fstpt
mov
test
inc
stos
imul
mov
sahf
mov
adc
xchg
xchg
mov
je
jle
push
xor
pop
shll
subb
mov
rorl
mov
shlb
popa
push
ja
jle
mov
xor
push
fadd
push
or
cld
adc
fidivs
ret
call
repz
sub
shlb
mov
loop
in
jg
ret
das
cmpb
adc
cmp
and
or
and
popf
jl
adc
xor
mov
in
sub
daa
sbb
es
cmp
fs
or
adc
shrb
mov
daa
jmp
adc
add
lea
and
mov
and
adc
inc
jnp
and
jnp
arpl
in
leave
dec
in
sahf
mov
push
subl
pop
adc
es
adcb
test
and
or
add
or
or
pminub
int
push
out
and
jb
and
jo
arpl
mov
or
dec
xchg
shll
cltd
or
jns
cmpsl
add
cmp
imul
adc
movsb
out
xor
and
daa
pushf
cmpsl
imul
cmp
lahf
icebp
and
xchg
sub
or
push
sti
adc
arpl
xor
add
out
pushf
mov
out
das
repnz
xchg
pop
add
mov
sub
inc
fldcw
push
mov
imul
pop
fs
sub
jmp
jl
jecxz
add
fwait
jae
cmpsb
push
imul
lods
pop
out
mov
mov
jnp
add
sti
push
push
movsb
or
pusha
and
scas
and
xor
pop
xchg
add
xchg
add
data16
or
sub
lods
je
ljmp
adc
test
sbb
neg
cmp
out
and
imul
jge
out
mov
ret
daa
add
outsl
out
xchg
stos
sbb
dec
push
add
mov
sbb
sbb
or
cmp
mov
mov
imull
add
sub
or
or
push
pop
test
mov
add
pusha
xchg
jmp
lds
push
xchg
cs
dec
js
sub
mov
xchg
jns
aas
cmpsl
icebp
mov
in
adc
add
sbb
insb
out
loope
fwait
push
gs
out
pop
cwtl
add
pop
pop
pop
push
rcr
scas
test
or
mov
pop
repz
inc
add
sbb
or
cmp
add
repz
add
dec
mov
add
jbe
jp
jmp
fistpl
mov
cwtl
dec
xchg
pop
cmp
sub
daa
add
int3
pop
mov
xor
add
mov
outsb
lret
mov
xor
sub
into
add
or
adc
into
fcmovnb
or
add
inc
and
jns
add
sub
jnp
push
loope
add
adc
dec
jne
ss
loope
and
xor
fcmovnu
adc
out
xor
xor
ret
add
rcr
add
mov
fbld
imul
aad
in
cmc
fiaddl
mov
xchg
aad
ret
or
xor
jl
fsubrl
xchg
scas
xor
fs
int3
add
cwtl
ja
xor
mov
and
sbb
and
and
and
jmp
inc
xor
sub
into
dec
cwtl
fistpll
adc
xor
add
nop
sbb
mov
mov
push
mov
cmp
pushf
sub
shlb
pusha
jbe
push
and
nop
fisubl
mov
sub
and
jge
bound
and
xchg
ret
insb
ret
shll
add
lret
push
ja
xchg
mov
xchg
pop
sbb
fnstenv
lock
mov
add
sub
into
test
or
fldl
jno
adc
aas
arpl
cmp
adc
imul
dec
outsb
leave
push
leave
fistpl
lret
das
popa
adc
pop
dec
mov
push
in
sbb
fdivrp
xlat
mov
lret
addr16
jbe
and
and
rcrl
xchg
fidivs
jnp
dec
arpl
shll
inc
pop
dec
rclb
imul
dec
sahf
iret
mov
xor
add
leave
cmpsl
mov
fwait
mov
mov
or
loopne
inc
dec
inc
iret
clc
sub
push
push
aaa
add
stos
pop
aas
paddsw
cwtl
fstpl
mov
cmp
jnp
cmp
fimuls
mov
sbb
stos
add
fwait
and
sub
pop
sub
repz
or
dec
inc
mov
xor
loopne
ficomps
iret
je
dec
fld
push
inc
push
ret
pop
add
mov
xchg
sub
ja
pop
rorb
mov
jo
jns
lret
sub
push
sbb
adc
mov
and
jnp
push
fxch
movq
ret
jp
sbb
pop
arpl
in
lods
iret
dec
lret
sbb
dec
xor
pop
je
cmp
test
push
ret
mull
or
loopne
sub
cmpsl
dec
cmpsl
pop
xor
imul
ret
sub
ret
test
test
add
fadd
or
mulb
adc
xchg
mov
bound
xchg
push
jo
xorl
mov
stos
out
jo
jmp
pop
add
in
mov
addl
ret
inc
and
loop
sub
fsubrp
mov
fmuls
mov
ltr
cmc
pop
out
dec
cmp
iret
call
or
lods
dec
mov
or
pop
inc
push
add
pop
stos
and
lds
dec
pop
push
jge
in
pusha
les
rcr
andl
push
imul
mov
mov
mov
mov
lock
call
int
loopne
sbb
leave
cmp
xchg
add
stos
shrl
in
outsb
repnz
lret
push
enter
adcl
pusha
or
xor
push
mov
pop
movb
lret
mov
sub
push
ret
in
inc
xchg
xchg
sti
mov
adc
adc
test
arpl
and
test
cmp
jecxz
fnstcw
mull
adc
int
loopne
add
imul
mov
outsb
sbb
loope
mov
mov
insb
in
and
pop
int3
mov
popa
lock
jle
add
repz
sbb
int
icebp
rorl
sbb
fidivrl
xchg
jl
ret
cmp
pop
out
andl
adc
inc
sub
fisubs
iret
pop
add
js
idivl
test
mov
cmp
lret
sbb
sbb
ds
add
pop
inc
cli
xchg
and
sbb
adc
jo
pop
test
push
cmpl
sub
adc
push
cmp
mov
mov
fildl
daa
pmaxub
adc
xchg
jp
mov
into
sbbb
pop
add
dec
sub
lea
adc
sahf
sahf
push
push
jge
rorl
cmpw
or
js
insb
inc
daa
mov
jne
sub
sbb
ret
mov
mov
push
or
test
lcall
mov
inc
aas
dec
ret
inc
mov
cmp
arpl
and
mov
gs
outsb
push
pop
daa
ss
int
ret
cwtl
push
or
mov
ret
outsb
ss
mov
lock
sub
sub
cmp
xchg
aas
adc
out
or
in
dec
push
lcall
pusha
les
mov
inc
repz
pop
les
cmp
sbb
push
rcll
xchg
sub
mov
dec
sbb
push
add
push
fdivs
push
add
dec
jno
sub
jo
mov
lret
ds
mov
or
sbb
fdivs
sub
fsts
push
sub
adc
mov
sub
scas
mov
or
insl
loop
test
add
sub
outsl
and
add
lcall
dec
pop
gs
fdiv
cmp
sbb
add
sbb
mov
outsl
push
mov
outsb
and
adc
adc
je
cmp
push
pop
or
push
pop
push
jle
ja,pn
out
push
cmp
loope
jl
std
out
and
adc
and
imul
pop
imul
imul
xchg
xchg
arpl
mov
lods
add
insl
or
add
add
sarl
imul
imul
jns
jne
inc
or
mov
in
fbstp
adc
sbb
or
xor
sub
shrl
std
outsl
add
xchg
add
mov
sbb
roll
movsl
sub
add
add
add
sub
xor
add
pop
push
sub
jnp
stos
push
add
pop
divb
or
insb
pop
idivl
orl
adc
sub
scas
add
or
and
mov
insb
jne
add
xor
mov
sbb
stos
arpl
mov
adc
add
jns
or
inc
sub
pop
lahf
outsb
xlat
arpl
pop
mov
addr16
sub
sahf
rolb
push
out
insl
adc
adc
push
mov
rolb
sub
fisttpll
je
rolb
mov
sahf
jo
mov
scas
dec
adc
sbb
cld
add
rcll
fisttpll
shlb
inc
fildl
sbb
sub
add
lock
test
insb
mov
aaa
dec
mov
fidivrs
adc
call
ss
add
fisubs
and
sbb
or
xchg
pusha
aaa
xchg
mov
xlat
mov
pop
add
outsl
and
pop
stos
rcl
icebp
cmp
add
imul
sbb
add
add
js
sub
stos
adc
xchg
push
xor
sti
push
push
push
lods
xchg
push
and
mov
rcll
pop
mov
out
bound
dec
push
fs
daa
or
xor
cs
inc
inc
add
add
fldenv
lods
aas
add
ds
iret
sbb
fidivrl
adc
subl
jle
or
adc
js
pop
dec
and
fcmovnu
lods
dec
push
icebp
jge
and
je
loope
stos
sbb
push
or
cmp
fadds
sub
sarl
pushl
mov
pop
stos
add
or
mov
outsl
outsb
mov
lahf
push
jnp
aad
inc
mov
in
adc
mov
push
pop
xchg
cmpl
mov
jae
sbb
notb
or
fisttpll
lods
mov
fildl
repnz
mov
jmp
mov
pop
push
outsl
xchg
pop
movsl
stos
mov
loop
les
push
imul
rolb
outsl
mov
xor
ret
add
jne
sbb
andb
mov
sbb
lods
cmp
push
and
mov
jne
dec
pop
in
stos
push
cmp
ja
sbb
dec
push
outsl
xchg
leave
je
or
insb
dec
les
repnz
adcb
push
notb
mov
sub
and
fdivrl
fcompl
sbb
cmp
and
push
or
stos
sub
xor
sbb
mov
pop
outsl
rcrl
mov
int3
mov
pop
inc
bound
adc
push
xchg
out
lret
jle
mov
fucomi
sbb
jbe
xlat
call
dec
fcmovbe
xor
mov
dec
loope
shll
lea
push
rclb
jb
stos
or
and
push
insb
subb
sub
mov
idivl
imul
insl
mov
add
or
outsl
mov
sbb
pop
jnp
je
popf
fwait
pop
je
pop
outsl
jne
jno
mov
xchg
adc
or
jp
outsl
sbbb
mov
cmp
mov
mov
inc
repnz
mov
mov
pop
inc
je
pop
push
mov
pop
mov
lret
mov
xor
push
lods
jge
popf
rolb
clc
ljmp
add
shlb
pop
add
lcall
cmp
pop
push
in
imul
addr16
mov
mov
push
test
xor
sbb
outsl
pop
je
xor
or
ficoml
sbb
ja
or
add
ds
ficompl
bound
insl
push
add
jmp
ret
and
mov
out
xchg
fists
pop
sub
jg
mov
adc
mov
cmp
mov
ja
pop
dec
loop
mov
dec
test
mov
pop
xor
dec
sbb
out
adc
push
or
sbb
and
pop
mov
xchg
jp
lock
out
pop
or
daa
into
xchg
ror
inc
add
inc
mov
stos
fbld
aaa
dec
in
mov
out
outsb
or
enter
imul
fwait
icebp
mov
mov
mov
pusha
or
loope
mov
lcall
jmp
xchg
jbe
sub
mov
movsl
fstpt
sbb
adcb
sub
imul
fbstp
gs
cwtl
mov
icebp
sbb
fadds
lcall
inc
and
mov
shlb
and
in
popf
or
scas
add
inc
sub
iret
push
dec
dec
imul
add
paddsb
mov
jns
add
xchg
or
inc
or
mov
subb
mov
or
xor
cmpb
xchg
ja
outsl
in
test
imul
push
cmp
inc
loop
movsl
filds
jne
and
cwtl
popa
and
adc
call
test
pop
push
push
js
hlt
sbb
inc
insl
pop
adc
stos
jecxz
outsb
rcrl
outsb
mov
cld
jae
adcl
lods
imul
add
push
dec
inc
lods
pushl
cmp
aas
mov
out
insb
dec
scas
mov
sbb
sbb
clc
mov
mov
jg
add
inc
je
insl
mov
fcom
jno
int3
mov
xchg
test
cmp
in
sbb
fistps
xor
ud1
fimull
push
inc
mov
cmp
fildll
shlb
testl
mov
insl
mov
jecxz
scas
lahf
adc
cltd
loope
aas
sbb
insl
aaa
fiaddl
mov
imul
subb
dec
push
mov
mov
sbb
xchg
ds
jl
in
iret
insl
out
mov
out
xor
jo
inc
popa
fldenv
int
loope
mov
mov
rorl
lahf
js
mov
xor
jl
mov
mov
xchg
repnz
sarl
pop
js
nop
call
ror
xor
insb
mov
adcl
ficompl
dec
fisubl
jb
js
loop
xorb
cmp
ljmp
fldl
dec
rcl
and
dec
xchg
adc
es
in
xor
push
jb
adc
insb
sub
sbbl
lcall
adcb
adc
icebp
fldl
lock
mov
dec
jae
xchg
push
xor
out
jmp
inc
inc
pop
cld
inc
lock
shll
frstor
mov
je
jno
bound
lahf
je
movsl
or
rorb
les
mov
pop
add
lea
and
out
orb
pop
out
mov
push
jb
cmp
test
and
mov
add
fsubp
mov
sub
sbb
mov
into
in
insl
les
mov
sbb
dec
loopne
insl
arpl
ds
fildl
lret
or
mov
pop
lcall
mov
fstpt
das
lea
movl
mov
rorb
test
mov
lret
arpl
in
push
jb
dec
sbb
pop
jne
testb
xchg
out
mov
or
or
xchg
push
pushf
lcall
lret
cld
in
push
xlat
xchg
popa
mov
lods
jmp
negl
pop
rclb
mov
insb
cwtl
jp
cmp
pusha
loop
xor
sbbl
push
cwtl
sahf
ss
inc
add
push
mov
inc
jno
push
sti
pop
fstpl
fstpt
lcall
jno
dec
aas
sbb
push
sbb
adc
mov
and
scas
push
lods
xchg
dec
or
pop
jl,pt
les
add
xor
lahf
push
sbb
loopne
cmp
scas
pop
pop
xchg
adc
adc
fwait
dec
in
dec
pop
cmp
xor
jmp
in
adc
jle
cld
repnz
sub
xchg
int
mov
data16
roll
fildl
cmp
lret
insb
pop
xlat
cmc
inc
jb
inc
and
jmp
mov
stos
adc
out
inc
push
mov
test
imul
lea
xor
ja
sbb
data16
ret
jne
imul
faddl
or
push
mov
mov
mov
je
scas
xchg
hlt
call
inc
ja
or
pop
push
push
xchg
jne
sbb
sub
inc
mov
js
shl
push
lea
cmp
mov
jge
adc
imul
cwtl
ja
aam
insb
and
dec
ds
mov
das
insb
adc
iret
adc
mov
mov
and
add
les
in
aaa
xorb
frstor
pop
mov
arpl
insb
and
test
xchg
sbb
roll
in
sbb
out
icebp
push
arpl
add
jg
gs
in
outsl
clc
jbe
add
call
repnz
cmpb
jmp
pop
stos
mov
push
ljmp
sbb
sbb
jae
incb
dec
mov
sbb
mov
inc
pop
inc
cli
sbbb
mov
sti
dec
or
daa
or
data16
fcmovb
and
insl
mov
xchg
inc
inc
sti
mov
mov
pop
mov
or
sti
aaa
xor
xchg
pop
ljmp
faddl
out
xor
enter
push
jb
sbbb
mov
movsl
mov
mov
out
dec
xor
scas
cmp
jb
jns
jo
rorb
xor
mov
addr16
scas
lahf
mov
fisttpll
sbb
add
int
cld
adc
sbbb
add
and
insl
outsl
out
sub
jne
out
push
repz
xlat
push
sub
adc
fdivl
mov
lcall
shll
mov
addb
inc
stos
stos
adc
shrl
iret
xor
add
fbstp
fs
xlat
lahf
fsubs
iret
jg
into
mov
xchg
push
adc
mov
xor
pop
xchg
and
nop
cmp
inc
jns
jae
sbb
ret
adc
pop
push
add
lods
dec
pop
mov
scas
xor
dec
inc
js
mov
mov
or
mov
shlb
lahf
push
push
movsb
aaa
and
out
adc
sbb
popa
sbb
adc
pop
pop
mov
pop
stos
jbe
add
xor
mov
sbb
cmpsb
popf
cli
sbb
mov
fnstsw
xor
mov
pusha
lret
ret
or
mov
mov
xor
inc
pop
cs
pop
inc
lahf
dec
xchg
outsb
testb
repz
add
wrmsr
fldt
push
and
cmpsb
pusha
sub
mov
ret
pcmpgtw
sbb
xor
insb
dec
int3
push
pop
xor
pop
xor
cmp
cmp
fisubs
or
xor
sbb
mov
loop
test
jl
ret
jo
arpl
lldt
int
lahf
test
add
out
ss
outsl
pop
add
scas
xchg
inc
jno
lods
jne
xor
xlat
jb
xchg
adc
xchg
cltd
fnstsw
mov
aaa
inc
imul
fdivrl
sbb
and
insb
cmp
fst
test
insl
cmp
ss
sbb
jmp
sbb
cmp
rcl
ret
mov
xchg
ficomps
das
pop
cmp
push
fcomip
cmpsb
mov
test
sahf
or
push
in
mov
cltd
sub
xchg
push
mov
adc
ss
adc
dec
or
fs
push
xchg
or
push
in
or
pop
add
add
shrb
xor
lret
or
sarb
int
xchg
mov
pop
imul
adc
mov
cld
inc
push
sahf
jne
pushf
mov
add
div
movups
push
or
ficomps
pop
orb
fwait
mov
loope
add
mov
cli
jbe
mov
mov
adcb
dec
popf
lods
lods
fdiv
imul
jne
add
addl
xor
in
js
or
jp
popl
jmp
cmp
and
fistpl
pop
stos
mov
add
pop
mov
add
jmp
xchg
lret
pop
mov
pop
inc
fucomi
scas
or
imul
and
pop
sub
fldz
pop
or
add
jge
adc
fsubl
mov
test
fildll
test
rcl
pop
out
mov
std
push
sarb
cld
mov
xlat
push
jbe
sbb
out
popa
imul
and
mov
fcmovnb
fimuls
negb
cwtl
inc
aas
imul
std
test
call
xchg
mov
cmpsb
daa
add
rclb
inc
xorb
in
call
mov
sbb
jnp
push
push
sbb
aaa
imul
lock
mov
dec
mov
add
pop
adcb
lcall
rol
flds
pop
fcoms
inc
lret
or
push
insl
loopne
or
cli
insb
adc
divb
out
daa
sub
pop
pop
mov
hlt
push
xor
movl
lock
dec
jg
jle
add
sbbb
pop
js
fcmovnbe
enter
hlt
jecxz
int
out
pop
fdivl
mov
cwtl
cmpsl
mov
mov
cmpsl
rorl
lods
jmp
scas
or
cmp
xchg
mov
mov
jno,pn
ljmp
sbb
cmp
jnp
dec
hlt
xchg
add
pop
dec
push
xor
sub
xchg
mov
or
outsl
mov
fucom
insl
in
push
in
mov
js
mov
lret
sbb
test
negb
inc
movsl
fimull
shll
mov
lock
xchg
mov
sbb
pusha
pop
fsubs
xor
test
imul
cmp
mov
inc
ljmp
xchg
xlat
pop
jae
pushf
jnp
mull
mov
pop
add
cmpsb
shrb
push
push
lret
jp
fldenv
jne
loope
sub
cwtl
or
push
and
addl
lcall
nop
pop
and
sbb
add
sbb
fadds
sbb
fldcw
mov
pusha
jo
imul
mov
sbb
dec
push
xchg
sbb
sbb
fimuls
and
daa
dec
and
fs
in
int
and
or
fistl
mov
mov
lret
sub
or
or
lahf
mov
jbe
push
push
pusha
test
mov
sub
mov
loope
pop
fwait
pop
sub
scas
jg
test
fldt
nop
js
or
bound
mov
nop
fbstp
or
xor
clc
mov
test
push
mov
pop
mov
mov
mov
push
sub
out
or
fbstp
xchg
rorl
fcom
xchg
xor
mov
gs
cli
mov
incb
arpl
pop
mov
sbb
insl
aad
scas
test
mov
mov
jno
data16
cmp
aaa
jo
pop
xor
dec
fdiv
es
sub
ja
daa
push
cmp
ss
fnsave
mov
and
pop
arpl
movsl
scas
cmpsb
push
mov
or
lds
popf
xorl
inc
fildl
push
cmp
mov
sbb
insb
or
add
int
push
pop
adc
add
cmpsl
scas
mov
addr16
subb
ror
sbb
lcall
xor
test
add
add
in
or
xor
xor
loop
push
flds
ljmp
not
xchg
lock
jns
out
shrb
mov
push
cmp
lds
adc
mov
mov
cs
mov
inc
imull
xchg
dec
add
arpl
lea
xorb
inc
pusha
lea
add
popa
add
jbe
bound
pop
adc
jo
imul
pop
xor
push
jle
cmpsl
sbb
rolb
adc
add
fnstcw
sub
mov
mov
mov
shll
or
inc
cmp
mov
and
jmp
addr16
adc
test
call
jae
mov
sub
adc
ret
stc
jae
pop
add
testb
cltd
cmc
ss
insb
sbb
lods
call
pop
or
ret
push
test
sub
xor
mov
mov
stos
insl
or
jns
and
movsl
ss
xor
scas
lcall
adc
ljmp
ret
pop
xchg
lds
fildll
jbe
lods
ffree
movsl
xor
mov
xor
push
adc
int
adc
dec
lods
xchg
fidivs
cmp
adc
push
mov
jno
xor
inc
loopne
add
dec
xchg
shll
sub
dec
addr16
xor
push
xchg
sysret
or
dec
hlt
mov
or
sti
or
shll
mov
push
xlat
dec
add
push
shl
call
xor
bound
dec
adc
jl
movl
jp
push
dec
js
sbb
mov
aam
fwait
call
sti
sub
enter
hlt
decb
ds
xlat
jl
cmp
or
adc
ljmp
xor
inc
das
lahf
rcrb
imul
rorl
mov
ja
push
fnstsw
pop
xchg
xlat
dec
mov
shrl
push
mov
push
mov
dec
jecxz
or
addr16
lods
or
fnstcw
pop
outsb
pop
add
ret
xchg
xchg
lea
leave
sarl
cli
enter
or
out
xchg
mov
das
insb
fucomi
daa
dec
cmp
stos
gs
cmp
arpl
loopne
bsf
pop
aaa
dec
outsl
mov
push
sub
and
pop
cli
cmp
xchg
mov
ljmp
mov
add
inc
add
mov
xor
push
cmp
adc
fidivl
sbb
jb
push
push
jnp
add
add
ss
sbb
out
and
pushl
insb
and
pop
insl
stos
mov
mov
inc
jmp
test
sub
insl
fucomi
imul
mov
xchg
jbe
dec
xchg
dec
loop
clc
iret
fldlg2
es
pop
add
mov
incl
mov
pop
inc
xor
push
or
and
insb
sti
ret
pop
xor
mov
bound
pusha
fucomi
rolb
push
pop
ljmp
sub
dec
lods
mov
call
dec
mov
fcomi
mov
jnp
insb
decl
dec
lods
sub
lret
lret
mov
or
push
or
fisttpl
lcall
sbb
imul
ret
bound
mov
push
pop
mov
xlat
in
adc
push
xor
lods
cmp
and
inc
push
pop
dec
or
iret
push
jg
aaa
jbe
je
popa
inc
or
das
repnz
hlt
mov
fnsave
pushf
in
xchg
jae
adc
in
rcrl
sarl
repnz
fsubrp
sub
dec
mov
ds
jl,pt
jns
popa
pop
adc
ja
ja
push
fisttpl
sub
mov
mov
stos
rolb
cmp
cmp
jg
call
and
push
in
cmp
push
xor
inc
xchg
cmc
dec
popf
and
pop
fldt
fwait
mov
pusha
mov
dec
arpl
mov
xor
cltd
mov
outsb
into
push
sub
sbb
or
aam
cmp
xlat
ja
pop
inc
ret
cltd
mov
mov
jl
sahf
and
pop
pop
rcrb
mov
add
xchg
xchg
adc
cmp
jb
pushl
mov
sbb
mov
sarb
jmp
jl
pop
adc
frstor
out
ljmp
aam
ret
or
bound
outsb
xchg
sbb
fldl
mov
int
mov
jae
insb
out
ficoml
or
jl
xor
pshufw
ss
push
lret
or
pop
stos
or
outsl
mov
adc
xchg
lcall
jne
mov
fldenv
hlt
out
xchg
cmp
sbb
loopne
imul
fistpll
mov
add
ret
mov
add
pop
push
ficoms
lcall
popa
popa
inc
add
lahf
frstor
jo
ficompl
mov
mov
or
inc
jge
cmp
jl
cld
aaa
cmp
push
fcom
mov
jmp
pop
bound
or
fwait
push
mov
add
xchg
push
mov
pop
sub
pop
inc
out
pop
fisttpl
dec
xor
push
lret
adc
add
sbb
not
cmp
xchg
cmpb
pusha
shrl
pushf
mov
push
dec
and
nop
jb
mov
fcoml
ficoms
mov
sub
bound
push
fldl
lods
movsl
inc
push
pop
test
mov
push
popf
bound
sbb
pop
sbb
xchg
mov
enter
sbb
in
pop
mov
fdivl
xor
fs
rcrl
vmptrst
pop
mov
imul
mov
inc
pop
scas
inc
cmp
in
sbb
jb
ja
xor
inc
mov
test
jno
cmp
lahf
adc
mov
push
cmp
testb
ss
shl
dec
call
xchg
pusha
pop
fdivrs
rcrl
test
push
insl
pop
jo
fdivrl
cltd
cld
aaa
icebp
push
or
sbb
roll
or
insl
shll
sub
insb
mov
stos
stos
add
test
callw
pop
lret
lcall
jbe
lea
test
jnp
rorl
scas
and
mov
sbbl
clc
cld
and
inc
jmp
movb
or
hlt
sub
sbbl
aam
sub
loope
leavew
adc
mov
jne
dec
out
dec
fwait
add
aam
cmc
jge
jmp
jecxz
sti
push
jne
pop
into
repz
ret
fildl
xor
cmp
cmp
sub
xchg
idivb
pop
jae
scas
sbb
fwait
adc
push
and
and
sti
add
cmp
imull
add
arpl
push
sub
sbb
push
adc
popl
sub
add
mov
or
add
addr16
ja
inc
ds
mov
mov
xchg
push
mov
sub
fisttpl
into
add
adc
mov
cmp
mov
imul
push
adc
sbb
adc
mov
mov
cmp
push
push
in
sbb
ja
pop
add
sbb
sti
or
cmp
jg
and
xor
adc
add
mov
inc
imul
or
push
enter
add
sbb
add
xchg
xchg
lcall
ret
sub
mov
insl
sbb
sti
jl
adc
arpl
adc
mov
ret
adc
or
xchg
xchg
xor
sbb
adc
rorl
inc
cmp
fimuls
xlat
std
lcall
xor
push
or
or
sbb
popf
xor
out
sti
mov
xor
movl
pop
das
xor
mov
pop
inc
mov
outsl
jg
mov
xor
lea
mov
xchg
mov
mov
push
mov
mov
xor
xchg
sub
or
lcall
lret
adc
add
sbb
aaa
sbb
push
fwait
cmp
aaa
add
cmp
jae
ljmp
insb
in
sbb
push
adc
lea
adc
lret
ud0
fsubrp
pop
pop
and
add
movsb
faddl
imul
pop
or
jecxz
jl
fdivl
push
aaa
cwtl
or
fdiv
popf
dec
cmp
out
mov
sub
push
pop
xor
sbb
sahf
lods
xor
dec
push
push
mov
xchg
mov
jge
xchg
jecxz
or
adc
xor
xlat
or
mov
fmuls
ret
idivl
int3
add
and
packssdw
arpl
sub
or
dec
mov
inc
aaa
pop
dec
idivl
stos
sbb
mov
mov
daa
mov
mov
fucomp
insb
mov
bound
or
cmp
jecxz
or
or
out
inc
fisttpll
data16
insb
adc
ds
sub
adcl
pop
and
fisttps
pusha
jnp
or
stos
out
adc
adc
jge
popf
sbb
dec
or
dec
pop
jae
testb
pop
and
adc
testb
out
repz
lcall
add
inc
add
or
dec
mov
sbb
or
or
jecxz
pop
aaa
unpckhps
add
bswap
add
repz
mov
movq
sub
testl
lock
loopne
setbe
sbb
xchg
push
push
mov
inc
enter
push
inc
or
ja
fwait
or
cmp
clc
out
or
adc
push
cmpsb
push
sbb
fbld
adc
mov
in
prefetch
imulb
stos
adc
sbb
mov
jo
inc
outsl
gs
test
lds
fcmovne
pop
mov
cmp
pop
nop
ds
lock
adc
xor
jp
cmc
adc
xchg
sbb
push
stos
stc
cmp
imul
push
adc
push
lret
iret
rcll
lret
push
add
lcall
imul
add
cmpl
testb
fsubl
mov
adc
scas
ja
out
push
xchg
adc
add
fwait
adc
sub
adc
test
out
pop
imul
jp
push
arpl
cmp
dec
add
ret
fsubl
pop
sbb
sub
mov
movl
or
inc
repnz
test
or
jmp
fwait
pop
imul
or
pop
mov
lods
aas
insb
out
mov
pop
push
pop
pop
out
imul
pop
lods
inc
leave
ret
repz
xchg
mov
lret
add
push
ret
ret
jne
push
inc
sarb
push
fistpll
push
or
adc
add
xor
in
clc
sub
add
xlat
test
mov
push
pop
cmpb
dec
inc
cmp
dec
adc
sti
and
enter
iret
fstps
jmp
pop
xor
sbb
jmp
cmp
push
and
xchg
and
add
add
stos
sub
push
dec
sub
lods
or
push
data16
adc
or
scas
pop
pusha
lds
cmp
cmp
fwait
dec
sbb
jno
sti
jmp
push
cmp
ja
xor
and
push
sub
mov
cs
sub
test
xor
sub
jns
sbb
jbe
sbb
or
xor
cmp
sti
fisubs
popf
and
outsb
sbb
and
jge
pop
imull
and
adc
and
fwait
pop
adc
add
sbb
gs
dec
push
mov
inc
mov
push
scas
and
cs
test
lds
ret
fisubs
lcall
aad
jmp
mov
mov
aad
xchg
cli
loop
sub
mov
xor
fbstp
cmp
mov
cli
js
or
stc
add
icebp
xor
xor
add
clc
aad
push
loope
iret
or
cmp
add
pop
aad
out
or
push
mov
jnp
mov
push
arpl
aaa
adc
sbb
xchg
sbb
out
mov
rorl
aaa
xchg
lock
mov
sbb
push
jae
lods
ja
out
dec
dec
and
les
mov
mov
sbb
inc
call
lds
push
mov
xchg
xchg
lea
sti
or
repnz
loope
mov
sub
imul
out
cld
gs
insb
gs
dec
jg
iret
dec
pushf
cmp
aam
or
xchg
ret
lea
sbb
mov
orb
enter
push
enter
adc
in
push
mov
sbb
push
jge
movsb
aam
mov
insb
mov
dec
mov
sbbl
test
xchg
mov
dec
call
in
lods
inc
jnp
popa
sub
xchg
nop
jmp
add
push
or
jp
out
in
popf
aaa
sub
sbb
or
push
sub
test
cmp
sub
and
sub
imul
insb
and
jmp
data16
push
dec
popf
add
or
mov
add
repz
mov
cmc
and
xor
jnp
or
jb
adc
pop
dec
add
sbb
fmuls
mov
inc
pop
xlat
sti
xchg
xor
dec
push
sub
dec
loop
mov
andl
or
jecxz
imul
xchg
adc
addl
add
sbb
scas
es
ret
mov
fisubs
in
mov
popa
icebp
dec
lock
mov
popf
inc
loopne
arpl
fldcw
or
fwait
push
or
cltd
loop
ret
fdivs
pushl
arpl
push
cmc
into
push
mov
cmp
xchg
aad
cmpsl
pop
cmp
movsb
addr16
jmp
or
and
sahf
out
sub
decl
sub
and
in
push
lret
dec
int
outsl
xor
popa
sub
aaa
imul
inc
sub
pop
push
movsb
jnp
data16
cmp
sub
jno
sub
push
ret
cs
mov
imul
and
gs
mov
cmp
adc
add
std
dec
or
lds
jae
pop
or
push
mov
sbb
xor
in
leave
sub
jo
or
ja
aas
mov
ja
cmp
cmp
cmp
ret
daa
sbb
xor
scas
lods
xchg
adc
sbb
pusha
sbb
dec
push
pop
pop
or
xchg
pop
inc
jp
mov
ret
insb
fildl
shll
sub
cs
mov
cmc
jl
inc
ss
mov
aaa
dec
lret
or
inc
mov
ja
arpl
lea
or
adc
ret
ss
sub
jnp,pt
mov
lcall
sub
push
adc
and
pop
or
inc
cmpsb
sub
and
jle
jnp
cwtl
cltd
test
test
les
andl
imulb
push
pusha
aaa
cltd
dec
dec
xchg
lods
ja
test
daa
adc
sbb
or
cmp
mov
dec
mov
leave
popf
leave
mov
cli
das
dec
fisttps
ss
iret
add
popf
in
mov
das
or
and
xor
add
fwait
nop
pop
dec
loopne
jl
sub
or
xchg
inc
inc
and
arpl
jnp
xchg
or
or
jb
add
xchg
and
rcrb
test
or
imul
adc
popa
or
mov
das
mov
or
fsubrl
imul
cmp
sub
and
lahf
xchg
fisubl
sub
inc
ss
popf
xchg
pop
cmp
aam
cltd
sbb
not
or
es
jecxz
inc
dec
pop
push
mov
or
xor
jns
stos
test
jns
pop
jbe
xor
lods
pop
int3
sub
nop
push
inc
jp
negb
in
movsb
stc
jge
outsw
andb
and
sbb
insb
nop
fnstcw
sub
pop
nop
push
jp
insb
insb
ss
or
cmp
data16
mov
xchg
jnp
mov
add
rorb
movsb
inc
cmpsl
fnstenv
cmp
jp
out
jp
sbb
int
sahf
js
es
add
adc
sbb
xor
mov
and
dec
mov
test
ds
pusha
outsb
aaa
push
or
pop
ffree
xor
shl
inc
ret
push
stc
shlb
mov
inc
sbb
adcb
sub
inc
loope
xor
sub
cmp
xor
and
add
cmp
jbe
outsl
adc
lods
test
int
inc
mov
lret
rclb
add
sbb
jns
and
rorb
and
push
and
adc
dec
outsl
insb
out
jg
cmp
loopne
addr16
incb
adc
xchg
inc
scas
lea
xor
adc
or
and
cmp
inc
sub
outsl
add
popa
mov
cmp
push
sub
add
add
faddl
sub
rcrl
push
sbb
andb
add
out
cs
inc
add
sti
xor
push
out
ret
cltd
int
sub
test
pop
dec
add
sbb
aaa
add
pop
in
add
outsb
add
jb
rclb
jb
add
xor
int3
xchg
in
inc
loopne
sbb
in
jecxz
loope
xor
inc
or
xor
xchg
add
out
movb
mov
xchg
or
pop
out
daa
add
push
in
add
add
cmp
in
sub
pop
push
lods
or
jge
pop
push
stos
pop
adc
imul
cwtl
or
cmp
add
jne
idivl
sub
or
aaa
data16
lret
in
cltd
adc
lock
idivb
push
or
xor
add
or
adc
mov
adc
int
cmp
jns
arpl
cmp
xor
cmp
pop
enter
pop
leave
and
add
js
mov
shrb
add
imul
cli
sub
and
loope
xor
jge
addl
scas
jge
dec
into
and
les
and
sbb
or
add
fcomps
fiadds
jl
add
add
mov
ss
in
adc
sbb
adc
lods
lret
fimull
add
fildll
dec
int3
lret
jle
dec
add
pop
je
mov
xor
pop
pop
add
dec
imul
sub
fistps
and
inc
ds
push
loope
ja
sbb
movsb
outsb
lods
push
insb
push
jae
loop
and
outsb
pop
inc
jg
dec
push
sbb
add
mov
imul
xor
insl
fldl
insl
jae
jae
outsb
pop
outsb
cmpl
lock
je
lcall
xchg
push
jae
jmp
jae
fnstsw
mov
push
add
adc
sub
insb
xor
in
inc
add
imul
jg
into
lock
out
jnp
jnp
jns
icebp
push
out
shll
jp
out
lods
ret
bound
imul
jbe
andl
pop
jl
dec
imul
int
jnp
jns
ja
clc
out
xchg
sub
or
cmp
jl
dec
add
out
lock
push
daa
fdivrs
pop
imul
lret
mov
add
sub
andl
shrb
bound
sti
jle
cli
stc
mov
mov
or
mov
dec
and
cs
outsb
jle
insl
loope
sahf
xor
add
xchg
iret
sub
xchg
or
jne
jb
outsl
sbb
add
sbb
popa
imul
push
push
fiadds
or
icebp
add
repz
jle
add
neg
test
add
add
icebp
cmp
pop
jge
mov
imul
push
lea
push
adc
jle
push
scas
cltd
aaa
imul
jmp
gs
add
fs
add
or
add
sbbl
xchg
xor
push
add
add
clts
add
adc
mov
dec
jb
mov
or
xchg
add
sahf
xchg
jno
inc
cmp
mov
mov
mov
jnp
dec
outsl
add
jge
xchg
imul
xor
mov
popa
ret
add
push
or
jnp
repnz
sbb
adc
outsb
jmp
clc
subl
std
push
dec
imul
mov
lcall
pop
jle
inc
jp
pop
jl
adcb
jne
mov
adc
imul
lea
sub
xorl
fnstenv
hlt
ja
mov
jno
repnz
fwait
mov
sbb
jmp
add
pop
dec
pop
addl
data16
ret
outsl
loop
loopne
ret
fs
popa
out
fists
and
fistps
popa
imul
popl
inc
pop
pop
mov
gs
insl
add
add
dec
js
xor
movsb
sbb
hlt
cmp
or
jp
jb
push
xorb
add
rorl
fnstcw
add
mov
loope
movsb
leave
push
jle
add
add
jae
dec
adc
adcb
addr16
insl
int
jbe
push
out
loopne
inc
popa
std
push
push
cmp
adc
and
mov
cmpsl
mov
ret
and
nop
adc
xchg
adc
add
inc
daa
xchg
add
push
popf
jae
and
daa
shll
dec
adc
or
mov
sub
loopne
adcl
mov
movsl
and
jno
rcrb
into
and
add
sbb
shrb
das
dec
outsl
pop
push
and
push
mov
pushf
mov
out
sti
add
jl
jl
mov
je
mov
mov
and
push
les
add
mov
imul
or
call
push
inc
xchg
pop
add
and
adc
loopne
loop
adc
add
inc
push
fcmove
imul
add
mov
dec
dec
fisttpll
imul
dec
out
or
cmp
sbb
lret
adc
adc
jbe
je
dec
loopne
je
bound
fildl
dec
push
fwait
rclb
data16
mov
and
xchg
fistps
adc
sbb
imul
loopne
mov
loop
inc
in
into
adcb
push
adc
jb
or
rorb
sti
arpl
mov
xor
js
push
inc
mov
push
fs
sub
sub
loope
jo
dec
dec
mov
push
inc
and
dec
push
jbe
in
daa
and
pop
push
or
sub
lods
xchg
mov
lea
ret
mov
mov
dec
arpl
jmp
out
mov
sub
pop
cmp
inc
mov
cmp
add
dec
jbe
and
add
xchg
jnp
pop
cltd
pop
rolb
pop
xor
mov
lahf
pop
or
push
or
je
push
jg
pop
cwtl
pop
sub
mov
iret
inc
adc
aaa
add
dec
nop
pop
clc
cmp
add
push
jno
mov
aad
flds
jae
cmp
add
ja
push
pop
divb
negl
pop
dec
sbb
les
mov
clc
sub
scas
popa
popa
sub
sub
or
cmpsl
pop
push
sub
dec
pop
and
mov
clc
mov
mov
dec
xor
pop
pop
dec
jp
add
adc
je
fists
je
sub
dec
test
je
push
mov
ss
fbstp
mov
dec
pop
inc
sbb
pop
mov
or
inc
pop
push
inc
out
pop
in
test
inc
dec
adc
jae
push
dec
pop
sbb
adc
fcomps
lss
inc
je
push
ret
jnp
mov
inc
movsl
xorl
xchg
pop
out
insb
mov
jge
addl
lock
xlat
insb
inc
jle
outsl
add
pop
or
addr16
push
cmpsl
pop
movsb
push
jg
and
cmp
dec
pop
bound
sub
bound
dec
dec
push
cmp
jnp
dec
mov
sbb
add
xchg
mov
insl
scas
mov
add
js
mov
xor
add
lcall
mov
loope
imul
mov
mulb
pop
inc
push
push
addr16
movsb
mov
jnp
mov
dec
dec
pop
pop
pop
jns
addr16
nop
mov
cld
dec
mov
xor
add
jo
push
and
mov
lods
outsb
mov
stos
cmpsb
pop
cmp
mov
dec
hlt
sub
inc
popf
pop
into
push
call
or
pop
or
divps
inc
ret
xchg
scas
cltd
xchg
sbb
push
pop
inc
dec
push
mov
cmp
adc
pushf
mov
out
jo
iret
fimuls
es
fcmovu
pusha
popa
jns
sbb
mov
dec
lods
mov
insb
scas
cmp
push
rcrb
jbe
bound
dec
jl
mov
in
mov
loopne
mov
jg
pop
mov
insl
out
inc
cmp
pop
inc
out
bswap
push
dec
popa
pop
test
dec
pop
repz
pop
mov
pop
ljmp
imul
jb
insl
push
mov
mov
mov
push
push
divb
cwtl
dec
dec
aad
mov
inc
sarw
xor
xor
jno
mov
push
push
cmp
and
add
pop
jae
das
or
sbb
inc
mov
jge
js
insl
sbb
inc
lea
push
rcll
popa
and
scas
aam
ja,pt
sub
outsb
cmp
cmp
call
mov
or
subb
pop
dec
sbb
testb
cmp
dec
xchg
mov
push
sbb
inc
loopne
cmpsb
call
sub
lcall
lahf
mov
jae
repnz
lea
adc
ja
pop
pop
insl
dec
pop
sbb
or
sub
pusha
rorb
add
dec
pop
add
mov
or
lret
jle
mov
aas
fwait
movsl
sub
shll
mov
xchg
pop
adc
into
add
sbb
test
inc
cmpsl
dec
pop
or
push
mov
mov
andb
or
jns
add
in
xor
xor
mov
ds
paddd
push
push
xor
shll
cmpb
push
pop
and
add
xor
sbb
jge
outsb
mov
jbe
cmp
jle
or
add
shlb
xor
sahf
sub
test
jno
aad
repz
sub
mov
jns
insb
adc
adc
push
pop
sub
add
add
sbb
push
inc
sbb
inc
insl
dec
dec
or
sbb
sbb
push
xchg
sbbb
xchg
cld
xchg
or
aad
pop
popf
dec
test
pushf
add
add
adc
add
add
push
adc
mov
and
xchg
fucomi
jno
xchg
sub
sahf
mov
xorl
stos
add
test
je
dec
arpl
sbb
push
or
or
and
dec
and
cli
xor
inc
jnp
xlat
loop
repz
inc
je
push
add
jecxz
mov
cmp
xchg
xchg
add
or
adc
sub
mov
shrb
pop
roll
mov
fisubl
cmp
sbb
negl
insb
push
sbb
arpl
push
enter
lock
movsl
dec
cwtl
iret
cs
scas
push
pop
fisttpl
add
insb
xchg
mov
xor
insl
push
adc
or
pusha
push
setg
mov
clc
and
push
adc
adc
fiaddl
lret
pop
cwtl
std
insl
in
mov
dec
and
pop
push
add
dec
inc
adc
jbe
dec
jle
push
sbb
icebp
imul
add
sbb
cmp
xchg
inc
dec
ret
lcall
movsl
jmp
outsl
sbb
or
and
daa
pop
je
mov
cltd
push
adc
iret
shll
inc
lahf
ss
scas
pushf
jnp
add
inc
dec
mov
push
xchg
mov
dec
sub
mov
fistpl
stc
inc
push
or
push
and
and
add
mov
pop
mov
stc
dec
test
or
add
pop
dec
aam
adc
inc
xchg
mov
and
in
or
pop
inc
in
sbb
or
pop
dec
sahf
inc
xorb
data16
add
pop
mov
dec
jnp
cli
inc
mov
fcoml
pop
dec
fbld
lcall
mov
jl
mov
sbb
js
push
fbld
and
imul
mov
push
bswap
insl
sbb
pusha
cmpsb
jb
pop
das
jnp
adc
scas
add
cmp
add
xchg
add
inc
xor
mov
fidivrs
fldenv
hlt
movsb
cs
add
pop
mov
daa
mov
jnp
sti
or
mov
add
pusha
and
pop
xchg
add
and
add
pop
daa
lods
test
dec
inc
inc
sub
or
push
enter
fdivs
inc
and
adcl
adc
xchg
or
adcl
and
nop
imul
and
sub
sti
push
sti
and
xchg
add
add
add
das
fldt
or
popf
jle
adc
addr16
fisttpll
adc
adc
adc
int
pop
jb
adc
and
in
lsl
pop
cli
loop
or
add
dec
or
sub
cmp
sbb
out
in
pop
cmp
hlt
ds
push
jbe
xchg
bound
add
insb
dec
or
divb
pop
mov
subl
pop
or
out
xorb
xchg
mov
ja
sbb
dec
or
lods
jno
mov
leave
out
fisttpll
inc
jb
pop
leave
jb
xchg
lret
in
adc
or
rorl
jnp
jns
pop
or
jae
pop
jb
cmp
shll
orl
ljmp
cmp
fstps
adc
push
xchg
xchg
cmp
or
add
push
push
xchg
frstpm(287
gs
pop
movd
in
gs
outsb
sbb
sbb
cld
sbb
add
and
or
xorb
or
xor
mov
in
aaa
dec
cmp
or
cmp
pop
push
ja,pt
push
inc
add
addb
in
push
inc
dec
inc
insb
add
lret
in
mov
dec
inc
push
pop
fildl
frstpm(287
gs
adc
sub
das
jnp
push
sbb
or
in
dec
xor
imul
or
pop
or
push
repnz
push
arpl
pop
or
pusha
push
sub
or
add
outsb
pop
outsl
push
jge
lock
mov
stc
fildl
rsm
addl
pop
adc
pop
pop
out
mov
sub
in
pop
fmuls
jmp
orl
nop
pop
xchg
pop
repnz
inc
cli
xchg
or
xchg
sahf
cltd
cmp
mov
jbe
nop
xchg
aaa
inc
mov
enter
and
or
rclb
daa
jle
lcall
fcompl
jl
lea
sub
adcb
mov
add
outsl
mov
add
inc
adc
incl
insb
jae
jb
outsb
inc
mov
push
jb
je
arpl
adc
add
je
pop
push
gs
outsb
outsw
push
xor
mov
sbb
pop
push
sahf
cmp
inc
sub
sti
mov
fistps
insl
push
imul
addr16
jns
and
adc
add
mov
decl
dec
outsl
fs
dec
popa
outsb
fs
arpl
add
je
dec
in
insl
out
mov
adc
insl
and
dec
mov
pop
mov
push
or
insl
je
out
jae
inc
sbb
push
popa
and
ret
xchg
mov
adc
mov
mov
add
inc
stc
add
subb
inc
loope
xchg
aaa
mov
dec
pop
jbe
inc
jb
imul
fldz
sub
outsl
outsb
push
fldl
inc
inc
push
mov
stos
cmp
cs
popa
insl
pop
adc
jb
push
outsl
push
bound
fs
int
clc
jge
je
je
mov
in
outsb
outsb
dec
push
lods
data16
arpl
insb
pop
out
push
mov
fldenv
push
pop
cld
adc
outsl
jbe
cs
sbb
push
outsl
or
jne
and
dec
jo
popa
dec
push
dec
mov
ret
jo
cs
test
ret
xchg
push
fs
or
je
insl
push
jg
lret
movsl
or
imul
scas
insb
popa
mov
push
lds
or
pop
push
inc
inc
test
fadd
jle
inc
js
fs
bound
in
popa
mov
outsl
jns
imul
ss
inc
jns
cmp
jbe
inc
inc
adc
outsl
add
push
addr16
pop
call
sbb
push
mov
add
lcall
decl
lock
push
lock
add
sub
mov
sbb
push
gs
jns
add
add
fwait
add
xchg
lcall
mov
add
add
or
out
add
aam
lock
add
lock
push
sahf
prefetch
xchg
or
add
xor
lock
cmp
mov
add
lock
adc
mov
and
jecxz
add
or
mov
mov
add
mov
pop
inc
sub
pop
decb
add
sbb
dec
in
add
pop
sub
add
inc
or
add
mov
fwait
xor
adc
or
inc
pop
adc
loopne
lret
pop
das
push
loopne
aaa
or
scas
and
pusha
add
sub
in
int
lahf
inc
dec
inc
inc
cmp
jg
arpl
mov
jge
inc
push
inc
daa
fiadds
sti
repnz
mov
inc
rolb
inc
repnz
or
xor
rorb
jmp
popa
add
push
daa
push
out
inc
jmp
sti
cltd
mov
push
add
push
cmp
pop
imul
outsb
in
sub
jo
add
adc
push
add
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
