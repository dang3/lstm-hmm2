jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
popa
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
mov
cmp
je
jmp
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
xor
divl
test
jne
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
mov
cmp
je
jmp
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
jp
lea
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
inc
mov
cmp
je
jmp
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
sub
mov
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
push
mov
mov
xor
call
mov
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
mov
mov
mov
call
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
push
mov
mov
xor
call
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
lea
mov
push
jmp
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
jp
lea
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
mov
mov
movl
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
out
mov
xchg
mov
out
mov
out
mov
lret
hlt
mov
out
mov
lods
out
mov
xchg
out
mov
mov
add
or
mov
hlt
jge
or
mov
call
mov
in
stos
mov
jge
or
loope
lock
mov
jge
or
rcll
stos
mov
jge
or
in
push
fsubrs
or
call
stos
mov
jge
or
stc
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
xchg
mov
hlt
ss
std
xchg
mov
hlt
ss
jp
or
or
xchg
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
xchg
mov
repz
pmuludq
hlt
jl
or
xor
mov
xchg
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
xchg
mov
mov
pmuludq
hlt
push
cld
xchg
mov
ret
xor
std
xchg
mov
ret
and
cld
xchg
mov
incl
add
pmuludq
hlt
push
std
xchg
mov
ret
xor
cld
xchg
mov
jp
add
ret
xor
std
xchg
mov
jp
add
jmp
jl
add
std
xchg
mov
jp
adc
xchg
mov
ret
xor
cld
xchg
mov
incl
add
jmp
incl
add
pmuludq
hlt
jl
adc
xor
mov
xchg
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jp
lea
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
inc
movl
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
mov
call
mov
cmpl
je
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
cmp
je
mov
subb
mov
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
xorb
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
incl
mov
cmp
jne
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
movb
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
mov
pop
ret
lea
push
mov
add
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
call
call
call
test
jne
mov
jmp
movw
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
call
lea
mov
pop
ret
lea
push
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
push
call
test
jne
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
push
push
push
call
mov
pushl
pushl
call
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
mov
pop
ret
ja
add
ja
add
add
data16
add
add
add
add
outsb
add
add
and
add
add
subl
je
mov
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
mov
mov
lea
call
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
ret
mov
ret
lea
sbb
das
inc
movsl
mov
and
add
nop
cmp
outsb
ja
pop
and
cmp
loope
out
and
in
mov
outsl
movsb
fs
inc
add
lahf
add
jb
mov
adc
xor
gs
add
mov
jo
add
add
mov
roll
mov
add
push
inc
or
dec
pop
aam
out
repnz
or
in
and
pop
push
jnp
add
add
mov
xor
add
add
fiaddl
leave
pop
add
test
xor
iret
sub
add
add
retw
add
add
jae
std
popf
out
negl
cmp
add
add
pop
mov
inc
jg
sbb
add
jbe
add
test
add
mov
cs
jle
mov
mov
aad
repnz
add
fdivrs
cltd
or
leave
nop
add
ja
js
add
aam
arpl
add
enter
add
pop
rolb
testl
add
add
mov
sbb
add
enter
in
add
addb
cmp
add
mov
mov
shrl
mov
add
adc
dec
out
pushf
or
xchg
movb
popl
add
sub
addr16
add
sbb
add
add
in
ja
dec
add
test
add
imul
daa
jge
add
xchg
add
jg
sub
adcl
dec
add
iret
das
add
loop
adc
addr16
jbe
add
repnz
add
add
dec
arpl
add
add
stos
mov
jl
add
scas
add
push
sahf
add
test
mov
xor
add
je
fildl
add
inc
ret
xchg
mov
in
add
jle
add
add
add
leave
cmp
or
dec
lret
cli
add
add
insl
movsb
add
rolb
dec
lea
add
xor
add
inc
cmp
ss
add
inc
xor
bound
add
add
mov
push
insb
test
add
cwtl
add
and
ret
add
sbb
js
adc
add
jnp
mov
add
or
xchg
add
daa
push
mov
adc
fisttpl
cmp
mov
dec
add
push
ficomps
imul
add
idiv
add
add
pop
movb
jns
pushf
add
clc
enter
push
incb
add
mov
add
cmpsl
ds
lret
scas
add
jge
movsl
dec
xchg
insl
lret
int
mov
in
mov
lcall
xchg
add
mov
mov
mov
stc
sub
add
ret
cltd
std
popf
sbb
cmpsl
push
roll
mov
enter
movsb
mov
push
repz
jo
shll
jo
add
add
push
push
movsl
sti
add
mov
jle
int
add
add
xor
int
sbbb
pop
fcmovbe
addr16
fisubl
and
nop
mov
fiadds
test
jmp
push
push
into
divb
nop
mov
loopne
mov
add
xchg
add
sub
pop
iret
jnp
sbb
push
add
add
xor
sub
ds
pop
sbb
mov
inc
add
add
mov
idiv
insb
ja
dec
add
aaa
inc
insl
mov
ja
aam
add
cmpsl
aas
add
add
xchg
or
add
add
int
sub
mov
jo
arpl
and
jno
add
cmp
ficoms
mov
add
xchg
cmpsb
or
pop
outsb
inc
jnp
pop
cltd
adc
int
outsb
mov
jb
push
adc
dec
fstl
dec
clc
xchg
add
sbb
mov
pop
js
sub
dec
mov
xchg
xchg
les
loop
punpckldq
jmp
or
sahf
sub
xchg
in
imul
bound
push
cld
dec
xchg
lahf
ds
mov
mov
fwait
adc
aas
push
sahf
mov
ret
push
dec
lcall
outsl
bound
out
in
jecxz
xchg
xchg
push
shll
jle
lcall
adc
ja
in
jp
ret
sub
inc
pop
int3
mov
daa
sub
loop
xor
jge
mov
adc
out
push
cmpsl
clc
xchg
sbb
xchg
imul
mov
dec
fisubl
or
inc
movsl
xchg
movsl
stos
cmp
cmp
insb
repnz
jnp
shlb
push
dec
in
daa
stos
pusha
sub
sub
ret
pop
pop
inc
xchg
inc
lock
add
push
mov
cmp
push
inc
jle
ficompl
lds
ret
adc
sbb
sbb
imul
stc
push
leave
iret
sub
add
sub
popf
js
leave
dec
jmp
hlt
lret
arpl
in
mov
jo
lret
push
insl
push
movsb
or
mov
int3
mov
sbb
data16
inc
lds
fsubrl
call
sub
lods
fs
cmp
mov
xchg
push
mov
mov
jge
sbb
aaa
pop
lret
clc
sub
jno
lods
jl
mov
in
jnp
jg
mov
mov
dec
push
lock
push
inc
scas
add
jae
test
das
daa
inc
test
push
clc
hlt
loope
and
sub
jl
cmp
jl
sbbl
and
shr
lahf
jge
push
andb
sbb
cmp
xor
bound
jb
or
fisttpl
pop
idivl
iret
push
jns
jp
dec
into
repz
int
adc
pop
frstor
xchg
fsubrl
enter
jge
sbb
leave
pop
sti
push
or
inc
int
repnz
test
adc
or
and
add
loopne
sub
imul
dec
pop
loopne
test
jbe
stc
add
lock
push
cmp
bound
cltd
cli
and
xorl
or
xor
push
lods
jae
dec
nop
xor
fwait
add
lds
mov
imul
ret
repz
xchg
stc
cld
lods
pop
mov
test
and
mov
repnz
stc
mov
cmpsl
jne
sti
push
ds
sub
mov
loopne
int
pop
in
adc
mov
cmc
add
insl
lock
subl
loop
and
out
rcrb
cltd
sub
outsl
pop
sbb
inc
out
cs
sub
outsb
cld
outsl
dec
or
test
mov
dec
xchg
je
test
sub
or
jmp
testb
icebp
xlat
sub
pop
mov
jp
dec
pop
xor
fistl
aad
inc
push
and
inc
testb
aas
xor
insb
mov
dec
mov
xchg
shrl
popa
stos
test
mov
cwtl
mov
sub
testb
xchg
jns
icebp
shll
jne
nop
lret
ficompl
mov
mov
adc
lock
test
das
pop
shrb
sub
das
call
es
xchg
insl
js
jecxz
divl
cmpsl
inc
pop
fldl2e
cs
popa
and
subl
jo
adc
lcall
fsubr
pop
sarl
jno
push
cltd
into
jnp
test
out
aas
mov
jecxz
push
aam
cltd
fnstsw
call
xchg
push
pushf
inc
sbb
mov
sbb
mov
add
add
sub
mov
pop
xor
sbb
mov
or
xchg
test
push
xchg
xchg
dec
test
push
or
fiadds
aad
push
inc
test
add
frstor
bound
adc
inc
in
popf
push
xchg
jecxz
cld
mov
xor
mov
inc
xor
ja
insb
mov
mov
shlb
mov
push
xor
cmp
mov
jno
out
xor
dec
xchg
out
mov
xchg
xor
rolb
shlb
sub
push
movsb
jp
stos
stos
sub
push
mov
add
insl
sarl
repz
in
add
pusha
enter
je
inc
ret
xchg
mov
sti
nop
and
aad
lcall
xchg
adc
push
xchg
xchg
xchg
sbb
fldcw
dec
mov
push
adc
pop
adc
ds
mov
jns
leave
shll
adc
std
mov
pop
sti
or
mov
jle
or
or
int3
push
leave
rcrl
adcl
rolb
aad
add
dec
and
jnp
stos
xor
movsb
test
dec
push
xlat
jle
jbe
jge
jge
rolb
sbb
jae
aaa
jb
cmp
jbe
jno
in
jl
rolb
push
pop
dec
mov
aas
sbb
scas
dec
shlb
test
inc
fadds
cmpsb
shll
adc
hlt
lcall
push
aaa
push
sub
adc
cmpsb
les
iret
mov
and
jnp
cmpb
sbb
push
add
cmpsl
mov
xor
ljmp
ss
lcall
ret
cwtl
jo
test
aad
loop
pop
adc
repnz
lock
mov
jb
mov
inc
xor
enter
fadds
sub
nop
inc
jns
jl
out
lods
dec
test
adc
rcll
mov
sahf
adc
test
mov
jg
inc
jbe
test
and
mov
jp
adc
aam
ss
out
sbb
fcomps
and
xor
in
or
cmpsl
fwait
into
ss
lods
cmc
adc
mov
adc
out
imul
xchg
fwait
add
dec
cwtl
lods
inc
xor
out
add
sub
int3
mov
adc
idiv
push
dec
in
decb
es
clc
add
xchg
out
ficompl
mov
inc
pop
fwait
test
xchg
dec
push
les
repz
cmp
xchg
inc
mov
sbb
sbb
add
pop
es
mov
pushf
ret
or
jmp
mov
sub
xor
dec
nop
dec
xchg
dec
push
into
vprotq
mov
cmpsb
add
ja
lea
xchg
fld
stos
mov
mov
pop
ja
dec
push
jbe
std
sbb
inc
fidivrl
add
stos
repnz
rolb
mov
push
outsl
push
and
push
inc
testb
movsb
std
add
jmp
mov
cwtl
lock
mov
gs
mov
xorl
cmp
jns
sub
in
sub
add
add
decb
dec
repnz
out
cmpsl
inc
out
ljmp
inc
lods
int
fistpll
aaa
cmc
in
push
xchg
xchg
lods
sub
test
cmp
add
xor
rclb
cmp
lahf
inc
adc
or
xchg
push
mov
sbb
xchg
not
sti
aam
pop
into
dec
shrb
adc
push
xchg
and
jmp
mov
movsb
xor
dec
jge
sti
sbb
xor
in
mov
or
inc
repnz
fsts
jmp
and
imul
jecxz
in
mov
dec
push
in
pop
add
clc
or
aas
into
cmp
xchg
sub
dec
lods
xchg
xor
sub
int3
repz
ja
js
jp
mov
mov
imul
dec
test
das
jne
pop
divl
adc
cmp
roll
fildl
push
test
sub
roll
and
mov
inc
mov
push
mov
insb
enter
pop
jle
aam
in
inc
repz
arpl
fists
push
lods
pop
mov
sbb
jae
mov
bound
cmp
fidivrl
cmp
sbb
imul
scas
or
mov
adc
iret
nop
repnz
scas
push
leave
cmp
dec
arpl
lahf
mov
mov
or
cmp
sbb
or
jle
int3
cmp
stos
add
lods
jmp
rcrb
add
and
adc
bound
movsb
syscall
cmp
in
lahf
jbe
stos
loopne
push
mov
aaa
xchg
lahf
cmp
pop
jbe
jno
test
jl
mov
dec
add
push
inc
adc
xor
lcall
push
xchg
mov
test
adc
inc
int
jb
push
mov
xlat
enter
daa
inc
mov
xor
sub
jnp
cmp
xchg
ds
loop
movsl
int
and
pushf
lds
lea
jno
mov
xchg
xor
rclb
fnstsw
test
negb
or
push
daa
jl
fsubl
cli
repnz
inc
and
adc
int
lahf
dec
pop
xchg
mov
push
mov
xor
pop
push
packuswb
int
cmp
sub
mov
pop
sub
in
shrl
sti
mov
xor
mov
mov
les
test
sbb
out
jg
pop
mov
std
adc
cld
adc
jmp
cmp
fdivr
adc
outsl
mov
xor
cmpl
jp
cmp
inc
cmc
xor
xchg
outsl
sbbl
adc
push
adc
mov
cli
xchg
sbb
sub
cmpsb
mov
aad
and
push
sub
jo
mov
jge
xchg
sti
mov
push
jno
imul
and
inc
jb
cmp
into
inc
leave
les
ss
or
or
repnz
pop
lret
xlat
add
lods
cmp
pushf
outsb
pusha
imul
repnz
aad
pop
pop
nop
and
pop
dec
pop
or
insl
sbb
cmp
jecxz
ljmp
icebp
imulb
cmc
sub
sub
mov
lea
dec
push
fcomi
mov
adc
inc
popa
mov
les
outsl
lcall
mov
negb
testb
std
test
xor
mov
cmpsl
ljmp
mov
hlt
lret
mov
out
scas
mov
mov
lock
xchg
shrb
sbb
mov
sub
push
pop
ret
xchg
in
sbb
or
cmpsl
inc
negb
ljmp
aas
lods
cmp
mov
pop
lea
mov
lret
ljmp
xchg
mov
cltd
cmp
push
test
lret
xorl
ficompl
lods
cmp
inc
vmread
out
jns
push
sub
pop
jns
add
jbe
or
insb
addr16
movq
xor
arpl
jb
cmpsb
xor
adc
mov
adc
aad
xor
dec
xchg
loope
imul
inc
jp
xlat
or
out
fwait
lahf
mov
push
xchg
add
adc
xor
bound
fs
les
xlat
push
clc
xchg
sub
std
mov
mov
addr16
pop
sbb
cmp
mov
and
dec
mov
dec
mov
pop
jne
in
mov
push
mov
enter
lret
sbbl
out
or
sub
int3
or
into
stos
xchg
or
and
cmp
pop
jle
test
arpl
and
fbstp
xor
pop
ljmp
jae
leave
loop
jmp
ljmp
jl
push
add
jb
xor
xchg
enter
fldenv
push
push
scas
outsl
mov
push
sahf
cmp
mov
jbe
sub
xchg
sbb
leave
scas
insl
pop
hlt
stos
cmp
inc
jno
mov
push
ljmp
add
mov
pop
fimuls
test
movsb
inc
cld
sarb
in
ds
insb
cmp
adc
movsb
lcall
jbe
dec
in
jge
and
mov
in
cmp
dec
jp
popa
insb
mov
push
and
jae
xstore-rng
cmpsl
pop
jo
sbb
scas
or
jb
imul
cs
fisttpll
inc
pop
test
add
enter
daa
inc
adc
add
loope
shll
cmp
xchg
pushf
ds
hlt
movsl
fisttpll
and
pop
mov
fisubrl
xchg
sbb
das
adc
xlat
xor
adc
fidivl
pop
mov
cmpsl
lcall
sahf
fmull
jl
xchg
pusha
adc
test
xchg
scas
mov
mov
mov
test
divb
inc
int
sbb
sub
enter
es
ffreep
mov
lea
sbb
sub
test
scas
mov
ja
loop
scas
mov
mov
popf
aas
push
adc
divb
fcoms
inc
inc
cli
mov
shrl
mov
mov
into
cld
ja
cmc
mov
jb
outsl
bound
imul
xor
add
push
xor
dec
sbb
out
loopne
sub
or
rclb
call
mov
mov
loopne
imul
test
flds
int
repz
push
sbb
xchg
ror
xlat
mov
inc
sub
je
mov
jmp
out
and
aad
jl
nop
call
stos
dec
test
jb
mov
sbb
loope
pop
jb
repnz
cwtl
lea
dec
call
test
in
orl
inc
fimull
inc
call
sub
aas
push
mull
mov
loopne
xor
testb
cwtl
loop
sbb
sub
xor
not
or
daa
lret
adc
pop
shl
sub
rcl
fdivrl
mov
pop
jmp
and
es
mov
mov
cmpsl
inc
mov
xchg
andl
dec
mov
fbld
adc
arpl
ljmp
cltd
jae
addb
adc
fs
in
cmc
lret
clc
cmpl
je
cltd
data16
test
xor
jge
xor
flds
xchg
mov
mov
pmaxub
dec
or
mov
xor
mov
std
xchg
xchg
fldenv
test
mov
add
pop
mov
or
sub
into
mov
add
cs
call
es
hlt
sbb
in
lds
mov
shl
sbb
cmp
sbb
xlat
ja
mov
add
mov
dec
outsb
pmaxsw
shr
mov
add
out
shll
lret
jmp
xchg
nop
es
pusha
out
add
sub
out
shll
dec
add
dec
fcomps
sahf
pop
pop
jnp
push
data16
jb
in
hlt
icebp
pusha
cltd
mul
mov
pop
and
sbb
jae,pn
pop
dec
push
scas
mov
cli
mov
inc
ja
push
fcoml
outsl
imul
pop
xchg
jp
rcrb
and
aam
adc
out
aad
dec
bnd
loope
hlt
test
arpl
scas
stos
inc
je
xchg
or
mov
or
js
pop
fadds
adc
pop
mov
add
lds
rclb
ffree
mov
cmp
jns
movsb
and
xchg
mov
scas
popa
cmp
and
push
sbb
inc
aaa
adc
sub
xor
jl
clc
mov
push
pop
jp
xor
push
mov
les
add
into
push
test
dec
inc
jmp
xor
and
enter
daa
inc
in
push
outsb
cmp
jno
popf
sub
leave
inc
cmp
mov
lret
sub
xor
mov
pusha
sbb
lret
jg
cltd
xor
dec
jle
add
jo
js
dec
sub
repz
lcall
adc
stc
lock
aam
outsb
or
adc
subl
or
aad
mov
mov
add
mov
xchg
sub
push
or
sub
lock
sbb
pop
add
and
out
cmpsb
sahf
sti
insb
xchg
mov
xchg
out
loop
aad
stc
fstpl
sub
push
ss
sub
cmp
dec
mov
cli
lock
jg
or
sarb
lods
rorl
sbb
inc
into
fbld
inc
xor
push
cmp
sub
imul
xchg
popfw
pop
xchg
lods
cli
ffree
mov
out
push
mov
mov
push
xchg
sbb
adc
inc
gs
inc
loopne
enter
sbb
rcr
cmp
ffree
and
jnp
ja
sbb
into
insl
repz
loop
sbb
nop
xchg
adc
fildl
xorl
scas
test
nop
ficompl
les
pop
cltd
dec
bound
je
insl
or
push
lea
jmp
sub
je
repz
mov
dec
pop
inc
and
inc
outsl
ljmp
lods
push
pushf
mov
sub
rcl
sub
test
dec
std
divl
cwtl
popf
cmp
mov
adc
mov
sbb
into
mov
mov
dec
mov
lock
shll
rcl
cmp
sub
ret
mov
sub
push
dec
repnz
adc
rorb
mov
cmpsl
inc
mov
lcall
sub
lahf
fcmovu
mov
push
ljmp
mov
push
aaa
test
xor
cmp
popa
fcmovu
adc
cmp
mov
and
dec
pop
add
add
pop
iret
jecxz
stos
insb
in
out
cmp
jg
cli
xchg
push
jno
addr16
mov
xor
pop
or
jl
iret
pop
mov
or
push
xchg
jbe
dec
stc
mov
test
loop
xchg
jno
push
jecxz
inc
test
mov
fwait
std
push
dec
push
int
pop
add
dec
ds
je
pushf
bound
loope
in
iret
pop
xchg
pop
sti
or
mov
sub
add
mov
jp
movsb
mov
or
mov
push
outsl
ret
xor
mov
scas
cmpsb
out
mov
out
cmp
cmp
mov
fists
inc
mov
sub
ret
addr16
stos
ja
into
and
jmp
or
jnp
int3
fistpll
das
lret
in
popa
or
fcomip
out
nop
ret
leave
pop
pop
or
inc
daa
in
or
test
pop
popf
shll
push
cmpb
xchg
jbe
sti
sbb
rorl
dec
cmp
scas
xor
rcr
adc
xchg
iret
xor
fcomi
cmp
ret
clc
jbe
inc
test
scas
inc
ja
cli
or
test
mov
outsb
outsb
aas
add
cld
sub
jmp
adcb
jp
outsl
mov
pop
and
in
mov
pop
push
adc
pop
jbe
ljmp
sti
pop
add
sarb
lods
jno
inc
pop
jl
pop
cwtl
dec
dec
mov
or
jo
insl
mov
push
cmp
jae
imul
and
enter
daa
inc
mov
add
mov
fs
scas
in
ja
inc
ds
shld
jae
and
negl
push
std
sbb
pop
add
push
mov
inc
or
pop
sub
mov
push
lret
es
lcall
int3
fsubl
and
adc
pop
mov
sbb
mov
adc
sbb
mov
push
and
xchg
push
sbb
adc
sub
in
sub
roll
xlat
add
lret
shl
xchg
mov
mov
jae
sahf
movsl
push
test
js
les
sbb
xchg
dec
test
add
inc
imul
fmuls
ja
mull
loop
xor
fsubrs
or
ret
popa
cmc
cs
xor
outsl
and
imul
into
data16
mov
out
rcr
sub
jp
mov
mov
xor
fisubrl
push
loopne
cmp
addb
inc
stos
jecxz
fnstenv
pop
les
inc
repz
arpl
xchg
lcall
and
mov
and
mov
xor
aad
jae
nop
mov
outsb
dec
in
lret
inc
dec
fldenv
je
jns
jecxz
dec
ja
clc
jb
cmpsb
shr
data16
cmpsl
sahf
and
jns
pop
dec
hlt
xor
fildl
sbb
inc
jge
and
dec
mov
idivb
notb
add
adc
sbb
mov
outsb
mov
hlt
xchg
add
lret
add
jmp
jmp
das
mov
int3
lods
sub
jns
ret
inc
jecxz
mov
or
dec
fidivrs
jl
aas
cmp
popa
xchg
mov
cmpl
or
mov
pop
sub
xor
rcrb
in
jl
push
mov
xor
clc
testl
sbb
or
push
or
pop
jp
inc
stos
pop
pop
jecxz
lahf
dec
cwtl
xchg
inc
mov
setl
pop
test
xlat
lea
mov
sbb
cmc
test
mov
xchg
popf
and
jae
inc
aas
hlt
pop
or
sub
sub
clc
push
jo
inc
add
fs
call
outsb
je
sbb
jns
jo
stos
in
cs
xchg
outsb
call
dec
mov
out
jae
add
sti
jp
or
mov
xor
mov
sar
dec
xor
in
jne
shlb
jo
out
mov
stos
jmp
sub
mov
out
dec
loopne
push
xchg
inc
or
mov
fldenv
jp
pop
insb
je
xchg
jnp
dec
mov
in
xor
pusha
iret
fadd
fisttps
push
dec
ret
lods
pop
popl
inc
xor
into
jae
jle
push
xor
lods
popf
and
sub
push
rorl
xchg
int
sbb
sahf
xor
jae
movsb
adc
ljmp
mov
leave
adc
outsb
hlt
mov
sahf
arpl
iret
inc
inc
jp
and
and
outsl
inc
addr16
xchg
or
loop
inc
shll
jmp
cld
pop
fidivrs
lock
rorb
jbe
pop
fdivrl
xor
push
bound
jbe
call
lcall
mov
push
aaa
xchg
jp
cmp
jg
jno
jo
jl
mov
dec
mov
mov
xor
push
xor
scas
cmpsl
jb
push
loop
pushf
test
ds
out
inc
or
cmpsb
fnstsw
out
mov
daa
aas
sbb
push
popa
mov
lahf
imul
pop
int
push
jecxz
movsl
repnz
mov
aaa
pop
int3
sbb
pushf
sbb
lret
add
xchg
clc
xor
into
cltd
add
xchg
pop
dec
xchg
push
js
icebp
jbe
jno
mov
push
cmp
fmull
mov
push
mov
adc
cmp
xchg
lret
mov
cmpsb
mov
push
and
outsl
dec
push
sbb
or
sub
mov
dec
lret
and
mov
mov
sbb
sahf
inc
rcr
test
xor
xor
pop
jg
loop
loop
mov
add
adc
jmp
cs
jb
pusha
into
fsqrt
push
fistpll
mov
jmp
or
sub
into
movsl
xlat
repnz
cmc
adc
xor
inc
xchg
idiv
imul
pop
shll
lods
enter
cmp
out
push
xor
movsb
cmp
in
sub
ljmp
aam
gs
adc
pushf
mov
xor
mov
pushf
arpl
aaa
mov
repz
ret
and
mov
pusha
ret
and
movsl
inc
mov
jns
fistpl
jp
cs
lea
aad
add
nop
nop
arpl
inc
or
dec
push
out
add
jecxz
mov
mov
loope
imul
pop
dec
add
dec
fistpll
fldt
add
inc
cwtl
add
mulb
cltd
add
ja
or
jnp
push
rcrb
std
inc
ret
adc
sub
lret
push
cld
ja
push
lret
je
xchg
mov
sub
das
xchg
sti
xchg
dec
xchg
sub
xchg
push
ret
sarb
icebp
insl
loop
test
cmpsl
ds
mov
popa
stos
sbb
lods
in
push
mov
out
and
jecxz
mov
inc
mov
add
cld
insb
cltd
sbb
sti
test
je
mov
sbb
frstor
jae
xor
cmp
mov
adc
icebp
lds
cmp
add
mov
bound
sti
adc
lret
or
nop
xor
out
inc
mov
sbb
mov
les
and
popa
xchg
add
mov
inc
aad
or
out
fwait
pop
sub
add
jg
aas
pushl
imulb
daa
popl
xchg
mov
bound
mov
outsb
jns
jo
ljmp
out
jge
xor
dec
pop
pop
mov
mov
inc
mov
outsb
push
ficoml
movsb
adc
divb
adcl
sub
mov
mov
or
xchg
fisubs
insb
fbld
fistpll
xchg
pop
lods
pusha
push
xor
cs
jne
pop
rolb
sub
cwtl
fstl
mul
inc
popf
dec
dec
and
add
mov
xchg
and
sbb
sbb
imul
movsb
scas
sti
sbb
adc
loope
iret
repnz
or
mov
inc
hlt
xlat
imul
jge
ss
lahf
mov
fimuls
push
sbb
add
jmp
int3
aam
sbb
cli
leave
push
and
shl
shlb
clc
and
andb
bound
jbe
pop
cwtl
jge
je
sbb
in
push
cmp
pop
add
jno
lds
or
jns
push
mov
xor
popa
push
enter
movsl
push
mov
jg
add
push
or
popl
out
cmpsb
in
imul
enter
daa
ds
sub
loope
mov
sub
negb
js,pt
mulb
xor
adc
in
loopne
sbb
cmc
xor
stc
push
xlat
lds
stc
sbb
and
pop
mov
jo
mov
mov
repnz
fdivr
mov
xchg
stos
cmp
adc
in
sub
mov
or
mov
pop
sub
ss
push
push
sbb
int
ja
sub
dec
pop
cmpsb
ss
shll
stos
mov
cwtl
push
test
dec
adc
or
adc
push
mov
idivb
stc
add
pop
adc
lret
jecxz
call
adc
negl
mov
cli
mov
jp
cmp
add
push
fisttps
xor
js
outsl
dec
adc
push
mov
add
sub
data16
lods
scas
movsb
mov
shrb
mov
xchg
mov
jnp
and
push
sbb
cmpsb
pop
mov
aas
adc
loope
imul
push
jmp
sbb
jg
lret
xlat
lahf
mov
pop
pop
stos
mov
pushf
lds
jmp
xchg
lods
repz
aad
stc
pop
nop
imul
mov
mov
dec
and
jecxz
cmp
push
stos
hlt
mov
call
movsl
mov
jmp
cmpsl
scas
mov
lret
fcmovnu
ret
sub
sbb
inc
mov
xchg
mov
stos
mov
or
add
pop
or
cwtl
jge
std
in
fsubp
cwtl
into
sbb
mov
out
test
icebp
mov
test
lret
jecxz
sub
mov
mov
das
jbe
adc
mov
aam
loop
ret
pop
loopne
cmpsl
mov
insl
leave
lods
aaa
dec
aam
das
cmpsl
cmp
push
lcall
insb
sub
or
cmpsb
and
jle
xchg
cmp
dec
icebp
jmp
mov
push
adc
mov
sbb
insl
mov
xchg
iret
data16
je
add
in
adc
cmp
ja
iret
inc
mov
jmp
test
add
or
mov
sub
dec
cs
test
push
loopne
in
decl
scas
incb
fldt
mov
adc
mov
addl
and
bound
push
jns
pop
mov
xchg
or
mov
mov
sarb
push
adc
xchg
cmc
jp
insb
fnstenv
dec
xchg
scas
mov
pop
stos
jne
arpl
mov
das
push
xchg
mov
pop
jmp
shll
and
sub
addr16
sub
mov
cwtl
addr16
inc
aaa
stos
rorb
insb
dec
adc
jnp
popf
inc
jle
pop
xchg
push
add
pusha
add
sub
push
pop
std
mov
int3
jae
negb
popf
jae
sarl
aas
mov
fidivl
lds
sbb
cli
loopne
adc
loop
push
add
sbb
fldln2
insl
iret
push
fldcw
leave
add
popa
hlt
and
arpl
in
imul
popf
roll
cmp
inc
cmpl
mov
mov
mov
inc
sbb
rol
xchg
mov
inc
stc
sbb
movsb
push
ds
push
add
cli
jbe
sarl
add
sub
outsb
aaa
jo
mov
cmc
jl
jno
dec
fwait
incl
push
xchg
mov
xchg
jo
cld
sub
mov
test
aam
testb
stc
cmpsb
push
les
shrl
pop
push
and
loope
enter
push
or
test
jmp
movsl
add
lahf
jne
jmp
decl
cmpsb
sbb
lcall
xchg
push
sbbb
inc
js
ljmp
ds
pop
push
xor
out
fsubl
mov
adc
out
xor
vprotd
or
mov
cld
das
and
loopne
and
sub
popa
leave
imull
fnstenv
lret
pop
mov
mov
sbb
pop
inc
test
incl
mov
jae
stc
mov
push
adc
imul
jp
cmp
cmp
into
cli
mov
repnz
cmp
stc
push
or
push
lret
fistpl
push
cmp
outsl
mov
or
imul
cmp
inc
lods
xchg
cmp
fsub
sbb
inc
sub
cmp
clc
jle
iret
sub
incb
je
and
mul
rolb
xchg
pop
ffree
push
inc
in
out
fstps
lahf
fadd
dec
lods
scas
repz
jecxz
fwait
andb
pop
cmp
lret
stos
pop
or
or
pushf
jo
pusha
jmp
push
lret
adc
aad
push
test
add
jb
cmp
pop
je
xchg
dec
jecxz
push
faddp
add
pop
pop
and
xlat
and
sbb
ds
daa
dec
mov
push
fisttpl
mov
inc
mov
rolb
sarl
sub
jl
push
subl
cmpsl
xor
std
xchg
fisttps
mov
adc
icebp
jns
in
cld
int
jecxz
push
sub
mov
jl
imul
ja
icebp
mov
sub
mov
inc
mov
insl
mov
sbb
cmp
cmp
sbb
gs
fnstcw
lock
mov
mov
mov
test
sbb
mov
test
push
add
pop
and
test
inc
fbstp
in
loopne
fnsave
xchg
push
out
sbb
dec
jae
pop
sub
pop
jnp
mov
enter
push
cmp
push
fldl
or
push
pop
xor
cmp
arpl
aad
mov
and
dec
xchg
addr16
push
mov
xchg
dec
sbb
add
and
mov
insl
aas
add
mov
aaa
push
jbe
loope
jns
int3
jns
sbb
xchg
pop
dec
and
pop
rorl
cmp
sub
mov
add
js
rorb
fstl
addr16
repz
sub
out
sub
in
xchg
cli
jmp
mov
jecxz
ljmp
or
dec
dec
stos
inc
pushf
and
push
mov
jle
lods
stos
in
std
shlb
jp
insb
lahf
sub
insl
lods
jle
xor
xchg
inc
push
mov
dec
cwtl
nop
push
jge
push
popf
lcall
push
jle
arpl
fs
insb
xchg
sarb
sbb
scas
pop
imul
scas
shll
push
dec
movsl
stos
adc
insb
repnz
jg
jns
cmp
insl
jp
arpl
movsl
inc
xorl
push
in
mov
cmp
jno
stos
jo
pop
movsl
inc
insb
fisubs
notl
rcr
std
mov
fcoms
cmp
jmp
fsubrl
push
dec
popa
xor
xchg
cmp
addr16
sbb
sbbb
ret
daa
insl
jno
fucomi
jl
and
or
push
jbe
dec
xor
pop
call
inc
aaa
or
test
lahf
mov
inc
mov
cmpsb
jmp
jmp
enter
daa
cmp
xchg
push
adc
loope
incl
lock
cmp
or
cltd
movsl
pop
je
and
sbbb
jae
sbb
imul
dec
jae
pop
les
js
inc
pushf
pop
cs
sbb
push
mov
adc
pop
adc
lret
mov
xor
mov
fnstenv
and
xchg
push
and
stos
int
sbb
pop
movsb
movsl
aad
xchg
xchg
inc
dec
inc
out
mov
inc
rcrb
stos
bound
inc
jno
loop
popf
test
jo
pushf
fildll
adc
lock
cmc
xor
negl
push
divb
cmp
lock
mov
dec
lret
xchg
cmc
dec
pop
dec
xor
jb
outsl
pushf
push
dec
adc
and
cmp
adc
repnz
add
xchg
mov
lods
jge
jne
sub
out
loopne
sub
mov
mov
push
in
sti
jle
popa
pushw
hlt
sub
repnz
cld
mov
lods
sub
pop
cmp
xchg
pop
daa
sbb
cmc
and
pop
mov
addr16
pushf
sbb
stos
jmp
ljmp
imul
nop
and
clc
aas
dec
mov
and
mov
mov
rol
call
aas
call
mov
or
xchg
scas
dec
mov
iret
xlat
pop
jae
cmp
sub
inc
jmp
jbe
mov
mov
add
add
push
xor
inc
in
mov
push
sub
push
ja
cld
clc
or
rcrl
addr16
mov
jnp
lock
das
xor
push
rol
sbb
sub
aam
pushf
stos
ret
jge
pop
lods
loop
insl
xchg
ffreep
dec
lret
cmpsl
cmp
dec
ljmp
popf
lods
and
push
jge
dec
data16
mov
add
movsb
lahf
lret
pop
sub
cmp
mov
into
xor
and
fst
pusha
scas
clc
jecxz
and
lret
scas
shll
ret
inc
stos
pop
pop
out
sub
lret
xor
sbb
xor
aas
or
inc
inc
jge
push
xor
xchg
mov
test
aad
xchg
jae
dec
adc
or
pop
loop
call
out
testl
sub
bound
mov
dec
loope
in
lock
stos
inc
adc
add
loop
shrl
ja
gs
mov
cmp
mov
push
dec
sarb
jne
test
sti
cmp
or
pop
fcompl
mov
xchg
push
dec
das
addl
out
push
outsb
sub
test
bound
sub
jnp
cld
lea
sub
das
pusha
cmp
fadd
xor
pop
imul
jae
jle
push
inc
and
push
mov
mov
ret
sub
sbb
cmp
imul
mov
xchg
popa
adc
push
push
repnz
inc
hlt
mov
inc
int3
inc
xchg
hlt
or
adc
pop
inc
arpl
sbb
sub
inc
int3
xchg
pop
mov
faddp
ss
lds
cmpsb
shl
in
xchg
push
push
and
ja
sbb
movsb
addr16
fcoms
out
and
inc
or
int3
scas
sbb
xchg
les
test
jno
pushf
movsb
jl
movsl
enter
pushw
pop
xchg
add
jo
adc
xchg
push
loopne,pn
test
push
fiadds
sti
add
mov
inc
enter
daa
cmp
cli
loope
pop
mov
cmp
iret
scas
loope,pt
or
add
out
lahf
mov
into
andb
inc
add
aad
xor
adc
adc
push
pop
jmp
jle
xorl
jo
movsb
dec
bound
mov
fdivr
cld
sbb
cmpps
lahf
and
movsl
xchg
orl
pop
dec
mov
shll
and
push
daa
mov
das
sbb
sub
incl
and
pop
lret
xlat
shl
sbb
ds
sahf
int
inc
test
lods
sbbb
jg
test
loop
cli
sbb
daa
jmp
and
rcrb
ss
mov
pop
adc
fincstp
pop
insl
pop
cli
and
std
xor
bound
mov
xchg
pop
into
xor
das
xor
mov
outsl
jnp
pusha
adc
xlat
imul
xor
scas
mov
lods
fs
or
out
sub
loop
popa
pop
push
in
aad
pop
sti
sub
or
xor
pop
sbb
jns
xchg
enter
pop
repz
and
sbb
xor
mov
sbb
adc
push
mov
inc
fsubrl
fisubrs
aad
xor
dec
mov
call
or
or
ret
movb
adc
call
and
jmp
es
subl
fldt
inc
pop
push
xor
inc
cltd
lret
sub
ljmp
xor
out
mov
lods
xor
popa
aaa
inc
std
loope
xchg
insb
lods
nop
mov
daa
dec
mov
lret
xor
mov
mov
jecxz
pop
push
push
rclb
cmpsb
pop
aam
testl
insl
jle
movsb
dec
lds
cmpsl
cmp
jbe
lods
lods
and
idiv
lods
nop
lret
mov
sahf
sbb
mov
ret
pop
xchg
add
mov
test
fdivs
jb
jmp
clc
push
mov
jo
jle
push
rorl
testl
stos
push
pop
adc
xchg
movsb
dec
in
xchg
cmc
push
emms
add
xor
fistl
xor
or
mov
sub
clc
test
dec
xchg
sbb
iret
jmp
or
and
cs
lahf
data16
jmp
jnp
cs
stc
pushf
mov
lcall
stc
xchg
push
cmp
pop
mov
ja
adc
push
mov
adc
mov
in
cmp
dec
mov
sub
mov
arpl
ljmp
jmp
and
mov
lock
sub
movsb
pop
repz
and
ficomps
insb
mov
jnp
push
push
jle
mov
lret
pusha
jmp
sbb
xchg
jne
pop
mov
dec
inc
jae
cmpsl
mov
popf
call
sub
inc
xchg
fcmove
lahf
stc
xchg
sbbb
sbb
jecxz
loop
shrl
out
adc
dec
outsb
xchg
dec
repnz
leave
addr16
jecxz
add
mov
inc
mov
mov
mov
or
call
jmp
andb
fisubs
das
pop
rclb
std
mov
stos
sarb
xor
push
in
rol
andl
sbb
movsb
aaa
dec
lea
sub
jl
std
xor
push
cmp
divl
int
shrb
add
cmp
mov
cmpsb
icebp
push
jle
jno
sub
ret
daa
cmp
sbb
adc
data16
jae
cmp
ja
adc
or
lahf
rclb
loop
cmp
jnp
nop
icebp
mov
xor
dec
xor
rcr
lret
jle
js
mov
pop
lods
jno
lcall
aaa
fsubl
in
inc
outsb
rcr
adc
sbbb
cmpsb
cmp
in
arpl
cli
mov
sub
sub
xor
mov
mov
loopne
pop
sbb
sbb
std
cli
sahf
jo
popl
js
dec
jg
in
loop
mov
fs
jae
adc
shl
hlt
cmp
cmp
imul
negl
pop
aad
push
pop
jo
jmp
and
or
ret
xchg
cmc
fsubs
test
ret
and
imul
add
adc
data16
scas
mov
pushf
pop
out
add
sub
mov
mov
inc
hlt
jnp
faddl
mov
gs
or
mov
scas
imul
test
mov
push
in
push
xchg
cmp
jl
cmp
xor
fwait
es
pop
and
pop
adc
mov
jmp
pop
int
cmp
dec
nop
xlat
xor
dec
push
aaa
dec
jb
or
mov
cmpsl
clc
jecxz
inc
or
nop
adc
dec
mov
xor
add
lds
and
lcall
inc
and
roll
push
bound
push
insb
jg
movl
lea
mov
rcll
cmp
cmp
mov
sarb
incb
cld
dec
mov
pop
mov
cli
pop
lock
comiss
or
sub
sbb
sbb
insl
es
mov
dec
shlb
cmp
dec
popa
push
pop
xchg
and
xchg
lret
cltd
and
mov
loop
insl
add
jne
sub
inc
mov
inc
jl
xor
dec
ss
pop
insl
jb
lret
and
xor
fwait
shll
sbbb
stos
cmc
sub
out
icebp
xor
outsb
int3
dec
enter
or
or
and
addl
mov
test
fsubl
loope
cmc
dec
notb
lock
pop
cwtl
fwait
inc
mov
inc
rcrl
add
push
imul
mov
adc
mov
dec
and
xchg
shr
mov
dec
fnstenv
jnp
xchg
jp
mov
jae
stc
jp
mov
movsl
dec
xchg
gs
ss
out
leave
gs
xchg
call
jmp
in
jle
sbbl
out
or
sub
lahf
mov
inc
stos
pushf
into
ret
mov
cmpsb
jnp
insb
adc
or
cmp
jno
rcr
or
sbbb
daa
inc
je
loopne
mov
ds
popf
prefetch
mov
cmp
xchg
fidivrl
inc
xchg
xlat
jle
sbb
enter
adc
mov
lahf
cli
adc
ss
int
dec
repnz
xchg
hlt
dec
or
arpl
roll
cmp
push
out
mov
mov
or
sbb
test
xor
fimuls
xchg
inc
lds
adc
sub
hlt
mov
xchg
mov
inc
movsb
jge
add
jbe
pop
lea
and
fbstp
or
fbstp
mov
in
dec
dec
push
shll
push
flds
sub
scas
loope
sbb
jae
test
add
jne
je
or
pop
sub
mov
sbb
push
sbb
sub
and
mov
movsl
sbb
pop
and
inc
lods
lahf
icebp
push
testb
stos
addb
gs
lret
jb
xchg
inc
mov
pop
js
lret
jmp
dec
lcall
or
push
testb
and
ja
sbb
rcrb
jge
add
ja
mov
mov
adc
push
sub
notb
sub
lcall
outsl
pop
jg
adc
mov
inc
call
lds
gs
mov
xchg
ljmp
aad
jnp
xchg
mov
sub
jo
cmp
aaa
or
fsubs
shlb
fcmovbe
add
mov
out
jbe
iret
into
notl
cmc
lahf
mov
cmp
cli
popa
adc
xchg
sbb
shlb
push
inc
hlt
add
jecxz
lods
xor
leave
mov
pop
out
push
and
push
subl
in
stos
lcall
iret
fistl
ds
loopne
jge
pop
pop
scas
sub
fxtract
push
cmpsb
les
leave
repz
mov
cmpsl
int
sbb
cmpsb
pop
int
fimull
xlat
cmp
mov
jmp
ds
cs
aas
cmp
inc
mov
dec
jge
xchg
bound
dec
sbb
jecxz
cs
sub
imull
call
and
dec
mov
xchg
sbbl
pop
mov
inc
cmpsl
ss
inc
cmp
push
movsl
in
or
jecxz
into
and
mov
shl
jl
mul
mov
cli
cwtl
jne
mov
push
xchg
mov
aad
dec
cld
jns
push
lret
push
jbe
mov
in
mov
push
cmpsl
lock
dec
das
shll
sub
mov
in
xchg
sub
es
insl
dec
fadd
dec
mov
call
icebp
popa
xor
sub
cmp
and
test
adc
add
cmp
push
xchg
xchg
test
mov
in
push
clc
lahf
jb
dec
pushf
dec
clc
xchg
int
xchg
or
jg
in
lods
sarl
cmp
stos
in
outsb
out
push
pop
pop
xchg
xor
inc
push
dec
mov
sysexit
xchg
push
xor
mov
andb
scas
jno
xor
test
mov
mov
inc
pusha
adc
or
mov
jg
in
out
add
and
mov
insb
gs
bound
sub
in
hlt
scas
xchg
xchg
aad
mov
filds
stc
mov
shll
sbb
mov
cmp
mov
lret
dec
imul
out
test
inc
xchg
shl
jmp
mov
out
pop
and
cmpsb
xor
or
xchg
icebp
stos
pop
lds
sbb
fstpt
dec
sarl
mov
pusha
or
cmc
fucomip
sbb
mov
ret
mov
aaa
jae
loope
mov
popf
adc
ret
lods
dec
push
jp
mov
xchg
cs
dec
sbb
into
adc
xlat
jl
dec
adc
adc
push
inc
iret
sub
cmp
leave
push
les
arpl
jo
fimuls
stos
lea
inc
loopne
mov
add
and
push
and
pop
popa
add
fisubrs
scas
cmp
inc
mov
adc
and
jns
aas
loope
movsb
or
mov
leave
jbe
test
sbb
out
aaa
lret
cmp
mov
jl
sub
dec
sbb
add
jo
shlb
push
cmpsl
mov
test
lret
dec
leave
inc
bnd
cmpsb
divl
enter
daa
cmp
xor
inc
inc
sti
sub
stos
mov
ds
push
adc
rorl
sti
sbbb
sbb
or
add
ja
xor
sbb
pop
pusha
sbb
js
jne
pop
sub
std
lcall
cmpsb
fdivr
mov
sub
mov
adc
ss
fs
inc
mov
notb
roll
ja
mov
xor
dec
fs
addb
mov
lret
scas
shrl
sub
cwtl
sahf
mov
mov
subb
and
dec
leave
stc
dec
cmc
popf
fs
dec
adc
push
repz
loope
pop
negl
jnp
xor
mov
je
ficoml
dec
cmc
inc
pop
xor
pop
outsl
sbb
push
imul
jg
ss
push
data16
into
mov
test
leave
sub
fsubrp
push
adc
mov
gs
and
cwtl
pop
js
pop
inc
inc
xor
fldcw
pop
enter
mov
xchg
push
cmpsb
sbb
loope
sub
pop
mov
repz
clc
cmpsb
pushf
mov
xor
lcall
aad
in
in
nop
lea
dec
fmul
lods
jb
in
int3
dec
xchg
mov
gs
pop
pop
adc
sub
xor
lahf
subb
fldl
xor
ja
dec
test
cmpsl
pop
call
clc
inc
add
inc
push
fidivrl
inc
jno
mov
lcall
shll
stc
dec
imulb
add
mov
mov
jno
mov
lods
lcall
jge
add
mov
or
xor
das
mov
mov
adc
and
mov
add
es
repz
mov
add
add
xchg
ret
lods
rcrl
mov
cmpsl
in
arpl
and
cltd
cltd
jbe
test
jb
test
lea
mov
fnsave
xor
iret
ror
dec
rcrb
sarl
rcrb
stos
rcll
add
and
ret
sete
xor
or
or
push
mov
xor
dec
cwtl
adc
test
xor
dec
faddl
inc
div
in
cmpsl
inc
fstpl
mov
add
cmp
jns
or
bound
pushf
lods
in
repnz
sbb
mov
mov
cmp
jp
jae
mov
andb
dec
in
mov
clc
stos
dec
dec
outsb
arpl
js
mov
dec
addr16
xchg
push
jmp
addl
cmpl
out
xchg
xchg
sub
xchg
cmp
addr16
cs
stos
andb
and
fstps
insb
int3
add
xchg
jmp
jle
mov
push
pusha
cmpsl
jge
filds
push
mov
pop
inc
sbb
inc
mov
cmc
jae
mov
xchg
popf
pop
std
add
mov
jo
xchg
test
call
imul
rcll
gs
fcom
iret
mov
repnz
pop
sub
int3
lahf
iret
hlt
in
mov
ja
sub
jne
or
cld
pmaxub
mov
mov
inc
and
pop
nop
pop
jno
push
mov
lock
mov
mov
dec
cmp
scas
mov
xchg
inc
push
jbe
and
jge
push
into
sbb
lock
cmp
push
jg
cwtl
pop
or
dec
xor
mov
addr16
and
jp
js
ret
and
xchg
lret
or
mov
es
enter
daa
aaa
xchg
or
dec
xchg
push
das
test
cmp
movsb
popf
movsl
sub
and
jle
das
loopne
xorb
sbb
push
cli
xor
sbb
lahf
pop
xchg
fcoms
imul
je
cmpsl
aas
mov
lret
add
push
adc
adc
pop
mov
test
mov
dec
mov
xchg
fisubl
fwait
pop
icebp
push
xor
vpmacssww
inc
out
push
mov
xor
sbb
testl
pop
scas
pop
loop
js
stc
add
shlb
adc
push
adcl
mov
cmp
pushf
sbb
inc
cli
out
sbb
xor
and
cmp
cmc
sub
ret
pop
outsl
notl
adc
dec
fistl
pop
push
add
inc
stos
mov
lods
add
cld
out
mov
sub
in
mov
arpl
sti
jmp
jle
gs
enter
mov
pop
xchg
mov
add
bound
test
mov
sub
icebp
cli
cmp
add
pop
cmp
ja
pushf
jb
arpl
es
subl
jo
aad
sahf
xor
cmp
jb
lods
sbb
je
lods
inc
jecxz
sarb
adc
call
push
jno
mov
push
loope
enter
aaa
xchg
in
daa
aam
pop
mov
xor
inc
jo
popa
aas
jecxz
adc
mov
fnstenv
roll
fcoml
std
jge
push
jmp
sbb
push
mov
cld
iret
idiv
lret
in
mov
mov
push
adc
lock
xor
sub
dec
aam
stos
xor
es
or
repnz
dec
mov
sti
cmpsl
ss
ljmp
pop
lods
cmp
adc
mov
scas
push
ret
pop
aas
test
jnp
pop
cltd
ror
jecxz
jb
xchg
mov
bnd
jle
cmp
clc
or
xchg
mov
not
data16
pop
jge
push
stos
ret
out
sbb
les
enter
xor
xor
inc
or
dec
push
xor
imul
xor
mov
ljmp
adc
dec
iret
es
inc
mov
fwait
or
movsl
or
push
sub
hlt
add
push
repz
bound
mov
in
inc
jo
xor
push
pop
mov
jp
xchg
cld
lock
imul
jmp
mov
test
mov
das
sbb
jne
scas
xchg
mov
rcrb
js
pop
jmp
dec
inc
insb
orl
out
mov
cmp
mov
stos
cmc
popa
pop
and
sub
jnp
push
lods
jle
call
inc
sub
fbld
mov
pop
jle
movb
jae
idivl
cmovnp
test
jne
cmp
push
clc
in
push
ficoml
ret
into
sbb
push
adc
scas
adc
popa
adc
jo
iret
ljmp
leave
inc
pop
inc
hlt
das
mov
arpl
notl
or
ja
into
inc
fidivrs
rorl
repz
xchg
push
xchg
int3
sub
les
jnp
fdivp
ror
clc
push
lahf
sarb
mov
dec
lds
movsb
push
outsl
add
jbe
xor
fstps
dec
adc
cmc
je
jno
jl
jl
cmpsb
ja
movsb
sbb
push
enter
arpl
scas
jle
push
dec
push
sbb
push
popa
lahf
je
adc
std
loope
in
or
or
daa
ss
sub
je
loope
test
xor
cmp
in
nop
es
and
arpl
lahf
dec
sub
sbb
add
xchg
xor
loopne
fbld
sbb
pop
test
lcall
int
fcoml
mov
mov
inc
dec
adc
in
pop
mov
out
mov
mov
mov
mov
shrl
stos
out
push
bound
sub
pop
push
sahf
push
push
lret
mov
fldenv
ss
mov
cmp
in
cmp
cli
lret
loop
ficoml
and
adc
xchg
add
popa
cmp
push
mov
cmp
and
xor
add
mov
inc
into
mov
scas
stc
xor
inc
scas
outsl
or
imul
addl
ds
lods
out
push
mov
jo
sub
das
push
in
in
test
cmp
je
por
pop
mov
roll
in
fstps
jns
repz
xchg
lock
push
inc
add
xchg
xlat
ficomps
cmp
adc
cld
lret
jmp
jbe
lds
aad
mov
nop
inc
inc
aad
lcall
dec
jg
sub
jecxz
mov
push
test
lea
int3
call
popf
jecxz
mov
jg
sbbl
int3
fistl
mov
push
pop
inc
cmp
mov
mov
scas
aas
addb
mov
add
mov
xlat
std
and
js
cmpsb
cmp
mov
xor
icebp
pop
test
lret
pop
ja
mov
test
add
shlb
jl
aam
test
fisubs
mov
aad
dec
lods
and
cmpsl
xor
stos
lcall
mul
mov
and
test
push
test
pop
xor
add
ret
push
test
dec
mov
pop
call
ffree
clc
inc
scas
xchg
pop
bound
std
jbe
sarl
and
mov
inc
out
jge
adcb
out
pop
rsqrtps
fwait
xor
add
xor
rcr
mov
aaa
sbb
dec
test
fcmovb
xchg
lods
jecxz
ret
inc
and
xlat
xor
into
add
add
mov
dec
ret
fdivrs
jns
rcll
in
jmp
xchg
test
stos
mov
mov
fcompl
pushf
pop
ja
inc
and
push
xor
movsl
lahf
xchg
mov
lahf
scas
dec
adc
mov
out
inc
and
inc
jmp
sbb
jae
fwait
out
out
repnz
mov
shlb
repnz
pusha
mov
mov
jp
jle
cmp
push
fmul
pusha
fucomp
mov
inc
cs
repnz
pop
mov
jns
mov
je
push
shl
or
je
push
push
aaa
loop
fimull
dec
xchg
xor
sbb
xlat
pop
imul
iret
push
cmp
mov
inc
iret
dec
sbb
repnz
sti
leave
mov
or
xchg
pusha
mov
in
add
repnz
pop
outsb
rorl
clc
mov
sub
push
pop
out
pop
mov
xchg
mov
mov
mov
fisttpll
hlt
movsb
test
fxch
jbe
mov
xchg
add
cltd
aaa
pop
ss
cmp
dec
lcall
and
dec
adc
sbb
stos
add
xor
xchg
aas
insl
scas
pop
jecxz
push
and
repnz
sub
fiadds
dec
movsl
cmpsb
andb
in
hlt
jnp
enter
daa
xor
push
mov
test
sub
xor
ds
and
movsb
ljmp
xchg
fmul
sbb
push
pushf
xor
outsl
jnp
mov
lods
sub
jmp
pop
out
lcallw
jmp
fsubs
sub
inc
aaa
adc
mov
popl
test
xchg
mov
mov
mov
int
imulb
mov
mov
sbb
out
ljmp
pop
push
sbb
xor
scas
test
lcall
and
stc
jno
fsubs
adc
aad
inc
daa
push
fcoms
mov
mov
xor
movsl
cmp
push
movsl
or
push
into
orl
cmc
mov
dec
outsl
mov
or
xor
insb
sbb
jg
pop
add
imul
into
mov
adc
adc
pop
sub
imul
push
jl
sti
inc
sbb
pop
lock
pop
cmp
aaa
test
aad
xlat
inc
jl
add
les
or
negb
xchg
int3
xlat
xlat
or
pop
adc
pushf
enter
add
sbb
sub
aad
sub
adc
enter
mov
je
test
add
sbb
lea
pop
das
sbb
mov
fcomps
xor
loopne
fildl
xchg
inc
ret
mov
jae
and
dec
mov
mov
daa
inc
rcrl
push
xor
out
std
lret
hlt
push
cwtl
popa
clc
loop
out
mov
sarl
xor
xchg
and
fmull
lea
out
dec
add
mov
sub
cld
stc
sub
inc
push
push
insl
call
add
xor
mov
pop
popa
push
popa
xchg
js
lods
adc
cmpl
xrelease
icebp
xchg
push
jge
icebp
add
pop
xchg
test
bswap
push
add
leave
fucomp
mov
in
xchg
push
xor
adc
push
rol
das
stos
mov
jge
xchg
dec
frstpm(287
push
mov
mov
mov
mov
or
pusha
and
nop
jge
sarb
xchg
sub
test
or
pop
add
dec
mov
fadds
popa
mov
push
dec
stos
push
jno
outsb
add
lea
adc
call
scas
mov
in
out
xchg
shll
push
mov
lock
outsl
ja
or
jp
jne
mov
das
push
mov
xchg
lahf
jne
dec
xorb
filds
xchg
push
adc
jmp
in
inc
subl
push
out
into
sbb
xchg
addr16
sbb
fcomi
dec
and
jnp
or
push
cli
in
cmc
stos
pusha
js
add
rclb
inc
pop
in
call
inc
stos
cmpl
xchg
in
icebp
popf
rclb
movsb
mov
jbe
loopne
cld
xchg
jno
mov
sbb
sub
jne
fldcw
pop
push
orb
adc
dec
repnz
in
xor
hlt
hlt
arpl
ret
or
insl
xchg
lods
inc
fsubl
dec
or
mov
add
push
int3
add
cs
sbb
movsb
int3
lds
scas
shlb
popa
and
lret
lock
xor
xchg
inc
and
jge
sbb
aaa
push
pop
cmp
lods
jno
shrb
jl
jb
dec
subb
xor
out
loope
scas
cmp
out
push
repz
testl
add
mov
enter
daa
xor
sub
fcomip
loope
enter
or
ds
push
jp
aas
xor
and
xchg
subb
jo
push
call
out
add
pop
cld
cld
mov
out
pop
es
sbb
inc
insb
ja
test
sub
outsb
adc
pusha
shlb
dec
push
mov
testl
mov
dec
fldenv
enter
cmp
or
add
push
lret
fld
pop
xor
mov
dec
jb
dec
mov
sahf
inc
movsl
mov
sbb
mov
cmp
jge
sub
dec
adc
test
ss
or
int
hlt
notl
sub
repz
jns
out
xor
into
lcallw
movsl
xor
jge
adc
aad
imul
push
add
jp
inc
inc
adc
add
adc
fisubrs
xchg
out
mov
ret
sti
imulb
jle
jle
popa
or
inc
cwtl
dec
pop
hlt
ljmp
pop
loopne
les
icebp
mov
jbe
add
data16
cmp
jmp
xlat
adc
fs
pushf
jae
xchg
jmp
sbb
aad
or
nop
stc
ret
mov
jb
and
insl
dec
stc
je
movsl
mov
sbb
rorb
cmp
fwait
push
add
enter
inc
xor
mov
ret
cmc
ret
inc
dec
sbb
aas
shrb
mov
jp
xlat
shrl
fdecstp
sbb
jb
jno
sbb
jmp
mov
or
loope
push
stos
mov
mov
mov
flds
pushf
jp
das
sub
mov
pop
jp
sub
mov
fsubl
ljmp
inc
gs
mov
mov
ljmp
cmp
jge
lahf
mov
xlat
shlb
mov
lods
add
or
add
push
movl
popf
xchg
inc
mov
sbb
xchg
shrl
rcrl
stos
lea
xchg
xchg
push
mov
jns
movups
or
imul
sahf
mov
stos
xchg
fidivl
imul
testl
iret
repz
mov
fwait
pusha
add
adc
into
add
test
sub
xchg
adc
add
dec
in
xor
xchg
and
or
cmp
fistpl
cmc
push
jp
mov
mov
pop
dec
mov
cmc
push
xor
fstpl
mov
cwtl
adc
xchg
icebp
mov
fistl
xor
test
iret
or
sub
and
fcmovnu
jnp
sbb
jle
xchg
in
jbe
pusha
adc
call
pop
and
ds
mov
mov
push
pop
imul
repnz
push
mov
clc
fisubrl
dec
xchg
sbb
push
in
imul
scas
cmp
xor
adc
dec
pop
aad
bnd
mov
test
pop
hlt
adc
ja
mov
pop
inc
sahf
xor
outsl
push
pop
arpl
push
mov
pop
or
pop
dec
outsb
cs
addl
or
ror
mov
add
jl
mov
repnz
jge
xchg
pop
sbb
xchg
aaa
test
mov
hlt
mov
jl
xchg
bound
pop
ss
jno
out
mov
cwtl
loop
sbb
push
push
in
test
ret
inc
mov
or
enter
daa
xor
sub
sub
mov
cmp
jns
stc
and
fidivl
add
sbb
jge
add
push
lret
xor
sbb
mov
pop
je
pop
gs
xchg
icebp
jne
push
ret
xchg
mov
sarb
insb
aas
sub
ret
mov
inc
cmp
dec
mov
int
repz
sub
lahf
out
and
scas
rcrl
cmp
js
or
in
cld
test
jmp
jg
cmc
mov
inc
aaa
stc
stc
fildll
cltd
fs
adc
sub
cmp
mov
lcall
shl
adc
cmp
into
dec
push
int3
cmc
dec
inc
mov
outsl
jae
mov
fstpt
imul
popf
into
data16
push
push
lods
pushf
add
mov
in
out
fsubrs
or
les
sub
jl
mov
cmp
loopne
or
pop
adc
jnp
mov
sbb
les
sbb
sbb
or
rcrb
mov
fsubr
pushf
push
cmp
loop
xchg
out
inc
mov
nop
aam
jg
mov
adc
mov
dec
in
mov
jecxz
dec
loopne
pop
lock
lea
push
call
sbb
mov
adc
fninit
insb
xchg
pop
cs
adc
xlat
iret
inc
fdivl
aas
pop
inc
mov
sub
outsl
std
sarl
roll
xlat
das
pushf
mov
mov
mov
fcomip
cmp
jnp
stos
lret
test
aas
mov
mov
sbb
ret
das
or
sti
shrb
mov
sub
inc
push
aam
popf
pop
ret
test
or
insl
mov
mov
popf
jge
cmpsl
xor
das
ljmp
pop
lods
call
lock
and
daa
cmc
test
mov
popa
fistps
sahf
in
add
mov
xchg
fnsave
pop
clc
clc
divb
jo
test
sbb
int
rol
rol
sub
es
cmpsb
dec
add
imul
movq
push
or
or
jmp
sahf
roll
fwait
add
mov
pop
aas
xor
mov
xchg
or
gs
push
mov
fildl
ret
imul
xchg
test
push
in
xlat
ret
and
mov
data16
mov
or
dec
icebp
mov
add
xlat
pushf
dec
mov
jb
mov
pop
movsb
out
loop
push
xchg
les
jmp
jp
adc
dec
xor
out
loope
sub
jl
ret
negb
rcll
movsl
lahf
dec
insb
jecxz
fstpt
idivb
fwait
imul
pop
mov
scas
fbld
mov
pop
pop
jbe
inc
roll
push
sbb
popf
and
jne
and
fisttpll
sbb
push
xchg
imul
scas
lahf
out
inc
push
push
xchg
pop
adc
jae
data16
outsl
repnz
dec
mov
hlt
pop
jge
arpl
push
outsb
inc
mov
or
push
fisubl
or
loop
int3
fmuls
aad
jg
repz
fstpt
xchg
pop
bound
mov
movsb
dec
push
call
in
jbe
add
sbb
jl
cmp
or
cmp
dec
pusha
dec
test
push
sbb
jg
data16
les
cltd
pop
jno
xchg
lods
scas
push
lea
scas
inc
dec
mov
in
test
fdivs
push
sbb
sub
das
idivb
or
ds
inc
movsl
dec
dec
frstor
jne
sbb
sarb
sbb
mov
cwtl
xor
push
jmp
push
dec
inc
adc
xchg
xchg
int
movsb
or
lcall
fcomp
je
sub
mov
repz
xchg
loope
sahf
adc
cmp
out
popf
mov
inc
and
inc
jecxz
inc
xchg
int
adc
pop
lcall
shll
pop
sbb
shlb
test
add
adcb
jg
push
shl
fisubrl
stc
xchg
pop
ja
dec
test
adc
jnp
cmp
inc
jge
notl
jge
cli
in
mov
xor
pop
imul
addl
cmp
outsl
push
add
scas
pop
insb
imul
jp
nop
pushf
cmp
into
fsubrl
stc
sbb
and
sub
mov
in
cwtl
push
add
push
push
xor
outsl
shl
loopne
xchg
xor
pop
call
fnstenv
in
fnstsw
xchg
cld
subb
inc
out
xlat
xchg
enter
pop
ret
or
pushf
leave
mov
in
push
sbb
aad
icebp
jge
scas
xchg
adc
ljmp
pop
push
je
lcall
and
stos
enter
and
jecxz
mov
fildl
into
mov
fistl
std
int3
pop
rcrl
inc
idivl
aas
loopne
mov
in
ds
nop
push
idivb
es
xchg
test
sarl
mov
add
cmpsb
lcall
inc
xchg
ja
loop
xchg
lock
nopl
ljmp
sub
jl
aam
in
pop
ret
adc
test
lret
pop
xchg
insl
popf
dec
sub
sbb
cmpsl
xor
add
mov
andl
ja
push
popf
adc
lods
jnp
and
ret
pop
fimull
in
jecxz
pop
test
mov
out
fstpl
fprem
xor
insb
sbb
push
dec
rcrl
jge
pop
aam
xchg
stos
insl
and
xchg
and
push
inc
push
out
into
andl
ficomps
xor
test
inc
or
test
sbb
xchg
and
dec
mov
sti
inc
adcl
or
pop
jbe
add
fidivrs
shlb
sarl
in
out
adc
cli
xchg
rol
mov
in
mov
and
xchg
jp
lret
mov
mov
rcrl
dec
sahf
int
jne
pushf
push
mov
aaa
and
shll
xchg
pop
mov
xchg
inc
insl
insl
adc
inc
out
sbb
divl
or
inc
addr16
stos
out
xor
cmp
mov
shlb
leave
insl
jle
movsb
shl
movsb
outsl
pusha
dec
shl
rorl
pop
xchg
cmpsl
push
inc
int3
or
xor
popf
inc
cs
pusha
adc
ficoml
mov
sbb
adc
xchg
dec
scas
add
mov
sbb
popf
dec
repnz
fcmove
xchg
cmp
hlt
cmpsb
dec
cmpsb
arpl
jo
inc
movsb
dec
rorl
push
ret
inc
pop
push
jmp
int3
ret
addb
and
or
fwait
push
adc
add
mov
sub
into
movsb
aad
iret
push
mov
pop
jbe
push
jnp
xchg
sub
sbb
sbb
in
hlt
mov
jno
loopne
jl
pop
xchg
dec
iret
add
push
aaa
or
xor
add
scas
out
push
insb
loop
test
pop
mov
inc
fildl
and
nop
mov
enter
daa
xor
icebp
lds
loope
shrb
mov
mov
std
sbb
push
outsb
jp
adc
insl
lahf
jmp
sbb
sbb
xchg
add
outsb
pop
xor
sub
scas
mov
pop
jno
push
js
dec
ds
jecxz
or
inc
push
shrb
gs
outsb
cmp
push
adc
xor
addr16
std
imull
mov
lahf
mov
shlb
clts
inc
mov
xor
sbb
sbb
lret
rol
int3
sahf
dec
mov
sub
test
mov
adc
into
in
stc
dec
sub
call
in
clc
cmp
in
not
adc
xor
test
pop
jo
or
jne
xlat
xchg
mov
mov
mov
adc
pop
bound
jle
add
loopne
data16
shrl
hlt
in
out
xchg
jmp
out
xchg
in
inc
test
sti
add
cmp
inc
daa
gs
loopne
xor
pop
push
aas
push
inc
enter
lods
jge
rorl
fdivp
cltd
xor
xchg
mov
movsb
stc
cmp
dec
xlat
rorb
adc
jmp
adc
popa
or
int
cs
test
js
fwait
nop
mov
dec
jb
insl
jo
shr
sub
jecxz
pop
xchg
and
dec
cltd
call
sbb
pop
mov
lahf
dec
mov
push
pop
pop
je
into
inc
filds
in
aas
popf
cmpl
fwait
inc
adc
sbb
leave
rcrl
fcomip
ljmp
std
addr16
lahf
cwtl
dec
mov
mov
pushf
add
lea
cld
rcl
mov
xchg
jo
sub
mov
push
lock
mull
rcl
mov
sub
push
cmpsl
aam
mov
es
shrb
lahf
xor
inc
jnp
xor
sub
sub
mov
in
hlt
cld
lods
mov
lds
sarb
cwtl
and
pop
movsb
xchg
pop
stc
outsl
ss
lahf
and
sbb
sbb
mov
jnp
push
adc
daa
fldl
cmp
sbb
shll
lea
stos
pop
adc
out
insb
jecxz
xchg
push
push
push
and
xchg
cvtps2pi
xor
jecxz
or
inc
divb
int
mov
inc
out
dec
imul
xchg
mov
addl
or
cmp
loope
std
je
add
stc
pop
leave
jmp
bound
or
push
xchg
cmpxchg
xchg
int3
mov
fcoml
ja
dec
dec
jp
cli
add
jl
pop
mov
outsl
dec
xorl
loopne
in
cmp
mov
xchg
jmp
adc
adc
push
les
or
pop
addr16
loop
stos
cmpsl
test
and
mov
insb
mov
push
jle
mov
loope
in
mov
ret
push
pop
enter
xlat
fnstsw
jae
out
push
mov
push
imul
arpl
fcmove
hlt
inc
xchg
out
mov
imul
dec
scas
gs
pushf
movsb
mov
clc
mov
mov
leave
or
insl
cltd
arpl
push
addb
lahf
or
pop
mov
scas
or
add
int3
scas
dec
jle
flds
lds
mov
rcrb
dec
mov
mov
ds
movsb
pusha
inc
in
push
add
in
cmp
sbb
jmp
das
jno
sub
sahf
dec
jg,pt
push
sbb
nop
xor
pop
xor
mov
lcall
and
cmpsb
cmovns
nop
ss
xor
push
and
fisubrl
movsl
or
addr16
bound
shll
stos
mov
mov
mov
jecxz
cmp
movsl
jno
out
cwtl
and
pop
and
mov
push
pushf
pop
mov
push
push
jle
push
mov
outsb
sahf
orb
push
stos
lods
pop
jecxz
mov
cmp
mov
xor
and
lret
int
mull
sub
jb
pop
cwtl
pop
lret
jle
arpl
xor
xchg
out
sahf
into
iret
stos
test
movsl
addb
xchg
loop
push
pop
arpl
jle
xchg
roll
fdivrs
sub
cli
push
adc
cmpb
cld
or
jb
repnz
sub
xor
jecxz
outsl
adc
sbb
in
dec
adc
loopne
add
and
pop
mov
inc
and
nop
in
popa
loope
mov
outsb
mov
mov
gs
repnz
loop
pop
jo
test
movsb
pop
faddl
inc
xchg
cmpb
sbb
mov
fldcw
adc
out
cmp
scas
xchg
movsl
cs
mov
out
gs
dec
aam
jb
cwtl
push
dec
dec
sbb
outsl
xchg
sub
lea
test
xchg
adc
jmp
and
pop
pop
adc
inc
data16
jbe
sub
mov
push
loope
and
iret
into
shrl
outsl
mov
push
hlt
push
cwtl
or
mov
xlat
push
mov
mov
sub
cmc
and
aaa
mov
call
adc
test
push
shrb
aam
aam
xchg
ret
xor
insl
imul
dec
mov
imul
js
popa
add
pop
lods
sub
mov
mov
fistpll
pop
sbb
add
or
aad
mov
jg
push
rorl
mov
xchg
inc
and
sbb
ja
rol
pop
xor
sub
stos
dec
leave
push
iret
sahf
jmp
push
cld
jl
jl
sbb
or
jp
lret
mov
dec
aaa
mov
fildll
push
scas
add
je
and
in
xor
jmp
fwait
sbb
sbb
mov
push
pop
add
push
incl
call
int3
jns
rcrl
sub
lea
fmul
fstpl
cwtl
and
stos
and
fldl
mov
scas
sub
fs
xlat
jne
push
js
aas
movsl
out
jg
xor
sbb
xor
in
out
jecxz
sub
insl
dec
mov
sahf
xlat
stos
sbb
sub
xlat
jnp
mov
in
bound
jg
out
call
push
pop
push
addb
jae
sti
lret
out
lcall
pop
insl
push
mov
mov
jnp
notl
jne
inc
imul
mov
push
jecxz
aas
adc
push
xorl
mov
mov
hlt
cmp
pop
arpl
adc
stos
xor
sbb
inc
push
jge
or
dec
dec
int3
cltd
ljmp
push
sub
mov
dec
test
scas
sub
movsb
jmp
push
push
push
push
sub
fs
out
jge
push
push
sbb
cmp
andl
jno
sahf
add
xchg
outsl
xor
mov
jbe
aam
pop
jo
cmp
xchg
sbbb
xchg
jnp
or
lret
xor
in
pop
sub
lret
or
xlat
cmp
loope
cwtl
xor
lahf
and
push
test
test
movsl
fisubs
and
nop
lahf
daa
test
dec
sbb
sub
shll
in
mov
pop
mov
jne
pop
popa
xchg
lcall
mov
sub
mov
adc
jmp
rolb
xor
xchg
mov
cld
movsl
mov
mov
jecxz
dec
sub
int
ror
xchg
push
pop
pop
pop
cmp
rol
cli
cltd
orl
cmp
test
jnp
jg
jl
loop
xor
dec
fs
test
ss
sarl
jae
notl
push
cli
xchg
xor
shl
cmp
fnstsw
into
aad
mov
xor
std
outsl
out
xor
daa
sub
imul
xchg
jb
cmp
aad
cmp
ljmp
sub
loope
mov
fldenv
leave
sub
lock
dec
cmpsl
les
mov
inc
out
fdiv
fstps
jo
out
jl
aaa
pusha
out
inc
rcr
sub
in
xlat
push
daa
loopne
aad
jmp
jmp
rorl
jmp
sbb
jp,pn
push
aad
cmp
nop
inc
loope
dec
xor
xor
divl
shl
je
jle
jecxz
add
std
out
sti
call
push
jne
mov
fwait
loope
vphaddudq
cmp
hlt
inc
dec
pop
push
aas
fcmovne
mulb
or
shlb
in
sub
stc
dec
jmp
std
mov
std
cwtl
ret
mov
mov
xchg
mov
repz
dec
cld
daa
mov
icebp
mov
sub
lock
das
xchg
arpl
jnp
push
sub
cmc
jge
rcl
dec
ret
shrb
insl
push
stc
enter
bound
adc
popa
sbb
pop
lods
xchg
lret
cltd
mov
push
cwtl
stos
and
xchg
mov
lar
scas
push
cltd
mov
lret
mov
enter
mov
fst
fwait
imul
pop
aad
orb
sbb
pop
cwtl
rcrl
xchg
aad
sahf
stos
cmp
out
xor
xchg
clc
jl
push
xlat
das
outsb
por
xor
xchg
mov
in
mov
dec
cld
mov
aaa
fwait
subb
in
dec
addr16
sti
inc
inc
pextrw
or
fs
dec
xchg
add
das
and
jmp
andps
cmp
xchg
lods
dec
dec
mov
inc
dec
mov
push
jae
ja
mov
jp
je
mov
pop
sub
test
jne
jne
mov
cmp
pop
mov
xchg
adc
jmp
cmpsb
adc
out
ja
sub
push
ficomps
stos
lea
subb
jnp
push
sub
aas
js
in
xlat
sub
sbb
fistps
add
pop
ss
inc
in
addl
push
mov
daa
mov
popf
mov
lods
push
push
lock
fisubrl
fsubl
xchg
xchg
push
test
and
xchg
sub
adc
call
sbb
sti
sub
hlt
xchg
lret
inc
lods
push
lret
test
dec
inc
scas
inc
dec
test
test
mov
dec
mov
int3
test
pop
aaa
std
jno
or
lods
lds
sub
rclb
mov
loop
out
cmp
mov
push
pushl
or
fstpl
and
xchg
aaa
inc
addr16
out
jno
xor
dec
sbb
push
push
loopne
fdivs
adc
jbe
mov
in
enter
rcll
outsl
inc
mov
lcall
ds
enter
daa
sub
loope
xor
cmp
pop
sbb
movsl
imul
lahf
inc
adc
sbbb
sbb
incl
call
pop
divl
pop
out
pop
js
out
pop
mov
sub
push
dec
test
fsubrl
test
outsb
fs
adc
les
cmp
xchg
das
mov
hlt
mov
sahf
stc
and
imul
stos
xor
push
in
push
xchg
outsb
lret
mov
lods
mov
inc
sbb
sti
sahf
adc
jns
xor
ret
cmpb
loop
aaa
pop
stc
jb
ret
and
aad
cmp
cmp
das
cwtl
sub
paddsb
mov
insl
adc
pop
push
into
mov
push
add
enter
into
cmp
cli
aad
imul
mov
mov
dec
inc
lods
pop
dec
orb
adc
inc
xchg
dec
mov
inc
imul
xchg
loopne
jg
pop
scas
mov
inc
add
fsts
add
repnz
xchg
or
cmp
lret
stc
xchg
pop
mov
test
inc
cmp
pushf
jne
sbb
lea
cs
rcl
outsb
rclb
mov
pop
dec
aaa
pop
mov
sub
fistl
lea
call
xchg
pop
adc
pop
cwtl
popf
dec
jp
pushf
fcmovne
in
pop
pop
pop
adc
jno
inc
arpl
aas
jp
insb
mov
rolb
mov
jo
test
jns
pop
leave
ret
pop
inc
mov
fstps
icebp
adc
sub
push
imul
sub
shr
xchg
mov
jge
dec
leave
ljmp
outsl
inc
ret
dec
or
xlat
stc
push
insl
cmp
xor
test
sub
pop
or
int3
imul
dec
mov
in
pop
push
mov
push
sub
subl
mov
adc
push
sub
mov
clc
sbb
cmpb
insb
aad
jne
ss
sbbb
sub
out
xchg
icebp
push
xchg
aas
dec
sbb
mov
cmc
cmovp
xor
sub
xor
in
xchg
mov
dec
xor
inc
test
xchg
push
xchg
fsubrs
inc
fstl
aad
sbb
push
out
iret
add
dec
les
inc
mov
int3
jns
inc
daa
in
lock
xchg
cld
add
mov
or
out
in
jp
mov
into
mov
fidivrl
jne
xor
mov
fs
cmp
aas
inc
jmp
jno
sub
adc
out
jle
sub
arpl
lea
add
insb
cli
jns
jnp
pop
jle
push
xor
mov
into
fistpll
pop
mov
inc
clc
push
fidivl
repz
ljmp
mov
das
adc
xchg
jmp
enter
packssdw
mov
jno
inc
adc
pop
scas
repnz
leave
jb
xor
int3
and
rcrl
sbb
inc
inc
push
mov
flds
jecxz
and
outsl
movsb
mov
dec
fisubrs
nop
and
mov
jne
mov
sbb
shll
fwait
scas
jbe
xor
sbb
hlt
jmp
cmp
pop
shlb
jmp
jl
sarl
ret
dec
out
xor
xorb
sub
push
mov
cmp
push
test
fildl
repz
sub
in
sbbl
cmp
cmp
push
lret
ds
popf
pop
movsl
jo
in
and
lahf
cmpl
mov
scas
add
push
test
xorb
mov
pop
dec
js
in
push
fildll
lcall
hlt
fcoml
mov
and
jge
jle
adc
lahf
loope
jns
pop
mov
lret
and
test
sbb
xor
popf
push
push
popf
mov
sar
in
sub
and
lret
xor
sub
sbbl
mov
push
test
mov
loop,pn
insb
add
sub
cmp
mov
ss
add
ljmp
cli
in
call
xchg
lods
test
out
leave
into
fwait
cmp
cmc
repz
and
outsl
lods
adc
adc
mov
imul
std
repnz
jge
je
loopne
sub
or
aam
mov
sbb
in
scas
ljmp
mov
fsts
gs
mov
add
out
inc
adc
ljmp
cld
xlat
repz
outsl
xchg
lret
movsl
sbb
push
sub
into
dec
ret
and
xchg
and
and
fsubrs
inc
xchg
das
aad
pop
xor
icebp
sbb
push
ds
scas
insl
cld
je
mov
ja
xor
lret
pop
mov
adc
xor
subl
dec
lcall
mov
jle
fdivrs
sbb
mov
inc
and
rcll
xor
add
xlat
cwtl
cmp
jbe
pop
push
jl
jmp
icebp
test
inc
roll
mov
cmp
lock
das
inc
xlat
xchg
shlb
aaa
lret
sub
and
push
ret
fisubrs
bound
jecxz
dec
jg
daa
cmpsl
sub
mov
popa
dec
mov
lods
push
in
dec
mov
sbb
leave
repnz
pop
jne
or
cmp
test
loopne
mov
es
push
sbb
frstor
mov
clc
pop
push
add
ror
inc
jb
sub
pop
out
clc
mov
jge
push
shll
xor
xor
dec
cmpsl
mov
push
loop
dec
add
addr16
push
push
das
dec
dec
mov
push
or
fadd
fwait
test
neg
add
gs
jmp
mov
bound
jnp
jns
clc
out
leave
mov
xchg
dec
std
mov
mov
enter
cs
sarb
inc
mov
fisubrs
fs
dec
or
dec
cmpsb
mov
mov
mov
jmp
cmp
and
sbb
int
jp
push
or
xor
mov
in
stos
jae
and
cwtl
loopne
gs
cmp
pop
data16
jle
push
push
in
in
in
pusha
push
dec
rcr
pop
loope
ret
rcrl
cmp
inc
add
jae
aad
push
lods
xchg
loop
or
sarb
lods
jle
xchg
xchg
mov
sbb
stos
add
cmpsb
sti
scas
icebp
sbb
push
mov
stos
mov
mov
mov
leave
jmp
aas
jge
sbb
leave
inc
mov
jb
jg
inc
push
aam
leave
or
push
jp
jecxz
pop
mov
lods
ficoms
lds
pop
mov
mov
mov
or
stos
movsb
mov
es
aas
sub
int3
mov
sbb
hlt
cwtl
cmp
mov
jl
les
dec
cli
adc
push
cmpsb
dec
xor
mov
push
push
mov
jl
dec
sti
rolb
and
sbb
lock
adc
enter
daa
sub
and
stos
ret
xchg
add
cmp
sbb
out
cmpsl
pop
movsl
ja
cmp
pop
xor
lahf
test
jmp
sbb
mov
xor
call
jge
inc
pop
xor
sbb
xchg
lcall
add
fsubrl
adc
repnz
jp
add
sub
add
rcrb
and
addr16
push
add
int
jne
sub
inc
pop
xchg
pop
ror
xchg
lahf
sarl
cmp
rcl
sahf
pop
cmp
test
std
xor
dec
jg
lret
add
dec
sahf
stc
loopne
pop
fs
push
adc
jae
pop
ss
hlt
jmp
fsubs
mov
ja
stos
adc
das
or
ljmp
mov
mov
mov
sbb
mov
test
adc
scas
roll
ljmp
lods
in
or
jl
or
jmp
in
sbb
sti
outsb
jbe
xchg
and
gs
xchg
icebp
loopne
insl
icebp
pop
in
sbb
inc
daa
or
pop
les
int3
and
movsb
lahf
xor
sbb
movsl
mov
xlat
or
xor
pushf
lret
je
jmp
dec
push
mov
add
nop
shl
mov
push
cwtl
mov
dec
and
push
push
jecxz
push
cs
xor
popf
lea
push
fucomi
add
fcmovb
xchg
mov
cmp
push
cmp
fldt
ficomps
jb
inc
addb
cltd
fs
mov
cs
sbb
out
mov
std
stos
cs
cwtl
hlt
cmpsl
and
mov
cld
test
int
mov
into
mov
aaa
outsl
lock
pop
das
and
xchg
shl
fsubs
sub
xor
insl
xchg
sahf
jle
jp
push
cmpsl
sub
in
pusha
mov
scas
mov
jg
lret
test
mov
xchg
adc
add
cltd
sub
add
mov
cmp
neg
inc
xchg
xchg
clc
xchg
dec
mov
sbb
xor
pop
lods
aad
pop
inc
push
out
pop
adc
xchg
int
gs
push
cmp
xlat
add
or
xchg
xor
sti
and
push
add
insb
and
jg
rorl
dec
inc
pop
jmp
or
push
fcomps
push
sub
loope
add
cli
add
cmpsb
push
bound
dec
iret
in
jns
xchg
lcall
mov
cmpl
in
inc
jb
cmp
mov
jne
push
repz
insl
sarl
dec
lock
jne
shl
mov
repz
xchg
mov
jmp
pop
test
xorl
addr16
jmp
jo
pop
mov
mov
out
add
inc
push
insb
rorb
jnp
aaa
pop
jle
fistps
jmp
sbb
jnp
cmp
mov
pop
fildl
inc
push
repz
jae
sti
mov
popf
xor
mov
lods
enter
std
pop
xchg
cltd
aas
jo
and
jecxz
subb
test
adc
pop
sbb
call
repnz
aad
push
addl
jp
push
push
xlat
insb
or
xchg
add
int
int3
inc
scas
pop
les
fdivp
sarb
cmpsb
dec
cmc
mov
fwait
mov
mov
movsb
pop
lret
mov
popa
jbe
fnstenv
push
fsubrs
aaa
jge
mov
jno
leave
xchg
jl
mov
push
mov
adc
sbb
adc
adcl
fsubrl
sbb
xor
mov
pop
daa
sub
int3
loope
sub
sub
int
cmp
sbb
adc
pop
and
insl
jl
push
sbb
leave
push
addb
or
and
stos
pop
pop
fldcw
js
mov
pop
pop
fs
lcall
aas
fsubrl
push
and
xchg
mov
rclb
pop
aaa
mov
mov
cmc
mov
je
push
push
filds
sub
insl
pop
adc
push
lret
jae
push
inc
mov
and
and
lock
sahf
std
jbe
test
jp
orb
xor
fbstp
stc
xchg
je
fs
imul
jb
ss
aas
cmp
pusha
jle
testl
xor
lret
movsl
test
cs
cmp
add
int3
mov
jae
inc
imul
mov
add
jb
fucomip
imul
lds
sub
ror
test
and
mov
addl
inc
cmp
pop
fdecstp
add
les
out
jo
jae
xchg
xchg
push
insb
jge
lds
jg
dec
mov
pop
mov
pop
pop
pushf
jbe
xchg
jmp
loope
cs
movsl
aad
inc
nop
lods
pusha
sbb
sbb
xor
test
push
dec
shl
mov
test
lea
and
adc
ja
push
shl
fsubl
dec
cmp
pop
pop
inc
insb
sahf
inc
or
dec
inc
mov
clc
aas
push
cltd
outsl
mov
in
and
stos
stos
shll
dec
arpl
push
aaa
lods
cwtl
scas
sub
mov
icebp
xchg
xchg
aas
cld
sarl
lret
and
mov
mov
push
add
test
add
and
shl
mov
ret
cld
ret
pusha
xor
insl
out
pop
cmp
jne
dec
cmpsl
sub
dec
ljmp
pop
lods
inc
mov
dec
mov
add
jle
mov
lods
add
add
idivb
pop
xchg
pop
push
mov
pop
lods
clc
into
les
jl
and
scas
mov
lea
cltd
stos
test
out
mov
push
xchg
ret
cmp
xor
inc
and
lcall
mov
pop
cwtl
or
jo
test
movb
xor
and
xchg
movsb
cmp
pop
clc
or
iret
jo
add
fwait
sbb
lcall
mov
mov
in
mov
divl
sbb
jnp
lods
xor
jp
fnstcw
in
icebp
pop
mov
fdivl
dec
rcrl
dec
mov
pop
push
out
add
pop
int3
loop
lock
xchg
rcl
mov
shlb
sub
push
mov
mov
pop
testl
jnp
int
jle
xchg
cmpsb
in
xchg
movsb
pusha
xchg
fistps
negb
inc
sbb
sub
push
xor
pop
in
and
in
push
inc
xchg
lock
sbb
adc
rcl
es
mov
mov
inc
cmp
adc
cmpsl
in
iret
pop
ficoml
leave
xlat
adc
arpl
cld
inc
mov
aas
in
push
shlb
nop
add
jno
pop
repz
fcmovu
xchg
inc
hlt
lds
rol
jle
es
js
cs
push
cmp
shll
push
inc
jbe
pop
cmp
and
test
aaa
cmp
mov
pop
ljmp
jl
and
jno
push
insb
inc
divl
jge
cmp
push
xor
lea
mov
les
xor
loope
ror
jb
cwtl
daa
sub
popf
push
es
sub
sub
ljmp
xor
aam
test
dec
out
lahf
ret
subb
sbb
jne
add
js
xor
sbb
add
pop
adcb
js
js
pop
pushf
movsl
push
lcall
sbb
fimull
sub
mov
push
adc
xor
xchg
mov
fisttpl
data16
push
pop
cs
push
or
sub
pop
das
pop
xchg
pop
mov
shr
stos
mov
cmp
sbb
adc
test
subb
and
mov
ret
stc
dec
mov
pop
adc
push
pop
ss
xor
sbb
push
testl
adc
pop
dec
iret
cmp
xchg
rorb
adc
mov
inc
movsl
cmc
dec
adc
xor
inc
outsl
dec
mov
adc
lret
fisubrs
cmp
cmp
or
push
bound
mov
mov
fwait
pop
out
inc
cmc
sub
jo
mov
lock
jne
fmull
icebp
loopne
stos
in
sub
fcmovu
sub
data16
repz
jae
xchg
adc
mov
sbb
jmp
mov
pop
push
insl
push
adc
jne
dec
cmp
dec
aad
sub
nop
xchg
lret
popf
xchg
jb
loopne
dec
adc
in
shl
cmp
call
xchg
jns
mov
clc
xorl
mov
pop
jmp
daa
scas
inc
iret
cmpsb
cmp
notb
mov
pushf
sti
xchg
and
insb
add
test
std
clc
and
push
lods
mov
or
mov
outsb
into
aaa
cld
jnp
lret
fs
aad
sbb
popa
lock
or
sub
cmp
aam
xor
ret
mov
insb
es
in
aad
lahf
dec
jo
mov
ljmp
mov
stos
test
mov
lds
and
lcall
add
pop
cltd
fwait
pop
or
xor
push
gs
fstl
rcrl
mov
sub
shll
pop
sub
push
stos
in
push
out
and
cmp
push
fiaddl
xor
sbb
adc
pop
mov
pop
mov
push
test
push
out
xchg
into
jg
es
inc
cmp
hlt
or
outsb
fwait
ss
clc
push
jb
test
adc
inc
add
popf
mov
and
jns
loop
in
push
sub
mov
stc
fs
ja
movsl
xor
hlt
std
mov
xor
mov
mov
mov
dec
jne
add
mov
rolb
out
mov
arpl
jmp
popf
pop
mov
dec
jb
out
and
sub
dec
pop
aad
mov
jmp
int3
push
sbb
je
inc
insb
cmpsb
jae
jnp
daa
jnp
out
cmp
xor
es
fistpll
call
das
inc
and
ret
adc
popf
jg
mov
push
sub
popf
xchg
inc
in
sbb
sbbl
fldcw
lea
cmp
cmc
inc
out
mov
gs
in
hlt
decb
loop
mov
out
push
push
sbb
or
test
aas
out
int3
sbb
fcompl
mov
fidivrs
lods
adc
rorl
in
rcr
out
lds
and
int3
jmp
movsb
sub
pop
jbe
dec
push
jge
das
pushf
sbb
or
cmp
loopne
xchg
mov
push
dec
iret
xchg
xor
fadds
or
add
fisubrl
mov
and
movsl
outsb
cmpsb
movsb
mov
in
enter
insl
xor
stos
push
jno
loope
into
mov
cmp
insb
ds
jle
movsl
mov
jae
loope
les
aaa
outsl
roll
out
jge
mov
push
in
pop
test
into
inc
pop
fldt
lcall
sbb
add
push
sub
ljmp
incl
rorb
in
push
cmc
ret
es
mov
out
push
pop
icebp
outsb
int
sub
ss
adc
stc
lret
adc
test
scas
mov
inc
xor
dec
rcll
test
mov
addb
jg
jb,pt
add
scas
leave
xor
stos
ss
hlt
cmp
sti
jnp
lret
cli
mov
lahf
stos
cmp
cmp
xorl
mov
cmc
jle
leave
outsl
sub
or
adc
mov
ret
in
ljmp
int3
add
adc
mov
pop
mov
cmp
ljmp
stc
loopne
out
pop
dec
shlb
fldenv
les
xor
repz
xchg
xlat
jns
sbb
push
imul
sarb
repz
int3
mov
cmp
cs
test
nop
bound
or
dec
mov
add
jecxz
cmpxchg
cmp
xor
jae
mov
mov
pushf
orl
inc
mov
cmp
pop
iret
icebp
inc
ljmp
mov
push
adc
and
or
shll
insb
notb
ss
lahf
hlt
cld
cwtl
and
loop
mov
inc
sub
lret
sbb
mov
jnp
loope
shl
test
mov
shll
insl
neg
sub
xor
mov
es
sbb
dec
cmpsl
sub
ljmp
mov
mov
call
xor
pop
pop
icebp
or
test
int
or
shll
sub
fnstsw
pop
xchg
cli
jle
sbb
xchg
sub
pop
xlat
jecxz
stos
aam
cmp
test
xchg
mov
add
dec
inc
xor
push
ret
nop
xor
pop
aam
je
insb
xchg
jmp
mov
jne
xchg
movsb
dec
sbb
inc
ror
xchg
mov
jne
adc
and
add
adc
lcall
bound
fnstcw
and
in
cmp
xchg
xchg
repnz
mov
mov
sub
mov
fwait
xchg
insl
mov
mov
mov
jne
mov
mov
pop
into
out
cwtl
int
xchg
add
mov
ficoms
mov
out
jo
sub
dec
xchg
inc
mov
icebp
stos
aas
push
scas
insb
adc
roll
adc
shl
mov
shlb
in
nop
shr
ret
leave
pop
xorb
inc
das
push
jns
adc
mov
xchg
movsb
mov
push
cli
fisubl
lea
and
inc
imul
into
push
aam
les
shl
mov
sbb
add
add
ret
leave
lds
hlt
dec
push
xchg
pop
in
mov
je
push
rolb
or
xor
pop
int3
push
jae
pop
push
xchg
fldl
dec
lds
dec
shl
fnstsw
push
cmp
movsb
mov
not
jbe
mov
cmp
aaa
mov
inc
repz
movsb
outsl
jl
int3
xor
loop
push
xor
xor
xor
mov
test
jnp
enter
mov
in
scas
push
popa
enter
daa
sub
subb
aam
mov
add
mov
jmp
jp
dec
movsl
xchg
xor
and
jmp
orb
out
xchg
mov
std
mov
sub
sub
mov
mov
push
push
hlt
jbe
lods
sti
inc
sub
fst
outsb
mov
ja
inc
xor
pop
push
into
nop
mov
jnp
mov
pop
mov
mov
dec
push
pusha
sub
xor
sub
popf
xor
nop
imul
xchg
mov
rcrl
sub
sbb
jne
out
flds
pop
mov
pusha
loop
test
mov
mov
adc
push
mov
mov
cwtl
icebp
testl
adc
rorb
bnd
into
or
out
ljmp
adc
es
fisubl
add
xor
pushw
lods
mov
das
out
lock
sub
xchg
inc
mov
pop
push
sti
sub
imul
mov
inc
loopne
aaa
fcompl
adc
inc
jae
push
fstps
push
xor
loopne
mov
cmp
and
xchg
jp
xlat
or
std
adc
lcall
inc
mov
das
in
aad
loope
nop
cmp
mov
jb
inc
popa
dec
add
je
adc
movb
into
scas
mov
das
lods
add
mov
xchg
loopne
call
adc
inc
add
fistl
mov
jmp
shll
ficomps
negb
dec
std
inc
test
push
cltd
cmp
mov
cld
push
cld
lcall
aam
test
jl
loopne
das
mov
push
pop
aam
or
ret
test
jl
insl
mov
repnz
ljmp
xchg
lods
xorl
lods
mov
pop
ret
xchg
jecxz
adc
cmp
cwtl
lds
test
fnstsw
mov
ss
push
jmp
xchg
jecxz
dec
clc
jg
or
sub
sarl
popa
pop
orb
ret
add
out
dec
xchg
jmp
inc
decb
test
xor
cs
or
js
xor
or
mov
popa
seto
stos
and
iret
popa
mov
loop
inc
addr16
xchg
addr16
mov
test
sti
movsb
in
loop
jmp
in
jnp
xchg
xlat
mov
mov
outsl
sahf
xor
sbb
mov
sbb
mov
jl
dec
jne
fnsave
ja
jg
aad
lret
jmp
xor
subl
out
das
adc
inc
pop
jge
xchg
mov
mov
dec
and
call
xchg
jle
insb
aad
mov
notl
sbb
iret
jecxz
cmp
ret
jae
cmp
jl
mov
mov
test
lods
inc
xchg
cmc
sbb
imul
int3
push
sbb
adc
jns
repnz
cld
das
leave
cmp
dec
hlt
xchg
data16
arpl
cmc
inc
ret
or
lods
push
ljmp
adc
add
mov
icebp
mov
pop
andb
fiadds
and
adc
add
fs
cmp
lret
and
push
lret
jbe
xchg
mov
sbb
data16
jns
mov
jno
xor
fmull
inc
repnz
adc
sub
jo
cmp
scas
popl
pop
test
inc
ja
inc
jno
cmp
xchg
movsb
enter
daa
daa
adcb
outsl
and
loope
add
sub
cmp
mov
xor
popf
es
movsl
lcall
lahf
pop
jb
andb
sub
and
pop
testl
jbe
mov
sub
fcoml
fwait
sub
xor
lea
push
mov
sub
mov
jmp
daa
push
arpl
int
sbb
sub
pop
mov
shll
xor
lods
movsl
dec
sahf
mov
in
jecxz
or
dec
dec
outsb
loop
repnz
stc
jae
imul
lea
in
dec
movsb
cmp
dec
leave
testl
xorl
adc
dec
mov
in
movsb
push
cmc
popf
mov
xor
imul
aas
xchg
std
pop
adc
adc
add
sbb
lods
jo
fisttps
push
mov
mov
xor
inc
sti
fldenv
out
incb
inc
gs
pushf
push
pop
xchg
xchg
mov
rcr
cwtl
les
ret
pop
repz
scas
mov
sbb
int3
sbb
aad
insl
or
adc
mov
mov
aad
roll
dec
sub
jb
inc
push
dec
js
jg
cmp
jecxz
xor
lea
cmp
push
jns
mov
fs
cmpl
sarb
dec
pop
rcr
sti
inc
and
and
aas
shll
pop
mov
mov
mov
std
in
inc
dec
cwtl
fwait
or
mov
sbb
mov
repz
adc
lret
or
outsl
and
lock
das
jg
adc
adc
jp
scas
adc
in
ret
cmp
push
insl
mov
push
dec
popa
jmp
js
test
xchg
popa
roll
std
lods
in
mov
mov
sub
mov
das
pop
fildl
stos
push
lahf
cltd
inc
xor
lahf
lock
scas
xor
fisttpll
push
mov
xchg
js
in
jp
rcl
rcll
stos
mov
xchg
out
dec
sbb
push
scas
xchg
mov
jecxz
sti
xor
fmull
jbe
xchg
xor
pop
nop
mov
fs
dec
outsl
xchg
test
je
xchg
sbb
add
mov
inc
and
fwait
ret
adc
push
pop
shrl
cmpsl
dec
lret
add
push
mov
lcall
jns
nop
out
or
cmp
mov
fdivrl
sub
mov
sbb
jp
jle
mov
leave
sub
mov
jne
cmp
out
push
lods
xchg
xchg
test
xchg
jmp
fisubrs
sub
add
inc
mov
xchg
stos
and
mov
cmpb
pop
jle
icebp
or
mov
mov
fists
bound
ret
into
pop
out
or
inc
inc
cmp
jae
mov
push
aas
pop
ret
int
mov
call
cltd
notb
js
loopne
mov
scas
inc
fwait
call
jno
adc
or
leave
mov
div
mov
inc
lds
jbe
daa
xchg
inc
into
popa
sub
sbb
sub
add
mov
fadd
cli
pop
scas
jle
fisubs
fwait
lret
lds
sbb
sub
sub
and
test
sbb
xchg
push
sbb
push
jbe
out
jge
mov
test
cmp
sbb
jno
jmp
inc
dec
xchg
arpl
push
clc
xor
xor
jmp
jp
push
jge
subb
mov
add
cmpsb
sub
aad
enter
daa
es
dec
push
mov
loope
dec
xor
test
cmp
call
and
std
pop
xorb
add
dec
or
sub
rcrb
aad
js
dec
mov
cwtl
rclb
push
push
pop
push
add
add
stos
outsb
jl
out
aam
out
pushf
call
mov
xchg
ljmp
push
cmp
repnz
int
jmp
into
pop
mov
aaa
rorl
mov
mov
sahf
sub
testb
adc
jg
aam
loop
xchg
cli
stc
sub
fs
in
adc
add
xor
or
pop
mov
cli
push
sbb
lods
cmp
adc
or
loop
into
rorb
xor
and
xchg
mov
imul
mov
xchg
data16
or
push
lods
mov
mov
sub
mov
mov
pushf
dec
lods
sti
mov
mov
gs
pop
jb
mov
test
inc
cltd
icebp
psubusw
imul
xchg
and
fistps
pop
push
popa
xlat
xchg
jo
and
clc
pop
sub
jmp
push
ds
jl
aad
sub
dec
mov
les
jne
dec
out
repz
std
jecxz
sub
inc
in
lea
mov
lea
adc
adc
mov
fildl
pop
pop
jne
add
inc
cmp
dec
aas
jb
mov
js
inc
and
mov
aas
mul
jnp
std
xchg
mov
fidivl
mov
adc
cld
stos
int3
adc
dec
fidivrs
mov
out
lock
sbb
das
pop
xor
xchg
sub
xor
scas
es
popf
dec
insl
jno
imul
cmc
add
sbb
popa
ljmp
mov
push
gs
and
incb
add
data16
test
dec
add
insl
adc
xor
aas
xchg
mov
mov
shrl
lea
stos
mov
pop
or
mov
xchg
cmovb
leave
jp
or
leave
les
pop
loopne
mov
dec
xor
inc
ss
push
mov
int
dec
dec
repnz
inc
xchg
xchg
xor
test
add
and
cltd
bound
fdivr
jns
mov
popa
xchg
je
enter
ljmp
daa
imul
pop
jp
imul
mov
pop
push
mov
inc
jl
jne
push
mov
int
mov
inc
jmp
leave
mov
orl
mov
cmp
xor
rorb
insb
push
lods
and
xor
mov
pusha
lea
sub
and
stos
inc
push
lods
and
jno
push
add
ret
rclb
inc
mov
xchg
mov
xchg
imulb
mov
scas
cmpsb
fistpl
adc
test
mov
dec
leave
sub
test
and
inc
enter
push
jno
push
dec
bound
psubsb
add
stos
add
fisubs
outsl
push
dec
inc
mov
or
mov
movsb
pop
inc
mov
jbe
lods
xchg
xchg
sub
mov
pop
aaa
mull
mov
mov
add
adc
dec
push
push
fistl
out
inc
lds
push
push
call
jb
fdiv
in
inc
xchg
outsl
cmpsb
mov
shr
fs
and
cmpsl
sub
cmc
ret
jmp
push
jecxz,pt
stos
movsl
test
xchg
and
lahf
pop
mov
add
jnp
adc
add
push
mov
cli
jnp
shlb
stos
js
out
mov
lcall
test
lods
jecxz
sub
mov
jo
ja
iret
jno
dec
mov
out
dec
mov
cmp
and
test
int
fisubrs
popa
fmul
pop
or
lods
imul
mov
mov
test
aad
subb
cmpsb
loop
imul
fs
addr16
adc
int
mov
dec
fadd
out
test
bound
cmp
add
xor
mov
push
cmc
sub
xor
stos
pusha
outsl
movsl
pop
jp
gs
push
adc
mov
jge
icebp
imul
mov
push
scas
sub
in
mov
pop
xorl
aaa
hlt
mov
gs
loopne
mov
mov
flds
jo
push
movsl
stos
repz
sub
sbb
inc
and
xlat
xchg
lcall
dec
lret
adc
mov
js
shr
test
cs
mov
aad
loope
nop
into
test
jb
fldl
sub
ror
gs
push
cmpsb
lea
addl
or
xchg
mov
out
mov
data16
dec
mov
sti
add
dec
rolb
push
sahf
inc
push
sub
aas
adc
mov
das
fidivrl
lahf
and
bts
std
cmp
adc
xlat
mov
mov
repnz
mov
mov
cmp
icebp
rep
das
cmp
cmc
jne
popf
test
aam
enter
bound
insl
pop
sub
cmpsl
and
sbb
mov
popa
add
in
lods
ret
mov
je
addr16
mov
xor
jno
scas
inc
cmc
test
xor
push
xor
outsb
fstpl
adc
xor
xchg
loopne
mov
pop
subl
nop
pop
ss
adc
push
gs
pop
xchg
shll
sbb
out
or
xor
add
or
dec
cmp
ret
xchg
xchg
dec
in
je
sub
xor
faddl
push
mov
or
fmul
outsb
bound
lea
and
jmp
ret
push
cld
mov
std
lahf
mov
mov
movsb
bound
or
testl
dec
and
push
gs
pop
jmp
xchg
dec
popa
or
mov
ficoml
sbbl
fsub
xor
fisubrs
sub
or
insb
mov
arpl
jle
xlat
into
in
in
pusha
sub
loop
push
add
xor
jae
inc
pop
jb
jae
jae
push
lds
lock
inc
xchg
push
mov
data16
cmp
xchg
cli
cmc
hlt
sbb
daa
shrl
repnz
or
enter
xor
iret
cwtl
cmp
repnz
in
leave
mov
mov
aam
lret
xchg
decl
sbb
into
or
loope
add
fwait
lret
pop
pop
or
in
lds
xchg
shlb
mov
mov
stos
mov
or
inc
out
jge
gs
sbb
cmp
mov
jae
mov
jno
mov
decl
hlt
cltd
push
mov
add
jo
cmpsl
fildll
and
xchg
test
cmpsl
mov
inc
push
decb
cmpsb
xor
sub
jecxz
enter
daa
and
js
enter
or
shrb
cmp
fwait
popf
or
push
dec
jb
scas
mov
and
fbld
jl
fiaddl
dec
out
jbe
mov
mov
pop
insb
paddusw
sub
push
add
lcall
push
fcompl
mov
outsb
inc
jmp
adc
push
mov
movsl
mov
jl
mov
xchg
mov
sub
and
mov
jo
loop
fcoml
jg
mov
push
shll
mov
pop
or
js
adc
sub
mov
in
or
fs
sub
jmp
cmpsl
ss
addr16
jge
lods
testl
push
imul
push
xchg
into
xchg
cmp
cmc
repnz
outsl
test
adc
ret
mov
pushf
adc
or
sahf
data16
add
mov
lcall
dec
ja
jb
lods
in
jb
mov
out
jecxz
scas
test
repz
inc
fcomps
dec
ss
mov
jae
les
xor
sbb
inc
xchg
cmpsb
mov
pop
cmp
arpl
add
lcall
cmpsb
sbb
js
cs
ljmp
nop
test
or
jb
js
dec
fldl
bound
mov
sbb
pop
dec
cmp
push
push
call
mov
mov
rorb
std
xor
dec
test
rcr
inc
sub
out
mov
lock
jno
loopne
mov
mov
mov
sub
mov
pop
ja
mulb
xchg
std
loop
fwait
cwtl
int3
add
out
and
pushf
icebp
js
adc
add
xchg
lret
sub
orl
dec
loopne
das
sbb
icebp
rorb
daa
aam
scas
sbb
es
mov
dec
push
inc
xchg
cmpsl
and
pop
popa
sbb
push
lods
sub
cmp
xor
xchg
mov
mov
add
add
cltd
in
je
inc
cmc
icebp
mov
jno
push
idivl
fnstsw
fdivr
imul
xchg
xor
addr16
fstpt
pop
cs
stos
jg
js
jae
out
xchg
add
pop
rorb
add
int
fldt
shlb
insl
pop
out
movsb
jo
test
leave
add
fsubrs
and
fwait
push
mov
push
inc
pop
xor
pop
push
loopne
ja
sub
jmp
jns
add
in
mov
xor
lods
call
xchg
das
enter
aad
into
movsb
sub
dec
das
dec
or
jne
imull
mov
dec
fwait
out
repz
mov
ja
pop
push
test
test
mov
sub
xor
andl
push
mulb
decb
inc
insb
sub
jle
ds
icebp
jle
cmp
pusha
ret
stc
xor
ret
cmp
inc
mov
test
jns
imul
push
movsl
cmp
xchg
push
xor
jns
and
pushf
cmpsl
scas
insb
cmp
adc
mov
iret
neg
pushf
repnz
dec
jge
rolb
arpl
mov
or
cwtl
mov
dec
data16
lea
leave
xchg
xchg
int3
popf
cmc
mov
cmp
sbb
push
sarb
mov
xor
inc
dec
cmp
negl
jbe
xchg
xor
sbb
xchg
aaa
jne
cmp
loopne
jl
jns
dec
loope
test
xor
cli
popf
cmp
imulb
test
jb
gs
lods
test
cmpsb
mov
xor
xor
imul
and
fsub
and
idivb
dec
rcrb
sub
mov
mov
or
fwait
mov
sub
imul
rcr
leave
xchg
and
cwtl
in
pop
jns
pop
xchg
adc
or
pop
pop
push
fidivs
insb
pop
inc
push
pop
addr16
add
sub
shrb
sbb
sub
inc
and
xchg
test
cmc
and
pushf
daa
push
outsl
pop
mov
sub
xchg
pop
or
and
push
dec
sub
sbb
es
adc
mov
arpl
lcall
mov
nop
adc
std
mov
stc
shl
add
push
testl
xor
jle
cmp
arpl
or
cld
cmc
mov
mov
outsl
arpl
adc
stos
lea
leave
pop
adc
mov
add
jne
testw
scas
movsl
out
cmp
cli
in
sti
xchg
xlat
and
roll
loopne
divb
inc
shlb
mov
repz
adc
sbb
mov
or
std
fst
pushf
into
adc
cs
or
pop
addb
cmpsl
stos
sbb
inc
jnp
push
sbb
lcallw
dec
adc
roll
aam
or
mov
inc
adc
xchg
mov
fcmovnbe
dec
lret
mov
inc
lock
mov
mov
popf
adc
scas
shrl
aad
std
mov
mov
mov
xor
dec
ds
sub
jo
xchg
dec
scas
mov
orl
sti
sub
pop
lods
push
sub
ljmp
js
jl
es
dec
dec
lea
ljmp
rep
cwtl
or
mov
mov
and
pop
stos
arpl
cltd
sbb
pushf
test
aam
jg
test
mov
xchg
fwait
clc
cmpsb
push
cld
xchg
je
lods
sbb
shll
push
pusha
pop
fldcw
popf
out
fsubp
xchg
dec
lock
push
sbb
inc
xor
jae
or
push
xor
sti
aam
into
syscall
xchg
pop
dec
or
cmp
dec
push
add
inc
pop
lcall
jg
les
out
mov
jae
in
call
std
mov
jns
sbb
in
mov
push
mov
xchg
mov
pop
push
int3
and
aas
jl
add
lods
mov
loopne
mov
push
push
adc
jne
je
ficoms
out
rcrb
jmp
sub
push
cmp
mov
or
packuswb
lcall
xchg
mov
jecxz
sahf
in
lret
push
pusha
pop
cmp
fists
aaa
jno
lret
inc
jno
arpl
inc
mov
dec
sub
mov
in
lret
pop
xor
and
xchg
imul
scas
iret
push
test
jle
or
repnz
iret
push
jge
repnz
hlt
or
stc
arpl
inc
popf
or
adc
std
inc
lret
or
out
jnp
pusha
lods
sbb
mov
pop
imul
lds
out
push
jl
and
or
cli
insl
cmp
sub
jbe
mov
jge
mov
sbb
cmc
push
aaa
xor
xor
icebp
lock
jno
and
out
push
xchg
xor
test
xor
push
test
scas
ljmp
test
cmp
xchg
mulb
sbb
fs
and
lea
xor
loope
hlt
push
cmp
cmpsb
jge
dec
jns
movsl
mov
rcrl
addb
negl
mov
pop
pushf
xor
dec
sbb
pop
mov
pop
dec
pop
xchg
aas
aam
pop
les
push
pop
push
fsubrl
mov
fwait
adc
or
inc
mov
mov
xor
shlb
sarl
jb
push
int
pop
cmp
pop
mov
add
inc
sti
or
movsl
mov
mov
pop
sbb
jl
test
mov
jg
sub
or
and
movlps
call
fdiv
push
dec
cli
sbb
int3
lods
cmp
shr
or
and
xor
loope
inc
pop
adc
xor
adc
lods
adc
xorb
lods
repz
mov
pusha
adc
stos
jecxz
mov
dec
push
je
inc
out
push
fbld
loopne
mov
movsb
inc
in
cmp
in
add
jbe
outsl
repz
out
jle
and
cmpl
stc
aas
xlat
orl
in
jp
adc
pushf
jns
xchg
jmp
lods
imul
mov
push
mov
push
mov
and
dec
lret
mov
mov
push
pop
xor
rcr
pop
mov
add
jle
jle
add
into
pop
add
xchg
inc
enter
cmpsl
iret
iret
aas
out
lret
into
lret
test
out
sar
imul
xor
cltd
sub
inc
in
mov
xor
mov
es
idiv
push
pop
movsb
lret
pop
cwtl
push
mov
xor
add
ret
das
fidivl
or
sub
jns
ret
add
es
dec
xchg
insl
or
push
xor
out
cmp
shll
mov
fstp
inc
and
jb
pop
pop
lret
add
pop
sub
pop
jns
mov
cmpsl
and
jge
sub
int
lret
clc
loope
dec
xchg
mov
jmp
rorl
or
out
cmp
jp
xchg
outsb
or
pusha
sub
mov
test
xor
hlt
sbb
xchg
es
jb
mov
leave
jp
dec
mov
movsb
or
movsl
leave
fwait
scas
bnd
mov
movl
mov
sbb
into
xor
xlat
gs
scas
xchg
mov
pop
mov
or
pop
shrl
add
jp
push
or
add
add
into
mov
mov
insl
imul
imul
add
imul
addr16
les
daa
cs
orl
insb
and
lret
insb
es
jnp
test
jle
xlat
mov
pusha
stc
mov
fbstp
leave
sti
pop
add
jo
jl
repz
adc
push
push
shll
mov
push
mov
and
mov
inc
lret
call
mov
imul
fisubrl
adc
icebp
inc
iret
mov
push
repnz
mov
sti
hlt
push
shrb
shll
inc
aam
arpl
mov
addr16
dec
rclb
or
add
add
ljmp
lcall
lds
lret
sahf
shlb
and
into
cmp
jns
push
movsb
lahf
inc
jbe
dec
jge,pn
xor
xchg
repz
jae
and
or
mov
dec
mov
xchg
das
xor
mov
cwtl
scas
leave
je
push
pushf
mov
test
inc
lret
leave
and
mov
es
enter
daa
and
es
sbb
pop
sub
aaa
lods
cmp
jmp
les
mov
adcb
daa
sbb
push
cmp
outsb
leave
xor
pop
inc
fimuls
js
push
call
lcall
das
fcompl
or
push
repnz
adc
jecxz
dec
in
lea
mov
mov
mov
in
mov
int
dec
je
dec
ds
lret
cmp
mov
int3
sbb
jl
sahf
pop
inc
test
int
jg
lret
lret
mov
mov
icebp
push
adc
sti
ss
lea
scas
adc
cli
push
jg
xor
cmp
loope
sti
aas
and
aas
pusha
xor
xor
pop
outsl
and
adc
xchg
adc
sti
pusha
add
cmp
fcmovu
scas
mov
mov
mov
mov
sti
repz
pop
pop
add
sahf
mov
pop
inc
popa
pop
inc
clc
lds
sbb
test
mov
xchg
out
iret
inc
sbb
cs
mov
inc
xchg
adc
cmp
mov
stos
cs
call
call
xchg
fmuls
clc
shll
cmpb
lds
mov
jecxz
add
push
sbb
lea
mov
sbb
ret
dec
imul
es
movsb
cwtl
inc
inc
dec
sbb
aas
lea
ds
lret
and
dec
je
imulb
add
cwtl
std
xor
mov
sub
mov
std
paddd
adc
sbb
sbb
lock
mov
xor
adc
in
pop
push
ret
xchg
sbb
es
and
sub
add
and
out
ljmp
lea
mov
mov
dec
in
mov
jmp
rcrl
test
mov
test
push
inc
pop
jmp
clc
sbb
sbb
repnz
aad
lods
mov
shl
jno
pop
das
cmp
stos
dec
inc
dec
out
pushf
stc
xlat
xchg
ficoml
push
shrl
fimull
sbb
enter
dec
adc
das
inc
pop
mov
jbe
jae
fstps
test
push
test
mov
cmovno
cmp
push
sub
xor
add
cmp
out
cli
jns
cmp
in
popa
popf
xchg
jmp
and
mov
mov
sbb
jp
lea
mov
xor
fisttps
xor
jne
cmp
xchg
lcall
lcall
xchg
rol
adcl
out
sbb
sub
and
sbb
addb
inc
mov
and
jle
adc
in
inc
sbb
icebp
vaddsubps
ret
or
inc
xchg
mov
push
shr
and
dec
lcall
clc
out
add
jp
stos
imul
cmp
or
in
adc
into
push
leave
jge
cld
hlt
mov
pop
cltd
inc
xlat
mov
push
enter
into
int3
dec
add
lcall
cmc
xor
lds
add
mov
cmp
mov
adc
rclb
pop
jno
push
push
jge,pt
xchg
mov
aaa
mov
fnstsw
push
jne
jno
sbb
dec
cs
jle
dec
mov
dec
jo
stc
ljmp
outsl
mov
test
shr
addr16
pop
inc
push
cmpsb
aas
jno
in
out
dec
enter
daa
and
dec
loope
push
je
movsb
pushf
pop
cmp
fnstcw
xchg
jns
movsl
lret
je
and
es
clc
xchg
push
shrl
movlps
fcomps
add
inc
mov
xor
js
fcmovu
pop
adc
rcll
insb
faddl
inc
sub
outsb
into
cmp
adc
mov
mov
pop
mov
mov
xor
hlt
or
cli
int
outsb
inc
sub
leave
and
mov
lret
in
shl
repnz
div
sbb
and
test
out
movsb
outsb
icebp
loop
mov
frstor
sbb
daa
adc
ss
cmp
imul
cli
orl
mov
daa
pop
or
inc
into
and
in
cmc
push
test
xor
clc
inc
outsl
add
adc
ret
popf
xchg
add
sbb
loope
lahf
ret
mov
sub
push
pop
in
push
jmp
sti
mov
into
push
gs
cmp
in
pusha
lds
fsts
or
mov
sub
pop
test
mov
or
imul
lock
push
mov
add
fucomi
lahf
lock
inc
daa
arpl
das
pop
and
les
dec
mov
inc
sbb
push
nop
cmc
pop
push
call
call
xchg
mov
pop
sub
dec
push
nop
pusha
or
pop
inc
push
movsb
inc
inc
jb
frstor
pusha
mov
ret
and
or
rcrl
inc
cmp
pop
stc
cwtl
mov
mov
push
aam
push
cld
lods
sbb
mov
cmp
outsb
mov
movsb
mov
mov
inc
adc
fadds
sub
adc
mov
xor
bound
test
dec
ds
cmpsl
pop
fcomi
ljmp
push
fnstcw
mov
and
sbb
test
fwait
pop
or
mov
cltd
shrl
test
pop
mov
in
mov
fstpl
cltd
xor
push
pop
and
pop
loop
shll
mov
pop
fidivrl
mov
push
cs
and
and
jl
or
or
jecxz
mov
jns
jae
inc
jbe
test
cmpsl
or
movsb
mov
inc
pop
out
or
movsl
fwait
or
push
shlb
xchg
add
les
loope
jp
push
jns
cmp
pop
xchg
dec
rol
mov
push
jp
dec
mov
inc
movsb
gs
xchg
jp
mov
mov
insb
js
push
inc
mov
dec
xchg
lret
mov
repnz
mov
fldt
xchg
insl
jae
jmp
mov
pusha
out
jnp
sub
sbb
jle
stos
dec
mov
and
sbb
lock
ret
cmp
dec
inc
aam
lock
fisubs
insb
sbb
ret
pop
outsl
test
imul
jp
popf
add
xchg
push
push
mov
leave
rclb
subb
clc
popa
or
adc
jl
repnz
jbe
leave
hlt
bound
in
call
roll
mov
or
test
xchg
testl
and
jns
pop
clc
adc
lds
and
mov
jg
mov
push
sub
movsb
fwait
mov
inc
pop
pushf
jbe
shl
jge
fimuls
aaa
jno
bound
mov
insb
jno
lret
mov
cmp
les
sub
xchg
adc
aas
and
inc
jecxz
test
sahf
dec
stc
inc
jmp
lods
repnz
into
sbb
cmp
ljmp
adc
loope
imul
ds
mov
and
push
sbbl
or
sbb
lcall
call
jbe
das
aaa
push
js
clc
fistl
push
jnp
lcall
pop
fsubrl
fdivr
outsb
xor
pop
adc
cltd
addl
fs
mov
jb
sbb
adc
jae
sub
mov
pop
xor
xor
mov
mov
and
mov
sbb
adcb
jg
push
mov
ret
scas
mov
sub
add
jbe
bound
add
arpl
pop
scas
testl
xor
xchg
cld
cmp
adc
or
pop
push
cmc
aad
dec
xor
and
push
push
push
imul
or
add
mov
mov
or
cmc
mov
mov
ret
pop
jns
gs
inc
arpl
cld
nop
and
sub
sub
repz
std
in
xchg
jne
add
cltd
fwait
cmp
jmp
add
jg
pushf
jp
cli
jmp
mov
gs
insl
dec
nop
lock
test
jb
les
fidivrs
xchg
and
jecxz
fs
pop
clc
out
lea
sub
push
jge
mov
inc
cli
dec
aas
fdivs
fisttpl
ja
inc
pop
cmpsb
inc
clc
sub
dec
ret
jns
stos
and
gs
jmp
cli
xchg
std
and
mov
mov
mov
xchg
icebp
stos
jno
cld
xlat
cmp
lret
push
insl
adc
cmpsl
and
lock
inc
shrb
xor
mov
es
jg
ret
dec
cmp
cmpsl
push
jp
ljmp
cmp
adc
es
inc
fstl
inc
pop
hlt
cltd
clc
fists
mov
jne
push
mov
fldl
dec
clc
xchg
jg
xchg
jo
jg
adc
popa
rorl
push
fldcw
in
xchg
push
std
mov
fildl
sti
or
xchg
adc
or
xchg
dec
cmpsl
jno
test
nop
popl
xchg
jne
inc
mov
jb
lcall
push
jae
addl
xchg
mov
bound
out
in
jb
xchg
popf
orl
cmpsb
sub
mov
add
sbb
mov
cmp
mov
mov
test
add
out
dec
int3
aam
inc
inc
jmp
push
lods
in
xorl
inc
dec
xlat
sub
sbb
addr16
lea
jno
add
push
jnp
mov
outsl
push
in
inc
adc
cli
lods
fisttps
inc
mov
pop
cmpsb
push
sahf
inc
popf
hlt
scas
jae
adc
push
push
jge
popf
sub
int3
mov
loopne
cmp
pop
push
notl
rorb
cs
pop
dec
mov
lcall
iret
shrb
stos
repnz
xor
imul
aaa
repz
arpl
mov
pop
rorb
dec
sahf
inc
jne
or
jae
xor
test
add
fidivrs
or
lds
adc
mov
adc
sahf
movsb
es
pop
push
xchg
lcall
stc
or
aaa
xor
push
jno
mov
aaa
dec
or
testl
or
jo
cltd
lods
scas
mov
inc
test
imul
shlb
mov
lods
enter
daa
push
pop
push
jp
mov
sub
jecxz
cmp
dec
sub
xchg
test
cmp
xchg
ja
add
test
call
pop
push
push
jge
xor
ficomps
mov
push
or
and
outsb
xchg
pop
outsl
adc
je
sahf
mov
push
xor
ljmp
push
jle
into
int
subl
xchg
pop
roll
rorl
mov
mov
mov
xchg
inc
jg
rorl
push
lock
loop
adc
adc
jne
ss
andb
filds
and
xor
sarb
int
or
xchg
call
mov
xor
inc
outsl
mov
inc
adc
repnz
adc
fsubl
mov
les
mov
dec
test
ja
and
hlt
das
pop
sti
add
test
sbbb
gs
cmpsl
jbe
xchg
test
fildl
adcb
inc
les
mov
gs
xchg
jg
push
mov
subl
jge
icebp
cs
loop
nop
lret
loopne
dec
orb
jb
pusha
cld
dec
cmpsl
jns
fstl
jecxz
jl
pop
adc
aam
sbb
mov
dec
clc
mov
subl
pop
aad
inc
in
mov
mov
mov
insb
pop
sarw
aad
idiv
and
sbbl
push
iret
cltd
icebp
sbbb
add
arpl
ret
xchg
and
mov
add
lock
push
subl
jle
dec
sub
scas
aam
cld
pop
ret
aas
xor
es
inc
stos
insl
test
pushf
xchg
mov
sub
std
jb
scas
cltd
fdivrl
imul
or
inc
sbb
cmp
test
mov
inc
push
mov
mov
int
jg
scas
sbb
lds
shl
cmpsl
push
pop
xor
iret
stos
sbb
out
xchg
scas
dec
push
push
bound
xor
jg
movsl
lods
jg
adc
shll
gs
dec
push
push
and
lds
dec
mov
inc
inc
dec
into
inc
or
cmc
rcrb
push
jae
add
cli
gs
pushl
mov
jp
mov
clc
adc
jmp
mov
pop
mov
dec
push
add
dec
mov
daa
jl
lods
mov
sahf
dec
pop
cmp
mov
lcall
adc
jmp
and
faddl
xchg
in
sub
adc
add
xor
stos
insb
stos
loopne
jnp
adc
xchg
adc
pusha
and
popf
daa
fildll
sbb
fldl
addl
push
push
sbb
leave
popf
push
popa
pushf
mov
pop
js
ficoml
cltd
xchg
pop
nop
cwtl
sbb
outsl
adc
mov
scas
mov
inc
int
cmp
mov
leave
loop
inc
hlt
adcb
std
subl
push
inc
or
add
inc
int3
pop
mov
pop
push
inc
sbb
daa
or
mov
movsl
dec
jle
mov
movsb
mov
fsts
and
jge
pop
xchg
sbb
jnp
lock
cwtl
ss
dec
jnp
std
push
repz
xor
sbb
push
scas
inc
mov
fildll
xor
adc
cmpsb
enter
pushf
mov
es
sbb
rorb
sub
les
movsb
test
sti
lahf
or
sub
fstpl
pop
xor
sbb
and
or
aas
xor
sub
ljmp
js
icebp
mov
lcall
sbb
add
out
outsb
div
dec
adc
dec
pop
mov
adc
mov
shll
jecxz
push
subl
sub
in
pop
add
lea
cli
insl
mov
xorb
test
fisubrl
jg
jno
loop
gs
cltd
mulb
adc
adc
push
mov
xor
fcomps
or
mov
inc
insl
out
ret
pop
into
or
xchg
jecxz
arpl
pusha
xor
push
mov
popf
scas
jb
std
arpl
imul
add
dec
or
out
lods
jbe
push
mov
adc
cmp
pop
push
scas
sti
scas
loope
mov
jae
loopne
sbbb
ljmp
inc
dec
les
mov
pop
sbb
sbb
xlat
mov
jge
adc
test
pushf
shrb
jmp
xchg
test
aad
mov
stos
dec
loope
aam
mov
in
je
loopne
jecxz
fcoms
popa
movsb
inc
lea
out
call
add
aam
mov
loop
dec
adc
lods
cwtl
pop
xor
enter
lcall
push
inc
mov
out
data16
sbb
roll
lds
cwtl
jmp
sub
mov
pop
arpl
lret
xor
mov
aam
mov
dec
add
leave
xchg
xor
mov
sub
xor
sbb
mov
into
push
stos
mov
adc
jno
dec
das
pop
xchg
cmpsl
sbb
fucomp
es
ds
mov
gs
mov
mov
and
jns
scas
pop
gs
add
cltd
data16
test
push
inc
push
dec
fldcw
nop
movsb
imul
or
xchg
out
or
jg
cmp
pushf
pop
fildl
stos
or
out
xchg
test
push
cmp
lock
mov
icebp
or
int
pop
mov
mov
jne
test
pop
push
xchg
dec
jge
cmpsb
inc
in
and
fwait
cltd
hlt
scas
push
mov
sahf
pop
add
ljmp
jne
cli
in
shll
mov
mov
das
xor
js
ja
jb
jp
push
push
mov
cmp
mov
stos
mov
cmp
pop
mov
out
or
pusha
xchg
out
jge
jb
sahf
xchg
in
call
jbe
dec
push
dec
sub
push
sbb
addr16
rsm
mov
cltd
xchg
lods
jnp
popa
call
in
fidivrs
add
dec
and
int
pop
pop
adc
mov
shlb
adc
fstp
sbb
aaa
idivl
fcmovb
mov
sbb
movsl
shrl
in
scas
and
fcoms
dec
jmp
adc
aaa
iret
nop
lahf
sti
bnd
in
xchg
hlt
int
andl
aaa
imul
les
or
aas
jp
or
out
test
fiadds
adc
cmp
mov
cmp
add
inc
mov
movsb
cmp
popa
push
das
jmp
jbe
add
sbb
mov
cmp
out
jge
inc
mov
jl
mov
push
int3
inc
xor
ja
shrl
sahf
pop
test
jmp
inc
xchg
ret
dec
sbb
mov
dec
daa
sbb
xor
inc
lods
loope
and
sub
jp
cmp
and
push
ljmp
mov
lahf
je
or
add
add
leave
cmp
inc
mov
lods
stos
pop
pop
movsb
cwtl
fnstcw
lret
clc
pop
push
pop
negl
push
push
xlat
sub
stc
imul
and
shrb
mov
mov
aas
arpl
subb
xor
push
int
jmp
sub
push
lret
repz
loopne
in
lods
sbb
fs
test
jnp
jg
and
leave
stc
push
sbb
aas
inc
lcall
clc
cmpb
or
jge
xchg
cli
dec
jne
xor
xchg
scas
cmp
ret
inc
or
shrl
pop
sbb
sub
xor
sahf
push
outsl
jl
call
imul
or
fcmovb
jmp
lods
pop
dec
mov
sti
pop
xor
pop
xorb
jle
in
lret
sti
pop
xchg
sbb
xor
int
add
fdivrl
inc
push
scas
mov
les
cld
jmp
sbb
push
dec
repz
std
in
mov
push
int
adc
pop
pushf
jnp
test
pop
test
shrl
loopne
andl
imul
orb
repz
mov
loopne
fs
lea
mov
movl
pushw
add
neg
sbb
test
inc
repnz
inc
dec
ss
into
mov
sahf
xchg
jnp
xorb
imul
cwtl
movsb
arpl
mov
mov
mov
xor
adc
mov
rcrl
cld
repz
and
int3
das
adc
rcl
and
mov
dec
xor
in
sbb
pop
aas
jns
or
jl
dec
sub
inc
ljmp
shrb
imul
scas
sub
adc
xor
test
in
popf
aam
test
test
push
setnp
mov
pop
clc
inc
xor
xchg
sub
popf
push
rcll
cwtl
aaa
stos
divl
push
xchg
cmp
dec
testl
pop
sub
xor
mov
mov
test
add
ret
and
dec
jo
fiaddl
inc
insb
or
xchg
outsb
fwait
enter
pop
test
add
bound
outsl
and
push
and
in
add
mov
pop
mov
pop
xor
xor
mov
mov
jae
mov
pop
enter
mov
cmc
mov
test
dec
xchg
mov
push
push
andl
inc
out
andl
or
rcr
addr16
aam
push
push
pop
and
xor
je
fcoms
cltd
pusha
fwait
push
xchg
fildll
lahf
ret
loop
dec
mulb
mov
ja
push
mov
xor
jb
pop
push
popf
lods
and
ja
dec
xchg
or
mov
fstpt
push
outsl
mov
pop
iret
out
pop
cmp
hlt
sbb
adc
inc
out
pop
or
jo
cmp
inc
mov
and
adcl
pop
mov
pop
fisubs
lds
mov
out
lret
cmp
movsb
mov
loop
mov
loopne
sbb
xor
aaa
insl
insl
cmp
and
mull
dec
pop
dec
push
mov
scas
pop
jo
and
push
mov
sbb
inc
and
daa
or
push
mov
daa
sbb
push
loope
std
in
mov
gs
ds
sub
movsl
out
xor
bound
lahf
xchg
ljmp
sbb
bound
and
or
jo
jae
lret
sub
pop
dec
pop
adc
mov
adc
out
outsb
mov
sub
add
into
or
dec
pop
ljmp
xchg
lret
test
sub
das
daa
pop
add
int
jmp
pop
jo
shl
rcrb
loopne
jl
sub
add
mov
fadd
loop
in
popa
stc
pop
add
lret
adc
arpl
cmp
adc
pop
idivl
or
repnz
or
imul
icebp
fs
xor
ljmp
and
sbb
loop
data16
lods
lods
inc
inc
bound
cli
sub
mull
xor
add
lds
xor
cmpsb
pop
sti
cmc
std
inc
push
jno
data16
ret
mov
sub
xor
fsub
xlat
cmp
bound
shlb
pushf
xorl
imul
lcall
lahf
ds
jb
adc
dec
or
dec
je
in
in
jecxz
pop
xor
and
lea
daa
fsubrp
sub
filds
orl
fisttpl
scas
pop
jbe
outsl
inc
jns
fiaddl
or
xor
mov
or
lcall
shl
cwtl
pop
sub
mov
lds
out
and
pop
in
cld
cmp
lret
adc
cmpsl
mov
add
lock
xchg
das
repz
imull
leave
aam
nop
add
in
stos
sub
nop
cmp
pop
imul
sbb
popf
ljmp
lods
lock
mov
shl
fwait
and
scas
lret
ds
mov
jmp
cltd
aam
adc
mov
inc
xchg
rorb
fmulp
ret
call
pop
sbb
dec
nop
shr
and
xor
or
out
sub
xchg
test
mov
nop
mov
push
outsl
popa
xor
pusha
or
aad
xor
cmc
lea
mov
inc
test
incb
inc
jecxz
dec
arpl
fwait
or
and
fwait
imul
lods
push
jp
add
dec
jle
decl
pop
adc
iret
and
jecxz
xor
popl
mov
add
pop
out
icebp
in
ja
dec
cmpsl
jp
in
mov
cs
mov
test
fidivl
inc
xor
lret
xchg
mov
xchg
xorb
test
movsl
sub
add
mov
xchg
int
insb
jmp
lods
jnp
dec
movd
xchg
adc
pusha
ss
ljmp
ja
pop
and
inc
leave
xor
lret
and
push
arpl
sbbb
sbb
jae
sub
scas
sbb
mov
imul
ds
out
pop
push
mov
add
lret
iret
dec
and
repnz
and
arpl
sub
inc
jmp
movsl
or
lret
flds
filds
or
xchg
mov
pop
jecxz
ja
push
lods
lds
adc
pop
jge
cmp
cli
pop
push
int
or
push
cmpb
and
mov
mov
bound
pop
pop
jl
inc
ss
enter
pushf
mov
xor
sub
adc
push
popa
lret
mov
sbb
arpl
push
cwtl
pop
enter
daa
sbb
fildll
cmp
push
sub
popa
xchg
jno
jo
fs
and
and
mov
popa
sbbb
in
add
cmp
and
pop
repnz
xchg
mov
jno
mov
aaa
push
push
stos
repnz
movsl
and
outsb
and
adc
loopne
sti
popl
cmp
xor
pop
and
movb
mov
test
stos
xor
pop
adcb
pop
fstpl
sbb
and
rclb
test
mov
jg
cwtl
mov
mov
mov
fs
inc
adc
add
ss
inc
lcall
fisubrs
arpl
mov
shll
leave
dec
adc
or
outsl
into
je
xor
in
add
cmp
fists
jbe
lods
imul
add
inc
add
lods
sub
mov
jg
sub
cli
mov
mov
cmp
decb
cli
loopne
aam
pop
sbb
inc
jge
arpl
popf
pop
dec
into
jbe
repz
xchg
inc
movsl
xchg
sbb
lret
add
xlat
jnp
push
pop
test
mov
sbb
cs
and
fstps
dec
dec
incb
fnsave
mov
dec
cmpl
jecxz
test
lea
cmp
test
dec
movl
fisttpl
xor
fstpt
cwtl
pop
sbb
in
add
sub
out
addr16
js
or
inc
and
and
dec
testb
std
push
sbbl
pop
jmp
and
icebp
ficomps
cld
scas
ds
lret
jg
xor
mov
lock
das
shl
ror
cmc
imul
jp
sbb
jnp
scas
adc
inc
ds
dec
and
adc
jg
mov
imul
mov
cmc
mov
and
dec
stc
mov
ret
add
add
test
sbb
jb
add
xor
xchg
stos
lret
pop
sbb
cmp
subb
fnstsw
xchg
lret
jo
push
into
out
movzbl
or
inc
jbe
stos
mov
test
lret
push
xchg
mov
aad
inc
test
test
fwait
mov
push
mov
or
data16
mov
in
jp
jns
int
in
pop
mov
cmc
sbb
mov
test
add
iret
inc
mov
mov
cmp
dec
out
daa
jne
iret
out
adc
push
out
test
jo
jmp
dec
cmp
aas
stos
xor
sub
std
movsl
addr16
pop
stos
cld
fsubrl
and
cmp
jnp
loop
jle
jo
in
lods
pusha
shr
call
ret
adc
je
inc
aam
stc
jae
lss
es
clc
popf
out
xchg
jne
call
icebp
add
frstor
adc
ds
imul
sbb
fists
movsl
mov
pop
repnz
jae
mov
adc
in
int
or
data16
inc
inc
test
add
push
outsb
pop
adc
in
fisubrs
fadd
inc
xchg
rorb
and
cmc
add
push
movsl
sub
loop
jbe
inc
repz
cmp
js
mov
jmp
sub
mov
in
jl
out
test
aaa
iret
mov
jg
xor
mov
jbe
xor
call
push
pusha
jbe
inc
inc
out
stos
cmpsb
aam
xchg
in
cmp
enter
daa
sbb
add
enter
and
cmp
aaa
lahf
xchg
mulb
cwtl
ja
lahf
sarl
subb
lret
out
jmp
idiv
les
incb
js
shlb
lret
fimuls
lcall
dec
fdivl
stc
adc
repnz
outsl
gs
mov
pop
es
add
cmp
fbstp
mov
push
shll
frstor
sub
lcall
hlt
test
mov
sub
inc
mov
sarb
in
xor
mov
adc
pop
ss
xchg
ret
cmp
xchg
sbb
mov
js
xor
jmp
or
jne
push
movups
jg
jno
aas
lods
insb
outsl
sbb
aas
adc
xor
pop
insl
adc
cmp
adc
lods
adc
xchg
mov
out
push
lea
mov
stos
mov
or
sar
orb
push
xchg
loopne
push
push
pop
cmp
inc
inc
nop
jbe
cli
fs
flds
cs
pop
es
cmp
mov
jns
aaa
hlt
inc
adc
jae
jl
ret
jl
cs
lret
in
and
mov
adc
xchg
jb
lea
mov
stos
jecxz
lock
insl
insb
inc
xlat
neg
call
add
leave
mov
cmpl
dec
fldt
cmc
pop
inc
xchg
inc
lcall
mov
ret
scas
jnp
rol
mov
inc
lret
nop
cwtl
aad
cmpsb
mov
outsb
push
mov
mov
idiv
fsts
out
ret
fmuls
push
dec
pusha
lock
adc
rcrb
cmc
addr16
inc
adc
or
es
and
insl
sub
push
dec
sbb
mov
ljmp
ret
lods
fidivl
mull
and
in
ret
cmp
inc
lea
mov
ds
pop
cwtl
cmc
int
hlt
adc
xchg
ljmp
rcrl
mov
les
out
mov
cmpsb
xchg
adc
push
test
ja
add
enter
xorb
jnp
fs
xchg
or
xchg
sub
shll
inc
inc
xchg
sbb
in
fwait
push
icebp
das
push
inc
inc
xchg
add
xor
out
bound
addr16
dec
mov
movsl
test
ja
mov
mov
xorl
add
mov
repz
mov
stos
mov
test
mov
sub
xor
jmp
sbb
or
xor
push
enter
outsb
hlt
or
jno
addr16
je
outsl
das
jecxz
sti
mov
sarb
aas
xor
dec
fsubp
and
aas
adc
ret
pop
pop
lock
cmp
inc
test
jmp
sbb
mov
pop
fnstcw
xchg
push
adc
sbb
ret
dec
imul
out
push
inc
arpl
adc
mov
repnz
fxch
xor
adc
arpl
sahf
inc
out
out
or
loope
rolb
lods
sbb
data16
inc
jb
int3
mov
and
fimuls
and
mov
test
xchg
movsb
push
mov
push
jge
mov
out
stos
jmp
cmp
cmpsb
xorb
sub
jbe
cmpsb
test
inc
xor
jecxz
and
mov
mov
lods
scas
mov
sub
sbb
rolb
in
pop
push
test
daa
sbb
push
or
and
sub
xchg
mov
iret
lds
stos
lcall
xor
lahf
lock
cmpb
addr16
stc
push
xor
mov
cmp
mov
lcall
imul
inc
ja
mov
xchg
adc
xchg
bswap
popl
mov
add
mov
rclb
push
nop
cmp
inc
test
js
andb
lret
jl
mov
mov
in
adc
test
scas
movsb
orb
jo
pushf
sbb
enter
sub
lcall
std
jbe
ficompl
cmp
inc
add
idivl
or
sbb
xor
test
mov
adc
cmp
cmc
inc
fwait
sub
lcall
adc
cmpsb
imul
les
push
int
cbtw
cltd
imul
imull
cmp
jbe
out
sbb
fsin
push
xlat
jae
and
loope
pop
pop
jbe
inc
mov
sbbb
in
div
shlb
fs
inc
push
stc
jle
pop
ljmp
pushf
daa
sti
jmp
mov
jns
addr16
gs
in
fmuls
xchg
jb,pt
cwtl
sub
sub
je
jne
jecxz
mov
outsb
lea
mov
call
jg
pop
mov
jl
adc
ret
dec
lods
xchg
fcomps
pop
pop
or
inc
push
mov
inc
mov
data16
and
in
mov
jp
jnp
scas
and
rcll
ret
sub
mov
sbbb
or
mov
mov
xchg
lret
pop
adc
push
std
add
lock
or
das
nop
cmp
imul
shll
aam
sbb
sbb
insl
adc
push
cmpsl
pop
inc
mov
gs
push
popa
sub
mov
xchg
lock
xchg
xchg
pop
add
add
mov
jbe
sbb
or
push
xor
das
mov
xchg
sub
fstps
notl
pop
xor
xor
pop
and
push
test
dec
pcmpeqb
xor
mov
outsl
sarb
call
dec
js
jae
frstor
cmpsl
xchg
orl
fwait
test
mov
add
pushf
dec
insl
jmp
lahf
bound
outsb
or
jae
in
add
xchg
int3
stc
mov
test
mov
pop
stos
mov
jp
sbb
mov
mov
push
sbb
test
ljmp
mov
out
addr16
jbe
inc
lods
mov
sbbl
out
movl
or
jns
addr16
adc
adc
sub
lods
jnp
popa
cwtl
jle
push
nop
in
sub
pusha
pop
adc
ret
popa
pop
daa
andl
dec
in
cmp
pop
popf
cmp
sub
xchg
fiaddl
push
sbb
sbb
push
scas
adc
push
mov
adc
dec
iret
imul
xchg
imul
inc
imul
push
jb
inc
bnd
or
pop
lahf
mov
pop
inc
or
xchg
add
sbb
inc
sbb
fidivs
push
faddp
ret
mov
pop
adcl
repz
fists
jbe
or
jge
and
out
ljmp
and
and
dec
dec
adc
xlat
test
ds
scas
jg
inc
push
ficoml
push
push
mulb
mov
popa
pop
fisubs
push
xchg
xor
adc
daa
pop
jb
push
sti
mov
aaa
rolb
cmp
in
ds
out
or
pop
and
and
add
adc
push
sbb
push
push
xor
jl
clc
pop
addr16
sahf
js
mov
test
push
sbb
pop
sub
sub
shlb
inc
mov
xor
mov
cmp
mov
int
rorb
sbb
sbb
mov
lret
inc
sbb
sbb
enter
flds
cmp
shl
imul
test
adc
lods
dec
ss
jo
fdivr
je
idivl
inc
inc
cli
dec
decl
cmp
sub
into
sbb
and
cmc
outsb
into
outsl
xlat
xchg
jns
out
insb
xor
inc
lods
adcb
out
add
push
mov
loopne
jne
jb
call
sub
push
in
loope
js
leave
jnp
jne
stc
gs
aad
aam
cmp
incb
mov
xchg
flds
faddp
out
xchg
xchg
repz
dec
lret
xchg
lea
mov
xlat
cmp
xchg
adc
adcb
push
mov
scas
pop
ss
enter
sbb
jb
xlat
rorb
pop
je
cmc
push
jecxz
xchg
in
jae
lock
and
incb
xchg
subl
lcall
xchg
bound
shlb
iret
aas
ret
dec
pop
mov
xor
and
and
shll
mov
int
cld
std
pop
in
or
dec
sub
adc
cld
das
std
jne
int3
add
mov
scas
add
jmp
stos
das
outsl
outsb
repz
lock
push
aam
inc
push
es
fisttpl
insl
cli
push
add
stc
repz
push
add
ljmp
ret
lods
pushf
jecxz
push
dec
dec
mov
mov
jge
sbb
mov
add
mov
cltd
mov
and
dec
stos
push
fisubrs
fstp
jp
or
push
xchg
xchg
push
sbb
pop
pop
out
jp
sbb
push
pop
fimuls
rcrl
or
push
js
sbb
les
xchg
fs
dec
fistps
pop
lods
xlat
xchg
or
inc
outsb
testb
fwait
mov
mov
mov
aam
pop
divb
mov
aas
decl
mov
jns
cmp
mov
sahf
xorl
fisubl
cwtl
xor
jp
xchg
inc
mov
cmpsb
enter
insl
mov
sbb
jne
sub
inc
jmp
xchg
fsubrs
xchg
scas
jnp
sub
out
out
cmp
sub
lock
pop
stos
push
lock
sub
xor
mov
jle
jecxz
in
add
filds
and
ret
or
add
inc
cmc
lods
movsb
jae
jno
push
outsl
jecxz
popf
rolb
push
fdivs
and
sbb
dec
subb
sub
rol
jmp
lods
xchg
iret
lret
repnz
leave
and
hlt
adc
fs
cmc
ja
or
xlat
or
pop
or
add
int3
mov
fstp
push
jne
stc
rcr
xchg
mov
stos
xchg
xchg
cmp
mov
daa
jbe
fwait
mov
xor
sbb
sub
push
cmp
dec
push
dec
test
lds
cltd
cmp
scas
pop
enter
xchg
sbb
sarl
lock
cmpsb
pop
xor
enter
daa
push
repz
adc
add
push
cmp
sub
stos
shld
lods
push
imul
lcall
mov
xchg
xor
jp
aas
pop
mov
js
or
lea
jb
mov
mov
dec
sub
mov
adc
dec
xor
outsb
mov
cltd
or
inc
std
and
mov
enter
call
sub
ret
test
outsl
sarl
and
lret
mov
test
mov
cmpl
dec
cwtl
stc
lcall
adc
inc
idivb
mov
leave
div
lds
cli
adc
jl
lock
cmp
into
add
mov
push
outsb
sub
lds
adc
stc
push
imul
sti
fildl
xor
adc
addb
mov
fsubrs
scas
mov
dec
adc
js
add
cwtl
popa
leave
gs
shl
outsl
rcrb
mov
fnstcw
push
cli
lcall
push
pusha
pop
sbb
mov
push
xlat
ja
test
outsl
call
push
xor
xor
aad
pushf
xchg
nop
mov
cmp
jb
dec
dec
dec
pop
sub
jecxz
int3
push
jbe
cli
lea
shr
xchg
pop
outsb
jge
mov
cmpl
sub
lcall
sbb
mov
insb
aas
bound
mov
call
jae
shll
rorb
std
add
negb
pop
lret
es
cmp
push
mov
push
adc
inc
add
dec
mov
or
aam
ret
mov
ret
out
insl
loope
cmp
or
sbb
dec
sbb
popa
pop
push
in
pop
and
stos
mov
xchg
mov
pop
ds
mov
out
insb
jne
out
test
mov
cmp
mov
inc
jbe
movsl
sub
popf
sbb
mov
pop
mov
ret
in
out
fnsave
mov
cmp
call
xor
pop
fimuls
pop
xchg
and
cmp
mov
xchg
jge
dec
inc
pop
add
mov
std
mov
or
push
popf
fwait
loop
adc
cs
or
shlb
inc
ljmp
mov
bound
xor
test
in
std
adc
fs
mov
add
inc
pop
xchg
mov
ja
clc
sbb
mov
mov
mov
mov
jb
fdivl
loop
mov
mov
out
and
shll
xor
xchg
xchg
jns
roll
fbld
stos
sub
jmp
test
stos
enter
inc
or
insb
add
jnp
lock
pushf
mov
pusha
cmp
xor
push
jp
pop
xchg
and
jae
outsb
lock
xor
in
popf
mov
fnstsw
pop
stos
push
fisubrl
inc
push
sbb
dec
arpl
mov
scas
adcl
adc
mov
repnz
icebp
add
ficoml
push
arpl
mov
clc
in
add
push
adc
inc
cmp
xlat
xlat
add
rolb
int3
ja
mov
jecxz
fdivp
in
je
pop
inc
add
xor
mov
cmp
sub
dec
push
pop
jecxz
jbe
mov
mov
fs
cmp
jo
jl
out
dec
repz
push
or
xor
hlt
dec
test
cmp
xchg
stos
in
push
mov
push
inc
jg
jge
loopne
xor
aam
inc
enter
daa
adc
push
loope
adc
sub
mov
adc
out
and
setg
xor
addl
xor
mov
add
lea
push
vmread
pop
pop
sbb
sub
leave
cmc
mov
sub
xor
shlb
out
popa
sahf
sbb
sbb
mov
adc
cltd
lret
pop
push
cltd
push
xchg
int
shrl
pop
std
xlat
push
fwait
insb
pushf
rcll
mov
mov
sahf
call
mov
sbbb
jg
jle
loop
bound
fs
dec
adc
cmp
jb
mov
inc
cli
mov
xchg
xor
mov
sbb
fmul
jecxz
mov
xor
std
jmp
xchg
mov
sub
cmp
add
sbb
and
add
scas
mov
loopne
hlt
aad
sub
out
inc
in
mov
lahf
sti
daa
iret
out
mov
or
stos
pop
mov
jb
fsubrl
dec
les
inc
adcl
bnd
xlat
mov
fstpl
stos
sub
mov
popf
mov
in
mov
aad
xchg
jmp
jle
xchg
dec
fsts
jb
repnz
dec
mov
pusha
jecxz
dec
mov
lea
imul
movaps
mov
jge
adc
cmp
popa
pop
dec
add
inc
mov
mov
push
mov
lahf
jne
and
sbb
notb
mov
cwtl
shr
mov
icebp
jnp
and
mov
adc
inc
cld
test
sbb
mov
jmp
mov
mov
mov
faddl
shr
jb
sub
xchg
jge
inc
lret
ja
mov
mov
and
ljmp
pop
lods
jb
mov
movsb
aaa
cmp
pushf
dec
mov
pop
pop
jcxz
add
cltd
push
es
test
shll
shrl
push
fs
xchg
enter
loopne
hlt
xchg
out
out
sbb
ss
hlt
loope
pop
xor
fldcw
inc
stos
cld
xchg
cs
push
adc
dec
add
or
outsl
cs
jns
mov
lcall
test
jnp
xchg
jns
adc
aam
or
fcmovu
fwait
adc
mov
add
in
lret
enter
lret
loopne
jns
mov
xor
inc
popa
pop
mov
push
xchg
sub
jp
fwait
imul
pushw
dec
dec
push
push
pop
jne
popa
scas
mov
shlb
out
add
adcb
flds
inc
divl
orl
in
bound
sub
out
add
pop
mov
cmp
insb
insl
je
jnp
pop
data16
dec
xchg
in
int3
pusha
fcomp
filds
ret
push
pop
int3
out
inc
or
jae
mov
push
cmc
test
mov
insl
mov
push
mov
inc
xchg
push
fstps
and
imul
cmp
fs
pusha
mov
jg
mov
loop
sbbb
hlt
and
add
inc
sti
xlat
scas
or
int
icebp
inc
mov
adc
add
mov
pop
std
or
cltd
pop
add
out
loop
adc
dec
mov
rcrb
sti
inc
movsb
xchg
jmp
push
cmpsl
int
jbe
sbb
jge
scas
mov
aaa
cmpsb
jbe
cmp
lods
lea
clc
dec
bound
cli
xor
dec
insl
sub
push
sub
mov
inc
push
xchg
arpl
mov
mov
sub
daa
adc
dec
push
or
inc
sub
cmc
xchg
cmp
mov
pop
xor
push
lahf
insb
jno
orb
jmp
add
imul
pop
fsubl
vmread
sub
push
mov
lcall
dec
fmull
jns
sub
fisubrl
mov
xchg
rolb
stos
sub
cmc
add
fdivs
and
pushf
and
loopne
in
sub
out
mov
add
cmp
mov
sahf
mov
pusha
ret
cmp
jg
push
push
loop
lods
sar
or
fsubs
pop
adc
push
outsl
ss
cmp
sub
push
in
out
lret
sarl
mov
xor
cmc
bound
cli
xor
test
xchg
adc
push
adc
lret
push
adc
data16
aaa
lods
xchg
jmp
mov
xchg
repz
mov
mov
and
xchg
sti
sahf
add
fidivrs
add
movsl
jmp
pop
aam
push
inc
out
jle
push
aam
adc
sbb
sbb
sub
dec
sbb
lcall
rcr
aas
jmp
xlat
xchg
cs
rcl
xor
nop
pop
aas
mov
jb
int
dec
dec
mov
test
or
mov
jl
fs
ficoml
addr16
jnp
mov
sub
dec
pop
and
fistl
inc
inc
sub
push
aas
mov
mov
mov
ficoml
in
dec
pop
xlat
notb
into
test
jl
movsb
mov
pushf
xor
call
das
inc
lret
sbb
mov
mov
push
jle
cld
inc
lret
das
or
xor
mov
mov
aam
mov
mov
insl
scas
jecxz
dec
add
leave
cmpsl
adc
ljmp
xchg
lods
pushf
mov
fwait
push
and
in
scas
iret
pop
jl
mov
cltd
push
out
test
aad
mov
ficoms
push
daa
stc
mov
clc
sbb
notl
ret
shr
rorl
cltd
pop
fimuls
pop
out
mov
pop
mov
xchg
and
lock
xor
repnz
or
mov
popf
or
adc
and
mov
dec
aaa
inc
xor
jnp
mov
jbe
inc
stos
push
je
mov
or
jmp
cmpsb
bound
add
insl
inc
in
inc
arpl
xchg
sarb
or
push
jp
das
lcall
iret
mov
aad
out
dec
cmp
jne
inc
pop
mov
add
out
jecxz
pop
xchg
push
mov
mov
sbbl
jns
or
sub
loope
loopne
jae
and
outsb
dec
or
fsubrs
test
lock
jae
cmp
arpl
ret
push
pop
add
inc
push
mov
gs
mov
adc
mov
xchg
push
enter
or
sbb
int3
daa
imul
scas
pushf
pop
cmp
inc
fists
imul
rorl
xchg
jo
leave
arpl
xor
lods
push
cmp
cld
or
sbb
int3
dec
test
pop
sub
iret
fidivrs
xchg
lds
pop
cs
sarl
arpl
lcall
sti
mov
jge
cmpsb
aas
sbb
loope
aaa
gs
cmp
pop
dec
jno
or
fmull
imul
xor
stos
mov
sub
test
and
inc
popf
jno
cmpsb
out
ds
mov
out
daa
adc
cmp
xchg
out
sub
pop
cmp
or
movsl
es
cmp
lahf
mov
sbbb
adc
pop
into
xor
aad
pop
add
sarl
jnp
pop
inc
ror
lcall
rcr
mov
imul
aad
xchg
fldl
divb
push
adc
mov
xor
and
push
mov
inc
pusha
jp
pop
jnp
pop
sti
mov
lret
dec
sarl
mov
rcll
sahf
inc
push
inc
test
hlt
adcb
scas
loop
sub
inc
mov
adc
adc
cmp
call
arpl
cli
sbb
stos
cmp
cmp
xchg
cmp
into
test
sbb
xor
sbb
jns
adc
fadds
sbb
mov
add
dec
inc
data16
rcl
jl
mov
xchg
repnz
lea
repnz
incb
xlat
fisttpll
loopne
loopne
pop
repz
push
inc
add
sub
sbb
rclb
insl
in
cmp
mov
xor
sub
adcl
jecxz
pushf
jle
cwtl
jmp
iret
cltd
cs
into
lret
nop
xor
add
xchg
shll
std
fdivl
les
je
aas
pop
jecxz
or
and
inc
lret
add
mov
push
xor
add
jl
inc
fcmovnb
xor
pop
mov
mov
mov
out
cmp
sbb
aas
cwtl
mov
mov
gs
mov
popf
lods
insl
neg
jmp
push
cwtl
aaa
daa
ljmp
inc
xor
mov
cmp
gs
stc
pushf
mov
jg
lock
xchg
das
jmp
mov
sub
les
pop
aaa
aam
mov
xchg
insl
xchg
repnz
dec
std
pushf
mov
adc
fldl2e
movsb
xor
push
add
ss
stos
add
xchg
pop
fwait
adc
xor
mov
test
sub
hlt
push
ljmp
clc
push
jp
xchg
fs
and
shll
bts
fsubr
push
jne
xchg
mov
ja
cmovg
jl
repnz
or
sbb
xor
lock
mov
mov
test
lcall
sti
jl
inc
lret
or
bound
fwait
outsl
fs
xor
add
das
push
fcmovne
jns
and
out
push
xchg
push
mov
lret
mov
pop
fnsave
pop
jae
xor
sbb
mov
inc
inc
push
dec
sbb
jne
mov
out
ret
xchg
and
or
sbb
pop
xchg
fcmovb
adc
push
inc
add
fmull
addr16
add
test
xor
test
adc
push
pusha
push
ret
xorb
mov
hlt
inc
and
jae
add
jnp
nop
popf
add
ja
test
jns
aam
cmp
xchg
sbb
imul
mov
sbb
mov
ret
add
es
cmp
mov
or
or
ret
sbb
jae
or
sahf
sbb
shlb
int3
cmp
rcrb
pmaxub
or
hlt
in
clc
rorb
mov
div
jmp
movsb
stos
xchg
push
inc
outsb
pop
jbe
push
test
xchg
xchg
aam
and
sbb
and
inc
jno
xchg
and
jno
cmp
fsubl
xor
add
mov
xchg
in
adc
sub
mov
in
mov
lods
daa
adc
xchg
push
dec
fucom
stos
add
dec
cmp
xor
jl
jmp
and
lods
sub
xorb
negb
sub
std
xor
dec
in
pop
sub
hlt
sbb
xor
into
add
subb
jb
outsb
cmp
adc
mov
mov
or
outsb
inc
pop
and
fs
push
mov
std
ret
sub
xor
lret
xor
adc
jmp
aam
call
xchg
std
xorb
xlat
loop
fldt
lods
jns
adc
std
ss
cmpl
pop
jmp
fsubs
hlt
sbb
dec
sbb
add
or
into
mov
lock
js
mov
mov
xor
inc
insb
adc
ljmp
stos
mov
adc
icebp
lahf
jne
fcmovne
cmp
in
clc
in
sti
xor
and
mov
dec
hlt
add
fucomi
fwait
pop
adc
arpl
mov
mov
rep
mov
xchg
xor
xlat
xlat
jae
lcall
xchg
adc
les
outsb
jmp
mov
aad
fiaddl
prefetcht0
mov
jb
and
je
arpl
jecxz
push
pop
movb
in
call
jns
je
adc
fldl
cs
xchg
pop
xor
push
inc
push
and
fidivs
mov
lock
shr
inc
test
sbb
inc
std
mov
and
mov
and
cld
push
and
mov
adc
mov
jg
lret
shlb
xor
bnd
aam
add
or
sub
fmull
mov
cmpsl
adc
ljmp
sbb
dec
add
mov
jmp
pop
mov
dec
mov
test
fisubrl
xchg
adc
lods
sbb
fnstsw
data16
mov
sub
sar
daa
les
nop
stos
dec
add
imul
inc
push
cmpsb
outsb
jg
scas
outsl
lret
xor
loop
cmp
in
xor
sub
mov
mov
inc
push
test
pop
xchg
fs
inc
popa
or
mov
sahf
and
mov
add
lcall
jmp
daa
jns
ret
mov
jb
mov
mov
cs
mov
xorl
and
mov
jo
mov
arpl
dec
nop
jne
xor
and
divl
jmp
movsl
testl
xlat
sub
in
jno
ds
xchg
and
sbb
insb
scas
idivb
aas
leave
jle
or
push
add
pop
fbld
mov
pop
jno
outsl
inc
sub
aam
adc
adc
mov
adc
hlt
xchg
outsl
jl
sbb
fwait
jg
sub
hlt
push
xor
dec
adc
bnd
ror
out
hlt
push
push
lea
repnz
add
jns
pop
loope
push
cmp
push
or
repz
addr16
push
int3
and
sub
adcb
jnp
shlb
lods
in
and
in
xchg
movsb
xor
and
jbe
ds
jge
aas
push
aaa
jecxz
test
push
cld
mov
cmp
pushf
and
dec
scas
adc
push
xchg
and
xor
pusha
dec
inc
scas
mov
pushf
add
mov
adc
in
nop
and
jo
xchg
cmc
sbb
daa
adc
push
je
loope
dec
jae
jmp
sbb
ds
add
and
and
inc
aas
fstps
pop
adc
add
outsl
fbstp
es
test
push
imul
js
push
es
ret
cwtl
dec
lcall
jae
or
pop
sub
outsb
fwait
lods
ja
cmpsl
idiv
rclb
and
mov
movsb
xchg
mov
pop
mov
movsl
sub
int
jg
sub
push
lock
stc
push
ljmp
rorl
sbb
sub
test
dec
or
jne
cmc
in
loop
shlb
lcall
scas
jne
cmp
pop
cmp
mov
xorb
pop
jnp
cmp
les
into
outsl
mov
inc
xor
xchg
add
adc
lds
or
adc
call
mov
dec
fyl2xp1
mov
out
xchg
fisubrl
dec
jecxz
mov
arpl
mov
inc
jmp
dec
loopne
add
outsb
inc
sub
neg
mov
les
stos
xor
outsb
cmp
mov
push
mov
mov
pushf
aam
jno
mov
outsl
dec
aad
arpl
nop
ljmp
jb
xchg
mov
je
fstpt
test
call
clc
jmp
mov
fwait
xorl
leave
je
and
mov
inc
mov
shrb
push
or
and
not
sarl
sbb
pop
xchg
aas
std
inc
mov
cwtl
lods
scas
cmp
in
xchg
mov
insl
fnstsw
xor
dec
lret
popw
mov
mov
or
das
test
mov
sub
aam
aam
sub
ret
addb
insl
fs
and
mov
inc
lods
push
xchg
mov
xor
cli
mov
stos
add
inc
cltd
cli
aam
adc
ljmp
push
frstor
clc
int3
out
xchg
loop
pop
sbb
loopne
rcll
repz
jmp
out
int3
pslld
cmpl
xor
push
xor
mov
mov
cmpsb
sbb
mov
test
or
xchg
mov
dec
inc
clc
bound
je
adc
pop
mov
inc
pop
xor
pop
jecxz
incl
bound
cmpsl
and
fs
std
test
es
pop
adc
cmp
scas
ja
xchg
lcall
mov
and
jne
inc
inc
mov
adc
xchg
lret
jmp
jo
addw
out
je
sub
shl
insl
addr16
enter
sti
and
ds
jnp
mov
jg
pop
xor
ffreep
mov
ret
std
pop
test
dec
inc
aaa
mov
pop
push
add
mov
dec
pop
cmpsb
mov
push
stos
dec
fisubrl
jmp
xchg
fs
sbb
rcrl
sbb
ljmp
dec
mov
pop
filds
add
xor
leave
in
mov
lret
and
inc
pop
or
ret
int
push
mov
sti
pop
add
xchg
sbb
push
jmp
adc
lds
std
mov
mov
sbb
ret
cmp
mov
movsb
shlb
jecxz
loope
addl
sbb
cmp
or
inc
sub
or
je
in
out
jo
mov
mov
lahf
aam
test
sbbl
dec
leave
and
push
pop
or
xchg
lods
daa
adc
cmp
les
loope
scas
xor
xchg
cmp
enter
das
movsl
cmp
out
and
jo
lahf
call
xchg
sbb
sbb
shll
pop
js
pop
js
push
inc
pop
add
lcall
jb
mov
fisubrs
xor
jge
out
sub
outsb
xchg
mov
inc
int
imul
mov
pop
xchg
and
push
loope
test
popf
int
in
sub
xor
js
in
pop
mov
roll
mov
xchg
inc
sbb
mov
sahf
cs
test
push
and
mov
loop
fidivl
fs
push
mov
repnz
gs
in
jno
sub
mov
fidivl
das
push
xchg
cmp
sbb
push
sahf
mov
xor
aam
lock
aaa
adc
ficoms
pop
or
mov
js
xor
nop
out
jne
mov
into
inc
popa
sti
xchg
test
gs
dec
pop
loopne
ss
pop
push
daa
inc
cmp
mov
ret
lret
push
les
lcall
adc
sbb
sbb
xlat
icebp
pusha
mov
andb
jb
enter
push
jmp
dec
loop
ja
or
lahf
push
ret
arpl
mov
dec
sub
int
inc
mov
mov
rorl
jbe
lods
ja
test
leave
xchg
int
add
je
push
scas
and
or
inc
lea
aas
sbb
cmp
xor
test
mov
ret
enter
shlb
mov
inc
mov
and
aad
fimuls
push
popa
jno
push
xor
rorb
add
sub
sarb
ret
adc
andl
dec
ja
dec
out
test
shr
std
out
popa
in
lock
mov
fwait
mov
mov
or
mov
pusha
out
pop
cltd
xor
test
cs
fcompl
push
xor
jbe
mov
mov
xchg
and
jb
dec
call
pop
mov
int3
stos
sub
push
push
pop
cwtl
jnp
insb
inc
inc
xor
gs
xor
cwtl
stc
mov
test
or
test
sahf
cmpsl
xchg
push
fiadds
loopne
or
in
fwait
cld
repz
push
add
and
add
jmp
fistpl
jns
test
in
enter
aas
mov
cli
mov
pop
imull
jp
xorl
or
mov
xchg
loope
dec
les
mov
mov
mov
xchg
into
out
pop
mov
pusha
jmp
cmp
adc
icebp
adc
or
mov
outsl
pop
xchg
and
jl
insb
test
fnstsw
movsb
jle
testl
pusha
fbstp
mov
lret
fistps
inc
push
jns
les
aam
jne
bound
xchg
aaa
fcmovu
add
xchg
sbb
mov
adc
ret
insb
mov
iret
arpl
pop
leave
cmp
pushf
in
fisubl
xchg
addb
rorb
xor
repnz
aaa
dec
outsb
or
mov
repnz
stc
pop
push
pop
call
mov
clc
rcrb
sbb
scas
xlat
jecxz
mov
fsubl
pop
push
jbe
inc
data16
push
leave
aaa
popa
les
mov
stc
cmp
repnz
dec
lret
inc
push
pop
xor
push
inc
adc
jb
mov
dec
cli
jnp
fld
ljmp
or
pminsw
aaa
out
loope
cmp
cmp
cmp
shll
cmpsb
out
mov
imul
testl
int3
xchg
pop
lahf
mov
movsl
jl
pop
inc
outsl
je
push
pop
fcompl
xchg
and
outsb
popa
and
adc
dec
scas
inc
fwait
jmp
xchg
adc
xor
dec
push
fadds
stos
lret
inc
int
sub
fwait
pop
imull
lret
dec
rcr
lea
bound
test
pushl
jg
mov
loop
daa
fwait
enter
xlat
lahf
adc
aas
ss
jle
fcom
lret
xor
fsqrt
out
cltd
xor
dec
cmp
jno
into
xor
push
sub
int
enter
xchg
adc
test
add
outsl
adc
dec
mov
out
or
and
cmp
decb
xchg
mov
pop
outsl
iret
cmp
fwait
mov
les
repz
lcall
or
cmp
xlat
xor
jp
xor
test
jmp
push
fldt
fcmovu
insl
aad
mov
cli
dec
adc
jb
and
mov
enter
lds
mov
iret
fnstsw
call
testb
pusha
out
ss
out
push
fstpt
rcrb
insb
inc
int
mov
aas
mov
or
jmp
fimuls
mul
push
std
xchg
roll
inc
scas
pop
mov
sbb
fxch
inc
xchg
stc
mov
jbe
pop
pop
add
ret
dec
ds
test
rcr
mov
sub
je
aam
push
ret
mov
fcomip
insl
xor
mov
jmp
mov
popa
sti
in
xchg
lods
hlt
js
mov
jbe
xchg
and
repz
and
pop
mov
push
cltd
push
enter
bound
lods
or
clc
inc
mov
sbb
inc
outsb
mov
pop
xor
mov
or
aaa
lret
or
xor
push
loop
sahf
sbb
xor
int
mov
lods
fsubrl
pop
dec
sahf
test
enter
adc
scas
inc
addb
bound
sub
call
add
out
incl
inc
mov
in
cmp
lea
xor
mov
and
ret
add
gs
add
push
dec
cmpsl
xlat
jne
mov
cli
es
out
ds
xchg
jo
push
jmp
push
dec
stos
andl
je
lcall
outsb
push
test
loope
cmpsl
insb
out
sbb
cltd
add
jle
pop
inc
in
mov
or
incb
ret
pop
pop
push
cli
cli
inc
dec
outsl
jae
iret
sub
xchg
popf
pushf
push
js
jno
push
push
rolb
fimull
mov
lahf
imul
cltd
scas
mov
adc
cmp
bnd
leave
fistpl
hlt
out
insl
arpl
dec
mov
fmuls
xchg
push
lea
push
and
popf
pop
or
sub
int3
in
js
pop
add
fisubrs
xchg
lds
pushf
scas
shlb
scas
and
adc
inc
xor
inc
push
sbb
xchg
jge
rcll
sbb
mov
adc
push
pushf
jl
std
inc
dec
cld
dec
pop
push
inc
sub
jo
fistpll
inc
loopne
test
sbb
sub
add
jne
shr
and
inc
insl
daa
push
mov
push
cs
push
ljmp
movsl
je
or
movsl
dec
sub
pop
lahf
es
xor
add
imul
pop
mov
js
outsb
dec
pop
andb
lcall
fmull
sbb
mov
dec
notl
and
sbb
out
imul
movl
push
scas
lret
dec
pop
add
outsb
je
pop
jbe
jo
inc
mov
push
mov
shrl
je
faddl
sbb
jg
rcrb
pop
stc
push
add
fpatan
js
mov
mov
cmp
outsl
sahf
imul
arpl
xor
push
lods
or
gs
sbb
cmc
or
and
sub
xchg
outsl
scas
hlt
jge
pop
mov
imul
sbb
lods
je
data16
stos
lods
dec
jmp
out
fs
insb
inc
push
in
movsb
notb
sti
lock
das
mov
push
imul
loopne
shll
mov
inc
popa
mov
and
push
mov
imul
pop
daa
cmp
add
adc
cld
pushf
aad
data16
and
aad
push
mov
jnp
push
dec
jb
mov
pushf
xor
jecxz
lea
jecxz
sbb
aam
inc
and
jne
arpl
imull
dec
insb
fldt
dec
dec
inc
push
and
ret
adc
fisubl
mov
rclb
imulb
jp
std
cmp
and
fmulp
jno
pushl
mov
repnz
cld
mov
and
mov
mov
lret
fiadds
lock
hlt
shrl
fiaddl
sub
mov
inc
ret
das
pop
xchg
aaa
mov
sbb
cmpsl
or
jne
popa
adc
sahf
lods
pop
mov
mov
cltd
clc
call
mov
cmova
xchg
cltd
lahf
fninit
test
das
jmp
mov
sbb
xchg
lahf
sub
sbb
inc
mov
push
jge
pop
loopne
jmp
or
out
cmc
popf
add
adc
cwtl
cvtpi2ps
leave
or
push
inc
mov
scas
xchg
sbb
jle
fildll
mov
xchg
or
inc
mov
mov
fwait
pop
rorb
push
inc
mov
jmp
stos
pop
and
and
pop
jns
push
sbb
sahf
add
fsubr
jae
sbb
sub
stc
adc
cmpsb
push
xor
mov
inc
dec
mov
outsl
enter
cltd
inc
jne
enter
ror
out
sbb
pop
movsb
jmp
sar
filds
imull
bound
ret
xchg
pop
insl
bound
and
insb
jecxz
pop
inc
sub
dec
into
mov
in
adc
pusha
adc
xor
ljmp
inc
pop
mov
jae
in
sbb
dec
add
popf
ret
mov
dec
push
paddusb
inc
push
push
lret
cmc
mov
sub
imul
insb
scas
out
aam
push
push
xlat
mov
iret
and
repnz
stos
hlt
xor
xor
inc
pop
inc
adc
call
push
xor
dec
mov
ret
push
int3
iret
sarl
push
cli
push
lds
sub
sub
jl
cld
ljmp
shlb
sarl
mov
cmp
popf
aaa
ffreep
sub
jno
inc
loope
dec
cltd
push
dec
imul
inc
mov
jo
lea
push
sbb
push
in
mov
cmpsb
clc
push
in
or
test
daa
or
sub
sub
jnp
cmp
sub
mov
lahf
inc
cmpsl
sahf
orb
out
add
cvtpi2ps
bound
mov
in
mov
pushf
pop
mov
lock
push
xor
cmp
add
and
adc
cmp
pop
jmp
and
in
out
and
mov
push
mov
stos
int
insb
xchg
jmp
adc
lret
cltd
rorl
stc
mov
add
sahf
pop
pop
test
aas
pop
jg
mov
or
push
fs
add
push
ss
test
jae
scas
mov
cli
dec
iret
inc
xor
enter
adc
cmc
ror
or
sub
outsl
lea
sub
loop
adc
imull
add
dec
cmp
lods
out
sbb
in
xchg
test
sbb
mov
prefetch
sarl
gs
mov
loop
sbb
sub
inc
je
jl
push
sahf
and
mov
push
xchg
sub
aam
lret
xlat
scas
push
jge
fcomps
pushf
or
jmp
mov
mov
jo
nop
push
je
dec
shll
jb
jl
dec
mov
fadds
jecxz
mov
adc
out
jno
hlt
sub
adc
mov
pop
dec
lds
pop
pusha
loope
inc
fstpt
and
stc
jg
mov
push
ret
cmp
adc
cmp
std
jecxz
adc
mov
mov
mov
leave
xor
lret
and
cmp
movsl
pop
lock
aaa
das
and
xor
sub
movsb
stos
aam
sti
pop
ret
mov
test
insl
add
pop
dec
fucomip
cwtl
cmpsl
or
test
push
dec
das
popa
sub
mov
mov
jge
mov
push
addb
cltd
out
icebp
cltd
pop
cmp
andb
push
mov
clc
mov
mov
xchg
shrl
xchg
pop
mov
xchg
pushw
adc
insb
lret
cmpsb
mov
or
and
mov
push
dec
in
inc
test
xlat
testl
push
xor
and
jge
mov
push
jmp
addr16
cmp
inc
and
bound
sbb
dec
mov
sub
xchg
sub
mov
xchg
sub
sub
push
push
push
jp
in
mov
cltd
xor
popa
fmuls
dec
add
cmp
add
xchg
push
aad
jmp
pushf
add
and
sub
mov
sub
and
fwait
push
insb
lds
jnp
pop
xchg
jle
add
pusha
mov
mov
ret
sbb
and
arpl
jae
dec
aaa
push
or
fldcw
out
je
dec
hlt
inc
mov
sbb
lahf
ja
aam
jle
push
jmp
mov
iret
andb
sbb
sbb
leave
test
jge
fsubs
sbb
adc
or
movsl
sub
inc
mov
test
lret
add
xor
mov
lret
jns
mov
lds
shr
adc
push
inc
sbb
mov
jbe
xor
jge
push
mov
not
es
sahf
dec
lret
push
adc
mov
jl
jae
add
push
push
fwait
lods
xor
daa
push
adc
adc
stc
push
jmp
adc
scas
aam
inc
xchg
cmpsb
jnp
pop
in
repz
imul
pop
push
xor
out
sub
jno
cmp
cs
sub
movsl
push
cmc
sbb
ja
mov
fs
jb
mov
or
xor
add
ffree
cmp
js
syscall
pop
decb
test
fdiv
pusha
sahf
cmpsb
sub
inc
mov
adc
fisubl
and
les
inc
push
jecxz
xor
aad
mov
ror
sbb
sub
pop
je
pop
lret
sti
rcrl
repnz
mov
adcb
jg
jg
loop
dec
daa
stc
shlb
sub
push
mov
cmp
add
xor
cli
jg
xchg
xor
mov
or
cwtl
out
into
fisubs
dec
xor
mov
outsl
insb
test
adc
cmpsb
aaa
imul
sub
mov
lods
int
jo
cmp
cmpsb
sub
lahf
dec
in
jp
dec
sti
dec
lods
sahf
testb
mov
loopne
shrb
int3
filds
xchg
fstps
in
pop
repz
xchg
out
jmp
sbb
add
mov
pop
dec
push
icebp
pushf
sub
mov
add
and
nop
xor
dec
xor
inc
clc
icebp
dec
add
and
xchg
mov
call
jae
nop
mov
ja
andl
mov
add
mov
inc
stc
pop
out
cwtl
mov
mov
push
outsl
jns
xor
add
scas
lods
hlt
std
mov
lds
jge
dec
mov
mov
shrl
mov
das
inc
mov
mov
lock
dec
das
add
adc
sub
dec
ret
dec
call
bound
dec
sahf
dec
fidivrl
cmpsl
or
test
leave
aam
popa
inc
sbb
cmpb
or
and
les
out
lods
stos
nop
cltd
or
sbb
aas
push
aaa
frstor
clc
add
repz
sbb
mov
add
insl
stos
out
nop
out
mov
sbb
push
enter
call
dec
xchg
or
push
nop
xor
gs
mov
je
dec
push
cmp
xchg
cwtl
addb
push
or
aam
fwait
mov
dec
xchg
add
loopne
mov
pop
lcall
pushf
and
mov
xchg
jp
jmp
mov
jecxz
leave
ja
stc
jp
sbb
mov
dec
mov
cmp
jle
push
mov
pop
dec
out
fistl
in
xchg
jmp
divl
addr16
fiadds
std
sbb
mov
jbe
stos
inc
pop
arpl
es
pop
insb
xor
jnp
lods
lea
inc
or
jl
in
dec
push
or
adc
loopne
outsb
push
mov
hlt
jb
ror
cmp
and
lea
stc
xchg
jns
ds
jmp
mov
push
test
iret
fbld
repnz
hlt
enter
or
add
jbe
or
and
or
cmpsl
cwtl
or
fildll
pop
movsb
aad
ficoms
lds
xor
lock
sti
loope
cmp
dec
movsb
ja
mov
cmpsl
jbe
shl
pop
imul
pop
pop
inc
cmp
and
jl
dec
decl
insl
gs
jmp
mov
jo
es
scas
repz
mov
xchg
sahf
push
jp
test
cmpsb
decb
int
xlat
sahf
stc
daa
or
mov
dec
iret
ds
cmp
mov
enter
lods
movsl
pop
out
imul
mov
lahf
adcl
sbb
push
arpl
add
mov
cmp
js
mov
cmpsb
lcall
mov
sub
outsb
cmp
in
cmpl
mov
inc
pop
in
mov
push
mov
frstor
push
mov
or
ffreep
je
repz
lret
jae
mov
mov
sahf
pop
dec
xor
insl
iret
insl
jg
jbe
loop
sar
ja
stos
fs
cld
adc
cmpsl
mov
test
test
rcl
imull
aas
cli
mov
pop
xor
pusha
cmp
das
orb
xlat
xchg
into
rorl
popa
shll
cmp
icebp
adc
outsb
mov
adc
scas
push
add
sub
pop
pusha
lods
mov
bound
ljmp
mov
in
nop
sti
std
pop
inc
sbb
scas
addb
pop
jmp
out
inc
lcall
les
xchg
repz
and
xchg
mov
ja
movsl
push
lock
fcmovbe
sub
adc
lods
adcl
pop
scas
jmp
pop
jns
xor
aad
iret
ficoms
fs
xchg
cmpsl
inc
dec
jl
out
outsb
xchg
pop
jecxz
mov
icebp
lea
inc
call
repnz
mov
mov
fstpt
and
pop
cmpsb
loopne
inc
jmp
pop
add
mov
lds
mov
adc
jae
std
xor
mov
shrl
icebp
ja
lods
cld
xor
lret
add
mov
mov
das
jecxz
shlb
test
ja
pop
fnstsw
rolb
into
jns
dec
aad
mov
ljmp
js
mov
jnp
mov
loop
sub
xchg
outsb
in
mov
jl
test
dec
mov
in
repz
add
mov
dec
cmp
movsb
xchg
pop
sbb
sbb
stc
cmp
pop
mov
pop
loope
dec
stos
sub
out
push
shr
hlt
xchg
repz
mov
movsl
xchg
xor
pop
addr16
ljmp
mov
sbb
mov
dec
xchg
insb
xor
jo
or
mov
adc
das
test
aam
add
fisttps
adc
bound
pushf
mov
xchg
leave
and
jge
sti
mov
bnd
imul
mov
lods
cmpsb
mov
mov
xchg
sub
sarl
inc
dec
out
mov
data16
rclb
inc
xchg
xor
or
cmp
sub
mov
cmp
inc
fisubrs
cmp
les
jnp
ret
xchg
jle
jns
in
je
pusha
out
mov
jp
mov
pop
repnz
dec
inc
jns
add
mov
fdivrl
pop
xchg
adc
mov
ficompl
xchg
ror
stos
sbb
pop
and
push
sbb
es
adc
pop
iret
ds
mov
aas
cmp
adc
popa
inc
sbb
push
or
fwait
push
ret
pop
cwtl
or
pop
pop
int3
nop
push
das
pop
shll
pop
lds
sbb
and
mov
and
in
movsb
add
xchg
push
mov
ret
cmp
out
insl
aaa
sbb
cmpb
arpl
jne
leave
gs
dec
mov
xor
fstl
push
scas
shlb
push
xchg
insb
test
inc
or
cmpsb
adcl
enter
daa
or
movsb
push
push
jle
bound
cld
sub
xlat
test
popa
imull
xchg
sbb
movsl
gs
pop
and
mov
sbb
jnp
add
stc
insb
xor
mov
arpl
mov
jmp
pop
jl
adc
xchg
fdivl
pop
xchg
outsb
push
jnp
adc
nop
cmpsl
jp
jbe
das
mov
cmp
insl
mov
mov
and
lods
inc
push
mov
clc
cld
sub
jmp
lret
daa
ror
scas
mov
nop
sbb
xor
in
test
notb
orb
mov
stc
cs
xchg
fs
mov
jne
dec
cwtl
sbb
lret
jmp
jno
in
adc
cmp
cmp
jl
or
into
movsb
loope
cmc
sub
xor
jae
cmpsb
imul
int3
mov
adc
call
cli
fildll
xor
mov
jae
out
mov
push
dec
mov
lods
xlat
push
xchg
pop
or
lods
lret
and
or
xchg
and
adc
jnp
sbb
imul
pop
mov
push
adc
pushf
and
cs
daa
and
nop
out
out
out
push
dec
repz
dec
je
push
mov
lcall
call
jno
mov
push
lds
xchg
mov
inc
jo
xchg
inc
das
dec
sub
sub
push
pushf
mov
and
fidivs
divb
lods
std
fdivr
and
sti
mov
pusha
icebp
dec
jmp
lret
outsl
xor
mov
scas
xchg
lock
das
ret
sar
xor
sub
dec
pop
ret
imul
insl
mov
cmp
pop
add
scas
add
popa
outsb
fwait
jbe
or
inc
mov
and
adcl
add
rorl
jnp
push
test
pop
mov
or
push
lds
popa
clc
imul
popa
shll
sub
stos
out
xorl
xor
cmpsb
sub
xor
sti
xchg
or
inc
outsb
xor
ret
fbld
mov
int
test
inc
ret
jle
dec
xchg
cmovno
imul
mov
xchg
add
push
push
push
lcall
aam
jns
mov
cmp
and
inc
and
jl
ja
pop
out
jp
lcall
or
sub
sub
jne
pushf
adc
out
cltd
fildll
jge
jmp
std
adc
subl
inc
out
push
aaa
sub
scas
popf
or
lcall
push
std
push
insb
push
inc
jnp
popf
lcall
pop
mov
fistps
imul
test
jae
or
push
push
arpl
pop
aam
mov
or
fimull
scas
nop
clc
lahf
imul
dec
push
insl
pop
call
iret
popf
insb
push
adc
leave
cs
xchg
hlt
pop
xchg
sti
arpl
shr
inc
sbb
dec
or
push
inc
rolb
in
jb
mov
stc
mov
pop
add
ficomps
dec
sarb
mov
and
dec
cmp
sub
mov
or
sbb
jge
inc
push
sbb
ret
jge
jle
in
lea
cmp
xchg
dec
daa
push
sbb
scas
jmp
xor
cmp
arpl
or
test
adc
sub
in
test
test
daa
or
jmp
jno
sub
dec
inc
cmp
add
ds
push
movsl
insb
subps
dec
xchg
cmp
fildl
fs
out
test
xlat
adc
rorb
js
mov
lcall
mov
sub
push
mov
imul
aad
cld
mov
inc
and
adc
cmpsb
push
mov
lcall
icebp
adc
lcall
push
mov
pop
sbb
jns
sahf
mov
les
mov
jno
loop
cmp
cmp
adcb
daa
push
ss
push
push
cmp
ss
dec
imull
insb
mov
cmp
sahf
xlat
or
in
into
xchg
cmc
out
data16
out
andl
adc
mov
dec
adcl
ds
inc
or
lods
sbb
mov
mov
out
stc
mov
mov
adc
pop
push
push
mov
loopne
mov
fadds
xlat
cmc
flds
les
jl
xchg
aaa
sar
sbb
mov
jo
stos
fdivrs
adc
cs
pushf
sub
push
jmp
fwait
or
sub
sub
nop
mov
push
dec
dec
jno
jb
mov
jl
add
fs
rcll
popf
or
lea
cmp
rcl
add
scas
int
pushf
enter
cmc
test
xchg
fistpl
scas
ds
idiv
inc
inc
dec
mov
aas
jne
jle
ljmp
and
jae
shll
pop
cmp
jg
lods
cwtl
test
repz
cli
popf
mov
and
push
cmp
fisubrs
mov
lds
in
inc
das
mov
lock
sub
push
fld
cli
mov
pop
insl
pushf
subl
scas
mov
and
or
nop
add
lock
out
mov
shrl
in
push
cltd
mov
sub
imul
pushf
jae
clc
movsb
mov
push
sbb
rorl
xchg
mov
stos
mov
and
in
mov
push
pop
mov
scas
xor
and
or
adc
aaa
icebp
jbe
push
outsl
test
mov
pusha
ljmp
xor
dec
inc
mov
popa
or
mov
scas
push
jne
push
add
xor
test
cmp
mov
jns
jns
in
into
mov
push
shll
ja
aad
jp
ljmp
xor
mov
dec
stc
scas
shlb
lret
sbb
dec
out
js
push
xchg
enter
xor
xchg
enter
mov
and
or
jb
stos
lahf
idivb
imul
jnp
cmp
in
stos
or
add
fistpll
adc
inc
aaa
mov
push
sbb
popf
xchg
stos
push
dec
jge
fcmovb
push
fcompl
mov
in
scas
ffree
add
aaa
adc
cs
cld
jbe
repnz
test
and
or
xchg
int3
jmp
mov
sbb
xchg
xchg
int
mov
inc
int3
data16
pop
xor
lds
fsts
inc
sub
and
inc
movsb
sbb
stos
push
pop
xorl
sbb
cmp
lcall
jno
jg
jl
adc
push
xchg
out
movsl
xor
xchg
and
scas
nop
xor
push
aaa
jecxz
test
fisttpl
in
xchg
aam
enter
or
aaa
loope
clc
jge
lods
mov
mov
fcompl
and
pushf
pop
lahf
loopne
and
dec
adc
add
cmp
xor
or
jmp
dec
sub
inc
outsl
pop
cli
sbb
dec
data16
pop
sbb
xchg
jnp
lods
jnp
outsb
push
dec
or
inc
std
dec
xor
cmp
and
xchg
mov
out
and
push
rorb
mov
inc
sub
push
pop
jo
dec
lret
jno
sti
sub
mov
pop
sbb
jp
inc
cmp
test
loopne
mov
jne
loop
imulb
stc
pushf
xlat
push
sbb
jno
or
cmp
icebp
outsl
imull
call
xor
rdpmc
cmp
xchg
xor
shrb
jne
mov
shlb
dec
cltd
bound
aas
and
dec
add
orl
cmp
push
data16
xchg
jecxz
imul
pop
sub
jecxz
testb
in
es
push
incb
push
adc
pop
dec
fdiv
inc
rcll
push
jnp
mov
repz
xchg
cli
push
jno
sbb
cmp
mov
int3
pop
sbb
sbb
jmp
decl
aad
lret
popf
int
dec
lods
jge
jb
in
and
je
fiaddl
jecxz
shll
and
lea
daa
add
fcmovbe
mov
dec
mov
fcmovne
add
inc
jle
inc
inc
fmull
adc
inc
mov
ljmp
roll
test
idivb
jle
cwtl
inc
scas
add
mov
ret
mov
gs
dec
fisttpll
sub
inc
jb
das
subb
shlb
shrb
ret
mov
loop
dec
or
sub
xchg
out
pop
adc
xchg
add
lods
loope
ds
imul
mov
lock
rolb
clc
cmpsl
jnp
jmp
sahf
mov
adc
push
dec
out
ffree
fs
fildll
sbb
inc
rcrl
jo
loop
pushf
stos
mov
jbe
xchg
leave
pop
scas
push
xor
scas
pcmpgtb
xor
pop
lret
xor
jb
mov
shrl
call
sbb
dec
insb
and
inc
inc
fisttpll
fwait
je
les
sbb
lret
add
dec
insb
test
fistpl
pop
jns
ficomps
xchg
mov
xchg
mov
dec
lret
mov
iret
mov
ja
rorb
jp
in
mov
push
pop
lcall
fstl
dec
fsubrl
out
jne
pop
outsb
mov
insb
movsl
out
push
mov
xchg
xor
cmp
xchg
sbb
dec
xor
out
pusha
push
or
into
out
stos
adc
mov
jnp
pushf
bound
sarb
in
pop
iret
pusha
mov
je
xlat
fwait
stos
ret
ficomps
or
pop
jae
xor
push
fmul
push
lods
inc
xchg
mov
push
fidivl
inc
xchg
aad
sbbl
fwait
mov
adc
jb
iret
pop
test
sbb
xor
hlt
outsl
outsb
arpl
push
inc
and
lahf
or
or
mov
or
mov
jge
pusha
cmpsb
neg
loopne
xchg
vmovhpd
shlb
mov
inc
sub
cmp
fisubs
ffreep
jbe
jle
jge
lods
rcrb
sahf
inc
mov
pop
mov
cmp
outsl
jno
loope
dec
cmpsb
xchg
dec
add
in
xor
out
inc
iret
scas
outsl
mov
mov
adc
push
cmpsb
rcrb
sub
cmpsb
or
in
jbe
mov
daa
pop
bound
loope
mov
stos
cmp
push
std
sub
jp
icebp
and
hlt
lahf
call
or
test
jecxz
std
xlat
jge
cmp
cld
lods
jp
pop
xlat
mov
js
lods
pop
cmp
lcall
cwtl
fdivl
mov
outsb
jns
and
and
inc
xchg
or
mov
clc
push
mov
xchg
mov
push
ret
jae
int
mov
lret
dec
cmpsl
pop
out
sub
lret
mov
mov
dec
sbb
sahf
test
lea
sbb
pop
jg
jge
loop
in
stc
push
mov
adc
roll
fcoms
inc
mov
fsubrs
or
xor
pop
dec
or
test
dec
popa
test
jge
jge
movsl
les
scas
adc
lcall
stc
or
dec
dec
mov
lods
push
sub
and
imul
sbb
or
idivl
mov
je
gs
mov
aaa
pop
addr16
out
lods
fnstenv
fs
jae
sub
pop
xlat
sub
repz
int
xchg
adc
je
jmp
es
bnd
push
cmp
nop
js
sub
mov
jb
insb
pusha
dec
pop
push
fbstp
push
jecxz
cmc
inc
mov
lahf
adc
leave
or
mov
ret
add
daa
fcomi
jl
pop
xor
inc
add
inc
movsb
aas
mov
test
mov
jmp
sub
std
int
mov
sti
add
mov
xor
mov
shl
xchg
cld
fistpll
lret
mov
pop
out
dec
sbb
push
das
pop
pushf
fcom
jae
lcall
nop
aaa
ret
sbb
xor
int3
jecxz
insl
push
fmull
or
cmpsl
push
adc
or
or
out
lods
dec
or
mov
and
lret
xor
pop
xchg
add
imul
test
stc
test
fucomp
cmp
clc
sbb
push
sbb
ret
popa
shll
cmp
out
stos
inc
jo
adc
push
rdmsr
inc
shlb
add
or
add
xor
les
xor
or
xchg
xchg
and
inc
ficomps
mov
mov
out
add
sbb
jp
adc
jns
out
in
lahf
leave
xchg
add
add
mov
mov
repz
movsb
mov
sub
mov
xchg
dec
mov
push
or
shlb
fwait
xchg
or
cmpsl
jmp
pop
sbb
sbb
push
out
adc
or
scas
adc
cltd
mov
xchg
jnp
ret
mov
shl
lahf
jo
pusha
push
leave
sahf
fcomip
in
ret
jnp
into
repz
movsl
sbb
xor
lahf
scas
std
popf
aam
and
enter
es
pop
xchg
sub
outsl
sbb
outsb
in
scas
mov
sbb
out
mov
mov
and
xchg
gs
hlt
aas
pop
shll
mov
inc
and
add
sti
inc
scas
mov
or
add
lods
popa
int3
cmp
loop
popl
lds
cmp
lea
add
fiaddl
stos
movsb
cs
inc
jbe
push
or
mov
out
aaa
sbb
cmp
les
dec
je
testb
shrb
jo
orb
cs
or
dec
push
jno
mov
xchg
cmpsb
fidivrl
xor
enter
daa
push
and
push
mov
hlt
sub
xchg
lods
cmp
insl
adc
sbb
mov
push
mov
dec
sbb
je
or
outsl
cli
pop
pop
stc
fnstsw
shlb
pop
js
dec
lcall
push
fsubl
imul
lods
aas
outsb
fsubr
notb
cld
mov
lds
adc
jns
jp
lcall
mov
inc
loopne
pop
outsb
cli
dec
lret
pop
shrl
lock
mov
inc
sahf
mov
test
dec
xor
inc
jg
mov
push
push
push
or
add
xor
lds
nop
outsb
cmp
addr16
mul
add
xor
stc
ret
nop
inc
into
xor
sbb
inc
mov
xor
add
outsl
cmpsb
and
repnz
fldcw
add
data16
clc
sub
aaa
sub
sbb
das
pop
sub
pop
pop
and
dec
in
cld
fstps
dec
repz
mov
push
ds
stc
xor
fldl2t
push
les
add
xchg
or
sbb
addr16
xlat
addr16
orb
pushf
sub
adc
aad
adc
nop
push
jge
dec
push
pop
jb
and
je
scas
std
jecxz
insl
push
cmpsb
movsb
mov
inc
test
insl
mov
jo
scas
pop
sbb
xor
inc
pop
aad
xor
mov
push
inc
fwait
mov
cwtl
mov
pop
jmp
sub
testb
std
je
or
notl
cmpsl
mov
stos
sub
cld
or
lret
sub
mov
pop
test
mul
test
rolb
mov
aam
dec
ja
cmpsl
out
sbb
dec
cs
dec
mov
xchg
and
jnp
lea
inc
mov
mov
mov
xor
add
icebp
inc
pop
or
add
pop
push
cltd
push
lods
inc
test
and
cmpsb
fstl
repz
push
xchg
sbb
xchg
push
add
lea
fcmovnbe
or
arpl
adc
cli
xchg
push
xor
ljmp
xor
lds
int
es
jno
mov
lods
into
dec
mov
mov
addl
lods
mov
dec
push
sbb
inc
jne
cmp
jmp
push
pop
loop
add
sbb
lcall
mov
bound
mov
in
add
iret
mov
sub
mov
inc
aas
ja,pt
push
pop
jp
movd
mov
mov
dec
mov
scas
loopne
sub
lahf
jbe
fneni(8087
fucomp
mov
insb
add
aas
sub
fwait
in
addr16
stos
clc
in
and
jp
jnp
stos
gs
into
leave
in
jmp
xor
adc
cmp
inc
mov
mov
imul
bound
lea
test
imul
jno
fnstenv
adc
addl
imul
scas
push
sub
push
mov
pop
adc
xor
dec
repnz
dec
jge
or
hlt
mov
lods
inc
sub
lods
or
add
push
inc
sub
ja
jnp
loopne
daa
leave
out
mov
pop
outsb
stc
shrb
fisubs
insl
or
cmp
xor
push
push
jge
cmpsl
push
sbb
cmpsl
aaa
xlat
jns
cmp
sbb
orb
push
push
cmp
mov
movsb
shl
scas
sub
mov
or
or
sub
cmpsb
adc
add
inc
mov
mov
push
xor
aad
arpl
aam
ds
mov
lods
and
dec
andb
js
repz
in
adc
pop
xor
xchg
out
xor
cmc
pop
and
testb
data16
push
cmp
sbb
sub
ljmp
mov
rcl
xchg
push
xor
mov
js
mov
in
and
and
pop
sub
pop
add
in
dec
cmp
lret
sub
mov
jl
sbb
sub
xor
punpcklbw
loop
pop
jge
shl
fs
insb
fdivl
shrl
sbb
and
xor
cmpsb
inc
in
test
cmp
push
or
push
imul
pop
push
les
fwait
popa
adc
addr16
lahf
cli
cmpsl
adc
mov
add
fiaddl
push
mov
es
push
in
mov
mov
cmp
jp
addr16
pop
stos
call
gs
stos
add
mov
cmp
inc
or
fldenv
inc
leave
les
fs
inc
pop
ret
push
fidivrl
mov
cltd
ds
xor
adc
jo
pushf
fdiv
jp
aam
xor
mov
dec
nop
nop
rep
dec
leave
mov
fmull
sbb
jecxz
sub
jecxz
dec
call
in
jno
mov
mov
dec
sbb
roll
adc
pop
aas
icebp
xchg
add
movups
and
adc
out
hlt
xchg
testb
xor
mov
movsb
mov
adcl
push
mov
lret
mov
add
lock
aas
jo
sbb
lock
aam
bound
ss
es
push
insl
cmp
dec
mov
icebp
cmpsl
add
imul
inc
dec
popa
loope
call
mov
aam
add
or
mov
dec
cltd
bound
xor
mov
mov
xchg
rclb
adc
fnstsw
nop
int3
clc
nop
add
jmp
sbb
loope
negl
pop
jecxz
imul
rorb
lds
orb
add
or
xor
out
xor
lret
dec
sbb
xor
xchg
fs
inc
sub
inc
or
sahf
or
fsts
fwait
add
xchg
popf
lods
pop
mov
jns
jns
in
in
ror
mov
lds
pop
add
ja
fdivl
jp
cs
mov
inc
stc
mov
push
mov
movsb
jne
insl
pop
mov
dec
outsb
out
hlt
sbb
scas
sti
daa
jmp
hlt
adc
out
shrb
jmp
sbb
sbb
insb
sbb
pop
jne
std
mov
jae
mov
xor
lcall
pop
mov
mov
in
and
and
fwait
cmpsl
mov
inc
inc
test
mov
loop
cs
cmp
rorb
iret
js
mov
mov
iret
leave
adc
arpl
inc
sub
aam
xchg
pop
fs
lods
push
data16
popf
add
cs
int3
adc
pop
in
mov
lds
xchg
rol
sahf
mov
add
lock
fwait
movsb
inc
test
push
xchg
xchg
inc
jbe
dec
ret
jge
stc
pop
sbb
loope
aaa
xchg
and
cmp
add
insl
lcall
push
adcb
sbbb
cmp
test
orl
clc
notl
jp
decb
aad
xchg
push
pop
in
sub
enter
daa
add
mov
loope
jl
sub
in
les
jnp
dec
ds
movsl
mov
and
pop
lahf
pop
ret
and
cmp
sbb
cmc
outsb
add
stos
in
xor
push
add
dec
xor
js
mov
pop
imulb
lcall
outsl
fdivrl
out
push
outsb
mov
mov
shlb
iret
push
mov
xchg
mov
push
int3
lods
pop
int
sbb
addr16
insb
sub
rcll
mov
sub
sahf
shlb
jl
pop
test
loop
or
stc
js
cmc
fs
sbb
jnp
push
incl
fcomp
stos
fdiv
adc
ret
inc
dec
mov
imulb
fwait
into
divb
shlb
cmp
mov
mov
adc
mov
jp
inc
lods
mov
aam
cmp
add
ret
add
sub
mov
in
rcrb
jae
mov
ds
jae
push
xchg
and
inc
pop
and
fsts
pushf
shlb
xchg
push
bound
sbb
frstor
inc
pop
out
in
xchg
dec
pushf
xorl
ret
ss
sbb
repz
out
nop
or
dec
sub
mov
dec
mov
rcrl
sti
sub
lods
clc
jecxz
dec
sahf
out
cmp
adc
imul
fldl
fildl
testl
lock
mov
fdivl
mov
sarl
inc
cmp
xchg
dec
std
ret
cwtl
sub
pusha
mov
push
je
pop
es
pusha
jb
lret
or
mov
movntq
movsb
push
xor
lods
stos
pop
das
cld
push
jns
in
mov
sub
aam
enter
mov
stos
insl
pop
mov
dec
mov
mov
popa
jo
popa
clc
jne
lods
lea
mov
idivl
and
pushf
test
pop
insb
cs
add
cltd
lds
aaa
test
dec
add
mov
fstpl
das
clc
lret
add
xchg
sbb
cmp
cmp
mov
push
stos
pop
fidivrl
shrl
xchg
in
sbb
mov
sahf
insb
xor
loope
or
mov
dec
xchg
mov
push
test
mov
xchg
dec
cmp
mov
mov
jae
fwait
xor
out
movsb
mov
add
mov
xlat
and
jns
fnstcw
in
iret
xchg
xchg
repnz
dec
mov
aad
mov
mov
out
jp
add
mov
fists
or
mov
cmp
push
nop
in
mov
mov
call
xchg
mov
lds
adc
cwtl
lods
or
data16
ficomps
and
cli
insb
mov
and
popf
mov
pusha
and
sahf
ret
sahf
pop
jae
jl
in
fwait
jae
mov
push
call
aad
mov
test
jbe
aas
adc
xchg
xor
inc
sbb
push
add
lcall
pop
pop
lea
ja
loop
xlat
out
repnz
hlt
and
lock
mov
or
clc
sbb
inc
sub
push
or
fiadds
test
adc
fisubrs
vpmuludq
fisubrs
mov
xchg
mov
cmp
inc
lahf
movsb
iret
addr16
out
movsb
jbe
jnp
jge
xor
aaa
push
dec
xor
push
add
jl
xlat
dec
shll
add
xor
pop
test
and
es
test
rcrb
xchg
inc
lea
lds
adc
popf
daa
add
push
test
loope
mov
cmp
sub
ds
xor
ljmp
orb
sbb
jmp
xor
mov
mov
daa
mov
pop
xor
outsl
mov
push
mov
arpl
sub
popf
outsb
add
pop
out
rorb
outsl
into
mov
leave
sbb
roll
add
iret
cmpsl
sub
mov
cmpsl
sub
xchg
shr
out
mov
scas
add
dec
and
test
iret
incl
cmpsl
ret
mov
inc
fs
je
sbb
xchg
ss
dec
fnstcw
cwtl
stos
inc
mull
inc
cli
dec
out
sub
sbb
adc
leave
jnp
std
bound
into
fnstcw
xorb
cmp
outsl
inc
xchg
dec
adc
imul
daa
loop
push
stc
inc
lods
in
jg
mov
and
jae
cwtl
or
test
cmp
lea
xor
aas
gs
leave
and
call
xchg
js
repz
out
into
xchg
leave
sbb
sbb
into
xlat
and
sbb
cltd
sbb
pushf
cs
cli
jmp
outsb
leave
jle,pn
pop
aad
jmp
gs
xchg
xor
sub
outsl
adc
repz
outsb
pop
scas
push
fwait
lea
gs
ljmp
xorl
std
repnz
and
xchg
cmpsl
mov
das
inc
add
mov
adc
rcll
std
imul
out
mov
xlat
mov
mov
loope
das
fstps
mov
ret
rcrl
mov
cmpsl
jle
imul
sub
das
fildl
mov
imul
mov
mov
es
and
add
dec
lods
lods
jae
add
je
aam
xor
inc
aaa
lods
clc
mov
fwait
mov
sbb
pusha
mov
mov
aam
push
jne
cltd
cld
lods
jae
scas
dec
je
pop
inc
test
lret
or
xchg
clc
push
sahf
rclb
cmpsb
into
push
rcll
addb
dec
add
out
or
push
jnp
push
inc
mov
and
popa
or
mov
mov
shlb
dec
jmp
sub
hlt
shll
sub
and
cmp
mov
push
inc
mov
add
rcll
cltd
bound
cmc
add
jb
in
xor
xchg
inc
shlb
pop
dec
mov
jbe
sub
test
jp
mov
test
cmpsb
mov
push
dec
dec
int3
jne
pop
add
ds
xchg
out
mov
lea
mov
xchg
xchg
mov
sbbl
aam
cwtl
imul
or
sbb
cmc
and
repz
lcall
jb
in
lods
pop
pusha
mov
ss
pop
stos
push
int3
inc
rcr
mov
mov
add
mov
les
dec
pushf
xchg
mov
mov
test
adc
mov
scas
das
and
pop
lea
push
icebp
lcall
in
popa
leave
outsl
lret
and
imul
xchg
mov
or
jae
into
inc
stos
fwait
xor
dec
dec
imul
aas
pop
int3
call
movsl
rcr
mov
fs
mov
fstpt
flds
xchg
movsb
pop
lahf
scas
push
xor
sbb
fistps
inc
sub
mov
push
mov
jno
add
and
bound
and
push
in
inc
xor
mov
scas
lret
push
sub
pop
test
popf
add
inc
sbb
nop
cmpsb
cltd
movsb
push
in
stc
fnstsw
daa
add
push
pusha
mov
sbb
mov
cmp
mov
cmpsl
movsl
popf
dec
mov
test
stos
andb
sbb
fidivl
jnp
mov
jg
movsb
loope
pop
je
adc
ds
shrl
inc
inc
test
xchg
movsl
adc
push
adc
aas
out
in
mov
mov
xlat
or
mov
addl
push
hlt
sub
notb
pop
push
out
lret
or
test
mov
pop
loopne
ja
sbbb
pop
incl
inc
fistps
push
into
stc
out
pusha
fs
loop
adc
adc
pushf
pop
dec
cmp
push
inc
and
jecxz
imul
icebp
movb
insb
xchg
into
mov
inc
test
insb
leave
mov
sbb
adc
mov
js
lock
add
sub
ss
lods
sarl
xchg
loope
pop
sub
mov
mov
test
iret
sti
and
and
push
js
gs
adc
add
daa
inc
inc
fdivl
repz
sbb
push
and
xlat
arpl
adc
sbbb
mov
aad
dec
mov
dec
out
push
jb
cmc
jne
stos
adc
je
dec
in
sbb
pushf
mov
lcall
cs
imul
push
or
pop
popa
or
inc
test
scas
inc
pop
jae
aas
into
sahf
jg
out
loopne
mov
mov
movsl
xchg
testb
adc
cwtl
mov
leave
stos
mov
push
mov
cld
mov
lret
out
jp
aad
jle
xor
lock
rorb
or
rclb
cli
dec
aam
xchg
cltd
ret
jecxz
xor
pop
loopne
insl
in
xor
cmpsl
add
adc
inc
fistpll
lods
arpl
jns
mov
adc
and
xchg
mov
stos
fs
push
dec
cltd
xor
enter
sbb
orl
lods
mov
jno
xchg
leave
insl
sbb
and
imul
dec
stos
cmp
sahf
fs
jae
out
push
jl
setle
add
jne
rorb
test
pop
dec
mov
rcrl
cld
test
jg
xchg
test
roll
fwait
mov
push
ljmp
add
mov
aam
mov
mov
scas
dec
in
call
xorl
test
pop
xor
ja
mov
mov
jnp
mov
mov
or
inc
add
mov
fdivs
xchg
daa
test
jg
cs
push
add
andl
fisubrs
xchg
addr16
lret
les
int3
insb
pop
hlt
jl
jl
sbb
cmp
ret
pusha
pop
push
pop
fists
dec
sub
inc
adc
or
or
popf
xchg
cmc
aaa
mov
add
lods
fisubl
loope
sbb
push
cmc
imul
dec
scas
xchg
mov
push
movsl
adc
sub
das
jae
test
ds
hlt
mov
arpl
dec
add
out
test
test
cmp
jae
xlat
std
hlt
int3
shrl
fidivs
mov
cmp
mov
addr16
movsb
in
jg
test
lock
dec
lea
add
sbb
test
mov
jl
sbbl
lahf
cltd
dec
push
mov
xor
adc
add
push
cld
jns
test
push
pop
daa
cmpsb
sbb
push
in
loopne
inc
enter
daa
add
loope
lcall
mov
pop
ds
add
movsl
movsb
das
xchg
and
push
lcall
sarb
add
jo
xor
jns
ds
bound
mov
clc
pop
mov
aaa
lcall
fcmovnu
mov
adc
adc
inc
pop
dec
int
jmp
mov
mov
jp
and
lock
mov
sub
int
lret
xor
sbb
data16
and
sahf
mov
dec
inc
cmpb
jg
mov
std
mov
mov
adc
cmp
cmp
push
imul
cli
mov
pop
xor
mov
ds
insl
adc
lahf
sbb
cmc
daa
pop
mov
outsl
add
iret
imul
pop
add
ljmp
mov
movsl
xchg
loopne
cwtl
sub
inc
mov
adc
xor
gs
aas
inc
loopne
outsl
mov
inc
pop
mov
frndint
ja
repz
jb
mov
pop
cld
pop
adc
out
insl
jmp
sub
aad
pop
test
dec
inc
inc
out
jb
lods
sub
je
add
mov
adc
stos
mov
call
nop
in
mov
ja
fistl
jp
pop
add
or
das
dec
cmp
push
daa
aas
insl
pushl
adc
mov
sub
fcom
sub
into
std
mov
cmpsl
cwtl
pop
sub
mov
inc
sarl
fcmovne
push
mov
xorb
push
inc
shlb
xlat
sub
dec
cmc
fcmovb
jb
or
fisubrs
insl
aam
mov
mov
loopne
ljmp
sbb
xchg
mov
sub
pop
pop
leave
add
es
push
cmpsb
test
jp
mov
add
push
mov
in
add
jl
xchg
xchg
shlb
sbb
cmp
rcrb
sub
imul
cld
and
xlat
push
xor
pushf
paddw
jb
and
xor
sub
out
xchg
ss
mov
rcrb
adc
inc
push
cmp
fwait
mov
adc
add
lds
xor
lds
inc
jge
jns
xchg
in
repnz
cmpb
pop
in
mov
ja
and
mov
jg
mov
adc
dec
adc
jne
or
mov
test
sub
xchg
cli
outsb
fucompp
jbe
aam
and
out
xorl
scas
out
int3
gs
add
addr16
ret
aaa
fidivl
and
jnp
mov
clc
in
and
fbstp
xchg
and
xlat
mov
jae
pushf
lock
xor
mov
inc
dec
rcr
pop
out
xchg
or
fidivrl
popa
scas
cmc
xor
mov
or
iret
hlt
pop
push
repnz
pop
sbb
hlt
add
inc
aaa
dec
inc
or
imul
imul
sub
add
das
int3
mov
int
ficoms
mov
jb
inc
shrb
dec
mov
dec
sar
inc
jno
movsb
jo
pushf
push
shl
xchg
jbe
mov
add
mov
in
aam
mov
jmp
leave
cmc
inc
jl
jecxz
dec
push
aam
push
stos
push
aam
pop
test
scas
mov
mov
icebp
jge
aam
push
push
xor
mov
cmp
cmpsb
lahf
shl
or
daa
add
push
ljmp
add
jns
aaa
jnp
repnz
int3
movsl
stos
jne
and
aaa
aaa
addb
pop
add
pop
inc
xor
sbb
add
pop
call
bound
pop
repnz
add
push
in
stc
pushf
fsubl
sub
and
movsl
push
rcrb
je
sub
addr16
enter
or
dec
and
das
sub
int
pop
xor
sub
pop
push
mov
shll
push
aad
negb
je
inc
adcb
mov
stc
push
jge
fs
jnp
pop
mov
push
cmp
leave
and
dec
cli
jecxz
lret
into
push
cmp
or
or
sub
cmpb
out
fisttpll
outsl
loopne
mov
in
cmpsb
imul
aad
jle
mov
lods
mov
ret
sbb
icebp
push
fsubl
jle
mov
andb
gs
daa
loopne
fistpll
imul
xor
in
cmp
cmp
jns
adc
and
leave
jmp
xlat
loope
add
cld
test
loop
jnp
das
mov
cmpsb
cmpsl
xor
nop
jne
xchg
jo
jb
cwtl
testl
or
jecxz
rolb
out
mov
es
addr16
mov
dec
mov
mov
pop
cmpsl
add
inc
cmp
fs
mov
mov
pop
sarl
inc
not
jmp
std
pop
xor
sbb
mov
mov
xor
or
pop
lret
mov
sbb
comiss
fwait
sarb
sarl
rorb
aam
lods
sub
add
adc
inc
pop
dec
sahf
jns
cmpsl
jp
ljmp
fwait
lods
cmp
mov
das
sahf
les
call
pusha
imul
push
ds
push
push
arpl
cmpsb
std
stc
clc
mov
jmp
adc
rcll
pusha
lret
adc
out
pop
mov
adc
es
xor
mov
xchg
stos
das
xor
dec
add
fcmovne
dec
xchg
inc
movsl
dec
and
xlat
xchg
lock
inc
fsts
fwait
in
cmpsb
adc
xor
scas
add
and
mov
fidivl
std
jns
adc
in
push
push
xchg
cs
jne
sub
ja
ds
std
push
popf
mov
cmpsl
mov
mov
add
dec
hlt
inc
push
jne
add
mov
inc
add
dec
mov
xchg
int
pop
jmp
jmp
loopne
lds
dec
out
lods
cmpsb
sub
jge
fisubl
ds
stos
shr
cmp
sahf
jnp
cmp
jle
test
es
inc
pop
loop
hlt
or
pop
dec
adc
inc
repnz
push
jae
jb
push
hlt
xchg
push
popf
in
in
out
out
sbbl
outsl
xchg
lea
sbb
cmc
cli
imul
in
pop
scas
repz
xor
pop
iret
push
mov
repnz
popa
loop
aam
repnz
dec
repnz
arpl
mov
or
in
lock
daa
xor
mov
int3
test
pop
arpl
clc
pop
pop
vmovlpd
mov
filds
mov
bound
hlt
mov
lods
sbb
outsb
aaa
push
sub
jno
es
mov
shlb
push
in
ja
and
stos
jo
dec
adc
mov
push
push
push
cmpsb
push
inc
leave
mov
and
in
scas
clc
aaa
enter
daa
flds
addr16
popa
sub
inc
and
ds
pop
shlb
mov
cltd
sub
add
cwtl
push
xor
sub
fdivl
add
lcall
adc
subl
cli
mov
xchg
sbb
adc
stc
fmull
mov
mov
repnz
mov
cmp
fistpl
int
in
sub
and
lret
push
rorl
mov
insl
sahf
add
test
push
push
mov
dec
jg
dec
fs
mov
out
fs
call
ss
inc
cmp
test
mull
mov
mov
jbe
sahf
cmp
jne
or
push
cmc
mov
imul
mov
mov
imul
add
cmpsl
fldt
cli
je
out
or
add
jmp
test
mov
loope
loopne
fs
inc
jle
insb
fldcw
jp
test
leave
xchg
aad
lods
sbb
add
in
and
lea
mov
adc
mov
pushf
fisubl
jmp
idivb
or
jg
push
pop
pusha
dec
add
add
int
je
insb
aaa
jecxz
es
mov
ret
mov
mov
mov
mov
adc
xor
lods
pop
dec
in
call
inc
pop
dec
ss
stos
int3
adc
pop
jae
and
push
cmp
leave
mov
fdivr
add
andl
icebp
mov
cld
aaa
inc
ror
mov
push
mov
sbb
jae
icebp
das
push
mov
rorb
xchg
sub
dec
aam
mov
ret
nop
arpl
in
and
dec
cltd
nop
xchg
cmpsl
cltd
xchg
ljmp
adc
jmp
mov
ss
popf
mov
pop
push
movsl
add
cmpsb
mov
mov
iret
adcb
rep
clc
repnz
and
push
dec
xor
shrl
movsb
pop
in
leave
stos
or
out
ret
xchg
dec
lret
out
jnp
mov
mov
or
mov
or
fmul
testl
decl
dec
divl
xchg
inc
xchg
mov
lcall
shrl
mov
dec
adc
bound
jns,pt
cmp
in
add
mov
repz
mov
bound
ja
jp
scas
divb
loop
lods
mov
sub
dec
xlat
push
sbb
mov
sbb
out
cs
fists
fs
or
cmp
shrb
js
push
addr16
ds
stos
sbb
in
insb
lahf
inc
jnp,pt
jg
jle
dec
sbb
pusha
sub
jns
out
scas
ret
addr16
xchg
sti
inc
std
aad
jae
mov
push
mov
aad
or
or
shrb
mov
jle
xor
jge
out
scas
mov
inc
sbb
mov
mov
or
xchg
jl
arpl
leave
aad
cmp
mov
cmp
lds
add
inc
pop
pop
push
add
fwait
mov
mov
mov
jb
lock
lds
jno
call
jge
popf
add
xor
cmp
jnp
jl
pop
push
dec
in
xchg
orl
ja
xor
and
ljmp
ret
leave
fildl
inc
pop
or
cmpsb
movsl
scas
test
xchg
leave
jge
xchg
repz
push
inc
cmp
jbe
pop
sub
rclb
cmp
into
sub
and
pop
dec
lahf
push
mov
lods
and
mov
pusha
sub
subl
pop
ss
jo
nop
xor
lcall
lods
fdivrl
adc
jae
in
add
rcl
pop
cmpsl
mov
and
mov
cli
cs
pop
test
bnd
push
ficomps
int
push
sub
dec
das
pop
pushw
or
jo
xor
loope
mov
in
sahf
movsb
fwait
cld
test
xchg
lret
jg
jne
loop
stc
ret
mov
movsl
pop
loope
test
push
cmp
aas
pop
mov
fistps
dec
xor
mov
clc
mov
or
mov
insb
cmc
jl
enter
imull
push
xchg
adc
rcrl
pushf
icebp
data16
or
outsl
mov
cmc
mov
mov
xlat
dec
jecxz
fsub
enter
sahf
sti
loopne
sahf
loopne
movsl
gs
add
idiv
mov
pop
loope
xchg
les
mov
mov
repz
jb
xchg
cwtl
add
aas
push
xchg
xlat
pop
lds
nop
or
pushf
test
dec
jmp
add
cs
or
aad
lret
inc
nop
sub
aad
jb
or
je
and
push
mov
pop
lea
cmp
mov
push
sub
xchg
fistpl
leave
pop
inc
les
inc
jae
push
aas
dec
cmp
mov
adc
xchg
and
mov
rcrl
lahf
mov
std
lods
mov
mov
mov
js
bound
cld
bound
mov
test
into
fsts
das
ss
mov
fiadds
adc
scas
adc
andb
shlb
dec
xchg
cmp
ljmp
in
lods
loopne
insb
les
leave
pop
cmp
cmp
scas
loopne
add
add
jg
test
xor
push
jmp
int3
mov
sub
jle
sbb
push
pop
pop
nop
cwtl
fisubrl
and
pop
push
push
ret
bndldx
inc
or
mov
mov
ffreep
pop
dec
out
jge
test
std
icebp
xchg
sub
sub
jb
fwait
dec
add
imul
adc
jo
sahf
or
xchg
int3
bound
mov
mov
and
test
jp
mov
inc
mov
pop
aas
mov
mov
xchg
test
out
or
addr16
pop
mov
aaa
and
out
adc
jecxz
fwait
or
outsl
addr16
ret
nop
test
aas
insb
or
sarb
jmp
faddp
ret
xor
ret
adc
inc
or
jae
ljmp
xor
hlt
mov
aas
mov
jno
mov
cmp
sbb
in
imul
imull
shrl
cltd
fs
iret
adc
xlat
repnz
pop
sub
ret
hlt
loop
cmp
add
or
fidivrl
xlat
or
sub
xor
int3
jg
add
enter
adc
lds
cli
jnp
sbbb
sbb
scas
cmp
movsb
adc
fs
psubw
sub
sbb
xchg
aaa
iret
das
cmp
push
jno
hlt
ja
clc
sti
pop
dec
pop
sbb
push
push
mulb
mov
gs
adc
scas
and
xchg
jge
mov
addl
xor
jl
loope
xchg
push
inc
push
addl
xor
cmp
ds
movsb
in
movsl
rcrb
lahf
xor
push
cmp
stos
test
add
adc
push
pushf
push
dec
fcoml
pop
mov
js
clc
adc
scas
leave
lds
icebp
in
fsubl
push
sub
repz
outsb
push
loope
adc
scas
ljmp
push
jb
inc
addr16
mov
dec
xlat
and
test
loope
addr16
mov
int3
pop
in
jae
arpl
pop
sarl
mov
lcall
mov
test
jmp
and
jg
movsl
dec
loop
pop
jecxz
jns
pop
fs
notl
hlt
mov
ss
hlt
cmp
cli
rcll
cli
jl
mov
cmp
les
into
sub
inc
mov
sub
ljmp
push
adc
out
inc
add
mov
outsl
lods
push
aaa
rorb
adc
mov
repz
xchg
out
incb
push
mov
loop
xlat
loopne
test
nop
inc
movsb
inc
adc
fsubr
inc
les
repnz
xchg
pop
xor
sbb
jp
cwtl
xlat
sahf
pop
lret
xor
pushf
xor
xchg
shlb
aad
and
nop
push
jb
dec
rorl
dec
shrl
mov
aaa
jecxz
lcall
sbb
call
in
lahf
mov
push
dec
cmp
inc
call
pop
nop
fwait
or
push
add
xchg
popa
aas
jmp
movsl
arpl
push
push
scas
shll
push
fwait
in
xchg
std
push
mov
cwtl
dec
sub
mov
inc
sub
cmp
mov
stc
out
lret
adc
pop
mov
mov
inc
sbb
sub
sub
shlb
fs
arpl
scas
call
int
jo
loope
jp
cmpsl
cld
arpl
popa
cltd
add
lds
in
stos
add
inc
fiadds
fstps
daa
pop
inc
mov
add
pop
sahf
cltd
inc
sti
xor
lock
cmp
test
jo
or
push
xor
pop
rcrl
pop
pop
cmp
or
mov
adc
popf
mov
fidivl
adc
jg
cld
jp
xor
test
mov
loop
pop
dec
push
shll
and
lods
dec
fst
scas
inc
ljmp
jns
or
add
jne
xchg
pushl
inc
les
jp
in
fs
xchg
sbb
mov
notl
pop
fadds
ja
test
mov
mov
into
sbb
dec
popf
dec
inc
jne
je
mov
add
ja
xchg
inc
and
jmp
dec
and
xorl
out
add
or
fisubs
lret
add
insb
jne
or
push
push
jle
jne
in
mov
dec
fildll
mov
sub
xchg
cmove
dec
push
or
ja
popf
pop
pop
sbb
ds
jmp
xchg
xchg
adc
lcall
or
mov
iret
jo
fwait
repnz
test
jp
sub
or
or
push
xor
movsb
jb
or
push
outsb
add
rclb
int3
push
xchg
pop
gs
push
fsubp
pop
jmp
rcrb
jb
cwtl
cli
fnstcw
and
movsb
pushf
rcl
push
pcmpeqw
daa
lahf
pop
sbb
clc
sub
xorl
and
push
imul
jo
adc
push
push
sbb
std
test
pop
inc
js
jbe
shll
arpl
ror
mov
daa
cld
or
push
jo
loope
inc
sbb
mov
repz
jle
dec
movsl
jne
and
inc
inc
lahf
push
in
pop
adc
into
sbb
jbe
add
dec
shll
and
or
mov
movsl
pop
out
ret
mov
push
push
dec
daa
or
sub
xchg
shrb
xor
jp
inc
rorb
cmp
mov
ja
mov
xchg
aaa
and
aam
push
in
int
fadds
adc
sahf
pop
fs
lret
mov
shrd
inc
jnp
sbb
mov
daa
addb
sbb
add
jo
faddl
andl
sbb
add
cmp
mov
add
pop
out
xchg
cli
scas
xor
lea
or
outsl
aaa
into
push
inc
jo
or
mov
outsl
pop
xchg
dec
div
adc
in
add
sub
lods
cmp
add
sub
shll
sub
adc
ds
in
es
hlt
gs
push
pop
mov
lock
fs
repz
push
xchg
push
fsubs
out
insb
lds
mov
movsb
xlat
fnsave
pop
jle
js
jge,pt
pushf
fildl
cmp
xor
mov
loope
repz
and
jb
dec
xchg
dec
jne
push
je
test
jecxz
mov
out
lea
add
lock
inc
testl
cld
pop
mov
popa
sub
lea
inc
test
push
add
mov
loop
test
neg
addb
insl
sub
insl
dec
pop
mov
adc
sbb
xor
pop
mov
insb
out
lock
out
hlt
jge
rolb
loopne
inc
iret
ret
cmp
add
push
sbb
mov
cmpsl
sti
push
dec
ljmp
xchg
lods
in
cmpsl
mov
pxor
mov
fs
add
sbb
cltd
jge
dec
test
cmpsb
or
outsl
adc
clc
mov
jno
sbb
aad
pop
out
ja
xlat
xchg
aam
jmp
outsl
xchg
sbb
imul
xor
or
pop
xor
sbb
pop
cmc
pop
xchg
adc
push
mov
xchg
aaa
fiaddl
cmp
mov
jae
push
mov
test
nop
movsl
sbb
dec
adc
bound
or
or
mov
adc
mov
cmpsl
gs
xchg
sahf
pop
ja
aad
jp
jmp
mov
scas
mov
mov
aaa
add
mov
mov
adc
out
lret
adc
inc
jmp
pop
mov
shl
sub
and
imul
push
stos
jbe
and
xchg
fildll
cwtl
jnp
call
icebp
in
pop
xchg
pusha
sti
mov
fisttps
jbe
inc
cld
jbe
sub
inc
push
test
push
add
popf
xorl
jle
xlat
scas
push
xchg
jmp
and
imul
popf
push
dec
out
adc
sbb
iret
imul
hlt
js
arpl
inc
inc
inc
inc
notb
push
and
dec
add
stc
int3
push
pop
test
fiadds
scas
shlb
mov
sub
lahf
movsb
daa
push
les
add
jge
cmc
inc
sbb
into
aaa
dec
inc
enter
fdivs
push
cmp
fs
cmp
sbb
mov
jo
sub
scas
jecxz
pusha
push
out
push
mov
sub
inc
add
clc
or
dec
xchg
ret
push
es
sti
jne
push
adc
loope
mov
outsb
cmp
sub
movsl
into
scas
or
ret
lahf
jae
popf
and
sub
sbb
adc
fmuls
lock
xchg
rcrb
pop
stos
sarb
inc
inc
add
sub
jne
push
lahf
mov
sub
std
outsb
outsb
sbb
jno
shlb
push
popl
cli
mov
mov
sub
mov
xor
pop
add
lods
int
icebp
xor
pop
push
pop
jecxz
dec
lret
jl
cmpsb
mov
xor
rcrb
adc
sbbb
repz
fistpll
out
test
inc
adc
jmp
cmp
jo
xor
sbb
call
xor
push
dec
cmp
bound
or
aad
icebp
daa
ds
sarl
fildll
sub
add
adc
stos
testl
outsl
xchg
mov
out
je
fisubrl
fsubl
xchg
cmp
sti
in
mov
mov
aad
loopne
sub
cmp
inc
lret
flds
add
popa
mov
xchg
loope
mov
cmp
andl
xchg
inc
pop
xor
stos
pushf
xchg
jnp
sub
push
aad
add
mov
mov
jb
cmp
dec
in
push
je
ss
sbbb
mov
and
flds
mov
in
aad
sub
lea
mov
pop
sbb
inc
pop
sub
sub
daa
xchg
int3
mov
xor
adc
inc
mulb
mov
mov
and
mov
frstor
test
icebp
out
cwtl
cld
jecxz
jmp
lock
mov
ljmp
mov
icebp
das
rcrl
xchg
rclb
sti
sub
movsb
leave
aam
sub
ret
int3
jge
es
jb
mov
mov
cmpsl
cli
cmp
push
popa
mov
aaa
mov
xor
ljmp
aas
sti
pop
andl
add
dec
popf
cltd
mov
popl
lcall
mov
das
mov
sbb
movsb
cltd
ror
dec
add
stos
out
dec
push
mov
fs
rclb
pop
getsec
fcmovnbe
xor
jecxz
xor
filds
sub
xchg
push
pop
test
insl
popl
ret
dec
add
or
and
push
pop
jns
fstpt
stos
inc
gs
out
int
bound
inc
in
in
adc
sub
imul
pop
dec
mov
jp
adc
mov
mov
mov
lods
pop
mov
jne
pop
es
cmp
mov
xchg
in
xor
loop
das
adcl
pop
sub
fnstsw
pop
mov
int3
and
jmp
jnp
fidivrs
imul
xchg
adc
push
test
lret
sub
out
jae
fwait
out
push
ret
test
popf
test
iret
mov
mov
mov
inc
lock
sbb
xorl
push
xchg
cmp
adc
add
iret
lods
jge
out
xchg
push
hlt
hlt
ret
in
andl
cli
inc
dec
test
or
dec
fstpt
inc
mov
movsb
testl
inc
fucomp
pop
ret
cmpsb
std
fisubs
sar
lds
js
divb
mov
pop
jmp
mov
and
aad
jbe
ja
jge
xor
aaa
or
xor
jmp
ss
jns
xchg
inc
in
cld
sub
jo
push
std
scas
ret
push
roll
sahf
cli
pop
push
cmc
testb
mov
or
xor
pop
enter
daa
cli
in
push
imul
rcrb
lret
sub
dec
push
cmp
and
movsl
aad
mov
lahf
xchg
pop
icebp
cmp
jne
push
pushl
xor
dec
cmc
pop
rol
scas
js
ret
xlat
pop
insb
inc
xor
notb
int
mov
mov
adc
inc
adc
mov
movsl
test
mov
and
and
ds
int
out
pop
sub
loop
pop
bound
sarl
and
out
dec
mov
test
mov
jg
dec
push
stc
sahf
and
fs
jbe
loope
xor
cmp
sub
add
adc
inc
or
or
xor
aam
shl
cwtl
push
icebp
xor
outsl
sbb
or
fcoms
imul
sub
lods
or
out
lcall
mov
sub
mov
pushf
jb
insb
inc
scas
testl
cli
xor
adc
jge
add
repz
mov
movsb
jge
sbb
sub
xlat
pop
ss
arpl
in
jge
pushf
xor
inc
jmp
cs
sub
cltd
nop
xchg
sub
jb
pusha
mov
arpl
je
cmp
lret
lea
fsubrp
or
popa
push
pop
mov
dec
sbb
ss
xchg
fistpl
stos
pop
jns
addl
fwait
aas
aas
adc
xchg
and
xchg
rcll
mulb
std
dec
jecxz
cwtl
jp
mov
mov
mov
les
pop
cltd
push
mov
push
lret
in
xor
das
mov
lcall
mov
in
ret
pop
scas
add
jae
popa
insl
and
scas
andl
mov
push
lods
mov
iret
mov
and
stos
in
call
add
mov
cltd
jmp
push
adc
mov
idivl
push
cmc
repnz
in
clc
sbb
xchg
xchg
mov
sbb
mov
shll
call
imull
mov
pop
xchg
stos
jns
push
add
xor
push
sub
pushf
clc
dec
mov
jmp
js
mov
inc
test
mov
ss
mov
pusha
inc
mov
fimull
add
fwait
push
repnz
push
add
clc
add
icebp
and
lea
data16
movsb
xor
jp
inc
xchg
or
divl
adc
aad
or
xchg
mov
pop
mov
mov
mov
cmp
mov
mov
jae
out
mov
xchg
mov
loope
xchg
lods
icebp
cli
sbbl
xchg
out
insl
loop
jg
cmc
or
add
cli
stc
stos
pop
jmp
and
mov
outsl
jnp
push
push
jle
aam
in
or
pusha
fisttps
sub
pop
cltd
fistpl
inc
xor
bound
or
iret
push
inc
mov
sti
mov
loopne
xchg
adc
sbb
mov
imul
jne
push
adc
bnd
inc
sahf
ljmp
sbb
or
or
mov
add
xor
pop
bnd
fmulp
cli
dec
lds
js
shr
xor
xchg
jae
and
lret
cmp
sbb
jmp
jbe
sub
jge
dec
mov
fcomps
push
cmp
xlat
jno
aas
sarl
push
dec
pop
fnsave
fistpll
xor
call
push
jecxz
xchg
call
cmc
push
ror
inc
and
hlt
in
sbb
pop
enter
daa
stc
fildl
sbb
loope
ret
icebp
push
cmp
int
ds
std
movsl
fmull
and
stos
cmp
orb
in
xchg
mov
push
mov
pop
stc
mov
fcoms
stos
fcompl
dec
ret
sbb
adc
mov
outsb
jecxz
and
sbb
push
pop
test
mov
mov
mov
jno
shll
pop
addb
popa
loopne
mov
stc
ss
loope
lret
inc
aam
jg
push
arpl
sbb
int3
sahf
sahf
rorl
pop
adcb
jg
mov
loop
ss
push
shl
fs
pop
repz
mov
mov
fsub
jle
negl
pop
shll
push
sarb
push
pop
or
sub
mov
popa
cmc
pop
push
push
xor
jno
adc
jle
adc
xor
data16
cmpsl
lods
repnz
cmc
mov
les
push
or
push
push
std
mov
imul
decb
daa
ret
and
pop
sbb
outsb
inc
lock
mov
mov
cmp
mov
loope
mov
sbb
data16
xlat
lcall
adc
aam
fcompl
aam
pop
pop
aad
jb
nop
jb
add
pop
mov
dec
ficoml
jb
mov
lods
push
lea
ds
aaa
push
mov
push
out
sbbl
stos
fisttpl
push
inc
addr16
add
cli
sbb
mov
mov
insb
fcmovbe
mov
repnz
out
jae
cwtl
xor
xchg
icebp
xchg
xchg
xor
cmp
lret
into
adc
rcrb
lock
jnp
das
xchg
insb
pop
sar
insl
leave
sub
je
aam
fcomi
ret
ljmp
insl
or
outsl
dec
jnp
add
clc
daa
jp
push
mov
je
mov
mov
js
sub
inc
scas
ret
pop
rcrl
cltd
and
sbb
xorl
or
push
pop
nop
xchg
lret
sbb
push
pop
out
in
movsb
mov
ret
sti
push
push
or
pop
pmaddwd
xor
jo
fcomp
dec
xor
gs
mov
out
outsb
cmovge
mov
test
pushf
mov
dec
test
stc
orl
cmp
movsl
pop
add
add
mov
ljmp
push
jns
movsl
ljmp
test
mov
mov
sbb
ja
jo
jp
jge
mov
lods
in
in
rorl
sub
push
mov
shlb
pop
dec
xchg
xchg
adc
imul
js
mov
jne
stos
mov
pop
xor
stos
iret
mov
out
and
sbb
xor
shl
add
fcmovu
test
jns
jns
addr16
rclb
jae
mov
loope
negb
mov
cmp
enter
icebp
xchg
out
pop
add
mov
inc
scas
or
or
adc
lret
or
xchg
mov
hlt
pop
sahf
dec
arpl
and
inc
dec
push
lret
push
mov
ret
es
rcrb
push
lds
cmpb
jbe
and
je
cmp
into
lcall
inc
mov
push
fstpt
push
and
xchg
push
lahf
aaa
mov
cmp
mov
jl
mov
dec
xchg
fisttpl
ret
xor
inc
out
scas
addb
push
add
outsb
cmc
push
mov
mov
cmpsb
mov
icebp
in
jmp
enter
daa
clc
aam
push
ss
add
cli
cmp
pop
mov
jecxz
mov
lahf
shl
mov
mov
jp
xor
not
sbb
jmp
repnz
xor
fdivrl
push
outsb
inc
add
xchg
iret
shl
ljmp
or
sbb
or
pop
and
push
lock
mov
and
sbb
add
mov
and
xchg
mov
add
adc
test
inc
jg
iret
adc
sub
push
stc
or
daa
fs
imul
cmpsl
mov
cmp
cmp
mov
mov
inc
xor
add
or
add
into
lcall
xor
scas
push
outsl
fcomps
adc
adc
hlt
pop
add
ss
mov
lods
fprem
jae
xlat
cmp
xlat
das
ja
mov
inc
mov
das
mov
cli
sub
push
gs
xor
pop
cmp
fiadds
mov
inc
inc
add
xchg
sub
icebp
sbb
mov
push
pop
pop
dec
dec
push
adc
or
cs
mov
and
arpl
jb
inc
push
dec
push
fwait
inc
je
ds
scas
loop
rolb
sub
dec
pop
pop
mov
mov
or
cmpsb
fstpt
fildl
arpl
aas
add
movsl
mov
pop
popa
insl
and
xchg
dec
shl
mov
ljmp
cwtl
lock
mov
insb
sarb
les
lret
cmp
flds
sti
lock
fildll
jo
rcl
lahf
in
sub
ror
aam
xor
es
insw
repz
dec
jbe
pop
cmpsl
mul
ja
lds
mov
lods
xchg
neg
mov
fwait
xchg
outsb
mov
loopne
and
cltd
pop
add
test
jg
mov
jge
push
jnp
push
xor
cmp
push
outsb
test
iret
mov
stos
xchg
dec
sub
ja
out
cmp
lea
in
and
xor
dec
jge
xor
imul
pop
outsb
shrb
jmp
fs
mov
pusha
or
inc
sbb
dec
stos
into
add
cld
lea
bound
call
in
adc
ja
fcomi
mov
pop
jg
xchg
ja
lods
jp
shlb
ret
mov
stc
shrl
or
mov
or
loop
inc
mov
xchg
gs
jmp
inc
jne
cmpl
inc
sub
push
mov
shrl
repnz
pushf
jnp,pn
xlat
lock
and
or
ffreep
sbb
nop
pop
pop
ljmp
sbb
out
popf
sbb
xchg
push
fisubl
leave
cmpsl
sbb
xchg
shrb
pop
clc
scas
jo
movsl
push
imul
iret
dec
mov
out
jns
mov
lcall
hlt
call
or
mov
sub
or
sub
add
pop
push
imul
lds
subps
and
pushf
and
test
mov
fisubs
in
jbe
repz
jge
cmp
mov
mov
sbb
jno
mov
scas
dec
cmc
push
adc
movsl
repz
mov
fsubrl
cmp
sbbl
inc
inc
icebp
cmc
cmpsb
cmp
sub
jae
pusha
daa
notl
push
test
call
cmp
stos
ds
jg
and
push
cltd
lahf
out
daa
mov
xor
aaa
add
pop
cld
xor
or
and
add
sbb
sub
lcall
xchg
fsubl
push
sub
adc
lcall
pop
mov
pop
mov
scas
mov
out
and
bound
repz
or
jnp
in
pop
fbld
pop
lret
pop
roll
xchg
mov
jbe
sbb
sahf
sbb
imul
sbb
jb
mov
sbb
adc
mov
jge
fdivrs
pop
int3
cmp
sbb
cli
scas
in
xor
out
cmp
movsl
or
xchg
jge
and
xor
aad
mov
out
dec
sub
or
adc
or
add
ret
dec
lods
sar
mov
aam
out
lea
mov
inc
jle
sti
test
cmp
or
loopne
pop
dec
pop
push
inc
stos
inc
push
insl
clc
fldenv
push
push
les
or
jg
ljmp
push
push
cmp
cwtl
push
xlat
sbb
inc
adc
mov
xor
jmp
vucomisd
mov
sub
jecxz
adc
xor
enter
dec
aas
scas
jecxz
push
pop
ror
cwtl
lea
repz
ficoms
adc
dec
testl
bound
cmp
push
lea
mov
jns
mov
cltd
adc
imulb
inc
cmp
mov
inc
js
sbb
or
popl
inc
lret
lods
dec
bound
mov
dec
adc
dec
lret
mov
rcrl
cmp
pop
ret
or
sbb
cld
jmp
insl
fisubrl
cltd
dec
jno
cmp
mulb
daa
ljmp
mov
mov
mov
ljmp
ljmp
add
sbb
test
pop
jg
adc
dec
fstpl
push
clc
lret
xchg
dec
push
jne
or
shll
xchg
sub
mov
fcmovu
mov
subb
mov
or
or
gs
mov
hlt
inc
or
or
test
sbb
xchg
cmp
inc
dec
fsub
or
mov
cmpsb
push
jmp
test
pop
jp
ljmp
bound
xchg
and
push
or
pop
lret
aad
cmp
or
insb
push
jp
mov
mov
popa
jo
cmp
push
out
adc
jne
loopne
mov
xchg
sbb
xchg
cmp
jle
sbb
jns
push
mov
or
add
mov
mov
or
xlat
addr16
into
dec
stos
mov
inc
and
and
pop
jnp
cmp
and
psraw
pusha
add
cmpsl
pop
lahf
jp
pop
ds
inc
push
mov
jae
ljmp
inc
aad
mov
mov
or
sbb
inc
cmp
mov
jbe
mov
push
adc
repnz
hlt
hlt
out
sahf
pop
arpl
repz
push
clc
add
aaa
sbb
jge
lods
mov
add
int3
in
xor
mov
mov
mov
rolb
and
push
cmp
push
movsb
cltd
push
jmp
add
jge
add
aaa
or
inc
jno
xor
and
cmp
push
mov
xorb
mov
push
or
jb
push
and
inc
rorb
jmp
int
mov
daa
notb
push
shr
loope
test
xor
ds
das
pop
movsl
icebp
lods
push
and
leave
es
push
jae
addb
sub
mov
xor
adc
pop
outsb
mov
js
xchg
mov
lcall
adc
adc
pop
sub
ljmp
pop
insl
adc
lods
adc
loop
and
orl
and
mov
mulb
or
divb
test
or
rcrl
bound
stos
in
test
mov
pop
sbb
dec
mov
icebp
fs
add
sbb
dec
pop
cmp
pop
push
sti
not
cmp
jo
add
insb
or
into
pusha
out
cmc
mov
add
mov
icebp
outsl
xchg
andl
sbb
hlt
adc
je
add
frstor
jo
lods
cmpsl
call
xchg
out
outsl
sub
and
xchg
mov
in
lods
mov
fdivrp
clc
test
adc
ret
loopne
xchg
add
dec
lds
push
scas
fstps
sub
pop
mov
repnz
mov
mov
fcoms
repz
push
out
pop
mov
ret
adc
sbb
jmp
icebp
push
test
mov
add
and
or
dec
aas
lcall
int
inc
add
in
jmp
call
pop
add
pop
dec
add
push
fistl
loopne
pop
add
es
aas
inc
cs
mov
enter
and
pop
rcll
js
std
in
add
sub
out
stos
mov
sbb
nop
lret
sbb
dec
mov
dec
mov
fwait
jno
cmpsb
int3
or
jg,pn
shlb
fwait
sub
jns
aam
fcompl
ret
xchg
sbb
insl
rorl
dec
insb
arpl
cmc
in
ljmp
subb
cs
jne
shlb
cli
xchg
add
addr16
push
mov
adc
push
add
and
andl
out
mov
mov
mov
out
cmp
fisubl
push
lcall
xor
cmp
movsl
loope
jno
pop
xchg
dec
mov
xor
test
inc
in
jae
cmp
push
sbb
mov
add
xor
decl
stos
jbe
cwtl
jecxz
jns
jg
in
push
ja
inc
popf
mov
mov
cmc
lret
aaa
mov
jp
bound
icebp
mov
jp
dec
shlb
or
add
out
ja
adc
xchg
sbbl
out
push
inc
sub
dec
test
addr16
jb
stos
sub
and
pop
insb
data16
jle
add
in
lcall
add
cld
inc
pop
jne
push
inc
pusha
mov
cld
push
xchg
adc
mov
divl
fimull
insl
cltd
xchg
repz
mov
scas
ss
lods
push
stc
mov
adc
mov
or
repnz
ret
jp
sbb
cmp
ljmp
fs
mov
dec
inc
sbb
mov
add
in
int3
xlat
xlat
adc
ficoms
pop
lds
xlat
rcrb
mov
popf
xor
movsb
imul
jbe
mov
sbb
cmc
sub
in
cmp
flds
push
lret
nop
jl
lods
hlt
dec
rcr
popf
push
imul
jo
push
xor
loopne
lds
in
jp
inc
pop
jb
cmpsb
inc
dec
in
mov
mov
imul
xlat
push
lods
ret
loope
mov
sub
or
aad
jae
std
movsl
clc
aas
iret
and
lahf
sub
sbb
dec
add
adc
lret
lret
xchg
testl
lcall
mov
sub
outsb
outsl
sbb
adc
xchg
popl
into
mov
mov
leave
mov
mov
sub
stc
cmc
adc
pop
ds
sub
sti
pop
ffree
lret
sbb
mov
addb
fwait
test
cltd
cmpb
dec
loop
push
xchg
stc
xor
pop
fs
popa
test
insb
add
ss
insb
cmp
shrb
notl
cmp
xor
push
mov
jnp
mov
ud0
inc
orl
jnp
xorb
sub
fistl
cmc
adc
imul
xor
mov
xchg
imull
enter
aam
les
loop
and
pop
xchg
repz
pop
test
sbb
push
std
pop
xchg
pop
sbb
cmp
xchg
fsts
xchg
sbb
sbb
or
cmp
insl
xlat
xchg
sbb
add
pushf
mov
jmp
loope
cs
lcall
dec
mov
sbb
dec
mov
sub
push
jecxz
or
lea
mov
outsl
clc
push
fdivr
inc
mov
dec
xor
int
jmp
pop
test
xor
push
cmp
data16
aas
loope
lock
jg
ljmp
cltd
jp
mov
adc
cwtl
and
test
orl
cld
in
lahf
lret
mov
and
add
das
or
insl
xchg
in
ret
hlt
aam
cs
es
aam
add
insl
test
pop
dec
addr16
push
cmpsl
hlt
sub
push
ds
ds
lods
sarb
xlat
mov
jl
fsubs
cmp
mov
out
test
ljmp
adc
test
jg
inc
movsl
dec
xchg
jg
sbb
add
aam
mov
stos
pusha
movsb
mov
mov
in
push
push
jne
cli
mov
xor
int3
xor
arpl
mov
cli
ljmp
scas
ljmp
jne
addl
fcoms
push
xor
add
dec
mov
bound
adc
xor
rclb
sub
mov
mov
cmp
ja
jp
ret
inc
movsl
and
je
dec
mov
jecxz
pop
jp
mov
mov
adc
or
xchg
movsb
xor
mov
loopne
add
or
pushf
addr16
lcall
aaa
sbb
jnp
push
dec
jle
cs
sbb
in
cli
fbld
mov
pop
lods
int
inc
imul
sub
popf
xchg
sbb
popa
push
ss
dec
out
sbb
pop
sti
imul
scas
cltd
ret
inc
popa
in
adc
iret
push
add
leave
icebp
addr16
test
cmp
add
or
sub
lret
or
ja
int3
ret
pop
fisttpll
xchg
fdivrp
or
movsl
shlb
mov
xor
adc
fcmovnu
cltd
movsb
hlt
sbb
push
xchg
jbe
sbb
pop
inc
push
sbb
pop
aaa
xchg
leave
cmp
popw
jno
xchg
jnp
addr16
inc
dec
push
dec
push
mov
mov
or
clc
cmc
scas
cld
aad
push
mov
pop
test
mov
mov
cwtl
lahf
cmpsb
ret
jg
in
fwait
out
ror
mov
hlt
loopne
push
cmp
loope
push
pushf
sub
jecxz
cmp
adc
xchg
movlps
in
jo
dec
adc
mov
lcall
xor
jb
pop
mov
hlt
insb
pop
out
push
lcall
mov
push
ds
outsb
rorb
pop
shlb
dec
mov
or
mov
inc
mov
mov
mov
int
xchg
lods
sub
sbb
pop
pop
loope
lret
stc
rol
jns
popf
lret
or
lret
sahf
add
test
icebp
push
sbb
sbb
add
idiv
call
add
lret
add
fmuls
int
cli
inc
cmc
add
mov
cmpsb
mov
into
adc
cmc
inc
pop
fidivs
data16
outsl
push
cmc
inc
adc
mov
imul
inc
test
xor
data16
xchg
ret
inc
sbb
sarl
mov
in
andb
mov
xchg
loopne,pt
and
loopne
aas
ljmp
rcl
sub
add
in
fs
xchg
ss
les
lea
insl
xlat
aad
lock
push
shll
adc
fistps
pushf
xor
cmp
cs
js
aad
fsubr
nop
mov
mov
cmp
sub
cmp
jecxz
dec
daa
xlat
lea
fcoms
je
mov
outsb
decb
pop
dec
ficomps
inc
add
cmc
mov
ss
inc
shrl
es
imulb
std
xor
mov
gs
mov
enter
adc
ja
aas
push
imul
in
hlt
ret
outsl
imul
mov
aam
aad
ret
mov
gs
push
insl
popl
call
ljmp
jnp
cmp
push
fs
xorl
pop
pop
mov
xchg
cltd
xor
xchg
shlb
jno
inc
xor
jnp
mov
sbb
test
add
lret
stos
dec
dec
mov
xchg
push
arpl
xchg
test
incl
dec
or
sbbl
xchg
imul
hlt
xor
sub
jg
push
mov
or
mov
fwait
and
in
aam
adc
add
ja
inc
push
test
jns
inc
shl
mov
xchg
cmp
cld
xlat
cmpsl
pop
imul
mov
add
aad
mov
jge
mov
mov
mov
jne
fucom
mov
outsl
movsb
out
ret
xchg
test
jmp
outsl
insb
roll
inc
jle
sub
inc
mov
sub
dec
iret
or
cmp
jnp
push
arpl
dec
add
and
icebp
pusha
rcl
sbb
fcomps
inc
jbe
cmp
xor
push
sbb
mov
jne
cmpsl
fisubrl
lret
loop
sbb
inc
mov
sub
int3
scas
cld
stos
or
adc
daa
push
iret
in
dec
repnz
leave
push
adc
pusha
inc
pop
or
test
cmp
add
sbb
iret
int3
lods
mov
sbb
dec
in
mov
mov
ret
pop
cmpb
cmp
jg
pusha
push
add
sbb
mov
imul
cmp
cmp
mov
mov
mov
cmpsb
and
push
xor
xor
or
sbb
test
or
inc
jge
les
orb
daa
rep
fwait
push
jg
loope
mov
sub
mov
cmp
mov
ja
push
nop
pop
and
insb
fildl
rorl
and
push
lea
jecxz
cmpb
fstl
and
jp
push
push
mov
sub
mov
xor
ret
mov
cmp
test
mov
filds
sbb
and
testl
pop
fstpt
lret
mov
mov
repz
dec
pop
outsl
xor
fs
pop
loope
pop
sbb
stc
lahf
pop
outsl
fs
adc
cmp
mov
jo
dec
push
inc
notl
cs
jp
dec
xor
sti
lea
in
jns
into
or
mov
rorl
adc
xlat
repnz
test
xchg
sub
mov
sub
mov
in
call
sti
gs
xchg
sub
loopne
mov
pop
rorl
stos
fsin
push
push
xchg
stc
push
fs
enter
adc
xchg
pop
leave
hlt
mov
dec
out
push
pushf
fisubs
mov
aad
sbb
sbb
add
data16
loope
cli
into
or
fbstp
lea
push
lahf
call
fidivl
mov
nop
and
cmp
aaa
es
xchg
cmp
pop
in
push
mov
in
and
lds
sarl
add
cmp
sahf
std
mov
out
inc
icebp
lahf
es
cld
cmp
lret
push
push
push
mov
js
lock
push
das
lret
mov
shr
movsb
ja
fildl
aam
shl
ret
inc
jb
es
and
sysenter
dec
pop
mov
xchg
ljmp
lods
test
test
icebp
fwait
ret
mov
mov
fisubl
jnp
js
xchg
pop
cltd
insb
adc
test
inc
mov
icebp
push
push
dec
sbb
imul
mov
sbb
jns
roll
sub
stos
ds
out
mov
int3
push
sub
fwait
comiss
xor
and
mov
fxam
mov
add
dec
pop
pop
cld
test
or
xchg
lahf
cltd
dec
pop
cmp
inc
stos
inc
add
pop
cmp
ja
pop
add
xor
jmp
sub
jns
sbb
xor
mov
ds
mov
es
emms
je
in
jp
pushf
sbb
out
dec
mov
adc
jne
mov
mov
xchg
test
jns
cmp
bound
enter
sarb
or
mov
and
pop
insb
mov
jnp
jle
fs
in
sbb
sbb
jmp
sub
inc
dec
inc
orl
push
fisttpl
or
mov
lods
fisubl
lret
clc
add
sbb
aas
mov
jae
scas
pop
xchg
adc
iret
es
test
xchg
mov
scas
hlt
sbb
rolb
aad
aad
fsubrs
lahf
adc
lcall
add
les
pop
cmp
cmpsb
vdivps
mov
push
les
dec
cmp
out
and
shrl
lods
adc
sti
aaa
add
jnp
sbbl
pop
dec
and
push
adc
push
xor
gs
scas
mov
shrl
push
sub
inc
or
ret
cmpsb
leave
dec
and
imul
daa
bnd
push
ja
loope
sub
sub
or
cmp
inc
lea
fdivrl
sbb
xor
ja
nop
ret
or
lret
lcall
stos
sbb
push
js
movsl
dec
pop
movsl
loope
scas
jo
fdivrl
adc
adc
sbb
pop
push
cli
mov
cmp
into
imul
xchg
push
add
jge
loop
cwtl
pop
pop
mov
xchg
shl
scas
mov
pop
sbb
hlt
sahf
dec
jnp
test
and
adc
ljmp
xchg
fs
mov
fdivrs
add
not
insb
cmp
lods
addl
sub
pop
fnsave
cmc
shr
cmc
xor
subb
cltd
adc
lret
and
adc
arpl
add
add
scas
or
mov
pop
les
cmp
into
in
pop
jb
sti
adc
mov
gs
adc
push
pop
repnz
out
inc
jne
cmp
les
clc
xchg
xchg
mov
jp
cmp
xor
negl
int3
adc
mov
adc
cmpsb
aad
ret
outsl
mov
subl
je
sub
jecxz
xchg
and
loop
jl
mov
jne
loopne
stc
pop
cmc
adc
jno
mov
jnp
sbb
adc
rorb
add
pop
imul
mov
mov
movsb
mov
jnp
int3
or
idivb
std
sbbb
push
cwtl
mov
mov
jbe
lods
cld
movsw
inc
lret
xlat
int3
mov
add
mov
lock
mov
sub
jns
aam
pop
push
ret
rol
mov
insl
pop
andb
pop
push
pushf
cmpsl
icebp
sbb
ljmp
dec
lods
adc
inc
mov
insl
add
and
subb
pop
lcall
cltd
mov
fwait
pop
mov
outsb
rclb
nop
fstpl
sub
jbe
mov
and
xor
stos
sub
je
xchg
jecxz
jmp
push
mov
mov
xor
jb
xor
xchg
fisubs
add
push
dec
ret
test
test
dec
dec
mov
aas
or
loope
fwait
jle
jae
sbb
mov
sahf
inc
lods
incl
in
lock
lcall
dec
incl
int
ja
out
jp
pop
jbe
int3
cwtl
and
adc
mov
adc
mov
push
mov
xchg
push
xchg
push
jmp
add
mov
inc
sub
aaa
or
movsl
stos
hlt
cs
and
insb
push
pop
xlat
jnp
mov
jle
insl
add
xor
pusha
or
stos
filds
or
pop
push
jne
inc
mov
xchg
jae
pop
inc
push
sahf
cmc
xchg
popf
pop
cmp
push
repz
fcmovbe
sti
fstl
fists
aas
imul
sub
adc
or
iret
test
ja
push
xchg
hlt
pop
les
je
inc
fs
add
sahf
jno
inc
sbb
mov
imul
add
mov
pop
push
push
fsubp
xchg
lds
xchg
rol
repnz
jmp
jecxz
movsb
xchg
orl
cs
jbe
es
jge
push
xchg
sbb
mov
mov
jl
in
dec
and
xor
rclb
cltd
push
rcll
out
test
sbb
inc
fwait
movsb
mov
push
jno
enter
daa
icebp
adc
loope
jmp
sub
pop
std
cmp
stos
incl
mov
aaa
es
test
popa
fcomps
aas
fwait
add
jo
xor
xchg
outsb
and
mov
pop
pop
pop
mov
test
fsubrl
lods
sub
cltd
test
xchg
shl
int3
imul
aam
pushf
mov
dec
lods
and
lret
cmc
jmp
sub
sbb
flds
lret
mov
mov
sbbb
jne
sahf
jmp
cmp
sub
mov
sub
push
mov
adc
incb
cmp
mov
add
xor
divb
or
add
into
iret
jp
cmc
xchg
dec
xor
fwait
outsl
icebp
inc
push
inc
and
jmp
mov
imul
filds
lea
cmp
rclb
and
ret
mov
mov
gs
pop
adc
lcall
lret
in
les
test
xchg
jg
rcrb
adc
xchg
push
adc
pop
push
adc
jbe
pushf
xor
ds
dec
arpl
je
mov
nop
dec
nop
orl
ret
xchg
int
je
and
pop
in
jmp
call
fdivr
imul
mov
dec
jns
cmpsb
fildl
frstor
pop
xor
pop
inc
lahf
in
inc
shl
mov
pop
sub
mov
pop
mov
and
call
push
idivb
or
cwtl
or
int3
and
dec
js
cld
xchg
fstpt
lret
inc
gs
mov
xor
mov
add
das
mov
rclb
push
xor
std
rcrl
push
not
insl
inc
fldenv
lock
push
ljmp
push
lods
jle
outsl
mov
nop
and
sbb
aaa
das
add
lds
je
or
ror
in
inc
fucomip
clc
sub
xor
cmp
mov
xor
dec
stos
sbb
icebp
out
sub
add
loope
sbb
in
inc
mov
clc
ja
or
mov
xchg
dec
sub
test
js
xchg
ljmp
fcom
ret
aaa
xor
mov
scas
mov
jmp
sbb
jmp
cmp
iret
sbb
mov
es
pushf
addb
repnz
test
cmp
outsl
mov
add
dec
inc
sub
jne
pop
xor
pusha
out
xchg
sub
xchg
rclb
lret
andl
adc
into
and
sub
xor
fildll
xchg
mov
adc
mov
jle
push
in
adc
pusha
movsb
push
lods
fbld
xchg
jns
mov
inc
xchg
mov
or
popf
cs
jno
pop
jne
push
xor
fstp
mov
je
cmpsb
scas
lahf
sbb
mov
imul
fwait
scas
and
imul
adc
pop
fcomi
sub
mov
int
adc
mov
dec
arpl
mov
sbb
or
shlb
add
sub
outsb
xchg
pop
cltd
push
nop
fiadds
insl
xor
fistps
imul
mov
ret
movsb
and
mov
out
add
sti
jbe
sbb
imul
out
cmp
cmp
push
jl
xchg
dec
lcall
int
aam
sbb
scas
js
gs
decl
xchg
test
jecxz
faddl
fistl
iret
jmp
mov
daa
lock
push
cmp
mov
xor
daa
loope
and
movsl
sbb
scas
and
add
mov
cmc
sbb
ja
cli
lcall
xor
mov
pop
loop
jp
adc
das
jmp
adc
sub
mov
pop
lcall
popa
mov
sbb
les
dec
xor
pop
and
inc
mov
int
sar
sub
rorb
lret
push
shll
adc
faddl
test
jecxz
addb
jg
jl
loop
dec
jno
enter
loopne
adc
xchg
imul
inc
jae
fdivrs
xchg
push
sbb
cli
adc
outsb
xor
dec
cmp
push
ljmp
cmp
inc
into
mov
jecxz
pop
or
xor
cmp
rorb
adc
add
shl
add
jg
adc
push
lods
adc
leave
mov
xor
and
mov
cs
sti
jb
mov
lret
gs
mov
pop
xor
xor
or
mov
lret
sub
sbb
jns
outsl
xlat
shr
rcrb
xchg
sub
push
icebp
push
pushf
fistps
jmp
or
cmp
jg
cs
and
push
lret
jb
in
inc
dec
or
fidivl
xor
daa
repz
call
ljmp
xchg
mov
pop
subl
cmc
sub
cld
push
sarb
aas
cld
int
mov
adc
and
mov
shrl
stc
testb
mov
cwtl
enter
popa
pop
adc
and
push
cld
mov
sarl
adc
mov
fisubrl
enter
push
jle
sub
sar
aam
mov
jmp
insl
sub
dec
dec
dec
out
cmpsl
out
dec
sbb
pop
push
mull
xor
jmp
add
mov
lahf
add
fcomps
add
shll
test
stos
mov
xor
push
xchg
orb
xor
addr16
add
sbb
and
xchg
dec
stos
or
mov
jno
and
mov
cmovl
mov
or
repz
mov
arpl
or
jmp
nop
cmp
adc
aad
dec
xor
imul
clc
or
popa
jo
fcompl
push
pusha
nop
sub
aam
outsl
inc
iret
mov
jns
jg
in
f2xm1
xchg
push
mov
mov
inc
mov
pop
push
cmpsb
ja
sbb
jp
sub
jp
lea
iret
add
xchg
cld
inc
out
aas
mov
xchg
std
sbb
xchg
fwait
mov
and
push
inc
cmp
sub
push
push
stos
fcmovb
out
and
xor
je
jle
pop
dec
in
and
pusha
aas
dec
cmp
mov
dec
sbb
mov
leave
jae
out
cmp
and
fstpl
xchg
mov
call
xchg
std
cmp
sbb
xor
imul
jl
mov
aam
mov
ds
iret
inc
mov
leave
inc
jmp
cmpsb
arpl
ss
or
xchg
rolb
or
outsl
add
and
pop
enter
sub
mov
sar
mov
and
sub
cmp
fsubl
test
sub
xchg
sbb
shlb
cmp
scas
xchg
push
add
dec
insl
fchs
push
mov
sub
jo
push
sub
sar
subl
push
jge
mov
out
in
push
out
enter
daa
out
leave
xchg
push
xchg
mov
iret
fnstsw
cmp
rcll
inc
outsb
fisubs
push
and
lahf
out
adc
lods
cmp
xor
xor
jbe,pn
add
push
ljmp
inc
and
mov
mov
adc
test
sub
mov
cltd
push
mov
adc
and
add
push
or
ret
lcall
xlat
sbb
lret
xchg
sarl
scas
sbb
pop
add
xor
test
andb
jg
in
loop
sbb
fs
sub
adc
lds
xchg
ds
cmp
xor
pop
notl
mov
test
out
and
jge
jecxz
test
jno,pn
and
inc
jecxz
scas
faddl
imul
mov
add
xchg
mov
lods
clc
cmp
scas
out
or
xchg
mov
cltd
shll
fisttps
in
outsl
mov
loopne
dec
mov
inc
scas
pop
push
mov
mov
xchg
add
inc
mov
mov
pusha
xlat
adc
and
xchg
mov
adc
cmp
jmp
xchg
loopne
cmp
or
nop
add
outsb
jb
dec
icebp
dec
add
je
adc
jmp
jmp
mov
out
xchg
aam
dec
cltd
inc
addl
mov
pop
rcrl
jp
pop
inc
lods
pop
adc
aas
fwait
jbe
mov
leave
mov
icebp
iret
cmp
mov
aaa
sub
cwtl
cmpl
and
pop
mov
sti
pop
xchg
cld
out
jp
and
adc
notl
inc
lock
not
cmp
aam
add
adc
cmp
xor
cmpsl
out
test
sbb
shlb
mov
and
cmpsb
fidivl
push
mov
testl
inc
test
jl
push
push
cmpsb
icebp
fstl
ljmp
mov
fdivl
stos
cli
std
adc
repnz
xchg
xchg
mov
data16
bts
shlb
sbb
or
and
pop
jecxz
or
cmc
dec
div
dec
test
aaa
sub
daa
adc
inc
push
cmc
push
or
pop
je
or
popf
push
add
add
out
stos
jl
bound
hlt
jns
call
icebp
xchg
insl
and
mov
xlat
loop
aas
push
lahf
ja
cli
jno
pusha
sarl
shlb
mov
loopne
mov
jne
cmpsl
fdivs
push
xchg
xchg
shrb
push
xchg
andw
ss
out
xlat
jnp
insb
xchg
sub
cld
stos
dec
mov
pop
insb
dec
push
add
in
cltd
push
pusha
ficoml
mov
aaa
cmp
inc
lods
inc
in
jae
dec
mov
out
ficompl
sarl
push
mov
sbb
enter
in
mov
imul
mov
push
ljmp
iret
mov
iret
pusha
leave
mov
roll
insl
pop
mov
push
xchg
in
dec
or
add
pusha
int3
inc
cwtl
fcompl
or
std
rclb
cmp
mov
lods
cmpsl
movsb
fimuls
push
popa
imul
dec
push
sub
add
sbb
dec
jae
jno
call
iret
dec
outsl
push
mov
pushf
cmpsb
jo
push
scas
mov
test
jns
ss
dec
adc
cmpsb
aad
scas
in
add
mov
and
pop
or
out
push
sub
inc
dec
cmp
nop
popf
movsl
sub
stos
and
pop
push
sbb
push
add
jmp
xor
and
mov
mov
aad
js
idivb
pusha
mov
lcall
jg
push
cmpsb
sub
jecxz
outsb
and
jecxz
pop
jmp
dec
ficompl
ja
cmp
pop
and
or
int
dec
lods
sub
and
pop
push
dec
daa
lret
lods
rcll
mov
into
push
sbb
imul
sahf
aam
adc
jl
sub
dec
out
out
data16
xor
fsts
xchg
je
fmuls
fsubr
inc
fs
adc
arpl
cmp
and
jne
js
push
cmc
in
mov
xor
mov
adc
shlb
mov
jecxz
filds
mov
sub
xor
mov
add
sti
rol
sar
adc
call
loopne
es
inc
shl
fsts
sub
out
repz
dec
xchg
xchg
enter
adc
clc
xlat
dec
or
pop
dec
xor
pushf
xor
loope
cs
adc
or
sbb
jb
fists
dec
divl
sbb
inc
pop
push
out
xor
lea
call
push
daa
mov
cmp
fisttpl
inc
pop
inc
xor
pop
inc
and
pop
mov
xorb
jl
icebp
rorl
add
testb
push
cwtl
ds
in
mov
or
mov
rolb
cli
cld
adc
lret
xchg
pop
mov
mov
jg
es
rorb
mov
cmp
pop
mov
mov
insl
stc
xor
pop
cmpsl
in
mov
inc
in
popa
repnz
pusha
lods
mov
outsl
leave
mov
lods
fisubl
pop
push
repz
out
movsb
cltd
jg
imul
inc
or
mov
cmpsb
xchg
push
sbb
xor
add
out
push
dec
into
xchg
lcall
jb
mov
or
nop
xor
mov
xor
rolb
pop
xrelease
notb
dec
pop
xchg
or
xchg
cmp
sbb
inc
popf
cmp
or
xor
fwait
cmp
fcomps
cmpsb
push
test
or
incl
cmpsl
imul
cmc
sahf
in
adc
mov
fistps
mov
int
mov
jp
or
mov
sbbb
repz
mov
out
ljmp
mov
cmp
out
std
pop
xchg
xchg
mov
int3
sbb
xor
push
out
sub
and
push
addr16
and
and
out
mov
jnp
inc
mov
sbb
dec
jb
pusha
jne
test
ret
inc
pop
sub
pop
pop
jae
out
push
stos
sbb
mov
pop
test
fisubl
shl
mov
inc
scas
dec
and
dec
ret
add
repnz
int3
gs
xchg
fists
inc
jo
sub
mov
or
sub
mov
das
fistps
or
outsb
cs
shlb
cmp
or
adc
fsub
xchg
movsb
sar
push
mov
sub
add
sbb
push
cmp
mov
ds
dec
mov
je
and
jo
cltd
and
js
sbb
inc
xchg
mov
cmpsb
pop
cmp
in
in
in
std
enter
daa
in
fsubrs
sub
call
sub
mov
in
cmp
adc
and
in
sbb
insb
mov
xor
int
jp
insb
pop
int
outsb
js
cld
push
pop
lahf
cmp
call
fcoml
add
outsb
xchg
adc
pop
cwtl
hlt
cmp
cmc
mov
and
and
push
cmp
adc
xchg
int
fldcw
pop
aad
mov
xchg
lret
call
mov
push
stos
xor
ja
sub
xchg
ret
push
mov
xchg
stc
jmp
mov
adc
dec
out
sbb
cmp
stos
decl
mov
fidivs
xchg
and
aaa
or
mov
cmc
mov
test
jecxz
subl
fsts
lea
imul
lock
sbb
pop
cwtd
out
fsubrl
mov
xchg
inc
sub
std
mov
outsl
sbb
xor
sub
in
loopne
adc
lea
inc
aam
dec
inc
mov
repz
cmovs
aaa
out
cmp
inc
out
mov
pop
sti
mov
loopne
xor
cmp
mov
add
ret
outsl
bound
mov
jb
cmpsl
dec
outsb
dec
je
dec
add
push
jnp
icebp
test
lea
sub
aam
lret
mov
jecxz
subl
mov
push
cwtl
inc
mov
sub
mov
aaa
cli
int3
and
pop
pop
rcll
push
test
xor
ret
mov
cwtl
stc
movsb
aas
mov
iret
sbb
test
cld
add
add
mov
mov
mov
aaa
das
add
sub
aam
xchg
mov
sbb
dec
dec
aas
or
in
repz
ljmp
jecxz
sub
mov
sbb
cmp
mov
sbbb
in
add
push
jle
mov
roll
fidivrl
dec
mov
clc
sbb
cmp
sbb
and
rorl
push
stos
fdivrs
ja
mov
cmc
push
dec
or
xor
or
xor
sbb
and
lds
jmp
xchg
xchg
fisttpll
aaa
inc
inc
xor
sub
fwait
imul
add
and
cwtl
xchg
fbld
in
lods
aaa
xchg
or
dec
mov
pop
jns
lea
pop
mov
pop
ja
inc
imul
jge
call
mov
mov
dec
jle
xchg
sbbb
jns
out
fdivl
inc
jmp
cld
ds
andl
out
pop
jnp
cmp
or
mov
mov
out
popf
push
insb
and
push
cmp
out
in
scas
mov
jno
fistps
sub
pop
mov
pop
fs
dec
inc
ret
cmp
jae
enter
ret
jnp
lret
mov
cs
ficoml
xchg
add
cmp
mov
js
js
cmp
and
xor
pusha
icebp
jo
js
xor
test
push
test
addb
jae
add
add
sbb
sub
adc
pop
push
rcll
adc
jne
dec
pop
fdivrl
enter
xchg
mov
or
cmp
jge
jmp
mov
cmp
jle
jl
dec
dec
dec
mov
aaa
pop
xor
xchg
cmc
scas
hlt
cmp
push
dec
negb
push
xsaveopt
cmpsb
fistl
dec
enter
daa
in
mov
movsl
loope
xlat
addr16
pop
ja
jecxz
jg
scas
mov
movsl
aaa
testb
inc
xchg
push
jp
add
mov
xor
pushf
in
cmp
iret
jno
mov
fsts
fidivs
lcall
fs
xor
sub
in
outsb
ljmp
sarb
jge
cwtl
adc
mov
into
cli
mov
lahf
fbstp
in
push
adc
sub
clc
dec
or
cmp
push
cmp
daa
sarl
mov
sbb
sbb
jecxz
test
push
push
xorb
sahf
loop
mov
xchg
fs
cli
sub
xor
ss
add
xor
gs
testl
test
imul
cmp
fwait
jae
testb
loop,pt
cmc
jp
xchg
xor
outsl
dec
fs
pusha
xor
mov
mov
shlb
and
lods
lods
pop
loope
fwait
cmpb
lahf
pop
sub
mov
mov
fiaddl
push
imul
pop
lods
mov
fstp
jg
jl
enter
adc
sbb
gs
xlat
int
stc
pop
scas
sahf
and
scas
inc
lea
lds
aad
aaa
nop
xchg
fnstenv
dec
adc
loope
mov
add
je
ljmp
hlt
dec
popf
repnz
xor
ret
push
fcom
mov
push
sahf
addl
std
mov
inc
inc
cmovo
pusha
aas
js
cmpsb
mov
out
and
sub
cmpsb
sbb
push
push
push
std
push
outsl
cwtl
mov
movzwl
cmc
mov
cmpb
lret
jno
rorl
sub
lock
xchg
das
in
test
sub
mov
sub
lret
mov
out
dec
cmp
xchg
ljmp
stos
lods
xchg
enter
in
sub
mov
lahf
cmc
pop
push
cltd
in
testl
iret
inc
fldl
pop
push
clc
push
xchg
std
inc
mov
shl
sub
pop
xchg
pop
push
stos
movl
or
push
sub
dec
bswap
cmovs
xchg
cltd
dec
or
movsb
xor
into
mull
adc
jg
test
lods
stos
xchg
xlat
out
lret
xor
fwait
cwtl
es
push
in
loop
add
inc
xchg
aas
mov
push
jecxz
jns
cli
cwtl
in
pushf
fcoml
decl
mov
inc
stos
jge
lods
mov
jp
mov
sbb
lods
dec
dec
mov
mov
mov
lret
mov
sahf
jp
mov
sbb
xor
jle
pop
dec
cltd
sub
sbb
insb
addr16
ss
stos
cmpsb
imul
jnp
and
push
push
cmpsl
pusha
stos
sti
jg
cmp
pop
fwait
adc
mov
jae
out
push
push
xor
jle
icebp
js
mov
insl
pop
repnz
ljmp
loope
pop
imul
sti
push
mov
xchg
xchg
iret
mov
jae
leave
and
hlt
sub
or
test
inc
jbe
pop
or
addb
sbb
repnz
int3
add
pop
call
lds
adc
mov
pop
xor
cmp
lcall
or
jbe
stos
data16
and
adc
aaa
cmp
testl
adc
push
dec
fimuls
mov
movsb
jo
xor
rcrl
pop
push
push
mov
test
ficompl
aad
cmc
out
cmpsb
pop
pusha
mov
enter
daa
jmp
es
jmp
loope
jb
sub
cmpsl
aaa
cmp
scas
xor
jo,pt
and
imul
mov
add
pop
or
loopne
push
add
js
les
sbb
sbbb
lar
fsubrl
out
mov
outsb
and
adc
setp
sahf
xchg
fnsave
mov
dec
int
test
sub
test
sar
push
lret
call
mov
jge
sbb
pop
inc
test
push
inc
jg
stos
nop
loop
pop
push
stc
push
mov
fcoml
add
mov
cltd
test
and
adc
xor
pop
cmp
xchg
cmpsb
or
fmulp
and
cmc
inc
stos
jne
cltd
cmp
outsl
sub
xor
cld
imul
insl
icebp
data16
int
lods
xchg
mov
mov
lret
sub
frstor
inc
ret
sub
jns
pop
gs
es
js
or
fcmovnu
inc
cli
mov
fnstenv
xor
xor
xchg
adc
cwtl
cmp
cwtl
pop
popa
bound
pushf
adc
jmp
pop
pusha
cs
mov
or
outsl
mov
jb
roll
pop
bound
jecxz
jg
testl
sub
shl
iret
mov
std
aaa
sbbl
or
push
fwait
inc
leave
inc
aam
je
popa
aas
pop
inc
sahf
mov
movsl
cmc
scas
and
mov
shl
or
notb
arpl
adc
sub
sbb
mov
icebp
push
int
cld
xchg
test
loopne
les
adc
sbb
movsb
ds
ret
dec
add
xchg
mov
ret
mov
push
sub
scas
xchg
test
les
ljmp
popa
aaa
lods
sub
push
loope
bound
and
mov
shrb
add
jmp
cltd
and
inc
test
inc
fwait
push
and
mov
xchg
cmp
adc
outsb
dec
lods
sarl
loop
pop
inc
inc
dec
stos
mov
movsb
out
jle
jae
aam
icebp
push
add
loopne
daa
adc
xor
aad
or
xchg
xor
aam
mov
sbb
dec
xchg
lret
jl
adc
repz
or
lahf
ljmp
cltd
addb
mov
call
jns
repz
xchg
test
mov
mov
aam
ja
mov
or
mov
popa
dec
xchg
xchg
movsb
jne
ljmp
lcall
jmp
xchg
dec
stos
addl
pusha
sub
adc
dec
addr16
xchg
stos
sbb
insb
sti
adc
jle
pop
adc
arpl
pusha
inc
lcall
cmp
pop
sarb
sub
pop
pushw
repz
popf
sbb
jl
mov
clc
sbb
mov
adc
sbb
rcrb
push
push
mov
adc
sbb
shl
push
mov
push
hlt
jae
into
arpl
lret
jns
fs
sti
bound
xchg
push
inc
or
push
xlat
add
add
pop
mov
out
push
lods
pop
or
sbb
xorl
cwtl
cmp
pop
nop
movsb
bound
popf
sbb
jbe
sub
jge
cli
sbb
int
mov
cmp
mov
jno
movsb
adc
sub
rorl
jns
xor
cmp
fcoml
mov
inc
push
movsl
jecxz
inc
test
xchg
in
mov
out
push
daa
ljmp
loope
xor
cmp
cmpsb
ds
mov
shll
or
xor
subb
jne
rolb
xor
jmp
pop
inc
pop
mov
sub
pop
pop
pop
jne
lcall
sbb
push
add
imull
out
adc
lock
xchg
inc
push
mov
mov
and
iret
push
push
sbb
int
in
sub
cmp
lret
inc
shrl
mov
fistps
sahf
pusha
push
fwait
test
xchg
sub
jg,pt
es
xor
ds
push
in
mov
adc
imul
fcomp
mov
pop
cli
inc
cmp
bound
into
add
imul
ret
xchg
xor
test
test
push
inc
nop
imul
cmpsl
data16
shrb
xchg
lcall
rorl
mov
mov
pusha
sti
mov
scas
adc
pop
ljmp
fldln2
push
pop
fisubrs
call
lods
or
fstpt
cwtl
xlat
dec
jp
pop
adc
adc
pushf
loope
xor
or
lret
aad
std
cmpsb
nop
inc
jmp
aam
dec
xor
loop
sbb
loope
andl
shlb
push
cltd
scas
mov
cwtl
xor
dec
out
test
dec
lcall
push
mov
in
push
mov
pop
imul
roll
notb
test
fstpt
adc
icebp
cs
cld
mov
add
mov
sub
ljmp
rcrb
out
mov
test
mov
ret
dec
xlat
adc
mov
sub
xor
cltd
cmpsl
jmp
jb
popa
dec
dec
lods
imul
mov
test
mov
pop
ss
xchg
iret
push
add
movsb
iret
cltd
pop
jmp
test
lret
pusha
mov
in
push
and
lret
pushf
clc
leave
pop
rcll
and
xchg
mov
out
stos
movsl
mov
xchg
sbb
push
ficoms
jbe,pn
inc
fisttpll
rcl
lea
sub
fiadds
cli
stc
test
xor
xchg
xor
mov
adc
xor
rol
mov
jge
or
xchg
jns
in
in
jne
xchg
clc
push
adc
test
insl
pop
mov
adc
cmp
imul
test
jne
xor
mov
test
inc
xchg
out
xchg
in
jmp
pop
into
mov
out
test
sub
paddusw
stos
mov
and
mov
mov
in
lret
push
cld
in
mov
cmp
jns
adc
xchg
in
jae
or
mov
jae
push
ja
mov
ficompl
clc
test
sbb
xchg
pop
jp
sbb
outsb
xor
adc
fisubrl
xchg
push
dec
test
iret
jge
xchg
bnd
xchg
push
inc
and
mov
push
or
or
jbe
xchg
inc
adc
add
or
fildl
pop
loop
inc
fdivrp
adc
lds
push
mov
xorl
movsb
in
scas
rclb
jo
jbe
and
mov
sbb
mov
dec
aam
jno
in
push
jl
pop
out
pop
mov
invd
pop
xor
cwtl
sbb
xchg
in
push
lds
add
cld
push
inc
adc
sti
cmpsb
fs
push
in
mov
jbe
jmp
into
dec
loope
adc
sub
mov
cmp
xchg
pop
ds
xchg
and
scas
and
cmp
xchg
icebp
and
xchg
fnstcw
fisttpll
lcall
mov
sub
push
lods
adc
lret
mov
mov
out
push
mov
pop
and
xor
int
pop
lods
sub
add
roll
mov
iret
sbb
pop
jg
add
test
xor
loop
das
jae
fs
or
cmp
xchg
stos
jo
mov
cli
js
xchg
xor
xchg
and
jg
mov
inc
shrb
into
out
clc
cmc
iret
aas
pusha
xor
int
jmp
neg
imul
lock
movsl
jl
lods
aad
mov
or
inc
inc
mov
mov
mov
jecxz
mov
clc
int3
loopne
fstps
pop
or
lcall
jmp
mov
xchg
xchg
sub
sbb
push
mov
pop
movl
cmc
jmp
fsubs
mov
adcl
fwait
int3
sti
dec
dec
or
jecxz
xchg
add
std
dec
mov
call
sarb
movb
std
xchg
fstpt
jge
dec
and
inc
xlat
xor
inc
stos
lods
daa
aas
push
mov
das
mov
xor
rcll
xchg
cwtl
in
dec
mov
adc
mov
add
pop
sti
lret
mov
lret
sti
mov
mov
dec
das
sbbl
aam
xorl
pop
ret
fimull
mov
jl
push
dec
sub
adc
adcb
lods
fidivs
mov
test
pop
and
cmc
bound
mov
jb
inc
jge
cltd
xchg
aaa
adc
mov
vorps
or
fnstsw
clc
add
jne
mov
dec
repz
mov
ljmp
mov
push
mov
pop
sub
nop
ljmp
xchg
fisubrl
xor
hlt
xchg
fistps
popa
or
xchg
mov
dec
fldz
cltd
inc
nop
mov
or
mov
fwait
and
loop
add
xchg
xchg
mov
sbb
bound
es
jns
rclb
xchg
inc
pop
mov
mov
je
cmp
or
jp
adc
mov
jp
adc
stos
dec
jne
jecxz
mov
ss
pop
lds
jmp
sub
and
leave
in
or
out
dec
mov
stos
incl
insb
rcr
jnp
xchg
xor
in
mov
pusha
jl
fstps
test
add
inc
out
sbb
push
jns
xchg
popf
data16
jb
xor
push
sub
adc
and
xchg
pop
add
loop
dec
imul
scas
cmp
loopne
adc
add
jmp
leave
test
loope
sbb
popa
inc
jg
inc
or
icebp
fcmovnu
inc
nop
movsb
cmpsb
or
icebp
lds
xchg
dec
mov
lods
dec
pop
adc
arpl
sbb
shlb
and
xchg
cmp
xchg
movsb
js
outsl
push
cmp
mov
jge
pushf
mov
inc
jb
aaa
jp
test
jg
push
jl
push
cmp
jbe
xor
repnz
add
lods
out
jo
adc
xchg
sbb
or
inc
mov
jge
in
outsl
adc
enter
daa
call
int
loope
sbb
cmp
popa
ret
ss
and
sbb
dec
sbb
ret
mov
daa
dec
cmpsl
pop
pop
nop
je
js
lea
fiaddl
add
lret
insb
add
mov
push
jbe
outsb
adc
cmpsb
fmuls
mov
nop
or
add
mov
adc
and
jle
and
int
or
sub
dec
mov
rcr
push
mov
cmpsb
sahf
cmpsb
fiadds
push
ror
insb
sub
loop
imul
fs
inc
adc
xor
push
inc
cmp
push
inc
or
dec
jp
cli
stos
jnp
xor
or
cmp
js
or
sub
xor
sti
xlat
adc
rcll
mov
add
xchg
cltd
data16
xchg
mov
out
push
sub
dec
lret
in
xchg
sti
ljmp
gs
jae
dec
fidivs
inc
xor
fstps
out
hlt
xchg
inc
repz
sbb
push
leave
scas
xlat
leave
lret
jp
sub
or
lret
cmpsb
push
jmp
mov
aas
aad
mov
nop
std
dec
arpl
dec
mov
out
xchg
mov
je
mov
rol
loope
lea
jbe
dec
push
mov
jmp
lds
nop
fldt
stc
ss
pop
cmp
inc
lds
aas
hlt
addb
fldl
pop
and
into
and
loop
lock
sub
std
push
push
aad
mov
insl
mov
mov
adc
or
xor
push
mov
mov
adc
pusha
pop
rolb
pop
sti
sub
xchg
aam
aas
js
imul
dec
xor
out
and
cmc
jo
popa
jl
aas
lods
inc
mov
jbe
push
mov
xlat
push
and
pop
rcl
jnp
pop
mov
cltd
leave
daa
jnp
xlat
pop
mov
push
stos
pop
dec
frstor
xor
xchg
stc
pop
pop
sbb
loopne
pop
inc
repz
stos
cmpl
test
jp
cmove
and
mov
fcomi
mov
and
fimull
add
test
or
dec
int3
pop
pop
inc
daa
rcrb
pop
cmpl
add
lods
scas
icebp
mov
stc
movsb
jns
mov
in
sahf
fstl
or
fs
das
int
ja
mov
lds
inc
mov
jmp
movsl
gs
testb
aaa
mov
xchg
xchg
popa
mov
xchg
pop
call
movsl
lret
out
nop
sub
add
mov
stos
jb
xchg
and
pop
insb
cmp
lods
jnp
adc
hlt
xor
in
mov
pop
fbstp
insl
jne
ja
mov
jae
cs
push
cmp
out
leave
push
mov
imul
or
int
imul
scas
mov
lahf
dec
adc
lcall
rorl
cld
aam
hlt
push
jns
arpl
xor
js
inc
jle
push
movups
jmp
mov
int3
mov
mov
fiadds
and
mov
adc
mov
cmpsl
jle
cmp
cwtl
andb
cmp
addr16
jge
ret
std
sti
aaa
cmp
jno
ljmp
in
mov
xor
dec
push
std
scas
dec
mov
loop
repz
mov
xor
aas
in
push
pop
jge
and
push
push
or
sub
adc
mov
pop
das
jp
pop
inc
inc
and
out
push
lahf
fistpll
or
gs
cs
fxch
xor
popa
or
arpl
push
dec
js
inc
sbb
lcall
mov
sub
sub
or
adc
andl
xchg
mov
addb
pop
cmp
and
test
and
int
cmc
xchg
sub
jl
pop
iret
sbb
inc
cli
mov
jb
xchg
icebp
cwtl
sahf
dec
lcall
cmp
jg
mov
loop
js
xor
js
mov
pusha
sarl
or
cmpsb
testl
pop
out
xor
rcl
and
mov
xor
jmp
adc
jae
xchg
mov
sbb
jne
mov
stos
sti
inc
lods
xor
mov
lea
sub
add
icebp
add
sti
cltd
mov
incb
pop
iret
loopne
inc
insl
pop
inc
in
inc
inc
dec
ja
xchg
daa
mov
incl
loopne
sbb
xor
cmp
and
jns
adc
ljmp
fs
push
dec
pmullw
movsb
stos
nop
fcoms
push
dec
jmp
cli
jb
xchg
cmp
inc
iret
je
jecxz
jecxz
mov
movb
sbb
sub
xchg
into
cwtl
add
clc
adc
and
xlat
inc
add
ret
in
inc
in
leave
inc
loopne
mov
xchg
dec
lret
mov
sbbl
negb
inc
std
lods
jmp
cwtl
pop
sti
jnp
sbb
dec
fdivrl
cld
aas
test
pushf
jne
mov
mov
xchg
lock
in
in
aas
clc
scas
rcl
add
aam
sub
ret
clc
rorb
hlt
hlt
insl
dec
cmp
dec
and
cmpsl
out
imul
xchg
leave
lock
lods
adc
mov
out
mov
and
sub
pop
add
mov
add
mov
push
jae
outsb
and
push
dec
clc
jp
jg
cmp
sbb
sbb
pop
in
sub
out
or
xchg
lock
push
outsl
int
bt
loopne
ss
inc
or
in
std
xor
xor
push
pop
test
das
loopne
test
push
roll
mov
adc
and
push
sbb
lret
out
leave
add
fcmovnbe
lcall
jle
xor
ds
in
xor
mov
leave
push
mov
ljmp
jp
lret
or
jp
ljmp
dec
pop
xchg
lock
insl
stc
mov
iret
out
push
movsl
mov
push
test
cmpl
sub
add
or
in
cld
and
inc
insb
cmpsl
sti
clc
jnp
mov
jle
mov
movsb
pusha
mov
movsl
imul
pop
scas
fidivl
inc
add
cmpsl
push
incl
popf
mov
or
test
jg
xchg
jecxz
cmp
pop
scas
add
push
and
sub
inc
add
dec
repnz
mov
hlt
lahf
jecxz
arpl
mov
inc
test
daa
push
mov
testl
les
popf
int3
pushf
lcall
pop
outsl
mov
fsubp
add
sub
out
shr
sbb
cmp
cmp
dec
mov
push
inc
jbe
mov
rcrl
mov
lods
push
cmp
in
jno
lahf
bound
mov
push
jg
push
mov
sub
jo
or
aam
cmp
sarl
inc
rcrb
in
cmp
jnp
daa
out
ljmp
xchg
dec
sub
adcb
std
iret
xor
xor
movsl
popa
scas
mov
jns
mov
incb
je
mov
pushf
inc
cmp
dec
xor
jmp
movsl
iret
xor
pop
ficomps
jge
sbb
pop
pop
mov
ss
ret
fadd
xchg
and
push
subl
xlat
adc
pop
jle
rorb
mov
test
mov
cmc
xchg
mov
mov
or
xor
sub
push
lret
dec
rorl
adc
sbb
lcall
push
sbb
jg
cmp
loop
js
stc
ljmp
adc
into
mov
fadd
cmp
test
ljmp
add
sub
nop
ds
cmc
and
cmp
pusha
das
je
xchg
jg
push
inc
sbb
mov
pop
add
sub
jmp
dec
mov
leave
out
scas
icebp
sub
push
clc
in
pop
addr16
dec
xchg
jae
sub
es
pop
data16
pop
jbe
fxch
mov
les
int
repz
xor
cmp
mov
fstpl
shlb
lea
xor
mov
sub
inc
cli
fsts
dec
outsb
or
lret
scas
rcrl
inc
js
jecxz
scas
mov
lea
call
dec
dec
rorl
xor
dec
xchg
js
fildl
add
xorl
inc
sti
popa
mov
xor
sbb
cmp
xorb
std
push
push
cmpsl
mov
scas
xor
mov
cld
push
popa
lret
or
mov
xlat
sahf
lock
mov
das
push
in
pop
shlb
stc
ljmp
inc
xchg
es
mov
push
dec
sbb
dec
cmpsl
in
push
ljmp
xchg
les
and
in
pop
push
in
or
jle
scas
cltd
aaa
hlt
jo
in
inc
xchg
mov
call
push
xor
push
movsb
clc
mov
dec
xchg
ja
push
sbb
push
cmp
pop
cwtl
cmp
stos
popa
mov
out
insl
mov
xchg
aaa
fbstp
dec
xor
lar
mov
movsl
or
fidivl
popa
loopne
xchg
push
cmp
lahf
ret
xor
xchg
pop
pop
inc
push
ja
or
nop
je
mov
push
mov
sbb
add
sbb
stc
mov
push
jns
push
in
pop
es
xor
out
xchg
jno
mov
movsl
push
popa
ja
or
jp
mov
mov
push
mov
mov
icebp
push
jne
dec
lcall
lcall
adcl
and
out
out
imul
mov
or
and
addr16
sarb
pop
hlt
cmp
nop
push
insb
insb
adc
jnp
and
jle
xor
in
dec
bound
fistps
cmc
aaa
pop
ret
adc
mov
inc
jae
gs
popf
fcmovne
or
push
out
aaa
fidivrl
sub
xchg
arpl
sbb
jl
imul
inc
push
imul
iret
stc
mov
or
negl
arpl
insb
inc
mov
arpl
bound
inc
or
movsb
roll
pop
out
add
xchg
sbb
lods
or
lds
pop
mov
and
pop
mov
movsb
sbb
movsb
jbe
jge
jge
mov
ds
mov
in
cmp
std
xor
js
jl
adc
push
fwait
lret
js
pop
push
adc
fcoml
push
adc
test
pushf
cmpsl
jb
dec
mov
add
and
ror
rclb
daa
in
push
push
add
loope
or
les
lods
push
mov
adcb
imul
sbb
scas
inc
sbb
int
add
adc
xchg
cmpsb
and
lret
push
fwait
pop
xchg
ja
lcall
inc
fsubrl
subb
mov
lahf
xchg
ficoms
aaa
out
or
mov
add
mov
mov
push
sub
sti
int
je
sub
aaa
mov
int
gs
insb
shll
adc
lret
sahf
clc
test
jecxz
jg
int3
mov
adc
stc
mov
or
xor
psubusb
aas
xchg
cli
inc
das
cmc
xor
cmp
rclb
into
jae
fwait
cmc
jmp
and
mov
xlat
pop
adc
pop
mov
scas
or
xchg
es
mov
pop
lods
mov
mov
outsl
out
push
sub
adc
inc
mov
popf
negl
decb
jmp
dec
loopnew
dec
inc
pop
test
clc
flds
ljmp
or
mov
sbb
add
xlat
xchg
adcb
jnp
pushf
cmp
insl
cs
aad
mov
nop
mov
addr16
test
xor
pop
push
nop
pusha
dec
jecxz
jmp
or
ret
pushf
test
int3
xorl
andl
dec
lret
xor
inc
repz
inc
push
jno
aas
shr
jecxz
xchg
rcrl
mov
pop
add
mul
lret
out
std
sti
enter
bound
mov
xchg
cmpl
xchg
std
push
lret
jp
and
mov
mov
jns
lahf
sub
mov
cmp
imul
sbb
pop
rolb
in
int3
ljmp
jae
adcb
xor
jb
in
outsb
mov
sub
jmp
loopne
clc
mov
mov
lock
hlt
or
clc
lock
aad
mov
sbb
and
inc
sbb
out
shr
mov
and
insl
mov
or
xchg
xor
xlat
dec
mov
sub
dec
std
inc
subl
cld
dec
movsl
out
inc
in
add
fwait
loope
pop
push
popa
in
add
std
outsl
in
lcall
lods
add
cmp
xchg
subl
mov
lea
lds
pusha
stc
lahf
ja
adc
mov
add
inc
pop
int
sub
jne
xchg
mov
xor
aam
fists
jp
rclb
sbb
sub
imulb
js
lret
jp
cmpsl
push
inc
insb
jge
popf
jnp
dec
fistpll
mov
in
pusha
call
or
ret
cmc
pop
sbb
and
es
adcb
popf
add
lea
mov
jge
xchg
mov
adc
scas
leave
test
push
mov
popf
adc
lock
iret
pop
push
pop
repnz
xor
arpl
inc
mov
push
mov
or
popf
outsl
add
rolb
mov
dec
fisubrs
addr16
cwtl
sbb
mov
pusha
cwtl
arpl
dec
cltd
cmp
movsb
mov
push
ja
push
jbe
mov
jge
mov
das
sbb
aaa
jbe
out
cmp
pop
jno
jne
jl
mov
sbb
xor
pop
mov
pushf
push
jecxz
inc
test
addr16
inc
fisubs
scas
cmpsb
repz
or
or
pusha
daa
in
fldt
rorl
int3
lahf
jl
mov
leave
pushf
ds
push
scas
inc
popf
lahf
cmp
jg
lcall
add
sub
mov
or
pop
sub
std
js
cmp
pop
shrb
lcall
sbb
sub
ret
outsb
add
pop
adc
adc
nop
jnp
mov
xchg
orl
js
cmp
int
or
jb
pop
dec
cltd
lret
adc
aaa
jae
mov
pusha
sbb
push
sahf
xor
test
cmp
orb
push
loop
push
push
stc
pop
and
cmpsl
out
out
adc
pop
insb
cmp
cmp
mov
cli
ja
mov
and
cmp
xchg
lret
mov
into
push
mov
cmc
mov
out
push
ljmp
clc
jbe
imul
loop
and
aam
xor
inc
lods
in
jmp
jae
shl
jg
sub
repz
xor
outsb
repnz
and
call
lret
inc
jg
mov
aaa
rcrl
and
repz
cmp
xchg
pusha
scas
cmp
fwait
and
insb
adc
or
hlt
jnp
adc
rcl
popf
nop
imul
dec
jb
int
dec
popf
loopne
je
pushf
add
fldt
or
aas
lea
stos
ds
dec
cmp
mov
xlat
jmp
push
iret
jne
jnp
xor
push
push
inc
xor
mov
cmpsb
xchg
add
mov
shl
es
mov
hlt
xchg
mov
add
mov
cmp
cld
shl
lret
jmp
ret
jae
test
scas
das
fsub
adc
dec
sub
sub
aam
loop
ret
movsl
push
scas
es
jo
decl
dec
adc
enter
pop
popa
fcomp
and
in
xchg
into
mov
push
inc
pop
and
cld
fwait
xor
dec
adc
movsb
movb
push
mov
and
push
fnstsw
jbe
clc
sub
rcll
push
adc
rcrl
int
stos
aas
mov
cwtl
xchg
push
add
xchg
xadd
fimuls
fwait
enter
sub
jg
xchg
lret
fldenv
jmp
cwtl
rolb
scas
push
or
lock
push
add
dec
add
sbb
jl
aaa
lret
xor
dec
test
mov
in
loopne
xchg
rorb
jle
insb
rclb
xor
ja
lahf
sbb
test
mov
sbb
mov
adc
jne
sub
mov
and
push
xchg
loope
sub
jno
push
xchg
pop
leave
xor
jne
sbb
or
rcl
inc
es
ds
repnz
pop
push
jnp
inc
data16
add
push
ret
fbstp
loopne
ret
into
pop
push
push
inc
es
sub
inc
lods
ss
dec
sub
popf
sub
mov
gs
lahf
xchg
xchg
adc
leave
sbb
jl
imul
mov
sub
gs
testl
repnz
leave
fsubrs
cmp
and
mov
pop
test
inc
or
aad
mov
daa
add
xor
fmulp
xchg
sarb
push
mov
repz
cmp
aaa
xchg
movsb
das
sbb
jbe
fs
jge
inc
lds
ljmp
cmp
jp
and
inc
jl
add
dec
mov
adc
mov
mov
xchg
test
xor
inc
insl
int3
push
cmpsb
jbe
sbb
bnd
enter
daa
jecxz
adc
push
nop
loope
pop
sbb
ret
lret
cmp
in
pusha
ds
push
mov
mov
lods
push
test
cltd
enter
adc
sbb
lds
int3
sub
leave
push
test
adc
xchg
fadd
ja
sub
push
mov
jmp
mov
in
or
out
lcall
push
inc
pusha
mov
xor
push
das
dec
addr16
subl
jbe
lret
add
into
mov
mov
insl
pop
sbb
xor
test
mov
jg
testl
stc
psubsb
xor
test
ss
es
fdivr
add
testl
and
cmp
je,pn
fstl
sbb
xor
push
outsl
and
les
lret
pop
scas
imul
mov
mov
in
data16
jle
int3
jl
mov
insl
out
sub
add
popf
xchg
sti
push
inc
lock
xchg
int
gs
into
adc
push
popf
loope
ret
sub
inc
xchg
es
outsb
cmp
les
sbb
stos
sub
sbb
js
or
pop
stc
iret
sbb
mov
cmpb
xchg
lods
je
fisubs
cmp
sbb
nop
inc
push
bound
inc
popa
jb
pushf
xchg
dec
adc
shll
and
ljmp
lea
xor
outsl
mov
pusha
scas
dec
push
addr16
xchg
fildl
push
jb
inc
add
inc
dec
lret
and
setbe
mov
jne
mov
imulb
std
dec
sbb
adc
xor
pop
or
jle
jmp
mov
mov
push
mov
jne
lock
das
mov
mov
fcom
pop
sbb
push
es
xchg
insl
out
dec
dec
or
push
ss
or
push
mov
jp
movsl
and
xchg
adc
and
mov
cmp
push
nop
fs
sahf
outsl
push
jp
sahf
frstor
adc
in
xchg
xor
movsl
sbb
and
cmp
xchg
stos
cs
and
xchg
aaa
push
xchg
or
das
push
fneni(8087
sub
pop
lods
xor
orb
or
scas
arpl
into
call
xchg
push
clc
dec
lret
xor
push
or
ss
sbb
mov
cmpsl
sahf
loop
cmp
add
push
dec
call
in
bound
enter
ret
and
cmpsb
mov
and
pop
cli
xchg
scas
jo
les
adc
ljmp
pop
xor
mov
sub
out
xchg
xchg
movsl
xchg
mov
mov
push
cwtl
or
clc
sbb
sub
in
insb
or
stos
mov
iret
and
shrb
jmp
jle
push
repnz
lea
push
pop
aam
push
mov
iret
pop
mov
push
jae
aaa
jnp
or
popf
push
clc
sub
movsb
mov
xchg
push
mov
jns
in
int
cmp
iret
push
xchg
add
mov
cmp
dec
cli
fdivp
lret
aam
arpl
ds
xchg
dec
rorb
shll
out
inc
mov
popa
or
shlb
int3
dec
xchg
mov
sub
mov
inc
xchg
jns
pop
push
fnstcw
xchg
loopne
mov
cmp
inc
jge
loopne
sbb
push
lock
ficoml
jl
cmp
dec
adc
fbstp
adc
movsl
in
push
mov
test
std
fsts
cmpsb
stc
hlt
pusha
in
fnstcw
sub
or
daa
loop
mov
outsb
mov
loope
cmp
cmp
addb
jge
loop
in
pop
lahf
jp
inc
add
sub
js
jne
xchg
pop
pop
xor
mov
fstpt
xchg
js
imul
lcall
adc
sub
fildll
adc
enter
dec
mov
inc
mov
call
jle
in
xchg
pop
xchg
push
xor
fmulp
loopne
sub
fsubr
lret
shll
mov
inc
mov
push
in
sahf
js
lahf
test
cs
js
es
jp
lret
stc
push
xor
jl
dec
adc
ss
cmp
mov
test
xchg
rol
in
lods
fwait
inc
or
into
sbb
mov
inc
cltd
lret
hlt
xchg
xlat
aaa
adc
adc
adc
mov
push
data16
clc
lods
mov
icebp
mov
es
pop
mov
imul
in
or
jnp
add
out
mov
dec
gs
movsl
mov
jmp
push
pop
loop
mov
fldenv
xor
xchg
in
lahf
dec
sbb
mov
adc
inc
sbb
pop
lods
out
adc
dec
pushf
cmp
clc
jmp
sub
cs
aaa
insl
aad
aaa
rcll
out
jb
lahf
mov
mov
je
adc
stc
aaa
ljmp
jae
call
dec
cmp
cmpsl
sub
mov
fcmovnb
stos
jp
sar
inc
mov
and
mov
adc
je
add
sarl
fscale
lock
sub
add
xor
dec
fwait
pop
icebp
out
xor
push
push
mov
xor
mov
ret
das
lcall
sub
push
loop
push
es
rcrb
dec
or
add
popa
push
xchg
xchg
lods
ret
push
in
nop
dec
jle
popf
mov
xor
dec
add
sbb
cltd
adc
jbe
push
pop
jl
cmp
and
clc
mov
jno
sbb
test
pop
inc
mov
stos
sbb
dec
push
xchg
push
adcb
stc
movd
xorb
sbb
mov
pushf
xor
mov
xchg
cli
sahf
dec
xor
push
mov
outsl
dec
jle
dec
inc
mov
data16
mov
dec
push
dec
jmp
cwtl
add
adc
jne
mov
jns
test
in
stc
xchg
jo
mov
mov
xchg
pop
ja
inc
add
imull
mov
mov
mov
subl
mov
mov
inc
push
out
jno
mov
jmp
mov
mov
out
xchg
sbb
daa
leave
mov
out
sub
stos
and
inc
and
pusha
pop
insb
mov
jo
jle
lahf
mov
mov
mov
fbstp
cli
ret
es
shrl
jae
add
push
into
add
popf
ja
scas
mov
jecxz
mov
add
lods
es
lret
pop
imul
lret
std
pop
push
test
adc
cmp
leave
in
int3
hlt
push
jecxz
arpl
dec
jae
lods
aam
push
or
or
adc
pop
pop
frstor
mov
je
mov
and
xchg
cmp
mov
mov
jbe
sbb
sbb
sti
aaa
mov
sarl
in
cmp
inc
push
jl
dec
inc
dec
jg
orl
jbe
pop
jo
ffree
scas
mov
test
enter
mov
cmp
rcr
enter
daa
loope
lods
push
jns
loope
cmp
imul
jge
ds
or
movsl
test
lahf
cltd
cmp
adc
and
add
jno
xor
xchg
data16
sahf
std
leave
pop
mov
pop
pop
pop
xchg
hlt
xchg
lcall
pop
fcompl
xor
sub
adc
adc
mov
in
mov
je
mov
mov
and
push
xor
and
sub
mov
hlt
sar
orl
ljmp
fcmovnbe
fnstcw
xor
stc
jge
pusha
fs
xchg
sbb
cwtl
sbb
ss
ret
push
mov
fsubrs
aad
cmpb
adc
test
sbb
xlat
fsubr
or
fdivrs
xor
sbb
jno
push
imul
push
add
pushf
push
mov
lods
lcall
out
adc
mov
ja
sbb
jae
fdivrp
mov
aad
xlat
pop
lock
loopne
loopne
inc
ret
jmp
repnz
push
ffree
inc
pushf
push
dec
lds
scas
subb
or
mov
andb
adc
sti
pushf
in
loop
jo
shrl
movsb
inc
loopne
test
push
nop
cli
lea
xor
scas
dec
add
je
dec
gs
test
adc
cs
enter
xchg
scas
xchg
addl
aas
add
andl
aas
dec
push
cltd
mov
lret
dec
sbb
rorl
or
out
push
inc
std
xchg
xor
cwtl
mov
pop
repnz
mov
fisubrs
ss
mov
bound
mov
jl
lock
icebp
pushf
rol
sub
sub
adc
aam
mov
jg,pt
insl
mov
jnp
add
repz
loopne
and
popa
sbb
mov
aas
pop
mov
or
mov
test
xchg
sbbb
mov
mov
fnsave
pop
xchg
mov
bndldx
shll
jecxz
stos
or
mov
pop
push
clc
xchg
lcall
paddusw
enter
mov
add
xor
adc
mov
ss
leave
dec
cltd
mov
or
jno
cmp
or
ss
fwait
popf
add
daa
faddl
imul
sarb
out
in
test
xchg
mov
xchg
mov
dec
dec
nop
ja
pop
jp
fisubl
adc
fstpt
mov
loope
jmp
ds
jno
out
push
movsb
adcl
sti
cmpsb
xchg
xorb
push
sbb
sub
loop
loope
inc
add
and
mov
pop
jnp
scas
adc
fadd
in
add
pusha
push
sbb
fists
xchg
add
inc
inc
xchg
or
push
outsl
push
xchg
sbb
popf
sahf
loopne
mov
and
add
cmp
cltd
scas
push
add
int3
lret
push
in
repnz
movb
popa
inc
or
and
or
leave
fists
inc
mov
or
jae
int3
push
aad
pop
mov
jae
mov
sbb
push
es
int3
mov
sbb
push
and
push
movsb
sarb
mov
mov
enter
das
jge
rcl
sbb
outsb
aaa
jb
fdivrl
pop
add
test
sub
out
popa
lds
or
outsl
xor
lret
imul
das
sub
test
xchg
lahf
push
inc
sbb
call
dec
in
cmpsl
push
aam
loopne
out
push
sbb
sub
fs
cmp
in
sub
movsl
mov
and
jge
lahf
mov
add
ss
fstpt
lds
test
enter
jp
icebp
pop
rcrb
lcall
pop
fadd
lret
movsl
sub
mov
adc
jle
push
mov
rcrb
mov
fwait
mov
push
cmp
int
inc
lods
sub
daa
imul
scas
mov
xchg
dec
bound
outsl
iret
sahf
mov
sub
xor
mov
fs
lcall
adc
fs
das
adc
pushw
ss
cmp
sub
mov
inc
fcoms
cli
inc
adc
inc
cmp
repnz
sub
and
loop
jae
into
ss
outsl
shr
adc
imul
add
test
outsl
lods
adcl
out
dec
shrb
push
in
mov
ficomps
aam
test
lods
jg
loopne
xor
pop
and
inc
lret
stos
push
fsts
xchg
les
repz
fwait
xchg
jb
or
xor
cmp
adc
pop
adc
pop
adc
mov
pushf
repz
cs
inc
rcl
sub
or
cmp
jb
inc
rorb
mov
jecxz
adc
sbb
inc
int3
add
xchg
popf
movl
leave
sbbl
lret
and
aas
inc
xchg
test
inc
popf
call
fisubl
subb
and
jmp
rcrl
div
xor
cwtl
js
add
push
rorl
xchg
in
cld
insb
sub
movsl
test
mov
jle
mov
xchg
jge
js
outsl
das
pop
xor
cwtl
cmp
aam
lds
ret
loope
add
roll
insl
fwait
loop
dec
sbb
cmpsl
fistps
mov
lea
lods
cltd
fnstenv
mov
jecxz
and
push
mov
add
inc
sub
cmpl
sbb
ret
cmp
fstp
bound
pop
cmpsb
pop
xchg
icebp
inc
mov
shl
or
stos
sti
repz
mov
test
push
insb
inc
std
sub
xor
jp
ja
fdivl
mov
mov
cmp
xor
xchg
inc
inc
orl
sti
fwait
int3
or
push
nop
pop
pushf
add
test
pushl
out
jns
jmp
in
bound
xchg
push
cmpsb
dec
mov
out
mov
pop
sarl
ja
mulb
mov
loope
mov
popa
movb
push
les
mov
mov
out
das
mov
xchg
sub
mov
ja
movsl
addl
cmc
int3
jle
fucomp
fsubs
incb
and
inc
ds
xchg
jbe
jnp
scas
jne
or
pop
in
push
jmp
xchg
mov
ret
fwait
pop
das
ja
inc
push
cli
lea
insb
push
push
stos
setge
sub
popa
jecxz
fisubrl
in
xchg
insl
and
in
xchg
imul
scas
mov
stos
and
inc
sbb
iret
xor
leave
mov
or
lods
sti
or
push
sub
mov
or
inc
sbb
or
stc
hlt
int3
or
ficomps
ffreep
flds
popa
shrb
in
aas
shll
cmp
adc
jns
add
push
mov
pop
sbb
sub
xor
add
dec
push
divl
sbbl
dec
pop
loopne
push
in
or
jo
push
push
scas
inc
stos
push
add
test
pop
add
inc
test
dec
push
in
mov
fcmovne
sti
icebp
das
daa
fistpll
jae
aas
scas
xor
iret
mov
cmp
push
mov
movsl
xchg
mov
adc
cmp
leave
sbb
cltd
divl
xchg
sbb
and
scas
pop
out
sbbb
pop
xchg
pop
adc
lcall
push
fsubrl
imulb
repz
xchg
push
arpl
pop
cmp
and
aas
mov
add
pop
enterw
lds
cmp
sub
dec
int
adc
lret
mov
sbb
sbb
ficompl
popa
dec
loop
adcb
mov
loop
xchg
jg
jmp
cmp
pop
push
outsl
adc
imulb
lds
sbb
int
testl
xchg
pop
xor
iret
cmp
fstpt
cltd
mov
into
lds
cmc
xchg
fwait
adc
fstpl
les
pop
or
mov
inc
add
outsl
lcall
mov
je
mov
and
xor
sti
adc
push
sbb
xorb
aas
mov
inc
fidivrs
push
dec
xchg
faddp
push
outsb
popf
repz
mov
xor
and
outsl
xlat
add
aas
pop
lds
adc
xchg
lods
pushf
cmp
jmp
xor
cs
inc
aad
aas
inc
nop
mov
addr16
jecxz
xchg
loope
dec
lock
nop
jecxz
call
daa
lea
iret
scas
mov
test
xorl
mov
pop
stos
pusha
mov
inc
mov
and
mov
cmp
xchg
shrl
dec
repnz
in
js
xor
mov
sarb
mov
imul
lret
adc
inc
mov
out
mov
adc
lock
das
aaa
movntq
out
imul
aam
push
sub
es
clc
or
inc
rorb
xchg
cmpsl
fidivrs
lock
dec
ret
add
jecxz
popf
rcr
push
inc
lahf
and
add
dec
pop
out
jb
add
cltd
mov
cmp
push
xchg
mov
xchg
xor
sbb
outsl
nop
rorl
jmp
inc
rorl
ljmp
xchg
sub
push
inc
xor
setnp
xor
or
xor
stos
out
lret
xchg
clc
test
outsl
faddl
push
repnz
or
fidivrs
xor
pop
add
jae
int
fidivrs
xchg
mov
xchg
pop
push
lahf
mov
mov
sahf
pop
ret
ja
push
xchg
jp
aam
mov
lods
dec
mov
rclb
xchg
xor
out
push
stc
xchg
add
jmp
push
and
xorl
out
mov
sub
fsub
ret
addr16
stos
jge
std
and
out
insb
decl
es
xor
pusha
mov
xchg
dec
mov
addr16
jmp
jae
push
fcoml
pop
scas
push
popf
in
pop
aam
sub
lahf
ficompl
inc
push
xchg
les
pop
sbb
clc
mov
movb
sbb
leave
push
pop
in
pusha
adc
xchg
dec
iret
xchg
inc
div
add
cmp
testl
jns
loope
push
xchg
in
add
int3
hlt
dec
pop
out
ss
jo
lds
mov
mov
rolb
cmp
imul
push
push
scas
sub
xchg
xchg
mov
sbb
inc
xor
jge
mov
push
and
dec
int3
and
push
rclb
xor
xorl
inc
test
sub
pop
cmpsb
add
es
notb
daa
ficomps
adc
je
loope
push
aam
cmp
push
ds
push
add
push
adc
imulb
iret
sbb
add
stos
xor
arpl
mov
pop
push
push
hlt
pop
push
mov
cmp
jp
jbe
sbb
sub
mov
outsb
push
lock
adc
xor
add
ja
dec
mov
test
push
jnp,pt
int
fldcw
jle
xchg
pop
inc
xchg
lret
fcmovnb
rorl
adc
push
sahf
add
pop
test
or
mov
aad
stc
mov
sub
divl
or
sbb
lahf
xor
cli
test
popa
sub
pop
cwtl
lret
push
into
test
xchg
cmc
pop
fs
xor
cli
cld
outsl
jle
rclb
ljmp
adc
iret
bound
jl
xchg
movsl
sub
mov
cmp
mov
sbb
mov
dec
xor
shlb
inc
popa
and
jmp
sti
pop
pop
and
inc
icebp
push
dec
flds
aad
repz
xchg
xchg
clc
fisubl
cmp
dec
fistps
dec
out
adc
mov
shrb
aad
mov
nop
mov
dec
dec
inc
mov
xlat
dec
insl
cli
je
ljmp
push
xchg
adc
jl
add
insl
mov
addl
pop
fstpt
std
pop
dec
mov
sbb
or
mov
lock
and
cli
sbb
clc
push
std
mov
cwtl
out
addb
push
fsubl
icebp
inc
mov
cld
ret
lret
subl
mov
negb
lock
cld
das
push
and
sarb
sti
into
sub
cmp
ret
call
inc
es
bound
dec
hlt
fisubl
cmpsl
fstp
shr
jae
mov
lods
outsl
hlt
xor
dec
sbb
mov
sbb
mov
and
cltd
out
lds
mov
testb
sub
push
clc
lea
mov
outsl
es
shll
insl
xor
out
test
and
and
and
cli
mov
xor
fimuls
gs
sbb
hlt
mov
xchg
es
into
stos
je
mov
nop
mov
dec
push
inc
or
lock
fwait
sub
push
fwait
xchg
add
mov
mov
aaa
jns
loopne
in
sbb
lods
dec
xchg
mov
add
pop
jge
inc
ja
mov
cmpsl
mov
popf
pushf
mov
aas
sub
jo
inc
cs
mov
jno
out
in
flds
jmp
loope
jecxz
ret
and
xchg
or
ret
pusha
mov
addr16
mov
and
bound
lcall
dec
in
and
pusha
and
cmp
ret
lods
pop
popf
aad
inc
push
in
push
fisubl
popf
adc
mov
filds
cld
fcmovbe
test
sbb
inc
sbb
pop
imul
iret
push
mov
pop
sahf
iret
icebp
cld
push
repnz
repnz
mov
fs
arpl
out
jns
dec
fimuls
push
add
sbb
add
jae
int3
fucomip
or
dec
or
sahf
dec
mov
out
inc
loopne
int3
mov
gs
cmp
movsb
jno
mov
jbe
test
sbb
aaa
scas
pop
pop
cmp
dec
adc
lock
cmp
pop
push
mov
jp
xchg
int3
and
scas
add
dec
jmp
cltd
pop
test
inc
inc
pop
out
mov
imul
pop
dec
icebp
inc
ss
shrb
das
iret
loope
mov
sub
lahf
out
cmp
jmp
mov
and
and
ja
lahf
adc
ja
sbb
adc
xor
mov
stos
xchg
negl
xor
js
add
lcall
sub
lds
pusha
outsb
mov
sahf
adc
cmovbe
sub
lods
mov
ss
cmc
clc
mov
push
inc
scas
cmp
add
sbb
stc
inc
out
lds
lret
test
mov
std
cmpsl
sahf
cmpsl
test
test
sti
mov
jg
fxch
loop
dec
jge
pop
add
fs
sub
aam
cwtl
ss
adc
pop
sub
idivl
push
cli
fsubrl
lret
cmp
sub
into
mov
popa
cmc
and
icebp
outsl
pop
es
adc
jno
adc
insl
ja
or
leavew
cmpsb
mov
mov
jle
mov
ret
roll
sti
outsl
dec
lock
arpl
nop
gs
loopne
jl
pop
jge
inc
inc
add
mov
nop
repz
xchg
mov
dec
push
cmp
cwtl
xlat
jle
repz
sub
adcl
nop
fimull
sub
xchg
cs
xlat
aad
lea
insw
jb
mov
mov
out
call
pop
jne
and
cs
lds
pusha
jb
sbb
mov
cmp
bndstx
cmp
out
mov
mov
cmpsl
xchg
mov
lcall
adc
sti
adc
mov
mov
pop
mov
sbb
in
lret
repnz
push
mov
cmp
lock
pop
rclb
test
out
aam
popa
addr16
mov
pop
insl
push
stos
pushf
dec
out
cltd
sbb
out
cmp
call
sarl
dec
out
gs
cmp
adc
sub
push
test
cmp
push
or
insl
fstl
aaa
clc
enter
scas
pop
jmp
sar
lods
lods
pop
fwait
out
stc
stos
enter
call
sarl
std
push
push
mulps
pop
xor
or
mov
sbb
fiadds
xor
xchg
xchg
dec
cmp
pop
iret
or
dec
fwait
pop
sarb
sub
aad
notrack
js
jns
shrl
xchg
sti
test
mov
cmp
or
loope
jp
sahf
or
outsl
mov
mov
scas
xchg
dec
std
dec
stos
jne
lea
mov
out
inc
out
int3
xrelease
xor
xchg
lods
pop
xor
push
push
int3
out
mov
sub
into
cwtl
xor
cmp
ret
cmp
and
xchg
mov
jle
pop
push
in
lahf
stos
pusha
sarb
or
rol
lea
inc
jae
fs
add
test
test
fiaddl
adc
imul
push
call
mov
dec
repnz
mov
sbb
hlt
lea
fsubs
cmpl
cmp
or
mov
cltd
inc
test
sti
or
hlt
add
dec
xchg
pop
inc
push
imul
adc
lds
sahf
sar
fidivrs
clc
int3
cmpb
ja
movsb
cld
add
jbe
rcrl
jge
xor
sbb
daa
out
outsb
push
jb
jecxz
add
icebp
daa
dec
stos
repz
xchg
add
sti
jo
mov
or
test
mov
out
cmpsb
or
enter
daa
fsubrl
push
lahf
pop
loope
push
aaa
cmp
dec
imul
repnz
xchg
lcall
pop
ss
jge
add
lret
mov
add
insl
sbb
pop
fs
js
fisubl
lcall
jo
or
shlb
sbb
cmp
ljmp
mov
push
xchg
mov
ror
lock
js
inc
push
or
push
push
imul
cmc
or
dec
shr
je
movsl
mov
inc
sahf
dec
or
loop
bound
iret
loop
hlt
jns
adc
fs
add
mov
outsl
cmp
adc
addr16
