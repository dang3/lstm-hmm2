jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
cmp
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
jg
mov
mov
lea
lea
mov
mov
lea
inc
inc
mov
mov
mov
mov
xchg
xchg
mov
dec
mov
cmp
je
jmp
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
mov
xor
divl
test
jne
cmp
jbe
lea
mov
mov
inc
inc
lea
mov
mov
inc
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
inc
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
jmp
mov
mov
mov
lea
mov
xchg
mov
mov
xchg
xchg
inc
mov
lea
mov
lea
lea
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
cmp
jbe
xchg
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
xchg
dec
dec
inc
mov
cmp
je
jmp
cmp
js
mov
lea
mov
mov
mov
xchg
mov
xchg
mov
mov
inc
dec
xchg
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
lea
cmp
jae
mov
mov
mov
lea
mov
mov
inc
dec
lea
mov
mov
lea
mov
mov
mov
cmp
je
jmp
cmp
js
mov
lea
mov
mov
mov
xchg
mov
xchg
mov
mov
inc
dec
xchg
mov
xchg
mov
lea
xchg
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
jmp
mov
mov
mov
lea
mov
xchg
mov
mov
xchg
xchg
inc
mov
lea
mov
lea
lea
mov
mov
sub
mov
mov
cmp
ja
mov
mov
inc
inc
jmp
mov
dec
inc
dec
xchg
mov
mov
xchg
mov
mov
xchg
xchg
push
mov
mov
xor
call
mov
cmp
jbe
lea
mov
mov
inc
inc
lea
mov
mov
inc
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
inc
inc
dec
mov
mov
mov
call
mov
cmp
jbe
xchg
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
xchg
dec
dec
inc
push
mov
mov
xor
call
mov
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
cmp
jg
mov
mov
lea
lea
mov
mov
lea
inc
inc
mov
mov
mov
mov
xchg
xchg
mov
dec
lea
mov
push
jmp
mov
cmp
ja
mov
mov
inc
inc
jmp
mov
dec
inc
dec
xchg
mov
mov
xchg
mov
mov
xchg
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
js
mov
lea
mov
mov
mov
xchg
mov
xchg
mov
mov
inc
dec
xchg
mov
xchg
mov
lea
xchg
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
lea
lea
cmp
jae
mov
mov
mov
lea
mov
mov
inc
dec
lea
mov
mov
lea
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
push
lea
push
lea
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jbe
xchg
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
xchg
dec
dec
inc
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jbe
lea
mov
mov
inc
inc
lea
mov
mov
inc
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
inc
inc
jmp
mov
dec
inc
dec
xchg
mov
mov
xchg
mov
mov
xchg
xchg
mov
mov
movl
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
lea
mov
xchg
mov
mov
xchg
xchg
inc
mov
lea
mov
lea
lea
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
out
mov
rcl
mov
and
mov
xor
mov
push
out
mov
add
mov
or
mov
clc
aam
hlt
aam
hlt
in
aam
hlt
push
cld
bound
sbb
hlt
jge
or
mov
in
mov
jge
or
push
call
mov
in
bound
sbb
push
lock
sbb
push
aam
mov
jge
or
call
bound
sbb
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
push
mov
hlt
ss
std
push
mov
hlt
ss
jp
or
or
push
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
push
mov
repz
pmuludq
hlt
jl
or
xor
mov
push
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
push
mov
mov
pmuludq
hlt
push
cld
push
mov
ret
xor
std
push
mov
ret
and
cld
push
mov
incl
add
repz
pmuludq
hlt
push
std
push
mov
ret
xor
cld
push
mov
jp
add
jl
adc
xor
std
push
mov
jp
add
ret
and
cld
push
mov
jl
add
ret
xor
std
push
mov
jp
adc
push
mov
ret
xor
cld
push
mov
incl
add
ret
and
std
push
mov
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
push
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
lea
lea
cmp
jae
mov
mov
mov
lea
mov
mov
inc
dec
lea
mov
mov
lea
mov
mov
movl
mov
cmp
ja
mov
mov
inc
inc
jmp
mov
dec
inc
dec
xchg
mov
mov
xchg
mov
mov
xchg
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
jmp
mov
mov
mov
lea
mov
xchg
mov
mov
xchg
xchg
inc
mov
lea
mov
lea
lea
mov
mov
mov
call
mov
cmpl
je
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
mov
cmp
je
mov
subb
mov
mov
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
mov
nop
xorb
nop
jmp
mov
mov
mov
lea
mov
xchg
mov
mov
xchg
xchg
inc
mov
lea
mov
lea
lea
mov
incl
mov
cmp
jne
cmp
js
mov
lea
mov
mov
mov
xchg
mov
xchg
mov
mov
inc
dec
xchg
mov
xchg
mov
lea
xchg
mov
call
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
cmp
jg
mov
mov
lea
lea
mov
mov
lea
inc
inc
mov
mov
mov
mov
xchg
xchg
mov
dec
push
mov
push
call
mov
pop
ret
push
mov
add
cmp
jg
mov
mov
lea
lea
mov
mov
lea
inc
inc
mov
mov
mov
mov
xchg
xchg
mov
dec
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jbe
lea
mov
mov
inc
inc
lea
mov
mov
inc
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
inc
inc
dec
movb
mov
cmp
jno
mov
mov
lea
dec
dec
mov
xchg
mov
mov
lea
mov
mov
mov
xchg
mov
mov
dec
mov
mov
pop
ret
push
mov
add
call
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
call
call
call
test
jne
mov
jmp
movw
mov
cmp
jbe
xchg
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
xchg
dec
dec
inc
call
lea
mov
pop
ret
push
mov
add
cmp
jge
mov
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
inc
inc
inc
lea
inc
inc
dec
lea
mov
lea
mov
cmp
jbe
lea
mov
mov
inc
inc
lea
mov
mov
inc
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
inc
inc
dec
push
call
mov
pushl
call
mov
cmp
ja
mov
mov
inc
inc
jmp
mov
dec
inc
dec
xchg
mov
mov
xchg
mov
mov
xchg
xchg
mov
pop
ret
add
jne
je
jae
add
sbbl
jne
movl
cmp
js
mov
lea
mov
mov
mov
xchg
mov
xchg
mov
mov
inc
dec
xchg
mov
xchg
mov
lea
xchg
mov
mov
mov
lea
call
jmp
mov
mov
mov
lea
mov
xchg
mov
mov
xchg
xchg
inc
mov
lea
mov
lea
lea
mov
ret
mov
ret
lea
out
jne
and
and
add
sub
add
pop
pop
dec
insb
mov
adc
push
or
add
add
pop
test
mov
add
cld
mov
and
xor
addl
adc
push
iret
mov
lahf
push
cwtl
add
pushaw
add
add
inc
adc
add
repnz
ja
mov
adc
add
push
sub
outsl
add
add
cmp
jmp
add
ljmp
xchg
fmul
sldt
sbbl
xor
add
out
xor
jne
subb
lret
and
mov
add
clc
rolb
rcrb
cmp
cmpsl
cmc
jmp
mov
add
add
aaa
add
jbe
add
mov
add
outsb
dec
mov
je
das
sbb
pop
lcall
add
add
add
lahf
addr16
out
icebp
xchg
add
add
test
push
or
icebp
mov
add
and
bnd
nop
inc
test
mov
add
fisttpll
lret
mov
add
movb
add
in
or
add
jmp
or
add
stc
int3
cld
stos
mov
fistl
adc
pop
rcll
add
les
dec
fadds
xchg
mov
add
add
mov
and
lret
aas
loopne
add
add
lods
cmp
popa
dec
cmc
sbb
adc
xor
add
std
sbb
lret
idivb
sub
jne
mov
add
test
add
and
mov
ja
pop
dec
add
lods
push
add
test
add
add
test
or
xchg
loope
pop
add
pop
jno
add
lock
or
sbb
in
lods
add
cmp
sub
add
in
lock
add
add
and
testl
mov
jae
add
jge,pn
cmp
mov
sub
shl
add
jmp
cmp
sbbb
call
xchg
cmp
push
xchg
jmp
insb
inc
jg
sbb
lods
xor
nop
iretw
test
outsb
inc
in
adc
lahf
iret
add
mov
add
cwtl
add
add
add
and
xchg
add
mov
or
lods
adc
add
enter
mov
dec
prefetcht2
lock
adc
fiadds
jae
popf
jecxz
lret
insb
add
sbb
stc
movsb
add
in
jg
je
cltd
cmp
es
add
mov
out
add
add
add
dec
cltd
popa
add
jno
xchg
fdivl
ljmp
inc
inc
pop
xchg
sub
push
addr16
mov
cli
add
jg
add
add
jle
add
jb
cwtl
mov
add
movsl
stc
out
and
add
add
fmuls
dec
jbe
add
or
test
add
lea
add
test
cmp
test
sub
jecxz
dec
add
mov
lea
sub
jno
add
sbb
add
pop
jns
pop
xor
out
add
add
mov
jg
das
add
add
aas
add
pop
add
cmp
mov
int3
hlt
in
in
std
sub
push
add
add
add
cmpsb
nop
cmp
push
imul
outsb
loope
lret
gs
pop
loopne
insl
and
pop
sub
lods
ret
lcall
add
lret
sub
sbb
push
js
xlat
leave
in
jnp
mov
in
in
xchg
sar
loop
mov
dec
nop
std
pop
jle
mov
inc
xor
enter
and
mov
testb
je
call
dec
int
pop
jp
clc
adc
scas
negl
iret
cs
xor
inc
pop
xchg
inc
lds
jbe
out
xchg
dec
ror
je
and
add
sbb
push
ds
mov
adc
out
jo
andl
stos
fldt
jo
mov
inc
mov
mov
dec
dec
mov
lret
and
repz
fs
roll
mov
pop
mov
fdivrl
inc
cld
adc
add
sub
cmp
xlat
fstps
pop
rcrb
rolb
inc
xor
aam
ds
imul
fprem
aas
jecxz
xchg
stc
jl
ljmp
xchg
ljmp
test
dec
fmull
inc
lock
add
cwtl
cltd
leave
bound
mov
pop
notb
jne
dec
enter
in
clc
nop
xchg
and
sarl
mov
adc
cmpsl
pop
mov
add
mov
jecxz
jnp
mov
pop
xor
inc
inc
jae
and
int
rcrb
xor
cld
sub
dec
int3
in
inc
daa
jmp
or
and
fwait
push
xchg
jne
xorl
aaa
div
bound
jo
in
pop
rclb
or
sub
add
jno
jp
pop
cmp
mov
pop
dec
dec
cmp
jns
js
push
pusha
pop
jge
fbstp
dec
in
xchg
push
pop
xchg
repz
fcomp
out
addr16
lea
mov
imul
and
insb
cmp
dec
jnp
in
jle
sub
fldt
iret
cmp
mov
fsubr
inc
cli
and
or
fmuls
insb
rolb
je
fcmovbe
fisttps
xchg
mov
sub
jmp
scas
mov
push
stos
rcl
xchg
pop
cmp
leave
cld
dec
push
hlt
push
clc
xor
call
hlt
jge
lods
fstpl
sub
aaa
cmp
add
add
mov
inc
jg
fiadds
sub
jo
mov
movsb
and
push
popa
movsb
add
push
mov
arpl
mov
enter
daa
out
cmpb
inc
shll
inc
addr16
dec
and
out
sub
movsl
pop
or
and
jle
lahf
fistpll
push
push
push
test
push
sub
inc
xor
mov
pop
mov
push
pop
sbb
das
mov
loope
loope
sub
xor
cmp
addr16
es
adc
xor
mov
sbb
jg
pop
sbb
or
sbb
sub
imul
pusha
sub
push
imul
fcoml
push
mov
jnp
cmp
inc
mov
mov
jb
jg
mov
mov
jmp
je
pop
mov
lcall
stos
or
or
pop
testl
orl
hlt
xchg
sbb
sahf
dec
adc
xor
cs
stc
xor
fs
cld
lods
adc
testl
out
jo
cli
ficomps
repz
mov
das
into
lods
aam
gs
or
in
pop
pop
inc
addr16
imul
mov
stos
shrb
sbb
mov
inc
xlat
or
sub
jecxz
in
fnstenv
icebp
and
cltd
pop
cmp
add
scas
inc
nop
fsub
jl
jmp
mov
fsts
inc
cmpsl
rep
xchg
dec
xchg
sbb
mov
into
sti
nop
pop
sub
insl
sub
ja
cs
xchg
inc
loopne
test
xchg
dec
scas
jb
cld
dec
cmp
shl
push
movb
test
lods
xlat
cwtl
pop
sub
mov
out
pushf
mov
daa
push
cmp
sbb
xlat
xchg
lods
pop
xchg
cmp
mov
mov
insb
das
aas
cmp
mov
adcl
shll
movsb
negb
dec
insl
dec
gs
dec
and
xchg
mov
mov
inc
cld
aas
fs
lret
pushf
or
mov
outsl
sbb
sub
inc
pop
out
popa
psrld
jmp
dec
aam
sub
ret
clc
repz
sub
out
lret
clc
jp
fistl
push
fs
lods
lods
xor
mov
lock
aaa
push
outsl
pushf
mov
mov
repnz
loop
shlb
outsb
cmp
dec
das
mov
xchg
mov
sbb
popa
not
xchg
add
pop
in
mov
stos
jb
add
or
addb
ljmp
ss
push
push
mov
and
mov
ljmp
dec
mov
sub
or
mov
jge
sbb
jne
clc
cs
fsub
out
push
call
mov
psubw
in
out
pop
xchg
in
and
movsb
andb
movsb
call
jp
xchg
divl
ljmp
dec
pop
dec
test
jg
pop
pusha
mov
cli
in
mov
jmp
mov
gs
in
lcall
test
ljmp
jns
fs
cmpsl
sbb
jle
mov
push
and
imul
lcall
pop
scas
adc
xchg
sbb
pop
push
or
out
add
fs
xchg
dec
xchg
or
cs
sbb
imul
scas
add
lds
je
shr
mov
bound
push
push
leave
jae
jge
lahf
bound
ss
movsbl
mov
sub
clc
dec
adc
add
pop
ror
sahf
mov
fsubp
jp
xor
test
cmc
inc
and
cli
test
movsb
mov
sbb
in
cmp
ljmp
in
adc
jl
xor
push
adc
movsl
popa
jns
and
push
lahf
inc
cmpsb
push
cmp
int3
xchg
push
sarl
mov
pop
fimuls
movsl
pop
pop
lds
push
out
add
sahf
xor
sub
mov
pop
ds
adc
pop
dec
mov
rorb
sbb
pushf
jle
add
mov
jmp
fcom
iret
dec
sbb
sub
int
lcall
fadd
testb
pop
leave
outsb
cmp
insb
test
lods
adcb
stos
aas
test
fisttps
mov
jo
mov
cmp
push
es
cmp
imul
sbb
lret
inc
rorl
jle
ja
mov
sahf
in
adc
xor
scas
outsl
xchg
or
jle
mov
ljmp
adc
gs
lods
pop
shrb
out
xchg
xchg
cli
adc
jae
add
hlt
into
nop
mov
fucom
jg
scas
pop
data16
adc
and
mov
adc
mov
add
inc
data16
dec
pop
cmpb
push
nop
xlat
inc
dec
xlat
sub
repnz
sti
dec
addr16
sub
xchg
aad
add
xchg
xor
pop
popf
aas
fxch
icebp
mov
or
repz
xchg
loopne
fmull
movsb
ret
dec
scas
push
pop
loopne
dec
adc
loopne
jmp
jecxz
cs
push
insb
lret
sti
jo
aas
xor
jno
xchg
xor
dec
data16
divl
jecxz
bound
push
mov
loope
push
xchg
into
mov
push
insb
mov
xchg
and
xchg
pop
push
fildl
push
and
clc
mov
mulb
lock
add
push
xor
mov
cmp
and
pop
mov
subb
insl
xor
cli
cmpsl
in
jb
jle
jns
mov
in
lret
or
or
mov
push
outsl
shlb
hlt
or
mov
ret
xchg
scas
xchg
data16
ret
mov
imul
stos
inc
clc
lods
pop
mov
xchg
sbb
aaa
ljmp
add
test
jle
push
cltd
aaa
das
mov
mov
jb
push
xor
dec
xchg
dec
xchg
test
pop
mov
sbb
push
push
in
insl
mov
stos
popa
insl
in
mov
add
sub
stc
cmpsb
shll
mov
or
pop
jg
popa
xchg
fldl
push
cmpsb
sti
pop
movsl
test
ja
scas
bound
loope
inc
push
xchg
les
movsb
mov
mov
shll
mov
movsl
imul
cmc
fstl
enter
and
and
xchg
or
mov
addr16
mov
jp
jge
mov
imul
movl
pusha
dec
outsb
hlt
fcomip
mov
inc
jmp
mov
orl
out
inc
loop
push
out
stos
stos
pop
sti
xor
nop
jmp
insb
adc
jnp
hlt
mov
sub
push
imul
iret
stc
jl
ret
and
in
sub
jb
cmpsb
fsubs
ret
or
bound
inc
or
outsl
mov
arpl
sbb
fisttpl
cmp
stos
xlat
lds
push
cmpl
sahf
sbb
ljmp
arpl
sbb
inc
daa
jge
cmpsl
mov
je
enter
lahf
or
sub
add
cmp
xchg
add
xor
add
test
int
dec
cmp
adc
gs
ret
in
and
ror
aas
mov
cmp
out
jbe
push
jl
out
lret
clc
fwait
push
fwait
cmp
push
cli
int
sbb
inc
jo
loope
sbb
pushf
cmpsb
out
inc
dec
out
jecxz
jo
sub
xor
sbb
push
or
loope
mov
test
mov
push
into
shlb
mov
mov
sbb
or
add
push
push
xor
mov
mov
pop
int
fstpl
sbb
scas
sub
loopne
lahf
leave
pop
test
repnz
iret
clc
mov
push
mov
lods
mov
or
icebp
push
sub
outsb
fadds
loop
lret
lret
jb
mov
clc
sbb
es
sahf
popl
mov
jmp
push
xor
sbb
adc
test
fs
ficoml
pop
mov
fistpll
js
insl
out
cmp
cli
inc
test
dec
lahf
push
cmp
scas
es
sub
into
jae
dec
mov
dec
loopne
xlat
jg
test
mov
and
push
fistl
lods
push
data16
push
sbb
add
mov
xchg
jnp
adc
lock
mov
sar
dec
add
aad
mov
dec
dec
test
stc
jnp
add
stos
repz
int3
scas
ret
inc
cwtl
call
int3
in
pop
xchg
add
orps
pushf
cmp
sbb
stos
inc
repz
shr
scas
jb
cwtl
int
orb
nop
fbstp
or
cwtl
rcll
scas
mov
mov
andl
call
sub
fsubrs
cmp
mov
xchg
das
std
sub
mov
pop
ret
iret
xor
insl
sbb
mov
in
loopne
mov
inc
icebp
popa
lea
lret
jp
lods
mov
jmp
sub
roll
aam
cli
inc
ret
push
cmp
xor
mov
clc
lock
ljmp
clc
lods
xorb
mov
jle
inc
push
and
xor
add
or
mov
and
pop
xchg
lret
pop
cmp
mov
std
cmp
cmp
out
shlb
pop
add
std
jle
lcall
ljmp
ret
push
push
mov
sub
leave
pop
pusha
sub
out
decb
insl
std
inc
in
sbb
fwait
loope
ss
popa
pop
ljmp
and
aam
push
bound
cmp
idivb
loope
adcl
and
sub
notb
test
inc
sbb
in
mov
pop
inc
mov
ss
push
in
jb
pusha
call
lea
push
jge
jmp
push
dec
cmpsb
sbb
shl
repnz
mov
add
insb
mov
es
stos
lret
fst
and
xchg
dec
and
push
mov
test
cld
mov
inc
ret
ljmp
je
jae
fisubrl
or
les
mov
jno
imul
lds
jecxz
shlb
lahf
mov
adc
xchg
leave
popa
jp
hlt
xor
mov
inc
mov
pop
jge
jns
sbb
dec
mov
jbe
xchg
or
and
add
fisttpl
pop
int
je
sub
in
xor
pop
or
lock
aad
dec
push
xlat
movsb
movsb
je
push
ja
xchg
jbe
dec
dec
in
or
adc
adc
mov
in
jmp
jno
rolb
jl
jg
dec
xor
daa
movsl
outsl
andl
push
jecxz
sbb
addr16
inc
ficoms
repz
pop
sub
xchg
js
out
pop
repz
mov
and
cmp
cmp
out
ds
dec
cmpsb
adc
adc
nop
popl
or
add
jle
int
mov
data16
mov
sub
ss
adc
sub
jno
add
in
cmp
pop
jg
bound
mov
clc
jne
fildll
sbb
js
dec
push
sub
pushf
cmp
cmp
sub
lret
add
aaa
mov
sbb
mov
aas
cmc
mov
outsb
xor
cmp
outsl
inc
push
xchg
loop
incb
stc
pop
fcompl
cmpsl
lods
scas
adc
sahf
xchg
lods
in
xrelease
and
bound
ja
fbstp
and
pop
or
cmpsl
into
push
push
mov
pop
movsb
push
cld
adc
pop
imul
ret
adc
xor
lcall
jge
xlat
lds
dec
mov
xor
aam
cmpsb
ret
outsb
jmp
das
nop
imul
insl
inc
jg
pop
fnstenv
cld
dec
les
xchg
mov
fdivl
xchg
push
lds
lcall
pop
inc
mov
adc
xchg
pop
fldcw
jnp
xchg
inc
jp
hlt
inc
xor
push
jb
xor
dec
popf
pop
mov
jecxz
push
add
or
cmp
mov
and
push
mov
out
cmpl
and
test
sbb
or
add
fsubl
adc
ljmp
mulb
push
insl
jns
dec
adc
or
in
fs
cmp
lret
jmp
jp
and
cld
sub
pop
dec
xchg
xchg
dec
adc
push
lods
dec
aam
loope
ret
movsl
inc
pop
es
into
fnstsw
loope
clc
sub
cmc
shrl
ljmp
mov
mov
push
cmp
xchg
vaddss
or
movsl
add
loopne
add
sbb
inc
or
jne
test
xchg
arpl
push
pop
sub
fwait
mov
pop
out
sub
stos
aas
lret
shr
xor
add
sbb
adc
aaa
into
int3
xor
xchg
les
fwait
inc
repz
test
mov
sub
mov
daa
ja
inc
stc
dec
cwtl
lods
inc
inc
or
or
sar
push
add
jp
xchg
mov
mov
je
out
mov
add
mulb
in
lahf
notb
pop
mov
sub
icebp
das
jne
inc
or
xchg
outsl
xorb
data16
mov
lret
mov
xchg
xor
fbstp
arpl
dec
out
jmp
pop
enter
cmpsb
jmp
jne
sbbl
movsb
hlt
push
gs
mov
and
jnp
jnp
adc
cmp
push
testl
ds
test
push
movsl
incl
pop
jae
and
or
pop
xchg
testb
cmp
lahf
into
les
cmp
ljmp
or
lds
pop
mov
repnz
cld
leave
fsubs
in
arpl
lahf
inc
mov
push
sbb
and
or
shlb
pop
cld
loopne
int3
std
push
xor
mov
in
and
scas
jle
add
ret
movsb
das
fdivrs
jbe
sti
push
in
repnz
in
shld
daa
jecxz
adc
jle
cmc
jno
icebp
jl,pn
jecxz
dec
mov
sbb
movsl
jbe
add
dec
pop
and
test
xor
insl
call
cmpsb
jbe
mov
aaa
cltd
js
mov
pop
adc
pop
sub
jecxz
cmp
and
cmp
or
sbb
shr
fcomi
out
pop
addl
mov
pushf
xor
pop
sbb
adc
xchg
mov
pop
xor
lret
flds
lcall
repz
outsl
sub
insb
outsb
and
movsl
ret
xchg
push
mov
mov
inc
mov
mov
and
lahf
sti
cmp
clc
xor
lret
es
out
cmp
sbb
sbb
cmc
jns
aam
jno
pop
outsl
and
stos
loop
cmp
stc
bt
fs
in
adc
inc
jecxz
mov
cmpsl
test
ret
cli
stos
pushf
mov
cmp
or
je
cmp
gs
cltd
popf
loopne
sub
pop
ret
scas
popa
adc
inc
arpl
and
test
es
negl
js
dec
xlat
add
bound
clc
bound
dec
adc
sti
push
push
add
xchg
les
aad
pop
clc
nop
inc
in
dec
addr16
cmc
inc
xchg
dec
inc
fldcw
adc
sub
rep
pushf
rcll
xchg
dec
push
call
lret
pop
stc
push
fstl
mov
fcomip
jmp
mov
bound
popf
call
aas
setns
lea
out
adc
lcall
loop
psubsb
std
dec
and
mov
xchg
dec
mov
jnp
dec
push
push
inc
fistl
jmp
push
das
mov
pop
mov
and
mov
shrl
xchg
imul
movsl
cmpsl
loop
xor
bswap
jno
jmp
cmp
pop
mov
mov
cmp
cli
insl
mov
imul
sub
mov
pop
sbb
ret
xor
mov
frstor
addr16
xchg
pusha
xchg
xor
mov
popa
out
shlb
loope
push
mov
or
push
fldt
popa
add
scas
lds
adc
dec
lret
loopne
test
xor
xchg
sbb
sbb
insb
rcl
xacquire
cltd
mov
stos
je,pn
out
xchg
outsb
loope
addl
arpl
call
out
xor
sub
xor
dec
mov
xchg
test
mov
sub
dec
mov
mov
fwait
aas
nop
repz
cmpsl
adc
test
sahf
jns
out
xchg
xlat
les
into
pop
jns
add
testl
lea
in
inc
jns
jp
jbe
mov
mov
mov
adc
pusha
dec
stos
mov
pusha
push
out
cmp
push
cmp
pop
jmp
ljmp
out
lock
push
arpl
loope
push
movsb
lods
sti
stos
mov
repz
roll
inc
lcall
dec
sbb
ds
xor
mov
test
ret
mov
jb
inc
xor
shlb
nop
push
or
or
rcll
mov
xchg
push
sbb
scas
and
lds
rcrb
mov
mov
jge
dec
jne
hlt
lret
push
or
ds
inc
xchg
lahf
jge
lret
pop
sbb
cli
jle
test
pop
add
in
lcall
cmp
outsl
adc
xor
adc
call
jne
mov
sbb
xor
jbe
sbb
in
fldenv
enter
daa
loop
test
mov
xchg
jno
xor
leave
dec
adc
inc
push
push
movsl
jge
sub
in
adc
mov
test
std
fcomps
cmpsb
stc
lret
hlt
pop
jp
sarl
sbb
pop
push
xor
push
xchg
add
cli
aam
sub
lahf
repnz
jns
adc
enter
dec
addl
add
lcall
fcmovnbe
push
int
mov
xchg
xchg
arpl
dec
cmp
fbstp
pop
push
push
add
sub
repnz
movsl
test
popa
add
idivb
xchg
inc
mov
mov
mov
jp
mov
jg
and
mov
fdivs
dec
add
pusha
shll
mov
in
sbb
int3
sahf
js
inc
cmc
inc
and
xor
inc
shrb
sbb
stc
or
inc
adc
pop
ss
cmpsb
dec
lods
mov
mov
out
inc
and
jge
rcrl
cmp
jp
or
into
sbb
dec
gs
jo
loopne
hlt
push
pop
loop
aam
sahf
arpl
imul
add
or
xchg
sbb
mov
adc
inc
aas
test
imul
in
or
sti
add
das
mov
inc
aad
inc
or
dec
stos
or
inc
sub
movsl
xchg
sbb
ss
repz
in
xchg
in
mov
clc
push
sti
call
dec
mov
jo
adc
lock
cmp
test
inc
outsb
cmp
add
inc
addr16
stos
jb
push
out
mov
push
jecxz
ljmp
lock
push
roll
mov
daa
call
fcmovnb
sub
jbe
mov
push
mov
ret
das
lcall
mov
add
cmp
mov
sbb
dec
or
cmp
dec
bound
out
cmp
push
inc
arpl
mov
pop
and
xor
pushf
pop
mov
inc
shl
xor
aam
stos
xor
ret
push
imul
inc
lods
fisttpll
inc
sbb
cmpsl
push
ret
xor
ret
sub
push
mov
push
mov
push
mov
mov
add
inc
sub
sbb
adc
cmp
xor
iret
pop
incb
mov
or
inc
adc
sbb
adcl
pushl
and
aad
decb
mov
mov
xor
mov
xchg
mov
and
leave
dec
jle
test
nop
test
fwait
outsb
adc
push
dec
pusha
shlb
xlat
mov
xchg
mov
bound
lahf
jns
inc
jnp
cmpb
mov
xor
sub
out
pop
addr16
insl
mov
xor
mov
adc
mov
addl
dec
mov
mov
mov
inc
mov
jno
int
xchg
pop
xchg
mov
addw
lret
popf
ja
int
shlb
stc
stos
and
lret
sti
jecxz
mov
inc
jb
xchg
adcl
aaa
int
jne
loope
cs
pop
shl
inc
cmp
test
push
into
sbb
dec
sub
or
xchg
fiaddl
xchg
sbb
sub
imul
scas
repnz
and
je
scas
mov
or
dec
leave
push
cltd
arpl
movsl
jge
dec
mov
aaa
mov
push
or
sub
int3
xor
pop
pop
xor
adc
std
xor
jo
shrb
sub
in
inc
fwait
sbb
cmpsb
call
in
rorb
enter
daa
loope
xchg
cmp
sub
jno
sahf
pop
jl
daa
fimuls
cmp
daa
xchg
and
mov
ss
enter
mov
lods
cmpsb
jl
ret
pop
mov
push
ljmp
cmpb
adc
xlat
sub
xor
cmp
test
das
mov
shlb
test
adc
sbbb
cltd
incb
mov
xor
add
pop
int
int
sub
and
lcall
dec
fcompl
nop
je
adc
inc
clc
test
movsb
call
jg
xor
or
leave
mov
push
push
xor
popf
push
fsubrs
pop
testl
mov
or
xchg
mov
pop
rorl
adc
and
loop
push
cmp
fs
push
adc
pop
ljmp
fs
test
sar
cli
adc
pop
xor
mov
movsl
into
decl
mov
xchg
or
add
jno
shrl
inc
jle
sbb
mov
iret
iret
cmc
mov
sbb
out
adc
lds
ficomps
mov
jae
adc
xlat
push
nop
aad
mov
nop
cli
pop
orl
cwtl
inc
mov
pop
lret
les
out
dec
cmp
xchg
scas
xchg
orl
dec
add
pop
pop
cli
adcl
xlat
mov
in
mov
movsb
js
inc
bswap
sbb
test
aas
dec
push
xor
xor
leave
dec
add
jp
mov
aaa
rol
adc
push
lock
mov
sti
out
mov
sbb
fcomi
xchg
out
fs
push
mov
pop
push
sbb
xor
mov
lret
or
rorl
sti
xchg
imul
out
insl
mov
xor
add
or
mov
mov
mov
sbb
mov
test
adc
push
xor
lods
lea
ret
push
repz
es
mov
clc
faddl
or
sbb
loope
sbb
test
or
lcall
paddusw
dec
cltd
dec
in
test
mov
dec
push
add
dec
cltd
arpl
xchg
in
sbb
shll
inc
std
stos
or
xchg
out
pop
mov
add
imul
dec
or
jecxz
xor
xchg
jns
lods
jl
xchg
outsb
mov
popa
mov
pop
dec
jnp
ja
std
jg
jno
faddl
stos
repnz
aad
fwait
popf
push
xor
in
sahf
stc
jne
hlt
imul
out
bound
mov
cltd
xchg
mov
sbb
and
loop
shll
in
jp
mov
sti
mov
repnz
jne
jno
jo
test
cmpsl
push
fists
lock
jmp
xorb
adcl
mov
popf
sahf
dec
mov
push
and
and
pop
imull
adc
jle
sarl
push
int3
aad
adc
inc
iret
aam
imul
clc
clc
mov
inc
ror
jae
mov
push
xchg
xor
leave
into
pop
inc
mov
mov
xchg
push
xor
call
cmp
fucomi
mov
pop
sub
jo
popa
les
nop
int
xchg
pop
sbb
sbb
das
lret
aaa
jb
push
or
mov
push
je
pop
mov
jo
mov
lahf
xor
lret
pop
lock
push
cmp
cmp
mov
fs
mov
fdivl
mov
stos
enter
daa
loopne
int
pop
leave
call
jl
pop
into
dec
out
hlt
mov
movsl
mov
and
or
lahf
mov
adc
mov
add
gs
sbb
es
enter
jp
inc
pop
rolb
or
sub
xchg
mov
pop
mov
ds
jle
xchg
or
ja
out
xor
out
xchg
add
sbb
xor
sub
popa
int3
pop
int
repnz
mov
adc
dec
mov
push
int3
aas
movsl
fadd
sub
sub
aaa
outsb
mov
test
xor
mov
mov
cmp
mov
sbb
mov
outsl
push
cmp
ds
sub
testl
fcmovnb
xchg
fs
mov
cvtpi2ps
mov
fcomps
into
sarl
sbbb
loop
sub
stc
xor
into
roll
cmpb
addl
sub
xor
outsl
cmp
sarl
loop
push
lods
dec
outsb
loopne
ret
and
lahf
adc
imul
push
add
fsubs
aad
sbb
sub
sbb
ror
sub
sahf
mov
fidivrs
psubq
pop
cli
or
fcoml
test
xchg
inc
lret
sar
fsts
rcrl
sbb
jb
mov
xchg
pop
adc
adc
xchg
sbb
jg
cs
ja
inc
xchg
repz
notl
in
cmp
jb
test
inc
je
push
out
pop
lods
sbb
int
repz
push
jbe
mov
in
stos
dec
adc
mov
and
call
mov
and
lock
shrl
pop
inc
xchg
mov
and
and
stos
rcrl
in
xor
inc
insl
fwait
or
add
pop
mov
xchg
aas
iret
cld
insb
pop
out
lret
movsl
cmp
and
push
adc
rcrb
int3
sub
js
loop
loope
test
rcr
fstp
int
clc
pop
push
mov
ljmp
inc
lods
cltd
clc
sub
out
lcall
jecxz
add
insb
adc
cmp
test
lock
test
movups
ret
push
lods
dec
add
test
je
xchg
cmp
mul
ficomps
or
mov
cmpsb
mov
test
pushl
cmp
or
inc
xor
xor
cmp
or
ja
cltd
push
dec
fs
inc
out
or
aas
js
int3
pop
pop
push
nop
rcrl
mov
xlat
mov
add
bound
lea
jns
cmpsb
cmp
cwtl
and
xchg
push
cltd
mov
sub
fstl
addr16
loope
jp
divb
pop
imul
pop
pop
dec
push
jnp
in
pop
scas
pusha
out
and
fildll
cmp
dec
popf
jns
dec
ljmp
andl
cmp
inc
adc
stos
or
stc
and
fsubr
insb
xchg
xchg
pop
jnp
cmpb
or
jne
adc
mov
ret
add
das
mov
inc
push
cmp
jae
fildll
push
push
ret
jp
shrb
mov
pop
push
or
in
pop
imul
cmp
shrb
scas
repnz
mov
leave
mov
pop
hlt
lods
jp
arpl
or
ds
pop
xchg
aaa
xor
aaa
add
adc
int3
or
pop
mov
add
xor
movsl
fisubrl
aas
jp
cmp
rclb
pop
scas
lods
push
add
jbe
cmp
sti
pusha
push
daa
fistps
jno
fcompl
add
push
in
mov
mov
mov
xchg
lahf
xlat
add
lcall
decl
cmpsb
andb
js
mov
pop
adc
push
jae
loope
dec
cmpsl
sub
iret
pop
cmp
icebp
adc
jne
rcll
pop
pop
adc
stc
jae
sbb
fcomp
xor
mov
xor
mov
add
lret
pop
ja
lcall
mov
outsl
cltd
cmp
repz
outsb
icebp
cmp
lea
add
cmpsl
mov
jl
mov
in
and
pop
push
push
cmp
lods
cmp
in
out
add
lret
jl
sub
mov
arpl
sahf
popa
jne
xchg
es
xor
jmp
jp
cmpl
stc
jmp
pusha
fs
adc
adc
jmp
sbb
pop
arpl
out
lock
jbe
sub
push
fimuls
or
ret
test
dec
mov
mov
cmp
adc
repnz
mov
in
mov
sbb
fs
in
les
mov
dec
addr16
sti
adc
xchg
aad
dec
jbe
mov
out
jecxz
jmp
fisubs
hlt
les
and
out
mov
lea
mov
inc
pop
lds
mov
inc
or
push
cli
inc
sbb
jle
aas
mov
mov
dec
lock
push
jecxz
fwait
mov
sbb
aam
in
inc
cwtl
xor
push
mov
jle
mov
decl
fisttpl
and
xlat
mov
lock
mov
mov
mov
imull
insl
subb
push
sahf
cmpsl
ficomps
icebp
imul
cld
xchg
and
or
push
xchg
pop
out
shrb
sub
cs
dec
add
push
sbb
clc
push
mov
fsubrp
add
lret
popa
dec
pop
je
add
in
popf
xchg
dec
mov
sub
push
inc
add
setnp
add
dec
pop
cltd
mov
ja
mov
pushf
mov
mov
xchg
test
pop
mov
sbb
mov
rorl
push
pop
inc
and
ljmp
add
lahf
sbb
call
into
call
shlb
popa
xchg
sahf
mov
ret
ja
mov
ljmp
jge
fwait
sti
sub
push
xor
jne,pn
mov
sub
push
pop
jmp
jns
dec
daa
in
push
dec
xchg
pop
dec
scas
mov
push
fisubrl
fcoms
addr16
jp
fwait
or
inc
mov
leave
dec
aaa
or
mov
lea
mov
int
xchg
add
jmp
push
pop
push
xorl
out
xchg
mov
mov
lock
xor
aaa
jnp
dec
and
das
sub
pop
clc
inc
adc
arpl
iret
xchg
or
pop
cmovp
outsl
jae
jns
push
pop
lds
push
xchg
ficompl
mov
xchg
in
add
push
jge
push
or
pusha
nop
daa
rol
inc
mov
add
sub
push
hlt
testl
jge
sbb
cmpsb
aaa
lock
or
add
int3
hlt
add
lcall
inc
cmp
scas
es
and
out
adc
xchg
mov
mov
jbe
sub
jne
test
daa
fdivrp
fdivrs
jge
cli
jno
mov
jl
inc
decb
mov
push
ror
xor
push
lahf
and
aad
je
mov
mov
inc
cmp
cmpsb
add
roll
pop
push
fisttps
cmp
loope
mov
iret
cmp
loope
cwtl
dec
movsb
adc
xor
mov
lret
orb
sbb
add
ljmp
out
or
sub
pop
pop
inc
jmp
push
push
jp
out
sbb
and
loop
push
outsb
push
daa
std
test
mov
mov
xchg
xchg
mov
add
and
dec
clc
push
rclb
lahf
popa
cmp
mov
mov
fimuls
pop
enter
dec
cmc
pop
out
mov
outsl
jle
stc
loop
jl
stc
mov
in
pusha
adc
sub
lods
dec
xor
mov
xchg
out
xor
test
mov
jne
or
js
test
mov
loopne
fists
pop
pop
movsb
fists
ljmp
adc
into
pop
add
inc
jl
sbb
lahf
fdivr
xlat
aas
jo
sub
and
mov
mov
ja
shlb
inc
pop
lods
aad
mov
adc
popl
sub
dec
les
dec
repz
push
xchg
clc
icebp
imul
inc
rcr
pop
js
mov
pushf
in
pop
jmp
rcrl
inc
movsb
jbe
inc
rcrl
mov
sub
xchg
jb
sbb
dec
addr16
pop
jecxz
mov
push
in
jecxz
mov
cwtl
out
mov
mov
test
addl
lahf
fstpt
jnp
dec
xor
outsl
lock
out
push
addr16
mov
sub
push
sar
pop
mov
scas
mov
cmpsl
fnstsw
enter
pop
cld
ret
lret
add
mov
dec
out
and
sahf
xor
push
push
lock
xor
aam
cs
ret
decl
sub
cmp
pushf
cwtl
clc
lea
xchg
ljmp
or
in
mov
sub
xor
outsl
insb
popf
push
and
cmc
psubd
add
pusha
std
cltd
out
add
inc
xor
dec
xchg
mov
test
fistl
xchg
dec
xchg
shll
int3
subl
push
mov
sbb
gs
stos
xor
jae
mov
aas
jge
mov
jge
ja,pt
pop
sbb
icebp
add
iret
rorb
jo
adc
mov
shlb
sbb
bound
lods
jns
fwait
pop
in
ficoml
mov
lcall
shl
mov
gs
jp
es
mov
clc
clc
mov
aas
shlb
mov
push
or
in
mov
fucomi
cmp
mov
push
jo
xchg
dec
popf
adc
dec
mov
fildll
adc
dec
dec
cmp
pop
jnp
rolb
push
inc
xor
mov
out
or
mov
ficomps
adc
inc
push
push
xchg
push
fidivrl
outsl
or
cmp
iret
inc
add
int3
inc
xchg
sbb
inc
sbb
mov
es
jle
jg
out
rol
push
into
mov
push
pop
sbb
mov
jecxz
arpl
inc
pop
jge
sub
sbb
aaa
scas
stos
scas
or
pop
add
mov
int3
fisttps
ficomps
push
and
fsubrl
scas
add
xchg
pop
cmp
movsb
jno
notl
daa
popa
jbe
mov
enter
daa
fucom
mov
mov
add
stos
jb
pop
mov
stos
push
mov
push
movsl
mov
push
add
test
ljmp
hlt
mov
sub
cmp
scas
pop
pop
aam
push
ss
dec
sub
mov
in
adc
rorb
adc
dec
sbbb
and
mov
add
push
iret
xor
sub
stos
stos
sbb
add
insb
pop
lcall
lods
fadd
repnz
sub
and
outsb
mov
clc
test
inc
nop
addb
jg
mov
mov
mov
mov
mov
ja
and
flds
inc
add
fcomps
jo
jle
fs
jne
pop
aas
mov
push
dec
sahf
cmpsl
sti
and
xor
imul
stc
pop
mov
xchg
aam
xor
lods
ss
nop
mov
pushf
out
clc
mov
xor
xor
or
je
into
mov
cs
loopne
or
adc
insb
jnp
inc
insb
hlt
add
xchg
cmpsl
mov
cmp
inc
lcall
leave
lds
pop
inc
inc
sti
outsl
and
arpl
rcl
cwtl
aas
nop
data16
dec
mov
sub
les
sbb
test
lahf
sti
stos
mov
mov
xor
pushf
nop
cmp
jmp
and
xor
fiaddl
into
out
out
enter
add
jg
call
je
icebp
mov
inc
nop
and
xor
adc
test
push
mov
lods
sbb
aas
repz
xchg
cmc
imul
cmc
jg
mov
cmpsl
push
jge
mov
fcmovbe
inc
add
idiv
lods
mov
push
movsl
dec
out
or
mov
sbb
in
fstpl
mov
jge
cmp
lcall
nop
lds
adc
pusha
in
mov
dec
sbb
clc
enter
scas
xorb
xorl
mov
dec
out
xchg
mov
mov
std
and
mulps
out
cltd
es
jns
push
inc
imul
loope
dec
xor
in
into
xchg
movsl
sbb
xchg
mov
pop
fwait
dec
dec
stos
enter
call
mov
add
out
mov
nop
aad
xor
or
add
xor
adc
mov
inc
push
mov
cmp
ja
test
dec
cmp
js
or
jne
fwait
pop
adc
jns
fdivs
sbb
sarb
xor
mov
xchg
sti
js
mov
push
xchg
into
pop
xor
jp
sub
cwtl
loopne
mov
add
in
push
pusha
rorb
fisttps
out
cmpsb
mov
push
xchg
lods
pop
jae
push
mov
popf
cmp
bound
push
add
stos
arpl
and
jo
aad
cmpl
push
sbb
stos
mov
iret
push
jp
ret
popf
pop
aam
scas
inc
jae
xor
js
push
popf
add
mov
repnz
test
mov
out
sub
movsb
hlt
subb
aas
mov
sti
inc
and
test
sub
sbb
cli
hlt
lea
jp
mov
pop
std
sbb
push
push
aaa
outsb
repz
add
out
pop
inc
cmpsl
aaa
fiadds
loopne
pop
iret
dec
jo
lock
in
add
clc
jae
cmp
xor
cld
rclb
icebp
in
sbb
lahf
pop
enter
daa
fmull
cmp
inc
inc
jno
enter
xchg
push
xchg
mov
sbb
xchg
lods
push
jnp
imul
push
sbb
cmpsb
or
cli
js
mov
pop
into
dec
mov
cmpsb
mov
test
mov
je
cmp
and
fsubrp
lds
ljmp
xorb
add
ret
add
or
xor
pop
add
insl
xor
int
jo
sub
pop
inc
pop
nop
lcall
ja
jo
pop
sub
inc
cltd
outsb
sbb
xchg
test
or
bound
push
mov
mov
ret
aas
jle
lock
push
inc
lods
cwtl
cmp
adc
or
shr
movsl
mov
pop
sbb
ljmp
outsl
cmp
popa
loop
fwait
inc
stc
adc
sub
jmp
xchg
mov
pop
mov
into
out
inc
inc
cli
wbinvd
fnstenv
fninit
xchg
cmp
insl
mov
out
cmpsl
into
outsb
aaa
pop
gs
scas
jp
lea
pushf
mov
adc
shll
add
repz
cmp
and
sub
sahf
mov
mov
data16
push
sarb
incb
dec
nop
inc
out
dec
add
jp
pop
pop
xlat
lds
repz
jecxz
xchg
jle
cltd
lea
movsl
call
inc
add
fiadds
lods
pushf
cmp
cli
jmp
aaa
adc
xchg
clc
testb
mov
or
jb
pop
add
je
into
and
scas
stos
and
fdivr
fisubrl
or
dec
mov
mov
xor
rolb
xchg
int3
inc
mov
jo
lock
les
aam
daa
mov
pop
mov
add
xchg
lock
idivb
rcr
aaa
loope
dec
ljmp
mov
lock
sbb
lret
popa
push
mov
sub
mov
inc
into
aam
in
adc
or
and
movsb
out
ret
sbb
push
fnsave
jg
add
xchg
in
cmp
ljmp
pop
lods
inc
jle
mov
outsl
stos
adcb
push
inc
enter
or
pop
cmpsl
xchg
mov
into
int3
push
iret
mov
pop
test
xchg
xchg
xchg
nop
sbb
push
pop
xchg
pop
inc
mov
xchg
out
dec
cli
out
add
lock
ljmp
or
and
nop
xor
add
xchg
cmpl
popf
xor
inc
cmp
or
das
add
mov
push
sbb
adc
fisubl
out
stos
push
cmp
arpl
in
jecxz
xchg
dec
testb
xchg
xchg
scas
int
leave
mov
or
sub
mov
inc
pop
mov
sbb
push
in
dec
sbb
fildll
movsb
out
jns
int3
jmp
ja
inc
and
in
out
mov
and
pop
pop
out
ja
and
dec
insb
inc
out
dec
jnp
xor
jle
push
aas
push
das
sbb
scas
inc
xchg
iret
scas
cmp
or
pop
inc
jle
mov
push
pusha
test
push
out
push
add
mov
xchg
leave
xchg
daa
sbb
clc
sbb
ljmp
cmc
lods
jae
push
xchg
idivl
sti
iret
mov
hlt
fcomps
dec
inc
cmpsb
dec
lds
cmc
xchg
sbb
rcll
sub
mov
add
push
int3
mov
jb
je
dec
fsubp
dec
dec
xor
xchg
xchg
and
out
pop
movsb
xchg
jne
add
jbe
mov
in
sub
daa
fstpt
add
push
cli
jno
pop
in
scas
aam
dec
sbb
mov
and
adc
push
dec
mul
test
mov
or
in
or
mov
in
mov
dec
mov
loope
fsubp
sub
std
bound
andb
sub
mov
jb
out
adc
stc
stos
xchg
add
sbb
rcl
dec
xor
mov
iret
or
pop
ret
push
fstpl
jg
mov
sbb
outsb
jge
add
jge
mov
mov
sbb
dec
mov
pop
jmp
mov
adc
rolb
cmp
cld
idivl
roll
loop
mov
add
cmc
mov
xchg
xor
push
outsl
sbb
push
stc
call
das
adc
call
lods
add
cmp
mov
push
dec
xor
cmpsb
lods
or
jb
push
fwait
ja
rolb
loopne
mov
and
arpl
inc
imul
jns
iretw
fmul
sbb
push
ficoml
nop
ss
add
in
cmc
push
test
ja
nop
sbb
mov
inc
sub
lahf
les
imul
inc
pusha
mov
in
xchg
popa
mov
test
adc
ret
pushf
out
data16
bswap
idivb
addb
fdivrs
pop
out
jb
into
and
int3
aam
je
cmp
bound
sbb
cwtl
pop
inc
push
mov
cwtl
sbb
or
dec
stos
popf
rcr
and
pop
ss
leave
mov
jle
lock
cltd
push
das
mov
adc
mov
int
inc
shl
and
testb
inc
dec
in
adc
scas
cmc
mov
cld
inc
out
lret
rol
jl
push
cmp
mov
arpl
ja
mov
pop
sub
push
aam
outsl
ret
lods
adcb
push
xor
fstpl
es
sub
or
int3
jle
popa
cmpsl
cmp
mov
xchg
bound
inc
out
pusha
push
mov
sbb
pop
or
add
sbbb
pop
jmp
mov
popf
push
xchg
fadds
test
int3
pop
xchg
cmpsb
cmp
sahf
inc
in
shrl
lret
cmpsb
dec
sub
scas
mov
mov
dec
inc
xchg
xor
mov
push
mov
inc
mov
dec
mov
or
dec
mov
dec
and
stos
or
mov
add
jne
add
mov
je
out
mov
bound
fucomi
jns
pop
hlt
in
data16
sub
or
or
cmp
aad
sbb
push
push
mov
aaa
in
nop
adc
mov
fisttps
jge
dec
mov
jmp
inc
out
xorl
out
pop
xchg
insl
fwait
in
push
pushf
aas
dec
stos
dec
lret
and
push
jb
and
inc
fsts
in
xchg
adc
sti
fwait
ret
mov
inc
in
gs
mov
xchg
jae
mov
push
and
or
stos
inc
and
leave
push
sbb
scas
imul
rol
jle
shlb
cli
mov
dec
pop
mov
pop
add
arpl
pop
inc
test
mov
sbb
push
aaa
in
adc
inc
mov
int3
mov
inc
fiadds
ljmp
mov
leave
test
jno
cmp
adc
push
lea
jbe
jbe
in
adc
enter
daa
fisubrl
dec
jno
insb
aaa
jl
lods
loopne
mov
push
pop
jle
movsl
mov
xor
mov
test
mov
push
push
iret
nop
inc
je
mov
mov
test
stc
popw
dec
int3
das
push
mov
stos
sub
pop
or
xor
ds
and
mov
sub
sbbb
sbb
inc
fldl
jp
xor
sahf
push
int
xchg
pop
inc
xlat
adc
pop
cs
sub
push
je
jle
sub
push
add
ret
mov
mov
leave
and
adc
dec
push
dec
cmp
mov
lret
add
sbb
jae
sbb
rcll
jno
cmc
js
imul
cli
enter
mov
stc
jle
push
fs
mov
ss
push
lods
jmp
arpl
mov
push
and
mov
js
les
into
xor
scas
xlat
cmp
pop
fidivrl
ss
test
pop
add
cmp
sbb
mov
push
xlat
cmp
mov
add
mull
pusha
mov
sti
dec
pop
rcl
jl
nop
divl
dec
mov
push
pop
mov
sbb
repnz
add
fwait
lea
loop
call
inc
inc
jns
inc
cmp
adc
jecxz
pushf
xchg
xchg
into
jmp
stos
pop
cs
jno
inc
shrb
cmpsb
ljmp
inc
push
sbb
jecxz
mov
sub
sub
cld
mov
sub
mov
outsb
or
xchg
mov
fnstenv
pop
mov
lock
lcall
mov
int3
jg
and
movl
les
insl
add
mov
inc
mov
sahf
in
addr16
outsb
sub
lret
aas
cli
loop
dec
out
and
or
pop
addb
rcl
sub
mov
aam
icebp
cli
ret
cmp
sbb
ffree
call
repnz
imul
ljmp
or
clc
dec
mov
mov
lods
pcmpeqd
add
test
jno
sbb
xchg
push
sub
push
ljmp
jmp
pop
roll
outsb
xor
sbb
adc
add
es
xor
insl
sbbb
insl
push
push
or
je
cld
loopne
mov
dec
jmp
dec
pop
imul
dec
push
fnstenv
imul
fwait
out
loop
bound
jo
shrl
in
lods
xchg
jns
mov
xchg
call
inc
mov
mov
popf
stc
jp
pop
push
mov
pop
scas
mov
sti
mov
es
cmp
fildll
cwtl
xchg
pop
mov
xchg
or
shl
xchg
je
popf
scas
push
pop
mov
adc
movsb
fcompl
jnp
mov
push
push
mov
out
iret
insl
rorl
jns
cmp
ja
pop
jbe
push
out
mov
push
add
pop
xchg
ja
cs
xchg
scas
or
jecxz
add
mov
mov
adc
hlt
outsb
movsb
movsl
arpl
enter
and
imul
stos
in
or
aas
cmp
outsl
xor
int3
mov
rcrl
push
mov
xor
dec
out
sbb
mov
mov
movsb
popf
test
jbe
stos
pushf
in
clc
inc
pop
enter
daa
fstps
outsb
jno
cmc
das
jl
pop
or
idivl
push
aas
dec
dec
movsl
mov
insl
xchg
lahf
xchg
inc
push
push
hlt
mov
test
and
popf
inc
add
cmpsb
xchg
adc
pop
fnstenv
jle
mov
fisubrs
sub
loope
add
push
mov
loopne
pop
ds
addb
das
add
sarb
ret
movsl
jae
subb
sbb
jbe
divl
fidivs
outsb
mov
int
call
mov
rcr
lcall
push
fdivl
sub
lea
outsb
inc
add
test
adc
mov
jle
mov
lret
and
leave
push
dec
pop
insb
cmp
inc
add
xor
pusha
add
add
pop
sbb
les
cmc
aas
mov
xor
push
outsb
outsl
f2xm1
xchg
loop
iret
sbb
mov
fnstcw
push
cmp
mov
dec
out
cmp
xor
push
cmp
xchg
lcall
aas
loopne
ficoms
pop
pop
stc
cld
rclb
or
rclb
sub
data16
xchg
sbb
mov
icebp
sub
jns
das
notl
in
lret
loope
sti
sub
out
mov
xchg
rcrb
dec
sbb
and
fsts
inc
repz
in
add
jecxz
mov
shrb
adc
lcall
call
sbb
inc
adc
inc
pop
dec
or
inc
jmp
jb
dec
sub
sti
or
sub
andb
sub
mov
cwtl
xchg
mov
mov
mov
int
orl
pop
jl
jbe
adc
jp
cmc
adc
inc
mov
adc
and
sbb
roll
mov
insl
in
pop
jne
fcmovne
push
cmpsl
fsubrs
movsl
mov
jne
mov
lret
scas
repnz
mov
mov
and
movsl
mov
pop
mov
dec
stos
sub
in
insb
aam
je
ret
lret
es
sbb
mov
clc
mov
add
mov
je
aad
sub
and
mov
rorb
test
aad
and
jne
inc
cltd
add
test
mov
gs
sbb
dec
test
sti
push
xchg
mov
sbb
xchg
rcrl
pop
pop
inc
cwtl
and
test
ds
je
ljmp
mov
xor
ss
into
pop
mov
dec
cmpsb
and
cltd
jmp
pop
and
fdivs
dec
cmp
aad
inc
add
insl
fwait
adc
in
jne
jnp
mov
sti
out
dec
xchg
bound
data16
mov
in
addr16
mov
iret
outsb
sub
mov
xor
mov
inc
adc
aas
dec
mov
in
inc
inc
pusha
sub
rcr
mov
aam
push
push
jmp
orl
dec
popf
mov
push
sbb
and
movsb
mov
jbe
add
lcall
mov
fnstcw
and
mov
out
inc
lahf
dec
adc
test
push
test
lahf
subl
sbb
ficoml
out
into
adcb
xchg
or
adc
mov
shlb
mov
hlt
pop
push
hlt
mov
xlat
cli
inc
scas
aas
jge
mov
mov
or
test
add
mov
int3
jbe
test
push
mov
jne
dec
jo
rcrl
mov
cmp
add
push
sub
mov
sub
in
fucomip
jb
fsubrs
sub
fcoms
pop
cmp
mov
xchg
dec
pop
loop
and
push
and
cmp
mov
xor
and
push
jmp
loope
xchg
jge
pop
add
mov
pop
lret
push
imul
inc
inc
sub
xchg
sub
pop
pop
ds
cmp
jbe
and
push
xchg
xchg
popl
dec
cmpb
sbb
cmp
jns
in
add
js
pusha
inc
mov
inc
data16
lcall
mov
sbb
loop
jl
xchg
outsb
cmpsb
mov
push
jg
xchg
imul
insb
movsb
mov
sub
jb
push
shrb
fadds
loop
idivl
fldcw
ss
rorl
mov
pop
sbb
cs
push
fcoms
outsl
mov
dec
ret
stc
in
je
fs
popa
adc
sbb
lcall
mov
icebp
or
mov
lods
cli
xor
jecxz
cmp
dec
ret
or
jle
gs
fucom
stc
push
or
adcl
or
jle
ds
push
add
arpl
pop
push
push
sbb
add
xlat
mov
lahf
fsubs
ss
sti
fidivl
xchg
adc
insb
aad
mov
nop
lods
push
adc
jl
and
and
movsb
bound
nop
lcall
jp
call
aas
xchg
sti
pop
stos
mov
pushf
out
push
jmp
cs
mov
fs
jne
fs
in
sbb
push
push
jo
xor
mov
xor
pop
std
jbe
push
cwtl
push
adc
mov
fmull
pop
inc
cs
loopne
fistpl
imul
fdivr
cmp
push
repnz
das
push
cmp
cmp
cmp
ret
and
pop
rcl
dec
sahf
testb
insl
shl
lahf
dec
outsl
cmpsl
xlat
gs
mov
dec
inc
loope
les
lret
sbb
insl
jle
inc
jp
mov
ror
shlb
add
aam
dec
mov
pop
pusha
push
fnstcw
fstl
addr16
xchg
jmp
scas
lret
pop
dec
lods
icebp
inc
test
mov
sbb
dec
push
inc
xlat
mov
add
xchg
test
lret
add
cmp
test
lock
sbbb
mov
shrl
cmp
stos
jae
fwait
out
xlat
scas
icebp
add
pop
loopne
ljmp
dec
hlt
or
pop
xor
sqrtps
push
xlat
cmpl
cltd
pop
les
test
inc
xchg
in
or
pop
int
inc
cmp
test
xchg
jne
int
mov
fsubrl
jns
jns
fcmovne
in
in
xchg
xchg
push
or
push
sbb
cmc
sub
and
mov
push
addr16
insb
lcall
mov
sbb
jmp
mov
xchg
cltd
jmp
std
divb
push
stos
in
pop
clc
test
mov
cld
mov
jnp
and
jle
fidivrs
push
dec
mov
lods
iret
sub
ret
pop
pop
out
sti
inc
stos
push
adc
clc
sbb
test
sbb
add
pop
adc
add
cmp
and
sub
push
scas
rolb
adc
rolb
ds
sub
inc
hlt
add
jmp
sub
int
jge
cmp
scas
mov
sbb
sbb
lock
sbb
xor
fidivs
and
cmpsl
xlat
scas
aas
adc
xlat
into
xchg
cmp
sbb
push
jp
inc
jbe
jb
in
ja
enter
daa
xlat
adc
cmp
ljmp
pop
sub
ret
push
add
lret
loop
mov
rcrb
in
xor
mov
push
inc
and
ficomps
adc
in
pop
or
push
pop
aam
divl
add
ds
jno
lea
dec
shlb
push
push
arpl
faddl
aad
pop
add
cltd
stc
xor
mov
int
push
inc
sub
add
mov
xor
sti
fadd
fdivrp
sub
cmpsl
outsb
or
mov
adc
sub
lock
dec
stc
mov
scas
adc
mov
iret
and
mov
push
push
mov
pop
fdivrs
ds
cwtl
shl
xor
pop
xor
int
leave
xor
dec
mov
stc
mov
and
adc
cmp
mov
ret
gs
jo
cli
push
xchg
adc
push
mov
mov
into
fnsave
arpl
xchg
mov
cmp
scas
or
add
adc
add
add
clc
data16
fcompl
cmp
fcom
clc
pop
les
pop
addb
cmp
in
mov
mov
push
aad
in
nop
mov
dec
fcmovnb
sbb
push
and
les
xor
xchg
dec
dec
lea
add
mov
fwait
xor
shll
pushf
xchg
arpl
jmp
push
out
orb
pop
inc
nop
xchg
aas
cmp
jb
xchg
js
test
hlt
je
pop
add
sahf
lret
enter
fdivrp
sbb
es
mov
aaa
xchg
subl
cmp
js
pop
ret
mov
popf
mov
das
das
imul
mov
stc
ret
rcl
and
xchg
jae
dec
shll
fwait
mov
and
inc
cld
out
out
lret
mov
sub
negb
mov
fists
mov
sub
dec
mov
fwait
jne
ret
call
shll
clc
sub
out
sub
cli
popa
add
lods
pop
pop
mov
push
lret
rcll
pop
push
setae
les
fwait
mov
and
mov
jb
push
sahf
aaa
sbb
popa
subb
lret
popa
sbb
sub
push
cwtl
cltd
pop
popf
mov
stos
bound
sbb
cmp
mov
add
jmp
xor
pop
or
movsb
sbb
push
jl
mov
lcall
dec
out
call
jp
mov
jno
jae
mov
jne
test
loop
in
out
push
es
bound
ja
jg
sub
jnp
int
aad
dec
mov
inc
test
or
icebp
cmp
movsl
lret
ja
mov
dec
inc
dec
dec
enter
mov
cmc
pop
ffreep
scas
addr16
cwtl
dec
pop
jmp
outsb
in
xor
sbb
lock
and
adc
cwtl
call
inc
and
ret
push
inc
dec
jnp
add
jle
xchg
and
adc
icebp
cmp
ret
jb
push
or
inc
mov
sub
push
das
sub
or
xchg
sbb
jle
mov
xchg
jl
ficomps
xchg
das
imul
das
scas
xor
or
cwtl
lods
imul
inc
lahf
mov
lcall
hlt
dec
cmpsl
fsubs
mov
jge
adcb
call
lods
or
test
xor
aad
dec
insl
push
pop
pop
loopne
ficoms
push
sysexit
add
cmp
mov
mov
cmp
dec
movsb
ds
leave
inc
inc
jbe
add
enter
daa
xchg
add
adc
push
jo
inc
pop
popa
push
call
jns
and
or
lahf
out
cltd
jns
insl
in
into
test
subl
out
sbb
sbb
js
lret
dec
stc
sahf
push
push
mov
sub
sbb
ds
xchg
adc
or
mov
ret
andb
add
dec
xchg
xor
and
jmp
sbb
shlb
push
push
dec
pop
ds
stos
push
xor
push
fdivl
sub
pop
sub
or
add
scas
jg
sbb
mov
into
mov
iret
inc
and
nop
push
push
sbb
cmp
ja
xor
mov
xchg
lret
mov
jns
push
mov
fwait
adc
mov
sahf
sbb
dec
cmc
xchg
inc
sti
xor
adc
outsl
jbe
push
scas
fdivrs
stc
pop
push
pcmpgtb
push
adc
out
ss
mov
xchg
or
cli
inc
fs
in
adc
xor
or
fisubl
gs
push
loopne
je
pop
push
xchg
adc
imul
in
cltd
add
adc
cmp
sbb
ja
adc
aaa
xchg
cmp
iret
adc
mov
or
popa
sti
cmp
test
pop
mov
mov
cmp
movsl
fnstcw
add
cs
dec
xchg
adc
adc
int3
mov
mov
pop
adc
sub
sub
por
shr
inc
fsubl
adc
ret
and
jae
pop
test
je
fistpl
ss
std
les
repz
popf
mov
cmp
xchg
fcomi
js
pop
gs
mov
lahf
and
push
out
das
push
sahf
push
mov
test
pop
and
adc
xlat
not
mov
insl
mov
jno
cmpsl
aad
adc
cli
das
push
cld
sbb
lret
sti
jae
mov
ret
push
mov
pop
pusha
jmp
sub
jae
aam
hlt
retw
ja
inc
es
mov
popa
jne
clc
imul
or
xor
ja
lods
sahf
xchg
mov
inc
inc
or
push
cli
adc
pslld
cltd
cmpsl
shrb
popf
jecxz
mov
pop
rclb
mov
dec
push
popa
das
test
xchg
roll
sbb
inc
mov
cmp
out
popf
ret
pop
dec
ljmp
mov
add
sbb
mov
push
inc
out
push
xchg
xchg
mov
push
adc
pop
or
loop
ljmp
out
or
out
aaa
mov
mov
fistpl
in
inc
clc
cmp
jns
adc
push
fbld
and
mov
sub
stos
xor
pop
shl
mov
xchg
mov
ljmp
std
aaa
addr16
mov
sub
pop
in
xchg
cmp
pop
cmpl
dec
out
pop
adc
xchg
cltd
inc
push
xlat
pop
xchg
stos
mov
pop
insb
ret
jnp
scas
mov
push
daa
push
fldl2t
ljmp
add
adc
roll
push
jae
aad
push
repnz
fwait
or
adc
mov
std
inc
add
imul
sahf
sbb
xchg
dec
imul
movsl
lds
jb
sarb
mov
leave
pop
lret
lcall
inc
mov
mov
sbb
mov
cmpsl
pusha
pusha
or
sbb
add
adc
pop
mov
fidivs
add
cmp
std
sub
movsb
leave
mov
sahf
jbe
or
enter
daa
aad
inc
cmp
jno
orb
push
daa
dec
mov
stos
push
lret
adc
and
adc
or
and
push
dec
shl
inc
aas
aaa
inc
cmpsb
mov
pop
mov
mov
pop
xchg
nop
push
bound
loope
cmc
dec
sub
cltd
mov
pushf
or
dec
sub
out
gs
and
add
inc
int3
roll
and
stos
das
in
ret
int
push
cmp
pop
mov
sahf
lret
cmpsb
fcompl
lods
test
aas
push
test
dec
inc
sbbb
jns
cmp
jnp
bound
mov
and
in
pop
in
out
loop
sbb
xor
sub
jbe
lretw
or
adc
mov
aaa
cmpsl
sbb
lock
cmc
pop
xchg
fwait
xor
scas
outsl
push
mov
push
adc
loop
int3
jno
adc
arpl
lods
outsb
ficomps
out
mov
xor
mov
popa
inc
or
mov
adc
out
loopne
inc
sbb
and
imul
sub
data16
sub
mov
and
jbe
test
mov
ja
sti
out
push
jnp
das
aad
jb
nop
ds
pop
inc
pushf
pop
push
fnstenv
cli
lds
repz
sub
lods
lea
push
fsubr
iret
mov
mov
pop
call
pushf
call
xor
cs
dec
xchg
lcall
rcll
dec
xchg
stc
sub
inc
jecxz
jg
cmp
imul
cwtl
orl
add
sub
cmp
pushf
mov
add
sti
das
in
or
movb
pop
sahf
cli
and
mov
mov
insl
mov
jle
aam
pop
mov
rcrl
cld
inc
filds
push
jp
mov
lcall
sbb
dec
adc
int
mov
xor
pop
ret
push
mov
sbb
clc
mov
lret
jle
cmpsl
popa
xor
mov
fs
xchg
out
cmpb
aad
bound
push
out
add
inc
dec
cltd
fsubrp
js
test
sti
mov
nop
inc
push
and
inc
dec
insl
inc
subb
div
sbb
sub
pop
repz
add
les
lods
pusha
jmp
xor
pop
or
ljmp
and
pop
adc
je
push
jne
aad
pop
inc
pop
aad
or
je
fwait
rorl
xchg
out
jne
push
fdivs
les
and
in
pop
pop
xchg
jae
aaa
mov
mov
or
mov
adc
mov
es
dec
adc
bound
pusha
cwtl
mov
xchg
ds
ljmp
or
sub
popf
jb
xchg
mov
push
push
jbe
sti
movsb
cmp
pop
mov
xor
sbb
arpl
adc
mov
ret
sbb
inc
lret
fs
pop
adcb
int3
push
or
lea
ficompl
int
sub
sbb
insb
sub
sbb
subb
fwait
scas
rcl
imul
aad
leave
rcll
aas
hlt
in
push
arpl
inc
mov
les
arpl
aaa
leavew
jge
repnz
smsw
mov
and
sub
pop
cmp
xor
psrlq
nop
test
cmp
or
inc
jbe
orb
push
xchg
daa
aam
or
jnp
ret
mov
stc
dec
and
push
scas
mov
out
pop
das
dec
lahf
sub
push
adc
xor
inc
into
fstl
pop
pushf
xchg
js
sub
push
jno
loope
int3
iret
sub
out
lock
jge
testb
rol
xor
popl
jmp
jle
cs
push
xor
in
test
jb
mov
mov
lret
loope
push
loopne
loop
enter
cmp
xor
mov
test
push
jg
mov
push
dec
aad
mov
dec
js
push
xor
cmp
in
sbb
divl
xchg
inc
shll
ss
push
inc
sahf
bound
mov
xor
dec
lea
hlt
mov
aam
aad
enter
push
xchg
jb
fwait
cltd
daa
cmpsb
mov
mov
and
jb
cmpsl
and
xchg
and
push
addr16
pop
sbb
add
xchg
loopne
and
xchg
mov
pop
imul
mov
adc
out
or
cmp
adc
sub
scas
into
in
loop
outsb
sti
xchg
fstl
sahf
sti
xchg
inc
rolb
dec
clc
dec
mov
sub
popl
shlb
mov
int3
xchg
out
xchg
cmp
inc
call
cmp
pop
jbe
xchg
adc
inc
fstpl
mov
mov
dec
inc
loope
xchg
aas
pusha
sub
dec
or
andb
cmp
push
std
adc
cwtl
cmp
cli
mov
outsl
out
mov
push
subl
lds
pop
stos
dec
enter
cmp
mov
adc
mov
push
sub
lcall
notb
add
dec
ret
cmpsl
sarl
mov
test
cmp
lret
mov
ret
lods
and
pop
cmp
arpl
jl
loopne
les
sahf
ret
xchg
ljmp
scas
adc
xchg
in
push
popa
dec
and
mov
and
leave
xchg
xor
lcall
aam
sbbb
xchg
shlb
add
test
mov
xchg
sbbl
or
cmp
stos
das
cmp
out
arpl
cmc
add
or
daa
dec
cwtl
xor
lret
mov
xor
pop
push
mov
pop
and
pop
lret
push
ja
push
fmuls
dec
and
ret
jae
rcrl
xor
loop
push
add
repz
bound
rcrb
jns
mov
sbb
fs
ret
mov
pop
icebp
sub
mov
jmp
push
mov
adc
mov
xchg
mov
dec
clc
or
pusha
xor
js
and
mov
jmp
iret
and
sbbl
out
test
popf
cltd
xchg
or
pop
push
push
shll
stos
outsb
jnp
and
in
cmp
or
dec
addr16
stos
popa
push
movsb
imul
mov
iret
cmpsl
mov
into
pop
ret
pop
cmp
in
xor
push
push
js
bound
or
mov
xor
and
sbb
adc
cmp
sub
int
mov
xchg
lret
dec
std
push
hlt
xor
dec
inc
mov
mov
mov
or
inc
add
pop
mov
pop
in
push
jecxz
cld
xchg
xchg
push
enter
and
cmp
hlt
movsb
fbstp
sub
outsl
cmp
enter
daa
shll
dec
cmp
push
and
push
xchg
dec
xchg
sbb
push
xchg
sub
cli
pop
dec
lahf
dec
adc
out
test
loop
xchg
inc
pop
enter
push
test
ret
mov
jns
or
add
xor
shrl
sbb
cmp
or
adc
popf
or
fbstp
sbb
mov
add
pop
fdivs
dec
sbb
dec
pop
and
pop
in
sub
enter
rcll
push
aaa
lea
sub
testb
push
addb
test
jg
xchg
mov
mov
sub
jecxz
cwtl
and
leave
push
pop
out
or
test
add
hlt
cmc
daa
lret
pop
sarl
add
sbb
in
rcrb
jmp
mov
outsl
adc
loop
mov
stc
jg
fs
adc
pop
pushl
jmp
es
shrl
cli
fimull
test
push
movsl
cmp
inc
add
into
imul
push
loopne
push
bound
push
and
sti
jae
imul
mov
shll
js
sbb
sub
hlt
inc
and
sub
inc
mov
dec
sub
sti
inc
jno
inc
push
mov
nop
hlt
bound
inc
ret
dec
push
fldt
mov
fwait
cmp
xchg
pop
jbe
lea
xchg
call
mov
repnz
sub
mov
pop
cs
push
incb
mov
inc
cld
jmp
aas
incl
jb
cwtl
out
dec
test
xor
outsb
jecxz
inc
in
aas
or
std
mov
inc
sub
ficomps
jnp
les
fildl
and
lock
insb
out
das
stos
push
scas
mov
int
add
and
xor
push
push
popf
dec
mov
dec
cltd
mov
jg
clc
cld
fwait
daa
daa
lret
dec
fsts
mov
dec
pop
mov
pop
pusha
rorb
xlat
sub
push
cmp
push
cmp
xchg
and
sub
pop
mov
lods
or
mov
stos
jae
xchg
jl
jo
mov
shld
add
scas
xchg
cltd
dec
adc
mov
mov
mov
cmp
pop
xchg
xor
shll
loope
dec
loopne
stos
push
and
out
movb
jecxz
xor
xor
mov
xor
inc
push
mov
pusha
cwtl
out
sbbl
xchg
ja
outsb
mov
andb
jnp
pop
cld
data16
das
addl
pop
outsl
jne
inc
mov
adcb
jns
das
int
cmpsl
dec
cs
adc
mov
popf
sub
pushf
cmp
xor
hlt
mov
mov
mov
mov
add
in
dec
fildl
jmp
pusha
into
ja
filds
mov
jmp
lcall
out
leave
lock
shlb
inc
push
sub
sarl
and
outsb
insb
add
jnp
inc
sbb
push
scas
xchg
adc
bound
inc
iret
push
sahf
push
dec
in
pop
cli
gs
loope
cmp
add
push
cmp
add
sbbl
fiaddl
sub
imul
mov
mov
pop
rorb
xor
into
jo
repnz
ja
mov
cwtl
adc
mov
scas
jge
xchg
sbbl
in
mov
add
add
pop
sbb
mov
lahf
jmp
xor
lds
scas
lcall
cmp
outsl
jle
push
cmp
jne
jbe
rolb
in
dec
xchg
lock
daa
rol
sti
cmp
daa
mov
imul
dec
add
dec
movsl
in
sbb
lahf
push
xchg
push
mov
in
push
lods
lds
sub
ljmp
pop
inc
xchg
push
lods
push
loope
out
sub
push
xchg
cmp
cmp
adc
js
aaa
xlat
daa
xor
lods
sbb
add
add
pop
pusha
xor
hlt
outsb
or
int
cmpb
cmp
lcall
xchg
push
xchg
inc
sub
sarl
mov
into
xorb
jg
jo
mov
mov
mov
adc
and
push
fstpt
arpl
cmp
lret
xchg
rcl
cmpsb
mov
add
sbb
push
sahf
test
inc
cmc
mov
jb
jl
sub
loop
adc
fnstenv
adc
pop
aas
ss
cli
lods
and
sahf
mov
mov
mov
aad
or
sbb
cmp
in
or
arpl
dec
add
gs
loopne
push
cmpsl
pop
shr
jecxz
into
rorb
imul
fsubl
add
gs
pushw
ss
arpl
cmp
xor
ret
mov
mov
enter
and
lock
iret
aam
dec
mov
movsl
inc
aad
pop
fsts
orb
sbb
aam
push
xchg
jle
cmp
push
pop
fmull
adc
push
jmp
sbb
jno
ss
clc
pop
xchg
inc
pop
ja
aas
sahf
pop
jb
adc
xchg
dec
sti
xor
jecxz
mov
inc
xchg
push
std
pusha
sbb
cwtl
mov
mov
ret
push
jo
rcll
push
dec
out
rorl
icebp
lock
orb
das
mov
add
test
cmpsb
shrl
cwtl
insl
cmp
gs
cmpsl
rcrl
arpl
push
mov
cld
or
lret
mov
fmull
jno
movsb
mov
jp
inc
shlb
jo
sub
aaa
fadd
mov
mov
inc
dec
clc
push
movsb
jno
arpl
pop
ljmp
or
int
mov
ret
lock
data16
movd
stos
add
xor
cltd
sbbl
test
fwait
cld
mov
mov
pop
dec
mov
aad
xchg
ficomps
jmp
pop
mov
stos
or
pop
mov
add
xchg
lock
iret
xor
jnp
xor
jnp
mov
arpl
inc
pop
inc
adc
ja
inc
jns
scas
push
xor
dec
lods
fwait
pop
inc
jmp
jp
fdivs
repnz
out
popa
pop
jmp
xor
sub
in
shrl
ja
mov
push
pushf
sub
xchg
mov
enter
add
jno
dec
mov
and
stc
xchg
in
xchg
fsubl
or
popa
sbb
mov
xchg
gs
in
ja
stos
out
sbbb
daa
pop
mov
rcll
stos
push
inc
ret
mov
std
jnp
push
jle
enter
out
cmp
iret
test
ret
aam
xor
mov
in
imul
shlb
and
or
out
or
cmp
fidivl
in
nop
sbb
in
imul
insl
scas
and
mov
jo
shlb
mov
cmp
leave
rolb
out
arpl
jb
les
into
sbb
jae
aaa
mov
ss
add
xor
aam
dec
jae
fiadds
dec
xor
and
xor
dec
push
stos
cmp
xchg
push
cmc
repz
sub
movsl
push
in
xor
enter
daa
rcl
add
adc
or
inc
dec
sarl
out
dec
outsl
roll
jmp
hlt
mov
mov
mov
dec
push
mov
insl
test
js
stos
inc
jnp
fsubl
adc
pop
orl
loope
sub
sub
out
cmp
mov
adc
push
testl
addb
inc
sbb
pop
pop
add
mov
xor
adc
into
lock
aad
add
mov
cwtl
dec
lcall
pop
fmul
lcall
pop
mov
dec
orb
xor
mov
push
and
rcrl
jle
mov
divl
add
daa
rclb
insb
push
rorb
outsb
aam
dec
dec
out
cmc
ja
sub
xlat
cmp
outsl
sarl
dec
stc
in
daa
in
clc
sti
push
outsl
sbb
rorl
mov
cli
inc
push
jle
sbb
cld
cmp
outsb
pop
or
out
shlb
jmp
pop
icebp
lea
imul
imul
in
out
sbb
sahf
data16
jb
test
mov
and
xchg
mov
sub
sbb
nop
stos
pop
loop
adc
shrb
icebp
sub
cmp
xchg
filds
iret
lahf
test
mov
outsb
adc
push
and
fistpl
xchg
pop
pop
jmp
lcall
jg
xchg
inc
xor
call
jb
push
sbb
aaa
xchg
add
clc
pop
xrelease
std
pop
dec
sbb
addb
xor
and
pop
xchg
mov
mov
test
das
imul
jnp
cmp
mov
sti
lahf
dec
negb
jl
insl
and
das
dec
mov
and
lods
addr16
icebp
sub
mov
test
js
popa
mov
cltd
push
insl
shl
std
sub
pop
sub
outsb
ficoms
clc
mov
ljmp
nop
lods
fdivrp
jae
das
sbb
lock
or
sahf
bswap
jae
add
movl
int
das
push
xor
loopne
or
xor
pushf
aam
rcll
mov
subb
lahf
cmp
add
jns
incl
push
xor
js
jo
pop
xor
or
mov
data16
rorl
pop
cld
inc
lcall
add
inc
mov
aam
fwait
leave
lahf
push
sbb
add
mov
ss
out
inc
movsl
sbb
jns
int3
add
xchg
scas
loopne
mov
xorb
mov
mov
xor
int3
mov
repnz
loop
cli
dec
mov
mov
xlat
filds
cmp
sub
addl
out
lods
dec
popf
push
into
mov
adc
stos
cmp
jae
dec
insb
fincstp
je
sti
jnp
jle
inc
iret
push
cmp
pop
adc
and
xchg
jno
mov
insb
push
inc
test
rcll
sarl
adcl
push
js
dec
push
aas
xchg
xchg
jns
ljmp
scas
test
vmovaps
mov
mov
into
leave
lods
xchg
clc
hlt
adc
js
pop
mov
sbb
dec
mov
or
xlat
and
into
ret
jns
push
fsubp
outsb
add
jnp
dec
scas
pop
enter
mov
sub
and
jle
pop
inc
mov
mov
jmp
shrb
cmp
loop
sbb
push
jl
stos
or
fidivrs
movsb
movsl
sti
shrl
test
imul
sti
test
inc
or
or
jg
das
adc
pop
cmp
fstpt
fdivrl
pop
ret
push
mov
loope
nop
cs
lea
pop
lret
cmpb
shrb
or
cld
test
test
push
pop
ss
pop
cmp
mov
xchg
call
fisubrs
cmp
pop
cmp
lcall
jnp
je
adc
hlt
mov
xchg
cmpsb
xchg
and
xor
mov
mov
insb
mov
cs
and
icebp
cmp
fsts
xor
sbb
push
roll
stc
mov
push
sub
ds
test
xor
loop
data16
movsb
sbb
xorl
xlat
cs
lods
icebp
mov
lods
out
repnz
jae
shll
out
mov
jle
sbb
int3
into
adc
sbb
pop
movsl
loopne
imul
adc
push
adc
imul
dec
pop
add
popa
data16
and
mov
push
adc
sub
xchg
cmp
mov
sti
push
les
sub
push
aad
sub
out
je
mov
sti
jb
flds
sub
repz
stos
xchg
mov
jle
call
aaa
jns
pop
inc
adc
js
aas
in
jb
dec
ficoms
inc
push
int3
push
aas
fsubl
dec
jmp
mov
mov
std
scas
pop
stc
cwtl
sub
lahf
mov
inc
mov
orl
mov
mov
fsubp
lock
cmpsb
mov
repnz
dec
mov
xchg
insl
or
dec
dec
scas
push
stos
cmpsl
iret
int
mov
add
jl
sbb
in
xchg
and
mov
movsb
sbb
sbb
add
enter
mov
rcll
es
mov
addr16
cmp
loope
or
popa
movsb
xor
fisubrs
push
mov
push
cmp
push
sbb
xor
sub
or
and
lret
pop
roll
sub
dec
jo
or
ja
jns
dec
inc
jg
cmp
xor
out
fcmovbe
add
xor
jmp
popa
test
out
push
xor
jmp
mov
mov
mov
adc
jne
dec
xchg
push
or
dec
loope
or
jle
fwait
mov
fwait
add
je
mov
mov
out
pop
repz
push
out
jns
adc
dec
stos
hlt
xchg
decb
loope
gs
sub
lea
addr16
rol
lea
sbb
push
pusha
dec
test
jo
lahf
imul
lahf
gs
pop
sbb
jmp
sti
pop
xor
mov
hlt
popf
xor
inc
mov
stos
cmp
cmpsl
and
jl
jnp
mov
mov
adc
enter
pop
xor
test
negl
roll
jae
pop
jns
test
or
hlt
push
mov
testl
xchg
fucom
mov
imul
lcall
inc
movsl
rcrb
mov
fbld
sbb
pop
jg
arpl
lea
cmpb
xchg
push
or
sahf
fmul
mov
mov
jp
je
adc
stos
pop
scas
aaa
pop
pop
and
jo
dec
int3
sub
arpl
jbe
lods
cltd
in
out
cmp
stos
rcrb
cmp
data16
or
jl
sahf
mov
dec
jp
push
sbb
sub
and
sub
push
xor
push
push
lods
mov
cmpsb
mov
leave
pop
pop
and
cmp
pop
add
push
dec
jns
scas
sbb
cmp
imul
rorb
xor
outsl
subb
adc
std
add
xor
mov
sub
outsl
and
xchg
or
and
sub
mov
insl
test
fiadds
repz
xchg
or
mov
cmp
mov
ret
push
imul
int3
rcrb
div
push
jns
or
dec
mov
add
sahf
xchg
xor
cmc
add
aas
movsb
outsl
pop
jge
mov
sar
pop
mov
fs
cmp
adc
shlb
cmc
pop
ljmp
or
movsl
out
lock
cli
cmpsb
int3
mov
cmp
in
aam
mov
into
cmc
mov
xchg
loopne
mov
pop
das
fcmovu
adc
enter
clc
adc
addl
sbb
adc
pushf
xlat
lock
les
hlt
rcrl
mov
stc
in
cmc
sti
add
decb
iret
aad
jle
nop
pusha
mov
dec
inc
push
inc
rcr
mov
jle
repz
sbbb
loope
lea
movsl
inc
mov
inc
pop
cmc
mov
pushf
ljmp
cs
inc
push
int
jb
fimuls
je
fiaddl
dec
lock
std
push
push
dec
cwtl
jecxz
pusha
mov
addl
and
test
pop
ficoml
push
mov
fwait
pop
lock
mov
test
xor
cltd
sbb
mulb
jp
dec
test
lods
scas
mov
fisttpl
cld
inc
test
lret
add
aas
mov
cmc
xchg
and
mov
mov
xlat
in
lock
insl
dec
aam
fwait
mov
es
mov
clc
add
arpl
xor
xchg
popa
mov
repnz
mov
ss
lock
cwtl
and
not
or
mov
add
cld
sub
ljmp
push
mov
push
dec
xlat
dec
gs
xchg
inc
xchg
xlat
xchg
sbb
bound
sarl
dec
lock
fisubrl
out
push
or
add
mov
inc
xor
decb
or
inc
xor
pop
stc
mov
insb
hlt
ret
mov
jb
loopne
push
aad
dec
xchg
inc
out
scas
or
cld
cltd
fwait
jmp
sti
push
arpl
and
dec
pop
mov
dec
cmp
incb
std
dec
int
aaa
cli
fsub
rcrl
xchg
dec
jg
mov
ss
or
orl
mov
shlb
addr16
in
inc
cmpsb
pusha
cmp
hlt
fistpll
das
bnd
mov
mov
popf
pop
jmp
xor
movsb
push
nop
cli
mov
and
aam
jnp
ret
dec
jle
sbb
push
lret
adc
adcb
xchg
fs
pop
add
or
outsl
push
inc
xchg
mov
push
xchg
daa
push
jbe
stos
fimull
insb
xchg
xor
les
rclb
imul
mov
shlb
mov
xor
sbb
cmpsl
leave
jno
sahf
lcall
int
les
call
adc
loopne
imul
insl
dec
add
mov
movsb
aam
pop
xlat
popa
sbb
sub
in
xor
xor
scas
push
push
and
fmul
cmp
into
sbb
out
jbe
fldl
enter
daa
into
sub
lret
push
sarl
xchg
dec
mov
sbb
movsl
or
sub
add
lahf
out
les
cmp
test
fldenv
mov
xor
gs
js
sub
pop
inc
adc
push
xchg
xchg
loope
lret
ljmp
ds
cmp
push
shl
jno
mov
inc
mov
les
add
stos
popa
xor
lods
pop
xor
int
loopne
sub
ret
and
inc
fmul
cmpsb
sub
xchg
mov
test
adc
sbb
cmc
jg
push
data16
xchg
fisttps
pop
cltd
in
and
fistpll
outsb
bound
cmp
dec
dec
push
imull
ds
shll
clc
mov
mov
sahf
xor
mov
int3
fwait
shlb
call
scas
pop
loop
xor
inc
fs
push
mov
cmp
mov
jb
cli
fnstcw
das
cmp
ljmp
fsubrs
sub
loopne
or
adc
dec
mov
mov
insb
adc
or
add
data16
pop
sbb
dec
lock
mov
sub
jb
sub
inc
in
fs
sti
mov
fsin
jo
pop
aad
xor
nop
cmp
xor
sub
and
fyl2x
mov
les
and
rclb
add
add
sub
je
xor
mov
adc
mov
pushf
xchg
mov
jmp
mov
cs
push
arpl
iret
dec
inc
subl
sbb
sbb
pop
icebp
aad
xlat
pop
loopne
dec
dec
scas
jecxz
push
inc
dec
dec
lret
std
cld
xor
sahf
in
cmp
mov
sub
fldt
ret
scas
adc
fcompp
mov
mov
pusha
in
and
jno
shr
shl
call
std
dec
dec
movsb
cltd
mov
inc
outsb
icebp
mov
sar
jb
push
lret
jae
xor
out
mov
negb
shrb
xchg
sub
mov
xor
testl
out
xchg
pop
popf
add
mov
popl
lods
pop
sub
cmp
add
xchg
fbstp
push
rclb
loopne
ljmp
cltd
pop
movsb
lea
push
adcl
lcall
push
cmc
xchg
rcrl
mov
insb
rcll
aaa
sub
out
mov
mov
xchg
ret
pop
add
sbb
loope
push
xor
jbe
aad
lods
xor
test
mov
outsl
lods
jae
fnstsw
ja
mov
rolb
adc
cmc
dec
nop
fwait
sbb
sbbl
mov
push
mov
neg
out
fstpl
popf
jns
xchg
in
jecxz
xchg
pushf
mov
mov
mov
dec
or
lds
jns
mov
push
fwait
mov
das
aaa
pushf
dec
dec
dec
into
in
sahf
mov
mov
aaa
jmp
xchg
outsl
xor
mov
xor
mov
iret
mov
stos
and
and
add
jnp
fdivrs
jne
push
adc
adc
inc
jbe
stos
push
mov
inc
sbb
mov
or
ljmp
fiaddl
mov
xchg
mov
sbb
jae
imul
inc
lds
push
rclb
and
test
vmovlpd
gs
repnz
arpl
inc
pusha
jge
ss
dec
fidivs
lahf
push
mov
xchg
xchg
xor
int3
fwait
rcrb
in
fmulp
jo
repz
scas
cmc
shlb
xchg
shrb
xchg
mov
and
push
nop
lods
in
jbe
xorl
hlt
ror
cmpsb
sbb
int
pop
cmp
clc
cmp
push
mov
or
gs
sub
push
jecxz
pop
movsl
adc
and
ficoml
cmove
movsb
jmp
sub
lods
jo
js
mov
pop
jg
mov
shl
fstpl
insb
cmp
outsb
ds
in
adc
mov
add
orb
sbb
sub
dec
xor
ss
fiaddl
subb
dec
xchg
pop
mov
cwtl
lcall
leave
fdivl
sbb
shll
outsb
out
das
test
int
notl
xor
fidivs
nop
cwtl
sbb
stos
xlat
push
jno
add
or
or
repz
xchg
ror
mov
push
insl
sbb
mov
call
xor
push
outsl
dec
pop
mov
stc
leave
lret
and
ficoms
les
ss
pusha
lods
cmpsb
pop
and
add
test
lods
js
cli
or
jb
je
test
mov
jl
mov
push
fchs
mov
ss
adc
lods
sahf
imul
ficoms
data16
xor
fstpt
mov
icebp
sub
lock
inc
add
iret
inc
sub
pop
sti
and
xchg
mov
adcb
ret
xor
cmc
fldcw
and
repz
call
imul
cmpsl
ljmp
pop
mov
aaa
push
dec
pushf
inc
xchg
leave
jmp
inc
loop
pusha
jo
inc
fwait
data16
pop
cmpl
scas
cmp
dec
dec
mov
je
push
push
push
sbb
std
mov
lret
out
jle
mov
dec
int3
lods
dec
test
rcr
popf
out
pop
and
mov
inc
xchg
lock
xchg
pop
in
and
mov
shll
test
jle
shlb
cwtl
cmp
jns
sbb
mov
scas
cld
popf
loopne
lret
loop
lret
jb
and
jmp
lret
cwtl
rolb
insb
sub
sub
inc
es
in
ror
clc
js
mov
ljmp
lods
mov
xchg
mov
es
push
lods
jb
cmovns
add
jbe
xchg
loopne
test
in
mov
cmpsl
inc
push
cmp
test
outsl
movsl
test
movsb
push
xchg
inc
pop
sbb
fst
insb
popf
pop
pop
dec
clc
add
sbb
add
test
in
orb
xor
icebp
xor
test
mov
jb
mov
rcrb
into
and
inc
adc
jl
loopne
stos
fwait
dec
xchg
push
test
and
mov
mov
out
mov
mov
in
std
inc
xchg
jmp
in
mov
mov
mov
jle
std
addr16
jmp
mov
imul
mov
ljmp
in
pop
sbb
adc
xchg
lock
mov
ja
addl
out
loop
popf
stos
dec
sti
mov
push
cmpsl
inc
stos
xchg
or
insb
test
push
jnp
sbb
push
pop
jg
adc
out
ret
push
inc
sub
and
jae
mov
push
int
mov
push
je
jp
mov
cmp
xchg
jmp
hlt
scas
adc
add
mov
fsubrs
test
cmp
aaa
jbe
ror
dec
jge
imul
or
lret
jp
fistps
sub
jno
jle
leave
imul
out
mov
and
fnsave
jae
push
movsb
lods
pop
ja
fbstp
cwtl
in
mov
mov
daa
int3
sti
cmp
movsl
in
jno
mov
jl
jae
dec
lcall
movsl
pop
ret
aaa
fdiv
lahf
and
and
pop
xor
outsl
xchg
cmpsb
cmp
outsb
js
int
pop
mov
cmp
pop
sub
push
cmp
sub
ds
sub
adc
lcall
andb
sbb
mov
push
xor
test
popf
dec
and
fsub
sub
out
inc
inc
ficoml
mov
mov
outsb
dec
mov
loopne
aas
adcb
idivb
jmp
mov
mov
push
pop
and
mov
sub
lds
imull
adc
and
push
negb
sahf
jp
sub
pop
xor
arpl
stc
orb
scas
mov
adc
lods
lea
adc
stos
add
aas
cmp
xor
mov
pusha
add
xchg
sahf
aad
cmp
imul
add
rolb
sahf
inc
push
adc
sbb
mov
and
sbb
xlat
lods
in
sub
sbb
cmp
ljmp
test
aad
lret
icebp
and
lock
mov
les
outsl
or
inc
inc
rcll
rcr
fld1
and
fadd
xor
jo
push
sbb
adc
jae
jmp
xchg
shrl
ret
jle
inc
and
inc
mov
pop
adc
add
je
xor
inc
shl
push
pusha
scas
std
dec
cwtl
xor
cmp
cmp
dec
jo
dec
fcmovne
xchg
inc
pop
ret
mov
xchg
pop
fsubrs
les
mov
and
push
outsb
roll
xchg
lret
insl
cmpsl
scas
stos
dec
lcall
mov
pusha
xor
lret
push
cmp
mov
adc
mov
xor
xor
adc
mov
aam
hlt
mov
or
xor
clc
mov
jge
fisttpll
mov
popa
add
lods
cmc
adc
mov
lahf
mov
xchg
insl
cmp
push
mov
cs
mov
cltd
int
insb
test
mov
mov
cmp
push
lcall
dec
or
imul
mov
mov
ret
mov
pop
testb
jnp
mov
movsb
or
add
test
or
scas
test
mov
mov
jne
int
adc
inc
pop
mov
or
dec
pusha
pushf
repnz
stos
aas
push
or
insl
cwtl
fwait
js
icebp
push
dec
out
icebp
jne
daa
aad
lret
test
out
fwait
push
das
bound
mov
xchg
cmp
sub
add
das
or
pusha
addr16
pop
jp
sub
mov
loope
mov
or
test
cmp
push
stos
fistps
mov
jmp
daa
shll
sarl
popf
popf
shrl
mov
dec
inc
mov
and
lea
lock
jnp
insb
je
enter
lahf
cs
adc
jl
lahf
ds
shl
xchg
pop
jnp
xchg
inc
cs
call
push
nop
adc
xchg
inc
repz
cwtl
xchg
cmp
sbb
xor
scas
je
lret
lds
ja
movb
mov
sub
xchg
leave
add
hlt
mov
sahf
inc
int
jge
cmpb
jb
pop
aaa
sbb
clc
addb
and
int3
movsl
insl
pop
fs
ficoms
lods
jo
mov
mov
jmp
movsb
aaa
popf
ljmp
sub
enter
daa
lret
sub
cmp
or
dec
xor
orb
lods
push
test
mov
pop
lahf
inc
pop
mov
push
xor
cmp
inc
aad
jne
mov
xor
js
jnp
pop
std
ds
push
mov
or
sub
cmp
or
xor
mov
jne
rorb
test
ljmp
pop
xlat
pusha
mov
int
shrb
mov
sub
out
push
fmul
add
lahf
mov
jns
addr16
cltd
subb
or
mov
and
or
push
ja
fstpt
xorb
lret
pusha
shl
ret
sbb
imul
stc
xor
outsl
or
scas
loop
icebp
stc
aaa
je
cmp
es
lods
je
or
stos
adc
jb
insb
xor
jmp
cmp
fsts
or
inc
into
cmpl
loopne
mov
pop
stos
mov
imul
push
loope
call
sbb
add
mov
rcr
mov
movsl
out
test
fnstcw
xchg
aad
stos
mov
dec
mov
xchg
fsts
adc
xchg
jno
dec
lea
xor
call
mov
rcrl
pop
jmp
pushf
xchg
daa
out
jmp
lods
cs
roll
je
aas
notl
inc
dec
cmp
pop
je
mov
sbb
push
sbb
std
icebp
and
mov
mov
testb
int3
add
inc
sahf
mov
jp
lock
or
mov
dec
xchg
jge
adc
inc
jo
mov
xchg
insl
mov
jno
xchg
push
xchg
cmpsl
lret
mov
aaa
ret
or
repz
mov
and
pop
jnp
pop
push
mov
mov
jae
push
aam
setae
pushf
imul
cmpb
fisttpll
jb
clc
out
dec
loopne
sbb
push
ljmp
cmc
lods
pusha
enter
cli
ret
test
push
arpl
pop
inc
test
cltd
add
popa
test
orb
adc
push
ret
dec
jae
xor
xchg
mov
cmpsb
rcrl
call
cmp
fimuls
add
mov
dec
xor
aam
cmp
fnstenv
cmp
mov
js
xlat
mov
pop
fwait
push
ja
jl
dec
push
jo
inc
inc
jno
or
cmp
fwait
cmpsl
cld
mov
jne
mov
mov
push
out
jp
inc
bound
xchg
jns
add
das
xchg
mov
call
imul
test
scas
mov
jge
mov
jl
pushf
dec
repz
xchg
in
add
cmp
xchg
jl
inc
jmp
repnz
inc
xor
scas
mov
mov
stos
jns
shll
add
insb
pop
jle
jnp
andb
cmp
adc
sub
ret
pop
mov
mov
jae
inc
adc
or
pop
popa
dec
inc
jb
cmp
sbb
xchg
nop
cmp
in
push
jle
jb
fisubrl
in
mov
shl
xor
jle
enter
insb
hlt
sarl
mulb
jg
inc
fnstcw
sarl
jp
sbb
cmp
or
inc
add
xchg
int3
push
call
jns
mov
xor
popf
jbe
scas
xchg
fnstsw
cmp
mov
ret
push
jge
insl
jbe
sub
xchg
mov
mov
jns
lret
fisubl
jl
iret
cs
js
aaa
push
mov
movsl
and
das
lahf
bound
push
push
ret
outsb
test
add
sti
sub
and
xchg
js
mov
push
push
mov
es
rcrl
ds
sbb
adc
push
sub
sti
orb
mov
xor
cmp
sub
pop
pop
pop
xor
pop
lcall
cmp
sub
mov
orb
jg
frstor
mov
cmc
push
mov
pop
sbb
mov
dec
cmp
cmp
stc
lret
adc
lea
sub
mov
sbb
cmc
call
and
outsl
ljmp
stc
out
ds
pop
adc
insl
lods
pop
call
icebp
or
cli
movsl
or
stc
cwtl
jno
mov
lret
leave
ror
adc
inc
leave
mov
pop
lret
adc
and
mov
adc
jp
add
mov
sbb
cmp
jg
xor
sti
mov
adc
cmpsl
cld
out
call
nop
cmpsl
xor
dec
scas
ret
je
insl
ja
fxch
mov
les
or
repz
sub
lea
test
xor
adc
test
mov
inc
xor
cmpsb
aas
xchg
aam
jb
inc
cmp
mov
inc
je
addr16
popa
pop
stc
pop
inc
out
std
cwtl
lea
mov
jbe
mov
into
adcl
stc
jae
sub
xchg
pop
or
xchg
lock
xor
adcb
pop
push
ss
sbbb
cli
push
div
xchg
add
dec
nop
or
add
icebp
push
jp
cld
push
jmp
lret
das
popa
mov
jne
test
call
mov
sub
loopne
ljmp
add
clc
sub
xchg
xchg
pop
xchg
mov
outsl
out
popa
cs
dec
lods
lret
dec
adc
clc
mov
xchg
xchg
sti
xchg
sbb
ds
popf
pcmpgtd
insl
add
insl
out
test
int3
mov
jbe
xchg
push
test
jb
push
adc
inc
rcrb
xchg
pop
shll
sbb
stc
stos
test
sbb
inc
inc
popa
add
in
lcall
inc
xor
fistps
lods
adc
roll
sbb
pop
sbb
sub
dec
inc
clc
and
es
push
xchg
dec
mov
int3
pop
outsb
mov
arpl
out
pop
sbb
jns
and
in
inc
mov
fdivs
in
mov
addr16
sub
outsl
mov
addr16
clc
jp
scas
fwait
mov
cmp
pop
mov
xor
dec
fadds
inc
outsl
xor
pop
sahf
repnz
dec
cltd
imul
xchg
gs
mov
cli
inc
out
mov
mov
lret
pop
cmp
adc
out
insb
cli
int
les
jle
bound
sub
inc
loop
pop
inc
out
ret
push
pop
jmp
inc
xchg
jae
jae
push
push
stos
xor
push
xchg
out
out
int
sub
out
cld
sbb
inc
xor
popa
and
scas
cmp
test
cld
pop
xchg
rorl
inc
hlt
push
sub
jmp
and
in
sbb
pusha
bound
fwait
push
push
or
incl
fistpll
ror
cmp
leave
pop
ret
ficomps
push
xor
clc
je
scas
jno
xor
cmp
and
push
int3
insl
cmp
mov
test
inc
xchg
daa
leave
push
dec
cmp
sti
jl
mov
scas
push
outsl
fildl
or
jl
and
sbb
push
rclb
repz
pop
dec
test
js
xchg
xchg
pop
jnp
aad
test
push
push
sub
inc
sarl
rolb
into
ja,pt
les
sub
push
xchg
or
sbbb
loope
cmpsl
xor
xor
adc
or
das
inc
pop
mov
pop
lcall
jbe
and
sub
js
test
les
lods
fdivrl
inc
ret
lret
mov
mov
popa
jns
or
sub
fdiv
xor
lret
shll
mov
push
in
sbb
pop
inc
sahf
arpl
xor
scas
mov
mov
leave
mov
loop
leave
lods
movsl
fs
shr
adc
outsb
xorl
decl
mov
repnz
test
in
fdivr
adc
shrb
cmp
inc
and
sahf
gs
fs
loopne
lock
push
mov
cmp
fisubrs
pop
mov
and
or
sbb
jbe
test
push
subb
lcall
jnp
out
sti
sbb
pop
xchg
clc
aad
lcall
or
xorl
add
inc
les
js
mov
xchg
xchg
negl
mov
mov
sub
adc
or
jmp
sub
in
popa
xchg
inc
mov
push
inc
or
mov
xor
pop
xchg
dec
sub
je
jg
jecxz
or
pop
in
std
aas
faddp
cwtl
inc
or
jp
rorb
mov
dec
xor
sbb
daa
sbbb
push
addl
das
popa
mov
mov
repz
and
adc
inc
divb
inc
push
insl
pop
call
into
cmpsl
enter
inc
leave
or
in
sbb
dec
inc
or
sahf
cltd
dec
mov
cmp
push
push
pop
xchg
mov
rorb
lods
pop
aam
inc
loop
mov
mov
cmp
lcall
popa
inc
icebp
aas
lods
ss
sub
or
xchg
inc
aam
push
sbb
stos
add
cmp
inc
xchg
jnp
dec
sbb
dec
inc
gs
test
mov
xchg
dec
stos
sbb
loop
enter
testl
out
movsb
sub
add
icebp
imul
sub
xor
inc
jmp
adc
mov
jle
xchg
mov
aam
xorb
xchg
dec
cmp
inc
jo
sti
or
push
cmp
xor
xchg
mov
jo
out
cmp
jns
loop
in
mov
xchg
daa
mov
adc
or
jg
sub
add
std
mov
mov
pop
fisubs
in
aaa
arpl
mov
fistpll
push
xchg
and
add
jle
ficoml
cmpb
inc
pop
cmpsl
popf
inc
jne
push
or
push
stos
pop
sbb
sub
xor
jnp
stc
and
xor
push
je
cmp
lock
iret
mov
cmp
fiaddl
and
in
push
fldenv
push
push
jo
arpl
sbbb
inc
or
imul
scas
popf
xchg
inc
cli
add
push
add
adc
and
ret
arpl
arpl
xlat
inc
inc
fistpll
jge
sbb
sbb
ljmp
jbe
xor
es
std
fwait
mov
push
xchg
scas
push
scas
fisubs
je
pushf
cmp
movsb
fcomps
push
sbb
fldln2
dec
cltd
outsb
enter
daa
enter
fistps
jno
in
jl
jnp
dec
push
pop
add
push
movsl
xor
andb
xchg
rcrb
ds
test
fwait
inc
sbb
fs
inc
movsl
and
js
mov
mov
add
sub
mov
jg
mov
adc
push
andl
scas
out
sbb
pop
lds
jnp
xor
testb
movsb
cmp
pop
xor
sub
hlt
pcmpeqb
int3
sbb
insb
lret
pop
outsl
test
arpl
sarl
dec
loopne
mov
add
adc
sbb
cmpsb
and
insb
push
and
cmp
mov
imull
xchg
lcall
stos
add
pop
sahf
sahf
push
pop
call
xor
aas
mov
loop
cmpb
shlb
dec
sbb
lret
lods
sub
rorl
push
sar
or
pop
cmp
cmp
cmpsl
into
sub
loopne
rolb
jecxz
adc
cmp
add
cld
pop
data16
sbb
mov
or
test
pop
xchg
mov
out
aam
lret
incb
repz
cmpsl
sub
insb
fadds
xchg
ret
push
fnstcw
sahf
add
push
repz
xchg
mov
and
das
pop
or
bound
ljmp
jmp
lea
dec
inc
test
inc
and
pop
jb
test
je
in
jecxz,pn
clc
xchg
pusha
clc
or
cwtl
add
inc
mov
test
mov
push
inc
or
fisttpl
xorl
inc
es
cmp
scas
cmp
lcall
idivb
test
dec
xchg
cmpsl
xor
icebp
mov
imul
or
mov
mov
repnz
outsb
sub
adc
push
mov
dec
or
fldl
stos
mov
ljmp
xor
mov
sub
fwait
push
hlt
lods
mov
dec
add
test
shlb
or
or
fmull
test
call
push
sbb
mulb
pop
outsw
pop
mov
lods
fsubr
pop
push
xor
add
mov
fwait
or
inc
je
or
cmpsl
ja
addl
cld
ja
jecxz
dec
sub
aam
pop
fiadds
or
popf
push
fwait
xor
lcall
sbb
out
pop
repnz
push
jns
inc
in
mov
mov
mov
je
sub
gs
addr16
xor
jp
add
mov
leave
dec
dec
dec
pushf
fdivrs
in
call
push
fists
bound
xchg
push
mov
or
xchg
fstpl
into
fidivrs
stos
shlb
and
cs
pushf
outsl
inc
jnp
pop
fnstsw
nop
notl
shll
iret
sbb
ret
movsl
pop
push
aas
mov
pop
sbbb
call
adc
or
int3
hlt
les
inc
lcall
push
test
in
mov
repnz
add
lds
add
ja
out
fdivr
mov
and
push
inc
loop
sbb
sbb
aas
aaa
sbb
imul
or
test
fisubs
fisubrs
lods
pusha
scas
das
push
sub
pop
js
cmp
dec
adc
push
push
imul
in
data16
enter
daa
movl
jno
mov
cli
dec
push
xor
mov
mov
lahf
mov
dec
mov
data16
jg
cmpsb
lret
pop
xchg
addr16
cmp
pop
lods
push
ss
test
xlat
mov
ds
jae
shl
dec
out
push
and
add
pop
sbb
fiaddl
loop
insb
add
fisttpl
xchg
pop
scas
imul
dec
lds
sub
xlat
outsb
cmp
movsl
test
cmc
adc
out
mov
jae
mov
inc
mov
fs
and
add
orl
cmp
insb
outsl
imul
rclb
lcall
mov
mov
sbb
sahf
test
leave
cmpsb
xor
imul
shl
jo
stc
adc
fs
pop
adc
sbbb
movsl
enter
leave
out
jo
cli
ds
loop
jle
jno
xor
insb
in
into
or
and
inc
movsl
and
adc
xor
jns
mov
push
std
sbb
in
ret
call
daa
pop
mov
push
xor
jns
pop
gs
aad
sbb
dec
lret
call
dec
fnstenv
into
les
xchg
repz
iret
adcb
arpl
call
scas
or
adc
in
pushf
inc
ds
jmp
mov
cs
fildl
daa
cmp
cltd
cmp
jae
pop
jb
sub
dec
sbb
xchg
jecxz
sub
arpl
loope
mov
push
imul
pop
js
scas
stc
mov
lcall
pop
xchg
inc
mov
popa
mov
adc
cmp
subb
mov
cmpsl
xor
mov
xchg
jbe
cld
lahf
imul
es
adc
mov
push
sub
jae
dec
ret
fadd
andl
stos
outsb
jbe
test
enter
jae
lahf
lods
or
inc
mov
dec
in
lret
xchg
rolb
jae
push
insl
cltd
loopne
mov
pop
and
dec
test
mov
xchg
jecxz
sbb
sub
push
stos
push
imul
push
add
add
scas
inc
cmp
insl
or
ja
xor
cltd
outsb
mov
test
push
or
push
push
ja
arpl
inc
sahf
lahf
lods
or
mov
xchg
jnp
clc
jne
adc
xchg
movl
bound
dec
das
in
or
mov
sub
sub
pusha
arpl
jp
mov
and
jge
dec
jg
insl
in
std
aaa
pusha
adc
fbstp
adc
cs
push
mov
out
dec
jge
xchg
inc
mov
mov
stos
inc
pop
mov
insb
pop
push
fs
xchg
in
push
add
adc
jb
ret
repz
mov
dec
inc
gs
sub
xchg
lahf
push
pop
idivl
mov
push
outsb
mov
ret
jnp
in
movsb
mov
cwtl
rdpmc
imul
lret
scas
arpl
out
lds
in
rorb
mov
lret
leave
push
ja,pt
jmp
arpl
inc
rolb
aad
popa
dec
mov
aaa
fsubs
stc
add
ret
pop
dec
jecxz
fiadds
or
or
out
push
xchg
pop
and
jnp
movsb
out
ficoml
mov
mov
in
sbb
dec
daa
mov
cmp
mov
jg
sarb
jae
xor
testl
inc
jp
and
in
lahf
fisubrs
push
popf
mov
push
xor
push
inc
mov
push
jae
mov
mov
pop
cmp
cmc
loope
push
xchg
sub
movsl
cmp
mov
mov
sarb
gs
push
sbb
add
or
lret
in
adc
int
pop
dec
sub
imul
cmp
fcoms
sahf
jnp
and
outsb
pushf
clc
pushf
test
cmc
cmp
mov
shll
sarl
sub
cmp
adc
daa
inc
xchg
mull
jge
shr
mov
xlat
mov
xor
add
ds
test
iret
loop
xchg
sbb
lret
fs
or
cmp
outsb
cmp
stos
out
adc
xor
aad
pusha
mov
stos
into
lock
fsubl
lea
inc
ja
adc
xchg
ficoml
sub
in
daa
data16
enter
sub
daa
and
mov
mov
popf
loopne
mov
imul
adc
dec
sub
jl
mov
sbb
repz
jmp
xchg
inc
xchg
mov
call
sub
les
cwtl
fisubl
jmp
mov
pop
inc
dec
jnp
inc
pop
adc
aas
adc
xorb
lds
mov
push
jecxz
movsb
inc
data16
std
xor
cwtl
jbe
lods
mov
jmp
aam
outsl
and
fwait
scas
pop
xchg
in
add
mov
call
mov
sbb
sub
into
xor
testb
aaa
insl
adc
sub
lds
icebp
push
cld
lret
lret
jmp
xchg
mov
mov
and
es
out
push
test
push
ds
sub
addr16
orl
pop
fst
daa
cmp
adc
insb
ljmp
out
lods
ja
movsb
mov
jno
notb
stos
push
fisttpll
loop
nop
add
dec
mov
pop
jbe
test
pushf
mov
dec
lds
in
xor
ja
test
xchg
movsl
sbb
sbb
int
ja
clc
insb
push
stos
inc
mov
mov
into
aaa
incb
inc
outsb
add
fstps
jbe
icebp
or
ret
inc
cmc
xor
lcall
pop
add
and
or
lods
or
xchg
or
push
push
sbbb
imul
in
adc
out
aad
ja
sub
aas
in
out
xchg
adc
scas
mov
push
mov
or
jge
and
and
mov
movsb
mov
mov
test
in
jbe
pusha
lods
add
mov
clc
jmp
jmp
test
mov
mov
dec
outsl
push
mov
cli
and
mov
jb
and
push
jle
mov
jle
adc
mov
pop
lds
inc
jo
jae
rolb
or
ret
inc
in
test
ficompl
sbb
inc
push
sbb
sbb
mull
push
mov
repnz
and
hlt
dec
sub
arpl
inc
sub
sbb
mov
aaa
xchg
int3
movsb
or
or
out
rcrb
sahf
fsubp
out
xor
fs
scas
in
pop
and
push
cmp
movsb
jns
cmpsb
push
or
jbe
std
lret
in
add
or
jns
or
lds
sarl
js
pop
jno
movsb
jl
mov
dec
mov
sahf
jo
dec
int3
pop
and
lahf
std
jp
push
jo
stc
test
cld
ljmp
inc
das
and
rclb
pop
in
mov
pop
ja
cmpsl
push
mov
pop
sub
push
xchg
cmp
mov
xchg
sbb
adc
and
sub
mov
push
add
push
inc
xor
jne
int
mov
pop
lods
xchg
cwtl
lcall
gs
adcb
mov
xchg
iret
jne
jg
add
mov
hlt
icebp
mov
push
and
sbb
mov
test
mull
dec
lret
add
andb
sbb
fcmove
cmc
lret
jle
xor
std
jns
inc
push
fucom
jno
pop
stc
adc
mov
cmp
pop
ss
shlb
mov
bound
cli
movsb
fcompl
sbb
cmp
adc
or
push
ror
rcll
push
mov
pop
gs
notb
test
loope
pop
mov
adc
cmpsl
adc
adc
dec
cmp
and
data16
pop
sub
aam
sti
lock
in
daa
lret
xlat
call
inc
aad
daa
leave
nop
out
mov
cmp
fchs
lret
dec
les
push
in
dec
mov
mov
push
lcall
mov
into
pushf
cwtl
rorl
xchg
push
js,pn
pop
inc
shll
sub
mov
and
ret
test
jno
je
sub
jecxz
pusha
rol
in
inc
std
fisttpl
jl
xor
sbb
push
loope
dec
fldl
fistl
push
int
popf
orl
mov
iret
cmp
and
mov
shrl
mov
insl
clc
stos
or
pusha
adc
icebp
inc
sub
cmc
loope
lret
pop
and
mov
mov
and
sarl
pop
or
lret
shrb
cmp
xchg
xchg
in
les
clc
push
aas
or
scas
sub
lods
loop
sarl
xchg
pop
sub
test
pop
cmovno
cltd
dec
shl
test
fwait
mov
mov
loope
fstpl
cmp
add
shll
jne
mov
inc
push
out
xor
add
pop
inc
movsl
js
xchg
xor
or
and
mov
mov
repnz
sarb
dec
add
mov
sarl
jne
sub
dec
outsb
mov
mov
bound
dec
xchg
inc
mov
mov
xor
add
push
xlat
cmp
pop
idivb
inc
repz
sbb
mov
push
sub
dec
inc
xlat
in
push
andb
and
hlt
adc
xchg
outsb
pop
xor
pop
popa
clc
xchg
mov
pop
cmpl
mov
mov
push
stc
sub
xchg
jnp
sbb
push
nop
jmp
call
ret
test
bound
jae
push
sbb
in
inc
or
cmp
and
dec
mov
pop
sbb
lretw
push
xlat
scas
sub
rolb
jns
jo
xor
inc
test
bound
mov
push
jge
push
cmpsl
sbb
jne
or
cmp
shrb
int3
rcr
or
fimuls
cmp
mov
cmpb
rclb
cmp
lret
mov
cltd
cmp
mov
in
jmp
sbb
je
adc
shll
jno
stos
dec
jl
les
adc
sahf
push
fidivs
movsl
dec
orb
sbb
mov
test
cmp
inc
mov
iret
push
pop
or
jge
out
outsb
imul
call
pop
cmp
out
cmp
mov
ds
adc
jb
sub
cmp
sbb
ljmp
xor
jbe
mov
repnz
mov
roll
sub
loop
fldcw
fdivrl
cmp
outsb
bound
test
push
pop
sub
mov
enter
in
xchg
mov
pop
sub
pop
ret
mov
stc
jb
popf
mov
lret
xor
pop
inc
xchg
mov
jecxz
sahf
xchg
inc
hlt
cmc
xchg
outsl
sub
jbe
cmp
rcr
loop
jno
stc
cmp
fs
jg
adc
cmpsb
shrb
shll
push
out
loop
cli
xlat
push
shlb
add
dec
or
dec
into
mov
mov
loopne
lret
scas
pop
test
fists
pop
cmp
imul
cli
add
inc
or
xchg
out
sbb
popf
movsb
mov
sub
shl
adc
jecxz
xchg
push
xchg
test
into
or
inc
nop
leave
inc
int3
dec
call
lret
in
pop
and
les
out
push
xchg
sub
lea
arpl
cli
mov
fcomps
jmp
push
pushf
inc
inc
and
add
fildl
inc
pop
dec
push
inc
xchg
inc
sarb
push
xchg
sub
ficoms
je
in
jecxz
pusha
mov
insb
shl
std
or
cwtl
in
lcall
sbb
lea
enter
inc
push
mov
insb
xchg
sub
mov
arpl
xchg
and
inc
adc
insl
fists
mov
xchg
and
inc
add
sbb
aaa
lret
leave
das
xchg
mov
push
pop
and
pop
push
sub
sub
inc
shrb
adc
ret
test
in
pop
inc
mov
mov
xchg
aad
sub
and
mov
loopne
mov
mov
nop
xchg
movsl
sti
mov
push
cmp
cltd
test
inc
test
xchg
mov
jb
push
pop
mov
out
cmp
xor
sarl
scas
pop
dec
add
stos
pop
test
push
add
js
pop
ret
fldl
jnp
fnsave
adc
pop
push
jae
sarl
pop
jnp
aas
ja
cli
cmp
jmp
inc
arpl
fwait
lock
fs
jne,pt
dec
shll
xchg
shr
bound
sarb
inc
jne
int3
mov
xchg
mov
mov
ja
sbb
push
outsl
jns
and
adc
icebp
adc
mov
test
jne
je
dec
pusha
jecxz
and
adc
xchg
inc
data16
push
clc
rcll
shl
aad
mov
or
mov
inc
mov
stos
sahf
sub
sahf
cs
insb
dec
dec
out
fimuls
fstl
mov
test
sar
push
or
inc
xchg
mov
push
test
mov
push
jmp
mov
incl
icebp
insl
loop
cltd
push
in
imul
jmp
lds
aas
dec
mov
ret
mov
shl
loopne
pop
arpl
inc
inc
out
or
movsb
sbb
mov
adc
mov
add
cs
mov
adc
scas
xor
sbb
scas
stos
add
add
cmp
call
movsb
push
cmpsb
pop
pusha
jbe
jecxz
in
rolb
test
ret
and
cmp
push
sbb
dec
cmp
dec
sbbl
dec
movsl
push
pushf
adc
stos
clc
mov
cmp
jmp
push
xchg
int
inc
dec
xchg
jecxz
mov
sbb
pop
cmc
mov
mov
sub
dec
pushf
cmp
push
and
dec
jmp
adc
dec
aaa
jg
or
nop
roll
fldenv
cmp
stos
int
fwait
mov
pop
stos
leave
mov
push
cmpsl
add
fsubl
in
dec
sub
test
outsb
lds
test
inc
aam
and
push
ss
out
xchg
pop
mov
addr16
mov
pop
mov
mul
icebp
fmulp
jno
dec
shrl
outsb
sbb
mov
mov
pop
les
rcr
pusha
outsl
add
loop
cs
stc
out
mov
repnz
insl
pop
ss
call
mov
xchg
icebp
out
adc
cli
or
dec
cmp
jb
or
call
push
mov
xor
repz
sub
inc
adc
sahf
mov
xchg
mov
jg
popf
mov
pop
xlat
in
bound
pop
mov
mov
std
mov
sti
xor
push
xchg
nop
movsb
loopne
dec
inc
push
mov
repnz
les
sub
mov
mov
jne
or
stos
in
xchg
pop
pop
int
adc
xchg
add
jb
fisubrs
ds
inc
loope
inc
lods
std
outsl
aas
out
in
mov
sub
insb
je
cmc
xchg
jecxz
movsb
mov
std
sub
cwtl
cmpsl
inc
mov
mov
sub
xor
inc
dec
mov
clc
adc
mov
stc
push
lock
adc
mov
cmp
jp
rorl
xor
insl
gs
cmpsl
ret
mov
out
imul
mov
cs
dec
adc
jg
sahf
sub
std
scas
aam
mov
ret
adc
add
cwtl
mov
cli
clc
fistl
sbb
ljmp
fwait
lods
mov
scas
cmc
mov
in
xchg
fistl
dec
mov
fisubrl
pop
popa
sbb
mov
adc
mov
imul
fcmovbe
pop
dec
stos
lea
xchg
dec
lods
sbb
inc
rcl
mov
pop
stc
or
push
shlb
negb
sub
xchg
es
pushl
cmp
or
cmp
xor
ss
mov
nop
mov
ss
inc
mov
pop
outsl
inc
cli
or
mov
push
pop
sub
jne
aam
mov
fs
out
jb
insl
add
lret
fidivrl
push
adc
mov
cmpl
and
and
pop
mov
insb
sbb
testb
mov
ljmp
jnp
ret
add
xchg
adc
cmpsb
jmp
dec
shl
sbb
jbe
pop
mov
fidivrs
test
add
mov
mov
jnp
mov
jle
push
in
push
adc
aaa
clc
iret
mul
or
jnp
repz
push
and
xchg
fisttpl
jae
and
push
imul
or
xor
jns
mov
push
xchg
dec
dec
insl
sbb
push
xor
scas
out
lock
and
or
mov
cmp
leave
das
movsb
cmp
sub
outsb
arpl
push
inc
icebp
pop
sarl
pop
mov
add
push
jne
or
js
test
push
pop
or
fmulp
lds
adc
in
mov
cmp
shrl
jmp
add
mov
adc
sarb
adc
mov
adc
jl
pusha
gs
lock
movsb
rep
pop
sbb
inc
jl
lahf
pop
shrb
cmpsb
inc
dec
push
pop
mov
inc
fdivr
xor
pop
mov
js
lahf
les
xor
push
ret
int
shrl
mov
cmp
std
mov
shrb
fs
cs
out
sbb
imul
movsl
xor
roll
or
int
js
sub
inc
roll
sub
pop
push
imul
into
pop
and
outsb
sub
mov
jg
dec
lock
mov
bound
in
lods
push
xchg
scas
xchg
cmp
adc
shl
ret
cltd
lret
jge
inc
in
mov
pop
add
fdiv
aaa
cmc
and
xor
popf
outsl
loop
pop
loop
and
movsb
ja
sbb
mov
ss
scas
pop
lods
xchg
fidivrs
leave
mov
out
ret
cmp
pop
pop
cmp
pusha
orb
jne
into
jl
lret
xchg
loope
dec
dec
or
iret
notl
cmp
cwtl
adc
sbb
add
jle
lcallw
dec
xor
adc
cmc
xlat
and
adc
lret
push
mov
in
push
arpl
aad
sub
nop
jg
cmp
jbe
inc
add
mov
stc
repz
add
xchg
dec
pushf
fsubrs
pop
call
sub
mov
or
inc
adc
lret
enter
pop
jmp
stc
ja
mov
mov
inc
enter
dec
jb,pt
mov
dec
imul
rcrl
jecxz
sub
jb
pushf
std
rolb
aam
bound
mov
pushf
loope
add
adc
lret
cli
ja
sahf
xor
imul
and
dec
mov
hlt
mov
and
pop
rcrl
lods
cwtl
sbb
mov
cmpsl
shr
mov
movb
jbe
insb
lret
cmpsl
xchg
mov
and
xchg
and
inc
rclb
lock
repz
inc
rol
mov
fcomps
sar
add
pop
xchg
push
cmp
ljmp
fildll
js
mov
xor
divps
insb
cltd
repz
cmp
popf
pop
mov
pop
sub
das
dec
test
sbb
movsl
shrl
cs
pop
movsb
out
stos
std
mov
lahf
add
scas
ss
stc
jg
xor
inc
mov
add
insl
mov
xchg
mov
mov
icebp
lahf
mov
add
fldl
and
stc
mov
push
stos
hlt
shlb
mov
stos
out
push
fnstenv
jns
pop
add
xchg
push
in
ja
std
jns
sub
inc
pop
inc
and
mov
fsub
mov
dec
cmp
and
mov
out
dec
out
mov
in
inc
push
pusha
sbb
cmp
push
pop
adcl
adc
xchg
test
fistpl
push
mov
ret
mov
insl
and
jle
insb
push
scas
adc
mov
inc
push
orl
repnz
iret
push
or
pop
mov
sbb
jae
jno
push
xor
or
scas
mov
inc
jmp
je
xchg
lahf
push
jo
out
lahf
push
imul
xlat
scas
push
addl
mov
imul
xor
jbe
dec
arpl
or
jge
pop
ret
sbb
dec
inc
aaa
xchg
xchg
add
xchg
jb
xchg
xor
shlb
dec
scas
imul
lahf
cmp
xchg
movsb
movsl
dec
pop
push
inc
mov
jbe
lcall
cmp
roll
inc
jae
jno
stc
scas
jl
in
aam
pop
dec
or
xchg
hlt
and
adc
mov
or
sub
pop
inc
imul
pop
subl
pop
jae
add
das
inc
loope
jp
sub
sahf
mov
popl
inc
adc
add
rolb
and
add
mov
xor
pop
int3
adc
inc
cmp
insl
mov
dec
lcall
xchg
fdivrl
subb
pop
dec
outsb
mov
popa
test
data16
imul
and
inc
mov
dec
xor
push
xchg
xchg
or
into
inc
cmpsb
mull
mov
push
jg
rcr
jns
outsb
dec
and
rcr
jnp
mov
out
outsl
xor
pop
mov
stc
pop
xor
fs
mov
ss
loope
lods
jp
rorb
mov
stc
push
xor
and
or
dec
jns
xchg
out
loope
loope
pop
adc
push
cmpsl
imul
out
add
mov
adc
xlat
int
sub
scas
stos
mov
shr
lret
sti
xchg
mov
aas
aad
hlt
xchg
nop
pop
pop
push
dec
add
xor
fnstcw
push
repz
xchg
lea
leavew
call
test
sub
mov
adc
xchg
pushf
inc
mov
push
cs
sti
inc
out
clc
jno
loop
hlt
aas
sub
push
xor
jecxz
clc
push
jne
adc
ja
and
sbb
adc
andl
pop
fcmovnbe
pop
insl
pop
les
mov
dec
ljmp
lahf
cmp
jmp
push
shr
inc
push
testb
insl
xchg
scas
or
cmpsl
rolb
mov
popf
cmp
lret
push
in
add
and
sub
push
jge
and
lea
ret
xor
je
sahf
data16
xchg
and
xchg
xchg
jecxz
ljmp
cmp
add
hlt
xchg
jp
mov
bsr
out
add
stos
jmp
mov
sub
pusha
pop
lcall
mov
sbb
decl
or
pop
dec
cwtl
fsubrs
mov
jb
add
pop
iret
push
lcall
loopne
nop
xor
jge
mov
xchg
dec
lcall
adc
shll
inc
sub
push
fwait
jge
rcrb
dec
mov
jne
or
mov
xor
bound
dec
cmp
cmp
xchg
insl
aam
xchg
lahf
xchg
sbb
out
rcrb
and
push
mov
dec
xchg
mov
sarb
sub
mov
mov
jo
dec
xchg
mov
xchg
lock
loopne
push
xor
pop
out
add
popf
jle
inc
mov
add
into
stos
idiv
shlb
pop
mov
jnp
jbe
jle
mov
cs
ret
mov
cmpsl
ret
mov
inc
cmpsl
mov
jae
add
push
icebp
lret
mov
repz
lods
push
push
sbb
idivb
sbb
add
xchg
scas
mov
dec
lds
loop
shr
pop
mov
mov
das
and
arpl
addr16
negl
lds
jnp
getsec
push
inc
ljmp
and
int3
jle
and
sub
ficoms
andl
dec
xchg
mov
or
cmp
sbb
movsb
xor
push
xchg
ljmp
xchg
mov
daa
rcrb
cmp
jno
push
adc
pop
dec
into
cmp
push
adc
imul
jnp
dec
lahf
cwtl
add
xchg
ja
push
repz
inc
cli
test
cmpsb
pop
cmp
pop
test
sti
js
pop
lret
call
inc
loope
and
sub
addl
aam
ds
movsb
adc
fdivrp
mov
in
jg
addb
sbb
pop
jge
or
roll
call
cli
adc
movsl
mov
jne
and
adc
in
pop
outsb
out
mov
test
inc
adcb
jg
lea
mov
inc
xchg
and
sbb
mov
pop
mull
repz
shll
mov
mov
sahf
push
outsb
dec
cmc
scas
sbb
xor
leave
sbb
jmp
iret
stc
adc
push
xor
adc
add
lods
popa
decb
lahf
mov
cli
mov
pop
insb
cmp
mov
or
or
inc
insb
shlb
imul
adc
add
movsb
adc
xor
mov
add
leave
sub
sbb
mov
mov
sub
mov
sti
inc
fbld
pop
xor
iret
and
nop
xor
lret
roll
adc
fpatan
out
les
cmpsb
xchg
rol
lds
out
js
daa
inc
loopne
jb
dec
adc
xchg
cmp
ds
jbe
cld
inc
std
lcall
out
dec
pop
cwtl
outsl
je
push
jecxz
or
js
xor
push
enter
test
jge
out
jmp
stc
mov
push
fildl
xor
pop
bound
lcall
cmp
lret
pushf
jae
jbe
jge
cmp
pop
insl
jnp
add
cmpsl
mov
mov
dec
cld
int3
mov
mov
dec
and
enter
test
and
clc
pushf
pop
sub
lret
aam
fstl
and
fnstsw
sbb
xchg
rorl
repnz
push
lods
stc
and
push
mov
sarl
sbb
xchg
add
in
cltd
popa
cmp
rorb
mov
in
mov
and
mov
test
fs
xchg
push
sbb
jne
xlat
nop
mov
cli
sbb
stos
fnsetpm(287
es
pop
xor
add
in
xor
xchg
inc
je
fildl
add
sahf
pop
mov
cltd
pop
or
sbb
ja
push
fmuls
xrelease
or
mov
adc
lock
jne
shrb
insl
or
psllw
lcall
in
xor
xchg
out
cmpb
test
aad
cmc
or
mov
scas
mov
ja
mov
inc
inc
and
in
adcb
out
xchg
lea
adc
es
loope
and
cmpsb
js
push
inc
into
movsl
stos
push
or
cli
pop
insb
hlt
bound
jnp
clc
jae
insb
imul
adc
arpl
ret
pop
pop
nop
inc
mov
flds
push
mov
popa
or
movsb
cwtl
ds
out
xor
lret
jae
xchg
dec
sahf
sbb
aas
leave
imul
sbb
mov
mov
jae
setge
xchg
ljmp
jg
dec
inc
cli
or
sbb
adc
adc
or
imul
imul
fidivrs
dec
pusha
jo
mov
scas
daa
and
or
mov
pop
inc
push
loop
sbb
and
enter
daa
mov
pop
jg
pusha
aaa
jns
bound
xor
dec
fcompl
jb
jp
push
jg
lahf
mov
mov
test
mov
jecxz
cmpsb
loop
mov
iret
nop
push
js
mov
bound
and
loope
in
mov
cmp
scas
ds
push
adc
mov
das
cwtl
sbbb
sbb
inc
xlat
add
ficoml
je
mov
int
imul
lcall
or
iret
scas
jg
rorl
outsb
push
sub
mov
dec
jg
mov
mov
push
movsl
mov
dec
add
test
hlt
cmp
inc
push
xchg
mul
push
ror
cmp
addr16
mov
sbb
rcrl
cmc
jne
cli
xor
jns
loop
sub
stc
lret
cmp
fs
adc
and
in
mov
lock
ss
dec
cmp
pop
pop
or
mov
and
out
pop
loopne
lcall
ja
shrl
in
bound
jle
add
push
loopne
and
sbb
les
sub
or
test
ret
jge
call
push
mov
nop
adc
mov
inc
sub
les
sbb
xchg
lea
lea
cmpsb
bswap
pop
and
jp
pushf
lcall
cs
inc
std
mov
inc
sbb
outsb
jb
jae
dec
shlb
aas
jecxz
pop
arpl
jnp
sub
lds
xor
lock
fimull
adcl
int
pop
or
inc
cwtl
popf
lock
scas
das
pop
scas
and
sbb
rorl
or
dec
pop
jb,pt
mov
lret
xlat
icebp
dec
popf
ret
sub
lret
hlt
jmp
xchg
arpl
mov
ror
fsubrs
pop
lods
add
mov
cmp
fucom
daa
dec
clc
mov
dec
xchg
adc
adc
sub
lods
fs
dec
mov
data16
xchg
or
lds
sahf
or
jnp
adc
arpl
jns
lcall
push
out
sbb
and
test
int
xchg
out
mov
shrl
js
pop
movsl
jne
stos
lret
out
andb
add
ficoms
xor
mov
or
cmp
in
jns
stos
rolb
popl
xor
and
dec
mov
es
push
mov
lret
adc
or
jne
xlat
jmp
out
out
adcb
cmpsl
movsl
cs
in
xchg
cmp
sbb
sub
cmp
jge
push
mov
sbb
mov
cwtl
xchg
add
and
ret
repz
cld
mov
xchg
jbe
pop
adcl
out
aaa
iret
popf
int3
enter
test
stos
fnstsw
and
test
pop
sti
aas
jnp
xor
push
aas
push
cmp
inc
iret
jb
rol
in
pop
inc
testb
xlat
fs
repz
push
ja
pop
or
pop
out
inc
enterw
cmpl
imul
lcall
dec
inc
mov
mov
or
hlt
push
push
arpl
xorb
mov
sbb
push
getsec
sarb
xchg
add
int3
push
mov
pop
ficomps
popa
xor
loope
subl
sarl
inc
out
push
xor
jge
notl
sbb
push
and
mov
jecxz
jno
mov
lea
lods
push
xor
movsl
jns
push
and
push
sbb
test
mov
cmpsb
gs
notl
js
lock
pop
xor
push
test
loop
lcall
ds
int
adc
xchg
subb
xor
push
add
insb
jnp
inc
aam
inc
shl
int
bound
ficomps
cmp
pop
jns
fdivrl
jg
ret
outsb
mov
and
mov
mov
pushf
pop
mov
add
mov
cmp
cmp
cmp
negl
mov
mov
leave
ljmp
mov
inc
xor
or
stc
xorb
adc
xchg
push
scas
add
popf
mov
cli
or
jae
or
pop
orb
stos
repz
or
je
mov
dec
pop
ds
add
mov
add
data16
insb
lret
sbb
incl
sub
pop
clc
dec
sub
add
fdivr
mov
jl
aad
test
nop
jmp
imul
into
inc
push
jo
fldenv
push
vpbroadcastw
xchg
pop
xchg
xchg
pop
lret
je
and
fsubl
fstps
lret
rcll
push
std
insl
pushf
inc
mov
jne
sub
daa
dec
inc
xor
test
dec
inc
push
mov
jecxz
cmc
loopne
jle
es
insb
sbb
inc
mov
bound
daa
adc
cmp
pop
sub
das
mov
cli
f2xm1
mov
xchg
mov
sarb
or
mov
ljmp
mov
insl
dec
dec
dec
push
jmp
aad
jbe
icebp
and
cld
and
jmp
and
and
out
imul
xor
aam
inc
pop
ret
fistps
es
lret
or
cmp
in
addb
rcll
ja
inc
shll
iret
inc
pop
mov
mov
push
xchg
dec
jne
push
andb
add
fistpl
movsl
hlt
nop
mov
inc
cwtl
push
test
and
sbb
xchg
pop
sbb
and
roll
mov
mov
in
sub
add
aas
scas
call
xchg
les
adcl
push
xor
fstpl
xchg
pop
mov
loop
ja
adc
dec
stos
das
xor
rorl
or
push
cmpsl
pop
jne
push
push
mov
sub
int
push
rol
jns
jb
in
in
lds
or
aad
mov
and
sbb
int
mov
xor
int
in
pop
scas
pop
dec
jp
movsb
in
dec
mov
out
mov
jmp
inc
dec
sbb
out
xchg
popf
repz
inc
mov
mov
int
and
iret
imul
jnp
inc
sub
push
or
pop
iret
ror
xlat
ret
lds
ja
inc
enter
push
stc
push
cmp
sub
mov
inc
in
dec
fidivl
inc
aas
xchg
sti
lret
in
sbb
cs
xchg
rcrb
fimuls
push
rolb
mov
mov
movsb
leave
orb
mov
mov
xlat
jge
inc
aam
lods
and
cmp
movl
movsl
pop
mulb
fdivrp
repz
jb
cmc
jo
jns
scas
in
sub
cmp
mov
xor
in
cmp
lret
xchg
jecxz
mov
sbb
jno
add
decl
lret
adc
test
dec
cmp
push
or
mov
push
push
push
insb
inc
cmpsl
and
cmpsb
call
inc
test
mov
pop
outsl
mov
lcall
sub
cmp
idivb
sbb
shrb
dec
cmpb
sbb
pop
add
push
sbb
adc
or
loope
repz
push
pop
movsl
into
jns
mov
xchg
or
and
inc
dec
outsb
pop
icebp
pop
test
push
outsb
andb
call
mov
sbbb
sarl
mov
cwtl
xchg
mov
cwtl
xor
and
and
idiv
sahf
pop
shl
cmc
add
jg
repz
outsl
cmp
in
stc
cmp
movsb
fs
mov
mov
in
stos
xor
mov
clc
cld
cli
cmp
hlt
xor
cmp
cmp
insl
inc
or
pop
into
jmp
movsl
mov
fisttps
pop
pop
pop
jmp
imul
gs
add
aaa
mov
sbb
cmp
cwtl
xlat
pop
push
in
or
pop
mov
jg
out
dec
int
ret
add
nop
aaa
push
dec
subl
fstps
jo
repz
or
movsb
cmp
pop
mov
loopne
cmpsl
mov
mov
or
mov
nop
mov
inc
or
lock
dec
in
push
aas
test
dec
aam
mov
cmp
and
inc
movb
mov
mov
push
dec
mov
pop
mov
xor
push
aad
push
sti
shlb
mov
das
aad
mov
xchg
pop
shll
dec
cmp
pop
aad
insl
xor
jo
dec
sub
mov
cmp
stc
mov
lret
shl
cmp
add
jmp
add
lock
add
mov
cmc
pop
jns
cmp
cwtl
ret
outsb
mov
fnsave
mov
clc
xchg
mov
xchg
popa
pop
data16
fisttps
lods
sub
xchg
xchg
insl
push
pop
rcrb
notl
mov
xor
mov
stos
mov
sar
push
insb
fstps
adc
pop
rolb
cwtl
ljmp
sti
mov
xchg
dec
pop
icebp
add
xor
dec
daa
xor
cmpsl
lods
or
jp
enter
mov
xchg
lret
pop
cwtl
movsl
pop
ja
mov
filds
jmp
or
jb
fwait
cmp
cmp
fnstenv
jns
and
mov
bound
inc
jns
jecxz
in
inc
sbb
mov
pop
push
sub
cs
pop
addr16
fs
mov
mov
movl
mov
std
and
dec
inc
pusha
and
mov
jmp
or
jns
xor
out
cmp
mov
decb
stos
ret
iret
xchg
aas
cmp
jnp
adc
mov
enter
xor
xchg
xor
adc
in
mov
aad
rorl
jae
repnz
or
adc
jne
mov
fstps
in
imul
lds
mov
pop
stos
jecxz
js
aam
or
clc
leave
stc
hlt
xor
lods
cmp
jge
mov
sbb
loope
dec
dec
xchg
or
adc
sub
sub
mov
or
xchg
jnp
scas
jmp
or
jecxz
fwait
movsb
pop
repnz
rolb
enter
daa
mov
or
in
ss
adc
femms
negb
movsl
xchg
and
xor
lcall
loopne
pop
repz
inc
sub
pop
inc
jb
js
adc
pop
scas
mov
push
aam
loope
es
sub
popa
cmp
ds
cmpsb
adc
dec
adc
mov
xchg
and
ss
xor
cmc
adc
int
fmulp
dec
pop
fildll
aam
push
pop
and
mov
push
or
pop
jb
sub
inc
test
xlat
add
xor
rolb
jge
cli
mov
push
mov
push
mov
cmp
jne
sbb
sbb
adc
mov
sub
stc
cmc
lret
xor
pop
outsl
sbb
lods
loop
or
push
fs
jae
adc
out
test
lods
std
in
pop
mov
ret
outsl
outsl
jg
mov
push
dec
or
pop
adc
into
jae
gs
lahf
ss
jl
cli
adc
mov
mov
adc
xlat
mov
data16
jecxz
sbb
jne
or
sub
sbb
lret
in
ljmp
out
mov
jmp
les
loopne
mov
fxch
in
loop
fdivr
xor
xor
pop
xchg
ficomps
icebp
call
and
pop
adc
insl
mov
jmp
hlt
push
cs
inc
xchg
cmp
inc
imul
add
or
dec
xor
xchg
mov
xor
jnp
test
std
mov
clc
mov
mov
cli
lock
and
fstpt
ret
mov
jmp
ljmp
mov
push
mov
jae,pt
and
mov
jbe
mov
sahf
push
loopne
dec
sti
and
faddl
idiv
js
push
lret
inc
and
out
je
or
ficomps
and
xchg
rolb
sub
sub
ret
std
addr16
es
pop
pop
clc
arpl
mov
popa
jo
subl
jmp
iret
outsb
adc
cmp
sets
cltd
cmp
push
inc
push
das
sbb
adc
loopne
dec
scas
shll
push
jbe
cmpsb
ja
stos
xchg
pusha
imul
stos
cmpsb
outsl
add
push
cmp
xor
jo
or
negb
xor
imul
movsl
sub
pop
push
cld
popa
ja
call
pop
inc
sbb
xor
lods
add
jl
jne
jae
mov
cmp
mov
out
sbb
in
cmc
add
mov
iret
pushf
sub
sub
jbe
sbb
cmpsl
mov
jg
mov
std
and
dec
inc
out
in
lods
mov
mov
test
xchg
fldcw
xchg
xlat
das
aad
shll
jmp
push
mov
cmp
xchg
insb
mov
cmpsl
mov
push
cmovae
paddd
popl
add
mov
gs
inc
fiadds
movsb
push
rcrb
push
jecxz
ficoml
pusha
fstpl
insl
repnz
scas
movsb
out
ffreep
jbe
lcall
mov
out
hlt
cmp
xor
dec
sbb
mov
sbb
mov
or
addl
stos
and
adc
not
fiadds
xor
repnz
movsb
scas
mov
add
lcall
push
push
or
in
or
enter
daa
mov
test
jno
bound
jl
lcall
fnstcw
ja
addb
xor
xchg
push
scas
mov
test
ljmp
cmpsb
out
outsl
mov
test
add
cwtl
pop
in
xor
push
ja
loope
sbbl
cli
call
adc
and
adc
andb
in
inc
sbb
mov
cmpsb
nop
out
int
jbe
sub
xor
mov
jmp
sbb
sub
xchg
test
andb
frstor
divl
out
inc
xchg
mov
add
fistps
push
cmpsl
addr16
cmp
xor
neg
out
sub
or
shll
mov
mov
add
cmc
xchg
jp
xor
loopne
loop
imul
incl
ljmp
xor
mov
out
adc
xor
or
or
push
jmp
mov
sti
loopne
je
pop
fwait
inc
test
ret
aaa
imul
sub
das
dec
lret
sub
cmp
fadd
xor
lock
mov
push
jbe
sti
lods
stc
sbb
or
mov
dec
aas
in
inc
mov
gs
repz
mov
dec
addr16
pop
icebp
cmp
push
pop
mov
jmp
dec
enter
xchg
inc
sbb
fs
test
jb
clc
popf
dec
lods
ret
addr16
inc
mov
inc
push
jns
xchg
sub
popa
lret
aas
cwtl
jg
inc
mov
scas
lods
mov
and
fucomi
in
pop
xchg
jp
mov
ja
lock
in
das
xchg
sbb
mov
sub
push
mul
outsl
sbb
dec
inc
bound
mov
cmpsl
adc
cld
mov
adc
and
iret
mov
pop
inc
imul
adcb
iret
pop
xor
mov
mov
xor
jle
insl
clc
sahf
insl
outsb
xchg
or
movsb
ljmp
mov
fnstcw
and
ss
adc
or
add
test
test
mov
pop
push
repnz
dec
jecxz
loop
mov
addb
xchg
adc
pop
push
and
stos
xchg
xlat
add
imul
ljmp
insb
mov
stos
jl
xor
xor
mov
test
dec
mov
push
out
ja
cwtl
stos
dec
orl
mov
mov
fwait
xchg
out
xor
pop
das
lret
jne
sbb
pop
pop
out
push
sbb
or
dec
in
imull
xchg
jns
xorb
aam
or
inc
addr16
out
mov
pop
idivl
xchg
dec
and
ljmp
sub
xchg
xchg
lods
dec
sbb
add
pop
xchg
mov
mov
out
or
inc
mov
jl
fsubrs
insl
test
insb
or
stc
jle
sub
push
push
xchg
push
adc
inc
fmul
out
xchg
ret
dec
pop
and
mov
jmp
add
or
or
pop
inc
bound
pushf
fimull
cmpsl
xchg
add
sbb
lret
and
and
scas
pop
and
lds
rclb
dec
repnz
ret
adc
out
div
cmpl
lret
inc
or
scas
jge
inc
mov
aaa
int3
push
jle
mov
mov
pop
addl
xor
dec
mov
and
leave
cmp
cmp
fmull
jbe
fbstp
icebp
enter
daa
mov
cld
cli
jno
inc
jl,pn
repnz
dec
push
sbb
and
sub
pop
jae
push
mov
ds
push
add
cmpsb
jno
minps
sbb
push
iret
shl
xchg
add
sub
dec
sti
cmp
sbbl
rolb
fwait
gs
fsubs
sbb
dec
inc
add
cld
xchg
jg
adc
xlat
insl
int
je
sub
das
test
lcall
fsubl
out
jle
outsb
inc
rcll
clc
int3
inc
jg
mov
mov
mov
mov
repz
xor
push
stos
jbe
cmp
jmp
cmp
fwait
loope
lret
aad
std
adc
dec
sahf
lock
add
sbb
fiaddl
stc
pop
or
fs
xchg
adc
icebp
popf
ret
lea
