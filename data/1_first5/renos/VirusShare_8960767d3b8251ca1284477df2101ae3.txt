mov
mov
mov
mov
add
add
mov
or
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
mov
call
call
call
or
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
add
add
push
push
mov
push
call
mov
mov
mov
mov
mov
sub
push
call
mov
mov
add
or
add
sub
mov
mov
add
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
mov
add
mov
add
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
mov
add
mov
add
sub
mov
mov
mov
add
call
mov
mov
sub
mov
call
mov
mov
sub
mov
mov
mov
sub
mov
pop
ret
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
push
call
mov
mov
mov
add
mov
sub
ret
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
xor
push
pushl
mov
pushl
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
mov
push
mov
pushl
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
add
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
push
push
push
pushl
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
add
or
mov
sub
mov
mov
add
call
mov
mov
add
mov
mov
mov
call
mov
mov
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
call
add
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
call
mov
sbb
add
mov
mov
call
mov
mov
add
mov
mov
sbb
mov
call
mov
mov
or
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
inc
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
add
call
mov
mov
sub
mov
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
and
mov
sub
mov
sub
call
mov
mov
sub
mov
mov
call
mov
mov
add
mov
mov
mov
mov
call
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
push
push
push
push
push
call
mov
mov
mov
add
mov
sbb
call
mov
xor
mov
mov
sub
sub
sub
call
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
add
mov
mov
sub
cmpl
ja
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
add
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
sub
mov
mov
sub
mov
mov
mov
add
jne
mov
mov
mov
mov
call
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
xor
mov
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
add
push
push
call
mov
mov
mov
add
mov
pop
ret
int3
mov
add
mov
mov
mov
mov
mov
sub
push
push
add
push
add
push
call
mov
mov
add
mov
pushl
push
call
mov
mov
mov
mov
mov
sub
ret
mov
mov
mov
mov
add
call
mov
add
mov
sub
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
call
mov
sub
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
adc
sub
mov
add
call
mov
mov
sub
mov
add
call
mov
mov
mov
mov
add
call
mov
add
mov
mov
call
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
call
mov
add
call
mov
mov
mov
mov
call
mov
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
add
mov
sub
mov
call
mov
add
mov
mov
mov
call
mov
and
call
mov
sub
sub
and
call
mov
mov
mov
xor
call
mov
mov
mov
mov
mov
call
mov
and
add
mov
sub
call
mov
mov
call
mov
add
mov
sub
mov
call
mov
mov
mov
call
mov
add
add
xor
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
call
mov
mov
sub
mov
call
mov
mov
mov
call
mov
mov
mov
sbb
mov
call
mov
mov
add
call
mov
mov
mov
mov
sub
call
mov
sub
mov
call
mov
add
mov
add
adc
add
call
mov
sub
call
mov
mov
mov
add
adc
sub
call
mov
sub
mov
mov
adc
add
call
mov
mov
mov
call
mov
mov
sub
add
call
mov
add
mov
call
mov
sub
mov
call
mov
sub
mov
mov
call
mov
add
add
call
mov
mov
call
mov
mov
sub
call
mov
mov
sub
call
mov
mov
mov
xor
mov
call
mov
sub
mov
sub
add
call
mov
and
sub
mov
call
mov
mov
add
sub
call
mov
add
mov
sub
add
call
mov
add
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
sub
mov
call
mov
sub
sub
and
call
mov
mov
mov
mov
call
and
xor
or
mov
call
mov
add
mov
mov
call
sub
add
mov
call
mov
sub
mov
sub
call
mov
add
mov
add
mov
call
mov
mov
mov
mov
call
mov
sub
xor
add
call
or
mov
add
mov
call
mov
mov
add
call
mov
mov
mov
mov
sub
call
mov
mov
mov
add
mov
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
add
call
mov
mov
add
call
mov
sub
call
mov
mov
mov
sub
mov
call
mov
and
mov
add
call
mov
mov
mov
call
sub
mov
mov
call
xor
add
mov
mov
call
mov
sub
mov
call
mov
add
mov
mov
call
mov
add
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
mov
mov
mov
call
mov
mov
mov
call
mov
and
mov
add
call
mov
sub
call
mov
sub
mov
sub
mov
add
call
mov
mov
mov
mov
sub
call
mov
sub
call
mov
mov
mov
mov
mov
call
and
sub
mov
mov
sub
call
mov
add
mov
mov
sub
call
mov
sub
mov
mov
call
mov
mov
mov
call
or
mov
sub
call
mov
mov
mov
mov
mov
sub
call
mov
mov
add
mov
call
mov
add
mov
sub
and
call
mov
add
sub
mov
add
call
mov
mov
mov
mov
mov
call
mov
and
mov
add
add
call
mov
add
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
sub
add
call
mov
add
mov
mov
mov
call
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
sub
call
mov
mov
sub
mov
call
mov
mov
call
mov
mov
add
mov
call
mov
sub
add
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
add
call
mov
mov
mov
sub
mov
call
mov
sub
mov
call
mov
sub
mov
add
mov
call
mov
sub
mov
add
call
mov
mov
mov
call
mov
sub
mov
mov
call
mov
add
sub
call
mov
mov
mov
call
mov
sub
call
mov
sub
mov
call
mov
mov
sub
mov
sub
call
mov
mov
sub
mov
mov
call
mov
sub
sub
call
mov
sub
add
mov
mov
call
mov
sub
mov
mov
call
mov
sub
mov
add
mov
add
call
mov
add
mov
call
mov
mov
mov
add
call
mov
mov
mov
mov
mov
call
mov
sub
call
mov
sub
mov
mov
call
mov
mov
add
mov
mov
call
mov
add
mov
call
mov
mov
mov
add
call
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
sub
mov
call
mov
add
mov
call
mov
sub
mov
sub
call
mov
mov
mov
sub
call
mov
add
mov
sub
call
mov
mov
mov
call
mov
mov
mov
add
add
call
mov
sub
mov
mov
call
sbb
mov
mov
mov
call
mov
sub
mov
sub
mov
add
call
mov
add
add
mov
call
mov
add
add
call
mov
xor
mov
mov
mov
call
mov
sub
or
call
mov
sub
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
sub
mov
sub
call
mov
mov
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
sub
mov
add
mov
mov
call
mov
mov
mov
call
mov
mov
xor
mov
call
mov
mov
call
and
mov
call
mov
sub
add
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
sub
mov
add
call
mov
add
sub
mov
add
call
mov
mov
call
mov
sub
mov
call
mov
mov
add
mov
mov
call
mov
sub
call
mov
mov
mov
add
adc
call
mov
sub
mov
sub
call
mov
mov
mov
add
mov
call
mov
add
mov
mov
sub
call
mov
mov
mov
mov
mov
call
mov
sub
and
call
mov
mov
mov
mov
call
adc
mov
mov
add
call
mov
mov
mov
call
mov
mov
mov
mov
add
call
mov
add
mov
mov
mov
sub
call
mov
add
mov
add
xor
call
mov
sub
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
call
mov
sub
mov
call
mov
mov
mov
call
mov
sub
mov
mov
call
add
add
mov
mov
call
mov
add
mov
mov
sub
add
call
mov
sub
mov
call
mov
add
adc
mov
sub
call
mov
sub
mov
add
call
mov
mov
mov
mov
call
mov
sub
mov
xor
mov
call
mov
mov
or
or
call
add
mov
sbb
call
mov
add
add
call
mov
sub
mov
mov
call
mov
mov
mov
mov
call
add
add
and
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
sub
sub
call
mov
mov
mov
mov
mov
call
mov
sub
sub
mov
mov
call
mov
add
mov
mov
mov
call
mov
and
call
mov
sub
sub
mov
call
mov
sub
mov
mov
sub
call
mov
mov
mov
mov
mov
call
mov
xor
mov
add
call
mov
sub
mov
or
call
mov
add
mov
mov
call
mov
add
add
call
mov
sub
mov
mov
mov
call
mov
mov
mov
add
call
mov
mov
mov
sub
mov
call
mov
sub
call
mov
mov
and
call
mov
xor
mov
mov
call
mov
mov
mov
call
mov
sub
mov
sub
call
mov
sub
mov
sub
mov
call
mov
add
mov
add
call
mov
add
mov
call
mov
mov
or
add
call
mov
mov
mov
call
mov
mov
mov
and
mov
call
mov
add
mov
mov
call
mov
mov
mov
add
call
mov
sub
mov
call
mov
xor
mov
call
mov
add
mov
sub
sub
call
mov
sub
mov
sub
call
mov
mov
mov
call
mov
add
call
mov
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
mov
sub
call
mov
sub
mov
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
add
mov
call
mov
sub
mov
call
mov
add
mov
call
mov
mov
mov
mov
call
mov
xor
mov
mov
mov
mov
call
mov
mov
sub
mov
call
mov
sub
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
sub
call
mov
sub
mov
mov
call
mov
add
adc
mov
mov
call
mov
add
mov
mov
mov
call
mov
sub
mov
sub
mov
call
mov
mov
mov
sub
call
mov
mov
sub
call
mov
mov
sub
add
call
mov
add
sub
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
add
call
add
sub
add
call
mov
add
add
mov
mov
call
and
mov
mov
call
mov
add
mov
call
mov
mov
sub
mov
call
mov
mov
mov
mov
call
mov
sub
add
call
mov
sub
mov
call
sbb
add
mov
sub
call
mov
mov
sub
mov
call
mov
sub
call
mov
sub
mov
call
mov
mov
mov
mov
or
call
mov
sub
mov
add
call
mov
sub
mov
add
call
mov
sub
mov
add
call
mov
sub
mov
mov
or
call
mov
mov
mov
mov
sub
call
mov
sub
add
call
mov
add
mov
call
mov
add
adc
mov
mov
call
mov
sub
mov
add
mov
call
mov
mov
mov
mov
mov
sub
call
mov
mov
add
mov
call
mov
add
mov
mov
add
call
mov
mov
add
mov
mov
call
mov
sub
mov
call
mov
sub
mov
call
mov
mov
mov
sub
mov
call
mov
or
mov
mov
mov
call
mov
mov
mov
sub
call
mov
or
adc
mov
sub
call
mov
sub
mov
mov
call
mov
add
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
add
mov
call
mov
add
call
xor
mov
mov
mov
add
call
mov
mov
sub
mov
call
mov
mov
mov
add
mov
call
mov
mov
mov
sub
call
mov
add
mov
mov
add
call
mov
sub
add
call
mov
mov
call
mov
add
call
mov
add
mov
mov
mov
call
mov
mov
add
mov
call
mov
add
mov
add
mov
add
call
sub
mov
mov
mov
call
mov
mov
mov
call
mov
and
add
mov
call
mov
add
sub
call
mov
add
mov
sub
sub
call
mov
mov
mov
sub
mov
sub
call
mov
mov
mov
add
call
sbb
add
add
mov
call
mov
mov
sub
mov
and
call
mov
mov
mov
call
mov
mov
mov
add
call
mov
and
or
mov
sub
call
mov
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
mov
call
mov
mov
add
call
mov
sub
mov
call
mov
mov
and
mov
mov
mov
call
mov
mov
call
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
add
mov
mov
call
mov
sub
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
mov
sub
call
adc
mov
mov
add
call
mov
mov
add
call
mov
add
mov
mov
sub
call
mov
mov
mov
add
mov
sub
call
or
add
mov
add
mov
call
mov
mov
add
mov
add
call
mov
add
sbb
add
add
call
mov
sub
mov
mov
call
mov
mov
mov
add
call
mov
sub
sub
call
mov
mov
mov
sub
mov
call
mov
mov
mov
add
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
or
mov
sub
call
mov
xor
mov
mov
call
mov
mov
mov
sub
mov
call
mov
add
mov
mov
call
mov
mov
mov
call
mov
mov
add
call
mov
sub
call
mov
sub
mov
call
mov
mov
mov
add
and
call
mov
add
add
mov
mov
call
mov
sub
add
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
and
mov
mov
or
call
mov
add
mov
sub
call
mov
mov
mov
call
mov
sub
add
call
mov
mov
mov
call
mov
mov
or
call
mov
mov
mov
mov
add
call
mov
add
add
call
mov
mov
call
mov
add
add
mov
call
mov
sub
mov
call
mov
sub
sub
call
mov
add
call
mov
add
mov
mov
mov
call
or
sub
mov
call
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
mov
add
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
or
call
mov
add
mov
add
call
mov
and
mov
mov
call
mov
or
call
mov
add
mov
call
add
add
mov
add
and
call
mov
mov
add
call
mov
add
mov
mov
mov
call
sbb
mov
mov
call
mov
mov
mov
add
mov
call
mov
add
add
mov
call
mov
add
mov
sub
call
mov
mov
adc
call
adc
mov
add
mov
mov
call
mov
sub
sub
call
mov
mov
mov
mov
add
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
call
mov
add
mov
call
mov
add
mov
add
call
mov
sub
mov
call
mov
sub
mov
mov
call
mov
sub
mov
mov
mov
mov
call
adc
add
mov
mov
call
mov
add
sub
call
mov
add
mov
sub
call
mov
sub
sub
sub
call
add
sub
mov
mov
add
call
mov
sub
mov
mov
call
mov
sub
mov
mov
call
mov
mov
sub
call
mov
mov
sub
mov
call
mov
add
mov
call
mov
add
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
call
mov
and
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
call
mov
mov
call
mov
or
mov
mov
call
mov
sub
mov
mov
mov
call
sub
sub
add
mov
call
sbb
sub
mov
mov
mov
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
sub
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
sub
mov
add
mov
mov
call
mov
mov
mov
sub
mov
sub
call
mov
sub
xor
mov
call
mov
mov
mov
or
call
mov
mov
call
mov
add
sub
call
sbb
mov
mov
call
mov
mov
mov
call
mov
add
mov
call
mov
mov
mov
add
call
mov
mov
and
call
mov
sub
mov
mov
mov
call
mov
add
mov
add
call
or
sub
call
xor
mov
mov
add
call
mov
mov
mov
call
mov
add
mov
add
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
add
mov
mov
call
mov
sub
mov
mov
mov
call
or
add
mov
call
mov
mov
mov
sub
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
sub
add
mov
or
call
mov
mov
add
call
mov
xor
mov
sub
mov
mov
call
mov
and
mov
add
mov
call
mov
mov
mov
mov
mov
add
call
or
mov
call
mov
mov
mov
mov
add
call
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
call
mov
sub
mov
call
mov
add
mov
call
mov
and
call
sbb
add
mov
mov
call
mov
mov
mov
add
mov
add
call
mov
mov
mov
or
call
mov
mov
and
call
mov
mov
add
call
mov
mov
call
mov
xor
mov
mov
call
mov
sub
mov
call
mov
mov
mov
mov
call
and
mov
add
mov
sub
call
mov
mov
mov
add
mov
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
mov
add
mov
call
mov
mov
mov
mov
mov
call
mov
add
mov
call
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
call
mov
add
mov
call
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
mov
call
mov
add
mov
call
mov
add
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
add
sub
call
mov
add
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
sub
mov
call
mov
add
mov
sub
call
mov
xor
sub
adc
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
add
mov
call
mov
mov
sub
call
mov
mov
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
sub
call
mov
mov
call
mov
sub
call
mov
mov
mov
adc
sub
call
mov
mov
mov
mov
call
mov
sub
add
call
mov
add
call
mov
add
mov
call
mov
xor
sub
call
sbb
add
mov
sub
mov
call
mov
sub
mov
sub
call
mov
sub
mov
mov
call
mov
sub
or
mov
mov
call
mov
add
mov
call
mov
add
mov
add
call
mov
mov
mov
add
call
mov
add
sbb
mov
call
mov
mov
call
add
mov
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
mov
sub
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
mov
mov
mov
call
mov
sub
mov
sub
call
mov
sub
mov
call
mov
sub
call
mov
xor
mov
mov
mov
call
mov
and
and
mov
call
mov
sub
call
mov
mov
mov
mov
call
mov
xor
mov
mov
call
mov
sub
mov
call
mov
sub
mov
or
call
mov
sub
add
call
mov
sub
sub
call
mov
mov
add
call
mov
add
or
mov
add
call
mov
mov
sub
call
mov
mov
mov
add
call
mov
sub
mov
mov
call
mov
sub
mov
add
mov
call
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
mov
call
mov
xor
mov
sub
mov
mov
call
mov
mov
mov
sub
mov
sub
call
mov
add
mov
mov
call
mov
mov
add
mov
add
call
mov
add
add
sub
call
mov
sub
call
mov
mov
mov
sub
call
mov
add
mov
add
mov
call
mov
sub
mov
mov
mov
call
mov
sub
add
call
mov
mov
mov
call
mov
mov
mov
sub
mov
or
call
mov
mov
sub
mov
add
call
mov
mov
mov
call
mov
sub
mov
call
mov
mov
sub
call
sub
mov
mov
mov
call
mov
mov
mov
sub
mov
add
call
mov
mov
mov
mov
sub
call
mov
add
mov
add
sub
call
mov
add
mov
and
mov
call
mov
mov
add
call
mov
mov
mov
mov
or
call
sbb
sub
mov
mov
call
mov
xor
mov
mov
mov
call
mov
mov
mov
add
mov
and
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
sub
add
call
mov
sub
mov
sub
add
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
xor
mov
and
mov
call
mov
sub
mov
mov
mov
call
mov
sub
mov
call
mov
sub
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
or
sub
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
call
mov
and
mov
add
call
mov
mov
mov
mov
sub
call
mov
mov
call
mov
mov
mov
sub
xor
mov
call
mov
mov
add
mov
sub
call
mov
sub
add
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
call
mov
sub
mov
mov
call
mov
sub
mov
add
add
call
mov
sub
mov
mov
call
mov
mov
mov
mov
call
adc
add
and
mov
mov
call
mov
sub
add
mov
sub
call
mov
add
add
call
mov
add
mov
call
add
mov
mov
mov
call
mov
sub
mov
add
call
and
add
mov
sub
call
mov
sub
sub
mov
call
mov
add
mov
call
mov
mov
mov
call
mov
add
mov
call
mov
mov
mov
mov
add
call
mov
sub
mov
sub
call
mov
sub
mov
mov
add
call
mov
mov
add
call
mov
add
mov
mov
call
mov
mov
mov
mov
mov
sub
call
mov
add
mov
call
mov
sub
mov
xor
call
mov
sub
mov
call
mov
and
add
call
mov
sub
mov
mov
call
mov
and
mov
mov
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
call
mov
add
mov
sub
call
mov
add
xor
add
call
mov
mov
sub
call
mov
mov
mov
call
mov
mov
mov
call
mov
sub
mov
call
mov
sub
add
mov
call
mov
sub
sub
call
mov
add
mov
mov
call
mov
mov
mov
call
mov
mov
mov
sub
mov
sub
call
mov
sub
mov
mov
mov
call
mov
add
add
call
mov
mov
add
call
mov
mov
mov
sub
mov
call
mov
mov
mov
and
call
mov
mov
mov
sub
mov
call
mov
sub
mov
add
call
sub
mov
mov
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
add
call
mov
sub
mov
mov
call
or
or
mov
call
mov
sub
mov
mov
call
mov
mov
mov
sub
call
mov
sub
call
mov
sub
mov
call
mov
sub
call
mov
add
mov
mov
call
sbb
mov
mov
call
mov
mov
add
call
mov
mov
mov
add
add
call
and
sub
mov
add
call
mov
add
mov
call
mov
mov
sub
call
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
add
call
mov
mov
add
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
sub
add
add
call
mov
add
call
mov
mov
mov
mov
add
call
mov
sub
mov
and
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
call
mov
mov
sub
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
add
mov
add
call
mov
mov
mov
mov
mov
call
mov
mov
mov
add
call
xor
mov
mov
mov
call
mov
sub
call
mov
add
mov
call
mov
sub
mov
sub
mov
call
mov
mov
mov
call
mov
sub
add
mov
and
call
mov
sub
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
or
sub
call
mov
add
mov
call
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
add
add
adc
mov
call
mov
add
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
call
mov
mov
add
call
mov
mov
mov
sub
mov
call
mov
add
xor
mov
call
mov
add
call
mov
add
mov
call
add
mov
mov
mov
mov
call
mov
mov
call
mov
sub
sub
call
mov
mov
mov
call
mov
add
mov
xor
mov
add
call
mov
add
mov
mov
add
call
mov
add
add
mov
call
mov
mov
mov
sub
and
call
mov
sub
mov
xor
call
mov
sub
sub
mov
mov
call
mov
mov
add
mov
add
call
mov
mov
add
add
call
mov
add
xor
mov
call
mov
sub
mov
call
mov
and
sub
call
mov
mov
mov
mov
mov
mov
call
sub
add
mov
mov
add
call
mov
sub
mov
mov
call
mov
add
mov
mov
call
and
mov
mov
call
mov
add
sub
mov
call
mov
mov
mov
call
mov
add
add
mov
call
mov
add
mov
sub
sub
call
mov
mov
mov
mov
mov
call
xor
mov
mov
sub
mov
call
mov
mov
mov
call
mov
mov
mov
mov
sub
call
sbb
mov
mov
add
call
mov
mov
sub
mov
call
mov
or
mov
sub
call
mov
mov
add
mov
mov
call
mov
mov
mov
mov
sub
call
mov
mov
mov
call
mov
sub
mov
mov
call
mov
sub
add
or
call
mov
add
mov
mov
call
mov
mov
mov
call
mov
sub
mov
sub
call
mov
sub
mov
mov
call
mov
mov
call
mov
add
mov
sub
mov
call
mov
sub
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
call
mov
mov
mov
or
call
mov
add
mov
mov
call
mov
add
mov
mov
sub
call
mov
add
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
call
mov
add
mov
sub
mov
call
adc
mov
mov
sub
call
mov
add
sub
call
mov
sub
mov
call
mov
or
mov
mov
call
add
mov
mov
mov
sub
call
mov
and
sub
mov
call
mov
mov
call
mov
mov
mov
add
mov
call
mov
mov
adc
sub
xor
call
mov
sub
mov
call
mov
sub
mov
mov
call
mov
sub
mov
mov
call
mov
add
mov
and
call
mov
sub
mov
call
mov
sub
call
mov
sub
add
call
mov
xor
add
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
mov
sub
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
push
call
mov
mov
sub
subl
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
mov
subl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
xor
mov
mov
mov
cmp
je
mov
add
cmp
jbe
mov
sub
mov
mov
dec
jne
mov
mov
mov
mov
sub
call
mov
sub
mov
mov
call
mov
mov
mov
sub
sub
call
mov
sub
add
mov
call
mov
add
mov
mov
add
call
mov
add
mov
mov
mov
sub
call
mov
mov
call
mov
sub
mov
sub
mov
mov
call
mov
add
mov
call
mov
add
add
sub
call
mov
mov
mov
sub
add
call
mov
mov
mov
mov
call
mov
mov
call
mov
add
mov
add
mov
call
mov
sub
mov
add
call
mov
mov
mov
sub
add
call
mov
add
mov
call
mov
sub
mov
add
call
mov
add
mov
and
call
add
add
mov
call
add
mov
mov
mov
add
call
mov
sub
mov
call
mov
sub
mov
call
mov
mov
mov
add
call
mov
mov
mov
call
mov
add
mov
sub
call
mov
sub
mov
call
mov
sub
and
call
mov
mov
mov
mov
call
mov
add
mov
sub
mov
mov
call
mov
sub
mov
mov
call
mov
sub
mov
mov
sub
call
mov
mov
sub
call
mov
sub
mov
mov
call
mov
sub
mov
call
mov
sub
mov
add
mov
mov
call
mov
mov
call
mov
add
add
mov
mov
call
mov
mov
mov
sub
call
mov
or
mov
call
adc
mov
mov
sub
mov
mov
call
mov
mov
mov
call
mov
and
sub
and
call
mov
mov
sub
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
or
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
add
call
mov
mov
mov
call
mov
add
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
sub
call
mov
add
mov
add
mov
sub
call
mov
mov
mov
mov
call
mov
mov
mov
mov
or
call
mov
mov
call
mov
add
call
mov
sub
sub
call
mov
mov
sub
mov
call
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
sub
call
mov
mov
mov
mov
call
mov
add
push
call
je
xor
inc
pop
inc
cmp
add
add
add
inc
add
add
add
add
add
dec
add
add
push
xor
add
add
add
xor
add
add
add
inc
add
add
add
push
dec
dec
inc
push
add
inc
add
pop
inc
add
mov
add
mov
add
call
mov
sub
mov
add
call
mov
mov
add
call
mov
sub
mov
mov
call
mov
mov
mov
mov
call
call
or
sub
add
mov
call
mov
mov
sub
mov
call
xor
add
sub
mov
mov
call
call
mov
add
mov
add
mov
mov
mov
mov
call
adc
add
mov
mov
mov
add
mov
add
call
mov
sub
xor
mov
mov
call
mov
mov
or
mov
sub
add
mov
mov
call
mov
and
mov
sub
mov
call
mov
add
mov
sub
mov
mov
mov
mov
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
mov
sub
mov
and
mov
sub
call
xor
add
add
add
call
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
call
pop
ret
int3
int3
push
mov
add
mov
mov
add
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
sub
add
add
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
mov
sub
mov
call
mov
mov
sub
mov
and
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
sub
mov
mov
or
add
mov
or
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
mov
mov
sub
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
and
sub
sub
lea
push
mov
push
mov
mov
push
mov
mov
sub
push
call
mov
mov
and
mov
mov
sub
mov
mov
mov
push
mov
lea
push
pushl
call
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
add
mov
mov
sub
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
pushl
push
mov
pushl
call
mov
mov
mov
mov
add
mov
mov
leave
ret
int3
push
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
leave
ret
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
and
mov
mov
add
mov
mov
mov
mov
add
call
mov
mov
mov
mov
sub
add
mov
call
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
sub
add
mov
mov
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
mov
sub
sbb
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
inc
xor
data16
cmp
aad
or
in
dec
mov
push
cmc
fisubrl
roll
adc
pop
or
imul
in
in
cmp
in
in
add
in
outsl
sbb
xlat
test
imul
outsb
cmp
ljmp
sbb
test
pop
movb
push
ficoms
rorb
fidivrs
loopne
test
roll
in
stc
sub
popf
jg
adc
in
add
das
add
ret
ja
or
in
push
sub
or
inc
fstpt
adc
xor
pop
out
mov
lds
inc
xor
sbb
in
in
icebp
sub
nop
mov
jmp
xlat
or
cmp
mov
outsl
faddl
negb
std
push
xchg
aaa
and
enter
xor
call
cmp
sbb
ds
nop
mov
jmp
pusha
out
push
fisubrl
in
in
in
rorb
call
in
in
in
out
xor
pushf
mov
in
cli
pop
into
sub
pop
dec
mov
inc
dec
in
pop
adc
scas
out
dec
xor
cli
adc
jb
mov
in
and
mov
in
in
lds
hlt
mov
movsb
mov
in
in
lds
cmc
pop
in
enter
in
push
cmp
in
in
in
iret
xor
fsubrp
in
lods
in
in
lds
push
in
out
mov
cmp
jmp
in
in
lds
pop
fs
out
fwait
in
in
mov
in
outsb
or
leave
push
or
cmp
dec
in
out
in
insb
or
cmp
add
in
out
dec
xor
std
cmc
inc
sub
mov
xchg
sarl
mov
mov
add
in
aas
xchg
sbb
dec
vcvttpd2dq
mov
sahf
jg
movsl
shr
popa
ss
fbld
imul
or
addr16
fadds
mov
jecxz
jb
or
jns
jecxz
in
stos
jno
add
fucomp
fsub
outsl
xor
or
jmp
push
outsl
test
jle
popf
pop
in
xlat
daa
mov
rep
fldenv
xor
mov
in
cmpsb
xchg
in
into
in
or
or
push
mov
out
sbb
jnp
outsl
xor
enter
loop,pt
in
cmp
cmp
mov
adc
or
loope
leave
lds
sub
in
out
in
in
lds
jle
fsubrp
mov
pop
lds
out
in
in
out
cmpsb
enter
mov
fs
jl
and
mov
in
xor
cltd
in
in
and
cmp
or
in
leave
and
or
mov
mov
pop
daa
in
fstp
int
out
lds
hlt
out
in
in
pop
in
aad
test
mov
pop
in
in
jp
pusha
out
lods
push
or
cmp
mov
mov
in
lds
hlt
add
sub
mov
aaa
out
in
in
vshufpd
ja
push
in
in
lds
jmp
addr16
jnp
inc
es
dec
clc
adc
in
mov
in
in
scas
pusha
repz
inc
jno
or
cmpsb
ljmp
in
dec
ja
leave
lods
cmp
or
out
inc
ja
pusha
movb
bound
ret
mov
jo
cmp
add
jae
cmp
jle
shr
in
xor
hlt
ret
cmp
adc
jmp
fmulp
cmp
mov
ja
nop
mov
shl
in
jno
addr16
or
in
mov
ds
call
mov
sbb
jg
dec
ljmp
test
in
outsb
mov
hlt
mov
xlat
or
in
ret
cmp
in
rorl
in
push
or
jno
in
mov
jecxz
sub
in
fdivrl
mov
test
insb
push
out
lds
mov
mov
jnp
sbbb
in
in
test
and
in
in
add
push
leave
test
jp
sbb
jl
and
mov
in
in
ss
in
jle
hlt
mov
in
in
in
pop
or
cmp
pop
in
in
in
out
dec
cmp
mov
in
mov
aaa
lds
lds
in
enter
mov
in
in
adc
hlt
mov
in
ret
in
ret
or
push
in
out
int3
in
in
lds
mov
rolb
sbb
pop
lds
mov
jo
in
or
jno
pusha
out
in
in
ss
jle
and
hlt
mov
in
in
in
in
sub
repz
aaa
push
out
mov
sub
mov
sub
dec
int
in
in
jno
jmp
in
scas
shl
in
sub
testb
aas
pop
in
ds
call
outsl
test
hlt
dec
jecxz
int
imul
push
in
jmp
sysenter
ljmp
es
in
ficoms
lds
jecxz
imul
mov
and
int
aad
int
repnz
outsl
fadds
push
inc
ja
enter
adc
xor
loopne
hlt
or
outsl
lods
or
aas
cmc
xorl
ss
lds
es
xor
jmp
pop
and
mov
movsl
repz
dec
dec
insb
push
or
shrl
insl
cmp
mov
sbb
or
stc
in
in
lods
or
cmp
call
in
in
lds
jmp
in
iret
das
in
in
lds
lret
in
in
jbe
or
sub
lods
in
in
in
in
xchg
sbb
fwait
inc
dec
in
in
xchg
cmp
pop
iret
adc
adc
out
lds
hlt
mov
in
in
out
out
lds
inc
pop
in
push
in
testl
in
push
pop
std
push
mov
inc
daa
pop
adc
cmp
jmp
movsl
shl
or
hlt
cmpsb
jmp
lea
xlat
pushl
hlt
loopne
sub
hlt
jmp
pop
dec
pushl
test
and
sbb
mov
jmp
xchg
mov
les
mov
icebp
add
in
fsubrs
cmp
divl
inc
std
dec
sbb
xor
adc
jb
mov
out
nop
out
dec
cmc
mov
mov
or
daa
lds
mov
mov
mov
aaa
addr16
adc
mov
xor
push
idivl
dec
cltd
test
dec
in
fisttpl
push
jmp
arpl
lods
xchg
or
imul
out
call
mov
notb
or
fcompl
push
jge
mov
shll
pop
stos
push
mov
dec
jno
xorl
push
jb
mov
sarb
jae
popa
int
mov
test
and
add
cmp
xor
scas
xor
push
jg
dec
out
or
cmp
mov
aam
cwtl
push
and
push
inc
mov
push
ljmp
fstl
dec
fucom
stos
lcall
hlt
xchg
cli
testl
addb
dec
xchg
rorb
inc
popf
enter
in
push
popf
cli
and
les
cmc
in
mov
rcrl
subl
jle
xchg
push
lea
dec
cmp
stos
bound
arpl
es
les
mov
in
in
in
lds
hlt
cmpb
in
lds
hlt
adc
adc
outsl
xor
cmp
jmp
or
jp
repz
or
in
outsb
add
clc
mov
jmp
in
negb
test
pop
adc
xor
or
gs
inc
pop
adc
sub
mov
add
sub
xor
out
jo
adc
fisubrs
jmp
jmp
int3
call
aaa
hlt
mov
mov
in
ret
mov
int3
scas
out
lds
jl
jmp
cmp
cmp
or
adc
cmp
cwtl
addr16
pop
in
call
and
in
in
movsb
sti
push
cltd
imul
hlt
jb
in
in
or
cmp
mov
insb
out
in
inc
or
cmp
mov
in
add
shl
in
in
sub
adc
push
mov
in
data16
pop
out
aam
cli
mov
in
hlt
mov
in
in
aam
sbb
ljmp
loopne
inc
out
in
xor
in
in
in
adc
cmp
mov
lret
inc
dec
and
cmp
loop
lods
sti
mov
inc
les
hlt
mov
in
in
fstpt
pop
cmpsl
sbb
in
lds
jb
jmp
pop
hlt
outsb
aam
lds
mov
push
in
lahf
pop
push
aaa
hlt
xorl
mov
gs
in
ret
mov
loop
cli
sbb
aad
cmc
pop
lret
out
jb
addb
jmp
pop
data16
pop
cmp
cli
mov
sbb
cmp
mov
insl
fstl
cmp
nop
std
les
jecxz
in
movsb
sub
push
mov
out
adc
repz
inc
xchg
jns
in
ret
in
out
outsl
xor
mov
in
in
cmp
clc
dec
and
adc
jecxz
in
rol
inc
and
pop
jecxz
divl
cld
in
in
out
dec
push
mov
jmp
or
jg
shr
xchg
imul
xchg
adc
lahf
hlt
mov
jecxz
or
in
gs
mov
movsb
das
mov
inc
mov
in
in
ja
sbb
cmp
mov
jmp
pop
sbb
ret
outsl
test
sbbb
jmp
pop
out
outsl
pop
push
divb
jecxz
imul
les
hlt
adc
in
aad
dec
notb
jmp
xchg
jecxz
in
and
pop
in
jno
aad
hlt
mov
ss
aas
enter
mov
aam
aad
mov
or
pop
loope
in
lods
add
inc
hlt
mov
in
push
pop
cmpsl
lahf
ja
jecxz
fmuls
call
aam
insl
movsl
mov
jp
push
imul
in
jp
inc
aaa
add
dec
add
ja
scas
cmp
iret
das
clc
pushf
jb
and
cmp
testb
es
mov
cli
dec
xchg
orb
mov
cltd
bound
decb
sbb
das
inc
shll
push
shrb
lret
pop
pop
jmp
jp
leave
jae
mov
mov
cmc
nop
gs
add
xchg
pop
fidivs
stos
xchg
das
lods
jb
lods
rcll
xor
jns
jmp
pop
cli
jmp
mov
dec
int
sbb
mov
adc
scas
and
fdivr
mov
lods
lret
xchg
xchg
das
mov
add
in
rep
subb
stos
lock
push
xor
pop
add
cmp
pop
jns
mov
aam
push
cltd
mov
fmull
sbb
popa
data16
in
rclb
cmp
pop
movsb
ss
adc
mov
loopne
out
push
loop
call
mov
cmp
push
in
add
push
pop
mov
mov
add
cli
fildll
pop
pop
iret
mov
scas
jecxz
or
push
xor
push
push
aam
push
lods
jo
jecxz
cmp
mov
insl
mov
xor
or
fs
test
pop
or
je
sti
insl
mov
daa
fwait
pop
adc
push
mov
add
sbb
or
imul
bound
out
cmp
xor
mov
andl
leave
push
dec
sbb
add
nop
mov
and
mov
loopne
mov
dec
lock
stc
shrb
pushf
and
mov
shlb
cwtl
dec
int3
mov
xlat
out
scas
cli
fmull
xlat
lds
push
or
nop
cmp
mov
test
ds
sub
dec
push
movsb
mov
mov
mov
and
or
add
push
call
jnp
pop
jne
sub
test
mov
sub
and
les
rcl
loopne
lret
sahf
sub
cmp
repz
or
jmp
push
call
pop
leave
add
add
sub
iret
pop
pop
fmull
mov
xchg
ljmp
shlb
pop
mov
mov
add
pop
ss
cltd
pop
and
jae
adc
dec
mov
test
mov
stc
push
sbb
jle
inc
xchg
and
rorl
pusha
leave
xchg
pushf
cmpb
add
inc
mov
xchg
add
out
jle
adc
mov
pop
xchg
cmp
std
mov
jmp
test
sub
push
pop
mov
fbld
cwtl
loopne
lcall
sub
jns
fidivl
leave
cmpb
jecxz
or
shrb
popa
aas
sti
xor
int3
jl
jge
adc
dec
nop
out
stos
cmp
imul
jmp
pop
cvtps2pd
cmpsb
mov
scas
xchg
mov
inc
rcll
pusha
jecxz
push
fnsave
push
mov
movsl
pop
sti
faddp
lret
mov
fcoms
xor
subb
rcrb
arpl
aaa
outsl
bound
xchg
ja
test
dec
dec
mov
xchg
incl
pop
cmp
out
mov
aad
xchg
cwtl
dec
add
cli
xchg
pop
dec
idivb
into
pop
dec
fisttps
mov
jge
mov
data16
xchg
sub
andb
jmp
inc
sbb
pop
sahf
mov
sub
imul
xchg
mov
fdivl
cmpsl
movsb
sub
outsl
push
push
test
xchg
xlat
test
xchg
lods
leave
jp
jae
vmaxps
push
jp
vpmacssww
mov
cmp
out
mov
xchg
rcrl
or
mov
in
jmp
pop
mov
aad
mov
mov
loope,pn
cli
xchg
lock
shr
mov
mov
pop
push
hlt
test
jne
mov
lcall
cmpsl
push
add
mov
mov
push
mov
nop
mov
adc
adc
dec
shll
inc
aaa
ret
and
lret
add
jp
es
fildl
data16
cmp
dec
les
loope
inc
jge
inc
and
push
test
adc
jmp
testb
lcall
add
add
insb
mov
adc
out
stos
inc
pop
imul
repz
repnz
sub
repnz
test
adcl
shl
fiadds
dec
jnp
loope
mov
dec
jg
xor
jns
add
add
add
add
add
outsl
outsb
add
add
add
add
add
add
aaa
add
insb
add
push
imul
add
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
ja
add
dec
push
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
push
add
add
add
bound
add
add
add
add
add
cmp
ja
inc
add
add
push
dec
add
add
xor
add
add
add
inc
popa
add
outsb
add
add
add
add
js
add
add
add
data16
add
add
add
add
add
add
add
add
cmp
xor
add
add
push
jae
add
bound
xor
add
data16
xor
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
xor
push
add
dec
outsb
add
add
add
add
add
push
add
js
add
pop
add
push
add
add
add
add
add
add
xor
add
add
add
add
push
add
add
add
pop
add
add
bound
add
push
add
add
push
add
add
add
inc
push
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
jne
add
jbe
add
push
add
dec
add
add
add
add
add
add
jne
outsb
add
add
add
mov
jmp
lret
lcall
push
cld
repnz
mov
mov
and
cmpsl
add
gs
decb
ret
call
pushl
je
dec
addr16
xor
fisttps
mov
test
lods
add
push
and
add
lret
leave
fs
and
add
pop
pop
pop
mov
push
inc
mov
scas
sahf
pop
mov
jno
and
rol
xor
sub
xor
pop
ret
push
and
ret
add
scas
repz
enter
shll
mov
xlat
dec
and
inc
loope
mov
add
push
push
pop
ret
mov
dec
data16
sub
sbb
jecxz
lods
dec
cmp
push
jae
cmpsl
mov
les
mov
stos
xchg
push
mov
mov
pop
inc
ljmp
clc
fidivl
ror
mov
sub
add
inc
int3
push
mov
push
ficoms
mov
outsb
xorl
add
sbb
sbb
ret
sub
push
imul
nop
pop
xor
mov
stos
ret
or
add
enter
int3
jnp
test
and
fnstcw
push
fmul
inc
mov
test
or
sub
jo
test
pop
cmp
lret
add
dec
pushf
mov
mov
sahf
push
sbb
mov
inc
dec
test
pop
and
sbb
inc
mov
call
adc
into
cmpsb
mov
fcoms
test
push
subb
ror
sub
pop
or
adc
push
mov
and
push
add
add
pop
sbb
shll
xchg
mov
test
mov
mov
xchg
mov
jg
adc
xchg
jne
test
xor
or
push
rol
cmc
jne
mov
xchg
dec
ret
add
ljmp
adc
inc
les
stos
jmp
aaa
xor
push
mov
aaa
dec
mov
movsb
movsb
frstor
cmpsb
movsl
fmuls
adc
andb
fsubrl
adc
inc
jbe
iret
inc
adc
repz
and
cmp
sarb
out
ja
into
push
sub
daa
imul
dec
xlat
mov
adc
mov
pop
or
ljmp
cmp
sbb
sub
cmp
add
or
xchg
subl
mov
clc
dec
loopne
jmp
cmpsb
mov
out
adc
sbbl
sbb
les
xlat
jnp
push
mov
xor
adc
out
mov
sub
pop
das
jns
mov
inc
mov
loope
fisttps
adc
adc
push
lods
cmp
and
xchg
aad
inc
adc
je
call
jge
mov
rclb
rcrb
sbb
push
mov
push
dec
mov
pop
stos
not
movb
pop
mov
add
mov
xchg
js
add
shrb
mov
je
adc
popa
roll
divb
lret
rcr
sub
call
das
inc
lds
adc
sbb
cld
pop
pop
ret
stos
push
pop
fisttpll
and
call
test
je
push
jmp
and
mov
dec
out
jb
stos
xor
xchg
adc
nop
out
rorl
push
lock
orb
lods
imul
test
add
out
xor
sbb
dec
shr
sub
mov
mov
test
lea
push
roll
nop
call
dec
loopne
mov
cmpsl
rolb
dec
adc
mov
call
and
jo
wrmsr
rcrl
inc
push
mov
call
adc
and
pop
call
push
push
loopne
add
inc
adc
or
cmpsl
adc
sbb
xor
movl
aad
mov
and
icebp
fimull
sahf
pop
mov
jne
call
ljmp
and
mov
stc
inc
insb
out
sarl
rorl
imul
testb
push
dec
scas
out
xchg
sti
mov
add
xor
in
scas
push
sub
lods
dec
cs
mov
pop
aas
mov
lds
xchg
mov
sub
or
loopne
repz
sub
or
loopne
mov
aas
xchg
mov
popa
mov
xchg
aad
pop
mov
jae
push
es
add
pop
xor
adc
movsb
andb
inc
and
sbb
std
call
adc
cmp
xchg
mov
adc
stos
and
xor
jne
mov
mov
xchg
pop
faddp
cltd
lea
or
inc
subl
xchg
sub
ds
mov
jl
and
jle
jns
xchg
cli
pop
cs
popa
jp
es
mov
mov
sbb
inc
mov
mov
inc
inc
sub
adc
cmp
imul
sbb
sub
imulb
add
lea
out
ljmp
ret
add
push
repnz
add
add
adc
dec
lret
pop
or
sbb
fisttps
dec
cmp
je
mov
mov
xchg
loope
cld
loopne
sbb
cmp
mov
xor
sub
ror
jno
mov
sub
push
xchg
scas
and
loope
xchg
mov
and
push
shlb
jbe
shl
jp
into
data16
mov
dec
mov
lock
ficoml
mov
xchg
lock
mov
jo
xchg
push
stos
inc
pop
cltd
dec
mov
mov
add
mov
xchg
sarb
or
int
sarb
enter
or
test
arpl
shll
sbb
mov
stos
test
push
scas
ret
xchg
bound
adc
add
insb
xor
adc
loope
enter
int
mov
mov
mov
mov
push
sub
insb
mov
or
test
popf
rol
rcr
call
enter
or
xor
mov
and
inc
adc
mov
nop
push
cmp
popf
rcrl
aad
dec
in
and
mov
add
pop
fstpt
out
jne
xchg
mov
xchg
jae
and
loope
je
jae
sub
xor
mov
cwtl
je
pushf
stos
ret
xor
xorb
insb
int3
lret
leave
bound
mov
sub
repz
sbb
mov
mov
sub
in
xchg
incb
lret
mov
and
insb
cmp
adc
movsl
dec
push
cmp
orb
add
loopne
push
xor
or
sahf
add
adc
daa
mov
fmuls
jae
call
mov
and
cmp
leave
cmp
push
je
cmp
shll
ret
cmp
and
sbb
mov
je
fistpl
push
and
dec
pushf
adc
mov
fs
push
pusha
data16
call
mov
or
test
lock
test
dec
jle
data16
add
out
mov
lock
out
bnd
nop
pop
mov
movl
mov
mov
mov
orl
cmp
popa
lea
je
mov
shlb
jmp
sahf
inc
jmp
jno
push
mov
mov
inc
test
push
popf
pop
push
aaa
mov
or
sub
call
dec
out
sbb
pop
inc
scas
por
mov
imul
or
into
dec
or
mov
jl
mov
sub
adc
mov
xor
and
mov
or
push
mov
mov
lret
pop
pop
pop
lcall
decl
jne
mov
aad
and
inc
cld
fsubrp
dec
mov
sub
pop
in
xor
or
lret
mov
mov
mov
inc
es
mov
cmp
dec
mov
in
pusha
pushf
inc
jne
jle
xchg
inc
rsm
mov
stc
mov
or
es
iret
cmpsl
insl
adc
or
popa
cmp
xchg
loop
lea
cli
mov
outsb
mov
and
pop
cli
push
pop
test
mov
movsb
mov
ljmp
push
pushl
dec
lret
push
repnz
lods
lods
leave
in
push
mov
push
es
inc
mov
cld
push
cmp
lock
cwtl
lret
mov
sub
mov
fcomp
adcl
sbb
push
cli
cmp
adc
cmp
loope
pop
enter
mov
movsb
xchg
leave
sbb
jns
cmp
push
cli
repnz
or
xor
out
push
xchg
lea
das
lahf
addr16
cmp
pop
dec
mov
cmp
push
push
call
stos
addl
add
add
add
add
add
add
add
pop
arpl
add
add
dec
add
add
add
dec
dec
add
cmp
add
pop
add
dec
add
add
add
add
add
add
add
add
inc
add
add
add
aaa
add
push
push
add
xor
add
add
add
add
push
arpl
add
insb
add
pop
add
add
jae
add
add
add
inc
add
add
push
add
add
outsb
add
dec
dec
add
add
dec
add
add
add
add
add
add
add
add
add
jbe
add
add
insb
add
add
pop
add
add
add
insb
dec
jae
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
inc
add
add
inc
pop
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
imul
add
add
add
add
dec
inc
push
add
add
add
add
add
add
add
aaa
push
add
add
imul
add
add
add
add
add
push
add
add
add
add
jne
add
add
add
add
ja
add
add
add
add
add
jp
add
push
add
popa
add
add
push
add
dec
add
add
inc
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
jbe
add
add
push
add
add
add
dec
add
add
add
add
data16
stos
int
push
ror
push
rol
adc
jo
test
mov
sub
fdivs
stc
xor
adc
mov
ret
loopne
pop
fsubr
rcr
mov
je
fsts
inc
int3
popa
inc
push
cmp
movsb
mov
mov
or
fldenv
mov
ret
mov
cmp
sub
lea
jle
jecxz
in
mov
sub
xchg
mov
xchg
push
insb
cmpsl
jae
sbb
pushl
jp
daa
add
loopne
sahf
push
push
cmp
es
xor
dec
inc
jbe
adc
inc
mov
mov
push
ficoml
mov
imull
mov
or
sbb
adc
idivb
pop
call
mov
pusha
dec
icebp
fsubs
mov
jl
ss
fs
std
cmp
inc
rorb
cmpsl
int3
mov
mov
not
mov
cmp
inc
scas
add
xlat
lods
sub
mov
xchg
nop
out
push
jne
fcmovnbe
ljmp
fldcw
out
jne
xchg
pusha
fcom
adc
xchg
adc
jne
sub
inc
jae
push
push
xor
add
fs
cmp
sbb
add
xchg
imul
or
and
mov
mov
mov
sarb
push
push
inc
xchg
aaa
pop
pop
es
rcrb
jmp
fs
dec
addr16
pop
or
jp
cmpsb
sti
je
psubsb
inc
and
lock
jbe
movsb
adc
mov
xchg
pop
or
call
lret
push
das
push
stos
sbbl
jne
push
mov
fbstp
jl
leave
std
and
mov
mov
jbe
jp
sahf
push
jno
jo
push
jno
push
sti
cwtl
and
push
cmp
in
test
nop
fs
dec
hlt
lcall
inc
and
loopne
add
inc
push
cmp
or
mov
adc
dec
arpl
dec
or
xor
add
cltd
idiv
pop
push
int3
int3
or
push
xchg
pop
mov
jae
add
jg
adc
sbb
fs
jbe
push
sub
and
xchg
jae
add
xchg
ret
xchg
xadd
sti
cmp
add
jb
and
int
pop
lahf
mov
add
and
pop
mov
pop
push
je
mov
mov
mov
add
xchg
loopne
and
pop
test
fstl
stos
mov
adc
cld
cmp
mov
pop
adc
jg
daa
dec
ret
mov
mov
adc
stos
loop
int3
je
pop
mov
stos
jne
dec
jge
jae
fmul
adc
bswap
add
daa
movb
fsubs
hlt
xchg
cwtl
mov
mov
ja
inc
mov
adc
cmpsb
jmp
lret
jae
mov
lods
jae
jle
mov
lret
scas
outsb
int3
pop
push
cld
je
shlb
push
jb
inc
and
jbe
movsl
jno
dec
pop
push
jecxz
or
int3
push
or
ljmp
out
sub
xchg
mov
mov
dec
dec
sbb
pop
scas
push
add
or
jg
orb
mov
push
shlb
jl
and
add
push
add
mov
out
fstp
push
subl
xlat
push
inc
fildll
out
aam
xchg
in
pusha
pop
into
rcl
adc
xchg
movb
pop
out
add
fldt
pop
shll
out
mov
inc
es
cli
ljmp
sub
push
in
dec
xchg
cmp
push
mov
ja
lahf
adcl
pop
es
sub
hlt
mov
shrb
jbe
xchg
jl
sbb
push
insb
sbb
pop
adcl
outsl
stos
push
xchg
call
push
xchg
scas
push
push
add
pop
add
mov
loope
sbb
fstpt
and
loopne
push
and
jmp
cmp
cwtl
lea
inc
jl
roll
movsb
sbb
and
sti
pop
pop
or
mov
loopne
and
push
out
popf
pop
pop
lods
jae
or
push
jo
jmp
and
sarb
xchg
jl
dec
movb
push
push
rorb
and
xchg
mov
push
insb
xchg
mov
mov
js
shrb
je
ret
sbbl
bound
or
es
nop
inc
jbe
shrl
push
repnz
popa
pushf
cli
mov
jbe
adc
push
mov
daa
mov
lea
push
add
add
inc
add
arpl
je
add
add
add
inc
jbe
add
jae
add
xor
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
data16
add
insl
outsl
add
add
insb
add
add
add
add
add
cmp
add
outsl
add
add
add
add
add
ja
add
dec
add
add
add
xor
jo
add
add
add
add
add
add
add
jb
add
inc
add
add
jae
ja
inc
add
add
add
add
add
add
insb
add
add
add
add
add
jno
add
add
add
dec
js
jb
add
add
add
add
add
add
add
outsl
add
add
add
outsl
add
add
add
push
add
insl
add
add
inc
add
inc
add
add
dec
add
add
add
add
add
add
add
outsl
add
add
add
inc
add
add
imul
add
add
add
add
add
jno
bound
add
dec
add
dec
add
inc
add
add
add
add
dec
add
je
xor
add
js
pop
add
je
add
add
add
add
add
add
dec
add
insl
dec
add
add
imul
add
inc
add
add
add
add
add
add
add
add
add
push
xor
add
add
jbe
jb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
lret
xor
cmp
add
xchg
stos
mov
lds
lret
mov
fcompl
mov
cmp
sbbl
mov
cmpsl
add
push
fdivrp
push
movswl
mov
pop
push
sub
stos
cltd
mov
add
jl
adcl
pop
sub
mov
in
stos
add
hlt
out
imul
add
dec
inc
int
scas
inc
lea
daa
pusha
ret
mov
add
jle
dec
inc
xchg
jbe
pop
scas
sub
je
addb
mov
mov
mov
jecxz
push
lods
push
and
addl
cld
adc
push
and
pop
mov
sub
pushf
jl
or
and
icebp
add
sti
push
jno
and
adc
inc
lea
outsb
ja
mov
xchg
push
loop
add
inc
in
and
loopne
add
rcrb
adc
sbb
or
xchg
insb
stos
xchg
rolb
lock
insl
addr16
add
sahf
mov
outsl
xchg
mov
loopne
mov
pop
mov
enter
jno
xchg
push
add
ret
test
repnz
mov
pop
movsl
jecxz
movsbl
jl
and
je
mov
popa
call
int3
pop
out
jne
add
mov
sbb
sti
xor
imul
sti
insb
nop
inc
jb
add
imul
lret
lods
cmp
stc
int3
xor
daa
push
popa
loopne
rcr
jbe,pn
filds
add
pop
push
inc
push
push
scas
test
xor
add
cmp
and
ret
cmc
inc
sub
dec
test
or
xor
xchg
inc
orl
cmp
mov
cmp
adc
dec
in
dec
pop
jmp
cmp
jo
sub
and
repz
pop
sbbb
data16
daa
add
stos
movsb
test
fidivs
sub
add
jg
ljmp
movsb
lds
pop
repnz
arpl
scas
add
add
cmc
mov
in
adc
xchg
aaa
mov
in
dec
mov
sbb
andb
loop
add
fdivl
insb
push
subl
add
or
sub
test
xchg
mov
and
test
imul
outsb
rorl
rclb
inc
pop
fcoml
add
sub
mul
add
iret
xor
add
jl
inc
adc
or
add
pop
iret
xlat
ljmp
fcoms
out
mov
fildll
mov
jb
js
les
orl
mov
popf
add
xchg
xchg
lea
fimull
cltd
xchg
or
and
add
push
ficomps
mov
lcall
jo
das
add
xchg
jae
sti
sub
push
xchg
add
popf
test
dec
shlb
lea
push
push
or
cmp
push
lcall
movsl
jp
lock
lahf
lea
les
mov
add
rorl
adc
stos
insb
mov
adc
sub
cwtl
mov
andl
or
jb
mov
dec
int3
mov
sbb
aaa
add
lret
mov
pop
lea
call
lods
inc
or
fidivrl
jg
inc
imul
push
xchg
add
push
jns
mov
jo
scas
xchg
mov
insl
fiadds
arpl
xchg
push
bound
push
sahf
orb
les
sarl
std
mov
gs
cli
fadds
and
add
scas
push
mov
mov
add
rclb
xor
jg
ds
push
sbb
das
adc
xchg
std
cmp
pop
add
inc
add
pop
iret
addr16
test
xor
adc
imulb
mov
mov
mov
mov
cmp
insb
outsb
mov
movsb
add
sub
mov
pop
into
int3
in
pop
cltd
addl
bound
and
mov
insb
dec
fwait
push
jnp
pop
push
or
xchg
jbe
mov
in
or
stos
pushf
nop
lahf
fwait
rorl
fistpl
add
shll
mov
fwait
add
pop
addl
fs
xchg
lret
xchg
orl
add
mov
xbegin
roll
add
xor
add
push
push
add
ja
push
add
add
add
bound
add
add
pop
add
add
add
add
add
add
bound
add
bound
add
add
add
outsl
insb
add
dec
add
add
add
add
add
jns
jno
add
add
add
add
add
inc
pop
jp
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
inc
add
add
add
push
add
add
bound
imul
add
inc
add
add
add
add
dec
add
add
add
jo
add
push
add
add
inc
jo
add
add
add
inc
add
imul
add
add
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
add
xor
inc
data16
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
inc
add
add
add
inc
add
add
imul
add
aaa
add
push
add
add
popa
push
add
add
add
add
add
add
push
leave
sbb
cmpsl
or
xchg
in
hlt
cmp
scas
inc
and
mov
cld
dec
sbb
pusha
dec
or
or
or
adc
mov
mov
lea
mov
rolb
jl
sbb
inc
mov
push
mov
push
out
rcrb
sbb
push
inc
sbb
inc
xor
cmpsb
mov
jae
je
jecxz
nop
cmpsl
adcb
enter
jnp
cmpsb
lock
xchg
jne
inc
xchg
xchg
mov
sub
mov
jno
fcoms
mov
idivl
not
nop
test
pop
jne
fcompl
into
mov
loopne
sbb
fmull
aaa
sub
adcl
faddl
push
or
mov
jnp
into
xchg
mov
mov
mov
push
ja
sub
aam
inc
aad
enter
jnp
insl
cmpb
mov
xor
pop
or
jae
lea
mov
jge
push
lret
mov
lahf
loopne
push
push
aaa
ljmp
lahf
pop
ror
xchg
lds
and
fcoml
jp
mov
shlb
jne
xor
xchg
and
mov
xchg
cwtl
movsl
scas
ss
mov
arpl
mov
mov
pop
idivb
in
jl
cld
push
xchg
call
es
mov
je
lcall
cmp
cwtl
test
int3
jb
dec
in
jle
roll
clc
gs
adc
rcrb
adc
jmp
cli
shlb
xchg
xor
mov
jmp
hlt
clc
pop
les
stos
out
and
aad
stos
cmp
mov
out
mov
adcl
ljmp
call
xchg
sbb
mov
hlt
or
push
cs
imul
mov
iret
mov
or
adc
out
or
pop
and
data16
pusha
je
shr
add
sbb
cmpb
add
cwtl
movsl
adc
js
imul
xchg
dec
jne
insl
movsb
jmp
repz
loopne
jmp
or
push
jbe
cltd
xchg
dec
push
mov
push
dec
popa
int
lret
xor
mov
mov
leave
push
in
pop
adc
fidivrl
pop
fistpl
push
nop
imul
popf
movsb
push
push
or
cmp
repz
stos
jb
push
xor
pop
push
fs
push
pop
mov
jbe
dec
mov
adc
loop
repz
push
adc
nop
nop
cmp
or
stc
push
test
jne
push
stc
cmp
aaa
push
xor
xlat
mov
pop
lods
je
or
shlb
mov
push
cwtl
cmp
adc
hlt
jno
iret
sbb
mov
add
push
push
add
shl
fstps
leave
and
inc
aas
dec
mov
inc
mov
sub
lcall
shlb
or
jg
sbb
fadds
stos
or
loop
sti
mov
out
push
bound
fwait
or
fbld
outsl
pop
pushf
in
jo
and
xchg
mov
outsl
mov
leave
incl
ror
stos
jno
outsl
out
mov
mov
dec
mov
xor
mov
orb
lea
mov
mov
mov
mov
or
xchg
js
mov
sub
cmpsl
call
dec
and
or
icebp
or
aam
fadds
inc
test
pop
test
or
popf
adc
xchg
inc
sub
sahf
inc
mov
divl
dec
pop
call
mov
sbb
dec
movb
adcl
sti
cmp
lret
je
hlt
popl
cmp
rcl
pop
rorb
inc
ret
cmp
dec
and
frstor
dec
mov
adc
les
inc
xchg
jno
loop
call
in
je
out
xchg
xorl
lods
push
testb
sbb
stos
xchg
sbb
mov
pop
adc
xor
jge
in
jmp
add
mov
fld
xor
jl
sbb
std
mov
mov
sub
sti
mov
add
mov
jmp
vphadduwq
dec
inc
inc
pop
loope
mov
xchg
rcrb
out
hlt
xor
pop
loope
adc
push
jno
sahf
outsl
cmp
xchg
fisubs
inc
js
or
shll
shll
xchg
push
call
int
je
xor
out
jecxz
pop
and
lods
add
ret
shl
cli
adc
jbe
daa
in
sbbl
mov
or
out
pop
rcr
sbb
nop
or
add
daa
jecxz
add
add
addr16
out
int3
iret
out
lret
call
inc
aaa
movsb
adc
inc
pushf
mov
enter
dec
into
ret
add
sub
movb
insb
lcall
adc
or
pusha
push
jnp
inc
pop
push
ds
test
out
shlb
xor
movsl
daa
sahf
test
in
adc
loopne
cmc
mov
mov
pop
jl
mov
sbb
and
xchg
push
scas
mov
adc
jno
fldcw
dec
cmpsl
lret
or
adc
mov
add
inc
xchg
pop
mov
jmp
add
sarl
xchg
and
push
out
aaa
xchg
add
push
xor
jp
in
xchg
mov
lea
xchg
insb
pop
addb
sbb
push
sbb
dec
and
mov
adc
lret
jb
or
sbb
loopne
push
or
ss
mov
in
negb
mov
cmp
xchg
popf
je
call
or
cmp
scas
loopne
add
add
pop
test
leave
inc
ja
add
cmc
cmp
or
push
shld
inc
movsb
and
rorl
fnsave
lds
inc
call
cmc
cmpsb
mov
sbb
and
xchg
leave
add
inc
bound
lods
sbb
aam
loopne
adc
leave
fldcw
or
lds
push
test
out
lods
sbb
adc
fsts
add
popa
ror
jecxz
pushf
outsl
adc
jecxz
jecxz
or
lret
add
roll
lock
lods
rorb
fisttpl
vmwrite
jae
inc
or
inc
shl
addr16
lock
outsb
daa
imulb
sbb
sti
loopne
fstpl
sbb
or
stos
or
aaa
sbb
stos
cmpsb
call
aaa
data16
sbb
scas
pop
into
icebp
cmpsb
test
jae
inc
push
arpl
cmp
test
cmp
fmuls
and
loope
addr16
in
and
fstl
mov
pop
rcrl
repz
lods
sbb
out
push
sbb
sbb
shl
mov
call
loopne
add
cmp
lods
loopne
imul
pushf
xchg
push
cmp
jge
jmp
sar
jbe
test
daa
pop
test
andl
rorl
mov
decb
inc
push
dec
repnz
jno
push
mov
adc
test
mov
shlb
jno
cmova
adc
pushf
jle
push
dec
cmpsl
cld
sahf
push
enter
out
sarb
push
jg
adc
lods
dec
ja
insb
leave
jo
leave
jae
mov
xor
add
inc
loopne
jge
in
push
adc
xor
push
mov
cmpsl
jns
loope
fidivrs
lret
lods
push
out
cmp
cwtl
sub
xchg
movlps
or
jae
movsb
mov
jg
dec
test
cmpl
mov
popf
mov
or
cmc
xchg
leave
jne
aam
negb
rorl
mov
cmpsb
inc
enter
adc
loopne
mov
popa
je
leave
jo
mov
and
pop
movsl
xchg
mov
nop
mov
std
arpl
fisttpll
mov
mov
add
xor
adc
ret
mov
adc
mov
adcb
jne
xchg
cmp
sub
stc
mov
xchg
cmpsl
add
xor
jl
xchg
xor
nop
mov
sbb
jae
cwtl
adc
rorl
push
es
push
aam
pop
repnz
add
jp
sbbb
xor
inc
push
mov
daa
insb
pop
sbb
xchg
sbb
lods
ds
movsb
mov
mov
outsl
xlat
inc
mov
stos
cmp
dec
and
mov
outsb
adc
scas
push
xchg
xchg
or
cltd
inc
cltd
pop
call
fwait
mov
adc
int3
push
scas
imul
lahf
rol
mov
mov
loope
adc
nop
addr16
icebp
push
loop
in
xor
cli
jmp
sarl
ret
lea
mov
push
aam
movsb
daa
jecxz
and
push
adc
pop
xor
sub
outsl
add
add
add
jne
push
add
add
add
add
jne
add
add
add
add
add
add
push
add
add
add
imul
add
xor
jae
push
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
push
inc
inc
add
push
add
add
inc
push
add
add
add
je
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
jns
add
add
add
push
dec
add
add
add
add
push
dec
add
add
add
dec
add
add
add
add
add
xor
add
add
add
add
dec
add
add
add
dec
add
add
add
jbe
xor
add
inc
js
add
add
add
push
add
jbe
xor
add
add
inc
jns
popa
add
pop
add
push
add
add
cmp
add
jo
add
add
add
add
add
add
insb
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
push
add
add
add
inc
add
add
add
add
add
add
add
push
add
xor
add
add
add
add
add
add
add
je
popa
xor
add
add
sub
xchg
push
sub
movsl
push
hlt
jmp
xor
stc
fldcw
xchg
jecxz
sbb
gs
insl
mov
js
inc
mov
sbb
mov
cmp
xchg
dec
arpl
and
push
cmpsb
dec
stos
mov
mov
dec
lock
fildl
fsubrs
neg
sbb
mov
faddp
cld
addr16
pop
inc
call
push
iret
scas
pop
mov
adc
rcrb
jo
sahf
jmp
jnp
sub
test
jo
and
and
xchg
pop
ds
mov
or
inc
xchg
push
push
mov
adc
mov
jns
cmp
mov
jbe
fsubl
rcrb
sbb
or
aas
sbb
mov
xchg
out
sub
adc
sbb
cmpsl
sarb
rcl
loopne
pop
out
mov
fldcw
arpl
xchg
and
push
loop
in
hlt
ret
add
iret
dec
push
add
add
jnp
cld
push
fpatan
cmp
nop
and
cmc
and
pop
aam
sbb
or
inc
rcrb
and
lret
clc
cmp
leave
fldenv
dec
mov
mov
cmc
ss
lods
popa
dec
pop
xchg
pusha
test
stos
sbb
adc
jp
repnz
sub
push
xor
ret
sub
xchg
cmp
pusha
cmp
lahf
mov
dec
ret
mov
loopne
enter
mov
mov
addr16
or
movsb
xchg
or
fsubl
mov
dec
sbb
cmp
xchg
xlat
pop
xchg
rclb
ret
adc
js
fld1
adc
adc
xor
sbb
fdivs
call
cmp
loopne
or
into
out
pop
ret
mov
lock
inc
mov
jl
sub
xchg
popl
jecxz
cli
push
cmpsl
imul
outsb
jp
push
aaa
jns
or
dec
jl
stos
adc
mov
je
xor
incl
test
mov
mov
es
xlat
sbb
mov
xlat
mov
or
fcmovb
ficoml
sub
shl
jmp
dec
push
lock
rcrl
mov
or
cmpb
repz
ljmp
aad
pop
mov
and
enter
mov
adc
mov
cmp
in
dec
lea
adc
mov
enter
lds
les
adc
addr16
cs
jg
out
int
outsl
scas
and
les
call
fdiv
scas
fbstp
jo
pop
es
adc
int3
cs
or
nop
dec
or
stc
and
clc
jl
lret
xor
ret
shlb
stos
push
xor
adc
jp
je
jne
je
or
nop
push
insb
dec
sti
int
loopne
xchg
dec
sub
shlb
arpl
or
jmp
add
dec
scas
les
dec
mov
shll
xchg
shr
dec
cmp
rolb
xchg
jo
push
pusha
pop
mov
pop
dec
mov
lods
cmp
push
push
sbb
ret
push
stc
sbb
cmp
mov
psrlq
mov
sbb
cmp
cmp
pop
adc
call
roll
and
pop
imul
repnz
outsb
movsb
cmpsl
pop
push
test
or
or
test
jge
pop
jl
or
adc
aaa
movsl
ficoms
jbe
pop
sub
adc
je
push
das
int3
cmpsl
mov
adc
push
rorb
or
xchg
dec
pop
lods
imul
iret
fsubrp
inc
loop
in
inc
sbb
in
adc
push
mov
jo
iret
test
sahf
mov
ds
add
add
dec
cmp
xchg
stos
cld
push
loopne
adc
fisttpl
adc
add
dec
shlb
sub
xchg
pop
adc
test
sub
jo
es
shrb
sub
xchg
fbld
daa
and
pop
pop
rclb
mov
loopne
mov
mov
push
cld
and
mov
je
and
xchg
dec
cld
hlt
test
call
sub
data16
push
test
sub
sar
cmp
shll
les
jle
xchg
cmp
jp
repnz
cs
js
xchg
dec
dec
fbld
in
xchg
ret
sub
imul
mov
sbb
or
jae
jae
xor
pop
dec
and
fisttpll
sub
jmp
cmp
dec
test
jge
mov
add
cld
mov
lret
movsl
jmp
pop
mov
fdivp
pop
lock
shrb
dec
pop
dec
push
mov
ss
fiaddl
push
push
xor
adc
sbb
mov
cmp
add
out
test
test
test
stos
push
clc
leave
jno
xchg
popa
fcmovnu
out
data16
ljmp
xor
add
mov
dec
hlt
mov
jno
mov
xchg
pop
pop
dec
enter
mov
mov
add
data16
lods
frstor
adc
xchg
add
push
call
jl
mov
adc
push
fdivp
orl
jge
xor
cld
pop
stos
xor
fsubr
adc
sbb
dec
into
sbb
aas
shl
push
adc
rolb
cmpb
push
bound
adc
push
adc
jnp
inc
sbb
fdivrs
lret
pop
movl
xor
shl
add
add
or
call
in
adc
adc
cwtl
adc
xor
and
movsb
push
add
rcll
orb
je
and
jle
xchg
mul
mov
scas
ret
xor
push
mov
movsb
push
or
dec
add
cs
mov
loopne
stos
ljmp
test
pop
push
imul
fsubrs
scas
or
lret
jl
xchg
sub
lds
push
movsb
rcl
cmpl
ror
frstor
inc
jnp
fnstsw
les
aaa
push
sbb
fidivs
pop
adc
jle
clc
aam
iret
push
sahf
add
cli
add
xchg
stos
mov
lods
movsb
add
call
dec
mov
pop
cmp
stos
pop
xchg
test
mov
mov
cmpsl
stos
test
jecxz
scas
cmpsl
or
mov
mov
adc
add
pop
lea
int
xor
mov
inc
aam
imul
push
repz
aam
push
scas
test
jmp
out
movl
test
nop
dec
cs
adc
push
imul
push
das
mov
jo
xchg
js
loopne
push
ljmp
adc
leave
adc
adc
and
ja
jne
ljmp
push
sbb
in
mov
aaa
xchg
scas
out
or
xchg
jo
inc
mov
sahf
cwtl
push
shlb
fcoms
push
jmp
push
in
or
mov
adc
fdivrl
dec
sbb
movsl
mov
test
shlb
xchg
jne
rclb
sbbl
outsb
iret
and
dec
test
adc
xor
xor
fidivl
popf
push
push
add
ss
lods
adc
jl
xchg
dec
xlat
sub
out
xchg
dec
stos
out
call
nop
add
inc
int3
add
stos
je
ficoml
mov
icebp
ja,pt
mov
jno
xor
add
insb
lock
enter
sub
pop
cmp
lods
test
fsubrl
xchg
ret
push
push
fs
lock
shr
jge
arpl
test
daa
popa
cmp
scas
mov
aad
xor
aad
das
or
call
mov
cmpsb
gs
insb
and
sti
adc
test
jae
fstl
and
xorb
push
icebp
imul
aas
dec
cvtps2pi
test
inc
sub
movsl
push
cmp
sbb
rolb
xor
push
popf
xchg
mov
enter
xchg
lret
test
fnsave
pop
hlt
or
jne
ja
shl
sahf
xor
mov
jl
lock
fdivl
jge
in
sbb
das
sbb
mov
inc
add
xchg
inc
call
or
cmpsb
and
or
push
aaa
push
adc
push
cli
jo
jb
lret
das
test
nop
dec
or
add
inc
je
lret
cwtl
xor
rol
adc
sbb
out
dec
popf
cmp
pushf
rclb
add
push
enter
enter
ljmp
int
lods
test
scas
cmp
sub
push
call
enter
rep
mov
jae
cmpsb
leave
xchg
dec
sub
push
sub
jno
orl
das
subb
adc
in
aas
push
out
inc
push
push
adc
popa
or
cmp
orb
sub
jno
mov
xorl
mov
xchg
pop
xor
insl
cmpsl
out
sbb
fimull
addl
cmp
cmp
int3
cmpsl
push
xchg
xorl
mov
rcrl
je
arpl
and
add
mov
sahf
dec
cmpsb
aam
call
bndldx
push
loop
test
call
jmp
out
or
nop
popa
mov
ret
sub
inc
adc
xor
cmp
xchg
shlb
pop
je
inc
repnz
lret
adc
loope
inc
leave
mov
enter
daa
inc
ret
adc
rclb
out
cmpsl
inc
and
or
cltd
mov
mov
mov
adc
adc
cmp
mov
push
inc
sbb
cs
push
outsl
clc
mov
push
and
repz
sahf
stc
mov
and
lods
mov
adc
enter
inc
jmp
shrb
ficoms
decb
stc
out
call
nop
mov
cwtl
xchg
in
mov
and
cmp
aaa
jae
clc
mov
jbe
fnsave
adc
dec
pop
cmp
inc
mov
xchg
into
xchg
mov
and
cmpsl
xchg
into
mov
xor
or
jle
aaa
mov
and
push
into
adc
leave
test
out
dec
mov
pusha
ret
divl
push
movsb
adc
mov
filds
cld
mov
nop
sbb
enter
xor
ljmp
hlt
sbb
mov
mov
adc
cmp
push
ret
ret
inc
add
ret
call
mov
nop
stos
es
pop
fsubrl
add
or
push
rcrl
and
ret
jnp
insl
sub
and
xor
pop
scas
add
mov
jb
gs
cmp
insb
loopne
les
jl
push
push
push
dec
ss
testb
fwait
jb
ret
sub
outsl
lret
or
jnp
inc
cmp
xchg
stc
cmpsb
sub
xchg
int
or
scas
or
fxch
adc
cmpl
fadd
rol
notb
ja
sbb
push
jg
loopne
add
adc
push
mov
push
sub
sub
jmp
cmc
mov
mov
mov
fisttpl
inc
adc
roll
cmpsl
sub
and
mov
mov
cmc
xchg
iret
and
push
scas
xchg
int
enter
test
mov
in
mov
shll
xchg
lahf
cli
roll
sub
pushf
stos
out
movsb
adc
push
xor
dec
shl
sub
mov
cmp
dec
test
jo
fldl
sbb
xor
aam
imul
hlt
adc
mov
ret
inc
inc
test
dec
or
in
push
jp
pop
inc
push
push
push
inc
call
xor
mov
inc
fs
pusha
pop
movsb
jne
and
mov
mov
pop
push
daa
inc
and
call
lock
mov
pop
nop
ret
mov
rorl
in
aaa
cmp
fmul
xor
cmp
xor
sbb
xchg
jnp
ja
adc
adc
mov
mov
cli
flds
adc
mov
or
and
mov
pop
stc
cmpsb
in
xchg
push
push
sti
dec
adc
iret
cmp
inc
mov
mov
repz
push
xchg
andb
add
cmp
and
push
mov
dec
cmp
enter
es
adc
pop
movsl
push
xchg
and
or
loop
mov
or
sar
push
imul
mov
dec
sbb
fisttpl
xor
int
mov
icebp
sbb
es
pushf
xor
inc
std
ret
dec
mov
push
fidivrl
mov
add
xchg
fsubs
addr16
test
and
adc
in
je
pusha
mov
jl
xor
jmp
mov
jb
aam
pop
xchg
shlb
mov
nop
mov
jle
cmpsl
pop
jno
lret
push
popa
jne
hlt
iret
outsb
push
sbb
decl
mov
iret
mov
sub
sub
push
dec
and
fdivrs
mov
dec
data16
mov
in
loop
nop
inc
pop
cmp
fdivs
lock
aaa
adc
xchg
push
or
leave
xor
cwtl
scas
jne
xchg
enter
ljmp
dec
rcr
sub
xor
gs
and
negb
pop
movsb
add
shlb
xor
es
push
rcrb
sbb
dec
faddl
add
add
nop
push
ret
nop
mov
dec
xchg
fldl
test
cmp
mov
ret
sti
les
jecxz
and
xchg
xchg
xor
mov
sbb
popa
mov
pop
jns
inc
push
dec
or
test
cmc
movsb
fsubrs
mov
mov
pop
lret
sbb
flds
and
cmp
lea
sub
cli
into
xchg
inc
mov
adc
pop
xchg
jne
push
arpl
add
pusha
pop
adc
es
call
lret
lret
stos
clc
test
out
scas
inc
and
dec
lret
jne
add
adc
sub
and
push
inc
loope
test
or
call
xor
inc
fsubl
loop
popl
pop
fisttps
out
pop
push
lods
xchg
shrl
inc
mov
cmpsb
je
push
dec
or
call
stos
pop
test
cmp
lods
incl
xorb
sub
adc
movsb
sar
call
shlb
in
or
pop
aas
es
cmpsb
adc
mov
jae
jmp
mov
add
push
xchg
sar
movsb
mov
lods
xor
shlb
shrl
xchg
jns
sbb
pop
mov
icebp
inc
adc
xchg
xchg
addr16
jmp
lret
ror
inc
mov
movl
xchg
rcll
mov
bound
movsl
outsb
dec
mov
adc
cmp
xchg
adc
lcall
xchg
into
je
xor
lcall
hlt
jl
ja
jb
nop
mov
jge
xchg
and
je
into
push
lea
push
push
and
inc
adc
mov
ret
xor
shlb
scas
dec
in
pop
cmp
push
adc
dec
lods
inc
adc
fnstcw
add
inc
lock
fwait
mov
xor
mov
lar
push
loopne
iret
les
loope
call
cmpsb
dec
sbb
mov
pop
ret
ja
jecxz
cmp
mov
mov
jmp
in
fiadds
mov
call
mov
inc
or
ljmp
cltd
movsl
call
jmp
repnz
cmp
add
fcomps
mov
cmp
ja
flds
jl
popa
push
int
add
lret
ret
int3
lea
mov
pop
sub
mov
fsubl
pop
adc
push
lret
sbb
sbb
ljmp
scas
mov
pop
sarl
lods
sub
mov
int3
sahf
shlb
xchg
push
arpl
sub
xchg
sub
mov
adc
mov
jge
cmp
pusha
icebp
jo
aad
adc
lret
xchg
ljmp
add
pop
loop
push
xchg
and
ss
test
jecxz
mov
cmpsl
mov
ficoml
aam
adc
stos
les
dec
jns
movl
lods
les
lret
cmpsl
shll
das
call
cmp
add
sub
iret
xchg
loope
jg
cmp
andb
data16
push
push
or
scas
pop
lds
je
jge
jbe
aas
xchg
jno
mov
fwait
pop
data16
je
jge
dec
push
rclb
nop
or
dec
sub
loopne
in
ret
ret
sbb
pop
scas
dec
pop
sbb
fucomp
mov
lds
inc
mov
pop
pop
nop
xor
or
in
movsb
cmp
enter
push
leave
ss
pop
mov
decb
aam
scas
jle
nop
shrb
jge
lret
or
movsl
adc
test
std
test
into
test
test
xchg
cmp
push
lret
cmp
enter
flds
daa
xor
std
or
and
sub
cmp
fsubrl
mov
jge
dec
scas
bound
cmpsl
outsl
mov
xor
test
rclb
push
call
mov
cmpsl
fstps
scas
into
ss
sbb
add
fdivrs
pusha
xor
or
xchg
daa
ret
adc
xor
mov
push
or
fidivs
inc
push
outsl
pop
and
cmpsb
pop
jge
aas
repz
jge
movsl
popa
push
jae
adc
mov
mov
mov
xchg
mov
inc
push
push
cmp
mov
add
es
mov
in
cmc
scas
mov
sbbl
fsubrl
outsb
mov
jo
xchg
and
shlb
mov
xor
loop,pt
call
outsl
mov
add
sub
jle
cmpsb
inc
enter
inc
ds
je
push
lret
fstpt
dec
push
jns
hlt
mov
fidivs
pop
scas
pop
jp
arpl
clc
jge
cmp
fmuls
lock
add
mov
xor
mov
into
push
lods
pop
cmp
jp
test
jnp
out
sub
jmp
mov
rolb
sahf
pop
jmp
cld
xchg
arpl
mov
pop
inc
inc
mov
mov
dec
fwait
leave
unpcklps
pop
enter
movsb
xchg
iret
imul
jo
sub
arpl
inc
jno
mov
shl
int
xchg
dec
add
mov
add
push
and
mov
std
dec
add
jmp
add
jge
aaa
mov
in
dec
mov
int3
jae
pop
fnstenv
lods
sbb
jo
xor
cmp
enter
push
mov
pop
je
pop
push
nop
out
lret
pop
mov
loopne
jne
ret
xor
or
inc
pop
mov
jne
sbb
sbb
xchg
mov
sbb
les
leave
icebp
push
jae
stos
push
aas
sbb
into
jne
nop
push
bound
gs
dec
cmpsb
add
add
inc
addr16
mov
inc
lcall
je
ljmp
out
xor
sbb
aaa
out
rorb
push
xor
pop
sub
pop
or
fsubs
test
roll
out
add
scas
jmp
lods
out
mov
sub
xor
lret
adc
add
and
test
pop
loope
cmp
pop
call
xor
and
shr
add
adc
jmp
and
pop
push
mov
sub
jmp
mov
jae
adc
fisttpll
testb
insl
or
cmpsb
xlat
lea
mov
arpl
ret
mov
into
mov
xchg
mov
and
add
sbb
clc
push
mov
into
adc
roll
add
mov
mov
jge
jb
out
xor
call
fldt
ret
filds
fildl
fcoms
inc
stc
gs
adc
cmpsb
mov
and
mov
scas
rclb
sbb
inc
clc
inc
or
sub
pop
daa
fcoms
add
jae
push
sub
push
lahf
jb
pop
js
sub
or
and
pop
pop
stc
enter
sbb
add
ss
shll
push
fs
mov
scas
cli
push
dec
movsb
sbb
arpl
push
mov
arpl
in
sti
xchg
neg
push
jne
xchg
outsl
aas
xor
rorb
xor
mov
push
mov
mov
mov
sbb
xchg
push
and
push
push
inc
outsb
ds
cmpsb
rclb
jo
push
pop
in
add
clc
pushf
cmc
hlt
cmpsl
xchg
jb
xchg
mov
jae
movl
inc
fadd
not
inc
mov
xchg
fcomps
cli
or
shrl
pop
mov
push
or
push
pushf
or
sti
sbb
loopne
movl
mov
call
loope
loopne
or
pop
push
add
nop
call
adc
lret
lret
sub
call
icebp
and
enter
movsbl
or
das
inc
add
push
sub
sbb
fimuls
sub
repz
cmpxchg8b
rol
xchg
jle
ss
or
orl
cmp
in
push
xor
or
data16
fildll
ret
push
clc
insb
mov
jle
not
mov
les
repnz
xchg
cmc
mov
js
loope
stos
add
xchg
pop
rol
test
stos
xchg
dec
pusha
adc
mov
or
inc
mov
out
sub
fs
jl
pushl
add
hlt
pop
sti
cmpsb
nop
arpl
xchg
mov
dec
call
adc
int3
sub
cmpsb
outsb
mov
sbb
int
dec
inc
xor
add
add
fcomps
data16
sub
add
adcb
mov
push
jmp
mov
push
scas
mull
call
outsb
aas
push
and
cmp
jle
push
or
or
xor
js
and
je
nop
lret
loopne
mov
adc
mov
sti
push
es
pop
stos
ret
fwait
lret
jae
mov
in
stc
cmp
mov
nop
imul
lods
cmp
dec
rclb
lcall
es
test
or
pop
lahf
call
jno
std
rclb
jmp
add
mov
mov
divl
lahf
pushf
fbld
fidivl
shlb
pop
in
ret
mov
jns
stos
lret
push
add
add
add
push
add
add
add
cmp
add
add
push
add
pop
add
add
pop
outsb
inc
js
push
add
add
add
add
add
jb
add
add
add
jns
add
add
push
add
xor
insl
add
add
add
inc
add
inc
add
insl
xor
add
add
add
dec
add
add
add
pop
add
add
add
add
add
imul
add
add
add
add
add
data16
add
jne
add
add
inc
add
add
add
add
add
add
imul
add
inc
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
xor
add
add
add
jo
dec
add
add
popa
jns
add
add
add
add
add
add
je
add
bound
jne
add
add
add
add
add
add
jne
add
push
inc
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
jbe
dec
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
push
add
add
cmp
add
imul
add
add
add
add
add
add
jp
add
add
add
add
add
add
add
add
push
inc
add
dec
add
add
add
add
add
insb
add
inc
inc
add
add
pop
add
add
add
add
add
ja
xor
push
ljmp
mov
stos
in
fildl
adc
and
daa
push
hlt
es
sti
and
cld
adc
pop
sub
push
and
adc
enter
das
outsl
inc
mov
adc
add
stos
inc
mov
xor
js
push
dec
mov
fsubl
inc
mov
mov
jno
adc
aam
popa
cld
dec
enter
clc
loopne
inc
aas
cltd
lods
test
adc
push
sbb
mov
xchg
push
mov
add
iret
jb
xchg
adc
popf
jmp
push
mov
shr
mov
add
mov
and
mov
stc
push
fcmove
inc
je
adc
xchg
lock
movsl
push
cld
out
aas
push
aaa
sub
fnsave
and
and
ret
inc
push
push
cmpsb
or
xchg
pop
fstps
pop
fidivrl
outsb
adc
outsb
cmp
stos
out
hlt
xor
jle
inc
clc
js
push
leave
aam
int3
lar
in
adc
gs
ljmp
sub
scas
and
mov
adc
std
push
mov
cmp
push
xor
scas
mov
cmpsl
mov
adc
pop
popa
push
movsb
jo
xorl
lock
inc
jbe
cmp
mov
repz
push
pop
bnd
adc
push
jne
adc
lock
dec
push
ds
jl
add
inc
mov
mov
inc
mov
loopne
mov
lcall
mov
fdivrl
cmpsb
lock
sbb
jne
cmp
lea
out
add
mov
stos
or
mov
lods
shrl
lods
mov
mov
sbb
call
jnp
fisubs
inc
aad
or
call
push
aas
in
fnstcw
jnp
push
inc
xor
push
cltd
pop
adc
idiv
loop
cmp
nop
jae
add
add
ret
testl
jne
xor
and
shll
add
sub
mov
test
repz
outsl
je
js
add
pusha
mov
lock
cmpb
or
icebp
movsl
jmp
or
addb
jmp
or
mov
mov
popf
dec
push
jmp
test
sub
jbe
fwait
adc
cmp
lcall
push
mov
or
mov
inc
adc
lea
das
in
jecxz
pop
js
ss
cmp
out
daa
mov
mov
dec
pop
push
or
pop
add
add
mov
push
rcrl
mov
out
or
xchg
mov
add
sbb
mov
push
je
jp
xlat
addl
in
rol
inc
ljmp
xchg
loop
jmp
or
push
mov
pop
jmp
je
cltd
mov
sahf
jp
inc
movl
test
add
shl
push
mov
xchg
je
jl
or
jl,pn
imull
adc
sarb
sti
adc
mov
int3
jne
mov
rcl
xor
mov
add
je
inc
mov
cmpsb
ret
popa
lods
nop
add
test
mov
clc
in
loope
lea
jnp
mov
cmp
cmpsb
and
jp
xor
cmp
inc
xchg
dec
mov
push
or
dec
sbb
rcr
add
pop
rolb
pop
push
inc
lret
inc
rorb
xor
leave
mov
test
push
sub
adc
es
cmp
stos
mov
xor
push
lods
xor
cli
ds
push
pop
call
push
call
xor
xor
xor
push
pop
or
push
pop
loopne
dec
cmp
out
fimuls
inc
jno
faddl
sar
pop
push
inc
out
xchg
pop
lcall
mov
jae
fldl
pop
inc
cmp
mov
mov
jae
pop
mov
arpl
enter
shl
or
movsl
or
gs
data16
jno
les
adc
or
or
mov
fst
in
pop
ss
pop
jo
adc
mov
push
sar
or
icebp
dec
add
sar
scas
adc
xor
push
stos
incl
jmp
mov
xchg
add
push
inc
not
je
ss
jecxz
add
mov
arpl
inc
out
lcall
push
pop
lods
out
xchg
fwait
shr
lret
fsub
cmp
push
ss
mov
or
sbb
cmpb
add
add
add
add
add
push
add
add
add
outsl
add
add
add
add
add
popa
add
add
add
add
cmp
dec
add
jbe
add
push
jo
data16
add
imul
add
add
add
add
add
add
add
add
push
add
inc
add
dec
add
add
add
add
add
add
insl
add
add
add
add
add
imul
add
add
pop
add
add
add
push
add
inc
bound
add
add
add
add
add
add
dec
pop
add
add
add
add
inc
add
push
add
xor
add
xor
add
add
add
add
add
imul
add
add
jae
add
add
add
add
add
add
add
jns
add
jb
add
xor
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
add
dec
add
add
add
add
add
xor
add
add
add
add
bound
add
push
add
jae
add
add
add
add
xor
cmp
add
add
add
push
add
add
jp
add
push
xor
add
add
push
add
add
add
add
dec
add
add
data16
add
add
add
add
add
add
push
insl
add
push
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
jno
add
add
add
add
dec
add
add
add
push
add
add
xor
add
add
add
add
add
dec
inc
add
add
add
inc
add
add
add
push
add
add
add
mov
dec
mov
xchg
shlb
mov
adc
add
jae
ret
dec
mov
fimull
mov
enter
rol
push
add
sbb
stos
insl
adc
mov
addr16
add
xchg
adcl
popa
xchg
jmp
xchg
dec
mov
andb
push
adc
shlb
xchg
enter
lea
or
fcoml
in
or
arpl
mov
dec
mov
out
mov
sbbb
leave
and
fs
nop
jmp
cmp
repz
push
adc
dec
dec
roll
push
cs
andl
mov
mov
test
adc
repz
mov
movsl
mov
jg
lret
mov
xor
or
shr
pop
fwait
std
jbe
test
fdivr
data16
rcr
push
xor
adc
push
jbe
mov
int
add
ss
data16
sbb
push
mov
call
lret
jle
xchg
loopne
push
das
lock
and
mov
mov
out
mov
pusha
jnp
fs
mov
mov
jge
add
jne
mov
cmp
loopne
sub
pop
xchg
push
jnp
pop
pop
push
loopne
inc
mov
dec
in
xorb
pop
js
sbb
call
pop
dec
mov
out
repz
push
and
test
lock
pop
push
lods
pop
in
mov
push
je
cli
insb
insl
pop
push
aas
mov
or
sahf
in
add
imul
xchg
lds
jmp
mov
pop
sub
les
loopne
xor
xchg
clc
mov
stos
fbstp
imull
fs
mov
mov
movsl
lret
popa
mov
pop
lret
test
add
cwtl
add
testb
mov
xchg
shll
pop
jl
push
insb
mov
dec
pop
xchg
hlt
xor
fidivs
or
inc
arpl
call
jno
jmp
mov
je
mov
leave
push
sbb
inc
fidivs
push
fidivrs
aad
mov
mov
cmp
xchg
imul
push
addl
mov
xchg
clc
int3
mov
call
adc
cmpsb
pop
lahf
int3
and
sub
mov
movsb
dec
adc
inc
xchg
sarb
sub
loop
xor
rcrb
mov
int
xor
test
xchg
jp
aad
das
out
das
add
sbb
mov
lea
mov
pop
movl
outsl
xchg
shll
cmc
insb
jne
outsl
cmp
nop
insl
sub
dec
mov
xor
or
mov
xchg
and
jne
test
je
mov
mov
push
roll
xchg
ljmp
jae
adc
adc
test
je
inc
jmp
jmp
int3
fisubs
mov
fiadds
adc
inc
dec
cmpsl
call
int3
jmp
test
cmp
mov
shl
cmp
inc
or
test
cmp
and
or
fsubrl
enter
jmp
fwait
add
pusha
mov
jnp
sub
fsubl
fadd
js
mov
insl
xor
mov
data16
lret
mov
idivl
in
mov
das
test
addr16
loopne
push
popf
mov
mov
outsb
call
dec
ffreep
lods
dec
repz
adc
inc
leave
outsb
mov
mov
mov
cltd
push
adc
call
scas
mov
add
out
jo
aas
xor
xor
jnp
lcall
jle
pop
loope
xor
adc
xor
mov
lcall
testb
xchg
rcrb
sub
call
ret
mov
xor
jmp
stos
imul
addr16
out
mov
adc
mov
inc
scas
subl
mov
add
pop
sbb
lods
or
mov
push
mov
or
jne
mov
movsl
test
stos
inc
imul
pop
cwtl
cmp
call
fldl
or
add
adc
mov
pop
xor
lods
pop
add
lcall
jne
xchg
orb
sub
mov
sar
dec
jo
jbe
leave
fs
nop
movsb
std
xor
dec
jno
and
jmp
mov
mov
pop
xchg
adc
lods
sbb
test
or
fisubrl
push
jmp
add
jo
push
add
add
add
add
add
add
inc
add
add
add
outsb
add
add
add
add
add
jbe
add
xor
add
jb
add
add
jb
cmp
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
dec
add
inc
dec
add
add
add
add
add
push
add
add
add
add
add
push
add
add
dec
add
add
add
jns
add
add
add
add
pop
add
js
add
add
pop
add
add
add
push
add
add
add
add
aaa
add
add
js
add
add
add
outsb
add
inc
inc
add
add
add
add
add
outsb
add
add
add
add
push
add
add
add
add
add
add
add
dec
add
push
add
jbe
add
add
jb
add
add
xor
inc
add
add
xor
add
add
add
jbe
xor
add
add
push
add
add
dec
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
inc
add
jp
add
dec
add
add
add
add
push
push
add
add
add
cmp
add
add
add
cmp
add
add
add
add
pop
add
add
add
dec
add
popa
xor
add
push
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
insl
add
jae
add
add
add
shl
pop
and
mov
mov
sub
xor
xchg
or
mov
nop
lcall
notb
cwtl
outsl
rcll
ret
push
je
mov
mov
xor
mov
dec
sbb
xlat
push
mov
mov
repz
in
xchg
insb
sub
adc
addl
lods
jnp
and
cmpsl
mov
lock
pusha
loopne
jl
push
sbb
test
pop
inc
jmp
adc
insb
aaa
xchg
sbb
rolb
cmpsl
lock
xchg
mov
fnstenv
into
sub
or
shlb
sbb
or
pop
mov
aaa
xchg
mov
xchg
xor
out
cmp
dec
xor
test
cmc
insl
jmp
lds
pop
xor
movsl
stos
sub
loope
je
arpl
cmp
sahf
outsl
lret
testb
or
scas
std
in
cwtl
ds
xchg
add
pop
int3
ja
jle
data16
xchg
shlb
push
je
or
call
sbb
movl
jo
push
jbe
pop
rorb
dec
in
dec
xchg
or
lret
test
pop
cwtl
xchg
pop
push
mov
push
pop
insb
leave
jne
movsl
lock
jle
gs
ds
inc
cwtl
nop
insl
add
loopne
cld
cwtl
lret
or
push
add
pop
and
enter
dec
loopne
test
fidivrs
lock
es
xchg
jge
imul
adc
cmp
adc
in
rolb
xchg
or
mov
mov
sub
aam
push
pop
inc
jp
incb
rcrb
loop
or
add
add
adc
mov
add
inc
nop
fcompl
jmp
pop
cmc
es
cmpl
xchg
stos
scas
mov
push
pop
ret
xchg
mov
pop
cmp
pop
je
jp
leave
test
xchg
cmp
aaa
mov
mov
cld
jle
imull
fwait
into
scas
pop
scas
sub
insb
ljmp
fcomps
mov
pop
mov
or
add
dec
and
jb
adc
jmp
test
add
movsb
fdivl
dec
js
es
adc
xchg
add
jae
in
jle
inc
mov
jl
in
dec
insb
xchg
lea
mov
or
andl
out
or
sbb
or
lret
pop
les
and
mov
lahf
xchg
rcr
movsl
push
out
rcrb
xchg
jns
mov
push
loopne
sbb
mov
enter
mov
adc
lods
push
sbb
incb
call
cmpsb
add
pop
fstps
inc
xchg
jmp
out
aam
xchg
pushf
xor
fwait
nop
mov
icebp
push
xchg
cmpsb
xchg
jb
mov
mov
mov
inc
xchg
xor
loop
add
cmp
repnz
xchg
jecxz
and
rcll
sbb
jg
notb
subl
jmp
push
fidivrl
cmc
push
into
pop
add
push
insb
lret
cld
xchg
lahf
mov
or
in
outsl
fistl
inc
add
mov
push
push
call
popf
mov
lods
cmpsb
shll
sub
test
lock
loopne
xor
add
xchg
and
mov
jo
and
fsubs
cmpb
cmc
fs
pop
sbb
cmpsb
inc
xchg
inc
into
lahf
call
leave
or
and
mov
clc
adc
cmp
fs
pop
jne
xor
adc
xchg
jns
int
call
inc
xchg
inc
or
and
adc
jb
andb
mov
or
xor
jl,pn
cmp
ss
adc
sub
adc
xchg
inc
shrl
xor
mov
inc
lea
jmp
dec
les
mov
push
xchg
int3
inc
add
jne
mov
and
push
mov
dec
pop
xor
loopne
out
decb
insl
push
out
aaa
scas
push
outsb
mov
mov
hlt
pop
inc
xor
call
jl
cmp
inc
stc
arpl
mov
ret
dec
push
push
roll
fwait
mov
stc
cmp
pop
jae
mov
imul
stos
mov
fiadds
incl
je
mov
inc
jno
xchg
inc
and
xchg
jne
hlt
push
pop
jb
add
jbe
fidivrs
scas
sbb
mov
lahf
aas
mov
js
leave
lock
push
in
xchg
push
inc
cld
xchg
pop
scas
in
flds
xor
inc
mov
je
subb
push
cmp
xor
add
mov
sbb
mov
mov
sbb
dec
pop
pop
cli
xchg
mov
sahf
ficompl
lcall
xchg
fimull
enter
jle
fnstenv
mov
cmp
je
ss
mov
scas
lock
xchg
xchg
jmp
or
cwtl
call
and
movb
fxch
fcoms
dec
pop
into
frstor
adc
addr16
mov
mov
jecxz
aam
les
dec
sti
mov
pop
push
cltd
jmp
stc
sbb
aaa
add
ljmp
insb
push
cmpsl
andl
adc
imul
js
fcompl
sub
adc
mov
cltd
div
jl
or
enter
lods
dec
jo
xor
cmp
xor
jae
add
and
jmp
pop
and
xor
cli
call
pusha
adc
adc
mov
push
push
inc
call
inc
mov
call
mov
inc
shr
push
outsl
out
mov
lret
cwtl
int
fstpl
aam
div
call
or
cmc
or
sbb
push
ds
sti
fsubl
rol
mov
call
out
push
int
gs
fmuls
mov
sarl
mov
push
pop
sub
jae
mov
adc
cmp
add
fimuls
and
sar
add
incl
jb
mov
dec
cmpsl
jecxz
call
mov
sarl
inc
out
dec
cli
mov
cmpb
push
daa
mov
mov
sahf
pop
inc
outsl
sbb
dec
lds
fwait
and
hlt
cmp
pushf
enter
enter
rorl
xor
stc
dec
out
sarb
insb
loopne
sti
push
shlb
dec
or
push
movsl
mov
cmpsl
rcl
adc
out
add
lret
push
icebp
mov
sub
mov
and
fsubp
add
sahf
mov
adc
lret
rcl
mov
jo
and
mov
inc
xchg
or
repz
pop
cmp
daa
or
pop
outsl
xor
pop
mov
push
jb
std
pop
xor
lret
call
or
cmp
or
mov
mov
ret
scas
inc
pushl
jge
mov
dec
js
fistpl
inc
pop
rcr
jmp
cmpsl
xchg
add
ljmp
fs
or
push
dec
and
je
int
loope
out
jge
je
cmpsl
aas
sbb
push
or
jmp
jge
jg
je
test
jmp
mov
mov
mov
sahf
pop
add
fiaddl
push
lea
scas
mov
add
loopne
or
adc
rorb
mov
add
jne
adc
push
lcall
ja
pop
insl
into
insl
adc
and
or
call
add
rcrl
mov
add
xchg
or
sbb
dec
mov
stc
mov
mov
or
stos
outsl
or
xchg
jecxz
push
or
hlt
add
popf
sti
mov
mov
aad
adc
sub
mov
jmp
adc
cs
out
std
fs
movsl
dec
add
or
push
dec
aas
nop
call
or
and
jne
and
jbe
lret
clc
mov
mov
push
add
lods
rorl
cmc
mov
cmp
loope
dec
mov
shrl
clc
fwait
mov
push
roll
mov
or
mov
stos
shl
int
scas
add
inc
test
mov
test
es
mov
push
jae
push
hlt
cmp
nop
pop
ret
push
lods
mov
sti
lret
inc
xor
sub
into
jne
xchg
jnp
mov
inc
js
dec
push
xchg
push
call
pop
adc
push
push
adc
shlb
scas
and
rol
stos
mov
nop
xchg
or
or
fnstcw
dec
cwtl
ror
pop
mov
mov
sub
jbe
inc
sub
outsb
test
test
incb
add
scas
call
dec
mov
sub
add
mov
add
cmp
inc
fisttpl
pop
push
ret
or
pop
sub
fs
repz
aam
inc
test
push
call
push
mov
movhps
adc
sub
lret
add
nop
adc
nop
or
push
cmp
xor
in
pop
xchg
subb
pop
aas
jae
inc
adcb
fistpl
daa
out
push
sbb
pop
dec
mov
pop
outsl
jo
rcrl
cmpsl
jne,pn
bound
sub
or
fwait
pop
pop
repnz
jl
fsubs
jmp
push
stos
repnz
daa
fidivl
inc
aam
sbb
push
or
xor
imul
pop
out
xor
cld
or
das
lahf
or
mov
mulb
daa
aad
add
dec
mov
pop
shrl
cs
sub
testb
cmp
ss
sub
fidivs
inc
sbb
inc
jne
push
orl
dec
shr
xchg
push
adc
sahf
jno
dec
and
inc
jb
out
mov
sub
popa
mov
insb
mov
sbb
push
add
push
pop
fs
lds
movsb
jns
bound
in
sahf
negb
out
aad
mov
inc
xchg
clc
jge
cmp
jp
push
adc
je
jecxz
movb
xchg
aas
pop
dec
jae
pushf
pop
push
fs
mov
repnz
adc
cmp
inc
je
movb
in
or
negb
pop
and
push
mov
pop
sub
insb
es
bound
inc
adc
push
outsl
sbb
jns
inc
dec
inc
mov
xor
cltd
scas
add
inc
pop
outsl
ja
repnz
loope
and
pop
int3
xchg
pop
cli
fwait
inc
outsl
xchg
sbb
rcrb
push
jne
push
adc
lcall
push
sub
adc
shr
aam
in
jle
clc
out
xchg
pushf
cmp
push
sub
mov
adc
dec
jecxz
dec
dec
mov
push
aam
mov
js
add
mov
dec
push
xor
mov
jns
mov
test
in
dec
shlb
xchg
rorb
repnz
arpl
sarl
fbstp
data16
push
fs
adc
mov
in
jb
mov
mov
xlat
xchg
cli
mov
mov
push
jmp
lret
sbb
nop
data16
sti
xchg
push
add
and
add
mov
sub
push
dec
mov
imul
jns
je
pop
inc
outsw
jecxz
push
cmc
scas
mov
cli
iret
scas
dec
xchg
jl
pop
xchg
xlat
inc
push
push
add
xchg
add
insl
sbbb
pop
dec
ret
mov
jno
cld
and
dec
add
lmsw
fptan
insl
ljmp
cltd
sbb
cmpsb
pop
popf
inc
mull
jge
pop
out
jne
lret
jo
jmp
mov
mov
add
push
daa
dec
cmpsb
mov
ficoml
data16
push
push
xor
sbb
jg
push
dec
es
loope
in
sbb
mov
jne
dec
fldenv
inc
add
push
es
int3
add
mov
ret
or
fwait
ja
xor
dec
mov
popa
test
add
jae
push
pop
sbb
add
dec
pop
repnz
cmp
nop
or
and
lahf
lret
sbb
rorb
pop
add
and
addr16
out
incb
push
dec
dec
push
push
mov
inc
cmp
aaa
ss
xor
pop
nop
pop
xor
mov
xor
int3
andb
sbb
jo
idivl
rorb
cs
mov
inc
icebp
pop
das
pop
inc
pusha
cmp
push
sbb
mov
add
or
sbb
mov
fcomip
nop
gs
lock
sbbl
mov
sbbb
mov
xchg
pusha
sahf
lcall
aas
js
insb
lods
and
or
xor
pop
cmp
cmpsl
rorb
inc
sub
je
int
aas
lds
ds
push
jl
mov
jns
add
or
jne
dec
cmp
stos
dec
mov
or
sti
pushf
data16
push
inc
cmp
xor
lcall
and
sbb
or
dec
fs
imul
lods
add
hlt
imul
std
in
imul
popa
insl
xchg
push
inc
inc
sbb
mov
ja
inc
xor
imul
faddl
neg
push
subl
arpl
ficoms
lahf
nop
test
dec
outsb
fs
mov
sub
mov
js
aas
and
stos
repnz
mov
push
popa
cld
lds
sub
js
pop
push
mov
pusha
xor
sahf
daa
sarl
mov
xchg
aas
adc
lret
or
insl
sbbl
pop
xchg
cltd
je
call
cmp
into
pop
pop
inc
push
test
jb
neg
mov
call
sysexit
stc
sbb
sahf
pop
fstpl
and
or
mov
aas
cmp
std
rcrb
xchg
popa
jmp
push
aad
out
xor
or
mov
es
adc
loope
push
lret
ljmp
in
dec
and
call
shlb
mov
call
inc
stc
xchg
test
in
or
and
add
loopne
aad
daa
push
lds
daa
xorb
push
pop
mov
sarb
xchg
cmp
pop
sbb
fmuls
pop
es
clc
push
lret
mov
std
and
sub
and
div
loope
negl
lods
cld
xchg
mov
notl
pop
lcall
dec
mov
int
mov
test
jg
inc
movsl
mov
outsb
out
mov
cmp
aaa
mov
pop
or
push
aaa
xor
out
dec
shrl
pcmpgtd
mov
mov
call
nop
mov
sub
cmp
add
cmpsb
pop
lcall
push
in
xor
shrl
popa
pop
jmp
and
xchg
sbb
pop
sbb
fisttpll
mov
iret
adc
push
sarl
inc
imul
pop
inc
lods
jecxz
fists
lcall
repz
ficoms
mov
pop
out
pop
lods
cmpl
xchg
nop
cs
es
enter
sti
inc
sub
add
cmp
arpl
ror
inc
nop
hlt
jae
xchg
sub
mov
jo
in
lods
test
aam
cmp
sbb
xor
subb
pop
adc
and
adc
fcompl
out
jecxz
lret
xchg
orb
xchg
insb
scas
or
lock
and
sub
pusha
or
aam
mov
sub
mov
adc
lds
xchg
ljmp
out
cwtl
mov
cmp
fistpll
adc
cmp
inc
push
mov
push
push
push
jo
xchg
movzwl
mov
push
mov
test
mov
clc
out
and
andl
mov
jge
mov
cld
loopne
das
push
testb
mov
pop
push
insb
mov
xchg
adc
jge
sub
jl
push
stos
mov
ja
pop
push
idiv
push
push
xor
sub
xor
xchg
fs
ret
dec
lods
scas
push
jnp
addr16
mov
and
test
cwtl
pusha
pop
or
xchg
push
jo
test
jg
inc
imul
test
jno
lcall
or
jge
cwtl
pop
popf
or
fldl
insl
pusha
das
cmpb
mov
fwait
inc
cmpsl
stc
in
dec
imul
push
sbb
and
daa
int3
lcall
ficompl
mov
xor
lret
sub
push
negb
sbb
xchg
pop
push
xor
int3
repnz
int3
add
stc
fnstsw
pusha
inc
cmp
mov
enter
or
lahf
pop
push
lock
mov
jge
adc
jne
pop
and
ret
xor
or
dec
pop
sub
mov
pop
mov
dec
add
in
test
in
xor
or
fs
leave
push
or
iret
pop
cltd
or
test
push
mov
push
pop
int3
xor
inc
xor
or
shrl
xor
test
sub
push
jbe
rsqrtps
xor
ret
pushf
dec
mov
push
mov
stos
dec
fdivrl
popa
dec
cmpsl
in
push
je
clc
testb
divl
xchg
int3
gs
push
gs
xchg
mov
xor
mov
sbb
lcall
nop
adc
adc
dec
pop
aaa
mov
dec
pushf
les
cmp
mov
jmp
in
fs
shlb
cmp
mov
add
mov
mov
push
sbb
int3
clc
dec
inc
adc
sbb
inc
mov
mov
dec
and
sbb
sbb
xchg
inc
inc
hlt
lock
lock
gs
sub
mov
sbb
mov
or
jmp
mov
call
inc
pop
xchg
pusha
sbb
ror
add
cmpsb
ret
rcr
jmp
lea
dec
mov
pop
sbbb
cmp
push
jnp
adc
in
inc
mov
pop
lods
gs
dec
sbb
scas
icebp
repz
mov
inc
sbb
xor
imulb
lock
adc
daa
shlb
out
cmpsb
imul
fsubrs
xor
pusha
in
add
sub
dec
pop
in
iret
push
mov
mov
add
and
xchg
lods
pop
loop
lock
mov
sub
jns
push
dec
call
dec
sahf
sbb
jmp
aad
pop
ret
mov
push
inc
adc
push
or
ret
lock
icebp
push
xor
dec
es
xchg
pop
pop
lea
dec
mov
push
jo
push
push
mov
xchg
rcll
sub
sub
jmp
adc
xchg
roll
fs
xchg
add
ds
int3
loopne
ret
arpl
jno
cmpsl
subl
call
arpl
xor
outsb
pop
in
out
out
aam
js
in
add
adc
int
das
mov
mov
scas
ret
dec
sbb
jl
adc
push
sahf
jbe
inc
xchg
or
jbe
adc
mov
fidivrs
xlat
adc
mov
dec
pop
mov
mov
mov
incb
xor
inc
pop
arpl
gs
sbb
insl
dec
sub
pop
xor
sarb
or
jb
addb
push
sbb
or
and
int3
jle
sub
push
and
daa
lcall
in
sbb
stos
pop
add
int3
jg
sbb
mov
mov
pop
or
pop
pop
fsts
xchg
popa
ja
addb
nop
mov
xor
ss
fstpt
sbb
inc
push
adc
add
je
dec
push
cmc
dec
sbb
rolb
out
dec
push
add
mov
sub
xor
jne
push
fxch
cmp
cmp
add
push
rorb
xchg
test
mov
push
call
insb
pop
mov
out
sbbb
dec
fildll
jmp
bound
enter
stos
add
mov
movsl
out
xor
or
in
add
sbb
pusha
adc
pop
in
xchg
test
add
add
mov
and
mov
call
inc
dec
add
je,pt
dec
or
cmpsb
dec
pop
sub
adc
jge
call
mov
adc
push
xchg
pop
call
or
loop
and
and
fldl
incb
test
inc
mov
jg
cmpsl
xchg
pusha
jge
pop
mov
popa
movsb
cmp
movw
xor
nop
arpl
or
inc
mov
call
jae
aam
mov
cmp
loope
jp
daa
add
or
clc
sbb
hlt
insb
xchg
rorb
aaa
lea
ret
pop
call
push
mov
push
cmpsl
pop
outsb
mov
jns
adcl
add
pop
cmpsb
fadds
push
leave
les
pop
sbb
xchg
std
adc
pop
je
cmp
adc
cs
int
jno
push
cltd
pop
stos
lods
push
inc
ret
iret
cmp
pop
fcomps
lds
push
adc
pop
call
push
je
jp
jae
sti
mov
and
jb
pop
popa
xchg
pop
pop
jnp
pop
roll
mulb
push
and
or
cmpsl
neg
xor
aad
xchg
cmpsl
notl
mov
adc
lock
adc
imul
out
mov
cli
mov
ficompl
mov
hlt
es
jle
jg
xchg
and
cmc
outsl
ljmp
pop
pop
adc
xchg
push
pop
lods
test
cmc
pop
push
in
insl
mov
mov
sub
add
decb
xchg
sub
xchg
pop
jmp
subb
outsl
inc
fsubl
pop
xchg
clc
xor
std
std
push
sbb
popf
das
idiv
pop
fnop
sub
ds
leave
and
leave
jle
sub
lea
mov
push
clc
or
rorl
and
cmp
or
pop
adc
jmp
int3
jl
mov
call
xchg
pop
xor
add
js
adc
sub
loope
js
scas
ljmp
jo
xorb
push
fsubl
icebp
xchg
mov
sub
mov
stos
fnsave
mov
faddl
notl
adc
adc
addr16
lcall
lods
push
out
sub
andl
sti
aad
lea
ret
xor
mov
sbb
jmp
push
push
xchg
call
sbb
xchg
fs
andb
stos
enter
insl
stos
movl
jmp
mov
rclb
sbb
cwtl
sub
mov
inc
inc
xor
jb
mov
das
andl
daa
test
outsb
push
testb
xchg
cli
push
adc
mov
sub
add
jno
xor
xor
ficomps
dec
add
mov
call
movsb
outsb
xor
jmp
or
mov
insl
jbe
pop
mov
inc
sub
inc
push
ret
addl
mov
iret
mov
cld
mov
stos
xchg
add
cli
pop
mov
mov
fimull
stos
xchg
lret
jb
int3
addb
mov
popa
pop
ss
orl
adc
leave
ljmp
jo
cmc
pop
cli
inc
push
mov
jge
sub
or
pop
rolb
push
je
pop
xchg
jb
mov
test
aas
fistpl
int3
cmc
shll
fiaddl
sahf
into
add
fwait
jp
test
jmp
mov
lret
insl
sar
xchg
jne
ljmp
movsl
add
mov
filds
iret
fcoms
mov
mov
shll
data16
mov
mov
mul
and
out
ljmp
sub
mov
jnp
push
add
incb
mov
pop
mov
add
push
or
mov
and
push
sub
pop
lock
pushl
add
in
xchg
sbb
sbb
subl
data16
jbe
cmp
xor
add
popa
shl
repz
jnp
add
jno
cwtl
cmp
popa
mov
or
mov
in
insl
stos
sahf
xchg
scas
mov
ret
pop
stc
rolb
lea
adc
cld
bound
mov
xor
and
pop
incb
pushfw
jmp
movsl
ljmp
popf
inc
adc
dec
shlb
mov
add
adc
or
scas
ret
jmp
jbe
jge
or
sub
into
data16
cwtl
scas
add
mov
mov
nop
xor
sbb
xor
shl
xchg
mov
out
xchg
mov
dec
mov
test
aad
repz
mov
insb
pop
lret
addb
std
add
inc
loope
loopne
adcl
idivb
test
pop
sti
repnz
test
mov
adc
inc
lret
test
mov
aad
cwtl
add
xor
hlt
mov
jl
lea
ret
mov
pop
mov
add
fldcw
adc
adc
mov
enter
subl
iret
into
push
and
or
stc
outsb
xchg
aaa
mov
ret
pop
rcrl
and
jg
jns
popw
xchg
lea
inc
mov
jecxz
stos
fistpl
pop
inc
inc
xor
sbb
js
lods
add
and
data16
ret
sub
add
push
icebp
pop
push
out
movsb
push
mov
jns
imul
add
jno
add
push
add
push
add
xchg
inc
xchg
sbb
mov
dec
add
lds
test
xor
inc
cmp
jb
mov
xor
outsb
mov
lods
push
jnp
and
cmp
and
adc
test
into
sub
xor
popa
ljmp
into
xor
ficoms
shll
add
push
pop
loopne
lock
add
mov
mov
add
js
mov
cmc
xlat
add
or
jg
cs
fs
push
and
je
ss
or
cmpsb
outsb
push
push
test
xchg
nop
jbe
lahf
into
jle
stos
xchg
mov
inc
je
loop
dec
mov
lcall
loop
mov
jp
xchg
or
push
andb
inc
xchg
sbb
sbb
std
test
lock
je
add
loope
xor
in
mov
ljmp
pusha
rcll
in
add
loop
adc
pop
mov
cmpsb
es
loope
sub
test
and
push
push
mov
pop
lcall
add
dec
insb
add
mov
fistpl
lahf
inc
jne
xor
cmpb
xor
pop
add
mov
or
or
mov
notb
adc
cmp
xchg
add
es
adc
sub
dec
cld
jns
xor
add
stos
mov
lcall
xchg
lods
movsb
add
add
add
dec
add
je
add
cmp
arpl
add
pop
add
add
add
add
add
add
popa
inc
imul
add
add
xor
push
add
add
add
add
add
xor
add
jo
add
inc
add
ja
add
add
popa
add
add
inc
imul
add
add
add
push
add
add
push
dec
jbe
add
add
add
push
ja
add
outsl
add
add
dec
add
add
add
add
dec
add
xor
add
add
add
add
add
inc
add
add
add
imul
add
add
add
je
jb
imul
add
add
outsl
add
add
add
popa
dec
add
add
add
arpl
inc
add
jo
add
add
add
add
add
add
pop
push
add
add
push
add
add
add
add
add
add
add
dec
add
add
dec
inc
add
add
add
add
add
insb
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
dec
add
add
add
xor
add
je
add
ja
xor
add
add
add
jo
add
dec
add
add
add
add
add
add
jne
add
add
add
add
add
jae
add
add
add
dec
add
add
add
push
add
add
add
add
add
inc
add
add
in
mov
add
das
pop
pop
sbb
inc
or
aad
sbb
xlat
cmpsl
pop
jns
stos
mov
and
lods
jo
ror
adc
pop
lock
je
or
das
outsl
dec
stos
fmuls
enter
lock
adc
inc
cli
mov
dec
push
lahf
loop
mov
arpl
mov
mov
shl
sbb
sbb
inc
push
test
xchg
xchg
mov
and
xor
shrl
movsb
jmp
stc
inc
mov
call
lock
mov
jo
lds
push
xchg
jbe
aaa
mov
in
xchg
mov
sbb
test
stos
fistpl
xchg
jmp
leave
and
mov
call
pop
lods
mov
adc
mov
addr16
shll
mov
sbb
sbb
or
fadd
or
xchg
pop
ret
push
movsb
out
lcall
lods
mov
add
xchg
ret
lock
fs
mov
adc
or
mov
push
lea
dec
push
inc
loopne
pop
lret
push
inc
nop
je
pop
lret
mov
sub
data16
lret
scas
shl
lcall
xchg
test
jle
dec
aam
test
gs
ljmp
push
pushw
pop
mov
xchg
imulb
jp
xor
or
mov
mov
mov
push
les
push
aam
mov
push
arpl
dec
or
enter
xchg
stos
adc
icebp
add
and
adc
mov
subb
out
push
push
pop
mov
mov
mov
push
xor
loopne
push
fwait
sarb
xchg
mov
pop
nop
les
cmpsl
cmc
hlt
mov
out
push
adc
jae
jmp
mov
push
in
shlb
or
add
mov
sbb
es
lock
mov
stos
sti
pusha
mov
xchg
aam
mov
mov
cli
in
cmpsl
mov
scas
mov
and
daa
movsl
adc
pop
push
stos
push
push
lock
mov
mov
es
dec
mov
and
stos
adcb
mov
movsl
shrl
lcall
add
aas
mov
or
mov
sub
and
cmp
push
aaa
test
aam
cwtl
int
pop
pop
mov
xor
ror
cwtl
xchg
lcall
cli
lret
inc
nop
xchg
or
jns
loope
xchg
ss
push
bnd
es
sti
cs
and
push
and
aaa
xchg
xchg
sti
icebp
into
mov
ficoms
sarl
subb
push
mov
aaa
or
mov
xchg
ficoms
stos
pusha
mov
push
stos
pop
test
sub
test
push
sar
or
icebp
in
mov
mov
stos
mov
mov
mov
lock
ljmp
cmp
loopne
cmp
sbb
adc
test
shl
or
pop
xchg
scas
fucom
mov
sub
lahf
js
sbbb
cmpsb
inc
push
dec
stos
sbb
out
cli
stos
cmp
xor
or
mov
sbb
std
stos
or
or
jne
xchg
mov
subl
sub
inc
add
push
mov
js
or
cmpsb
xor
push
adc
xchg
testb
fmul
or
inc
xchg
out
mov
xor
sbb
push
add
lods
inc
pop
imul
mov
ds
pop
inc
cmp
mov
inc
movsb
stos
mov
sub
repnz
add
adc
xchg
mov
mov
cmpsb
add
inc
mov
rcr
or
nop
out
cmpsb
dec
push
rcll
dec
mov
adc
mov
or
jp
subl
mov
movl
adc
mov
cmpsb
add
hlt
inc
mov
sbb
fwait
dec
adc
dec
jecxz
mov
sbb
sbb
ljmp
dec
mov
in
nop
add
mov
add
jb
lahf
mov
xchg
pop
inc
mov
mov
or
inc
repz
ja
xchg
rclb
cwtl
pop
add
inc
dec
xor
das
jo
nop
add
add
add
imul
add
add
add
outsl
add
imul
add
add
push
add
add
add
jo
push
add
bound
add
add
insb
add
insb
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
push
add
add
xor
add
add
add
add
add
push
add
add
add
add
insl
add
add
inc
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
pop
add
xor
add
add
add
add
insl
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
jns
add
add
add
inc
add
je
add
add
add
add
add
ja
pop
add
add
push
cmp
add
add
xor
push
add
add
add
add
add
add
add
add
add
cmp
add
add
add
jp
add
add
add
jne
add
add
add
add
add
inc
add
je
add
add
add
add
add
insl
push
push
add
add
add
add
add
push
add
dec
add
je
add
add
add
add
add
pop
add
add
add
add
add
add
jne
dec
add
jne
add
jp
add
add
add
add
add
add
je
jbe
add
add
insb
add
add
add
add
add
xor
add
add
add
add
outsb
dec
add
add
add
push
add
add
jae
add
add
add
jp
add
inc
pop
add
add
add
inc
xor
add
add
add
jns
add
add
add
add
add
jno
add
add
add
add
add
add
into
and
insb
and
shll
lcall
pusha
push
push
push
mov
out
mov
xchg
out
xchg
ds
pop
mov
les
and
jmp
popf
pop
enter
inc
dec
lahf
lcall
mov
add
lea
rcl
fnstcw
lods
mov
mov
pop
xchg
test
inc
mov
jg
mov
xor
adc
xor
pop
clc
mov
out
ret
outsb
data16
lret
mov
inc
inc
push
mov
mov
ret
and
mov
aam
jg
shrl
jb
in
lods
enter
faddl
outsb
call
mov
mov
sub
xchg
or
shll
push
imul
outsl
sub
pop
scas
in
and
xor
xor
or
ljmp
rol
andb
nop
mov
fistpl
inc
rcll
sbb
stos
xchg
push
add
pop
clc
jmp
sahf
sub
pusha
mov
and
ljmp
mov
lcall
adc
es
mov
jle
and
adc
in
pushl
pop
dec
lock
mov
pop
call
xor
loop
je
mov
xor
adc
mov
leave
jne,pn
rcrb
push
sbb
jb
lods
les
mov
adc
jno
pop
push
arpl
add
aad
jge
pop
inc
nop
shrb
incb
mov
adc
shll
pop
testl
sub
test
fcoml
xchg
push
sub
out
rolb
loopne
mov
out
lods
cwtl
mov
out
rcl
sbb
add
inc
mov
push
out
dec
scas
in
test
add
sub
lock
add
mov
popf
inc
adc
sbb
sbb
jae
movsl
hlt
dec
add
dec
inc
cmp
pop
or
xchg
mov
je
jp
stc
js
sarb
inc
add
jno
jp
push
sbb
sub
daa
xor
aas
pop
pushf
adc
test
push
aad
push
imul
scas
int
mov
sti
aam
ficompl
push
xchg
pop
test
popa
push
inc
clc
aaa
ret
xor
cli
jne
hlt
data16
rcr
mov
nop
cmp
jp
nop
cmpsb
push
sti
pop
fistl
mov
pop
inc
or
test
mov
cmp
je
jecxz
fs
xor
lods
sbb
rorb
outsb
pop
mov
les
mov
scas
cmp
push
sub
ja
mov
xchg
adc
xor
and
outsb
cmp
stos
or
push
jbe
lea
and
lahf
jne
test
lods
and
push
call
lcall
add
jno
addl
lret
iret
push
movsl
inc
pop
push
jne
lea
icebp
jp
adc
int3
sbbl
cmpsb
sub
inc
dec
shr
lods
leave
mov
pop
xchg
push
push
call
mov
or
lock
cmp
xchg
mov
jp
and
push
lods
push
sub
jb
scas
mov
insb
daa
push
xchg
inc
and
lret
push
insl
push
xor
pop
dec
xor
movsb
fwait
loope
into
or
jmp
xchg
sarb
mov
lods
cmp
fdivrp
les
test
jbe
sbb
and
jns
pop
mov
jns
movb
dec
lcall
pop
xor
les
lods
or
or
pop
repz
add
or
aaa
or
sbb
push
out
out
pop
int3
cmp
pushf
fcmovnu
push
call
adc
arpl
or
mov
rcll
dec
sub
xor
inc
inc
repnz
inc
fs
ljmp
fiadds
les
pop
js
or
inc
pusha
mov
je
pop
loopne
call
add
jo
cld
pop
sbb
ret
ja
hlt
sbb
lcall
jmp
or
shll
push
pop
lcall
jle
andb
and
pop
lret
inc
ja
mov
leave
testl
fimull
hlt
sub
test
into
xor
sbb
shll
push
mov
lods
scas
call
xchg
je
sbb
inc
or
push
repz
cli
push
or
mov
test
das
outsl
lods
pusha
inc
leave
jg
pop
jle
push
nop
call
sbb
call
or
mov
mov
dec
and
cmp
outsb
stos
mov
cmp
data16
mov
daa
and
xchg
cmp
add
in
int
push
add
lret
enter
repnz
add
movsl
cli
nop
push
push
cmp
mov
orl
push
in
jb
sub
in
fisttpl
sub
stc
fsubrs
iret
data16
xor
push
rorb
push
pop
inc
addb
dec
or
fdivrl
adc
lods
fcoml
lods
inc
mov
out
int3
xchg
xor
adc
mov
jno
or
je
push
aam
ret
dec
mov
cwtl
adc
lcall
test
scas
int3
xorb
in
scas
ret
aam
sarb
add
sub
xchg
sbb
sub
mov
enter
sub
dec
nop
jle
cmp
or
jmp
mov
push
popf
arpl
mov
inc
sbb
into
outsb
pop
pop
arpl
pushw
xchg
fisttpl
repnz
cmp
call
adc
pop
pop
push
mov
xchg
or
hlt
je
adc
scas
cli
test
xor
aas
mulb
push
call
test
je
loopne
mov
push
icebp
jmp
cld
jl
push
xlat
out
pop
or
add
or
nop
mov
push
xor
pop
icebp
push
lahf
test
mov
and
push
addl
ret
xor
popa
sub
jle
sub
out
sub
into
jne
aaa
cwtl
in
add
lods
lods
add
jmp
xor
loop
std
jne
dec
adc
xor
jno
pop
dec
xor
pop
inc
lret
dec
clc
ficoml
xchg
push
lret
addb
push
push
jo
xchg
push
push
xor
cwtl
adc
mov
pop
xchg
hlt
mov
sbb
and
mov
lock
iret
mov
mov
nop
leave
pop
adc
outsl
add
je
rcll
pop
int3
jo
js
or
push
push
push
dec
or
cmp
xchg
ret
js
push
add
int3
jno
je
fsub
push
call
mov
cmp
sbb
insb
jl
cmp
or
inc
rcrl
sti
lods
nop
je
aad
in
mov
outsb
cmpsb
mov
je
push
gs
sub
mov
dec
call
push
leave
sub
out
pusha
stos
and
jle
jo
adc
push
pop
push
push
jmp
call
popa
lret
jl
pop
jo
dec
int3
repz
mov
ret
add
mov
in
fcoml
repz
jge
dec
adcb
inc
cli
mov
jno
arpl
adc
and
pop
dec
cmp
loopne
dec
mov
mov
push
shrb
and
cmpsl
mov
arpl
and
repz
cmp
or
pushf
mov
jle
and
pushf
fwait
lods
or
int
jecxz
movsb
test
push
xchg
jbe
arpl
cltd
jne
mov
lds
cmpsl
fisubrs
loopne
sahf
pop
repz
jnp
mov
xchg
int3
leave
cmp
cmp
pop
lods
test
cmpsl
movsb
sub
xor
sbb
or
shll
xchg
lods
sbb
mov
push
pop
mov
xchg
mov
mov
and
pop
stc
add
scas
adcb
loopne
xchg
pinsrw
aas
adc
or
das
stos
mov
pushf
mov
das
xor
daa
lcall
mov
into
push
enter
and
xchg
mov
je
pop
stc
jne
and
dec
cld
or
jle
add
sub
mov
pop
enter
test
xor
dec
or
xchg
call
iret
mov
inc
jns
inc
and
push
pop
adc
call
push
cmp
push
or
or
mov
add
shlb
rcr
push
rcrb
in
cmpsl
adc
dec
or
test
mov
mov
pusha
xor
push
mov
pusha
cltd
lcall
int
adc
mov
dec
int
pop
mov
mov
flds
gs
pop
mov
enter
or
adc
cmpsl
das
mov
divb
repnz
popl
sub
dec
jmp
ret
pop
stc
in
dec
xchg
andl
pop
ret
push
movsl
insl
cmpsb
push
cmp
push
adcb
adc
popa
or
and
shll
dec
shrb
pop
jne
mov
sti
mov
mov
push
aas
push
push
rcrl
rclb
jne
jp
cmpsl
push
pop
imul
cmp
orb
mov
pop
sub
cmpl
jne
pushl
mov
fiaddl
xor
mov
jge
movsb
or
pop
adc
add
add
push
andl
hlt
aaa
fsubs
mov
cld
xchg
cmp
shrl
repnz
cmp
xchg
and
dec
cltd
shlb
sahf
insl
or
shrl
mov
adc
or
out
mov
lods
mov
cmp
scas
push
negb
sub
sbb
je
cmp
inc
mov
rclb
pop
orb
dec
mov
lret
push
adc
aad
pushf
das
movb
xchg
cld
adc
es
call
dec
loop
loope
fnstenv
xlat
sbb
fcmovb
mov
xchg
xlat
xor
sub
loop
lock
mov
shll
add
or
call
imul
sahf
stos
adc
xchg
enter
adc
push
dec
or
test
insb
leave
fdivl
pop
xor
enter
sahf
or
ret
fcoml
adc
inc
add
popa
and
jmp
pop
lock
and
sub
mov
sti
mov
arpl
loopne
out
int
and
push
in
lret
test
mov
mov
sbb
data16
in
mov
ret
sbb
outsb
imul
pop
xchg
push
movsb
shl
xchg
mov
fcomps
in
xchg
dec
jae
mov
gs
xchg
ret
xor
lret
cs
aam
in
adc
or
jb
outsb
pusha
insb
sahf
adc
into
push
ss
popa
push
imul
mov
mov
cmpsb
stc
cmp
shll
cmp
ret
inc
cwtl
mov
and
stos
inc
ret
add
and
or
lods
xchg
lods
shll
adc
add
out
and
mov
sub
jb
aas
pop
and
nop
iret
lret
lea
sub
cmp
cli
jg
and
scas
lret
sahf
xor
pop
shrl
enter
inc
cmp
cmp
jge
add
data16
int3
add
fiadds
mov
mov
xlat
loopne
adc
or
adc
fcomps
add
stos
imul
add
sub
popa
popf
lret
or
mov
fdiv
dec
insb
loopne
xchg
sub
xchg
jge
push
sti
xor
sti
xor
inc
repz
or
mov
add
in
or
sub
fsub
dec
lea
aad
movl
add
sti
inc
cmp
cld
push
adc
ret
es
adc
addl
iret
fimuls
mov
lods
outsb
mov
adc
dec
int
jb
lret
push
push
mov
out
shlb
dec
mov
ret
loop
inc
icebp
adc
add
xchg
add
stc
mov
sbb
jo
mov
flds
lock
and
and
dec
xchg
jle
sub
mov
adc
push
inc
jno
add
daa
mov
or
rorl
xorps
push
sbb
mov
cld
jl
xor
aam
ret
adc
aaa
mov
sahf
adc
insb
dec
pop
pop
pop
int3
rorb
add
xchg
adc
jmp
call
xor
test
mov
cmp
cmpsb
mov
sbb
add
lock
and
and
add
rclb
or
xor
in
mov
loop
or
push
xchg
push
adc
and
fstpt
stos
stc
addb
jl
pop
loopne
shlb
jb
xchg
rolb
imul
dec
aas
xchg
xor
ljmp
lods
les
push
dec
jns
or
fidivl
add
push
push
cld
pusha
dec
or
and
stos
dec
fdivr
or
ljmp
mov
pop
and
xlat
jo
ret
mov
xchg
ljmp
movb
loopne
in
cmpsl
sub
adc
loopne
les
sub
in
lret
and
fidivl
adc
rcrl
je
iret
jb
push
adc
xor
dec
adc
lret
mov
adc
movsl
aam
or
testb
test
loop
out
ret
pop
pop
lret
or
xchg
push
ret
ljmp
nop
lods
mov
sti
xchg
int3
stos
or
dec
dec
int3
jo
jno
push
push
xchg
mull
lock
xchg
add
sti
fsubr
mov
fdiv
push
xor
adc
sbb
hlt
cld
lds
cwtl
xor
pop
sub
test
or
lock
les
cmp
mov
sub
push
mov
test
cmpsb
mov
or
xor
sbb
sarb
pop
leave
ret
mov
mov
add
xorl
loop
cmp
add
push
xor
dec
add
dec
js
add
add
add
add
add
push
add
add
add
outsb
add
add
add
add
jns
add
add
cmp
add
add
add
dec
add
add
push
dec
add
add
add
add
inc
add
add
jae
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
data16
add
pop
add
add
add
add
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
push
push
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
jo
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
add
push
xor
add
push
add
add
add
add
add
je
je
add
imul
add
inc
jbe
add
add
add
je
add
add
add
dec
add
add
add
add
push
add
jbe
inc
add
add
inc
add
add
add
popa
add
add
arpl
add
add
push
dec
add
add
add
add
add
outsl
add
add
add
add
add
add
add
jno
add
add
add
add
data16
add
add
jno
xor
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
test
mov
cmpsb
hlt
movb
adc
and
jmp
xorl
and
mov
add
cmpsb
mov
jns
inc
nop
mov
jnp
adc
cwtl
xchg
ds
adcl
mov
dec
mov
daa
ret
and
mov
push
add
mov
mov
mov
cwtl
popf
ret
and
xchg
add
jle
fmull
fimuls
adc
xchg
adc
xor
test
aam
mov
push
adc
les
fs
cwtl
sti
sbbb
pcmpgtd
les
iret
ret
or
in
icebp
lock
cmpsl
add
adc
push
cli
sub
shll
mov
into
mov
add
nop
pop
cmpsb
jae
or
jnp
or
xchg
or
stos
mov
shll
int
fldenv
repnz
cmova
repz
cmp
sbb
push
shll
mov
mov
add
enter
jl
repnz
inc
mov
or
cltd
or
aam
sti
pop
fsubrs
cmc
scas
mov
punpcklbw
mov
pusha
mov
nop
mov
inc
and
pushf
dec
test
loop
popa
mov
push
or
ret
orb
lret
test
sahf
in
repz
ds
les
and
aaa
lret
lret
lds
jbe
jg
mov
or
mov
in
stos
fldl2e
push
shlb
add
cwtl
pcmpgtd
icebp
sub
ret
mov
push
sahf
insb
or
inc
cli
jle
cli
xchg
repz
movsl
scas
mov
pcmpgtd
jo
loopne
out
sahf
add
mov
stos
stos
enter
cmc
mov
or
bound
xchg
or
out
scas
lret
xor
mov
xchg
add
pushf
int
test
into
stos
adc
test
dec
enter
lock
or
testb
or
in
cli
push
push
rcll
xchg
cli
or
nop
and
or
xor
or
enter
xor
pop
les
mov
mov
sarb
dec
mov
enter
mov
mov
mov
fisubrl
xor
push
das
stos
loopne
or
sahf
lock
sub
das
mov
inc
mov
in
mov
ljmp
iret
add
imul
or
nop
xchg
in
xchg
stc
or
mov
ss
sub
rorb
lret
cltd
inc
xor
loope
inc
loope
inc
loopne
push
sbb
lret
or
stos
push
push
jns
mov
aaa
repz
leave
stos
mov
add
sbbb
lock
mov
adc
inc
add
movsl
mov
add
pusha
into
cli
and
cmpsb
mov
inc
pop
mov
inc
cmpsb
add
dec
mov
push
or
push
fadd
dec
sub
js
dec
lods
xchg
lock
mov
mov
in
or
ljmp
hlt
into
ljmp
mov
jl
add
cmp
cwtl
stos
dec
xor
sbbb
dec
pop
daa
lds
adc
arpl
icebp
into
xchg
rorb
enter
loope
inc
fwait
lcall
cltd
fiaddl
stos
sarb
arpl
pop
adc
inc
or
lea
sti
clc
pushf
mov
mov
jle
mov
dec
xchg
cs
xor
pusha
xor
bound
imul
outsb
addr16
inc
inc
push
mov
pop
cmp
scas
mov
outsl
pop
push
cmp
arpl
xor
xchg
mov
loop
cs
add
pop
lea
jns
int3
insl
mov
dec
jb
push
add
mov
insl
jo
gs
sahf
inc
dec
dec
fists
inc
ljmp
mov
outsb
mov
ja
test
push
xor
rcr
popa
push
aas
mov
outsl
jae
jg
xchg
dec
inc
ror
and
inc
add
outsb
test
sub
sub
mov
ss
cld
jecxz
inc
inc
aaa
and
xor
mov
sbb
push
std
add
gs
sub
jl
imul
inc
sub
sbb
fldl2e
and
pop
adc
inc
loope
or
or
dec
add
add
xor
add
outsb
add
add
dec
add
add
add
inc
js
push
add
add
add
add
add
add
add
add
add
data16
add
jne
add
add
add
push
add
add
add
add
jp
add
add
inc
add
xor
add
add
add
add
add
add
add
inc
add
inc
pushw
add
add
add
push
add
jbe
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
outsl
push
push
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
inc
add
inc
add
add
add
add
outsb
inc
outsl
add
jno
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
outsl
add
imul
add
add
add
dec
add
inc
add
add
jne
add
arpl
add
add
add
add
add
push
add
add
add
add
add
add
inc
jae
add
add
add
add
jb
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
dec
cmp
add
add
add
add
add
add
add
push
add
add
add
add
push
add
dec
add
add
add
popaw
add
add
push
add
add
xor
add
jbe
outsb
fbstp
push
or
cmp
mov
sbb
sub
push
add
push
pushf
lods
inc
cs
rcr
insl
subl
push
or
mov
xchg
mov
cmp
mov
adc
fwait
mov
popf
and
add
stos
and
loope
icebp
jl
sub
pop
add
jle
test
push
add
xorb
bound
in
adc
test
add
dec
push
jae
dec
ret
and
dec
mov
xorl
subb
mov
push
adc
xchg
js,pn
shlb
popa
repz
inc
dec
or
xchg
aad
xorl
js
mov
and
in
push
jge
push
notb
adc
sbb
js
icebp
push
and
add
add
je
shrl
hlt
gs
push
dec
cmpl
leave
fidivs
shlb
xchg
and
loop
sbb
enter
js
loope
dec
fwait
pop
add
mov
std
dec
test
insl
mov
mov
repnz
cmp
pop
xlat
ret
lods
orb
data16
cmpb
mov
add
sub
test
lret
inc
and
inc
clc
jnp
dec
pop
es
mov
ret
imul
shr
ja
cmp
xchg
add
fldcw
or
mov
add
xor
jp
and
xchg
sub
cmp
and
mov
mov
and
stos
mov
mov
lds
add
insl
add
xchg
call
lods
mov
xor
cmp
sub
inc
leave
sbb
lahf
mov
xor
or
add
push
ja
js
orb
jne
jp
mov
jg
inc
stos
mov
jge
add
or
xor
es
and
stos
xchg
xor
lcall
orl
les
andl
sbb
pop
xchg
inc
test
sbb
mov
add
call
mov
int3
lds
movsb
roll
jno
je
lea
loopne
repnz
jp
cmpsl
xchg
inc
mov
xchg
dec
mov
push
xchg
xor
dec
in
pop
jl
sbb
jb
mov
dec
add
jecxz
dec
mov
pusha
fcoml
lcall
je
cld
imul
xchg
and
add
jle
dec
daa
mov
mov
dec
xor
sbb
popf
add
adc
xchg
cmp
sbb
mov
in
lret
ret
inc
test
lods
lods
mov
xor
lret
lcall
xchg
stos
add
pop
and
sbb
add
sti
outsl
int3
test
sbbl
xorl
mov
pushf
add
aam
push
jns
insl
int3
enter
push
jle
and
into
or
add
jl
mov
jno
shlb
sbbb
cs
xchg
add
mov
pop
jl
jno
xor
jecxz
stos
jns,pn
and
push
add
pop
sbb
jnp
mov
dec
lcall
int
adc
je
xchg
sbb
inc
loop
sbb
mov
push
xchg
insl
sti
xchg
mov
stc
outsb
lcall
pop
mov
xor
pop
mov
mov
push
mov
mov
adcb
or
sub
jmp
sbbl
mov
mulb
sahf
adc
adc
dec
sub
inc
xor
xchg
aam
mov
and
dec
add
pop
inc
pop
cmp
loop
dec
mov
lcall
jmp
ja
xchg
xchg
inc
mov
xchg
aad
testl
nop
into
imul
dec
lahf
dec
inc
pop
push
jnp
sbbl
sbb
dec
scas
jle
enter
insb
and
add
push
xchg
iret
dec
mov
pop
mov
add
cmp
add
dec
jge
pop
xlat
insl
xor
mov
mov
test
ljmp
fiadds
repz
or
push
mov
mov
cmp
enter
xchg
aaa
leave
add
mov
repnz
and
lahf
dec
adc
sub
mov
cmp
shlb
push
sbb
adc
rcl
adcb
mov
dec
iret
xchg
test
rclb
sbb
jns
mov
int
sub
mov
fsubl
inc
and
test
push
xlat
xlat
xchg
mov
pop
pop
shlb
fadd
mov
popa
xchg
aaa
mov
test
or
and
cmp
pop
push
ret
in
icebp
divl
out
fidivrl
inc
dec
xchg
rcrl
add
ds
mov
push
insb
test
cli
cld
add
sub
addr16
mov
sub
sub
dec
repnz
pop
cltd
cmp
or
and
int
ja
loop
push
nop
call
sbb
mov
dec
xor
in
cmp
sub
loope
xchg
call
and
sarb
stos
lock
ja
add
pop
test
cmp
mov
movsb
test
clc
mov
sbb
lods
xchg
cmp
push
xchg
imul
add
xchg
adc
xchg
in
jp
cmp
jmp
and
dec
adc
sub
adc
mov
lea
rolb
cmp
gs
pusha
ljmp
enter
sub
icebp
cltd
xchg
mov
sbb
pop
into
les
jns
std
sub
fdivrs
sahf
mov
call
lea
sbb
test
cmp
int
dec
mov
rolb
mov
mov
push
data16
inc
pop
aad
cmp
pop
leave
pop
mov
adc
fdivs
or
xchg
out
sub
dec
sti
cld
cmpsl
gs
sbb
adcl
mul
lahf
mov
cmp
xor
sbb
fsub
movl
adc
pop
fcompl
pop
popf
int3
adc
movl
daa
mov
fistpll
insl
jnp
imul
mov
pop
inc
aas
adc
dec
xor
pop
clc
test
sbb
cld
inc
mov
call
mov
andl
fimull
aaa
pusha
aam
out
popw
jne
rcrl
and
test
je
bound
mov
adc
add
xor
push
cmpsl
cs
mov
add
adc
cmp
das
add
dec
pop
push
pop
stc
and
mov
incb
pop
sub
mov
ljmp
sub
ss
or
jle
xchg
mov
or
xor
pushl
aam
aas
daa
jmp
subb
orl
jo
or
and
and
and
cli
jo
lea
call
test
xchg
negl
cmp
jne
xor
mov
or
ja
dec
call
jbe
cmpsl
int3
mov
mov
nop
shll
jb
cmp
test
jl
sbb
ret
sub
int
or
aas
shll
mov
jbe
and
fdivrs
add
inc
push
cmp
sbb
outsb
push
push
rorl
xchg
cltd
push
mov
and
sbb
or
shrb
enter
aad
cmpb
mov
add
jmp
mov
hlt
adc
jecxz
lret
test
add
cld
je
cmp
test
sub
call
xor
cmp
ja
jb
in
adc
add
sbb
iret
call
xor
xor
jecxz
sbb
or
jg
mov
dec
mov
pop
or
movsb
lret
mov
push
lock
xchg
aaa
mov
or
lock
jne
mov
jmp
xchg
or
repz
iret
adc
lea
jno
fs
dec
movsl
dec
in
sub
dec
in
push
call
xlat
xchg
add
mov
pop
mov
jne
add
pop
dec
dec
pushf
push
call
in
and
push
mov
dec
or
jbe
push
lods
cmpb
add
cltd
cmc
push
and
sbb
dec
nop
jmp
shl
mov
lea
add
and
xor
imul
or
adc
dec
faddp
ja
push
jl
ja
daa
push
dec
sbb
mov
inc
or
imul
pop
xchg
cmp
je
add
out
pop
mov
fistpl
incb
test
push
jg
mov
test
sub
cmp
test
cmp
jne
xor
cltd
or
mov
jle
jg
sahf
movsb
outsb
outsl
imul
push
or
arpl
mov
xchg
xchg
jg
stos
test
dec
mov
lock
ret
ljmp
inc
stos
out
shlb
add
add
add
add
add
add
add
add
add
cmp
add
push
add
popa
add
jae
add
dec
add
xor
add
add
add
add
add
xor
add
add
add
add
add
add
inc
add
imul
inc
add
add
add
add
jp
add
xor
add
cmp
add
add
xor
add
add
jb
add
add
add
add
push
xor
xor
add
add
add
add
add
pop
insb
push
add
add
add
add
push
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
push
insb
add
add
add
add
jo
add
je
add
add
dec
add
add
inc
add
add
add
dec
add
add
add
add
aaa
add
add
add
add
inc
add
add
cmp
add
add
dec
add
je
add
add
outsb
add
add
add
add
add
add
add
jns
add
add
add
push
add
add
add
add
add
add
add
add
add
je
add
push
add
add
add
add
aaa
add
data16
add
add
add
jp
add
add
dec
push
add
add
add
add
add
add
jp
add
jb
add
popa
add
add
add
add
add
add
dec
push
add
xor
add
push
add
add
add
add
add
add
inc
add
add
add
add
mov
add
jmp
repnz
pop
repz
inc
popf
pop
mov
push
mov
je
pop
sbb
loopne
sidtl
into
push
nop
decb
dec
xchg
ror
stos
mov
xchg
add
and
jo
pop
mov
mov
lea
popa
call
mov
pusha
xchg
dec
add
nop
mov
je
js
stos
outsb
pop
jmp
mov
jb
fs
je
test
cmp
inc
stos
test
movsl
mov
or
jg
adc
xchg
outsb
les
idivb
ror
xchg
cmpl
xor
add
add
inc
and
mov
xor
mov
rolb
xor
jmp
lcall
mov
lea
mov
add
mov
mov
call
pop
out
mov
pop
lock
mov
mov
in
push
mov
mov
adc
dec
movsb
out
mov
fwait
inc
mov
adc
mov
pop
mov
fwait
pusha
mov
adc
out
mov
fwait
mov
mov
aam
mov
fcomps
rol
loopne
enter
shlb
in
or
loopne
lock
test
sbb
xchg
sub
shlb
xchg
inc
or
mov
insb
push
je
aas
mov
xchg
mov
cmp
push
movsb
jg
mov
xchg
int3
or
fsubl
mov
or
mov
and
outsl
mov
sub
daa
xchg
or
mov
or
and
adc
shll
sbb
cmp
out
mov
fwait
dec
mov
rcll
adc
sub
pusha
mov
fwait
push
jo
cmp
orb
mov
inc
add
mov
dec
dec
out
mov
fwait
mov
hlt
mov
cmp
rclb
xchg
and
sub
xor
cmp
inc
mov
mov
mov
pop
jl
jle
jp
jb
arpl
push
shrb
ret
or
pop
test
cltd
rclb
fsubrs
mov
push
fwait
clc
mov
bound
shll
js
adc
jl
sbb
roll
out
mov
fwait
nop
mov
rcll
out
mov
fwait
mov
movsb
mov
jo
lods
mov
fwait
mov
addb
mov
nop
mov
out
lea
mov
cmpsb
mov
cld
xchg
add
or
adc
rcrb
xchg
sub
xor
cmp
inc
xchg
dec
mov
pop
mov
je
jl
test
pushf
cmpsl
adc
movsb
xchg
test
iret
les
mov
int3
out
mov
fwait
enter
rcl
fcoms
loopne
fsub
call
mov
add
clc
mov
in
mov
fwait
lock
add
hlt
mov
sub
cld
mov
cltd
subb
cmp
mov
or
push
mov
stos
xchg
movsl
fcmove
xchg
aam
mov
push
jge
jl
jle
sahf
pushf
xchg
push
stos
add
rorb
xchg
sbb
and
sub
xor
cmp
inc
push
rorb
in
mov
pusha
rorb
mov
push
mov
mov
je
shlb
mov
sub
add
mov
mov
ret
push
sahf
mov
addl
movswl
push
push
push
push
xchg
push
call
mov
es
mov
or
mov
or
mov
and
cli
loopne
cmp
call
mov
push
dec
mov
inc
dec
scas
cmp
lods
mov
mov
sbb
test
adc
subl
les
gs
add
mov
mov
sub
mov
mov
add
and
call
les
mov
sahf
pop
enter
nop
mov
cmp
jne
testl
pushl
inc
mov
mov
sbb
ds
stc
je
sbb
aaa
push
cmpsl
test
add
call
cli
add
xor
incl
add
mov
loop
jb
mov
push
xchg
and
mov
in
mov
and
add
rorb
mov
ret
movl
add
adc
fimull
sbb
stc
nop
int
inc
push
or
adc
jno
into
movsb
and
or
clc
pop
cmp
into
movsl
int3
adc
cli
sbb
adc
pusha
adc
call
cmpsl
lret
stos
or
shr
jnp
mov
aaa
cmp
imul
xchg
es
add
mov
aam
pop
and
or
enter
arpl
or
push
sub
pop
or
aaa
sti
mov
mov
push
or
lds
mov
outsb
pop
inc
inc
or
cmpsl
nop
out
mov
adc
jne
fisubs
in
add
cmp
rcll
sahf
call
cmpsb
movl
popa
jb
push
xor
push
insl
out
outsl
ja
push
add
lahf
ret
leave
notl
pop
lods
push
movb
popa
sbb
das
jno
insl
pusha
clc
xchg
mov
call
aas
daa
fldenv
loopne
inc
mov
data16
xor
cmp
mov
add
mov
popa
ss
push
inc
stos
jmp
mov
pop
add
decl
sub
push
xor
sub
adc
sub
push
decl
add
ret
add
adc
inc
pop
cmp
mov
lea
sahf
mov
or
mov
movsb
inc
cmp
or
inc
cld
dec
sbb
rcrl
adc
push
mov
xchg
adc
ret
mov
or
push
aam
lret
popa
inc
push
outsl
dec
pop
mov
mov
icebp
sbb
xchg
sub
adc
mov
mov
dec
pop
test
aas
mov
add
mov
lods
ret
hlt
mov
mov
xor
add
add
mov
mov
pop
dec
inc
sbb
jne
cmp
mov
nop
data16
sbb
push
cmpsl
sbb
mov
mov
shl
ja
mov
push
call
xor
icebp
sbb
inc
pop
and
nop
popf
push
xchg
inc
aaa
or
in
test
in
cmc
scas
cld
and
push
rcll
test
shlb
leave
and
jae
mov
ljmp
sub
cld
xchg
nop
ds
push
push
jae
xchg
rcr
outsb
lds
and
call
data16
int
jo
or
or
ffreep
test
add
pop
sbb
bound
loop
push
inc
into
movsb
jae
aas
mov
imul
xor
mov
mov
daa
rcll
push
pop
sbb
arpl
adc
out
add
xchg
mov
or
roll
sub
dec
pop
inc
dec
jmp
xchg
lds
ud0
pop
test
insl
xchg
repnz
repz
mov
push
sbb
push
jle
je
adc
scas
cltd
cmp
sbb
mov
call
cmp
ss
bnd
push
jecxz
pop
cmp
sub
push
jge
dec
mov
dec
rolb
dec
mov
dec
pop
testb
cmp
sub
push
aad
or
or
cmp
pusha
sti
enter
xchg
fsts
cmp
cld
cmpsl
dec
sub
xor
jo
int
leave
mov
mov
call
cld
cmp
test
pop
push
cmpsb
inc
mov
add
test
mov
movsb
jnp
inc
push
mov
or
repnz
mov
mov
cmpsl
fmuls
fcmovnu
lock
xor
push
mov
test
pusha
xor
xchg
xchg
movsl
outsb
push
or
mov
outsb
lods
sbb
sbb
leave
cmp
movl
addr16
jae
sbb
xchg
mov
xor
pop
sahf
dec
cli
jns
jb
test
sub
mov
add
pop
adc
leave
lods
cmp
pop
mov
adc
mov
mov
and
pusha
xor
fs
sub
fstl
and
fwait
sub
push
cmp
push
dec
hlt
dec
imul
pusha
fdivrs
xchg
and
push
jl
fisttpll
dec
xor
loop
leave
mov
adc
leave
pop
aaa
out
fwait
mov
lods
pop
inc
iret
xor
dec
outsl
mov
movsl
test
fnsave
lret
jecxz
cld
lds
xor
jg
jae
or
xlat
inc
daa
in
test
shl
icebp
push
adc
and
push
pop
jp
cs
lret
add
dec
inc
lods
and
insl
cmp
fwait
lock
jae
push
add
mov
or
out
lea
dec
js
xlat
xchg
mov
fwait
xor
data16
jmp
in
std
xchg
test
add
add
cmpl
das
inc
or
loopne
int
mov
or
sub
add
popfw
cld
inc
pop
ret
sub
repnz
hlt
or
imul
enter
inc
inc
xor
pushf
add
pop
push
sub
xor
dec
add
sbb
xor
outsl
mov
cmpsb
pop
int3
in
std
sub
andl
jge
mov
leave
mov
pop
out
ret
adc
enter
xchg
arpl
add
xor
xchg
js
test
cltd
or
loope
popf
fisubrs
lcall
andl
cmp
cmp
roll
mov
sub
push
cmp
cmp
mov
mov
xorb
repnz
pop
dec
sbb
and
je
idivl
lea
test
adc
sahf
add
mov
in
imul
nop
andb
ljmp
mov
aaa
adc
add
inc
push
int3
add
aam
xor
shrl
or
movsl
mov
pop
add
lods
adc
add
push
jmp
mov
dec
cmp
addr16
push
and
sub
mov
jo
pop
add
xchg
insb
pop
lahf
xor
cli
mov
dec
push
pop
dec
mov
sub
fldcw
dec
aam
std
ss
test
pop
xchg
push
div
xor
push
sbb
add
rolb
jb
lret
scas
push
ljmp
cmp
or
or
hlt
mov
push
mov
push
push
mov
frstor
mov
sub
adcl
divl
push
lret
sbb
mov
call
add
nop
sbb
sub
popa
mov
mov
inc
adc
outsb
rcrl
mov
scas
or
xor
addr16
fsubs
sub
mov
xchg
fcmovnb
jmp
daa
sub
push
add
dec
adc
lret
adcl
or
jp
mov
movsl
sbb
outsb
add
add
add
cmp
ja
mov
sub
popa
xchg
dec
add
stos
pop
cwtl
mov
pop
push
rol
xor
push
shl
add
dec
xchg
cmp
jo
stos
add
icebp
cmp
jbe
cmpsl
sub
pop
lret
testl
hlt
xchg
jae
mov
inc
ja
push
add
rcrl
lds
ss
fildll
mull
xchg
int
inc
cmpb
mov
mov
clc
pop
fmull
aam
imul
xchg
xchg
lea
js
out
sahf
lret
nop
push
xor
test
mov
mov
rcr
or
nop
in
mov
lret
xor
cmp
dec
je
mov
les
or
aam
cld
out
call
nop
cmp
push
lret
andb
int3
nop
loopne
cld
les
adc
dec
pop
or
test
mov
hlt
or
push
add
nop
sub
pusha
mov
or
nop
loopne
hlt
movb
sbb
cmp
or
lret
fsubl
out
sbb
mov
or
push
cmpsb
pusha
lret
andb
les
cld
cmp
cmp
inc
nop
push
cmpsb
pusha
lret
mov
or
nop
lock
or
mov
push
nop
or
lret
int3
mov
or
xchg
add
adcb
lret
inc
mov
or
andb
mov
or
lret
call
add
sbb
or
lret
xor
inc
dec
push
cmpsb
movsb
lret
shlb
ret
or
nop
pusha
cmpsb
mov
mov
sbb
and
pusha
lret
pushf
mov
or
add
push
cmpsb
insb
lret
cwtl
mov
or
nop
in
stos
mov
xor
sbb
inc
and
sub
inc
adc
dec
push
pop
or
push
adc
mov
cmpsb
loopne
hlt
cmp
sbb
sub
adc
add
and
adc
sbb
sub
xor
cmp
dec
nop
push
cmpsb
pop
lret
push
in
or
pop
rorl
int3
lret
aam
loopne
lock
or
pop
push
mov
push
adc
int3
or
nop
loopne
hlt
or
mov
adc
cmp
cmp
or
push
cmpsb
pop
lret
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
.byte
.byte
cli
.byte
inc
