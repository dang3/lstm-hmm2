jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ss
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movb
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
movl
mov
mov
mov
push
mov
push
call
push
push
lea
push
call
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
incb
cmpb
jne
mov
pop
ret
add
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
push
push
lea
push
call
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
push
push
lea
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
mov
pop
ret
add
xor
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
in
add
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
mov
cmp
je
jmp
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
xor
divl
test
jne
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
mov
cmp
je
jmp
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
mov
cmp
je
jmp
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
mov
sub
mov
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
push
mov
mov
xor
call
mov
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
mov
mov
mov
call
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
push
mov
mov
xor
call
mov
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
lea
mov
push
jmp
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
sub
add
add
mov
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
mov
mov
movl
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
mov
pop
ret
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
fidivrs
and
mov
cld
push
fidivrs
cli
fnstsw
mov
cld
pop
insb
pusha
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
in
jne
xor
cmp
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
dec
mov
repz
mov
add
mov
je
clc
dec
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
dec
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
dec
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
dec
mov
cld
cld
cld
pop
hlt
dec
mov
repz
mov
out
hlt
dec
mov
clc
dec
mov
or
cld
cld
pop
repz
mov
hlt
dec
mov
dec
mov
int
pop
repz
mov
dec
mov
out
hlt
dec
mov
dec
mov
repz
mov
je
clc
dec
mov
hlt
dec
mov
clc
dec
mov
out
repz
mov
clc
dec
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
dec
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
movl
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
mov
mov
call
mov
cmpl
je
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
mov
cmp
je
mov
subb
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
xorb
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
incl
mov
cmp
jne
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
mov
call
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
mov
mov
mov
xor
mov
mov
cmp
jne
call
add
cmp
jne
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
movb
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
mov
pop
ret
mov
push
mov
add
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
call
lea
mov
pop
ret
mov
push
mov
add
movl
mov
mov
mov
push
mov
push
call
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
cmp
jbe
xchg
lea
lea
lea
xchg
mov
mov
xchg
mov
mov
lea
mov
lea
xchg
dec
inc
inc
mov
mov
inc
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
push
call
mov
call
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
mov
pop
ret
add
xor
xor
xor
xor
xor
aaa
add
cmp
cmp
xor
cmp
add
add
xor
xor
xor
cmp
xor
xor
aaa
xor
add
cmp
xor
cmp
xor
xor
xor
xor
cmp
add
add
aaa
cmp
xor
xor
add
cmp
xor
cmp
xor
add
push
outsb
push
inc
jae
fs
insb
and
add
add
jae
mov
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
movl
mov
mov
push
push
push
call
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
movl
movl
mov
push
mov
push
push
call
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
movl
mov
mov
mov
push
mov
push
call
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
movl
mov
mov
push
push
push
call
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
movl
mov
mov
push
push
push
call
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
movl
movl
mov
push
mov
push
push
call
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
movl
mov
mov
push
push
push
call
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
movl
mov
mov
push
push
push
call
cmp
jns
xchg
mov
mov
mov
inc
inc
mov
mov
lea
xchg
mov
mov
xchg
lea
mov
xchg
inc
dec
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
mov
mov
lea
mov
lea
mov
xchg
inc
dec
inc
mov
mov
inc
dec
mov
xchg
xchg
mov
inc
dec
je
lea
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
mov
lea
mov
mov
xchg
xchg
mov
mov
lea
mov
dec
dec
dec
jne
dec
dec
lea
lea
mov
inc
inc
movl
movl
mov
push
mov
push
push
call
mov
mov
lea
lea
mov
mov
mov
lea
xchg
lea
dec
dec
jne
lea
mov
mov
lea
lea
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
mov
inc
inc
dec
mov
xchg
inc
mov
mov
lea
mov
mov
xchg
mov
mov
inc
dec
je
xchg
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jl
dec
dec
inc
inc
dec
inc
cmp
jle
mov
lea
lea
mov
mov
mov
lea
dec
mov
xchg
inc
inc
inc
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jo
mov
mov
xchg
lea
mov
xchg
mov
dec
jne
mov
lea
mov
xchg
mov
lea
dec
inc
mov
mov
mov
lea
call
lea
cmp
jl
lea
lea
lea
mov
xchg
mov
dec
mov
dec
dec
inc
mov
xchg
mov
lea
mov
inc
inc
ret
xor
cmp
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
add
xor
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
add
add
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
xor
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
lea
add
stc
add
and
outsl
sbb
les
add
xor
jmp
add
imul
fmuls
out
push
ja
clc
aaa
mov
mov
push
mov
add
mov
mov
cmp
and
adc
iret
sti
pop
cltd
add
int3
or
xor
icebp
add
dec
xor
hlt
decb
pushf
aam
inc
mov
add
xor
and
mov
dec
imul
add
jae
mov
aam
add
add
jo
jno
add
sbb
imul
xor
add
add
add
add
jo
add
test
adc
dec
or
jge
stos
add
jb
mov
add
mov
imul
jbe
in
add
add
jnp
inc
aas
add
xchg
jle
insb
fsubrp
mov
lea
add
add
jb
inc
and
ret
adcb
push
mov
jne
sti
lret
add
repz
lret
add
add
pminsw
add
dec
xor
daa
ljmp
or
scas
arpl
mov
sbb
adc
mov
pop
cmp
inc
cmpsb
add
loope
xor
sub
outsb
adc
lahf
daa
mov
pop
mov
cwtl
mulb
mov
mov
imul
add
push
xchg
adc
pop
sub
shll
sub
hlt
add
add
add
add
add
mov
add
push
add
add
pop
notl
mov
test
push
js
add
repz
imul
popa
movsb
sar
int3
cwtl
jg
xchg
sbb
in
es
mov
pop
mov
sbb
sbb
pop
lods
adc
cmpsl
ljmp
add
push
add
mov
orl
sarb
mov
jmp
clc
pop
and
clc
loope
push
mov
out
lock
lods
add
clc
add
push
sub
inc
sub
sub
mulb
add
cmp
xor
add
add
adc
pushf
add
add
cmp
das
test
rcl
test
mov
add
sub
dec
sub
dec
cmp
ret
xlat
sub
xor
sahf
cwtl
add
sub
add
jecxz
outsl
pop
add
inc
fidivs
movsb
xor
add
add
xor
ds
jno
jne
add
shll
pop
popf
jns
lcall
fistps
add
xchg
jecxz
add
fs
add
add
and
add
mov
popl
add
jmp
mov
pushf
add
push
inc
loopne
push
jnp
push
add
pusha
xchg
pop
iret
add
add
adc
xor
aaa
scas
and
pop
inc
dec
repnz
scas
sbb
pop
cwtl
aad
or
add
inc
adc
add
ja
stos
add
ja
sub
lds
out
in
add
popf
mov
add
call
rorl
add
jmp
arpl
lea
pop
add
test
mov
add
mov
cmp
mov
sbb
jg
fdivrp
cld
cmc
push
add
add
movsl
pop
inc
push
adc
add
push
adc
add
add
add
mov
sbb
rolb
mov
loopne
add
add
out
sbb
sbb
inc
lods
ficompl
enter
add
push
add
jmp
add
fs
jge
call
into
or
add
sbb
mov
inc
sarb
loop
add
pop
add
aaa
add
test
shr
cs
mov
shll
dec
xchg
inc
jl
cltd
cmpsb
jns
popf
in
pop
add
test
cltd
push
add
loope
mov
sub
add
cmp
xchg
ds
mov
rorb
orb
pop
test
clc
adc
add
jmp
xor
mov
pop
cli
mov
sub
or
lahf
lcall
repnz
or
sub
mov
adc
inc
xor
jg
inc
push
mov
insl
ret
mov
push
mov
scas
xor
push
mov
xor
fdivs
lahf
fdivp
inc
sub
lret
popa
shl
stc
mov
ds
sahf
clc
shrb
xor
outsl
subb
loop
dec
mov
inc
pusha
pop
fs
cmp
into
cmp
jmp
sbbl
sub
sub
int3
sub
push
rorb
pop
bound
adc
loopne
imul
jns
shl
mov
lods
xor
xor
xor
ret
frstor
jae
mov
mov
push
sti
test
mov
gs
cmp
nop
lahf
pop
inc
dec
inc
jns
inc
and
test
ljmp
sbb
call
leave
sahf
lods
pop
sub
das
adc
mov
add
roll
loope
sbb
or
pop
jb
inc
add
insl
shlb
insl
jecxz
inc
repnz
xchg
js
lea
pop
cwtl
sbb
mov
arpl
mov
rep
subl
mov
inc
test
inc
or
comiss
mov
cs
cmpb
cmp
dec
imulb
or
into
and
lret
icebp
data16
cld
xchg
cmp
inc
lods
fimull
xchg
cmp
mov
or
add
ret
aam
sbb
cmp
dec
xchg
mov
and
lods
xchg
repz
ljmp
mov
inc
mov
mov
sbb
push
cltd
paddd
rolb
dec
and
cltd
xchg
or
test
inc
pop
push
mov
mov
xchg
mov
pushf
ror
lds
pop
les
stos
popf
xchg
shll
inc
push
mov
xor
jmp
or
adc
xchg
mov
pop
adc
divl
les
jne
inc
xor
sub
pusha
loop
out
pop
ds
lret
add
jns
mov
icebp
jmp
bound
mov
xchg
lock
mov
repz
addr16
sbb
shrl
mov
adc
mov
imul
cmp
fcomip
mov
jmp
xor
mov
push
sub
push
lret
add
nop
mov
and
insb
sarl
fmull
jp
inc
mov
and
iret
cmc
int3
nop
ret
pop
inc
notb
jae
outsb
in
dec
jge
popf
negl
push
mov
call
xchg
aas
dec
mov
imul
scas
jb
xchg
push
add
fucompp
mov
mov
mov
inc
fistl
arpl
aas
je
adc
or
loopne
dec
aaa
xor
and
sbb
imul
mov
xchg
pop
fidivl
js
dec
andb
or
and
jmp
movsb
lds
pop
push
in
and
pop
jge
test
enter
daa
popa
and
jno
and
jmp
cwtl
push
cmpsl
sbb
xor
add
pop
push
fcoml
push
test
dec
add
inc
or
xor
inc
movsl
bound
cmpsb
in
pop
adc
mov
in
mov
xchg
mov
adc
call
jae
movsl
add
loopne
and
in
sub
divb
sbb
sub
add
add
push
stc
or
les
lea
pop
dec
lahf
jne
adc
fcompl
out
outsb
stos
fwait
dec
adc
pop
dec
jge
inc
in
mov
xchg
push
mov
leave
mov
and
mov
int
daa
fcomp
out
inc
testl
sub
test
sbb
and
sahf
fwait
xchg
clc
test
xor
cmpsl
scas
icebp
outsl
popa
xor
loop
out
jns
std
outsb
sbb
movsl
adc
inc
xchg
mov
push
and
inc
aaa
cli
nop
pop
cmp
sub
adc
cmp
sahf
cmc
xchg
or
push
cli
jno
sbb
ljmp
repnz
adc
fstp
add
mov
cmp
sbb
xlat
add
pop
dec
fisubs
repz
jmp
push
dec
inc
gs
nop
jp
testb
lret
into
jmp
pop
insb
ja
shrl
xchg
das
cld
pop
sbb
mov
dec
in
pop
ffreep
push
adc
cltd
xor
jmp
mov
aad
mov
inc
add
aas
int
push
mov
xor
xor
cmp
jne
mov
mov
fbstp
pop
mov
pop
push
mov
dec
addl
adc
jbe
in
or
push
sub
popf
lret
and
stc
ret
bound
mov
and
xor
rorl
or
std
pop
pop
aam
cmpl
mov
cmp
cmp
insb
mov
repnz
sub
push
rolb
and
aam
hlt
ret
rorb
es
sub
lds
lcall
lods
scas
or
mov
rorb
push
adc
xchg
add
out
lret
test
mov
addb
xor
popf
test
xchg
test
in
cmc
mov
pop
outsl
orl
mov
pop
xchg
sbb
jl
jmp
aad
xor
aad
xor
jmp
sub
sbb
sbb
lcall
shll
or
testb
insl
roll
add
aam
repnz
shl
outsb
bound
mov
jns
repz
in
push
push
xchg
aas
shlb
loope
data16
repnz
jp
lods
pop
mov
xchg
add
mov
dec
icebp
cmc
mov
pop
jne
aam
ret
insb
dec
xchg
fisubrl
test
xchg
add
adcl
push
sub
mov
outsb
push
mov
pop
pop
and
xor
inc
xlat
jle
enter
cltd
mov
iret
push
ja
ret
pop
pop
js
pop
inc
mov
xor
adc
push
push
or
push
fidivrl
lock
xchg
xchg
repnz
sbb
sarb
push
or
pop
rorb
sarb
imul
loope
sbb
adc
dec
or
fwait
pop
popa
aaa
repnz
in
push
mov
adc
pop
or
mov
sar
popa
jo
daa
es
call
push
and
cmpsl
jne
movsb
push
mov
jbe
fists
enter
daa
pusha
jle
cmp
scas
xchg
test
xor
fwait
mov
lahf
cmp
push
scas
push
test
adc
pop
inc
lcall
in
daa
and
xor
pop
push
lahf
and
mov
loope
loope
sub
mulb
ds
lds
cmpsb
sbb
or
add
imul
lahf
mov
pop
dec
jecxz
sub
nop
out
enter
lds
push
dec
or
inc
imul
test
adc
push
popf
outsl
adc
jbe
cmp
xchg
push
idivb
mov
lret
xchg
dec
or
xor
cmpsb
push
mov
dec
dec
fsubrs
pop
lret
lret
clc
rcll
push
mov
mov
sahf
ds
test
addl
loop
leave
arpl
mov
andb
adc
leave
add
cmp
fildll
out
jno
cli
ret
call
cmp
roll
into
bound
dec
sub
loopne
ljmp
les
push
adc
jg
add
sub
lods
add
xlat
inc
outsb
inc
sub
fcomps
in
pop
sbb
jp
addr16
mov
lret
inc
dec
cs
xchg
sarl
int3
push
repz
bound
repnz
adc
push
mov
mov
inc
and
inc
push
rcrb
movsl
int
xchg
aad
arpl
inc
sbb
imul
je
add
pop
cwtl
insb
adc
clc
or
rcl
jb
pop
test
psubsw
xchg
and
lock
pop
sbb
fmul
mov
mov
xchg
cmp
divb
sub
stos
cmpsl
pop
mov
cli
icebp
adc
mov
lret
and
lret
and
mov
dec
add
sbb
ljmp
mov
pop
aam
xor
ret
popa
and
es
fstpl
insl
sbb
seta
lret
add
popa
mov
or
inc
stos
mov
hlt
mov
in
cwtl
popa
bsf
aas
add
inc
cltd
add
cmp
sub
xor
cmp
fstpl
pop
test
in
xchg
xchg
ja
lahf
and
sub
stos
jnp
push
out
aas
fld
xchg
popa
pop
lods
add
das
pushl
sti
xor
sti
clc
jns
mull
push
xchg
aad
pop
xchg
ja
js
dec
in
cmpsl
inc
pop
mov
or
pop
dec
fwait
dec
data16
adc
fiaddl
das
dec
mov
bound
clc
push
sbb
out
xchg
mov
nop
mov
and
mov
pop
nop
or
pop
jge
fst
addr16
aas
idivb
mov
divb
xchg
jbe
outsl
dec
inc
fildll
push
loopne
lods
or
int
dec
xchg
lret
out
mov
out
cmp
sub
sub
push
loope
cmp
lcall
jnp
dec
xchg
jle
stc
dec
in
ljmp
mov
adc
aam
mov
inc
rorb
cmp
push
aam
jg
inc
adc
les
push
inc
xchg
leave
out
xchg
in
mov
stc
imul
scas
cmp
pop
push
xchg
fbstp
mov
das
out
pop
leave
xor
jmp
arpl
pop
xor
push
nop
or
push
xor
aaa
mov
lds
add
jg
gs
mov
pop
cmp
mov
test
scas
xchg
outsl
and
mov
jmp
jbe
pop
mov
enter
daa
pop
pop
idivl
lret
jno
pop
popa
jl
cmp
dec
fstpl
push
insl
push
icebp
xor
ss
push
lahf
push
hlt
ljmp
jnp
push
fisubrs
inc
sub
cmpsb
add
sub
fwait
and
dec
outsl
pop
xchg
mov
inc
loopne
loope
sub
sub
xor
cmp
icebp
ds
pop
movsl
adc
mov
cmpb
sbb
sub
xor
xchg
movsb
fcoml
sub
mul
lcall
adc
out
fldcw
outsb
jno
movsb
adc
xchg
mov
call
mov
adc
je
mov
push
rcr
fs
adc
xorb
lret
daa
shrl
jmp
fs
sahf
loope
sub
pop
xor
outsl
pop
dec
loopw
xlat
jbe
imul
fisubs
call
mov
inc
ss
mov
push
mov
fwait
mov
cli
mulb
xor
loopne
cmp
mov
cmp
cmc
adc
out
ficompl
cmpsb
cli
adc
inc
mov
add
sub
lods
call
sbb
pop
sub
mov
leave
inc
es
xchg
rcrl
popf
lods
and
sbb
dec
arpl
inc
pop
ret
lret
xlat
jge
repz
sbb
sbb
xorl
xlat
adc
ss
ljmp
inc
cmp
aas
or
jb
test
dec
jo
hlt
je
in
jecxz
icebp
and
fwait
adc
lea
sbbb
cli
fisttpl
xor
repz
jg
addr16
sti
pop
sub
lock
pop
lahf
das
mov
out
mov
outsl
and
cwtl
ret
scas
addr16
push
adc
dec
jns
mov
mov
jmp
mov
lret
xchg
cmp
pop
fistl
mov
mov
mov
addr16
shr
shrl
pusha
loopne
ret
mov
adc
shl
insl
add
pop
clc
rclb
xchg
mov
ret
sub
out
lods
test
sbb
scas
sbb
xchg
shlb
push
mov
sbb
add
cmp
test
adc
fldl
pushf
xchg
add
pop
lds
stos
push
stos
out
mov
or
call
and
xor
decb
outsb
push
jmp
mov
mov
rcrb
pop
inc
jne
ja
xchg
in
xlat
movsl
faddl
jmp
or
popf
rcrb
mov
sbb
mov
fldenv
shrl
in
fs
xchg
fldl
sarb
mov
addr16
test
mov
or
mov
push
xchg
and
mov
push
jne
sub
fisttps
dec
xchg
sbb
jmp
xchg
xorl
sub
add
aad
std
faddl
insb
jg
bnd
push
sahf
jle
push
stos
in
lahf
and
sahf
imul
out
iret
pop
out
fldl
fnstenv
outsl
rcll
xchg
sub
push
push
ja
ficompl
scas
mov
sbb
inc
jnp
scas
fwait
repnz
rolb
mov
subb
hlt
ja
mov
inc
sbb
or
adc
divl
jo
scas
or
push
add
loope
int3
je
adc
in
fidivrs
xor
loopne
insl
jo
enter
stos
bound
push
or
cmp
inc
fstl
push
adc
jge
pop
jge
jbe
mov
pop
mov
jl
xlat
xor
dec
dec
pushf
les
push
pop
and
roll
lahf
jbe
mov
push
fwait
js
and
addb
and
cmc
jmp
js
add
sar
punpckhdq
fwait
xor
cmp
in
sbb
cld
shlb
orb
add
cmp
xor
mov
addr16
pop
xchg
int
sub
call
lcall
jnp
lcall
outsb
aam
sbb
lods
adc
jg
fcomi
mov
dec
xchg
mov
mov
mov
xor
cld
push
mov
inc
into
fcomps
mov
sbb
push
jmp
roll
mov
push
sbb
fwait
jo
loop
push
xor
pop
in
loop
sbb
stc
and
fs
out
mov
pop
cmp
aad
mov
cli
sub
or
ja
or
pusha
sub
fcompl
loopne
pop
push
pop
ficoms
xchg
push
mov
rcrb
cld
mov
mov
movb
lods
iret
dec
lea
pop
cmc
xchg
xlat
mov
or
test
sti
inc
sti
jmp
rorb
jg
nop
or
roll
mov
mov
repz
xchg
xchg
js
dec
sbb
cld
dec
fcmovnb
pop
clc
popa
fwait
adc
xor
pushf
gs
jmp
stc
jb
dec
and
aad
jmp
outsl
aas
stos
ds
jb
pop
out
dec
out
out
sbb
or
sahf
xor
cwtl
outsb
mov
mov
push
inc
mov
out
add
outsl
add
insl
jge
int
call
lock
mov
sbb
mov
lods
dec
iret
sarl
cli
idivb
xor
je
push
cmpsl
pop
jle
mov
ret
cld
inc
cwtl
xlat
lret
add
push
mov
imul
fsts
pop
xchg
sarb
data16
mov
push
es
shrl
enter
std
xchg
out
addr16
repz
mov
loop
cmp
xor
test
adc
xchg
dec
mov
add
lds
dec
push
leave
ja
push
push
xchg
cwtl
into
shll
or
xchg
out
add
push
cmpsb
add
fs
jno
shlb
mov
cmp
push
movsb
adc
pop
inc
xor
dec
mov
pop
std
and
ja
cmp
lea
or
scas
fwait
stos
les
push
push
inc
cmc
add
in
mov
insl
sub
loopne
mov
in
jmp
xchg
sub
adc
sbb
leave
addr16
xor
mov
sti
lahf
mov
mov
lahf
iret
jne
and
insl
sub
push
in
jmp
popa
subl
inc
ljmp
inc
cmpsb
push
push
pop
leave
jmp
jo
and
enter
ljmp
jle
aaa
ljmp
neg
iret
jno
ffreep
cli
mov
jae
call
dec
pop
push
pop
mov
add
xor
ficoml
inc
xchg
fwait
ret
sbb
jns
imul
push
push
and
inc
shlb
mov
aad
xchg
leave
and
stos
hlt
ret
arpl
mov
or
int3
inc
fidivl
das
or
xchg
mov
int3
pop
sub
mov
push
je
lds
sbb
ss
and
mov
cmp
ljmp
and
xor
mov
jge
in
enter
daa
pop
mov
xchg
jno
sub
jl
and
dec
mov
pop
std
xor
insb
scas
clc
lahf
xchg
dec
rcll
push
test
je
or
test
inc
in
fsubl
cwtl
js
inc
fistl
psllq
sub
cs
and
jmp
mov
and
mov
vpshld
or
jnp
dec
mov
loop
sub
pusha
sub
pop
pop
inc
pop
clc
lcall
ja
inc
xor
sub
dec
outsb
aaa
pop
add
xchg
ret
pusha
add
cmp
mov
mov
test
and
sub
ror
int
adc
push
idiv
jle
lret
cmp
fsub
xchg
mov
test
sbb
push
sub
imul
outsl
fnsave
loop
mov
stc
fsts
xor
hlt
sub
mov
cmp
sarb
jp
pop
jl
xor
fmull
neg
clc
into
or
mov
mov
xor
pop
std
adc
cmp
push
hlt
adc
pop
aas
add
add
cmp
or
sub
mov
mov
lahf
and
jecxz
sub
nop
out
fs
and
mov
fnstcw
loope
in
lahf
xor
cmp
xor
ja
inc
movl
adc
rcrl
jbe
mov
mov
inc
outsb
mov
aas
dec
das
mov
dec
pop
mov
je
mov
jg
mov
test
cwtl
sub
dec
mov
pop
lahf
mov
movsl
pop
sbbl
adc
sub
cmp
inc
stos
pop
dec
lock
dec
mov
daa
and
rol
mov
or
dec
outsl
shrl
and
mov
cld
insl
pop
lods
lret
jb
pop
mov
pop
mov
mov
mov
movsl
xchg
xchg
mov
aam
shrl
es
insl
shlb
clc
dec
loop
xchg
cs
and
data16
sub
gs
lods
pop
aas
jecxz
jnp
push
mov
movsb
mov
push
jge
loope
or
cltd
cmpsb
mov
mov
lock
lds
rcl
mov
xchg
add
jl
mov
stos
dec
and
out
push
mov
push
pop
adc
or
xor
inc
movsb
mov
ret
dec
mov
mov
pushfw
ja
arpl
dec
mov
sbb
fstps
sub
add
inc
xchg
dec
inc
pop
bound
in
mov
push
in
lds
jnp
mov
insb
sti
leave
mov
dec
inc
int
mov
jb
mov
push
xor
sbb
jge
addb
xchg
rcr
mov
xchg
es
jmp
sub
jge
rcrb
loopne
mov
pop
sub
ja
xor
mov
inc
and
pushf
inc
insb
push
cmp
jle
inc
cmp
inc
xor
movsb
iret
rorb
ret
mov
inc
repz
jae
outsl
imul
mov
mov
sub
fiaddl
cltd
xchg
repnz
sbb
scas
subl
int
popa
cmpsl
push
push
xor
sbb
repnz
in
hlt
or
lea
and
mov
sbb
push
arpl
outsb
add
mov
fistps
sub
add
leave
and
scas
fdivrl
and
popa
cmp
push
lea
test
jbe
mov
jge
pop
in
insb
clc
mov
cmp
in
test
jl
push
mov
insl
orb
push
mov
fnstcw
jl
mov
push
sti
testb
adc
and
or
das
jmp
in
ret
cmp
js
and
dec
insb
fisubrs
adc
loope
out
sub
aam
cmp
lods
ds
pop
add
shrb
adc
mov
mov
add
pop
dec
xor
pop
repnz
in
pop
sub
test
pop
xchg
lcall
js
lock
push
outsb
lcall
and
ret
test
pop
xor
mov
outsl
daa
and
testb
jo
int
lret
xchg
aas
sti
idivl
inc
add
sbb
xor
icebp
or
dec
test
mov
xor
jae
mov
aaa
xchg
nop
push
mov
jg
sbb
mov
inc
push
cmp
lret
test
pop
cli
adc
mov
outsb
inc
or
mov
cmc
push
movsb
loopne
jne
pop
sbb
adc
rol
imul
hlt
or
ja
lods
popf
mov
xlat
cmp
adc
in
or
jl
sahf
xchg
cwtl
incb
jns
nop
shr
dec
andb
fldcw
sub
clc
scas
lcall
sub
sbb
repnz
mov
dec
adc
pushf
mov
pop
das
cs
lods
aad
add
inc
mov
call
fwait
repnz
aad
inc
je
jle
jecxz
add
loop
mov
in
or
rcrl
insb
xor
and
scas
pop
adc
xor
roll
inc
jb
mov
ret
rcll
cmpsl
or
mov
push
xchg
cmpsl
pop
push
xor
icebp
jo
sub
cwtl
clc
jne
loope
outsb
mov
push
mov
pop
lock
les
sub
das
ret
popf
sub
es
outsl
pop
insl
mov
adc
addl
xchg
insl
pop
outsb
ljmp
mov
mov
out
push
ja
stos
mov
rorl
cmp
mov
cltd
jae
fcomi
mov
push
dec
xchg
hlt
or
xor
popl
imul
rcl
popf
sub
stos
aaa
sub
out
lret
dec
loopne
jge
add
jo
movsl
ljmp
loop
or
pop
sbb
xor
xchg
dec
dec
sbb
pop
jae
push
sbb
sub
inc
mov
dec
rcrl
pushf
pop
inc
add
fwait
pop
xor
bound
add
insb
jae
in
hlt
ss
lret
mov
sub
mov
dec
clc
aam
mov
gs
mov
inc
xor
popf
mov
pusha
jg
jne
inc
fwait
pusha
push
fildll
mov
jmp
mull
andl
out
ds
adc
mov
push
dec
stos
push
sbb
imulb
inc
jnp
div
jle
inc
shl
dec
push
repnz
dec
cs
das
pop
jg
and
test
mov
jge
cmc
sbb
aad
push
loopne
test
mov
and
shlb
dec
pop
push
sbb
mov
sti
scas
les
push
scas
inc
lods
rclb
jne
jnp
mov
adc
hlt
pop
dec
sbb
pop
iret
or
xchg
fimull
inc
stos
cmp
lods
push
or
add
mov
scas
pop
hlt
imull
lds
sti
jo
dec
push
scas
inc
sti
pop
and
mov
mov
mov
jbe
fsts
cs
enter
daa
pop
not
cmp
mov
jl
push
dec
dec
cltd
sti
jp
stc
aaa
jns
mov
mov
pop
push
into
repnz
or
xor
gs
cmc
cmpsb
push
movsb
push
in
stos
ss
js
nop
mov
lea
push
ss
loope
rcr
sti
pop
pop
cmp
stos
popa
sbbl
addr16
addr16
das
sbb
movl
dec
out
mov
dec
pop
or
pushf
sub
mov
inc
aam
lcall
in
fcompl
aad
outsb
std
out
jmp
and
cmp
cmp
cmc
loopne
lock
mov
mov
and
dec
push
mov
int
psubusb
fcomip
jl
pop
lret
das
roll
mov
adc
sbb
mov
insl
xor
cmp
outsl
fwait
mov
loop
adc
sbb
bound
repnz
ss
scas
jle
js
push
mov
sub
out
dec
ss
ret
xor
xor
cmpsl
test
into
shrl
aam
test
stc
pop
cmp
adc
pop
inc
imul
movzbl
popa
les
shl
ret
xlat
jl
sti
sub
and
andl
pop
sub
jecxz
push
or
nop
pushf
lods
jecxz
fbld
inc
stos
sbb
fldenv
adc
xchg
rol
sbb
insl
nop
and
inc
pusha
or
push
sub
cmc
adc
jmp
xor
adc
inc
movsb
dec
xchg
aas
xchg
jb
or
dec
inc
xchg
je
scas
mov
cmpsl
cmp
lea
fcompl
mov
out
mov
aas
mov
mov
mov
fisttpl
mov
adc
das
xor
aam
lea
dec
push
cmc
shll
push
add
add
mov
das
xor
inc
clc
imul
data16
push
lods
push
mov
cmpsb
outsb
mov
imul
pop
jecxz
xchg
shlb
test
out
xor
ret
sub
out
shlb
sar
mov
cltd
or
dec
jmp
popa
daa
sbb
lods
xor
mov
adc
int
mov
rclb
pop
lret
pop
cli
add
mov
cltd
adc
push
test
scas
or
push
adc
fldcw
andb
push
mov
sub
jmp
out
cs
clc
xchg
les
xor
dec
repz
or
imul
cmpsb
mov
enter
andl
ja
fimull
mov
and
xchg
inc
fwait
aaa
adc
aas
dec
pop
add
idivb
bound
lods
lock
jbe
xchg
sbb
data16
iret
sub
lret
testb
mov
or
mov
mov
out
mov
and
fucom
jne
insb
pop
pusha
jbe
rcr
lret
xchg
int3
xor
mov
movl
clc
mov
mov
sbb
jns
leave
dec
xlat
and
cmp
jle
cmp
in
pop
std
adc
adc
mov
je
xor
push
pop
ret
inc
or
divb
jg
push
mov
fbstp
inc
add
xchg
fisubrl
xchg
xchg
mov
xchg
subb
inc
scas
daa
sub
push
notb
xchg
mov
xchg
into
xchg
push
leave
xchg
hlt
mov
push
add
les
sbb
mov
orl
pop
hlt
lret
int3
and
dec
fiadds
mov
or
insl
stc
dec
scas
and
mov
cmp
and
push
or
fwait
je
aad
es
daa
pop
push
pop
jno
out
dec
jl
sub
outsl
push
fcoml
jns
addr16
and
jae
push
mov
out
push
aad
ss
hlt
or
xchg
and
in
xchg
pop
or
xchg
jl
int3
ljmp
xor
pop
sub
mov
loopne
movsb
into
movsl
xor
dec
jo
jp
sbb
xchg
sbb
lret
push
xor
add
jae
rcrb
xchg
sub
clc
scas
pop
ret
lcall
inc
faddl
shrl
addb
test
lock
dec
jg
mov
mov
jo
mov
cli
imul
jmp
pop
int
loope
fmuls
adc
lret
jne
popf
add
sti
xchg
lds
dec
enter
cmpsb
addb
xlat
out
outsl
jp
dec
loop
es
inc
leave
fs
mov
adc
les
xchg
lea
pop
dec
test
cmp
pusha
xor
sahf
fwait
cmp
mov
or
into
mov
aam
clc
fs
loopne
xor
mov
dec
imul
cli
data16
adc
xlat
mov
out
mov
loopne
out
sti
cld
inc
mov
gs
add
nop
ja
cmp
inc
mov
mov
les
leave
jp
jb
notl
pushf
adc
call
inc
ficompl
or
adc
pushf
adc
jmp
roll
aad
cmpsl
lods
inc
mov
sbb
jb
lods
decl
mov
je
xor
stos
sub
cwtl
pop
jns
mov
mov
mov
mov
neg
mov
call
insl
lock
jecxz
adc
mov
dec
push
or
push
not
mov
out
testb
test
mov
cmpsl
pop
xor
mov
push
outsl
cltd
cld
out
test
lret
mov
jnp
mov
fidivl
mov
cs
add
ret
rorb
into
mov
jp
mov
ret
mov
jo
insl
test
ja
jmp
jecxz
mov
lods
adc
fwait
cltd
mov
mov
mov
jbe
psadbw
rcrl
mov
fs
aad
xor
inc
jecxz
test
adc
sbb
repnz
roll
or
stos
adc
shrl
or
add
xor
xor
push
jnp
rorl
xor
adc
xchg
mov
xchg
lods
and
adc
pushl
repnz
add
cmp
aas
ljmp
cmp
ret
mov
jbe
out
jmp
and
jns
mov
xchg
push
call
and
aas
and
addr16
push
sub
mov
rorb
shll
xchg
pusha
adc
neg
jmp
or
lea
loopne
adc
push
sub
sub
loop
cmp
test
insb
xchg
je
jnp
addr16
jle
and
in
add
adc
out
dec
iret
in
outsb
ret
xlat
pop
stc
cltd
inc
adc
xlat
jae
insb
or
popf
das
subl
addl
les
dec
test
scas
mov
imul
fs
pop
mov
and
leave
incb
jmp
inc
sub
pop
or
mov
inc
mov
mov
xlat
add
push
dec
int3
or
dec
fisubrs
ds
and
xor
cmp
pop
fsts
lahf
or
rclb
mov
pop
or
cmp
dec
aaa
jno
js
jl
fnstenv
fs
push
mov
jns
and
adc
cmp
xchg
cmc
dec
and
rolb
adc
js
stos
js
sub
or
subl
sbb
dec
jecxz
sub
in
xchg
pusha
jl
ds
hlt
mov
sti
test
and
ds
add
cmp
ss
pop
lods
lods
sub
push
pop
inc
pop
repz
repz
aad
sub
push
fistl
xor
movsb
jg
jno
mov
cmp
mov
mov
dec
push
int
test
fadd
pop
sub
cli
cmp
add
test
mov
filds
sbb
push
sahf
mov
xor
jg
cmp
loop
insb
lret
hlt
cmp
insb
adc
fnstsw
cmp
mov
ja
cli
sub
jecxz
loopne
in
cmp
xchg
adc
mov
or
xchg
push
repnz
mov
scas
scas
pop
jns
sbb
mov
adc
mov
adc
sbb
add
adc
push
nop
in
push
sbb
xlat
cli
and
fisubl
dec
ret
stos
cmp
lds
pop
cwtl
nop
push
fs
dec
popf
hlt
addr16
sarb
fsts
jl
sbb
mov
xchg
inc
push
dec
sbb
arpl
or
inc
test
stc
adc
jo
jmp
xor
cs
rcl
adc
aas
lds
mov
dec
test
dec
cmp
je
or
lods
mov
cwtl
adc
mov
pushf
cmpl
dec
pop
cld
or
lock
inc
das
icebp
cltd
xchg
mov
add
outsb
roll
add
testb
mov
cmpsl
pop
jmp
sbb
cmc
or
lret
flds
mov
mov
mov
and
fisttpll
sub
fcmovnbe
test
outsl
ret
dec
ds
es
push
pop
insl
insb
hlt
mov
xor
arpl
xor
stc
popa
push
call
mov
pop
and
and
jmp
out
add
mov
cltd
sub
test
sbb
mov
fisttpl
push
cwtl
test
mov
das
dec
sbb
pushf
pop
fsubs
stos
add
js
hlt
push
test
decl
inc
or
pop
or
inc
mov
into
push
dec
push
imul
ja
sub
subb
or
jne
fwait
xchg
push
ficompl
test
add
dec
inc
loope
lods
inc
out
enter
mov
or
xchg
mov
fwait
mov
je
mov
cmp
cmp
mov
or
lea
or
jne
in
pusha
lods
aam
fisttps
or
sbb
mov
hlt
xchg
pop
mov
orl
dec
out
test
sub
arpl
ficoms
sub
scas
aas
ret
mov
mov
jle
add
in
adc
fiadds
dec
pop
pop
ret
popa
pop
xor
inc
inc
pop
sbb
test
mov
sbb
lret
dec
inc
add
sub
dec
inc
loop
adc
aam
loopne
imull
test
mov
out
push
mov
je
leavew
jne
or
cmp
arpl
test
jae
stos
aaa
ljmp
add
cmp
pop
sub
or
or
lahf
jo
mov
and
or
pop
shll
movsb
test
dec
push
stos
jns
jbe
jns
jge
or
enter
daa
pop
add
das
xchg
loope
sarl
dec
out
or
mov
subb
loope
lahf
xor
lcall
pop
pop
push
imul
adc
jmp
pop
test
pop
dec
jns
push
fadd
loope
sub
cmp
or
ud2
ds
rcl
sbb
mov
icebp
clc
sbb
in
in
orb
stc
mov
pop
sub
mov
or
pop
pop
mov
fcompl
movsl
outsb
es
int
mul
loop
dec
mov
xchg
mov
cmp
mov
aam
and
adc
test
out
idivl
arpl
mov
incl
sahf
push
arpl
xor
jno
outsl
cmp
xor
or
cmp
fs
or
adc
jp
sbb
lods
mov
shl
cli
pop
xorb
mov
mov
fimull
or
lods
je
jp
cmp
xchg
loopne
aas
cld
pop
cwtl
out
and
pop
sub
imul
cli
or
aad
lods
cmp
xlat
cmp
sub
mov
mov
jmp
xchg
or
gs
xchg
dec
cld
rorb
dec
sbb
fdiv
adc
out
ljmp
mov
xchg
adc
cli
ss
pushf
addr16
ret
jmp
push
in
cs
mov
cmpsl
cmc
dec
sti
aas
fs
or
nop
xchg
dec
mov
xor
shl
loopne,pn
mov
adc
shr
xchg
mov
cmp
lahf
in
sahf
adcl
jg
sbb
or
lahf
pop
popl
ljmp
rol
mov
lea
mov
push
or
push
add
test
mul
cmp
sub
cmpsl
push
and
mov
int3
enter
test
inc
mov
ljmp
inc
mov
sub
pop
aam
mov
clc
es
inc
je
push
mov
outsl
pop
add
movsl
sbb
popa
insb
cmp
lods
jno
mov
cld
mov
mov
ret
lfs
add
inc
cltd
mov
shr
mov
inc
pop
push
pop
push
cmpsl
fstl
imul
aaa
fcoms
das
push
jp
jb
jbe
repz
out
push
add
xchg
cltd
mov
dec
ljmp
mov
in
or
inc
xor
rcrl
arpl
pusha
ja
sbb
fimull
mov
inc
pop
xchg
fwait
les
out
push
sub
jge
shl
divb
cmpsl
add
jns
cs
in
notb
mov
ror
or
repz
cmp
and
inc
mov
dec
dec
in
scas
fnstenv
cmp
pusha
inc
out
sti
fbld
adc
inc
push
xor
test
movsb
sbbl
jg
lods
rol
sahf
ret
sbb
stos
and
and
sbb
lret
out
jle
rolb
adc
sub
ret
and
sahf
dec
inc
sub
jo
js
out
in
in
push
popf
jge
xor
movsl
mov
pop
and
and
xchg
movsl
xor
sbb
daa
mov
iret
nop
cmp
push
sbb
rolb
gs
imul
arpl
adc
cs
mov
or
jl
int3
loope
test
fdivp
test
lds
jo
scas
mov
jmp
cmp
and
xor
jl
in
xchg
sbb
lret
enter
daa
push
roll
ja
jno
cmc
mov
or
fstl
xor
push
shrl
mov
pop
test
ss
cs
mov
pop
sub
or
xchg
push
lret
lods
loope
xchg
ret
lret
lahf
cmp
sbb
adc
jecxz
dec
adcb
push
sbb
gs
jmp
jmp
mov
movups
pop
jnp
pop
aas
repnz
pop
xchg
or
inc
pop
pop
sub
sbb
mov
movsb
subb
jg
cld
leave
mov
imul
push
sub
xchg
int
mov
fdivrs
mov
js
mov
shll
mov
cmc
sahf
stc
scas
mov
xchg
jl
xor
pop
fsub
fwait
xchg
pop
stc
and
adc
pop
adc
sub
cmp
mov
add
ss
lock
mov
push
cmp
aam
or
cmc
dec
arpl
adc
sub
ja
adc
test
adc
repz
add
and
mov
mov
es
insb
ret
popf
lods
in
and
mov
push
gs
inc
sbb
pop
xchg
xchg
mov
flds
out
repz
rclb
adc
es
add
adc
xchg
pushf
adc
jmp
cmp
and
out
push
inc
inc
adc
aas
add
divl
iret
jmp
sub
jg
push
and
in
inc
cwtl
mov
or
mov
cld
les
iret
fildl
iret
pop
inc
sub
inc
aad
mov
sub
jo
and
out
jno
repnz
push
jge
mov
adc
std
popf
mov
lock
push
jecxz
mov
mov
stos
lret
or
dec
mov
add
mov
pop
add
rolb
and
sbb
icebp
ret
push
xlat
jmp
cmp
stos
clc
stos
addr16
ljmp
shrd
or
sahf
aas
out
and
lahf
repnz
add
adcb
in
sub
jmp
push
mov
repnz
jle
out
ljmp
pop
sbb
mov
cmp
divl
xor
push
mov
xor
aad
mov
aam
repnz
pop
mov
mov
dec
outsl
adc
int3
or
pop
hlt
fwait
repz
push
lret
mov
add
bound
or
xchg
in
daa
jns
idiv
in
enter
fwait
shlb
addr16
or
cmp
addr16
push
jp
mov
mov
jns
mov
enter
iret
fdivl
xor
pusha
pusha
loop
cmp
inc
sbb
jmp
out
fnsave
subl
sub
f2xm1
stos
push
sbb
test
imul
xchg
xchg
ss
push
mov
jbe
imul
sti
rol
jg
dec
pop
sahf
sbb
inc
xor
into
movhps
mov
xor
fidivl
adc
push
sbb
push
cli
imul
pop
push
adc
rcrb
jecxz
sbb
pop
leave
arpl
xchg
arpl
adc
or
jmp
or
push
int3
int3
or
loopne
xchg
or
sbb
popa
jo
push
scas
sahf
roll
and
in
cmp
adc
push
dec
cli
loopne
das
sub
mov
fs
push
push
xor
xchg
sbb
add
aas
push
push
mov
jnp
outsb
mov
push
in
jmp
xlat
push
add
dec
cmpsb
popf
scas
cmp
sub
arpl
pop
enter
push
jae
loope
and
sub
jns
cmp
mov
xor
movsl
push
inc
push
inc
mov
andb
sbb
lods
xor
outsb
jg
inc
pop
into
push
cmp
into
into
pop
mov
pop
dec
push
mov
push
fdiv
add
sub
shrl
adc
test
adc
loope
loop
cmp
and
in
ret
push
fdivrp
int
mov
sub
aaa
aaa
xlat
lret
cmp
stc
jbe
mov
insl
dec
sahf
pushf
lock
nop
pop
scas
outsl
testb
stc
ficompl
shll
mov
add
mov
adc
xor
dec
cmp
xor
or
int3
into
inc
out
cld
cmc
adc
sub
scas
pushf
call
adc
adc
adc
fstl
je
mov
fidivrs
cmp
jle
xlat
mov
sub
sti
mov
mov
sar
xchg
bnd
fcoml
mov
sbb
mov
in
xor
scas
add
xchg
nop
mov
cmp
mov
out
xchg
adc
mov
out
cs
xor
xor
stos
loop
mov
inc
xor
lahf
idivb
jecxz
pop
mov
mov
sti
lea
cwtl
inc
test
mov
cld
imul
ret
aaa
pop
in
into
inc
pop
lods
adc
xchg
mov
mov
mov
and
cmpsb
je
lock
notb
jne
inc
js
dec
dec
sub
push
es
jno,pn
icebp
jp
pop
cld
lcall
mov
movsl
mov
mov
pop
jle
mov
sub
mov
out
ret
ret
divl
lock
and
clc
in
sbb
mov
popa
lcall
mov
sarl
push
jp
sub
jb
std
add
xor
data16
sahf
push
loope
sbb
test
adc
xchg
popf
lods
sbb
test
enter
rcrl
out
sbb
cltd
pop
add
xor
xor
fcoms
xor
mov
lea
xchg
push
ja
jmp
fiaddl
scas
lea
ficomps
outsb
insb
push
mov
and
bound
jnp
mov
sbb
xchg
or
inc
shll
fistpl
addr16
pop
jp
fdiv
mov
mov
out
cli
mov
fmuls
mov
clc
or
pusha
jge
in
sub
xchg
jmp
mov
jae
pop
xchg
mov
push
loope
pop
filds
mov
push
sti
mov
and
scas
jmp
jle
push
dec
in
nop
adc
dec
imul
or
aad
or
data16
int3
notl
jb
lds
xchg
push
stc
inc
jge
popf
fucompp
imulb
push
jbe
sbb
push
push
imul
out
pop
adc
sarb
jg
jno
pop
repnz
push
xchg
leave
fidivrl
hlt
sbb
arpl
mov
sbb
je
jg
cmpsl
add
hlt
int3
mov
xchg
leave
mov
addl
xor
mov
and
scas
cmp
pop
push
cwtl
mov
jge,pn
in
and
daa
push
pop
mov
enter
add
rolb
push
dec
movsl
mov
inc
mov
ret
push
rcrb
push
int3
inc
std
inc
mov
jae
in
adc
popf
js
dec
mov
pop
sub
or
movsl
xlat
test
dec
or
movsl
pop
sub
addr16
cmp
aaa
inc
pop
sbb
pop
mov
xor
cmpsb
jmp
inc
jle
pop
cmc
add
push
mov
pop
cmp
jmp
push
or
mov
popf
mov
test
xchg
rcll
lahf
pushf
ret
xchg
pop
mov
imul
pop
inc
mov
adc
push
fnstenv
mov
mov
add
idivb
lret
inc
rcll
inc
sbb
cmpb
and
xchg
xor
outsl
cmc
outsl
aad
inc
loop
mov
xchg
pop
sub
scas
adc
push
fs
adc
test
or
xor
out
cli
hlt
cmc
mov
cmp
bound
into
and
fcomi
popa
loopne
imul
adc
sarb
imul
rolb
add
popaw
pop
lods
out
clc
std
cmp
mov
sub
dec
mov
in
mull
mov
gs
xor
sbb
xlat
inc
sbb
jecxz
lock
les
mov
jge
ficoms
pop
pusha
aaa
call
cmp
sbb
sub
lcall
loopne
and
loopne
enter
jl
std
inc
inc
cli
xor
inc
inc
fs
ljmp
shlb
mov
call
xchg
js
sbb
lods
aaa
clc
sbb
jecxz
cmp
loope
mov
insl
gs
inc
pusha
mov
fbstp
and
dec
mov
notb
sbb
cmpsl
push
in
cs
push
ffree
cld
lds
lret
ljmp
mov
out
pop
mov
popf
mov
jnp
dec
jo
aam
aaa
xor
es
mov
or
icebp
xchg
es
arpl
sahf
lret
push
mov
in
dec
and
push
push
lds
shll
add
mov
sub
adc
movsb
xor
or
data16
rol
jl
add
push
jbe
shll
subl
mov
xchg
outsb
sub
decl
mov
cli
or
xorl
inc
mov
mov
pop
nop
dec
cmp
xor
dec
push
stc
fildl
ja
or
xchg
inc
fwait
push
push
xchg
push
adc
cmp
sbb
out
inc
movsb
push
bound
mov
insl
je
in
push
xchg
repz
mov
xor
addr16
out
push
mov
cmpl
adc
jne
mov
pusha
sbb
pop
xchg
mov
les
orl
out
cmp
mov
xchg
repz
stos
jnp
pushf
and
push
pop
jnp
jecxz
jle
mul
jge
jp
sub
and
enter
movsl
cmp
inc
dec
xor
mov
xor
pop
dec
push
cld
ja
ficompl
sub
sub
imul
push
mov
leave
stos
mov
rclb
leave
push
test
hlt
gs
arpl
or
ja
addr16
sbb
cmp
or
jno
loop
jae
mov
out
xchg
fcompp
in
and
es
fwait
and
adc
pop
cmp
loop
movsb
aam
loop
out
scas
jbe
cmpsb
stos
jge
adc
inc
adc
push
loop
cmp
jg
jno
inc
jno
pop
mov
push
push
cs
xor
into
lahf
lods
sub
xchg
test
test
xchg
inc
addl
stos
lret
adc
pop
inc
in
push
loope
scas
shrl
cmp
in
cld
jbe,pt
push
movsl
pop
dec
pop
rolb
pop
popl
arpl
sbb
int3
push
scas
sti
push
add
shrl
pop
mov
cs
push
pusha
lret
dec
inc
mov
mov
add
dec
cmpb
mov
iret
mov
and
xchg
fdivr
xchg
int
xchg
divl
ret
daa
or
mov
xchg
sbb
js
loop
or
xor
repnz
mov
loop
push
aam
stc
dec
jp
xlat
cmpsb
xchg
adc
shrb
ss
cmpl
jmp
mov
xor
and
sbb
fiadds
mov
loopne
dec
fstps
sub
test
subb
inc
adc
lods
insl
add
jae
lods
aad
push
insl
sub
xlat
xor
inc
in
and
scas
in
out
jae
push
movsb
fsin
push
lock
add
dec
js
or
xchg
fldenv
mov
or
dec
mov
sbb
lret
mov
sbb
adc
sbb
adc
jmp
lea
sub
lds
pop
cmpsb
aas
loopne
ret
jb
lds
lea
pushf
jecxz
xchg
pop
mov
aaa
add
mov
int
mov
or
dec
cwtl
sbb
fcmovnbe
dec
mov
sub
adc
add
cmp
mov
mov
xchg
cld
sbb
inc
mov
mov
jp
xchg
popf
lock
inc
jl
cmpsl
push
cmp
mov
sub
cld
lock
pusha
lret
pop
das
pop
mov
jge
mov
mov
pop
pop
mov
int3
xchg
sub
aam
pop
test
gs
arpl
loop
clc
pop
clc
cmp
jno
into
popa
enter
sbb
addr16
jecxz
or
wrmsr
xchg
sub
push
cmp
test
call
test
push
fisubrs
sti
rcl
sbb
adc
pop
push
pop
fldcw
jecxz
hlt
xchg
mov
add
and
cmpsl
idivb
or
lea
xchg
out
dec
push
data16
pop
dec
ret
or
dec
dec
jns
inc
jae
or
out
nop
fwait
orb
in
pop
addr16
jb
out
and
bound
sub
pushf
cmp
xchg
inc
cmpsl
push
std
push
mov
and
repz
dec
jo
jle
xchg
mov
adc
push
lret
imul
mov
xor
mov
push
sub
dec
adc
sbb
and
stc
loop
mov
or
stos
out
loopew
scas
dec
jne
sbb
jnp
adc
arpl
test
add
pop
mov
sbb
pop
inc
imul
mov
jae
xchg
ret
das
jmp
push
jnp
inc
fimull
scas
xchg
add
sbb
push
imul
out
out
jne
outsb
mov
mov
adc
pop
leave
enter
mov
mov
outsl
cmp
rclb
shll
sbb
aaa
movsl
adc
or
push
add
inc
int3
mov
fidivrs
lds
roll
and
mov
test
jbe
xchg
or
cmc
js
aas
int
daa
push
out
dec
cmp
inc
leave
jno
mov
jb
adc
pushw
adc
stos
and
jo
lret
add
and
test
bound
icebp
cmpsb
es
add
loop
sub
shll
pop
test
fs
mov
jnp
push
jns
cmp
inc
ds
frstor
rcrb
ret
pop
jge
sbb
fisttps
xor
xchg
enter
inc
test
sub
mov
lcall
imul
cmpsl
pushf
xchg
outsb
adc
ret
aad
jae
testl
mov
mov
and
mov
pop
int
aas
enter
xchg
divl
lret
mov
mov
or
sahf
test
test
rclb
xchg
inc
popa
loop
push
sub
incl
jmp
imul
mov
dec
add
pop
sbb
xor
mov
or
xor
jmp
ret
cmpb
pop
xor
mov
jnp
sahf
imul
filds
and
addr16
lods
mov
pop
movsl
xlat
je
lcall
and
int
and
lds
adc
inc
or
mov
dec
xlat
cli
inc
inc
mov
pop
pop
jae
pop
cli
sbb
adcl
push
or
inc
add
cmp
cmp
mov
test
mov
test
repnz
or
aas
jg
jge
cmp
inc
test
in
pop
lcall
subl
mov
cld
xchg
mov
mov
inc
inc
pop
dec
adc
fildl
cwtl
lods
pop
into
xlat
lret
inc
icebp
aas
cmp
xchg
xor
das
sub
and
mov
movsl
xchg
pop
rcr
jmp
pop
std
cmp
jnp
cmp
pop
cmp
icebp
lcall
mov
mov
movl
fsubrl
cmp
nop
aam
fnstcw
es
icebp
fdivrp
xchg
push
cmpsl
xchg
movsb
and
popa
fists
mov
sub
jge
ljmp
jg
mov
int3
movsl
mov
xor
push
sub
push
test
loopne
xchg
sbb
mov
or
loop
arpl
test
sahf
leave
inc
out
inc
pop
sbb
cld
jnp
add
mov
inc
push
cld
xor
xchg
lret
movsb
pop
xor
jb
mov
loopne
dec
dec
mov
into
js
aam
jle
cmp
movsl
or
sbb
fwait
scas
mov
jae
cmp
add
bound
test
jns
cmpl
xchg
mov
mov
inc
cmp
sbb
sub
xlat
insb
jp
xchg
adc
cmp
mov
push
jne
mov
pusha
dec
mov
dec
xchg
fs
jmp
sbb
xor
test
out
sub
lds
push
adc
sbb
lds
bound
or
push
xor
in
xchg
cmp
loop
in
iret
xchg
lret
inc
mov
jp
xchg
inc
popa
cmp
push
mov
loopne
push
cli
je
fiaddl
aam
xchg
pop
jmp
sbb
push
mov
scas
aas
pop
rclb
mov
mov
aaa
repnz
aas
call
hlt
sti
dec
enter
faddl
movsb
popa
or
aad
inc
aaa
test
or
xchg
adc
into
int3
js
fistps
xchg
ficomps
mov
insb
jo
sbb
scas
sbb
test
ss
cmp
cmp
test
insl
jbe
cmc
jp
or
push
dec
daa
push
addb
mov
jno
and
dec
xorb
hlt
cmp
lahf
jecxz
and
fsubl
cmp
lods
test
sub
or
jno
leave
cs
pop
les
loope
enter
jbe
cmp
ja
ds
fs
sar
jle
mov
push
adc
stos
jno
xchg
push
mov
pop
push
cs
in
pop
mov
iret
mov
fcompl
stos
outsb
js
push
adc
lock
mov
jb
mov
inc
cmp
push
xor
push
loop
pop
int
fdivl
xor
lret
jbe
push
sub
jecxz
push
xchg
or
cld
and
outsl
jb
scas
loop
add
sub
fs
jmp
adc
iret
pop
cmp
cltd
rcl
xor
lods
cli
lea
and
fsubr
lock
movsl
cmc
xor
sti
loopne
inc
dec
pop
push
pop
rcll
dec
dec
leave
imul
add
cli
lret
cmp
cmp
and
xlat
mov
dec
sub
pop
push
mov
cmp
add
je
dec
sbb
nop
dec
fnstsw
dec
fbstp
inc
push
ret
push
fsts
push
loopne
ljmp
sbb
rorb
pop
push
and
add
cmc
pushf
imul
cs
dec
cmp
push
loope
inc
xchg
pop
aas
push
mov
dec
jnp
xorl
jecxz
loop
mov
call
cwtl
xor
pop
mov
scas
cmp
push
dec
outsb
bound
xor
xlat
inc
js
jmp
repnz
das
or
hlt
mov
add
mulb
xor
shrl
mov
std
loopne
and
cmp
mov
push
pop
fidivrs
xor
mov
aaa
adc
mov
jb
mov
jns
mov
cli
stos
adc
mov
cmpsb
aam
test
ret
xor
imul
sarl
xchg
jecxz
dec
ljmp
ret
movsb
mov
mov
icebp
mov
push
out
pop
pmaxsw
add
pop
cltd
add
or
jle
std
push
in
add
fnstsw
xor
stc
adc
sbb
sub
cmp
lahf
stos
lea
out
test
cmp
add
loop
in
add
test
xchg
or
sbb
stos
jno
or
inc
decl
mov
sub
xchg
and
cs
jg
mov
push
out
fimuls
push
cli
ficomps
cli
repz
loope
cmp
jns
jle
in
rorl
xchg
loopne
repnz
cli
pop
mov
pop
hlt
es
inc
jp
xchg
aaa
mov
xor
mov
repz
dec
ds
mov
pusha
jmp
mov
xchg
aaa
mov
dec
mov
xchg
in
pop
xor
aad
sub
sahf
mov
push
hlt
daa
stos
aam
int3
and
pop
dec
insb
out
daa
pop
jnp
les
in
pop
lea
mov
push
dec
ret
mov
mov
lds
push
push
imul
jle
ds
addr16
jle
enter
lahf
fidivl
scas
sbb
movsl
dec
imul
scas
mov
sbb
int3
jmp
repnz
xor
inc
xchg
jp
icebp
ljmp
inc
inc
ljmp
nop
dec
cmp
and
or
xor
cmpsl
push
mov
arpl
jge
lret
faddp
out
lds
jp
scas
stc
or
cmp
mov
loope
jbe
lret
mov
addr16
daa
push
xchg
mov
xchg
faddl
into
int
fmull
dec
dec
out
cmpsl
testl
cmpsw
mov
mov
adc
or
addr16
clc
cs
cmpsb
sub
inc
in
mov
outsb
js
stos
fwait
pop
add
adc
add
sub
dec
jae
fsubs
fbstp
movsl
je
rcl
jg
sbb
xchg
sbb
add
dec
aad
pop
xchg
xchg
das
sub
pop
push
lcall
mov
dec
fndisi(8087
sub
adc
adc
or
sub
xor
push
mov
cmpsl
and
test
int
pop
int
sahf
jae
div
jnp
lret
add
hlt
mov
je
sahf
lret
jg
test
test
outsl
push
into
mov
stc
insl
jp
fs
mov
or
or
out
shrl
icebp
out
xchg
or
cli
rclb
xor
outsl
or
sub
into
scas
add
notl
dec
loopne
arpl
pop
jno
sbb
and
das
imul
add
aas
mov
lahf
lods
mov
or
push
jg
xlat
repnz
sub
lret
mov
stos
cmp
xchg
inc
and
dec
xchg
movl
fxch
mov
shl
dec
inc
xchg
pop
test
sbb
cmp
jmp
adc
jb
adc
jp
loopne
pop
cs
xchg
pushf
aad
push
inc
mov
sarb
mov
pop
dec
repnz
jne
js
push
mov
xchg
lea
jmp
in
movsb
shlb
inc
jno
xorl
cmpsb
mov
adc
fs
ljmp
jmp
repnz
mov
push
popf
negb
sbbl
dec
cmpsl
push
xor
mov
lods
lock
jno
dec
lret
cmpsb
sub
mov
fstpt
leave
outsb
adc
sbb
sahf
sub
add
aam
lret
ret
es
loop
insl
movsb
mov
cmpsl
xchg
and
ljmp
ljmp
pusha
aad
jo
clc
fsubl
cmovge
jns
lret
cmp
test
mov
jb
push
mov
inc
frstor
aaa
xchg
mov
sbb
xchg
rcll
jo,pn
jl
ret
hlt
push
add
movsbl
fsubs
or
fdiv
xor
cmp
xchg
mov
sub
ja
js
dec
and
loopne
cmp
lds
hlt
dec
fwait
or
pop
cmp
mov
jle
out
shlb
jns
pop
sahf
in
pushf
fs
das
pop
ja
nop
fidivrs
adc
mov
mov
push
mov
cmc
fwait
mov
bound
dec
and
int
fldt
pusha
test
imul
scas
push
xchg
or
call
addl
mov
mov
xchg
cld
loopne
inc
and
and
mov
xchg
jnp
inc
cmpl
sbb
cltd
mov
cwtl
sub
fwait
ret
cmp
jle
inc
ja
jge
and
xor
stc
into
pop
inc
clc
addl
cwtl
cmc
sbb
lret
pop
imul
scas
add
aam
sarb
xor
or
cmp
hlt
xchg
cmp
add
pop
inc
inc
movsb
leave
or
dec
and
aaa
loop
into
or
in
mov
ds
out
dec
arpl
pop
stc
das
pop
fisubs
lret
mov
jo
in
arpl
pop
mov
aas
movsb
add
jbe
adc
pop
xor
enter
daa
push
cs
mov
cmpl
dec
pop
mov
cltd
xor
dec
push
jb
sub
inc
test
ret
jnp
inc
mov
dec
cmpsb
scas
adc
mov
je
pop
inc
push
inc
push
and
loope
jae
sub
in
loop
xchg
cmpsl
add
pop
movsl
jnp
cli
shrb
clc
mov
xchg
fimull
sbb
in
cli
add
stos
inc
xor
int
pop
mov
out
pop
mov
inc
inc
push
mov
mov
sub
outsb
ds
test
andb
cmpb
jnp
cmpl
mov
pop
fisubs
and
pop
push
call
ret
sbb
mov
pop
lret
add
and
mov
iret
pusha
sbb
js
test
xor
sbb
mov
insl
aam
add
push
xor
jbe
movsl
int
mov
xor
cli
repz
cmp
les
lcall
cmc
mov
xchg
pop
nop
mov
add
aaa
mov
add
gs
adc
cmp
into
xlat
xor
mov
mov
push
pusha
sbb
rorb
push
gs
and
push
dec
hlt
mov
inc
jnp
stos
flds
addr16
xrelease
sbb
mov
mov
pop
ret
adc
lods
shr
iret
add
cs
outsb
aad
push
jecxz
int
ret
shrl
dec
imul
jecxz
ds
enter
mov
push
mov
mov
mov
or
dec
inc
clc
pop
fistl
sbb
inc
xchg
lock
xchg
enter
and
xchg
cmp
jae
ror
jb
mul
and
std
cs
xchg
dec
adc
cmpsl
dec
mov
icebp
test
leave
cld
pushf
lret
adc
cmp
mov
cmp
rorb
jnp
and
cmp
test
jecxz
push
lret
fbld
jno
sub
jbe
clc
inc
rcrl
ljmp
shrl
mov
call
shrd
add
stos
nop
test
jb
sbb
sbb
hlt
mov
lret
cli
sti
test
in
xchg
callw
lea
out
pop
pop
lret
stos
imul
outsl
das
out
xchg
shl
and
jmp
jne
xor
push
in
or
arpl
sbb
xchg
jae
dec
lock
aaa
sub
push
sbb
adcl
lahf
sahf
int3
fwait
cmp
xor
inc
rcrb
or
into
mov
pushl
out
lahf
add
ljmp
in
mov
mov
mov
or
dec
jp
movsb
leave
mov
fdivl
mov
mov
dec
add
mov
pusha
pop
xchg
sti
fistps
aam
xchg
fstpl
and
jnp
mov
out
sarb
in
and
rorl
int
or
mov
sub
in
sbb
jae
mov
ret
jae
pop
js
inc
cmpb
jae
push
adcl
mov
popf
mov
xor
dec
sub
dec
and
xchg
pop
movsb
insb
sbb
lds
scas
push
hlt
inc
rcr
cmp
pop
in
leave
movsb
test
fsubrl
mulb
mov
test
push
mov
mov
test
push
int3
cmp
mov
or
vpsrlw
push
jae
scas
mov
xchg
and
aas
xor
movsb
mov
jmp
jbe
rcrl
enter
daa
dec
dec
repz
dec
mov
jl
pop
mov
pusha
testl
hlt
pop
ja
out
lahf
inc
xchg
push
mov
outsb
test
mov
inc
sbb
jle
xor
jmp
pop
addl
push
sub
callw
cmpl
jbe
rorb
or
inc
sbb
test
loope
aam
movsb
pop
fistpll
loope
xor
pop
aaa
out
mov
test
and
dec
or
lahf
fs
sub
push
mov
dec
aas
addb
jg
leave
insb
mov
dec
pushf
mov
ret
push
and
das
inc
push
jmp
lahf
int
or
jle
jo
and
lea
mov
jmp
sahf
adc
test
inc
mov
or
push
loop
push
mov
fildl
mov
adc
add
dec
lea
mov
out
das
outsb
cli
fnstcw
inc
sahf
sarb
jl
jne
cmpsb
cmc
test
xor
pop
scas
dec
pop
adc
fwait
jno
cmp
in
loope
mov
pop
adc
data16
pop
lods
pop
or
xchg
icebp
xor
jo
push
sub
mov
jns
mov
subl
aas
movsb
push
push
dec
push
movsb
out
mov
push
les
ja
xchg
in
mov
xor
cmpsl
pop
jne
push
or
mov
jmp
or
sbb
aad
test
dec
aas
sti
sti
mov
mov
insl
dec
loopne
aam
orb
lret
xor
lea
jl
mov
fistps
mov
jmp
andl
jo
pop
pop
mov
or
scas
das
cmpsl
push
jnp
mov
push
push
and
adc
mulb
nop
cmp
out
cmpsl
dec
imul
adc
icebp
pop
rclb
cld
sub
lret
test
icebp
mov
xchg
xor
push
rcrb
bound
pop
mov
xchg
loopne
ret
es
fisttpl
adc
jb
mov
movsb
cmpsb
popa
cmp
js
xor
sbb
mov
jl
push
mov
push
ja
and
or
ds
test
js
push
insl
mov
mov
adc
repnz
ret
test
push
add
subb
pop
jne
pop
stos
pop
adc
popf
xchg
sbb
adc
iret
in
inc
ficomps
xor
aad
fisubs
inc
mov
in
mov
dec
pop
repnz
shlb
add
and
or
push
jecxz
in
add
cmp
mov
ljmp
push
sub
mov
push
fcmovnu
mov
or
dec
scas
mov
xchg
mov
call
scas
mov
add
fwait
xchg
jne
mov
pusha
mov
lock
mov
inc
jmp
inc
lods
push
andl
sub
mov
stos
push
adc
out
and
outsw
insb
das
mov
jnp
mov
jle
adc
cmpsl
setns
dec
mov
ret
xchg
pop
push
adc
or
sub
push
cmc
mov
push
negb
cmp
mov
stos
sbb
xchg
shrl
cmp
push
dec
ja
shl
scas
mov
mov
fmul
sbb
pop
arpl
push
xchg
je
or
rorl
or
incb
insb
stos
cmp
and
je
push
call
xchg
lds
jo,pn
or
and
cmp
pop
xor
pushf
mov
jge
and
daa
dec
in
jmp
sub
mov
test
push
subb
and
jno
push
test
sbb
pop
adc
test
dec
cmpsb
mov
add
gs
js
lds
push
insb
loope
lods
ret
mov
cmp
mov
jg
mov
fs
popa
cmp
xor
inc
cmpsb
add
sti
push
sarl
xchg
sbb
pop
push
pusha
jno
scas
cmp
pop
mov
sub
push
fmull
lock
dec
outsb
add
xchg
adc
pop
adc
mov
push
mov
mov
leave
jp
inc
mov
push
out
es
int
cmp
iret
movsl
cmp
das
aad
lret
das
shll
lea
xorl
mov
mov
push
mov
or
xchg
ds
sbb
adc
inc
js
mov
xor
mov
mov
cli
pop
dec
add
sbb
ljmp
pop
jle
cmc
dec
push
mov
xchg
lds
hlt
aaa
adc
dec
iret
adc
sti
cltd
add
mov
movsl
lods
aas
or
iret
or
scas
push
jns
out
in
mov
in
cmp
xor
mulb
bts
mov
rolb
stos
cmp
jno
in
les
jae
xchg
test
sahf
sbb
lods
jbe
mov
inc
pop
sub
adc
imul
sub
inc
add
lcall
dec
push
xchg
xorl
fadd
into
nop
dec
lea
pop
mov
mov
add
sbb
ret
fucomi
nop
and
arpl
inc
xchg
pop
cld
lock
mov
shll
loopne
imul
outsl
shrl
imulb
add
jl
mov
cmpsl
dec
into
repnz
xor
mov
repnz
pop
lret
repz
lock
test
mov
jbe
adc
out
sbb
sub
out
aam
sub
es
jge
pop
cwtl
mov
xchg
fistpll
jnp
push
jb
lods
lahf
mov
mov
or
mov
icebp
add
sub
cmp
int3
jg
stc
mov
fstpl
dec
mov
xchg
leave
int
xor
lock
stos
dec
rorb
xchg
pop
sbb
ljmp
xor
sub
push
add
mov
out
jno
dec
mov
scas
nop
ja
xchg
cmp
cli
cmp
inc
std
ljmp
lcall
add
xchg
ds
pop
test
mov
fldcw
fdivp
sbb
sbb
inc
mov
arpl
add
jp
xchg
mov
scas
popf
std
dec
lret
jne
lock
jbe
pop
sub
xchg
xor
jmp
adc
xorl
mov
sub
in
mov
push
dec
sub
and
jo
insb
lcall
jle
push
in
push
and
popa
adc
ret
iret
pop
lea
inc
cwtl
mov
jae
dec
jns
mov
push
jne
pop
fiaddl
sub
sbb
xor
imul
clc
push
xchg
pop
rclb
inc
mov
add
push
jnp
sub
mov
or
jl
out
aaa
pop
jne
or
aas
jns
add
jno
xchg
fimuls
popf
adc
mov
mov
cmp
lods
movsb
mov
arpl
jbe
cmpsl
push
jge
jno
enter
daa
dec
adc
cmp
lods
jno
fimull
dec
stos
sub
push
arpl
push
xor
sbb
adc
pop
or
test
and
push
inc
aaa
repnz
cmpsb
cmp
dec
in
dec
sbb
pop
dec
cs
jmp
push
cli
cmp
pop
sbbb
xchg
mov
imul
movsl
nop
jbe
sarb
dec
jno
cltd
push
sbb
iret
or
jnp
sbb
xor
insb
sahf
pop
sub
ret
xor
mov
push
shl
fdiv
cmp
das
outsb
addr16
sbb
ja
adc
movsb
jmp
jp
xor
adc
and
and
icebp
cltd
data16
dec
cmpsb
fmuls
cli
ds
cmp
dec
jnp
mov
push
sbb
sbb
fstps
xor
fimull
loop
xchg
stc
dec
sbb
cmc
adc
ss
adc
cmp
out
mov
cli
mov
xor
std
cmpsb
cmp
mov
xor
cmp
sub
adc
loopne
sahf
lea
movsb
rcll
insl
sub
imul
fnstenv
jnp
enter
pop
lods
es
cmp
mov
xlat
out
sub
sub
shlb
daa
fs
ffreep
mov
adc
insl
nop
xchg
inc
test
adc
repz
lock
mov
xchg
imul
call
xor
repnz
fistpl
adc
push
loope
pushf
push
pop
aad
ja
inc
push
inc
loop
cmp
jb
jne
dec
into
daa
xor
shl
mov
push
shll
jmp
mov
call
int3
or
rcr
sbb
cmc
pusha
inc
sbb
add
mov
mov
mov
xchg
mov
push
shll
gs
and
xchg
dec
pop
push
stc
add
icebp
or
sbb
ss
mov
sub
sbbb
mov
inc
sub
sahf
iret
ret
insb
mov
cli
movsb
jmp
inc
lcall
clc
test
ljmp
test
cmp
and
sub
repz
mov
cltd
push
jae
test
sbb
mov
test
sbb
pop
sbb
or
shr
fistps
pop
lret
cmp
stos
cmp
out
cwtl
cltd
cmp
add
mov
wbinvd
int3
gs
mov
mov
repnz
loop
and
xor
ja
cmp
test
inc
xchg
aam
or
xchg
cltd
fwait
leave
mov
push
sub
adc
lock
sbb
bound
or
in
push
fstl
pushf
pop
mov
in
xchg
add
pop
jbe
lods
lret
ret
add
pop
mov
push
aaa
pop
dec
lods
adc
jne
mov
fistpll
xchg
push
insl
std
jmp
fsubl
add
aas
out
ds
add
push
mov
stos
adc
bound
dec
sahf
ds
add
loope
jle
mov
in
and
test
ret
push
pop
les
dec
inc
mov
lods
inc
push
dec
xlat
add
push
hlt
lret
mov
xor
sub
push
stos
xchg
imul
scas
xchg
lea
shrb
test
repnz
insb
popf
leave
or
mov
arpl
lods
inc
push
adc
or
aaa
dec
ds
fdivrp
in
or
sbb
lcall
pop
mov
ljmp
adcb
jle
scas
push
stos
inc
and
mov
mov
insl
dec
jbe
shlb
mull
xor
dec
mov
imul
clc
jl
repz
dec
sbb
push
inc
pop
push
xor
mov
data16
movsb
push
rcll
adc
test
out
testb
mov
call
js
fstl
and
shrb
add
lret
pop
cmp
std
mov
xor
sbb
mov
loop
fistps
mov
xchg
add
pushf
pop
xor
call
sbb
pop
xor
movsb
fucom
pop
mov
dec
lcall
mov
mov
cmp
inc
adc
xchg
jnp
jg
cwtl
pop
mov
cld
xor
jo
nop
and
incl
hlt
cmpb
inc
stos
add
lods
movsb
cs
jp
fcomip
insb
mov
push
ljmp
loop
test
push
xor
mov
in
in
jo
stc
add
push
ss
push
cmp
jnp
mov
cli
mov
arpl
cmp
pusha
sahf
or
aad
push
ljmp
mov
pop
sbb
inc
mov
push
adc
or
add
ret
outsl
sti
lods
or
repz
sub
jns
mov
mov
mov
ss
gs
sub
dec
jo
dec
inc
push
mov
fildll
les
ss
xchg
sbb
call
mov
movsl
pop
mov
dec
adc
imul
xor
jmp
mov
ret
aad
hlt
movb
push
aas
fmuls
push
dec
inc
popa
push
je
jecxz
jecxz
es
aam
mov
xchg
adc
sbb
add
lcall
adc
fisttpl
pop
inc
jnp
inc
mov
daa
jne
inc
sbb
jnp
mov
jb
add
push
mov
imul
mov
and
sbb
add
sub
mov
cld
dec
cmp
lret
shll
cmp
lods
pop
mov
pop
mov
daa
rclb
jb
aam
aam
aad
es
insl
daa
dec
xabort
ljmp
or
mov
mov
pop
add
push
or
movaps
inc
cltd
dec
push
add
mov
les
jg
or
addr16
call
xchg
cmp
sbb
repz
pop
jbe
inc
stos
daa
cwtl
or
sti
movsb
xchg
and
cmc
xor
ret
mov
push
mov
cmc
aas
ja
mov
ja
jmp
dec
loopne
outsb
inc
sub
jp
dec
mov
clc
in
push
int3
and
add
dec
int
out
sbb
bound
fstps
and
xchg
mov
iret
or
stc
pop
aaa
stos
pop
jnp
fnstcw
dec
mov
in
mov
lea
jne
xchg
sub
mov
fistps
sbb
jmp
cmpsl
ret
lret
push
out
out
fsubrl
bound
stos
push
int
imul
jo
adc
xor
jle
clc
mov
mov
sub
iret
pop
or
dec
pop
sti
les
scas
es
sub
sub
adc
popf
push
jecxz
push
jae
mov
xchg
mov
repz
imul
sub
pop
pop
pop
rolb
mov
stos
add
hlt
or
arpl
mov
or
repnz
rorb
movsb
loop
xor
int3
in
mov
mov
in
vcomisd
ret
scas
xor
lods
and
dec
pop
cmp
sub
cmp
dec
pop
jge
mov
daa
dec
out
cmp
xchg
cwtl
jno
mov
jl
aaa
dec
dec
mov
inc
push
sub
xor
push
push
jo
ret
dec
rcll
test
mov
ret
mov
in
sbb
push
pop
jge
sbb
or
fs
xchg
cwtl
cmp
cmc
fnstsw
mov
call
shl
sub
push
dec
in
xor
add
jmp
ljmp
loopne
jp
jnp
aas
sub
lea
xor
aam
je
pop
push
outsl
or
fmull
inc
sub
fsubrl
out
adc
lods
dec
je
out
es
lahf
in
dec
inc
mov
fnstsw
and
pushw
neg
fwait
int
sbb
add
imull
lret
and
jbe
rorl
cmp
out
xor
dec
outsl
mov
adc
jg
cmp
jle
mov
sbb
cmp
jbe
pop
out
dec
xor
repnz
xor
or
sub
into
add
js
pop
mov
pop
sub
cld
adc
xchg
imul
call
push
cmp
popa
pop
sub
icebp
mov
and
gs
pop
xor
rcrb
sub
inc
das
fsts
inc
add
mov
xchg
adc
in
call
xor
pop
inc
sub
adc
rcrb
aam
cmpsb
push
mov
inc
push
inc
push
pop
adc
jb
lahf
bound
ds
je
push
lahf
jecxz
dec
stos
xlat
pop
testl
jl
mov
dec
popf
cmp
insb
pop
fstpt
dec
pop
out
les
dec
xor
outsl
pop
das
and
mov
add
into
adc
push
cld
and
xor
out
adc
lss
mov
fs
jae
sbb
inc
rorl
mov
gs
pop
shll
sub
repz
xor
lahf
jg
ret
sbb
jb
add
inc
insl
push
jns
clc
outsb
loop
xchg
pushf
lods
jb
jl
adc
lods
loopne
outsb
mov
inc
stc
ljmp
in
cwtl
ja
fs
test
mov
fisttpll
jl
xchg
jb
dec
cmp
rcrl
ss
stos
push
mov
mov
add
fisubs
xor
ret
ret
out
xor
insb
inc
mov
clc
push
scas
dec
repz
pop
fdivp
lds
pop
ret
dec
rcrl
or
pop
jne
daa
add
outsl
pop
sub
cmpsb
mov
out
cli
ret
leave
nop
in
jns
push
stos
in
aas
rcll
mov
mov
hlt
mov
and
and
or
es
mov
mov
dec
jae
and
test
shll
gs
mov
dec
jmp
jb
or
sarb
mov
or
fisubrs
jge
xchg
insb
fistpl
jnp
dec
sarb
sub
into
adc
ret
out
xor
xchg
sti
jae
cmp
popf
js
push
repnz
ficompl
cmp
adc
imul
shrb
data16
clc
shlb
mov
dec
or
testl
push
inc
pop
test
or
lods
push
mov
pop
fwait
pop
or
in
add
mov
push
pop
adc
xchg
lds
jo
aas
push
scas
adc
into
into
pop
cmp
inc
movsb
inc
vrcpps
dec
shlb
dec
push
jge
mov
enter
daa
dec
cwtl
sub
jno
pop
xchg
jl
push
cmp
xchg
je
or
push
xor
in
aaa
fistps
sarl
pop
push
test
inc
in
pop
cmpsb
ror
in
add
js
push
dec
pop
mov
and
loope
shll
push
xor
cmp
nop
jae
movsl
mov
mov
mov
or
sbb
add
mov
mov
in
sub
lea
daa
jne
push
push
or
idivb
sbb
push
dec
subl
shrb
mov
jae
jg
jne
mov
and
inc
push
cli
stos
aaa
int
fadds
imull
test
rorl
cmc
sbb
fistpl
outsb
insl
mov
aam
xor
push
xchg
loop
loopne
stc
outsb
xchg
cltd
fs
and
les
adc
cmpsl
or
out
loope
cli
and
fwait
xor
or
push
cmc
push
pop
dec
pop
dec
int
adc
adcl
sub
add
mov
fistpl
cmp
ret
out
sub
jne
sti
in
fsubrl
gs
xchg
xchg
nop
daa
cmp
dec
cs
xor
rcll
dec
ljmp
or
mov
movsl
sbb
cwtl
mov
pop
hlt
and
mov
outsl
jne
imul
and
mov
aas
push
add
dec
xor
mov
jecxz
mov
fimull
imul
aad
mov
imul
dec
cltd
lods
fldt
bound
inc
mov
inc
lock
das
add
dec
mov
mov
adc
shll
inc
std
sbb
inc
dec
adc
pop
cmpsl
dec
sbbb
xchg
xor
cld
sahf
imul
imul
cmp
mov
sub
gs
push
push
ret
stos
jb
cmpl
clc
test
mov
ljmp
mov
mov
gs
and
mov
adc
cltd
mov
sbb
mov
cmpsl
es
add
xchg
or
icebp
mov
mov
icebp
test
stos
add
xchg
push
xchg
jnp
fldl
push
dec
pop
test
or
shlb
sub
jmp
sti
fnstsw
pop
cltd
xor
mov
dec
and
inc
pop
imul
push
adc
mov
lods
mov
fldcw
or
jl
jns
je
in
push
inc
xchg
pop
push
ja
loop
and
out
ret
andl
movsb
jp
mov
mov
mov
or
in
jg
dec
ret
icebp
pusha
rcll
xchg
iret
adc
pop
xchg
cmp
xchg
pushf
out
adc
dec
pop
pop
mov
dec
cmpsb
mov
xchg
add
inc
fistpl
jnp
and
jle
push
in
mov
adc
adc
pop
pop
imul
shlb
imul
popf
lahf
ret
mov
dec
xor
jno
lret
fimull
inc
xchg
loopw
sbb
add
scas
mov
jecxz
sarb
in
sub
leave
outsb
fdivrp
hlt
sahf
fldenv
inc
pop
push
or
push
mov
or
fidivrl
pop
pop
nop
int3
mov
sbb
cwtl
jo
cmp
in
popa
xchg
movsb
int
fcoms
and
jbe
les
enter
daa
dec
int
cmp
pushl
and
rorb
jmp
push
out
outsl
sti
xor
mov
arpl
movsb
arpl
push
push
jae
inc
cmpsb
inc
add
js
sub
pop
sti
arpl
push
lock
mov
mov
out
ds
sub
shrb
pop
incb
push
rcrl
daa
subb
inc
mov
sub
rcll
push
sbb
loopne
sub
std
out
outsb
repz
outsl
adc
jecxz
inc
jg
mov
mov
movsb
push
mov
xchg
jl
lea
push
std
in
mov
fdivs
int3
imul
mov
insb
shll
sbb
pop
sahf
jecxz
pop
test
cmp
outsl
dec
popf
dec
loop
gs
stc
and
loopne
adc
movsb
adc
insb
sub
out
divl
cli
pop
or
xor
sub
dec
xor
mov
mov
cmc
das
push
shl
mov
cli
pop
imul
addr16
cwtl
xor
mov
pop
test
lods
ret
cmp
sub
ljmp
mov
sti
enter
sbb
lahf
xchg
gs
or
lea
push
leave
and
repz
xchg
ja
sbbl
xor
xor
cmpsl
iret
iret
adc
loop
pushf
insb
lret
adc
cs
ss
aad
les
mov
fs
mov
nop
jb
lcall
inc
xor
jecxz
pop
fadd
push
lea
loop
mov
sub
subl
lcall
sub
insb
inc
aaa
aaa
xor
das
loope
out
sub
mov
jae
jle
adc
push
std
mov
adc
pop
mov
xlat
loope
leave
shl
push
addb
add
je
adc
outsb
sub
fucomip
aam
mov
ret
cmp
lret
cmp
in
nop
xchg
sbb
imul
vdivsd
push
mov
mov
jmp
xor
cmovne
sbbb
mov
jbe
enter
fsubl
test
jo
add
mov
inc
rorl
and
ja
icebp
stos
hlt
jge
and
test
add
sub
jl
fnsave
jo
outsb
or
jae
mov
fcmove
dec
sarl
ja
movb
pusha
fiaddl
loop
or
je
fwait
test
mov
mov
mov
pushf
out
fwait
push
jns
xor
push
cmpsl
icebp
arpl
mov
or
ja
addr16
cmc
jp
or
mov
push
inc
dec
cmp
jne
repnz
pusha
pop
fisubs
xchg
mov
pop
inc
xchg
or
push
cmp
jp
fdivl
ss
lcall
into
imul
mov
jecxz
repz
icebp
in
add
adc
dec
iret
cmp
fcmovnb
mov
xchg
inc
iret
or
cltd
fcomi
push
pop
or
push
lock
fiaddl
imul
sbb
enter
leave
cmp
hlt
mov
adc
movsb
stc
mov
hlt
jmp
cs
inc
pop
les
cmp
sbb
mov
aaa
fimull
or
xor
negb
movsl
int3
cmpsb
mov
jno
inc
fidivrs
mov
nop
cmpsb
jo
dec
lret
cmp
add
iret
mov
pop
lock
jbe
lods
pop
jge
push
xchg
enter
daa
dec
xchg
jno
adc
jl
cld
rorl
mov
shlb
xor
and
lods
lahf
and
push
ja
and
pop
cmp
sbb
cmpsb
test
idivl
xchg
arpl
cmp
mov
sub
call
add
sbb
movsl
mov
cld
rolb
jecxz
subb
out
mov
cmp
int3
movsb
xor
fcomi
pop
lock
push
pop
mov
mov
push
je
lods
fmull
sub
jo
outsb
push
scas
add
cmp
jg
mov
mov
mov
lret
jmp
xor
add
nop
fdivs
cmpsb
sbb
test
bound
dec
and
and
jge
jl
jecxz
mov
ss
pop
fyl2xp1
fcoml
jnp
pop
cmc
xor
iret
dec
xor
dec
stos
adc
addr16
gs
mov
cmp
cmp
cltd
into
stos
xor
cmc
imulb
loopne
jmp
mov
mov
push
imul
sbb
add
xchg
data16
clc
lods
test
mov
cmpsb
sub
mov
in
add
sti
dec
sbb
ret
gs
enter
pop
dec
in
cmpsb
or
and
mov
aam
add
xchg
cmp
jecxz
pop
ret
mov
push
pop
pop
das
jae
push
jnp
pop
sti
adc
inc
mov
cs
adc
aad
shlb
movsl
sbb
push
mov
jb
in
dec
and
pavgw
dec
xlat
loopne
movsb
out
pop
stos
cwtl
andb
iret
mov
into
dec
pushf
outsl
xor
or
pop
iret
sbb
inc
mov
and
mov
sub
stos
roll
and
std
dec
movsb
dec
push
clc
dec
cmpsl
inc
hlt
pop
mov
cmp
popf
cld
hlt
jmp
lret
lea
ret
outsl
mov
cmpsb
jmp
jo
rcrl
sub
shl
mov
aam
enter
pop
cwtl
mov
cmp
ret
pop
fdivrp
pop
inc
fsts
aad
inc
popa
fsubr
or
xchg
and
je
xchg
shld
add
jo
cltd
sub
test
lods
addr16
mov
fldl
xchg
mov
xchg
push
repnz
rcl
lahf
test
pop
and
stos
jecxz
sbb
xchg
or
aam
sbb
cmp
ret
xor
pop
xchg
ja
ret
mov
add
sub
enter
or
ret
lods
push
mov
cmp
idivl
test
add
mov
inc
out
xchg
add
sub
jns
cltd
and
and
xchg
idivb
jg
xor
and
in
push
cmpsl
outsl
add
or
loopne
lahf
push
dec
sbb
xchg
jne
test
idivl
inc
fists
xchg
xchg
cmc
es
xchg
sarl
orl
aad
sbb
notl
leave
jp
stos
push
dec
mov
insb
sbb
adc
and
jle
test
in
mov
adc
mov
fwait
cs
ret
nop
pop
xlat
push
pop
inc
ficoml
jae
xchg
mov
sbb
push
popf
in
xor
dec
in
cs
outsl
inc
or
mov
push
xchg
adc
lret
imul
and
mov
mov
sarl
negl
leave
pop
jno
hlt
xor
inc
arpl
xchg
lret
push
icebp
sbb
mov
push
or
loopne
add
dec
jp
mov
and
jo
jbe
scas
scas
lods
in
xchg
movsb
jecxz
call
jbe
or
add
aaa
daa
inc
ret
add
xchg
sbb
sub
jl
mov
dec
push
mov
push
xor
mov
dec
adcl
xchg
test
out
dec
inc
xchg
xchg
mov
dec
xchg
in
mov
add
xchg
out
jns
ds
mov
xchg
sub
add
ds
shlb
pop
shll
addb
sbb
mov
add
push
xor
in
out
pop
pop
jmp
or
cltd
pop
das
ljmp
lret
pop
adc
sub
cmpsl
ljmp
sbb
jg
xchg
shlb
fimull
inc
mov
xchg
push
and
rorb
pop
push
imul
mov
lret
xchg
rcl
orl
adc
test
add
push
outsl
pop
jns
loop
or
stc
xchg
leave
and
adc
push
aas
xor
lea
cmp
bound
dec
cli
mov
jl
cmp
push
nop
or
movsl
jae
mov
int
pop
cmpsl
sbb
pop
mov
imul
lock
add
xor
mov
insb
fisttpl
or
mov
in
rcll
daa
sti
stc
fcmovne
in
jmp
nop
mov
mov
inc
es
push
fptan
sbb
fbstp
out
xchg
std
sbb
or
sub
inc
ja
sarl
pushf
ret
jmp
fdivl
aad
inc
mov
adcl
and
dec
cwtl
sbb
je
pop
hlt
jecxz
sbbl
les
ds
cwtl
cmp
pop
mov
gs
ret
sbbl
jg
aaa
loop
pop
jb
fadds
mov
lock
das
lahf
and
xchg
mov
sub
icebp
rcll
and
orl
repz
adc
xchg
cld
pop
ljmp
cmpsb
pusha
fidivl
or
pop
dec
mov
shlb
mov
xor
pop
fcoml
or
or
sbb
clc
pop
mov
dec
pusha
pop
popa
repz
lods
mov
lahf
mov
into
popa
enter
adcb
lsl
cltd
pusha
push
out
test
clc
loop
arpl
fcomp
sub
test
sub
bound
shl
outsl
dec
pop
int
push
shrb
ljmp
add
mov
xchg
or
lret
mov
sbb
dec
xchg
xlat
pop
lret
ja
inc
inc
dec
lahf
hlt
cmc
inc
push
inc
pop
or
fistpl
fwait
jecxz
mov
add
adc
add
jbe
daa
bound
mov
pop
xchg
inc
shlb
mov
loopne
inc
cmpsb
dec
mov
mov
push
mov
mov
pop
mov
mov
cmpsl
xchg
fbstp
fbld
xchg
dec
xchg
xchg
jmp
sahf
jp
sbbl
out
iret
mov
mov
or
and
cmpsb
insb
xchg
jnp
inc
outsb
jle
mov
es
iret
cli
inc
rol
scas
subl
aaa
mov
push
fistps
popf
adc
outsl
push
out
mov
fisubl
mov
sbb
rcr
imul
and
mov
cmpb
clc
shll
cmp
inc
gs
or
cltd
pop
pop
aaa
pop
push
js
mov
adc
int3
jl
xchg
pop
iret
imul
lds
mov
scas
mov
leave
and
jmp
shlb
aas
stos
jbe
fsubrl
enter
daa
inc
test
cmp
incb
jl
clc
jne
mov
int3
push
cwtl
push
fs
pop
mov
pop
pop
es
sbb
mov
xchg
inc
and
sbb
int
and
popf
mov
js
cmpsb
pop
mov
mov
xor
fistpll
pop
jmp
ds
loope
movsl
rol
sarb
pop
xor
cmp
cld
pop
lock
pop
std
xor
scas
xchg
pop
ds
lret
mov
pop
push
and
and
mov
mov
or
xor
mov
mov
movsb
mov
divl
jle
push
push
outsl
mov
fsubs
jae
lret
adc
imul
sbb
sti
jg
sahf
int3
lcall
inc
bnd
out
push
loop
cs
dec
and
fs
dec
adc
fidivl
rclb
leave
cmp
pop
popa
test
and
and
xor
mov
add
lock
into
jo
cltd
cmc
test
pop
out
in
adc
jg
imul
sbb
add
pushw
xor
add
cmpsl
xchg
xlat
cmpsl
je
sub
dec
mov
cmp
std
sti
test
jge
or
mov
nop
xchg
dec
push
stos
lret
push
inc
cmp
fldcw
sub
repz
loope
xchg
sar
sbb
test
and
lods
cmp
pop
rorb
adc
popf
pop
pushf
insl
jecxz
and
lods
test
movsl
sbb
inc
sbb
xchg
sbb
addr16
ucomiss
and
sti
push
out
jl
mov
jecxz
mov
dec
lcall
inc
jo
jb
adc
data16
adc
add
cmp
jle
insb
mov
cwtl
in
and
pop
mov
testb
mov
cmpsl
inc
jbe
mov
ljmp
lret
imul
mov
dec
mov
outsb
inc
rcl
cmp
sub
and
xchg
out
cmpsb
es
xchg
mov
inc
xchg
xlat
in
ljmp
das
lods
notl
fdivrl
inc
inc
adc
cmpsl
add
bound
add
add
xchg
or
mov
ret
icebp
push
adc
adc
push
and
xchg
cmc
iret
sbb
js
rorl
mov
js
jmp
rorl
dec
in
adc
add
pop
lcall
and
or
repz
mov
pop
mov
dec
not
sbb
cmc
hlt
ja
inc
push
dec
xchg
dec
push
inc
mov
rorl
adc
push
sahf
mov
add
insl
pop
icebp
out
push
call
out
es
push
ss
adcb
cmc
mov
or
or
jp
xor
mov
cmpsl
jo
cmc
add
mov
fsts
dec
loop
insl
jne
enter
dec
fists
or
sbb
jmp
imul
outsb
out
testl
mov
inc
pop
outsb
stos
cmp
stos
and
rcr
insb
repnz
jnp
xor
jle
orl
inc
scas
adc
test
pop
push
std
ret
pop
pop
inc
jo
inc
lock
jae
leave
mov
mov
xor
push
insl
cmpsl
neg
sbb
inc
sbb
adc
scas
inc
int3
xchg
test
shr
into
mov
popf
lds
leave
dec
xchg
imul
arpl
mov
or
push
nop
das
aaa
pop
sub
or
ds
addr16
push
pop
decb
inc
fisubs
xor
pcmpeqw
jo
scas
insl
xchg
and
and
stc
cmpsb
lods
push
mov
sbb
mov
ror
insl
daa
inc
leave
movsl
cmp
xchg
cmp
jl
xor
dec
and
testl
mov
aad
lahf
jge
mov
cli
fwait
test
jl
and
scas
xchg
xchg
cmpsb
push
pop
pop
in
test
js
dec
dec
pop
mull
loope
sub
sub
mov
cmp
xchg
adcl
movsl
enter
pop
mov
loopne
addr16
sbb
and
sbb
pop
pop
gs
sub
into
add
sub
jbe
push
jns
inc
fmull
or
mov
or
adc
dec
fisubs
mov
mov
mov
push
mov
out
and
imul
fsubs
int3
mul
mov
sbb
add
mov
test
sahf
outsl
pop
test
pop
loop
fwait
inc
mov
loop
andl
and
fs
sub
adc
cmp
pop
fwait
mov
cli
and
shlb
sbb
cmp
adc
mov
push
imul
cli
shlb
in
mov
add
gs
adc
xchg
xor
repz
lods
pop
mul
cmp
frstor
push
sub
jo
mov
cmpsl
stos
idiv
push
scas
sub
call
or
push
inc
dec
sbb
fldenv
fadd
cmc
cwtl
mov
xchg
orl
call
sub
lods
pop
jae
popa
adc
aaa
pushf
sbb
pop
cs
addr16
in
push
rolb
mov
xor
jb
pushl
jecxz
je
fnstcw
mov
jmp
scas
dec
cwtl
mov
push
imulb
imul
xchg
or
rolb
lock
in
out
pop
adc
jbe
push
mov
aas
inc
rcl
xor
test
je
pop
inc
enter
insb
cmpsl
inc
jge
mov
shrl
lret
fimull
sbb
loope
pop
sarb
rcrb
sbb
mov
add
ret
jbe
jnp
adc
subb
clc
rcl
ret
jge
ljmp
mov
mov
mov
dec
inc
push
push
add
ljmp
into
fs
test
test
push
aam
insl
fnstsw
gs
jns
xchg
sbb
push
pop
and
xchg
mov
mov
add
stos
popf
clc
ficoml
or
inc
mov
or
dec
pop
cmc
add
sbb
ja
int
dec
test
inc
dec
xor
or
xchg
in
inc
repnz
inc
movsl
and
mov
mov
out
xor
lret
and
fstpl
or
mov
xchg
xchg
mov
cpuid
movsb
fwait
jp
dec
fidivs
and
lea
lds
stc
jne
xchg
pusha
enter
je
es
out
xchg
nop
jmp
xor
xor
rclb
dec
mov
xchg
xchg
and
pop
test
jnp
fdivp
jle
jo
in
sbb
xor
mov
cmp
pop
jl
sbb
jae
dec
xchg
gs
popf
bound
jbe
in
pop
inc
fcmove
xchg
xchg
sbb
outsb
daa
icebp
imul
push
adc
mov
lock
sbb
arpl
mov
addps
shll
mov
xchg
out
int3
push
jle
pop
sub
inc
sbb
xchg
fisubrs
scas
dec
adc
and
aaa
cmp
mov
dec
add
fidivrl
jge
dec
sahf
enter
daa
inc
xchg
int
sub
mov
lods
sub
aad
xchg
pop
mov
xor
xor
pushf
jl
push
ret
mov
lahf
push
inc
lods
lods
inc
jge,pt
cmpsb
rcl
arpl
imul
pop
ss
push
jne
loope
inc
mov
inc
cmp
inc
and
repnz
decb
jp
and
push
call
xor
inc
cmp
xor
jecxz
sub
pop
lods
ljmp
sar
in
clc
lea
sub
mov
sub
push
jp
dec
gs
ret
mov
mov
or
mov
fcomps
adcb
xchg
jecxz
mov
ljmp
cwtl
and
xor
lods
jg
movsb
loopne
loop
or
sub
adc
movsl
in
push
dec
mov
mov
movsl
out
and
xor
pop
into
pop
fxch
ss
out
xchg
repz
pop
add
and
fdivs
adc
imul
lods
inc
imul
and
lods
in
mov
adc
outsb
decb
mulb
adc
nop
dec
dec
movsl
dec
push
sub
fsts
mov
cmp
out
xchg
inc
mov
mov
call
stos
sub
cmpsl
adc
int
pushf
ret
add
add
or
pop
push
or
xor
loopne
adc
mov
jb
sbb
dec
std
cmp
je
xchg
and
mov
in
adc
lea
jae
mov
cltd
lods
mov
call
xlat
fcmovnb
out
push
pop
pop
clc
mov
fcmovu
xchg
lock
pop
mov
cmp
xchg
mov
push
fcomps
sarl
xchg
testb
cmp
or
dec
repnz
adc
les
cld
mov
push
or
in
frstor
lods
addr16
mov
sub
mov
stos
ret
sbb
clc
or
mov
push
cwtl
repnz
test
mov
aaa
jb
and
loopne
or
add
mov
call
sbb
lahf
inc
sub
jmp
jmp
xor
sar
popf
pop
pop
into
inc
jmp
out
adc
xchg
and
xchg
jno
xchg
jo
xor
lcall
out
inc
adc
or
cld
cld
pop
sti
into
ret
ja
fxch
dec
js
popf
inc
jecxz
mov
mov
aas
negl
in
ret
mov
out
adc
jl
into
inc
lret
xchg
mov
dec
shrl
mull
das
or
cmpsl
aas
addr16
jp
and
mov
mov
mov
add
pop
test
mov
pusha
arpl
fists
loop
jmp
pushl
or
xchg
out
mov
xchg
mov
lds
stos
push
outsl
mov
push
xchg
xchg
insb
enter
pop
push
scas
jle
push
mov
adc
nop
pop
ret
dec
pop
mov
pushf
inc
push
mov
pop
push
sub
push
imul
jg
movsb
xchg
jno
sbb
sbb
push
imul
scas
or
inc
push
push
jecxz
rcrb
or
inc
cld
inc
leave
cmp
hlt
pusha
push
pop
arpl
mov
inc
outsb
push
loopne
ds
pop
sbb
mov
aaa
xchg
add
add
pop
xor
cmp
pushf
lcall
lods
jo
xlat
jno
sub
push
cmp
pop
movsb
bndldx
jbe
or
jg
enter
daa
inc
fildll
pop
jecxz
jno
into
sub
dec
add
adc
inc
int
xor
sub
push
push
xchg
jle
test
adc
filds
cmpsl
pop
cmpsb
push
shlb
sbb
js
push
and
jne
in
push
js
loope
jnp
sub
mov
cmp
and
movsl
out
ror
mov
mov
lea
push
add
sub
mov
popf
mov
sub
fadds
sub
lcall
jge
mov
sub
adc
test
push
mov
cmpl
out
outsl
push
mov
fcomp
loope
mull
lret
add
mov
push
mov
jl
mov
outsb
test
inc
push
xor
les
pusha
inc
loop
lret
and
outsl
or
adc
adc
daa
ss
xchg
cmpb
lret
out
and
cli
mov
lea
jae
or
std
sbb
fldcw
mov
xor
sbb
adc
xchg
mov
gs
push
je
xchg
xor
adc
pop
xor
fs
sub
popf
pop
mov
jge
or
jno
lds
add
nop
and
xchg
dec
and
fxch
xor
repz
xor
sbb
jmp
sub
aas
pop
fstps
add
outsb
push
test
repnz
mov
lock
inc
sub
cld
aas
outsl
sbb
insl
push
dec
je
and
out
jecxz
sti
pusha
out
insb
sbb
daa
sbb
je
mov
xorl
sbb
adc
inc
popa
pop
or
inc
ficoml
sbb
cmp
pushf
or
and
or
int
pop
testb
std
test
adc
cmpsl
inc
pop
mov
outsl
in
lods
cld
lret
sub
out
mov
lods
lods
mov
jecxz
mov
lret
add
sar
jg
sub
and
insl
es
lods
insl
inc
add
inc
je
xchg
xchg
aaa
pop
ljmp
lods
cmp
mov
pop
jns
push
mov
sub
add
or
out
pusha
sub
push
pop
mov
ffree
movsl
in
test
sbb
xchg
test
out
std
rcll
ja
jns
lds
jbe
fistl
adc
sbb
testb
sub
xor
addr16
out
ds
xchg
dec
in
dec
sub
jnp
mov
cmp
push
jmp
or
fwait
std
fwait
lahf
jl
push
xchg
add
jle
mov
repnz
add
jns
sub
pop
xchg
cmpl
aad
int3
rcll
addr16
jp
test
jne
jbe
mov
dec
mov
jne
sub
fbstp
gs
jmp
lret
sbbl
out
and
xor
add
shrl
daa
xor
jnp
xchg
jle
es
in
add
iret
jbe
jae
sti
shl
ljmp
jae
sbb
jmp
lcall
sbb
inc
fidivl
dec
int
enter
into
xlat
imul
scas
outsl
vandnps
imul
xchg
gs
leave
scas
push
sub
stos
lea
rclb
fs
test
cmp
mov
das
int3
sub
pop
mov
cmp
movsb
fnstsw
scas
or
lret
and
sarb
jge
movsb
lcall
jbe
test
sub
ljmp
cmp
xchg
or
pop
dec
jo
loopne
and
aaa
xor
lds
push
imul
imul
and
js
aaa
stos
pop
mov
xor
loope
fimull
cmp
add
ds
jno
movsl
frstor
test
pop
scas
jnp
andb
movsb
add
insb
xchg
xor
in
mov
sub
test
stos
sub
lcall
jns
dec
lahf
xchg
sub
cli
cmc
adc
mov
clc
mov
mov
fstps
push
adc
int
rorl
xchg
jbe
mull
mov
ds
orb
in
pop
and
xchg
xor
hlt
loop
mov
fs
push
jne
test
push
gs
dec
shll
and
inc
cli
mov
sbb
cmp
pusha
mov
lods
into
cld
xor
cmc
mov
jo
pop
inc
ds
adc
ljmp
or
data16
lods
adc
inc
cmp
gs
dec
inc
les
call
sub
lcall
nop
lcall
xor
in
flds
bound
repz
jns
int3
xrelease
jo
fadd
test
xor
adc
pushf
sbb
jmp
pop
jae
and
aad
push
add
mov
aas
push
js
jb
in
dec
dec
jmp
fdivs
ja
pop
orl
pop
push
sub
xor
or
dec
sbb
clc
lret
inc
pop
mov
cmp
mov
xchg
sub
je
lret
in
in
sbb
inc
testb
dec
call
stos
sarl
ret
outsb
cld
testb
jnp
mov
mov
mov
ljmp
sub
xor
ret
and
push
insl
sub
mov
sub
das
scas
popa
data16
lods
mov
mov
jmp
push
xchg
or
pmaxub
lahf
add
push
addb
loope
sbb
out
sbb
scas
lds
xchg
imul
cltd
push
push
pop
and
lret
outsb
out
flds
rolb
cs
xchg
call
cmpsl
adc
mov
js
jmp
loopne
mov
adc
dec
xchg
mov
pop
jno
hlt
ja
jl
dec
pop
mov
inc
adc
and
fnstsw
push
sub
xor
flds
out
shl
push
hlt
sub
in
fcmovbe
xchg
shlb
pop
mov
push
xor
xchg
lds
imul
in
mov
dec
lret
mov
jecxz
sbb
int3
pop
jne
sub
pusha
cltd
cld
adc
rorl
test
mov
gs
out
xor
pop
sbb
mov
inc
pop
push
stos
add
push
and
insb
sahf
mov
jg
jle
out
jmp
add
inc
iret
aad
or
pop
and
inc
sbb
push
jae
push
ljmp
mov
inc
imul
push
sbb
pusha
xor
movsl
scas
rclb
push
in
faddp
push
mov
add
jmp
mov
arpl
shlb
or
stos
sbb
mov
or
scas
add
popa
pop
int3
adc
cmp
fdivp
add
lds
jae
jo
add
and
fwait
test
shl
adc
pushw
jbe
mov
mov
daa
inc
add
data16
jl
jl
insl
or
push
pop
aaa
add
pusha
mov
fs
cmp
mov
sbb
pop
sti
inc
jmp
xchg
cmpsb
pop
cmc
arpl
and
fstl
repz
dec
loope
pop
out
fsin
test
enter
vmread
movsl
in
or
subl
xorb
add
add
jle
sbbl
xor
pop
sub
xchg
cmp
stc
in
sub
inc
outsb
or
sub
and
and
movsb
cwtl
pop
mov
jl
and
push
xchg
int
xchg
cmpsb
fmuls
aad
loop
or
xlat
stos
inc
rcrl
out
insl
fwait
sbb
in
sti
imul
pop
pop
aas
outsl
inc
insb
pusha
loop
loop
stc
fldl
mov
ss
xchg
mov
out
aaa
sbb
lock
xchg
cmp
and
sbb
mov
fbld
cmc
addr16
loopne
int
pop
popa
push
fstl
push
mov
sti
jne
das
sbb
popfw
and
lods
cli
push
imul
loop
loop
mov
stos
std
in
push
int3
jmp
adc
mov
push
pop
dec
nop
fisubl
dec
test
inc
cwtl
nop
sub
cmp
add
dec
xor
push
enter
pop
call
sub
pop
pop
aas
jge
adc
movsb
rcrb
fbstp
aad
pop
testl
fcomps
jb
movsl
ret
and
je
ret
push
js
lea
and
mov
jno
mov
and
jb
fistl
mov
inc
outsl
addl
push
shrl
fstps
push
mov
sub
push
and
and
test
dec
std
imull
push
inc
rorl
lret
icebp
sbb
inc
dec
lret
xchg
shrl
clc
or
mov
jmp
mov
or
xor
movsl
pop
dec
sub
xchg
pop
ret
mov
lods
es
imul
adc
pop
clc
mov
add
cli
je
popa
jge
pop
lods
push
mov
mov
mov
cmp
push
js
add
cmp
ss
lahf
adcb
adc
sub
push
dec
and
add
jne
iret
fsubs
out
cmp
addr16
cli
mov
aas
pushl
xor
dec
xlat
or
lea
lods
ret
xor
ds
stc
push
pop
sub
stos
ja
adc
dec
push
nop
roll
test
repz
std
inc
jmp
add
xor
pusha
out
mov
pop
bound
dec
jg
in
in
xchg
pop
int3
popa
mov
mov
or
out
addr16
jp
aam
mov
push
pop
mov
push
and
dec
push
repnz
pusha
xor
sub
lock
popa
xchg
cmp
aas
jmp
pusha
pop
fadds
fimuls
sbb
push
andb
and
jns
or
jnp
cmp
test
or
adc
pop
iret
xor
sbb
and
dec
pop
pop
repnz
daa
adcb
adc
push
jno
daa
popf
dec
mov
test
sub
xchg
jbe
aaa
sbb
adc
imul
push
sub
pop
shrb
mov
cmp
xchg
leave
popf
mov
aad
lock
ja
mov
sbb
ds
rcrb
inc
add
mov
pop
jmp
jge
lds
mov
scas
enter
mov
cmp
mov
add
inc
xchg
jnp
enter
daa
inc
fimuls
jno
mov
dec
dec
imul
and
sub
popf
push
cmovp
test
jae
inc
inc
jp
push
cmpsb
fistpll
fidivrl
mov
loope
xor
mov
sub
in
cmp
or
xor
movsl
jmp
push
rcrb
decl
stos
xchg
sbb
mov
xor
jmp
lds
push
js
lcall
pop
fsubl
sti
outsb
outsb
or
adc
jl
jg
cmp
sbb
cmp
std
pop
push
sbb
cltd
fmuls
pop
imul
lret
shl
mov
sbb
mov
pop
xor
outsl
and
jns
sarb
lcall
imul
cmp
aas
imul
xor
and
mov
or
andb
test
add
sub
adc
stos
imul
pop
xchg
data16
lods
loope
sti
cmp
add
and
mov
xor
scas
in
mov
movsl
loop
fisubl
xor
nop
mov
in
dec
in
leave
inc
stos
jo
fnstenv
fcmovb
sub
addr16
fstl
xchg
xchg
dec
call
cmpsl
aas
pop
pop
bnd
adc
fbstp
outsl
dec
mov
mov
push
cld
aad
dec
pop
inc
jge
mov
jb
nop
dec
dec
test
xchg
jecxz
pop
dec
xabort
cmp
pop
adcb
insb
xor
jns
add
stc
fildl
push
jg
imulb
loope
pop
rorl
das
mov
loop
mov
imulb
inc
notb
clc
addr16
sahf
add
dec
cmpsl
aas
pop
sbb
hlt
fdivr
cld
dec
or
dec
mov
cmpsb
xchg
mov
test
dec
and
pop
sarb
sub
nop
std
mov
ret
inc
je
mov
inc
sub
divl
ljmp
fwait
lods
jns
imul
outsl
xor
push
setl
adc
test
and
mov
fs
push
mov
sub
cmp
sbb
clc
push
rcll
xor
stos
pop
mov
xchg
inc
add
fs
aas
call
out
adc
pop
inc
xchg
or
ss
sbb
or
sbb
dec
pusha
add
out
or
xor
inc
and
or
fstpl
fwait
sub
push
push
jo
xlat
add
mov
out
incl
bound
fcompl
jns
iret
pop
in
inc
xchg
add
mov
mov
fistps
dec
jp
mov
shrl
jne
sub
pusha
iret
fisttps
push
xchg
xchg
or
outsb
mov
addl
mov
es
imul
rorb
and
dec
insb
je
in
sbb
mov
adc
adc
scas
jne
xchg
xor
pop
sub
jae
iret
jo
xor
sbbb
xchg
cwtl
inc
addr16
dec
inc
jge
int
mov
imul
scas
cwtl
push
int
jae
cmp
mov
repnz
fsts
hlt
mov
arpl
loopne
inc
jp
in
or
mov
mov
or
mov
inc
dec
or
jmp
in
loop
cmp
test
lret
push
jns
scas
cmpsl
mov
and
jmp
adc
cmp
cmp
bound
fbstp
inc
idivl
inc
mov
daa
aas
cmp
sub
mov
loopne
inc
jl
add
push
int
sbb
xchg
daa
push
lahf
aaa
sbb
push
loop
shrb
leave
clc
inc
or
mov
in
out
ja
js
push
add
jno
and
mov
loope
iret
push
scas
popf
fdivrs
es
dec
ds
pusha
int3
movsl
repnz
lret
jge
sbb
jle
jge
icebp
add
sub
hlt
pop
adc
xchg
sub
mov
sub
fiadds
daa
out
lcall
daa
fmull
stos
sub
fldt
jle
adc
icebp
ds
arpl
mov
adc
mov
mov
push
push
sbb
int
ret
xchg
fadd
lods
jge
pusha
das
fcmovne
mov
or
mov
inc
mov
sahf
inc
iret
mov
cmp
xor
xchg
loop
leave
sar
dec
es
adc
inc
stos
cmp
cmp
inc
out
das
mov
push
dec
xchg
mov
gs
and
stc
fnstsw
movsl
xchg
cmp
loopne
ret
lahf
ljmp
test
outsb
mov
dec
jmp
mov
data16
xlat
pusha
add
sub
imul
sub
sti
jno
sar
push
push
gs
iret
nop
nop
sub
inc
lret
mov
test
les
pop
repz
adc
xchg
adc
iret
push
call
es
mov
xor
pushf
sbb
mov
cs
lret
xchg
fst
inc
cwtl
mov
aas
jmp
jo
mov
cwtl
pop
je
das
mov
xchg
pop
lea
js
mov
jmp
mov
mov
dec
fildll
fldt
add
lock
shrb
xchg
cmp
mov
cltd
outsb
jno
orl
cmp
inc
cmp
cmpsl
jnp,pt
mov
lret
pop
cmpsb
cld
ja
sbb
mov
subb
inc
in
dec
pop
cmc
sub
pop
lock
rclb
es
and
clc
xor
fsubr
loopne
add
lods
in
cltd
mov
out
shlb
daa
daa
add
sti
popl
jecxz
je
sbb
popl
insb
sbb
xchg
mov
test
inc
sti
xchg
mov
shrl
mov
stos
dec
les
out
add
fsts
jg
inc
pushl
outsl
fisttps
dec
sub
cmpsl
mov
sbb
pop
dec
jge
pop
mov
iret
clc
dec
aaa
fadds
pop
or
fwait
sbb
push
adc
add
ljmp
bound
clc
adc
add
leave
xchg
mov
mov
sbb
mov
filds
and
jmp
mov
jmp
jne
inc
fbld
in
mov
xchg
loopne
out
jmp
testb
xchg
ljmp
cmp
xchg
mov
add
or
xchg
out
insb
mov
jle
add
pop
xorb
cmpsb
inc
iret
repnz
inc
nop
pop
or
jae
jmp
and
push
out
adc
decb
xchg
and
icebp
sbb
or
add
mov
xor
mov
loop
je
mov
arpl
xlat
jle
jge
prefetch
popf
sbb
and
push
pushf
cmpsl
or
add
je
int3
aam
lods
pop
inc
jmp
push
out
rorb
scas
xchg
and
jmp
movsb
ja
push
mov
test
jge
in
fmul
fsts
ds
cmp
nop
jno
push
push
jl
or
dec
sub
mov
mov
leave
xor
xor
sbb
push
mov
out
test
or
ret
inc
cwtl
js
cmpsb
in
movsl
in
aad
js
mov
mov
out
push
push
jns
mov
js
sbb
add
aad
cwtl
js,pt
jmp
stc
inc
lods
rclb
pusha
sub
popf
sbb
fs
dec
cmp
mov
pop
jbe
mov
pop
adc
pop
cmpsb
xlat
jb
mov
cmpsb
push
fidivrl
jmp
outsb
xor
call
or
dec
jg
in
push
pop
sbb
mov
and
inc
add
push
mov
int
xor
fdivrs
ret
adc
lret
in
and
mov
mov
sahf
in
fwait
test
jecxz
xor
mov
ja
testb
fs
into
xor
in
dec
ss
mov
out
icebp
add
mov
cmp
lea
test
push
pushf
cmc
mov
pop
dec
pop
mov
xor
je
pop
cmp
fdivrl
imull
jg
adc
xchg
add
pop
fcoml
mov
xchg
xlat
ss
and
gs
and
sbb
clc
dec
mov
int3
push
fabs
mov
les
mov
xchg
fsubrs
fs
pop
sahf
scas
movsl
pusha
loop
pop
cwtl
mov
sarb
sub
popf
mov
lods
xor
fst
pushf
inc
mov
fstpt
mov
xor
add
leave
mov
jecxz
dec
push
lock
into
add
das
out
mov
andl
mov
pop
sub
mov
lock
mov
das
jbe
mov
push
adc
and
mov
adc
cwtl
std
in
push
jne
aam
fsubs
divb
jg
mov
je
mov
in
mov
data16
sub
cmpsb
aam
mov
ret
pop
jno
cmpsl
into
lods
insl
leave
out
clc
insl
sbb
iret
punpckldq
push
jge
popa
ret
lods
dec
mov
insl
mov
jge
pop
push
add
fiaddl
negb
lahf
cltd
dec
ficompl
and
mov
cmp
mov
fisubrl
in
mov
outsb
hlt
roll
loop
stos
cmp
inc
out
gs
add
lcall
xor
shr
or
scas
xor
or
mov
fldl
pop
pop
cmp
jg
jo
sub
insl
mov
fwait
mov
loop
mov
das
add
inc
je
out
dec
daa
or
pop
nop
jns
les
in
cld
cmp
mov
xchg
mov
mov
cmp
popf
arpl
mov
xor
xchg
cli
sbb
mov
packuswb
dec
imul
test
xchg
sarl
and
adcl
arpl
pushf
aas
inc
push
aas
xchg
xchg
test
dec
insb
dec
dec
fstpt
push
lea
pushf
in
push
sbb
adc
mov
iret
push
lcall
std
mov
inc
dec
cmp
jle
das
push
mov
aad
push
paddd
sbb
lods
imul
xchg
push
add
call
mov
xor
sarb
popf
icebp
arpl
mov
test
dec
sbb
xchg
aaa
psraw
or
jecxz
jae
mov
mov
lods
rcr
jle
add
inc
mov
jo
inc
test
inc
push
out
cmp
xlat
push
add
push
jbe
fwait
jle
sarb
rorl
daa
cmp
test
jno
xchg
cmp
das
dec
fwait
mov
push
xchg
jp
xor
int3
loop
lahf
jne
dec
push
mov
into
test
aam
push
inc
daa
cmp
iret
std
test
dec
adc
push
push
loopne
int
mov
cmp
jns
add
lock
cmp
pop
sbb
andl
mov
insb
mov
pop
popf
cmp
add
and
cmp
push
xor
xchg
fsubl
jmp
daa
adc
daa
jg
mov
jae
xorb
aad
push
and
pop
push
and
int
cmpb
or
neg
jbe
lret
jmp
mov
cld
popf
sahf
xchg
test
iret
xor
outsl
mov
addb
push
jg
adc
adc
sub
xor
mov
cmp
sbb
xchg
cli
mov
cmp
arpl
or
or
imul
loopne
pop
cmpsl
pop
ffree
adc
jge
adc
push
add
imul
test
lods
xchg
jbe
cmp
lods
arpl
mov
mov
ljmp
sar
test
gs
ljmp
aaa
cmp
dec
jnp
sbb
push
repz
adc
pop
hlt
xchg
call
and
dec
pop
or
pushf
jo
sub
xchg
adc
loop
into
aam
aas
sub
xor
lahf
sub
mov
movb
in
lea
or
out
je
mov
repz
cmp
mov
inc
mov
fsubrl
push
push
mov
pop
pop
cmp
inc
iret
shll
stc
sar
xchg
pop
mov
iret
loopne
cmpsl
cmp
push
icebp
jns
idiv
int
cmp
push
fnstsw
mov
pop
mov
test
mov
sub
iret
aam
push
ret
out
aad
sub
push
clc
test
mov
ljmp
xlat
lods
mov
es
mov
test
push
fisttpll
ud1
add
call
insl
test
aad
mov
dec
mov
fnsave
aad
xchg
sbb
aaa
mov
pop
jnp
push
stos
sub
mov
push
adc
add
notl
push
fs
cmp
in
sti
sub
xchg
bswap
dec
xchg
and
pop
sbb
cmc
ja
fwait
xlat
dec
sbb
mov
adc
jmp
pop
push
add
mov
roll
out
loop
xchg
xor
xchg
xchg
pop
sbb
int3
ret
adc
scas
pushl
jp
cwtl
inc
mov
leave
mov
mov
out
repnz
fstl
adc
fwait
lcall
mov
xor
xchg
mov
inc
xorl
xchg
sub
xlat
je
push
jle
cltd
stos
inc
mov
pop
insb
mov
cmc
jnp
jle
sub
adc
pushf
ret
xor
scas
adc
push
push
and
jmp
push
popf
lcall
inc
in
loopne
test
rolb
sbb
movsb
jg
add
aaa
scas
shll
dec
jle
rcr
repz
mov
jg
jns
xor
insl
iret
aam
sub
dec
inc
adcl
insl
mov
aaa
into
test
add
int3
stos
and
daa
fisubs
hlt
jb
into
cmp
jo
inc
sbb
and
bound
cmp
jmp
push
dec
xor
jbe
hlt
cmc
jge
out
clc
enter
daa
cmp
loop
ret
xchg
movsl
jno
and
jl
xchg
add
sti
pop
push
jbe
pop
xor
fisubs
xchg
movsl
lods
push
pop
xor
push
lahf
arpl
mov
push
cmpsb
jmp
cmp
mov
test
inc
cltd
loope
or
shl
xor
ds
out
lret
adcb
xor
add
fdivrl
dec
push
mov
les
push
xor
sbbl
sbb
fcoml
xlat
sub
mov
outsb
cli
xchg
lock
inc
std
jmp
inc
repnz
testl
dec
push
and
lahf
int
mov
fdiv
push
sahf
negl
inc
rorl
mov
xor
test
inc
dec
xor
mov
outsl
pushf
dec
insb
loop
stos
push
stc
jo
push
filds
fnsave
outsb
dec
sarl
test
daa
cli
out
jnp
xor
loope
cmp
push
leave
or
int
dec
mov
insl
enter
mov
cld
imul
and
jl
jge
es
xchg
xlat
sbb
loopne
mov
push
pop
sti
jle
ret
mov
sub
hlt
dec
pusha
jae
inc
idiv
test
dec
lcall
pop
rcrb
mov
cs
pop
add
sbb
push
mov
mov
xorl
jle
lock
sbb
jns
jnp
ss
int
imul
inc
jmp
notl
dec
mov
or
push
jecxz
inc
test
add
mov
ret
cwtl
inc
shll
lods
jg
mov
mov
adc
add
pop
jae
pop
inc
adc
lock
mov
mov
sbb
negb
repz
cmp
add
pop
push
mov
push
sarb
pop
lret
rorl
mov
ja
sbb
mov
mov
sbbb
mov
mov
aam
jno
ret
jge
mov
lods
jmp
clc
jecxz
ljmp
pop
xor
adc
lods
and
xchg
and
mov
add
cltd
mov
mov
insb
push
scas
incl
xlat
pop
cmpsl
test
cli
add
jecxz
sbb
mov
shll
mov
out
sub
and
shlb
cmpsb
xor
call
mov
and
inc
and
push
ja
sbb
adc
inc
fwait
call
in
mov
mov
xorb
pop
jmp
jns
dec
lcall
push
xchg
mov
je
mov
test
imull
mov
and
mov
sbb
sti
pop
jne
fisubs
pusha
cmp
adc
jmp
push
and
out
outsb
dec
sub
adc
rcll
lds
stos
mov
les
xor
insb
and
dec
jle
stos
mov
sub
dec
adc
adc
ret
sbb
imul
pop
push
nop
jae
iret
cmpsb
push
inc
add
popf
shll
inc
arpl
loope
sub
sbb
cs
imul
push
scas
and
mov
insl
push
mov
fcomi
mov
lock
hlt
mov
push
scas
inc
xchg
pusha
sbb
div
or
int3
aam
xchg
aam
pop
aam
neg
les
outsb
lds
daa
jo
pop
xor
imul
cmp
mov
cmpsl
push
sahf
shl
inc
ret
push
inc
ret
enter
daa
cmp
xor
jno
in
jl
sbb
dec
jns
rorl
pop
push
popf
xor
add
aas
lahf
mov
sub
lods
pop
test
push
xchg
inc
inc
mov
cmpsb
outsb
je
in
mov
lods
js
xchg
nop
pop
insl
push
loop
jae
shl
sti
arpl
sub
lret
std
cmp
inc
push
loope,pt
mov
shlb
arpl
and
xlat
add
push
xor
arpl
adc
sbb
jg
sub
and
pop
and
push
lcall
adc
sti
icebp
out
psllq
adc
pop
pinsrw
jo
push
fs
outsb
aaa
sbb
and
enter
mov
das
ror
fdivs
into
dec
lret
lret
scas
testb
out
sahf
int
dec
test
mov
sub
ret
out
sti
loop
pop
push
stc
daa
push
mov
jp
shrb
mov
cmp
es
push
out
dec
mov
and
xor
stos
pop
cmp
or
or
insb
loope
adc
and
popf
pop
pop
sbb
ljmp
jmp
adc
filds
mov
push
scas
roll
cmp
lcall
jo
mov
aad
xor
sub
xchg
nop
cld
cmpsl
test
mov
inc
or
popf
flds
mov
repz
sbb
int
mov
and
pop
jno
pop
adc
push
inc
pushf
mov
jmp
jae
cs
sbb
aad
or
aas
addr16
jb
xor
lret
je
clc
shl
ret
movb
sbb
call
es
cmp
mov
sbb
das
outsb
inc
cltd
fs
pop
lods
outsb
das
adc
jge
jne
das
and
inc
mov
inc
and
std
loope
call
cmpsl
cmp
mov
icebp
daa
xchg
cmp
insb
and
xor
fmuls
jecxz
cmc
mov
ret
pop
xor
xchg
jle
sub
mov
dec
int3
xlat
ret
or
cmp
xor
insl
jle
xlat
clc
push
push
aad
mov
pusha
ljmp
popf
lods
nop
jmp
mov
sbb
and
xchg
mov
lret
push
ret
cmp
test
loope
pop
cmp
push
jb
ss
ficoms
test
mov
xchg
rcrb
in
rorl
rorb
shll
stos
push
push
jne
mov
ja
movsb
and
add
aas
das
ljmp
addr16
xor
sub
sub
xor
popa
cmp
data16
xchg
inc
push
dec
arpl
pop
mov
iret
ja
jbe
dec
add
xor
or
fidivrl
pop
divb
push
lahf
arpl
mov
test
out
ljmp
jns
add
in
or
mov
cwtl
adc
movsb
add
lcall
mov
pop
add
in
orl
test
fildll
int3
sub
int
xchg
and
mov
out
xchg
test
fsubr
dec
fwait
pop
push
cld
and
aaa
and
out
insb
mov
lret
jle
pop
out
in
cmp
adc
dec
iret
outsb
push
jne
xchg
add
inc
imul
call
add
popf
call
loope
inc
loop
lcall
and
imul
and
ror
adc
mov
add
leave
addr16
add
add
push
dec
inc
mov
fstl
aaa
dec
mov
add
xchg
pop
add
movsb
jo
test
add
je
rcrl
ficoml
xchg
iret
jbe
add
ret
daa
cmp
cmp
mov
adc
add
mov
fstpt
xor
popf
adc
push
add
test
xor
sbb
jno
sub
mov
push
das
push
cmp
loope
jecxz
sub
test
cmp
push
pushf
movsl
adc
and
cmpsb
rolb
fisubrl
add
dec
push
sarl
push
sub
jo
mov
sarb
add
sub
sbb
sub
js
aaa
jg
gs
mov
jp
mov
mov
or
int
into
xchg
fsubrs
jnp
sbb
ret
imul
mov
stc
sbb
out
pop
sahf
jo
and
xor
inc
cltd
in
stc
ficomps
cmc
mov
ss
xchg
push
cmp
and
out
and
cli
push
lret
jmp
cltd
jmp
into
adc
push
cmc
fdivrs
sbb
scas
bound
push
icebp
mov
sbb
add
mov
inc
lods
dec
fcoms
xlat
fwait
pop
pushf
sub
mov
mov
inc
sub
sti
fdivl
lods
jne
gs
and
nop
xlat
stc
pusha
dec
push
clc
xor
cmc
cmc
fnstcw
ljmp
in
xchg
dec
enter
rclb
and
pop
adc
rcrb
cli
cmp
aad
cld
inc
pop
fisubl
push
in
gs
pop
jg
mov
cld
in
jecxz
push
add
or
inc
lea
lock
sbb
xchg
dec
jbe
cmp
lcall
inc
and
lock
bound
repnz
xchg
sub
mov
cmp
xor
xchg
adc
fdivr
mov
dec
cmpsl
cmp
les
decb
cmp
mov
push
xchg
mov
loop
adc
dec
or
pop
in
aam
jnp
ret
fwait
fwait
xchg
es
adc
gs
clc
pop
rclb
xchg
lret
add
ljmp
subl
inc
dec
and
outsb
xchg
cs
mov
cltd
sub
jnp
out
sub
xor
dec
addr16
add
sbb
leave
dec
shll
jmp
stos
cmc
pop
cmp
xchg
jmp
loopne
push
lock
dec
and
xor
cmp
mov
jp
mov
sub
leave
dec
lret
pop
dec
mov
add
inc
cld
inc
leave
loop
or
mov
dec
push
inc
into
sti
add
mov
jb
leave
cmpsb
and
aad
jns
pop
and
pop
mov
mov
xor
or
fwait
xchg
push
pop
mov
pop
addr16
pop
adc
dec
xchg
mov
jno
dec
push
adc
ja
cmc
xchg
in
push
test
jae
loope
mov
mov
pushf
sti
shlb
ret
testb
xor
dec
jle
mov
in
gs
adc
repnz
int
out
ret
sbb
idivb
jae
push
push
sbb
push
xchg
push
popa
push
enter
test
xlat
inc
inc
sbb
mov
xor
ljmp
shrb
mov
cmpl
lods
arpl
sbb
mov
or
sbb
cmp
adc
roll
iret
gs
int3
imul
fimuls
mov
jo
ret
test
xchg
mov
cmp
or
cmp
inc
jbe
mov
cld
enter
daa
cmp
jnp
ljmp
dec
push
jb
push
pop
incb
and
dec
aad
icebp
push
dec
push
aam
in
test
add
cmp
in
mov
je
jle
pop
mov
notb
jmp
mov
pop
inc
mov
sub
repz
mov
daa
stc
lds
pop
add
popl
popa
enter
into
add
xorb
xchg
pop
push
sub
mov
mov
or
int
lea
stos
sub
or
outsb
and
adc
xchg
outsl
cmc
jg
movsl
mov
sti
mov
mov
imul
sub
scas
or
es
neg
xor
or
adc
inc
mov
mov
pop
jno
sahf
adc
je
gs
divl
filds
outsl
cmp
cmc
loop
pop
push
stc
xchg
or
orb
ss
push
jns
sbb
popa
out
ja
cli
mov
dec
xor
stos
mov
sti
and
xchg
mov
into
testl
movsb
loopne
sbbb
scas
mov
imul
rolb
cmpsl
les
data16
lods
xor
dec
cmp
sub
or
sbb
in
stos
iret
sub
dec
pop
sub
jmp
nop
mov
cmp
inc
jmp
fxtract
cmp
les
and
and
xchg
cmpsl
stos
sub
ret
fcmovb
and
pop
adc
es
jmp
outsl
sub
aad
jns
inc
cmp
aas
movsl
insl
outsb
jb
scas
dec
sbb
je
push
push
jecxz
aas
aas
or
and
cwtl
jne
adc
mov
adc
popa
dec
add
leave
adc
pop
pop
jle
inc
cmpsl
iret
and
aad
or
shl
aas
mov
jecxz
into
and
sahf
push
shl
dec
dec
mul
stc
std
das
inc
xchg
dec
mov
or
aad
ret
les
push
daa
inc
mov
mov
mull
add
int
cmp
lahf
movsb
aam
jge
ret
sub
lods
es
scas
insl
dec
adc
clc
xchg
xor
or
addr16
stc
lods
bound
mov
mov
jl
sysexit
push
fadds
push
adc
cltd
bound
mov
push
clc
jl
fisttpll
test
jecxz
xchg
inc
sbb
popa
sub
mov
cs
stos
in
inc
out
push
xchg
mov
add
mov
ljmp
xor
push
in
mov
cs
dec
xor
pop
pop
add
lret
bound
inc
pusha
pushf
xchg
or
jb
fwait
jne
cli
push
in
push
add
or
dec
out
test
xchg
bound
xor
insl
in
or
xchg
cmpsb
jo
fdivrs
mov
lcall
jp
popf
xor
and
cwtl
mov
sti
iret
dec
imul
pusha
or
out
fucomip
nop
leave
xchg
shrb
cmp
out
out
xor
sub
ret
adc
push
jp
in
bswap
and
rclb
shl
jnp
mov
aam
inc
repnz
iret
sub
pop
ret
mov
lods
jg
jg
mov
push
mov
popf
ss
push
loopne
rcr
fs
xchg
cs
gs
ret
cmp
or
dec
dec
push
fs
sbb
inc
inc
and
aam
bswap
push
insl
and
cltd
loopne
arpl
pop
inc
popl
or
ror
inc
aaa
lret
or
mov
add
jl
push
fnstenv
popa
hlt
mov
lods
stos
jne
ljmp
scas
rorb
and
mov
add
loop
jge
mov
or
cmp
sarl
dec
xorb
add
push
dec
int3
lret
inc
mov
rcll
push
cmpsl
pop
or
push
lret
push
push
inc
repnz
cmpsb
not
sub
aas
loop
js
ficompl
pop
sub
bound
push
outsb
loope
dec
subb
cs
and
ds
xchg
dec
movsl
and
or
ss
add
fs
or
repnz
or
xor
imull
sub
lcall
icebp
inc
push
in
sbb
cld
movsl
mov
outsb
xchg
test
scas
jg
call
aad
shrl
mov
jns
mov
and
fs
fsub
adc
negl
popa
add
mov
cmp
jb
mov
push
xor
popf
cmpsb
outsl
sbb
loop,pt
pop
test
dec
pop
ret
fs
adc
scas
pop
cmp
pop
sub
out
push
insl
cli
mov
loopne
cmp
xor
add
into
fcmove
addr16
data16
lods
loopne
xchg
pop
js
dec
adc
es
xlat
xchg
ss
data16
lods
sbb
out
cmp
dec
push
sbb
loop
leave
pop
mov
cmpsb
lods
jp
push
dec
outsb
sti
cmp
paddd
das
shll
jne
fnstcw
inc
inc
shll
sub
test
lock
in
push
push
sbb
ds
sti
lahf
and
mov
mov
fcmovb
jo
xchg
ss
adc
lcall
inc
push
in
mov
inc
repnz
cmp
je
add
adc
sbb
xor
mov
shlb
xor
mov
clc
or
inc
cs
and
xor
mov
mov
dec
enter
lret
sub
std
mov
dec
mov
xor
sub
shl
jecxz
cld
movsb
cs
lret
jge
orb
arpl
pop
and
cwtl
sub
adc
ret
mov
shll
xor
xchg
dec
pop
movsb
ljmp
jbe
rcl
test
mov
cmpsl
add
jl
xchg
and
cltd
cltd
pop
pusha
test
add
mov
lcall
sub
rorl
xor
add
mov
aad
jns
xchg
add
jo
or
or
test
jp
xor
mov
int
pop
mov
popf
mov
inc
idivl
or
cld
cmp
mov
add
addr16
in
out
xchg
das
bound
add
adcb
mov
or
dec
xchg
jp
loopne
mov
leave
sarl
test
dec
jne
rcr
pusha
cmpsl
sbbb
movsl
insb
add
xchg
adc
cmpl
out
mov
sub
sub
push
mov
push
aam
xor
jmp
jnp
pop
jle
aaa
mov
dec
jecxz
adc
popf
addr16
mov
ret
xor
add
mov
push
rcll
add
xchg
push
pop
sub
jecxz
rcll
sbb
mov
mov
notl
adc
shlb
mov
daa
push
movsl
leave
int3
dec
adc
in
xchg
arpl
incl
adc
or
mov
jecxz
mov
or
dec
popl
std
mov
pop
nop
dec
fcomp
push
mov
loopne
fidivrs
scas
lahf
mov
loop
notb
add
mov
iret
jge
xchg
mov
mov
cmp
mov
nop
jl
jae
dec
xor
ja
xor
outsb
hlt
jle
das
loope
push
jp
std
test
xchg
lahf
mov
cmpsb
jp
sbb
es
mov
pop
imul
loope
cmp
cmp
and
sub
out
ret
mov
jno
iret
sbb
ljmp
sbb
xchg
pop
xchg
pop
pop
loop
lcall
inc
fsubl
ss
jmp
ret
leave
pop
adc
xor
mov
cmc
and
dec
jno
mov
jmp
roll
xor
dec
int
push
mov
negl
sub
push
imul
inc
xchg
orl
test
test
pop
xor
xchg
cmpsb
loop
test
stc
add
fs
xchg
ss
mov
mov
jnp
out
scas
sub
out
test
cmp
cmp
jno
push
mov
mov
pop
pop
xchg
mov
imul
push
add
xlat
hlt
mov
lods
add
ljmp
push
lods
sub
popa
mov
sbbl
jae
dec
loope
nop
push
fisttpll
inc
push
jne
fldenv
xor
popl
push
xchg
sub
rcr
mov
adc
pop
cmp
inc
popa
pushf
jb
jmp
jnp
bound
ss
jo
test
jb
cli
ds
or
je
add
adc
dec
lds
mov
jno
mov
add
or
inc
add
daa
lds
pop
mov
lret
mov
sub
push
lahf
mov
push
jl
and
inc
mov
imulb
std
jge
cmp
mov
sbb
pop
stc
cmp
cld
iret
insb
pop
lret
in
arpl
mov
push
mov
mov
aas
pushw
shl
frstor
aas
lcall
aam
jg
ret
dec
cmp
popf
insl
sbb
mov
xchg
mov
lock
imul
adcl
decl
test
jnp
ret
mov
test
dec
mov
inc
ficoms
adc
fstpl
popa
ja
dec
scas
or
add
jge
es
ret
out
sbb
mov
shl
add
dec
ljmp
and
xor
mov
jns
xor
out
ljmp
pop
jp
push
dec
iret
shll
or
pop
adc
push
sub
je
aaa
ds
mov
add
loopne
inc
nop
or
dec
imul
pop
xchg
xor
mov
mov
nop
sti
aad
xchg
outsl
stos
jp
fdivrs
mov
xor
mov
test
pop
dec
das
jne
or
pusha
inc
xor
fbld
mov
pop
jmp
dec
pop
orl
out
cmpsl
subl
fadds
stos
cmc
mov
insb
aaa
outsl
xchg
jnp
ret
daa
jl
in
cmp
xor
ret
inc
pop
jle
jno
xchg
pusha
nop
jae
dec
mov
movaps
push
xlat
ficoml
mov
imul
xlat
push
repnz
repz
mov
jp
xchg
leave
inc
enter
loope
arpl
xchg
dec
or
dec
clc
inc
aaa
dec
xor
in
mov
cmpsl
int3
sub
mov
mov
mov
stos
jo
test
jle
xchg
and
mov
lods
mov
push
sub
jge
push
jle
scas
mov
daa
ss
cmp
loope
jno
lds
dec
movsb
int
push
enter
arpl
sub
or
lahf
dec
sub
push
dec
and
test
popa
je
inc
adc
cmpsb
std
incb
js
ljmp
mov
and
outsb
inc
shrl
xchg
cmp
ds
mov
not
in
push
addr16
and
test
std
add
sbb
xor
xor
filds
pop
pop
scas
cmp
ss
pop
sahf
repz
push
xchg
xchg
adc
push
xchg
mov
mov
xorl
ds
in
sarb
jnp
mov
fistpl
mov
pop
mov
loop
and
call
fcoms
notl
scas
pop
lret
mov
mov
stc
adc
jmp
imul
xchg
xor
xchg
dec
sbb
mov
pop
stc
mov
subl
shll
add
mov
adc
xlat
pop
xor
mov
or
cmp
into
mov
or
loopne
lock
pop
mov
test
in
add
adc
push
loope
push
fisubs
lods
lods
lods
out
scas
cmp
pop
xlat
xchg
mov
push
mov
in
mov
std
cmp
sub
lcall
fstps
push
jno
mov
repnz
xor
mov
pop
lock
push
pushf
sbb
cmpsl
dec
lds
and
dec
arpl
addb
jb
in
int
jg
cmp
aad
and
or
and
sub
clc
cwtl
cmpsb
pop
jmp
daa
xchg
dec
mov
sub
sbbl
xchg
fistl
or
inc
sbb
inc
cmp
shl
out
or
outsb
or
mov
or
and
pop
pop
rcl
mov
std
and
out
lods
leave
cmpsl
xor
ja
icebp
pop
int
cld
cli
jle
lret
pop
sub
mov
add
push
mov
pop
pop
xor
shlb
movsl
sbb
ret
xlat
add
push
insl
add
mov
xchg
cmp
ljmp
inc
lods
cmpsl
sub
mov
and
cli
push
fidivl
add
lods
cmpsl
test
xor
inc
push
jl
rcl
test
jmp
sbb
arpl
mov
sbb
out
jge
imul
js
decl
js
cltd
and
jge
xor
sub
mov
aaa
mov
fistps
subl
ret
inc
and
mov
fwait
add
into
add
mov
pusha
out
inc
xchg
fmuls
pop
in
add
test
push
mov
mov
pop
jp
or
mov
test
movsl
adc
mov
push
adc
jnp
jne
mov
filds
or
push
xor
sbbl
add
je
loop
aaa
ret
mov
and
std
insb
mov
jmp
jle
mov
in
icebp
xchg
adc
ffree
ret
out
mov
add
pop
jae
lds
sarb
clc
push
pop
paddq
dec
insl
fstl
jae
mov
out
scas
jbe
sbb
rcrb
movsl
repnz
bswap
mov
pop
mov
jno
inc
cwtl
mov
loopne
xchg
sbb
and
pop
xchg
inc
or
movsl
jnp
sub
int3
pop
push
lock
out
dec
xchg
ficoms
in
loope
xchg
test
scas
pop
and
and
lcall
test
stos
add
adc
inc
enter
daa
xor
mov
add
jl
adc
stos
shll
movsb
out
mov
push
and
push
test
sub
lahf
inc
lahf
cmpsb
addb
hlt
mov
js
push
adcb
adc
push
jge
loope
jp
sub
addr16
cld
in
ds
add
dec
cmp
xchg
movsb
sbb
mov
mov
pop
aad
sbb
mov
push
sbb
add
push
jmp
int
sub
sub
stos
push
add
cltd
lret
sub
cmp
add
and
push
xor
fcoms
mov
jge
cmp
sub
es
lahf
stc
add
dec
sbb
mov
nop
loop
jge
stc
jno
xchg
lods
rol
adc
es
or
or
adc
mov
push
fdivrl
pop
mov
mov
push
xchg
into
add
cmc
mov
cmp
pop
aad
cmp
xor
xchg
stos
adc
adc
add
cli
pcmpgtd
into
or
xchg
xor
xlat
out
sub
cwtl
lods
mov
push
mov
sti
inc
mov
pop
insl
ljmp
mov
pop
inc
jl
repnz
xor
les
pop
out
xchg
mov
enter
and
scas
jle
sbb
pop
mov
test
pushf
enter
add
repnz
or
sbb
sahf
jb
adc
dec
negb
je
decb
sbb
push
lea
fucom
mov
cmp
fmuls
imul
xchg
pop
fildl
mov
inc
adc
dec
shll
cmpsb
repnz
out
cmp
rcrl
xlat
push
div
inc
lret
insl
pop
dec
cmpsl
test
cmpsl
xor
call
icebp
xor
cld
and
mov
mov
cmp
jge
jae
mov
sub
rcrl
data16
inc
jno
insl
call
jnp
xchg
push
adc
mov
lods
adc
into
mov
inc
jo
and
mov
test
mov
push
add
dec
rolb
movsl
push
add
pop
fucomp
mov
test
xor
pop
movsl
mov
rcll
lahf
pop
sarl
shr
mov
imul
call
push
pushf
or
or
mov
cmp
mov
dec
test
jecxz
ja
imul
inc
mov
xchg
pop
fwait
xor
push
push
jno
push
add
js
out
and
inc
bound
mov
in
sti
insl
xchg
shll
mov
cmc
sub
xchg
test
xchg
cmp
xchg
mov
xchg
dec
cmc
adc
jne
mov
stos
fbld
xchg
push
loope
jmp
in
imul
inc
adc
scas
out
out
push
jbe
imull
ja
pop
insb
or
fnstenv
insl
loop
in
push
mov
mov
pop
ret
push
pop
in
call
lcall
leave
dec
popf
rorb
push
fadd
pop
adc
mov
rcrb
inc
imul
fldenv
push
sub
shlb
repnz
xor
inc
arpl
adc
mov
jg
or
pop
mov
int3
add
js
sbb
mov
repz
shrb
jo
inc
cmp
pop
push
movsb
xor
mov
adc
jbe
cmovns
xchg
or
movsb
outsl
mov
cmp
inc
jno
sbb
jl
out
dec
sbb
push
mov
jl
icebp
shlb
lea
