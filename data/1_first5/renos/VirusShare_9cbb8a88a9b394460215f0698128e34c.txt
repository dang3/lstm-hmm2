and
js
inc
add
orl
lods
test
mov
pushf
cwtl
xchg
xor
and
and
and
loopne
or
enter
rorb
enter
les
in
push
mov
push
push
add
jne
call
shlb
repz
or
or
cs
cmpl
je
xor
mov
dec
idiv
inc
adc
xor
dec
test
jne
call
sbb
mov
mov
mul
add
push
les
pop
pop
ret
lea
imul
gs
xor
cs
insb
dec
neg
ficompl
addr16
and
inc
and
add
mov
add
clc
or
pop
cmp
daa
in
mov
xor
add
arpl
in
mov
pop
cmp
or
addl
push
lea
xchg
lahf
mov
lock
add
or
jge
add
push
lock
mov
aaa
jmp
or
mov
in
jmp
pop
out
lock
mov
jo
and
jmp
and
pop
mov
jmp
mov
xchg
dec
dec
jne
xor
mov
std
mov
into
add
xchg
jbe
mov
xchg
lock
sbb
jmp
dec
in
mov
sub
xchg
mov
mov
or
cmp
add
je
xchg
mov
test
dec
mov
sbb
jmp
xchg
mov
xor
jmp
out
lea
add
adc
sub
mov
mov
or
mov
dec
mov
fstl
push
pop
call
sbb
fcom
fcomp
add
imul
or
icebp
mov
jb
call
mov
xchg
and
add
or
dec
sub
jmp
push
into
sbb
dec
sub
xchg
mov
or
add
cmp
fidivl
mov
dec
jmp
mov
fisttps
pusha
xchg
mov
js
rolb
mov
aam
jnp
cmp
push
mov
in
fnstsw
test
jno
adc
cmp
test
sbb
repz
adc
pop
pop
mov
mov
inc
mov
lea
mov
imul
ljmp
cld
and
jmp
xor
adc
stc
fisttpl
decl
jmp
mov
inc
dec
sbb
pop
clc
jmp
rolb
xor
repnz
mov
mov
mov
xor
out
mov
iret
jmp
and
mov
mov
test
enter
test
inc
ret
sbb
xchg
dec
loopne
push
pop
outsl
out
jle
pushl
or
xor
adc
mov
inc
adc
mov
lock
outsl
dec
sbb
adc
sarb
xor
lea
dec
sub
lea
jne
mov
mov
jne
push
jo
push
inc
decl
jne
inc
loope
mov
das
hlt
jne
add
lea
cmp
mov
jmp
xlat
inc
movb
mov
xor
xor
ss
xor
xor
xor
aaa
xor
add
lahf
jmp
scas
lsl
cmp
dec
pop
xlat
jne
xor
add
push
mov
mov
test
jbe
add
push
push
pop
stos
mov
sbb
fdivl
loope
mov
mov
clc
sbb
fbstp
or
inc
mov
das
insl
jg
mov
and
inc
jmp
jns
xor
cmp
or
mov
roll
push
pop
inc
fsubrp
fdivp
dec
je
xchg
pusha
hlt
push
or
xor
filds
aaa
sub
lea
mov
inc
pop
adc
shlb
icebp
lock
xchg
mov
xchg
in
and
cmpsl
add
sbb
stos
loopne
jmp
xchg
pop
cli
clc
and
mov
addr16
add
mov
bnd
das
dec
in
loope
mov
xor
movsl
int
mov
into
cld
cmp
lret
add
jle
shlb
fstps
cmp
adc
jmp
es
mov
mov
or
inc
mov
and
sub
jmp
jbe
iret
stos
cwtl
mov
dec
lcall
sti
mov
xor
sbb
jl
lea
pop
dec
and
mov
fistpll
mov
lock
push
jmp
fmuls
sbb
pushf
or
in
adc
pop
xchg
mov
xor
add
push
sbb
pop
jb
clc
inc
adcl
cli
in
and
jbe
in
push
or
push
lods
popa
pop
add
sbb
lahf
pop
and
mov
add
enter
or
or
ds
sub
pop
push
out
or
mov
sub
mov
jo
lcall
in
jae
sbb
mov
push
inc
mov
sarb
mov
in
or
mov
cmpsb
rol
repz
and
sbb
inc
std
lcall
xor
xor
les
testl
add
aaa
push
sub
jne
pop
addr16
addr16
cmp
jg
xor
leave
mov
mov
rep
pop
pop
cmpsl
popf
rorl
les
jmp
cli
les
movsb
xor
loopne
mov
mov
mov
cmpsb
xor
mov
sar
mov
sub
push
lock
mov
popa
sbb
push
or
or
mov
pop
jle
cmpsl
fucomip
dec
xchg
add
data16
and
mov
jne
sub
push
pop
adc
outsb
aaa
push
loop
movzwl
add
punpckldq
subl
pop
int3
mov
loopne
cmp
sbb
inc
mov
in
add
push
jne
rcrl
clc
notb
je
orl
out
in
fnsave
inc
je
sbb
jmp
add
and
cmp
xchg
sub
xchg
arpl
sub
jmp
add
adc
repz
jmp
add
lret
mov
ret
mov
stos
insl
sub
push
in
inc
ljmp
fdiv
push
push
mov
adc
or
xchg
inc
call
pop
rol
je
in
insb
idivl
inc
or
push
icebp
jne
jae
adc
test
gs
cmp
mov
pop
negl
inc
jnp
pop
mov
and
sub
sub
insl
dec
in
in
mov
push
lods
cmc
xor
rolb
lahf
mov
sub
dec
in
sbb
push
test
xor
add
cmp
pop
data16
or
mov
or
sbb
cmp
sbb
aaa
lock
clc
adc
add
sarl
iret
orl
xor
xor
jmp
sbb
fldl
add
gs
loopne
divb
cmpl
sbb
xchg
cmp
adc
fsubr
push
enter
testb
sbb
mov
out
cmp
insl
fdivrl
mov
and
push
cmp
les
and
inc
sbb
add
mov
sbb
adc
into
or
inc
push
jmp
mov
pop
jp
inc
push
dec
je
push
inc
jno
adc
jnp
sub
push
mov
lea
inc
inc
div
inc
or
movsb
adc
outsl
das
and
inc
push
decb
int
ss
cld
sub
fmuls
popf
mov
mov
or
push
and
and
or
and
je
push
push
and
add
mov
push
mov
adc
jmp
mov
pop
jmp
cltd
ret
pushl
shl
jne
test
jne
sbbb
add
clc
push
lcall
jnp
mov
xor
mov
mov
inc
push
adc
inc
sub
cmp
xchg
fwait
or
orb
inc
cmpsb
cwtl
adc
pop
or
sti
sbb
lea
jp
add
cmp
or
dec
outsb
dec
jo
sub
mov
jl
insb
cmp
or
dec
outsb
fildl
or
push
mov
and
fadds
jle
adc
and
xor
jae
int
mov
out
dec
rcll
cmp
lret
sbb
call
enter
fwait
pop
add
jg
das
add
jnp
push
sbb
jnp
std
pop
cmp
out
jb
arpl
fs
jae
sbb
imul
popa
jb
inc
dec
dec
jo
outsb
push
push
jg
insb
outsl
jae
dec
popa
outsb
fs
add
imul
addr16
bound
arpl
insl
popa
jo
imul
and
jb
mov
std
je
popa
insb
inc
insb
aaa
arpl
outsl
je
fisttps
jnp
cmovbe
add
insb
dec
outsl
jbe
dec
gs
in
mov
xchg
outsl
xchg
xor
dec
fwait
leave
pop
jnp
dec
jne
outsb
je
jae
mov
nop
adc
inc
jne
sbb
lods
daa
mov
inc
add
fsubl
push
sub
inc
and
call
fcoms
scas
pop
add
imul
add
add
fsts
in
fsubrs
out
push
in
hlt
ds
adc
and
inc
lcall
in
jb
in
loope
or
inc
mov
aas
les
inc
or
enter
xorl
add
mov
jecxz
mov
sar
jl
pop
add
mov
pop
mov
or
inc
add
adc
mov
mov
cli
cmp
cmp
sub
adc
add
cmp
jns
jns
inc
mov
jns
jns
inc
mov
jns
jns
push
mov
dec
mov
cmp
push
jecxz
cli
pop
andl
xchg
arpl
nop
sub
adc
enter
sub
cld
cld
out
call
push
inc
cld
jb
mov
inc
js
rcrl
cli
mov
mov
lea
and
mov
mov
add
mov
lock
lock
lds
or
shrb
shrb
pop
leave
xchg
data16
adc
btc
xchg
mov
cmp
jae
adc
xor
jle
mov
cld
and
push
mov
or
add
inc
das
sbb
mov
in
sub
mov
call
push
addr16
shl
shlb
adc
cmpl
jge
gs
pushf
add
and
in
call
pusha
sbb
lock
test
shr
cmp
inc
adc
leave
push
push
or
or
push
sub
leave
fwait
push
sub
cs
bound
sub
or
int3
pop
add
xor
nop
mov
aam
mov
inc
iret
aam
add
and
mov
int3
cmp
add
fmull
sbb
add
jle
in
xorb
add
inc
xchg
add
adc
or
xchg
mov
pop
enter
add
dec
push
nop
push
jns
push
or
push
mov
mov
sub
jmp
ljmp
jge
out
insl
jne
sub
mov
in
stos
jl
leave
add
pop
lock
add
add
inc
mov
mov
cld
dec
cmp
in
inc
cld
cmpb
sbb
sbb
cwtl
jns
adc
daa
in
pop
sbb
jne
jmp
cwtl
ret
int3
sub
sub
in
aas
dec
dec
clc
mov
jge
cld
mov
mov
push
xchg
and
xlat
adc
push
xchg
iret
mov
and
filds
pop
hlt
dec
sbbb
pop
add
mov
jo
cmp
mov
fcompl
jb
add
pop
xchg
shlb
inc
cmp
das
pop
mov
sub
adcb
cltd
mov
dec
xor
aam
mov
and
add
lret
add
pusha
push
in
jg
and
mov
sbb
mov
mov
into
jmp
xor
and
and
rcrl
add
jg
xchg
push
inc
les
inc
cmp
sub
rcll
insl
js
orb
out
push
aas
add
adc
or
jb
and
jp
xor
fwait
push
cmpsb
push
and
or
mov
rolb
andl
and
lods
xor
lds
std
adcl
sub
jae
xchg
in
sahf
sub
jbe
jge
ltr
add
adc
out
and
iret
sahf
ret
xor
repz
inc
sbb
push
sbb
sbb
popa
stc
push
lds
test
or
in
sub
mov
sub
popa
scas
nop
lret
inc
sub
push
testb
xor
xor
sarl
mov
cmp
xor
inc
pop
fsubrs
pop
mov
mov
cmp
cmp
xor
flds
pop
jb
cmpsl
xorps
add
sbb
inc
add
inc
xor
dec
dec
dec
add
sub
dec
lock
xchg
mov
jnp
bound
add
pop
into
jb
orb
push
push
fldln2
mov
repnz
mov
mov
scas
nop
push
negb
mov
xchg
and
gs
in
cmp
push
mov
xchg
stos
pop
and
pop
dec
mov
add
gs
enter
pop
jnp
pusha
scas
mov
jno
xor
inc
pop
and
cld
enter
jns
xor
and
in
add
out
mov
push
in
pop
test
enter
sub
in
adc
divb
notl
push
xchg
add
adc
leave
sbb
cmp
lret
scas
mov
add
add
sbb
jns
popa
or
int
orl
or
xchg
cmp
adc
pusha
iret
pop
fldenv
sbb
cmpsb
sbb
mov
inc
sbb
lret
sbb
and
dec
inc
sbb
test
adc
pop
sbb
and
push
and
or
lret
sbb
and
int3
insb
xchg
daa
movsb
sub
add
outsl
cs
xchg
cmp
sub
inc
push
pop
enter
xor
sahf
mov
cmp
scas
cmp
xchg
cmp
aas
sub
jnp
scas
pop
inc
adc
dec
popa
das
in
repnz
dec
pop
arpl
mov
or
push
sbbb
adc
dec
pop
imulb
or
es
in
outsb
faddl
sbb
rolb
adc
test
outsb
mov
and
dec
xchg
aaa
pop
fsubs
mov
prefetchwt1
adc
pop
cwtl
mov
jbe
sbb
arpl
das
mov
jp
iret
push
fldenv
aas
cmp
lret
adc
pcmpeqw
ss
pop
xlat
pop
fimuls
in
gs
add
xor
push
sbb
mov
mov
push
or
adc
sbb
add
and
addl
mov
movsl
adc
test
dec
cmpsb
jle
cmp
stos
cmpsl
mov
mov
cmp
mov
mov
jl
in
adc
pop
xlat
pop
mov
mov
xchg
sbb
sbb
sbb
add
scas
lea
out
mov
fistpll
pop
sgdtl
add
add
jbe
add
loopne
push
hlt
in
testb
mov
aad
push
sbb
or
push
ja
jo
imul
push
add
jns
or
mov
jbe
push
jp
push
push
outsb
mov
cmp
jbe
cmpsl
dec
cmp
sbb
push
in
in
jl
sbb
adc
push
add
push
ds
xor
or
add
aaa
lret
push
lods
add
fisubs
or
pop
lea
or
xor
pop
dec
xchg
mov
scas
add
dec
mov
pop
mov
daa
and
dec
movsb
imull
daa
loopne
sbb
fstpt
jmp
aaa
in
xchg
in
lods
dec
out
add
lods
mov
ret
or
dec
add
or
add
enter
push
lea
sbb
sbb
sub
mov
dec
notb
push
or
packsswb
fmuls
sbb
sbb
or
cmpsb
sbb
and
idivl
sub
mov
xor
mov
xchg
mov
out
pop
inc
inc
and
pusha
adc
ret
xchg
and
sbb
sbb
and
or
insb
popa
push
repz
js
pop
test
sbb
ss
jge
push
push
push
inc
and
or
and
pop
cmp
push
scas
icebp
fnsave
insb
jns
inc
inc
sbb
push
ss
lods
and
out
lock
lds
nop
add
and
adc
mov
adc
or
push
pop
fdivrs
outsl
jmp
imul
adc
fs
or
and
inc
jmp
and
sbb
nop
mov
pop
test
xor
fnstenv
ss
repnz
dec
sub
sub
fadd
pop
inc
mov
or
faddp
push
lea
popa
xchg
sub
jbe
xchg
test
insb
add
inc
dec
fadds
arpl
gs
sub
push
shrb
mov
dec
add
xor
adc
pop
sub
xchg
push
rorb
or
fistps
and
pop
inc
mov
mov
pop
sbb
clc
cmp
mov
ds
testb
adc
dec
jmp
dec
test
sub
jle
pusha
mov
hlt
and
cltd
int
lods
add
and
jbe
add
dec
es
mov
test
pop
add
and
mov
imul
in
or
push
adc
fistpl
mov
insl
loop
mov
pusha
push
push
push
out
adc
call
adc
je
scas
mov
cmpsb
lock
bsr
in
or
sbb
in
outsb
cmc
dec
xchg
inc
int3
pop
sti
loope
lret
cmp
movsl
bound
stos
push
xor
sbb
fistpl
adc
das
adc
inc
xor
sbb
inc
sbb
in
xchg
xchg
sbb
pop
scas
fsubrs
les
jo
adc
neg
dec
dec
movsb
rorl
add
mov
add
cmp
fcoms
xor
push
lods
ret
push
fwait
jecxz
mov
fidivl
inc
shr
push
add
scas
jp
jne
lock
cmp
mov
sub
pop
fmuls
add
inc
ret
inc
sub
fldt
iret
sub
add
xor
jmp
fistl
sti
inc
mov
xrelease
clc
jne
cmp
das
sub
adc
jl
mov
dec
jl
cmp
ja
mov
add
sbb
pop
imul
ss
push
insl
push
mov
orl
jge
sbb
fidivl
fwait
std
xor
outsb
mov
or
fwait
xchg
sbb
add
adcl
adc
lock
adc
dec
mov
sbb
cmp
add
repz
sahf
in
loope
icebp
mov
and
test
mov
pop
add
ss
addb
jl
sub
dec
cltd
icebp
insl
sbb
ja
push
jno
inc
inc
xchg
jae
pop
mov
mov
mov
dec
rcr
insl
fucomi
mov
adc
fsubrs
push
add
xchg
sbb
xchg
sbb
adc
mov
xor
fwait
push
in
xchg
nop
lret
xlat
inc
push
call
lea
inc
mov
scas
cmp
out
inc
inc
pop
pop
xchg
aam
lea
rcr
and
jecxz
insl
sbb
fistl
rclb
mov
or
mov
js
sub
hlt
add
ret
add
popf
in
dec
in
or
cmp
dec
sub
xchg
sbb
adc
outsb
dec
fistpll
shrb
add
roll
sti
outsb
adc
xor
push
shrb
sbb
mov
adc
in
xor
sti
pop
ud1
add
add
dec
cltd
add
dec
ret
mov
sbb
mov
add
mov
into
popa
mov
jl
sbb
cmp
inc
inc
cmp
fdivs
scas
aam
push
fcmovnu
cmp
dec
movl
dec
mov
mov
aas
mov
push
roll
test
repnz
cmc
or
dec
popf
cmp
inc
out
cmp
imul
jnp
iret
clc
inc
xchg
pop
push
dec
pusha
jg
pop
ja
pop
adc
inc
outsl
in
into
mov
lret
addr16
adc
stos
dec
arpl
pop
pushf
lock
cltd
repz
jb
inc
inc
xlat
cmp
test
dec
sbb
mov
sbb
das
sbb
add
in
fwait
shlb
and
js
fcoms
inc
insl
movsb
or
sub
rclb
push
jp,pt
cmp
push
or
setb
stos
subl
clc
icebp
sbb
loopne
enter
jge
shl
in
movsb
ret
sti
pop
xchg
fsubl
mov
sbb
dec
push
cmpsb
pop
sbb
add
jno
fisubrl
pop
mov
out
into
or
shl
popa
out
int
xchg
pop
fiadds
pop
push
jae
movl
cs
outsl
lods
jae
dec
jb
cmp
pop
mov
into
adc
or
insb
mov
jae
pop
mov
insl
and
sbb
push
sbb
dec
or
mov
add
scas
insl
in
lcall
push
add
push
push
cmp
int
test
inc
adc
add
xchg
out
cmp
into
or
dec
loopne
outsb
mov
xchg
or
cmp
xchg
and
cmp
cmpsl
pusha
xor
es
add
hlt
jg
bndstx
popa
xor
sbb
xchg
dec
sub
add
dec
xlat
pusha
mov
push
sub
pop
mov
or
dec
bswap
add
mov
call
mov
pop
mov
sub
pushf
js
pushf
aam
sub
cmp
cmc
fwait
xchg
inc
jno
or
lods
xchg
movsl
xchg
sbb
aaa
jecxz
add
into
dec
cltd
arpl
lods
mov
shr
cli
cmp
pop
pop
subl
xchg
xchg
dec
jnp
add
repnz
js
int
or
cmp
inc
xchg
sub
mov
pop
adc
aas
leave
jns
jmp
mov
out
pop
iret
pop
dec
sub
mov
push
mov
or
cmp
xor
hlt
push
daa
lret
dec
mov
lock
fsubr
sbb
fsubp
pop
es
inc
add
xchg
and
xor
lock
into
icebp
xor
dec
jo
adc
es
jb
in
roll
fbstp
sbb
sub
add
push
sbb
pushf
mov
pushf
dec
add
sub
push
adc
dec
jp
mov
lds
ret
mov
and
jle
add
xchg
xchg
sub
push
mov
adc
and
sbb
sbb
jle
mov
push
sub
test
lahf
or
out
xor
and
rolb
dec
or
xor
add
and
mov
iret
aas
js
mov
push
mov
adc
lea
mov
push
insl
fsubrs
and
inc
popf
cmpsl
insb
sbb
xlat
mov
cltd
pop
cmpsb
sub
icebp
mov
jno
adc
adc
repz
push
sub
mov
dec
imul
or
clc
adc
in
insl
inc
inc
lock
jecxz
inc
inc
jb
mov
sub
xchg
call
addr16
bound
mov
ja
adc
cmp
add
fwait
clc
push
dec
xchg
js
ljmp
loop
cltd
movsb
scas
add
add
xchg
mov
and
sbb
insl
cld
jmp
mov
pop
popf
lods
out
fidivrs
dec
out
add
pusha
adc
push
dec
cli
jb
or
and
xchg
ds
fsub
pop
cld
inc
inc
inc
sarb
push
mov
sbb
push
pushf
dec
push
pop
add
stos
cmp
in
push
adc
aam
into
xchg
cmp
sbb
nop
or
xchg
or
out
inc
xchg
movsb
mov
shll
adc
iret
insl
fucomp
mov
mov
mul
rclb
or
mov
inc
inc
pop
lods
fcmovne
and
and
sbb
arpl
out
mov
xor
cwtl
out
xchg
call
mov
repz
out
andl
xchg
jae
inc
gs
adc
xchg
call
jnp
pop
fwait
add
movsb
mov
cld
push
xchg
pop
stos
and
jl
jbe
mov
lret
xlat
xor
sbb
lar
xlat
pop
jecxz
lock
mov
xor
test
imul
pop
and
pushf
push
jo
mov
icebp
in
sahf
adc
push
out
or
add
sbb
push
iret
and
dec
scas
mov
out
xor
push
nop
jmp
adc
fstpt
add
mov
adc
add
lds
inc
pop
jbe
push
popfw
sub
or
in
not
fistps
iret
pop
adc
fsubp
cli
mov
xchg
inc
cs
fisttpl
inc
xor
inc
pop
sbb
pop
pushf
cmpsl
xor
ds
or
mov
inc
ret
insb
dec
and
lods
dec
mov
lods
mov
and
dec
mov
call
dec
sbb
shlb
mov
inc
and
mov
jae
inc
fwait
mov
dec
adc
inc
add
cmp
sbb
cmpsb
popa
hlt
sbb
ficomps
mulb
mov
insl
mov
cmovnp
mov
xor
adc
shlb
repz
xchg
xor
cld
and
aad
cwtl
cmp
lods
out
loop
or
jbe
inc
jb
xor
or
mov
or
ficoml
push
decb
dec
add
int3
jl
xchg
lods
cmp
pop
out
ds
lea
int
lods
pop
mov
mov
lcall
lret
int3
out
xor
std
orb
adc
dec
addb
mov
inc
stc
ss
lock
sbb
mov
adc
cld
lret
dec
pop
jmp
lock
cwtl
adc
jnp
mov
and
mov
push
pop
pop
ja
pop
xchg
add
fs
adc
dec
adc
adc
adc
insb
subb
fldcw
fnstcw
or
push
push
pop
fstpt
imulb
cmp
cmp
ljmp
repz
jae
xor
pop
pop
jo
mov
or
push
sbb
dec
out
pusha
jecxz
shll
adc
xchg
and
lret
out
or
jp
mov
mov
lods
popf
outsb
jno
pop
pop
jne
cmpsb
and
mov
pop
and
movsb
test
dec
sub
sbb
lods
jo
test
sbb
push
xor
call
lcall
call
lods
sbb
mov
ja
adc
aas
adc
mov
mov
popf
xor
scas
fsubs
movb
push
scas
pop
fmuls
sbb
xor
xor
xor
ss
idivl
aam
inc
pop
jle
push
mov
pop
push
sub
xchg
pop
rolb
add
cmp
push
and
xor
incb
int3
lods
sahf
sbb
dec
dec
dec
dec
out
lcall
jno
dec
lock
rcrb
xchg
pop
xor
addl
mov
aam
mov
loopne
sbb
inc
dec
cmp
pop
jmp
inc
add
mov
push
int3
pop
jle
add
in
xor
mov
fwait
out
pop
mov
sub
pop
sub
push
xor
aad
mov
adc
lock
test
or
mov
xlat
inc
mov
add
dec
add
fdivrp
aaa
xchg
js
mov
and
adc
test
sti
cmp
xchg
and
mov
jb
jecxz
shl
mov
adc
sbb
mov
jmp
inc
data16
call
fmuls
pop
addb
pop
dec
cli
add
sbb
or
and
ss
cmpsl
fcompl
insb
add
or
mov
xor
cmova
and
nop
xor
xchg
mov
sub
push
fsubrs
push
jp
xchg
bound
push
nop
push
test
lock
pop
inc
xlat
push
and
xchg
inc
arpl
es
outsl
dec
or
out
jp
pop
pop
rclb
subl
adc
es
xchg
cmp
out
xchg
mov
dec
pop
test
lcall
or
dec
xorl
adc
xchg
add
push
mov
cld
push
xor
cmp
push
cli
and
stos
or
pop
pushf
sbb
sarb
pop
add
ss
rcrb
adc
movsb
neg
jecxz
dec
loop
negb
bound
or
roll
stos
or
jge
mov
pushf
xor
sbb
ret
add
andb
pop
jo
push
adc
in
adc
mov
ret
mov
fnstcw
imul
add
sub
mov
mov
mov
xchg
fldt
mov
rolb
pop
or
mov
or
fisubrl
and
xchg
sbb
jle
pusha
jle
lods
jnp
gs
out
jle
jb
xchg
add
fwait
pop
sbb
xor
retw
fs
or
jnp
add
arpl
sbb
ja
add
cmp
cmp
sbb
jo
pop
xchg
mov
aaa
test
sti
push
ja
aam
in
add
mov
add
in
push
stos
inc
sbb
pop
js
mov
test
sbb
insb
jnp
cmpsl
pop
xchg
push
xchg
or
push
dec
test
imul
mov
cmp
push
stos
insl
inc
jge
ljmp
shrb
scas
mov
jle
rcr
incb
movsb
dec
dec
repnz
and
gs
mov
jge
cmp
add
pusha
cltd
or
scas
cwtl
fwait
jmp
ror
cmp
in
or
fs
xor
xchg
fidivrs
or
inc
sub
jb
push
out
sbb
dec
or
pop
cltd
xor
and
test
or
and
pop
lahf
xchg
mov
adc
mov
sti
sub
idivb
pop
insl
std
jmp
xor
mov
fsts
add
call
add
test
inc
sbb
sbb
cwtl
gs
fcos
cmp
in
sbb
fs
aaa
sub
push
xchg
adc
adc
dec
dec
pushf
mov
in
sahf
push
pop
pop
adc
inc
out
and
mov
lods
mov
pop
xchg
out
fistpl
mov
lds
mov
pushf
fcmovb
fs
add
pop
inc
icebp
push
rcll
inc
dec
mov
jae
cs
lock
pop
mov
ljmp
xor
and
sbb
pusha
lret
fidivl
cltd
test
rcrb
cs
pop
rcl
in
mov
icebp
lret
adc
sub
icebp
jecxz
pop
jo
sbb
out
mov
pop
inc
pop
rolb
push
repz
sti
adcb
mov
pop
loopne
push
adc
inc
outsl
add
mov
jg
sbb
dec
outsl
in
adc
sbb
clc
js
add
sbb
sti
jbe
cltd
inc
repnz
sub
cmp
jl
add
push
scas
mov
dec
add
sbb
mov
mov
aas
ss
je
inc
jle
jle
imul
out
inc
lea
daa
outsl
push
fsubrl
iret
out
test
in
mov
fisttpl
ficoml
shl
dec
in
push
add
ds
movsl
sbb
mov
test
jp
shrl
daa
adc
out
repz
test
add
fs
int
and
pop
loope
popa
sub
scas
mov
int3
icebp
sub
xchg
movsl
pop
int
jne
inc
repnz
adc
call
ds
ret
fidivrs
int
stc
js
test
and
xchg
adc
xchg
jns
mov
cmp
mov
imul
cli
data16
push
mov
xor
lods
sbb
lret
sbb
popa
clts
hlt
mov
imul
aad
outsb
pop
sbb
mov
push
repz
add
ret
push
loop
xchg
sbb
incl
jbe
push
mov
out
mov
loopne
je
mov
mov
jecxz
fidivrs
fadds
data16
cmpl
cwtl
pop
or
cli
loopne
inc
dec
std
jmp
jl
sbb
add
adc
inc
sub
sub
or
lock
test
xchg
repnz
loope
adc
or
jge
fs
sbb
fdiv
and
gs
dec
fwait
sub
loopne
pop
call
mov
sub
sub
icebp
dec
in
fwait
in
add
popf
sti
and
inc
daa
mov
out
arpl
nop
fcmovb
jbe
mov
xchg
daa
sbb
aas
push
in
sub
mov
pop
mov
mov
jge
fs
frstor
or
shll
push
jns
ss
mov
bound
add
xor
pop
xor
pop
and
aam
and
jb
add
push
into
ljmp
dec
inc
adc
bound
ljmp
xor
push
sbb
cmp
out
add
aas
push
shrl
imul
cwtl
cmp
sbbl
jle
jo
pop
mov
das
cmp
sub
push
jo
fdivrl
xchg
push
cmp
adc
fs
js
add
shlb
sub
inc
dec
dec
hlt
or
arpl
mov
int3
fmuls
mov
add
rclb
mov
loop
je
gs
xorl
add
mov
out
sbb
sbb
inc
pop
fcomip
add
dec
cmp
push
mov
test
push
push
dec
in
movsl
test
dec
loopne
ds
fcomp
pop
lock
pop
mov
sub
in
sub
sbb
cltd
shl
decb
popa
or
int3
sahf
insb
xor
jo
dec
pop
jnp
mov
bound
push
ror
pusha
das
sbb
mov
pop
pop
add
pop
ret
xlat
pop
sbb
cli
mov
lea
cmp
sahf
fwait
xor
sub
loope
mov
sbb
mov
pop
xor
xchg
add
int3
xchg
pop
xor
mov
jne
mov
insb
pop
mov
outsb
mov
mov
lret
ret
daa
jbe
adc
int
xchg
je
push
or
es
mov
pop
in
mov
push
pop
xor
repz
sbb
sub
rcrl
add
outsb
repnz
ret
mov
test
sbb
jns,pt
mov
ss
pop
sbb
add
jbe
shlb
pop
lock
lock
mov
leave
aam
and
mov
in
mov
xor
xorb
sbb
xlat
sbb
sbb
and
das
pop
iret
sub
mov
push
in
mov
mov
int3
cmp
sub
lea
cs
mov
daa
adc
dec
inc
pop
mov
adc
adc
jl
in
fisubl
xor
fcoms
xor
and
mov
jmp
mov
mov
inc
dec
inc
xchg
pop
sbb
xor
sub
or
cmp
or
lcall
mov
call
ret
or
and
rorb
fcomps
mov
xor
rcrb
repnz
and
shlb
pop
sbb
mov
xchg
and
sti
fidivrs
xchg
insl
cmp
mov
pushw
xchg
xor
push
or
push
xor
and
mov
jle
cmp
outsl
ds
xor
lret
rorb
movsl
cmpsb
xor
push
pop
mov
jle
rorl
push
je
adc
cmp
xchg
dec
jb
loope
sub
sub
pushw
inc
push
and
pop
sub
fcmovne
fsubl
insb
adc
daa
aad
add
xor
and
or
xor
fxch
adc
mov
dec
xor
push
fsubl
and
pop
iret
add
lds
mov
test
in
dec
sub
or
rcll
jbe
mov
jmp
subb
scas
loop
add
or
addb
shl
fsub
cmp
adc
dec
xchg
movsb
adc
leave
int
mov
cmp
push
out
je
and
xor
push
adc
cmp
mov
mov
mull
ret
sbb
cmp
loopne
sbb
mov
stos
and
jp
inc
lock
push
mov
xorb
xchg
ret
jbe
nop
push
push
lods
xchg
cs
loope
push
jl
inc
cld
cmp
sub
pop
inc
xor
mov
adc
mov
popf
out
inc
xchg
loope
mov
sbb
fistpl
xchg
mov
xchg
inc
loopne
call
add
and
leave
or
mov
faddl
xchg
sbb
pop
mov
imul
add
ret
and
dec
mov
popf
jno
mov
sub
fsubs
in
pop
nop
push
mov
pop
repz
faddp
movsl
pop
loop
loopne
cmp
insb
and
enter
push
lods
pop
fs
xor
iret
xor
repz
rclb
jno
pop
push
dec
fistpl
fcmove
mov
push
sbb
sbb
mov
aad
xlat
ret
ltr
rep
adc
sub
dec
repz
fwait
inc
fsubrl
lea
cmp
add
ffree
iret
sbb
push
sbb
or
push
adc
adc
pop
adc
xchg
jg
add
inc
ljmp
stos
jnp
shl
xor
popf
add
and
mov
and
fsubr
inc
lcall
mov
xor
inc
xor
or
lock
aad
or
xor
iret
pop
mov
sarb
push
sbb
fcmovbe
std
ljmp
adc
scas
dec
inc
mov
ja
cmp
mov
rolb
adc
fistpll
es
jne
mov
jae
addr16
xchg
dec
inc
or
aaa
push
test
js
sbb
or
fnstenv
insb
and
xchg
add
push
push
mov
or
mov
xchg
push
aad
mov
mov
ret
out
inc
inc
mov
sub
push
mov
mov
clc
hlt
lods
inc
mov
add
jb
repnz
mov
lea
in
cmpb
test
std
or
outsb
insb
inc
add
add
stc
adcb
or
aad
add
add
mov
mov
add
xchg
andb
rcr
inc
xchg
call
adc
aad
dec
cmpsl
shr
iret
mov
adc
dec
lock
push
add
shrb
jns
jb
cmp
clc
cmc
pop
imul
jmp
rclb
fs
les
xor
cltd
je
inc
ja
jecxz
dec
shlb
rcll
pop
call
mov
lock
jo
jecxz
test
jge
je
mov
push
push
lock
add
ljmp
notb
mov
mov
pop
mov
mov
mov
xor
mov
cs
push
adc
push
pop
pop
sbb
jmp
ret
aas
xchg
loopne
jp
lods
popa
loopne
adc
xchg
add
cli
mov
and
mov
in
inc
hlt
inc
or
pop
les
or
jecxz
hlt
shrb
push
imul
mov
jmp
dec
add
jecxz
pop
loopne
test
or
sub
sbb
popa
and
sub
mov
inc
mov
inc
push
push
icebp
and
mov
les
jecxz
inc
mov
mov
xchg
movb
cmp
adc
pop
pushf
and
adc
dec
je
sbb
push
loope
xor
add
int
add
jbe
sahf
sbb
xor
repz
push
sub
test
pushf
add
into
pop
jbe
fsubs
adc
dec
je
imul
pop
cmpsl
aam
dec
xor
add
push
bound
das
or
push
add
int3
or
inc
pop
sbb
or
push
push
andb
movsb
or
test
sbb
out
popa
in
shrl
das
les
sbb
ret
imul
ret
push
gs
add
addr16
nop
or
std
rclb
rolb
mov
push
lret
xor
pop
shrl
mov
mov
sbb
into
add
in
rcr
inc
xor
inc
mov
mov
stos
xor
add
fildll
sbb
push
or
orl
add
loope
andb
fidivl
mov
inc
js
and
cmpsb
ret
pop
rcll
jp
mov
lock
loopne
and
pop
cmp
insb
sub
push
push
xchg
aad
xor
pop
mov
adc
out
or
aad
mov
push
push
xor
mov
xor
js
pop
push
dec
dec
xor
xadd
adc
mov
and
cmp
lods
into
je
add
inc
or
test
or
or
mov
popf
inc
xchg
mov
vrsqrtps
xchg
fwait
cmp
xchg
xchg
movl
jno
cmp
push
mov
mov
imul
mov
jne
lret
in
xor
mov
inc
dec
push
or
push
call
push
dec
xchg
movsl
dec
inc
jle
mov
push
pop
mov
dec
jl
and
ffreep
lods
ret
adc
call
xor
sub
in
arpl
cmpl
and
push
inc
rorb
or
xchg
jbe
push
ret
loope
sbb
push
mov
xor
push
cld
jo
xor
adc
push
inc
cs
jl
adc
test
sub
test
push
sbb
out
cmc
sub
sbb
fwait
pop
mov
and
repnz
xchg
ja
dec
xlat
jne
xchg
pop
inc
out
xor
sbb
cmpb
scas
pop
cmpsb
ljmp
sub
dec
add
repz
fisubs
xchg
pop
sbb
cmpsb
cwtl
dec
xor
mov
test
rcrl
int3
sub
mov
mov
ljmp
insl
cmp
pop
and
xor
and
icebp
mov
gs
jecxz
pusha
or
inc
lcall
push
fisttpl
test
shlb
dec
leave
sub
dec
jo
loopne
arpl
push
inc
test
ret
cmp
sub
daa
in
pop
aas
sub
xchg
roll
inc
inc
xor
loopne
and
push
mov
cltd
dec
mov
sbb
cmp
mov
addr16
and
lea
jb
and
fisttpl
jno
sbb
or
lods
mov
repz
in
dec
push
sbb
imulb
or
inc
push
loopne
xor
jnp
push
lcall
int
and
mov
sbb
sbb
and
cmp
sub
adcl
push
lea
outsb
jb
adc
adc
movsl
pusha
xchg
aad
fstpl
cli
and
jns
dec
in
xchg
test
inc
xchg
mov
and
loopne
cmpsb
xlat
icebp
lods
repnz
jecxz
mov
loopne
test
out
lret
mov
stc
mov
pusha
xorl
ljmp
sbb
in
cmpsl
cmp
xor
add
stc
adc
int
pop
leave
and
xchg
loope
xchg
pop
lret
sahf
adc
xlat
icebp
orb
out
pop
shrb
mov
faddl
stc
sbb
scas
jecxz
push
cmp
cmp
lock
scas
pop
test
cmp
lock
out
das
inc
fwait
jecxz
popa
jle
pop
or
dec
push
in
push
orb
or
mov
xchg
pushf
adc
add
dec
das
mov
jae
outsb
pusha
pop
jb
inc
jb
fwait
std
adc
sbb
inc
dec
jo
icebp
lcall
sbb
insl
push
and
push
lcall
je
jb
dec
je
repz
in
mov
sub
xor
cmp
push
cmp
inc
insl
jecxz
and
pop
ss
add
push
loop
pop
or
mov
mov
dec
dec
imul
adc
inc
sti
cmc
loopne
xchg
sarl
stos
and
jecxz
sub
mov
in
inc
and
add
in
inc
clc
xor
xor
sub
mov
xor
xor
or
or
push
xchg
iret
or
lret
push
jle
mov
aaa
jg
js
sti
sbb
stc
or
xchg
notb
sub
jbe
jo
inc
xchg
fstpt
mov
movsl
mov
adc
out
mov
popa
mov
insl
movsl
ret
push
rclb
or
loopne
push
inc
repz
inc
lret
mov
clc
rcll
pusha
or
pop
or
shrb
add
sub
ret
lock
enter
push
jecxz
imul
test
push
sbb
inc
adcb
out
bound
insb
jno
jge
sbb
mov
pop
movsl
pop
add
fisttpl
mov
pop
rclb
fstpt
mov
out
xor
add
jns
inc
in
push
leave
enter
pop
fisubrl
mov
nop
dec
leave
or
xchg
rcr
pop
das
mov
sbb
xchg
push
fisubrs
js
out
out
int
sahf
jge
push
push
xchg
or
pop
add
mov
bound
pushf
ret
inc
loope
push
arpl
pop
adc
call
push
addb
sbb
xchg
adc
and
mov
int3
push
rcrb
nop
nop
cmpsb
es
stos
inc
mov
push
je
mov
mov
inc
adc
int3
int
sti
inc
dec
loopne
cmpsb
add
fs
mov
ficoms
adc
test
lds
scas
xlat
push
push
fisubrl
or
mov
dec
insl
fwait
sub
xor
sbb
sarb
xchg
mov
mov
in
mov
jl
jge
ss
mov
stos
loopne
inc
inc
xor
enter
sbb
enter
adc
pop
fnstenv
and
sbb
mov
xchg
flds
aaa
cmp
cld
test
movzwl
add
es
sub
mov
xchg
inc
or
and
adc
push
fbld
into
gs
push
out
jae
fistpll
push
sub
repz
xchg
insl
cmp
shlb
int3
mov
scas
orl
enter
mov
push
nop
pusha
insl
mov
adc
inc
mov
ficoml
mov
inc
out
mov
inc
xor
into
jge
icebp
int3
repz
or
and
outsl
loope
mov
push
mov
ret
xor
pop
test
sbb
repz
stos
and
pop
push
popf
adc
inc
push
fmull
sbb
popa
mov
mov
adc
jae
adc
push
gs
rorl
add
aad
mov
ret
jmp
mov
xchg
pushf
es
sbb
cmpb
add
push
hlt
and
scas
or
fstl
sub
insl
rclb
ret
int3
fmuls
cs
in
flds
call
fwait
adc
or
adc
adc
int3
sub
outsl
push
nop
adc
xchg
andl
jo
call
jg
rcll
enter
cmpsl
fsubrl
cli
stos
lea
dec
lds
jg
iret
or
jne
pop
mov
push
movsb
negl
fucom
inc
mov
inc
jnp
out
and
mov
sbb
and
cwtl
push
fdivs
push
test
in
notl
repz
loope
test
xor
bound
stos
pop
cmp
mov
add
jmp
cmp
push
cmpsl
ret
adc
shl
mov
xor
xor
ret
loopne
imull
jp
mov
ret
je
imul
ret
fimuls
pop
popf
sti
cwtl
jne
inc
sub
sub
push
or
mov
arpl
and
or
mov
imul
fucomi
lock
adc
loope
xor
out
jo
shll
xchg
fidivl
push
jo
ret
gs
inc
sub
sub
pop
test
inc
sbb
ljmp
nop
add
sbb
inc
ss
loope
in
popf
mov
adc
inc
in
adcb
push
inc
jnp
xor
sbb
cwtl
adc
push
xchg
sbb
dec
or
into
shl
in
sub
mov
cmp
rclb
mov
fidivs
cmpsb
or
out
insb
cmp
popa
mov
cwtl
and
into
mov
fcmovnb
or
dec
jo
icebp
pop
push
mov
push
in
call
js
adc
loopne
push
jb
xor
push
sub
jp
push
mov
out
pop
and
mov
movsb
cmp
pop
bndldx
cld
call
rcll
jb
shll
pushf
in
pop
fisubrs
xor
mov
pusha
sbb
push
aas
sub
sbb
push
in
pop
jle
popa
sbb
aas
imul
pushf
daa
lock
lods
popf
popf
xor
pop
cmp
pop
jge
inc
xchg
pop
adc
jmp
es
push
pop
sub
mov
adc
iret
dec
adc
pop
add
fildl
in
lods
push
xor
shld
jmp
data16
inc
insl
dec
inc
xor
jae
sbb
adc
jl
push
lds
mov
bound
data16
jl
cmp
std
stc
mov
je
cltd
jmp
inc
add
adc
mov
jbe
shlb
or
in
dec
jmp
adc
cmp
aam
repz
rcr
mov
and
jp
and
push
sbb
lds
gs
add
cwtl
mov
and
outsl
bnd
and
sub
nop
loope
xchg
es
out
xor
loopne
arpl
in
inc
xchg
lods
mov
adc
dec
push
dec
and
pusha
daa
pop
and
push
aas
pop
sti
and
add
jecxz
push
addb
jl
mov
call
sbb
es
js
adc
aaa
fldenv
mov
mov
dec
add
jnp
xor
imul
cmp
ss
insl
xchg
or
xchg
pop
popa
addr16
js
orl
test
aam
mov
popa
subl
andl
push
icebp
ljmp
les
test
xor
dec
lods
mov
cld
mulb
movsb
shll
fxtract
int
inc
sbb
mov
pop
in
in
and
push
loopne
or
cltd
enter
clc
push
sbb
ss
rcrl
pop
test
cld
mov
rcrl
lahf
clc
scas
insl
xor
cmp
adc
jge
xor
xchg
data16
into
outsl
adc
sbb
into
hlt
push
add
sbb
push
clc
cmpb
pop
outsl
add
push
fsubl
in
leave
inc
and
sti
ficomps
xor
daa
sbb
jle
inc
cmp
sub
push
idivb
addl
mov
inc
dec
pop
dec
aaa
sbb
or
jno
or
cmp
and
aaa
xchg
popa
xchg
xchg
push
adc
jns
movsl
icebp
dec
daa
push
fsubs
sub
inc
xor
lret
xor
or
outsb
jbe
lret
adc
inc
mov
shrl
inc
mov
popa
int3
sbb
inc
mov
push
ss
xor
xor
push
aad
adc
mov
popa
adc
cmp
aad
adc
push
dec
aaa
pusha
sub
fisttps
cmp
shl
inc
inc
push
adc
setno
jge
jl
js,pt
adc
insb
push
sbbb
pushf
jo,pn
out
inc
mov
mov
mov
or
insb
xchg
jnp
mov
and
cmp
pushf
pop
sbb
add
xchg
aaa
push
or
lret
sbb
sbb
mov
add
sti
push
mov
pop
lods
xchg
pop
rcrb
test
mov
inc
je
scas
es
inc
mov
xor
sbb
xchg
mov
cmp
rorb
xchg
xchg
inc
orb
pop
loopne
add
lds
stos
dec
push
loope
inc
push
add
push
cmp
sub
mov
adc
mov
in
test
lds
jg
mov
mov
mov
sbbl
add
sub
and
int3
or
adc
adc
jmp
add
jns
in
push
cmp
icebp
and
repnz
add
mov
insl
std
call
sub
pop
jns
add
or
cli
sbb
add
negl
mov
mov
aad
jno
mov
loopne
daa
mov
push
dec
mov
mov
mov
sbb
imul
sbb
cmp
fidivl
cmp
lods
add
icebp
ds
das
jle
loopne
inc
pop
lcall
dec
mov
aaa
adc
jbe
sarl
adc
or
ljmp
jmp
fiadds
mov
lret
add
scas
incb
push
aad
cmp
insl
or
leave
hlt
or
push
out
xchg
push
or
dec
or
jmp
add
movb
jo
sub
push
mov
push
sub
nop
pop
cli
pop
jmp
xchg
imul
adc
sub
pop
or
push
cmpsl
xchg
dec
or
mov
push
cmc
push
in
mov
loop
mov
pop
mov
jo
sbb
scas
cltd
mov
add
fsubr
flds
sub
sub
fstp
fcoms
cmp
out
pop
popa
loopne
cmpsb
fmuls
adc
adc
mov
clc
call
or
fldcw
pusha
sbb
xchg
cmp
add
lock
lock
cmpl
push
jnp
xchg
inc
aas
insl
fwait
loope
push
dec
jb
push
and
dec
in
add
inc
out
fs
fistpl
and
dec
sub
dec
xchg
mov
ficoml
testl
inc
add
scas
sub
pop
jns
pop
dec
add
test
pop
inc
outsl
lock
xor
lds
out
pop
fcmovbe
pop
ss
fistpll
loope
and
je
fmuls
insl
mov
dec
push
bound
jae
dec
int3
mov
xchg
push
rolb
xchg
mov
sub
dec
pop
scas
pop
adc
test
adc
mov
mov
mov
cmpsl
and
imul
mov
andb
mov
lods
js
jno
fdivs
dec
rolb
js
mov
adc
subb
xchg
scas
or
push
mov
cwtl
jnp
sub
inc
xchg
inc
test
or
adc
dec
dec
adc
push
adc
adc
sti
lret
push
loope
push
adc
popf
outsl
lods
mov
mov
jg
inc
xchg
js
ljmp
sbb
enter
sarl
mov
mov
mov
jbe
daa
jbe
out
xor
ret
inc
pop
and
bound
shll
subb
mov
push
xorl
rorb
dec
int3
mov
sub
and
in
mov
inc
xchg
inc
lcall
mov
mov
sub
ss
jo
ror
cwtl
push
add
lods
inc
or
imul
dec
or
shr
sbbl
adc
add
fwait
aaa
mov
daa
inc
fwait
shll
ror
repz
insl
mov
fcoms
mov
xchg
or
xchg
xor
xchg
push
scas
hlt
mov
sbb
sbb
pushf
adc
aad
test
popa
pop
leave
add
mov
sbb
dec
xchg
xchg
mov
out
pop
sub
or
jmp
xor
mov
inc
pop
add
cmp
dec
xchg
mov
sbb
jg
sub
inc
xchg
push
fnstsw
js
hlt
sbb
in
add
mov
pop
movsb
add
adc
cwtl
inc
jo
mov
mov
js
stc
push
mov
add
pop
mov
cmp
mov
stos
push
mov
mov
push
add
sbb
add
inc
cmpsl
xor
push
adc
dec
roll
push
icebp
mov
xor
dec
adc
lods
popf
add
mov
sub
xchg
popa
or
push
lds
aaa
or
cmp
push
add
imul
mov
test
push
int
dec
stc
lock
mov
adc
adc
dec
cmp
xchg
imul
add
repz
adc
adc
out
aad
sbb
inc
and
add
inc
cmp
pop
sbb
adc
fistps
imul
xor
je
rcl
nop
test
xor
pop
cwtl
and
psrlq
aad
mov
inc
nop
call
iret
xorb
sub
mov
xor
das
push
inc
cltd
pop
jo
mov
lock
sbb
jb
mov
stos
push
sbb
notb
adc
cmpsb
ja
adc
mov
clc
hlt
push
push
adc
lock
dec
sub
call
clc
aaa
mov
adc
imul
add
ja
adc
mov
pop
mov
repnz
sbb
add
daa
mov
sub
dec
movb
xchg
es
sbb
je
js
inc
leave
inc
stos
sbb
xor
dec
adcl
push
nop
int3
push
rol
mov
movsl
cmp
adc
cmp
jle
lods
push
pop
and
cmp
add
mov
inc
in
xlat
popf
cmp
cmp
mov
cmpsl
and
xor
scas
inc
adc
je
repz
clc
mov
mov
jg
cltd
sbbb
sbb
rcrl
push
fdivrs
xor
cmp
xchg
mov
adc
push
jle
movb
add
orl
and
jp
mov
lea
push
fisttps
dec
adc
clc
sbb
sahf
leave
xchg
je
aas
lods
push
mov
stos
aaa
push
fwait
pop
cld
imul
and
sbb
and
xor
sti
je
dec
cltd
xor
test
mov
dec
fiadds
add
xor
adc
in
dec
outsl
add
adc
mov
cmc
sbb
sbb
cs
adc
xor
bound
mov
ret
and
roll
lock
mov
inc
popa
in
clc
cmp
rol
or
sub
jb
adc
lds
mov
and
jp
mov
inc
stos
sub
test
rcrb
xchg
jmp
aas
inc
out
inc
rcr
jmp
or
fs
fwait
jns
adc
pop
jl
insb
insl
fwait
adc
mov
xchg
xchg
pop
pop
add
push
jg
scas
xchg
adc
cmpsl
dec
cmp
lahf
test
fadds
xor
mov
lret
xor
jg
push
roll
mov
sbb
jge
push
adc
xchg
popf
adcb
iret
fs
jne
fisubrl
ds
mov
add
sub
inc
cli
adc
popf
jnp
jne
in
sbb
inc
je
je
imul
sub
test
insl
sub
out
insl
hlt
add
shl
sbbb
shll
adc
cmp
mov
loopne
push
xor
mov
push
sahf
ficoml
mov
int3
fildll
sbb
sub
mov
mov
roll
insl
mov
sbb
push
sbb
dec
das
adc
out
adc
daa
push
lcall
sbb
xchg
icebp
inc
sub
push
je
insb
dec
push
xchg
out
add
jmp
outsl
shlb
out
and
or
lds
push
sbb
add
lock
lds
adc
add
mov
jo
sbb
add
icebp
pop
mov
or
and
jg
aam
add
in
in
dec
push
jg
xchg
mov
inc
btc
add
and
fstps
jmp
lods
hlt
xchg
pushf
test
lods
or
or
cmp
push
and
add
dec
xchg
pop
cwtl
cmp
cmp
pop
inc
dec
movsb
xchg
mov
lock
jp
sbb
dec
pop
or
mov
ret
mov
movsb
push
gs
cmpsl
loope
rorb
or
xor
sub
jbe
sub
sti
adc
je
test
xchg
adc
ja
andb
ss
add
rcrl
sub
arpl
loop
adcl
lock
sahf
mov
and
mov
daa
mov
jb
xchg
out
mov
mov
insl
add
push
aas
lds
jmp
jo
inc
in
shrl
mov
rol
dec
bound
pop
aaa
mov
dec
dec
pop
push
lahf
jl
sarb
add
push
mov
dec
loope
test
sub
mov
pushf
cld
pusha
mov
sti
sbb
jae
xlat
loope
sub
rcrl
ss
push
pusha
mov
shlb
lahf
push
lods
dec
lock
add
pop
xchg
subb
adc
fwait
xor
jo
or
mov
xor
push
lods
or
mov
ret
pop
shll
lahf
aad
movl
arpl
ret
and
orb
mov
imul
mov
push
int
addr16
dec
cmc
mov
aad
rclb
dec
lock
push
xor
push
mov
add
adc
adc
js
jo
in
icebp
addb
lods
bound
stos
jno
xor
mov
adc
das
aam
aad
fmull
dec
xor
jb
or
and
mov
mov
sbb
jbe
loope
adc
dec
lods
iret
into
stc
sar
jl
jno
mov
xchg
push
cmp
pop
jno
mov
je
xor
and
fidivs
dec
arpl
xchg
pop
mov
loopne
add
xchg
or
pop
sbb
testb
mov
rcll
jnp
roll
shlb
xchg
or
dec
loop
add
jo
sbb
pop
leave
sbb
inc
out
add
ljmp
xor
fwait
imul
aas
dec
out
pusha
cmp
sbb
fisubl
sbb
sbb
ret
js
add
push
cmp
jge
inc
and
mov
xor
push
out
jno
or
or
xchg
ficoml
sub
cmpsl
sbb
mov
adcl
subl
shll
adc
popa
test
pop
and
out
mov
adc
mov
cwtl
and
dec
or
pop
push
pop
jge
sub
sub
arpl
int
fdivr
mov
mov
mov
adc
sbbl
in
mov
mov
adc
icebp
insl
cmp
and
data16
lock
pop
jns
lds
loop
ret
clc
push
add
insl
loope
cmp
pop
add
into
pop
ja
add
jns
push
fwait
lds
push
and
orb
imul
jb
sbb
push
cmp
cmp
scas
push
add
jl
cmp
je
xor
fmuls
pop
sub
push
inc
push
gs
dec
pusha
mov
cwtl
mov
and
or
sub
add
adcl
outsl
test
out
clc
mov
mov
and
fdivrs
inc
hlt
shrl
shlb
out
dec
inc
rorb
imul
cwtl
adc
adc
xchg
mov
jp
jmp
sub
out
sbb
pop
cwtl
fimull
sbbb
cli
jo
pop
in
cmp
outsl
or
in
sbb
adc
mov
mov
push
dec
int
movsb
and
add
sub
pop
outsb
sub
aam
add
mov
aam
sub
lcall
movsb
xor
mov
loopne
mov
sub
aas
sub
dec
pop
shlb
stos
or
add
mov
or
lock
xchg
lret
in
xchg
add
sahf
inc
dec
push
adc
pop
push
push
add
lcall
rol
hlt
outsl
xchg
mov
adc
shl
add
xchg
push
jl
lods
lret
movsl
add
in
jb
xchg
and
cmp
and
push
lea
xchg
sub
sbb
into
cmp
pop
out
in
mov
dec
loop
push
add
jle
adc
sahf
scas
sub
rcl
clc
and
mov
jo
aad
push
sbb
and
xchg
mov
and
cmp
int
inc
gs
push
inc
xchg
mov
add
jo
pop
pop
negl
stos
sbb
movsb
in
adc
sti
into
cmpsl
cmp
aam
inc
pop
daa
pop
lahf
adc
mov
mov
sub
aam
pop
iret
pop
sbb
xorb
inc
and
pop
xchg
adc
popa
and
popf
xchg
test
jg
cs
add
xchg
insb
es
sub
out
add
adc
insl
clc
mov
es
fsubl
xor
adc
scas
jmp
int
mov
ja
test
xchg
sub
fildll
and
fcompl
jge
inc
adc
jp
inc
jle
aam
mov
fsubs
add
sbb
jl
int3
jb
movsb
and
roll
fs
cmpsb
and
vroundpd
xor
fldcw
xchg
add
mov
pop
mov
and
add
sbb
movsl
cli
inc
in
mov
out
sbb
jecxz
adc
lock
in
fildll
stos
cmp
repz
sbb
pop
in
sub
inc
mov
test
xchg
fistl
add
push
sbb
hlt
and
lcall
data16
sbb
dec
xchg
push
insb
push
push
popa
rorl
mov
test
sub
or
repnz
adc
scas
rol
jl
adc
paddq
cmp
sub
in
adc
mov
in
gs
js
add
adc
inc
sbb
shll
inc
sbb
into
xlat
scas
gs
mov
int
pop
add
lods
data16
inc
mov
into
popf
push
sub
sub
aam
or
mov
push
cmpsb
rcrl
xlat
push
les
adc
test
xlat
xchg
aaa
xchg
xor
fsubrs
aaa
je
push
sbb
dec
add
sbb
lods
sti
sbb
imul
adc
mov
adc
adc
mov
jl
adc
inc
ficompl
push
or
lret
insb
dec
mov
les
or
fnsave
and
imul
inc
outsl
push
adc
mov
push
mov
adc
sbb
mov
mov
inc
inc
arpl
or
inc
outsb
or
sbb
mov
inc
push
inc
scas
cmp
cmpl
xor
push
xor
adc
inc
mov
psubusb
push
add
leave
pusha
add
test
aas
shl
xchg
sbb
sbbl
out
shll
loopne
push
sbb
dec
insl
shrl
jle
adc
mov
sub
testb
inc
out
sbb
or
adc
mov
push
rcrl
out
and
test
pop
shrl
subl
loop
sub
mov
mov
push
sbb
mov
sbbl
push
or
pop
test
and
insb
inc
push
pushf
push
sbb
cmc
xlat
jne
fcmovb
insl
cs
shl
fsubl
shr
pop
push
add
push
inc
stc
cmc
imul
pusha
pop
sbb
push
out
xchg
mov
iret
mov
jnp
adc
cmp
xchg
loopne
arpl
lds
stc
outsb
mov
addb
in
aad
or
insb
fstpt
xchg
or
sub
mov
adc
adc
add
stos
mov
loop
imul
fisttpl
int
xchg
cwtl
fildll
ret
negl
adc
in
xchg
sarb
mov
mov
pop
fwait
jo
cli
jb
cli
xchg
mov
sub
cmp
into
adc
push
xor
mov
in
jae
xor
filds
mov
mov
dec
dec
push
hlt
mov
pusha
inc
mov
adc
lcall
or
mov
sbb
fwait
ds
cld
push
ret
loope
and
xchg
and
lcall
sub
mov
fbld
or
or
inc
ja
cmpsl
stos
addr16
mov
loope
push
clc
jle
jl
cmp
loope
ds
ret
pushf
cmp
insb
add
jne
xor
test
js
push
dec
pop
in
ds
mov
mov
shr
or
xor
outsb
pop
fidivs
push
scas
xlat
in
ret
push
negb
mov
repnz
mov
mov
mov
cmp
adcb
cmp
mov
xor
ja
inc
mov
jb
mov
and
xchg
out
bound
pusha
hlt
ds
popl
arpl
into
gs
jmp
sbb
dec
sarb
pop
push
shrb
jecxz
dec
into
adc
nop
pop
xor
popf
js
ds
dec
lock
nop
fildl
add
and
xchg
xchg
flds
xor
pop
adc
cwtl
aaa
xchg
or
mov
mov
es
mov
ds
mov
pop
loopne
or
lahf
hlt
ret
jo
sbb
fstpl
andb
mov
in
nop
lcall
test
pop
jmp
sbbl
xchg
and
addl
xchg
mov
jp
add
and
dec
adc
push
rorl
mov
enter
inc
jb
nop
movsl
movsb
fisttpl
push
call
adc
dec
jmp
fbld
dec
xchg
jo
loop
xor
pop
outsl
insl
dec
xchg
ds
and
jae
xchg
push
add
add
lret
popf
mov
pusha
jne
mov
int
sbb
movsb
pusha
outsl
int3
lret
xchg
pop
dec
cli
loopne
shlb
xchg
adc
jne
xchg
add
pusha
loopne
nopl
cmp
cmp
xchg
pop
or
xor
mov
or
jne
fwait
mov
xchg
dec
lcall
out
or
sbb
es
aam
test
insb
and
adc
pop
cwtl
popf
fcompl
mov
int3
mov
xchg
das
xchg
fistps
fwait
imul
call
adc
aaa
adc
shrl
dec
push
les
xchg
mov
sub
jb
and
adc
mov
xor
push
cmp
xor
adcl
fiadds
jp
add
mov
xor
gs
movsl
dec
add
inc
pop
push
ss
add
nop
push
fsubrs
dec
dec
pop
pop
fisttpll
jp
adc
les
mov
sub
xlat
ret
nop
loop
fadds
push
les
inc
rcrl
xchg
jp
inc
lds
mov
loope
loope
or
pop
sub
cwtl
out
jmp
outsl
fdivrs
in
jmp
adc
add
int
mov
std
test
dec
dec
dec
push
in
nop
gs
mov
inc
out
out
in
addl
mov
movsb
adc
pop
mov
in
mov
mov
jecxz
mov
in
testb
int
pop
in
dec
js
sbb
out
icebp
or
mov
inc
xchg
fs
cmp
sub
push
das
mov
fcoml
add
cs
call
enter
imul
cmp
jns
cmp
jmp
les
pop
rcrb
cmp
push
les
xchg
ss
mov
hlt
sbb
push
movsl
and
imul
sub
loopne
xlat
inc
stos
loop
dec
mov
add
pop
insb
push
outsb
inc
add
inc
push
scas
es
addl
popa
push
cmp
clc
mov
xor
pop
pushf
stos
pop
jl
sbb
or
push
adc
xor
dec
mov
xor
clc
mov
pop
lea
les
jmp
lret
or
shlb
pop
jnp
fcomps
add
je
inc
mov
ret
jae
sbb
les
cmp
cmp
add
mov
xlat
add
cwtl
mov
mov
repnz
pop
insb
mov
pop
add
addr16
add
xor
xchg
adc
psadbw
popa
loope
push
pop
and
inc
and
add
icebp
es
pop
hlt
push
cmp
dec
adc
or
mov
jae
das
js
inc
les
into
mov
rclb
xlat
in
or
mov
push
dec
jecxz
adc
sub
jecxz
popf
mov
sbb
es
mov
mov
call
leave
sarb
aam
xchg
and
and
jne
push
adc
mov
sbb
xchg
mov
inc
mov
cli
lret
orl
or
das
mov
ficomps
push
gs
mov
pop
mov
inc
mov
inc
push
les
adc
fidivl
lods
cmpb
enter
aas
mov
stos
sbb
cwtl
icebp
sbb
and
cmp
mov
ret
sbb
mov
aaa
adc
xchg
add
xor
inc
xor
loopne
push
rolb
cmc
push
and
fldcw
pop
les
adc
sbb
movsb
orb
test
or
and
gs
lods
sbb
push
adc
shlb
jecxz
and
pop
pop
sbb
mov
pusha
test
sbb
push
daa
stos
lret
or
or
cld
dec
and
pop
or
shlb
rcrl
xor
icebp
dec
lock
mov
in
adc
lock
popa
inc
push
int
inc
mov
jno
mov
sbb
push
jmp
lock
pop
inc
es
pop
je
adc
mov
clc
cli
call
xor
push
inc
pop
pushf
call
dec
push
pusha
rorl
in
adc
and
jp
sbb
sub
in
js
cmpl
dec
fcoms
sbb
jle
mov
sti
jae
lods
sub
adc
cwtl
xor
cmp
and
scas
js
or
dec
insb
or
pop
add
subb
sub
add
repz
sub
or
mov
dec
xor
push
cmp
fistpll
lds
push
pop
out
xor
and
mov
insb
push
xchg
call
push
popf
fcomps
cmp
adc
push
pop
es
push
scas
test
cmp
push
mov
rorl
clc
das
inc
cmc
push
cmp
sbbl
add
clc
dec
jbe
es
pop
inc
sub
enter
stos
mov
iret
aam
mov
cs
cmp
outsb
cld
js
sub
sub
xor
dec
loopne
sub
nop
sub
sub
shll
inc
ltr
sbb
cmpw
adc
loope
fwait
lods
les
adc
mov
scas
mov
repnz
test
mov
cmp
sbb
lock
popl
dec
push
inc
mov
test
push
mov
xchg
js
push
xchg
in
popa
sbb
pop
or
xor
push
pusha
inc
jge
xor
mov
and
inc
shlb
arpl
xchg
dec
sub
mov
icebp
cmpsb
jo
out
pop
add
pop
inc
popf
mov
and
add
pushf
enter
adc
cwtl
adc
jmp
clc
pop
mov
into
pop
inc
loope
xor
sbb
cmp
fdivrl
sbb
add
xlat
xchg
or
sub
mov
sbb
mov
insl
je
cmp
rorb
fildl
test
cmp
xor
movaps
cmp
sub
push
shr
xor
adc
dec
inc
aaa
xchg
inc
and
lea
and
inc
je
or
mov
fwait
add
cmpsb
push
mov
punpcklbw
adc
into
or
imul
sbb
imul
inc
mov
adc
mov
cmp
daa
out
or
pop
cmp
mov
mov
sbb
fistl
adc
pop
lea
out
xor
sbb
test
repz
jo
mov
repz
aaa
cmc
jno
stos
xchg
mov
or
adc
or
fucom
sahf
jge
sbbb
inc
xchg
and
mov
add
xchg
add
cmpb
js
mov
mov
sub
add
call
inc
add
popa
push
test
inc
jnp
and
mov
cmp
sub
daa
sub
pop
fwait
adc
sub
in
lock
sbb
lcall
mov
sbb
je
test
mov
pop
adc
in
mov
sbbb
sbb
push
loopne
dec
jp
enter
sbb
test
add
xlat
cmp
pop
xor
inc
aad
subl
cmp
add
aaa
inc
sub
add
sahf
xor
jne
jecxz
mov
adc
jo
xor
jbe
cmc
fdivrl
xchg
inc
push
push
popa
ret
push
mov
sbb
mov
popa
imul
add
lock
mov
xor
test
mov
pop
ret
xchg
pop
frstor
adc
lock
lods
sbb
mov
mov
or
cmp
mov
cmp
mov
das
cld
rolb
sbb
and
sbb
adc
xor
movsl
dec
push
xor
cmp
adc
push
pop
mov
or
push
adc
push
lea
out
add
push
out
movsl
test
into
cmpsl
adc
por
mov
sbb
jbe
and
rcrb
adc
imul
mov
xchg
loopne
inc
pushf
insb
pushf
sti
inc
xor
mov
arpl
mov
lods
sub
xor
pop
mov
call
adc
out
test
cwtl
add
out
ror
xchg
add
lcall
lods
xor
dec
shlb
cs
ret
imul
sbb
adc
jecxz
jbe
insl
icebp
adc
int
aam
sbb
xchg
add
mov
xor
cmp
aaa
popa
adc
push
mov
das
cwtl
rcrb
mov
jbe
inc
and
and
push
mov
sbb
les
ja
mov
mov
adc
add
test
cmpsb
push
xchg
and
pushf
fcoml
les
rcll
cmp
pop
add
mov
mov
pop
add
adc
ss
add
push
xlat
lods
add
add
adc
adc
iret
les
mov
and
xchg
add
mov
cmc
cmp
and
sub
mov
xor
fnstenv
out
mov
iret
sbb
ret
add
sbb
incl
xor
mov
cmp
xchg
cmpsb
insl
xor
lock
mov
lret
pusha
or
decl
stc
inc
in
pop
mov
icebp
dec
adc
in
popa
mov
loop
cmp
add
aad
jo
mov
mov
xor
fwait
jnp
and
or
int3
sbb
stc
or
es
xor
and
jae
cmc
test
mov
and
flds
add
mov
inc
push
sbbl
loop
shll
pop
ret
push
lock
div
xor
sahf
in
ffree
cwtl
and
sub
mov
cmp
sbb
mov
mov
daa
inc
cwtl
xchg
lahf
sub
call
lcall
xchg
cmp
dec
pop
dec
jp
dec
aad
lock
adc
inc
xchg
pop
pop
adc
cltd
and
jmp
xor
add
add
insb
jl
or
or
pop
adc
rcrb
jnp
ficoml
leave
add
or
ret
xchg
lods
and
and
cmp
jl
in
and
dec
push
out
jmp
sbb
pop
push
and
test
or
loop
push
mov
shll
ds
jp
and
jns
push
jg
out
inc
push
imul
sbb
inc
sti
xor
insl
sbb
and
sub
and
inc
or
add
dec
adc
pop
adc
nop
and
loope
push
jle
mov
mov
vmovss
adc
mov
adc
sarl
cmp
xchg
sbb
icebp
xor
sub
sub
and
push
dec
adc
dec
add
adc
inc
lcall
ljmp
enter
mov
sbb
add
add
jae
xor
inc
roll
inc
outsb
outsb
movsb
cmp
movsb
insl
xchg
cmp
adcl
inc
sbb
mov
mov
mov
fwait
scas
lea
arpl
stc
or
ret
out
insl
add
pop
and
pop
or
or
cmp
mov
mov
and
dec
mov
push
xor
xor
les
mov
pop
mov
and
lret
and
fists
ret
or
push
sarl
subb
pusha
shlb
xchg
test
fwait
insl
xchg
int
or
fsts
or
mov
ret
inc
dec
mov
in
js
xchg
add
std
dec
clc
or
and
scas
mov
vpunpcklbw
pop
repz
inc
mov
dec
or
rclb
into
movsb
aad
es
ror
outsl
nop
add
and
js
loope
addr16
movsb
push
xchg
xchg
mov
jmp
sub
and
cmp
mov
adc
cmp
xchg
lahf
adc
lds
lods
lods
insl
je
adc
xchg
and
push
rcrb
test
cmp
xor
xchg
mov
int
sub
aam
rol
mov
and
xchg
or
xor
movsl
and
cmp
fimuls
mov
loopne
pop
jge
cmpsl
xchg
movsb
stos
ljmp
or
dec
sbb
push
inc
inc
fcompl
cs
dec
movsb
inc
add
adc
and
mov
cs
xor
adc
inc
mov
adc
daa
cmp
sub
mov
lock
movsl
add
mov
inc
fisttpl
adc
js
pop
ret
andl
sbb
pop
out
add
jb
aaa
pushf
cmpb
call
shlb
cmpsl
xorl
lcall
mov
dec
add
or
scas
pop
mov
mov
rcrl
nop
pop
xchg
dec
mov
add
fwait
pop
cwtl
rcll
mov
fidivl
jle
gs
cmp
jno
inc
dec
xorb
lcall
cmp
add
push
mov
mov
sub
or
incl
cmp
sahf
mov
jmp
lods
fnsave
int3
lea
lea
add
inc
sbb
push
xchg
jae
inc
loop
in
xchg
push
mov
lods
add
jl
add
addr16
in
sub
pop
mov
lea
add
imul
lods
insl
icebp
aas
push
inc
cmp
mov
xor
sti
add
insl
jbe
xchg
or
cmc
mov
imul
pop
shlb
cmpl
xchg
add
inc
or
fs
mov
or
dec
xor
sub
cmp
xor
cs
xchg
outsb
or
loope
stc
jle
call
inc
add
cmp
sbb
adc
mov
xchg
inc
mov
jmp
js
add
nop
jb
imul
sbb
rclb
or
jmp
xor
jnp
cmp
push
test
push
add
inc
sbb
fisubrl
cmpsl
mov
sub
xchg
ja
mov
add
aaa
leave
mov
xor
je
push
js
pop
jb
fsubr
nop
test
subl
jle
and
scas
or
imul
jnp
jno
xchg
ss
inc
fimull
enter
in
outsl
dec
out
lock
xor
leave
pop
arpl
mov
mov
nop
mov
pop
mov
in
mov
mov
jnp
imul
mov
xchg
lcall
fcompl
stos
dec
add
xchg
push
push
xchg
jp
popf
add
stc
mov
xchg
int3
test
pop
dec
add
xchg
imul
sarb
and
popf
das
adc
mul
sub
lea
mov
mov
mov
xorb
mov
arpl
jg
ret
xor
fstps
add
jge
mov
int
jo
xchg
xor
popf
jle
dec
mov
cmp
inc
or
add
mov
xor
fsubrl
ret
jnp
adc
out
xor
fisubrs
hlt
inc
mov
sub
scas
dec
sbb
xchg
movsl
xor
es
cwtl
sahf
ss
sahf
push
pusha
ret
popa
adc
add
add
jns
shlb
cmp
imulb
es
or
enter
inc
arpl
and
add
hlt
insb
adc
push
jb
test
insb
or
mov
pusha
pop
pop
and
popa
pop
js
fwait
test
cmp
lret
test
cmp
dec
push
mov
push
mov
test
test
and
and
sub
add
jns
fs
add
daa
popa
nop
add
adc
out
fcompl
je
ret
dec
cmpsl
lods
daa
xlat
mov
sbb
pusha
adc
jae
sbb
bound
popa
bound
lods
pop
xchg
dec
jecxz
pop
xchg
mov
cmc
mov
ret
shlb
mov
sbb
inc
push
mov
insb
jno
aas
js
lock
rclb
mov
nop
jp
xor
pop
xchg
lahf
xlat
push
add
or
xor
sub
in
xchg
sub
add
test
fs
jbe
fcoms
in
jl
inc
lcall
loop
lods
in
dec
cmpsb
js
or
xchg
lock
pushf
dec
test
movsb
mov
and
sbb
mov
scas
hlt
or
adc
fiadds
icebp
ret
cs
xor
test
fs
and
nop
cmp
vfmsubaddps
loopne
and
sub
mov
or
add
or
test
and
popa
mov
add
add
lock
lret
outsb
xchg
adc
fwait
sbb
cli
leave
outsb
orl
cwtl
adc
dec
popa
fisttpll
or
sbb
add
data16
push
xchg
or
pop
aad
test
jb
cld
cwtl
cwtl
aas
lret
stos
inc
shll
sbb
rorl
add
stc
and
lods
hlt
sbb
loop
pop
push
andl
enter
stos
cmpl
adc
push
jne
inc
stos
out
fstpl
dec
and
sub
adcb
cmp
scas
dec
ret
hlt
inc
cmp
mov
jnp
push
lret
rolb
or
dec
repnz
insl
add
lcall
je
inc
and
adc
test
push
xor
xchg
inc
ret
inc
xchg
cmc
or
shll
cltd
bound
push
and
and
xchg
and
test
movsb
fidivs
out
pop
cltd
xor
in
scas
xor
inc
mov
arpl
cmpsl
fwait
aaa
addl
lcall
mov
and
fwait
pop
jnp
push
mov
jge
dec
mov
sbb
push
cmp
inc
stos
sbb
xchg
add
cmp
push
fnsave
and
movsl
sbb
sbb
add
or
ljmp
popf
mov
sub
and
ret
gs
outsl
pop
stos
pop
inc
daa
jg
add
daa
shll
push
lret
inc
mov
lods
push
inc
mov
test
adc
movsb
cmp
iret
mov
jns
shrl
push
mov
fimuls
xor
test
pop
jg
cmc
bound
loopne
add
add
add
adcb
mov
adc
jbe
adc
into
in
cwtl
orb
mov
jno
push
jns
shlb
movsb
lods
pop
xchg
cli
pop
insb
or
push
mov
mov
mov
inc
rclb
dec
pop
dec
push
xor
das
sbb
dec
clc
mov
sub
test
add
and
or
out
jae
test
add
add
adc
mov
std
jmp
jo
testl
and
loop
or
ret
adc
lock
sub
jne
call
inc
imul
cmp
ljmp
movsb
inc
loope
push
xchg
mov
push
stos
jne
das
sbbl
xchg
and
or
push
js
mov
mov
push
jb
leave
shrb
add
dec
aam
in
sbb
pop
xor
daa
sub
push
adc
sbb
dec
add
jp
adc
push
scas
mov
fbld
mov
lahf
push
xchg
popf
jmp
add
js
cmc
hlt
lock
and
out
push
dec
push
in
stc
daa
lock
inc
popf
adc
add
push
dec
js
mov
rdtsc
mov
jp
stos
sbbb
xor
mov
rcl
shll
or
rclb
jbe
inc
sub
mov
movsb
jge
mov
andb
in
and
sub
xor
adcb
stc
scas
add
lods
fimuls
or
xor
fidivrl
inc
xchg
lcall
xchg
mov
data16
adc
jbe
mov
xchg
inc
xchg
loopne
lods
cmp
jl
adc
pop
add
ret
and
cmpsb
mov
loop
ret
sbb
or
add
inc
shl
loop
dec
adcb
inc
aad
dec
rcr
sub
or
xchg
push
mov
push
cmc
gs
sbb
mov
mov
std
ficompl
mov
pop
es
cmp
lret
jae
dec
lds
cmc
push
inc
sub
or
inc
addb
sub
pop
aad
pop
ret
xchg
sbb
xchg
xchg
add
aad
je
and
clc
ds
mov
icebp
xchg
insl
inc
int
in
movsb
or
pop
pop
call
inc
push
sbb
add
mov
pop
sbb
or
mov
rclb
pop
ret
or
ret
rorb
loopne
adc
loope
lds
mov
fdivrl
sbb
cli
add
sub
cmp
mov
xchg
and
into
stos
sbb
inc
out
and
adc
adc
jge
roll
xchg
push
sub
or
jnp
adc
inc
inc
fmull
mov
movsl
fs
push
loopne
dec
and
add
mov
cmpsb
add
shlb
mov
das
test
repz
jo
adc
jb
pop
in
and
cmp
xor
shlb
jnp
aam
in
test
and
inc
maskmovq
testl
loopne
lahf
or
and
clc
inc
dec
test
pop
les
enter
call
dec
adcb
inc
loop
lods
sub
gs
xor
add
xor
jne
jmp
dec
and
sbb
testb
lret
popf
push
jmp
out
lock
jne
jge
in
dec
repnz
add
inc
clc
movsb
jbe
insl
je
and
and
inc
xlat
cmp
mov
and
dec
adc
and
std
mov
jge
mov
mov
xchg
out
insb
push
sbb
lahf
insb
sbb
sub
out
jp
mov
sbb
out
xchg
jo
xor
call
pop
or
mov
out
adc
add
add
call
out
dec
or
sbb
mov
sti
mov
aad
dec
pop
jbe
popf
mov
or
adc
cmp
mov
divb
fs
push
orb
adc
mov
cmp
frstor
adcb
pop
in
and
jmp
jne
pop
sub
rolb
push
mov
sbb
inc
cmp
in
jb
mov
insb
pop
push
mov
xchg
ss
cmp
test
stos
adc
fwait
add
xor
test
jb
push
jae
cmp
or
pusha
add
push
inc
call
lahf
adc
xlat
adc
add
lahf
rorl
call
mov
inc
or
pusha
enter
pop
pop
pop
shrl
repz
adc
or
in
adc
int3
mov
fcoml
xlat
jecxz
in
sub
jecxz
pop
stc
cs
or
cwtl
mov
xlat
mov
imul
mov
inc
cmp
inc
in
mov
out
xchg
mov
or
sti
sub
int
in
push
aam
sub
scas
scas
aam
pop
pop
sbb
lods
mov
inc
pop
push
js
scas
add
adcb
mov
mov
inc
xchg
mov
pop
stos
jb
imul
adc
pop
inc
push
iret
xchg
jmp
pusha
xchg
mov
dec
inc
decb
insb
clc
mov
fs
sbb
in
pusha
addb
stos
cmp
mov
ret
and
mov
mov
int3
cmc
or
in
aam
call
frstor
jno
test
inc
push
lds
dec
dec
fsubrl
sbb
mov
out
fiaddl
add
xchg
add
pushf
dec
and
xlat
in
jp
ss
mov
xchg
sbb
es
xchg
or
js
xor
adcb
leave
cld
pusha
pop
adc
out
push
mov
add
jnp
rcl
dec
jbe
add
sbb
lret
and
shlb
xchg
pusha
lret
sahf
jo
mov
addb
movsl
inc
dec
mov
int3
mov
lea
lret
popf
lds
lock
push
inc
ret
pop
fcoml
xchg
int3
nop
lds
lock
add
add
mov
adc
sub
lret
dec
test
adc
cs
xor
push
pop
or
movsb
or
push
adc
sub
mov
add
data16
ret
in
repz
push
mov
cmp
mov
dec
bound
insl
sbb
mov
popf
icebp
push
mov
stc
pop
int
mov
rcrb
subl
sbb
fisubl
sub
mov
xchg
ficoml
in
lock
mov
sub
mov
leave
cmp
ret
fisttps
out
fs
fiaddl
and
rcr
mov
xlat
xchg
rol
bound
in
inc
inc
mov
and
out
xchg
or
push
fisubrs
js
les
add
sub
jnp
jne
outsb
les
icebp
lcall
jae
xor
outsb
scas
sbb
lods
pop
mov
dec
push
push
adc
cld
cmp
bnd
adcb
push
jne
mov
sub
mov
frstor
jne
shll
or
mov
jb
or
xor
and
std
jecxz
adc
dec
fs
and
mov
add
add
mov
pop
adc
insl
repnz
lds
cmp
jo
pusha
adc
pop
xor
fidivs
xor
dec
test
test
addb
xor
push
mov
pusha
adc
inc
inc
xor
sarb
add
ss
add
pusha
dec
jle
dec
mov
dec
aad
add
lock
inc
or
loopne
in
test
cwtl
adc
jl
clc
ja
les
mov
movsb
mov
add
add
push
or
add
inc
add
andb
insl
cmp
push
nop
int
mov
mov
and
adc
mov
add
ds
dec
dec
sub
adc
xor
nop
in
xor
cmp
cmpb
pop
test
add
xor
xorb
js
and
mov
loop
imul
dec
adc
adc
shlb
fucomip
pop
testl
xchg
xchg
mov
jae
ret
loopne
ds
jno
test
sub
aaa
jns
test
fs
inc
xor
add
push
sbb
mov
or
sbb
and
jl
push
loope
cmp
sbb
daa
les
rcll
sbb
pop
or
mov
mov
xor
and
sub
jbe
mov
add
sub
fdivs
data16
add
stos
mov
in
inc
sbb
movsl
jb
dec
xor
jecxz
cmp
sbb
jp
or
push
pop
rorb
cmpsl
lock
test
out
fisttpl
dec
add
roll
int
xor
sub
repnz
or
les
and
imul
dec
cmp
addr16
dec
dec
sub
and
push
xchg
jnp
inc
iret
add
fidivs
popa
pusha
bound
sub
jle
pop
pop
lds
jle
and
xchg
call
xchg
mov
cmp
adc
in
mov
ret
imulb
sbbl
sub
xchg
cmp
and
pop
mov
movsb
jle
roll
rorb
push
and
lea
and
stos
dec
push
mov
rcrb
xor
fwait
add
ret
add
mov
pop
fistpl
push
dec
mov
jge
cld
xchg
ljmp
or
cmp
sar
mov
shll
jmp
push
dec
xchg
dec
inc
loop
mov
adc
fcom
loopne
mov
in
mov
add
xor
xor
addr16
sub
stos
cmp
push
sbb
dec
insb
scas
xor
mov
stos
xchg
jae
in
add
es
insb
stos
adc
push
xchg
xor
xchg
mov
and
or
jl
dec
pop
lret
loopne
lcall
or
repnz
fcoml
and
popa
test
pop
xlat
pop
and
inc
xor
es
mov
test
imul
adc
lcall
pop
mov
or
out
sbb
inc
push
adc
rcrl
nop
cwtl
pop
sbb
dec
popa
push
cmp
xchg
lods
pop
jo
js
adc
push
mov
cltd
jge
mov
sahf
bound
ljmp
sub
lcall
and
mov
cmp
jecxz
ret
pop
mov
pop
xlat
add
mov
adcl
inc
cmp
das
cwtl
xor
jg
lcall
push
add
xor
or
mov
inc
xchg
ljmp
and
rcrl
sqrtps
popa
dec
add
xor
sbb
add
mov
or
add
push
push
xor
lods
mov
and
test
or
insl
xor
dec
fsubr
mov
push
jno
xlat
out
xor
shlb
mov
and
ret
adc
clc
fcomp
mov
cwtl
push
inc
sub
inc
cmc
jmp
sets
pop
dec
cbtw
mov
dec
inc
enter
mov
and
push
mov
inc
out
jmp
dec
jecxz
fistps
sbbb
mov
xor
sub
mov
aam
or
dec
int
push
xor
clc
stos
or
xchg
add
fists
jo
ds
insb
mov
pop
jmp
mov
sbb
and
and
xchg
aaa
mov
jbe
inc
xchg
mov
lcall
push
out
mov
adc
or
and
cmp
scas
xor
mov
dec
mov
xchg
and
aam
test
into
fs
mov
shll
adc
or
push
push
addr16
and
subb
sub
addr16
sti
ljmp
repz
add
mov
sub
jo
call
mov
dec
out
sbb
loop
sbb
mov
xor
lea
or
xor
inc
xchg
mov
add
dec
dec
mov
cmp
ja
and
sbb
and
add
push
out
jmp
out
sbb
sub
nop
cmp
pop
cwtl
cmp
jnp
xchg
inc
mov
mov
pop
mov
cmp
mov
pop
add
add
or
mov
dec
mov
test
sbb
lds
int3
add
mov
add
sbb
mov
and
adc
pop
jne
dec
in
pop
movsl
icebp
insl
xor
xchg
xor
or
xor
cltd
jno,pn
push
insb
sub
xlat
test
outsb
mov
dec
mov
jge
shll
pop
mov
adc
pusha
pop
stc
cwtl
adc
clc
and
xchg
adc
sbb
cmpsl
sub
jp
hlt
loopne
adc
adc
pop
loopne
fwait
mov
and
inc
adc
icebp
sbb
sbb
insl
popa
add
mov
std
ficompl
loope
rolb
popa
dec
inc
inc
inc
push
test
push
mov
push
pop
aaa
fmull
sbb
jp
xor
inc
negb
out
dec
jb
sub
inc
push
jbe
test
arpl
add
push
mov
add
call
sub
mov
test
out
jge
or
scas
mov
sbb
aam
mov
or
push
fdivl
sbb
adc
sbb
cmpsb
sbb
xchg
loop
pusha
ret
in
or
adc
outsl
xor
adc
mov
xor
mov
and
pavgw
lods
aam
shlb
gs
cmp
and
or
push
sub
mov
xor
outsb
inc
movsb
adc
add
adc
dec
aaa
mov
mov
pusha
pushf
inc
shrb
stos
jb,pt
jl
fadds
aas
call
inc
jle
add
adc
loope
in
pop
out
dec
xchg
in
xchg
xchg
and
in
cs
mov
mov
push
mov
mov
sbb
test
pop
xor
jne
dec
in
testl
xchg
sbb
mov
jp
popf
push
add
mov
repnz
call
outsl
dec
lock
sbb
loop
jg
lods
adc
ja
push
sbb
stc
sub
xor
pop
int3
add
outsb
and
pop
jmp
loop
pop
xor
gs
cmp
adc
adc
sbbb
add
push
adc
add
sub
ss
sub
mov
out
xchg
ljmp
decl
adc
pop
insb
pop
pop
insl
and
add
adc
sbb
fbld
lcall
sbb
push
popf
ja
and
mov
mov
jo
push
int
mov
pop
popf
mov
fstps
inc
push
loop
xchg
adc
push
lahf
jnp
add
or
fs
adc
dec
or
add
js
jmp
insl
or
push
fistpl
mov
xchg
add
outsl
test
mov
xorb
and
mov
ds
xchg
push
fdivrl
mov
add
mov
fidivrs
lea
testb
or
jl
xor
dec
mov
ret
test
negl
inc
adc
dec
insb
inc
or
or
rdpmc
pop
cmp
mov
mov
lods
adc
fidivrl
les
mov
mov
nop
inc
das
cwtl
stc
shlb
sti
push
insl
clc
mov
test
push
or
aaa
lahf
sbb
pop
js
xlat
cltd
xor
xchg
mov
inc
sarl
add
push
adc
jb
scas
lret
mov
adc
pop
cmpsl
fimuls
pop
xchg
sub
mov
aaa
sub
push
add
adc
movl
aam
mov
adc
adc
or
dec
add
add
mov
and
cmp
push
jecxz
pop
subb
mov
arpl
loopne
dec
or
inc
adc
sbb
pop
adc
mov
sbb
inc
mov
movsb
mov
fwait
pop
xchg
add
dec
nop
nop
lds
adc
rclb
adc
ljmp
adc
dec
mov
dec
adc
xchg
push
mov
inc
faddl
scas
xchg
nop
bound
jg
pop
dec
add
add
xchg
icebp
xchg
mov
sbb
in
mov
sub
add
les
inc
inc
sbb
or
pop
jp
xlat
hlt
adc
data16
mov
sahf
aam
aam
mov
add
adc
adc
enter
les
pop
popf
stos
rolb
hlt
add
jo
jmp
fs
mov
and
cmp
leave
mov
push
mov
push
inc
mov
and
cmovp
cmp
dec
mov
sbb
dec
xchg
push
outsl
dec
push
or
or
pop
add
or
les
mov
push
adc
loopne
fadd
push
out
lods
xorb
call
dec
mov
xor
or
mov
out
add
mov
mov
jbe
add
inc
inc
add
fsts
inc
pop
sub
jbe
mov
mov
jg
fstps
sub
jmp
mov
sbb
mov
sbb
jmp
jb
add
scas
sbb
insb
mov
add
xchg
sbb
out
sbb
sbb
cmp
xchg
jle
push
pushf
loop
jae
lahf
call
mov
sbb
aaa
or
addr16
mov
pop
mov
in
add
add
popf
mov
aam
inc
rcr
adc
dec
mov
pop
xchg
pop
xchg
lds
sub
mov
inc
popw
xchg
xorl
insb
and
add
mov
adc
insl
push
cmp
push
inc
js
bound
add
pop
adc
aaa
fwait
jmp
jno
data16
frstor
xchg
pop
out
or
cmp
or
insb
cmp
loope
mov
sbb
in
dec
mov
dec
mov
fdivrs
inc
xchg
inc
adc
mov
mov
sub
shrl
fs
mov
inc
xor
cmp
sub
xor
insl
inc
pop
jae
leave
repnz
pop
mov
or
ficoml
andb
push
cltd
xor
dec
cmp
stos
push
cld
roll
rcr
adc
ret
mov
loope
adc
inc
notl
xchg
push
xor
adc
dec
xchg
dec
jb
add
lret
outsl
xor
dec
pop
dec
xlat
fstpl
and
add
outsb
pop
sub
and
sub
or
sub
rorl
xchg
fimull
cs
fldt
mov
mov
add
fmuls
cmp
inc
mov
and
mov
xor
sbb
xchg
sbb
or
imulb
xor
add
pop
or
ljmp
jne
aad
scas
xor
pop
jp
stos
loop
mov
or
test
sbb
out
mov
js
adc
dec
jno
in
mov
rorb
iret
call
lock
ljmp
loope
mov
and
pop
hlt
jo
fwait
sub
insl
push
sub
xchg
rol
push
xchg
push
mov
insb
inc
shl
out
xchg
imul
xchg
push
gs
push
in
clc
add
out
mov
aas
pop
in
ss
pop
xchg
insl
sbb
test
imulb
push
push
dec
inc
adc
mov
sub
adc
adc
push
sbb
popa
sbb
arpl
push
dec
and
loope
and
cmpsl
sbb
xchg
push
mov
icebp
hlt
push
push
dec
cmp
cmp
mul
scas
mov
add
or
icebp
popf
inc
jns
mov
sbb
jns
push
or
cwtl
fwait
cmp
pusha
adc
mov
imul
sbb
cmp
cmp
sarl
jg
adc
insb
pop
or
push
inc
sti
cmp
mov
ret
adc
push
in
add
cmp
fucomi
rorl
in
mov
inc
pop
insl
and
sub
adc
or
pop
mov
or
pop
or
mov
sbb
push
inc
loope
in
bound
push
adc
aaa
pusha
cmp
popf
in
mov
shrl
push
data16
inc
loopne
scas
jmp
sbb
sub
or
cmp
lods
sub
pop
inc
or
js
mov
repz
dec
divl
mov
lods
adc
data16
mov
repz
add
fdivs
xor
js
mov
addr16
fsubrl
jbe
push
dec
dec
push
dec
add
mov
xlat
adc
icebp
insb
gs
or
in
imul
jge
fwait
daa
adc
xlat
jo
cwtl
push
shlb
mov
push
xchg
cmp
orb
nop
in
and
xlat
mov
and
jge
jg
xchg
popa
enter
das
mov
pop
in
test
add
xor
push
cmp
pop
add
push
xchg
data16
xchg
sahf
shll
adc
divl
in
dec
arpl
jp
mov
adc
pop
sets
xorl
xor
pop
ficoms
dec
in
mov
and
out
insb
les
pop
sti
orb
subl
loop
pushf
mov
cli
aaa
push
mov
xchg
ret
fdivs
outsb
dec
dec
popa
inc
mov
subl
xor
sbb
mov
shlb
fistl
inc
cmp
sub
jnp
inc
pusha
inc
add
sbbb
pop
popa
mov
test
pop
or
sbb
sbbb
xchg
inc
imul
adc
adc
xchg
mov
cmpsl
loopne
xchg
in
movsl
inc
cmp
mov
in
pop
add
lret
bound
cltd
cmp
jp
jbe
rcll
xchg
pop
repnz
adc
xchg
scas
xchg
jmp
mov
mov
push
jb
scas
xor
fimuls
add
or
mov
jg
lahf
outsl
dec
lods
sub
fisubs
sbb
mov
ret
push
push
aam
cmp
imul
imul
fstps
mov
loope
xchg
lock
mov
inc
cmp
fdivrs
push
fdivs
into
data16
push
xlat
xor
dec
scas
lea
pop
in
call
or
xor
mov
repnz
and
push
je
xchg
out
adc
mov
jbe
push
ret
daa
dec
jne
aaa
fldenv
pusha
fwait
sbb
lods
inc
dec
and
dec
add
mov
sbb
push
add
mov
jp
mov
imul
xor
and
xchg
jnp
xor
push
inc
test
scas
imul
sub
les
xor
je
rorl
sbb
fsub
sbb
push
dec
add
mov
inc
lods
cmc
push
push
mov
add
adc
dec
push
daa
dec
dec
push
outsb
nop
mov
into
xchg
test
dec
inc
jno
mov
inc
cmp
loop
push
shlb
sbb
cmp
inc
cmp
call
push
or
push
out
addr16
cmp
pusha
inc
inc
inc
add
dec
nop
popa
pop
fildll
xchg
push
sub
sub
pop
pop
fisttps
push
push
jge
and
mov
sbb
clc
xchg
or
call
mov
bound
fnsave
mov
and
shrl
add
fcmovnu
divb
sbb
ret
lock
pop
addr16
fcmovbe
pop
sbb
push
loope
jbe
lods
adcl
add
outsb
out
rol
xor
xchg
sahf
inc
or
popa
jmp
neg
xchg
inc
or
cmp
push
std
xchg
xlat
insb
pop
test
adc
les
repz
cwtl
cmp
mov
cmp
sub
adc
mov
fidivl
pop
cmp
dec
jno
xchg
in
idivb
adc
aas
and
insb
test
inc
fistl
adc
ret
shrl
sbb
ret
fistl
dec
shrb
addb
xchg
mov
or
pop
pusha
mov
cmp
adc
inc
mov
addb
into
xor
popf
pop
lock
test
jmp
daa
xchg
pop
xchg
test
scas
inc
jge
scas
sbb
xchg
sbb
add
test
stc
jb
movl
jnp
les
dec
loop
outsb
add
or
pop
loope
je
adc
jne
bound
adc
fs
cmp
into
xor
sbb
sbb
stos
ret
sbb
cmp
mov
sbb
mov
add
adc
loopne
movsb
mov
adc
inc
mov
mov
mov
fists
or
push
pop
cld
mov
in
dec
pop
int
inc
mov
subb
xchg
adc
popf
cld
xchg
or
lock
pop
xchg
inc
shll
mov
xchg
stos
pop
pop
icebp
push
jnp
or
xchg
jle
les
cs
aaa
xchg
scas
bound
lds
mov
cmpsb
rcrb
mov
sbb
adc
fstpt
sbb
pop
int3
sbb
and
inc
mov
lcall
mov
push
add
lock
test
icebp
dec
inc
xchg
jno
and
js
or
mov
pop
sbb
je
popf
sub
lret
mov
cmc
inc
mov
fisubl
push
pusha
and
sbb
js
shlb
or
mov
pop
inc
ret
bound
ret
and
imul
daa
insb
outsl
bound
push
jl
pop
je
push
cmpsl
mov
or
push
xorl
sbb
cmp
lods
incl
xchg
sub
inc
subl
subb
mov
add
add
add
mov
les
lret
xchg
leave
xor
stos
xor
daa
mov
mov
mov
cwtl
pusha
imul
push
fcomi
mov
jnp
shrb
clc
inc
adc
adc
std
filds
jbe
jbe
ret
stc
lret
mov
adc
push
lds
ljmp
or
into
cmpb
fwait
addb
and
pop
rorb
sub
shl
cmpb
insb
repnz
inc
push
movsb
movb
inc
mov
fwait
int3
adc
xchg
rcrb
adc
xlat
jmp
ret
pop
mov
fistps
sub
adc
mov
xor
or
adc
insb
fcoms
sbb
lret
aam
dec
lods
mov
jo
inc
and
jb
add
adc
nop
inc
pop
and
out
push
aad
lock
dec
push
add
aad
and
add
cmp
loope
mov
and
sti
clc
inc
and
ljmp
movsl
sub
add
adc
in
add
int
or
fdivrp
mov
and
push
add
push
gs
pop
dec
ficompl
adc
sub
in
cmp
add
sbb
inc
cmpsb
pushf
add
subl
mov
or
imul
xchg
adc
cli
insb
arpl
sbb
mov
adc
insl
fcomps
imul
dec
xor
inc
jp
bound
push
aas
add
sbb
xor
or
call
loopne
pop
arpl
fstpl
push
sar
in
add
xchg
push
popf
push
jmp
lds
mov
mov
jl
cmp
or
xchg
xor
pop
push
pop
mov
or
dec
and
dec
sbb
adc
cli
cwtl
xor
sbb
sarl
inc
xchg
cmp
scas
cmp
push
sbb
je
mov
and
les
mov
mov
xor
inc
cmc
hlt
dec
cld
mov
pop
and
jo
cmp
fchs
ss
data16
sbb
xchg
xchg
adc
add
test
outsb
inc
mov
in
mov
xchg
inc
ret
cwtl
mov
add
push
xorb
popf
mov
test
push
and
mov
repnz
or
push
out
movsb
out
mov
sub
aas
cmp
sarl
sub
popa
pop
std
add
mov
aas
pop
test
lods
in
jg
or
lock
ljmp
lcall
imul
adc
ja
arpl
rol
xchg
adc
pusha
jno
popf
mov
adc
dec
push
mov
ret
lods
nop
mov
adc
test
mov
frstor
mov
js
and
push
and
iret
sbbb
ds
pop
push
push
mov
push
mov
es
es
negb
xor
movb
sarl
mov
xor
daa
mov
out
fisubrs
mov
hlt
xchg
aas
jae
xlat
dec
aam
out
sbb
lock
xorb
adc
or
or
pop
adc
adc
xchg
arpl
and
std
loopne
push
int
xor
insl
testb
pop
sbb
mov
pop
mov
ficomps
popa
push
mov
xor
add
mov
push
pop
test
arpl
sbb
push
insb
aam
jge
adc
test
mov
orb
ret
test
repz
xor
push
arpl
scas
mov
adc
lock
or
add
xchg
cmc
add
push
ja
jl
shll
outsl
sub
fcmovne
or
sbb
fidivrs
add
cmp
inc
lock
out
adcl
mov
or
add
daa
dec
dec
push
sbbb
sub
repz
mov
lock
dec
lock
adc
test
inc
jmp
das
xchg
pop
cmp
xor
adc
int
mov
sarl
lods
xchg
adc
add
int3
rdtsc
clc
jbe
or
insb
adc
fldt
shlb
adc
xor
and
das
or
or
inc
fmuls
sbb
mov
jae
pusha
dec
mov
sub
mov
dec
mov
pop
adc
mov
or
insb
aaa
dec
in
in
sbb
int3
mov
andb
sub
lcall
and
mov
mov
inc
xor
and
sbb
push
popa
rcll
or
adc
mov
xor
aas
push
sti
call
insl
sbb
mov
or
fndisi(8087
daa
ja
pusha
sbb
das
pop
xchg
cmpsl
push
inc
lcall
data16
es
add
adcb
lcall
mov
shlb
shll
ret
fsubrl
jo
mov
divl
and
imul
sbb
cmp
adc
add
or
insb
in
insl
pusha
or
push
add
out
mov
sbb
popa
in
mov
add
sbb
int
mov
lock
mov
mov
adc
sbb
lcall
jb
imul
mov
pop
cs
and
add
mov
dec
cmp
adc
mov
addl
icebp
rclb
cli
mov
fldcw
aam
mov
popf
xor
mov
push
loopne
fistl
jg
iret
mov
push
jae
aaa
shlb
in
lods
inc
lock
in
inc
cli
or
and
xor
and
shll
xor
dec
das
in
pop
dec
add
add
pop
mov
sub
rolb
test
mov
out
add
lcall
pop
mov
mov
push
and
pop
inc
stos
xor
inc
cmpl
into
inc
push
mov
pop
jb
and
aaa
xchg
out
add
sahf
stos
addb
xchg
add
orl
mov
jg
fildll
pop
xor
add
adc
lock
or
mov
xchg
sbb
dec
dec
movsb
mov
dec
and
les
inc
js
mov
divb
adc
nop
insl
xor
test
test
inc
test
and
fisubl
mov
inc
inc
enter
lahf
adc
xor
add
shrl
mov
or
mov
rolb
sbb
aad
dec
shl
push
or
fwait
push
or
mov
mov
xchg
mov
push
xor
shlb
pop
sbb
pop
inc
inc
jns
xchg
xchg
push
lods
pop
ret
and
out
call
pushf
fcoms
mov
sub
xchg
sbb
and
sub
fidivrs
mov
inc
cmpb
pop
pop
jle
mov
lock
inc
push
mov
out
sbb
mov
clc
xchg
inc
and
mov
inc
jo
xchg
fs
mov
test
inc
das
mov
lds
push
sbb
sbb
pop
sub
sbb
in
xor
andb
mov
and
cld
inc
adc
imul
push
sti
pushf
jnp
adc
cli
stc
clc
mov
lret
add
adc
xor
dec
add
lock
xchg
push
sub
xchg
inc
out
inc
jnp
cs
or
inc
movsl
loope
out
sub
pop
mov
mov
out
xor
or
mov
stos
add
pop
pop
call
push
cmpsl
dec
data16
sbb
fs
test
sub
mov
push
xchg
mov
mov
lea
mov
push
lret
mov
mov
dec
pop
out
fs
adc
or
push
sub
cld
cs
mov
das
cwtl
pop
cmc
mov
hlt
mov
adc
je
add
call
adc
sbb
adc
adc
jnp
add
jecxz
xchg
cltd
and
adc
jne
aaa
push
pop
ja
sub
test
and
add
and
push
pop
jns
dec
cwtl
lock
adc
dec
jbe
je
add
imul
cmp
pop
out
pop
fwait
add
mov
adc
xchg
xchg
inc
mov
push
xchg
xor
in
xchg
pop
adc
in
and
cmp
dec
ss
dec
dec
jl
addr16
jl
jecxz
add
add
test
xchg
xchg
jb
insb
lea
orl
dec
loope
repz
jl
mov
jge
mov
and
mov
loopne
mov
sub
sub
or
xchg
push
mov
cmc
insb
cmp
or
lcall
sbb
sub
mov
ljmp
dec
push
add
lcall
push
push
pushf
daa
test
mov
popl
mov
popf
out
cmpsl
adcb
stc
inc
insb
test
arpl
cmpl
loopne
push
push
insb
push
fisubrl
inc
push
pop
pusha
cmp
loopne
cmpsl
dec
mov
mov
call
cmc
add
mov
pop
mov
mov
inc
dec
cwtl
lcall
push
clc
nop
or
add
fcoml
push
add
push
push
rcr
pop
stos
add
add
in
sbb
shrl
ret
fstpl
lcall
push
sbb
ljmp
add
push
int3
out
test
xor
push
or
mov
in
lcall
inc
pop
or
cld
lock
dec
mov
fisubrl
or
inc
pop
ss
jge
jp
inc
call
jo
lock
or
inc
out
pop
test
inc
insl
xchg
cld
add
sub
adc
daa
je
inc
stos
xchg
inc
cmp
inc
das
cmp
xchg
add
loope
ret
imul
addb
sub
add
mov
imul
movsl
sub
mov
pop
pop
pushf
sub
add
and
pop
fists
fmuls
jns
push
adc
mov
insb
xor
mov
add
adc
arpl
shrb
outsb
add
pop
mov
push
push
mov
xchg
sub
add
pop
adc
insl
jge
popa
loopne
clc
fistps
je
pusha
mov
add
push
or
add
mov
and
cmp
mov
sbb
or
call
rcll
inc
inc
cmp
les
int
dec
and
cmp
xchg
sarb
xchg
xor
scas
fdiv
aam
test
or
addr16
mov
add
pop
and
or
add
adc
es
jmp
mov
pop
mov
inc
mov
add
or
push
and
iret
pop
movsb
sbb
shrb
pop
cmpb
ds
add
mov
pop
and
repz
sub
jb
hlt
add
mov
int3
adc
pop
loope
inc
or
sub
inc
es
mov
xor
dec
insb
shlb
add
out
sbb
test
xchg
push
inc
iret
ds
loop
push
rol
xor
test
push
push
mov
adc
out
divl
dec
adc
daa
add
adc
loop
int3
sbb
adc
adc
mov
xchg
sub
add
pop
das
and
inc
mov
mov
cld
add
adc
pop
cwtl
add
clc
imull
div
cld
pushf
xor
es
shrl
xlat
mov
andb
arpl
into
jmp
inc
cmp
mov
es
add
xor
fnstenv
mov
sub
daa
repz
add
bt
cld
fdiv
push
orl
imul
sbb
fmulp
and
and
mov
inc
dec
aad
sub
inc
js
int
and
adc
adc
sarl
je
insl
pmaxub
lods
jmp
stos
pusha
jbe
test
test
adc
lods
arpl
cmp
es
inc
mov
clc
and
inc
shl
dec
and
out
dec
push
adc
or
rcrb
mov
or
mov
mov
loope
js
cmpsb
dec
sbb
and
jo
jae
add
xchg
es
cmp
cwtl
hlt
mov
push
xchg
dec
jo
xchg
push
std
pop
loopne
test
jb
inc
xchg
inc
in
xchg
insb
hlt
push
ljmp
inc
jo
mov
fwait
mov
dec
enter
add
xchg
adc
test
test
out
and
or
outsl
insb
fldt
sub
add
ret
je
dec
dec
rorb
ret
add
adc
push
add
mov
pop
test
sbb
pusha
adc
insb
test
les
lock
push
lock
sbb
int
mov
pop
mov
jge
mov
jae
movsb
or
mov
add
out
mov
out
adc
pop
jns
adc
xor
xor
inc
inc
xor
and
ljmp
add
enter
adc
sub
sub
mov
aam
lahf
pushf
adc
jbe
sub
xchg
add
sarb
flds
push
stos
xor
sbb
dec
ja
cmp
adc
shll
in
cs
pop
js
fsts
pusha
inc
cmp
push
shll
xchg
add
add
xchg
push
add
sub
divb
xchg
xchg
mov
mov
stos
dec
push
pop
or
cld
jne
test
or
fistps
and
mov
fmull
adc
push
add
jp
int3
xchg
dec
cmp
repnz
mov
dec
mov
add
test
add
hlt
sub
test
inc
fwait
push
xchg
hlt
jle
jp
jb
add
pop
mov
scas
gs
xor
adc
or
mov
push
add
xchg
sbb
rolb
sbb
adc
dec
jge
mov
inc
add
pop
push
test
push
in
or
inc
jns
sbb
sbb
jge
jne
inc
mov
es
sbb
out
popf
daa
test
xorb
bswap
or
lar
inc
jge
popf
jb
mov
fidivrs
mov
fprem
cmp
aam
mov
test
or
and
outsb
push
sub
cmpsl
neg
scas
dec
jb
add
lock
loopne
mov
ficompl
stc
lods
dec
push
adc
adcb
add
daa
movq
dec
mov
inc
adc
jns
loopne
cmpb
mov
and
mov
pop
push
int
xorl
fildl
stos
sbb
and
lods
out
mov
stos
and
or
xlat
fcoml
add
cs
in
and
loopne
xchg
test
ret
addb
sub
or
mov
mov
dec
sbb
push
ja
xor
inc
xor
cmp
sub
lods
roll
movsb
orb
mov
xor
add
maxps
fisubrs
out
push
out
and
dec
aaa
aaa
dec
pushf
lock
or
loop
mov
pop
or
jb
pop
rorl
sahf
addr16
adc
push
roll
pop
ss
loop
push
movsb
imull
sub
add
sbb
hlt
lock
stos
cwtl
fists
ljmp
iret
test
loope
inc
dec
and
cmpsb
inc
dec
mov
add
sub
popa
inc
mov
fistpl
aam
in
dec
mov
loop
mov
mov
mov
add
movsb
xchg
and
scas
mov
cli
add
cmp
dec
aad
adc
pop
jge
cmp
or
mov
js
xchg
sub
adc
pop
mov
or
sahf
mov
dec
xchg
adc
leave
add
xchg
xchg
imul
cmp
push
push
push
in
repnz
jge
adc
jl
mov
roll
cmpsl
out
stc
pop
test
pop
jg
jnp
cmpsl
ret
jb
pop
mov
inc
in
or
adc
orb
lods
add
lret
fldenv
cwtl
in
and
test
fwait
fcomps
inc
dec
add
push
add
add
sbb
hlt
sarl
shrl
out
add
es
loopne
push
xor
les
push
data16
push
inc
cmp
test
jno
inc
fimuls
mov
pop
xchg
into
mov
jb
insb
pop
jo
daa
adc
je
pusha
push
adc
cmpl
scas
cmc
test
mov
push
push
pop
mov
cmp
xorl
add
out
push
cmp
ret
subl
jp
scas
add
xchg
or
sbb
adc
sbb
fistpll
cmp
mov
jge
inc
hlt
dec
or
dec
out
mov
xchg
push
xchg
cwtl
mov
int
mov
pop
loopne
or
sub
xchg
add
clc
jne
dec
aaa
mov
out
into
dec
out
insb
push
cmp
loope
outsb
pop
and
adc
clc
std
inc
pop
fisttpl
ljmp
xor
sbb
pusha
jo
mov
push
loopne
or
push
test
push
xchg
test
jmp
inc
cmp
cmp
jae
or
lret
inc
add
and
aad
sub
mov
sarl
fwait
and
jge
or
ss
dec
gs
clc
xor
lods
and
negl
cmc
repz
loop
and
mul
testl
movsl
call
and
lods
xlat
insb
push
ret
or
fldcw
push
cmp
dec
pop
mov
bound
add
mov
or
inc
cmp
mov
xor
lock
pop
inc
insl
xchg
mov
xchg
xor
js
or
pop
jnp
mov
add
lea
adc
add
add
fwait
xor
xchg
push
rcrb
cmc
clc
pop
push
fprem
negb
jbe
sbb
adc
or
push
pop
int
push
push
or
mov
adc
leave
mov
adc
jg
pop
push
nop
cmp
sub
add
and
inc
inc
das
xor
movsb
mov
iret
lret
sbb
add
inc
int
clc
stos
sar
inc
add
mov
or
testl
loopne
lods
pop
int
andb
mov
push
pop
adc
fs
xchg
inc
ss
sub
add
lds
push
mov
fwait
and
outsb
mov
jmp
jne
shrb
mov
jbe
xchg
cwtl
xchg
out
add
aam
sbb
imul
push
sarl
pop
pop
das
cmc
loope
aam
xor
pop
dec
lock
adcb
cmc
mov
adc
or
pusha
xchg
pop
or
ss
scas
cmovs
lcall
pop
add
insl
fildl
mov
fistps
or
push
jg
cmpl
xor
mov
xchg
mov
aad
test
aad
jno
insl
stos
inc
mov
test
mov
lahf
add
add
arpl
fadd
int
stos
mov
dec
add
push
mov
or
push
mov
nop
cltd
je
fsubrl
or
jecxz
jb
pusha
sbb
dec
stos
jns
loope
inc
inc
leave
add
sbbb
inc
jnp
jne
ljmp
or
sti
daa
mov
add
mov
dec
aad
xchg
xlat
imul
stc
sbb
hlt
imul
fnstsw
cmp
dec
push
fnstcw
fincstp
xor
adc
sbb
stos
dec
add
lods
in
cmpl
cmpsb
jb
mov
cmp
xor
add
dec
movsb
xor
push
sub
jp
andb
and
fildl
sbb
loopne
adc
nop
out
dec
imul
xor
xchg
pop
sbb
adc
mov
add
mov
mov
push
loopne
sar
pop
push
push
push
cmp
pop
daa
icebp
cmp
inc
rclb
popa
add
push
hlt
test
fstpt
pop
fistpl
xor
insl
shll
mov
mov
mov
pop
loopne
test
loop
xchg
inc
sub
push
mov
pusha
fisttps
mov
mov
outsl
es
in
mov
pop
push
lds
add
and
js
xor
mov
sub
add
push
sti
enter
sbb
cmp
in
inc
insb
arpl
mov
popf
inc
and
dec
arpl
pop
adc
test
xor
pop
mov
shlb
loope
push
and
sbb
mov
or
sbb
add
add
int
mov
or
jp
and
rolb
ret
inc
lret
inc
inc
fldt
jb
inc
add
push
xor
xchg
xor
inc
fcom
loope
les
repz
and
xchg
add
cmp
mov
mov
fsub
add
bound
pop
imul
push
inc
popa
pop
shr
pop
and
or
inc
cmp
fistps
pop
add
lcall
dec
dec
lock
popf
mov
loopne
mov
xor
ret
pushf
loopne
jae
sbb
add
lea
mov
nop
pop
lock
orb
inc
test
and
lock
sbb
or
jmp
mov
ljmp
sbb
mov
push
dec
and
pusha
cs
sbb
andl
fisttpll
in
mov
hlt
jne
dec
sbb
mov
test
loopne
out
and
ja
and
out
push
jmp
jo
sbb
inc
jno
mov
dec
cmp
dec
stos
sti
jmp
ss
sbb
shll
pop
add
add
push
sub
and
inc
xor
sub
movl
fisttpl
sbb
aaa
icebp
shll
mov
adc
rclb
lahf
leave
adc
out
mov
cmpsb
sahf
mov
loopne
xor
test
sbb
jne
movsb
movl
rcll
icebp
pop
wbinvd
adc
je
pop
inc
jo
test
adc
xchg
loope
xchg
inc
xchg
jne
lret
lock
xchg
shll
lock
jae
mov
mov
out
pop
scas
not
movsl
fldenv
push
sub
stos
out
adc
lock
sbb
les
ja
inc
jbe
in
xor
inc
and
inc
rorb
mov
adc
xlat
pop
mov
pop
mov
pop
push
in
push
add
adc
pop
add
mov
fwait
jmp
loopne
jg
fwait
adc
sbb
loope
sbb
xor
add
push
ficoml
mov
insb
xchg
insb
in
int3
cs
ficoms
push
sub
sbb
sub
mov
pop
test
int
jecxz
loope
lret
pop
xchg
lret
es
xchg
sbb
ja
mov
popf
pop
iret
sub
mov
sbb
cmp
xor
xchg
jne
mov
mov
xchg
cmpsb
sbb
xor
ss
lea
xchg
leave
xor
push
fyl2x
pop
inc
das
or
or
pop
loope
ret
adc
insl
test
loopne
shlb
rcr
xchg
mov
adc
outsb
adc
push
pop
shl
jno
loopne
xchg
push
sbb
lret
mov
jl
cmp
cmp
xchg
cmp
jnp
mov
push
sbb
inc
xchg
mov
or
adc
imul
int3
jns
lock
dec
fsubs
cmp
add
or
xlat
stc
notl
insl
xor
or
jl
jecxz
mov
or
icebp
add
push
xchg
lcall
mov
or
push
arpl
cmpsl
push
cli
pop
xchg
push
push
mov
inc
ror
xor
loope
mov
rolb
int
adc
pop
mov
loope
push
into
repnz
mov
out
dec
cmp
stos
cmp
jo
les
mov
mov
loopne
inc
shrl
gs
jb
mov
jmp
lock
test
insb
sub
insb
jnp
int
lret
or
pop
add
pop
mov
movsl
pop
and
ret
jle
imul
test
sub
pusha
jae
mov
mov
add
jno
cmpsb
jbe
aas
icebp
jmp
in
sub
mov
pop
fidivl
fsubl
sub
loope
stc
or
inc
shr
loope
cmp
xchg
in
out
iret
and
adc
push
shrb
imull
test
cmp
lods
push
inc
rolb
pop
bnd
aaa
push
and
lret
sbb
and
in
cmp
add
dec
mov
cli
sbb
xor
adc
mov
add
sbb
ljmp
pop
jg
aam
pop
lret
test
in
sub
xchg
jns
xchg
pop
stos
das
scas
fcmovu
pop
push
call
sbb
sbb
sub
or
xor
xor
mov
cltd
ret
inc
movsb
sub
ds
add
push
out
or
jecxz
or
jl
pop
rorb
cmp
pop
adc
fstpt
inc
mov
stos
dec
data16
mov
outsl
jp
icebp
xchg
shlb
lock
sarb
cmp
jne
sub
mov
jnp
push
pop
jl
sbb
add
add
add
adc
sbb
mov
into
stc
pushf
sti
lcall
pop
adc
jno
sbb
sub
mov
mov
jmp
sbb
daa
jne
mov
sbb
les
dec
or
sbb
inc
mov
adc
popa
and
shl
pushf
mov
sbb
iret
mov
ret
and
call
outsb
addr16
mov
and
lock
sbb
push
pop
cmp
sub
adc
xchg
ret
mov
out
leave
dec
js
call
mov
incl
inc
je
jbe
xlat
dec
push
mov
mov
andb
lods
movsb
stc
or
out
loope
mov
mov
aad
aad
cmp
mov
mov
mov
mov
push
cmp
int3
and
mov
xchg
pop
push
inc
imul
dec
rclb
hlt
or
sbb
clc
das
ss
push
push
insl
sbb
mov
xchg
sbb
and
mov
andb
add
inc
jo
jae
roll
jo
mov
jmp
fadds
pop
lahf
cmc
int
push
pop
sub
lcall
cwtl
and
add
in
adc
adc
and
shlb
lret
and
popf
les
sbb
loop
adc
mov
mov
int3
leave
cmc
cltd
or
inc
test
ret
es
in
clc
out
and
xchg
ss
jle
ftst
jbe
pop
inc
mov
mov
rcll
mov
inc
jo
adc
cmpsl
cli
fiaddl
fwait
lock
aas
or
shl
pushf
test
jo
xlat
into
sbb
xor
pop
fwait
cmp
call
jo
xchg
shlb
in
imul
mov
iret
and
xchg
or
mul
into
repz
adc
xchg
mov
test
sahf
pusha
adc
mov
clc
hlt
rolb
lret
sub
das
adc
icebp
ja
inc
dec
mov
rol
add
loopne
nop
cmpsb
xor
mov
sub
rcll
jbe
mov
xchg
sub
pop
sub
lock
rorl
fwait
cmp
add
sub
mov
push
adc
dec
or
rcll
push
dec
sub
sub
rorb
add
jge
add
inc
out
fyl2xp1
sbb
leave
sbb
stos
push
adcl
or
mov
adc
adc
push
mov
ficoms
lock
push
lahf
das
or
sbb
adc
das
and
lds
ljmp
ljmp
call
jo
or
ret
push
mov
in
sub
sub
es
imul
stos
xor
or
jnp
fbstp
push
fwait
mov
or
rcrl
adc
std
popf
jmp
cs
icebp
rcrl
mov
jle
and
nop
sub
pop
movsl
and
shll
cmpsb
outsb
inc
pop
repnz
push
jp
pop
xchg
cmc
adc
mov
or
sbb
sbb
mov
sub
sub
add
inc
pop
dec
pop
sbb
or
sbb
xchg
repz
data16
and
cmp
cmp
push
and
cmp
pop
scas
dec
out
jo
mov
mov
mov
jne
js
mov
xor
or
or
xor
adc
test
adc
push
adc
add
inc
xchg
in
sub
jbe
sub
and
test
dec
cmpsl
inc
dec
add
rcll
add
jge
add
dec
push
inc
cmp
ss
adc
leave
je
xchg
xor
add
push
mov
xor
call
mov
stc
adc
inc
test
aas
aaa
repnz
orb
dec
fiaddl
test
add
in
lock
inc
sbb
in
aad
push
sbbb
jge
pop
pop
fdivs
fisttpll
or
popf
sub
shll
pop
gs
or
jo
adc
outsb
and
in
push
arpl
jp
add
jbe
rcll
lock
inc
addl
mov
add
notl
pop
adc
lcall
mov
mov
bound
or
pop
push
test
rolb
iret
push
add
cwtl
rolb
xchg
mov
xchg
sbb
aad
mov
sub
decb
or
arpl
sti
mov
xchg
sub
xlat
cld
jo
pusha
xchg
fsubs
or
pop
leave
push
aad
rcrl
stc
je
iret
loopne
inc
or
xchg
xchg
lock
jnp
fidivs
orb
and
dec
jle
rorb
or
rcrl
dec
adc
xchg
xor
cwtl
insb
insb
add
ret
jnp
xor
flds
in
lods
ret
jmp
inc
xor
mov
loope
push
std
and
ss
adc
xchg
jo
push
sbb
fsubp
push
xor
xor
clc
adc
push
rcrl
inc
mov
cmp
xor
push
sbb
mov
cltd
hlt
push
lods
inc
sub
mov
rorl
int
adcb
push
cmpsb
jge
stos
or
ss
xchg
dec
pop
aam
in
pop
inc
call
mov
sbbb
lock
jo
sbb
mov
fldenv
fcompl
out
sbb
test
loop
mov
mov
inc
inc
jge
add
repz
inc
push
shl
inc
sub
cs
fdivs
aam
xchg
xor
repnz
xchg
roll
sahf
sbb
push
cmpl
in
jg
test
outsl
sbb
xchg
sbb
jae
jp
fnsave
xchg
mov
jmp
and
pop
hlt
imul
sbb
sub
cmp
mov
pop
into
test
loope
cmp
rol
icebp
loopne
cs
lods
pop
mov
ficompl
ds
pop
lret
xor
dec
and
pop
int3
jmp
sbb
xchg
outsb
ja
or
mov
stc
fabs
xchg
pop
xor
jmp
dec
sbb
out
dec
arpl
das
pop
xor
ljmp
xor
les
aas
or
and
add
adc
mov
pop
stos
in
js
jo
nop
fst
dec
mov
push
icebp
push
aam
push
pop
add
sub
pop
lcall
push
loope
sub
fcoml
stos
jns
mov
add
dec
adc
push
repnz
sub
icebp
jecxz
push
mov
push
push
icebp
lds
push
mov
in
mov
inc
jmp
out
aas
add
push
movsl
lret
xor
js
add
insl
sbb
in
shlb
test
xor
shrb
pop
or
add
movsl
adc
imul
aam
rclb
test
pop
sub
lea
imul
lds
lret
mov
imul
sub
push
mov
mov
xor
fsubp
mov
mov
push
sbb
sti
pop
jp
test
sbb
mov
inc
sarl
mov
mov
lock
push
xchg
mov
ja
test
xor
adc
ja
jne
and
inc
add
inc
adc
mov
out
fwait
es
mov
data16
leave
xchg
and
sbb
sub
pop
jmp
popa
adc
lahf
sbb
and
test
mov
push
loope
sub
mov
pop
shrl
lock
and
add
fnstenv
inc
dec
push
add
pop
push
icebp
ret
cmp
mov
mov
mov
ljmp
shl
cmp
push
push
call
jge
jmp
outsb
push
dec
adc
pop
nop
pop
cwtl
cmp
add
pop
and
add
adc
jle
sub
pusha
add
mov
pop
dec
in
and
inc
xchg
add
ja
outsl
sbb
sbb
sub
sub
pop
clc
dec
mov
xchg
jmp
mov
sbb
sub
stos
adc
and
jne
adc
and
cmp
outsb
js
out
int
out
lea
popa
leave
aad
fisubs
adc
pushf
test
cld
and
cmpsl
fldt
inc
fstl
or
or
inc
fldl
jg
nop
sbb
mov
inc
inc
imul
or
or
sbb
stos
ret
pop
jno
mov
lock
loope
scas
rolb
mov
push
loopne
lods
out
adc
lock
jae
sub
ficoms
pop
or
dec
and
bound
lea
or
push
pop
mov
mov
xor
inc
sbb
movsb
mov
movsb
mov
in
addb
cmpsb
subb
lods
out
jne
inc
xorb
jp
into
push
push
sub
aam
test
sbb
add
mov
loop
dec
jb,pt
incb
icebp
sbb
filds
insb
sbb
das
cmp
lcall
jge
rol
adc
cmp
mov
ret
leave
add
mov
out
push
lds
cmp
sbb
cmp
push
pushf
cltd
inc
test
add
dec
mov
add
fwait
jne
add
xor
and
mov
ja
push
ret
insl
adc
cmp
xor
out
hlt
rcrl
sbb
add
push
inc
test
mov
or
inc
cmp
fisttpll
out
rcl
inc
movsb
dec
rorb
loopne
ffree
adc
jne
and
repz
inc
lret
add
mov
scas
push
or
lds
or
in
or
dec
push
dec
dec
inc
out
test
or
sarb
sbb
jecxz
sub
inc
xchg
mov
adc
xchg
sbbl
xchg
fwait
push
outsb
add
cmpsb
xchg
shlb
out
jb
inc
insb
or
aad
mov
mov
pop
pop
inc
add
cmp
fdivrl
fs
mov
xor
pop
inc
mov
das
cmc
int
inc
rcrl
call
imulb
xor
push
jecxz
mov
mov
test
cmp
add
scas
fistps
stos
cli
mov
lret
js
loop
jle
cmpsl
add
stc
adc
and
pop
lret
cmpb
movsb
sbb
addr16
stos
daa
jb
cltd
outsb
sbb
sub
ljmp
sub
bound
mov
xor
xchg
push
scas
lahf
add
and
sbb
jnp
inc
sub
pop
mov
or
orb
adc
sbb
cmp
loope
icebp
xchg
lods
xor
stos
sbb
xchg
mov
sub
mov
mov
push
aam
sbb
dec
ret
or
jmp
pop
nop
sub
push
mov
xor
pop
and
jnp
je
pop
mov
dec
cmpsb
bound
inc
or
add
loopne
lods
subl
push
cmc
ret
int3
inc
in
push
xchg
sub
inc
xchg
stos
inc
push
mov
xor
cmp
and
adc
dec
mov
mov
dec
inc
push
sbb
je
mov
repz
dec
lds
fbld
mov
rolb
and
bound
daa
inc
adc
popa
lods
lock
cltd
rolb
dec
inc
sbb
dec
add
mov
sbb
dec
push
pop
jb
or
xchg
inc
cltd
vpsubsb
pop
jle
and
or
in
sar
rcl
push
mov
xchg
aas
or
add
mov
sbb
rep
loopne
sbb
or
ds
sbb
fldt
mov
ret
push
xor
add
adc
add
cmp
es
test
mov
inc
mov
lret
mov
test
call
xchg
add
lea
loope
call
or
inc
jb
cltd
pop
pop
ds
pop
pop
inc
pop
orb
out
imul
clc
and
cmovae
push
dec
inc
test
add
sbb
dec
fwait
sub
dec
xchg
sub
mov
into
enter
jne
cmp
cmp
sbb
fnstsw
test
cmpsb
xchg
notl
mov
dec
push
aad
push
adc
jno
pop
xor
inc
mov
cld
cltd
pop
jg
js
pop
insb
test
xor
add
das
dec
push
xchg
mov
in
xor
mov
or
mov
or
xchg
lods
pusha
ret
out
fwait
mov
dec
test
lds
or
jo,pt
adc
movsb
addb
pop
mov
xchg
or
inc
mov
test
and
test
add
mov
lds
jno
add
popa
add
add
adc
push
bound
and
mov
fidivl
addl
add
and
dec
movsl
xor
or
je
xor
pusha
jnp
popf
mov
or
cmp
fistpl
lea
or
popf
dec
not
or
xor
lock
xor
icebp
pushf
xchg
xchg
adc
pop
sti
mov
dec
rorb
xchg
and
and
ss
fsubrs
sub
fdivl
fcomps
pop
add
mov
xchg
jnp
adc
out
movsb
push
or
cmp
or
test
lods
cmp
mov
test
stos
sub
sbb
push
push
mov
xor
pop
or
jp
insb
jnp
inc
and
add
inc
sbb
aam
push
shrb
inc
jns
test
addl
lcall
out
push
lahf
hlt
mov
xchg
ret
pusha
push
cmp
loop
jo
addb
add
xchg
test
adc
rorl
lock
aas
or
sub
mov
inc
sbb
cmp
adc
les
add
outsb
cwtl
inc
enter
sbb
rol
xchg
and
daa
or
sbb
xchg
or
rcrl
shll
stos
cmp
lret
fs
mov
pop
pop
sbb
add
push
xor
mov
push
inc
dec
pop
inc
leave
adc
js
mov
sub
ljmp
inc
inc
add
daa
and
xor
mov
or
pop
xor
pop
mov
mov
inc
cs
ds
sub
in
sbb
cmp
pushl
and
mov
dec
xchg
ss
mov
dec
or
mov
test
rclb
sub
xchg
lahf
sub
pop
mov
test
mov
sub
decl
xor
fistpll
sub
and
mov
sub
jb
pop
inc
and
sbb
in
nop
dec
aad
int
cmp
xor
rcl
add
sbb
cmp
pop
divl
std
pop
adc
and
subl
sub
loopne
repnz
cld
dec
inc
mov
aaa
or
add
sbb
dec
stos
jge
mov
fsubr
cmp
xor
lods
dec
andb
push
mov
or
cmpl
lcall
push
faddl
mov
or
or
mov
adc
jge
cmp
cs
jl
add
outsb
aaa
push
ss
leave
les
jno
lods
mov
fstpt
dec
dec
or
mov
inc
out
mov
outsb
or
lock
cmp
out
xor
fmul
paddsw
add
out
push
push
aaa
add
push
int3
sbb
in
cmp
adcl
pop
mov
rclb
test
sbb
xor
aam
out
lret
add
ds
jne
or
add
sbb
test
cwtl
add
into
into
push
jne
hlt
add
push
inc
sahf
add
cmovo
add
add
shlb
andb
sti
or
ffreep
lcall
or
or
out
xor
f2xm1
fistpll
pop
add
push
and
push
mov
sahf
push
inc
adc
cmpb
lds
jle
mov
mov
nop
inc
xor
mov
sub
lea
stos
pusha
in
movsb
mov
dec
iret
mov
push
pop
adc
pop
add
popf
cmpsl
adc
inc
inc
dec
cmpsb
sbb
mov
push
adc
jle
dec
cmp
pusha
test
orl
das
xor
or
add
pop
sbb
popf
dec
sbb
mov
testb
mov
or
and
jb
movsb
dec
pop
xor
mov
data16
cmpsl
dec
mov
sub
int3
xor
mov
push
mov
sbb
xchg
mov
add
jno
or
sti
lret
fdivrs
jl
lret
inc
push
mov
dec
lds
inc
push
daa
dec
outsl
push
xorb
pushf
imul
mov
jae
dec
cmp
jae
jecxz
sub
ret
sub
sub
mov
xor
push
push
or
arpl
xor
pop
fidivrs
pop
je
cmp
add
cmp
fisubrs
or
andb
and
lcall
xor
iret
ret
push
sub
jp
cmp
dec
push
xchg
mov
aad
cmp
mov
ret
fsubs
xchg
dec
rolb
push
mov
pop
mov
push
outsl
sub
dec
jp
add
mov
sbb
aad
push
cmp
les
or
in
add
out
pop
jo
fcom
dec
shrb
push
push
add
jge
stos
sbb
mov
jno
dec
push
ret
sahf
xor
or
sub
sub
leave
aas
push
bound
inc
mov
dec
sbb
xchg
mov
pushf
mov
pop
aam
sub
sahf
mov
shrl
out
lods
or
adc
push
xor
sbb
clc
inc
rclb
xchg
pop
xchg
ds
xor
enter
or
push
fbstp
push
jne
xchg
or
das
adc
ret
stos
notl
pop
lock
and
mov
add
xchg
mov
add
sbb
addb
xchg
add
cwtl
xchg
add
or
and
xor
ss
sbb
cmpsb
js
pop
xor
jmp
movsb
orb
insb
sub
fidivl
push
and
dec
je
gs
or
push
pop
adc
push
loop
add
daa
cmpsl
xorb
sti
jb
inc
xor
cmpb
out
and
popa
cmp
and
sub
lods
es
adc
inc
adc
inc
inc
xchg
xchg
jle
mov
sub
in
xor
or
push
inc
jbe
mov
ljmp
push
jae
inc
xchg
test
sbb
aam
and
xlat
test
pop
scas
lods
or
xor
insl
xchg
int
js
mov
cmp
in
bound
xchg
push
ljmp
jmp
sub
mov
cmp
pusha
dec
push
jmp
es
sbb
add
mov
push
adc
in
or
adc
xchg
adc
clc
and
cmp
inc
in
dec
add
push
lea
jo
jmp
pop
add
sub
push
xor
mov
and
stos
and
pusha
in
xor
scas
leave
adc
in
adc
dec
mov
popf
pushf
ss
js
mov
repz
gs
sub
pushf
out
inc
daa
add
mov
mov
sub
dec
add
mov
mov
enter
int
mov
push
adc
dec
push
and
push
das
stos
ljmp
pop
inc
jmp
inc
scas
inc
test
fucom
mov
and
add
mov
bound
mov
and
sti
add
jmp
or
xchg
bound
pop
push
pop
jo
pop
and
push
popf
and
loopne
imul
pop
jne
cmc
or
mov
call
and
or
cwtl
int3
add
xchg
bound
cs
xor
push
sbbb
in
push
aam
add
inc
push
add
adc
mov
inc
test
sub
cmp
jl
and
and
inc
pop
out
mov
xor
xchg
addl
or
cmp
ret
cmp
leave
xorb
es
movsb
jmp
fwait
popa
sbbb
mov
test
subb
sbb
xor
jle
pop
dec
dec
jecxz
xor
pop
and
shrl
sbbb
pusha
xchg
in
hlt
dec
aas
and
insb
ds
cmp
daa
or
aam
dec
jb
js
xchg
call
jmp
xor
pop
sarl
sbb
xchg
push
dec
jb
dec
lds
sarb
out
xchg
xor
movsl
imul
int
loope
pop
inc
int3
push
lret
pop
incl
sbb
add
push
nop
and
cmp
xchg
xchg
fidivs
sbb
aad
mov
inc
mov
hlt
jle
adc
xchg
and
xor
lret
mov
xchg
cmp
lods
stos
loopne
dec
pop
add
les
dec
sbb
test
outsb
add
stos
add
dec
add
dec
jb
into
push
inc
mov
rcrl
scas
pop
int
dec
inc
subb
mov
ja
lods
adcb
in
sub
and
add
int
hlt
cmp
mov
in
sbb
jo
lock
sub
outsl
add
or
add
mov
push
lahf
test
mov
pop
or
adc
cmp
xchg
addr16
add
mov
aas
cmp
cmpxchg
or
ss
sub
dec
xor
cmc
dec
add
xchg
cmp
sarb
push
int3
out
ret
add
sti
out
insl
sbb
stos
and
test
inc
aas
orb
repz
mov
sub
add
mov
mov
mov
movsl
pop
sti
lea
xchg
push
mov
adc
jo
hlt
pop
andb
repnz
clc
inc
inc
jo
xchg
add
lret
dec
adc
inc
sbb
nop
sbb
and
fcompl
rcr
push
or
or
dec
loopne
iret
sbb
jo
out
or
fadds
cmp
dec
add
pop
dec
insb
popa
push
sbb
bound
cmp
xchg
cs
jmp
fcoms
mov
jecxz
dec
jo
call
pop
orl
mov
lahf
push
sub
hlt
sti
jp
push
add
add
pushf
inc
inc
into
push
dec
sbb
inc
outsl
dec
dec
push
cmp
push
mov
inc
lds
cmp
push
repnz
xchg
or
push
les
fimull
fadd
adc
insl
hlt
in
mov
adc
stos
cmp
sahf
sub
loopne
sbb
and
gs
addr16
rolb
lahf
dec
out
ret
jnp
adc
lcall
inc
inc
adc
stos
sbb
and
mov
inc
movsb
sub
ss
sbbl
adc
adc
js
das
push
jg
adc
fsubl
out
pushf
adc
data16
and
xor
in
js
add
dec
roll
loope
and
or
push
stc
inc
push
sbb
xchg
stos
adc
popf
popf
and
and
mov
popf
pop
inc
or
mov
mov
adc
mov
sub
sub
mov
gs
adc
stc
out
xchg
add
cmp
fidivrs
jg
gs
push
movsb
std
lds
jno
ret
test
push
sbb
inc
popf
sbb
fld
mov
sbb
out
inc
cmp
mov
jmp
cmc
xor
push
jno
adc
lds
pop
mov
bound
insb
pusha
aad
jmp
pop
dec
add
pop
les
hlt
inc
mov
push
lds
and
and
imul
or
test
inc
pop
adc
push
mov
mull
stc
fcmovnu
jnp
pop
call
or
pop
push
inc
mov
ja
pusha
adc
divb
ja
jbe
lahf
mov
cmpsl
movsl
fdivp
push
movsl
lods
push
cmp
mov
rcrl
in
cmpl
shrb
pop
push
scas
insb
sub
add
xorb
stos
testl
addr16
scas
xor
push
dec
cld
xchg
xor
jo
sbb
mov
add
sbb
cmp
adc
lock
adc
outsb
pop
inc
fstps
sub
inc
lods
mov
icebp
sti
imul
scas
inc
mov
fisubs
sahf
and
andl
pop
scas
std
aam
inc
xor
jbe
insl
add
adc
clc
div
jae
sbb
int
mov
in
iret
mov
mov
dec
pop
les
cmp
mov
pop
ja
jae
sbb
dec
popf
out
roll
test
sbb
cli
xor
inc
or
mov
pop
or
mov
scas
lcall
andl
rcrb
inc
js
rcr
dec
in
int
lahf
pop
xor
adc
aam
push
cmp
xor
jmp
fldenv
popf
mov
dec
cli
data16
add
imul
lds
and
movsl
push
mov
sarl
sub
scas
and
mov
add
mov
fmuls
inc
in
adc
mov
inc
fwait
shrb
add
enter
lods
add
lock
adc
mov
shl
pop
xchg
shlb
rcr
adc
adc
cmpsl
sbb
vprotb
sub
dec
pop
add
cwtl
inc
push
aas
cmp
sbb
stos
fcoml
or
add
push
or
pop
dec
leave
shll
push
add
xor
mov
pusha
out
test
add
xchg
mov
mov
push
mov
rcrl
jno
ds
int3
lahf
pop
mov
push
jne
xor
jge
push
rorb
jns
fcompl
adc
and
and
xchg
rcrb
lods
rolb
inc
ds
adcl
lock
mov
pusha
mov
lea
andb
es
enter
loope
push
xor
lret
add
rorb
xchg
fadds
xor
pop
pop
arpl
pop
insl
mov
pop
test
mov
adc
push
mov
jl
andb
push
adc
loopne
lret
testl
mov
mov
add
xor
fwait
and
cmp
icebp
or
and
pushf
ret
inc
xor
inc
test
cmp
add
inc
dec
test
push
mov
adc
in
pop
or
xor
sub
aam
imul
mov
in
gs
pop
in
xchg
cltd
mov
push
aam
cltd
inc
sub
mov
jmp
cmp
inc
rorb
adc
lcall
xrelease
mov
ds
push
inc
test
stos
mov
sub
sbb
add
inc
rclb
out
push
pop
test
inc
mov
pop
mov
dec
pop
cmc
xchg
jo
push
popa
sbb
push
lods
xor
out
or
jbe
lea
ljmp
jecxz
inc
cmpsl
mov
inc
jb
leave
sbb
mov
pushf
test
sub
outsb
pop
jp
push
and
popa
test
inc
ret
ja
jne
lods
sbb
cltd
or
scas
jb
ljmp
mov
xchg
and
and
movsb
mov
ret
dec
adc
inc
mov
ret
add
rcrb
sbb
insl
dec
jbe
sahf
addl
mov
mov
fists
das
push
inc
push
popf
cmp
orb
icebp
out
or
or
push
inc
lcall
sub
adc
xor
or
sbb
jbe
and
mov
mulb
mov
in
in
lahf
and
cmp
xor
out
adc
xchg
fucomi
fiadds
repnz
sub
fisubrl
sbb
jb
lock
lods
xchg
add
add
ret
sbb
fwait
popf
mov
mov
in
popf
lret
sub
mov
lcall
insl
xchg
insl
or
ret
push
shl
cs
insb
xlat
dec
inc
out
add
xchg
push
in
inc
std
jae
jae
vphaddbw
loope
sub
sbb
loop
or
jno
int3
jne
aam
idiv
push
cmp
imul
and
pop
insl
jg
mov
inc
adc
mov
adc
jae
inc
xor
jle
insl
std
add
lret
inc
imul
add
gs
pop
xor
mov
insb
cmp
insb
add
dec
out
jge
add
push
das
xchg
cmp
shl
jp
or
mov
out
cmp
fiadds
xor
shl
or
push
sub
cmp
sahf
sub
add
push
sbb
push
and
inc
add
adc
push
test
adc
popa
mov
negl
movsl
addl
push
mov
push
cmp
dec
stos
movsb
mov
adc
push
adc
cmp
xchg
mov
add
dec
or
adcl
insb
lds
nop
jno
sbb
sbb
push
add
sub
push
nop
pusha
sub
adc
inc
inc
insb
addr16
lds
mov
int3
sub
out
pop
inc
xchg
or
push
add
or
cmp
add
cmp
lcall
rcrl
or
js
js
mov
push
fmuls
pop
pop
push
and
adc
jle
sub
cmp
imul
adc
clc
aam
popa
or
push
xchg
or
scas
adc
fsub
jbe
add
xor
xchg
push
bound
add
inc
push
sbb
jecxz
daa
adc
notl
jno
push
pop
xchg
pop
sbb
stc
adc
or
xchg
pop
lds
dec
add
inc
pop
test
push
xchg
inc
sub
stos
push
enter
push
insl
scas
jae
sbb
das
cld
inc
sbb
sbb
or
test
call
xchg
xchg
add
sbb
insl
push
cwtl
add
xchg
xchg
or
xchg
sub
sub
or
mov
inc
cmc
inc
jp
push
xor
call
xchg
shlb
sbb
lahf
inc
gs
xchg
fisubrs
stos
sbb
lret
stos
inc
popf
mov
jne,pt
cmpb
jae
inc
push
in
or
daa
add
sub
iret
adc
add
mov
repz
add
test
mov
pop
insb
testl
daa
xor
sub
imul
and
pop
cmp
mov
pushf
lods
insl
add
or
adc
dec
sub
out
sub
dec
sub
sbb
rcrb
adc
lods
dec
and
sub
loop
pop
sub
sub
fadds
dec
sub
sub
icebp
pop
mov
test
pop
or
orb
adc
punpckldq
dec
es
or
sarb
test
sbb
cli
lret
test
icebp
push
out
or
lods
lods
push
and
inc
push
sbb
and
inc
cmpsl
mov
adc
mov
add
test
cmp
jbe
mov
inc
movsb
arpl
xchg
push
sahf
mov
and
adc
push
add
adc
or
adc
adc
shll
xchg
or
add
mov
cmp
movsw
mov
mov
insl
add
lahf
lods
test
lods
insl
lds
mov
jge
daa
shl
lds
mov
movsb
das
push
add
insl
pop
sub
push
inc
test
jp
out
sbb
lock
and
push
adc
sub
mov
test
dec
xchg
das
sub
mov
sub
cmp
and
mov
movsb
insb
inc
xchg
sbb
adc
adc
mov
popf
xor
xor
mov
les
aad
cmpsl
push
es
and
addb
inc
sbb
push
xchg
push
adc
fistpl
and
lcall
fists
xchg
lods
sub
mov
fcomip
mov
xlat
movsb
mov
lret
jbe
adc
adc
ror
loop
aad
cwtl
ljmp
xor
loop
loope
icebp
push
and
jle
lcall
sbb
cmp
add
xchg
xor
mov
add
ret
push
xchg
in
push
dec
inc
mov
add
and
mov
dec
inc
push
fsubrs
and
push
xor
mov
xor
scas
gs
or
push
mov
push
xchg
cmp
cld
and
mov
pop
jns
test
lea
inc
fmul
ss
cmp
sub
jl
and
pop
or
and
xor
dec
in
aad
or
call
sbb
or
xbegin
push
rcll
les
fidivrs
fiadds
add
xchg
pop
push
sbb
mov
out
lret
jne
outsl
inc
cmc
sub
cld
pop
dec
push
daa
rclb
xchg
out
jl
das
dec
dec
sub
and
and
xorb
loope
mov
sbb
push
push
inc
shrl
sbb
adc
add
stos
adc
loopne,pt
xor
mov
cmpsb
or
push
daa
popf
adc
adc
lds
rolb
pushf
in
inc
mov
xor
je
and
jbe
and
shll
out
nop
das
pusha
mov
push
xor
jno
adc
pop
jno
and
addb
hlt
cmp
add
xor
stos
xor
mov
mov
mov
test
add
ficoms
xlat
push
fimull
orl
jg
mov
or
out
xchg
push
je
push
inc
cmp
cmc
inc
cwtl
sub
push
js
inc
stos
xchg
pop
adc
push
cmp
add
mov
dec
popf
mov
roll
adc
aaa
mov
xor
adc
push
loop
dec
sub
mov
mov
mov
sbb
sbb
test
and
fwait
adc
xor
add
mov
repnz
dec
add
adc
into
lods
lods
push
pop
test
jnp
add
xchg
jbe
add
jne
or
xchg
decl
mov
cmp
inc
icebp
push
mov
sub
jbe
adc
loope
popf
aam
inc
add
mov
shll
pop
mov
js
jnp
push
sub
mov
sbb
les
add
out
push
mov
into
jo
outsl
cmp
inc
mov
mov
mov
add
sub
inc
xchg
cs
ret
call
dec
adc
cmp
shll
push
or
cmpb
loop
xchg
cmp
int3
cmp
inc
pop
sbb
jecxz
jno
pop
sub
or
and
test
and
sub
dec
push
loop
and
mov
push
sub
inc
xor
bound
stc
push
lea
jno
and
out
daa
lock
out
ja
adc
fidivl
pop
jp
dec
out
stos
mov
dec
add
pop
xchg
mov
dec
inc
mov
test
pop
xor
loop
lods
inc
xor
add
arpl
inc
mov
rorb
loop
mov
inc
xchg
jp
jl
and
lds
or
ss
push
adc
out
adc
mov
inc
xchg
orb
loopne
das
xchg
jl
push
mov
lock
and
sbb
or
pop
jbe
add
mov
jne
test
fists
or
inc
hlt
push
or
mov
ror
fisttpll
jl
das
daa
sub
sbb
xchg
lret
add
jne
repnz
fcmovne
sti
cs
lock
pop
sbb
jo
cmp
jns
xchg
push
nop
mov
and
scas
out
or
sbb
mov
push
addr16
xchg
mov
into
inc
notl
lds
stos
out
stos
stos
and
sub
adc
push
xor
dec
adc
in
inc
xor
pushf
adc
gs
xchg
and
and
es
lar
cmp
sbb
dec
dec
int3
push
sarb
into
xchg
pop
cmp
shrb
in
insb
inc
sbb
stos
scas
mov
mov
xor
outsl
popa
and
adc
gs
xchg
mov
call
push
xchg
cmc
enter
cld
adc
lock
pop
adc
xchg
inc
sbb
mov
fldenv
push
or
ja
subb
cmp
sbb
inc
adc
scas
pop
cmc
mov
call
fbld
and
les
add
pop
cmp
inc
daa
shll
cld
inc
jo
mov
cwtl
add
loop
and
jg
in
mov
and
adc
das
push
ret
mov
lock
cwtl
lock
imul
in
in
pop
cwtl
ret
pop
push
lds
push
mov
jge
aaa
rorb
push
jle
xor
insl
push
fistpll
imul
and
mov
add
push
test
pop
sub
shlb
mov
push
mov
int
push
add
mov
orl
fdivs
jbe
xchg
adc
push
sbb
ret
add
test
inc
adcl
aam
je
stc
inc
je
cld
out
add
fnstenv
jnp
push
call
push
sbb
cmp
rcrb
daa
pusha
or
dec
inc
adc
orb
inc
cmpsb
and
aam
adc
insb
psubusw
jne
push
setbe
hlt
sbb
push
imull
les
ljmp
outsb
adc
add
cld
jp
in
pusha
cmp
jle
lds
aad
mov
add
cmp
dec
mov
push
lea
adcb
push
lock
jno
push
and
and
sbb
orb
or
mov
or
mov
rolb
popf
ds
push
mov
icebp
lock
pusha
inc
mov
jno
push
test
or
fcompl
aam
addb
roll
jnp
ret
add
test
add
xor
pop
mov
or
xchg
leave
sub
and
pop
and
adc
mov
cwtl
adc
dec
and
sbbb
adc
mov
push
lds
inc
inc
aam
ljmp
add
xchg
add
cmp
test
push
in
or
mov
call
out
mov
mov
jb
dec
push
jge
mov
scas
mov
cmpsb
xchg
xlat
sbb
dec
je
push
ror
loopne
sbb
inc
xor
inc
add
inc
xor
xchg
aad
verr
cmc
pop
adc
jp
xor
or
dec
add
push
fucomp
in
inc
int3
sub
sbb
pop
push
movsl
out
add
inc
jnp
mov
adc
cmp
mov
xor
movsl
add
mov
push
and
inc
sub
fimuls
test
sub
inc
sub
mov
aaa
and
inc
jne
cmc
imul
inc
dec
sub
mov
inc
adc
mov
dec
mov
sbb
lahf
inc
xor
pop
pop
cld
add
sahf
dec
jnp
jns
in
xchg
add
in
fcomps
inc
test
mov
jne
popf
jecxz
test
cmp
jmp
ret
push
inc
xlat
mov
push
push
dec
ret
dec
inc
mov
mov
fisubrs
roll
pop
sbb
inc
cmp
add
sbb
hlt
fisubrs
or
adc
movsb
sub
daa
cltd
xchg
int3
inc
loopne
xor
inc
xor
mov
cwtl
or
xchg
xchg
mov
push
roll
cmp
push
mov
inc
xchg
xchg
xchg
push
shlb
xchg
inc
movsb
lahf
push
fiadds
adc
ja
pop
sbb
nop
and
inc
xor
mov
ret
cwtl
hlt
in
pushf
ret
call
loopne
adc
lcall
xchg
sub
pop
mov
subl
ds
lods
mov
sub
or
cwtl
int3
in
ret
dec
lds
adc
ret
sbb
adc
sbb
loopne
sbb
xor
mov
les
shlb
pop
adc
jmp
test
xchg
mov
jp
cmp
jb
insl
sbb
mov
jo
imul
push
addb
push
and
out
lock
inc
test
fwait
aam
push
and
les
push
popl
push
cltd
icebp
std
fimull
mov
add
imul
and
packssdw
xor
js
sbb
rol
stc
mov
dec
push
in
add
pop
pop
rcrb
cmp
ret
mov
lret
cmp
mov
push
ljmp
lcall
lahf
inc
push
pushf
mov
fwait
and
scas
int3
lret
pop
in
fimuls
inc
xchg
push
inc
sub
jmp
mov
loop
in
xor
shl
inc
rolb
hlt
ss
pop
push
mov
ret
mov
dec
repz
shr
test
xor
out
lods
ret
mov
orl
orl
jo
leave
jo
adc
sbb
andl
int
add
xchg
cmp
mov
dec
add
inc
movsb
sub
mov
out
mov
call
jnp
in
int3
imul
adc
and
xor
frstor
sbb
add
pusha
rcl
sbb
cmp
cmpsb
push
and
mov
cmp
push
xchg
inc
inc
ljmp
jo
dec
arpl
int3
rcr
fstl
xchg
pop
mov
inc
sub
pop
adc
or
mov
mov
pushf
fs
shll
mov
xlat
cmp
clc
xchg
out
in
lea
add
xchg
and
pop
push
in
shlb
sbb
and
or
ljmp
add
ljmp
cmp
add
addl
out
adcb
adc
cmp
popa
sub
rolb
in
mov
pop
aam
push
inc
enter
loopne
pop
js
push
stos
fidivl
enter
mov
es
loopne
adc
fldt
dec
sub
aam
lcall
nop
dec
hlt
enter
xor
and
cmp
fnstsw
cmp
and
sbb
inc
sbb
dec
cmp
sbb
scas
frstpm(287
sbb
iret
xor
pop
jb
jne
xchg
lcall
pop
or
mov
sbb
lcall
jo
dec
les
sbb
aam
fisubl
pop
jbe
loope
inc
xor
or
les
or
add
or
in
jb
dec
movl
sbb
adc
daa
lahf
mov
mov
out
insl
cmpxchg
imul
lods
dec
mov
xchg
adc
shrl
mov
adc
mov
shrl
mov
cmp
push
adc
dec
jp
aad
sub
sbb
jp
add
cld
loop
mov
movsb
adc
sbb
or
test
in
adc
out
mov
add
adc
insl
xchg
push
mov
cmp
push
or
cmp
adc
lock
jp
ret
push
push
jne
cmp
mov
mov
and
pop
fcmovne
jp
or
dec
stc
data16
fs
push
iret
test
popf
aad
test
or
inc
ljmp
in
push
fnstcw
dec
pop
aas
push
orl
xchg
and
out
add
sahf
or
mov
fsubrs
dec
inc
push
or
out
cmp
fs
push
or
adc
pop
mov
xchg
fstpl
mov
dec
xchg
xor
jle
adc
rolb
xchg
push
insl
int
xor
or
sbb
adc
add
lock
mov
add
or
repz
or
push
mov
cmc
loop
in
cmp
sbb
ljmp
outsl
push
jl
lock
repz
lock
fistl
mov
jle
sub
push
sbb
or
mov
aaa
add
mov
rcr
cwtl
out
arpl
xor
push
sub
jo
mov
push
loopne
in
sbb
insb
add
jecxz
aam
stos
leave
push
add
push
and
add
sbbb
mov
push
adc
sbb
mov
test
lods
dec
js
xor
je
jle
js
lea
aad
push
pusha
or
call
dec
test
and
xor
incb
outsl
and
mov
sahf
xchg
negl
pop
cmp
aam
push
add
mov
shl
sub
lods
xor
pushf
mov
cmp
pushf
mov
addr16
mov
sbb
mov
sbb
scas
popf
int3
or
fadds
jb
outsl
negb
inc
mov
enter
into
jge
call
insb
negb
mov
int3
mov
and
insb
cs
sbb
jae
jb
xchg
push
dec
mov
add
cmp
jne
cmp
and
jp
fxch
pusha
insb
cwtl
xchg
adc
sub
mov
ficompl
das
and
in
jns
loope
outsb
mov
pop
adc
add
js
es
inc
in
sahf
movsb
fcoms
add
mov
jp
pop
loopne
ds
pop
and
add
pop
adc
adcb
loope
aaa
insb
cwtl
mov
loope
and
dec
mov
mov
imul
fdivrp
sub
cmp
and
sbb
jle
out
es
dec
jl
out
mov
shr
es
add
dec
adcb
jmp
addr16
xchg
xchg
movsb
movsl
in
add
and
ret
test
adc
jo
push
rorl
flds
jo
fnstenv
insl
xchg
dec
js
mov
popa
jmp
call
cmpb
iret
in
add
xor
in
add
bound
sbb
pop
pop
loopne
sbb
xchg
int3
pop
jl
call
mov
js
loopne
push
mov
movsb
mov
sbb
xchg
and
inc
adc
mov
aad
aaa
das
jne
mov
sbb
add
lock
pop
int
scas
adc
js
out
add
and
and
adc
lea
aaa
and
loope
lods
or
outsb
push
push
mov
lock
mov
mov
test
lcall
es
mov
sbb
jecxz
addr16
loopne
loope
xchg
fistpll
loope
fistpl
movnti
jecxz
sub
mov
dec
fs
or
loope
fldl
mov
out
daa
aaa
fwait
adc
lods
lds
xchg
xchg
adc
push
ret
subl
pop
sub
mov
sub
and
mov
jae
inc
sbb
fistps
push
movsb
sub
cmpsb
dec
ret
fistpl
outsl
sbb
dec
dec
les
jb
ret
inc
add
push
push
data16
loopne
testb
ljmp
sub
daa
pusha
fwait
mov
push
fldenv
push
mov
jnp
out
fs
jnp
jmp
mov
mov
and
daa
and
pop
ret
fists
add
pop
negb
xchg
mov
rcrl
aas
or
orl
shll
sub
inc
out
mov
insb
les
in
inc
out
sbb
xor
es
mov
xchg
sbb
out
lahf
in
jo
xor
je
and
in
dec
les
out
adc
and
test
inc
insb
sub
insb
or
fmulp
in
inc
push
popf
mov
inc
fucomi
fdivl
sub
mov
fs
in
mov
xchg
test
jnp
push
sub
sub
fsubr
fcmovnb
in
mov
sub
ja
xor
fldcw
fs
cltd
or
inc
imul
push
pop
ja
xor
sub
fcoms
dec
inc
cmp
lcall
out
int3
add
xchg
cld
mov
inc
lods
mov
stos
in
loop
out
mov
loopne
or
sub
fisttpll
inc
add
mov
icebp
testb
insb
and
pop
xchg
push
sub
add
push
mov
cmp
or
out
loopne
cmp
cs
jb
and
leave
add
adc
sarl
mov
inc
xor
imul
mov
or
dec
jmp
xorl
out
andb
in
pusha
ljmp
mov
or
add
icebp
fldl
lock
movsl
push
je
mov
in
lods
adc
sub
loopne
es
mov
add
mov
xchg
movsb
imul
ficoml
daa
mov
jmp
adc
aaa
mov
fisttps
xor
pusha
and
xchg
jnp
mov
sbb
je
lcall
movsl
inc
insb
lahf
repnz
xor
out
lea
sub
sub
aad
rol
xor
pop
push
sub
fadds
dec
mov
pusha
add
inc
adc
pop
add
enter
dec
lret
inc
add
and
sub
int3
pop
and
sub
leave
add
mov
into
sti
ljmp
lahf
mov
int
push
sbb
lock
add
mov
cmp
push
fwait
lret
pusha
nop
mov
flds
mov
pop
push
xor
xchg
jb
rcrb
mov
in
dec
mov
add
fdiv
lcall
loope
or
ficomps
hlt
or
and
adc
es
inc
mov
cs
xor
xchg
and
lods
shlb
gs
insb
gs
popf
call
lock
outsl
push
pop
clc
jmp
jo
mov
das
mov
jmp
mov
shl
dec
pop
xchg
movsb
jg
inc
jecxz
out
add
inc
cmp
adc
mov
adc
dec
dec
fdivl
cwtl
sub
inc
mov
mov
mov
mov
mov
mov
inc
dec
loop
scas
jl
push
adc
adc
inc
dec
ret
outsb
and
mov
into
insl
lods
push
fs
pusha
inc
pop
push
lea
orb
sbb
inc
fadds
dec
jmp
cli
or
adc
call
push
xlat
mov
mov
out
jne
bound
mov
das
and
mov
in
pop
lret
cmp
sub
data16
sbb
ret
inc
jmp
jns
cmp
js
xchg
insl
pop
adc
stc
iret
cmp
xchg
inc
and
pop
bnd
mov
adc
aad
and
out
add
pop
jnp
not
dec
lods
pop
adcl
pop
xchg
jp
push
xchg
push
test
sub
lret
div
push
cmp
mov
pop
adc
pop
lods
jecxz
xorb
stc
bound
fsubrs
jmp
ss
and
sbb
mov
cmp
fisubrl
fstpl
jnp
cmp
fadd
faddp
xchg
int
mov
loopne
add
sub
fdivl
fnstenv
adc
and
pop
addr16
sub
push
add
bound
mov
sbb
sbb
mov
mov
adc
sbb
dec
fldenv
sub
loop
outsl
sub
scas
or
pusha
es
adc
enter
xchg
sub
rclb
or
push
mov
push
jne
or
movsb
jo
and
pop
or
aam
adc
mov
shl
nop
enter
mov
add
add
or
mov
add
int3
pop
lret
movsb
or
sub
adcb
push
cwtl
cmp
into
inc
push
or
or
int3
adc
pop
pop
xor
pop
cmp
pop
into
rcr
sbb
xchg
aas
sub
mov
jp
add
or
push
sbb
add
push
es
int
sbb
and
sbb
daa
or
or
scas
xchg
nop
add
mov
movsb
sub
or
pop
jb
xor
or
add
and
xor
and
push
mov
push
scas
pop
sbb
scas
mov
dec
aam
je
leave
iret
sti
es
into
bound
push
addb
out
sub
xor
add
or
and
mov
lcall
fidivrs
jae
ds
pop
pop
pop
mov
jbe
mov
xor
push
sbb
xlat
adc
push
daa
pop
and
cmp
into
jbe
push
or
sbb
sbb
fildll
sub
bnd
xor
and
add
add
cwtl
jecxz
mov
cmp
mov
scas
pop
ficompl
aaa
fdivrs
lds
scas
shrl
or
jle
xchg
lret
mov
adc
stos
fcoml
clc
or
fiadds
or
mov
cmpl
fists
add
mov
pop
jge
cmpsb
and
cmp
push
faddl
mov
mov
cmp
stos
pop
je
inc
mov
sub
sbb
jmp
inc
in
jbe
stos
add
mov
mov
aaa
shr
pop
call
aaa
mov
pusha
movb
ficompl
cmc
cltd
rcr
cs
loop
dec
jns
push
sub
dec
pushf
clc
fst
sti
dec
aaa
sarb
adc
scas
or
aaa
mov
adc
mov
cmp
xchg
movsl
add
jo
rcrl
pop
inc
add
imul
ja
pop
push
icebp
add
lea
sbb
cmp
ss
dec
mov
jge
fcom
add
inc
mov
sbb
sbb
scas
sub
pusha
push
mov
inc
mov
jbe
call
arpl
popf
inc
mov
add
cmp
lea
add
inc
or
aas
mov
sbb
mov
pop
rcrb
or
pop
hlt
insl
xor
dec
aas
push
lds
and
stos
je
lods
sbb
mov
dec
xchg
and
push
subb
fists
sbb
mov
or
inc
pop
movsb
pop
pushl
mov
pop
addr16
mov
mov
xchg
add
out
fiadds
mov
push
push
inc
jle
jns
popa
pop
fsub
pop
test
xor
ror
ds
lods
mov
and
or
push
mov
aaa
adc
or
add
mov
adc
cmp
mov
call
cmp
pop
push
mov
mov
lret
pop
icebp
fdivrs
jno
sbb
mov
xor
mov
or
sbb
xchg
iret
jae
in
jbe
fidivl
or
out
pop
pop
std
ljmp
jae
sti
repnz
sbb
pop
push
cmp
xchg
sub
gs
jle
mov
adcl
push
push
mov
jmp
sub
jbe
aas
cmp
jno
mov
xor
sub
fiaddl
xchg
cli
or
cmp
pop
mov
lret
pushf
cltd
jbe
test
xor
jne
popa
fdivs
aam
sbb
xchg
movsb
pushf
out
pop
lds
in
xchg
push
repnz
mov
jb
xchg
add
lock
jmp
stc
aas
aaa
mov
imul
out
shll
pop
stos
mov
pop
mov
mov
aaa
loopne
push
add
push
cmp
cwtl
neg
jbe
clc
daa
or
fiadds
xchg
aad
mov
mov
fucom
or
sbb
loope
mov
test
mov
test
std
test
lds
test
aas
sbb
inc
push
fcompl
add
push
stc
test
test
adc
pop
mov
cmp
pusha
das
cmpsl
pop
mov
cmp
mov
mov
cmp
je
loope
popa
nopl
sub
xlat
mov
pop
mov
dec
inc
cli
imul
lock
sbb
orl
hlt
xchg
pop
mov
jbe
mulb
fistps
cmc
sbb
mov
pop
imul
xlat
xchg
testb
xchg
pop
cmp
mov
sbb
add
nop
fisubl
pop
lcall
ret
es
fidivl
aaa
les
mov
push
ret
inc
lds
sub
mov
popa
imul
popa
loope
jecxz
push
cmp
cs
pusha
sbb
andb
sub
adc
mov
push
mov
arpl
arpl
jg
jne
push
test
pop
pop
test
pusha
nop
and
sbb
es
arpl
in
ret
out
ret
sub
add
fucomi
push
xlat
push
testb
or
fldt
rclb
xchg
in
pop
jbe
sahf
adc
ss
sar
lods
ja
mov
fmull
sbb
icebp
lods
inc
xchg
lahf
pop
fisttpll
push
es
fldcw
jbe
mov
and
dec
popa
mov
movsl
xor
aaa
outsb
mov
push
mov
lahf
int3
testb
stos
push
inc
insb
js
shlb
sbb
jne
xchg
je,pn
in
push
imul
imulb
pop
test
clc
mov
dec
fnstcw
lretw
jmp
dec
or
mov
aaa
mov
xchg
mov
mov
mov
xor
test
mov
sub
bound
movsl
xchg
fwait
pop
mov
push
daa
xchg
sbb
arpl
cmp
adc
dec
xchg
negb
add
daa
aaa
aas
fcom
inc
jno
popa
imulb
mov
jle
xchg
aas
in
and
mov
sbb
jle
sbb
mov
sar
or
jp
loope
iret
fcom
inc
inc
insb
in
sub
mov
sbb
or
sbb
or
push
push
fwait
dec
std
movsl
mov
push
test
or
iret
jle
movsl
outsl
fsubrl
lds
loopne
data16
lds
sbb
push
jno
mov
cmp
leave
jmp
or
push
pop
in
arpl
push
sar
ret
cmp
ss
gs
cld
aad
dec
testl
mov
sub
aad
call
icebp
or
loope
pop
add
call
hlt
pop
mov
out
lock
jne
pop
cld
in
test
insb
sub
imul
inc
and
call
ja
pop
scas
jle
arpl
js
push
loop
sbb
and
inc
pop
in
jmp
lods
sub
les
scas
lret
jbe
popa
mov
adc
repnz
outsb
xchg
or
ret
fnstsw
pop
sub
loopne
mov
xor
cmp
fsubrl
subb
lock
fdivl
in
mov
int
testb
rolb
push
and
in
ret
pop
lea
mov
xor
sub
bound
outsl
out
cmpl
lahf
push
jno
pop
sbb
push
sub
sbb
add
insl
arpl
outsb
lods
lock
clc
loope
lret
inc
xchg
lea
jno
xor
cmpsl
push
jmp
xor
loopne
or
push
sbb
pop
jmp
rolb
or
jl
dec
or
inc
mov
sub
pop
nop
outsb
pop
dec
mov
ficompl
outsl
jbe
insl
outsl
out
fs
mov
adc
fcmovnbe
cmp
sbb
push
push
lods
ja
shlb
int3
imul
inc
jbe
mov
popa
pop
clc
imull
inc
add
loope
dec
pop
push
in
mov
pop
sbb
pop
and
cmpsb
cmp
aad
insb
frstor
sarb
cmp
pop
out
or
add
mov
and
pop
pop
mov
mov
adc
mov
fimull
outsb
icebp
adc
stos
push
in
add
lods
jmp
arpl
xor
xor
movsl
pop
inc
loopne
mov
mov
mov
mov
adc
mov
testb
inc
ljmp
pop
insb
cmp
jo
mov
mov
push
int
pop
xchg
rcrl
lret
pushf
bound
adc
xchg
mov
cld
push
inc
sub
aam
xor
pop
in
sbb
inc
dec
lods
sub
das
imul
xor
mov
pop
out
and
jp
mov
loope
scas
pop
pop
add
jbe
push
inc
test
push
add
add
das
adc
and
outsl
into
paddw
aaa
rol
mul
orl
mov
mov
mov
sarl
and
dec
or
loopne
xor
xor
cmp
sub
daa
push
jecxz
mov
imul
sbb
out
loopne
in
cmp
int3
jg
dec
jae
or
mov
ss
mov
loopne
sbb
pop
pushf
xor
ffree
outsl
rol
xchg
cmp
into
xor
adc
dec
fisttpl
clc
xor
pop
mov
inc
xor
imul
add
mov
pop
scas
xor
insb
in
push
mov
xchg
dec
ret
shll
lods
shrb
xlat
mov
mov
cmp
data16
insb
cmp
inc
pop
shlb
orb
push
pop
fstl
sbb
js
ja
and
fimuls
andl
xchg
pop
dec
in
aas
mov
lea
pusha
mov
mov
notb
cld
fldl
aaa
inc
sub
mov
pop
mov
lcall
mov
jle
jecxz
mov
int3
dec
sarl
stos
xor
mov
dec
push
xlat
inc
call
xchg
add
or
ret
add
scas
dec
mov
cmpsl
fldt
test
test
xchg
mov
mov
sbb
xchg
ja
dec
jnp
fs
test
dec
aaa
shll
adc
addb
fldt
xlat
pop
test
cli
ja
mov
in
sbb
jl
rcl
aad
jecxz
cmp
cmpsb
cs
and
es
mov
lcall
sub
pop
repnz
and
push
mov
je
rcrb
sub
sub
xor
fdiv
push
loop
mull
cmc
pop
xchg
mov
inc
add
aas
cwtl
in
aaa
roll
xchg
jno
push
popa
rcr
cmp
cmpsb
inc
into
ja
mov
and
push
mov
mov
sti
push
mov
push
mov
imul
jmp
push
add
adc
xor
mov
adc
outsb
pop
outsb
out
scas
cmc
cmp
mov
shr
push
repnz
jne
mov
push
pop
je
or
sbb
dec
in
hlt
mov
jb
test
pop
add
and
out
mov
bound
repz
add
add
cmp
or
jp
sbb
cmp
pop
sbb
dec
jbe
dec
mov
dec
jno
mov
push
add
mov
xor
inc
sbb
jg
push
push
imull
push
push
pusha
pop
jnp
xlat
xor
movsl
ss
cmp
scas
loop
pop
pop
das
pusha
mov
loop
rol
push
sarb
add
add
cmp
scas
push
inc
xor
mov
push
or
aad
ret
in
jnp
out
pop
lret
repz
inc
imul
stc
jne
mov
movsb
aaa
adc
push
dec
lock
lods
add
mull
cmp
aas
push
pop
cs
jbe
add
cmp
mov
cmc
sbb
add
sub
mov
mov
ficompl
int3
sahf
pop
inc
adc
inc
ret
xor
mov
js
lret
lcall
sahf
enter
ds
add
adc
adc
adc
out
popl
mov
xchg
outsb
or
xchg
ret
loope
inc
or
mov
sbb
fbld
jle
sub
fisubs
mov
pop
sub
sub
in
jg
xor
add
xchg
outsb
pop
cmp
xchg
jo
mov
sbb
xor
scas
mov
les
push
cmp
mov
push
push
outsb
arpl
outsb
cltd
aad
pop
cmp
adc
popa
mov
je,pn
jecxz
fldt
jo
mov
jl
adc
lret
and
mov
xchg
out
loope
icebp
lds
xchg
jo
dec
add
int
shrb
sahf
and
loop
mov
sbb
xlat
sub
daa
fisubl
jp
xchg
das
fsubs
jl
addr16
movsl
stos
clc
shl
int
ret
xchg
ret
out
mul
pop
fildl
test
insl
fsubs
inc
lret
push
push
add
add
jne
int
inc
pop
ljmp
and
movsl
pop
jp
lret
add
sbb
mov
mov
adc
leave
out
xor
lods
loope
loop
jp
mov
cmp
imul
fmuls
lea
dec
inc
adc
cmc
push
cmp
sbb
cs
test
fldt
repz
sbbl
jmp
pop
nop
cmp
hlt
xor
lcall
jb
sbb
mov
shl
push
mov
push
jp
cmc
rolb
das
cmpsl
jnp
cs
shll
or
loopne
pop
out
outsb
stos
rcrb
dec
mov
cltd
mov
mov
out
add
mov
sub
jecxz
push
sbbl
or
and
xchg
push
push
lds
lret
push
imul
ljmp
aam
movsl
sbb
pop
enter
ja
fiadds
mov
inc
sahf
adc
add
aas
into
push
adc
mov
pop
and
in
xlat
rolb
dec
inc
and
les
add
repnz
adc
mov
cmpsl
pop
rolb
push
or
mov
orb
jno
sub
xor
jg
push
insl
outsl
inc
dec
in
mov
iret
mov
mov
std
ret
out
cs
sarl
pop
xor
xlat
sbb
sbb
stc
mov
nop
mov
add
imul
mov
xor
dec
mov
jecxz
mov
aam
and
jl
cmp
rol
or
ret
ret
mov
sarl
rcl
cli
adc
adc
push
clc
jmp
cltd
xor
je
outsl
pop
popf
mov
into
push
xrelease
add
je
fistps
add
fistpll
addr16
cltd
fimull
mov
push
pusha
js
shlb
jge
mov
pop
mov
les
jnp
fdiv
ljmp
inc
outsl
ja
in
dec
lcall
mov
je
xchg
add
inc
add
and
mov
lea
shrl
bound
push
sbb
js
xor
inc
mov
popf
mov
insb
or
sbb
cmp
repz
adc
je
aaa
xchg
sbb
je
sbb
nop
loope
in
filds
sub
loope
cs
xor
cs
fsubrs
mov
add
shrb
cmp
aas
pop
mov
xchg
outsb
push
fldl
inc
mov
iret
sbb
mov
mov
daa
sub
push
push
xlat
pop
dec
push
mov
stos
add
movsb
sub
ret
int
xor
mov
popa
sub
push
adc
or
rolw
add
cmp
mov
ljmp
push
cmc
inc
lods
mov
test
imul
adcb
jg
stos
pop
mov
test
pushf
insb
stc
scas
xchg
and
mov
faddl
sti
cmp
or
mov
je
loopne
outsl
cmp
adc
xchg
icebp
adc
dec
jmp
inc
aad
mov
lret
mov
imul
pop
leave
fnstsw
dec
stos
int3
sub
xchg
mov
stos
jne
jge
ja
sub
mov
xorb
add
lahf
cmp
pushf
mov
fisttps
mov
fisubrl
cmp
push
lcall
pop
or
mov
sub
ret
fbld
push
or
pop
mov
cs
fists
lahf
jo
inc
arpl
mov
mov
sbb
xchg
outsb
aam
in
inc
nop
xlat
rcl
mul
aaa
icebp
lods
lods
dec
test
popa
inc
push
mov
mov
xchg
cltd
fstl
ret
sub
mov
mov
mov
and
inc
pop
fisttpl
cmp
pop
insl
dec
mov
rol
fwait
sub
add
daa
push
out
in
inc
icebp
test
mov
nop
mov
iret
mov
cmp
jne
outsb
cld
aad
or
leave
leave
sbb
jae
push
mov
lret
jmp
inc
ja
aad
inc
push
imul
decb
jp
or
push
faddl
pop
ja
or
call
cmp
pop
fst
inc
insb
adc
movsb
xchg
divl
add
js
pop
add
add
cli
sbb
fistl
adc
push
add
mov
imul
push
pop
les
and
xor
or
mov
sub
bound
push
test
jb
mov
xor
jg
ret
addr16
cmpsb
sahf
push
or
inc
je
xor
sbb
and
mov
stc
cld
mov
dec
movsl
push
imul
dec
pop
fistpll
sarb
dec
fadds
lcall
mov
xor
push
cmp
cmp
pop
jbe
scas
hlt
push
fdivrl
xchg
int3
pop
shlb
std
fistl
movsb
call
leave
fbstp
jne
mov
fs
pop
aam
cmp
in
cld
add
dec
test
sbb
cltd
fbstp
jecxz
out
shll
pop
mov
inc
sub
mov
xchg
cmp
divl
mov
repz
pop
jle
in
cltd
cmpsb
pushf
dec
xchg
push
scas
jae
addb
scas
ret
roll
add
rorl
xchg
insl
iret
les
cmp
insl
mov
add
jne
ljmp
mov
xchg
mov
pop
mov
pusha
and
outsb
mov
and
dec
scas
insb
sbb
push
call
cmpsb
pop
movsl
push
lret
xchg
lods
or
mov
popf
dec
mov
mov
push
fidivrl
rcr
cmp
fisttpll
outsb
sub
or
std
cltd
movsl
repnz
inc
aaa
adc
push
mov
fidivl
mov
jge
loop
sub
jb
dec
arpl
sbb
popa
or
mov
daa
adc
fidivl
repnz
hlt
sub
xchg
push
and
jnp
xchg
ljmp
jae
mov
sub
or
inc
xchg
outsl
sub
call
movsb
xchg
int3
lea
imul
fiaddl
rcll
pop
js
out
jae
rcr
mov
iret
or
push
cld
in
leave
dec
ret
in
mov
and
mov
fsubr
es
mov
jge
add
mov
ja
sti
or
std
cmp
xchg
push
cmp
and
dec
jmp
mov
xchg
rorb
stos
dec
pop
push
dec
mov
sbb
or
or
sub
imul
out
mov
sbb
insl
iret
hlt
dec
mov
lock
sbbb
fiadds
push
jecxz
mov
insb
jne
aam
cmp
add
mov
xor
imul
lods
pop
mov
mov
aam
outsb
sub
pop
push
divl
inc
mov
xchg
test
or
call
push
jne
push
mov
sbb
aam
cld
lock
arpl
cmp
mov
inc
test
sub
test
int3
xor
sub
jmp
mov
sub
int3
sub
cmp
xor
sbb
push
shlb
push
out
lods
popa
inc
cld
add
lret
cmp
push
push
jg
hlt
mov
adc
push
jg
jns
xchg
mov
pop
xlat
push
sub
cmp
fwait
lcall
cmpsl
mov
add
aad
jp
jle
pop
test
mov
dec
sbb
aad
add
mov
mov
fs
mov
fcmove
jbe
mov
adc
sbbl
xor
mov
sahf
xor
lock
xor
in
cmp
adc
outsb
cmp
mov
lea
stc
push
aaa
or
add
jmp
ljmp
int
ficompl
in
add
mov
push
jle
shll
pop
in
sub
bound
sahf
inc
mov
cli
test
sub
and
popa
loope
fiaddl
sbb
push
cltd
movsl
outsl
outsb
jnp
adc
mov
cmp
pop
test
loopne
mov
mov
xchg
dec
andl
insb
sbb
fmull
shrb
mov
out
jbe
rcl
int3
movsl
dec
call
lret
je
jo
adc
mov
xor
pusha
mov
xchg
cwtl
push
fadd
stos
movsl
fisttpll
shll
and
sbb
sahf
lahf
sub
mov
adc
pop
inc
or
ret
rcrb
fdivrl
pop
push
and
inc
mov
sub
add
mov
lods
das
aad
cltd
decl
and
cmp
add
nop
ljmp
test
pop
xchg
push
sbb
es
arpl
subb
or
xchg
sti
cmpsb
jb
jno
leave
inc
loop
mov
or
adc
mov
sbb
out
inc
xor
sbb
pusha
xor
mov
out
jmp
inc
scas
int3
repnz
lret
dec
and
inc
adc
xlat
popa
in
fnstsw
sub
fbstp
jbe
pop
xor
ja
gs
xor
xor
insl
std
enter
xchg
test
push
or
jecxz
inc
shrl
imul
testl
sysret
fisubs
xchg
add
fldl
pop
jo
loope
push
sub
lcall
jg
cmp
sub
dec
mov
lds
cmpsb
xchg
pushf
jecxz
repnz
adc
loopne
mull
pusha
and
cwtl
mov
inc
ss
addl
pop
ficompl
iret
sub
stos
xlat
and
jns
dec
push
mov
es
jge
and
addr16
jp
adc
mov
xor
int3
mov
sub
jne
in
test
pop
xchg
outsl
pusha
imul
icebp
pop
mov
ret
push
das
fs
mov
outsl
fidivs
jge,pn
int
fmull
arpl
jecxz
iret
dec
mov
jmp
int
sub
sbb
xchg
shrl
xchg
and
sbbb
sahf
andl
testb
adc
sub
dec
fwait
push
in
aad
testb
shrb
sbb
mov
push
push
fmuls
ror
ja
rolb
clc
lock
insl
mov
call
or
cmp
mov
mov
sub
add
in
into
mov
pushf
sbb
sbb
into
data16
sub
or
mov
sbb
idivb
cmp
sbb
or
or
into
pop
out
cmp
add
adc
ss
pop
cs
mov
or
or
push
inc
or
push
mov
mov
adc
aam
mov
call
testl
xor
sahf
adc
push
mov
and
repz
fadd
add
push
add
movsl
idivl
push
andps
xor
aas
or
adc
push
inc
or
pushf
mov
push
add
cmpsb
ljmp
insb
insb
push
cwtl
sbb
arpl
mov
adc
xor
insb
jbe
mov
pop
add
ja
imul
mov
jl
negb
pushf
xor
jl
ja
push
dec
adc
push
int
scas
mov
in
ss
notb
push
sbb
sbb
pusha
mov
adc
mov
and
or
les
in
sbb
dec
negl
add
or
sbb
add
xchg
lret
add
jge
sub
adc
add
sub
test
clc
push
hlt
inc
loopne
test
add
add
add
cmp
enter
and
adc
pushf
mov
inc
add
pusha
add
outsl
in
in
lods
or
ds
adc
das
out
jnp
fcoml
add
add
jnp
mov
add
ja
repnz
pop
add
push
mov
pusha
addr16
test
push
push
xchg
es
fcmovne
mov
fsubl
or
adc
addr16
add
or
sti
lret
mov
mov
sub
in
and
xor
gs
cmp
in
jmp
xor
sub
sub
and
sub
pop
and
add
xor
in
sti
and
sbb
pusha
or
insb
cwtl
sub
subb
mov
xor
and
call
or
lahf
or
sub
xor
scas
pop
dec
pop
mov
push
in
je
stos
and
mov
push
in
push
cmp
add
sub
add
sti
sahf
outsb
mov
cmpb
push
dec
sbb
push
divl
jl
test
jae
frstor
fcomps
aas
aam
pop
jne
leave
cmp
sub
add
mov
sbb
push
lock
nopl
in
adc
sub
xchg
cmp
or
jo
aaa
jnp
or
sbb
pop
fdivrs
clc
cmp
call
insl
add
popf
mov
sahf
adc
rorb
sbb
add
test
mov
arpl
fsubr
dec
adc
in
or
jl
xchg
aam
ds
jb
jmp
insb
loop
stos
pusha
inc
sub
ficompl
and
inc
sbb
sbb
leave
fsincos
loopne
adc
mov
or
add
imul
xor
arpl
xor
push
mov
fcmove
jne
out
cmpsl
add
add
sbb
sbb
inc
in
dec
mov
cmpsl
inc
loopne
mov
out
arpl
add
xor
sub
hlt
ja
cmp
cld
aaa
and
push
loop
or
repnz
loop
xor
push
ret
or
xlat
push
enter
data16
shll
mov
mov
ja
sbb
or
xchg
sbb
cmp
les
cmp
xor
and
inc
insl
inc
jle
rolb
sbb
sbb
and
in
nop
cmp
insl
jnp
add
pmulhw
add
cmp
mov
sub
popf
pop
testb
cmp
je
out
jno
mov
and
jecxz
ljmp
daa
mov
xor
flds
pop
hlt
cmp
popf
cmp
xchg
sbb
dec
cmp
pop
ficomps
das
and
add
outsl
cmp
inc
pop
popf
jge
test
sbb
jbe
repz
push
cwtl
popa
push
or
test
sbb
sub
push
mov
arpl
or
and
adc
pop
mov
sbbl
mov
arpl
fs
xchg
sbb
lock
sbbl
or
lock
sbb
sub
adc
inc
mov
and
and
or
cmp
mov
or
dec
and
aaa
jg
or
fcomp
aaa
imulb
push
inc
xchg
ss
fcompp
push
jge
aaa
arpl
sbb
popf
das
pavgw
in
adcl
popf
and
push
fxch
lds
dec
lcall
sbb
lds
fisttpll
shl
fidivl
cs
inc
lret
cmp
sbbb
mov
dec
jne
dec
gs
imul
inc
shlb
mov
movsb
jbe
or
inc
lret
inc
xchg
movsb
ss
iret
lock
inc
push
inc
dec
jnp
aaa
sbb
push
pop
outsb
or
or
sub
or
lock
xchg
bound
je
pop
mov
mov
ret
dec
ds
cmp
pop
sbb
fisubs
and
gs
mov
xchg
int
sbb
andl
insb
and
andl
data16
adc
dec
inc
movsl
fnstcw
mov
adc
or
push
adc
outsb
sti
dec
add
push
add
push
aas
sbb
test
add
xor
mov
mov
shlb
and
js
lret
or
pop
add
fldt
mov
rcl
push
daa
imul
dec
dec
ja
leave
mov
sbb
sarl
sub
int3
leave
fimuls
mov
or
stc
aas
leave
cs
xchg
ljmp
xor
jbe
mov
and
jbe
xchg
push
xchg
or
add
sub
or
in
fwait
popf
and
mov
pop
xor
jnp
and
addr16
jnp
cwtl
lock
lock
movb
lea
scas
and
insb
pop
dec
and
or
popf
add
imul
pop
ds
xor
cmp
sub
add
push
xor
xor
arpl
dec
testb
jge
push
std
sbb
or
or
fstpl
add
xor
cmp
adc
mov
ja
ret
push
adc
inc
cmp
out
xor
jns
sbbb
push
aam
mov
mov
mov
inc
fwait
sbb
xchg
adc
fcomps
adc
loopne
inc
int3
cwtl
mov
inc
and
mov
or
inc
xchg
inc
sti
cmpb
cmp
pop
or
sahf
inc
lcall
adc
fmuls
call
addr16
or
mov
and
push
and
or
mov
xor
es
and
pop
pusha
sbb
mov
data16
mov
es
js
jno
out
test
cmp
inc
cmp
stos
popa
cmp
jnp
sbb
ficomps
addr16
movsl
mov
inc
out
add
stos
cmp
subb
mov
sbb
push
lcall
pop
insb
adc
or
xchg
mov
adc
call
adc
cltd
imul
jns
lods
sbb
pop
into
fsubr
inc
xchg
lods
fisubs
jmp
sub
sub
inc
xor
and
cmp
dec
add
push
push
enter
adc
sub
push
movsb
lods
lods
pop
lods
add
jnp
sbb
and
inc
jns
mov
jbe
add
jo
or
sbb
push
popa
or
or
dec
or
push
fstps
xchg
xor
inc
jmp
sbb
or
sbb
mov
inc
out
adc
cmp
adc
fisubrl
loope
jge
int3
sbb
adc
or
sub
adcb
pop
adc
hlt
call
jbe
push
fucomp
pop
or
aaa
divb
jb
push
xor
cmp
xor
mov
or
xor
ss
or
jp
jge
or
pop
cs
adc
push
sbb
aad
mov
push
cmp
sbb
cmpl
cmp
pusha
mov
mov
rorl
aaa
sbb
adc
dec
sub
loopne
sub
addr16
addr16
pop
sbb
or
iret
or
mov
mov
sbb
fmull
sbb
push
rclb
mov
adcl
inc
inc
jo
lahf
xor
pop
adc
push
push
stc
out
into
xchg
xchg
adc
or
ret
rcr
mov
jmp
and
cmp
xor
lock
jnp
mov
test
inc
cmpsl
jnp
or
outsl
test
jo
add
iret
das
mov
aaa
add
sbb
aam
mov
es
fs
adc
and
or
addb
loope
cmp
daa
cmp
mov
push
in
jmp
outsl
add
sbbl
adc
adc
loope
sub
mov
in
xchg
xor
repz
pop
shlb
pop
mov
dec
push
insb
or
or
sub
and
arpl
popa
outsl
xchg
pop
cwtl
cmp
nop
push
ficompl
lods
rcr
inc
dec
fld
push
notb
dec
test
fucomp
mov
test
mov
mov
gs
pop
fs
and
ds
xchg
xchg
and
xchg
enter
inc
xor
shlb
xchg
adc
mov
icebp
cmp
cwtl
into
push
shrb
mov
jp
xor
nop
pop
leave
loopne
and
cmp
and
gs
addr16
adc
push
xchg
pusha
jbe
lods
and
inc
outsb
add
sbb
mov
test
xchg
or
imul
pop
push
mov
dec
sbb
pop
adc
sbb
test
shll
pop
lock
addr16
or
sldt
add
and
rolb
dec
or
sub
jbe
lea
cmp
filds
lock
add
jle
mov
push
orb
add
testb
in
pop
add
bound
pop
fildl
mov
sbb
adcl
pop
add
fcomp
leave
sbb
xchg
fildl
add
add
lret
and
pop
jle
add
add
push
push
punpckhdq
loopne
clc
pop
sbb
or
add
popf
add
adc
adc
pop
sbb
rorb
cmp
iret
sbb
sbb
scas
pop
sti
dec
mov
mov
iret
lcall
adc
jge
add
xor
loopne
ja
sbb
adc
sbb
add
push
sub
fimuls
test
add
jno
pop
arpl
sahf
sub
dec
das
push
or
pusha
arpl
sbb
outsl
push
adc
or
jo
loop
add
scas
add
cmp
rcrb
sbb
add
popf
jge
jl
mov
addb
push
fcompl
inc
push
mov
or
into
adc
add
add
sub
dec
add
jl
pop
cmp
jo
daa
mull
cmp
jns
imul
jne
push
insb
push
jbe
jg
dec
pop
sub
jns
inc
insb
dec
fwait
sti
push
pop
and
imul
and
pop
ja
jne
dec
and
add
sbb
push
orb
mov
imul
pop
pop
inc
inc
inc
loopne
bound
in
scas
dec
dec
jl
pop
or
gs
jbe
imul
jbe
add
jnp
cmp
fdivs
add
lcall
add
jne
jbe
jns
mov
jne
sub
and
mov
push
adc
and
jnp
jns
pop
testb
push
popf
jl
add
jnp
iret
cmp
jl
jle
push
imul
cmc
jle
jg
loope
int
push
cmc
pop
repz
dec
sub
pop
adc
insb
jae
cmp
adc
xchg
imulb
jbe
enter
dec
cmp
xchg
jl
pop
outsb
ret
push
xchg
sbb
mull
and
pushf
sbb
jge
pop
jge
mov
xor
sub
push
pop
mov
push
nop
mov
inc
rclb
inc
jbe
xor
add
mov
jbe
adc
mov
rolb
nop
insl
mov
push
adc
or
int3
xchg
or
mov
or
sbb
push
cld
jg
or
mov
jge
cmp
dec
mov
pusha
or
or
or
pop
xor
add
add
dec
pop
mov
hlt
ds
xchg
xlat
push
pop
int
add
insl
fdivrs
mov
mov
lcall
add
js
inc
jae
cmp
clc
adc
xchg
sbb
pop
sub
pop
dec
bndstx
inc
xorb
push
add
loope
push
pushf
cld
decb
push
mov
mov
int
and
sbb
leave
rcrl
cmp
xchg
insb
popa
dec
adc
and
push
ja
push
addr16
push
xor
jno
push
stos
lahf
and
sbb
or
popl
mov
pop
lahf
dec
pop
pop
add
outsb
out
insl
pop
cwtl
pop
sbb
jne
add
imul
jnp
lods
fldenv
sbb
aaa
jecxz
orb
addr16
pop
pushf
pop
push
or
andl
pushf
pop
push
pop
xor
repz
add
movl
cmp
data16
hlt
xchg
jl
icebp
xchg
rorb
jge
fldt
pop
jge
add
js
sbb
daa
sbb
xor
fcomp
test
stc
bswap
xchg
dec
lcall
adc
jb
adc
add
sub
hlt
pop
pop
stc
lods
sub
add
cmp
pop
xchg
pop
mov
add
in
add
inc
mov
imul
popa
sbb
add
jecxz
and
xor
pop
inc
out
inc
jle
push
pop
xchg
lock
adc
xchg
data16
jne
sbb
or
xchg
mov
pop
out
ret
mov
es
mov
cli
stc
add
add
adc
es
jbe
jp
inc
xor
fwait
adc
push
call
out
add
jb
cmpsb
xor
add
mov
rolb
inc
cmpsl
jae
pop
lahf
or
jns
or
xor
push
mov
push
mov
lcall
pop
xchg
sbb
lcall
xchg
fldl
mov
mov
pusha
sub
and
adc
mov
add
lock
mov
shll
inc
and
mov
and
sbb
xchg
lret
fisubs
push
pushf
xchg
jge
ss
dec
xchg
jp
xchg
jo
loop
push
mov
inc
daa
pinsrw
mov
push
loopne
pop
xor
cltd
cs
pop
shl
xor
sub
das
daa
or
adc
jo
imul
push
js
mov
add
xchg
clc
dec
rorb
rcrl
lret
loop
insb
lret
mov
pop
sbb
addr16
pop
out
push
xorb
jge
imul
and
outsb
in
mov
mov
jbe
sub
jge
es
and
in
and
dec
push
dec
out
lahf
xor
jmp
in
jbe
insb
icebp
popl
pop
pusha
mov
push
sarl
xchg
jo
or
push
mov
pop
push
push
cmp
xor
add
and
cli
mov
xchg
les
and
outsl
pop
int3
inc
jns
pop
repz
jb
pop
push
aad
or
pop
xchg
orb
sub
pop
add
ja
mov
sbb
pusha
push
jge
sub
daa
lods
imul
cs
imul
jne
test
fidivrl
and
push
aas
imul
ja
pusha
pusha
pop
cmp
mov
in
je
sbb
insb
cmp
mov
in
scas
cmp
fdivs
fsubrs
pop
dec
mov
insl
jns
push
mov
mov
xor
inc
lods
lret
je
adc
data16
pop
call
or
and
pop
or
jno
jbe
mov
inc
jno
inc
or
or
push
add
dec
dec
push
or
dec
adc
mov
test
fistps
sahf
popf
inc
or
sub
mov
rcll
inc
test
dec
jle
push
ja
cmpsb
mov
dec
stos
or
cmp
leave
or
inc
mov
xchg
pop
adc
sbb
pusha
fisubl
mov
xchg
and
jnp
movsb
dec
mov
test
cmp
cld
cmpsl
cmp
adc
jbe
stos
lods
jnp
xchg
insb
jne,pt
push
ss
jnp
insb
insl
add
sub
test
jb
jae
testl
jb
inc
push
sbb
mov
sbb
push
jge
jae
aaa
lods
cltd
pop
popf
push
fldl
push
out
scas
cs
push
mov
pop
add
add
mov
insl
outsb
insb
dec
mov
jns
dec
shll
xchg
push
jns
jge
iret
mov
insb
dec
cwtl
adc
lcall
adc
iret
pop
ficoml
pop
push
inc
pushf
mov
or
push
insb
dec
in
xor
loopne
push
or
sub
pop
inc
inc
cmp
push
push
xor
jns
jmp
sbb
cmpsl
xor
shlb
pop
ja
pop
divl
pop
data16
out
test
jns
arpl
fnstcw
and
sbbb
jp
loopne
push
imul
xchg
sub
jno
push
insb
mov
popa
aam
cltd
dec
cmp
or
bnd
xchg
insb
mov
arpl
test
pop
or
adc
lahf
pop
pop
pop
loope
push
cmp
pop
xchg
cmpl
lock
insb
fisttpll
xor
mov
jge
divb
mov
jae
xchg
dec
ffree
jl
jnp
jne
jle
inc
sub
mov
int3
add
pop
out
mov
inc
add
insb
jge
push
jae
sub
dec
mov
xlat
push
and
fiadds
xchg
jmp
imul
cs
pop
mov
pop
je
ljmp
and
push
sub
push
sbb
pop
mov
xlat
jo
mov
push
pop
dec
subl
inc
dec
fcom
push
mov
jl
outsl
pop
test
cli
movsl
dec
push
sbb
insb
xlat
adc
repz
pop
out
sub
xchg
or
dec
out
and
and
in
jae
jg
fistpl
rorb
mov
mov
add
push
sub
fwait
inc
xchg
sbb
xorl
push
rcrl
insl
dec
add
dec
ret
push
test
inc
dec
sub
cs
dec
pop
dec
sub
add
sub
dec
imul
sbb
insl
sub
adc
jns
sbb
repz
adc
mov
jno
popa
orb
lcall
aam
mov
mov
out
mov
xor
inc
fdivrl
les
je
dec
jne
push
jo
push
movsl
lods
xchg
or
add
sub
push
nop
mov
adc
adc
mov
mov
addl
push
cwtl
enter
mov
mov
pop
pop
dec
add
cli
sbb
and
sbb
fs
push
adc
ss
orl
popa
dec
xchg
inc
outsb
or
sub
shrl
cmp
xchg
add
fidivl
popl
lret
stos
cmp
in
mov
dec
int
inc
cmp
fstps
mov
ds
fsubrs
sbb
or
lds
notl
es
cld
in
inc
inc
adc
add
lret
adcb
outsl
cwtl
xchg
add
mov
sti
xchg
and
out
push
push
dec
dec
dec
dec
push
pop
mov
ljmp
sub
mov
sub
add
cmp
cmc
push
sarl
sub
cmp
sub
sub
test
lret
mov
inc
test
sub
inc
movsl
lcall
lret
add
in
test
ret
mov
mov
fwait
lcall
add
aam
lret
add
adc
ret
popa
pusha
shlb
js
in
push
mov
dec
xchg
adc
xchg
and
push
push
mov
rdpmc
xor
mov
scas
pop
mov
push
inc
fwait
dec
sbb
push
in
xlat
adcb
inc
pop
scas
and
insb
loope
sbb
movsb
and
pop
fdivs
dec
pop
mov
jns
pop
lea
fs
or
adc
gs
insl
test
mov
jno
cmp
adc
push
js
adc
sbb
mov
push
cmpsb
and
pusha
jne
cmp
aaa
ds
jbe
cmp
sub
cmp
dec
jl
aad
mov
sarl
pop
xor
out
and
mov
popa
sub
sbb
popa
or
inc
lods
push
jp
popa
imul
inc
pusha
out
jbe
es
xor
std
lret
sbb
jo
xor
pop
lods
push
insb
or
cmp
outsb
mov
jb
mov
pop
jno
data16
adc
movsl
movsb
es
sahf
jae
enter
jno
jp
mov
sbb
pop
fwait
xor
jge
xor
mov
out
add
push
rclb
sbbb
lods
movsl
bound
repnz
push
sub
and
or
mov
push
dec
pop
or
movq
sub
aaa
test
test
and
sti
mov
sub
popa
cmpl
je
mov
std
addr16
imul
loopne
add
std
insl
add
jne
outsb
xchg
cmp
sub
sub
out
jno
jl
add
push
imul
inc
rcrl
adc
cmp
mov
push
dec
das
insl
push
pusha
cmp
fstpt
pop
test
mov
and
lods
imul
add
sub
jge
ss
rcrl
adc
jp
sbb
cmp
xchg
gs
ljmp
xchg
test
bound
xchg
adc
int
inc
aaa
loop
shl
ss
cmpsl
push
pop
add
fidivs
negl
pop
cs
test
das
aam
or
push
push
and
fstpl
or
lret
addb
sahf
mov
xchg
and
push
mov
sbb
mov
nop
mov
sub
sub
mov
sbb
mov
fmuls
cmp
test
fsub
enter
lret
inc
stos
insb
and
ret
ja
sub
and
cmpsb
imul
cmpsb
imul
xchg
lret
test
add
dec
add
test
or
imul
push
stc
mov
xchg
or
or
inc
xchg
stos
pop
add
adc
add
and
or
loope
or
inc
jae
add
mov
add
add
les
push
roll
inc
js
orb
test
push
or
mov
pop
inc
add
outsl
fs
push
shl
inc
cs
imul
or
sub
idivl
sbb
dec
popa
insl
gs
imul
adc
gs
inc
cmpsb
gs
imul
je
xchg
and
jns
mov
mov
shll
gs
outsb
jne
dec
gs
mov
dec
cmpsl
mov
outsb
outsb
push
divb
lods
imul
les
mov
xchg
push
imul
call
je
outsb
addr16
adc
xchg
and
inc
cmp
sbb
lods
shlb
cmp
ret
add
jae
inc
push
ja
fs
or
pop
into
mov
jbe
imul
or
imul
or
outsb
in
test
jb
push
les
arpl
lret
adc
out
push
inc
dec
add
add
pop
inc
sub
incl
add
sbb
adc
add
inc
mov
or
insb
ret
data16
adc
xchg
ror
adc
adc
aam
mov
add
or
sub
punpcklbw
repnz
inc
inc
in
nop
jnp
fnstenv
inc
inc
push
inc
xchg
add
stc
jb
fucomp
pop
jbe,pn
rolb
and
sbb
xor
sbb
ja
sub
shrb
fs
cmc
repz
daa
push
loope
dec
add
iret
cmp
imul
jae
push
jae
es
movsl
xchg
daa
mov
fildl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
