xor
xor
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
push
mov
push
mov
mov
mov
pop
pop
ret
mov
push
mov
add
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
call
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
mov
mov
push
call
mov
mov
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
call
mov
mov
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
xor
xor
add
add
xor
xor
xor
add
xor
cmp
xor
xor
add
push
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
call
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
call
movl
movl
movl
mov
push
mov
push
mov
push
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
call
call
call
call
call
mov
pop
ret
lea
ret
lea
push
mov
add
mov
mov
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
mov
cmp
je
jmp
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
xor
divl
test
jne
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
mov
pop
ret
lea
push
mov
add
mov
mov
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
push
mov
add
mov
cmp
je
jmp
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
sub
mov
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
push
mov
mov
xor
call
mov
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
movb
movb
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
lea
mov
push
add
jmp
mov
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
lea
mov
push
mov
jmp
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
sub
add
add
mov
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
mov
mov
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
movl
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
pop
ret
lea
push
cmp
testb
pop
sbb
addb
test
xorl
jo
sbb
dec
andl
subw
sbb
dec
andl
data16
sbb
test
push
gs
andl
sbb
pop
jge
dec
xorw
jl
jge
sbb
jg
data16
es
jl
test
sbb
sbb
jge
data16
sbb
sbb
sbb
jl
test
test
sbb
sbb
dec
lahf
add
fdiv
mov
sahf
pop
repz
lock
repz
cli
cmp
sbb
pop
sbb
cmp
pop
sbb
cmp
pop
sbb
cmp
pop
sbb
pop
sbb
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
fsubs
lock
push
push
xlat
lahf
fmuls
mov
mov
lahf
fcom
movsl
pop
sbb
movsl
pop
sbb
add
fsub
lahf
pop
and
aam
jle
lahf
pop
loopne
pop
inc
dec
lahf
pop
loopne
pop
and
pop
loopne
dec
fs
pop
loopne
pop
and
loopne
pop
cmp
lahf
pop
loopne
pop
cmp
pop
add
lahf
pop
loopne
dec
push
lahf
pop
add
pop
hlt
jl
sbb
lahf
gs
mov
add
pop
xor
pop
add
pop
call
cwtl
sbb
sbb
rclb
pushf
sbb
sbb
pop
pop
add
pop
int3
add
sbb
lahf
pop
int3
lahf
pop
and
pop
add
lahf
pop
loopne
dec
sub
pop
add
pushf
lea
sbb
lahf
pop
int3
xchg
xor
insb
adc
pop
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
incl
pop
or
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
jmp
pop
cld
ljmp
pop
cld
lahf
sbb
dec
lahf
pop
add
pop
loopne
dec
xor
cmp
cld
pop
push
mov
enter
dec
lahf
pop
add
pop
loopne
dec
xor
xchg
pop
clc
sbb
pop
cld
sbb
pop
cld
xchg
xor
insl
mov
lahf
pop
int3
xchg
jo
sbb
popf
xor
pop
call
pop
add
pop
lock
pop
loopne
pop
inc
mov
in
xchg
jle
lahf
pop
loopne
fsubs
lahf
pop
in
lahf
pop
loopne
dec
push
sbbb
sbb
jle
lahf
pop
loopne
pop
cmp
pop
loopne
dec
dec
sbbb
sbb
jle
lahf
pop
and
pop
loopne
dec
dec
lahf
dec
lock
jge
movsl
pushf
cmp
hlt
repz
xor
insl
out
cltd
add
hlt
repz
repz
sbb
movsl
pop
sbb
add
lahf
insl
and
cwtl
sub
mov
sbb
sbb
sub
add
sbb
sub
add
sbb
addr16
cmpsl
push
pop
test
add
sbb
or
addr16
xor
sbb
sbb
insl
or
push
sbb
sbb
inc
leave
add
loope
adc
pusha
fprem
and
add
sbb
addr16
cwtl
hlt
sbb
jae
push
pop
pop
lea
mov
mov
insl
sbb
xlat
sub
pop
add
repz
add
repz
jns
and
movsl
pop
sbb
repz
ret
repz
loopne
lret
xlat
mov
add
fdiv
repnz
and
sbb
ficompl
sbb
pop
out
sbb
fcomps
out
mov
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
repz
mov
icebp
sbb
pushf
sahf
sbb
sbb
pop
out
sbb
fcomps
hlt
sahf
sbb
daa
sahf
dec
out
mov
repz
out
sahf
pop
out
cs
icebp
insl
sbb
pop
out
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
pop
out
sbb
fcomps
sahf
dec
out
and
repz
daa
sahf
dec
out
and
sbb
cmp
mov
sahf
pop
out
sahf
cwtl
and
push
sbb
sahf
pop
out
sahf
dec
icebp
mov
sbb
pop
out
cwtl
jne
sbb
lahf
std
push
xlat
movsl
pop
sbb
add
mov
mov
pop
cmp
mov
pop
push
sbb
fdivrs
daa
sahf
or
and
sbb
cmp
mov
pop
push
sbb
fdivrs
sahf
cwtl
and
push
sbb
mov
sahf
cwtl
and
push
sbb
sahf
or
mov
sbb
fdivrs
sahf
dec
cmc
mov
sbb
fdivrs
and
sbb
sahf
or
and
sbb
cmp
mov
sahf
pop
cmc
sahf
cwtl
and
push
sbb
pop
repz
repnz
push
xlat
add
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
push
push
push
call
mov
lea
mov
subl
movb
movb
movb
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
mov
mov
call
mov
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
mov
mov
call
mov
cmpl
je
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
lea
push
push
mov
sub
push
mov
push
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
cmp
je
mov
subb
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
xor
add
mov
xor
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
incl
mov
cmp
jne
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
call
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
push
mov
push
call
cmpl
je
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
push
mov
pushl
xchg
push
jmp
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
cmpb
jne
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
movb
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
pop
ret
push
mov
add
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
call
test
jne
mov
jmp
movw
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
call
lea
mov
pop
ret
nop
push
mov
add
xchg
cmp
jnp
mov
mov
lea
jmp
lea
mov
lea
mov
xchg
lea
lea
xchg
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
mov
mov
mov
push
call
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
mov
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
call
movl
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
mov
mov
push
call
call
cmp
ja
mov
xchg
lea
lea
mov
dec
mov
lea
xchg
lea
inc
dec
jne
lea
mov
mov
inc
inc
push
call
mov
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
mov
mov
mov
push
call
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
mov
mov
mov
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
call
movl
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
mov
mov
push
call
call
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
mov
pop
ret
xor
aaa
xor
xor
cmp
add
xor
xor
xor
cmp
cmp
cmp
xor
add
jae
jae
js
cs
insb
and
add
push
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
dec
inc
dec
jne
mov
lea
lea
inc
mov
lea
xchg
dec
dec
inc
call
mov
mov
mov
push
call
movl
movb
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
call
movl
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
call
call
movl
mov
push
call
call
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
dec
xchg
xchg
jmp
mov
xchg
dec
lea
xchg
mov
inc
inc
dec
dec
movl
movl
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
lea
mov
xchg
lea
mov
inc
dec
mov
mov
xchg
mov
lea
lea
movl
movb
mov
push
mov
push
call
cmp
jo
lea
mov
dec
xchg
mov
inc
mov
mov
xchg
lea
mov
lea
mov
inc
dec
je
mov
lea
inc
dec
inc
movl
movl
movl
mov
push
mov
push
mov
push
call
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
call
xchg
mov
cmp
jle
mov
inc
dec
dec
xchg
dec
inc
inc
mov
mov
xchg
lea
mov
mov
inc
dec
jne
mov
mov
dec
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
call
mov
pop
ret
add
add
xor
xor
xor
xor
add
subl
jae
mov
mov
xchg
cmp
js
xchg
mov
xchg
mov
xchg
xchg
dec
lea
mov
mov
xchg
xchg
mov
dec
mov
mov
lea
call
cmp
jnp
dec
dec
cmp
jle
xchg
xchg
lea
mov
inc
inc
mov
mov
mov
xchg
dec
inc
lea
xchg
mov
mov
dec
ret
nop
ret
lea
cmp
fldcw
or
clc
mov
inc
sbb
subl
loopne
es
loop
rolb
repnz
jae
mov
popa
int3
push
jbe
xchg
repnz
push
jg
add
add
add
pop
add
add
push
imul
jb
add
insl
nop
lods
lret
mov
test
test
cmp
add
lahf
add
add
pop
pop
add
push
add
push
outsb
jnp
mov
fadds
push
hlt
add
cmp
hlt
add
adc
lds
test
loope
aam
pop
cwtl
cmp
jl
testl
cmp
insb
xchg
xchg
inc
out
in
add
mov
add
add
add
in
std
xor
loopne
add
ja
xor
fisubl
mov
sahf
push
ja
xchg
mov
test
jg
add
push
int
test
aas
popf
push
fs
mov
inc
cmp
pop
bts
xlat
add
xor
mov
inc
xchg
mov
dec
add
add
lods
add
clc
leave
xor
add
les
es
into
leave
sbb
daa
add
flds
out
inc
add
add
xor
and
pop
stos
fmulp
xor
inc
mov
scas
add
add
or
add
and
testl
add
add
pusha
mov
shll
add
mov
mov
inc
popf
jne
cmp
addr16
xchg
sub
ja
clc
arpl
mov
cmpsb
add
xor
movsb
sbb
add
mov
and
cmp
pop
add
add
add
add
mov
add
bnd
push
fdivl
add
inc
xor
lods
add
mov
or
mov
cmpsl
lret
pop
flds
add
pusha
xor
add
mov
dec
out
insb
ljmp
pop
sbb
push
cld
into
imul
rclb
or
add
mov
add
imul
add
mov
adc
sub
and
jg
aad
push
scas
push
inc
and
add
cs
inc
in
std
nop
test
dec
test
loopne
das
daa
testl
pop
xchg
add
xchg
nop
js
and
fistpl
pop
add
pop
in
jae
lret
cltd
sbb
add
sbb
xchg
jmp
cld
add
imul
mov
xor
add
jb
xchg
les
add
mov
pop
adc
int
add
jmp
add
inc
iret
jge
add
mov
add
cs
add
out
add
xchg
add
add
add
mov
test
push
orl
pop
add
add
mov
add
in
mov
or
add
sbb
sub
inc
movsl
mov
cmpps
add
add
or
and
mov
and
add
bound
add
mov
sub
orl
dec
ljmp
leave
mov
sbb
xor
arpl
iret
gs
add
mov
bound
scas
add
mov
lea
adc
sbb
pop
push
add
flds
pop
jecxz
dec
out
and
notl
add
pop
add
sbb
notl
add
sbb
inc
out
sub
jb
push
xor
fistpll
cmpsb
adc
add
sbb
insb
add
jge
push
out
xchg
sub
ds
gs
and
push
les
push
mov
arpl
mov
cmp
mov
ficomps
push
sub
sub
mov
mov
or
jg
dec
mov
sub
scas
loope
and
jmp
push
loop
mov
sub
shll
lret
ret
rcll
mov
cltd
sbb
ljmp
mov
lock
outsl
jb
mov
stc
mov
fs
dec
mov
mov
mov
cmp
jecxz
out
or
ror
cmp
stos
pop
or
mov
xor
cs
push
test
imul
add
lahf
dec
lods
mov
cs
xlat
mov
iret
sub
nop
test
in
cmp
je
xor
fs
xchg
gs
int3
scas
loopne
adc
dec
ss
pop
mov
les
xchg
repz
sbb
jecxz
outsl
mov
or
add
ret
lahf
js
icebp
sbb
cs
or
loop
dec
push
aas
push
aaa
shll
mov
je
ret
imul
imul
jns
mov
cmp
sbb
pop
mov
xor
pop
jno
cld
inc
js
jb
xchg
lods
and
or
idivb
xor
inc
negb
std
loopne
jo
xor
cmpsl
push
mov
nop
icebp
out
cld
inc
inc
ror
insl
adc
add
xor
shlb
aaa
mov
adc
mov
imul
insl
mov
mov
ljmp
ljmp
sub
jne
icebp
mov
pmaxsw
add
mov
add
fiaddl
sub
push
in
imul
clc
shrl
xchg
fmul
sbb
sbb
cmp
adc
stos
lea
out
test
sti
out
out
add
in
mov
test
clc
or
pop
xor
dec
mov
xchg
push
dec
and
test
cmp
ja
test
mov
or
sbb
fsubp
dec
push
cli
arpl
add
xchg
out
loope
mov
jns
dec
test
mov
les
dec
fists
pop
rcrl
addr16
fdivrs
push
fidivs
icebp
adc
mov
cmp
jne
sahf
jmp
sub
call
xchg
aaa
in
jmp
in
insb
xor
sub
sub
orb
popa
mov
push
std
fldcw
fcoml
or
in
pop
bound
lcall
ret
adc
mov
in
insb
sbb
push
jle
cmp
add
fidivl
loopne
sbb
loop
imul
scas
mov
fidivrl
mov
mov
inc
inc
hlt
inc
xor
arpl
mov
lahf
or
jle
dec
aaa
and
jg
dec
cwtl
inc
add
adc
ds
insb
add
shlb
and
xchg
cmp
jno
jne
stos
push
aam
ljmp
out
xor
nop
clc
repnz
push
fdivrp
cmp
push
jl
pop
dec
out
add
xlat
in
sbb
mov
in
push
or
cwtl
test
clc
dec
push
inc
sti
mov
mov
mov
push
enter
pop
add
mul
add
sub
lds
fdivrs
fistpll
movsl
je
mov
sbb
sbb
sbb
fisubrs
dec
cmp
xchg
ja
js
xlat
sub
cmp
or
gs
fmull
subl
iret
xor
popf
adc
rorl
jg
cmpsl
int
xor
mov
inc
popf
and
stos
adc
push
decl
sub
add
lret
jp
in
in
mov
or
sbb
or
sbb
mov
outsl
push
aaa
mov
stc
insl
dec
aaa
fs
enter
sahf
ss
cmpsb
fidivrs
sahf
and
cli
rolb
cmp
sub
or
test
into
scas
inc
cmc
negl
xor
rcrl
fcoms
and
add
ja
add
clc
int3
insw
adc
lods
mov
jmp
xchg
js
xlat
repnz
xchg
mov
mov
les
xchg
inc
cmp
mov
adc
mov
inc
push
adc
jno
xor
inc
xchg
sti
mov
arpl
cmp
negl
pop
rclb
push
sti
pushf
adc
jle
loopne
mov
push
pop
cs
sub
sub
adc
mov
in
dec
repnz
mov
js
push
mov
pop
lea
lods
call
add
mov
xorl
mov
popa
adc
hlt
inc
ljmp
inc
mov
jp
jmp
pop
push
and
xchg
lahf
test
std
xchg
movsb
cwtl
in
push
jo
push
jp
mov
lods
mov
in
cmpsb
test
enter
leave
scas
and
pop
sbb
jp
jne
sub
xchg
xor
fucom
fwait
ret
ret
es
xchg
movsb
fdivr
dec
xor
imul
mov
popa
or
fnstsw
scas
jns
mov
clc
fst
mov
dec
stos
aad
lea
cltd
cmp
data16
imul
daa
icebp
frstor
push
xchg
sbb
sbb
xor
nop
sub
imul
jl
jbe
or
aad
mov
push
xor
mov
pop
xor
push
sbb
movb
mov
test
cmp
ja
add
and
scas
inc
cmp
loopne
mov
xlat
fwait
or
loop
add
cltd
cs
rcrb
push
cmp
lock
cmp
nop
push
mov
or
mov
jl
imul
mov
mov
cmpsb
imul
and
cmp
jne
lods
js
test
add
inc
mov
mov
incl
scas
aad
sub
adc
push
xchg
add
mull
repz
int
jnp
xchg
jle
aas
xor
cltd
mov
iret
inc
es
les
iret
mov
ja
lds
mov
push
inc
dec
sbb
cmp
inc
clc
dec
add
push
leave
pop
sbb
or
imul
scas
add
xchg
ljmp
mov
or
adc
sub
arpl
out
inc
inc
leave
xchg
stc
mov
enter
inc
add
jmp
int3
dec
pusha
push
pop
stc
enter
test
lds
test
fdivrs
xchg
pop
add
add
and
sar
jge
xchg
xchg
sbb
pushf
daa
push
ja
cmp
sub
ret
call
iret
push
mov
adc
sti
stc
iret
lahf
sub
test
test
ret
cwtl
cmpsb
inc
mov
cmpsb
scas
mov
push
xor
fists
inc
pop
gs
pop
lcall
push
cmp
xor
push
dec
fcmovne
jl
jl
xchg
outsl
mov
add
mov
xor
xor
pop
mov
mov
jp
cmc
xor
pop
fdiv
repnz
sub
outsb
ds
adc
scas
and
jg
mov
mov
rol
mov
cld
and
and
mov
call
fs
divl
pop
test
mov
int3
sbb
std
les
es
and
cmpl
mov
ds
fs
adcl
xor
leave
fcomps
imul
pause
inc
xor
or
andl
xchg
daa
jns
mov
or
pop
nop
leave
out
hlt
ja
imul
xor
into
jmp
lods
jno
pop
mov
cmp
sub
jne
mov
push
fstpl
stos
sbb
loopne
popa
repz
hlt
pushf
dec
inc
jnp
dec
flds
mov
add
mov
xor
pop
fwait
sahf
mov
cwtl
pop
ret
adc
ljmp
mov
insb
aad
sbb
add
jl
jb
nop
mov
imul
xchg
inc
enter
mov
and
mov
push
mov
sub
mov
or
or
dec
inc
cmc
into
fistl
mov
imul
mov
enter
and
fs
and
sarb
ror
jmp
mul
or
test
outsb
cmpsl
dec
aad
mov
test
cmp
adc
jge
mov
or
pop
cmp
outsb
sub
jbe
test
mov
push
add
es
jp
mov
and
cmp
test
leave
insb
ljmp
lods
pushf
and
cwtl
clc
add
lods
sbb
dec
rcrb
sbb
and
pop
and
lret
fstpt
inc
fiadds
iret
add
out
mov
mov
out
outsl
hlt
xchg
shll
jmp
push
xor
jae
or
enter
fsubs
jmp
or
test
roll
dec
adc
int3
inc
iret
je
or
fwait
loopne
cmp
cmp
add
mov
jbe
lahf
push
ljmp
in
pop
arpl
shrl
sbb
scas
dec
pop
jp
sbb
mov
lea
mov
rorl
dec
dec
add
pusha
jne
pop
fdivl
pop
std
inc
xchg
jmp
jnp
into
adcl
sub
or
xchg
mov
and
icebp
xor
js
sub
clc
in
sbb
pusha
pop
popa
int
mov
call
push
inc
adcb
jae
dec
mov
add
sbb
jbe
popf
inc
ja
cmp
xchg
pop
aad
sbb
add
imul
scas
push
mov
adc
out
mov
pop
cmp
hlt
fmul
inc
arpl
pop
repnz
dec
imull
push
mov
pop
and
int3
cmp
pop
sub
sbb
or
in
leave
push
icebp
rcr
aam
mov
jge
out
push
sarl
into
outsl
xchg
movsb
mov
jb
pop
jbe
mov
jge
sbb
push
cmp
daa
dec
xchg
push
cmp
mov
cmp
jo
int
xchg
push
popf
cmpsl
lea
push
addb
scas
push
mov
imull
mov
pusha
inc
sbb
cmpsb
xor
and
jle
ret
enter
pop
orl
add
cmp
pushf
lock
ja
and
pop
insb
fistl
subb
es
xchg
xor
cmp
aam
mov
fistps
jecxz
in
cwtl
pop
aaa
mov
lcall
sbb
sub
enter
or
jne
fcmovnbe
mov
jg
jb
mov
mov
inc
mov
pop
movsl
and
call
ret
int
scas
jnp
xor
divl
bswap
lea
rcrl
out
adc
inc
sbb
sahf
adc
ret
rorl
inc
lret
psrlq
xor
stc
fcmovnbe
jae
mov
fwait
ss
stc
cmp
adc
shl
js
cli
es
iret
xor
cmp
pop
stos
orl
and
into
jne
add
test
popa
xor
jno
adc
jo
imul
mov
add
data16
sahf
lods
pop
mov
mov
sub
mov
jns
mov
dec
add
movsb
imul
dec
push
ret
inc
mov
add
cmp
mov
xchg
mov
xchg
in
rcrb
xchg
push
rol
ss
insb
pop
jne
mov
or
pushf
push
shr
mov
leave
dec
aad
push
nop
loopne
lret
aas
sti
movsb
xchg
outsl
push
dec
loopne
gs
daa
inc
jecxz
or
lret
pop
mov
call
subb
sub
les
sub
mov
dec
sub
cmpsl
adc
das
cmpsl
ja
mov
sub
and
insl
sub
sbb
and
icebp
jns
arpl
fldenv
xchg
mov
icebp
pop
sub
in
lret
test
mov
mov
push
lock
lea
push
add
rcrb
aaa
pusha
sub
xor
aam
sub
ret
loopne
push
es
orb
sub
mov
fnstcw
lods
xor
dec
mov
mov
shlb
xor
rorb
mov
cltd
test
jl
push
or
call
clc
andb
sbb
push
xor
stos
pop
out
repnz
shlb
loop
sbb
stos
inc
xchg
jle
mov
xor
in
pushf
mov
in
dec
push
dec
subl
pop
cmp
inc
pushw
inc
or
sbb
push
jecxz
jo
pop
pop
add
xor
jle
fwait
bound
sub
sbb
sbb
int
leave
mov
rcr
lahf
jecxz
pop
repnz
add
or
jp
xor
mov
sub
mov
icebp
dec
out
cmpsl
jne
testb
ds
push
xchg
mov
sub
xor
push
xchg
inc
leave
mov
mov
jne
int3
sub
push
adc
insb
and
xlat
jp
das
xor
jle
adc
loop
mov
pop
sahf
ret
jp
push
cmp
adc
jae
and
bound
mov
sub
mulb
fcmove
fcoml
ror
imul
pop
scas
lret
sbb
jmp
dec
push
dec
mov
mov
or
sbb
js
push
jne
or
out
inc
enter
lcall
pushf
dec
and
mov
push
adcl
shl
xchg
scas
xchg
popa
in
and
cmpl
rcll
jge
xorl
cmp
dec
xor
add
push
sub
sbb
push
xor
xor
mov
and
push
test
push
push
pop
xor
test
cmpsb
mov
xor
gs
enter
pop
sarb
push
xor
inc
push
jge
push
test
in
sub
dec
test
movsl
mov
and
les
sbb
add
fmuls
xchg
jge
pop
push
inc
outsl
js
repnz
mov
hlt
lcall
add
dec
and
sub
ret
ja
adc
xchg
jg
pop
and
daa
test
mov
fisubl
and
inc
push
out
dec
jge
mov
mov
scas
daa
mov
das
pop
jle
sbbb
shll
jae
orl
sahf
mov
inc
test
xchg
sbbb
out
es
stc
xchg
wrmsr
fs
and
cmc
rcr
mov
xchg
arpl
iret
push
dec
out
cli
fs
pop
mov
inc
cmp
cmpsl
mov
js
loopne
pop
ret
xchg
cmc
dec
inc
pop
xor
call
adc
fdivp
adc
sbb
add
fidivrl
negb
cmp
scas
pop
insl
sub
sub
lods
aaa
shr
in
sar
xor
sbb
loopne
decb
inc
mov
repnz
les
insb
xchg
test
rcrl
iret
xor
fs
sub
adc
es
adc
mov
jge,pn
repnz
pop
push
nop
mov
shl
jb
or
push
mov
cli
jecxz
arpl
lea
dec
mov
sub
mov
aas
mov
sbb
dec
fucomi
sub
pop
std
call
jb
add
add
mov
pop
pop
push
shrl
jno
push
into
cli
cwtl
push
jae
cmpsl
dec
pop
and
xor
inc
lret
rep
mov
adc
push
jmp
inc
pop
jbe
pop
shr
lock
ds
pop
ret
outsl
sbbl
dec
and
push
xchg
ffreep
pop
ljmp
lods
lods
lahf
pop
inc
mov
fyl2x
pop
and
into
pop
sti
punpckhdq
loopne
mov
cltd
filds
sub
push
stc
sbb
sbb
xor
mov
xchg
inc
sbb
and
stos
dec
stos
xchg
out
xor
faddl
push
push
sub
ret
jg
or
xchg
jbe
mov
out
xchg
dec
mov
mov
mov
cli
icebp
repz
std
fistpl
or
imul
lcall
add
ljmp
bound
sbb
jns
stos
mul
ficoms
xchg
sbb
cli
mov
dec
mov
pop
lods
pop
test
dec
or
jae
cld
mov
leave
movsl
mov
scas
testb
lret
jne
xor
mov
dec
mov
xchg
add
jmp
adc
xorl
test
aaa
adc
or
sub
dec
ss
stos
mov
loope
insb
lcall
jle
outsl
lret
imul
ret
fistps
cmpsl
flds
dec
jae
inc
loope
mov
sub
in
mov
sub
orl
sbb
jno
imul
test
pop
lcall
mov
leave
xchg
jns
hlt
jb
fbld
or
or
push
in
pop
incb
or
hlt
aaa
add
stos
xchg
int3
inc
pop
xchg
lods
fimuls
test
xlat
mov
js
jne
pop
and
aaa
test
fdivrl
mov
sbb
daa
dec
pop
fnstcw
pusha
cli
sub
jl
inc
mov
stos
cmpb
sbb
jo
leave
push
lahf
test
push
test
and
int3
inc
aaa
sub
cmp
enter
pop
ljmp
push
das
int
pop
icebp
adc
int
imul
movsl
nop
ja
and
dec
cltd
cmp
iret
mov
cld
add
jle
xor
roll
js
js
pop
xor
cmpsb
leave
push
rcll
cmc
jp
sub
lds
xchg
adcb
fsubrs
mov
pushl
adc
and
and
icebp
mov
xlat
sub
scas
lret
and
jae
loop
dec
insb
icebp
mov
add
mov
push
sahf
push
lahf
jge
and
int
insb
loop
pushf
xchg
stc
dec
out
ljmp
sbb
ss
testl
out
add
mov
adc
hlt
scas
mov
js
or
lret
cmp
cmc
adc
pop
in
int
adc
xor
idivb
data16
cmp
subb
out
xor
pop
adc
mov
dec
movsb
xchg
sub
adc
jo
and
dec
adc
inc
mov
sbb
test
sahf
les
stos
mov
sbb
or
xor
jo
fisttpl
adc
xchg
adc
loopne,pn
fwait
aad
cmp
nop
xchg
iret
mov
cmp
pop
jb
lret
into
cmp
je
fs
roll
ds
jno
mov
ljmp
add
push
pop
pop
mov
jb
inc
push
nop
mov
mov
xchg
movsb
mov
imulb
push
mov
dec
adc
stc
jns
icebp
or
out
cld
sbb
dec
inc
mov
outsb
jno
mov
loop
rol
fidivrs
aam
mov
das
es
dec
add
and
dec
pop
mov
in
xchg
shlb
dec
pop
lods
or
mov
cld
add
push
inc
mov
leave
js
add
dec
pop
cltd
push
les
mov
push
adcl
cld
fldl
sar
mov
xchg
sbb
add
adc
stos
cmp
out
cwtl
pop
push
xchg
cmpsb
mov
incl
addr16
xor
dec
or
movd
push
call
xchg
ret
aam
and
or
dec
mov
inc
xchg
pusha
xchg
push
fwait
leave
and
insb
add
add
insb
xchg
bound
in
imul
imul
mov
inc
mov
push
adc
jp
jp
mov
sbb
mov
nop
orb
jne
iret
insb
mov
or
fistpll
xchg
push
inc
aas
jmp
faddl
out
or
lcall
push
mov
stos
adc
cmp
dec
cmpps
jnp
cli
cmp
in
es
lock
shl
ret
mov
mov
jae
movsl
inc
push
dec
cmp
popf
sub
jne
hlt
xchg
mov
xchg
cltd
sbb
out
imul
scas
xchg
push
jge
fsubrs
adc
fstpt
pop
shll
loope
hlt
mov
inc
loop
push
cmp
push
fiadds
lret
fldl
pop
mov
iret
fdivp
push
ja
pop
add
push
adc
and
nop
pop
movsb
sub
push
pop
out
jbe
movsl
mov
sbb
div
daa
dec
add
xchg
cmpsb
cwtl
jno
out
jl
mov
dec
sbb
push
xor
addr16
lahf
movsb
jl
push
sub
mov
push
out
adc
inc
icebp
cmpsb
mov
or
pop
sub
loope
call
call
mov
nop
and
mov
and
sbb
jns
xor
sub
sbb
cmp
js
xchg
push
mov
int3
lcall
fsubl
push
ret
outsb
lret
adc
sbb
dec
mov
push
add
xchg
jo
add
pusha
dec
pushf
push
hlt
movsl
mov
sub
das
lret
iret
rcr
mov
adc
sbb
cmp
cli
addr16
enter
ficompl
loop
test
fs
clc
in
xchg
mov
ss
cmp
inc
pop
test
cli
mov
adc
cmp
sbb
mov
push
das
nop
cmc
fiaddl
pop
or
and
inc
xchg
pop
imul
sub
or
repnz
adc
lods
or
xchg
cmpsb
xlat
sub
scas
pop
mov
mov
lret
ss
gs
jmp
dec
jo
mov
mov
dec
repz
xchg
xchg
jge,pn
sbb
inc
and
mov
jg
mov
xchg
adc
pushf
cmp
xchg
dec
cs
sbb
sti
mov
nop
jno
mov
fdivs
scas
jb
inc
outsl
dec
inc
jb
je
cmpb
aam
out
lea
imul
mov
cmp
mov
popf
fildl
lock
pop
inc
add
inc
mov
xchg
jne
inc
orb
nop
outsb
mov
jb
ret
add
mov
cwtl
xchg
ret
dec
imul
icebp
loopne
iret
cld
dec
clc
push
lret
sarl
mov
jns
mov
pop
push
lock
aaa
pop
mov
sub
xchg
add
aam
subl
daa
imul
pop
aaa
adc
or
popa
adc
lods
jne
mov
pop
push
aas
and
add
test
sub
inc
add
or
mov
daa
push
jg
push
frstor
pop
clc
xor
cltd
xchg
add
mov
pop
jbe
push
daa
jno
out
sti
imul
push
or
or
lahf
xor
sub
inc
mov
xor
test
mov
cmc
fs
dec
mov
test
out
xchg
ja
je
dec
loopne
lcall
mov
push
int3
cmpsl
int
and
cmp
and
loopne
sbb
xor
ss
sbb
in
fnstenv
xchg
mov
mov
mov
and
bound
pusha
aaa
jp
lods
cld
mov
xchg
hlt
mov
in
inc
dec
nop
add
jne
rorb
fistps
icebp
push
jmp
cmpsl
loopne
adcl
out
jnp
sub
stc
test
stos
xchg
lahf
insb
jo
or
dec
pop
jle
std
out
mov
adc
pop
negb
pop
sti
adc
mov
sub
enter
jmp
push
les
inc
jae
inc
push
lea
xor
imul
mov
hlt
pop
mov
adc
mov
mov
stos
push
cmp
sub
hlt
or
add
inc
push
aaa
add
push
popf
xchg
test
std
pop
stc
add
xor
int3
in
jno
in
outsl
ficoms
or
inc
cmp
scas
xor
and
pop
cmp
mov
scas
xor
jbe
xor
jge
sbb
daa
dec
xor
cmp
push
jb
int3
push
fs
mov
push
sub
movsl
jo
popa
and
and
test
mov
cld
mov
in
sbb
enter
pop
jge
or
inc
loop
mov
push
sub
adc
ds
mov
and
inc
push
add
jmp
jg
inc
iret
cltd
loopne
aaa
pop
jnp
xor
inc
mov
xor
push
outsl
cmp
fmull
xor
pop
cmp
adcb
mov
jg
cmp
mov
hlt
jecxz
loopne
mov
jl
and
lahf
push
testl
mov
imull
lret
and
jbe
out
shl
sbb
cmc
ret
and
test
adcl
lods
lcall
jg
pop
stc
mov
sbb
mov
xchg
stc
ss
mov
out
cwtl
fwait
cli
repnz
xorl
or
adc
add
pop
cmc
mov
mov
pop
sub
jecxz
adc
adc
scas
sub
cltd
and
data16
pop
lods
hlt
and
mov
pop
xlat
insb
push
sub
dec
mov
and
jle
pop
cmp
rcrb
pop
or
iret
jbe
inc
ficoml
and
repz
idiv
xchg
icebp
push
adc
cmp
xor
adc
ret
pushf
push
and
mov
aad
xchg
stc
nop
dec
mov
aas
ja
fnsave
hlt
stos
dec
mov
lock
rolb
dec
xlat
addl
sbb
mov
mov
add
dec
fldt
fstpt
pop
pop
out
fldl
int
inc
push
stos
xchg
and
cmp
add
sub
rcll
add
xor
std
jno
push
cwtl
dec
enter
pop
repz
mov
sub
jae
test
sub
mov
lcall
outsl
adc
pop
rcl
cmp
sub
and
ret
sbb
and
insl
push
lcall
pushf
mov
ljmp
hlt
lods
loopne
int3
mov
inc
lock
lahf
lock
xchg
add
stc
dec
cltd
test
jecxz
xchg
lods
sbb
inc
push
movsl
fisttpll
montmul
cmpsb
xchg
lcall
dec
cs
rcrl
jae
stos
push
jp
out
pop
imul
ds
gs
sbb
mov
or
mov
clc
jns
dec
repz
sahf
ja
jecxz
dec
rcll
inc
ret
or
pop
inc
fwait
daa
pushf
in
push
outsl
ficomps
stos
dec
inc
add
sub
cli
sub
leave
movsl
fstpt
sub
in
pushf
iret
xchg
or
mov
fisubs
cmp
xchg
mov
mov
cld
push
dec
dec
jae
out
test
lods
mov
mov
mov
jmp
jb
jb
loopne
pop
out
pop
or
push
adc
push
or
adc
stc
lret
jge
lea
xchg
jnp
popa
mov
xor
in
int3
pop
pusha
xor
iret
jle
sub
pop
xor
inc
mov
xor
push
shr
inc
popf
js
jne
popf
push
cmp
sarl
xchg
adc
or
dec
inc
imul
jne
push
push
jno
sub
mov
lods
mov
leave
negl
and
pop
je
pop
test
xor
inc
mov
pop
and
or
lcall
rolb
jl
aaa
adc
lds
shlb
scas
adc
sbb
cmp
into
movsb
inc
and
push
std
movb
push
xor
jge
push
lret
add
daa
dec
loope
cmp
sbb
jno
or
fisttpll
in
lcall
xor
dec
mov
rcll
push
test
inc
in
fsubl
add
enter
pop
mov
pop
mov
scas
jg
mov
xchg
scas
movsl
movsl
gs
and
add
mov
cmpsl
orb
mov
add
imul
mov
or
jo
mov
sbbb
test
fdiv
jbe
sub
sub
nop
movsb
ljmp
inc
cmp
mov
lret
jne
push
and
sbb
cli
iret
test
lcall
lret
adc
or
scas
or
aas
je
sahf
inc
aad
test
push
or
and
sahf
jle
adc
dec
stc
outsb
bound
inc
jge
adc
mov
ss
idivb
cmp
mov
sub
xor
dec
cmp
in
or
push
into
in
jmp
push
jns
pop
dec
imulb
adc
pop
subl
adc
xchg
add
roll
fdivl
cmp
mov
adc
stos
int3
push
sub
sbb
nop
fists
cmc
jb
jl
push
gs
xchg
or
repz
jnp,pn
inc
in
push
dec
les
add
xchg
mov
mov
mov
push
push
adc
dec
jmp
mov
aad
fmull
aas
push
lods
jb
fcomps
dec
xor
jbe
stc
mov
jecxz
imul
and
psubsb
pop
mov
adcl
push
mov
mov
pushf
inc
mov
test
das
add
mov
mov
insl
ret
shll
sub
sbb
jae
or
cmpsl
dec
lret
mov
icebp
mov
out
lret
scas
mov
dec
mov
pop
cmpsl
lock
pop
repnz
pop
sarb
loopne
sub
neg
aam
or
ret
stos
stos
gs
cmc
lods
push
adc
seta
mov
pop
popa
scas
dec
shrl
movsb
mov
sub
daa
mov
out
or
adc
jns
mov
stc
mov
add
jbe
clc
test
mov
shl
mov
pop
int3
scas
aad
add
pop
outsl
xchg
jnp
mov
fst
xor
jecxz
xor
jecxz
mov
sti
add
pop
int
test
jbe
ja
xlat
adc
fnstcw
inc
pop
pop
testb
xor
push
jge
push
adc
inc
add
push
fwait
push
bound
jns
inc
scas
in
mov
xchg
pop
loope
mov
icebp
adc
cltd
fbld
jp
xor
in
stos
mov
imul
dec
push
xor
mov
mov
push
xchg
iret
ljmp
cmp
lret
inc
mov
sub
out
xor
dec
scas
and
xchg
jno
insb
inc
pop
sub
inc
cmp
in
mov
pusha
shll
inc
ret
push
pop
imul
jae
call
popf
lahf
movsb
ss
jno
or
dec
pop
aas
xchg
adc
pop
inc
ret
imul
inc
scas
mov
movsb
rcll
fldcw
push
sbb
aam
sahf
jbe
arpl
mov
dec
or
push
cmp
aaa
sbb
xor
jecxz
jmp
int3
mov
mov
stc
fld
repz
cmp
scas
icebp
cmp
and
cmp
movsb
int
ss
dec
popf
shll
test
fistps
push
push
push
cmp
xor
or
decl
inc
rorl
out
mov
xor
js
lret
outsb
push
test
push
loop
inc
jae
pop
cmpsb
inc
cmpsb
je
call
push
subl
mov
sub
and
push
pusha
lret
ds
aad
lods
daa
and
inc
int3
sbbb
and
push
and
add
pop
mov
fimuls
dec
data16
pop
leave
pusha
aad
inc
pop
pop
pop
xor
push
sbb
sbb
cmc
outsb
repz
xchg
stos
jecxz
jg
xor
mov
aam
mov
mov
mov
das
adc
lea
add
std
adc
lea
pop
sub
inc
fxch
aas
add
shll
sbb
sahf
jecxz
cs
mov
stc
outsl
dec
push
push
loop
jp
stc
and
cmp
pop
ss
mov
cmp
jbe
xlat
out
inc
push
cli
pop
sbbl
or
divb
dec
jecxz
das
jge
pop
imul
mov
add
in
subb
cwtl
dec
xlat
ljmp
mov
sti
inc
jb
fwait
xor
lahf
mov
into
das
loopne
in
dec
lea
aas
flds
fpatan
xor
xchg
ja
push
sbb
notb
xor
and
les
adc
adc
pushf
insb
or
pop
sub
cs
sti
out
rolb
sbb
mov
mov
out
jmp
stos
not
je
int
jecxz
pop
mov
fisttpll
lea
dec
jno
cli
mov
mov
in
inc
subl
xchg
rcr
inc
call
inc
aaa
mov
outsb
das
loope
addr16
jo
jae
jecxz
adc
sbb
repz
divb
jns
cwtl
lds
push
mov
mov
cld
leave
jle
lret
push
fsts
loopne
addr16
outsb
arpl
and
iret
jno
or
jo
aam
into
mov
es
dec
insl
fsubl
imul
lds
mov
cmpl
xor
xchg
inc
xchg
add
sbb
test
ret
push
enter
faddl
xchg
inc
sbb
jl
ja
mov
out
and
jbe
ret
push
cltd
mov
dec
xor
pop
or
adc
mov
ljmp
shll
push
sbb
mov
sarl
or
or
mov
mov
add
mov
mov
mov
jns
push
out
in
sbb
and
test
js
mov
jl
push
mov
addr16
lds
jg
mov
aam
mov
ficompl
test
xor
mov
ss
ja
xchg
mov
mov
xchg
or
rolb
movb
or
in
push
mov
pop
stos
fistpll
aam
stos
das
pop
insb
mov
jl
repz
jle
js
in
add
pusha
pop
stos
iret
cmp
dec
ret
enter
int3
inc
iret
out
jae
aam
push
pop
outsl
in
push
mov
lock
sub
add
xchg
mov
add
push
scas
sbb
jg
adc
mov
test
xchg
movsb
dec
fmul
in
fcomi
jmp
out
inc
pop
jmp
dec
push
fcmovbe
mov
cmp
add
int3
cmpsb
xchg
pop
jno
pushf
fidivrs
in
lds
mov
shlb
aad
iret
pop
pop
movsb
pop
dec
or
mov
jbe
xchg
arpl
mov
sbb
pop
nop
daa
dec
iret
dec
cmp
jbe
push
ret
in
jl
mov
out
shlb
lock
pop
xchg
lahf
and
push
ja
loope
pop
lret
pop
push
sbb
pushf
inc
add
in
iret
push
mov
or
test
movsb
scas
loope
sub
sub
gs
cmp
cs
sbb
movsl
mov
dec
and
or
je
pusha
subb
fistps
mov
add
test
data16
sub
pop
lock
add
pop
mov
xchg
lcall
jecxz
dec
cwtl
add
in
dec
cmp
jae
adc
xchg
xchg
arpl
lock
xchg
and
stc
int
lahf
scas
sub
cld
push
lret
jb
cmp
jl
sbbl
mov
cmp
int
sub
loop
xor
stc
fsub
int3
fs
push
fstl
iret
enter
adc
xor
out
cli
mov
mov
cmp
cli
and
adc
mov
cmc
imulb
jmp
adc
icebp
adc
aaa
cmpsl
add
xor
jae
lods
test
push
outsl
xlat
sub
mov
in
data16
ret
gs
aaa
loopne
mov
dec
in
mov
fnstcw
mov
sub
pop
mov
loop
scas
and
pop
pop
and
adc
mov
jmp
call
aad
xchg
iret
nop
test
push
xor
jb
cmp
and
pusha
je
cmp
loopne
mov
out
cld
inc
call
mov
jo
add
insb
add
or
ficomps
sahf
dec
inc
mov
movsb
das
rcrb
mov
sahf
in
cltd
roll
fcomi
cli
jb
std
data16
enter
cmpsl
inc
cmp
aaa
icebp
cmp
lcall
aad
mov
mov
mov
out
lock
shl
and
fmuls
rol
leave
pop
pop
mov
lcall
dec
push
ljmp
mov
lahf
mov
and
jo
and
movsb
adc
cltd
sub
mov
push
mov
test
add
clc
pop
jo
xchg
sbb
rcrl
movsl
movsb
stos
jecxz
int
xchg
notl
je
xor
sbb
xchg
ret
test
xor
xchg
sub
add
dec
sub
jecxz
int
add
dec
fwait
dec
lods
add
mov
idivl
xchg
push
pop
cmp
add
mov
push
addb
mov
fcoml
xchg
divb
mov
std
repz
nop
cmpsl
mov
pop
mov
fmull
lahf
test
mov
inc
dec
sbb
popf
jne
lds
fists
mov
pop
jmp
rcll
mov
dec
roll
in
mov
stos
push
sub
ret
insb
sbb
ss
cmp
jle
mov
in
mov
pusha
testl
test
inc
fisubrl
or
mov
push
sbb
xchg
dec
and
inc
outsl
or
fidivl
dec
or
imul
xor
cmp
aaa
mov
divl
into
hlt
xor
out
arpl
mov
or
dec
fisubrl
or
xchg
mov
imulb
int3
xchg
inc
xchg
pop
mov
movsl
dec
lds
dec
fadd
mov
int
scas
adc
lret
in
shld
pop
push
ljmp
jge
pop
push
sbb
imul
cmp
aam
jl
dec
push
dec
inc
cmp
mov
sub
scas
jo
sbbl
sbb
test
out
pop
inc
xchg
into
or
mov
mov
pop
jns
lahf
push
fsub
loope
xlat
jb
push
jg
cmp
movsb
outsl
movsl
mov
daa
outsl
rcrl
addb
sbb
add
xor
in
dec
inc
pop
pop
inc
int
mov
mov
lcall
pop
fdiv
out
sub
subb
mov
fisubrs
popa
popa
and
aas
or
insb
test
ficompl
cmpsl
mov
xor
and
cmc
ror
pop
or
imull
sti
lret
inc
rcl
cltd
mov
sbb
mov
test
xchg
pop
loop
loop
and
fs
lret
mov
sub
in
add
out
clc
es
mov
sub
mov
into
ljmp
in
add
inc
les
pop
xchg
icebp
pop
fists
or
outsb
mov
nop
loopne
mov
xlat
push
dec
mov
in
rorl
jmp
fcoml
outsb
dec
dec
mov
dec
fptan
insb
mov
fists
dec
xchg
std
inc
mov
cmp
cs
pop
or
imul
ret
jmp
mov
xor
nop
mov
jns
jb
mov
xchg
je
stc
cmpsb
jecxz
cmp
jecxz
dec
lea
addr16
js
pop
mov
cmpsl
or
xchg
mov
call
pop
inc
ror
das
lahf
mov
mov
loope
shlb
sub
rcll
or
cmp
ret
sub
adc
movsl
lret
cld
xchg
into
mov
fistpl
pop
dec
fisttpll
mov
adc
iret
push
xchg
lret
dec
inc
ret
pop
adc
cmpsl
insl
stos
cmp
push
xchg
cwtl
dec
xchg
xchg
popa
repz
test
and
or
pop
lsl
sub
pusha
mov
fbstp
dec
jge
dec
jno
pop
mov
mov
sbb
jecxz
mulb
dec
stos
rolb
out
ljmp
push
dec
dec
ja
mov
adc
or
bound
xchg
xchg
sub
xor
test
pop
loopne
enter
lahf
test
rorl
fcomps
fwait
jecxz
rcrl
inc
push
add
cmpsl
arpl
out
jbe
push
bound
jae
in
out
xchg
xchg
inc
dec
lcall
sbbb
lret
cmpsb
cwtl
inc
jp
cmp
mov
or
mov
mov
lahf
and
mov
sbb
insb
xchg
dec
addr16
in
bound
sahf
xchg
and
int3
je
sub
loopne
push
or
and
pop
mov
xchg
or
pusha
xchg
jle
mov
in
enter
je
iret
cli
sub
ret
icebp
pop
push
pusha
mov
jae
test
push
ffreep
hlt
popf
adc
push
mov
out
jnp
fisubl
mov
sbb
or
outsb
scas
jecxz
mov
adc
movsl
repnz
dec
dec
outsl
leave
rol
sbb
jg
mulb
dec
cmp
stc
movsl
or
mov
aaa
pop
cmpsb
xchg
add
int3
jl
cmp
add
lds
sub
scas
mov
dec
cmp
enter
mov
jge
call
fwait
daa
inc
int
cmp
jae
jno
or
dec
mov
bound
cwtl
cltd
xor
mov
bound
pop
adc
mov
lods
inc
and
mov
popf
shl
enter
pop
mov
mov
adc
insb
mov
pop
sbb
ds
out
movsl
rol
and
sahf
xor
cltd
adcb
cld
push
xorb
pop
loop
scas
lret
in
pop
ds
js
push
sti
pop
scas
test
push
and
iret
fsubl
jnp
outsb
sbb
adc
mov
jg
dec
mov
mov
xchg
mov
xor
mov
xchg
sub
ret
sub
cld
pop
lret
jno
imul
pusha
sbb
sbb
test
loope
outsl
out
mov
pop
inc
stc
dec
cmc
mov
adc
and
shl
lahf
cmp
cmpsl
dec
and
cwtl
sub
aad
ja
loopne
mov
into
jo
shl
popf
push
xor
outsl
pop
push
movsl
adc
push
popf
imul
aaa
popl
fs
pushw
fisubrl
mov
cmp
cmpsl
jge
sub
jmp
cmp
cmc
sti
test
mov
or
cmp
pop
xchg
or
mov
inc
cmp
cmp
sub
ljmp
xchg
rcrb
test
cmpb
mov
movsb
pop
sar
adc
into
cmc
pushf
insl
adc
jmp
mov
mov
nop
xchg
fmuls
jb
insl
mov
aas
fnstenv
repnz
mov
out
lea
call
aaa
rcrl
mov
mov
jb
std
ficompl
test
xchg
inc
fisttpl
das
jle
andl
mov
mov
ret
ret
fstps
inc
mov
test
cld
dec
jns
lret
imul
mov
pop
mov
mov
jmp
xchg
lahf
sub
mov
aam
push
test
out
data16
iret
out
insl
xchg
loopne
dec
cld
out
xchg
xlat
out
xchg
ljmp
daa
lods
notl
sbb
inc
inc
cltd
mov
bound
mov
pop
mov
push
test
jno
mov
mov
loop
push
add
xchg
mov
test
dec
mov
js
push
stos
shll
out
dec
mov
xchg
xchg
pop
lret
xor
lcall
sub
imul
je
pop
nop
pop
mov
pop
scas
push
dec
divb
test
je
ja
into
pop
dec
xchg
add
or
lret
adc
push
add
ret
out
push
push
leave
bound
and
in
push
int
xchg
sahf
lea
jle
das
pop
test
cld
jp
movsl
mov
mov
daa
xor
dec
loop
dec
jne
pop
push
mov
pushw
fists
sub
jmp
imul
adc
dec
pushf
lea
fstpt
push
inc
push
xor
insb
repnz
test
add
jle
mov
in
inc
push
pusha
sub
inc
add
ret
pop
inc
shll
push
ret
mov
adc
icebp
inc
insl
jo
ficompl
cmpsl
notl
ret
dec
shrl
rcl
inc
xchg
jae
leave
imul
mov
popf
sbb
leave
dec
movsl
ss
lret
arpl
scas
pop
or
inc
lret
loop
pop
mov
or
das
pop
int3
addr16
sbbb
jmp
data16
shr
bound
lods
xchg
stc
add
push
mov
and
mov
sbb
daa
inc
adc
clc
or
jno
popa
jnp
loopne
testl
js
xor
in
pop
lahf
jge
mov
test
jl
dec
inc
scas
iret
push
cmpsb
push
add
in
test
enter
pop
imull
lret
lcall
or
fistpll
sbbl
hlt
mov
push
andb
sbb
jae
add
jg
xor
lods
pop
jb
sahf
pop
gs
js
jp
pop
sub
imul
add
mov
iret
test
rclb
das
or
pop
xor
enter
jge
cmpsl
and
and
or
movsb
sub
mov
aaa
lret
and
add
push
mov
jnp
sub
outsl
xchg
test
fists
outsl
loop
cwtl
add
fs
xchg
mov
pop
movsl
cmp
bound
pop
out
rorb
lods
int
cmp
ror
or
das
into
push
scas
or
dec
sub
fwait
push
in
in
ret
push
mov
adc
mov
add
fcmovu
xchg
mov
xchg
mov
aas
xlat
out
fldcw
repnz
lods
mov
cmpsl
daa
jp
push
enter
mov
loop
cli
lahf
out
or
mov
lods
push
fldenv
push
cmc
jne
rep
cmp
sub
sbb
loop
stc
sub
or
jnp
adc
nop
pushf
sbb
les
clc
sub
aad
adc
aas
xor
push
push
dec
xchg
mov
jecxz
jo
jmp
push
fucomip
incl
call
mov
hlt
add
push
fistl
push
sub
jb,pt
neg
xchg
das
pop
jl
mov
dec
frstor
aas
mov
dec
test
repnz
pop
movsb
loopne
mov
cwtl
cmpsl
inc
mov
xchg
pop
add
rcrl
jne
scas
lret
fisubl
mov
mov
lods
sti
lock
cli
mov
rcrb
repnz
and
adc
scas
dec
testl
call
lods
bound
push
mov
adc
mov
inc
scas
jnp
rcl
add
and
fsubs
mov
sub
sub
js
mov
xchg
sbb
fwait
xor
jge
mov
mov
mov
xor
push
add
xorl
dec
or
adc
or
pop
xchg
adc
inc
push
jmp
test
mov
mov
pop
xor
inc
sub
add
sub
xor
jno
cmp
addr16
jo
in
pcmpgtb
mov
int3
mov
inc
lds
movsb
in
jp
les
pop
int3
push
mov
xchg
jmp
dec
lds
jne
xchg
je
and
fisubl
cmpl
jmp
shlb
stos
sub
jl
push
xchg
lret
and
nop
or
pop
xor
jnp
notl
cmp
push
jb
enter
mov
into
jbe
jl
dec
inc
sti
add
aad
push
gs
popf
bound
mov
in
call
mov
outsb
fs
imul
push
adc
cmc
adc
nop
lds
lock
leave
shrl
adc
imul
sbb
mov
pop
outsb
or
orb
push
jnp
pop
sub
int3
icebp
lds
dec
dec
scas
dec
jp
and
mov
movsb
test
fdivs
mov
xor
syscall
js
inc
fnsetpm(287
cmp
pop
aas
jno
ficoms
jl
add
dec
xchg
jo
push
pop
dec
aas
outsb
jmp
pushf
movsl
xchg
push
ret
ja
test
inc
lret
ds
cmpsb
sarl
in
imul
enter
pop
ss
push
mov
sub
ret
push
cmp
inc
out
iret
int
and
and
cmpb
sbb
jecxz
pop
sbb
xor
lds
xor
pop
lods
mov
lcall
or
clc
lret
test
dec
outsb
loop
unpckhps
xor
gs
mov
add
mov
sub
fcoms
push
or
pop
int
popf
ret
sub
mull
jbe
rcll
xchg
sbb
or
cwtl
mov
lods
outsl
movsb
dec
jge
test
jge
mov
in
push
or
fs
xor
jns
push
fcomps
push
cli
push
xlat
cld
xor
pop
test
into
mov
into
ss
cmp
adc
data16
mov
or
imul
xchg
adcb
data16
jae
inc
mov
mov
lock
and
loop
mov
adc
dec
pop
push
gs
adc
dec
push
mov
sub
add
repz
and
imulb
cmp
div
pop
es
push
adc
decb
pushf
ret
ds
add
jecxz
pop
fistl
aad
mov
nop
dec
fcomps
shrb
jb
jo
dec
std
dec
pusha
je
xor
cmp
in
cmp
lea
movsb
mov
mov
fldenv
dec
dec
or
fcmovnb
xchg
pop
pop
jge
inc
ficompl
inc
adc
cmp
arpl
push
test
sarl
mov
push
mov
std
add
cwtl
insb
and
mov
cwtl
ljmp
dec
outsl
mov
dec
mov
mov
lock
data16
lods
nop
dec
shrb
sub
inc
add
shr
pop
rolb
dec
repnz
xchg
ljmp
sbb
or
aaa
ja
and
fcoml
lcall
mov
test
movsl
stos
mov
loope
push
xchg
push
rcr
and
or
mov
xor
sar
into
pop
pop
into
jg
stos
lahf
sub
adc
mov
loopne
fcos
xchg
sbb
or
aad
xor
fsubrp
mov
or
popf
or
add
int
inc
jecxz
pop
or
sub
push
in
ljmp
fisttps
adc
into
pop
in
jns
gs
push
or
xor
cmpl
mov
xchg
out
out
arpl
dec
dec
xlat
mov
mov
pop
mov
xor
ds
shll
xchg
decl
jo
push
inc
shrb
adc
push
lds
push
movsb
xchg
and
add
jnp
imul
in
pop
int
arpl
push
iret
pop
jns
ret
adc
mov
add
xlat
jae
or
popf
mov
xor
in
fidivrl
test
jno
nopl
dec
cmp
test
scas
or
or
movsb
pusha
adc
aaa
dec
repnz
push
push
leave
cmp
hlt
pusha
lock
arpl
imul
or
cmp
aaa
xchg
mov
or
clc
push
int3
cmp
xor
push
lds
jne
scas
sub
jns
shll
add
bound
push
es
add
in
and
sbb
pusha
dec
daa
inc
sub
cmp
dec
jno
jg
jl
out
dec
add
push
inc
adc
dec
mov
mov
push
xchg
push
shrb
pop
sbb
cmpsb
push
gs
cmp
xchg
jne
mov
loope
in
fs
sub
test
movsl
out
and
outsb
ljmp
and
sbb
pop
add
mov
add
pop
mov
mov
test
adc
or
xchg
push
daa
jbe
fsubl
add
outsb
inc
es
adc
int
lock
test
mov
push
add
adc
xchg
out
xchg
movaps
int
xchg
cs
lds
lret
loop
cs
std
mov
out
sbb
pop
int3
test
enter
sti
mov
or
loop
loopne
stc
outsl
adc
inc
ss
jp
cmp
fmuls
or
mov
xor
cmp
xor
or
inc
test
fldcw
xor
lahf
pop
and
loopne
int
outsl
adc
lods
mov
adc
pop
lods
sub
mov
xlat
fs
and
fcom
adc
jge
test
jno
nop
gs
add
and
or
inc
jb
into
cmpl
xchg
or
sbb
pop
add
mov
pop
aad
outsb
xchg
xor
repnz
sub
mov
mov
nop
and
cltd
aas
outsl
les
dec
je
xorl
loopne
out
xchg
enter
ss
je
mov
mov
push
dec
xor
icebp
fcomi
adc
pop
xchg
jae
popa
inc
sub
into
das
sbb
mov
mov
push
fdiv
dec
out
loop
test
cmpsl
inc
pusha
test
icebp
outsl
popf
push
cld
lret
out
lret
mov
icebp
je
stos
and
lock
out
pop
lret
sub
sar
push
mov
stos
rorb
xchg
scas
add
sbb
insl
inc
and
dec
in
jg
xchg
xchg
inc
pop
ljmp
sub
mov
pop
and
ja
movq
cmp
xchg
rol
cltd
cmp
dec
test
cmp
push
pop
sbb
ffree
xchg
xchg
adc
rcll
cmp
aam
mov
out
jbe
xor
mov
mov
xor
cmp
jb
jo
cmp
xchg
jb
dec
sub
sti
ja
icebp
adc
inc
and
mov
sub
push
xchg
lahf
add
adc
lods
out
repnz
popa
mov
jns
mov
xchg
xorl
cmp
pop
mov
lock
jp
push
loope
lds
lea
stos
decl
fbld
mov
mov
outsl
xchg
xchg
cmp
xchg
lret
sbbl
out
lret
mov
inc
mov
popf
xlat
stos
xchg
outsb
leave
and
out
sbb
or
sub
in
add
pusha
idivb
jbe
push
ret
fstps
mov
sub
push
jmp
push
mov
ljmp
xchg
enter
les
dec
imul
scas
outsl
mov
push
sahf
xlat
fists
xchg
int3
test
adc
mov
stos
hlt
stos
sub
arpl
dec
rolb
mov
or
mov
pop
aaa
push
cmp
add
insl
cmc
pop
mov
scas
fimuls
jmp
sarb
lret
jl
and
lcall
scas
bound
jmp
sub
sti
mov
daa
inc
stc
dec
cmp
inc
nop
jl
sahf
arpl
adc
push
and
mov
cmovno
cmc
outsb
xor
imul
push
fnstsw
mov
pop
dec
hlt
cmpsb
fld
sti
in
cmp
enter
pop
mov
bound
gs
loope
dec
sbb
push
cmp
sbb
movsl
frstor
and
icebp
lea
mov
imul
xor
push
les
mov
js
fs
pop
stos
repnz
lcall
pop
fmull
insb
sub
mov
xchg
shrb
mov
mov
sub
jbe
and
jnp
push
adc
push
sub
shl
and
ljmp
ja
mov
aas
jae
mov
addr16
pop
stos
sub
mov
dec
ret
rcl
stc
es
mov
adc
cmp
cmp
xchg
and
cli
mov
lret
lds
sbb
mov
cld
jns
cmc
mov
les
inc
addr16
xor
xor
push
add
sbb
lods
adc
out
dec
cs
xlat
mov
ja
mov
call
inc
xchg
mov
lcall
lret
cmp
cmp
jns
flds
aas
mov
xchg
int3
pop
int3
sbb
xchg
fs
notl
pop
mov
int3
adc
pushf
sbb
subl
adc
aad
push
dec
nop
jmp
mov
jb
inc
and
in
jne
push
cmpsl
gs
cmp
repnz
loop
pop
cmpsl
lods
call
xor
orl
adc
and
mov
mov
fisubrs
cli
scas
mov
je
shll
dec
sbb
testb
cwtl
loop
lods
cmpsl
inc
repz
inc
je
cld
testb
lret
daa
aam
mov
imulb
mov
or
sarb
sub
push
push
ret
and
lcall
push
aaa
dec
call
arpl
ljmp
loopne
mov
xlat
mov
and
adc
filds
stos
xchg
or
test
sub
outsb
pop
jb
sbb
iret
push
xchg
xor
sbb
mov
gs
jge
out
flds
xchg
mov
ja
xchg
xchg
popf
call
push
xchg
mov
cwtl
or
inc
jecxz
test
mov
adc
repnz
mov
ja
add
leave
inc
adc
inc
or
fidivrl
into
push
adc
sub
dec
add
in
add
rcll
hlt
cmp
pop
in
aaa
push
xchg
rcrb
das
mov
jno
jns
mov
pop
pop
mov
lcall
mov
scas
je
outsb
adc
jne
push
mov
push
mov
shll
stos
jmp
xchg
sbb
out
dec
out
ret
xchg
xor
movl
mov
dec
push
and
ret
cwtl
jb
cmpsb
hlt
insb
in
push
cld
pusha
cltd
leave
or
aad
test
push
imul
inc
sbb
or
popa
mov
popf
xlat
mov
stos
inc
imul
xchg
pop
inc
sbbl
mov
jp
in
jecxz
insl
mov
bnd
fwait
push
hlt
idivb
cmovbe
or
cs
inc
aaa
adc
or
jle
pop
push
lods
int3
adc
pop
mov
xchg
lds
hlt
dec
rclb
jmp
mov
cmp
mov
movsb
and
jbe
mov
inc
sbb
xor
cmp
je
jno
sub
popf
dec
filds
jmp
inc
add
or
in
push
cmp
movsb
test
test
push
inc
jmp
xchg
cmpsb
pop
lcall
in
rcll
repz
icebp
loope
into
sub
fnstcw
cmp
inc
lahf
ds
and
pusha
mov
or
lods
aad
mov
jg
inc
xor
fwait
jle
ja
add
js
fldt
pop
sub
lcall
movsb
fdivr
and
or
adc
cmpl
mov
ja
mov
and
add
jnp
int
xor
int3
mul
cmp
xlat
pusha
inc
pop
jg
mov
push
sbb
pusha
test
sub
sbb
outsl
inc
aad
loop
negl
stc
fstl
sub
mov
ss
imul
outsb
in
fcomp
dec
dec
inc
out
sbbb
or
ret
sbb
into
fbld
loope
pop
push
pop
adc
push
imul
push
lds
leave
push
lods
cli
aaa
or
loop
subb
iret
imul
dec
lahf
sti
adc
push
gs
sbb
dec
test
inc
cwtl
and
inc
and
add
test
mov
push
sub
mov
lret
aad
pushf
les
in
test
mov
aas
lods
cmp
dec
bound
scas
je
pop
fwait
cmc
popf
jae
mov
std
ja
repnz
sbb
loop
xchg
ljmp
cmpsb
add
add
inc
frstor
das
flds
mov
imul
imul
sbb
testl
aaa
cmpsl
inc
or
mov
sbb
add
mov
dec
outsb
mov
sub
lock
and
pop
or
shlb
push
aad
lea
es
adc
insl
adc
sti
dec
jecxz
dec
xchg
adc
pminsw
test
stos
lods
push
xor
mov
mov
ds
mov
cmp
nop
xchg
cltd
stos
mov
add
jnp
cmp
mov
jo
mov
pop
push
sbb
roll
inc
lods
pop
iret
adc
sbb
xchg
cli
popa
call
pushl
xor
mov
jne
iret
dec
shlb
cmp
stc
or
test
hlt
fnstenv
popf
ss
push
inc
push
inc
test
popa
or
lock
push
int
rolb
dec
adc
out
mov
outsl
bound
sbb
in
inc
dec
xchg
pop
inc
add
rcrl
pop
sub
sti
addr16
jp
dec
mov
int3
dec
xor
push
aaa
add
mov
cli
fcomip
sbb
xchg
cmp
nop
jmp
pusha
jp
xorl
out
sub
mov
push
subb
and
int
or
mov
jle
mov
in
jnp
pusha
xor
outsb
iret
xor
outsb
ret
cwtl
pop
pop
inc
cmove
pop
pop
jae
repz
push
jno
int
stos
ds
call
fistl
xchg
jbe
pop
sbb
add
xor
push
adc
sbb
jl
nop
repnz
sub
popf
mov
hlt
inc
fwait
arpl
out
inc
ja
cmp
test
daa
testb
sarb
int3
scas
push
pop
jmp
add
shrb
scas
enter
mov
push
movsb
mov
adc
jbe
sub
jge
fcompl
daa
inc
daa
adc
notl
mov
dec
dec
ret
ljmp
jo
mov
add
pop
das
test
jae
test
jp
ljmp
lods
js
loopne
ficoms
xor
push
lock
loope
jne
sub
popa
adc
ja
loop
xor
movsl
jmp
xchg
sti
xor
insb
mov
add
ljmp
leave
mov
inc
dec
and
jmp
mov
test
xchg
lcall
jne
movsb
cmp
std
outsb
outsb
into
mov
rcrb
aad
in
mov
push
sbb
hlt
adc
and
inc
push
sbb
lret
int
fistl
mull
push
sub
rep
fisttpll
mov
sahf
sahf
daa
testb
leave
cmp
and
loop
push
push
stc
xchg
mov
fs
lea
inc
mov
bound
test
fmuls
or
cli
and
in
mov
or
cs
mov
bound
xchg
pop
subb
adc
adc
adc
adc
out
dec
lods
loope
cwtl
mov
sub
and
scas
sub
fmull
in
mov
mov
inc
gs
or
dec
in
mov
add
xchg
les
cmc
repz
jg
push
mov
sbb
or
int3
cmpsl
or
adc
adc
outsl
test
jmp
cmp
cs
mov
nop
mov
aam
dec
out
jb
in
dec
fstps
lcall
sbb
lea
add
out
xchg
mov
cmc
sbb
jns
push
hlt
jecxz
fildl
fwait
cmp
scas
pop
inc
jge
push
das
mov
notl
loop
in
testb
sarl
fldl
cwtl
pop
das
jg
aas
movsl
dec
mov
hlt
xlat
cld
dec
lret
add
jmp
mov
mov
pop
loopne
pop
sub
fildll
nop
mov
ret
inc
lods
mov
mov
lds
dec
sti
xchg
push
ss
insl
mov
cld
lods
jns
int3
mov
ret
pop
and
dec
repnz
push
add
cltd
loope
and
mov
pop
orps
push
xabort
loope
xchg
pop
pop
sbb
in
pop
rcll
sub
shrl
dec
movsb
xchg
inc
sub
call
cwtl
aas
xor
or
xlat
inc
cwtl
xor
insb
adc
sbb
dec
pusha
mov
gs
mov
call
or
fwait
sub
sbb
jo
scas
add
fs
dec
out
sbb
icebp
jns
mov
sbb
add
mov
out
and
jp
in
popf
mov
sub
mov
roll
dec
xor
xlat
jne
insb
clc
mov
ret
movq
xchg
or
ljmp
addl
xchg
sub
mov
jne
stos
ljmp
insb
je
imul
pusha
pusha
iret
stos
pop
iret
xchg
sbb
pop
jl
inc
xor
jae
enter
movsb
adc
es
cmpsl
fimull
xor
lds
imul
lods
scas
cwtl
pop
inc
push
jae
aaa
adc
cmp
mov
cs
adc
push
hlt
mov
cs
cltd
push
inc
jp
push
or
and
jae
xchg
orb
int
add
ror
jmp
xchg
fidivrs
jb
lds
dec
mov
scas
cmpsl
sbb
and
decb
cmp
imul
cmp
push
bound
xchg
mov
mov
aas
test
sub
jno
push
jl
mov
in
push
int
fdivl
push
xchg
aaa
inc
js
loop
or
ds
inc
or
out
cmpsb
bound
das
enter
pop
jno
fs
ret
das
loope
inc
sub
sbb
ds
lods
movsl
repnz
imul
lret
data16
sbb
add
jge
sbb
sbb
pop
dec
insb
lock
sub
daa
scas
xor
fadds
sbb
xor
fmull
and
outsb
roll
adc
cmp
jg
or
mov
push
repnz
pop
repnz
cmp
push
sbb
xchg
sub
lret
iret
mull
xchg
mov
cli
adc
jae
sahf
inc
push
ret
test
dec
jecxz
icebp
mov
outsl
push
xchg
loop
fidivrs
ds
test
xchg
ret
movsl
sub
cmp
les
out
js
cli
push
rcrl
or
mov
cmc
cmc
stos
nop
xor
adc
adc
popf
jo
test
mov
mov
pop
add
pusha
or
cmp
in
sub
fdivr
jno
mov
gs
lcall
mov
inc
mov
mov
aaa
cld
es
or
mov
inc
repnz
xlat
adc
and
loop
sbb
xchg
jmp
test
dec
cmc
aad
sahf
mov
jmp
add
add
dec
push
test
mov
sti
jns
lea
jb
mov
je
mov
mov
adc
fildll
fldt
test
jge
jg
cwtl
xlat
sbb
xchg
movsl
sub
cltd
aas
cs
out
rorl
jno
notb
inc
std
inc
pushf
sbbb
les
icebp
lret
sarb
cld
ja
mov
je
aam
mov
ret
ja
mov
jo
inc
mov
rorb
aam
xchg
aam
jbe
ret
rorb
and
inc
add
xchg
nop
in
ljmp
inc
lods
in
xchg
out
out
jbe
out
jecxz
xchg
psubq
push
cltd
sbb
test
out
mov
adcl
add
clc
xor
or
mov
jmp
scas
jmp
pop
and
popf
shr
add
adc
mov
pushl
les
xor
loope
mov
sbb
aaa
dec
push
push
test
xor
ja
pop
rorl
sbb
inc
dec
sub
cwtl
jge
pop
mov
push
adc
clc
add
jg
xchg
out
outsb
cli
adc
sbb
daa
leave
push
in
push
push
mov
movsb
sub
mov
sub
jp
inc
ret
ja
mov
xor
dec
pop
pop
sahf
jne
orb
cs
cltd
jmp
mulb
adcl
sub
mov
gs
pop
mov
xor
fistps
jnp
sbb
clc
in
cmpl
repnz
pop
ret
xor
pop
cs
cmp
loop
push
mull
movsb
popf
dec
and
mov
out
dec
inc
leave
xchg
and
xchg
sbb
dec
shrl
imulb
mov
xor
repnz
arpl
mov
icebp
hlt
xlat
pop
or
nop
cmp
jge
fs
lahf
int3
getsec
push
and
incl
fsubl
int3
aam
scas
pop
inc
test
fcmovnbe
inc
dec
shlb
jae
mov
mov
movsb
aam
push
mov
sub
fwait
mov
sbb
sbb
cld
daa
ds
cmp
and
jl
sub
andl
mov
divl
popa
pusha
jns
push
insb
aas
push
mov
fs
or
ds
cwtl
mov
cmpsb
in
xchg
in
aad
xchg
enter
pop
mov
mov
dec
and
mov
repz
test
cmp
pop
test
js
aaa
movsl
stc
inc
aam
xor
into
sub
dec
sbb
inc
xor
inc
in
sbb
pop
jbe
dec
js
mov
pop
cmpsb
mov
mov
mov
sub
movd
xchg
rclb
fnsave
or
pop
mov
sti
mov
xor
es
push
fdivl
sub
cmp
pop
lcall
and
mov
and
sahf
in
adc
orb
outsl
fiadds
stc
add
mov
adc
adc
pop
cmp
jg
xchg
out
cmp
cli
mov
xor
sbb
into
mov
ljmp
lret
mov
or
imul
repz
es
in
scas
jmp
scas
xlat
lahf
lahf
mov
mov
xchg
push
mov
and
and
sbb
rorl
out
inc
shll
fabs
add
inc
repz
dec
jae
fcoms
lock
test
movsl
sub
pop
pop
lea
shl
int
lds
mov
lods
cmc
aad
xchg
rcll
mov
fimull
cmpb
add
adc
mov
mov
ja
mov
push
andl
dec
or
arpl
inc
mov
sub
jbe
jge
jnp
hlt
mov
or
lret
push
loopne
cwtl
mov
jno
into
scas
add
imulb
aam
mov
int
mov
and
enter
mov
sub
sbb
out
aam
ret
pop
stos
add
cmpsl
jae
insl
leave
pop
sub
push
pop
xchg
iret
sbb
popa
ret
lods
dec
push
loope
lods
mov
arpl
jle
pop
cvtps2pd
add
mov
cltd
dec
sub
and
mov
push
sub
fisttpll
inc
jmp
sbb
push
roll
pop
add
gs
stos
push
add
xchg
push
out
push
xor
and
dec
xor
stos
insb
mov
pop
mov
test
xor
ja
jl
dec
sub
pop
inc
insl
push
mov
and
ret
jecxz
mov
filds
lcall
bound
mov
in
pop
call
mov
insb
xlat
mov
pop
call
dec
jp
dec
sub
dec
enter
insl
out
cli
pusha
test
std
into
mov
and
xchg
mov
sbb
fwait
cmp
xchg
rcrl
and
cmp
mov
mov
aas
lcall
test
shrl
js
js
mov
xor
jp
add
addl
mov
xchg
inc
dec
push
mov
inc
push
push
mov
mov
mov
movsb
add
mov
or
sbb
imul
fists
mov
adc
aas
and
xor
shrl
hlt
and
push
arpl
scas
xchg
or
sbb
stos
or
popa
add
out
int3
mov
inc
pop
fidivrs
lret
lds
jecxz
shlb
scas
gs
test
inc
sbb
push
mov
push
add
jbe
and
rcr
sbb
cmp
cmp
cmp
dec
fwait
or
xor
mov
fwait
inc
push
mov
sbb
fldl
je
cmpsb
push
push
pop
enter
ret
nop
