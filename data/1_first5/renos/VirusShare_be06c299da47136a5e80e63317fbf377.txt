push
mov
sub
mov
sub
cmp
ja
mov
movl
sub
cmp
je
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
xor
mov
xor
mov
andl
subl
cmp
ja
xor
orl
addl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
xorl
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
xorl
addl
mov
sub
cmp
jbe
mov
xorl
addl
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xorl
lea
subl
addl
call
xor
mov
subl
xor
mov
addl
cmp
jb
xor
orl
sub
leave
ret
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
sub
cmp
jb
sub
test
jae
xor
xorl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
xorl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
addl
cmp
ja
sub
cmp
jne
sub
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
cmp
jb
mov
mov
sub
leave
ret
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
mov
cmp
jb
mov
mov
xorl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
jbe
xor
movl
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
subl
subl
sub
mov
lea
sub
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
andl
cmp
jb
xor
andl
cmp
je
leave
ret
nop
nop
push
mov
sub
sub
mov
xor
cmp
jne
mov
orl
sub
test
je
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
andl
sub
mov
subl
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
andl
andl
mov
xorl
xor
cmp
ja
mov
orl
subl
mov
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
addl
sub
andl
mov
test
jne
sub
addl
mov
subl
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
addl
andl
sub
sub
movl
cmp
je
sub
addl
addl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
movl
xor
test
je
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
xor
movl
addl
mov
lea
test
jbe
mov
cmp
jae
sub
lea
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
andl
mov
xorl
cmp
je
mov
xor
mov
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
xor
xorl
subl
mov
mov
test
jae
mov
xor
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
sub
orl
mov
xorl
xorl
mov
movl
orl
cmp
jb
mov
sub
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xorl
orl
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
andl
orl
xor
sub
mov
mov
subl
leave
ret
push
mov
sub
mov
cmp
jae
mov
sub
orl
xor
mov
sub
addl
xorl
xor
mov
lea
leave
ret
nop
push
mov
sub
mov
addl
cmp
jae
mov
lea
addl
subl
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
xorl
mov
mov
movl
mov
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
andl
mov
orl
xorl
sub
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
addl
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
sub
andl
xor
sub
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
orl
addl
mov
sub
mov
addl
lea
cmp
ja
mov
mov
andl
movl
cmp
jb
mov
xor
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
andl
subl
mov
mov
mov
mov
andl
test
jae
andl
mov
subl
orl
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
test
jb
sub
sub
mov
xor
xor
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
xor
mov
mov
xor
mov
movl
andl
cmp
jne
mov
andl
xor
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
orl
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
subl
xor
mov
andl
cmp
jae
mov
mov
movl
cmp
jne
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
sub
mov
sub
mov
mov
cmp
jne
mov
xorl
mov
subl
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
xor
mov
sub
orl
andl
sub
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
orl
xor
andl
lea
mov
andl
subl
andl
addl
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
cmp
jb
xor
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
andl
mov
mov
mov
xor
mov
cmp
jbe
mov
xorl
mov
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
andl
orl
movl
mov
andl
subl
cmp
jbe
sub
test
ja
andl
andl
sub
leave
ret
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
xor
mov
lea
andl
mov
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
orl
sub
subl
andl
andl
sub
xor
mov
movl
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
xorl
sub
subl
addl
cmp
jbe
mov
orl
lea
cmp
jae
sub
andl
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
movl
andl
orl
mov
subl
xor
movl
mov
cmp
jb
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
orl
movl
cmp
jne
mov
orl
leave
ret
nop
nop
nop
push
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
lea
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
sub
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
andl
mov
sub
subl
addl
cmp
jne
sub
movl
leave
ret
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
mov
mov
movl
mov
mov
movl
cmp
jae
mov
cmp
ja
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
orl
mov
xor
andl
mov
movl
subl
xor
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
sub
mov
mov
andl
test
jae
mov
sub
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
mov
mov
xor
addl
andl
andl
subl
cmp
je
mov
sub
xorl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
andl
mov
mov
orl
subl
cmp
jb
xor
lea
mov
test
jne
orl
addl
leave
ret
nop
neg
call
push
jle
sti
jecxz
sbb
xadd
icebp
arpl
into
add
ret
das
int
inc
push
scas
cmove
cmp
cs
and
sub
push
inc
cmpsl
jne
insb
jne
cltd
push
pop
and
jp
mov
xor
and
sbb
jb
testl
aaa
mov
inc
add
jns
sub
roll
mov
and
out
mov
sbbl
out
int3
inc
lock
xchg
push
aas
cmpb
push
sahf
inc
inc
add
data16
jo
addr16
add
add
add
xor
dec
add
add
inc
add
cmp
inc
add
add
add
add
push
imul
push
add
add
dec
add
push
inc
jno
add
add
add
add
xor
add
dec
jae
add
add
jne
add
add
add
popa
inc
add
add
add
imul
add
push
add
push
add
add
xor
add
dec
add
add
dec
imul
xor
add
dec
inc
add
add
add
pop
gs
jno
cmp
add
jno
push
add
popa
dec
inc
add
add
add
add
push
inc
arpl
add
push
add
push
pop
popa
add
add
push
add
ja
jp
add
add
push
jb
push
add
xor
pop
xor
add
dec
add
add
insb
pop
push
jno
push
dec
add
add
bound
push
add
add
add
leave
and
add
mov
insb
addl
sbb
ds
sbb
lret
sbb
lods
mov
mov
sbb
adc
pop
xchg
push
adc
hlt
pop
ja
cmp
fadds
mull
rcrl
movb
cmc
notl
lcall
xchg
mov
lods
gs
loop
sub
ret
jo
or
stos
outsl
xchg
push
ja
inc
std
test
outsb
and
stos
leave
insb
js
movsl
enter
or
aaa
push
fcompl
outsb
add
cmp
notl
fsubrl
mov
sti
lahf
xchg
pop
sub
test
adc
adc
sub
scas
or
stos
cmp
mov
mov
push
sub
int3
adc
out
and
test
xchg
jp
std
pop
add
pop
inc
ljmp
leave
je
jo
xchg
mov
les
jmp
out
mov
sbb
daa
das
lret
leave
add
add
add
add
add
add
dec
or
add
add
inc
int3
push
add
add
add
add
add
cmc
add
add
add
add
xlat
push
add
std
add
add
or
add
add
add
cmp
add
add
fiaddl
add
add
add
add
add
add
nop
inc
dec
add
add
add
pop
add
add
mov
mov
add
add
add
sbb
add
add
add
mov
add
add
add
add
fiadds
add
add
add
add
push
add
add
add
add
aaa
add
add
add
add
movsl
add
add
dec
add
add
add
add
add
add
in
sub
sub
mov
mov
subl
cmp
jne
xor
xor
lea
mov
orl
movl
sub
andl
lea
test
jbe
sub
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
movl
subl
mov
mov
xor
xor
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
orl
mov
addl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
xor
mov
andl
xorl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xor
mov
lea
sub
cmp
jbe
mov
lea
cmp
ja
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
movl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
addl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
subl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movl
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
xorl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
addl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
addl
xorl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
orl
andl
sub
xor
cmp
jne
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
xorl
orl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
addl
mov
xor
lea
cmp
jne
sub
andl
cmp
jae
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
sub
mov
xor
mov
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xorl
push
mov
lea
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
xor
mov
mov
cmp
jne
mov
mov
mov
sub
subl
xorl
xor
mov
sub
xor
lea
andl
test
jbe
xor
mov
subl
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
movl
mov
andl
sub
cmp
jbe
mov
movl
cmp
jbe
call
je
mov
sub
sub
xorl
andl
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
orl
cmp
jae
xor
mov
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
xor
andl
sub
xor
mov
cmp
jae
mov
subl
xor
cmp
jbe
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
movl
addl
sub
mov
movl
xorl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
sub
xor
andl
subl
mov
xorl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
addl
mov
sub
subl
andl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xorl
andl
subl
mov
movl
andl
cmp
jb
xor
mov
test
jbe
xor
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
orl
mov
orl
mov
sub
mov
cmp
jae
lea
xor
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
movl
cmp
je
mov
movl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
xor
xor
test
ja
xor
subl
xorl
cmp
je
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
movl
mov
movl
test
jne
mov
cmp
jae
addl
mov
mov
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
cmp
je
sub
lea
test
jbe
mov
mov
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
andl
addl
mov
mov
sub
orl
lea
xor
xor
test
jbe
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
subl
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
mov
mov
mov
mov
xor
addl
xor
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
sub
mov
sub
orl
mov
cmp
ja
mov
xorl
sub
cmp
ja
lea
movl
push
call
and
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
andl
xor
andl
andl
test
je
xor
test
jne
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
andl
xor
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
sub
mov
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
orl
sub
orl
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
andl
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
addl
movl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
movl
mov
xorl
addl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
addl
subl
mov
andl
cmp
je
sub
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
sub
cmp
jbe
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
mov
lea
test
ja
xorl
mov
mov
xorl
call
mov
mov
movl
mov
mov
cmp
jb
mov
orl
lea
test
ja
mov
andl
orl
xorl
mov
pushl
call
leave
ret
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
subl
mov
andl
andl
sub
mov
sub
orl
xorl
mov
mov
xor
xor
xor
andl
addl
mov
lea
xor
addl
cmp
jae
sub
sub
addl
mov
call
xor
orl
addl
movl
cmp
jbe
mov
addl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
addl
subl
subl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
sub
mov
orl
addl
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
xorl
mov
cmp
jne
mov
test
jne
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
mov
andl
mov
xor
cmp
jae
sub
addl
mov
addl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
mov
mov
xorl
movl
orl
movl
cmp
jae
mov
mov
movl
sub
addl
mov
mov
xor
mov
lea
mov
cmp
jae
mov
sub
subl
test
jb
andl
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
movl
mov
mov
orl
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
xor
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xor
orl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
xorl
mov
xor
andl
sub
mov
andl
sub
mov
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
orl
xorl
mov
sub
xor
mov
xor
andl
movl
mov
cmp
jbe
mov
addl
mov
push
push
call
je
mov
subl
andl
test
je
mov
andl
push
call
xor
xorl
cmp
jae
orl
mov
movl
xor
subl
movl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
addl
movl
mov
sub
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
cmp
je
mov
xor
sub
mov
addl
mov
andl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
mov
addl
orl
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xor
cmp
je
xorl
sub
mov
lea
mov
sub
orl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
addl
mov
mov
sub
andl
test
jne
mov
subl
cmp
jae
subl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xor
xor
xorl
movl
test
ja
sub
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
orl
mov
xorl
andl
mov
cmp
jb
addl
mov
sub
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
cmp
jbe
mov
andl
cmp
jbe
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
subl
mov
lea
xor
mov
test
ja
mov
sub
orl
test
jne
sub
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
orl
sub
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
xorl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
sub
xor
lea
subl
lea
cmp
jb
sub
subl
mov
cmp
jae
andl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
subl
andl
mov
mov
lea
addl
sub
cmp
ja
mov
mov
andl
orl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
addl
sub
andl
mov
cmp
jb
xor
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
andl
mov
orl
cmp
jae
mov
xorl
cmp
ja
addl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
xorl
mov
mov
subl
andl
lea
cmp
jae
sub
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
xorl
mov
movl
mov
lea
cmp
je
sub
andl
xorl
xor
mov
subl
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
addl
mov
mov
mov
mov
xorl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
orl
andl
sub
orl
cmp
je
xor
test
jbe
mov
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
addl
xor
orl
test
jae
mov
addl
sub
cmp
jb
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xorl
mov
mov
sub
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
xorl
mov
mov
sub
xorl
orl
mov
cmp
jbe
mov
mov
sub
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
mov
subl
andl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
cmp
jne
mov
mov
mov
andl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xor
mov
mov
mov
lea
sub
cmp
je
sub
cmp
ja
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
andl
mov
mov
mov
mov
mov
xor
mov
xor
orl
andl
test
jae
xor
sub
andl
xor
andl
mov
andl
sub
xor
incl
sub
subl
mov
cmp
jb
sub
xor
xorl
andl
mov
xor
mov
andl
mov
movl
addl
orl
subl
test
jne
mov
lea
mov
mov
sub
orl
test
jne
mov
andl
andl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
mov
sub
xorl
addl
cmp
je
sub
mov
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
andl
mov
mov
subl
cmp
je
sub
addl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
xor
sub
xor
lea
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
andl
mov
xor
andl
cmp
je
mov
movl
sub
movl
andl
mov
addl
andl
cmp
je
subl
sub
orl
xorl
mov
sub
mov
mov
xor
lea
orl
mov
mov
orl
addl
test
je
mov
lea
orl
push
pushl
push
call
mov
xorl
orl
mov
andl
mov
mov
xorl
andl
andl
mov
mov
orl
cmp
jbe
xor
sub
mov
test
ja
mov
addl
lea
mov
xorl
push
call
mov
mov
cmp
jbe
sub
xor
xorl
orl
mov
addl
subl
xor
call
mov
mov
addl
test
jne
xor
cmp
jne
mov
sub
mov
addl
xor
xor
xor
cmp
ja
sub
orl
cmp
jb
pushl
call
xor
andl
andl
cmp
jb
mov
movl
mov
cmp
jne
mov
xorl
xor
movl
cmp
je
mov
cmp
jne
sub
xor
orl
mov
sub
sub
addl
subl
mov
xor
xorl
xor
pushl
call
mov
sub
mov
subl
andl
sub
mov
mov
lea
cmp
je
mov
mov
xorl
subl
xor
cmp
jb
movl
movl
mov
xor
orl
mov
mov
lea
sub
xor
xor
push
pushl
call
xor
andl
cmp
jae
mov
addl
cmp
jbe
mov
xor
xorl
mov
cmp
jae
xor
cmp
jb
push
push
call
mov
cmp
jae
orl
sub
mov
andl
xorl
mov
lea
lea
xor
sub
andl
sub
movl
lea
test
ja
mov
andl
cmp
jae
xor
mov
andl
movl
orl
movl
cmp
jbe
mov
orl
sub
push
push
call
mov
xor
cmp
jb
mov
test
jb
xor
addl
cmp
jne
sub
xor
cmp
jae
andl
mov
lea
mov
andl
mov
mov
xorl
mov
cmp
ja
sub
lea
cmp
jbe
pushl
call
mov
xor
mov
sub
xorl
mov
mov
mov
sub
cmp
jne
xor
andl
sub
cmp
jbe
push
pushl
pushl
call
xor
sub
mov
cmp
jb
sub
mov
mov
orl
sub
lea
xor
movl
orl
andl
cmp
jb
mov
andl
xor
cmp
jne
lea
subl
mov
andl
andl
cmp
ja
xor
mov
test
jae
xorl
mov
mov
lea
test
jae
mov
xor
cmp
je
subl
movl
movl
push
pushl
push
call
mov
andl
orl
cmp
ja
sub
movl
mov
cmp
ja
xorl
mov
mov
sub
orl
sub
movl
lea
lea
test
jae
mov
orl
addl
sub
subl
sub
mov
mov
andl
mov
andl
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
sub
xorl
mov
leave
ret
nop
nop
nop
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
andl
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
subl
sub
andl
andl
cmp
jne
andl
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
subl
andl
addl
orl
orl
mov
mov
mov
andl
lea
sub
xor
orl
cmp
jb
mov
orl
movl
mov
xorl
andl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
sub
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
movl
sub
mov
movl
addl
mov
andl
mov
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
mov
movl
sub
test
jbe
mov
cmp
je
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
xor
movl
sub
subl
subl
mov
test
jb
movl
sub
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
andl
mov
subl
cmp
jb
lea
mov
xor
sub
xor
push
push
push
call
mov
cmp
je
sub
orl
mov
cmp
ja
andl
mov
mov
mov
xorl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
orl
mov
movl
mov
test
jbe
mov
andl
sub
cmp
jbe
xorl
subl
mov
mov
cmp
jb
mov
mov
mov
cmp
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
sub
mov
mov
mov
subl
lea
cmp
jne
xor
mov
addl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
subl
xor
mov
addl
mov
cmp
jne
sub
subl
xorl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xorl
mov
andl
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
orl
subl
xor
sub
ret
xor
addl
addl
xor
test
jae
mov
lea
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
mov
movl
mov
xor
subl
mov
cmp
jae
sub
addl
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
subl
mov
mov
xor
mov
mov
movl
cmp
jbe
mov
test
jbe
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
andl
orl
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
andl
xor
lea
orl
subl
xor
cmp
jae
sub
addl
andl
xor
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
andl
sub
sub
mov
xor
orl
cmp
jb
addl
sub
sub
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
andl
test
jb
mov
xor
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
cmp
jne
mov
cmp
jbe
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
orl
mov
mov
andl
mov
xorl
xorl
andl
mov
sub
mov
leave
ret
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
xorl
mov
xorl
mov
mov
movl
subl
mov
cmp
jne
mov
mov
test
jae
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
movl
mov
call
mov
cmp
jne
mov
xorl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
xorl
mov
andl
andl
addl
test
jb
mov
movl
addl
cmp
jbe
mov
call
sub
mov
mov
mov
mov
test
jb
sub
xorl
cmp
je
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
xor
subl
addl
mov
mov
sub
call
mov
xorl
cmp
jbe
xorl
mov
sub
orl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
cmp
ja
xor
lea
call
mov
cmp
je
mov
sub
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
addl
mov
mov
mov
mov
addl
orl
call
mov
andl
mov
mov
lea
test
ja
mov
mov
mov
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
xorl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
andl
xor
movl
xor
cmp
jae
mov
mov
test
je
mov
andl
addl
cmp
je
mov
andl
cmp
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
andl
mov
mov
mov
lea
test
jbe
mov
andl
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
subl
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
subl
mov
mov
subl
andl
mov
cmp
ja
mov
orl
xorl
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
orl
movl
mov
sub
xor
cmp
jae
mov
addl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
addl
cmp
jb
mov
mov
andl
cmp
jbe
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
mov
mov
orl
cmp
jae
mov
addl
addl
movl
call
sub
mov
lea
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
mov
xor
sub
xor
sub
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xor
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
movl
addl
movl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
sub
sub
andl
xorl
test
jb
xor
xor
xorl
xor
lea
andl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
sub
mov
mov
mov
mov
mov
movl
subl
andl
andl
andl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
mov
subl
cmp
jbe
mov
andl
subl
andl
andl
xorl
mov
sub
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
mov
mov
mov
xor
subl
andl
movl
xor
lea
lea
addl
cmp
jbe
lea
xor
xor
xor
mov
sub
andl
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
subl
mov
mov
sub
mov
mov
xorl
mov
mov
test
jne
mov
cmp
jae
xor
mov
movl
xorl
xor
xorl
xorl
movl
add
sub
andl
cmp
jae
xor
subl
orl
orl
xor
sub
test
jb
orl
xor
xorl
movl
movl
sub
xorl
sub
andl
andl
xor
sub
subl
sub
xorl
cmpl
jne
mov
test
jbe
mov
test
jae
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
xorl
movl
andl
andl
sub
xorl
mov
xorl
cmp
jbe
sub
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
movl
andl
mov
andl
andl
subl
andl
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
sub
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
movl
mov
mov
movl
cmp
jne
movl
mov
andl
movl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
addl
cmp
jbe
sub
incl
xor
andl
mov
mov
andl
addl
xor
xor
sub
xor
sub
xor
mov
mov
mov
mov
mov
cmp
jb
mov
mov
xor
mov
andl
lea
test
ja
mov
mov
cmp
jb
push
push
push
push
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
movl
addl
orl
mov
xorl
mov
subl
mov
xorl
cmp
jbe
mov
addl
cmp
jb
addl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
andl
mov
xor
sub
xorl
andl
orl
movl
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movl
cmp
ja
sub
andl
cmp
ja
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
xor
subl
sub
cmp
jb
xor
xorl
cmp
ja
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
addl
orl
mov
mov
cmp
jae
mov
lea
sub
cmp
jb
mov
mov
add
mov
rep
mov
xorl
xor
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
sub
mov
xorl
andl
xor
cmp
jae
mov
test
ja
xorl
andl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
orl
sub
cmp
ja
xor
xor
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
movl
mov
mov
mov
xor
subl
movl
mov
movl
lea
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
movl
cmp
je
sub
xor
cmp
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
sub
andl
subl
mov
addl
cmp
jbe
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
andl
mov
orl
addl
cmp
jne
xor
movl
mov
xorl
mov
sub
lea
cmp
jbe
xor
test
jne
mov
mov
sub
mov
mov
sub
mov
xor
andl
andl
xor
cmp
jbe
xor
mov
cmp
jb
orl
mov
mov
sub
xor
addl
cmp
je
mov
xorl
mov
cmp
jbe
dec
test
jne
mov
xor
andl
mov
test
jae
mov
mov
xorl
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
movl
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xorl
mov
movl
mov
sub
andl
cmp
jae
mov
addl
andl
sub
orl
addl
sub
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
andl
mov
mov
xor
mov
subl
cmp
ja
xor
mov
cmp
jbe
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
not
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xorl
mov
mov
xorl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
xorl
mov
mov
test
je
mov
test
ja
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
movl
andl
movl
mov
andl
mov
mov
movl
andl
cmp
ja
lea
mov
sub
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
subl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
subl
sub
andl
cmp
jb
mov
andl
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
sub
xor
lea
xor
cmp
jb
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xor
mov
mov
mov
subl
mov
orl
xor
andl
mov
mov
lea
push
call
mov
mov
cmp
jb
mov
addl
mov
mov
cmp
ja
mov
mov
mov
sub
sub
andl
cmp
jne
sub
andl
xor
cmp
jae
push
mov
lea
andl
orl
test
je
sub
lea
subl
subl
ret
xor
mov
test
jae
sub
andl
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
orl
sub
sub
andl
orl
test
jae
mov
andl
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
subl
subl
cmp
jb
mov
sub
mov
pushl
call
dec
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
sub
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
subl
addl
mov
sub
xorl
cmp
je
sub
addl
movl
cmp
jae
lea
lea
xor
mov
andl
test
jne
sub
addl
cmp
jbe
sub
addl
addl
mov
test
jae
mov
andl
cmp
jbe
xor
mov
subl
xor
addl
mov
mov
andl
cmp
jae
mov
andl
test
jbe
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movl
mov
mov
mov
mov
andl
mov
movl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
sub
andl
addl
cmp
jne
mov
andl
sub
addl
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
sub
subl
mov
mov
andl
mov
mov
cmp
jae
sub
andl
test
jb
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
subl
lea
andl
lea
mov
xorl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
andl
mov
sub
mov
xor
sub
xor
subl
andl
addl
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
movl
mov
movl
orl
sub
mov
andl
mov
mov
lea
cmp
jbe
sub
mov
sub
addl
xor
mov
addl
sub
cmp
jb
mov
mov
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
xorl
mov
mov
mov
addl
cmp
ja
xor
mov
xor
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
orl
mov
xorl
lea
andl
mov
addl
mov
addl
andl
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
xorl
andl
mov
lea
xor
cmp
jb
orl
mov
sub
mov
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
subl
xorl
mov
mov
sub
sub
push
pushl
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
xor
addl
cmp
ja
mov
mov
addl
mov
andl
xorl
orl
xor
sub
xor
andl
orl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
andl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
movl
mov
subl
movl
cmp
jne
sub
xorl
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
andl
sub
sub
addl
cmp
je
sub
xor
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
mov
mov
movl
mov
addl
mov
cmp
ja
mov
movl
xor
cmp
jbe
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
addl
sub
mov
mov
lea
andl
cmp
jb
xor
mov
mov
cmp
jbe
ret
mov
orl
movl
movl
cmp
je
sub
mov
cmp
je
mov
mov
cmp
jbe
xor
subl
andl
orl
cmp
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
xor
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
subl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
movl
mov
xor
andl
addl
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
sub
mov
mov
mov
mov
andl
mov
cmp
jbe
movl
xorl
xor
orl
andl
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
andl
andl
mov
xorl
mov
xorl
mov
test
jae
subl
xorl
mov
orl
andl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
mov
xor
xor
addl
mov
addl
cmp
je
mov
lea
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
sub
mov
andl
mov
andl
movl
cmp
jb
sub
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
xor
andl
cmp
jbe
sub
lea
cmp
ja
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
sub
xor
sub
mov
andl
addl
subl
cmp
jb
addl
mov
xorl
leave
ret
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
mov
mov
sub
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
andl
mov
mov
addl
mov
mov
xorl
mov
cmp
jne
mov
cmp
je
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
movl
mov
mov
lea
andl
mov
cmp
jae
xor
movl
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
mov
addl
andl
orl
addl
cmp
ja
addl
orl
mov
orl
lea
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
xorl
mov
test
ja
mov
xorl
xorl
xor
leave
ret
nop
push
mov
sub
mov
xorl
cmp
jbe
lea
mov
orl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
orl
xor
addl
lea
cmp
jbe
mov
mov
cmp
jne
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
sub
mov
sub
subl
andl
cmp
jb
mov
movl
sub
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
addl
mov
sub
cmp
jae
mov
mov
test
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
xorl
mov
mov
xorl
movl
xor
cmp
je
mov
lea
mov
test
je
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
cmp
jne
xor
addl
cmp
jbe
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
xor
mov
xor
lea
movl
mov
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
lea
cmp
jae
sub
mov
cmp
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xorl
andl
orl
mov
andl
mov
orl
andl
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
addl
mov
orl
addl
mov
mov
mov
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
mov
addl
mov
xor
mov
andl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
addl
mov
mov
subl
mov
mov
andl
leave
ret
nop
add
add
inc
xor
inc
add
add
xor
add
je
insl
ja
xor
insl
add
add
add
jb
pop
ja
add
inc
outsl
xor
inc
add
cmp
add
push
add
je
dec
add
addr16
bound
add
push
add
xor
xor
push
add
push
add
add
je
js
push
dec
inc
add
add
inc
outsb
insb
pop
jns
add
add
add
add
add
add
add
add
aaa
add
push
dec
add
push
add
add
dec
add
jb
push
add
add
inc
inc
cmp
add
outsb
push
add
add
add
push
jo
outsb
add
add
dec
bound
add
add
inc
add
jbe
xor
add
add
add
add
add
add
jb
add
cmp
xor
add
add
add
add
inc
add
add
dec
xor
add
add
add
add
add
pop
add
xor
xor
jbe
inc
add
outsl
add
push
imul
add
push
xor
inc
jp
inc
add
add
jae
add
cmp
dec
add
add
add
add
fs
pop
push
add
ja
pop
add
push
add
add
dec
add
jno
gs
add
add
push
add
add
add
add
add
add
add
xor
dec
add
add
add
add
imul
add
add
add
inc
dec
push
add
add
add
add
add
add
pop
pop
add
add
add
add
jo
jo
add
insb
outsb
add
add
pop
push
push
inc
jns
add
outsl
add
add
add
ja
add
xor
data16
add
xor
add
dec
push
add
add
add
add
aaa
jp
push
dec
add
cmp
add
add
add
push
add
ss
add
bound
add
push
add
add
add
add
xor
add
xor
add
xor
push
add
dec
add
add
ja
add
add
cmp
add
dec
inc
add
add
dec
inc
add
dec
dec
pop
add
add
add
add
push
add
add
dec
inc
je
add
add
inc
push
add
inc
pop
popa
add
cmp
add
xor
add
inc
add
add
xor
dec
push
add
add
aaa
dec
jo
push
push
add
xor
add
add
add
push
add
xor
jae
xor
arpl
add
jne
add
add
add
inc
jb
add
aaa
add
push
add
inc
jo
arpl
push
dec
insb
xor
push
jp
xor
add
outsb
add
jae
add
xor
xor
add
add
jns
add
add
add
push
jne
inc
push
pop
add
add
jb
add
add
inc
add
add
push
dec
add
fs
add
add
add
js
fs
jo
xor
cs
insb
add
cltd
add
inc
outsb
add
add
add
add
add
sbb
xor
add
mov
add
add
add
add
add
add
std
inc
add
xchg
add
add
add
add
add
add
add
daa
mov
fadds
add
add
aaa
add
add
add
add
add
roll
add
sbb
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jo
xchg
add
insb
jno
add
add
push
add
add
add
add
add
add
outsb
gs
xor
cs
dec
dec
add
je
dec
add
push
imul
add
inc
add
dec
cmp
add
aaa
popa
add
add
add
add
add
popa
add
bound
add
arpl
add
add
jbe
dec
add
add
jo
add
push
add
add
dec
push
push
add
add
add
add
add
dec
push
add
add
add
add
add
push
add
add
js
add
outsl
dec
add
push
add
add
add
add
add
add
add
je
add
cmp
jae
add
outsb
inc
pop
pop
add
add
add
add
add
add
imul
inc
jb
inc
add
inc
add
pop
add
xor
add
add
add
ja
jo
dec
add
add
jb
add
add
add
push
popa
pop
add
push
add
js
add
pop
add
add
add
push
js
popa
add
add
dec
push
dec
inc
aaa
dec
push
cmp
inc
push
ja
js
add
add
arpl
pop
add
add
xor
bound
aaa
add
add
xor
dec
add
add
jbe
jb
imul
add
add
add
cld
add
add
add
pop
arpl
jle
add
add
add
add
add
add
in
add
add
outsb
add
add
push
add
add
xchg
out
sub
sbb
add
add
lods
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
mov
add
add
add
add
add
add
scas
add
add
add
cmp
add
rolb
inc
cmp
add
adc
sub
add
cmp
das
fcomi
add
add
add
add
add
add
jb
imul
inc
add
pop
in
mov
arpl
pop
pop
sbb
push
jle
repz
dec
orl
mov
xchg
jns
push
mov
dec
lea
ret
jbe
ds
cmp
xchg
mov
mov
cmp
jmp
push
or
mov
iret
or
aaa
cmpsb
add
sub
xchg
mov
scas
pusha
cwtl
faddl
aas
xchg
ret
out
push
sub
dec
fdivrl
daa
cmp
loopne
call
sti
dec
push
mov
and
hlt
push
int
push
fwait
xor
mov
repnz
xlat
push
push
lods
daa
jnp
and
jb
lcall
jg
lods
push
inc
mov
mov
inc
int
adc
sub
xchg
and
ljmp
cli
or
pop
xor
loope
cltd
mov
pop
fwait
pop
std
int3
in
nop
outsb
jl
mov
pop
sub
es
xchg
jmp
add
add
add
add
jp
add
aaa
add
add
jp
add
add
jb
inc
add
add
add
popa
add
add
add
insb
xor
dec
add
add
add
jp
add
ja
push
dec
add
add
dec
add
add
add
add
add
imul
inc
push
add
add
xor
add
add
push
cmp
add
popa
add
add
xor
jo
inc
add
dec
push
inc
jp
inc
add
add
push
add
add
inc
add
add
add
push
inc
xor
add
add
data16
add
add
add
xor
add
add
add
push
push
dec
push
add
add
inc
add
cmp
push
add
popa
add
add
jne
add
dec
add
add
add
add
add
inc
insb
dec
push
inc
dec
jb
add
add
dec
add
add
add
inc
jo
add
push
add
dec
add
add
jb
ja
cmp
add
insb
push
add
cmp
ja
add
add
add
add
add
add
xor
jbe
add
add
push
add
add
outsl
add
add
xor
dec
cmp
add
pop
xor
add
add
add
fs
aaa
push
imul
add
xor
add
add
pop
add
add
add
add
add
add
je
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
popa
add
add
pop
add
jb
add
jp
add
add
add
add
xor
add
insl
pop
popa
add
add
dec
add
inc
add
push
jns
dec
push
insl
add
add
push
add
popa
outsl
add
ja
bound
outsb
add
jae
push
imul
add
popa
outsb
add
push
add
cmp
add
inc
cmp
add
add
add
add
push
add
add
add
add
data16
push
add
dec
add
dec
popa
dec
add
jp
add
push
inc
add
add
add
xor
bound
outsb
jbe
push
add
inc
add
cmp
cmp
add
push
push
addr16
add
add
dec
push
inc
add
outsb
add
add
add
popa
add
push
add
add
add
add
push
add
jb
dec
add
add
data16
add
pop
add
add
imul
dec
pop
add
add
dec
add
jns
je
add
add
add
inc
dec
outsl
add
add
xor
push
add
add
jb
push
add
inc
inc
push
jns
add
add
pop
add
add
add
add
add
add
push
outsl
add
add
jae
pop
pop
add
add
add
insl
jbe
dec
addr16
add
add
add
add
dec
push
xor
add
dec
add
dec
dec
add
add
add
add
push
add
push
add
push
add
pop
inc
add
add
add
popa
xor
add
add
data16
add
inc
popa
jns
add
push
add
push
add
add
cmp
add
add
add
arpl
add
aaa
add
add
add
add
add
add
jo
add
fs
xor
add
pop
sbb
xchg
es
ret
cli
inc
lea
les
adc
ja
icebp
fidivrs
sbb
in
flds
or
cmp
lods
and
jmp
and
inc
aas
jbe
in
adc
nop
xchg
sbb
xchg
adc
add
stos
cmpb
push
pop
ds
jmp
in
and
cli
out
push
out
iret
xchg
loop
lret
imul
ljmp
pop
mov
mov
sub
or
xchg
or
push
xchg
pop
push
dec
sarb
or
gs
aaa
loope
clc
loop
ficompl
imul
xchg
jne
int
cmpsb
mov
xor
sub
cmpb
scas
mov
xchg
lods
push
mov
in
cmpl
popf
loop
in
ljmp
popf
ss
mov
ss
push
cmp
cmp
icebp
lcall
xlat
inc
mov
popa
dec
pushf
ja
scas
or
hlt
or
inc
mov
mov
data16
jae
inc
fstl
gs
arpl
fbstp
add
lock
mov
inc
arpl
xor
cmp
mov
jge
xchg
cmp
xor
push
xorl
mov
stc
push
pop
jp
dec
cltd
or
and
mov
xchg
scas
sarb
cmp
or
inc
in
cmp
push
inc
lret
jecxz
mov
cwtl
cmp
mov
or
jle
cmp
mov
ret
mov
jle
jns
jno
xchg
out
sbb
jg
mov
cmp
pop
jp
mov
sub
cmp
add
movsl
adc
mov
xchg
mov
mov
or
shl
add
pop
jmp
jp
mov
ret
cmp
jl
popa
loopne
cltd
push
sbb
mov
or
push
clc
bndldx
jb
out
sahf
out
pushf
sbb
scas
and
sub
push
aaa
stos
or
loopne
mov
or
dec
adc
aas
int3
mov
shlb
cmpl
int
adc
lds
sub
mov
mov
shrl
hlt
mov
dec
mov
mov
jmp
repnz
cmpsb
push
add
dec
xchg
mov
sarl
push
mov
mov
hlt
mov
les
mov
nop
insl
inc
popa
cmp
test
cmp
into
push
adc
mov
inc
arpl
test
add
xchg
shlb
dec
cwtl
xor
xor
jae
cmp
cmpsb
mull
gs
mov
push
jo
jno
inc
mov
test
mov
xor
or
pop
add
mov
stc
jns
lock
scas
mov
aam
loop
int3
adc
movsl
sub
pop
andl
xchg
leave
ret
ss
outsb
add
jb
ret
cmp
xor
pop
xchg
popa
sub
mov
dec
xchg
mov
push
dec
jmp
dec
pop
inc
xchg
xchg
popa
adcb
add
or
mov
fs
jge
xchg
xor
cli
ret
ret
cmp
jns
mov
cmp
jbe
fiaddl
adc
add
sub
mov
fimuls
lret
sti
cli
mov
pop
imul
bound
and
xchg
movsl
adc
push
adc
pop
mov
stos
dec
xchg
mov
cwtl
dec
ss
and
cmpsl
movsl
cmp
xor
mov
pop
xchg
jbe
cmc
addl
es
sahf
ds
xchg
mov
enter
jnp
cmp
test
int
mov
pop
cmp
and
xchg
cmp
push
movsb
cmp
mov
sarb
scas
cmc
cld
stc
or
adc
popf
mov
adc
jecxz
nop
xchg
and
adc
cltd
dec
sbb
sbb
jp
mov
ljmp
jl
jl
mov
out
cli
jle
or
test
xor
jp
mov
sub
add
test
xor
mov
hlt
and
dec
mov
mov
push
sub
mov
in
sbb
aas
xchg
jg
in
pop
and
add
roll
cmp
xchg
jae
cmpsl
push
and
and
jnp
inc
popf
popa
int
clc
xor
in
push
pop
sbb
push
movsb
sbb
mov
dec
inc
in
inc
mov
jmp
pop
xlat
repz
cwtl
sbbl
or
or
xchg
call
ret
inc
idiv
scas
push
rolb
push
xchg
mov
inc
outsl
mov
and
sbb
daa
push
or
repz
pop
push
popa
sbb
scas
arpl
mov
int
adc
or
or
mov
stos
ja
push
imul
mull
jo
stos
mov
push
xor
mov
fs
jno
aas
xchg
mov
in
mov
ret
es
cmp
jbe
jns
nop
mov
push
ljmp
icebp
icebp
mov
cwtl
addl
sub
loope
outsl
stc
or
mov
mov
mov
pop
cmp
sbb
mov
or
faddl
pusha
nop
in
bound
popa
addr16
pusha
xchg
cmp
mov
xor
je
push
scas
push
jl
ss
cmp
xchg
inc
ret
and
popf
adc
inc
jl
lds
mov
ja
cwtl
dec
xchg
jmp
push
dec
inc
mov
dec
arpl
dec
in
or
mov
mov
popf
and
rclb
ret
adcl
mov
mov
xchg
nop
jb
cmpsl
jmp
xchg
stos
test
mov
jbe
andb
and
adc
stc
pop
mov
add
int3
in
ret
mov
rcll
dec
shlb
icebp
mov
pop
lock
shl
sbb
pop
rolb
loopne
movl
xchg
shl
push
mov
lea
cmpsl
cmc
mov
movsb
cmp
mov
adc
outsb
mov
cltd
lret
cmpsl
inc
mov
cmpsb
adc
xchg
mov
gs
test
pushf
or
jne
adc
fldl
lahf
push
and
fisubrl
jo
loop
hlt
fdivr
pop
mov
pop
std
mov
sbb
fdivrp
push
mov
xlat
xor
inc
mov
lods
in
mov
mov
sbb
call
mov
mov
cli
cmc
inc
lcall
sub
xchg
cwtl
mov
jne
hlt
adc
cmc
mov
dec
mov
sub
popf
xor
aad
pop
pop
fs
dec
lds
test
xchg
fucomi
out
mov
sub
cs
fildl
sbb
stos
xor
ljmp
scas
mov
stc
mov
add
xchg
andl
fs
mov
xorl
pop
cld
outsl
jmp
dec
add
push
sbb
adc
loope
jmp
sti
hlt
add
ljmp
imul
mov
ljmp
cmc
inc
xchg
push
into
ljmp
cmp
sbb
inc
cli
adc
mov
jle
mov
lcall
jb
repz
inc
and
bound
cwtl
push
movsb
sub
out
int
shrl
cwtl
mov
pop
or
cltd
xchg
xchg
pop
in
sub
cmp
add
test
jle
xor
mov
cmp
mov
sbb
in
xchg
leave
out
jno
push
push
mov
mov
mov
sbb
insl
dec
aaa
jbe
mov
inc
jbe
cmp
lahf
idivb
addb
push
lock
cmp
fwait
cmp
jns
aam
das
rcr
es
pusha
cwtl
rcrb
push
xor
xlat
cmp
daa
and
push
std
push
adc
xor
mov
fldl
popa
scas
push
push
jp
mov
lods
xor
push
popf
cmp
je
test
jp
jmp
mov
xlat
mov
gs
push
pop
inc
out
sub
adc
lret
stos
add
outsb
inc
enter
mov
lods
rorl
in
jns
mov
aad
xor
jmp
out
mov
sbb
data16
sbbl
enter
fmull
leave
dec
mov
mov
inc
push
jo
testl
lds
scas
in
pop
mov
add
pushf
xchg
leave
cmp
mov
cmpsb
data16
popf
fwait
cmp
cmp
mov
mov
xchg
cmp
insb
pop
je
jbe
jg
push
xor
mov
addl
adc
xor
in
repnz
ljmp
jl
fwait
mov
mov
sub
clc
in
jbe
outsl
push
sub
lock
sbb
pop
mov
das
mov
in
jns
orl
and
cmp
je
mov
add
das
in
jl
pop
into
enter
pop
mov
jg
mov
mov
mov
mov
cmp
xor
insb
cmpb
mov
icebp
popf
push
arpl
xor
out
mov
in
call
scas
inc
dec
push
imul
cmpsb
into
out
dec
cmp
es
mov
push
dec
xchg
andb
dec
push
in
pop
mov
loopne
cmp
xor
mov
mov
jae
jbe
fmuls
loopne
pop
cmp
dec
icebp
fs
or
jno
mov
jle
stos
lods
js
loopne
mov
repnz
repnz
push
fwait
mov
mov
test
sbbb
mov
xchg
das
fs
sarb
jle
cmc
loope
stc
jnp
or
jp
gs
mov
fadds
lock
fdivp
jmp
xor
mov
in
add
fidivs
test
and
ljmp
cmp
in
mov
fists
dec
shr
xor
fldt
jmp
out
mov
jmp
ljmp
jae
mov
loopne
mov
jo
mov
cmp
clc
mov
pop
mov
sub
xor
test
movsl
shr
xor
xor
mov
movsb
cmp
cld
shr
clc
cmp
jo
push
inc
test
into
sbb
push
jge
dec
in
push
in
lret
icebp
mov
repnz
push
mov
clc
in
jno
and
add
push
or
imul
and
xor
fdivrs
and
cmpsb
ja
outsb
ds
and
dec
ds
lret
std
rclb
xor
loop
push
call
imul
inc
ret
ret
andnps
push
xchg
test
loop
lods
adc
mov
inc
xchg
psubq
pop
int3
add
repnz
jb
mov
push
push
xchg
xlat
inc
mov
or
and
dec
movsl
shll
jb
adc
xlat
out
push
lret
and
mov
cli
call
dec
push
add
fsubrl
repnz
test
xlat
jbe
ss
jb
in
cmpsl
mov
daa
stc
popf
out
and
mov
in
or
pop
js
mov
gs
insb
lcall
nop
add
add
out
sbb
dec
daa
and
int3
dec
pop
dec
add
pop
dec
sbb
aaa
push
mov
pcmpgtb
xchg
xchg
pop
xor
adc
jbe
das
ret
and
dec
jecxz
cs
mov
shlb
nop
popf
jmp
sbbl
xchg
xchg
or
in
lahf
pop
loop
lock
into
push
pop
push
stos
mov
push
nop
loope
add
jl
mov
xor
sub
mov
xor
hlt
popf
jp
std
push
outsb
xchg
pop
sub
cld
xchg
imul
mov
call
cmpb
mov
and
sbb
js
sbb
mov
fwait
mov
jl
cmp
mov
sbb
inc
stos
sub
and
cmpsb
xchg
lcall
mov
jmp
clc
push
hlt
imul
in
sbbl
clc
outsl
cmp
jbe
or
movsl
dec
xor
popf
mov
dec
xor
dec
imul
out
push
shll
jp
lahf
push
scas
das
repz
mov
andb
cmp
jmp
jnp
add
jle
jmp
popf
out
xchg
out
divl
xchg
mov
ljmp
loop
pop
fwait
andl
cmc
loop
xor
or
cli
jbe
sarl
mov
cmp
dec
cmp
ret
sbb
sbb
sbb
push
gs
xor
xor
es
lcall
jmp
adc
sbb
es
mov
sub
pushw
dec
fisubrs
sbb
pop
and
rorb
add
push
jl
mov
fs
pop
mov
jbe
ret
xor
mov
data16
mov
mov
cld
pop
mov
testl
mov
mov
ljmp
adc
cmp
negl
push
rolb
cld
mov
repnz
cmp
fwait
xchg
sub
lahf
fsub
pop
scas
hlt
pop
repnz
sti
mov
loopne
lods
std
inc
push
jnp
sub
insl
call
push
sahf
cmp
lret
sub
sarb
mov
mov
lret
inc
iret
ja
cmpsb
jmpw
xchg
sti
hlt
adc
int
cmp
sbb
or
xchg
adc
pop
mov
sti
popf
int
in
jmp
loopne
sbb
mov
xchg
mov
or
cmp
cli
push
push
loopne
jne
jo
add
push
loope
aas
pop
int
cmp
push
cltd
cld
push
xor
or
jo
dec
mov
mov
add
mov
inc
cwtl
sub
outsb
dec
nop
mov
loop
push
out
dec
jne
jle
xchg
mov
ja
lahf
dec
addb
sbb
xchg
dec
sti
add
cld
mov
sarb
mov
sbbl
insb
sbb
xor
addl
idivb
ss
mov
shlb
loopne
dec
add
xor
sti
popf
jle
insl
mov
mov
inc
rcrb
nop
push
pop
cld
stc
sbb
sub
adcb
lds
aas
sahf
cmp
bound
mov
sahf
icebp
cmp
lock
cmp
insb
lock
xchg
sti
mov
jp
push
mov
xor
aas
jbe
inc
jp
pop
mov
je
leave
mov
out
jae
pusha
sbbb
cmp
outsb
enter
pop
xlat
xchg
loope
sbb
popa
jg
rcl
cmp
movsl
cmp
js
in
mov
fs
imul
clc
sbb
cli
inc
jg
ss
shll
mov
add
cmp
mov
es
pop
sub
mov
fdivrs
mov
rorb
push
sbb
or
cwtl
scas
fimuls
or
xchg
into
mov
fmull
movsb
adc
cmp
jb
xor
xchg
xchg
lock
in
cmp
mov
lahf
movsb
lock
rcll
lcall
cmp
outsl
xchg
lods
cmp
arpl
div
aaa
mov
jne
mov
outsb
xor
loop
add
in
add
cwtl
pop
fwait
push
cwtl
add
and
add
in
test
insl
js
xchg
add
xchg
sbb
adc
push
call
cmp
sub
and
das
add
xor
mov
lock
in
dec
jnp
sub
addl
int3
cmp
push
repnz
or
pop
xlat
sbb
inc
xchg
xor
mov
cmpsb
pop
jbe
mov
ds
les
and
pop
iret
jp
aaa
sub
dec
sub
lahf
inc
push
dec
cmc
clc
adcl
mov
jle
sbb
pcmpgtb
movsl
popa
cmp
stc
icebp
cmp
repnz
or
mov
pop
andb
cmp
add
sub
bound
mov
repz
fdivl
mov
jbe
sub
stos
xchg
inc
and
xorb
mov
das
addr16
lahf
int
sub
sbb
mov
or
jecxz
adc
mov
xchg
inc
fstps
push
ja
lds
test
jb
out
ret
or
lock
cmp
aam
mov
call
divl
lret
xor
mov
sub
decl
and
arpl
jge
ja
mov
hlt
lock
ja
cmp
lds
stos
icebp
js
jmp
push
jae
mov
outsl
inc
popa
js
and
out
adc
mov
mov
lock
dec
xor
adc
or
jae
out
cltd
dec
xchg
xor
and
stos
jbe
xchg
jno
cmc
jo
or
cmp
mov
movsl
not
push
in
call
mov
mov
xlat
mov
std
aam
xchg
lods
pop
xchg
or
add
and
and
dec
pop
popf
pop
or
sub
cld
jns
xchg
xlat
daa
icebp
jns
clc
or
mov
mov
outsl
cs
in
mov
fidivs
or
stc
cmp
and
daa
out
popa
out
mov
cmpsl
les
dec
stos
and
fdivr
pusha
sub
xchg
push
jb
aam
add
cmp
mov
adc
arpl
xchg
pop
and
shlb
dec
in
cmp
insl
ret
mov
aam
xor
sbb
mov
pop
and
imul
push
loope
aas
inc
ljmp
adc
pop
cwtl
push
mov
mov
jl
mov
jle
repnz
pop
xlat
push
dec
cmp
pop
adcb
mov
test
sti
stos
rcrl
push
xor
inc
xor
sub
test
repnz
movsl
mov
ds
inc
add
std
jnp
jle
cmp
mov
fldt
call
xor
mov
inc
hlt
pop
jle
ss
scas
sub
inc
mov
test
dec
ret
sub
push
xchg
mov
xchg
insl
push
or
cmp
dec
dec
cld
add
xchg
pop
loop
push
pop
adc
imul
pop
cmp
imulb
int
lahf
ret
imul
push
adc
ja
add
ljmp
ret
and
int3
shl
testl
aam
movsb
jns
add
or
jg
pop
int
xor
or
xlat
in
cmp
pop
movsb
mov
out
cmc
nop
jp
adcl
fcompl
imul
adc
inc
cwtl
pop
or
cmp
dec
neg
cmp
cmp
lea
in
inc
bound
mov
inc
jp
jb
xchg
out
clc
or
rcll
mov
stos
mov
shl
repnz
mov
repnz
xor
rorb
stos
cld
loop
jns
ds
push
pusha
add
int
mov
cs
add
mov
sub
lds
dec
cmpsb
lods
and
loop
mov
xchg
movsl
adc
imul
jbe
push
iret
in
out
outsb
adc
cmp
loop
outsl
sbb
pushf
xchg
and
sub
std
nopl
rcrb
outsl
subb
mov
imul
adc
mov
cmpsl
out
leave
in
and
lret
xchg
mov
sbb
inc
lahf
nop
stos
movsl
into
ljmp
ret
loope
bound
cwtl
outsb
or
jb
arpl
dec
cwtl
cmp
or
out
mov
mov
jb
adc
loop
xchg
add
xchg
cmpsl
fsubl
or
inc
or
cli
mov
mov
movsl
mov
ja
sahf
dec
cmp
mov
in
stc
ds
cmp
loopne
sti
ds
mov
pushf
xchg
fcoml
mov
mov
adc
sti
mov
inc
rcrb
cmp
mov
push
ss
cmp
out
ficomps
test
cmp
in
out
lods
cmp
jns
movsl
pop
dec
xor
jmp
std
jmp
mov
maskmovq
mull
xchg
outsl
cld
scas
or
pop
sahf
pop
outsl
stos
mov
pop
sbb
cmp
fisubrl
jle
loopne
mov
adc
mov
lock
xor
popa
mov
popf
ret
shlb
xchg
push
test
adc
clc
movups
call
stc
sbb
adc
pop
pop
inc
cwtl
sahf
xchg
sbb
je
clc
cmp
pop
cmpsb
popf
in
test
out
dec
adc
jp
xchg
and
dec
jbe
insb
ret
jnp
arpl
lahf
jecxz
ret
cmp
outsb
sarb
add
rcl
stc
cmpsb
mov
xchg
daa
test
push
ljmp
xor
iret
or
clc
int3
or
fs
adcb
rclb
and
mov
pop
pop
in
repz
and
shr
mov
sbb
push
stc
stos
fsubr
xor
inc
sub
and
inc
mov
adc
int
xchg
mov
jbe
pop
mov
mov
mov
mov
push
gs
xchg
dec
cmc
pop
mov
pop
xchg
xchg
jp
jo
loop
mov
mov
sub
mov
mov
mov
dec
call
clc
jo
xchg
xchg
mov
out
test
xchg
mov
repnz
sti
insl
xchg
jp
shr
jecxz
mov
clc
aas
and
push
sbb
jl
ljmp
mov
repnz
sbb
mov
jbe
sub
mov
xchg
and
adc
push
lods
jmp
es
pop
in
enter
xor
fistpll
and
sti
mov
pop
cs
insb
enter
mov
sub
jge
add
sub
cld
mov
test
imul
ficoms
out
pop
and
mov
xor
push
lret
cmc
daa
movsb
pop
orb
or
out
xchg
mov
daa
lcall
cltd
add
cmp
cmp
cmp
push
loope
daa
in
mov
das
pop
pop
les
ret
dec
ljmp
movsl
mov
popf
ljmp
int
clc
popw
push
mov
cmpsb
hlt
sti
xlat
xchg
add
ss
movsb
pop
in
adc
in
into
xchg
inc
xchg
ret
xchg
lret
jnp
jns
adc
cli
mov
cmpsl
mov
mov
ret
stos
mov
sub
dec
pop
or
rsqrtps
xchg
and
and
cmp
sbb
fs
and
inc
clc
dec
leave
push
sbb
jns
in
scas
cmpsb
movsl
sub
pop
jbe
mulb
arpl
mov
dec
xchg
or
lods
cmp
push
and
mov
sbbb
pop
inc
and
cmpsb
cli
pop
push
xor
lahf
and
cmp
outsb
negl
xchg
and
mov
nop
fbld
jno
imul
ds
lahf
jmp
mov
ljmp
cmp
push
cwtl
cmp
mov
and
jle
add
cmpb
and
fcomi
lods
inc
cs
adc
out
mov
lods
sub
pop
pop
inc
dec
pop
lcall
inc
ret
xchg
ljmp
test
jle
jle
mov
fldenv
nop
adc
cmp
ret
inc
push
movsl
jecxz
das
arpl
icebp
pop
sahf
and
cmp
jo
int
sahf
xor
pushf
pop
iret
xchg
mov
jp
in
jmp
subl
xor
add
or
push
andb
movsl
std
xor
push
inc
mov
pop
flds
mov
shr
cmpsb
int3
dec
mov
call
fdivl
jo
or
jae
add
aaa
xchg
roll
fdivl
dec
ss
inc
roll
fnstcw
cs
pusha
push
mov
adc
pop
push
dec
mov
pop
and
dec
dec
imul
pop
sbb
jmp
in
scas
stc
dec
cmp
pop
das
dec
test
gs
negl
jns
cmp
xor
ljmp
sub
push
sbb
xchg
add
roll
iret
xchg
mov
pop
sub
xlat
adc
cmp
mov
mov
and
stc
ret
sti
sbb
out
xchg
std
cmp
cld
loop
fwait
fstl
or
adc
dec
repz
dec
and
mov
test
subl
shll
jnp
loop
dec
fwait
push
cwtl
sbb
in
rolb
jp
cld
js
pop
push
cmpb
movsb
stc
add
roll
dec
shll
cmp
insl
mov
pop
push
or
and
mov
not
adc
sub
jb
stos
cld
sbb
mov
push
cmc
inc
jo
pop
aam
push
nop
test
jbe
jmp
mov
dec
mov
out
dec
xlat
cld
cs
fwait
int
dec
mov
mov
or
cmpsb
mov
adc
mov
xor
sahf
cmp
mov
popf
cmpsl
dec
sbb
mov
add
lods
cmp
pushf
and
ficoms
daa
jle
inc
add
push
cmpsl
cmp
mov
lods
mov
cmp
inc
pop
mov
cmp
pop
mov
int3
das
mov
lcall
and
jno
gs
jae
add
xchg
add
js
sbb
cmp
sbb
mov
testb
inc
cmp
sub
lds
cmp
jns
xor
in
xlat
imul
idivb
cli
sarl
test
adc
loopne
mov
cli
in
xchg
cmp
mov
adc
imul
push
cwtl
and
inc
pop
sub
cmp
xor
dec
shrl
into
xchg
dec
je
fcoml
hlt
mov
xor
out
aaa
mov
cmc
jb
imul
jns
mov
stos
cmpsb
and
and
and
ja
or
add
ret
lret
int3
pop
jp
cmp
xchg
mov
xchg
sbb
lret
cmp
gs
movsl
mov
jbe
cmp
cmp
insb
movsl
cmp
push
push
jl
divb
inc
test
mov
adc
dec
ret
scas
imul
mov
cmp
mov
fsubl
std
rcl
push
mov
xor
bound
repz
mov
icebp
cmp
aaa
mov
fsubs
add
test
ret
lds
movsl
stos
push
jbe
pop
mov
mov
fidivl
jg
mov
popf
or
jae
adc
dec
mov
sub
fistps
je
ficoml
js
mov
repnz
fimull
inc
jo
inc
cli
in
push
and
push
jb
in
push
or
fcmovu
stc
cmpsb
or
sbb
mov
mov
inc
repnz
add
int3
sbb
addr16
dec
xchg
mov
addl
xchg
es
loope
push
push
cmc
cmc
ret
fs
add
mov
xor
mov
mov
xor
movsb
push
adc
in
sti
or
das
mov
lahf
sub
xor
xlat
out
gs
push
repz
inc
cld
lock
mov
imul
jae
xchg
sbb
sbb
sub
dec
repnz
xor
jb
push
lahf
ljmp
push
gs
fs
adc
cwtl
cmp
jno
cwtl
mov
repz
xchg
mov
dec
outsl
sub
pop
pop
cli
movsl
gs
daa
push
xor
mov
mov
xlat
fs
in
sbb
cmp
jmp
mov
lods
cmp
in
gs
jg
xor
leave
stos
movsl
repnz
add
mov
int
and
lds
sub
shlb
jo
sbb
xor
xor
jae
mov
dec
mov
inc
add
cli
adc
add
or
mov
inc
mov
pop
dec
ds
call
cmp
insb
enter
xchg
ss
mov
sub
xchg
jo
xchg
hlt
into
xchg
push
cltd
orb
add
xor
push
icebp
insl
xchg
iret
adc
sbb
add
jne
cs
pop
out
lods
hlt
cmpsb
icebp
xchg
dec
ss
jge
ss
out
xchg
ret
divb
movsb
mov
dec
cmp
push
cs
aaa
inc
shlb
mov
mov
add
mov
loop
mov
sarb
in
stos
jl
mov
stc
xlat
or
cmp
cmp
inc
push
mov
cmpsl
testl
mov
add
in
dec
dec
push
in
and
push
imul
sbb
cltd
and
pop
mov
test
or
pop
test
jp
jp
or
out
jp
and
jle
mov
outsb
repnz
xchg
sbb
divb
pop
xchg
aas
xchg
xchg
cmpb
xchg
test
repnz
xchg
inc
add
adc
jo
loopne
in
mov
lea
jmp
xchg
cwtl
mov
out
bound
shrl
js
lock
sbb
lds
adc
insb
inc
cmc
repnz
push
cmp
add
negb
inc
and
add
push
pop
mov
bound
sbb
push
lcall
sarb
lods
mov
enter
jecxz
jae
jno
movsb
inc
push
dec
jns
adcb
test
mov
mov
sbbb
cli
test
xor
repnz
mov
bound
pusha
cld
sbb
scas
stos
add
movsb
jb
mov
cmp
scas
or
mov
cmp
sti
sbb
inc
dec
shr
mov
sbb
mov
xor
push
sbbb
in
jl
lcall
in
cmp
mov
cmovle
xchg
xchg
cli
mov
mov
cmpsb
lock
fdivrl
mov
push
mov
adc
testl
jbe
int3
insb
adc
dec
xchg
ss
push
mov
mov
cmpl
push
push
xor
cmpsl
inc
jbe
les
pop
push
xlat
dec
sahf
sub
dec
jnp
mov
out
pop
adc
adc
fisttps
emms
jge
jp
and
cld
scas
cmc
xchg
fildll
mov
int
add
bound
xor
into
inc
jmp
and
xchg
mov
push
fwait
ret
mov
push
aaa
mov
and
pop
add
xor
addr16
mov
add
or
test
je
lcall
pop
dec
push
outsb
cld
cld
or
ja
and
scas
aaa
inc
test
out
enter
dec
cmc
pushl
dec
enter
and
dec
mov
ja
mov
mov
pop
jo
sbb
in
push
pmulhuw
imul
imul
mov
pop
ss
or
jg
pop
push
outsb
cmp
xlat
imulb
or
shrb
mov
sbb
xchg
or
inc
mov
and
mov
jp
test
mov
sub
mov
data16
sbb
daa
out
outsl
cmpsb
sbb
mov
push
test
outsb
into
dec
fnstsw
pusha
xchg
daa
in
pop
lcall
adc
xlat
mov
xor
cmp
cmp
hlt
xchg
lret
pop
and
rep
mov
jo
push
lahf
out
adc
adc
or
mull
mov
jno
xor
add
mov
xchg
das
out
jmp
xchg
or
xor
into
out
cmc
nop
mov
add
pop
or
add
adc
cmp
mov
cmpsb
jb
out
mov
lock
loop
or
mov
jb
jecxz
mov
push
repnz
outsb
dec
clc
sub
stos
sub
lock
xchg
daa
sub
xor
jo
enter
inc
xor
imul
dec
inc
and
push
cmpb
je
push
adc
lock
adc
and
push
push
and
movsl
dec
dec
jae
pop
and
lods
cmp
cmpsl
cli
mov
jmp
mov
enter
clc
push
cmp
xchg
xlat
repz
mov
pop
repnz
arpl
xchg
repz
sub
lods
mov
xchg
sub
adcb
add
mov
cwtl
mov
cmc
lock
xchg
cmpsl
xor
xlat
dec
mov
push
mov
es
std
push
inc
cltd
mov
cmp
rorl
dec
out
test
cmc
loope
adc
lods
adcb
divl
cmp
and
xor
test
data16
addr16
xor
xor
push
das
jb
outsl
xor
hlt
fwait
jecxz
mov
pushf
push
add
sahf
cmc
xor
shll
mov
pop
lock
mov
out
inc
sahf
in
mov
mov
adc
dec
push
fbld
cmpsl
lock
in
stc
mov
shll
mov
hlt
mov
or
jp
into
ljmp
inc
add
in
cmc
sub
pop
add
movsb
call
outsl
hlt
lods
addb
cli
inc
push
push
adc
mov
xor
in
push
xor
push
cmp
mov
into
mov
sar
pop
sbb
leave
jge
cltd
mov
cmc
push
dec
and
push
xchg
xor
dec
es
xchg
xchg
mov
mov
out
cmpsb
sub
orb
mov
fwait
gs
aam
and
xchg
mov
add
push
cmc
shll
std
xor
nop
cmpl
scas
shrl
outsl
cmc
add
xchg
xchg
push
addb
push
pop
sub
push
repz
and
jbe
lahf
loop
and
nop
or
jb
sub
sbb
and
movsb
mov
insb
arpl
or
jb
daa
sarl
mov
imul
cmp
mov
xchg
in
cmpsb
es
out
mov
loopne
pusha
dec
xor
ja
xlat
mov
stc
dec
jl
call
movsl
push
lock
inc
adc
dec
movsl
aas
insb
dec
movsl
cmp
inc
or
movsl
outsl
cmp
movsl
movsl
int
mov
xor
ret
push
dec
xchg
repz
imul
xor
jg
mov
jbe
icebp
cwtl
mov
loop
sbb
call
cmp
push
out
stc
das
cmpl
inc
push
xor
or
dec
and
mov
sub
testl
into
push
xchg
push
push
push
nop
jl
xchg
xchg
add
push
mov
out
into
push
dec
push
scas
mov
outsl
jne
push
jle
xchg
mov
daa
jmp
push
mov
inc
mov
fadd
aad
fwait
and
jp
outsl
inc
mov
push
sbb
xor
jbe
inc
loope
push
xchg
push
xor
scas
add
lods
scas
imul
jae
mov
loop
movsl
cli
test
mov
push
fisubrl
push
addl
xor
clc
adc
hlt
test
jbe
dec
inc
sub
scas
cmpsl
jno
mov
mov
test
cltd
mov
fnstcw
xor
sub
or
addl
inc
mov
cmp
in
enter
jnp
mov
hlt
cld
jp
jo
out
push
movsl
xchg
ds
mov
and
cmp
lret
jmp
push
cmp
mov
movsl
push
and
add
xchg
add
and
or
pop
int
int3
mov
inc
cmp
push
inc
xor
cmpsl
mov
stc
xor
rcrl
xor
mov
cmp
fs
into
aas
xor
and
xor
das
or
sahf
xor
into
mov
jbe
nop
xchg
inc
and
int3
push
xor
sub
out
sbb
mov
mov
int3
cltd
pop
xchg
fchs
mov
arpl
adc
jb
adc
or
push
loope
jb
divl
fdiv
inc
push
mov
imul
movsb
in
mov
pop
mov
scas
cmpsb
cmp
push
add
jo
cmp
sub
sti
add
pusha
sbb
add
xchg
pop
pop
inc
push
dec
and
mov
andb
sbb
push
jno
jecxz
jb
pop
jb
fcompl
hlt
xchg
shlb
ret
cmp
cli
mov
mov
mov
movsl
mov
push
push
movsl
lret
rorl
nop
pushf
push
adc
lea
xchg
xchg
xchg
push
cmp
push
into
mov
cli
xor
adc
inc
cli
bound
or
push
jl
cmpsl
ret
movl
repz
mov
rcrl
js
pop
jns
xor
mov
add
inc
in
mov
xchg
mov
pop
and
mov
jg
inc
pushf
ljmp
push
xor
icebp
cld
insl
xchg
lock
movsl
cmpsb
push
jnp
rol
lods
in
popf
push
push
jbe
mov
jo
xchg
inc
add
cmp
jbe
shll
mov
in
pop
push
insl
xchg
ret
cmp
jbe
shll
mov
or
adc
pop
fisttpll
sub
dec
push
jnp
hlt
xor
sub
and
xchg
mov
jbe
jae
dec
push
pop
push
std
dec
pusha
mov
dec
adc
pop
scas
in
sbb
inc
mov
mov
mov
gs
cmp
loop
cld
dec
and
or
xchg
sbbl
rclb
jnp
push
sbbl
pop
xchg
mov
jo
cli
jo
xor
fistl
mull
pminsw
sub
xor
xchg
je
add
jnp
xor
pop
outsb
jp
xchg
jle
and
cmc
in
rcll
pusha
and
jp
mov
jecxz
cmp
push
dec
cltd
jle
out
sub
addr16
push
mov
xor
adc
hlt
adc
in
adc
and
jo
push
inc
lcall
push
mov
arpl
mov
mov
insl
sahf
sub
push
xchg
jne
xor
or
repz
xor
xchg
sub
imull
loope
mov
xchg
andb
mov
xchg
mov
xor
add
adc
pop
sbb
fs
test
xchg
repz
fcomi
mov
hlt
mov
lret
out
jecxz
ds
movsb
cmc
dec
adc
sbb
cmc
gs
jae
insb
pop
mov
mov
push
fs
into
outsl
enter
xor
cmp
mov
sub
dec
lock
push
sarl
in
jb
push
sub
mov
push
inc
sti
stc
and
hlt
ljmp
sub
movsl
jo
mov
lahf
inc
sti
sbb
fcoml
xor
ljmp
mov
decl
std
cmp
rclb
and
xchg
scas
add
clc
test
mov
adc
adc
inc
xor
jb
loopne
div
pop
pop
push
fwait
mov
out
push
xor
out
ret
xchg
jne
mov
imul
xor
or
xorl
sub
ja
iret
ret
xchg
leave
and
scas
sbb
inc
mov
lret
and
popa
frstor
loop
push
pusha
sbb
daa
add
and
pop
mov
cmc
sub
cmp
pop
mov
xorb
push
call
bound
rcrb
lea
fmuls
jmp
out
fsubl
insb
adc
mov
push
xchg
lock
xchg
mov
xchg
mov
loop
aaa
mov
push
js
scas
je
dec
mov
mov
fwait
in
cmp
add
mov
dec
mov
je
imul
xchg
stos
xor
jmp
scas
jns
ja
jo
mov
xchg
mov
mov
mov
jl
arpl
mov
mov
jo
mov
push
fsts
and
or
test
popa
dec
pop
mov
gs
pop
jne
sbb
pop
jp
shrl
xchg
mov
push
mov
xor
aad
lret
lret
xor
hlt
inc
int3
mov
xchg
or
pop
sbb
out
jle
std
jl
xchg
cmc
daa
inc
jmp
insb
xchg
int
insb
loopne
lahf
xchg
xlat
cmp
inc
or
test
sahf
xchg
jl
lret
ss
movsb
inc
inc
movsb
ss
xchg
int3
add
arpl
hlt
std
dec
jp
outsl
mov
outsl
jbe
int
std
lods
ret
std
mov
icebp
std
dec
mov
ret
add
sbb
sbb
icebp
adc
std
aaa
lret
ss
stos
adc
cmpsb
add
push
sarb
lock
das
adc
jp
jne
jge
arpl
mov
and
pop
repz
mov
sbb
xor
xchg
sub
out
jge
pop
xchg
repz
adc
lds
dec
in
xor
push
repz
test
fdiv
in
sahf
push
and
insb
xchg
or
pop
sbb
out
push
mov
out
mov
cmc
mov
popf
sbb
sbb
fucomp
mov
xchg
jge
xchg
les
dec
jns
jmp
sbb
pop
xorb
xchg
mov
popl
pop
jae
jbe
sarb
push
push
xlat
mov
add
cmpsl
and
or
xchg
push
mov
adc
xchg
repz
mov
adc
into
cmp
inc
xchg
hlt
jge
repz
mov
jge
loopne
js
iret
scas
xchg
pop
sbb
in
repz
pop
cli
bound
jns
inc
lock
lods
lock
scas
cmp
lock
scas
dec
inc
lods
xchg
or
inc
movsl
lods
in
cmp
inc
in
fidivs
inc
cmp
movsl
in
les
lock
mov
lret
xchg
fldenv
dec
movsl
xor
inc
mov
shlb
sbb
mov
inc
sarl
pop
lods
pop
shrb
mov
xor
add
and
fcmovnb
dec
cld
cwtl
shlb
ret
cld
popl
ret
jbe
cld
pop
and
jecxz
cmp
push
xor
lea
jbe
fcoms
aaa
mov
push
cld
xchg
fildl
cld
sbb
js
adc
into
cmp
jns
lcall
mov
fidivrs
lahf
movsb
and
mov
inc
mov
scas
mov
add
call
cmp
push
and
repnz
bound
lods
scas
out
movsl
push
xchg
add
jae
add
xchg
imul
bound
ja
push
sar
push
push
inc
or
mov
insl
ret
iret
xor
sub
cmpl
sahf
or
das
fisttpll
shl
idivb
test
mov
jl
or
aaa
repz
inc
add
movsl
dec
mov
cmp
std
and
aas
lret
mov
iret
aaa
jbe
cwtl
push
iret
js
in
cmp
jns
and
test
add
push
mov
negb
repnz
jmp
jecxz
pop
movsl
push
add
mov
and
pop
cmp
jp
out
xlat
cmpb
xor
repz
movsl
xor
jge
movsl
inc
push
repnz
scas
popa
pop
lret
out
dec
icebp
fnstsw
fsts
or
push
sbb
and
in
into
mov
test
adc
or
shl
push
dec
loopne
cmpsb
add
sahf
call
adc
sub
sbb
jecxz
jbe
jnp
mov
add
push
test
dec
push
scas
movsl
add
in
dec
cmp
push
mov
jb
pop
pop
fbld
cmpsl
xchg
sbb
nop
mov
cmp
test
scas
push
clc
lcall
clc
cmp
stos
lahf
sqrtps
jmp
movsl
or
push
arpl
xlat
outsb
in
pop
mov
les
fdivp
nop
call
cmpsl
in
xlat
push
stos
loop
jecxz
xor
dec
mov
add
jbe
ja
fwait
out
lds
or
je
pop
jle
jbe
push
cld
cwtl
push
test
and
xchg
iret
and
xchg
shlb
gs
mov
xchg
mov
jl
inc
jl
enter
pushf
inc
adc
ss
xchg
aad
cmpsl
enter
loope
call
lea
mov
pushf
or
fstpt
or
test
in
cld
cmp
jnp
or
repnz
jo
jno
and
pop
push
or
repz
xor
mov
aam
fwait
into
mov
or
clc
push
or
pusha
in
dec
je
inc
sbb
mov
repnz
push
lea
out
das
ret
fiadds
cmp
and
inc
push
sbb
mov
push
nop
xor
mov
stos
andb
loopne
scas
addr16
mov
scas
xchg
fs
clc
xchg
negb
sbb
aas
jg
mov
ljmp
aaa
test
mov
add
add
and
jae
lret
xchg
ss
inc
jae
mov
mov
outsb
daa
gs
divb
pusha
insb
or
lea
out
fcoml
es
mov
jp
cmpsb
mov
addr16
icebp
adc
jle
loop
add
add
lret
mov
mov
mov
dec
aad
mov
add
pushf
cld
lock
out
loop
xchg
stos
cmpb
and
sub
jmp
add
jo
xor
xchg
int
xor
clc
xor
jne
gs
mov
int3
test
not
mov
je
cs
mov
cmp
adc
fidivl
dec
mov
stc
or
cmp
mov
mov
out
repnz
mov
daa
or
xor
inc
push
stc
sbb
adc
lea
popa
dec
mov
xor
stc
mov
lret
lock
enter
in
dec
push
cmp
jge
xlat
or
int
mov
hlt
dec
inc
stc
cvtpi2ps
or
xchg
loop
stc
xor
clc
mov
data16
mov
and
call
lods
notl
subb
mov
sti
cmpsl
mov
cmpsb
cmp
jecxz
cmp
or
xchg
jae
push
in
mov
sti
xchg
adc
cld
sbb
jne
jge
push
jae
fimuls
stos
aaa
fbld
adc
repz
dec
sarb
xchg
jb
shrb
gs
dec
pushf
xchg
std
add
sbbl
jno
in
popa
dec
inc
mov
pop
int
aad
adc
mov
lds
dec
mov
xchg
cld
loopne
es
xlat
adc
in
nop
negl
push
mov
movsb
scas
popf
sub
ret
outsb
mov
mov
inc
pop
scas
sbb
call
adc
repz
int
divl
inc
mov
into
imul
add
or
sti
int3
int
rep
stc
jns
jb
sbb
popa
or
out
icebp
incb
push
jg
cmp
cwtl
add
push
sbb
shll
jae
in
or
ficomps
mov
or
ret
lret
jmp
loope
repz
mov
dec
mov
jb
mov
jo
in
pop
cmpb
gs
xchg
fwait
cmpsb
mov
punpcklbw
jno
and
jne
sahf
ret
movsb
packsswb
movsb
rolb
aaa
xor
es
jnp
mov
inc
loope
mov
imul
jae
gs
xor
pop
pop
and
push
mov
cmc
mov
shll
mov
addr16
and
push
enter
xchg
int
fdiv
xchg
inc
jbe
mov
lret
push
leave
sub
jmp
add
jns
popf
lret
and
cmp
xor
lahf
or
push
test
je
or
jo
test
sbb
inc
push
shrb
into
push
mov
pop
and
scas
adc
ja
xchg
hlt
push
jp
mov
xor
jno
sub
ds
int3
cli
sub
dec
in
push
and
mov
cmp
jmp
xchg
mov
or
dec
jae
testl
mov
or
loop
sub
push
inc
pusha
adc
mov
xchg
mov
hlt
into
and
in
ljmp
and
push
pop
cmp
sbb
mov
mov
xchg
int3
mov
adc
movsl
sub
mov
stos
jae
xor
call
add
mov
jb
cmp
cli
popf
xor
xchg
jns
dec
cmp
lea
cltd
lcall
rolb
repnz
sub
out
adc
sarb
jbe
lods
lock
scas
repz
scas
inc
mov
cmpsb
and
jmp
mov
popf
test
cmp
out
sti
cmp
dec
xchg
imulb
movsb
in
and
push
mov
stos
and
xchg
lock
jnp
je
push
into
mov
shlb
std
mov
in
add
pop
lock
ljmp
jo
jbe
cltd
xor
xor
push
push
psubw
sub
aaa
dec
out
test
cmpsb
cmp
mov
das
nop
inc
inc
jmp
adc
sbb
lock
or
xchg
mov
call
jne
and
popf
mov
loopne
shlb
sti
mov
xor
ret
in
and
push
imull
xchg
cmp
xchg
inc
sub
test
cmp
lea
js
aaa
shl
xchg
mov
sub
popa
mov
adc
jge
iret
outsb
jp
add
in
imul
adc
add
cmpsl
mov
mov
les
cli
out
fnstenv
xchg
cmp
pop
aas
add
mov
add
test
stc
cmpsl
int3
mov
mov
jns
repnz
cmp
jno
mov
dec
add
xchg
jecxz
ret
and
jb
adc
mov
or
loop
fisubrl
and
repz
xor
push
and
test
cwtl
test
sub
cmp
fistpll
mov
popa
xor
divb
xchg
lds
in
add
ja
xor
pop
pusha
bound
int3
mov
dec
xchg
mov
out
sbb
mov
jbe
and
xlat
ss
int
jle
shrb
mov
jo
or
stos
jo
loop
pop
sub
xlat
loop
xchg
hlt
jb
int
xor
mov
pop
dec
push
cmp
xlat
or
ja
stc
add
xchg
sahf
push
mov
lea
dec
mov
shlb
into
call
pop
in
lret
xchg
and
nop
fidivs
cmp
sub
icebp
and
mov
dec
test
imul
in
ficoms
ja
mov
cld
pop
ret
rolb
sti
sub
inc
int3
add
adc
jo
dec
mov
mov
xor
mov
xchg
xchg
jmp
repnz
push
xorl
lods
lcall
pop
filds
cmpsl
adc
mov
sub
aas
xchg
sbb
mov
jle
inc
add
lcall
orb
sub
mov
jl
in
pop
sbb
sub
mov
push
jmp
mov
adc
mov
pop
jl
adc
out
cs
int3
cmp
negb
in
or
xchg
gs
add
mov
sub
dec
outsb
xchg
ljmp
repnz
xor
fnstsw
lods
outsb
jnp
out
sbb
push
cli
adc
pop
int
mov
scas
das
mov
cmpb
sbbl
pop
xchg
repz
insb
jae
dec
sub
and
mov
mov
loop
mov
or
jo
es
pop
imul
aaa
andl
cmp
ss
dec
xchg
mov
scas
pop
jle
pop
add
sbb
ss
mov
pop
into
negb
cmc
std
xchg
mov
add
push
dec
xchg
js
cwtl
xchg
out
fucomp
mov
cmp
or
and
cltd
inc
jg
jp
pop
loope
push
into
jbe
mov
xlat
rclb
pop
or
imul
fcmovbe
shrb
mov
pop
adc
pop
jp
cmp
push
mov
repz
xor
xorl
out
insb
cmp
adc
mov
mov
aad
mov
nop
push
xchg
xchg
sbb
or
xchg
aaa
xchg
xor
dec
add
jnp
dec
xchg
movsb
inc
repnz
xchg
mov
outsl
xlat
jae
xor
mov
push
sbb
pop
shll
cmp
sub
and
ljmp
pushf
push
ret
sub
ds
xlat
mov
subb
mov
mov
jb
cmp
xor
mov
ja
test
out
or
cli
adc
icebp
cmp
sub
xchg
repz
xor
lods
popf
rolb
jnp
adc
xchg
and
cmp
ret
stos
and
cld
jmp
shll
cli
mov
xchg
fists
shl
xlat
cmp
fistpl
inc
xchg
and
out
rclb
loop
xlat
xchg
cmp
loope
jae
repz
adc
fidivs
popf
xor
and
xor
mov
and
jnp
ds
mov
mov
dec
out
aad
pop
add
cs
xchg
dec
xor
push
clc
cmp
aam
lahf
dec
mov
mul
fsubrl
dec
push
fsubrl
mov
and
fwait
xor
or
inc
test
pop
in
sti
negb
mov
sbb
loop
rolb
fstpl
mov
enter
mov
fcmovu
lock
xorb
cmp
js
in
int3
xchg
sar
xor
popl
les
sub
dec
cmp
mov
std
jbe
pop
xchg
cmp
sti
mov
push
mov
scas
lret
mov
push
loop
xor
or
enter
repnz
xor
notl
aad
and
hlt
mov
xor
mov
fisubrl
mov
out
mov
xchg
not
clc
notl
lcall
shrl
pop
pop
fmuls
mov
adc
mov
sbb
sarb
pushf
mov
aaa
loopne
cmp
sub
jbe
mov
jno
inc
lock
fisttpll
mov
ss
inc
or
movsb
mov
or
xchg
ss
in
int
mov
hlt
popf
xor
jno
into
fisubl
cli
dec
stos
gs
xchg
xchg
sbb
xor
addb
jb
inc
adc
pop
pushf
shlb
lock
out
daa
addr16
mov
xchg
mov
cmp
shr
inc
mov
push
xor
shr
test
add
ret
pop
or
loopne
outsl
push
negl
xor
add
dec
xchg
xor
inc
lcall
xor
push
jb
ljmp
push
mov
mov
test
jmp
and
push
push
xor
inc
inc
adcb
xor
dec
setno
es
xchg
add
xor
xchg
repnz
out
push
inc
out
addr16
sbb
js
orl
movsl
out
out
cmp
push
int
sbbl
inc
out
out
rcr
clc
into
scas
insl
shll
mov
aad
dec
ret
sub
dec
in
js
jnp
sub
mov
outsl
push
jb
push
xor
xchg
or
sub
push
int3
sub
jecxz
lock
cmc
jb
inc
mov
xor
add
ss
movsl
push
mov
adc
dec
sbb
cmp
int
push
jp
in
shll
popa
jl
pop
sar
inc
call
jecxz
fidivs
mov
adc
xlat
mov
mov
mov
sub
clc
lock
sub
fbstp
lcall
mov
fmull
out
or
xor
jns
sbb
dec
das
adc
add
push
push
fistps
ss
fisubrl
out
adc
dec
mov
xor
dec
iret
lea
push
es
imul
rcrb
mov
jge
xor
push
idivl
mov
jb
outsl
out
cmp
mov
sarb
xor
fidivs
dec
add
movsl
and
sahf
pop
enter
adc
repz
cwtl
jle
sbb
cmp
dec
xor
into
jo
std
xchg
mov
movsb
mov
daa
cmpsb
in
int3
pushf
cli
xor
mov
mov
sbb
imul
ljmp
lods
mov
sti
es
push
cmc
ror
add
sbb
mov
insl
div
lods
icebp
sbb
movsw
mov
lds
mov
cmpsb
mov
dec
insb
jnp
rep
fdivl
adcb
push
xchg
test
xchg
mov
roll
adc
push
xor
int
lcall
popf
xlat
stos
dec
popf
pop
dec
clc
cmp
cmp
cmp
jbe
out
xchg
pop
inc
or
xor
nop
rcll
mov
aam
dec
popf
push
out
mov
xchg
lea
icebp
out
inc
sub
jmp
clc
and
je
fmull
or
dec
aam
lods
or
das
dec
jecxz
outsb
jb
sti
bound
mov
xor
roll
leave
setl
mov
xchg
mov
iret
arpl
scas
xchg
out
cmp
dec
sarb
movb
cmp
xor
outsl
xor
inc
arpl
push
repz
aaa
mov
push
mov
rcr
xchg
sbb
xchg
and
movsb
cmpsl
xor
dec
push
mov
pop
enter
cmpsl
mov
xlat
xor
xchg
xor
outsb
aad
xor
mov
rorb
sub
and
mov
mov
es
mov
and
ss
or
ds
xor
push
xor
into
xchg
pop
mov
pop
xchg
pop
data16
inc
mov
std
pop
out
data16
push
pop
andl
adc
jle
or
xchg
add
call
mov
and
scas
les
mov
cmp
mov
dec
into
xchg
cld
sbb
orl
cli
test
mov
paddsb
sbb
bound
dec
cmpsb
dec
sub
xor
mov
aas
jb
sbbl
sbb
sbb
add
ljmp
mov
xchg
add
test
sbb
neg
ror
into
xchg
push
xchg
inc
or
fs
popf
mov
mov
jle
xor
pop
push
out
shrb
lcall
fdiv
sub
in
cli
test
sub
push
in
movl
popf
sahf
dec
xlat
sbb
dec
pushf
push
int
adc
mov
leave
xor
repz
repnz
jmp
dec
mov
lock
out
push
xlat
cmp
fwait
mov
call
jb
repnz
mov
xchg
imul
mov
std
inc
xchg
xor
out
sbb
je
out
add
sbb
inc
mov
cmp
mov
std
xchg
push
movsl
divl
cmp
mov
mov
jnp
and
cmpsl
jb
xor
sbb
repnz
jb
inc
push
add
mov
rcrb
sahf
fwait
xor
fmul
fldcw
sbb
ss
jo
repz
push
repz
xchg
js
mov
dec
les
arpl
cmpsb
call
adc
lret
sahf
ret
cli
sub
sub
cmc
adc
repz
orl
js
out
and
test
sbb
cwtl
jecxz
add
fmuls
outsb
ret
insl
push
pop
dec
add
cmpsb
mov
xchg
imul
mov
xor
loop
xor
cmp
lahf
cmp
sub
mov
xchg
pop
jbe
fs
divb
in
or
fnstenv
mov
ds
sbb
push
repnz
pop
std
mov
cmp
mov
cmp
push
arpl
stos
das
out
fisubrs
cmpb
or
jg
cmpsb
mov
mov
xor
xor
arpl
aad
mov
ljmp
jp
negl
and
std
cltd
and
xor
fnsave
aas
xchg
cwtl
sbb
pop
cmp
and
sbb
sbb
mov
nop
mov
inc
repz
xor
daa
xchg
and
cmp
aas
repz
in
inc
mov
inc
lret
ret
push
ja
push
sbb
in
ficomps
push
ss
and
fistpl
ljmp
cmp
int3
cmp
add
or
add
xchg
push
test
out
hlt
insb
dec
es
jecxz
xchg
pop
cmp
cmp
loope,pn
mov
add
lds
shll
sbb
arpl
sahf
mov
push
in
in
pop
jo
cmp
aas
imul
cwtl
popa
lcall
lahf
cmpsb
stos
mov
and
xchg
and
and
jb
xchg
inc
lret
dec
out
jno
add
xchg
add
repnz
int
daa
jbe
inc
cmp
and
xchg
jae
or
push
jbe
jmp
lcall
out
push
mov
or
jle
notl
dec
in
dec
aaa
sahf
push
sarb
sub
cld
cltd
les
dec
mov
inc
cld
mov
ljmp
iret
mov
sarb
lods
xor
cmc
repz
lret
push
cmp
adc
in
mov
in
lahf
daa
jmp
test
add
call
xchg
cmp
inc
jnp
test
inc
out
xor
ret
jl
stos
outsb
repz
fnstcw
hlt
jb
call
or
or
sub
test
orl
jg
push
add
fiadds
into
mov
sub
stc
mov
repz
adcl
mov
ljmp
and
xor
ret
in
adc
movsb
push
xchg
push
push
xchg
cmc
outsl
jl
mov
xchg
cld
pop
loopne
mov
insb
imull
es
das
inc
cmp
or
mov
jl
andl
sbb
pop
lret
cmp
pop
stos
xchg
xchg
jb
stos
jne
outsb
ljmp
outsl
adc
cmp
stos
mov
mov
mov
insl
or
jbe
and
inc
das
inc
pop
sahf
sahf
fnstenv
cmp
popf
pop
cmp
movsl
jbe
pop
xlat
lods
xchg
imul
sub
push
xchg
and
jnp
xlat
and
xchg
push
std
mov
shr
icebp
cmp
sahf
ja
mov
and
mov
xchg
xchg
shll
xor
mov
ss
pop
xchg
fadds
cmp
pop
lods
xor
sbb
pushf
imul
clc
out
dec
adc
call
push
and
add
xchg
jo
stos
in
xchg
mov
loop
iret
stos
imull
arpl
mov
adc
mov
daa
mov
fiaddl
lea
add
stc
sti
pop
call
adc
dec
aad
xor
cmpsl
scas
cli
int3
mov
cmpsb
add
fidivrs
test
jae
mov
inc
adc
lods
dec
mov
pop
mov
andl
xor
push
into
je
pop
loope
repz
insl
int3
mov
or
jmp
movsl
mov
loopne
adc
xchg
mov
enter
mov
adc
jp
xor
rcl
mov
bnd
xchg
mov
xchg
adcl
ljmp
or
pop
mov
repz
dec
sti
inc
aad
mov
test
insb
stos
xor
aad
mov
adc
cli
xchg
jo
xchg
test
sub
cld
dec
mov
push
inc
sub
or
cmc
xchg
xchg
cmp
pop
std
dec
lea
mov
sti
inc
mov
sarb
repnz
lahf
scas
hlt
xchg
jnp
jae
mov
fistpl
aaa
fidivrl
adc
sbbb
push
xorb
pop
stc
cs
push
insb
test
out
xchg
jp
out
and
sub
shlb
int
xor
or
int
and
orb
ja
out
inc
imul
lcall
push
mov
je
jmp
cmc
mov
inc
icebp
mov
addb
cmc
aad
mov
add
xor
test
shrb
hlt
cmpb
sub
mov
loopne
xchg
or
pop
lock
mov
gs
mov
pop
mov
sahf
mov
sub
xchg
aas
int
out
adc
mov
mov
hlt
pop
adc
dec
les
pop
push
icebp
mov
dec
cmp
cli
xchg
adc
xchg
adc
cmpsb
aaa
sub
fsubp
sub
and
inc
pop
daa
sbb
sbb
daa
je
fs
mov
mov
push
dec
pop
rcrb
cmpl
mov
jge
fsubrs
aam
outsb
stos
pop
or
sub
dec
push
clc
std
cmp
sbb
in
adc
mov
adcb
sbb
and
inc
jae
stos
repz
sbb
cmpsb
push
pop
inc
adc
sti
call
fs
cmpsl
call
xlat
cld
jo
popf
jno
and
stc
aaa
repz
mov
icebp
cwtl
mov
mov
pop
test
push
xchg
xchg
xchg
movsb
inc
dec
xchg
sbb
xor
mov
subb
inc
mov
outsl
test
testl
mov
loop
dec
dec
mov
cwtl
cmpsl
subb
jae
mov
mov
bound
mov
mov
jae
dec
sbb
testb
xchg
adc
aam
mov
imull
adc
jb
mov
sub
jo
push
mov
enter
jae
push
xor
jmp
pop
in
test
mov
sub
scas
jg
ret
cmp
jmp
sti
mov
cmpb
fisubrs
je
loop
xchg
add
hlt
mov
push
das
ljmp
mov
ret
fimuls
add
sub
popa
jae
xor
cmp
jnp
in
mov
and
cli
outsb
inc
movl
cmp
cmp
jecxz
mov
repnz
subb
pop
and
sbb
adc
and
sub
jo
scas
adc
jbe
sbb
mov
mov
ret
ja
ljmp
addr16
stos
lock
xchg
scas
fidivrl
and
pop
push
and
pop
fwait
rcr
insb
mov
dec
insb
call
js
dec
xchg
outsl
cmp
xor
out
jecxz
mov
into
ds
pop
inc
cmpsb
hlt
push
xchg
mulb
jno
mov
adc
cltd
popf
dec
arpl
mov
mov
sarb
stc
cmp
fdiv
mov
push
dec
xchg
out
mov
call
or
xlat
subb
nop
push
lods
lds
adc
fwait
jbe
jle
mov
jmp
ret
fisttps
mul
clc
sbb
inc
mov
dec
dec
in
mov
dec
and
jae
xor
arpl
mov
and
mov
repnz
mov
lahf
mov
repnz
mov
sbb
cld
sub
jmp
jbe
push
test
jne
aam
push
pop
dec
adc
jle
adcb
xchg
pop
mov
adc
adc
xchg
xchg
int3
insb
xchg
out
push
sti
and
dec
push
pop
mov
testl
scas
les
sub
xor
xchg
loope
mov
in
push
mov
dec
js
ret
inc
cmp
dec
push
iret
repnz
sahf
xor
dec
mov
mov
add
jns
adc
push
jno
jne
push
dec
sub
in
cmp
sub
xchg
lock
scas
push
fucomi
movsl
cmp
dec
in
jo
ret
and
rorb
pusha
xor
sbb
adc
or
in
mov
test
push
ss
loop
stc
inc
and
xor
add
scas
mov
adc
and
bound
fwait
jp
setnp
inc
addr16
mov
adc
arpl
lret
and
repnz
ret
in
mov
sbb
aaa
cmc
jmp
negl
out
or
addr16
fnstcw
xlat
test
sbb
sbb
in
sub
cli
mov
cld
sbb
pop
popf
fstpt
ffree
pop
faddp
adc
loopne
ds
test
mov
mov
jne
mov
cwtd
or
call
mov
cvtps2pi
or
mov
xlat
repnz
xchg
mov
mov
inc
and
iret
or
movsb
or
test
repz
loop
mov
jge
xor
sbb
mov
xchg
mov
jns
ss
cmp
lods
inc
arpl
in
mov
aad
repz
push
in
dec
mov
in
ret
outsb
mov
push
notl
sub
or
out
lahf
repz
mov
enter
push
xchg
leave
cmpb
xchg
rcll
cmpsb
mov
mov
movsl
dec
cmpsl
adc
in
loopne
mov
xor
cli
lahf
in
push
loop
xlat
pop
sub
xchg
sub
jecxz
in
push
subl
mov
enter
in
ret
mov
and
jo
in
sub
mov
cmp
or
and
aam
mov
push
and
nop
pop
testl
xchg
andb
repnz
dec
test
rcrb
outsb
inc
cmp
out
adc
in
mov
mov
scas
sahf
popf
xchg
or
xchg
and
fs
into
test
js
pop
or
cmpb
std
sti
shlb
xor
je
pop
shl
fdivrl
add
xor
mov
push
in
add
in
inc
dec
xchg
fcomi
push
sub
ss
xchg
stos
jge
mov
cmp
scas
daa
decl
cwtl
push
cs
mov
daa
movsb
sbb
mov
mov
push
sbb
or
mov
mov
daa
mov
out
sbb
mov
or
aaa
in
mov
mov
mov
sbb
aad
repz
insl
xchg
xor
pop
mov
sub
filds
shll
mov
cmpsl
clc
cmp
notl
js
mov
sbb
mov
xchg
mov
dec
push
and
sbb
pop
pop
loop
sub
iret
popf
shll
push
push
jb
pop
xchg
mov
mov
sarl
mov
inc
inc
push
mov
stos
jg
jo
cmpsb
testb
mov
lcall
xchg
scas
push
jae
mov
cli
xlat
push
mov
scas
loop
lds
push
cmp
orb
das
movsb
jmp
inc
stos
inc
pop
mov
iret
xchg
sbb
sbb
xchg
push
nop
xchg
mov
ds
sbb
ja
jo
rorb
out
pop
jne
sbb
inc
test
pop
jmp
pop
int
cld
maskmovq
pop
in
pop
test
jp
andl
xor
repz
dec
shrl
out
aam
and
pop
jmp
pop
mov
xlat
jo
pop
idivl
push
jb
or
jnp
fwait
int
enter
mov
adc
adc
loopne
adc
mov
lahf
push
xor
mov
cmp
adc
sbb
mov
jne
sub
mov
mov
fsubs
mov
push
jo
add
loop
mov
fwait
lahf
movsl
adc
push
loope
pop
xchg
push
and
mov
mov
les
xchg
xchg
lods
nop
and
xchg
push
cmp
stos
addps
subb
dec
lahf
push
enter
stos
mov
add
and
fwait
add
repz
test
stos
call
ja
ss
or
and
repnz
inc
popf
ljmp
inc
pop
cmpsl
shl
les
cmpsl
xchg
mov
mov
loopne
sarl
scas
cmp
pop
shlb
cmp
js
xchg
jmp
jo
xchg
unpckhps
loop
sub
or
push
jo
pop
pushf
pop
mov
out
cmp
mov
clc
inc
es
aaa
push
push
mov
mov
outsb
cmp
aas
bndstx
mov
stos
out
lods
out
mov
je
mov
insb
or
call
repz
and
es
cmp
movb
data16
lock
add
jle
push
and
test
xor
scas
out
aaa
mov
inc
iret
mov
in
mov
xor
clc
ret
sbb
xchg
sarb
xor
movsb
shrb
sub
bound
mov
mov
in
mov
test
cld
inc
sarb
out
pop
sbb
mov
lahf
push
pop
int
stos
push
in
popa
sahf
lock
push
mov
push
pop
mov
popf
repz
xchg
cmp
aam
inc
std
rcll
pop
mov
shll
push
xchg
out
mov
stos
adc
xor
mov
sub
rclb
xchg
into
clc
sub
sahf
jmp
daa
xor
push
lcall
sahf
cmc
mov
mov
mov
sarb
xor
cmp
xchg
sbb
adc
xchg
mov
notl
xchg
in
and
int
ficoms
jo
mov
es
push
jb
add
mov
jnp
ret
sbbl
xchg
mov
loop
aaa
cmc
mov
lret
xor
in
clc
mov
loope
xorb
xchg
dec
mov
mov
cld
cwtl
lods
rorb
xor
mov
cmc
out
movsl
mov
out
fbld
sbb
inc
mov
xchg
lret
fidivl
lea
push
xchg
pop
aaa
jp
bound
je
std
xlat
mov
push
rcl
xor
in
std
mov
imul
lcall
fstpt
daa
xor
mov
cli
popl
and
mov
not
sub
add
inc
and
loopne
xchg
or
add
mov
int
out
stc
xor
cmp
incl
xchg
push
loope
sti
outsb
ljmp
add
das
testl
mov
xchg
scas
icebp
mov
xchg
jae
scas
scas
mov
pop
mov
cs
and
pop
jecxz
rolb
fnstsw
dec
add
jo
mov
adc
std
pop
cmpsb
sti
jno
in
mov
jnp
cmp
clc
cmp
xor
lods
pop
idivl
mov
adc
int
mov
test
xchg
mov
in
adc
lods
push
cmp
cmp
arpl
lahf
xchg
pop
in
dec
das
mov
into
xlat
xor
mov
lahf
inc
lcall
cmp
fmull
mov
aaa
stos
ret
leave
xor
jg
ss
sbb
xor
jns
bound
lret
xlat
sbb
stos
mov
add
cmp
jb
nopl
or
dec
or
sub
mov
mov
ds
cld
aas
push
enter
dec
out
sbb
lcall
xor
xchg
cli
mov
popf
ds
xor
mov
adc
rclb
ss
ret
push
sub
cltd
fs
add
pushf
inc
popf
jb
mov
inc
and
repz
xchg
ds
cmpsl
or
and
sbbb
ss
push
fs
pop
adc
jnp
rolb
inc
repnz
stc
loope
pminsw
xchg
ret
and
cmp
into
mov
sub
pop
xchg
sbb
cld
adc
daa
les
sub
xchg
xchg
rol
ja
xchg
imul
loopne
andl
dec
xchg
enter
imul
mov
insb
cmp
mov
push
outsb
jmp
pop
xlat
mov
pop
popf
ds
hlt
cltd
pop
push
jmp
flds
add
fdivp
dec
cmp
xlat
or
jb
gs
fwait
xor
call
iret
push
lods
movsl
hlt
sbb
or
daa
mov
aad
stc
int3
xchg
or
aam
jns
add
lock
mov
and
xor
lcall
mov
mov
sbb
rsqrtps
cmpsb
add
stc
add
sti
repnz
idivb
mov
daa
mov
push
mov
cmpsb
hlt
loop
cmpsl
sbb
lret
nop
ja
icebp
mov
xchg
jle
cmpb
into
mov
nop
inc
or
movsb
hlt
mov
jb
pop
cmc
stc
bound
mov
hlt
loopne
test
dec
sbb
sub
inc
jp
push
mov
smsw
inc
fstp
ret
out
jg
loope
jg
sbb
mov
and
jns
test
test
push
adcl
pop
movsb
hlt
pushf
arpl
cmc
add
sub
cmpsb
xor
pop
push
iret
out
lret
loop
pop
xchg
nop
jge
xorl
out
stos
sbb
mov
nop
je
fcoml
ljmp
mov
repnz
cmp
jne
jb
mov
push
sub
call
out
mov
fcompl
mov
divb
shll
jnp
lea
in
jg
repnz
test
jge
loop
push
mov
mov
pop
pop
in
dec
mov
aaa
mov
and
inc
lahf
xlat
push
xor
jb
paddb
roll
mov
lret
mov
xchg
mov
add
pop
sub
cmc
mov
repnz
cli
mov
cmpsl
call
call
xor
mov
cmp
add
mov
pusha
or
fucomi
ror
or
popf
push
in
clc
push
and
dec
xor
pop
fnsave
cmp
push
pop
and
mov
or
cmp
cmpsl
es
adc
inc
aaa
jb
aaa
dec
or
sub
stos
pushf
sub
int
add
xor
or
pop
cmp
icebp
xor
and
out
jo
mov
jb
cmpsb
stos
mov
pop
add
mov
divb
jb
mov
pusha
dec
repz
jo
sub
pushf
mov
push
clc
data16
insb
or
std
ret
cmp
int
lods
rclb
fbld
push
gs
leave
outsb
shll
xor
in
cmpsb
dec
call
add
inc
add
mov
pop
push
xchg
cmp
xlat
jecxz
fldt
mov
loope
psrad
lds
fsubp
push
es
test
pop
aam
dec
sti
mov
je
xchg
adc
xlat
mull
sbb
dec
cmp
idivb
xor
gs
repz
xor
cmc
inc
aaa
repnz
push
mov
sti
scas
cli
jbe,pn
or
sarb
test
mov
in
sbb
ds
dec
adc
or
fldt
xchg
ret
inc
or
pop
inc
push
mov
xor
add
mov
or
adcl
cmpsb
pop
and
jecxz
dec
ret
xor
scas
leave
fwait
cmp
sbb
sbbb
jo
sbb
cmp
pop
mov
xor
mov
aam
mov
movsb
cmp
push
nop
xchg
push
cli
add
mov
div
cmp
es
aaa
pop
cmpb
rep
mov
out
aaa
mov
mov
push
push
paddusb
and
lods
inc
xor
and
stc
fcmovu
fidivrs
in
lock
cmp
xchg
imull
lea
orl
pop
or
jnp
lea
mov
mov
jmp
jecxz
repz
inc
cmpsb
loop
and
push
movsb
mov
cld
lea
cli
repz
icebp
xchg
sar
and
cmpsl
out
jge
ret
lahf
orb
cmp
xchg
push
xchg
mov
psllw
andb
stos
enter
cs
clc
psllw
stc
scas
jge
fdiv
pusha
xor
fstpl
arpl
xchg
cmc
rcrl
mov
push
xchg
loop
and
shrb
jl
test
dec
cmpsl
mov
loopne
adc
fisubrl
push
dec
adc
pcmpeqw
movsl
push
stc
cmp
adc
lret
lahf
psubd
enter
test
add
repnz
and
add
jno
repnz
mov
sub
imul
xchg
mov
je
mov
push
adc
mov
ljmp
jnp
mov
or
clc
mov
add
xor
cmc
sub
loop
cmp
add
lcall
fwait
mov
sub
popf
repnz
cmc
push
sbb
xchg
push
jo
xchg
data16
divb
fcmovu
push
ret
daa
lock
test
cmp
loopne
pop
pop
fs
fs
cmp
aas
pushf
repz
jecxz
mov
xor
xchg
pop
loop
push
rolb
testb
ficoms
rol
sbb
xor
mulb
jb
in
or
jno
mov
jno
orl
in
dec
cmp
xor
push
stc
or
scas
sbb
lcall
out
xchg
out
hlt
mov
mov
cmc
sti
data16
out
push
and
shrl
movsb
cmpsl
sti
or
add
stos
or
xorb
out
inc
cli
mov
push
jae
jae
dec
repnz
in
and
xor
adc
cld
cmp
out
mov
sub
out
xchg
cli
lock
push
add
iret
jmp
sahf
rcll
lret
divl
cmp
xchg
xchg
aaa
mov
insl
sbb
xchg
sub
in
outsb
sti
shrb
sub
xchg
pushf
cmc
push
repz
mov
icebp
lret
or
push
inc
xchg
cmp
stc
insb
push
sahf
sub
cli
shlb
cmp
adc
cmp
aas
rolb
mov
shl
cmp
add
inc
or
inc
mov
clc
adc
lods
bound
in
fwait
lods
insl
push
adcb
jno
mov
nop
fcomps
push
ja
insl
sbb
int3
mov
sub
push
mov
cmpb
fnstcw
cmp
push
or
lock
mov
fisttpll
loop
push
xchg
pop
cmp
ljmp
adc
mov
data16
inc
cmpsb
or
test
movsb
pop
mov
push
notb
ja
push
outsb
imulb
rcl
mov
test
out
fwait
lds
mov
push
rol
xchg
imul
jg
mov
xchg
out
xor
aaa
in
les
repnz
sbb
cli
por
add
neg
mov
xor
in
fwait
ljmp
subl
lcall
xlat
xor
mov
xchg
inc
jbe
jg
andb
push
ljmp
pop
ss
fidivl
inc
jle
add
lcall
dec
fcmovne
push
mov
ret
iret
xor
out
orl
jmp
jo
push
insb
xchg
sahf
add
sub
cmp
xor
jne
xchg
add
mov
push
aaa
jb
outsl
pop
ret
sbbl
push
push
dec
lock
xchg
daa
sbb
mov
mov
out
movsb
xchg
mov
dec
or
or
or
add
inc
sbb
inc
ss
add
cld
mov
adc
rorb
push
xor
shll
mov
jp
ret
ss
popf
fmull
xlat
test
xchg
mov
mov
push
mov
inc
rcrb
lret
mov
dec
mov
imul
js
fdivrl
js
jp
inc
ljmp
lret
sbbl
insl
pop
es
in
lret
pop
sahf
insl
dec
out
aaa
mov
ret
mov
adc
lea
repz
out
pop
sub
pop
popf
cmovg
ret
add
lock
cltd
jmp
ja
insl
xor
xchg
cmp
cli
ss
mov
add
lea
mov
sub
mov
mov
jae
jecxz
adc
int
mov
adc
ss
lahf
sub
adc
movaps
jp
xchg
add
out
iret
cmp
cmp
adc
mov
sbb
loop
fdiv
add
cmp
fnstsw
pop
jbe
mov
ds
fisubrl
inc
xchg
push
dec
rcr
push
rcr
out
out
cmp
jmp
call
ja
repz
rclb
cmpsb
or
pop
int3
and
out
addb
loop
daa
bound
and
aad
fistpl
mov
mov
xchg
mov
ficoms
movsb
mov
xchg
mov
mov
pop
jl
fs
xlat
push
xchg
aaa
je
add
mov
out
fstpt
outsl
sub
ljmp
test
sub
cmp
jecxz
mov
cmp
aam
lret
and
out
sbb
cmpsl
cmp
mov
xchg
pop
fnstcw
jl
cmp
clc
jecxz
les
insl
mov
pop
out
add
lcall
call
enter
int
int
push
sarb
stos
fadd
xchg
lods
ss
or
imul
jl
cs
mov
mov
xchg
stc
rcl
call
stc
out
mov
cmp
das
push
cmpsb
lcall
out
aad
dec
stc
repz
das
adc
ret
add
jo
mov
jp
jmp
testl
notb
lock
lods
xchg
mov
pop
pusha
addl
adc
icebp
push
jo
hlt
xchg
mov
xchg
andl
lcall
jmp
lods
mov
push
jae
enter
mov
insl
fisttpl
mov
filds
mov
fstpl
std
mov
lahf
xor
inc
sbb
addl
add
ljmp
bound
fnsave
mov
or
inc
mov
sbb
adc
mov
and
inc
es
add
fbld
pushf
jno
mov
sub
addl
insb
cmp
adc
rolb
sbb
dec
ds
cmp
ret
jns
xor
adc
fsts
mov
clc
mov
mov
enter
cmp
dec
mov
or
and
pop
mov
fdivrl
sub
mov
movsb
adc
xchg
icebp
push
into
lcall
fdivs
pop
pop
jo
fisubrl
sbb
repnz
dec
lahf
jno
test
es
mov
lds
mov
pop
hlt
mov
push
dec
imulb
xor
ss
ficoms
mov
pop
sub
outsb
xchg
cs
xchg
push
jo
jno
shll
mov
jmp
and
ss
and
stc
in
xlat
test
dec
dec
xor
jne
fucomip
mov
jmp
and
fstps
rcl
cltd
jae
adc
xchg
and
lcall
repnz
in
pop
sub
lahf
leave
mov
insl
push
cwtl
in
sarb
aas
and
mov
mov
sbb
dec
adc
xor
addr16
cmc
pop
push
jno
xacquire
push
inc
mov
stos
test
icebp
or
push
cmp
xor
cmp
mov
sbb
sub
pop
imul
push
adc
out
xor
dec
nop
sub
sub
gs
jp
pop
out
popf
out
adc
cmp
xor
pop
loopne
pmuludq
adc
sub
dec
add
jmp
stos
inc
sbb
lahf
pop
pop
mov
cmp
rolb
mov
push
mov
cmp
fdivrs
int
pop
and
add
and
mov
stos
push
mov
ficomps
int
mov
data16
nop
inc
cmc
lods
data16
add
movsb
xlat
push
adc
fld
cs
lahf
pop
stc
pop
mov
stc
lods
addr16
inc
push
push
mov
sub
imul
or
sarb
add
xchg
xor
outsb
aaa
fistpl
inc
adc
push
jl
cmp
dec
shlb
insb
lods
push
or
daa
movsb
das
dec
pop
and
clc
dec
xor
cmp
fwait
mov
out
sahf
add
cmc
repz
out
dec
wrmsr
sbb
xchg
repnz
test
loopne
pop
push
sbb
cmp
aad
push
mov
out
pop
dec
ret
stos
sbb
cld
ret
sub
mov
jae
and
xchg
push
push
ja
loop
cmp
push
imul
insb
cmp
movsb
andb
lcall
and
jbe
shlb
xchg
jb
bt
mov
movsb
test
clc
xchg
mov
pop
or
sub
aaa
sti
mov
jb
inc
daa
sub
ja
add
mov
cli
pop
sub
roll
adc
into
sub
call
jo
aaa
add
sbb
mov
xchg
sub
lret
adc
dec
jae
in
adc
pop
inc
and
lret
xorb
and
mov
loop
scas
scas
pop
pop
ds
mov
or
fs
push
je
ret
mov
mov
xchg
insb
pop
sub
sbb
xor
stos
mov
pop
es
adc
repz
sbb
adc
adc
lahf
aad
jnp
in
ss
pop
dec
inc
and
xor
pop
adc
in
jb
cmpsb
and
movsb
push
xchg
mov
mov
mov
test
pushf
repnz
lcall
scas
jp
inc
nop
push
mov
orl
adc
je
scas
mov
xchg
cmp
inc
or
nop
cmp
repnz
movsb
xchg
pop
addl
into
mov
insl
ret
in
stc
notb
and
negb
sub
mov
inc
movsb
andb
arpl
mov
adc
ss
add
xchg
aaa
sarb
fnstenv
ja
cmp
xchg
pusha
mov
repnz
pop
hlt
xor
inc
ja
lock
push
cmc
mov
mov
xchg
fwait
xchg
sub
mov
xchg
inc
ret
push
cmp
das
mov
or
ss
mov
out
mov
ficompl
mov
push
xchg
in
sub
cmpsb
sub
mov
and
movsb
loopne
outsb
mov
ss
arpl
lods
test
in
das
loopne
jae
add
mov
xor
out
repz
xchg
incb
dec
in
xchg
shlb
jp
stos
ds
scas
xchg
mov
mov
jb
rep
mov
dec
xchg
ficomps
mov
mov
lock
xor
jb
jae
xchg
jnp
inc
adc
xor
dec
push
fsubrs
cmp
lret
cwtl
dec
xlat
and
aas
add
and
cmp
xchg
call
pop
push
in
aad
fsubl
or
lea
xor
adc
sub
divl
je
cmp
fistps
inc
sub
mov
test
ljmp
addl
lock
push
jb
and
cmpsb
rep
adc
or
jecxz
pop
push
sbb
dec
stos
sub
jo
lahf
jecxz
and
cli
xchg
cmp
xor
imul
mov
in
inc
or
xor
push
sbb
repz
cmp
inc
lds
loope
xchg
xor
and
dec
push
sub
mov
and
cmpsb
loopne
nop
adc
jno
iret
jecxz
mov
incb
mov
mulb
dec
inc
ret
cmp
and
add
inc
insl
jno
lret
xor
out
sub
in
cmp
lods
cld
dec
smsw
sbb
mov
jp
jo
xor
xchg
push
pop
mov
in
rol
sahf
in
mov
adc
mov
dec
xor
cmp
mov
mov
mov
pop
cmp
das
push
fdivrl
pop
test
mov
push
out
daa
jnp
scas
cmp
cmp
mov
jecxz
sti
fsubr
and
pop
cmp
hlt
jmp
mov
call
and
xchg
into
pusha
fisubl
lods
sub
sbb
repnz
adc
das
lret
push
push
lret
and
lock
shl
lock
lock
jle
add
std
cli
clc
push
dec
mov
xchg
mov
mov
cmpsl
sub
notb
pop
sti
mov
out
ds
stos
adc
movsb
xchg
lock
int3
stos
stos
sub
loop
jne
jae
push
cmp
cwtl
enter
cmp
dec
xchg
or
or
mov
pop
test
mov
sub
mov
pop
imulb
jo
ret
nop
addr16
pop
pusha
push
cmc
and
mov
cli
sbb
lcall
push
mov
andb
xchg
xor
in
inc
and
xor
sbb
add
pushf
push
pusha
or
pop
ja
bound
clc
inc
not
mulb
repz
popf
popa
orb
hlt
lahf
fwait
es
ret
shr
xchg
lahf
jp
and
add
mov
push
mov
or
inc
jno
sbb
out
cmc
fisubs
lret
mov
xchg
xor
clc
cmpsb
cmpb
add
bound
pop
push
lea
add
lcall
xor
push
inc
inc
xchg
in
mov
ja
mov
jnp
mov
mov
jecxz
or
divb
outsb
stos
push
aas
fdivs
fucomi
mov
or
push
shl
cld
add
xlat
out
cli
push
xchg
ds
adc
jge
ret
mov
xor
inc
test
icebp
xor
xorb
cmp
sub
cld
pop
sahf
jo
pushf
jmp
dec
hlt
lods
lds
mov
loope
movsl
rcr
int
push
mov
nop
xor
jb
shll
xor
and
loopne
xor
adc
mov
xlat
jg
stos
adc
and
cmp
clc
stc
fwait
jo
shrl
pop
test
cmc
jo
dec
lods
cmc
ja
mov
push
js
cltd
xchg
add
ret
adc
ss
lds
scas
jg
mov
cli
fisubl
es
adc
xor
inc
or
incb
aaa
or
mov
mov
aaa
or
xor
cmpsb
es
fisubrs
jbe
pop
add
push
add
and
aad
xor
jne
xchg
shrl
xchg
repz
or
xor
add
push
clc
shlb
mov
cmp
sbbl
movsl
sub
push
mov
sub
add
fbstp
mov
xor
call
inc
cmp
jno
mov
loopne
xchg
idivl
mov
or
jmp
mov
fisubrl
jmp
xchg
xor
inc
or
int3
inc
roll
push
cmp
pop
push
add
sbb
inc
in
mov
lcall
cmpsl
cld
cwtl
add
xchg
sub
mov
sub
ss
xlat
mov
mov
aaa
repnz
sub
push
push
test
mov
icebp
add
xor
cmp
gs
dec
inc
ret
inc
add
sub
jmp
pop
lret
pop
lock
add
mov
mov
mov
add
cmpsb
cmp
mov
repz
imul
add
gs
or
sub
and
xor
pop
andl
and
push
xor
jmp
mov
bnd
insl
test
movsb
mov
push
mov
sahf
inc
pop
lods
mov
push
repz
in
repnz
lods
mov
xchg
cwtl
addr16
imul
xchg
mov
jge
insl
adc
in
pop
std
xchg
push
push
dec
aaa
mov
subl
mov
mov
scas
and
mov
mov
out
shll
fnstcw
mov
mov
test
mov
mov
mov
repnz
int
test
jl
pop
fcmovnb
jp
push
sub
je
mov
pop
sub
sbb
mov
testl
jl
and
xor
nop
mov
dec
cmpsb
nop
cmp
pop
jecxz
icebp
mov
jle
lret
mov
das
xchg
pop
div
loope
arpl
and
lcall
cmp
cmpsb
xchg
ret
cwtl
dec
inc
aam
mov
sbb
dec
scas
sub
mov
aaa
pop
jle
inc
aas
cmp
jno
sahf
mov
lea
popf
mov
bound
sbb
stc
or
loopne
sbb
aas
cmc
lret
aaa
ret
sbb
or
dec
push
and
and
jnp
repz
and
in
sahf
adc
mov
jae
clc
addr16
push
std
outsl
jo
out
fcoms
dec
cs
imul
mov
in
mov
vpunpckldq
ja
int
bound
cmc
ret
daa
and
mull
sub
in
repnz
test
rol
lahf
dec
std
xchg
push
xchg
test
push
mov
xchg
test
cmp
loop
iret
cmp
cmc
loopne
cmp
in
adc
cmp
pop
lds
icebp
xchg
ljmp
shll
sbb
mov
mov
xor
out
mul
cmp
cmc
mov
xchg
ss
clc
sbb
les
in
mov
cmp
call
in
dec
xchg
cmp
ss
mov
jne
mov
call
fnstenv
sub
out
cmp
loopne
std
clc
sbb
push
cmp
sbbb
and
lock
cmp
insl
incb
leave
and
nop
adc
hlt
popf
push
ljmp
adc
cli
imul
mov
dec
sbb
dec
jp
lock
mov
push
out
inc
mov
sub
dec
add
out
mov
in
jl
xchg
or
out
sub
xchg
ret
ds
out
xor
je
cld
sbb
mov
das
aas
lock
xchg
cmc
cli
lods
mov
mov
icebp
popf
mov
cwtl
cmp
cli
or
jle
daa
push
cmp
xchg
rolb
cwtl
cmp
iret
or
push
hlt
shrb
pushf
cmpsl
in
mov
rcl
sub
and
dec
mov
mov
repz
icebp
repz
xchg
add
js
cmpb
mov
les
popa
mov
push
lcall
and
and
sbb
mov
xchg
xchg
add
and
xchg
sub
fwait
pop
lcall
js
sub
jo
cmp
add
push
xor
xor
jae
and
mov
xchg
sar
jae
testb
lea
jae
movsl
sub
cltd
and
or
mov
cmp
fwait
sarl
cmp
in
mov
fiaddl
fisubl
lcall
aas
dec
mov
pop
adc
lods
popa
mov
inc
andl
out
mov
inc
cmp
mov
jle
mov
mov
sahf
andl
mov
cmpsb
nop
sub
push
lods
cmp
mov
rclb
lods
xlat
push
mov
cli
jle
out
scas
push
add
pop
jo
lahf
sbb
aaa
lock
jno
mov
jo
in
xchg
repz
aad
ja
sbb
cli
or
daa
iret
adc
int3
lahf
sti
push
rclb
cmp
xchg
adc
int3
dec
sub
icebp
dec
and
xor
or
aaa
mov
sub
loopne
xchg
mov
mov
movsl
cld
mov
push
mov
adc
cwtl
sti
push
add
jnp
scas
jnp
push
jbe
fidivrl
xchg
ljmp
fwait
xor
adc
frstor
or
mov
idivl
push
pop
sar
inc
into
mov
fwait
mov
arpl
adc
and
add
je
fmull
xor
into
add
sbb
cmp
mov
cwtl
das
dec
mov
int
test
jle
ficoml
test
adcl
dec
adc
fdecstp
outsb
nop
incb
leave
fldcw
xchg
ror
mov
inc
dec
mov
ds
scas
scas
sbbb
jmp
lahf
daa
aam
lock
inc
testb
and
sub
adc
int
jmp
inc
int
cmp
std
repnz
ficompl
mov
sub
mov
mov
cmpsb
je
es
divb
stc
xorl
mov
sbb
clc
ficoms
xchg
clc
add
ret
pop
mulb
push
rorl
in
mov
xchg
rcl
xchg
movsl
adc
fimuls
ret
cmpsl
cmp
clc
stc
nop
idivl
pop
jae
add
clc
pop
sbb
xchg
xor
sbb
cmp
repz
int
leave
xchg
mov
mov
aam
jle
je
xor
mov
xor
jp
lret
test
cltd
xor
jmp
fisttpl
xchg
or
pop
xor
andl
add
inc
adc
mov
fidivs
addr16
mov
xor
popf
sbb
in
add
in
mov
adc
daa
sti
mov
mov
icebp
repnz
lods
data16
cs
and
hlt
lahf
gs
jb
push
xchg
cld
sub
sbb
push
push
and
ja
lds
jae
cmpsb
fwait
adc
cltd
aad
pop
out
cmc
add
divb
sbb
call
shlb
cmp
outsl
jo
scas
js
inc
cld
outsl
outsb
mov
mov
add
cwtl
hlt
sbb
mov
push
popf
pop
in
add
div
pop
addb
sub
mov
ss
xchg
testl
jbe
sbb
add
addl
xor
mov
das
int3
or
sbb
adc
inc
jo
movsb
dec
sahf
push
mov
mov
or
inc
inc
jae
cmpsb
mov
mov
mov
frstor
dec
loop
fsubp
jne
ja
das
push
cmc
movsb
daa
mov
addr16
xchg
gs
outsb
enter
adc
mov
sub
rcl
sbb
mov
add
test
mov
mov
call
and
mov
dec
fiadds
push
mov
in
mov
pop
mov
mov
push
jnp
xor
ja
cmp
mov
lret
jle
data16
mov
lcall
jle
and
or
in
and
mov
push
pop
int3
unpckhps
mov
inc
or
and
lea
test
xchg
inc
jns
fdivl
jp
cs
sub
fnstcw
shlb
call
mov
popf
lock
int3
xchg
jecxz
cmpsb
mov
jge
sbb
mov
mov
push
xchg
xor
xchg
cli
movsb
sbbb
stos
jo
push
idivl
add
into
loop
jp
jbe
clc
and
les
cmp
add
push
in
outsb
lret
lock
lret
icebp
mov
stos
mov
pop
out
pop
or
shll
jae
std
mov
cmpsl
orl
stc
or
xchg
stc
inc
hlt
mov
pop
popa
xor
int3
adc
or
jbe
cmpl
push
sbb
dec
and
sar
cmp
and
sbb
xchg
push
fisttpl
inc
fidivrl
aaa
mov
cmp
stos
cmp
cs
mov
mov
inc
js
sbb
xlat
xlat
out
xchg
sub
sub
mov
pop
adc
sti
inc
rcr
lds
ljmp
hlt
out
int3
xchg
ficoms
mov
sbb
out
in
or
addr16
pop
inc
push
testl
mov
inc
popa
fs
xchg
mov
push
hlt
mov
lret
ret
fdivr
dec
das
add
dec
lcall
mov
mov
jg
cmp
xor
cmpb
fcoml
sub
add
js
push
sarb
jb
notl
fcomps
cmpsb
sbb
or
lods
lcall
add
mov
dec
adcl
roll
mov
inc
cmp
gs
clc
orl
mov
xor
or
add
inc
out
sbb
lret
test
jns
pop
pushf
pop
xlat
xor
inc
ja
xchg
sub
outsb
pop
add
int
insl
orl
adc
pushw
dec
cld
sbb
mov
test
or
or
sahf
sub
ja
sbbb
repz
mov
push
insl
jmp
and
notl
ds
dec
xchg
loop
dec
push
mov
cmp
xchg
mov
pushf
pop
rolb
mov
xor
bound
in
test
lcall
in
imul
stc
dec
push
xor
fstp
out
icebp
repz
xchg
add
mov
sub
jg
cmp
out
and
test
sbb
inc
mov
mov
shll
jg
jge
xchg
jecxz
and
ret
sub
enter
pop
lea
std
mov
xchg
push
pop
mov
push
and
xor
ret
inc
push
int3
or
inc
in
pop
xchg
pop
push
test
and
shrb
fcmovnbe
jbe
shll
lods
push
cmpsl
sub
out
lock
shll
out
xor
xchg
or
cmp
or
scas
cmp
mov
xchg
loop
xor
lahf
mov
aas
cmp
shr
sarb
xchg
scas
divb
mov
cmp
rorl
push
imul
mov
std
xor
add
xchg
xchg
or
shl
adc
arpl
jmp
test
jb
push
mov
stos
cmp
test
mov
or
mul
adc
nop
fwait
mov
bound
aad
arpl
push
js
sub
mov
out
daa
mov
mov
cs
push
mov
and
jns
dec
sarl
iret
jmp
orb
sub
shrl
pusha
push
xor
das
inc
xchg
mov
decl
cmc
popa
mov
push
xchg
int
mov
ss
sbb
fcomi
cmp
mov
cmp
notl
cmpsb
cwtl
sub
fwait
push
cwtl
push
or
dec
popf
push
xor
clc
outsb
icebp
lahf
xor
jecxz
cwtl
dec
mov
fnstcw
mov
mov
mov
cmp
clc
xchg
cmp
sbb
xor
push
mov
mov
int
or
mov
mov
adc
mov
add
or
jo
ret
sub
movl
sub
jmp
and
xchg
mov
xchg
jp
pop
jae
int
subb
add
push
and
or
scas
xor
inc
xlat
leave
into
cmp
out
cmp
jb
push
lock
loop
pop
dec
imul
ja
mov
stos
shl
sub
adc
sbb
mov
add
test
add
lgs
inc
subl
add
arpl
xor
push
shll
lcall
adc
cmp
mov
jnp
push
push
push
push
dec
in
pop
and
or
push
jno
jecxz
sbbb
imul
cmpsb
lods
adc
lea
outsl
mov
inc
lahf
sbb
mov
add
out
addb
rorl
mov
outsb
mov
pop
mov
rolb
insb
cli
xorb
sbb
adc
xchg
lret
xchg
cs
and
das
and
mov
iret
xchg
nop
rcrl
orb
loopne
jno
test
adc
rclb
out
push
insb
iret
and
cmp
adc
mov
dec
ficomps
jmp
insl
push
jbe
adc
or
in
int3
dec
leave
jno
cmpsb
push
cwtl
fisubrl
inc
xor
push
lock
stc
cwtl
sub
mov
pop
push
cmp
cli
daa
lds
arpl
mov
ss
adc
sbb
fbld
inc
and
jbe
and
jmp
sub
push
inc
cli
mov
fstp
inc
fwait
scas
mov
dec
int
gs
adc
test
xchg
stc
out
push
jle
xchg
jge
movsb
into
pop
sti
fwait
into
and
or
in
test
cmc
pop
jecxz
mov
mov
aaa
pushf
add
sbb
out
leave
cli
add
and
or
xor
jae
add
ja
scas
ret
jo
outsl
ljmp
jmp
inc
mov
in
ljmp
mov
or
xchg
jmp
aas
cmp
push
imul
push
xorb
pop
xor
hlt
adc
mov
mov
mov
cld
dec
ds
dec
pop
mov
add
lods
mov
movsb
mov
xor
js
pop
cmp
cwtl
mov
dec
bound
hlt
incl
xchg
xor
sub
add
and
stc
pop
pop
cmp
or
insb
int3
cmc
add
or
fsubp
nop
dec
mov
sub
iret
bound
and
and
sahf
dec
je
adc
push
sbb
pop
push
pop
icebp
xor
jae
movsl
adc
sbb
mov
loopne
fnstsw
add
loop
and
stos
push
les
dec
mov
aad
or
and
adc
mov
dec
dec
inc
cs
cli
inc
cmp
mov
dec
out
sti
push
pop
cld
or
movsl
sti
daa
fldt
cmp
mov
loop
mov
in
shrl
nop
mov
dec
xchg
cmp
out
xor
jbe
sub
xchg
loop
cmpsl
pop
push
lock
jp
mov
aaa
out
pushf
mov
cmp
out
dec
cmp
mov
xor
sbb
cwtl
xlat
xlat
mov
popf
aam
test
add
testl
push
or
mov
mov
repz
subl
daa
cmp
inc
sti
mov
xchg
aam
xor
sarl
cmpsb
int
and
or
adc
enter
loop
jb
dec
sahf
popl
mov
or
pop
mov
xchg
std
push
arpl
push
rclb
lahf
sbb
and
mov
pop
xor
sahf
cmpsl
cld
xchg
xlat
clc
out
sbb
loopne
into
pop
push
xlat
ret
gs
cmp
stos
fsubrl
push
cmp
sub
pop
or
mov
shr
jns
shlb
cmpl
push
lock
and
pusha
jbe
sub
jbe
ss
add
subb
sti
mov
pop
rcl
popl
and
push
push
fsubrl
out
mov
dec
push
je
cmpsl
cmp
out
xor
repz
es
adc
bnd
ffreep
shr
xchg
dec
ds
pusha
sbb
mov
pushf
dec
sti
mov
mov
fisubl
fildl
add
bound
xchg
in
fucomp
fdivp
sti
push
xchg
into
andl
xchg
push
mov
adc
repz
out
dec
inc
out
test
test
mov
or
mov
lcall
and
and
inc
popa
pop
adc
mov
jecxz
jns
int
pushf
mov
mov
sub
sub
mov
jecxz
js
and
ret
mov
add
xchg
mov
lock
sbb
sub
cmp
adc
int3
and
xchg
xchg
inc
les
mov
negb
nop
andl
xchg
adc
xor
outsb
fwait
subl
shr
div
mov
mov
mov
mov
inc
ss
mov
xchg
mov
jns
ds
aaa
cwtl
sub
xor
jmp
fldenv
and
sub
cld
jl
pop
or
and
adc
fistpll
add
subl
fisttps
adc
cmp
nop
out
mov
jg
jne
push
std
movsb
test
jg
mov
mov
stos
sbb
jle
or
mov
xor
xor
mov
lock
ficompl
stos
frstor
repz
adc
cwtl
ds
sub
sbb
loop
cmp
xchg
inc
ljmp
pop
repz
mov
arpl
pop
cmp
addr16
js
nop
movsb
imul
xchg
enter
and
inc
cltd
sbb
ljmp
inc
bnd
cmp
mov
xor
jnp
jb
mov
ficoml
cmpb
cmp
xchg
imul
outsl
add
mov
jbe
and
sub
mov
stos
mov
stc
rcrb
pop
int
fcomps
aam
fmul
inc
bound
cmc
pushf
lods
xor
push
rcll
rcrb
sbb
addr16
dec
call
cmpsb
adc
mov
adc
scas
aaa
mov
sahf
orl
add
sub
push
cmpsl
cmc
fnstenv
clc
or
stc
xchg
dec
push
mov
les
jecxz
fildl
sub
imul
xchg
and
imul
or
cmp
int
iret
and
cmp
sub
bound
sbb
jnp
mov
jge
bound
mov
xor
popa
iret
ret
call
or
xchg
xchg
mov
loope
mov
fiaddl
inc
mov
and
push
outsb
mov
mov
add
scas
clc
and
cmpsl
mov
jecxz
movsl
stos
pop
nop
fwait
mov
ficoms
jmp
rcll
pop
cmp
sub
icebp
arpl
mov
iret
dec
sbbb
sbb
sarb
lcall
fwait
cmp
int3
movsb
fstpt
sub
daa
inc
mov
lret
mov
push
test
jbe
and
loope
and
adc
mov
ljmp
loope
loop
insl
cwtl
cmp
js
sub
mov
decb
fcmovne
jp
add
cmp
dec
cmp
pushf
cmp
xor
xchg
dec
ret
add
das
fwait
jae
adcl
and
adc
sbb
arpl
xchg
adcb
ret
jno
mov
mov
sti
andb
sbb
add
into
xchg
cli
adc
sub
jp
in
sub
faddl
push
cmp
sub
mov
loop
mov
repz
scas
jbe
int
sbb
xchg
cmpl
dec
ja
sub
jb
cmp
xchg
cmp
inc
scas
xchg
and
hlt
pushf
push
out
xor
mov
pushf
add
and
in
pushf
ljmp
bound
dec
or
in
js
decl
jecxz
jp
rolb
imul
data16
test
outsb
xlat
and
inc
add
or
scas
addl
das
fs
push
je
notb
xchg
adc
ror
and
push
shl
subl
call
inc
cld
dec
jle
into
dec
sub
repnz
add
xor
lret
dec
adc
mov
rorl
adc
cmp
and
mov
int
std
add
mov
mov
mov
cmp
sti
or
out
mov
jns
insl
cmpsb
jns
cmpsl
roll
out
test
and
and
jecxz
add
or
jnp
sub
sbb
xchg
imull
add
cwtl
mov
mov
pop
in
aam
adc
or
ffreep
jbe
fists
and
rclb
mov
imul
or
ljmp
mov
int3
dec
sub
pop
popa
jg
aad
dec
cmpsl
mov
sub
fbstp
hlt
xor
aas
xchg
loop
fwait
mov
std
dec
dec
xchg
xchg
ss
xchg
insb
pop
mov
cmc
cmp
cmp
pop
pop
nop
fadds
iret
cli
dec
sub
scas
xor
cli
push
cs
and
subl
pusha
andl
add
aam
shl
or
addb
shrb
addl
cmp
inc
test
nop
mov
cli
mov
xor
movsl
jo
fistpl
xchg
stos
xor
ss
insl
aas
inc
test
inc
mov
cmp
xchg
pop
movsl
xchg
js
ja
sub
and
aaa
xchg
je
aas
or
js
mov
mov
xor
pushf
cmp
xor
out
push
cmp
add
xrelease
fwait
xchg
push
cld
cmp
mov
fists
mov
mov
sbb
popf
xchg
into
sub
mov
jo
loope
fcoml
and
and
xor
es
cmp
mov
mov
inc
es
fwait
xchg
and
mov
lcall
add
cmp
outsl
daa
mov
jbe
inc
lcall
jp
xchg
add
xchg
inc
aam
jge
sub
push
js
fadds
jns
loope
adc
xchg
sbb
movsb
int
cs
in
add
or
lahf
xchg
iret
adc
xchg
pusha
sbb
mov
in
test
iret
xlat
dec
movsl
cmpsl
mov
es
es
js
mov
in
cmp
sub
mov
jge
xor
lcall
fimull
popa
movsb
data16
sbb
lcall
adc
sub
out
leave
dec
out
xor
movb
lret
push
loope
stos
cmp
xchg
ja
xchg
inc
jl
xchg
les
jne
push
jnp
mov
dec
cs
ja
adc
sbb
jb
fs
mov
into
cmp
ds
aam
pop
pop
insl
ret
addr16
and
ss
lret
es
fwait
xchg
outsb
fstpt
ljmp
mov
loope
cmp
sub
clc
mov
sbb
lcall
jnp
xor
cmpsb
mov
leave
rcl
fidivrs
pop
lcall
xchg
int3
xchg
jg
fiadds
cmpb
repz
pop
cmpsl
or
mov
pop
in
xchg
mov
popf
sbb
mov
push
cmpsl
jge
sbb
xor
mov
imul
popf
xor
xchg
sub
pop
push
rolb
mov
jno
jb
dec
mov
xchg
popf
lods
dec
cmp
imul
adc
or
lret
repnz
xor
ds
stos
or
test
pop
inc
in
push
cmp
inc
pop
sbb
popf
fsts
ljmp
inc
ficompl
xchg
or
and
mov
mov
push
push
jnp
adc
sti
jmp
rorl
mov
add
popf
or
jno
sbb
nop
inc
data16
dec
inc
mov
xlat
pop
cmp
jle
mov
xchg
sbb
ficomps
sbb
es
subl
or
and
jl
mov
jl
loop
add
pop
in
dec
daa
or
push
and
sub
push
xor
pop
int3
jnp
mov
insl
out
out
push
stc
das
xor
dec
sbb
cwtl
sub
out
cmpsb
and
mov
pushf
fstp
mov
rclb
add
xchg
sub
cmpsl
xor
fstp
sbb
xchg
cs
jo
mov
mov
or
cmp
lret
dec
or
adc
mov
cli
mov
lret
pusha
cmp
adc
mov
xorb
xchg
adc
or
lock
or
sub
mov
mov
out
xor
sbb
pushf
pop
pop
xchg
loopne
cmc
add
xchg
jecxz
fidivs
jp
xor
pop
out
mov
lahf
aam
pop
add
push
ret
adc
out
dec
adc
dec
xchg
adc
sbb
insb
inc
pop
in
dec
xchg
mov
arpl
cmp
push
mov
fwait
xchg
or
push
fdivrl
lock
sbb
mov
pop
out
jl
mov
xrelease
cmp
insl
sbb
pusha
decb
clc
pop
jp
sbb
jmp
sub
xlat
outsl
mov
mov
adc
std
scas
jg
je
shr
mov
add
push
ss
into
adc
test
dec
cld
mov
idivl
xchg
scas
lahf
std
sub
dec
repz
xor
add
mov
sub
in
dec
jmp
rcr
cmp
inc
push
jp
cmp
stc
rcl
or
mov
sbb
mov
mov
fs
lret
insb
pop
into
cmpsl
cs
xchg
pop
cmp
xchg
cmpsb
cmp
adc
mov
mov
sub
jo
leave
movsl
aam
lret
cld
xchg
cmp
clc
cmp
sbb
dec
imul
loope
xchg
rdmsr
cmp
cmc
lds
sti
mov
int3
dec
push
jo
add
pusha
fwait
cmp
test
outsl
loopne
mov
xorb
fldcw
div
adc
xlat
aad
adc
mov
cmp
sub
cwtl
ljmp
mov
arpl
int3
xchg
jbe
dec
scas
stc
fwait
out
push
mov
add
or
cwtl
jmp
mov
add
adc
clc
or
stos
pop
out
inc
jmp
insl
ror
jmp
mov
pop
or
xor
mov
popa
cmpsb
cmc
testb
ret
cmpsb
mov
cmp
xor
test
mov
clc
xchg
cmp
add
ss
and
xchg
pusha
repz
xchg
cmpsl
popf
dec
cmp
cmp
jbe
jmp
sub
adc
clc
notb
dec
xchg
popf
cmp
das
out
je
out
popf
push
subl
ds
aaa
sarb
mov
addl
jae
and
mov
shlb
and
sahf
je
jle
jns
jbe
repnz
idivl
or
cmp
shrl
pop
mov
and
jnp
loopne
sub
nop
mov
repnz
sub
mov
in
aam
dec
arpl
xchg
jp
cmc
xchg
test
add
sbb
in
dec
add
or
fiadds
push
mov
xchg
mov
scas
iret
and
in
cmp
cmp
ljmp
out
pop
jg
lea
mov
cltd
or
ss
fimull
pop
fwait
aad
mov
xor
add
mov
xor
jno
pop
rorl
in
pusha
pop
ds
cld
cmp
xchg
movl
lahf
mov
push
add
and
or
repz
popa
push
aam
pop
push
hlt
xchg
xchg
dec
iret
ljmp
daa
out
pop
out
cwtl
insb
das
adc
pop
sub
mov
mov
lahf
scas
pop
fdivl
mov
mov
enter
fstpt
push
add
add
add
ss
add
xor
add
push
push
add
js
add
xor
xor
xor
jp
add
add
add
add
add
xor
dec
add
add
add
pop
xor
insb
pop
add
insb
xor
push
add
add
add
dec
outsl
xor
jns
cmp
add
push
dec
xor
xor
add
push
popa
insb
add
add
fs
add
xor
xor
add
jp
xor
add
xor
add
add
add
add
dec
add
add
add
add
add
add
outsb
inc
push
inc
add
imul
push
add
push
add
add
add
add
add
add
jno
data16
add
add
add
add
cmp
insl
push
add
ss
add
dec
add
push
push
add
add
push
inc
jns
dec
bound
add
add
add
add
popa
push
push
add
bound
aaa
dec
add
add
add
add
ja
aaa
add
add
imul
add
dec
add
add
add
add
jp
add
add
add
dec
add
add
add
add
add
add
push
bound
add
imul
pop
add
add
add
add
inc
add
add
js
jbe
insl
push
add
pop
add
inc
dec
data16
push
add
jo
add
add
dec
add
add
add
add
push
push
add
add
add
bound
push
jne
push
dec
insl
push
jo
add
xor
insb
add
add
pop
add
jp
add
dec
add
add
add
add
add
add
bound
push
jns
outsl
push
je
dec
add
push
inc
jbe
xor
jns
inc
push
pop
push
add
add
add
push
add
push
add
push
add
push
add
push
push
add
dec
add
add
push
add
add
pop
dec
push
add
push
add
add
fs
inc
add
inc
xor
add
push
add
add
ss
add
cmp
add
add
aaa
add
add
fs
add
dec
add
add
xor
add
add
xor
push
add
add
add
add
outsb
xor
add
data16
add
add
add
add
add
dec
dec
push
dec
add
add
insl
add
inc
add
add
add
xor
pop
add
add
add
add
cmp
push
dec
add
inc
add
add
add
add
add
inc
add
ja
push
pop
add
je
inc
add
add
xor
outsl
jo
xor
add
aaa
inc
arpl
dec
add
add
dec
aaa
add
add
insl
push
add
add
add
jo
outsl
push
xor
add
add
add
pop
add
xor
add
push
add
add
add
outsb
add
xor
add
add
dec
add
dec
jne
popa
dec
xor
ja
arpl
add
add
add
add
add
xor
outsl
outsb
add
dec
jp
dec
dec
add
jp
add
add
outsb
add
add
jne
add
imul
ss
add
outsl
add
xor
add
add
add
push
imul
pop
add
jbe
add
pop
dec
aaa
add
add
inc
push
ja
outsl
add
add
adc
out
and
stc
orb
sahf
cmp
popf
inc
mov
or
pop
enter
fwait
jge
xchg
or
xor
push
xchg
and
int
or
es
or
imulb
js
rcrb
ret
mov
fdiv
xchg
and
cmp
or
iret
pop
inc
adc
cmpsb
cmp
pop
bound
push
fistps
aaa
arpl
dec
or
insb
xchg
bound
and
mov
movsb
lock
pusha
ret
aaa
mov
jg
push
jnp
lret
mov
dec
es
loopne
push
mov
sbb
stos
ret
pusha
js
cmp
fnsave
out
inc
rolb
pop
push
jb
push
ret
out
repz
cmp
fwait
mov
push
xor
fsubs
push
ret
push
arpl
cltd
fsubs
mov
sub
add
addr16
xchg
push
das
inc
fisubl
pop
add
dec
into
daa
sub
movsl
dec
xlat
mov
jae
ret
aas
xchg
or
mov
dec
add
jle
ja
jbe
test
aas
jle
jne
pushf
sbbb
pop
push
aas
inc
pop
lods
add
sti
loop
mov
shll
ja
addr16
repz
push
sub
jb
add
push
sub
mov
pusha
cmp
addr16
out
es
scas
cmp
pop
in
push
dec
push
icebp
cmp
push
xchg
sub
push
xchg
cmc
out
add
pop
sarb
push
jl
dec
dec
scas
push
mov
loopne
xchg
xchg
push
xchg
xchg
jl
xor
lcall
mov
mov
adc
and
dec
jg
lea
mov
sub
jae
add
jae
lea
dec
ja
jb
push
xor
lcall
loop
cmp
push
dec
adc
stc
pop
dec
jecxz
mov
xor
mov
lock
lock
mov
jnp
jb
mov
icebp
push
aas
nop
xchg
jae
inc
jmp
rcrb
mov
adc
sahf
mov
mov
inc
and
addb
jle
enter
mov
pushf
ja
es
aam
xor
sbb
popf
jle
mov
ds
into
pusha
iret
mov
sbb
arpl
lahf
sub
lret
sub
stos
test
cmp
and
adc
inc
add
add
outsb
les
mov
leave
pop
cs
push
int3
lock
ss
pop
mov
jo
push
pop
lods
jno
xor
fidivrl
cmpsl
sub
sub
adc
fs
pusha
mov
xlat
cwtl
cmp
jmp
dec
pop
cld
fnsave
in
pop
inc
dec
mov
mov
in
fnsave
mov
ficoml
lds
and
insl
lcall
adc
dec
es
addl
dec
push
pushf
rol
mov
bound
jo
sub
jl
lds
cmp
mov
rol
and
xor
scas
xlat
pop
testb
repz
loope
pop
in
faddl
lds
pop
pop
mov
pop
cltd
dec
mov
cwtl
ja
sub
sbb
decl
in
loope
pop
mov
cmp
insb
lcall
sub
loop
pop
stc
mov
xor
jno
cmp
inc
mov
out
dec
and
sub
div
and
repz
jb
mov
sub
xchg
icebp
insl
adc
sub
pop
scas
ret
push
rorl
cmp
push
xchg
fiaddl
shlb
xchg
add
lods
mov
cmp
icebp
xor
xor
loope
pop
cmp
add
push
ret
cmp
pusha
inc
fdivl
loope
ret
jb
rcr
push
in
pop
mov
jae
xorb
repz
xchg
add
inc
xchg
push
mov
adc
add
sbb
xchg
sahf
ret
cmp
cmp
fnsave
push
mov
and
jge
mov
cli
ret
into
ret
or
daa
test
add
jl
xchg
ljmp
negb
cmp
std
mov
xor
mov
mov
xor
mov
mov
ds
loopne
xor
jo
stos
mov
stos
icebp
push
stos
xor
jge
xchg
jno
mov
cmp
ss
mov
cmp
idivl
ja
xchg
mov
stos
aaa
hlt
aas
xchg
mov
lea
mov
cmc
xor
xor
xor
mov
nop
cmp
mov
jp
cmc
nop
mov
sti
mov
je
sub
test
clc
mov
mov
int3
mov
aaa
icebp
jb
cld
mov
loopne
enter
jno
nop
jle
mov
nop
dec
jle
idivb
mov
xchg
idivb
idivl
dec
test
imulb
movsl
cld
jge
mov
mov
or
je
stos
pop
cwtl
xchg
mov
mov
sbb
mov
cli
cs
sbb
xor
stos
add
pop
xchg
mov
push
int3
mov
xchg
add
test
in
fdivl
aaa
sbb
dec
cmp
scas
test
cmpsl
mov
and
mov
sub
push
repnz
sbb
orb
inc
outsl
fdivl
out
pusha
sbb
xchg
ja
push
loop
jmp
fwait
icebp
imul
shlb
sbb
xlat
pop
addr16
lods
push
mov
mov
sti
in
dec
neg
xlat
addr16
ljmp
cli
jmp
repnz
test
ret
mov
aad
loopne
daa
js
mov
in
stos
jg
fisttpll
jmp
xchg
mov
jne
je
in
mov
xchg
mov
sub
cmpsb
sub
jg
dec
and
and
cmp
setnp
addr16
inc
sub
ss
mov
popa
pop
and
jo
push
pop
cmc
loop
mov
cltd
insl
dec
and
inc
ljmp
fscale
jae
daa
xchg
mov
pop
pop
repnz
adc
les
push
sbb
jb
xchg
and
cmpsl
ss
fbld
xchg
cli
xor
xor
out
mov
icebp
ss
repnz
ret
or
pop
cmpb
jg
loop
adc
repnz
test
jmp
jg
mov
fnstcw
jle
repz
out
xlat
xor
mov
test
dec
ds
jbe
mov
mov
push
cmp
sbb
or
jno
and
push
cmp
divl
and
std
push
in
std
pop
adc
popf
xchg
xchg
and
xor
sub
or
stc
cmp
loop
aas
inc
and
adc
cmp
aad
xor
shlb
adc
sbb
mov
push
inc
pusha
cmp
push
pop
inc
xor
int3
lahf
mov
andl
fnstcw
push
fcoms
int
xchg
psllq
cltd
or
inc
mov
inc
lcall
or
cwtl
notb
test
outsb
out
mov
bound
mov
inc
and
in
add
xor
xchg
or
or
mov
loope
ljmp
ret
jecxz
and
mov
sbb
xor
in
and
bnd
jne
aad
imul
mov
mov
mov
xchg
jb
cmp
bnd
in
cmc
jmp
xchg
mov
adc
insl
push
lret
mov
cmp
popa
inc
jbe
mov
icebp
mov
jmp
or
mov
pushf
xor
mov
add
ss
loopne
dec
ds
adc
popa
jo
jae
mov
inc
ss
mov
popf
sub
clc
jb
sub
popf
sbb
subb
xor
imul
psllq
sarb
sub
inc
mov
and
fisubs
mov
mov
cld
sti
push
add
les
xchg
stos
xchg
sbb
sbb
jbe
sbb
inc
jae
fistl
xchg
mulb
sub
and
pshufw
loop
xchg
hlt
popf
das
pop
pop
dec
aas
lds
stc
xchg
pop
ja
ret
pop
mov
ret
adc
cli
out
and
cmp
enter
dec
aad
add
xchg
jno
movsb
pop
scas
inc
je
sbb
in
call
sahf
push
xchg
cltd
pop
lock
adc
push
icebp
gs
pop
xchg
push
ds
gs
fcmovnbe
test
mov
xlat
mov
int3
push
daa
inc
sbb
adc
mov
movsb
xor
mov
mov
adc
mov
jnp
das
outsl
push
flds
xchg
xor
pop
add
sub
nop
mov
rol
cli
mov
mov
cli
addr16
fsts
mov
push
add
mov
out
lock
ret
mov
mov
scas
fst
movsb
daa
jno
cmpsb
std
js
mov
in
jl
sti
inc
cli
insb
repz
fwait
xchg
add
cli
orl
mov
pop
xlat
jnp
dec
data16
pop
in
sbb
or
or
pop
push
dec
adc
mov
clc
roll
lea
loope
loope
xchg
out
popf
popa
clc
pop
jl
mov
out
mov
xchg
insb
stc
ss
sub
mov
shrb
mov
repz
das
int
cld
and
cmp
mov
popl
out
and
inc
inc
push
xor
mov
jb
arpl
cmp
das
xchg
in
fld1
cld
out
add
fwait
idiv
ja
dec
add
sbb
and
aas
jno
or
jl
jo
out
int3
xchg
test
cltd
sbb
add
aaa
mov
pop
xchg
xchg
fstps
and
xchg
cmpb
xchg
ret
mov
xchg
daa
mov
in
repnz
jb
mov
pop
int3
into
add
pop
mov
mov
hlt
int
orb
ljmp
sbb
mov
push
jecxz
lods
mov
inc
or
or
and
mov
cmp
jb
mov
jg
divb
mov
lret
or
xorb
mov
pop
dec
cmp
and
pop
xchg
popf
xor
dec
sub
jb
add
xchg
repnz
sub
dec
xorb
xchg
mov
sahf
test
mov
rolb
int
mov
lods
xor
lret
xchg
test
mov
pushf
xchg
mov
in
pop
testl
and
scas
cmp
jecxz
lret
mov
dec
lods
hlt
inc
dec
mov
sbb
or
fldl
push
xor
inc
xchg
outsb
add
and
sub
ja
notb
mov
es
push
enter
in
out
xchg
cmp
mul
pop
sub
cmp
and
popa
call
mov
pop
aam
repz
xor
mov
mov
dec
pop
or
loop
mov
repnz
and
pop
jp
dec
loopne
sub
jp
jp
cmp
add
test
mov
mov
sahf
mov
xor
inc
pop
pushf
pop
enter
mov
in
mov
fnstcw
mov
insb
and
loope
mov
xchg
adc
test
xchg
stos
scas
loop
jle
mov
mov
jp
aas
jle
ds
cmp
cmp
aaa
mov
and
add
xchg
mov
cmp
lock
lea
ds
in
dec
lock
mov
mov
xor
repnz
lock
es
cmp
mov
lods
lock
jb
cmp
pop
mov
js
mov
push
jle
cmp
cmp
imul
xor
jae
sbb
ja
mov
xchg
repz
shlb
add
jmp
jge
xchg
bnd
adc
push
cwtl
ja
cmp
std
push
rorl
jg
hlt
sbb
aas
sub
sti
xchg
cmp
in
fldenv
and
sti
cmp
mov
clc
xchg
mov
mov
and
xchg
pushf
stc
xchg
ret
lret
mov
xlat
sarb
sarl
mov
and
scas
push
xchg
or
cli
ja
repnz
stc
sbb
xor
repnz
lock
jmp
test
movsl
mov
mov
fwait
adcl
sbb
add
sbb
mov
adc
cmp
in
cmpb
imulb
adc
mov
mov
add
dec
aad
inc
jl,pn
mov
jmp
and
mov
sbb
loop
mov
arpl
jbe
dec
fwait
and
ret
xchg
cmp
roll
dec
cmp
cmp
mov
inc
mov
sub
mov
cmc
movsl
jae
xor
scas
test
xorl
call
adc
ss
mov
mov
adc
add
mov
nop
adc
mov
clc
cmp
add
jns
cmp
xor
int3
pushf
xchg
cmp
cmp
cld
add
sbb
xchg
ds
mov
adc
incl
outsl
ret
clc
ljmp
lock
sahf
xchg
jb
test
test
pop
mov
negb
adc
sar
lret
mov
jg
xchg
es
hlt
lods
icebp
cmc
and
pop
cmpb
mov
add
ret
adc
jp
mov
js
adc
xchg
aas
mov
sub
fwait
inc
jge
repnz
icebp
lock
jnp
mov
and
in
in
mov
sub
xchg
sub
xchg
mov
push
xchg
stos
jo
movsl
cmp
mov
jmp
call
sbb
test
cmpsb
lcall
push
mov
dec
sub
cltd
loopne
mov
sub
xchg
inc
xor
dec
xchg
aam
rolb
sbb
pushf
adc
pop
mov
adc
popa
cld
jns
clc
mov
call
ret
cmp
inc
mov
add
int3
insl
aas
cli
mov
scas
call
mov
sbb
xchg
sub
mov
mov
lds
add
sub
sbb
mov
lret
mov
adc
lcall
jge
push
sbb
mov
cmp
sub
mov
adc
insb
fisubs
int3
pop
loope
push
mov
mov
mov
jp
jge
mov
xlat
cmp
mov
daa
push
test
lods
lret
loop
out
push
sahf
imul
mov
inc
lods
sub
inc
sahf
shll
stc
in
int3
mov
push
xchg
mov
mov
cmpsl
sub
addl
sbb
aaa
xchg
mov
movsb
lahf
pop
push
mov
cmp
and
jmp
dec
xor
mov
stos
cmp
nop
ret
cmpsb
movsl
movsl
mov
loop
inc
cmp
xchg
jl
popa
sbbb
rcl
ljmp
adc
fst
popf
adc
lcall
jl
repnz
mov
clc
xchg
cmp
cmpsb
cmpsl
inc
mov
int3
mov
mov
mov
cmp
jmp
ret
aaa
lock
sbb
and
cld
pop
stos
and
push
mov
jl
nop
xchg
adc
out
xor
cmp
nop
imul
cmp
sub
xor
call
scas
dec
ss
add
inc
xor
xor
mov
xor
cltd
addb
mov
adc
out
xor
mov
in
lods
imul
mov
dec
scas
ja
ja
ss
lock
mov
dec
movsl
cmpsb
ds
mov
ljmp
cmp
push
inc
cmp
inc
mov
push
mov
mov
mov
popa
cmp
loope
popa
lods
pusha
xchg
lods
dec
mov
shlb
cmp
cld
mov
xor
imul
lea
cmp
lods
lods
xor
shlb
nop
mov
nop
das
outsl
mov
repnz
lock
cltd
repnz
adc
xor
ss
mov
stc
cmp
cmp
fs
mov
mov
mov
mov
cmpsb
cmp
shll
das
xor
mov
ffreep
lcall
add
arpl
scas
xchg
icebp
mov
lds
lcall
test
push
aad
sti
fistpl
adc
dec
xchg
mov
int3
sysret
jge
add
sub
mov
jle
je
ficomps
lcall
mov
dec
shlb
rclb
lock
mov
push
sub
adc
cmp
sbb
int3
xchg
push
out
xor
mov
mov
mov
sub
cwtl
cwtl
js
test
cmp
mov
out
add
adc
xchg
xchg
mov
jle
mov
mov
mov
mov
sti
pop
mov
xor
cmp
test
push
stos
cld
arpl
jo
or
xchg
loop
mov
ss
icebp
inc
cld
js
bound
ret
lock
adc
sahf
push
xchg
movsl
loopne
repnz
rcll
out
and
xor
pop
jp
mov
fisttpl
cmp
lcall
in
pop
inc
xchg
cmp
fwait
xchg
sub
hlt
clc
cld
fiaddl
ss
in
xchg
dec
mov
cmpsl
je
movsb
inc
jecxz
test
sub
mov
xchg
adc
leave
popf
repnz
cli
lods
repnz
jae
pop
push
push
xor
dec
or
cmp
sbb
addb
jge
cmp
or
push
jne
mov
mov
xor
imul
movsl
iret
sub
push
adc
test
cmp
mov
ficoms
lahf
lods
mov
mov
mov
xor
lock
pusha
xor
inc
or
mov
sti
cmp
test
sub
notb
cmp
xor
std
cmp
mov
outsl
arpl
mov
jo
add
pop
clc
sbb
out
mov
out
mov
stos
scas
outsl
xchg
jmp
shlb
mov
ss
jmp
fcmove
sub
mov
in
jmp
or
das
lods
cli
xchg
jp
addr16
pusha
movsl
mov
out
std
add
mov
mov
or
rorl
push
pop
lret
xor
mov
cmp
lock
adc
cmp
inc
sbb
or
xchg
adc
pusha
dec
xlat
lret
sub
mov
mov
andb
push
dec
mov
adc
mov
notb
aaa
mov
rcll
jae
mov
inc
lock
push
mov
mov
mov
mov
sub
mov
loop
pushf
cmp
xchg
lock
test
jecxz
ja
fwait
bound
xchg
jne
and
cmp
js
test
inc
es
dec
add
aas
ss
jmp
jp
popf
mul
xchg
or
in
test
xor
push
leave
movsb
je
mov
add
cmp
popf
hlt
mov
iret
aad
andl
xchg
movsl
scas
sub
les
xchg
xchg
push
cli
xchg
push
sbbl
push
mov
cmc
ss
scas
div
in
adc
jb
cmp
out
outsb
and
ret
mov
mov
fnstcw
push
ds
scas
xor
push
push
bound
sbb
movsb
lea
push
sbb
mov
lods
xor
xchg
cli
lock
in
pop
cmp
inc
insl
cmp
lahf
rclb
cmp
cwtl
push
mov
push
shll
push
mov
jne
cmpsl
mov
pop
inc
adc
cmpsl
mov
mov
xchg
repnz
fwait
jle
mov
sub
jae
mov
lahf
neg
mov
xchg
mov
nop
div
push
lock
and
test
mov
mov
xchg
cmp
cmp
mov
cmp
mov
mov
mov
repnz
sarb
mov
aad
cwtl
cli
ds
mov
divb
cmp
jns
aas
cli
jge
fidivs
nop
rcll
inc
nop
fcoml
lahf
cli
cli
and
mov
divb
cmp
sti
mov
incl
cmp
push
aaa
cmp
xchg
xchg
push
clc
xor
cmp
mov
mov
xchg
cli
jno
sbb
mov
clc
data16
xchg
mov
push
sarl
cmp
nop
mov
cmp
mov
pop
and
nop
cltd
neg
cmp
popf
xchg
adc
aam
mov
push
fisubl
nop
mov
cmpsb
xor
xchg
jae
sarb
fstl
mov
pop
jns
js
pop
xchg
sti
cli
push
es
jp
adc
dec
mov
ret
mov
mov
jmp
mov
cmpl
negb
cmp
adc
cmc
lcall
js
add
push
decb
add
insl
mov
dec
int
scas
sarb
je
gs
pusha
fsubrs
mov
xor
in
inc
jp
add
dec
insl
iret
je
fisttps
xor
add
inc
add
scas
add
icebp
out
dec
cmp
loopne
mov
mov
lcall
mov
adc
mov
and
mov
mov
and
add
jne
aam
xchg
mov
or
mov
xor
leave
dec
add
imul
pop
xor
sub
mov
add
sbbb
bound
add
and
add
mov
xchg
test
push
clc
add
fldcw
sub
pop
dec
ja
jne
sub
mov
adc
lcall
push
add
das
repz
in
cmp
insb
add
xor
sar
std
enter
mov
mov
jno
out
inc
push
into
lock
inc
xchg
xor
int3
test
push
cli
adc
out
fmull
gs
xchg
int
lods
lods
jnp
std
adcb
or
outsl
mov
cltd
jb
or
add
jmp
mov
pop
xchg
gs
shlb
movsl
add
mov
mov
loop
popa
les
stos
sbb
mov
insb
pop
sbb
iret
std
out
inc
xor
rcrb
das
pop
mov
jecxz
es
push
sub
fcomi
xor
je
or
rcrb
push
and
std
inc
mov
adc
sbb
push
mov
mov
clc
repz
sub
fildll
add
fsubr
mov
fsubrs
fs
push
or
dec
mov
int3
fidivl
add
aad
cmpsl
pop
jns
mov
pop
icebp
push
movsbl
jl
pop
mov
mov
sbb
dec
xchg
faddl
inc
adc
mov
and
mov
fwait
dec
lcall
adcl
xor
push
fimuls
clc
sti
adc
push
and
push
adc
nop
jmp
push
orb
mov
cs
stc
cld
pusha
adc
les
int3
push
mov
dec
and
mov
aad
mov
scas
mov
jno
repnz
subb
mov
mov
stos
add
jmp
mov
into
in
xor
xchg
xchg
mov
mov
lock
mov
jbe
lret
xchg
adc
dec
fldl2t
add
dec
pusha
leave
mov
and
popa
mov
imulb
movsl
sbb
popa
lock
mov
add
push
dec
mov
xchg
mov
lea
push
and
xchg
adc
adc
ds
enter
imul
jle
inc
inc
cli
push
data16
push
push
xor
fistl
dec
xlat
mov
in
mov
pop
fsub
fs
mov
xchg
pusha
mov
xor
or
jae
mov
fwait
sbb
fldl
add
inc
push
push
and
add
into
fcoms
or
mov
jae
mov
mov
cmpl
call
fcom
imul
jecxz
sub
mov
pushf
xchg
mov
and
andb
sbb
mov
add
pop
into
shll
mov
mov
in
mov
addb
xor
sbb
jmp
shl
add
mov
jo
addb
pusha
nop
mov
rcrl
insb
add
or
cmpsl
xor
cmp
or
mov
into
rolb
aas
out
pusha
scas
jae
add
in
add
add
es
sub
cmpb
sbb
mov
cmp
xchg
ljmp
cwtl
cmpsl
in
add
xorb
add
lret
fimull
adc
sub
inc
xor
add
mov
xchg
call
cmp
cmpsl
fldt
cltd
push
lret
and
sbb
aad
add
pop
div
scas
jb
nop
push
mov
stos
mov
mov
sub
aaa
mov
lds
lock
divl
rcrl
fs
xor
fwait
cwtl
xchg
xchg
xor
loop
mov
arpl
cmpsb
popa
cmp
std
xor
cmp
jp
xorb
push
xchg
pcmpeqd
mov
mov
int3
mov
add
push
mov
cmp
mov
sub
mov
sub
adc
ret
testb
out
cmpsl
push
pop
testl
lea
repnz
jge
xchg
xchg
bound
xor
mov
sbb
fwait
xchg
sbb
mov
add
ds
jmp
aaa
shl
adc
sarb
mov
roll
xchg
lds
mov
mov
fiadds
aas
sbb
cmp
add
xor
gs
shlb
mov
repnz
rcrb
cmp
shrl
addr16
ss
icebp
jmp
fcoms
sub
add
sub
bound
lcall
cs
mov
xchg
ret
sub
lods
arpl
call
push
add
push
adc
mov
lahf
ret
fsubl
movsl
sbbb
push
repnz
add
test
push
insb
movsb
stos
jle
xchg
cli
repnz
add
mov
dec
push
js
push
dec
jle
jge
in
sbb
insl
jae
nop
stc
mov
push
imul
xchg
jecxz
mov
sub
andb
add
jmp
or
sub
inc
shlb
out
push
repnz
xchg
test
lods
ja
adcb
xchg
subb
into
jecxz
setbe
xor
mov
sub
inc
lods
add
pop
add
adc
pop
mov
mov
add
push
adc
cli
add
fidivs
mov
lret
pop
xor
xchg
sahf
sub
xchg
push
adc
xor
sub
xor
mov
push
cs
inc
movsl
or
insb
daa
hlt
loopne
inc
pop
add
xor
mov
push
call
mov
iret
aam
inc
repz
adc
popf
add
fisttpll
test
lret
sbb
add
dec
cli
testb
mov
xchg
enter
in
or
pop
mov
stos
shlb
pusha
xor
cmp
or
repnz
out
mov
nop
push
psubsw
ss
inc
push
add
out
push
cmpsl
fbstp
mov
ljmp
xor
sbb
mov
fisttpl
ror
test
in
add
dec
jb
ja
mov
cmp
imul
jo
inc
sub
push
lock
xchg
and
push
add
pop
out
xchg
in
mov
stos
inc
ljmp
fs
and
inc
mov
int3
lret
sub
mov
lock
das
rcrb
adc
mov
jmp
push
popf
push
push
xchg
sti
xchg
iret
mov
xchg
cmc
mov
cs
mov
jo
cmp
xor
enter
add
push
pop
testl
or
cmpsb
adc
mov
add
not
repz
xor
xor
test
jle
les
mov
imul
xor
sti
out
cmpb
aad
xor
or
mov
aas
dec
sub
scas
xor
lock
sub
jb
je
stc
mov
dec
fcompl
jbe
add
pop
bound
sub
mov
mov
fistpll
xorl
je
fucomp
mov
jl
pop
add
add
imul
into
xor
sbb
jecxz
jmp
jne
xchg
lock
aam
mov
lcall
mov
add
push
mov
mov
jecxz
sub
pop
add
sarb
std
pusha
xchg
dec
cltd
add
dec
cmp
xchg
mov
add
and
mov
daa
cwtl
out
lds
inc
sub
scas
mov
out
mov
cmp
bound
add
insb
cmp
fldt
xor
inc
add
ja
xchg
adc
mov
cmp
lods
cwtl
lea
xor
pop
movl
xor
cmpsl
mov
xchg
aam
lahf
inc
sub
xchg
pop
sub
push
in
cmc
iret
pushf
push
and
es
mov
mov
jbe
testb
std
scas
xchg
pop
outsb
push
fildl
stos
test
jae
inc
repz
mov
mov
mov
in
mov
scas
ss
sbb
scas
aas
jb
xchg
jmp
jmp
cmpsl
sub
add
mov
xchg
jb
test
mov
add
xchg
and
xchg
mov
lock
repnz
mov
add
rolb
push
add
mov
and
flds
sarl
xchg
movsl
inc
mov
in
mov
stos
mov
cld
clc
movsl
xor
and
in
hlt
mov
xchg
push
jmp
push
push
pop
rolb
lods
btr
jnp
pop
jbe
and
xchg
js
or
mov
push
push
int3
cmpsb
and
scas
xchg
push
pop
movsb
and
xchg
xor
fimuls
mov
scas
xor
inc
mull
xchg
repz
hlt
das
rorb
jg
add
xor
jp
push
push
cmp
ja
movsl
add
or
mov
popa
cmp
cmp
jle
add
negb
add
mov
push
mov
test
mov
lcall
fwait
sbb
fldl
mov
in
add
xor
aad
xlat
ljmp
lods
mov
pop
and
xchg
fcompl
pop
mov
mov
aaa
ret
adc
fs
jb
pop
mov
clc
or
sub
das
xor
loope
aad
sahf
loop
xor
jp
stos
pop
lsl
add
inc
insl
out
ret
aam
je
fwait
mov
scas
lcall
mov
mov
or
mov
inc
xchg
stos
jge
subb
add
xchg
jmp
xor
add
out
sub
xchg
xchg
decb
sti
add
subl
test
cmp
outsl
xchg
sub
adc
sbb
lcall
push
xchg
lahf
mov
insb
mov
pop
dec
faddl
mov
aas
aam
and
outsb
jg
dec
jb
push
cmpsb
inc
int
je
push
imul
outsb
enter
or
add
dec
cltd
fcomps
mov
jnp
stos
rcrb
cmc
rolb
jnp
repz
mov
add
push
or
std
fwait
leave
and
test
mov
repz
das
cwtl
xor
fs
movsb
add
mov
xchg
inc
out
jns
jbe
jmp
maxps
mov
add
subb
divl
push
or
shr
movsl
dec
adc
orb
adc
ja
ret
dec
cltd
scas
sub
xor
mov
stos
mov
mov
out
lods
jp
xor
push
sub
out
shlb
lret
mov
nop
into
fcoml
jp
out
jbe
mov
shl
in
push
sti
repz
mov
insl
add
cli
adc
sub
mov
mov
xchg
jne
and
mov
lea
mov
lret
pop
mov
inc
cs
dec
stc
lcall
enter
lcall
mov
cmp
cli
add
xchg
dec
into
cld
jge
inc
push
inc
jnp
add
mov
repz
in
fldcw
lret
jb
ret
mov
add
orb
outsl
cld
mov
push
jb
inc
mov
add
std
push
push
mov
lea
call
lods
add
sbb
jnp
xchg
fsts
repnz
mov
movsb
sub
ss
cmp
loop
les
das
icebp
mov
mov
inc
pop
xlat
xchg
xchg
imul
sub
incb
or
daa
inc
push
scas
lds
dec
xchg
bound
into
mov
or
out
fistpll
mov
dec
in
add
xchg
into
cmpsb
ljmp
leave
inc
dec
stos
add
enter
jns
dec
adc
cmpsb
mov
add
repnz
jp
xchg
je
test
test
jecxz
popl
sbb
popa
in
xchg
sti
rcll
adc
or
insl
and
and
test
mov
push
mov
adc
push
xor
jne
jnp
scas
cs
repnz
pop
push
add
add
pop
inc
mov
add
mov
pop
mov
or
sub
inc
out
mov
xor
mov
outsb
scas
fstpt
xor
push
cmp
cmp
fdivl
frstor
add
mov
ret
ljmp
xchg
sub
inc
jl
fucomip
shrl
fwait
inc
mov
pop
xchg
mov
fdivrl
ret
lret
sahf
mov
and
pop
jnp
icebp
add
cmp
mov
nop
and
lahf
and
mov
push
or
mov
pop
xchg
outsb
add
mov
push
add
add
iret
das
xchg
idiv
out
dec
ret
divb
and
sbb
sbb
xor
rorb
jecxz
jb
orb
jb
add
bound
add
ljmp
les
jle
mov
add
push
cli
add
jp
xor
add
fwait
cwtl
loope
out
aad
aaa
sbb
loop
mov
cvtps2pi
xchg
pop
jno
scas
cld
imul
xchg
les
std
xchg
mov
fimull
cmp
jl
cmpsb
mov
mov
int
out
sbb
cmp
outsl
mov
lods
and
push
loopne
and
test
dec
xchg
aad
dec
mov
adc
in
mov
mov
shll
jnp
add
pop
xor
outsb
pusha
mov
and
movsb
cmpsb
cmpsb
mov
inc
mov
mov
cmp
mov
mov
cli
xor
cmc
nop
cli
idivb
jns
jle
mov
push
in
xor
xor
mov
xor
mov
cmp
notb
cli
nop
sti
idiv
cmp
mov
jb
xor
jno
notl
cmp
mov
and
test
int
mov
aaa
mov
sti
and
nop
stc
idiv
mov
xchg
cmp
mov
notl
cmp
jns
jle
jg
jl
jge
sub
xchg
aaa
cli
xor
jne
jp
jnp
cmp
hlt
jb
arpl
cmp
cli
mov
cli
nop
sti
idiv
mov
xchg
jg
cmp
cmp
jae
icebp
mov
mov
xor
mov
jne
cli
mov
xchg
mov
nop
jl
cmp
mov
mull
cli
nop
cmp
stc
mov
insl
mov
mov
mov
aaa
nop
mov
mov
cmp
mov
jae
mov
mov
and
mov
xor
cli
cld
aas
jb
jnp
mov
sti
mov
xchg
mov
nop
std
ret
repnz
mov
mov
cmp
aaa
and
nop
cmp
ds
cmp
repz
xor
mov
xor
cmp
mov
and
mov
das
mov
inc
mov
xlat
daa
aaa
pop
test
addr16
mov
xchg
in
add
aam
xor
adc
je
inc
push
movsl
mov
xchg
in
mov
test
add
inc
push
adc
test
add
ss
push
data16
push
mov
lods
pop
cld
outsb
xlat
mov
mov
mov
mov
mov
pushf
cltd
xchg
mov
mov
int3
mov
sub
mov
mov
mov
xchg
cs
je
mov
mov
js
call
push
shr
nop
ficompl
lock
mov
clc
xchg
arpl
mov
xchg
fisubrl
sub
mov
inc
mov
mov
jbe
loop
xchg
mov
lahf
xor
mov
movsb
mov
loop
xchg
pop
sti
movsb
je
mov
xchg
cmc
in
mov
rol
in
gs
mov
out
cmp
and
push
cmc
enter
movsb
hlt
das
test
lods
test
adc
push
lods
cmc
sub
insb
movsl
imul
data16
outsb
mov
mov
or
mov
pop
xchg
push
out
stos
movsb
xchg
je
cmc
inc
push
js
add
test
add
xor
mov
mov
fs
inc
imul
cmc
xchg
adc
sub
push
or
in
test
test
push
in
mov
lcall
mov
outsb
adc
cmc
lahf
xchg
iret
and
outsl
mov
fmull
adc
cmc
mov
mov
and
mov
sarb
mov
push
or
out
mov
pop
pusha
stos
out
mov
mov
sbb
cmpsl
xchg
xchg
and
data16
icebp
adc
das
dec
pop
mov
mov
mov
sub
in
js
xor
inc
xchg
fdivs
in
lods
test
fucomi
xchg
lcall
push
je
inc
in
xchg
inc
aam
lcall
jo
xor
pop
sub
jne
fs
pop
inc
sti
clc
adc
xchg
xchg
add
jmp
push
jp
adc
je
notb
xchg
adc
push
sub
lcall
sub
mov
testb
mov
or
fsubl
xor
pusha
test
xchg
pop
or
or
aad
jl
jecxz
mov
mov
aaa
out
xor
cmpsb
aad
mov
lcall
sub
mov
add
adc
and
xor
cmp
cmpsb
movsb
fiadds
xchg
test
sub
aas
scas
push
mov
pusha
ret
pop
pop
push
adc
lds
add
pop
or
ljmp
sub
test
jg
and
xor
push
ficoms
mov
xlat
xchg
out
mull
xchg
cmp
push
xchg
data16
jbe
push
nop
push
mulb
ss
mov
mulb
xchg
mov
jo
mov
and
in
sub
xor
inc
inc
movsl
pop
xor
in
xor
cmp
dec
lcall
adc
sti
popf
shl
push
pop
cmp
sbb
mov
ret
cmp
and
xchg
aam
inc
sbb
mov
ljmp
push
jns
fstl
sahf
sti
sbb
cwtl
aas
dec
and
jb
movsb
stos
cmpsb
je
test
adc
cmp
cli
jmp
xchg
jmp
fcomps
je
mov
fisubrs
sbb
pusha
mov
and
and
lock
in
mov
mov
sahf
loop
mov
mov
mov
icebp
xor
pop
out
sti
jae
andl
gs
js
xchg
and
mov
imul
inc
fiaddl
pusha
js
movsb
xchg
push
testb
sbb
cs
xor
test
test
lods
into
and
imul
xchg
mov
aaa
adc
dec
orb
mov
xchg
mov
mov
xor
repz
jl
inc
jle
cmp
aaa
and
xor
repz
jle
aas
adc
mov
inc
lds
in
mov
ja,pt
js
sbb
xlat
jecxz
inc
and
mulb
test
inc
test
mov
jge
repz
push
or
mov
and
mov
ja
fwait
xchg
es
add
xchg
push
jnp
mov
add
cmp
mov
aad
mov
xchg
or
mov
mov
and
push
and
lods
cli
das
cltd
cmc
push
xchg
mov
cmpsb
add
les
xor
sbb
xor
mov
loopne
fistpl
mov
pop
stos
jecxz
insb
jle
scas
adc
cli
es
pop
loop
or
fcmove
push
imul
movsb
lret
push
lahf
aad
imulb
mov
mov
mov
iret
jno
mov
icebp
loope
rol
xor
bound
cmpb
and
testb
cmp
cli
lock
xchg
xor
mov
mov
sahf
arpl
arpl
pop
jnp
aaa
jmp
adc
inc
test
xchg
mov
cmpsb
jb
loop
and
cltd
mov
out
mov
sahf
xchg
lcall
les
mov
jp
adc
cmpsb
mov
es
or
frstor
mov
mov
fcompl
xchg
xor
mov
mov
sarb
mov
mov
loope
push
js
lcall
mov
mov
lcall
rol
and
mov
mov
daa
cmp
xchg
xchg
add
cmc
jp
and
cmp
xchg
mov
mov
mov
fists
notb
mov
mov
adc
andl
nop
jae
loop
cmp
mov
xor
mov
test
xor
mov
outsb
fstl
xchg
mov
mov
test
cli
xor
divl
cmp
bnd
insb
cmc
mov
loope
mov
cmp
mov
ret
test
mov
sbb
cmp
cmpl
loope
and
push
adc
xor
cmp
lret
push
je
cmpb
push
mov
mov
ljmp
es
or
cmp
mov
sbb
movsb
popl
test
js
ljmp
je
cmpb
lods
les
aas
jbe
shrb
hlt
aaa
inc
mov
nop
and
cmp
sub
mov
dec
scas
loop
repz
mov
inc
mov
xorl
ljmp
insb
fwait
ljmp
ret
divb
inc
adc
idivb
add
stc
nop
lret
add
fsubl
cmp
sar
cmp
push
jp
jb
lret
loope
mov
jo
loop
xor
rclb
cmp
mov
adc
in
jp
and
mov
inc
cmp
mov
mov
mov
dec
adc
cli
ret
es
jp
and
fwait
in
mov
xchg
ret
jae
cmp
mov
mov
xchg
cli
lock
fwait
lds
cmc
sub
cmp
dec
mov
push
and
xchg
pop
and
nop
xchg
loope
mov
decb
inc
jae
mov
jbe
push
cmp
es
inc
loope
mov
nop
repnz
mov
aad
mov
fiaddl
arpl
mov
jp
push
scas
cmp
jp
mov
insb
xor
cmc
cmp
lods
mov
mov
mov
xchg
loopne
push
enter
repnz
cmpsb
shlb
scas
inc
cmp
les
cmp
cmp
lcall
jmp
push
and
inc
neg
push
xchg
dec
cli
mov
push
push
rcrb
imulb
sub
scas
adc
bound
inc
loope
mov
mov
repnz
notb
aas
jo
scas
xorl
movsl
cmp
and
adc
stos
lock
cmp
psrad
fwait
mov
stc
ret
lret
pop
lcall
xchg
cmp
jnp
mov
push
mov
lcall
in
lcall
adcb
xor
hlt
mov
decb
cmp
test
cmp
loop
ss
mov
and
hlt
mov
mov
insb
in
and
push
cs
in
mov
fcmovb
hlt
nop
push
mov
shll
mov
pop
mov
mov
cmpsb
sub
push
pop
jmp
jmp
cmp
jbe
popf
mov
cmp
sub
ss
es
scas
xchg
xchg
addb
xchg
cmp
xchg
mov
add
jp
adc
inc
mov
movsl
mov
cmpb
mov
test
js
lret
loop
hlt
mov
mov
mov
js
mov
stos
inc
cltd
bound
loope
lock
out
cli
cmp
mov
adc
out
bound
xor
lods
add
lock
out
lods
repz
mov
mov
andb
ljmp
cmp
insb
mov
stos
push
fstps
fwait
and
push
lcall
fisttps
xlat
mov
shlb
mov
cmpsl
cmp
push
imul
mov
fwait
stc
add
rolb
daa
mov
pop
jae
xchg
stos
lret
lret
subb
je
loope
mov
inc
nop
ret
xor
mov
stos
push
xchg
adc
mov
fidivrl
insb
cmc
clc
xchg
mov
xor
sbb
mov
inc
mov
adc
cmc
das
xchg
pushf
sub
xchg
aad
xchg
bnd
hlt
mov
and
mov
daa
movsb
inc
in
repnz
lcall
sbb
lods
outsb
xchg
lods
das
xchg
cmpsb
pushf
fidivrl
and
nop
hlt
test
cmp
xor
cli
inc
cmp
mov
lret
and
mov
bound
xchg
add
insb
das
repnz
mov
loope
lret
loope
jb
cmpsb
ds
lret
stos
pop
in
adcl
cmp
mov
js
rcl
mov
xchg
mov
xor
xor
and
rcrl
adc
sub
fisubrl
sbb
lret
scas
add
mov
mov
xchg
pop
mov
ret
push
mov
fiadds
push
fstps
xchg
mov
mov
cmp
loope
mov
nop
repnz
lret
insb
fnstcw
adc
mov
stc
or
xchg
cs
cmp
loope
cmpsb
mov
ret
push
mov
mov
xchg
jl
int
inc
mov
loop
mov
jne
mov
inc
lods
and
aaa
rcl
push
scas
xchg
fiadds
push
fnsave
nop
mov
mov
call
xchg
out
subb
mov
mov
jo
repnz
mov
ja
sbb
lret
cmpsb
cmp
and
cmpsb
mov
cmp
cmp
mov
cmp
insb
idivl
jge
mov
ret
pop
and
in
lcall
add
fimull
push
movsl
rcrb
adc
stos
xchg
mov
mov
mov
xor
mov
daa
mov
cmc
sub
js
mov
push
ja
loop
xor
mov
pushf
xchg
sbb
frstor
mov
psadbw
repnz
inc
and
nop
mov
xor
adc
stc
mov
imul
unpcklps
idiv
xchg
cmp
add
inc
test
xchg
fstps
and
ror
je
lret
mov
xchg
fisubl
pop
nop
shl
lret
nop
mov
testb
cmp
push
mov
roll
lret
mov
lods
mov
shll
andl
andl
mov
mov
andl
push
out
adc
push
jp
and
inc
and
nop
push
cmc
mov
stos
mov
mov
sbb
pop
sarb
cmc
mov
cmc
dec
icebp
mov
add
mov
aaa
pop
adc
mov
fstps
repnz
pop
adc
push
stos
cmp
mov
sub
movsb
sbb
cmp
sub
push
mov
ljmp
mov
ljmp
loop
mov
lods
push
mov
and
lret
dec
cmpsb
add
lock
xchg
xlat
xchg
ljmp
mov
scas
mov
fcmovnu
std
mov
sbb
rorb
sub
cmpsl
mov
push
mov
mov
cmp
hlt
mov
jb
cmp
divl
lcall
sub
lock
mov
addl
testb
xchg
scas
mov
cmpb
nop
sub
imul
lea
push
mov
fwait
cmpsb
lods
stos
nop
inc
mov
cltd
cmp
jmp
scas
sub
popf
xor
xor
orb
adc
andl
sbb
cltd
mov
and
add
mov
notl
repnz
js
stos
fidivrl
push
xchg
and
adc
frstor
shrl
cmp
mov
sbbb
pop
ljmp
push
push
es
mov
js
repnz
mov
je
xor
shll
xchg
xor
xchg
xor
mov
stos
js
je
ljmp
and
idivl
xchg
aaa
mov
cmp
mov
sbb
mov
and
jb
movl
mov
mov
insb
push
ffreep
scas
cmpsb
not
js
es
movsl
mov
test
cmc
pop
jecxz
les
pop
push
inc
mov
hlt
test
or
inc
add
mov
cmpsl
cmpsb
out
aaa
pop
es
repnz
cmp
popf
inc
addr16
dec
rclb
lods
mov
into
push
or
xchg
inc
mov
es
loopne
repnz
je
scas
mov
sbb
rcrb
cmp
xchg
daa
push
pusha
add
mov
and
mov
inc
lods
adc
icebp
rorl
mov
mull
and
and
mov
sbb
xchg
sti
inc
daa
mov
and
and
out
mov
mov
inc
in
das
or
mov
inc
aad
ds
add
enter
test
xchg
daa
cmc
ljmp
cld
mov
cmp
inc
je
push
cmc
in
inc
pop
out
dec
sti
es
call
xchg
in
mov
shrb
push
aam
lcall
jmp
mov
sbb
data16
daa
negl
call
in
sbb
push
nop
jp
xor
inc
mov
and
mov
jbe
add
or
cwtl
cmp
cmpsl
clc
push
cmp
dec
clc
test
cli
inc
push
adc
into
fidivl
test
pop
xchg
cmc
add
xchg
sbb
jecxz
xchg
xadd
cmp
jmp
inc
imul
mov
notb
aam
push
shl
fidivl
ret
vmovups
inc
sub
xchg
out
mov
mov
mov
in
xchg
push
enter
xchg
js
mov
into
jmp
pop
push
movsl
mov
ret
inc
ss
in
xlat
and
in
mov
jmp
mov
inc
rclb
cmp
es
arpl
inc
int
push
mov
sbbb
mov
divb
add
daa
and
pop
fadd
sub
push
ja
jl
xchg
mov
inc
ja
dec
inc
sti
in
mov
inc
inc
fiadds
dec
add
test
mul
add
cmp
fdiv
in
enter
loope
scas
cmc
addr16
mov
negb
sbbl
out
in
inc
test
data16
sbb
sbb
out
stos
daa
in
adc
daa
loop
aas
loopne
xchg
icebp
loopne
sbb
lcall
push
mov
pop
xchg
xchg
sti
or
cld
mov
mov
hlt
push
leave
adc
ds
and
inc
test
test
lock
cmpsb
in
btrl
stos
sub
and
xchg
and
idivl
mull
mov
dec
cmp
outsl
aam
cmpsb
cli
clc
lea
mov
xchg
mov
jmp
mov
push
mulb
sub
dec
xchg
or
in
and
les
ret
cld
movsb
out
gs
xchg
xchg
adc
jbe
fsubr
loop
out
mov
dec
loopne
mov
adcl
dec
xlat
inc
pop
data16
jge
mov
mov
xchg
inc
sti
mov
dec
cmp
xor
add
or
jp
movsl
call
mov
out
sub
sti
ds
and
and
and
xchg
jle
daa
sbb
std
push
xchg
test
test
bound
fldl
jns
inc
mov
push
xchg
sub
cmpsb
hlt
inc
sbb
xchg
xchg
xchg
jbe
movsb
jle
xchg
inc
pop
and
xlat
enter
mov
mov
cmp
or
lea
and
push
les
hlt
pop
xchg
icebp
jb
enter
adc
clc
or
imul
cmpsb
or
push
dec
or
lods
imul
nop
push
and
jae
lcall
rorl
and
clc
jns
mov
call
sbb
sub
clc
in
es
jne
mov
andb
scas
repnz
test
add
cltd
mov
mov
xchg
push
xchg
mov
out
pop
xchg
pop
cmc
insl
mov
xor
lcall
and
cli
sarb
lcall
popf
cwtl
shlb
cmpsb
xor
xor
inc
mov
out
out
shr
ss
insb
fldt
stos
imul
xchg
inc
pusha
push
loop
sub
sub
sbb
xor
xchg
ret
out
sub
inc
cltd
pop
test
test
loop
push
sub
xchg
roll
test
xchg
fwait
enter
fiaddl
in
jnp
jne
sahf
repnz
dec
xchg
frstor
into
sbb
xlat
mov
ret
or
loope
dec
xchg
popa
gs
push
push
jmp
add
adc
push
pusha
aam
loop
adc
out
push
mov
ljmp
pusha
or
inc
fs
fisubs
mov
inc
addl
inc
cld
cmp
fiaddl
push
mov
aam
jmp
jbe
inc
mov
fistps
lods
out
and
push
sti
dec
mov
push
in
outsb
mov
jle
int3
lahf
lea
lock
mov
or
pushf
loop
adc
out
in
pop
mulb
decb
mov
dec
and
jnp
inc
call
out
mov
xchg
jp
fsubl
cmp
mov
dec
and
rolb
outsb
sub
les
xchg
sub
xchg
push
shl
push
cmp
nop
sbb
xchg
sti
orb
loope
ja
jbe
in
cltd
movsl
mov
adc
addb
test
fistl
jmp
mov
cmpsl
dec
mov
lret
pop
inc
fs
or
subb
pop
data16
push
divb
xchg
pop
xchg
movsb
xchg
xlat
addb
and
xor
lret
mov
xchg
push
push
pop
and
push
mov
dec
dec
idivb
fcoml
push
push
pop
and
test
loop
fwait
lret
ss
cmpsl
push
xchg
jbe
mov
xor
mov
xchg
mov
mov
mov
mov
mov
xchg
mov
aam
mov
testb
jns
mov
xor
xchg
es
es
lds
jecxz
adc
out
xchg
aad
mov
cmpsb
and
add
pop
mov
outsl
stos
mov
mov
jp
mov
mov
xor
xchg
mov
xchg
sarb
divb
jmp
or
iret
repz
shrl
repnz
mov
lods
ds
xchg
or
mov
xchg
mov
and
add
jb
inc
mov
mov
repnz
push
mov
push
shll
jnp
jle
rcll
cmpsb
in
les
mov
jae
ds
adc
xchg
mov
inc
daa
cs
jle
mov
xor
jbe
adc
inc
mov
inc
inc
jnp
push
xor
inc
sub
push
pop
xlat
std
cmp
icebp
stos
pusha
push
or
fimuls
das
inc
loop
call
pop
sub
dec
and
mov
mov
mov
mov
out
fnstsw
push
mov
mov
repnz
loop
mov
mov
bnd
jb
sti
pusha
mov
std
dec
xor
mov
xor
xchg
mov
fcoms
mov
lret
stos
jns
xor
and
movsb
dec
test
mov
aam
and
rolb
mov
scas
or
and
mov
push
pop
and
add
testl
push
mov
scas
loope
subb
lock
gs
pushf
loop
cmp
mov
lcall
xchg
das
fsubs
clc
pop
popa
adc
push
repnz
nop
mov
cmp
mov
jno
xor
cmp
nop
xchg
jge
idivb
jl
cmp
cld
and
cmp
cli
and
mov
xchg
xor
nop
mov
jno
cmp
push
xor
cmp
cmp
cld
xchg
mov
nop
ds
jns
stc
mov
cmp
cmp
cmp
mov
jno
xor
cmp
mov
jae
xor
and
int3
cmp
idivb
mov
mov
cld
mov
mov
idivb
xor
and
div
mov
ja
aaa
xchg
idiv
mov
jbe
ss
mov
jno
xor
jo
xor
lock
jae
xor
nop
mov
jo
mov
mov
cli
and
stc
cmp
cli
clc
and
sti
cmp
cli
cli
es
jns
cmp
mov
mov
stos
repz
rcrb
ret
inc
cld
icebp
daa
mov
xor
mov
xor
adc
arpl
mov
inc
rorl
dec
mov
mov
scas
inc
add
xchg
imul
xor
rol
add
lods
repnz
xchg
scas
ret
outsb
aaa
or
sub
mov
cmpsb
aaa
pop
adc
mov
out
lahf
jae
mov
mov
mov
adc
popa
adcl
inc
es
inc
inc
out
pop
inc
movsb
inc
aam
add
movsl
inc
lds
inc
mov
inc
push
mov
inc
dec
inc
call
inc
jmp
inc
into
inc
jle
scas
inc
iret
inc
outsl
inc
mov
inc
pop
inc
lea
inc
dec
inc
loop
add
pop
jecxz
add
inc
rorb
xchg
dec
rorl
xchg
dec
inc
dec
testl
dec
add
movsl
dec
aad
add
dec
push
mov
dec
imul
sub
dec
jmp
dec
out
dec
push
dec
scas
dec
fisttps
dec
pushf
dec
cmp
pop
dec
std
dec
sbb
push
jb
xchg
pop
xor
inc
lock
adc
dec
rorl
dec
xchg
dec
ss
push
dec
testl
dec
je
xchg
dec
xor
dec
sbb
dec
fisttpl
dec
cwtl
dec
cmp
dec
stc
dec
sbb
dec
fimuls
dec
lahf
dec
aas
dec
pop
dec
cld
dec
sbb
mov
dec
xchg
mov
repz
mov
rorb
lea
lea
lea
lds
lret
lea
clc
lea
lea
jmp
fimuls
popf
mov
mov
mov
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jno
loope
and
jno
popa
out
jbe
cmpsl
inc
xlat
inc
and
cmc
inc
gs
mov
inc
cmp
inc
jns
jle
popl
inc
cld
inc
insb
inc
lea
shl
push
inc
pop
xor
inc
sub
sub
xor
test
sti
sub
cmp
ds
mov
rcll
xorl
cli
push
dec
push
sub
push
js
cltd
push
mov
push
outsl
push
in
push
or
lods
push
or
jnp
arpl
imul
je
test
dec
sbb
dec
or
dec
or
dec
mov
and
add
jae
or
enter
int3
xchg
int3
test
or
or
call
int3
dec
int3
jg
dec
int3
in
int3
or
das
shrl
popa
sub
xchg
sub
dec
sub
cmp
dec
sub
repz
xor
aad
cmp
sub
mov
stos
sub
dec
sub
push
sub
or
xchg
jb
xchg
aad
xor
hlt
push
inc
push
in
ficoml
push
imul
js
mov
push
call
push
sbb
int
dec
push
repnz
arpl
sbb
notb
pop
aaa
inc
movsb
dec
aam
je
movsl
dec
aad
gs
cmp
dec
cmp
dec
push
dec
cmovnp
shlb
mov
enter
jge
jge
jge
jge
jge
jge
pop
mov
jge
jge
jge
jge
jge
jo
inc
loopne
xor
xor
push
push
push
push
push
pushf
push
sub
int
xchg
loop
mov
xchg
mov
mov
and
add
add
inc
daa
dec
push
dec
in
mov
dec
jnp
test
dec
dec
push
dec
lahf
mov
sar
mulb
jno
sahf
data16
sti
add
inc
mov
pop
push
int3
push
arpl
jo
addl
cmpsl
push
aaa
inc
inc
inc
hlt
inc
and
and
inc
sti
aam
ljmp
xchg
sub
sub
int3
sub
sbb
xchg
loopne
jbe
addr16
jne
dec
push
mov
push
in
push
mov
arpl
mov
lea
lea
les
mov
scas
xchg
lahf
cs
sub
repnz
popf
dec
scas
mov
in
push
imul
and
inc
adc
add
les
push
lds
inc
lret
inc
mov
inc
push
inc
scas
inc
lods
fcmovu
mov
repz
mov
int3
lcall
lea
cld
nop
cmp
jge
mov
movsb
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jno
and
fucomi
and
dec
out
inc
mov
inc
std
inc
rclb
inc
sub
addl
cltd
dec
mov
dec
jg
cmp
std
dec
or
and
lds
mov
mov
decb
mov
mov
out
inc
in
stos
enter
mov
popa
loope
cmc
cmp
jge
mov
stc
jge
jge
jnp
adc
push
pop
push
xchg
push
xor
inc
mov
mov
cmpsb
int3
sbb
scas
int3
ds
int3
pop
int3
mov
or
int
ret
das
inc
scas
and
lods
and
inc
lods
or
cwtl
sti
test
adc
push
cld
push
lods
push
jge
mov
lods
xchg
mov
jge
mov
lcall
cli
repnz
mov
les
lret
xchg
xchg
int3
xor
or
jge
jge
jge
jge
jge
jo
xchg
mov
inc
loopne
inc
testb
movsb
int3
daa
int3
push
out
stos
push
clc
jmp
mov
xor
je
mov
popa
jb
popa
and
xor
int3
call
int3
sbb
push
int3
jge
and
xchg
or
mov
cmc
push
aad
xor
lahf
push
aas
push
pushf
push
sub
fstl
push
lock
jnp
arpl
in
fcmovnb
in
dec
or
dec
iret
dec
jg
xchg
and
mov
test
enter
int3
sbb
stc
int3
sub
dec
int3
outsb
int3
das
int3
dec
int3
fmul
int3
pop
scas
repnz
push
scas
imull
mov
push
lea
mov
ret
adc
xor
stos
and
inc
mov
pop
push
pop
push
inc
hlt
inc
adc
xor
dec
ret
push
pop
mov
aad
add
dec
jle
test
jno
dec
pop
jnp
mov
inc
lahf
dec
mov
dec
mov
push
mov
mov
xchg
outsb
sub
insb
js
outsb
scas
and
jl
sbb
push
adc
push
lret
inc
into
ss
int3
sub
pop
jmp
pusha
fdivrp
add
aad
pop
xchg
inc
lds
push
int3
pop
int3
iret
int3
fmul
popf
int3
sub
pop
inc
inc
mov
cmp
mov
xchg
adc
and
push
sbb
je
inc
mov
inc
jg
sbb
lods
inc
cmp
mov
jl
and
sub
push
jo
pop
ljmp
or
mov
push
nop
adc
icebp
jo
ljmp
adc
adc
dec
jnp
rcr
push
arpl
imul
push
and
dec
stos
dec
test
outsb
dec
mov
jecxz
rclb
cmpsl
jbe
add
stos
mov
int3
sti
int3
imul
stc
test
cld
jge
jno
loope
and
ljmp
ljmp
jg
js
shll
push
rol
push
icebp
lret
push
into
test
clc
adc
xchg
sbb
cmc
jnp
fdivs
jno,pt
das
inc
and
inc
push
das
mov
sub
lods
cmp
imul
ret
cmp
jge
mov
lret
fidivrs
push
inc
daa
inc
hlt
dec
adc
movsl
dec
sub
dec
pop
dec
fmull
add
mov
int3
pop
pop
pop
call
dec
push
dec
scas
dec
iret
dec
outsl
adc
mov
aad
xor
add
add
mov
push
les
lret
je
aad
int3
jp
fwait
jge
jns
xchg
fsubr
push
jle
jecxz
add
arpl
je
movsl
pop
mov
dec
lret
fmuls
dec
or
dec
dec
mov
into
and
push
das
stos
mov
xor
pop
mov
push
mov
int3
es
call
test
shlb
leave
out
lcall
bound
ret
mov
loop
sti
mov
xchg
test
cmpb
outsl
inc
mov
inc
loop
push
push
adc
mov
scas
ljmp
sti
lock
jae
sbb
div
int3
mov
mov
xchg
adc
sub
mov
jp
or
xchg
lea
les
push
je
scas
mov
scas
icebp
xor
push
mov
and
xchg
cmpsb
cmc
push
aad
xor
test
popf
add
jno
jnp
arpl
imul
and
or
adc
rolb
les
lret
and
movsl
int3
sbb
sbb
fmul
push
dec
mov
xchg
jge
mov
cmp
sarb
outsl
ljmp
mov
xor
ret
lahf
pop
jno
jmp
lds
cmp
push
insl
push
xchg
mov
les
dec
fiaddl
lods
fwait
and
std
lods
cltd
jnp
cltd
movsb
mov
shll
mov
dec
repz
out
jne
fdivs
push
scas
adc
cmp
xor
bound
fwait
call
or
popf
dec
call
xlat
mov
movsl
dec
lcall
lea
xor
push
andb
xor
mov
shll
jb
dec
movsb
xchg
lock
mov
sub
pop
int3
scas
int3
push
int3
out
cvtpi2ps
bound
xchg
shll
js
and
jno
ror
jbe
xlat
int3
ja
aam
add
movsl
mov
jns
idivb
mov
popf
dec
cmp
rol
movb
stos
sub
xchg
mov
dec
movsb
dec
les
dec
aad
add
dec
cwtl
dec
sbb
dec
sahf
dec
cs
lahf
dec
iret
dec
int3
dec
insb
dec
insl
dec
xor
mov
xchg
mov
sahf
inc
lcall
jno
scas
inc
into
ljmp
int3
int3
jl
popf
mov
cmp
repz
dec
mov
lods
enter
dec
outsb
lea
add
imul
pop
xchg
dec
test
dec
ljmp
dec
dec
dec
leave
dec
mov
cmp
add
out
mov
push
xchg
pop
adc
jmp
sbb
push
out
add
dec
ret
mov
xchg
adc
dec
add
adc
cwtl
sub
ds
mov
loopne
lods
dec
out
jne
push
sti
lea
call
xchg
xor
mov
xchg
jge
dec
xor
xchg
repz
add
aam
inc
pop
jnp
in
adc
dec
sahf
dec
lahf
dec
dec
dec
loop
rol
adc
mov
sahf
mov
push
fisubrs
jmp
sbb
xor
mov
lret
add
jo
adcb
mov
test
mov
faddp
xchg
mov
aad
ss
lods
add
insb
lods
dec
sub
jmp
mov
dec
xchg
add
add
cmc
ss
jmp
test
cwtl
stc
dec
nop
outsb
scas
inc
add
iret
std
ds
jnp
adc
popa
into
xchg
adc
add
push
aad
pop
clc
lcall
dec
cmp
int
and
rclb
mov
in
mov
inc
js
sbb
imul
sti
add
pop
ret
add
sub
inc
mov
sub
dec
dec
mov
mov
mov
aam
movsb
xor
push
fcmovnbe
pop
lret
sbb
and
fcmovnu
aas
dec
sub
or
rol
xchg
les
cmpsl
pop
popf
lds
push
out
mov
scas
ret
and
decb
ja
xor
fs
mov
jns
jae
push
dec
iret
dec
outsl
dec
mov
dec
fldl
pop
dec
add
jo
bound
hlt
lea
adc
adc
ss
dec
jmp
hlt
mov
fistpl
lea
mov
xchg
cmp
test
push
popa
popa
push
sub
mov
jge
jnp
repz
dec
dec
push
xchg
pushf
xor
push
sub
scas
push
and
mov
push
cmp
push
mov
push
mov
sub
mov
mulb
movsb
xor
ja
mov
pop
lea
xchg
in
push
pop
mov
ret
loop
mov
dec
push
sub
lods
jnp
fidivs
orb
pusha
lret
mov
add
lods
cmpsb
lods
cmpsl
and
dec
test
int3
pop
int3
or
dec
daa
xchg
push
xor
mov
into
xchg
lret
adc
pop
outsb
push
push
lods
adc
popf
dec
sub
xor
push
add
jmp
jge
jge
jge
jge
pop
leave
jns
adc
push
cmp
xchg
xor
inc
aad
test
xor
mov
fxch
sub
or
add
pop
nop
pop
and
add
dec
xchg
dec
les
mov
inc
jecxz
in
sub
jns
and
decb
inc
int
ja
test
mov
jp
clc
pop
dec
jmp
cmpb
cmpb
loope
dec
cmpsl
roll
dec
sahf
dec
scas
dec
cmp
pop
dec
cmp
push
adc
out
lods
adc
xlat
stc
addb
cmpsb
fimull
dec
mov
dec
fimuls
dec
lods
add
movsb
repnz
xchg
mov
les
push
mov
lea
sbb
sub
addb
xchg
shl
aad
aaa
jno
lock
xchg
lods
push
sub
or
clc
cltd
dec
cmp
cli
int3
dec
int3
cmp
xor
mov
ss
jge
jge
jnp
pop
sahf
jnp
rorb
and
cld
add
push
jae
negb
inc
inc
lret
lret
or
popa
xchg
inc
mov
inc
mov
mov
and
xchg
les
int3
inc
int3
ljmp
test
outsl
dec
fmull
dec
xchg
inc
rcl
jae
xor
test
adc
test
inc
sub
inc
mov
mov
adc
pushf
push
xor
inc
push
jne
test
inc
push
les
into
adc
aad
das
in
xor
fdiv
mov
shll
fisttpll
dec
loop
mov
jnp
jae
movsb
inc
xor
inc
dec
in
lea
int3
dec
push
clc
pushf
xchg
popfw
inc
int
loop
arpl
imul
add
xlat
ljmp
jnp
rep
lcall
sbb
mov
orl
and
jge
jge
jge
jge
jge
jge
jnp
xchg
push
add
and
inc
push
dec
xchg
dec
fs
test
push
jmp
push
lea
xchg
test
out
push
sub
dec
push
jge
arpl
mov
push
xchg
sub
pop
inc
test
testb
push
call
push
and
jnp
popa
dec
inc
adc
sub
mov
inc
cltd
inc
sub
in
mov
popa
xchg
je
bound
clc
xor
jle
cltd
mov
pusha
mov
push
imul
test
sbb
dec
leave
es
ds
inc
arpl
pop
les
es
inc
mov
jnp
ljmp
insl
cli
sahf
mov
inc
mov
and
out
and
cmpsl
mov
fisttpl
dec
or
or
clc
sub
adc
push
int3
insl
aad
xor
hlt
xchg
and
push
es
ljmp
mov
and
mov
lock
inc
mov
lcall
int3
sahf
insb
and
pop
xor
and
jnp
xchg
push
fidivrs
push
mov
clc
jb
sub
repz
mov
or
dec
out
dec
das
cs
mov
rcll
dec
mov
nop
icebp
xchg
out
xor
fimull
dec
lea
cld
lea
lea
repnz
push
stc
cmpsl
xchg
push
std
stos
jnp
xchg
dec
cmp
imul
sub
cmpb
fs
cmc
mov
pop
mov
push
xchg
push
notb
push
sub
sti
or
mov
ret
xchg
in
jbe
movsb
add
dec
mov
jp
jno
sbb
xchg
push
xchg
test
add
dec
mov
dec
cmp
cs
sbb
inc
and
daa
aaa
jns
pushf
jle
filds
inc
xchg
push
aaa
push
mov
aam
xchg
enter
mov
jge
jge
jge
jnp
jmp
xchg
nop
movsb
lock
loop
int3
xchg
int3
xor
aad
lcall
int3
enter
jmp
jno
dec
inc
mov
mov
ficoms
call
push
pushf
inc
into
jmp
inc
out
les
lret
mov
outsb
in
dec
jge
inc
cltd
mov
and
into
nop
lods
cmc
sub
jnp
mov
inc
imul
int3
sub
cld
inc
mov
stc
shl
xchg
dec
mov
sti
popf
or
and
push
cld
xchg
mov
imulb
shlb
rcll
adc
stc
dec
dec
dec
aas
into
sub
xchg
loope
repz
mov
jo
ss
je
insb
lea
popf
stos
mov
test
adc
int
pop
xor
mov
fs
add
dec
aaa
and
sub
into
lea
lea
decb
dec
xchg
sbb
test
adc
cmp
mov
aam
and
mov
dec
or
ss
adc
dec
sub
inc
int3
insl
scas
xorb
and
addl
stc
addr16
and
cmpsb
lea
lea
fbstp
push
bound
mov
mov
gs
testb
pusha
lods
in
in
nop
lret
jge
jge
jnp
lret
cmp
push
and
pusha
movsb
adc
dec
mov
pop
jge
jge
jp
sub
fimuls
mov
int3
pop
clc
cld
mov
xchg
xchg
add
mov
inc
popa
adc
andb
lods
cli
sub
enter
pop
out
cs
lods
lahf
sub
int
insl
and
add
pop
lds
lods
cmp
dec
out
dec
jg
mov
jge
xchg
adc
xor
push
xchg
ret
shrb
lea
dec
rcll
dec
lahf
ficompl
mov
xchg
insl
mov
adc
add
jo
daa
les
push
fistl
pop
dec
or
lods
pushf
sub
scas
inc
loop
adc
sahf
xchg
dec
pop
das
ss
add
ret
xchg
sbb
sar
xor
test
int3
lret
and
ljmp
popa
enter
mov
int3
mov
int3
js
test
mov
int3
cmp
das
jo
adc
inc
lods
in
movsl
mov
cltd
inc
leave
inc
imul
mov
push
xchg
adc
mov
out
popa
popa
xchg
xchg
xchg
pop
pop
xchg
lds
and
adc
dec
mov
pop
mov
repnz
jecxz
add
mov
jge
jnp
leave
push
movsb
fdivs
dec
sub
inc
ds
pop
pop
fsubl
cmp
add
push
push
inc
out
push
data16
aam
inc
sub
sbb
jo
fmuls
int3
das
scas
jp
fwait
and
dec
mov
movsb
out
adc
insb
dec
ret
push
dec
mov
adc
inc
dec
gs
lcall
cmp
inc
push
fiaddl
enter
mov
xor
mov
jnp
loop
cld
notl
enter
mov
xchg
and
add
xchg
xchg
ja
mov
scas
sahf
mov
pop
scas
jae
fidivrs
cmp
mov
hlt
mov
xchg
mov
push
repz
stos
arpl
imul
scas
testb
mov
and
adc
ret
stos
dec
lahf
and
cmp
jle
lahf
mov
xor
xchg
jno
push
jno
popa
adc
fildl
cmp
pushf
mov
jge
jnp
shrl
arpl
cli
shll
or
xchg
dec
sub
mov
out
dec
fcoms
adc
mov
adc
jge
jge
jge
jge
jnp
repz
dec
mov
mov
mov
mov
rolb
popa
shlb
pusha
xor
jo
push
dec
ljmp
int3
fnstsw
inc
lock
pop
mov
hlt
push
adc
out
lds
dec
jmp
ss
dec
adc
subb
rclb
addb
popa
dec
testb
cmpsl
dec
aaa
dec
push
das
mov
adc
in
cmp
dec
in
fimuls
ret
xor
repnz
ljmp
cmpsb
inc
cmp
notl
mov
fistl
add
add
andb
fdivrs
jge
jnp
adc
pusha
cmp
in
notl
into
arpl
rolb
xchg
aaa
pop
jne
int3
xchg
sub
sub
and
push
mov
rcpps
inc
fidivs
popf
mov
xor
add
dec
pop
dec
lea
lcall
and
xchg
fcomi
add
dec
cs
decl
xchg
jbe
and
pop
loope
jnp
arpl
xor
adc
add
push
aaa
ret
js
pop
int3
jge
jb
addl
rcrb
push
inc
dec
push
mov
inc
push
int3
sahf
int3
cs
psubb
or
mov
lret
and
mov
jnp
push
dec
mov
clc
scas
jno
pop
inc
push
xor
add
mov
xchg
mov
jmp
mov
lods
lods
and
xchg
and
inc
mov
cmp
ret
out
mov
jb
ret
and
out
push
mov
push
ljmp
loop
xor
pop
mov
cmpsb
inc
xchg
add
lods
stos
sub
lods
sub
loope
in
mov
adc
stos
fsubrp
enter
dec
xor
pop
mov
loop
jb
lock
xchg
adc
test
dec
ljmp
and
cmp
ljmp
mov
mov
fs
xchg
inc
push
inc
or
les
jns
pushf
jg
xor
sbb
or
adc
repnz
jo
xchg
movsb
and
xor
sub
lea
lea
scas
movsl
aas
addl
xchg
and
call
inc
dec
ret
pop
jmp
adc
mov
mov
bound
in
xlat
fisubl
mov
mov
ret
arpl
cld
push
xor
ja
dec
lods
jmp
dec
inc
mov
icebp
jno
int3
pushf
adc
cwtl
stc
dec
mov
movsb
cmc
int
sbbl
cmp
movsb
push
dec
ja
mov
sub
into
int3
cmp
insb
rcl
inc
jnp
arpl
loopne
cmp
dec
push
movsb
lods
push
and
jge
jge
jnp
ljmp
lods
mov
and
sub
scas
hlt
movsb
sbb
add
mov
cs
mov
mov
cmp
rclb
sub
mov
std
sbb
inc
lea
and
push
popa
or
lods
mov
dec
es
jp
dec
call
mov
jns
roll
test
mov
adcl
cmpsb
fimuls
cmpsl
mov
fs
sub
dec
lret
push
mov
js
mov
ret
sub
ja
xchg
push
les
push
jne
jp
mov
push
cmp
sbb
lret
jnp
fdiv
adc
nop
jo
inc
sbb
and
je
dec
jne
inc
scas
dec
lods
sub
sub
pop
add
jns
mov
jle
test
ss
push
push
mov
ja
mov
clc
xchg
jno
cmpsl
jo
data16
jnp
out
scas
push
mov
pop
popa
repnz
js
filds
add
jne
mulb
je
inc
adc
cmc
dec
pop
cmc
fwait
push
or
cmp
mov
pop
test
lds
dec
pusha
and
push
imulb
jb
and
push
jecxz
aaa
jp
sbb
mov
test
int3
shll
xchg
js
sub
not
pop
out
inc
aaa
ds
fcom
mov
push
pop
push
and
adc
xchg
mov
cmp
push
insb
push
adc
mov
mov
xchg
inc
xor
es
fistl
js,pt
adc
pop
sub
cmp
mov
mov
dec
testl
push
and
xchg
test
sarb
lahf
inc
jl
cmp
add
xor
mov
in
mov
or
into
aas
jb,pt
dec
dec
dec
adc
jp
out
data16
dec
rorb
push
out
jle
dec
cmp
sub
lods
int3
sub
bound
push
loopne,pt
inc
into
sub
add
push
push
rcrb
dec
jmp
dec
sbb
mov
arpl
adc
outsb
lea
jmp
call
into
adc
inc
mov
xchg
nop
jo
add
pop
std
adc
les
loop
std
out
jo
sbb
not
mov
pop
ret
in
addl
inc
icebp
inc
adc
xor
and
inc
cwtl
inc
cmp
lods
jmp
xchg
fstl
add
popf
mov
into
xchg
std
push
mov
ljmp
call
cmp
xchg
push
pusha
and
push
mov
adc
cmp
mov
out
push
or
lcall
jle
das
push
subb
xor
push
and
inc
sbb
loop
or
sub
push
in
fbstp
lock
fstpt
jb
mov
in
pop
clc
mov
jo
push
push
adc
cmp
cltd
mov
rolb
in
lods
add
push
and
ss
xor
outsb
xchg
mov
mov
add
iret
in
repnz
lock
idiv
push
and
push
scas
push
aas
aas
subb
add
movsb
mov
and
lret
jbe
xchg
inc
gs
cli
push
xchg
dec
arpl
stc
mov
aam
jle
cmp
sub
cmp
dec
sbb
pusha
push
push
pop
push
lea
mov
adc
or
push
jae
jbe
cmp
in
sbb
clc
pop
lea
into
mov
repnz
add
cwtl
and
pop
pop
push
test
push
mov
dec
xchg
bnd
jbe
int3
lea
xchg
xor
lahf
and
cwtl
ret
pop
xor
inc
fldl
mov
xor
xchg
cltd
cld
es
adc
icebp
cwtl
cmp
xchg
movzbl
test
pop
lea
xchg
or
cmp
and
icebp
cli
movsb
out
push
lahf
int3
enter
stc
xor
inc
pop
push
cld
ret
nop
jle
out
lock
mov
test
adc
pop
add
lods
insl
xor
sar
mov
jl
cld
inc
jno
push
inc
test
dec
test
pop
daa
and
lea
aaa
cmpsl
push
pusha
lea
adc
mov
add
pop
xchg
inc
mov
inc
mov
adc
mov
shll
bound
pop
shll
mov
or
mov
pusha
lods
jno
xchg
and
je
clc
das
xor
adc
dec
mov
jl
push
jp
shl
push
xchg
xchg
dec
xor
cmp
pop
inc
sub
in
and
out
adc
add
in
inc
or
sti
xchg
pop
nop
daa
push
ljmp
int3
dec
mov
andl
stos
ja
mov
xor
sahf
inc
filds
inc
insb
inc
popf
inc
repnz
daa
ss
inc
pop
mov
pusha
movsb
jne
sub
dec
xchg
jmp
adc
or
rcll
pop
icebp
pop
push
inc
imull
xor
push
mov
adc
or
lret
inc
cmp
cmp
dec
push
cs
popa
mov
mov
aam
add
ja
xor
add
jne
or
or
inc
mov
push
idivl
dec
sub
mov
and
inc
jo
ret
mov
mov
dec
and
out
divb
push
jb
dec
fiadds
and
push
into
testb
xchg
ret
xchg
xor
xchg
cwtl
shll
cltd
xchg
jb
icebp
adc
out
mov
push
adc
adc
jge
mov
push
addl
mov
mov
cmp
in
pop
mov
cmpsl
push
ficoms
cli
jo
mov
ss
cmpsb
and
add
ss
enter
repz
fimuls
je
das
xor
pop
pop
hlt
mov
xchg
lret
mov
cmp
outsb
dec
dec
mov
fiadds
mov
and
mov
mov
lcall
dec
and
mov
mov
or
add
sbb
mov
sti
jnp
cwtl
int3
mov
iret
cmp
sbb
adc
xor
int3
pop
in
sti
xor
enter
stc
xchg
pop
push
dec
push
cmp
jae
jecxz
mov
mov
adc
mov
insb
push
popf
push
dec
and
and
inc
or
movsl
mov
out
jecxz
cs
push
mov
jecxz
lods
cltd
and
nop
scas
loopne
sti
out
into
ljmp
jns
sahf
jns
repz
nop
es
fimull
lods
cmpsl
lods
sub
xchg
inc
push
in
mov
mov
push
xchg
mov
jmp
sahf
lahf
xorb
lret
jno
cmp
dec
mov
mov
dec
cmp
mov
out
pop
notb
lcall
dec
xchg
fldl2e
int3
out
int3
push
int3
in
int3
jge
inc
mov
ret
ss
push
xor
sbb
xchg
add
int3
mov
test
jg
mov
xchg
je
or
lret
or
mov
repz
lea
add
jb
xorl
jbe
jmp
movsb
data16
or
scas
mov
in
push
lcall
jae
and
in
jo
sti
jae
imul
mov
ret
cwtl
push
roll
and
in
adc
fadds
mov
inc
adc
pop
mov
int3
int3
int3
popf
movsb
repnz
jecxz
jp
dec
lods
dec
sub
dec
jle
ret
adc
and
sti
jne
sahf
add
cmp
lret
mov
rdpmc
pop
bound
sub
push
add
lods
clc
and
mov
jns
clc
fs
test
negb
and
jns
rcrl
pop
inc
lcall
sbb
shrb
sbbb
or
xchg
push
ja
fsubrl
test
lret
stc
call
dec
bound
fists
inc
add
mov
jmp
ret
je
add
cmp
hlt
lods
and
fs
and
jp
arpl
jne
jns
data16
mov
addr16
pop
push
xor
xchg
in
dec
sbb
sub
cmp
adc
mov
divl
popf
sbb
xor
bound
inc
fcoms
mov
clc
mov
addr16
int3
cli
jl
jnp
xchg
ss
fs
es
adc
sub
xchg
lods
das
mov
mov
rcll
pop
pop
cmp
ds
dec
pop
dec
inc
add
testb
ss
sbb
iret
xchg
pushf
cli
mov
xchg
pushl
and
jno
arpl
xorb
jno
and
aad
jne
mov
inc
sti
mov
ret
bound
cmp
mov
push
or
movb
xchg
bnd
xor
add
inc
sbb
lods
cmp
mov
lea
loope
cld
xor
mov
out
mov
jp
dec
push
adc
mov
mov
mov
push
shlb
push
xor
outsb
pushf
insb
mov
movsb
xchg
add
and
insb
out
mov
mov
dec
or
adc
popf
scas
xor
out
ss
mov
cmp
xchg
loope
sarl
xchg
push
xchg
jp
jle
inc
scas
inc
sub
movsb
adc
hlt
jne
xchg
loopne
add
imul
ss
loope
mov
int3
call
mov
ret
mov
sbb
incb
and
out
and
loop
push
and
loop
inc
loope
xor
aaa
into
inc
mov
repnz
stos
jnp
inc
fdivrs
sbbb
sarb
sub
mov
bound
cmp
or
es
cmpsb
jo
js
push
mov
icebp
imul
into
dec
popf
and
and
jp
cld
xor
nop
cld
jecxz
fdivrs
call
lret
andb
pop
push
and
cli
mov
fmull
mov
mov
addr16
mov
mov
xor
lahf
push
jbe
insb
inc
cwtl
mov
rorl
and
jb
dec
push
mov
addr16
mov
xchg
pop
jmp
jnp
arpl
imul
sahf
gs
cmpb
xchg
push
sbb
test
xor
ss
bound
sahf
inc
in
and
sbb
sub
clc
lcall
in
es
mov
fwait
add
cs
mov
adc
mov
sbb
mov
das
jae
jmp
xchg
movsl
mov
imul
fimuls
mov
jae
jbe
jo
movsl
sti
cmp
push
cltd
xchg
ds
jp
and
cld
mov
mov
iret
mov
pop
or
scas
push
xchg
adc
mov
into
cld
int3
add
mov
ja
and
lret
xor
into
dec
call
rorl
sub
int3
popf
mov
adc
data16
fs
sub
pop
hlt
cld
je
and
mov
mov
push
cmp
cs
mov
mov
cmp
ret
das
mov
ret
push
xchg
mov
mov
and
or
dec
aas
jnp
pushf
leave
mov
fstl
inc
lret
adc
movsl
push
mov
int3
je
mov
aas
repnz
repz
xor
dec
or
int3
imul
faddl
lods
dec
and
add
dec
mov
addl
arpl
sar
rcr
xchg
hlt
xor
mov
enter
mov
repz
cwtl
mov
xchg
adc
jbe
in
cs
push
insb
imul
adc
dec
and
push
mov
dec
and
jo
outsb
sti
jno
mov
pushf
push
inc
and
inc
lcall
inc
aaa
mov
push
xchg
gs
loopne
call
daa
mov
push
push
pop
xchg
mov
lret
jl
rolb
cmp
lock
mov
mov
lahf
or
test
enter
rorl
iret
dec
es
lods
jmp
xor
cltd
pop
jns
fisubs
cld
and
push
test
out
call
decl
negb
insb
fstl
adc
jnp
fnstcw
clc
sub
clc
in
mov
inc
mov
push
xor
fcoml
jno
inc
push
aaa
inc
popa
cmp
jecxz
dec
int3
mov
cld
scas
adc
jle
dec
negl
push
inc
cld
sahf
sbb
and
push
pop
pop
or
add
repz
mov
fcoms
test
dec
mov
jge
jnp
dec
call
mov
push
and
adc
mov
movsb
sub
mov
inc
cmpsl
cwtl
scas
xor
jnp
fcoml
stos
test
pusha
scas
in
into
int3
mov
mov
out
les
lea
shrb
les
cld
mov
sbb
outsb
fdivp
xor
push
testb
repnz
push
scas
xlat
cmpsb
sub
mov
call
jmp
out
out
xchg
ja
xchg
je
popf
stos
int3
mov
jmp
sub
enter
into
cli
test
or
or
mov
clc
mov
pop
inc
stc
inc
cmp
fs
jle
repnz
mov
cltd
mov
loop
cld
fdivs
pop
cmp
shll
in
test
mul
or
xchg
adc
push
lods
and
xor
mov
lock
jno
fists
inc
subb
inc
add
mov
mov
mov
mov
xchg
jnp
cmp
mov
jge
mov
jae
jmp
and
jb
cs
enter
mov
xchg
cmp
subb
out
xchg
xchg
sbbl
out
out
push
loope
dec
push
int3
mov
rcr
sbb
cltd
jo
std
or
add
mov
repz
xor
jno
aaa
and
adc
jbe
add
divl
ja
and
hlt
pop
scas
lea
xor
pop
sub
cli
roll
jp
xor
add
push
jno
stc
inc
cmp
sub
push
mov
sub
lret
std
ss
adc
imul
mov
shlb
sahf
mov
pop
imulb
pop
notl
popf
mov
mov
mov
mov
add
mov
loop
jmp
fistl
mov
scas
mov
cmc
add
jne
mov
movsl
ds
int3
mov
jg,pt
mov
jl
cs
out
aaa
inc
repnz
ficomps
repz
push
jno
xchg
cmp
js
xchg
adcl
das
shlb
mov
mov
aam
cli
xor
in
hlt
mov
movsl
cltd
sti
ficomps
shll
out
cmp
lds
sub
push
lods
popa
movsb
mov
out
hlt
lods
aad
cmp
and
out
mov
mov
xchg
cmp
xor
dec
mov
cld
push
in
cmp
jnp
xchg
movsb
arpl
loope
inc
xor
rolb
movsb
aad
js
sub
jmp
mov
mov
xor
das
xor
push
cli
lahf
push
add
dec
out
pop
lods
cmp
jae
and
icebp
popf
jo
push
dec
sbb
addr16
pushf
add
pop
jo
sub
push
lock
lods
lret
and
xchg
loop
sbb
popf
fnstenv
pop
dec
sbb
stos
xchg
mov
mov
mov
int3
push
call
push
mov
jbe
in
ja
push
mov
in
in
test
js
cs
outsl
popa
loopne
inc
push
fs
adc
inc
mov
fisubl
mov
add
and
mov
rcrw
xchg
ss
cmp
cwtl
test
enter
and
xchg
lret
xlat
stc
addr16
enter
mov
and
mov
ja
je
mov
sub
mov
dec
cmp
inc
idiv
icebp
jp
pop
ret
push
clc
jne
pushf
xchg
cmp
rorb
loop
xchg
adc
outsb
pop
dec
mov
jnp
in
scas
xor
faddl
mov
xchg
inc
adc
xchg
and
mov
mov
mov
inc
lods
out
mov
mov
aam
push
pop
sti
jb
loop
std
mov
movsb
xchg
cld
xchg
xchg
ljmp
pop
and
dec
ret
bound
inc
inc
mov
xchg
sub
add
mov
inc
push
cmc
xchg
push
hlt
pop
dec
lea
or
dec
dec
fdivrl
dec
jl
and
repz
and
adc
push
dec
sub
movsb
or
std
inc
jo
daa
sti
pop
push
lret
enter
push
fists
adc
subb
scas
and
pop
cmp
shrl
fwait
xchg
push
mov
mov
adc
push
inc
sub
mov
mov
inc
mov
xchg
xchg
repz
mov
rcr
insb
xor
cld
add
ss
lcall
mov
sbb
outsb
mov
push
jno
mov
add
mov
mov
adc
mov
ret
push
adc
mov
pop
sti
insb
ljmp
jns
dec
xor
sarb
mov
jnp
inc
dec
cmc
dec
push
inc
xorl
sbb
xchg
lahf
xlat
loop
int3
sub
cmp
cmp
dec
dec
jge
testb
xor
sub
rcrb
inc
jns
ljmp
lea
add
rorb
cmp
adc
push
testb
lea
fcomip
mov
add
and
test
sti
xor
js
xor
or
mov
sub
pop
popf
jp
dec
sub
sub
mov
xchg
sti
sahf
pushf
mov
in
stos
xor
loop
std
stc
mov
scas
lcall
lcall
xor
stos
pop
mov
pushf
xor
mov
lcall
into
leave
mov
nop
fnstcw
aam
inc
xor
stos
sbb
xor
inc
pop
dec
int3
in
mov
lret
cmpsb
es
push
sarl
stos
sbb
popf
jo
jg
pushf
stc
pop
jno
mov
dec
sbb
inc
mov
int3
inc
clc
aam
enter
movsl
cmp
cwtl
sbb
dec
or
rcrl
ficompl
int3
mov
mov
push
enter
mov
lods
je
xchg
sub
jnp
push
inc
dec
in
je
ret
pop
popa
shrb
sti
mov
in
ds
sub
mov
ss
mov
nop
jbe
fs
lods
pop
and
stc
lock
clc
cld
out
add
insb
xor
jbe
in
mov
xchg
mov
sahf
mov
in
subb
push
cmp
repnz
dec
mov
repnz
mov
push
mov
and
mov
pop
or
cld
cltd
xor
dec
and
out
mov
add
rclb
push
pop
cmp
xlat
jb
cld
pushf
xor
out
je
rcrl
sub
xchg
movaps
ss
pusha
adcb
sub
or
mov
es
movsb
or
cmp
shl
pop
ja
inc
mulb
mov
js
xchg
scas
dec
cld
leave
xchg
mov
xor
xor
into
xchg
popf
xrelease
jnp
arpl
dec
inc
das
push
int3
add
mov
mov
inc
flds
inc
push
mov
loop
bound
aam
and
adc
leave
or
jnp
xchg
mov
sub
push
push
cmpsl
or
andb
mov
mov
push
sahf
jnp
mov
imul
ss
jo
and
out
stc
push
push
std
and
sbb
mov
cmc
insl
push
addb
adcb
sub
jp
add
push
leave
lret
scas
clc
aas
mov
nop
jl
and
pushf
mov
int3
data16
pop
inc
adc
pop
inc
mov
pmaxub
cld
lahf
mov
jae
jge
xor
mov
pop
lea
xchg
pop
mov
xchg
ror
jmp
and
dec
mov
hlt
outsl
fs
jp
js
cltd
daa
mov
call
push
sub
mov
and
cmpsl
mov
inc
cmp
or
lahf
sahf
inc
aam
jl
std
mov
mov
orl
loop
pop
ljmp
ret
push
fdivr
fnstsw
mov
out
xor
push
adcb
pop
lahf
jl
inc
adc
adc
call
dec
fmul
test
fdivs
out
fs
lods
std
and
add
mov
push
push
adcb
mov
cmp
cmp
xorb
sar
dec
xchg
jo
es
movsb
inc
jo
adc
jbe
xchg
loope
sbb
xchg
in
adc
enter
pop
and
and
jge
cmp
inc
cwtl
jo
or
test
jb
mov
or
xor
pop
mov
movsb
lea
xchg
shl
outsb
std
inc
adc
jo
ss
sub
clc
das
roll
dec
push
into
xchg
lea
and
sti
inc
push
mov
mov
jp
mov
out
push
or
sub
mov
mov
in
shlb
data16
and
xchg
leave
push
and
add
lcall
lret
int3
lods
ja
aam
cmp
pushf
mov
push
addr16
push
add
out
xor
push
das
xor
adc
sub
add
or
popf
and
fisubs
sub
mov
fdivl
outsb
rorl
mov
adc
inc
dec
mov
jmp
shll
dec
cs
out
lea
mov
jno
xchg
add
inc
push
out
int3
sub
dec
nop
fcompl
xor
sbb
xchg
out
jge
mov
xchg
and
xor
xor
lret
cmp
inc
inc
dec
xchg
shrb
clc
jmp
mov
or
ret
jnp
cltd
cmp
xchg
add
mov
dec
fwait
push
fisubrs
push
sahf
mov
in
push
or
aaa
sub
pop
push
inc
push
or
mov
bound
sub
dec
jo
insb
scas
loope
inc
inc
or
mov
dec
frstor
lock
mov
or
pop
xchg
push
stc
inc
mov
dec
fisttpll
jge
mov
cli
movsl
out
call
das
dec
push
in
xchg
or
jmp
js
ss
std
test
jns
in
es
test
fsubs
ss
bound
std
dec
inc
test
dec
repz
push
xor
mov
daa
push
aam
push
xchg
mov
data16
sub
and
mov
scas
mov
xlat
mov
pop
push
xchg
popf
mov
push
fdivs
cwtl
jnp
mov
int3
rolb
jo
shl
mov
push
ja
sbb
cld
movsl
jp
xor
jo
or
mov
pusha
and
mov
push
pop
insb
das
mov
arpl
ror
xchg
test
pop
repz
xchg
add
mov
les
sub
xor
out
dec
lods
ljmp
sbb
add
mov
and
jmp
mov
push
mov
mov
repz
jp
mov
pop
push
add
das
call
jb
xor
mov
push
cmp
cmp
push
mov
loop
clc
lea
js
sahf
jno
add
xchg
in
sbb
test
mov
dec
mov
fisubrl
popf
mov
inc
sub
popa
repz
int3
clc
sarb
das
shl
mov
jo
je
push
dec
lcall
and
dec
idivb
xchg
or
xchg
lea
rcrl
movzbl
dec
mov
cwtl
stc
mov
cmpsb
mov
mov
repnz
daa
mov
fisubs
mov
xchg
je
insl
in
cmp
sbb
inc
loop
inc
push
call
in
lock
push
cmp
mov
shl
sbb
xor
les
mov
bound
or
inc
lcall
mov
xor
mov
mov
and
xchg
push
fs
inc
xor
fldl
bound
ja
xchg
movsl
dec
xor
mov
stc
popa
inc
adc
pop
jb
xchg
sub
inc
enter
inc
xchg
aad
jae,pt
mov
aaa
outsb
mov
jl
lods
pop
jb
stc
adc
cmp
mov
jle
mov
mov
repz
jl
cld
mov
je
and
pop
aad
call
std
xchg
jle
in
orb
dec
and
mov
mov
dec
dec
and
ljmp
pop
icebp
sub
jno
cmp
fistl
dec
lock
mov
popf
ljmp
mov
stos
inc
and
jl
add
mov
loop
in
xor
inc
mov
ss
in
outsb
xor
add
xor
jge,pn
jb
xchg
sub
stc
cmp
into
add
xor
es
cmc
ja
push
cmpsb
lea
nop
sub
and
ds
jle
popf
jo
aas
fs
mov
aaa
push
mov
dec
loopne
push
jbe
push
jo
jge
hlt
mov
mov
mov
jno
outsb
divb
ret
mov
cld
addr16
push
mov
cmp
pop
call
mov
cmp
fcoms
sti
aaa
mov
std
dec
aam
sub
xor
ja
add
dec
mov
out
cmc
decb
cli
inc
aam
jp
inc
sti
jnp
sub
pop
cwtl
mov
loopne
jge
mov
cld
js
mov
addb
bound
stc
pop
xor
jl
ss
nop
loopne
in
inc
pusha
mov
push
mov
and
mov
inc
mov
into
mov
cmp
lahf
dec
lock
cmp
movsb
xor
dec
fsubrp
and
test
adc
in
sbb
dec
movsb
and
pop
dec
sub
add
mov
nop
test
mov
cltd
mov
outsb
notb
and
mov
push
cmp
lret
clc
mov
loopne
pusha
mov
adc
sahf
pop
and
push
mov
mov
xorl
mov
mov
mov
cmp
mov
in
fs
push
and
popf
xor
cli
mov
jo
dec
mov
inc
push
xchg
into
pusha
aad
std
xchg
popa
clc
push
lock
jo
lcall
cs
mov
lret
das
dec
sti
fwait
inc
movsb
mov
xor
mov
push
mov
lock
cli
loope
and
enter
shl
sub
pop
push
ss
add
das
daa
cmpsl
hlt
or
xor
push
cmp
push
lret
jno
repz
xor
cld
push
enter
xchg
ja
outsb
mov
lcall
mov
inc
and
les
mov
xchg
out
cwtl
outsl
pop
push
xchg
addl
into
call
jo
faddp
xchg
stc
jne
sarb
es
mov
jmpw
dec
or
xchg
push
clc
jmp
mov
mull
push
xchg
inc
sbb
ss
add
mov
rolb
xchg
in
pop
aaa
xchg
inc
outsb
inc
push
lcall
xor
lea
es
sbb
nop
ds
mov
ja
addr16
loop
shll
loopne
xor
movsb
mov
xchg
cs
movsb
mov
shlb
lods
or
inc
in
stc
push
xor
adc
inc
outsb
push
inc
repnz
cmp
mov
mov
mov
scas
inc
sub
in
xor
xor
dec
mov
sub
cmp
ljmp
mov
mov
xchg
xchg
lods
stc
mov
cmp
ret
lea
test
jl
mov
mov
fs
repz
mov
aam
pop
mov
push
mov
sbb
inc
mov
ljmp
in
loop
sub
dec
mov
mov
push
push
movsb
xchg
js
scas
mov
nop
test
inc
arpl
adcb
mov
sbb
hlt
xor
mov
std
iret
adc
adc
icebp
arpl
sbb
mov
xchg
stos
aaa
cmpsb
test
ss
and
mov
push
pop
clc
adc
mov
int3
stc
cld
push
adc
mov
or
add
adc
sub
xor
js
cmp
call
cmp
adc
mov
and
pushf
push
pop
lahf
insb
jecxz
mov
add
ret
mov
aam
inc
mov
push
cwtl
jno
pop
inc
lock
das
aaa
jle
push
xchg
lahf
adc
adcb
inc
dec
cld
popf
fidivs
add
inc
out
out
mov
xor
pop
ret
ret
ficoml
movsl
popf
mov
loop
call
mov
adc
cltd
dec
orb
cmc
clc
int
mov
xor
stc
outsb
push
rclb
inc
cld
mov
dec
hlt
movb
insb
mov
dec
add
mov
out
push
pop
dec
sub
mov
xor
outsb
scas
mov
pop
xchg
sbb
and
lock
mov
adc
lea
mov
jae
inc
arpl
lcall
cltd
and
and
mov
push
popa
add
shrb
int3
fsts
bound
mov
pop
stos
icebp
push
pusha
and
ljmp
mov
inc
cmc
sub
or
mov
pop
inc
mov
mov
add
ficompl
pop
sub
jp
sbb
lods
or
test
das
xchg
dec
ret
xchg
orl
cmp
xchg
repnz
repz
xor
lret
jnp
decl
fdivl
mov
sbb
es
js
push
lahf
sub
xor
shll
in
shlb
rol
mov
pop
js
push
loop
int3
push
call
lods
ficoml
int3
mov
jnp
loop
int3
pop
jmp
xchg
roll
ljmp
sub
inc
fcmovbe
lods
mov
inc
cli
mov
dec
popa
pushf
mov
clc
inc
mov
stos
dec
lcall
mov
sub
data16
jge
push
pushf
call
and
stc
xorb
xchg
repz
cmp
and
loopne
xchg
mov
dec
mov
push
lcall
mov
pop
jae
push
arpl
fnsave
sbb
inc
mov
lret
popa
lock
dec
bound
in
sbb
dec
rclb
pop
fnstsw
xor
mov
add
stc
push
inc
sbb
shlb
lods
in
adc
jmp
js
pop
mov
push
ss
pop
ss
out
cmp
xchg
add
sub
mov
jecxz
rclb
loope
out
out
aam
call
shrl
xchg
xor
push
std
xchg
jno
jne
sub
cmp
jecxz
adc
ret
std
out
call
ljmp
ss
imul
cmp
xchg
and
push
out
xchg
xor
shlb
mov
int3
sbb
fstpl
movsb
xorl
cmc
inc
out
jmp
aaa
enter
xchg
pop
push
sub
pop
in
mov
jno
pop
cmp
loope
push
jo
add
in
movsl
or
sar
fs
lods
jns
out
adc
jae
es
icebp
ljmp
sub
pop
or
xor
mov
add
push
push
pushf
cmpb
fsubs
lahf
inc
xor
add
aaa
mov
push
add
adc
inc
insb
aam
xchg
inc
add
je
jge
mov
dec
adc
fwait
mov
ficoms
pop
in
shll
hlt
push
cld
xor
adc
or
xor
mov
jbe
ret
mov
fwait
or
xchg
dec
dec
push
jecxz
mov
lret
movsb
mov
lahf
enter
add
mov
mov
cmp
mov
fld
and
fcompl
shlb
scas
mov
sbb
loope
fcmovu
mov
xchg
sub
mov
int
adc
push
push
les
xchg
in
fisubl
inc
pop
pop
mov
push
sub
push
mov
ret
push
loop
into
jb
add
add
gs
jns
pop
or
int3
mov
loopne
jae
inc
fdivrs
cwtl
stc
dec
add
and
mov
mov
out
sbb
sahf
xchg
and
push
mov
xchg
test
jne
mov
mov
push
sbb
aam
push
cld
loopne
js
and
sub
pop
outsl
and
dec
xchg
test
adc
lahf
push
push
gs
push
popl
daa
imul
ljmp
xor
push
and
jo
popf
imul
mov
inc
mov
out
es
aam
shlb
inc
es
jne
push
pop
mov
jmp
xor
loop
xchg
and
std
enter
lret
gs
mov
into
pop
mov
das
loop
test
xchg
mov
ds
daa
ss
push
lahf
push
mov
inc
cld
mov
adc
iret
push
push
pop
in
adc
adc
pop
std
lret
jo
call
add
orl
popf
shl
xor
push
mov
movsb
lds
jmp
pop
adc
xchg
mov
add
xor
pop
in
aaa
dec
ja
aaa
inc
hlt
and
inc
mov
les
push
jmp
inc
mov
pushf
mov
mov
push
into
clc
mov
sarb
dec
mov
jne
icebp
repnz
xor
jb
mov
jae
mov
mov
lods
mov
mov
out
mulb
les
mov
pop
aaa
dec
into
mov
lea
js
fimuls
jl
push
incb
jge
mov
repnz
push
jb
mov
or
data16
jb
lock
jo
inc
popf
cmpsl
cld
sub
add
dec
xor
mov
mov
dec
xor
lret
cmp
hlt
mov
push
jnp
nop
clc
sub
xchg
stc
and
mov
pop
inc
mov
add
jb
repnz
xor
pop
mov
mov
xor
repnz
xor
add
jno
mov
lods
jbe
cmp
repnz
adc
cmpsb
stc
repz
jae
cli
lock
push
mov
mov
loopne
push
sub
add
mov
cli
movsl
jne
mov
or
mov
mov
mov
lcall
or
cmp
int3
jo
mov
jp
in
mov
sub
in
jmp
shrl
mov
xor
xor
aam
mov
je
jnp
mov
jns
push
lods
sti
lea
clc
push
mov
popa
adc
shlb
cmc
pusha
out
cwtl
pop
and
int3
stc
jmp
jnp
fs
mov
mov
cmp
xchg
mov
lret
mov
push
je
fdivrs
mov
dec
ds
aas
int3
std
push
cwtl
mov
lret
imul
mov
lock
mov
mov
cmp
push
icebp
or
testb
idiv
add
push
adc
pusha
and
xchg
mov
jnp
jno
in
jbe
call
xchg
sti
sub
clc
mov
cld
sbb
cmp
or
in
lock
stos
xor
mov
sti
pop
mov
jb
xchg
or
and
mov
mov
cmc
popa
dec
cli
inc
mov
movsl
sti
dec
jl
push
repz
clc
sbb
pop
pushf
testb
mov
jp
sub
mov
cwtl
adc
rcrl
sahf
pop
lahf
cmp
dec
mov
in
movsb
jge
sbb
mov
and
sti
sub
xchg
and
into
ss
xchg
les
mov
repnz
jb
repz
lock
jo
nop
jno
inc
movsl
jbe
shlb
mov
mov
jp
dec
mov
and
jg
inc
jl
std
dec
jge
and
mov
push
clc
neg
xor
inc
ja
cmp
je
fidivrl
loop
jnp
mov
stc
jo
jmp
cwtl
cld
cld
jo
std
in
stos
repnz
jae
mov
iret
bt
negl
cli
jp
jo
mov
xor
incl
mov
std
lahf
jge
push
mov
jo
xchg
testb
aaa
and
xor
js
and
mov
mov
jl
push
jge
and
jb
push
jae
lock
jno
divb
testl
mov
xchg
clc
sub
jmp
in
cmp
or
repz
jno
ss
mov
repz
lea
js
cmp
dec
mov
cli
popf
jne
inc
movsb
jo
mov
jne
outsb
mov
in
mov
mov
jb
jp
lock
dec
jo
cmc
xchg
jnp
rep
js
cmp
lcall
pushf
mov
sub
fnstcw
jnp
leave
add
dec
jl
std
dec
jge
sub
jb
and
xchg
je
cli
cli
adc
cmp
cs
xor
and
movsl
aaa
stc
pop
mov
lcall
repz
cmp
and
rcrb
mov
pushf
repnz
repz
loop
push
repnz
jns
in
popa
dec
jnp
clc
fists
and
sbb
iret
cmp
movsb
adc
mov
lea
xchg
clc
repz
xchg
ds
cld
cmp
dec
jge
mov
adc
jo
dec
add
testl
xor
jle
jg
cld
adc
and
ljmp
idivb
sub
mov
push
push
xor
je
sbb
clc
sub
sbb
adc
xor
cs
push
cmp
pop
out
and
xorb
aad
and
sub
mov
enter
fdiv
mov
je
jge
jge
jge
jp
dec
outsb
fdivl
sub
call
or
fdivrl
jbe
hlt
ja
inc
jp
nop
mov
add
std
cld
mov
and
xchg
xor
js
jo
jle
popa
notb
ja
mov
cmp
jp
stos
jnp
clc
sub
sub
inc
aas
mov
repnz
jo
jo
cwtl
jmp
les
mov
and
es
mov
jp
push
jae
jnp
sahf
ja
hlt
daa
jecxz
lods
jne
cli
sti
sub
push
adc
adc
xor
adc
es
mov
sbb
mov
xchg
xchg
jp
lret
mov
cli
cmp
lock
adcb
test
sbb
jle
mov
jl
mov
aaa
inc
lret
jae
xchg
stos
stc
cmp
or
adc
mov
out
cwtl
xchg
mov
and
sti
pushf
mov
xorb
xorb
and
scas
aaa
movsb
mov
adc
jns
mov
mov
cwtl
push
xchg
movsb
cld
stc
or
ljmp
adc
jbe
inc
jle
push
xor
jo
mov
dec
add
add
jae
add
fs
pop
add
dec
jae
aaa
add
add
xor
add
outsb
jno
add
cmp
jne
jo
js
inc
add
outsb
add
add
add
add
add
add
ja
js
xor
add
add
add
add
jno
dec
add
dec
add
add
outsl
add
add
add
cmp
add
add
add
xor
add
add
add
xor
add
add
push
addr16
add
dec
dec
pop
add
add
add
xor
add
add
add
xor
add
pop
add
inc
bound
push
dec
cmp
xor
push
add
dec
add
add
add
popa
inc
add
jb
add
inc
bound
add
popa
add
push
add
push
add
push
add
inc
add
xor
add
push
dec
add
ss
pop
add
inc
add
add
push
outsl
dec
jns
push
add
cmp
insb
add
outsl
ja
inc
outsb
jae
add
add
add
add
add
xor
add
add
dec
inc
insl
gs
imul
jns
push
push
add
dec
add
jo
add
jo
pop
aaa
addr16
jns
xor
add
add
jae
add
add
jp
inc
cmp
push
add
add
push
add
add
je
inc
add
jo
add
dec
xor
add
add
jae
add
outsb
add
dec
pop
add
add
insl
add
jo
jns
add
add
pop
cmp
ja
add
add
js
inc
add
dec
add
inc
add
push
js
inc
xor
xor
add
dec
add
add
xor
dec
add
push
add
push
add
cmp
jns
add
inc
add
add
add
push
add
push
data16
inc
add
add
add
bound
add
add
add
add
inc
add
push
add
add
arpl
add
add
aaa
dec
je
add
add
add
jno
add
insl
add
add
xor
dec
outsb
add
xor
add
add
xor
imul
add
add
jp
add
js
add
dec
dec
add
jns
add
jo
xor
inc
add
push
dec
add
add
add
insb
jae
add
add
push
cmp
add
add
inc
pop
xor
aaa
jo
inc
add
add
dec
add
add
popa
add
cmp
push
add
add
data16
add
jbe
cmp
add
js
add
inc
add
xor
add
add
xor
add
outsb
dec
add
push
cmp
add
xor
jne
cmp
add
pop
jno
inc
add
add
inc
dec
inc
dec
add
add
pop
inc
add
dec
dec
add
add
arpl
add
inc
dec
add
insb
add
aaa
je
insl
add
inc
push
add
add
add
add
add
push
add
add
add
jp
arpl
outsb
add
add
xor
popa
add
arpl
add
jno
dec
add
add
add
je
xor
add
jp
add
add
add
add
add
add
add
jno
ss
dec
inc
add
push
add
js
add
popa
xor
push
push
add
add
add
add
add
push
dec
add
add
gs
xor
add
add
add
inc
jo
inc
pop
add
jno
add
add
add
popa
addr16
add
push
bound
add
add
imul
add
add
jp
dec
push
xor
push
add
add
outsl
imul
add
add
add
dec
add
add
inc
add
add
inc
add
xor
add
push
add
push
add
add
pop
inc
fs
add
add
xor
add
push
dec
add
imul
add
add
popa
add
add
xor
push
add
add
add
ja
add
add
addr16
pop
jb
add
add
inc
add
add
dec
dec
add
xor
add
add
jns
add
add
add
arpl
add
add
dec
add
push
add
xor
insl
add
add
outsb
pop
dec
add
add
pop
add
add
arpl
add
jae
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
dec
dec
add
add
jp
add
inc
cmp
addr16
push
bound
push
add
add
gs
addr16
add
add
insl
add
add
add
add
inc
add
inc
add
add
jb
data16
dec
add
add
add
inc
popa
arpl
add
add
jno
add
add
dec
ss
add
push
push
add
jno
add
add
add
jbe
add
xor
inc
add
jns
dec
add
push
add
jno
add
add
jbe
add
jp
add
xor
add
arpl
add
dec
add
add
add
dec
add
add
add
dec
dec
add
push
add
add
push
add
push
add
add
add
dec
add
add
jp
add
jo
add
add
dec
push
inc
xor
outsl
jae
dec
add
xor
push
add
add
jns
xor
jbe
add
xor
jbe
add
jns
dec
add
outsb
jo
add
add
push
add
push
add
push
inc
add
add
push
push
xor
add
inc
add
add
insl
inc
add
arpl
push
add
jb
add
cmp
inc
add
add
ja
fs
add
add
add
js
dec
pop
add
add
add
add
aaa
ja
add
je
imul
jo
imul
add
add
add
add
add
add
fs
push
aaa
xor
add
add
add
add
cmp
add
push
add
insl
jno
insb
data16
dec
add
add
add
add
add
imul
add
add
inc
add
xor
jbe
addr16
add
insl
push
dec
push
add
add
add
add
inc
add
add
fs
add
add
add
push
dec
add
gs
outsb
dec
inc
jae
imul
cmp
data16
add
add
push
push
dec
pop
push
add
add
dec
cmp
add
add
ja
xor
jne
add
add
xor
jb
add
add
inc
add
add
add
bound
add
dec
add
jp
inc
pop
jbe
jbe
imul
add
add
dec
add
dec
add
xor
add
add
add
add
push
ja
add
add
add
add
js
add
add
add
insl
insl
add
jo
add
dec
add
add
imul
add
inc
add
add
imul
add
inc
inc
imul
inc
jae
add
push
add
add
imul
push
add
add
push
add
add
inc
add
dec
dec
add
xor
add
push
dec
push
add
dec
dec
add
xor
add
add
xor
add
inc
add
pop
add
add
pop
add
add
add
push
push
push
data16
jns
pop
add
imul
add
add
add
add
dec
add
jb
xor
push
add
add
add
add
push
outsb
inc
add
imul
add
jo
outsb
inc
add
dec
inc
add
add
add
dec
ja
cmp
add
add
jae
add
add
aaa
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
pop
jae
dec
add
xor
add
add
pop
push
add
inc
add
add
add
je
push
add
add
dec
add
xor
add
add
add
add
je
push
add
outsb
aaa
add
add
add
add
add
add
add
inc
insl
add
add
jne
xor
jno
add
xor
jne
add
add
insl
push
add
add
dec
xor
add
add
add
push
add
gs
push
add
add
push
push
add
add
add
dec
add
add
add
add
add
cmp
add
imul
cmp
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
dec
add
ja
add
add
add
add
fs
xor
add
add
add
inc
add
push
inc
add
add
add
add
add
push
add
xor
dec
dec
dec
inc
add
inc
fs
add
bound
add
add
add
insl
add
xor
add
push
add
add
pop
dec
arpl
inc
jo
dec
cmp
add
add
push
popa
je
add
inc
add
add
add
add
add
bound
xor
imul
aaa
add
push
add
add
jp
dec
add
jp
xor
add
add
dec
add
xor
dec
add
jne
add
aaa
add
inc
add
add
add
push
insb
add
add
inc
add
add
add
xor
add
data16
add
add
add
dec
add
add
add
dec
add
add
add
push
dec
arpl
cmp
push
inc
pop
add
add
add
xor
push
dec
add
pop
add
add
outsl
add
outsl
insb
popa
inc
add
add
add
inc
add
add
jo
add
dec
jp
add
dec
add
add
add
add
insb
push
aaa
arpl
add
inc
add
push
inc
xor
push
add
add
add
inc
addr16
add
add
inc
add
add
add
add
fs
jae
add
add
add
add
inc
add
add
inc
xor
insb
add
add
add
add
add
add
add
dec
dec
js
add
arpl
add
outsl
add
push
insb
add
xor
add
add
add
dec
add
jbe
je
xor
add
add
arpl
jp
add
inc
inc
add
add
insl
insl
jb
add
add
jp
add
add
add
jb
dec
add
imul
outsl
add
add
pop
outsl
xor
add
jp
add
jbe
add
jno
dec
outsb
insl
jo
jns
fs
add
xor
outsl
add
add
add
push
add
push
jo
outsb
add
add
jo
inc
add
add
add
add
push
add
add
add
add
add
add
push
arpl
jne
add
add
push
inc
add
add
inc
add
addr16
jbe
outsl
add
dec
jno
xor
pop
add
popa
jp
add
add
add
add
outsl
add
dec
add
push
add
jae
jp
add
add
jo
outsb
add
add
push
dec
add
add
add
push
add
imul
add
add
add
add
inc
inc
add
add
dec
dec
push
add
add
inc
add
add
add
outsb
add
push
insb
add
arpl
inc
add
add
add
pop
je
add
cmp
add
add
add
add
add
add
push
jno
add
add
xor
add
add
add
add
add
add
add
add
add
inc
pop
inc
push
ja
add
add
push
add
add
inc
add
add
push
jne
add
inc
dec
ja
add
bound
add
add
dec
add
jbe
insb
push
cmp
add
push
ja
jo
add
imul
pop
inc
xor
add
add
addr16
add
add
add
add
cmp
inc
gs
add
add
add
push
xor
dec
add
add
add
add
inc
cmp
add
jb
add
add
add
add
dec
add
add
add
jbe
push
add
add
dec
add
push
push
push
push
add
add
dec
push
insl
add
add
push
add
add
insl
jno
imul
add
jo
add
add
add
push
add
add
add
ss
push
dec
add
dec
js
push
imul
insl
add
jno
add
push
add
add
add
add
dec
add
add
add
jp
add
add
add
add
inc
add
add
pop
jb
add
add
dec
add
jb
add
insb
add
inc
add
outsb
add
add
bound
add
jae
dec
add
add
jae
add
js
push
add
add
inc
add
inc
add
add
outsb
pop
add
dec
je
pop
dec
add
add
add
add
add
add
add
add
jbe
add
add
jb
add
add
push
inc
ss
insl
jns
jae
inc
imul
add
add
add
dec
add
add
add
add
add
insb
dec
add
add
ja
xor
add
add
jne
add
inc
add
add
add
add
add
dec
add
bound
inc
add
add
outsb
inc
add
add
add
addr16
inc
jb
add
add
dec
add
add
jo
add
push
add
add
inc
imul
push
jb
jp
inc
imul
add
jp
add
push
jne
add
add
push
inc
xor
add
add
inc
add
add
push
add
add
add
add
jae
add
add
data16
add
add
add
addr16
add
dec
add
inc
add
cmp
add
add
add
add
add
add
dec
add
add
push
add
dec
add
add
ja
add
add
add
dec
jb
add
push
add
add
add
cmp
dec
add
dec
add
add
add
xor
push
dec
add
add
push
dec
add
inc
push
push
add
jbe
imul
add
insb
add
jns
add
cmp
add
inc
add
add
add
add
imul
jb
add
push
add
dec
aaa
add
add
add
add
add
add
dec
xor
js
js
inc
add
add
add
add
push
push
xor
add
dec
jae
pop
dec
add
add
ss
add
add
data16
aaa
add
add
inc
push
add
insl
add
add
push
data16
pop
add
add
add
jns
gs
arpl
add
add
data16
cmp
add
push
add
pop
add
pop
add
add
inc
push
inc
add
add
outsl
add
add
add
add
add
inc
dec
outsl
add
add
push
add
push
add
add
inc
add
cmp
xor
add
jne
add
add
inc
add
ja
add
add
add
add
add
dec
inc
push
xor
add
add
add
add
add
add
add
add
add
dec
js
add
dec
insl
add
pop
add
dec
add
add
add
push
push
add
add
add
add
add
add
add
add
bound
add
add
add
add
pop
add
add
add
dec
dec
js
add
add
add
inc
add
add
outsb
add
add
add
push
add
add
add
add
outsl
add
fs
add
add
jb
add
add
popa
add
add
data16
add
add
add
add
add
add
add
add
imul
add
jb
xor
push
outsl
push
push
add
jbe
push
add
aaa
xor
push
insl
jae
xor
dec
push
add
inc
push
push
add
add
inc
add
add
inc
add
push
add
jae
add
cmp
add
add
add
add
add
add
pop
cmp
add
add
inc
cmp
insl
inc
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
add
inc
xor
xor
imul
add
add
add
add
add
xor
push
js
xor
jb
add
push
dec
cmp
je
add
add
add
inc
dec
xor
add
data16
pop
dec
add
add
add
popa
add
add
push
push
inc
add
xor
add
dec
add
add
add
add
push
add
add
inc
push
add
add
add
add
aaa
add
inc
jp
add
xor
add
xor
add
add
outsb
add
xor
inc
add
xor
add
add
add
add
ja
add
inc
add
imul
add
add
pop
add
add
dec
add
add
add
add
pop
add
add
add
add
push
aaa
add
arpl
inc
xor
add
add
xor
cmp
dec
xor
jns
push
add
add
ja
add
ss
popa
insl
push
add
imul
xor
add
add
outsb
pop
inc
add
add
add
add
add
add
jne
dec
push
jb
push
jae
add
add
insw
push
add
add
arpl
add
add
add
add
add
xor
add
insb
add
xor
add
add
push
push
add
add
inc
add
pop
add
add
add
add
imul
add
inc
ja
dec
arpl
add
fs
cmp
add
push
add
dec
inc
add
add
xor
jno
add
xor
add
add
add
insb
add
add
ss
add
add
inc
inc
inc
pop
add
popa
jbe
add
add
popa
inc
jbe
inc
xor
cmp
jno
jp
push
add
push
add
imul
add
pop
add
add
add
add
add
add
add
xor
add
outsb
xor
push
add
add
inc
jne
add
add
add
add
push
add
add
jns
add
data16
dec
add
inc
add
jne
add
fs
add
add
dec
add
add
add
add
push
add
xor
add
imul
dec
imul
je
dec
add
pop
dec
push
bound
push
imul
xor
add
dec
aaa
add
inc
aaa
gs
xor
xor
add
push
add
add
add
add
add
add
add
inc
add
add
inc
jno
add
imul
add
ss
add
add
add
dec
add
push
add
add
bound
push
add
add
add
cmp
dec
add
add
inc
add
push
jo
add
popa
js
add
cmp
push
add
add
add
bound
js
inc
add
inc
dec
insb
popa
add
add
add
add
addr16
add
dec
insl
inc
aaa
add
ja
jns
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
inc
dec
add
dec
push
inc
add
push
inc
add
add
push
push
arpl
add
xor
push
xor
inc
popa
jae
add
pop
cmp
insl
add
add
add
xor
add
add
add
inc
add
add
add
push
outsb
dec
imul
push
imul
inc
jae
add
jp
add
add
dec
cmp
push
jae
bound
dec
add
push
pop
add
add
jae
add
add
add
outsl
add
add
jb
push
inc
push
jno
add
add
add
inc
add
push
insl
xor
add
add
add
pop
arpl
inc
outsl
jp
js
inc
add
aaa
push
add
js
inc
add
add
add
aaa
inc
outsl
add
je
imul
add
add
xor
dec
add
push
add
add
add
inc
jo
imul
dec
add
add
pop
jae
add
imul
add
add
dec
add
add
add
outsl
add
add
add
add
push
jno
add
add
add
add
add
ss
add
add
add
add
add
imul
push
add
push
pop
add
add
add
inc
add
xor
add
add
aaa
add
add
outsl
add
cmp
add
add
add
add
add
imul
add
add
inc
add
add
xor
add
add
add
add
pop
add
inc
dec
pop
add
xor
push
add
push
add
add
jbe
inc
add
add
add
push
add
inc
add
add
add
je
add
add
add
xor
add
inc
add
add
add
dec
aaa
add
add
js
add
pop
add
add
add
add
add
push
add
dec
add
jno
add
add
add
add
arpl
add
inc
arpl
push
inc
add
add
add
inc
add
add
push
add
push
add
insl
cmp
fs
add
add
add
xor
pop
add
outsb
outsl
gs
jae
add
dec
pop
imul
add
add
add
inc
xor
add
push
add
add
push
inc
add
add
add
ja
add
add
add
add
add
add
add
bound
pop
add
push
data16
add
insb
add
aaa
insb
add
add
ja
add
push
dec
add
add
add
jne
add
add
ja
inc
outsl
add
inc
jae
js
dec
add
pop
imul
add
dec
cmp
add
dec
dec
add
dec
add
ja
push
imul
add
add
xor
push
dec
add
inc
add
add
add
jae
add
push
add
add
xor
add
add
insl
push
imul
add
dec
add
add
add
add
push
inc
add
cmp
add
add
add
push
add
push
data16
push
jb
add
add
add
add
arpl
xor
imul
add
add
add
add
add
add
inc
je
add
add
je
add
add
arpl
add
add
add
xor
add
add
je
add
bound
add
add
add
bound
xor
add
inc
add
xor
add
xor
insl
add
dec
xor
data16
add
push
popa
dec
add
add
push
push
add
dec
xor
jae
jae
dec
dec
add
add
xor
insl
cmp
xor
add
popa
add
push
js
add
pop
pop
add
add
jae
add
add
add
push
dec
add
popa
add
imul
add
inc
inc
xor
inc
add
add
add
push
add
inc
outsb
add
xor
jp
jno
data16
outsl
add
add
pop
je
inc
add
dec
xor
push
add
dec
add
cmp
add
add
add
push
push
add
add
add
add
add
popa
add
xor
inc
add
add
xor
add
cmp
add
xor
inc
add
add
add
add
dec
add
add
dec
outsb
add
add
add
imul
add
add
add
ja
add
inc
add
add
jno
pop
add
push
add
add
push
add
add
dec
add
add
push
add
add
xor
inc
add
add
imul
push
inc
add
add
add
add
add
push
jae
push
add
add
add
add
insl
inc
push
jno
add
xor
imul
jae
push
add
add
insb
xor
dec
jne
imul
dec
add
jae
push
jne
inc
jbe
dec
add
jb
dec
inc
add
add
add
xor
push
add
add
add
add
add
add
inc
add
outsl
add
push
jo
inc
dec
add
add
xor
add
add
add
inc
add
add
jb
push
add
add
inc
inc
add
jne
dec
add
add
jns
add
xor
add
add
add
add
add
push
add
add
add
inc
imul
addr16
add
jns
add
cmp
add
push
add
pop
gs
push
add
jo
push
add
dec
add
add
add
dec
je
add
push
add
jno
add
add
add
dec
cmp
xor
add
add
add
pop
add
add
push
insb
jne
add
inc
dec
pop
add
dec
add
add
jbe
add
jo
pop
pop
add
add
add
add
dec
popa
add
imul
add
add
add
inc
add
add
add
add
jp
add
pop
inc
add
inc
push
add
imul
add
insl
insl
add
jne
insb
push
add
add
data16
gs
add
add
add
push
add
add
add
add
inc
push
push
inc
aaa
push
cmp
imul
push
xor
xor
add
inc
imul
je
xor
add
add
jp
add
add
add
xor
add
add
push
add
jb
pop
dec
add
add
ja
push
dec
inc
pop
add
add
add
insl
add
imul
add
ja
inc
add
add
add
add
add
add
dec
js
add
add
cmp
add
add
insb
add
add
add
add
dec
add
jb
add
add
jo
add
dec
add
dec
xor
push
add
insb
add
outsb
dec
dec
popa
jp
add
add
pop
outsl
add
outsl
add
jbe
add
add
xor
inc
add
pop
add
add
add
add
add
add
push
add
add
xor
dec
add
add
add
ja
add
popa
add
dec
add
pop
dec
add
jbe
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
imul
add
aaa
add
add
xor
pop
add
dec
popa
add
inc
add
add
add
add
add
dec
add
add
arpl
popa
add
add
add
add
addr16
add
ss
push
add
add
inc
push
push
add
imul
ja
add
dec
dec
xor
pop
add
xor
dec
add
pop
arpl
outsb
ja
add
add
add
dec
inc
add
push
xor
inc
push
inc
add
add
add
dec
push
add
add
add
add
jae
jns
add
jae
push
add
cmp
add
add
add
xor
jns
add
data16
add
add
push
add
add
add
imul
add
push
add
add
bound
dec
add
dec
data16
pop
add
jp
pop
add
push
add
add
add
add
add
push
add
add
cmp
push
push
pop
add
add
add
add
add
add
push
xor
add
add
jb
pop
add
push
add
jbe
inc
jb
pop
aaa
xor
add
inc
add
imul
xor
add
add
cmp
push
add
imul
cmp
add
add
add
dec
add
add
jno
pop
add
jne
add
push
add
aaa
add
imul
jne
fs
add
dec
pop
add
push
add
add
dec
add
add
add
add
add
add
add
add
jne
dec
dec
add
add
add
dec
add
add
add
outsl
add
add
jns
add
jne
arpl
add
xor
inc
imul
xor
xor
cmp
dec
add
pop
xor
add
xor
add
dec
add
add
inc
add
add
add
add
jns
add
add
jne
add
add
insb
jbe
popa
inc
add
dec
dec
add
add
dec
add
add
push
add
dec
xor
cmp
add
add
cmp
inc
add
add
jb
pop
add
jp
insl
add
add
xor
pop
pop
ja
jno
cmp
dec
add
dec
inc
dec
add
add
add
push
add
data16
add
pop
add
add
add
add
inc
push
add
add
push
insl
inc
add
add
add
add
data16
push
add
dec
add
add
add
add
add
add
push
add
add
jae
dec
add
add
dec
add
data16
pop
imul
xor
add
add
add
add
add
aaa
dec
imul
add
add
add
add
xor
add
add
add
push
imul
pop
add
inc
arpl
jb
add
dec
add
pop
inc
add
add
jne
add
jns
add
pop
dec
add
jbe
add
inc
jae
push
add
add
dec
fs
push
add
add
push
xor
ss
push
add
add
push
add
add
arpl
jo
aaa
add
cmp
add
add
add
jbe
add
add
cmp
inc
add
add
push
add
addr16
ja
dec
js
add
inc
add
add
add
outsb
add
add
add
add
jne
add
pop
add
add
add
add
inc
popa
cmp
add
insl
add
add
push
add
add
add
gs
bound
add
add
add
add
add
add
inc
inc
bound
push
add
add
push
push
push
add
imul
add
add
add
add
jae
add
jno
dec
add
add
add
add
add
add
insl
inc
add
dec
add
push
add
inc
add
outsl
add
add
xor
dec
data16
pop
add
add
xor
jae
jne
add
add
jns
add
imul
add
xor
outsb
jp
dec
dec
add
dec
inc
add
add
xor
jno
add
add
dec
push
dec
jp
pop
ja
add
fs
add
add
pop
add
add
add
outsl
push
add
xor
add
jne
pop
dec
add
add
cmp
add
inc
push
push
add
add
jbe
dec
add
bound
add
outsl
dec
imul
push
add
add
arpl
add
add
add
push
add
inc
inc
push
dec
add
add
inc
bound
add
push
add
pop
popa
add
push
add
ja
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
pop
add
add
dec
add
jbe
popa
add
add
add
add
dec
dec
add
add
insl
inc
push
push
xor
add
add
jb
add
insb
outsb
add
add
push
js
push
aaa
xor
push
push
addr16
add
outsb
add
add
add
xor
push
add
add
inc
inc
push
jns
jne
xor
jo
add
imul
add
jb
add
jbe
add
add
add
add
add
add
add
inc
outsb
push
add
inc
xor
add
push
add
xor
jbe
add
push
inc
add
add
add
xor
add
add
add
js
outsl
add
add
dec
inc
add
add
dec
add
jb
add
add
cmp
push
push
xor
insl
add
inc
add
aaa
add
add
add
bound
add
add
add
add
dec
imul
add
add
add
add
imul
add
add
add
add
add
add
outsl
push
add
jb
cmp
add
pop
add
inc
add
xor
add
xor
add
add
push
add
add
add
add
jp
dec
add
add
xor
jb
push
add
add
insb
inc
add
popa
add
cmp
add
js
jns
fs
add
inc
insl
add
js
add
add
insl
jae
inc
add
inc
add
inc
jns
add
popa
xor
add
add
xor
add
add
add
add
xor
add
add
pop
add
bound
pop
imul
jne
insb
je
add
imul
dec
xor
add
add
add
add
jns
jb
add
imul
add
addr16
addr16
cmp
dec
add
bound
xor
insb
inc
add
add
add
add
jno
add
add
add
add
popa
add
add
add
cmp
add
add
add
jb
add
jo
add
push
add
add
add
inc
add
pop
js
add
dec
add
data16
dec
jbe
insb
add
xor
xor
insl
add
add
push
dec
inc
add
cmp
add
push
add
add
jns
dec
push
add
add
add
pop
add
add
jns
push
jne
add
xor
add
jne
imul
jno
push
add
add
xor
push
add
add
jo
add
add
inc
add
jns
push
add
arpl
add
push
add
add
add
cmp
add
add
dec
add
add
add
bound
cmp
add
add
js
add
add
xor
insb
imul
add
xor
add
jp
add
jne
add
arpl
outsl
add
add
js
add
inc
push
add
add
add
add
jae
jne
add
jb
add
imul
add
add
add
add
jo
add
add
add
add
inc
add
add
push
jbe
arpl
add
add
add
inc
add
add
push
xor
add
arpl
ja
add
add
add
inc
add
inc
add
add
add
add
add
add
dec
dec
add
add
xor
push
add
add
dec
jne
add
add
xor
pop
inc
add
add
je
xor
add
add
xor
xor
add
add
add
insl
add
add
push
pop
insl
add
insl
jae
add
add
add
add
add
add
imul
cmp
inc
push
jo
add
add
add
add
push
add
add
add
add
add
bound
add
xor
jb
add
add
add
outsl
js
fs
add
fs
inc
add
dec
add
add
add
add
add
cmp
dec
inc
add
add
add
add
add
push
add
add
add
je
add
add
inc
data16
add
inc
add
add
add
add
add
add
inc
add
add
dec
push
inc
push
add
js
push
outsb
add
dec
add
add
xor
add
add
add
add
add
add
add
popa
pop
add
add
add
ja
add
js
outsb
add
push
bound
add
inc
add
add
add
jo
add
add
push
add
add
ja
dec
jo
add
add
add
add
dec
addr16
add
cmp
add
dec
add
dec
add
cmp
pop
inc
inc
dec
add
add
add
inc
push
add
pop
push
add
add
inc
add
pop
add
jp
ja
jno
add
outsb
add
dec
inc
gs
add
push
add
add
add
push
inc
add
add
push
push
add
add
jb
add
add
add
insb
arpl
add
add
add
arpl
xor
js
add
inc
add
add
dec
add
push
imul
ja
imul
add
add
add
arpl
add
arpl
jp
ja
add
add
add
add
add
jno
add
add
jns
add
add
xor
add
add
add
dec
add
dec
cmp
push
pop
add
add
add
add
jb
push
add
pop
push
bound
add
jp
add
add
add
add
inc
add
inc
add
dec
add
add
cmp
add
add
jae
add
add
push
push
xor
xor
push
add
xor
push
je
add
add
add
jne
pop
xor
inc
add
js
add
add
add
add
add
jne
add
add
pop
add
dec
push
dec
add
push
add
add
push
add
add
dec
add
bound
inc
inc
dec
jbe
push
add
inc
inc
jb
add
add
jb
add
xor
add
dec
add
xor
add
add
add
add
dec
add
ss
push
dec
inc
insl
add
addr16
jb
inc
add
add
cmp
add
xor
add
dec
cmp
add
add
add
add
add
add
add
fs
add
data16
dec
add
je
cmp
add
add
add
add
dec
add
add
inc
add
add
push
add
add
push
add
pop
add
add
add
push
js
addr16
jbe
add
add
add
push
add
add
data16
inc
jbe
inc
add
add
jb
add
push
inc
insb
add
insb
xor
add
dec
xor
push
add
push
add
add
push
jb
add
push
add
jae
pop
add
add
cmp
add
add
xor
jbe
add
add
dec
add
add
jns
add
add
add
data16
dec
cmp
add
jbe
add
add
push
add
dec
add
add
inc
add
add
add
addr16
add
add
add
add
add
add
push
add
add
inc
popa
push
jo
add
add
dec
insl
add
add
add
bound
push
insl
data16
add
imul
push
dec
add
add
imul
add
add
xor
dec
add
insl
add
add
push
add
add
push
jne
push
add
xor
dec
add
add
add
cmp
add
add
arpl
add
add
add
add
add
jae
insb
add
add
add
arpl
add
add
jo
jb
add
cmp
add
add
add
add
add
jns
add
add
cmp
popa
add
push
dec
add
add
add
insb
push
add
jp
jns
jbe
add
add
add
jne
jbe
imul
add
add
add
aaa
pop
push
add
cmp
xor
je
add
inc
add
jno
add
add
add
add
dec
add
add
add
add
xor
dec
add
add
add
ja
outsl
push
gs
inc
jne
add
add
add
add
inc
dec
dec
push
add
add
js
add
add
inc
add
add
bound
add
add
bound
add
push
add
push
push
add
dec
add
add
jae
add
jp
add
add
add
jae
jb
add
add
add
add
push
add
data16
jp
insl
add
add
add
add
insb
add
add
add
add
push
inc
aaa
add
add
ja
add
add
add
insb
add
add
jae
add
dec
insl
add
ja
add
bound
inc
pop
inc
add
add
add
add
add
add
push
inc
push
popa
add
dec
add
dec
add
push
dec
jbe
inc
insl
add
ja
inc
data16
dec
add
add
xor
add
add
jbe
add
outsl
jno
arpl
add
add
xor
add
add
add
jne
imul
add
pop
add
outsl
xor
add
jo
add
add
inc
gs
add
add
data16
add
dec
xor
add
add
inc
add
add
dec
inc
add
inc
inc
dec
xor
push
add
inc
add
add
add
jne
inc
add
dec
jbe
je
jno
dec
inc
add
js
add
add
add
add
add
xor
add
jbe
add
add
popa
bound
add
add
add
add
inc
add
jp
inc
add
add
bound
xor
add
insb
dec
outsb
dec
add
arpl
push
push
push
jb
add
dec
add
push
push
jae
outsl
cmp
push
jb
jno
popa
add
dec
xor
dec
add
imul
imul
add
add
add
add
add
xor
dec
dec
add
jae
push
add
ja
arpl
add
xor
outsb
add
bound
add
xor
add
dec
dec
inc
dec
add
jo
imul
add
add
push
pop
push
add
imul
add
add
add
add
add
add
insb
insl
add
add
add
add
add
add
add
jb
popa
jbe
add
add
add
imul
dec
jp
add
add
jns
add
add
add
add
ja
add
add
add
add
xor
add
inc
add
add
push
dec
add
add
add
imul
add
add
xor
add
dec
add
push
dec
add
add
add
dec
add
push
dec
add
add
add
add
inc
add
inc
add
add
data16
dec
push
add
add
add
add
add
add
add
add
add
add
add
push
js
pop
add
add
xor
add
bound
dec
add
gs
xor
add
push
add
dec
insl
insb
add
add
cmp
pop
xor
add
dec
inc
pop
add
push
arpl
insl
add
push
add
inc
dec
je
pop
add
push
add
add
dec
push
add
dec
add
outsb
jp
add
push
add
data16
add
add
add
dec
add
add
add
add
inc
add
push
add
ja
add
add
add
xor
add
outsb
add
push
insb
add
add
add
imul
add
add
push
add
add
xor
pop
add
dec
xor
dec
add
add
xor
add
xor
add
jne
push
add
add
add
add
fs
bound
add
xor
add
add
add
add
add
jae
jae
jb
push
add
jb
push
dec
inc
add
add
pop
add
jne
imul
add
add
add
pop
add
add
add
add
pop
bound
add
add
add
add
inc
add
arpl
add
jbe
xor
push
imul
cmp
push
push
add
inc
add
add
imul
add
push
outsl
jb
add
push
jns
push
cmp
add
push
xor
fs
add
dec
add
add
pop
xor
add
insl
add
add
dec
add
add
add
add
add
push
ja
add
add
inc
push
add
add
add
add
outsb
add
add
jb
add
add
jb
xor
pop
dec
add
dec
inc
cmp
add
bound
add
jns
add
add
add
add
add
add
outsl
add
add
inc
add
dec
add
add
aaa
add
add
push
jp
add
add
push
push
imul
push
add
bound
add
add
dec
add
push
add
add
jb
push
dec
add
dec
jno
add
push
add
push
inc
arpl
add
add
outsl
add
add
xor
imul
xor
add
add
xor
insb
add
xor
add
xor
add
add
jns
add
add
imul
add
bound
xor
pop
inc
add
add
jo
add
add
dec
add
jo
pop
inc
dec
cmp
add
inc
add
imul
dec
cmp
insb
insb
dec
dec
fs
pop
add
arpl
insl
inc
add
add
add
add
push
inc
add
add
add
add
add
add
fs
arpl
add
add
jno
add
inc
imul
dec
jbe
xor
add
xor
ss
jp
add
jns
add
jp
dec
add
jae
add
add
add
add
push
add
add
jns
insb
push
push
add
dec
inc
push
js
add
add
add
add
inc
add
outsl
add
data16
push
add
dec
inc
jne
add
add
jno
add
push
add
push
dec
add
ja
inc
cmp
add
inc
dec
add
inc
add
jbe
add
add
add
add
add
inc
add
add
add
add
add
push
add
push
add
add
add
xor
add
add
add
inc
add
add
xor
add
je
jns
add
inc
jne
add
add
add
add
add
add
xor
add
add
add
jb
add
jbe
add
xor
add
dec
outsl
add
gs
cmp
add
ja
dec
add
push
xor
push
dec
dec
add
push
add
add
add
add
inc
add
push
add
xor
inc
add
add
add
jo
add
add
add
add
aaa
add
add
data16
dec
add
cmp
outsl
add
aaa
add
add
add
add
xor
ss
jb
add
cmp
dec
add
dec
outsw
add
add
jb
jns
dec
outsb
dec
add
add
xor
jns
add
outsb
add
inc
xor
add
push
pop
xor
add
add
add
inc
outsb
insb
jbe
add
add
push
add
add
push
aaa
push
add
add
add
outsb
add
outsl
pop
pop
aaa
add
add
add
pop
push
push
inc
add
inc
add
add
dec
pop
add
push
dec
dec
push
add
jne
cmp
add
je
add
add
jno
add
add
add
insl
add
jne
add
arpl
imul
add
jo
insb
xor
add
pop
aaa
add
add
dec
add
jbe
push
add
add
add
add
push
push
jo
add
imul
add
xor
add
add
push
xor
jae
add
dec
push
add
add
xor
add
inc
imul
aaa
jno
add
add
xor
add
add
add
add
add
dec
inc
add
je
outsl
add
js
add
inc
add
xor
add
cmp
add
xor
add
add
add
arpl
add
dec
cmp
add
add
jbe
add
inc
add
insb
add
inc
imul
add
add
gs
pop
imul
push
inc
dec
add
je
add
add
add
add
add
add
js
xor
add
add
data16
push
add
jp
add
add
add
popa
dec
data16
push
add
add
jns
dec
outsb
inc
ja
inc
pop
add
ja
inc
add
add
data16
add
cmp
add
add
add
dec
add
add
pop
inc
dec
add
add
add
add
add
add
add
add
dec
add
add
imul
dec
outsl
add
inc
add
add
inc
push
dec
pop
add
inc
add
add
add
add
add
add
add
add
arpl
add
dec
dec
add
add
push
add
add
add
add
cmp
add
push
je
ja
inc
add
add
add
add
inc
ja
cmp
add
pop
push
inc
add
add
jns
add
add
add
dec
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
push
xor
add
add
add
cmp
add
add
dec
add
dec
xor
inc
add
add
add
push
inc
push
inc
js
add
add
add
outsb
add
jp
add
add
push
xor
add
add
push
xor
push
add
pop
jne
aaa
ja
cmp
jbe
inc
add
ss
pop
add
add
add
xor
gs
add
add
add
pop
aaa
add
add
add
add
add
outsl
xor
add
je
data16
add
add
jae
push
add
dec
push
add
pop
push
add
xor
add
add
dec
add
add
add
add
add
add
cmp
mov
stos
mov
cs
push
mov
mov
ret
cmp
sbb
cmp
xor
mov
mov
xchg
inc
les
movsb
fs
test
jne
cmc
dec
xchg
in
inc
in
push
and
lods
testb
fs
hlt
in
bound
loope
idivb
or
jl
mov
mov
xor
inc
dec
sbb
and
dec
xor
pop
mov
ret
into
xchg
shll
inc
std
mov
lods
repnz
add
xchg
and
jecxz
ljmp
jbe
mov
cmpsl
push
xchg
cmpsb
mov
mov
popf
mov
fsts
mov
mov
xchg
mov
ljmp
xchg
clc
dec
xchg
mov
out
arpl
mov
cmp
mov
push
cmc
in
push
mov
and
pop
in
xchg
cmp
hlt
movsb
cmc
jns
mov
inc
mov
mov
mov
xchg
cld
mov
mov
xor
in
lcall
ja
xor
outsb
adc
test
xchg
push
jmp
sub
mov
test
xor
or
repz
sti
mov
mov
bound
ss
jnp
scas
jecxz
mov
fs
clc
test
cmp
ljmp
test
cmp
fcmovbe
mov
xchg
ljmp
test
mov
test
aas
test
jg
ljmp
test
cmp
ljmp
test
std
xchg
ljmp
test
fsubrl
mov
xor
frstor
cmp
add
repz
xchg
xor
icebp
xchg
mov
icebp
xchg
lock
xor
icebp
xchg
jo
testb
scas
icebp
test
xlat
xor
stos
adc
mov
jno
testb
xor
jbe
and
xorb
icebp
ja
aaa
and
mov
xor
hlt
xor
je
xor
mov
je
xor
mov
xchg
xor
sti
cmpb
icebp
mov
jp
cmp
sti
xor
mov
jp
xor
test
lock
ret
data16
cli
or
mov
loop
rcrb
mov
lock
idivb
mulb
sbb
jle
mov
nop
stc
lcall
aas
and
jg
mov
jae
adc
xor
ljmp
aas
push
xchg
insl
mov
jno
cmp
mov
cmp
hlt
mov
cmp
xchg
or
lock
cmpsl
cwtl
cmp
orl
mov
cmpsb
dec
loop
mov
stos
mov
mov
cmp
cwtl
je
lds
fnstcw
mov
mov
cwtl
fidivl
xchg
or
jmp
test
inc
pop
jecxz
movsl
lcall
cs
sub
cmp
aaa
cs
cmp
and
loopne
lcall
or
cmpsl
in
out
fisubs
mov
cmp
ljmp
push
mov
mov
and
inc
push
sahf
dec
sti
out
nop
mov
cmp
mov
sti
sub
mov
mov
insb
xchg
ss
mov
dec
jecxz
cwtl
clc
and
mov
loope
xchg
mov
popf
push
mov
std
repnz
sarb
sub
mov
cmp
adc
adc
adc
loop
adc
bound
lcall
push
cmpsb
inc
ljmp
lds
loop
xchg
je
lock
mov
js
stos
stos
mov
dec
add
popf
pop
int
out
sbb
cmpsl
cmpsb
sub
ficoml
lcall
mov
ss
cmpsl
stos
rclb
xlat
mov
mov
lock
mov
cmp
cmp
mov
pop
loop
xor
es
ss
xchg
sbb
push
dec
jno
popa
cmc
pusha
insb
cli
jge
mov
sub
mov
cli
inc
mov
clc
movsb
adc
lret
je
jp
dec
add
push
mov
pop
loop
sbb
out
in
jnp
stc
es
subb
stc
clc
repz
lea
cmp
fs
call
push
loope
aaa
xchg
jmp
cmp
xchg
sbb
fwait
scas
jnp
mov
mov
out
jl
xchg
mov
frstor
je
orl
mov
mov
jecxz
sti
jno
test
mov
or
ljmp
repz
fwait
cltd
adcb
xor
adc
cmp
es
sti
mov
or
or
scas
sub
mov
sbb
movsl
jo
movsb
loopne
jge
mov
cmp
or
fists
mov
stos
lea
xor
lea
mov
fwait
cmpsb
jbe
cmpsl
mov
incl
andb
cli
xchg
rcl
sahf
addr16
mov
sub
icebp
nop
mov
xor
sbb
mov
mov
lcall
stos
fldl
sbb
push
cmp
jne
decb
xchg
idivb
scas
push
or
xor
cmp
data16
xor
std
sbb
and
shll
loop
ja
sarl
ret
sbb
dec
iret
cmpb
ljmp
pop
cmpsl
cmp
mov
sub
mov
pop
cmp
xor
xchg
mov
imul
mov
jecxz
fisubrs
mov
cmp
push
das
rcll
mov
inc
jle
mov
ret
inc
cmp
ss
xchg
lcall
lahf
inc
sub
jbe
cld
pusha
sbb
fldt
xchg
bound
xor
mov
icebp
mov
mov
xor
jb
sarb
lcall
fcom
jle
xor
push
jnp
cmp
addl
cmpsb
sub
jb
leave
xor
sbb
icebp
stos
push
cmpsl
xchg
and
jno
int
cmp
inc
sbb
jb
xor
sar
or
mov
xor
shlb
push
add
lret
lcall
cs
nop
aaa
in
aaa
mov
mov
sbb
mov
repz
in
shr
jge
sti
orb
enter
testb
push
push
sub
scas
daa
sahf
jb
xchg
inc
rclb
arpl
and
sti
xorl
mov
aad
sti
adcl
mov
jmp
orb
icebp
enter
push
mov
sahf
pop
mov
stc
mov
mov
cld
push
ja
cli
out
mov
jnp
xor
xchg
lea
cmpsb
push
mov
adc
cld
xor
mov
rcr
mov
xlat
mov
lods
lret
lcall
movsb
fdivrl
cmp
je
inc
xchg
scas
push
mov
jns
push
les
cli
push
sub
xchg
or
xchg
xrelease
mov
bound
inc
adc
mov
jo
aad
mov
mov
mov
mov
fidivs
aad
or
sbb
enter
xchg
ja
jns
xchg
jnp
fldt
movsl
je
stos
cmp
es
jecxz
imul
cli
cli
push
or
jae
mov
and
shl
aam
rcr
and
mov
lods
movsb
scas
mov
dec
jo
lods
push
sub
push
mov
out
sub
sub
sbb
mov
rclb
aam
mov
jo
cmp
loop
lret
loop
jno
or
aam
incl
icebp
jns
stos
lds
cwtl
and
es
rcll
mov
stc
ror
push
orl
outsl
xchg
sub
leave
shl
mov
cmp
jmp
dec
ja
and
mov
lret
xchg
jecxz
das
testl
or
sub
idivl
mov
mov
xchg
xchg
lahf
pushf
jns
or
and
mov
addb
adc
test
fsub
mov
add
pop
xor
ja
mov
mov
and
mov
cmp
test
ja
xor
loop
fcompl
cmpsb
xchg
mov
int
fists
notb
inc
sub
push
xchg
aam
mov
fst
pop
sbb
ret
or
cmp
mov
adc
xchg
pop
push
push
inc
enter
cmp
xlat
and
cmpsl
cli
adc
sub
lcall
aam
addl
adc
push
stc
and
ficomps
outsl
cmp
add
or
hlt
push
sub
jne
fimuls
mov
sub
lea
inc
push
and
lods
xorb
sbb
pop
mov
mov
add
mov
shr
fcmovu
out
jge
std
mov
xchg
nop
scas
jo
inc
mov
xorb
jo
aam
pushl
push
rol
adc
aas
bound
sub
jle
jnp
lret
mov
leave
outsl
add
xchg
andb
stos
cmp
testb
insb
faddp
or
dec
push
bound
jg
das
sbb
sbb
push
dec
cs
out
movb
pop
clc
mov
dec
lcall
loopne
cmp
mov
sub
mov
outsb
lret
pop
out
ret
push
cmp
adc
call
mov
mov
popf
stos
cli
into
lods
mov
push
xchg
es
icebp
xchg
cmp
cmp
jp
out
xchg
lahf
out
adc
jb
ss
shl
fiadds
xchg
mov
pop
mov
push
imul
cli
or
test
jbe
stos
pop
sub
sub
cmp
in
and
test
mov
xchg
adc
popf
mov
pop
cmp
xchg
xchg
push
sbb
sub
mov
pop
fwait
push
lock
jo
clc
lcall
push
fwait
test
mov
out
movsb
cmp
ljmp
lock
hlt
js
repz
repnz
mov
xor
sti
add
cmp
pushf
daa
popa
mov
sbb
mov
mov
mov
inc
pop
stos
xchg
push
cmpsb
inc
repnz
pop
push
lret
movsb
mov
mov
fs
inc
arpl
cmp
and
jle
bound
jmp
xchg
fwait
xchg
or
lahf
addl
loopne
in
out
jbe
push
mov
scas
jecxz
inc
jbe
sub
icebp
or
out
jnp
push
mov
sub
pop
aaa
mov
outsb
mov
loop
sbb
popa
loope,pt
mov
je
xchg
xchg
sahf
mov
cmp
cmpsb
cmp
inc
jmp
adc
xchg
out
test
mov
dec
mov
mov
jnp
pop
jmp
pop
or
xchg
repnz
in
xor
cmpsl
xchg
mov
lods
subl
rolb
add
dec
xor
aaa
xlat
xchg
negb
in
jae
lret
mov
sub
cmp
mov
out
mov
bswap
cld
push
xlat
sbb
cli
jb
and
out
push
fsubl
mov
dec
xor
out
adc
scas
mov
sub
mov
fnstenv
andb
pcmpgtb
xor
mov
xor
jae
mov
jo
sub
out
xchg
cmp
dec
incb
sub
push
aam
mov
cmp
mov
dec
cmpsb
push
gs
loope
mov
push
mov
xor
mov
sbb
std
mov
or
neg
adc
repz
aas
in
pop
lods
out
cmp
imul
cmp
inc
cmpsb
in
hlt
ljmp
mov
mov
ljmp
jae
xchg
sbb
push
cs
cmpsl
push
mov
test
lds
sahf
insb
imul
mov
nop
adc
iret
xchg
aam
push
mov
or
lds
shr
push
in
aad
cmp
mov
sti
dec
mov
repnz
adc
xlat
xor
sub
lods
pop
xor
push
xor
scas
decb
xchg
xor
dec
sub
lret
xor
out
xchg
push
inc
inc
sbb
test
add
xor
mov
push
jae
and
sub
cmp
inc
push
pop
and
ds
or
test
ja
out
push
cmc
loop
push
mov
mov
add
lock
cmp
mov
insl
jp
imul
jp
hlt
pusha
push
adcl
cli
repnz
orl
repz
cmpsb
sbb
pusha
push
cwtl
movsl
shrl
mov
icebp
mov
fwait
mov
das
fidivs
int
jmp
insb
clc
or
push
std
push
dec
mov
out
mov
aas
and
jne
or
mul
xor
mov
inc
repz
dec
pop
lods
or
jecxz
xchg
cmp
negb
ljmp
mov
sti
clc
xchg
stc
scas
incl
inc
sub
dec
mov
inc
inc
stos
stos
sbb
xchg
fs
stos
mov
add
jns
mov
aad
or
mov
mov
xlat
mov
lods
and
adc
fdivp
ret
xchg
movsl
push
mov
pop
jnp,pn
cwtl
orb
sbb
xor
push
lea
push
push
mov
mov
inc
repz
fbld
mov
cmpsl
or
int3
xchg
cmpsl
xchg
adc
inc
mov
mov
daa
lock
out
out
mov
xchg
clc
jbe
cmpsb
lcall
cmp
orl
shl
scas
in
test
lods
jbe
xor
push
pushf
fistpll
mov
sub
repz
xor
test
ret
xor
ds
in
push
cmp
ljmp
xor
and
bound
xchg
aam
sti
lret
xor
mov
mov
popa
cmpsl
add
adc
loop
or
outsb
cmp
loope
xchg
into
out
cmc
sahf
pusha
daa
int3
dec
lock
and
sub
or
dec
cld
shll
int
fwait
jbe
loope
nop
mov
sub
xchg
loope
addb
cmc
cmp
popf
sbb
dec
pop
xchg
aas
mov
mov
cwtl
and
shll
cmp
lret
push
lods
mov
in
push
popa
cmp
sbb
bound
sub
ret
test
aam
cmpsl
cmp
mov
adc
cmp
out
cmp
sbb
imul
cs
lea
pop
frstor
adc
inc
dec
dec
das
push
inc
jge
sahf
test
or
push
sahf
scas
sahf
ja
xor
mov
repnz
das
fiadds
js
mov
mov
ljmp
jne
sbb
test
push
pushf
shl
cli
lahf
mov
jnp
loop
add
jb
cmp
jno
add
cmp
stos
roll
mov
sbb
or
cwtl
out
cli
lcall
daa
das
push
cmp
xchg
mov
out
cld
mov
xchg
mov
push
aas
aad
mov
fidivs
jmp
jge
xchg
cmpsl
fbld
sub
gs
dec
nop
xchg
or
cmp
iret
popf
push
scas
sub
dec
aam
or
jo
cld
push
mov
sbb
xchg
fidivrs
fwait
push
mov
mov
mov
mov
pop
test
clc
lcall
jl
adc
pop
fdivp
daa
mov
xchg
xchg
fnstsw
ljmp
xchg
cmp
or
mov
cmpsl
fdivp
in
fs
sbb
loope
pop
cmp
negl
xor
dec
clc
fidivrl
or
xchg
adcb
jbe
lahf
mov
aad
ds
into
jg
popf
mov
out
xchg
scas
cld
xchg
adc
repnz
sub
pop
mov
xchg
mov
push
ds
push
cmp
cmp
push
xchg
dec
xor
cmp
rol
mov
inc
aaa
lods
sbb
mov
mov
rcll
inc
inc
jbe
sar
mov
cmc
arpl
ss
sbb
rclb
movsl
cmp
ljmp
into
ret
jmp
imull
adc
and
add
je
aam
sahf
jg
fidivl
in
dec
cmp
jb
mov
jne
popf
inc
mov
mov
cmp
pop
mov
nop
cmp
cmpsl
cmp
and
shlb
sarl
insb
in
inc
mov
or
sbb
and
in
mov
bound
mov
pop
and
adcb
sub
lds
hlt
cli
mov
std
push
jns
into
jmp
push
in
data16
call
jnp
lock
call
push
or
data16
xor
cmp
shl
idivl
xchg
push
es
dec
roll
push
xchg
cmpsl
mov
sbb
je
add
add
and
loope
xor
cmp
jl
adc
shl
mov
mov
iret
loop
fidivs
stos
and
out
pop
ljmp
es
subb
and
in
xor
jae
orl
or
arpl
sti
inc
outsl
shl
shrb
arpl
mov
mov
sub
dec
and
cli
mov
lcall
outsl
fcoms
iret
mov
rcrl
fwait
outsl
and
push
shl
leave
imul
cmp
shrl
adc
and
add
jnp
rol
popf
cmp
addr16
pop
popf
outsb
push
movsl
ljmp
lock
imul
jmp
fsubl
daa
mov
fs
loopne
je
repz
mov
out
mov
fsub
inc
std
mov
xor
addl
mov
mov
in
cmp
es
mov
lcall
and
stos
mov
scas
mov
dec
inc
test
ret
fldl
add
xlat
mov
sahf
inc
loope
loopne
icebp
push
das
xor
cmp
addr16
mov
pop
inc
enter
pop
sbb
jo
test
rorb
or
jp
les
mov
xchg
ss
inc
iret
mov
out
and
sub
add
movsb
cmp
icebp
fwait
mov
xchg
mov
and
pusha
in
mov
std
pop
insl
loop
mov
cld
and
mov
cli
pusha
lods
and
xchg
cmc
xchg
and
sti
sbb
jp
push
fidivrs
arpl
jmp
sbb
mov
cmp
imulb
adc
scas
xchg
cmp
repnz
mov
xchg
sbb
lret
rclb
in
and
inc
xor
dec
hlt
idivb
lss
and
jmp
jns
shlb
lock
sbb
cmp
ret
xchg
dec
mov
nop
movsb
jo
fidivl
dec
mov
sub
fs
mov
jle
mov
xchg
pop
fdivs
mov
mov
stos
xlat
xchg
jne
or
mov
jecxz
out
inc
fcomi
in
dec
inc
cmp
sub
push
cmp
sub
pop
cld
lcall
popa
movsb
incl
cmpsb
cmp
mov
push
dec
mov
idivb
jae
cs
xchg
and
inc
lds
pop
xchg
jp
jo
mov
jno
sbb
jmp
loope
ja
cmp
mov
adc
notl
adc
clc
cmpsl
and
and
fcomp
aam
aad
jp
movsb
mov
push
mov
cmp
cmpsb
cwtl
add
dec
cmp
inc
mov
arpl
jne
mov
pop
cmp
adc
inc
jg
fincstp
mov
iret
push
cmc
mov
mov
sub
sub
ficoms
jbe
xor
lret
and
hlt
imul
sbb
add
xchg
xchg
and
xlat
xchg
cwtl
mov
cwtl
repz
std
in
movsb
mov
fwait
aad
mov
movsb
mov
pop
adc
pop
shll
sbb
adc
js
jecxz
jbe
xchg
jns
leave
es
dec
xlat
outsb
out
jbe
jb
jne
inc
jle
push
cmp
jae
add
lahf
jb
mov
jbe
jmp
and
dec
jae
push
shll
inc
xchg
cld
cs
bnd
repnz
mov
xchg
bound
out
xchg
jb
dec
cmp
xchg
imul
inc
pop
loop
sub
mov
or
inc
ret
ficomps
ja
adc
jns
or
mov
mov
jno
xor
enter
ss
and
push
lea
mov
in
xchg
xor
adc
imul
pop
data16
lahf
jnp
call
orl
cmpsl
sub
xor
nop
and
pushl
in
pop
xchg
popa
mov
mov
dec
add
and
jns
rorb
cmp
pop
hlt
fsubl
mov
sbb
enter
push
cmpsb
rcll
xchg
cmp
shlb
setl
push
shr
fstp
mov
ja
cmp
jo
sub
mov
jbe
aad
out
xchg
or
xor
mov
aaa
jo
adc
pop
ret
lahf
and
cmc
lds
out
jle
test
aas
and
xor
or
mov
mov
out
jg
fdivs
popa
jbe
mov
cmovp
and
pop
xchg
lahf
sub
sbb
cli
mov
or
cmp
loop
mov
pop
jo
mov
cltd
ss
xor
and
pop
cld
pushl
adc
push
ret
imul
jg
xchg
ds
inc
bnd
pop
shl
xchg
xor
mov
add
fcoml
add
mov
xchg
mov
aaa
xchg
inc
imul
lret
rcl
cs
sub
cmpsb
mov
out
fdiv
xchg
mov
stc
jb
mov
mov
lcall
push
push
in
mov
cmp
icebp
repz
je
mov
pop
aad
xor
jno
sbb
mov
fidivrs
test
jo
test
xchg
adc
push
gs
mov
in
daa
cmpsb
push
rclb
in
rclb
out
repnz
popf
mov
cmp
cmp
mov
add
adc
and
adc
ss
dec
mov
out
cmpsl
xchg
jnp
nop
leave
sahf
repz
push
jb
nop
insl
repnz
jmp
cli
dec
cli
icebp
mov
push
mov
mov
or
add
pop
in
int
in
push
jb
adcb
xchg
sahf
sub
sbb
daa
jnp
imul
icebp
stos
mov
cmp
fsubl
jecxz
repz
mov
fadd
jne
lret
imul
xor
xchg
pusha
pop
jo
cmc
or
cmp
mov
mov
insb
mov
in
movsb
flds
adc
shrl
lcall
ss
sbb
adc
loopne
stc
xlat
nop
clc
mov
test
jbe
imul
lods
push
xchg
xchg
jmp
mov
in
xchg
sahf
daa
shl
dec
and
xchg
adc
pop
adc
ds
jp
and
jae
iret
and
cli
addr16
in
mov
cmp
test
xchg
sub
das
inc
mov
and
fildl
jl
sub
mov
pop
push
insb
popa
icebp
test
jmp
cmp
jbe
mov
ss
xor
xchg
pop
sub
sbb
fdiv
loop
repnz
stos
bound
add
xchg
jb
cli
xchg
out
pause
in
or
mov
ret
cmp
rorb
or
fnstsw
xchg
fsubrl
and
fisubrl
pop
cmp
push
mov
inc
jecxz
ljmp
arpl
and
mov
ret
mov
loop
mov
cmp
dec
mov
aaa
lods
adc
pusha
ja
cmp
into
pop
xorb
mov
xor
nop
cli
adc
jns
cmp
xchg
je
add
xchg
sbb
mov
mov
mov
in
inc
and
sarl
mov
in
fwait
daa
in
mov
xor
in
mov
mov
repz
mov
mov
cmp
and
sarl
shlb
or
add
pop
cs
call
imul
cld
cmpsb
xchg
jae
mov
add
push
push
loope
adc
ret
mov
inc
shrb
outsb
cvtpi2ps
pop
scas
mov
int3
sahf
sbb
push
mov
js
inc
sti
dec
int3
mov
jno
push
stc
dec
sub
aam
mov
pop
subl
jg
andl
jmp
pushf
xchg
or
sbb
xchg
outsb
stc
loopne
pop
sbb
pop
movsl
cmp
xchg
pop
in
jle
aam
sub
cmp
shl
push
nop
cmp
xor
sarb
fwait
repz
push
xchg
inc
inc
cmp
add
sbb
das
and
dec
add
xor
push
pop
and
sbb
ljmp
in
and
jmp
call
mov
jge
push
mov
scas
pop
sbb
xchg
push
push
mov
loop
and
jne
pop
dec
dec
and
mov
mov
pop
and
pop
push
das
mov
cmp
gs
add
scas
mov
aaa
dec
and
frstor
mov
fistl
sbb
in
imul
das
ss
imul
inc
andl
test
xchg
ret
fwait
push
out
lea
push
dec
popf
pop
pop
dec
add
xchg
pop
xchg
adc
clc
pusha
shlb
xor
jp
jmp
mov
jae
lock
mov
std
push
add
xchg
dec
lret
aaa
sahf
push
je
pop
mov
adcb
les
xchg
leave
cli
sbb
cmpsl
pop
loop
cmp
add
add
cmp
test
xchg
in
nop
adc
ret
dec
lcall
stc
push
stos
sub
and
xchg
rcll
ljmp
into
popa
mov
loop
pushf
lock
fs
dec
gs
ret
mov
xlat
lock
xchg
cmpsl
addr16
in
xchg
lcall
cmpsb
add
stos
out
in
and
stc
jmp
and
shl
mov
jo
nop
aam
nop
in
sti
fwait
mov
jmp
imul
nop
jp
fstl
sub
lcall
push
ss
cli
sub
inc
pusha
push
pop
test
shlb
sbb
push
int
sub
adc
aam
aam
mov
push
bound
push
jnp
push
cmp
jmp
mov
js
cmp
imul
xor
fcoms
sub
stos
fiadds
clc
or
test
cmp
dec
lahf
xchg
orl
ret
fadd
fbstp
mov
mov
xchg
popa
imul
mov
aad
cli
mov
add
notl
and
out
notl
xorl
mov
jnp
cli
cmp
push
test
mov
fbld
stos
or
pop
xchg
mov
je
mov
gs
pusha
push
pop
pop
push
out
push
addr16
stos
fdivp
xor
cmpsl
push
and
and
mov
loopne
mov
jae
push
insl
sub
inc
ljmp
push
je,pt
dec
repnz
loope
and
lods
mov
data16
jle
mov
pop
mov
pushl
mov
and
jne
js
sub
adc
mov
cltd
sbb
aas
pop
fidivl
mov
jno
fmulp
addl
add
inc
sub
adc
jecxz
cmp
es
xlat
dec
ret
pop
or
dec
movsl
add
adc
scas
and
xor
ljmp
daa
divl
mov
adc
xor
ss
push
adc
mov
cmp
mov
sarb
lock
pusha
ja
mov
mov
inc
sbb
mov
mov
sahf
pop
dec
aaa
mov
stc
mov
imul
rcrl
and
pop
movsl
and
pop
and
add
cmp
mov
or
push
sub
mov
andb
and
pop
sahf
push
cmp
mov
ds
addr16
jge
mov
pop
fcomps
push
push
cmp
loope
pusha
dec
icebp
sub
pusha
adc
sub
add
mov
xchg
push
mov
cwtl
dec
mov
jl
or
push
and
jbe
push
fists
js
cmpsl
dec
fbstp
repnz
pop
xchg
fnstenv
ret
add
pop
shl
sahf
mov
inc
icebp
pop
jp
ficoms
cld
adc
cli
ljmp
lret
mov
push
xlat
xchg
loope
pop
cltd
cmc
mov
and
dec
and
mov
jge
jb
lahf
mov
mov
pop
cli
jo
ja
xlat
xor
ret
xor
cmpsb
add
ret
xor
cld
and
push
out
cmpsl
and
in
popf
lret
inc
fstpt
scas
adc
jge
pop
enter
scas
push
in
pop
repz
ficompl
cmp
ds
repz
movsl
and
adc
cltd
sahf
mov
or
jo
shl
xchg
ljmp
cmp
cmpsb
lock
gs
ret
mov
mov
mov
mov
jo
and
push
cmpsl
fstps
mov
clc
mov
inc
mov
cmpsl
lcallw
repnz
cmp
push
mov
sbb
in
and
std
sub
jno
mov
adc
xchg
repz
imul
sub
fisubs
add
pop
cld
pop
cmp
sub
xchg
xchg
mov
add
movsl
movsl
mov
sbb
mov
mov
lds
movsl
adcb
cwtl
sub
aaa
jb
cs
xor
xchg
fstl
push
jg
imul
shlb
xchg
fucom
push
in
nop
je
cmc
je
dec
xchg
cli
and
pop
jb
ja
push
and
jnp
inc
sahf
push
mov
sarb
cmpsb
mov
pop
ret
dec
lret
pushf
mov
dec
jmp
cli
mov
loop
rcrb
adcb
mov
call
pop
arpl
push
mov
xor
popf
mov
push
aas
rolb
mov
gs
xor
mov
idivl
push
lea
or
inc
push
ret
mov
xchg
cmp
ret
lea
adc
adc
clc
add
sarb
call
jne
ss
adc
nop
xchg
adc
dec
inc
nop
adc
ss
fidivrs
das
rol
inc
das
sub
adc
cli
mov
add
push
or
pop
inc
mov
cmc
imul
jne
xchg
or
cli
jg
inc
cmp
mov
loop
arpl
outsl
imul
movsb
mov
adc
push
mov
cwtl
popa
jp
xor
test
mov
cmp
mov
out
mov
ficoml
mov
sbb
mov
loop
jmp
cwtl
stos
mov
nop
imulb
cmp
or
jge
popf
notl
cmp
loope
imul
shll
arpl
fldenv
xor
sbb
or
xchg
mov
adc
lock
sti
andb
mov
inc
sbb
cmp
arpl
test
xor
cmp
scas
cwtl
push
mov
pusha
sub
jnp
xchg
out
fs
sub
jp
stos
int
push
sbb
jb
mov
add
call
loopne
sbb
cwtl
into
shrb
cmp
inc
inc
mov
dec
roll
loop
and
pop
fwait
push
das
mov
xor
notb
mov
lret
jecxz
push
repnz
test
cmp
xor
sub
cli
shlb
sbb
push
mov
repz
repnz
add
cltd
jae
ds
sub
adc
mov
sbb
pop
fwait
dec
jb
inc
and
mov
xchg
and
fwait
ljmp
popf
cmp
inc
or
jnp
out
aad
mov
cli
sbb
or
clc
jo
jo
nop
jmp
xchg
mov
cld
mov
popa
repnz
cmp
shll
xchg
popa
fwait
and
sti
jne
cs
adc
dec
cmpsb
cmp
xorl
js
mov
cmpl
pusha
jnp
mov
add
scas
gs
mov
test
mov
inc
push
dec
pop
cmpsb
fidivs
adc
mov
jb
stc
imul
cmp
int
xor
pop
in
cs
fcmovbe
pusha
cli
dec
aam
xchg
idivl
push
shll
xchg
incb
sbb
cltd
mov
pop
xchg
mov
pop
adc
xchg
jle
mov
pop
mov
btc
stos
inc
popf
inc
mov
repz
cmpsb
inc
jle
les
fisubrl
or
ret
pop
jmp
inc
mov
jmp
and
adc
xchg
adc
or
sbb
stc
xchg
sub
jg
mov
stos
push
stos
clc
mov
cld
jb
dec
cli
mov
adc
stos
adc
loope
xchg
cmp
cld
sub
es
mov
cmc
shl
sar
aam
mov
fimuls
ss
inc
filds
aaa
imul
cmc
arpl
adc
cmp
lock
inc
stos
sbb
jmp
std
mov
lahf
dec
das
cmc
push
xchg
cmp
ds
jle
mov
mov
mov
mov
in
add
aad
lods
mov
sbb
popf
imul
pop
xor
cli
cmpps
out
pop
cmp
jmp
adc
push
enter
cmp
stos
cmp
lret
mov
sub
jge
mov
mov
mov
cld
js
test
push
and
sub
or
fmuls
out
movl
test
test
mov
in
pop
cmpb
xor
push
ljmp
or
sub
mov
aaa
push
pop
repnz
shlb
xchg
mov
mov
daa
jmp
or
push
std
mov
ficoml
xchg
lahf
and
inc
sarb
push
jno
cmp
mov
mov
aaa
xchg
into
mov
lds
sub
xor
adc
inc
mov
fdivrl
fisubs
out
push
cli
adc
cmp
popf
xor
sbb
xor
jb
clc
repz
lods
sar
les
testl
pop
lock
cmpsb
push
lret
xchg
jne
sbb
ret
mov
adc
into
aam
xor
fiadds
jmp
lods
in
ds
and
ja
jge
xchg
sbb
jb
into
inc
fisttpl
fsubrl
cmp
mov
xchg
jp
inc
cld
cmpsl
pop
pop
out
fwait
pop
enter
xchg
xchg
inc
and
add
add
cli
aaa
imulb
repz
sub
mov
sahf
add
xor
pop
repnz
mov
push
adc
inc
outsl
mov
adc
cwtl
aam
and
popa
inc
call
xchg
testb
and
cwtl
mov
push
xchg
mov
mov
rclb
mov
aaa
mov
push
mov
clc
push
and
mov
mov
js
or
in
xor
xchg
scas
mov
cmp
shrb
mov
cmp
dec
insb
loope
lds
xorl
mov
imul
add
hlt
mov
xor
fs
xchg
rcl
cmc
es
xchg
fisubrs
xchg
xchg
clc
xchg
dec
in
ljmp
xor
aam
mov
xchg
int
and
xor
sahf
loopne
inc
push
or
iret
xchg
inc
mov
dec
daa
and
pmaddwd
pop
lahf
xor
int
xor
lods
scas
add
lock
rcrb
lea
adc
adc
cmp
xchg
jmp
ljmp
fcompl
les
pop
pusha
dec
dec
in
or
push
add
out
daa
adc
cwtl
xor
stos
mov
inc
mov
or
aad
sub
jmp
test
jge
adcl
sub
sub
cld
sarb
aad
dec
lea
ljmp
lods
popf
xorl
mov
and
mov
mov
fsubl
test
scas
in
xchg
xchg
cmp
ds
xor
jae
mov
mov
mov
ljmp
mov
sbbb
repz
mov
xchg
addr16
cmp
push
test
sub
pushf
pop
ja
sbb
mov
pushf
xchg
sbb
inc
cltd
jo
xor
or
mov
mov
add
xor
out
xchg
rclb
imul
dec
clc
pop
rep
dec
je
dec
mov
stc
cmc
outsb
xchg
movsb
fsubl
inc
in
fstpt
jnp
mov
dec
cmc
loopne
push
mov
out
dec
out
sub
add
pushf
in
xor
push
xchg
mov
inc
fidivrl
mov
outsb
pop
add
jb
xchg
jae
push
cmpsb
xchg
xchg
into
push
loop
in
jl
fisttpll
int
mov
addr16
inc
dec
dec
xchg
cwtl
mov
push
pop
mov
sub
in
add
mov
add
pusha
or
sub
inc
xchg
xchg
aad
add
sub
fisubrs
dec
test
push
fwait
aaa
xlat
xchg
shrl
rcll
push
add
ljmp
fwait
test
and
clc
jne
in
imul
mov
xor
or
fisttps
push
xor
sahf
cmp
jbe
lcall
xor
cmp
mov
test
loopne
sub
add
mov
adc
mov
ret
repnz
push
sub
mov
xchg
jmp
xchg
cli
aas
ss
adc
pop
dec
in
mov
lock
xor
xor
icebp
arpl
dec
arpl
pop
xchg
lret
xchg
or
shll
jns
and
das
and
jnp
stc
ljmp
cmpsb
inc
sbbb
das
pop
aam
xchg
icebp
inc
sub
rclb
sbb
sbb
in
cmp
or
or
lcall
xchg
out
mov
int
mov
repnz
mov
sub
ss
sub
test
mov
or
stos
and
cmp
lcall
mov
mov
inc
mov
xor
xor
icebp
xchg
shrb
mov
xchg
adc
inc
mov
cmp
mov
fwait
xchg
std
lods
ss
lock
xchg
add
inc
cmp
lock
lcall
repnz
push
arpl
xor
sbb
mov
repz
divb
mov
movsb
xchg
icebp
xchg
cmp
inc
shrl
repz
jmp
mov
nop
mov
mov
lods
ss
mov
mulb
and
nop
ja
nop
mov
icebp
xchg
jp
inc
lock
jmp
mov
mov
hlt
mov
mov
cmp
inc
xchg
outsl
inc
and
mov
movsb
icebp
je
mov
lock
xchg
xor
test
adc
lock
jp
jmp
mov
nop
xor
mov
lods
imul
jp
and
nop
jno
nop
mov
icebp
inc
lock
cmp
jmp
mov
mov
out
pop
ljmp
xchg
pop
xchg
in
push
cmp
lcall
mov
push
adcb
inc
lahf
mov
add
out
stc
dec
gs
fists
push
aam
push
and
bound
inc
stos
ss
adc
push
mov
cltd
xchg
push
lahf
add
sahf
push
sub
es
in
loope
test
add
xor
cmc
push
lock
sbb
cmp
pop
mov
data16
xchg
mov
jns
or
scas
dec
mov
sbbb
cmp
xchg
sub
das
popa
fdivs
pop
shlb
shll
jecxz
test
ds
rclb
mov
adc
sbb
push
dec
sti
in
addr16
jle
mov
mov
test
pop
cmp
fisubrl
data16
pusha
and
cmc
adc
je
std
push
lcall
jns
imul
in
scas
xchg
js
rclb
movb
xchg
jb
mov
push
in
xchg
xchg
mov
add
sbb
push
mov
adc
outsl
ljmp
orb
jecxz
cli
mov
xor
test
adc
inc
or
xor
xchg
sub
or
xor
scas
and
ljmp
cmpb
pop
inc
xchg
mov
sbbb
sti
popf
aam
js
mov
mov
xor
sti
sbb
jmp
dec
aam
mov
cmp
data16
xchg
enter
jbe
dec
mov
pop
push
adc
jbe
jo
or
iret
mov
sub
add
lds
xchg
cmpb
mov
ret
and
mov
lods
jg
pop
xor
ficoml
xchg
mov
cltd
in
sub
ret
sub
das
jae
push
xchg
inc
pop
push
add
icebp
lcall
xchg
icebp
or
test
jns
movsb
aam
adc
mov
mov
fstl
cli
and
mov
mov
idivl
dec
mov
xchg
xor
dec
insl
pop
sahf
inc
sarl
repz
cmp
xchg
scas
mov
out
fs
jno
jne
bound
inc
loop
and
sahf
push
stc
lods
or
outsb
mov
ret
pop
ja
sub
cmpsb
xor
lcall
jne
ljmp
mov
popf
icebp
mov
jmp
outsl
stc
mov
jae
cmp
jnp
mov
icebp
and
dec
inc
cmp
add
mov
dec
cmp
test
out
loopne
mov
mov
and
or
add
iret
mov
imul
ljmp
icebp
repz
mov
lret
cmp
aas
stc
inc
dec
cmpsb
or
mov
aas
stos
into
mov
cmpsl
outsl
lret
mov
cmp
nop
sbb
insl
dec
rcll
xlat
stc
insl
ja
push
mov
das
push
add
pop
mov
mov
sub
jp
add
mov
sbb
adc
inc
and
push
or
fisubrs
pop
pop
fstpl
int
inc
nop
dec
add
mov
ja
mov
sub
xchg
dec
xchg
cmp
clc
sbbl
in
and
dec
push
pop
dec
lods
sti
cmp
in
push
addr16
fidivs
mov
cs
mov
push
es
daa
cmc
sbb
jmp
popf
add
cltd
mov
or
scas
pop
and
les
mov
les
inc
bound
test
jae
int
shll
mov
daa
cwtl
cmp
out
xor
aam
mov
cmp
in
cmp
pop
dec
clc
or
call
adc
lock
loopne
in
jge
sub
dec
xchg
pop
sbbl
fdivs
shrb
outsb
inc
sahf
dec
sbb
loop
dec
add
pop
popf
mov
dec
daa
sub
pusha
cmp
lret
jne
mov
bound
mov
data16
lret
loope
mov
xchg
or
mov
lods
cmp
mov
out
sbb
push
sbb
mov
rolb
fwait
cwtl
mov
xchg
mov
scas
fdivp
arpl
add
push
repnz
and
mov
jle
cmp
cmp
int
stos
popa
xchg
pop
shll
cmp
pop
sub
stos
cmp
testb
cmpb
mov
cmpsb
cmp
lock
bound
xor
cmpsl
pop
ds
xchg
aas
inc
fiaddl
lods
mov
cmp
mov
loop
into
sbb
sub
jns
mov
scas
pop
cmp
rcrb
xor
xchg
xchg
adc
leave
ret
loopne
add
adc
in
es
cmpsb
testl
ret
sub
jmp
pop
jbe
cld
das
jp
mov
jo
cmpsb
jmp
repz
mov
ljmp
in
xchg
inc
pusha
and
bound
daa
cmp
xchg
jne
mov
mov
cmpsl
pop
xchg
pop
loop
cmp
imul
imul
ss
orl
or
mov
xlat
outsl
ret
mov
ret
das
jae
and
pop
add
fisubl
stos
xchg
mov
push
sub
jo
mov
adc
mov
cmp
xchg
rol
test
stos
cmp
in
inc
mov
sub
mov
mov
xlat
into
loopne
xor
rcll
xchg
dec
push
adc
jmp
adc
and
xchg
mov
jbe
lods
out
insb
inc
aas
and
cs
fistl
sub
jle
repnz
jb
lcall
lds
lods
stos
jp
push
mulb
je
ds
add
cmp
or
in
dec
cmp
or
nop
mov
mov
sbb
out
stos
dec
mov
cmp
test
outsl
lea
and
je
call
pop
movsl
or
push
push
in
das
repz
scas
jg
icebp
cli
lock
das
leave
cmpsb
adc
mov
or
push
and
test
in
push
cmc
sahf
imul
jo
fwait
xchg
cmp
in
xchg
xchg
shll
cli
jmp
pusha
and
std
inc
cld
testb
inc
and
jae
dec
cmp
lea
xchg
push
push
fs
movsl
movsl
fidivrs
rorb
cmp
mov
sub
push
xor
and
lahf
lods
mov
sub
fldlg2
mov
dec
inc
rorl
xchg
push
sbb
cmp
out
jns
sub
ljmp
mov
sbb
cld
shlb
lret
popf
addr16
pop
mov
arpl
pusha
into
jg
js
xchg
int3
mov
xor
ljmp
mov
imull
jp
bnd
cmp
or
mov
stos
mov
mov
xlat
js
js
bnd
cs
std
jo
int
orl
lock
add
and
add
mov
jnp
repnz
bound
push
sbb
push
jecxz
xchg
add
adc
cwtl
xlat
mov
xchg
mov
cli
and
in
and
push
xchg
cmp
test
movsb
in
sub
popf
ja
mov
cmpsl
adc
shlb
cmp
test
mov
outsl
and
nop
push
jo
add
mov
pop
arpl
movsl
mov
mov
or
bound
jb
fsubrl
mov
ds
lods
in
mov
and
inc
hlt
inc
sub
int
or
jae
popf
inc
inc
xchg
adc
xor
jb
push
clc
xchg
lret
adcb
dec
inc
cmp
and
enter
rorb
loop
ret
out
das
sub
sbb
push
stc
adc
jae
push
fdivrl
dec
ss
pop
sub
popa
movsl
push
arpl
stc
mov
clc
add
std
push
adc
cmp
inc
mov
jae
movsb
cwtl
lcall
call
lret
lea
mov
aam
xor
jmp
pop
jg
cmc
push
mov
aam
or
dec
lret
cltd
and
loop
popf
idiv
pop
push
call
test
push
jge
and
subl
cmp
dec
or
cmp
or
cmp
cmpsb
sarl
inc
jecxz
cmp
adc
pop
call
lods
push
jns
mov
es
sub
mov
cmp
xchg
out
ret
insb
mov
sub
adc
pop
jg
mov
dec
pop
jbe
pop
mov
arpl
jbe
cmpsl
inc
or
cmp
sbb
xchg
mov
pop
sahf
jp
lahf
setbe
clc
repz
in
inc
sbb
mov
lds
mov
test
cld
sbbl
icebp
xor
repnz
std
fdivr
std
adc
mov
mov
shlb
mov
stos
pushf
add
notb
repz
or
popa
add
xor
cmpl
sahf
into
addb
push
cmp
out
push
mov
pop
in
or
cmp
pop
movsb
xchg
adc
jp
push
inc
in
push
mov
xor
fcmove
mov
jl
mov
adc
movsl
mov
sub
or
repnz
inc
mov
mov
insl
cmpsb
xchg
jo
or
xchg
in
aam
add
or
clc
cwtl
test
test
in
pop
fisubs
and
scas
mov
dec
xchg
sub
cmc
sbb
icebp
mov
fcmovnb
mov
cmovno
xor
or
lcall
mov
push
jb
mov
sub
ret
rcrb
pop
ljmp
or
cmp
push
cmp
dec
pusha
pop
add
jno
ss
sahf
pop
sbb
jle
cli
data16
jnp
dec
or
out
mov
mov
xchg
mov
jbe
pop
nop
mov
push
mov
and
adc
repnz
repnz
mov
mov
inc
out
add
cmpsl
cmp
stos
loopne
or
ficoml
add
cs
icebp
int3
sbb
jmp
xchg
push
loope
push
pushf
cmp
cwtl
lcall
jge
bound
push
cmc
mov
sbb
or
mov
mov
iret
sub
cmpl
test
lahf
cmp
imul
jb
imul
inc
add
ret
ja
mov
xlat
cmc
hlt
mov
pop
mov
or
aad
sti
sti
cmp
hlt
loop
cmp
je
xchg
or
mov
mov
cmp
loopne
in
jp
fwait
push
popf
mov
repz
sub
stc
test
adc
and
sub
pusha
movaps
fsubs
faddp
imul
cmpb
and
pop
sbb
retw
inc
add
mov
insb
ret
jae
adc
inc
push
xchg
mov
pop
mov
sbb
push
adc
divb
mov
pop
push
cmpsb
arpl
mov
rorb
mov
sahf
movsl
mov
mov
sub
xchg
mov
mov
xchg
fisubrl
mov
sub
mov
mov
shrl
arpl
movsl
mov
das
aam
jl
mov
cmp
xchg
jbe
jge
hlt
pop
add
inc
mov
dec
fistpll
loope
ss
loope
call
insl
add
popf
push
sub
mov
int
lds
cmp
mov
sub
jo
jb
rcrb
ds
xchg
stos
mov
repnz
mov
mov
adc
pop
and
mov
movsl
mov
dec
loope
js
call
mov
das
ss
fwait
inc
xlat
mov
fsubs
sbb
sbb
popf
xchg
pop
pop
mov
outsl
pop
pop
outsl
outsl
insb
popf
into
pop
daa
mov
jge
cmp
out
stos
jl
xor
es
test
hlt
xchg
test
lock
sti
push
xchg
insl
addr16
cmp
lret
or
mov
idivb
pop
shl
sub
nop
xchg
dec
int3
sti
test
movsl
jl
std
in
clc
cld
cmp
and
lock
ret
xor
mov
cmp
sbb
lea
sub
adc
mov
sub
xchg
imul
xchg
sub
mov
rcrb
pop
test
adc
ret
push
scas
and
jle
into
sarb
leave
sbb
pop
pop
or
adcb
pop
adc
adc
cmpsl
xor
add
std
cmpb
pop
scas
leave
push
loopne
xor
mov
ret
xchg
into
cli
mov
in
imul
jno
pop
cmpsb
sub
xchg
mov
ds
xchg
xorb
in
in
xchg
nop
add
nop
in
adc
jg
movsb
lret
repz
fistps
xor
in
inc
cli
or
xchg
fcmovnb
lcall
push
adc
cmpsl
mov
or
push
xchg
daa
mov
push
addr16
in
psllw
in
stos
out
lret
inc
and
mov
mov
add
les
aad
inc
out
push
repz
mov
mov
pop
xchg
cmpsl
iret
jns
stos
push
mov
addr16
ficoml
pop
cmc
xchg
imul
and
inc
xchg
dec
int3
mov
jmp
int3
fwait
inc
fstl
sub
pop
stos
lcall
push
imull
das
imul
nop
jae
mov
add
inc
scas
fsub
xchg
aas
jg
jae
xchg
and
xchg
pop
lret
fisttpl
test
xchg
fsubp
addr16
cmpsb
lea
cmp
inc
testb
mov
jle
aaa
mov
cli
ds
into
lahf
loop
sub
sub
rcrl
push
lahf
ret
pop
push
cmpsl
sub
stos
sub
les
dec
xor
testl
call
dec
xchg
sbb
push
push
xor
or
adc
pushf
dec
sub
outsl
mov
fisubrs
sbb
xor
sbb
stos
decb
loop
shr
inc
inc
jns
stc
jb
xchg
cmp
lret
in
xor
fs
shrb
mov
cld
popa
test
jl
mov
popf
jbe
cmpl
xorb
jge
mov
cmp
std
jmp
mov
outsl
fdivr
push
mov
mov
sarb
mov
cmc
enter
out
jno
into
and
mov
pop
push
cmp
movsl
adc
mov
pop
jo
adc
int3
movsl
xchg
mov
xor
cs
pusha
push
shll
mov
sub
dec
cld
or
and
fwait
lea
pop
mov
nop
leave
sub
mov
jge
fadd
add
insl
mov
push
sbb
sub
push
mov
ljmp
dec
mov
push
push
jmp
push
daa
or
enter
xchg
or
data16
adc
xor
and
aad
sub
movsb
mov
repnz
lods
and
mov
insb
js
pop
pushf
outsb
and
jge
mov
sub
pop
and
inc
aam
xchg
xor
int3
rcrb
cmp
xchg
or
cli
popa
je
stos
mov
mov
mov
xchg
and
cmp
or
adc
cmpsl
sti
insb
mull
pop
mov
pop
mov
filds
mov
mov
out
adc
test
add
cld
or
jbe
dec
xor
rorl
mov
pop
push
in
notl
in
shl
repnz
mov
cli
adc
sub
inc
cmp
jbe
xor
ljmp
pop
xchg
cmp
repnz
cmp
movl
add
ret
outsb
lods
mov
add
repnz
into
fcmovne
aas
mov
movsl
sahf
pop
dec
lods
rclb
inc
out
push
jb
sub
les
loope
push
cmp
fbld
pop
xor
sub
push
fnsave
into
lcall
sub
xchg
or
in
cmc
mov
or
inc
arpl
mov
inc
das
adc
clc
les
in
aas
sarb
cmp
xchg
adcb
lods
subl
mov
fwait
jb
xor
xchg
insl
hlt
rclb
xlat
cmp
mov
lock
mov
andb
lret
leave
pop
iret
in
xchg
loopne
add
mov
pop
mov
outsl
std
fstpt
dec
inc
cmpsl
fdivrs
mov
in
xor
jns
imull
das
stc
inc
mov
movsb
push
or
jmp
mov
pop
jge
ljmp
jae
in
test
pop
sbb
fwait
mov
stc
test
xlat
and
out
cmp
and
push
daa
icebp
inc
pushf
movsl
mov
add
test
repz
push
cmp
mov
mov
or
ljmp
inc
sub
scas
lock
mov
mov
idivl
pushf
add
lods
mov
jp
jbe
std
mov
cmpsb
in
ficoml
hlt
pop
daa
fs
fwait
test
or
dec
and
inc
mov
dec
in
cmp
mov
scas
xchg
scas
adc
mov
mov
adc
outsl
mov
ja
cmp
adc
and
xor
fs
incb
cmp
lock
out
push
jg
fisubrs
sbbb
stc
aas
rcrl
sub
jo
xchg
push
jle
into
cmp
jne
inc
dec
inc
and
push
or
lcall
add
out
xchg
jbe
out
mov
or
push
jb
xor
jae
adc
cmp
stos
pop
mov
imul
push
aam
push
or
xchg
ljmp
mov
enter
test
mov
int3
mov
andb
xor
out
arpl
xor
cmp
paddusb
setnp
ret
andb
repnz
jg
xchg
cmp
lods
orb
cmp
sub
call
mov
pop
mov
pop
jecxz
cmp
push
mov
les
scas
mov
pop
pop
xor
das
gs
inc
hlt
cmp
cmpsb
jbe
andb
mov
pop
movsl
lock
push
movlps
movsl
xor
cmpl
pop
outsl
mov
sub
shrl
scas
cmpsl
inc
cmpsb
sub
rcrb
cmpb
mov
lret
add
jmp
sbb
sbb
cs
dec
loopne
mov
lret
movaps
ret
push
or
inc
rol
or
movsl
mov
add
pop
das
cmpsb
adc
add
mov
cmpsl
fs
sbb
xchg
and
xor
loope
decl
sbb
cmp
popf
in
cld
fcompl
cmpb
sub
testb
mov
push
dec
aas
fs
jbe
in
dec
ret
repnz
hlt
xor
in
icebp
cmpl
lock
repnz
jbe
fsubs
je
xchg
xor
cmp
mov
and
sub
mov
xor
mov
scas
xor
lea
mov
movsl
dec
vandnps
clc
push
stc
mov
xchg
das
iret
adc
cmp
mov
pop
pop
shll
dec
add
add
loope
xchg
cmpsb
xchg
arpl
pop
cmp
scas
mov
scas
mov
xor
rorl
lds
jmp
int
fidivl
mov
sub
movsb
arpl
pop
xchg
stc
iret
ja
xchg
insl
xor
xchg
xchg
and
cltd
mov
push
and
sbb
shlb
sbb
shll
push
stc
testl
xchg
pop
pop
idivb
or
cmpsl
jns
mov
cmp
loop
dec
scas
pop
imul
mov
adc
ret
loope
xchg
rolb
inc
cmp
lds
pusha
cld
jle
pop
in
bound
mov
into
fsub
leave
cmpsb
in
push
pop
stc
lcall
in
jb
sahf
lock
fucomip
popf
push
es
xlat
xchg
fnstenv
xchg
mov
ljmp
xlat
inc
ret
or
movsb
ss
lahf
cmpsl
or
test
mov
xchg
and
sbb
adc
in
jae
mov
test
mov
pop
mov
dec
mov
jmp
out
fwait
mov
sub
add
sub
dec
cli
mov
jecxz
repz
mov
sahf
ret
inc
cmpsl
out
pop
xlat
cli
pop
sahf
sub
fiadds
add
inc
repnz
adc
cmpsb
out
push
repnz
repnz
cmc
sbb
cmp
xchg
xchg
leave
adc
mov
mov
popa
jbe
ja
or
dec
mov
inc
sub
sbb
sti
push
xor
in
sub
into
testl
insb
sub
sbb
and
sbb
or
and
cmp
nop
sub
je
cmp
xchg
mov
jbe
mov
push
jb
cwtl
fyl2x
lock
inc
adc
mov
cmpsl
fcoml
movsb
icebp
dec
icebp
leave
jb
push
repz
sbb
fwait
push
icebp
and
int3
cmp
xchg
dec
mov
mov
jo
repz
xor
mov
std
cmp
out
aam
ret
mov
popa
add
test
sbb
ss
sbb
shl
or
xchg
repz
push
mov
mov
popa
push
scas
xor
dec
push
adc
stos
jb
or
cltd
iret
cmc
in
or
mov
inc
out
icebp
mov
pop
or
dec
xchg
fs
ljmp
adc
push
psadbw
mov
and
pushl
test
insl
pop
lods
mov
cli
mov
push
loopne
int3
imul
jbe
xor
mov
jne
iret
sub
call
out
out
adc
icebp
mov
mov
mov
cmpsb
sub
jge
pusha
lds
and
mov
push
lret
sub
or
ljmp
pop
sbb
mov
out
ljmp
popa
and
ds
add
es
cmp
xchg
xor
xor
and
cmpsb
lret
popf
int
es
lods
sub
fsub
arpl
cmpsl
ljmp
scas
xchg
dec
stos
cli
stos
and
jbe
push
xchg
in
imul
pop
jbe
gs
arpl
dec
das
loopne
cmpb
cmp
sub
cwtl
ljmp
inc
and
mov
push
notb
push
and
adc
mov
popa
dec
nop
insl
cmp
pop
stos
mov
push
test
cmpsl
mov
mov
dec
xor
mov
pop
testb
jo
cli
ss
fisubrs
cmp
fdiv
cmp
inc
cltd
mov
cmpsb
pushf
je
push
out
sub
dec
dec
xor
out
cmpsl
sub
fimull
inc
pop
add
hlt
cmp
sbb
stc
fisubs
pop
xchg
or
sub
pusha
test
test
xlat
es
sub
comiss
sbb
mov
imul
je
addr16
gs
in
add
cmp
xorb
mov
xor
mov
inc
out
arpl
push
mov
arpl
inc
xchg
push
scas
pop
pushf
adc
in
xchg
in
out
loopne
imul
testb
test
cmp
xchg
iret
hlt
lcall
push
das
pop
fcom
xlat
mov
inc
xor
mov
xlat
je
sbb
add
ljmp
jmp
mov
sub
jmp
lock
xchg
mov
adc
inc
stc
outsb
cli
ficoms
and
and
sbb
push
mov
lods
push
jb
aaa
adc
xchg
push
mov
pop
in
push
or
mov
and
mov
icebp
jae
inc
push
in
jle
lock
adc
push
cmpl
pop
aam
mov
xor
or
imul
lods
into
out
mov
adc
xchg
in
ja
shlb
sbb
insl
decb
add
add
sbb
lea
xorb
nop
mov
pop
jl
test
cmp
outsb
add
pop
jbe
sub
mov
xor
cmp
add
popf
jno
jmp
xchg
cmp
jns
lock
call
cmp
aaa
mov
repz
insb
ficoms
pushf
outsb
inc
xlat
repnz
mov
adc
nop
packssdw
loope
jae
jmp
mov
push
aam
jecxz,pn
icebp
cmp
clc
mov
add
sbb
mov
cmpsl
push
pushf
les
scas
cmp
cld
jle
cmc
mov
das
mov
push
fwait
sbb
dec
adc
xor
lock
dec
jmp
mov
xchg
mov
add
push
nop
lds
xor
pop
mov
jae
test
cwtl
movsl
push
hlt
iret
aam
mov
push
in
sbb
jb
pop
or
je
cli
arpl
sbb
jecxz
mov
sub
add
fwait
dec
inc
shl
mov
cmpsb
sbb
es
add
sub
jnp
xchg
sarb
cmpsl
dec
jmp
sbb
xchg
xlat
cmpsb
mov
sarl
add
jp
mov
jnp
ljmp
cs
scas
scas
xchg
lock
scas
jmp
xchg
cmpsl
in
test
add
mov
inc
emms
fwait
jns
and
jp
inc
enter
pmuludq
sbb
out
cwtl
test
adc
inc
mov
mov
lock
sbb
int
fs
or
jp
ljmp
loop
cmp
push
and
mov
sbb
pop
push
bound
xchg
sete
sbb
fcompl
mov
jns
inc
xchg
les
xchg
mov
cmp
pushf
fcomp
xchg
les
xchg
in
jge
pop
bound
in
aam
mov
xchg
or
and
loope
sbb
arpl
lock
xor
push
mov
add
shrb
stos
into
out
and
xchg
cmp
rclb
or
jo
dec
fwait
push
mov
cmpsl
enter
xchg
push
mov
mov
sub
iret
add
dec
cmpsl
nop
cwtl
mov
idivb
adc
sbb
push
insb
mov
inc
lods
cli
aas
testl
fbstp
or
cmpsb
rcl
adc
dec
rorb
repz
mov
push
aas
inc
jne
xchg
outsb
and
push
pop
lock
push
divb
sub
lcall
test
dec
jae
mov
loopne
xor
ja
sub
imull
orl
push
mov
in
and
mov
adc
push
mov
mov
daa
cwtl
or
in
jbe
rol
idivl
stos
leave
lret
and
cwtl
icebp
jg
lcallw
xchg
lahf
scas
and
insl
pop
cwtl
adc
mov
and
jmp
xchg
adc
fcompl
add
rclb
jg
dec
sti
fs
adc
dec
outsl
pop
xlat
out
jg
push
cld
lahf
out
cmp
sbb
dec
daa
xlat
fwait
sti
xchg
mov
xchg
cmp
popf
fs
out
out
xor
adc
and
popa
stc
cmp
movsb
cmpb
movsb
cmp
ds
and
movsl
xchg
imul
inc
repz
repz
movl
and
gs
adc
out
sub
ret
pop
xor
and
add
scas
pop
cmc
in
cmp
and
sbb
mov
mov
mov
fisubs
inc
stos
data16
and
or
fs
cwtl
leave
out
xor
xor
sbb
inc
cmp
pop
ficompl
mov
xor
cmc
mov
mov
inc
out
leave
cwtl
mov
dec
hlt
lcall
stc
dec
sub
cmp
test
std
mov
mov
jmp
arpl
mov
push
pop
lods
mov
push
cli
int
sbb
pop
mov
idivb
mov
sahf
stc
dec
dec
nop
lock
inc
out
cmp
mov
mov
mov
mov
mov
sub
jle
cmp
cmp
add
stos
iret
repz
int
cmp
cmpsl
mov
mov
out
inc
ss
sahf
sbb
and
sbb
pop
sub
pop
addr16
lods
xchg
fldl
sbbl
mov
enter
aas
jae
xor
je
mov
and
mov
aam
icebp
sahf
xor
push
xchg
sbb
outsl
inc
mov
loop
or
lods
daa
insb
pusha
ljmp
mov
xchg
pop
pop
jnp
and
pop
mov
xchg
push
mov
mov
cli
pop
dec
out
ret
xlat
daa
sub
inc
pop
add
sbb
cmc
mov
mov
cmp
cld
stc
and
shl
aad
mov
mov
sbb
stc
dec
lods
ss
xor
and
xor
jno
mov
movsb
aaa
scas
adc
loope
cmpsb
jecxz
push
sti
xor
inc
mov
xlat
xchg
lods
icebp
cmpl
aaa
mov
add
dec
cmp
jne
xchg
xchg
addr16
add
adc
or
or
fnstsw
ljmp
lock
andl
ss
js
clc
xor
ret
inc
xchg
out
insb
mov
jb
mov
loope
dec
cli
cmp
jle
scas
xorb
adc
pop
scas
ss
jb
cmpsb
imul
lahf
or
lods
fisubs
xor
mov
or
xchg
mov
hlt
xor
xchg
sti
jo
or
mov
and
aaa
and
xchg
repz
leave
mov
popf
mov
ss
cmpsb
mov
mov
mov
mov
xchg
or
clc
scas
add
push
push
in
sub
roll
mov
mov
andl
es
ljmp
jb
mov
xchg
xchg
out
or
or
or
mov
push
ja
cmp
add
imull
test
aam
or
sti
mull
dec
icebp
ss
mov
inc
push
rolb
cmp
clc
mov
add
pop
loopne
add
in
jg
xorl
dec
jb
inc
mov
jnp
out
shrb
inc
mov
out
mov
idivb
insb
xchg
inc
push
inc
pop
enter
repnz
sahf
dec
rcr
dec
mov
ja
pusha
xchg
xor
int
add
movl
mov
nop
insb
mov
push
lods
movsb
in
cltd
insl
xchg
ja
inc
mov
in
subb
movsb
and
xchg
jno
notb
in
xchg
pusha
and
xlat
sti
or
decb
js
jbe
adc
faddl
push
sbb
cmp
add
repz
inc
sarb
sub
lahf
mov
popf
pop
aaa
mov
ret
push
mov
lock
cmpsl
repz
push
ja
jecxz
cmpsl
mov
xor
sbb
loope
pop
cld
dec
adc
mov
mov
xchg
ss
pop
pop
mov
cmp
subb
test
cmp
push
imul
ss
lock
lea
mov
mov
std
fcmovb
mov
sub
jmp
jecxz
clc
xchg
xchg
sar
orl
inc
in
mov
test
push
push
cwtl
push
mov
xchg
test
and
movsb
push
jmp
ss
adc
mull
arpl
and
lret
cmp
cmp
jl
jo
mov
sub
in
das
jg
imul
ljmp
ss
mov
les
int3
xchg
push
xor
fdivp
pop
dec
xchg
mov
sub
aad
xor
fstpt
push
cwtl
mov
or
ret
jo
xor
cmp
dec
sub
jnp
mov
sbb
loope
mov
jl
mov
fidivrs
jb
enter
pop
xor
repnz
or
xor
mov
and
mov
jo
or
mov
cmpsl
shl
xchg
mov
xchg
push
ret
int3
xor
mov
mov
test
mov
mov
into
dec
mov
inc
rcrb
scas
in
aaa
push
jbe
cwtl
hlt
pop
outsb
mov
scas
jecxz
add
adc
cmpb
pop
cmp
xor
adc
sahf
cmp
arpl
into
in
cmp
adc
andb
adc
jno
aaa
shrb
mov
jecxz
mov
cmp
and
sub
mov
jo
fcompl
inc
jo
je
adc
movsl
and
shl
icebp
mov
hlt
jno
xor
idiv
xchg
mov
or
fmull
in
mov
or
pmovmskb
inc
adc
ja
dec
jecxz
dec
mov
cmp
out
ds
shr
jb
cmp
rclb
push
ljmp
mov
xchg
test
out
jge
pop
jl
shl
add
inc
idivb
inc
fdivrs
jno
sbb
or
mov
xchg
dec
mov
jb
push
scas
cli
ss
fwait
call
sbb
xchg
sbb
scas
jbe
andb
sub
xchg
std
mov
ja
cltd
mov
xchg
adc
int3
cs
add
out
mov
insb
or
mov
hlt
lds
pop
jle
call
lock
in
dec
out
jo
jmp
mov
call
sbb
mov
sub
mov
imul
jg
int
stos
ljmp
ljmp
xchg
jecxz
outsl
movsb
mov
cmp
mov
and
imul
cmp
popf
dec
jmp
sbb
jnp
inc
ljmp
jecxz
cmp
jmp
fstps
stc
mov
xchg
xchg
adc
mov
jl
mov
and
rclb
jno
dec
fwait
repnz
adc
sbb
cltd
xchg
adc
xchg
pushaw
mov
jbe
cld
cmp
or
call
leave
popa
out
sahf
std
cmp
test
cmpb
push
aam
mov
dec
cmpsl
inc
pushf
inc
dec
xchg
out
fs
in
repz
cmp
mov
inc
add
stos
cltd
mov
stos
pop
sbb
cltd
mov
sti
imul
mov
push
cmc
lahf
pop
push
push
jl
inc
adc
stos
xor
es
pop
test
pop
mov
jnp
ss
or
insb
into
push
jnp
std
mov
cmp
push
add
ljmp
fnsave
adc
xchg
pop
mov
cmp
test
mov
mov
cmp
mov
sub
stos
in
cmp
stc
pop
fdivrl
cmp
sub
adc
stos
aaa
sti
in
stos
lods
adc
imul
mov
cmp
mov
jl
cmpsl
popf
or
and
and
movsb
cmp
xchg
jo
scas
or
jg
jmp
sub
enter
sbbb
fwait
stos
out
mov
mov
stc
nop
push
sahf
into
orb
xor
aaa
cmp
cld
outsl
xchg
jge,pt
fnstsw
xchg
push
cltd
sub
pop
push
iret
lahf
mov
into
xchg
jecxz
sahf
fyl2xp1
pop
pusha
or
aad
sti
mov
push
outsb
adc
or
lcall
lret
mov
mov
push
add
outsb
insl
aas
aam
lret
jb
mov
jmp
nop
add
sub
popa
in
push
and
pop
into
push
aad
push
popa
cmp
and
add
subb
scas
aaa
push
xor
stc
push
jg
adc
daa
adc
dec
sbb
ret
mov
clc
and
jecxz
fucom
or
adc
adc
cld
jmp
sub
sti
push
cld
lcall
notl
sar
mov
xchg
and
push
xorl
cmpb
or
cs
ljmp
mov
dec
ja
aaa
cmp
test
cmp
sbb
cli
lods
mov
push
fidivs
jle
cmp
push
mov
stos
cmpsl
cwtl
stc
stos
pop
sahf
lahf
out
xor
mov
mov
adcl
in
sarl
dec
lcall
xor
ss
mov
call
adc
in
sub
xor
inc
jbe
dec
movsl
dec
repz
xchg
jae
mov
loopne
pop
ja
cmp
addb
mov
sub
clc
jge
xchg
mov
std
cmpsb
xchg
test
mov
push
mov
mov
pop
cmp
clc
cli
mov
cwtl
dec
xor
sbb
lods
push
cli
jbe
out
je
subb
or
xchg
inc
cmpsl
mov
cmpsl
es
sti
out
or
and
push
inc
xchg
mov
in
or
dec
sub
in
add
xchg
pop
sub
and
ja
cmp
lahf
mov
cld
dec
jnp
ficoml
mov
adc
adc
rcll
mov
ljmp
jb
stc
pop
cmp
cmp
mov
lret
sbb
jns
cli
xchg
in
lcall
repz
lods
cltd
aam
push
xchg
add
xchg
das
pop
fistpll
sbbb
pop
xchg
test
sahf
and
push
hlt
xchg
inc
pop
sbb
int3
mov
add
ljmp
mov
xchg
or
mov
pop
xlat
movsb
mov
out
pop
cmp
fninit
std
std
xchg
jb
mov
stos
fnstenv
add
cmp
cmovno
xchg
arpl
pop
xchg
fs
in
adc
jmp
xchg
mov
xchg
mov
inc
lret
insb
js
xor
ds
adc
cmp
fsts
mov
out
pop
enter
sarl
mov
jle,pt
stos
jecxz
icebp
dec
fsubl
daa
pushf
subl
cli
ret
pop
pop
test
jp
xor
dec
cmp
xchg
in
jl
xchg
scas
jg
out
es
nop
cmp
fstps
scas
sbb
adc
outsb
leave
cmc
mov
adc
sub
or
orb
xor
daa
mov
pop
inc
cmp
inc
or
fdivl
ss
xchg
jp
dec
inc
sarl
aaa
mov
pop
mov
scas
fstl
sub
jge
xor
and
js
dec
loopne
pop
and
fwait
aas
sbb
pop
and
es
cmp
pop
mov
and
fwait
add
sub
cmp
ljmp
pushl
xor
pop
aam
xor
lods
out
iret
mov
xchg
dec
clc
mov
div
lock
js
out
ds
mov
pop
ja
or
fwait
dec
ss
in
cmpsl
dec
divl
sbb
xor
jge
push
lods
jnp
jmp
mov
cmpsl
stos
xchg
popf
cli
push
jmp
cmpsb
or
lods
jo
jle
push
add
mov
ret
js
int
dec
lret
negl
cs
xlat
mov
std
sar
cltd
in
xor
leave
stos
inc
sbb
mov
sub
push
mov
mov
cwtl
mov
test
jp
inc
lods
jo
loopne
mov
loop
or
lock
cmc
add
mov
cwtl
lcall
xor
fwait
stc
add
ret
sahf
imul
scas
hlt
jo
movsb
mov
aam
mov
jnp
int
mov
push
pop
add
or
arpl
inc
repnz
loope
loop
aad
out
jnp
sub
pop
mov
or
cmpsb
test
jg
inc
pop
or
and
clc
mov
dec
loop
push
data16
cld
mov
mov
push
bound
push
popf
cltd
les
inc
push
lahf
mov
fs
cmp
cmp
fistpl
cwtl
sbb
cwtl
testl
es
jo
sbb
and
mov
sub
jmp
and
and
add
mov
daa
fst
and
testl
fdivrs
cld
xchg
mov
pop
mov
out
mov
nop
jne
sub
daa
xor
cld
push
or
fldt
sbb
mov
cmpl
mov
and
daa
mov
enter
push
cmc
cmp
jge
inc
cmp
ret
add
aam
enter
mov
jge
xlat
fsubrl
cmc
jb
push
aas
cmpl
aaa
pop
cmp
mov
mov
push
adc
mov
jecxz
sbb
fcomps
out
lock
cli
sbb
mov
insb
mov
dec
and
cmp
adc
push
dec
and
mov
dec
xor
mulb
jp
cmp
cmp
ret
fisubs
jb
cmp
in
cmp
mov
adc
add
dec
popf
inc
andl
sub
das
out
lods
pop
add
and
xor
mov
add
jbe
dec
sbb
ret
popa
xchg
enter
das
hlt
mov
jb
jmp
mov
xor
stc
push
js
xchg
inc
inc
loopne
call
cmpsl
shr
cmp
enter
push
fstl
mov
inc
jl
shlb
lock
stos
jge
jmp
sbb
repz
bound
dec
mov
dec
aas
cmp
cmpsb
in
xchg
xor
int3
inc
rcl
mov
fists
or
sub
outsl
cmpsl
lahf
loop
clc
mov
mov
mov
fmul
nop
pop
jae
ficomps
sub
lcall
mov
cmp
jb
dec
pop
iret
pop
sbb
jecxz
and
mov
lods
mov
bound
pop
pop
orb
inc
sub
mov
push
call
pusha
lcall
mov
cmpsl
movsl
or
push
cmc
cmpsl
in
pop
mov
mov
mov
dec
icebp
into
ss
andb
mov
mov
xor
mov
les
cmp
nop
xor
lods
cmp
repz
dec
cmpsb
mov
xchg
push
insl
and
cmpsl
and
add
xchg
pop
fiaddl
in
gs
out
mov
xchg
and
and
xor
cmpsl
mov
fwait
lock
loop
cmpsb
xlat
cmp
cli
xor
mov
paddq
loope
dec
xorb
adc
daa
jnp
sarb
inc
jecxz
cmp
cmc
dec
pushw
repnz
mov
mov
lods
cmpl
cwtl
hlt
cmp
cmp
into
xchg
pop
cmc
out
pusha
sar
or
push
or
mov
cmp
stos
add
out
dec
sbb
sahf
mov
mov
in
jle
cs
mov
clc
jmp
data16
or
lret
movsb
pavgb
or
fbstp
mov
aad
dec
leave
cmp
ljmp
cmp
popf
push
lret
or
xlat
arpl
pop
cli
xchg
inc
or
mov
add
or
adc
loop
mov
sti
stos
jbe
jl
cmpsb
mov
cli
je
fstcw
cmp
mov
xor
cld
push
call
daa
into
icebp
push
xchg
push
nop
cmp
pop
dec
mov
or
cld
arpl
clc
mov
fisubrl
push
inc
mov
cmp
nop
fwait
pop
mov
data16
xchg
mov
xor
fsincos
jbe
mov
xchg
mov
sub
xor
cwtl
enter
or
insb
pop
and
scas
lahf
add
cmp
xchg
sub
sbb
aam
scas
fldt
cmpsb
sbbb
lds
pop
cld
push
mov
adc
dec
sbb
hlt
inc
out
gs
cmp
sub
add
test
mov
in
outsl
xchg
mov
clts
insl
mov
out
push
cs
and
dec
pop
lcall
pop
andb
pushf
rcl
out
test
xchg
enter
inc
enter
jecxz
xchg
inc
cmp
mov
fs
insb
jo
arpl
mov
ret
data16
mov
mov
repz
mov
aam
inc
push
jmp
dec
lahf
les
out
stos
outsl
add
push
and
idivl
mov
sub
es
out
push
mov
cs
xchg
lret
sub
or
stc
and
loopne
idivb
cld
mov
pop
fdivp
mov
imul
lret
lahf
jl
hlt
mov
jmp
jno
repz
ret
pop
test
lcall
xchg
jns
scas
cmp
mov
adc
mov
stos
dec
sti
adc
push
fs
lods
lock
clc
xchg
cmp
movsb
and
cmp
pop
dec
shr
dec
fdivp
loopne,pt
dec
xchg
pop
enter
repz
pusha
jl
cltd
xchg
mov
repnz
jne
jge
xchg
fxch
and
mov
stos
jg
mov
or
mov
mov
jl
sub
out
xchg
fcoms
mov
sbb
pushf
in
cmp
ficoml
mov
lret
popf
loop
xchg
test
mov
push
inc
xchg
dec
mov
xor
mov
stos
mov
ljmp
jge
pop
inc
pop
aaa
jp
sahf
pop
jns
and
sar
in
pop
jp
enter
adc
lock
pop
out
mov
les
sarl
or
inc
gs
shll
aas
sub
xor
subb
inc
xchg
xchg
lods
push
push
xchg
xlat
bound
jp
aaa
or
leave
stc
inc
jae
sbb
xlat
repnz
scas
push
push
int3
aad
dec
xchg
mov
in
dec
inc
stos
lret
xchg
xchg
jg
mov
inc
mov
or
jo
and
push
loop
test
inc
sub
lock
dec
clc
fxch
cmp
ds
dec
and
push
sbb
adc
inc
in
jo
jb
fwait
mov
fmull
or
sbb
lcall
adc
jo
xchg
int
add
inc
adc
jb
adc
lea
fs
mov
loopne
jle
in
arpl
js
xchg
repz
je
lds
dec
mov
in
inc
xor
sub
out
mov
push
sub
sbb
or
or
dec
hlt
test
aaa
and
mov
and
mov
insl
sub
mov
push
ret
push
inc
das
jecxz
xchg
sub
sub
inc
call
sahf
xchg
stc
xchg
push
or
lods
mov
adc
mov
cmpsl
jmp
xchg
ljmp
inc
add
jae
jns
xchg
mov
jo
inc
cmp
loopne
pop
add
jb
ds
cmp
pop
xchg
mov
and
call
and
fidivrs
jns
insl
xchg
push
fists
sub
icebp
add
rcrb
sub
and
xor
out
sub
cld
add
fistpl
mov
cmp
fstpt
leave
push
cld
repz
mov
hlt
cmp
mov
addr16
pop
shlb
cmp
dec
xor
lock
push
cmp
scas
jmp
pop
xchg
inc
and
shll
lock
rorb
inc
lock
xor
fcomi
sub
enter
mov
xor
mov
in
jecxz
repnz
ljmp
xchg
mov
andb
in
clc
mov
jb
xor
in
mov
sub
popf
ljmp
movsb
imul
adc
xor
in
ja
dec
sub
adc
mov
jns
mov
mov
xchg
outsb
adc
mov
mov
sub
mov
or
xchg
cmp
sbbb
pop
jae
pop
and
fs
les
loope
mov
fdivp
and
fs
andb
mov
data16
add
jmp
mov
dec
pop
dec
adc
xchg
cmp
mov
je
xchg
roll
xchg
mov
push
pop
mov
and
leave
hlt
mov
push
mov
inc
nop
jne
dec
sub
dec
xchg
sub
mov
cmp
mov
adc
mov
pop
mov
aas
dec
mov
into
xor
gs
movsl
push
fs
mov
mov
orl
sbb
shll
stc
hlt
push
dec
mov
cmp
das
dec
mov
sbb
sbb
mov
adc
divb
adc
in
jb
clc
ljmp
orb
or
or
jbe
mov
jb
sub
xor
add
cmp
lods
or
cmpsl
aas
push
jle
mov
push
push
mov
xlat
xchg
insb
mov
shlb
xchg
sbb
rclb
push
mov
in
jo
andb
jae
inc
sahf
loop
in
mov
mov
sarb
imul
and
dec
mov
popf
pop
jns
das
mov
test
aad
pop
loop
pop
into
in
out
andb
dec
pop
sbb
cmp
es
inc
roll
xor
int3
inc
lcall
ja
cmp
push
adc
addr16
adc
mov
rclb
sub
add
nop
out
push
orl
test
mov
add
test
outsb
cmp
adc
xor
sub
mulb
cmp
dec
sub
stos
test
cmpsb
pop
popa
inc
scas
test
pop
mov
std
cmpsb
xchg
cli
rolb
hlt
shlb
out
or
cmp
stos
insl
call
out
mov
mov
fcom
mov
add
sub
mov
mov
lret
xchg
jnp
inc
inc
lock
test
xchg
fiaddl
mul
imulb
lods
shl
jp
adc
repnz
cmpsb
or
inc
pop
xor
jb
fmul
push
int
adc
xor
cmpsb
and
repnz
xchg
jnp
adcl
jbe
xor
jns
stos
xchg
cmpsb
loopne
shlb
add
or
adc
push
jb
shll
movsl
jb
add
repnz
and
add
fldcw
mov
mov
lahf
add
pop
fidivrl
test
add
xstore-rng
cmpsl
test
mov
mov
mov
sti
rclb
bound
xor
rcll
push
mov
arpl
mov
ljmp
jecxz
ret
push
ljmp
out
repz
sbb
and
in
mov
add
nop
cld
pop
xlat
push
and
jae
es
xchg
and
jns
insl
xchg
mov
dec
mov
lahf
arpl
cwtl
dec
lds
icebp
addl
xor
loope
movsl
mov
and
loopne
xchg
add
flds
mov
push
fdivs
sub
cmp
mov
or
mov
mov
cmc
lea
mov
aaa
mov
pop
inc
mov
test
scas
sub
adc
pop
sti
pushf
pop
int3
adc
xchg
aas
mov
mov
lock
mov
cmpsl
xor
sbb
xlat
adc
dec
js
xor
push
mov
dec
jne
inc
in
outsb
adc
nop
clc
and
dec
lcall
and
mov
or
or
jp
jnp
mov
insl
xchg
dec
stos
or
test
jle
movsl
xchg
dec
cmpsl
in
and
sbb
daa
ja
popf
jbe
add
sbb
sbb
jp
cmp
movsl
popa
leave
sbb
clc
cmpsb
or
add
push
data16
xchg
push
mov
xchg
sti
or
nop
aas
test
jo
xor
ljmp
push
popf
jnp
or
add
jne
or
and
adc
fcoms
xchg
jge
xchg
jmp
xor
add
daa
insb
add
idiv
inc
clc
jnp
pop
jbe
mov
xchg
sahf
dec
aas
adcb
lret
mov
xor
int
call
jb
loope
mov
popf
stos
std
dec
inc
push
xor
mov
pop
lock
int
mov
pusha
mov
xlat
mov
dec
fdivrs
in
xor
cmpsb
dec
test
cli
ja
int
push
mov
lea
mov
mov
fidivl
cmp
dec
das
sub
cmc
std
jno
subb
xchg
jae
jnp
cmc
ss
cld
movb
mov
mov
adc
add
xchg
xchg
dec
outsb
inc
xchg
sbbb
sti
int
les
mov
dec
sahf
add
pop
sbb
test
movsb
xor
lcall
ja
dec
faddl
lahf
sub
push
jp
icebp
aaa
xor
pop
in
pop
mov
sub
and
jp
jae
mov
mov
iret
push
in
add
shlb
or
call
dec
fsubrs
jp
hlt
cmp
lahf
jecxz
mov
lock
mov
js
lret
jb
cli
jo
ret
or
pusha
push
sbb
sub
xor
sbb
or
jmp
fadds
xchg
jo
fs
nop
lret
mov
out
cmp
dec
lods
mov
stos
insl
int
push
xor
test
add
lcall
sbb
sbb
jb
jnp
xchg
and
or
xchg
imull
mov
ret
add
mov
push
cmp
sub
mov
push
pop
mov
push
loop
mov
push
mov
mulb
popf
ror
leave
adc
sub
insl
fmuls
sti
movnti
lds
or
ss
pop
cmp
movsl
cli
adc
clc
add
jecxz
movsl
addb
fldt
call
pop
cmp
adc
pop
and
in
loope
sbb
scas
cmp
loope
dec
or
add
jmp
mov
cli
jle
jne
inc
hlt
fcmovbe
or
les
or
lock
jmp
jno
arpl
sti
mov
cli
sub
ret
out
jns
cmc
mov
ja
or
pop
push
fwait
ss
stos
mov
jnp
xchg
adc
mov
add
add
loopne
sub
and
jecxz
stc
out
dec
mov
push
sbb
out
xlat
lahf
sbb
jl
mov
xchg
and
jnp
vcomisd
repnz
das
lret
add
ret
pusha
mov
stc
andb
xlat
dec
push
inc
mov
imul
mov
cmp
subb
cmp
xchg
leave
out
pop
nop
jecxz
pop
inc
xor
xor
popa
sub
adc
xchg
sbb
or
enter
mov
jg
jge
pop
imul
rorb
arpl
xor
outsl
cmp
pusha
and
cmc
and
data16
cld
pop
ja
add
dec
mov
fisubs
mov
sub
popf
cmp
js
stc
push
dec
stos
movsb
mov
xchg
dec
ror
cmp
fiaddl
jecxz
idivb
arpl
adc
jle
jp
mov
or
push
sbb
and
pop
scas
mov
mov
jle
ret
mov
jb
dec
cmp
out
or
or
or
dec
mov
fwait
cld
or
bound
push
mov
idivb
cwtl
mov
daa
pop
and
cmp
ss
lods
mov
loop
sub
xchg
mov
imul
pop
adc
mov
xchg
movsl
xor
nop
jbe
mov
sbb
or
sbb
add
jle
dec
ss
loop
cltd
or
mov
aad
mov
sub
push
sub
movsb
sbb
ret
sbb
ret
cli
sbb
adc
jb
sbb
mov
loop
mov
sarb
ljmp
pop
mov
ss
lock
in
adc
mov
sbb
sarb
fimull
jle
mov
test
stos
enter
bound
add
popf
jle
dec
push
adc
cmp
movl
out
jno
push
mov
es
daa
imul
mov
arpl
cmp
xor
rcrb
sbb
mov
cwtl
pop
mov
test
dec
outsl
jl
adc
mov
mov
mov
cmpsl
sub
stos
cmp
mov
ljmp
mov
and
icebp
push
jl
in
xor
mov
add
jl
cmp
jo
cli
inc
sti
mov
mov
mov
sub
addr16
outsl
loope
lahf
call
sub
neg
adc
stc
inc
movsl
push
hlt
lock
add
cmp
xchg
dec
inc
dec
call
pop
pushf
sahf
mov
call
pop
dec
push
les
xor
or
jbe
outsb
sub
sbb
out
inc
jl
in
test
jnp
mov
mul
imul
es
aaa
fdivp
pop
out
aad
xchg
shl
mov
out
sbb
cld
ficoml
mov
ret
cmc
sbb
push
pop
inc
xchg
cmp
push
aas
pop
pop
pop
cmpsl
or
fnsave
aas
les
push
pop
in
add
adc
pushl
or
out
mov
sbb
xchg
xchg
push
add
addr16
cmp
ss
jg
popa
mov
imul
fistpl
xchg
mov
mov
fbstp
adc
in
and
add
fisubrs
dec
lds
inc
adc
jge
xchg
adc
or
daa
sub
jo
aaa
scas
adc
popa
push
test
pusha
jl
mov
mov
cli
adcb
adc
dec
sbb
cmp
es
stos
mov
sbb
pop
dec
adc
dec
xchg
sbb
cmc
jmp
pop
sahf
or
mov
mov
sub
daa
jmp
loopne
rolb
sbb
dec
sahf
mov
cwtl
stos
cmp
ss
loop
out
xchg
and
xlat
sahf
and
stc
xchg
addr16
inc
xlat
sub
stc
stc
xchg
dec
jae
cmp
push
test
clc
dec
mov
xchg
push
xor
cs
pushf
mov
popf
sub
jnp
repz
or
mov
mov
xorl
clc
aaa
in
or
repnz
lcall
pop
pop
mov
fsubl
out
mov
push
or
cmpb
inc
dec
inc
stos
jo
test
ljmp
loop
sbb
or
test
fwait
or
dec
pop
cld
mov
push
sbb
mov
mov
jecxz
sub
sahf
popf
lahf
xor
adc
ds
mov
xorl
je
fiaddl
dec
or
jnp
jg
stos
int3
or
cmp
sbb
xchg
cmp
shll
xor
adcb
push
add
je
or
mov
adc
loop
test
ret
jle,pt
xchg
lods
fwait
adc
das
int3
xchg
divl
test
shll
add
int
push
call
out
push
mov
adc
jg
in
push
mov
sbb
jl
jg
dec
stc
cmp
xor
test
mov
cmp
cltd
mov
addl
mov
out
fisttpll
lret
jecxz
adcb
xchg
lock
jmp
and
stos
in
cmp
xchg
mov
mov
and
out
mov
mov
inc
jl
lock
lds
adc
mov
sbb
cmp
or
and
adc
call
mov
push
mov
orb
cmp
dec
lods
sbb
loopne
pop
mov
jnp
xor
cs
and
mov
mov
sahf
sub
xchg
cmpsl
jle
or
inc
ljmp
pop
aaa
push
popa
scas
and
clc
and
cmp
int3
adc
rolb
and
nop
pop
mov
jmp
or
pop
dec
sub
out
in
fwait
dec
pushf
add
fwait
xchg
push
mov
push
bound
adcb
adc
or
or
or
xchg
insl
adc
jmp
cmp
pop
inc
sbb
mov
inc
int3
push
cli
int
pop
out
jne
cmp
xchg
mov
loopne
cmp
cmpsl
cmp
xor
push
lods
xchg
pop
add
mov
jecxz
xor
xchg
inc
daa
jge
sbb
loope
adc
or
repz
imul
pop
movsl
add
loopne
imul
bound
mov
xchg
sub
hlt
pop
and
xchg
icebp
ret
jmp
mov
idiv
in
xchg
or
arpl
ss
xlat
mov
lret
dec
or
out
fisttpl
or
xchg
adc
sti
cmp
push
lahf
jp
imul
in
jne
lahf
in
fsubr
mov
lret
ja
xlat
adcl
dec
aad
mov
push
adc
mov
icebp
jl
fwait
xchg
sbbl
std
movsb
gs
mov
loopne
push
leave
xor
ljmp
pop
xchg
fistpl
inc
push
push
sub
jb
cli
xchg
mov
mov
es
mov
jmp
out
mov
lods
iret
mov
cltd
jp
rorb
popa
outsb
arpl
arpl
int
sbb
mov
fcompl
je
push
adc
out
and
les
imul
xlat
adc
adc
cmpsb
rorb
pop
mov
sbb
insb
pushf
jne
push
leave
ljmp
xor
cmp
cmc
pop
xlat
adc
call
or
jns
out
scas
scas
rcrl
xor
pusha
loope
rorl
sbb
or
movsl
jmp
mov
sub
sbb
lahf
aam
lahf
push
mov
arpl
loopne
shl
lcall
out
sbb
in
dec
sub
mov
imul
fdivrl
add
mov
inc
pop
pop
ret
and
in
sbb
mov
roll
dec
mov
jp
ds
sub
inc
mov
mov
adc
mov
push
out
pop
cltd
push
adc
cmp
and
popf
jge
xchg
int3
mov
mov
nop
inc
int
and
cmp
in
xchg
or
test
cmp
aas
xchg
adc
cli
repnz
sbb
cli
das
sub
movsb
gs
jp
jns
add
das
hlt
ret
xlat
pop
push
in
inc
jae
dec
dec
shlb
mov
jmp
mov
xor
cmp
test
scas
test
lock
fdivrs
les
cs
sti
fldenv
mov
fdivrs
add
jle
push
dec
jbe
and
sbb
fcoml
push
movsl
popa
adc
test
push
minps
push
lahf
andb
insl
and
push
or
mov
mulb
mov
jp
ljmp
lds
stc
out
rcrl
jecxz
cmp
mov
in
adc
cmp
push
add
sbb
mov
outsl
sti
fwait
std
iret
ret
cmp
push
mov
gs
testb
mov
dec
imul
adc
mov
jno
push
xchg
add
and
push
sti
mov
sbb
inc
push
pop
test
jge
add
mov
mov
mov
test
leave
sbb
sbb
repz
jle
shl
jle
mov
clc
por
in
mov
inc
sbb
iret
aam
daa
mov
pop
in
imul
lahf
nop
or
andl
xchg
inc
jmp
mov
into
outsl
add
cmp
nop
in
or
ret
jns
push
in
rclb
pop
cmpsb
int3
test
loopne
cmpsb
xorb
cmpsl
push
and
push
cwtl
mov
and
popa
les
ret
je
lea
push
or
loopne
xor
mov
push
jp
xor
push
movsb
les
cmp
mov
jecxz
or
popa
inc
mov
cmp
cmp
adc
push
xchg
js
in
fwait
adc
inc
int
jecxz
push
xchg
jb
push
inc
cmp
push
or
aas
and
inc
cwtl
push
incl
sti
mov
add
fbld
mov
push
imul
and
clc
bound
sbb
xlat
or
jmp
ds
xlat
push
sahf
sbb
mov
dec
push
adc
lret
jnp
cmova
pop
sub
arpl
xchg
xchg
lods
xchg
insb
xchg
and
xorl
xchg
aaa
mov
mov
out
pop
inc
cmp
or
mov
xchg
leave
cmpsl
jmp
pusha
jl
cmp
adc
cli
loop
or
inc
sbb
sbb
sub
and
push
test
stc
imul
jp
loope
mov
fwait
int3
cli
and
stc
in
rcrl
enter
xchg
sbb
inc
xor
cmp
scas
inc
mov
jno
fwait
je
nop
sbb
xor
clc
je
xlat
pusha
pop
push
sbb
or
test
push
dec
icebp
data16
xchg
mov
pop
js
jnp
sub
and
dec
sbb
fistl
xchg
scas
xchg
bts
in
arpl
out
pop
adc
mov
mov
fst
add
test
sub
cmp
lock
loopne
mov
jne
pop
and
jne
xchg
adc
cld
aas
jl
push
scas
enter
mov
adc
ds
xchg
fcmovu
out
int3
xchg
repnz
cmp
cmpb
or
into
xchg
dec
and
ds
arpl
clc
lcall
jle
cmp
mov
xor
mov
ljmp
sub
stos
push
mov
push
daa
shll
adc
or
jge
inc
leave
push
cmpsb
in
xor
rcr
pushf
dec
outsb
xchg
ss
cmovno
sbbb
cmp
mov
fs
fstp
jbe
fdivr
or
mov
in
mov
mov
xchg
dec
sub
adc
mov
mov
sahf
mov
std
sbb
or
cltd
mov
aas
jmp
mov
add
cld
insl
adc
fucomi
icebp
mov
mov
add
inc
pusha
insl
nop
xchg
fldenv
lock
movsb
icebp
or
xchg
lret
aad
and
stc
fcoms
jl
lock
stc
test
in
mov
stc
jmp
test
std
cmpsl
mov
scas
mov
mov
cmp
cmp
mov
mov
les
push
fstpl
add
jae
mov
mov
jge
sarl
mov
cltd
cli
jge
lods
int3
adc
pop
lods
xchg
sub
pop
lcall
icebp
jge
aaa
push
fsubrs
je
int
les
pop
rcr
xor
mov
aaa
xchg
xchg
and
pop
enter
mov
repz
test
or
movsb
push
pop
ss
jmp
int3
xchg
fs
fisttpl
xchg
and
push
aaa
mov
mov
ds
dec
mov
sarl
cs
stos
cmpl
mov
jo
in
lret
stos
out
cmp
or
xor
aam
loope
pop
pop
out
cmc
ja
aas
pop
mov
sbb
dec
jle
and
ret
imul
out
sbb
bound
xlat
aas
or
movsb
sbb
test
xor
fwait
lcall
xlat
push
xchg
inc
lret
or
add
out
jbe
xchg
fsts
pop
int3
aad
jb
jbe
adc
cmp
repz
sub
sbb
enter
xchg
leave
sub
add
ds
xchg
sbb
push
test
insl
fidivs
repnz
sub
jecxz
popf
sub
mov
rclb
movsb
mov
push
cmc
or
notb
dec
mov
xchg
cli
add
push
dec
sub
xor
sarl
movsb
pop
mov
call
and
sub
test
mov
ss
repnz
cmp
xchg
and
or
imul
cmp
jle
sub
or
cli
scas
imul
test
repz
incl
jns
mov
arpl
fisttpl
lret
jae
adc
cmp
sti
in
add
nop
jg
test
xchg
jbe
ss
add
lret
add
mov
scas
idiv
bound
or
cmc
inc
xor
jb
mov
cmp
jbe
mov
ds
loop
ss
dec
add
xchg
xchg
out
mov
mov
mov
fnstenv
aaa
mov
ds
stos
mov
push
or
ret
adcl
cltd
ja
js
data16
call
and
push
sbb
sub
dec
push
ljmp
divl
test
mov
jbe
icebp
test
imull
ret
pop
mov
movsl
and
mov
xchg
mov
mov
pop
sbb
fwait
cmpsl
mov
repnz
xor
or
xchg
data16
out
inc
push
xchg
leave
aam
clc
dec
cltd
push
sbb
and
in
jp
jg
sub
fcmovnbe
dec
loope
mov
inc
mov
in
mov
pop
push
into
push
hlt
mov
dec
out
dec
loopne
sbb
std
scas
mov
ds
cmp
xchg
sahf
pusha
adc
lcall
repz
in
stos
xor
cmp
xchg
cmp
sbb
mov
pusha
stos
adc
notb
mov
daa
mov
mov
insl
addb
mov
adc
insb
mov
fmuls
out
cs
xchg
outsl
or
mov
and
fs
ja
pop
jp
inc
in
pop
sub
js
xor
xchg
and
adc
out
or
mov
xchg
loopne
add
cwtl
ficompl
scas
cmc
and
jbe
ljmp
iret
iret
mov
cmp
inc
lret
cmp
sbb
pop
in
add
adc
and
mov
adc
or
xchg
dec
lcall
or
test
push
cmp
mov
mov
fwait
jns
outsl
fstpt
cmp
xchg
mov
push
inc
in
addr16
movsb
and
std
jg
stos
cs
or
and
shrl
or
adc
xchg
mov
push
mov
jmp
lea
xorl
ret
mov
out
negl
int
rcrb
xchg
sub
sarl
inc
lahf
pusha
xchg
xor
ret
test
fbld
out
popf
jle
or
pop
sbb
ds
pop
dec
sti
xor
imul
push
mov
adc
push
inc
or
loope
ret
ja
jge
sti
push
mov
jecxz
std
mov
or
int3
xchg
int3
ljmp
or
cltd
pop
xchg
mov
and
or
or
cwtl
mov
xor
mov
xchg
add
mov
pop
stos
div
cwtl
push
sbb
std
adc
xchg
stos
push
and
not
cmp
aam
pop
xor
notl
pop
xchg
lock
adc
xor
ret
or
fsubrl
ret
mov
pop
xchg
movl
leave
ret
call
and
in
leave
push
push
adc
mov
add
ds
or
int3
cmp
jae
aad
lcall
popa
cmp
in
or
xor
stos
jb
pusha
dec
adc
add
popa
mov
test
mov
scas
cs
mov
je
pop
add
fwait
mov
mov
iret
es
mov
repz
das
out
xlat
sub
mov
xlat
mov
sbb
xor
pop
dec
xchg
dec
mov
sub
loope
adc
call
mov
xor
mov
cmpb
loope
sbb
test
xchg
sub
sbb
add
adc
add
add
mov
repnz
and
mov
insb
outsl
jne
adc
iret
stos
jge
mov
stos
and
es
mov
pop
out
shll
mov
mov
bound
push
or
add
xchg
out
dec
es
out
ss
arpl
int
jl
ret
stc
sbb
sub
fisubs
jns
pusha
out
in
pop
pop
sub
mov
testl
xchg
je
fs
lds
cmpl
or
jge
push
sub
xor
dec
mov
in
vmwrite
fwait
loop
jl
rcrb
lods
std
xor
int3
repz
scas
fisubs
mov
iret
aam
xchg
mov
stos
fdivrs
jae
sub
lea
jp
cmp
ficoms
cmp
push
sub
add
pop
dec
or
jnp
mov
add
out
cmp
or
out
pop
fwait
cli
shlb
cs
mov
jg
push
add
sbb
adc
adc
sbb
pop
adc
jmp
shr
jp
or
mov
cmp
hlt
or
clc
push
js
shlb
jp
loopne
pop
stc
out
dec
pop
xlat
sti
loope
jns
jmp
push
ss
sbb
dec
fwait
sbb
into
inc
test
addr16
enter
mov
mov
xor
xlat
or
gs
or
les
sub
out
xorb
test
sub
inc
sbb
mov
lea
xchg
into
out
jno
adc
bound
and
xchg
in
and
inc
ja
or
add
fwait
loop
add
mov
cmpsl
mov
repnz
jmp
mov
mov
mov
cmp
je
xchg
movsb
faddl
imul
out
es
cmpsb
jecxz
movsb
or
pop
dec
and
dec
lds
cltd
inc
data16
mov
ljmp
push
or
popf
adc
mov
xor
mov
movsb
jns
lods
xchg
xchg
cmp
mov
xor
adc
clc
adc
mov
mov
inc
xchg
push
popa
mov
mov
cltd
insb
lahf
mov
add
mov
mov
inc
sub
in
jge
push
pop
icebp
js
inc
cmp
and
mov
or
leave
jb
sbb
loopne
xlat
jb
dec
pop
cmp
and
lds
inc
jnp
bound
lret
aad
xchg
out
in
cmp
pusha
mov
push
in
and
stc
mov
cld
cmp
cmp
sbb
xchg
sub
ljmp
xlat
xchg
loop
out
scas
mov
lods
ja
sub
ret
sti
out
push
push
cmp
mov
data16
or
jge
jl
adc
push
jb
dec
sbb
aaa
gs
mov
cli
enter
sbb
clc
xchg
aas
bound
pushf
inc
mov
mov
or
ljmp
and
jge
inc
mov
xchg
pop
out
repnz
fimull
mov
jge
mov
sti
bound
sbb
pop
jno
mov
and
std
push
and
xchg
stos
mov
test
mov
mov
inc
add
fldenv
ss
pop
sti
push
out
push
adc
das
ficoms
lock
cmp
in
sbb
lods
loop
iret
stos
mov
outsl
pop
shlb
in
jae
cmpsl
cmp
stos
xor
cmp
mov
call
mov
add
scas
jl
mov
loop
sbb
inc
test
cs
jns
stc
adc
outsb
jg
adc
and
repz
push
into
in
dec
and
movd
lods
push
icebp
cwtl
sub
inc
pop
or
push
gs
and
scas
in
ss
dec
nop
rcrb
popf
pop
pop
out
nop
adc
addr16
xchg
std
adc
xchg
jp
lcall
or
jnp
aaa
arpl
ljmp
ljmp
sub
fs
iret
mov
push
cld
das
fdivs
mov
or
pop
mov
ret
mov
xor
ja
inc
add
pop
dec
mov
js
jo
rorl
pop
ljmp
scas
add
sbb
push
notb
repnz
xchg
icebp
mov
adcb
in
mov
mov
xchg
gs
lahf
in
flds
ret
adc
imul
dec
cmc
jnp
fcom
out
xchg
ljmp
lock
les
inc
das
jle
ljmp
in
pop
mov
cmp
je
xchg
jg
gs
cld
hlt
repnz
inc
rcr
xor
mov
testl
mov
jg
cmp
or
shll
into
push
jnp
popf
sbb
jp
hlt
sub
into
nop
xor
stc
add
mov
mov
outsb
or
jmp
jecxz
loop
xchg
das
test
mov
add
push
push
fstpl
int3
testl
jmp
dec
hlt
aaa
ds
xor
ljmp
add
dec
inc
fildll
pop
mov
push
push
sbb
sbbb
dec
test
sub
stos
adc
sbb
sub
and
sub
xchg
push
scas
rclb
sub
inc
and
js
in
leave
jge
subb
dec
xchg
scas
pusha
mov
fwait
jmp
jbe
sbb
and
xor
shrb
mov
test
add
cmp
lock
sub
pop
jp
mov
sub
mov
cmp
call
mov
ja
cmp
adc
scas
out
fdivs
outsl
cmp
repnz
popf
addr16
dec
or
xchg
push
jp
notb
icebp
sarb
xor
or
sub
mov
or
adc
rolb
adc
stos
lea
sub
enter
cmp
push
out
add
movsb
pop
adc
adc
and
movb
shlb
aas
data16
pop
in
fistpl
xchg
ret
out
bound
jle
into
stc
push
inc
adc
cli
jge
or
or
lods
ds
call
xchg
push
imul
cmp
mov
xchg
nop
sub
inc
lods
push
inc
mov
dec
jns
cmpsl
xchg
sub
int
cmp
lods
daa
mov
jle
sub
pop
mov
ss
ja
or
mov
mov
fldenv
nop
fs
es
mov
insb
adc
cltd
dec
jl
int
loope
adc
mov
imul
lret
mov
daa
les
out
hlt
mov
cs
sub
ss
jl
mov
or
sbb
add
pushf
add
cmpb
add
lahf
and
and
mov
sbb
test
out
sti
repz
loop
int
hlt
jno
pop
divb
movsl
mov
loop
out
data16
lret
xchg
sbb
and
mov
mov
cld
int3
and
in
rcr
cmp
test
ja
imul
mov
jae
ret
push
adc
jg
les
cmpsl
jae
cmc
cmp
mov
and
inc
sbb
lret
xor
test
fnstsw
jmp
int3
mov
in
cli
pop
roll
add
lock
push
arpl
ljmp
adc
mov
in
into
shll
jmp
in
mov
scas
sbb
push
inc
aam
into
ss
dec
or
inc
inc
stc
insb
and
subb
mov
mov
mov
imul
gs
xlat
or
adc
mov
xchg
out
mov
xor
cmp
mov
cmovg
pop
pushf
jg
shl
arpl
in
adc
in
cld
push
or
fwait
jecxz
loop
mov
scas
addr16
les
mov
dec
loopne
into
in
out
mov
or
mov
mov
gs
pop
or
cmc
mov
fnsave
push
cmp
call
sbb
pop
mov
divb
xor
inc
shll
incl
dec
rcrl
mov
sbb
cmp
push
in
add
cli
cmp
iret
es
sub
outsb
add
sub
stos
pushf
les
mov
sub
jbe
enter
test
mov
inc
mov
sbb
arpl
into
cmp
mov
xchg
sub
cmp
negb
add
add
mov
and
push
cmp
inc
mov
lret
pusha
inc
test
stc
outsb
mov
subl
out
lock
xchg
loope
outsb
jno
xchg
shrb
outsb
and
xor
pop
repz
mov
pop
test
loope
or
or
cmp
cld
mov
dec
xchg
lds
mov
lds
cld
daa
arpl
pop
adc
push
and
and
inc
pop
pop
adc
fildll
xchg
xchg
and
mov
dec
xchg
xor
mov
fwait
sub
xchg
push
popf
sbb
and
jnp
repnz
cmpsb
sbb
xor
fdivrl
clc
add
cmp
pop
jl
ja
dec
ret
add
add
add
aaa
inc
dec
add
add
outsl
add
xor
add
push
add
jbe
pop
add
push
add
imul
fs
add
dec
add
push
add
add
add
add
jne
add
dec
jo
add
imul
xor
arpl
jne
jp
push
add
inc
popa
add
add
add
add
add
add
push
add
dec
add
add
add
add
push
jae
add
add
inc
add
add
add
add
jp
add
add
add
dec
arpl
dec
popa
dec
add
add
dec
add
add
add
add
inc
push
push
pop
xor
add
add
add
add
dec
imul
ss
add
dec
add
gs
add
jns
dec
add
add
push
data16
add
outsl
xor
add
add
jp
add
add
xor
dec
jns
add
add
add
xor
push
add
cmp
inc
add
outsb
imul
imul
add
arpl
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
pop
inc
xor
add
add
add
push
bound
aaa
add
add
add
add
add
add
add
add
ja
dec
add
data16
outsb
add
add
gs
add
add
add
gs
add
add
add
add
outsb
add
add
add
add
ja
add
push
add
add
jno
cmp
xor
add
bound
inc
xor
jno
add
add
outsl
xor
jbe
cmp
add
add
add
dec
add
inc
add
add
add
popa
inc
add
js
push
bound
add
push
add
add
jo
popa
add
add
add
xor
jns
push
xor
add
add
add
xor
add
add
inc
add
cmp
push
dec
imul
insb
dec
push
add
dec
add
add
add
add
add
dec
add
add
push
imul
push
push
add
dec
add
dec
inc
xor
add
add
add
pop
out
fwait
jg
and
jmp
pop
divl
ss
into
je
aas
push
mov
stos
mov
mov
mov
aaa
std
pop
pop
pusha
adc
xchg
pusha
push
xchg
or
daa
jno
data16
push
js
int3
mov
inc
dec
cmp
out
popf
cltd
pop
lcall
push
cmp
in
out
add
fisubs
xchg
stos
push
testl
cmp
popf
sub
cmpsb
stos
pop
jbe
mov
movsb
idivl
cmp
adc
xchg
loopne
jae
repz
adc
push
jo
add
pop
in
jmp
push
dec
dec
inc
into
or
das
jb
mov
in
dec
std
xor
adc
sub
bswap
push
pop
inc
notl
xor
adc
xchg
sbb
les
and
dec
daa
out
scas
aad
dec
push
mov
loop
inc
out
sub
jle
std
mov
insb
add
mov
out
xchg
outsl
push
inc
mov
cmp
in
add
std
sti
jbe
in
sbb
xor
std
insl
cwtl
xlat
and
aaa
pushf
dec
mov
data16
gs
rcrb
and
jne
imul
imul
cmp
loop
cmc
lret
lahf
sub
sarb
mov
in
jmp
or
loop
cmp
lea
pop
in
or
movsb
mov
into
loop
ret
mov
jmp
std
xchg
jns
test
test
cmp
jp
hlt
pop
imul
and
pop
inc
and
sub
cmp
popf
xor
mov
nop
jecxz
xchg
inc
fidivrs
divl
add
cmc
stos
sti
xor
pop
mov
js
mov
test
lret
iret
mov
xchg
incb
ljmp
roll
subb
mov
xor
jbe
lock
pushf
lds
mov
orl
test
mov
sbb
iret
lret
int
xlat
pop
pop
into
add
gs
sub
lret
xchg
scas
dec
jns
popa
xlat
aas
xor
out
add
pop
cmc
mov
cld
js
xchg
jg
lcall
dec
data16
dec
inc
sbbb
mov
push
in
mov
pop
push
adc
mov
sub
test
repnz
or
jp
adc
idiv
dec
pop
and
xor
mov
aas
dec
mov
sub
mov
jb
mov
xchg
sti
mov
out
mov
xchg
mov
mov
test
cmp
imul
fiadds
inc
and
sbb
iret
lcall
repz
xchg
mov
std
sbb
lret
pop
int
imul
inc
mov
inc
cmpsb
jne
mov
loope
daa
loopne
push
adc
cmpsl
jbe
shrb
sbb
cmp
test
sbbb
pop
cs
js
mov
mulb
jae
jo
cmpsl
cmp
popa
sub
ret
popa
pop
push
cld
ret
shrb
dec
mov
lret
mov
arpl
incl
cmpsb
cmc
inc
push
mov
or
inc
movsl
mov
fcmovbe
insb
das
movsb
insb
pushf
out
std
mov
icebp
rcrb
js
mov
push
or
and
dec
xchg
out
jb
fidivl
xor
sti
cmp
jbe
loopne
insb
push
sub
test
lods
push
push
out
cld
pop
jb,pn
dec
push
sti
mov
test
out
dec
and
push
xchg
sub
addr16
sub
pop
add
loop
inc
push
in
mov
sahf
adc
mov
mov
mov
stos
data16
clc
cmpb
scas
cmp
mov
jne
and
sbb
push
mov
movsb
adc
mov
loop
imul
push
fists
scas
outsl
xchg
repnz
out
fistpll
jb
xchg
cmp
jl
jb
adc
adc
mov
mov
mov
loope
sbb
aas
cmp
out
sbb
xor
cmpsl
adc
dec
jne
mov
and
out
xchg
and
xchg
sub
sub
cmp
cwtl
call
test
sub
clc
xchg
cmp
cmp
stos
insb
xchg
in
addr16
ljmp
sub
mov
push
dec
push
fs
loope
aam
jmp
or
sub
xor
aas
subb
les
push
pop
xor
pop
cld
or
in
xchg
mov
dec
in
icebp
adc
orl
push
je
mov
stos
xchg
mov
sbb
out
jo
cld
arpl
xchg
jns
jmp
test
mov
dec
mov
std
or
test
sarb
imul
clc
in
adc
xchg
stc
pop
mov
pop
int
or
mov
sahf
mov
add
into
stos
popa
dec
leave
mov
rcrl
mov
fwait
mov
unpcklps
loope
or
ret
dec
test
sarl
and
mov
and
outsl
adc
stc
add
das
int
js
cmp
xchg
push
mov
stos
xchg
xor
inc
ret
repz
fistpll
in
cmp
mov
cmc
notb
adc
cmpb
shll
out
ds
sub
fistl
int
lea
shll
mov
and
out
in
push
mov
out
xchg
mov
mov
lahf
pop
notb
or
sti
gs
sbb
and
fucom
cmp
pop
jbe
xor
fmuls
push
ret
andb
sub
into
int3
loopne
xchg
cli
cmpsb
mov
or
xor
xor
scas
pop
mov
imul
bound
push
loope
sbb
movsl
in
sub
cmp
jecxz
xchg
add
mov
sahf
imul
xchg
jnp
mov
cmp
aas
mov
jp
loop
push
call
xchg
inc
pop
repnz
iret
cmpb
in
jnp
enter
jbe
push
push
ss
sub
xchg
mov
dec
sub
aad
pop
fwait
arpl
fwait
cmp
scas
int3
xchg
sarl
clc
cltd
jo
xor
xchg
std
sub
cmp
pop
aas
dec
pusha
mov
and
bound
sub
pop
push
sub
xchg
loope
outsl
pop
jnp
fidivrs
xorb
ja
cli
mov
in
mov
mov
push
cwtl
ljmp
mov
cmp
int3
dec
sbb
imul
in
insl
or
jnp
rcll
add
inc
cli
out
in
lds
mov
clc
fcoml
add
es
mov
xchg
das
mov
int
xchg
mov
dec
cmpsl
jns
icebp
addl
mov
inc
pop
jmp
or
call
in
fstpl
add
cmp
in
gs
mov
jbe
fnsave
out
call
xor
popa
js
fnstsw
leave
ror
mov
out
push
int3
cld
insl
inc
add
adc
xchg
xor
out
out
cmp
mov
in
xchg
cmc
and
push
sub
fs
adc
xchg
loop
cmpsb
cmpsl
cwtl
cli
in
mov
xchg
clc
inc
fsubl
dec
push
adc
adc
inc
sbb
cmp
fwait
rcrb
xchg
ljmp
movsb
frstor
xchg
push
pop
insb
mov
xchg
mov
pop
adc
mov
popa
cmp
xor
gs
int
repz
xchg
dec
xor
mov
hlt
mov
sbb
cmpsl
xchg
test
fnsave
mov
adc
dec
popf
in
sub
push
push
cmp
cmpb
popf
incb
mov
inc
xchg
out
mov
sahf
int
inc
cmpsb
mov
xor
aam
icebp
scas
xlat
jno
mov
imul
xchg
and
out
repnz
add
repz
dec
mov
cltd
sub
repnz
fnstsw
pushf
and
movsb
jmp
loope
and
lret
mov
push
jae
mov
and
add
and
fsubrs
in
mov
pop
jns
xor
rcll
mov
scas
inc
das
sbb
sahf
cmp
jo
sbb
loop
mov
cli
mov
clc
adc
pushf
mov
leave
lahf
in
bound
mov
or
sub
addr16
leave
dec
imul
out
inc
push
or
xor
inc
icebp
inc
test
jl
sub
shl
aaa
subl
popf
jnp
xor
not
test
pop
push
sarl
into
fs
bound
cmp
sbb
xchg
insb
jb
cmp
out
jmp
fidivrs
pop
push
test
pop
outsl
mov
mull
mov
pushfw
rol
dec
sbb
clc
sub
inc
mov
imul
and
and
fimull
pop
push
add
pop
and
add
sbb
aas
pushf
fcompl
lahf
pop
cwtl
cmp
jo
push
mov
lahf
outsl
nop
xchg
add
sub
push
sub
and
dec
cmc
mov
iret
dec
test
in
adc
mov
scas
lods
insl
pop
or
dec
dec
mov
rorl
mov
dec
mov
adc
fmuls
xchg
daa
add
adc
test
roll
stos
mov
cwtl
cmpb
idiv
mov
jae
cmp
fsubrs
aam
rclb
xorb
xchg
and
xor
mov
push
sbb
jbe
scas
out
cmp
subb
ret
ss
pusha
xchg
lcall
mov
jmp
jmp
cmp
in
pop
out
jecxz
ds
pusha
mov
jo
and
je
lcall
pop
push
lret
add
xchg
push
out
popf
mov
inc
aam
outsl
ja
or
sbb
dec
push
icebp
mov
lea
addr16
sbb
ds
loope
mov
xchg
mov
dec
xlat
iret
adc
dec
or
sbb
xchg
orl
cmp
ja
mov
mov
xchg
add
mov
lods
push
jno
subl
inc
jbe
data16
scas
test
dec
mov
ret
and
jbe
sarl
loopne
jbe
aad
hlt
xorb
jne
in
out
ljmp
stc
in
sbb
stc
popf
adcb
jns,pn
dec
popf
xor
jnp
and
stos
dec
lcall
mov
mov
mov
push
fdivs
xor
scas
and
and
adc
lods
mov
and
dec
sbb
in
or
or
push
cmpsb
pop
mov
mov
hlt
xchg
addr16
mov
outsb
subb
xchg
out
or
mov
jo
dec
test
mov
test
cmpb
jns
sub
call
cmpsl
sbb
xor
or
inc
ljmp
cmc
adc
fldenv
mov
cmp
push
add
fwait
jbe
lret
icebp
adc
mov
inc
nop
mov
adc
in
pop
inc
pop
flds
push
mov
jb
mov
mov
or
mov
sub
popf
sub
jg
adc
pushl
out
sahf
pop
pop
mov
push
int3
iret
int
jae
jg
dec
mov
fidivrl
out
mov
pop
push
ds
xor
fstpl
nop
and
jge
in
cwtl
sti
clc
cld
je
js
sbb
mov
mov
loopne
daa
nop
loopne
in
stos
xchg
jl
js
lea
dec
mov
scas
sub
sbb
pushl
add
push
push
stc
push
lods
lcall
bound
into
jp
jl
mov
dec
xchg
scas
xchg
ret
cmc
mov
mov
push
enter
mov
dec
mov
and
lahf
xor
push
jo
fisttpll
push
jl
mov
scas
pop
sub
iret
cmp
popf
insl
mov
loopne
ss
cli
jne
push
mov
pop
adc
push
cs
mov
and
xchg
int
mov
xor
or
sbb
addr16
inc
mov
mov
sbb
out
mov
dec
adc
testb
outsl
mov
ret
cmp
cmp
mov
cmp
sub
fwait
and
xor
clc
nop
ficoml
mov
mov
xchg
cltd
jbe
dec
mov
push
xor
cmp
xchg
cwtl
loope
das
xchg
jb
push
pop
mov
in
add
cwtl
or
adc
prefetch
push
mov
mov
sub
xchg
sbb
ret
pop
jle
cmp
add
lea
clc
jg
jle
in
loope
test
mov
out
popf
sbb
xor
xchg
jae
stos
and
push
pusha
loopne
in
out
mov
int
imul
lret
adc
aam
aaa
insb
aas
mov
xchg
das
iret
cwtl
xor
cmpsb
gs
pop
test
das
movsb
or
clc
dec
loope
cli
mov
push
jbe
sub
or
les
cmp
pop
dec
xchg
test
cmp
cmp
movsb
stos
jl
in
mov
push
or
mov
dec
mov
in
popf
orl
mov
cmp
movsb
outsb
ljmp
test
in
sub
out
push
loop
repnz
cmp
xor
es
xchg
shrb
mov
out
mov
pop
xor
out
push
inc
mov
push
aas
out
xchg
and
popa
xchg
in
inc
jnp
faddl
in
out
xchg
sbb
and
inc
cli
adc
scas
xchg
xchg
push
xchg
test
mov
push
ror
div
cmp
fildll
xlat
mov
popa
movsl
jp
sbb
jcxz
jnp
jnp
jecxz
push
cs
jmp
cmp
sub
das
js
xchg
jmp
iret
xlat
jbe
nop
inc
and
push
hlt
and
mov
xchg
sti
mov
into
imul
popa
in
sbb
add
in
cmp
xchg
aam
jg
xchg
in
jb
and
pop
aaa
mov
hlt
iret
pop
cmc
dec
and
and
in
pop
in
sbb
push
push
fabs
add
push
pop
mov
into
test
push
pop
sbb
mov
jecxz
mov
ljmp
cmp
mov
dec
test
dec
ret
aas
pop
pop
ss
cwtl
stos
or
test
or
ret
test
in
or
aas
xchg
xor
pop
ret
or
xchg
cmp
inc
or
in
mov
imul
mov
fidivs
stc
xchg
dec
xchg
movsl
cmp
test
stc
bndstx
push
loop
cs
sbb
movb
mov
xchg
lock
add
mov
push
jmp
xchg
mov
enter
xchg
cmpsl
fsubs
jge
mov
cmpsl
xchg
mov
imul
stc
push
sbb
dec
jle
stc
and
shl
mov
out
scas
inc
fwait
stos
xor
cmp
cmpsl
mov
add
shlb
inc
adcl
mov
je
ficoms
and
in
mov
ror
popa
mov
cmp
loopne
std
sbb
out
ret
push
pop
rcl
mov
or
out
andb
pop
jl
in
les
fstpt
sub
leave
cmp
mov
cmp
mov
mov
xlat
mov
loop
and
push
sbb
lock
add
xchg
jno
sti
lcall
jl
js
iret
imul
xor
mov
mov
ja
inc
mov
pop
mov
mov
adc
jle
xchg
inc
into
cs
neg
jae
mov
mov
mov
je
cmp
xor
mov
sub
and
mov
scas
xchg
mov
jp
push
jbe
cmpsl
mov
mov
iret
scas
scas
pushf
repnz
adc
mov
jbe
sahf
inc
mov
mov
mov
push
mov
push
nop
in
push
sti
xchg
mov
pop
lds
mov
sbbb
jecxz
fdivs
mov
push
xchg
iret
arpl
jmp
lods
or
inc
cli
iret
decb
or
jecxz
pop
add
push
xor
sub
notl
cmp
loop
or
out
clc
or
jmp
in
xor
outsl
lret
jp
loop
cmp
dec
cltd
xchg
mov
in
rcrb
jle
popl
scas
cmpsl
adc
out
mov
cltd
push
aad
test
cmpsl
mov
cmpb
cmpsb
jno
mov
pop
mov
cmp
pop
mov
jae
out
lret
into
sub
add
jl
sti
xor
int
loop
push
cmc
out
rorb
clc
dec
pusha
out
dec
in
xchg
xchg
iret
clc
lds
cli
sbb
std
rclb
fstpl
fwait
add
xchg
sbb
in
mov
popa
xor
mov
dec
pop
pushf
pop
xlat
mov
add
iret
stos
and
mov
cmp
int
pop
loope
loop
clc
das
cltd
pushf
and
movsl
mov
sub
dec
pop
call
jge
fucomip
mov
xchg
es
fwait
xchg
xchg
push
mov
jp
mov
repnz
xchg
inc
test
and
loop
pop
jle
inc
mov
fs
aam
jnp
dec
ret
mov
imull
xor
xchg
loop
mov
roll
cs
and
pop
inc
cwtl
cld
lcall
insb
in
add
add
push
shlb
pop
or
fcom
add
mov
and
stos
sahf
jnp
or
mov
jns
xchg
adc
cli
cld
insl
cwtl
cmpsl
xchg
cli
jb
js
xchg
pop
mov
xchg
movb
inc
mov
loop
movb
cmpsl
cld
xlat
adc
adc
stos
mov
add
outsb
and
push
cltd
adc
popf
testl
cwtl
mov
aam
sti
cmp
add
mov
xchg
andb
cmp
xor
lcall
ficoms
inc
inc
sub
mov
inc
mov
mov
mov
mov
es
cwtl
xchg
outsb
aaa
add
or
sub
push
lock
mov
pop
aad
cmp
mov
ret
jl
cmp
in
ja
push
cs
add
int
ja
pop
push
sub
mov
cltd
test
pushf
insl
cmpsl
ja
sub
cld
sbb
jmp
mov
sub
dec
lret
or
cmpsl
pop
ds
das
imul
xchg
cmp
push
inc
clc
pop
stos
popf
daa
jo
mov
fisubl
dec
adcl
iret
ljmp
stos
sti
push
xchg
scas
xor
push
sti
cmp
int
lea
mov
jmp
push
xchg
loope
orl
jnp
mov
push
lock
cmpsb
pop
jle
xchg
mov
shrl
fcompl
mov
adc
push
push
ret
int3
in
mov
cmc
stc
xor
enter
mov
mov
push
pushf
cmpsl
mov
jl
or
mov
push
jnp
jns
nop
arpl
in
jnp
aaa
jnp
mov
mov
repnz
cli
pusha
jmp
or
loope
test
das
dec
jo
icebp
jl
jnp
arpl
mov
icebp
xchg
dec
jle
and
ljmp
aas
pop
inc
stc
rorl
push
mov
jle
adc
ss
cwtl
es
cmpl
sbb
xchg
mov
pcmpeqb
aas
add
test
movsb
xlat
cltd
sbb
loop
push
cmc
lods
xchg
mov
push
cltd
and
cwtl
fwait
in
xchg
adc
cmp
outsb
mov
jecxz
in
inc
cltd
cs
cmp
ds
cs
sbb
and
sahf
push
mov
mov
popf
adc
shlb
loopne
dec
dec
ficoml
popa
rcll
add
dec
je
push
mov
data16
inc
sub
data16
ret
mov
push
loop
push
loop
in
push
push
lahf
and
pushf
mov
mov
cmp
inc
jp
jecxz
nop
mov
insl
or
or
sbb
popa
mov
and
mov
shl
xchg
mov
int
mov
into
out
pop
xchg
push
lcall
dec
jnp
and
mov
test
int
adc
mov
inc
ljmp
and
sbb
addl
outsl
scas
pop
int
dec
cld
cmp
aas
cmpsl
subl
mov
scas
das
stos
push
sub
ja
subl
into
push
loopne
aam
in
pusha
mov
push
out
pop
mov
xor
xchg
pop
sub
dec
cmpsb
push
mov
xchg
push
adc
bound
out
cmp
stos
repz
rorl
call
negl
mov
mov
and
dec
add
xchg
add
and
pop
rcl
out
fwait
lret
push
sub
xchg
cwtl
data16
aas
pop
jge
jbe
xchg
or
cld
mov
insl
pop
shlb
xchg
sbb
lods
repnz
sarb
jmp
pop
jecxz
mov
or
aad
xchg
sbb
aaa
mov
sub
jecxz
repnz
cmp
popf
popa
xor
sbb
dec
and
into
scas
sahf
sti
cmp
out
popf
imul
loop
fisubl
adcl
fidivrs
pop
cmp
stc
test
out
js
mov
and
movsb
inc
negl
lods
xlat
jno
push
dec
arpl
stos
and
mov
adc
xchg
negb
out
mov
mov
xchg
lret
out
xor
and
xchg
sar
lods
cmp
mov
add
push
lahf
jle
ss
cwtl
sbbl
popa
or
imul
movsl
stc
xchg
xchg
sbb
xor
pop
inc
cmp
inc
cld
xor
sahf
subb
jb
sub
iret
pop
and
cmp
fwait
jle
psadbw
sub
cmpsl
jle
ja
mov
pop
adc
mov
into
hlt
loop
cmp
dec
gs
cmp
dec
cwtl
jns
xchg
xor
xlat
and
into
fwait
cmp
lock
dec
es
scas
cmpsb
pop
or
jecxz
xlat
subb
inc
inc
stos
shlb
pop
or
or
add
fidivl
fidivrl
out
adc
add
scas
sub
push
jo
mov
sub
ds
mov
xchg
in
pop
mov
daa
mov
push
mov
inc
jle
stc
loope
test
dec
ret
xchg
dec
ds
outsb
lock
push
xor
loopne
sub
ljmp
cltd
and
dec
push
jo
mov
adc
xchg
and
pop
sbb
sahf
dec
mov
rolb
aaa
pop
insb
ja
xor
cwtl
add
xor
lret
push
mov
int
sti
mov
out
lock
mov
scas
adc
adc
xchg
adc
pop
and
mov
mov
in
loopne
xorb
fidivs
pushf
push
aaa
mov
in
insl
std
jbe
dec
aad
pushf
inc
mov
or
pop
filds
dec
mov
repz
jmp
in
mov
lahf
cmp
sub
dec
std
cmpsl
add
lea
divl
or
repz
movsb
cmp
push
dec
cmp
xor
xchg
mov
sub
into
shlb
daa
test
movsl
data16
pusha
lcall
or
gs
mov
stc
xor
jl
or
psubb
push
pop
lahf
fcoml
and
sti
pop
gs
popf
out
push
test
je
jmp
pop
repz
adc
fiadds
test
fs
repnz
clc
and
xor
xchg
bswap
enter
stos
jae
xchg
xor
xchg
mov
adc
dec
jb
and
icebp
xor
lock
repz
and
xchg
cs
iret
rolb
out
jnp
faddl
jmp
xor
neg
push
sbb
je
in
jnp
jns
xchg
mov
into
mov
or
lcall
clc
cwtl
popa
addb
loope
cmp
mov
sub
cmc
out
pop
cmpb
push
mov
add
sub
out
das
sbb
mov
dec
inc
mov
lods
pop
xchg
div
xchg
or
into
cmp
inc
ss
scas
in
fs
dec
sub
xchg
push
mov
cmp
adc
sahf
cmp
fistpll
int3
sub
add
fdivl
enter
jno
sbb
mov
rcrl
pop
dec
inc
out
repz
out
pop
stos
push
pop
mov
mov
iret
mov
xchg
pop
ret
lock
cmp
fnstsw
dec
and
ret
test
and
xor
and
pop
int
loopne
popf
add
iret
sbb
ss
push
xchg
daa
add
jge
mov
pop
inc
xchg
inc
fcoms
out
jg
cmpsb
sub
movsb
jl
and
push
mov
scas
in
dec
out
in
dec
lock
cmc
ret
sub
xor
je
mov
lods
hlt
pop
mov
imul
mov
std
faddl
push
ret
mov
xor
xchg
rorb
jbe
call
mov
mov
xchg
jns
cmpsb
out
das
hlt
push
std
xor
mov
je
jmp
mov
cmp
call
mov
jmp
bound
sbb
les
jo
and
outsl
mov
xor
loope
std
test
andl
pop
xchg
pop
rep
or
mov
xor
xor
mov
sbbb
das
icebp
movsl
fimuls
out
dec
pop
lcall
pop
xchg
xor
jg
movsb
mov
outsb
inc
test
repnz
repnz
fdiv
mov
add
add
jecxz
mov
test
cld
dec
and
loop
mov
mov
cmpb
inc
out
mov
out
dec
fadds
cmp
mov
ljmp
aaa
mov
pop
test
es
sbb
push
out
loopne
add
in
cmpsb
cs
sbb
adc
pop
mov
je
dec
cld
clc
sbbl
jl
fcomp
xor
mov
orps
add
or
cwtl
fwait
and
adc
cmp
dec
movsl
ss
mov
mov
pop
adc
push
cwtl
adcl
push
sub
pop
ret
adc
vdivsd
push
pop
out
cmpsl
aad
sti
in
xor
xor
je
cld
add
mov
jbe
push
cmp
mov
sub
dec
mov
pop
push
mov
mov
ljmp
pop
pop
inc
push
xlat
xchg
xchg
mov
push
push
cmpsb
xchg
fistpl
pop
sbb
dec
push
clc
test
iret
sub
les
lret
sbb
adc
pop
pop
mov
cmc
in
jae
rorl
jp
ja
stc
dec
sbb
dec
je
mov
nop
cmp
decb
stc
inc
lret
lcall
cmp
cmpsl
aaa
cmp
sub
sarl
or
frstor
push
scas
or
out
inc
mov
pop
sarb
scas
in
dec
xorb
sub
daa
inc
stc
xchg
into
mov
add
test
push
mov
int
adc
test
ss
scas
push
mov
jbe
loop
ret
aaa
cmpsl
pop
or
sahf
jb
jae
dec
iret
and
imul
std
xor
push
push
mov
mov
shlb
mov
add
cmpsb
push
fisubl
icebp
repz
xchg
cmp
jl
jb
fimuls
cltd
sti
cld
xchg
lock
xor
jp
xchg
and
scas
push
dec
fbld
xor
jmp
fwait
nop
movsl
aad
sub
sub
lds
into
int
add
pop
ffreep
sbbb
xor
lock
push
not
shll
add
jb
loop
stc
mov
xlat
mov
push
repz
inc
mov
xchg
aam
push
push
sbb
orl
cltd
pushl
mov
fldcw
cmp
sti
xchg
xchg
ljmp
and
mov
imul
inc
mov
mov
sbb
push
add
bound
popa
and
or
pusha
rclb
adc
fwait
out
mov
cmpsl
sub
hlt
mov
popf
adc
jmp
adc
pcmpgtd
jbe
mov
cmc
push
pop
push
enter
xchg
push
jo
mov
in
fnstenv
ss
repz
add
aad
outsl
sub
adc
in
icebp
pop
test
lcall
jmp
xchg
mov
addr16
push
mov
pop
insl
push
js
outsb
shr
clc
loopne
addr16
sub
push
pop
cmp
popf
jae
and
scas
push
aaa
div
aam
loopne
loopne
cs
jno
mov
stos
dec
cmp
in
das
sbb
sub
jns
jne
or
sub
rorb
mov
dec
mov
sbb
jecxz
ret
push
lock
lock
mov
mov
outsl
lahf
ljmp
popf
ret
mov
jae
daa
sahf
cmpsl
push
sbb
fdiv
xlat
es
rclb
add
das
dec
and
adc
and
mov
push
in
les
mov
cmp
das
mov
sar
pop
sarb
push
cmp
imul
xor
xor
sbb
jae
dec
jb
ds
mov
mov
cmp
add
sub
mov
fwait
cmpsl
movsb
loope
ror
ret
mov
pop
inc
mov
shll
aad
lret
pop
fs
into
les
sub
ja
imul
cmp
orl
movsb
cmp
push
pushf
std
lea
loopne
jmp
mov
icebp
mov
jp
aas
cmpb
mov
cmpsl
popa
push
inc
je
mov
xchg
rep
sub
mov
mov
insl
xor
test
lods
push
dec
mov
repnz
jns
xchg
mov
shlb
hlt
movsl
xor
mov
repnz
sub
mov
pop
stos
rcrl
adc
loope
push
xchg
push
test
int
add
mov
or
ret
jmp
in
push
inc
push
cld
push
or
mov
mov
sub
mov
xor
inc
test
mov
or
into
out
mov
inc
cmp
insb
mov
mov
sahf
repz
cmp
in
adc
repz
push
lcall
xor
inc
in
cmp
addl
sub
insb
jo
jl
adc
mov
call
xor
xorb
xchg
sub
mov
fadds
mov
in
out
mov
xor
or
add
dec
adcl
pop
inc
loop
or
xor
or
inc
cmc
mov
xorb
cld
rolb
int3
xor
loopne
cld
or
mov
push
clc
pop
add
lods
dec
adc
cmpsb
inc
fbld
sbb
mov
cvtps2pd
aas
mov
cs
int
push
xor
hlt
into
div
lods
sbb
push
add
lds
jmp
mov
sti
pop
mov
pop
mov
push
scas
ret
pushf
jo
daa
ficomps
in
shll
jb
and
xor
xor
mov
cmc
lods
aaa
nop
out
jg
test
xor
mov
and
jae
lret
push
cmpsb
push
dec
bound
aam
mov
scas
aaa
xchg
mov
arpl
cmp
mov
adc
mov
xor
mov
mov
popf
iret
xchg
fmuls
in
xchg
or
jnp
and
or
lods
xlat
push
jge
mov
mov
adc
sbb
push
mov
mov
adc
aaa
sahf
jb
mov
xchg
enter
ljmp
pop
cmp
rorb
pop
movsb
mov
nop
fwait
test
xlat
add
xlat
xchg
jp
jb
cmp
lahf
jo
mov
cvttps2pi
stc
fistl
dec
jns
add
sbbl
cmc
cli
popf
lcall
inc
mov
xor
in
out
xchg
xor
leave
or
mov
popf
es
xchg
mov
mov
fdivrl
dec
out
mov
sub
mov
sbb
mov
daa
pop
loope
mov
xor
sti
jge
fisubrl
xor
jl
out
rclb
mov
xor
sbb
inc
jecxz
or
adc
xor
insl
lret
sbb
mov
pop
popf
xchg
mov
test
mov
jo
call
in
popf
push
mov
call
les
add
cmp
bound
cmp
int3
es
mov
daa
add
jnp
xchg
out
cmp
cs
jbe
or
push
cwtl
nop
in
push
fistps
jp
sbb
mov
xor
xchg
mov
mov
out
movsb
into
in
into
shlb
dec
jecxz
scas
sbbl
ror
xchg
sub
xchg
mov
push
popl
in
scas
sahf
push
mov
cmp
pop
aaa
addr16
loope
cltd
push
pop
xchg
sub
xchg
setb
jne
pushf
mov
inc
pop
mov
lods
inc
push
stos
movsb
adc
in
push
xlat
add
jecxz
xchg
sbb
in
jnp
lahf
sbb
fwait
and
mov
push
fldl
adc
jns
push
jge
adc
fs
aam
dec
jbe
inc
repz
testb
or
mov
pusha
out
pushf
push
add
sub
pop
lods
cmp
mov
in
sbb
cli
sti
roll
mov
cmp
sbb
add
jle
mov
out
xchg
add
cmpsl
ljmp
pop
fwait
sub
xchg
push
sub
mov
filds
pushf
pop
mov
cmp
lock
cmp
test
dec
cmp
mov
xor
fstl
xchg
fadd
ss
cli
loope
xor
inc
popf
cmp
inc
mov
ja
cmp
mov
popf
fsub
int
mov
pop
inc
aaa
adc
mov
inc
dec
sti
push
lock
es
jae
inc
cli
clc
repz
subb
cmpsb
ret
xchg
push
sbb
cmp
jbe
insl
leave
mov
testb
mov
arpl
xchg
sub
cmpsl
aas
xor
xchg
push
jge
inc
push
xchg
loopne
mov
mov
cmp
pop
add
push
js
inc
out
popf
jge
pop
aaa
mov
nop
cmp
lcall
mov
decb
xchg
int3
outsl
cli
dec
mov
outsb
pop
movsb
push
xchg
xchg
into
movsl
jns
stos
and
in
cmp
mov
movsl
xor
cmpsl
addb
out
lock
in
insl
mov
xchg
mov
add
clc
mov
loopne
pop
cwtl
dec
testb
xor
pop
faddl
mov
mov
test
jo
xor
add
add
aaa
fxch
sub
lock
ja
lea
cmp
out
cmp
outsb
xchg
fimull
stc
lods
dec
addr16
jae
sub
push
jo
xchg
inc
lret
jnp
push
or
in
dec
lea
or
out
ljmp
jecxz
cmp
stos
or
or
cmpsb
inc
divl
cmpsb
mov
cmp
push
idivb
jae
ss
sahf
call
gs
sbb
mov
xor
ss
xor
and
mov
push
scas
xchg
mov
add
ret
ficomps
jbe
dec
ss
mov
mov
cmpl
outsl
loop
adc
aaa
in
mov
sbb
and
mov
xchg
stos
mov
lcall
push
cmp
mov
cmpsl
sub
out
xchg
jns
shl
inc
cmpb
jb
aaa
sbb
add
pop
lahf
iret
sub
cmp
push
mov
nop
call
xor
mov
mov
repnz
ret
aaa
sbb
repnz
scas
mov
popa
jno
shrb
test
sub
or
mov
mov
insb
cmpsb
mov
cmpsb
data16
xor
dec
loope
mov
lods
shll
scas
push
stos
loop
shrl
aaa
inc
jnp
ret
push
inc
repnz
push
dec
orb
xor
dec
ret
inc
cli
shll
xchg
xor
adcl
inc
dec
adc
cmp
orl
sub
in
dec
xchg
pop
ret
faddp
inc
push
cmpsl
xchg
mov
push
or
mov
into
lock
aam
adc
sub
xchg
pop
in
sub
mov
or
pushw
and
icebp
jbe
cmpsb
in
aam
cmpsl
mov
jl
mov
test
gs
popa
and
adc
in
mov
fsts
out
sbbl
and
jmp
fdivp
mov
nopl
xlat
mov
fcomps
inc
lahf
gs
repz
pmaddwd
lret
cmp
mov
dec
lods
xlat
or
je
sub
insb
inc
lods
sub
enter
pshufw
and
cmovg
ja
pop
inc
jne
jbe
push
in
adc
movl
lcall
in
rcrb
mov
pop
outsb
mov
in
xchg
lock
xchg
cmpsl
fstl
or
addb
inc
rcrl
lods
jl
pop
stos
jb
or
cmc
mov
fwait
xchg
fsts
cmp
dec
mov
stc
pop
insb
or
jp
push
push
and
movsl
sub
inc
mov
xchg
divl
rcrb
or
and
sbb
mov
ds
fwait
mov
inc
mov
mov
mov
mov
fcoms
shlb
mov
jbe
stc
loopne
mov
add
mov
mov
xchg
pusha
mov
pop
xchg
shll
xchg
cmp
xchg
inc
jp
xlat
scas
push
xor
sub
cmpsb
xchg
push
sbb
sahf
stos
scas
sbb
xor
movsl
push
insb
cmpsl
pusha
ret
fwait
call
cmp
adc
xlat
jmp
mov
jo
fdiv
shll
mov
andb
sub
frstor
xchg
xchg
movsl
xor
addb
popa
push
aas
sbb
push
rorl
cmp
jb
cmp
mov
adc
jecxz
lock
lret
pop
and
fwait
into
mov
mov
sahf
shlb
cmc
lcall
out
in
and
mov
adc
jbe
cwtl
cmpsl
js
aam
inc
xor
lock
mov
fmuls
mov
add
pop
push
cmpsl
fadds
sahf
ja
out
push
xchg
cmpsb
aaa
mov
inc
cli
dec
jecxz
mov
push
push
adc
mov
daa
mov
divl
mov
jnp
adc
fisubrl
dec
xor
jecxz
mov
out
mov
cmp
mov
mov
repnz
js
sti
cli
cmp
or
mov
pushf
inc
mov
push
inc
cmp
and
lahf
mov
inc
je
mov
sbb
mov
imul
mov
mov
aas
cmp
or
pop
lock
loop
push
mov
mov
lret
cmp
imulb
jle
pop
mov
mov
loop
and
ret
jo
mov
cmp
inc
or
ljmp
iret
cmp
insl
subl
gs
lods
mov
ret
push
jmp
jge
sahf
nop
push
shlb
mov
pushf
insl
and
sbb
push
mov
push
ss
push
aad
xchg
in
mov
cmp
loope
push
xor
xchg
cmc
shrb
mov
sub
mov
xor
inc
nop
xchg
xorb
mov
and
das
pusha
cmp
cmp
push
sub
jg
out
cmp
stc
jbe
mov
rorb
cmp
scas
pop
mov
mov
and
xor
decl
movsb
daa
ljmp
loop
jae
xor
xchg
pop
loope
jbe
sub
pop
pusha
cli
and
jle
inc
lds
jnp
adcl
mov
mov
into
add
out
nop
mov
es
xchg
loope
push
jno
lret
dec
adcb
aad
enter
test
inc
daa
mov
add
xchg
addl
xchg
lcall
push
idivb
or
ss
lcall
cmp
jmp
xchg
jp
dec
mov
ret
bound
jae
repz
hlt
nop
sbb
xorb
jae
mov
outsl
push
fwait
aam
out
cmp
and
out
push
jno
aam
fldenv
push
aam
xor
dec
cli
add
add
in
mov
cwtl
bound
cmp
mov
xor
mov
popf
int
rclb
mov
hlt
repnz
xor
mov
int
rcrb
ja
and
sub
popf
cmpsb
xor
inc
testb
lock
fwait
pushf
rcrb
inc
jge
loope
stos
rorb
pop
out
xor
xor
xchg
sub
xor
sahf
cmc
jae
out
mov
mov
aad
mov
jb
rorb
adc
xor
sbb
fwait
adc
or
into
faddl
mov
xchg
xor
cs
outsb
idivb
jbe
mov
stc
nop
jg
movsl
push
cmpsb
mov
ret
and
add
jb
insb
add
lock
sub
lods
scas
cmp
ja
adc
int
bound
movsl
jnp
cs
inc
push
push
popf
adcb
push
or
add
leave
add
jecxz
mov
sbb
loopne
jne
lock
gs
jmp
inc
ljmp
mov
cli
daa
cld
xorb
dec
test
ja
lcall
es
icebp
pushf
stos
xor
pop
and
mov
les
bound
xchg
dec
jnp
int
xor
shrl
mov
out
cli
cs
cmp
push
call
sbb
repnz
ja
cmp
loop
or
and
leave
mov
lods
data16
shll
xchg
xchg
mov
inc
xor
outsb
cmp
pop
sub
cmpsb
xchg
mov
call
xor
jb
adc
unpckhps
rorl
jne
ret
or
ljmp
mov
fs
mov
mov
jg
cmpsb
sub
aaa
jg
xor
and
std
mov
and
xchg
inc
add
push
sub
fwait
xchg
icebp
outsb
adc
xor
jo
dec
mov
sti
popf
cmpsb
jge
sahf
pxor
adc
into
mov
sti
pop
mov
out
lcall
xor
divb
mov
and
xor
adc
movsl
jge
in
cs
dec
mov
stc
sub
sbb
jb
stc
mov
inc
sbbb
xor
ss
or
cmp
popf
jns
jo
or
mov
xchg
out
push
lock
mov
mov
icebp
xor
ret
push
orb
push
cmp
mov
sub
aaa
repnz
fmull
scas
cmp
in
fcmovu
in
xlat
nop
mov
js
cltd
xchg
xor
cmp
sub
popa
pusha
sahf
mov
mov
xchg
lds
mov
aam
xor
sub
into
addr16
scas
ja
clc
inc
cmp
pop
mov
jo
add
push
sbb
cmp
out
jp
lock
mov
xchg
jmp
sbb
adc
scas
cwtl
jo
mov
dec
in
pop
push
sub
xlat
mov
jno
int3
mov
jno
or
mov
xor
out
repnz
cmp
mov
hlt
ja
inc
and
mov
pop
xchg
inc
pushf
ja
or
push
xor
lcall
and
jp
movsl
xchg
push
movl
jge
sahf
xor
and
sbb
xor
lods
dec
ds
mov
es
repnz
test
fdivs
inc
scas
cmp
movsl
sub
test
xchg
shlb
test
test
sub
adc
in
in
stc
movaps
mov
sub
jb
ljmp
push
shl
sub
mov
cmpb
in
push
stos
stc
cmp
add
gs
repz
fstl
inc
pop
test
mov
sub
dec
and
xor
jp
add
and
or
adc
decb
ret
test
cli
or
xchg
clc
dec
adc
loop
mov
xor
dec
pop
mov
xchg
repz
xchg
xchg
dec
repnz
mov
xchg
jge
stc
xchg
ljmp
xor
or
and
cwtl
jp
jmp
lods
aaa
xchg
nop
ficomps
xor
aas
cmc
and
mov
addr16
mulb
sbb
xor
ljmp
xor
popf
push
sbb
cltd
or
aaa
pop
lds
aaa
ficomps
pop
cmp
sub
xor
xor
mov
inc
mov
xchg
hlt
icebp
in
push
jo
mov
mov
jle
ficomps
outsl
dec
mov
lcall
push
mov
push
xacquire
sub
mov
loop
std
push
sbb
or
in
cmpsb
and
xor
inc
lret
rcrb
cld
movsbl
pop
cwtl
mov
lock
sarb
and
adc
out
out
adc
cs
iret
sbb
jbe
xor
sbb
push
push
sbbl
push
mov
out
sbb
gs
dec
cmp
testb
ja
inc
sbb
negl
insl
inc
or
jo
dec
sbb
div
or
mov
cmp
or
inc
inc
out
ret
or
ficoml
inc
fcmovbe
or
lret
mov
insl
sbb
push
and
mov
add
mov
test
call
out
repnz
lret
sub
xchg
ljmp
in
jmp
ret
or
out
cmp
mov
mov
popf
xchg
inc
mov
sbb
dec
jmp
xchg
mov
or
cmpsb
xchg
inc
mov
xchg
mov
adc
xchg
xchg
sbb
add
and
sbb
mov
js
movsb
jb
push
or
jo
adc
sar
dec
stos
inc
jg
in
jmp
cmp
jae
call
bound
sbb
stc
arpl
mov
pop
adc
mov
fwait
cmp
mov
std
std
repz
fisubrs
ret
jmp
mov
ret
bound
inc
inc
pop
cmp
inc
and
xchg
insl
mov
mov
cltd
xchg
lods
sub
call
mov
jbe
arpl
xchg
jo
lock
sub
jbe
icebp
ficoms
aad
xchg
fcmovb
or
arpl
sub
mov
stos
cld
lret
jg
orl
cld
jae
repnz
sub
out
adc
mov
add
fsubrs
jae
pop
repz
stos
fidivs
int
or
mov
sub
std
push
ss
into
and
arpl
inc
loop
ficomps
popf
dec
je
and
lcall
roll
fwait
lock
lods
add
jno
mov
mov
pop
xchg
call
loope
in
sub
test
stos
pop
cwtl
mov
sub
jo
add
and
stos
scas
jb
lock
xchg
ficoml
ret
nop
hlt
test
data16
lock
xchg
mov
and
test
cmp
sub
xchg
fsubr
xor
mov
or
lds
dec
lret
dec
xchg
shrb
mov
xchg
cmp
sub
gs
and
mov
cmc
loop
cli
lahf
and
mov
lret
test
xorl
pop
xor
dec
fidivs
repz
hlt
or
mov
ss
mov
mov
push
sub
stos
mov
test
add
pusha
mov
mov
test
sub
ds
inc
mov
aas
cmc
ja
bound
adc
iret
jbe
lods
out
mov
das
cmpl
and
jb
adcl
jle
sbb
sti
popa
stos
mov
subb
repnz
dec
movsb
mov
jp
fisttps
add
mov
repnz
jl
mov
xchg
pop
push
repnz
cs
pop
jp
into
and
ret
mov
mov
xchg
jbe
pop
push
loop
or
in
adc
scas
push
add
lock
stos
jl
in
adc
cmp
repnz
add
dec
out
inc
inc
mov
inc
cmp
sbb
cmp
ja
xor
dec
mov
sub
xchg
xor
ss
cld
xorl
and
pop
fstl
loop
and
xor
adc
nop
push
mov
andb
mov
cmpsl
cmpl
pop
pause
mov
lahf
sti
jge
cmp
sbb
cli
out
or
mov
or
data16
xor
and
cmc
inc
test
mov
clc
inc
mov
or
mov
ss
sbb
nop
mov
mov
mov
inc
imul
cmpsb
add
push
icebp
or
dec
mov
out
sub
in
sub
imul
inc
dec
dec
cltd
aaa
cmc
cmp
or
mov
shrb
or
into
mov
shlb
xor
fnclex
fwait
cmp
mov
cmp
mov
xchg
ret
xor
shl
lock
nop
sub
movl
and
sti
mov
call
xchg
xchg
xor
or
mov
hlt
push
mov
xchg
add
sub
or
mov
pop
add
mov
dec
mov
ss
lock
lea
xchg
add
add
hlt
cmp
mov
sub
adc
inc
cmpsl
xor
or
scas
mov
mov
lcall
mov
in
cld
lods
out
dec
mov
inc
xor
inc
sbb
pop
push
push
cmc
pop
repnz
inc
adc
sub
les
into
call
cmp
mov
xchg
xchg
or
loop
movsl
mov
mov
inc
nop
das
data16
jae
and
xchg
orb
dec
je
jne
cli
sub
sub
cmp
mov
dec
sti
stos
rclb
cmp
fsubrl
sti
addr16
xchg
jae
repnz
sbb
pop
pusha
hlt
mov
arpl
inc
call
loope
sbb
stc
outsl
jle
pop
out
lods
push
ret
ret
cmp
mov
mov
xor
inc
pop
fbld
movsb
mov
hlt
or
and
enter
int3
cmpsb
or
dec
outsb
sub
mov
xchg
cs
popa
mov
mov
xor
mov
and
call
xor
mov
negl
or
mov
movsl
iret
xchg
adc
mov
or
sbb
adc
add
lcall
data16
mov
inc
cmpsl
mov
xchg
arpl
sbb
xchg
pushf
jae
sub
dec
popf
loop
cmp
in
adc
pop
sub
xchg
sub
movsl
pop
sahf
sbb
ret
stos
into
call
les
mov
push
mov
jne
jnp
imul
add
lock
jmp
jg
push
mov
xchg
nop
in
xchg
std
dec
mov
and
adcb
xchg
lock
repz
testb
fwait
and
es
jp
push
nop
aaa
sub
mul
shll
mov
mov
shl
jp
jb
aaa
pop
and
mov
loop
in
daa
sbb
adc
ret
xchg
mov
mov
loop
sbb
imul
xchg
jecxz
in
dec
add
xor
mov
or
ss
andl
psraw
outsb
or
cmc
and
push
jecxz
jbe
shll
fimuls
mov
cmp
ss
aam
cld
clc
jle
adc
and
in
or
inc
outsl
jp
cmc
es
add
es
or
stos
inc
xchg
push
test
int3
mov
neg
sub
mov
mov
sub
js
nop
mov
pushf
mov
mov
push
mov
xchg
stos
mov
jns
jmp
ds
sub
int3
dec
cmp
mov
dec
and
jb
dec
push
inc
mov
xor
mov
jae
cmp
mov
inc
and
lret
jmp
lods
lock
jb
mov
xlat
and
jo
mov
lock
jbe
int
sub
cmpsb
out
int3
add
xor
sub
sub
stos
and
cmp
xchg
jns
fidivl
inc
enter
dec
cmp
das
outsl
divb
push
insl
scas
inc
sbb
in
inc
jl
loop
shr
cmp
and
lods
sub
jbe
mulb
clc
cmp
and
xlat
repnz
xchg
jo
adc
sbb
clc
jae
lahf
mov
sahf
xor
push
imull
pop
movb
dec
mov
cmp
inc
push
cltd
fwait
adc
test
nop
xchg
and
dec
int
and
and
push
jp
mov
or
or
cmp
cmp
pusha
pop
add
xchg
push
mov
ja
mov
cmp
jmp
stos
add
add
mov
sub
iret
pop
loopne
adc
cmpsb
into
repnz
js
sbb
mov
ds
rorl
push
dec
xchg
dec
cmp
dec
scas
or
inc
mov
adc
or
xchg
or
mov
and
pop
jp
lcall
shll
fidivl
js
popf
sbb
push
mov
dec
pop
ret
push
pusha
dec
push
or
adc
mov
daa
inc
push
jo
clc
jmp
pop
inc
pushf
dec
xchg
or
xor
mov
ret
scas
mov
sti
out
or
sahf
adc
cmp
fdivs
sub
mov
rorb
mov
out
ffree
sahf
repnz
hlt
loop
and
jns
xchg
es
adc
pusha
icebp
mov
push
jbe
xchg
in
jae
adc
cmpsb
shll
mov
subl
xchg
addr16
jbe
adc
loopne
xor
es
jne
inc
out
popf
arpl
sbb
xlat
cmp
xor
sbb
pop
ja
cwtl
sbb
fistps
push
pop
inc
mov
ds
push
push
mov
push
jmp
inc
push
pop
sbb
and
addl
inc
cld
cmp
push
push
out
dec
mov
pop
dec
ja
add
adc
cmp
xchg
mov
sbb
cmp
sbb
cmp
xor
cmpsb
ficompl
cmp
mov
xor
xor
lods
adc
or
cmp
es
add
pop
inc
and
das
fwait
cmp
xadd
push
pop
subb
sbb
xor
jbe
sbb
add
jbe
cli
lahf
xchg
cmc
rcrl
adc
mov
stos
dec
hlt
jnp
popf
inc
sub
ljmp
repz
mov
mov
es
mov
or
cltd
fcomi
test
lods
adc
cmp
mov
adc
lds
cmp
popf
cmp
cmp
sub
cltd
jns
ss
das
mov
pop
cmp
mov
jge
sbb
xchg
sub
mov
push
jbe
sub
enter
repz
stos
inc
mov
lods
xchg
inc
mov
pop
inc
cmpsb
nop
jg
cmc
mov
lret
pop
nop
dec
pop
sub
and
xor
sub
sub
sti
loopne
cltd
stos
popl
jo
jo
pushw
sti
std
fldlg2
loop
jmp
mov
ss
xchg
rolb
out
inc
subb
mov
push
sahf
jne
jb
xchg
lcall
push
mov
xchg
das
in
nop
push
jmp
shr
cmp
push
push
mov
dec
mov
mov
mov
sub
push
mov
mov
sbb
andb
inc
orl
cmp
mov
mov
mov
enter
jo
fbld
xchg
sbb
jb
enter
inc
idiv
ja
cmpsl
mov
xchg
cmp
lret
inc
addr16
or
pop
sub
mov
jo
popf
addr16
adc
jg
mov
ret
pop
xor
xchg
addr16
mov
ret
test
orl
and
cmpsb
in
adc
pop
mov
xor
adc
cmp
mov
popf
shll
mov
or
cmpsl
inc
ret
incb
popf
jns
dec
xor
cmp
pop
sti
mov
sbb
inc
jle
and
scas
dec
add
push
aam
repz
xchg
stos
dec
sbb
mov
xlat
xchg
mov
xor
sbb
orb
idivl
lahf
mov
or
jo
pop
push
cmp
ss
into
nop
xor
sub
push
add
mov
adc
hlt
clc
push
mov
pop
xor
jp
icebp
in
xor
cmp
in
stc
icebp
adc
call
mov
xchg
sbb
sbb
into
xchg
in
cmpsb
push
iret
ret
sbb
aad
and
movsl
push
mov
mov
cmpb
and
jae
cld
cmc
xchg
jp
loopne
xchg
mov
mov
xor
clc
shrl
fcoms
pop
push
cmp
jne
mov
dec
mov
sub
in
out
adc
xor
mov
cmp
add
xchg
sub
popf
add
cmc
mov
push
mov
out
cli
daa
cmp
sub
jmp
cmpsl
out
inc
cli
cmp
repz
push
mov
dec
je
mov
mov
inc
xchg
mov
sbb
cmc
cwtl
mov
mov
jge
adc
sub
js
outsl
jmp
mov
push
sub
shl
shr
lea
outsl
xor
iret
out
negb
jbe
ds
xchg
mov
ss
and
ret
hlt
ss
adc
es
loop
lcall
mov
jno
in
jecxz
mov
inc
jmp
xchg
or
ss
jecxz
sbb
imul
cmp
inc
pop
ret
cmpsb
enter
xchg
push
int3
aaa
push
inc
xchg
add
test
dec
dec
pusha
ljmp
outsl
push
pop
mov
lret
jle
jae
sub
sub
mov
stos
mov
addr16
loop
xchg
mov
pop
jmp
lcall
xchg
sbb
jbe
sti
lods
jb
out
pop
mov
cmp
imulb
add
jno
insl
bound
in
mov
cmp
loope
jecxz
lcall
cmpl
ja
push
push
pmaxub
jb
pop
jle
cld
xor
and
jecxz
sub
cmpsb
pop
ja
fcmovnbe
push
std
stos
add
push
pop
loop
aas
and
loop
jbe
jbe
push
inc
popa
push
xor
push
xlat
repnz
mov
push
pop
sbb
iret
es
xchg
and
ficompl
out
xchg
movsl
cmpsb
pop
stos
pusha
push
xchg
dec
pop
xchg
mov
push
dec
sub
mov
mov
lret
adc
jmp
out
pusha
add
repnz
cmc
aaa
and
mov
mov
and
icebp
mov
in
mov
adc
lcall
lret
dec
leave
sub
dec
sbb
add
repnz
cmc
ret
aad
mov
cmp
jo
out
in
out
sbb
nop
mov
jmp
add
cmp
cld
dec
jp
and
add
or
iret
jle
and
cmp
dec
jle
out
sarb
lret
mov
movsl
mov
stc
insl
mov
stos
frstor
fldl
pop
adc
jmp
pop
cmp
rorb
sub
xor
xchg
dec
ljmp
and
adc
mov
mov
inc
aad
pop
out
mov
in
lds
lock
iret
out
pop
and
movsb
loope
push
or
adcb
and
call
shlb
mov
push
inc
lods
in
sub
lahf
xchg
arpl
xchg
ficoml
jae
pop
in
cmp
adc
int3
add
rep
jb
adc
pop
pop
lock
mov
gs
jae
and
mov
sub
pushw
repz
pop
jge,pt
lds
and
ror
sbb
xchg
lods
cmc
mov
sub
jno
scas
xor
jbe
jmp
fs
je
xorb
or
or
sbb
sbb
int3
out
fs
shld
inc
add
scas
fwait
mov
ss
add
cli
cmp
and
sahf
sub
mov
testb
jnp
imul
jle
xchg
lock
jl
in
pushf
mov
and
adc
xchg
in
jbe
add
mov
in
in
mov
idivb
jbe
notb
mov
jg
repnz
sub
and
testl
xchg
popf
js
mov
cmpsl
arpl
or
xchg
pushf
sub
adc
in
fwait
sarl
pop
and
push
and
add
jns
and
push
and
mulb
test
sub
mov
fwait
mov
dec
jp
push
sub
mov
ret
push
sub
add
xor
mov
cli
ret
mov
fmull
add
sub
loopne
add
out
dec
cwtl
cmp
inc
cltd
fxch
jnp
cmp
divb
sarl
cmp
sub
ror
xor
xchg
or
loop
orl
cmpsb
in
cmp
mov
inc
jp
arpl
nop
jb
and
xor
fimull
mov
mov
dec
cmc
cmp
adc
bound
repnz
aas
enter
push
les
cmp
ljmp
mov
sub
sbb
jg
xor
add
xor
mov
and
pusha
or
mov
sbb
repnz
mov
sbb
mov
scas
mov
add
push
jo
shlb
cmp
ljmp
rolb
pop
repnz
cmpsl
xchg
xchg
xlat
inc
ss
bound
cmc
shl
and
in
lds
sbb
jl
repnz
xor
jecxz
loop
out
mov
mov
arpl
pop
std
xchg
data16
icebp
fsubs
and
sahf
adc
or
jb
mov
popa
jbe
xchg
scas
push
cmpsl
xchg
mov
pop
iret
js
mov
xor
movsb
add
jecxz
fists
in
sahf
nop
jb
adc
pop
sbb
scas
mov
lea
cmp
inc
cmp
jae
lea
pop
inc
push
fucom
mov
xorb
mov
inc
out
arpl
jmp
push
repnz
ss
mov
das
xor
mov
sub
or
push
ja
jmp
stos
xchg
sti
insl
xorb
adcb
xor
mov
dec
inc
sub
inc
push
sti
das
and
shl
int3
sub
and
xchg
cmp
repz
scas
nop
sub
fxch
mov
mov
xchg
fnstcw
divb
fs
lret
cld
xchg
mov
add
lcall
mov
idivb
es
sahf
mov
stc
mov
mov
bound
cmp
je
mov
ds
in
ljmp
stos
or
sbb
les
mov
mov
notl
adc
das
dec
xlat
in
scas
push
ja
xor
inc
pop
in
mov
inc
fmull
adc
sahf
inc
add
cltd
adcb
test
push
mov
mov
leave
out
pop
sahf
and
xchg
mov
in
xchg
mov
loopne
inc
or
addb
or
idivl
cld
xor
outsb
dec
scas
arpl
pushf
xlat
dec
repz
push
push
push
or
jp
cmp
adc
push
sbb
mov
loop
clc
cs
stos
dec
mov
cmp
mov
mov
xchg
and
dec
lcall
adcb
stos
xor
lods
mov
inc
pop
in
xor
xchg
xchg
inc
inc
push
inc
movsb
arpl
icebp
jecxz
vcvtsd2ss
xorl
mov
mov
mov
and
xchg
and
mov
push
xchg
add
pop
mov
cmp
in
mov
aad
cmp
inc
and
mov
jge
sbb
xchg
push
xchg
out
jb
gs
popa
test
ljmp
inc
lcall
cmpsb
mov
and
hlt
aad
push
lret
fidivl
in
fadds
adc
adc
fsubr
adcb
adc
inc
mov
testb
cmp
add
mov
jo
in
push
addr16
xchg
sbb
sarb
pop
or
mov
in
mov
cwtl
adc
mov
pop
and
pushf
pushf
xor
add
xor
popa
ss
adc
cwtl
mov
and
xchg
lock
shlb
mov
test
mov
ds
cmpsb
jecxz
mov
adc
or
outsb
arpl
xlat
je
les
popf
aas
mov
nop
xor
mov
aaa
fsubrs
pop
shlb
xchg
cmpsl
xor
sub
adc
fldl2t
jae
test
xchg
cmpsb
mov
mov
lock
xchg
les
icebp
inc
in
adc
push
xchg
dec
sub
adc
mov
xorb
sub
and
dec
cmp
jb
jp,pt
lahf
aaa
lcall
and
inc
inc
push
adc
xor
sub
pop
push
pop
and
stc
test
xchg
mov
mov
push
pop
and
pop
or
jl
mov
xchg
xchg
xor
jno
stos
cmp
and
imul
add
testl
and
mov
div
imul
and
and
or
sub
loope
and
cmpsl
mov
nop
mov
push
sbb
bound
scas
shl
cmp
aaa
xor
xor
ret
clc
pop
push
pop
cmpb
pop
jne
mov
je
cmp
mov
out
hlt
and
sub
mov
jmp
mov
xor
loopne
mov
cmc
data16
inc
ljmp
mov
nop
js
dec
jecxz
fdivrl
pop
adc
xchg
cmpl
std
repz
js
fisubrs
jo
stos
fiadds
and
mov
adc
andl
or
mov
shlb
sub
cmpsb
lock
ret
xor
push
push
sbb
adc
or
or
sbb
xlat
push
or
fbstp
cmpb
mov
cmp
xchg
cmp
add
sub
and
xchg
jne
push
test
inc
push
out
das
inc
sbb
sarl
out
aaa
adc
mov
fwait
jne
xchg
sahf
add
add
jo
xchg
in
outsb
mull
mov
xor
mov
add
lahf
out
inc
loopne
ret
cmp
cmpsb
jbe
rclb
jp
cmp
pop
repz
pop
pushf
add
mov
sbb
xor
idivb
stos
js
xorb
add
je
and
dec
popf
lret
xor
nop
push
fstps
popa
dec
out
fistpll
clc
sti
adcb
mov
jo
push
sub
sub
cmp
stos
pop
mov
jbe
ds
push
jmp
mov
int3
jge
inc
adc
mov
icebp
bnd
xchg
sub
xchg
jo
cmpsb
rclb
mov
in
xlat
pushf
xchg
mov
shl
cmp
stos
das
jecxz
and
mov
mov
std
xchg
push
sti
mov
aaa
cmp
sbbb
push
test
in
out
lods
inc
pusha
push
adc
push
mov
sub
xchg
xlat
orb
xchg
das
aaa
in
jnp
shlb
mov
push
cmpl
cmp
out
nop
ss
push
push
add
nop
js
mov
mov
subl
xchg
popa
cmp
addl
aad
xchg
aas
repz
call
stos
push
icebp
pushf
push
inc
leave
stc
loope
fimull
call
mov
mov
and
cmp
push
jle
subb
fnstenv
inc
or
sbb
cltd
push
in
andb
cwtl
cmp
negl
ret
sahf
loopne
jp
sub
rcrb
dec
xchg
ljmp
mov
adc
mov
mov
repnz
pop
or
sub
xchg
notl
adc
sbb
jb
popf
push
cmp
out
add
xor
xor
push
test
adcl
jae
hlt
movsb
dec
cmp
mov
mov
in
pop
loop
or
mov
jb
xor
iret
int
mull
orb
out
mov
xor
jb
mov
add
insl
jns
movsl
jg
out
addr16
dec
mov
mov
mov
lret
xchg
adc
push
sub
pop
repnz
mov
xor
bound
or
dec
aas
mov
shrl
mov
xor
cmp
sarb
mov
xchg
cmp
and
mov
add
jb
and
jne
in
and
enterw
and
adc
sbb
test
ss
mov
or
loope
lret
in
stc
add
lea
mov
cmpsl
jb
mov
mov
add
out
lods
dec
fwait
inc
push
lahf
fldt
adc
add
dec
ret
dec
insb
push
repz
mov
js
push
push
sti
stc
xor
dec
adcl
mov
repnz
enter
imul
sub
fsubrs
xor
xchg
jnp
push
loop
addr16
push
test
outsb
and
jo
push
mov
or
lcall
inc
fdiv
push
mov
xor
cltd
dec
lret
inc
pop
cmp
add
sbb
jecxz
das
movsl
and
outsl
cli
leave
xor
fs
jnp
jmp
xchg
ljmp
push
adc
inc
inc
pop
mov
sub
add
dec
dec
pusha
fistl
mov
gs
insl
cmc
mov
cmp
sub
cmp
dec
cmp
inc
imul
push
mov
jb
fstl
xor
inc
sbb
sbb
jnp
pusha
push
push
call
jo
mov
jne
push
mov
add
loop
das
cli
data16
addr16
ljmp
mov
callw
adc
xchg
mov
dec
sub
lahf
jo
fwait
push
xorl
shll
xor
mov
subl
enter
dec
sub
hlt
daa
repnz
mov
test
push
loop
outsb
aaa
repz
test
fstp
and
and
ss
jae
cwtl
in
dec
aam
xor
in
lret
push
data16
sub
fwait
mov
shll
je
mov
out
ja
and
sub
movsb
xlat
and
mov
mov
mov
mov
mov
fs
gs
dec
cmc
loope
adc
adc
sub
mov
aaa
mov
push
mov
test
and
fbld
xchg
lahf
test
inc
clc
jo
add
in
mov
xchg
vaddss
jae
mov
mov
jno
dec
mov
mov
xor
mov
or
cld
mov
inc
repnz
sbb
xchg
jmp
loopne
jecxz
divl
dec
pop
cltd
fyl2x
rorl
sbb
sub
and
inc
sarl
mov
test
mov
daa
cmpsl
call
push
add
mov
sub
cmp
cli
push
inc
aaa
add
xchg
mov
out
pop
xor
mov
out
xchg
into
in
ds
or
mov
xor
negl
mov
inc
bound
or
out
fistps
xchg
mov
test
lret
std
pop
cmp
inc
testb
adcl
or
loopne
mov
mov
scas
sbb
test
mov
jnp
mov
loope
outsb
aam
xchg
xor
lock
lods
push
mov
add
movsb
mov
inc
sub
jno
cmp
stc
jge
stc
jp
icebp
push
inc
add
outsb
mov
push
sub
xor
mov
sbb
ret
mov
imul
insb
push
sbb
cmpsb
adc
adc
cmpsl
repnz
in
cmpb
sbb
and
xchg
subb
xchg
out
outsl
xlat
push
adc
jno
outsl
push
mov
jb
out
pushf
movsb
in
es
push
lcall
add
mov
stos
repz
aad
movsb
arpl
mov
lahf
das
ret
inc
adc
mov
in
add
test
out
jecxz
mov
cmp
jnp
push
or
cmp
xchg
repnz
cmp
es
mov
shlb
pop
fs
das
adc
popa
aas
lock
mov
add
lds
inc
loope
test
in
pop
repnz
and
mov
ds
mov
dec
repnz
inc
in
fcomi
xchg
sbb
imull
popa
mov
xchg
or
movsl
dec
out
inc
das
out
fists
repnz
push
cmpsb
xlat
and
xor
pushf
test
insl
mov
das
or
dec
push
pusha
test
aas
scas
sbb
mov
pushf
mov
pop
push
push
mov
and
xorb
sti
in
mov
lcall
in
xchg
lds
push
in
sbb
mov
scas
and
out
sub
cmpsl
imul
pop
data16
cmc
ljmp
xchg
nop
roll
aas
ret
rolb
popf
dec
pop
in
adc
push
pop
mov
into
xchg
insl
in
or
pop
xchg
xor
mov
outsl
cmc
push
enter
mov
jmp
clc
sbb
nop
fwait
mov
and
jae
jae
or
fidivrs
jne
lds
sbb
lcall
sarl
cmp
inc
pop
scas
push
jmp
inc
mov
jb
bound
pop
cmp
arpl
push
sbb
movsb
and
and
addl
and
adc
mov
sub
pop
jge
jp
cmpl
int3
movsl
inc
add
lea
icebp
ljmp
loopne
add
mov
fnstcw
dec
xchg
clc
add
fisubl
xchg
repz
andl
repz
inc
jo
mov
jecxz
mov
int
pop
aad
arpl
and
loop
mov
jl
pop
mov
push
loop
out
xlat
dec
or
mov
sahf
mov
and
bound
pop
lcall
in
push
sub
xor
xor
imul
sbb
xor
push
stc
iret
sub
ret
mov
shl
out
lcall
push
jb
fnstenv
data16
in
scas
jmp
outsb
test
push
es
das
sbbl
pop
mov
push
push
mov
sub
scas
xchg
lret
mov
ds
mov
adc
push
push
add
popf
dec
sti
out
sahf
cmp
jb
fldt
aaa
mov
iret
mov
aad
scas
in
xlat
dec
xchg
sub
fsubrs
hlt
and
xchg
and
pop
sti
iret
lcall
mov
push
sahf
sub
roll
mov
aad
mov
arpl
mov
jmp
mov
aaa
adc
sarl
push
xor
sub
addl
add
sbbb
mov
add
and
jb
dec
call
mov
xchg
ret
out
inc
cs
mov
or
jecxz
and
cwtl
aam
mov
jns
add
inc
sysexit
xchg
pushl
inc
xor
pop
xchg
inc
andb
repz
jle
push
mov
ja
iret
sub
nop
push
xchg
push
push
xor
cmpsb
lock
and
inc
xchg
aad
pusha
or
outsb
sub
mov
or
mov
pop
push
pop
mov
shll
lcall
add
stc
jno
adc
or
iret
mov
push
fstpt
popf
int
add
xchg
cmp
ja
or
stos
andl
push
shl
imul
lret
data16
adc
movsb
or
cmp
stos
cmp
adcb
out
mov
imul
xchg
push
adc
push
xchg
mov
les
lahf
daa
repz
add
ds
stos
mov
or
adc
push
test
fidivl
inc
iret
jecxz
mov
push
into
cmpsb
adc
insb
jo
fbld
and
repnz
out
aad
fdivrl
xchg
xlat
loopne
mov
mov
push
call
cmc
xor
pop
sti
stc
cmpsl
mov
or
inc
loopne
hlt
dec
adc
aaa
test
daa
mov
stc
and
pop
xchg
or
loop
es
icebp
add
add
pop
ret
clc
mov
push
push
int3
pop
insl
add
cmp
inc
lret
mov
out
in
mov
das
push
movsb
or
pop
or
mov
arpl
das
incb
inc
mov
push
cmp
lods
dec
cmp
aas
test
rcll
or
cld
dec
sbb
clc
nop
ljmp
out
cmpsb
mov
popf
cmc
data16
dec
dec
loop
inc
into
xchg
out
jbe
lock
jmp
mov
mov
in
and
cmpsb
sbb
sub
ss
mov
das
cli
xor
cli
xchg
scas
test
xor
lock
mov
xchg
mov
pop
int
adc
rolb
dec
mov
xor
jge
out
fldenv
xchg
pusha
fsubl
sbb
rcll
mov
pusha
repnz
pop
lods
movsl
or
and
sub
test
sbb
popa
xchg
hlt
inc
xchg
pop
pop
mov
clc
cmpsb
jnp
mov
dec
xchg
sub
mov
out
push
push
mov
mov
es
cmpl
leave
xchg
ss
mov
ss
adc
fsubr
push
mov
lret
jae
add
sub
cmp
clc
sub
aam
mov
sbb
lods
sarl
xchg
jp
mov
in
scas
and
xor
mov
mov
and
stc
out
dec
jns
pop
add
and
ja
clc
les
mov
xchg
mov
cmp
out
add
push
mov
mov
and
adc
daa
mov
sub
lock
addb
xchg
icebp
sti
mov
xchg
adc
addl
xchg
notb
push
xor
mov
xor
xor
icebp
insb
cmp
push
out
cli
out
test
ror
cmp
mov
mov
xor
cmp
testb
mov
cmp
mov
xor
cmpl
sub
xchg
in
fdivp
mov
sbb
mov
jbe
sub
xor
cmp
jp
in
dec
mov
add
and
stos
sahf
andb
cli
cmp
mov
xor
pop
daa
xor
mov
leave
cmp
cld
and
cmp
mov
mull
in
jb
push
pop
popf
sbb
mov
sahf
sub
in
daa
cmc
add
add
mov
xor
clc
push
jg
sbb
adc
pop
mov
xorb
in
shrb
testl
mov
xrelease
data16
and
rolb
cmp
mov
sbb
idiv
mov
jne
mov
push
mov
orl
gs
and
mov
jg
cmc
adc
mov
aaa
rcrl
jb
test
ds
and
lods
es
push
repnz
out
and
or
xchg
add
cmp
push
push
jbe
ret
inc
mov
popf
test
bound
mov
xor
insb
and
inc
sbb
mov
sbb
cmp
dec
add
jge
imul
fdivrl
outsb
jo
xchg
in
out
lods
and
xlat
dec
xchg
xchg
mov
pop
or
popa
ljmp
sub
movsl
movsb
arpl
sbb
push
sti
int
and
es
sub
pop
adc
adc
ss
mov
imul
aas
dec
cmp
cmc
out
clc
dec
mov
loopne
test
mov
ss
dec
mov
rcrl
pop
clc
movsl
orb
pusha
sbb
addr16
popf
loope
sub
xor
xlat
jne,pt
xchg
dec
stos
dec
xchg
pop
test
lock
in
mov
dec
out
pop
iret
int3
xchg
sar
inc
ret
lea
xchg
pop
cmp
ss
jbe
mov
push
pop
out
jnp
ljmp
fdivrl
dec
sbb
push
es
fidivl
xchg
xchg
adc
ja
mov
cld
arpl
cmp
in
enter
or
addr16
mov
push
sub
pop
jae
and
inc
mov
xor
push
or
loop
mov
cli
cmpsb
popf
fiaddl
scas
push
adc
je
mov
cltd
aaa
fs
jmp
jp
call
xchg
ja
ret
fidivl
loope
pop
popf
jae
cmp
mov
mov
iret
scas
sbb
fsubs
jbe
stos
mov
movsl
int3
jno
loop
dec
nop
scas
lock
mov
subb
and
xchg
sub
andb
cmp
movsb
mov
dec
test
inc
xchg
mov
popa
pop
das
test
int3
insb
aaa
mov
ss
cmp
addr16
int
loope
ret
pop
nop
lahf
sub
and
mov
dec
bound
push
fcoml
sub
xchg
or
mov
jp
push
daa
mov
sub
xchg
lods
or
jae
pop
pusha
ss
hlt
aad
cmpsb
dec
loop
aad
loop
aaa
mov
into
or
push
push
iret
inc
push
notl
imul
pop
xor
xlat
cmpsb
xchg
pop
movb
mov
adc
testb
sbb
data16
push
aaa
sahf
jo
xacquire
and
mov
cmp
in
call
push
mov
add
filds
sti
rorl
sbb
mov
ja
and
dec
popa
ljmp
lods
ret
inc
xchg
push
xchg
cld
inc
mov
ss
stos
add
sub
cmp
iret
ss
fs
mov
adc
aas
push
bound
jp
push
cli
xor
ficoml
fcoml
mov
xchg
lcall
and
and
cmpsb
hlt
push
adc
mov
ljmp
ret
xchg
and
mov
loopne
lock
xchg
push
stos
push
gs
out
out
fsubrl
sbb
pop
cmp
lret
sbb
nop
push
or
dec
ss
repnz
add
xlat
pop
xchg
out
add
in
push
andb
mov
ljmp
xchg
lds
sub
subl
cmp
adc
mov
add
or
mov
jle
push
div
mov
repz
test
push
scas
xor
cmp
rorl
lcall
ss
mov
imul
jb
std
lock
lret
in
rclb
es
leave
fstpt
movsb
mov
inc
mov
jnp
or
insl
sti
pop
mov
fdivrl
lret
mov
xor
jbe
xchg
cld
mov
js
in
add
mov
xchg
je
or
xor
or
cmc
icebp
leave
sub
imul
cltd
dec
imul
push
lock
xchg
jge
sbbl
fwait
mul
mov
lods
ret
test
ss
push
lahf
scas
push
lock
int3
adc
ret
aaa
mov
xchg
push
stos
js
mov
pop
insb
sti
lret
lcall
cmp
daa
test
fcoml
inc
and
hlt
repnz
mov
lcall
inc
and
add
lock
mov
mov
add
out
adc
cld
add
mov
cmp
loopne
movsb
sub
les
or
push
cli
push
xchg
shrb
and
mov
mov
xchg
out
jle
mov
lcall
xrelease
pop
out
fcmovu
mov
in
subl
int3
pusha
xchg
jb
mov
mov
test
mov
cmpsb
in
insl
sarl
loopne
xchg
sub
std
mov
cmp
mov
out
mov
hlt
cmpsb
out
test
adc
scas
cmp
pop
jns
xchg
cmp
xlat
test
and
dec
mov
jecxz
cmp
lret
lock
push
pusha
aaa
jbe
shl
fwait
hlt
aaa
sti
sbb
and
gs
repnz
in
mov
xchg
xor
adc
xor
cmp
dec
mov
in
mov
xchg
and
std
gs
es
faddl
in
gs
push
fs
clc
jo,pn
pmulhw
jae
xchg
inc
pop
mov
lcall
adcb
mov
sbb
lock
dec
cmpsb
hlt
xor
xor
int3
and
adc
scas
push
fsts
cmpsb
xchg
dec
xor
and
lcall
cmpsl
cmp
xchg
in
movsb
jmp
or
ljmp
ss
or
negl
mov
mov
cmp
fstl
push
add
mov
test
int
enter
shr
or
xor
mov
es
loope
adc
mov
loop
pop
inc
inc
inc
sub
or
icebp
in
inc
sbb
setns
inc
pop
pop
sbb
add
xor
test
in
push
jg
or
scas
ss
stos
enter
xor
fisubrs
cwtl
cmpsl
mov
push
push
in
xlat
pop
into
xchg
pop
mov
arpl
std
sbb
or
or
inc
pushf
sbbb
out
ljmp
mov
ja
and
sbb
push
mov
hlt
xchg
or
xor
out
imul
ljmp
jae
sub
mulb
jp
bound
bound
cmp
push
cmp
jge
xchg
cmc
rcrb
hlt
fld
insb
mov
nop
sbb
push
mov
dec
push
roll
dec
je
pop
into
mov
add
mov
inc
into
push
add
outsb
rcrb
mov
xchg
into
cmovno
sbb
ja
in
jae
fsubp
push
insl
adcl
jecxz
je
movsl
repz
testl
xor
icebp
inc
lret
lea
add
notb
cld
jmp
movsb
add
xor
sub
sub
xchg
lock
xchg
cmpl
dec
and
popa
mov
mov
xchg
clc
mov
cmp
jp
xchg
out
scas
adcb
mov
sub
divb
stos
loopne
mov
clc
sub
push
cmp
push
mov
jb
sti
stc
mov
xor
lcall
sub
mov
xchg
mov
adc
es
dec
and
dec
mov
test
out
dec
shll
jecxz
fwait
jbe
cmp
cli
push
or
add
addr16
inc
data16
jbe
pusha
stc
repz
sbb
cmp
mov
cmpsl
cmp
mov
sub
imul
and
out
mov
add
xchg
ret
lds
scas
xchg
xchg
cs
in
mov
inc
aaa
xchg
and
std
in
lods
dec
fwait
loope
aad
in
js
xchg
popa
jg
push
mov
and
push
cmpsb
repz
sbbb
cmp
out
mov
mov
aas
xor
in
cmp
les
xchg
sub
xchg
push
or
into
pop
cmp
adc
and
ret
inc
pop
into
adc
lock
mov
xor
test
or
mov
in
into
mov
push
in
mov
inc
in
or
jbe
mov
pusha
and
xchg
loop
mov
mov
mov
nop
sbb
cmpl
out
mov
ja
cld
int
mov
mov
xor
or
jbe
dec
sub
jp
repz
push
scas
cmp
bound
sbb
xchg
pop
xor
les
jnp
xchg
xchg
sbb
loopw
sub
xchg
test
xor
pop
aas
sbb
dec
jl
enter
xchg
xchg
adc
pushf
pop
mov
inc
call
repnz
push
dec
call
in
adc
ljmp
adcb
xchg
and
dec
push
xchg
cmc
and
lods
xchg
popa
mov
pop
in
dec
lods
ss
add
outsl
sahf
mov
decl
inc
popf
nop
fcmovb
daa
mov
aas
push
and
les
ret
fisttpl
jb
adc
test
loopne
jno
das
xor
cli
mov
push
jb
ds
and
sub
daa
sarb
imul
lods
sbb
movsb
pop
rorb
leave
xchg
into
repz
cmp
into
or
mov
scas
sub
mov
mov
repnz
cmpsb
push
in
mov
jl
cmpsl
movsb
dec
scas
push
gs
dec
fstpl
mov
and
loop
outsl
push
das
mov
push
xor
ret
ret
stos
js
mov
or
ret
mov
dec
xchg
out
js
orb
and
fisttpll
cli
mov
mov
divl
aas
xor
inc
cmpsb
loopne
push
sub
push
and
out
adc
inc
cmp
dec
mov
hlt
xor
pop
xor
outsb
jbe
xor
icebp
stos
mov
xchg
xchg
add
jbe
xchg
inc
fmulp
jb
sar
aas
push
lods
mov
pop
lods
movsb
cmpsl
xchg
cmp
xchg
push
or
push
icebp
ljmp
mov
cmp
mov
mov
movsb
cmp
jns
std
das
shll
mov
push
jns
mov
arpl
mov
push
mov
dec
sub
movsl
repnz
js
je
and
jle
cmp
arpl
ret
xchg
xor
mov
ss
ja
adc
adc
pop
aas
mov
sub
mov
sti
stos
adc
add
pop
ds
jns
rcrl
nop
cmpsl
jnp
cmp
fs
xchg
cmp
cmp
inc
or
adc
mov
movsb
mov
mov
cmp
out
mov
in
mov
adc
or
das
jmp
push
mul
cmp
fs
mov
adc
mov
xchg
and
stc
lret
das
mov
mov
sub
jo
insb
add
dec
cmp
mov
cmp
jb
and
idivb
jle
repz
cmp
loopne
mov
lahf
xchg
dec
inc
std
icebp
cmp
addb
leave
out
test
mov
aaa
popf
xor
mov
sarl
shll
hlt
and
dec
xchg
out
mov
mov
stos
pop
mov
xor
jbe
or
andb
div
push
mov
cmp
or
mov
lcall
push
inc
nop
mov
adc
cld
xorb
sarl
jbe
mov
fadds
lea
shl
push
xorl
xchg
push
sub
iret
loop
mov
or
scas
xor
and
pop
and
inc
add
mov
mov
mov
adc
in
xor
nop
jp
jbe
mov
push
nop
mov
mov
jecxz
in
rcll
add
and
pop
mov
imul
xor
dec
je
and
cmp
dec
adc
pop
cwtl
and
shlb
mov
jnp
xor
nop
data16
clc
xor
shrb
cmp
aaa
loopne
mov
add
jp
lcall
cmpb
mov
adc
xchg
lock
nop
jb
adc
and
jmp
mov
cmc
mov
pop
and
mov
repnz
or
or
pusha
mov
xchg
in
call
pushf
adc
mov
xor
mov
outsl
mov
mov
adc
ds
loop
mov
lods
jge
inc
or
mov
decb
mov
sub
xor
add
in
mov
clc
cmp
iret
inc
xor
data16
in
mov
cwtl
sub
nop
out
jo
idivl
les
mov
jp
and
xchg
ja
xor
dec
cltd
pushf
sbb
xchg
out
aad
push
insb
xchg
pop
ret
push
adcb
jl
out
pop
stos
pop
dec
stos
into
dec
stos
mov
stos
cltd
dec
stos
or
int
jle
inc
repz
dec
jo
mulb
das
mov
leave
cwtl
cld
loopne
ss
cltd
cmc
xor
es
fdivl
lcall
lds
test
jecxz
mov
loope
mov
cmp
xor
cmp
test
rcr
iret
cmpsb
pop
test
test
mov
dec
out
les
or
jo
dec
pop
lods
popf
repz
adc
aas
dec
sub
shlb
in
das
cmp
jmp
ljmp
xor
xchg
test
ret
and
aam
icebp
adc
clc
mov
inc
mov
or
scas
or
mov
ret
pop
cmp
movsb
jmp
ds
fistpll
adc
iret
test
push
cs
mov
pop
js
repnz
pop
pop
inc
stc
loop
das
push
push
mov
sbb
pusha
test
mov
int
insl
arpl
js
push
test
lock
cmp
data16
bound
mov
sbbb
add
sbbb
mov
xchg
into
jbe
sbb
ss
lcall
stos
ret
inc
dec
div
cmp
or
insb
sub
in
loopne
sub
xchg
movsb
jne
push
sbb
cmc
nop
outsl
push
mov
jbe
mov
test
repnz
add
out
ficoms
sub
xchg
jo
inc
sub
ret
jno
mov
stc
or
pop
jecxz
outsl
imul
call
ja
pop
arpl
sbb
loop
sbb
push
fidivrs
jecxz
sub
xorb
sub
push
mov
test
push
cmpsb
or
loopne
or
fwait
jae
in
add
dec
mov
dec
ds
outsb
xor
pushl
sbb
shr
ret
mov
mov
inc
xchg
je
push
decl
ret
mov
mov
mov
aas
not
in
jbe
push
push
mov
data16
pop
lea
sub
add
pop
push
xor
cmp
cmp
xchg
push
divb
mov
or
xorb
in
jge
repz
and
xchg
orb
and
repnz
add
add
std
mov
add
cmp
adc
dec
xor
movsl
adc
mov
into
inc
in
pop
loop
repnz
bound
mov
xor
push
mov
fcomi
mov
push
aaa
sbb
mov
cmpsb
pop
jbe
pop
cmp
clc
xchg
pop
test
mov
sarb
and
nop
push
das
inc
cli
pop
inc
add
add
push
pop
hlt
dec
or
mov
jne
insl
arpl
or
jg
lahf
inc
push
and
or
stc
test
aas
stos
pusha
idivl
scas
or
push
inc
or
sub
adcl
and
nop
popa
mov
mov
adc
xor
fmul
xor
cli
dec
push
and
in
shrb
dec
xor
push
mov
js
pusha
xor
imull
outsb
pop
in
xorb
lea
pop
xchg
xor
dec
test
clc
mov
rclb
push
in
adc
cwtl
adc
mov
sub
mov
decb
pop
mov
and
or
xchg
cmpsb
mov
iret
pop
inc
popf
mov
push
cmp
call
test
xchg
xchg
mov
xor
movsl
cwtl
pop
add
icebp
ja
into
loop
lds
mov
in
sub
insb
push
mov
add
outsb
cld
ret
lods
or
ds
pop
das
jb
test
insl
shrl
imul
inc
out
push
leave
jb
mov
movsb
xor
in
pop
mov
xchg
dec
dec
xor
dec
in
or
jge
icebp
cmpsl
pop
dec
hlt
lret
push
jb
inc
jo
mov
xor
pushf
mov
mov
cmp
adc
sbb
mov
and
cltd
out
sub
cmp
fildl
fucomp
filds
and
cmp
arpl
mov
sub
push
popf
add
jno
xchg
rolb
cmpsl
pop
cli
jno
and
inc
fbld
mov
pop
aas
div
test
push
jno
fcmovb
cmc
pop
pop
jbe
lock
int3
add
mulb
jbe
jmp
lods
xchg
shl
sub
sbb
xor
scas
jbe
pop
mov
in
push
xor
aaa
adc
mov
cmc
dec
addr16
add
mov
pop
sub
sbb
cmp
mov
aaa
jbe
fidivl
cmp
scas
push
scas
hlt
mov
aaa
push
xlat
aaa
mov
mov
aaa
jp
out
xor
jo
or
loopne
pop
push
out
ja
into
das
loopne
or
xchg
mov
xor
or
fs
sbb
jae
inc
mov
pop
ja
xchg
sub
dec
xor
and
adc
mov
xor
movsl
aaa
stos
shlb
pop
into
loope
dec
sarl
inc
out
adcl
xchg
push
mov
jno
aaa
and
jmp
aas
jb
sub
mov
gs
xor
cmpsb
mov
test
iret
fldl
xchg
cmc
movl
ret
imulb
xchg
jno
xlat
pop
xchg
xor
push
xchg
add
inc
out
jns
mov
stos
cmp
sbb
dec
lahf
xchg
fstl
out
xor
fxch
mov
lret
int3
and
cmpsb
push
push
sbb
add
add
sbb
jae
or
cmp
push
cli
mul
divl
gs
sbb
or
push
icebp
popa
icebp
mov
and
cmp
imul
jo
xchg
jbe
cmc
lret
ss
push
lret
cmp
jbe
mov
shl
shlb
out
add
mov
push
pop
mov
adc
inc
and
jg
cwtl
add
cmpsl
orb
popf
add
sbb
negl
sahf
adc
jo
xchg
test
fsubs
pop
xchg
je
int3
mov
inc
divb
enter
xor
and
cmp
fdivrl
dec
xchg
xor
xchg
push
pop
je
xchg
xor
cld
mov
stos
mov
sub
das
jle
bound
movsb
fwait
ss
mov
cmpsb
push
mov
cmpsl
ret
xor
es
cmp
lods
lock
mov
dec
xchg
repz
mov
mov
push
jb
in
mov
fcoml
test
jp
cmc
bound
or
adc
pop
fstl
inc
xchg
enter
sti
repz
cwtl
mov
cmp
push
mov
sbb
out
ret
pop
dec
rcll
add
and
clc
xchg
mov
xchg
inc
or
stos
knotb
lods
roll
adc
dec
cli
test
lcall
mov
xchg
push
int3
idivb
or
or
xchg
sub
sti
adc
mov
sub
out
out
into
bound
aas
dec
les
adc
mov
lock
out
push
pop
int
or
sbb
clc
psubsb
out
out
mov
jmp
and
inc
and
xchg
idivl
dec
shl
xorl
mov
xchg
cld
test
inc
icebp
jmp
mov
cmp
mov
popfw
nop
inc
imul
in
repz
push
sub
shlb
xor
xor
xor
mov
and
fwait
pusha
adc
push
es
adc
push
mov
push
test
push
and
popa
xchg
imulb
in
jnp
xchg
push
xor
xchg
xchg
addr16
call
test
cmpl
shrb
jbe
arpl
or
testl
iret
jp
bound
jo
int3
jnp
cmpsl
sbb
push
dec
inc
push
sbb
imul
mov
imul
repnz
inc
cmp
popf
int3
fnstsw
jne
jno
inc
pop
pop
pop
int
xor
mov
push
mov
jge
fsubs
jl
stos
shrl
repz
inc
mov
adc
outsb
adc
jp
out
loope
stos
mov
jp
jb
add
scas
negb
jp
lock
cmpsb
adc
mov
xchg
cmp
add
jne
and
sub
add
mov
hlt
add
mov
fldt
jle
sahf
xor
xchg
in
scas
inc
jno
xor
mov
mov
push
jecxz
movsl
es
push
mov
cli
cmpsl
xchg
and
mov
cmpb
out
inc
jnp
das
inc
jge
fs
mov
in
sbb
sar
pop
mov
adc
xor
cmp
loop
add
fcomps
cld
sub
in
shlb
mov
jb
xor
mov
inc
sbb
mov
mov
mov
lret
jmp
mov
enter
or
subl
shrb
push
sbb
and
xor
mov
xchg
shr
scas
lcall
imul
orl
ljmp
xor
and
inc
inc
add
adc
inc
jg
inc
shl
sbb
enter
into
adc
xor
cmp
jecxz
dec
mov
mov
sub
out
pop
fcoms
incl
lcall
sub
mov
or
negb
shl
sbb
int
dec
sbb
cwtl
xchg
and
xchg
pop
pusha
fcompl
adcb
shlb
mov
mov
inc
adc
mov
add
push
iret
loopne
sub
sub
xor
jno
jg
xor
cmp
mull
jmp
mov
test
xor
mov
loop
and
xor
mov
inc
fsubrl
dec
xchg
jno
dec
xchg
mov
aam
mov
cmp
push
cld
mov
loop
xchg
mov
test
mov
into
adc
test
sbb
mov
adc
test
out
jbe
imul
dec
mov
mov
mov
add
or
or
or
adc
das
pop
jo
sbb
in
and
push
loop
cmc
test
mov
iret
ljmp
push
rcl
mov
cmp
das
lret
iret
out
mov
add
shrl
jb
int
cmpsb
ja
sbb
push
pop
and
iret
lods
and
or
ret
mov
mov
jno
loop
in
mov
sub
jbe
mov
sbb
or
jp
jp
divb
inc
xchg
call
sub
and
jns
sbb
xchg
mov
jbe
mov
cmc
xchg
adc
sub
sarb
hlt
orl
push
mov
addr16
xchg
xor
pushl
es
std
mov
xchg
or
hlt
adcl
jno
jno
int3
hlt
jno
xchg
jno
and
cmp
jbe
mov
cmpsl
leave
data16
jmp
ss
mov
bound
aaa
lret
idivb
in
inc
cmp
clc
lea
xor
inc
stos
inc
movsl
data16
mov
jbe
adc
pop
jo
divb
ljmp
jo
inc
scas
inc
mov
inc
jbe
xor
jo
leave
aaa
mov
orl
push
xor
scas
push
push
jno
hlt
dec
shll
push
jo
inc
mov
aaa
cwtl
sbb
pop
shlb
jo
divb
popa
dec
jnp
and
mov
lock
mov
jbe
add
mov
add
data16
inc
sub
insb
cmpsb
and
ss
cwtl
pop
fisttpl
cmp
add
mov
scas
sub
jmp
jl
adc
sub
repnz
mov
sub
xchg
xor
std
pusha
pop
pushf
cmp
xchg
daa
xor
adc
inc
push
cwtl
xchg
rclb
push
xchg
mov
inc
aaa
fwait
xchg
sbb
jmp
mov
ja
pop
imul
xchg
and
push
repz
fidivrs
adc
arpl
ffreep
arpl
cmp
xor
in
sbb
call
dec
out
inc
das
cmpsb
mov
outsb
arpl
fstl
lahf
jl
out
call
adc
shr
mov
cwtl
mov
fmulp
push
mov
out
xchg
lock
test
rcrl
lods
dec
mov
xor
mov
lock
adc
into
cmp
mov
add
push
cmpsl
loopne
js
loope
mov
add
push
lock
sarb
adc
xchg
repnz
xor
pop
imull
inc
push
xchg
mov
mov
xchg
lock
pop
out
pop
mov
xchg
bound
mov
cmpsl
pop
mov
lcall
mov
and
jmp
push
adc
cmp
push
lcall
jno
nop
out
push
mov
popa
cltd
jmp
jno
in
cmc
jno
xchg
jno
and
and
and
and
pop
ret
jmp
dec
arpl
mov
push
fadds
adc
rclb
jae
cld
rcrb
mov
xor
mov
sub
pop
jae
and
loop
fiaddl
inc
lock
xchg
jno
mov
sti
int3
push
mov
sub
ficomps
and
subb
and
pop
jl
sbb
in
es
mov
sbb
inc
cli
fldl
iret
mov
mov
in
mov
sarb
cmc
call
cmp
inc
loop
xchg
jge
sbb
cld
jo
sub
sahf
loopne
cmc
mov
scas
mov
adc
or
xorl
mov
stc
negb
movsl
xchg
pop
dec
mov
mov
psrld
mov
add
add
mov
je
lcall
lock
mov
int
ja
pop
je
mov
mov
mov
icebp
xor
dec
mov
loop
shl
xor
psubusw
push
gs
and
cmp
xchg
out
adc
in
mull
scas
sahf
rorl
icebp
mov
jns
test
xchg
stos
adc
stos
test
ja
stos
out
stos
push
dec
stos
dec
stos
mov
mov
dec
push
add
xchg
mov
testb
sub
adc
stos
inc
in
mov
cmp
mov
and
cwtl
and
lock
xchg
inc
xor
lcall
lods
cmpsb
lock
push
mov
insl
jo
je
inc
adc
test
repnz
addb
sahf
dec
or
xchg
push
mov
out
in
out
mov
cmp
int
cltd
shll
cmp
int
int3
cmpsb
add
shlb
inc
mov
lret
cmp
jmp
mov
mov
imulb
pop
adc
adc
rolb
lcall
clc
jge
jbe
or
mov
inc
mov
mov
call
fwait
movsl
int3
ss
cltd
in
sahf
outsl
mov
mov
push
test
mov
push
aaa
mov
adc
push
cmp
out
add
xchg
adc
nop
sbb
mov
loope
ds
movsl
push
or
pop
mov
mov
hlt
cltd
jae
mov
stc
stos
es
pop
adc
xchg
pop
outsb
lock
mov
cmpsb
sub
das
andl
xor
movsb
mov
js
ss
jmp
mov
imul
mov
xchg
cmc
xchg
mov
inc
push
dec
lock
repz
mov
cwtl
in
pop
pop
mov
ljmp
inc
div
push
out
mov
shl
adc
int
and
cli
xchg
shl
push
leave
jns
adc
popl
imul
int
sub
sbb
xchg
xchg
and
xor
cmp
sti
or
inc
jl
rorl
out
divl
cld
sbb
and
cmp
sbb
cmp
sahf
or
cmc
ja
xor
sub
xchg
loopne
dec
xchg
pop
mov
push
fcoml
xchg
andl
lock
idiv
adc
hlt
pop
fidivrl
push
out
mov
cli
mov
nop
data16
pop
cmp
and
xor
fldpi
enter
into
jb
pop
mov
sub
fistpll
xor
dec
scas
fisttpl
mov
add
sub
imul
mov
cmp
cmp
xchg
mov
cwtl
arpl
mov
xor
mov
sbb
inc
sub
cmp
out
xchg
cmpsb
mov
xor
in
sbb
sbb
shlb
popf
cmp
cmpsb
jb
in
ret
xchg
test
pop
adc
cld
icebp
xor
iret
jb
int
cltd
scas
jo
xlat
loop
and
popa
loopne
in
adcb
sbb
fisttpl
stos
mov
ss
ret
call
inc
cmp
mov
mov
push
mov
lret
lea
or
add
cmc
push
shlb
mov
add
stos
lods
xor
cld
ljmp
inc
mov
repz
push
xchg
int3
call
mov
scas
adc
mov
xchg
xchg
dec
and
cld
jae
push
cltd
cwtl
adc
pop
adc
xor
movsb
cmp
popa
jo
popf
out
popa
je
out
shll
loopne
pop
xorb
mov
pop
dec
or
or
ljmp
xchg
and
mov
sbb
inc
cmc
push
mov
fdivrp
icebp
xor
cmp
dec
aam
jecxz
jl
cmpsl
jae
mov
cli
mov
pop
dec
fildll
adc
cmp
cli
xchg
mov
mov
clc
xchg
xlat
lock
mov
enter
in
dec
int
jecxz
imul
repnz
mov
cmpsl
adc
cmpsl
xchg
dec
iret
mov
cwtl
pop
xchg
andb
cmpsb
das
fdivp
sbb
sbb
xchg
int
call
mov
nop
hlt
icebp
jne
or
adc
inc
xchg
lcall
xor
lea
cmp
push
adc
cmpsb
dec
adc
or
push
and
repz
xchg
adc
stos
shl
cmc
loop
pop
mov
sub
cwtl
or
mov
xor
arpl
arpl
addr16
cwtl
push
push
sub
xchg
aam
adc
adc
cmp
mov
sub
ja
divb
sub
shl
push
push
cli
iret
mov
subb
mov
cs
es
das
mov
cmpsl
and
mov
into
mov
jne
scas
or
jl
xor
mov
xor
mov
xchg
test
mov
mov
shlb
mov
sub
xchg
or
andb
stos
mov
xchg
cwtl
pop
lcall
into
adc
rcll
or
inc
sub
inc
lock
cmp
lock
mov
mov
cmpsl
xorb
in
and
mov
and
das
ret
cmp
push
add
stc
jno
mov
xlat
loop
xor
mov
test
push
push
clc
je
add
push
mov
aas
and
aam
cmpsl
ss
dec
mov
scas
dec
sbb
push
jge
sub
jo
icebp
aaa
cs
xor
pusha
in
jecxz
sub
push
sub
mov
pushf
mov
sahf
cmp
pop
add
jl
sti
shlb
lock
aaa
adc
iret
mov
rorl
dec
imul
lods
scas
xchg
stos
jl
jmp
imul
mul
es
shll
jne
push
mov
mov
sahf
inc
mov
mov
js
mov
or
xor
inc
sub
call
and
xor
repz
movsb
sub
jb
xor
aam
mov
lcall
loop
jno
lds
js
ret
in
xor
dec
lods
subl
mov
inc
mov
mov
sub
mov
jle
mov
in
lock
fs
mov
jo
andb
fisubrs
or
std
hlt
and
scas
out
lret
push
mov
sub
push
iret
bound
loop
mov
xchg
push
inc
jmp
in
sub
jns
ds
repz
into
out
int
or
in
sub
and
xor
inc
jb
pop
stc
xor
daa
lock
iret
jp
scas
sub
clc
adc
sub
push
dec
jb
std
xlat
outsl
sbb
dec
test
ljmp
popf
or
lds
adc
sub
push
iret
push
xlat
push
jp
xchg
jmp
push
xlat
bound
bound
mov
xor
lahf
jb
lcall
fadd
andb
sub
xchg
pusha
fcoms
and
das
loopne
push
adc
stc
inc
into
imul
inc
mov
jp
movb
cli
mov
arpl
cwtl
lods
js
ret
pusha
in
cmp
dec
fcoms
xchg
or
push
mov
inc
or
idivb
sbb
movsb
jae
dec
test
dec
cltd
push
mov
arpl
mov
in
fsubs
out
cmp
jae
cli
or
pop
ret
push
mov
daa
ret
mov
mov
sbb
sub
dec
sbbb
sbb
xor
pop
call
cmp
dec
xchg
add
aas
lea
jnp
or
outsb
out
movsb
push
sbb
pop
jp
jns
scas
pop
inc
shlb
xor
ja
shlb
int
in
mov
repz
sahf
aas
loopne
jnp
pushf
repz
imul
loop
popa
call
adc
xchg
adc
and
dec
adc
loope
pop
push
dec
fstl
push
xor
scas
or
pusha
lock
xor
clc
adc
xchg
cli
stc
addr16
or
push
dec
jp
or
xlat
and
sub
jnp
mov
and
aad
sub
xor
int
jle
add
lds
add
dec
push
jp
popa
inc
cmp
jbe
xor
arpl
adc
push
inc
daa
mov
push
mull
iret
ss
pop
out
xchg
pop
push
dec
push
jbe
jle
ss
es
jb
push
mov
xchg
pop
push
testb
hlt
add
or
loope
push
insb
cli
mull
jo
inc
bound
adc
dec
mov
cmpsb
in
xchg
adc
mov
mov
pop
sbb
add
and
cmpsb
pop
lahf
lcall
push
and
xor
pushf
imulb
cwtl
mov
inc
adc
inc
sbb
xchg
adc
xor
rorl
fnstenv
sbb
xchg
mov
and
shl
ret
sbb
bound
jp
mov
ror
adc
sbb
jo
push
xchg
loope
shlb
xchg
xor
mov
subb
test
push
adc
xchg
mov
cltd
jbe
leave
rcrb
or
lcallw
out
xchg
daa
push
loop
adcb
lods
out
imull
cmpsb
sbb
fstps
xchg
and
fidivrl
out
xchg
test
and
jb
jg
sbb
testl
mov
mov
movsb
inc
imul
stos
gs
cmp
pop
lods
stc
icebp
lret
xor
cmp
add
rcll
ds
mov
and
xchg
add
aaa
rorb
mov
clc
cmp
idivl
push
ja
push
sbb
lods
cwtl
mov
fsubp
mov
pop
push
xchg
gs
dec
xor
lahf
add
iret
or
mov
xor
es
inc
cmp
jge
xchg
mov
push
mov
or
loop
jge
or
xchg
ret
pop
ret
ret
and
push
cwtl
inc
sub
test
xchg
int
xlat
cmp
ret
jl
xor
and
sub
or
inc
in
mov
mov
jl
push
mov
popa
test
xchg
xor
cmpsl
mov
jg
movsb
mov
xor
cmp
push
shll
xchg
dec
mov
sub
clc
adc
cld
sbb
sub
mov
gs
mov
cmp
movsb
pop
aaa
pushf
adc
cmp
mov
lods
inc
cmpsb
add
lret
test
pop
pop
xchg
dec
cmpsb
sbb
mov
stos
out
mov
mov
int3
inc
stc
adc
mov
push
fcomi
sbb
xchg
push
and
movsl
repnz
and
pop
fcompl
test
and
in
lods
sub
adc
push
rorb
in
in
cltd
loopne
push
jno
mov
pop
jge
enter
cwtl
xchg
push
into
icebp
jno
mov
cwtl
mov
cmpsl
mov
leave
mov
repz
call
jbe
fidivl
rorb
decl
xor
notb
fldpi
jg
stc
lret
icebp
cltd
dec
ficoml
pop
popf
mov
adc
mov
sbb
push
add
or
das
jmp
fcmovnb
jnp
jno
sbb
jp
and
pop
testl
xor
push
outsb
cmp
ja
adcl
xor
rorb
ss
sub
loop
cmp
dec
ja
mov
es
cmp
daa
mov
sbb
mov
clc
jae
adc
sbb
cmc
xor
mov
inc
add
push
add
push
sbb
stc
xor
rorb
in
cmp
insl
pop
mov
shll
pop
mov
jbe
mov
popfw
mov
xchg
divb
sti
jg
popa
or
ret
sub
pop
lds
loopne
inc
jle
lret
jno
bound
push
mov
pop
jecxz
push
xchg
sbb
jo
sbb
pop
sub
jo
movsl
cli
cmp
pop
push
test
sub
loopne
push
repnz
fdivp
mov
push
fdivrs
pop
icebp
add
pop
pop
push
pcmpeqb
mov
or
inc
mov
mov
in
pop
hlt
ret
aam
out
sub
mov
aaa
cmpsl
out
pop
inc
mov
test
or
sbb
out
js
mov
or
mov
orb
sbb
mov
ja
push
jno
adc
popf
aaa
mov
inc
jp
xchg
stc
mov
jo
push
push
movsb
mov
mov
pop
dec
dec
jle
jae
cmp
cmpsl
sub
adc
std
jnp
icebp
nop
mov
mov
pusha
jp
icebp
ficoms
xchg
andl
lahf
mov
aam
cwtl
mov
fcomip
ret
rcll
xchg
mov
mov
mov
cmp
pop
popf
and
stos
or
notl
lret
inc
dec
or
je
cmc
adc
jae
sti
js
lahf
mov
icebp
xor
dec
aam
jmp
jo
js
mov
cmp
and
jl
jp
adc
dec
push
pop
push
and
push
mov
lcall
cmpsb
mov
adc
mov
add
ror
outsl
xor
mov
fisttpll
xor
nop
in
xlat
jle
mov
ja
loope
sbb
sbb
push
maxps
adc
iret
out
loopne
sbbb
jnp
cmpsb
in
out
shl
mov
repz
inc
ljmp
inc
dec
es
xlat
cmp
in
xchg
mov
cld
cmpsb
stos
mov
rcl
fs
das
imul
out
jg
jp
in
jl
idivb
and
xchg
icebp
rcrl
aaa
pop
inc
data16
mov
add
ja
cmpsb
cli
mov
repz
cmpb
daa
nop
cmp
mov
aam
and
movsb
jne
sub
dec
dec
adc
mov
fwait
sbb
xor
xchg
mov
imul
divb
mov
das
xor
data16
mov
out
pop
andl
pop
jo
in
enter
cmp
mov
adcl
int
xchg
iret
enter
lret
enter
gs
lcall
sbb
jb
or
sbb
or
mov
push
ljmp
push
popf
pop
cwtl
dec
sub
bound
in
cmpsb
sti
fildll
push
aad
inc
xchg
pop
dec
inc
cmc
inc
cmp
sub
ljmp
ljmp
fs
pop
nop
pop
mov
cld
pop
jb
jo
add
add
add
add
add
add
cmp
xor
dec
push
add
add
xor
add
imul
add
jbe
add
xor
add
push
je
add
add
add
pop
add
inc
dec
add
ja
add
aaa
add
add
insb
dec
pop
add
add
outsl
add
outsb
js
outsb
add
dec
push
add
inc
push
add
add
cmp
add
add
dec
add
add
xor
add
add
push
add
add
data16
add
add
add
xor
popa
arpl
add
cmp
ja
dec
dec
ja
inc
add
xor
add
add
xor
add
jb
jp
inc
add
add
js
add
ja
add
add
add
add
dec
add
outsb
push
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
fs
outsb
cmp
cmp
add
jbe
add
cmp
add
pop
jbe
add
xor
add
add
inc
add
insl
js
add
outsl
xor
push
add
xor
dec
add
jb
add
jns
imul
add
add
fs
jbe
xor
add
add
add
add
add
bound
add
add
add
add
jae
add
imul
add
add
dec
pop
insl
addr16
add
add
add
add
push
dec
add
push
add
xor
push
ss
add
push
insl
add
jo
dec
add
jb
add
dec
add
add
add
push
jno
jae
add
add
add
inc
inc
add
add
add
xor
add
pop
add
add
inc
push
push
add
push
add
add
js
add
add
add
arpl
dec
add
fs
xor
pop
imul
push
add
data16
add
add
add
xor
add
outsl
add
inc
add
add
add
add
outsl
jbe
xor
inc
ja
add
add
push
add
add
add
add
data16
add
aaa
dec
push
add
add
add
jno
jno
xor
add
add
add
add
add
cmp
dec
add
pushw
jp
push
push
push
add
push
add
dec
add
inc
add
add
inc
insb
add
inc
push
jbe
add
dec
xor
add
add
jbe
add
add
add
imul
add
ja
add
add
dec
add
dec
add
add
push
add
xor
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
push
push
add
jns
ja
ja
xor
add
add
cmp
jb
dec
outsb
add
bound
jp
pop
dec
add
add
jne
dec
add
insl
push
add
add
dec
jne
add
add
add
add
add
add
pop
outsl
add
jno
add
add
pop
bound
add
inc
add
add
inc
jo
add
add
push
imul
fs
push
add
add
add
add
add
xor
add
add
add
dec
inc
add
jo
dec
outsl
inc
push
add
add
arpl
jns
add
add
pop
add
add
add
dec
inc
add
add
add
inc
jns
xor
add
fs
add
pop
add
add
outsl
jae
jbe
add
add
imul
push
add
js
xor
add
add
data16
add
add
add
inc
dec
add
add
push
dec
add
pop
add
inc
xor
push
insb
add
add
js
add
cmp
add
xor
add
add
dec
pop
dec
add
cmp
push
xor
add
xor
add
add
inc
add
outsl
add
add
add
add
jns
push
add
add
ja
add
add
dec
add
dec
insb
add
add
add
add
dec
inc
push
ss
add
imul
addr16
add
add
inc
jbe
bound
push
inc
add
push
xor
push
push
add
add
xor
inc
inc
add
xor
add
add
add
add
push
add
add
add
inc
push
je
inc
push
xor
inc
add
add
imul
push
add
add
pop
insl
xor
add
add
jp
inc
add
inc
add
add
inc
add
imul
inc
add
push
add
add
add
add
dec
add
xor
js
add
js
add
push
jns
add
fs
arpl
push
add
inc
inc
jbe
dec
xor
add
add
cmp
pop
dec
add
arpl
add
add
push
dec
add
add
inc
ja
add
arpl
add
add
add
cmp
inc
add
inc
add
xor
push
imul
add
add
add
jbe
add
inc
imul
add
add
dec
add
add
dec
imul
outsb
add
add
add
inc
add
add
add
push
dec
add
add
cmp
dec
xor
add
add
inc
add
add
dec
dec
add
add
add
add
add
add
jo
add
add
add
inc
add
add
add
add
add
add
add
push
dec
add
outsl
inc
push
js
add
inc
inc
jno
add
add
add
add
pop
add
add
pop
add
add
add
outsb
add
outsl
add
pop
inc
add
outsl
dec
xor
add
add
jo
inc
add
inc
add
add
inc
add
add
add
add
add
push
add
inc
add
add
push
push
push
add
add
add
push
add
jne
add
add
insl
add
outsl
add
add
inc
push
insb
add
add
inc
dec
add
add
imul
add
add
outsl
add
inc
add
add
add
insb
add
push
add
add
add
add
xor
jns
add
add
add
xor
push
dec
add
inc
add
add
add
inc
add
add
add
pop
add
xor
ja
add
jo
gs
add
inc
push
add
add
aaa
je
add
push
je
inc
push
push
add
add
push
add
jno
add
xor
jae
add
add
pop
ja
add
add
dec
add
jp
add
inc
add
aaa
add
add
add
cmp
cmp
cmp
add
add
add
cmp
add
add
js
add
pop
dec
or
jnp
repz
cmp
js
out
js
cmp
stc
mov
cmp
jns
mov
repz
cmp
cmp
ja
bound
pop
cmp
iret
inc
repz
mov
repz
cmp
add
mov
fnstsw
les
cli
int3
mov
hlt
ja
mov
repz
cmp
pop
repz
adc
gs
iret
cmp
js
ret
adc
adc
js
push
cmp
filds
ja
cmp
repz
push
xor
cmp
js
out
js
cmp
mov
adc
mov
sbb
rcll
jns
push
cmp
mov
cmp
inc
sarl
repz
ret
push
cmp
cmp
add
push
repnz
cmp
js
or
cld
pushf
icebp
icebp
js
jp
jb
mov
xor
repz
mov
push
cmp
pop
scas
add
pushf
cmp
js
imul
loopne
repz
cmp
test
mov
cmp
jns
repz
jns
cmp
push
divl
repz
dec
jle
inc
cmp
js
jle
jle
xor
jmp
mov
push
cmp
inc
mov
icebp
idivl
cmp
cmp
js
cmp
jns
jle
out
das
bound
adc
push
cmp
cli
movsb
dec
bnd
cmp
ja
mov
cwtl
and
sbb
inc
stc
jbe
pop
scas
adc
std
push
cmp
js
cmp
xor
cmp
js
mov
pop
cli
movsb
mov
js
cmp
js
les
add
js
cmp
shll
jne
mov
repz
cmp
jns
adc
jae
repz
inc
das
inc
les
push
adc
fwait
aaa
repz
or
fwait
aaa
repz
pushl
jo
push
jp
lds
xor
cmp
js
sub
jb
add
dec
mov
push
cmc
push
jae
mov
sub
cld
push
ss
js
xchg
out
jp
mov
cli
je
sub
leave
push
inc
icebp
js
xchg
and
jl
repz
add
jns
imul
add
js
cmp
std
lret
pop
cmp
jns
cmp
sbb
sub
std
pop
or
leave
pop
cmp
cmpsl
pop
cmp
js
arpl
xchg
clc
repz
cmp
mov
pop
loope
stc
jge
repz
cmp
in
aaa
and
jge
cmp
hlt
pop
cmp
js
sub
gs
lahf
jns
cmp
and
imul
dec
adc
cmpsb
and
jns
cmp
jns
cmp
js
cmp
js
mov
rep
xor
fdivrl
and
js
cmp
nop
pop
leave
ljmp
stos
repz
jecxz
lahf
jns
hlt
repz
cmp
aam
cmp
js
cmp
pop
pop
jp
js
int3
bound
pop
cmp
push
pop
repz
cmp
xchg
pop
cmp
pop
cmp
xchg
idivl
repz
xchg
push
lds
ret
pop
xchg
jns
jecxz
jns
cmp
js
xor
cld
add
jns
mov
jno
cs
cld
fdivrs
jmp
dec
or
push
cmp
or
addr16
sbb
sarl
in
xor
cmp
js
mov
aad
jne
mov
xchg
jle
jne
hlt
jno
xor
cmp
cmp
js
xor
sbb
dec
movl
cmp
js
dec
pop
inc
pushf
movsl
icebp
js
jmp
int3
add
xor
addr16
ja
cmp
ja
cmp
aad
repz
mov
cmc
imul
or
dec
sbb
jle
lcall
test
sbb
ja
sbb
stc
jo
xor
adc
sub
jo
cmc
jno
mov
mov
cmp
xlat
mov
sti
aaa
repz
mov
sbb
jns
cmp
jp
jp
mov
fisubrl
js
cmp
js
cmp
push
pop
andl
out
cmp
pop
pop
cmp
pop
cmp
js
cmp
cmp
xor
or
adc
mov
ficomps
cmp
fwait
pop
jae
mov
cmp
pop
das
mov
pop
cmp
pop
cmp
js
push
jo
and
jns
cmp
stos
pop
jb
jns
cmp
js
push
repz
cmp
cmp
js
sbb
jns
and
jns
cmp
js
xchg
push
jns
inc
repz
cmp
js
cmp
pop
sti
loope
pop
xlat
push
adc
cmp
ljmp
sub
dec
add
pop
cmp
mov
pop
cmp
test
scas
repz
cmp
pop
pop
cmp
js
cmp
xlat
pop
cmp
jle
adc
or
fnstcw
dec
mov
pop
cmp
popa
push
cmp
js
cltd
jle
cmp
in
outsb
dec
stc
pop
add
cli
sarl
lds
popf
pop
cmp
sbb
cmc
inc
mov
add
adc
push
mov
cmc
les
sbb
jge
fwait
aaa
repz
add
fwait
aaa
repz
ret
pop
cmp
js
and
add
xor
jne
js
mov
cmc
cmp
cmp
jno
inc
in
add
xor
outsl
lcall
jp
mov
dec
jno
sub
outsb
mov
cmp
add
xor
mov
fwait
aaa
repz
or
jns
cmp
jo
pop
imul
je
repz
cmp
js
cmp
mov
nop
pop
repz
cmp
jns
or
ss
repz
cmp
js
cmp
js
cmp
jmp
adc
pop
cmp
jns
jle
jns
cmp
jnp
ds
dec
je
or
adc
mov
ljmp
cmp
js
cmp
js
cmp
js
cmp
lret
repz
cmp
js
cmp
js
scas
jmp
pop
cmp
js
cmp
bound
repz
cmp
jle
ficomps
repz
push
lods
repz
pop
cmp
mov
repnz
pop
xorb
repz
xlat
lods
pop
shll
add
add
cmp
mov
jne
aaa
popf
sbb
fnstcw
sub
js
mov
divb
mov
dec
or
call
inc
sbb
jle
and
add
cmp
popf
cwtl
cli
repz
sub
aas
cmp
js
testb
push
cmp
mov
into
test
add
addl
push
and
fidivrs
cmp
dec
or
jmp
loopne
mov
adc
les
jne
or
js
xor
jo
cmp
jb
cmp
das
ja
cmp
jp
cli
jo
and
jb
add
push
dec
les
jp
leave
jbe
sbb
cli
jns
mov
cmpl
inc
iret
jle
inc
aaa
repz
push
adc
les
jb
adc
js
cmp
jp
stc
add
cmp
js
adc
cmp
rcr
hlt
js
cltd
or
pop
mov
mov
pop
addr16
xor
pop
insb
pop
mov
cwtl
sub
mov
out
stc
push
cmp
add
jns
dec
xchg
or
cmp
dec
cmp
js
into
enter
pop
sub
cmp
pop
push
mov
xor
fsubl
adc
pop
cmp
js
xor
cmp
repz
cmp
inc
pop
xor
pop
mov
mov
pop
pushf
repz
cmp
jp
and
jns
cmp
js
and
jmp
scas
repz
pop
pop
cmp
jns
or
js
aaa
hlt
js
mov
xor
inc
cmp
pop
cmp
lretw
and
js
hlt
repz
mov
repz
cmp
jns
cmp
or
iret
repz
push
lds
stc
addr16
lcall
jb
jns
leave
iret
cmp
js
and
ja
cmp
pop
pop
idivl
clc
cmp
js
cmp
pop
sbb
aaa
popf
pop
xor
dec
adc
jbe
add
js
mov
bnd
ret
mov
add
jle
sbb
jg
sub
lret
js
cmp
popa
aas
cmp
js
fs
js
repz
or
js
repz
div
js
repz
sahf
hlt
js
repz
cmp
js
cmp
js
and
js
cmp
js
jne
add
les
push
cmp
jp
les
lcall
js
ret
aam
bnd
lds
jp
cmp
js
imul
fnstcw
imul
cmp
sbb
lods
leave
cmp
popf
lahf
inc
cmp
adc
push
sbb
cmp
lea
and
fldenv
cmp
js
cmp
sub
in
cmc
pusha
repnz
js
mov
test
pop
cmp
cld
inc
cmp
js
stc
fstpt
pop
cmp
xchg
in
cmc
mov
pop
cmp
mov
dec
jbe
push
cmp
mov
andl
repz
and
push
es
fistl
pop
cmp
popa
jg
repz
cli
fstpt
mov
orl
cmp
add
cmp
test
stc
js
cmp
cld
pop
cmp
js
mov
cmp
aas
orl
leave
inc
xor
or
adcl
xchg
faddl
sbb
dec
push
out
int3
dec
pop
aam
popa
mov
in
hlt
into
mov
or
push
out
fcompl
cmpsl
cmp
mov
or
pop
dec
lds
push
or
fnstcw
cmp
popa
repnz
js
mov
mov
lock
pushf
dec
bnd
repz
cmp
dec
dec
or
jbe
dec
hlt
lcallw
stc
mov
jae
scas
cli
jns
stc
mov
mov
lret
xor
add
dec
bnd
arpl
push
ret
sti
fmul
cmp
pop
les
jp
aad
test
pushf
das
add
jo
repz
or
std
push
or
cld
add
bound
ret
lcall
fbld
aam
arpl
mov
jg
sub
repz
dec
je
push
dec
repz
cmp
jb
out
sbb
cmp
jp
mov
jge
lcall
bound
xor
mov
cmp
jns
les
adc
ret
jns
cmp
lret
insl
xor
lcall
add
sub
push
scas
testb
dec
jle
sub
repz
cmp
test
aam
bnd
xchg
pop
jns
cmp
outsb
push
adc
add
mov
push
cmp
jb
push
out
jmp
cmp
or
ret
out
test
xor
mov
sub
lcall
js
cmp
pop
les
push
cmp
jp
mov
arpl
repz
les
push
or
shlb
cmp
sub
repz
sub
or
js
push
cmp
cld
pushl
repz
lds
push
cmp
cld
xlat
cmp
repz
mov
fbstp
mov
pop
js
cmp
int3
dec
bnd
imul
sbb
ja
adc
cli
add
fstpt
cmp
push
fwait
pop
jae
push
cmp
push
std
push
add
push
cld
fisttpll
dec
add
cmc
js
mov
js
movsl
repz
xor
pop
xchg
js
sahf
repz
mov
mov
jge
js
cmp
jns
xchg
inc
jns
cmp
pop
cmp
pop
cmp
pop
cmp
jge
dec
jns
movsl
fs
mov
pop
cmp
js
cmp
mov
lods
pop
xor
bound
repz
cmp
js
cmp
js
cmp
cmp
les
cmp
pop
mov
jmp
test
js
jb
fldt
repz
cmp
js
jo
lds
cmp
xorl
jecxz
jno
ret
repz
pop
cmp
pop
jg
jns
scas
repz
js
cmp
cmpb
rcll
cmp
rcrl
repz
jp
ret
cmp
pop
xchg
repz
imul
jns
cmp
js
cmp
jnp
repz
jg
repz
cmp
pop
cmp
ret
pop
popf
repz
cmp
jns
cmp
stos
push
repz
mov
jns
cmp
ret
inc
ficoms
movsb
pop
jns
cmp
js
cmp
leave
xchg
cmp
into
pop
cmpsb
jns,pt
cmp
js
imul
js
xchg
inc
jns
cmp
loope
mov
js
cmp
enter
rolb
inc
mov
push
cmp
fsts
andb
cmp
out
gs
jns
cmp
pop
outsl
imul
movsl
jns,pt
mov
pop
jl
js
cmp
pop
fwait
repz
cmp
pop
cmp
js
popf
and
jno
ss
dec
cmpsb
repz
cmp
pop
mov
lds
repz
cmp
pop
cmp
js
cmp
orb
pop
insl
repz
scas
jns,pt
cmp
stos
test
insb
jecxz
imul
cmp
js
cmp
js
cmp
pop
cmp
stos
xchg
repz
cmp
jg
mov
pop
cmp
scas
bound
bound
xchg
insl
jo
js
cmp
mov
repz
scas
repz
cmp
loop
cmp
jns
cmp
jns
stc
movb
cmp
jb
cmp
mov
cmp
stos
cmp
out
fdivp
pop
call
jle
pop
pusha
or
pop
gs
pop
cmp
in
cmp
jns
daa
jb
fldt
jns
mov
fs
cmp
js
js
mov
cmp
sub
cmp
pop
pusha
repz
pop
cmp
dec
or
add
add
add
add
add
add
rolb
add
add
add
mov
add
add
inc
add
add
add
add
add
add
jmp
add
add
add
add
add
add
bound
add
mov
mov
add
xchg
add
push
add
add
add
jbe
add
add
add
add
jge
add
add
adc
add
xchg
add
add
test
add
iret
and
add
add
add
add
add
loop
stc
mov
jl
