add
hlt
add
cltd
loope
add
pushf
add
add
push
std
incl
lea
or
add
add
adc
mov
lea
mov
mov
mov
out
or
scas
stc
cmp
jae
in
idiv
mov
iret
pop
add
call
enter
in
in
arpl
mov
pop
daa
and
rcrb
push
push
out
in
in
call
mov
mov
mov
mov
lods
sub
clc
mov
push
in
sub
cmp
or
mov
lea
ja
fldenv
clc
push
or
mov
stos
dec
jne
mov
add
lock
mov
in
lea
call
and
or
call
push
push
push
jge
push
xlat
fisubrl
mov
or
or
inc
adcl
jbe
idivl
shrl
mov
lea
jo
pop
pop
mov
sub
neg
decl
setge
lea
mov
in
xor
mov
mov
out
pop
loope
or
mov
mov
mov
mov
push
inc
mov
jns
mov
mov
xchg
push
sub
push
je
mov
xor
mov
insl
lcall
xor
sbb
iret
mov
test
and
subl
sbb
fnstsw
repz
add
inc
mov
pop
jg
lret
pop
shrb
nop
push
mov
add
popa
mov
popf
or
scas
mov
mov
add
fcoms
pop
clc
or
shr
shll
paddd
or
lea
mov
inc
cld
enter
cmp
or
mov
aaa
aad
cmp
mov
adc
mov
mov
sub
lret
xor
ffree
ret
dec
arpl
pop
in
in
or
std
scas
shl
mov
fstpt
mov
out
push
add
mov
adc
iret
lods
fistpl
pop
or
jns
mov
sti
mov
shll
mov
xor
pusha
pop
push
test
push
test
std
cmp
addb
add
add
std
mov
sbb
sub
ja
or
int
lret
inc
iret
test
mov
filds
out
mov
add
test
add
leave
xchg
inc
or
dec
or
mov
out
mov
lea
fcompl
or
jnp
cmp
pop
xchg
test
inc
scas
mov
ds
cmp
sbb
sbb
fisubs
mov
mov
mov
sub
and
mov
ss
push
add
mov
fisttpll
sti
or
xchg
das
mov
fstpt
jmp
data16
adc
stc
mov
mov
add
sti
or
inc
push
movl
pusha
sub
jecxz
mov
inc
or
call
test
testb
ret
data16
or
outsb
idiv
and
movzwl
lea
outsb
sub
lcall
cld
cld
sub
cmp
into
mov
cmp
cld
and
sbb
fucomp
jge
in
lahf
add
ret
jne
cmpb
je
mov
das
dec
or
inc
ficompl
ds
fcoms
out
ds
icebp
clc
or
cwtl
int
ss
xor
pop
pop
adc
push
shl
mov
and
pop
lret
xor
xor
cmp
adc
sub
cmp
mov
sahf
fcomip
lock
mov
xor
and
add
imul
imul
dec
sub
xchg
addr16
pop
dec
xor
iret
mov
ret
sarl
jns
dec
jp
sbb
bound
or
xor
sub
sub
cmpsb
mov
cs
add
adc
dec
std
iret
and
loope
dec
push
sahf
pop
sbb
jbe
aaa
ficomps
jne
sbb
or
add
sbb
aad
int
jg
sbb
sti
js
adc
pop
ret
mov
xor
in
xchg
cli
pop
test
jg
jne
orl
or
cwtl
xor
nop
add
dec
xchg
mov
cmp
mov
or
inc
jnp
jae
xor
and
mov
jle
adc
xor
lret
cmpb
xor
in
sbb
xchg
std
jg
mov
adc
dec
push
pusha
dec
mov
mov
call
fcomp
mov
jmp
inc
cmpl
add
add
pusha
adc
push
inc
jne
fimull
cwtl
ss
mov
or
jg
jle
cmp
roll
inc
add
mov
or
rcrb
add
addr16
aas
outsb
clc
data16
dec
pop
dec
mov
clc
xor
mov
mov
scas
addl
mov
jo
jle
pop
cltd
incl
mov
xor
sbb
mov
push
in
daa
loopne
xchg
dec
loopne
cmp
mov
or
out
icebp
adc
ja
add
pop
repz
leave
inc
jmp
xor
jge
loope
push
frstor
push
xor
cmp
jo
cmp
data16
aaa
ljmp
cmp
add
mov
enter
pop
cltd
add
jl
push
and
jmp
clc
adc
adc
clc
dec
dec
pushl
dec
and
inc
clc
add
mov
lock
std
jle
xchg
adcb
add
push
shrl
fsubrl
sub
enter
or
xchg
add
popf
jg
jp
xchg
nop
inc
cmpsl
add
adc
pop
dec
mov
movsb
xchg
jb
push
sbb
jg
mov
and
sbb
sub
into
add
cld
or
sahf
movsb
inc
scas
xchg
mov
test
mov
insl
out
adc
push
cmp
push
jg
dec
aam
jmp
sbb
shl
or
sub
lret
shrl
xchg
js
mov
testb
mov
outsl
fildll
cmp
jge
fldpi
xor
clc
das
pop
xor
fisubrs
ret
push
dec
add
das
adc
add
call
mov
inc
pop
test
hlt
les
mov
pusha
mov
aam
and
or
dec
push
dec
scas
popf
popa
fnstcw
shll
xchg
in
sarl
adc
shlb
inc
ret
sbb
inc
dec
xchg
test
aas
mov
mov
sarb
and
mov
icebp
sbb
xchg
clc
repnz
mov
xorb
mov
mov
arpl
inc
adc
testl
xlat
pop
push
imul
sbb
fidivs
outsl
adc
clc
lods
mov
mov
scas
out
sub
xorb
js
xchg
sub
cmp
dec
fmull
and
mov
jle
movsl
out
das
sbb
fidivl
clc
subl
add
mov
loop
sbb
lock
test
xlat
xor
insb
bndstx
movb
cmp
xchg
dec
push
daa
inc
or
jmp
push
push
push
sbb
push
push
daa
enter
mov
lock
mov
in
sub
xor
arpl
or
sbb
pusha
loopne
sbb
add
fwait
cs
dec
out
inc
test
in
jne,pt
ljmp
fcompl
dec
cmp
fs
jecxz
cmp
imul
filds
ja
vphaddbw
lret
incl
inc
adc
fldl
shrb
xlat
imul
cmp
adc
xchg
pop
adc
insb
inc
lcall
mov
xor
jns
add
sbb
mov
fidivl
hlt
pop
addr16
fsubs
hlt
xchg
and
push
cmpsl
das
cmc
ret
sbb
sub
out
ret
pop
xchg
xor
sub
ret
inc
arpl
mov
mov
lret
and
adc
hlt
xor
clc
jne
mov
js
or
pop
loop
gs
dec
pop
lahf
mov
adc
scas
or
inc
mov
les
mov
pop
push
mov
arpl
mov
jecxz
and
jmp
push
jge
xor
cwtl
out
jb
repz
pop
pop
mov
xor
rorl
ror
mov
pop
and
jb
lcall
enter
push
lock
add
popa
fadd
shl
pop
push
out
sub
push
loope
cmpsl
cmpsb
inc
mov
fs
mov
sbb
in
xor
sbb
in
add
int
push
pop
call
push
ss
push
rep
lahf
push
mov
lock
pop
jmp
testb
dec
out
repz
jle
aad
lret
incl
adc
aad
or
popf
cwtl
dec
and
sub
jle
cmp
or
cmp
sbb
mov
cli
cli
aaa
mov
cmpsb
push
mov
pop
mov
mov
mov
push
imul
cld
stos
mov
add
xchg
adc
fisttpll
mov
add
into
fidivl
sbb
adc
mov
pop
jecxz
movb
push
push
je
outsb
aam
int3
mov
push
jmp
in
inc
inc
cli
mov
add
add
mov
fdivrs
sbb
addb
jmp
cli
adcb
jmp
ds
aad
rorl
iret
rolb
inc
in
push
dec
das
scas
icebp
mov
push
add
movsb
sbb
and
adc
add
aad
pop
test
repz
cmp
lock
dec
push
push
dec
lea
sub
jae
lods
add
sbb
bnd
sub
dec
lds
sub
cld
sbb
add
test
and
inc
xchg
pop
sub
xchg
rolb
mov
pop
mull
jg
mov
cmp
or
xchg
dec
inc
xchg
ret
add
sbb
cmp
enter
sub
outsb
imul
sbb
inc
push
outsl
xor
out
xor
sbb
fadds
loopne
mov
imulb
xor
adc
ja
jne
adcl
cli
leave
xlat
daa
aaa
jle
jb
icebp
lcall
iret
add
jmp
mov
lret
std
adc
insl
sbb
push
cli
arpl
shr
add
cmp
mov
or
int3
shrl
cmp
or
cli
xchg
cli
or
outsl
add
nop
cli
shlb
lods
inc
jno
loopne
push
xchg
fs
inc
and
lods
test
mov
shll
push
clc
push
sbb
mov
push
jo
ds
stc
push
mov
enter
in
fcomps
dec
inc
cltd
idiv
add
jo
loope
test
shl
shlb
cmp
dec
sti
xchg
mov
insl
sub
and
dec
push
negl
cld
inc
mov
sub
xchg
shll
das
or
xchg
or
es
push
pop
inc
pusha
push
add
sar
aas
sbb
mov
cmc
inc
push
fcompl
mov
mov
pop
or
mov
xor
imul
mov
mov
pop
push
jecxz
scas
adc
pop
out
test
repz
or
aas
pop
outsl
aaa
sub
test
or
or
cmp
mov
mov
push
mov
sub
pop
lret
idivb
mov
rclb
inc
xor
fcomi
and
adc
fs
dec
dec
jmp
mov
jae
or
cmc
cwtl
or
adc
movsl
and
std
or
psrld
dec
mov
popf
insl
js,pt
sbb
mov
mov
lods
cmp
mov
mov
std
aaa
ds
and
push
mov
push
xor
inc
cmpsl
outsl
testl
xlat
cli
sbb
push
inc
mov
pop
xor
push
add
divl
jno
mov
cmovno
sbb
sbb
sub
mov
adc
and
jne
jmp
push
mov
dec
jl
add
sub
addr16
cli
movzwl
je
jmp
cld
je
and
inc
sbb
mov
mov
repnz
decl
call
enter
xor
inc
testb
cld
hlt
add
outsl
sti
xchg
sub
rorb
cmp
inc
jl
outsl
push
cld
mov
pop
or
mov
sbb
jne
insb
leave
jmp
jg
sahf
and
push
mov
loop
lock
les
pop
je
nop
push
xchg
cmp
jge
or
jno
xchg
adc
outsl
adc
xor
sub
or
subb
loop
push
mov
xor
dec
insb
ds
jmp
xchg
mov
adc
lock
fisubrs
adc
shll
jae
dec
aam
sub
cmp
insb
sub
mov
push
push
mov
jo
pusha
mov
add
push
ja
mov
mov
shrb
xor
inc
sub
setae
and
adc
cmp
fildl
repnz
or
ja
add
mov
pop
flds
cmp
sbb
pop
cmpb
mov
cmpsb
sahf
aam
fimuls
dec
out
test
jge
sbb
rorb
stos
roll
popf
pop
loop
mov
test
xchg
adc
mov
inc
sbb
xor
arpl
adcl
in
mov
ret
push
pop
sub
inc
jmp
lock
insb
cmp
pop
push
sub
cmpsl
ss
or
mov
cmp
imul
mov
pop
fldl
lcall
fisubl
pop
shrb
lock
mov
inc
imul
inc
dec
inc
fbstp
adc
adc
enter
xchg
sub
add
movups
pop
cmp
std
cmp
lock
adc
push
jmp
sub
shlb
mov
js,pn
call
daa
dec
imul
pop
xor
adc
and
inc
mov
xchg
push
and
call
add
leave
jge
pop
cli
shlb
push
sub
cwtl
xor
xchg
aad
mov
inc
std
and
loopne
out
ret
sbb
pop
int3
jecxz
cmp
loope
mov
adcb
xor
mov
xor
xor
push
in
sub
pop
in
test
xor
jnp
sbb
andb
test
sub
mov
ja
cmp
jne
mov
pop
xor
mov
pop
aas
int
or
jmp
dec
insb
adc
cmp
rclb
xor
sub
int
scas
pop
jne
push
dec
push
xor
repnz
adc
add
or
mov
mov
pop
xorl
mov
inc
push
push
sbb
adc
in
sub
mov
sbb
cmp
je
cmp
or
inc
mov
sub
lret
notb
inc
test
add
in
enter
cmp
sub
cmp
cmp
mov
xchg
in
and
pop
adc
fmuls
sub
addb
adc
lods
sbb
fidivs
xchg
outsb
jbe
mov
xor
adc
jo
xbegin
mov
daa
insb
pop
daa
pop
rolb
adc
cmp
je
das
insb
aas
xor
fisubs
and
mov
adc
aad
inc
mov
ret
fistps
xchg
fistpll
add
pop
dec
mov
loopne
pushf
rorl
xchg
cmp
mov
lods
mov
rcrb
xchg
add
adc
pop
inc
popf
ret
cltd
in
and
push
cld
adc
or
fcoml
fdivrl
cmp
cs
pop
pop
sbb
lea
mov
test
loope
lods
xor
int3
test
inc
pop
sub
stc
clc
jne
mov
adc
int
scas
popa
cmpb
dec
fcomps
rorl
test
xor
jne
out
jl
push
lea
dec
push
mov
mov
arpl
xor
adc
lods
fmul
push
lods
aad
cmp
and
lahf
leave
lods
sbb
adc
push
or
adc
pop
pop
imul
mov
mov
in
inc
rol
sub
xor
cld
pop
push
sub
push
cmp
jle
push
std
testb
mov
cmp
aam
cmp
pop
call
adcb
jecxz
nop
es
jbe
jae
dec
xchg
cmc
stos
call
jnp
shlb
pop
mov
xchg
cli
cmp
cmp
sti
mov
xchg
insl
shlb
push
incb
stos
into
sbb
das
add
leave
pop
and
int3
gs
push
and
arpl
clc
xchg
test
ds
in
mov
mov
orl
jne
fistpl
enter
push
push
pop
rorl
out
les
repz
adc
lahf
or
sbb
sbb
and
adcl
rorl
sub
mov
xor
push
sbb
subb
sub
adc
sbb
jmp
mov
dec
loop
add
lea
mov
jmp
cmp
mov
dec
lock
jle
adc
sub
inc
sti
mov
adc
repz
mov
sub
or
test
sahf
adc
fistl
test
les
mov
inc
inc
outsb
paddusw
adc
sub
iret
out
mov
sbb
inc
loopne
shl
dec
ret
and
adc
xchg
mov
lcall
outsl
test
cmp
mov
pop
push
cld
fmuls
fsubs
icebp
rorb
in
daa
mov
sub
leave
xchg
sar
mov
lock
pop
mov
mov
inc
cmp
push
sub
adc
shl
mov
js
movsb
add
addr16
lods
or
fnstcw
pop
pop
pushf
daa
xor
pop
push
or
cmpsb
mov
push
ret
pop
hlt
insl
mov
and
mov
cmp
xor
xor
jge
stos
mov
pop
add
js
ss
push
cld
daa
pusha
in
adc
adc
daa
mov
add
cmp
ret
movsb
lahf
insl
fs
or
xor
mov
dec
jnp
sbb
movsb
lods
push
dec
imul
dec
loopne
mov
xchg
mov
mov
push
mov
sahf
lods
jmp
cs
pop
ja
movsb
sahf
inc
cmpsl
movsl
loope
pop
pop
cltd
sub
sub
mov
daa
sbb
shrb
inc
testb
xchg
arpl
out
je
lods
in
aas
fisttpll
or
fcomps
xchg
bswap
loop
je
in
aaa
loope
int
mov
pop
add
and
add
push
dec
mov
test
inc
push
mov
test
mov
adc
test
jge
xchg
ficompl
adc
scas
in
sbb
pop
add
out
iret
in
add
sbb
dec
ret
imull
or
stc
jno
or
xor
cmp
mov
cli
fnstenv
iret
dec
movb
fcoml
mov
xchg
daa
enter
int3
sub
sahf
mov
cld
adc
push
in
push
mov
popa
imull
jmp
cmp
fsubrl
dec
rorl
popf
push
xchg
sub
add
ret
mov
in
and
xchg
cmp
cmpsb
loop
mov
daa
popf
jmp
push
inc
fcompl
sbb
xor
cmc
sahf
cmp
cmp
jbe
sarl
repnz
ffree
js
mov
fiadds
jle
and
pop
movsb
jo
cmp
jmp
cmc
lock
call
ss
adc
hlt
loopne
sbb
xchg
adc
je
pop
xchg
pop
add
sub
sub
sti
arpl
jae
sti
test
push
dec
mov
sbb
clc
inc
add
cmp
daa
pop
xor
add
xor
out
in
es
mov
leave
shrl
mov
jb
pop
sbb
mov
rcl
mov
rclb
sti
and
xor
icebp
pop
repz
mov
packsswb
xchg
pop
out
stc
lahf
inc
test
inc
sahf
mov
or
sub
sbbb
jl
adc
pop
divl
das
stos
jae
dec
adc
pop
sub
or
mov
mov
pop
aas
fidivrl
sub
les
push
je
sbb
jmp
pushf
cmp
hlt
mov
outsl
adc
or
xchg
mov
sahf
je
jp
cli
subl
xor
dec
fmuls
jo
inc
out
inc
pop
adc
pop
fsubrs
or
fcmove
loopne
xchg
mov
pop
cmp
jno
ret
loop
or
popf
adc
cmp
in
iret
pop
je
mov
imul
jle
mov
ret
or
sbb
sub
cmc
lea
hlt
or
aas
push
ljmp
cmp
popa
sti
in
sbb
movsb
psubusb
cmc
pop
lock
fisubl
aam
mov
jbe
jne
and
mov
pop
mov
mov
fiaddl
orb
hlt
jmp
cmp
mov
pop
jge
mov
arpl
sbb
dec
clc
xor
mov
sbb
lea
xchg
loopne,pn
call
pop
rcr
push
in
shl
add
sbb
les
aam
mov
sub
or
rcrb
adc
test
or
add
mov
and
mov
cmp
pop
or
ljmp
inc
jmp
loopne
notb
in
sbb
lret
push
std
push
push
inc
arpl
xor
lea
cmp
add
fadd
ret
mov
mov
and
adc
insl
xchg
inc
pop
out
add
add
es
scas
fistl
xchg
sbb
jg
add
cwtl
insl
test
pop
icebp
pop
scas
sub
pop
jl
daa
mov
or
roll
lods
cmp
sbbb
fwait
jle
jae
sub
pop
daa
fwait
cmp
adc
out
hlt
push
rcrl
or
mov
add
lds
les
inc
add
in
popa
jno
mov
cmp
fcmovu
mov
xor
insb
iret
mov
jns
cs
sbb
mov
sbb
pop
mov
sub
pop
xor
les
daa
mov
fbstp
mov
pop
aaa
pop
and
jbe
mov
js
ret
push
int3
dec
jo
sub
ljmp
outsb
cmpsb
test
xor
adc
push
loopne
mov
imul
cmp
xor
fildll
daa
xor
and
icebp
inc
dec
pop
mov
lcall
loopne
js
arpl
pusha
mov
xor
xchg
ja
mov
call
mov
jae
xchg
clc
add
les
dec
movsl
mov
mov
xchg
out
inc
sbb
or
test
or
std
aaa
or
and
in
cwtl
lds
mov
negl
bound
ret
inc
sub
push
sub
adc
lea
push
aad
aas
pusha
int3
addl
mov
scas
pop
pop
mov
lock
sbb
cmp
call
jo
or
fstpt
cli
inc
sarb
push
xlat
dec
mov
jecxz
sbb
jg
mov
cmp
jp
jl
in
xor
jp
fsubrs
add
repnz
sti
fcoms
or
lds
sti
pop
lahf
push
mov
push
mov
clc
scas
cs
scas
push
ret
insb
dec
cmpsl
pop
dec
nop
xchg
sub
lock
and
aaa
sub
je
mov
shll
neg
inc
mov
repz
addr16
call
test
jns
adc
adc
sti
ljmp
fistl
dec
pop
pop
aad
in
and
cmc
movsb
fldenv
test
mov
in
mov
mov
mov
movsb
inc
andl
inc
add
ret
shl
mov
add
das
sbb
mov
cmp
push
mov
enter
repz
insb
mov
sbb
xor
clc
push
cli
repz
bound
add
lret
sarb
push
cmp
int3
nop
adcl
fiaddl
xchg
js
sbb
pop
pop
sti
sti
mov
jns
or
and
sub
and
ret
inc
pop
fcmovb
pop
stos
adc
mov
sbb
sahf
test
aad
loopne
mov
jne
fbld
mov
or
cli
dec
rclb
sub
and
into
ds
add
imul
mov
jae
push
insl
sbb
cmc
xchg
or
inc
test
jbe
pop
notl
ret
inc
out
mov
jo
jo
adc
out
and
fdivs
fldt
jmp
adc
xchg
sub
ret
fmull
fwait
jne
xor
mov
sbb
dec
lea
adc
loopne
enter
mov
jns
and
les
scas
xchg
arpl
push
push
aaa
add
test
test
or
fsubl
or
frstor
mov
jo
arpl
sub
data16
mov
or
pop
ja
xor
shl
push
sahf
movsl
lahf
xchg
loope
fs
pop
or
adc
sub
ja
xchg
jg
sbb
rcr
xor
cmp
sbbb
sti
and
scas
push
pushf
push
pop
inc
loop
jns
jo
out
mov
imul
cld
rclb
push
sub
js
mov
ds
rol
push
mov
js
leave
mov
and
mov
aaa
repnz
insl
push
or
or
sub
popa
pushf
es
jae
adc
insb
sub
lds
and
dec
les
outsl
mov
loop
sbb
xchg
cwtl
dec
imull
sti
or
lret
add
cwtl
scas
stos
mov
adc
or
pop
inc
enter
or
fimull
test
mov
cld
adc
or
jl
inc
std
out
or
shr
wrmsr
push
cmp
adc
or
xchg
jae
bound
adc
out
xchg
loop
sbb
sti
xor
dec
addr16
mov
push
push
xor
andl
loop
inc
push
inc
lea
or
push
inc
mov
data16
iret
mov
pop
sbb
pushf
cmp
or
roll
mov
paddusw
cmp
in
xchg
out
push
sahf
dec
iret
push
push
fcmove
cmp
ret
hlt
adc
daa
dec
cmp
and
or
mov
and
cmp
sbb
pop
xor
mov
addr16
sbb
mov
inc
fldl
and
in
xchg
cld
and
das
mov
push
adc
or
fmull
jno
xor
sbbl
mov
mov
push
fcomps
mov
shlb
add
xchg
mov
push
clc
arpl
add
addb
add
cmpsb
inc
addr16
in
jbe
and
mov
mov
push
xchg
or
adc
mov
js
mov
or
iret
pop
add
and
roll
mov
mov
pusha
enter
and
popf
sub
pop
test
jmp
adc
lock
pop
add
and
fdivs
pop
lods
mov
dec
cmp
or
repnz
lods
sbb
stc
push
rcrl
loopne
shr
xor
jecxz
jne
cmpb
fcompl
xor
pop
aad
adc
stos
hlt
mov
jle
and
sbb
adc
es
scas
or
pop
sub
divb
adc
xor
outsb
shlb
jno
call
loop
or
arpl
inc
iret
hlt
adc
or
sahf
mov
cmp
hlt
dec
push
roll
mov
stc
dec
push
xor
sbb
fcoml
xor
clc
sahf
pop
xor
xchg
xchg
pop
sbb
xchg
mov
pop
or
cmp
and
daa
aad
cmp
inc
dec
jbe
rol
test
mov
pop
inc
xchg
xchg
lock
add
adc
sub
push
daa
or
jns
pop
adc
dec
je
fistl
test
in
adc
jecxz
call
jne
gs
fwait
call
cs
cltd
pusha
inc
popl
rol
mov
das
shl
sub
lock
fwait
hlt
hlt
into
mov
in
jno
vpavgb
adc
add
xchg
in
incl
dec
pop
pop
inc
xor
mov
das
and
je
sub
shrb
inc
jno
mov
or
mov
xor
pushf
imul
push
adc
push
test
cld
jns
daa
sub
test
add
iret
fldenv
and
lcall
pop
mov
add
mov
fs
lahf
mov
dec
cmp
jnp
mov
negl
pop
xor
test
sub
pop
fcompl
mov
clc
outsl
or
or
shll
dec
jno
push
pop
je
dec
ret
arpl
inc
sbb
fdivr
adc
aam
loop
or
xor
add
dec
test
sti
adc
call
iret
insb
idiv
sahf
inc
mov
mov
ja
add
mov
frstor
cmp
push
dec
xchg
or
dec
into
test
shrl
pop
nop
dec
xlat
add
aam
fdiv
aam
sarl
out
out
dec
cltd
enter
adc
pop
mov
push
inc
int3
cmp
or
adc
dec
frstor
ljmp
fsubrl
sub
lods
xor
jns
pop
add
lock
test
xor
or
push
adc
stos
cmp
push
rcr
in
in
stos
mov
ljmp
push
scas
roll
jb
jno
mov
mov
and
xor
or
js
ss
cmp
xchg
sbb
cmpsl
adc
cld
push
rorb
scas
and
xchg
xor
imul
aad
mov
aam
sbb
adc
jnp
mov
mov
ljmp
aam
testb
jl
sub
repz
call
sub
fsubl
add
add
fmuls
adc
je
int3
out
iret
jp,pt
and
int
loopne
inc
sub
sbb
mov
adc
cwtl
pop
push
dec
inc
push
insb
clc
sbb
ljmp
or
pushf
lret
repnz
or
push
roll
shrb
out
push
leave
std
out
jmp
lret
insl
mov
push
out
pop
aad
push
lcall
mov
mov
movb
mov
lea
fistpll
cmp
sub
inc
sub
movsb
imul
fdivrl
dec
test
outsb
adc
lods
popf
mov
test
jno
je
jb
cmp
mov
pushw
xchg
lock
std
and
out
adc
fxch
jae
es
shrl
sbb
adc
jle
mov
dec
shlb
aam
gs
sbb
or
ret
or
or
pusha
cs
pop
or
cwtl
add
xor
add
mov
add
sub
arpl
sub
xor
cmpl
mov
in
mov
xchg
add
add
sub
or
loopne
fldlg2
add
push
out
sarl
jbe
int3
mov
xchg
das
pop
test
jg
cmp
mov
loope
int
push
mov
inc
mov
or
push
and
incl
adc
add
mov
mov
adc
mov
sub
lret
and
push
jo
pavgb
je
stos
std
mov
mov
inc
add
fadds
jp
movsb
dec
inc
cmp
lea
cmp
jae
pop
dec
das
sub
lret
enter
mov
into
out
mov
sahf
adc
xchg
or
lods
adc
dec
flds
into
imul
movsb
stos
pop
ds
int
push
inc
aaa
xchg
mov
mov
cwtl
orl
mov
xchg
xor
sahf
jl
and
mov
or
adc
js
lret
and
xchg
jb
sbb
and
call
int3
add
pop
and
loope
mov
jb
in
repz
lea
inc
sub
fcompl
fmull
jno
arpl
andb
or
in
or
push
enter
xor
das
or
cmp
test
mov
test
jmp
push
adc
mov
stc
inc
sbb
dec
and
push
mov
mov
and
push
test
aas
cli
jmp
jne
dec
call
push
mov
shl
and
arpl
sbb
add
enter
daa
testb
xor
sub
mov
inc
sub
push
daa
cmp
add
les
and
jecxz
xchg
add
imul
sbb
jecxz
inc
sub
test
ret
cli
in
insl
lock
pop
das
andl
mov
and
inc
int
sbb
fnstcw
out
mov
push
adc
cmp
mov
and
pop
xchg
leave
arpl
add
xor
lahf
push
inc
stc
addr16
xchg
or
lods
data16
sbb
sub
loopne
nop
dec
jl
jmp
call
icebp
fmuls
or
jp
dec
xorl
das
mov
xor
popf
ljmp
dec
cmpsl
inc
dec
xor
adc
xchg
cmp
cld
or
mov
orl
popf
dec
cmp
div
adc
addl
loopne
push
pop
fst
sarb
and
test
inc
push
lret
xchg
mov
test
sbb
hlt
pop
mov
in
dec
mov
and
xchg
lar
aam
inc
adcb
inc
mov
js
cmpsb
ret
sbb
dec
imul
loope
pushf
mov
or
push
cmpsb
and
sti
enter
sub
ja
jb
mov
insl
addl
xor
rcrb
adc
ret
or
xor
aaa
gs
fistps
pop
js
pop
push
mov
push
aas
xor
jnp
and
insl
jbe
loop
push
aam
iret
pop
roll
ret
push
and
test
xor
ret
in
sbbb
mov
or
shr
mov
add
xchg
scas
ja
ret
scas
push
sahf
mov
mov
sub
loopne
pop
xchg
js
mov
xchg
ljmp
inc
lock
sbb
cld
xor
push
push
subb
mov
sbbl
push
push
sbb
pop
mov
xor
xchg
cmp
xchg
mov
cmp
and
aam
dec
fwait
lcall
iret
test
les
xor
mov
scas
sahf
call
xchg
outsl
xor
or
arpl
shll
out
cli
daa
fcoms
loop
add
inc
and
sbb
adc
jae
jle
les
dec
rorb
pop
or
hlt
sbb
shrb
adc
jmp
sub
xchg
jge
enter
adc
sub
mov
xorl
cwtl
adc
sbb
aam
adc
jne
or
ljmp
daa
cld
cmp
adc
jo
inc
mov
push
aaa
movsl
mov
lea
shrl
mov
cli
dec
ret
ja
insl
fistl
dec
mov
adc
jb
ss
and
or
fisttpll
pusha
test
outsb
inc
mov
or
mov
push
mov
dec
sub
adc
bound
inc
sbb
or
push
add
cmp
fadds
dec
dec
insl
mov
sbb
mov
sarb
test
in
mov
jb
adc
into
cmpsl
loop
cmp
jge
dec
xor
loop
xor
mov
aas
inc
test
add
test
add
push
icebp
push
and
sar
push
lea
lds
lret
jno
mov
loope
inc
imul
sbb
cmp
pavgb
rcll
push
lea
int3
mov
hlt
xor
icebp
in
mov
push
mov
push
hlt
cmp
and
push
popa
in
xor
sub
sbb
mov
xlat
xor
mov
rorb
mov
fdivl
cwtl
cmp
in
das
mov
inc
xor
inc
push
push
pop
adcl
stos
adc
shlb
sarl
jne
outsb
ljmp
add
js
dec
outsb
inc
ss
adc
mov
fstl
xchg
add
mov
xor
js
adc
ds
xchg
push
sahf
aas
insb
push
mov
cwtl
adc
cmp
adc
shrl
cmp
mov
lds
pop
stos
mov
jecxz
inc
and
fidivl
lret
add
mov
lea
mov
xchg
jbe
cmp
mov
inc
xchg
js
mov
pop
jbe
dec
dec
mov
cmc
cmc
fcoms
mov
sub
or
lock
repnz
inc
pushf
mov
aam
fstpl
or
hlt
adc
pop
std
xor
adc
out
xor
idiv
repnz
notw
inc
mov
adc
fs
add
push
jb
xchg
add
imul
loopne
cs
or
popf
push
jge
ss
int
sahf
sub
push
iret
loopne
ficomps
cmp
imul
test
fcoml
adc
inc
mov
addr16
mov
sarb
js
adc
sbb
pop
sub
push
aas
sbb
and
ljmp
push
dec
repnz
mov
inc
add
andl
mov
jne
add
call
cmp
testl
or
fbstp
or
loopne
xchg
mov
aam
xor
shll
pop
scas
jecxz
es
xor
cltd
and
adc
rorb
or
cld
es
dec
cld
adc
or
xchg
adc
add
in
in
aad
dec
xor
mov
loop
iret
and
and
std
mov
hlt
dec
dec
and
add
cwtl
popf
loopne
cld
or
adc
mov
mov
mov
cltd
cmp
or
pop
stc
gs
into
mov
cmp
test
mov
adc
xlat
mov
inc
xorb
pop
fwait
hlt
lock
shrl
rcrb
jg
mov
nop
and
inc
add
cmp
lahf
mov
fdivl
cli
inc
or
fnsaves
mov
insb
clc
cmp
xor
ret
lods
sbb
pop
mov
mov
jae
cmpl
mov
fsubs
adc
daa
ret
insl
test
adc
xor
inc
lret
cmpb
add
mov
or
cltd
and
sub
cmpl
int3
mov
mov
test
lcall
xlat
dec
sbb
push
lock
test
adc
sub
add
pop
xchg
ljmp
dec
or
cmp
in
fcmove
adc
arpl
les
pop
inc
add
mov
mov
fisttpll
xchg
jp
adc
test
rclb
sub
mov
cmp
leave
jne
push
cwtl
shll
mov
es
push
cmp
push
pop
cwtl
fcom
xchg
daa
test
xlat
mul
pop
shl
fwait
aam
add
xor
rcrl
mov
ja
cld
fs
sahf
aam
out
int
mov
rorl
cmp
out
rolb
rcrb
adc
hlt
lock
cmp
dec
cld
ret
and
mov
insl
aaa
jmp
int3
and
je
insl
jb
mov
lock
das
mov
push
loopne
jne
aam
dec
add
mov
stc
jmp
and
lea
mov
adc
mov
push
dec
mov
push
aam
add
cmp
out
test
or
push
mov
jnp
jbe
aaa
in
sahf
iret
data16
push
xchg
mov
cld
cmp
in
fs
push
pushf
jge
mov
sbb
sbb
ja
mov
and
pop
adc
les
adc
jbe
out
lock
pusha
popa
mov
outsb
xor
and
xor
sub
jnp
cmpsl
shlb
mov
sub
inc
sbb
popf
push
mov
lahf
shlb
mov
xor
or
nop
into
push
cltd
and
add
sbb
sbb
in
in
out
xor
or
push
mov
push
test
mov
sbb
mov
clc
sbb
icebp
fmull
aad
loope
setns
fwait
imul
icebp
ret
and
aam
sbb
xchg
dec
mov
add
pop
pop
test
fsubrs
mov
andl
mov
adc
clc
sbb
jle
jae
pminsw
sub
sbb
shl
mov
add
popa
fwait
adc
push
push
push
addl
sub
jb
jg
lods
shl
leave
in
lods
push
gs
imul
cmp
ds
jae
cs
push
push
xor
lods
popa
and
sbb
rolb
lock
push
loop
mov
stos
pop
icebp
loop
adc
sahf
mov
imul
pop
inc
stc
lret
aad
and
jae
jne
cmp
call
rclb
out
into
push
mov
jmp
jb
or
add
loop
test
dec
addr16
sub
jbe
sbb
add
test
rcll
pop
mov
jnp
pop
rcpps
mov
je
xlat
dec
jge
push
mov
test
je
or
mov
or
fstpt
test
pop
sbb
mov
mov
push
or
inc
sub
add
lds
lea
mov
xchg
jecxz
add
nop
mov
pop
adc
cmp
or
aad
bound
in
sub
xchg
jno
repz
pushf
lock
mov
push
push
ja
dec
nop
and
shll
enter
push
sti
loopne
movsb
dec
sub
pop
ret
mov
shr
repz
xchg
xor
and
unpcklps
loopne
push
fcoms
jne
inc
add
jmp
dec
adc
int
mov
into
cmp
cmp
xor
pop
mov
push
push
and
xchg
leave
mov
push
and
cmp
rolb
pop
enter
lock
sbb
and
sbbb
mov
dec
or
push
in
mov
lock
inc
lods
dec
test
es
cmc
call
shll
push
or
idivl
inc
xor
jg
push
pop
cmc
cmp
out
loope
mov
cld
push
fiadds
movsb
fcomp
mov
jmp
ss
mov
push
add
xor
jo
mov
out
jge
xchg
cmc
dec
push
xlat
xchg
sbb
test
push
and
dec
xor
mov
jnp
loop
dec
mov
ljmp
cmpsl
mov
push
call
lods
add
xor
sbb
sbb
arpl
jg
fwait
add
add
loopne
movzbl
mov
mov
sbbb
xchg
rol
dec
push
xor
arpl
inc
mov
cmp
fcompp
and
add
ljmp
cmp
push
jg
mov
js
sbb
mov
int
xchg
and
add
cmp
outsl
loop
push
sahf
mov
pop
add
sub
rclb
loop
adc
shld
pop
xlat
pop
add
mov
xor
and
add
mov
testb
cmc
and
enter
or
bound
cli
jmp
rol
and
pop
add
xor
sub
push
sub
mov
fdivs
pop
jecxz
iret
xchg
or
push
adc
jbe
mov
inc
mov
in
xor
xor
imul
mov
repnz
fstpl
stos
mov
sbb
adc
add
ljmp
repnz
adc
inc
push
add
inc
jmp
mov
add
jg
add
outsl
addr16
aaa
icebp
fisubrl
inc
add
and
push
sbb
lock
fld
out
push
lret
gs
andb
imul
add
imulb
push
push
outsl
add
push
xor
fs
mov
xor
test
clc
cltd
sysexit
or
lds
fcompl
add
jnp
and
mov
hlt
adc
jns
mov
cld
je
jno
movsb
cmp
lods
and
es
inc
xor
ret
lea
les
mov
mov
scas
frstor
pop
adc
fmuls
inc
stc
insb
iret
andb
lock
or
cmp
mov
inc
or
sub
cmpsl
add
pop
inc
xor
sbb
scas
mov
adc
adc
in
cmp
xchg
pop
add
sbb
rolb
push
mov
gs
flds
pop
and
push
inc
mov
jne
push
mov
mov
cmc
ljmp
bound
add
js
in
pop
lahf
mov
pusha
clc
movsl
fisubs
out
add
or
push
jmp
push
mov
cmpb
pop
pop
cmc
mov
in
es
in
outsl
mov
mov
mov
or
xor
cmp
arpl
fstps
sub
or
inc
pop
ror
mov
movsl
push
cs
mov
push
pop
or
add
mov
pop
xchg
push
add
aaa
int3
loopne
clc
add
lock
pop
dec
add
push
data16
or
pop
or
xchg
loope
inc
cli
sbb
cli
and
movsl
xor
jns
scas
jecxz
fcom
leave
and
push
adc
pop
mov
mov
mov
push
jne
dec
stos
mov
rcl
mov
cmp
jbe
sub
mov
mov
iret
ljmp
pop
notb
pushf
adc
cmp
mov
ret
adc
daa
or
sbb
cmp
lock
cmp
sbb
ljmp
fsubs
lahf
or
cld
lods
xor
out
mov
daa
out
pop
std
xchg
aam
call
xchg
or
mov
mov
into
popf
clc
mov
jl
ja
and
pop
jg
mov
adc
or
mov
mov
jmp
mov
pop
sbb
dec
cli
mov
test
sub
jbe
or
push
add
cld
es
faddl
xor
imul
mov
push
pusha
xor
lods
sub
sbb
rcrl
fmul
xor
mov
xchg
outsb
mov
imul
mov
mov
in
or
adc
sbb
adc
pop
stc
mov
dec
in
add
orb
test
cmp
jns
cmp
jge
mov
mov
rclb
dec
cmp
cmp
movsb
pop
mov
call
sub
or
aam
aas
inc
lods
mov
add
lahf
inc
daa
push
sbb
jno
daa
add
mov
pinsrw
pop
in
cmc
mov
sti
fcmovnu
xor
inc
xchg
add
orl
rorl
pop
js
or
sahf
imul
clc
subb
dec
jge
mov
out
add
sbb
roll
sbb
jmp
cmp
outsb
mov
push
lods
ds
mov
pop
aam
bound
adc
rorl
int3
jge
jnp
dec
insb
xor
sbb
lock
pop
add
xor
insb
mov
push
subl
ret
ret
shrl
lods
mov
xor
ss
cmpsb
push
idivl
sub
jae
decl
loop
cmp
add
inc
mov
xchg
js
test
pushl
test
movsb
xor
enter
sbb
pop
sub
mov
jo
loop
jl
sub
shl
sub
test
jbe
sbb
popa
fcom
adc
cs
incb
andl
and
nop
stc
pop
push
add
add
pop
adc
js
jne
sub
cmp
sahf
sbb
mov
popa
cmp
xor
enter
pop
rorb
out
mov
dec
add
add
out
dec
jae
je
pop
pop
fmuls
inc
push
inc
shll
inc
pusha
mov
lock
mov
ret
rclb
mov
pop
jp
push
mov
dec
push
shrb
add
jge
sbb
cmp
jae
pushf
popa
mov
out
add
call
fcoml
push
pop
xor
inc
mov
mov
push
aam
cmpsb
mov
jnp
inc
cmc
test
pop
mov
pusha
pop
xchg
sbb
es
push
in
shrb
pop
sti
std
test
sub
sub
xor
test
out
sbb
lret
cmp
sub
sub
subl
out
mov
mov
inc
jg
sub
jmp
and
iret
out
popf
popf
add
jb
xchg
push
repz
mov
adc
les
dec
xor
inc
jp
inc
in
adc
pop
gs
adc
push
scas
add
int3
jle
mov
pop
lea
dec
andb
xchg
cmp
fdiv
jp
pop
adc
push
sbb
roll
cmpsb
and
movsb
or
sbb
dec
jmp
xor
sbb
sub
pxor
adc
pop
mov
int3
sbb
mov
cmp
cmpl
jno
pop
aad
test
lds
jne
popl
jle
sarb
mov
lahf
mov
in
iret
xchg
dec
xchg
or
neg
fdivrp
adc
or
pop
rcll
jmp
cwtl
inc
pushf
add
pusha
aad
decl
pusha
in
inc
les
jnp
sbb
adc
stos
cltd
out
daa
mov
push
fwait
xchg
fs
cli
out
add
jle
out
mov
fcoml
popa
push
dec
cld
nop
repnz
cmpl
loope
and
flds
or
or
mov
test
bound
or
push
inc
or
aad
or
dec
add
mov
lret
out
cmpsb
testb
sbb
test
inc
lods
dec
and
add
push
aam
or
pop
inc
out
mov
les
imul
outsb
fisttps
or
inc
mov
shll
inc
jl
mov
pop
jne
call
pop
hlt
in
jge
rcrb
jno
cmp
push
in
jo
sbb
adc
cmp
cmp
pushf
lock
cld
add
cmp
stc
popa
sbb
movsb
loopne
inc
xor
or
pop
imul
inc
push
adc
add
fs
add
nop
inc
add
add
xorl
adc
add
dec
inc
aam
or
cli
add
mov
inc
add
push
push
add
mov
push
push
insl
fs
call
or
sbb
fldt
stos
lods
repnz
sbb
add
sbb
test
mov
lret
call
in
lahf
mov
call
push
mov
push
hlt
sub
pop
ret
mov
add
fwait
mov
ret
jmp
hlt
push
jb
add
mov
cmp
jmp
inc
hlt
divb
push
lea
mov
js
pusha
mov
dec
xor
jbe
push
in
mov
dec
pop
or
adc
movsl
jmp
inc
int
jne
or
pop
or
pop
nop
jmp
xchg
mov
in
mov
jae
rorl
mov
sbb
add
xchg
inc
sbb
add
inc
inc
push
push
push
mov
mov
adc
or
jmp
fscale
jbe
sahf
shlb
hlt
add
jmp
outsl
out
outsb
mov
fadds
imul
fwait
pop
mov
xor
jg
das
inc
xor
ret
aaa
inc
add
cmpsb
pop
fidivrs
ja
fisttps
push
mov
popf
jmp
jmp
cld
mov
cmp
ljmp
mov
pop
push
add
push
push
jmp
add
jmp
pop
std
std
outsl
fcmovnu
add
push
or
xlat
rep
pop
jmp
mov
fstps
adc
sbb
xchg
xchg
gs
and
mov
lea
or
lea
jmp
jbe
incl
cmp
out
call
outsl
out
jmp
and
testl
int3
push
mov
inc
dec
jne
std
lock
push
test
in
sub
jmp
int
adc
cmp
mov
inc
inc
mov
ficompl
out
jmp
inc
rorl
jmp
or
sub
pusha
cmp
movsb
cmp
add
outsb
mov
push
mov
test
inc
notl
mov
push
add
aad
cmp
jmp
adc
and
mov
dec
jge
pop
and
mov
test
jmp
into
int3
xchg
cmp
adc
xor
and
or
dec
pop
push
mov
and
mov
loope
pop
pushl
and
pop
and
push
inc
xchg
mov
jmp
push
addb
adc
and
mov
sbb
roll
aam
push
add
shlb
xor
movl
dec
cmp
pop
mov
mov
mov
into
pop
mov
mov
mov
mov
imul
push
rcr
xchg
mov
cld
pop
pop
movl
test
mov
addl
add
dec
outsb
jae
imul
iret
mov
add
stos
jmp
sbb
call
cmp
jmp
pop
pusha
loop
push
push
aad
mov
adc
clc
jg
fidivrs
pop
push
jmp
add
jmp
xor
push
out
mov
fildll
cmp
mov
cs
test
call
call
sub
ret
or
jg
and
mov
lea
push
push
pop
iret
pop
mov
adc
or
push
fsubr
push
fimuls
add
mov
sub
cmc
sbb
pop
dec
mov
add
or
inc
test
aaa
es
cmp
sbbb
mov
sar
and
out
mov
lcall
adc
pusha
xor
sub
outsl
fildll
shlb
movsb
fs
push
cli
inc
jmp
cmpl
mov
cld
sbb
lock
adc
inc
or
test
insl
mov
jmp
sub
add
jnp
fwait
sub
je
xor
add
scas
pop
je
ja
add
mov
jmp
ret
imul
fidivs
outsb
jmp
sbb
xchg
push
add
mov
les
or
or
jno
aad
xlat
xor
pushw
push
sbb
mov
js
imul
fsubrl
pop
ret
add
je
mov
push
add
pop
sub
adc
or
add
ja
sub
mov
fsub
fcoms
mov
dec
clc
shr
lea
sub
add
jns
xchg
push
mov
jge
out
or
dec
clc
ljmp
dec
dec
jg
push
call
or
js
pushf
loopnew,pn
jg
mov
jmp
inc
add
pop
call
dec
dec
fcoms
pop
popl
jmp
adc
mov
xor
push
pop
mov
pushf
fsubs
lea
push
call
push
push
imul
enter
mov
stos
jle
jb
push
cmp
jmp
jmp
fisubrs
cld
mov
call
mov
pop
test
mov
push
loopne
out
dec
and
es
loope
out
push
sbb
inc
lea
shrl
nop
sbb
out
or
dec
sub
pop
push
bound
lea
sbb
adc
mov
or
lods
and
or
int3
fnstsw
adc
out
cmp
test
inc
xchg
dec
sub
test
ds
inc
inc
sub
fdivr
and
sub
adc
mov
out
adc
sar
gs
std
insl
adc
sbb
or
fnsave
loopne
lea
add
ret
rorl
adc
stos
popa
jmp
push
xor
pop
and
clc
sub
pop
mov
addl
or
shlb
push
arpl
xor
sbb
shl
nop
add
subb
xor
mov
mov
pop
xchg
push
inc
or
cli
push
push
pop
mov
or
jecxz
mov
out
or
loopne
mov
dec
ret
arpl
sub
sbb
jecxz
pop
jae
mov
sbb
enter
shrb
and
adc
clc
outsl
or
jmp
xor
pop
mov
inc
add
push
sbb
fs
sbb
js
mov
push
mov
sbb
adc
sbb
or
aas
push
mov
sub
fcomps
out
or
stos
mov
push
sbb
xor
push
ffree
mov
lds
lcall
sub
js
stos
add
in
outsb
adc
sbb
aas
negb
inc
aad
scas
sub
out
ret
xchg
lods
shlb
xor
pop
inc
ss
mov
xor
cmp
sub
jmp
mov
dec
add
pop
pop
outsb
xchg
mov
sbb
sub
pop
add
cmp
das
mov
push
loopne
test
pop
ss
add
lods
adc
jno
mov
mov
sub
std
leave
sbb
or
or
faddl
push
lds
push
mov
ud0
ljmp
arpl
sub
and
add
ret
inc
adc
dec
outsl
sbb
jo
pop
shll
call
mov
inc
mov
cld
pop
inc
ss
insb
maskmovq
mov
mov
ljmp
and
and
and
shll
decl
inc
cld
xor
xor
call
cmp
in
mov
mov
fldenv
out
sbb
cld
imul
ss
pop
addr16
test
mov
sub
mov
mov
pushf
push
lcall
call
pop
cmpsb
rcrl
pop
in
xchg
sub
aad
sar
or
fadd
xchg
cli
call
dec
xor
jge
jne
imul
mov
or
sbb
stos
movsl
and
sub
adc
call
enter
mov
sbb
adc
jne
adc
inc
mov
out
push
loope
call
fsubr
int3
dec
fdivrs
mov
sub
clc
call
mov
js
pop
rolb
mov
xor
fisubs
cmp
and
ret
int3
sahf
mov
icebp
inc
sub
stos
dec
incl
jmp
pop
pusha
subb
rcrl
mov
pop
shl
lret
test
std
push
ljmp
aas
enter
sbb
pop
negb
out
jmp
mov
pop
push
jmp
jp
mov
mov
outsb
push
jle
mov
ss
jmp
rorl
ss
lret
aam
sub
pop
mov
test
movsl
adc
dec
xchg
adc
cwtl
mov
push
ja
lods
dec
mov
das
mov
cmp
incl
pop
sub
out
std
popa
xor
lcall
push
icebp
xor
fidivrs
jb
push
adc
sti
loop
shll
cmp
out
sahf
cmp
or
das
test
movsb
cmp
lret
fildll
pop
and
or
pushl
cmp
add
fwait
dec
fdivrl
ljmp
call
movsl
xor
or
aam
mov
lods
out
aas
insl
sbb
inc
pop
stos
stc
jp
lock
jae
hlt
shll
sbbl
mov
or
mov
filds
push
ret
mov
or
lahf
mov
in
jge
pushl
mov
outsl
andb
scas
push
and
fs
jg
inc
xor
fmull
std
gs
jns
cmpb
mov
cmp
decl
push
aam
pusha
xchg
cmp
sub
lcall
std
int
cwtl
pop
push
divps
popf
mov
pusha
sbb
repz
popa
test
incl
lcall
mov
out
adc
pop
ret
or
or
jns
fsubrl
out
mov
cs
or
push
pushf
jg
int
decl
iret
sub
xchg
dec
jp
ret
sbb
jmp
push
stos
call
dec
cld
lods
repz
mov
leave
int3
loopne
add
sbb
cmp
insl
push
inc
fs
test
ljmp
push
inc
lds
fs
mov
andb
call
call
cmp
mov
dec
jmp
cmc
push
adc
cltd
push
jl
jae
aaa
jne
imulb
int3
pop
call
in
repz
cmpsb
adc
lds
mov
jb
push
xor
call
lock
bound
aas
and
cmp
in
shlb
add
lcall
icebp
jl
cmp
inc
pop
push
out
fnsave
adc
jle
inc
sti
mov
ror
cltd
ljmp
sub
mov
pushf
and
or
popf
lret
les
xchg
cli
dec
cmp
mov
cmp
mov
addr16
fldt
cld
movsl
xchg
sub
dec
xorl
scas
in
outsb
or
lcall
and
jns
mov
js
cmp
inc
pop
adc
adc
call
sbb
pop
repnz
dec
pop
ds
repz
sub
test
pop
jne
mov
lea
inc
adc
fists
pop
xor
cmp
and
jp
rcll
loope
xchg
call
cli
push
arpl
add
in
pop
insb
enter
adc
pop
sub
pushl
pop
rol
sbb
sbb
fnstcw
orb
js
push
mov
pop
popf
sti
enter
jle
and
test
leave
dec
test
mov
pop
push
outsb
int
lock
inc
test
sar
jmp
dec
xorb
test
xchg
stos
imul
mov
xchg
rcr
mov
cmpsl
mov
ljmp
fs
push
mov
adc
hlt
push
popf
clc
fcom
je
xchg
push
bound
je
pop
lods
jle
rcrl
and
int
orb
jg
mov
mov
sub
or
add
dec
outsb
mov
repz
or
call
push
sub
daa
adc
mov
lods
je
push
jnp
xchg
enter
insl
mov
mov
mov
cltd
xor
or
dec
lea
mov
mov
and
sub
sub
mov
gs
enter
sbb
das
sbb
push
push
push
sbb
rol
add
hlt
inc
mov
repnz
cltd
ja
stos
lcall
jnp
mov
cwtl
or
dec
arpl
jmp
ror
push
lret
sbb
es
pop
sarb
pop
fcoms
mov
incl
int
xchg
adc
cmc
mov
dec
sub
leave
test
adc
adc
cld
incl
sete
lea
into
add
cmpsb
sub
cmp
dec
cld
mov
jp
in
and
iret
xlat
jp
in
hlt
out
outsb
inc
lcall
sub
dec
in
cmp
cli
jns
lea
xchg
jp
xlat
mov
sti
lahf
int
fiadds
push
xor
std
divl
popa
jns
jge
out
ret
lods
ljmp
jg
sub
push
adc
lods
movsb
inc
jecxz
mov
mov
stos
cs
jae
faddl
std
jnp
movsb
mov
jbe
loope
or
and
mov
fwait
adc
in
cmp
loope
xor
xchg
int3
jl
mov
stos
int
xor
mov
jmp
xor
movsb
out
or
lahf
push
femms
fsubrs
ficomps
jle
and
arpl
jmp
jge
sbb
lcall
addr16
mov
nop
cmp
outsb
mov
pop
push
cmp
movsb
idiv
popf
inc
xchg
rorl
cwtl
mov
pop
mov
lcall
inc
mov
fwait
sub
std
incl
insl
jl
or
sbb
adc
adc
std
add
test
fnsave
decl
and
icebp
ret
sub
pushf
repnz
push
dec
mov
shr
mov
call
rorl
bound
jg
gs
xchg
adc
icebp
fisttpll
cmp
clc
fbstp
mov
add
add
dec
lcall
pushf
add
fs
fstps
and
lcall
mov
pop
call
psraw
xchg
and
scas
xchg
jmp
gs
sti
insb
pop
mov
outsl
cld
leave
in
das
inc
mov
xlat
stos
icebp
pop
push
xchg
aam
push
fstl
jbe
ljmp
outsb
loopne
cmpsl
or
into
pop
cmp
jnp
xor
lcall
mov
call
cltd
mov
test
fucomip
push
jl
jae
push
test
addb
adc
mov
stos
test
pop
mov
mov
sbb
dec
mov
and
push
test
ds
fnstsw
call
jns
inc
mov
aaa
xorb
sub
push
les
sahf
out
xchg
pop
jg,pt
push
cmp
xor
scas
pusha
mov
mov
push
or
add
sbb
gs
dec
cld
pushl
push
and
fs
cmp
div
push
dec
jae
jg
iret
jge
stc
xor
inc
cmp
xchg
cld
jnp
pop
shl
sub
dec
lea
jl
xchg
adc
mov
sbb
and
and
lcall
lcall
jmp
mov
fisubrs
mov
mov
ds
lahf
inc
es
cld
je
sbb
pop
mov
cmp
cltd
mov
jmp
dec
inc
std
or
rolb
cli
mov
call
xchg
sbb
inc
subl
stos
jb
or
fwait
pop
decl
pop
std
and
push
rcll
pop
inc
jmp
shrl
sub
push
lcall
mov
sub
mov
sub
xchg
add
pop
mov
cmpsb
std
xchg
ljmp
dec
ljmp
dec
sbb
sbb
push
xchg
mov
add
mov
cltd
add
xchg
in
pop
insl
cwtl
jge
mov
pop
shl
inc
icebp
jae
clc
push
mov
lcall
test
push
andb
out
ret
fistpl
lret
dec
sub
xchg
or
fisubs
ljmp
cmp
and
xchg
inc
leave
and
or
cmp
repnz
fistpl
cltd
repz
inc
fs
fisttpll
outsl
inc
mov
lcall
xchg
in
fsubr
jae
dec
xchg
push
push
movsl
sbb
lea
xchg
mov
push
sbb
popa
lret
out
test
mov
jmp
mov
movsl
test
out
mov
rclb
mov
push
adc
jbe
fcom
pop
xchg
fsubr
loop
mov
shl
inc
and
pushl
xchg
iret
arpl
xor
int
int3
mov
pop
fwait
mov
loopne
and
ret
jmp
movsb
sbbl
push
inc
inc
addb
pop
mov
lea
std
xchg
or
adcl
jg
mov
xchg
aaa
push
mov
in
xor
mov
add
pop
lahf
lods
adc
push
leave
mov
out
bound
insb
mov
jg
shlb
mov
pop
xchg
jnp
call
add
imul
sub
arpl
in
inc
jb
xchg
jae
ret
cmp
lea
pop
push
stos
icebp
lret
dec
inc
dec
es
lds
inc
pushl
movsb
adc
or
ds
mov
ss
call
ficoml
dec
and
rol
xchg
outsl
aam
jmp
and
or
inc
pop
test
rolb
rorl
in
sbb
pop
push
add
scas
jbe
insl
inc
sub
jne
jmp
mov
pop
imul
mov
fisubrl
loop
incl
bound
sbb
pop
xor
add
and
push
je
sub
icebp
pop
fbstp
subl
jno
mov
mov
lcall
jns
mov
loop
andl
adc
mov
mov
call
lds
dec
jp
pop
cmc
sahf
rcrb
sti
and
popa
push
inc
sub
or
call
inc
outsb
push
and
inc
sub
mov
imul
inc
jl
add
lcall
jo
mov
js
pop
adc
loop
jmp
cs
dec
in
incl
cld
cmc
xor
inc
jno
mov
call
push
dec
faddl
jb
iret
or
push
mov
pop
or
and
outsb
mov
jg
mov
pop
pusha
mov
daa
int
mov
or
cmpsl
mov
lds
xchg
add
lds
sub
or
std
imul
mov
fcmovnb
lcall
adc
cmpsb
lahf
insb
xor
push
dec
outsl
cld
cmp
imul
add
test
icebp
push
xor
xchg
insb
pop
xchg
add
pop
clc
add
or
daa
add
test
and
jmp
aad
decl
es
movsb
mov
insb
mull
pop
cmp
dec
call
pop
mov
pushl
jo
pop
ret
dec
xchg
jno
xor
xchg
push
enter
mov
adc
fnstsw
push
js
loop
pop
jg
pop
push
idivb
leave
lods
jle
adc
rcl
adc
jl
ljmp
pop
mov
loopne
hlt
fnstsw
sahf
push
push
iret
dec
pop
pop
lods
inc
add
pop
loope
rolb
jb
jl
rolb
mov
js
cld
shl
xor
mov
fs
leave
jmp
pusha
lret
sub
outsl
mov
pushl
mov
ja
inc
push
pop
hlt
or
fdivl
push
aas
sub
mov
js
movb
out
push
fwait
imul
pushl
push
enter
scas
mov
push
mov
pop
or
into
dec
xchg
popf
or
jg
mov
xchg
xor
mov
pop
sub
adc
jecxz
dec
and
stos
xor
jae
les
in
mov
loop
loopne
dec
test
in
sahf
mov
mov
mov
sbb
mov
lcall
inc
sbbb
fwait
lock
mov
xchg
inc
mov
xor
sbb
fnstsw
jg
cmpsb
vmovhpd
cwtl
xor
push
subb
pop
aaa
clc
jmp
jg
lods
sub
cmpsb
fidivrl
dec
and
sbb
sub
cmp
xorl
lcall
andl
call
jne
sbb
out
subw
sbb
imul
add
sub
fidivrl
add
or
andb
mov
lock
call
xchg
mov
cmp
ds
pop
hlt
sbb
pop
jne
jmp
or
jb
add
fisubrs
popa
lds
outsl
jmp
push
decl
hlt
mov
je
add
and
ror
imul
test
call
imul
inc
sahf
leave
add
and
outsb
test
pop
xchg
mov
movsl
or
ud2
mov
rorl
pop
addr16
cmp
mov
subl
daa
add
pop
xchg
fnsave
jl
jnp
repnz
inc
cmpsb
mov
bound
lcall
outsl
cmp
dec
mov
cmp
jno
cmp
outsl
xchg
in
inc
icebp
fldenv
sbb
push
sub
subl
jae
sarb
dec
cld
sbb
dec
mov
dec
out
mov
outsb
cmp
fucomip
dec
mov
frstor
dec
push
mov
xchg
lcall
sahf
push
xor
mov
xor
shll
mov
mov
incl
xor
pop
sbb
mov
inc
mov
ret
outsb
adc
dec
loop
mov
mov
call
out
ss
pusha
xor
push
outsl
test
jbe
inc
inc
loope
call
mov
jns
xlat
jnp
repz
mov
dec
adc
or
jmp
testl
or
push
shll
jg
test
xor
lds
push
clc
lcall
inc
sbb
mov
lods
les
mov
idivb
das
lock
rorl
jmp
pop
xchg
lret
xchg
push
out
clc
repz
and
mov
fistl
and
add
cld
jno
jbe
xor
sbb
lock
clc
jg
and
mov
cltd
or
pushl
into
inc
dec
out
outsl
add
xor
addr16
xchg
and
int
cmp
push
jmp
pusha
jb
jo
mov
repnz
pop
pushf
pop
jmp
mov
clc
dec
sarl
out
mov
or
sub
sub
int3
xchg
in
push
sub
xchg
pop
inc
call
xor
and
shll
mov
sub
xor
test
das
icebp
lcall
mov
test
sub
pop
call
pop
insl
mov
mov
inc
cmc
inc
mov
xchg
aam
fsubp
lcall
dec
mov
mov
push
mov
jg
inc
xchg
fistpll
xchg
inc
mov
insl
js
jmp
les
push
mov
movsl
ds
js
fcoms
xchg
aas
add
adc
decl
push
je
int3
cmpsb
sub
xchg
mov
pop
xchg
nop
aaa
dec
cli
sub
in
pop
rcrb
call
nop
pop
cmp
xchg
mov
jge
mov
arpl
push
stos
pop
mov
lcall
push
stos
jne
popf
lcall
pop
adc
jmp
test
cmpsb
mov
jp
jg
decl
xchg
add
push
mov
stos
mov
jmp
aas
jg
mov
mov
sahf
xchg
lock
inc
lret
add
jecxz
sub
cmp
cmp
int3
cmpsl
and
xorb
xchg
hlt
pop
lret
pop
lcall
loop
adc
add
call
dec
scas
and
cmp
aad
xchg
jae
mov
jb
lret
jg
test
fcom
outsl
in
mov
pop
push
push
es
cli
and
xchg
adcb
mov
filds
dec
in
sar
pushl
mov
je
int
mov
lret
int
dec
lea
push
lret
cld
ja
jae
ljmp
cld
addr16
cmpsl
testl
test
dec
sti
lods
dec
jle
ds
jnp
fcompl
dec
call
shrb
xchg
lcall
sbb
mov
mov
jmp
xchg
clc
pop
bound
jl
and
test
pop
shr
icebp
clc
lcall
mov
adc
add
cs
mov
dec
add
pop
push
ljmp
icebp
decl
lcall
movsb
cmpsl
test
xchg
add
sahf
adc
das
hlt
dec
std
dec
xchg
in
in
rorb
jo
xorps
adc
xchg
adc
test
lcall
xchg
push
jo
mov
mov
lcall
std
lcall
push
es
fs
repnz
cmc
push
cltd
pop
mov
popf
cld
mov
xor
pop
lret
adc
lods
and
cmp
test
lcall
lahf
pusha
sub
sub
jmp
imul
add
jg
lcall
sub
jge
inc
push
push
jmp
lret
shrb
cmp
loopne
enter
add
add
sbbl
mov
mov
pop
pop
call
inc
int
je
stc
lahf
sbb
push
jnp
lods
pusha
js
xchg
clc
lret
mov
lea
popf
jo
fidivrl
xchg
mov
jo
xlat
in
and
outsl
icebp
push
mov
pop
call
or
sahf
xor
dec
xor
ljmp
adc
ds
sbb
cmp
adc
addb
leave
sar
jp
jle
fistpl
dec
pop
xor
or
fsubrs
lahf
lahf
or
sbb
lods
dec
in
or
fisubrl
divb
sti
mov
fadd
es
pop
rcl
dec
aas
cmp
cld
jmp
xor
xor
and
mov
lea
lds
xchg
jmp
ret
stos
in
mov
ffree
in
arpl
xchg
repnz
jmp
cmpsl
aas
shll
fistps
orl
mov
mov
test
jmp
or
in
or
lock
stos
xor
incl
lods
test
lret
xchg
or
icebp
sub
fwait
xchg
sbb
pushl
lret
aaa
sub
ret
pop
insb
int
mov
adc
scas
dec
lcall
mov
ret
iret
stos
dec
adcl
sbb
nop
hlt
call
push
jo
leave
fs
dec
fs
mov
ret
push
push
ljmp
jmp
aad
jo
push
repnz
jp
aas
dec
jb
adc
fimull
mov
mov
xor
mov
lcall
lea
scas
stos
sbb
xchg
cli
lcall
adc
in
jmp
repz
push
dec
dec
dec
adc
ja
decl
shlb
jns
sarl
ds
loopne
in
cmp
adc
lods
cmp
test
and
dec
xchg
jg
lcall
fisttps
roll
add
sbb
insl
ss
push
addr16
shl
and
mov
jecxz
pop
lds
ljmp
jg
je
add
aaa
and
jo
hlt
cmc
adc
icebp
lods
jmp
scas
mov
aam
loopne
out
cmpsl
imul
ljmp
cmc
mov
pop
inc
jno
pop
mov
pushf
imul
jl
das
in
and
mov
inc
pop
push
cld
mov
push
in
test
pusha
jns
lahf
out
scas
sub
fucomip
decl
daa
adc
xor
xchg
push
lahf
shlb
aam
nop
sahf
fsin
call
inc
jns
sbb
out
mov
mov
dec
leave
arpl
decl
pop
lods
mov
xchg
in
in
add
out
fisttps
decl
in
cmp
jl
inc
repnz
fadds
lcall
icebp
aaa
loop
je
aad
adc
inc
xchg
insb
fs
enter
lcall
int
test
rcll
out
fstpl
inc
xchg
pop
cmc
or
iret
mov
push
lcall
shlb
jb
popa
push
sub
inc
inc
pop
xchg
xchg
in
pop
ljmp
and
fwait
into
mov
addr16
xchg
pop
and
pusha
jle
adc
sti
dec
push
or
mov
jmp
cmpsl
xchg
ja
or
cmp
sbb
cmpsl
scas
xchg
in
inc
xchg
xor
pop
cmp
decl
cmp
mov
push
pop
xchg
sbb
flds
cmpl
dec
or
fbld
jo
lock
push
mov
hlt
cmp
pushl
imul
or
inc
mov
fisubrs
repnz
arpl
lods
fisubrl
ljmp
jbe
testl
jno
fistpll
arpl
enter
jmp
adc
lock
fisttpll
js
sahf
mov
jmp
mov
call
inc
cmpsb
jg
lock
cltd
adc
and
fdivr
call
sub
cmp
inc
xchg
or
xor
aad
mov
lret
movsb
aam
call
std
or
adc
sbb
int3
and
inc
movsl
incl
sarl
sti
jnp
mov
jle
insb
adc
inc
pushl
call
cmp
fwait
bound
scas
loope
fwait
imul
adc
adc
mov
mov
pushf
clc
popa
xor
sti
jo
inc
cmp
pop
jle
or
and
push
lret
dec
stos
pushl
push
mulb
jge
movsb
into
lock
stos
add
in
jge
xor
jmp
push
mov
stos
jae
mov
xor
xor
add
fildll
ljmp
push
or
inc
sbb
inc
cli
lods
test
push
arpl
ljmp
hlt
movsl
daa
test
cmp
inc
cld
add
es
sbb
fwait
jb
adc
pushl
mov
invd
dec
scas
cli
sti
jns
xchg
push
incl
sahf
mov
div
scas
shrl
push
leave
xchg
lret
jg
ja
pop
inc
mov
and
pop
dec
decl
adcb
gs
ss
incl
inc
and
add
ljmp
lret
adc
push
adc
and
sbb
movsl
xor
addr16
scas
icebp
lcall
or
cmp
call
iret
xor
popf
fldcw
sbb
jns
pop
jg
push
push
mov
dec
sub
adc
cld
outsb
mov
lea
xchg
push
sar
ljmp
enter
lcall
lods
lahf
xor
pushf
mov
ljmp
hlt
fstl
sub
das
gs
sub
dec
push
ljmp
mov
aas
pop
inc
test
adc
jbe
lock
jg
adc
scas
stos
ret
leave
inc
or
jns
mov
adc
and
and
push
testb
mov
ljmp
mov
pop
xchg
push
jg
mov
outsl
adc
xor
mov
inc
lahf
inc
push
xor
and
pop
rorb
decl
push
aas
pusha
roll
lock
cmp
daa
dec
mov
cltd
incl
aad
xchg
sahf
popf
push
out
mov
jo
and
lret
dec
repz
fwait
mov
or
sbb
daa
xor
call
sub
ficomps
iret
inc
aam
sub
jmp
mov
mov
pop
inc
ja
lock
adc
jmp
pop
cmp
or
dec
push
sbb
pop
mov
inc
dec
test
fs
or
sti
push
or
out
pop
pop
out
mov
stos
popf
sub
add
incl
push
mov
lret
rcr
in
mov
pusha
mov
lods
sbb
jmp
and
dec
inc
jbe
lcall
mov
shr
std
mov
jg
jae
dec
mov
push
addr16
js
add
shrb
mov
cmpsl
lahf
popf
jp
inc
sahf
js
fdivrs
enter
arpl
xor
jmp
aas
or
pop
sub
sub
add
repnz
pushl
adc
mov
rclb
mov
push
mov
daa
cmp
and
out
and
inc
scas
aam
or
mov
dec
stos
imul
xor
add
add
push
sub
xlat
rcrl
inc
shl
mov
call
adc
je
aad
lods
rorb
jl
int3
inc
inc
jmp
les
loop
mov
cmovnp
incl
ja
fs
push
inc
add
mov
leave
jle
test
fadds
xchg
push
pusha
sub
inc
jne
jge
jo
loop
ja
ss
loopne
mov
jbe
or
xchg
xchg
dec
sbb
fstps
pop
loop
xor
pop
inc
jmp
aas
sub
movsl
push
and
std
sahf
jecxz
xor
call
and
ljmp
jge
das
lods
imul
xor
pop
rcrb
popa
add
and
push
fimull
imul
repnz
rorl
mov
or
sbb
adc
out
imul
xchg
pop
adc
decl
pop
int
xorb
or
ret
xor
rorb
cwtl
out
ljmp
cmc
out
pushf
dec
mov
adc
je
lods
pop
jns
sahf
pop
arpl
mov
jmp
subl
pop
imul
pop
push
xchg
mov
subl
in
shrl
xor
jg
aaa
cmpsl
push
insl
fwait
sahf
sub
pop
mov
adc
ret
gs
sar
jg
into
std
push
loop
sub
xor
mov
cmp
pop
xor
mov
inc
pushl
push
fdivrl
sbb
sbbb
fbld
add
xlat
jo
shr
add
mov
sub
cwtl
int
es
leave
pop
push
dec
lcall
call
pop
loope
mov
hlt
sub
mov
mov
dec
fidivs
inc
mov
xor
jmp
ret
or
jg
dec
fldcw
negb
jecxz
ficomps
pop
cs
mov
push
shl
sub
call
mov
imul
negl
shlb
cmp
jg
ja
ficompl
or
arpl
ljmp
decl
cmp
ljmp
cmp
mov
adc
cwtl
add
jns
push
jp
mov
inc
inc
decl
sbb
out
dec
jbe
das
and
stc
adc
sub
test
lret
call
sbb
jle
loope
cmpb
jo
call
inc
lods
cli
call
inc
or
mov
adc
jecxz
push
rolb
das
cli
xor
test
into
mov
cmpsb
mov
ficoms
cmpsl
mov
jge
mov
cwtl
xchg
sahf
xchg
cmp
adc
icebp
das
adc
and
xchg
test
int3
xor
decl
inc
mov
xor
ja
ss
test
test
mov
shrb
out
sub
lret
dec
ret
in
jnp
in
rolb
jmp
cli
nop
fimull
jae
add
rsqrtps
pop
pop
ficoml
out
dec
mov
in
dec
gs
dec
loop
stos
add
add
or
push
gs
data16
dec
adc
mov
add
stc
jno
ds
inc
das
sbb
mov
pop
add
incl
lahf
sbb
dec
mov
setge
mov
lods
ret
adc
decb
ljmp
cld
inc
outsl
mov
adc
leave
xchg
pusha
addr16
xlat
imul
rcll
loop
mov
cmpsb
incl
incl
or
mov
addr16
cmp
testb
push
jg
fstps
or
pusha
xor
cmp
call
int
in
jnp
test
cld
sbb
or
push
cmpsb
jo
rclb
inc
sub
ljmp
outsb
mov
andl
jg
dec
xchg
or
scas
push
xchg
ret
or
popf
or
ss
jg
shl
jnp
sub
fistpl
lods
cltd
push
int3
xchg
add
es
cmp
adc
mov
mov
movsb
pop
pop
mov
mov
ret
rcll
call
mov
mov
jp
in
mov
leave
dec
aas
outsl
out
jb
jmp
je
arpl
xchg
jne
sub
shll
outsb
mov
push
sarb
xchg
int
sahf
or
mov
dec
ret
in
int
and
lcall
jp
add
push
mov
scas
dec
dec
aaa
xchg
xor
mov
lcall
out
ljmp
lcall
cmc
adc
lock
xor
incb
idivb
clc
lahf
pop
mov
scas
test
scas
mov
mov
pop
enter
test
xchg
mov
add
ljmp
pop
loopne
push
mov
xchg
imull
lcall
jmp
leave
mov
out
pop
sub
mov
loop
pop
les
or
cmp
lcall
xchg
push
xchg
cmc
mov
xchg
clc
lods
hlt
pushf
les
sbb
rclb
notb
mov
les
inc
loope
push
pushf
or
add
mov
call
mov
mov
cmpsb
adc
es
pop
xor
hlt
or
cli
xor
adc
call
push
lret
or
xchg
leave
mov
imul
out
popa
subl
fisubs
cmpb
pop
cmp
xor
xchg
push
pop
icebp
adc
incl
inc
pop
cmp
lret
mov
or
push
lods
call
jne
push
mov
jl
xorl
sbbb
cwtl
mov
jae
inc
iret
popa
cmc
pushf
jg
cmp
pop
movlps
outsl
sti
cmp
cwtl
test
shl
scas
decl
push
sti
push
adc
inc
mov
sub
adc
jecxz
jle
testb
outsl
inc
xor
mov
in
cli
inc
cmp
or
pop
test
fs
mov
insb
divb
lcall
mov
cmpb
enter
dec
xchg
push
cltd
std
xor
mov
in
into
and
jnp
int
negb
ficompl
inc
loop
in
fs
adc
rorb
add
push
fsts
mov
jno
sub
jbe
pushl
pop
xorb
sbbl
into
nop
jo
repz
dec
inc
pop
rorl
pushl
ret
xchg
sbb
jb
dec
mov
outsl
clc
cmp
mov
in
stc
ljmp
hlt
les
push
pop
in
adc
sub
jno
xchg
lcall
cld
dec
mov
fsubrs
dec
cmp
sub
outsl
std
mov
mov
popa
cld
dec
or
jmp
sbb
and
add
loop
nopl
fsts
movsl
xchg
cmp
cmp
aaa
cli
lods
outsl
pop
pusha
and
test
mov
ds
adc
jmp
into
out
or
cmc
adc
push
outsb
cwtl
and
jne
mov
dec
adc
mov
das
std
incl
and
push
push
enter
mov
insl
pop
outsl
adc
pushl
sub
and
icebp
mov
scas
repnz
pop
fiadds
pop
clc
pop
loop
and
aas
cmpsl
xchg
pop
insl
dec
movsl
imul
cmp
mov
dec
add
cmpsl
mov
in
loope
lret
popa
std
negl
xchg
lcall
decl
dec
mov
int
dec
iret
xor
pop
sub
aas
stos
mov
ljmp
inc
shll
push
xor
test
fiaddl
adc
aaa
outsb
aam
xchg
outsl
cmc
xlat
and
sbb
jle
inc
xchg
push
lods
jmp
popf
and
cmp
xchg
jnp
mov
mov
sub
data16
add
pop
out
inc
pushf
cmp
fs
xor
sub
lods
pop
in
pushf
dec
sub
gs
aad
sarb
or
jmp
pop
push
fidivrs
fisubrs
inc
inc
ja
push
adc
call
pop
clc
add
fsub
jae
addr16
addr16
jmp
jo
pushf
xchg
dec
cmp
icebp
dec
std
mov
out
mov
sub
insb
jne
jne
outsl
mov
mov
push
pop
std
pushf
mov
adc
jl
fdivrs
fdivp
xchg
add
jecxz
fnsave
dec
mov
cmpsb
jge
lahf
adc
xchg
ljmp
incl
mov
insb
sbb
movsl
or
jge
sub
ljmp
adc
lods
test
fs
outsb
arpl
add
hlt
jg
jg
fildll
sub
or
dec
ja
mov
mov
ret
xchg
ds
xchg
jbe
call
std
imul
mov
arpl
mov
push
bound
or
repz
and
in
mov
test
repnz
je
icebp
mov
jg
lock
call
insb
iret
data16
ljmp
popf
fwait
pop
jnp
mov
jbe
in
decl
pushl
dec
es
and
add
mov
jl
insb
pop
push
pop
dec
xor
sub
ss
sub
addr16
jg
ja
lret
pop
enter
das
daa
mov
mov
fiaddl
xor
lock
sub
jle
shr
movsl
xchg
pushl
fsubs
jbe
ss
fs
push
bound
mov
push
inc
and
std
ljmp
movsb
pop
lret
mov
test
pop
cmc
or
enter
xchg
cmp
dec
xor
int
out
pop
cmp
jbe
jge
sbb
pushl
mov
sarl
xor
pop
and
inc
lcall
repz
mov
mov
roll
test
xor
test
push
out
sbb
add
jl
pop
fcomi
and
pop
movsl
cmp
pop
lds
push
mov
sub
in
mov
fcmovnbe
bound
insl
mov
xor
imul
dec
push
add
push
pushl
repz
and
adc
aaa
fpatan
mov
pop
pop
orb
lcall
into
sahf
mov
pop
or
shll
out
scas
mov
add
cmc
adc
fcompl
adc
gs
dec
jge
mov
mov
mov
scas
mov
jmp
push
out
js
nop
push
xor
jae
dec
js
int3
jbe
inc
pushf
insl
iret
add
and
lahf
mov
cs
pushl
sbb
cld
scas
push
push
mov
ror
mov
cmp
mov
popf
cmp
xchg
or
adc
inc
pop
fmuls
fdivrl
cmp
jp
xor
cmp
add
ja
sti
jle
xor
inc
push
mov
subl
mov
fnstcw
icebp
jg
mov
or
mov
sbb
jo
or
inc
add
in
mov
es
sub
pop
xchg
mov
push
mov
lea
sbb
idivb
mov
daa
adc
addr16
fs
sub
incl
popf
mov
mov
pop
daa
pushf
out
jl
add
popa
fldt
insl
out
out
test
pop
jns
stos
into
or
mov
aad
inc
pop
int3
insb
icebp
mov
cmp
mov
or
stos
cmp
sbb
out
fisubs
das
cld
jl
mov
inc
inc
int3
inc
sub
mov
icebp
mov
lds
daa
and
aaa
mov
hlt
mov
sub
jne
adc
call
adc
jge
cli
mov
test
push
pop
push
aas
and
jl
push
ret
lcall
jge
mov
mov
pop
mov
fcmovu
cmp
jg
incl
les
pop
clc
cmp
cmp
mov
adc
and
jmp
inc
sbb
lcall
pop
sbb
mov
push
push
sbb
adc
add
pop
jns
mov
incl
call
mov
inc
dec
nop
cli
sub
test
xor
decl
lods
push
sbb
loopne
sub
pushl
jecxz
in
jno
test
push
cmp
lahf
das
and
scas
lret
cmc
lahf
in
aam
decl
inc
jne
pop
aas
ljmp
mov
cmp
decl
mov
jl
mull
popf
and
pushl
out
leave
jl
xchg
rorl
dec
iret
or
or
mov
jecxz
mov
xchg
aas
jnp
push
or
clc
mov
pop
ret
arpl
jbe
sub
rorb
out
pusha
pop
mov
movsb
shl
pushl
mov
fists
mov
sbb
aaa
clc
fildll
lds
sti
pop
mov
mov
adc
inc
test
data16
inc
sbb
sti
mov
and
repnz
or
je
ds
jbe
adc
push
ljmp
iret
push
push
daa
stos
and
adc
stc
repnz
mov
cwtl
inc
cmc
jle
int3
push
call
std
inc
shll
enter
and
ds
jmp
sbb
in
fdivl
rorb
enter
lods
cmp
sar
pushl
clc
sbb
jns
cmc
sub
xchg
daa
imul
mov
mov
pop
cmpsl
andl
sub
jo
clc
popf
pop
fbld
ret
and
ljmp
inc
cmc
adc
shrb
aam
jg
sahf
ror
arpl
mov
test
mov
stos
dec
sarl
daa
sub
jmp
int
repnz
adc
outsl
lock
cmp
push
test
mov
or
sahf
pop
inc
pop
xlat
cmp
jg
sub
mov
adc
sbb
push
test
mov
dec
aas
push
push
ret
loopne
fisubs
sub
loop
mov
inc
fldcw
movsb
add
mov
mov
push
ret
jmp
outsl
hlt
jg
loopne
sbb
adc
lahf
je
xchg
loope
repz
decl
into
push
push
jg
out
sub
xlat
lea
cld
push
inc
xor
shll
push
incl
rcll
dec
pop
xchg
ljmp
and
movsb
push
push
imul
jle
adc
call
inc
push
lods
fucomip
cmp
ds
jmp
pop
lock
dec
lods
xchg
repz
stc
test
lcall
xor
dec
xchg
cmc
jp
ret
push
test
jno
cltd
sbb
jg
ljmp
sbb
scas
pop
lret
pop
cltd
out
ret
mov
mov
stc
inc
mov
out
sub
add
jmp
std
movl
mov
add
pop
movsl
movsb
decl
call
stos
push
jae
sbb
pop
rep
cmp
lcall
imul
sub
bound
mov
and
movsl
pop
cld
ds
xchg
sbb
jmp
xorl
add
push
and
adc
sub
movsb
test
call
mov
loopne
or
shlb
popa
jnp
mov
shrl
dec
sub
and
subl
fildl
pop
mov
aaa
mov
das
xchg
jge
or
movsb
sbb
ljmp
std
incl
add
push
fidivl
sbb
shrb
mov
adcl
stos
and
loopne
or
or
roll
mov
jmp
sar
sbb
xor
scas
das
lcall
cmpsb
xchg
dec
out
ss
fldcw
aas
mov
decl
mov
pop
adc
adc
rclb
push
int3
cmp
cld
mov
mov
popf
xchg
into
aad
cmp
aam
je,pn
or
insl
fimuls
xor
fsubrl
outsl
int3
icebp
fwait
sub
div
sbb
enter
decl
lret
sbb
jne
pop
dec
aas
and
aam
mov
push
scas
testb
xor
aas
out
iret
and
sub
sbb
mov
push
push
and
jp
push
jmp
decl
and
hlt
jge
out
pop
movsb
les
daa
inc
mov
lods
ss
iret
cli
push
add
and
dec
xor
mov
jl
pop
clc
decl
cltd
pop
push
pop
pop
dec
in
js,pn
jno
outsb
push
and
cs
incl
lds
mov
jae
pop
into
lahf
pop
mov
jmp
adc
sbb
pusha
nop
arpl
stos
leave
cld
icebp
xchg
in
cmpsl
adc
decl
std
call
popf
mov
xchg
fisttpl
cwtl
or
subb
loop
std
pushl
pop
pusha
inc
pop
sbb
mov
and
jnp
leave
mov
pop
mov
mov
movsb
jg
ljmp
cmc
cmp
loope
pop
sbb
insb
stos
mov
dec
cld
inc
int3
ljmp
push
dec
inc
jbe
sbb
aaa
das
gs
cltd
imul
jns
outsl
jge
add
xor
jl
ljmp
sbb
addr16
incl
cmp
mov
xchg
mov
aam
pop
iret
shrl
pushl
mov
xor
sahf
out
and
xor
ficompl
pop
jg
jmp
outsb
shll
paddw
dec
sbb
mov
into
decl
addr16
ret
test
or
aad
xchg
cwtl
out
add
sbb
mov
je
mov
mov
dec
dec
out
xor
sub
or
ss
jmp
lea
jmp
insl
dec
xchg
xor
aaa
nopl
jns
ret
cmp
outsb
and
enter
aaa
inc
stos
test
cmp
sti
test
out
xlat
seta
stos
mov
mov
jbe
push
mov
pushf
mov
aas
mov
ljmp
adcb
push
bnd
call
mov
fs
sub
incl
xchg
test
mov
mov
mov
xchg
jbe
rorl
arpl
sub
adc
das
inc
pop
xor
jnp
cmp
fstp
lret
rorb
cld
call
mov
or
xor
movsb
push
sub
pop
lret
sbbl
inc
cmpsb
enter
outsl
adc
aad
int3
cmp
hlt
aaa
orb
mov
ljmp
cmpsb
jecxz
jl
call
rcl
sti
jmp
mov
pushf
cli
pop
add
pop
jae
and
adc
inc
jo
mov
jae
hlt
enter
adc
repz
bound
sarl
call
mov
imul
jl
mov
mov
call
mov
arpl
push
fs
sub
push
dec
sbb
icebp
xchg
in
push
cvtps2pd
pop
in
loop
mov
pop
bound
shlb
mov
std
ficoms
fmulp
jae
lret
inc
in
xchg
xlat
jl
idivl
jl
sbb
sbb
push
mov
and
cmp
mov
movsb
dec
sub
cmp
paddw
pop
fwait
xchg
jne
arpl
lds
xchg
dec
add
add
cld
enter
clc
fdivr
add
pop
pop
sub
test
jmp
mov
insl
outsl
pusha
test
xor
adc
adc
fbstp
call
mov
fdivl
push
inc
insl
jo
or
mov
in
adc
push
ret
inc
mov
xchg
dec
pop
repnz
or
insb
xchg
xchg
dec
shlb
xor
jl
pop
mov
cmp
inc
xchg
mov
rep
bound
lcall
push
fcos
adc
int
xchg
pop
or
dec
or
mov
mov
sbb
sbb
add
fimull
push
adc
jl
loopne
iret
cmp
and
loop
sub
cmp
xchg
mov
call
xchg
hlt
lods
and
out
pop
hlt
ljmp
enter
stos
ret
adc
stos
call
mov
dec
sarl
pop
std
inc
jmp
pop
jae
adc
mov
imul
mov
jp
sub
add
cmp
pop
push
hlt
jbe
aam
jg
jmp
xlat
or
test
and
push
nop
xchg
enter
into
add
push
call
push
in
xlat
cmp
cmpsl
push
mov
movsb
adc
mov
mov
pop
push
das
std
call
es
test
test
mov
cmpsl
jl
jns
jbe
das
adc
mov
hlt
arpl
subb
aaa
cli
lcall
sbb
pop
repz
loopne
in
adc
pushf
jae
mov
ljmp
and
jne
push
gs
push
add
adc
test
pop
incl
nop
addl
aad
dec
jmp
cli
pop
push
int
jge
mov
adc
lcall
and
cld
outsb
dec
xchg
dec
repz
fadd
sbb
add
sbb
xchg
cli
ljmp
fistpll
push
popf
mov
in
push
out
inc
rclb
mov
scas
and
xorb
leave
cmp
shl
scas
cli
jge
inc
dec
enter
lods
ss
mov
dec
daa
dec
out
icebp
popf
jmp
xchg
insl
loope
fists
pop
into
cmpsb
lret
out
cli
mov
test
xor
insb
xchg
js
jg
mov
mov
inc
jns
xor
out
movsl
filds
mov
rcr
pop
or
xchg
pop
movsl
jno
cmp
mov
pop
adc
xchg
mov
orl
dec
out
sbb
jmp
shrb
adc
out
test
mov
or
decl
cld
dec
jno
fnstenv
xchg
mov
or
loop
repnz
ljmp
push
rol
inc
jecxz
orb
call
mov
in
xchg
call
jecxz
sahf
lcall
lcall
cld
lods
call
push
inc
xchg
mov
ss
test
sbb
pop
sub
lea
and
popf
int
cmp
decl
sar
inc
daa
jns
mov
sub
loop
add
mov
out
loop
xor
jmp
jo
mov
push
lret
xchg
mov
frstor
cmc
jmp
fldt
ljmp
frstpm(287
mov
dec
add
icebp
inc
rclb
loop
mov
icebp
fdivl
or
push
decl
mov
lock
dec
fistpll
fistpll
mov
cltd
dec
imul
sahf
push
sbb
negl
mov
shll
ret
inc
jle
outsb
and
pushl
vxorps
jge
pop
scas
xchg
sbbl
or
or
sar
fiaddl
int
popa
push
xchg
cmp
andb
jmp
mov
test
testl
inc
mov
orl
mov
cwtl
add
cmc
nop
xor
pushl
ret
jg
in
push
iret
inc
decl
mov
loop
or
popa
loopne
nop
cs
xor
lret
jp
add
call
shll
imul
add
dec
push
pop
mov
idiv
jg
pop
adcb
pop
jl
icebp
test
mov
sbb
add
test
jp
inc
sub
dec
loope
xchg
lods
pop
sarl
and
lea
test
or
inc
and
add
ret
xor
lcall
xor
xchg
adc
clc
or
add
adc
ret
xchg
pushl
xchg
aam
imul
push
xor
and
enter
das
std
cmpsb
or
mov
xchg
dec
jo
mov
aad
and
call
sbb
in
mov
or
cmp
dec
stc
pushl
cli
lcall
inc
push
aaa
mov
mov
dec
adc
pop
cli
or
lcall
inc
xor
xchg
outsl
push
pop
leave
dec
rorb
and
push
xchg
stc
fsub
inc
test
cmp
push
push
rcpps
test
push
shl
jge
jmp
arpl
jp
notb
xchg
rcr
out
test
incl
cmp
call
sahf
in
add
or
mov
lcall
push
fisttpll
dec
mov
lods
int3
mov
fstpl
push
mov
fcomip
mov
jle
test
mov
jmp
ja
pop
ficomps
fldenv
ja
pushf
mov
test
lods
lods
outsl
out
insl
out
mov
test
add
jns
push
dec
add
incl
jg
pop
lcall
lcall
jmp
movsl
inc
jno
jg
jecxz
lds
popf
and
mov
cmp
call
sbb
and
stc
jns
movsl
cmpsl
pop
add
sub
pop
lahf
fwait
pop
jle
call
idiv
inc
adc
stos
cmp
mov
in
mov
in
mov
fucomip
clc
pminsw
cmpsl
test
dec
sbb
inc
loope
je
outsb
insl
adc
jmp
mov
or
lret
addl
mov
pushf
mov
lea
lods
sbb
pop
pop
addl
sbb
ror
mov
jb
cld
decl
mov
mov
xlat
cmp
xchg
push
or
inc
sarl
jg
dec
aad
mov
add
in
clc
int
jae
mov
add
ja
push
dec
cmp
loope
mov
fidivs
xlat
lds
das
cld
idivb
add
dec
add
mov
imul
ljmp
bound
inc
addr16
cmp
les
inc
jne
les
fucomip
adc
mov
inc
push
out
aad
pushf
iret
adc
pop
incl
jmp
shufps
and
sahf
inc
dec
ret
int3
mov
jmp
decl
dec
pop
mov
fildl
outsb
dec
fadds
and
push
mov
pop
pop
call
cli
pop
cld
pusha
xor
lea
mov
lods
mov
js
cmp
outsl
std
pushl
je
sbb
lret
loop
fs
aas
add
std
sub
fdivr
ljmp
mov
push
stc
aaa
jmp
mov
clc
cld
imul
inc
lret
outsl
data16
in
lcall
out
shl
not
add
push
pop
jg
jecxz
jno
jno
jmp
arpl
in
jg
test
push
xchg
insl
nop
cltd
adcb
mov
inc
in
test
cmp
and
mov
add
sub
andb
push
out
or
stos
xchg
call
ljmp
std
call
cld
nop
es
out
sub
sar
xchg
stc
sbb
mov
mov
sbb
cmpsb
and
lcall
dec
pushf
pop
mov
mov
or
mov
pop
mov
inc
cmp
mov
imul
push
mov
gs
std
pop
lcall
mov
push
xchg
out
and
rcrl
jo
cli
test
cmpsb
jg
jle
or
test
mov
fcoml
out
clc
xor
repz
adc
jns
call
and
in
fistpll
insl
jmp
mov
sub
cwtl
dec
repnz
mov
pop
dec
jge
pop
fwait
les
mov
jo
inc
xor
or
aam
clc
mov
xchg
or
sub
ljmp
or
push
jne
pop
jnp
call
pop
cmp
mov
nop
and
xchg
ljmp
cld
mov
cltd
push
test
add
xchg
daa
jbe
inc
lea
dec
stos
fwait
sti
inc
lret
push
pop
sbb
xchg
pushf
loopne
ljmp
icebp
call
cmpsb
push
mov
subb
pop
push
subl
dec
call
jo
jbe
flds
das
sub
sub
cld
leave
mov
pop
jb
out
mov
loopne
mov
sahf
iret
jb
mov
mov
mov
cmpsb
xchg
ficoms
stos
or
je
lcall
clc
decl
jecxz
pop
sub
or
xchg
mov
mov
xor
shr
ljmp
mov
outsl
dec
into
stos
or
nop
jnp
and
mov
push
adc
pop
cmp
and
mov
sub
mov
push
dec
test
mov
scas
shlb
pop
cld
dec
stos
insl
sbb
fisttps
fxch
sbb
leave
repz
mov
mov
mov
daa
dec
rorb
lock
jl
pop
mov
sbb
pop
outsl
aam
cli
jo
in
loop
mov
mov
iret
or
je
dec
cmp
popa
cmp
in
sub
xchg
and
mov
cmp
cld
insb
sbb
lcall
pop
cli
mov
xor
or
push
or
int3
pop
mov
test
sub
test
aaa
std
enter
icebp
rolb
call
mov
inc
mov
outsl
mov
shrl
sbb
sbb
jg
fnstcw
mov
cwtl
scas
fmuls
xor
and
add
out
pop
pop
stc
test
pop
mov
decl
mov
and
sbb
add
pop
jp
fwait
pop
pop
mov
or
lock
loopne
push
or
imul
fwait
xor
in
test
cmp
test
fwait
jnp
int
inc
dec
std
add
dec
xchg
cmp
idiv
sub
xchg
scas
shll
push
sbbb
mov
xchg
add
loop
call
jg
xchg
jmp
jo
das
ljmp
mov
pop
push
fisttps
push
push
inc
call
dec
jnp
fldl
cmp
xchg
mov
cld
pushf
xlat
pop
jno
scas
es
fistpll
incl
jb
int3
push
scas
sub
in
mov
outsl
jp
aad
and
sahf
nop
sbb
push
pushl
mov
inc
fs
dec
lock
int
imul
sub
lcall
je
jl
cmp
nop
sarb
push
jb
outsl
std
lahf
lcall
decl
xor
add
mov
std
loopne
xchg
mov
arpl
in
insb
pushf
add
sub
mov
mov
xchg
mov
gs
ljmp
std
dec
cmp
xchg
imul
scas
pop
fidivrs
sbb
dec
fisubl
cmp
jno
mov
lea
mov
xchg
popf
pop
xor
fsubs
dec
and
pushl
fnstenv
pop
scas
sarl
ljmp
dec
sbb
add
mov
call
js
mov
movb
mov
in
mov
xorl
das
pop
mov
daa
incl
jmp
iret
jge
mov
in
ljmp
dec
lods
leave
clc
push
sbb
add
cli
fildll
or
pop
imul
lock
outsl
jl
fisttps
movsb
bound
scas
xchg
sub
call
in
fnsave
int3
push
pop
sub
scas
stos
stos
subb
cmp
or
xchg
or
clc
aaa
loop
push
fs
test
push
arpl
or
inc
mov
rclb
mov
fistpll
and
andb
push
popf
je
cld
call
int
js
dec
sysret
mov
push
test
xchg
inc
jmp
adc
sbb
adcl
decl
shlb
fdivrl
dec
cli
or
or
and
jae
inc
ljmp
sbb
jno
push
jo
jg
xchg
cmp
repnz
fsubrp
loope
jmp
aad
xchg
and
lahf
rcrl
mov
cltd
add
out
sub
aam
pop
iret
in
shlb
cltd
and
pushl
repnz
jl
inc
mov
frstor
sub
mov
lret
int
and
call
or
ret
xor
filds
ret
xor
dec
xor
and
mov
out
mov
les
inc
add
inc
into
cmc
das
lock
call
loop
and
ljmp
jmp
sahf
xchg
pusha
xchg
stc
je
mov
xor
enter
ljmp
popa
incl
push
adc
xor
std
dec
ss
stc
scas
push
shrl
mov
or
out
pusha
mov
jns
mul
or
clc
xorb
aad
add
pusha
sbb
xor
jecxz
incl
mov
rcl
adc
xor
push
leave
sahf
roll
scas
jg
fwait
jl
xor
mov
into
sbb
cltd
xchg
inc
inc
cmp
mov
clc
inc
mov
adc
push
aaa
and
ja
test
push
add
and
insb
cmp
cmp
mov
cmc
mov
push
xor
sbb
fildll
jo
jns
jo
filds
je
push
aas
dec
xchg
mov
int
dec
push
enter
repz
mov
sub
fcompl
stos
and
add
pop
test
xchg
scas
decl
clc
cld
xlat
push
dec
push
out
sub
frstor
xchg
mov
sahf
pop
loop
call
negb
inc
jnp
jecxz
ljmp
cld
jl
sahf
shl
fstl
and
push
out
fcompl
decl
mov
orb
mov
pop
loopne
push
lcall
lcall
mov
imul
jecxz
test
aad
mov
and
out
mov
dec
mov
inc
jg
insb
xchg
inc
jb
outsl
or
ret
add
cmp
mov
mov
push
sub
lock
jg
dec
fistps
popf
test
and
inc
leave
mov
cmp
add
push
xchg
cmp
sti
ljmp
icebp
mov
push
sbb
mov
mov
pop
mov
mov
outsl
sbbl
cmp
fwait
icebp
cmp
add
inc
icebp
ret
mov
ljmp
das
out
loopne
pop
push
and
rcll
mov
aas
loope
insb
icebp
cs
mov
dec
std
and
and
or
notl
mov
push
jnp
call
mov
mov
add
shrb
lock
jg
xchg
sub
or
sbb
mov
jo
lcall
ret
mov
xlat
pop
mov
jp
lock
sub
cmp
sub
and
insb
push
call
cmc
lock
inc
lods
jg
push
dec
insl
scas
sbb
pop
jp
add
pushf
inc
sbb
leave
cmp
pop
sbb
clc
gs
cmp
pop
sub
inc
inc
push
test
int
clc
mov
rcrl
rcrl
xchg
lds
out
pop
mov
call
xchg
inc
pop
mov
cmp
pushf
sub
lahf
push
cmc
addb
mov
loope
jg
jmp
add
test
das
insl
cld
lcall
inc
ljmp
xchg
mov
cld
incl
movsl
pop
or
sub
sbb
scas
mov
sub
jge
jno
add
mov
cmpsl
mov
sbb
mov
add
lcall
push
push
shlb
clc
cmp
mov
mov
push
ret
mov
sti
mov
outsl
mov
pusha
ljmp
test
lods
in
out
inc
cld
pop
mov
lods
xor
pushl
mov
adc
pusha
and
xchg
push
dec
pop
push
fwait
cwtl
bound
mov
sbb
adc
lock
ret
and
and
xchg
decl
cld
pop
in
rcrl
fdivs
cmp
movsl
mov
out
pop
clc
call
movsb
jmp
mov
je
test
or
push
push
daa
adc
test
decl
adc
or
cmp
lock
movsl
lret
lea
movsb
call
outsl
sti
mov
push
or
cmpl
jno
fldt
dec
xor
pop
scas
loope
pop
xchg
adc
mov
aaa
clc
stc
dec
jns
cmpsl
pop
sbb
sub
es
aad
push
fadds
pushl
clc
cltd
mov
jbe
sbb
sti
fcompl
mov
mov
push
nop
jg
ljmp
jmp
or
dec
int3
jb
dec
xchg
sahf
imul
loope
mov
clc
lcall
lods
jp
xchg
addr16
push
or
sbbb
imul
dec
sbb
or
inc
pusha
gs
cmp
andb
jp
icebp
jg
out
and
sbb
sub
fldcw
jmp
inc
jl
rol
mov
mov
je
mov
cld
jp
rcll
mov
jl
jp
xchg
xor
sbb
enter
dec
shrl
inc
fs
incl
decl
adc
fwait
fs
mov
scas
add
mov
add
cld
decl
test
sbb
std
int
xchg
lret
cmpsl
cmp
repnz
call
call
shrl
dec
xchg
dec
daa
sbbl
jmp
scas
cltd
pop
inc
test
lea
push
or
add
popa
inc
std
arpl
mov
roll
xor
clc
dec
sbb
mov
push
popa
mov
lock
cltd
push
jg
sbb
xchg
ret
lcall
lods
jg
jmp
cwtl
and
out
pop
std
jmp
xor
inc
inc
lods
setno
inc
sbb
jns
stc
jmp
add
imul
fistl
lods
pop
lcall
cltd
fcom
pop
js
mov
stos
ljmp
and
inc
mov
sub
addr16
arpl
sbb
cli
or
testl
mov
les
mov
jg
add
clc
cmc
xchg
int3
pop
daa
or
adc
in
inc
xchg
xor
push
ret
xchg
cli
xchg
clc
sub
lods
sbb
pop
cltd
lods
mov
icebp
and
sbb
call
test
iret
xchg
ss
fucomip
sbb
outsb
inc
shl
push
int3
fcmovnb
std
mov
dec
push
std
fs
pxor
push
ud0
inc
xlat
add
hlt
or
dec
pop
push
cmp
popf
pop
cmovbe
dec
cli
jge
decl
sti
stos
sti
rol
fwait
inc
or
in
lret
in
test
add
jle
call
xor
cwtl
adc
sbb
int
pop
mov
aaa
lret
iret
sbbb
pop
aaa
and
push
and
and
push
and
data16
js
out
sar
jge
dec
fldenv
cmp
mov
in
loopne
loope
pop
outsb
lock
aaa
mov
aaa
imull
sar
inc
out
sub
rorl
mov
lods
call
clc
jg
sahf
mov
addr16
cwtl
test
cmpsl
cmp
cli
inc
mov
adc
fcomi
or
fisubrs
mov
sub
sub
in
jge
mov
ret
std
loope
jmp
aas
fstl
in
and
sbb
mov
rorb
call
cs
xor
imul
push
mov
push
ljmp
xchg
add
scas
cmp
cmp
ljmp
lods
mov
jmp
jmp
fs
inc
shlb
jmp
test
push
mov
inc
mov
sub
pop
or
xchg
jle
sarb
mov
dec
ror
xchg
inc
sbbb
jmp
mov
fst
mov
xor
icebp
cmp
dec
ljmp
cmc
pop
mov
stc
sub
into
adc
fldt
jne
mov
fistpl
decl
sbb
mov
cmp
inc
idiv
cltd
pop
insb
sub
add
aam
jle
lcall
xchg
gs
mov
jg
xlat
xor
insl
js
aaa
or
sbb
push
fdivrl
mov
jg
aas
pop
icebp
fldcw
hlt
inc
sti
push
adc
add
dec
mov
fnstsw
mov
push
pop
dec
dec
sub
mov
rcll
adc
cmp
std
cmp
push
ja
cmp
push
mov
sbb
cmp
cs
fistpll
adc
cs
out
adc
aaa
icebp
int
mov
lret
mov
iret
jmp
push
lea
sar
dec
adc
xchg
jmp
lea
push
or
in
mov
cli
fwait
push
mov
inc
push
in
jbe
mov
xchg
popf
xor
pop
jl
jmp
movsb
dec
clc
pop
ret
je
pusha
xor
nop
scas
lret
daa
and
call
xchg
mov
subps
js
gs
cmpl
jns
loop
ljmp
lret
xlat
imul
mov
push
negl
call
jb
lods
mov
xor
lods
and
cmp
es
je
and
mov
mov
incl
sti
sub
adc
loopne
add
or
jno
jl
scas
out
jbe
ljmp
mov
inc
or
add
push
aam
or
pop
mov
mov
sbb
sub
or
mov
stos
push
ljmp
push
sbb
push
imul
or
rcll
ret
inc
loopne
or
push
insl
push
fmulp
mov
or
cmp
jge
call
cli
out
scas
lahf
adcb
xor
loope
fs
jge
mov
push
mov
jb
pop
mov
jle
jecxz
iret
int
sub
inc
andl
shll
push
aam
mov
lea
fbstp
inc
push
loopne
lcall
in
xchg
stos
dec
xor
mov
repz
inc
insb
cmp
iret
imulb
insl
rcr
test
xchg
mov
xchg
mov
outsl
cmp
cld
decl
jge
les
aas
data16
mov
sbb
sbb
pop
in
mov
in
xchg
jecxz
gs
lahf
mov
inc
rclb
outsb
fucomip
negb
sbb
icebp
jns
push
sbb
data16
movsb
mov
in
data16
dec
or
inc
lcall
adc
loopne
adc
sahf
mov
xchg
cmp
popa
lcall
ret
or
mov
jnp
ljmp
dec
lret
fstps
inc
lcall
mov
push
into
cmp
shll
dec
je
add
in
mov
call
mov
loop
and
mov
jmp
shrb
loopne
test
test
ds
fsubrs
fistl
es
iret
pop
pushl
sbb
sbb
mov
lcall
fs
mov
mov
movsb
jp
mov
or
cmp
sbb
decl
sahf
mov
out
enter
das
mov
jl
fsubrl
xchg
push
cmpsb
lcall
sub
add
mov
xor
loope
jo
ljmp
xchg
cmpl
bound
push
jb
sbb
pushl
xchg
pop
aas
add
push
cmpsl
xor
sub
pop
add
mov
cmc
adc
in
decl
lret
dec
sub
add
cmp
xchg
cmpsl
data16
ljmp
movsl
mov
sarb
mov
sub
xor
jmp
test
incl
xor
adc
outsb
test
push
mov
pop
aas
pop
hlt
push
sbb
mov
cmc
cmp
pop
jmp
ljmp
cld
xor
xor
popa
and
lcall
cld
lret
push
aaa
leave
daa
mov
addr16
out
or
pop
ljmp
adc
inc
iret
cmp
and
cmp
jp
in
in
aad
cli
pop
call
das
ud2
adc
mov
mov
jl
ljmp
sbb
jmp
lods
cmpsb
cmp
dec
pusha
xor
adc
std
mov
outsl
ret
in
hlt
rorb
jg
lds
mov
lds
pusha
cmpsl
in
ret
ret
mov
sbb
mov
sbb
lock
xchg
loop
sar
std
pop
shlb
adc
cmp
call
stos
xchg
clc
mov
cmp
jno
daa
add
adc
xrelease
call
mov
into
or
inc
sahf
decl
mov
sti
mov
call
cmp
jno
xor
callw
fs
call
dec
sti
or
ret
push
lock
sub
push
vpcmpeqw
or
fcomi
push
lods
sbb
ret
xchg
cwtl
xlat
negb
inc
cmp
adc
ljmp
push
jmp
mov
fdivrs
pop
loopne
shll
fistpll
nop
or
xchg
xchg
xchg
sbb
scas
dec
jne
or
into
rorl
sbb
testl
lock
pop
push
dec
aas
adc
test
sub
outsl
sub
cmp
mov
jecxz
enter
jecxz
movsb
xchg
jg
decl
and
push
repnz
sub
iret
mov
xorl
addr16
mov
cmp
ja
push
aaa
adc
jg
mov
fiadds
xchg
aas
dec
push
mov
jg
incl
jo
pop
mov
sub
out
aas
pusha
loope
xor
std
jo
adc
mov
push
xor
outsl
jge
add
jle
dec
stc
pop
mov
dec
lahf
mov
sbb
call
xchg
inc
xchg
fdivs
insb
fldcw
xchg
dec
inc
repz
xor
pushl
mov
call
mov
pop
cmp
fbld
add
mov
mov
pop
clc
inc
pop
aam
push
int3
shll
adc
sbb
cld
push
cmc
xlat
mov
and
xchg
imul
call
aam
jae
xchg
lds
mov
lds
out
popa
das
nop
sbb
mov
xchg
fnstsw
or
mov
incl
push
iret
push
add
nop
xor
mov
fisttpll
int
dec
ljmp
hlt
xor
xchg
fs
aad
pop
adc
sahf
test
xorl
fnstenv
push
sbb
jg
cli
pushf
ja
mov
push
xor
lock
data16
mov
in
js
cs
lods
test
cwtl
call
and
mov
gs
shlb
mov
mov
jg
aam
pop
sbb
mov
cmpsl
sbb
cmp
or
imul
pop
data16
cmp
incl
mov
aas
adc
cmpsl
add
jl
push
incl
cmp
stc
adc
adcl
mov
fisubrs
sbb
outsl
dec
xor
test
test
mov
test
fwait
nop
pop
pop
insb
add
leave
xchg
ljmp
imul
mov
ds
push
xchg
daa
inc
movsb
xchg
pop
push
nop
mov
inc
into
jnp
adc
lods
pop
xchg
mov
xchg
insl
or
aam
lcall
sbb
enter
aaa
dec
es
in
iret
add
and
mov
mov
jmp
out
mov
add
iret
jecxz
jo
mov
xchg
add
sub
shrb
aad
inc
incl
call
scas
jge
leave
in
loop
mov
cwtl
stc
and
dec
jns
ja
imul
cld
pushl
cwtl
icebp
dec
add
xor
imul
call
in
adc
sar
lods
shlb
dec
add
sbb
mov
or
ja
cmp
mov
shlb
ret
int3
int3
mov
call
jg
ret
lea
pop
xlat
xchg
int
mov
test
stc
pushf
imul
mov
popa
cmp
push
adcb
push
jbe
and
movsl
in
repnz
fldt
adc
and
adc
or
sbb
addr16
lods
ljmp
decl
sub
dec
cmpsl
rolb
xor
insb
ljmp
hlt
xor
aas
mov
mov
sub
insl
pop
sbb
xchg
adc
call
adc
xor
and
inc
add
daa
dec
mov
lock
inc
cmc
xchg
jmp
fistpll
cmc
fwait
ss
mov
dec
bound
outsl
imul
arpl
or
pop
jo
sub
pop
movsl
lcall
mov
cmp
imul
mov
test
and
dec
fidivl
pop
out
cmp
aaa
in
adc
ljmp
pop
icebp
sti
xlat
xchg
push
sbb
loope
jnp
push
aaa
gs
jb
jmp
jnp
testl
mov
sub
xchg
clc
jp
and
stos
lea
pop
push
cwtl
mov
call
cmp
xchg
aam
xchg
fs
mov
pop
sbb
lods
lea
call
cli
out
and
loopne
out
mov
in
add
out
push
ja
pushl
mov
fwait
dec
jp
fimull
push
je
filds
xchg
cmpb
ljmp
jbe
mov
cmp
dec
in
fiadds
repnz
lret
mov
mov
out
or
inc
in
inc
ret
pop
pop
sbb
cld
in
xchg
insl
jne
xchg
xor
enter
shrb
nop
call
fsubr
adc
popa
movsb
fs
fldl
mov
cmp
pushl
sahf
cmp
and
push
dec
loope
insl
mov
ljmp
mov
or
mov
cwtl
sub
mov
leave
sbb
mov
aas
fistpl
lods
sarl
jb
pop
call
out
inc
push
in
push
les
push
loopne
mov
pop
inc
call
out
popa
data16
or
inc
jne
mov
out
imul
call
mov
popf
shlb
repz
cwtl
inc
icebp
icebp
jmp
and
fiaddl
mov
mov
xlat
dec
cmp
call
sbb
sahf
ljmp
jnp
xchg
or
test
mov
adc
inc
push
push
mov
push
sbb
pop
call
in
mov
pop
hlt
out
xor
out
xchg
xor
push
pushl
hlt
and
adc
add
dec
mov
inc
dec
adc
dec
shlb
add
pushl
loope
ljmp
dec
push
sub
js
insl
jmp
mov
cmp
mov
push
add
and
inc
int3
jmp
jg
pop
inc
xor
ljmp
lret
mov
outsb
call
or
popf
xorl
push
sub
lods
pushl
sbb
sti
fadd
in
incl
aaa
and
leave
insl
test
fimull
jg
in
or
inc
int
gs
mov
jmp
fldt
mov
fnstsw
je
jmp
stos
push
xor
das
cmc
push
pushf
in
pop
mov
xchg
mov
adc
sub
arpl
fstpl
mov
cmp
popa
jmp
rol
ljmp
and
repnz
enter
push
jle
cmp
rolb
aaa
add
mov
jno
cmpsb
outsl
push
cwtl
rorl
decl
notl
sub
stos
add
jns
mov
xchg
push
and
adc
ljmp
js
int
sbb
gs
inc
call
pop
or
ret
out
inc
xchg
push
imul
call
pop
pusha
xchg
clc
xor
out
aaa
imul
ret
or
cmc
jmp
aam
fptan
ficomps
sahf
adc
cld
int
imul
jg
push
mov
gs
dec
mov
insb
inc
mov
ja
mov
mov
mov
push
sub
int
mov
mov
call
lcall
mov
push
lcall
add
add
repnz
std
stc
push
fcos
push
fdivrs
nop
test
fiadds
mov
xchg
xchg
jo
insb
enter
or
fisttpll
fistps
jae
sub
nop
rcrb
ljmp
xor
xlat
sbbb
sar
fcmovnbe
sbb
jae
adc
xchg
sbb
rclb
push
fiadds
subb
fdivs
lock
sbb
out
pop
pop
dec
test
mov
mov
pop
sbb
cli
jmp
cmp
dec
or
call
xchg
lret
mov
sub
inc
sbb
jge
inc
lcall
std
aaa
mov
xor
jecxz
cmpsb
mov
cmp
sub
decl
cmp
call
incl
ja
push
insb
inc
je
jns
push
and
pusha
xor
les
fnstsw
jp
pusha
cmpsb
leave
loope
sub
jmp
ret
inc
cmc
dec
ja
jae
idiv
push
jmp
pop
add
dec
mov
nop
and
sti
lret
std
call
nop
comiss
jge
stos
inc
cmp
out
adc
mov
insl
imul
sti
sti
lock
aad
pushf
adc
sub
out
fisubl
inc
repnz
incl
mov
mov
shll
and
dec
sbb
add
sahf
int3
mov
cmp
das
cld
push
loope
aas
add
jne
mov
push
xchg
jl
jge
mov
adcb
mov
sbb
sbbb
xchg
jae
dec
ljmp
jge
pop
pop
call
cmp
mov
pop
inc
push
imul
incl
ljmp
mov
jecxz
imul
rcr
rcrb
mov
sbb
cmpsb
aaa
lds
mov
je
leave
js
call
or
push
xchg
jo
repz
add
mov
clc
popf
repz
ret
sub
xor
inc
or
mov
into
or
and
jo
dec
or
xchg
cwtl
incl
fdivrl
jp
pop
les
xchg
rcrb
cmp
in
decl
stos
fisttpl
pusha
lcall
test
cmp
call
adc
mov
repnz
push
mov
sub
push
mov
push
sahf
pop
sbb
jbe
test
gs
mov
enter
cmp
xor
push
fdivl
cmp
sar
add
cmpl
push
cmp
mov
sbb
jle
inc
lret
or
inc
fs
fdivrp
aad
sbb
mov
fiadds
decl
cwtl
out
sub
sub
mov
push
sbb
insl
fsubrs
addb
ljmp
stos
pushf
dec
pop
gs
out
adc
jbe
lahf
pop
popa
loope
lods
iret
mov
decl
inc
xadd
out
pop
sub
xchg
fcmovnbe
mov
cs
cmc
pop
mov
ror
andb
xchg
lods
lcall
lret
xchg
dec
mov
cltd
aad
fbld
mov
push
push
sub
adc
sub
nop
pop
xchg
pop
jge
sbb
js
lea
dec
loope
cmc
mov
int
mov
fidivrl
iret
pop
clc
lds
sub
std
in
incl
decb
fwait
imul
test
cmp
xor
clc
aaa
icebp
pop
loopne
add
js
int3
push
repz
decl
or
call
call
cltd
das
insb
xchg
decl
out
filds
popf
aam
cmpb
out
pop
dec
cli
inc
mov
scas
push
cltd
sbb
pushl
outsb
mov
xor
mov
lcall
xchg
and
test
cwtl
cmp
shr
inc
fnstcw
ret
push
fxch
or
pushf
jbe
jecxz
je
pushl
add
inc
mov
ja
ljmp
rolb
ljmp
leave
loopne
testb
dec
pop
popa
rcr
or
adc
and
pop
enter
test
popa
or
adc
add
add
xchg
test
movsl
xchg
pop
fs
call
icebp
test
movsl
add
and
int3
aam
mov
cmp
aaa
mov
ljmp
std
call
call
sub
je
pop
and
ljmp
adc
adc
cld
clc
and
sub
sarb
push
lea
push
scas
aam
stos
mov
cwtl
lock
cmpsl
xor
mov
or
or
mov
call
xchg
rol
fnstcw
movsb
mov
mov
lahf
inc
lret
sar
cld
loopne
mov
les
inc
pop
ret
fstl
int
fs
loop
sub
pop
loop
xchg
jecxz
insl
adc
shlb
dec
loope
wrmsr
incl
or
filds
dec
pusha
ss
loopne
sbb
lret
jg
das
fwait
cli
sbb
ficompl
out
pop
lock
inc
outsb
popf
push
dec
out
lcall
movsb
sbb
sbb
je
aad
mov
push
insl
adc
or
sub
lcall
mov
sub
movsb
adc
nop
rcll
xchg
adc
mov
xchg
cli
lcall
add
and
xor
push
dec
fisubs
testl
cmpsb
ja
xor
mov
mov
jg
gs
push
add
stc
movsl
sbb
adc
and
dec
add
call
push
sahf
out
or
ret
xchg
xor
sub
sbb
xor
leave
test
loopne
cwtl
lret
cs
ret
mov
jno
es
xor
cmp
subl
jmp
rcll
mov
stos
ds
xchg
imul
add
xor
notb
call
ja
clc
jmp
jne
jp
lods
cmp
push
leave
dec
test
pop
js
incl
movsl
inc
mov
cmp
sub
sbb
cmp
pushl
jp
add
jne
cmp
adc
inc
mov
dec
jecxz
idivb
movsl
mov
outsl
adc
sub
adc
mov
pop
outsl
mov
lcall
fdivrp
inc
pushl
mov
ret
rep
or
xchg
add
test
mov
xchg
lcall
outsb
mov
push
ret
sbb
loop
enter
jge
push
add
rclb
call
lods
iret
imul
or
pushl
test
add
call
xlat
fdivr
pushl
loop
mov
or
jl
shrb
sbb
mov
adc
lcall
add
in
js
dec
xchg
movsb
push
push
mov
add
dec
aaa
cli
shl
in
shlb
repnz
cmpsl
push
scas
les
xor
mov
cmovno
sti
mov
mov
jmp
adc
loop
aad
stc
adc
mov
push
pop
jns
rolb
bound
rorl
scas
cmp
dec
fs
cmc
roll
aas
ljmp
test
dec
push
aad
ret
add
popa
xchg
mov
xor
imul
sub
jp
movsl
decl
cmp
cmc
jo
xchg
push
xlat
shll
push
pop
mov
ja
dec
lock
dec
push
in
cmp
jnp
loope
cli
push
pop
xor
adc
jnp
repnz
and
outsl
push
dec
sbb
and
xor
inc
xor
ljmp
jmp
cmp
jno
in
loope
sbb
sub
ret
jb
push
xchg
mov
jmp
cmp
loope
dec
call
in
jl
mov
out
xchg
sar
or
decl
xchg
outsl
sti
in
test
scas
mov
andl
mov
adc
decl
fstpt
xchg
call
add
jo
push
ds
xlat
ror
cmp
call
cmp
out
adc
outsl
ret
icebp
sbb
ds
sbb
mov
xlat
adc
orb
popf
addr16
add
or
popf
adc
sub
int
or
jns
dec
pop
mov
or
mov
pop
cmpsb
sbb
clc
lret
sbb
xchg
out
ja
testb
jg
incl
rcl
sti
popf
xacquire
test
mov
jecxz
mov
jle
out
cld
ret
cmpsb
fnsave
push
xor
xchg
sar
pop
push
push
and
fidivl
sub
insb
lock
mov
addr16
xor
cmp
clc
call
hlt
mov
pop
and
ljmp
cmp
push
or
jl
add
stc
jp
inc
dec
adc
popa
je
cli
mov
jns
jbe
shl
sbbl
pop
lods
sub
lcall
into
push
cmp
mov
pop
push
cli
shll
xchg
pushl
cli
adc
push
fsubrs
iret
mov
pusha
jo
out
or
cmp
dec
jb
sbb
sahf
or
lods
rcrl
hlt
lcall
rcrb
xor
loop
jb
push
mov
decl
jns
or
sbb
adc
adc
jae
fldl
je
add
jmp
mov
sub
rorb
nop
aad
iret
dec
or
pop
das
jne
loope
jp
sahf
les
add
imul
jg
jge
sbb
cs
dec
sub
bound
mov
jns
lahf
ljmp
sub
mov
or
push
inc
lods
sbb
xchg
adc
shlb
decb
ret
subl
pop
add
or
inc
mov
jge
mov
inc
in
or
stc
shlb
and
filds
clc
in
int3
test
loopne
sub
mov
sbb
and
out
out
xor
push
jae
lret
or
push
jg
fbld
jnp
mov
pop
cmc
push
fisttpll
or
jne
call
loope
xchg
sti
xchg
xor
jno
mov
xor
test
das
std
inc
sub
cwtl
push
pop
jnp
xor
cmc
add
lcall
push
push
ds
inc
aaa
pusha
sbb
jle
sub
lcall
sbb
shrb
lds
loop
cmpsl
lcall
adc
icebp
incl
jp
mov
inc
aad
add
leave
push
loopne
add
dec
test
and
or
cltd
lcall
fisttpll
dec
inc
sub
xchg
sub
ljmp
sar
pop
pop
bound
push
jno
pop
xor
decl
push
js
enter
jecxz
xchg
mov
xor
cwtl
inc
sbb
jmp
mov
mov
fnstsw
cwtl
cmp
jmp
push
imul
or
roll
jbe
lock
push
test
cmp
mov
fwait
push
xor
sub
sbb
lahf
rcll
incl
push
lret
cmp
cmp
mov
adc
pop
mov
push
call
mov
out
cmpsl
popa
decb
mov
aaa
mov
mov
call
lcall
mov
mov
cmp
hlt
or
jo
int
push
lods
and
pop
cmp
mov
push
cmp
int3
adc
lds
pushf
imul
dec
repz
fcmovnbe
lock
ja
xor
and
jp
repz
mov
test
lods
lcall
imul
xchg
pop
mov
ss
mov
adc
inc
cmpsb
pop
sub
inc
mov
orps
xor
push
dec
lcall
inc
mov
rorb
and
ret
cltd
jecxz
ljmp
icebp
xchg
pop
adc
adcb
in
out
xor
mov
aad
das
orb
or
incl
lods
pusha
call
lods
inc
fimuls
push
pop
fiadds
jmp
jne
jbe
fwait
lahf
mov
adc
add
inc
pop
ja
mov
mov
add
push
out
iret
push
sub
lea
lods
idiv
inc
or
dec
fldlg2
sub
clc
pushf
and
std
incl
push
daa
pusha
in
sbb
mov
cltd
pop
jmp
mov
push
pop
push
std
mov
add
cmpl
pop
xchg
push
cmp
out
sub
jno
jo
aad
mov
lcall
fcomp
clc
sub
jg
xor
mov
orl
jnp
sbb
xchg
ljmp
pushl
pop
fdivl
sub
sub
push
sti
sbb
cwtl
adc
jmp
gs
inc
or
aad
stc
adcb
sbb
insl
sub
sub
icebp
xchg
insl
decl
add
cmc
popa
jno
xchg
mov
insb
js
jmp
hlt
jp
jmp
xlat
xchg
sub
xor
jle
inc
movsb
arpl
jg
cmp
mov
cli
lds
push
push
xor
add
aad
dec
std
lcall
mov
int3
popa
sbb
mov
jb
leave
mov
pop
loop
sub
in
sti
mov
les
int
jb
iret
shll
call
mov
push
push
or
movsb
dec
loop
push
stos
addr16
and
inc
in
icebp
call
add
popf
stos
rcr
sti
cmpsb
lods
pop
bound
scas
pop
pop
inc
xchg
pushf
push
jae
fldl2t
pop
loopne
std
test
fbstp
orb
call
imul
sti
or
cmp
push
mov
push
jns
call
add
jne
pop
jg
xchg
sar
imul
xchg
dec
push
daa
add
xor
call
adc
push
add
lcall
clc
inc
cld
outsl
pop
push
mov
mov
or
add
pop
int3
test
nop
incl
add
decb
mov
incl
push
cmp
mov
ljmp
rcrb
mov
test
je
xlat
loopne
fcoml
pusha
in
imul
fmull
xchg
lret
fsubp
iret
divl
mov
stos
adc
scas
adc
push
fld
daa
jmp
ljmp
ret
inc
cli
cmp
or
jne
cmc
or
mov
mov
enter
fldt
pushf
xchg
sub
adc
shlb
aaa
mov
movsb
and
cmpsb
int3
or
outsb
cld
insl
xchg
out
jg
adc
xchg
mov
add
push
inc
shl
call
js
cmc
sahf
mov
xchg
in
aam
add
ja
xor
push
sbb
fwait
sahf
mov
dec
ljmp
mov
aaa
clc
jge
in
js
insb
push
or
dec
or
inc
fcoms
jmp
out
cli
icebp
sub
ljmp
sub
lods
mov
and
dec
stos
or
pop
add
mov
mov
xor
or
add
cltd
mov
adc
inc
sbb
lahf
sbb
mov
mov
mov
lods
scas
lcall
mov
fidivs
push
in
adc
leave
and
jnp
das
sub
push
mov
adc
and
pop
aas
xchg
in
in
mov
outsl
fs
ljmp
hlt
inc
adc
xchg
mov
xor
dec
xchg
sbb
daa
mov
in
push
inc
aaa
flds
test
rcrb
pop
loopne
icebp
lcall
data16
sbb
icebp
mov
push
adc
xchg
aad
fs
cmp
sub
pushf
or
repnz
arpl
or
das
inc
lcall
push
cld
and
arpl
ja
jae
decl
mov
scas
and
xor
pop
inc
dec
adc
incl
mov
lahf
in
inc
fwait
jno
std
aaa
cld
jmp
stos
or
and
fisttpl
dec
pop
pop
fistpll
in
add
add
pop
mov
xor
lea
in
rcll
imul
push
cld
xchg
sbb
imul
shrl
inc
jp
push
les
dec
call
pushf
movsb
inc
sbb
psubusw
mov
scas
jmp
jg
mov
mov
and
xor
std
dec
lret
inc
fwait
pop
cli
call
jmp
push
jb
mov
jns
stc
fs
lods
scas
decl
std
iret
filds
mov
add
cmp
cmpsl
mov
xchg
incl
leave
lahf
sbb
xchg
pushf
or
js
adc
adc
ljmp
bound
pop
adc
sbb
cmpsb
jo
pop
lahf
inc
mov
cmc
pop
in
fstl
mov
push
mov
clc
fsubl
push
add
fistpll
inc
jl
jne
xlat
test
and
xchg
and
adc
and
movsl
loopne
jne
lock
inc
stos
xchg
out
mov
cmpl
roll
mov
pop
jno
jecxz
scas
in
mov
movsl
dec
pop
add
shrb
xchg
pop
sub
gs
repz
icebp
nop
fistpll
mov
push
hlt
or
cmc
or
faddl
jg
cmp
mov
es
inc
out
int3
scas
dec
sbb
out
ss
fistpl
push
call
das
cld
mov
insb
fidivl
dec
jne
dec
jns
or
cmp
push
ljmp
loope
jb
sub
inc
xchg
add
jle
shl
xor
cmpsl
push
cli
pushl
mov
pop
loope
sub
mov
bound
pop
push
movsb
or
aaa
fwait
pop
lahf
add
xor
push
leave
std
jg
jmp
push
ret
mov
sub
add
jg
lea
int3
ja
mov
mov
test
decl
xor
fcmovbe
jg
sbb
push
test
cwtl
inc
lcall
push
lcall
jmp
xor
notl
cwtl
scas
pushf
sub
ja
adc
jecxz
lods
incl
mov
ret
inc
xchg
xchg
xchg
cld
mov
lods
or
loop
ss
call
sub
xor
ljmp
xchg
lods
pop
mov
mov
ljmp
fld
push
mov
sbb
push
lahf
inc
jl
clc
add
aam
jnp
imul
pushl
mov
testb
shlb
es
insb
subl
adc
sbb
cmp
mov
xlat
lret
std
mov
ds
fucomi
into
mov
lds
mov
dec
jecxz
jae
cmp
pop
mov
ljmp
mov
xor
jl
inc
in
xchg
push
sti
js
push
jl
sbb
fs
insb
cmp
cld
cs
mov
adc
jl
push
hlt
add
dec
mov
call
lahf
ret
lock
aam
push
add
sbb
ss
lcall
inc
sbb
or
loopne
pop
jmp
scas
shlb
push
xor
rorl
lcall
dec
mov
sub
mov
xchg
mov
or
mov
rcrb
cmpsb
jg
loopne
decl
sub
jae
cmp
ljmp
lds
lret
mov
or
fbstp
loope
sub
push
push
pop
pop
gs
push
ja
lret
push
je
outsl
std
push
hlt
sbbb
push
pushf
aas
fwait
sub
push
jl
pop
mov
fistps
xchg
lock
test
mov
aad
jbe
pop
cmp
cmpsl
loope
adc
fidivrl
pusha
xor
lock
call
ffreep
mov
or
push
scas
cwtl
stos
loop
fnstsw
push
in
adc
jg,pt
xchg
clc
mov
add
outsl
lret
movsl
xor
pop
jns
call
add
and
push
jnp
mov
mov
cwtl
fs
dec
rcrb
xor
jnp
pop
and
jbe
jo
pushl
jg
sbb
pop
push
inc
call
lret
sahf
inc
movsl
ljmp
dec
stos
data16
stc
jge
mov
add
and
mov
popa
push
ret
xchg
inc
sarl
test
mov
es
mov
loop
ss
add
jecxz
fnstsw
mov
push
or
xchg
pushf
push
pop
mov
sbb
mov
jno
out
jl
dec
xor
mov
xor
lds
cli
fdivrl
fnstsw
cltd
cmp
cmp
pop
and
mov
pop
and
mov
jmp
outsb
out
push
lcall
pop
add
xor
xor
mov
les
imul
mov
aaa
cli
pushl
cltd
or
and
test
push
adc
inc
jnp
push
push
incb
push
out
fistpll
shlb
jle
xchg
int3
jmp
cmp
jae
icebp
pop
push
ljmp
mov
data16
jmp
sub
pusha
faddl
mov
push
sub
mov
ja
arpl
push
aam
call
xor
cmp
scas
and
test
ret
cmp
std
jg
sub
push
test
sbb
int
popa
outsb
sti
adc
dec
out
dec
cmp
out
mov
outsl
fdivs
aad
pop
test
cmp
loop
leave
lcall
inc
std
cmp
add
cmp
orb
outsb
pop
sub
push
lret
sub
xchg
pop
clc
dec
repz
test
aas
iret
mov
in
sub
lahf
push
mov
sbb
and
jecxz
mov
xchg
inc
je
lock
ficoml
arpl
call
xor
cmp
and
inc
sub
sub
jmp
cmpsl
adc
cld
push
pop
clc
pop
xor
lcall
leave
cmp
mov
pop
and
cmp
lcall
dec
dec
or
loope
or
fadd
jp
mov
mov
sar
cli
outsb
add
jg
cmp
xchg
lock
xchg
cmp
add
ja
hlt
dec
fidivl
fisttps
mov
xchg
mov
jp,pn
ljmp
jecxz
pop
dec
mov
loop
lods
rcll
in
incl
jge
daa
aad
mov
adc
outsl
ljmp
xchg
arpl
lcall
push
stos
push
pop
jg
call
fs
je
out
cmp
jg
lcall
arpl
sbb
sub
pop
ret
sbb
ljmp
hlt
or
cmp
add
push
js
std
stc
insl
mov
fstl
dec
lods
enter
cmovns
push
filds
lret
sub
ror
mov
jle
enter
fmuls
pop
push
orb
bound
add
clc
mov
pop
pop
loopne
push
cmpsl
daa
lret
out
fiadds
xorb
or
xor
div
idivb
sub
movsb
mov
inc
cmp
sbb
cmp
mov
outsl
jo
dec
mov
lock
xchg
fdiv
stos
jmp
ljmp
cmc
test
xchg
mov
jmp
xchg
push
push
outsl
cmc
lods
sub
test
or
push
jge
in
pushl
decb
xchg
xor
and
push
sbb
nop
jne
cmpsb
mov
mov
scas
or
xor
jbe
add
mov
ds
xchg
cld
cmp
add
fucomip
mov
xor
push
and
pushf
jb
nop
cs
sub
pop
sub
mov
xchg
gs
ret
cmp
addr16
lcall
push
ds
xlat
pop
xor
xchg
add
ja
ljmp
xchg
addr16
insl
mov
pop
xor
mov
repnz
cmp
push
imul
in
scas
and
ds
stos
pop
outsl
and
sub
imul
dec
add
dec
push
jbe
jp
xor
mov
sbb
fwait
xchg
lock
jg
lcall
out
adc
cmp
sub
scas
lcall
inc
das
pop
add
pop
xchg
popa
cmp
shrl
lret
aas
js
adc
sbb
addr16
vrsqrtps
sub
mov
bound
int
mov
test
js
sti
inc
in
push
mov
jb
test
int
out
sub
incl
sti
test
std
mov
js
cltd
xor
mov
imul
xchg
xchg
jp
ljmp
mov
add
test
icebp
call
mov
hlt
or
push
lds
loop
pop
pushf
subl
cs
mov
stos
mov
dec
adc
mov
xor
push
out
dec
add
xchg
dec
pushf
or
shrl
jae
or
jno
pop
mov
jle
sub
dec
or
cmpsb
sub
cwtl
pop
notl
add
pop
enter
cli
and
loope
decl
pop
jle
pop
cltd
or
in
test
cmpl
std
jg
into
fucomip
fnsave
jp
lods
enter
cs
pusha
pop
insb
fildl
and
fwait
cltd
or
mov
imul
and
aad
jl
cmc
mov
insl
sti
rolb
fwait
xchg
ljmp
outsl
sbb
mov
lcall
lds
loopne
clc
mov
push
mov
ficomps
push
push
sbb
mov
pop
and
dec
repz
sub
rorl
pop
push
in
stos
sbb
pusha
jmp
push
fcomi
xor
mov
out
or
call
mov
mov
roll
mov
jb
hlt
enter
jo
adc
sub
fisttpll
clc
pushl
jle
in
cmp
cltd
je
sarb
addr16
lret
decl
loope
sbb
loopne
bound
cmp
insb
repz
pusha
mov
lock
outsb
icebp
decl
push
xchg
rorl
push
ljmp
fbstp
sbb
jp
scas
pop
enter
and
and
sub
ss
jnp
js
sbb
nop
loopne
add
movsb
ss
xchg
and
pop
cmpsl
push
movsb
pop
stos
ficomps
imul
sar
movsl
xor
mov
inc
cli
shrl
mov
in
imulb
movsl
push
sti
add
cmp
movsl
mov
clc
and
cmp
int
xlat
loop
leave
popf
xchg
pop
sub
sub
and
or
incb
hlt
in
pop
or
push
mov
ret
push
clc
jbe
inc
cmp
ror
cs
repnz
pop
enter
shrb
packsswb
ud0
movsl
bound
in
out
test
mov
pop
jecxz
hlt
push
fbld
lea
mov
cmp
in
cmp
push
ja
ss
pop
cmp
xchg
addr16
adc
sar
mov
cmc
pop
xor
and
xor
or
pop
mov
out
pop
adc
decl
pop
cwtl
jp
inc
gs
cmpsl
aaa
adc
xchg
sbb
dec
lods
psubq
ja
fucomip
test
xchg
or
inc
cmp
jo
std
mov
mov
inc
popa
loop
cmp
add
or
lret
into
mov
mov
mov
mov
xchg
scas
cs
mov
push
mov
incl
fcoms
inc
std
jbe
push
les
stos
cmc
mov
call
imul
in
rclb
cmp
pushl
dec
sbb
xor
loopne
inc
ljmp
inc
inc
and
fwait
lds
lea
subb
fstpt
incl
test
mov
cmp
int3
lock
mov
mov
xlat
cmp
pop
std
sbb
jmp
loope
lods
jbe
pop
js
xor
mov
aad
xor
cmp
pmaddwd
xchg
adc
jno
xchg
aaa
call
pop
loopne
push
inc
or
frstor
fcmovne
hlt
leave
int
in
push
jmp
xchg
adc
jne
xor
lods
lahf
repnz
incl
jno
inc
or
insb
xchg
fwait
inc
jmp
test
jg
idiv
call
repnz
push
dec
bound
out
shl
mov
out
out
push
mov
mov
shl
decl
les
in
mov
pop
xor
cmp
mov
xor
faddl
pop
jecxz
scas
pop
add
mov
aad
jbe
lret
leave
mov
ss
mov
add
push
mov
pop
dec
pop
push
inc
stc
outsb
enter
test
jg
lcall
fiaddl
jns
aas
imul
push
mov
sub
outsl
ss
sub
jmp
sbb
popa
shrl
ljmp
push
xor
push
mov
jp
push
dec
pop
outsl
out
adc
es
cli
in
sbb
jmp
xor
cld
shlb
push
mov
mov
push
icebp
xlat
outsb
adc
jns
sbb
sar
pushl
aaa
shlb
push
adc
jns
push
and
loop
jno
push
fsubr
or
lcall
ficoms
sbb
push
test
push
jmp
sbb
pop
rorl
mov
scas
and
jo
subl
and
ljmp
sti
mov
out
or
mov
xchg
sbb
sub
jg
int
xor
jp
das
add
lods
sub
jno
cmp
push
sub
incl
inc
add
jne
pop
leave
xchg
cmpl
cltd
jg
les
scas
addr16
mov
jmp
loop
sar
push
das
icebp
stc
dec
mov
sub
inc
lret
fmull
fstp
lcall
cld
incl
mov
testl
cwtl
sbb
notb
loop
pop
cld
aad
mov
jbe
or
mov
ljmp
pop
pop
andb
sbb
mov
dec
jecxz
decl
cmpsb
leave
loop
dec
jb
cmpsl
incb
orl
jmp
xchg
xchg
dec
fisttpl
jge
dec
and
xor
ljmp
dec
gs
int
dec
adc
jnp
sahf
inc
shl
inc
xchg
sbb
cli
fisubrl
test
lcall
cmp
mov
xorb
mov
loopne,pt
pop
fs
ds
cmpsb
popl
test
nop
std
std
push
lahf
mov
jmp
call
decl
movsb
mov
leave
push
jbe
adcb
out
sbb
jmp
xchg
daa
test
pop
jecxz
test
push
daa
sti
shr
jne
jg
lcall
fsubs
push
cmp
push
and
push
push
call
jg
xor
stc
mov
cmp
loopne
insb
daa
stc
in
popa
ljmp
in
and
or
xchg
pop
pushf
inc
push
push
pusha
lcall
inc
mov
add
jns
shll
xchg
stos
sahf
mov
jb
cmp
jg
mov
jbe
mov
jp
jno
mov
mov
loopne
xchg
lea
xor
enter
mov
inc
pushf
jg
icebp
sti
jne
adc
mov
cli
xchg
cld
mov
cmp
sti
outsl
mov
lcall
stos
popf
inc
or
mov
cltd
stos
ret
cmpsb
cmc
hlt
push
and
call
push
push
jl
adc
aam
pop
dec
repnz
in
leave
je
dec
out
mov
mov
add
fnsave
cmp
cli
jg
shl
test
sbb
stc
int
rcrb
fiadds
pop
sahf
rorw
push
imul
jge
fistpl
imul
push
sahf
sbb
jmp
ja
xchg
out
sub
subl
jbe
js
cmp
das
cmc
cmp
sub
stos
mov
aam
and
xchg
stc
or
and
lahf
jg
ljmp
inc
repnz
push
push
gs
push
add
pop
jns
decl
jle
inc
adc
pop
fdivs
dec
pop
cmpsl
outsb
mov
dec
jmp
out
mov
mov
mov
mov
mov
sbbb
xor
sar
add
sarl
push
stos
mov
lret
mov
jae
in
cmp
xor
adc
push
ja
cmp
jno
push
pop
jp
ja
pop
aad
dec
or
jne
dec
adc
call
dec
push
sahf
into
jne
xor
dec
sub
scas
pusha
out
cld
in
movsl
cli
call
push
aas
sub
adc
xor
lea
push
xor
testb
pop
mov
jp
dec
mov
incl
les
fmull
adc
gs
sub
out
aad
cmpsb
push
jle
pop
cs
mov
push
push
push
push
push
ror
pop
je
cmc
sbb
jno
fdivrs
scas
pop
sbbl
mov
push
fists
dec
fwait
sbb
mov
or
lahf
cmp
gs
xchg
nop
push
ret
popf
aaa
dec
ficoml
sbb
cmp
jg
in
add
imul
xlat
testl
push
mov
ljmp
movsl
sarb
pop
jne
adc
outsl
ja
mov
xchg
jmp
fldt
out
cmpsb
scas
mov
pop
std
pop
js
bound
jne
push
mov
andl
cmp
js
repz
jg
xchg
mov
xor
cld
push
inc
data16
cld
je
and
outsl
shll
incl
std
imul
and
arpl
or
xlat
add
lahf
jge
sub
jg
jmp
xchg
mov
loopne
dec
xor
pusha
xchg
dec
cli
pop
mov
inc
jae
lahf
sub
mov
mov
mov
lcall
sbb
incl
movsb
sub
fsts
faddl
jmp
inc
ss
xlat
sub
mov
int
mov
aaa
cmp
insb
in
into
inc
repnz
stc
rcr
in
jle
lods
mov
outsl
in
pop
das
mov
sbb
pmulhuw
aaa
cli
pushl
xchg
mov
inc
inc
jmp
std
notl
bound
mov
push
inc
das
cmc
aam
jb
iret
push
pop
ret
pushl
daa
lgs
cmp
jmp
mov
pop
mov
lahf
pop
mov
sub
jg
int
mov
test
xchg
das
std
pushl
or
push
test
stc
popa
leave
mov
push
gs
sti
in
decb
sub
mov
dec
in
pop
mov
jb
sbb
loopne
and
cmp
retw
xchg
push
pusha
hlt
adc
sbb
call
jns
mov
push
mov
cmp
fucom
rcrb
sahf
loop
ljmp
jg
cmp
cwtl
jmp
rclb
movsb
out
push
dec
scas
inc
cmp
mov
lcall
out
mov
jg
mov
fcompl
push
pop
push
es
or
and
jnp
jl
addr16
cmp
decl
dec
hlt
call
repz
lods
jp
mov
jne
mov
outsl
movsl
fwait
dec
out
add
add
popf
enter
push
jb
popa
int3
rcrb
gs
cs
lret
sbb
push
fs
daa
popf
scas
les
mov
push
stc
and
push
imul
fcompl
ljmp
inc
popa
mov
inc
pop
mov
ja
pop
icebp
insb
push
xlat
cmp
mov
imul
cwtl
dec
shll
andb
fildll
arpl
jmp
outsl
pop
fistl
and
push
mov
mov
cli
ljmp
aas
gs
mov
pop
shrl
popa
push
cld
sub
ret
andb
decl
cmp
mov
movsb
in
dec
xchg
cmp
and
or
sbb
push
loope
decl
dec
roll
adc
hlt
out
sbb
jbe
ljmp
hlt
dec
sub
push
and
push
adc
icebp
pop
rclb
ret
pushl
jle
jo
out
jns
and
sub
lods
cld
cs
sarl
jge
jnp
dec
dec
jg
iret
iret
mov
sub
xchg
push
mov
sbb
std
xchg
loop
adc
lcall
hlt
jecxz
jle
js
test
nop
loope
stc
dec
sub
enter
sub
lcall
or
adc
inc
cmp
cmp
cmp
sbb
stos
ja
mov
imul
jmp
inc
mov
sti
push
ljmp
incl
pop
cmp
xchg
cmp
cli
sub
int3
add
cmp
insl
dec
adc
inc
xchg
jecxz
and
pop
sahf
mov
mov
xor
jae
testb
movl
fnstenv
jae
or
dec
js
mov
pop
cmp
xchg
fs
jmp
jecxz
call
jmp
fadd
fldt
push
mov
or
clc
filds
dec
stc
popw
popf
lea
adc
inc
sub
rcrb
rorl
cmp
mov
mov
or
movsb
lods
pop
or
cld
insb
and
pop
je
fcom
leave
pushf
jbe
pop
adc
dec
sub
push
pushl
mov
or
cmp
repnz
sbb
pop
or
out
mov
jb
pop
arpl
out
fwait
mov
jge
mov
pop
loopne
jno
js
pushf
add
sbb
call
mov
dec
push
push
mov
hlt
inc
push
incl
lcall
addr16
ss
lahf
ljmp
daa
mov
jmp
test
fadds
mov
dec
xchg
mov
rcll
adc
sahf
leave
mov
jns
fsubl
pushl
jge
ret
dec
hlt
dec
aaa
pop
outsb
cmpsb
dec
pop
jecxz
pop
jnp
cmpsb
daa
and
decl
loopne
add
flds
shlb
movsb
rol
shlb
mov
ljmp
enter
repnz
outsb
xchg
decl
stos
divl
xor
bswap
pop
cmp
jg
decl
dec
test
roll
and
fistps
mov
mov
decl
pop
cmpsl
stc
xchg
inc
sub
add
mov
mov
xlat
inc
add
addr16
lods
mov
and
out
sbb
lcall
sub
dec
pusha
loopne
sub
cltd
dec
cmp
cmp
lcall
pop
jle
repz
bound
scas
mov
cmp
xchg
jns
cmp
jge
mov
dec
or
jo
movsb
ljmp
cld
dec
incl
inc
mov
mov
scas
rclb
sub
fisttpl
test
mov
icebp
or
sub
inc
dec
sub
decl
push
or
mov
inc
xor
rolb
mov
movsl
push
popa
dec
adc
lcall
inc
loop
out
rclb
xchg
lahf
loope
mov
cmp
pop
xchg
jo
ljmp
aam
cmpsb
xor
inc
lret
test
mov
shrb
and
iret
sar
pushl
int3
popa
dec
push
add
jbe
xor
xchg
lock
xor
adcb
add
jmp
mov
hlt
in
mov
lea
pop
mov
call
in
jbe
inc
mov
imul
je
jb
data16
sti
aaa
clc
push
mov
or
xor
sbbb
fstl
mov
frstor
nop
jmp
xor
xchg
out
and
xchg
dec
ss
add
mov
push
mov
andl
mov
lds
sti
incl
stos
subb
xchg
push
fwait
lcall
xchg
xchg
in
inc
lret
xor
cmp
outsb
leave
inc
mov
repnz
jp
fdivrl
sbb
ljmp
xchg
nop
xor
ror
flds
fildll
jmp
aas
iret
gs
jecxz
mov
in
out
adc
push
lret
addb
fldt
loopne
in
pop
loopne
jg
loopne
data16
jmp
popa
test
mov
fbld
jp
mov
test
in
push
mov
jge
mov
sub
fwait
sub
ljmp
mov
mov
addr16
pop
and
jb
jg
pop
cli
test
loope
icebp
test
shll
pop
out
je
in
mov
cltd
out
iret
insl
xlat
mov
lods
fdivrs
jae
icebp
push
adc
jnp
lea
icebp
and
pop
repz
jb
lahf
std
sti
decl
pushl
in
sub
add
clc
jae
daa
ds
and
rorl
mov
cli
call
fimuls
sbb
iret
fisttps
pusha
mov
pop
aam
leave
mov
xchg
and
sub
lcall
fbld
lds
enter
loopne
addr16
js,pt
pushl
pop
pop
push
pop
dec
sub
or
mov
test
xchg
ret
outsl
mov
inc
jecxz
xor
and
fstps
ficompl
test
and
jmp
lods
das
loope
pop
or
mov
mov
je
test
adc
cmc
cld
adc
push
sub
dec
adc
ret
jg
pushl
bndldx
add
and
test
pushl
icebp
mov
pop
sub
push
xchg
mov
pop
loopne
jg
shr
mov
scas
stos
les
aas
out
pushl
xchg
xchg
jns
jp
stos
movzwl
add
xchg
or
std
push
or
lcall
xchg
inc
mov
out
les
stc
xor
xchg
jns
push
pop
pushf
decl
mov
pop
cli
divb
rcrb
aaa
jge
lahf
leave
cmp
xchg
jno
cmp
cmp
cmp
adcl
pushf
std
ljmp
int
fcoml
cltd
fsubrl
dec
push
mov
push
lret
shrb
push
mov
ljmp
out
addb
std
fiadds
stc
inc
adc
push
aas
dec
mov
lcall
fildll
inc
mov
shlb
pop
mov
mov
cmp
out
pushl
lock
test
adc
call
mov
mov
aas
sub
addl
xchg
inc
lock
xor
ss
adc
dec
stos
out
pop
fisubrl
ret
cld
jmp
enter
cmp
mov
lret
mov
cli
movsl
jnp
jmp
sti
inc
jmp
and
pop
in
mov
pusha
add
mov
pop
repz
mov
cwtl
mov
cmp
push
jle
ret
pop
mov
inc
mov
into
cmp
xchg
adc
or
inc
push
dec
inc
or
into
pop
ficomps
rcrb
xchg
jg
pushf
xor
lock
stos
cs
cmc
stc
insl
stc
loope
mov
pushl
sub
inc
sbb
push
adc
pop
test
lock
xchg
mov
std
jecxz
incl
jmp
jbe
push
jmp
scas
test
daa
addr16
in
cmp
loop
sub
jmp
repnz
push
pop
cld
fs
push
dec
sar
mov
movsl
int
or
das
int
mov
jl
pop
ljmp
push
push
cli
call
lds
test
loope
outsl
and
loopne
fdivr
inc
call
fiaddl
push
mov
cmc
cwtl
and
aaa
sti
cmp
mov
incl
decl
dec
mov
mov
mov
mov
jmp
sar
call
jne
or
dec
fs
mov
mov
xchg
nop
cmc
int3
lret
xchg
jnp
add
pop
adc
pop
cli
lcall
push
push
adc
lahf
and
and
pop
mov
pop
cmp
sbb
and
and
adc
jae
pop
scas
sti
mov
jg,pt
incl
roll
in
lret
movsb
inc
in
jg
mov
push
jbe
loope
mov
lretw
pop
ds
add
ljmp
div
lahf
rorb
push
jbe
enter
in
in
enter
addr16
pusha
incl
lea
hlt
popf
mov
adc
daa
into
mov
and
mov
adcl
out
aad
fcmovnu
outsb
mov
call
pop
loop
dec
add
leave
mov
sub
stos
ret
ret
or
js
insb
or
jg
decl
jp
mov
jne
les
cmp
xlat
stos
jmp
cld
shll
mov
daa
jne
rcrl
fwait
stos
divb
dec
xor
clc
ljmp
inc
mov
aas
add
scas
xor
mov
inc
imul
fucomip
call
cmp
push
stos
mov
addr16
lds
sarl
pushl
frstor
jnp
int3
sbb
sub
arpl
dec
xchg
mov
test
bnd
mov
mov
mov
sbb
test
out
stc
fcoms
inc
decl
xchg
and
cmpsl
aas
lahf
pop
gs
icebp
lods
addr16
lcall
mov
jl
movsb
sti
or
mov
jle
mov
fxtract
add
mov
mov
sti
in
pop
pop
call
or
lret
sar
gs
mov
pop
xor
enter
loopne
cmp
vpsubusw
jmp
xchg
jp
mov
je
loop
ljmp
test
inc
fwait
out
sbb
inc
fdivr
bound
iret
mov
jmp
xchg
arpl
mov
xchg
mov
call
mov
call
pop
or
sbb
cmpsl
pop
lahf
xchg
dec
pop
ja
mov
sub
pushf
cld
sub
pop
mov
clc
incl
pop
loopne
ljmp
pushf
mov
jo
loop
lcall
fwait
les
dec
sbb
push
int3
dec
xchg
fisttpl
jecxz
ret
jg
add
xor
lret
fstl
shl
mov
lcall
popa
scas
jo
adc
rcr
std
sub
ja
das
loop
loope
call
negb
cmp
jno
jns
shrb
lcall
mov
fisttpll
mov
fwait
xor
out
jo
dec
scas
cmp
mov
loopne
jmp
inc
jl
insb
fs
xor
xchg
ds
lods
das
cld
gs
jne
js
mov
ja
lock
pop
test
loop
popf
xor
add
add
mov
call
subl
scas
mov
insl
insl
push
loope
mov
push
sahf
aad
and
jmp
mov
mov
sub
cmpsb
cmc
cli
shlb
aas
mov
lahf
adc
int3
jp
adc
mov
pop
loope
sbb
js
sub
or
clc
cld
sbb
and
fbstp
leave
and
sbb
enter
mov
xchg
jle
cmc
out
call
decl
pusha
daa
int3
loop
and
xchg
scas
rclb
mov
inc
das
cld
cmpsl
outsb
ljmp
add
add
jo
mov
sbb
jl
sub
dec
out
test
xchg
mov
dec
decl
cld
lods
push
hlt
add
js
jp
movsl
xor
lcall
incl
push
rcll
loope
jae
stos
mov
stos
stos
or
xchg
mov
or
decl
xchg
push
in
iret
clc
jno
sub
loopne
sub
pop
cmp
ret
lods
xchg
test
addl
shlb
ljmp
inc
or
jmp
pop
and
cltd
jbe
sub
cltd
cmp
adc
xor
push
cmp
lcall
sub
rcrb
stc
xor
pop
jo,pt
je
push
shl
push
loopne
jmp
jo
out
add
test
mov
xchg
rcrl
push
sbb
pop
inc
add
push
insb
fisubs
idivl
inc
sbb
push
mov
lods
xor
inc
push
cld
call
push
inc
rolb
das
enter
sti
pop
cmp
mov
or
decl
das
dec
sub
jae
xlat
push
sub
es
nop
pop
xor
lock
ret
inc
inc
push
loopne
jle
clc
in
cmp
sub
hlt
cltd
call
icebp
cmp
cmp
sahf
shlb
adc
outsl
scas
add
sub
mov
mov
mov
lds
jae
mov
decl
jbe
sbb
and
lret
icebp
pop
shll
insb
and
insb
pop
cld
popf
jg
xchg
aas
lds
aad
adc
fists
ficoml
mov
xchg
clc
push
in
push
lret
dec
mov
mov
cmc
xchg
push
ljmp
pop
adc
adc
sbbb
rolb
enter
clc
fsubrp
pop
ljmp
out
inc
jnp
xchg
mov
or
fnstsw
lods
lea
mov
das
call
inc
inc
movsl
clc
pushl
jbe
inc
arpl
pop
in
enter
dec
mov
outsb
shlb
iret
mov
cmp
sti
lcall
cli
lret
mov
xor
insb
and
shrb
test
jg
loopne
lcall
cltd
out
test
mov
scas
loopne
mov
insb
dec
out
or
pushl
cmpsb
imul
mov
andl
jb
mov
filds
push
mov
mov
filds
jg
pop
pop
adc
cmp
out
ljmp
or
insl
add
call
loop
pushf
lods
jge
or
add
rorb
pop
bound
dec
ds
sub
aad
jg
jmp
js
inc
loop
dec
cwtl
and
xor
push
dec
jns
in
fstl
cli
inc
push
loopne
inc
into
cld
jo
sub
flds
add
pop
mov
pop
adc
ss
sub
out
cmp
sti
jl
dec
sahf
dec
ljmp
imul
das
icebp
push
push
or
xor
adc
loopne
add
inc
mov
jmp
call
dec
fucomi
inc
adc
pop
xchg
daa
rcr
dec
mov
icebp
fnstsw
incl
loope
jns
ss
inc
repz
and
popf
aas
push
mov
sbb
pop
clc
mov
jnp
pop
pop
push
sub
ljmp
es
je
xchg
test
pop
mov
scas
lea
test
rcl
jg
fbstp
or
xlat
sbb
call
add
and
fwait
outsl
dec
jle
mov
push
in
dec
fmull
lcall
repz
icebp
cmp
cmp
mov
mov
stc
xchg
notb
inc
push
jge
cmc
mov
loope
std
xor
sbb
outsl
jg
inc
sbb
xchg
ss
lods
or
push
pop
ljmp
mov
dec
frstor
stos
sub
cli
fldt
inc
push
pop
xchg
mov
scas
mov
add
fsubrl
sti
xor
cmp
lcall
push
and
jmp
lods
xor
mov
in
sahf
fs
pop
cmp
and
fisubrl
xorl
dec
jecxz
mov
aam
sar
or
nop
sbb
dec
mov
adc
mov
fisubrl
loopne
fdivs
add
ret
jle
jl
dec
pop
fdivr
lcall
mov
adc
sbb
lods
imul
jp
push
sub
imul
push
adc
jg
incl
data16
in
or
xchg
cmc
push
dec
add
cmp
rcl
lret
push
lods
pop
xor
outsl
iret
xchg
out
sub
pop
das
cmp
jg
jne
testl
sub
aad
add
inc
mov
movsb
or
movsb
xchg
out
in
add
addr16
decl
aas
in
orl
movsb
fdivp
incl
gs
lods
sub
dec
in
pop
push
sti
outsl
xlat
xchg
dec
pop
ret
call
mov
or
xchg
dec
mov
xchg
lea
mov
test
call
incl
pushf
hlt
sbb
xchg
and
mov
ljmp
ljmp
imul
push
jnp
jg
ds
jg
mov
dec
xchg
xchg
shll
stos
jo
sbb
fdivrl
int
scas
fildl
je
xchg
imul
push
xchg
pusha
clc
sbb
lcall
iret
shlb
cmp
sub
xchg
push
in
iret
enter
idiv
add
pop
das
or
mov
and
fildl
scas
fidivs
mul
adc
testb
mov
sbb
push
gs
in
out
dec
xchg
std
and
into
subl
ss
push
imul
dec
scas
sbb
aad
arpl
sbb
jg
adc
int
pop
pop
in
aas
pop
pop
test
mov
das
hlt
adc
std
aaa
out
loop
cltd
pop
xchg
lret
call
cld
add
cmp
in
sbb
test
jg
push
sbb
test
jp
push
adc
add
dec
repnz
decl
icebp
ret
pop
and
js
ja
mov
sarb
incl
sbb
loop
push
leave
and
popa
je
mov
push
lock
enter
push
and
jg
adc
cld
bound
sbb
ljmp
daa
aaa
lcall
inc
jle
pop
in
xchg
mov
nop
jb
dec
orb
cmc
or
dec
loope
xchg
lret
and
test
repz
mov
xlat
aam
fidivs
push
inc
mov
sti
lock
push
call
paddsb
push
decl
std
ljmp
les
hlt
pop
xor
nop
fisubs
add
dec
div
popa
mov
mov
add
jo
add
push
sub
faddl
pop
push
and
shrl
pop
out
pop
xor
xchg
inc
add
dec
inc
std
pushl
pop
xor
or
xor
dec
add
inc
pop
add
add
push
pop
add
xor
dec
and
inc
inc
dec
mov
test
sbb
sub
cmp
add
insb
dec
dec
adc
push
inc
dec
sbb
xor
cmpsb
imul
cmpsb
imul
inc
shll
inc
push
test
ss
jo
test
pop
or
or
icebp
dec
shrl
inc
add
je
dec
shll
mov
dec
ror
cld
push
inc
add
cltd
data16
add
adc
add
add
add
xor
orb
adc
add
sub
stos
push
pop
mov
add
notb
jb
gs
imul
in
inc
outsb
or
imul
arpl
outsl
outsb
fdivrs
gs
jne
daa
sbb
jb
arpl
jae
cmp
adc
push
mov
cmovl
je
push
outsl
jb
dec
outsl
fs
outsl
mov
popa
insl
jae
dec
popa
outsb
test
sbb
out
adc
fs
js
lods
jge
fistl
andps
imul
inc
js
and
fcmovne
mov
xor
inc
inc
or
mov
inc
imul
arpl
jp
dec
outsl
into
fdivr
outsl
movsl
dec
imul
or
in
sti
inc
jns
push
outsl
push
imul
jne
insl
fldt
jns
add
insl
stos
popl
sbb
rorl
push
add
mov
mov
push
jo
sbb
inc
push
sub
gs
xor
push
mov
ja
mov
inc
sti
pop
aaa
push
imul
testb
insb
xor
pop
insb
or
imul
repnz
inc
aad
inc
outsl
mov
fmull
or
lock
addr16
in
shll
rsqrtps
sub
xchg
psllw
dec
jl
or
ret
popa
addr16
push
outsl
cmpsb
or
mov
out
fwait
adc
mov
cs
and
push
mov
push
gs
adc
jae
movl
dec
add
pop
je
dec
jno
add
add
add
pop
xchg
iret
in
add
add
imul
fsubs
lods
inc
or
pop
xor
scas
jnp
outsl
or
mov
add
add
cs
xor
inc
inc
dec
or
dec
mov
pusha
cmp
sub
je
outsb
aaa
popa
nop
jecxz
ret
add
and
incl
nop
add
add
out
std
or
rolb
lods
dec
dec
sub
stc
outsl
testb
daa
inc
imul
jle
add
xchg
add
pop
adc
or
sbb
cwtl
aas
test
addl
addb
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
