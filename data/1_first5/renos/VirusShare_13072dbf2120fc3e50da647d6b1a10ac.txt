mov
adc
or
push
je
imul
add
push
mov
add
mov
jg
cmp
jg
lea
in
push
and
lea
cmp
das
mov
lea
cmp
jg
xchg
ja
mov
clc
xchg
mov
lea
inc
inc
mov
add
mov
pushl
add
call
jne
jg
mov
aaa
xchg
or
xchg
mov
neg
filds
pop
push
push
lea
insl
mov
fmuls
jne
gs
lret
lods
or
and
mov
in
mov
inc
inc
inc
ret
push
mov
loope
jno
std
jg
lea
pop
pop
pop
ret
jmp
rolb
or
enter
cwtl
or
enter
mov
enter
lods
test
clc
or
xor
popa
bound
call
idiv
lcall
inc
mov
mov
and
cmp
cwtl
lsl
inc
es
push
add
ret
add
push
lcall
insl
mov
mov
push
ret
xchg
es
pushf
mov
ljmp
divb
sbb
cli
lret
test
inc
add
and
lret
sbb
or
int
sbb
adc
cmp
dec
mov
lret
pop
bswap
and
and
mov
lret
push
pop
and
and
iret
mov
sub
sbb
repnz
and
cs
fldenv
das
fimull
sub
mov
pop
xchg
dec
mov
aaa
aaa
dec
addr16
popa
and
inc
popf
sub
and
mov
cs
int3
in
enter
sbb
sbb
int3
and
outsb
mov
cs
inc
mov
insb
outsb
mov
mov
je
outsl
and
jge
lret
ret
inc
lcall
mov
and
adc
pushf
jns
dec
lods
ds
dec
out
lret
sbb
icebp
push
mov
stc
or
sub
sub
aaa
cld
jg
stos
inc
mov
jl
stc
adc
int3
and
sti
in
stc
out
add
scas
or
stc
or
xchg
jmp
mov
and
mov
mov
and
push
mov
out
jmp
loop
sbb
mov
pop
orb
ret
out
cmc
lret
fdivrp
les
int
rorb
mov
inc
mov
and
jbe
loope
loope
pushl
push
cwtl
and
sbb
int
loopne
ficompl
je
and
adc
and
push
mov
ret
inc
xor
divl
xorl
cld
or
jb
or
add
or
out
mov
inc
adc
ret
push
out
outsl
jg
rorl
add
pop
adc
outsb
mov
or
adc
and
xor
and
arpl
inc
andb
xor
lret
out
das
pop
xor
ss
into
int3
sti
sbb
dec
fnsave
pusha
popa
out
insl
cmp
mov
arpl
into
sbb
xor
sbbb
ficompl
in
lret
or
pop
jge
aas
iret
mov
xor
dec
adc
mov
xor
jns
lahf
arpl
mov
cltd
and
push
mov
fsubr
sahf
jnp
adc
popa
fisttpll
fs
sbb
push
xorb
aaa
inc
dec
dec
cltd
fwait
dec
mov
xor
jae
das
push
enter
jbe
mov
xchg
mov
and
call
push
pop
ret
shrl
hlt
mov
mov
outsw
fistpll
mov
cmp
jmp
mov
xor
neg
fwait
sti
add
test
jne
or
hlt
jmp
adc
jge
imull
hlt
mov
in
nop
inc
add
mov
call
cld
call
out
mov
add
and
adc
jge
stc
pushl
rorb
or
add
inc
in
movl
stc
mov
mov
mov
or
xchg
mov
add
jmp
xor
xor
ds
shlb
imul
sub
adc
popa
ud1
sub
xchg
sbb
nop
push
or
ss
ss
out
dec
rcll
sub
cmp
sbb
pushf
sar
in
call
dec
in
jne
ret
sbb
mov
dec
outsl
popa
fs
imul
sbb
leave
call
jb
jne
insb
push
jb
je
arpl
jb
add
insb
xor
jbe
dec
gs
outsl
sub
sbbl
jge
leave
jg
orl
mov
cmp
stc
mov
inc
cmp
jg
mov
xchg
jl
sti
sbb
and
mov
jmp
jg
int
dec
add
xchg
mov
cmp
dec
xchg
sbb
icebp
cmp
inc
mov
mov
call
add
add
mov
mov
test
mov
mov
xor
je
les
scas
add
fwait
addr16
fstps
pushf
clc
lock
sub
fsubrl
sub
add
mov
cmp
dec
in
insl
mov
and
jne
stc
std
divb
add
dec
je
mov
sbb
lcall
lcall
mov
mov
ss
mov
adc
test
mov
out
add
sub
fmuls
clc
push
mov
jmp
xor
mov
xchg
icebp
sahf
adc
data16
out
in
lea
iret
mov
ss
lcall
int
jne
pop
clc
popf
and
fwait
pop
dec
fcomp
out
mov
or
inc
cli
or
push
push
push
jnp
divl
cmp
sbb
test
insl
push
push
or
sbb
fcomip
sbb
mov
ja
fsts
pop
in
pop
pusha
sbb
mov
or
jns
loopne
mov
mov
loope
inc
mov
and
sbb
jmp
jl
or
jnp
xor
mov
mov
or
inc
cmp
jg
mov
std
mov
mov
cmp
jnp
aam
cmp
hlt
cmpsl
jp
xchg
cmp
push
xor
inc
inc
pop
sbb
lock
fsubrs
adc
xchg
lcall
mov
and
jl
push
loope
sbb
adc
rcrl
outsl
sti
icebp
cmp
sbb
mov
add
sbb
add
je
dec
xchg
xor
dec
jl
push
fidivl
sub
ds
adc
sbb
or
inc
std
into
es
jns
lea
or
cld
or
ret
or
cmp
testb
inc
cmp
add
dec
cwtl
in
or
ret
jo
ss
daa
fdivr
lea
insb
and
js
jle
arpl
jmp
and
dec
push
xor
jnp
movsb
bound
push
in
cwtl
insb
mov
fmull
pop
mov
loopne
sbb
jno
mov
pop
leave
rdpmc
cmp
jae
adc
or
jne
or
cmp
hlt
data16
test
adc
jae
aam
in
pusha
das
pop
jl
mov
pop
jb
cmp
loopne
gs
in
inc
and
pop
imul
mov
pushf
add
arpl
in
inc
pop
push
pop
and
jno
es
in
xchg
insl
mov
aam
ds
or
popa
xchg
sbb
push
mov
ret
sbb
dec
mov
addb
sub
addr16
into
lcall
push
xchg
sbb
cld
xor
ret
js
cld
adc
add
pop
push
mov
sar
lea
pop
test
inc
mov
bound
mov
gs
ret
pushl
gs
xor
cs
insb
sti
inc
gs
arpl
insb
stc
jbe
fs
jae
and
outsb
imul
je
pop
movb
ja
sti
add
add
dec
push
mov
lret
xchg
outsb
hlt
nop
cld
xor
push
fldcw
ja
adc
mov
dec
add
or
or
pop
mov
mov
stos
mul
ss
jbe
jg
mov
pop
add
mov
mov
xchg
inc
inc
ja
call
xchg
jb
sbb
aas
clc
cmpb
sbb
and
pushf
test
jae
jns
je
sbb
inc
or
sbb
sbb
and
clc
imul
lcall
arpl
sahf
mov
xchg
stos
cmp
inc
pop
jb
mov
add
pop
dec
mov
or
sub
popa
mov
lds
into
dec
dec
sbb
loope
mov
add
pop
arpl
add
or
cmp
ds
mov
dec
clc
mov
mov
mov
jl
sbb
sub
push
adc
push
jmp
pushf
ret
xchg
mov
test
xor
ds
mov
clc
mov
outsl
rcr
xor
sbb
xor
cmp
xchg
pushf
xchg
or
or
push
ret
cmp
fldenv
fs
nop
add
inc
lds
sbb
mov
add
jno
les
cmp
add
mov
xor
mov
mov
adc
pop
lea
jae
add
out
ror
adc
adc
enter
dec
lock
fsubl
or
push
cmpsb
in
pop
xchg
mov
add
mov
mov
jo
push
push
cmp
lea
mov
negl
sub
add
sbb
ret
add
add
mov
aam
lock
testl
add
addw
ja
pop
sti
cli
or
test
xor
adc
test
push
scas
popa
out
or
mov
add
add
aas
inc
mov
xor
xor
cmp
and
dec
cld
xchg
nop
mov
add
jecxz
inc
and
push
xchg
xor
dec
aam
mov
inc
rolb
test
add
fdivrl
mov
add
mov
stos
push
enter
mov
das
mov
jb
add
rclb
sub
add
xchg
mov
or
mov
mov
add
pop
xchg
mov
or
pop
and
mov
add
pop
incb
mov
stc
jmp
sbb
clc
sub
or
add
cmp
je
lret
cld
fcmovnu
add
sbb
add
lods
add
add
jl
popa
fdivrp
aam
dec
and
enter
sub
mov
add
inc
jne
decl
add
add
das
pushf
add
xor
mov
sti
add
in
push
pop
sbb
add
or
add
repnz
jb
add
cmp
add
pop
je
add
repnz
or
xchg
add
xchg
fucomip
xchg
out
popa
pop
movsl
out
pop
add
add
divb
xlat
pop
or
add
pop
cmp
pop
test
ljmp
sub
add
xchg
jo
lea
jnp
das
mov
push
jge
repnz
inc
aam
orl
fstpt
add
mov
mov
sbb
or
repnz
insl
fisttpl
sub
js
adc
lock
hlt
test
orl
rorb
dec
push
add
mov
add
add
pop
push
and
pop
loope
popa
or
push
mov
test
mov
gs
ja
aas
jg
add
or
fidivl
ret
add
add
mov
decb
xor
cmp
add
fs
mov
roll
dec
roll
in
jp
jnp
xor
push
pop
testl
or
in
jbe
jl
add
add
out
add
pop
add
mov
pop
mov
lret
jge
dec
jle
outsb
sti
add
loope
add
add
sbb
mov
ret
adc
out
jmp
pop
rcrb
in
add
pop
fisubrs
repnz
mov
add
scas
and
icebp
mov
fsubrs
mov
cmp
push
xor
sub
loopne
add
mov
stos
xchg
dec
adc
jbe
test
cmp
xor
push
xchg
push
mov
xchg
mov
popa
jns
mov
mov
sahf
rol
mov
lret
inc
mov
out
sbb
jae
jl
scas
add
mov
outsb
add
mov
fdivrs
inc
rolb
xchg
cltd
divl
xor
inc
ds
dec
outsb
outsb
fistpl
xor
bound
fcompl
sbb
xchg
daa
jmp
jbe
push
push
fcomps
cld
add
loope
xor
filds
cwtl
outsb
or
js
adc
dec
dec
adc
stos
or
mov
jnp
fldt
xchg
add
movb
push
insb
mov
xchg
and
xor
movsl
lea
xchg
xchg
inc
out
popa
dec
movsl
lods
fdivrl
cmp
mov
int3
mov
cmpsl
dec
jne
iret
jge
pushf
mov
dec
lret
inc
fildl
and
jae
daa
xor
cmpsb
and
popa
int
lods
jnp
mov
push
jbe
add
jnp
cs
mov
fnsave
sbb
cwtl
push
sahf
mov
sub
dec
outsb
xchg
insl
shrl
into
sbb
xchg
or
iret
scas
hlt
jmp
add
daa
add
mov
outsl
into
push
mov
iret
leave
icebp
aad
mov
loopne
or
aaa
in
jbe
dec
aam
popf
mov
or
ret
xchg
es
add
fidivrl
pop
push
out
mov
or
fsubrl
add
add
lds
xor
shrb
out
cltd
lods
test
call
cmp
mov
aas
jecxz
ss
jp
adc
iret
pusha
into
cmp
fcmovbe
jl
outsl
stos
cmpsb
fiadds
add
mov
jl,pt
sbb
mov
hlt
fistpl
push
mov
mov
fidivrs
push
shll
mov
das
cmp
fcompl
not
int3
jge
insb
aas
movsb
push
into
ret
shrl
loop
stos
push
dec
mov
loope
mov
adc
jnp
jmp
pop
int
cmp
into
rcrl
xlat
or
cltd
gs
fimull
or
pop
or
push
sbb
add
sbb
mov
jmp
pop
and
mov
jno
or
repz
popa
sbb
jae
xor
call
jle
mov
push
into
add
jle
cwtl
ljmp
mov
data16
jns
ja
cmc
scas
pop
jae
mov
push
or
in
or
add
or
psllw
and
scas
shll
in
cmp
mov
shl
push
or
aam
xchg
fwait
sbb
mov
adc
adc
hlt
ja
xorl
outsl
xor
xor
fnsave
les
in
lcall
lea
push
sub
xchg
shrb
mov
stc
rcrl
mov
data16
insl
loopne
pop
das
cmp
adc
lods
xchg
mov
jmp
jae
in
sub
pop
enter
sbb
mov
jle
push
test
inc
movsb
cmp
mov
outsb
fstl
sahf
or
rcrl
imul
stos
test
mov
xor
jg
push
cmc
xor
in
sar
mov
mov
cld
arpl
xchg
jl
es
mov
jnp
xor
std
cmp
xlat
fldl
jo
jae
cwtl
pop
inc
je
mov
push
adc
fdivrl
std
mov
hlt
fwait
ja
mov
mov
cltd
fs
shlb
push
jle
arpl
lret
push
std
jo
shll
roll
pop
rcrl
pop
add
dec
fwait
mov
into
cmp
dec
push
xor
push
inc
push
add
cmp
loop
inc
mov
and
fildll
das
dec
sbb
add
pop
push
outsb
mov
jae
loope
imul
sbb
cmp
or
roll
aad
in
cwtl
lret
mov
aaa
ret
loop
inc
push
mov
ja
or
scas
cmpsl
je
in
mov
mov
sub
mov
shl
or
sub
xlat
inc
inc
push
rcr
sbb
jno
mov
ja
xchg
mov
adc
sbbl
lock
push
xchg
lret
decl
dec
mov
add
bound
outsl
xlat
imul
aam
and
not
dec
in
popl
call
hlt
rol
ret
imul
fwait
sbb
insl
rorb
dec
call
sub
cmpsl
inc
fcmovnb
inc
adc
dec
fwait
xchg
jle
jle
push
lea
sub
call
sbb
into
mov
clc
test
jo
lods
push
rcll
cmpsl
xchg
cmc
and
fbld
jg
xor
into
cltd
stos
mov
daa
sbb
test
pop
imul
shlb
scas
mov
sbb
aas
outsl
cltd
adc
out
ja
push
and
iret
sbb
pusha
popa
dec
xor
and
push
jp
inc
adc
scas
jo
icebp
clc
daa
cmpsl
loop
dec
scas
orb
sarl
dec
mov
enter
add
adc
loop
dec
bound
sub
sbb
jl
or
mov
shll
mov
sub
pop
ss
add
insb
hlt
aas
mov
and
arpl
jle
jo
push
lods
add
repnz
icebp
pop
out
test
leave
int3
repnz
or
push
mov
and
mov
stos
ss
xchg
mov
mov
push
shll
lds
xlat
les
aam
adc
or
jecxz
ljmp
sahf
fisttpl
imul
adc
and
mov
int3
in
daa
stos
dec
cmpb
mov
mov
in
std
lock
nop
nop
sbb
or
inc
cmp
sbbl
data16
addr16
call
jno
test
loope
cmp
inc
stos
cli
scas
cwtl
xlat
xchg
mov
sbb
push
pop
nop
adc
hlt
cmp
add
push
inc
test
aad
outsb
or
adcl
arpl
aad
cmp
push
xchg
outsb
ret
fstps
push
out
pop
add
jle
popa
in
lea
jp
add
pusha
ja
jl,pn
out
int
push
jcxz
or
pop
xorb
push
push
dec
repnz
pop
ja
sbb
bswap
orl
popf
cmp
loop
rcrb
dec
mov
or
outsb
lods
push
add
xchg
scas
iret
xchg
fcom
jmp
jns
inc
test
inc
stc
push
mov
cmp
ds
or
push
add
pop
jns
pushf
add
mov
divl
fistps
xor
rcrb
and
push
push
jbe
cmp
nop
jnp
in
cmp
rcr
cmpsl
in
pop
js
mov
mov
adc
ret
imul
fninit
jbe
add
popa
jnp
jbe
cmp
or
into
mov
lcall
mov
jmp
xchg
lock
mov
jnp
push
loop
xchg
or
in
shr
pop
fmul
cmc
xchg
js
jp
rol
or
mov
aad
push
out
mov
xlat
out
mov
int
lds
out
sahf
mov
dec
and
adc
and
push
mov
aaa
dec
inc
push
imul
dec
ret
and
sbb
dec
mov
xor
jmp
lock
jno
loopne
xorb
dec
cmpsl
pop
sbb
cltd
cwtl
out
inc
push
sub
or
dec
mov
fstpl
hlt
adc
fwait
lcall
enter
mov
xlat
lock
mov
and
sub
jbe
divl
jecxz
xlat
adc
daa
sbb
pop
lea
adc
inc
es
jle
pop
int
enter
xor
jl
cmpsb
pop
mov
cmpsb
je
outsb
or
pop
sti
arpl
lods
rcl
retw
not
outsb
dec
movsl
inc
mov
push
outsb
cli
mov
cmp
and
mov
mov
dec
fwait
xchg
jge
aaa
pop
notb
jl
sub
push
mov
push
addl
inc
sbb
jmp
repnz
mov
in
pop
ss
scas
sbb
adc
push
cwtl
inc
call
cli
pop
cld
xor
jne
incb
mov
dec
mov
sbb
in
fxch
js
mov
les
lahf
sbb
hlt
les
shlb
inc
loope
cmc
pop
mov
mov
in
ret
subb
sbb
fcmovu
dec
xor
orl
add
push
pop
insb
mov
xor
lcall
add
pop
add
dec
bound
jmp
minps
out
jmp
xchg
mov
jno
dec
cmp
sbb
pop
mov
scas
xchg
call
jp
xlat
push
push
in
adc
repnz
call
out
sbb
outsl
lock
shl
insl
mov
sbb
out
inc
pop
lret
push
mov
cmp
lock
sbb
loopne
loop
cmp
sbb
adc
mov
xchg
popf
and
aam
jae
mov
xchg
xchg
mov
add
push
lock
add
jmp
jns
xlat
push
xchg
dec
cmp
ret
jnp
cld
inc
js
pop
out
fildl
xor
lods
jae
pop
xlat
mov
mov
dec
mov
sub
mov
insl
jmp
mov
and
js
lret
sub
mov
fcmovu
mov
lock
orb
and
xchg
imul
sbb
jmp
sbbb
push
ret
notl
mov
and
inc
fldcw
mov
adc
das
call
clc
xor
pop
and
jle
lods
jne
and
inc
sti
push
mov
cmp
in
pop
jne
stos
push
daa
loopne
push
add
test
pop
mov
sub
andl
sub
dec
imul
inc
xor
push
loopne
ja
insl
dec
fucomp
stos
pop
loop
fwait
push
and
push
adc
cld
mov
sbb
lahf
sbb
cmc
inc
movl
and
or
ret
mov
xchg
bound
clc
insl
std
mov
movsb
je
cmc
add
fiaddl
sarl
mov
rol
arpl
mov
rcr
pop
pusha
ss
popa
std
xchg
imul
pop
pop
dec
or
fmull
jp
out
pop
je
dec
js
dec
mov
push
dec
pop
pop
jae
jmp
push
outsb
push
imul
fwait
sub
lahf
lea
int3
xor
mov
fiadds
movsl
pop
pop
mov
and
mov
jg
pop
loope
insb
jbe
daa
sub
sub
into
mov
mov
ss
lock
movsl
cmp
sbb
sub
arpl
xchg
jp
jmp
jp
add
ds
mov
inc
inc
dec
int3
mov
xlat
mov
mov
mov
lcall
insb
mov
sarl
or
xor
jl
into
inc
pop
mov
mov
adc
mov
ret
dec
in
sbb
cltd
lods
xchg
lcall
mov
je
out
cmp
xlat
xchg
mov
xlat
jge
insb
jb
leave
data16
add
mov
clc
push
ret
jecxz
and
cmpsl
out
mov
movsl
stos
xchg
std
mov
jne
out
add
and
push
mov
fucomi
add
iret
pop
in
test
sbb
mov
loop
loopne
pop
xchg
cmp
int
adc
cmp
mov
pcmpeqd
lahf
jbe
push
insb
push
fcomp
movsl
xchg
insb
clc
mov
aas
dec
push
mov
mov
ret
or
jo
jge
inc
test
dec
mov
lret
movsb
fs
xlat
repz
mov
cmpb
jbe
aad
mov
js
cmp
repnz
pop
rol
faddp
ret
and
dec
mov
adc
mov
cmp
cmp
and
fistl
dec
push
roll
or
dec
sbb
nop
lock
loop
push
adc
push
jle
ds
mov
fildll
es
push
loop
xchg
jnp
xchg
sub
fcom
pop
movl
out
lea
add
push
loope
pop
repnz
out
out
xor
mov
out
jb
mov
leave
mov
aam
mov
xor
js
xchg
push
addr16
stos
subb
clc
or
inc
dec
push
movsb
pop
rorb
lods
sub
inc
sbb
dec
mov
jb
rcrb
fwait
add
dec
pop
imul
or
scas
aaa
ret
inc
jg
pop
out
jnp
push
inc
lock
ret
aad
arpl
push
in
jge
sar
fsubrl
fmull
ficomps
jo
popa
divl
sub
pop
insb
sahf
sub
mov
not
icebp
movsb
cmp
sbb
lea
xchg
adc
or
cmp
fwait
jecxz
cmp
addr16
jmp
mov
pop
cmpsl
sbb
xlat
dec
fstpt
mov
xlat
add
filds
andb
jno
xchg
cltd
mov
test
sub
mov
cmp
in
in
call
cmp
ja
sub
aad
aas
adc
lods
fsubrs
dec
mov
pop
pop
in
mov
js
cmovno
movl
or
fisttpl
pop
cli
sub
les
ret
test
xor
mov
push
dec
xor
test
out
sti
loope
cmp
push
test
int
push
mov
mov
stos
mov
sbb
int3
cltd
mov
adc
mov
aas
ror
icebp
jge
leave
sub
shll
mov
jne
je
in
adc
pop
insl
ffree
in
cmp
pop
pop
daa
iret
fiadds
inc
jecxz
mov
fwait
jo
add
loopne
dec
inc
mov
add
jp
mov
into
aad
and
pusha
sahf
out
inc
gs
ss
sarb
test
jne
daa
jg
add
test
mov
jle
aad
cli
xlat
inc
imul
jge
sub
sub
in
fcmovbe
pop
pand
pop
ret
lret
and
lahf
ja
lock
xor
add
in
inc
push
inc
icebp
add
shlb
push
jae
fidivrs
aas
cmp
push
and
dec
insb
andb
sahf
or
shlb
adc
xorb
cmpsl
push
xlat
jge
push
sahf
mov
jbe
or
mov
scas
pushf
adc
jle
adc
or
push
into
aam
scas
fcmove
mov
sub
roll
adc
insb
pand
test
dec
sub
push
cmp
cmp
mov
jno
add
frstor
jne
adc
mov
fnsave
add
loope
js
cmp
lahf
jbe
mov
mov
push
or
sarb
push
sub
fcmovbe
repnz
jo
js
jp
testl
fsubs
into
loopne
ss
mov
aas
imul
stc
sub
test
mov
movsb
fdiv
rolb
into
fistpl
sbb
sub
mov
adc
sarl
mov
ret
std
loop
in
cmpsl
into
rcrb
sbb
out
shr
insb
test
jl
push
mov
cmp
push
jns
jnp
xchg
pop
sbb
sti
adc
iret
dec
and
das
mov
xchg
shr
test
push
in
scas
lret
repz
aas
shl
icebp
mov
sbb
stc
or
push
out
mov
bound
jge
cmp
rol
jne
cmp
es
repz
insb
out
xlat
in
or
sti
xchg
movsb
adc
ret
in
fwait
iret
bound
jge
mov
inc
lret
js
jmp
loope
loopne
sbb
jae
filds
sbb
inc
jmp
loope
jne
lea
xchg
add
jg
in
push
popf
xor
jo
dec
aas
hlt
call
pop
sbb
lock
jmp
push
jns
addr16
ljmp
jae
or
lea
sub
sub
cmp
push
loope
xlat
mov
pop
int
dec
pushf
fistps
sbb
sbb
mov
bound
cmp
and
cmp
add
inc
xchg
jl
sarb
push
aam
js
sti
push
adc
lret
push
inc
js
shr
mov
mov
mov
mov
jg
sbb
sub
mov
popa
andl
scas
jmp
dec
and
out
jae
fcmovnb
mov
movsl
sub
inc
xchg
jmp
xchg
leave
and
loope
pop
call
std
push
cs
aas
lock
repnz
inc
jmp
xlat
mov
sbb
hlt
add
loopne
bound
outsl
sbb
pop
outsb
cmp
ret
stc
repnz
arpl
aad
cmovnp
mov
push
outsb
leave
or
dec
leave
xor
shrl
jo
mov
sbb
decb
loopne
scas
into
lea
and
idiv
sbb
pop
fistpl
ja
mov
sbb
rcrl
sub
sbb
push
arpl
sbb
into
and
scas
cmp
mov
mov
mov
mov
pop
js
push
and
xor
mov
jbe
cmp
hlt
rol
jns
or
call
cmpl
jle
pop
fimuls
jno
xor
test
xchg
shll
cmp
jge
add
sub
movl
pop
cmpsl
lahf
pop
cmpsb
mov
dec
add
add
out
mov
out
sarl
cmp
enter
cmp
popl
pop
mov
cmpsl
out
jmp
mov
imul
imul
cmp
add
xchg
pop
fistps
dec
adc
rorb
in
cli
ljmp
mov
xor
or
cmp
clc
push
inc
push
adc
push
mov
lock
pop
pusha
addr16
jbe
and
fnsave
push
pusha
xchg
or
mov
xchg
push
ss
jp
xlat
pop
and
jg
inc
adc
xor
rclb
mov
cs
push
push
dec
ffree
ja
popf
je
push
loop
cmpb
add
push
add
mov
rclb
imul
hlt
movsl
frstor
adc
ds
outsb
mov
jno
sub
xor
rolb
sub
and
inc
ja
in
cld
adc
fstp
jle
sub
xchg
add
and
or
jne
cld
repnz
movsb
mov
pushf
mov
andb
cmpsl
pop
sbb
jno
push
neg
cmpsb
movsl
scas
xchg
sbb
mov
call
leave
hlt
out
xchg
and
mov
nop
dec
adc
fistpl
test
cmp
pop
cmp
add
je,pn
addl
mov
add
sbb
jecxz
pop
xchg
dec
iret
cmpsl
aas
pop
push
jle
push
scas
test
pop
movsl
popf
inc
mov
jnp
addb
mov
sbb
fwait
mov
inc
adc
mov
or
ja
inc
push
pop
fldt
aaa
push
popaw
cwtl
push
outsb
ljmp
mov
dec
jge
xchg
clc
pop
call
inc
std
dec
and
add
xchg
mov
lods
insl
lods
pop
int
cld
fwait
je
xchg
and
jno
add
jp
outsl
or
movsl
fsubrs
xor
je
aaa
and
push
xor
xlat
scas
aad
inc
ret
add
jmp
movzwl
sub
fbstp
les
pop
es
sub
mov
ret
sub
rcr
pop
cld
lock
ret
sbb
testl
jecxz
je
adcl
pop
cs
pop
jp
cmp
rcr
das
icebp
cwtl
shl
mov
push
cmc
xchg
mov
or
jns
sbb
jecxz
neg
test
shl
stos
and
scas
arpl
dec
jmp
jecxz
jge
imul
or
and
in
ret
std
loopne
movl
jnp
xchg
sbb
je
mov
into
adc
aas
or
cmc
cmc
mov
test
ret
daa
and
in
xor
aam
jmp
jb
outsl
pushf
orl
shrb
jno
inc
ss
sbb
gs
pop
stos
insl
push
dec
fimull
xchg
loop
ja
jae
xor
insb
mov
lcall
xor
test
ja
inc
mov
jle
lahf
push
loopne
arpl
loope
and
xchg
adc
sbb
adc
cmc
lea
in
and
mov
jne
insb
push
jne
jecxz
jecxz
cwtl
cmp
pop
das
jnp
mov
sbb
jl
sub
mov
pusha
ja
dec
test
shll
lods
jecxz
aas
lret
xchg
fyl2x
pop
pushl
add
rcrl
mov
mov
cmp
call
jno
jb
jbe
fdivl
popf
adc
push
sub
mov
inc
push
lahf
mov
sub
repnz
push
pusha
ret
jo
mov
cld
xchg
ds
jo
mov
push
lret
push
mov
das
repnz
lahf
aaa
add
das
dec
fstps
mov
or
and
mov
push
sub
fisttpl
fisttps
xor
stos
sbb
loop,pn
mov
sub
jbe
push
ror
xor
lods
xor
adc
add
loop
pop
mov
sahf
test
negl
fistpl
push
pop
jg
cmp
sbb
push
outsl
xorb
mov
mov
push
jns
mov
mov
aam
addr16
std
mov
leave
mov
ja
imul
arpl
nop
cli
push
repz
aam
es
xlat
mov
insb
imul
stos
and
ljmp
or
jbe
xor
std
cmp
repz
cli
js
jnp
cmc
outsl
mov
xlat
xchg
xorl
movsb
inc
test
adc
adc
cmpsl
addr16
bound
xchg
or
fistpl
sahf
leave
adc
outsb
mov
shl
mov
jl
imul
imul
jne
scas
push
mov
jbe
shr
and
and
mov
lcall
mov
ficomps
xlat
xor
jb
jle
cmc
sub
mov
pop
hlt
cmp
xor
pop
add
pop
pop
jle
hlt
lds
or
aas
fiaddl
ja
lods
push
es
ds
and
push
mov
push
pop
mov
outsb
test
jg
movsb
or
and
mov
arpl
xchg
test
dec
out
sbb
push
adc
mov
ret
ljmp
stos
sub
loope
sti
lock
xchg
adc
dec
or
and
es
aad
mov
leave
jo
imul
or
arpl
push
jl
fidivl
insl
sti
ss
sub
fdivrp
inc
shrl
daa
cmp
and
pop
test
fiadds
fldt
mull
subl
fadd
or
dec
ja
daa
mov
xor
cwtl
popa
inc
data16
or
mov
fnsave
rcrb
add
daa
loopne
jecxz
loop
sbb
mov
inc
div
fstp
insl
icebp
stos
jne
push
imul
mov
xchg
sbb
lret
mov
nop
or
out
ljmp
mov
js
imul
mov
mov
fmuls
imul
lock
xchg
xor
cmp
jge
movsl
xchg
sarl
stc
xor
std
mov
sub
out
add
cmpsb
mov
xor
roll
in
mov
push
or
mov
jbe
lcall
xor
add
rep
leave
std
movsb
lods
inc
xlat
jmp
shr
push
sti
add
neg
mov
lock
sub
sub
lock
xor
ret
push
xor
jle
dec
mov
fbstp
cmp
iret
jge
jp
inc
faddl
xchg
fdivs
loopne
cs
lock
cmp
loope
test
int
jl
fwait
ss
cmp
cmp
test
adc
mov
xor
sahf
in
push
push
mov
les
sbb
mov
and
hlt
mov
xor
aam
outsl
pop
or
push
dec
insb
mov
dec
bound
cltd
out
jmp
mov
orl
lock
lret
test
mov
sbb
dec
lods
stos
sub
or
leave
xor
jp
dec
sbb
sbb
jno
scas
mov
bndldx
or
adc
addl
and
rcr
add
cmpsl
insb
sub
fnsave
fnsave
mov
decl
lock
lock
pop
xor
pop
jae,pt
pop
inc
inc
cmpsb
loope
test
dec
xchg
xchg
add
sub
cmpb
in
jmp
sbb
cmc
in
cltd
movsl
add
popf
andl
ljmp
push
inc
mov
outsl
aam
rcl
stos
imul
or
inc
jae
jmp
loope
mov
xchg
fimull
pop
inc
fisttps
idiv
aad
into
sti
ljmp
inc
lret
testl
stc
scas
jbe
data16
dec
lret
shl
adc
in
inc
ficoml
xor
push
fmull
xchg
cli
ss
push
pop
mov
jle
jo
lock
sahf
orb
outsl
loop
mov
mov
fsub
es
sbb
popf
mov
arpl
out
rcl
call
pop
jbe
mov
pop
sbb
or
pop
cmp
mov
jno
clc
clc
enter
or
add
outsb
cld
add
mov
jg
mov
cmp
adc
push
insl
jns
inc
cli
mov
fdivrl
sub
lahf
jno
orl
scas
aas
ss
int
std
jb
cmp
les
out
stos
ja
adc
ds
ljmp
cmpsb
es
jmp
or
or
sbb
stc
arpl
in
xchg
in
mov
xor
ja
mov
movl
ja
pop
pop
sub
test
or
mov
test
push
bound
pop
je
mov
lds
addl
adc
loopne
btc
add
lods
jnp
aas
js
jbe
jp
dec
popf
negl
pusha
ret
stos
xor
aas
hlt
inc
ds
pop
or
je
jmp
mov
jb
pop
movsb
pop
mov
scas
insl
lret
inc
ja,pt
out
mov
je
fldenv
jmp
aas
mov
jl
push
fisttps
js
cmpl
in
cmp
dec
and
jne
es
mov
jl
cmpsb
cmp
fadds
pop
mov
hlt
imulb
push
add
xor
xchg
lock
fbld
hlt
paddd
pop
insl
fcmove
xchg
sahf
and
pop
mov
jne
sub
cmpsl
mov
sbbl
xlat
ds
add
daa
inc
imul
pop
lret
movsl
pop
and
or
imul
mov
push
int
jne
cld
pop
xchg
push
lcall
jo
out
cmp
lds
mov
fiaddl
adcb
adc
lcall
mov
cmpsl
aas
pop
mov
sub
xor
xchg
sbbb
faddl
les
insl
ja
push
inc
or
push
pop
mov
sahf
dec
jg
imul
xchg
sbb
cwtl
jg
es
pop
mov
lret
cli
push
xor
push
and
lods
lahf
movsb
sbb
cmpsl
lds
mov
je
out
inc
pop
xchg
xchg
inc
mov
jne
insb
push
sbb
mov
stos
xchg
sbb
cmp
mov
fnstcw
jns
popf
mov
or
mov
lahf
jbe
pusha
pop
mov
loop
shl
bswap
or
cmovle
xchg
in
mov
mov
icebp
cmc
lea
lahf
lahf
sub
loope
fildll
nop
scas
xor
or
inc
shl
pop
push
outsb
add
fstps
xlat
outsb
and
mov
addr16
aaa
loope
arpl
inc
testb
or
sbbb
pop
jmp
sub
xchg
scas
sbb
inc
mov
addb
jl
arpl
test
add
test
loope
sub
push
xchg
movsl
mov
sbb
sbb
fwait
xor
pcmpgtd
scas
outsb
fmuls
pop
mov
push
inc
add
cmp
out
sar
inc
xchg
shrl
cmpsl
cmp
mov
push
loop
mov
cs
sarl
push
leave
mov
pop
jge
call
mov
movsb
fdivp
xchg
pxor
pop
or
and
bound
cli
or
mov
lods
enter
mov
mov
aaa
or
inc
mov
push
push
xchg
lods
sahf
in
cwtl
mov
fmuls
mov
and
xchg
mov
stos
inc
xchg
xchg
popa
fwait
repz
out
sti
lock
push
xor
pop
arpl
jp
je
dec
mov
popf
or
add
sbb
sbb
testl
jb
lods
sti
jns
call
repz
shll
pop
or
xchg
xor
pop
fstpl
les
inc
data16
fwait
mov
js,pn
inc
xchg
cmp
mov
nopl
ds
dec
fidivs
out
add
sub
fdivrs
push
addr16
daa
push
xor
push
cli
cmp
sbb
cmp
adc
int
outsb
sbb
push
dec
popf
sub
daa
xchg
fdivrl
pop
insl
xor
ljmp
cmc
out
cmp
icebp
xor
cld
popa
pop
pop
sub
push
psllw
xchg
je
and
leave
in
mov
rcrb
mov
hlt
pop
imulb
dec
xlat
ss
test
mov
mov
cmc
cmp
adc
and
enter
push
sub
mov
xchg
jle
lea
cmpsl
push
in
inc
cld
out
ds
lock
ljmp
mov
outsb
dec
mov
pop
dec
jne
xlat
push
inc
popa
insl
in
les
push
scas
daa
mov
mov
xor
repnz
stos
stos
mov
sbbb
mov
cmpsb
enter
cmpsb
daa
fdivl
int3
inc
out
jae
out
insb
dec
and
ds
lods
dec
insb
out
sub
jl
js
ss
es
subb
ret
jmp
mov
pop
je
or
xor
sbb
int3
or
adc
mulb
mov
movsl
sbb
push
mov
fcomps
clc
shlb
adc
sarl
into
pop
bound
outsl
outsb
dec
lods
cmp
cmp
popl
out
test
insb
jns
movsb
icebp
aaa
inc
fcoml
pop
test
rcl
inc
aad
xor
xchg
add
sbb
aad
xchg
mov
add
mov
jl
xor
movsl
mov
into
mov
arpl
aad
cmp
cmpsb
sar
pop
or
pop
data16
pop
mov
xor
mov
xchg
pop
loope
fstps
xor
mov
sub
outsb
insl
addr16
pop
cmp
sbb
jno
jne
addr16
dec
add
jge
in
adc
fidivs
and
mov
lods
ja
dec
cld
daa
or
add
push
sbb
xchg
cld
ret
jecxz
into
push
mov
or
xchg
movb
loopne
jp
jecxz
jae
xlat
jne
out
das
jno
cli
mov
jns
jl
lds
or
lods
jno
insl
js
pop
xchg
push
mov
fistpl
cmp
and
jbe
clc
outsl
je
in
scas
jle
pusha
cli
insb
iret
in
xor
sub
jmp
shrl
mov
je
lcall
out
mov
cmp
mov
outsb
pop
push
iret
push
out
push
or
pushf
pop
cmp
jmp
lock
insb
es
imul
subb
mov
gs
adc
fcmovbe
dec
or
inc
nop
andb
cmp
xor
and
aam
and
aam
cli
jle
inc
xor
add
fwait
jae
hlt
iret
add
mov
popf
add
and
cmp
inc
add
daa
sbb
sbb
or
cmp
call
aaa
lahf
repz
dec
dec
scas
loop
arpl
das
faddl
in
cmp
or
testl
push
cltd
faddl
sti
or
pop
inc
subl
sub
fwait
pop
ds
fdivr
dec
bound
insl
cli
cmpsb
add
pushf
loope
loop
mov
in
dec
fldt
stos
lret
shlb
push
mov
icebp
add
push
and
xchg
scas
daa
xchg
mov
jle
movsb
inc
mov
mov
pop
shl
ss
pop
or
cmp
ret
xlat
adc
loopne
insl
adc
or
sbb
inc
into
sbb
insl
aaa
lret
xor
sub
pop
add
or
les
shll
pop
mov
rcll
fdiv
cmp
lahf
inc
jle
dec
jne
ds
mov
cltd
push
add
adc
or
xorl
jp
sbb
adc
adc
inc
add
ja
mov
and
cltd
adc
pop
cli
fimuls
fmul
xor
sar
cld
cwtl
cltd
ret
sub
icebp
mov
lret
cli
adc
shl
aaa
mov
popf
add
int3
pop
jae
add
push
pushf
pop
arpl
fldcw
mov
push
adc
push
shrl
aam
cmp
mov
mov
push
adc
push
jl
je
xchg
mov
loope
pop
sbb
cmp
rclb
jl
pop
test
ds
outsb
aaa
mov
sbb
xchg
or
mov
mov
loope
imul
fucomi
pop
jg
xchg
push
adc
ljmp
fisttpll
xchg
add
cmpsl
cmpsl
adc
js
or
inc
dec
mov
xchg
loope
push
ret
push
mov
lock
adc
iret
cmp
mov
out
mov
inc
ret
mov
pop
xchg
push
cmc
rcrb
psllq
sub
lret
push
sbb
push
xor
sub
shlb
and
scas
add
mov
sbb
mov
cltd
jl
sub
mov
jmp
sbb
mov
mov
stos
mov
mov
dec
aaa
enter
lds
add
cli
mov
fcomp
popl
pop
iret
push
cmc
lahf
in
mov
push
push
imul
sub
fwait
lcall
in
fisttps
mov
cmp
cli
mov
divl
outsl
stos
in
mov
sbb
icebp
mov
adc
js
xor
into
inc
or
in
mov
addl
xlat
or
cmp
andl
loopne
sub
xor
test
loopne
sub
pop
idivl
dec
jle
daa
jp
and
xlat
filds
push
mov
test
fs
jg
mov
lock
push
ret
cmpsb
js
orl
push
es
inc
fstl
xor
test
mov
inc
mov
mov
fldt
xchg
jle
jno
mov
repz
jne
add
cvttps2pi
insb
dec
movsb
mov
mov
push
test
ds
mov
mov
fdivr
cmp
or
call
and
rcl
add
popl
js
adc
or
aaa
jae
or
dec
fldt
outsl
sahf
leave
mov
or
sbb
pop
cmp
xor
jle
idiv
fildl
dec
adc
mov
imul
mov
and
stos
fcoml
cli
cmc
int
mov
fwait
pop
mov
mov
jg
sbb
and
packsswb
jmp
loop
pop
xor
adc
jg
cmp
add
and
mov
test
or
shl
cmp
lahf
jecxz
mov
loope
xchg
mov
sbb
ret
sti
sub
mov
in
jl
fstps
pushf
pop
xchg
insl
scas
sub
or
rclb
mov
ret
inc
pop
andb
mov
lret
fisttpl
pop
stos
insl
cmp
sbb
imull
adc
imul
mov
or
mov
adc
lods
fstp
mov
pop
sbb
mov
lods
jnp
imul
lds
repnz
inc
ret
mov
and
push
push
jle
test
fs
rcrl
xchg
aaa
call
adcl
xor
cmp
ljmp
mov
push
add
mov
adc
popa
xchg
xor
cmp
lds
daa
stos
inc
sbb
test
xor
mov
dec
subb
cmp
cmpsb
negb
stos
mov
clc
outsl
pop
push
insl
insl
push
out
ds
mov
lods
cmp
mov
fidivs
dec
pop
dec
jns
mov
mov
pop
ljmp
mov
push
pop
imul
rorb
pop
cmp
scas
fcomi
ss
rcrb
mov
nop
out
sti
out
xlat
popf
mov
mov
lahf
jecxz
jo
call
mov
push
xchg
push
dec
divb
push
pop
add
in
jbe
push
push
mov
sub
pop
or
daa
ror
push
mov
inc
fisttpl
jo
icebp
and
nop
scas
mov
addl
mov
shlb
jg
stc
push
lahf
pop
pop
dec
jno
out
adc
add
mov
div
test
pop
inc
fwait
and
lods
les
popa
cli
cmp
jmp
test
pop
insb
and
testl
in
dec
cli
add
mov
jmp
in
iret
inc
scas
add
aam
mov
jbe
mov
sub
or
aaa
aam
std
push
mov
cmpsb
sahf
aas
inc
fbstp
or
add
pcmpeqw
mov
fistpll
inc
int
xchg
lret
jnp
loope
lods
mov
ret
cli
mov
fildl
aaa
sarb
jle
rcr
es
or
out
iret
shrb
cmp
into
aam
nop
mov
push
ret
insl
cmp
icebp
mov
pop
les
jl
icebp
repnz
pop
ds
xlat
in
fisubs
clc
loop
xor
jmp
loopne
push
cmp
dec
inc
jg
sbb
sbb
divb
fldt
lds
xor
loopne
jb
inc
sbb
cmp
jbe
pop
mov
pop
sbb
data16
pop
pop
add
mov
xchg
pop
pop
je
nop
xchg
js
lods
nop
mov
inc
cs
fcompl
and
sbb
mov
cmp
std
loope
xchg
push
addb
inc
loop
shl
test
mov
imul
sahf
mov
dec
sbb
rcr
cmp
pop
mov
xchg
mov
test
xor
ret
pop
popf
xor
mov
pop
mov
movl
inc
std
int3
xchg
arpl
popa
dec
into
cmc
sub
and
sub
or
jmp
or
pop
out
inc
mov
cvtps2pi
insb
movsl
xor
cmc
adc
pop
fidivs
shl
imul
mov
jecxz
pop
and
gs
xor
mov
push
mov
inc
adc
pop
or
sti
ljmp
outsl
push
cli
pusha
or
aam
jno
les
dec
es
add
mov
sbb
fcmovnbe
fcmovnb
jp
pop
or
outsl
out
fdivrl
int3
scas
sub
pop
push
aaa
test
arpl
cmp
cltd
jge
jne
sbb
sub
lret
mov
and
push
sub
cmpsl
call
push
push
jl
mov
in
or
repz
sti
jecxz
push
sbb
shll
fnstsw
sub
aad
add
pop
je
lods
mov
push
jne
dec
push
outsb
mov
jo
loopne
xor
sahf
fdivs
ja
add
ja
pop
mov
push
add
pop
add
mov
out
jmp
je
or
insb
repz
dec
inc
sbb
pop
push
mov
and
pop
sub
push
jno
arpl
add
mov
mov
sarl
mov
xor
jno
push
add
sbb
cmp
mov
xlat
pop
sub
or
jbe
lcall
iret
sub
push
out
ss
insb
xor
stc
adc
sbb
push
test
ret
outsb
lea
out
dec
sub
xor
leave
lret
loopne
add
pop
sub
jbe
icebp
mov
stc
mov
sbb
out
aad
dec
mov
or
push
sar
and
adc
ljmp
cmp
pop
pop
aam
test
jnp
jns
pmaxsw
lret
pop
int
in
lcall
or
push
jne
cmp
inc
ret
push
mov
rorl
lcall
mov
fst
cmp
or
cmp
push
pop
repnz
push
adc
ljmp
test
push
add
in
xchg
pop
test
nopl
pop
push
lock
mov
add
mov
insb
out
ret
push
adc
jae
sbb
xor
scas
mov
cld
aad
shl
out
pop
jge
sti
test
inc
mov
out
or
mov
jmp
dec
iret
add
fldt
lret
xor
inc
pop
add
dec
sub
out
pop
loope
cld
movsb
jo
fcompl
pop
divb
lock
pusha
sub
xchg
dec
ds
adc
pusha
lock
ficoml
push
mov
imul
notb
cmpsb
jle
test
dec
cmp
mov
cli
sbb
out
std
cltd
xor
jmp
int3
loop
lret
movsl
push
adc
mov
hlt
stos
sbb
cmp
dec
pop
mov
sbbb
stos
enter
jbe
fisttpl
clc
test
aam
movsl
data16
std
sub
lods
cmpsl
jnp
lahf
andb
int
sbb
dec
jl
adc
inc
xor
mov
fiaddl
testl
jmp
lret
mov
push
mov
insl
inc
negl
mov
in
lcall
xchg
rcll
stos
inc
imul
dec
cmc
jmp
imul
fcomps
xor
fs
jg
sub
dec
and
stos
ffree
xchg
mov
xor
shrb
adc
adc
sub
mov
or
out
outsl
mov
call
stos
inc
test
mov
lea
cmpb
pop
cmpsb
push
mov
jg
fistpl
cs
cltd
stos
out
cmp
pop
leave
xor
filds
sbb
mov
insl
pop
shll
movsl
outsb
fsubl
ja
jne
sbb
sub
or
xchg
push
or
popa
cmpsl
imul
push
dec
add
mov
push
pop
pop
mov
or
jo
mov
xlat
sbb
ret
xchg
mov
fistpl
pop
cmpsb
out
push
fldl
cmp
shl
jl
sub
sbb
flds
inc
cli
and
in
mov
inc
std
pop
insb
out
cmp
add
mov
cmp
jge
xor
inc
cmpsl
out
pop
ja
insl
into
cltd
cmpsl
xchg
pusha
hlt
es
test
sar
mov
imul
leave
or
popa
loopne
jmp
test
and
in
cli
hlt
das
dec
mov
int
xor
jb
scas
sub
sub
sbb
sub
jae
sahf
jbe
xor
xchg
movl
insb
push
fistpll
jmp
xchg
insb
jnp
sbb
sub
jge
dec
lock
jo
ljmp
loope
dec
pop
stos
sub
stos
dec
jne
rcrl
shl
test
cmp
add
sbb
mov
sbb
mov
mov
fwait
pop
mov
fwait
push
mov
loop
lock
daa
dec
mov
mov
int
cmpsl
cli
les
xchg
jg
aas
adc
mov
std
xlat
mov
pop
clc
hlt
movsl
incb
ficomps
stc
xlat
mov
pmuludq
and
and
pusha
dec
pushf
mov
fcmovnb
inc
stc
in
bound
sbb
iret
scas
add
insb
adc
cmp
and
xor
movsb
cmp
cltd
cld
aad
xor
rol
fldenv
mull
scas
jecxz
mov
adc
adc
lcall
loope
popf
and
out
cmp
push
pop
neg
xor
sbb
jmp
xchg
ljmp
lret
cmpsl
dec
mov
loopne
fwait
mov
and
pop
sub
and
lahf
icebp
jl
fbstp
mov
mov
ret
js
mov
cmp
in
sub
mov
mov
mov
sbb
jne
cmp
and
popa
mov
adc
inc
out
outsb
sbb
aas
mov
lret
mov
in
leave
mov
out
sti
push
sahf
ds
cmp
pop
mov
jecxz
ret
loope
out
icebp
jb
mov
pop
scas
dec
fnstsw
mov
idivb
mov
outsl
nop
dec
rolb
aam
imul
sbbl
cmc
pop
insb
movsl
dec
add
sbb
jnp
aas
ds
dec
jp
lods
lds
fdivs
lret
test
mov
in
mov
xor
cmc
adc
fucomp
pop
mov
call
test
pop
jb
inc
insl
jo
fnstcw
add
mov
imul
aas
mov
faddp
daa
icebp
mov
cld
push
dec
push
xlat
in
je
xor
sub
popa
mov
imul
sahf
dec
cmp
movsl
pop
inc
lcall
addl
lock
inc
scas
out
repz
cli
shrb
mov
aas
xchg
pop
icebp
shrl
cmovs
xchg
cmc
hlt
gs
push
lods
shll
aam
jg
negl
mov
test
inc
xchg
sub
dec
inc
cmpsb
repnz
jne
sub
adc
jb
jne
in
test
outsb
cmp
loop
jle
cmp
test
into
in
test
popa
aad
jl
cli
and
mov
filds
adc
add
mov
loopne
mov
stc
xor
mov
dec
cld
imul
out
mov
fsubl
mov
in
jg
ss
mov
or
cmp
jle
mov
inc
mov
adcb
or
mov
jnp
add
xlat
sbb
pop
dec
rcr
jmp
cs
pop
pop
mov
je
jl
and
jb
push
call
roll
mov
adcl
bnd
clc
rol
pop
and
out
sarl
fcmovu
mov
ret
stos
dec
addr16
xor
inc
xor
mov
lock
rclb
mov
inc
cmp
mov
call
testl
pop
pop
mov
pop
pushf
cmp
outsb
pop
pop
addr16
ret
scas
sti
push
mov
daa
pop
mov
mov
outsl
fisttpll
pop
mov
xchg
pop
stos
aad
dec
push
lahf
pop
repnz
icebp
add
adc
mov
incb
in
xor
pop
add
adc
rorl
mov
cli
data16
mov
cmpsb
lret
dec
pop
icebp
shl
pcmpgtb
daa
dec
jns
enter
fdivs
arpl
shll
jne
cld
sbb
arpl
cmp
push
adc
inc
inc
inc
push
pop
push
mov
xchg
push
jg
mov
lock
mov
test
orb
mov
out
xor
subl
andl
negb
sbb
icebp
fldcw
push
push
push
test
ret
mov
xchg
inc
lret
and
arpl
pop
addr16
add
je
addl
mov
inc
out
pusha
fnstcw
push
and
mov
test
jp
and
dec
xchg
int
jmp
add
imul
ret
inc
mov
xchg
rcrl
in
movsb
cwtl
inc
inc
pop
push
jecxz
cmp
iret
lds
icebp
or
jp
out
or
dec
loope
xorl
xlat
ret
dec
sbb
hlt
add
push
test
dec
sub
imul
out
lahf
xchg
int3
or
ret
and
jmp
mov
imul
sub
pop
popa
scas
out
ljmp
mov
push
sbb
mov
mull
push
mov
in
jmp
ret
mov
insb
call
negl
sbb
mov
gs
rclb
cli
cmp
or
jge
push
clc
jecxz
scas
lcall
fwait
mov
jne
imul
jnp
rol
sarb
push
cli
iret
jmp
xchg
or
mov
push
pop
shlb
fwait
aas
mov
dec
int
fstpt
outsb
stos
sbb
sahf
or
loopne
fdivl
sbb
pushf
sub
mov
pop
loopne
orl
and
in
insl
push
rol
mov
ja
insb
pop
push
adc
or
xchg
add
lahf
subb
adc
jo
ret
je
test
jge
cmp
dec
in
cli
dec
dec
data16
ds
in
int3
stc
inc
cmp
jne
outsb
fdivrs
out
sarb
or
jp
ds
push
xor
add
push
xchg
lods
add
fst
xor
bound
xor
pop
flds
push
adc
pop
inc
gs
mov
cmp
cvtps2pi
jnp
push
in
aas
sub
mov
jns
rcrb
insb
arpl
testb
lods
mov
mov
push
jne
sbb
lea
pop
and
leave
jbe,pt
cmpsb
sub
ja
cmpsb
mov
mov
pushf
fcoms
adc
jg
movsb
and
imull
pushf
ret
and
and
adcl
cmp
ds
iret
jl
push
mov
sub
paddq
lods
pop
or
cmpsb
mov
cmc
inc
pop
test
stos
mov
mov
aaa
aas
mov
jns
jp
push
mov
mov
icebp
stos
stc
push
nop
sub
mov
inc
pop
outsb
jecxz
out
rorb
lcall
aas
adc
hlt
nopl
or
iret
and
fdiv
mov
xlat
and
shlb
jmp
js
jecxz
jns
or
jbe
sbb
je
xor
test
mov
jnp
push
insl
fmuls
es
shrb
lret
sub
cmp
hlt
jge
fcomip
out
stos
pop
int
mov
xlat
mov
sbb
xchg
movsl
xchg
movsl
adc
cmp
mov
aam
loop
aas
xorl
arpl
xor
shl
mov
pop
lret
cltd
push
xor
aam
icebp
fidivs
lods
mov
push
inc
ja
bound
js
cmpsl
andb
out
jae
fstpt
lret
jecxz
dec
cwtl
dec
or
sub
add
jo
pusha
mov
xchg
fistpl
out
inc
imul
in
push
in
cs
add
scas
cmp
repnz
mov
loopne
cmpsl
test
insl
push
mov
push
je
cmp
push
scas
dec
cs
dec
popf
add
stc
rcrb
inc
arpl
faddl
jge
stc
dec
pop
je
pop
xchg
inc
mov
pop
out
popa
or
cld
sbb
mov
mov
mov
decb
and
rcll
scas
ljmp
mov
jecxz
push
pop
lock
jge
sti
pop
mov
add
sbb
or
sub
mov
xchg
push
lea
jmp
outsb
loope
jo
pop
pop
ja
or
mov
les
fdiv
rclb
and
add
sub
out
pop
ljmp
push
or
jne
sahf
push
and
mov
sub
or
repz
mov
stos
andb
icebp
pop
dec
pop
shll
sarb
aas
ss
jp
fcom
ds
push
push
sbb
je
test
pop
xchg
aad
lds
subl
jecxz
mov
mov
cmp
push
sub
mov
jae
data16
pop
fdivr
cmc
cmp
dec
sub
movsb
xchg
sbb
clc
dec
mov
cmp
outsl
push
ss
mov
inc
pop
add
shlb
inc
push
ret
xchg
and
push
mov
jmp
inc
out
cld
aad
out
jmp
aad
test
jmp
sbb
in
shrb
push
jo
xchg
cmp
sbb
jp
dec
aad
daa
dec
adc
inc
fcmovb
jmp
dec
push
add
testl
aam
add
pop
xor
sbb
cmp
inc
or
ret
stos
add
loopne
pop
fcomip
hlt
xor
faddp
ljmp
insb
push
ret
loope
push
std
js
inc
push
aam
jno
outsb
dec
mov
and
mov
arpl
jo
imul
shrb
and
or
sub
xor
sbb
test
sbb
sub
rolb
cmp
add
hlt
mov
out
ret
mov
mov
dec
adc
sti
ljmp
mov
sbb
aaa
mov
movsl
jae
imul
aad
add
pop
mov
mov
lahf
xor
xor
int
jecxz
or
adc
lret
insb
pop
jne
mov
jle
mov
adc
lahf
mov
mov
aam
push
cmp
aas
fistpl
jo
jge
pop
cld
nop
jno
fstps
sub
rclb
cmpsl
pop
xor
lcall
xchg
xor
sbb
push
xorb
push
out
ja
outsb
and
leave
fwait
xchg
pop
mov
mov
mov
imul
push
sbbl
pop
repz
outsb
insl
push
shl
mov
in
sbb
push
inc
cmp
cmpb
jg
mov
pusha
das
sbb
push
ss
push
push
mov
mov
sub
mov
outsl
xchg
mov
daa
bound
jg
inc
les
aam
dec
push
es
iret
push
fnsave
ds
xor
jbe
pop
call
data16
cmp
mov
pop
pop
enter
dec
insb
cmp
add
ja
mov
ret
dec
jno
mov
arpl
and
and
outsl
shl
rcrl
call
dec
pop
cmp
xchg
notb
not
xor
cmc
mov
cli
push
test
lcall
pop
lcall
or
pusha
inc
je
mov
inc
push
pop
cli
leave
push
xlat
mov
in
sub
jns
mov
sub
cli
imul
xor
cmc
pop
cld
push
sub
inc
sarl
testb
out
jnp
dec
mov
bound
into
out
mov
data16
or
xor
cwtl
mov
sbb
jg
rcrb
and
outsb
test
xor
fxch
punpckhbw
add
imul
push
aaa
mov
push
jb
mov
xor
add
adc
imul
insl
sub
mov
or
adc
mov
push
xor
add
mov
out
jmp
aaa
jns
mov
pop
and
insb
daa
cs
arpl
pop
jne
lods
pand
cmp
jg
jmp
push
addb
ficoms
dec
cmp
mov
mov
jbe
int
and
mov
mov
xorb
dec
adc
sbb
push
testl
cmp
dec
jl
cwtl
call
clc
loop
inc
cmp
sub
cli
dec
xchg
ret
sti
pop
xchg
shl
push
xchg
imul
jo
fs
lea
push
popl
cltd
lret
push
ja
cmpsb
push
dec
daa
rcll
rorb
cmp
or
mov
adc
adc
dec
jl
arpl
dec
sbb
ret
testb
and
mov
jnp
in
adc
in
sti
ljmp
xor
aas
inc
ljmp
mov
test
mov
mov
mov
aas
in
insl
dec
add
in
mov
dec
cld
lret
test
jg
in
lods
das
or
cli
xchg
jns
leave
stos
outsb
loop,pn
mov
xor
notl
outsl
mov
or
sbb
pop
sub
or
outsl
cmp
xor
or
rolb
push
push
dec
div
add
repnz
icebp
jmp
int3
aad
pop
dec
sbb
inc
add
mov
jmp
adcl
je
das
sub
xlat
sbb
lahf
sub
sub
mov
in
aad
dec
fldl
test
lock
pop
jl
mov
push
xchg
or
sarl
pop
pop
mov
cmp
mov
mov
jle
mov
cmp
adc
jae
sbb
repz
xchg
rolb
mov
push
jne
fstpt
mov
jecxz
mov
sub
add
pusha
fisttpl
test
outsl
mov
lret
pop
fimull
fdivr
mov
ficoml
push
aas
xor
jbe
and
cli
and
or
dec
jp
ja
add
insl
inc
pop
add
jp
pop
pop
in
idivb
scas
aas
adcl
dec
add
fstpt
lds
xchg
outsl
mov
xor
in
add
fwait
mov
ja
insl
aam
sahf
ljmp
or
and
mov
aad
mov
or
xor
outsl
bound
insb
jg
lret
or
scas
pop
int
jbe
lods
lods
xchg
xchg
mov
in
lods
cli
leave
lds
popf
inc
addl
imul
sahf
ret
ja
push
cli
sbb
mov
stos
int
daa
inc
xchg
fisttps
or
sub
mov
cmpsb
push
bound
or
jle
push
clc
out
dec
or
loopne
jmp
cmp
imul
jle
xor
das
into
shlb
mov
subb
inc
outsb
pop
pop
ret
pop
cmc
leave
push
outsl
in
push
out
jl
push
scas
orb
test
jo,pt
add
sbb
sbb
aaa
cld
or
and
daa
jo
cwtl
mov
xor
mov
adc
jo
push
aam
sbb
call
mov
dec
repnz
adc
ds
sbbb
jmp
jne
mov
jp
and
sbb
sbb
sbb
push
insl
sti
cmp
out
xchg
inc
add
rolb
or
sti
rcr
jae
les
pop
cmp
add
mov
pop
jo
mov
push
loopne
negl
sti
pop
dec
sbb
xchg
pop
movsb
push
mov
ret
arpl
sbb
aad
rorb
dec
xor
cmp
xorl
inc
mov
cmc
shl
sbb
sub
pop
mov
loop
xor
out
lahf
adc
ljmp
jp
lods
ret
push
fcmovb
addr16
dec
out
scas
jne
xchg
fmull
inc
and
in
mov
adc
or
or
inc
testl
cmp
xlat
ror
jne
dec
call
cmpsw
mov
sub
rcr
xchg
xor
es
fsubrl
sbb
out
lock
xchg
ss
dec
xchg
xchg
dec
mov
add
push
shl
cmp
xchg
mov
or
call
sub
jmp
rol
jns
inc
fldcw
mov
xchg
jp
ret
ljmp
sti
mov
aam
mov
pop
jns
mov
and
xor
aas
xchg
mov
jp
dec
loope
test
ss
inc
imul
or
inc
inc
cmp
out
lea
ficoml
cli
sub
inc
inc
clc
int3
or
mov
test
jb
add
adc
insl
cli
xchg
jnp
daa
shlb
sahf
in
ret
in
mov
or
lret
push
clc
mov
add
lds
cmp
push
cmpl
mov
shrb
xor
cmp
rorl
pop
or
dec
jb
rcrl
and
fcmovnb
inc
mov
dec
push
push
dec
jae
lds
into
cmp
ret
in
pop
aad
dec
insl
js
rorb
xor
stos
bound
dec
and
fldt
fdivrl
cmc
cmpb
scas
add
jno
cmpsl
cmpsl
push
cmp
xchg
push
ret
xlat
movsl
ret
add
cmp
jle
mov
or
loopne
ret
test
sbb
fsubl
push
cmp
aas
push
mov
fistpl
inc
lods
inc
mov
jne
sbb
and
iret
pop
mov
call
sahf
repnz
adc
daa
idivl
aaa
inc
push
pusha
add
sbb
dec
imul
cmp
pop
negb
fistl
lods
xor
mov
mov
mov
or
stos
push
sbb
mov
cmpsb
into
pop
cwtl
inc
out
aam
xchg
sbb
xchg
popa
jmp
stc
mov
sub
jp
cmp
dec
mov
dec
nop
adc
out
pop
dec
fiaddl
cmp
mov
int
incb
mov
mov
outsl
test
adc
enter
loopne
scas
js
aaa
xlat
sub
push
int3
mov
and
ret
sti
or
ficomps
cs
xchg
in
insl
out
jmp
pop
mov
ljmp
jmp
xchg
stos
sub
or
cltd
push
jne,pn
lret
jne
dec
xor
shlb
pop
jl
mov
scas
je
jae
mov
dec
or
push
xchg
inc
mov
pop
mov
add
inc
push
pop
rcll
push
popf
sub
or
xchg
sbb
or
movsl
xor
sub
jne
jmp
outsl
cmp
pop
add
ficomps
pop
outsl
insl
lret
rol
sbb
aam
movsl
repnz
or
jle
mov
cmp
rclb
push
mov
dec
out
inc
lock
inc
sarb
frstor
fistpll
mov
mov
ss
cmp
inc
pop
pop
fs
push
pusha
adc
jge
cmp
repnz
sub
mov
lret
shll
ds
xor
fstpl
mov
pop
cmp
hlt
sub
daa
push
mov
xchg
pushf
fldenv
out
div
jae
mov
lock
mov
loop
adc
test
insl
call
outsl
ret
mov
cs
js
sbb
add
cmpsl
mov
iret
mov
mov
mov
mov
ret
test
jno
or
outsb
sti
jo
and
push
aas
add
psadbw
loop
int
ret
inc
scas
ljmp
stos
mov
dec
xlat
rolb
test
aaa
je
fistpl
pop
das
test
mov
sbb
mov
fimull
cmp
js
mov
popf
jg
imul
sbb
pop
or
pop
or
insl
cmpsb
sub
decl
negl
sbb
jno
jne
dec
pop
test
fwait
push
jne
pusha
push
arpl
add
je
mov
jno
mov
stos
sub
inc
pop
mov
jbe
ja
es
sahf
inc
outsb
jge
insb
and
mov
sub
jp
repnz
xchg
stos
mov
ret
fwait
push
movsl
or
out
stc
mov
leave
outsl
pusha
xchg
add
dec
or
or
out
je
adc
cmpsb
sub
es
scas
jp
fcom
test
pusha
jae
adc
sbb
sbb
inc
add
and
jl
sub
xchg
or
adc
sbb
xor
pop
in
fcomps
stc
add
mov
jne
imul
sbb
addr16
pushf
or
lods
daa
mov
pop
test
mov
inc
jg
lock
jb
rclb
jne
sti
clc
insb
mov
es
out
mov
fwait
xchg
mull
inc
push
fists
push
outsl
mov
adc
mov
adc
sahf
icebp
lcall
pushf
mov
inc
dec
cwtl
mov
shll
xor
in
sbb
pop
jo
mov
or
mov
add
ja
icebp
mov
lods
repz
enter
adc
imul
incb
notl
or
mov
mov
push
pushf
sbbl
inc
fcomps
mov
mov
push
clc
xchg
xchg
js
pusha
cmc
js
pop
pop
mov
ds
push
xchg
xabort
sti
inc
sub
mov
adc
jns
push
popf
mov
jne
push
les
js
push
add
nop
mov
sti
lock
xchg
das
in
shrl
insl
jecxz
sbb
sbb
inc
sbb
push
push
sbb
xchg
jp
mov
fmull
xlat
mov
cmpb
sub
push
les
or
and
das
cmp
repnz
sub
enter
and
fs
adc
scas
mov
adc
pop
sbb
cwtl
cmpsb
pop
popf
inc
push
mov
jne
push
push
outsl
sbb
shll
and
bound
adc
mov
sbb
mov
xor
cmp
fdiv
insl
dec
xchg
cli
xor
cmpsl
mov
fsubs
negl
cmp
add
outsb
insb
arpl
into
scas
test
into
mov
jbe
sub
cmp
adc
inc
fdivrl
pop
cltd
push
stos
or
ret
movl
pop
fidivl
xor
add
pop
jae
adc
int
imul
inc
fdivs
push
push
ja
mov
in
js
incl
cld
add
pop
mov
mov
cwtl
jne
mov
mov
fisubl
mov
js
adc
cwtl
lea
add
insl
lods
inc
das
xor
adc
jge
sahf
clc
mov
push
std
or
or
scas
int
push
enter
shl
sbb
push
daa
sbb
mov
cmp
out
xlat
mov
pop
push
leave
xchg
cs
mov
out
pop
in
lds
int
shld
jnp
mov
sub
xchg
push
xchg
pop
mov
hlt
loope
xchg
adc
mov
aam
cmc
int3
gs
clc
xlat
adc
jo
pop
cld
sbb
das
pop
pop
test
mov
push
pop
sbbl
fcomps
rolb
xor
clc
fs
pop
subl
push
je
loope
jnp
cmp
jbe
and
xchg
or
out
lods
add
push
inc
fsubl
mov
addr16
mov
decl
pop
leave
lock
fwait
pop
aas
dec
fsubr
jo
sahf
gs
scas
stos
pusha
xchg
jp
sbb
or
add
addr16
mov
mov
cmpsl
cmpsb
pop
sub
imul
pusha
xor
movsb
sub
sub
xor
movsb
jnp
sti
loopne
mov
pop
fwait
pusha
idivl
je
pop
push
pop
call
jb
jo
adc
add
stos
sbb
push
pop
in
push
pop
lds
scas
cmp
in
xchg
aad
mov
js
cmpsb
fadd
dec
and
jns
nop
mov
mov
loope
jle
jl
dec
rcll
aaa
mov
lahf
jbe
jb
inc
cmc
xchg
fdiv
pop
lods
pop
add
xor
sbb
subl
dec
aaa
xor
sub
lahf
sub
out
add
dec
je
clc
loope
fnstsw
js
dec
adc
inc
repnz
call
jnp
adc
add
sub
push
loop
add
push
ljmp
js
shlb
and
hlt
bound
iret
aad
dec
pop
pop
imul
add
fucomi
pop
jg
rclb
fdivrs
into
adc
fisubrl
js
mov
inc
jp
and
and
outsb
xor
push
or
dec
xlat
inc
xchg
arpl
add
lods
adc
inc
adc
pop
sbb
mov
mov
cmp
jecxz
jnp
push
paddusb
pop
decl
or
in
ds
icebp
xor
mov
push
popf
stos
lret
jle
aas
insl
cs
sbb
ds
xchg
dec
xchg
jmp
insb
cli
ljmp
cmp
jecxz
filds
aas
into
jo
test
clc
mov
jo
cs
cmpsb
stc
rcrb
mov
mov
faddl
sub
rorl
idivb
std
mov
jmp
icebp
pop
rclb
mov
mov
lea
or
pop
xchg
xchg
loope
push
cmp
mov
xor
or
xchg
mov
cmpl
add
jecxz
jae
mov
sub
mov
into
xchg
adc
dec
fstpl
cwtl
inc
xchg
outsl
lds
or
shll
aas
scas
mov
pop
adc
push
jbe
sub
or
ret
ret
movsb
andl
call
lcall
in
push
clc
add
add
adc
mov
mov
add
idivl
xor
outsb
movsl
int3
pushf
loop
imul
cmp
cmpsb
jbe
xchg
in
stos
cmpsb
imul
jge
push
and
mov
mov
cmp
test
push
jb
lret
push
lods
jnp
imul
out
pop
sti
scas
xchg
pop
push
dec
cltd
bound
pop
jns
inc
lret
sbb
leave
pushf
adc
dec
scas
adc
xor
arpl
jns
sub
lea
mov
hlt
xchg
out
and
leave
and
movd
imul
testb
insl
ret
dec
adc
shr
mov
mov
adcb
lea
fbstp
mov
test
pop
push
pushf
repnz
insl
add
int3
cltd
push
in
pop
sbb
xchg
adc
testb
ret
in
adc
aam
insl
pop
dec
dec
dec
sarb
test
ret
fistl
xor
push
bound
mov
jb
into
loopne
jp
test
mov
test
ljmp
mov
outsb
aaa
mov
push
and
add
add
mull
jge
loop
inc
sub
and
mov
and
or
inc
mov
adc
xor
bound
lds
mov
jp
push
sbb
sbb
xor
adc
into
xor
out
mov
fsubrl
add
imul
pop
inc
int
xor
jbe
sub
inc
inc
mov
jl
movsb
mov
mov
xlat
xor
mull
adc
movsl
add
xchg
fwait
xor
push
pushl
inc
sbb
stos
xchg
dec
push
or
push
test
jbe
xor
movsl
popf
insb
sub
xchg
fdivp
mov
push
or
mov
sti
repnz
adc
ja
test
add
cmp
adc
out
mov
mov
shll
test
mov
ret
and
int
fists
out
sbbl
cwtl
stos
mov
sub
xor
dec
gs
sbb
cmp
add
shrl
ss
ljmp
out
jns
popa
dec
mov
sub
pop
add
cmpb
lods
mov
sub
daa
push
cmp
cs
pushf
mov
fcoms
jbe
aam
cmp
mov
push
mov
pop
mov
into
into
mov
mov
fwait
sub
add
sub
add
das
mov
mov
fildll
xchg
pop
sub
xchg
out
push
ret
or
or
or
sbb
stos
mov
andb
mov
mov
cmc
repz
jb
loopne
inc
outsb
fistl
pop
into
lds
out
fcomps
mov
or
push
jecxz
dec
inc
mov
lock
dec
jnp
scas
mov
inc
dec
getsec
sahf
std
adc
and
filds
loop
cmp
inc
add
rcrl
je
cmp
rcl
xchg
dec
jne
insl
in
dec
jle
add
adc
mov
cmpsb
lret
xchg
mov
add
adc
clc
cli
popa
adc
lcall
xor
scas
fistl
dec
cli
je
xchg
cmpsb
pop
js
push
or
jmp
jno
dec
add
push
mov
sbb
push
cld
mov
xor
daa
or
das
or
cmc
fimuls
repnz
sarl
fadd
aaa
andb
movsb
icebp
pop
lods
xchg
add
jge
push
push
cmpsb
sub
sarb
xor
xor
jo
add
in
dec
dec
adc
sub
dec
adc
aam
cmc
push
jp
dec
outsl
mov
enter
fs
push
fmulp
push
iret
jo
scas
jne
sbb
gs
push
ds
lret
mov
insb
inc
js
cmp
dec
outsl
data16
xor
pushf
dec
ja
popa
addr16
jl
sahf
iret
sbb
addr16
sbb
pop
cmp
push
inc
int3
ret
push
xchg
xor
push
jno
mov
cmp
mov
out
ret
pop
aas
push
push
jmp
xchg
aas
inc
push
addr16
testl
or
loopne
cmp
jnp
nop
fadd
cli
mov
movsb
iret
or
nop
mov
and
and
push
jne
testb
shl
repnz
mov
dec
cmpsb
int
cli
stos
int
jmp
hlt
add
fs
insl
test
or
mov
jl
jnp
fnstcw
ret
jbe
fisttpll
pop
sti
jo
std
incb
sbb
cmc
call
fimuls
rcl
cmp
aam
push
hlt
loop
fsubs
adc
mov
jne
jle
sbb
int
pop
and
pop
add
adc
cmpsb
push
ds
mov
pop
dec
adc
and
jbe
jl
sbb
stos
stos
add
sarb
pop
scas
sahf
ljmp
js
dec
and
in
push
mov
jecxz
jmp
jl
xor
jnp
inc
push
cltd
subl
scas
aaa
lods
ret
add
ljmp
or
mov
and
xor
mov
test
hlt
ret
outsl
js
popf
xor
dec
sbb
mov
test
add
loope
in
mov
adc
addr16
sbb
arpl
add
cmp
ljmp
mov
fbstp
in
cmc
push
test
sbb
push
or
adc
cli
cli
pop
cmp
cmpl
add
sbb
rcrl
mov
loopne
inc
pop
push
into
loope
cli
leave
aam
testb
clc
ss
xor
int3
jo
xor
fldenv
xor
bound
popw
sbb
jmp
mov
xor
es
dec
scas
dec
dec
hlt
jne
ja
push
out
xor
dec
sub
jge
pop
inc
pop
ds
sbb
pusha
test
mov
insl
nop
xor
xchg
mov
cmp
mov
mov
adc
mov
mov
sbb
test
rcrb
int
fmuls
sbb
or
cmp
jb
cld
xchg
aas
xchg
xor
xor
cltd
loopne
fucomi
jecxz
adc
iret
roll
lods
icebp
arpl
adc
sar
outsb
addb
mov
mov
sbb
pop
dec
cmp
mov
iret
ss
in
mov
inc
dec
jmp
inc
push
out
stos
cmpsl
inc
sub
mov
aam
arpl
fwait
stos
jle
push
scas
add
cmpsl
push
repnz
insb
or
jg
push
xor
push
inc
xor
adc
shrl
xchg
cmp
mov
mov
xchg
stos
inc
cmp
scas
dec
adc
test
pop
dec
sub
ret
ss
fstl
cli
mov
and
test
out
in
test
jb
mov
imul
adc
cmc
daa
into
sti
mov
ss
pop
jnp
xchg
cmpb
call
fcoms
add
ret
outsl
lret
mov
xchg
outsb
pop
je
add
sar
push
pop
jl
out
cmc
xor
sub
and
sub
or
adc
call
adc
in
std
push
push
sti
inc
jno
xor
inc
lea
xchg
cwtl
jne
mov
lods
pop
int
and
and
xchg
push
or
jp
cmp
cmp
pop
leave
je
mov
or
mov
lahf
xlat
push
gs
aas
push
sub
in
and
loop
pop
jp
into
mov
mov
out
pop
mov
test
repz
subb
dec
dec
mov
mov
xor
aad
lock
or
push
fbld
data16
mov
fdivrs
xchg
test
sbb
andb
insb
sti
ljmp
xor
scas
scas
ret
fmull
xorb
push
jg
mov
mov
pop
outsb
pop
cmp
jp
cmc
push
das
push
ja
in
fsts
push
shr
les
enter
scas
outsl
cmpsl
loop
jae
in
leave
lcall
dec
inc
mov
push
in
mov
or
lea
adc
shrb
stos
shr
push
push
daa
icebp
push
jb
or
out
or
in
sbb
adc
popf
mov
loopne
ret
dec
sbb
jg
mov
scas
imul
mov
mov
pop
mov
jecxz
shrl
in
fidivrs
push
aam
scas
insl
and
push
add
mov
pop
fs
push
pop
or
cmovle
aad
insl
lahf
lcall
fidivs
test
je
xorl
inc
fmull
ljmp
das
pusha
push
cmp
xor
addr16
inc
fidivl
lds
loopne
rcll
lcall
imul
inc
out
outsl
lahf
xor
imul
ja
insl
loopne
sbb
push
xchg
test
xlat
fldl
cmp
push
mov
in
xorb
inc
add
sbb
adc
mov
cmp
mov
mov
jle
jbe
push
bswap
negb
std
jle
pop
xlat
mov
enter
ret
push
pop
dec
cld
fs
cmpsb
int3
lds
xchg
mov
faddl
fldl
mov
es
mov
jns
cmp
sbb
icebp
add
ljmp
icebp
add
testb
sbb
mov
cmp
inc
ud2
dec
jbe
arpl
aad
and
inc
es
testb
jg
xor
fsubrs
and
push
sbb
incb
out
fstps
fldcw
sub
cli
push
insb
mov
stos
idiv
jp
xchg
in
sbb
movsb
lahf
jle
dec
mov
pop
pop
filds
ret
inc
clc
xchg
mov
mov
jo
jl
movsl
clc
sub
mov
mov
das
cmp
out
stc
jecxz
jecxz
mov
aaa
cmp
in
add
mov
mov
mov
mov
je
or
mov
sbb
inc
ret
inc
push
lea
in
adcl
popaw
imul
mov
sbb
imul
mov
jmp
xchg
insl
xchg
test
aas
into
cmp
jbe
mov
push
clc
mov
pop
push
cmp
lock
xchg
sarb
aaa
pusha
daa
xor
or
push
clc
add
filds
aas
or
fbld
pop
fisubrs
sbb
cmp
jae
push
add
jmp
add
add
push
sbb
bound
aas
sbbb
add
int3
or
in
dec
insb
ss
div
mov
movsl
xlat
sub
sysexit
sbb
into
add
fisttpll
mov
and
sbb
jnp
mov
test
cld
sbb
sbb
push
push
mov
insb
scas
mov
mov
rorl
insl
dec
je
dec
mov
add
pop
or
xchg
or
aaa
xchg
dec
push
mov
mov
mov
out
sarl
ja
fstp
filds
leave
iret
cwtl
dec
xor
daa
add
xchg
loop
mov
lret
subb
xor
push
sub
xor
imul
das
aaa
loop
cmp
icebp
sub
lods
add
je,pt
aam
mov
add
jb
jecxz
push
ret
push
shll
movsb
pusha
ds
sbb
scas
cmc
mov
and
and
out
xchg
sub
pop
push
jae
test
add
sbb
xchg
in
stos
or
nop
sub
cmp
mov
push
mov
mov
adc
sbbb
lahf
jle
lahf
xchg
lret
pop
repz
dec
push
add
ret
jg
push
push
mov
movsl
inc
sub
mov
test
cmp
pushf
cmovl
pop
jae
cmp
sub
and
jge
pop
xchg
push
rcr
je
iret
cmp
shrb
cmc
data16
xor
push
xchg
inc
push
push
push
inc
jnp
inc
push
outsb
cmp
jl
addl
mov
mov
cmp
xchg
push
insl
cmc
pop
sbb
fdivl
cmc
scas
jl
xor
not
icebp
cmpsb
jb
mov
mov
cltd
mov
addr16
out
mov
stc
cmpsl
xchg
or
cmp
sbb
or
jg
mov
test
cmp
outsb
dec
mov
popf
imul
lods
jns
int
or
addr16
mov
bound
mov
dec
movsl
ret
dec
int3
mov
sub
mov
pop
push
mov
fstps
lcall
ret
push
dec
jnp
gs
cwtl
mov
mov
xchg
nop
jbe
fnstcw
cmp
out
jp
or
pop
ss
or
push
jo
jne
call
daa
out
test
movb
sti
rol
in
out
and
xlat
push
ja
pop
out
jecxz
xlat
clc
jle
mov
ret
adc
sbb
loopne
dec
imul
fisttpl
jge
sahf
decl
mov
mov
jl
jg
loopne
shrb
mov
inc
mov
sbb
addl
imul
popa
int3
orl
sarl
jg
adc
fcmovnu
mov
shr
xchg
mov
insb
adc
dec
adc
ret
push
pop
mov
push
outsl
adc
rolb
dec
testl
inc
xlat
ja
inc
pop
jl
les
sub
repnz
loope
mov
push
fstl
movsl
ljmp
outsb
movsb
into
aam
mov
inc
fninit
daa
fcmovb
ja
addr16
and
xor
mov
roll
popl
das
cmc
mov
and
loopne
mov
arpl
iret
jo
loope
mov
push
out
cmp
lret
stos
jmp
xchg
adc
scas
popl
push
test
xor
and
xchg
fiaddl
jle
gs
jp
add
out
je
ja
mov
push
and
mov
push
sub
inc
jns
mov
xor
daa
jno
or
mov
pop
xchg
xchg
jl
insl
mov
daa
push
mov
sbb
pop
cmp
loop
bound
sbb
mov
dec
lock
int3
aad
lods
cltd
or
sub
es
inc
mov
push
jne
mov
sbb
sbb
jmp
mov
jne
add
add
mov
mov
into
mov
std
scas
mov
movsb
pusha
mov
xchg
loop
in
xchg
dec
mov
mov
into
cmp
fsubrs
test
xchg
push
rclb
push
sbb
mov
out
push
ret
mov
es
filds
les
jne
call
sarb
adcb
adc
sti
aad
inc
into
jmp
adc
in
mov
mov
lock
or
fldt
mov
add
jecxz
inc
lods
imul
andl
and
sbbl
lock
in
es
inc
pop
push
xor
mov
add
les
aas
xchg
imul
jecxz
ljmp
dec
jb
aas
ret
sbb
bound
aaa
call
adc
inc
pop
and
insl
mov
jmp
fldl
push
lcall
mov
push
mov
xor
arpl
sarl
divb
push
jo
stc
in
push
cs
add
mov
xchg
rcl
push
cli
push
jbe
imul
jl
inc
std
mov
pop
nop
rol
mov
mov
jne
pop
push
mov
mov
fdiv
in
enter
sbb
dec
imul
ret
cmp
add
stos
shrb
xchg
div
arpl
out
into
push
or
inc
sbb
cmc
mov
add
jecxz
sbb
jbe
sarl
cmpsb
stos
adc
inc
mov
push
shrl
inc
scas
mov
jae
or
adc
in
pop
out
and
cli
mov
ficoms
enter
push
dec
addl
mov
outsb
dec
test
mov
cmp
push
setle
pop
cmc
and
orb
add
dec
test
push
jns
sub
loopne
dec
fwait
pop
sub
add
daa
scas
lret
mov
adc
sub
lods
pop
dec
cs
sbb
je
mov
pop
fistps
push
fwait
test
pop
mov
gs
pop
or
nop
mov
and
mov
cmp
push
repnz
xor
push
aas
inc
and
sbb
repz
mov
fldt
data16
push
sbb
dec
outsl
add
daa
jecxz
inc
pop
xor
pop
out
iret
in
xchg
ljmp
mov
add
mov
inc
pop
or
mov
jmp
xor
pop
addr16
ret
insl
out
sbb
je
movsb
mov
in
sti
push
or
je
mov
aas
sbb
jae,pt
or
clc
mov
iret
mov
jne
add
icebp
mov
shl
jo
add
pop
fistpl
in
fimuls
push
mov
mov
add
adc
rdtsc
lds
aam
je
divb
and
jb
sbb
jle
ss
or
rcl
inc
sbb
bound
fnstenv
sets
iret
mov
call
mov
out
sbb
mov
inc
imul
ret
dec
jbe
call
test
xchg
dec
adc
or
xor
pop
dec
fbstp
adc
or
xchg
hlt
push
lea
arpl
scas
inc
mov
sbb
lods
repz
push
cmp
les
jne
mov
mov
adc
and
sub
or
in
js
daa
mov
or
les
int
dec
rcr
push
ja
imul
and
out
mov
jno
repnz
outsb
inc
jne
mov
insl
add
mov
rcl
sahf
push
mov
out
lods
pushf
roll
push
sbb
mov
insb
out
add
jmp
pop
push
cmp
xchg
push
push
lods
adc
jnp
testb
ud1
imul
jne
clc
sahf
cld
jl
inc
call
xor
call
shll
inc
lods
pop
add
sti
xor
lods
dec
test
pop
frstor
sub
lds
lods
stc
out
xorl
fsubs
add
out
adc
iret
test
xchg
sbb
fsubr
mov
movsb
icebp
lahf
cmp
pushf
call
clc
and
mov
dec
lret
shll
fnsave
iret
pinsrw
cs
int3
cltd
dec
or
lret
xor
fstp
mov
fucomi
movsl
or
push
pop
mov
push
shll
sub
stc
ja
and
mov
outsl
adc
xchg
adc
rcr
jp
push
bound
popf
mov
push
pop
fst
mov
leave
mov
sbbl
inc
sbb
cli
aam
movsb
mov
mov
jp
mov
mov
arpl
and
pop
cld
cmp
cwtl
xchg
and
lock
fcompl
add
nop
mov
call
ret
adc
push
paddw
lock
gs
sub
mov
loopne
shl
jp
sbb
push
cli
fnstenv
int
cwtl
cmp
scas
dec
icebp
cltd
mov
iret
jo
cmp
cmp
mov
cld
iret
adc
pop
outsb
nop
inc
loope
pop
inc
cmp
inc
in
loope
lods
popl
mov
outsl
dec
jl
or
repz
addb
sub
lcall
lcall
push
cmc
daa
push
mov
sbb
mov
ror
sar
and
fldl
mov
stos
inc
cltd
andb
mov
repnz
ja
scas
mov
nop
loopne
jae
mov
scas
mov
inc
test
mov
mov
data16
pop
enter
push
cmpsl
test
bound
cld
dec
jae
xor
mov
cld
mov
sar
insl
pusha
push
or
leave
mov
inc
rolb
push
rcrb
jne
add
xchg
jmp
sub
sbb
inc
push
pop
pop
fldt
add
or
xchg
rol
popl
outsb
lret
push
cmp
adc
call
inc
call
in
inc
inc
or
fisubl
pop
cld
lcall
and
mov
mov
mov
cli
jo,pt
scas
sub
push
xlat
xchg
in
or
arpl
pop
pop
mov
mov
pop
mov
sbb
data16
sbb
clc
push
push
insb
rcrb
adc
fcoms
pop
pop
imul
jo
sarl
hlt
jecxz
in
cmp
adc
dec
xor
mov
xor
sahf
iret
cmc
loopne
and
inc
loopne
rol
adc
ljmp
cmp
adc
loope
fistl
je
imul
push
jle
jge
shrl
inc
out
fsubs
add
push
and
push
push
fmuls
mov
jnp
fiadds
arpl
jne
clc
roll
mov
cmpsb
mov
xchg
icebp
sub
mov
sub
ret
inc
cmp
adcl
fst
push
insl
std
sub
sub
addr16
fbstp
sub
push
mov
sub
jns
mov
cltd
out
lods
mov
pop
pop
ret
adc
pop
and
cli
cmc
mov
jne
popa
mov
ret
sub
arpl
dec
xor
je
stc
cmc
push
call
clc
out
lock
xchg
jno
pop
fstp
jno
xor
cmpl
push
push
cli
cmpsl
mov
test
pop
inc
jae
ret
push
mov
loop
dec
aas
insl
stos
ss
in
imul
gs
pop
lret
xlat
pushf
fisubrl
js
cmp
aam
adcl
mov
decl
sub
in
cmpsl
in
adc
mov
mov
push
ja
and
mov
ja
jns
inc
js
loope
cwtl
repnz
daa
ljmp
sbbb
inc
push
cmp
sbb
leave
or
jae
in
cmpsb
xor
mov
sbb
pop
in
call
mov
adc
cmp
cmc
push
mov
jl,pn
mov
es
sbb
xor
je
add
inc
inc
loopne
rorb
shl
xlat
in
jo
insb
js
jp
mov
mov
loopne
dec
sub
loopne
pop
icebp
scas
mov
mov
pusha
repz
mov
jge
mov
jne
jl
cmpsb
adc
mov
shll
cmc
jae
notl
cwtl
mov
ds
cmp
xor
and
mov
or
pop
inc
xor
xchg
xor
mov
clc
add
fsts
jecxz
jo
dec
es
dec
or
mov
sahf
in
jg
imul
aad
sub
jo
add
cmp
lods
mov
push
aam
pop
cmp
sahf
add
fstpt
jge
dec
int3
test
test
add
ret
jle
cmp
lcall
push
sbb
add
fwait
pusha
jno
repnz
mov
push
mov
push
cmp
inc
cmpsb
dec
add
mov
push
insb
add
cmp
jp
stos
fsubl
int3
popf
dec
or
rolb
aas
mov
jmp
int3
push
pcmpgtd
ja
cmp
mov
push
andb
adc
pop
pusha
mov
das
shlb
ds
loopne
add
pop
shr
cmp
mov
test
cmp
or
mov
popa
or
xor
divb
sti
sub
movsb
in
enter
jb
stos
pusha
fcmovb
ret
jge
push
jns
sbb
cmp
frstor
je
sarb
repz
lock
sbb
fsub
xchg
dec
and
dec
sbb
xor
jge,pt
scas
inc
arpl
aad
out
mov
cwtl
sbb
mov
lea
out
jbe
sub
in
inc
rclb
and
hlt
mov
enter
nop
inc
xor
into
pop
push
std
xchg
xor
jp
pushf
les
and
das
or
mov
call
cmp
hlt
push
movsl
cmc
jb
adc
sbb
mov
je
sahf
push
test
sub
push
out
out
outsb
jl
add
mov
int
cmp
and
call
pop
cld
cmpsb
stos
mov
cmpsb
popa
or
cltd
cmp
in
inc
ja
cmpxchg8b
enter
je
push
lock
out
ljmp
mov
and
jbe
push
push
fldcw
push
dec
add
lcall
cltd
push
mov
outsl
xor
cmp
xchg
mov
sbbl
push
out
and
push
fldcw
and
xlat
icebp
insb
jge
notl
stos
shll
neg
mov
add
add
push
sub
mov
in
mov
mov
pop
movsb
mov
push
or
lds
es
stc
ret
inc
sub
mov
outsb
ds
dec
popa
jb
stos
or
inc
push
pop
in
mov
xchg
jg
cmp
roll
push
in
sub
pop
clc
pop
std
fs
mov
inc
test
fdivrl
loope
fstpl
xchg
hlt
adcl
inc
mov
in
add
push
lds
iret
inc
daa
cld
lods
inc
frstor
dec
lret
fnsave
and
cmp
ret
sub
mov
jne
add
shr
xchg
in
pop
fsubrl
fsubr
js
loope
decl
xchg
push
sub
mov
pop
push
lcall
jo
inc
int
cmpb
mov
dec
repz
idivb
mov
push
in
mov
pushf
push
sub
add
sbb
jl
into
xchg
jg
lods
mov
sub
xchg
imul
and
in
sti
sub
int3
rorb
push
cmp
scas
fiaddl
mov
cmc
aad
adc
in
adc
mov
aas
rcrl
aas
popa
insl
shl
pushf
mul
xor
mov
mov
xchg
jbe
add
das
inc
enter
test
mov
inc
fsubl
pop
lcall
adc
or
leave
add
xchg
mov
insb
dec
push
mov
sbb
clc
mov
popa
xlat
xorl
push
into
fimuls
jne
jge
mov
jns
enter
jmp
xor
je
lret
aad
test
or
fdivl
and
sbb
mov
add
insb
loope
fmull
es
in
sbb
je
call
jg
dec
icebp
shrl
mov
pop
sbb
push
jl
pop
jbe
lahf
jnp
or
mov
and
xchg
test
lahf
gs
fildll
call
mov
fdivp
movsb
lock
aam
mov
mov
int
insb
jp
fs
inc
lds
scas
lahf
mov
pop
movsl
fwait
mov
enter
xchg
jnp
mov
pcmpeqw
add
stc
xchg
jns
mov
out
push
add
inc
aas
xchg
mov
dec
mov
jmp
cmpsl
fucomp
lea
ficoms
inc
ja
dec
cmpl
xor
ret
pop
or
xchg
in
xchg
insb
dec
fildl
popf
jo
inc
pusha
lcall
outsb
inc
into
inc
daa
aaa
ret
loope
shll
xchg
test
add
call
or
jbe
int
adc
mov
push
mov
fnsave
icebp
sub
cltd
pop
xchg
mov
movsl
je
or
sbb
stc
sub
in
shlb
cmp
xchg
mov
cmc
cmc
pop
lcall
push
aaa
add
jge
in
mov
rcr
es
iret
shl
enter
sub
adc
xor
lock
mov
mov
sub
negb
popf
imul
inc
mov
sbb
push
popf
adc
cltd
in
cmp
push
and
dec
arpl
arpl
popa
mov
dec
scas
shll
test
inc
ljmp
es
outsl
ficompl
push
daa
jnp
xor
scas
aam
fimuls
and
popf
ja
aaa
ds
push
das
out
inc
mov
stc
pop
insl
out
int
jle
push
sbb
ret
add
imul
cs
repnz
outsl
test
fsubrl
movsl
mov
add
mov
mov
cmpsl
iret
xor
pop
arpl
loope
nop
push
fisttps
data16
fmull
xor
shlb
jp
push
loope
sub
sarl
or
sti
scas
aam
loop
inc
js
lahf
sti
xor
mov
enter
jle
add
xchg
ret
sbb
sub
sub
pop
cmc
cmp
testl
clc
in
lahf
jbe
ja
inc
int3
lods
iret
cmp
add
xchg
push
jp
inc
loop
xchg
dec
cmp
cmp
out
fcmovnb
test
or
into
repnz
into
sarl
cli
fldl
jnp
mov
lds
dec
ss
xlat
push
jb
mov
mov
loop
mov
rorl
vpmacssdd
inc
call
xchg
icebp
and
out
mov
sbb
icebp
es
xchg
mov
mov
pop
push
ds
cmc
push
lods
fsubl
push
sbb
lock
adc
idiv
shl
test
xchg
adc
sbb
xchg
imul
out
test
cli
sub
cmp
dec
test
push
or
xchg
adc
push
hlt
mov
scas
mov
outsb
aad
inc
dec
lcall
iret
push
or
sbb
test
mov
mov
shrb
jl
loope
mov
test
cmp
rol
int3
and
roll
ljmp
ds
adc
ret
add
sub
xchg
cmp
sbb
mov
out
push
mov
inc
sub
nop
mov
aad
js
rcll
or
pushf
lret
and
not
or
std
mov
jnp
mov
mov
cld
fwait
pop
push
and
jg
cmpsb
and
fdivrp
cmp
aas
mov
push
and
scas
sbb
pop
jnp
mov
cld
mov
jg
xchg
das
stos
jg
outsl
out
fucomp
inc
insl
cs
and
inc
cmpl
cmc
jmp
in
mov
cmp
lock
jmp
pop
inc
mov
movsb
enter
xchg
add
jle
fs
push
call
ja
idivb
lods
pop
mov
imul
push
fidivrl
cmp
jle
insb
jg
xchg
ret
cmpsl
pop
inc
cwtl
or
or
inc
mov
fcoms
mov
outsb
ja,pt
jmp
sbb
mov
aaa
movsb
adc
adc
or
inc
pushf
outsb
pop
icebp
jge
and
dec
xlat
in
pop
sbb
lcall
sbb
mov
adc
xchg
lds
popa
add
outsb
dec
je
pop
fcoms
jecxz
imul
cmp
mov
xor
cld
int3
or
idivl
add
leave
fxch
dec
out
call
inc
fsubrl
mov
jmp
mov
jno
xchg
sbb
mov
jo
cs
mov
xor
push
sbb
xor
ficoml
push
inc
xor
sbb
pop
mov
push
push
add
rdtsc
mov
ficompl
dec
inc
push
cmp
cmp
fadds
dec
mov
push
loopne
fwait
lods
pop
mov
xor
out
mov
sbb
xchg
inc
inc
popf
les
push
adc
jmp
insl
jae
xchg
shlb
mov
into
pushf
mov
in
jns
sbb
inc
outsl
jne
mov
or
jp
add
push
xchg
pop
enter
pushl
movl
xor
add
iret
clc
mov
xor
sbb
and
mov
negl
clc
les
or
push
jmp
pop
outsl
push
das
nop
pop
cmpsl
mov
push
adc
mov
cld
addr16
fldt
fld1
dec
pop
pusha
xchg
xor
sub
jge
xchg
jmp
add
sub
je
clc
inc
cmpsb
push
lock
int3
in
shlb
mov
sub
mov
stos
test
xchg
and
push
or
xor
mov
xor
jle
mov
je
clc
lock
xchg
or
clc
cli
mov
push
xor
mov
mov
inc
movsb
jmp
mov
mov
lahf
das
jo
fisubrl
cld
mov
gs
pop
adc
mov
out
cmc
jno
push
jp
mov
cmpl
pop
add
pop
mov
push
pop
stos
movntq
insb
shll
and
fildl
add
test
cld
dec
push
push
mov
js
mov
repz
arpl
int
iret
push
jae
mov
mov
mov
mov
inc
dec
rcll
sub
add
jnp
repz
sub
fldenv
test
popf
dec
in
lret
pop
xchg
lcall
es
mov
clc
cmp
data16
daa
lock
xlat
xlat
in
mov
xchg
push
orl
mov
adc
in
jmp
jb
sub
xlat
scas
mov
int
push
dec
fnstcw
push
jno
sub
arpl
dec
cmp
rolb
icebp
mov
or
inc
stos
cli
loopne
jno
loop
pmaxsw
stos
imul
pop
cmp
mov
pushf
xlat
sbb
jno
xor
out
fnstenv
push
mov
sub
mov
push
xchg
lods
inc
inc
or
xchg
mov
adc
jae
pop
addb
add
jmp
xor
mov
push
add
pop
or
xor
mov
enter
and
mov
mov
scas
pop
xor
xor
cld
test
dec
popa
mov
jbe
push
push
push
sub
fwait
mov
and
and
test
mov
mov
mov
stos
and
popa
cltd
repz
sahf
mov
arpl
pushf
jne
sbb
jp
hlt
out
pop
jne
jge
mov
cltd
test
or
fnsave
xchg
mov
clc
sub
jb
push
roll
cltd
insl
popa
addr16
std
sub
cltd
test
mov
subl
test
push
in
lds
fisubrs
dec
dec
stos
push
xchg
cmp
out
inc
sub
fwait
cmp
jbe
jmp
xchg
mov
cli
popa
aaa
mov
jge,pn
sub
pop
loop
xor
comiss
sub
sub
xchg
fistl
mov
sbb
add
mov
fnstcw
jecxz
push
pop
scas
fsts
push
pop
mov
div
push
sbb
negb
jno
shlb
sbb
push
add
xor
mov
or
add
mov
rcrl
xchg
js
out
lds
cmpsb
mov
sbb
sub
psrld
int
jg
cs
pop
fisttpll
stos
mov
sarb
sub
mov
adc
push
xlat
sbb
cwtl
rorl
mov
push
push
pop
adc
pop
mov
cmp
ds
hlt
pushw
ljmp
dec
pop
dec
cmc
icebp
cmc
push
or
jo
sub
pop
pushf
xor
pusha
or
mov
pop
sub
mov
jle
andl
imul
inc
scas
xchg
lahf
stos
popa
imul
mov
pop
mov
cmp
cld
les
test
in
push
jg
fistl
arpl
inc
int3
into
out
mov
iret
in
cmp
jmp
sahf
movsl
test
mov
pop
mov
jbe
mov
sbb
out
xor
icebp
mov
xor
bound
pop
mov
dec
inc
or
pop
pop
pop
cld
rorl
int
jle
aam
push
je
adc
sbb
xchg
cs
scas
mov
sbb
dec
cs
fsubrs
lds
and
jne
or
xchg
scas
jne
mov
lahf
dec
cmp
xor
ja
sbb
jmp
imul
movb
lock
lock
rcl
loope
sbb
and
loopne
mov
pop
pop
pop
fmull
and
lret
inc
notl
xlat
jecxz
nop
cmpsl
xor
xor
add
inc
dec
pop
add
and
sub
fidivrs
shll
lcall
cmpsb
xor
outsb
bound
pop
outsb
mov
jle
pop
pop
adc
push
cmp
gs
lock
sub
stos
xchg
ficoml
outsl
test
push
fistl
cmp
mov
in
jo
addl
inc
pop
cmp
push
mov
xchg
sbb
mov
je
jae
out
sbb
ja
aam
outsl
cmpxchg
mov
std
stos
ljmp
out
mov
je
dec
aam
fcomip
gs
divl
lahf
jbe
add
xlat
mov
shlb
jnp
or
mov
in
xchg
mov
stos
pop
xor
test
push
in
inc
aaa
loopne
aad
lret
or
adc
xor
fwait
pop
lods
outsb
cmp
pop
cmpsl
mov
sahf
call
scas
outsb
stc
inc
mov
ret
sbb
sti
xchg
or
adc
jg
push
fistl
inc
push
pop
arpl
sbb
aad
pop
scas
das
cmpsl
sbb
in
mov
xchg
mov
sti
jnp
cmp
adc
sub
mov
pop
xchg
loope
mov
jno
mov
daa
adc
insb
dec
mov
xor
jle
mov
jne
into
dec
or
and
mov
fistps
rclb
adc
arpl
test
iret
cmpl
dec
inc
inc
pop
xchg
loope
and
cmpsb
fmul
cmpsl
cmpsb
arpl
pop
pop
jbe
sbb
push
xchg
in
ds
cmp
jns
push
mov
push
fistps
into
in
push
lahf
jae
add
aam
idivb
lea
div
xchg
arpl
xor
ss
sahf
pushf
repnz
ss
stos
int
sbb
adc
xchg
pop
cwtl
in
jae
sarb
mov
sarb
lock
pop
ss
dec
gs
push
dec
xchg
add
shll
iret
jle
or
mov
ja
lock
nop
and
adc
aad
lret
inc
fs
jge
cmpl
xchg
mov
add
test
cmp
add
xchg
cwtl
stc
dec
xchg
fcmovnbe
mov
mov
xchg
mov
mov
sarl
mov
movsl
push
add
insl
dec
mov
xlat
jns
cmp
inc
pusha
dec
imul
out
repnz
mov
mov
in
movsl
ffree
pop
push
fisttpll
mov
js
das
pusha
incl
lock
add
jp
or
xor
fcomps
pop
xchg
sub
jne
or
sti
push
sub
pop
test
insb
or
mov
sbbb
jbe
sbb
rcll
jno
test
into
xchg
lret
jp
or
js
pop
or
pushf
ljmp
push
push
mov
push
sbb
pop
orl
aaa
pop
test
leave
xchg
stc
cmc
push
popa
push
jg
sbb
mov
cmp
pop
inc
hlt
test
lahf
mov
jmp
inc
call
pop
enter
push
mov
jmp
lahf
push
loopne
loope
mov
movsb
lret
rclb
xchg
outsl
loop
dec
add
shr
inc
cld
out
pop
cmp
xchg
ja
inc
sahf
test
xor
nop
dec
push
cmpsl
dec
js
out
in
decl
jp
mov
idiv
jg
lahf
pushf
mov
vminsd
mov
sbb
sbb
pusha
mov
psadbw
fcmovu
test
jno
cs
les
push
fisttpll
pusha
ss
jp
aaa
aad
loop
in
inc
sbb
int
data16
adc
out
cmp
push
sysenter
xor
push
dec
cmpsb
imul
pop
neg
out
xor
pop
out
mov
xchg
and
xlat
mov
xchg
adc
inc
cmp
jno
xchg
inc
xchg
sub
add
loopne
das
clc
mov
popa
mov
fnstcw
bound
gs
les
mov
outsl
sbb
push
scas
pop
add
mov
sbb
pop
andl
xchg
jl
xlat
xchg
mov
cmc
or
call
mov
push
adc
jb
or
sbb
push
pop
lret
pop
mov
cwtl
out
mov
test
in
pop
ret
pop
add
cmp
sbb
arpl
in
push
inc
cmp
mov
add
sbb
mov
dec
call
bound
lahf
movsb
scas
sub
dec
push
mov
sbb
je
inc
and
jb
hlt
inc
pop
je
outsb
push
adc
inc
push
mov
hlt
cmp
adc
mov
xchg
ds
push
paddusw
sub
adc
push
mov
mov
dec
fs
cmp
popaw
mov
push
hlt
inc
dec
mov
xchg
adc
mov
xor
adc
jmp
mov
clc
sub
sbb
jo
dec
dec
cltd
cmp
clc
cmp
cmp
por
mov
sahf
mov
adc
loopne
aad
enter
pushf
push
cmp
sbb
mov
pop
sar
xlat
mov
sbb
out
int
xchg
sahf
pusha
and
pop
mov
jle
loopne
jae
in
xchg
sub
outsl
cld
shrl
inc
sbb
push
adcl
testl
das
in
sub
in
cmp
adc
imul
sbb
fstpt
add
inc
cltd
sbb
mov
clc
repz
pop
pop
lods
sti
mov
dec
rclb
dec
out
mov
or
std
sbb
pop
xchg
iret
aad
mov
xchg
scas
push
neg
dec
sub
in
sub
int
es
mov
icebp
adc
mov
jnp
and
lods
outsb
ret
lods
sti
jp
outsb
or
ss
jp
and
mov
lcall
mov
xchg
fdivrp
rorl
adc
enter
lock
add
cmp
pop
rorb
mov
insb
push
mov
imul
sub
sahf
jmp
aas
pop
inc
inc
jecxz
push
jecxz
pusha
sbb
pop
add
mov
das
femms
fadds
rclb
aam
xor
dec
sbb
out
jle
cmp
cmpsb
scas
das
stos
stos
sbb
xlat
cmp
mov
fadd
out
mov
roll
push
inc
mull
dec
loope
hlt
xchg
std
insl
sub
call
stc
pop
cmp
jl
sub
dec
test
mov
fwait
pop
sbb
inc
ret
aad
std
addb
enter
out
adc
add
cmp
and
imul
aas
cli
iret
add
fldl
mov
scas
pushf
lods
mov
cmpsb
out
xor
push
adcb
xchg
add
push
sbb
int3
and
ja
lahf
fwait
insl
les
pop
sbb
ret
adc
arpl
xor
in
sub
dec
cli
mov
pop
mov
mov
cmp
outsb
stc
rcll
or
sub
inc
adc
or
out
lods
bound
addr16
xchg
orb
pusha
add
arpl
adcl
sub
jne
sbb
lea
add
pop
scas
lock
lds
das
fucomp
adc
loope
fmuls
cld
aas
mov
rolb
jle
add
fs
jne
data16
mov
xor
xchg
in
dec
and
push
cmovge
pop
outsb
ds
cmp
jne
add
jp
rcl
jne
stos
scas
imul
scas
adc
loopne
pop
inc
outsl
dec
nop
ret
imull
sub
push
mov
jno
fcomi
ret
dec
scas
pop
cmpsb
lods
sub
xchg
or
jp,pn
xchg
test
mov
fucomi
hlt
inc
lods
ss
mov
and
dec
xchg
sbb
les
sysenter
mov
add
jnp
xchg
insl
das
rorb
sub
sbb
ja
ljmp
dec
mov
inc
push
pop
dec
mov
mov
pop
insl
pushf
add
fcompl
jmp
jecxz
loope
adc
cmp
adc
mov
in
sub
xchg
cld
mov
mov
jo
jbe
jge
pop
hlt
orb
stos
or
jle,pn
mov
pop
push
subl
xlat
or
lcall
outsl
lcall
loope
aaa
jecxz
jmp
into
in
out
push
cmp
mov
mov
loope
mov
mov
inc
aaa
push
mov
sbb
mov
jb
mov
cmp
pusha
outsb
repz
fildl
push
lock
mov
mov
push
jo
iret
xor
inc
sahf
mov
add
arpl
cld
xor
adc
push
arpl
pop
ljmp
test
fmuls
sti
add
ds
mov
clc
fsub
push
xchg
rcrb
jno
fidivl
cmpl
repz
inc
or
nop
dec
iret
ljmp
jecxz
or
insl
and
fwait
sub
cltd
mov
addl
adc
jp
movsl
mov
cs
loopne
push
addr16
mov
dec
es
hlt
cmp
mov
ds
mov
push
sbb
jge
mov
cld
mov
push
sub
pop
dec
fwait
imul
pushf
cwtl
xchg
adc
sbb
mov
cmp
mov
jle
aaa
mov
mov
mov
pop
push
or
stos
sbb
fiaddl
inc
mov
xor
rorl
inc
add
loope
scas
cmp
stc
xor
imul
pop
ljmp
pusha
mov
mov
pop
movb
loopne
push
sbb
mov
push
ret
gs
daa
lret
sub
sub
adc
or
pop
xor
cmpb
xchg
out
adc
ja
dec
mov
push
fidivl
test
cmc
fildl
add
insb
idivl
insb
jb
loop
cmp
cmp
fldt
pop
ret
mov
mov
mov
mov
mov
mov
inc
push
dec
lahf
test
dec
lahf
loope
icebp
fwait
mov
sti
mov
sub
sub
xor
fwait
stos
mov
ja
cld
movsl
jnp
pusha
or
pop
test
dec
ret
scas
mov
pop
inc
ret
mov
repnz
mov
pop
ds
iret
pop
mov
fnstsw
fdivrp
popf
mov
xchg
popf
ds
mov
test
sbbl
jo
ficoml
fsubrs
mov
jecxz
mov
jg
test
les
push
cs
fstl
inc
push
fldcw
into
cmpsb
imul
das
push
movsb
push
xor
push
je
scas
push
dec
imul
and
mov
in
pop
mov
movsl
outsb
shlb
mov
adc
imull
jnp
outsb
clc
mov
pop
add
mov
push
dec
mov
push
lcall
xchg
mov
sub
xor
push
and
xadd
ljmp
mov
cmp
jl
icebp
adc
dec
orb
cmp
push
and
sub
mov
loope
stos
xor
pop
jg
in
leave
add
je
movsb
xor
xchg
cs
jp
and
or
test
cmpl
pmaxsw
fsubrp
cld
jno
cmpsl
mov
sub
xchg
cmp
insl
fldt
popa
inc
pop
sub
hlt
mov
push
add
jg
xor
push
xor
adcl
pop
add
int3
xor
clc
int3
push
into
dec
pop
loopne
mov
xorl
and
mov
fbld
ret
pop
lret
lock
add
mov
push
fs
ja
daa
cltd
push
pop
pusha
leave
push
outsb
movsl
das
pop
xchg
ss
mov
gs
push
les
inc
push
outsl
xlat
xchg
ljmp
lods
mov
fsts
ret
es
shll
insb
mov
fbstp
mov
dec
loopne
and
loope
mov
test
shlb
adc
inc
outsb
mov
mov
jg
hlt
fcoms
adc
xchg
stos
adc
pop
xchg
pop
rcr
add
mov
pop
mov
xchg
mov
aaa
sub
rcll
add
add
mov
xchg
cmp
push
jno
xchg
or
aaa
push
ret
xchg
inc
mov
out
out
fcoms
push
test
sub
mov
jge
aas
outsb
xor
out
fdivrs
pop
xor
or
ljmp
ljmp
daa
cmp
movsl
sbb
hlt
mov
fcomi
sbb
cmpl
cmpsl
xor
mov
pop
ret
push
or
clc
out
fs
xchg
mov
ret
stos
into
mov
jg
fnstsw
sbb
das
shrl
mov
clc
pop
mov
mov
jp
push
out
xlat
sbb
test
add
xlat
add
add
aas
push
and
xor
or
dec
lea
test
xchg
fldl
xlat
and
jb
adc
add
mov
sbb
pop
pusha
cmp
out
cmp
dec
cmpsb
subb
pusha
sub
sbb
int
push
lea
cmpsl
imul
aam
hlt
sar
add
pop
scas
outsl
xchg
orb
aad
dec
add
cli
sbb
xchg
cmp
pop
lds
stos
cli
arpl
bnd
insl
shrb
cld
ficompl
addr16
sahf
pop
ja
fidivl
sti
es
loop
pop
jb
call
xchg
adc
add
mov
lahf
aaa
and
inc
dec
aam
fwait
in
mov
jg
inc
pop
push
add
sti
sarb
xchg
hlt
jmp
jne
test
movl
out
into
subb
pop
scas
in
int3
sub
lahf
dec
sub
cld
add
mov
jmp
adc
idivl
push
dec
add
lahf
rcll
jb
jns
mov
int3
outsb
arpl
jae
das
int3
pop
dec
scas
stos
mov
dec
push
mov
ret
popa
es
push
xlat
push
es
inc
dec
mov
mov
fwait
and
xchg
fs
loope
sub
xor
mov
mov
adc
je
jle
mov
scas
or
push
jmp
pop
aaa
mov
mov
inc
sub
dec
cmpsl
mov
adc
cmp
test
pop
mov
pop
mov
mov
scas
addb
stos
jnp
mov
cld
jge
xchg
enter
or
xlat
mov
insb
jno
loop
jmp
loop
add
inc
mov
adc
push
aaa
mov
fnsave
cli
shrl
ret
inc
push
je
arpl
mov
mov
jns
xor
xor
push
adc
mov
fdivrl
mov
sub
addb
insb
or
ja
pop
out
fcmovb
test
addr16
test
roll
fwait
jmp
testb
gs
fcompl
and
xor
lret
lcall
xor
in
mov
mov
mov
sbb
jbe
sub
add
int
push
xchg
jmp
adc
jmp
icebp
add
insb
sub
aaa
sub
pop
es
xlat
outsb
push
les
aaa
aam
xchg
lds
popf
cli
stc
or
add
call
notb
popf
xor
mov
jmp
adc
push
in
sbb
push
pop
add
dec
fwait
loopne
inc
sbb
fistl
lods
dec
sub
stos
inc
cmpsb
pop
je
mov
pop
outsb
lahf
pop
int
testb
in
adc
xchg
sbb
sub
push
inc
div
jb
movsl
push
sbb
into
sub
inc
dec
shlb
and
fdiv
outsb
test
xchg
cmp
jecxz
lds
xor
mov
adc
mov
push
stos
out
xchg
pusha
cli
mov
mov
push
mov
xlat
icebp
push
arpl
and
adc
je
lods
mov
push
adc
in
sbb
mov
cmpsb
and
mov
aas
movsl
xor
dec
xor
in
sahf
mov
outsl
push
cmp
cmpsl
sub
add
mov
insb
ljmp
dec
push
and
cmp
jne
mov
mov
xchg
mov
jmp
das
out
int
imul
cltd
call
orb
cmpsb
nop
les
mov
mov
xchg
push
dec
lret
sbb
add
aas
in
in
mov
push
xchg
imul
ss
outsl
push
fstpt
mov
mov
hlt
jbe
daa
xchg
jmp
jl
xor
cmp
fcomps
cmp
or
add
fisubrl
in
repz
ss
pop
arpl
dec
gs
sub
psubb
inc
sarl
xor
inc
pushf
sub
inc
pop
stc
hlt
cld
pop
mov
rorb
loope
shrd
xlat
jmp
arpl
cmp
movsl
lds
loop
scas
mov
lcall
bswap
in
lods
icebp
push
cmp
clc
insl
xor
jp
and
aam
cmp
and
add
mov
jmp
aaa
pop
xor
pop
push
push
lods
nop
notl
pop
loopne
push
inc
rcrl
inc
sbb
ficompl
rcll
sbb
or
mov
cmc
std
mov
push
push
mov
fcomps
cmp
push
xchg
outsb
pop
xlat
test
movsb
fiadds
shrb
lods
add
cmp
or
icebp
push
mov
cmc
lcall
mov
fiaddl
cwtl
xchg
sbb
inc
push
jne
xlat
xor
ja
movsl
mov
cltd
cltd
pop
aad
fsubl
ja
ljmp
sbb
sbb
divb
jno
add
sti
push
testl
sbb
mov
outsb
cli
pusha
aad
push
mov
shrl
push
insl
or
xchg
in
pop
push
jmp
lock
movsl
dec
push
and
add
bound
xchg
push
outsb
jo
scas
fwait
lahf
test
or
orl
fcom
dec
push
sbb
loope
cmp
cmc
xor
das
nop
push
adc
mov
popf
mov
into
test
fwait
xchg
jmp
mov
aam
pop
aaa
cmpsl
mov
push
es
cld
xchg
inc
imul
xchg
xchg
inc
loop
pop
mov
and
lods
or
dec
push
pop
incl
lret
insb
ret
addr16
xor
or
mov
and
mov
clc
ljmp
andb
xor
adc
xchg
jb
sbb
call
dec
jge
sbbl
in
dec
loopne
filds
clc
test
icebp
or
cmp
pop
dec
in
xchg
mov
cmpsb
inc
lret
loopne
enter
std
mov
cs
xor
sbb
fs
sub
dec
dec
addl
arpl
adc
sub
inc
andl
in
pop
push
cmpsl
mov
movsb
pop
pop
mov
les
cwtl
fidivrs
push
repz
je
push
mov
arpl
mov
inc
xlat
aad
inc
mov
leave
xchg
inc
and
gs
mov
push
mov
push
andl
loope
xchg
in
xor
jmp
lahf
test
cmp
cmp
cmp
mov
or
inc
aad
call
dec
mov
lea
add
mov
xor
sarb
pop
stc
or
xchg
mov
mov
add
mov
mov
sahf
aad
lea
mov
lds
into
pusha
jp
jo
imul
adc
daa
test
inc
ret
mov
push
mov
pop
sbb
cmpsb
pop
lcall
jmp
divb
aas
cs
jp
aas
aam
mov
sub
cmp
daa
inc
cmp
cmp
mov
ss
mov
xor
xchg
add
mov
mov
lods
imul
leave
mov
xor
iret
mov
inc
sbb
mov
shl
xlat
add
cli
test
and
shll
hlt
dec
out
test
clc
out
dec
pop
ffree
or
pushf
dec
movsl
push
adc
neg
mov
dec
mov
or
jb
adc
sub
inc
sub
mov
jecxz
bound
xchg
mov
jno
fmull
pop
pop
in
xchg
cmc
mov
jne
push
test
rorb
jge
xchg
imul
mov
fisttps
xor
nop
inc
rclb
cltd
adc
cwtl
sub
sub
jle
add
dec
ret
jmp
movsb
inc
cwtl
xlat
and
mov
shr
inc
loope
sahf
bswap
push
mov
and
pop
xchg
sbb
push
mull
push
xchg
enter
mov
add
call
mov
mov
and
mov
mov
mov
cs
mov
js
or
addr16
cmp
mov
mov
xchg
in
lods
xor
fisttpl
push
rcrl
or
out
push
lods
loope
cmpb
out
sahf
or
cmpsb
insl
push
or
or
jmp
push
pop
stos
inc
xchg
or
sub
inc
inc
and
popl
and
push
and
aaa
mov
ss
jne
das
xor
jmp
dec
sbb
bound
adc
sbb
and
lea
aaa
xchg
stos
outsb
nop
pop
mov
sub
mov
pop
push
cmp
cld
mov
mov
or
mov
stos
mov
add
in
mov
inc
adc
fwait
jge
je
jge
ret
mov
jo
cmpb
mov
cmp
cmpl
ss
inc
cmpsl
mov
clc
xor
push
mov
adc
leave
mov
cmp
cmp
sbb
inc
mov
dec
scas
cmp
test
scas
pop
imulb
pop
mov
test
push
push
cmp
packsswb
push
gs
xlat
mov
fiaddl
mov
loop
nop
lahf
outsl
jbe
das
mov
jmp
fildl
mov
ficompl
dec
add
pop
jl
xor
dec
jne
fisttpll
lcall
mov
xor
fbstp
jmp
push
movsb
pop
push
inc
xor
sbb
jne
add
jb
in
mov
add
out
sub
jbe
pop
or
ret
in
pop
push
sbb
mov
fsubrl
rolb
push
xchg
scas
lret
outsl
mov
neg
mov
in
sbb
dec
ret
mov
mov
push
ljmp
mov
sub
es
xor
push
inc
xchg
inc
cli
pushf
popa
fildll
mov
adc
jmp
out
sub
cmp
mov
inc
int
les
test
add
loop
shrb
xchg
mov
fs
jmp
pop
test
movsl
dec
cmp
test
jl
pshufw
repnz
push
pop
dec
int
or
incl
loope
sub
sub
call
xchg
mov
mov
aas
xor
aas
push
add
inc
inc
jmp
das
pop
sbb
pop
arpl
loop
cmp
imul
popw
fcompl
jnp
int3
dec
mov
sbb
push
or
mov
mov
jbe
adc
stos
pop
push
dec
movsl
sub
push
inc
xchg
dec
fsubr
call
fcomps
mov
inc
fadd
mov
adc
out
test
call
sbb
mov
mov
divb
sarl
mov
xor
pop
mov
call
cmc
push
dec
test
mov
fcmovu
scas
pop
das
or
in
lret
cli
hlt
sbbl
mov
mov
testb
shrb
mov
dec
ljmp
dec
leave
xchg
jl
andl
sarb
dec
push
scas
fstpt
add
push
xlat
jns
mov
xchg
mov
dec
jbe
mov
ja
notl
push
pop
fnsave
mov
loopne
fidivrs
outsl
jns
xlat
mov
mov
mov
sbb
jle
pop
pop
into
stc
popf
sahf
sti
cmp
and
outsl
adc
shll
push
into
jbe
cmp
adc
mov
pop
mov
push
ret
sarl
add
test
jle
or
inc
rorb
pop
mov
jbe
frstor
push
and
lods
sub
mov
jne
jno
mov
popf
call
notb
xor
jmp
iret
mov
push
sbb
std
ss
scas
data16
psllw
xchg
adc
inc
les
idivl
pop
lret
roll
lock
pop
loop
jle
rorb
cs
adc
xchg
xchg
loope
cmc
aam
sti
inc
or
lods
pop
and
add
xor
lock
pop
or
xchg
xchg
sti
jge
jo
push
add
jno
fnstsw
getsec
movsl
int
push
push
pop
push
xor
fidivrs
insb
fdivrs
push
pop
popf
or
push
pop
inc
push
cmc
fsubl
mov
inc
das
mov
sub
jp
push
fxtract
insb
xlat
iret
sbb
andb
sti
xchg
mov
inc
jnp
negb
mov
mov
mov
stos
dec
sbb
sbb
popf
or
and
add
arpl
mov
call
das
push
stos
sbb
inc
pop
adc
imul
xor
fidivs
dec
je
mov
push
jg
cs
jmp
mov
cmp
cs
icebp
inc
aaa
andb
dec
popa
inc
add
add
pop
push
fcoml
lock
push
dec
pushf
dec
sbb
cli
adc
test
out
fiadds
pop
movsb
outsl
les
rol
xlat
loope
sub
stc
dec
cmpsb
lahf
xchg
adc
sahf
call
mov
pop
fcmovnbe
scas
lret
sub
cmp
fsubrs
aam
call
xchg
nop
cmpsb
fstpt
cmp
loopne
push
mov
stos
sub
je
xor
ds
mov
push
clc
push
lock
or
mov
fiaddl
push
les
ret
mov
jg
inc
stos
mov
je
nop
cld
out
insl
xor
outsl
pop
call
mov
sub
test
stos
sub
cltd
push
xchg
ret
mov
xor
xchg
cmp
stos
mov
cli
push
xchg
push
in
pop
jl
into
inc
cmc
mov
nop
stos
or
or
dec
mov
add
sbb
mov
mov
divl
dec
lods
insb
ljmp
imul
test
mov
mov
cmove
mov
mov
popa
into
lods
ret
ficomps
sub
mov
mov
xor
or
pop
loop
adc
dec
decl
adc
fdivs
mov
xor
loop
icebp
leave
add
andb
add
mov
loop
hlt
push
stos
fcompl
adc
sub
add
ljmp
mov
adc
test
ret
pop
inc
pop
setbe
adc
cli
or
inc
out
fdivl
xchg
ljmp
xchg
mov
jo
pusha
pop
shrl
clc
xchg
jno
sbb
insb
sti
addr16
nop
push
adc
sub
ret
jno
inc
fsubrp
out
adc
xchg
dec
sbb
push
push
mov
dec
or
shl
sarl
adc
ficompl
push
xchg
imul
enter
and
jge
push
mov
push
push
jle
inc
cltd
pop
push
cmp
push
into
xchg
aaa
fimull
pop
mov
xchg
pop
sub
or
aad
xlat
out
out
out
mov
lret
mov
inc
jnp
call
jg
jle
mov
pop
and
adc
or
into
pop
lret
or
pinsrw
jno
cmp
add
or
push
aam
in
int
or
iret
aam
icebp
inc
leave
inc
addr16
loope
and
dec
insb
aaa
cmp
jmp
aas
mov
pop
mov
repz
iret
mov
add
in
dec
pop
loopne
js
xchg
xor
call
fidivl
push
jmp
aad
push
adc
pop
mov
int
adc
sbb
and
test
sub
jle
out
adc
cmp
mov
add
adc
out
mov
lds
cmp
or
push
test
jecxz
mov
shrl
mov
notb
pusha
push
and
cmp
add
insb
fstpl
arpl
pop
mov
popf
cmp
sbb
fwait
jle
xchg
sbb
dec
aas
xlat
mov
add
imul
mov
xchg
in
mov
clc
mov
pop
mov
bound
lret
jbe
stc
ss
xchg
xor
push
dec
ljmp
ret
cmp
jl
sbb
pop
mov
push
lds
cmp
xchg
or
jp
mov
pop
jbe
mov
mov
and
mov
dec
test
jne
jns
jns
lret
aaa
mov
in
fcomip
inc
arpl
adc
imul
dec
pusha
ljmp
mov
iret
ret
clc
rcl
pop
sti
out
push
cmp
cmp
sbb
mov
xor
mov
jp
add
push
lahf
lcall
iret
adc
ds
divl
dec
test
sbb
adc
into
in
ljmp
xor
push
mov
pop
fcoms
fbstp
jns
xchg
sub
cmp
gs
mov
xchg
fcoml
pop
or
aaa
in
inc
adc
cltd
push
cmp
lds
outsl
int
outsb
xlat
popf
inc
pop
in
sbb
shrb
lahf
nop
adc
movsl
lds
nop
jge
cwtl
add
loope
jbe
pop
jne
addl
ljmp
mov
pop
popa
movsb
inc
call
repz
ret
jmp
mov
xor
pop
shlb
cmpb
aaa
hlt
and
dec
lods
cmc
xchg
xchg
das
mov
xchg
imul
jg
mov
sahf
push
dec
rolb
and
mov
fxch
sbb
mov
sub
negl
jmp
popa
rcll
inc
pop
cmpsl
insl
xchg
mov
iret
mov
jnp
mov
cmp
push
and
adc
adc
mov
fsubr
movsl
inc
leave
scas
sti
xchg
in
mov
jno
cld
jae
ret
icebp
or
daa
xlat
std
div
jecxz
push
mov
xorl
sbb
cwtl
jecxz
imul
inc
cmp
mov
iret
mov
into
lods
pop
mov
loopne
lea
adc
xchg
jnp
in
xchg
jmp
push
out
sub
pop
xchg
cs
es
pop
pop
lahf
mov
test
js
test
push
sub
jne
pop
ficomps
aas
enter
fwait
jb
cmp
lret
mov
adc
pop
xchg
pusha
xchg
jno
fs
push
sbb
push
subb
sti
mulb
push
out
sahf
sti
add
cmp
xchg
lea
test
roll
cmp
jmp
sub
outsl
xlat
mov
inc
push
jmp
cmp
mov
cmp
cmp
int
push
ljmp
sub
mov
paddusw
add
mov
arpl
jmp
icebp
xchg
stos
push
inc
fstpl
lds
out
lods
push
sbb
or
sbb
xor
mov
adc
push
js
sbbl
outsb
jmp
sub
sahf
aad
jl
pop
fidivrs
or
inc
test
sbb
pop
adc
fcompl
and
dec
and
sti
jns
aam
mov
add
fmuls
cmp
out
stos
lret
mov
out
addr16
or
rol
jp
out
shll
inc
aas
cmc
sbb
xor
cli
ljmp
cli
dec
add
jnp
push
fmull
pop
dec
and
mov
aas
icebp
mov
ret
and
into
mov
jge
mov
or
mov
mov
inc
add
mov
cmp
fwait
mov
mov
dec
jle
push
imul
pop
cmc
push
xlat
adc
push
adc
leave
mov
loope
cltd
scas
mov
jbe
jg
jecxz
into
aad
xchg
pop
push
push
test
outsl
xor
mov
stos
sahf
sub
scas
sbbl
sbb
mov
aaa
outsb
in
lahf
test
cmp
in
sbb
pop
sbb
or
add
push
or
fs
stos
fcmovnbe
xor
scas
stos
mov
and
mov
or
loopne
arpl
out
aad
lret
jo
xorb
fdivs
xlat
mov
pusha
dec
addb
jecxz
inc
jmp
ljmp
dec
inc
enter
loopne
jnp
adc
xor
cs
sahf
loopne
fst
inc
pop
push
sti
movsl
js
dec
dec
or
cmp
fsts
loopne
insl
fisttpll
adc
jb
jo,pt
call
mov
inc
out
mov
dec
aam
push
or
dec
or
repz
cli
jo
dec
rorb
jo
jno
sbbb
add
mov
mov
pop
dec
mov
push
xchg
jle
cmp
or
dec
lock
insl
mov
mov
push
cmp
ljmp
movsb
jo
dec
outsl
ja
cmpsb
mov
jmp
mov
scas
add
xchg
movsb
fwait
mov
inc
int
mov
out
dec
xchg
lea
jge
sti
adcl
or
movsl
or
cmpb
add
lock
ja
jnp
scas
shll
movsb
pop
cli
mov
mov
jno
cld
jnp
mov
loop
dec
xchg
pop
push
xchg
cld
loope
out
or
pop
ret
out
scas
scas
clc
xor
dec
jo
sub
push
jecxz
mov
jo
jb
jbe
sbb
cmp
jle
shll
pop
inc
adc
inc
in
jle
adc
insb
push
pushf
js
scas
cmp
jl
sbb
std
gs
push
mov
scas
jae
xlat
mov
out
testb
fidivs
mov
push
fwait
ret
cmp
xlat
cmc
jnp
jmp
adc
ss
jnp
testb
ss
sbb
push
xor
mov
scas
fwait
xor
gs
das
insb
call
loopne
mov
mov
xor
lock
and
cmpsb
or
jecxz
out
inc
jp
mov
fnstcw
pop
push
sbb
and
pop
pop
lods
stc
aam
mov
dec
sbb
int
mov
stos
shlb
in
and
push
out
test
or
mov
xchg
mov
leave
loope
mov
adc
in
rcrb
test
mov
test
jmp
adc
push
cmp
sub
inc
mov
std
cli
test
popf
sub
ljmp
fidivrs
push
jl
push
ja
xor
pop
xchg
push
neg
hlt
add
xor
shll
dec
lret
push
lcall
movd
fisttpll
add
fbstp
in
sbb
push
test
int3
sbb
lea
emms
sbb
jp
cmp
jbe
inc
repz
cmp
subb
sar
loopne
cmpsb
aam
andps
movsl
cld
cld
adc
shlb
adc
pop
pop
adc
lods
jecxz
outsl
rorl
ret
ret
pop
sbb
mov
mov
cwtl
sbb
imul
shrl
xchg
lahf
sub
push
jbe
ret
sbb
popl
pusha
inc
arpl
fwait
and
adc
fdivrs
adc
jl
jp
adc
dec
aam
ret
loop
mov
mov
pop
jl
lea
rolb
jp
test
testl
and
aaa
icebp
out
dec
push
jmp
test
in
inc
mov
cmp
fmul
sub
ret
insb
sti
mov
pop
sub
filds
inc
or
push
jno
scas
jecxz
in
add
dec
inc
xor
push
add
rcl
outsl
push
sbbb
fwait
jp
dec
cmp
xchg
or
adc
ss
popa
inc
xor
inc
cmpsb
xchg
test
ds
push
aad
cmpsb
mov
push
test
pop
loopne
sub
sbbb
aad
mov
lods
or
cli
jb
es
daa
cmp
adc
mov
fnsave
jge
sub
sub
ss
push
fnstcw
insb
out
dec
cmp
adc
jbe
or
or
test
jno
and
add
fcompl
sahf
xor
daa
ds
cwtl
sbb
insl
fstl
adc
sbb
mov
in
inc
or
push
loopne
int3
jo
add
inc
fsubrp
hlt
outsb
xor
addr16
or
imul
cmp
fstps
adc
mov
pop
fstpl
insb
mov
xchg
dec
cwtl
jbe
add
sub
or
add
xchg
add
dec
add
cmpl
mov
jnp
in
jle,pt
jmp
insl
pusha
sub
sub
lcall
pop
mov
outsb
jp
scas
cmp
js
andl
cli
fidivl
movb
lock
lock
lcall
adc
push
cmp
pushf
cmp
cmp
mov
mov
inc
xlat
sbb
loope
mov
aaa
mov
mov
cmpsb
sarb
cmc
inc
push
inc
test
aas
ficomps
in
mov
call
mov
subb
mov
gs
aam
mov
pusha
int
inc
jne
pusha
pop
and
insl
iret
add
mov
in
lods
mov
pushw
in
add
pop
mov
cmp
in
lea
xor
inc
hlt
int3
sbb
sub
mov
mov
orl
adcl
in
inc
ja
xor
pop
aaa
xchg
cld
and
push
in
xlat
fiadds
pop
enter
dec
jb
xchg
mov
or
jecxz
inc
ret
push
sub
fsubl
out
arpl
int3
jle
sbb
adc
cmp
xchg
jbe
push
xor
mov
mov
out
jns
mov
mov
nopl
push
scas
test
movsl
fsubl
int3
popf
add
clc
mov
adc
mov
inc
push
push
std
js
js
mov
push
aad
shll
dec
mov
or
loope
sti
pop
jne
or
sbb
mov
cld
jno
loop
jle
xchg
jp
sbb
shrb
pusha
cld
sbb
sub
adc
sbb
cmp
outsb
push
fmul
dec
add
mov
add
frstor
mov
out
aas
add
xor
shlb
and
inc
add
mov
mov
loopne
jge
xor
push
cmpsb
data16
fstl
push
jo
clc
sub
mov
dec
pop
dec
sub
push
stos
repz
outsl
pop
fmull
sub
dec
add
sub
mov
xchg
mov
test
std
push
jne
int3
xchg
mov
lret
add
ja
gs
xor
outsl
repz
dec
nopl
push
je
dec
mov
aam
and
loope
push
test
cmp
popa
cmp
mov
inc
scas
jp
std
adc
arpl
mov
xchg
cmp
push
sbb
sub
fisubs
data16
mov
bound
es
mov
shl
lret
cwtl
cwtl
je
lcall
nop
orb
ds
dec
jg
push
arpl
jp
js
mov
inc
call
or
or
jmp
push
cmp
inc
ja
pushf
test
test
fimuls
pop
lcall
cmp
sbb
jno
stc
out
loopne
jae
jno
das
mov
push
jmp
jge
mov
pop
outsl
mov
sbb
sti
out
rorb
arpl
je
cmp
fisubrl
icebp
push
enter
adc
fdivs
adc
out
mov
mov
dec
push
stos
dec
and
inc
xchg
inc
fidivl
fistl
mov
out
popf
add
sbb
pushf
add
push
push
movsb
mov
sbb
pop
fisubs
mov
loopne
add
ror
iret
xor
xor
jl
or
push
rolb
ficoml
mov
fildl
or
cmp
icebp
in
mov
fwait
push
sub
stos
xor
and
and
pop
and
je
dec
xor
push
jp
jnp
into
or
mov
mov
movl
cli
subb
and
ficompl
pop
ss
mov
psubusw
mov
test
jb
stc
sbb
sbb
enter
pop
inc
call
sbb
and
pop
pushf
inc
das
test
sbb
push
pop
test
sbb
mov
icebp
fidivrs
leave
ficoml
clc
fidivs
arpl
in
jno
lods
add
insl
push
jo
adc
mov
inc
inc
bound
in
les
add
add
jge
fistpll
lods
dec
and
js
adcb
in
sarl
sub
hlt
bound
js
rorl
dec
lock
dec
push
dec
cmp
xor
iret
pusha
cmp
insb
sub
testl
in
daa
sbb
out
xchg
int3
push
cmpsl
scas
mov
mov
mov
fsubrs
icebp
les
mov
arpl
jl
lcall
dec
push
int
or
fldcw
pop
xlat
or
mov
rcrb
popf
movsl
pop
stos
aad
aaa
sar
loopne
loope
adc
dec
sub
fdivs
push
jl
out
aad
fdivrs
int
sub
leave
sarl
pop
adc
fcmovnu
mov
daa
jnp
cmpsb
clc
pusha
arpl
push
int
mov
sahf
iret
fists
aam
call
cmpsb
pop
insb
dec
cmp
adc
adc
out
fstl
add
mov
inc
aad
add
sbb
adc
pop
rcrb
lahf
push
out
ljmp
xchg
jnp
flds
add
mov
dec
leave
faddl
mov
push
dec
dec
cli
jle
or
lods
into
sub
inc
fldt
pop
push
pop
xchg
push
adc
hlt
icebp
mov
dec
adc
sub
jb
imul
sub
and
daa
test
addr16
xchg
jns
sub
int
leave
lret
pop
arpl
mov
fstpl
sub
leave
pop
mov
mov
lret
dec
inc
js
xor
bnd
movsb
and
jne
pop
lds
and
cmp
in
test
dec
adc
jae
clc
das
pop
pop
pop
inc
les
cmp
std
rolb
jg
inc
mov
sahf
jp
jmp
std
jb
test
dec
push
sbb
insl
xor
pop
jo
cmpsb
inc
mov
test
sbb
lret
sbb
lock
jmp
ss
jbe
push
mov
popf
jbe
pop
inc
jb
xchg
pusha
ja
push
or
sbb
inc
cmpsl
iret
add
or
notb
cmp
push
xchg
lret
inc
test
out
lods
adc
in
mov
add
in
shr
js
icebp
sahf
mov
mov
bnd
icebp
mov
adc
pop
dec
mov
push
mov
rcll
bound
test
dec
hlt
shrl
sbb
jge
loope
mov
inc
push
cmp
cmp
mov
push
sti
push
add
inc
in
loopne
jecxz
or
fnstsw
mov
movsb
popf
xchg
pop
sub
sbb
dec
aaa
das
cltd
aaa
fcoml
test
inc
addr16
insb
sbb
insb
add
call
fstl
insb
cs
pop
js
mov
mov
adc
lcall
bound
xchg
rorl
adc
add
fucomip
shl
jecxz
cmpsl
incb
arpl
sub
imul
mulb
push
jno
sarl
in
test
inc
cmp
jne
arpl
xlat
push
les
fcoml
repnz
cltd
cmp
sub
out
and
mov
lods
andl
es
std
cmp
or
sub
mov
outsb
jne
push
stos
fldt
arpl
add
ljmp
cli
adc
adc
xchg
sub
test
out
mov
xchg
vpaddsw
mov
inc
jle
arpl
mov
frstor
inc
pop
cmpsl
insb
aad
call
loop
addr16
fcompl
aad
lock
loope
out
and
cmp
xor
aas
mov
cli
hlt
adc
in
or
mov
jp
test
js
fwait
adc
std
shl
pop
scas
xor
sbb
xchg
shlb
loopne
out
pop
adc
adc
cmp
test
and
cmp
inc
daa
ljmp
xchg
insb
nop
cmc
scas
in
cmc
arpl
pop
cs
orb
lock
aas
stos
gs
mov
cmc
cmp
cmp
ret
cmp
lret
mov
stc
adc
xor
js
mov
xchg
sbb
push
pushf
out
test
out
push
pusha
pop
test
sahf
lea
xchg
or
jne
cmpl
iret
je
ss
adc
mov
pop
aaa
lds
mov
fstl
mov
or
dec
cmpsl
xchg
xor
jo
aas
insl
loope
pop
scas
sbb
or
loop
imul
cmp
shrl
xchg
ds
out
adc
in
arpl
out
test
or
sub
sub
jp
jp
add
pop
call
and
movsl
pushf
push
ret
xor
lcall
int3
adcl
and
xlat
mov
loope
sbb
jge
ljmp
aas
jg
xchg
or
dec
adc
es
jbe
xor
subb
jbe
pop
xorl
mov
out
xchg
leave
loopne
inc
fwait
mov
fidivrl
fcmovbe
jmp
mov
sahf
shrb
add
mov
xchg
les
imul
push
cmp
cmpsb
ret
mov
mov
sbb
push
pop
fchs
in
push
jns
loop
cs
jecxz
popa
push
int
fdivrs
loop
jl
rcl
adc
outsb
fists
mov
inc
mov
das
data16
sub
mov
insb
lock
cmc
pop
fiaddl
xlat
icebp
dec
xchg
mov
fwait
xchg
test
adc
rcr
mov
lret
std
and
pusha
movsb
out
test
fldl
mov
ss
rcrl
mov
xor
add
mov
xchg
fistps
inc
mov
mov
adc
loopne
add
enter
stos
sub
inc
sbb
mov
lods
rcll
mov
inc
ffreep
dec
icebp
or
inc
adc
push
pop
pop
xor
data16
and
mov
cli
movsb
push
adc
std
jmp
mov
imul
sbb
fisttpll
int
out
daa
inc
mov
mov
jl
push
jp
mov
push
pop
cmp
xlat
jne
xlat
rcr
or
test
clc
push
dec
pop
ret
dec
mov
pop
clc
shrl
pop
movl
sub
es
arpl
adc
cvtps2pd
mov
shl
mov
outsl
and
push
mov
ds
add
xchg
es
mov
stos
into
add
nop
repnz
push
shlb
sub
imul
or
enter
in
cmpsb
pop
jge
inc
mov
scas
sbb
pop
sbb
add
jp
fbld
mov
dec
jbe
fimuls
xor
fstpl
shrl
sbb
pop
xchg
add
rorb
cmp
mov
outsl
xchg
divl
jle
ss
inc
into
test
sarl
ret
xor
je
xchg
fiadds
int
xchg
daa
jp
enter
js
icebp
xlat
inc
push
and
into
out
dec
pop
clc
xlat
add
cmp
and
mov
sarb
out
mov
fistpl
dec
cmp
aam
sbb
mov
sub
test
sahf
and
out
mov
negl
or
xchg
aas
ret
mov
push
into
shl
testl
dec
ljmp
inc
push
mov
pop
ds
cmc
lahf
stos
int
clc
std
cmp
imul
sti
ljmp
jno
or
fs
pop
push
test
pop
adc
pop
inc
mov
in
popa
mov
and
sub
jo
sahf
mov
pop
out
adc
pop
jno
sbb
jbe
pushf
mov
pop
roll
mov
mov
clc
inc
jns
ret
pop
pextrw
xchg
mov
jbe
fmuls
mov
pusha
mov
test
jne
sti
loopne
add
fs
push
loop
adc
jp
dec
or
jmp
adc
jns
mov
inc
cmp
pop
aas
inc
in
lcall
enter
jge
ret
inc
dec
sub
lret
pop
and
sbb
jae
frstor
xor
cs
aad
cmpsl
incl
aad
add
jmp
fsub
sub
add
lock
mov
mov
fisttps
imul
cmp
insb
adc
lock
test
or
xchg
daa
push
js
aaa
inc
mov
push
dec
push
pop
push
int3
outsl
or
xchg
xorl
sbb
movsl
arpl
lret
mov
or
cld
mov
jp
push
and
pop
xlat
mov
mov
test
cmpsl
rclb
scas
outsb
pop
mov
jb
and
out
mov
je
fmull
cltd
pop
out
mov
jmp
xor
xchg
inc
jne
xchg
add
ljmp
mov
jbe
mov
mov
mov
movsl
std
ret
xchg
psubd
push
movl
fildll
stos
and
fs
pop
xchg
addb
dec
lock
pop
arpl
adc
insl
add
or
mov
push
icebp
out
aas
jbe
sub
aaa
mov
lea
cmc
sub
cmp
mov
xor
ljmp
aaa
mov
sti
je
mov
hlt
xlat
sarb
push
lock
push
and
cmpsl
invd
test
inc
sbb
mov
add
jle
push
cmp
xor
and
xor
imul
pop
push
push
sub
xor
mov
cld
mov
jle
sub
inc
rcrl
and
ficomps
mov
xlat
dec
fmull
mov
aad
push
pop
jmp
inc
dec
push
add
repnz
in
in
push
mov
insl
and
cmpsb
aam
mov
inc
add
mov
es
push
idivl
out
pop
shlb
mov
pop
mov
aam
add
xchg
push
sub
push
jo
and
insb
aaa
sub
in
iret
add
jg
fcmovnbe
pop
cmpsb
sbb
and
pushf
sbb
pop
cli
push
sbb
jl
mov
inc
outsl
sbb
sbb
in
jne
repz
nop
or
rclb
call
or
andb
inc
mov
outsb
cmc
loopne
movzwl
pop
dec
mov
or
adc
shl
cmp
mov
leave
pop
cmpsb
shrd
ret
pop
adc
ds
cmp
mov
test
pop
xor
lcall
pop
shll
or
hlt
fidivl
pop
call
pusha
mov
xor
adc
out
cs
ljmp
in
ficomps
add
cmpsl
xchg
inc
int
insl
sub
ja
test
addb
mov
add
inc
fadd
push
or
inc
popf
and
push
jb
bound
mov
dec
imul
mov
mov
scas
out
jae
shr
add
jne
pcmpeqb
sbb
xchg
insb
cmpsb
jnp
in
mov
je
dec
rol
insl
arpl
cmp
jl
call
popf
lods
or
imul
jo
clc
pop
ret
in
pop
cltd
aaa
ja
mov
mov
adc
mov
outsb
add
push
ret
push
jo
leave
add
push
shr
js
mov
and
mov
je
int
or
rorb
movsl
cmp
insl
das
gs
xchg
cs
or
xor
xchg
in
aam
mov
xor
adc
xchg
or
orb
out
mov
ljmp
add
or
mov
aas
in
imul
dec
mov
aad
xchg
inc
icebp
loopne
fdivl
xchg
jbe
inc
int
push
xlat
push
sbbl
cmp
inc
xor
xor
lods
cmp
push
jne
add
test
es
ljmp
das
jmp
jp
fists
add
push
jge
cmpsb
mov
xchg
inc
scas
jnp
inc
cmpsl
dec
jecxz
mov
scas
push
repz
out
lea
jno
loop
out
mov
loopne
xchg
js
sbb
filds
rcrb
shll
push
jge
fdivl
dec
lahf
js
call
insb
mov
sbb
adc
cld
stos
sarb
test
mov
js
inc
mov
loopne
add
pop
jne
adc
jbe
lcall
outsb
inc
aad
dec
pop
cmc
jecxz
test
xor
pop
inc
addr16
mov
add
dec
fwait
jecxz
cli
icebp
rol
dec
push
int
push
pusha
not
push
mov
js
xor
push
lods
dec
cli
mov
cli
cwtl
mov
dec
push
sub
push
cld
jnp
push
or
ret
sti
fcoms
inc
daa
lahf
js
cmp
mov
loope
xlat
or
jno
sarl
or
sbb
push
lock
ds
push
ljmp
mov
dec
stos
xchg
pop
mov
call
imul
or
test
insl
mov
adcl
test
xor
roll
test
bound
nop
stos
divl
lret
sbb
shrl
mov
aas
int3
mov
push
dec
ljmp
lahf
mov
sub
jle
pop
jbe
or
mov
out
xor
mov
fwait
pop
pop
loopne
out
adc
lods
out
lcall
sbb
stos
clc
imul
or
test
add
mov
adc
inc
cwtl
hlt
out
mov
fwait
in
in
push
cmc
dec
xor
icebp
ror
aad
push
sbb
sub
xchg
push
dec
test
push
cmp
push
dec
stos
jbe
loope
jne
inc
add
push
fnop
cmp
std
fdivs
jo
add
cmp
hlt
xor
xlat
aad
adc
sub
jne
jne
pop
jb
cs
or
mov
loope
push
aad
fsubrl
jecxz
popf
fisttpl
std
mov
rclb
clc
mov
imul
adc
sar
ss
ds
adc
mov
clc
test
fcomi
insl
mov
lcall
cmp
loope
jp
icebp
out
sarb
sub
mov
je
das
test
xchg
ret
push
test
jo
sub
fiaddl
lds
jbe
loopne
ss
mov
or
jecxz
sub
xor
add
test
push
stos
sbb
pop
pop
xchg
sbb
icebp
stos
xor
xor
xchg
cmp
out
stos
daa
aaa
int
hlt
adc
push
jbe
cmpsb
dec
imul
popf
outsb
adc
popf
pop
arpl
xchg
mov
sbb
dec
pop
xchg
cmp
xor
fildll
cli
cmp
mov
inc
pop
adc
jne
clc
ficompl
xor
push
and
cmovbe
or
jnp
mov
push
mov
enter
out
push
scas
iret
ds
les
push
dec
cli
in
iret
xchg
sub
inc
lock
icebp
shrl
mov
xlat
fiaddl
cld
push
jmp
xlat
mov
hlt
cmp
in
xchg
ss
dec
stc
test
aad
shll
das
xor
or
jne
sbb
aam
mov
add
cld
fsts
push
repz
sbb
fisubrs
jmp
cmpsl
and
divl
imul
fcoml
jl
jge
jmp
jbe
aas
mov
sbb
jb
adc
je
fidivrl
cld
sub
lcall
or
mul
mov
mov
outsb
shrb
popf
andb
ret
cmp
fldt
subb
mov
push
lods
push
imul
jg
movsl
push
xor
or
mov
push
or
jb
cmp
inc
xor
jbe
mov
rorl
pop
inc
or
daa
cmp
fwait
aaa
xchg
nop
ret
jp
lock
xor
cmpb
call
mov
mov
cmp
sahf
fstpt
mov
pop
push
lds
sub
jp
adc
mov
outsb
pandn
xchg
adc
aam
loope
mov
fcompl
popl
out
jmp
sbb
xchg
ret
filds
jecxz
add
or
mov
mov
or
sar
test
mov
xchg
stos
push
sub
lods
popf
mov
pop
mov
imul
sub
mov
pop
aad
jge
sub
hlt
mov
loope
cwtl
clc
in
cmp
pusha
mov
mov
mov
int3
push
les
push
lret
mov
jmp
or
lods
loope
int
xor
and
xchg
inc
es
inc
test
iret
push
fmuls
sbb
les
fidivrl
add
lock
mov
div
mov
dec
and
sbb
fwait
xor
andl
mov
mov
fwait
add
in
jae
imul
adc
jne
xchg
loopne
inc
pop
mov
mov
adc
mov
pop
inc
jnp
push
push
or
arpl
rcll
ljmp
push
lret
jecxz
call
insb
push
ljmp
or
inc
aas
mov
mov
or
sti
sub
or
and
in
call
xchg
pop
xor
jne
je
pop
cmpsb
lock
push
jno
js
sub
nop
and
adc
adc
xor
adc
jnp
aam
shll
adc
push
popa
or
outsb
dec
lcall
mov
ret
jmp
cmc
jbe
mov
xchg
add
mov
cs
std
ljmp
sbbb
cmp
xchg
sub
adc
inc
call
cmp
loope
mov
xor
iret
inc
dec
push
movsb
shll
mov
aam
jle
repnz
cmc
push
jnp
sarl
push
test
mov
add
mov
fsubs
rol
ljmp
mov
xlat
fldl
mov
test
sub
sub
in
mov
adc
sub
jns
in
bound
lcall
iret
mov
jge
and
inc
stos
cli
aam
aam
inc
or
pop
stos
scas
std
daa
in
rcrl
xchg
pop
cmp
mov
popf
cltd
jb
jmp
xor
lea
mov
pop
mov
mov
inc
movsl
cmp
mov
ret
adc
lock
add
pop
xor
stos
dec
repnz
arpl
ret
push
push
fidivrl
and
pop
add
mov
and
cld
mov
xchg
orl
out
pop
hlt
icebp
jns
faddp
xor
mov
out
add
pop
ja
mov
int
jg
mov
xchg
fcoms
pop
das
test
je
add
call
mov
push
fildl
dec
cld
pop
mov
dec
pop
sub
lea
jge
and
sti
lock
push
xchg
and
js
mov
aas
cli
ds
rcr
mov
mov
mov
dec
gs
out
mov
jnp
dec
pop
icebp
cltd
pop
ss
test
test
outsb
pop
sub
push
mov
imul
xchg
mov
stos
jecxz
mov
dec
in
jl
int
pop
imul
mov
inc
loopne
fwait
iret
inc
pusha
ret
lods
test
mov
out
add
mov
mov
sahf
fadds
scas
aam
rolb
and
aas
clc
insb
adc
xor
push
test
in
outsl
cmpsl
out
dec
lods
jbe
sbb
xchg
jne
mov
inc
das
xlat
mov
pavgb
push
xor
mov
cmpsb
ljmp
lcall
push
fisttpl
sbb
movsb
and
inc
dec
mov
fildl
rclb
nop
mov
fldl
adc
jg
shrb
call
or
sbb
mull
icebp
xchg
push
negl
jl
dec
jge
pop
push
pop
mov
aaa
pop
jae
mov
add
mov
into
or
stos
lret
lock
dec
xchg
or
loope
jle
fldcw
imul
cmp
test
mov
push
adc
lock
add
xor
push
push
mov
fdivs
sbb
push
jne
mov
cmp
loopne
into
aam
inc
clc
aaa
aam
repnz
pop
aam
loope
adc
cmpsl
mov
sbb
sbb
sbb
sbb
sbb
nop
pushf
push
rcl
aad
xchg
adc
mov
test
jbe
jecxz
jnp
xor
js
mov
imul
mov
nop
ss
push
call
adc
mov
movd
jne
adc
jb
mov
shrb
mov
js
inc
dec
mov
inc
pop
fcmovu
mov
jnp
dec
mov
roll
js
cmc
out
les
iret
push
dec
fildll
ret
mov
fcomi
dec
leave
ljmp
sbb
push
in
out
mov
sahf
outsb
nop
lcall
fnstsw
fisubs
jle
aad
push
mov
out
push
add
fistpl
repnz
insl
loop
or
xor
lods
jnp
dec
push
inc
aad
xor
in
adc
adc
jnp
std
hlt
cmpl
xchg
or
ret
andl
lods
shlb
scas
arpl
test
mov
clc
call
in
lods
mov
cmp
cwtl
push
mov
push
es
incl
ljmp
push
ds
push
pop
sbb
clc
in
push
shlb
jne
mov
icebp
push
sub
jbe
fdivs
stc
je
push
xlat
lock
sbb
lock
sbb
call
jle
leave
jge
inc
jbe
push
xlat
ds
imul
xor
pop
xchg
loope
imul
nop
sub
cmpsl
push
sarl
aad
in
ljmp
clc
icebp
cli
pop
mov
in
pushf
lods
mov
insl
sbb
and
dec
aaa
loopne
push
cmpb
mov
hlt
inc
arpl
scas
outsb
jne
dec
push
mov
push
gs
outsb
loopne
xor
cs
jno
cmp
mov
sbb
push
ja
les
subb
cmp
imul
pop
aad
adc
mov
cmp
mov
clc
sahf
insb
mov
pop
jo
push
sub
xor
stc
inc
sub
jge
xchg
in
sbb
roll
andb
insl
lods
outsl
sub
and
pop
cld
loop
mov
mov
and
cmp
xchg
cmp
mov
xor
mov
int
out
shll
lock
addl
aam
add
js
mov
cmpsb
cmp
fwait
lret
inc
gs
bound
push
fsubs
stc
lods
sbb
popf
incb
mov
in
cs
mov
sub
in
sbb
adc
in
aaa
cmc
in
jmp
xor
and
push
xchg
aas
xchg
add
mov
sbb
xchg
or
call
xor
shll
imul
pop
ret
lret
xchg
sbb
sub
mov
jecxz
imul
add
pop
cltd
or
cmpsl
dec
push
sbb
xchg
pop
pop
push
mov
repnz
fmull
loop
pop
add
int3
or
add
cmpsl
ss
lds
call
mov
mov
xor
dec
aam
pop
arpl
dec
icebp
xor
js
xor
stos
sbb
js
and
jne
xlat
loop
push
and
adc
push
loopne
or
mov
pusha
addr16
and
dec
jbe
rcrb
mov
mov
jle
pusha
adc
mov
inc
mulb
cmp
mov
xchg
pop
pop
mov
add
pop
testl
xor
adc
add
adc
fldl
cmc
popa
xchg
inc
xchg
push
jbe
mov
mov
mov
outsl
pushf
dec
out
and
inc
push
scas
mov
sub
xlat
aaa
cmp
jbe
or
dec
or
jo
roll
cwtl
xchg
cli
sub
and
cmp
jp
stos
push
dec
mov
cmp
push
js
mov
add
movsb
mov
das
call
inc
insl
add
pop
idiv
jmp
lds
mov
mov
xchg
xchg
sub
xchg
fldt
insb
cmc
pushf
hlt
icebp
pop
mov
daa
sub
push
lods
sti
cmc
stos
jmp
mov
inc
mov
shlb
mov
mov
pusha
repnz
ret
cmp
add
mov
pop
xchg
icebp
xchg
test
fsubl
das
jmp
jne
mov
test
pop
or
xorl
sbb
enter
jmp
repz
mov
mov
mov
jmp
mov
mov
out
xor
aad
sub
shlb
outsb
cmp
fwait
lret
nop
out
lcall
repz
jle
push
or
push
loopne
ds
pop
add
shl
sbb
jge
mov
mov
jge
mov
cwtl
inc
sahf
sti
aam
fisttpl
mov
cmpsl
in
dec
xchg
sub
mov
fldl
js
mov
push
loopne
mov
jge
cld
dec
mul
jb
inc
mov
shll
sahf
sahf
out
rclb
fbstp
js
enter
cmp
scas
mov
ss
test
ret
cltd
and
mov
jnp
inc
aas
sbb
jns
xor
rolb
inc
inc
insl
loopne
cmp
mov
jl
mov
push
call
je
or
ja
loope,pn
inc
xor
mov
sbb
cmpsb
js
pop
dec
pop
imul
and
imul
adc
pusha
dec
dec
fildll
dec
pop
adc
add
daa
int
mov
ja
sbbb
ffree
movsbl
add
cmp
or
push
idiv
and
pop
push
xlat
inc
inc
retw
cmp
cmp
ja
xlat
into
pop
out
lret
movb
fcmovu
jecxz
jmp
fincstp
push
mov
pop
in
mov
vorps
xchg
bound
add
mov
lahf
push
jmp
clc
sbb
icebp
fwait
mov
xchg
in
out
cli
mov
push
sahf
test
loope
push
cmpsb
mov
mov
jge
popa
inc
fadds
hlt
sub
jae
mov
or
pop
pop
push
or
pop
sbb
loopne
in
loopne
sbb
jns
fsts
dec
test
sub
push
je
or
jecxz
mov
imul
pop
fstpt
pop
insb
lds
push
add
icebp
pop
mov
jmp
andb
jae
dec
pop
fnstsw
enter
movl
xor
sub
ljmp
loopne
pusha
mov
sti
sahf
cmp
cli
jnp
outsb
sbb
adc
aad
jbe
xor
in
push
mov
mov
sbb
pusha
mov
add
pop
leave
sub
imul
outsb
adc
fnstcw
pop
mov
movsb
cmpsb
iret
shl
jp
in
repz
xchg
jne
or
inc
cmpb
sub
dec
sbb
push
ja
lcall
js
pushf
sti
cmc
mov
fidivrs
int
insb
mov
xor
iret
cmp
dec
sbb
push
xor
cmp
sahf
xchg
scas
out
xlat
stc
imul
fstps
inc
add
adc
insb
sbb
sub
fs
call
pop
sbbb
mov
mov
xor
sbbl
in
cmp
pop
cmp
shrl
shl
jo
sub
orb
lods
xor
and
fdivrs
or
ret
jns
jns
or
pop
fwait
xchg
jbe
or
mov
pop
fsub
dec
jae
ret
mov
cmp
outsl
jne
inc
shr
add
aad
pop
sbb
ds
daa
addl
repz
mov
dec
inc
lret
movl
ds
pop
pop
inc
ss
insb
or
loop
rol
es
adc
sbb
push
orl
dec
dec
or
repnz
adc
pop
push
frstor
mov
outsb
fwait
mov
iret
add
xchg
sub
fnstcw
dec
push
jo
fistpll
orb
lret
pop
stc
clc
outsb
js
push
aaa
test
pop
inc
test
pusha
or
scas
or
add
loope
push
rcll
mov
out
jae
xor
clc
sarl
adc
xor
leave
frstor
das
nop
jle
sub
imul
pushf
add
in
insb
stos
dec
mull
inc
jb
jle
and
lock
gs
sub
fidivrl
or
add
or
jmp
mov
adc
sub
sub
rorl
std
inc
test
pop
in
sub
cmp
test
je
movsl
jb
js
adc
jp
xor
test
inc
stc
jmp
scas
aad
xor
ret
scas
cmp
add
xor
mov
mov
sbb
fbld
stos
inc
and
cld
test
jmp
subb
fsubrs
jp
idivb
lods
push
xchg
sub
sbb
pop
push
aam
mov
jecxz
jmp
lahf
shlb
xchg
add
sahf
pop
xlat
cmc
setno
notb
aam
out
aas
dec
ret
inc
or
jmp
leave
mov
imul
mov
mov
dec
cwtl
je
pop
stos
test
fcompl
pop
mov
psrad
inc
cmp
aam
cmpsb
scas
mov
jbe
xor
icebp
clc
mov
mov
sbb
test
adcb
jecxz
mov
jl
imull
insb
push
adc
jecxz
sbb
scas
mov
leave
hlt
lds
fisttpl
ret
int
insl
dec
jo
shrb
mov
mov
pop
sub
bound
jg
adc
pop
testb
popa
fs
or
xor
arpl
jo
cmp
mov
mov
push
int3
xchg
sub
pop
ljmp
xchg
push
bound
dec
push
adc
movl
stos
negb
ret
js
stos
cmc
aam
outsb
adc
pop
xchg
inc
loopne
cmp
add
jns
push
outsl
cmp
ljmp
and
mov
das
sahf
ss
out
mov
push
mov
test
xchg
jne
fs
xchg
int3
or
cmp
lock
jns
and
ret
aad
lds
mov
inc
fsubr
fnstsw
fnsave
mov
xchg
push
loopne
mov
nop
dec
xor
xchg
outsl
push
mov
or
mov
cmp
xor
sub
jmp
xchg
dec
adc
pop
lds
pop
push
cmp
sub
clc
xor
cltd
dec
das
push
ja
dec
aam
ds
or
aas
push
cmpsl
shrl
in
cmp
dec
sbb
outsb
push
cmc
push
mov
insb
push
jo
test
or
pop
stos
add
pop
imul
test
xor
clts
int
sbb
hlt
test
dec
out
stc
imul
pop
jp
cltd
push
aad
push
shll
cmp
or
rclb
dec
idivl
pushf
mov
ret
hlt
fwait
sbbl
les
jge
sbb
mov
aas
int
jmp
adc
lock
dec
jns
movsl
dec
mov
push
bound
mov
mov
mov
ret
fimuls
mov
in
pop
loopne
testb
adc
fdivrl
lods
xchg
pusha
arpl
push
inc
sbb
add
xor
pusha
in
xchg
cmp
stos
cltd
loope
stos
add
fdivs
sahf
fcmove
mov
in
push
sbb
push
loopne
jle
adc
xchg
dec
pop
je
jp
out
pop
push
sub
xchg
sub
mov
xchg
mov
jnp
idivb
arpl
mov
inc
xchg
push
xchg
and
jo
inc
fnsave
lret
push
cmpsl
sbb
clc
xchg
mov
cmp
mov
jl
call
cmp
jecxz
into
push
mov
pop
je
fcomps
and
int3
clc
shll
mov
jne
push
pop
jg
stos
subl
loopne
inc
mov
dec
jl
in
lcall
lcall
jge
push
rcrb
fdivrl
loopne
fisttps
into
arpl
mov
sti
push
jl
subl
incb
cmp
ficoms
js
fisubrs
jmp
shl
mov
or
mov
aad
sbb
cmovge
pop
add
popf
sbb
aas
xchg
mov
push
rorl
es
dec
je
jmp
dec
or
in
arpl
outsb
lock
mov
sub
jb
test
jp
or
in
pushf
mov
scas
adc
insb
jo
pop
out
orl
xor
mov
scas
push
jb
cmp
into
xchg
insb
paddusw
adc
imul
lahf
push
ljmp
scas
pop
mov
popa
orl
push
ja
push
lock
xchg
jecxz
add
cmp
cmp
cmp
fucom
jnp
rcrb
lods
pop
or
inc
out
ret
cmp
inc
ja
add
cli
push
sbb
inc
push
out
ret
add
push
lcall
add
sarl
lds
iret
push
inc
rolb
mov
std
cmp
sbb
movsb
cld
cmc
adc
sub
out
push
hlt
aad
dec
add
sbb
imulb
decl
mov
loopne
cmovno
adc
jl
je
mov
push
call
jnp
jl
sub
mov
pop
testb
bound
sbb
int
mov
stos
xor
sbb
mov
cmp
movsl
fldcw
lock
lret
jns
ss
mov
adcl
fs
cwtl
aas
cmp
sahf
push
call
pop
mov
dec
mov
sub
cmp
daa
inc
mov
pop
push
inc
insl
xchg
cmp
mov
xor
jge
dec
mov
push
movsl
sbb
.byte
mov
adc
or
push
je
imul
add
push
mov
add
mov
jg
cmp
jg
lea
in
push
and
lea
cmp
das
mov
lea
cmp
jg
xchg
ja
mov
clc
xchg
mov
lea
inc
inc
mov
add
mov
pushl
add
call
jne
jg
mov
aaa
xchg
or
xchg
mov
neg
filds
pop
push
push
lea
insl
mov
fmuls
jne
gs
lret
lods
or
and
mov
in
mov
inc
inc
inc
ret
push
mov
loope
jno
std
jg
lea
pop
pop
pop
ret
jmp
rolb
or
enter
cwtl
or
enter
mov
enter
lods
test
clc
or
xor
popa
bound
call
idiv
lcall
inc
mov
mov
and
cmp
cwtl
lsl
inc
es
push
add
ret
add
push
lcall
insl
mov
mov
push
ret
xchg
es
pushf
mov
ljmp
divb
sbb
cli
lret
test
inc
add
and
lret
sbb
or
int
sbb
adc
cmp
dec
mov
lret
pop
bswap
and
and
mov
lret
push
pop
and
and
iret
mov
sub
sbb
repnz
and
cs
fldenv
das
fimull
sub
mov
pop
xchg
dec
mov
aaa
aaa
dec
addr16
popa
and
inc
popf
sub
and
mov
cs
int3
in
enter
sbb
sbb
int3
and
outsb
mov
cs
inc
mov
insb
outsb
mov
mov
je
outsl
and
jge
lret
ret
inc
lcall
mov
and
adc
pushf
jns
dec
lods
ds
dec
out
lret
sbb
icebp
push
mov
stc
or
sub
sub
aaa
cld
jg
stos
inc
mov
jl
stc
adc
int3
and
sti
in
stc
out
add
scas
or
stc
or
xchg
jmp
mov
and
mov
mov
and
push
mov
out
jmp
loop
sbb
mov
pop
orb
ret
out
cmc
lret
fdivrp
les
int
rorb
mov
inc
mov
and
jbe
loope
loope
pushl
push
cwtl
and
sbb
int
loopne
ficompl
je
and
adc
and
push
mov
ret
inc
xor
divl
xorl
cld
or
jb
or
add
or
out
mov
inc
adc
ret
push
out
outsl
jg
rorl
add
pop
adc
outsb
mov
or
adc
and
xor
and
arpl
inc
andb
xor
lret
out
das
pop
xor
ss
into
int3
sti
sbb
dec
fnsave
pusha
popa
out
insl
cmp
mov
arpl
into
sbb
xor
sbbb
ficompl
in
lret
or
pop
jge
aas
iret
mov
xor
dec
adc
mov
xor
jns
lahf
arpl
mov
cltd
and
push
mov
fsubr
sahf
jnp
adc
popa
fisttpll
fs
sbb
push
xorb
aaa
inc
dec
dec
cltd
fwait
dec
mov
xor
jae
das
push
enter
jbe
mov
xchg
mov
and
call
push
pop
ret
shrl
hlt
mov
mov
outsw
fistpll
mov
cmp
jmp
mov
xor
neg
fwait
sti
add
test
jne
or
hlt
jmp
adc
jge
imull
hlt
mov
in
nop
inc
add
mov
call
cld
call
out
mov
add
and
adc
jge
stc
pushl
rorb
or
add
inc
in
movl
stc
mov
mov
mov
or
xchg
mov
add
jmp
xor
xor
ds
shlb
imul
sub
adc
popa
ud1
sub
xchg
sbb
nop
push
or
ss
ss
out
dec
rcll
sub
cmp
sbb
pushf
sar
in
call
dec
in
jne
ret
sbb
mov
dec
outsl
popa
fs
imul
sbb
leave
call
jb
jne
insb
push
jb
je
arpl
jb
add
insb
xor
jbe
dec
gs
outsl
sub
sbbl
jge
leave
jg
orl
mov
cmp
stc
mov
inc
cmp
jg
mov
xchg
jl
sti
sbb
and
mov
jmp
jg
int
dec
add
xchg
mov
cmp
dec
xchg
sbb
icebp
cmp
inc
mov
mov
call
add
add
mov
mov
test
mov
mov
xor
je
les
scas
add
fwait
addr16
fstps
pushf
clc
lock
sub
fsubrl
sub
add
mov
cmp
dec
in
insl
mov
and
jne
stc
std
divb
add
dec
je
mov
sbb
lcall
lcall
mov
mov
ss
mov
adc
test
mov
out
add
sub
fmuls
clc
push
mov
jmp
xor
mov
xchg
icebp
sahf
adc
data16
out
in
lea
iret
mov
ss
lcall
int
jne
pop
clc
popf
and
fwait
pop
dec
fcomp
out
mov
or
inc
cli
or
push
push
push
jnp
divl
cmp
sbb
test
insl
push
push
or
sbb
fcomip
sbb
mov
ja
fsts
pop
in
pop
pusha
sbb
mov
or
jns
loopne
mov
mov
loope
inc
mov
and
sbb
jmp
jl
or
jnp
xor
mov
mov
or
inc
cmp
jg
mov
std
mov
mov
cmp
jnp
aam
cmp
hlt
cmpsl
jp
xchg
cmp
push
xor
inc
inc
pop
sbb
lock
fsubrs
adc
xchg
lcall
mov
and
jl
push
loope
sbb
adc
rcrl
outsl
sti
icebp
cmp
sbb
mov
add
sbb
add
je
dec
xchg
xor
dec
jl
push
fidivl
sub
ds
adc
sbb
or
inc
std
into
es
jns
lea
or
cld
or
ret
or
cmp
testb
inc
cmp
add
dec
cwtl
in
or
ret
jo
ss
daa
fdivr
lea
insb
and
js
jle
arpl
jmp
and
dec
push
xor
jnp
movsb
bound
push
in
cwtl
insb
mov
fmull
pop
mov
loopne
sbb
jno
mov
pop
leave
rdpmc
cmp
jae
adc
or
jne
or
cmp
hlt
data16
test
adc
jae
aam
in
pusha
das
pop
jl
mov
pop
jb
cmp
loopne
gs
in
inc
and
pop
imul
mov
pushf
add
arpl
in
inc
pop
push
pop
and
jno
es
in
xchg
insl
mov
aam
ds
or
popa
xchg
sbb
push
mov
ret
sbb
dec
mov
addb
sub
addr16
into
lcall
push
xchg
sbb
cld
xor
ret
js
cld
adc
add
pop
push
mov
sar
lea
pop
test
inc
mov
bound
mov
gs
ret
pushl
gs
xor
cs
insb
sti
inc
gs
arpl
insb
stc
jbe
fs
jae
and
outsb
imul
je
pop
movb
ja
sti
add
add
dec
push
mov
lret
xchg
outsb
hlt
nop
cld
xor
push
fldcw
ja
adc
mov
dec
add
or
or
pop
mov
mov
stos
mul
ss
jbe
jg
mov
pop
add
mov
mov
xchg
inc
inc
ja
call
xchg
jb
sbb
aas
clc
cmpb
sbb
and
pushf
test
jae
jns
je
sbb
inc
or
sbb
sbb
and
clc
imul
lcall
arpl
sahf
mov
xchg
stos
cmp
inc
pop
jb
mov
add
pop
dec
mov
or
sub
popa
mov
lds
into
dec
dec
sbb
loope
mov
add
pop
arpl
add
or
cmp
ds
mov
dec
clc
mov
mov
mov
jl
sbb
sub
push
adc
push
jmp
pushf
ret
xchg
mov
test
xor
ds
mov
clc
mov
outsl
rcr
xor
sbb
xor
cmp
xchg
pushf
xchg
or
or
push
ret
cmp
fldenv
fs
nop
add
inc
lds
sbb
mov
add
jno
les
cmp
add
mov
xor
mov
mov
adc
pop
lea
jae
add
out
ror
adc
adc
enter
dec
lock
fsubl
or
push
cmpsb
in
pop
xchg
mov
add
mov
mov
jo
push
push
cmp
lea
mov
negl
sub
add
sbb
ret
add
add
mov
aam
lock
testl
add
addw
ja
pop
sti
cli
or
test
xor
adc
test
push
scas
popa
out
or
mov
add
add
aas
inc
mov
xor
xor
cmp
and
dec
cld
xchg
nop
mov
add
jecxz
inc
and
push
xchg
xor
dec
aam
mov
inc
rolb
test
add
fdivrl
mov
add
mov
stos
push
enter
mov
das
mov
jb
add
rclb
sub
add
xchg
mov
or
mov
mov
add
pop
xchg
mov
or
pop
and
mov
add
pop
incb
mov
stc
jmp
sbb
clc
sub
or
add
cmp
je
lret
cld
fcmovnu
add
sbb
add
lods
add
add
jl
popa
fdivrp
aam
dec
and
enter
sub
mov
add
inc
jne
decl
add
add
das
pushf
add
xor
mov
sti
add
in
push
pop
sbb
add
or
add
repnz
jb
add
cmp
add
pop
je
add
repnz
or
xchg
add
xchg
fucomip
xchg
out
popa
pop
movsl
out
pop
add
add
divb
xlat
pop
or
add
pop
cmp
pop
test
ljmp
sub
add
xchg
jo
lea
jnp
das
mov
push
jge
repnz
inc
aam
orl
fstpt
add
mov
mov
sbb
or
repnz
insl
fisttpl
sub
js
adc
lock
hlt
test
orl
rorb
dec
push
add
mov
add
add
pop
push
and
pop
loope
popa
or
push
mov
test
mov
gs
ja
aas
jg
add
or
fidivl
ret
add
add
mov
decb
xor
cmp
add
fs
mov
roll
dec
roll
in
jp
jnp
xor
push
pop
testl
or
in
jbe
jl
add
add
out
add
pop
add
mov
pop
mov
lret
jge
dec
jle
outsb
sti
add
loope
add
add
sbb
mov
ret
adc
out
jmp
pop
rcrb
in
add
pop
fisubrs
repnz
mov
add
scas
and
icebp
mov
fsubrs
mov
cmp
push
xor
sub
loopne
add
mov
stos
xchg
dec
adc
jbe
test
cmp
xor
push
xchg
push
mov
xchg
mov
popa
jns
mov
mov
sahf
rol
mov
lret
inc
mov
out
sbb
jae
jl
scas
add
mov
outsb
add
mov
fdivrs
inc
rolb
xchg
cltd
divl
xor
inc
ds
dec
outsb
outsb
fistpl
xor
bound
fcompl
sbb
xchg
daa
jmp
jbe
push
push
fcomps
cld
add
loope
xor
filds
cwtl
outsb
or
js
adc
dec
dec
adc
stos
or
mov
jnp
fldt
xchg
add
movb
push
insb
mov
xchg
and
xor
movsl
lea
xchg
xchg
inc
out
popa
dec
movsl
lods
fdivrl
cmp
mov
int3
mov
cmpsl
dec
jne
iret
jge
pushf
mov
dec
lret
inc
fildl
and
jae
daa
xor
cmpsb
and
popa
int
lods
jnp
mov
push
jbe
add
jnp
cs
mov
fnsave
sbb
cwtl
push
sahf
mov
sub
dec
outsb
xchg
insl
shrl
into
sbb
xchg
or
iret
scas
hlt
jmp
add
daa
add
mov
outsl
into
push
mov
iret
leave
icebp
aad
mov
loopne
or
aaa
in
jbe
dec
aam
popf
mov
or
ret
xchg
es
add
fidivrl
pop
push
out
mov
or
fsubrl
add
add
lds
xor
shrb
out
cltd
lods
test
call
cmp
mov
aas
jecxz
ss
jp
adc
iret
pusha
into
cmp
fcmovbe
jl
outsl
stos
cmpsb
fiadds
add
mov
jl,pt
sbb
mov
hlt
fistpl
push
mov
mov
fidivrs
push
shll
mov
das
cmp
fcompl
not
int3
jge
insb
aas
movsb
push
into
ret
shrl
loop
stos
push
dec
mov
loope
mov
adc
jnp
jmp
pop
int
cmp
into
rcrl
xlat
or
cltd
gs
fimull
or
pop
or
push
sbb
add
sbb
mov
jmp
pop
and
mov
jno
or
repz
popa
sbb
jae
xor
call
jle
mov
push
into
add
jle
cwtl
ljmp
mov
data16
jns
ja
cmc
scas
pop
jae
mov
push
or
in
or
add
or
psllw
and
scas
shll
in
cmp
mov
shl
push
or
aam
xchg
fwait
sbb
mov
adc
adc
hlt
ja
xorl
outsl
xor
xor
fnsave
les
in
lcall
lea
push
sub
xchg
shrb
mov
stc
rcrl
mov
data16
insl
loopne
pop
das
cmp
adc
lods
xchg
mov
jmp
jae
in
sub
pop
enter
sbb
mov
jle
push
test
inc
movsb
cmp
mov
outsb
fstl
sahf
or
rcrl
imul
stos
test
mov
xor
jg
push
cmc
xor
in
sar
mov
mov
cld
arpl
xchg
jl
es
mov
jnp
xor
std
cmp
xlat
fldl
jo
jae
cwtl
pop
inc
je
mov
push
adc
fdivrl
std
mov
hlt
fwait
ja
mov
mov
cltd
fs
shlb
push
jle
arpl
lret
push
std
jo
shll
roll
pop
rcrl
pop
add
dec
fwait
mov
into
cmp
dec
push
xor
push
inc
push
add
cmp
loop
inc
mov
and
fildll
das
dec
sbb
add
pop
push
outsb
mov
jae
loope
imul
sbb
cmp
or
roll
aad
in
cwtl
lret
mov
aaa
ret
loop
inc
push
mov
ja
or
scas
cmpsl
je
in
mov
mov
sub
mov
shl
or
sub
xlat
inc
inc
push
rcr
sbb
jno
mov
ja
xchg
mov
adc
sbbl
lock
push
xchg
lret
decl
dec
mov
add
bound
outsl
xlat
imul
aam
and
not
dec
in
popl
call
hlt
rol
ret
imul
fwait
sbb
insl
rorb
dec
call
sub
cmpsl
inc
fcmovnb
inc
adc
dec
fwait
xchg
jle
jle
push
lea
sub
call
sbb
into
mov
clc
test
jo
lods
push
rcll
cmpsl
xchg
cmc
and
fbld
jg
xor
into
cltd
stos
mov
daa
sbb
test
pop
imul
shlb
scas
mov
sbb
aas
outsl
cltd
adc
out
ja
push
and
iret
sbb
pusha
popa
dec
xor
and
push
jp
inc
adc
scas
jo
icebp
clc
daa
cmpsl
loop
dec
scas
orb
sarl
dec
mov
enter
add
adc
loop
dec
bound
sub
sbb
jl
or
mov
shll
mov
sub
pop
ss
add
insb
hlt
aas
mov
and
arpl
jle
jo
push
lods
add
repnz
icebp
pop
out
test
leave
int3
repnz
or
push
mov
and
mov
stos
ss
xchg
mov
mov
push
shll
lds
xlat
les
aam
adc
or
jecxz
ljmp
sahf
fisttpl
imul
adc
and
mov
int3
in
daa
stos
dec
cmpb
mov
mov
in
std
lock
nop
nop
sbb
or
inc
cmp
sbbl
data16
addr16
call
jno
test
loope
cmp
inc
stos
cli
scas
cwtl
xlat
xchg
mov
sbb
push
pop
nop
adc
hlt
cmp
add
push
inc
test
aad
outsb
or
adcl
arpl
aad
cmp
push
xchg
outsb
ret
fstps
push
out
pop
add
jle
popa
in
lea
jp
add
pusha
ja
jl,pn
out
int
push
jcxz
or
pop
xorb
push
push
dec
repnz
pop
ja
sbb
bswap
orl
popf
cmp
loop
rcrb
dec
mov
or
outsb
lods
push
add
xchg
scas
iret
xchg
fcom
jmp
jns
inc
test
inc
stc
push
mov
cmp
ds
or
push
add
pop
jns
pushf
add
mov
divl
fistps
xor
rcrb
and
push
push
jbe
cmp
nop
jnp
in
cmp
rcr
cmpsl
in
pop
js
mov
mov
adc
ret
imul
fninit
jbe
add
popa
jnp
jbe
cmp
or
into
mov
lcall
mov
jmp
xchg
lock
mov
jnp
push
loop
xchg
or
in
shr
pop
fmul
cmc
xchg
js
jp
rol
or
mov
aad
push
out
mov
xlat
out
mov
int
lds
out
sahf
mov
dec
and
adc
and
push
mov
aaa
dec
inc
push
imul
dec
ret
and
sbb
dec
mov
xor
jmp
lock
jno
loopne
xorb
dec
cmpsl
pop
sbb
cltd
cwtl
out
inc
push
sub
or
dec
mov
fstpl
hlt
adc
fwait
lcall
enter
mov
xlat
lock
mov
and
sub
jbe
divl
jecxz
xlat
adc
daa
sbb
pop
lea
adc
inc
es
jle
pop
int
enter
xor
jl
cmpsb
pop
mov
cmpsb
je
outsb
or
pop
sti
arpl
lods
rcl
retw
not
outsb
dec
movsl
inc
mov
push
outsb
cli
mov
cmp
and
mov
mov
dec
fwait
xchg
jge
aaa
pop
notb
jl
sub
push
mov
push
addl
inc
sbb
jmp
repnz
mov
in
pop
ss
scas
sbb
adc
push
cwtl
inc
call
cli
pop
cld
xor
jne
incb
mov
dec
mov
sbb
in
fxch
js
mov
les
lahf
sbb
hlt
les
shlb
inc
loope
cmc
pop
mov
mov
in
ret
subb
sbb
fcmovu
dec
xor
orl
add
push
pop
insb
mov
xor
lcall
add
pop
add
dec
bound
jmp
minps
out
jmp
xchg
mov
jno
dec
cmp
sbb
pop
mov
scas
xchg
call
jp
xlat
push
push
in
adc
repnz
call
out
sbb
outsl
lock
shl
insl
mov
sbb
out
inc
pop
lret
push
mov
cmp
lock
sbb
loopne
loop
cmp
sbb
adc
mov
xchg
popf
and
aam
jae
mov
xchg
xchg
mov
add
push
lock
add
jmp
jns
xlat
push
xchg
dec
cmp
ret
jnp
cld
inc
js
pop
out
fildl
xor
lods
jae
pop
xlat
mov
mov
dec
mov
sub
mov
insl
jmp
mov
and
js
lret
sub
mov
fcmovu
mov
lock
orb
and
xchg
imul
sbb
jmp
sbbb
push
ret
notl
mov
and
inc
fldcw
mov
adc
das
call
clc
xor
pop
and
jle
lods
jne
and
inc
sti
push
mov
cmp
in
pop
jne
stos
push
daa
loopne
push
add
test
pop
mov
sub
andl
sub
dec
imul
inc
xor
push
loopne
ja
insl
dec
fucomp
stos
pop
loop
fwait
push
and
push
adc
cld
mov
sbb
lahf
sbb
cmc
inc
movl
and
or
ret
mov
xchg
bound
clc
insl
std
mov
movsb
je
cmc
add
fiaddl
sarl
mov
rol
arpl
mov
rcr
pop
pusha
ss
popa
std
xchg
imul
pop
pop
dec
or
fmull
jp
out
pop
je
dec
js
dec
mov
push
dec
pop
pop
jae
jmp
push
outsb
push
imul
fwait
sub
lahf
lea
int3
xor
mov
fiadds
movsl
pop
pop
mov
and
mov
jg
pop
loope
insb
jbe
daa
sub
sub
into
mov
mov
ss
lock
movsl
cmp
sbb
sub
arpl
xchg
jp
jmp
jp
add
ds
mov
inc
inc
dec
int3
mov
xlat
mov
mov
mov
lcall
insb
mov
sarl
or
xor
jl
into
inc
pop
mov
mov
adc
mov
ret
dec
in
sbb
cltd
lods
xchg
lcall
mov
je
out
cmp
xlat
xchg
mov
xlat
jge
insb
jb
leave
data16
add
mov
clc
push
ret
jecxz
and
cmpsl
out
mov
movsl
stos
xchg
std
mov
jne
out
add
and
push
mov
fucomi
add
iret
pop
in
test
sbb
mov
loop
loopne
pop
xchg
cmp
int
adc
cmp
mov
pcmpeqd
lahf
jbe
push
insb
push
fcomp
movsl
xchg
insb
clc
mov
aas
dec
push
mov
mov
ret
or
jo
jge
inc
test
dec
mov
lret
movsb
fs
xlat
repz
mov
cmpb
jbe
aad
mov
js
cmp
repnz
pop
rol
faddp
ret
and
dec
mov
adc
mov
cmp
cmp
and
fistl
dec
push
roll
or
dec
sbb
nop
lock
loop
push
adc
push
jle
ds
mov
fildll
es
push
loop
xchg
jnp
xchg
sub
fcom
pop
movl
out
lea
add
push
loope
pop
repnz
out
out
xor
mov
out
jb
mov
leave
mov
aam
mov
xor
js
xchg
push
addr16
stos
subb
clc
or
inc
dec
push
movsb
pop
rorb
lods
sub
inc
sbb
dec
mov
jb
rcrb
fwait
add
dec
pop
imul
or
scas
aaa
ret
inc
jg
pop
out
jnp
push
inc
lock
ret
aad
arpl
push
in
jge
sar
fsubrl
fmull
ficomps
jo
popa
divl
sub
pop
insb
sahf
sub
mov
not
icebp
movsb
cmp
sbb
lea
xchg
adc
or
cmp
fwait
jecxz
cmp
addr16
jmp
mov
pop
cmpsl
sbb
xlat
dec
fstpt
mov
xlat
add
filds
andb
jno
xchg
cltd
mov
test
sub
mov
cmp
in
in
call
cmp
ja
sub
aad
aas
adc
lods
fsubrs
dec
mov
pop
pop
in
mov
js
cmovno
movl
or
fisttpl
pop
cli
sub
les
ret
test
xor
mov
push
dec
xor
test
out
sti
loope
cmp
push
test
int
push
mov
mov
stos
mov
sbb
int3
cltd
mov
adc
mov
aas
ror
icebp
jge
leave
sub
shll
mov
jne
je
in
adc
pop
insl
ffree
in
cmp
pop
pop
daa
iret
fiadds
inc
jecxz
mov
fwait
jo
add
loopne
dec
inc
mov
add
jp
mov
into
aad
and
pusha
sahf
out
inc
gs
ss
sarb
test
jne
daa
jg
add
test
mov
jle
aad
cli
xlat
inc
imul
jge
sub
sub
in
fcmovbe
pop
pand
pop
ret
lret
and
lahf
ja
lock
xor
add
in
inc
push
inc
icebp
add
shlb
push
jae
fidivrs
aas
cmp
push
and
dec
insb
andb
sahf
or
shlb
adc
xorb
cmpsl
push
xlat
jge
push
sahf
mov
jbe
or
mov
scas
pushf
adc
jle
adc
or
push
into
aam
scas
fcmove
mov
sub
roll
adc
insb
pand
test
dec
sub
push
cmp
cmp
mov
jno
add
frstor
jne
adc
mov
fnsave
add
loope
js
cmp
lahf
jbe
mov
mov
push
or
sarb
push
sub
fcmovbe
repnz
jo
js
jp
testl
fsubs
into
loopne
ss
mov
aas
imul
stc
sub
test
mov
movsb
fdiv
rolb
into
fistpl
sbb
sub
mov
adc
sarl
mov
ret
std
loop
in
cmpsl
into
rcrb
sbb
out
shr
insb
test
jl
push
mov
cmp
push
jns
jnp
xchg
pop
sbb
sti
adc
iret
dec
and
das
mov
xchg
shr
test
push
in
scas
lret
repz
aas
shl
icebp
mov
sbb
stc
or
push
out
mov
bound
jge
cmp
rol
jne
cmp
es
repz
insb
out
xlat
in
or
sti
xchg
movsb
adc
ret
in
fwait
iret
bound
jge
mov
inc
lret
js
jmp
loope
loopne
sbb
jae
filds
sbb
inc
jmp
loope
jne
lea
xchg
add
jg
in
push
popf
xor
jo
dec
aas
hlt
call
pop
sbb
lock
jmp
push
jns
addr16
ljmp
jae
or
lea
sub
sub
cmp
push
loope
xlat
mov
pop
int
dec
pushf
fistps
sbb
sbb
mov
bound
cmp
and
cmp
add
inc
xchg
jl
sarb
push
aam
js
sti
push
adc
lret
push
inc
js
shr
mov
mov
mov
mov
jg
sbb
sub
mov
popa
andl
scas
jmp
dec
and
out
jae
fcmovnb
mov
movsl
sub
inc
xchg
jmp
xchg
leave
and
loope
pop
call
std
push
cs
aas
lock
repnz
inc
jmp
xlat
mov
sbb
hlt
add
loopne
bound
outsl
sbb
pop
outsb
cmp
ret
stc
repnz
arpl
aad
cmovnp
mov
push
outsb
leave
or
dec
leave
xor
shrl
jo
mov
sbb
decb
loopne
scas
into
lea
and
idiv
sbb
pop
fistpl
ja
mov
sbb
rcrl
sub
sbb
push
arpl
sbb
into
and
scas
cmp
mov
mov
mov
mov
pop
js
push
and
xor
mov
jbe
cmp
hlt
rol
jns
or
call
cmpl
jle
pop
fimuls
jno
xor
test
xchg
shll
cmp
jge
add
sub
movl
pop
cmpsl
lahf
pop
cmpsb
mov
dec
add
add
out
mov
out
sarl
cmp
enter
cmp
popl
pop
mov
cmpsl
out
jmp
mov
imul
imul
cmp
add
xchg
pop
fistps
dec
adc
rorb
in
cli
ljmp
mov
xor
or
cmp
clc
push
inc
push
adc
push
mov
lock
pop
pusha
addr16
jbe
and
fnsave
push
pusha
xchg
or
mov
xchg
push
ss
jp
xlat
pop
and
jg
inc
adc
xor
rclb
mov
cs
push
push
dec
ffree
ja
popf
je
push
loop
cmpb
add
push
add
mov
rclb
imul
hlt
movsl
frstor
adc
ds
outsb
mov
jno
sub
xor
rolb
sub
and
inc
ja
in
cld
adc
fstp
jle
sub
xchg
add
and
or
jne
cld
repnz
movsb
mov
pushf
mov
andb
cmpsl
pop
sbb
jno
push
neg
cmpsb
movsl
scas
xchg
sbb
mov
call
leave
hlt
out
xchg
and
mov
nop
dec
adc
fistpl
test
cmp
pop
cmp
add
je,pn
addl
mov
add
sbb
jecxz
pop
xchg
dec
iret
cmpsl
aas
pop
push
jle
push
scas
test
pop
movsl
popf
inc
mov
jnp
addb
mov
sbb
fwait
mov
inc
adc
mov
or
ja
inc
push
pop
fldt
aaa
push
popaw
cwtl
push
outsb
ljmp
mov
dec
jge
xchg
clc
pop
call
inc
std
dec
and
add
xchg
mov
lods
insl
lods
pop
int
cld
fwait
je
xchg
and
jno
add
jp
outsl
or
movsl
fsubrs
xor
je
aaa
and
push
xor
xlat
scas
aad
inc
ret
add
jmp
movzwl
sub
fbstp
les
pop
es
sub
mov
ret
sub
rcr
pop
cld
lock
ret
sbb
testl
jecxz
je
adcl
pop
cs
pop
jp
cmp
rcr
das
icebp
cwtl
shl
mov
push
cmc
xchg
mov
or
jns
sbb
jecxz
neg
test
shl
stos
and
scas
arpl
dec
jmp
jecxz
jge
imul
or
and
in
ret
std
loopne
movl
jnp
xchg
sbb
je
mov
into
adc
aas
or
cmc
cmc
mov
test
ret
daa
and
in
xor
aam
jmp
jb
outsl
pushf
orl
shrb
jno
inc
ss
sbb
gs
pop
stos
insl
push
dec
fimull
xchg
loop
ja
jae
xor
insb
mov
lcall
xor
test
ja
inc
mov
jle
lahf
push
loopne
arpl
loope
and
xchg
adc
sbb
adc
cmc
lea
in
and
mov
jne
insb
push
jne
jecxz
jecxz
cwtl
cmp
pop
das
jnp
mov
sbb
jl
sub
mov
pusha
ja
dec
test
shll
lods
jecxz
aas
lret
xchg
fyl2x
pop
pushl
add
rcrl
mov
mov
cmp
call
jno
jb
jbe
fdivl
popf
adc
push
sub
mov
inc
push
lahf
mov
sub
repnz
push
pusha
ret
jo
mov
cld
xchg
ds
jo
mov
push
lret
push
mov
das
repnz
lahf
aaa
add
das
dec
fstps
mov
or
and
mov
push
sub
fisttpl
fisttps
xor
stos
sbb
loop,pn
mov
sub
jbe
push
ror
xor
lods
xor
adc
add
loop
pop
mov
sahf
test
negl
fistpl
push
pop
jg
cmp
sbb
push
outsl
xorb
mov
mov
push
jns
mov
mov
aam
addr16
std
mov
leave
mov
ja
imul
arpl
nop
cli
push
repz
aam
es
xlat
mov
insb
imul
stos
and
ljmp
or
jbe
xor
std
cmp
repz
cli
js
jnp
cmc
outsl
mov
xlat
xchg
xorl
movsb
inc
test
adc
adc
cmpsl
addr16
bound
xchg
or
fistpl
sahf
leave
adc
outsb
mov
shl
mov
jl
imul
imul
jne
scas
push
mov
jbe
shr
and
and
mov
lcall
mov
ficomps
xlat
xor
jb
jle
cmc
sub
mov
pop
hlt
cmp
xor
pop
add
pop
pop
jle
hlt
lds
or
aas
fiaddl
ja
lods
push
es
ds
and
push
mov
push
pop
mov
outsb
test
jg
movsb
or
and
mov
arpl
xchg
test
dec
out
sbb
push
adc
mov
ret
ljmp
stos
sub
loope
sti
lock
xchg
adc
dec
or
and
es
aad
mov
leave
jo
imul
or
arpl
push
jl
fidivl
insl
sti
ss
sub
fdivrp
inc
shrl
daa
cmp
and
pop
test
fiadds
fldt
mull
subl
fadd
or
dec
ja
daa
mov
xor
cwtl
popa
inc
data16
or
mov
fnsave
rcrb
add
daa
loopne
jecxz
loop
sbb
mov
inc
div
fstp
insl
icebp
stos
jne
push
imul
mov
xchg
sbb
lret
mov
nop
or
out
ljmp
mov
js
imul
mov
mov
fmuls
imul
lock
xchg
xor
cmp
jge
movsl
xchg
sarl
stc
xor
std
mov
sub
out
add
cmpsb
mov
xor
roll
in
mov
push
or
mov
jbe
lcall
xor
add
rep
leave
std
movsb
lods
inc
xlat
jmp
shr
push
sti
add
neg
mov
lock
sub
sub
lock
xor
ret
push
xor
jle
dec
mov
fbstp
cmp
iret
jge
jp
inc
faddl
xchg
fdivs
loopne
cs
lock
cmp
loope
test
int
jl
fwait
ss
cmp
cmp
test
adc
mov
xor
sahf
in
push
push
mov
les
sbb
mov
and
hlt
mov
xor
aam
outsl
pop
or
push
dec
insb
mov
dec
bound
cltd
out
jmp
mov
orl
lock
lret
test
mov
sbb
dec
lods
stos
sub
or
leave
xor
jp
dec
sbb
sbb
jno
scas
mov
bndldx
or
adc
addl
and
rcr
add
cmpsl
insb
sub
fnsave
fnsave
mov
decl
lock
lock
pop
xor
pop
jae,pt
pop
inc
inc
cmpsb
loope
test
dec
xchg
xchg
add
sub
cmpb
in
jmp
sbb
cmc
in
cltd
movsl
add
popf
andl
ljmp
push
inc
mov
outsl
aam
rcl
stos
imul
or
inc
jae
jmp
loope
mov
xchg
fimull
pop
inc
fisttps
idiv
aad
into
sti
ljmp
inc
lret
testl
stc
scas
jbe
data16
dec
lret
shl
adc
in
inc
ficoml
xor
push
fmull
xchg
cli
ss
push
pop
mov
jle
jo
lock
sahf
orb
outsl
loop
mov
mov
fsub
es
sbb
popf
mov
arpl
out
rcl
call
pop
jbe
mov
pop
sbb
or
pop
cmp
mov
jno
clc
clc
enter
or
add
outsb
cld
add
mov
jg
mov
cmp
adc
push
insl
jns
inc
cli
mov
fdivrl
sub
lahf
jno
orl
scas
aas
ss
int
std
jb
cmp
les
out
stos
ja
adc
ds
ljmp
cmpsb
es
jmp
or
or
sbb
stc
arpl
in
xchg
in
mov
xor
ja
mov
movl
ja
pop
pop
sub
test
or
mov
test
push
bound
pop
je
mov
lds
addl
adc
loopne
btc
add
lods
jnp
aas
js
jbe
jp
dec
popf
negl
pusha
ret
stos
xor
aas
hlt
inc
ds
pop
or
je
jmp
mov
jb
pop
movsb
pop
mov
scas
insl
lret
inc
ja,pt
out
mov
je
fldenv
jmp
aas
mov
jl
push
fisttps
js
cmpl
in
cmp
dec
and
jne
es
mov
jl
cmpsb
cmp
fadds
pop
mov
hlt
imulb
push
add
xor
xchg
lock
fbld
hlt
paddd
pop
insl
fcmove
xchg
sahf
and
pop
mov
jne
sub
cmpsl
mov
sbbl
xlat
ds
add
daa
inc
imul
pop
lret
movsl
pop
and
or
imul
mov
push
int
jne
cld
pop
xchg
push
lcall
jo
out
cmp
lds
mov
fiaddl
adcb
adc
lcall
mov
cmpsl
aas
pop
mov
sub
xor
xchg
sbbb
faddl
les
insl
ja
push
inc
or
push
pop
mov
sahf
dec
jg
imul
xchg
sbb
cwtl
jg
es
pop
mov
lret
cli
push
xor
push
and
lods
lahf
movsb
sbb
cmpsl
lds
mov
je
out
inc
pop
xchg
xchg
inc
mov
jne
insb
push
sbb
mov
stos
xchg
sbb
cmp
mov
fnstcw
jns
popf
mov
or
mov
lahf
jbe
pusha
pop
mov
loop
shl
bswap
or
cmovle
xchg
in
mov
mov
icebp
cmc
lea
lahf
lahf
sub
loope
fildll
nop
scas
xor
or
inc
shl
pop
push
outsb
add
fstps
xlat
outsb
and
mov
addr16
aaa
loope
arpl
inc
testb
or
sbbb
pop
jmp
sub
xchg
scas
sbb
inc
mov
addb
jl
arpl
test
add
test
loope
sub
push
xchg
movsl
mov
sbb
sbb
fwait
xor
pcmpgtd
scas
outsb
fmuls
pop
mov
push
inc
add
cmp
out
sar
inc
xchg
shrl
cmpsl
cmp
mov
push
loop
mov
cs
sarl
push
leave
mov
pop
jge
call
mov
movsb
fdivp
xchg
pxor
pop
or
and
bound
cli
or
mov
lods
enter
mov
mov
aaa
or
inc
mov
push
push
xchg
lods
sahf
in
cwtl
mov
fmuls
mov
and
xchg
mov
stos
inc
xchg
xchg
popa
fwait
repz
out
sti
lock
push
xor
pop
arpl
jp
je
dec
mov
popf
or
add
sbb
sbb
testl
jb
lods
sti
jns
call
repz
shll
pop
or
xchg
xor
pop
fstpl
les
inc
data16
fwait
mov
js,pn
inc
xchg
cmp
mov
nopl
ds
dec
fidivs
out
add
sub
fdivrs
push
addr16
daa
push
xor
push
cli
cmp
sbb
cmp
adc
int
outsb
sbb
push
dec
popf
sub
daa
xchg
fdivrl
pop
insl
xor
ljmp
cmc
out
cmp
icebp
xor
cld
popa
pop
pop
sub
push
psllw
xchg
je
and
leave
in
mov
rcrb
mov
hlt
pop
imulb
dec
xlat
ss
test
mov
mov
cmc
cmp
adc
and
enter
push
sub
mov
xchg
jle
lea
cmpsl
push
in
inc
cld
out
ds
lock
ljmp
mov
outsb
dec
mov
pop
dec
jne
xlat
push
inc
popa
insl
in
les
push
scas
daa
mov
mov
xor
repnz
stos
stos
mov
sbbb
mov
cmpsb
enter
cmpsb
daa
fdivl
int3
inc
out
jae
out
insb
dec
and
ds
lods
dec
insb
out
sub
jl
js
ss
es
subb
ret
jmp
mov
pop
je
or
xor
sbb
int3
or
adc
mulb
mov
movsl
sbb
push
mov
fcomps
clc
shlb
adc
sarl
into
pop
bound
outsl
outsb
dec
lods
cmp
cmp
popl
out
test
insb
jns
movsb
icebp
aaa
inc
fcoml
pop
test
rcl
inc
aad
xor
xchg
add
sbb
aad
xchg
mov
add
mov
jl
xor
movsl
mov
into
mov
arpl
aad
cmp
cmpsb
sar
pop
or
pop
data16
pop
mov
xor
mov
xchg
pop
loope
fstps
xor
mov
sub
outsb
insl
addr16
pop
cmp
sbb
jno
jne
addr16
dec
add
jge
in
adc
fidivs
and
mov
lods
ja
dec
cld
daa
or
add
push
sbb
xchg
cld
ret
jecxz
into
push
mov
or
xchg
movb
loopne
jp
jecxz
jae
xlat
jne
out
das
jno
cli
mov
jns
jl
lds
or
lods
jno
insl
js
pop
xchg
push
mov
fistpl
cmp
and
jbe
clc
outsl
je
in
scas
jle
pusha
cli
insb
iret
in
xor
sub
jmp
shrl
mov
je
lcall
out
mov
cmp
mov
outsb
pop
push
iret
push
out
push
or
pushf
pop
cmp
jmp
lock
insb
es
imul
subb
mov
gs
adc
fcmovbe
dec
or
inc
nop
andb
cmp
xor
and
aam
and
aam
cli
jle
inc
xor
add
fwait
jae
hlt
iret
add
mov
popf
add
and
cmp
inc
add
daa
sbb
sbb
or
cmp
call
aaa
lahf
repz
dec
dec
scas
loop
arpl
das
faddl
in
cmp
or
testl
push
cltd
faddl
sti
or
pop
inc
subl
sub
fwait
pop
ds
fdivr
dec
bound
insl
cli
cmpsb
add
pushf
loope
loop
mov
in
dec
fldt
stos
lret
shlb
push
mov
icebp
add
push
and
xchg
scas
daa
xchg
mov
jle
movsb
inc
mov
mov
pop
shl
ss
pop
or
cmp
ret
xlat
adc
loopne
insl
adc
or
sbb
inc
into
sbb
insl
aaa
lret
xor
sub
pop
add
or
les
shll
pop
mov
rcll
fdiv
cmp
lahf
inc
jle
dec
jne
ds
mov
cltd
push
add
adc
or
xorl
jp
sbb
adc
adc
inc
add
ja
mov
and
cltd
adc
pop
cli
fimuls
fmul
xor
sar
cld
cwtl
cltd
ret
sub
icebp
mov
lret
cli
adc
shl
aaa
mov
popf
add
int3
pop
jae
add
push
pushf
pop
arpl
fldcw
mov
push
adc
push
shrl
aam
cmp
mov
mov
push
adc
push
jl
je
xchg
mov
loope
pop
sbb
cmp
rclb
jl
pop
test
ds
outsb
aaa
mov
sbb
xchg
or
mov
mov
loope
imul
fucomi
pop
jg
xchg
push
adc
ljmp
fisttpll
xchg
add
cmpsl
cmpsl
adc
js
or
inc
dec
mov
xchg
loope
push
ret
push
mov
lock
adc
iret
cmp
mov
out
mov
inc
ret
mov
pop
xchg
push
cmc
rcrb
psllq
sub
lret
push
sbb
push
xor
sub
shlb
and
scas
add
mov
sbb
mov
cltd
jl
sub
mov
jmp
sbb
mov
mov
stos
mov
mov
dec
aaa
enter
lds
add
cli
mov
fcomp
popl
pop
iret
push
cmc
lahf
in
mov
push
push
imul
sub
fwait
lcall
in
fisttps
mov
cmp
cli
mov
divl
outsl
stos
in
mov
sbb
icebp
mov
adc
js
xor
into
inc
or
in
mov
addl
xlat
or
cmp
andl
loopne
sub
xor
test
loopne
sub
pop
idivl
dec
jle
daa
jp
and
xlat
filds
push
mov
test
fs
jg
mov
lock
push
ret
cmpsb
js
orl
push
es
inc
fstl
xor
test
mov
inc
mov
mov
fldt
xchg
jle
jno
mov
repz
jne
add
cvttps2pi
insb
dec
movsb
mov
mov
push
test
ds
mov
mov
fdivr
cmp
or
call
and
rcl
add
popl
js
adc
or
aaa
jae
or
dec
fldt
outsl
sahf
leave
mov
or
sbb
pop
cmp
xor
jle
idiv
fildl
dec
adc
mov
imul
mov
and
stos
fcoml
cli
cmc
int
mov
fwait
pop
mov
mov
jg
sbb
and
packsswb
jmp
loop
pop
xor
adc
jg
cmp
add
and
mov
test
or
shl
cmp
lahf
jecxz
mov
loope
xchg
mov
sbb
ret
sti
sub
mov
in
jl
fstps
pushf
pop
xchg
insl
scas
sub
or
rclb
mov
ret
inc
pop
andb
mov
lret
fisttpl
pop
stos
insl
cmp
sbb
imull
adc
imul
mov
or
mov
adc
lods
fstp
mov
pop
sbb
mov
lods
jnp
imul
lds
repnz
inc
ret
mov
and
push
push
jle
test
fs
rcrl
xchg
aaa
call
adcl
xor
cmp
ljmp
mov
push
add
mov
adc
popa
xchg
xor
cmp
lds
daa
stos
inc
sbb
test
xor
mov
dec
subb
cmp
cmpsb
negb
stos
mov
clc
outsl
pop
push
insl
insl
push
out
ds
mov
lods
cmp
mov
fidivs
dec
pop
dec
jns
mov
mov
pop
ljmp
mov
push
pop
imul
rorb
pop
cmp
scas
fcomi
ss
rcrb
mov
nop
out
sti
out
xlat
popf
mov
mov
lahf
jecxz
jo
call
mov
push
xchg
push
dec
divb
push
pop
add
in
jbe
push
push
mov
sub
pop
or
daa
ror
push
mov
inc
fisttpl
jo
icebp
and
nop
scas
mov
addl
mov
shlb
jg
stc
push
lahf
pop
pop
dec
jno
out
adc
add
mov
div
test
pop
inc
fwait
and
lods
les
popa
cli
cmp
jmp
test
pop
insb
and
testl
in
dec
cli
add
mov
jmp
in
iret
inc
scas
add
aam
mov
jbe
mov
sub
or
aaa
aam
std
push
mov
cmpsb
sahf
aas
inc
fbstp
or
add
pcmpeqw
mov
fistpll
inc
int
xchg
lret
jnp
loope
lods
mov
ret
cli
mov
fildl
aaa
sarb
jle
rcr
es
or
out
iret
shrb
cmp
into
aam
nop
mov
push
ret
insl
cmp
icebp
mov
pop
les
jl
icebp
repnz
pop
ds
xlat
in
fisubs
clc
loop
xor
jmp
loopne
push
cmp
dec
inc
jg
sbb
sbb
divb
fldt
lds
xor
loopne
jb
inc
sbb
cmp
jbe
pop
mov
pop
sbb
data16
pop
pop
add
mov
xchg
pop
pop
je
nop
xchg
js
lods
nop
mov
inc
cs
fcompl
and
sbb
mov
cmp
std
loope
xchg
push
addb
inc
loop
shl
test
mov
imul
sahf
mov
dec
sbb
rcr
cmp
pop
mov
xchg
mov
test
xor
ret
pop
popf
xor
mov
pop
mov
movl
inc
std
int3
xchg
arpl
popa
dec
into
cmc
sub
and
sub
or
jmp
or
pop
out
inc
mov
cvtps2pi
insb
movsl
xor
cmc
adc
pop
fidivs
shl
imul
mov
jecxz
pop
and
gs
xor
mov
push
mov
inc
adc
pop
or
sti
ljmp
outsl
push
cli
pusha
or
aam
jno
les
dec
es
add
mov
sbb
fcmovnbe
fcmovnb
jp
pop
or
outsl
out
fdivrl
int3
scas
sub
pop
push
aaa
test
arpl
cmp
cltd
jge
jne
sbb
sub
lret
mov
and
push
sub
cmpsl
call
push
push
jl
mov
in
or
repz
sti
jecxz
push
sbb
shll
fnstsw
sub
aad
add
pop
je
lods
mov
push
jne
dec
push
outsb
mov
jo
loopne
xor
sahf
fdivs
ja
add
ja
pop
mov
push
add
pop
add
mov
out
jmp
je
or
insb
repz
dec
inc
sbb
pop
push
mov
and
pop
sub
push
jno
arpl
add
mov
mov
sarl
mov
xor
jno
push
add
sbb
cmp
mov
xlat
pop
sub
or
jbe
lcall
iret
sub
push
out
ss
insb
xor
stc
adc
sbb
push
test
ret
outsb
lea
out
dec
sub
xor
leave
lret
loopne
add
pop
sub
jbe
icebp
mov
stc
mov
sbb
out
aad
dec
mov
or
push
sar
and
adc
ljmp
cmp
pop
pop
aam
test
jnp
jns
pmaxsw
lret
pop
int
in
lcall
or
push
jne
cmp
inc
ret
push
mov
rorl
lcall
mov
fst
cmp
or
cmp
push
pop
repnz
push
adc
ljmp
test
push
add
in
xchg
pop
test
nopl
pop
push
lock
mov
add
mov
insb
out
ret
push
adc
jae
sbb
xor
scas
mov
cld
aad
shl
out
pop
jge
sti
test
inc
mov
out
or
mov
jmp
dec
iret
add
fldt
lret
xor
inc
pop
add
dec
sub
out
pop
loope
cld
movsb
jo
fcompl
pop
divb
lock
pusha
sub
xchg
dec
ds
adc
pusha
lock
ficoml
push
mov
imul
notb
cmpsb
jle
test
dec
cmp
mov
cli
sbb
out
std
cltd
xor
jmp
int3
loop
lret
movsl
push
adc
mov
hlt
stos
sbb
cmp
dec
pop
mov
sbbb
stos
enter
jbe
fisttpl
clc
test
aam
movsl
data16
std
sub
lods
cmpsl
jnp
lahf
andb
int
sbb
dec
jl
adc
inc
xor
mov
fiaddl
testl
jmp
lret
mov
push
mov
insl
inc
negl
mov
in
lcall
xchg
rcll
stos
inc
imul
dec
cmc
jmp
imul
fcomps
xor
fs
jg
sub
dec
and
stos
ffree
xchg
mov
xor
shrb
adc
adc
sub
mov
or
out
outsl
mov
call
stos
inc
test
mov
lea
cmpb
pop
cmpsb
push
mov
jg
fistpl
cs
cltd
stos
out
cmp
pop
leave
xor
filds
sbb
mov
insl
pop
shll
movsl
outsb
fsubl
ja
jne
sbb
sub
or
xchg
push
or
popa
cmpsl
imul
push
dec
add
mov
push
pop
pop
mov
or
jo
mov
xlat
sbb
ret
xchg
mov
fistpl
pop
cmpsb
out
push
fldl
cmp
shl
jl
sub
sbb
flds
inc
cli
and
in
mov
inc
std
pop
insb
out
cmp
add
mov
cmp
jge
xor
inc
cmpsl
out
pop
ja
insl
into
cltd
cmpsl
xchg
pusha
hlt
es
test
sar
mov
imul
leave
or
popa
loopne
jmp
test
and
in
cli
hlt
das
dec
mov
int
xor
jb
scas
sub
sub
sbb
sub
jae
sahf
jbe
xor
xchg
movl
insb
push
fistpll
jmp
xchg
insb
jnp
sbb
sub
jge
dec
lock
jo
ljmp
loope
dec
pop
stos
sub
stos
dec
jne
rcrl
shl
test
cmp
add
sbb
mov
sbb
mov
mov
fwait
pop
mov
fwait
push
mov
loop
lock
daa
dec
mov
mov
int
cmpsl
cli
les
xchg
jg
aas
adc
mov
std
xlat
mov
pop
clc
hlt
movsl
incb
ficomps
stc
xlat
mov
pmuludq
and
and
pusha
dec
pushf
mov
fcmovnb
inc
stc
in
bound
sbb
iret
scas
add
insb
adc
cmp
and
xor
movsb
cmp
cltd
cld
aad
xor
rol
fldenv
mull
scas
jecxz
mov
adc
adc
lcall
loope
popf
and
out
cmp
push
pop
neg
xor
sbb
jmp
xchg
ljmp
lret
cmpsl
dec
mov
loopne
fwait
mov
and
pop
sub
and
lahf
icebp
jl
fbstp
mov
mov
ret
js
mov
cmp
in
sub
mov
mov
mov
sbb
jne
cmp
and
popa
mov
adc
inc
out
outsb
sbb
aas
mov
lret
mov
in
leave
mov
out
sti
push
sahf
ds
cmp
pop
mov
jecxz
ret
loope
out
icebp
jb
mov
pop
scas
dec
fnstsw
mov
idivb
mov
outsl
nop
dec
rolb
aam
imul
sbbl
cmc
pop
insb
movsl
dec
add
sbb
jnp
aas
ds
dec
jp
lods
lds
fdivs
lret
test
mov
in
mov
xor
cmc
adc
fucomp
pop
mov
call
test
pop
jb
inc
insl
jo
fnstcw
add
mov
imul
aas
mov
faddp
daa
icebp
mov
cld
push
dec
push
xlat
in
je
xor
sub
popa
mov
imul
sahf
dec
cmp
movsl
pop
inc
lcall
addl
lock
inc
scas
out
repz
cli
shrb
mov
aas
xchg
pop
icebp
shrl
cmovs
xchg
cmc
hlt
gs
push
lods
shll
aam
jg
negl
mov
test
inc
xchg
sub
dec
inc
cmpsb
repnz
jne
sub
adc
jb
jne
in
test
outsb
cmp
loop
jle
cmp
test
into
in
test
popa
aad
jl
cli
and
mov
filds
adc
add
mov
loopne
mov
stc
xor
mov
dec
cld
imul
out
mov
fsubl
mov
in
jg
ss
mov
or
cmp
jle
mov
inc
mov
adcb
or
mov
jnp
add
xlat
sbb
pop
dec
rcr
jmp
cs
pop
pop
mov
je
jl
and
jb
push
call
roll
mov
adcl
bnd
clc
rol
pop
and
out
sarl
fcmovu
mov
ret
stos
dec
addr16
xor
inc
xor
mov
lock
rclb
mov
inc
cmp
mov
call
testl
pop
pop
mov
pop
pushf
cmp
outsb
pop
pop
addr16
ret
scas
sti
push
mov
daa
pop
mov
mov
outsl
fisttpll
pop
mov
xchg
pop
stos
aad
dec
push
lahf
pop
repnz
icebp
add
adc
mov
incb
in
xor
pop
add
adc
rorl
mov
cli
data16
mov
cmpsb
lret
dec
pop
icebp
shl
pcmpgtb
daa
dec
jns
enter
fdivs
arpl
shll
jne
cld
sbb
arpl
cmp
push
adc
inc
inc
inc
push
pop
push
mov
xchg
push
jg
mov
lock
mov
test
orb
mov
out
xor
subl
andl
negb
sbb
icebp
fldcw
push
push
push
test
ret
mov
xchg
inc
lret
and
arpl
pop
addr16
add
je
addl
mov
inc
out
pusha
fnstcw
push
and
mov
test
jp
and
dec
xchg
int
jmp
add
imul
ret
inc
mov
xchg
rcrl
in
movsb
cwtl
inc
inc
pop
push
jecxz
cmp
iret
lds
icebp
or
jp
out
or
dec
loope
xorl
xlat
ret
dec
sbb
hlt
add
push
test
dec
sub
imul
out
lahf
xchg
int3
or
ret
and
jmp
mov
imul
sub
pop
popa
scas
out
ljmp
mov
push
sbb
mov
mull
push
mov
in
jmp
ret
mov
insb
call
negl
sbb
mov
gs
rclb
cli
cmp
or
jge
push
clc
jecxz
scas
lcall
fwait
mov
jne
imul
jnp
rol
sarb
push
cli
iret
jmp
xchg
or
mov
push
pop
shlb
fwait
aas
mov
dec
int
fstpt
outsb
stos
sbb
sahf
or
loopne
fdivl
sbb
pushf
sub
mov
pop
loopne
orl
and
in
insl
push
rol
mov
ja
insb
pop
push
adc
or
xchg
add
lahf
subb
adc
jo
ret
je
test
jge
cmp
dec
in
cli
dec
dec
data16
ds
in
int3
stc
inc
cmp
jne
outsb
fdivrs
out
sarb
or
jp
ds
push
xor
add
push
xchg
lods
add
fst
xor
bound
xor
pop
flds
push
adc
pop
inc
gs
mov
cmp
cvtps2pi
jnp
push
in
aas
sub
mov
jns
rcrb
insb
arpl
testb
lods
mov
mov
push
jne
sbb
lea
pop
and
leave
jbe,pt
cmpsb
sub
ja
cmpsb
mov
mov
pushf
fcoms
adc
jg
movsb
and
imull
pushf
ret
and
and
adcl
cmp
ds
iret
jl
push
mov
sub
paddq
lods
pop
or
cmpsb
mov
cmc
inc
pop
test
stos
mov
mov
aaa
aas
mov
jns
jp
push
mov
mov
icebp
stos
stc
push
nop
sub
mov
inc
pop
outsb
jecxz
out
rorb
lcall
aas
adc
hlt
nopl
or
iret
and
fdiv
mov
xlat
and
shlb
jmp
js
jecxz
jns
or
jbe
sbb
je
xor
test
mov
jnp
push
insl
fmuls
es
shrb
lret
sub
cmp
hlt
jge
fcomip
out
stos
pop
int
mov
xlat
mov
sbb
xchg
movsl
xchg
movsl
adc
cmp
mov
aam
loop
aas
xorl
arpl
xor
shl
mov
pop
lret
cltd
push
xor
aam
icebp
fidivs
lods
mov
push
inc
ja
bound
js
cmpsl
andb
out
jae
fstpt
lret
jecxz
dec
cwtl
dec
or
sub
add
jo
pusha
mov
xchg
fistpl
out
inc
imul
in
push
in
cs
add
scas
cmp
repnz
mov
loopne
cmpsl
test
insl
push
mov
push
je
cmp
push
scas
dec
cs
dec
popf
add
stc
rcrb
inc
arpl
faddl
jge
stc
dec
pop
je
pop
xchg
inc
mov
pop
out
popa
or
cld
sbb
mov
mov
mov
decb
and
rcll
scas
ljmp
mov
jecxz
push
pop
lock
jge
sti
pop
mov
add
sbb
or
sub
mov
xchg
push
lea
jmp
outsb
loope
jo
pop
pop
ja
or
mov
les
fdiv
rclb
and
add
sub
out
pop
ljmp
push
or
jne
sahf
push
and
mov
sub
or
repz
mov
stos
andb
icebp
pop
dec
pop
shll
sarb
aas
ss
jp
fcom
ds
push
push
sbb
je
test
pop
xchg
aad
lds
subl
jecxz
mov
mov
cmp
push
sub
mov
jae
data16
pop
fdivr
cmc
cmp
dec
sub
movsb
xchg
sbb
clc
dec
mov
cmp
outsl
push
ss
mov
inc
pop
add
shlb
inc
push
ret
xchg
and
push
mov
jmp
inc
out
cld
aad
out
jmp
aad
test
jmp
sbb
in
shrb
push
jo
xchg
cmp
sbb
jp
dec
aad
daa
dec
adc
inc
fcmovb
jmp
dec
push
add
testl
aam
add
pop
xor
sbb
cmp
inc
or
ret
stos
add
loopne
pop
fcomip
hlt
xor
faddp
ljmp
insb
push
ret
loope
push
std
js
inc
push
aam
jno
outsb
dec
mov
and
mov
arpl
jo
imul
shrb
and
or
sub
xor
sbb
test
sbb
sub
rolb
cmp
add
hlt
mov
out
ret
mov
mov
dec
adc
sti
ljmp
mov
sbb
aaa
mov
movsl
jae
imul
aad
add
pop
mov
mov
lahf
xor
xor
int
jecxz
or
adc
lret
insb
pop
jne
mov
jle
mov
adc
lahf
mov
mov
aam
push
cmp
aas
fistpl
jo
jge
pop
cld
nop
jno
fstps
sub
rclb
cmpsl
pop
xor
lcall
xchg
xor
sbb
push
xorb
push
out
ja
outsb
and
leave
fwait
xchg
pop
mov
mov
mov
imul
push
sbbl
pop
repz
outsb
insl
push
shl
mov
in
sbb
push
inc
cmp
cmpb
jg
mov
pusha
das
sbb
push
ss
push
push
mov
mov
sub
mov
outsl
xchg
mov
daa
bound
jg
inc
les
aam
dec
push
es
iret
push
fnsave
ds
xor
jbe
pop
call
data16
cmp
mov
pop
pop
enter
dec
insb
cmp
add
ja
mov
ret
dec
jno
mov
arpl
and
and
outsl
shl
rcrl
call
dec
pop
cmp
xchg
notb
not
xor
cmc
mov
cli
push
test
lcall
pop
lcall
or
pusha
inc
je
mov
inc
push
pop
cli
leave
push
xlat
mov
in
sub
jns
mov
sub
cli
imul
xor
cmc
pop
cld
push
sub
inc
sarl
testb
out
jnp
dec
mov
bound
into
out
mov
data16
or
xor
cwtl
mov
sbb
jg
rcrb
and
outsb
test
xor
fxch
punpckhbw
add
imul
push
aaa
mov
push
jb
mov
xor
add
adc
imul
insl
sub
mov
or
adc
mov
push
xor
add
mov
out
jmp
aaa
jns
mov
pop
and
insb
daa
cs
arpl
pop
jne
lods
pand
cmp
jg
jmp
push
addb
ficoms
dec
cmp
mov
mov
jbe
int
and
mov
mov
xorb
dec
adc
sbb
push
testl
cmp
dec
jl
cwtl
call
clc
loop
inc
cmp
sub
cli
dec
xchg
ret
sti
pop
xchg
shl
push
xchg
imul
jo
fs
lea
push
popl
cltd
lret
push
ja
cmpsb
push
dec
daa
rcll
rorb
cmp
or
mov
adc
adc
dec
jl
arpl
dec
sbb
ret
testb
and
mov
jnp
in
adc
in
sti
ljmp
xor
aas
inc
ljmp
mov
test
mov
mov
mov
aas
in
insl
dec
add
in
mov
dec
cld
lret
test
jg
in
lods
das
or
cli
xchg
jns
leave
stos
outsb
loop,pn
mov
xor
notl
outsl
mov
or
sbb
pop
sub
or
outsl
cmp
xor
or
rolb
push
push
dec
div
add
repnz
icebp
jmp
int3
aad
pop
dec
sbb
inc
add
mov
jmp
adcl
je
das
sub
xlat
sbb
lahf
sub
sub
mov
in
aad
dec
fldl
test
lock
pop
jl
mov
push
xchg
or
sarl
pop
pop
mov
cmp
mov
mov
jle
mov
cmp
adc
jae
sbb
repz
xchg
rolb
mov
push
jne
fstpt
mov
jecxz
mov
sub
add
pusha
fisttpl
test
outsl
mov
lret
pop
fimull
fdivr
mov
ficoml
push
aas
xor
jbe
and
cli
and
or
dec
jp
ja
add
insl
inc
pop
add
jp
pop
pop
in
idivb
scas
aas
adcl
dec
add
fstpt
lds
xchg
outsl
mov
xor
in
add
fwait
mov
ja
insl
aam
sahf
ljmp
or
and
mov
aad
mov
or
xor
outsl
bound
insb
jg
lret
or
scas
pop
int
jbe
lods
lods
xchg
xchg
mov
in
lods
cli
leave
lds
popf
inc
addl
imul
sahf
ret
ja
push
cli
sbb
mov
stos
int
daa
inc
xchg
fisttps
or
sub
mov
cmpsb
push
bound
or
jle
push
clc
out
dec
or
loopne
jmp
cmp
imul
jle
xor
das
into
shlb
mov
subb
inc
outsb
pop
pop
ret
pop
cmc
leave
push
outsl
in
push
out
jl
push
scas
orb
test
jo,pt
add
sbb
sbb
aaa
cld
or
and
daa
jo
cwtl
mov
xor
mov
adc
jo
push
aam
sbb
call
mov
dec
repnz
adc
ds
sbbb
jmp
jne
mov
jp
and
sbb
sbb
sbb
push
insl
sti
cmp
out
xchg
inc
add
rolb
or
sti
rcr
jae
les
pop
cmp
add
mov
pop
jo
mov
push
loopne
negl
sti
pop
dec
sbb
xchg
pop
movsb
push
mov
ret
arpl
sbb
aad
rorb
dec
xor
cmp
xorl
inc
mov
cmc
shl
sbb
sub
pop
mov
loop
xor
out
lahf
adc
ljmp
jp
lods
ret
push
fcmovb
addr16
dec
out
scas
jne
xchg
fmull
inc
and
in
mov
adc
or
or
inc
testl
cmp
xlat
ror
jne
dec
call
cmpsw
mov
sub
rcr
xchg
xor
es
fsubrl
sbb
out
lock
xchg
ss
dec
xchg
xchg
dec
mov
add
push
shl
cmp
xchg
mov
or
call
sub
jmp
rol
jns
inc
fldcw
mov
xchg
jp
ret
ljmp
sti
mov
aam
mov
pop
jns
mov
and
xor
aas
xchg
mov
jp
dec
loope
test
ss
inc
imul
or
inc
inc
cmp
out
lea
ficoml
cli
sub
inc
inc
clc
int3
or
mov
test
jb
add
adc
insl
cli
xchg
jnp
daa
shlb
sahf
in
ret
in
mov
or
lret
push
clc
mov
add
lds
cmp
push
cmpl
mov
shrb
xor
cmp
rorl
pop
or
dec
jb
rcrl
and
fcmovnb
inc
mov
dec
push
push
dec
jae
lds
into
cmp
ret
in
pop
aad
dec
insl
js
rorb
xor
stos
bound
dec
and
fldt
fdivrl
cmc
cmpb
scas
add
jno
cmpsl
cmpsl
push
cmp
xchg
push
ret
xlat
movsl
ret
add
cmp
jle
mov
or
loopne
ret
test
sbb
fsubl
push
cmp
aas
push
mov
fistpl
inc
lods
inc
mov
jne
sbb
and
iret
pop
mov
call
sahf
repnz
adc
daa
idivl
aaa
inc
push
pusha
add
sbb
dec
imul
cmp
pop
negb
fistl
lods
xor
mov
mov
mov
or
stos
push
sbb
mov
cmpsb
into
pop
cwtl
inc
out
aam
xchg
sbb
xchg
popa
jmp
stc
mov
sub
jp
cmp
dec
mov
dec
nop
adc
out
pop
dec
fiaddl
cmp
mov
int
incb
mov
mov
outsl
test
adc
enter
loopne
scas
js
aaa
xlat
sub
push
int3
mov
and
ret
sti
or
ficomps
cs
xchg
in
insl
out
jmp
pop
mov
ljmp
jmp
xchg
stos
sub
or
cltd
push
jne,pn
lret
jne
dec
xor
shlb
pop
jl
mov
scas
je
jae
mov
dec
or
push
xchg
inc
mov
pop
mov
add
inc
push
pop
rcll
push
popf
sub
or
xchg
sbb
or
movsl
xor
sub
jne
jmp
outsl
cmp
pop
add
ficomps
pop
outsl
insl
lret
rol
sbb
aam
movsl
repnz
or
jle
mov
cmp
rclb
push
mov
dec
out
inc
lock
inc
sarb
frstor
fistpll
mov
mov
ss
cmp
inc
pop
pop
fs
push
pusha
adc
jge
cmp
repnz
sub
mov
lret
shll
ds
xor
fstpl
mov
pop
cmp
hlt
sub
daa
push
mov
xchg
pushf
fldenv
out
div
jae
mov
lock
mov
loop
adc
test
insl
call
outsl
ret
mov
cs
js
sbb
add
cmpsl
mov
iret
mov
mov
mov
mov
ret
test
jno
or
outsb
sti
jo
and
push
aas
add
psadbw
loop
int
ret
inc
scas
ljmp
stos
mov
dec
xlat
rolb
test
aaa
je
fistpl
pop
das
test
mov
sbb
mov
fimull
cmp
js
mov
popf
jg
imul
sbb
pop
or
pop
or
insl
cmpsb
sub
decl
negl
sbb
jno
jne
dec
pop
test
fwait
push
jne
pusha
push
arpl
add
je
mov
jno
mov
stos
sub
inc
pop
mov
jbe
ja
es
sahf
inc
outsb
jge
insb
and
mov
sub
jp
repnz
xchg
stos
mov
ret
fwait
push
movsl
or
out
stc
mov
leave
outsl
pusha
xchg
add
dec
or
or
out
je
adc
cmpsb
sub
es
scas
jp
fcom
test
pusha
jae
adc
sbb
sbb
inc
add
and
jl
sub
xchg
or
adc
sbb
xor
pop
in
fcomps
stc
add
mov
jne
imul
sbb
addr16
pushf
or
lods
daa
mov
pop
test
mov
inc
jg
lock
jb
rclb
jne
sti
clc
insb
mov
es
out
mov
fwait
xchg
mull
inc
push
fists
push
outsl
mov
adc
mov
adc
sahf
icebp
lcall
pushf
mov
inc
dec
cwtl
mov
shll
xor
in
sbb
pop
jo
mov
or
mov
add
ja
icebp
mov
lods
repz
enter
adc
imul
incb
notl
or
mov
mov
push
pushf
sbbl
inc
fcomps
mov
mov
push
clc
xchg
xchg
js
pusha
cmc
js
pop
pop
mov
ds
push
xchg
xabort
sti
inc
sub
mov
adc
jns
push
popf
mov
jne
push
les
js
push
add
nop
mov
sti
lock
xchg
das
in
shrl
insl
jecxz
sbb
sbb
inc
sbb
push
push
sbb
xchg
jp
mov
fmull
xlat
mov
cmpb
sub
push
les
or
and
das
cmp
repnz
sub
enter
and
fs
adc
scas
mov
adc
pop
sbb
cwtl
cmpsb
pop
popf
inc
push
mov
jne
push
push
outsl
sbb
shll
and
bound
adc
mov
sbb
mov
xor
cmp
fdiv
insl
dec
xchg
cli
xor
cmpsl
mov
fsubs
negl
cmp
add
outsb
insb
arpl
into
scas
test
into
mov
jbe
sub
cmp
adc
inc
fdivrl
pop
cltd
push
stos
or
ret
movl
pop
fidivl
xor
add
pop
jae
adc
int
imul
inc
fdivs
push
push
ja
mov
in
js
incl
cld
add
pop
mov
mov
cwtl
jne
mov
mov
fisubl
mov
js
adc
cwtl
lea
add
insl
lods
inc
das
xor
adc
jge
sahf
clc
mov
push
std
or
or
scas
int
push
enter
shl
sbb
push
daa
sbb
mov
cmp
out
xlat
mov
pop
push
leave
xchg
cs
mov
out
pop
in
lds
int
shld
jnp
mov
sub
xchg
push
xchg
pop
mov
hlt
loope
xchg
adc
mov
aam
cmc
int3
gs
clc
xlat
adc
jo
pop
cld
sbb
das
pop
pop
test
mov
push
pop
sbbl
fcomps
rolb
xor
clc
fs
pop
subl
push
je
loope
jnp
cmp
jbe
and
xchg
or
out
lods
add
push
inc
fsubl
mov
addr16
mov
decl
pop
leave
lock
fwait
pop
aas
dec
fsubr
jo
sahf
gs
scas
stos
pusha
xchg
jp
sbb
or
add
addr16
mov
mov
cmpsl
cmpsb
pop
sub
imul
pusha
xor
movsb
sub
sub
xor
movsb
jnp
sti
loopne
mov
pop
fwait
pusha
idivl
je
pop
push
pop
call
jb
jo
adc
add
stos
sbb
push
pop
in
push
pop
lds
scas
cmp
in
xchg
aad
mov
js
cmpsb
fadd
dec
and
jns
nop
mov
mov
loope
jle
jl
dec
rcll
aaa
mov
lahf
jbe
jb
inc
cmc
xchg
fdiv
pop
lods
pop
add
xor
sbb
subl
dec
aaa
xor
sub
lahf
sub
out
add
dec
je
clc
loope
fnstsw
js
dec
adc
inc
repnz
call
jnp
adc
add
sub
push
loop
add
push
ljmp
js
shlb
and
hlt
bound
iret
aad
dec
pop
pop
imul
add
fucomi
pop
jg
rclb
fdivrs
into
adc
fisubrl
js
mov
inc
jp
and
and
outsb
xor
push
or
dec
xlat
inc
xchg
arpl
add
lods
adc
inc
adc
pop
sbb
mov
mov
cmp
jecxz
jnp
push
paddusb
pop
decl
or
in
ds
icebp
xor
mov
push
popf
stos
lret
jle
aas
insl
cs
sbb
ds
xchg
dec
xchg
jmp
insb
cli
ljmp
cmp
jecxz
filds
aas
into
jo
test
clc
mov
jo
cs
cmpsb
stc
rcrb
mov
mov
faddl
sub
rorl
idivb
std
mov
jmp
icebp
pop
rclb
mov
mov
lea
or
pop
xchg
xchg
loope
push
cmp
mov
xor
or
xchg
mov
cmpl
add
jecxz
jae
mov
sub
mov
into
xchg
adc
dec
fstpl
cwtl
inc
xchg
outsl
lds
or
shll
aas
scas
mov
pop
adc
push
jbe
sub
or
ret
ret
movsb
andl
call
lcall
in
push
clc
add
add
adc
mov
mov
add
idivl
xor
outsb
movsl
int3
pushf
loop
imul
cmp
cmpsb
jbe
xchg
in
stos
cmpsb
imul
jge
push
and
mov
mov
cmp
test
push
jb
lret
push
lods
jnp
imul
out
pop
sti
scas
xchg
pop
push
dec
cltd
bound
pop
jns
inc
lret
sbb
leave
pushf
adc
dec
scas
adc
xor
arpl
jns
sub
lea
mov
hlt
xchg
out
and
leave
and
movd
imul
testb
insl
ret
dec
adc
shr
mov
mov
adcb
lea
fbstp
mov
test
pop
push
pushf
repnz
insl
add
int3
cltd
push
in
pop
sbb
xchg
adc
testb
ret
in
adc
aam
insl
pop
dec
dec
dec
sarb
test
ret
fistl
xor
push
bound
mov
jb
into
loopne
jp
test
mov
test
ljmp
mov
outsb
aaa
mov
push
and
add
add
mull
jge
loop
inc
sub
and
mov
and
or
inc
mov
adc
xor
bound
lds
mov
jp
push
sbb
sbb
xor
adc
into
xor
out
mov
fsubrl
add
imul
pop
inc
int
xor
jbe
sub
inc
inc
mov
jl
movsb
mov
mov
xlat
xor
mull
adc
movsl
add
xchg
fwait
xor
push
pushl
inc
sbb
stos
xchg
dec
push
or
push
test
jbe
xor
movsl
popf
insb
sub
xchg
fdivp
mov
push
or
mov
sti
repnz
adc
ja
test
add
cmp
adc
out
mov
mov
shll
test
mov
ret
and
int
fists
out
sbbl
cwtl
stos
mov
sub
xor
dec
gs
sbb
cmp
add
shrl
ss
ljmp
out
jns
popa
dec
mov
sub
pop
add
cmpb
lods
mov
sub
daa
push
cmp
cs
pushf
mov
fcoms
jbe
aam
cmp
mov
push
mov
pop
mov
into
into
mov
mov
fwait
sub
add
sub
add
das
mov
mov
fildll
xchg
pop
sub
xchg
out
push
ret
or
or
or
sbb
stos
mov
andb
mov
mov
cmc
repz
jb
loopne
inc
outsb
fistl
pop
into
lds
out
fcomps
mov
or
push
jecxz
dec
inc
mov
lock
dec
jnp
scas
mov
inc
dec
getsec
sahf
std
adc
and
filds
loop
cmp
inc
add
rcrl
je
cmp
rcl
xchg
dec
jne
insl
in
dec
jle
add
adc
mov
cmpsb
lret
xchg
mov
add
adc
clc
cli
popa
adc
lcall
xor
scas
fistl
dec
cli
je
xchg
cmpsb
pop
js
push
or
jmp
jno
dec
add
push
mov
sbb
push
cld
mov
xor
daa
or
das
or
cmc
fimuls
repnz
sarl
fadd
aaa
andb
movsb
icebp
pop
lods
xchg
add
jge
push
push
cmpsb
sub
sarb
xor
xor
jo
add
in
dec
dec
adc
sub
dec
adc
aam
cmc
push
jp
dec
outsl
mov
enter
fs
push
fmulp
push
iret
jo
scas
jne
sbb
gs
push
ds
lret
mov
insb
inc
js
cmp
dec
outsl
data16
xor
pushf
dec
ja
popa
addr16
jl
sahf
iret
sbb
addr16
sbb
pop
cmp
push
inc
int3
ret
push
xchg
xor
push
jno
mov
cmp
mov
out
ret
pop
aas
push
push
jmp
xchg
aas
inc
push
addr16
testl
or
loopne
cmp
jnp
nop
fadd
cli
mov
movsb
iret
or
nop
mov
and
and
push
jne
testb
shl
repnz
mov
dec
cmpsb
int
cli
stos
int
jmp
hlt
add
fs
insl
test
or
mov
jl
jnp
fnstcw
ret
jbe
fisttpll
pop
sti
jo
std
incb
sbb
cmc
call
fimuls
rcl
cmp
aam
push
hlt
loop
fsubs
adc
mov
jne
jle
sbb
int
pop
and
pop
add
adc
cmpsb
push
ds
mov
pop
dec
adc
and
jbe
jl
sbb
stos
stos
add
sarb
pop
scas
sahf
ljmp
js
dec
and
in
push
mov
jecxz
jmp
jl
xor
jnp
inc
push
cltd
subl
scas
aaa
lods
ret
add
ljmp
or
mov
and
xor
mov
test
hlt
ret
outsl
js
popf
xor
dec
sbb
mov
test
add
loope
in
mov
adc
addr16
sbb
arpl
add
cmp
ljmp
mov
fbstp
in
cmc
push
test
sbb
push
or
adc
cli
cli
pop
cmp
cmpl
add
sbb
rcrl
mov
loopne
inc
pop
push
into
loope
cli
leave
aam
testb
clc
ss
xor
int3
jo
xor
fldenv
xor
bound
popw
sbb
jmp
mov
xor
es
dec
scas
dec
dec
hlt
jne
ja
push
out
xor
dec
sub
jge
pop
inc
pop
ds
sbb
pusha
test
mov
insl
nop
xor
xchg
mov
cmp
mov
mov
adc
mov
mov
sbb
test
rcrb
int
fmuls
sbb
or
cmp
jb
cld
xchg
aas
xchg
xor
xor
cltd
loopne
fucomi
jecxz
adc
iret
roll
lods
icebp
arpl
adc
sar
outsb
addb
mov
mov
sbb
pop
dec
cmp
mov
iret
ss
in
mov
inc
dec
jmp
inc
push
out
stos
cmpsl
inc
sub
mov
aam
arpl
fwait
stos
jle
push
scas
add
cmpsl
push
repnz
insb
or
jg
push
xor
push
inc
xor
adc
shrl
xchg
cmp
mov
mov
xchg
stos
inc
cmp
scas
dec
adc
test
pop
dec
sub
ret
ss
fstl
cli
mov
and
test
out
in
test
jb
mov
imul
adc
cmc
daa
into
sti
mov
ss
pop
jnp
xchg
cmpb
call
fcoms
add
ret
outsl
lret
mov
xchg
outsb
pop
je
add
sar
push
pop
jl
out
cmc
xor
sub
and
sub
or
adc
call
adc
in
std
push
push
sti
inc
jno
xor
inc
lea
xchg
cwtl
jne
mov
lods
pop
int
and
and
xchg
push
or
jp
cmp
cmp
pop
leave
je
mov
or
mov
lahf
xlat
push
gs
aas
push
sub
in
and
loop
pop
jp
into
mov
mov
out
pop
mov
test
repz
subb
dec
dec
mov
mov
xor
aad
lock
or
push
fbld
data16
mov
fdivrs
xchg
test
sbb
andb
insb
sti
ljmp
xor
scas
scas
ret
fmull
xorb
push
jg
mov
mov
pop
outsb
pop
cmp
jp
cmc
push
das
push
ja
in
fsts
push
shr
les
enter
scas
outsl
cmpsl
loop
jae
in
leave
lcall
dec
inc
mov
push
in
mov
or
lea
adc
shrb
stos
shr
push
push
daa
icebp
push
jb
or
out
or
in
sbb
adc
popf
mov
loopne
ret
dec
sbb
jg
mov
scas
imul
mov
mov
pop
mov
jecxz
shrl
in
fidivrs
push
aam
scas
insl
and
push
add
mov
pop
fs
push
pop
or
cmovle
aad
insl
lahf
lcall
fidivs
test
je
xorl
inc
fmull
ljmp
das
pusha
push
cmp
xor
addr16
inc
fidivl
lds
loopne
rcll
lcall
imul
inc
out
outsl
lahf
xor
imul
ja
insl
loopne
sbb
push
xchg
test
xlat
fldl
cmp
push
mov
in
xorb
inc
add
sbb
adc
mov
cmp
mov
mov
jle
jbe
push
bswap
negb
std
jle
pop
xlat
mov
enter
ret
push
pop
dec
cld
fs
cmpsb
int3
lds
xchg
mov
faddl
fldl
mov
es
mov
jns
cmp
sbb
icebp
add
ljmp
icebp
add
testb
sbb
mov
cmp
inc
ud2
dec
jbe
arpl
aad
and
inc
es
testb
jg
xor
fsubrs
and
push
sbb
incb
out
fstps
fldcw
sub
cli
push
insb
mov
stos
idiv
jp
xchg
in
sbb
movsb
lahf
jle
dec
mov
pop
pop
filds
ret
inc
clc
xchg
mov
mov
jo
jl
movsl
clc
sub
mov
mov
das
cmp
out
stc
jecxz
jecxz
mov
aaa
cmp
in
add
mov
mov
mov
mov
je
or
mov
sbb
inc
ret
inc
push
lea
in
adcl
popaw
imul
mov
sbb
imul
mov
jmp
xchg
insl
xchg
test
aas
into
cmp
jbe
mov
push
clc
mov
pop
push
cmp
lock
xchg
sarb
aaa
pusha
daa
xor
or
push
clc
add
filds
aas
or
fbld
pop
fisubrs
sbb
cmp
jae
push
add
jmp
add
add
push
sbb
bound
aas
sbbb
add
int3
or
in
dec
insb
ss
div
mov
movsl
xlat
sub
sysexit
sbb
into
add
fisttpll
mov
and
sbb
jnp
mov
test
cld
sbb
sbb
push
push
mov
insb
scas
mov
mov
rorl
insl
dec
je
dec
mov
add
pop
or
xchg
or
aaa
xchg
dec
push
mov
mov
mov
out
sarl
ja
fstp
filds
leave
iret
cwtl
dec
xor
daa
add
xchg
loop
mov
lret
subb
xor
push
sub
xor
imul
das
aaa
loop
cmp
icebp
sub
lods
add
je,pt
aam
mov
add
jb
jecxz
push
ret
push
shll
movsb
pusha
ds
sbb
scas
cmc
mov
and
and
out
xchg
sub
pop
push
jae
test
add
sbb
xchg
in
stos
or
nop
sub
cmp
mov
push
mov
mov
adc
sbbb
lahf
jle
lahf
xchg
lret
pop
repz
dec
push
add
ret
jg
push
push
mov
movsl
inc
sub
mov
test
cmp
pushf
cmovl
pop
jae
cmp
sub
and
jge
pop
xchg
push
rcr
je
iret
cmp
shrb
cmc
data16
xor
push
xchg
inc
push
push
push
inc
jnp
inc
push
outsb
cmp
jl
addl
mov
mov
cmp
xchg
push
insl
cmc
pop
sbb
fdivl
cmc
scas
jl
xor
not
icebp
cmpsb
jb
mov
mov
cltd
mov
addr16
out
mov
stc
cmpsl
xchg
or
cmp
sbb
or
jg
mov
test
cmp
outsb
dec
mov
popf
imul
lods
jns
int
or
addr16
mov
bound
mov
dec
movsl
ret
dec
int3
mov
sub
mov
pop
push
mov
fstps
lcall
ret
push
dec
jnp
gs
cwtl
mov
mov
xchg
nop
jbe
fnstcw
cmp
out
jp
or
pop
ss
or
push
jo
jne
call
daa
out
test
movb
sti
rol
in
out
and
xlat
push
ja
pop
out
jecxz
xlat
clc
jle
mov
ret
adc
sbb
loopne
dec
imul
fisttpl
jge
sahf
decl
mov
mov
jl
jg
loopne
shrb
mov
inc
mov
sbb
addl
imul
popa
int3
orl
sarl
jg
adc
fcmovnu
mov
shr
xchg
mov
insb
adc
dec
adc
ret
push
pop
mov
push
outsl
adc
rolb
dec
testl
inc
xlat
ja
inc
pop
jl
les
sub
repnz
loope
mov
push
fstl
movsl
ljmp
outsb
movsb
into
aam
mov
inc
fninit
daa
fcmovb
ja
addr16
and
xor
mov
roll
popl
das
cmc
mov
and
loopne
mov
arpl
iret
jo
loope
mov
push
out
cmp
lret
stos
jmp
xchg
adc
scas
popl
push
test
xor
and
xchg
fiaddl
jle
gs
jp
add
out
je
ja
mov
push
and
mov
push
sub
inc
jns
mov
xor
daa
jno
or
mov
pop
xchg
xchg
jl
insl
mov
daa
push
mov
sbb
pop
cmp
loop
bound
sbb
mov
dec
lock
int3
aad
lods
cltd
or
sub
es
inc
mov
push
jne
mov
sbb
sbb
jmp
mov
jne
add
add
mov
mov
into
mov
std
scas
mov
movsb
pusha
mov
xchg
loop
in
xchg
dec
mov
mov
into
cmp
fsubrs
test
xchg
push
rclb
push
sbb
mov
out
push
ret
mov
es
filds
les
jne
call
sarb
adcb
adc
sti
aad
inc
into
jmp
adc
in
mov
mov
lock
or
fldt
mov
add
jecxz
inc
lods
imul
andl
and
sbbl
lock
in
es
inc
pop
push
xor
mov
add
les
aas
xchg
imul
jecxz
ljmp
dec
jb
aas
ret
sbb
bound
aaa
call
adc
inc
pop
and
insl
mov
jmp
fldl
push
lcall
mov
push
mov
xor
arpl
sarl
divb
push
jo
stc
in
push
cs
add
mov
xchg
rcl
push
cli
push
jbe
imul
jl
inc
std
mov
pop
nop
rol
mov
mov
jne
pop
push
mov
mov
fdiv
in
enter
sbb
dec
imul
ret
cmp
add
stos
shrb
xchg
div
arpl
out
into
push
or
inc
sbb
cmc
mov
add
jecxz
sbb
jbe
sarl
cmpsb
stos
adc
inc
mov
push
shrl
inc
scas
mov
jae
or
adc
in
pop
out
and
cli
mov
ficoms
enter
push
dec
addl
mov
outsb
dec
test
mov
cmp
push
setle
pop
cmc
and
orb
add
dec
test
push
jns
sub
loopne
dec
fwait
pop
sub
add
daa
scas
lret
mov
adc
sub
lods
pop
dec
cs
sbb
je
mov
pop
fistps
push
fwait
test
pop
mov
gs
pop
or
nop
mov
and
mov
cmp
push
repnz
xor
push
aas
inc
and
sbb
repz
mov
fldt
data16
push
sbb
dec
outsl
add
daa
jecxz
inc
pop
xor
pop
out
iret
in
xchg
ljmp
mov
add
mov
inc
pop
or
mov
jmp
xor
pop
addr16
ret
insl
out
sbb
je
movsb
mov
in
sti
push
or
je
mov
aas
sbb
jae,pt
or
clc
mov
iret
mov
jne
add
icebp
mov
shl
jo
add
pop
fistpl
in
fimuls
push
mov
mov
add
adc
rdtsc
lds
aam
je
divb
and
jb
sbb
jle
ss
or
rcl
inc
sbb
bound
fnstenv
sets
iret
mov
call
mov
out
sbb
mov
inc
imul
ret
dec
jbe
call
test
xchg
dec
adc
or
xor
pop
dec
fbstp
adc
or
xchg
hlt
push
lea
arpl
scas
inc
mov
sbb
lods
repz
push
cmp
les
jne
mov
mov
adc
and
sub
or
in
js
daa
mov
or
les
int
dec
rcr
push
ja
imul
and
out
mov
jno
repnz
outsb
inc
jne
mov
insl
add
mov
rcl
sahf
push
mov
out
lods
pushf
roll
push
sbb
mov
insb
out
add
jmp
pop
push
cmp
xchg
push
push
lods
adc
jnp
testb
ud1
imul
jne
clc
sahf
cld
jl
inc
call
xor
call
shll
inc
lods
pop
add
sti
xor
lods
dec
test
pop
frstor
sub
lds
lods
stc
out
xorl
fsubs
add
out
adc
iret
test
xchg
sbb
fsubr
mov
movsb
icebp
lahf
cmp
pushf
call
clc
and
mov
dec
lret
shll
fnsave
iret
pinsrw
cs
int3
cltd
dec
or
lret
xor
fstp
mov
fucomi
movsl
or
push
pop
mov
push
shll
sub
stc
ja
and
mov
outsl
adc
xchg
adc
rcr
jp
push
bound
popf
mov
push
pop
fst
mov
leave
mov
sbbl
inc
sbb
cli
aam
movsb
mov
mov
jp
mov
mov
arpl
and
pop
cld
cmp
cwtl
xchg
and
lock
fcompl
add
nop
mov
call
ret
adc
push
paddw
lock
gs
sub
mov
loopne
shl
jp
sbb
push
cli
fnstenv
int
cwtl
cmp
scas
dec
icebp
cltd
mov
iret
jo
cmp
cmp
mov
cld
iret
adc
pop
outsb
nop
inc
loope
pop
inc
cmp
inc
in
loope
lods
popl
mov
outsl
dec
jl
or
repz
addb
sub
lcall
lcall
push
cmc
daa
push
mov
sbb
mov
ror
sar
and
fldl
mov
stos
inc
cltd
andb
mov
repnz
ja
scas
mov
nop
loopne
jae
mov
scas
mov
inc
test
mov
mov
data16
pop
enter
push
cmpsl
test
bound
cld
dec
jae
xor
mov
cld
mov
sar
insl
pusha
push
or
leave
mov
inc
rolb
push
rcrb
jne
add
xchg
jmp
sub
sbb
inc
push
pop
pop
fldt
add
or
xchg
rol
popl
outsb
lret
push
cmp
adc
call
inc
call
in
inc
inc
or
fisubl
pop
cld
lcall
and
mov
mov
mov
cli
jo,pt
scas
sub
push
xlat
xchg
in
or
arpl
pop
pop
mov
mov
pop
mov
sbb
data16
sbb
clc
push
push
insb
rcrb
adc
fcoms
pop
pop
imul
jo
sarl
hlt
jecxz
in
cmp
adc
dec
xor
mov
xor
sahf
iret
cmc
loopne
and
inc
loopne
rol
adc
ljmp
cmp
adc
loope
fistl
je
imul
push
jle
jge
shrl
inc
out
fsubs
add
push
and
push
push
fmuls
mov
jnp
fiadds
arpl
jne
clc
roll
mov
cmpsb
mov
xchg
icebp
sub
mov
sub
ret
inc
cmp
adcl
fst
push
insl
std
sub
sub
addr16
fbstp
sub
push
mov
sub
jns
mov
cltd
out
lods
mov
pop
pop
ret
adc
pop
and
cli
cmc
mov
jne
popa
mov
ret
sub
arpl
dec
xor
je
stc
cmc
push
call
clc
out
lock
xchg
jno
pop
fstp
jno
xor
cmpl
push
push
cli
cmpsl
mov
test
pop
inc
jae
ret
push
mov
loop
dec
aas
insl
stos
ss
in
imul
gs
pop
lret
xlat
pushf
fisubrl
js
cmp
aam
adcl
mov
decl
sub
in
cmpsl
in
adc
mov
mov
push
ja
and
mov
ja
jns
inc
js
loope
cwtl
repnz
daa
ljmp
sbbb
inc
push
cmp
sbb
leave
or
jae
in
cmpsb
xor
mov
sbb
pop
in
call
mov
adc
cmp
cmc
push
mov
jl,pn
mov
es
sbb
xor
je
add
inc
inc
loopne
rorb
shl
xlat
in
jo
insb
js
jp
mov
mov
loopne
dec
sub
loopne
pop
icebp
scas
mov
mov
pusha
repz
mov
jge
mov
jne
jl
cmpsb
adc
mov
shll
cmc
jae
notl
cwtl
mov
ds
cmp
xor
and
mov
or
pop
inc
xor
xchg
xor
mov
clc
add
fsts
jecxz
jo
dec
es
dec
or
mov
sahf
in
jg
imul
aad
sub
jo
add
cmp
lods
mov
push
aam
pop
cmp
sahf
add
fstpt
jge
dec
int3
test
test
add
ret
jle
cmp
lcall
push
sbb
add
fwait
pusha
jno
repnz
mov
push
mov
push
cmp
inc
cmpsb
dec
add
mov
push
insb
add
cmp
jp
stos
fsubl
int3
popf
dec
or
rolb
aas
mov
jmp
int3
push
pcmpgtd
ja
cmp
mov
push
andb
adc
pop
pusha
mov
das
shlb
ds
loopne
add
pop
shr
cmp
mov
test
cmp
or
mov
popa
or
xor
divb
sti
sub
movsb
in
enter
jb
stos
pusha
fcmovb
ret
jge
push
jns
sbb
cmp
frstor
je
sarb
repz
lock
sbb
fsub
xchg
dec
and
dec
sbb
xor
jge,pt
scas
inc
arpl
aad
out
mov
cwtl
sbb
mov
lea
out
jbe
sub
in
inc
rclb
and
hlt
mov
enter
nop
inc
xor
into
pop
push
std
xchg
xor
jp
pushf
les
and
das
or
mov
call
cmp
hlt
push
movsl
cmc
jb
adc
sbb
mov
je
sahf
push
test
sub
push
out
out
outsb
jl
add
mov
int
cmp
and
call
pop
cld
cmpsb
stos
mov
cmpsb
popa
or
cltd
cmp
in
inc
ja
cmpxchg8b
enter
je
push
lock
out
ljmp
mov
and
jbe
push
push
fldcw
push
dec
add
lcall
cltd
push
mov
outsl
xor
cmp
xchg
mov
sbbl
push
out
and
push
fldcw
and
xlat
icebp
insb
jge
notl
stos
shll
neg
mov
add
add
push
sub
mov
in
mov
mov
pop
movsb
mov
push
or
lds
es
stc
ret
inc
sub
mov
outsb
ds
dec
popa
jb
stos
or
inc
push
pop
in
mov
xchg
jg
cmp
roll
push
in
sub
pop
clc
pop
std
fs
mov
inc
test
fdivrl
loope
fstpl
xchg
hlt
adcl
inc
mov
in
add
push
lds
iret
inc
daa
cld
lods
inc
frstor
dec
lret
fnsave
and
cmp
ret
sub
mov
jne
add
shr
xchg
in
pop
fsubrl
fsubr
js
loope
decl
xchg
push
sub
mov
pop
push
lcall
jo
inc
int
cmpb
mov
dec
repz
idivb
mov
push
in
mov
pushf
push
sub
add
sbb
jl
into
xchg
jg
lods
mov
sub
xchg
imul
and
in
sti
sub
int3
rorb
push
cmp
scas
fiaddl
mov
cmc
aad
adc
in
adc
mov
aas
rcrl
aas
popa
insl
shl
pushf
mul
xor
mov
mov
xchg
jbe
add
das
inc
enter
test
mov
inc
fsubl
pop
lcall
adc
or
leave
add
xchg
mov
insb
dec
push
mov
sbb
clc
mov
popa
xlat
xorl
push
into
fimuls
jne
jge
mov
jns
enter
jmp
xor
je
lret
aad
test
or
fdivl
and
sbb
mov
add
insb
loope
fmull
es
in
sbb
je
call
jg
dec
icebp
shrl
mov
pop
sbb
push
jl
pop
jbe
lahf
jnp
or
mov
and
xchg
test
lahf
gs
fildll
call
mov
fdivp
movsb
lock
aam
mov
mov
int
insb
jp
fs
inc
lds
scas
lahf
mov
pop
movsl
fwait
mov
enter
xchg
jnp
mov
pcmpeqw
add
stc
xchg
jns
mov
out
push
add
inc
aas
xchg
mov
dec
mov
jmp
cmpsl
fucomp
lea
ficoms
inc
ja
dec
cmpl
xor
ret
pop
or
xchg
in
xchg
insb
dec
fildl
popf
jo
inc
pusha
lcall
outsb
inc
into
inc
daa
aaa
ret
loope
shll
xchg
test
add
call
or
jbe
int
adc
mov
push
mov
fnsave
icebp
sub
cltd
pop
xchg
mov
movsl
je
or
sbb
stc
sub
in
shlb
cmp
xchg
mov
cmc
cmc
pop
lcall
push
aaa
add
jge
in
mov
rcr
es
iret
shl
enter
sub
adc
xor
lock
mov
mov
sub
negb
popf
imul
inc
mov
sbb
push
popf
adc
cltd
in
cmp
push
and
dec
arpl
arpl
popa
mov
dec
scas
shll
test
inc
ljmp
es
outsl
ficompl
push
daa
jnp
xor
scas
aam
fimuls
and
popf
ja
aaa
ds
push
das
out
inc
mov
stc
pop
insl
out
int
jle
push
sbb
ret
add
imul
cs
repnz
outsl
test
fsubrl
movsl
mov
add
mov
mov
cmpsl
iret
xor
pop
arpl
loope
nop
push
fisttps
data16
fmull
xor
shlb
jp
push
loope
sub
sarl
or
sti
scas
aam
loop
inc
js
lahf
sti
xor
mov
enter
jle
add
xchg
ret
sbb
sub
sub
pop
cmc
cmp
testl
clc
in
lahf
jbe
ja
inc
int3
lods
iret
cmp
add
xchg
push
jp
inc
loop
xchg
dec
cmp
cmp
out
fcmovnb
test
or
into
repnz
into
sarl
cli
fldl
jnp
mov
lds
dec
ss
xlat
push
jb
mov
mov
loop
mov
rorl
vpmacssdd
inc
call
xchg
icebp
and
out
mov
sbb
icebp
es
xchg
mov
mov
pop
push
ds
cmc
push
lods
fsubl
push
sbb
lock
adc
idiv
shl
test
xchg
adc
sbb
xchg
imul
out
test
cli
sub
cmp
dec
test
push
or
xchg
adc
push
hlt
mov
scas
mov
outsb
aad
inc
dec
lcall
iret
push
or
sbb
test
mov
mov
shrb
jl
loope
mov
test
cmp
rol
int3
and
roll
ljmp
ds
adc
ret
add
sub
xchg
cmp
sbb
mov
out
push
mov
inc
sub
nop
mov
aad
js
rcll
or
pushf
lret
and
not
or
std
mov
jnp
mov
mov
cld
fwait
pop
push
and
jg
cmpsb
and
fdivrp
cmp
aas
mov
push
and
scas
sbb
pop
jnp
mov
cld
mov
jg
xchg
das
stos
jg
outsl
out
fucomp
inc
insl
cs
and
inc
cmpl
cmc
jmp
in
mov
cmp
lock
jmp
pop
inc
mov
movsb
enter
xchg
add
jle
fs
push
call
ja
idivb
lods
pop
mov
imul
push
fidivrl
cmp
jle
insb
jg
xchg
ret
cmpsl
pop
inc
cwtl
or
or
inc
mov
fcoms
mov
outsb
ja,pt
jmp
sbb
mov
aaa
movsb
adc
adc
or
inc
pushf
outsb
pop
icebp
jge
and
dec
xlat
in
pop
sbb
lcall
sbb
mov
adc
xchg
lds
popa
add
outsb
dec
je
pop
fcoms
jecxz
imul
cmp
mov
xor
cld
int3
or
idivl
add
leave
fxch
dec
out
call
inc
fsubrl
mov
jmp
mov
jno
xchg
sbb
mov
jo
cs
mov
xor
push
sbb
xor
ficoml
push
inc
xor
sbb
pop
mov
push
push
add
rdtsc
mov
ficompl
dec
inc
push
cmp
cmp
fadds
dec
mov
push
loopne
fwait
lods
pop
mov
xor
out
mov
sbb
xchg
inc
inc
popf
les
push
adc
jmp
insl
jae
xchg
shlb
mov
into
pushf
mov
in
jns
sbb
inc
outsl
jne
mov
or
jp
add
push
xchg
pop
enter
pushl
movl
xor
add
iret
clc
mov
xor
sbb
and
mov
negl
clc
les
or
push
jmp
pop
outsl
push
das
nop
pop
cmpsl
mov
push
adc
mov
cld
addr16
fldt
fld1
dec
pop
pusha
xchg
xor
sub
jge
xchg
jmp
add
sub
je
clc
inc
cmpsb
push
lock
int3
in
shlb
mov
sub
mov
stos
test
xchg
and
push
or
xor
mov
xor
jle
mov
je
clc
lock
xchg
or
clc
cli
mov
push
xor
mov
mov
inc
movsb
jmp
mov
mov
lahf
das
jo
fisubrl
cld
mov
gs
pop
adc
mov
out
cmc
jno
push
jp
mov
cmpl
pop
add
pop
mov
push
pop
stos
movntq
insb
shll
and
fildl
add
test
cld
dec
push
push
mov
js
mov
repz
arpl
int
iret
push
jae
mov
mov
mov
mov
inc
dec
rcll
sub
add
jnp
repz
sub
fldenv
test
popf
dec
in
lret
pop
xchg
lcall
es
mov
clc
cmp
data16
daa
lock
xlat
xlat
in
mov
xchg
push
orl
mov
adc
in
jmp
jb
sub
xlat
scas
mov
int
push
dec
fnstcw
push
jno
sub
arpl
dec
cmp
rolb
icebp
mov
or
inc
stos
cli
loopne
jno
loop
pmaxsw
stos
imul
pop
cmp
mov
pushf
xlat
sbb
jno
xor
out
fnstenv
push
mov
sub
mov
push
xchg
lods
inc
inc
or
xchg
mov
adc
jae
pop
addb
add
jmp
xor
mov
push
add
pop
or
xor
mov
enter
and
mov
mov
scas
pop
xor
xor
cld
test
dec
popa
mov
jbe
push
push
push
sub
fwait
mov
and
and
test
mov
mov
mov
stos
and
popa
cltd
repz
sahf
mov
arpl
pushf
jne
sbb
jp
hlt
out
pop
jne
jge
mov
cltd
test
or
fnsave
xchg
mov
clc
sub
jb
push
roll
cltd
insl
popa
addr16
std
sub
cltd
test
mov
subl
test
push
in
lds
fisubrs
dec
dec
stos
push
xchg
cmp
out
inc
sub
fwait
cmp
jbe
jmp
xchg
mov
cli
popa
aaa
mov
jge,pn
sub
pop
loop
xor
comiss
sub
sub
xchg
fistl
mov
sbb
add
mov
fnstcw
jecxz
push
pop
scas
fsts
push
pop
mov
div
push
sbb
negb
jno
shlb
sbb
push
add
xor
mov
or
add
mov
rcrl
xchg
js
out
lds
cmpsb
mov
sbb
sub
psrld
int
jg
cs
pop
fisttpll
stos
mov
sarb
sub
mov
adc
push
xlat
sbb
cwtl
rorl
mov
push
push
pop
adc
pop
mov
cmp
ds
hlt
pushw
ljmp
dec
pop
dec
cmc
icebp
cmc
push
or
jo
sub
pop
pushf
xor
pusha
or
mov
pop
sub
mov
jle
andl
imul
inc
scas
xchg
lahf
stos
popa
imul
mov
pop
mov
cmp
cld
les
test
in
push
jg
fistl
arpl
inc
int3
into
out
mov
iret
in
cmp
jmp
sahf
movsl
test
mov
pop
mov
jbe
mov
sbb
out
xor
icebp
mov
xor
bound
pop
mov
dec
inc
or
pop
pop
pop
cld
rorl
int
jle
aam
push
je
adc
sbb
xchg
cs
scas
mov
sbb
dec
cs
fsubrs
lds
and
jne
or
xchg
scas
jne
mov
lahf
dec
cmp
xor
ja
sbb
jmp
imul
movb
lock
lock
rcl
loope
sbb
and
loopne
mov
pop
pop
pop
fmull
and
lret
inc
notl
xlat
jecxz
nop
cmpsl
xor
xor
add
inc
dec
pop
add
and
sub
fidivrs
shll
lcall
cmpsb
xor
outsb
bound
pop
outsb
mov
jle
pop
pop
adc
push
cmp
gs
lock
sub
stos
xchg
ficoml
outsl
test
push
fistl
cmp
mov
in
jo
addl
inc
pop
cmp
push
mov
xchg
sbb
mov
je
jae
out
sbb
ja
aam
outsl
cmpxchg
mov
std
stos
ljmp
out
mov
je
dec
aam
fcomip
gs
divl
lahf
jbe
add
xlat
mov
shlb
jnp
or
mov
in
xchg
mov
stos
pop
xor
test
push
in
inc
aaa
loopne
aad
lret
or
adc
xor
fwait
pop
lods
outsb
cmp
pop
cmpsl
mov
sahf
call
scas
outsb
stc
inc
mov
ret
sbb
sti
xchg
or
adc
jg
push
fistl
inc
push
pop
arpl
sbb
aad
pop
scas
das
cmpsl
sbb
in
mov
xchg
mov
sti
jnp
cmp
adc
sub
mov
pop
xchg
loope
mov
jno
mov
daa
adc
insb
dec
mov
xor
jle
mov
jne
into
dec
or
and
mov
fistps
rclb
adc
arpl
test
iret
cmpl
dec
inc
inc
pop
xchg
loope
and
cmpsb
fmul
cmpsl
cmpsb
arpl
pop
pop
jbe
sbb
push
xchg
in
ds
cmp
jns
push
mov
push
fistps
into
in
push
lahf
jae
add
aam
idivb
lea
div
xchg
arpl
xor
ss
sahf
pushf
repnz
ss
stos
int
sbb
adc
xchg
pop
cwtl
in
jae
sarb
mov
sarb
lock
pop
ss
dec
gs
push
dec
xchg
add
shll
iret
jle
or
mov
ja
lock
nop
and
adc
aad
lret
inc
fs
jge
cmpl
xchg
mov
add
test
cmp
add
xchg
cwtl
stc
dec
xchg
fcmovnbe
mov
mov
xchg
mov
mov
sarl
mov
movsl
push
add
insl
dec
mov
xlat
jns
cmp
inc
pusha
dec
imul
out
repnz
mov
mov
in
movsl
ffree
pop
push
fisttpll
mov
js
das
pusha
incl
lock
add
jp
or
xor
fcomps
pop
xchg
sub
jne
or
sti
push
sub
pop
test
insb
or
mov
sbbb
jbe
sbb
rcll
jno
test
into
xchg
lret
jp
or
js
pop
or
pushf
ljmp
push
push
mov
push
sbb
pop
orl
aaa
pop
test
leave
xchg
stc
cmc
push
popa
push
jg
sbb
mov
cmp
pop
inc
hlt
test
lahf
mov
jmp
inc
call
pop
enter
push
mov
jmp
lahf
push
loopne
loope
mov
movsb
lret
rclb
xchg
outsl
loop
dec
add
shr
inc
cld
out
pop
cmp
xchg
ja
inc
sahf
test
xor
nop
dec
push
cmpsl
dec
js
out
in
decl
jp
mov
idiv
jg
lahf
pushf
mov
vminsd
mov
sbb
sbb
pusha
mov
psadbw
fcmovu
test
jno
cs
les
push
fisttpll
pusha
ss
jp
aaa
aad
loop
in
inc
sbb
int
data16
adc
out
cmp
push
sysenter
xor
push
dec
cmpsb
imul
pop
neg
out
xor
pop
out
mov
xchg
and
xlat
mov
xchg
adc
inc
cmp
jno
xchg
inc
xchg
sub
add
loopne
das
clc
mov
popa
mov
fnstcw
bound
gs
les
mov
outsl
sbb
push
scas
pop
add
mov
sbb
pop
andl
xchg
jl
xlat
xchg
mov
cmc
or
call
mov
push
adc
jb
or
sbb
push
pop
lret
pop
mov
cwtl
out
mov
test
in
pop
ret
pop
add
cmp
sbb
arpl
in
push
inc
cmp
mov
add
sbb
mov
dec
call
bound
lahf
movsb
scas
sub
dec
push
mov
sbb
je
inc
and
jb
hlt
inc
pop
je
outsb
push
adc
inc
push
mov
hlt
cmp
adc
mov
xchg
ds
push
paddusw
sub
adc
push
mov
mov
dec
fs
cmp
popaw
mov
push
hlt
inc
dec
mov
xchg
adc
mov
xor
adc
jmp
mov
clc
sub
sbb
jo
dec
dec
cltd
cmp
clc
cmp
cmp
por
mov
sahf
mov
adc
loopne
aad
enter
pushf
push
cmp
sbb
mov
pop
sar
xlat
mov
sbb
out
int
xchg
sahf
pusha
and
pop
mov
jle
loopne
jae
in
xchg
sub
outsl
cld
shrl
inc
sbb
push
adcl
testl
das
in
sub
in
cmp
adc
imul
sbb
fstpt
add
inc
cltd
sbb
mov
clc
repz
pop
pop
lods
sti
mov
dec
rclb
dec
out
mov
or
std
sbb
pop
xchg
iret
aad
mov
xchg
scas
push
neg
dec
sub
in
sub
int
es
mov
icebp
adc
mov
jnp
and
lods
outsb
ret
lods
sti
jp
outsb
or
ss
jp
and
mov
lcall
mov
xchg
fdivrp
rorl
adc
enter
lock
add
cmp
pop
rorb
mov
insb
push
mov
imul
sub
sahf
jmp
aas
pop
inc
inc
jecxz
push
jecxz
pusha
sbb
pop
add
mov
das
femms
fadds
rclb
aam
xor
dec
sbb
out
jle
cmp
cmpsb
scas
das
stos
stos
sbb
xlat
cmp
mov
fadd
out
mov
roll
push
inc
mull
dec
loope
hlt
xchg
std
insl
sub
call
stc
pop
cmp
jl
sub
dec
test
mov
fwait
pop
sbb
inc
ret
aad
std
addb
enter
out
adc
add
cmp
and
imul
aas
cli
iret
add
fldl
mov
scas
pushf
lods
mov
cmpsb
out
xor
push
adcb
xchg
add
push
sbb
int3
and
ja
lahf
fwait
insl
les
pop
sbb
ret
adc
arpl
xor
in
sub
dec
cli
mov
pop
mov
mov
cmp
outsb
stc
rcll
or
sub
inc
adc
or
out
lods
bound
addr16
xchg
orb
pusha
add
arpl
adcl
sub
jne
sbb
lea
add
pop
scas
lock
lds
das
fucomp
adc
loope
fmuls
cld
aas
mov
rolb
jle
add
fs
jne
data16
mov
xor
xchg
in
dec
and
push
cmovge
pop
outsb
ds
cmp
jne
add
jp
rcl
jne
stos
scas
imul
scas
adc
loopne
pop
inc
outsl
dec
nop
ret
imull
sub
push
mov
jno
fcomi
ret
dec
scas
pop
cmpsb
lods
sub
xchg
or
jp,pn
xchg
test
mov
fucomi
hlt
inc
lods
ss
mov
and
dec
xchg
sbb
les
sysenter
mov
add
jnp
xchg
insl
das
rorb
sub
sbb
ja
ljmp
dec
mov
inc
push
pop
dec
mov
mov
pop
insl
pushf
add
fcompl
jmp
jecxz
loope
adc
cmp
adc
mov
in
sub
xchg
cld
mov
mov
jo
jbe
jge
pop
hlt
orb
stos
or
jle,pn
mov
pop
push
subl
xlat
or
lcall
outsl
lcall
loope
aaa
jecxz
jmp
into
in
out
push
cmp
mov
mov
loope
mov
mov
inc
aaa
push
mov
sbb
mov
jb
mov
cmp
pusha
outsb
repz
fildl
push
lock
mov
mov
push
jo
iret
xor
inc
sahf
mov
add
arpl
cld
xor
adc
push
arpl
pop
ljmp
test
fmuls
sti
add
ds
mov
clc
fsub
push
xchg
rcrb
jno
fidivl
cmpl
repz
inc
or
nop
dec
iret
ljmp
jecxz
or
insl
and
fwait
sub
cltd
mov
addl
adc
jp
movsl
mov
cs
loopne
push
addr16
mov
dec
es
hlt
cmp
mov
ds
mov
push
sbb
jge
mov
cld
mov
push
sub
pop
dec
fwait
imul
pushf
cwtl
xchg
adc
sbb
mov
cmp
mov
jle
aaa
mov
mov
mov
pop
push
or
stos
sbb
fiaddl
inc
mov
xor
rorl
inc
add
loope
scas
cmp
stc
xor
imul
pop
ljmp
pusha
mov
mov
pop
movb
loopne
push
sbb
mov
push
ret
gs
daa
lret
sub
sub
adc
or
pop
xor
cmpb
xchg
out
adc
ja
dec
mov
push
fidivl
test
cmc
fildl
add
insb
idivl
insb
jb
loop
cmp
cmp
fldt
pop
ret
mov
mov
mov
mov
mov
mov
inc
push
dec
lahf
test
dec
lahf
loope
icebp
fwait
mov
sti
mov
sub
sub
xor
fwait
stos
mov
ja
cld
movsl
jnp
pusha
or
pop
test
dec
ret
scas
mov
pop
inc
ret
mov
repnz
mov
pop
ds
iret
pop
mov
fnstsw
fdivrp
popf
mov
xchg
popf
ds
mov
test
sbbl
jo
ficoml
fsubrs
mov
jecxz
mov
jg
test
les
push
cs
fstl
inc
push
fldcw
into
cmpsb
imul
das
push
movsb
push
xor
push
je
scas
push
dec
imul
and
mov
in
pop
mov
movsl
outsb
shlb
mov
adc
imull
jnp
outsb
clc
mov
pop
add
mov
push
dec
mov
push
lcall
xchg
mov
sub
xor
push
and
xadd
ljmp
mov
cmp
jl
icebp
adc
dec
orb
cmp
push
and
sub
mov
loope
stos
xor
pop
jg
in
leave
add
je
movsb
xor
xchg
cs
jp
and
or
test
cmpl
pmaxsw
fsubrp
cld
jno
cmpsl
mov
sub
xchg
cmp
insl
fldt
popa
inc
pop
sub
hlt
mov
push
add
jg
xor
push
xor
adcl
pop
add
int3
xor
clc
int3
push
into
dec
pop
loopne
mov
xorl
and
mov
fbld
ret
pop
lret
lock
add
mov
push
fs
ja
daa
cltd
push
pop
pusha
leave
push
outsb
movsl
das
pop
xchg
ss
mov
gs
push
les
inc
push
outsl
xlat
xchg
ljmp
lods
mov
fsts
ret
es
shll
insb
mov
fbstp
mov
dec
loopne
and
loope
mov
test
shlb
adc
inc
outsb
mov
mov
jg
hlt
fcoms
adc
xchg
stos
adc
pop
xchg
pop
rcr
add
mov
pop
mov
xchg
mov
aaa
sub
rcll
add
add
mov
xchg
cmp
push
jno
xchg
or
aaa
push
ret
xchg
inc
mov
out
out
fcoms
push
test
sub
mov
jge
aas
outsb
xor
out
fdivrs
pop
xor
or
ljmp
ljmp
daa
cmp
movsl
sbb
hlt
mov
fcomi
sbb
cmpl
cmpsl
xor
mov
pop
ret
push
or
clc
out
fs
xchg
mov
ret
stos
into
mov
jg
fnstsw
sbb
das
shrl
mov
clc
pop
mov
mov
jp
push
out
xlat
sbb
test
add
xlat
add
add
aas
push
and
xor
or
dec
lea
test
xchg
fldl
xlat
and
jb
adc
add
mov
sbb
pop
pusha
cmp
out
cmp
dec
cmpsb
subb
pusha
sub
sbb
int
push
lea
cmpsl
imul
aam
hlt
sar
add
pop
scas
outsl
xchg
orb
aad
dec
add
cli
sbb
xchg
cmp
pop
lds
stos
cli
arpl
bnd
insl
shrb
cld
ficompl
addr16
sahf
pop
ja
fidivl
sti
es
loop
pop
jb
call
xchg
adc
add
mov
lahf
aaa
and
inc
dec
aam
fwait
in
mov
jg
inc
pop
push
add
sti
sarb
xchg
hlt
jmp
jne
test
movl
out
into
subb
pop
scas
in
int3
sub
lahf
dec
sub
cld
add
mov
jmp
adc
idivl
push
dec
add
lahf
rcll
jb
jns
mov
int3
outsb
arpl
jae
das
int3
pop
dec
scas
stos
mov
dec
push
mov
ret
popa
es
push
xlat
push
es
inc
dec
mov
mov
fwait
and
xchg
fs
loope
sub
xor
mov
mov
adc
je
jle
mov
scas
or
push
jmp
pop
aaa
mov
mov
inc
sub
dec
cmpsl
mov
adc
cmp
test
pop
mov
pop
mov
mov
scas
addb
stos
jnp
mov
cld
jge
xchg
enter
or
xlat
mov
insb
jno
loop
jmp
loop
add
inc
mov
adc
push
aaa
mov
fnsave
cli
shrl
ret
inc
push
je
arpl
mov
mov
jns
xor
xor
push
adc
mov
fdivrl
mov
sub
addb
insb
or
ja
pop
out
fcmovb
test
addr16
test
roll
fwait
jmp
testb
gs
fcompl
and
xor
lret
lcall
xor
in
mov
mov
mov
sbb
jbe
sub
add
int
push
xchg
jmp
adc
jmp
icebp
add
insb
sub
aaa
sub
pop
es
xlat
outsb
push
les
aaa
aam
xchg
lds
popf
cli
stc
or
add
call
notb
popf
xor
mov
jmp
adc
push
in
sbb
push
pop
add
dec
fwait
loopne
inc
sbb
fistl
lods
dec
sub
stos
inc
cmpsb
pop
je
mov
pop
outsb
lahf
pop
int
testb
in
adc
xchg
sbb
sub
push
inc
div
jb
movsl
push
sbb
into
sub
inc
dec
shlb
and
fdiv
outsb
test
xchg
cmp
jecxz
lds
xor
mov
adc
mov
push
stos
out
xchg
pusha
cli
mov
mov
push
mov
xlat
icebp
push
arpl
and
adc
je
lods
mov
push
adc
in
sbb
mov
cmpsb
and
mov
aas
movsl
xor
dec
xor
in
sahf
mov
outsl
push
cmp
cmpsl
sub
add
mov
insb
ljmp
dec
push
and
cmp
jne
mov
mov
xchg
mov
jmp
das
out
int
imul
cltd
call
orb
cmpsb
nop
les
mov
mov
xchg
push
dec
lret
sbb
add
aas
in
in
mov
push
xchg
imul
ss
outsl
push
fstpt
mov
mov
hlt
jbe
daa
xchg
jmp
jl
xor
cmp
fcomps
cmp
or
add
fisubrl
in
repz
ss
pop
arpl
dec
gs
sub
psubb
inc
sarl
xor
inc
pushf
sub
inc
pop
stc
hlt
cld
pop
mov
rorb
loope
shrd
xlat
jmp
arpl
cmp
movsl
lds
loop
scas
mov
lcall
bswap
in
lods
icebp
push
cmp
clc
insl
xor
jp
and
aam
cmp
and
add
mov
jmp
aaa
pop
xor
pop
push
push
lods
nop
notl
pop
loopne
push
inc
rcrl
inc
sbb
ficompl
rcll
sbb
or
mov
cmc
std
mov
push
push
mov
fcomps
cmp
push
xchg
outsb
pop
xlat
test
movsb
fiadds
shrb
lods
add
cmp
or
icebp
push
mov
cmc
lcall
mov
fiaddl
cwtl
xchg
sbb
inc
push
jne
xlat
xor
ja
movsl
mov
cltd
cltd
pop
aad
fsubl
ja
ljmp
sbb
sbb
divb
jno
add
sti
push
testl
sbb
mov
outsb
cli
pusha
aad
push
mov
shrl
push
insl
or
xchg
in
pop
push
jmp
lock
movsl
dec
push
and
add
bound
xchg
push
outsb
jo
scas
fwait
lahf
test
or
orl
fcom
dec
push
sbb
loope
cmp
cmc
xor
das
nop
push
adc
mov
popf
mov
into
test
fwait
xchg
jmp
mov
aam
pop
aaa
cmpsl
mov
push
es
cld
xchg
inc
imul
xchg
xchg
inc
loop
pop
mov
and
lods
or
dec
push
pop
incl
lret
insb
ret
addr16
xor
or
mov
and
mov
clc
ljmp
andb
xor
adc
xchg
jb
sbb
call
dec
jge
sbbl
in
dec
loopne
filds
clc
test
icebp
or
cmp
pop
dec
in
xchg
mov
cmpsb
inc
lret
loopne
enter
std
mov
cs
xor
sbb
fs
sub
dec
dec
addl
arpl
adc
sub
inc
andl
in
pop
push
cmpsl
mov
movsb
pop
pop
mov
les
cwtl
fidivrs
push
repz
je
push
mov
arpl
mov
inc
xlat
aad
inc
mov
leave
xchg
inc
and
gs
mov
push
mov
push
andl
loope
xchg
in
xor
jmp
lahf
test
cmp
cmp
cmp
mov
or
inc
aad
call
dec
mov
lea
add
mov
xor
sarb
pop
stc
or
xchg
mov
mov
add
mov
mov
sahf
aad
lea
mov
lds
into
pusha
jp
jo
imul
adc
daa
test
inc
ret
mov
push
mov
pop
sbb
cmpsb
pop
lcall
jmp
divb
aas
cs
jp
aas
aam
mov
sub
cmp
daa
inc
cmp
cmp
mov
ss
mov
xor
xchg
add
mov
mov
lods
imul
leave
mov
xor
iret
mov
inc
sbb
mov
shl
xlat
add
cli
test
and
shll
hlt
dec
out
test
clc
out
dec
pop
ffree
or
pushf
dec
movsl
push
adc
neg
mov
dec
mov
or
jb
adc
sub
inc
sub
mov
jecxz
bound
xchg
mov
jno
fmull
pop
pop
in
xchg
cmc
mov
jne
push
test
rorb
jge
xchg
imul
mov
fisttps
xor
nop
inc
rclb
cltd
adc
cwtl
sub
sub
jle
add
dec
ret
jmp
movsb
inc
cwtl
xlat
and
mov
shr
inc
loope
sahf
bswap
push
mov
and
pop
xchg
sbb
push
mull
push
xchg
enter
mov
add
call
mov
mov
and
mov
mov
mov
cs
mov
js
or
addr16
cmp
mov
mov
xchg
in
lods
xor
fisttpl
push
rcrl
or
out
push
lods
loope
cmpb
out
sahf
or
cmpsb
insl
push
or
or
jmp
push
pop
stos
inc
xchg
or
sub
inc
inc
and
popl
and
push
and
aaa
mov
ss
jne
das
xor
jmp
dec
sbb
bound
adc
sbb
and
lea
aaa
xchg
stos
outsb
nop
pop
mov
sub
mov
pop
push
cmp
cld
mov
mov
or
mov
stos
mov
add
in
mov
inc
adc
fwait
jge
je
jge
ret
mov
jo
cmpb
mov
cmp
cmpl
ss
inc
cmpsl
mov
clc
xor
push
mov
adc
leave
mov
cmp
cmp
sbb
inc
mov
dec
scas
cmp
test
scas
pop
imulb
pop
mov
test
push
push
cmp
packsswb
push
gs
xlat
mov
fiaddl
mov
loop
nop
lahf
outsl
jbe
das
mov
jmp
fildl
mov
ficompl
dec
add
pop
jl
xor
dec
jne
fisttpll
lcall
mov
xor
fbstp
jmp
push
movsb
pop
push
inc
xor
sbb
jne
add
jb
in
mov
add
out
sub
jbe
pop
or
ret
in
pop
push
sbb
mov
fsubrl
rolb
push
xchg
scas
lret
outsl
mov
neg
mov
in
sbb
dec
ret
mov
mov
push
ljmp
mov
sub
es
xor
push
inc
xchg
inc
cli
pushf
popa
fildll
mov
adc
jmp
out
sub
cmp
mov
inc
int
les
test
add
loop
shrb
xchg
mov
fs
jmp
pop
test
movsl
dec
cmp
test
jl
pshufw
repnz
push
pop
dec
int
or
incl
loope
sub
sub
call
xchg
mov
mov
aas
xor
aas
push
add
inc
inc
jmp
das
pop
sbb
pop
arpl
loop
cmp
imul
popw
fcompl
jnp
int3
dec
mov
sbb
push
or
mov
mov
jbe
adc
stos
pop
push
dec
movsl
sub
push
inc
xchg
dec
fsubr
call
fcomps
mov
inc
fadd
mov
adc
out
test
call
sbb
mov
mov
divb
sarl
mov
xor
pop
mov
call
cmc
push
dec
test
mov
fcmovu
scas
pop
das
or
in
lret
cli
hlt
sbbl
mov
mov
testb
shrb
mov
dec
ljmp
dec
leave
xchg
jl
andl
sarb
dec
push
scas
fstpt
add
push
xlat
jns
mov
xchg
mov
dec
jbe
mov
ja
notl
push
pop
fnsave
mov
loopne
fidivrs
outsl
jns
xlat
mov
mov
mov
sbb
jle
pop
pop
into
stc
popf
sahf
sti
cmp
and
outsl
adc
shll
push
into
jbe
cmp
adc
mov
pop
mov
push
ret
sarl
add
test
jle
or
inc
rorb
pop
mov
jbe
frstor
push
and
lods
sub
mov
jne
jno
mov
popf
call
notb
xor
jmp
iret
mov
push
sbb
std
ss
scas
data16
psllw
xchg
adc
inc
les
idivl
pop
lret
roll
lock
pop
loop
jle
rorb
cs
adc
xchg
xchg
loope
cmc
aam
sti
inc
or
lods
pop
and
add
xor
lock
pop
or
xchg
xchg
sti
jge
jo
push
add
jno
fnstsw
getsec
movsl
int
push
push
pop
push
xor
fidivrs
insb
fdivrs
push
pop
popf
or
push
pop
inc
push
cmc
fsubl
mov
inc
das
mov
sub
jp
push
fxtract
insb
xlat
iret
sbb
andb
sti
xchg
mov
inc
jnp
negb
mov
mov
mov
stos
dec
sbb
sbb
popf
or
and
add
arpl
mov
call
das
push
stos
sbb
inc
pop
adc
imul
xor
fidivs
dec
je
mov
push
jg
cs
jmp
mov
cmp
cs
icebp
inc
aaa
andb
dec
popa
inc
add
add
pop
push
fcoml
lock
push
dec
pushf
dec
sbb
cli
adc
test
out
fiadds
pop
movsb
outsl
les
rol
xlat
loope
sub
stc
dec
cmpsb
lahf
xchg
adc
sahf
call
mov
pop
fcmovnbe
scas
lret
sub
cmp
fsubrs
aam
call
xchg
nop
cmpsb
fstpt
cmp
loopne
push
mov
stos
sub
je
xor
ds
mov
push
clc
push
lock
or
mov
fiaddl
push
les
ret
mov
jg
inc
stos
mov
je
nop
cld
out
insl
xor
outsl
pop
call
mov
sub
test
stos
sub
cltd
push
xchg
ret
mov
xor
xchg
cmp
stos
mov
cli
push
xchg
push
in
pop
jl
into
inc
cmc
mov
nop
stos
or
or
dec
mov
add
sbb
mov
mov
divl
dec
lods
insb
ljmp
imul
test
mov
mov
cmove
mov
mov
popa
into
lods
ret
ficomps
sub
mov
mov
xor
or
pop
loop
adc
dec
decl
adc
fdivs
mov
xor
loop
icebp
leave
add
andb
add
mov
loop
hlt
push
stos
fcompl
adc
sub
add
ljmp
mov
adc
test
ret
pop
inc
pop
setbe
adc
cli
or
inc
out
fdivl
xchg
ljmp
xchg
mov
jo
pusha
pop
shrl
clc
xchg
jno
sbb
insb
sti
addr16
nop
push
adc
sub
ret
jno
inc
fsubrp
out
adc
xchg
dec
sbb
push
push
mov
dec
or
shl
sarl
adc
ficompl
push
xchg
imul
enter
and
jge
push
mov
push
push
jle
inc
cltd
pop
push
cmp
push
into
xchg
aaa
fimull
pop
mov
xchg
pop
sub
or
aad
xlat
out
out
out
mov
lret
mov
inc
jnp
call
jg
jle
mov
pop
and
adc
or
into
pop
lret
or
pinsrw
jno
cmp
add
or
push
aam
in
int
or
iret
aam
icebp
inc
leave
inc
addr16
loope
and
dec
insb
aaa
cmp
jmp
aas
mov
pop
mov
repz
iret
mov
add
in
dec
pop
loopne
js
xchg
xor
call
fidivl
push
jmp
aad
push
adc
pop
mov
int
adc
sbb
and
test
sub
jle
out
adc
cmp
mov
add
adc
out
mov
lds
cmp
or
push
test
jecxz
mov
shrl
mov
notb
pusha
push
and
cmp
add
insb
fstpl
arpl
pop
mov
popf
cmp
sbb
fwait
jle
xchg
sbb
dec
aas
xlat
mov
add
imul
mov
xchg
in
mov
clc
mov
pop
mov
bound
lret
jbe
stc
ss
xchg
xor
push
dec
ljmp
ret
cmp
jl
sbb
pop
mov
push
lds
cmp
xchg
or
jp
mov
pop
jbe
mov
mov
and
mov
dec
test
jne
jns
jns
lret
aaa
mov
in
fcomip
inc
arpl
adc
imul
dec
pusha
ljmp
mov
iret
ret
clc
rcl
pop
sti
out
push
cmp
cmp
sbb
mov
xor
mov
jp
add
push
lahf
lcall
iret
adc
ds
divl
dec
test
sbb
adc
into
in
ljmp
xor
push
mov
pop
fcoms
fbstp
jns
xchg
sub
cmp
gs
mov
xchg
fcoml
pop
or
aaa
in
inc
adc
cltd
push
cmp
lds
outsl
int
outsb
xlat
popf
inc
pop
in
sbb
shrb
lahf
nop
adc
movsl
lds
nop
jge
cwtl
add
loope
jbe
pop
jne
addl
ljmp
mov
pop
popa
movsb
inc
call
repz
ret
jmp
mov
xor
pop
shlb
cmpb
aaa
hlt
and
dec
lods
cmc
xchg
xchg
das
mov
xchg
imul
jg
mov
sahf
push
dec
rolb
and
mov
fxch
sbb
mov
sub
negl
jmp
popa
rcll
inc
pop
cmpsl
insl
xchg
mov
iret
mov
jnp
mov
cmp
push
and
adc
adc
mov
fsubr
movsl
inc
leave
scas
sti
xchg
in
mov
jno
cld
jae
ret
icebp
or
daa
xlat
std
div
jecxz
push
mov
xorl
sbb
cwtl
jecxz
imul
inc
cmp
mov
iret
mov
into
lods
pop
mov
loopne
lea
adc
xchg
jnp
in
xchg
jmp
push
out
sub
pop
xchg
cs
es
pop
pop
lahf
mov
test
js
test
push
sub
jne
pop
ficomps
aas
enter
fwait
jb
cmp
lret
mov
adc
pop
xchg
pusha
xchg
jno
fs
push
sbb
push
subb
sti
mulb
push
out
sahf
sti
add
cmp
xchg
lea
test
roll
cmp
jmp
sub
outsl
xlat
mov
inc
push
jmp
cmp
mov
cmp
cmp
int
push
ljmp
sub
mov
paddusw
add
mov
arpl
jmp
icebp
xchg
stos
push
inc
fstpl
lds
out
lods
push
sbb
or
sbb
xor
mov
adc
push
js
sbbl
outsb
jmp
sub
sahf
aad
jl
pop
fidivrs
or
inc
test
sbb
pop
adc
fcompl
and
dec
and
sti
jns
aam
mov
add
fmuls
cmp
out
stos
lret
mov
out
addr16
or
rol
jp
out
shll
inc
aas
cmc
sbb
xor
cli
ljmp
cli
dec
add
jnp
push
fmull
pop
dec
and
mov
aas
icebp
mov
ret
and
into
mov
jge
mov
or
mov
mov
inc
add
mov
cmp
fwait
mov
mov
dec
jle
push
imul
pop
cmc
push
xlat
adc
push
adc
leave
mov
loope
cltd
scas
mov
jbe
jg
jecxz
into
aad
xchg
pop
push
push
test
outsl
xor
mov
stos
sahf
sub
scas
sbbl
sbb
mov
aaa
outsb
in
lahf
test
cmp
in
sbb
pop
sbb
or
add
push
or
fs
stos
fcmovnbe
xor
scas
stos
mov
and
mov
or
loopne
arpl
out
aad
lret
jo
xorb
fdivs
xlat
mov
pusha
dec
addb
jecxz
inc
jmp
ljmp
dec
inc
enter
loopne
jnp
adc
xor
cs
sahf
loopne
fst
inc
pop
push
sti
movsl
js
dec
dec
or
cmp
fsts
loopne
insl
fisttpll
adc
jb
jo,pt
call
mov
inc
out
mov
dec
aam
push
or
dec
or
repz
cli
jo
dec
rorb
jo
jno
sbbb
add
mov
mov
pop
dec
mov
push
xchg
jle
cmp
or
dec
lock
insl
mov
mov
push
cmp
ljmp
movsb
jo
dec
outsl
ja
cmpsb
mov
jmp
mov
scas
add
xchg
movsb
fwait
mov
inc
int
mov
out
dec
xchg
lea
jge
sti
adcl
or
movsl
or
cmpb
add
lock
ja
jnp
scas
shll
movsb
pop
cli
mov
mov
jno
cld
jnp
mov
loop
dec
xchg
pop
push
xchg
cld
loope
out
or
pop
ret
out
scas
scas
clc
xor
dec
jo
sub
push
jecxz
mov
jo
jb
jbe
sbb
cmp
jle
shll
pop
inc
adc
inc
in
jle
adc
insb
push
pushf
js
scas
cmp
jl
sbb
std
gs
push
mov
scas
jae
xlat
mov
out
testb
fidivs
mov
push
fwait
ret
cmp
xlat
cmc
jnp
jmp
adc
ss
jnp
testb
ss
sbb
push
xor
mov
scas
fwait
xor
gs
das
insb
call
loopne
mov
mov
xor
lock
and
cmpsb
or
jecxz
out
inc
jp
mov
fnstcw
pop
push
sbb
and
pop
pop
lods
stc
aam
mov
dec
sbb
int
mov
stos
shlb
in
and
push
out
test
or
mov
xchg
mov
leave
loope
mov
adc
in
rcrb
test
mov
test
jmp
adc
push
cmp
sub
inc
mov
std
cli
test
popf
sub
ljmp
fidivrs
push
jl
push
ja
xor
pop
xchg
push
neg
hlt
add
xor
shll
dec
lret
push
lcall
movd
fisttpll
add
fbstp
in
sbb
push
test
int3
sbb
lea
emms
sbb
jp
cmp
jbe
inc
repz
cmp
subb
sar
loopne
cmpsb
aam
andps
movsl
cld
cld
adc
shlb
adc
pop
pop
adc
lods
jecxz
outsl
rorl
ret
ret
pop
sbb
mov
mov
cwtl
sbb
imul
shrl
xchg
lahf
sub
push
jbe
ret
sbb
popl
pusha
inc
arpl
fwait
and
adc
fdivrs
adc
jl
jp
adc
dec
aam
ret
loop
mov
mov
pop
jl
lea
rolb
jp
test
testl
and
aaa
icebp
out
dec
push
jmp
test
in
inc
mov
cmp
fmul
sub
ret
insb
sti
mov
pop
sub
filds
inc
or
push
jno
scas
jecxz
in
add
dec
inc
xor
push
add
rcl
outsl
push
sbbb
fwait
jp
dec
cmp
xchg
or
adc
ss
popa
inc
xor
inc
cmpsb
xchg
test
ds
push
aad
cmpsb
mov
push
test
pop
loopne
sub
sbbb
aad
mov
lods
or
cli
jb
es
daa
cmp
adc
mov
fnsave
jge
sub
sub
ss
push
fnstcw
insb
out
dec
cmp
adc
jbe
or
or
test
jno
and
add
fcompl
sahf
xor
daa
ds
cwtl
sbb
insl
fstl
adc
sbb
mov
in
inc
or
push
loopne
int3
jo
add
inc
fsubrp
hlt
outsb
xor
addr16
or
imul
cmp
fstps
adc
mov
pop
fstpl
insb
mov
xchg
dec
cwtl
jbe
add
sub
or
add
xchg
add
dec
add
cmpl
mov
jnp
in
jle,pt
jmp
insl
pusha
sub
sub
lcall
pop
mov
outsb
jp
scas
cmp
js
andl
cli
fidivl
movb
lock
lock
lcall
adc
push
cmp
pushf
cmp
cmp
mov
mov
inc
xlat
sbb
loope
mov
aaa
mov
mov
cmpsb
sarb
cmc
inc
push
inc
test
aas
ficomps
in
mov
call
mov
subb
mov
gs
aam
mov
pusha
int
inc
jne
pusha
pop
and
insl
iret
add
mov
in
lods
mov
pushw
in
add
pop
mov
cmp
in
lea
xor
inc
hlt
int3
sbb
sub
mov
mov
orl
adcl
in
inc
ja
xor
pop
aaa
xchg
cld
and
push
in
xlat
fiadds
pop
enter
dec
jb
xchg
mov
or
jecxz
inc
ret
push
sub
fsubl
out
arpl
int3
jle
sbb
adc
cmp
xchg
jbe
push
xor
mov
mov
out
jns
mov
mov
nopl
push
scas
test
movsl
fsubl
int3
popf
add
clc
mov
adc
mov
inc
push
push
std
js
js
mov
push
aad
shll
dec
mov
or
loope
sti
pop
jne
or
sbb
mov
cld
jno
loop
jle
xchg
jp
sbb
shrb
pusha
cld
sbb
sub
adc
sbb
cmp
outsb
push
fmul
dec
add
mov
add
frstor
mov
out
aas
add
xor
shlb
and
inc
add
mov
mov
loopne
jge
xor
push
cmpsb
data16
fstl
push
jo
clc
sub
mov
dec
pop
dec
sub
push
stos
repz
outsl
pop
fmull
sub
dec
add
sub
mov
xchg
mov
test
std
push
jne
int3
xchg
mov
lret
add
ja
gs
xor
outsl
repz
dec
nopl
push
je
dec
mov
aam
and
loope
push
test
cmp
popa
cmp
mov
inc
scas
jp
std
adc
arpl
mov
xchg
cmp
push
sbb
sub
fisubs
data16
mov
bound
es
mov
shl
lret
cwtl
cwtl
je
lcall
nop
orb
ds
dec
jg
push
arpl
jp
js
mov
inc
call
or
or
jmp
push
cmp
inc
ja
pushf
test
test
fimuls
pop
lcall
cmp
sbb
jno
stc
out
loopne
jae
jno
das
mov
push
jmp
jge
mov
pop
outsl
mov
sbb
sti
out
rorb
arpl
je
cmp
fisubrl
icebp
push
enter
adc
fdivs
adc
out
mov
mov
dec
push
stos
dec
and
inc
xchg
inc
fidivl
fistl
mov
out
popf
add
sbb
pushf
add
push
push
movsb
mov
sbb
pop
fisubs
mov
loopne
add
ror
iret
xor
xor
jl
or
push
rolb
ficoml
mov
fildl
or
cmp
icebp
in
mov
fwait
push
sub
stos
xor
and
and
pop
and
je
dec
xor
push
jp
jnp
into
or
mov
mov
movl
cli
subb
and
ficompl
pop
ss
mov
psubusw
mov
test
jb
stc
sbb
sbb
enter
pop
inc
call
sbb
and
pop
pushf
inc
das
test
sbb
push
pop
test
sbb
mov
icebp
fidivrs
leave
ficoml
clc
fidivs
arpl
in
jno
lods
add
insl
push
jo
adc
mov
inc
inc
bound
in
les
add
add
jge
fistpll
lods
dec
and
js
adcb
in
sarl
sub
hlt
bound
js
rorl
dec
lock
dec
push
dec
cmp
xor
iret
pusha
cmp
insb
sub
testl
in
daa
sbb
out
xchg
int3
push
cmpsl
scas
mov
mov
mov
fsubrs
icebp
les
mov
arpl
jl
lcall
dec
push
int
or
fldcw
pop
xlat
or
mov
rcrb
popf
movsl
pop
stos
aad
aaa
sar
loopne
loope
adc
dec
sub
fdivs
push
jl
out
aad
fdivrs
int
sub
leave
sarl
pop
adc
fcmovnu
mov
daa
jnp
cmpsb
clc
pusha
arpl
push
int
mov
sahf
iret
fists
aam
call
cmpsb
pop
insb
dec
cmp
adc
adc
out
fstl
add
mov
inc
aad
add
sbb
adc
pop
rcrb
lahf
push
out
ljmp
xchg
jnp
flds
add
mov
dec
leave
faddl
mov
push
dec
dec
cli
jle
or
lods
into
sub
inc
fldt
pop
push
pop
xchg
push
adc
hlt
icebp
mov
dec
adc
sub
jb
imul
sub
and
daa
test
addr16
xchg
jns
sub
int
leave
lret
pop
arpl
mov
fstpl
sub
leave
pop
mov
mov
lret
dec
inc
js
xor
bnd
movsb
and
jne
pop
lds
and
cmp
in
test
dec
adc
jae
clc
das
pop
pop
pop
inc
les
cmp
std
rolb
jg
inc
mov
sahf
jp
jmp
std
jb
test
dec
push
sbb
insl
xor
pop
jo
cmpsb
inc
mov
test
sbb
lret
sbb
lock
jmp
ss
jbe
push
mov
popf
jbe
pop
inc
jb
xchg
pusha
ja
push
or
sbb
inc
cmpsl
iret
add
or
notb
cmp
push
xchg
lret
inc
test
out
lods
adc
in
mov
add
in
shr
js
icebp
sahf
mov
mov
bnd
icebp
mov
adc
pop
dec
mov
push
mov
rcll
bound
test
dec
hlt
shrl
sbb
jge
loope
mov
inc
push
cmp
cmp
mov
push
sti
push
add
inc
in
loopne
jecxz
or
fnstsw
mov
movsb
popf
xchg
pop
sub
sbb
dec
aaa
das
cltd
aaa
fcoml
test
inc
addr16
insb
sbb
insb
add
call
fstl
insb
cs
pop
js
mov
mov
adc
lcall
bound
xchg
rorl
adc
add
fucomip
shl
jecxz
cmpsl
incb
arpl
sub
imul
mulb
push
jno
sarl
in
test
inc
cmp
jne
arpl
xlat
push
les
fcoml
repnz
cltd
cmp
sub
out
and
mov
lods
andl
es
std
cmp
or
sub
mov
outsb
jne
push
stos
fldt
arpl
add
ljmp
cli
adc
adc
xchg
sub
test
out
mov
xchg
vpaddsw
mov
inc
jle
arpl
mov
frstor
inc
pop
cmpsl
insb
aad
call
loop
addr16
fcompl
aad
lock
loope
out
and
cmp
xor
aas
mov
cli
hlt
adc
in
or
mov
jp
test
js
fwait
adc
std
shl
pop
scas
xor
sbb
xchg
shlb
loopne
out
pop
adc
adc
cmp
test
and
cmp
inc
daa
ljmp
xchg
insb
nop
cmc
scas
in
cmc
arpl
pop
cs
orb
lock
aas
stos
gs
mov
cmc
cmp
cmp
ret
cmp
lret
mov
stc
adc
xor
js
mov
xchg
sbb
push
pushf
out
test
out
push
pusha
pop
test
sahf
lea
xchg
or
jne
cmpl
iret
je
ss
adc
mov
pop
aaa
lds
mov
fstl
mov
or
dec
cmpsl
xchg
xor
jo
aas
insl
loope
pop
scas
sbb
or
loop
imul
cmp
shrl
xchg
ds
out
adc
in
arpl
out
test
or
sub
sub
jp
jp
add
pop
call
and
movsl
pushf
push
ret
xor
lcall
int3
adcl
and
xlat
mov
loope
sbb
jge
ljmp
aas
jg
xchg
or
dec
adc
es
jbe
xor
subb
jbe
pop
xorl
mov
out
xchg
leave
loopne
inc
fwait
mov
fidivrl
fcmovbe
jmp
mov
sahf
shrb
add
mov
xchg
les
imul
push
cmp
cmpsb
ret
mov
mov
sbb
push
pop
fchs
in
push
jns
loop
cs
jecxz
popa
push
int
fdivrs
loop
jl
rcl
adc
outsb
fists
mov
inc
mov
das
data16
sub
mov
insb
lock
cmc
pop
fiaddl
xlat
icebp
dec
xchg
mov
fwait
xchg
test
adc
rcr
mov
lret
std
and
pusha
movsb
out
test
fldl
mov
ss
rcrl
mov
xor
add
mov
xchg
fistps
inc
mov
mov
adc
loopne
add
enter
stos
sub
inc
sbb
mov
lods
rcll
mov
inc
ffreep
dec
icebp
or
inc
adc
push
pop
pop
xor
data16
and
mov
cli
movsb
push
adc
std
jmp
mov
imul
sbb
fisttpll
int
out
daa
inc
mov
mov
jl
push
jp
mov
push
pop
cmp
xlat
jne
xlat
rcr
or
test
clc
push
dec
pop
ret
dec
mov
pop
clc
shrl
pop
movl
sub
es
arpl
adc
cvtps2pd
mov
shl
mov
outsl
and
push
mov
ds
add
xchg
es
mov
stos
into
add
nop
repnz
push
shlb
sub
imul
or
enter
in
cmpsb
pop
jge
inc
mov
scas
sbb
pop
sbb
add
jp
fbld
mov
dec
jbe
fimuls
xor
fstpl
shrl
sbb
pop
xchg
add
rorb
cmp
mov
outsl
xchg
divl
jle
ss
inc
into
test
sarl
ret
xor
je
xchg
fiadds
int
xchg
daa
jp
enter
js
icebp
xlat
inc
push
and
into
out
dec
pop
clc
xlat
add
cmp
and
mov
sarb
out
mov
fistpl
dec
cmp
aam
sbb
mov
sub
test
sahf
and
out
mov
negl
or
xchg
aas
ret
mov
push
into
shl
testl
dec
ljmp
inc
push
mov
pop
ds
cmc
lahf
stos
int
clc
std
cmp
imul
sti
ljmp
jno
or
fs
pop
push
test
pop
adc
pop
inc
mov
in
popa
mov
and
sub
jo
sahf
mov
pop
out
adc
pop
jno
sbb
jbe
pushf
mov
pop
roll
mov
mov
clc
inc
jns
ret
pop
pextrw
xchg
mov
jbe
fmuls
mov
pusha
mov
test
jne
sti
loopne
add
fs
push
loop
adc
jp
dec
or
jmp
adc
jns
mov
inc
cmp
pop
aas
inc
in
lcall
enter
jge
ret
inc
dec
sub
lret
pop
and
sbb
jae
frstor
xor
cs
aad
cmpsl
incl
aad
add
jmp
fsub
sub
add
lock
mov
mov
fisttps
imul
cmp
insb
adc
lock
test
or
xchg
daa
push
js
aaa
inc
mov
push
dec
push
pop
push
int3
outsl
or
xchg
xorl
sbb
movsl
arpl
lret
mov
or
cld
mov
jp
push
and
pop
xlat
mov
mov
test
cmpsl
rclb
scas
outsb
pop
mov
jb
and
out
mov
je
fmull
cltd
pop
out
mov
jmp
xor
xchg
inc
jne
xchg
add
ljmp
mov
jbe
mov
mov
mov
movsl
std
ret
xchg
psubd
push
movl
fildll
stos
and
fs
pop
xchg
addb
dec
lock
pop
arpl
adc
insl
add
or
mov
push
icebp
out
aas
jbe
sub
aaa
mov
lea
cmc
sub
cmp
mov
xor
ljmp
aaa
mov
sti
je
mov
hlt
xlat
sarb
push
lock
push
and
cmpsl
invd
test
inc
sbb
mov
add
jle
push
cmp
xor
and
xor
imul
pop
push
push
sub
xor
mov
cld
mov
jle
sub
inc
rcrl
and
ficomps
mov
xlat
dec
fmull
mov
aad
push
pop
jmp
inc
dec
push
add
repnz
in
in
push
mov
insl
and
cmpsb
aam
mov
inc
add
mov
es
push
idivl
out
pop
shlb
mov
pop
mov
aam
add
xchg
push
sub
push
jo
and
insb
aaa
sub
in
iret
add
jg
fcmovnbe
pop
cmpsb
sbb
and
pushf
sbb
pop
cli
push
sbb
jl
mov
inc
outsl
sbb
sbb
in
jne
repz
nop
or
rclb
call
or
andb
inc
mov
outsb
cmc
loopne
movzwl
pop
dec
mov
or
adc
shl
cmp
mov
leave
pop
cmpsb
shrd
ret
pop
adc
ds
cmp
mov
test
pop
xor
lcall
pop
shll
or
hlt
fidivl
pop
call
pusha
mov
xor
adc
out
cs
ljmp
in
ficomps
add
cmpsl
xchg
inc
int
insl
sub
ja
test
addb
mov
add
inc
fadd
push
or
inc
popf
and
push
jb
bound
mov
dec
imul
mov
mov
scas
out
jae
shr
add
jne
pcmpeqb
sbb
xchg
insb
cmpsb
jnp
in
mov
je
dec
rol
insl
arpl
cmp
jl
call
popf
lods
or
imul
jo
clc
pop
ret
in
pop
cltd
aaa
ja
mov
mov
adc
mov
outsb
add
push
ret
push
jo
leave
add
push
shr
js
mov
and
mov
je
int
or
rorb
movsl
cmp
insl
das
gs
xchg
cs
or
xor
xchg
in
aam
mov
xor
adc
xchg
or
orb
out
mov
ljmp
add
or
mov
aas
in
imul
dec
mov
aad
xchg
inc
icebp
loopne
fdivl
xchg
jbe
inc
int
push
xlat
push
sbbl
cmp
inc
xor
xor
lods
cmp
push
jne
add
test
es
ljmp
das
jmp
jp
fists
add
push
jge
cmpsb
mov
xchg
inc
scas
jnp
inc
cmpsl
dec
jecxz
mov
scas
push
repz
out
lea
jno
loop
out
mov
loopne
xchg
js
sbb
filds
rcrb
shll
push
jge
fdivl
dec
lahf
js
call
insb
mov
sbb
adc
cld
stos
sarb
test
mov
js
inc
mov
loopne
add
pop
jne
adc
jbe
lcall
outsb
inc
aad
dec
pop
cmc
jecxz
test
xor
pop
inc
addr16
mov
add
dec
fwait
jecxz
cli
icebp
rol
dec
push
int
push
pusha
not
push
mov
js
xor
push
lods
dec
cli
mov
cli
cwtl
mov
dec
push
sub
push
cld
jnp
push
or
ret
sti
fcoms
inc
daa
lahf
js
cmp
mov
loope
xlat
or
jno
sarl
or
sbb
push
lock
ds
push
ljmp
mov
dec
stos
xchg
pop
mov
call
imul
or
test
insl
mov
adcl
test
xor
roll
test
bound
nop
stos
divl
lret
sbb
shrl
mov
aas
int3
mov
push
dec
ljmp
lahf
mov
sub
jle
pop
jbe
or
mov
out
xor
mov
fwait
pop
pop
loopne
out
adc
lods
out
lcall
sbb
stos
clc
imul
or
test
add
mov
adc
inc
cwtl
hlt
out
mov
fwait
in
in
push
cmc
dec
xor
icebp
ror
aad
push
sbb
sub
xchg
push
dec
test
push
cmp
push
dec
stos
jbe
loope
jne
inc
add
push
fnop
cmp
std
fdivs
jo
add
cmp
hlt
xor
xlat
aad
adc
sub
jne
jne
pop
jb
cs
or
mov
loope
push
aad
fsubrl
jecxz
popf
fisttpl
std
mov
rclb
clc
mov
imul
adc
sar
ss
ds
adc
mov
clc
test
fcomi
insl
mov
lcall
cmp
loope
jp
icebp
out
sarb
sub
mov
je
das
test
xchg
ret
push
test
jo
sub
fiaddl
lds
jbe
loopne
ss
mov
or
jecxz
sub
xor
add
test
push
stos
sbb
pop
pop
xchg
sbb
icebp
stos
xor
xor
xchg
cmp
out
stos
daa
aaa
int
hlt
adc
push
jbe
cmpsb
dec
imul
popf
outsb
adc
popf
pop
arpl
xchg
mov
sbb
dec
pop
xchg
cmp
xor
fildll
cli
cmp
mov
inc
pop
adc
jne
clc
ficompl
xor
push
and
cmovbe
or
jnp
mov
push
mov
enter
out
push
scas
iret
ds
les
push
dec
cli
in
iret
xchg
sub
inc
lock
icebp
shrl
mov
xlat
fiaddl
cld
push
jmp
xlat
mov
hlt
cmp
in
xchg
ss
dec
stc
test
aad
shll
das
xor
or
jne
sbb
aam
mov
add
cld
fsts
push
repz
sbb
fisubrs
jmp
cmpsl
and
divl
imul
fcoml
jl
jge
jmp
jbe
aas
mov
sbb
jb
adc
je
fidivrl
cld
sub
lcall
or
mul
mov
mov
outsb
shrb
popf
andb
ret
cmp
fldt
subb
mov
push
lods
push
imul
jg
movsl
push
xor
or
mov
push
or
jb
cmp
inc
xor
jbe
mov
rorl
pop
inc
or
daa
cmp
fwait
aaa
xchg
nop
ret
jp
lock
xor
cmpb
call
mov
mov
cmp
sahf
fstpt
mov
pop
push
lds
sub
jp
adc
mov
outsb
pandn
xchg
adc
aam
loope
mov
fcompl
popl
out
jmp
sbb
xchg
ret
filds
jecxz
add
or
mov
mov
or
sar
test
mov
xchg
stos
push
sub
lods
popf
mov
pop
mov
imul
sub
mov
pop
aad
jge
sub
hlt
mov
loope
cwtl
clc
in
cmp
pusha
mov
mov
mov
int3
push
les
push
lret
mov
jmp
or
lods
loope
int
xor
and
xchg
inc
es
inc
test
iret
push
fmuls
sbb
les
fidivrl
add
lock
mov
div
mov
dec
and
sbb
fwait
xor
andl
mov
mov
fwait
add
in
jae
imul
adc
jne
xchg
loopne
inc
pop
mov
mov
adc
mov
pop
inc
jnp
push
push
or
arpl
rcll
ljmp
push
lret
jecxz
call
insb
push
ljmp
or
inc
aas
mov
mov
or
sti
sub
or
and
in
call
xchg
pop
xor
jne
je
pop
cmpsb
lock
push
jno
js
sub
nop
and
adc
adc
xor
adc
jnp
aam
shll
adc
push
popa
or
outsb
dec
lcall
mov
ret
jmp
cmc
jbe
mov
xchg
add
mov
cs
std
ljmp
sbbb
cmp
xchg
sub
adc
inc
call
cmp
loope
mov
xor
iret
inc
dec
push
movsb
shll
mov
aam
jle
repnz
cmc
push
jnp
sarl
push
test
mov
add
mov
fsubs
rol
ljmp
mov
xlat
fldl
mov
test
sub
sub
in
mov
adc
sub
jns
in
bound
lcall
iret
mov
jge
and
inc
stos
cli
aam
aam
inc
or
pop
stos
scas
std
daa
in
rcrl
xchg
pop
cmp
mov
popf
cltd
jb
jmp
xor
lea
mov
pop
mov
mov
inc
movsl
cmp
mov
ret
adc
lock
add
pop
xor
stos
dec
repnz
arpl
ret
push
push
fidivrl
and
pop
add
mov
and
cld
mov
xchg
orl
out
pop
hlt
icebp
jns
faddp
xor
mov
out
add
pop
ja
mov
int
jg
mov
xchg
fcoms
pop
das
test
je
add
call
mov
push
fildl
dec
cld
pop
mov
dec
pop
sub
lea
jge
and
sti
lock
push
xchg
and
js
mov
aas
cli
ds
rcr
mov
mov
mov
dec
gs
out
mov
jnp
dec
pop
icebp
cltd
pop
ss
test
test
outsb
pop
sub
push
mov
imul
xchg
mov
stos
jecxz
mov
dec
in
jl
int
pop
imul
mov
inc
loopne
fwait
iret
inc
pusha
ret
lods
test
mov
out
add
mov
mov
sahf
fadds
scas
aam
rolb
and
aas
clc
insb
adc
xor
push
test
in
outsl
cmpsl
out
dec
lods
jbe
sbb
xchg
jne
mov
inc
das
xlat
mov
pavgb
push
xor
mov
cmpsb
ljmp
lcall
push
fisttpl
sbb
movsb
and
inc
dec
mov
fildl
rclb
nop
mov
fldl
adc
jg
shrb
call
or
sbb
mull
icebp
xchg
push
negl
jl
dec
jge
pop
push
pop
mov
aaa
pop
jae
mov
add
mov
into
or
stos
lret
lock
dec
xchg
or
loope
jle
fldcw
imul
cmp
test
mov
push
adc
lock
add
xor
push
push
mov
fdivs
sbb
push
jne
mov
cmp
loopne
into
aam
inc
clc
aaa
aam
repnz
pop
aam
loope
adc
cmpsl
mov
sbb
sbb
sbb
sbb
sbb
nop
pushf
push
rcl
aad
xchg
adc
mov
test
jbe
jecxz
jnp
xor
js
mov
imul
mov
nop
ss
push
call
adc
mov
movd
jne
adc
jb
mov
shrb
mov
js
inc
dec
mov
inc
pop
fcmovu
mov
jnp
dec
mov
roll
js
cmc
out
les
iret
push
dec
fildll
ret
mov
fcomi
dec
leave
ljmp
sbb
push
in
out
mov
sahf
outsb
nop
lcall
fnstsw
fisubs
jle
aad
push
mov
out
push
add
fistpl
repnz
insl
loop
or
xor
lods
jnp
dec
push
inc
aad
xor
in
adc
adc
jnp
std
hlt
cmpl
xchg
or
ret
andl
lods
shlb
scas
arpl
test
mov
clc
call
in
lods
mov
cmp
cwtl
push
mov
push
es
incl
ljmp
push
ds
push
pop
sbb
clc
in
push
shlb
jne
mov
icebp
push
sub
jbe
fdivs
stc
je
push
xlat
lock
sbb
lock
sbb
call
jle
leave
jge
inc
jbe
push
xlat
ds
imul
xor
pop
xchg
loope
imul
nop
sub
cmpsl
push
sarl
aad
in
ljmp
clc
icebp
cli
pop
mov
in
pushf
lods
mov
insl
sbb
and
dec
aaa
loopne
push
cmpb
mov
hlt
inc
arpl
scas
outsb
jne
dec
push
mov
push
gs
outsb
loopne
xor
cs
jno
cmp
mov
sbb
push
ja
les
subb
cmp
imul
pop
aad
adc
mov
cmp
mov
clc
sahf
insb
mov
pop
jo
push
sub
xor
stc
inc
sub
jge
xchg
in
sbb
roll
andb
insl
lods
outsl
sub
and
pop
cld
loop
mov
mov
and
cmp
xchg
cmp
mov
xor
mov
int
out
shll
lock
addl
aam
add
js
mov
cmpsb
cmp
fwait
lret
inc
gs
bound
push
fsubs
stc
lods
sbb
popf
incb
mov
in
cs
mov
sub
in
sbb
adc
in
aaa
cmc
in
jmp
xor
and
push
xchg
aas
xchg
add
mov
sbb
xchg
or
call
xor
shll
imul
pop
ret
lret
xchg
sbb
sub
mov
jecxz
imul
add
pop
cltd
or
cmpsl
dec
push
sbb
xchg
pop
pop
push
mov
repnz
fmull
loop
pop
add
int3
or
add
cmpsl
ss
lds
call
mov
mov
xor
dec
aam
pop
arpl
dec
icebp
xor
js
xor
stos
sbb
js
and
jne
xlat
loop
push
and
adc
push
loopne
or
mov
pusha
addr16
and
dec
jbe
rcrb
mov
mov
jle
pusha
adc
mov
inc
mulb
cmp
mov
xchg
pop
pop
mov
add
pop
testl
xor
adc
add
adc
fldl
cmc
popa
xchg
inc
xchg
push
jbe
mov
mov
mov
outsl
pushf
dec
out
and
inc
push
scas
mov
sub
xlat
aaa
cmp
jbe
or
dec
or
jo
roll
cwtl
xchg
cli
sub
and
cmp
jp
stos
push
dec
mov
cmp
push
js
mov
add
movsb
mov
das
call
inc
insl
add
pop
idiv
jmp
lds
mov
mov
xchg
xchg
sub
xchg
fldt
insb
cmc
pushf
hlt
icebp
pop
mov
daa
sub
push
lods
sti
cmc
stos
jmp
mov
inc
mov
shlb
mov
mov
pusha
repnz
ret
cmp
add
mov
pop
xchg
icebp
xchg
test
fsubl
das
jmp
jne
mov
test
pop
or
xorl
sbb
enter
jmp
repz
mov
mov
mov
jmp
mov
mov
out
xor
aad
sub
shlb
outsb
cmp
fwait
lret
nop
out
lcall
repz
jle
push
or
push
loopne
ds
pop
add
shl
sbb
jge
mov
mov
jge
mov
cwtl
inc
sahf
sti
aam
fisttpl
mov
cmpsl
in
dec
xchg
sub
mov
fldl
js
mov
push
loopne
mov
jge
cld
dec
mul
jb
inc
mov
shll
sahf
sahf
out
rclb
fbstp
js
enter
cmp
scas
mov
ss
test
ret
cltd
and
mov
jnp
inc
aas
sbb
jns
xor
rolb
inc
inc
insl
loopne
cmp
mov
jl
mov
push
call
je
or
ja
loope,pn
inc
xor
mov
sbb
cmpsb
js
pop
dec
pop
imul
and
imul
adc
pusha
dec
dec
fildll
dec
pop
adc
add
daa
int
mov
ja
sbbb
ffree
movsbl
add
cmp
or
push
idiv
and
pop
push
xlat
inc
inc
retw
cmp
cmp
ja
xlat
into
pop
out
lret
movb
fcmovu
jecxz
jmp
fincstp
push
mov
pop
in
mov
vorps
xchg
bound
add
mov
lahf
push
jmp
clc
sbb
icebp
fwait
mov
xchg
in
out
cli
mov
push
sahf
test
loope
push
cmpsb
mov
mov
jge
popa
inc
fadds
hlt
sub
jae
mov
or
pop
pop
push
or
pop
sbb
loopne
in
loopne
sbb
jns
fsts
dec
test
sub
push
je
or
jecxz
mov
imul
pop
fstpt
pop
insb
lds
push
add
icebp
pop
mov
jmp
andb
jae
dec
pop
fnstsw
enter
movl
xor
sub
ljmp
loopne
pusha
mov
sti
sahf
cmp
cli
jnp
outsb
sbb
adc
aad
jbe
xor
in
push
mov
mov
sbb
pusha
mov
add
pop
leave
sub
imul
outsb
adc
fnstcw
pop
mov
movsb
cmpsb
iret
shl
jp
in
repz
xchg
jne
or
inc
cmpb
sub
dec
sbb
push
ja
lcall
js
pushf
sti
cmc
mov
fidivrs
int
insb
mov
xor
iret
cmp
dec
sbb
push
xor
cmp
sahf
xchg
scas
out
xlat
stc
imul
fstps
inc
add
adc
insb
sbb
sub
fs
call
pop
sbbb
mov
mov
xor
sbbl
in
cmp
pop
cmp
shrl
shl
jo
sub
orb
lods
xor
and
fdivrs
or
ret
jns
jns
or
pop
fwait
xchg
jbe
or
mov
pop
fsub
dec
jae
ret
mov
cmp
outsl
jne
inc
shr
add
aad
pop
sbb
ds
daa
addl
repz
mov
dec
inc
lret
movl
ds
pop
pop
inc
ss
insb
or
loop
rol
es
adc
sbb
push
orl
dec
dec
or
repnz
adc
pop
push
frstor
mov
outsb
fwait
mov
iret
add
xchg
sub
fnstcw
dec
push
jo
fistpll
orb
lret
pop
stc
clc
outsb
js
push
aaa
test
pop
inc
test
pusha
or
scas
or
add
loope
push
rcll
mov
out
jae
xor
clc
sarl
adc
xor
leave
frstor
das
nop
jle
sub
imul
pushf
add
in
insb
stos
dec
mull
inc
jb
jle
and
lock
gs
sub
fidivrl
or
add
or
jmp
mov
adc
sub
sub
rorl
std
inc
test
pop
in
sub
cmp
test
je
movsl
jb
js
adc
jp
xor
test
inc
stc
jmp
scas
aad
xor
ret
scas
cmp
add
xor
mov
mov
sbb
fbld
stos
inc
and
cld
test
jmp
subb
fsubrs
jp
idivb
lods
push
xchg
sub
sbb
pop
push
aam
mov
jecxz
jmp
lahf
shlb
xchg
add
sahf
pop
xlat
cmc
setno
notb
aam
out
aas
dec
ret
inc
or
jmp
leave
mov
imul
mov
mov
dec
cwtl
je
pop
stos
test
fcompl
pop
mov
psrad
inc
cmp
aam
cmpsb
scas
mov
jbe
xor
icebp
clc
mov
mov
sbb
test
adcb
jecxz
mov
jl
imull
insb
push
adc
jecxz
sbb
scas
mov
leave
hlt
lds
fisttpl
ret
int
insl
dec
jo
shrb
mov
mov
pop
sub
bound
jg
adc
pop
testb
popa
fs
or
xor
arpl
jo
cmp
mov
mov
push
int3
xchg
sub
pop
ljmp
xchg
push
bound
dec
push
adc
movl
stos
negb
ret
js
stos
cmc
aam
outsb
adc
pop
xchg
inc
loopne
cmp
add
jns
push
outsl
cmp
ljmp
and
mov
das
sahf
ss
out
mov
push
mov
test
xchg
jne
fs
xchg
int3
or
cmp
lock
jns
and
ret
aad
lds
mov
inc
fsubr
fnstsw
fnsave
mov
xchg
push
loopne
mov
nop
dec
xor
xchg
outsl
push
mov
or
mov
cmp
xor
sub
jmp
xchg
dec
adc
pop
lds
pop
push
cmp
sub
clc
xor
cltd
dec
das
push
ja
dec
aam
ds
or
aas
push
cmpsl
shrl
in
cmp
dec
sbb
outsb
push
cmc
push
mov
insb
push
jo
test
or
pop
stos
add
pop
imul
test
xor
clts
int
sbb
hlt
test
dec
out
stc
imul
pop
jp
cltd
push
aad
push
shll
cmp
or
rclb
dec
idivl
pushf
mov
ret
hlt
fwait
sbbl
les
jge
sbb
mov
aas
int
jmp
adc
lock
dec
jns
movsl
dec
mov
push
bound
mov
mov
mov
ret
fimuls
mov
in
pop
loopne
testb
adc
fdivrl
lods
xchg
pusha
arpl
push
inc
sbb
add
xor
pusha
in
xchg
cmp
stos
cltd
loope
stos
add
fdivs
sahf
fcmove
mov
in
push
sbb
push
loopne
jle
adc
xchg
dec
pop
je
jp
out
pop
push
sub
xchg
sub
mov
xchg
mov
jnp
idivb
arpl
mov
inc
xchg
push
xchg
and
jo
inc
fnsave
lret
push
cmpsl
sbb
clc
xchg
mov
cmp
mov
jl
call
cmp
jecxz
into
push
mov
pop
je
fcomps
and
int3
clc
shll
mov
jne
push
pop
jg
stos
subl
loopne
inc
mov
dec
jl
in
lcall
lcall
jge
push
rcrb
fdivrl
loopne
fisttps
into
arpl
mov
sti
push
jl
subl
incb
cmp
ficoms
js
fisubrs
jmp
shl
mov
or
mov
aad
sbb
cmovge
pop
add
popf
sbb
aas
xchg
mov
push
rorl
es
dec
je
jmp
dec
or
in
arpl
outsb
lock
mov
sub
jb
test
jp
or
in
pushf
mov
scas
adc
insb
jo
pop
out
orl
xor
mov
scas
push
jb
cmp
into
xchg
insb
paddusw
adc
imul
lahf
push
ljmp
scas
pop
mov
popa
orl
push
ja
push
lock
xchg
jecxz
add
cmp
cmp
cmp
fucom
jnp
rcrb
lods
pop
or
inc
out
ret
cmp
inc
ja
add
cli
push
sbb
inc
push
out
ret
add
push
lcall
add
sarl
lds
iret
push
inc
rolb
mov
std
cmp
sbb
movsb
cld
cmc
adc
sub
out
push
hlt
aad
dec
add
sbb
imulb
decl
mov
loopne
cmovno
adc
jl
je
mov
push
call
jnp
jl
sub
mov
pop
testb
bound
sbb
int
mov
stos
xor
sbb
mov
cmp
movsl
fldcw
lock
lret
jns
ss
mov
adcl
fs
cwtl
aas
cmp
sahf
push
call
pop
mov
dec
mov
sub
cmp
daa
inc
mov
pop
push
inc
insl
xchg
cmp
mov
xor
jge
dec
mov
push
movsl
sbb
mov
xchg
cld
mov
lock
ss
fcom
insl
xor
cmp
fildl
adc
jns
int3
jb
aad
jge
sbb
inc
in
jg
and
inc
mov
mov
sbb
lods
xchg
sub
pop
pusha
push
or
cltd
xor
into
jecxz
sbb
aaa
pop
cmp
mov
insl
cmpl
sub
int
cli
insb
mov
jb
cld
imul
out
clc
dec
dec
sbb
out
mov
jb
repnz
movsb
pop
pavgb
pusha
jne
add
mov
pop
insl
aaa
push
push
data16
mov
out
clc
ljmp
xor
cmp
mov
push
xchg
js
rorb
ret
in
cld
cmp
ss
push
je
arpl
ficomps
jmp
rorb
xchg
rolb
scas
fnstsw
mov
test
in
mov
xchg
rorb
push
shrl
mov
clc
cmp
adc
lds
es
mov
outsb
imul
sbb
mov
stos
loop
and
outsb
jecxz
xor
jge
loop
test
js
mov
fisubl
adc
mov
sub
inc
pop
fsubrs
inc
stos
and
fdivrs
push
xor
sbb
xor
sbb
inc
push
xlat
in
fs
icebp
pop
xchg
movsl
mov
mov
mov
mov
sbb
and
dec
mov
jecxz
sbb
jbe
movsl
lods
or
mov
ljmp
dec
dec
sbb
adc
ljmp
inc
sbb
test
imul
sbb
ja
push
popf
and
pop
push
xlat
out
adc
rorb
scas
mov
pop
mov
mov
pushf
loop
inc
and
sbb
cs
push
mov
mov
sbb
xor
mov
nop
xchg
mov
enter
scas
and
aaa
mov
jne
or
fmulp
sbb
jne
out
shrb
or
cmc
leave
sub
mov
jp
or
cmpsl
jnp
mov
or
dec
lret
add
imul
pop
mov
arpl
pop
push
mov
in
mov
vaesenc
xchg
popa
outsl
cmpsl
lods
test
leave
enter
ret
cmpsl
pop
mov
scas
inc
mov
xor
pop
xchg
sbb
in
inc
and
imul
adc
cmpsb
aaa
mov
adc
and
sahf
xchg
push
mov
xchg
add
jb
popf
popf
mov
mov
pop
lods
push
mov
sar
pop
in
mov
call
icebp
sub
rorl
stos
imull
test
lea
xchg
push
mov
ss
lds
dec
stos
cmpsb
sahf
jae
mov
nop/reserved
scas
addb
scas
xorl
imul
mov
aaa
scas
loop
data16
scas
cmpsb
push
adc
cmpsl
fidivrl
mov
ret
mov
test
ret
pop
add
xor
pop
ljmp
push
xor
pushf
sub
mov
fsts
sub
jnp
jmp
or
cmp
in
push
lcall
xor
ss
dec
dec
dec
addl
xlat
mov
cmpsl
out
sahf
jecxz
xchg
fs
std
pusha
pop
jno
sarb
incl
jmp
xor
les
fdivr
cld
cmp
cmpsb
and
inc
mov
xor
fcmovnbe
mov
xor
and
pop
sbb
sbb
xorb
jns
xchg
cmp
inc
call
xor
lods
daa
cmp
out
pop
hlt
scas
sbb
xchg
ds
daa
jo
adc
into
rcrb
mov
and
jno
inc
daa
push
icebp
je
stos
loope
jmp
notrack
ljmp
ja
lods
jno
jnp
fcoml
test
dec
loope
adc
or
push
mov
sub
add
or
push
push
fdivr
xchg
daa
dec
mov
imul
rol
mov
mov
stos
cmpsb
je
add
out
cmc
xchg
jbe
dec
testl
dec
aaa
mov
out
push
sbbb
jo
jo
hlt
mov
leave
jl
mov
push
push
sub
jp
and
push
sub
mov
pop
cmp
push
ret
jecxz
sbb
mov
mov
mov
fdivl
popf
out
rdpkru
pop
popf
xor
mov
out
or
mov
jge
outsl
pop
insb
mov
test
out
arpl
ret
xor
sub
test
cmp
xor
popa
ljmp
js
mov
out
test
adc
add
xchg
cmp
idiv
pushf
dec
jnp
jnp
cmp
push
cmp
ds
and
out
popl
or
add
xor
mov
lcall
inc
jne
xchg
dec
or
mov
mov
add
push
mov
jge
repnz
push
pop
jo
faddl
xchg
imul
push
dec
sub
push
inc
aaa
out
aad
mov
mov
mov
test
pop
xchg
and
push
aad
mov
mov
testl
pop
cld
pop
inc
call
hlt
push
adc
aad
pop
lcall
xlat
push
iret
push
fwait
push
dec
les
in
jae
mov
cmp
repnz
aaa
mov
lsl
popa
movsb
xchg
sbb
inc
shrl
stos
out
ss
fstpl
je
rcrb
movsl
xor
les
shll
jp
ficompl
and
dec
pop
jmp
out
mov
mov
mov
loop
and
cmpsl
jmp
mov
xor
test
inc
fisubs
push
or
and
dec
push
imul
mov
or
inc
xchg
sahf
andb
cmpl
inc
nop
shll
xor
xchg
sarl
call
dec
aam
aas
push
and
icebp
sub
lcall
cmp
mov
sbb
add
jle
rcrl
push
xor
lods
fs
sbb
dec
xor
pusha
add
js
jne
imul
pop
mov
cmp
mov
cs
popl
aaa
enter
mov
and
xor
lcall
mov
adc
loopew
xor
mov
xor
push
lcall
loopne
ja
push
xor
cmpsl
int
xchg
and
sarb
push
mov
ljmp
outsb
xchg
mov
dec
into
sub
insb
jne
jne
data16
lret
sub
mov
mov
dec
fsts
imul
xlat
add
dec
or
pcmpeqw
mov
cld
inc
mov
inc
push
jo
mov
mov
aaa
in
sub
jg
cmp
shll
sub
insl
shll
outsl
inc
testl
xor
rcll
mov
and
mov
jbe
les
pop
jmp
shll
test
jp
or
or
lcall
aam
and
aad
dec
inc
adc
jae
test
test
rcrl
xor
add
sbb
cli
lret
push
add
lret
sarb
lcall
out
out
inc
jge
sbb
repz
mov
fadds
and
outsb
sbb
ljmp
cmp
push
aad
mov
adc
jbe
rcl
mov
sub
pop
outsb
je
ret
orb
push
pop
outsb
jecxz
pop
ds
and
push
jl
xor
ret
out
cmp
in
leave
mov
sahf
sahf
sub
insl
fisttpl
or
ss
mov
xor
dec
mov
ds
xlat
mov
lcall
adc
mov
push
mov
mov
popf
push
lea
shll
fs
btsl
insl
and
dec
pusha
ret
inc
mov
mov
loopne
jg
jp
out
inc
pop
je
push
shrb
and
cmp
jle
mov
out
ljmp
mov
scas
das
jg
cmp
sbb
mov
xor
in
lret
sbb
mov
imul
cmp
mov
imul
push
push
aaa
and
cmpsb
push
mov
clc
add
iret
add
mov
sbb
mov
adc
pop
mov
outsb
sbb
xadd
sahf
notl
jl
jge
add
aas
push
subb
sti
leave
and
cli
inc
movsb
push
push
loop
loopne
mov
stos
xchg
out
push
cmpsb
inc
aas
neg
fst
in
outsb
inc
ljmp
mov
mov
loopne
out
cmp
cmpsb
pop
or
and
mov
inc
push
jmp
hlt
sahf
pop
sarl
into
sub
mov
cmpsl
repnz
or
in
cwtl
js
xor
xchg
faddl
lock
lcall
aas
dec
pushf
cwtl
mov
sbb
dec
push
out
pop
jg
or
push
das
xor
push
sub
cmp
jne
mov
adc
xchg
adc
pop
mov
addb
fbld
fstpt
jecxz
sbb
popa
fwait
scas
jns
mov
mov
test
push
aaa
ja
test
xor
jae
jne
mov
or
cmc
dec
fwait
jge
pop
xchg
lods
cld
nop
xchg
ret
test
sahf
popa
push
dec
jae
dec
stc
inc
dec
repnz
xor
mov
adc
loope
cmp
fwait
pop
push
mov
fidivl
pop
cmp
pop
jg
jnp
jbe
pop
stos
mov
pop
loop
xchg
dec
arpl
mov
loope
add
mov
pop
imul
xchg
ret
jnp
and
insl
mov
stos
dec
daa
int
lock
stos
je,pt
sub
inc
jecxz
inc
mov
sbb
sub
imul
and
imul
jbe
cmp
push
aam
push
mov
or
daa
sbb
cmpsb
lods
test
sub
lds
insl
and
or
mov
cmp
icebp
lds
sbb
fwait
mov
popf
dec
mov
mov
mov
mov
outsb
xchg
push
or
mov
divb
sahf
sbb
and
in
jmp
push
sbb
stos
jbe
add
sub
push
inc
into
ficoml
lods
je
sub
jp
push
push
int
shrb
in
pushf
mov
xchg
sub
cwtl
ja
adc
sbb
cld
rorl
inc
xor
xchg
inc
inc
inc
loopne
js
xor
jne
fwait
jb
xchg
popf
ret
das
cmp
or
aaa
popa
xor
xchg
push
push
stos
mov
push
into
inc
jno
adc
insb
and
pop
mov
jo
add
test
repnz
inc
shrb
xor
outsl
jge
xchg
sbb
out
data16
push
insl
pusha
push
adc
mov
sahf
insb
mov
cmc
lock
fistps
mov
icebp
mov
ds
sub
inc
inc
fisubs
mov
mov
insb
call
dec
je
sbb
push
jge
out
dec
mov
mov
cmp
stos
jmp
test
pop
push
push
adc
dec
into
testb
cmp
data16
jge
jle
hlt
push
lods
pop
mov
cmp
add
ss
lret
push
ret
and
mov
out
loopne
jg
roll
or
mov
nop
dec
fdivs
and
stos
sbb
ljmp
sbbb
push
or
or
sbb
push
push
mov
ret
pop
xor
pop
in
sbb
xor
or
in
lcall
insl
shl
repnz
mov
mov
sbb
mov
insb
mov
movsl
sub
dec
mov
xchg
sub
pop
mov
xchg
leave
cmpsl
iret
pop
sub
in
push
and
inc
pop
inc
das
lcall
mov
mov
adc
es
push
or
inc
sub
pop
popa
std
push
mov
movsl
mov
cmp
shlb
or
jae
adc
mov
add
popf
pop
inc
out
aam
jne
pop
pop
ja
test
cwtl
adc
xor
test
int
imul
inc
inc
repz
repz
lcall
inc
add
clc
push
sbb
sub
lock
or
dec
mov
mov
clc
outsl
jno
aad
rorb
aas
mov
cmpsb
fistpll
add
jl
iret
loop
jl
loop
push
push
cmp
icebp
loope
cmp
mov
mov
cmp
xchg
push
stos
test
adc
pop
cltd
lret
adc
cmpsl
xor
ds
mov
mov
xchg
addr16
arpl
fs
push
dec
sub
mov
loope
xlat
sub
inc
cmp
mov
jl
mov
inc
std
aam
mov
mov
and
scas
addr16
cmp
jb
ljmp
inc
cmp
and
jp
insl
pop
fsubrl
das
movsl
ffreep
jns
icebp
adc
jbe
mov
inc
in
cmpsb
xchg
or
cmp
das
sbb
call
call
mov
jb
outsl
nop
in
cli
inc
xor
mov
mov
pusha
adc
dec
les
jg
pop
or
test
daa
jmp
fcmovbe
addps
inc
sqrtps
jl
xlat
jp
orb
sti
aad
xor
mov
fnstcw
sbb
add
test
sbb
mov
or
xchg
jbe
cmp
pop
rcrb
lret
or
cmp
in
push
cwtl
pop
add
inc
test
cmp
jns
je
outsb
ret
add
or
sub
pop
fcoms
insl
sub
adc
pop
add
fbstp
fistpll
in
sub
es
jecxz
dec
pop
xchg
cmp
jge
jb
and
pop
loopne
fisubrs
les
mov
dec
sbb
or
test
pop
cltd
dec
ja
cli
jbe
icebp
ss
push
in
ror
xchg
loopne
clc
mov
add
mov
mov
outsb
arpl
hlt
enter
adc
inc
ss
lds
cmp
sub
mov
adc
out
jnp
aam
fildl
or
unpckhps
push
sub
xor
or
add
mov
daa
je
movsl
stos
sbb
test
and
jns
mov
xlat
hlt
imul
xchg
shl
jbe
cmp
lcall
xor
rclb
enter
dec
cmc
pop
mov
sahf
fildll
sbb
stos
movsl
fdiv
pop
imulb
jl
imul
mov
cmp
leave
cmp
mov
mov
imul
inc
jge
xchg
pop
scas
shr
pop
repnz
push
popf
in
idivb
lea
mov
adc
pop
leave
in
das
or
adc
adc
repnz
add
xor
add
sbbb
push
sbb
push
testb
adc
sub
sahf
mov
loope
imul
in
adc
divb
add
sbb
jnp
jnp
and
inc
or
dec
sub
leave
mov
cmp
push
lds
lret
push
inc
outsb
scas
in
push
mov
adc
cmp
jno
pop
cld
and
dec
pop
popa
adc
and
fisttpll
dec
push
jae
mov
pop
out
pop
xorb
jnp,pn
daa
or
push
aaa
jp
push
fsts
jle
push
xchg
mov
mov
das
in
xorb
adcl
in
test
xchg
adc
xchg
xrstor
iret
xchg
or
das
nop
pop
adc
mov
cwtl
fwait
ret
pushf
xlat
add
cmpsl
sahf
mov
insb
cmpsl
adc
cmpsl
std
jb
leave
in
aas
test
lods
or
lods
jnp
sub
scas
dec
mov
nop
fldt
in
adc
mov
mov
pop
cmpl
and
mov
daa
or
sbb
pslld
and
mov
popf
lret
in
mov
xor
das
fnop
ret
scas
in
fcom
xchg
aad
fsts
ficompl
dec
loopne
mov
std
in
sub
jns
adc
fistpl
call
leave
lret
pop
shl
std
hlt
ret
or
or
sbb
nop
mov
jnp
incb
add
add
xchg
pop
pop
in
jl
mov
adc
xor
xchg
mov
pop
fstl
sub
jl
lods
mov
lods
cltd
add
mov
fbld
pop
sub
sub
pop
fsubrs
mov
pslld
add
lret
dec
es
add
xor
xlat
xor
jg
sub
add
cmp
pop
jb
fnstsw
adc
lods
lods
add
pop
inc
addl
loopne
dec
call
sub
test
leave
ret
push
cmpb
or
sub
and
xchg
add
and
cltd
test
nop
mov
pop
add
and
inc
insb
insb
outsl
arpl
mulb
or
insb
fistpl
push
cmova
push
xchg
mulps
idiv
dec
outsl
fs
gs
popa
outsb
fs
fcompl
aas
imul
push
mov
popf
adcb
inc
dec
jae
dec
gs
mov
test
inc
jne
jae
jb
sti
pop
insb
sti
outsl
insl
inc
imul
outsw
sub
fistpl
jo
outsb
mov
je
jb
in
or
inc
add
dec
add
add
pop
inc
cmp
std
aas
loopne
popl
add
add
xchg
xor
dec
pop
test
inc
inc
or
fwait
lds
adc
pop
or
cltd
dec
mov
add
xor
mov
xchg
adc
add
sar
shlb
mov
add
adc
dec
inc
inc
in
mov
jmp
and
inc
ret
and
dec
pop
sub
xchg
fcomip
out
inc
mov
and
ss
mov
popa
je
enter
out
add
leave
pusha
addr16
cmp
mov
jb
sahf
mov
es
in
je
sbb
add
add
addb
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
