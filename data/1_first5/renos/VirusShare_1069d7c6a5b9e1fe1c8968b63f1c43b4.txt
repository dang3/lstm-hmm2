xchg
inc
lea
jmp
mov
push
call
call
pop
in
fmull
enter
shlb
enter
enter
orl
mov
mov
lods
cmp
xor
test
push
add
fs
daa
cmp
cmp
nop
inc
push
sbb
sub
push
sbb
and
sbb
sbb
jmp
inc
or
push
mov
add
mov
jnp
imul
jo
clc
or
pop
sti
clc
pop
pop
pop
ret
pop
lock
mov
mov
hlt
cmpl
je
repnz
cmp
addb
repz
rorb
mov
cmpb
je
or
mov
lret
repnz
mov
and
xor
mov
dec
cld
mov
and
xor
pop
incb
pop
lock
icebp
add
int
sti
shll
mov
cmp
ja
jg
call
repnz
jge
lea
repz
jne
in
and
lret
out
sub
add
inc
or
repz
xor
push
sti
sub
add
mov
lock
push
lea
lea
js
std
or
cmpb
jne
push
lock
jae
aaa
jmp
or
xchg
mov
add
loop
clc
imull
imul
push
pop
sti
idiv
jnp
add
sub
pop
sub
pop
sub
and
add
mov
scas
or
aad
xchg
bound
adc
add
mull
jnp
stc
std
xor
in
push
sub
cmp
push
mov
mov
repnz
adc
fisttpll
scas
es
fucomp
and
in
dec
dec
rcll
and
or
mov
cmpsb
and
jno
and
jle
in
mov
aas
inc
enter
test
xchg
aad
sub
pop
mov
pushl
mov
and
scas
pop
je
cmovle
pop
sub
pop
in
jle
cmp
sbb
mov
testb
cmpsb
push
aad
lcall
jmp
lcall
roll
pop
in
cmpsb
cmpsl
and
pop
mov
ja
or
lea
and
test
loop
in
mov
orb
test
nop
jbe
nop
fstl
dec
mov
dec
mov
xorb
mov
pop
mov
adcl
stos
sbb
lret
xchg
div
int3
mov
sbb
in
push
mov
fisttpl
cmpb
adc
or
jle
int3
icebp
int3
loop
cli
bound
insb
loope
scas
gs
stos
daa
jae
out
in
idiv
scas
and
gs
cmp
addb
daa
sbb
fnstenv
push
jnp
pop
mov
lods
sbb
xchg
ljmp
aad
sub
pop
pop
pop
es
lcall
sub
mov
repnz
mov
lods
movsb
outsl
sarb
outsb
orb
std
repz
pop
sub
ljmp
mov
loop
mov
mov
mov
or
movsl
fwait
or
jne
sti
outsb
and
cmpsb
pusha
outsl
cmp
mov
mov
outsb
arpl
push
scas
mov
fdivrl
fmull
and
into
xor
das
mov
jp
lret
mov
jle
loop
idivb
or
test
dec
popa
inc
gs
mov
jp
sbb
inc
mov
pop
data16
and
dec
pop
out
xor
sub
addr16
scas
and
sub
test
or
aam
loop
pop
fnsave
jb
cmpsb
mov
repnz
sub
sub
out
xchg
adc
stos
nop
mov
add
pusha
push
pusha
in
pop
aad
add
lahf
cmpsb
push
push
sbb
movsl
adc
in
inc
in
sub
mov
or
inc
or
pop
mov
loope
movsb
mov
and
push
pushf
add
int3
jo
out
cli
cmpsb
pusha
xchg
stos
adc
sub
pop
inc
icebp
movsl
and
cmpsb
and
add
inc
xchg
adc
pop
inc
hlt
ret
mov
jne
test
jne
or
movlps
add
cmc
inc
imull
std
push
call
je
subb
jbe
cmp
insb
add
movzwl
dec
test
add
mov
add
in
movl
push
dec
lea
cmpsb
inc
ret
fdivr
push
mov
adc
push
or
inc
rcll
cmp
or
or
sub
jb
or
dec
fdivl
push
mov
dec
cmpsb
mov
jmp
sub
fwait
dec
push
fs
or
jae
arpl
dec
rcll
add
xchg
xor
adc
dec
push
jne
ret
dec
outsl
popa
fs
imul
popa
jb
inc
adc
push
push
push
imul
inc
insb
insb
outsl
arpl
inc
pop
bound
call
adc
lea
das
adc
adc
cmp
decl
adc
pop
dec
aas
mov
sbb
xchg
outsl
movsl
out
idiv
mov
inc
mov
dec
mov
mov
dec
inc
inc
dec
inc
xchg
mov
in
cmp
jne
push
push
xor
lea
je
mov
sti
jmp
mov
lea
mov
clc
inc
dec
dec
dec
inc
lcall
decl
xchg
mov
inc
mov
mov
mov
inc
inc
inc
dec
dec
lahf
pop
lret
clc
jno
out
hlt
cmpsb
stos
hlt
push
lcall
adc
call
mov
jo
mov
mov
jmp
scas
cmp
jns
lea
mov
inc
lea
mov
inc
inc
ja
outsl
jmp
lea
cmc
xor
lcall
jmp
and
cmp
cmovns
inc
scas
mov
dec
dec
dec
xor
mov
xchg
mov
ljmp
mov
out
mov
lea
pop
inc
out
xchg
in
mov
mov
fadds
dec
js
sbb
and
out
lock
in
push
mov
decl
jg
add
sbb
mov
mov
outsl
and
mov
inc
cmp
jg
dec
mov
ret
insl
xlat
loopne
inc
sub
in
xchg
lock
mov
call
push
pop
jns
xchg
or
dec
dec
xlat
std
inc
push
neg
inc
mov
cmp
jno
mov
mov
mov
stc
lahf
and
xor
cltd
xchg
icebp
add
loope
insl
sti
in
xor
imull
pop
push
repz
cltd
outsl
lcall
mov
mov
subl
test
outsb
fistl
mov
lock
inc
dec
dec
xchg
in
xchg
out
in
aaa
lea
in
dec
inc
mov
mov
in
in
js
xchg
imul
clc
negb
jg
lea
mov
xchg
sti
jno
adc
inc
dec
inc
xchg
pop
jne
sbb
or
mov
scas
sub
cmp
mov
xchg
aaa
inc
mov
lea
in
sbb
mov
or
jl
cmpsl
sti
negb
lahf
cmp
jle
mov
fistl
bound
xchg
fldenv
fbstp
fidivrs
xor
inc
inc
xchg
mov
in
mov
out
and
mov
adc
inc
mov
mov
mov
mov
cmp
mov
fsub
dec
repz
nop
loopne
mov
xchg
mov
ja
mov
sbb
mov
dec
mov
inc
dec
mov
dec
mov
mov
outsl
jge
xor
test
cmp
jns
es
xor
inc
cmp
ja
mov
pushl
inc
mov
imul
push
xchg
inc
inc
mov
icebp
dec
dec
cmp
sbb
mov
lea
jg
aaa
nop
insb
fidivrs
or
inc
mov
cmp
jnp
push
lods
sub
mov
in
out
push
outsb
push
adc
mov
loope
fldt
xchg
xor
mov
mov
or
test
add
incb
scas
inc
gs
jb
inc
fs
sub
jae
mov
aam
das
cmp
or
mov
std
incl
fisttps
cmp
movsl
jo
lea
mov
aam
out
daa
clc
xchg
call
jge
mov
mov
jl
mov
mov
cld
test
mov
addr16
cmp
neg
in
in
jbe
cltd
inc
inc
pop
lcall
jb
sar
outsl
mov
push
cld
mov
mov
aad
xchg
jle
dec
mov
dec
sbb
sub
aaa
mov
das
sub
out
dec
cmp
lock
mov
adc
arpl
dec
mov
mov
cltd
add
push
sub
rcrl
loopne
shrl
xor
mov
or
mov
fwait
mov
int3
call
clc
negb
cmc
adc
or
mov
inc
xor
or
mov
es
dec
inc
xchg
push
mov
mov
jge
leave
jg
cmpl
mov
sbb
sbb
outsb
push
dec
mov
mov
mov
inc
mov
loopne
les
imul
aas
cmp
xor
xchg
xchg
js
mov
mov
call
aaa
cld
lea
lret
xchg
fmul
xchg
test
sarb
xchg
pop
movsl
in
sbb
jo
sbb
mov
pop
fwait
outsl
mov
dec
dec
inc
dec
inc
push
add
adc
mov
xchg
push
mov
add
jo
test
out
mov
sti
or
adc
out
and
sbb
cmp
rcrb
push
cs
les
or
ret
mov
bound
movl
sbb
push
roll
pop
push
insl
loopne
lock
enter
inc
xor
aad
jecxz
cmp
push
mov
scas
mov
test
inc
sub
stc
popa
mov
int
in
xlat
add
loopne
pop
dec
xor
lret
push
ja
movsb
mov
mov
enter
enter
ret
outsb
loopne
lea
mov
push
xor
adc
inc
xor
loopne
pop
or
jns
cmp
cld
filds
mov
aas
sbb
inc
jne
mov
inc
fs
and
pop
dec
sbb
dec
sahf
or
pop
ret
mov
mov
push
or
loop
sbbl
adc
fwait
dec
inc
cmp
sbb
add
add
sbb
ret
inc
stos
mov
inc
cld
scas
push
outsl
lods
xchg
mulb
loopne
mov
inc
or
sbb
and
sbb
adc
xor
add
and
add
leave
pop
cmp
cli
lock
js
cwtl
insl
or
add
xor
or
in
in
xor
add
mov
jae
adc
ud0
jne
sbb
fstpl
mov
add
shlb
xchg
insb
jae
jl
roll
dec
push
cmpxchg
add
pusha
frstor
adc
cmpl
fbstp
or
pushf
add
add
dec
cmp
call
pusha
sbb
fs
insb
mov
pop
clc
test
push
push
jne
and
rcrb
mov
pop
sub
cltd
shl
lea
or
dec
test
xchg
int3
pop
je
jb
clc
push
aam
xchg
push
sbb
sub
and
adc
cwtl
cmp
jne
mov
add
out
gs
negb
cs
insb
or
add
jb
and
pop
fiadds
pop
or
add
pop
sti
outsl
jg
adc
xor
push
imul
rclb
insl
jbe
popa
jbe
cmpps
cmovbe
add
and
add
jb
imul
insb
je
leave
adc
inc
mov
inc
idivb
inc
insl
jo
imul
pusha
push
inc
bound
push
pop
add
addr16
inc
imul
outsl
popa
jb
gs
out
mov
mov
jbe
dec
insl
je
outsl
insl
jb
andl
mov
gs
pop
dec
xor
mov
inc
fmul
js
lahf
jne
jp
sbb
gs
sub
inc
xchg
gs
mov
pop
iret
nop
popa
adc
cmpxchg
popa
sbb
call
dec
push
loopne
mov
xor
js
in
in
dec
adc
mov
sub
and
shlb
and
clc
pusha
inc
fmul
mov
and
or
aaa
test
ror
push
ficomps
cmp
xchg
mov
jge
fld
fst
mov
in
fwait
cmp
inc
add
cmp
xor
add
shlb
cmp
cmp
cmp
xor
xor
aaa
mov
push
cmp
sub
mov
jns
sub
mov
nop
push
jns
push
inc
pop
push
mov
out
outsb
mov
push
das
add
or
sub
jge
and
jne
adc
addl
aad
cld
xchg
stc
stc
cmp
push
lock
sbb
jle
stc
stc
stc
stc
call
cmp
ret
cmp
push
add
fsubs
sbb
push
sbb
dec
mov
leave
daa
lods
add
aam
jge
out
psubb
xor
loopne
in
sub
add
sub
and
lds
mov
push
enter
mov
sbbb
sahf
inc
xlat
daa
rclb
sbb
outsb
lods
mov
add
mov
das
push
xor
xor
add
in
testl
sbb
adc
cld
pop
cmpb
jne
sbb
and
jo
rorb
push
push
sub
jmp
xorl
pop
inc
mov
jbe
pop
jne
jge
sbb
jmp
sub
sbb
cwtl
int3
or
clc
sbb
jo
fldl
lret
mov
clc
add
repz
std
cli
lcall
xor
add
sahf
cmp
lea
mov
pushf
lods
enter
pop
mov
scas
aam
push
dec
mov
push
add
into
sar
jnp
int3
inc
cld
loop
push
and
sub
mov
loop
xor
enter
testb
cmp
or
sub
push
inc
fsubrl
and
mov
xor
popf
mov
push
xchg
cld
or
test
dec
js
das
movsb
inc
call
add
jae
add
mov
push
push
xchg
adc
lock
aad
test
pushf
clc
pop
add
fcomi
cmpsl
mov
inc
adcl
mov
push
add
jg
pop
cmp
add
imul
decb
and
pop
andb
and
cmp
cs
or
test
push
add
push
iret
add
std
lock
incl
ja
xor
div
and
paddsb
add
xchg
jns
cmpsb
pop
cmpb
add
xor
add
mov
mov
add
clc
jbe
insb
nop
mov
jbe
inc
mov
mov
jmp
sub
std
xchg
sti
mov
xor
mov
jle
add
addr16
mov
fidivs
mov
dec
inc
lods
insl
xlat
sbb
jbe
cwtl
or
clc
clc
dec
sbb
pushl
mov
add
mov
rol
aaa
imul
ja
mov
in
mov
push
adc
in
dec
pushl
int3
mov
sub
xor
shrl
sti
mov
in
aad
mov
dec
les
popf
mov
xchg
mov
mov
out
outsb
mov
leave
dec
mov
mov
inc
adc
adc
mov
dec
jg
sahf
sub
add
push
jnp
sarb
adc
jg
je
sbb
mov
mov
sbb
mov
add
sub
add
add
cmp
call
xchg
inc
sysexit
out
mov
out
fcmovnb
repnz
lods
pop
sub
fs
mov
cmp
jns
cmp
clc
sbb
adc
sbb
push
inc
sar
aam
push
xor
les
cmp
sub
and
inc
pop
cmp
jg
mov
int3
movsb
adc
subl
pop
addb
and
mov
xchg
call
imul
dec
push
rol
stos
dec
mov
mov
dec
push
call
or
std
push
movsl
ljmp
jge
mov
adc
movsb
dec
pop
inc
lock
mov
jns
ja
loop
inc
mov
lock
test
xor
jmp
insl
mov
pop
pop
cmp
subb
add
pop
mov
jmp
paddw
mov
test
xchg
inc
dec
dec
mov
sti
sub
repnz
movsb
loope
sub
add
push
jne
push
adc
fisttpl
fwait
xor
xor
add
mov
or
test
cmp
js
inc
or
xor
sub
push
dec
sbb
inc
and
subb
test
mov
ret
sarb
in
hlt
mov
mov
mov
lock
pushf
pop
fwait
pop
and
add
sbb
dec
xor
add
in
nop
inc
jbe
and
test
clc
jg
idiv
test
mov
pop
inc
inc
add
mov
sub
sub
add
mov
and
fs
insl
jmp
add
add
daa
push
and
pop
out
jbe
fadds
lahf
or
add
pop
fwait
int
mov
add
cs
sub
sub
dec
jmp
cmp
ljmp
jae
dec
add
push
pop
push
notl
add
test
dec
add
add
mov
adc
inc
add
sbb
outsl
mov
arpl
pop
and
or
pop
in
lods
mov
sub
xchg
rolb
pop
sbb
cmc
mov
mov
add
add
xlat
add
fistpl
add
push
push
pop
addr16
add
fnstenv
setg
mov
cwtl
popf
imull
insl
mov
pop
inc
movsl
ljmp
cmp
mov
mov
fisttpl
add
or
jbe
shrl
mov
jbe
or
repz
out
xchg
xor
xlat
dec
lcall
push
outsl
imul
pusha
iret
adc
popa
lods
sti
outsl
add
daa
sub
sub
and
pop
jae
or
add
aaa
stc
push
es
lods
jmp
or
and
fists
push
das
or
and
aaa
loope
bound
push
push
clc
sub
inc
jg
sbb
scas
fwait
inc
subl
xchg
sub
pop
xchg
insb
pop
sub
lret
push
inc
ja
mov
scas
mov
xchg
push
inc
pop
push
adc
or
lock
fldl
fisttps
push
inc
inc
cmp
xchg
push
inc
and
pop
jne
or
fxch
xchg
mov
aaa
ss
ret
enter
sub
cmpsb
mov
out
push
cmc
inc
sbb
mov
add
mov
sbb
sub
adc
mov
andl
mov
mov
xchg
mov
gs
xchg
jb
pop
mov
test
dec
lret
lret
ds
xor
lods
pop
ret
push
push
mov
insb
or
dec
fstps
inc
mov
leave
shll
and
stos
or
sub
sub
or
sbb
push
popl
xor
mov
jb
lods
lret
add
push
pop
insw
subl
pop
push
scas
sbb
adc
fadds
sti
addl
fisubrs
and
xor
xor
add
lds
es
xor
adc
lret
or
xlat
xor
lahf
push
jno
pusha
inc
add
and
data16
imulb
or
add
mov
xchg
push
shll
or
or
fildll
xor
xlat
aaa
pop
inc
ret
mov
fucomip
flds
jle
adc
cld
stos
pop
add
mov
je
dec
push
fdivs
or
fdivl
sub
and
cmp
xor
test
test
push
inc
lods
add
dec
adc
out
out
pusha
imul
jo
iret
push
shlb
jecxz
xor
std
xor
mov
xor
sarb
aaa
mov
add
and
jmp
mov
xchg
add
pusha
fcmovnu
pusha
stos
xchg
out
js
jl
in
and
mov
mov
or
or
lock
int3
add
pushf
dec
pop
shl
fcoms
or
push
mov
rcrb
fdivl
fcmovb
sub
ficomps
out
dec
jno
jo
inc
rcr
adc
jno
cwtl
lock
rcll
iret
cmp
repnz
out
rclb
nop/reserved
sbb
outsl
add
ja
ja
add
and
inc
push
fidivs
in
test
add
cld
daa
out
or
pushf
jge
mov
sbb
dec
fadds
in
imul
jbe
add
pop
fsubs
pop
mov
jle
mov
aad
movsl
sub
jne
mov
loope
ja
dec
adc
sbb
and
jle
clc
inc
xchg
cmp
outsl
sbb
test
or
ja
and
sub
sub
push
sub
subl
and
in
std
sbb
js
notl
add
cld
mov
fidivl
ss
jbe
pop
clc
fcmovnu
sbb
push
adc
mov
out
jle
aas
ja
insl
imul
in
jmp
outsl
pop
xor
push
test
insl
mov
push
test
or
inc
mov
pop
mov
or
push
add
mov
scas
fmuls
test
xchg
sbb
inc
xlat
pop
movsb
les
lds
insb
jno
mov
insb
mov
pop
add
loope
add
pop
pop
insl
lods
and
sbb
sbb
imul
lar
ret
mov
daa
loopne
jmp
jg
jno
ret
fwait
mov
pusha
jae
inc
aam
out
jnp
clc
movsl
or
mov
outsb
mov
sub
inc
cs
push
ss
fdivrs
push
rclb
cld
sahf
fmuls
outsb
shll
push
xchg
imul
jnp
push
test
or
adc
insb
push
push
push
mov
mov
jb
gs
mov
mov
inc
out
jge
imul
add
jne
int
call
xor
mov
dec
add
add
sbb
mov
cmp
fidivs
xlat
sbb
xor
cltd
hlt
js
add
ds
lods
xor
or
pop
sti
and
jle
xchg
pop
inc
dec
lods
addr16
mov
andb
das
in
inc
mov
jp
adc
cs
fwait
das
mov
sub
push
lods
pop
ret
push
outsl
pop
adc
pop
out
iret
xchg
cltd
xchg
sub
js
insl
imul
jae
sbb
movsl
xchg
pop
jmp
pop
pop
jp
ss
xchg
cmc
mov
xchg
hlt
jno
lods
or
mov
pop
jl
mov
rolb
xor
mov
nop
jge
mov
cwtl
pop
fdivrl
add
dec
out
imul
rcll
mov
push
add
daa
mov
jg
pop
int
outsb
push
fistl
scas
arpl
int3
sbb
xor
xchg
push
push
dec
push
testb
xchg
jae
dec
scas
icebp
or
inc
in
int3
adc
push
add
sbb
fldl
push
rcll
fwait
clc
punpckldq
sbb
mov
dec
test
mov
iret
in
lahf
sahf
call
movsb
imul
inc
sbb
imul
test
ja
ss
cmpsl
jecxz
cmp
dec
addr16
sub
adc
dec
sbb
add
dec
pop
ja
pop
pop
shlb
out
dec
outsb
and
addr16
mov
push
pop
outsl
aaa
test
sub
mov
fst
aas
ja
and
enter
or
fisttpll
js
add
iret
jg
outsb
daa
aas
orl
sbb
jmp
test
out
cli
and
insl
ret
or
cltd
in
test
repnz
mov
mov
fs
and
movsl
jne
in
imul
es
fbstp
mov
les
testl
fildl
and
adc
fadds
or
cmp
dec
lgs
fildl
mov
dec
mov
cltd
mov
mov
push
jne
mov
cli
mull
fmulp
add
fistl
xor
ljmp
bnd
jb
incb
bound
dec
pop
out
fistpll
jno
nop
and
and
fadd
std
dec
test
and
mov
cmc
test
neg
push
cmp
cmpsl
cmp
stos
test
rcrl
mov
mul
or
mov
mov
push
mov
in
andl
and
dec
scas
iret
cmp
lods
pushf
es
cmp
imul
repz
cmpsl
xchg
clc
sbb
dec
into
dec
add
jecxz
or
jge
inc
fnstenv
sbb
mov
les
lods
iret
lahf
ss
int3
ret
out
shrl
test
add
pop
ret
sbb
push
bound
xor
inc
lods
pop
arpl
mov
lds
jns
in
es
in
iret
and
push
pop
insl
xchg
mov
orb
or
in
mov
inc
sub
push
mov
outsb
mov
test
imul
push
dec
adc
xchg
ss
das
hlt
jp
mov
shrb
xlat
push
sti
pop
mov
insl
ret
test
or
jmp
cmp
ret
fcmove
insb
adc
adc
scas
test
je
fimull
adc
es
ja
pop
sar
cmp
movsb
and
dec
add
nop
xor
dec
fidivrl
sbb
mov
cmp
cmpsb
lcall
inc
or
cltd
push
push
sbb
stos
jg
push
mov
push
std
movsb
push
test
iret
sub
in
mov
mov
xchg
sub
ja
movl
fildl
and
ss
xchg
fdecstp
xlat
xorl
out
mov
rorb
pushf
js
add
mov
hlt
dec
mov
es
insb
aas
filds
pop
mov
idivb
adc
and
fdivs
aaa
mov
subl
push
dec
dec
rorb
in
mov
lods
xlat
scas
pop
insb
fstl
rcl
push
mov
or
iret
cli
add
xor
xor
in
stos
xor
loopne
notl
mov
movsb
pop
adc
adc
sub
push
jb
daa
movsb
push
push
xor
dec
mov
jae
ljmp
adc
leave
xor
adc
add
mov
leave
mov
and
loope
sub
jmp
scas
xchg
fcmovb
sub
clc
pop
mov
rcrb
jno
push
movsb
sub
jae
jb
push
add
in
sbb
out
jno
les
xor
stos
aaa
ja
aam
dec
fstpt
dec
push
cmp
sub
popf
sti
test
test
or
mov
mov
clc
sbb
movsb
lds
push
add
jle
mov
rorb
lods
push
daa
mov
sbb
lods
push
xor
or
add
xchg
xchg
xchg
jbe
and
mov
stc
loope
js
push
int3
cmp
push
mov
lods
cmp
sub
dec
addr16
push
ja
adc
push
cmpsb
lods
mov
pop
aaa
inc
sbb
jnp
out
sti
add
xor
jmp
pop
mov
cld
cmp
add
js
dec
std
lret
push
xor
arpl
fucomp
bound
push
cmp
xchg
das
mov
iret
cmp
sub
sub
push
xchg
mov
fimuls
loope
aam
jle
fldcw
cmp
loopne
fdivs
cmp
and
or
adc
lds
ss
repz
sub
cmc
jl
test
xchg
fdiv
xor
pop
negl
dec
mov
fsubrs
into
cmp
sti
pusha
and
mov
jge
mov
iret
lea
sbbl
pop
mov
add
push
pop
aaa
iret
and
pop
mov
ret
xchg
adc
pop
pop
push
dec
out
xor
add
cmp
adc
add
rolb
pop
dec
das
test
pop
out
or
adc
add
pop
add
dec
outsl
inc
es
xchg
push
in
mov
lea
icebp
orl
negl
cwtl
cmp
mov
xlat
mov
dec
xchg
and
push
inc
or
fidivrs
ret
aam
jg
iret
out
aas
test
sbb
lds
or
mov
inc
arpl
mov
jns
cmp
add
dec
jp
rclb
mov
mov
out
pop
pop
movsb
sub
daa
lods
xorl
and
test
ret
aam
lss
cmp
clc
sahf
cwtl
lcall
out
dec
pop
pushf
xchg
mov
dec
mov
add
jbe
and
outsb
mov
cmp
adc
inc
sub
fiadds
and
mov
cmpsl
aam
or
xchg
cltd
dec
xchg
push
xchg
jae
ja
sub
xor
mov
jbe
dec
stos
xchg
or
jecxz
sub
inc
out
lock
jo
roll
pop
sub
pop
das
mov
int3
jo
push
sti
inc
xor
sti
outsb
cmc
push
xor
mov
jge
mov
dec
pop
jno
js
ret
mov
inc
jne
mov
cmc
outsb
sahf
sub
pop
adc
pop
sbb
jb
stos
cmp
jecxz
ret
mov
and
adc
pop
push
test
and
inc
push
into
cmc
and
dec
and
mov
loope
pop
sbb
stos
xchg
sbb
mov
adc
fisttpl
in
insb
test
insl
lahf
insb
es
out
scas
or
and
bound
mov
sbb
xor
ja
pop
shlb
push
pop
sub
loope
test
push
shll
add
adc
int
test
mov
xor
shrl
sub
mov
push
dec
sbb
jno
mov
std
push
sahf
xlat
mov
adc
scas
test
icebp
js
in
clc
jnp
add
negl
dec
ds
dec
out
cmc
sbb
movsl
push
and
rcr
es
push
push
fcmovnb
pop
cli
inc
fsubs
scas
pop
sbb
roll
xchg
xchg
test
inc
inc
push
or
jns
ljmp
shrl
loope
pop
mov
mov
icebp
or
in
add
mov
cmp
jmp
push
dec
testb
cmpsl
mov
xor
repz
loope
mov
das
xor
adc
cmp
jnp
add
test
xchg
fiadds
nop
sub
add
insb
mov
addr16
mov
subb
shll
insl
or
jnp
into
cmp
adc
push
sub
ds
inc
cmp
pop
lcall
mov
addr16
pusha
xchg
pop
cs
push
rcll
and
inc
sub
adc
roll
daa
xchg
push
js
lods
subl
jbe
push
imul
scas
xchg
fwait
das
pop
sbb
pop
movsb
fadd
test
sbb
fldenv
daa
popa
jecxz
mov
sbb
repnz
mul
or
cmp
scas
mov
insl
cmp
and
xchg
inc
xor
dec
loopne
aaa
mov
movsb
dec
ficoms
push
lds
mov
push
xchg
test
pop
mov
aaa
sbb
lds
push
bound
lds
test
jne
jle
xor
scas
movsl
insl
out
arpl
sbb
jmp
dec
out
push
pop
fistl
mov
cmp
jle
and
inc
dec
ss
imul
pop
in
in
shll
mov
scas
aam
int
inc
mov
cmp
outsb
mov
dec
xchg
ret
sub
jbe
ficomps
push
sbb
scas
push
adc
lcall
fsubs
mov
aas
jno
orl
sub
inc
pop
inc
mov
lods
popa
inc
jnp
adc
fcmovb
subb
cmpsl
pop
and
rcrb
push
sub
fs
mov
mov
bswap
sub
into
imulb
sbb
mov
pusha
jg
pop
fdivrs
adc
cltd
imul
mov
add
pop
scas
and
or
clc
mov
fcmovb
mov
lds
mov
aas
push
sbb
sbb
sub
arpl
imul
daa
popf
nop
clc
ja
jmp
iret
xchg
adc
lcall
fnsave
das
das
cmpsl
fidivs
lcall
cmp
mov
jmp
loope
push
iret
daa
das
movl
outsl
adc
xor
and
pusha
pop
fscale
pop
sbb
out
and
cmpsl
add
xchg
shrb
loopne
rolb
mov
test
sbb
xor
or
cmp
stos
jmp
std
mov
sub
mov
in
cmp
mov
jo
jo
repnz
pop
mov
xchg
bswap
xor
pop
xchg
fsubr
sahf
fwait
jmp
push
cmpl
into
std
sahf
dec
push
pop
xchg
xchg
pop
enter
mov
cmc
add
fsubr
adc
and
mov
mov
in
mov
jae
test
adc
sub
jmp
and
test
les
and
loopne
in
pop
jg
popa
jae
push
pop
pop
sbb
ret
aaa
inc
in
shrb
nop
add
push
and
addr16
pop
shrb
les
cmp
rcll
clc
aas
scas
nop
add
adc
movsb
sbb
jmp
mov
xchg
lods
jg
roll
sbb
jp
cmpb
mov
sbb
add
and
xchg
scas
shll
adcl
fisubrs
rcrl
inc
loope
lds
push
pop
jno
lea
je
push
xor
xor
in
jmp
lds
mov
sub
aam
pushf
lds
stc
das
test
xchg
lcall
addr16
imul
scas
fdivrs
add
lahf
mov
adc
cmp
jle
scas
fdivrs
xchg
mov
ljmp
in
jmp
mov
and
mov
and
outsl
sbb
mov
xchg
popa
int3
pop
loope
rcrb
insl
cmpsl
and
cmp
fstpt
aaa
mov
cmp
aam
pop
mov
mov
pop
test
xor
ss
pop
test
push
sbb
ja
push
movsb
cltd
adc
rcll
lea
push
das
jmp
pop
popa
orb
dec
add
mov
repnz
push
inc
push
mov
sbb
rcll
fdivl
pop
cmp
adc
lock
in
mov
sbb
sti
mov
call
adc
adc
mov
arpl
fcomps
xchg
mov
imul
jge
pusha
mov
add
movsb
sub
xor
stos
daa
pop
mov
sbb
loopne
and
adc
repz
and
loope
pop
xchg
push
mov
pop
pop
and
fwait
pop
and
add
push
jge
pop
push
inc
pop
sbb
mov
fbstp
or
or
or
push
add
fldl
xchg
push
inc
add
pop
fmulp
cmp
es
bound
es
call
cltd
int3
pushf
es
pop
xor
or
mov
test
pop
lcall
pop
jo
cmp
jecxz
or
add
cwtl
shl
ret
mov
and
out
adc
roll
add
inc
es
fistps
scas
and
dec
movsl
popa
ljmp
fadds
or
cmp
or
xchg
jb
pop
add
push
adc
jl
imul
push
or
cmc
pop
add
ds
bound
sbb
daa
sahf
add
test
dec
mov
inc
aaa
arpl
lds
sbb
adc
push
push
dec
mov
and
sahf
sub
pop
mov
or
iret
and
cmp
pop
pop
pop
sub
dec
jmp
xor
subb
sti
fcoml
hlt
xor
dec
pop
icebp
cmp
lcall
sti
pop
inc
pop
daa
pop
mov
xchg
pop
sahf
pop
push
mov
outsb
ss
pop
lds
add
cwtl
pop
pop
mov
push
sbb
sbb
adc
push
scas
in
data16
sub
add
fists
scas
pop
adc
mov
addr16
lahf
jne
lahf
mov
out
add
cmp
xor
or
xchg
xchg
adc
push
js
ret
out
adc
and
or
xor
pop
repz
xchg
or
das
outsb
add
xor
outsb
ss
pusha
pop
into
mov
bound
xor
incl
pusha
shll
add
mov
add
in
cmc
jae,pt
data16
pop
mov
sbb
iret
mov
xor
mov
sbbl
add
aas
or
aaa
mov
jb
mov
int
mov
mov
cmp
inc
dec
mov
mov
xor
loope
pop
je
sub
shll
ds
popl
xor
mov
pusha
add
out
adc
ss
mov
xor
mov
or
or
das
jnp
int3
mov
call
rcrb
jae
imul
push
mov
int
jns
inc
sbb
mov
sub
push
and
and
push
mov
das
and
xchg
or
addb
out
aas
cmp
shl
inc
nop
test
push
push
cmpsb
mull
add
push
or
mov
jns
outsb
imull
cmp
sub
rcrl
test
mov
xor
push
mov
cwtl
push
xchg
jnp
cmp
in
jnp
stc
lods
bound
jge
fnstsw
pop
insb
stos
ss
xor
push
and
jl
aas
es
sub
bound
xchg
inc
dec
inc
loope
mov
mov
aas
xor
iret
adc
inc
sbb
test
fwait
mov
xchg
push
fisttpll
mov
add
cwtl
ficoml
popa
inc
insb
das
test
punpckhbw
fcoms
aad
je
or
push
pop
out
das
jo
fstpt
add
or
es
mov
adc
lods
fimuls
js
cmp
inc
sbb
pop
sbb
js
mov
aaa
fmulp
out
movsb
or
xchg
aaa
jmp
fists
addr16
jmp
cmp
dec
cmpsl
cmp
push
sar
aas
js
sbb
loopne
out
addr16
sbb
addr16
dec
data16
mov
pop
add
add
and
xchg
stos
loop
pushf
xor
ret
mov
sub
add
mov
inc
movsb
and
jmp
stos
daa
imul
and
inc
xchg
sbb
mov
das
push
cmpl
cmp
jae
xchg
nop
jp
mov
aam
insl
cltd
or
adc
add
jp
mov
lcall
outsb
lcall
jp
jbe
aaa
ficoms
movsb
in
adc
and
mov
rcrl
lock
stc
nop
shll
jno
mov
cmc
pop
xor
add
scas
pop
mov
lret
inc
in
pop
cmp
adc
jmp
dec
mov
movsb
jo
ss
mov
popa
adc
ret
or
xchg
js
mov
push
jns
add
ficompl
xor
add
mov
fcmovne
insb
and
or
int3
xor
adc
and
add
das
mov
jg
pusha
adc
xor
loope
inc
mov
add
xor
outsl
jns
sbb
lahf
sti
sub
int3
xchg
push
sub
loope
mov
and
lods
addr16
pop
cmpsl
sbb
mov
xchg
outsb
fbld
fsubrl
mov
push
cwtl
xchg
mov
pop
cmpsl
dec
mov
fwait
sbb
addr16
cmpsl
inc
sub
scas
lea
rcrb
dec
stos
imul
arpl
je
dec
jae
cmp
or
push
fisttpll
fsubr
int
ret
js
push
movsb
xor
fdivr
rcrl
add
xor
xor
cmpsl
inc
sub
adc
mov
inc
mov
push
stos
aam
mov
lds
fildl
addr16
lret
push
sub
cmp
or
add
xadd
push
mov
push
call
mov
pop
rorb
lret
pop
or
sbb
pshufw
xor
push
pop
lret
xorl
std
aas
gs
stc
loopne
mov
shll
xor
test
xchg
jle
dec
sbb
sbb
clc
or
add
xchg
jmp
mov
sbbl
sub
aam
mov
pop
adc
add
add
jno
aad
mov
out
mov
iret
push
iret
jge
pop
shrl
fldcw
add
das
push
scas
xor
scas
inc
pop
sbb
sbb
adc
jno
dec
add
jp,pt
lods
mov
lods
std
sbb
xor
xor
mov
dec
sub
lock
push
stos
sbb
lods
jne
fcomp
pop
jecxz
shll
pop
mov
shlb
lret
push
push
in
pop
ss
add
add
push
shll
les
pshufw
es
cmc
push
repnz
aas
add
xchg
xchg
jo
xor
fcmove
ret
or
push
js
cmp
inc
data16
xor
mov
pop
lret
mov
sarl
dec
stos
adc
and
add
lods
fimuls
adc
pop
fistl
lea
in
popa
pop
push
popa
daa
or
loopne
ret
xchg
pop
es
cmpb
nop
push
jle
mov
ja
mov
inc
xchg
sub
xor
imul
xor
sub
adc
or
pop
and
ja
adc
fdivrs
btc
cwtl
inc
add
lahf
cmp
ds
xchg
call
movsb
pop
das
loopne
xchg
popf
das
add
into
in
je
sub
jo
push
pop
imul
test
jo
out
mov
dec
sub
pop
push
mov
adc
jnp
fisttpll
cmp
xchg
nop
pop
and
fstl
xchg
mov
faddl
sbbl
pop
movsb
test
dec
xor
sahf
xchg
and
ds
mov
pusha
jo
test
int3
mov
xor
mov
lock
loop
lods
call
orb
lods
lgs
jl
sub
inc
inc
scas
push
push
push
or
loop
or
and
dec
cmp
pop
popf
addb
fdivrs
xor
xchg
xchg
jl
js
cli
adc
mov
je
in
cltd
aaa
or
rclb
mov
sbb
xor
test
or
pop
mov
and
cmc
and
test
in
nop
xchg
inc
stos
add
pop
sbb
mov
pop
out
mov
xlat
out
inc
lock
cmp
hlt
bound
mov
jns
fs
lea
sbb
adc
adc
sbb
js
rcl
xchg
sbb
fwait
pop
xor
jnp
cmpsb
mov
or
pop
fsts
and
mov
jp
nop
call
je
add
push
mov
leave
jno
test
mov
fcomps
push
add
jge
sbb
lock
rolb
mov
fsts
out
jp
add
adc
cltd
and
push
iret
sbb
cwtl
sbb
xor
test
hlt
mov
jo
push
adc
sbb
popf
fdivs
mov
cmp
xlat
sbb
pop
call
lock
fs
int3
lock
mov
and
je
xor
xor
jge
or
bound
sub
xchg
js
or
dec
pusha
adc
add
push
lcall
add
lcall
test
mov
dec
jbe
fisubrs
clc
fcmove
dec
mov
add
xor
mov
or
clc
mov
outsl
aas
sub
es
rorb
cmp
xchg
pop
pop
xchg
xchg
sahf
pop
cmpsl
stos
dec
inc
mov
mov
iret
in
jl
cmp
jne
lahf
mov
mov
fiaddl
xchg
jmp
lret
repnz
movsl
arpl
je
shll
add
rcr
sub
push
inc
mov
adc
dec
jle
xchg
mov
lahf
jge
pusha
or
loopne
cmp
push
or
stos
mov
xlat
nop
lcall
or
lods
fs
stos
cmp
je
in
xor
sarb
mov
jb
mov
test
mov
frstor
mov
and
push
push
cwtl
mov
jo
fidivs
rorb
inc
sbb
xchg
sbb
stos
popf
sbbb
jae
mov
movsb
enter
pop
dec
cs
jge
mov
add
mov
jne
movsl
dec
dec
push
mov
mov
add
ja
loope
mov
xchg
ja
sub
pop
rclb
popf
jmp
add
inc
out
sbb
sub
jae
jno
mov
add
sbb
ret
pop
lock
popa
loopne
xor
lods
push
into
xlat
or
mov
call
push
add
sbb
jecxz
push
push
sub
mov
jae
fs
inc
into
xchg
sti
inc
inc
jp
js
pushf
popf
xchg
inc
and
sub
sbb
rolb
fwait
pop
sbb
jnp
ret
mov
mov
mov
sbb
mov
adc
jnp
hlt
dec
add
or
push
mov
jl
or
imul
pushf
sbb
xchg
pop
fsubrs
out
lock
sbb
stos
bound
aaa
pop
loope
add
aaa
jnp
stos
pop
mov
mov
hlt
in
or
jb
jo
xor
push
arpl
adc
and
adc
mov
shrl
les
pusha
cmp
ret
or
pop
ret
loop
push
loopne
leave
jo
dec
pushf
sub
fwait
dec
dec
shrl
mov
pop
lock
inc
dec
loop
negl
lahf
mov
push
xchg
jo
cmc
sahf
adc
imul
mov
lds
movsl
out
pop
loopne
js
scas
lcall
bound
mov
iret
mov
add
jne
sub
test
xchg
ss
ret
aad
sbb
cltd
fistpl
inc
cwtl
aam
mov
jo
and
icebp
cmc
dec
cmc
and
inc
and
add
aam
loopne
call
mov
sub
push
ja
cmpsb
pop
pop
adc
mov
test
in
xor
jo
jb
jb
jo
inc
je
mov
inc
jnp
mov
cmc
xorb
mov
jno
iret
inc
loope
in
aad
popa
sbb
dec
daa
or
aam
scas
roll
js
adc
inc
xor
insl
sbb
je
mov
call
popf
aaa
addr16
dec
adc
mov
mov
js
out
cmpsl
lret
add
mov
lahf
icebp
add
into
loop
lods
pop
cmp
xor
je
insl
fisubs
aam
and
popf
sub
shlb
rorl
das
pop
jnp
mov
faddl
sbb
fdiv
subl
fcomps
inc
mov
sub
jno
adc
add
mov
add
dec
add
ret
js
lret
xor
jl
mov
push
test
les
xor
push
int
fimull
xor
jl
call
pop
jle
add
mov
ret
mov
inc
sahf
in
mov
sbb
cmp
outsl
in
popf
cmp
leave
mov
add
sbb
add
inc
mov
shrb
outsb
sub
mov
andl
sub
repz
popf
and
aas
sbb
data16
lods
push
test
sub
mov
xor
repz
inc
faddl
dec
or
or
ret
pop
arpl
test
inc
adc
mov
aad
stos
mov
push
roll
rcrl
add
and
hlt
cmc
aad
in
cmp
sbb
mov
push
shll
push
pop
jge
dec
pop
sti
test
mov
in
dec
sti
inc
imul
das
pop
pop
inc
mov
aaa
pop
xchg
lfs
cmpsb
push
sbb
jo
or
pop
jmp
pop
and
jmp
cs
mov
mov
xor
mov
push
clc
aad
push
loop
int
xchg
adc
into
push
lods
pop
and
cmp
xor
inc
dec
jmp
adc
lcall
push
sub
je
xor
jp
xorl
fdivl
adc
and
jnp
lds
jge
adc
push
aas
xor
je
divl
mov
mov
test
sbb
rol
cwtl
xor
shlb
lods
dec
adc
int3
imulb
push
cmp
scas
push
or
xor
insl
jb
mov
sub
scas
lods
inc
testl
inc
xor
aaa
mov
lea
lds
sub
mov
fmul
lahf
daa
hlt
pop
mov
pop
cmp
test
lock
enter
lcall
outsl
outsb
mov
rclb
lea
adc
add
xchg
add
lds
mov
in
arpl
pop
xor
mov
cmp
adc
sbbl
ja
xor
js
adc
mull
ja
lods
inc
jo
ss
xor
inc
in
ss
mov
or
xchg
call
xchg
add
sbb
sbb
xor
lock
push
pop
dec
stos
or
fs
ficompl
adc
add
test
dec
ss
pusha
push
cmp
sbb
and
rorl
mov
orb
dec
orb
gs
and
mov
int
mov
xlat
or
bound
setp
test
xor
mov
aad
xor
adc
inc
jl
stos
or
or
lods
pop
in
or
cs
aaa
addb
cld
jecxz
inc
mov
push
mov
leave
cmc
rorl
ret
popa
and
dec
js
sbb
lret
xor
push
adc
ja
cmp
das
dec
cld
pop
mov
dec
cs
loope
daa
fildl
and
js
cmp
ljmp
lods
es
outsl
push
daa
stos
sbb
dec
push
add
ja
cmp
ja
out
or
rolb
in
out
test
jb
mov
sbb
mov
and
mov
fistl
int3
xchg
xchg
fldt
xor
and
push
push
sub
mov
insb
xchg
das
stos
fstl
inc
test
ds
push
fiadds
and
xchg
testb
lock
iret
and
adc
adc
ret
fwait
add
ljmp
test
aas
outsb
es
rorl
iret
lahf
into
cmp
xor
popa
push
into
test
daa
sub
or
push
push
adc
subb
rcl
xchg
jp
mov
sbb
inc
add
add
cwtl
inc
mov
push
or
loope
es
aaa
add
push
sahf
test
pop
mov
sarl
push
pop
iret
sub
fstpt
add
negl
mov
and
adc
das
adc
jbe
dec
arpl
push
sub
outsl
ja
mov
xor
aaa
adc
lar
jge
inc
adc
adc
push
jle
test
xor
imul
aaa
fnstenv
jnp
add
inc
pop
cli
js
in
cmovne
jl
jnp
adc
or
in
pusha
hlt
add
out
xchg
push
fdiv
push
fwait
pop
addr16
xor
jecxz
mul
sbb
cwtl
pushf
pusha
clc
bound
ja
pop
push
mov
pop
and
inc
and
inc
jmp
ss
mov
pop
insb
mov
mull
inc
ret
pop
movsl
pop
arpl
inc
cmp
insb
scas
fwait
sbb
adc
cmp
adc
inc
mov
cmp
pop
popa
add
popa
xchg
sbb
mov
push
ret
add
mov
pop
jae
es
iret
data16
or
ret
aas
jg,pt
jae
jns
mov
add
push
lcall
push
mov
pop
inc
and
fildl
mov
jo
icebp
mov
mov
dec
test
cmp
xor
xor
pop
jecxz
aad
add
ret
orl
and
clc
bound
xchg
and
call
test
jecxz,pn
mov
out
mov
mov
ss
xchg
testl
mov
pop
inc
cmp
in
test
push
movl
lahf
iret
mov
fwait
xchg
lret
xchg
out
xchg
xor
push
adc
fldenv
out
mov
fldenv
ss
dec
jbe
into
mov
sub
packssdw
or
incl
insb
sti
cmp
adc
add
movlps
loope
psubsw
pop
cmp
lret
push
shlb
xlat
pop
paddsb
roll
insl
or
jecxz
fcomp
mov
and
sbb
sti
mov
adc
jge
dec
pop
test
sbb
ljmp
mov
in
sub
sub
sub
lcall
xchg
sbb
sbb
daa
popa
xchg
aas
dec
arpl
out
dec
fdivrs
xchg
outsl
rolb
stos
adc
daa
jl
imul
push
ja
mov
pop
push
jae
and
mov
push
jb
pop
in
lods
and
out
mov
sbb
xchg
inc
mov
fldcw
out
pushf
cmp
jge
dec
cmp
mov
mov
mov
adc
push
nop
jae
out
mov
xor
insb
mov
jmp
mov
adc
pop
lds
sub
jge
inc
and
mov
dec
jne
or
ja
scas
rolb
negb
adc
or
pop
jge
mov
mov
sahf
mov
fnstcw
mov
xchg
ror
xchg
xchg
out
scas
sbb
adc
inc
mov
inc
iret
sbb
mov
ret
iret
push
jl
dec
xor
in
daa
xlat
aaa
stos
jle
cmp
mov
in
iret
fdivrs
testb
xchg
mov
dec
lahf
out
jb
clc
loopne,pn
fisttps
adc
jge
add
sub
push
pushf
lods
es
roll
mov
add
cmpsb
out
aad
lahf
pop
and
mov
pop
rorb
mov
inc
mov
xchg
dec
xchg
xor
fsubrl
ret
xchg
shll
mov
and
mov
negl
jle
imul
fwait
sbb
sub
mov
rolb
cmp
rolb
or
cmpsb
call
xchg
jp
cmpsb
push
test
xlat
inc
xchg
lret
mov
dec
sub
mov
bound
lock
mov
cmp
mov
xchg
inc
push
roll
and
push
fidivrl
aad
add
sub
push
nop
mov
sbb
lock
push
pop
adc
cli
and
sbb
push
jle
loop
push
pop
sbb
rolb
stos
orb
mov
test
mov
cmc
sahf
inc
jo
shll
movsb
iret
pusha
push
fucomp
sbb
loope
stos
push
flds
mov
jo,pn
pop
jb
lods
push
and
mov
sbb
fdivrs
xchg
xchg
pop
outsb
or
push
jge
jmp
pop
mov
add
xchg
add
lds
adc
rcrl
scas
daa
adc
pop
or
or
push
pop
pop
out
jge
xlat
push
push
outsl
and
dec
push
ja
dec
and
push
aad
in
shll
jnp
add
iret
cmp
dec
push
iret
sbb
dec
nop
pop
sti
and
xchg
push
sub
scas
ret
mov
js
jns
mov
adc
pop
jmp
in
les
movups
inc
cmp
jp
das
push
dec
jno
outsb
xchg
sub
fsubs
inc
add
jg
mov
call
int3
or
aad
push
xor
inc
push
mov
sti
stos
jnp
add
sbb
sahf
test
fsts
pop
jno
xor
xor
iret
pop
ss
sub
add
icebp
popf
xor
mov
fisttps
add
arpl
mov
pushf
cmp
rcrl
ss
cs
pop
cmpsb
dec
xor
xor
pop
test
pop
js
jae
xchg
adc
add
inc
je
daa
stos
sub
mov
mov
xchg
and
adc
das
scas
dec
push
mov
movsb
pop
push
sub
push
pop
add
mov
jmp
imul
rorl
orb
imul
ret
inc
sbb
adc
push
outsb
cmpsl
jo
cmpsl
loope
out
or
add
sbb
or
mov
lahf
dec
test
pop
rclb
jle
inc
fadds
outsb
sub
dec
fwait
repnz
nop
sbb
pop
insb
outsl
enter
cmpsl
mov
add
add
sahf
pop
or
and
adc
sbb
icebp
inc
in
popf
mov
mov
and
pop
cmp
xchg
jle
adc
xchg
push
addr16
xchg
mov
mov
and
xchg
popf
les
cltd
push
arpl
data16
cmp
mov
dec
xor
xchg
aam
lods
or
sub
add
les
mov
int3
loopne
lret
xor
fisttpl
daa
cmpsl
sbb
add
mov
xor
push
ss
repnz
repz
and
js
cmp
mov
add
mov
dec
outsb
or
dec
sub
incb
xor
in
add
add
test
mov
sub
mov
jnp
fistps
mov
push
jno
dec
mov
adc
ret
leave
iret
pop
rol
mov
and
mov
xchg
pop
mov
fisttpl
ret
mov
fldcw
and
ret
out
das
mov
push
movsb
ds
mov
sub
int3
xor
hlt
sbb
xchg
popf
xor
scas
fdivl
testb
lds
cmp
dec
ret
aad
sub
fucomi
cmpsb
cmpsb
pop
jle
lret
sub
and
and
xchg
lds
mov
ss
insb
lods
push
jecxz
ljmp
mov
cmp
and
sbb
je
out
dec
adc
and
sub
push
das
jbe
or
and
rorl
dec
cmp
rorb
xchg
pusha
push
xor
dec
sub
sub
les
enter
lock
xor
push
xor
ret
notl
sub
pushf
sub
pop
popl
icebp
jbe
icebp
subl
sub
popa
cmp
add
adc
das
sbb
roll
adc
iret
dec
mov
mov
mov
or
loope
int
cmpb
add
bound
dec
dec
out
shlb
jp
cmpsb
push
mov
sbb
jo
xor
xor
xchg
sarb
xlat
add
outsb
inc
cs
xchg
sub
loope
sub
adc
push
iret
iret
lret
cmc
sub
xchg
add
lods
push
je
lret
or
pop
daa
test
ret
pop
dec
gs
icebp
sub
movsb
mov
and
push
mov
es
xchg
xchg
push
hlt
push
jb
push
xchg
sub
mov
cmp
xor
scas
push
sub
and
lock
int
jo
sbb
hlt
push
mov
jmp
frstor
loopne
pop
cli
adc
int
fwait
test
and
dec
sbbb
pop
cltd
das
setbe
mov
dec
add
mov
mov
inc
sarl
bound
push
sbb
add
mov
jo
cmpsl
aas
push
jmp
jno
addr16
mov
clc
push
xor
push
mov
shlb
outsl
cmpsb
inc
mov
pusha
sbb
add
push
sbb
fdivrs
cmpsb
push
add
sub
movsl
mov
nop
data16
std
cmp
clc
faddl
scas
push
popf
or
hlt
sahf
jecxz
add
dec
or
gs
add
mov
ds
mov
icebp
test
xchg
mov
inc
pop
fdivs
ss
inc
ret
ficoms
and
inc
hlt
imul
rcl
xchg
fnstenv
inc
and
loopne
mov
lahf
jbe
sbb
inc
cmp
sbb
jno
fadds
das
jb
mov
dec
out
insl
inc
sbbl
jmp
pusha
out
dec
or
xor
fdiv
pop
popf
adc
insb
xor
xor
andl
scas
xchg
ficoms
sub
lret
cmp
out
ja
scas
rcrb
repnz
rcrl
and
add
jg
pop
jne
add
mov
xchg
call
pop
aad
inc
test
inc
sub
add
daa
into
mov
push
mov
sbbl
cmpl
mov
add
ret
aaa
add
mov
aaa
scas
shlb
xchg
jmp
fdivrs
pop
arpl
inc
push
iret
mov
inc
sbb
mov
or
in
aam
cld
dec
adc
rclb
mov
add
sub
repz
daa
adc
movsb
or
mov
add
sbb
inc
fildll
jl
jg
pop
imul
iret
in
mov
adc
xor
fsubl
mov
push
pushf
lret
sbb
mov
aas
fs
push
sub
push
hlt
aam
mov
and
and
sub
nop
dec
xchg
xor
aas
sub
dec
in
cmp
scas
fsub
fsubrs
and
icebp
jno
mov
add
dec
push
sti
ds
scas
ljmp
push
scas
adc
cs
dec
cmp
jae
xchg
loope
sub
stos
fiadds
adc
xor
orl
inc
mov
pop
shlb
loop
movsl
imul
aas
sahf
jecxz
inc
mov
shrl
or
add
mov
pop
and
push
and
and
rolb
xor
rclb
addr16
sbb
lods
push
sub
mov
jle
sbb
inc
ret
rolb
das
xchg
push
cmpsl
imul
sub
inc
xchg
dec
das
iret
cld
cli
and
adc
mov
lahf
cmp
mov
lret
or
mov
mov
sub
ss
cwtl
add
jbe
lahf
les
stos
and
cmp
pusha
or
mov
cmc
mov
in
push
push
xchg
aam
out
sbb
add
add
cwtl
cmp
sub
aam
adc
pop
jmp
pop
or
dec
scas
inc
xchg
push
fwait
add
int3
call
scas
ds
adc
fsubl
les
ja
inc
jbe
or
pop
lods
orb
je
and
inc
pop
popf
pushf
rolb
add
pushf
add
push
pop
sbbb
push
imul
cmp
negb
jbe
adc
mov
shrb
ds
cwtl
or
fmull
call
inc
lret
fwait
mov
fldcw
pop
mov
adc
mov
adc
xchg
push
gs
lock
pop
add
lods
sarl
mov
adc
popa
or
push
cmp
adc
and
add
adc
mov
jne
mov
xor
adc
loope
dec
iret
and
xor
mov
adc
cmp
aad
xchg
inc
test
rclb
nop
xor
inc
enter
setnp
and
jae
mov
xlat
jp
xor
cs
jns
jns
jl
push
es
jb
adc
pop
dec
out
movb
add
pop
int
xchg
dec
sbb
add
cs
adc
aas
pop
shrl
adc
lret
xchg
fstps
sbb
mov
or
rcl
and
and
mov
sbb
jle
daa
cmp
les
pop
mov
fdivrs
stos
loop
daa
adc
sub
sub
mov
add
jmp
aam
add
dec
bound
inc
and
iret
and
mov
xchg
fldt
mov
aam
cwtl
adc
xchg
fwait
or
dec
test
jnp
and
test
fcoms
lock
pop
mov
push
dec
lea
push
subb
test
mov
jmp
add
dec
jae
arpl
inc
loopne
rcrl
xor
popa
or
in
sbb
pop
xlat
sbb
sbb
sbb
filds
sbb
jle
xchg
xor
or
xorl
daa
dec
lds
inc
inc
mov
das
in
cmpsb
cmpl
sti
and
rcrb
lea
rcl
addr16
and
pop
jo
sbb
and
hlt
inc
sub
xchg
add
cmpsl
cmp
fs
push
out
push
popa
mov
adc
adc
jo
in
sbb
push
xchg
iret
fnstsw
pop
popa
addb
push
aaa
and
dec
add
lods
iretw
adc
cs
jl
adc
bound
xor
addl
jno
pop
add
pusha
dec
dec
push
lret
xchg
scas
mov
sub
scas
jo
pop
dec
iret
subb
xchg
fadds
push
xchg
lret
in
push
mov
xlat
cmp
addl
jnp
xor
loope
pop
les
jo
popf
add
jo
add
sub
inc
xchg
inc
jmp
int3
flds
jne
scas
fldl
push
scas
stc
jo
mov
sbb
mov
lds
in
mov
and
adc
icebp
outsl
in
or
lock
in
sub
out
add
out
and
ffree
ljmp
scas
add
sbb
pop
lock
repnz
sbb
push
xorb
aaa
jecxz
popa
add
icebp
mov
lock
ja
mul
call
sbb
push
add
push
fs
mov
jl
iret
dec
add
out
add
fnstsw
pop
jecxz
jle
xchg
rclb
notl
mov
xor
stos
dec
mov
mov
fdivrs
jmp
std
out
push
cmp
pop
xchg
xchg
mov
bound
sbb
icebp
inc
loopne
or
xor
pop
outsl
inc
mov
ret
in
jmp
mov
daa
push
mov
rorb
ret
popf
push
fisttpll
push
ja
out
test
iret
pop
add
cltd
lcall
xchg
sbbl
or
or
aam
popf
test
jmp
popa
lock
ds
xchg
push
inc
imul
shr
idivl
adc
mov
ficompl
xor
add
mov
or
mov
mov
push
jnp
mov
dec
jne
out
and
lds
fyl2x
jmp
sub
sub
pop
addr16
sub
inc
mov
push
loope,pn
mov
and
outsb
xchg
xchg
sarb
sbb
mov
add
and
or
pop
icebp
test
repz
icebp
movsl
add
xchg
mov
xchg
bswap
fsubrs
stos
popa
es
pop
pop
loopne
repnz
loopne
pop
inc
lret
bound
push
push
push
sbb
movsl
xlat
push
in
dec
sbb
fdivl
dec
push
and
mov
or
sarl
dec
pop
sub
cmpl
mov
pop
adc
icebp
daa
icebp
jp
mov
andl
or
jl
mov
out
call
push
repnz
leave
xchg
aas
loopne
jle
mov
cmpsl
outsb
cs
sbb
mov
adc
mov
add
test
gs
clc
push
or
jp
dec
add
push
call
mov
and
leave
sbb
adc
scas
in
outsl
inc
add
cltd
test
cwtl
xor
movl
sub
mov
mov
das
cld
pop
fsubl
sbb
dec
push
in
pop
jbe
or
loope
rcll
adc
cmp
pusha
mov
in
das
testb
rorb
and
in
out
adc
pop
das
sbb
push
xor
sub
mov
or
in
sub
ss
cmp
xchg
clc
push
mov
sub
ret
jmp
fstp
cmp
enter
xlat
es
mov
sarb
jbe
inc
pop
sarl
cmpsb
mov
ss
or
sbb
das
int
sti
ficoms
sub
adc
xor
add
lods
xlat
insl
test
adc
movb
fisttpl
test
mov
pop
sbb
iret
and
jb
sbb
add
sbb
sbb
pop
xchg
nopl
scas
fdivp
jge
add
iret
add
icebp
ret
test
sub
push
jl
add
add
dec
cmp
mov
adc
test
fisttpll
add
sbb
adc
fistpl
lods
adc
aad
insl
bound
fstl
adc
jle
sub
mov
fidivrs
scas
lret
loope
and
and
add
fisubrl
shl
fstp
imul
mov
fmull
inc
jle
adc
aaa
mov
popa
add
aaa
popa
test
mov
xchg
lods
popa
sub
cmp
ficoms
ljmp
ds
lods
imul
lods
out
add
das
je
fcoml
fildll
fldt
jecxz
out
push
and
rcll
sbb
rcr
and
mov
pop
jne
out
pop
xchg
loopne
jle
mov
and
rcrl
push
push
cwtl
imul
imul
jge
adc
rcl
mov
mov
push
imul
and
sbb
iret
sti
lret
push
lret
pop
pop
ds
cltd
xor
and
sti
in
scas
pop
push
out
imul
popa
cs
and
das
sbbb
sbb
xchg
jns
rcll
jnp
push
ret
test
rcll
mov
mov
mov
movsl
and
jne
cltd
and
fisubs
xchg
cli
mov
adc
mov
and
inc
jmp
xchg
sub
jne
ja
pop
idivl
jle
and
push
and
jle
mov
xchg
sub
lcall
mov
imul
push
pop
repnz
aam
mov
shrl
fildl
mov
sub
mov
arpl
sbb
addb
loope
adc
push
sbb
xlat
push
stc
xchg
in
rcl
insl
outsl
rolb
inc
testb
fcmovu
out
daa
jle
push
fs
cltd
cmpsl
in
cmp
sub
mov
data16
lret
mov
into
adc
mov
in
dec
fldt
pop
out
fwait
ret
fs
lods
out
fisttps
jae
sti
mov
and
adc
xchg
pop
into
popf
and
mov
scas
mov
lds
mov
lret
and
icebp
sub
sub
dec
movsb
jbe
add
xchg
iret
mov
ss
jmp
addr16
cmp
scas
add
int
jle
aas
repz
leave
lock
inc
cmp
lret
xorl
jg
jns
adc
adc
sbb
movsb
adc
xor
dec
roll
test
add
test
xchg
xchg
xchg
aam
je
out
subl
mov
mov
push
add
mov
cmp
jnp
dec
xlat
cmpsl
xchg
sub
popf
mov
fs
or
add
iret
and
adc
dec
out
sbb
imul
repnz
shrb
adc
sbb
or
loop
ja
xchg
and
jns
add
imul
shlb
jp
cmp
xor
xchg
or
shrb
inc
rcrb
add
aam
mov
lods
mov
jmp
pop
sbb
add
out
pop
jmp
push
xchg
mov
adc
mov
xor
xchg
sbb
pop
stos
scas
mov
sbb
sbb
dec
adc
mov
mov
dec
sbb
stc
movsb
sbb
add
lods
bound
dec
xor
or
xchg
iret
mov
and
cltd
scas
mov
mov
lcall
sbb
enter
xchg
sub
mov
cmpsb
test
adc
pushf
fldt
jle
jl
add
jp
orl
test
adc
and
cmp
mov
fnstcw
add
out
jbe
add
hlt
sub
or
push
push
jge
jno
lea
popf
mov
and
or
es
jnp
test
push
push
jae
xchg
add
mov
andl
lods
das
xor
inc
xorb
in
cmp
cmp
mov
data16
push
mov
sbb
xchg
and
or
cwtl
roll
test
addl
xchg
hlt
in
xorl
inc
dec
or
cltd
mov
data16
es
pop
push
subb
and
loopne
les
dec
divb
jp
push
mov
add
std
sbb
lods
and
aas
xlat
scas
and
push
dec
cmc
push
dec
jmp
jmp
jns
lfs
jns
add
scas
mov
fmull
adcb
push
shll
push
dec
loopne
or
cmp
sbb
negb
inc
es
mov
mov
test
or
fcom
nop
cmpsb
push
push
loope
pusha
sub
adc
and
push
repnz
adc
ret
in
jecxz
or
jecxz
mull
out
call
out
jmp
adc
pusha
ja
lods
int
pop
cmp
add
jmp
add
fidivl
xchg
sbb
and
xor
bound
addb
sbb
test
insb
and
mov
xchg
sub
mov
jmp
jge
fwait
sbb
out
push
mov
mov
jmp
push
jecxz
shll
repz
pop
in
jmp
push
push
sbb
repz
sub
test
ret
mov
pop
dec
iret
xchg
lret
sbb
data16
ret
push
xlat
lahf
iret
push
and
jp
inc
lret
xor
les
test
sub
push
icebp
aad
je
out
jl
add
and
and
mov
sbb
jp
mov
pop
pushf
aam
test
fistpll
out
adc
jmp
out
fstps
pop
xor
enter
das
adc
or
fcomps
xchg
rcr
xorl
add
cwtl
push
mov
cmpsb
lret
dec
in
jge
lea
jb
in
cmp
ja
cwtl
mov
sbbb
push
mov
es
movsb
push
gs
cwtl
dec
jns
mov
jle
loop
jae
fdivl
push
or
xchg
mov
loop
dec
loopne
and
jae
daa
push
cs
pop
dec
or
ret
arpl
or
fwait
mov
sbb
into
or
inc
mov
pop
stos
xchg
or
jo
inc
pop
push
adc
loop
sbb
adc
or
pusha
stos
bound
inc
mov
dec
movsl
ljmp
ret
orl
test
xor
sbb
test
pop
adc
jo
add
or
cmp
stos
sbb
sub
test
lret
dec
mov
or
add
sub
popf
clc
scas
xchg
fisubs
or
inc
psubq
enter
mov
and
ret
xchg
add
mov
xor
inc
jl
dec
jp
adc
mov
aad
adcl
mull
add
cld
fstpt
xor
aas
jl
jno
jge
push
adc
adc
jl
jecxz
jge
xchg
std
jg
adc
add
icebp
sub
or
call
sbb
inc
mov
pushf
or
data16
inc
push
data16
cmp
loope
jle
shlb
es
mov
inc
add
pop
inc
stos
es
jo
or
inc
outsb
rcll
add
add
loopne
inc
sbb
add
dec
inc
mov
adc
aas
and
into
or
xor
ret
lds
xor
push
inc
daa
pop
push
lahf
jno
inc
cld
inc
test
push
add
sbb
inc
xor
ret
push
ja
outsl
inc
jae
pop
stc
addb
adc
inc
xor
adc
sbb
adc
sti
nopl
ljmp
or
mov
mov
jno
add
jbe
std
push
inc
xlat
jle
stos
mov
je
aad
cld
mov
xor
mov
jnp
mov
and
xchg
ljmp
gs
shll
xor
push
jne
mov
xchg
push
sub
fisubl
inc
ja
lret
dec
mov
sarb
cmc
sub
fstps
int
es
ret
adc
lret
loopne
adc
push
repz
jmp
adc
repz
and
fldt
jae
adc
imull
idivl
nop
data16
data16
dec
xchg
cwtl
push
adc
xor
mov
dec
nop
pop
shlb
ror
sbb
stos
dec
adc
and
sub
and
scas
push
leave
xor
jl
mov
bound
mov
add
and
mov
xor
out
add
loopne
ret
daa
mov
nop
int
shll
mov
push
pop
or
and
pusha
dec
andb
adc
aad
jl
les
cld
je
add
andl
ror
and
pop
xchg
inc
cmp
mov
mov
jmp
mov
bound
andb
pop
into
mov
add
outsl
push
test
sbb
pushf
andb
adc
data16
push
das
adc
jbe
test
and
pop
daa
ret
popa
pop
and
add
movsb
lcall
mov
lcall
adc
adc
outsl
add
sub
mov
jae
ret
rorl
lahf
and
cmp
or
mov
loopne
add
iret
dec
mov
insl
cmp
adc
shrl
scas
mov
ja
xlat
jl
xlat
pop
lock
dec
adc
cmc
aaa
xor
fwait
sbb
lods
lods
xor
int3
and
test
pop
adc
or
mov
dec
and
dec
rcll
test
sub
sub
push
push
mov
clc
pop
pop
xchg
fwait
push
and
push
xchg
and
filds
arpl
cmpl
mov
sub
jge
and
shrb
mov
sbb
or
push
in
imull
ficomps
mov
or
sti
call
push
add
int3
dec
jo
dec
sub
cli
mov
sub
pop
rcr
mov
cmpsb
lcall
fsubs
ficoms
movsl
in
ss
iret
lcall
enter
popf
mov
pushf
cmc
loop
clc
test
fdivrs
popa
or
rcl
add
jo
sub
cmpl
outsl
loope
mov
mov
aam
insb
push
pop
daa
rcr
mov
xchg
mov
add
cmp
filds
and
gs
js
push
sbb
inc
xchg
adc
add
mov
inc
lods
popf
adc
push
les
mov
lods
fisttpl
xor
pop
rol
add
lea
xchg
mov
mov
mov
add
loopne
popa
add
inc
popa
fdivrs
push
push
cmp
push
test
adc
and
pop
push
test
roll
push
dec
jmp
cmp
add
movsb
sub
movsl
in
mov
xor
cmp
arpl
movsl
lret
mov
dec
adc
out
in
lcall
and
clc
aas
lods
sub
mov
xchg
cmp
jnp
inc
test
out
adcb
movsb
cmp
insl
call
movsb
fildll
insl
sti
pop
push
mov
das
or
mov
mov
repnz
add
insb
add
mov
ja
in
or
das
push
xchg
pop
xchg
xor
mov
or
xlat
add
mov
fimuls
icebp
daa
filds
fsubrl
enter
cmpsb
adc
cmp
xchg
lock
into
inc
and
or
xchg
or
repnz
je
lahf
pop
enter
insb
sub
add
ret
pop
idivl
repz
mov
xchg
lds
push
mov
pop
sbb
stos
cwtl
mov
adc
push
in
into
adc
add
adc
data16
mov
fldz
inc
jnp
add
aaa
lock
lods
outsb
aaa
push
add
adc
pop
mov
jne
xchg
adcb
js
push
dec
cmpb
ficoml
and
out
pop
inc
xor
add
or
dec
test
and
pop
les
mov
adc
daa
lods
xor
loopne
adc
fcomps
sbb
fmuls
lahf
cmpsb
add
shlb
fisttpl
jbe
call
pop
or
sbb
std
inc
or
and
cmpl
adc
in
insl
xor
arpl
stos
vmwrite
mov
and
sub
cmpsb
bound
into
rclb
cmc
loopne
dec
xchg
das
and
arpl
out
arpl
pop
cltd
sbb
add
push
mov
add
shll
mov
sbb
adc
mov
gs
xchg
add
add
fidivrs
outsb
into
mov
push
gs
push
pop
push
imul
mov
adc
rcrl
sbbl
ljmp
add
imul
mov
andl
inc
xchg
ss
lahf
xor
xchg
inc
loopne
cltd
cld
cmp
and
add
push
sahf
xor
out
fwait
sbb
sarb
xor
es
leave
iret
lea
pop
cmp
shrb
imul
ret
jmp
mov
sub
sbb
mov
pop
dec
out
mov
test
js
nop
daa
jmp
and
add
fdivs
lods
pop
movsb
inc
cwtl
cmp
sbb
dec
or
inc
xlat
insb
and
pop
and
adc
lock
jmp
sbb
sbb
cmp
cmp
mov
xchg
and
or
sub
sbb
dec
or
hlt
adc
ret
sbb
adc
mov
add
or
xor
adc
jle
in
add
inc
or
rcr
ficoml
es
and
push
orb
idivl
je
aas
inc
lret
into
std
daa
stos
cmp
mov
movl
sbb
test
pop
mov
fmulp
lret
out
inc
sbb
xchg
pop
fsubl
xchg
and
add
jo
in
or
sar
or
cld
or
sub
into
xchg
into
dec
pop
mov
jno
push
mov
mov
and
xor
lock
xchg
movsl
add
lods
js
jbe
mov
xchg
add
mov
mov
test
xchg
mov
sbb
std
sub
sbb
sub
cmp
sub
out
fwait
out
in
mov
jmp
inc
cmpsb
xor
add
and
test
dec
sub
aad
dec
pusha
push
arpl
cli
std
into
xchg
orb
outsl
lods
push
add
xchg
dec
xchg
cltd
and
arpl
cwtl
pop
xlat
push
or
cli
test
xlat
push
xchg
out
pushf
fwait
test
mov
xor
mov
test
cmpsb
les
cld
popf
fsubs
sbb
idivb
mov
imulb
add
and
inc
pop
inc
and
jo
and
into
sub
sbb
inc
lcall
pop
pop
lahf
int3
xor
push
aas
inc
add
test
sub
imul
test
and
imul
push
data16
test
jle
jae
fwait
jb
adc
pop
xchg
push
dec
pop
lret
sub
stos
adc
sbb
test
mov
and
movsl
or
adc
dec
push
inc
mov
cmpsb
lds
push
sbb
pop
popf
and
add
popf
push
dec
ret
shll
or
je
push
and
sbb
sub
xchg
fistpll
les
or
frstor
inc
and
mov
jge
sub
inc
popf
xchg
ror
loop
xchg
scas
fxch
jnp
out
xchg
sbb
outsl
jnp
loope
nop
ds
stos
lcall
outsl
in
adc
movsb
nop
jb
jo
fsubrs
add
ds
sub
int3
inc
mov
xchg
insb
jnp
lods
mov
push
iret
fwait
fwait
add
out
imul
sti
pop
shl
jl
andb
xchg
leave
mov
stos
xchg
lds
shlb
mov
add
sub
xchg
mov
ficoml
xor
adc
fwait
and
out
ss
int3
out
lcall
imul
push
jl
add
inc
in
or
orb
mov
mov
and
pop
push
shr
ljmp
dec
jle
loop
add
je
add
mov
mov
xorl
popf
sub
mov
pusha
mov
ret
fists
ja
insl
and
and
clc
test
or
insl
jecxz
adc
adcl
dec
lds
es
rolb
push
lods
es
fcomps
xchg
movsb
pop
or
mov
iret
add
bound
popa
ret
aas
or
mov
inc
out
lods
iret
push
popf
mov
mov
inc
popf
sahf
dec
add
mov
dec
in
popl
insb
addb
pop
sahf
and
or
mov
shrb
enter
fsubp
jg
cmc
loop
loop
cwtl
xchg
inc
push
add
jg
mov
xor
std
lods
aad
push
pop
nop
cmp
and
test
mov
or
adc
ret
nop
mov
xchg
es
pop
lahf
push
sbb
adc
sub
and
mov
mov
mov
cmp
pushf
loope
adc
sbb
hlt
xchg
mov
imul
adcb
aaa
adc
aas
mov
ficomps
mov
or
push
xchg
mov
sbb
adc
cmp
adc
or
jle
inc
pop
or
xchg
icebp
lahf
pop
sbb
and
lret
cmp
dec
int3
call
push
cwtl
imul
dec
outsb
xor
inc
test
and
out
adc
push
add
xlat
js
mov
test
ret
rorb
pop
mov
sbb
jae
cwtl
jecxz
scas
fildl
xchg
cmpsl
adc
mov
fldl
sbb
movsl
and
icebp
lds
cmp
insb
inc
mov
push
add
test
add
pop
pop
icebp
inc
inc
mov
sub
mov
push
push
std
shll
sub
pop
xor
push
sbb
adc
pop
pop
daa
adc
jno
and
daa
test
ret
notl
call
pop
scas
push
nop
jo
push
out
daa
mov
push
cmp
jmp
sbb
test
inc
xchg
and
call
add
xor
push
cmc
push
xor
push
xchg
in
cmp
ljmp
sbb
stc
mov
hlt
fmuls
xchg
mov
add
xor
ljmp
popa
jbe
iret
pop
dec
add
lcall
adc
pushf
out
xlat
add
movsb
out
lret
dec
xchg
stos
enter
dec
mov
repz
mov
pop
dec
add
lahf
pop
xchg
xchg
mul
cmp
pop
imul
jmp
es
dec
push
add
mov
xchg
and
sbb
pop
sub
push
xor
push
fsub
xchg
mov
sbb
cwtl
inc
xor
mov
xchg
cwtl
jns
sub
push
mov
xchg
loopne
push
insb
enter
sahf
sbb
aas
icebp
jg
mov
icebp
andl
xchg
adc
adc
fsubr
xor
lods
and
sub
add
mov
int3
mov
xchg
pusha
roll
inc
xchg
hlt
movsb
cmp
out
add
mov
ret
pop
jo
in
and
pop
pop
fsubl
lds
and
mov
xchg
cmp
call
jno
mov
sbb
xchg
xchg
xor
movsb
add
test
or
lret
jge
icebp
popa
push
das
adc
pop
int
data16
cmp
xor
popa
adc
inc
push
lcall
je
and
test
in
les
pop
fcoms
or
fsubs
dec
jge
mov
sbb
cmp
les
loope
cmp
lahf
xchg
sbb
cmp
lea
or
and
jno
loope
cmp
mov
lcall
loope
jecxz
inc
pop
mov
loope
and
cli
loopne
bound
mov
fs
xor
shlb
xchg
pusha
pop
or
nop
push
push
and
push
clc
fwait
add
xchg
lds
jge
dec
mov
xor
adcb
int3
cltd
in
mov
imul
and
mov
mov
mov
xchg
es
mov
dec
adc
ja
jb
loop
mov
daa
push
les
xchg
dec
or
mov
frstor
in
ljmp
fldt
insl
popa
out
shlb
test
xor
pushf
push
scas
les
andl
dec
rorb
sbb
mov
aam
push
add
and
jns
clc
dec
push
and
jno
add
mov
xor
xchg
and
test
mov
sub
or
test
jno
pusha
or
xchg
jg
lods
rcll
mov
mov
sub
xchg
scas
cmpsb
push
leave
pusha
pusha
sbb
add
dec
xchg
and
imul
sbb
fdiv
jo
jp
test
flds
dec
xchg
enter
jb
in
pusha
xor
adc
add
lcall
rcll
sbb
stos
cwtl
xor
push
js
daa
rorb
add
movsl
repz
sub
bound
mov
xor
push
loopne
lahf
add
mov
shrl
insb
mov
xorl
mov
cmp
daa
scas
shlb
cmp
mov
add
push
cli
mov
lret
ja
dec
adc
std
sbb
fwait
jmp
test
jb
nop
mov
cmp
outsb
lcall
movsl
ret
dec
jp
mov
or
mov
mov
cmpl
ss
cltd
mov
push
andb
xor
push
rcll
xor
insb
pop
xorl
cmp
sbb
aaa
xchg
imul
bound
or
stos
fwait
jl
hlt
or
sub
sub
popa
inc
pop
add
pop
sbb
xchg
add
cmp
mov
and
dec
rolb
xchg
movsl
out
adc
push
les
jp
lcall
inc
xchg
outsb
es
aaa
jne
or
daa
mov
cmp
addl
cmp
pop
leave
xlat
sbb
imul
push
dec
loop
add
dec
push
push
mov
stos
xchg
pop
icebp
sarb
fwait
jmp
pop
pop
faddp
adc
pop
mov
popf
xchg
sbb
sub
jecxz
mov
pusha
andl
sub
je
adc
xchg
lret
popf
mov
ljmp
fdivr
idivb
mov
add
pop
pop
mov
inc
rolb
pop
mov
sbb
cmpsb
or
add
add
je
rolb
je
push
test
mov
add
jl
leave
rcrl
mov
or
sarl
push
pushf
lock
movsb
jle
add
adc
add
jo
ja
lods
sbb
sbb
or
outsb
fcoms
inc
adc
mov
fadd
xchg
out
adc
shrl
fimull
xor
inc
adc
mov
pop
mov
loop
cld
mov
mov
pusha
ja
sarb
sub
inc
addb
call
add
ja
das
orb
sbb
sub
int3
bound
test
out
inc
pushf
sahf
jo
pop
add
imul
inc
mov
pop
popa
lods
add
es
loopne
out
xchg
nop
icebp
mov
mov
rolb
test
xlat
jno
pop
dec
push
jno
sub
data16
xor
mov
fucomi
cmpb
pop
mov
xchg
sub
icebp
fisttpl
mov
add
aad
push
in
lock
and
jmp
clc
jecxz
or
sbb
rorb
xchg
adc
add
xchg
adc
loope
aad
cmp
pushf
aam
push
sub
addr16
inc
fldt
inc
add
inc
add
pop
mov
inc
or
pop
jno
imul
adc
mov
mov
out
add
ja
int
cld
mov
ds
push
or
pop
addr16
stc
rcr
and
cmc
clc
out
push
mov
popa
dec
out
mov
sub
fwait
ret
mov
inc
mov
inc
mov
test
adc
loop
faddl
sbb
hlt
and
jo
test
cmp
lea
cltd
jne
fstpl
jno
cmp
jle
loopne
dec
iret
inc
and
dec
sti
lds
sbb
std
xorl
or
daa
fcmovnbe
sub
pop
add
in
in
mov
mov
out
pushf
cld
or
sbb
add
adc
xchg
mov
je
add
inc
lret
sbb
cs
dec
adc
sbb
add
sbb
xchg
and
mov
sbb
mov
mov
mov
test
fcomp
or
ja
adc
in
jns
push
outsl
ret
add
lret
push
jmp
mov
push
in
rclb
out
jae
jg
pop
adc
imull
daa
mov
inc
sbb
cmp
ljmp
or
mov
push
lar
iret
mov
negl
ja
das
cmp
push
push
mov
push
out
add
pusha
sti
xchg
fcoms
shll
clc
cmp
cmc
mov
dec
stos
or
mov
nop
pop
fistpll
in
iret
mov
repnz
and
or
insb
mov
in
mov
push
sbb
dec
lret
sbb
or
test
stos
jmp
stos
or
test
inc
mov
add
bound
xor
mov
dec
ss
nop
sub
push
or
add
pop
push
daa
das
das
lds
mov
pop
out
bound
xchg
pop
js
test
int3
call
push
xor
inc
es
fisttpl
add
add
and
xchg
out
lret
dec
and
cmp
and
inc
cmp
push
fcoms
or
out
test
in
mov
mov
and
cmp
or
lcall
adc
mov
in
fildll
mov
or
ret
ja
fnsave
testl
lahf
sbb
nop
lcall
notl
insl
dec
add
mov
sub
inc
aaa
sub
adc
fsts
test
les
fstpt
shl
lea
push
inc
or
ret
jnp
sub
cmpsl
icebp
mov
inc
icebp
fisubrs
jae
test
js
outsb
call
lahf
sub
loop
loopne
inc
icebp
pop
orl
and
dec
push
dec
loopne
imul
push
mov
ja
mov
jl
and
and
inc
or
push
push
or
fimull
int
push
jmp
lods
repnz
ret
fidivl
pop
mov
dec
mov
sbb
mov
jb
push
mov
or
loop
lds
cmp
negl
jle
dec
cmp
xor
sub
jae
fidivrl
pop
das
push
and
inc
rorb
es
or
insl
dec
in
int
pop
push
movb
je
mov
adc
lcall
js
dec
mov
mov
sbb
adc
insl
lcall
mov
jno
sub
inc
shlb
mov
mov
push
mov
sbb
shr
popa
inc
rorb
mov
add
daa
ret
arpl
jl
jo
fcmovnb
in
fisubrs
pop
gs
and
insb
xor
jmp
ds
jnp
mov
call
lcall
cmp
xchg
pop
jo
and
push
imull
fs
adc
dec
inc
jmp
jno
lcall
push
fcoms
imul
and
cmp
addl
lods
btr
int3
add
sbbb
or
xor
dec
out
in
or
mov
inc
sub
data16
adc
cmpxchg
pop
mov
cmpl
jp
inc
mov
stos
inc
adc
add
mov
sub
in
adc
inc
sub
iret
dec
fsub
scas
inc
sbb
adc
pop
aaa
lcall
cmp
cmpsl
hlt
pusha
mov
fadd
mov
lahf
iret
mov
and
decl
cld
pop
push
mov
fs
xor
add
xlat
es
addb
dec
xor
or
or
adc
das
mov
iret
or
enter
sarl
leave
cmp
pop
push
xor
popa
dec
pop
mov
sub
sub
outsb
jbe
sarb
jg
add
mov
mov
and
sub
add
cmc
popa
cmpsl
xchg
adc
inc
pop
gs
or
jecxz
aad
cli
out
scas
in
xchg
mov
add
push
push
pushf
and
aad
loope
push
adc
and
push
xor
add
mov
hlt
js
dec
add
neg
push
pop
daa
popf
or
and
adc
pop
add
nop
inc
mov
xchg
sub
jecxz
pop
cmp
stos
or
or
dec
jge
lods
pusha
sub
loop
xor
add
cmpb
mov
ret
into
mov
add
andb
outsl
mov
push
mov
sub
lret
aas
and
adc
jo
inc
aam
aam
lret
dec
sbb
sbb
scas
iret
add
sarb
lds
pop
xchg
add
mov
push
mov
inc
xchg
mov
xor
cmp
daa
das
xchg
jno
or
push
jl
ss
dec
push
add
add
andl
inc
inc
fwait
aas
insl
mov
push
sub
push
les
push
xchg
bound
adcl
push
add
lods
loopne
mov
xor
lea
es
and
adc
js
jb
mov
orb
push
fidivrl
mov
push
fildl
xor
ljmp
sti
test
or
clc
lret
jo
loopne
fwait
aam
xor
cmc
es
andl
or
sub
psllw
call
sbb
and
add
sbbl
shll
test
or
sbb
sbb
dec
roll
pop
jle
mov
iret
jecxz
in
cmpsl
clc
rcr
add
jbe
xor
daa
cwtl
push
dec
insb
mov
mov
sub
and
orl
sbb
scas
stos
stos
arpl
int
addr16
loop
les
push
incb
les
insl
add
mov
int3
xor
fcomps
sar
adc
push
push
jg
cmp
shr
or
inc
jnp
sbb
xchg
sar
andb
cltd
jle
cltd
or
cmpsl
in
push
cmp
xchg
push
pop
dec
jmp
or
jns
xchg
fwait
adc
ficompl
push
and
mov
incl
daa
push
cs
jb
stos
adc
xchg
dec
inc
adc
rolb
mov
adc
xchg
mov
lods
scas
add
xor
and
fwait
popa
push
movsb
inc
repnz
sbb
outsl
ds
cmpsb
mov
and
mov
push
and
mov
ffreep
xchg
cs
movsl
je
xchg
inc
xor
mov
shlb
mov
adc
dec
and
add
push
fs
dec
pop
jle
push
sub
rorb
mov
clc
ret
std
pusha
popa
and
test
add
or
je
inc
inc
add
add
out
add
enter
pop
mov
js
or
jmp
mov
sbb
add
mov
xor
rcrb
and
add
xor
sbb
adc
mov
and
pop
add
xchg
cmpsb
les
or
ljmp
dec
sbb
lods
mov
je
sbb
dec
push
cwtl
xchg
push
sbb
daa
add
xchg
subb
add
test
ljmp
out
mull
adc
stos
mov
incb
mov
out
jbe
fmuls
xchg
pop
out
aaa
mov
or
lahf
iret
lcall
sbb
mov
sbb
adc
add
push
test
ficoms
fcoml
jecxz
and
and
pop
insl
push
or
stos
scas
andb
jns
sbb
xchg
xor
lahf
stc
nop
test
push
mov
cmpsl
mov
mov
mov
ret
cmc
cmp
icebp
stos
pop
add
xor
mov
mov
add
jg
mov
mov
sbb
adc
sub
ja
out
xchg
fistpll
add
pop
lods
or
xor
dec
lock
jecxz
add
flds
or
xchg
adc
flds
adc
cmc
jle
xchg
sbb
pop
jne
mov
or
and
je
shlb
call
fldcw
test
push
cmp
or
inc
or
adc
jg
loopne
ret
adc
pusha
push
lret
loopne
lret
or
or
and
mov
sub
les
adc
into
jo
pusha
sbb
scas
push
inc
mov
sbb
xchg
xor
inc
pop
push
xor
or
sbb
push
mov
arpl
stos
faddl
dec
into
sub
test
lods
out
repnz
pop
test
adc
out
sbb
push
jecxz
sbb
les
jnp
jnp
stos
idivw
pop
cmp
outsb
xchg
aam
sub
lods
cmpsl
and
and
push
jno
shlb
dec
out
jbe
pushl
add
adc
int3
xchg
cmp
xchg
cmp
lods
mov
fisubl
and
mov
stos
cmp
shlb
mov
sbb
les
add
aad
sub
lret
or
or
movsb
inc
jp
test
dec
lods
push
lock
cltd
add
push
stos
sub
iret
pop
in
add
pop
push
lock
mov
push
mov
pop
js
insl
shll
mov
mov
adc
jge
dec
inc
fstpt
pop
dec
xchg
sbb
lret
fmull
or
mov
test
call
add
push
pop
loop
fidivl
xor
or
pop
movsl
dec
pop
sub
sub
add
ljmp
out
push
movsb
and
sahf
mov
aad
out
inc
repz
and
out
ljmp
insl
cs
leave
pop
sahf
mov
and
push
andl
mov
mov
adc
fmuls
jbe
mov
or
loop
push
push
loopne
insb
xor
push
push
inc
out
adc
repnz
imul
xor
push
sbb
fcomps
add
lods
out
push
lock
ja
xor
mov
test
lret
jle
lods
roll
cmp
shll
mov
jns
and
test
jne
dec
and
cmp
int
and
fidivs
jp
mov
loop
scas
fadds
mov
stos
subb
xor
xchg
clc
iret
dec
and
cmpsl
jp
pop
cmp
fs
add
loop
repz
dec
pop
xchg
mov
inc
jge
adc
and
loop
add
dec
jne
lea
jp
add
mov
and
aaa
or
dec
stos
push
jp
xlat
mov
adc
adc
incb
cmp
popf
push
scas
or
mov
shlb
add
aaa
popf
dec
push
add
into
push
jnp
push
int
es
add
mov
push
add
scas
jno
out
add
sub
dec
pop
sbb
repz
adc
and
fs
call
and
cld
popa
fisttpll
or
out
jle
mov
sbb
cmc
jo
arpl
fists
xor
sbb
dec
adc
outsl
xorl
add
add
in
iret
dec
cmp
mov
sbb
xchg
nop
push
popf
dec
test
pop
popl
out
insl
les
mov
and
sub
adc
jle
rcrb
xchg
enter
je
xor
cmp
shll
aaa
and
lods
push
mov
xor
xor
push
int3
mov
insl
mov
xchg
test
movhps
roll
rcrb
sub
fstpl
pop
stos
push
jns
imul
jb
fildl
adc
lods
push
pop
scas
enter
lea
mov
orl
lods
lods
adc
push
add
adc
adc
xor
iret
push
sub
aad
test
jb,pn
aam
sbb
jmp
lods
mov
loopne
jne
lock
sub
xlat
inc
xor
mov
push
adc
push
mov
je
and
push
mov
sub
and
lods
scas
lcall
rcl
sbb
fdivp
test
push
xchg
pop
push
and
fldl
cli
push
rclb
push
loope
xchg
jb
scas
stos
aaa
dec
xchg
mov
out
orl
pop
push
adc
add
sbbl
xchg
mov
add
push
adc
addb
out
sbb
inc
xchg
ficomps
sub
fmuls
testl
or
in
and
xor
xor
in
fadd
into
add
sbb
rcrb
xchg
jl
pop
mov
lea
mov
in
vandnps
push
push
and
sbbb
add
add
rorb
shll
push
or
add
dec
ror
adc
add
push
rcr
sub
adc
xor
lods
adc
add
pop
dec
adc
mov
pop
pmulhw
stc
add
lcall
or
mov
add
xor
cmp
sub
jp
aaa
mov
adc
data16
cmp
addr16
daa
jl
add
mov
or
addb
xchg
movsl
xchg
daa
dec
sbb
add
cmp
adc
push
xor
cmp
mov
or
je
mov
or
mov
push
and
pusha
inc
popf
loope
xor
fsubl
dec
xor
mov
push
in
and
sahf
roll
dec
ficoml
aad
or
mov
in
mov
dec
xchg
pop
or
pop
mov
sti
cmp
arpl
fsubrl
popa
mov
lods
sub
jl
loop
out
ds
aam
pop
xchg
xor
add
gs
sbb
jo
sbb
push
pop
mov
stos
loopne
xor
lret
push
cmc
pop
xor
jo
push
int3
pop
hlt
cmp
call
sbb
cwtl
lret
test
popa
adc
xor
pop
test
lret
jbe
lods
jae
aam
sub
jno
adc
inc
mov
in
ss
ljmp
in
into
dec
inc
sub
adc
mov
mov
cld
xor
sub
sub
sub
mov
sub
scas
sub
pop
je
inc
rcll
xor
js
jns
pop
out
aam
lret
xor
jmp
ret
xor
addb
int
adc
test
sbbl
daa
add
lods
sbb
sbb
mov
add
scas
pop
pop
cmc
xor
int
sub
daa
add
xor
adc
enter
jge
fwait
pop
mov
fwait
adc
and
xchg
or
adc
ja
push
dec
inc
sarl
xchg
inc
js
push
addb
bound
mov
cwtl
push
pop
iret
ds
pop
mov
lcall
and
cs
add
mov
sub
stos
into
lock
or
add
outsb
lea
int3
add
mov
popa
dec
push
pop
popf
fisubrs
jno
enter
jo
fdivrs
cmp
adc
in
inc
sub
cmp
jb
jno
pop
sub
test
arpl
pop
out
xor
sub
ja
jnp
sub
test
jg
xchg
outsb
sub
and
scas
jmp
pushf
popa
js
bound
jbe
jno
jb
out
insb
mov
loop
es
in
sub
movsl
or
pop
sahf
sub
mov
lods
pop
notl
mov
jo
push
push
sub
jb
jae
jnp
in
jne
jbe
mov
jbe
cmc
push
js
lods
jle
pop
insl
push
sbb
gs
or
xchg
loopne
pop
int3
outsb
lods
adc
mov
jnp
cmc
scas
rclb
inc
sbb
xor
gs
sub
or
xlat
jne
ficoml
pushaw
sbb
mov
push
js
data16
gs
add
ja
scas
ret
jp
jp
add
mov
outsb
lods
test
int3
cs
inc
fmull
push
mov
dec
and
orb
pop
insl
aaa
xor
nop
mov
lds
mov
sub
mov
js
xchg
adcl
push
fcmovnu
ficomps
inc
adc
cmp
or
pop
int
ja
notl
in
int3
rorl
dec
sbb
or
es
movsb
je
lds
test
bound
jmp
gs
ficoml
push
push
fwait
push
xor
mov
mov
lods
loope
add
xor
jae
aaa
shrd
sbb
push
pop
and
adc
test
outsb
xor
push
lods
daa
xchg
and
das
imul
cmp
adc
outsl
cmp
push
add
mov
fbstp
push
ffree
or
jns
scas
js
insl
inc
add
stos
rcrl
pop
pop
jle
jne
add
push
cvtdq2ps
lods
jne
xchg
pop
jb
push
sbb
xlat
sahf
pop
mov
es
js
mov
push
inc
repz
xor
xor
imull
add
jbe
fldcw
testl
das
dec
add
sub
lds
mov
insl
das
lods
jns
fldenv
dec
scas
sub
add
sbb
dec
add
sbb
adc
pop
add
jne
sub
mov
sub
imul
pop
add
sbb
mov
inc
movsb
ss
mov
pop
and
push
mov
inc
add
dec
aas
cmp
mov
add
popa
scas
dec
aam
ret
das
xchg
or
jns
aad
mov
pop
addl
dec
call
pop
jnp
sbb
add
insl
rorl
or
into
xor
xorb
cmp
xor
sbb
add
cwtl
jnp
sbb
push
stos
divb
fildll
outsb
cld
outsl
fisubl
scas
mov
das
loop
loopne
pop
lods
loope
iret
cli
ja
sbb
setnp
fs
arpl
in
pusha
ret
outsb
pop
ret
pop
lds
pop
or
test
xchg
les
inc
and
scas
pop
stos
and
inc
movsb
mov
xchg
loopne
and
inc
fwait
mov
or
inc
and
pop
adc
cmp
arpl
pop
es
inc
add
or
je
pop
in
sbb
push
outsl
popa
sarb
add
or
mov
push
int
mov
cld
fisttpll
pop
add
fsubl
into
sub
fsts
push
inc
add
pop
adc
inc
inc
mov
push
std
or
stos
lret
rcl
scas
jno
arpl
add
push
xchg
cmp
jp
es
xor
xor
int3
bound
jns
push
push
sti
push
lods
scas
jg
lock
pop
das
dec
mov
cmp
roll
cs
iret
fildll
popf
dec
dec
notb
loope
aaa
jl
add
add
scas
or
dec
adc
loopne
out
lcall
sar
inc
aas
mov
mov
push
and
push
and
jl
scas
sbb
data16
das
scas
pusha
leave
fldcw
sahf
add
imul
or
test
not
stos
xor
call
and
xchg
xchg
loope
pop
lcall
push
cwtl
push
cmp
jae
jo
cmp
or
jae
xlat
out
and
int3
int
mov
adc
xor
rclb
sbb
pop
mov
mov
dec
xchg
sub
ds
or
cmc
pop
loopne
cmp
imul
jge
add
rcrl
fcoml
or
pop
test
push
mov
leave
repnz
adc
or
xor
popa
outsl
inc
inc
xchg
aam
scas
jnp
xor
das
int3
adc
pusha
mov
xor
rolb
loopne
xor
and
xor
dec
es
and
xor
scas
inc
pop
bound
mov
cwtl
jmp
lods
xor
jecxz
sarb
aaa
fimull
or
pop
inc
jmp
je,pn
jnp
loope
add
mov
clc
subl
je
mov
and
cmp
js
xchg
outsl
jnp
jae
pop
gs
ja
push
sub
data16
adc
pop
pop
jnp
insl
jno
push
inc
mov
add
xchg
inc
jae
push
sbbb
or
pop
shrl
xor
and
mov
movsb
imul
je
fwait
mov
push
add
js
stc
lds
add
fs
sbb
pop
insb
sbb
xlat
inc
js
gs
pushf
mov
ja
jl
or
scas
jmp
cltd
ds
in
aaa
jb
icebp
jbe
popf
fistl
in
inc
or
rcrb
testl
xchg
adc
aam
sbbb
jne
xchg
mov
sub
cmp
adc
pop
xor
lea
int3
aad
inc
leave
cltd
mov
ficoml
sub
dec
popf
pop
jmp
sub
out
push
sub
dec
sbb
testl
sarb
add
cmp
sub
shrb
xor
cld
mov
push
inc
fwait
sub
movsb
sub
adc
sub
xchg
cmp
push
xchg
push
aas
dec
arpl
push
add
cmpl
pop
lock
push
insb
sbb
call
repz
mov
inc
daa
xchg
pop
or
pop
inc
iret
stos
sbb
push
movsl
lret
pop
jbe
bound
dec
add
jne
xor
add
andb
movsb
mov
aas
xor
cmp
add
sub
cmpsl
push
inc
idivl
add
mov
jle
in
pop
add
fildl
add
js
or
aad
ltr
push
inc
cld
mov
sbb
mov
push
nop
sub
rolb
inc
loopne
and
arpl
ret
frstor
add
xor
hlt
push
mov
xor
mov
cli
mov
add
add
rorb
push
xchg
aas
push
mov
cmp
inc
movsb
negb
add
jne
mov
fadds
mov
iret
lea
xchg
and
add
xchg
sub
add
mov
das
loope
add
mov
stc
les
or
and
adc
roll
sbb
add
repz
and
xchg
sbb
dec
adc
loopne
sbb
cmp
es
mov
test
jl
and
jno
and
add
xchg
add
adc
adc
inc
sarl
sbbb
and
dec
clc
insw
or
enter
arpl
mov
push
cmp
jb
add
cmp
fcmovnu
bound
icebp
imul
inc
nop
mov
sub
xor
test
and
mov
es
adc
xchg
push
icebp
push
psubb
test
subl
aas
cmp
jle
inc
int3
adc
xor
xor
adc
out
daa
and
dec
add
or
scas
push
pushf
add
mov
test
out
sbb
jbe
daa
pop
xor
iret
sbb
ds
test
pop
in
mov
inc
mov
jmp
mov
and
and
add
jmp
lahf
sub
dec
mov
lret
push
add
mov
pop
mov
pop
or
xor
sub
xchg
ljmp
mov
cmp
hlt
hlt
xor
sub
xchg
xchg
sahf
ljmp
mov
iret
aad
jge
push
ret
leave
cmp
sbb
insl
les
xchg
add
lds
add
push
sbb
lods
xor
mov
outsb
and
add
data16
add
jecxz
daa
add
loopne
mov
clc
inc
stos
je
out
cltd
enter
cwtl
lret
sub
jecxz
and
in
test
int3
stos
cmp
sbb
jo
sbb
jecxz
mov
push
loopne
lret
data16
lret
add
jae
push
imul
jno
sub
hlt
add
enter
mov
add
inc
les
sub
sub
rcrl
mov
or
xchg
orb
and
fdivs
cmp
push
jnp
loop
inc
mov
pop
ret
stos
jmp
pop
inc
stos
addb
mov
cmp
aaa
mov
xlat
addb
xor
mov
movb
push
xor
mov
mov
test
inc
aad
stos
cmp
test
fildl
add
mov
pop
add
push
imul
scas
std
cmp
jmp
pusha
push
sbb
cmpsl
or
into
jne
pushf
lock
stos
repnz
push
and
bound
push
mov
dec
and
add
sti
subb
loopne
aam
mov
lret
xor
pop
inc
or
jb
adc
mov
mov
xor
push
xlat
or
lods
mov
adc
push
adc
push
push
rcl
sti
xor
pop
in
shrl
int
sbb
out
imulb
mov
fnstsw
cmp
lock
pop
jne
cmovp
adc
test
push
rorl
dec
xor
mov
out
and
sub
pop
dec
scas
cmp
inc
push
cmpsb
das
loope
or
jmp
pop
outsb
jmp
sbb
insl
adc
add
out
sbbl
xchg
or
sti
les
mov
push
xor
sbb
and
sbb
dec
adc
ljmp
out
sti
gs
push
add
incb
leave
and
mov
fcoms
inc
jne
pop
arpl
jmp
lds
jno
mov
and
pop
test
add
or
cmc
push
mov
jno
shrl
lods
std
sahf
stc
sbb
xchg
jo
mov
push
inc
movsb
or
in
dec
mov
aad
sub
adc
ss
aam
test
dec
and
int3
into
sar
cmp
orb
ret
sbb
jmp
add
test
push
fmull
add
mov
inc
pop
insb
cmpsl
sarb
dec
xlat
dec
adc
movsb
sbb
icebp
jl
jb
test
sbb
nop
and
aas
pop
pop
shl
dec
hlt
mov
xor
xchg
sbb
or
je
dec
cmp
and
inc
push
mov
fists
insb
inc
mov
out
or
enter
test
pop
push
or
xchg
push
icebp
ret
or
push
inc
sub
test
or
lock
add
loopne
lock
loopne
sub
and
cmp
sbb
and
fcmovnu
jge
mov
call
inc
fisttpll
push
fcmove
icebp
and
mov
mov
xor
repz
sbb
pop
fldt
jle
and
mov
add
mov
or
xchg
adc
std
and
pop
or
lods
adc
aam
jnp
adc
outsb
add
mov
fs
adc
icebp
les
mov
mov
imul
clc
and
iret
cltd
mov
mov
dec
cmp
xchg
cmc
lods
mov
ja
cltd
add
lret
daa
inc
push
mov
test
adc
lods
shll
fisttpll
mov
loop
js
dec
push
aad
bound
sbb
aas
das
dec
add
xchg
sbb
dec
nop
push
or
cmp
xor
jp
cmp
test
scas
and
pop
inc
adc
sahf
jp
mov
xchg
or
daa
stc
inc
bound
pusha
sbb
inc
out
lock
gs
outsl
and
rcll
mov
pop
iret
outsb
fwait
loopne
sub
mov
xor
pushf
adc
scas
cs
ljmp
xor
pusha
enter
arpl
adc
add
dec
pop
dec
mov
push
sbb
pusha
jns
push
int3
andb
inc
les
mov
aad
rolb
pushf
push
jo
mov
mov
mov
push
es
adc
int
aam
add
sub
aaa
outsl
ret
mov
mov
or
stos
push
sbb
lret
mov
mov
nop
dec
sub
push
sub
jg
jle
cwtl
add
sbb
pop
lds
lret
adc
sub
xor
and
andl
orb
or
jno
and
test
mov
mov
jle
into
push
add
push
inc
imul
jle
jb
lds
fldenv
jnp
jmp
mov
dec
xor
dec
pop
sub
shlb
les
and
cmp
orl
lcall
ss
or
push
fwait
lods
pushf
ja
adc
sub
loopne
jg
ret
scas
pop
outsl
and
pop
sbb
jmp
and
lahf
push
jo
pop
in
mov
mov
or
inc
push
sub
sub
aaa
and
mov
or
jae
mov
jge
inc
push
jae
lcall
movsl
mov
mov
sbb
or
jg
fnsave
fmuls
jae
inc
mov
sarb
enter
adc
clc
and
dec
and
cmpsb
imull
sub
xor
and
cli
mov
inc
iret
mov
mov
scas
inc
jp
mov
mov
js
in
aaa
jl
sbb
pop
push
inc
and
int
sti
mov
aam
inc
xchg
dec
fadds
pop
sbb
add
xchg
icebp
in
sti
leave
jns
push
jb
jno
push
sub
mov
xlat
es
xchg
jmp
roll
adc
hlt
sbb
aam
imul
stc
push
jne
jbe
stos
push
lods
add
and
stos
cmp
int3
arpl
popa
xor
inc
mov
hlt
jns
roll
stos
pusha
fmuls
or
dec
sub
bound
mov
pusha
jp
jle
dec
sub
lods
mov
out
arpl
add
add
xor
sbb
test
cmp
cs
cli
into
fidivs
add
jge
pop
andb
in
inc
test
sub
pop
out
addb
push
out
arpl
mov
mov
cltd
sbb
jns
insb
test
movb
sbb
lahf
repz
pusha
add
inc
adc
les
or
fwait
push
jno
push
and
mov
jne
or
inc
sub
icebp
mov
mov
loope
sub
inc
and
loop
aam
lahf
adc
sbb
testl
std
mov
dec
sub
out
push
xchg
push
push
lea
shrl
enter
add
lret
push
xchg
mov
and
mov
jne
arpl
or
adc
cmpsb
adc
stos
xchg
shlb
sbb
inc
es
idivb
mov
cmpb
inc
add
inc
mov
fidivl
mov
rorb
adc
das
loopne
out
in
aad
sbb
add
mov
add
fwait
and
adc
adc
fisttpll
mov
rolb
xor
adc
mov
jo
adc
es
dec
daa
jg
jle
and
xchg
push
inc
cmp
movsl
adc
pop
add
repnz
xchg
push
iret
or
push
movsb
inc
mov
jp
jg
lea
dec
jns
cmp
cs
adc
mov
adc
xor
sahf
adc
dec
ret
jno
data16
pop
test
mov
dec
inc
sub
mov
add
test
pop
jp
adc
jo
cmpsl
pop
shlb
movsb
push
dec
mov
lret
fstps
inc
daa
clc
and
lods
hlt
jb
jno
and
scas
adc
pop
or
dec
xchg
subb
loop
in
fdivl
call
xchg
mov
cwtl
inc
cmpb
sarl
inc
movsb
add
fiadds
push
inc
pop
xlat
and
cmpsw
inc
dec
lock
imul
lock
cld
push
xchg
out
flds
fiadds
dec
inc
jg
sbb
daa
hlt
aaa
xchg
and
adc
xor
test
mov
pop
xchg
mov
bnd
in
cmpsl
in
iret
pushf
add
cmc
nop
mov
xchg
mov
and
cwtl
adc
adc
inc
adc
pop
shlb
lds
jno
push
aad
jle
inc
sub
jmp
ret
scas
loope
and
xchg
or
test
adc
or
adc
add
mov
jno
jle
inc
popf
inc
les
jbe
sarb
je
mov
xor
pop
mov
mov
dec
or
popa
inc
xchg
xor
int3
dec
adc
xor
sbb
mov
push
das
lds
sbb
cmp
xor
mov
xor
cmpb
add
push
insl
loopne
cmp
rol
in
add
fcoms
pop
inc
push
and
mov
pushf
lret
mov
xchg
ss
imul
xchg
aam
sti
je
add
test
mov
add
faddl
adc
and
sub
pusha
lcall
test
adc
dec
test
in
mov
xor
add
adc
xchg
or
imul
data16
sub
stc
add
mov
outsl
sbb
cmpb
mov
add
dec
pop
js
add
xchg
add
inc
xor
popf
pop
and
xchg
inc
mov
add
sub
mov
aam
or
movsb
insb
xorl
or
mov
pop
push
aam
inc
popl
enter
add
stos
push
push
out
xchg
iret
dec
pop
or
add
dec
xor
sahf
jo
dec
loop
iret
fwait
iret
adc
loopne
mov
addr16
or
xchg
call
and
mulb
stos
pop
and
adc
and
adc
xchg
sbbb
lds
daa
out
sbb
pop
loopne
or
fcom
movsb
test
cli
aam
mov
cmp
or
mov
clc
into
and
aam
mov
and
push
xchg
adc
in
js
dec
roll
frstor
das
jle
jmp
jmp
dec
orb
push
inc
mov
data16
push
xor
js
or
inc
data16
add
lds
cmc
aam
addb
cwtl
sbb
push
inc
mov
add
and
cmp
add
push
or
or
and
les
push
jmp
fiaddl
sub
ds
xchg
mov
adcb
sbb
mov
lea
clc
call
sarl
jmp
in
mov
and
js
and
stos
mov
sti
push
mov
jo
ret
rorb
ljmp
fildll
jo
cmp
pop
jo
push
test
sbb
dec
and
stos
andl
sub
xlat
pop
adc
or
push
add
and
roll
push
mov
push
lock
addr16
in
jns
stos
ljmp
jbe
push
add
xor
sbb
sti
add
push
adc
and
mov
or
dec
inc
sub
addl
imul
xchg
imul
sbb
xlat
out
int3
mov
push
mov
shll
cmp
ret
sbb
xchg
push
test
push
xchg
add
ljmp
mov
jne
out
lods
push
adc
test
xchg
xor
adc
xor
bound
icebp
xlat
lret
mov
pop
adc
fmulp
add
jae
add
mov
addb
push
add
icebp
adc
rclb
pusha
inc
push
loop
mov
mov
inc
sub
pop
ss
fadds
mov
stos
pop
gs
aad
rclb
aam
dec
ds
jo
fistl
push
add
lahf
or
stos
push
add
jp
lahf
inc
ror
xor
dec
outsb
sbb
push
scas
or
cmp
cmp
push
jmp
inc
sahf
xor
cwtl
xor
sub
cmp
push
cld
sub
inc
pop
ret
adc
add
sbb
cwtl
mov
add
lahf
cwtl
dec
jmp
fs
add
add
and
xchg
pop
aaa
loope
aaa
adcl
xchg
loope
es
xchg
and
add
gs
inc
aas
outsb
push
ljmp
clc
jge
mov
aas
mov
xchg
cmpb
mov
les
jnp
mov
inc
mov
adc
lahf
pop
or
sub
iret
mov
mov
hlt
pop
iret
subb
add
rcrb
lock
push
clc
or
lods
sbb
jge
loop
daa
xor
jp
mov
pusha
inc
xchg
sbb
mov
leave
xor
orb
adc
outsb
inc
sahf
inc
pusha
inc
and
out
addl
mov
mov
mov
popa
gs
cmp
mov
test
je
inc
sbb
pop
and
cmp
test
push
xor
pop
add
loope
mov
add
orb
add
mov
sbb
orb
add
mov
je
mov
inc
lock
mov
das
and
js
in
sbb
mov
pop
sub
out
add
ficompl
push
or
orl
mov
inc
mov
ret
ss
cmp
ficompl
cmp
inc
pop
inc
cmp
sti
push
das
push
shrl
xchg
pushf
sbb
js
inc
cmpsl
test
inc
and
ret
push
mov
or
daa
jecxz
mov
call
lds
sti
and
arpl
and
cli
aas
dec
sbb
dec
inc
mov
or
inc
sbb
gs
fnstenv
aaa
lock
jle
adc
add
push
testb
cmp
mov
call
pop
mov
sbb
into
shlb
lock
inc
rcl
ss
imul
bound
mov
dec
inc
mov
fwait
pusha
sbb
cmp
inc
push
stos
mov
pusha
in
mov
mov
ljmp
fwait
add
push
jl
cli
icebp
sbb
jne
push
inc
sbb
nop
mov
dec
push
pop
push
test
dec
cmpsl
push
mov
sbb
adc
in
sbbb
jbe
lret
addr16
xorb
ja
cs
lods
and
hlt
and
inc
xchg
or
stos
adc
ja
inc
add
cmp
movsl
jb
sbb
adc
mov
mov
dec
outsl
xchg
ja
fldt
arpl
push
int3
mov
lods
add
jb
fisubrl
or
pop
inc
inc
dec
push
mov
shlb
movsb
push
inc
add
mov
add
and
repz
mov
es
add
and
add
pop
inc
subb
dec
pop
test
inc
insb
loopne
mov
scas
fsubl
cli
sub
and
mov
sbb
outsb
or
inc
shll
and
sub
sarb
xchg
adc
scas
cmc
mov
hlt
bound
xor
inc
in
jne
inc
mov
push
dec
cmc
lods
subl
sbb
or
ret
push
sub
jl
pop
sti
andb
mov
es
push
lea
sbb
sub
sub
jae
mov
call
sub
dec
inc
mov
pusha
xor
jg
movsl
push
mov
int
imul
popl
aas
in
sub
inc
xor
push
lret
pop
ds
daa
jno
into
faddp
in
xor
lods
and
inc
xlat
lret
xchg
mulps
cmp
iret
lock
jbe
fiadds
xchg
mov
and
mov
aaa
test
and
push
and
into
lcall
inc
xchg
inc
mov
adc
inc
jbe
ss
add
sbb
and
mov
inc
int3
hlt
in
in
sbb
push
fdiv
and
push
add
sbbb
mov
push
mov
push
pop
sbb
data16
push
mov
sbb
mov
push
les
push
scas
int3
aas
xchg
sti
rcl
mov
xor
sbb
sub
push
shll
cld
dec
ss
sub
add
sbb
push
je
sbb
movsb
sbb
adc
inc
shlb
jno
daa
loopne
xchg
pushf
and
sbb
xchg
jp
lahf
mov
test
pop
push
movsl
adc
cmp
sbb
inc
cmpsl
pop
add
or
pop
popf
push
xor
bound
rolb
mov
pop
mov
or
loop
fadds
out
jle
stos
xor
or
es
fisubl
out
imul
loope
mov
cmp
mull
dec
mov
add
push
jo
dec
or
popf
xchg
movsb
loope
add
or
push
fimuls
add
je
aaa
andb
cmp
andl
add
mov
mov
dec
nop
adc
sbb
mov
sahf
and
jne
roll
jp
or
jecxz
push
test
mov
pop
jmp
js
inc
dec
pop
fs
sub
adc
jae
mov
bound
insl
sbb
or
cmpsb
loopne
das
jnp
dec
push
test
lock
sbb
adc
lret
lods
mov
push
push
mov
fiaddl
pextrw
push
cmpsl
or
cs
sbb
and
push
fldcw
jle
pusha
cmp
add
push
jnp
inc
rclb
push
mov
roll
adc
pop
jnp
cmp
mov
add
popf
scas
mov
pop
xchg
sbbb
push
and
sti
mov
pop
cmp
das
test
xorb
daa
es
dec
cmp
rcrl
sti
test
je
adc
imul
xchg
mov
loopne
insb
inc
mov
push
adcl
shll
addb
add
and
jns
adc
jge
std
push
inc
push
xor
cmpb
cmp
and
out
push
adc
and
outsb
or
out
js
ss
movsb
pop
sbb
jnp
add
lcall
pop
add
out
push
popa
jp
clc
add
xchg
pop
sub
lods
jnp
jnp
cmovae
push
xchg
roll
mov
mov
inc
iret
aad
and
hlt
int3
pop
cmp
js
sbb
or
outsb
popf
pusha
pop
add
sub
cwtl
jbe
mov
cmp
sbb
xchg
aam
add
insb
arpl
mov
enter
inc
jo
popa
add
cli
cwtl
rolb
pop
lock
iret
lahf
and
inc
cmpsb
xor
ds
or
push
add
adc
sbb
add
clc
call
ss
mov
pop
loopne
push
dec
into
andb
sub
dec
adc
sbb
xchg
cmp
imul
add
fcoms
test
insl
fidivs
aas
push
mov
ret
loopne
hlt
sub
and
jle
push
addr16
jmp
or
scas
imul
mov
stos
aam
mov
ret
pop
aaa
adc
pop
xchg
insb
fbstp
pusha
jp
cmp
push
sbb
jo
inc
fistl
xchg
addr16
jle
sbb
test
cmp
inc
jl
mov
pop
jl
decl
inc
icebp
xchg
jge
test
xor
xlat
jbe
add
inc
dec
out
bound
clc
hlt
jmp
bndstx
out
adc
sbbl
fs
aaa
lret
orl
stos
or
and
cld
dec
mov
sbb
jo
or
pop
push
pop
add
jne
mov
xchg
jmp
cmp
cmp
mov
scas
dec
cmpsl
cwtl
loope
stos
jno
mov
pop
test
xchg
mov
xchg
pop
cmp
shlb
loope
jno
and
push
ficomps
xchg
pop
add
imul
data16
mov
imul
cltd
sub
inc
test
adc
les
test
mov
cmpsl
fucomip
mov
fisttpl
sub
fucomip
add
or
mov
daa
jge
popa
sbb
inc
in
push
std
loope
icebp
add
cltd
cmp
fwait
and
mov
testl
or
add
lahf
pop
addl
out
ds
fists
inc
arpl
cmc
fmull
ss
aam
sti
dec
xor
jne
sub
dec
clc
sub
insl
sub
dec
lahf
mov
cltd
nop
jge
push
repz
dec
xor
sub
inc
jb
clc
sub
jnp
sbb
add
mov
aam
add
lahf
lods
cmp
adc
test
push
pop
mov
out
adc
sub
adc
pop
add
dec
in
jmp
xchg
loopne
cmp
scas
add
fnstcw
mov
sldt
pop
or
ljmp
mov
jnp
pop
bound
sbb
mov
and
push
push
and
push
pop
or
add
adc
pop
out
int3
insb
mov
aad
hlt
out
in
imulb
bound
xor
cmp
jecxz
aas
xchg
mov
and
add
cli
adc
mov
imul
mov
or
loope
pusha
das
sub
mov
sbb
sbb
mov
pop
dec
cmp
fs
inc
hlt
fldt
xchg
popa
fmull
lret
pop
and
inc
pop
out
fisttpl
adc
push
jmp
in
in
loopne
in
xorb
notl
add
mov
fcmovb
xor
outsb
jb
in
filds
pop
adc
cmp
xor
cmpsb
mov
notl
out
sarb
popf
dec
in
insb
repz
scas
jmp
mov
in
sbb
cwtl
insl
push
sbb
fisubs
cmp
dec
push
cmp
fwait
add
bound
dec
mov
dec
mov
jecxz
xor
repnz
lahf
insl
mov
adc
or
and
jl
mov
xor
scas
ret
mov
jecxz
mov
in
pop
lods
hlt
pop
ret
add
or
sti
and
adc
cmp
popa
add
out
sub
push
jo
and
fisttpll
inc
in
jb
jae
fdivrl
ja
cmp
scas
pop
push
or
inc
add
and
pop
add
sub
sub
sbb
aaa
insb
insb
push
and
ret
ljmp
push
fidivl
lods
jmp
push
je
dec
and
add
inc
jne
pop
pop
xor
inc
pop
mull
pop
fiadds
loopne
shl
sbb
fcomi
mov
jmp
test
xchg
ljmp
ja
cwtl
pop
js
shrl
add
jno
lock
push
adc
das
push
ret
dec
push
ret
sbb
pop
jecxz
outsb
test
inc
sbb
xor
shlb
add
lcall
lds
sbb
and
hlt
and
push
cmp
fwait
outsb
div
xor
push
sbb
ret
imul
out
adc
push
cltd
push
xor
dec
cmp
repnz
je
fistpl
mov
stc
hlt
popa
clc
inc
add
rcll
add
fdivrl
sbb
pop
lods
lret
pop
cmp
lret
mov
loope
sub
and
aam
sbbl
mov
add
and
xor
cs
push
add
sub
pop
push
dec
nop
enter
inc
sbb
das
addr16
shl
loopne
loope
aad
adc
add
stos
popa
stc
sub
add
add
shrl
push
inc
ret
add
test
mov
in
and
dec
xchg
loopne
and
pop
ja
lods
mul
sub
lods
not
jmp
cmp
int
int
jo
iret
cmpsb
lods
insb
ss
cmpl
or
inc
popa
cmp
push
cmpsl
and
xchg
push
movsl
dec
dec
xorl
pop
shl
sbb
sti
ret
adc
and
cmp
inc
xchg
inc
mov
inc
imul
test
xor
add
jge
in
push
jno
xlat
cmpsb
roll
cmpsl
push
xor
addl
ja
arpl
push
adc
ret
movsb
roll
mov
into
inc
fsubrs
clc
out
ret
adc
or
mov
out
fdiv
shr
xor
movsl
adcb
dec
inc
cmp
push
dec
push
lret
jmp
repnz
shlb
cltd
shr
push
lods
sbb
js
or
test
pop
loop
test
xchg
aam
mov
or
push
mov
dec
adc
sbb
inc
sbb
sbb
mov
adc
cmp
rorl
lahf
add
lds
into
jp
cmp
sub
adc
lods
scas
loopne
inc
cmp
jb
mov
ss
inc
sub
xor
popa
mov
xlat
lret
push
cmp
mov
out
aad
or
xchg
ja
sbb
xlat
inc
or
pop
sbb
mov
dec
out
fcmovnbe
jae
and
jge
mov
les
pop
xor
pop
push
xlat
iret
cld
inc
and
sbb
inc
in
jo
adc
rol
mov
inc
jl
mov
filds
lock
push
inc
adcb
popa
fbstp
inc
notl
fimull
adc
and
sarl
sahf
sbb
lret
subl
lods
scas
xchg
inc
sbb
adc
add
in
loop
pushf
icebp
mov
imul
adc
jns
clc
stos
adc
sub
adc
je
push
sub
xor
xchg
popa
sub
cmpsl
and
jle
push
mov
addr16
dec
inc
in
in
adc
cmp
and
iret
into
fsubr
push
pop
pop
insl
gs
fisttpll
clc
loope
push
and
mov
bound
sbb
mov
in
pop
mov
mov
dec
mov
cmpsb
rol
pop
ret
ret
and
push
rcrl
mov
in
sub
sub
sbb
daa
les
fistpl
ss
dec
dec
push
into
aaa
hlt
aaa
les
inc
mov
xchg
pusha
inc
and
xorl
mov
aam
cmc
stos
sub
jne
xchg
inc
rolb
test
and
in
dec
inc
fisttpll
daa
inc
scas
jp
lret
and
int
add
cltd
cmp
fistpll
int3
inc
mov
and
push
mov
cmp
xchg
enter
sub
ja
loope
lea
fbld
jo
adc
jmp
push
xor
out
pop
das
pop
data16
int
push
inc
bound
cmp
rorl
daa
loopne
adc
push
lahf
or
pop
aaa
fldcw
test
add
inc
mov
add
add
iret
xchg
pop
xchg
jb
mov
add
sti
lahf
in
test
xchg
pop
fcmovnb
sbb
and
int
test
xor
out
cs
popa
add
sbbl
imulb
pop
mov
mov
lock
mov
dec
and
icebp
scas
imul
in
push
lcall
lods
imul
add
leave
ror
xchg
inc
shll
mov
ljmp
cmp
push
stos
out
dec
sub
repz
aaa
add
ja
pop
test
pusha
and
add
pop
mov
out
inc
adc
dec
jmp
and
and
push
inc
hlt
inc
ret
les
iret
mov
sbb
gs
or
adc
pusha
cld
pop
cmp
imul
call
mov
popa
pop
push
mull
push
jp
xor
push
sbb
adc
in
ja
or
mov
mov
pop
inc
or
add
push
and
shl
jne
jbe
mov
mov
data16
mov
jp
push
xchg
inc
add
add
mov
xor
xchg
inc
sarb
neg
pop
insl
cmp
les
out
lds
add
or
jae
outsl
xor
stos
xchg
push
sbb
loope
mov
mov
fwait
inc
jno
xchg
mov
pop
jecxz
je,pn
movsb
leave
iret
sub
fs
sbb
jge
sub
jmp
mov
out
jmp
adc
push
in
insb
cmp
imul
xorl
sub
cmp
pop
or
jb
inc
addr16
xchg
mov
sub
cmp
out
dec
sub
or
aaa
into
scas
jp
sahf
add
call
repnz
sahf
mov
jmp
data16
in
dec
pop
imul
adcb
dec
lock
add
sub
sub
inc
cmp
dec
mov
pop
adc
adc
jnp
add
jl
sarl
scas
and
cmp
mov
cmpsb
mov
lcall
push
pop
dec
pop
dec
iret
sub
and
lret
inc
orl
mov
std
mov
xchg
inc
cmp
inc
ret
mov
inc
add
loopne
and
roll
stos
inc
sarl
push
sub
cmpsl
faddl
or
inc
loope
jnp
push
sbb
pop
push
or
mov
sbb
imul
rcll
add
loopne
or
loope
lds
xor
jno
and
xor
add
mov
pop
orl
sub
dec
ret
js
jae
jecxz
jbe
add
sti
jle
cmp
mov
jp
mov
sub
dec
add
sub
cmp
fisttpll
test
int3
mov
incl
add
dec
filds
cmp
es
dec
pop
jecxz
sub
xchg
jbe
rcrl
mov
sub
add
cmpsb
push
cmp
sub
and
ret
sbb
and
and
add
mov
leave
xchg
xchg
mov
xor
clc
xchg
jl
pushaw
xor
mov
sbb
inc
sub
or
cli
inc
dec
and
bound
jo
add
imul
dec
sub
and
dec
negl
dec
inc
inc
dec
in
jecxz,pt
ret
inc
movsl
pop
je
rorb
mov
pop
or
pusha
adc
jnp
xchg
addb
or
fs
ljmp
mov
dec
aad
add
jmp
cwtl
hlt
and
jp
test
or
rol
add
insb
add
lea
and
mov
shll
test
lock
dec
arpl
dec
dec
add
push
push
inc
sbb
xor
fdivrs
sbb
push
mov
mov
clc
filds
cmp
inc
push
adc
dec
or
cs
sub
mov
add
mov
inc
scas
xor
dec
xor
in
loopne
int3
in
mov
out
es
mov
es
mov
jne
push
mov
adc
xchg
xchg
mov
pop
mov
mov
ss
cwtl
add
jae
fisubrl
adc
push
xchg
daa
mov
iret
inc
cmp
sub
and
xor
nop
bound
mov
cld
rcll
clc
inc
xchg
subb
mov
movsb
out
jo
xchg
stos
stc
mov
adc
flds
in
fcoms
insl
test
sbb
or
arpl
es
add
popa
dec
pop
shlb
sbb
add
cmp
fidivrs
fldl
adc
les
pop
imul
push
clc
cmc
iret
push
lods
mov
or
leave
dec
jno
pop
out
dec
sub
adc
scas
aaa
and
jno
push
loope
jns
jle
dec
inc
sbb
icebp
adc
sbb
inc
jno
les
push
lods
fldenv
push
ret
mov
jnp
xor
xchg
jbe
ret
mov
nop
js
das
mov
xchg
xor
in
and
dec
jmp
jo
testl
push
adc
inc
sti
cmpsl
std
pop
add
dec
sahf
add
or
or
add
cmp
push
push
lods
mov
push
call
or
outsl
lock
fdivs
add
int3
mov
fstps
popf
xchg
fcompl
inc
mov
test
adc
adc
cmp
bound
push
xchg
xor
ret
or
add
shll
in
lahf
mov
mov
or
add
add
xchg
xchg
std
push
pop
xchg
loopne
ja
sbb
inc
enter
icebp
jp
int
adc
cmp
jmp
push
push
or
bound
pop
out
mov
in
and
loopne
mov
pop
jo
mov
mov
xor
lods
mov
push
cmp
jg
push
insb
mov
pop
roll
lds
push
push
jnp
jno
push
cpuid
and
or
sbb
xchg
pop
sub
adc
movsb
enter
add
lock
or
lods
sub
inc
test
inc
inc
mov
mov
inc
xchg
addb
sbb
and
or
jp
mov
pushf
push
xchg
flds
mov
jle
ljmp
add
push
fsubl
mov
test
xorb
movsl
and
sub
sbb
mov
fnstsw
aas
out
fildl
mov
repnz
call
pop
insl
es
add
scas
jge
dec
insb
iret
xchg
jp
xor
aad
testl
and
mov
jg
and
scas
jno
aas
outsb
xor
icebp
movsb
inc
cltd
cmp
adc
push
lahf
mov
push
xor
fisubs
xor
push
mov
push
fs
or
push
pop
inc
loopne
and
popa
testb
push
jno
xlat
shl
and
aaa
fldenv
movsl
lods
pop
xchg
test
and
sub
inc
lcall
adc
adc
xor
xor
pop
shlb
in
out
ljmp
sub
xchg
dec
sbb
mov
fcoml
jo
sbb
jl
das
andb
movsb
mov
cmpsb
mov
ret
sub
sub
js
sub
pop
sub
sbb
push
xor
js
pushf
loopne
sbb
jmp
int
jp
jp
cmp
or
mov
and
jno
cmp
sub
cltd
jle
das
lcall
imul
into
ret
aas
sbb
push
add
loop
and
rorl
loopne
dec
js
jl
fwait
or
inc
cmp
xchg
fistps
out
jle
pop
cmp
or
lods
outsl
loopne
or
mov
movsb
fildl
adc
dec
add
jge
pop
mov
add
or
loopne
add
rcrl
aad
fsubs
add
fnstenv
and
or
imul
or
and
popf
push
repz
pop
ljmp
sti
in
test
mov
jmp
fnstcw
pop
add
push
push
aaa
imul
cmpsb
aaa
sbb
lods
mov
fstl
dec
test
aam
ret
pop
and
mov
xchg
iret
xchg
call
out
and
xchg
daa
or
int
adc
pop
pop
mov
push
in
iret
mov
xor
loop
xor
daa
adc
xchg
xchg
fcmovne
xor
push
movsb
xor
push
mov
mov
pop
sahf
shll
cltd
or
fmul
js
add
bound
jge
push
adc
bound
adc
push
das
stos
sbb
sti
xor
clc
int
dec
shrb
hlt
adc
leave
sub
and
jge
imulb
inc
push
and
mov
outsl
in
cmp
xchg
mov
cmpsl
dec
mov
enter
bound
int3
and
adc
fsubr
inc
xor
xor
push
jne
dec
mov
inc
xor
in
rcll
mov
sbb
xchg
pop
mov
mov
stos
xor
and
dec
push
jg
hlt
and
push
inc
mov
push
adc
sub
jl
nop
mov
add
push
or
mov
add
mov
cmc
adc
inc
inc
xorl
or
jmp
inc
je
cmp
into
xor
inc
ja
cld
jno
xchg
bound
adc
add
dec
add
ja
rorb
mov
ljmp
push
fisttps
fmuls
or
push
lahf
je
mov
out
and
ret
call
add
loop
fisttpl
mov
outsl
idivb
dec
pop
pop
push
dec
out
mov
jl
mov
cmp
sbb
pop
je
cwtl
inc
imul
lea
mov
jnp
or
push
adc
dec
subb
or
jae
iret
xchg
mov
call
sbb
bound
mov
out
sbb
xor
out
cld
push
inc
mov
fwait
test
daa
cmp
mov
fstpt
aaa
fcoml
mov
dec
push
jp
movsb
jg
and
push
sbb
or
mov
enter
sarb
mov
cltd
test
mov
push
icebp
mov
push
sbb
movsb
leave
sbb
popa
or
mov
dec
insl
xorl
sub
mov
sbb
or
ret
push
inc
lock
test
sub
xor
and
call
cli
dec
aad
mov
jge
push
das
stos
xor
or
sub
add
fildl
pop
jge
add
imul
jmp
mov
sub
lret
movsl
outsl
adc
adc
mov
call
push
jae
cmp
arpl
icebp
pop
sbb
mov
outsb
pop
test
push
inc
mov
inc
sbb
mov
xchg
and
pop
adc
adc
js
jno
mov
pop
gs
cmc
and
call
lods
add
lret
pop
jno
call
add
push
pop
loop
xor
jg
push
and
mov
sbb
lcall
pushf
pop
and
testl
test
stos
fstl
fisubl
shll
jb
lds
call
dec
push
adc
pop
mov
out
push
outsl
in
add
pop
addr16
test
in
mov
shl
jb
inc
aas
and
inc
adc
jo
push
mov
adc
add
push
pop
inc
cmp
pop
lahf
or
cmc
lret
pop
push
or
add
imul
mov
xchg
les
shrl
lcall
es
cmp
imul
pop
ret
jae
or
scas
jns
dec
mov
inc
or
in
adc
adcb
enter
push
jo
dec
jno
add
nop
jb
adc
loopne
lds
dec
andb
sahf
mov
jle
mov
add
mov
sbb
mov
adc
cwtl
add
enter
xchg
ret
lock
jmp
pop
adc
sub
pop
inc
rcl
sub
jns
mov
and
cltd
xchg
popf
mov
loop
or
add
shl
push
inc
jmp
nop
mov
jecxz
and
sub
xchg
ss
lods
add
jecxz
xchg
jp
loopne
inc
add
mov
mov
add
cmpsl
sub
sbb
pop
or
and
fidivs
inc
cmp
subb
arpl
pop
sub
xor
ret
push
inc
or
add
pop
push
test
cmc
pop
sbb
xchg
movsb
fldcw
sbb
lods
aam
in
adc
into
aaa
mov
popa
shrb
dec
cwtl
inc
cltd
xchg
in
addr16
inc
mov
or
xor
mov
dec
sahf
adc
adc
mov
pop
xchg
add
fsub
insb
or
testl
or
test
testl
jnp
out
adc
xchg
out
les
mov
sahf
xchg
loopne
pop
shrb
int
jno
and
xor
push
bound
inc
movsb
or
mov
les
jp
test
mov
add
fbstp
adc
cli
in
add
sahf
mov
jnp
or
insb
xor
es
ja
jle
adc
popa
dec
icebp
or
adcb
test
dec
or
push
adc
xor
outsl
push
stc
xchg
sub
daa
and
sti
pop
add
or
adcb
xlat
xor
repz
xchg
sub
ret
mov
or
aas
cld
adc
movsl
out
jbe
or
push
or
cmpsl
mov
jbe
imull
iret
out
add
test
ja
out
cli
dec
sub
mov
push
mov
dec
jg
fsin
test
mov
jbe
mov
add
fs
xchg
sbb
mov
out
pop
jbe
add
adc
inc
jb
out
sarl
dec
inc
or
mov
shll
sub
data16
popf
loopne
push
add
cmpsb
lret
fldenv
fidivrs
adc
mov
or
add
sub
dec
int3
aam
inc
loope
jge
andps
arpl
sbbb
add
sti
xor
repz
sub
mov
insb
hlt
jle
nop
add
outsl
push
cmpsl
add
mov
les
push
xor
add
popa
sub
add
leave
das
sbbb
and
sbb
lock
add
pop
enter
adc
ja
imul
cwtl
push
mov
mov
subl
dec
sbb
inc
hlt
mov
ljmp
mov
hlt
adc
add
fsubrs
lods
xchg
xor
movsb
and
mov
inc
mov
les
add
xchg
adc
jbe
loopne
mulb
jb
in
int
sbb
and
xlat
xchg
push
jl
sti
cmpsb
pop
sub
pop
xorb
stos
shlb
fildll
mov
aas
test
adc
sub
sub
in
xchg
test
repnz
mov
pop
ret
adc
icebp
ja
cld
cmp
ljmp
dec
aaa
and
dec
addl
xor
sub
jp
lock
mov
mov
leave
sbb
mov
stos
adc
pop
mov
dec
adc
loope
adc
int
or
out
mov
inc
adc
repnz
es
cwtl
dec
inc
or
sub
jp
cmp
push
jno
pusha
sub
mov
inc
hlt
cmpb
inc
inc
xchg
sbb
jo
adc
push
sbb
add
ret
sarl
jae
lcall
inc
sbb
push
or
pop
push
pop
sahf
pop
push
inc
mov
fstps
mov
push
mov
and
out
mov
nop
jns
pop
shl
and
mov
push
dec
rclb
subl
xchg
xor
call
jno
outsb
or
xchg
stos
fsts
pop
mov
movsl
push
sbb
jno
inc
and
or
imul
in
mov
inc
fcmovnu
inc
lock
jne
mov
andb
fsub
push
lock
andl
sub
push
sub
insl
sub
out
roll
ret
decb
lock
add
es
dec
and
fincstp
cmpb
lock
jo
pop
lock
cmp
data16
adcl
inc
lods
dec
jmp
add
xchg
or
hlt
sbb
mov
addr16
dec
sub
inc
mov
pop
dec
jmp
fcom
sbb
icebp
or
push
test
adc
fiaddl
jo
push
jmp
insl
push
inc
mov
aas
mov
daa
sahf
adc
sbb
lds
jbe
movsb
orb
pop
xchg
mov
mov
cmp
fcomps
or
test
lods
add
cmp
daa
push
xchg
inc
cmp
sti
xchg
movsb
push
mov
imul
sub
push
sbb
adc
push
je
mov
int3
cmp
pop
rcl
lds
clc
call
sbb
mov
pop
and
xchg
scas
xchg
movsb
sbb
ret
aaa
or
stos
jp
lock
outsl
inc
push
lret
lock
ja
daa
mov
addr16
cmp
inc
lock
shrb
jbe
loopne
push
sub
fistps
mov
pushf
dec
fcomps
aad
push
mov
rolb
mov
inc
mov
sub
add
push
mov
mov
inc
add
pop
cmp
aas
pusha
dec
fwait
jnp
int
and
pop
sbb
shlw
pop
xchg
cmc
fwait
or
xchg
mov
pop
rcll
rep
push
lods
pop
jno
add
popf
xlat
inc
dec
sub
jle,pn
rorb
test
int3
sbb
add
adc
adc
mov
jo
or
loope
adc
mov
mov
sbb
fdivs
add
push
jl
inc
sub
add
sub
adc
mov
push
adc
add
adc
xchg
pusha
inc
aam
and
mov
jmp
mov
into
notb
sbb
stos
sbb
xchg
cmpsb
imull
xchg
mov
mov
sbb
inc
mov
adc
add
mov
lcall
add
adc
add
sti
test
and
loopne
sub
jae
pop
push
aaa
sbb
push
add
rolb
cs
into
xor
adcb
add
mov
add
xor
and
sbbb
roll
or
movsb
xchg
adc
es
adc
push
and
popf
loop
addl
lods
jmp
add
pop
das
pop
sbb
jne
xorb
in
mov
or
fimuls
outsb
xor
insl
mov
or
mov
int
and
aaa
stc
in
ficoms
and
sbb
jmp
lds
lock
cld
stos
out
xor
mov
nop
outsb
movsl
mov
push
add
loop
xor
pop
cs
loopne
sbb
das
sub
test
pushf
mov
lea
mov
cld
mov
repz
jge
rolb
loop
movsb
rcl
push
andl
cwtl
shlb
and
jo
iret
cmp
xchg
sub
pop
shl
adc
xchg
mov
rcr
push
adc
xchg
add
fisubs
loop
sub
repz
push
sub
inc
xor
sub
bound
cmp
pop
mov
and
pop
cwtl
add
mov
push
xor
or
jno
mov
hlt
dec
lcall
or
mov
into
es
daa
cmc
adc
test
pop
jle
les
push
andl
add
fbld
movsl
sub
and
jmp
fstps
int3
js
xlat
jo
adc
lock
shr
mov
inc
imul
inc
rcl
xchg
imul
sub
lock
adc
lret
out
int3
push
sub
dec
inc
arpl
mov
inc
pop
popa
sub
push
sarb
mov
inc
cmpb
push
repnz
ja
push
pop
jmp
jle
mov
out
jl
loop
push
or
adc
add
jno
add
out
or
push
pop
mov
add
adc
fs
xchg
stos
stos
mov
add
stc
push
push
sbb
sub
outsb
test
xorl
mov
in
pushf
or
pop
daa
dec
bound
fbld
rclb
inc
or
les
pop
xor
xor
pop
cmc
les
pushf
cmp
mov
test
sbb
loope
shll
divb
idiv
mov
jo
add
pop
or
inc
lds
mov
fistl
push
or
sub
cwtl
push
push
sbbl
ja
or
push
aaa
pushf
sbb
mov
inc
insl
jl
add
cmp
imul
add
inc
lock
cwtl
push
add
insl
aas
loopne
icebp
movsb
jne
in
test
imul
shlb
mov
xchg
pushf
mov
dec
out
loope
add
add
sub
pop
ljmp
rcll
js
xor
sub
pop
mov
movsl
mov
cmp
fcoms
rolb
mov
pusha
pushf
loope
dec
dec
shrl
and
xlat
das
js
sub
pusha
push
mov
mov
repz
push
js
in
lret
push
lock
adc
dec
xchg
dec
xor
or
inc
pushl
nop
or
mov
mov
aad
pushf
sbbb
dec
icebp
lods
dec
inc
movsl
out
mov
add
push
imul
loop
add
or
gs
add
mov
movsb
mov
repz
inc
shlb
mov
xor
or
add
or
mov
xor
add
pop
jns
fbld
pop
xchg
in
mov
pop
xor
jo
std
sbb
outsl
clc
and
ret
sub
jnp
jo
or
add
in
add
mov
fdivs
mov
mov
lret
xchg
jb
out
lods
lock
add
jo
cli
xor
jne
add
cmp
stos
pop
mov
cmp
lcall
pop
fimull
xlat
movsb
dec
out
pop
and
adc
push
cmpsb
pop
push
adc
and
lahf
add
inc
sub
adc
adc
jmp
repnz
addb
out
and
shll
in
jecxz
inc
add
test
push
inc
pop
roll
inc
mov
lods
inc
and
out
inc
mov
test
test
and
call
jo
mov
mov
fcomps
inc
xor
mov
jno
sub
sub
jle
lods
ljmp
ret
int
xor
enter
addr16
cmpsb
sahf
adc
dec
push
sbb
cmpsb
cmp
ss
lfs
mov
adc
dec
jge
lret
jo
pop
dec
enter
out
sbb
fwait
mov
daa
pop
add
push
mov
sub
or
add
mov
or
or
sbb
cltd
mov
jno
shll
mov
adc
push
add
je
push
xchg
aaa
inc
xor
xlat
jns
pusha
popf
add
jno
sbb
inc
inc
ret
cmpb
and
inc
jo
push
fs
movsl
or
shlb
andb
int3
or
loope
sub
adc
adc
mov
test
xor
icebp
pop
xorb
pop
lahf
rclb
xchg
sbb
sub
cmp
push
sbb
fsts
pusha
push
addb
cwtl
mov
or
push
xor
pop
inc
push
xor
adc
add
and
sub
call
xor
and
add
add
adc
aam
fs
ret
sbb
ds
andb
mov
xor
sbb
rcrb
mov
pop
les
call
adc
mov
adc
cmp
call
in
pusha
lds
xor
and
cmpsb
mov
or
push
and
sub
pop
inc
or
out
cmpsb
inc
inc
mov
aas
int
mov
xchg
and
push
and
or
je
dec
pop
pop
inc
fnstsw
aaa
ret
aam
loope
push
xchg
adc
pusha
add
loopne
adc
loopne
movsl
je
inc
aad
xchg
pop
mov
adc
dec
sub
jae
out
and
cmp
cmp
das
mull
xor
jge
mov
das
or
or
push
inc
das
cmp
push
das
mov
daa
outsb
add
push
mov
sub
jmp
pop
aaa
iret
xor
outsl
inc
adc
add
sub
mov
lods
in
movsl
movsb
fists
insl
adc
iret
sbb
cld
push
or
inc
aam
or
sub
loope
sub
movb
aas
out
scas
add
mov
push
inc
jbe
cmp
jne
mov
xor
sub
aam
rcrb
outsl
mov
cltd
in
xor
fsubrs
adc
lods
mov
pop
jl
loopne
mov
jl
orl
jp
hlt
jo
mov
xor
aaa
add
jb
cmp
inc
push
popa
add
bound
or
mov
stc
js
jp
leave
xor
add
cmc
push
xor
sub
loope
add
icebp
adc
jo
outsb
add
cmp
shll
mov
xor
jmp
and
adc
cmp
cmp
out
lods
xor
hlt
mov
stos
sub
shlb
push
xor
fdivl
cs
fbld
cwtl
in
in
cmp
add
lods
insl
push
ffreep
add
or
in
mov
das
frstor
or
xlat
ret
jbe
ja
je
jmp
cmp
xchg
or
mov
mov
cli
adc
in
loopnew
mov
inc
fdivrl
fs
mov
push
ret
mov
cmp
mov
or
ja
int
add
xchg
fwait
cltd
ljmp
push
inc
dec
sub
jl
cmp
pop
cmp
mov
pop
lock
lea
stos
jecxz
es
and
adc
ds
xlat
cmp
sbb
pusha
andb
repz
cmp
xor
cmp
add
ret
es
jle
orb
fistps
mov
xchg
mov
jg
aad
push
popf
sbb
xchg
test
nop
out
je
adc
pop
ret
add
pop
adc
jg
outsl
sub
in
lods
mov
mov
cmpsb
adc
jle
jecxz
daa
or
xchg
add
xchg
mov
push
add
fucomip
mov
dec
jbe
ret
jle
adc
inc
mov
inc
xor
inc
push
mov
iret
jl
ljmp
mov
dec
or
and
inc
xorl
ljmp
pop
or
leave
adc
add
addb
loope
cld
sbb
or
and
jne
or
adc
and
mov
sub
rorl
xchg
and
sub
and
mov
inc
ret
mov
int
sub
cmp
pop
add
lock
rcr
sbb
sbb
pop
enter
inc
inc
ja
adc
cmpsb
rcll
aaa
ud1
inc
ret
rep
adc
jne
pop
daa
and
xchg
pop
imul
push
inc
stos
pop
es
scas
adc
pop
popa
pop
cmp
add
adc
int
and
inc
and
push
xchg
aaa
add
and
inc
or
dec
dec
loope
and
ljmp
lret
push
xchg
adc
dec
sub
sbb
add
cmpl
sbb
inc
shr
ss
jp
pop
mov
sbb
ja
xchg
addl
sbb
test
dec
or
add
adc
lea
in
shr
and
mov
xchg
inc
mov
inc
cmc
pop
addr16
addr16
xchg
mov
clc
adc
or
xorl
push
xchg
or
inc
sub
pusha
data16
sbb
cmc
call
push
add
push
cld
and
mov
fisttpl
scas
das
fimull
fsts
andb
mov
int3
bound
mov
or
scas
sub
cmp
shrl
enter
lcall
sub
jl
rcrb
adcb
shr
adc
jle
cmpsb
stos
mov
add
into
insl
inc
xor
xor
mov
inc
hlt
jo
sub
shrb
iret
cwtl
inc
and
in
pop
rcrl
xchg
stos
mov
mov
scas
aas
lods
sub
push
lds
dec
stos
or
ret
imul
lock
xor
push
add
lret
dec
cmp
or
scas
xor
lods
test
clc
add
jno
inc
mov
sub
aas
cmpsb
and
mov
push
wbinvd
ret
adc
andb
push
fldl
mov
repz
lods
imul
xchg
push
clc
ret
or
loop
es
gs
inc
outsl
inc
fdivs
in
jp
pop
inc
and
jbe
adc
pop
add
andb
or
add
ret
sbb
insb
sbb
xor
or
mov
lea
data16
inc
sub
sub
xchg
and
cwtl
js
jo
adc
cmpsl
cmp
js
sbb
cwtl
movsb
stos
repnz
sahf
or
js
jmp
push
and
clc
jbe
sbbb
xor
add
and
cmc
push
rcrb
mov
scas
sbb
mov
jo
inc
pop
or
dec
xchg
testb
xchg
lret
inc
rclb
icebp
xchg
sub
or
push
xchg
mov
ss
mov
pop
out
add
out
mov
add
sahf
and
xor
sbb
fs
insl
aam
in
jae
test
push
cmp
js
xchg
pop
inc
es
daa
or
je
clc
mov
outsl
jg
mov
inc
lcall
add
inc
pop
cmp
sub
xor
sub
pop
loope
pusha
sbb
jecxz
nop
mov
inc
test
fsubs
push
sub
fldl
mov
sahf
push
or
add
stos
pop
outsb
inc
cmp
sbb
mov
mov
dec
mov
sub
mov
jge
add
mov
scas
inc
add
push
dec
inc
xor
cwtl
push
cmpsb
aaa
and
pop
lret
pusha
inc
jmp
inc
sub
pop
sub
es
rep
cmp
dec
push
xor
js
mov
mov
nop
out
mov
cmovge
loopne
and
adc
inc
add
push
popa
out
or
or
movl
jo
jne
push
or
enter
xchg
stos
or
push
inc
sbb
adc
stos
aas
pop
lods
das
insl
add
sub
adcb
insb
js
mov
add
jo
pop
xor
mov
mov
mov
cs
xor
inc
aad
mov
popa
push
in
shlb
jb
cmp
adc
sti
xchg
sub
pop
add
fwait
inc
cmc
jo
outsl
add
mov
into
or
and
fwait
imul
or
fnstcw
pop
outsb
iret
nop
adc
rcrl
adc
movsb
dec
jecxz
rorl
push
xor
lds
dec
inc
xchg
xchg
add
insb
aam
shlb
and
ljmp
pop
arpl
mov
faddl
cs
cmpb
dec
mov
lcall
sub
push
add
jle
push
cmp
jl
sub
xchg
adcl
mov
pop
clc
add
aaa
loope
xchg
cmpsl
inc
mov
mov
sarl
xor
push
mov
dec
enter
jle
aaa
sub
sar
mov
pop
cmp
stos
roll
sbb
mov
adc
sbb
lcall
subb
sub
add
test
dec
mov
fists
and
inc
or
adc
mov
xchg
pop
mov
push
pop
in
push
cmc
sub
andl
mov
adc
pop
inc
or
push
sqrtps
xor
rorl
add
pop
mov
mov
dec
mov
sbb
test
jb
push
adcl
rclb
add
idivb
sub
in
mov
js
push
sub
outsl
aaa
mov
or
dec
xor
aam
lods
or
fldcw
add
inc
xchg
sub
and
jb
mov
addr16
mov
cs
xor
adc
adc
or
sub
xor
imul
std
mov
js
xor
enterw
std
mov
lock
or
xor
arpl
lods
mov
and
xor
inc
sbb
sub
adc
sti
and
and
mov
fst
jnp
or
lcall
ljmp
movsb
dec
les
pop
mov
dec
ret
outsb
push
inc
sbb
adcl
jl
mov
and
jge
or
lret
xchg
mov
sarl
push
cwtl
or
lods
addr16
test
ret
lahf
inc
jne
push
sbb
xor
test
adc
es
icebp
ret
ja
mov
add
and
adc
xor
push
push
pop
sub
sbb
insl
loop
rorl
in
fbld
mov
mov
add
dec
xchg
ljmp
adc
add
mov
and
cmp
cmpsl
pusha
push
loope
je
inc
adc
xor
mov
into
sub
lret
push
std
cmp
add
pushf
sub
and
inc
push
jmp
cs
pop
loop
std
add
push
dec
mov
aas
push
and
inc
and
jne
test
pop
add
mov
or
int3
mov
push
inc
cmp
ss
and
jp
nop
test
jne
sbb
adc
inc
repnz
jp
orb
push
cmp
add
jnp
add
rclb
push
in
add
mov
jle
jbe
mov
pop
pop
loope
dec
lahf
xor
test
xlat
sbb
push
leave
push
xlat
lret
cwtl
push
lods
add
fsubs
xor
sbb
mov
mov
mov
jecxz
ljmp
and
fidivrl
pop
sub
sbb
clc
xor
and
cmp
in
mov
cwtl
and
push
bound
fnstenv
aaa
xchg
sysret
and
add
dec
mov
mov
sbb
and
pop
loope
sbb
jle
adc
and
and
pusha
dec
add
adc
iret
cmc
popa
shlb
and
int3
es
xor
js
jo
cltd
iret
pop
fisubl
je
shl
and
dec
and
cmpl
ud2
stos
or
inc
or
adc
jne
xchg
jle
jle
aaa
or
mov
jnp
mov
fidivrs
adc
add
adc
mov
cmp
aam
dec
pop
lea
insl
roll
fs
ret
add
cmp
and
je
adc
insl
pop
mov
test
cwtl
inc
addr16
xchg
push
push
xchg
add
and
incb
orb
jne
sbb
es
xor
xor
jge
into
andb
xlat
aaa
aas
xchg
icebp
loope
fdivr
popf
es
add
sub
mov
sub
fcmovnbe
inc
int
adc
add
mov
cmp
xchg
ja
fwait
push
push
test
dec
out
sbb
sub
popl
ja
je
sbb
sbbb
inc
orb
sbb
lcall
pop
mov
in
rcr
jecxz
jle
loop
ret
xor
pop
lds
sbb
lret
addl
lock
shll
add
stos
mov
pusha
mov
data16
mov
mov
aaa
cmpsl
mov
cmp
adc
fwait
lret
lret
outsl
ret
inc
daa
iret
pushf
out
inc
add
push
loopne
push
and
or
add
test
popa
scas
push
push
push
adc
mov
lcall
adc
or
shll
sub
scas
nop
ret
jo
jb
jo
rorl
sub
dec
imul
push
sub
dec
in
cmp
push
push
cmp
jle
xchg
sbb
lahf
mov
das
rcr
dec
pop
xor
addr16
add
lods
mov
and
cmp
fcoms
and
lock
lds
sbb
js
xlat
jne
mov
xchg
mov
xchg
ja
add
pop
cmpsb
mov
push
mov
call
roll
dec
std
or
sub
das
fisttpl
fimull
ret
fwait
lcall
cltd
stos
fwait
push
pop
mov
pushf
sub
fwait
test
lcall
sahf
daa
add
ja
mov
negl
xlat
loopne
jecxz
sbbl
popf
jmp
add
lock
test
popf
ficoms
cmp
mov
es
cmp
adc
lahf
les
mov
dec
jp
fmuls
test
pushf
xor
add
leave
pushf
lahf
and
outsb
inc
sub
sub
xchg
xchg
ret
in
sbb
add
in
daa
xchg
iret
inc
or
jge
ss
mov
adc
pusha
aam
aaa
imul
xor
shr
cmp
mov
mov
xchg
loopne
ss
push
outsb
cwtl
and
fwait
outsl
movsl
ljmp
adcl
and
sbb
sti
data16
pop
leave
jo
push
jbe
push
dec
stos
jnp
jmp
add
ljmp
pop
inc
icebp
dec
adc
cmpsb
add
jp
or
fstpt
sbb
push
pop
stos
mov
cmp
int
push
cmp
mov
dec
testb
or
or
push
or
or
add
sbb
stos
dec
fcoms
xchg
ja
adc
add
fwait
add
frstor
sbb
lock
insb
lcall
shll
gs
sbb
mov
fidivs
jne
aaa
mov
hlt
and
stos
sar
add
aad
lods
mov
outsl
adc
aas
data16
xor
enter
sbb
mov
es
sbb
mov
inc
mov
testb
ss
push
les
clc
dec
fistpll
daa
jg
mov
add
pushf
cmp
cli
stc
notb
dec
mov
iret
mov
push
inc
out
dec
cmp
in
movsb
sub
fmuls
outsl
js
or
mov
pinsrw
testl
ja
add
addr16
jl
int3
cmp
cltd
insl
jbe
push
insl
push
push
arpl
out
lahf
mov
and
inc
and
push
jl
cmp
data16
bound
out
mov
cmp
or
dec
shll
cmc
pushf
out
jnp
insb
daa
pop
mov
loope
iret
andl
test
jecxz
scas
push
lods
cmpsl
sbb
or
lock
out
sbb
aad
pop
rcl
pop
fldl
jne
add
pop
pop
out
sbb
sbb
test
pop
cltd
idivl
push
sub
test
xchg
ss
jle
sub
sub
incl
stos
pop
rorb
dec
mov
aaa
orb
or
loopne
loop
cmp
idiv
jp
xor
jnp
dec
scas
ja
cmp
jle
icebp
sub
jp
jge
shll
jo
pop
das
lds
in
add
xchg
shr
inc
sub
mov
push
jmp
pop
popa
add
xor
xor
add
push
into
mov
ja
mov
clc
lods
cltd
cmp
setno
xor
ss
ja
pop
movsb
pop
push
add
mov
xchg
adc
js
xchg
push
sub
jns
pop
insl
inc
les
dec
into
ja
push
and
je
push
xor
mov
push
repnz
loope
pop
add
xor
out
lcall
jl
sub
in
rcl
hlt
in
jo
aaa
iret
push
ficompl
add
jl
add
bound
or
test
and
pop
adc
loopne
int3
jp
mov
lods
inc
or
mulb
sbb
movsb
inc
fimull
jp
mov
inc
or
and
bound
fcmovbe
add
push
inc
mov
pushf
bound
pop
icebp
es
pusha
add
and
mov
mov
inc
add
jp
mov
lods
idivb
clc
sub
sbb
dec
jne
jnp
xor
fldenv
ret
shrl
adc
mov
jno
mov
addr16
jg
mov
lea
pop
aam
jbe
pop
test
repnz
mov
mov
jge
lock
loop
push
cmp
or
push
sarb
or
xchg
dec
popf
xchg
stos
dec
push
jne
pop
vmovntps
and
pop
mov
or
fsubrs
xchg
jo
in
bound
std
pop
fsubrs
adc
and
sub
fisttpll
push
stos
dec
scas
sbb
das
rcrb
xchg
aad
int3
sub
sub
add
popf
hlt
mov
std
and
jo
hlt
xlat
and
shl
adc
and
jb
adc
arpl
movl
insl
sarl
popl
inc
aam
xchg
adc
adc
stos
daa
pop
xchg
in
icebp
pop
mov
sub
push
insl
iret
pop
push
sbb
pusha
sub
add
xchg
cld
mov
cs
outsl
xchg
imul
inc
mov
mov
das
call
sbb
jno
push
and
sbb
inc
inc
jle
popf
or
dec
mov
scas
jae
and
add
or
clc
jp
push
jns
or
cld
mov
enter
mov
cmp
out
push
scas
inc
xor
or
fsubp
inc
ja
dec
push
sbb
sub
cmp
cmp
out
pushw
cmp
lds
inc
out
sub
cmp
cmp
jb
xlat
add
outsl
fldenv
push
outsl
negl
jnp
jbe
out
adc
es
pop
scas
push
sbb
fiaddl
leave
and
xor
mov
sbb
lods
jne
arpl
sbb
mov
pop
adc
pop
and
sahf
cmpl
into
mov
aas
jnp
jns
or
fcomps
pop
rcr
rcrb
lds
mov
imul
or
movsl
scas
mull
or
inc
movsl
and
ds
pop
mov
das
inc
push
addr16
mov
popa
jae
dec
xchg
pop
aaa
adc
xchg
iret
lahf
into
fwait
jbe
inc
push
lock
jmp
pop
cmp
adc
inc
into
adc
fnstenv
fnstenv
movsl
lahf
fld
pop
test
inc
mov
mov
aaa
out
adc
scas
add
jp
adc
push
lods
loope
sti
mov
sub
jmp
xlat
outsl
in
cmp
mov
mov
in
cs
xchg
cltd
fildll
ret
jecxz
xor
add
out
adc
ss
cltd
fbld
xor
pop
rorb
mov
cmp
jmp
sub
leave
out
or
out
scas
aam
shrb
xchg
das
pop
jecxz
jl
or
pop
iret
sti
xor
adc
iret
push
jle
fnstenv
inc
xchg
adc
add
push
inc
fwait
mov
mov
push
outsl
dec
xor
aad
dec
cmpsl
and
mov
insl
ret
sbb
jge
mov
xchg
cmp
or
es
outsb
insl
mov
in
add
add
aad
xor
out
aaa
faddp
fmull
scas
adc
push
in
scas
ret
xchg
into
and
fwait
xor
sbb
insb
pop
xchg
push
add
mov
push
andl
xchg
sub
inc
inc
xchg
sbb
lret
dec
in
mov
push
es
daa
mov
fisubl
jnp
add
data16
repnz
inc
add
adc
mov
out
rclb
pop
xchg
jns
inc
push
into
cmp
add
xor
roll
xchg
push
neg
sub
bound
push
xor
sub
pop
cmpsb
add
and
adc
in
pop
outsb
mulb
xor
mov
add
pop
pushf
jecxz
or
mov
sub
lret
xadd
sbb
xchg
cmc
sub
notl
adc
cmpsb
xbegin
fs
jg
inc
sbb
movsl
sti
dec
lahf
dec
adc
push
xor
sub
outsb
cmp
add
fwait
int
jecxz
loope
cmp
cmp
lahf
jnp
ss
xchg
push
push
fcom
jbe
sbb
fs
fnstcw
mov
ds
xor
xlat
jp
cmp
jg
add
add
adc
sbb
pop
push
mov
flds
xor
in
je
or
addl
adc
mov
add
cmc
push
in
ret
ret
stos
call
inc
in
dec
das
and
sub
jecxz
sbb
popf
cs
cmp
add
xchg
pop
lods
mul
popa
inc
cmp
add
inc
sti
pop
add
xlat
sub
out
mov
lds
xchg
lods
sbb
push
gs
add
jmp
das
pop
int3
jb
icebp
xlat
repnz
cmpb
inc
mov
and
mov
into
das
sbb
repz
das
fnstenv
nop
jecxz
bnd
push
outsb
in
outsl
adc
sahf
pop
dec
push
push
adc
dec
dec
test
sbb
dec
jae
pop
insb
movsl
sbb
pop
inc
pop
outsb
xor
jno
addr16
push
insb
mov
add
sub
jns
inc
popf
arpl
ds
insl
das
adc
mov
mov
cmp
mov
je
scas
push
scas
cltd
inc
test
je
call
pusha
dec
push
mov
sbb
int
mov
out
test
mov
inc
pop
fwait
xchg
insb
inc
andb
int
outsb
fldenv
ss
daa
adc
inc
cmp
aam
out
push
sub
lahf
cmpsl
mov
fmull
fstl
sbb
testl
aam
lods
mov
sbb
dec
imul
cli
and
and
push
into
xor
int
addr16
sbb
cmp
mov
cmpsb
outsl
adc
sub
aam
push
ss
cld
mov
adc
sbb
lods
xlat
mov
pop
fidivl
cmc
out
leave
push
into
xchg
sub
lcall
sub
out
sbb
ljmp
cmc
les
les
cwtl
jo
add
xlat
sbb
or
jecxz
dec
js
into
cmc
stc
in
and
mov
out
xchg
loopne
hlt
xor
fiadds
repz
in
mov
mov
lret
ret
xchg
mov
stc
inc
popf
fs
push
jg,pt
outsb
adc
mov
pusha
fdiv
push
adc
inc
inc
cmp
dec
sbb
mov
inc
iret
out
popa
pop
mov
andl
arpl
mov
sub
adc
cwtl
push
jmp
lahf
inc
insb
insb
mov
pop
xchg
push
inc
ds
lret
push
mov
sti
pop
fwait
movsb
pushw
addr16
inc
mov
inc
dec
and
xchg
jge
cmpsl
outsl
xchg
push
inc
out
movsl
outsb
sahf
and
mov
mov
or
inc
xor
jp
addr16
test
ja
inc
lahf
pop
push
fdivrl
shrb
scas
jmp
movsb
out
stos
dec
pop
xor
adc
xlat
dec
aaa
or
push
sti
sahf
or
lahf
scas
lahf
jb
xor
xlat
inc
pop
andps
inc
mov
xchg
lea
xlat
or
enter
subl
sarb
fstpt
push
inc
pop
icebp
sbb
pop
add
jmp
mov
and
out
outsl
pop
mov
mov
lahf
rorb
ret
mov
and
out
pop
xchg
fwait
pusha
test
leave
loop
insb
outsl
rorb
lahf
neg
out
mov
outsl
test
sub
sub
stc
in
pop
or
int
xchg
cmp
pop
dec
push
lahf
lahf
jp
lea
ljmp
cli
dec
push
cmpsl
repnz
mov
jae
rcrb
push
mov
int
dec
enter
in
outsl
lods
pop
sbb
enter
bound
into
jecxz
sub
and
pop
fxch
mov
inc
adc
cwtl
or
andl
jnp
test
leave
mov
jp
daa
sub
into
xchg
and
or
jge
in
push
mov
xor
popa
or
ret
mov
and
and
sbb
gs
sbb
pop
add
call
jo
popa
add
lahf
push
mov
mov
or
inc
or
out
imul
and
cmp
ds
jmp
push
mov
jmp
push
les
mov
or
or
cmp
sbb
mov
daa
sub
aaa
jbe
daa
add
push
cmp
addr16
dec
addr16
add
into
xlat
rcrb
pop
sti
pop
enter
data16
sbb
addr16
mov
or
pop
inc
push
pop
insl
jno
aaa
dec
or
mov
out
add
push
cmp
xor
mov
arpl
loope
push
xchg
add
mov
xchg
mov
mov
dec
xlat
push
add
fsubs
pushf
lock
push
aaa
pop
or
or
cmp
dec
or
or
adc
cmpsl
and
fstpt
add
adc
sbb
jecxz
aaa
xchg
pusha
mov
fiadds
test
adc
adc
add
sub
popf
jl
lcall
xlat
shll
movsl
into
sbb
or
movsb
mov
sarb
shll
stos
add
outsb
loopne
inc
inc
mov
lcall
jne
jbe
pop
push
xchg
add
fiaddl
push
mov
insl
xlat
mov
movsb
mov
imul
sbbb
inc
push
mov
clc
pop
mov
jbe
add
fnsave
jne
icebp
or
rcl
int3
add
lods
pop
enter
repnz
jge
clc
mov
leave
sbb
mov
sub
add
test
cmp
pop
inc
mov
shlb
inc
mov
mov
cwtl
jge
mov
dec
out
pop
add
mov
mov
in
arpl
div
or
adc
inc
mov
mov
jbe
pop
push
xchg
fisubs
imul
and
scas
mov
rorl
call
lret
addl
dec
sub
shll
mov
in
xlat
mov
subb
fxch
data16
into
inc
addl
lret
pop
jbe
pusha
ficoms
cmp
push
pusha
sub
or
in
outsb
jecxz
test
sahf
repz
or
mov
xor
ja
int3
aam
stos
test
adc
push
sbb
mov
jle
mov
xor
jecxz
std
cmp
mov
push
jne
jmp
cmp
sub
stc
xchg
hlt
jmp
in
inc
cmp
and
ret
add
xchg
test
outsb
js
xor
push
or
add
insl
cwtl
cmp
mov
dec
rol
sbb
hlt
cmpsb
push
mov
push
icebp
inc
shll
fildl
mov
fcomps
xor
sub
mov
outsl
mov
je
mov
fdivs
pop
and
mov
jb
mov
movsl
pop
imul
ds
in
xor
dec
mov
cs
sbb
dec
add
add
cmp
test
mov
xchg
inc
dec
jnp
mov
mov
add
sub
rolb
lret
adc
mov
test
ret
mov
inc
mov
repnz
mov
mov
xchg
pop
pop
mov
jge
fdivr
cli
or
test
inc
dec
sub
cltd
mov
shrb
jge
ja
add
lds
sbb
fiadds
and
jecxz
stos
xor
paddsw
cs
pop
adc
jmp
fst
jne
jp
roll
rdtsc
add
loopne
je
sti
jne
into
ffree
pop
push
hlt
and
mov
fwait
js
sub
aad
push
dec
test
cmpl
push
pop
movsl
mov
dec
cltd
inc
roll
int3
dec
pop
lea
sub
stc
bound
push
xor
mov
mov
mov
xlat
cmc
pshufw
lret
xor
ficomps
inc
cmp
mov
int
cmp
or
add
sub
leave
loopne
pop
cld
add
push
push
out
mov
in
dec
aad
mov
sub
rorl
ret
and
mov
loopne
push
in
jle
cmp
xor
repz
fildll
fdivrl
push
js
call
dec
outsb
addr16
push
inc
imul
out
mov
mov
or
add
arpl
mov
mov
jmp
fst
push
adc
push
enter
add
sbb
mov
imulb
jmp
popf
add
mov
mov
outsb
test
dec
push
rorl
insb
and
cmp
shll
fsubrs
out
mov
lea
mov
mov
or
and
mov
xor
cmc
imul
mov
lea
xchg
sti
subb
arpl
mov
mov
cli
int3
outsb
rcll
mov
jnp
cmp
dec
pop
rcl
ss
out
fdivs
dec
ret
fs
pop
fwait
jmp
pop
mov
or
sbb
out
push
cmp
nop
sbb
push
cmpsb
cld
push
aas
push
insl
mov
out
pop
mov
es
adc
ret
test
out
push
lds
dec
adc
or
push
jns
pop
out
mov
aad
xchg
fisttps
iret
lret
pusha
orl
or
aam
movsl
fnsave
push
push
inc
rclb
imul
inc
fistpl
orl
in
push
fcmovnbe
mov
mov
outsb
scas
mov
push
mov
es
les
std
add
jns
loopne
in
imulb
jnp
ljmp
in
ljmp
test
sub
rcl
hlt
xchg
and
cmp
repnz
pop
shll
xor
rcll
xor
xor
ret
push
mov
xor
jbe
mov
outsl
stos
xchg
pop
jecxz
pusha
test
and
fsubrs
mov
sbb
int3
lods
mov
mov
and
sub
sbb
and
mov
sti
cs
or
nop
push
das
inc
idivl
mov
es
mov
pusha
imul
imul
or
insl
inc
push
lea
add
scas
test
insl
sub
push
pop
loop
loope
es
pop
mov
fstps
mov
fildl
xor
ret
inc
ss
jbe
fnsave
data16
int3
sahf
push
mov
mov
fldl
enter
or
sbb
out
cmp
mov
nop
jns
out
mov
push
mov
or
sti
je
jg
cli
mov
mov
mov
repnz
pop
insl
fldt
xchg
mov
mov
jl
scas
or
xor
test
push
es
je
jl
sub
push
mov
es
and
xchg
sbb
xchg
negl
sbb
jne
push
inc
sbb
push
outsb
xor
cmp
adc
pop
mov
mov
ucomiss
into
call
out
jo
add
imul
les
arpl
cs
sar
test
imul
cld
out
xor
ret
push
mov
out
test
jo
push
test
pop
mov
xchg
lcall
out
shl
jp
mov
jl
sub
insl
xchg
sbb
mov
lcall
cs
fstpl
jl
int
in
insl
mov
xorb
xlat
inc
sbb
mov
mov
and
cmpsl
fidivl
pusha
insb
in
pop
mov
pop
mov
jns
lock
lock
fnstenv
test
or
pop
add
sbb
jbe
add
mov
cmp
fstpt
pop
mov
or
inc
sti
ljmp
aam
in
pop
call
fdivrl
xor
cmc
lcall
stc
pop
imul
mov
in
cmp
mov
lahf
fbstp
xor
add
inc
add
jmp
push
xchg
je
popa
imul
aad
pushf
rorb
xchg
lds
outsl
je
jmp
add
mov
mov
cmp
test
in
imul
xor
and
push
mov
push
sbb
out
loope
sub
adc
inc
xor
sub
lds
fbstp
adc
cltd
lret
test
adc
lods
mov
mov
sbb
ds
sub
sbb
sbb
incb
push
imul
push
or
fcomps
inc
pop
fldl
mov
push
fadd
sar
add
pusha
stc
adc
mov
sub
lret
outsl
mov
aam
xor
or
sbb
dec
xchg
xor
pop
das
or
dec
lret
lahf
fcoml
test
dec
add
mov
loope
mov
push
leave
enter
pop
js
push
pop
aam
jecxz
cmp
icebp
insl
inc
sub
lcall
sub
pop
dec
aas
int3
test
repz
dec
sar
xchg
call
or
les
sub
ret
les
stos
aam
daa
arpl
pop
and
mov
mov
mov
adc
fisubrs
mov
fildl
mov
cmp
pop
push
mov
daa
cmp
out
or
outsl
stos
jne
push
mov
adc
xchg
sub
test
andl
lods
xor
ljmp
adc
push
test
cs
jno
scas
sbb
adc
pushl
add
js
cmpsb
add
scas
mov
push
jecxz
push
push
inc
xor
jo
inc
pop
jp
int3
test
ret
cmp
adc
mov
sbb
ljmp
scas
insl
les
mov
or
inc
dec
fs
jmp
shlb
inc
mov
pop
int3
in
imul
fstpl
jo
jl
lds
repz
inc
mov
mov
sbb
outsb
sbb
popf
cmpsl
fs
mov
loop
in
pop
ret
sbb
stc
mov
outsl
push
sarb
pop
fstpt
xchg
cmp
ret
stos
mov
pop
add
sub
mov
fcomp
mov
out
lods
jne
insl
mov
andl
add
push
icebp
add
pop
or
adc
insl
sub
jno
pop
and
ret
mov
cmp
xor
loope
sub
repnz
cld
ficompl
sub
adc
jmp
ss
cs
sbb
fcmovnu
xor
ds
movsl
das
mov
cmp
stos
arpl
pop
or
add
arpl
xchg
and
sub
inc
into
cltd
insl
xchg
mov
roll
mov
xchg
and
repz
xchg
fidivs
in
mov
ret
xchg
lods
pop
push
pop
shrb
sub
or
sub
mov
icebp
mov
pop
inc
pslld
pop
dec
cmp
sub
cmp
jnp
lods
sahf
push
push
nop
sub
xchg
insb
cmp
out
ffree
inc
xchg
pop
jecxz
rcll
adc
add
jb
mov
or
sub
jmp
popf
cli
xchg
sbb
lods
nop
inc
sbb
inc
ss
sub
sbb
insl
xor
loop
in
sub
aas
ds
sbb
leave
mov
je
jns
adc
jae
popa
sbb
adc
andl
test
sub
pop
pop
lods
xchg
mov
loope
int3
das
fldl
and
and
int3
jle
push
movsb
cmp
mov
in
jg
in
ss
jbe
xchg
pop
bound
mov
mov
orl
adc
mov
pop
and
fcoms
or
dec
outsl
or
adc
int3
xorb
sub
inc
mov
out
adc
stc
sub
xlat
xchg
aad
cmp
cmp
jno
xchg
ljmp
sbb
addr16
sub
add
mov
call
and
adc
cmp
jecxz
test
fisubrs
loope
ss
inc
fstl
xorl
mov
gs
xchg
sbb
xchg
fstpl
push
push
ret
scas
sub
mov
xor
outsl
or
sub
popa
aam
sub
nop
xchg
jnp
popf
cmp
fildll
addr16
icebp
call
fidivl
xchg
or
mov
insl
cltd
mov
sbb
push
popa
test
cmp
lahf
shlb
jecxz
ror
adc
lods
cmpsb
test
and
sub
test
sub
mov
mov
mov
es
jmp
adc
mov
bound
in
neg
cmpb
ret
mov
lret
or
lods
jbe
lods
stos
js
dec
insl
push
mov
in
pop
mov
aad
pop
fistl
pop
cmp
fwait
sbb
outsb
loope
enter
test
sbb
loop
mov
sub
sub
jl
adcb
lea
mov
sub
dec
jl
mov
inc
shl
lds
adc
pop
jo
adc
add
or
adc
inc
lock
je
xchg
lahf
and
outsb
ret
ds
cmp
cmp
cmp
adc
cmp
movsb
inc
cmp
mov
aad
and
ficoml
pop
adc
mov
sti
cmp
movsb
insl
fs
mov
pusha
pop
and
hlt
insl
in
aam
dec
add
cli
mov
mov
fstp
lahf
rcrl
jle
cmp
jmp
in
dec
mov
cmp
stc
pop
addl
loope
das
js
int3
adc
jae
test
dec
push
dec
pop
loop
in
mov
push
cltd
mov
mov
pop
or
dec
xor
in
adc
sbbl
inc
push
int3
jecxz
sbb
mov
test
mov
cltd
ljmp
movsb
enter
mov
mov
out
rclb
adc
movsl
sub
push
mov
outsl
mov
mov
mov
outsb
les
inc
jns
mov
pop
mov
stos
ds
test
aaa
mov
mov
xchg
xor
and
fdivs
mov
hlt
lcall
push
and
ljmp
mov
ja
popa
or
sbb
inc
dec
pop
xor
mov
xchg
jmp
insb
pop
xchg
loop
xor
lcall
push
ret
sarb
xchg
out
imul
cmc
in
sahf
mov
sbb
xor
xchg
or
mov
jne
loop
jmp
xchg
fcmovbe
rol
mov
cld
or
loopne
out
movsb
into
push
ja
mov
pop
jo
test
outsl
mov
and
stos
and
cwtl
add
cmp
push
and
inc
pop
mov
sbb
ror
data16
and
sbb
xor
xchg
jp
dec
push
add
stos
jmp
and
in
dec
mov
inc
popa
jno
pop
add
aaa
aam
add
fisubrl
jb
pop
fistps
add
cmp
in
daa
mov
mov
test
int
mov
pop
mov
andl
mov
lret
jbe
or
loope
jns
dec
or
sahf
xor
and
ret
push
mov
dec
insl
pop
addl
lcall
mov
insb
lds
insb
loop
pop
dec
aaa
xor
lahf
mov
daa
sub
pushl
lods
pop
cmc
mov
pop
ficompl
push
pop
dec
xchg
out
fsubrl
xchg
test
cmpl
popaw
scas
pop
dec
insl
outsb
fs
pop
push
adc
xorl
sti
testb
or
jmp
mov
mov
cmpsl
ror
movsl
cld
scas
sahf
leave
ffreep
mov
insl
mov
mov
mov
subb
fisttpl
mov
sub
mull
push
ds
testl
addb
subl
mov
jae
rclb
in
and
sbb
jbe
shrb
cmp
fldt
dec
add
mov
scas
push
loop
in
scas
add
adc
sub
mov
das
xchg
pop
mov
mov
scas
jmp
scas
inc
dec
add
fdivrl
cmp
testl
test
jg
shrl
aas
sahf
xchg
jl
mov
cmpsb
mov
add
add
outsb
shr
cmp
cs
call
cmp
pop
cmp
jmp
push
mov
or
cmp
and
lock
add
fwait
push
pop
xchg
mov
popa
or
sub
repz
pop
lret
stos
adc
xchg
mov
outsb
jg
push
jns
out
mov
mov
adc
sub
fcompl
sbb
xchg
mov
shlb
fisubl
adc
mov
sub
or
lock
fcmovbe
mov
test
sub
jle
dec
fwait
lcall
pop
aad
xor
sahf
pop
arpl
sbb
or
mov
test
dec
push
fcomps
inc
inc
xchg
xor
sbb
std
sahf
pop
shlb
push
vpcompressd
mov
pop
mov
xor
ljmp
rcl
ljmp
roll
mov
push
testb
jne
arpl
lods
xor
in
lret
pop
mov
leave
lods
sbb
fnsave
test
dec
inc
pop
pushw
mov
and
lods
outsl
pop
mov
push
xchg
xorb
icebp
cld
push
or
das
jb
into
dec
push
daa
outsb
dec
sbb
cmp
jbe
push
inc
pop
mov
sub
scas
fldenv
ret
mov
and
out
or
insb
jbe
insl
stos
mov
aam
sbb
and
add
jge
cld
mov
mov
int
leave
sti
inc
fwait
sbb
cmpsl
js
pusha
inc
lods
lock
mov
mov
push
outsl
prefetch
ror
push
cmpsl
lea
rep
inc
push
or
cmp
or
cmc
imul
xor
call
xchg
push
dec
mov
je
rcl
out
sbb
add
rcrl
push
les
push
loope
fidivl
pop
xlat
push
jecxz
sub
push
mov
nop
and
cli
push
add
cmp
sub
push
fsubrs
mov
xor
daa
in
jnp
inc
cmc
fldt
push
lock
mov
orb
imul
inc
add
or
insl
jb
or
and
sub
subb
mov
xchg
mov
cli
subl
xchg
push
xchg
in
cmp
mov
gs
in
test
xor
es
shll
aas
push
sub
inc
sub
movsb
stos
fwait
xor
aam
cmpsb
inc
or
cmpsl
xor
fistpl
sbbl
push
push
fidivl
testb
data16
mov
mov
mov
mov
jp
pop
fisttpl
mov
mov
xor
cmp
or
mov
scas
xor
mov
mov
adc
jnp
xchg
push
fwait
push
ret
outsb
jne
xchg
nop
xchg
xor
sbb
and
clc
mov
bnd
test
adc
outsb
pop
mov
xchg
dec
jg
ja
ret
sub
sbb
mov
sbb
pop
dec
cmp
pop
cwtl
cld
leave
adc
lcall
int
sbb
or
outsl
fsubs
jmp
mov
shlb
in
int
ss
cmpsb
add
out
cmp
out
inc
mov
fildl
iret
cmp
repz
xchg
sbb
xchg
ja
cmp
inc
sub
dec
mov
cmpsl
jecxz
xor
stos
push
cwtl
mov
jno
pop
jle
in
les
cli
pusha
std
int
leave
cmpsb
and
add
mov
test
mov
arpl
add
cmc
aaa
mov
sbb
dec
rolb
clc
femms
jb
andl
inc
lcall
pop
and
adc
inc
push
loope
jb
shll
mov
and
scas
mov
jae
cmp
inc
or
jle
cmp
push
lret
jmp
into
xor
push
in
aad
ret
mov
loop
lret
sub
ret
cli
call
or
popa
mov
sub
xchg
out
out
pop
je
test
dec
lret
xorl
pop
and
xor
and
insl
ret
scas
test
call
inc
fsubrl
cmp
mov
mov
or
fldl
out
xchg
xor
xor
loop
int
mov
cmp
lods
mov
dec
mov
pop
jl
adc
pop
sub
sbb
pushf
jo
leave
mov
push
sbb
mov
mov
dec
mov
push
mov
jmp
push
in
aam
adc
jne
adc
cmp
outsb
jae
fdivs
aam
jmp
xchg
mov
sbb
test
mull
testl
sbbb
rcl
pop
hlt
sar
add
loope
mov
inc
xorb
aas
dec
xchg
sahf
pop
test
inc
mov
data16
ja
mov
popa
mov
sbb
call
mov
and
xchg
pusha
mov
adc
enter
mov
les
int
mov
mov
test
jnp
jo
inc
jg
shlb
pusha
int3
out
pop
adc
flds
lea
mov
mov
lods
iret
mov
and
popa
addr16
shld
or
dec
jmp
adcl
lock
adc
test
and
imul
shlb
shr
cmp
mov
or
cmp
sub
dec
push
jmp
arpl
lods
popa
push
aam
scas
aam
push
xchg
icebp
push
fcmovnb
sbb
arpl
pop
insb
mov
lcall
pop
pop
jo
push
jo
and
push
mov
pop
stos
shl
js
cmp
aam
or
mov
sub
add
xchg
push
xchg
xor
aad
ljmp
sbb
sbb
mov
dec
jecxz
andl
push
mov
or
or
xor
inc
adcb
lock
daa
movsl
outsb
stos
pusha
pop
mov
jl
stos
imul
enter
sub
dec
out
fistps
in
or
loopne
mov
cmp
lods
sbb
mov
xchg
xchg
ds
negb
jns
adc
cmp
or
and
push
cmp
iret
or
add
xor
xor
push
xor
mov
xor
mov
imul
imul
xlat
insb
gs
add
addr16
adc
xor
pop
xor
adc
imul
sbb
mov
mov
adcl
adc
add
pusha
adc
sub
inc
push
in
sti
into
pop
inc
xor
cmovnp
jmp
xchg
lahf
fsub
idivl
jmp
sbb
xlat
and
or
xor
clts
pop
xchg
xor
sbb
jge
inc
push
daa
push
sbb
out
sbb
out
xor
xor
in
or
and
jnp
cld
and
push
xchg
lea
roll
mull
and
aas
jge
mov
cltd
push
inc
adc
divl
mov
bswap
stc
xchg
js
sub
iret
negl
add
ds
fimull
or
adc
jp
ja
bound
movsl
ds
and
sub
push
js
mov
xlat
and
daa
cmp
push
cmp
push
or
mov
pop
notl
scas
add
insb
repnz
jecxz
push
into
sbb
sti
push
es
lret
sbb
aaa
notl
or
push
add
shll
adc
mov
add
or
push
sub
scas
fldcw
xchg
arpl
adc
fwait
fs
frstor
arpl
repz
cmp
or
jae
or
mov
push
mov
sbb
push
or
push
pop
arpl
adc
addr16
scas
push
xchg
xor
addl
cmp
or
xor
mov
out
out
adc
cmp
cmp
add
adcb
rcrl
stos
or
mov
cmp
push
push
cmp
lcall
pop
push
mov
and
or
xor
data16
call
iret
or
into
lock
sbb
pop
movhlps
divl
sub
adc
pop
packuswb
divl
and
in
int3
hlt
add
dec
mov
adc
ds
cmp
movb
xchg
xchg
jbe
int
mov
sti
xor
sbb
int3
pop
movsb
push
dec
add
fsubrp
push
add
mov
testb
adc
pandn
mov
push
add
or
add
scas
je
arpl
or
cmp
jnp
inc
push
dec
or
fidivs
test
enter
or
add
jnp
push
into
dec
or
add
mov
jmp
sub
jl
test
filds
or
sbb
outsl
into
push
cmpsl
sub
jb
test
call
daa
iret
or
sub
mov
xor
fimuls
ss
outsl
addr16
pop
pop
xor
sub
or
lahf
or
or
add
insb
insb
in
repz
add
stos
out
pop
fistpll
add
add
add
push
cmpsl
add
in
push
push
test
jl
test
addr16
sub
bound
push
lcall
dec
add
sti
or
xchg
cmp
xchg
pop
push
fwait
in
push
testb
imul
insl
push
aaa
mov
push
adc
adc
pop
fdivrl
cmc
xchg
sub
outsl
push
imul
push
adc
sbb
loop
mov
movsb
fisttps
push
inc
frstor
add
xor
mov
mov
jbe
in
adcb
xchg
or
into
out
sub
adc
es
add
fld
sub
test
push
mov
jmp
fcomps
mov
icebp
lret
mov
sbb
or
cli
jle
xor
adc
pushf
xor
cmp
xor
mov
stc
dec
lds
push
mov
push
mov
dec
mov
arpl
xchg
pand
out
xchg
xor
and
int
popa
inc
jecxz
pop
ljmp
dec
cmp
or
jae
cmp
jg
cmp
into
adc
adc
or
mov
xchg
or
jge
in
xor
addr16
fistl
lods
cltd
sub
mov
loope
cmpl
adcl
add
mov
gs
sbb
or
mov
insl
jbe
mov
jp
and
daa
dec
pop
fcomps
adc
xchg
xor
push
dec
xchg
xchg
sub
mov
push
scas
mov
push
mov
es
popf
sbb
xchg
xchg
mov
fwait
jmp
adc
or
pop
outsb
sub
out
fnstcw
xor
sti
lea
cmp
mov
xchg
fsubrs
pop
ret
js
enter
sub
lods
sub
stos
fldlg2
sub
and
adc
push
adc
test
sub
and
cmp
dec
mov
jne
loopne
sub
out
inc
push
and
cmp
pop
mov
dec
xchg
or
imul
push
stc
push
cs
dec
xorb
xchg
rcrl
incb
lahf
ss
inc
mov
add
or
sub
dec
sbb
aam
in
fwait
aam
call
mov
and
es
cmpsl
xchg
mov
jbe
hlt
add
adc
orb
in
out
arpl
lods
test
jmp
pop
daa
bound
mov
xlat
sbb
fwait
nop
sub
in
add
dec
inc
jo
adc
or
ret
mov
sub
mov
mov
xchg
pop
inc
cltd
clc
pusha
mov
std
scas
fcompp
or
pop
mov
fiaddl
lds
popf
int3
lcall
pusha
pusha
jg
cmpl
inc
mov
lret
inc
mov
sti
inc
es
xor
leave
mov
imul
and
pop
insb
out
in
fpatan
xor
push
cmp
sbbb
cmp
and
push
adc
rcr
lods
mov
jge
pop
dec
cwtl
cmpsb
or
lods
adc
mov
pop
movsl
mov
hlt
rcl
and
movsb
aam
add
and
out
ss
leave
popa
lds
popf
popf
outsb
es
or
and
cmp
lret
shrl
add
and
pushw
pop
push
inc
push
xor
stos
add
in
pop
ror
outsb
jecxz
inc
lods
sbbl
sub
aaa
adc
adc
stos
dec
sub
dec
jl
cli
dec
or
adc
shll
inc
data16
and
fcomp
es
and
daa
les
rolb
in
mov
pop
mov
dec
and
inc
daa
sub
dec
ss
lret
and
inc
inc
or
test
push
test
and
add
push
jbe
push
ret
add
add
jl
insb
inc
pusha
and
adc
jns
popf
push
dec
testl
push
fs
lret
or
enter
dec
mov
dec
xchg
nop
pop
fcomp
jle
ss
add
popf
xor
leave
jo
out
orl
outsl
mov
sbb
fsubl
xor
jne
nop
inc
movsl
or
mov
mov
cmp
test
lret
or
mov
fildll
and
fildll
jnp
sub
sub
add
add
pop
dec
sub
xlat
stc
test
cmpsl
add
pop
or
out
jnp
sub
or
sbb
and
mov
outsb
outsb
or
jbe
xchg
and
sub
mov
dec
cs
push
cmp
outsl
in
and
push
cmp
lea
or
mov
pushf
lea
mov
sub
pop
mov
out
out
daa
out
xchg
nop
inc
adcb
das
add
dec
xor
jb
es
aad
ss
sub
in
push
adc
aas
add
data16
adc
jp
sahf
xchg
dec
pop
adc
mov
inc
mov
xchg
fstpt
and
test
dec
jnp
sbb
cmp
and
aad
popf
inc
adc
mov
popa
sub
sub
inc
cmp
out
and
cli
xor
jne
movsl
or
sbb
and
sub
fildll
xchg
cwtl
add
in
pop
xor
push
push
add
push
ss
or
adc
xchg
xchg
fimuls
mov
int3
pushf
adc
into
popw
cltd
xchg
jo
and
and
jecxz
and
stos
ja
jp
or
repnz
mov
add
and
lcall
add
call
mov
mov
xchg
sbb
or
aas
or
fs
test
sbb
arpl
adc
push
dec
pop
lret
daa
jnp
addr16
les
jnp
pop
inc
or
jae
sbb
insb
leave
lods
fstl
adc
adc
adc
addr16
push
and
sub
outsb
loope
dec
push
std
lahf
cmpsl
dec
out
in
fwait
lea
insl
out
mov
cmc
and
fiadds
mov
lea
iret
adc
xchg
icebp
inc
jae
pop
xor
or
inc
mov
gs
xorb
andb
and
jecxz
jecxz
add
test
and
or
and
inc
mov
and
insl
mov
mov
jo
adc
mov
je
inc
sub
cltd
repz
add
or
lcall
out
pop
cmp
sbb
shl
dec
pop
loope
mov
mov
mov
mov
sbb
mov
jmp
and
mov
adc
fwait
ljmp
dec
mov
cmp
insb
inc
add
mov
inc
inc
int
dec
xchg
and
dec
imul
popa
and
icebp
nopl
or
pop
das
cs
das
xor
jg
jo
adcl
push
arpl
cmc
imul
dec
sub
fbstp
and
jnp
or
dec
xchg
or
mov
xor
cwtl
hlt
movsl
fdiv
mov
rcrb
mov
inc
cmp
xlat
cmp
or
push
cs
pop
ss
xor
cmp
and
pop
outsl
sbb
in
dec
push
ds
push
in
lods
and
sub
add
add
cmp
pusha
lds
pop
sbb
mov
add
xchg
push
or
xor
mov
adc
icebp
sarl
lret
int3
negl
lock
popf
popa
jl
pop
adc
or
xchg
nop
icebp
pusha
cmovae
and
sbb
mov
sbb
ss
mov
adc
adc
push
std
add
jecxz
add
insb
insb
mov
inc
mov
insb
fs
inc
imul
jae
adc
push
shll
adc
inc
mov
aaa
adc
lods
rorl
and
add
add
in
inc
insl
outsl
imul
dec
add
sbb
fisttpll
loopne
cmp
in
es
mov
adc
mov
push
xor
add
inc
dec
push
popf
daa
dec
jb
jp
or
pushf
push
icebp
jbe
add
xor
gs
mov
shrb
jno
dec
add
fidivs
add
mov
lds
lea
cmc
jmp
adc
add
dec
fisubrs
arpl
mov
sbbb
das
outsl
add
lock
add
add
or
add
arpl
and
shrb
cmp
dec
xor
mov
lock
scas
and
dec
pusha
xchg
add
subl
movsl
adc
inc
or
arpl
add
and
adc
das
das
sub
ds
mov
mov
loop
loopne
add
fiaddl
aam
mov
inc
inc
push
test
lds
push
js
push
push
imul
add
inc
sbb
mov
inc
lret
js
add
jmp
pop
push
sbb
push
inc
push
jno
in
outsb
fstpt
add
dec
add
inc
sbb
mov
addr16
daa
pop
push
mov
addr16
pop
ja
mov
jae
sbb
jl
inc
add
out
jnp
mov
pop
jnp
jnp
sbb
data16
js
add
fcomp
lods
mov
js
dec
push
jbe
je
cmpsb
add
data16
js
addr16
pop
sbbl
rolb
inc
push
stc
add
mov
jg
sbb
jae
lods
mov
jno
clc
mull
lret
faddl
stc
add
lret
outsl
jne
ja
arpl
sub
insb
movl
mov
jge
jnp
pop
adc
jbe
jp
sub
mov
jp
pop
fsubrs
push
adc
gs
xchg
cmp
sbb
jae
insl
orl
adc
add
test
repnz
incb
addr16
andb
and
cmpl
add
adc
test
repz
dec
jb
jecxz
data16
insb
add
ret
jno
shlb
sub
pop
xchg
inc
jae
addr16
loope
aaa
js
negl
inc
scas
mov
jg
negl
cmp
ja
fs
and
loopne
adc
bnd
adc
sbb
push
push
fwait
mov
sbb
mov
jl
jg
adc
gs
cmp
add
sbb
jge
imul
add
popa
pop
jl
jbe
inc
adc
adc
out
jecxz
jmp
ud2
push
lcall
push
or
insl
dec
inc
cmp
add
popfw
js
add
jnp
into
mov
add
addl
mov
xchg
ja
arpl
leave
mov
gs
pop
ret
add
dec
popf
xchg
mov
stc
add
fisubs
cltd
fwait
jno
testb
pop
mov
adc
and
gs
in
pop
push
ja
add
jmp
fstpl
cmpl
pop
inc
int3
pop
ret
lock
sub
fs
cmp
xchg
cmp
cmc
pop
sub
and
jge
and
adc
jge
sbb
cmp
pushf
jle
sbb
je
dec
add
shlb
into
add
and
adc
icebp
insb
pop
mov
sbb
pop
push
jnp
pop
mov
mov
test
sbb
add
pop
inc
lcall
xchg
movsb
ja
jmp
add
in
add
popa
jb
scas
loope
push
in
mov
inc
pop
push
sub
inc
jbe
add
repnz
repnz
adc
sbb
mov
ret
cmp
add
add
mov
pop
push
inc
push
pop
jg
js
add
inc
cmp
or
stc
xchg
int
xor
mov
icebp
jle
sbb
andl
mov
jg
dec
and
xor
adc
sbb
inc
pushf
add
sahf
pop
xchg
or
and
mov
pop
shll
loopne
stos
lahf
and
fmuls
loopne
and
pushf
orb
sbb
sbb
add
pop
pop
lods
inc
and
adcl
popf
add
aaa
negb
push
sbb
sbb
sub
inc
cmp
jo
pop
pop
mov
and
pop
outsl
jge
xchg
sbb
add
ds
mov
es
and
outsb
and
push
jmp
dec
jg
daa
and
aaa
sbb
in
add
fwait
push
es
dec
push
add
inc
movsb
adc
mov
push
adc
xchg
mov
xchg
outsb
jmp
add
sub
fcoml
ret
js
stc
out
push
sbbl
mov
ljmp
outsb
les
jp
dec
or
insl
jp
dec
les
data16
popa
xor
add
adc
js
cmovs
pusha
push
sti
orb
or
sub
test
xchg
or
or
adc
loop
mov
xorl
andl
or
add
movd
ja
movsl
or
push
daa
mov
pop
loop
loope
and
vmread
loope
lods
pop
jnp
push
sub
dec
daa
scas
loope
push
enter
and
mov
fisubrl
pop
sub
push
fwait
sub
fs
popa
imul
aas
add
push
ss
in
aam
call
insl
cmp
pop
ds
xchg
inc
push
pop
push
push
pop
or
call
pop
sub
xchg
mov
mov
xor
inc
orl
sbb
mov
mov
xorl
dec
push
repnz
out
int3
add
dec
dec
sub
rcl
mov
jns
sbb
fwait
mov
sbb
jne
sbb
inc
insb
in
dec
mov
lods
and
je
pop
xchg
pop
ja
mov
mov
push
push
pop
mov
inc
js
inc
dec
mov
xchg
mov
pop
xor
outsl
or
lret
data16
popa
push
dec
push
sub
or
add
mov
xor
add
dec
inc
or
inc
push
and
xchg
dec
lahf
xchg
push
insl
dec
jbe
mov
hlt
sub
push
pop
jnp
jmp
xlat
repz
or
pop
inc
push
stos
imul
sbb
sbb
lret
mov
push
rep
xor
sbb
inc
inc
sbb
push
dec
fiadds
sbb
mov
cmpsb
xor
dec
nop
inc
lods
push
push
in
sub
push
adc
pusha
xchg
pop
sbb
lods
mov
push
ja
fwait
or
sbb
and
or
jne
push
and
sub
aaa
shrl
outsb
inc
add
and
mov
fs
insl
jae
sbb
inc
add
mov
xor
dec
dec
popa
shlb
jo
icebp
out
inc
sub
pop
out
fstpl
pop
adc
xor
pusha
mov
inc
fwait
push
and
mov
cmp
les
inc
adc
lea
imul
mov
xchg
push
aam
inc
inc
mov
jne
mov
icebp
mov
push
ficompl
pop
pop
outsb
push
gs
movsb
fdivs
push
iret
mov
into
mov
fsubrp
add
fwait
jge
cmpsl
imul
stc
inc
xchg
push
mov
test
pop
or
int
js
sub
xor
inc
inc
xchg
dec
sbb
movsb
adc
clc
add
push
call
push
jae
pop
out
dec
out
xor
js
jne
or
or
inc
int3
mov
mov
dec
and
mov
xorl
imul
lret
gs
movsl
mov
mov
inc
aas
fs
mov
ss
xchg
mov
fs
mov
dec
push
pop
imul
push
lcall
mov
xchg
mov
sbb
fwait
sub
lcall
gs
inc
iret
adc
out
cmc
mov
cmp
loopne
xchg
push
mov
mov
pop
push
push
mov
mov
call
dec
cmp
xor
mov
or
test
or
pop
xchg
jb
inc
cwtl
sarl
and
loopne
cmp
mov
mov
sbb
test
push
pop
insl
add
andl
jne
add
into
jno
mov
sbbl
push
pusha
fldt
jae
dec
adc
es
jb
pop
dec
push
sti
adc
sub
mov
jl
mov
push
dec
insl
cmp
out
or
and
push
dec
outsl
jnp
dec
dec
aad
mov
in
and
sub
sbb
mov
xchg
xor
xor
sub
in
pop
mov
lret
xor
fimuls
sbb
add
inc
test
push
add
dec
fsts
outsl
popa
sub
js
dec
adc
lret
insb
jmp
pop
lods
mov
sub
xor
add
push
sub
sub
sbb
add
dec
sub
adc
fiaddl
sbbl
pop
pop
or
pop
ret
inc
and
movsb
pop
addr16
sub
add
jno
push
cmp
add
xchg
add
leave
sbb
mov
dec
out
lods
sub
push
orb
pop
cmp
add
add
loop
cltd
sbb
xchg
or
bound
jg
adc
inc
pop
add
sbb
popa
out
test
addr16
into
mov
sbb
je
jne
imul
cmp
fstl
mov
push
cmp
cmpsb
push
or
test
aas
adc
aam
push
loopne
adc
pushf
sti
mov
mov
inc
mov
push
fldenv
inc
addr16
inc
cmpsl
sbb
ror
mov
or
push
mov
rolb
je
je
or
sub
and
mov
pop
cmpsl
sbb
sub
pop
test
femms
pop
addr16
jp
xor
sub
cmp
in
push
pop
xchg
jno
das
int
idivb
lds
or
jo
mov
rclb
lock
inc
inc
or
sbb
test
adc
xchg
and
xchg
inc
lret
xor
push
repnz
aas
adc
push
ret
push
negb
arpl
sahf
sub
shrl
fsubs
or
dec
xchg
mov
popf
nop
mov
dec
cmp
dec
iret
cltd
adc
mov
sbb
push
or
pop
jo
xchg
pop
xor
lea
jb
popa
or
push
mov
push
test
xchg
add
lods
add
add
sbb
es
sbb
pop
scas
adc
cmp
aaa
sub
popf
mov
dec
call
push
insl
fisubl
sbb
aas
dec
or
xor
iret
xchg
imul
pusha
inc
pop
cmp
lahf
inc
sbb
jno
sti
in
pop
add
add
loope
xor
mov
cmp
push
in
add
pop
cmp
pop
push
fmuls
mov
lcall
push
das
jg
bound
fcoms
mov
dec
ljmp
cmp
fwait
push
fdivr
add
mov
sub
push
mov
test
and
jbe
mov
or
jb
nop
cmp
mov
mov
pop
add
mov
cs
jecxz
ficoms
scas
sub
aas
dec
pop
sbb
add
sbb
push
je
jne
push
and
fiadds
mov
sub
inc
sub
xor
xor
pop
scas
imul
and
push
or
dec
mov
add
sbb
dec
inc
inc
lcall
pop
mov
mov
xor
idivb
mov
adc
shr
fsubrs
or
sbb
sbb
cmp
adc
fdivrl
negb
add
imul
sbb
fadds
or
and
imul
addl
sub
mov
mov
movsb
pop
pusha
push
add
int3
xor
inc
ret
notb
push
dec
or
mov
inc
mov
add
into
insb
orl
jne
add
and
or
sar
or
mov
sbb
test
pop
and
xor
insl
cs
rolb
out
pop
mull
pop
inc
xchg
sbb
sub
adc
xor
bound
jb
je
pop
test
and
mov
xchg
jmp
sti
or
mov
sbb
outsl
aas
inc
fcoms
jbe
push
pop
pop
pop
xchg
or
addr16
fcoms
xor
insb
aaa
and
psrlw
jecxz
xchg
inc
add
jbe
cmp
xor
fs
fadds
ja
mov
mov
test
mov
xchg
inc
aas
add
sub
ss
or
inc
push
push
cmp
nop
inc
jl
pop
lahf
pop
jbe
imul
push
xchg
das
nop
pop
in
and
dec
or
xchg
pushf
in
adc
mul
mov
inc
adc
test
cmpl
scas
inc
xor
pop
dec
pop
xor
pop
popa
scas
lret
int
mov
mov
rorl
sahf
or
stos
xor
ret
xchg
sbb
repnz
xchg
inc
mov
outsb
xor
in
clc
fisttpll
or
aad
xchg
inc
lea
add
sub
gs
inc
xor
inc
mov
orb
inc
add
sub
dec
clc
add
inc
push
pop
nop
cmp
test
push
pushl
xchg
add
add
jb
gs
mov
sbb
dec
push
sti
outsl
je
arpl
loope
imul
gs
pop
push
gs
outsb
outsw
sub
cmp
push
mov
dec
gs
push
imul
nop
dec
cmovge
jne
dec
popa
outsb
push
mov
push
adc
jne
das
outsb
fsts
dec
adc
push
outsl
or
imul
negb
inc
outsb
jne
inc
popa
jp
outsl
jb
push
jae
popa
int
dec
inc
and
imul
insl
jo
je
outsl
outsb
push
sub
inc
mov
jae
or
xor
adc
clc
inc
push
fnsave
mov
insl
jne
inc
jb
push
xchg
loope
imul
outsb
addr16
push
add
cmp
sbb
inc
outsb
je
or
shlb
mov
xor
jge
cmpsb
and
outsl
jbe
jo
dec
std
jnp
pop
in
push
imul
int
inc
fwait
dec
or
dec
push
es
arpl
test
jb
ja
arpl
cmp
ss
jo
push
jl
outsb
out
lock
inc
dec
aad
insb
fs
adc
jo
mov
mov
sub
mov
je
mov
fistpl
adc
adc
push
js
dec
lock
inc
gs
gs
int
ret
push
adc
loop
leave
arpl
jo
movb
adc
idiv
call
mov
or
ret
add
out
or
add
idivb
push
add
je
mov
lock
add
imul
lock
mov
add
lock
adc
test
ficompl
prefetch
or
sbb
push
and
mov
add
add
lock
add
or
push
lock
filds
ret
lock
add
int
div
mov
add
push
inc
lods
add
pop
inc
sub
loopne
mov
sbb
add
int
scas
cmp
pop
add
add
inc
or
ss
sbb
pop
adc
cmp
insb
cmp
cs
adc
fnsave
adc
sub
adc
jo
add
jge
stc
push
inc
dec
inc
inc
mov
dec
fcomps
and
inc
fistpll
add
out
push
jbe
cmp
mov
push
push
adc
add
imul
cmp
daa
push
inc
das
dec
lcall
add
push
cmpsl
gs
jae
cmp
lods
lods
in
ds
push
sbb
add
add
orb
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
