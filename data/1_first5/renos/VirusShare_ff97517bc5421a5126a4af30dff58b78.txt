jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
xor
data16
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
cmp
jo
lea
mov
lea
lea
mov
mov
inc
dec
inc
lea
mov
mov
lea
xchg
mov
inc
dec
inc
mov
cmp
je
jmp
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
xor
divl
test
jne
cmp
jb
mov
dec
mov
inc
cmp
jne
xchg
inc
mov
xchg
jmp
mov
xchg
mov
mov
mov
mov
mov
mov
lea
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jge
dec
inc
dec
inc
dec
dec
cmp
jae
lea
lea
xchg
inc
inc
dec
inc
mov
mov
mov
lea
lea
xchg
dec
je
lea
xchg
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
lea
cmp
jnp
lea
lea
dec
inc
xchg
lea
inc
dec
xchg
mov
lea
lea
mov
lea
mov
mov
dec
mov
cmp
je
jmp
cmp
jne
mov
inc
dec
xchg
dec
dec
lea
mov
mov
mov
lea
mov
lea
mov
inc
dec
inc
dec
jne
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
mov
lea
dec
je
xchg
mov
xchg
mov
dec
mov
cmp
je
jmp
cmp
jne
mov
inc
dec
xchg
dec
dec
lea
mov
mov
mov
lea
mov
lea
mov
inc
dec
inc
dec
jne
mov
lea
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
jge
dec
inc
dec
inc
dec
dec
cmp
jae
lea
lea
xchg
inc
inc
dec
inc
mov
mov
mov
lea
lea
xchg
dec
je
lea
xchg
mov
sub
mov
mov
xchg
lea
cmp
jno
mov
mov
mov
mov
mov
mov
xchg
lea
dec
dec
dec
inc
lea
lea
mov
mov
inc
push
mov
mov
xor
call
mov
cmp
jb
mov
dec
mov
inc
cmp
jne
xchg
inc
mov
xchg
jmp
mov
xchg
mov
mov
mov
mov
mov
mov
lea
inc
inc
mov
mov
mov
call
lea
cmp
jnp
lea
lea
dec
inc
xchg
lea
inc
dec
xchg
mov
lea
lea
mov
lea
mov
mov
dec
push
mov
mov
xor
call
mov
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
cmp
jo
lea
mov
lea
lea
mov
mov
inc
dec
inc
lea
mov
mov
lea
xchg
mov
inc
dec
inc
lea
mov
push
jmp
mov
xchg
lea
cmp
jno
mov
mov
mov
mov
mov
mov
xchg
lea
dec
dec
dec
inc
lea
lea
mov
mov
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jne
mov
inc
dec
xchg
dec
dec
lea
mov
mov
mov
lea
mov
lea
mov
inc
dec
inc
dec
jne
mov
lea
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
mov
lea
dec
je
xchg
mov
xchg
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
push
mov
add
movb
push
push
push
call
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
movl
movl
lea
push
call
push
push
push
call
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
movl
movl
lea
push
call
decb
cmpb
jne
mov
pop
ret
add
jae
addr16
xor
xor
pop
jae
add
addr16
push
pop
jae
addr16
jae
addr16
xor
xor
pop
jae
add
add
gs
jae
push
pop
jae
addr16
push
mov
add
mov
mov
lea
cmp
jnp
lea
lea
dec
inc
xchg
lea
inc
dec
xchg
mov
lea
lea
mov
lea
mov
mov
dec
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jb
mov
dec
mov
inc
cmp
jne
xchg
inc
mov
xchg
jmp
mov
xchg
mov
mov
mov
mov
mov
mov
lea
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
lea
cmp
jno
mov
mov
mov
mov
mov
mov
xchg
lea
dec
dec
dec
inc
lea
lea
mov
mov
inc
mov
mov
movl
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
dec
inc
dec
inc
dec
dec
cmp
jae
lea
lea
xchg
inc
inc
dec
inc
mov
mov
mov
lea
lea
xchg
dec
je
lea
xchg
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
icebp
mov
fcom
mov
sub
mov
adc
mov
sbb
mov
push
icebp
mov
adc
mov
cli
shlb
repnz
shlb
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
jb
repnz
sti
jb
repnz
jl
or
jb
repnz
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
jb
repnz
xor
adc
repnz
or
xor
jl
jb
bnd
or
xor
jl
or
jb
repnz
xacquire
pop
scas
xor
jge
mov
xor
jb
repnz
adc
repnz
cli
jb
repnz
push
sti
jb
repnz
out
jb
repnz
jb
repnz
xor
adc
repnz
sti
jb
repnz
push
cli
jb
bnd
jb
bnd
pextrw
xor
jb
bnd
jb
repnz
out
jb
bnd
jb
repnz
push
sti
jb
bnd
jb
repnz
push
cli
jb
repnz
jb
repnz
out
jb
repnz
jb
repnz
xor
adc
repnz
pextrw
xor
jl
jb
repnz
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
mov
lea
dec
je
xchg
mov
xchg
mov
dec
movl
mov
xchg
lea
cmp
jno
mov
mov
mov
mov
mov
mov
xchg
lea
dec
dec
dec
inc
lea
lea
mov
mov
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jge
dec
inc
dec
inc
dec
dec
cmp
jae
lea
lea
xchg
inc
inc
dec
inc
mov
mov
mov
lea
lea
xchg
dec
je
lea
xchg
mov
mov
call
mov
cmpl
je
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
mov
cmp
je
mov
subb
mov
mov
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
nop
xorb
nop
cmp
jge
dec
inc
dec
inc
dec
dec
cmp
jae
lea
lea
xchg
inc
inc
dec
inc
mov
mov
mov
lea
lea
xchg
dec
je
lea
xchg
incl
mov
cmp
jne
cmp
jne
mov
inc
dec
xchg
dec
dec
lea
mov
mov
mov
lea
mov
lea
mov
inc
dec
inc
dec
jne
mov
lea
mov
mov
call
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
cmp
jo
lea
mov
lea
lea
mov
mov
inc
dec
inc
lea
mov
mov
lea
xchg
mov
inc
dec
inc
push
mov
push
call
mov
pop
ret
push
mov
add
call
call
mov
cmp
jo
lea
mov
lea
lea
mov
mov
inc
dec
inc
lea
mov
mov
lea
xchg
mov
inc
dec
inc
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jb
mov
dec
mov
inc
cmp
jne
xchg
inc
mov
xchg
jmp
mov
xchg
mov
mov
mov
mov
mov
mov
lea
inc
inc
movb
mov
lea
cmp
je
mov
xchg
mov
lea
inc
dec
inc
dec
je
mov
dec
mov
xchg
xchg
lea
lea
inc
mov
mov
pop
ret
nop
push
mov
add
call
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
call
call
test
jne
mov
jmp
movw
lea
cmp
jnp
lea
lea
dec
inc
xchg
lea
inc
dec
xchg
mov
lea
lea
mov
lea
mov
mov
dec
call
lea
mov
pop
ret
lea
push
mov
add
mov
mov
mov
lea
lea
mov
mov
dec
inc
dec
jne
dec
dec
dec
cmp
jb
mov
dec
mov
inc
cmp
jne
xchg
inc
mov
xchg
jmp
mov
xchg
mov
mov
mov
mov
mov
mov
lea
inc
inc
push
call
mov
cmpl
jne
push
call
pushl
call
mov
xchg
lea
cmp
jno
mov
mov
mov
mov
mov
mov
xchg
lea
dec
dec
dec
inc
lea
lea
mov
mov
inc
mov
pop
ret
add
je
push
cs
dec
and
add
je
jne
addr16
andl
jne
movl
cmp
jne
mov
inc
dec
xchg
dec
dec
lea
mov
mov
mov
lea
mov
lea
mov
inc
dec
inc
dec
jne
mov
lea
mov
mov
mov
mov
lea
call
cmp
jge
dec
inc
dec
inc
dec
dec
cmp
jae
lea
lea
xchg
inc
inc
dec
inc
mov
mov
mov
lea
lea
xchg
dec
je
lea
xchg
ret
mov
ret
lea
push
add
add
add
rorb
or
call
push
xlat
add
cmp
je
add
add
je
add
enter
xchg
outsl
bswap
pop
mov
add
ja
mov
add
add
push
add
out
addr16
add
push
stc
lods
gs
add
add
fldt
popa
test
push
fists
pop
addl
scas
or
add
add
aad
mov
xchg
cwtl
mov
sbb
mov
cmp
adc
int
aas
push
lret
mov
dec
loop
add
add
sub
icebp
testl
aas
orl
push
clc
add
or
pop
mov
aad
jnp
ss
stc
es
push
mov
add
add
xlat
and
iret
pushf
pop
mov
add
add
pop
test
xchg
lds
add
bound
mov
push
xor
ss
push
mov
add
push
push
jl
mov
sbb
jne
call
push
sti
add
adc
ret
out
add
jp
dec
pop
stc
pushf
mov
adc
sbb
mov
jge
mov
sub
jbe
sbb
std
jno
repnz
add
mov
div
sub
and
insl
addb
movb
aaa
add
imulb
xor
add
and
jg
movsb
add
push
pop
xchg
add
in
into
js
add
push
stc
and
inc
sbb
xchg
pusha
add
or
test
mov
adc
ret
ljmp
fildl
and
add
cld
inc
mov
sbb
cli
add
add
inc
add
xchg
and
jne
fisttpll
mov
jge
cmp
lret
push
inc
add
add
add
add
cmp
jnp
aaa
push
mov
add
repz
add
in
insb
cld
sub
add
addb
add
add
mov
pop
mov
add
movb
jmp
bound
nop
dec
xchg
cmpsl
add
xchg
fadds
add
icebp
cmp
loop
add
add
rcrl
add
add
test
or
imul
test
push
add
xor
lcall
repz
add
add
add
ja
pop
xor
inc
add
add
sub
add
mov
add
add
push
dec
xchg
movsb
mov
lea
mov
dec
add
in
popf
dec
inc
nop
add
add
add
outsl
js
in
imull
scas
ds
fisubs
mov
js
add
pop
aas
test
mov
add
bound
mov
sbb
adc
sub
dec
add
add
push
add
add
dec
movsb
inc
ja
cmpb
xor
add
insb
jns
push
cmpsl
sti
out
dec
lret
pop
outsl
stc
mov
and
adc
add
imul
add
add
dec
sbb
add
add
add
mov
add
stc
add
in
jo
add
adc
lret
test
in
pusha
add
movsb
leave
mov
inc
jp
inc
cmc
dec
icebp
add
stos
add
stos
pop
outsb
xor
push
add
xor
int
movsb
lret
inc
mov
imul
cmpsb
pusha
test
repnz
add
stos
int3
das
lea
mov
jp
and
dec
push
scas
push
fstpt
or
inc
inc
mov
mov
gs
addr16
aad
dec
data16
and
pop
adc
jg
testb
test
imul
cmpsb
scas
mov
push
add
sub
lret
mov
lahf
xorl
fisubl
rorb
xor
sub
not
mov
jge
es
adc
insl
test
cmp
jmp
ss
add
repnz
mov
mov
psadbw
rcrb
icebp
mov
bound
or
fldl
stc
dec
call
sbb
xchg
addl
adc
in
xchg
or
push
push
cmp
xor
jb
or
push
fnstenv
adc
add
dec
ljmp
ja
xor
jmp
sbb
fwait
gs
adc
cmpsb
jo
out
jmp
xchg
jns
pushf
mov
xchg
push
mov
jb
std
pop
jmp
dec
add
dec
in
je
jmp
cltd
dec
mov
es
ret
lret
push
cmp
fucomip
inc
xchg
lahf
insb
or
xchg
roll
lea
aaa
out
popf
adc
aas
push
inc
stos
cmp
cmp
and
outsb
insb
xchg
clc
insl
jnp
sbb
jle
dec
cld
in
fdivrs
adc
xlat
ret
add
mov
sbb
mov
lahf
popf
das
aad
mov
cmp
jmp
sbb
int3
jecxz
icebp
cld
sbb
cmp
mov
mov
and
shl
out
pop
sub
push
movsb
inc
sub
mov
push
sub
xor
int3
or
sahf
fisubrs
adc
ror
jae
add
scas
and
ret
test
pop
movsb
sbb
sar
jbe
je
jge
fstpl
mov
roll
cld
fdivl
or
jl
pop
sub
push
mov
dec
ja
enter
adc
in
push
je
cmc
test
mov
mov
adc
adc
js
pop
enter
pop
or
stc
jl
loope
ja
sub
jo
cmp
iret
ds
sbb
cmp
cmpsb
and
and
mov
pusha
add
test
ss
pop
pop
add
xchg
insb
pop
pop
inc
iret
inc
lcall
adc
icebp
pop
aas
sub
jp
adc
sti
insb
mov
cmp
sahf
lds
mov
mov
out
sbb
aam
idiv
mov
lret
jl
xor
repnz
arpl
jle
sub
test
jle
xor
loop
jne
pop
stc
mov
cmp
imul
xlat
xorl
js
fadd
mov
pop
cli
sub
and
loopne
cmpl
or
ja
cmc
mov
pop
xor
jns
push
adc
sahf
lahf
adc
pop
popa
add
inc
mov
push
xor
lods
push
insl
outsl
mov
aas
sub
inc
mov
in
dec
inc
aaa
sti
stos
icebp
fdivrp
outsl
fdiv
gs
xor
loopne
jb
dec
popf
call
stos
fsts
mov
sbb
fdiv
inc
jno
xchg
inc
testb
inc
sbb
movl
mov
mov
hlt
inc
jmp
in
cs
test
pusha
in
nop
push
sub
aas
lds
dec
dec
cmp
in
add
rorb
arpl
sahf
mov
adc
mov
lods
dec
add
fucomi
in
cld
sub
sub
in
icebp
lea
cli
jno
mov
arpl
push
testb
sbb
adc
pop
test
cmc
popf
cmpsl
cld
sbb
lret
lea
push
fdiv
jne
stc
pop
and
rcr
scas
mov
jno
ret
aam
call
int
ret
insb
dec
mov
xchg
sub
jb
xor
pop
popa
push
testb
aaa
pop
cmc
mov
rolb
mov
push
fistl
add
adc
lock
pop
scas
mov
push
cwtl
sub
clc
xor
lds
test
cmp
pop
pop
push
stos
add
pop
out
hlt
mov
xchg
push
push
or
decl
stos
or
insl
test
movl
jns
into
push
outsl
dec
push
mov
sti
ja
sahf
adc
inc
cmpb
fwait
xchg
lret
test
add
shll
mov
sbb
test
mov
outsl
mov
sbb
sbb
repz
movsb
jge
addr16
pop
mov
pop
js
les
inc
dec
or
jmp
lods
pop
xor
xchg
jb
or
xchg
pop
mov
orl
shl
xchg
sub
or
fmull
lcall
and
push
xor
add
jle
and
loopne
lods
cwtl
repnz
dec
dec
cmc
ret
cld
pop
xor
push
inc
pop
sbb
add
sub
popf
push
pop
cmp
add
dec
fcmovbe
push
repz
dec
fld
sbb
push
ljmp
mov
push
test
adc
je
call
hlt
cmp
arpl
sub
or
and
push
aaa
ljmp
add
mov
sbb
dec
sbb
shl
jb
loopne
out
and
outsb
push
cmp
movsb
test
mov
jbe
sbb
jge
jae
gs
pop
dec
cli
cmp
imul
mov
loope
out
pushf
push
mov
push
push
jo
dec
lods
lahf
xor
jl
inc
cmpb
outsb
push
push
imul
adc
shll
pop
fsin
enter
pop
dec
in
mov
loope
mov
push
cmp
mov
js
inc
mov
mov
test
aad
push
mov
push
add
orb
stc
bound
js
xchg
sbb
rcrb
pop
aas
add
fcompl
sbb
es
adc
loope
jg
sub
mov
pushf
dec
mov
icebp
push
mov
fcom
and
ret
int
fsub
sub
mov
lret
icebp
ror
out
roll
rcrb
or
std
orb
outsl
cmp
pushf
loop
dec
add
insb
fildl
adc
scas
icebp
sbb
cmp
cmpl
cli
pop
data16
mov
idivl
into
sbb
into
jp
popa
cmc
xchg
sub
fidivl
nop
adc
imul
sub
jns
lods
cmp
test
cmp
xchg
sub
jmp
mov
sub
xchg
das
lahf
gs
pop
loopne
add
dec
cld
mov
inc
jecxz
int
and
add
adc
aas
xchg
or
cltd
sbb
subl
pop
sub
adc
lret
addr16
jmp
or
cs
mov
aad
mov
nop
sub
adc
dec
mov
push
je
cmp
jecxz
bound
lea
ret
call
leave
scas
push
mov
pop
sbb
rcr
ja
pop
lahf
inc
fldl
mov
iret
das
sarb
xor
out
pop
je
push
xor
test
jl
divb
dec
cwtl
shrb
cmpsl
push
cwtl
sbb
icebp
int3
pop
mov
inc
sub
jo
xchg
and
loopne
sarb
pop
inc
lods
cli
shlb
adc
ret
fldcw
insb
insl
push
jecxz
dec
push
insb
push
xchg
imul
mov
insb
iret
push
lods
jno
cmpsb
mov
jnp
pop
and
shlb
mov
out
add
arpl
pop
aam
mov
je
push
pop
mov
xor
outsl
mov
push
sbb
mov
and
xchg
stos
repz
mov
push
sub
cltd
je
push
les
ljmp
lods
mov
xchg
outsl
ret
or
inc
xlat
mov
sarl
push
mov
lods
and
dec
jl
cmpsl
inc
pop
sbb
inc
add
fwait
repz
sub
sub
fmull
out
cmpsl
testb
jp
jns
inc
xor
jo
jns
push
and
shlb
pop
pop
movsb
out
mov
adc
push
sub
out
mov
inc
dec
in
sarb
mov
jmp
mov
inc
mov
jmp
and
or
sbb
push
sub
xor
or
stos
and
shlb
repz
insb
insb
in
add
jle
neg
in
push
les
mov
iret
stos
sbb
ret
cs
addr16
inc
sub
xchg
jae
dec
nop
push
in
nop
mov
mov
jg
ret
fiaddl
lds
stos
iret
imul
sbb
lret
mov
jp
xor
cmpsl
leave
in
lods
inc
hlt
test
xchg
inc
xor
inc
push
test
push
out
sbb
jecxz,pt
mov
xlat
fdivp
test
rolb
mov
mov
dec
add
push
xor
lahf
push
cli
lret
int3
jbe
cmp
lret
sbb
movsl
arpl
push
inc
insl
cmp
inc
jno
mov
dec
push
xchg
push
push
test
xor
jle
ss
dec
mov
push
sbb
test
ss
push
inc
mov
add
in
inc
pop
enter
pop
mov
mov
loope
sub
sub
dec
xlat
cmp
inc
and
push
test
adcb
jg
push
adcb
mov
loop
mov
arpl
js
push
popw
aas
data16
pop
es
inc
mov
add
mov
adc
mov
fs
lock
mov
dec
mov
inc
mov
mov
and
int
add
scas
idivl
mov
cmc
rorb
mov
outsl
sahf
stc
rcll
test
pusha
add
loop
testl
adc
pop
push
ss
test
adc
sbb
cmp
pushf
out
and
xor
pop
sub
xchg
outsl
repnz
pop
jmp
cmc
dec
fwait
movsl
xor
imul
das
jmp
stc
adc
imull
pop
xor
lods
and
js
sub
push
push
fnsave
mov
sti
or
arpl
adc
loopne
test
dec
pop
test
notb
pop
flds
ljmp
int
pop
sbb
mov
jbe
pop
fisttpll
adc
add
icebp
mov
add
aad
loop
nop
or
sub
add
pop
jb
xor
dec
sub
add
cltd
jecxz
push
add
in
cltd
call
mov
or
call
insl
add
inc
mov
pop
inc
dec
movsb
inc
aad
outsb
inc
adc
das
scas
jmp
mov
jno
mov
shll
mov
std
popf
packssdw
push
push
addr16
mov
jmp
lret
or
cmpsl
mov
cli
mov
pop
lock
pop
pop
notb
rolb
xchg
cs
ljmp
fdivrl
insl
cmp
dec
push
mov
cmp
sbb
fisubs
int3
or
fsubr
cmp
sahf
arpl
into
xchg
int3
mov
adc
add
in
cltd
lock
test
fsubl
sbb
imul
stos
stos
inc
xchg
lods
sbb
cmp
roll
jp
stos
loop
loopne
mov
ds
lahf
mov
dec
cmc
cmp
out
jmp
xor
ret
xchg
in
dec
pop
adc
test
ss
fcomps
or
pushf
mov
fwait
repz
push
lret
aad
add
idivl
out
xchg
and
jns
or
in
int3
dec
xchg
push
iret
add
decb
pop
sbb
addr16
mov
mov
or
int
enter
iret
add
jne
ret
cli
mov
ficoms
inc
adc
jmp
out
loope
subl
out
fwait
jp
xchg
lea
push
sbb
aad
xchg
in
and
dec
insb
xlat
movsl
and
addb
mov
xchg
pusha
loop
cltd
iret
or
int3
ret
pop
sahf
das
jle
xor
add
push
scas
xor
movsb
adc
jecxz
ss
nop
xchg
cld
aad
sbb
flds
mov
leave
fstl
and
adc
sbb
sbb
ror
lods
enter
test
cmpsb
dec
adc
mov
push
push
push
es
mov
xor
int3
xchg
jno
fistps
mov
lds
or
sahf
lds
ljmp
movsb
mov
cs
jbe
int3
sub
sbb
add
daa
push
enter
pushl
jle
jl
pop
sbb
repz
push
push
nop
leave
jo
cs
push
in
dec
xor
add
andb
xlat
out
dec
xchg
out
pop
enter
push
push
xchg
mov
and
insl
sub
xor
movsl
push
cwtl
jae
test
movsb
mov
and
add
mov
cmp
pop
lret
xchg
jg
cli
pop
into
push
js
cmpsl
jmp
mov
inc
xchg
push
mov
test
repnz
sub
xchg
adc
mov
sarl
mov
loope
loope
mov
and
and
int
adc
divl
stos
fmul
call
or
mov
and
sahf
pushf
adc
test
or
push
push
outsl
testb
stc
fisubrl
shll
mov
push
data16
repz
xor
push
jl
gs
cmc
cmp
mov
or
inc
mov
inc
adc
cmc
adc
sbb
pop
testl
js
cmpsb
adc
loope
add
data16
lods
pop
ljmp
mov
movsb
insb
sub
adc
mov
sar
fdivrs
sbb
scas
pusha
mov
inc
or
fnstcw
icebp
cmp
xchg
nop
xor
sbb
test
scas
pop
nop
shll
test
lahf
pushf
mov
popf
xchg
cs
imul
jecxz
cmpb
daa
add
inc
cmpsl
into
dec
lahf
or
je
nop
mov
mov
lea
call
inc
jo
mov
in
ss
ret
scas
pop
in
cld
inc
pop
andl
mov
fs
add
mov
notb
idiv
inc
int3
call
cmpsl
push
lcall
jp
out
cld
lcall
mov
or
xchg
pop
jle
cld
rclb
jg
push
mov
mov
mul
imul
and
and
outsb
push
xchg
out
cmpsl
ljmp
out
lods
inc
sub
inc
cmp
jae
aad
js
negb
iret
lcall
jns
test
or
loope
fucom
ret
cmp
inc
dec
xchg
adc
rcr
sbb
enter
rorl
inc
out
sbb
insl
rclb
pop
or
xor
cmp
or
ret
rorl
xchg
std
mov
test
push
mov
dec
bound
pop
inc
inc
inc
xor
xchg
sahf
push
outsb
nop
repnz
adc
loope
gs
dec
bound
pop
jns
ja
in
repz
inc
jne
mov
aad
mov
jp
sarb
jae
mov
push
cs
mov
jae
clc
fstpl
mov
out
fbld
notl
jae
mov
cmpl
cmp
sub
shrb
mov
add
jle
je
in
fs
pusha
jge
xor
imul
negl
push
sub
imul
dec
adc
adc
movsl
inc
jge
lahf
fucompp
fiaddl
adc
dec
imul
aad
pop
call
lcall
mov
leave
ficoml
hlt
sbb
arpl
cs
push
daa
xor
add
or
mov
ret
fidivs
movsl
sub
sarb
stos
scas
jge
aaa
and
cmpsl
cmp
lcall
shll
sbb
sbb
aas
cmp
push
sub
jl
push
add
sbb
push
dec
leave
test
dec
les
xor
mov
lea
push
rolb
push
int3
inc
mov
cmpsb
and
sub
adc
adc
dec
sub
pop
pop
mov
hlt
loope
imul
jge
out
sbb
cmpb
cmp
movsl
pop
stos
push
inc
subb
or
sbb
jb
add
movsl
mov
inc
and
pop
cmc
push
movsl
js
lea
cmp
iret
das
push
or
fcompl
push
mov
mov
mov
addr16
nop
mov
iret
push
mov
enter
xor
fxch
xchg
fsts
int
add
sub
inc
div
mov
lret
inc
nop
inc
add
xchg
fistpl
xor
sahf
aas
dec
xchg
lahf
pusha
stos
outsl
aad
cmp
shr
stc
xchg
sub
fs
xchg
mov
jecxz
sub
mov
lret
out
imul
cmp
pop
cmp
out
or
mov
and
push
cmc
fcmovnbe
add
jmp
lods
pop
cmc
xchg
adc
ss
adc
pop
or
add
popaw
add
mov
pop
iret
sub
sub
xchg
mull
pop
sti
addr16
sti
in
cld
gs
and
dec
sub
sbb
sbb
f2xm1
sahf
and
repz
adcb
mov
cmp
into
push
cmp
xor
shrd
pushl
lods
pushf
push
or
data16
jno
nop
mov
cmp
jb
dec
test
je
mov
adc
lea
repz
mov
xchg
push
mov
jno
push
outsb
enter
or
movsl
ja
pop
mov
inc
inc
mov
mov
filds
sarl
shll
jmp
xor
cmpsl
push
popa
iret
mov
push
jno
cld
lret
ljmp
mov
ret
stos
lock
std
pop
popf
xchg
lcall
test
ret
xchg
mov
insl
or
dec
inc
int
xchg
es
add
incb
sub
jns
mov
fdivrl
mov
shrl
dec
add
int
pop
xchg
int
sub
mov
movsb
daa
rcr
or
sbb
xchg
sbb
xor
adc
jno
shrb
xorb
push
push
sbb
xor
loop
repz
mov
xchg
mov
in
repnz
test
add
daa
dec
push
inc
fmull
es
sbb
push
pop
push
push
adc
xor
sub
cwtl
bound
in
mov
in
outsb
mov
repz
cmp
pop
nop
nop
jp
mov
xchg
jp
mov
mov
jo
nop
mov
cmp
jne
pop
jecxz
sbb
jno
mov
fcoms
orl
out
faddp
sub
es
push
xchg
addr16
stos
jnp
pop
and
xchg
arpl
xchg
push
jle
and
pusha
sbb
iret
enter
movsl
pushf
out
pop
or
jns
dec
cmp
push
xor
pop
xor
cld
jmp
ficompl
iret
sbb
mov
imul
push
mov
sub
repnz
push
cwtl
stos
hlt
lods
cld
arpl
inc
ret
inc
cmp
or
or
fwait
lods
or
incb
loop
mov
mov
mov
jns
es
push
push
scas
pop
aaa
lahf
and
sub
cmp
mulb
push
out
mov
dec
push
jge
push
mov
pop
cmpb
sti
arpl
jl
add
add
push
cs
jo
adc
pop
or
push
xchg
jmp
mov
xchg
inc
xor
sub
mov
fs
enter
pop
inc
cmp
cmp
xor
mov
ror
cmp
mov
push
movsl
pop
and
fistps
xchg
orb
sbb
loopne
add
call
xor
sub
add
and
popw
mov
adc
push
pusha
pop
and
dec
jo
mov
sub
adc
inc
jge
jg
pop
divb
iret
fucomi
mov
jle
and
mov
add
and
shrb
int3
jne
divl
cmpsb
xor
daa
sahf
inc
mov
lcall
jno
test
lods
out
mov
testb
cmp
xlat
stos
inc
adc
add
ss
cmp
insl
mov
cmp
adc
cmp
jmp
or
xor
mov
mov
pop
cltd
pop
adc
jge
test
insl
imul
cltd
add
pop
and
mov
xchg
push
sub
cmpsb
iret
in
bound
sti
push
pop
dec
push
adc
gs
dec
js
jp
das
jmp
fldenv
mov
les
cmc
repz
mov
scas
sbb
insl
insl
iret
mov
xlat
adc
cwtl
pushf
adc
vmovlps
sub
nop
cltd
rcrl
aas
loopne
mov
ljmp
je
xor
and
mov
mov
lret
mov
inc
lcall
adc
dec
cwtl
mov
mov
and
inc
push
push
popa
and
das
dec
xchg
pop
mov
xchg
adc
and
dec
mov
hlt
not
jb
std
xchg
icebp
rcrb
lods
int
xchg
insl
sub
sub
movsl
cld
lock
inc
mov
mov
stc
lock
sbb
mov
xor
aam
bound
es
insl
out
ss
inc
sarb
insl
bound
fwait
and
mov
pop
mov
and
sub
iret
wrmsr
xchg
add
cltd
xchg
push
mov
mov
scas
push
mov
das
bound
cmp
xchg
inc
sbb
negl
mov
icebp
pop
push
fdivl
out
jecxz
push
push
xor
idiv
cmpsl
ljmp
mov
xchg
mov
fisttpll
xor
adc
pop
popl
stc
or
fwait
addb
mov
lock
dec
xor
imul
cmp
lods
xchg
inc
fldt
mov
mov
push
pop
dec
pop
cmp
jp
xor
mov
test
mov
inc
imul
shll
inc
adc
popa
das
sub
sub
dec
dec
mov
and
xor
jecxz
stos
out
dec
adc
scas
jecxz
insb
sbb
jmp
outsb
leave
mov
ret
jnp
test
clc
pusha
mov
pusha
iret
daa
jle
ret
fstpl
jg
inc
push
xchg
sbb
mov
sub
clc
rcll
mov
inc
jnp
test
xchg
add
xor
imul
mov
out
cmc
adc
jle
mov
adc
leave
enter
mov
push
shll
push
or
mov
dec
aaa
movsl
mov
or
push
add
xor
lea
loop
jl
int
lods
xchg
shrb
scas
cmp
and
rcr
movsb
pop
inc
lret
in
pop
jbe
aaa
and
dec
mov
daa
push
arpl
cmp
and
jno
xor
lret
mov
push
adc
ret
xor
ljmp
push
test
test
bound
mov
es
jae
loop
std
enter
pop
test
push
test
sarl
mov
jp
sbb
cltd
add
movsl
data16
test
jp
pop
pop
mov
sbbb
sbb
repz
add
lods
dec
xor
ret
dec
enter
inc
fmuls
pop
cmp
jnp
fmull
or
arpl
sub
popl
adc
sbb
cmp
inc
xor
and
out
cwtl
push
fists
int
xchg
mov
inc
test
lret
dec
sarl
sbbl
cmpsb
gs
test
or
aad
cmp
ss
stc
call
adc
ret
ss
cmp
sub
out
ret
idiv
pop
add
cmp
les
dec
push
or
inc
fdiv
imul
call
imul
sti
add
mov
addr16
mov
dec
push
xlat
je
xor
test
pop
mov
int
push
sti
incb
inc
mov
adc
out
ja
inc
out
das
fstps
lret
mov
xchg
fnstcw
sbb
test
push
cmp
pop
test
sub
pushf
mov
cmp
aad
nop
inc
nop
je
mov
jb
cmp
je
add
jns
mov
mov
sbb
pop
stos
out
inc
dec
sbbl
add
into
sti
dec
inc
icebp
adc
inc
jl
jbe
sub
or
insb
and
inc
and
xchg
jae
fstpl
cs
cmp
cwtl
ja
xlat
cmpsl
push
jnp
mov
pushl
inc
cld
sbb
lret
enter
add
xchg
mov
mov
or
fildl
ror
out
sub
add
aam
fstl
movsb
shll
inc
or
inc
lahf
xchg
movsb
xchg
push
ljmp
pop
lods
mov
mov
sub
and
dec
sbb
add
nop
cltd
int3
mov
lcall
pop
jp
push
xchg
xchg
xchg
test
jp
mov
shl
repz
leave
movsb
jbe
sahf
jge
out
inc
jge
xchg
cld
dec
outsl
push
or
inc
inc
lods
xor
cmc
rorb
add
add
loopne
out
mov
and
ja
shlb
cmp
pop
or
mov
xchg
push
js
add
arpl
leave
out
add
inc
bound
call
jb
daa
pop
gs
xchg
mov
out
add
pop
push
adc
jp
jp
mov
and
int
test
cmc
dec
pop
inc
pop
jne
xchg
ffreep
popa
les
pop
sub
xchg
sbb
jae
push
icebp
repnz
sbb
cmp
in
stos
popa
sub
lds
or
dec
jnp
mov
dec
in
fisubs
fs
iret
xchg
ret
repnz
jp
movb
jae
xchg
pop
push
mov
xor
mov
cli
call
xor
pop
jg
sbb
fmuls
scas
aas
cmp
cs
loop
loop
pop
mov
xchg
insb
leave
aas
adc
arpl
dec
test
or
add
push
fs
rorl
pop
jb
add
insl
outsb
int3
js
leave
pop
fwait
cmp
ficomps
les
xor
rorb
sbb
xchg
test
cmp
push
test
jbe
cltd
add
or
dec
popf
daa
push
hlt
pop
cmp
xchg
jno
mov
adc
and
shll
inc
loopne
lahf
ljmp
test
sub
inc
out
test
andb
clc
pusha
push
std
jmp
sub
cli
sarb
sub
loope
mov
cmp
mov
int3
leave
sbb
lods
add
scas
shlb
sahf
xchg
mov
ret
pop
push
pushf
js
mov
and
push
lea
xchg
sbb
js
mov
sar
inc
mov
adc
fcmovnbe
pushf
mov
dec
mov
push
popw
push
loop
test
out
xor
ret
divl
ficoml
lret
add
shll
push
cmpsl
enter
icebp
sahf
sub
or
jb
cmp
jp
leave
stc
mov
scas
fs
out
loopne
mov
jae
cmp
jecxz
inc
out
xor
jb
shll
or
outsb
cmc
xor
lods
xor
in
pop
push
push
popa
adc
xchg
imul
add
sahf
xchg
cltd
add
adc
sbb
fisubs
cmp
push
fs
gs
lahf
adc
dec
roll
inc
push
daa
lret
fsts
push
stos
repz
sbb
jecxz
in
mov
cli
mov
pushf
imul
sbb
icebp
insb
das
aad
mov
nop
dec
mov
jb
jl
dec
jnp
test
adc
imul
adc
rcl
mov
and
mov
loopne
fcmovnb
dec
outsb
out
pop
ds
jno
lds
mov
inc
xchg
and
das
or
mov
add
xor
cmp
sub
jnp
pop
xor
push
cwtl
xor
cmpsl
push
into
push
mov
leave
push
cld
inc
push
clc
lret
aaa
enter
xchg
shlb
repnz
jle
cli
lahf
sub
mov
mov
mov
xor
in
mov
bound
jecxz
pop
ljmp
das
lods
repz
dec
pop
jmp
bound
sub
out
dec
adc
jp
jmp
add
std
test
push
mov
gs
in
test
fnstsw
stc
clc
roll
ja
imul
je
pop
stos
lea
push
out
test
push
xor
jmp
mov
push
or
mov
scas
mov
or
jmp
add
ja
xchg
or
inc
mov
mov
sbbb
add
add
adc
loope
loopne
les
xchg
jns
xchg
mov
xchg
loopne
push
mov
sahf
jbe
stos
in
and
mov
addr16
cmpb
shlb
xlat
push
mov
xchg
add
xor
jne
xor
jg
xchg
aaa
jae
jmp
in
pop
xor
lods
out
test
cmpsb
or
cmp
stos
aam
fsubl
fdivl
cmp
js
jle
loope
in
xor
pusha
jmp
inc
ss
pop
pop
mov
movsb
inc
insb
inc
sub
push
jle
dec
popf
addr16
add
dec
inc
jns
popa
fidivl
inc
mov
sub
imul
scas
mov
in
push
adc
xor
leave
mov
pop
hlt
inc
fwait
cmp
icebp
xor
inc
inc
mov
push
and
or
adc
cmpsl
jmp
int3
arpl
faddp
or
mov
nop
aad
stc
jmp
and
mov
pusha
jnp
movsb
jne
scas
push
aam
outsl
jbe
outsb
sub
loop
sbb
or
cmp
clc
jl
mov
push
xlat
int3
into
xor
mov
mov
push
or
mov
clc
xor
inc
sti
mov
cmpsb
sub
xchg
in
mov
mov
pop
add
mov
sub
sub
int3
dec
cmp
adc
push
movsl
je
les
mov
fisttpl
sub
sbb
add
jl
dec
jns
pop
xchg
ljmp
cmp
cmc
push
ficoml
dec
pop
cwtl
sub
xor
inc
rcl
inc
insl
jg
repnz
xor
push
mov
stos
mov
push
in
test
push
mov
sub
out
adc
cmpsl
sar
shr
enter
sbb
imulb
adc
test
push
cmp
ret
or
mov
adc
push
enter
add
sahf
mov
out
sub
cli
shl
xor
repz
or
loopne
into
scas
es
imul
lods
xor
test
lock
adc
inc
insb
imul
cld
add
repz
insw
adc
lods
mov
xchg
dec
pop
xlat
repnz
cmpsl
sub
pop
sub
dec
lcall
inc
mov
xchg
sbb
loopne
daa
mov
inc
push
shll
jno
jge
mov
dec
sbb
sti
sub
cmp
ret
add
cmp
ret
pop
clts
fstl
pop
mov
pushf
adc
sub
loopne
mov
push
mov
aad
ds
nop
sub
or
mov
repz
mov
das
jecxz
mov
xor
cmp
cli
mov
pop
adc
jb
push
dec
pop
inc
js
popa
xor
pop
adc
ret
mov
xor
jmp
push
std
mov
mov
mov
std
xchg
cmp
in
call
xor
lods
test
jno
jg
cmpsb
loopne
mov
call
mov
inc
and
dec
mov
pop
sbb
push
shlb
imulb
sub
aam
into
ja
ret
es
xchg
insl
movsb
push
dec
xor
sti
xchg
and
sahf
ljmp
sbb
pop
in
mov
jo
sbb
std
stc
lahf
cmovge
sbbl
dec
cmpsb
test
mov
in
movsb
jge
clc
or
mov
sbb
inc
rcll
mov
stos
jl
and
or
sub
mov
rcll
lret
or
test
into
xor
leave
jns
lock
mov
out
test
test
xchg
xchg
in
and
adc
fmuls
js
fwait
or
xor
add
cmpsl
xor
push
mov
jns
xor
in
mov
lret
mov
lret
push
push
cs
jl
xlat
addr16
aad
fisubl
mov
mov
mov
scas
dec
and
mov
mov
inc
push
filds
mov
jmp
mov
aam
xchg
xchg
adc
xchg
jo
stos
inc
pop
push
and
push
scas
insb
pop
pop
pop
jnp
negb
jle
pop
and
pop
jae
test
mov
icebp
jl
pop
call
xchg
xor
icebp
outsl
push
inc
mov
mov
clc
cmc
fisubrl
cmp
push
or
fimuls
add
test
adc
aam
repnz
aas
leave
sub
cmp
inc
inc
inc
dec
sbb
add
push
loop
in
ds
add
mov
int3
dec
out
pop
stc
jecxz
fisubs
loopne
inc
mov
sarb
jo
pop
and
cmp
inc
add
add
ds
and
cmp
jge
test
sbb
push
daa
push
mov
mov
jl
scas
lret
dec
pop
push
arpl
mov
mov
push
lahf
sub
shrl
ret
jg
inc
mov
cmpsb
scas
mov
jo
xor
adcl
add
es
pop
out
sub
jno
cmp
push
and
dec
shrb
jl
push
adcb
testb
jbe
xor
jno
pop
mov
mov
lcallw
mov
cmp
sub
outsb
ja,pt
adc
scas
pop
or
aam
mov
mov
arpl
and
fadds
call
pop
jnp
mov
mov
lret
in
roll
sbb
pushf
push
test
andb
sbb
push
pop
loop
data16
stc
and
add
adc
ds
mov
fcomps
push
das
movsl
ja
repz
xor
and
dec
dec
or
push
xor
mov
shrb
nop
xchg
cmp
hlt
push
scas
imul
sti
add
cli
add
lock
mov
jno
lea
xor
xchg
mov
push
in
sti
sarb
int
stos
cmp
stc
push
loopne
pop
cmp
inc
jnp
flds
jnp
les
repz
adc
and
cmp
arpl
mov
cmp
lds
pushf
mov
mov
inc
aad
sub
nop
add
loope
ss
jg
imul
jecxz
jb
enter
mov
call
rcll
aaa
cmp
or
pop
fistl
inc
jo
xchg
mov
das
enter
and
cmpsl
fsubs
ja
ror
cmpsb
push
mul
jecxz
cs
and
dec
add
icebp
test
cld
pushf
dec
cmp
adc
pop
mov
test
test
rorb
inc
sub
adc
test
dec
ret
push
dec
es
mov
dec
cs
aam
popa
int
ljmp
mov
and
cs
cwtl
out
xor
lods
and
add
mov
cltd
mov
sub
push
jae
dec
and
inc
adc
sbb
jno
shl
adc
stos
imul
out
outsl
push
and
pushf
ljmp
sub
xor
push
mov
sub
flds
lock
fidivs
enter
gs
iret
pop
in
or
and
push
inc
hlt
mov
mov
cmp
ljmp
in
mov
aas
mov
push
mov
aaa
stos
sbb
scas
jae
jp
mov
mov
jo
mov
shrl
dec
add
sbb
mov
mov
ret
adc
pop
enter
cld
imul
cmp
push
xchg
xor
in
mov
or
cld
jne
mov
adc
insb
loopne
jnp
cmp
iret
dec
in
out
add
pop
jmp
ret
pop
pop
mov
inc
cmpb
jae
xchg
popf
mov
xchg
ja
inc
ficompl
jmp
sbbl
push
jg
add
adcl
xchg
fnstsw
pop
dec
adc
movsb
cltd
inc
hlt
fdivl
cwtl
arpl
aam
inc
dec
jbe
or
je
cmpsb
aaa
mov
lea
push
add
cmp
push
pop
sub
mov
aas
rcr
add
mov
and
out
mov
stos
movsb
mov
lret
dec
pop
jbe
jne
jge
or
sbb
shll
cmp
sub
jno
and
jl
mov
cmp
popf
xchg
hlt
lea
aaa
sub
mov
outsb
test
mov
adc
add
jle
jl
sub
push
push
fwait
dec
loope
xchg
lods
sub
ljmp
and
dec
stos
and
push
jno
fistpl
subb
imul
push
aam
imul
pop
js
push
mov
lcall
or
lahf
call
xchg
outsb
mov
pop
sub
mov
les
and
push
and
arpl
push
jmp
cmp
sub
mov
lret
xchg
sbb
sbb
sahf
adc
push
inc
inc
and
pop
in
xor
mov
adc
cmpsb
and
dec
loope
fcoms
and
es
dec
cmp
jno
or
jnp
into
jne
mov
xor
cmp
adc
decl
adc
jne
add
fldenv
dec
imul
jo
scas
sub
mov
jns
gs
and
shlb
cmp
loopne
pushf
and
cwtl
inc
inc
mov
clc
fnstcw
imul
push
jle
push
stos
pop
xchg
in
sub
xchg
xor
loope
jne
pop
adc
int3
test
push
inc
jmp
shlb
es
nop
loopne
or
sti
out
xchg
jb
jle
dec
loopne
out
orb
lret
fcoms
call
adcb
sub
incl
das
test
fstpt
ljmp
call
add
mov
sub
and
adc
rcrl
pop
jbe
and
in
cwtl
arpl
inc
cmpsl
dec
fildll
mov
pop
data16
lods
xlat
lret
test
mov
pop
jp
add
rcrl
iret
std
rcrb
jns
pop
mov
aam
adc
ret
loopne
fisubs
hlt
jg
insl
jb
pop
dec
sub
mov
mov
mov
cmp
cmc
lods
xor
leave
mov
mov
push
mov
or
push
cltd
test
sti
test
test
ss
add
xchg
xchg
sbb
mov
ljmp
addb
mov
xchg
inc
rorb
or
mov
pop
mov
in
pop
cmp
sti
dec
test
push
xor
daa
xchg
dec
pop
imul
fwait
imul
push
jecxz
xchg
iret
test
mov
jns
pusha
push
in
xor
mov
jg
mov
repnz
scas
xor
jp
lahf
outsl
mov
jl
mov
inc
jl
dec
out
data16
mov
fistpll
repnz
mov
xchg
jmp
inc
mov
andl
sub
or
sbb
stos
sub
cli
fsubrs
sbb
cmp
in
jecxz
pusha
mov
adc
ret
xchg
pop
push
sub
lea
popf
jae
pusha
cmp
cltd
lcall
mov
cmpsl
inc
notb
test
into
mov
xchg
mov
jo
rclb
imul
mov
lret
jl
push
dec
dec
and
dec
dec
fdivrl
mov
mov
hlt
daa
jle
arpl
mov
dec
sbb
rol
scas
push
pusha
in
or
sub
insb
aas
fwait
int3
and
sbb
fisubrs
daa
jmp
scas
xchg
in
in
sbbb
test
add
push
rcl
jbe
cmpsb
add
jbe
sbb
rcrb
dec
pusha
les
sub
xor
mov
cmp
dec
push
adc
xor
mov
stos
lahf
data16
test
push
pop
adc
add
outsb
aaa
enter
pop
shlb
loope
inc
sbb
cmp
cmp
insl
mov
movsl
mov
xor
and
cmp
inc
ljmp
shll
adc
push
mov
js
or
pop
mov
mov
push
out
dec
imul
out
lahf
outsb
add
out
adc
fs
je
daa
mov
dec
mov
int
and
mov
out
lret
mov
ret
dec
mov
orb
mov
and
sub
mov
fiadds
pop
xlat
or
mov
loop
xor
xlat
sbb
adc
jnp
ss
test
out
and
adc
sbb
outsb
cmp
js
mov
cmc
dec
fisubl
xor
xchg
pop
into
call
cmp
popa
fistl
jmp
in
aad
data16
lods
aas
pop
rorb
scas
movb
out
test
in
xor
lock
gs
jecxz
loopne
cmc
sbb
mov
mov
mov
les
cmpsl
addr16
test
mov
jo
addr16
dec
mov
mov
lods
pop
sub
adc
push
pushf
adc
mov
jge,pn
aam
insl
xor
mov
sbb
jb
xchg
and
cmpsb
inc
je
add
jecxz
fiadds
into
xor
lea
fbstp
sbb
loop
dec
sbb
fucomi
inc
sbb
xchg
inc
add
dec
das
xchg
mov
loopne
push
shrl
cld
imulb
push
std
jl
scas
cwtl
push
or
cmpsl
dec
inc
jecxz
xchg
add
xor
pop
lret
repz
repnz
push
jl
lock
data16
jbe
jmp
out
jg
sub
cli
push
ds
jecxz
outsl
jl
es
insl
pop
in
pop
dec
and
dec
xchg
fildll
mov
popa
push
push
ret
push
sub
fsts
cli
and
into
push
jbe
push
push
add
xchg
test
jne
mov
stc
push
stc
fstpl
popf
ds
mov
cmp
adc
test
dec
xchg
xor
out
pop
push
push
fs
popa
inc
cmp
or
fnstenv
fisttpll
mov
out
adc
fildll
or
dec
cli
and
inc
std
jle
or
repnz
fwait
lcall
add
ljmp
bound
push
jns
in
xlat
in
mull
sbb
sub
inc
in
mov
lods
repz
lods
ja
jp
push
mov
lods
mov
mov
adc
mov
add
fistps
push
xchg
adcl
sub
bound
aaa
cmovle
add
ja
dec
mov
and
add
insb
lcall
jle
mov
pusha
push
or
or
sub
cmp
push
inc
cwtl
mov
mov
push
mov
popf
add
lahf
mov
jne
fcmovnu
cmpl
xchg
sbb
mov
ljmp
xchg
xor
mov
add
jl
hlt
jb
std
arpl
cs
or
push
mov
pop
jmp
pop
add
dec
and
xadd
pop
xchg
jb
dec
mov
jle
adc
stos
and
jp
movsb
mov
xchg
push
jbe
dec
adc
lds
jl
stc
daa
dec
test
cmp
xchg
jno
outsb
je
mov
scas
dec
stos
fldl
xor
or
dec
lahf
test
pop
jo
test
and
inc
inc
aaa
mov
dec
jecxz
enter
pop
fisubl
push
fisubs
aad
or
xchg
push
mov
nop
dec
mov
sbb
fwait
cltd
inc
push
or
add
jnp
sub
movsl
push
xor
adc
sub
push
pop
xor
xchg
add
fdiv
rcrl
mov
adc
aas
cmovp
cwtl
mov
mov
lahf
pop
mov
cmp
push
icebp
cmp
scas
sub
push
std
imul
outsb
lock
jb
dec
mov
mov
sahf
push
sbb
ja
jns
int
mov
pop
jmp
stc
dec
xor
movsb
fidivl
adc
ss
mov
cmp
mov
sbb
cli
mov
xor
xchg
jge
mov
cmp
out
sahf
into
cmp
cmc
adc
xor
sahf
mov
adc
loopne
daa
bound
add
mull
pop
or
es
rorl
out
pushf
sub
enter
adc
dec
stos
idiv
fbstp
adc
sbb
out
fchs
and
dec
adc
xchg
fldcw
hlt
cmp
cmc
out
xchg
imul
xchg
in
cmp
clc
pop
xor
lea
cmp
adc
fcoms
pushf
sbb
loopne,pn
adc
dec
rcll
cmp
jb
fxch
dec
into
cmp
mov
cmpsb
roll
jmp
ret
call
pop
repz
sbb
dec
add
sub
inc
sbb
ret
inc
push
pop
push
das
gs
mov
xchg
rolb
out
mov
imulb
xorb
imul
or
popa
cld
sbb
ljmp
in
cmp
pop
xchg
lods
adc
shrl
add
mov
das
es
dec
mov
inc
push
stos
dec
pop
xchg
dec
xchg
push
cmpsl
inc
ljmp
arpl
out
cmp
adc
mov
leave
addl
sbb
cltd
push
xchg
mov
push
adc
mov
sbb
xchg
sbb
out
jno
in
jae
pop
lret
mov
mov
cwtl
mov
jg
sub
mov
xor
mov
int3
adc
mov
iret
xchg
inc
sbb
push
xchg
test
popa
xchg
ja
jae
dec
in
mov
xchg
push
daa
fwait
leave
inc
sbb
add
add
mull
mov
push
push
in
adc
xchg
imul
mov
push
aas
out
jp
jmp
pop
mov
push
jmp
dec
lods
aaa
mov
bound
fistpll
xchg
push
shll
jmp
fsubrl
add
push
out
or
sub
arpl
mov
mov
insb
add
xchg
adc
in
stc
std
pusha
lock
jle
rolb
ret
sub
dec
sahf
inc
mov
loopne
push
dec
jnp
popf
sub
cmp
aas
aas
fidivl
das
xchg
bound
add
push
mov
fdivrs
adc
mov
or
pop
leave
or
or
mov
ret
push
mov
xor
je
aaa
fidivs
or
cld
insl
add
pop
pop
mov
test
lds
outsb
shrb
inc
scas
push
sahf
popa
and
rcll
push
pop
mov
push
jge
div
sbb
mov
daa
dec
cs
cmp
lret
mov
inc
dec
sbb
loopne
inc
inc
sbb
addr16
mov
movsb
inc
cmc
push
sub
test
out
cli
cmp
in
nop
cmpsb
mov
cmp
enter
pop
ds
imull
lea
loope
or
cmp
and
mov
fbld
mov
loopne
clc
rcrl
loop
sbb
mov
add
pop
push
scas
mov
pop
mov
or
sbb
fsubl
icebp
enter
adcl
push
mov
int
adc
jo
jle
pusha
les
push
hlt
and
int
xchg
jecxz
movsb
and
lods
sbb
lret
and
fisttps
outsl
sbb
push
lea
pusha
rcrb
outsl
lods
gs
loop
aam
stc
add
adc
in
push
cmp
inc
out
cmp
sub
lds
lret
imull
fsubp
orb
mov
pop
cmc
ficoml
mov
push
sbb
dec
adc
mov
push
pop
rcll
mov
data16
adc
or
insl
loope
sub
pop
sub
mov
gs
gs
loop
dec
jo
cmp
mov
stc
les
push
xchg
cs
push
cmp
popa
mov
jo
mov
mov
push
incl
pushf
imul
cs
ja
aad
enter
lock
fadds
dec
dec
inc
jne
je
out
jecxz
pop
and
aam
push
lea
xor
mov
daa
or
gs
testl
inc
pop
inc
lahf
rolb
rorb
cmp
fs
inc
or
push
mov
jb
stos
roll
shl
out
pop
xchg
std
lret
cwtl
xchg
pop
pop
cmpsl
dec
xchg
jbe
sub
sub
cld
dec
mov
mov
mov
jmp
lock
push
pop
mov
popa
rclb
dec
aam
push
dec
es
ljmp
sahf
rorl
gs
pop
mov
xchg
popa
xor
lods
jne
cmpl
and
andl
in
xlat
jne
dec
addr16
test
out
push
jg
fcomp
addr16
clc
xor
mov
repz
sbb
xchg
pop
jbe
movsl
stos
daa
dec
pop
out
sti
enter
mov
push
or
loopne
lahf
daa
cmc
xor
fmuls
inc
mov
xor
jmp
mov
cmc
jecxz
dec
mov
add
pop
adc
lods
push
inc
sub
or
adc
fwait
clc
cltd
mov
int3
inc
lock
and
out
sbb
bound
cmp
out
in
adcb
push
push
mov
jae
mov
and
xlat
jp
sbb
mov
js
mov
lea
dec
nop
loope
jne
gs
mov
xchg
out
fwait
mov
jmp
cmpsl
outsb
adcl
out
jp
sub
stc
pop
aad
int
imul
jo
jnp
out
jle
sbb
in
sbb
pusha
mov
add
pop
add
ret
xchg
pop
sti
fsubs
scas
sub
push
adc
adc
mov
jae
sahf
push
or
shll
add
hlt
mov
pop
adc
in
lock
stos
gs
hlt
or
arpl
fadds
mov
or
pusha
aas
pushf
aaa
popf
jle
or
mov
xor
ret
int3
in
add
outsb
pop
ficoms
sub
inc
mov
scas
xor
cli
and
scas
jo
stos
shll
push
scas
out
lret
repnz
push
sbbl
dec
pop
xchg
cmp
jne
jno
dec
ja
fidivrs
inc
push
sub
xor
ret
lahf
ret
adc
mov
test
mov
testl
in
sbb
enter
pop
jge
and
icebp
inc
loope
es
sbb
cmp
test
fsubl
push
sbb
push
inc
addb
xchg
call
xor
or
loopne
add
cmpl
xor
lcall
scas
fmull
popf
sub
sbb
outsb
sub
call
js
out
cmpl
and
xor
jecxz
mov
jecxz
and
rolb
idivl
int
outsb
jecxz
pop
rol
imull
lret
cmp
mov
jle
sbb
adc
sahf
popf
ret
jo
out
cmp
outsl
mov
out
loop
repnz
stc
mov
pop
fs
dec
fwait
adcl
xchg
out
ret
movsl
cli
repnz
jp
or
or
loopne
into
add
cli
xor
popa
pop
sub
jecxz
adc
xchg
add
cmp
les
insb
aad
sub
fldenv
and
sbb
shlb
loopne
ja
dec
iret
adc
fsts
pop
xlat
les
xor
in
imul
xor
inc
pop
inc
adc
pushf
push
insb
aam
jp
aas
cmpsb
jns
aad
stos
xchg
dec
out
push
aas
ja
jb,pt
add
dec
mov
push
stc
jecxz
jle
xlat
add
lea
mov
repz
xor
cld
das
and
mov
jnp
rcrl
sbb
inc
sub
push
inc
push
and
das
and
mov
add
shrb
divb
and
std
jno
out
dec
pop
jg
dec
xorl
pop
test
xchg
jae
jmp
mov
jns
mov
cmp
lock
lret
cwtl
pop
rcrl
and
repz
jno
sbb
dec
es
call
dec
adc
and
popa
xchg
mov
fnstsw
inc
sbb
fsubl
xchg
pop
cltd
test
xor
mov
mov
mov
cltd
clc
outsb
es
sbb
aaa
rcrl
mov
fs
pop
enter
xor
push
jecxz
leave
mov
dec
or
jo
mov
clc
clc
lds
shlb
test
shrb
int3
into
in
dec
roll
and
loopne
fwait
daa
mov
push
outsl
jge
add
cmp
pushf
leave
hlt
cltd
jns
imul
inc
xchg
or
mov
pop
adc
fidivs
gs
pop
lods
jp
add
mov
adc
mov
cld
imul
test
lods
mov
jbe
fistpll
fucomp
adc
icebp
xchg
jb
lahf
and
in
rcrb
push
out
push
or
or
and
mov
jnp
cld
mov
push
jb
ret
lahf
repz
sub
ret
mov
inc
mov
outsl
aaa
push
shrl
mov
bnd
ficompl
xchg
mov
imul
push
scas
push
mov
push
inc
test
mov
clc
sub
lods
leave
negl
in
arpl
push
inc
pop
sub
or
fistpl
xchg
or
leave
push
add
push
mov
pop
adc
inc
lds
shlb
scas
adc
and
xor
cmp
sub
adcl
sbb
or
cmp
mov
jl
aam
dec
clc
dec
cmpsb
push
or
cmp
jo
add
push
shll
mov
push
test
push
inc
in
into
cmpsb
shll
add
lds
mov
or
loope
gs
sub
mov
cmp
mov
movsl
movsl
cmp
sti
cmp
or
sbb
imul
nop
push
mov
cmp
js
lcall
daa
pop
stos
push
out
fdiv
mov
cltd
outsb
nop
add
fcoms
jg
jg
mov
fnstcw
mov
xchg
insl
and
loopne
cli
dec
push
int
sub
sub
clc
ret
into
in
rorl
pop
sbb
popl
test
mov
enter
push
pushf
loop
inc
sub
outsb
movsl
ljmp
jno
les
xchg
fdivrs
push
insb
cli
and
das
sbb
xor
test
xor
gs
in
mov
xor
xor
pop
dec
sarl
out
imul
pop
data16
shrl
jno
xchg
xlat
stos
aaa
aaa
sub
mov
lock
in
nop
cld
jl
inc
gs
addr16
repz
arpl
xchg
jno
mov
sbb
or
lret
cmp
incb
pop
hlt
pop
jl
mov
repz
imul
mov
sub
push
testl
je
sbb
jecxz
out
fisubrl
lea
xchg
mov
cwtl
in
mov
dec
lahf
mov
dec
sub
sbb
inc
pop
mov
adc
das
add
in
xchg
call
dec
and
adc
shll
or
sbb
cwtl
or
jl
dec
test
xchg
pop
jb
mov
inc
lret
scas
sti
pop
mov
lea
mov
jmp
lock
pop
repnz
sarb
outsl
mov
ljmp
ret
stos
cmpsb
and
sbbl
filds
dec
adc
fwait
xchg
ljmp
cmpsb
lods
dec
xor
mov
or
in
mov
pop
mov
adc
rcrb
mov
add
jmp
imul
ret
icebp
sbb
pop
int3
neg
stos
add
mov
xchg
push
mov
push
or
sbb
out
xor
dec
lds
sti
addl
xlat
int
ja
ret
or
pop
std
cltd
or
xorb
push
cwtl
push
adc
push
add
or
fstps
bound
jns
mov
or
xchg
pop
pushf
inc
mov
mov
mov
cltd
jbe
addr16
lahf
dec
mov
shll
dec
popa
rorl
push
adc
mov
jo
add
iret
jns
jmp
cmp
vcvtpd2dqx
cmp
out
pop
add
sbb
stos
insb
pop
jmp
xchg
xchg
pop
insb
inc
pop
jp
inc
lret
jle
jp
in
mov
iret
fisttpll
xchg
ret
mov
xlat
js
les
adc
push
xchg
mov
popf
lahf
pop
mov
jno
push
fimull
lcall
xchg
loope
add
lods
mov
adc
mov
repnz
sub
leave
outsb
repnz
hlt
sahf
fucom
arpl
std
inc
pop
push
jg
aam
cli
push
sbb
or
mov
pop
int3
mov
iret
sti
cwtl
inc
ret
sarb
icebp
xchg
and
sarb
sbb
pop
push
dec
pop
divb
push
cmp
daa
dec
inc
into
cmp
movsb
jno
mov
mov
lahf
repnz
out
xchg
pop
xor
js
test
movsb
daa
test
push
leave
rolb
fsub
cmpsb
inc
movsl
jbe
call
aas
cmp
sti
xlat
inc
push
aam
loope
enter
daa
sub
push
sti
mov
movsl
lods
cli
cmp
mov
lods
adc
xor
sbb
sub
xchg
xor
inc
out
pop
leave
rorl
pop
xor
lcall
lcall
mov
outsb
repz
adc
stos
sbb
jg
jg
mov
jecxz
mov
mov
cmp
lea
std
int
int
sub
sub
shlw
sbb
xor
cmc
pmuludq
dec
xchg
xchg
movsl
leave
cmpsl
stc
and
in
adc
dec
imul
sub
cli
pop
lock
push
add
cmp
int3
in
mov
aad
cmc
das
loop
xor
xor
pop
imul
jecxz
mov
lahf
dec
test
arpl
insb
outsl
repnz
ljmp
mov
sti
dec
jb
fwait
int3
lahf
stos
sub
loopne
fdivr
dec
lea
int3
flds
repnz
lds
imulb
xor
pop
adc
jbe
pushf
insb
dec
dec
jmp
add
cs
pop
rcrb
xor
mov
xchg
jb
xchg
dec
stos
stc
or
pavgw
xchg
in
insl
lea
mov
std
mov
sbb
subl
push
int
fldenv
pop
sub
dec
inc
aaa
or
das
loope
scas
mov
jae
jmp
adc
dec
divb
insb
push
cwtl
lds
pop
cmpsl
dec
in
ds
imul
mov
mov
xchg
cmp
lock
lcall
loope
aad
xor
fstpt
insl
or
pop
sbb
lods
mov
pop
mov
mov
ja
xor
mov
inc
xchg
cli
add
fbld
mov
cmp
push
enter
fdiv
data16
in
icebp
xchg
imul
dec
cltd
sbb
ja
and
and
in
xchg
ret
push
cltd
bnd
jl
insl
xor
aad
test
insb
xor
ja
mov
jle
dec
rcll
test
outsl
js
dec
cmp
dec
mov
jbe
or
clc
insl
fwait
test
in
add
jno
int3
out
mov
jmp
jns
dec
adc
xchg
les
cmpsl
and
std
mov
push
dec
cs
loope
jb
out
mov
in
mov
dec
cmp
das
mov
jge
inc
xchg
xchg
mov
xor
cmp
add
movb
or
mov
sti
stos
fucomip
dec
and
scas
jnp,pn
jae
jle
xchg
fxam
rcl
pop
pusha
pop
mov
je
mov
jbe
mov
or
insb
push
pop
scas
lcall
bound
lock
fiaddl
dec
scas
xchg
mov
dec
dec
imul
out
sbb
xchg
lds
jo
sbb
movsb
pop
and
in
into
hlt
jmp
es
rcll
loope
fidivrl
add
mov
int3
cmpsb
push
cwtl
pop
jno
fidivrs
pop
lds
add
shlb
jae
hlt
xlat
lods
cmp
mov
adc
jb
jbe
push
or
stos
dec
sbb
cmc
addr16
dec
cli
lahf
cmp
lods
jno
cmpsb
sub
push
mov
sysexit
gs
and
lahf
and
push
ja
xor
pop
dec
push
push
sbb
cmp
iret
xchg
or
pop
cmp
pop
loope
dec
push
sub
insb
jns
dec
in
sbb
movsl
mov
sub
je
fildl
mov
mov
xor
push
xor
jg
pop
lock
mov
sbb
pop
mov
and
je
jge
dec
fistps
outsb
push
sar
adc
xchg
xchg
or
sbb
les
pushf
in
aad
pushf
test
push
add
int
push
or
nop
push
add
lret
sarl
lea
ftst
sahf
xchg
push
jmp
outsl
sub
mov
stc
fsubl
sub
pop
stc
sbb
ss
dec
xlat
cmp
xor
adc
daa
add
xor
not
cmp
shrl
adc
test
testb
mov
pop
mov
adc
nop
adc
push
mov
inc
mov
or
lods
test
in
cmp
sub
cltd
mov
xchg
inc
inc
push
gs
movsl
loopne
lods
int
in
lcall
mov
repz
jns
cmp
xchg
sbb
xor
mov
pop
adc
push
cmp
push
dec
aad
cmpsb
fcoms
push
jl
jb
dec
cmp
and
or
jecxz
sbbb
loopne
out
scas
push
call
mov
lahf
rolb
repz
or
xchg
pop
iret
cmp
lods
inc
movsl
fisubs
das
shrb
mov
sahf
xchg
adc
inc
sbb
idiv
xor
std
mov
int
inc
push
push
icebp
cmp
sar
hlt
outsl
mov
lea
sub
ret
xchg
adc
enter
and
pop
xor
stc
shl
push
push
sub
adc
add
mov
leave
push
add
mov
cltd
dec
push
cmp
xchg
pop
mov
ljmp
push
lods
and
xor
aaa
cmp
shld
add
aam
cltd
sub
test
loope
push
mov
fldl
call
sub
addr16
outsb
rcrl
in
outsl
stos
jecxz
sub
xchg
or
fwait
push
je
xchg
lcall
es
xor
xchg
push
or
cmpsl
lds
clc
daa
mov
add
jb
sub
sti
ja
ss
lods
xor
inc
xchg
or
inc
cmp
pop
fldenv
add
mov
fs
xchg
hlt
fldenv
push
xchg
lods
lods
in
add
div
outsb
mov
mov
popa
pop
cmpxchg
cmpsl
jecxz
jp
icebp
out
xchg
mov
add
dec
sbb
js
ficompl
mov
sahf
lahf
fists
mov
jne
jmpw
xor
adc
out
shrb
in
jge
leave
out
and
push
xor
and
xor
insb
sbb
dec
jnp
aad
jle
test
in
xchg
iret
fwait
and
ret
fwait
pop
xlat
gs
ficoml
jae
lds
sbb
rcrb
cmp
inc
outsl
mov
fidivl
stos
sahf
sbb
out
imul
das
push
cmp
jb
dec
test
and
repnz
xor
arpl
ss
push
cltd
fsts
or
incl
lea
mov
mov
inc
mov
shlb
hlt
and
xor
movsb
jecxz
dec
push
ljmp
jge
push
push
sbb
add
daa
inc
aaa
sub
xchg
in
sub
push
dec
inc
cwtl
push
push
mov
xchg
xor
cmp
push
dec
stos
adc
out
sub
leave
mov
dec
push
in
mov
push
enter
pop
jns
or
xchg
out
mov
cmp
ret
mov
and
data16
inc
dec
and
vmovdqa
lea
in
mov
pop
pop
mov
js
fdivs
lcall
xchg
fdiv
sub
xchg
outsb
mov
icebp
pop
shlb
xlat
jg
mov
mov
sbb
out
and
je
int
mov
shl
push
adc
rclb
lahf
mov
sbb
movsb
nop
sahf
sub
flds
sbb
push
outsl
pop
insl
fsub
lret
jo
stc
xchg
fldl
adc
jae
ss
enter
out
lods
fsubr
lcall
mov
adc
cmp
mov
addl
jecxz
in
sub
adc
std
imul
hlt
addl
xor
lods
nop
adc
push
clc
pop
mov
rcll
scas
in
stc
fsubl
les
daa
inc
es
popa
fptan
das
or
repz
stc
xor
xorl
xchg
jle,pn
pop
or
into
push
pushf
ret
jmp
nop
and
aad
pop
mov
aas
repz
dec
cwtl
xor
push
mov
jecxz
inc
lea
and
or
cmp
js
xchg
mov
loope
pop
cmp
dec
xchg
pop
jb
xchg
inc
inc
xchg
rolb
lahf
sbb
mov
sub
dec
rcll
leave
xchg
std
or
andl
adc
sub
cld
lock
mov
pop
lock
pop
dec
test
shlb
shll
lret
ss
pop
adc
es
jae
stos
jo
dec
add
inc
arpl
mov
into
mov
into
test
or
decb
add
push
cltd
pusha
fs
cld
jns
arpl
jns
dec
mov
addr16
pop
iret
lds
sbb
cltd
shl
add
stos
shlb
push
out
ljmp
push
dec
test
xor
and
or
into
inc
mov
add
mov
out
test
outsb
cld
ja
mov
dec
lahf
fadds
inc
push
push
or
pop
dec
fwait
jecxz
into
push
sti
fisttps
imul
jbe
fisubl
fldt
mov
in
xchg
cs
inc
add
mov
jno
mov
lret
cmpsb
ret
or
test
mov
jmp
mov
mov
jle
jne
dec
or
ss
xchg
dec
mulb
in
in
xchg
sahf
jle
sbbl
out
jae
sub
loopne
push
or
pop
stos
lds
cmpsl
and
cmp
jnp
sti
out
imull
mov
iret
cli
xor
ret
daa
pop
push
and
in
je
aaa
mov
mov
adc
repnz
out
es
xchg
insb
sti
mov
push
call
scas
jecxz
mov
adc
fsubl
dec
pop
inc
leave
rol
div
jg
dec
arpl
js
or
aaa
pop
jp
or
lret
int3
jl
mov
faddp
pop
xchg
lds
mov
or
sbb
cmp
outsl
lods
push
cmp
jbe
xorb
add
cltd
mov
pop
cmp
loop
jno
jmp
jl
jl
dec
mov
mov
xor
mov
pop
dec
push
test
mov
arpl
sub
int
inc
in
popf
add
push
pop
mov
outsb
mov
sub
jae
cmp
es
add
dec
and
addr16
xor
mov
sbb
sub
add
pusha
mov
dec
cwtl
xor
pop
ds
nop
js
push
pop
scas
das
mov
push
and
fsubl
push
outsb
sbb
out
hlt
sub
jg
xchg
nop
mov
cmp
mov
int
xor
lahf
push
push
adc
ret
sub
out
lret
pop
shrl
mov
inc
sbb
xor
test
pop
test
loopne
loop
xchg
mov
dec
cmp
fs
sbb
insl
cmpsb
cmpsb
shlb
cmpsl
fsubs
lds
xor
dec
sbb
daa
xchg
lock
cmpsl
into
jo
mov
xor
aas
pop
fnstcw
adc
jecxz
imul
push
add
pushw
fstps
pop
movsl
dec
xlat
cmpsl
call
arpl
cmp
and
test
mov
or
jecxz
pavgb
mov
inc
cmp
cli
ljmp
xchg
rcrb
cmpsl
add
mov
pop
shr
adc
xor
insl
pop
out
and
sarl
nop
xchg
jg
jb
jl
dec
cmovb
and
das
cli
out
out
mov
dec
xchg
mov
es
sbb
mov
adc
fsts
fcmovnb
int3
das
jle
ret
mov
cwtl
clc
shlb
bound
shl
pop
lret
testb
sub
cmpsl
inc
ljmp
ljmp
lret
imul
mov
mov
lcall
outsb
xor
sbb
cmp
ret
out
jb
into
aas
insl
xchg
adc
dec
cld
mov
mov
popa
or
call
cmp
mov
bound
add
rcrl
int
sbb
adc
fstl
xor
xchg
stos
jae
in
imul
rorl
mov
stos
sar
out
dec
adc
push
sub
lcall
inc
xor
mov
xor
mul
mov
pop
xor
and
sub
mov
aad
mov
jbe
int
dec
fwait
adc
jno
sahf
fimull
add
lcall
test
les
arpl
ss
inc
xchg
xchg
pop
pop
mov
cltd
mov
test
inc
movsl
daa
xchg
jp
adc
mov
cmp
mov
daa
lea
loop
jne,pn
stos
adc
push
and
xchg
sbb
dec
jmp
imul
test
dec
fwait
mov
or
dec
push
inc
rorl
and
fs
repnz
xchg
in
jle
cmpsl
and
adc
pusha
sub
dec
es
dec
pop
inc
test
inc
lock
jae
std
xchg
push
mov
mov
mov
insl
sbb
ficompl
xchg
bound
ret
xchg
ljmp
fwait
in
inc
lock
leave
jl
adc
dec
call
repnz
sub
leave
dec
test
hlt
lret
arpl
cs
or
inc
and
scas
lcall
addr16
push
mov
push
lds
dec
mov
scas
insl
mov
cmp
aaa
movsb
stc
stos
out
push
mov
jbe
lds
mov
sbb
daa
inc
cmp
mov
jl
mov
sbb
jnp
mov
jo
ret
jge
cld
push
lock
cld
test
jl
in
scas
lret
push
jmp
enter
pop
notl
push
or
loope
mov
cmpsl
cmp
pop
cmpl
movsl
enter
hlt
cltd
jg
cmp
xor
aaa
add
cmpsb
mov
jb
sbbb
sbb
pop
sub
pop
or
jb
fmull
add
mov
cs
pop
popw
jg
movsl
ja
adc
fdivs
popf
push
push
or
int
sub
sbb
add
sbb
out
in
or
aam
add
inc
mov
mov
sahf
outsl
xor
test
xor
dec
mov
popa
loop
out
stc
add
int3
fs
cs
adc
clc
cmp
bound
cli
and
shll
mov
cmp
cltd
decb
pop
jno
into
push
out
cmc
dec
mov
pop
pop
in
mov
add
jns
adc
fwait
insb
add
aad
xchg
mov
orl
fsubp
sub
push
aad
jnp
call
sti
push
arpl
gs
dec
or
push
inc
dec
jl
fldenv
rol
cmc
pushf
pushf
rep
jne
xchg
subl
cmp
and
sub
enter
mov
outsl
mov
pushf
sbb
or
adc
fldt
clc
mov
aad
and
out
xor
jb
arpl
xchg
stos
je
fnsave
sub
mov
jmp
add
lcall
mov
and
mov
xchg
stos
dec
pop
push
fistl
mulb
inc
testb
pop
pop
aam
jbe
aaa
mov
aas
dec
stc
shrl
data16
ret
push
data16
pop
xchg
call
cmpsl
inc
icebp
jmp
icebp
sarl
cld
jne
clc
lret
fidivrl
mov
sbb
mov
pop
leave
rcrb
mov
mov
or
ret
jbe
jbe
adc
leave
dec
negl
push
icebp
lahf
ljmp
out
bound
mov
adc
dec
and
inc
movsl
mov
add
iret
cltd
into
js
test
mov
mov
push
dec
fnstsw
sbb
rcrb
in
insb
add
shll
je
mov
and
xchg
fiadds
push
add
into
in
mov
push
xor
je
mov
or
sahf
dec
pop
dec
jecxz
ds
orb
ret
lds
fwait
inc
jp
push
inc
leave
pop
add
out
xor
frstor
xchg
in
mov
xchg
jecxz
hlt
mov
xor
and
pop
daa
movsb
shrd
pop
mov
scas
out
and
mov
sub
imul
fbstp
xchg
out
testl
jp
cmpl
lock
ss
sub
push
rclb
or
and
mov
insb
pop
cmp
jnp
xchg
int
cmp
icebp
xchg
pusha
enter
mov
popf
xor
inc
sti
sub
jle
push
and
mov
in
xchg
js
int3
imul
outsb
stos
fldt
sub
jecxz
adc
xor
fadd
mov
repnz
hlt
adc
inc
roll
push
or
mov
inc
jp
mov
and
pop
sub
imul
mov
rolb
xchg
inc
xchg
mov
movsb
test
mov
jbe
jle
jge
popf
push
sbb
pushf
fbld
inc
push
xchg
sub
xchg
shll
or
cmp
push
pop
sub
xor
aas
and
inc
push
ret
push
push
cmp
pop
push
inc
mov
inc
ds
cmpsb
shll
in
imul
enter
pop
ss
push
pop
popf
loope
aam
sub
lret
mov
gs
iret
mov
cmp
lock
cmpb
sbb
and
inc
xchg
xor
jns
xor
aaa
js
dec
sub
lods
pop
mov
pop
fstl
fdivr
adc
sub
fists
shl
push
jg
mov
fisttpl
enter
fmul
mov
or
sub
sub
mull
movsl
add
xchg
ja
mov
sahf
enter
repz
add
movsb
aam
loop
jno
stc
mov
xchg
cmp
or
adc
push
out
aas
cmp
sbb
xchg
addr16
push
inc
mov
xorl
cmp
fidivrs
into
frstor
divb
pop
add
push
adc
sbb
imul
insl
mov
data16
ljmp
lods
dec
xlat
and
xchg
in
xchg
movl
jae
decb
push
gs
in
loopne
mov
dec
push
mov
add
xchg
inc
xor
sbb
sbb
mov
adc
popa
jb
ret
test
add
and
xor
or
shlb
dec
dec
std
push
fnsave
push
cmp
insb
in
mov
out
call
mov
sbb
sbb
fcomp
les
mov
inc
adc
push
das
cmp
dec
mov
push
in
ja
lret
sarl
or
push
inc
in
add
insb
mov
cmpsl
inc
jl
mov
cwtl
int
cld
mov
lret
dec
in
fcomi
in
sbb
and
sub
inc
sub
outsb
ret
add
mov
rorb
repnz
push
or
ljmp
mov
int
adc
xchg
movsl
or
aaa
xchg
xchg
and
fmull
lar
popf
test
int3
lock
sbb
push
xchg
inc
imul
or
movl
sti
xor
pop
into
mov
lahf
add
adc
and
je
call
stos
or
fadds
mov
or
push
mov
add
cld
incb
repnz
mov
repz
push
in
sub
pop
fwait
data16
push
shr
aam
into
test
aam
dec
lds
xor
mov
int3
shrb
sti
adc
addr16
jp
push
xorb
adc
dec
test
and
mov
in
cmp
xchg
leave
stos
xchg
roll
sarl
lea
push
inc
stc
sub
shr
pop
push
stos
push
push
out
push
and
cmpsl
jnp
add
jle
jne
in
xor
iret
pop
test
ret
pop
pop
mov
sbb
jae
inc
mov
sub
popf
mov
jbe
cmp
inc
imul
xchg
jno
jo
sbb
pop
scas
or
push
push
push
mov
adc
andb
cmp
hlt
pusha
push
add
in
inc
outsb
mul
or
cmp
aaa
xchg
je
or
fwait
pop
int3
cmp
push
or
lods
or
lds
in
adc
roll
adc
repnz
jbe
lods
pop
jge
rcrl
sbb
neg
daa
inc
push
push
cmp
pop
jno
clc
jl
lods
xor
push
inc
icebp
push
xor
lcall
push
xchg
loop
test
adc
inc
int
pop
cmpsb
push
fs
push
jo
enter
pop
jne
js
fistpl
inc
sub
xor
cmp
cli
ds
sbbl
mov
lahf
dec
int3
movb
add
cs
clc
inc
les
sub
sub
push
daa
fnstcw
sub
test
leave
cmp
ror
xorl
out
add
mov
mov
and
aas
pop
push
push
cltd
int
dec
push
sub
sbb
mull
lret
sbb
cs
rorl
jns
sahf
mov
nop
test
sbb
test
outsl
adcl
das
sbb
outsl
and
adc
pop
fadds
cmp
fsubs
mov
mov
xor
inc
cmp
div
or
and
flds
mov
push
in
pop
pop
and
adc
cmpsl
push
adc
xchg
out
adc
adc
dec
xlat
fs
aam
fadds
jns
jge
add
mov
xor
jno
xchg
gs
fsubs
loopne
in
ret
adc
inc
jb
add
into
inc
or
repz
xor
or
adc
sub
pop
fnstcw
adc
fsts
repnz
addr16
les
aas
outsl
setge
into
mov
je
stos
enter
xchg
out
adc
icebp
add
call
je
pop
mov
test
dec
xor
and
xor
lods
inc
sub
subb
add
lahf
mov
push
ror
inc
mov
std
test
pop
dec
cmpsl
inc
mov
icebp
outsl
adcb
scas
xchg
lret
mov
shlb
stos
mov
lock
sahf
stos
pop
lret
hlt
adc
jmp
sti
sub
sub
sbb
insl
inc
push
mov
push
into
xchg
xchg
stos
cld
ljmp
mov
mov
pop
cs
and
ja
jmp
jg
add
xchg
mov
cmp
mov
adc
add
clc
inc
mov
das
sbb
repnz
rcll
nop
pop
jns
xchg
stos
mov
out
jbe
mov
push
mov
dec
xor
dec
or
mov
mov
adc
orb
mov
ja
fcoml
imul
jp
mov
mov
jmp
lahf
xor
push
xchg
pop
add
push
enter
js
popa
add
dec
inc
jg
xlat
daa
pushf
xchg
xor
fnstcw
mov
push
addr16
jp
lea
mov
add
jbe
adc
mov
iret
mov
jno
fbstp
leave
xor
enter
lret
sbbl
out
leave
mov
or
pop
pop
push
add
jno
xchg
sbb
mov
jnp
cmp
jle
dec
push
in
xlat
popa
pusha
in
out
iret
jbe
sub
sti
and
into
inc
adc
loopne
jmp
ss
mov
jmp
inc
ljmp
xchg
enter
les
imul
scas
outsl
jmp
xchg
xchg
add
mov
xchg
leave
jp
scas
sub
stos
xchg
arpl
lret
jno
xlat
or
mov
lea
push
and
add
hlt
or
ds
fimuls
jno
movsb
mov
sarb
dec
scas
or
lret
cmpsl
or
sbb
ret
movsb
mov
dec
call
sbb
and
cmp
daa
test
test
jo
xchg
push
and
movsb
xor
cmc
and
sahf
push
imul
jp
frstor
stc
inc
pop
dec
xchg
cmp
ficoms
mov
icebp
push
adc
loope
outsb
and
cmp
mov
ds
xchg
or
and
call
incl
fsubrs
add
jo
xor
xchg
xor
add
in
and
stos
popf
mov
jle
push
dec
and
xchg
pop
outsb
test
xchg
adc
test
xchg
in
xchg
sub
fucom
and
div
push
adc
inc
int
daa
jmp
mull
push
adc
in
dec
rol
or
add
loop
mov
dec
sahf
pop
dec
repz
clc
lret
outsl
fdivrs
stos
and
stc
es
fs
pop
add
test
test
fcoms
jne
cli
mov
scas
ss
in
or
pop
cmc
mov
jnp
pop
inc
xor
adc
mov
les
add
pop
jge
adc
mov
mov
sub
pushf
mov
call
fimuls
ljmp
fs
xor
dec
cmp
inc
test
flds
data16
repz
xchg
int3
xchg
fistpl
xchg
jnp
test
adc
mov
sbb
loop
loope
and
aad
sub
aas
push
insb
add
push
cmpsb
dec
jmp
fidivl
inc
jecxz
mov
repnz
pop
pop
out
call
xor
mov
mov
dec
push
push
fcmovu
and
pop
mov
shufps
xor
mov
je
pop
and
lock
rcrl
sbb
mov
push
cwtl
loop
out
cmpsl
inc
push
repnz
inc
push
sar
rolb
daa
das
stos
mov
mov
mov
xchg
mov
rorb
lret
cmp
es
xorb
call
into
push
ljmp
data16
mov
jb
mov
popa
jge
mov
faddp
cld
add
gs
test
push
jae
outsb
push
pop
push
sbb
inc
jecxz
and
jnp
cltd
aaa
mov
pop
and
mov
fldenv
push
push
xchg
into
aad
icebp
xor
dec
movsl
xor
in
mov
adc
pop
dec
xchg
or
test
or
lock
inc
adc
popf
fwait
into
xor
add
cs
out
rcr
mulb
mov
add
in
ficomps
rclb
mov
ret
sbb
pop
jno
add
mov
enter
loop
mov
jecxz
das
dec
outsb
lock
std
cmpxchg
or
cmpl
xchg
xchg
imul
out
rcr
xchg
xchg
or
xlat
ret
push
inc
int3
cmc
stos
add
and
in
sahf
adc
jnp
xor
jle
adc
in
loope
pusha
cltd
rcrb
aad
test
cmp
inc
sbb
shll
pushf
mov
scas
cmp
popf
xlat
cmp
mov
cli
inc
imul
lret
in
imul
scas
sarb
push
in
mov
mov
jmp
sahf
jno
negb
push
arpl
hlt
and
mov
or
cs
mov
or
lea
pop
cmc
lods
int3
adc
jae
repnz
jno
push
sub
jmp
jmp
shl
sub
lcall
and
inc
sbb
or
inc
jns
cmp
jecxz
jno
adc
jl
icebp
inc
dec
cld
push
pop
pop
fbstp
push
fistps
cmp
aam
sbb
pop
jnp
jmp
mov
pop
cltd
mov
and
nop
enter
pop
repz
and
jg
loope
icebp
sub
addb
setl
in
or
pusha
add
or
jl
sbb
dec
add
push
les
push
lret
jle
imul
repnz
pop
sub
sbbl
stc
imul
outsb
or
rolb
or
mov
xchg
mov
and
cli
push
int
call
scas
mul
imul
xlat
mov
mov
icebp
jo
out
jg
sti
lea
sub
xchg
popa
outsl
inc
pusha
sbb
cmp
cltd
push
sub
nop
ss
sub
outsb
loopne
fmuls
pop
out
stos
outsl
cli
lock
stos
cmp
movsl
test
sbb
into
filds
xor
pop
mov
popa
adc
imul
dec
push
popfw
enter
push
mov
xlat
loop
fldcw
mov
aas
das
in
push
push
mov
mov
gs
jmp
loopne
xchg
mov
popa
dec
inc
cwtl
hlt
psubusw
cmp
and
repz
clc
mov
into
push
mov
sub
pop
aas
popa
or
pushf
cld
cwtl
jmp
xchg
dec
cs
xor
or
cs
fisubl
jb
or
je
movb
cmc
sbb
lea
push
jecxz
repnz
mov
and
notb
fistl
and
inc
adc
push
inc
inc
bound
fsts
lcall
daa
aas
and
es
shrl
pop
test
add
testl
popf
cmpsl
inc
xor
sub
sbb
jnp
xchg
xchg
mov
sub
jne
std
fiaddl
pop
or
jle
movsl
imul
fwait
ret
mov
push
insl
adc
out
jecxz
sbb
adc
ljmp
and
mov
mov
adc
lods
mov
insb
out
add
push
test
insl
mov
shll
push
loopne
jle
adc
lahf
clc
mov
pop
sbb
dec
xor
roll
movsb
in
pop
iret
pop
push
stos
insb
lret
cmp
sub
jno
in
je
into
xor
scas
mov
xor
mov
mov
push
mov
dec
stc
mov
into
ja
mov
inc
test
cltd
or
ja
fwait
std
negb
push
int
and
dec
xchg
mov
sub
dec
lods
jns
pop
fsub
in
call
mov
shrb
mov
sub
test
jp
mov
dec
mov
push
aam
dec
push
push
divl
dec
mov
xor
dec
fcomip
jecxz
xchg
cmp
jmp
pusha
popa
int3
xorl
out
sub
sub
ret
push
adcb
ja
mov
insb
or
jae
imul
jle
shr
in
dec
mov
iret
xor
xor
and
pop
pop
push
addl
jae
cs
push
jno
mov
mov
call
lret
jbe
fwait
sbb
dec
mov
scas
xor
jge
adc
cmpsb
mov
cmp
xchg
leave
popf
mov
hlt
inc
add
inc
ja
or
push
rclb
push
or
nop
add
xor
ficoms
inc
lret
jmp
scas
enter
mov
movsb
mov
cmp
adc
mov
jge
iret
dec
sbb
andb
idiv
dec
jno
sbb
mov
push
ljmp
jo
jbe
lahf
sbb
call
scas
mov
push
jae
mov
jp
movsb
cmpsb
fs
pop
fistpll
pop
xor
push
lahf
sti
loope
cwtl
ljmp
push
outsb
xor
or
sti
sub
insb
ret
bswap
sbb
popf
add
lock
inc
lea
js
cld
les
test
mov
push
sub
scas
fsubl
rep
outsb
sub
lock
or
das
mov
mov
sub
xor
adc
aam
sbb
int
mov
mull
inc
lods
shl
mov
icebp
mov
sahf
sahf
mov
mov
gs
jb
and
fs
lahf
xchg
int3
sti
fs
out
adc
or
rorb
fmuls
mov
mov
xor
mov
cmp
cmp
into
ret
cmc
cs
push
xor
cmp
xor
adc
push
imul
xchg
xor
out
aad
loope
or
and
sub
mov
mov
mov
pop
adc
fimull
gs
add
inc
stos
aam
fnstenv
inc
les
adc
js
outsl
xchg
push
int
sbb
or
cmpsl
mov
pop
repnz
adc
jae
pushf
outsl
int3
sub
mov
jnp
aad
and
nop
mov
mov
dec
xor
data16
test
push
out
out
inc
jecxz
xchg
adc
clc
rolb
es
call
mov
pop
mov
xor
hlt
push
fildl
cmp
testb
inc
jge
hlt
das
mov
inc
push
loop
add
scas
loop
mov
pushf
mov
sahf
push
cwtl
pop
or
nop
adc
icebp
hlt
jo
cld
dec
xchg
jecxz
add
lret
add
lock
xchg
sub
sub
js
hlt
sub
push
das
ret
inc
test
mov
cwtl
fs
fisubs
out
xchg
push
mov
repnz
xchg
pop
imul
scas
xchg
and
dec
jmp
lret
mov
and
mov
subl
sbb
fsubrl
push
addr16
pop
jp
lods
stos
pop
aas
daa
out
lahf
test
xchg
push
dec
js
call
jecxz
xor
ljmp
shrl
mov
sbb
ret
push
shrl
movsb
mov
inc
aas
adc
dec
popa
fstpl
jo
add
fs
add
jns
jecxz
in
inc
in
xchg
outsb
in
scas
mov
setg
out
mull
push
cmp
pop
dec
mov
push
xor
notl
mov
popa
adc
xor
jne
pushl
jns
fisttps
dec
fwait
xchg
or
andb
sub
or
popa
or
sub
mov
loopne
stos
ljmp
insb
je
lahf
jnp
jae
jle
andl
mov
xlat
ret
add
inc
xor
jae
add
popf
and
aad
inc
stos
repnz
xor
int
lds
xorl
cwtl
jbe
push
jae
jp
and
mov
cmp
or
arpl
adc
inc
jp
scas
or
and
adc
xchg
dec
mov
popa
cld
outsl
add
mov
pop
sbb
jge
cmp
sti
scas
cmpsl
cmpsl
dec
and
dec
dec
cmp
scas
mov
push
scas
jbe
jmp
mov
mov
int3
daa
aas
scas
sbb
sub
mov
jl
test
dec
mov
xchg
fdivs
push
cmp
lret
pop
shrl
int
inc
or
cmp
in
out
lret
sub
fstpt
pop
jno
outsb
push
jb
loope
arpl
sub
and
ds
test
movsl
repnz
and
jno
sbb
and
add
cs
xor
push
not
add
lock
dec
fildll
daa
pop
xor
fdiv
sqrtps
jae
sub
add
mov
stos
sarb
scas
cwtl
jg
push
dec
mov
ja
mov
ret
add
and
int
pop
inc
sub
and
mull
sub
mov
popf
mov
sbb
sahf
inc
repz
test
popf
jle
icebp
add
loop
sub
pop
fs
adc
ljmp
lock
push
mov
daa
xor
movsb
xor
stc
xchg
into
movsl
mov
xor
pop
lahf
adc
sub
imul
pop
cli
mov
push
mov
pop
xchg
xlat
pusha
js
sub
mov
sub
sti
jno
and
std
jne
gs
fsub
pushf
xchg
dec
inc
mov
cwtl
fldcw
and
repz
dec
lcall
and
cmp
es
movsl
adc
adc
or
jmp
pop
push
cs
out
adc
xchg
mov
nop
nop
in
loopne
jmp
push
jb
adc
dec
push
lods
push
xor
sub
xchg
scas
sti
clc
xlat
lea
leave
jl
jo
inc
mov
mov
adc
js
fbstp
cmp
and
inc
jge
sub
dec
pop
das
xchg
xor
mov
orl
int3
std
inc
pop
cwtl
adc
mov
lret
mov
cld
ja
cs
je
lds
push
sbb
mov
in
inc
orl
aam
pop
dec
ret
rolb
insl
loop
pop
dec
fnstcw
leave
xchg
nop
push
cmp
loopne
enter
mov
mov
out
mov
mov
sti
lret
jecxz
push
cltd
sbb
adc
mov
cmp
bound
clc
xor
cld
xchg
sbb
dec
cmp
cmp
dec
js
out
add
jge
mov
push
daa
jmp
pushl
shll
xor
dec
mov
xchg
pop
test
mov
ja
inc
bound
dec
push
repnz
or
pop
lret
fwait
pop
int
push
adc
add
jg
inc
out
outsb
test
lods
addr16
jns
or
in
cli
push
xchg
mov
arpl
mov
mov
push
push
jp
mov
mov
pop
cmp
mov
dec
pop
ds
jne
adc
adc
xchg
loopne
inc
jmp
testb
push
mov
sub
mov
xor
pop
dec
insb
and
pop
data16
mov
in
push
fisubl
mov
iret
repnz
int
inc
cmpsb
mov
sbb
inc
cmp
sbb
sbbl
out
addr16
xor
sbb
xchg
test
scas
sti
loop
push
mov
push
mov
loop
push
leave
mov
insb
hlt
xlat
ret
push
or
jge
inc
or
lahf
and
aaa
push
adc
add
or
int3
aam
push
pop
inc
lahf
imul
je
vmaxps
shlb
lods
and
decl
push
mov
stos
jbe
pop
cmpl
jno
jno
cmp
ds
pop
cmp
add
jl
mov
dec
sub
and
mov
divl
popa
pop
inc
lahf
push
aaa
in
mov
pusha
test
or
adc
cwtl
lods
jo
in
inc
in
aad
inc
enter
pop
mov
imul
push
into
sub
scas
test
aad
pop
js,pt
movsl
stc
sbb
sub
mov
mov
mov
xor
jle
pop
mov
js
int3
nop
pop
cmpsb
dec
rcrl
fimull
fdivr
xor
sub
adc
adc
dec
jg
subl
mov
ss
bound
xor
push
push
pop
icebp
int
test
pop
push
mov
pop
test
mov
scas
shll
mov
sbb
add
test
mov
orb
outsl
fimuls
ret
out
mov
add
mov
adc
rcrb
cmp
jg
sbb
sbb
loope
xor
loope
or
lahf
into
mov
jmp
mov
subl
cltd
imul
add
out
cltd
es
je
scas
sbb
mov
or
sbb
mov
xchg
pop
and
cmc
and
pavgb
pop
mov
inc
shll
test
loope
imul
push
test
sbb
jg
cmc
movsl
aam
pop
pop
jl
adc
push
in
pushf
jmp
imul
push
and
frstor
pushf
aas
mov
inc
jb
outsb
dec
fldl
jecxz
jg
xchg
jae
hlt
fwait
lret
loop
mov
bound
mov
roll
lret
fcmovnu
test
add
inc
mov
comiss
pop
mov
push
es
or
sub
pop
adc
std
in
stos
gs
into
inc
aad
cmp
sbb
icebp
mov
mov
dec
mov
mov
loope
cs
push
mov
push
aam
mov
scas
cmpsl
jb
insl
leave
cmp
dec
aam
pop
xchg
iret
xor
push
popa
sub
aaa
inc
lods
dec
and
lret
jae
and
jle
fimull
pop
xor
testb
test
in
xor
xchg
sub
mov
clc
insl
pop
incl
gs
out
roll
data16
cmp
out
gs
xchg
iret
repz
jb
call
push
xor
xor
or
fcmovnu
xor
adc
cmp
cli
xchg
inc
mov
test
xchg
dec
sub
inc
insl
clc
or
mov
fwait
mov
movsb
push
mov
cmp
lcall
bound
in
jns
fdivs
mov
adcl
sub
mov
pop
jg
addr16
xlat
xchg
mov
mov
lahf
enter
aas
mov
nop
jae
inc
cmp
xchg
mov
or
fwait
mov
sub
addr16
mov
mov
cli
push
aas
add
and
int3
jbe
js
mov
xor
pushf
in
in
or
shll
push
mov
ret
sub
popf
fs
dec
cmp
mov
popf
jae
outsb
mov
gs
neg
mov
xchg
xchg
jnp
loopne
sbb
imul
add
mov
fnstenv
mov
xor
aam
hlt
and
hlt
inc
subb
or
sbb
das
aaa
andnps
add
ror
into
mov
fidivrs
lds
fld
rcrb
and
cmp
movsb
push
push
cwtl
push
add
jbe
aas
cmp
iret
insl
sbb
mov
cmp
sbb
jl
push
dec
fwait
fs
push
xchg
sahf
shll
add
inc
push
mov
test
aam
xchg
inc
daa
outsl
das
cmpsb
push
push
js
rcll
xor
test
cmp
lea
int3
cmpsb
enter
fiaddl
jmp
outsb
add
cmpsb
pushl
xchg
in
inc
mov
fcomps
xchg
js,pn
xchg
ds
and
and
push
xor
fsubl
popf
popa
outsb
xchg
imul
shr
mov
or
stos
aaa
loop
addb
and
arpl
and
xchg
int
subl
fsubrp
js
mov
test
mov
mov
sahf
xchg
stc
test
out
daa
ret
outsw
mov
in
stc
mov
cmpl
sub
cmp
cmp
out
stos
cmpsl
cli
mov
iret
push
cmp
bnd
xlat
mov
mov
xor
jne
fnstsw
push
imul
add
test
lods
xchg
lret
xor
xlat
fisubs
sbb
mov
dec
mov
pushl
cmp
and
in
dec
add
stc
inc
in
push
fstps
pushf
push
repz
xor
pop
dec
pushf
cmp
stos
in
or
mov
jmp
cmp
adc
ficoml
sub
jb
out
mov
je
out
xor
movb
inc
lea
cmp
mov
call
leave
cmpl
shl
or
rorl
inc
mov
inc
into
cwtl
mov
push
pop
add
pop
outsb
call
shll
popf
inc
std
xchg
lods
push
cwtl
mov
cmpsl
cmp
mov
jns
mov
lret
push
xchg
je
test
mov
jle
lock
icebp
ljmp
mov
or
insl
mov
popa
dec
iret
and
xchg
push
cmp
ljmp
mov
mov
ficompl
sub
inc
and
sbb
cmp
mov
dec
test
xor
xchg
in
popa
mov
mov
icebp
clc
test
inc
xchg
sbb
sbb
rcrl
pop
jnp
lds
enter
push
out
push
fisttpll
push
jmp
xor
or
ret
xor
cs
mov
and
sub
ds
dec
sbb
and
adc
mov
mov
mov
add
mov
repnz
sub
fldenv
push
mov
xchg
dec
sbb
xchg
pop
dec
jnp
int3
addr16
mov
sbb
addr16
jp
jl
mov
pop
dec
mov
push
mov
ret
jne
outsl
adc
mov
xchg
adcl
iret
dec
xchg
mov
stos
out
bound
sub
scas
inc
popa
push
jle
imul
mov
cmpl
dec
mov
pusha
mov
enter
sahf
or
xor
arpl
xchg
jae
sbb
push
popf
lcall
inc
in
xchg
fisubl
xchg
rcr
mov
sub
imul
push
dec
push
out
mov
into
mov
mov
jle
insl
roll
sub
cmp
clc
repz
xchg
jl
aaa
into
sbb
adc
or
sbb
stos
test
in
and
dec
add
fistl
scas
inc
insb
imul
arpl
xchg
push
dec
data16
std
cwtl
pop
jge
inc
icebp
sbb
test
sbb
ret
js
jno
mov
in
dec
or
push
jo
or
push
pop
xchg
fisubrs
lahf
addr16
inc
mov
imul
int3
fwait
ds
cs
mov
loope
pushf
adc
inc
imul
xor
ds
popa
push
and
fimuls
adc
and
add
loopne
xor
adc
dec
hlt
leave
pop
shlb
in
push
pop
movsb
mov
stos
push
mov
sub
inc
outsb
cli
mov
aas
ror
popa
lret
out
mov
in
mov
xchg
fdivl
aad
push
and
mov
enter
push
jns
negl
and
sbb
out
sahf
sub
jmp
addb
outsl
pushf
inc
pop
loop
push
pop
stc
jo
inc
filds
mov
outsb
icebp
cmp
cmc
pop
aad
sbb
cli
out
pop
push
xor
jne
cmp
xlat
lods
or
imul
lods
in
cmc
dec
inc
push
xor
jnp
pop
cld
scas
sbb
jo
imul
lret
icebp
add
pop
pop
data16
fldcw
sub
lcall
les
mov
push
lcall
scas
add
outsb
and
dec
pusha
addr16
inc
les
repz
adcb
xor
cmc
lret
mov
addr16
jle
in
pushf
sbb
jmp
iret
mov
aad
mov
jns
enter
mov
fisttps
sub
je
dec
mov
movb
ret
call
lods
repz
mov
fwait
ret
adc
xchg
fstpt
inc
pop
jae
ljmp
fildl
das
xor
mov
mov
push
dec
shl
movsb
sub
std
cmp
aam
cmp
pop
repnz
cld
clc
add
lret
sarl
mov
test
lock
pop
movsb
xchg
and
les
insb
jno
aam
jne
ret
jge
pop
lods
mov
push
dec
lret
xchg
dec
jbe
ljmp
insl
lods
and
cmp
dec
pop
add
mov
jb
sbb
add
sbb
inc
cltd
mov
mov
or
mov
clc
jecxz
jl
jecxz
popf
sbb
xchg
mov
pop
es
stos
pop
mov
adc
pop
cmp
push
mov
mov
or
mov
divl
mov
jnp
and
fwait
xor
std
cmp
dec
adc
fwait
outsl
cmp
push
or
cld
adc
add
pxor
push
lods
bound
les
pop
arpl
movsb
or
mov
sbb
mov
rcrl
or
lock
mov
aas
push
dec
rcrb
jne
mov
mov
inc
pandn
or
out
push
and
addl
out
adc
icebp
fimull
jnp
push
mov
push
je
lds
jnp
and
jle
into
and
sub
shll
push
iret
sysret
or
sub
pop
imul
sbb
xchg
push
inc
cmpsb
insb
popf
sar
mov
arpl
ficoml
xchg
pop
xchg
sub
mov
scas
and
add
inc
push
mov
fistpl
leave
lock
adc
mov
test
inc
xchg
je
jbe
popf
push
lea
or
pusha
inc
int3
xchg
pop
mov
aam
out
les
lds
icebp
shl
aam
and
mov
cmp
int
movsb
or
sahf
hlt
xorl
imul
movsl
or
cmp
cmp
sbb
jno
jns
jl
sahf
cli
dec
jns
rorb
pop
js
xor
jb
mov
adc
test
push
mov
inc
rorb
outsb
sbb
in
mov
enter
pop
insl
vpunpckhdq
pop
loope
divl
pop
dec
jne
loop
jb
loope
xchg
movsl
push
fwait
xor
add
or
and
fadds
shrl
xor
mov
js
fistpl
lcall
aad
sti
jne
sub
cmpsl
cmpsb
outsb
pop
add
adc
movsl
sbb
jg
sbb
cmp
imul
and
xor
daa
rclb
sub
push
pop
lret
in
out
push
mov
sbb
jecxz
sahf
int
out
test
sub
jnp
loop
imul
push
xchg
adc
bound
mov
xor
mov
mov
cli
and
xchg
cmp
nop
fimull
mov
add
xor
add
sub
jg
inc
sbb
imul
cmc
in
scas
jne
lods
fs
mov
out
push
sub
push
mov
aad
movsl
sti
sub
stos
fisubl
sub
dec
mov
inc
and
xchg
insb
les
mov
or
xchg
and
fwait
sbb
xor
insb
and
push
pop
jno
or
pushf
movb
push
add
aas
cld
aad
fdivrp
nop
cld
imul
addr16
dec
sub
popf
je
cld
sub
ret
movb
push
lea
cmpsl
jp
int
inc
mov
sbbb
inc
icebp
subl
fldt
mov
inc
cltd
cmp
inc
add
lods
das
adc
mov
lods
dec
and
inc
push
inc
mulb
loop
loope
call
cmpsl
cmp
das
icebp
daa
daa
mov
lret
xor
inc
mov
xor
inc
pop
ret
dec
fwait
rclb
jecxz
aam
shr
ret
or
adc
xor
push
insl
jle
orb
cmp
ljmp
fldt
pop
mov
xchg
mov
cmp
ja
ja
das
jp
cltd
hlt
dec
jno
inc
cmc
mov
push
jb
jbe
xor
xchg
sbb
test
or
shl
jno
push
add
out
mov
xchg
movsb
test
xchg
jle
ljmp
pop
jge
cli
mov
or
sub
xchg
adc
sub
sbb
arpl
mov
ljmp
xor
adc
pop
call
push
lahf
xchg
add
add
out
ljmp
jns
pop
and
or
xchg
stc
mov
mov
mov
cmp
pop
dec
mov
icebp
push
mov
in
mov
call
mov
insb
dec
fildll
xor
xchg
and
adc
jno
lock
out
movsb
inc
jmp
stos
sub
push
and
jnp
insb
mov
inc
jnp
ja
jle
inc
mul
xor
sub
mov
iret
outsb
dec
scas
ret
push
mov
call
sbb
add
xchg
popf
call
inc
loop
lods
fcmove
jo
xchg
xorb
imul
insl
scas
xchg
push
xchg
jle
push
cmp
cs
addr16
hlt
add
arpl
pushf
inc
mov
mov
push
dec
cmp
or
jns
add
sbb
pop
add
fisubs
fadd
fmull
rclb
dec
scas
add
ds
scas
pop
movsb
repnz
push
in
jbe
cmpsl
inc
jge
rorl
xor
mov
jno
pop
jl
testb
call
rorl
xor
int
mov
push
add
popf
test
xor
dec
icebp
sbb
jno
das
enter
pop
lods
push
out
jl
adc
sub
sub
cmp
ja
movsl
adc
aad
cmpsb
sbb
sbb
push
aaa
xor
shrl
pop
adc
inc
js
pop
cmpsl
pop
mov
movsb
aas
push
ss
fsubl
rcll
adc
and
jg
pop
inc
mov
fisubs
mov
mov
cmc
and
push
push
sub
pop
int
and
sbb
lret
nop
sarl
mov
pop
sbb
mov
cmp
js
outsb
outsl
pop
xchg
loop
std
sar
fidivs
fs
mov
ss
cmp
cmp
imul
out
xchg
ret
cli
push
scas
inc
xor
sub
cmp
sbb
push
into
adc
dec
cmc
fcoms
xchg
pop
cmp
fldt
sub
adc
stos
or
sbb
inc
data16
lods
dec
sub
mov
test
xlat
fwait
jnp
sub
cltd
sahf
mov
inc
lods
sti
fsubrl
int3
lods
cltd
cmp
aaa
clc
adc
mov
in
addl
jmp
les
pop
repz
sbb
xchg
in
pop
sbb
imul
pop
and
jnp
sub
sub
jno
inc
jmp
inc
fisubrs
cmp
aad
arpl
xlat
mov
cmp
mov
arpl
cmp
roll
in
lea
or
mov
xchg
mov
sbb
mov
lcall
add
inc
pop
sahf
pop
das
repnz
push
mov
sub
outsl
and
int
rcll
cltd
std
mov
addr16
mov
inc
jne
ret
icebp
sbb
std
lret
lahf
bound
mov
daa
outsl
lock
and
shrb
je
pop
stc
mov
sbb
ret
fwait
iret
pushf
es
sub
gs
dec
rcrb
lret
js
ljmp
outsb
lods
sti
dec
out
push
imul
dec
mov
jge
add
or
push
addl
xor
pushf
lods
clc
pop
push
addl
lods
push
shll
xor
insl
stos
cmc
adc
out
icebp
xchg
mov
push
outsb
push
dec
dec
sbb
or
jle
mov
sub
ret
inc
jp
jnp
pop
dec
mulb
mov
or
inc
stc
fwait
inc
lret
rcrb
inc
repnz
push
mov
out
leave
lcall
mov
rclb
aam
mov
dec
add
addr16
cmove
repnz
stc
jae
mov
scas
dec
xchg
xor
arpl
add
xchg
incl
cltd
xchg
in
push
or
jae
aad
mov
cmpsl
push
cmp
stos
pushf
fists
add
hlt
insb
test
jnp
xchg
xor
lods
jo
cmp
cs
jno
fmul
int
pop
ret
inc
pop
popf
inc
je
arpl
lcall
cvtps2pd
inc
popa
leave
or
jge
call
movl
scas
ljmp
adc
iret
mov
andl
out
arpl
cltd
inc
mov
mov
inc
dec
mov
pop
push
aaa
or
das
add
stc
int3
imul
pop
xor
sbb
lds
clc
shrb
scas
loope
jl
xchg
adc
cmp
or
aaa
jbe
pop
in
pop
repnz
sbb
daa
cmp
and
data16
dec
push
es
push
pop
and
push
push
cmp
xchg
push
aam
lea
add
cmp
and
je
dec
in
pop
or
leave
pop
jmp
and
sub
sub
fimuls
inc
cmp
daa
sbb
xor
popl
lds
sbb
test
add
xchg
into
push
push
xchg
ret
iret
pop
cmp
filds
and
rclb
inc
fcoml
loope
in
rclb
adcl
leave
adc
jg
cltd
aas
mov
sub
mov
mov
imul
jge
in
sub
add
sub
add
neg
test
add
adc
add
and
testl
cmp
xor
aad
arpl
xchg
pop
push
orb
ss
or
cmp
es
or
sbb
aaa
cli
mov
lea
sarb
cmp
jg
or
xor
cmc
lahf
into
xchg
fisttps
xchg
pop
pop
mov
xchg
imul
dec
add
movsb
stos
lods
xor
mov
push
xlat
fisubl
aam
mov
in
stos
push
cmp
iret
jl
gs
loopne
inc
pop
dec
jge
push
xor
les
pop
repz
outsl
sbb
cmpsb
rolb
sub
jmp
pushf
sbb
push
jmp
and
pushf
mov
dec
nop
mov
mov
movsl
popa
jb
stos
adc
dec
sbb
je
pop
jecxz
jae
or
ja
call
ljmp
sbbl
out
pop
pop
mov
cmpsl
inc
cmp
push
mov
jecxz
cmp
mov
shl
out
sub
das
xchg
hlt
cwtl
jne
pop
cmpsl
cmp
mov
aad
inc
cld
jns
or
push
fstpt
mov
lds
lock
mov
sarb
mov
aam
andl
insl
dec
cmp
call
jmp
xchg
aam
popa
xor
out
mov
mov
shrl
inc
in
push
js
cltd
popa
push
mov
imul
dec
jmp
mov
pusha
shll
sarl
mov
stos
in
es
push
mov
mov
ljmp
xor
jl
xor
in
mov
xchg
out
test
push
test
daa
mov
or
jmp
xor
or
imul
fwait
jne
lods
push
in
xchg
add
and
out
test
call
jns
je
in
or
inc
mov
loopne
mov
add
dec
addr16
daa
sbb
mov
adc
inc
mov
scas
xchg
dec
imul
mov
call
adc
outsb
orl
out
ret
jne
neg
xchg
lcall
stos
lss
insb
popa
push
sub
jecxz
int
loope
mov
pusha
or
insb
iret
sub
test
and
adc
mov
jae
dec
pop
push
mov
popf
ss
cmpl
xor
xchg
cs
sbb
inc
gs
out
scas
dec
jno
push
sub
and
aaa
mov
aam
xchg
leave
push
subl
inc
stos
lcall
lret
or
xchg
push
add
sti
int3
push
pop
mov
fisubrs
sbb
rolb
scas
sar
and
outsl
cmp
pop
iret
movsb
or
insb
jbe
xchg
add
add
rcll
daa
cmp
xchg
jno
xchg
pop
jl
and
dec
movb
xor
sbb
lahf
adc
sbb
push
lret
and
inc
repnz
loop
divl
in
aas
ss
push
push
ljmp
pushf
arpl
out
aam
ds
mov
movsl
and
sub
pop
clc
rcrl
push
scas
add
adc
pop
fwait
sbbb
test
xor
repnz
mov
aad
push
in
ljmp
jae
outsb
xchg
xchg
shlb
mov
imul
dec
add
and
ror
fs
adc
inc
scas
loop
cltd
mov
outsl
shrl
hlt
sbb
fistpl
in
mov
subb
test
stc
dec
jb
fs
adc
mov
push
in
dec
jmp
shl
pop
lds
mov
je
cmp
mov
or
push
loopne
nop
cmc
outsw
xor
popa
lea
cmpsl
mov
imul
repnz
pusha
andl
mov
pop
insl
fcom
sbb
leave
ds
in
push
into
mov
cmp
mov
gs
adc
fsts
dec
faddl
neg
sub
les
notb
lret
cmp
jg
lahf
xchg
rcrb
scas
xchg
ficoml
pushf
sbb
aaa
sbb
mov
ds
lea
push
jb
sahf
pop
dec
xchg
jp
je
add
push
adc
xor
call
test
outsb
nop
xorl
loop
mov
xchg
inc
outsl
push
inc
push
mov
das
mov
cltd
mov
lcall
shll
and
std
or
cwtl
xor
mov
lods
ja
cld
movsb
mov
lret
jge
lods
mov
add
mov
aaa
lock
pop
and
loopne
dec
adc
ret
mov
jne
insl
xor
push
xchg
dec
mov
add
xor
lods
rcll
mov
fistpl
jb
and
sete
add
mov
test
cmpsl
mov
dec
adc
mov
sbb
iret
push
xchg
sahf
aas
sbb
xchg
fstps
push
stos
shll
out
mov
mov
and
jge
or
adc
out
cmpsl
xor
lods
int3
mov
xor
loop
jge
gs
adc
shll
testl
or
mov
dec
add
add
xchg
mov
mov
jns
sbb
in
or
out
pushl
mov
mov
mov
aad
push
mov
pop
repnz
cmp
dec
dec
dec
sub
movsl
enter
dec
filds
or
movsl
shrb
gs
sbb
cmpl
out
pop
jae
rolb
or
shl
stos
cmpb
and
jbe
insb
int3
mov
dec
jle
pop
or
dec
mov
pusha
cmpsl
inc
push
iret
mov
jns
int3
sbb
inc
mov
imul
test
mov
scas
inc
pop
sahf
sbb
jecxz
or
sbb
inc
sbb
push
stos
out
adc
popa
and
adc
ret
mov
into
hlt
in
mov
inc
xchg
mov
or
cld
js
aaa
mov
out
or
xor
add
and
int3
inc
pop
pop
pop
nop
add
lds
imul
and
and
sub
movsb
xchg
pusha
inc
push
fcmovbe
sbb
dec
and
jge
fstpt
daa
aaa
daa
insl
cmp
mov
lcall
lahf
mov
in
sbb
fidivrs
sbb
das
aad
push
jp
jle
ret
pop
mov
inc
adcl
mov
mov
push
pop
imul
fwait
loope
int3
scas
sub
mov
mov
insl
inc
sbb
outsb
mov
scas
xorb
sbb
out
cmp
insb
sbb
sbb
fstpl
or
pop
pop
push
cs
fsubl
ljmp
sbb
pop
jg
and
mov
pop
xor
xchg
in
cmpsb
and
les
lret
jb
sub
and
lret
add
inc
sub
sbb
xchg
test
dec
or
sbb
mov
sti
jmp
xor
adc
mov
ss
or
out
and
out
imul
or
clc
into
mov
je
xor
scas
icebp
adc
mov
add
or
mov
sub
pop
jp
sub
or
sbbl
adc
mov
loopne
jnp
dec
cmp
ljmp
add
les
xchg
xchg
xchg
sub
adc
cmp
xor
push
xchg
adc
aam
pushf
jb
mov
cs
dec
dec
nop
push
outsb
aam
push
pop
imul
add
loopne
adc
xchg
call
push
in
or
lret
xor
daa
jns
pop
mov
sahf
ret
push
insl
das
popl
mov
push
nop
gs
dec
adc
cmpl
cld
cwtl
jmp
cmpsl
ss
mov
sbb
cld
iret
lock
mov
xor
lock
cmp
jecxz
sbb
aas
adc
jnp
pushf
ret
dec
stc
mov
cmp
push
insl
sbb
dec
mov
sub
js
fwait
popa
arpl
aaa
mov
cmpsl
add
mov
in
add
and
jb
jecxz
push
ja
push
jle
mov
clc
or
fadds
dec
xchg
adc
pop
jge
xor
ret
out
sbb
xchg
rol
push
call
ljmp
xchg
or
add
int3
mov
xor
mov
test
movsl
mov
dec
iret
mov
inc
mov
or
fiadds
rol
fstps
sub
mov
push
cmp
out
data16
xchg
bound
js
fbld
in
pop
fs
xor
push
or
jp
addr16
jecxz
jp
mov
xchg
into
orb
xor
fdivrl
ret
fbld
xchg
or
pop
mov
xchg
dec
sbb
out
dec
enter
inc
or
inc
fs
cmc
jb
and
cmp
aaa
repz
jle
mov
dec
pusha
inc
cmc
pop
iret
ljmp
pop
jle
loopne
xchg
mov
push
bswap
insl
popf
test
and
cmp
inc
fimuls
ficoml
and
sbb
into
lahf
imul
push
push
repnz
arpl
stc
inc
mov
jp
test
das
in
arpl
cmp
or
ja
xor
dec
cmpsb
insl
or
test
add
loope
mov
loope
out
jge
scas
scas
jle
shll
dec
ss
movsb
push
mov
push
sub
das
jge
cmpsb
xchg
sbb
jecxz
sub
jno
pop
sarb
mov
movsb
cmpl
arpl
jno
cmp
mov
test
popa
js
inc
adc
bound
or
cmc
dec
pop
test
repz
test
sub
ljmp
nop
pusha
movsl
xor
dec
and
addb
add
and
xor
gs
fbld
push
js
cs
sahf
addr16
lcall
inc
fcoml
mov
outsb
dec
cmpsl
dec
adc
in
loop
jg
outsl
or
shrl
loop
push
and
mov
stos
sub
ret
pop
and
lret
in
rcr
cmp
inc
push
sahf
cld
push
jns
in
lret
ds
mov
stc
mov
xchg
adc
popf
add
dec
cmp
push
lret
adc
cli
and
pop
cmp
lcall
mov
fmul
xor
dec
push
pop
mov
jbe
bound
imul
sub
ds
test
mov
sub
sub
int3
push
in
ds
cwtl
mov
cmp
icebp
gs
mov
into
dec
lcall
fstps
adc
bnd
lock
cmp
or
popf
clc
in
pop
lock
adc
jne
jmp
pop
in
cs
aad
popa
ljmp
sti
fnsave
push
push
je
pop
sub
or
sub
std
call
daa
or
adc
pop
sarb
mov
pop
inc
aas
repz
cmp
gs
mov
pop
das
outsb
cld
jl
adc
xchg
mov
sbb
divb
mov
cmpsl
xor
pop
fdivp
pop
popa
cli
add
mov
out
out
mov
pop
daa
shlb
mov
push
es
aam
lods
or
push
ljmp
out
lods
cmpsl
mov
mov
and
mov
push
mov
cltd
pop
rcrb
stc
mov
push
inc
mov
ffree
sub
clc
inc
wrmsr
xchg
shrl
inc
jmp
pop
sub
out
jge
xchg
pop
jbe
push
fidivrl
decl
cwtl
xor
mov
push
mov
aaa
pop
sbb
test
inc
inc
ja
adc
add
xor
add
into
and
add
jb
lret
out
inc
pop
jp
fsubr
arpl
dec
inc
in
add
xchg
test
divb
out
and
addr16
xchg
jp
addr16
mov
pop
daa
mov
pop
add
dec
adc
insl
mov
push
lahf
filds
icebp
xchg
dec
ljmp
sbb
push
out
mov
sub
mov
adc
aaa
fildll
pusha
es
insb
mov
lahf
cltd
jle
fnstenv
push
lds
pusha
fnsave
jmp
pop
mov
pop
inc
mov
stc
insl
push
shlb
popf
stos
lret
je
dec
inc
pop
adc
dec
push
hlt
xchg
xor
xchg
sbb
push
test
lcall
cmp
lock
jecxz
repnz
loope
mov
arpl
inc
cwtl
cs
loopne
out
push
pop
or
fisttps
mov
pop
out
add
jg
int3
rcrb
pop
and
jmp
fs
movsb
test
fidivs
jge
push
or
add
lods
daa
xor
sahf
lret
jno
repnz
dec
adc
adc
stos
in
xor
xchg
dec
and
and
test
sub
pop
inc
lahf
adc
cmpsb
and
in
hlt
or
enter
pop
out
jmp
and
push
sbb
cwtl
push
ds
xchg
movsl
cmp
stos
and
and
mov
cmpsl
push
xor
hlt
mov
cli
js
jecxz
sub
sbb
in
push
jmp
push
icebp
sub
movsb
xor
adc
mov
pop
aad
cmp
mov
outsb
stc
push
cmp
xor
cltd
jno
sub
test
lret
pop
shll
mov
cwtl
cmc
sbb
fimull
test
jecxz
outsl
mov
mov
and
inc
stc
jno
push
lods
xlat
adcl
mov
ss
fnstsw
cmp
adc
out
out
imul
push
sarb
out
or
or
or
mov
fists
pop
aad
cmp
xor
test
and
jecxz
mov
lods
into
dec
dec
mov
pop
rcl
bound
and
jmp
outsl
in
push
xor
adc
pop
xchg
fisubl
daa
sbb
stos
add
dec
stc
jge
inc
jl
adc
les
xchg
nop
xchg
mov
lret
sbb
xchg
jne
sbb
loope
mov
cmp
pushf
enter
add
cs
mov
nop
push
orl
mov
idivl
dec
imulb
je
add
sbb
lea
ret
out
mov
test
dec
or
cmp
sub
sub
das
dec
mov
mov
mov
inc
insb
rcrl
or
std
lret
sarl
and
cmpsl
xor
mov
xor
cld
and
fs
mov
xchg
inc
xlat
leave
pop
jge
cld
rorb
add
adc
aam
mov
inc
adc
jae
cmpsl
in
cs
push
test
popa
xchg
adc
fnstsw
inc
xchg
stc
and
icebp
pop
cli
cmpxchg
cltd
ds
and
xchg
xchg
push
add
ds
add
dec
xchg
sbb
adc
pop
sarl
stos
mov
fidivs
xchg
dec
mov
call
mov
loopne
push
jmp
popf
xchg
imul
lahf
data16
je
ja
frstor
mov
push
mov
push
addr16
xor
mov
jno
add
lea
out
and
push
bound
lock
fistps
jno
and
in
clc
mov
lock
push
jp
mov
shlb
cs
cmc
xor
jne
jne
mov
lock
xchg
push
inc
xchg
jmp
in
popf
subl
xor
sub
xchg
xlat
push
jbe
inc
stos
fildl
add
ja
mov
jnp
lea
insl
push
in
in
loop
pusha
js
jmp
ret
mov
in
cld
add
lea
mov
add
mov
fdivrl
mov
cld
push
xchg
mov
sub
scas
mov
mov
mov
and
test
xor
xchg
hlt
lds
add
cwtl
cmpsb
or
insl
add
aaa
repz
inc
dec
add
outsb
iret
int3
add
pop
sbb
lds
push
imul
cmp
scas
and
scas
cmp
insl
pop
movsb
xor
mov
jbe
mov
jge
out
sbb
mov
cmp
sbb
scas
fnstsw
dec
dec
adcb
xor
out
ljmp
repz
test
sub
negl
montmul
cmpsb
add
aad
movsb
mov
pop
mov
mov
sub
rcr
stos
mov
ds
cmpsl
ljmp
dec
lds
stos
int3
mov
inc
add
andl
pop
cld
dec
sub
popl
lcall
ljmp
out
outsb
adc
out
shlb
adc
mov
cmpsl
stc
and
frstor
int
icebp
sub
stos
lret
mov
pop
push
dec
mov
mov
sahf
inc
sbb
sbb
sbb
mov
adc
sub
xchg
sti
lods
adc
xchg
ljmp
nop
adc
cli
xchg
xor
mov
cmp
rcl
or
jnp
cmc
sbb
xor
fbld
adc
push
xlat
imul
cmp
jb
push
inc
or
mov
sub
dec
sub
jmp
in
testb
gs
not
loopne
popa
in
pop
fidivrl
sub
cmpsb
les
jbe
xchg
jbe
push
sbb
int
hlt
fwait
imul
ss
jo
jae
mov
cs
and
nop
stc
dec
dec
aas
shlb
jb
aam
dec
insl
or
imul
jecxz
or
sbb
popa
cli
xchg
pop
call
movsl
fstps
mov
sbbb
clc
jge
push
inc
dec
test
rol
das
sub
dec
mov
jbe
fwait
and
mov
divb
sbb
jb
out
sbb
cmpsl
xor
hlt
jae
icebp
or
sbb
push
mov
bound
push
push
and
pushf
subl
pushf
int
rcrb
sub
inc
aam
jnp
ret
cmc
xchg
insl
iret
rcll
mov
loopne
ljmp
insb
lods
jge
xchg
mov
addr16
and
mov
add
and
xchg
lods
stc
mov
mov
movl
ret
add
xchg
hlt
fstps
arpl
shrw
mov
stos
jb
out
inc
lret
xchg
push
nop
add
xor
and
or
push
xor
cli
mov
iret
mov
dec
xor
iret
test
cmp
dec
test
and
in
test
lock
fwait
pusha
cmpsb
dec
push
adc
pop
add
test
and
add
sbb
orb
adc
in
dec
inc
xchg
and
cs
ljmp
stos
push
cmp
jp
fstps
mov
cmc
mov
shll
fsubrs
filds
rcll
xchg
scas
rorb
cmpl
pop
sub
orl
mov
mov
insb
js
aaa
jnp
aas
cmpsb
jle
daa
daa
in
arpl
iret
pop
mov
ret
test
out
inc
mov
in
xchg
shrl
pop
in
ret
popf
stc
fcmovbe
mov
pop
js
fisubrl
test
dec
imul
scas
cmp
push
lret
adc
mov
jae
adc
test
inc
hlt
adc
mov
rolb
loop
scas
je
push
test
or
scas
adc
pop
and
cli
pop
dec
adc
movsb
rol
lea
ror
pop
scas
sbb
xchg
cmp
lret
mov
idivl
pop
and
jge
pop
jbe
jp
pop
daa
xor
cmp
xchg
jl
je
icebp
rolb
jno
dec
mov
adc
aas
loope
lahf
test
push
ret
inc
mov
int3
enter
inc
enter
pop
gs
test
xor
loope
loopne
sub
push
cmp
pushf
ds
add
push
and
clc
aas
loop
cmpb
lods
add
scas
jge
test
test
pop
and
js
sbb
fistps
xchg
dec
cmc
fcoml
pop
sub
jnp
adc
jge
ret
jg
push
mov
sub
mov
loop
and
nop
pop
push
aas
clc
outsb
int
add
cmpsl
mov
notl
lret
fwait
rcrl
adc
js
int
in
mov
xor
jb
loop
test
stc
fildll
repnz
xchg
leave
jge
cmp
mov
test
adc
cmc
cli
mov
popf
jno
adc
jbe
sub
push
dec
outsl
in
xor
inc
fstpl
clc
xor
fldt
push
adc
nop
and
data16
adc
lods
pushf
xchg
sbb
push
pop
cli
sub
sub
mov
sub
mov
fsubl
sub
loopne
aad
dec
mov
cld
inc
mov
sbb
les
popf
es
cmp
push
sbb
or
sbb
pop
or
adc
mov
jmp
jbe
cs
mov
push
aas
pop
mov
repnz
in
mov
mov
es
nop
test
xor
call
mov
andl
int
jecxz
push
pop
jo,pn
inc
roll
fdivrl
cmp
mov
add
addr16
jns
add
sbb
push
cmpsl
xor
xor
jle
jnp
or
test
orl
testl
shrb
loope
sub
sbbl
test
lds
dec
popf
xchg
xchg
test
insl
popa
mov
out
jp
xor
int3
and
daa
mov
out
add
push
xchg
cltd
lods
or
sahf
test
mov
ret
mov
fnsave
insb
cmp
fildl
push
sahf
jo
ret
pop
sub
test
cmpsb
test
push
jmp
mov
decl
loop
add
pop
in
mov
inc
loope
dec
fwait
adc
ja
clc
add
dec
pop
inc
ljmp
fwait
and
push
mov
gs
ret
mov
out
loop
mov
xchg
sbb
xchg
es
jno
cmp
jecxz
test
test
xchg
mov
mov
loopne
mov
fs
dec
mov
lahf
fdivl
mov
xchg
pop
jmp
jp
mov
out
mov
mov
push
hlt
sub
and
sbb
jnp
mov
jle
cmp
in
dec
dec
pusha
scas
ja
iret
data16
xor
sub
jp
shll
jae
or
push
sbb
push
popf
and
push
mov
fidivrl
pusha
fisubl
out
cmp
inc
sbb
int
imul
scas
lahf
dec
jb
push
aas
adc
nop
mov
mov
hlt
pop
data16
dec
cmp
enter
sbb
push
inc
push
xchg
or
call
fadd
and
inc
xchg
jg
jl
adc
arpl
jmp
push
adc
xchg
nop
mov
movsb
dec
outsb
push
gs
inc
jge
mov
movsb
daa
xor
rcrl
lret
xchg
add
adc
pusha
mov
push
push
cli
imul
lret
push
cltd
and
lea
test
push
imul
lcall
push
sub
loope
jg
sub
call
mov
movsl
dec
cmp
jne
adc
shrb
sbb
jne
and
pop
xor
cs
jmp
adc
js
aas
rolb
lcall
push
out
mull
in
cmc
sub
inc
outsb
fcoms
sub
rcrb
xchg
jg
mov
cmp
outsb
mov
jb
and
xchg
push
inc
cmpsl
dec
int
sbb
test
adc
lret
je
mov
sub
mov
mov
adcb
outsl
push
ss
fstps
stc
xchg
xchg
fs
shll
jo
ss
inc
cmp
inc
cmpsb
mov
cli
in
pop
cmp
mov
push
inc
or
xchg
cmc
adc
xor
pop
xor
imul
xchg
add
out
orl
mov
add
xlat
xchg
sbb
push
mov
cwtl
adc
sti
push
jns
inc
bound
outsl
rclb
jnp
jle
push
lahf
push
inc
mov
fnstenv
jge
jbe
repz
xchg
cld
add
sbb
inc
mov
cltd
ljmp
in
mov
leave
sbb
jmp
mov
cs
jns
aad
sahf
xchg
nop
scas
sbb
aas
push
xor
es
repz
jecxz
pop
sub
and
push
call
and
xchg
cmpl
mov
ss
pop
push
inc
das
ljmp
mov
nop
test
cli
idivb
xor
xchg
rolb
xor
mov
mov
push
cld
cmpsb
xchg
imul
inc
jae
mov
lds
push
sbb
pop
fiaddl
ljmp
lds
es
enter
aad
dec
cwtl
add
ret
and
mov
loop
cmp
lods
push
push
ds
lods
sbb
and
ret
bswap
cmp
add
push
push
cltd
jecxz
xchg
test
aas
xchg
and
fstpl
mov
xor
xchg
aaa
add
leave
and
pop
aam
xchg
or
xchg
and
cmp
fmul
inc
xchg
add
or
gs
sbb
jl
xchg
and
and
ja
dec
mov
inc
xorl
dec
fwait
mov
xchg
dec
add
fiadds
out
rcrl
and
cmp
imul
ror
mov
out
mov
and
pusha
addr16
aas
inc
jp
sbb
mov
add
mov
roll
mov
leave
add
roll
jmp
inc
inc
pop
adc
lods
out
fldcw
sub
ja
notb
xor
xor
cmpsl
and
cli
jnp
out
in
jle
inc
cmpsb
in
xchg
stc
pusha
dec
mov
iret
lds
ret
aam
xchg
movsb
in
inc
int3
mov
push
push
fiadds
popf
inc
jnp
mov
pop
jge
ficoml
push
cs
lahf
cmpsb
imul
scas
add
mov
adc
inc
push
repnz
scas
leave
xchg
cmc
addr16
cmpsb
movsb
push
arpl
mov
inc
movsb
mov
or
fidivrs
aad
stos
movsl
mov
int3
ret
mov
neg
and
lds
je
scas
fstps
mov
sub
imul
jb
movsb
aad
push
push
mov
bnd
push
mov
xchg
idivl
lock
and
xor
stc
cmp
push
bound
mov
fisttps
imul
xor
add
lahf
jmp
adc
icebp
add
or
inc
iret
cmpsb
mov
fs
pop
jecxz
aas
push
out
loope
cvttps2pi
stos
adc
aas
sahf
andl
std
lods
les
jg
push
add
pop
repnz
insb
scas
xor
jno
xchg
js
cmc
sbb
sbb
lcall
cmpsb
fsubrl
enter
and
adc
xor
jbe
mov
jecxz
adc
ljmp
ret
inc
lret
xor
jl
shl
gs
ss
sti
mov
into
lods
sahf
sub
test
aam
outsl
xor
aas
mov
dec
movsl
ds
adc
aaa
popf
ss
out
dec
cmp
decb
fsubp
adc
popa
cli
and
sbb
js
sbb
or
push
das
into
pavgw
xor
xor
adc
xchg
pop
adc
push
cmp
pop
movsl
int3
data16
pop
lods
push
or
shlb
sub
movsl
jno
inc
and
in
add
sti
add
or
mov
je
jne
lea
push
fldcw
dec
repz
mov
outsl
sbb
jle
mov
pop
outsl
mov
jecxz
je
fldpi
shlb
aad
cmpsl
adcb
testb
inc
push
and
shrb
jecxz
fs
das
pop
inc
call
loop
mov
push
sub
dec
mov
imul
pop
je
push
inc
fucomip
in
adc
and
leave
shl
bnd
loope
sbb
pop
rcrl
lods
idiv
insb
repz
addr16
cwtl
dec
loopne
cmpsl
xor
lods
mov
lea
add
ror
dec
lret
xchg
mov
test
add
pop
stc
fs
call
add
ret
mov
xchg
mov
test
dec
xchg
xor
xchg
add
pushf
ljmp
push
lods
mov
ljmp
fdivs
mov
sub
nop
push
cltd
sbb
push
mov
add
push
adc
fldl
or
jl
or
jo
stos
pop
jg
bound
insb
inc
sbb
push
in
and
jmp
xor
xchg
xor
xor
es
cld
pop
mov
inc
daa
xor
imul
popf
dec
adc
jle
adc
sbb
push
std
xchg
ds
stc
push
bound
mov
popf
xor
xchg
in
lock
pusha
mov
fdivrl
addr16
ja
jp
dec
xchg
mov
inc
sub
mov
les
adc
jne
pop
xchg
mov
sub
dec
xchg
push
or
xchg
adc
andl
out
test
sub
jb
call
stos
cmpsl
xchg
shll
rcll
mov
in
mov
in
ds
pusha
in
test
push
jg
pop
enter
xlat
jbe
jae
imul
mov
mov
inc
fadds
fcmove
lds
xchg
out
add
inc
inc
imul
sbb
push
pushf
push
jg
clc
sub
mov
insb
in
sbb
or
bound
arpl
inc
cmpsl
enter
or
daa
aaa
ret
or
and
pop
fldl2t
xor
lds
stc
out
pop
sbb
andl
idivl
push
add
xchg
jge
sbb
sahf
andb
add
cmp
arpl
addr16
test
in
push
sbb
jns
or
cmp
lahf
or
pushf
push
aas
lret
movsl
test
and
inc
push
lock
iret
in
ja
out
enter
pop
and
and
ss
clc
sub
cmp
xchg
ds
fdivs
movsl
pop
loope
and
cwtl
insl
xor
xchg
mov
call
xor
test
idivb
inc
les
cwtl
movsb
fwait
lcall
sub
sub
outsb
sahf
jecxz
adc
push
xor
jg
mov
mov
jmp
lds
inc
adc
dec
popa
jge
pushf
add
sub
fucomi
notl
inc
pop
shll
mov
ss
into
lock
xchg
fildll
lret
add
dec
stc
add
xchg
arpl
adc
inc
sbb
xchg
aam
cmp
mov
and
inc
xor
daa
cmp
sub
cmp
cmc
sahf
test
xor
in
bound
pop
data16
imul
mov
mov
lods
push
stos
imul
cs
sub
xor
outsb
jno
sti
mov
sbb
gs
scas
loopne
stos
sbb
aam
jg
mov
fwait
repz
mov
repz
jnp
pop
and
aad
xchg
cmp
jmp
jbe
cs
add
mov
cmp
aas
cmp
jb
dec
rorb
push
je
aaa
push
jecxz
mov
sub
outsl
call
mov
fildl
movsb
pop
sub
jo
stos
pop
pop
xor
jmp
sub
lea
mov
cmpsb
call
jecxz
inc
jo
std
push
sarl
mov
lock
fs
cld
cld
shll
cmc
mov
or
sahf
mov
adc
rcrl
dec
pop
shrb
adc
aam
pop
addr16
xor
es
sbb
addr16
mov
popf
xchg
inc
jne
ljmp
push
mov
pause
in
and
clc
loop
jl
mov
test
add
push
rcll
push
faddl
xlat
mov
dec
cli
rol
mov
lds
iret
decl
mov
fcoms
add
inc
xor
xchg
divb
xchg
mov
dec
js
dec
shr
sti
test
sbb
dec
je
filds
or
or
lahf
add
sbb
xchg
push
mov
mov
jne
jg
loopne
dec
sbb
in
shlb
xchg
pop
loop
mov
mov
mov
xchg
shll
xor
mov
stos
cmp
pop
stc
dec
outsb
jge
orb
aas
das
push
dec
jnp
cmp
adc
fisttpl
push
xor
xchg
out
movsb
arpl
insl
xor
stos
sbb
insb
and
movsb
jnp
scas
lock
xor
in
dec
jb
jg
cltd
iret
subl
ret
inc
pop
push
outsb
inc
loop
lea
or
outsl
sbb
or
fidivrl
or
jne
adc
daa
add
enter
jecxz
aad
rcll
mov
mov
dec
js
cmp
inc
arpl
push
js
stos
jbe
or
aam
pop
aaa
cmpl
pop
add
and
fisubrs
mov
test
fiaddl
and
stc
cmp
int3
lds
pop
fwait
jbe
pop
push
jge
and
daa
das
lahf
pop
cmp
gs
jnp
jl
push
xor
xor
mov
and
adc
mov
inc
stc
idivb
pop
mov
imul
fcompl
loope
xor
push
cmp
int
test
icebp
movsl
lret
cmc
and
lcall
call
jb
inc
scas
repz
loopne
xor
call
js
push
jbe
pop
push
or
repz
push
sub
cmp
cltd
notb
jmp
icebp
fnstenv
add
loop
adc
cs
into
jp
xchg
mov
push
sar
dec
mov
sbb
mov
jno
int3
test
les
cltd
mov
xchg
cmpsb
add
fs
sahf
jg
xchg
sub
jbe
je
js
push
mov
out
lods
xchg
cmp
addr16
test
into
aad
loope
gs
cmp
insl
div
pop
popl
cwtl
imul
outsl
loop
cmp
mov
movsl
mov
push
cmp
push
jl
sub
repnz
popa
cwtl
pop
sub
fstl
loopne
jo
dec
xor
int
out
leave
insl
fstps
insl
out
out
and
xchg
inc
inc
pushf
sbb
hlt
fdivr
push
mov
pop
aad
lcall
dec
sub
sahf
sbb
jp
repz
out
nop
inc
push
aas
fildl
jb
test
dec
shlb
jecxz
dec
popa
sub
nop
std
sti
inc
call
pusha
imul
cmpb
fistpl
pop
lret
inc
in
sub
inc
dec
pusha
inc
das
xchg
mov
or
not
stc
push
mov
test
or
cwtl
ret
mov
cmpsl
incl
mov
cmp
sar
mov
lret
fs
jecxz
out
or
mov
push
and
arpl
and
jnp
adc
aam
test
push
es
nop
pop
insl
push
xchg
dec
mov
xchg
andb
ja
popa
sbb
fwait
mov
push
cmp
mov
jmp
push
adc
int3
test
sub
aas
push
xchg
ss
fst
call
pop
xchg
out
sbb
call
jl
aad
bound
xor
test
mov
push
xor
cmp
or
cmp
bound
aaa
test
test
sarl
addr16
testb
xchg
or
popf
scas
fwait
dec
shrb
outsl
push
add
insl
sbb
pop
ret
xor
xor
xchg
mov
in
ret
lods
push
mov
inc
fstpt
push
pushf
push
mov
jp
lds
mov
and
lods
dec
inc
mov
lahf
mov
inc
sub
xchg
adc
xchg
cmpsb
jmp
lahf
out
cmp
sub
push
push
lcall
std
out
insb
popl
jo
aas
sbb
xchg
sbb
cmp
loop
rol
ja
mov
inc
in
sbb
jae
fisubl
push
daa
xor
mov
push
adc
into
fisubrl
lods
jo
xchg
mov
sbb
or
imul
xor
sub
add
scas
mov
stos
mov
and
hlt
xchg
test
decb
xchg
or
dec
stos
lock
inc
cmp
or
adc
test
rcr
or
lds
cwtl
xchg
rclb
scas
jbe
ja
loop
cmp
movsb
jbe
test
jbe
push
js
mov
jne
and
scas
daa
sarb
aaa
sbb
jl
mov
dec
sbb
mov
xor
adc
lahf
inc
or
test
mov
mov
cmpsb
adc
lret
das
enter
pop
mov
adc
sub
and
fdivrl
test
out
movsl
imul
daa
sbb
sbbb
sbb
sbb
push
add
div
lahf
pop
out
mov
pop
xchg
sbbl
dec
add
cmp
outsb
fs
mov
rol
cltd
pop
jg
pop
push
xchg
cmpsl
mov
shll
inc
push
dec
jmp
int
jnp
sub
loop,pn
xadd
loopne
sbb
xchg
push
mov
and
sahf
adc
icebp
test
sbbb
into
insl
loop
test
stc
jb
adc
dec
adc
and
and
sarl
cmc
fsubrs
shll
or
xchg
xor
cmp
push
lods
or
arpl
mov
xor
xor
push
push
pop
scas
lods
repz
push
lret
inc
leave
adc
jns
add
pop
repz
or
sub
dec
fwait
sub
mov
inc
and
push
daa
push
mov
loopne
dec
aas
dec
xchg
pop
push
fsts
ret
repnz
xchg
or
mov
push
sbb
das
je
xchg
sbb
pop
mov
clc
pushf
jne
shr
lea
fstpl
aad
sbb
nop
sbb
jb
cmp
dec
aaa
adc
add
test
leave
cs
and
or
fdivl
jge
repz
aas
data16
mov
inc
je
xor
mov
sbb
rolb
rorl
popf
test
std
pop
xchg
add
sub
popf
sub
adc
jecxz
rorl
in
hlt
enter
mov
rorb
imul
sahf
dec
adc
dec
into
popf
xlat
mov
out
dec
test
into
ljmp
in
cmp
mov
in
inc
pop
mov
dec
mul
add
je
cltd
mov
test
jmp
pop
ror
add
sbb
in
xchg
sbb
das
js
adc
stos
sub
xchg
push
gs
aas
clc
push
push
mov
inc
incl
jecxz
xor
rorb
mov
ljmp
jbe
dec
sahf
inc
imul
pop
pop
jl
fnsave
or
outsl
into
fwait
jp
sahf
push
out
inc
add
dec
or
or
sbb
jns
les
xchg
cld
or
mov
loope
pop
or
aaa
lea
adc
out
mov
aas
rorb
xor
pop
add
cmp
jo
jmp
jno
inc
adcl
clc
out
aas
ds
arpl
adc
imul
insb
cli
xor
jle
repnz
in
popf
mov
iret
inc
adc
ret
dec
pop
insl
roll
inc
clc
in
lods
jae
js
push
ljmp
mov
push
mov
scas
adcb
sub
cmp
jno
jo
mov
add
gs
and
jb
div
shlb
test
cs
push
inc
in
or
lahf
add
pusha
or
fisttpll
data16
push
fisubrs
std
cwtl
shlb
scas
push
pop
jge
jne
mov
movsb
add
cmc
jbe
xor
jge
ficompl
fcompl
jmp
shrb
jl
int3
jbe
mov
je
ret
sub
xor
insb
mov
lahf
gs
push
mov
jns
push
test
pop
cmpsb
cwtl
pop
in
sub
enter
pop
ffreep
sbb
mov
sub
xor
ds
ds
movsl
jo
pop
and
jns
push
sbb
pop
add
cmpsl
add
cmp
mov
fs
js
xchg
mov
lcall
mov
sub
lods
iret
outsb
fcomip
adc
lahf
push
jg
int3
jns
fidivrl
lock
ret
mov
sub
and
push
loopne
push
fidivs
sub
test
rcrl
shrl
add
dec
dec
add
xchg
add
mov
int3
test
add
outsl
lods
inc
loope
mov
dec
adc
add
sahf
adc
dec
cmp
ljmp
cli
in
cmp
aam
push
cmp
movsl
mov
push
pop
into
fwait
sbb
repz
sbb
and
pop
int
pop
adc
out
imul
lcall
into
push
lods
push
leave
addr16
mov
repnz
mov
sti
mov
jp
gs
cmp
xorb
inc
adc
fcmovu
mov
or
std
xchg
mov
xchg
lret
scas
pop
sbb
push
out
adc
rcrb
xchg
xchg
jg
pushf
and
in
inc
cmc
lret
mov
nop
testb
aas
sbb
loop
scas
sub
je
adc
jecxz
cmp
xor
lret
sub
call
fidivs
jo
movsl
subl
out
fstpl
mov
inc
jle
jge
inc
or
mov
ja
xor
inc
cmp
add
or
sar
add
pusha
cwtl
cmp
push
cmpsl
sub
jmp
icebp
jmp
ljmp
mov
xchg
mov
cli
jnp
sbb
pop
jne
js
and
sub
jmp
ret
fidivs
es
pop
aaa
insl
and
dec
jg
out
xchg
dec
sub
insl
mov
dec
sub
lds
mov
hlt
test
add
test
jge
cltd
testb
loopne
add
push
sbb
loope
and
inc
clc
pop
adc
xchg
sbb
xchg
ror
sahf
mov
stos
sbb
out
clc
jmp
les
pop
sar
loopne
in
xor
out
stos
mov
flds
add
sarb
cs
rorl
mov
or
adc
fs
mov
dec
add
shrl
jae
bound
in
jl
add
mov
mov
mov
enter
mov
jp
adc
mov
mov
out
pop
push
dec
or
jnp
mov
stos
insl
fistps
xchg
mov
int3
jmp
cmp
pop
andl
add
pop
and
push
outsb
add
jae
and
xor
fnstsw
mov
jle
mov
jae
push
adc
ret
and
ss
add
pop
jae
pop
je
lods
adc
popf
or
addr16
aam
push
xchg
imul
hlt
mov
icebp
jge
push
mov
xor
mov
mov
adc
arpl
sbb
or
inc
test
aaa
mov
pop
insb
add
dec
int3
pop
clc
lcall
push
ficoms
scas
lds
cmc
rorb
jne
or
stos
cmp
dec
out
movsb
mov
cmp
sub
jbe
int
jge
mov
sbb
mov
repz
jno
movsl
or
addr16
cli
jne
push
cmpsb
fildll
jo
int
lahf
test
stos
push
mov
rclb
cmp
cmpsb
sbb
enter
pop
push
cld
push
mov
nop
sub
cmp
cmp
cmp
push
and
cld
lock
fsubrs
addb
sbb
and
push
in
pop
jge
fcomps
rcll
js
xor
lcall
mov
add
sbb
jno
adc
jp
fistpll
inc
clc
mov
imul
shlb
push
push
push
inc
out
cmp
icebp
testl
cmp
push
sbb
jp
sahf
pop
pop
mov
repnz
jbe
mov
mov
stc
loopne
xchg
sub
jae
stos
ss
cmc
stos
cmp
movsl
movb
xor
xchg
xor
lret
ss
daa
into
jle
jbe
mov
xchg
pop
pop
in
adc
mov
in
adc
mov
pop
add
lods
in
lcall
or
sub
mov
sbb
cmpsb
sti
outsb
fwait
outsb
xchg
rcll
sbb
dec
inc
inc
daa
inc
fnstcw
gs
movsb
and
xchg
mov
cmp
int
pop
out
add
adc
mov
pushf
lret
in
sahf
jmp
arpl
mov
mov
nop
shrl
aas
mov
cmpsb
dec
and
mov
jecxz
pushf
cmp
xor
pop
lea
sbb
add
mov
mov
pop
addl
sbb
pop
push
pop
mov
jno
inc
cltd
lods
mov
mov
cs
cmp
out
test
dec
add
jg
hlt
rcr
cmpsl
sub
mov
shlb
test
jno
mov
test
mov
je
jp
xchg
push
call
sub
jo
aam
addb
pop
mov
insl
pop
cmp
dec
jp
clc
xchg
cmp
ja
popa
pusha
push
mov
aad
test
jg
sbb
orl
cltd
sub
popf
mov
push
fistps
fldl
xor
xchg
cmc
aam
shll
sbb
add
and
ret
pop
es
stos
pop
sub
out
pop
jne
xchg
int
cmp
dec
mov
jg
pop
xor
mov
or
inc
xchg
xor
push
scas
mov
push
inc
rorl
xor
inc
ss
ja
push
lahf
dec
inc
jmp
inc
or
or
daa
fdivr
ljmp
mov
cli
out
sti
push
or
out
and
leave
jnp
push
xchg
ds
lcall
mov
andl
cmp
mov
push
mov
mov
insl
sub
pop
es
movsb
mov
cld
dec
fistpll
cld
xchg
mov
jb
pop
andl
popf
stos
ds
pop
fwait
push
push
lods
sbb
xlat
and
pop
insb
rolb
scas
jnp
pop
daa
jle
sub
pushf
jnp
pusha
jmp
cmp
ret
jo
fstpt
sub
stos
jae
adcb
xor
popf
xor
inc
push
in
cmp
inc
into
pop
xchg
cltd
pushf
or
and
sub
inc
icebp
scas
push
push
push
push
call
adc
test
mov
or
leave
pusha
sahf
fs
push
movb
mov
or
ror
aaa
jge
mov
pop
addr16
adc
call
pop
hlt
xor
hlt
icebp
sub
shlb
dec
and
enter
jecxz
push
mov
xorb
push
jge
and
sbb
xlat
daa
sub
fnstsw
es
mov
andl
xor
and
lahf
mov
outsb
mov
push
xchg
and
addr16
xor
add
cli
push
or
ja
insl
pop
pop
mov
mov
imul
sub
xchg
adc
movsl
jle
arpl
mov
lea
push
or
sbb
sbb
jno
sahf
xor
and
inc
int3
mov
js
pop
addr16
adc
stos
lcall
push
fsubrl
xor
je
jno
pop
rclb
xchg
jg
mov
mov
lea
fidivs
push
and
push
push
and
sub
cli
testl
rcll
mov
cmp
sbb
mov
sahf
std
xchg
pop
test
out
orb
ret
loop
in
stc
xchg
icebp
sbb
mov
ss
jge
enter
pusha
cmpsl
je
or
daa
cli
push
mov
aad
imul
mov
cmc
andl
sub
jae
or
scas
notl
into
sbb
lods
fldcw
scas
out
xlat
dec
fnstsw
mov
test
sti
sbb
cld
fwait
mov
dec
rorl
int
inc
cmp
ret
fdecstp
add
repz
jns
push
in
sub
loopne
cld
adc
pop
pop
mov
mov
and
pop
movb
and
icebp
nop
lods
jmp
jb,pt
outsb
dec
pushf
inc
scas
je
mov
and
aaa
inc
call
call
pop
mov
push
push
inc
sbb
dec
jns
pop
add
pop
inc
lea
inc
or
inc
mov
push
das
add
or
in
frstor
jp
notb
add
cwtl
scas
push
xchg
cmpsl
sub
fcomip
xchg
je
cld
shll
lret
and
orl
iret
push
pop
mov
jo
sub
and
lcall
ret
cld
xchg
es
repnz
fimull
outsb
lret
dec
imul
fdivl
popa
ja
cmc
lods
inc
pop
cltd
mov
mov
sahf
xor
addr16
add
cwtl
cltd
fs
test
adc
pop
push
mov
movsl
cwtl
clc
into
insl
pop
xchg
cwtl
sbb
jmp
int
divb
xchg
inc
dec
mov
xor
repnz
or
pop
pop
mov
pop
dec
sarl
test
das
jnp
lods
push
dec
dec
xor
lea
sbb
or
ffree
fwait
pop
popf
and
iret
xchg
addb
gs
fidivl
adc
daa
dec
jns
ret
jmp
jmp
and
mov
ds
or
fwait
inc
jp
sub
in
into
mov
mov
xlat
cmp
jne
in
mov
out
lcall
jmp
shlb
inc
out
push
and
or
push
in
mov
xchg
and
fs
cmp
fidivrl
repnz
jle
xor
ret
cmp
iret
pop
mov
ret
out
pop
adc
lea
push
jae
jmp
cmpsb
popf
pop
cmp
std
push
stc
inc
ror
hlt
jmp
xchg
lock
imul
subl
sbb
ljmp
cltd
xor
xlat
int
hlt
mov
push
arpl
or
inc
mov
dec
xchg
lods
ss
cmp
aam
push
sub
add
stos
popf
pop
repz
in
ficoms
xchg
scas
repnz
cli
and
add
movsb
mov
or
jbe
pop
xlat
jge
sahf
or
or
insb
cmp
pop
push
outsl
jno
lret
nop
jl
sbb
dec
fcom
cld
push
insb
and
xor
jge
in
ret
push
xor
test
in
imul
sarl
jb
test
pushf
cli
shrb
test
sub
mov
stos
ds
sbb
and
mov
push
jb
add
adc
out
sahf
inc
add
mov
sbbb
insb
and
lcall
outsb
fcoml
xchg
sub
mov
and
xor
jg
xor
mov
jecxz
mov
push
mov
mov
clts
pop
outsl
pop
int
sbb
testl
int3
out
in
mov
aaa
sbb
mov
sahf
mov
shl
subb
add
in
loop
mov
stc
dec
cmp
movsl
cmc
mov
adc
test
and
in
cmp
sbb
cli
test
xor
mov
or
or
inc
xchg
cmc
dec
shlb
pop
add
test
inc
ret
in
sbb
add
out
imul
cmpsb
lods
mov
test
sub
sub
in
lock
sti
int3
pop
fsubrl
sub
loopne
jae
dec
push
push
mov
jp
fldcw
jmp
xchg
adc
mov
in
into
out
cmp
cltd
inc
xchg
mov
adc
sahf
jmp
and
imul
xchg
aas
test
jb
xchg
addr16
adc
je
in
jecxz
sub
lea
movsb
jge
clc
xor
mov
loope
mov
popl
es
stc
fisttpl
jp
inc
nop
xchg
in
inc
iret
out
repz
loop
pop
mov
pushf
js
and
test
test
lahf
std
clc
lock
cmpsl
sub
repz
outsb
stos
out
je
lret
pop
push
mov
fs
sub
add
lcall
aam
or
mov
pop
es
sub
dec
jo
adc
dec
cmpsb
popaw
mov
pop
lods
stos
popa
or
vaddpd
lcall
add
jb
fwait
pop
pushf
test
loop
mov
mov
push
gs
in
clc
or
xchg
jecxz
sbb
push
rcl
les
stos
in
fucomp
and
xchg
pop
sbb
push
push
arpl
mov
bound
adc
xor
mov
mov
pop
loop
dec
cmp
lds
jp
dec
es
mov
cmp
decb
decl
push
jb
push
add
mov
out
mov
xchg
and
in
imul
mov
stc
mov
jp
inc
xor
test
cmp
fidivl
xor
popa
fucomi
fistpll
xchg
jg
out
fcoms
aaa
cmp
mov
insl
mov
dec
inc
addr16
sub
shrb
je
in
insb
cmpsb
sub
jnp
dec
pop
jle
ficomps
pusha
and
and
ret
xor
ds
and
push
jae
xchg
sub
test
popf
jg
lock
push
xor
xchg
inc
inc
in
sbb
cld
shrb
stc
pop
scas
sbb
in
loopne
adc
lret
aas
mov
mov
ss
dec
mov
dec
arpl
jp
mov
hlt
add
aaa
sti
sti
stos
or
cmp
aas
add
sbb
pop
and
fidivrs
int
nop
rcr
dec
scas
shl
push
cmp
scas
ljmp
bound
jge
cld
scas
sbb
xor
daa
sub
jne
mov
push
jl
test
push
dec
mov
xor
fmuls
lahf
loope
mov
andb
inc
inc
int
mov
repz
push
push
cmpsb
movsb
jne
in
enter
insl
push
in
pop
fstpt
and
imul
xchg
cmp
xchg
cltd
ds
pop
movsl
mov
and
movsl
cmc
ja
cmpb
sbb
insb
lods
add
xchg
mov
lahf
repz
test
ja
pop
adc
test
push
std
aas
adc
add
sub
iret
xor
adc
or
jg
mov
mov
outsb
sub
mov
push
push
pop
xor
sub
jnp
lret
lret
push
roll
sbb
mov
aad
or
inc
jne
outsl
sub
fsub
add
sub
xor
or
pusha
add
cmp
and
out
imul
mov
jl
cmp
xor
into
daa
xchg
cmc
btc
pop
dec
lds
adc
jae
imul
xchg
aas
add
pop
lods
mov
out
push
xlat
lret
sub
xchg
aam
pop
pop
fs
jnp
adc
decl
gs
mov
rorb
fidivl
fldenv
les
lret
adc
mov
adc
movsl
adc
daa
adc
xorb
cmp
cs
out
aad
add
nop
bound
aas
xchg
mov
sub
dec
mov
jno
movsb
jge
jecxz
push
inc
cmp
outsb
call
fidivl
jo
or
addr16
adc
mov
pop
into
inc
pop
cmp
inc
ljmp
mov
push
nop
xor
fwait
inc
rcl
es
notb
aaa
pop
std
lahf
shll
sub
insl
icebp
inc
push
dec
cld
sub
lret
incb
lds
test
mov
shrb
or
shll
xchg
dec
add
sbb
nop
insl
mov
js
xchg
cli
shrl
ret
popa
movsl
dec
push
lods
push
cmp
popa
mov
adc
xor
std
roll
test
in
test
stos
mov
xchg
cmp
sub
sahf
clc
inc
sbb
xchg
push
adc
in
shrl
les
stos
aam
mov
test
rclb
stc
lea
pop
adc
xor
push
lds
mov
mov
je
adc
dec
mov
fisubrs
dec
sbb
aaa
inc
shr
popf
or
cmc
inc
fwait
and
fldt
add
rcrl
out
cwtl
add
bound
loopne
loope
sbb
xchg
xchg
mov
sub
loopne
addr16
fdivrl
adc
mov
jb
mov
mov
xchg
mov
repz
mov
push
mov
add
jmp
push
cmp
out
xor
or
mov
push
jo
aas
jns
and
std
std
jnp
imul
mov
xchg
mov
iret
sbb
jge
jmp
xor
inc
das
out
outsb
jae
mov
push
mov
loop
mov
rcrb
in
fisubl
inc
xchg
sahf
leave
rcrl
push
imul
fcoms
cmp
adc
jnp
mov
add
xor
lds
xor
dec
test
jmp
or
xor
mov
mov
xchg
add
inc
test
push
sub
scas
lds
mov
scas
mov
mov
push
stos
cmp
and
xor
jge
aas
popf
sbb
pop
ja
mov
xorl
push
xor
xchg
xor
xor
lret
push
xlat
fnstcw
test
jnp
mov
loop
iret
cmpsb
daa
sahf
in
scas
in
enter
pop
sbb
gs
subl
dec
pop
inc
cmp
fbstp
jp,pt
lea
xorl
orb
dec
add
push
sbb
lea
mov
jge
loop
cmp
nop
sbb
in
mov
jp
lods
je
sub
ret
mov
inc
adc
out
cmpsl
jg
or
inc
push
into
and
push
pusha
imul
sub
push
push
testl
xchg
dec
mov
pop
inc
sbb
pop
sahf
out
cmp
pop
add
loop
cmc
jo
mov
lret
scas
sub
addr16
xchg
shll
pop
test
cli
jmp
xor
repnz
cmp
cmpsb
mov
into
or
fnsave
ljmp
adc
push
xor
mov
add
stc
xchg
pushw
lods
mov
rorl
or
dec
sub
movsl
ljmp
adc
sti
sub
sub
and
gs
arpl
mov
rorl
ret
inc
jae
repnz
jmp
mov
lcall
cmp
pop
inc
pop
mov
sbb
ja
push
jmp
es
das
inc
push
aad
mov
nop
cmp
push
push
dec
add
jmp
jecxz
movb
into
mov
pop
mov
adc
das
ds
mov
rclb
call
xor
inc
sahf
inc
pop
inc
add
test
mov
or
incb
shll
jecxz
negb
sbb
inc
jbe
cwtl
loopne
xchg
cmpsl
daa
or
icebp
sbb
jp
push
cmc
scas
lret
insl
out
mov
jo
mov
repz
loopne
push
pop
adc
add
inc
cltd
fildll
mov
in
ret
test
cmp
fwait
dec
data16
xchg
cmp
ljmp
push
lods
sub
ljmp
jp
mov
test
scas
add
xchg
mov
pop
jbe
mov
mov
inc
fucom
dec
sbb
xchg
jbe
sbb
std
adc
out
pop
add
stos
ret
in
out
out
xchg
xchg
jmp
int3
ja
sti
sbb
xor
filds
or
xor
lds
popa
push
loopne
or
arpl
in
test
jae
inc
addr16
jo
push
mov
dec
push
mov
repnz
add
jno
out
ja
vpbroadcastw
xchg
pop
xchg
mov
add
lds
push
xchg
add
cli
or
push
push
dec
jl
into
jne
icebp
mov
fcomip
mov
xchg
aad
mov
xchg
xor
subl
out
lock
std
xor
inc
inc
push
test
aas
adc
mov
mov
dec
jle
or
insb
pusha
push
nop
jb
jnp
rol
pop
adc
int3
xor
jae,pt
mov
sbb
mov
dec
xchg
ficoml
jge
xchg
cmc
jne
sbb
pop
mov
roll
scas
rcll
sti
sub
stos
aas
pop
mov
push
lods
pop
leave
cmp
or
xchg
mov
gs
ret
or
lods
shrb
jns
dec
or
mov
das
int3
icebp
ljmp
cmpb
loope
jo
adc
dec
and
dec
inc
cmp
lret
cmp
jbe
xchg
mov
sbb
sbb
mov
xor
repnz
aas
jno
adc
jl
fnstcw
dec
and
stos
cwtl
xor
mov
lahf
pop
addr16
push
stos
gs
test
inc
push
pusha
inc
jno
mov
stos
cmp
in
xchg
xor
enter
pop
pop
arpl
xor
leave
sub
repz
movl
mov
andb
sbb
cmpsl
and
dec
inc
adc
pop
dec
js
loopne
pop
cmovle
lcall
push
fcoml
icebp
sub
xchg
adc
shl
jg
mov
cli
mov
inc
mov
mov
ror
cmp
or
testl
dec
shll
pop
sbb
inc
test
jmp
inc
outsl
out
scas
loop
arpl
stc
jae
mov
pop
adc
pushf
divl
in
push
sarb
dec
bnd
push
and
cli
push
xor
mov
cmp
lock
or
mov
cmc
popf
loopne
xor
cmp
xchg
adc
cmp
adc
in
sub
mov
dec
data16
jbe
jo
fwait
mov
jle
xlat
dec
jle
sub
mov
xor
pushf
incb
add
add
xchg
dec
sub
mov
xchg
sub
aas
pop
in
scas
xor
xchg
pop
fadds
sbb
int3
addr16
push
mov
adc
cmp
jmp
into
dec
cs
xchg
lahf
aad
sbbb
test
pop
jb
repz
dec
js
add
cmp
xor
inc
test
out
imul
stos
cmpl
stc
mov
pop
pop
push
pop
sar
push
inc
and
imul
mov
shrl
shll
mov
std
in
push
fwait
cwtl
fwait
xor
mov
mov
push
icebp
repz
jmp
lret
fdivrl
pop
mov
loope
mov
push
or
cmp
pop
das
or
rclb
aas
sbb
aam
rolb
es
xchg
or
dec
popa
rcrb
test
mov
mov
je
gs
les
imul
add
sub
and
mov
push
scas
mov
fisttpll
mov
addb
ds
rcl
sub
les
dec
jp
xchg
xor
lcall
jmp
or
sti
xor
mov
mov
fs
dec
outsl
xchg
dec
test
fstl
ja
in
lret
dec
call
in
inc
pop
adc
pop
hlt
les
pop
sahf
sub
bound
mov
in
daa
out
xchg
and
cmp
mov
jmp
sub
xchg
push
mov
cmpsb
sarl
lret
jnp
jne
push
sbb
push
ds
test
sub
int3
test
xchg
mov
cmp
fsub
sub
sbb
or
dec
push
call
mov
in
insb
out
leave
jnp
icebp
jle
xchg
in
jl
pusha
bnd
iret
fcmovb
ret
test
or
inc
inc
aad
jae
cmp
aas
cwtl
popf
popf
hlt
sbb
mov
into
jbe
fcmovb
push
xchg
dec
inc
arpl
dec
sub
dec
lods
scas
inc
cld
add
push
mov
xchg
stc
mov
stos
loopne
mov
inc
hlt
fildll
lcall
clc
or
daa
out
adc
or
xchg
add
addr16
fdivr
pop
scas
and
fisubs
mov
and
sub
scas
sahf
and
mov
sbb
mov
mov
call
or
stc
xlat
lahf
daa
es
cwtl
cmp
ljmp
enter
adc
xor
jmp
repnz
jge
add
adc
inc
add
mov
in
jge
fmul
pop
movsl
ficoms
cwtl
daa
imul
cmp
fsubrp
add
popa
dec
cmp
mov
movsl
mov
add
xlat
xorb
add
loope
xor
xor
cmovae
push
and
pop
mov
push
add
push
faddl
out
sub
frstor
rcrb
mov
xor
les
lcall
int
notb
out
cmpsb
testl
mov
rorl
mov
pop
lret
sahf
sub
dec
test
lcall
pushf
mov
mov
iret
lds
scas
adc
fnstenv
xor
fadds
mov
out
inc
xor
push
outsb
xor
or
cs
shrb
cmc
mov
mov
popf
mov
xchg
mov
or
xchg
jo
inc
adc
data16
leave
sub
mov
jo
sub
lcall
pushf
add
push
push
dec
es
dec
mov
and
or
les
cltd
repz
add
mov
cmp
sub
lea
pop
and
mov
cmp
aad
aad
nop
repz
aas
jb
push
jb
add
mov
je
ds
jecxz
jo
movb
lea
pop
mov
push
xchg
mov
test
or
inc
sbb
pop
jne
pop
inc
lods
mov
inc
cmp
pop
push
mov
js
adc
rol
daa
mov
loopne
cmp
mov
push
lahf
mov
mov
lret
cld
stos
lds
dec
inc
cld
mov
inc
mov
lock
and
pop
dec
sbb
out
repz
push
aad
bound
out
pop
mov
mov
dec
pop
pop
movsb
xchg
mov
insl
ljmp
and
ds
push
push
lods
and
push
jbe
inc
xor
mov
arpl
sub
shll
push
jno
enter
inc
clc
cmc
jb
xchg
sbb
shrl
push
push
stos
mov
mov
and
mov
out
xor
sub
or
xchg
mov
mov
push
mov
ja
jno
dec
repnz
jecxz
xchg
scas
insl
or
iret
mov
outsb
cmpsb
add
and
fucomp
xor
dec
aaa
jns
cmp
in
or
aam
shl
sarb
in
inc
addr16
mov
mov
jbe
mov
pop
jnp
dec
inc
pop
xorb
sub
int
and
xor
notl
xchg
leave
mov
orl
and
cmp
mov
cwtl
call
fsubrs
add
jle
or
jne
pusha
lea
mov
and
adc
aam
out
mov
add
popf
sbb
addb
aaa
fidivrl
cmp
and
cltd
loop
cmpsb
cmp
push
test
add
repnz
adc
leave
sub
hlt
sub
andb
inc
inc
enter
push
jle
push
divl
or
jns
add
in
pop
fiadds
faddp
repz
rorb
scas
dec
cmpsb
je
or
je,pn
pop
pop
xchg
push
push
scas
lea
pop
outsb
sbb
xchg
cmp
test
mov
push
dec
add
mov
jo
into
hlt
lahf
pop
adcl
push
fmul
cs
pop
lds
fs
enter
pop
xlat
cld
push
push
mov
fldcw
arpl
jecxz
fbld
push
int
jno
mov
pop
sbb
adc
ret
xor
add
shlb
mov
pop
or
jno
push
pop
pop
stos
fsubrl
xor
outsb
fistps
sub
shlb
jg,pn
fsts
jb
bound
fstl
push
imul
mov
popa
inc
xor
and
lret
sahf
shl
sub
mov
sub
xchg
test
inc
inc
subb
mov
stc
loope
jle
pop
orb
jae
repz
ret
out
jmp
cli
test
sbb
and
aas
lahf
and
mov
add
sub
jmp
adc
pop
imul
xchg
lods
ds
sti
mov
out
sub
dec
mov
pop
cmp
sti
aaa
sbb
mov
gs
loopne
push
dec
jmp
ds
cltd
sbb
push
ds
repz
scas
xchg
jecxz
push
sbb
inc
leave
or
jg
shll
rcll
dec
ret
js
hlt
jmp
imul
int3
mov
nop
into
cmpb
daa
mov
dec
data16
je
es
jecxz
lods
cmp
dec
adc
mov
mov
cmp
or
andl
sbb
mov
and
ret
push
jae
das
cmp
pop
ja
das
push
xlat
and
cmp
rorl
mov
mulb
jl
std
cmp
cli
cwtl
adc
stos
mov
mov
jmp
lret
mov
sahf
xor
icebp
cld
dec
pop
insl
sub
mov
ret
shll
es
shrb
add
jl
xchg
negb
arpl
mov
popa
add
aam
ret
cmp
and
mov
dec
adc
rcll
inc
test
lret
loope
adc
pushf
mov
clc
xor
xchg
sbb
fisttpl
roll
cmc
stos
nop
cld
pop
out
adc
cltd
xchg
mov
add
fadds
xor
loope
fs
mov
xchg
push
dec
cmp
sub
ja
jns
dec
in
movb
jns
sbb
jo
mov
ja
add
rcl
bound
or
xchg
ret
pop
je
adc
add
mov
dec
imul
imul
dec
and
andb
push
neg
xchg
dec
xchg
adc
mov
mov
sbbl
mov
sub
adc
push
fs
or
gs
mov
insb
mov
mov
in
shrb
sub
aas
ret
pop
pop
pop
jo
inc
pop
or
jae
clc
jl
lds
sbb
pop
es
fisubrl
test
cli
push
in
into
mov
aad
or
push
lock
nop
adc
sbb
push
xchg
mov
mov
cli
int
xchg
inc
mov
fsubs
push
mov
lahf
or
jb
add
mov
jb
or
pop
lds
shlb
scas
sub
mov
cmp
imul
or
outsl
jge
xor
sbb
jmp
cmp
pushf
mov
dec
jb
cmp
mov
xor
lahf
mov
lahf
jl
cld
push
and
test
cmpsl
mov
cmpsb
xor
repnz
dec
jo
enter
pop
push
push
push
push
xchg
sub
mov
cmp
ljmp
out
test
rcr
mov
sbb
or
roll
leave
adc
xchg
sahf
or
pop
ss
shlb
into
das
lcall
sbb
cmpsl
call
outsb
inc
dec
aad
bound
jno
sub
mov
sub
cli
mov
mov
fadds
insb
int
int
cmp
maskmovq
testl
sub
mov
les
test
jecxz
lret
outsl
test
popa
stc
cwtl
jo
fs
and
ss
or
jge
push
out
adc
aaa
xor
sahf
cmp
ret
cmp
scas
mov
ss
repnz
inc
xor
jl
in
add
cmp
fldcw
sbb
push
add
cmp
add
lods
and
lods
out
add
pop
pop
jb
fwait
in
jb
out
push
scas
dec
jp
roll
aas
loopne
or
inc
mov
jo
les
adc
sbb
and
and
jge
in
mov
scas
pop
xchg
lahf
adc
mov
popa
cs
lods
push
test
mov
dec
fnstsw
das
jecxz
sub
mov
call
xchg
movsl
test
sti
push
or
test
mov
pop
mov
pop
out
jno
shrb
pusha
inc
mov
out
arpl
repz
pop
jl
mulb
push
std
loop
rcrl
and
mov
js
or
add
sbb
sub
cmp
dec
jmp
lods
rorb
mov
ret
in
fwait
es
dec
out
aas
mov
sbb
add
add
mov
lods
sub
sti
sub
xor
nop
mov
add
add
bnd
in
dec
test
push
mov
mulb
idivl
xlat
clc
imul
xchg
int3
cmc
sbb
pop
cs
arpl
jae
and
push
inc
nop
mov
xor
jl
xor
scas
inc
mov
insl
pushf
es
movsb
jge
test
xor
ja
add
dec
fdivrs
cli
inc
ret
in
or
das
and
push
inc
inc
addb
lcall
cs
inc
jns
jg
in
lea
push
mov
mov
pop
sub
cmpl
jp
lods
outsl
mov
and
mov
mov
dec
or
jne
and
mov
push
mov
jae
out
xchg
and
jmp
pop
das
fiaddl
mov
mov
or
sub
movsl
lock
jle
lods
and
cmpsl
xor
jnp
jp
jle
fldcw
aam
stos
pusha
ret
ret
testl
addb
jae
ds
push
mov
popf
imul
xchg
fcmovu
imul
jns
aas
imul
scas
insb
cltd
mov
aaa
loopne
adc
pop
mov
jg
cmp
mov
or
pusha
sub
lcallw
or
cwtl
repnz
jne
xchg
cmc
push
addl
scas
push
pop
cmp
mov
vpshufd
iret
mov
or
daa
cmp
push
push
push
cld
cwtl
jbe
xchg
xor
mov
mov
sub
and
mov
mov
xchg
xor
xor
cli
cmpsb
fs
fwait
stos
add
pushf
mov
jb
fiadds
insl
shll
dec
inc
enter
pop
push
xor
cmp
sahf
loope
mov
sub
mov
add
sub
add
mov
loop
in
adc
sbb
das
xchg
xor
cli
out
pop
xchg
iret
js
or
push
lcall
push
faddl
cmp
ja
dec
outsb
movsl
jno
adc
sub
add
mov
lock
xchg
cbtw
mov
aaa
repnz
loope
push
outsl
dec
mov
sub
add
inc
cmp
lret
rol
push
push
mov
xchg
sbb
cmpsl
sahf
adc
sub
and
enter
jp
ja
lods
stc
dec
aaa
sub
cmpsb
adc
add
ss
rorl
add
mov
add
mov
xor
pop
ret
cmp
pop
int3
or
fldl
xor
lcall
lods
push
add
cmp
testw
adc
mov
pop
movsb
sub
shlb
in
frstor
sti
xchg
cld
cmp
and
inc
loopne
mov
les
xchg
inc
fldcw
jo
repz
pop
xchg
imul
add
mov
jo
pop
cmp
pushf
into
mov
rclb
aad
sub
data16
dec
arpl
dec
push
cmp
xlat
jecxz
icebp
lcall
nop
ja
push
push
mov
xchg
ss
fmuls
xchg
xlat
jecxz
xchg
in
fcmovnbe
hlt
inc
pop
pop
stos
mov
inc
pop
jp
mov
shrb
sti
pusha
pop
mov
popf
xchg
sub
mov
std
mov
cwtl
xchg
and
cmp
dec
sbb
cld
sub
mov
mov
lock
jmp
mov
sub
ret
dec
ret
je
fisubs
js
sub
jno
dec
dec
jbe
xchg
je
loopne
je
popa
das
std
out
lods
cwtl
lds
and
dec
and
xlat
test
add
add
sbb
add
outsl
or
push
ja
cmpsb
fsubp
clc
cmpsb
call
xchg
rcrl
inc
dec
int
xor
stos
outsb
mov
xchg
dec
popf
sti
push
sbb
cmpsb
call
jb
xor
and
or
in
xor
push
pop
mov
jo
sbb
jmp
mov
adc
dec
lret
lods
inc
pop
mov
or
sbb
fwait
jg
cmp
out
fadds
jae
add
rcl
lock
xor
jns
cwtl
test
aaa
mov
movsl
mov
xchg
sbb
push
cmc
xchg
subb
mov
mov
mov
sbb
jmp
lahf
jne
sub
ficomps
xchg
cmpsl
adc
test
es
sub
mov
cmp
out
jp
sub
sub
movsl
push
in
dec
stos
icebp
stos
pop
and
inc
push
jnp
das
stos
jle
cs
in
mov
popa
iret
push
xor
ret
pop
pop
lret
inc
jno
imul
sub
popf
nop
cmp
inc
lret
ficoml
out
sbb
dec
dec
imul
scas
iret
mov
push
jle
sti
adc
ds
mov
divb
xor
pop
jno
or
dec
arpl
mov
or
adc
aaa
xor
mov
call
leave
cld
int3
mov
sbb
push
jnp
test
js
cltd
nop
shrb
jns
cmp
pop
xchg
movsb
cli
xchg
push
or
mov
jge
cmpl
push
xchg
and
jno
add
dec
push
cli
lods
push
test
xor
push
mov
lahf
mov
sub
test
cmp
pop
nop
cmpsb
cmp
add
dec
jno
pop
xchg
xchg
popf
push
inc
jecxz
cmp
push
cmp
lret
dec
ds
sbb
mov
pushf
push
mov
sbb
add
int3
sbb
icebp
sub
addr16
imul
lock
add
pop
mov
outsl
push
pop
lods
sbb
data16
outsb
or
xchg
rorb
mov
mov
out
mov
push
sahf
and
sbb
jb
into
int
adc
sub
scas
push
testl
mov
shll
xchg
sbb
popf
je
xchg
lret
cld
cmc
outsl
inc
xchg
sbb
or
jmp
inc
adc
add
cmp
repz
sub
cli
sbb
test
orl
cmp
adc
xor
sbbb
enter
xchg
imul
mov
lods
repz
sbb
xlat
andl
stos
hlt
xor
dec
xlat
cli
sti
inc
adc
hlt
hlt
shlb
sub
dec
push
add
cmp
in
push
les
test
mov
jo
sbb
repz
pop
pop
in
dec
lret
adc
pushf
jns
pushf
jmp
xchg
lcall
adc
nop
pop
ficoml
and
rorl
jno
mov
lcall
popf
mov
rolb
mov
pop
pop
mov
adc
sub
fildl
lds
inc
enter
cmpsl
sbb
fisubl
mov
push
es
and
bound
sar
loopne
imul
xor
cwtl
inc
push
daa
cmpsl
and
ret
icebp
es
cld
push
push
pusha
lret
pop
std
inc
mov
pop
mov
add
lock
jns
lret
shlb
mov
sub
push
cmp
es
adc
dec
dec
push
scas
xchg
mov
dec
ljmp
lods
add
mov
fnstsw
and
jb
ret
scas
flds
or
cltd
push
lods
rolb
sub
push
jge
rcr
int
clc
loope
sti
xchg
adc
stc
or
xchg
pop
test
jg
cmp
xchg
xchg
sbb
push
imul
lret
sbb
or
fmul
xor
dec
les
jae
pop
dec
jb
inc
test
stc
add
test
dec
mov
lods
push
or
fmulp
fwait
scas
xchg
fstps
mov
or
add
xlat
das
bound
jns
push
mov
ret
xchg
mov
push
mov
or
cli
pop
and
push
push
sbbl
jl
mov
add
in
ret
clc
rorl
insb
sub
xchg
pop
mov
jbe
fbstp
lcall
cmc
and
rcll
sub
daa
pop
mov
stos
fs
lcall
fistps
jle
js
in
inc
fwait
pusha
stc
push
mov
mov
add
mov
push
inc
jl
pop
jae
xchg
lret
push
push
push
stos
popf
mov
cmp
dec
in
fiaddl
out
pushl
sbb
pop
xor
cmp
scas
xor
cmpsb
push
lds
jg
mov
push
dec
leave
push
dec
add
push
sub
arpl
jbe
inc
aam
jp
in
inc
mov
mov
and
fistl
int3
jae
adc
jbe
ficoms
lahf
lds
cmp
scas
leave
test
test
mov
daa
movsb
test
cltd
jbe
dec
and
sbb
pop
push
cmp
in
jno
imul
mov
ja
xor
mov
jl
fxam
mov
pushf
lock
test
or
sub
add
aad
sarl
push
cs
push
xchg
push
sub
lock
outsl
mov
and
mov
in
inc
push
adcb
mov
add
pop
je
ss
fimuls
or
jg
xchg
or
int
shlb
xchg
pop
jg
sub
lret
cwtl
jns
aaa
or
jecxz
sbb
inc
es
adc
mov
call
push
jne
dec
int
push
dec
sub
fdivp
ret
lret
mov
fwait
sbb
and
test
push
out
outsl
and
stc
mov
or
ss
mov
fsubrs
stos
cli
push
shlb
cmp
or
or
movsb
ror
inc
and
inc
mov
xor
push
pop
inc
push
das
adc
les
add
decb
fisubl
mov
lret
int
mov
mov
test
repz
pop
mov
insb
loopne
fs
lods
aad
clc
mov
fstps
rol
xor
aam
out
push
sbb
cs
mov
lahf
pop
mov
stos
inc
mov
rol
cs
push
call
and
aas
lea
addr16
xor
dec
inc
and
je
movaps
dec
inc
into
push
pop
mov
dec
and
mov
std
or
ret
dec
imul
pop
movsb
mov
ljmp
outsb
push
mov
or
and
pop
jp
dec
jns
imulb
add
xlat
push
sub
cmpsl
and
mov
std
in
sbb
or
hlt
mov
loopne
sbb
add
jmp
data16
sub
xor
in
xor
ret
xchg
loope
es
enter
cmovs
sbb
pop
inc
loope
pop
add
mov
add
and
or
fmul
add
sbb
test
mov
sub
or
clc
sbb
test
dec
aaa
popf
sbb
mov
inc
stos
dec
sub
pushf
pop
add
shll
xor
loope
inc
pop
les
fwait
pop
mov
jbe
daa
dec
fldcw
test
mov
mov
inc
mov
xchg
je
fstp
mov
sub
mov
pop
out
nop
loope
out
loopne
cltd
mov
in
jp
xchg
ljmp
mov
testl
pop
mov
adcb
jp
fisubs
push
mov
loopne
xor
dec
mov
inc
jne
gs
mov
mov
pop
xchg
lcall
xchg
rcrb
out
sub
and
addr16
bound
xlat
pop
mov
insb
imul
jle
mov
in
cs
pusha
xchg
mov
inc
ret
sub
in
cmpsl
inc
xchg
jae
cmpsl
xlat
push
shrl
fisubs
dec
mov
enter
clc
rcrb
jp
sahf
imul
lret
scas
xchg
lret
or
js
test
or
pushf
mov
mov
mov
fs
inc
xlat
or
hlt
je
or
movsb
aaa
mov
mov
add
shll
pop
leave
insb
fdivp
push
pop
lds
dec
fldcw
in
pop
push
cmp
mov
pop
xor
push
push
mov
stos
fs
pop
mov
pop
cmp
xorl
xchg
pop
dec
cs
into
push
dec
lcall
or
inc
lahf
clc
mov
outsl
call
dec
push
rol
xor
pop
add
lods
in
out
add
pop
adc
leave
push
int
loope
mov
pop
cmp
cmpb
sbb
and
xchg
dec
outsb
jle
es
sbb
or
add
jno
xor
vminss
cmpl
lcall
iret
faddl
fisubrs
inc
ljmp
jle
adc
mov
jecxz
mov
outsl
sbb
sti
jnp
mov
mov
cwtl
push
js
insb
int
jnp
sub
xor
cmpl
outsl
mov
das
pusha
sbb
enter
sbb
xorb
popa
outsl
add
out
je
aam
adc
adcb
sbb
ret
cmp
imul
cli
sbbl
cmp
and
or
int3
into
and
aam
push
mov
xor
add
adc
or
jbe
add
fidivrs
shr
mov
repnz
sub
bnd
push
mov
jmp
cmp
gs
sub
popa
push
stos
dec
les
inc
or
and
push
xor
ja
pop
or
xchg
mov
or
imul
pop
push
xchg
stc
adc
fistps
aad
cs
mov
aad
or
aas
sub
xchg
jb
sahf
cs
mov
pushf
das
jecxz
aad
pop
xchg
cmp
xchg
out
xchg
js
mov
movsl
cmp
push
dec
outsl
add
das
jecxz
mov
inc
fucomp
jmp
cwtl
jnp
mov
ret
and
and
lcall
std
jle
pop
cwtl
mov
jo
mov
aam
jnp
lods
push
mov
in
jnp
cmp
push
lock
mov
repnz
mov
ret
and
pop
add
dec
dec
ds
loopne
xor
ljmp
mov
cmpsb
xchg
mov
dec
dec
cmpsb
mov
jl
test
xor
cltd
shrl
test
xor
add
pop
fstpl
out
clc
push
rorb
pop
mov
shll
adc
stos
cmp
push
xchg
and
lods
xchg
jl
repz
xor
jp
and
jns
movsb
dec
inc
sbbl
add
pop
or
movsb
inc
movsb
inc
pop
add
or
fdivrp
fwait
or
cmp
rclb
add
les
mov
outsl
out
mov
jns
mov
aad
dec
xlat
pop
mov
push
dec
mov
inc
int
addr16
imul
dec
arpl
dec
cmpsb
dec
xchg
lods
sbb
repnz
sbb
out
dec
pusha
xchg
insl
movsb
push
jmp
mov
and
arpl
sarl
xor
push
push
push
mov
ret
lahf
and
cmp
aam
jge
cli
call
jno
lock
pusha
das
xor
gs
mov
outsl
cmpsb
sbb
jae
std
inc
push
xchg
sti
cmp
add
cmp
inc
inc
jp
fisubrl
call
cmp
pop
addl
adc
sbb
out
daa
adc
hlt
pop
xchg
in
inc
sbb
xchg
mov
or
test
jno
push
rcr
add
mov
pop
clc
es
lds
cmp
ljmp
and
fnstsw
push
movsl
xor
pop
lret
jbe
rcr
jge
stos
lcall
cmpsl
cmp
test
jl
dec
jge
popf
sub
sub
dec
mov
push
inc
adc
test
sahf
es
jmp
outsb
shr
into
test
enter
pop
push
rorb
and
sub
in
cmp
sbb
mov
aad
rorb
dec
stos
popf
xchg
pop
outsb
jmp
cmc
das
loopne
aam
call
fs
push
pop
das
test
js
mov
bound
arpl
fsubrl
shll
xor
fnop
cltd
or
jg
mov
add
mov
sbb
and
push
out
jnp
push
int
test
testl
rol
push
std
mov
nop
sbb
mov
test
scas
roll
fbstp
mov
sub
mov
jbe
sub
add
xor
and
mov
cli
mov
pop
xor
or
fnstcw
pusha
cmc
aad
jb
sbb
and
imul
roll
add
imulb
lcall
sub
mov
in
mov
sti
push
repz
pop
sbb
gs
sub
inc
dec
and
xchg
inc
push
stos
jbe
mov
les
and
jne
sbbb
mov
movl
lret
dec
adc
inc
pushf
jp
xlat
jmp
popf
rep
jp
aad
sbb
lret
in
fnstenv
ds
xor
popa
jecxz
test
mov
call
push
ja
mov
popa
add
fisttpl
cwtl
pop
inc
pop
inc
test
clc
jno
das
ja
repz
jns
push
and
jle
shr
jne
divb
in
cwtl
jae
shlb
and
mov
stos
dec
fwait
cld
xlat
xor
lret
push
rol
mov
mov
mov
adc
mov
sub
push
aam
notb
ret
mov
mov
test
cli
dec
cmp
xchg
jo
ljmp
push
mov
inc
pop
inc
and
inc
cmpsb
or
pop
add
pop
cltd
clc
fsubrl
test
mov
push
xor
fldl
ret
clc
xchg
sub
inc
adc
adc
pop
test
jno
bound
xchg
push
xchg
xchg
add
xor
sahf
push
or
push
fnstenv
push
movsl
xchg
dec
cmpsl
jle
test
stc
fnstenv
jnp
dec
xchg
push
ss
mov
add
sbb
fwait
cmp
mov
add
into
add
bound
arpl
in
mov
xchg
popf
mov
mov
sub
out
test
pop
add
and
xchg
xor
fmul
mov
adc
and
adc
xlat
dec
ja
out
mov
cmp
push
cmp
xchg
inc
ja
jmp
push
xchg
out
adc
sub
sbb
push
loopne
imul
aas
lods
jle
test
or
in
xor
pusha
lret
iret
shl
fcmovnb
cmpsl
test
pop
cmpsb
add
inc
popf
lea
jae
xchg
cli
push
push
loopne
sub
lcall
mov
xchg
add
scas
sbb
xchg
imul
cltd
scas
pop
scas
xchg
push
lcall
mov
inc
loope
leave
imul
hlt
aaa
dec
and
or
inc
fstpl
or
pushl
mov
or
test
xor
inc
pop
daa
movsl
fidivrs
sub
mov
pop
fisubrs
adc
cmp
jbe
movsb
lods
cli
push
xchg
lahf
dec
jbe
ret
stc
aad
sbb
movsl
mov
push
lock
mov
jge
jl
rcll
push
adc
jo
mov
bound
je
test
imul
sbb
inc
pop
jmp
mov
add
ss
pop
nop
inc
pop
push
sub
sub
pushf
mov
ds
inc
movsl
fstps
std
and
shll
dec
je
sbb
arpl
mov
xchg
adc
imul
xchg
push
push
mov
lret
and
xchg
js
adc
je
cmpb
imul
push
pop
and
popf
out
push
jle
cmp
fidivl
sub
cld
and
adc
xor
mov
stos
fcompl
push
arpl
inc
push
jo
insb
fdivrl
mov
popa
loop
and
push
ss
subl
out
in
cli
jmp
dec
dec
cmp
movsl
or
ljmp
xor
push
pop
sahf
mov
imul
and
lods
cltd
stos
mov
xchg
sub
and
hlt
call
jg
cmpb
loopne
jb
dec
cmpb
fld
out
rol
sub
idivb
pop
sbb
filds
pop
pop
mov
fisubs
pushf
and
sub
cs
xchg
nop
lret
imul
jb
adc
fnsave
xchg
pop
push
inc
aam
insl
call
psubd
addl
lods
movsb
pop
imulb
ss
inc
adc
fisubl
xor
int3
and
xor
sarl
fcmovbe
idiv
es
std
int3
cmpb
mov
cmp
push
and
icebp
xorb
lret
ret
test
add
pop
lock
pop
cmpsl
pop
inc
adc
sarb
mov
pop
js
aam
aad
ret
aas
test
insl
test
test
xchg
scas
sub
mov
cmp
lcall
mov
mov
mov
cmp
push
gs
cltd
das
xor
gs
call
push
clc
int
mov
sbb
sub
shl
add
pop
xor
stos
sbb
out
lds
test
push
bound
mov
or
jnp
mov
jg
ja
push
pop
add
sti
jbe
ja
pop
decl
jle
inc
dec
jmp
or
cs
fwait
push
pop
push
push
xchg
inc
add
cli
scas
push
out
sub
jne
jns
scas
mov
xchg
in
jge
mov
jae
mov
mov
xchg
pop
jp
fs
mov
add
mov
jg
ja
pop
mov
icebp
mov
mov
xlat
xchg
adc
jmp
and
mov
add
mov
push
fs
adc
mov
stos
xor
insb
stos
cltd
leave
jnp
cmp
xchg
and
in
dec
fwait
pusha
gs
iret
xor
mov
inc
test
iret
jae
jne
push
sbb
popf
push
scas
mov
cld
ljmp
adc
xchg
pop
in
fcompl
call
cld
scas
mov
out
mov
mov
xchg
into
inc
leave
loop
jp
subb
inc
loopne
std
or
jp
sub
out
sub
or
push
int3
pop
in
movsl
pop
push
out
add
lds
jbe
shlb
mov
inc
in
in
and
in
add
push
loopne
scas
jbe
sub
jge
in
sbb
mov
jno
jbe
jl
das
cltd
dec
jnp
adc
repz
jl
sbb
cmpsb
lahf
push
mov
push
call
sbb
push
xor
xor
cmpsb
enter
pushf
cs
enter
pop
iret
fsubrl
jecxz
loope
or
sub
jge
cmp
ds
inc
pop
movsl
loopne
ret
ficompl
imul
mov
lret
push
out
or
fst
ljmp
js
lcall
sahf
ss
faddl
mov
in
push
sub
jg
out
mov
ret
pusha
push
in
mov
jmp
and
mov
int
inc
shrb
cmp
idivl
push
mov
mov
cmpsb
hlt
sbb
cld
xchg
test
inc
adc
xchg
outsl
popf
jecxz
loop
xchg
stc
cltd
push
xchg
fs
rcll
adc
or
mov
cmp
lcall
cli
sbb
sub
inc
dec
outsl
cmp
push
outsl
or
js
cmc
arpl
xor
pop
sbb
adc
xchg
shrl
lock
adc
push
int
dec
mov
or
pop
mov
sub
ljmp
in
pop
mov
jecxz
mov
pusha
jg
xor
mov
outsl
leave
fprem
inc
push
les
cmp
iret
sbb
sbb
aas
movl
dec
adc
add
mov
insb
jns
jo,pn
pop
aad
imul
aas
or
js
mov
mov
add
test
pop
lea
repz
aaa
pop
jae
into
add
mov
jmp
dec
adc
push
pushf
pop
xor
inc
imul
das
xor
test
mov
divl
sti
idivb
aad
jae
dec
cwtl
jmp
fxch
mov
pop
inc
aad
sub
fbld
in
int3
mov
ja
lock
xlat
pop
gs
xor
push
in
sub
jg
sbb
pop
ret
into
fistl
es
cmpsb
insl
nop
jl
das
inc
sbb
ljmp
ret
lods
sbb
add
mov
xchg
jns
fisttps
cltd
movsl
or
imul
xlat
mov
fsubrs
push
dec
pop
sbb
icebp
jle
or
stos
sbb
mov
cmp
test
stos
or
xchg
imulb
push
cmp
pop
mov
mov
les
sbb
lods
xor
sbb
mov
adcb
test
mov
push
inc
dec
jge
fadds
xchg
or
adc
fwait
cltd
cltd
lods
push
mov
or
adc
xor
bound
test
jne
jns
xor
sub
jne
cmp
fstps
jl
or
mov
dec
mov
out
vmread
xor
jne
mov
add
pop
fisttps
xchg
out
addr16
in
rorl
dec
adc
sub
push
add
stos
mov
ss
insb
adc
xchg
jle
xor
in
lret
les
sbb
test
int
push
adc
fiaddl
jo
sub
pop
into
popf
jp
or
les
fcmovb
pop
adc
mov
mov
es
ss
popf
scas
and
sub
movsl
adc
cmp
call
stos
push
hlt
int
jp
or
inc
inc
jecxz
in
or
cmc
mov
aaa
scas
jne
or
pop
mov
pop
test
stos
fiadds
jg
sarb
pop
scas
and
test
cmp
adc
cmp
xor
das
lock
add
jge
xlat
xchg
sbb
dec
daa
sbb
cmp
and
mov
xchg
stc
jl
pop
mov
ljmp
xor
ja
jno
je
lea
iret
xor
incl
inc
xchg
xchg
cmpsb
dec
fdivrl
enter
pop
push
mov
push
push
push
loope
mov
idivl
adc
ds
mov
and
push
pop
xorb
sbb
insl
lods
add
bound
inc
cmp
lods
sub
pop
movsb
in
js
je
pop
test
inc
lcall
pop
fdivl
fisubs
pop
daa
pop
adc
sub
fnstenv
xlat
in
mov
mov
xor
jmp
test
int
clc
shrb
sub
lret
inc
shrl
lea
or
and
mov
pushl
loop
cmp
push
xchg
insl
fs
pop
je
arpl
adc
into
stc
add
xchg
pop
push
fcoms
enter
inc
cli
dec
mov
sbb
cmp
mov
cmpsl
into
scas
call
xor
cmpsl
push
pop
fdivl
adc
jmp
mov
add
mov
mov
lods
pop
xlat
std
inc
shrb
pop
xchg
ljmp
imul
or
cmp
xor
inc
push
lahf
sub
das
cmp
les
andl
cmp
push
movl
dec
xor
shrb
rorl
push
aad
cmpsb
adcl
adc
xchg
fwait
jl
jae
aad
xchg
mov
xor
mov
push
mov
mov
mov
sbbl
sbb
cwtl
pop
rorl
sahf
inc
dec
jg
das
adc
xchg
sahf
adc
and
popl
idivb
mov
sbb
cwtl
movsb
mov
sbb
mov
xor
cld
pop
xchg
mov
mov
test
and
stos
pop
test
shlb
inc
sub
aam
mov
ret
pop
add
es
or
dec
sub
add
cltd
scas
ret
popa
rorb
and
nop
sub
imul
mov
clc
loop
add
cltd
popf
shll
test
sub
out
fnsave
fld
xchg
cmp
sbb
outsb
rcll
adc
out
mov
and
cmp
xlat
sar
xchg
adc
or
or
aaa
fdivs
dec
fmul
jge
icebp
sub
stos
dec
jo
dec
inc
jnp
push
or
into
pop
fwait
enter
pop
movsl
in
add
xor
push
jns
xor
xor
outsl
pusha
lock
xor
cld
jp
xchg
add
mov
enter
ret
dec
bound
imul
xchg
mov
movsl
mov
andl
stc
out
inc
xchg
sub
or
aad
push
gs
and
out
cld
jnp
xchg
cmp
fdivs
test
or
stos
pusha
fwait
out
iret
out
adc
pop
dec
repz
mov
cld
cld
pop
push
mov
jle
mov
inc
aam
fidivl
adc
shll
mov
shrb
xchg
push
outsl
push
adc
test
repnz
leave
shlb
hlt
sbb
arpl
pop
addl
scas
ja
jo
shlb
insl
inc
testb
sbb
int3
cmc
jne
pop
mov
inc
fisubs
xchg
lds
or
and
test
and
mov
shll
mov
out
lods
in
sbb
pop
cmp
sbb
cmp
push
sbb
test
and
lret
cmp
mov
fstpt
jo
sub
push
mov
js
mov
push
lret
inc
and
call
cmc
enter
pop
dec
lods
or
loope
lcall
ret
ds
leave
in
out
sbb
and
test
test
jecxz
and
xor
mov
jo
inc
pop
lret
js
js
loop
pop
add
in
add
mov
fcompl
sti
sub
les
adc
add
push
daa
mov
push
loope
dec
sbb
lret
loope
and
or
push
xchg
int
xchg
jnp
das
cwtl
jae
cmp
popf
lret
dec
rol
sub
mov
sub
jo
cmpb
mov
divps
pop
jge
fs
adc
fs
fcoms
push
shl
ret
adcb
xor
mov
xchg
xchg
and
mov
xor
ljmp
gs
jae
sbb
cmpsl
xchg
cvttpd2dq
lods
inc
iret
lods
mov
loope
sub
mov
leave
in
xor
sub
adc
imul
lahf
repz
add
repz
rclb
xor
test
movl
mov
xor
es
add
dec
shrb
ss
stos
aad
inc
dec
nop
pop
addr16
ret
or
or
arpl
nop
jecxz
mov
icebp
lea
xor
call
dec
lcall
dec
sub
dec
jmp
scas
fisttpl
mov
lcall
push
adc
repz
mov
push
and
and
cmp
pop
test
adc
shrl
cmpsl
sbb
inc
icebp
pop
ret
xor
lret
adc
push
mov
cs
lock
into
pop
mov
faddl
sub
das
aam
imul
es
cli
out
pop
clc
push
dec
and
pop
in
ljmp
xor
xor
cmpsb
and
scas
xchg
xorps
add
adc
fnsave
rclb
fstp
pop
outsb
clc
jle
out
xchg
out
sbb
push
aas
shr
jle
pop
xor
cld
stos
out
out
out
mov
xchg
test
push
repz
xor
stos
or
xchg
mov
mov
mov
es
inc
push
or
pushf
and
dec
arpl
mov
or
pop
outsl
fwait
testl
dec
add
cmp
lret
bound
jae
jecxz
sub
popf
je
fprem1
jae
mov
repnz
out
sbb
jp
cmp
xchg
mov
int3
push
pop
dec
add
sub
jno
mov
push
xchg
fisttps
lret
pusha
sbbb
mov
push
out
out
sub
add
add
fsub
push
stos
mov
and
jle
insb
jmp
inc
jnp
insl
ret
jle
daa
fucom
adc
mov
iret
dec
aad
ret
xchg
pop
and
inc
leave
leave
push
jae
cmpsb
stos
push
arpl
and
ret
fisubrl
addr16
xchg
pusha
add
sbb
add
pop
scas
out
call
adc
dec
lods
mov
mov
ror
in
hlt
arpl
stc
inc
jmp
mov
push
sub
cmp
adc
add
scas
dec
loopne
jb
jecxz
dec
faddp
aas
lds
pop
out
adc
mov
test
push
adc
push
push
jbe
paddusw
push
cs
sbb
jno
cmp
sbb
dec
enter
pushf
outsl
jnp
daa
sbb
lahf
mov
cmp
sti
test
xchg
divb
mov
pop
cmpsb
push
imul
pop
mov
fwait
push
dec
mov
repnz
mov
sbb
ds
sub
and
mov
xchg
movsl
sbbb
cli
add
rcl
xor
imul
xor
lcall
test
test
or
sub
outsl
loope
and
xchg
shl
ret
pop
or
xchg
mov
repnz
push
add
dec
popa
or
int
sub
stos
adc
fmull
rcrl
mov
enter
jb
test
cld
lods
outsl
cmp
loop
outsl
sar
pop
xor
and
ss
inc
adc
fisttps
sbb
pop
stos
out
adc
cli
mov
sub
leave
daa
ret
add
into
je
push
cmc
mov
icebp
sbbl
push
imul
add
push
fisubl
inc
lods
sub
xlat
jnp
enter
ljmp
cmp
sti
mov
mov
loopne,pt
popf
push
dec
mov
inc
jge
inc
fstps
repz
add
inc
es
pop
icebp
xlat
cmp
lods
push
movl
push
jns
roll
jmp
add
cltd
orb
aaa
cmp
aas
out
mov
dec
cmpl
or
in
mov
xlat
push
jns
jo
mov
mov
sub
push
and
imul
inc
add
in
inc
jg
mov
mov
or
cmpsl
and
ds
shll
testb
std
push
lods
push
cmpsl
sbb
dec
mov
fidivrs
scas
cld
scas
aaa
jmp
jg
orb
mov
cmc
pop
ret
ror
es
sub
clc
mov
jp
sbb
adc
movsb
dec
and
sub
ljmp
imul
cmpsb
mov
jns
nop
mov
mov
push
add
sub
mov
mov
cli
fldl
sarl
sbb
lcall
aad
xchg
out
push
ds
xchg
lret
sbb
push
ljmp
pop
les
cmpl
mov
mov
enter
push
test
xor
ja
xchg
dec
push
pop
inc
test
mov
jmp
add
div
out
test
jmp
jns
dec
daa
in
je
xchg
sub
cmpsb
mov
sbb
mov
test
iret
xchg
jp
cwtl
mov
xor
lock
cmp
jne
cld
in
mov
adc
fildll
mov
mov
cmpl
shl
std
addr16
jmp
notl
inc
or
in
or
xchg
jnp
pop
dec
jle
adc
pusha
sarl
jmp
pop
mov
sub
jae
xchg
sti
push
fcomps
popf
out
fidivrs
inc
inc
cltd
fcmovu
js
xchg
mov
xchg
mov
imul
in
std
je
adc
aam
repnz
jmp
hlt
scas
imul
cmp
inc
in
push
ja
and
popa
push
jmp
cmp
jae
stc
add
dec
ss
adc
add
inc
hlt
mov
mov
adc
icebp
mov
sub
movsb
fnstsw
xchg
inc
lret
pop
aas
sbb
fsubs
sbb
xor
lret
jl
call
dec
push
jg
push
xor
mov
sbb
xor
cmc
test
pusha
dec
add
mov
cmpsb
aam
pop
in
cmp
lods
enter
pop
lret
xor
mov
mov
push
cmp
pop
mov
movsl
cld
mov
aas
in
lahf
subb
arpl
mov
push
idivb
pop
sbb
js
jnp
pop
add
fwait
push
insl
xor
shrl
int
aam
adcl
outsl
adc
jg
int3
lahf
mov
mov
mov
sub
cld
ret
push
lea
test
and
mov
pop
shl
mov
sbb
lret
loop
jae
or
repz
outsl
sbb
loop
mov
stc
jne
cli
fs
xchg
adc
scas
ss
xchg
mov
fadds
ljmp
mov
in
or
je
push
lock
jg
pop
xor
mov
pop
cmp
jbe
dec
and
imul
xchg
xchg
xchg
lods
adc
mov
xlat
mov
loopne
mov
or
sti
imul
das
and
loopne
sbb
pop
cmp
nop
addr16
mull
repz
lods
xchg
pop
cmpsl
push
sbb
push
push
les
lds
adc
outsb
pushf
jl
inc
jmp
popa
subl
and
test
test
test
cli
pop
fwait
je
mov
out
insl
lods
clc
xlat
add
call
lret
mov
cmpl
jecxz
test
push
jle
xchg
mov
lcall
mov
ret
sub
and
xchg
pop
rol
lret
movsb
testb
std
paddsb
cltd
mov
sbb
cmpsl
icebp
mov
jb
lret
out
sub
mov
clc
mov
jbe
lock
das
mov
popf
movsb
cmp
xor
out
inc
sbb
ret
or
adc
xchg
jecxz
insl
sub
dec
dec
sbb
cwtl
xchg
ljmp
popa
adc
xchg
loope
test
and
in
bound
adc
fcmovu
cltd
inc
mov
mov
ret
outsb
push
pop
sbb
adc
hlt
mov
mov
inc
pushf
cmp
cwtl
stos
les
add
xchg
adc
cli
push
test
dec
add
add
mov
clc
mov
mov
mov
insb
dec
adc
jmp
ja
push
adc
dec
bound
inc
mov
imul
or
leave
out
mov
in
jg
sub
in
sahf
jge
ja
sub
add
lods
cmp
jp
test
mov
rolb
mov
xchg
into
jne
jmp
mov
fimuls
xchg
xor
xchg
sbb
sub
push
mov
xchg
std
or
pop
call
cs
stos
outsl
inc
sub
insb
shll
jle
out
pop
in
cmpsl
xor
mov
or
sbb
sbb
inc
pop
jae
cmp
jmp
gs
mov
rol
ficoml
outsl
pop
sbb
cmp
imul
mov
adc
push
or
xor
or
xor
insl
mov
bound
sub
loope
cli
aaa
stos
shl
data16
nop
add
push
int3
mov
mov
scas
pop
fimuls
in
shlb
sbb
test
nop
cmp
aad
movsb
push
roll
out
test
sbb
dec
out
sbb
test
jno
outsb
sub
cld
dec
cmpsb
push
sub
bound
leave
xor
jecxz
inc
lahf
lock
push
pop
testl
inc
rorb
cmpsb
push
daa
in
pop
xchg
out
pop
or
test
and
sub
push
in
cmp
ljmp
add
in
popl
cmpb
mov
xchg
sti
xor
xor
mov
mov
js
movsl
sbb
cmpb
lcall
fcompl
sub
dec
adc
xchg
cwtl
aad
pushf
nop
stos
mov
mov
mov
sub
and
push
nop
jns
int
mov
sub
sbb
lret
mov
mov
xchg
mov
test
sbb
orb
leave
outsl
clc
xchg
loop
cs
sub
icebp
imul
ficompl
cmp
inc
sub
or
xor
dec
cmp
cltd
inc
or
mov
nop
cmc
inc
enter
mov
pop
pop
imul
sbb
pop
imul
mov
cbtw
pop
or
ja
rcl
stc
rorl
mov
jbe
xchg
sbb
repz
stos
fmuls
dec
dec
inc
mov
jg
in
and
xchg
lret
sbb
inc
mov
jg
ds
ljmp
pushf
daa
dec
sbb
pop
test
cs
lret
rcl
xorl
in
sbb
and
jle
pop
dec
cmp
jmp
pop
jecxz
in
jo
lahf
lea
ret
dec
call
mov
mov
pop
or
and
sbb
add
pop
sub
inc
push
and
inc
mov
xchg
das
nop
jb
mov
jp
cmc
and
cmp
xor
mov
inc
cwtl
nop
sbb
pop
fdivrs
sbb
add
push
pop
in
mov
or
sbb
or
add
shlb
adc
sub
cmp
adc
fadd
cltd
dec
jp
sbb
inc
insl
adc
fsts
fmull
lods
xor
in
mov
xchg
adc
sbbb
je
mov
cltd
jns
pop
test
push
or
sbb
das
xor
mov
push
and
clc
stos
mov
test
xchg
pop
xchg
push
test
jmp
pop
xor
xor
outsl
jge
xor
push
adc
xchg
add
js
pop
test
mov
ja
leave
xor
adc
inc
xlat
add
fwait
test
fildl
pushf
xchg
je
addr16
jo
adc
mov
lock
sbb
in
mov
test
int
pop
shll
jp
imul
xchg
inc
mov
sbb
dec
lods
lret
addr16
adc
out
xor
add
jmp
dec
sbbl
out
mov
insl
lret
lcall
adc
subl
adc
mov
insl
pusha
pop
iret
imul
sub
sbb
xorb
ljmp
push
lods
sarl
iret
pop
mov
aas
outsb
jg
inc
mov
or
jge
and
inc
xor
mov
sbb
pop
sbb
pop
xacquire
in
hlt
inc
les
push
mov
inc
repnz
or
pop
or
or
test
fnsave
sbb
fidivs
mov
rol
fldt
pop
hlt
ret
and
repz
push
mov
or
out
adc
daa
pop
pop
jge
and
stc
jno
aas
das
jl
mov
aam
inc
mov
jecxz
ds
push
lahf
psubw
test
idiv
js
popa
and
cmpsb
fisubl
pushf
enter
pop
dec
lret
lahf
or
loope
outsl
pop
sub
sub
cmp
loopne
int
jecxz
or
push
and
jmp
mov
cmpl
add
lock
jl
mov
lods
sarl
arpl
pop
incl
lcall
mov
pop
into
outsb
sub
mov
adc
jno
test
mov
jecxz
mov
push
xchg
mov
xchg
adc
jnp
sub
xchg
fs
stos
fistps
sbb
mov
cmp
jp
mov
inc
shll
add
sbb
in
push
jb
subb
subb
pop
loop
faddl
fs
or
out
mov
ss
cmp
jmp
mulb
lods
cli
dec
push
xchg
xor
sub
lret
push
into
sbb
dec
repz
ja
pop
ja
lret
popf
test
inc
ljmp
movsl
mov
aam
loopne
lock
pusha
xlat
cmp
js
popf
mov
in
loope
mov
leave
mov
je
sub
jge
aam
cmp
sbb
scas
flds
xor
out
sub
repz
shlb
xchg
lea
sbb
jl
xor
xchg
imul
in
adc
daa
pushf
rclb
jmp
insl
or
ret
aad
mov
nop
enter
ret
ret
mov
mov
push
mov
jecxz
fxch
jae
popf
lea
lea
mov
lahf
subl
aas
sahf
pop
add
and
inc
sarb
das
outsl
mov
push
mov
cmp
mov
test
or
pop
mov
jmp
mov
arpl
cld
das
mul
lret
int3
and
fisttps
lock
push
pop
pop
mov
push
sub
xchg
and
fistpl
ret
sub
test
pushf
pushf
mov
fwait
xchg
dec
adc
mov
ljmp
push
lods
pushf
inc
test
pop
in
jp
mov
fsubs
rcll
add
test
cltd
mov
pop
test
pop
mov
xor
sbb
fnstsw
out
push
mov
sbb
les
stos
mov
adc
xchg
mov
in
jae
mov
iret
xor
adc
mov
xchg
movsl
orb
sbb
cwtl
or
dec
das
jbe
inc
outsb
and
repnz
push
mov
out
add
mov
mov
bound
mov
lret
xchg
adc
sbb
and
loopne
jbe
pop
jp
loop
mov
sbbl
add
mov
jne
hlt
xchg
mov
mov
filds
sbb
fcomps
jmp
scas
push
filds
pop
cld
in
push
pop
imul
fmuls
test
insb
xchg
inc
test
jle
test
in
in
xchg
pusha
mov
push
loop
aas
imul
jae
testb
fs
popf
fs
daa
inc
mov
in
xchg
mov
les
scas
jae
lahf
push
shlb
adc
xor
inc
repnz
std
leave
and
pop
hlt
outsb
cmp
inc
cmc
mov
pop
push
sub
stc
or
add
int3
mov
mov
ficoms
fcmovb
fsubr
rol
mov
scas
pop
std
outsl
and
adc
movsb
jle
mov
jbe
pushf
add
cmp
test
mov
cmp
shlb
xor
jl
in
dec
test
cmp
sub
xor
cltd
inc
dec
lahf
les
lods
ret
lcall
inc
lock
push
cmpsb
pop
repz
enter
pop
mov
push
mov
loope
xchg
sub
xlat
test
ds
or
imul
ljmp
mov
add
mov
scas
aas
pop
mov
pop
jle
imul
mov
std
sub
adc
adc
dec
mov
or
mov
push
mov
mov
push
xchg
ret
xor
adc
bound
xchg
jno
div
lcall
mov
mov
inc
sahf
pop
mov
pop
addb
mov
test
out
mov
sub
ja
cmp
inc
pusha
cmp
mov
ja
cmc
test
cli
andl
pop
cmp
jg
or
sahf
xchg
into
add
xor
pop
pop
xchg
jg
adc
sub
imul
aam
add
push
lods
xbegin
cmp
ja
test
mov
dec
int3
push
sti
js
pop
cwtl
add
xor
inc
loopne
pop
das
dec
jp
ja
leave
add
fnstcw
inc
cli
xor
rep
lods
into
xchg
push
loope
sbb
mov
ffree
jge
cmp
push
inc
mov
push
stos
pushf
jmp
sbb
and
dec
sti
nop
mov
iret
jb
cld
rorl
call
add
in
adc
jbe
and
xchg
lds
mov
adc
dec
andb
ss
addr16
movsl
xor
inc
jmp
out
dec
fdivr
mov
call
mov
shll
rcrl
cwtl
push
fistl
adc
popa
and
cmp
pop
mov
stos
jl
sbb
mov
dec
add
pop
or
sub
mov
xchg
ret
mov
and
pop
cmpsl
pop
insl
loope
push
dec
or
mov
ljmp
jl
pop
fisubrs
mov
xchg
jbe
mov
xor
js
out
sub
fnstsw
inc
push
mov
lea
xchg
push
xchg
rcrl
jno
stos
xchg
lret
fstl
or
xchg
fcos
sub
dec
xor
rcl
or
xlat
xor
xchg
sub
xchg
imul
push
int
dec
and
pop
or
out
fwait
loop
sbbl
mov
xchg
add
jg
out
and
mov
adc
xchg
fs
imul
fsubl
jp
or
add
icebp
mov
jb
sbb
cmovg
and
add
jmp
jns
lea
add
jmp
imul
or
and
ds
add
add
adc
xor
ss
pusha
cmp
fnstsw
imul
push
cmpsb
inc
add
lahf
jae
repz
popf
mov
mov
cmp
xor
rol
or
cwtl
xchg
sbb
xchg
adc
mov
sub
scas
cltd
hlt
fisubrl
jne
mov
or
push
jns
aaa
out
inc
or
push
or
repz
pop
into
mov
pop
mov
sar
pop
scas
cmp
push
add
inc
stos
inc
movsb
or
and
mov
mov
fs
daa
adc
in
jno
dec
mov
cmp
xor
scas
xor
hlt
push
fcompl
xor
test
mov
push
inc
jg
xchg
cmpsb
loopne
out
aam
inc
enter
pop
jo
push
punpckldq
gs
sub
pop
loope
fsubrl
xor
adc
movsl
sbb
popa
push
inc
xor
rcrb
sub
arpl
out
add
fdivrl
pushf
inc
pop
std
in
mov
leave
push
cmpsb
fcompl
dec
sub
xchg
sbb
daa
outsl
loopne
jns
inc
mov
in
mov
leave
fbstp
adc
cltd
xchg
pop
int
ficoms
adc
divl
std
nop
rcll
mov
ficomps
cli
jg
sahf
push
roll
pop
scas
outsl
xchg
xor
loop
shl
stc
push
pop
dec
fs
jmp
mov
mov
sub
fdivs
fs
push
cli
mov
adc
cld
push
jno
das
ss
jecxz
jns
fwait
addb
mov
push
adc
or
fists
xchg
ret
loopne
and
sbb
push
push
sub
mov
in
mov
adc
daa
hlt
xor
gs
cmpsl
loopne
aam
dec
fxch
cs
fcompl
mov
add
int3
mov
adc
mov
pop
ds
cmp
sbb
cld
mov
adc
push
test
in
call
aad
inc
and
add
lods
jb
mov
divl
lods
jecxz
lea
mov
lea
repz
mov
mov
push
loopne
adc
lds
and
push
das
sub
jmp
sbb
xor
call
push
adc
std
stos
push
pop
cwtl
rcrl
cmpsl
adc
push
mov
adc
mov
mov
int3
bound
mov
pop
outsl
shr
mov
addr16
outsb
or
inc
nop
inc
mov
inc
jb
pop
or
xchg
out
mov
mov
clc
std
lods
jb
mov
mov
pushf
cmp
xchg
add
add
cltd
push
and
test
push
mov
out
aad
sbb
enter
loopne
roll
adc
mov
hlt
ds
xor
and
inc
or
xchg
cs
push
adc
jl
xor
or
sub
xor
shlb
lcall
test
in
ja
adc
xlat
inc
pushf
icebp
fmull
adc
fwait
adc
sbb
shll
add
in
adc
add
push
lret
push
icebp
jns
ss
nop
fists
inc
bound
pop
push
mov
or
mov
popa
mov
imul
xor
mov
fistpl
xchg
jle
enter
push
xchg
inc
rolb
orl
mov
bound
jmp
or
repnz
stos
cmp
outsb
insb
insl
sub
mov
in
ret
jb
fsubs
lret
ret
inc
pop
int3
jecxz
inc
or
mov
push
cmc
add
xor
mov
pop
lods
xchg
push
mov
fwait
dec
imul
cmp
push
pusha
gs
in
mov
mov
orb
adc
adc
and
inc
push
inc
sti
sbb
or
int
mov
cmpsb
dec
clc
or
mov
jl
out
ss
std
scas
ficomps
fildl
adc
sbb
into
and
int
cmp
jecxz
movsb
xchg
add
push
cmpsl
shlb
jne
popa
jge
jl
sbb
out
int3
daa
adc
mov
mov
mov
dec
bound
cmc
push
out
xchg
jae
ror
sahf
jo
jbe
lahf
insb
pop
push
push
pop
call
push
push
neg
inc
push
dec
shlb
mov
adc
push
push
psraw
sub
scas
cmp
sub
movsl
pop
and
pop
scas
int
or
sbb
add
lds
sub
push
testl
jmp
xor
fmull
repnz
outsb
jb
bound
add
jg
imul
jns
mov
rol
and
frstor
loopne
mov
divl
pushf
lret
mov
out
loopne
cmp
push
xor
call
test
loop
sbb
pop
fs
dec
sbb
fistl
ss
pushf
cmp
sub
aam
cli
out
xchg
shrl
js
sahf
xchg
ror
mov
cmc
bound
loope
push
mov
pop
aam
loop
push
lea
adc
mov
bound
clc
imulb
arpl
xlat
cmc
movsb
xchg
sub
xor
and
ss
ficomps
inc
pop
or
dec
cmp
push
add
les
ds
repz
mov
sbb
sub
stc
mov
imul
mov
pushf
rcll
jmp
mov
or
andl
aas
mov
jle
dec
dec
ja
je
pavgw
dec
ffree
jl
test
mov
outsb
mov
jno
mov
and
subl
mov
inc
sub
cs
and
das
or
dec
mov
push
jle
and
sub
notb
fwait
sahf
cwtl
jl
add
push
jp
icebp
call
sub
mov
pop
daa
mov
jg
lock
dec
mov
jl
not
mov
lock
ret
aad
xlat
es
jo
dec
add
or
xor
popa
mov
lods
fisttpll
fnstsw
mov
ja
pop
filds
adc
dec
cltd
push
jecxz
test
outsb
pop
mov
arpl
push
daa
jp
fucomp
sub
clc
sbb
scas
xchg
mov
adc
out
stos
outsl
push
jmp
mov
pop
jl
lock
adc
lahf
insl
xor
dec
scas
aam
arpl
mov
popf
dec
push
test
sub
ja
loopne
dec
or
test
fisttps
fwait
inc
or
push
je
cwtl
add
or
bound
jne
in
adc
pop
pop
sub
xchg
jb
sbb
ret
lea
sbb
mov
pop
stos
mov
aad
add
cmp
xor
xchg
xchg
push
out
dec
jmp
jl
add
in
leave
sub
loope
pop
push
xchg
jae
stos
scas
push
mov
jnp
mov
jle
mov
pusha
jae
dec
out
mov
pop
add
inc
push
push
std
jae
mov
inc
popf
fstps
mov
cmp
fimull
cmpsl
scas
xchg
shll
inc
push
imul
scas
pushf
mov
lds
hlt
ret
and
repnz
out
leave
mov
xor
arpl
jbe
or
dec
cmp
aaa
cmp
or
cmp
int3
dec
mov
adc
lds
mov
scas
sti
lods
sbb
arpl
cmp
test
push
testb
jbe
or
jge
jae
sbb
or
daa
adc
int3
cmp
mov
jno
ljmp
ror
sub
rcrl
les
stos
lods
mov
es
outsl
test
and
inc
popf
ss
cmpsb
out
in
in
mov
iret
jmp
inc
daa
sub
loop
loope
andl
xor
movsl
es
inc
and
xor
pop
push
ja
sbb
add
add
mov
xor
push
mov
add
cmp
and
pop
sti
mov
std
push
ja
rcr
mov
out
sub
xchg
outsb
aad
sti
adc
fisttpll
jg
sahf
jno
dec
mov
mov
into
mov
xor
push
lahf
cwtl
jne
inc
insl
jl
pop
in
divl
mov
sarl
mov
or
sbb
inc
sahf
inc
aaa
push
test
push
adcb
insb
loop
lcall
and
scas
adc
pop
pop
sub
or
call
ret
sbb
mov
stos
sbb
cmp
testb
mov
into
test
dec
lea
popa
in
sbb
adc
or
jne
lahf
add
adc
data16
and
jl
rorl
xor
shrb
push
out
out
lea
dec
incb
js
gs
lret
inc
test
nop
inc
add
push
mov
add
fcmovnbe
xlat
xchg
cltd
das
pop
sbb
push
ja
pop
imul
sbb
jmp
mov
cs
das
adc
lret
nop
xor
jae
aas
or
das
dec
les
je
cwtl
fucom
sbb
jg
rorl
out
mov
mov
das
addl
cmp
ret
xlat
pop
mov
mov
inc
cmp
push
das
jmp
jge
sub
sarb
jns
rcrl
ljmp
aaa
push
and
xchg
cld
jno
mov
sub
sti
lods
sub
push
pop
fwait
or
rorb
add
aam
adc
es
add
jg
dec
std
test
xchg
fs
ljmp
mov
mov
ljmp
mov
dec
mov
imul
cmp
ljmp
clc
push
and
sbb
fst
mov
dec
jecxz
pop
cmp
xchg
mov
add
xor
mov
or
aad
xor
dec
mov
mov
mov
fdivl
xor
dec
sti
or
mov
fwait
outsl
or
push
pop
mov
cmp
and
out
ret
fwait
inc
jge
out
cmp
lret
mov
movb
jb
mov
xor
mov
adc
or
mov
dec
sbb
mov
or
push
mov
subb
and
dec
jmp
ficompl
sbb
push
into
aad
fdivl
inc
push
aam
jnp
and
and
test
mov
jnp
stos
lea
and
in
sub
mov
iret
inc
js
ret
loopne
cmp
inc
and
pop
jae
test
popf
add
mov
mov
movsb
push
sbb
jecxz
cmp
outsb
scas
lcall
mov
out
out
adc
mov
pushl
hlt
mov
dec
fildl
dec
xchg
or
ret
clc
insb
aaa
and
pusha
or
das
xor
rclb
int3
pop
pop
inc
inc
sub
vcvtps2pd
rorb
scas
mov
mulb
cmp
bound
jae
jbe
imul
xchg
mov
dec
cmp
and
outsb
jl
int
dec
inc
inc
loopne
mov
shlb
add
sbb
push
stc
leave
mov
jbe
sub
xchg
inc
sub
sti
cmpsb
imul
cmp
test
mov
loope
mov
sub
jmp
movsl
sub
jne
jle
xor
sub
dec
xor
in
dec
ss
sub
in
jp
fistpl
into
mov
outsb
cmp
push
adc
mov
jp
mov
jmp
mov
sbb
test
ret
or
sub
leave
sub
je
fcmovb
adc
and
sbb
inc
and
mov
sub
repnz
cmp
jbe
or
adc
inc
ss
test
fsubs
xor
cli
dec
outsb
shll
andl
sub
mov
divl
mov
fmuls
push
push
imul
lcall
jg
lods
arpl
pop
xlat
jae
shrl
fcmovnu
or
in
clc
popf
sti
xor
insb
and
pop
gs
loope
loopne
mov
dec
imulb
inc
adc
push
int3
les
cwtl
lret
rep
ret
cld
xchg
pop
fmull
mov
jp
pop
sbb
mov
repnz
jo
cs
and
adc
loop
fisubrs
sahf
jb
rcrl
je
mov
pop
movb
int
subb
add
mov
arpl
dec
mov
mov
inc
cmp
mov
push
push
das
lret
mov
les
ret
shr
inc
mov
sbb
sar
push
movsb
cwtl
repnz
mov
mov
xchg
fdivrp
push
sbb
lret
mull
mov
ds
lock
cmc
pop
mov
lds
repnz
aam
ficoms
ret
repz
jmp
dec
clc
mov
or
pop
cmp
lods
mov
xor
or
fiadds
and
sbb
add
cmp
test
jae
mov
sbb
fnstsw
jne
sbb
stc
lcall
in
ljmp
imul
rcll
mul
jmp
fcmove
or
mov
jo
int
cltd
xchg
dec
test
jo
ja
add
dec
out
cmc
xchg
inc
popa
mov
popf
pop
fwait
sahf
lret
mov
imul
bound
insl
in
clc
mov
mov
das
xchg
mov
sbb
sbb
mov
cmp
mov
sub
mov
stos
push
fbld
cmpsl
ljmp
jmp
xorl
xor
or
mov
push
adc
fsubrs
pushf
mov
or
fs
jle
stos
fsubp
push
repnz
iret
movsl
pop
push
ret
sbb
or
inc
sub
mov
push
ds
mov
daa
add
rclb
fidivl
push
xchg
outsl
fldenv
jg
xchg
imul
xchg
scas
bound
xor
fmuls
bnd
push
leave
jbe
inc
hlt
push
scas
mov
inc
add
push
or
ds
int3
aaa
jecxz
hlt
or
test
addr16
int3
and
dec
pop
mov
mov
shlb
mov
jnp
cmp
imul
jbe
aas
or
je
pushf
sbb
or
adc
sub
push
dec
sub
sbb
jl
sbb
push
xchg
add
pop
jo
push
jmp
push
int3
int
test
mov
xlat
leave
cmpsb
in
push
leave
in
jo
mov
cmc
add
add
test
loope
in
sub
cmpsb
sbb
cwtl
inc
push
ds
mov
cmp
jo
repz
fstp
jmp
sbb
jl
es
insb
push
ljmp
das
std
test
stc
push
lcall
mov
or
dec
outsb
fwait
push
in
cmpsl
movsb
push
xchg
cli
iret
jg
pop
fidivl
hlt
bound
mov
cmpsb
and
movb
push
int
mov
sub
mov
enter
inc
shrl
sbb
dec
call
or
push
outsl
adc
daa
loop
xor
stc
sub
mov
adc
popa
xorb
jbe
cmp
pop
pushfw
out
sub
cli
add
xor
outsb
cmp
mov
sbb
outsl
lahf
xchg
cmc
mov
nop
xor
mov
call
loope
imul
push
lret
push
xchg
sub
lods
dec
cmp
dec
cld
xlat
mov
mov
dec
hlt
daa
mov
arpl
jecxz
cmp
push
pop
mov
dec
push
push
and
sbb
mov
xchg
les
inc
jb
jns
pop
xchg
pop
std
xchg
sbb
ficoms
mov
clc
add
adc
leave
pop
pushf
aam
jmp
lock
cs
je
pop
adc
ljmp
jb
dec
out
dec
mov
lea
js
cmp
pop
movb
mov
mov
mov
mov
push
xorl
add
mov
mov
mov
or
test
jnp
mov
jnp
ljmp
xchg
xor
inc
addl
adc
aaa
mov
insl
mov
addr16
data16
mov
xor
lock
enter
jecxz
sub
adc
aam
add
ret
orb
scas
cmpsl
dec
insl
fs
cli
dec
repz
stc
xchg
loop
test
popa
int
push
lods
push
aas
cmp
outsl
shr
xor
stos
and
mov
mov
add
cmc
cltd
cli
sti
adc
pop
popa
push
jo
add
fs
lahf
clc
int3
fildl
fdivl
nop
pop
fistps
cmp
push
out
int3
jo
xchg
dec
inc
mov
add
incl
xor
push
inc
xor
cmpxchg
cmpsb
pop
dec
dec
ret
cmp
ja
pop
sub
xchg
dec
inc
clc
jg
or
jae
fwait
int
gs
pop
stos
push
add
pop
sub
out
sbbb
jns
loope
in
ret
out
push
push
mov
pop
and
pop
cmp
xchg
addr16
sarl
jno
mov
pop
mov
and
jmp
jne
jno
mov
sbb
lret
jmp
jo
lods
addl
out
xor
xlat
or
lret
push
add
stos
pop
and
and
mull
jle
daa
loope
pop
pop
mov
aad
add
iret
ret
fistpl
pusha
xor
nop
jae
in
push
add
pushf
mov
mov
mov
cmp
cmp
imul
cmp
push
jl
aam
pop
push
cmp
int3
push
lret
jnp
hlt
push
push
adc
shlb
pop
dec
cltd
or
mov
push
mov
decb
int3
push
and
pop
mov
mov
lds
push
sarb
scas
cwtl
andb
xlat
xor
push
jecxz
fs
mov
jge
scas
outsb
sbb
cld
daa
adc
cmp
in
jl
cmp
push
jp
fnsave
mov
push
lahf
add
or
jb
dec
mov
outsl
pop
in
push
ljmp
add
mov
fmuls
push
dec
out
cmp
das
ds
movsl
cmp
js
or
mov
push
sbbl
mov
xor
push
sahf
shl
pop
js
push
pop
js
loope
mov
movsl
push
jl
xchg
fdivl
mov
dec
xchg
adc
outsb
pcmpeqb
cmp
dec
mov
fbstp
arpl
test
iret
int
icebp
xor
js
repz
and
inc
ficoml
jmp
pop
xor
cs
rolb
out
imulb
test
stc
in
mov
ret
daa
lret
in
or
repnz
cmp
sbb
mov
cli
mov
xchg
das
cs
or
pop
into
push
jg
cmc
jle
xor
jmp
push
sbb
adc
out
xor
add
stc
lods
xor
fimull
icebp
mov
sub
rcrb
into
xchg
stos
jge
push
mov
pop
cmp
dec
mov
xchg
inc
cmp
jle
cmp
test
dec
sbb
popf
sbb
sbb
xchg
ja
or
xorb
adc
cs
jg
push
jmp
xor
ja,pn
xor
lahf
std
repnz
lds
sub
repz
inc
sbb
testl
je
mov
lea
loope
jbe
and
addl
leave
mov
dec
add
xchg
push
push
and
sub
lea
mov
xor
mov
mov
xor
sbb
std
out
xchg
in
push
inc
std
mov
inc
cltd
sbb
pop
pop
xlat
lret
aad
mov
xorl
clc
sub
aas
sub
mov
push
mov
popa
insl
dec
add
dec
out
xchg
mov
and
repz
in
shrl
sar
mov
mov
mov
insb
sti
pushf
add
ret
cltd
xor
pop
mov
push
xor
xchg
clc
pop
movsb
xchg
push
sub
cmpsl
addr16
jae
sub
xchg
xchg
enter
and
xor
push
sbb
daa
and
sub
xchg
mov
test
sbb
ja
aaa
cld
dec
aam
sbb
std
nop
or
sbb
mov
add
je
out
pop
in
mov
jns
and
xchg
ds
xchg
mov
sti
dec
mov
neg
add
repz
jp
aam
mov
out
mov
xchg
inc
pop
dec
ljmp
lahf
lcall
popf
xor
jmp
cmp
je
aad
jbe
icebp
aam
sub
int
and
mov
and
sbb
insb
test
jnp
and
jl
in
mov
pusha
fistpll
iret
arpl
mov
les
jo
inc
add
mov
sti
push
les
movsl
mov
aaa
bound
fcmovu
aad
xchg
sbb
xor
imul
push
scas
sub
stos
push
ret
sbb
mov
pop
sbb
cmp
pushf
inc
inc
arpl
xlat
adc
ja
or
xor
xlat
aaa
popa
adc
xchg
jp
int3
stc
inc
xor
jmp
add
mov
push
scas
ja
aad
scas
dec
cmc
cmp
jle
push
xor
jbe
inc
adc
sbb
inc
test
movq
jno
stos
jl
sub
inc
push
pop
mov
pushf
jo
dec
insb
lahf
pop
ret
jb
lock
dec
shll
cli
in
ds
test
jmp
mov
push
clc
dec
loope
xlat
adc
lds
mulb
ds
scas
movsl
inc
dec
shll
cmpsb
mov
sbb
imul
or
cli
imul
lahf
in
js
and
aas
lcall
push
fcompl
jge
and
outsb
popa
test
mov
rorb
mov
and
inc
mov
xchg
mov
shll
stos
or
int
cmp
divl
xchg
insb
lret
test
fucompp
aad
aam
ficomps
adc
mov
mov
adc
add
outsl
iret
aad
loop
cwtl
lcall
lock
mov
xor
dec
hlt
fcom
repz
out
mov
xorl
sbb
cs
xor
orl
outsl
les
adc
roll
push
hlt
xor
push
lods
sbb
push
mov
aaa
xlat
xor
mov
cmp
sti
inc
dec
push
decb
jle
loopne
inc
ja
adc
fs
dec
mov
les
sbb
xchg
movsl
lcall
push
test
xor
loope
pushf
sub
pop
jmp
cmp
fiaddl
aad
dec
xor
mov
shl
dec
mov
and
jecxz
or
fisttpll
inc
mov
cmpl
pusha
or
dec
out
aas
cmp
jg
stos
pop
sbb
addr16
int
jle
test
inc
das
addr16
mov
jmp
not
rcr
lcall
xchg
mov
cwtl
and
hlt
mov
sbb
lret
inc
stc
imul
dec
push
lock
pop
enter
pop
rcr
mov
pop
aam
inc
jl
mov
mov
mov
xchg
pusha
mov
popa
sti
mov
mov
jbe
jno
movb
mov
lret
insb
push
add
sub
test
outsl
jns
stos
cmpsl
xor
imulb
ljmp
dec
rolb
inc
aas
pop
sar
push
insb
pop
xor
test
out
xchg
fucomi
xchg
fdivs
cmp
mov
std
or
es
cli
shrl
lods
sbb
imulb
nop
xchg
fimuls
in
inc
es
xchg
or
fwait
hlt
fwait
sub
pop
add
xor
bound
push
push
mov
mov
mov
mov
ret
outsb
mov
jp
in
stos
mov
repnz
pop
les
mov
sbb
stc
icebp
xchg
jo
sub
mov
sub
je
push
sub
enter
rcrb
and
call
jnp
sub
jle
std
sahf
in
movsl
pusha
jp
cwtl
iret
ret
ret
mov
push
div
inc
dec
cmpsb
jae
push
sbb
xchg
mov
mov
mov
sub
mov
pusha
sbb
add
scas
mov
outsl
adc
les
jb
pusha
leave
fistl
dec
hlt
out
out
arpl
lea
or
scas
mov
outsl
or
mov
sbb
in
cmc
pop
pop
test
fisubrs
xchg
lds
or
shlb
sbb
inc
std
fidivrs
inc
mov
movsb
lds
jbe
ja
jge
mov
push
daa
push
and
jno
jmp
jl
neg
dec
cld
mov
push
inc
or
xor
jno
je
lods
daa
push
inc
adc
test
sbb
out
inc
push
jmp
and
sub
pop
xorb
stos
aas
shl
push
xchg
sub
adc
cmp
lods
mov
inc
dec
inc
cli
es
jl
mov
add
add
xchg
in
push
sub
gs
pop
inc
pop
jbe
les
sub
fmull
xchg
push
sub
sub
les
ret
shlb
jo
out
arpl
lcall
push
scas
or
int
push
push
imul
cmp
inc
dec
pop
shll
mov
jbe
sahf
je
aad
adc
cmpsl
sbbb
outsl
scas
sub
loop
sbb
stc
push
sbb
adc
add
iret
fmuls
and
cli
sbb
es
inc
out
cmp
cmp
cmp
xor
cmc
or
shll
sub
pop
mov
adc
sub
push
inc
adc
bnd
lods
cmp
mov
and
inc
movsb
xlat
outsl
inc
sub
loopne
in
movsb
scas
enter
jmp
imul
dec
jb
jg
popa
xchg
clc
fnstenv
add
cmp
repz
xchg
push
stos
pop
cmp
lods
inc
pop
call
and
pushf
aad
lahf
jmp
or
cmp
add
nop
jnp
pop
aas
pop
les
pushf
out
dec
pop
test
lea
mov
lea
call
incl
mov
push
push
xor
sbb
fldt
jo
inc
push
vprotq
inc
setle
mov
jmp
dec
imulb
jnp
std
cmp
loop
fdivrp
mulb
xchg
dec
cld
mov
push
lret
mov
mov
stos
lds
push
std
cmpsl
pop
ss
shrb
notl
aam
popa
xchg
ret
das
and
aaa
dec
dec
insl
sbb
push
dec
in
cli
xchg
lahf
jg
ljmp
xchg
lods
pop
imul
and
mov
jg
sub
lret
add
fadd
test
mov
push
mov
and
jge
into
xchg
adc
push
pop
loopne
lret
inc
add
cmc
loopne
pop
add
push
adc
cltd
xor
xor
xor
scas
sbb
scas
add
jle
subl
jnp
dec
mov
fs
fwait
pop
ja
push
inc
fidivs
add
stos
push
mov
ror
xor
in
sbb
xchg
fdiv
lahf
mov
cwtl
and
insl
and
jp
mov
mov
and
mov
outsl
sub
popa
jne
cmc
inc
mov
fxch
fistps
mov
xchg
rcl
jns
repz
sub
ret
jle
push
rdtsc
insb
stos
pusha
xor
clc
or
insb
pop
add
jle
push
mov
pusha
adc
and
lret
sub
cmp
inc
pop
dec
inc
jae
jb
push
dec
andl
mov
xor
and
xchg
sbb
mov
subl
test
jmp
cld
in
lds
leave
push
fisubl
arpl
xchg
adc
mov
clc
notl
sub
aaa
fistps
testb
jae
int3
iret
cli
pop
inc
sub
fimuls
sbb
xchg
out
inc
rcl
int3
scas
xor
in
cmp
addr16
popa
popa
mov
stos
stos
jbe
sbb
jge
out
out
sbb
loopne
and
add
jl
xchg
dec
imul
push
and
xor
int3
xchg
xchg
lahf
inc
pushf
xor
sbb
icebp
test
in
addl
mov
clc
sub
in
or
or
loope
movsl
pop
mov
cmp
sbb
xor
cmp
sub
movsl
push
dec
mov
fdiv
pop
sahf
popl
cmp
pop
add
test
xor
nop
sbb
inc
js
sahf
imul
sub
into
roll
orl
sub
lret
daa
int3
int3
adc
inc
sarb
pusha
mov
pop
fmuls
in
push
and
stc
movsl
push
mov
push
int
jns
sub
fs
imull
or
mov
test
dec
test
mov
loop
rcrb
fs
adc
mov
mov
jbe
fmuls
fucom
in
sub
cli
dec
and
cmp
or
or
xor
sar
xorl
cmc
push
pop
lods
and
inc
fildll
pop
pusha
adc
rclb
cmp
imul
mov
sub
pop
sbb
shufps
loope
rcrl
mov
xor
loopne
or
inc
je
in
fldcw
inc
les
xchg
mov
jecxz
sub
mov
cmp
inc
and
pop
fwait
test
rcrl
cwtl
lret
mov
sbb
adc
stc
hlt
mov
dec
mov
pop
je
pop
jmp
xchg
test
call
mov
push
js
mov
add
stos
fcmovnu
mov
pop
pusha
add
jbe
fimuls
das
and
dec
dec
mov
cmpsl
cs
ja
cmp
imul
jecxz
pop
cwtl
cltd
xchg
cmpsl
or
ss
leave
or
ss
and
cmc
mov
repz
lock
jns
push
jne
rolb
loope
aam
aam
ret
mov
imul
xchg
fdivp
iret
ljmp
subl
test
mov
jns
fists
test
cld
mov
add
xchg
fldl
in
clc
mov
xchg
xchg
sbb
leave
mov
mov
stos
clc
ret
pop
push
popa
xchg
data16
push
in
cmc
idiv
rcrb
or
adc
mov
jae
in
xor
es
mov
dec
lods
or
inc
push
dec
mov
fwait
mov
push
jmp
xor
add
test
out
cld
out
pop
bound
mov
in
push
in
xor
push
mov
xchg
cs
sub
jno
data16
pop
jbe
mov
faddp
pop
dec
insl
xor
jne
xchg
cltd
mov
xchg
pop
fistpll
adcl
mov
push
addl
lock
mov
dec
mov
insb
lds
adc
xorb
in
call
pusha
mov
dec
sbbb
ret
out
test
fidivl
aam
push
or
es
mov
mov
movsl
pop
jae
and
imul
or
push
cwtl
iret
sbb
les
mov
sbb
mov
jge
xchg
arpl
lds
or
movsl
xchg
js
sahf
and
or
mov
sbb
pop
jne
xor
mov
pop
lds
cmp
scas
adc
cwtl
and
lcall
push
test
mov
jbe
xor
ds
cld
jne
or
mov
push
mov
push
jl
add
dec
fiaddl
mov
xor
daa
pop
test
jmp
stos
test
scas
lods
mov
adc
in
repz
call
pop
arpl
push
ljmp
add
sti
cmp
push
or
dec
int
movsl
push
loop
and
push
mov
xlat
sbb
push
xor
xchg
fisttpll
pop
adc
idivb
mov
push
lcall
sub
sub
sub
outsb
mov
jecxz
or
rcl
fisubrl
inc
jg
hlt
mov
mov
dec
mov
fldt
and
add
int
outsl
jge
fs
insl
or
lret
or
lahf
lock
mov
mov
stos
test
repnz
adcb
outsl
insb
ffree
loop
mov
clc
fs
inc
adc
push
ret
std
sarl
add
mov
cli
jg
xor
mov
sub
scas
or
std
ljmp
leave
xchg
xor
mov
xor
add
mov
adc
add
add
and
mov
lods
int
xor
in
push
jp
cli
out
lcall
sti
dec
shll
mul
xchg
gs
jns
jge
pop
dec
xor
pop
inc
xchg
fstps
xchg
repz
fstl
jle
mov
jae
pop
dec
cmp
into
adc
pushf
sub
mov
add
cli
nop
xor
mov
jb
test
sbb
sbb
xchg
leave
mov
adc
push
mov
push
sub
andl
pop
out
add
xchg
inc
stc
push
addr16
add
mov
push
in
andb
sbb
push
push
scas
lods
push
std
mov
sbb
or
popa
mov
mov
lret
xchg
jb
mov
adc
mov
ffree
lock
in
pop
je
jle
push
test
aam
fadd
dec
lods
das
es
xlat
jo
fisubl
xchg
sbb
in
popa
inc
mov
mov
fildll
pop
mov
call
pushf
jmp
or
pop
pop
mov
lcall
daa
inc
and
repz
aaa
sbb
jecxz
add
aas
pop
ss
test
mov
leave
sbb
fs
pop
psrlq
aaa
add
or
sarl
mov
mov
push
dec
dec
pop
jns
mov
into
cmp
mov
pop
or
or
pop
push
mov
add
loopne
or
fisttpl
mulb
cwtl
in
mov
in
mov
add
mov
jecxz
std
imul
jp
imul
mov
sub
ficoml
jle
xorl
nop
dec
xchg
jmp
xor
xchg
cmp
push
out
ficompl
inc
notb
in
stos
inc
insb
mov
insb
xor
push
jnp
rclb
in
fdivl
iret
fistps
out
adc
inc
outsb
in
pop
jae
jns
push
rorb
popf
adc
mov
xor
xchg
jns
pop
sbb
bound
scas
mov
enter
lock
gs
imul
leave
inc
dec
clc
hlt
enter
or
inc
push
mov
or
and
aaa
pop
cs
add
cld
popf
int3
movsl
add
pop
movsb
jp
ficoms
lds
jp
scas
repz
and
push
lret
cmp
xchg
movsb
ja
cmp
add
rol
test
cmp
daa
or
xor
xchg
sub
mov
jl
sahf
inc
jno
dec
rclb
push
jmp
mov
jo
das
jmp
addl
test
jp
ret
sbb
cmpsb
push
pop
in
fidivl
enter
pop
cmp
dec
icebp
loope
insb
push
sub
repz
cmp
dec
jp
pop
fdiv
and
jg
pop
cltd
ret
cs
sub
lock
add
pop
mov
lret
out
js
mov
pop
mov
push
das
je
fmull
push
sbb
fists
outsb
in
loop
adc
mov
stc
jg
jmp
mov
pop
orl
ss
and
pop
in
push
mov
pop
int
dec
jbe
fildll
xor
sbb
leave
mov
pop
pop
sahf
pop
insb
push
test
sbb
dec
cmp
cmp
or
fs
mov
mov
test
cmp
sar
out
ret
mov
divl
bound
cmp
sub
or
sub
cmc
popa
jae
cmp
mov
rcrl
xchg
adc
xchg
data16
push
dec
lods
mov
outsb
mov
cs
sub
dec
add
mov
dec
in
in
sbb
std
test
xorb
sbb
scas
dec
sbb
inc
lcall
les
sub
push
cmpsb
outsb
xchg
mov
movsl
sbb
inc
pop
fadd
repnz
jle
add
adc
mov
cs
icebp
aad
jl
nop
or
add
aaa
bound
xchg
pop
fisttps
xor
xchg
add
xchg
subl
fstpl
mov
cmpsb
mov
mov
add
fwait
stos
mov
pop
cmpsb
add
inc
jmp
push
push
mov
lds
or
into
div
je
std
xor
cwtl
cmovle
cmpsl
or
jle
pop
mov
icebp
ja
sar
xor
lret
add
in
mov
xor
xor
sub
das
bound
shlb
ficompl
mov
popf
aam
mov
ret
fcompl
rolb
insl
into
push
aaa
dec
aad
mov
ljmp
xchg
lods
mov
mov
xchg
and
pop
into
mov
add
jns
test
insl
mov
jb
push
add
fisttpll
daa
clc
cs
xchg
adc
sbb
lret
pop
adc
pop
loope
ljmp
push
and
push
mov
mov
mov
xor
inc
jmp
xchg
sub
test
lahf
sbb
ds
inc
orb
fwait
out
stos
push
das
cmpsb
dec
add
sti
sub
out
mov
pop
into
jns
sbb
aas
push
xchg
leave
sub
call
mov
sahf
data16
fcomi
jp
push
iret
mov
mov
mov
cmp
jae
dec
pop
fistpll
test
mov
dec
int3
xchg
xor
cmc
andl
jo
sub
or
mov
outsl
push
int3
add
and
jge
jnp
call
ds
popa
and
dec
mov
ds
ret
clc
pop
repnz
jns
lods
jae
arpl
xchg
pop
sub
pop
cmp
inc
mov
adc
pop
loop
xchg
shlb
rcrl
cmpb
cmp
scas
pop
dec
push
es
pop
adc
test
mov
cld
aam
adc
jg
sbb
push
inc
sbb
xchg
or
fwait
mov
or
ja
int3
nop
inc
sbb
dec
push
negl
inc
lds
jno
and
inc
scas
rclb
leave
cmp
popa
lds
xchg
pop
jbe
les
add
or
daa
or
ret
push
adc
jl
pop
add
arpl
int3
mov
ss
sbb
addl
fmuls
inc
jecxz
inc
movsb
imul
rcll
sarb
pop
jl
stc
push
gs
loope
stos
push
sub
nop
inc
cmp
pop
ds
mov
pop
and
sbb
or
sbb
add
xchg
fwait
xor
cmp
arpl
pop
bound
inc
pop
jb
es
icebp
fdivl
ds
push
fdivl
rclb
out
mov
out
sbb
in
and
repnz
push
mov
add
shl
jmp
or
scas
ror
xor
ficompl
sahf
add
pushf
orb
aad
shrb
add
fs
les
dec
fdivrs
adc
jmp
daa
xor
and
mov
hlt
aas
mov
cmc
sub
sbb
dec
push
cmpsb
pushf
lds
cli
mov
popa
nop
add
pop
mov
mov
mov
xor
sub
sahf
mov
push
add
cmp
ljmp
cmovg
sbb
and
repz
mov
cmp
repz
jno
sbb
je
adc
pushf
sbbl
cs
mov
out
nop
aas
sahf
pop
jb
cmp
dec
repz
je
scas
cmp
mov
lods
in
loopne
pop
addl
sti
js
mov
loop
dec
xchg
xor
push
inc
pop
dec
outsl
and
inc
push
inc
das
xchg
bound
ret
mov
jl
mov
shll
divb
add
cwtl
lret
cmpsl
or
jge
push
and
icebp
dec
cwtl
cld
pop
cli
pop
lret
outsl
xchg
aad
mov
fsub
lock
pop
mov
fcmovbe
cli
arpl
sub
and
cmpsb
es
jge
insl
mov
mov
xchg
fwait
je
ljmp
lahf
lods
or
adc
and
cli
cmp
add
mov
cltd
jnp
arpl
aam
lds
mov
clc
imul
sbb
outsb
or
mov
inc
pop
mov
or
adcl
lcall
lods
pop
or
add
mov
mov
fidivrl
xchg
lods
sbb
xor
dec
xchg
repz
jl
fwait
push
fs
push
rcl
jp
repnz
test
push
cltd
out
cltd
adc
bound
pop
in
jl
xchg
sbb
mov
inc
sbb
pop
movsl
iret
imul
out
movsb
dec
or
sub
push
or
roll
cltd
or
jmp
std
in
xchg
subl
mov
add
pop
sub
scas
xchg
or
mov
insb
push
cli
repz
ret
dec
inc
dec
sub
xor
popf
and
pop
sub
inc
jae
xchg
push
push
push
in
popf
pop
and
cwtl
jmp
inc
xor
sbb
or
or
sbb
jno
imul
ficoml
or
adc
pop
mov
adc
ror
cs
mov
arpl
sbb
inc
sbb
pop
or
push
scas
fbstp
fcmovnbe
dec
or
push
int3
int3
jnp
pop
pop
add
sbb
lcall
sarb
scas
mov
dec
and
nop
lds
fsubs
lahf
push
or
xchg
jbe
cmp
jge
adc
daa
or
sub
in
fmulp
jno
outsl
imul
mov
xor
cmp
out
roll
test
adc
xor
push
cmpsb
add
xchg
in
test
cmp
int
in
pop
mov
xor
loope
push
lds
add
ds
sbb
dec
pop
in
aad
xor
sbb
repz
xor
pop
xchg
pop
mov
sti
pop
icebp
sbbb
sub
fsubl
or
mov
leave
aam
fbstp
pusha
shrb
mov
in
out
mov
clc
mov
in
dec
int
push
mov
cmpsl
mov
aad
imull
lret
adc
mov
enter
sti
sahf
mov
xor
or
inc
loop
scas
iret
stc
in
les
jo
inc
sub
ss
pop
mov
fdivs
jl
out
push
cli
sbb
sbb
xchg
test
arpl
lods
into
xchg
cmc
out
xchg
pop
xor
mov
adc
dec
imul
and
ja
dec
inc
int
lods
andb
sub
call
stos
sub
out
fists
mov
cmp
pop
repz
mov
dec
xor
dec
es
inc
ror
flds
les
add
xchg
aaa
push
and
repz
mov
and
pop
addr16
adc
mov
mov
inc
cs
xor
nop
ret
aas
jne
and
cmp
dec
push
push
jecxz
push
and
popf
dec
lea
call
mov
pop
sbb
dec
jno
out
cltd
in
mov
inc
imull
dec
rcrb
mov
xor
add
shll
pop
or
cwtl
test
dec
mov
and
push
xor
fmulp
and
shl
lock
cmc
pop
shll
ror
and
aam
out
ret
cli
jle
es
imul
lret
xchg
aas
xchg
ljmp
lods
jbe
or
dec
jb
and
xchg
mov
mov
cltd
mov
enter
dec
mov
lock
mov
data16
movsb
popa
insb
xchg
fwait
jnp
je
cmp
or
mov
stos
mov
sbb
in
test
pop
sub
xor
roll
aaa
dec
fldenv
mov
insl
pop
test
dec
xor
stos
fisttpll
shll
mov
testl
or
add
xor
ljmp
divb
xchg
addr16
add
dec
sahf
rcrb
adc
jp
cmp
mov
sub
stc
fdivl
mull
mov
push
adc
mov
stc
push
jmp
enter
mov
loope
sub
stos
cmp
push
dec
shl
stos
lahf
pop
mov
imul
jno
sbb
jle
pusha
pop
in
xchg
ds
sbb
mov
ret
addr16
pusha
sbb
inc
rcrb
push
sbb
pop
popf
xchg
sbb
mov
ljmp
adc
sbb
aaa
mov
nop
jns
scas
frstor
mov
in
adc
mov
mov
xor
leave
movsl
inc
and
test
popw
inc
pop
imul
aaa
lcall
add
dec
sub
fidivrs
inc
test
push
cltd
and
mov
out
cmp
push
lods
push
pop
xchg
jge
aam
sbb
arpl
daa
or
xorl
leave
jl
or
dec
xchg
aad
push
xchg
iret
out
xor
xchg
sub
lahf
loopne
adc
aaa
adc
test
fldt
inc
ret
cmpsb
xchg
xor
popl
enter
pop
cli
jo
push
mov
loope
xchg
mov
cmp
jge
movsl
jae
ret
and
imul
imul
adc
repnz
xor
lcall
pushf
sarl
jmp
movsb
lcall
push
fmull
mov
lods
pusha
add
adc
inc
xchg
jg
ljmp
and
push
and
push
rorb
sub
repnz
scas
lret
jb
sti
inc
xchg
mov
push
sahf
inc
pop
aam
cmp
add
call
addr16
pushf
push
and
adc
pop
cmp
icebp
cwtl
mov
out
mov
xor
in
mov
dec
mov
into
push
std
cmc
mov
inc
xor
pop
pop
dec
int
adc
imul
sub
lods
imul
xlat
jmp
je
mov
mov
push
incb
inc
mov
jmp
xor
inc
rorl
xchg
jnp
inc
les
push
xchg
cli
xchg
sbb
icebp
dec
push
outsl
out
mov
adc
cmpsb
jecxz
xlat
jmp
mov
push
and
xlat
ja
nop
popf
push
push
aas
adc
cltd
jb
sahf
cmc
dec
loope
push
je
xor
mov
leave
insb
call
jns
movsl
mov
addr16
fcmovne
movsl
stc
pop
es
inc
jle
pushf
inc
gs
sbb
jge
jb
ljmp
roll
lods
xchg
idivb
dec
ds
inc
xlat
mov
pop
test
mov
cld
lahf
mov
mov
stc
lret
dec
int3
ret
mov
insb
xor
inc
jnp
pop
lock
shlb
vmwrite
sar
ret
mov
sub
dec
into
fldt
jmp
dec
jp
xchg
sbb
add
xchg
adc
popa
pushf
inc
loop
loope
add
xchg
out
mov
idivl
sbb
negb
cltd
jmp
aaa
cmp
dec
addr16
ffree
mov
clc
fists
jl
daa
aam
rcrl
jns
loop
and
inc
xlat
xchg
xor
test
fisttpl
lea
ffreep
es
lret
mov
arpl
xchg
mov
dec
call
sbbl
leave
movsl
gs
insb
mov
inc
inc
cli
sub
fwait
je
pop
push
sbb
stos
add
dec
mov
out
push
in
push
bound
mov
in
movsl
inc
xchg
mov
dec
mov
dec
cmp
iret
fiadds
jp
fidivs
pop
xchg
xlat
mov
inc
cmp
or
jne
mov
mov
jne
nop
sahf
xchg
xor
js
xchg
xchg
icebp
mov
dec
clc
cmp
or
mov
movsl
andb
jle
stos
adc
and
outsb
mov
lcall
dec
shll
and
ret
pop
pop
xchg
xor
inc
lcall
push
fmull
popf
lods
xchg
sub
das
push
js
jae
mov
aad
into
sbb
roll
scas
inc
cld
inc
push
sti
and
or
cmp
mov
test
sbb
jo
hlt
enter
clc
inc
inc
and
dec
or
or
test
pop
mov
add
jbe
push
or
pop
pusha
dec
dec
fsubp
lods
outsb
cmpsb
shlb
scas
outsl
fdivs
cmp
pop
movsb
mov
in
jbe
jg
jge
jp
sbb
testl
call
lahf
jbe
add
outsb
xor
out
push
or
or
sti
test
cmpsb
test
lds
jbe
out
ret
ret
dec
pop
cmp
mov
cmpsl
inc
imul
mov
movsl
jp
cmpsb
and
pop
xchg
mov
mov
test
push
add
jo
xor
clc
lods
sti
rcrb
js,pt
out
pop
out
cmp
cmp
jno
fdivl
xchg
js
jns
fs
and
jg
repnz
mov
les
imul
ret
mov
int
xchg
adc
lret
mov
imull
adc
test
sub
hlt
sbb
jp
ret
cli
stc
sbb
shrl
in
loop
push
add
push
or
adc
xor
dec
flds
cmp
lods
dec
icebp
out
and
cli
jle
sbb
mov
push
push
or
aas
into
dec
inc
or
jge
shlb
int
pop
addr16
mov
imul
xchg
and
dec
dec
movsl
lods
push
or
repz
sub
mov
xchg
mov
sti
mov
adc
sub
test
clc
dec
or
inc
out
test
mov
fadd
lahf
std
das
repz
insl
push
xchg
mov
mov
out
popf
mov
adc
in
ljmp
and
aad
jmp
jmp
jb
sbb
in
lcall
mov
lods
cmp
leave
je
mov
or
mov
loopne
dec
inc
push
mov
mull
ljmp
call
lock
pop
shrl
mov
jmp
sub
insb
std
int
test
push
cmpsl
and
rol
out
fistpll
lret
mov
cmp
mov
pop
pshufw
sar
aam
imul
int3
movsb
ja
push
sub
icebp
cmp
pop
xchg
sbb
or
jge
mov
sti
lods
dec
sbb
test
mov
and
mov
ret
xchg
add
pop
leave
cltd
and
imul
fcoml
lods
pop
fucomp
xchg
clc
sbb
xchg
ss
ficoml
pop
lea
stos
xchg
fdivrl
adc
xchg
jp
ds
mov
or
call
mov
les
int3
test
dec
xorl
push
pop
inc
fidivrs
sub
mov
or
addr16
sub
ss
xlat
aad
aad
das
fs
in
mov
ret
add
mov
mov
lret
inc
aam
cwtl
cmc
sbb
mov
js
movsb
dec
mov
xorl
xchg
or
mov
xchg
pop
icebp
xchg
mov
and
mov
scas
xchg
stos
test
and
addr16
jnp
out
jle
jbe
in
pop
push
pusha
push
xchg
or
ret
mov
into
lock
inc
movsl
mov
jae
mov
push
lahf
xor
aam
adc
scas
mov
es
mov
sub
sbb
ds
scas
mov
mov
out
popf
mov
or
dec
leave
xchg
and
aas
mov
arpl
gs
and
adc
push
sbb
xchg
jl
daa
add
leave
xchg
int3
cmp
ds
xorl
dec
and
sti
scas
dec
dec
inc
and
icebp
xchg
std
dec
mov
cs
push
stc
xchg
jbe
push
pop
jge
add
aad
push
mov
lods
jno
mov
rorl
push
aas
push
pop
mov
xor
dec
mov
push
xchg
imul
in
or
push
jno
xor
dec
xor
pop
mov
mov
push
lret
mov
mov
dec
fnstsw
sbb
push
lret
lcall
repnz
add
mov
arpl
xor
int3
pusha
outsl
jnp
pop
incb
js
jns
pop
outsb
lidtl
loop
in
fsubl
fsubrl
mov
aaa
adc
cld
sub
lret
mov
dec
xor
repnz
push
mov
sub
stos
mul
xlat
lret
rol
sub
movsb
mov
fstps
mov
test
pop
xor
adc
cmpsb
pop
pop
loop
ja
stc
or
fs
xchg
adc
cwtl
cmp
mov
les
cli
mov
shll
xchg
inc
or
mov
cmc
into
xor
aaa
xor
or
xor
repnz
and
push
sub
add
sbb
mov
stc
mov
clc
add
aas
imul
sti
push
xchg
mov
xor
push
xchg
and
fldl2t
mov
les
mov
xchg
orb
push
and
sub
pop
rcll
fadds
pushf
sub
divl
aad
mov
mov
push
mov
aam
iret
pop
xchg
in
jecxz
mov
cmpsb
in
lea
call
imul
nop
mov
ja
scas
jl
dec
xor
das
bound
aad
or
cmp
inc
fwait
pop
outsb
das
ds
shll
callw
inc
jbe
mov
and
sub
add
in
icebp
stos
or
cld
or
lret
sub
rorl
mov
lock
outsl
pop
cs
mov
sub
sub
es
out
mov
dec
mov
test
cmp
lret
lods
mov
in
mov
mov
ljmp
mov
dec
add
dec
pop
cltd
push
stos
mov
stos
mov
fstl
inc
fdivrp
push
cmp
xchg
or
or
faddl
stos
cmpl
push
push
ljmp
xor
jbe
or
adc
cwtl
mov
out
xchg
dec
mov
mov
ja
sub
dec
push
lods
roll
hlt
or
dec
and
pop
add
add
aam
bound
jns
out
repz
push
insb
xchg
push
sub
ja
ds
mov
cmpsl
mov
mov
mov
mov
out
decl
fldenv
mov
hlt
fists
adc
sub
subl
out
cld
push
sub
fwait
into
je
pop
arpl
stos
clc
idivb
mov
enter
aam
rcl
jle
outsl
jmp
cmpsb
cs
in
adc
iret
sbb
ret
mov
inc
mov
mov
push
bound
inc
mov
sub
and
addl
imul
scas
push
mov
adc
mov
fcomip
pop
mov
hlt
mov
arpl
je
sub
push
or
add
aaa
xlat
dec
clc
or
popf
add
sbb
pop
mov
sub
iret
sub
test
scas
sub
jp
cmp
mov
insl
inc
jbe
xchg
xchg
jge
je
sbb
cli
daa
add
pop
jg
xchg
cli
int
mov
mov
xchg
xor
movsb
lahf
cmp
sar
test
cmp
leave
inc
outsl
out
movsl
cmpsb
adc
dec
enter
pop
mov
cmc
push
jmpw
aad
ret
pslld
int3
stc
ds
inc
dec
movsl
mov
stc
and
fildl
repz
outsb
add
test
ret
xor
pop
and
lahf
xor
in
sbb
cmp
fmull
push
sbb
aas
pop
cld
adc
xlat
sbb
jg
or
sbb
cmp
loope
push
leave
data16
jmp
jo
mull
mov
movsl
mov
mov
sbb
rcrb
sahf
das
faddl
test
push
popf
orb
bound
rcrb
loop
int3
xchg
stc
shll
rcrl
jl
sahf
shrl
mov
fsubs
addr16
in
jmp
xor
cmp
arpl
into
adc
in
or
xor
iret
pop
movsl
xor
adc
cwtl
jns
lahf
aaa
mov
mov
add
fwait
sbb
sbb
push
xlat
cmpsb
out
dec
sub
insl
fsubr
addr16
adc
pop
iret
out
jmp
dec
gs
cwtl
add
mov
outsl
jle
or
mov
and
les
jmp
xlat
sbb
mov
xchg
xor
lds
das
int
pushf
fdivs
jmp
cmpsl
pop
cs
testl
xchg
lods
je
jo
jecxz
outsb
add
test
sbb
call
mov
mov
addl
mov
pop
js
lock
adc
pop
inc
mov
bound
sbb
mov
mov
ljmp
mov
testb
popf
cwtl
jno
mov
mov
xorl
lcall
mov
xor
pop
dec
mov
sub
jae
and
cmpsb
ret
ss
mov
lods
xchg
aam
dec
mov
sbb
out
push
ss
loope
dec
lods
and
mov
or
cmp
jno
js
cltd
mov
jb
cwtl
or
rcrl
push
xchg
xchg
fnstsw
clc
nop
stos
xacquire
pop
sbb
mov
pop
jecxz
stos
jo
cmpsb
out
jo
dec
xchg
sahf
push
dec
push
lds
xor
or
xor
inc
add
xchg
mov
dec
test
fwait
test
mov
dec
inc
mov
fs
adc
push
add
pop
add
popf
cmc
xor
hlt
dec
fsubl
ljmp
sbb
add
in
mov
addr16
ss
jg
mov
and
mov
push
and
dec
test
sahf
jne
lcall
xor
xchg
xchg
scas
sub
jmp
hlt
in
cmp
xchg
xchg
push
sub
xchg
shlb
inc
fwait
sub
mov
les
jle
jle
pop
test
lods
mov
pusha
mov
pop
ret
pop
pop
cmp
and
iret
jae
jb
push
and
call
fldl
xor
fimull
push
sbb
xchg
sbb
sub
sarb
jl
pushf
ds
shrl
mov
mov
orl
popa
inc
sub
or
jge
lret
aaa
xchg
not
or
incb
adc
int3
adc
rcr
rcr
lds
mov
ret
test
or
in
add
push
cmp
mov
push
xchg
xchg
aam
movsl
dec
jge
daa
sbb
or
enter
adc
ja
jl
push
jl
push
out
push
push
arpl
jo
cmp
lahf
pop
mov
jp
clc
arpl
push
pop
fs
inc
aam
cmpsb
xchg
sbb
sub
push
enter
pop
idivb
inc
loope
sbb
pop
movsl
sub
jnp
ret
data16
out
movsl
mov
mov
in
cmp
sbb
repnz
ret
xor
negb
cmp
pop
insb
ds
push
nop
imul
sub
sub
mov
fs
shlb
and
mov
cmp
mov
in
and
in
pop
int
sub
cmp
js
gs
lret
push
rcll
mov
add
sbb
xchg
pop
push
sub
fs
shl
inc
push
sahf
stc
js
cmp
inc
ss
adc
sub
ss
add
fst
add
jecxz
and
pop
adc
cmp
test
or
push
pop
cmc
rcrb
xor
add
jnp
xchg
cld
ds
pusha
sahf
add
into
data16
lea
adc
sub
dec
sub
decb
outsl
outsb
gs
aas
loopne
pop
cli
dec
sub
fsts
push
ror
repz
mov
sbb
fisttpll
imul
pop
out
test
pushf
xor
jmp
sbb
sbb
aad
xchg
pop
nop
or
scas
aas
nop
pop
fdivs
sarl
mov
sub
jecxz
outsb
xor
lea
out
call
jne
inc
mov
push
sbb
dec
mov
pop
sbb
flds
cmp
cld
cmp
leave
or
and
fs
test
nop
std
ret
cwtl
sub
jge
add
icebp
pop
add
pusha
imul
or
mov
enter
cmp
lods
mov
pop
insb
and
in
loop
sub
aam
mov
pop
es
loopne
insl
pop
aas
inc
dec
mov
xchg
xchg
adc
sbbl
mov
negl
mov
mov
loopne
xlat
add
cltd
lds
xchg
test
sarb
push
ss
pop
pop
scas
clc
lret
scas
jp
stos
jl
sbb
push
mov
mov
jno
stos
pop
mov
adc
mov
dec
push
xor
xchg
sbb
mov
sbb
lahf
and
test
test
mov
lds
fadd
or
lods
lods
fwait
xor
mov
add
lret
aas
bound
push
in
call
lods
mov
dec
mov
mov
sti
sub
push
sub
mov
lds
xchg
jne
mov
ja
push
roll
cmpl
xchg
mov
mov
adc
and
push
test
stos
fisubrs
and
sub
mov
jnp
lock
ds
in
hlt
shll
xlat
iret
xlat
fwait
push
ret
or
add
movb
push
call
and
cli
ss
sub
ret
fidivrl
loop
xchg
xor
sbb
jg
imul
cmc
scas
int3
in
push
pop
or
ja
loop
pop
stos
pop
repnz
mov
arpl
negl
push
push
and
or
jnp
test
dec
mov
fisubrs
vpunpcklwd
fidivs
into
and
mov
or
out
mov
jge
std
jecxz
mov
daa
add
sti
cmp
push
nop
jno
sbb
divb
sub
aad
push
add
es
pop
mov
lahf
jnp
in
push
push
push
test
shl
lea
pushl
push
add
in
scas
aas
push
pop
xor
mov
dec
sub
push
cmp
mov
and
lret
jge
jb
popa
inc
mov
xor
xor
ss
mov
je
js
test
pop
jmp
rcrl
out
jae
arpl
jne
push
sbb
adc
lea
loopne
cmpsl
cmp
js
daa
mov
sbb
and
call
imul
and
out
mov
push
shr
mov
call
cmpsb
sahf
jne
es
cmp
addb
outsl
inc
int3
stc
das
dec
push
fs
or
sbb
ss
dec
ja
loopne
sahf
fcomps
ret
dec
inc
in
sbb
sarb
ret
std
movl
xor
inc
fcompl
ffree
adc
pop
imul
in
push
push
mov
test
and
test
cwtl
push
push
mov
cmp
mov
xor
push
mov
xchg
push
dec
xchg
adc
repz
je
xchg
leave
pop
or
fstl
ljmp
adc
inc
or
push
mov
jle
dec
aad
xchg
adc
das
mov
jb
and
xor
inc
je
cmp
jecxz
mov
scas
xchg
clc
lea
into
outsl
mov
lods
and
dec
test
dec
repz
push
mov
inc
in
lock
fstpt
mov
adc
lret
testb
cmpsb
std
imul
fdivrl
das
mov
cld
mov
mov
mov
test
in
pop
mov
sub
jb
mov
aas
ret
push
dec
add
fadds
jl
lods
xchg
push
xchg
push
sti
aam
aam
xchg
popa
pavgb
mov
sbb
stos
mov
aas
cmc
lret
data16
cltd
cld
stos
pop
test
leave
push
sbb
xchg
pop
clc
push
inc
and
sbb
fisttps
cmp
stos
dec
call
inc
xchg
sub
dec
push
jnp
jecxz
mul
jb
and
dec
or
pop
lods
xor
cmp
in
shlb
adc
hlt
cmp
ja
dec
daa
dec
sub
outsb
inc
cmp
mov
sbb
push
inc
stos
lcall
bound
out
jns
out
sbb
xchg
dec
mov
mov
pop
sub
jbe
sbb
jmp
jp
ficoml
mov
xor
push
dec
dec
mov
jne
inc
pop
mov
dec
xchg
jb
pop
xchg
push
mov
xchg
mov
filds
cwtl
sub
insl
mov
mov
xor
cmc
shl
pause
sarl
and
or
mov
adc
iret
ss
ficomps
dec
push
inc
shll
jae
inc
mov
stos
inc
push
popf
jo
in
mov
stos
mov
pop
cmp
test
in
scas
das
add
pop
cmp
adc
idivl
push
sahf
mov
hlt
imul
xor
push
gs
jl
jae
fbstp
adc
lea
dec
fiadds
pop
mov
pop
dec
dec
fimuls
pop
push
lds
sar
mov
and
dec
sbb
fnstcw
movsb
pop
mov
popf
jbe
push
jge
sbb
daa
add
xchg
cmp
das
jno
fstpl
and
push
dec
xor
jno
iret
inc
test
mov
outsb
lahf
lcall
test
popf
fstps
sbb
stos
cmpsb
cltd
gs
in
stc
push
enter
pop
je
pop
push
jno
loope
mov
sub
dec
sarl
fabs
mov
movsl
popf
cmp
test
outsb
dec
andb
sbb
jae
xor
daa
jnp
jne
lcall
pop
push
push
lcall
sub
push
dec
mov
inc
es
push
cwtl
sub
push
push
mov
in
insl
cmpsl
mov
xor
push
rclb
int
add
mul
add
jb
test
xchg
sbb
outsl
sahf
sbb
lds
pusha
ljmp
and
loop
add
mov
adc
pop
ss
or
xchg
mov
out
je
cli
jge
sub
icebp
mov
xchg
insb
jmp
into
mov
insl
les
insb
shrb
adc
roll
jb
adc
lcall
data16
fisubrl
or
xlat
arpl
dec
sub
ret
fwait
mov
test
sti
and
ljmp
jno
loopne
dec
out
sub
int
fld
xor
test
repz
sbb
push
lret
imul
add
xor
xchg
pushf
fldcw
jmp
dec
outsb
loope,pn
ret
sti
adc
into
adc
jb
cmpsb
lods
dec
stos
int
je
mov
pop
mov
jae
sbb
xor
inc
mov
orl
push
fnclex
or
popa
sub
inc
test
lret
inc
pop
mov
inc
mov
xor
shlb
mov
fsubrl
out
adc
xor
add
mov
push
mov
leave
lret
out
call
mov
jnp
lock
leave
test
stos
pop
xor
xchg
add
aam
imul
pop
add
pop
mov
xlat
dec
test
or
inc
lock
popa
shll
mov
cmp
ljmp
sahf
lcall
xor
cmp
push
xchg
push
fst
and
lods
or
clc
inc
jae
xchg
in
shrl
cmp
in
jp
cmp
call
xchg
jae
xor
add
pop
xor
jns
test
mov
mov
rcr
xor
xor
inc
pusha
push
dec
push
adc
daa
or
pop
dec
fwait
mov
cmp
add
out
jmp
js
mov
cmp
sub
in
add
xchg
nop
sub
mov
xor
addr16
pop
dec
jp
adc
out
popa
xor
mov
jmp
aaa
mov
loope
fists
mov
jmp
push
fsubl
andl
out
inc
cltd
cmp
push
add
les
pop
insb
pop
lods
push
jnp
pop
fnstsw
fsubrl
ret
pusha
pop
out
iret
xchg
in
ret
or
ds
inc
fdivl
icebp
push
outsb
push
popf
xchg
inc
mov
inc
sub
jmp
sbb
iret
lret
imul
jno
xchg
adc
adc
arpl
test
sti
and
mov
in
arpl
lcall
adc
rorl
dec
or
jae
add
sbb
shl
pop
pop
jp
sbb
mov
xchg
vmovaps
adc
add
mov
in
movsb
in
inc
push
test
addr16
push
sbbl
add
mov
test
jno
lds
lahf
xor
xchg
test
jo
fldt
mov
stos
or
push
and
in
loopne
ss
pop
mov
lods
push
fsubr
loope
aaa
xchg
sub
pop
lahf
cmp
movsb
outsl
movsl
movsb
sbb
and
out
int
addb
aam
add
or
rcl
ds
enter
stos
js
add
pop
jmp
lret
xchg
movsl
mov
mov
cmc
cwtl
outsb
lret
test
pop
leave
outsb
rolb
lcall
fwait
into
mov
mov
sarl
push
aad
sbb
test
cmp
lods
pop
mull
mov
rcrl
mov
rcrb
in
mov
cmpb
outsl
add
fucom
std
sub
stc
popf
cmpsb
fs
negb
fistpll
test
fmuls
xchg
loopne
dec
cli
mov
mov
enter
ja
out
or
shlb
into
lahf
std
std
cmc
daa
mov
xor
jne
pop
and
imul
fs
int
add
scas
fldenv
test
sub
add
out
mov
sbb
mov
adc
sti
shll
mov
sub
loopne
cmp
inc
pop
jns
frndint
je
repz
rcrb
mov
call
int
adc
addr16
jmp
andps
inc
push
jae
enter
lcall
jb
pop
and
adc
jecxz
pop
xor
mov
lea
int3
call
mov
cltd
mov
sbb
leave
mov
fistl
pop
loope
add
iret
inc
das
mov
fwait
das
cltd
lret
addb
xchg
mov
shrl
ret
xor
std
mov
inc
cwtl
pop
push
andl
test
icebp
fldl
mov
push
and
mov
mov
lock
cli
data16
bound
pop
shll
dec
into
cltd
ret
jb
inc
fisubrs
dec
insl
aam
enter
push
rol
jne
mov
out
lods
into
xchg
push
mov
pusha
ret
out
and
insl
lcall
jge
xchg
cltd
push
movsl
test
adc
mov
xchg
push
mov
cmp
jl
mov
sbb
mov
stos
sub
dec
out
cld
xchg
push
xor
pushl
aad
and
insb
xor
test
xchg
ja
dec
mov
sub
dec
adc
add
cmp
and
push
fwait
mov
xor
add
or
stos
out
jo
bound
jecxz
jns
or
xchg
or
cmp
mov
jp
add
mov
pop
scas
mov
adc
pop
jne
jle
mov
mov
xchg
cli
lahf
push
jmp
and
hlt
xorl
out
jmp
or
movsb
sub
and
insb
leave
popf
or
jle
cltd
sbb
leave
cmovnp
int
iret
hlt
push
pusha
ret
mov
inc
out
jp
shll
push
xor
sarb
test
pushf
ficompl
mov
or
fidivl
imul
je
cmc
xchg
mov
in
into
xchg
adc
push
mov
repnz
or
leave
pop
adc
add
ja
aaa
mov
xor
lock
xchg
ret
cs
test
mov
jb
ficoms
jae
jb
xchg
shrb
outsl
scas
mov
and
cmp
outsb
movsb
jo
jg
shr
xlat
jbe
mov
inc
sbb
adc
cmp
shlb
ja
rorb
cmp
push
stos
ss
xor
imul
push
iret
and
test
xor
imul
cwtl
fmul
mov
dec
cmpsl
push
sti
pop
loope
fisubrs
cmp
sti
mov
movsl
stos
bound
mov
sbb
push
adc
xor
mov
adc
call
or
pop
push
sbb
push
in
push
sbb
scas
sub
lock
cs
xchg
adc
push
std
mov
mov
jns
mov
lret
mov
sbb
aam
insb
push
fcoms
fsubrs
sub
push
mull
outsl
lret
mov
mov
fimuls
out
mov
test
adcb
test
nop
test
jae
adc
ret
and
addr16
leave
dec
and
fs
cli
jecxz
xor
add
ss
sbbb
xor
sub
adc
test
imul
push
data16
in
lods
mov
stos
xor
loope
out
sub
daa
in
scas
xor
repnz
add
lcall
loopne
test
dec
movsb
and
jmp
xor
in
shrb
cmp
test
push
jno
cmp
xchg
dec
rorl
mov
pop
adc
mov
jmp
xchg
das
cmpsl
xchg
xchg
aad
repnz
jne
leave
aas
or
jb
dec
cmpsl
dec
cltd
cld
jne
cmpsl
outsb
jecxz
pop
push
mov
int3
lock
jno
jp
cmp
dec
mov
jae
inc
testl
inc
mov
dec
inc
cmp
push
and
mov
xchg
dec
sarl
mov
std
pop
add
sbb
and
mov
frndint
or
ror
lds
adc
rorb
sbb
std
pop
call
repnz
aam
test
ret
add
popa
xor
dec
sahf
bound
xchg
adc
ds
cmp
cmp
mov
xorl
and
or
subps
xchg
add
outsl
or
dec
jle
arpl
dec
test
xchg
mov
rcll
mov
or
pop
add
or
sar
lret
sbb
or
movsl
bound
add
rcll
dec
add
dec
inc
push
xchg
or
pop
jb
in
dec
into
push
xor
insb
add
and
pusha
out
dec
jmp
fisubl
in
push
xchg
rcll
ret
lahf
lds
cmpsl
in
addr16
shrl
mov
test
mov
cmpl
mov
iret
push
xor
jmp
jmp
add
and
sub
jge
test
jo
stos
stos
rorl
and
pop
pop
insb
xor
stos
jnp
pop
imul
loopne
pusha
vpcomgeq
ret
sub
or
das
jae
idiv
push
hlt
adc
popf
in
out
out
inc
inc
daa
dec
fimull
adc
xchg
lea
or
jle
scas
pop
mulps
cs
adc
jmp
mov
leave
aam
nop
hlt
dec
dec
mov
inc
cmp
in
xchg
aaa
push
pushl
or
mov
dec
test
lods
sbb
clc
jns
vmovdqa
rorb
scas
fisttps
and
icebp
inc
cmp
fwait
imul
mov
cmp
jbe
jmp
cmp
pop
mov
jl
adc
push
int
xor
push
das
lahf
notl
push
mov
dec
inc
push
jg
inc
leave
push
aam
and
cwtl
in
scas
test
enter
pop
xor
mov
pop
test
cwtl
cmp
lods
lds
adc
or
and
out
mov
mov
cltd
sbb
sbb
xor
les
lret
test
mov
push
inc
sub
fmull
sahf
cmp
adc
jno
xchg
jnp
adc
stc
gs
jg
mov
mov
call
jecxz
fistpl
push
icebp
jg
mov
xchg
xor
jge
xor
dec
add
mov
sbb
test
mov
mov
loop
adc
fs
sbb
ss
aam
jl
mov
test
loopne
push
std
pop
xor
mov
in
inc
into
xor
cmc
mov
or
jge
jle
pop
cbtw
adc
jno
adc
gs
add
push
jl
cli
pop
xchg
xlat
and
inc
mov
jmp
test
test
loopne
sub
xor
fldcw
out
mull
repz
mov
stos
sbb
add
xor
out
mov
add
pushf
fcmovu
mov
outsb
fcomi
or
dec
aad
cmpl
jecxz
aas
stos
inc
outsl
jb
push
loop
repnz
inc
imul
dec
iret
mov
mov
xchg
mov
sbb
shlb
fldt
pop
pop
dec
or
mov
das
push
call
lret
lock
inc
jo
ror
mov
mov
add
stos
adc
orl
mov
mov
lret
xor
mov
clc
mov
dec
xchg
jae
cmp
pop
dec
stc
rorb
mov
add
jecxz
xor
es
cli
insl
mov
jns
xchg
push
mov
dec
popa
imul
or
cmpsb
lahf
xchg
and
mov
mov
xor
fimull
adc
frstor
inc
test
repnz
jmp
sbb
dec
shrl
sbb
int3
stos
or
xchg
dec
ja
push
out
mov
jb
pop
xor
xlat
or
pop
push
and
xor
xchg
or
fwait
test
push
mov
inc
xchg
fadds
cli
sbb
sbb
testl
jge,pn
bound
sbb
out
or
ret
sbb
xchg
jge
int3
mov
hlt
fwait
mov
bound
addr16
shll
jp
cmp
loope
scas
mov
lock
xlat
pushl
inc
jmp
stos
and
scas
xchg
mov
mov
xchg
mov
sti
adcl
movsb
rorb
mov
push
rol
stos
sbb
andl
jnp
movsb
sub
in
adc
iret
mov
cli
ret
jge
xchg
mov
std
outsb
jnp
outsl
adc
mov
adc
and
sbb
mov
and
sbb
jl
imul
mov
mov
icebp
mov
mov
mov
cs
xchg
aad
arpl
push
xchg
inc
cmp
and
pop
inc
mov
or
sbb
int3
xchg
add
pop
stos
mov
lds
sarb
inc
jb
and
jge
mov
push
movsb
xchg
cwtl
push
jno
add
sub
jge
push
sbb
fnstsw
decb
cmp
pop
mov
jl
in
stc
sub
jo
mov
jo
cs
lahf
push
jg
push
jne
mov
push
leave
mov
inc
pop
rcr
cmpsb
movsl
outsl
pusha
in
xchg
push
push
enter
pop
jo
push
push
push
lods
loope
cwtl
push
sub
mov
cmp
outsl
movsl
mov
and
popl
je
adc
ret
mov
xchg
push
pop
ss
adc
fisttpl
sub
lcall
test
mov
cli
or
hlt
in
adc
aam
or
ljmp
leave
mov
mov
mov
and
mov
dec
int
pop
mov
neg
je
lret
mov
loope
mov
sbb
mov
sahf
movsb
mov
inc
or
jl
sahf
xchg
loop
roll
stc
ret
mov
adc
mov
cmp
aas
test
cli
dec
scas
sub
cmp
stos
adc
sub
inc
into
dec
cmp
cmc
jl
aaa
xor
xlat
xchg
push
adc
push
jl
sbb
mov
pushf
push
xchg
data16
inc
lods
outsl
push
pop
mov
mov
loope
xlat
pop
arpl
push
jbe
sti
loopne
sbb
loopne
mov
loopne
lds
inc
xchg
mov
fldenv
dec
icebp
repz
test
sbb
aas
scas
mov
pop
sbb
cmp
nop
imul
jmp
out
cs
insl
fcom
popf
js
nop
sub
mov
jb
mov
loop
cmp
add
mov
mov
call
out
xchg
and
addr16
dec
mov
aam
in
ljmp
jae
fsubrs
ss
mov
adc
rcrl
movsb
or
pop
iret
push
std
lods
push
sub
std
shll
mov
sub
bound
cld
bound
mov
and
into
loop
pop
divb
rcr
mov
sub
ja
aam
out
rol
pop
dec
add
addr16
dec
insl
mov
xchg
and
xchg
shll
adc
sbb
std
movsl
lods
jo
cmp
cmp
ja
bndldx
add
jl
test
lret
cltd
mov
mov
insl
fisttpll
aam
sub
cmc
out
and
scas
fistpl
jp
stc
xor
out
and
add
cwtl
call
and
ror
or
in
mov
filds
push
dec
out
mov
test
cbtw
ja
xlat
add
mov
mov
stos
and
jbe
pop
add
pop
repnz
adc
bound
sub
jns
xchg
dec
and
int3
addr16
mov
mov
je
sbb
push
mov
mov
aas
mov
pop
movsb
push
dec
mov
ret
add
sub
xchg
jae
shr
pop
cli
sbb
jae
out
mov
jae
rcll
xchg
mov
push
insb
jnp
scas
xor
mov
in
scas
mov
iret
adc
out
mov
add
jae
outsl
cmp
jp
mov
mov
and
loopne
xchg
cmp
fisubrl
xchg
into
scas
push
fdivr
push
rcrl
adc
push
lcall
xor
loop
xchg
arpl
dec
lret
inc
inc
das
xlat
or
fisubl
aaa
iret
add
or
iret
xor
xor
int3
jg
fcompl
insl
lret
fidivrs
xor
das
rolb
fsubs
add
jecxz
movsb
adc
jmp
jp
pusha
jge
stc
lea
in
mov
daa
std
mov
cmp
movsl
jno
sarl
dec
pop
adcb
mov
sub
lahf
xor
ret
mov
cmp
push
in
jl
add
xchg
push
lahf
pop
scas
push
jmp
dec
xchg
icebp
loope
stos
xor
pop
sbb
pop
inc
andl
dec
xor
cmpb
in
add
test
xchg
dec
pop
lods
pop
pop
fstpt
pop
in
mov
decb
icebp
inc
loop
idivl
sub
fdivs
adc
scas
jae
jg
sbb
mov
dec
out
inc
and
mov
test
and
lret
loope
int
and
loopne
sahf
fcmovb
lret
out
sarl
mov
pop
sbb
or
test
pop
rolb
jge
jl
dec
leave
jns
ja
adc
xor
ss
jp
lret
fdivr
cld
aas
out
stos
or
jl
fnstenv
and
sbb
mov
xor
sub
dec
xor
lret
adc
popf
inc
xchg
adc
and
dec
outsl
adc
dec
add
data16
imul
push
repz
jge
xlat
sahf
xor
mov
mov
mov
lret
add
loopne
jb
dec
rol
inc
movsb
xor
jmp
push
movsl
ja
xchg
pop
mov
sbb
jp
sahf
in
push
lret
add
adc
bswap
pushf
xor
in
rol
pusha
aad
rcr
nop
push
sti
mov
jb
inc
xchg
nop
out
mov
mov
lea
orb
sub
mov
cmp
jl
fcmovne
pop
gs
nop
mov
sbb
mov
inc
das
adc
push
or
push
daa
hlt
shll
mov
std
push
push
aam
dec
push
adc
jmp
fildl
lret
adc
adc
sub
das
pop
inc
cmpsl
scas
shlb
mov
xchg
ret
scas
lods
scas
es
dec
arpl
xchg
into
mov
popa
cltd
mov
ds
in
dec
xchg
and
fld1
vmwrite
stc
add
adc
cltd
inc
clc
arpl
xor
push
lods
push
sbb
jo
pushf
clc
push
sub
adc
sbb
jmp
stos
call
sub
xchg
negl
push
popf
inc
sub
mov
push
xor
daa
xor
add
xchg
jae
dec
push
into
push
test
divl
dec
inc
les
or
adc
fwait
jns
mov
sbb
and
jne
push
out
in
lods
loopne
xchg
mov
jns
imull
fnstcw
xchg
sbb
adc
sbb
jo
addr16
pop
pop
jp
leave
pop
mov
rcr
mov
into
jge
dec
popf
cs
jne
mov
jne
sub
loopne
inc
push
cmp
push
or
jae
jb
loopne
stos
ret
adc
or
sbb
ds
out
stos
add
push
insb
jne
jmp
out
bound
push
in
xchg
pusha
pusha
xor
jo
movsb
ret
cwtl
pop
hlt
nop
loope
adc
cltd
jae
adc
push
cmp
test
mov
movsb
xchg
fisubl
xchg
xchg
shrb
dec
sub
or
mov
dec
pop
ror
cmp
mov
arpl
popa
inc
inc
stc
mov
iret
pop
cwtl
push
mov
xor
cli
out
add
out
mov
pop
gs
loope
lcall
push
subb
imul
and
movsb
pushf
jmp
lahf
jbe
imul
sbb
popf
cmp
outsb
inc
jl
movsl
rorb
lret
ss
and
xlat
push
stos
lahf
push
loope
push
sbb
push
test
pop
sbb
cmpsb
stos
sub
in
arpl
pop
out
pop
call
loope
loop
sub
and
cmp
pop
cs
daa
or
adc
mov
loop
enter
xchg
and
in
or
or
js
cld
sysret
fs
dec
test
fcoml
sub
jnp
outsb
mov
xchg
je
mov
xchg
jg
dec
test
mov
xor
mov
out
ja
adc
bound
in
cmpsb
int
in
sub
mov
pop
les
push
and
mov
sbb
sahf
ljmp
addb
test
mov
insl
stc
xor
add
inc
xchg
test
add
cmp
mov
or
scas
sub
xor
push
cmp
mov
repnz
push
and
xor
ss
adc
les
xor
adc
mov
mov
lods
cmp
jmp
xlat
movsl
sub
pop
icebp
in
sub
mov
es
add
scas
pop
loopne
xor
dec
and
ljmp
popa
les
pop
xor
je
ficoml
out
mov
xchg
arpl
sbb
fiaddl
pushf
fstpt
imull
xor
pop
aad
xlat
nop
loope
cmpsb
aas
mov
xor
jne
pop
je
fidivrs
mov
mov
subb
call
insl
and
mov
xlat
push
adcl
stc
pop
xor
repz
test
mov
mov
jle
in
loop
or
mov
mov
fiadds
ds
add
jae
sti
mov
test
adc
add
sbbl
mov
cltd
push
pop
fs
push
rolb
cmp
inc
test
ret
cmp
vxorpd
sub
or
sbb
popa
mov
lods
in
mov
mov
dec
push
push
mov
fmul
aam
fmull
or
pop
test
outsl
xchg
xchg
fstl
mov
sbb
mov
jae
mov
out
dec
stos
xlat
jbe
out
jmp
add
push
js
ud0
xchg
xor
in
jae
inc
xor
jae
mov
in
les
cmc
pop
test
sbb
push
dec
ror
enter
xchg
or
dec
je
test
mov
add
nop
out
xor
lret
dec
xor
es
jns
or
in
sub
xchg
push
jge
iret
test
mov
xchg
dec
addr16
jmp
jp
cmp
mov
mov
movsb
call
dec
sbbb
jne
jecxz
mov
sbb
jns
sbb
jmp
pop
xchg
push
addl
add
sub
imul
mov
jbe
cmp
xchg
lret
mov
loopne
adc
xchg
or
jmp
in
or
pusha
sti
jp
iret
iret
push
cmp
inc
in
rcrb
sahf
inc
push
push
int3
jae
divb
push
add
push
popf
addl
add
movsb
sbb
jmp
popf
mov
scas
in
repnz
dec
xchg
nop
adc
cli
mov
fwait
das
fcmove
mov
cmp
js
clc
arpl
mov
inc
aaa
adc
shlb
add
in
mov
add
scas
int3
push
xchg
mov
fiadds
stc
shlb
imul
cld
arpl
fidivrl
xor
or
jbe
aaa
lret
jge
ret
bound
daa
sti
or
mov
mov
jl
sub
push
sbb
mov
xor
dec
push
out
test
push
sub
inc
add
mov
jnp
xchg
jbe
sub
and
xchg
sub
sub
mov
int
movsl
into
pushf
dec
and
sbb
and
mov
add
jno
xor
lret
shl
mov
stos
sbb
inc
pop
jecxz
in
fs
pop
push
lahf
jmp
or
iret
loop
outsb
sbb
push
stos
shlb
lret
jg
test
mov
fstpl
cs
mov
pop
lods
pop
push
out
or
out
push
sub
xor
lret
mov
cmpsb
test
mov
sahf
imul
ficoml
outsl
cmp
loop
push
jmp
sub
lods
ss
sbb
jo
push
out
ret
loop
jg
shlb
or
jge
icebp
or
xor
in
sbbb
adc
int
imul
pop
add
push
outsw
push
lods
and
adc
sbb
push
sub
repnz
xchg
cmc
aas
sti
in
fbstp
gs
enter
jg
lret
inc
jl
les
cli
cli
repz
inc
dec
xchg
loope
nop
sbb
lock
loop
push
pop
xor
adc
mov
jmp
mov
sub
jb
cs
mov
or
jb
in
in
in
daa
mov
jecxz
arpl
jmp
inc
or
out
jno
sub
dec
dec
dec
ficoml
pop
cmp
inc
les
das
rcll
mov
xor
cs
roll
mov
std
mov
dec
add
dec
stc
and
out
jl
jecxz
push
lock
inc
mov
loopne
mov
daa
repz
lods
pop
adcl
sub
loope
aam
add
ret
int3
inc
fsubs
lock
ds
jmp
ljmp
sbb
or
mov
push
aas
pushf
mov
aaa
nop
dec
add
je,pt
mov
test
js
mov
pop
call
fnstsw
fcom
xchg
sub
sbb
jne
ror
test
stos
mov
dec
xchg
or
out
inc
sub
mov
mov
mov
call
add
int3
leave
ja
pop
ss
ret
fsubrl
inc
repnz
xor
pop
inc
fwait
xlat
jne
push
pop
mov
add
stos
mov
out
stos
in
frstor
jb
jns
les
out
adcb
int
mov
dec
mov
addr16
sti
mov
arpl
mov
lods
jl
dec
arpl
jne,pt
mov
mov
inc
xor
xchg
in
fs
inc
pop
popf
xchg
loop
fldl
mov
les
fs
outsb
push
mov
fisttpll
insb
dec
movsb
xchg
jnp
arpl
jle
or
in
shl
pusha
xchg
fsin
iret
cs
ffreep
push
imul
sub
dec
push
ret
sub
mov
mov
pop
in
inc
dec
mov
fdivr
dec
imul
pop
push
xchg
out
adc
mov
imul
loope
out
cmp
daa
adc
hlt
ret
inc
xor
inc
dec
jmp
lret
push
or
xchg
or
xor
loopne
inc
push
cwtl
pop
ret
dec
dec
fisubs
hlt
mov
rcl
ret
in
and
pushf
xchg
fisubrl
inc
js
jge
std
xchg
sbb
sti
lret
cmp
stc
cmc
jno
adc
dec
test
cmp
cld
or
jo
pop
in
xchg
push
dec
push
shll
push
cmc
iret
jg
xchg
jb
cmpsb
mov
xlat
in
xor
cli
pop
insb
xchg
fldt
jl
loope
mov
xlat
cmp
aam
les
movsl
aad
lret
and
and
cmp
stos
sbb
aas
add
push
mov
xchg
sarb
js
insb
cli
pop
bound
popa
lcall
imul
mov
adc
or
nop
rolb
loope
rcll
repz
jbe
pop
and
adc
ljmp
sub
dec
dec
neg
and
lret
and
cmp
shlb
sahf
xor
repnz
add
outsl
sbb
sub
stc
sahf
sahf
xchg
fs
or
loope
fwait
ss
mov
fsubrs
fists
out
xchg
dec
cli
adc
and
cmp
call
mov
cmc
cwtl
inc
nop
xor
pop
cli
sub
or
imul
mov
repnz
lods
or
jns
loope
cmp
pop
mov
cmp
enter
jno
pushf
xchg
mov
insb
loop
idivl
sti
loopne
lock
fiadds
jne
jge
xor
repz
insb
sbb
sub
sub
popa
data16
pop
in
jg
in
ficoml
xor
jmp
mov
int
mov
mov
aas
mov
jb
adc
dec
arpl
addr16
xchg
jecxz
xchg
or
lret
lea
fucomip
or
daa
mov
add
inc
adc
pop
sbb
pop
jns
sub
popf
sbb
aaa
das
mov
daa
mov
in
mov
clc
scas
sub
push
frstor
mulb
std
dec
mov
cwtl
jp
outsb
cmpsl
stc
test
mov
mov
mov
in
mov
xor
mov
sbb
lock
shrb
mov
data16
mov
ret
pop
jae
es
jmp
dec
sbbb
ljmp
imull
hlt
inc
mov
pop
mov
setbe
add
movsb
call
test
add
mov
jl
push
cmc
jae
fucom
gs
sbb
adc
icebp
pop
jbe
and
pop
cmp
pop
stos
mov
dec
out
mov
movsl
xchg
stos
mov
mov
xor
lret
das
xor
push
push
mov
jmp
adc
lock
cmp
movb
and
xchg
cmp
xchg
adc
add
lahf
add
cmp
out
mov
lock
and
xchg
or
xchg
mov
gs
mov
or
xor
stc
jp
aas
shlb
mov
mov
xchg
xchg
sub
jno
fisttps
mov
outsb
xchg
lods
lret
pop
loop
out
cs
or
or
aad
sti
or
out
and
pop
scas
insb
mov
and
hlt
jl
jle
jne
in
cli
inc
pusha
xor
lea
aaa
pop
cltd
fcoms
jae
mov
xchg
pop
popf
iret
arpl
mov
and
fidivrl
jno
sbb
sub
imul
ret
popf
repz
call
in
leave
sahf
cmpsl
jno
push
jne
arpl
fnstenv
add
les
jbe
aaa
lret
aas
out
shrl
add
insl
push
pop
repnz
out
lds
in
shr
fisubrl
push
mov
inc
movsb
cmp
lock
xchg
or
fadd
jge
stc
jo
cmp
sbb
sbb
jl
lods
mov
push
fistps
xor
call
xchg
dec
push
xchg
sbb
push
shrb
cmpsb
xor
cmp
sbb
stos
enter
pop
stos
sbb
loope
pop
cmpsb
sub
mov
inc
ds
andb
jae
pop
cmp
orb
sbb
mov
xor
xor
pop
stc
out
pop
js
adc
loope
mov
lret
push
dec
and
lcall
jecxz
sub
rcrb
jg
jg
add
mov
cmp
cmp
sahf
mov
in
mov
out
test
negl
in
add
aam
mov
pushf
pop
sbb
jno
sahf
shrl
push
adcb
outsl
stc
cmpsb
cli
loop
cmpsl
pop
stc
push
dec
xor
mov
negl
cmp
out
scas
out
ljmp
xorb
iret
dec
jmp
push
sahf
test
cmc
pop
add
lahf
pusha
dec
pop
sbb
pop
adc
mov
adc
addr16
aaa
data16
dec
lods
repnz
fsubrl
sahf
sub
das
test
in
imul
dec
adc
decb
adc
loopne
in
lahf
dec
cmp
sub
mov
outsl
les
mov
mov
sbb
cmove
loopne
rcrl
jnp
adc
dec
pushf
fcoml
jmp
lahf
shrl
pop
mov
mov
jb
lret
or
jb
push
fidivl
int
mov
in
inc
lea
cmpsl
add
int3
call
dec
and
xor
inc
addr16
popa
das
xchg
mov
dec
mov
addl
mulb
inc
push
cwtl
xor
mov
aaa
icebp
xchg
outsb
xor
cmp
lret
into
jbe
mov
jge
mov
outsl
xchg
xchg
test
pop
rcll
sub
mov
aam
mov
ret
ljmp
insl
or
in
jnp
jnp
lret
ljmp
push
mov
js
scas
and
inc
ja
pmaddwd
mov
cltd
and
test
cltd
mov
sbb
int
or
mov
xchg
xor
sbb
fcompl
nop
stos
movsb
popf
repz
adc
dec
xchg
repnz
push
or
ljmp
and
pusha
mov
or
cltd
fdivl
mov
adc
dec
icebp
ret
cmp
cli
inc
sub
and
or
icebp
xor
push
movsl
jns
add
loope
sub
push
std
fs
and
add
scas
pop
mov
jno
mov
les
addr16
cmpsl
xor
into
lds
in
mov
mov
fidivs
add
mov
leave
lods
fildll
inc
arpl
cs
js
mov
out
cmp
sub
pop
sbb
cmp
stos
iret
into
lcall
icebp
push
mov
rcl
in
mov
iret
in
icebp
sub
jns
in
rorb
jae,pn
inc
insb
push
dec
sub
mov
mov
xor
xchg
out
mov
and
mov
push
push
and
fwait
adc
push
jbe
xor
push
repnz
out
leave
adc
divl
inc
dec
test
ds
mov
loope
push
mov
int3
push
cwtl
movsb
pop
and
lds
lret
subl
decl
movsb
enter
dec
dec
sub
push
scas
jge
push
rcrl
jg
daa
clc
imul
jl
lods
orl
popf
or
inc
lock
addr16
test
mov
jmp
mov
xor
out
or
inc
lahf
pop
ljmp
loope
daa
in
sub
ds
scas
add
or
aaa
movsl
jecxz
bound
xchg
mov
cmp
mov
adc
sbb
pop
and
popl
pusha
test
lcall
add
mov
scas
dec
outsb
inc
popa
dec
adc
divb
jg
inc
sti
mov
mov
xorl
cltd
pop
int
mov
and
pop
xchg
ror
and
shrl
mov
cmp
sbb
sahf
jbe
popl
outsb
mov
fcoms
loop
mov
std
fs
test
adc
out
cmp
cmp
mov
les
xor
dec
cmp
jle
or
imul
cmc
and
xor
mov
pop
cmp
cmp
jl
dec
imul
int
add
ret
arpl
dec
rep
flds
sbb
fstps
sub
movb
push
or
mov
push
gs
std
inc
dec
pushf
sbb
add
inc
les
repz
xchg
xchg
sub
mov
cmp
mov
pop
dec
sbb
adc
test
jmp
inc
sbb
mov
insb
mov
aas
add
mov
mov
pop
xorb
jecxz
daa
in
rolb
lea
shrb
aaa
jbe
imul
xor
popf
pop
fstpt
and
out
rcl
inc
adc
dec
movsl
mov
pop
fisubs
push
scas
sbb
repnz
in
imul
push
iret
std
xchg
mov
cwtl
lock
fwait
cmpsl
divl
mov
insb
lods
xchg
fs
push
mov
sub
lock
pop
loopne
sub
sub
cvtps2pd
jo
inc
ret
jns
sbb
insl
repz
scas
xchg
or
lcall
clc
fisubrs
adc
fwait
sub
and
loopne
mov
push
in
xchg
add
or
cltd
pop
add
inc
add
push
jnp
imul
in
clc
stc
add
push
aas
push
pop
xchg
andl
out
ja
outsb
xchg
cmp
lret
xchg
mov
push
or
cltd
xor
andb
icebp
pusha
push
pop
jnp
test
jnp
ja
sbbl
inc
mov
ret
jnp
fwait
fs
insb
add
cld
cmp
inc
ljmp
call
xor
fcomi
in
mov
jg
clc
addr16
inc
sub
adc
mov
shrb
mov
stc
cmp
or
jbe
or
jmp
ffreep
adc
jmp
inc
dec
push
out
mov
arpl
push
mov
adc
bnd
insb
mov
jnp
cld
call
in
jns
pusha
insl
das
iret
dec
inc
lods
ret
lret
out
inc
dec
dec
fidivs
ss
push
or
mov
mov
ds
fisubl
es
fisttpll
shrl
push
scas
jo
jmp
imul
adc
icebp
add
out
out
mov
pop
arpl
cmp
or
mov
jne
or
dec
push
int3
add
push
ficoms
inc
std
lds
jl
shlb
scas
pop
out
and
pop
cmp
ret
xchg
jmp
jge
add
shll
mul
pushf
cmp
lcall
cmc
mov
xor
sahf
push
fcomps
cmp
test
push
push
cmpsb
inc
inc
mov
cmpsb
cmp
in
out
adc
jae
and
sub
into
loope
adc
sub
xchg
push
ds
insb
pop
and
pop
ret
popl
movsb
push
sbb
push
push
xor
leave
fcoml
pop
inc
push
mov
imul
fbstp
add
out
fsubl
in
mov
fsubrl
jbe
adc
sarl
sbb
mov
and
and
insl
push
repz
int
dec
call
negl
adc
lret
pop
roll
std
mov
scas
add
jl
mov
sbb
test
adcl
ljmp
mov
xchg
addr16
sub
xor
jge
inc
cmp
pop
cmc
mov
and
cli
scas
ss
xor
les
and
stc
xor
jge
imul
push
and
pop
push
aaa
mov
dec
clc
push
imul
jecxz
add
test
lods
rorb
xlat
sbb
mov
in
inc
aaa
adc
test
addr16
loopne
and
dec
sti
push
nop
fldenv
push
sub
dec
into
shl
jg
ret
pop
mov
cmp
inc
jle
fisubs
adc
icebp
jmp
stos
jmp
stos
lret
ljmp
sub
sbb
mov
mov
dec
enter
dec
cwtl
inc
jecxz
fwait
or
lea
pop
jge
sub
mov
dec
testl
popf
inc
jne
sbb
sahf
cltd
das
dec
call
inc
ljmp
cltd
sub
roll
inc
imulb
push
iret
cwtl
stos
sub
mov
inc
adc
lret
lods
mov
mov
inc
add
pop
jmp
stos
shlb
adc
cmp
nop
es
lods
fisubrl
mov
imul
cwtl
test
jne
lods
cld
repz
mov
xlat
xor
btr
imul
adc
fists
test
scas
clc
lret
xchg
dec
imul
inc
or
es
std
pop
cmp
mov
out
fidivrl
xchg
sbb
push
mov
push
mov
push
sbb
xor
xchg
cmp
jmp
xchg
test
mov
inc
lcall
cmc
dec
or
fnstenv
xchg
lods
push
jmp
pop
add
pop
ret
leave
out
es
mov
jns
in
addl
mov
cmp
sarb
or
mov
ds
mov
push
cmc
jge
rorl
pop
pushf
out
xchg
cmp
push
jmp
push
mov
mov
inc
push
or
cmp
stos
mov
andl
ret
testl
push
in
into
outsl
pusha
add
iret
stos
xchg
add
lahf
imul
ds
inc
push
daa
movsl
jae
outsl
add
iret
cld
in
inc
and
mov
sahf
out
data16
or
mov
shrl
mov
or
xchg
jo
mov
cmp
leave
add
jg
out
idivl
inc
dec
cmovbe
in
or
aaa
xchg
aaa
or
or
fmulp
in
imul
lds
sbb
and
fcmovnb
cmp
and
lret
sbb
add
lds
or
dec
cmp
movlps
fimull
popf
or
mov
xorb
rclb
lahf
push
push
movsb
test
and
stc
inc
rclb
mov
in
aam
outsb
mov
pop
push
loop
loope
and
sub
or
sarb
icebp
lcall
loop
sbb
sbb
pop
xor
cwtl
push
lahf
pop
mov
outsb
fnstcw
push
inc
sbb
jecxz
outsb
push
push
add
adc
sub
add
adc
lods
cltd
mov
mov
push
jns
orl
push
and
sub
mul
mov
sub
and
lret
xor
cltd
and
mull
stos
xchg
sbbb
mov
stos
outsl
xchg
mov
loop
xor
loope
add
sbb
dec
inc
cmp
pop
jp
out
add
cli
loope
xor
add
gs
mov
enter
mov
xor
inc
jp
and
xor
je
xor
adc
loop
xor
cmpsl
jne
mov
mov
loopne
outsl
push
test
lods
pop
jmp
pop
push
mov
gs
mov
iret
pop
fisttps
mov
add
pop
mov
call
xchg
mov
or
pop
cmp
pop
sbb
adc
mov
jmp
iret
cs
mov
nop
add
cli
aas
inc
mov
or
push
daa
je
in
sub
int
adc
inc
cmp
hlt
adc
mov
aaa
push
mov
data16
dec
loop
add
push
test
add
xchg
xchg
inc
dec
pop
or
cs
mov
enter
and
arpl
nop
push
test
jo
and
in
loop
push
jnp
cmc
jns
mov
sbb
sbb
sbb
mov
into
mov
enter
aad
pop
push
out
icebp
shlb
cmp
divb
adc
xchg
fstl
insl
rcrl
xchg
xchg
ljmp
fwait
lods
or
mov
loope
js
jne
addr16
testb
xchg
inc
add
ljmp
jl
mov
xchg
dec
push
add
add
add
and
sbb
sbb
call
test
out
cmp
xchg
push
lcall
xor
push
or
push
mov
negl
push
dec
es
or
ja
test
inc
in
out
or
or
fwait
ret
push
mov
add
xor
out
add
push
jmp
in
daa
xchg
popa
dec
idivl
cmc
repz
pop
adc
mov
mov
into
outsl
mov
xlat
fisttps
dec
rclb
shlb
sub
jmp
fldenv
mov
out
adc
sub
dec
outsb
adc
dec
stos
sub
and
sub
insb
bound
pushf
jle
mov
mov
iret
or
pop
ret
stc
pop
jne
mov
jae
in
jne
xchg
xchg
aaa
popf
imul
mov
sbb
ds
xchg
repz
sbb
cmp
imul
scas
ss
jmp
stc
bound
mov
lea
leave
jp
xor
cmp
arpl
jb
pop
das
ss
mov
mov
mov
mov
jmp
fmul
xlat
adc
pop
scas
push
xchg
ficoms
lock
mov
mov
sbb
mov
lds
repnz
jbe
mov
jge
jle
sbb
push
cmp
cmc
insb
xchg
cmp
sub
push
test
jl
cmpsb
into
dec
roll
push
imul
xor
push
pop
out
sub
mov
test
in
push
xchg
inc
pop
aaa
cld
cmpsb
inc
mov
mov
xor
imul
add
mov
in
sub
cmp
jb
clc
sub
and
popl
ja
push
push
cmpsb
sbb
xchg
add
test
bound
pop
xchg
inc
sarb
mov
sub
push
test
jl
sub
mov
adc
xchg
jg
pop
daa
aaa
mov
outsl
inc
mov
xchg
ret
mov
adc
and
or
stc
ss
int
dec
fldcw
jno
out
notl
jnp
shll
xchg
mov
and
das
test
loopne
mov
outsb
pop
loop
lds
xor
fs
jp
adc
ss
sarb
rclb
mov
adc
jne
fsub
sbb
push
lea
pcmpgtb
cmc
jnp
sbb
or
fistps
push
jge
cmc
inc
aad
packuswb
mov
push
lea
enter
xchg
jb
sub
sbb
in
pop
push
out
pop
stos
imul
fiaddl
loopne
cmpsl
ss
mov
bound
les
sbb
sbb
mov
incl
xor
push
les
fmull
jo
arpl
dec
adc
lret
mov
sbb
call
lods
dec
nop
fidivrs
aas
loope
pop
jb
int
dec
mov
or
push
jecxz
dec
enter
lea
push
call
cmpsb
fisubs
mov
data16
dec
int
outsl
fildl
push
pop
test
lds
mov
das
or
jnp
mov
scas
and
divb
imul
and
xchg
sbbl
lret
mov
ret
sub
lock
pop
cmp
sahf
loop
in
add
aam
pop
xchg
ret
bound
add
cltd
insl
test
add
sub
xchg
aam
ljmp
shrb
sbb
jl
dec
mov
jno
testl
jmp
jb
mov
sub
adc
clc
inc
dec
test
sbb
mov
jo
lcall
out
stos
pusha
mov
out
mov
lcall
test
pop
xor
mov
mov
pop
xchg
sub
stc
pop
test
push
dec
ja
dec
add
sbb
jl
adc
adc
push
xor
add
xlat
xor
in
bound
test
jns
cmc
in
and
xchg
xchg
jnp
mov
sub
mov
mov
xor
das
jecxz
adc
inc
adcb
nop
jns
inc
fld
dec
mov
popf
jne
cmpsl
in
mov
mov
xchg
fidivrs
jmp
movsb
or
sub
repz
out
xor
inc
mov
push
ss
aad
fwait
and
and
mov
xchg
jns
jle
iret
cmc
in
movsb
movsb
pusha
cmp
out
ret
movsb
pop
lods
lret
imul
jae
scas
xchg
push
push
sahf
mov
xchg
push
mov
pushf
fisttpl
mov
inc
aas
sbb
nop
mov
scas
cltd
and
dec
fdivl
mov
push
repnz
jl
icebp
and
hlt
test
arpl
inc
pop
cltd
dec
or
sub
mov
dec
add
mov
pop
fnsave
test
jae
je
cld
or
and
mov
jge
hlt
xor
jnp
aad
lahf
jge
adc
sbb
dec
daa
hlt
jne
cmp
mov
jno
xor
fisttpll
scas
mov
dec
xor
jo
add
lahf
dec
or
push
mov
inc
test
mov
daa
inc
out
pop
mov
in
fwait
jnp
enter
pop
out
add
dec
xor
pop
stos
sub
pushf
out
cmp
dec
ds
mov
movsl
jmp
inc
and
mov
mov
adc
lcall
xor
repz
popf
mov
pop
test
dec
aad
push
add
aam
pop
and
outsb
shrb
adc
bound
inc
jg
jp
mov
mov
enter
frstor
mov
or
cld
std
lret
int
mov
or
push
mov
test
mov
jge
sahf
add
test
pop
arpl
push
sub
push
mov
adc
add
cmp
lea
cmp
rcll
inc
inc
inc
xor
fwait
outsb
or
loopne
es
jne
inc
mov
data16
pop
mov
lods
adc
mov
cli
adc
sbb
jle
add
cwtl
lods
jne
cs
sub
sub
xchg
mov
sbbb
sti
mov
inc
adcl
add
jb
inc
dec
mov
fld
sub
repz
jmp
adc
cmp
mov
pop
push
mov
iret
pushf
xor
fwait
cs
fnstcw
nop
mov
enter
sub
je
xchg
int3
jecxz
rol
fcompl
jns
mov
inc
fdivl
mov
or
pop
dec
ljmp
inc
or
out
orl
pop
mov
ss
adc
imulb
std
xor
cwtl
fsubl
cmpsl
repz
icebp
enter
adc
into
mov
ss
adc
pop
lock
sbb
pop
pop
xchg
lcall
out
xchg
aam
scas
gs
mov
sbb
insl
or
stos
xchg
add
mov
stos
lods
cmp
jl
mov
andl
dec
roll
je
mov
push
xor
cmpb
nop
outsl
clc
jnp
flds
and
shrl
pop
ds
subl
and
push
adc
incl
xchg
xor
mov
or
ds
pop
int
mov
std
lods
inc
dec
hlt
inc
mov
ja
cwtl
int
push
shlb
fwait
and
push
aam
mov
add
outsb
out
ret
leave
test
jns
rcrl
jo
xchg
loop
pop
mov
jp
mov
imul
push
jp
sbb
mov
xchg
dec
dec
cwtl
mov
jne
or
mov
js
filds
icebp
xchg
mov
fucomp
add
cmpl
out
aas
inc
sub
inc
mov
push
jne
cmp
dec
insb
inc
insb
cmp
mov
jle
lock
in
and
iret
mov
inc
pop
jecxz
jmp
jbe
gs
mov
push
sbb
sub
inc
sbb
and
outsl
sbb
mov
mov
fisubrl
xchg
push
mov
xor
cwtl
leave
push
outsb
loopne
jae
roll
push
push
inc
adc
add
dec
in
lods
fisubrl
ficomps
imul
and
scas
fcmovne
mov
ret
shlb
cmp
pop
scas
push
or
jge
mov
sbb
ret
repz
jno
inc
jb
cmpsb
sbb
push
xor
jl
js
pop
jo
mov
jmp
test
andb
cmpsb
inc
insl
loop
sbbb
enter
pop
and
nop
sbb
jae
push
sub
inc
fdivrl
sbb
int
mov
jge
and
cmp
sbb
xchg
add
mov
xor
cwtl
call
gs
sub
pop
fistl
das
push
push
and
fcoml
data16
inc
stos
jnp
xor
jo
sarb
shlb
test
pop
mov
pushf
push
mov
xor
adc
cmp
fidivrl
sub
mov
adc
xchg
lret
test
pop
mov
mov
cwtl
int3
sahf
movsl
or
test
dec
xor
or
ljmp
lahf
flds
adcb
adc
inc
inc
mov
pop
fmuls
or
rol
and
jp
xor
hlt
or
fisubrs
or
cmc
or
mov
pop
sarl
adc
adc
adc
subb
lds
xchg
mov
pop
mov
mov
imul
fnstenv
add
gs
andb
pop
loopne
jl
dec
ja
xor
bound
xor
gs
mov
xchg
sbb
enter
fiaddl
dec
adc
sbb
repnz
cs
mov
gs
xchg
and
aas
pop
popa
ret
jb
mov
adc
jecxz
adc
fbstp
mov
gs
mov
mov
or
in
ljmp
popf
mov
inc
xchg
cmpsb
popf
inc
pushf
add
das
lret
ljmp
in
in
and
push
sarl
clc
idivb
adc
std
fstps
cwtl
xchg
inc
inc
cmpsl
repnz
icebp
lahf
add
lret
push
aaa
mov
movsl
mov
pop
jnp
out
aad
sub
adcb
test
jge
or
jb
pop
movsl
gs
inc
unpckhps
add
or
ror
lods
test
cmp
dec
flds
mov
das
sub
add
push
jl
pop
or
mov
jbe
push
dec
dec
mov
divb
sub
sbb
dec
sbb
xorb
movsb
xchg
stos
ds
fldz
data16
xchg
pushf
ljmp
out
cmpsb
xor
int
mov
xor
xchg
mov
movsb
test
jb
ja
push
fldl
arpl
fwait
dec
out
rcrb
ja
jmp
add
mov
bound
sbb
lcall
xor
jnp
sub
pop
mov
fdivrs
jp
in
das
mov
push
xchg
sbb
jne
sar
mov
cmp
xchg
clc
push
and
fstl
enter
rorb
jge
cmp
inc
push
mov
imul
inc
inc
insb
mov
mov
fxam
sub
iret
pusha
outsb
sahf
and
es
ret
mulps
inc
xchg
inc
and
lahf
push
fisttpl
cli
popf
loopne
call
inc
lcall
xchg
clc
pop
das
sbb
mov
cs
pop
call
cwtl
adc
cwtl
in
mov
xchg
int
fistps
out
arpl
leave
mov
aad
adc
or
aaa
add
aas
or
or
mov
iret
int3
cwtl
std
lds
dec
or
aas
loope
or
test
mov
push
xor
in
or
push
push
and
shlb
jge
loop
sbb
icebp
mov
cmp
dec
imul
xchg
push
adc
pop
xor
gs
mov
test
dec
testl
or
arpl
pop
addb
xor
mov
loope
lds
faddp
dec
cmp
insb
pushf
fsubl
movsl
or
sub
adcb
mov
in
mov
aaa
insb
lods
stos
sahf
daa
pop
or
inc
js
dec
dec
pop
pop
mov
lcall
mov
mov
cmc
imul
mov
sbb
xchg
jg
fidivl
pop
adc
cmpsb
and
call
dec
sub
ss
roll
lret
mov
mov
rcrl
addr16
sahf
dec
pushf
pop
test
jo
adc
sub
fs
les
ss
mov
fadds
push
dec
out
mov
cli
lods
aam
xor
scas
cmp
and
pop
inc
sub
in
out
push
cmc
rcrb
cmc
xor
pop
pop
repnz
push
adc
push
hlt
popa
xchg
adc
cmp
add
mov
or
lods
inc
add
push
xlat
push
sub
frstor
pop
sub
incb
leave
loopne
add
inc
inc
jne
sbb
xchg
xchg
je
cmpl
pop
or
pop
jl
sub
movsb
jge
pushf
mov
adc
lods
nop
outsl
adc
jb
jnp
dec
sbb
pop
jecxz
fsubl
lea
mov
stos
mov
push
dec
mov
fcmovnbe
sub
mov
lret
mov
dec
das
stos
scas
lea
movsb
cmp
and
mov
ror
movaps
jl
cmp
and
push
cmpsl
icebp
lods
push
mov
jbe
cld
cld
data16
cmp
xlat
xor
mov
mov
lock
cmpsl
rol
aas
imul
mov
aam
clc
mov
es
mov
dec
pop
inc
pop
xchg
xorl
ja
in
popa
xchg
add
mov
insl
movsl
jno
xchg
pop
jge
xor
jle
sbb
cltd
mov
xor
mov
repz
push
or
mov
push
xchg
iret
outsb
rcr
das
inc
pop
xchg
ror
sub
aad
xchg
jecxz
notl
adc
test
xor
das
int3
xor
jmp
mov
add
lret
dec
ret
test
pusha
mov
dec
dec
xor
inc
inc
sbb
or
sbb
jle
push
push
sbb
or
lcall
out
adcl
jns
pop
pop
in
or
sbbb
mov
loope
lcall
push
aaa
mov
xchg
pop
mov
cmpsl
ret
jne
sti
mov
filds
ret
out
and
jp
xchg
jle
out
cmp
sub
aaa
testb
hlt
aas
lods
and
insb
push
adc
jnp
fidivl
xor
pusha
or
cmc
ret
das
pop
push
jb
inc
mov
repnz
sahf
jbe
popf
pop
test
inc
sbb
ja
dec
movsb
and
mov
imul
ret
push
adc
xchg
mov
sbb
fnstenv
test
arpl
pop
or
sahf
fidivl
ret
jne
or
mov
inc
and
int3
xor
pop
push
lods
fsubp
test
lds
fld
les
jns
cltd
push
test
jmp
pusha
je
xchg
pushf
xchg
push
je
sub
daa
ss
and
mov
inc
daa
icebp
test
cmp
xchg
mov
test
push
mull
jle
push
cmpsb
data16
pusha
lahf
test
mov
dec
outsl
fcoms
xchg
inc
fwait
imul
in
push
cltd
enter
pop
mov
xor
sub
adc
cmp
movsl
notrack
dec
and
add
mov
push
test
add
or
xor
or
outsb
mov
into
js
add
pop
fstps
lcall
fsubrl
ljmp
cli
xchg
adc
repz
jns
aad
dec
mov
loopne
mov
xor
mov
test
and
or
int
clc
mov
pop
out
jl
xchg
xlat
cmp
dec
sbb
mov
xchg
sbb
and
test
sbb
icebp
jne
loop
and
stc
or
add
adc
lcall
sahf
in
fdivrs
sub
loopne
les
cmp
dec
cmp
and
iret
pop
pop
cmc
xchg
jbe
xor
pop
adc
imul
dec
test
lea
lods
sub
mov
xchg
sub
cmpsl
cmpsb
in
ret
jno
sti
ret
sbbb
cmpsl
sub
std
mov
mov
movl
enter
in
repz
sub
xchg
ds
inc
pop
das
sub
pushf
xor
and
subb
je,pn
gs
jns
nop
dec
sbb
aas
pop
sahf
stos
jb
jae
dec
xchg
mov
or
adc
sbb
dec
in
decl
pop
pop
sbb
fs
adcl
pop
pushf
fildl
cmpb
lahf
push
push
inc
shrb
das
mov
mov
pop
xor
and
add
rcrl
push
inc
std
daa
and
lock
mov
dec
push
ss
xchg
aam
lret
inc
lret
call
sub
xchg
pop
mov
fstl
sub
nop
nop
aam
lcall
push
mov
jnp
push
outsl
jo
ret
ljmp
imul
stos
mov
cwtl
repz
in
stc
mov
lods
push
push
test
mov
mov
push
rorb
fldl
clc
sub
cld
xchg
incl
cmp
psrlw
sysret
pop
aas
mov
stos
sbb
or
sub
insb
xchg
sub
mov
jmp
or
clc
sub
xor
stc
iret
mov
push
call
mov
ja
xchg
ret
dec
inc
push
inc
fdiv
js
aam
or
push
mov
sbb
out
pusha
sbb
bound
xor
aaa
pop
push
or
mov
and
pop
pushf
test
push
cli
xchg
adc
cmp
mov
addr16
dec
inc
or
loope
movsb
add
fbld
in
jle
out
sub
shl
nop
andl
jmp
into
in
sub
xor
hlt
stos
addr16
and
inc
inc
jnp
fdivs
jle
or
cmp
outsl
pusha
movsb
xlat
add
in
hlt
ret
xlat
pop
mov
inc
xchg
cmp
push
popa
push
das
popf
cs
out
pop
push
push
inc
cwtl
in
fimull
or
sbb
das
cmpsl
imul
outsb
scas
and
mov
xor
sub
test
sub
inc
leave
int
in
mov
adc
inc
addr16
or
sbb
aaa
subb
pop
jmp
add
inc
mov
pop
cltd
cmc
sbb
test
loop
inc
rcr
pop
scas
js
aad
jl
cmp
movsb
and
jbe
lock
sti
inc
stc
sbb
leave
daa
lock
out
cltd
jno
sarb
daa
jg
dec
lcall
xor
sbb
lahf
enter
aas
mov
push
jecxz
jmp
cmpsb
iret
stos
in
aaa
inc
sahf
enter
pop
loop
fldt
xchg
mov
mov
cmp
ds
mov
and
scas
ret
lea
