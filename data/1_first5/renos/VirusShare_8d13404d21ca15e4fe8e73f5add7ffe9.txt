mov
jmp
call
dec
lea
lea
mov
dec
and
fstpt
or
xchg
mov
xchg
cmp
jnp
mov
mov
sub
pop
sbb
nop
dec
or
stc
mov
adc
dec
push
cmp
insl
mov
bound
xchg
faddl
xchg
fbstp
and
dec
inc
push
call
mov
jle
mov
sbb
push
in
jle
inc
out
fadd
adc
jge
aas
dec
dec
inc
mov
xchg
gs
mov
inc
push
cmp
jno
lea
or
inc
mov
out
and
dec
mov
mov
int3
outsl
push
fsubrl
lahf
or
jge
dec
inc
inc
cld
inc
adc
mov
push
add
pop
fs
pop
push
jmp
mov
push
adc
in
add
cld
mov
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
sbb
mov
jb
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
pushl
jb
push
sub
cmp
dec
jae
repnz
out
jns
push
out
lock
in
pop
fcomip
jbe
xor
cmc
dec
cmp
or
mov
mov
ljmp
lds
add
add
jmp
out
outsb
cmp
inc
cmp
jae
cmc
inc
mov
cmp
inc
fwait
loop
and
pop
ja
ss
mov
ss
mov
push
pop
pop
sar
ljmp
and
jb
adc
adc
repnz
pop
mov
shl
and
ja
push
mov
push
fdivrs
mov
xchg
mov
fmuls
push
mov
mov
push
dec
mov
je
pop
mov
xor
mov
dec
outsb
dec
std
outsb
lds
les
pop
mov
mov
fcomi
mov
lds
xor
cmp
cmp
xlat
idiv
sbb
dec
mov
mov
std
dec
mov
in
std
jle
xchg
popf
or
movsb
xor
mov
jle
out
sti
or
push
xor
pop
lcall
pop
test
pop
mov
pop
ret
cmpl
aam
filds
in
dec
rcll
mov
mov
test
scas
push
dec
jl
inc
inc
add
fmull
jg
inc
loop
mov
mov
loope
repnz
ljmp
jb
mov
sbb
sbbb
mov
xor
iret
shrb
ss
xchg
add
xor
xchg
xchg
inc
and
in
mov
push
subb
jne
jg
fdivr
xor
vrsqrtss
dec
dec
dec
ss
mov
orl
mov
test
jae
xchg
mov
xchg
addr16
cmpsl
aas
mov
mov
fcoml
fstl
dec
cmp
cmp
mov
out
bound
cmpsb
jl
data16
xchg
xor
popf
inc
mov
adc
out
fwait
jle
xor
mov
jg
push
mov
jp
mov
pop
jp
mov
push
mov
push
dec
and
push
imul
mov
sbb
push
outsb
dec
repnz
scas
adc
pop
xor
lcall
cmp
xchg
aaa
arpl
jbe
mov
xor
subb
lds
cmpsb
into
pushf
mov
jmp
and
cmp
mov
repnz
mov
pushf
cmp
cmp
mov
inc
cmp
je
pop
cmpsb
fsubrs
outsl
cmpsl
popa
mov
pop
pop
notb
push
std
pop
lds
rorl
inc
push
mov
in
loop
adc
xchg
push
in
rclb
xchg
push
adc
dec
scas
iret
pop
outsl
test
push
in
mov
mov
push
jbe
cmp
ds
loope
insl
xchg
daa
mov
in
jmp
je
inc
mov
cmc
sub
ds
ret
lea
in
jg
cs
mov
mov
mov
shl
jne
test
jne
idivl
hlt
jmp
daa
inc
imull
hlt
mov
stc
adc
in
ret
out
outsl
call
call
cs
mov
or
faddl
mov
jmp
movzwl
dec
test
jb
movl
mov
or
adc
adc
dec
or
inc
rcll
cmp
jbe
sarb
pushaw
pushl
ret
je
pop
or
add
mov
xchg
or
push
cmp
pop
push
push
cmp
jle
adc
sbb
sti
int3
push
jl
sbb
adc
xor
or
jmp
mov
jne
ret
dec
outsl
popa
fs
imul
popa
jb
inc
sub
outsb
push
push
push
imul
jne
insb
inc
insb
insb
outsl
arpl
pop
push
jb
je
arpl
mov
inc
bound
mov
das
cld
pop
jle
je
in
jnp
dec
inc
lea
clc
jl
sbb
inc
mov
inc
cld
in
cmp
cld
jae
dec
sbb
loop
in
das
fs
inc
mov
mov
mov
sbb
scas
xor
pop
push
stos
pop
icebp
inc
mov
push
lock
dec
inc
mov
push
cmpb
std
push
inc
mov
add
or
fdivp
mov
mov
lea
jnp
inc
inc
inc
inc
inc
insb
mov
ja
inc
inc
dec
dec
cmp
js
lea
inc
cmp
and
xchg
fdivs
mov
fs
cmp
daa
lcall
lea
ja
dec
fsubs
xchg
pop
xchg
inc
inc
clc
inc
inc
sbbb
fildl
pop
adc
push
dec
sbb
or
out
jo
outsb
ljmp
hlt
dec
cmp
pushf
xchg
mov
out
loopne
pop
inc
mov
jo
add
dec
cld
rorl
sub
or
fchs
in
ret
mov
jle
lea
inc
das
ficomps
fdivrs
inc
das
dec
ret
lret
hlt
push
xor
sti
or
lock
aam
mov
in
paddd
inc
dec
inc
sub
pop
cs
pop
jns
cmp
je
scas
push
enter
sub
push
cmp
add
ret
jecxz
fdiv
call
cmp
cmp
shl
or
sub
add
popf
push
or
mov
dec
and
push
in
push
sbb
or
xorl
adc
push
in
push
call
cmp
insb
cwtl
rorb
jb
pop
pop
jg
test
jl
adc
add
push
insl
lock
lock
inc
dec
cld
lret
clc
xor
mov
dec
adc
push
xchg
mov
xor
clc
mov
mov
pop
or
mov
aaa
orl
adc
pop
sbb
or
mov
lock
inc
fmuls
loopne
add
fldl
push
jge
mov
lcall
mov
xor
sti
icebp
jp
mov
inc
in
cmp
jb
call
cld
dec
inc
inc
call
jae
inc
mov
loop
sub
lock
jae
add
daa
and
ss
mov
jge
inc
inc
dec
xor
jne
mov
sub
mov
cmp
ds
out
lds
push
lret
scas
cmp
js
mov
cmp
jecxz
sbb
jo
cli
icebp
aaa
inc
mov
mov
sbb
jge
loopne
and
xor
push
and
pop
lea
lock
out
dec
hlt
mov
and
hlt
dec
imul
push
xor
push
mov
xor
cmp
mov
std
std
idivl
push
mov
mov
mov
repnz
mov
mov
out
movsl
add
ss
push
mov
add
cmpl
je
repnz
jg
fdivrp
xor
mov
fildll
ss
mov
repz
mov
cmpb
mov
push
or
neg
mov
mov
and
xor
mov
dec
cld
mov
and
xor
jle
nop
add
int
cwtl
gs
lock
icebp
add
push
mov
add
incb
cmp
loopne
jae
and
repz
jne
pop
xchg
mov
mov
or
pop
adc
jae
popa
xchg
mull
mov
sbb
lock
xchg
in
clc
xor
cmp
jne
jno
loop
push
mov
dec
xchg
clc
dec
cmpsl
scas
fisttps
inc
dec
mov
call
cmp
add
shlb
jl
lea
in
xor
inc
out
dec
cli
rcrl
add
call
aam
aas
cli
fisubrl
lea
mov
sti
cmpb
add
push
xor
sub
mov
pop
xor
add
or
and
xor
dec
xor
pop
xor
inc
mov
mov
xor
xchg
xchg
or
dec
mov
fildl
mov
push
add
xor
sbb
pushl
outsl
popa
inc
fs
jno
xor
jbe
outsl
jo
imul
dec
bound
arpl
insb
outsl
jno
dec
arpl
outsb
cmp
jg
outsb
insl
arpl
imul
inc
imul
jb
jne
outsb
inc
jb
push
cli
aas
cld
jg
je
dec
outsl
jbe
dec
outsl
outsl
jb
pop
hlt
xor
adc
push
andl
cmp
push
nop
andl
scas
pop
mov
mov
in
int
push
sub
or
adcb
jl
ret
int3
pmulhuw
fs
out
adc
fcom
aaa
pop
ss
inc
pop
mov
jne
test
add
jl
pop
inc
shlb
shlb
sahf
test
jne
add
lea
sbb
dec
out
add
inc
les
mov
lahf
shlb
xor
mov
in
rcl
js
js
adc
out
fistl
js
inc
sbb
shlb
scas
or
clc
dec
cmp
mov
js
inc
mov
jge
cld
or
inc
pop
adc
mov
add
jne
and
xchg
je
inc
cmp
cs
add
hlt
dec
add
iret
outsl
fidivrs
cmp
xor
cmp
cmp
imul
jb
outsb
or
je
lret
daa
pushf
fldl
adc
add
cwtl
jl
push
or
das
rcr
lock
and
add
and
adc
xchg
daa
jge
sub
push
dec
xchg
push
push
or
ja
add
and
mov
test
pop
mov
movsb
push
xor
jl
aas
pushf
push
inc
push
cmp
insl
pop
test
push
push
hlt
stos
addr16
out
adc
mov
jne
inc
push
cmp
push
push
mov
es
inc
mov
das
dec
jl
add
fdivp
dec
sar
and
inc
push
push
push
or
and
or
pop
sbb
mov
mov
add
sbb
cli
arpl
sbb
ret
jp
and
xorl
fsubs
dec
addl
ficompl
test
inc
and
addl
and
imul
mov
lret
push
loopne
adc
movsl
mov
aad
jl
pushf
mov
leave
mov
sub
loop
and
cwtl
leave
scas
xor
and
ret
mov
nop
lcall
decl
jne
sbb
insl
push
test
fldenv
add
cmp
or
jl
js
call
imul
or
dec
or
sbb
jae
inc
push
xor
sbb
adc
pop
das
adc
xchg
fisubrl
lahf
xorb
adc
jmp
dec
push
fs
or
test
nop
cmp
cmpsl
roll
jb
mov
lea
push
mov
shlb
int3
cs
mov
inc
jne
je
fildl
sub
or
add
int3
ss
mov
adc
pop
sub
fs
insb
fildl
cmp
push
pop
add
and
inc
cmp
dec
fs
imul
jns
outsl
jb
fldt
jae
ja,pn
add
ja
test
mov
aad
mov
push
dec
ja
sub
pop
test
mov
jmp
add
push
imul
push
lds
cmp
mov
xor
imul
shlb
call
stos
sbb
push
push
lea
push
test
cmp
aaa
jg
cmp
ss
xor
xor
cmp
sbb
xor
jo
call
inc
xchg
cmpb
xor
hlt
movb
jno
cmpsl
and
push
aam
add
jl
jae
stos
nop
mov
mov
jg
adc
push
add
or
pop
cmpl
mov
adc
call
mov
xor
lds
dec
push
and
inc
push
mov
dec
ret
mov
push
mov
test
sub
loopne
divl
or
cmp
int3
xchg
inc
aam
xor
lods
fxch
push
int3
test
enter
pop
lods
and
test
jmp
lea
call
jne
mov
adc
insb
iret
imulb
pop
xchg
add
std
add
jmp
fsubrl
and
test
push
add
inc
and
sub
push
loope
xchg
inc
mov
aad
inc
loope
push
sti
cmp
jne
sbb
xchg
imul
cwtl
je
popf
je
mov
mov
and
scas
inc
clc
xchg
incl
push
push
clc
inc
call
or
xor
add
stos
lahf
lock
adc
dec
sbb
mov
sbb
iret
dec
leave
or
fcomp
aam
rolb
int3
mov
push
enter
lcall
xorl
pop
or
cmp
leave
dec
popa
inc
add
fcompl
mov
lods
mov
out
lock
pop
sub
mov
lea
cmp
or
push
pop
jecxz
shlb
mov
movb
popa
ret
mov
cwtl
flds
inc
cmp
lock
out
lock
adc
jmp
adc
push
jmp
and
cwtl
pop
hlt
insb
and
push
push
sub
pushw
push
stos
adc
test
sub
jle
adc
inc
cmp
push
push
adc
xor
add
es
or
test
cmpsl
popa
seto
or
jmp
adc
inc
and
and
add
xchg
mov
js
pop
pop
xor
pop
push
cmpl
inc
and
inc
and
cmp
push
stos
jge
pushf
test
cs
sub
cwtl
test
outsl
add
rorb
mov
cmp
push
push
test
or
add
jno
stos
add
inc
sub
mov
pop
nop
add
adc
adc
mov
jmp
stos
aad
in
and
pop
in
inc
cmp
lea
sti
add
dec
pop
test
movzwl
test
or
stos
ret
cli
add
push
das
dec
push
add
aaa
jmp
push
stc
mov
js
cmp
or
push
xorb
push
add
fcoml
push
inc
subl
gs
add
mov
loop
cmp
jle
dec
inc
xchg
sbb
adc
xor
mov
add
dec
pushf
fcoms
add
test
jo
sahf
mov
mov
jl
mov
mov
loope
sub
add
clc
and
mov
add
mov
fisubrl
or
incl
add
movsb
push
loopne
or
mov
jp
cmp
xor
hlt
test
decb
shlb
jo
dec
jg
mov
loopne
mov
dec
in
imul
pop
dec
dec
fdivr
idiv
sbb
outsb
jnp
mov
sbb
xchg
mov
ret
es
jnp
or
push
rcl
cmp
in
adc
sub
dec
in
and
movsl
dec
les
xlat
mov
xchg
add
lods
inc
ds
es
lret
pop
mov
and
test
and
push
mov
push
mov
inc
mov
mov
jmp
ja
push
cmpb
je
dec
adc
arpl
fstl
dec
mov
add
or
xchg
pop
sbbb
inc
mov
adc
add
cmp
jmp
sarl
push
cmp
faddl
push
testl
pop
cmp
inc
pop
pop
cmp
cmp
add
inc
push
dec
mov
push
add
add
or
loope
push
and
jne
inc
insb
pop
icebp
push
xor
in
lods
test
xor
push
mov
addl
or
jne
addb
adc
fcompl
push
aad
add
hlt
js
and
add
ret
add
orb
push
add
or
mov
jno
mov
cmpsl
mov
add
add
adc
mov
adc
imul
or
adc
imul
addr16
sub
fistpl
and
sub
lahf
and
out
or
je
insl
hlt
sub
jg
inc
push
pop
add
and
fidivl
add
inc
sbb
dec
dec
add
inc
pop
or
mov
pop
pop
sbb
push
sub
outsl
mov
js
add
dec
rcrl
es
and
lldt
dec
add
mov
fildl
outsl
or
or
push
out
adc
xor
add
pushf
insb
push
and
jb
fwait
xor
in
aaa
add
mov
add
sbb
fldt
sbb
out
fldt
pop
add
xchg
xchg
mov
mov
pop
loope
adc
gs
pop
or
add
dec
test
jne
sbb
repz
add
sub
adc
add
add
lock
imul
and
pushw
sub
mov
mov
add
add
cmp
loope
aaa
xor
and
outsb
sbb
sbb
adc
mov
cmp
mov
cmp
lea
mov
mov
add
dec
and
jns
xor
leave
mov
cmp
fists
insl
rol
lahf
add
insl
insl
ja
pop
mov
lods
pop
add
shll
push
aaa
mov
leave
sub
dec
int
pop
sub
jno
ret
loop
popf
cmp
shrl
pop
movsl
adc
out
test
mov
jmp
scas
loope
or
sub
inc
lock
mov
dec
outsl
pop
add
ficomps
push
sbb
lock
add
mov
mov
inc
mov
jno
and
dec
pop
pop
mov
and
add
movsl
mov
mov
aad
shlb
cltd
adcb
sbb
mov
leave
sti
cmp
pop
jecxz
fcoms
sub
roll
and
cmp
fstps
fidivrl
addl
ret
mov
adc
sub
pop
sbb
lds
mov
mov
fwait
mov
push
lods
mov
addb
outsl
sub
and
pop
imul
sbb
adc
fsubrs
push
ja
and
rolb
mov
xchg
xchg
ficompl
push
rcll
ficoml
mov
roll
fldt
mov
iret
or
aas
fldt
fwait
in
aam
sub
lods
scas
sub
dec
imul
lods
and
inc
les
insb
jne
insl
or
lea
push
dec
xchg
add
push
adc
adc
icebp
fisttps
or
mov
jne
push
mov
and
mov
mov
inc
pop
lods
mov
xor
mov
add
popa
xor
sub
sub
insb
stos
mov
shll
cmc
sub
stos
shll
lea
lods
sub
add
pop
pop
or
test
fnsave
leave
mov
add
mov
popa
outsl
mov
movsl
adc
mov
mov
jmp
push
sbb
push
mov
push
add
xlat
pusha
cmpl
pop
push
sbb
mov
push
cmp
push
sub
inc
pop
xor
fisubs
mov
lods
mov
test
mov
adc
dec
sbb
mov
pop
adcl
inc
push
xor
lods
outsl
sub
pop
or
inc
pop
subl
dec
adc
addr16
inc
test
aaa
pop
adc
test
sub
sub
movsl
xchg
mov
add
dec
dec
xchg
and
fwait
pop
sbb
adc
push
dec
jo
sbb
mov
jo
or
dec
dec
pop
push
rorl
push
push
jno
push
fistl
movsl
dec
rcll
cmp
sub
inc
jge
aam
mov
push
cmc
pop
jecxz
jne
mov
fistl
mov
lods
mov
sub
sbbl
imul
das
cwtl
push
inc
sub
and
mov
aad
test
dec
stos
or
movsl
sub
mov
or
cmpsl
mov
and
insl
mov
insb
adc
inc
mov
inc
inc
stc
mov
ljmp
mov
and
lcall
out
xor
fimull
mov
fsubrs
or
arpl
lods
mov
popf
lods
sub
lods
or
push
sub
or
jecxz
pop
push
mov
and
mov
sub
mov
push
imul
push
lahf
sub
mov
xor
jo
mov
mov
pop
pop
or
push
xchg
pop
fsts
push
jae
xor
xchg
sbb
add
in
or
sub
lods
push
dec
jge
stos
and
stos
and
xchg
inc
dec
mov
aaa
push
xor
test
sub
and
mov
pop
add
sbb
xchg
cmp
fisttpl
mov
repz
addl
sub
int
addb
xlat
outsl
jne
or
shrb
imul
xor
lds
shrl
ljmp
mov
cmp
stos
adc
xchg
push
mov
mov
push
test
xchg
mov
in
add
pop
push
xchg
push
push
imul
push
sub
xchg
push
inc
mov
adc
push
sub
mov
mov
aas
or
push
lods
mov
scas
lods
lea
addr16
lods
push
dec
imul
movsl
arpl
and
push
xlat
push
xchg
fildl
cs
ret
dec
clc
nop
ss
mov
test
mov
scas
add
lcall
mov
xchg
push
jg
ja,pn
out
add
jb
inc
sbb
cmpsb
sbb
imul
dec
call
fnstenv
in
ret
jbe
rorb
mov
lea
mov
pop
add
mov
divl
inc
mov
mov
mov
push
pop
xchg
xor
idivb
lods
push
test
jmp
enter
mov
xor
sarl
out
das
in
imul
stos
mov
sti
lea
mov
xor
in
pop
xorb
mov
pop
in
imull
xorl
lret
mov
fisubrs
push
pushf
testl
or
mov
adc
pop
out
insb
add
fisttpll
xchg
rcll
lahf
sti
fistpll
outsl
rcll
int
mov
mov
sub
or
pop
mov
scas
or
inc
dec
xlat
pop
sti
xor
cmpsl
loope
arpl
pop
lods
push
insb
push
int
mov
fbstp
sub
cmp
add
loope
lea
mov
and
fcomi
mov
mov
mov
pop
or
ret
inc
sbb
int
mov
sahf
sti
outsb
jns
ja
mov
lods
sub
sub
mov
dec
aas
fimuls
stos
jne
loope
cmp
or
xor
push
insb
flds
fistl
scas
shll
jmp
or
aad
lock
xchg
xchg
adc
iret
lods
nop
adc
sub
push
pop
add
xor
add
xlat
pop
jg
mov
pop
or
cs
sbb
mov
mov
push
mov
adc
sbb
or
pop
and
push
fwait
or
mov
adc
mov
jecxz
inc
jo
andl
in
roll
xor
and
cmp
inc
or
jnp
in
pop
xchg
cli
jg
fisttpl
int
xchg
insl
frstor
xor
adc
loopne
push
sub
and
ja
fdiv
repz
popf
push
mov
mov
jne
out
mov
clc
lods
jge
fcomi
mov
in
push
mov
daa
js
pop
mov
add
push
mov
mov
test
lods
jnp
mov
mul
das
push
jmp
or
popl
sub
daa
mov
sbb
mov
nop
inc
gs
jnp
insl
jae
sub
xchg
xchg
cmc
rorl
cmc
inc
xchg
dec
lock
out
or
mov
jecxz
jno
cmp
jo
inc
test
xor
sbb
and
rorb
fs
ret
dec
mov
mov
pop
mov
jecxz
lret
mov
push
popf
add
sti
pop
mov
mov
lods
hlt
xchg
outsl
mov
repz
fstpt
addps
mov
xchg
lret
inc
shr
cmp
rcll
xlat
sub
jae
outsb
mov
or
cmpsb
ljmp
or
fistl
dec
add
fisttpl
sbb
cmp
adc
in
sbb
mov
cmp
cmp
xchg
aas
icebp
dec
inc
mov
jne
or
sbb
xor
pop
xchg
addr16
mov
imul
sti
faddl
fcmovnb
pop
adc
jo
mov
sub
pop
mov
cwtl
call
jmp
subl
aaa
fildll
das
jmp
int3
or
adc
cmpsb
out
mov
shl
lahf
mov
and
imul
xor
jbe
stos
subl
arpl
push
jo
dec
pop
adc
adc
fwait
loope
mov
outsl
and
push
fisubs
arpl
cmp
ja
mov
enter
imul
dec
push
pop
mov
push
jl
mov
and
jne
mov
fisubs
ja
and
mov
dec
sbbl
imull
mov
jg
sub
push
andb
movsl
push
xorl
fisttpll
daa
add
sbb
das
clc
out
mov
mov
push
not
jl
int
add
add
fldl
mov
les
jge
jl
mov
mov
cmp
mov
addb
mov
dec
add
mov
xchg
push
out
fidivl
outsl
inc
inc
pop
add
pop
daa
mov
push
aaa
lahf
movb
out
cmp
cltd
jnp
xor
sbbl
aam
pop
cmpsl
or
and
shlb
mov
add
inc
shl
push
cltd
cmpsl
aas
dec
mov
jge
adc
jns
shll
inc
ja
adc
add
adc
dec
pop
shrl
xchg
arpl
adc
push
out
rolb
test
mov
mov
loopne
xor
sbbb
out
loopne
maskmovq
imull
pop
dec
ret
xlat
ffree
enter
sbb
jo
jb
cmpsl
lods
ret
jne
or
jnp
bndstx
cmpsl
loop
loop
aam
ret
xor
dec
sbb
pop
stc
cmp
inc
es
insl
jecxz
jnp
xlat
imul
fdivrs
jbe
mov
out
or
shll
mov
lock
dec
pop
fidivl
sub
cmc
mov
lcall
sbb
ljmp
xchg
jb
add
fsubrl
fsubl
inc
outsl
and
push
jp
cmp
gs
rorl
lds
mov
add
jmp
push
dec
and
fisttpll
inc
mov
lock
bound
popa
mov
ja
cs
cli
add
data16
imul
pop
outsl
add
dec
mov
cmp
pop
out
mov
stos
dec
pushf
mov
sub
add
or
adc
push
sbb
das
push
lds
scas
arpl
add
dec
push
mov
mov
mov
sub
stos
or
push
cld
add
ret
sbb
orl
push
in
fildl
clc
je
jne
add
lods
cs
sub
sbb
sub
xlat
scas
dec
mov
call
sbb
mov
js
jb
call
fidivl
xchg
mov
fnstenv
and
subb
insb
cmp
push
xchg
jle
mov
mov
arpl
ja
jecxz
xchg
test
icebp
emms
add
sbb
cmc
lret
lea
call
imul
mov
or
jne
outsb
je
imul
jnp
mov
sbb
pop
and
pop
jl
mov
into
stos
sbb
mov
mov
dec
jnp
push
test
dec
dec
pushf
mov
pop
xchg
add
jae
cmpsb
sar
mov
sub
ljmp
loope
sub
jae
test
add
lahf
pop
inc
sub
sbb
and
pandn
push
cmp
fbstp
lods
rorl
adc
loopw
jno
or
jle
mov
fists
andl
and
mov
pop
mov
sbb
cmp
int3
scas
sub
xor
push
in
aad
inc
dec
pop
daa
fisubrl
mov
adcl
jb
xor
cmp
lret
test
jl
mov
and
jmp
nop
sub
xlat
outsb
cmp
jnp
je
test
mov
cmpsl
jnp
push
sub
inc
inc
mov
lods
ficoms
loop
pop
fistl
pop
movsb
xlat
sarb
stc
lods
int3
and
push
scas
testb
jb
popf
hlt
sbb
out
jb
xlat
mov
test
jl
lods
cld
pop
std
or
cmp
jns
and
sti
inc
pop
jp
xchg
cmpb
idivb
adc
pop
adc
push
inc
sub
loopne
jge
or
cmpsl
icebp
dec
mov
lahf
aam
int
je
jbe
inc
int
jb
int
add
xchg
push
jae
mov
sbb
jno
aaa
lahf
aad
push
in
fbld
push
out
jo
out
in
add
cmp
and
stos
jecxz
sub
xor
push
icebp
mov
ss
dec
push
js
lret
sarb
cmp
mov
scas
iret
cmp
adc
mov
test
mov
add
cs
jo
pop
in
mov
and
jmp
and
cmp
out
mov
stc
pop
data16
sub
cmp
pop
mov
inc
xlat
add
lock
lret
rcr
insl
xor
sbbb
clc
and
mov
push
out
pop
mov
sbb
pop
sbb
les
push
addr16
dec
or
pushf
outsb
iret
in
sar
sub
std
mov
nop
cmp
dec
or
aaa
loope
movsl
ret
jb
ror
cli
and
popf
sub
mov
mov
jns
je
push
push
test
pop
stos
add
pop
pop
push
sub
sbb
xchg
jno
mov
fcoms
push
sti
jp
scas
push
ljmp
jo
pop
rolb
stc
orl
jns
movsb
loopne
cmp
add
mov
xchg
xlat
add
add
loopne
push
aaa
clc
mov
xor
cmp
sub
jge
jae
fwait
out
push
or
pushf
sahf
mov
dec
movsb
stos
jne
adc
mov
mov
icebp
sbb
push
mov
xor
push
daa
fs
jae
pop
mov
imul
fstl
test
pushf
mov
add
icebp
std
std
sbb
cmp
mov
stc
rolb
dec
adcb
call
pop
mov
or
adc
mov
fidivrs
cli
adc
pop
les
mov
push
add
cmpsb
call
repnz
aam
ret
or
imulb
xor
das
in
cmp
shrb
fcmovu
inc
es
popa
pop
jecxz
lret
fistl
leave
cld
orl
add
pop
rorb
mov
and
jnp
push
adc
pop
into
dec
xor
ret
pop
pop
sbb
jl
enter
xor
repnz
or
pop
das
sti
pusha
andl
jb
lods
pop
loop
cld
popa
dec
lods
jge
in
lods
sub
inc
rcrl
clc
cli
cmc
push
fldenv
out
add
mov
repz
ret
xlat
pop
icebp
mov
iret
xchg
js
sbb
sub
adc
jae
aaa
adc
das
rol
jmp
cs
call
sbb
cmp
fldcw
out
mov
mov
pusha
jecxz
and
fs
pop
and
adc
lods
int
pop
mov
adc
jae
fbstp
add
pop
pop
sahf
cmp
xor
ret
and
sbb
scas
jmp
scas
add
jae
js
xorb
ret
jnp
sbb
mov
add
add
ret
or
inc
xor
sub
lds
bound
cmp
mov
inc
sub
jne
call
sub
popf
mov
and
add
imul
mov
mov
mov
es
cmp
xchg
xchg
mov
out
add
aas
test
mov
cltd
test
mov
pop
push
out
push
pop
cmp
orl
nop
stos
sarl
cli
adc
insb
mov
xchg
cmp
mov
loope
jb
cmp
outsb
dec
mov
pop
inc
scas
es
dec
outsl
jl
into
stos
ds
and
mov
sbb
and
cmpl
inc
add
jb
sti
mov
mov
and
sbb
mov
bound
fucom
shll
add
sub
aas
rolb
fbstp
or
inc
add
sub
mov
mov
and
adc
jnp
dec
jb
aad
dec
sbb
sbbl
ffreep
pop
leave
adc
scas
xlat
insl
push
dec
test
out
int3
mov
jns
xorl
fdivs
rcll
loopne
fcmovnb
ja
jmp
leave
mov
mov
adc
lret
push
and
filds
add
outsb
mov
or
insb
into
push
popa
xlat
daa
push
mov
mov
sub
jle
sbb
loope
les
pop
add
sub
sti
mov
loopne
push
bound
mov
je
shll
cmp
add
jnp
cmc
mov
jmp
xor
mov
test
scas
jno
dec
lahf
add
or
shl
cmp
loopne
xchg
ret
mov
or
lock
cld
mov
shlb
lods
inc
sub
mov
lock
mov
enter
xor
das
pop
mov
filds
add
xlat
and
add
sub
push
lret
pop
pusha
in
add
movb
lods
or
iret
sbb
scas
sub
jp
adc
and
movsl
sub
pop
mov
mov
iret
mulps
pop
addl
dec
mov
pop
addr16
jae
insl
inc
test
cmp
stos
insb
xlat
sub
xchg
ja
adc
or
nop
idivl
fcomps
int3
jge
xchg
push
insl
cltd
jnp
pop
mov
insb
mov
movb
mov
xlat
pop
js
push
cmc
and
imul
cs
or
sbb
ret
mov
lret
flds
or
xchg
cmc
cmp
cmpsl
stos
fsubl
frstor
nop
mov
stos
cmp
sbb
and
cmovl
sbb
aas
mov
lea
loop
lret
nop
adc
dec
xor
push
cmc
das
ror
jmp
scas
sbb
int3
mov
cwtl
fldt
rorl
and
data16
fldl2e
or
loop
sub
lret
push
arpl
pop
clc
loop
jge
mov
scas
xchg
pop
xor
mov
or
dec
negl
pop
pop
ret
imul
cmp
and
inc
aas
rolb
rolb
call
push
repz
sub
adc
sub
clc
jp
sbb
popf
aas
adc
out
imul
stos
adc
pop
dec
mov
mov
ljmp
jnp
mov
pop
jl
sub
push
in
lods
cmp
cmp
hlt
push
fwait
xchg
or
outsb
sbb
cs
cmp
adc
inc
push
or
imul
sbb
push
push
push
cmp
add
mov
loopne
fildl
xchg
or
push
ucomiss
fidivrl
enter
adc
pop
out
add
in
icebp
adcl
and
add
dec
or
mov
test
mov
jmp
into
push
rclb
xlat
sub
or
hlt
push
push
ds
outsl
jnp
sub
les
push
lret
cmp
mov
adc
pop
js
repz
dec
pop
popf
cmp
call
nop
rcll
and
or
xchg
mov
adc
sub
cltd
and
pop
inc
pop
in
iret
fldl
push
sbb
xchg
dec
iret
and
aad
loop
push
in
scas
dec
idivl
cmp
cmp
xor
cld
add
cmc
xlat
xorl
adc
xchg
and
les
sub
pop
orl
fldenv
jns
lock
daa
sbb
xor
loope
pop
and
sub
js
and
out
idivl
jecxz
je
push
adc
lods
imul
loopne
cmp
hlt
cmp
xor
add
jecxz
lret
cmpsb
and
mov
mov
push
add
lods
jne
mov
daa
cld
pop
mov
sbb
mov
fucom
pop
and
add
bound
or
pop
ret
test
arpl
pop
pusha
adc
mov
sahf
jnp
js
and
testl
stos
xchg
push
mov
subl
or
xchg
cmp
push
cmpsb
jl
add
or
out
adcb
mov
mov
xchg
push
ret
cmp
mov
adc
xchg
inc
ja
dec
jl
jnp
cmp
add
je
dec
and
js
orl
inc
mov
fiaddl
in
repz
push
cmp
pop
imul
or
dec
add
fisubrs
mov
sub
fistpll
mov
mov
ret
scas
add
insb
sub
lret
jns
push
mov
fisttps
add
jnp
jp
mov
sarl
lcall
or
pop
in
mov
aas
subl
push
ret
jmp
lock
mov
add
aaa
add
cmp
inc
xchg
add
call
js
dec
mov
add
imul
push
add
add
sbb
xchg
cmp
and
pushf
movsl
cld
out
repz
jbe
leave
cld
add
inc
lods
dec
test
xchg
call
fs
sub
push
adc
int
sub
jge
inc
sub
jl
jmp
add
pmaddwd
jo
jno
add
sbbl
jbe
ret
xor
lock
cmc
xchg
ds
ret
rcrb
imul
lock
sbb
lea
mov
and
dec
pop
jg
lods
sbb
mov
aam
cwtl
test
scas
pop
rol
xor
loopne
jne
sub
daa
or
add
loop
mov
insb
sbb
push
test
mov
inc
in
ss
mov
pop
hlt
js
sbb
inc
orb
lock
cmp
shr
mov
adc
mov
mov
mov
mov
rcrl
push
mul
sahf
jb
cmp
adc
sub
cmovne
stc
adc
loopne
cmp
mov
mov
jo
jnp
cmovl
mov
loopne
aam
jns
dec
push
inc
mov
jl
xorl
out
popa
ret
addr16
data16
jmp
mov
cmp
xor
jbe
pop
into
xchg
into
jge
cmc
loop
mov
or
aad
mov
out
test
or
scas
dec
mov
push
pop
mov
insb
aaa
mov
cs
sbbl
int3
stos
add
lock
mov
in
push
enter
loope
in
in
popa
test
aad
and
insb
cmpsb
popf
xchg
jnp
sbb
arpl
lea
or
lods
sub
jecxz
dec
pop
and
push
aam
stos
sbb
or
lret
mov
testl
ljmp
jle
fdivp
push
sbb
sub
add
das
sub
sti
add
aaa
mov
pop
mov
imulb
xor
cmp
test
dec
push
lcall
or
push
pusha
xchg
sub
dec
scas
dec
aad
jnp
mov
inc
inc
add
mov
adc
imul
pop
sahf
lock
jo
daa
pop
mov
add
jmp
mov
movsb
adcb
aaa
sub
inc
cld
ret
inc
jmp
pop
fidivrl
xlat
inc
aam
popa
negl
daa
mov
and
sub
xchg
and
rolb
xchg
out
pop
inc
add
mov
icebp
bound
mov
in
cmp
mov
das
popf
arpl
mov
lahf
xor
ljmp
sub
adc
movsb
cli
addb
cmpsb
lock
inc
or
outsb
pop
lds
cmp
out
mov
icebp
jno
and
negb
stc
push
sub
and
movsl
xor
mov
jns
jle
jns
cmp
xchg
and
push
lahf
js
gs
sbb
jl
sub
add
das
mov
hlt
rolb
cmpsl
xlat
scas
pop
insb
xor
test
add
fsubrs
push
sbb
inc
add
test
jge
into
inc
add
cs
dec
scas
inc
mov
fnstsw
cmp
adc
cli
mov
out
in
add
inc
cwtl
icebp
cmp
sbb
or
pop
xlat
inc
pop
repz
cmc
xor
xor
pop
mov
negb
push
in
add
cld
sahf
add
fisubl
push
repz
sbb
inc
in
sti
faddp
es
cli
push
mov
cmp
enter
jmp
sahf
sbb
ja
mov
sub
icebp
add
out
jl
mov
pop
test
je
js
adc
nop
mov
sti
and
out
push
inc
loope
fcomp
aam
or
test
xchg
cmpsb
ret
pop
and
xor
push
ds
sub
repnz
das
mov
or
sub
sbbb
push
cmp
cmc
adc
xor
push
jge
add
ja
fdivl
jmp
popa
ret
jae
jno
pop
sbb
movsl
adc
sbb
popf
jb
fbstp
jmp
and
js
addl
cmp
test
in
mov
and
inc
stos
jnp
push
js
ja
js
in
cld
xor
or
popa
mov
test
inc
pop
test
lock
push
loopne
ds
mov
jmp
or
push
mov
stos
cmpsb
push
mov
mov
xor
add
xchg
nop
rcrb
test
popa
push
cmp
int
dec
fcomps
ss
repz
mov
shld
add
popa
sub
cmp
cmp
repz
fcoms
mov
pop
in
sar
xor
inc
and
test
and
jne
jb
js
sbb
sub
xor
xchg
das
ljmp
push
jp
sar
push
or
rcrl
outsb
xchg
jle
ret
jb
adc
pop
lods
mov
and
ret
popa
xchg
insb
push
jbe
ret
loope
mov
rclb
dec
add
orl
cmp
inc
std
aas
loopne
aaa
cmp
das
mov
arpl
dec
aad
insb
push
les
pop
mov
scas
in
repnz
sbbl
pop
loopne
sbb
lds
push
and
push
xchg
scas
mov
adc
jns
call
gs
icebp
push
fstpt
xor
xlat
gs
shl
mov
push
imul
shlb
xor
mov
in
je
xor
loope
push
jns
push
jge
nop
mov
ljmp
pop
js
push
jl
test
testl
addb
pusha
cs
sahf
daa
add
daa
and
sbb
mov
push
adc
test
jnp
jno
rep
jmp
inc
cltd
scas
cmpsl
jb
inc
xchg
leave
flds
lock
ja
je
sub
jecxz
push
jl
mov
lock
mov
add
lock
je
jne
sub
mov
xchg
pop
stos
insl
imul
mov
fwait
inc
push
dec
mov
add
add
dec
sub
cmp
mov
inc
dec
cwtl
pop
jbe
jns
xlat
add
sbb
add
pop
and
xchg
inc
inc
roll
and
sar
xor
dec
shl
mov
ret
loop
out
das
loopne
adc
aam
shl
into
jbe
lcall
ja
cmp
xchg
and
cmpsb
ljmp
lret
or
popa
sub
ret
out
pop
and
push
mov
fsubl
push
aam
xchg
jnp
pop
xor
sub
mov
jno
push
test
mov
scas
into
push
fbld
in
jp
mov
sbb
push
test
inc
test
or
cmp
ret
stc
add
jns
inc
cltd
je
dec
roll
dec
lea
lods
inc
mov
inc
add
ljmp
rcrb
push
push
adc
lods
jne
or
mov
xchg
loope
jmp
scas
xchg
orb
fstl
cmp
add
insl
jno
lds
lahf
cmc
loopne
and
sbb
push
neg
ret
out
incl
mov
loopne
xchg
in
xor
ficoms
mov
jp
dec
sub
xor
inc
loop
scas
test
sbb
jmp
xchg
xchg
les
fwait
and
and
xchg
lea
shl
cmpsb
jbe
lods
or
xorps
inc
pop
adc
xchg
xchg
shrl
pop
mov
jnp
lret
and
push
add
xlat
mov
pop
xor
inc
aam
pop
and
jb
sub
and
faddl
xor
dec
fbld
outsb
fmuls
xor
das
mov
add
inc
dec
sub
sub
jo
xor
mov
cmp
mov
inc
mov
icebp
mov
testb
mov
dec
or
imull
jle
and
xchg
sub
lock
aam
mov
rcr
out
pop
jb
mov
ret
mov
xor
inc
jmp
xchg
sahf
jo
test
adc
decl
sub
xor
xchg
sbb
or
ret
aad
mov
xor
push
fldcw
imul
sub
loope
enter
addl
fs
mov
rcrb
push
xor
scas
mov
adc
pushf
addb
call
mov
mov
jno
mov
jl
cmpsl
sub
sub
out
std
cmp
add
or
lock
outsl
add
push
sbb
xchg
cmp
mov
adc
std
jle
jg
inc
repz
adc
cmp
in
adcl
ds
sar
mov
or
daa
fcoms
cmpsl
cs
fcoml
cmpl
cmc
or
mov
shll
ror
test
cld
movsb
push
dec
ret
xchg
data16
add
loopne
lret
scas
push
movsl
add
xchg
add
add
pop
loope
das
jmp
ljmp
sub
fwait
ret
pop
inc
and
jl
cmp
enter
int3
add
and
add
or
clc
adc
add
pop
stos
cmp
test
mov
jns
pop
sub
pop
aad
push
inc
pop
xchg
lock
xor
mov
push
les
andl
aad
ret
stos
aas
les
xor
dec
fadd
pusha
and
add
inc
rolb
cmc
add
sarb
push
out
std
scas
into
pop
add
nop
jge
loop
mov
push
mov
cld
jge
sub
ret
leave
mov
and
dec
lret
lods
fmuls
movsb
daa
mov
bound
loope
imul
mov
shlb
ret
ja
lret
ret
sarb
mov
jmp
repz
int3
addr16
mov
and
aad
in
fistl
call
sub
sti
push
jl
add
mov
sub
add
sbb
jecxz
js
test
push
loope
js
outsb
or
xchg
sub
into
add
pop
push
pop
ja
in
scas
dec
in
mov
in
fstpt
jne
imul
fcmovnu
mov
hlt
repnz
add
pop
xorl
dec
sbb
jl
scas
cli
push
loope
jl
ss
mov
lods
push
jns
stos
movl
sar
mov
sbb
cld
cmp
scas
cmc
icebp
ret
mov
dec
push
mov
mov
push
ret
lret
or
int3
fwait
pop
insl
repnz
sub
jge
mov
arpl
lcall
pop
or
adc
pop
ret
xor
nop
cmp
ja
push
xchg
push
incb
jp
mov
pop
sub
mov
adc
sub
mov
test
arpl
xor
or
out
dec
dec
fcmovnb
cmp
ja
in
push
add
push
fsub
aam
cmpb
sbb
inc
aad
jle
jp
cmpsb
leave
fbstp
pushf
xor
cs
pop
inc
dec
mov
std
mov
mov
jb
push
gs
cmp
rclb
data16
icebp
cli
out
cmpsb
dec
enter
loope
mov
jne
add
ret
or
adc
xchg
sbb
push
ret
mov
aas
clc
test
and
inc
insl
dec
ja
inc
js
adc
iret
lods
or
jo
pop
adc
inc
fdivrs
in
xor
mov
dec
aad
lods
jge
scas
fidivrs
mov
cli
icebp
mov
and
add
pusha
test
cltd
cmp
aaa
rorb
push
iret
push
cmp
popf
loope
sbb
ljmp
jmp
movsl
push
xchg
jmp
mov
inc
inc
sbb
in
das
mov
hlt
out
add
jmp
cmp
or
fwait
inc
cmp
and
ss
ret
sbb
pop
lahf
out
mov
pop
cmp
and
pop
cmpsb
pop
jns
add
syscall
pop
sub
ss
jbe
dec
pop
lods
lret
fnsave
xchg
sub
shr
je
fs
add
lock
sti
xor
xor
icebp
jb
push
xor
dec
mov
and
movsb
aad
jge
adc
in
or
dec
insl
ud2
jo
inc
test
mov
sbb
aam
pusha
pop
sbb
es
xchg
cmp
sub
mov
jb
add
inc
out
dec
inc
xor
sbb
fcompl
sbb
add
inc
mov
movsl
frstor
push
rolb
cltd
fwait
in
or
xor
call
and
int
hlt
add
mov
outsl
cmp
loop,pt
testb
test
mov
or
add
dec
jne
stos
mov
test
pop
loope
idivl
xor
int3
mov
jl
ljmp
and
das
ror
or
and
mov
xchg
test
mov
lret
mov
dec
add
jl
sub
add
xchg
xchg
lret
dec
mov
int
push
mov
xor
lds
stos
add
mov
pop
push
lods
movsl
nop
mov
dec
in
push
mov
cwtl
jnp
mov
push
sti
dec
call
mov
stos
push
sbb
daa
clc
push
shll
mov
shrb
add
dec
jne
mov
jp
adc
lret
idivl
lret
xchg
lock
jno
pop
subl
mov
jge
inc
sahf
lahf
xchg
inc
ja
into
js
sbb
cltd
and
and
xlat
mov
lret
mov
lds
outsl
jo
push
inc
lret
sub
or
aam
inc
scas
ucomiss
insl
add
fcompl
sbb
and
repz
mov
push
daa
or
pop
pop
ss
mov
imul
cwtl
inc
jp
into
push
and
pushf
sbb
inc
and
lret
jno
jo
test
jmp
out
or
and
push
adc
pop
dec
sub
das
mov
ja
pop
dec
pop
int3
adc
pop
lahf
xchg
aam
je
add
adcl
push
inc
mov
dec
hlt
loop
ret
out
cmp
es
jb
sub
cwtl
pop
dec
mov
in
sar
add
and
dec
aam
sbb
push
mov
sbb
outsb
call
call
fs
push
lods
adc
rolb
xor
push
mov
scas
add
sub
test
mov
jo
bound
int3
in
or
push
sti
addl
mov
xor
sub
idivl
push
into
into
or
add
in
jmp
pop
js
adc
andl
and
push
les
sub
loop
jg
xor
sub
iret
out
loope
in
imul
int3
sub
imul
xchg
bound
test
jo
xchg
add
adc
xchg
or
stos
inc
sti
ret
fcomps
pop
iret
pop
js
jbe
mov
xchg
inc
pop
jno
adc
or
insb
jne
adc
jmp
imul
test
pusha
jne
in
sub
orl
je
jne
cmp
cmc
cltd
in
insl
cltd
cmp
sbb
fsubrs
popf
jbe
les
sbb
jge
or
mov
daa
lcall
sarb
inc
lret
pop
and
call
pop
push
loope
test
sub
jnp
aam
pop
test
mov
sti
pushl
stos
faddp
rcl
test
aaa
sbb
adc
aaa
mov
mov
lret
cwtl
mov
adc
pop
add
aas
xor
js
xor
das
imul
cmp
push
fstp
and
mov
jbe
fdivrs
daa
jb
add
lret
aad
stc
out
test
loopne
and
testl
cmpsb
mov
sub
icebp
and
mull
push
pop
mov
or
cmp
or
jge
ret
decb
in
adc
test
movsl
sbb
xlat
jecxz
loope
jl
adc
jecxz
cmp
and
cli
into
sub
xor
pop
data16
ljmp
bound
arpl
loopne
jnp
aad
xchg
sub
xchg
xlat
mov
xor
aad
pop
mov
in
xchg
xor
adc
sbb
rorl
push
and
shll
ret
pop
dec
inc
sub
mov
cmp
mov
sbbb
je
ficompl
sub
or
or
cmp
mov
sbb
test
inc
cmp
xchg
mov
add
hlt
gs
ljmp
jg
and
out
mov
in
loop
xor
add
repz
repnz
mov
loope
lea
popa
sbb
movsb
dec
adcb
xor
lcall
loope
sti
push
adc
jbe
js
ds
add
jmp
push
push
popf
shrl
inc
ret
stos
mov
jmp
rcll
sbb
pop
lods
inc
xlat
mull
ljmp
jl
xor
ds
shrb
bound
dec
nop
mov
in
inc
mov
mov
test
xchg
pop
or
inc
xchg
push
sbb
pop
mov
movsl
pop
xor
push
insl
ret
inc
jp
pop
pop
or
nop
js
mov
ret
data16
pushf
div
mov
pop
test
aad
es
cmc
imul
xchg
add
or
add
or
xor
pop
sub
mov
loope
push
mov
arpl
std
std
add
or
push
add
imul
shl
mov
insl
adc
cmp
fiaddl
adc
xor
shll
cli
test
sbb
mov
pop
xlat
pusha
fbld
push
in
inc
or
and
sub
jnp
out
xchg
imul
movsb
test
xchg
adc
sbb
sti
dec
sub
bsf
arpl
push
or
outsb
ljmp
dec
mov
push
ds
arpl
lock
mov
mov
lds
push
fsubr
add
jg
inc
incb
push
pop
insb
aad
cmc
push
das
cmp
adc
shll
jl
pushf
lock
jns
xchg
push
lock
mov
jp
subl
mov
jecxz
xorl
iret
jmp
aad
add
rol
scas
or
and
sub
sub
sbb
jecxz
mov
fwait
and
push
sub
insb
mov
shll
mov
xchg
je
stos
mov
jl
fwait
mov
jge
hlt
adc
pop
pop
jnp
add
out
arpl
lods
outsb
test
sbb
sub
jno
andb
pop
push
jbe
aam
xchg
testl
inc
mov
ret
in
adc
cmp
ret
test
cmp
ja
leave
cmp
add
daa
add
testb
push
pop
sub
pop
loopne
fmuls
mov
mov
cmp
adc
jg
testl
stc
add
mov
and
imul
icebp
fdivrs
cmp
push
test
add
aam
sti
imul
dec
or
loop
jo
sbb
testl
icebp
mov
test
in
sub
pop
lds
add
sbb
loop
add
push
call
sbb
add
sbb
ret
aad
daa
pusha
cmp
cmp
inc
scas
in
cmp
mov
pop
es
xor
andb
rcr
xchg
outsb
xchg
jp
push
mov
xor
dec
ret
sbbl
in
in
jo
out
mov
clc
jnp
cmp
ljmp
test
add
mov
daa
ret
pop
pop
lret
jns
jne
pop
adcb
in
out
jmp
fwait
pop
repnz
ret
jp
imul
push
jecxz
fstl
hlt
lret
shl
js
cmp
or
xchg
or
jge
outsb
mov
xlat
rcrl
adc
imul
insb
movsb
lds
mov
mov
adc
ja
arpl
fildl
or
fldt
lret
xchg
das
nop
mov
adc
fildl
jg
dec
pop
fmull
mov
gs
xchg
mov
and
jnp
or
scas
lods
mov
fldl
loope
fstpt
inc
inc
stos
pop
loope
cltd
pop
pop
and
cltd
pop
sbb
or
out
jle
in
shrb
pop
mov
mov
icebp
add
xchg
push
pop
adc
pushf
pop
out
mov
in
and
jnp
or
outsb
cmp
loope
mov
es
loope
xor
icebp
cmp
push
out
mov
daa
dec
leave
jecxz
sbb
lahf
pop
mov
cmp
mov
or
xor
fadds
loope
jge
sub
bound
lret
add
push
loope
js
sti
fldt
sbb
adc
cmp
gs
fisttpll
or
addl
das
cmp
push
outsl
dec
bound
mov
mov
pushf
mov
or
ja
mov
xor
sbb
or
add
std
popa
pop
dec
sub
cmc
dec
out
jmp
idivl
pop
jp
jb
mov
mov
inc
mov
test
inc
mov
test
js
push
clc
pop
adc
cmp
xor
adc
fisubl
xor
ja
aad
test
orl
movsl
test
mov
fwait
pop
hlt
sub
enter
mov
data16
es
dec
sub
pop
sub
push
and
push
push
sbb
inc
push
push
lahf
les
and
dec
xchg
mov
gs
lret
xchg
stos
loope
dec
mov
sub
mov
mov
test
push
mov
mov
jnp
jne
cmp
fstps
pop
inc
dec
ret
aam
jae
cmpsl
test
xor
or
pop
adc
jl
xchg
rolb
jo
dec
arpl
in
or
ret
dec
lods
push
jb
dec
stos
out
es
xor
es
jmp
imul
add
int
ret
rcll
mov
mov
mov
ss
pop
pop
aaa
xchg
in
lock
sti
aad
mulb
sbb
orl
pop
popa
cmp
pop
dec
add
adc
sbb
adc
jmp
cmp
scas
push
ljmp
test
mov
cmpsl
cs
pop
loope
lods
roll
jns
pop
aad
push
push
pop
insb
in
cwtl
or
shll
sbb
iret
sbb
fwait
mov
ret
jae
cmpsl
lea
dec
sub
pop
pop
add
cmp
test
fistl
movsb
addr16
jne
sub
inc
adcl
iret
aad
shlb
pop
sbb
sub
repz
dec
call
insl
sbb
orb
cmp
addr16
push
mov
ds
mov
add
scas
mov
add
sub
ret
pop
mov
mov
adc
rorb
lret
icebp
test
imul
pop
or
pop
add
ffree
aad
push
cmp
inc
pop
dec
push
and
sub
dec
pop
loopne
add
jmp
insl
jo
das
add
sub
sub
add
xor
and
add
fcmovnb
dec
iret
push
insl
and
pop
cmp
mov
push
and
push
sti
inc
in
add
in
xchg
in
mov
out
or
nop
jecxz
fwait
pushf
xchg
xor
dec
popa
stos
ret
hlt
adcl
push
mov
sbb
fs
xchg
jp
xor
ljmp
xor
mov
xchg
mov
xlat
mov
add
int
xchg
fldt
lcall
cmp
push
lahf
sbb
aaa
dec
or
dec
push
les
in
lds
push
fwait
scas
and
pop
pusha
mov
loop
mov
popa
add
jmp
ret
loop
and
cmpsb
pop
fdivrl
add
and
push
pop
call
pusha
and
dec
pop
rorb
sub
push
jecxz
jecxz
add
loopne
pop
adc
sub
dec
test
inc
push
cmpl
lret
inc
pop
jbe
icebp
jno
inc
mov
rclb
sub
pusha
inc
xor
inc
not
xchg
rol
push
xor
call
push
fisubrs
mov
test
decb
and
iret
in
cmp
xor
sub
test
cs
adc
pminsw
mov
shl
les
jmp
imul
mov
push
pop
jns
jne
test
or
test
addb
mov
into
dec
cmp
lcall
pop
jae
and
xor
adc
les
xchg
adcb
mov
dec
or
iret
push
loop
aaa
ror
ljmp
out
loope
movsb
fwait
mov
stos
push
and
jb
call
adc
jo
insl
mov
outsb
jnp
jns,pn
pop
xor
insb
and
push
ljmp
imul
jnp
and
adc
movsl
xchg
and
shlb
ja
fistl
or
std
xlat
arpl
mov
lcall
sbb
and
ret
pop
mov
xorb
pop
adc
push
push
fucom
xchg
aaa
cmp
or
call
cmpsl
repz
fdivrs
out
adc
dec
xor
dec
or
or
push
adc
loope
lcall
xchg
push
setbe
add
fldl
movsl
adc
and
shl
xor
addr16
sbb
sbbb
mov
lret
ret
inc
cmp
cmp
dec
cmp
stos
xor
mov
xor
in
pop
mov
adc
xchg
jo
pop
jg
inc
cmp
daa
inc
lds
pushf
jg
cmp
les
mov
or
adc
push
cltd
icebp
add
dec
data16
pop
adc
mov
outsl
pushf
jnp
mov
mov
mov
jnp
jl
lods
testb
daa
cmp
sub
out
jmp
mov
mov
loopne
loopne
je,pt
mov
mov
jmp
lods
lcall
iret
adc
movsl
pop
test
lods
movl
scas
filds
andb
add
rcll
inc
sbb
les
lods
mov
fisubrs
jno
out
mov
cmc
test
aaa
mov
lea
testl
negl
addl
in
pop
insb
ss
sub
rolb
and
jnp
scas
mov
pop
push
lea
daa
jb
iret
movsl
sub
dec
adcl
xchg
dec
daa
aam
push
roll
iret
movsl
cmp
push
dec
jns
add
sub
faddp
dec
or
or
aaa
outsl
pusha
jecxz
rorl
jbe
ret
icebp
sub
mov
inc
xor
mov
pop
adc
mov
icebp
roll
pop
jp
sahf
lea
inc
out
mov
arpl
sub
daa
gs
sbbl
mov
add
cmc
mov
dec
hlt
mov
sbb
and
jmp
mov
dec
test
push
xchg
adc
mov
mov
ret
sub
test
pop
jnp
ficompl
push
add
stc
dec
sbb
in
xchg
imul
push
mov
cs
jmp
inc
daa
jnp
dec
ret
scas
xchg
pop
dec
sub
pop
aaa
sarl
repz
rcpps
loop
mov
scas
ret
lea
xchg
lret
mov
sub
je
std
cmp
int
ja
adc
cmp
cmp
mov
nop
xchg
xor
in
xchg
fnstcw
bound
fs
push
mov
cwtl
cli
lahf
xor
ret
push
sbb
inc
jae
inc
jecxz
jb
fcomi
and
call
jmp
cmpsb
push
pop
push
adc
js
inc
sbb
in
xchg
push
jmp
mov
mov
cmp
test
mov
lods
dec
ret
push
sbb
cmp
or
xchg
xchg
dec
and
out
dec
das
out
rsqrtps
sub
add
jl
jg
dec
das
mov
pushf
loope
mov
xorb
xchg
cmpl
adc
scas
adc
jp
pop
pop
pop
stos
xchg
xchg
sub
je
scas
xor
jns
mov
mov
leave
adc
scas
jno
testl
and
inc
mov
in
scas
xor
in
ret
nop
inc
ljmp
xchg
or
pop
dec
xchg
mov
xchg
psubsb
mov
cmpsb
pop
xchg
mov
dec
cli
mov
repz
or
ret
sub
fnstenv
xchg
xchg
je
cmp
xchg
jecxz
fisttpll
dec
add
inc
add
sub
sbb
pusha
jl
jp
adc
sub
push
push
mov
ja
xor
mov
sahf
mov
lret
sahf
xchg
push
daa
add
mov
push
mov
pop
cmc
scas
cmp
or
xor
andb
ret
cltd
pop
sub
push
jnp
add
adc
pushf
bound
loop
add
aaa
lahf
sub
or
dec
sub
lock
aam
mov
insb
fldenv
out
imul
iret
clc
lods
shll
fwait
test
lahf
sub
loope
pop
out
stos
loop
jmp
fcompl
lcall
sub
aam
lret
pusha
cmpsl
loope
cmpl
xchg
xchg
mov
subl
fndisi(8087
add
sbb
rcrb
fdivrl
inc
in
push
mull
nop
mov
mov
ret
push
jp
cvtpi2ps
jae
sub
shrl
arpl
push
push
pop
sbb
call
or
sti
aam
push
sbb
popf
jb
mov
movl
and
mov
das
iret
add
sti
subl
fisttps
and
dec
mov
imul
ret
lods
jmp
inc
pusha
add
jnp
fimuls
mov
dec
xlat
mov
add
push
inc
dec
push
cmp
and
push
enter
popa
rclb
lock
jnp
pop
inc
dec
fcompl
add
sbb
jnp
adc
xor
push
roll
pop
xor
out
sti
maxps
inc
jno
lcall
pop
out
aam
cmp
add
cmp
scas
repnz
xchg
inc
xlat
and
jecxz
dec
mov
mov
push
jle
scas
push
int
cmp
out
ret
push
add
js
loopne
loop
jbe
icebp
jge
iret
sbb
cmp
inc
or
js
mov
pop
icebp
mov
sahf
mov
ret
addr16
jno
dec
push
in
ret
jge
in
das
ja
ret
sub
jecxz
sti
mov
and
pop
push
mov
add
cmpl
xor
mov
cmc
fldt
orl
pop
add
lods
add
mov
rclb
cmp
adc
jp
sbb
call
dec
rcll
dec
xchg
ret
ja
mov
add
pop
inc
xchg
sub
cltd
sbb
rolb
popa
xchg
aas
add
arpl
call
mov
mov
add
push
jbe
cmp
sub
insw
cwtl
mov
in
imul
imul
pop
xchg
outsb
cmp
xor
jle
dec
pop
sub
cmp
mov
mov
cmp
loopne
adc
das
test
push
adc
loopne
jo
fstps
jg
lret
int3
xchg
les
icebp
fisttps
cs
xor
inc
loop
or
testb
pusha
fwait
ret
addr16
sbb
xor
stos
add
pop
arpl
and
out
dec
in
test
and
mov
xchg
test
mov
cwtl
fwait
add
fwait
es
pop
jns
push
dec
loope
push
mov
sbb
mov
in
and
ret
sbb
ljmp
and
jge
or
loop
insl
push
jbe
dec
fdivrs
gs
cmc
and
test
stos
sti
jecxz
pushf
lock
fbld
popf
testl
in
lahf
ds
out
loopne
pop
sbb
adc
imul
xor
fcmovb
add
repz
mov
mov
pop
add
nop
faddl
call
arpl
add
cli
adc
pop
stos
gs
add
ss
movsb
push
xor
daa
insl
call
inc
mov
pop
pop
std
roll
hlt
enter
sbb
and
lret
dec
dec
cmp
dec
sub
or
jmp
cli
xor
ret
add
mov
inc
repz
mov
pop
sub
pushf
pop
cmovo
mov
mov
dec
test
inc
xlat
cmp
xchg
xlat
sub
add
bound
push
mov
fwait
pushf
cmp
mov
sti
aaa
mov
cs
or
daa
nop
rol
mov
xchg
inc
lret
inc
cmp
dec
lret
shl
mov
lret
mov
stos
add
xchg
sbb
and
dec
xlat
movsb
aas
test
dec
jmp
mov
add
pop
jo
push
scas
out
insb
lret
xor
fildll
loop
scas
push
adc
fldl
sub
fisubl
jns
inc
mov
lods
push
mov
scas
lock
xchg
cmp
aas
and
jg
cmp
pop
cmp
shll
inc
aaa
or
cmp
cmp
pop
mov
xchg
aad
mov
adc
insl
adc
icebp
movsb
push
or
sub
pop
inc
push
mov
lret
adc
cltd
add
cmp
adc
adc
push
adc
sti
sub
imul
mov
or
out
sbb
out
add
push
nop
pop
scas
sbb
popa
int3
mov
sub
loopne
push
push
pop
jno
push
or
cmc
stc
aas
and
nop
add
popa
dec
pop
out
add
outsb
push
sbb
orl
xchg
and
add
ss
addb
inc
jmp
xchg
stos
mov
je
dec
mov
push
mov
mov
ds
and
mov
or
in
shlb
cs
mov
dec
fsubrl
cmp
sub
pop
dec
lea
inc
add
rolb
popa
mov
xchg
pop
cmp
fdiv
test
aad
std
or
xchg
mov
pop
adc
mov
mov
hlt
mov
loope
inc
in
and
mov
or
imul
pop
fisttps
pop
dec
mov
movb
xchg
sbb
mov
je
cmp
iret
lock
outsb
mov
aam
or
pop
sbb
mov
mov
ret
add
xorl
loop
es
pop
fstpl
imul
or
jg
cld
andl
stos
inc
lea
enter
or
movsb
addr16
or
imul
cmp
mov
or
mov
cld
mov
xor
add
push
shlb
dec
mov
xorb
dec
mov
and
sahf
icebp
cmpl
xchg
sub
jmpw
outsl
addr16
push
dec
loop
dec
lahf
shll
fistpl
imul
jb
inc
icebp
movsl
push
add
stos
repz
add
loop
idiv
pop
add
mov
adc
dec
push
cld
fbstp
jecxz
aaa
xchg
gs
sbb
cmp
adc
and
jge
adc
cmp
pop
lods
sub
dec
sub
sbb
push
or
and
insb
mov
add
aad
push
pop
adc
pop
mov
mov
jno
mov
push
mov
pop
push
popl
dec
or
test
mov
dec
mov
xor
or
sbb
and
cmp
call
bound
aaa
adc
sub
push
sahf
lock
aad
sub
fisttpll
mov
sbb
setg
pop
pop
sbb
mov
daa
jns
fcmovb
inc
leave
mov
xlat
jmp
pop
sbb
int3
push
test
lahf
fnstcw
sbb
mov
inc
pop
sub
sbb
push
je
mov
jbe
and
jo
fs
lret
mov
pop
xor
rolb
fdivs
rol
popf
jo
push
xchg
xor
dec
sub
dec
mov
pop
adc
dec
mov
in
sbbb
ss
pop
xor
mov
fs
mov
xchg
aad
dec
sbb
mov
int
in
addl
mov
mov
jo
shll
aad
mov
loop
out
rcl
pop
sub
and
mov
adc
xor
rcl
cmpsb
and
mov
and
adcl
sbb
sbb
add
xchg
xor
je
movsb
adc
inc
das
mov
xor
and
movzwl
rol
push
sbb
outsb
js
push
sub
cmpsb
mov
and
mov
and
gs
rcrl
pop
inc
rcrl
mov
mov
and
les
or
cmc
int
lcall
adc
mov
mov
cmpsb
rolb
in
shlb
and
shll
jo
pop
repnz
xlat
loop
sub
imul
cmpsb
aaa
push
loop
xor
scas
aaa
int
cmpsb
xlat
cmpsl
sub
aaa
inc
sbb
pop
push
aaa
daa
mov
sbb
xor
inc
mov
sti
sub
and
dec
sub
shr
vpbroadcastw
bound
lcall
jecxz
mov
xorl
rorl
mov
dec
dec
jg
scas
adc
js
sub
and
or
stos
xor
sbbl
das
lods
adc
das
pusha
aam
add
add
cmp
out
lods
in
lock
sub
movsl
outsl
lret
push
mov
lock
movsb
popa
outsb
jl
lods
fdiv
loopne
xchg
cmp
sbb
push
arpl
jl
mov
xor
xchg
or
sub
cmp
ret
mov
push
pop
inc
test
add
ds
push
push
cmp
loope
xor
cmc
push
sub
pop
sub
pushf
incl
push
icebp
addl
fwait
imul
xlat
aad
orb
dec
jb
ret
sbb
mov
dec
lret
fstl
push
loopne
sarl
sbb
cmp
mov
mov
lea
daa
dec
mov
xlat
sbbb
fdiv
stos
pop
lcall
mov
mov
mov
add
and
lahf
mov
pop
sbb
popa
test
pop
jg
fwait
jmp
and
lea
inc
cmp
cmp
add
add
ret
dec
es
cmp
leave
cmp
pop
jecxz
dec
mov
pop
cmpsb
push
jg
outsb
mov
movb
rcrb
xchg
and
movsl
push
push
xor
addl
out
and
aad
popf
adc
lahf
mov
or
hlt
push
cmp
jb
mov
xor
xor
test
and
push
ja
roll
out
fs
out
test
xor
cmpsb
out
imul
das
xchg
mov
push
jb
add
pop
xchg
pop
cmpb
adc
outsb
and
popa
mov
fwait
into
addb
sub
jle
lds
dec
icebp
sub
andb
and
enter
leave
jnp
mov
fisttps
lret
rorl
jo
js
adc
xchg
cmp
in
test
loope
pop
dec
icebp
xor
mov
fwait
aad
mov
addl
mov
push
sbb
dec
lcall
sti
icebp
test
ret
dec
leave
cltd
xchg
addl
lods
addb
mov
jae
xor
xor
xorb
inc
into
inc
push
adcb
aaa
lods
adc
cld
lds
pop
pop
or
int3
add
mov
out
fcomp
loop
cmp
dec
adc
cmp
or
shlb
inc
dec
outsl
mov
xchg
jbe
mov
fbld
or
pop
je
in
rcrl
jno
xor
pop
add
pop
xchg
jp
xor
jb
test
dec
inc
xorl
mov
jle
aam
ficoms
cli
cmp
aam
push
dec
gs
push
cld
mov
cltd
mov
sti
mov
shlb
mov
ja,pt
jp
dec
add
arpl
sub
mov
lahf
cmpl
adc
out
jae
mov
pushf
inc
out
sbbl
shlb
mulb
pusha
pop
mov
movsb
adc
imul
dec
ja
cmp
les
cli
pop
add
lods
inc
and
int
stos
iret
or
push
add
cli
push
jo
pop
pop
test
adc
mov
ret
lahf
sbb
imul
xchg
repz
xchg
xorl
dec
or
push
js
lds
lcall
les
add
fsubr
sub
test
inc
xor
fs
test
jb
daa
adcb
jmp
xchg
roll
push
mov
arpl
pop
sbb
enter
mov
daa
mov
lods
scas
enter
push
and
lcall
sub
jl
cmp
sysexit
psubw
jno
scas
shll
in
or
ret
cmpsb
xchg
add
jmp
loopne
mov
inc
or
test
scas
or
insl
aaa
test
ret
and
jmp
dec
jle
stos
jge
sbb
jnp
mov
mov
dec
outsl
sbb
rcl
mov
cmp
jmp
mov
jl
enter
outsb
mov
sbbb
mov
adc
insl
test
inc
or
lret
cltd
and
popf
outsl
cmp
aad
lods
ljmp
mov
sub
mov
out
pop
or
in
add
je
ret
cmp
imul
push
xor
sub
mov
mov
sti
inc
enter
or
aaa
adc
mov
cmp
int
sbb
pop
inc
adc
mov
add
push
jo
sbb
fiadds
stos
inc
and
pop
dec
mov
das
push
push
mov
ret
and
mov
mov
pop
sub
push
or
jo
pusha
add
in
loopne
mov
stos
or
push
sub
pushf
xor
push
jle
and
xor
inc
ja
sub
mov
notb
sbb
mov
aad
sbb
outsl
mov
jmp
mov
les
in
xchg
movsl
bound
sub
push
push
aaa
jb
inc
rcrb
dec
sti
mov
sub
pop
ss
mov
jle
cmp
in
loopne
leave
push
pushf
or
aam
mov
and
inc
xchg
scas
push
popf
mov
lret
or
push
sahf
andb
sub
aaa
stos
pop
gs
subb
inc
add
adc
push
adc
xchg
cmpsb
jecxz
inc
js
std
adc
jge
arpl
cli
or
and
setno
dec
sbb
dec
push
aam
hlt
fdivr
lret
cmc
mov
lods
aas
aam
adc
cwtl
in
and
leave
arpl
xor
sahf
xchg
punpcklbw
imull
add
mov
stos
mov
push
pop
pop
aaa
cmp
jge
dec
xor
mov
adc
and
or
adc
xorb
cmpb
js
or
or
sub
scas
out
add
fists
cmpb
add
push
adc
mov
mov
cmp
sbbb
pop
jl
mov
ds
shll
cmp
into
xor
mov
or
in
adc
jo
out
cltd
jmp
orl
enter
dec
xchg
mov
xchg
test
mov
add
pusha
daa
lods
fmuls
addr16
add
adc
push
sbb
in
sti
cmc
pushf
jmp
sqrtps
sub
dec
mov
add
out
adc
mov
mov
lcall
mov
jl
push
stc
out
sbb
rclb
sbb
mov
push
or
data16
xor
int3
cli
dec
cmp
adc
test
rcrb
add
insb
subb
dec
adc
sbb
and
iret
in
cwtl
xchg
leave
adc
pop
popa
xor
adc
dec
je
loopne
roll
push
inc
dec
sub
or
aam
les
jno
xchg
dec
daa
pusha
sub
adc
jbe
mov
adc
cltd
sub
push
or
mov
cmc
push
inc
pop
mov
add
mov
inc
lods
xor
pop
filds
into
add
cmpsb
xlat
pop
cmpsl
stos
ljmp
insl
adc
std
pushf
add
lea
or
adc
loope
js
xor
into
inc
jne
pusha
cmpsb
fwait
jae
xor
dec
addr16
ret
call
iret
inc
pop
dec
sub
mov
sbb
loopne
pop
or
mov
add
lahf
movsb
adc
mov
mov
add
and
inc
xor
mov
daa
je
jno
das
aam
rolb
ret
add
sub
sti
sub
add
test
popf
fiaddl
test
cmpb
stos
jno
scas
test
movl
xchg
ret
sbb
adc
lret
inc
adc
lahf
pushf
dec
mov
dec
test
jmp
jo
je
and
popa
leave
jmp
movsl
mov
xchg
ja
outsb
pushf
les
cld
xchg
cmp
push
mov
push
cmp
cmp
popa
jae
or
inc
sbb
adcl
jno
fwait
and
sahf
fcomps
pop
inc
ljmp
mov
clc
out
lret
push
cmpsb
fcomps
rol
ret
dec
ret
add
movsb
xor
pop
push
mov
test
insb
mov
sti
daa
mov
pop
test
jno
jle
and
jmp
dec
in
add
mov
xlat
push
mov
cld
xchg
mov
int3
inc
pop
mov
ffree
ss
insl
xor
sub
pop
xchg
pusha
jge
cmpl
sahf
aaa
push
add
jns
push
mov
push
adc
cwtl
in
outsl
cmp
and
xor
cmp
lret
add
negl
jecxz
cmp
or
fildl
sarb
cs
mov
lods
jecxz
ss
dec
sbb
xchg
and
js
pop
enter
movsl
xchg
pop
popf
mov
adc
mov
xchg
repz
pop
sub
scas
iret
mov
in
imull
pop
push
inc
add
sub
cmp
call
xor
adc
and
and
cmc
sbb
je
pop
add
lret
insl
push
int
inc
js
adc
movsl
orl
inc
popf
pusha
dec
fistpll
sub
or
aas
mov
push
sbb
loopne
cmp
cmp
test
sahf
mov
in
movsb
ja
shlb
push
add
pop
hlt
and
call
inc
rorb
or
adc
and
push
and
outsl
pop
popl
and
mov
mov
fistpl
xchg
add
je
lods
out
push
inc
enter
jp
stos
loopne
test
jns
lcall
cld
shll
or
shrb
cmovge
push
jge
fldenv
mov
mov
in
dec
sub
cmpsl
mov
mov
cmp
and
mov
adc
dec
loope
test
data16
aad
adc
push
lock
pop
push
ret
or
movsb
push
pushf
or
stos
sub
addr16
jge
jmp
lods
lahf
jmp
call
and
ret
ljmp
pop
in
dec
lea
sbb
lret
add
fiaddl
and
mov
movsw
dec
cmpsb
pop
sub
aam
inc
mov
cmp
pop
xor
pusha
or
scas
ldmxcsr
mov
test
sub
lds
cmc
lds
dec
xchg
or
sub
lea
mov
xor
fdiv
dec
test
dec
xlat
loopne
jae
rorl
adc
lods
and
xor
sarl
lahf
xchg
push
lods
adc
rcl
mov
jae
xor
mov
roll
jecxz
ja
and
cmp
fwait
push
dec
push
push
mov
sbb
inc
pop
sub
enter
das
movsb
xor
adc
push
mov
icebp
icebp
pop
lods
sbb
or
inc
sbb
imul
movsl
xchg
mov
fisttpl
cmp
pop
das
jmp
mov
dec
ds
shrb
add
jmp
loope
mov
pop
dec
inc
in
add
and
push
pusha
lcall
and
loope
je
insb
das
sbb
add
inc
dec
out
and
jg
xchg
mov
loope
inc
sub
subb
sub
push
xchg
push
push
fwait
jo
sub
mov
rcl
cli
cs
and
cmp
xchg
ret
push
je
sarb
add
shrb
sub
jge
rclb
pop
mov
jl
aas
scas
inc
sub
movsb
call
pandn
pop
daa
ret
xor
sub
ffree
add
and
inc
push
mov
sbb
push
cmpsl
test
mov
ret
adc
test
push
xor
sbb
mov
divl
pop
adc
xor
insl
sbb
push
ljmp
jae
popa
add
inc
xchg
or
stc
xchg
insb
jbe
or
jmp
mov
lcall
mov
inc
adc
movsl
add
lea
xchg
test
dec
hlt
mov
sub
sub
jae
sbb
add
mov
jp
ret
adc
mov
cmp
pop
in
mov
clc
test
dec
fdivs
int
orb
loop
adc
movsb
inc
scas
fwait
add
lahf
sbb
arpl
test
sub
fisubrl
xor
sbb
shrb
jne
scas
cmp
enter
push
sub
test
rclb
or
push
or
push
addr16
xorl
push
jp
mov
xor
add
ret
lret
jo
mov
lret
pop
test
rol
jecxz,pn
das
push
mov
add
mov
sbb
pop
or
lahf
cmpsl
pop
dec
sbb
in
mov
cmc
sbb
and
push
out
pop
fwait
daa
ljmp
into
rorb
mov
pop
addr16
xchg
scas
arpl
sbb
mov
ja
shlb
sbb
jns
jmp
dec
xchg
dec
jg
cmc
lds
xor
pop
push
sbb
and
xchg
add
jo
mov
cmp
adc
add
dec
and
fadds
inc
mov
dec
cli
and
mov
or
xchg
scas
loop
jl
and
into
sbb
adc
loopne
pop
das
xlat
mov
pop
stc
mov
xor
outsl
mov
add
dec
lock
decl
clc
dec
sub
lods
in
les
adc
fdivl
jo,pn
or
lock
push
mov
jecxz
loop
jl
push
stos
or
arpl
rolb
or
iret
pop
pop
pop
les
pop
loope
push
pop
notl
arpl
aad
cmpsl
or
shrl
aas
gs
pusha
lret
ret
into
pop
dec
pop
add
mov
sbb
add
or
orl
or
ljmp
and
push
lret
rorl
rep
ret
adc
lret
mov
gs
stos
aas
pop
inc
sbb
sub
insb
dec
sti
leave
mov
add
sahf
fwait
orl
pop
insl
mov
add
loopne
or
lods
pop
lahf
lds
mov
gs
mov
jbe
imul
ret
fildl
sbbl
inc
ja
xlat
icebp
push
mov
cmp
in
mov
data16
xlat
sub
rcrb
mov
outsb
std
xchg
dec
xchg
cltd
test
and
adc
inc
xchg
xor
xchg
and
mov
mov
test
jg
or
xor
out
push
pop
loopne
out
mov
pop
leave
enter
fdivrs
add
and
pop
xchg
stos
adc
dec
jne
aaa
call
fs
nop
adc
lcall
xchg
jno
icebp
adc
pop
fisubrs
or
sbb
inc
js
pop
test
sbb
mov
xor
popf
test
cwtl
jmp
loope
pop
or
cmp
cmpl
mov
jl
add
mov
inc
test
cmpsb
insl
jnp
pop
sbb
fs
inc
fistpl
bound
notl
lods
test
adc
jl
jnp
mov
ret
sti
ret
push
and
cmp
ret
popf
pop
iret
shlb
lret
jb
daa
pop
and
lods
daa
add
pop
stos
rol
sub
fsubl
xor
inc
sub
or
push
ljmp
loope
sbb
pop
and
ljmp
inc
iret
jge
fwait
gs
jae
cmp
out
cltd
cmp
mov
jne
divl
iret
mov
pop
test
mov
xor
and
sbb
leave
push
xor
mov
and
xor
jecxz,pn
sbb
sbb
sbb
cmp
pop
cmpb
clc
jecxz
xor
ss
or
ja
pop
sti
mov
cmp
jl
shl
xchg
je
fistps
fistl
xchg
xor
mov
sarl
pushf
jge
cmpsb
into
repz
jmp
aas
push
jecxz
push
stc
mov
adc
iret
xor
mul
sti
popa
in
pop
sub
lea
sahf
and
ss
or
jp
repz
mov
inc
adc
push
inc
sub
jns
mov
adc
push
pop
push
test
inc
and
push
sub
push
lret
outsb
gs
jmp
jge
orb
pop
push
sub
imul
inc
cmpsb
dec
add
sub
xor
dec
or
dec
mov
adc
fwait
out
in
notl
mov
add
call
mov
xchg
xlat
cmpsl
add
lahf
stos
imul
sti
cmp
cmp
and
or
mov
jb
clc
cli
push
imul
pop
sub
repz
adc
jmp
fstpl
dec
mov
mov
add
fmuls
jnp
fdiv
lret
mov
rcrb
cld
repz
rorl
or
adc
inc
popa
ret
jo
negl
shll
mov
iret
mov
jnp
push
cld
lods
daa
js
pop
add
pop
mov
aaa
out
add
scas
rep
dec
daa
add
or
mov
mov
pop
test
sahf
adc
dec
jg
imul
pop
outsl
insb
mov
sub
sub
ja
ja
sbb
ficompl
pop
test
pop
inc
out
dec
ljmp
ret
dec
ja
ret
outsl
inc
das
in
jns
add
aas
push
mov
sbb
inc
fiaddl
xor
loopne
sbb
add
lods
adc
push
or
ret
mov
das
xor
shl
adc
loope
xlat
lcall
cmp
rorb
cmp
fst
add
sbb
aaa
push
adc
mov
divl
pop
push
dec
mov
cli
js
sbb
sarb
iret
ss
and
pop
js
ret
sbb
jge
shll
insl
sub
xchg
fs
cmpl
and
stos
roll
popf
ficoms
js
jb
jb
lahf
rcrb
xchg
inc
mov
add
cmp
adc
subb
cli
add
mov
adc
mov
and
arpl
sbb
repnz
xchg
push
cmp
add
add
xor
mov
fistpll
in
sbb
rcll
mov
in
push
stos
addr16
adc
push
in
daa
das
movsb
cli
adc
inc
jne
pop
sub
pusha
and
mov
repnz
aas
rcrb
lods
stos
jp
das
sub
cmp
push
add
jnp
inc
into
adc
inc
pop
add
sub
jge
push
xor
pop
ljmp
sti
xchg
mov
dec
mov
sub
cmp
int3
sbb
ret
jb
jae
les
rcrl
lods
push
cmpxchg
add
imul
jnp
daa
das
das
or
push
addr16
les
mov
mov
jecxz
mov
xchg
lock
cmp
mov
mov
dec
call
rolb
push
dec
fbld
sub
inc
aaa
addb
add
add
dec
fcmove
lcall
and
xchg
test
lods
or
mov
xlat
mov
lods
xchg
pop
cmp
dec
clc
mov
hlt
daa
cmp
ret
shlb
aaa
mov
push
pop
into
dec
mov
sub
push
scas
sub
push
ds
imul
test
add
movsb
movups
mov
js
inc
imul
loop
sub
sub
sub
rolb
lldt
mov
pop
aad
scas
inc
ja
and
sbb
push
cmpsb
out
cmpsl
pusha
sub
sub
mov
jae
mov
lahf
inc
xor
or
jl
sbb
lea
repz
xor
add
push
mov
pushf
jae
lret
adc
or
test
sbb
scas
mov
enter
push
push
inc
subb
fidivrs
mov
int
fs
aaa
lret
rolb
xchg
inc
mov
dec
inc
push
mov
dec
fadds
ret
lret
cmp
out
jl,pn
ss
jl
ljmp
sub
lock
mov
xor
sub
fidivrs
cmp
or
sub
or
add
pop
and
arpl
fnstsw
and
inc
sub
lcall
add
popa
pop
lea
jle
outsl
lock
movsb
pop
push
idiv
or
pop
in
mov
jp
jecxz
popl
mov
jge
push
inc
lcall
mov
cld
mov
pop
adc
adc
pop
sbb
xchg
mov
xor
inc
fwait
and
aad
ja
ss
or
shlb
popf
cwtl
sub
idivl
sbb
sbb
ss
rol
add
out
jae
orl
jne
jns
cs
mov
jl
sbb
aas
sub
and
cwtl
mov
push
dec
jo
pop
stc
jecxz
pop
push
cli
xchg
jl
popf
ret
adc
cmp
add
xchg
inc
rcrb
dec
dec
cmp
jp
aas
xlat
jnp
es
xor
sub
sbb
out
add
push
xchg
test
sbb
sub
addr16
xchg
add
rol
push
scas
lea
mov
jo
aam
cmpsl
adc
xor
popf
mov
popa
aam
mov
and
daa
sbb
gs
mov
mov
pop
pusha
int3
sub
popa
mov
xchg
inc
ret
xlat
push
jno
mov
sub
mov
ret
or
xchg
and
push
lret
pop
push
mov
mov
xorb
loope
cmp
out
dec
iret
js
outsl
pop
cmovno
sbb
adc
arpl
mov
mov
inc
push
mov
xchg
int
loopne
loope
sub
mov
push
or
fiadds
test
sub
push
mov
mov
shrb
adc
stos
mov
inc
mov
repz
inc
sub
mov
stos
loop
mov
mov
lods
push
fcmovnu
add
jb
jno
cmp
push
cmp
push
xorl
and
dec
mov
xchg
stos
dec
fmuls
or
xor
dec
std
ljmp
sahf
shr
fidivrl
xor
test
mov
rcrl
cmp
insb
cmpsb
jo
test
aad
stos
add
cmp
sub
lcall
loope
jl
mov
addr16
mov
sub
jp
pop
inc
jno
inc
test
add
lea
mov
ret
cmp
inc
or
adcl
inc
jno
test
add
das
gs
add
iret
mov
inc
in
jo
in
pop
outsl
fmull
or
and
clc
adc
push
movsl
daa
pop
ret
ret
testl
adc
lock
cmp
mov
and
lock
iret
jb
adc
pop
push
push
in
icebp
mov
ss
and
and
lock
xchg
dec
add
sbb
repz
mov
xor
lods
mov
enter
pop
mov
outsb
add
add
or
add
and
loope
lsl
or
scas
xor
jl
dec
pop
dec
adc
orl
ret
or
inc
cmp
or
dec
cmp
cs
int
movsb
xor
imul
ds
push
aaa
xchg
dec
stos
sub
jecxz
orb
data16
aaa
xor
mov
rcll
add
addb
outsb
std
insl
inc
jbe
imul
dec
dec
push
loop
and
clc
or
imul
cmp
sub
lds
std
xchg
test
mov
sub
push
lret
mov
cmp
add
pop
adc
adc
add
jle
sub
adc
inc
or
subb
leave
ljmp
dec
mov
push
sbb
push
out
sub
add
out
lret
add
xchg
pop
inc
fistpll
lds
jge
or
xor
cmpsl
jmp
cmp
cmp
cli
ret
fildl
sbb
fucomi
outsb
aam
movsl
inc
xchg
xchg
push
or
sbb
movhps
lret
sub
mov
add
aas
and
cld
push
push
call
mov
jecxz
fbstp
nop
jge
popa
cld
jae
es
adc
int3
sub
jl
xor
xor
pop
jo
clc
sti
xchg
xor
xor
test
push
aad
dec
jmp
xor
fcmove
cmp
lock
mov
jmp
fistpl
ret
inc
mov
lret
cmp
mov
mov
cmpsb
gs
push
push
pop
cmp
add
xlat
gs
push
or
cs
sub
lock
mov
push
das
mov
das
test
aas
cmpsb
ss
ljmp
sub
add
add
clc
out
imul
iret
adc
or
rclb
andb
add
push
addr16
rcrb
cmc
add
push
scas
stc
push
inc
int3
aam
sub
outsl
jecxz
push
mov
push
imul
ret
mov
pop
push
sub
hlt
insb
mov
jns
jbe
pop
mov
push
dec
repnz
cmpsl
in
xchg
inc
pop
push
jns
movsl
pop
mov
cmp
call
mov
add
adc
mov
scas
mov
dec
daa
outsl
bound
mov
pop
pop
push
popa
and
and
adc
jb
adc
and
lret
leave
xchg
sti
xor
and
and
mov
cmp
ret
sub
mov
rcll
shll
ret
mov
movsb
or
sbb
xor
fwait
mov
adc
mov
push
jecxz
rcr
push
pop
xor
loope
sbb
lods
xchg
add
sub
inc
push
pop
inc
imul
mov
fnsave
mov
jno
gs
out
sub
inc
mov
jecxz
pop
xor
push
int
test
cmpsb
or
push
aaa
mov
icebp
test
dec
lcall
gs
ret
nop
lock
ret
jno
push
dec
outsb
lock
mov
xchg
movsl
xlat
or
sbb
test
and
fimull
outsl
insb
xchg
pop
jno
pop
and
cmp
out
mov
adc
inc
pop
xor
mov
add
adc
lods
pop
jle
movsl
data16
inc
inc
adc
sbb
xchg
test
and
test
xor
xor
xor
and
xor
cmp
es
ret
stc
das
stos
and
and
int3
sub
idivl
ret
cmpsb
pop
cmp
inc
or
jne
mov
cmp
push
dec
sbb
sub
sbb
push
mov
xor
sbb
dec
sbb
add
jecxz
mov
adc
mov
jno
mov
mov
and
sbb
mov
int3
rcrb
xchg
pop
hlt
ja
adc
ret
rol
jo
mov
cmp
pop
or
sbb
jmp
loope
push
pop
mov
ds
sub
mov
pop
jmp
out
add
jnp
mov
cmpb
stos
xchg
loopne
shrb
sub
fcoms
enter
or
aaa
jg
xor
mov
jmp
insl
sub
adc
xor
dec
std
loope
ret
imul
sub
insb
inc
cmp
loopne
pop
lock
cmp
sub
int3
ret
or
dec
in
dec
and
or
xchg
adcl
arpl
mov
mov
ror
test
xor
repz
push
jae
jl
or
add
es
push
or
sub
xor
ret
mov
dec
xlat
and
aad
aam
pop
roll
dec
stos
add
popf
les
out
test
xlat
mov
xor
add
lcall
add
add
sbb
xlat
pop
lock
xchg
or
adc
pop
xchg
mov
shll
sbb
ret
je
sbb
fcoms
adc
cmp
shll
pop
in
xchg
or
test
mov
jo
adc
sub
ljmp
adc
mov
pop
add
sub
dec
push
jl
add
scas
addr16
cmp
mov
push
jecxz
cmpsl
jecxz
or
cmp
shl
push
mov
shl
mov
push
adc
inc
inc
add
mov
sub
xor
outsb
cwtl
add
ret
push
push
sub
out
mov
inc
sub
jo
scas
adc
push
lret
call
leave
cmp
outsl
sbb
add
mov
adc
imul
adc
pop
xor
or
testl
lods
cmpsb
in
xchg
add
mov
jne
js
rol
jmp
icebp
pop
sbb
xchg
sbb
das
xchg
jns
push
mov
cmp
sbb
xor
mov
mov
cmp
daa
ss
iret
sub
mov
in
subl
dec
sbb
lock
jne
ds
ds
sbb
fisttps
ds
daa
or
xorl
pop
or
pop
in
loopne
push
push
syscall
das
les
sbb
push
push
sti
jp
inc
push
and
sarb
pushf
jnp
out
jecxz
lock
scas
jecxz
pop
scas
cmpsb
testb
hlt
add
lahf
xchg
jae
negl
subb
cs
bound
add
pop
movsl
jnp
inc
xlat
and
cs
cmp
rol
adc
lods
les
jne
es
lods
outsb
cmp
or
jecxz
in
cmpsb
add
lahf
lock
loope
jecxz
pop
or
clc
adc
and
mov
adc
jne
sbb
adc
adc
test
out
xor
adcb
jp
leave
lds
lods
and
mov
movsl
adc
xor
sbb
sbb
pop
mov
stos
cmc
xchg
pop
test
pop
inc
pusha
loope
push
mov
push
pop
aam
xor
out
or
sub
movsb
lds
cmp
mov
sub
push
xchg
mov
cmp
adc
test
pusha
repnz
add
test
push
adc
das
dec
cmp
push
iret
mov
inc
push
shlb
xor
loopne
mov
mov
decl
adc
mov
js
cs
xchg
sbb
jecxz
pop
stos
mov
mov
es
sub
jecxz
flds
push
xor
imul
jmp
js
add
xor
xchg
test
mov
shlb
stc
or
fisubrl
flds
aaa
sub
mov
cmp
in
push
pop
dec
test
scas
nop
add
mov
movsb
jne
aaa
push
shl
xchg
bound
dec
mov
lea
sub
mov
loopne
cs
adc
mov
cmp
shl
dec
jecxz
mov
sub
out
or
sub
hlt
sbb
push
push
ret
add
lods
or
mov
jmp
sub
push
imul
sbb
test
or
les
push
add
ja
jnp
cmp
adc
push
out
mov
inc
imul
pop
dec
inc
and
and
mov
and
mov
loopne
sub
aad
push
pop
cmpsb
or
or
cmp
repnz
stos
scas
add
push
mov
and
sbbl
inc
outsl
or
push
fiadds
ds
ret
fwait
xchg
pop
jae
sbb
jp
and
xchg
add
mov
ret
ljmpw
stc
xor
adc
orps
test
stos
mov
inc
outsl
arpl
addb
inc
mov
xorl
mov
xchg
sbb
jmp
data16
xor
jle
jmp
outsl
stc
movsl
xchg
ret
fisubl
insb
push
rcrb
add
pop
scas
sti
arpl
jo
adc
out
cmp
add
das
mov
dec
in
fnsave
iret
push
pop
inc
in
xchg
jmp
add
popa
push
adc
or
cmpsb
outsl
push
or
fucomi
pop
or
adc
jns
dec
jo
adc
mov
movsl
xchg
xor
push
push
nop
popa
sbb
popa
mov
roll
sbb
adc
lea
xchg
inc
ret
inc
cmp
push
or
dec
push
xchg
jge
sbb
test
sbb
add
add
daa
js
cmp
repnz
adc
pop
lods
cmpsl
dec
xor
test
and
sti
jmp
xchg
andl
shlb
or
mov
or
out
andb
xor
lods
adc
mov
fstl
sub
pop
and
pusha
cmp
cltd
sbb
or
pop
popf
lcall
fistpll
sub
adc
sbb
add
call
roll
dec
insl
xchg
cli
and
or
xlat
ljmp
xchg
lret
jecxz
inc
jne
imul
clc
sub
std
mov
and
in
cmpsl
cltd
call
push
or
lcall
and
push
lods
jp
pop
add
cltd
insb
cli
popf
idivb
movsl
jge
sbb
cli
jne
addr16
loope
jle
and
stos
xchg
dec
dec
mov
aad
jns
push
sub
cmp
scas
in
jge
aad
xchg
push
inc
ss
hlt
add
pop
imul
xchg
xor
orl
push
push
icebp
mov
pop
mov
or
sbb
fmuls
stos
adc
js
int
js
mov
adc
pop
and
loope
sub
xor
leave
sarl
jnp
xchg
mov
push
sbb
aaa
sbb
call
ljmp
jnp
es
inc
add
lret
or
push
mov
scas
sbbl
filds
add
mov
inc
push
ret
sub
fdivl
pop
jne
pop
in
aad
ds
icebp
sahf
xchg
jmp
fdivs
shll
fs
dec
add
mov
scas
sti
pop
das
or
addr16
sub
add
or
lods
aad
add
add
faddl
sbb
shlb
mov
adc
out
shlb
pop
es
clc
push
pusha
sbb
inc
es
sbb
jmp
fiadds
jae
lock
sub
and
or
imul
cwtl
outsb
mov
fwait
adc
pop
add
ja
jmp
ficoms
adc
mov
pop
adc
orl
push
testb
mov
lahf
and
pop
fmuls
lret
inc
jmp
mov
sbb
mov
jge
mov
push
popf
scas
cmpsb
pandn
pop
cmp
jp
add
xchg
adc
mov
mull
call
orb
xchg
shr
aas
js
loop
xchg
and
inc
push
fimuls
hlt
xor
enter
adc
int3
loopne
cmp
cld
push
add
in
xor
ljmp
test
ret
pop
xchg
out
loopne
push
jno
sbb
pop
imul
adc
cmp
cmp
add
inc
cmp
xchg
ficoml
sub
fabs
xchg
cld
and
das
add
push
jb
mov
pop
jecxz
sub
nop
icebp
out
addb
sub
icebp
test
add
lods
mov
adc
js
jns
mov
adc
ret
mov
and
fwait
aas
popa
and
cs
rolb
jge
sbb
dec
mov
lahf
jno
int
mov
and
sub
addr16
xor
add
dec
jae
sub
pop
sbb
fldl
mov
or
jl
imulb
gs
and
dec
cmp
ret
loopne
mov
lock
scas
sub
sbb
jg
out
ret
in
cvtps2pi
add
and
adc
xchg
icebp
ds
in
outsl
mov
das
pop
pop
adc
ret
filds
jnp
testb
ret
cmp
lret
cmp
or
mov
xchg
push
mov
insb
add
and
daa
ljmp
mov
es
andl
pop
scas
sub
test
pop
adc
int
lds
insb
dec
adc
mov
xchg
call
scas
xor
add
movsl
pusha
add
imul
das
mov
mov
sub
jo
aam
or
fildll
push
ret
ficomps
imul
cmp
outsb
pop
iret
push
divl
sub
stc
out
sbb
inc
cmpsb
repz
inc
movb
xor
pop
shl
repnz
test
js
cmp
notl
jno
pop
pop
fistps
xchg
inc
outsl
jmp
lock
xor
cmp
cmp
rclb
fimull
or
arpl
adc
movsb
xlat
dec
sbb
xchg
in
jno
or
lods
adc
es
clc
test
popa
cmp
in
loop
jg
inc
rcrl
or
mov
and
pop
aas
movsb
jmp
daa
or
jnp
cmp
adc
subb
mov
adc
pop
xor
add
cmpsl
daa
loop
movsb
insl
das
add
cmp
inc
push
jo
call
xchg
push
mov
cltd
inc
fstpl
xlat
pop
pop
inc
jmp
adc
mov
gs
mov
les
xchg
sub
out
insl
adcb
fs
cmpsb
dec
dec
shll
lds
cld
fwait
xor
sub
arpl
cmp
pop
fildll
rorl
add
arpl
shl
aam
xchg
aas
test
pop
mov
sub
scas
mov
sbb
push
rol
sub
ret
enter
xchg
jbe
push
sbb
int
int
cwtl
inc
dec
jmp
push
in
xor
pop
jb
in
mov
movsl
in
push
pusha
jne
sbb
das
ret
mov
call
sub
daa
sarl
das
sub
gs
ret
add
sarl
pop
add
in
pop
movsl
shll
das
insl
cmpsb
push
roll
mov
sub
inc
adc
xor
mov
inc
xor
xor
fisttpll
xor
sub
inc
je
sbb
das
test
shlb
loopne,pt
xchg
mov
outsl
movnti
repz
mov
ja
je
add
fwait
ret
icebp
push
dec
mov
adc
leave
sub
add
push
insl
iret
dec
aad
or
xchg
mov
mov
imul
mov
jns
add
xchg
gs
int
cmp
lret
jne
mov
mov
es
test
stos
mov
ja
das
test
add
stos
push
shlb
adc
jp
pop
jmp
pop
roll
ficoms
cmp
shlb
dec
ja
jno
and
js
mov
push
loope
mov
adc
dec
or
cmpb
stos
shll
fnstcw
in
pop
dec
lock
shlb
mov
mov
pop
mov
push
push
mov
outsb
je
adc
xor
in
mov
xor
enter
inc
adc
out
ficoms
mov
mov
push
in
stos
hlt
push
jge
and
mov
mov
and
aaa
cmp
ja
add
andb
lret
lahf
pop
test
inc
in
xor
xchg
data16
aas
pop
divl
adc
lcall
jge
add
popf
push
cmpsb
or
out
jne
inc
mov
test
rolb
push
dec
jne
jp
xchg
add
das
adc
sbb
mov
cmpb
stos
loop
dec
mov
add
pop
sub
pop
add
xor
lock
jnp
xchg
inc
repnz
rolb
bound
push
xlat
pop
sbb
mov
insb
dec
rorb
inc
fbld
mov
imull
cmp
push
add
pop
and
pop
cmp
push
loopne
or
movsb
jbe
scas
scas
ss
test
sub
adc
inc
or
add
loope
jge
call
shll
lret
std
add
ljmp
push
jo
or
emms
cwtl
adc
ss
inc
mov
push
mov
notb
push
cmp
cmp
sahf
sbb
int
sbb
das
shll
mov
ss
lahf
cmp
fs
adc
xchg
dec
lcall
std
mov
test
lcall
loop
aam
jbe
xchg
pop
rcr
popl
add
xlat
stos
in
dec
jge
pushf
cli
pop
mov
lret
add
data16
add
lods
out
pop
sbb
ljmp
das
adc
push
incb
scas
adc
jge
clc
mov
jle
or
sub
mov
stc
cmp
popa
icebp
inc
cmp
dec
xchg
shl
aaa
cmc
mov
sar
cmp
stc
jle
ljmp
js
sbb
js
sub
mov
nop
imul
jns
push
mov
or
hlt
inc
scas
loope
test
sbb
faddp
xchg
les
xor
inc
xchg
pushf
adc
int3
cmp
mov
mov
rorb
lods
shrl
sbb
sbb
cli
adc
mov
push
mov
rclb
inc
lret
adc
sub
test
and
and
sarb
inc
cmpsb
pushl
imull
mov
adc
clc
sbb
pop
stos
mov
pop
repnz
pop
cmp
cmp
jno
mov
xchg
jns
adc
jae
sub
aaa
rcll
sarl
fildl
daa
mov
repnz
loopne
mov
ret
fists
gs
xor
cmp
adc
in
jecxz
and
aas
in
test
inc
jg
cmp
add
aam
ret
scas
xchg
sets
xlat
adcb
jge
and
push
dec
data16
js
cmc
add
adc
int
imul
and
and
stos
mov
xchg
add
pop
cmp
mov
out
js
out
pop
fimull
mov
inc
push
push
pop
inc
mov
adc
or
jg
das
shll
cmp
and
cmp
aad
push
pop
xchg
aaa
or
enter
dec
xchg
push
addr16
call
xchg
adc
add
pop
pop
sbb
call
or
xchg
mov
mov
in
mov
xchg
dec
mov
cmpsb
sbb
neg
shrl
repz
sub
bound
jp
cmpsb
popf
outsl
ret
addr16
cs
cmp
and
stos
out
add
fs
addb
sub
call
rcrl
push
add
pop
xchg
cmp
or
sbb
and
xor
inc
xlat
fistl
cmp
sbb
jmp
movsb
stc
in
insb
mov
arpl
cld
insl
xor
cmp
xchg
push
inc
scas
ja
inc
mov
lret
xor
adc
in
stc
cmp
js
cmp
mov
das
mov
mov
js
insb
pop
sarl
out
mov
mov
out
add
xlat
dec
pop
scas
shll
jb
pop
push
fdiv
ret
dec
lea
add
std
addr16
mov
loop
sbb
xor
ffreep
pop
test
push
call
adc
xchg
imul
arpl
daa
dec
filds
out
inc
and
jbe
mov
or
sbb
faddp
flds
js
add
hlt
icebp
and
push
dec
fidivl
xlat
test
outsb
std
movsl
mov
or
les
and
rcr
sub
or
cmc
ret
outsl
mulb
ror
dec
int3
and
repz
sbb
mov
push
push
mov
add
mov
outsb
add
hlt
mov
and
and
fstpt
lods
add
or
sub
je
mov
xchg
jl
add
jmp
mov
xchg
add
and
sbb
cmp
jae
mov
rorb
adc
jmp
pop
inc
dec
mov
rcrl
pop
push
push
lock
into
rorl
xorb
sbb
sbb
sub
aas
fwait
outsb
xlat
jmp
and
rcll
pop
mov
icebp
add
roll
jge
icebp
adc
ljmp
xor
sub
cmc
movsb
xor
or
outsl
sub
lock
ss
and
push
test
loopne,pn
push
mov
inc
inc
cmp
push
or
or
add
pop
pop
scas
pop
add
sbb
jg
mov
adc
xchg
in
popf
das
call
cmp
cli
dec
dec
aad
cld
hlt
jo
mov
jge
cmp
mov
out
push
jo
in
aam
pop
cmp
mov
or
and
pop
xchg
jno
inc
outsl
lds
jo
mov
pop
jb
xor
add
cmp
je
popa
jle
sahf
pop
push
pop
lock
pop
test
repnz
mov
adc
cmp
cmp
clc
push
push
xor
or
or
lret
aaa
jmp
xor
data16
insl
aam
xlat
outsl
fnstsw
gs
dec
add
mov
aas
sub
sbbb
mov
aam
sbb
sub
sub
push
out
jmp
rorl
cs
stc
popa
fnsave
das
aam
ret
adc
or
jbe
mov
mov
lock
ss
out
ret
inc
add
punpckhwd
mov
in
xor
les
stos
xor
or
pop
movsb
push
ret
test
fisttpll
enter
scas
sub
fisttpl
xchg
mov
movsb
inc
sub
add
fmul
movsl
inc
xor
lds
mov
xor
dec
mov
mov
or
push
xchg
or
sub
loope
hlt
pusha
int
popa
push
push
cmp
lock
adc
mov
outsl
call
movsb
enter
frstor
mov
loopne
js
mov
add
dec
inc
cs
add
movups
xor
test
cmp
orb
or
mov
sahf
mov
xor
dec
sub
push
inc
cmpsl
gs
jbe
test
sub
sbb
lods
mov
imul
scas
aas
cli
mov
or
aad
or
pop
popa
cmp
or
cmpsb
xchg
sahf
jp
dec
add
inc
paddsb
fpatan
or
xorb
stos
xchg
fisubs
cmp
loopne,pn
add
test
adc
repz
and
or
sub
test
cmc
nop
jne
sbb
xlat
xor
pop
or
pop
and
sub
mov
adc
xor
xor
xor
out
mov
xchg
icebp
xchg
pcmpeqd
and
lea
fldl
mov
fistps
xchg
jns
push
fcmovnbe
cmp
icebp
and
mov
mov
sub
xor
addl
bound
adc
pop
mov
sbb
fisttpl
cmp
mov
cmpsl
arpl
orl
ret
inc
jl
dec
cltd
xchg
pop
ret
pop
aam
dec
inc
fwait
mov
cmc
adc
fcmove
popa
xor
mov
cmp
cs
xlat
das
test
dec
fwait
push
adc
mov
test
add
shlb
enter
add
xchg
clc
adc
daa
mov
aaa
xchg
and
mov
adc
mov
lahf
adc
sbb
push
or
cmp
xor
mov
mov
sbb
aad
movsl
xchg
subb
jno
jo
imul
jecxz
mov
sbb
or
dec
cli
mov
mov
lret
inc
popa
or
xor
jo
xor
push
mov
les
xchg
icebp
cmp
sub
mov
scas
adc
sbb
mov
mov
pop
or
imul
hlt
aad
das
fimuls
lds
imul
xor
rorb
push
cltd
div
mov
jb
pop
lods
mov
inc
aad
outsl
icebp
movl
arpl
into
rorb
adc
add
jo
adc
mov
push
orl
fistpl
mov
lahf
add
mov
and
pusha
push
jmp
inc
adc
loop
insl
loopne
xor
pop
daa
jne
andl
push
filds
inc
movups
loopne
les
vcmpsd
shlb
js
mov
fucomip
adc
shrb
sub
scas
jecxz
fimull
sbb
add
xor
dec
dec
sub
sarl
aaa
push
mov
mov
std
sub
fisttpl
cmp
daa
mov
push
sub
and
lea
adc
mov
pop
test
jecxz
fwait
xchg
imul
outsb
cmp
inc
inc
stos
cld
jecxz
xor
or
lods
ret
scas
mov
cmp
jns
xchg
outsl
sbb
movsb
test
xchg
into
mov
ljmp
push
movsl
loopne
lock
in
inc
mov
mov
les
dec
xor
adc
sbb
xchg
cmp
stos
jnp
xchg
pop
cmp
xchg
add
add
mov
cmp
ljmp
push
lea
pushf
push
cmp
sbb
or
adc
pop
inc
pop
adc
and
iret
clc
adc
das
dec
push
or
test
fsts
out
bound
or
mov
divl
mov
jbe
popf
out
or
inc
cli
mov
adc
bound
sbb
fistpl
add
stos
xchg
mov
arpl
jg
or
in
call
mull
fstpt
movsb
negl
and
hlt
and
cmp
cmp
fisubrs
push
das
mov
test
mov
inc
add
sbb
push
sbb
pop
or
lods
out
ja
xor
int3
ret
pop
aam
fildl
and
jne
add
mov
mov
ret
addl
add
mov
jecxz
insl
aad
jp
and
sbb
or
mov
or
sub
arpl
insb
jbe
movb
jb
add
adc
aad
cmpsb
outsb
xlat
in
aam
mov
lcall
add
mov
icebp
or
sbb
sbb
mov
loope
pop
sub
pop
out
ficomps
out
pop
enter
or
mov
imul
inc
xor
shl
cmp
xchg
mov
add
cmpsb
add
inc
lret
pop
test
cmpb
popf
and
sti
stos
adcl
shrb
test
scas
mov
push
push
icebp
lcall
orb
mov
frstor
cmpsb
addb
js
inc
sbb
shll
fwait
sub
fmull
sub
pop
sbb
pushf
movsb
repz
shlb
lahf
jmp
insb
push
adc
inc
dec
aam
pop
sbb
and
daa
pop
add
ljmp
icebp
jno
mov
enter
sub
enter
mov
pop
push
adc
test
mov
cmp
enter
movsb
das
mov
adc
hlt
push
push
xchg
mov
sub
dec
add
push
lods
in
push
adc
mov
cwtl
lods
jo
inc
add
add
xchg
push
jp
xlat
insb
insb
test
out
inc
int
sar
or
enter
ja
int3
pusha
jne
xchg
push
inc
outsl
rorb
sub
push
aad
rep
add
je
pop
add
popa
inc
test
addl
daa
pop
sub
roll
std
cs
mov
cli
imul
jae
pushf
jno
pusha
jl
or
jns
mov
add
mov
pop
xchg
imul
mov
subl
mov
inc
mov
mov
sub
enter
pop
roll
or
add
movsb
mov
insl
je
int3
jp
mov
pop
fsubl
out
imul
mov
pop
ret
ret
and
adc
adc
cmp
jecxz
popf
jge
or
movsl
push
rcll
pop
mov
sub
inc
rcll
cli
out
sbb
mov
sbb
sbb
xchg
loope
cmp
add
mov
xor
xchg
sbb
add
shll
flds
pop
adc
movb
sbb
sub
pop
jecxz
push
push
pavgw
fnstsw
insl
and
mov
push
inc
dec
dec
movsl
xchg
xchg
jbe
rorb
add
mov
scas
xor
dec
adc
les
push
sbb
mov
mov
pop
insl
xor
pop
sbb
data16
jno
push
and
out
dec
or
push
xchg
mov
push
in
add
lds
in
or
lahf
test
xor
push
dec
idivb
mov
lods
fs
jnp
and
pop
ret
cs
idiv
sub
shlb
aam
icebp
out
lahf
or
sub
pusha
sub
enter
mov
add
push
sbb
addb
mov
popa
mov
mov
inc
sub
inc
in
ret
cltd
cmpsb
mov
notb
cltd
mov
jl
test
add
repz
push
ja
xlat
ret
dec
push
and
test
mov
fiaddl
in
push
or
push
mov
insl
mov
inc
mov
mov
insl
push
add
aaa
sub
fldenv
imul
or
daa
sub
dec
cmp
scas
cwtl
fildl
subl
rcrb
rcrl
cwtl
dec
push
and
pop
fisttpll
push
sub
arpl
daa
sbb
pop
ret
push
jae
daa
cmp
jecxz
cmp
addl
adc
cmp
sub
add
hlt
mov
js
test
inc
jmp
or
inc
add
mov
fnstsw
and
inc
jnp
xlat
in
jnp
loope
mov
aaa
or
inc
pusha
imul
mov
aad
jnp
sbbb
rorb
loope
push
adc
jnp
pop
rcrl
fsts
and
ret
mov
and
movsb
push
pop
mov
out
jns
sbb
pop
xchg
pop
push
mov
call
jecxz
mov
pop
outsb
pop
mov
mov
cmp
daa
rcrl
movsl
orb
outsl
adc
jge
in
pop
xchg
push
push
stos
insb
sti
aas
cli
push
dec
arpl
push
mov
add
jns
orl
sub
jne,pn
loopne
adcl
xorl
add
jl
lods
aad
sub
faddp
push
and
insl
hlt
mov
addr16
out
xchg
jns
repnz
mov
lock
xor
inc
mov
xor
stos
orb
push
call
test
sub
es
loope
sbb
je
lds
movb
inc
or
or
mov
mov
or
or
jge
dec
ds
cmc
cmp
sub
enter
pop
fcoms
sbb
nop
push
add
loop
jne
cmp
mov
cmp
push
add
rorb
and
xchg
sub
pop
sub
inc
call
jmp
push
fistl
sbb
cmp
sub
fisubrl
sbb
jecxz
dec
sub
test
pop
sub
cmp
aam
sub
aam
cmpsb
out
sbbb
sbb
sbb
mov
dec
inc
cmp
daa
sarl
adc
or
test
xchg
cmc
cmpl
sbb
mov
mov
sub
sbb
cmpsl
movsl
shlb
dec
mov
pop
data16
push
add
das
dec
push
inc
lret
push
adc
test
gs
sbb
pop
pop
sbb
xorb
pop
jmp
pop
inc
mov
aad
mov
cmp
inc
ljmp
mov
sbb
push
add
adc
sbb
out
out
adc
and
bound
mov
ret
adc
mov
add
sbb
push
sbb
or
pop
jo
sbb
dec
aam
ror
in
jl
enter
pusha
ret
outsl
cli
cmp
add
add
and
pop
js
ret
add
pop
push
out
scas
xchg
test
cmp
pop
aam
test
dec
clc
aam
or
loop
pushf
pop
daa
aaa
stc
test
or
jecxz
adc
test
mov
jl
sbb
inc
fsubp
inc
pop
insb
xor
mov
data16
aad
add
adc
push
aad
jo
mov
leave
add
flds
jae
lods
cwtl
out
or
xor
and
add
push
shlb
mov
dec
and
shlb
lods
lock
cmp
ret
mov
scas
push
movsl
inc
bound
mov
es
movsl
test
or
jo
jecxz
addr16
sbb
aam
or
sbb
ja
pop
sbb
rcll
jecxz
lock
in
inc
push
push
push
or
cmp
pop
cs
pop
sar
or
test
xchg
inc
loope
push
and
pop
into
dec
push
pop
jge
push
dec
and
inc
and
sub
movsb
mov
mov
imul
sub
insb
dec
loope
lock
and
iret
orb
out
pop
outsb
add
and
dec
add
jno
and
jo
sti
call
stos
std
ss
jl
imul
and
aad
jg
je
or
jl
lods
or
jge
loopne
and
pop
and
or
out
xor
xor
pop
cltd
xorb
lds
js
push
pushf
mov
nop
rolb
pushl
xorb
lret
sub
addl
shl
add
inc
fld
cmp
sbb
mov
jno
lret
adc
sti
xchg
adc
add
push
lret
mov
add
sbb
ja
inc
and
mov
jecxz
mov
rcll
or
test
and
lahf
sarb
inc
or
xchg
fnsave
cmp
or
ret
sub
mov
and
sbb
xor
mov
imul
inc
or
or
xlat
add
inc
mov
push
adc
inc
xrelease
ret
inc
push
subl
adc
ret
pop
mov
or
mov
and
test
dec
sub
mov
pop
push
sti
mov
cltd
cmp
mov
jns
sbb
stos
in
mov
aam
mov
shll
jae
clc
cmp
je
test
ljmp
daa
fstpt
mov
vcvtsd2ss
inc
adc
mov
aad
popa
popa
xor
loop
movsb
xchg
movsl
sarb
fisubs
lahf
into
jo
fsubl
dec
sti
sbb
push
hlt
mov
xlat
pop
outsl
cvtdq2ps
aam
pop
enter
sarb
ds
pushf
mov
xor
dec
mov
pusha
popf
xor
das
nop
shll
xchg
mov
test
out
scas
int3
mov
mov
add
sbb
jno
mov
loopne
cmp
xor
je
jns
cmp
outsb
sbb
inc
add
xor
jle
sbb
cmp
iret
jmp
push
and
add
or
sbb
or
adc
fs
test
mov
rorb
push
lods
mov
mov
push
mov
jmp
or
xor
mov
add
lret
sbb
cmpsl
cmc
cmp
xor
pop
adc
sub
xor
hlt
test
jb
loope
sbb
aas
sub
mov
mov
dec
add
inc
dec
xor
mov
jo
aaa
dec
test
inc
int3
mov
pop
or
pop
push
inc
lods
pop
rolb
push
inc
sbb
dec
cmp
rcl
sub
or
pop
cli
call
test
pop
jl
outsl
adc
sbb
std
mov
pusha
incl
pop
push
cmpsl
insb
or
test
add
xchg
mov
cli
pop
dec
pop
xor
and
ret
xchg
je
cmp
inc
sbb
xchg
js
out
lahf
scas
and
add
push
mov
xor
into
les
mov
pop
add
adc
call
call
jp
xchg
mov
lahf
loope
lea
mov
mov
test
xchg
mov
cmc
cmc
in
inc
stos
xor
popl
mov
xor
mov
loop
xor
mov
or
or
sub
arpl
dec
lret
cmp
fs
adc
adc
cmpsl
pushf
outsb
sbb
xchg
pusha
add
daa
cmp
jno
jg
pop
subl
bound
pop
cmp
inc
dec
inc
es
aam
xor
outsl
fistpl
movsb
es
shlb
xchg
mov
mov
jns
subl
hlt
rorb
ds
cmc
cmp
mov
ss
push
shlb
mov
aaa
movsb
jae
das
aaa
xchg
mov
jno
xchg
sahf
and
or
inc
sbb
ret
aaa
les
and
loope
push
adc
pop
cmp
pop
mov
add
cmp
mov
jae
sbb
ss
daa
xor
outsb
ret
gs
mov
pop
adc
ss
and
xor
or
les
mov
addl
mov
mov
dec
out
xor
push
push
xchg
stos
jo
mov
mov
aas
fldcw
pop
es
pop
mov
push
mov
aam
fldt
mov
mov
inc
sbb
mov
pop
fucomip
sbb
das
xor
jp
pop
xchg
dec
aam
mov
outsb
and
cmp
mov
mov
repz
mull
or
mov
cmc
mov
add
jb
mov
sti
insl
jp
shrl
out
jmp
icebp
add
and
adc
mov
fninit
mov
xor
data16
ja
mov
repnz
mov
sbb
add
sti
xor
pop
xlat
pop
mov
fsts
mov
testl
stos
ret
jmp
ljmp
ja
push
movsl
add
test
jae
inc
pop
out
or
test
js
mov
mov
fwait
jecxz
push
stos
in
ljmp
cmc
dec
xor
or
pop
test
or
mov
sbb
inc
sbbb
push
icebp
pop
push
sub
push
mov
and
xor
pop
cmp
scas
inc
ljmp
inc
lods
movsl
push
pop
lods
dec
or
jbe
sbb
pop
and
sub
add
dec
sub
fistl
andb
and
jbe
jne
dec
pop
dec
xor
push
push
inc
jnp
sub
jb
inc
push
cwtl
cmp
test
jnp
inc
movsb
lcall
sbb
leave
hlt
fsts
and
mov
jmp
cmp
fildll
das
add
lods
add
sub
cmpsb
mov
out
movsb
aam
popa
out
lods
or
repz
mov
push
hlt
sub
push
mov
call
mov
jmp
xchg
mov
jo
xlat
jmp
les
addr16
or
mov
mov
test
adc
cmp
in
or
dec
mov
push
jge
fwait
adc
adcb
lret
neg
or
add
xor
fcoml
mov
ret
pop
or
cmp
rcrl
inc
dec
pop
push
insb
jne
jnp
jle
inc
dec
repz
ljmp
ret
aad
adc
fwait
cltd
sbb
sub
inc
push
add
lret
popl
cmp
dec
dec
dec
xor
ret
mov
lds
mov
jmp
scas
das
cmc
les
loopne
subl
movsl
xchg
push
and
sbb
icebp
push
daa
fsubrl
sub
hlt
loope
das
jae
and
cmp
jecxz
cmp
xor
push
dec
fadds
out
inc
jbe
in
movsl
js
mov
jp
out
repnz
loop
insl
cmpsl
add
out
and
adc
mov
push
movsb
dec
jp
sub
and
xchg
in
orps
dec
roll
inc
push
cmp
rorl
lds
pop
stos
insb
pop
sbb
adc
sarl
pop
mov
fdivrs
xchg
loopne
addl
stos
and
mov
mov
xor
mov
movsl
arpl
rol
out
fdivrs
iret
jb
and
rorl
je
push
adc
push
les
cs
mov
test
push
add
adc
inc
pop
inc
loopne
add
xchg
cmp
sbbb
pop
or
and
popa
xchg
loopne
inc
popa
xor
xor
add
std
mov
sub
pop
cwtl
addr16
add
jne
inc
lods
inc
sbb
cmpsl
sarl
iret
cli
pop
mov
or
fidivl
xchg
mov
orl
push
mov
pop
pop
fcomps
rorb
pop
out
inc
bound
movsb
pop
fldt
into
inc
outsl
rolb
dec
test
cmp
popf
lods
xchg
push
or
mov
dec
ds
fs
push
adc
fisubl
add
pop
adc
sti
jecxz
mov
dec
mov
pop
adcl
loope
aad
mov
xlat
mov
jne
xlat
jecxz
mov
enter
rorb
sub
jg
ror
pop
fwait
dec
dec
inc
jle
pop
sub
push
or
loope
lcall
bound
outsb
pop
add
jp
push
dec
push
xlat
popf
sbb
es
sub
pop
mov
int
dec
sti
js
dec
inc
popf
sbbb
mov
push
packssdw
lock
push
aaa
std
mov
and
in
and
jp
test
push
pop
sbb
inc
das
leave
popf
xlat
lahf
xchg
outsb
pop
andl
mull
popf
rcll
mov
dec
arpl
add
sub
mov
push
dec
sbb
icebp
xchg
stc
lea
sbb
mov
adc
aad
roll
add
pop
pop
push
fiadds
adc
mov
dec
mov
xor
aas
add
pop
add
lea
xchg
or
stos
cmpsl
fisttpll
sahf
push
fsts
scas
in
or
test
fldcw
rolb
inc
or
jecxz
in
ret
movsl
pop
test
cs
imul
jbe
sbb
outsb
jmp
stos
fs
add
cs
xchg
sbb
das
stos
cld
mov
jecxz
sar
add
or
iret
repnz
xor
dec
mov
sbb
fs
mov
loope
jno
and
iret
sub
ds
das
push
movsb
inc
add
pop
xchg
sub
jmp
xchg
pop
sub
push
jnp
pop
mov
popf
loop
add
pop
cmpb
add
test
sbb
and
mov
mov
dec
sti
mov
call
add
movsl
sahf
test
inc
cmp
outsl
lds
lds
aas
les
arpl
mov
mov
iret
pop
mov
xchg
mov
daa
stos
adc
sbb
ret
add
cmp
pop
lods
mul
and
push
inc
add
mov
mov
leave
mov
jb
dec
push
jne
dec
add
mov
xchg
dec
cmp
loop
addr16
lea
gs
loopne
jno
pop
push
addr16
xor
orb
xchg
inc
mov
cmp
xchg
cmpb
movsb
adc
aas
nop
xchg
movsb
mov
dec
xchg
je
and
addl
and
lret
pusha
add
xchg
loopne
inc
and
mov
mov
add
jbe
dec
dec
test
shll
sti
shrb
arpl
mull
add
pop
mov
adc
iret
movsl
add
jmp
fstp
popa
lods
mov
lahf
enter
aas
jp
add
insb
sbb
mov
cwtl
or
sub
sbb
sbb
aas
mov
ret
xor
aad
dec
and
add
xor
pop
and
dec
lock
fists
cmp
aam
and
in
rcrb
test
push
jg
fisttps
or
pop
adc
in
ficomps
js
mov
push
popa
popf
mov
jp
mov
rorl
pop
in
pop
pop
and
mov
jl
cs
inc
lds
adcl
sbb
pop
lea
das
repz
push
add
in
outsb
push
sub
mov
jo
sub
pop
dec
incb
aad
add
cwtl
or
adc
or
pop
bound
mov
dec
xchg
and
std
inc
shll
arpl
xor
add
and
jmp
mov
movsb
outsl
inc
out
inc
iret
xchg
add
jnp
mov
xor
ja
jge
mov
or
adcb
sub
or
cmp
xchg
lea
mov
pop
xchg
xchg
and
fistps
sbb
inc
sub
dec
xor
in
xchg
inc
aam
roll
lea
mov
bound
das
out
jo
addl
cmp
jns
int
inc
loope
lar
push
xor
adc
ret
jno
mov
jge
jnp
add
push
icebp
jno
inc
pop
hlt
ret
jle
jg
lret
scas
push
test
movsl
adc
add
mov
pusha
mov
push
je
add
movsb
sbb
jmp
xchg
and
loope
lret
test
shrb
xor
sub
mov
aaa
ret
and
xchg
or
into
insl
pop
shl
in
orl
pop
sbb
dec
jnp
enter
ret
js
pop
inc
mov
jb
aas
pop
sbb
lret
xchg
push
jp
push
cmp
mov
mov
scas
fwait
xlat
jecxz
push
insl
pop
dec
and
andl
jg
or
add
cmp
lret
mov
outsl
ffreep
rolb
inc
adc
mov
push
shl
cmp
cmp
inc
cmp
and
and
scas
cmc
mov
sub
shl
ss
imul
mov
les
sbb
jecxz
pop
fwait
fwait
sub
xor
aaa
fwait
clc
insb
lea
shlb
and
mov
and
faddl
push
pop
movzbl
sub
cli
movsb
cmp
ljmp
push
mov
lods
jnp
mov
in
addl
nop
mov
cmpsb
inc
lret
sub
js
popf
push
jmp
sub
push
xchg
iret
xchg
loopne
mov
push
mov
nop
aaa
ret
test
adc
push
roll
pop
xchg
adc
rcrb
notb
popa
or
add
push
mov
loope
or
loop
add
cmc
xor
js
push
cmpb
outsl
sub
iret
xchg
rcl
xchg
or
mov
cmp
lahf
dec
fmuls
ret
lods
push
and
inc
outsl
sub
pop
mov
jle
lea
add
pop
push
pop
pop
rorb
fs
fisubrs
lods
adc
sbb
xchg
movsl
sub
mov
cmp
in
pop
pop
outsl
jge
leave
pop
add
xchg
inc
lcall
xor
fs
sbb
sub
mov
pop
add
inc
or
inc
pop
pop
mov
inc
leave
notl
xchg
xchg
sbb
push
add
xchg
lret
sbb
sbb
pop
jae
jns
fsubs
inc
loop
filds
cwtl
ret
imul
ja
xor
rorb
popa
add
inc
cmpsl
xchg
test
mov
out
pop
add
xchg
data16
stos
sarl
add
sbb
pop
inc
out
stos
cmp
cmp
test
shrl
mov
scas
add
cmp
scas
sbb
adc
push
xchg
or
insb
in
dec
aad
pop
mov
mov
jb
movl
jne
sti
ljmp
sbb
or
cmp
mul
jo
adc
mov
xorl
xor
icebp
out
popa
movsb
xor
adc
out
add
xor
sub
pop
push
mov
pop
fildl
dec
insb
repz
data16
xchg
fldcw
mov
call
mov
test
dec
test
leave
cmp
imul
push
mov
clc
adc
cmp
mov
push
out
inc
imul
mov
cmp
dec
cli
adc
sbb
push
dec
pop
xor
fistl
jne
jbe
jne
lret
cwtl
push
lea
mov
mov
out
or
pextrw
jae
jge
ss
or
inc
cmp
cmp
out
or
jecxz
imul
scas
mov
in
or
inc
test
and
icebp
fnstsw
out
roll
fwait
icebp
push
je
jne
inc
adc
pop
lcall
mov
lret
lret
dec
clc
xchg
sbb
and
sbb
bound
pushf
andb
sub
add
fldcw
inc
pop
mov
or
call
dec
xchg
cld
mov
pop
push
mov
lea
and
mov
push
dec
inc
xor
adc
aad
push
dec
mov
mov
imul
test
pusha
xchg
enter
fsubs
add
mov
aad
cs
xor
push
rcr
push
outsl
arpl
cmp
or
shrl
cltd
loopne
sbb
adc
push
fmuls
push
mov
adc
push
pop
pusha
cwtl
dec
iret
jno
lahf
xor
xor
pop
arpl
insb
or
or
sbb
mov
movsb
flds
ret
cmc
or
xor
dec
mov
rolb
add
lock
lret
or
movsb
rcrl
arpl
rclb
aam
mov
inc
pop
pusha
sar
pop
pop
sahf
cs
jo
mov
dec
or
cmp
adcb
pop
rolb
addr16
and
enter
or
rcr
rcl
adc
aam
imul
das
sbb
xor
cmpsl
xchg
adc
jmp
or
sub
cltd
and
inc
loop
ret
jle
sarb
xchg
sub
add
scas
dec
insb
xchg
out
and
test
inc
js
add
push
ret
bound
pop
loopne
ja
jle
outsb
xor
ss
pop
cltd
push
push
imul
aam
inc
or
sub
popf
add
lods
imul
sub
mov
test
inc
mov
arpl
mov
mov
iret
fcoml
or
and
push
lock
adc
mov
cmp
dec
and
mov
mov
xchg
mov
sbb
mov
mov
and
fs
mov
add
imul
mov
push
jbe
js
inc
cli
jo,pn
arpl
dec
lea
inc
fmul
add
or
add
scas
mov
pop
pop
out
jecxz
rorb
lea
or
sbb
imul
mov
lods
rcl
mov
ljmp
jmp
mov
call
outsl
mov
ljmp
aad
add
jae
js
pop
enter
lret
lds
jge
xor
cmp
sbb
rorl
in
jnp
aaa
lea
iret
mov
orb
imul
xor
sahf
dec
add
nop
clc
sub
or
adc
std
orl
fs
or
shlb
mov
sub
out
cmp
cmp
xor
scas
inc
hlt
jo
jl
add
cmp
fbld
add
mov
aaa
add
sub
pop
cmp
push
cli
aaa
and
dec
jno
jno
xor
aaa
mul
lea
fildll
xorb
in
mov
mov
xor
fcoml
mov
cmp
add
movsb
cmp
shlb
push
and
icebp
and
adc
and
out
or
mov
pop
add
cmp
ret
push
and
ror
movsl
adc
inc
or
icebp
adc
push
xchg
add
dec
scas
jo
adc
ljmp
cmp
es
adc
rcrl
loopne
mov
sbb
fmuls
add
cs
jno
mov
iret
cs
or
jo
dec
mov
mov
xchg
and
lods
mov
cld
iret
fstl
subb
vpunpckhdq
pop
test
mov
push
and
mov
sub
mov
inc
jo
ja
bound
ljmp
cmp
mov
xchg
pop
loopne
ljmp
dec
pop
aam
insb
cmpsl
je
pop
ret
dec
pop
hlt
xchg
add
fisttpl
sub
push
mov
cmp
jns
in
rcrb
xor
mov
arpl
stos
cmp
push
or
aas
cli
sbb
fistpll
les
jnp
jbe
dec
rcrl
xchg
jno
adc
outsl
xchg
jbe
aas
fbstp
je
fwait
or
test
lock
or
popf
sub
rclb
es
cwtl
or
lods
test
pop
leave
fbld
dec
add
mov
mov
sub
mov
jg
mov
sub
int
stos
add
xchg
adc
mov
mov
push
loopne
ljmp
jge
es
ret
adc
dec
xor
or
scas
jne
inc
and
add
loope
xchg
push
fsubrl
pushf
mov
scas
in
cwtl
rclb
add
in
rcrb
push
mov
and
push
sub
jecxz
in
adc
es
mov
sbb
or
std
roll
aam
dec
jno
mov
mov
add
jge
sbb
jecxz
daa
popa
stos
lea
jl
sbb
lods
cmpb
cmp
jecxz
mov
nop
add
push
bound
pop
and
mov
mov
xor
les
add
pop
push
mov
pop
pop
mov
aas
or
mov
mov
pop
aad
mov
ss
je
pushf
loopne
imul
rolb
xor
mov
fadds
mov
adc
dec
mov
mov
adc
jcxz
push
dec
jne
popf
and
xchg
daa
ljmp
scas
dec
roll
adc
outsb
mov
jno
inc
push
xor
enter
pop
add
pop
mov
adc
ljmp
int3
fistl
cmp
sbb
jp
mov
aas
and
loope
loop
adc
test
repz
js
or
xchg
mov
mov
loopne
sbb
inc
loopne
fwait
sbb
adc
pop
test
dec
cmp
jo
xor
js
mov
or
cwtl
or
jae
sub
cmpsl
fwait
mov
repz
cld
imul
lcall
movsl
or
jecxz
jl
mov
lods
cmc
jl
insl
inc
dec
or
sbb
stos
xor
ficomps
or
sub
and
dec
sub
add
not
lods
sarb
sbb
jne
out
lock
mov
test
xor
addb
jecxz
jno
xorb
popa
out
or
ret
ret
xchg
ficoml
jecxz
loop
dec
bound
pop
or
add
ljmp
bound
push
adc
xchg
gs
xor
arpl
or
inc
mov
add
cmp
inc
cmp
jge
adc
lret
mov
add
stos
lea
and
or
in
subb
jb
test
push
or
and
jg
sub
adc
rolb
lock
call
daa
jg
pop
lcall
roll
push
mov
ss
rolb
sbb
popf
idivl
pop
je
add
mov
pop
mov
jns
xor
mov
jge
mov
les
jne
and
xlat
in
decl
lock
push
test
xor
pop
mov
inc
dec
cmovl
xor
add
repnz
and
push
shlb
sub
or
rcll
sbb
sub
or
pop
adc
adc
cltd
xor
aam
push
xor
loopew
mov
xor
sub
and
lahf
inc
jl
addr16
std
dec
and
and
stc
cmpsl
jl
inc
cmp
mov
or
stc
sbb
ret
inc
or
cmc
sub
rcrl
fimuls
or
jecxz
test
arpl
mov
popf
test
ljmp
and
add
loopne
notl
aad
arpl
xor
inc
dec
xor
sahf
es
sti
mov
and
daa
mov
and
jge
mov
add
or
icebp
stc
adc
mov
shlb
mov
inc
dec
inc
cmc
aad
cmp
imul
icebp
mov
les
add
nop
add
push
aam
ret
mov
or
cmc
fstps
daa
fldcw
cmp
out
mov
adc
xchg
and
xchg
aad
testl
mov
test
sbb
xlat
add
xlat
iret
sbb
mov
pushf
mov
or
sbb
and
or
cmc
js
inc
loope
jge
jl
data16
and
shr
adc
mov
pop
imul
jo
and
or
pusha
mov
pop
push
inc
ret
test
adc
enter
xorb
adc
push
xor
jb
or
das
sub
mov
aad
mov
nop
stos
imul
mov
push
lock
lods
test
sub
and
fldl
mov
sti
jmp
sbb
add
or
clc
rcrb
fwait
mov
insb
add
repz
jnp
dec
push
sbb
shr
pop
push
es
xchg
cmpsb
das
mov
mull
pusha
ja
ljmp
test
pop
testb
mov
icebp
je
call
test
xor
cmpsl
rorb
add
and
mov
and
or
adc
test
push
add
test
test
fiaddl
push
pop
stos
lods
pop
stos
xchg
movsl
jno
lret
xlat
lret
or
push
and
adc
cmp
sbb
inc
fisttps
pop
pop
loope
add
lcall
ds
mov
add
push
es
ret
into
icebp
js
xor
inc
mov
adc
clc
mov
shr
and
xor
or
les
or
pop
loop
ret
dec
iret
mov
loopne
cmp
call
inc
xor
fsubl
popf
mov
addl
add
sbb
movsl
dec
scas
ret
sbb
sbb
sti
fisttpl
xlat
popf
push
jo
and
ss
pop
and
stos
cwtl
rol
subb
es
in
sbb
and
sbb
and
das
sub
in
push
xchg
inc
inc
inc
negl
daa
movsb
movsl
push
jecxz
stos
movsb
jecxz
xor
jle
push
xor
and
rep
std
add
inc
stos
gs
in
addr16
or
push
push
dec
sahf
fs
daa
add
inc
inc
imul
xchg
lea
mov
mov
pusha
add
pushf
cwtl
sub
cmpsb
insl
sbb
andl
test
or
pop
and
repz
int
sub
cwtl
loopne
stos
js
nop
sbb
ss
repnz
mov
jbe
ss
pop
inc
jp
and
mov
inc
aas
mov
mov
fnstcw
test
push
ret
pavgw
loop
push
cmp
js
ret
mov
inc
jge
mov
mov
push
add
lock
stos
lret
mov
mov
xchg
fwait
movb
jmp
pop
mov
fdivrl
aam
je
mov
nop
mov
fsubrs
and
adc
cmpsb
push
in
xor
inc
add
repz
negl
shll
inc
inc
call
paddusw
xorl
hlt
push
loopne
add
jle
insb
popa
ljmp
cmp
adc
sti
add
stos
dec
scas
or
pop
cwtl
movsb
sbb
xchg
aad
xchg
jp
adc
gs
test
cmpb
xlat
mov
aas
jns
decl
mov
or
ss
aaa
clc
sbbb
adc
test
mov
inc
aad
pop
xor
cmp
mov
je
call
sub
or
jl
insb
adc
call
dec
cmp
pop
push
mov
add
cltd
sub
or
scas
pmaxsw
in
ret
mov
and
mov
jo
cwtd
inc
push
add
rolb
ljmp
mov
jmp
inc
fimull
lds
inc
and
xor
push
xchg
or
rcrb
mov
adc
mov
nop
fstps
lret
or
in
movsb
mov
pop
mov
push
mov
xor
xchg
in
and
dec
sub
xchg
and
xlat
jb
pop
push
cmp
cltd
movsb
xchg
mov
sahf
push
gs
mov
or
inc
lahf
sbb
bound
and
loop
sbb
lea
pop
dec
jl
and
xchg
add
out
call
jge
inc
dec
mov
out
out
cli
inc
push
scas
roll
xchg
xor
aaa
shr
cli
int
out
cmp
mov
ffreep
and
iret
mov
mov
dec
or
sbb
xorl
adc
xor
cmpb
fsubrl
inc
and
cmp
or
lea
inc
xchg
push
and
cltd
push
fsubs
insl
lods
adc
xchg
jecxz
ss
mov
mov
sbb
jl
adc
lcall
mov
movsl
pusha
dec
hlt
adc
mov
cmp
mov
ret
aam
and
ljmp
clc
inc
in
pop
xchg
pop
clc
fnstsw
xchg
jecxz
bound
jno
aad
sahf
jbe
std
lds
mov
mov
orl
or
shr
rcr
dec
lods
and
xorl
sti
shll
mov
add
and
add
pop
xchg
movsl
jmp
sbb
add
sub
js
jno
jae
push
scas
rolb
adc
add
lret
xor
mov
sar
sahf
rol
test
or
dec
and
ja
pop
mov
sub
xchg
out
movsl
lds
push
jg
dec
mov
dec
outsb
xor
roll
mov
outsl
add
ja
pop
xlat
shld
loop
add
outsl
inc
inc
add
inc
cmp
das
push
mov
pop
push
add
in
pop
iret
popa
inc
test
ret
or
and
xor
pop
push
dec
pop
mov
push
popf
mov
setb
in
ss
inc
or
sbb
popf
add
fs
call
add
nop
js
adc
fcmovnu
xchg
nop
daa
sti
xchg
in
mov
mov
and
add
inc
mov
jb
cmp
outsb
dec
xchg
or
sbb
dec
cmp
les
push
arpl
jbe
arpl
stos
xchg
shlb
outsb
arpl
inc
xchg
fisttpl
mov
ret
sub
cmp
pop
movsb
ret
ja
out
cmpsb
jg
gs
jmp
sub
scas
mov
lds
cmpsb
es
or
shr
add
adc
mov
ljmp
lods
pop
adc
xchg
shlb
mov
rclb
lods
cmp
mov
imul
cmp
push
sar
insb
xor
lcall
sbb
sub
sbb
movsb
inc
and
decb
and
icebp
cmpsb
outsb
and
outsl
push
inc
jb
adc
adc
xor
cld
adc
out
outsb
outsb
cmc
mov
pusha
pop
inc
fldl
mov
mov
es
xchg
or
add
add
ss
adc
sbb
dec
das
daa
xchg
or
sub
xor
pop
cs
pop
push
movsl
xchg
inc
or
in
mov
mov
das
cmp
pop
inc
push
bound
out
test
jg
mov
add
lods
push
stc
loope
std
xchg
fwait
add
jp
mov
xor
fidivrs
and
jp
rcll
fisttpl
pop
fwait
popa
sbb
sbb
pop
and
cmp
mov
xor
scas
andb
scas
mov
sub
mov
lods
sub
or
fisubrs
ljmp
inc
rorb
adc
xor
call
add
dec
and
sbb
jmp
or
outsl
and
and
add
enter
inc
dec
xchg
pop
adc
ret
rorb
mov
push
jbe
call
add
dec
mov
cs
stos
mov
rcrl
or
sub
or
cmpsb
movb
ret
mov
std
sub
or
ficoms
sbb
js
loope
std
pop
fs
jbe
stos
or
add
sub
sub
and
ljmp
subb
arpl
movsb
push
scas
mov
dec
mov
dec
testb
cmpsb
fsubl
push
fsubrl
sub
and
cmpps
ja
xorb
lds
sub
test
sbb
pop
cmp
or
lahf
test
or
jp
sbb
cmp
mov
jp
rol
movaps
sbb
xchg
into
and
fldenv
sbb
jns
pop
sub
iret
pop
mov
pop
cmp
dec
adc
push
dec
mov
dec
cmp
xchg
in
xorb
iret
pop
les
fbld
mov
add
movsb
cmp
leave
adc
jmp
call
test
ja
nop
ret
in
jno
sub
sub
or
dec
add
jae
add
out
or
mov
sbb
xlat
shrl
sbb
adc
xor
es
clc
sbb
push
cmp
sbb
insl
pop
jecxz
repnz
and
rcll
ret
adc
lcall
adc
arpl
adc
outsl
dec
loopne
sbb
or
clc
cli
ss
imul
or
cmpsb
adc
mov
lahf
gs
push
test
sub
pop
dec
and
bound
ja
add
pushf
andl
jbe
inc
sbb
imul
pop
xor
and
xorb
cld
dec
adc
sbb
mov
jge
sbb
adc
ret
dec
adc
jg
xor
and
or
stos
pop
jno
or
or
js
mov
jne
in
loop
or
push
pop
fsubs
push
js
inc
imul
push
sbb
dec
xor
sbb
push
out
test
and
inc
add
pop
push
sbb
or
mov
cmc
fisttpl
inc
loop
jecxz
jne
rorl
sub
mov
or
mov
xchg
inc
inc
jp
movb
pop
inc
jecxz
xor
mov
cmc
test
jmp
call
sub
mov
leave
dec
pop
and
hlt
adc
jnp
mov
push
xchg
mov
lcall
call
dec
fwait
inc
fwait
adc
sahf
sbb
cli
dec
jns
arpl
pop
sbb
mov
imul
fists
xor
inc
or
jge
pop
cmp
jnp
add
ret
lea
fstl
sbb
ret
test
add
inc
test
ds
lret
dec
dec
xor
add
xchg
push
subb
shlb
pusha
cmp
cs
xor
mov
mov
loopne
dec
or
shll
adc
test
ds
sbb
loop
jg
or
sub
sub
jne
lret
insl
or
add
mov
pop
pop
movsl
stos
and
hlt
sub
add
mov
pusha
test
icebp
jnp
adc
xor
cmpsl
ror
and
test
mov
lds
or
adcb
loope
push
mov
dec
mov
sub
mov
pop
push
sarb
mov
xchg
and
shrl
jmp
push
daa
arpl
cmp
xchg
aad
fldt
movl
sub
xchg
test
fildll
ja
std
out
lret
xchg
xchg
jmp
adc
je
or
shlb
jne
dec
add
mov
cmp
inc
add
and
and
imul
dec
xchg
or
gs
inc
hlt
jns
pop
rcl
scas
mov
scas
daa
mov
inc
adc
leave
stc
pop
xor
es
lea
mov
ret
or
out
pop
cltd
mov
or
lock
cmpl
cmpl
stos
pop
xor
xorl
mov
push
popa
adcb
pop
movsb
les
dec
dec
push
imul
leave
in
adc
pop
xchg
mov
mov
mov
shll
mov
dec
dec
xchg
es
adc
mov
add
fistpll
test
imul
jae
sub
push
and
push
mov
add
or
mov
insl
ljmp
cmp
xchg
mov
fs
in
pop
fimuls
imul
adc
sub
sbb
push
jno
pop
mov
dec
test
sub
push
rorl
mov
xorl
ret
lds
imull
mov
ss
popf
push
cmp
and
ret
sub
mov
mov
pop
add
push
mov
sub
icebp
or
aad
outsl
mov
xchg
data16
xor
and
rolb
adc
ja
xlat
ficompl
or
sub
lea
jo
test
dec
imul
adc
rorl
push
mov
jbe
or
pop
ret
pop
sbbl
mov
mov
push
into
and
mov
xor
fs
aaa
ds
sbbl
lds
aam
test
ja
insl
add
pop
negb
pop
ret
inc
das
mov
jne
jp
adc
or
cmp
xor
pop
test
sti
add
addl
cmc
testl
and
xchg
cmpl
fs
mov
cmpsl
adc
mov
sbb
jge
add
loopne
les
and
ljmp
push
pop
movsl
cmp
mov
xor
movl
xchg
test
mov
add
sub
pusha
and
loope
imul
jb
dec
sub
es
adc
ret
xlat
lds
addr16
adc
sbb
push
stos
adc
jae
das
adc
sub
jge
outsb
xor
test
dec
sbbl
sbb
ss
mov
push
push
movsl
inc
xchg
or
mov
data16
fdivl
into
rclb
dec
movsb
xor
xchg
add
mov
daa
test
xlat
dec
icebp
mov
xchg
orb
mov
cmp
icebp
cld
call
push
movsl
inc
lds
cmpl
in
add
and
clc
mov
sub
stc
adc
call
jmp
mov
inc
sbb
and
push
mov
lock
insb
mov
inc
jae
add
aam
push
movl
push
cmpsb
ljmp
adc
popl
scas
and
stos
add
cmp
mov
lahf
std
add
in
dec
mov
ret
iret
rcr
js
mov
adcb
sub
movsl
or
fiadds
sub
mov
gs
mov
enter
dec
jle
mov
sub
xchg
fdivr
in
das
mov
add
mov
inc
lods
icebp
dec
enter
movsl
xor
pop
test
jp
insb
push
sub
and
roll
pop
mov
mov
sbb
jl
loope
into
adc
jns
test
insl
cmp
std
push
rcrb
repnz
pand
mov
imul
shll
addr16
adc
and
sti
cs
es
test
enter
out
insl
mov
add
jge
push
add
into
jmp
sub
xor
jns
dec
and
sub
popa
rolb
es
loope
pop
jnp
push
mov
and
sbbb
mov
popl
sbb
sbb
cld
cmc
roll
stc
in
push
insb
sbb
or
inc
sbb
mov
std
push
lret
mov
mov
xor
jmp
xor
dec
pop
fstl
and
jns
call
push
jp
rcrl
add
clc
or
nop
mov
mov
cltd
or
ret
inc
rorb
daa
mov
mov
pusha
bound
imul
insl
push
lcall
sub
das
ds
les
xlat
fiadds
xor
dec
cmc
ret
mov
test
inc
ja
sbb
xchg
push
ret
jbe
mov
mov
push
jo
int
je
arpl
jp
loope
cmp
loop
jnp
push
jl
ss
es
push
ja
rcl
mov
clc
push
cmp
sbb
add
out
xchg
dec
sbb
lods
fwait
adc
gs
or
mov
hlt
std
shr
ret
or
lock
cmp
mov
inc
xchg
popa
stos
addb
lcall
adc
fstpt
jge
and
in
daa
jae
pop
insl
call
addb
sub
stos
pop
mov
push
rorl
add
sub
fptan
insl
push
dec
ss
pop
add
std
mov
lahf
push
ret
cmp
sub
fldt
add
out
lds
sub
cmp
add
popf
xchg
pop
es
xchg
xorl
mov
rorb
outsl
inc
adc
cli
data16
add
lahf
pop
mov
adc
aam
das
roll
mov
dec
pop
push
and
mov
cmp
xchg
and
inc
mov
mov
sarl
mov
xchg
outsl
sarb
push
xorb
movsb
inc
lea
mov
sub
pop
dec
lods
adc
add
or
adc
cwtl
lahf
add
add
sub
cmp
inc
dec
xchg
orl
stos
push
aas
adc
stos
lret
push
sbb
loope
inc
adc
int3
sbb
inc
mov
jns
insl
and
stc
loope
js
push
les
fs
mov
loopne
push
cld
cmc
rcl
xchg
iret
rorl
aaa
cmp
push
or
xor
sub
pusha
lea
add
mov
xor
add
movsl
mov
sub
push
mov
add
lds
ret
mov
jmp
orl
lea
push
jl
push
cmp
cmpl
push
jo
call
push
mov
dec
xor
add
or
pop
mov
data16
jle
iret
sbb
rcll
sbbb
stos
lret
roll
xchg
adc
into
mov
std
sub
push
clc
out
inc
fldln2
imul
xchg
fimull
stos
or
loop
lea
js
rol
repz
mov
dec
xor
fwait
insb
inc
jge
lcall
test
addr16
adc
adc
xchg
and
movsl
mov
cmp
cmp
and
cwtl
adc
pop
fcompl
xor
jo
cmpl
cmp
add
sub
add
add
popa
ss
stc
sbb
xor
cmp
mov
add
shll
jecxz
pop
ret
pop
daa
movsl
and
adc
jo
stc
vxorps
mov
sbb
dec
mov
orb
rep
scas
and
pop
ret
stos
sbb
cmp
and
lea
mov
push
or
ja
inc
arpl
call
in
push
fwait
pop
sbb
or
fs
scas
mov
mov
cmp
shll
add
aaa
push
sub
push
adc
and
mov
mov
and
lea
jecxz
and
out
loope
push
pop
xchg
test
in
es
mov
xchg
cmp
xabort
mov
jecxz
or
pop
pop
push
lods
mov
cmc
ret
mov
stos
pusha
mov
sub
jl
das
outsb
les
icebp
add
cli
out
daa
sub
pop
lea
cmp
loope
je
or
aas
sbb
mov
xchg
popf
and
fwait
insl
xor
or
aad
in
imul
out
fisttpll
add
inc
gs
inc
sbb
ror
pop
punpckhbw
ficoml
mov
and
shlb
sbb
sbb
repnz
sbb
adc
lret
or
push
sbb
ja
rcrl
add
rcr
or
lcall
pop
and
mov
ret
add
cmp
or
and
xor
addr16
pop
sahf
lret
adc
add
outsl
jbe
fldt
call
ret
xchg
xlat
xchg
insl
push
popf
dec
sub
xor
xchg
pop
dec
imul
ss
xchg
mov
or
addr16
adcl
jns
outsl
or
imul
jecxz
push
or
jo
test
pop
movsl
rclb
xchg
sbb
clc
ss
addr16
xlat
rolb
inc
daa
add
pop
cs
or
lods
mov
or
xlat
pop
or
or
jno
pop
sub
adc
in
enter
add
iret
xor
lods
mov
mov
mov
pop
ja
outsl
jnp
xchg
pop
rorb
xchg
adcl
or
inc
aas
movsb
sti
aas
lahf
cmp
pop
or
popa
fsubrl
jbe
sti
shrl
sahf
rolb
cmpsb
aas
adc
ret
xchg
arpl
add
adc
add
jmp
dec
repz
out
xor
je
push
xor
sbb
inc
jp
sbb
push
mov
arpl
call
sbb
mov
cmp
repz
cmp
jns
fistpll
js
pop
mov
cmp
push
les
inc
inc
mov
lahf
or
pop
inc
mov
pop
cs
icebp
dec
cltd
sub
cmpsb
rcrl
jbe
outsl
test
jecxz
pop
out
ret
das
push
sub
mov
test
icebp
test
aad
push
pop
and
sbb
jae
movsb
xchg
mov
cmp
mov
cmp
movb
ret
mov
pop
sbb
aad
in
outsl
mov
bound
sub
push
or
pop
xchg
or
fdivrl
inc
adc
sbb
aam
xor
xor
adc
les
xchg
push
cmp
inc
sub
jbe
js
fildl
inc
dec
fadd
daa
push
movsb
int3
xlat
and
movsb
pop
push
pop
nop
ret
test
jae
popa
xor
mov
stos
or
add
mov
sub
cmpsl
xrelease
adcl
or
xchg
adc
pop
sbb
inc
popa
mov
sub
in
sub
adc
or
stos
outsb
pop
xchg
jle
fcoms
movsl
ret
popa
jg
mov
pop
movsl
cmpsl
out
jecxz
cmp
cmp
popa
daa
sbb
sub
mov
es
push
sbb
rcll
lock
lcall
jns
aad
mov
add
jo
inc
push
mov
mov
rol
pcmpgtd
add
je
rcl
arpl
pop
aas
loope
push
and
and
push
inc
lods
insl
sbb
sub
lea
test
mov
dec
jbe
mov
sub
pop
hlt
repz
jge
shrb
repnz
jl
fnstcw
adc
mov
sbb
ret
loopne
xor
pop
inc
jae
int
sbb
sub
mov
sahf
xchg
push
push
or
hlt
and
dec
cmp
push
std
xchg
mov
xchg
pop
mov
inc
mov
icebp
cmp
mov
pop
adc
out
push
add
xor
inc
dec
mov
cmpsb
enter
adc
addr16
adc
lea
dec
and
sbb
mov
lock
sub
sub
add
jecxz
mov
lret
add
cmp
sbb
xchg
decl
gs
and
mov
push
or
aas
adc
xchg
or
pusha
add
inc
movsb
fimull
movsb
adc
push
inc
imul
jmp
jnp
ficompl
xor
js
stc
call
xor
mov
jo
js
mov
pop
das
mov
daa
sbb
inc
push
dec
jle
xor
mov
lahf
mov
nop
lea
orl
nop
adc
out
cwtl
les
jmp
pop
add
and
add
xchg
andb
add
lcall
add
lret
add
andb
pop
dec
scas
pop
cmp
pop
xor
push
rol
xchg
add
pop
mov
add
add
fstpl
cwtl
push
out
mov
arpl
cmc
sub
adc
and
xchg
and
pop
fwait
test
frstor
or
imul
xchg
test
add
popa
mov
test
enter
test
or
add
orb
jmp
pop
sbb
mov
roll
insl
or
xchg
mov
jg
add
fcom
shrb
aaa
push
shll
and
ret
cmp
das
fadds
xor
insl
mov
lret
shrb
inc
lea
cwtl
xchg
arpl
mov
aad
es
aam
popl
adc
xor
movsl
in
aam
dec
adc
lods
mov
push
mov
aaa
cmpsb
and
js
and
mov
or
imul
mov
jmp
jo
and
push
xchg
pusha
push
js
mov
or
sub
test
adc
fimull
das
dec
ret
inc
pop
lret
mov
sub
or
xor
leave
sub
sar
mov
divl
jmp
mov
add
mov
popf
dec
mov
push
mov
pop
add
lcall
cltd
cwtl
sbb
inc
xlat
arpl
icebp
mov
popf
adc
ja
movsl
dec
sbb
inc
sbb
and
out
out
daa
inc
mov
mov
mov
pop
insb
js
or
test
shll
pop
jecxz
leave
clc
nop
lock
pop
mov
int
rolb
les
push
popa
ja
jbe
xlat
push
stos
xchg
inc
cmpsb
add
aaa
adc
inc
or
ljmp
xor
lock
mov
les
lret
fdivs
sarl
mov
aad
mov
adc
adc
xchg
adc
je
loop
sbb
add
mull
into
xchg
xor
inc
test
mov
addb
add
cmp
mov
jecxz
xchg
repz
test
mov
lods
out
add
jo
scas
into
test
ja
rolb
outsb
add
test
mov
mov
cmp
aaa
jg
mov
jb
bound
and
dec
addr16
mov
add
pop
sub
jp
icebp
jle
push
inc
sub
pop
mov
jns
fldcw
addr16
sub
sahf
or
sub
loop
outsl
add
and
nop
into
add
clc
in
adc
add
in
mov
sbb
cmp
adc
xor
pop
push
stos
mov
fcmovb
fisttpll
xchg
mov
fwait
adc
and
or
fnstenv
push
icebp
shlb
fldl
cmpb
pop
loop
mov
daa
shll
pop
insl
xor
push
dec
outsl
pop
dec
add
call
dec
xchg
dec
fdivl
dec
xchg
les
insl
lret
and
lods
lret
pop
dec
aam
or
addr16
jne
dec
add
jp
imul
sub
ret
ss
add
xor
sarb
mov
ss
xchg
hlt
jo
jge
inc
mov
sbb
inc
das
jo
or
xchg
push
fdivp
gs
xor
mov
in
ror
xchg
shr
push
inc
int3
or
and
add
clc
mov
add
xchg
jae
add
jae
sbb
cmc
js
stos
jmp
imul
jnp
dec
loope
jno
aaa
fstl
cmp
test
in
add
sub
cmp
stos
mov
adcb
inc
inc
inc
and
ds
sub
ret
cmp
sbb
loope
or
sbb
mov
cmp
add
lock
iret
sub
loopne
adc
push
lret
pusha
or
lock
fistl
gs
mov
jo
push
sbb
jnp
aaa
xor
or
sbb
cli
mov
arpl
mov
or
jbe
js
addr16
and
shr
dec
push
mov
lret
xor
lods
and
test
lret
movl
mov
add
jne
aas
dec
adc
cli
movsl
jo
sub
jae
test
aaa
xchg
mov
adc
je
cmpsb
cld
add
movsb
mov
out
sbb
pop
daa
sub
add
xor
shrb
cli
cmp
jo
mov
aad
mov
je
xor
cli
rcll
lea
mov
add
and
sbb
fidivl
inc
cmpsl
jbe
aam
out
and
jmp
cmp
fbld
in
cs
adc
xlat
shlb
sub
stc
pusha
xchg
lods
cltd
adc
lea
mul
shl
cmp
lcall
add
pop
inc
pop
imul
or
mov
shlb
cmc
cmp
mov
dec
jbe
je
jno
sub
mov
push
jo
jl
adc
xor
adc
sub
js
pop
flds
cmp
mov
aas
jns
dec
ret
push
sub
test
aam
cmp
sub
or
pop
cmp
es
and
pop
fs
stos
add
hlt
and
jl
adc
loope
in
stc
cmp
add
subl
add
dec
fisubs
movsb
sti
dec
add
xchg
or
pop
dec
aas
adc
jg
dec
rcll
insl
sub
xchg
loopne
or
fcoms
adc
xchg
nop
xchg
imul
lahf
push
mov
jl
sub
inc
mov
jnp
sbb
jmp
pop
hlt
mov
add
dec
aad
sbbl
out
cwtl
aaa
and
pop
data16
dec
mov
sub
je
sub
fisttps
jl
sbb
roll
jl
push
sbb
mov
mov
sub
sub
sbb
pusha
lods
int
fldt
xchg
subl
push
add
stos
add
sub
push
mov
xor
mov
movsb
jo
pop
roll
xchg
es
or
push
cs
cld
fstl
orl
jle
dec
fldl
and
add
lret
dec
pop
jp
cmp
xor
loope
inc
test
push
aam
xchg
inc
loope
push
sbb
mov
xor
pop
dec
sbb
sub
sti
push
sub
pop
cmp
xor
adc
pushl
imul
arpl
push
inc
add
mov
mov
lods
dec
je
add
addr16
pop
or
sti
inc
js
sbb
sub
pop
xchg
call
inc
jl
jmp
out
push
add
mov
or
sub
dec
movsl
lock
test
daa
cmp
inc
rcll
mov
ja
mov
sbb
rep
imul
pop
mov
jecxz
mov
ret
inc
pop
push
mov
es
dec
je
js
iret
shrb
adc
and
ss
xor
or
lea
jp
lock
ficomps
mov
add
popf
bound
xchg
movsl
lahf
loopne
mov
pop
sbb
pop
mov
adc
sbb
adc
js
pop
inc
xor
cmpl
test
rorl
and
adc
sub
jge
sbb
lods
popa
dec
pusha
mov
sub
jecxz
fidivrl
add
sbb
add
lods
adc
int
mov
ret
sbb
lahf
push
pop
mov
add
adc
and
push
aas
aaa
adc
dec
inc
adc
fstpt
jno
pop
sahf
and
ljmp
cmc
jp
pushf
je
les
js
mov
xor
cmp
flds
jecxz
xor
insb
fs
aad
rol
sub
push
and
imul
mov
hlt
sub
dec
jb
gs
xlat
xor
and
mov
lods
sbb
mov
pop
scas
dec
aam
or
jo
les
jnp
imulb
sbb
add
sub
je
fs
pop
rclb
inc
add
test
inc
mov
ds
inc
imul
adc
cmpsl
daa
icebp
cmpsl
inc
test
stc
inc
sti
add
sub
adc
or
mov
xor
inc
adc
fnstsw
jl
or
mov
movsl
ljmp
insl
xor
iret
mov
push
std
mov
rcrl
leave
rol
mov
imul
dec
cmp
mov
add
cmp
and
arpl
insl
bound
dec
int3
and
inc
xor
jno
sbb
leave
jl
push
nop
xor
xor
jmp
pop
dec
jae
pop
jo
icebp
mov
or
and
jmp
or
je
rep
add
aaa
mov
inc
sbb
sbb
or
pop
add
sbb
mov
dec
or
cmp
push
addr16
and
mov
inc
call
roll
clc
add
pminsw
add
pop
adc
sbb
inc
sbb
roll
shlb
imul
bound
xchg
jecxz
pop
lret
lods
rorl
inc
push
ljmp
outsb
test
frstor
cmpsl
xor
cmp
dec
insl
inc
jno
test
test
or
aaa
sbb
push
mov
and
dec
or
inc
rcl
sub
icebp
enter
sar
aas
mov
test
add
jge
jnp
adc
movups
clc
rolb
movsl
ds
inc
pusha
jecxz
or
push
sysenter
and
xchg
cmc
decl
shrl
mov
pop
pop
rcrb
sbb
lods
test
mov
popa
ja
dec
ret
int
adc
daa
pop
mov
fisubrl
xor
daa
push
and
sbb
dec
pop
insb
rcl
cs
mov
xchg
push
loopne
push
imul
sbb
sub
cmpsl
orl
je
les
ds
xchg
out
movsb
imul
mov
sub
adc
add
and
movl
test
sub
pop
icebp
andb
xor
push
pusha
aas
punpckhwd
scas
lods
xor
adc
ds
icebp
sbb
dec
fldcw
inc
sub
jmp
xor
jecxz
js
jecxz
or
cltd
mov
lds
dec
cmp
dec
fidivl
cmp
movsl
pop
cmp
sbbl
packssdw
lods
mov
mov
fwait
or
sub
leave
jmp
jp
in
jle
or
les
jno
adc
sub
push
rolb
push
add
mov
inc
gs
rolb
jae
xor
iret
inc
pushf
test
or
shll
xchg
adc
sub
lret
imul
arpl
and
dec
lea
push
mov
je
repz
je
mov
leave
andl
movsl
push
add
or
lds
in
jb
cmp
cmpsb
into
gs
dec
mov
aad
sahf
and
andb
and
mov
mov
xchg
pop
and
jp
test
test
daa
mov
cmp
loop
insl
loopne
js
cmc
ret
add
outsl
in
das
sbb
jno
outsl
data16
adc
sbb
cmp
inc
and
and
xchg
push
std
sbb
mov
cmc
xchg
sahf
pop
ret
add
daa
in
adc
or
sbb
rcll
mov
insl
xor
jecxz
mov
pusha
or
aaa
scas
sub
mov
xchg
or
add
sub
xlat
cmp
mov
lret
jae
add
dec
fstpt
ret
iret
shrl
jl
mov
aas
insl
aam
and
mov
outsl
pop
fmuls
dec
popa
outsb
sbb
mov
jge
pusha
fdivrl
roll
push
les
mov
inc
loopne
rolb
sub
imul
and
pusha
shll
xlat
and
in
mov
int
mov
lret
pop
sub
pusha
jl
js
call
sub
push
jno
jg
pop
jmp
pushf
jecxz
in
sbb
push
add
inc
je
test
mulps
adcb
sti
adc
and
add
jne
std
cmp
xchg
ss
js
icebp
dec
adc
inc
imul
insb
inc
cltd
addb
stos
sbb
sahf
add
lea
rorb
mov
mov
adc
scas
icebp
lea
mov
aaa
sub
je
adc
sub
rcl
mov
aad
jecxz
shll
pop
test
out
jnp
mov
fnstcw
fdivs
sbb
cmp
cmp
inc
push
gs
cwtl
pop
dec
sbb
lods
or
mov
mov
jae
xchg
push
add
bound
in
cmp
mov
out
mov
cmpsb
lret
xor
repnz
push
inc
dec
cmpsl
std
sub
cmp
sbb
push
addr16
pop
jmp
xchg
sbb
adc
push
scas
insb
stos
ret
fcmove
in
std
and
movl
sbb
xor
sbb
push
adcb
dec
pop
cmpsl
lea
pop
pop
or
sete
lods
and
test
push
das
pop
ja
push
mov
pop
loop
lret
cmp
xor
inc
cmp
test
xchg
inc
scas
sub
rorl
out
and
cmp
ret
daa
sub
in
jae
movsb
cmp
in
repz
pop
mull
sbb
cmp
scas
inc
addl
ljmp
add
lods
sub
jge
cmp
xchg
xor
fnstenv
movsb
cmpsl
cld
into
sahf
mov
push
test
shll
push
dec
cmp
aam
push
test
mov
sbb
movsb
dec
lods
push
lret
pop
xor
stos
push
mov
and
adcl
mov
add
cmpsb
imul
push
jnp
clc
push
mov
and
icebp
push
mov
dec
outsl
rcrl
and
jmp
and
sbb
mov
cmp
pop
add
jmp
cmp
push
ret
and
rcrb
js
imul
jg
aas
test
outsl
lahf
rolb
loop
aam
int3
jnp
ret
pop
xchg
mov
jmp
xchg
addr16
add
add
xor
mov
xchg
pop
imul
int3
negl
pushf
in
and
mov
clc
cmp
cmp
shlb
fstpl
fwait
mov
mov
push
adc
jno
test
cli
and
test
pop
add
divb
pusha
add
nop
ljmp
es
add
xchg
js
loopne
xor
pop
out
lret
mov
or
cmpsb
call
mov
xchg
add
inc
inc
sub
jg
mov
xlat
jecxz
lods
dec
or
jo,pt
pop
xchg
adc
mov
rclb
sub
add
or
in
pop
ja
sub
out
xchg
jnp
sahf
xchg
lahf
mov
dec
xchg
out
fwait
cmovbe
cli
jmp
cmc
pusha
mov
jne
push
or
mov
pop
add
cmp
adc
xor
sub
or
icebp
lret
rcrb
fildl
andl
pop
adc
and
cmp
inc
addl
adc
nop
pusha
push
pop
pop
cmp
rclb
aas
xchg
or
add
test
pop
pop
outsb
inc
orb
mov
cli
sbb
sub
test
in
dec
lods
add
stos
sub
push
fcomp
xchg
mov
loope
push
lods
dec
sub
xchg
call
pop
pusha
inc
js
pop
addr16
add
scas
mov
aas
scas
adc
xorl
add
add
cmp
rcr
inc
jecxz
js
je
out
insl
xor
std
aam
pop
shl
loope
xchg
adc
xchg
hlt
into
into
ret
ret
shlb
sub
mov
imul
cmp
push
jecxz
out
adc
adc
dec
push
cli
jge
add
xor
or
sub
cmp
push
dec
mov
mov
jae
xchg
jnp
jns
insl
jecxz
pop
loop
adc
xchg
add
adc
sub
inc
seta
and
add
in
je
push
lods
adc
nop
adc
sbb
je
sbb
or
sub
and
ret
add
sub
xor
cmpsl
pop
pop
add
in
mov
sbb
push
push
in
inc
jmp
mov
or
xchg
push
mov
sub
loop
scas
sbb
sbb
sub
adc
push
lods
adc
xor
cmp
ss
mov
mov
jnp
cmp
push
inc
repz
lahf
sti
lea
mov
xchg
mov
pop
adc
loop
dec
dec
xchg
jne
mov
inc
and
cli
int3
sub
dec
or
bound
leave
pop
mov
iret
lahf
or
sub
shl
mov
shrb
out
insb
add
xor
mov
lds
sbb
adcb
lods
jmp
mov
cmp
ret
sbb
push
pop
out
add
push
xchg
mov
or
scas
fs
aad
cmp
pop
xor
pop
ret
popa
push
sbb
or
inc
dec
aad
icebp
cmp
in
ljmp
and
add
imul
push
call
call
mov
cmp
xchg
rcr
imul
lea
add
fs
jae
cmp
cmp
add
add
xor
cmp
paddw
cmp
jne
lret
mov
loopne
adc
stos
fidivrs
imul
insb
mov
imul
sub
sub
mov
and
pop
sub
mov
push
and
xchg
roll
popa
imul
and
sar
jbe
sti
and
lods
xchg
xor
push
inc
and
xchg
pop
and
daa
dec
or
adc
nop
pushf
imul
mov
out
ss
popa
mov
sub
push
cmpl
cltd
mov
mov
loopne
sub
sub
jae
sbb
in
xchg
das
test
or
adc
pop
cmp
pop
and
fisttpll
cmp
sbb
adc
in
loop
movq
mov
pop
aaa
and
mov
jecxz
push
daa
mov
inc
clc
sar
rorl
xchg
shlb
cmp
gs
push
int3
gs
sti
xchg
mov
mov
or
aam
ret
lods
sti
and
mov
out
and
sbb
mov
add
lcall
add
test
cmp
pusha
and
cltd
in
push
xchg
mov
sbb
icebp
pop
sbbl
and
pop
mov
add
mov
or
rcll
je
add
lret
vcvttss2si
mov
add
test
push
pop
das
sbb
sub
mov
push
testl
or
or
add
push
ret
mov
cmp
cmp
add
or
inc
sub
push
je
data16
movsb
movsl
or
or
fdivl
loope
jmp
outsb
outsb
dec
popa
movsl
testl
gs
or
xlat
add
and
lret
xor
mov
nop
test
jl
mov
or
addb
sbb
add
mov
dec
xor
sub
xchg
xchg
pop
cmp
or
bound
xchg
sub
insb
cmp
imul
sti
jp
aaa
faddl
add
aas
in
ds
cltd
add
inc
mov
xor
test
insl
and
arpl
cmp
aas
xchg
push
leave
dec
rorb
add
jae
inc
or
sbb
xchg
mov
mov
outsl
mov
sbb
add
lsl
fxch
and
push
push
enter
lret
lea
jle,pt
and
and
sbb
psllq
outsb
sbb
mov
dec
rolb
mov
mull
cmp
adc
out
xchg
push
loope
mov
jae
shll
xlat
inc
jmp
call
jle
iret
xor
sbb
dec
and
cwtl
stos
dec
jo
outsl
add
pusha
stos
ss
jb
incl
es
stos
or
ss
push
test
mov
dec
xor
std
idivl
pop
les
sahf
push
inc
inc
jge
mov
mov
sub
dec
ja
stos
inc
int
add
pop
in
mov
xchg
pop
pusha
iret
push
and
xchg
stos
mov
scas
jbe
xor
jne
enter
lods
pop
mov
xchg
xchg
ret
gs
loope
loop
and
adc
adc
jmp
and
sbb
jmp
cmp
push
lock
add
mov
imul
aaa
mov
adc
sub
ret
jg
and
mov
fnsave
cmp
jae
dec
mov
mov
sbb
xorb
mov
fcoml
fcompl
cmpl
or
ret
xor
stos
cmp
mov
adc
rol
scas
jae
sbb
addr16
and
sbb
sub
mov
das
int
cmp
cmp
mov
mov
fisubrs
mov
jmp
add
in
xchg
push
hlt
pop
or
and
sub
xor
or
jmp
mov
mov
cli
cmpsl
pop
and
pusha
xor
mov
cmp
rol
aaa
push
and
xor
aaa
lods
insb
and
pop
push
inc
xchg
sub
add
add
pop
enter
rcll
xchg
rorb
test
sbb
cli
dec
pusha
and
add
xor
pop
addl
and
daa
cmp
orl
inc
push
pop
cltd
fistpl
lods
xor
xor
pop
dec
fcoms
sbb
and
push
ret
or
addr16
daa
xor
mov
imul
das
mov
ret
pop
push
push
imul
cmpsl
loop
leave
add
cmp
jp
and
push
adc
jmp
inc
xorl
rcrb
sub
adc
xor
inc
cmpsl
stos
scas
ret
sbb
popa
inc
imul
jecxz
adc
aas
ljmp
adc
clc
cvtps2pd
mov
movsl
add
add
sbb
icebp
push
lret
mov
ret
lock
sub
loope
divl
cmpsl
mov
xor
int3
popa
or
loopne
or
mov
add
adc
jnp
mov
repnz
dec
mov
je
lcall
aad
dec
xchg
jmp
dec
dec
adc
nop
adc
orl
cmpl
out
or
andl
roll
inc
dec
adc
nop
fistpll
mov
pusha
mov
aad
and
jecxz
imul
das
jmp
es
sub
movsb
lahf
add
stos
cmp
jmp
push
sub
imull
sbbl
push
pop
push
sub
pop
ret
xor
inc
xor
adc
xor
cmp
out
adc
aas
cmp
jne
fnop
mov
insb
test
jp
add
test
popf
sub
rcrl
and
sub
jmp
or
cmc
xchg
xchg
lret
lret
pop
push
dec
cmp
pop
sub
push
add
cmp
and
outsl
add
pop
mov
shll
std
fldenv
imul
pop
ret
fucomp
in
mov
dec
pop
jmp
sub
sub
rcl
mov
jbe
sbb
rcr
lock
mov
inc
jnp
pop
shlb
inc
das
shr
lcall
adcb
add
inc
pop
fwait
movsb
xchg
sub
sbb
dec
and
loope
cmpb
sbb
js
jecxz
jb
shrb
lahf
dec
sub
and
jmp
stc
daa
add
repnz
add
mov
fimuls
mov
sub
mov
mov
ja
cmp
call
lods
mov
loopne
add
jns
push
pop
pop
loopne
mov
test
in
adcb
dec
movsl
push
outsb
inc
lcall
add
jp
sub
gs
sbb
out
pop
push
nop
lea
and
adc
add
jecxz
dec
fmuls
or
addr16
ret
cmp
xchg
fidivrs
mov
add
jno
jbe
dec
mov
daa
dec
mov
cs
mov
into
adcb
or
fisttps
aaa
push
pop
insb
push
repz
mov
inc
popf
dec
imul
inc
fwait
xchg
aad
jge
and
push
push
inc
lahf
cmp
cmp
sub
mov
cmc
insb
jmp
dec
add
mov
fisubs
movsl
popf
lret
adc
insb
push
shr
sbb
fidivrs
and
mov
rorb
add
jo
adc
sti
stos
aaa
sbb
out
fisttpl
je
mov
aas
sub
sub
std
inc
mov
xor
xchg
mov
xchg
jg
outsb
imul
add
repnz
sbb
inc
scas
jo
js
pop
imul
and
cs
aaa
js
mov
push
in
adc
arpl
lea
das
pop
inc
or
insl
xchg
les
sub
sbb
pop
stc
mov
aas
sarl
mov
addb
and
in
sbbb
sbb
or
add
mov
mov
sub
lds
daa
push
popa
add
dec
inc
mov
adc
pop
pop
imul
inc
and
pusha
add
shll
pop
imul
daa
lds
push
dec
std
push
movsb
push
and
and
mov
pop
jbe
in
jnp
or
mov
pop
or
cmpsl
cmp
xor
pop
je
and
or
lods
stos
jecxz
jp
mov
or
jne
ret
movsl
sub
sub
jmp
imul
add
std
repz
outsb
fsts
aas
fildl
xor
jecxz
or
jbe
pop
aaa
xor
stos
push
sbb
test
mov
fisttps
clc
fidivl
fcoml
int
bound
xor
sub
mov
icebp
inc
dec
fdiv
inc
sbb
lods
das
repz
and
andl
add
cmp
fistpl
dec
test
sbb
rorb
fcmovne
jecxz
rol
gs
adc
insb
imul
lret
xchg
fnstsw
push
add
push
lcall
or
inc
dec
enter
and
sbb
faddl
daa
cmpsl
rolb
xchg
movsb
jo
xchg
xor
sbb
sbb
inc
or
inc
and
mov
mov
stc
flds
pop
jnp
lahf
dec
in
fists
or
or
mov
push
cmc
pop
leave
in
loope
xchg
loop
push
xlat
rcll
push
shl
mov
jp
adc
popa
xor
cmc
out
jmp
cmpl
aad
inc
mov
pop
xor
xlat
ret
cld
add
dec
jne
into
push
fdivrs
test
iret
and
mov
inc
push
popf
adc
insl
sarl
add
fstpl
sbb
xor
mov
mov
mov
arpl
add
fadds
and
xchg
repz
add
cmp
mov
shlb
into
xor
clc
and
sbb
cmp
xchg
adc
jl
mov
inc
push
xchg
and
add
xchg
andb
sarl
scas
inc
sub
jne
test
pop
sub
pop
add
mov
outsb
dec
jl
lock
std
jg
xor
sub
sbb
pop
lahf
nop
jnp
andl
mov
jbe
cmp
icebp
pop
daa
add
sub
jo
jnp
enter
testb
inc
lods
pop
pop
js
xor
pusha
xor
les
lret
pop
int3
and
mov
in
stos
xchg
das
mov
sub
dec
movsb
jmp
add
dec
addr16
in
das
sub
mov
pushf
push
mov
test
jmp
ljmp
sub
jmp
add
or
or
outsb
add
outsl
enter
mov
pop
xchg
loope
jecxz
mov
jne
jno
addb
xchg
xchg
push
scas
and
rorb
push
inc
lret
imul
adc
xor
ret
cmp
cld
jb
adc
sbb
rorb
pop
jb
cmp
mov
cli
push
pop
popa
adc
sbb
cmp
in
dec
insb
pop
push
sub
and
mov
sub
mov
xchg
sub
cmp
loope
in
inc
push
pop
xchg
rclb
inc
xor
daa
test
adc
adc
inc
jmp
xor
inc
out
sbbl
seto
inc
and
lods
loop
ds
popf
dec
push
mov
pop
dec
and
mov
mov
mov
icebp
mulb
xchg
mov
add
inc
xlat
orb
bound
pusha
push
xor
pop
dec
fwait
push
decb
mov
dec
jle
sub
test
pop
add
dec
dec
mov
mov
add
dec
cmp
fstpl
and
push
push
lret
call
mov
lcall
pop
xchg
loop
jl
cmpsl
mov
enter
inc
or
in
test
cmp
mov
jb
jbe
xor
pushl
push
jmp
clc
in
xor
pop
push
add
cwtl
call
rcrl
bound
xchg
and
lds
cmpsl
dec
xchg
pop
sub
adc
pop
jmp
mov
adc
add
add
pop
pusha
xchg
xor
shl
aam
das
inc
loope
insb
rorl
cmp
fstps
sub
leave
sub
adc
call
push
push
sbb
mov
and
mov
sbb
test
in
mov
loopne
fs
sbb
inc
and
sbbl
fnsave
daa
test
je
inc
or
push
idivl
add
mov
sbb
std
fs
jne
push
mov
pop
jnp
lods
test
xor
ja
sbb
pop
icebp
pop
push
pop
popa
and
or
xchg
daa
adc
lods
loopne
or
rorl
in
dec
data16
or
pop
inc
add
sub
jg
lods
clc
add
pop
mov
push
jbe
xchg
mov
jmp
rcrb
daa
mov
push
add
shlb
insl
mov
fcmovnb
sbb
or
push
lret
arpl
jnp
inc
sbbb
sub
and
jmp
jecxz
jl
sub
sar
mov
in
mov
faddl
xchg
xchg
sbbb
mov
mov
inc
sbb
pop
nop
or
or
scas
frstor
and
adc
icebp
aam
add
sbb
das
aas
push
call
repz
sahf
xchg
mov
xorl
mov
insl
das
rolb
or
sub
mov
jnp
jns
cmc
insb
cmp
mov
xor
dec
shrl
loopne
mov
stc
fwait
test
push
jbe
das
enter
inc
jns
push
mov
dec
inc
or
cld
movsl
mov
pop
cmp
or
jns
inc
cmp
or
cmp
stos
sub
jae
pop
add
icebp
ja
popa
addl
pop
add
shll
push
pop
jmp
arpl
pop
adc
fistpl
mov
add
push
pop
sbb
andl
sti
cmp
fisttpl
pop
sbb
jns
lods
test
and
daa
prefetcht0
and
pop
xchg
lret
rorb
stos
das
mov
jg
aam
lock
mov
in
mov
pop
sub
mov
pop
and
sbb
sub
inc
test
sbb
aas
in
scas
es
push
stc
loop
loope
loopne
loop
and
jno
sti
xor
and
dec
cmp
rorl
jg
mov
xchg
es
lahf
movsb
inc
adc
pop
js
cmp
ret
and
popa
daa
loop
das
in
rolb
mov
gs
push
xor
pop
dec
call
push
ds
sub
fs
mov
outsb
out
aaa
cmp
pop
in
inc
into
sub
inc
adcb
mov
add
cmpsb
call
xchg
call
and
addl
imul
mov
inc
nop
pop
cmpsb
dec
stos
push
sbb
movsb
mov
fs
adc
push
clc
mov
xor
jmp
inc
sub
sub
mov
jbe
or
popf
fmull
cmp
pop
or
push
insb
lods
pusha
leave
repnz
lock
movsl
test
shl
jo
enter
ja
mov
ret
jo
jge
je
iret
jmp
icebp
in
sub
shr
pop
xlat
sbb
mov
push
shlb
aam
into
adc
mov
sub
inc
lret
aam
sub
sbb
js
jl
js,pn
dec
jnp
and
mov
addl
mov
cltd
cwtl
or
inc
cs
pop
fwait
inc
adc
xchg
leave
add
arpl
cmpsb
jp
push
test
jae
mov
pop
ret
push
popf
dec
jne
leavew
loopne
or
int3
daa
mov
ltr
jbe
and
stc
out
push
mov
jp
push
inc
xchg
out
jmp
pusha
aad
aad
dec
fisubrs
fisubl
mov
adc
push
das
cmp
cmc
and
xchg
dec
dec
dec
shrl
adc
leave
shrb
add
jnp
dec
rcrb
sub
pop
sbb
loop
mov
pop
cwtl
lods
push
pop
jge
and
test
jge
and
fbld
stc
add
and
aam
sub
sub
cmp
in
out
jp
adc
fs
adc
insl
dec
pop
inc
lret
testl
icebp
daa
mov
mov
dec
les
loop
mov
aaa
stos
adc
dec
scas
sub
push
sub
pop
sbb
sub
popl
and
icebp
mov
cmp
xor
push
cmp
mov
mov
js
pop
sbbb
and
add
fwait
das
mov
jmp
adc
call
sub
imul
inc
iret
sub
mov
outsb
call
ret
sub
ja
jb
fcmovbe
add
xlat
ljmp
or
cwtl
bound
add
lea
mov
imul
inc
push
mov
pop
sbb
js
dec
call
das
xor
adc
data16
sbb
sub
je
fs
clc
pop
cmp
lea
sbbb
pop
lods
mov
sbb
mov
stos
mov
and
inc
inc
mov
popf
lods
stos
lock
pop
and
scas
mov
push
sbb
or
cmpsb
ss
test
mov
shl
cmpsl
outsb
sbb
cltd
mov
mov
mov
pop
imul
ret
aam
cld
adc
xchg
mov
push
rol
push
pop
xorl
cmp
cwtl
cli
jecxz
mov
insl
mov
pop
adc
pop
vmaxps
gs
pop
xor
push
mov
stc
insl
call
add
call
in
hlt
or
and
mov
les
cmpsb
sub
sub
dec
sahf
add
fwait
pop
xchg
popf
jbe
cmpsb
aaa
inc
jmp
xchg
add
inc
sub
dec
cli
lds
adc
fldt
add
jae
xchg
adc
dec
xor
movsl
inc
or
scas
push
ror
mov
add
mov
add
add
sbb
mov
cmp
mov
push
vptestmq
js
js
shl
adc
pop
jp
imul
xor
jae
loope
ljmp
adc
dec
sbb
or
or
lods
jecxz
inc
movsl
ficoms
mov
jp
jp
xor
mov
add
sub
out
orl
and
in
js
testl
dec
pop
inc
xchg
and
fdivrs
sub
jge
hlt
xchg
inc
dec
lods
xchg
jno
add
inc
test
arpl
and
push
loopne
cmp
movsl
rcrl
push
lret
add
push
shl
popa
aaa
lea
mov
icebp
adc
sub
xchg
add
dec
mov
mov
and
fsts
inc
xchg
movsb
fisubs
fstp
inc
ljmp
dec
push
pop
mov
push
push
add
jo
dec
rcrb
fisubrl
mov
movsb
xor
jp
bts
fs
pop
scas
push
add
mov
or
divl
inc
push
pop
mov
jge
push
sbb
bound
push
jb
pop
fcmovnu
loope
and
out
jo
push
pop
out
pop
mov
iret
adc
jo
les
sub
jnp
pop
jmp
dec
dec
daa
cli
adc
adc
or
push
iret
sbbb
adc
out
push
cli
lea
int
push
xchg
addb
test
or
pop
xchg
es
inc
jne
xchg
jle
fstps
dec
lea
mov
mov
jge
fsubl
imul
pushf
mov
mov
test
add
dec
jbe
arpl
stos
and
lret
xor
filds
cmpsb
bound
scas
call
sub
cmpl
pop
in
jno
inc
mov
sub
cmpsl
outsl
lret
xchg
imul
sub
and
loop
xor
pop
lods
mov
sub
pop
pusha
test
lea
jecxz
push
fcmovnbe
jecxz
push
mov
test
xchg
xchg
mov
or
fildl
or
loop
jg
cmp
popf
idivb
adc
ret
cmp
and
and
rcrb
int
stc
inc
loopne
mov
fsubl
xchg
mov
cmp
nop
pop
xor
cmpsl
mov
loope
scas
loopne
jns
jae
cmp
imul
and
adc
add
adc
testb
cmp
orb
xchg
xor
jge
xor
or
and
movsb
orl
sub
jecxz
or
push
loope
cmp
notb
lods
adc
sbb
fdivs
jecxz
scas
ja
sbb
cmp
jae
loop
or
sbb
inc
dec
sbb
push
inc
ficomps
addr16
shl
gs
mov
sbb
and
xchg
pop
jp
cmp
push
rorl
inc
and
das
cmp
in
pushf
push
loop
xor
inc
mov
imul
loopne
aad
aad
in
fisubrs
jnp
inc
jg
jmp
xchg
mov
in
mov
test
cltd
ret
lods
fwait
push
dec
fcom
inc
or
enter
fisubl
adc
push
jle
cmpsl
fsubrs
scas
ficomps
js
inc
sub
inc
xchg
sub
fs
loope
rcl
sub
mov
and
mov
sub
out
sarl
sub
icebp
jo
ret
je
pop
mov
call
sub
cli
adc
pop
sti
jo
in
mov
bound
adc
pushf
pop
rcrl
loope
mov
ds
xchg
jecxz
mov
call
inc
fiadds
repz
adc
lea
mov
rcrl
aam
out
adcl
out
xchg
test
mov
jns
outsl
push
mov
mov
and
adc
xor
mov
iret
dec
mov
add
subl
adc
nopl
pop
std
ffreep
in
push
xor
loope
push
dec
xchg
stc
xchg
dec
xchg
pop
loope
ljmp
mov
fwait
add
add
icebp
repnz
sbb
jle
xor
ljmp
loopne
jmp
xor
xchg
xchg
pop
mov
or
adc
sub
pop
movsb
sbb
cmp
add
adc
dec
sub
push
adc
inc
sbb
popa
push
xchg
mov
pusha
leave
add
pop
adc
sub
push
aaa
pop
mov
pop
inc
jne
and
outsl
rcll
aaa
pop
mov
sbb
or
adc
xor
aad
mov
jge
imul
ljmp
aam
adc
ds
push
xchg
ret
cmp
dec
movsb
mov
cmp
sar
adc
je
cmp
int
and
mov
adc
mov
push
xchg
mov
push
push
add
mov
add
test
push
inc
dec
add
das
movsl
sbb
in
or
xor
sub
icebp
xlat
add
sbb
jae
mov
shrb
mov
xor
call
sub
cmpsb
fadds
insb
jl
loope
subl
push
dec
addb
test
sub
push
ja
pop
call
mov
jecxz
call
out
es
test
push
sub
cmp
es
mov
push
shrb
jb
pop
xor
pop
mov
mov
inc
negl
xchg
loopne
xchg
aaa
gs
lcall
mov
cltd
xor
add
pop
lea
xor
pop
push
test
cmpsl
fistl
dec
mov
sub
insl
inc
cmp
out
xor
lock
in
and
push
andl
clc
mov
pop
mov
out
sbb
addl
inc
inc
inc
jecxz
in
adc
pop
int
sti
outsb
stos
sub
mov
subb
fsubrs
loop
push
adcl
rclb
nop
cmp
jecxz
les
mov
push
sarl
mov
pop
pop
mov
or
mov
rcll
mov
bound
adc
pop
mov
test
push
xor
dec
fdivrs
mov
test
icebp
add
cmpsl
mov
xchg
xor
sbb
adc
push
test
push
and
push
mov
xchg
idivl
dec
xor
add
inc
dec
dec
out
lods
enter
sbb
add
and
stc
pushl
and
imul
shll
sub
je
sbb
aas
jno
lret
jecxz
sbb
inc
or
xchg
pop
sub
mov
or
cmc
sub
lds
dec
roll
in
mov
push
cmpsb
or
les
imulb
dec
in
mov
dec
rorl
pop
mov
or
pop
adc
xor
mov
shrl
pusha
bound
mov
pop
sbb
or
cltd
clc
lret
mov
shll
mov
sbb
dec
inc
loopne
sub
sti
ret
test
jo
fldt
rcl
push
mov
or
mov
arpl
rcr
add
daa
adc
int
ja
shr
subl
repz
sbb
sbb
sbb
sbb
int
or
pusha
mov
and
dec
mov
sub
lahf
loope
dec
jo
mov
mov
aad
mov
add
mov
jmp
popa
lea
push
jno
add
pop
push
jp
add
and
jmp
xchg
lret
ret
and
lahf
into
xlat
xor
add
push
push
sub
xor
jmp
add
fldl
push
push
mov
jg
movsl
rol
pop
insl
sub
aam
and
adc
clc
cmc
jp
mov
and
rol
mov
cld
pop
pop
lock
inc
cmp
les
dec
mov
insb
in
enter
sub
cmpsb
inc
add
sbb
sub
in
stos
pop
xor
int3
call
aam
mov
lahf
shl
mov
add
setl
dec
push
pushf
mov
push
movsl
scas
dec
xorl
mov
mov
scas
stos
push
popf
jmp
dec
jmp
lahf
fnstsw
adc
inc
test
push
ret
push
mov
lret
inc
lds
jno
fmuls
adc
dec
sub
stos
jge
cmc
or
and
xlat
cwtl
sub
push
fcmovne
add
daa
mov
push
jp
add
or
xlat
ljmp
scas
jno
cmp
loope
enter
cli
enter
lcall
mov
dec
das
les
insb
ret
aam
ret
subl
or
inc
pop
les
jge
arpl
inc
mov
push
sub
pop
fsubrl
popa
or
add
add
and
fisttpll
sti
xlat
sub
fstp
mov
add
in
push
or
imul
fsubrs
pop
xchg
scas
add
mov
adc
imul
mov
aad
test
pop
jmp
int3
rolb
gs
pop
mov
sbb
fwait
stos
cmp
mov
or
dec
add
pop
jecxz
sbb
rcll
scas
aas
aad
cmc
lret
adc
int
mov
repz
add
xchg
lret
or
add
iret
mov
loopne
push
xor
fbld
and
stc
sbb
dec
sub
mov
push
mov
add
add
loope
out
mov
adc
add
stos
lods
mov
or
test
mov
push
jecxz
adc
test
leave
stos
dec
cmpsb
push
xchg
sbb
popa
cmc
mov
add
adc
jge
ss
clc
mov
aam
sbbl
xlat
hlt
imul
jns
mov
js
ljmp
sbbl
in
std
mov
xchg
shlb
sbb
lea
mov
jl
sbb
xchg
add
add
adc
mov
out
lock
js
jb
adc
push
nop
dec
popa
dec
mov
jp
push
imul
cli
pop
xor
mov
mov
adc
loope
cmp
and
outsb
push
das
sub
pop
pusha
pop
mov
and
xor
or
call
in
idivb
cmp
insl
xchg
mov
inc
loope
lea
lock
fst
shlb
clc
pop
addr16
inc
mov
inc
aad
dec
or
leave
or
add
jbe
adc
jnp
test
xor
pop
and
xorl
jo
sbb
sbb
fnsave
cmc
add
out
xor
xchg
push
dec
lds
xor
mov
fbstp
add
insl
jge
mov
adc
pop
imul
ret
cmp
mov
loop
inc
xchg
adc
sbb
cmp
fistpll
mov
nop
or
push
cmp
je
push
or
jge
xchg
rclb
xorb
sub
clc
and
movsl
add
inc
cmp
push
fstpl
and
lods
mov
lea
add
jns
mov
sbb
rcrl
cmpl
sbb
dec
push
sbb
sbbb
popf
aad
sahf
shlb
stos
xlat
xor
mov
bound
push
je
jle
or
push
out
pop
inc
push
in
pop
clc
sbb
jb
andl
mov
xchg
and
add
push
test
ljmp
insl
shr
dec
roll
push
or
mov
pushf
mov
cmp
fistpll
jnp
sbb
mov
andl
bound
xchg
add
xchg
ret
mov
scas
testl
mov
fiadds
ret
cmp
xor
jo
pop
stos
mov
fisttps
adc
adc
fildl
movsl
add
or
jecxz
js
mov
ljmp
cmp
dec
add
xor
test
add
in
dec
sbb
push
jns
addl
mov
dec
rcll
out
cmc
dec
push
fcomps
repnz
lea
add
push
xor
and
sub
mov
loope
add
jg
add
or
imul
add
xor
and
dec
sub
sbb
push
in
adc
push
jae
xlat
push
add
imul
gs
pop
add
inc
orl
xor
mov
xchg
test
jge
jb
das
add
pop
fdivrs
and
or
adc
adc
aam
mov
je
xor
repnz
loopne
push
or
pop
insl
lea
sbb
testl
rclb
xchg
jno
push
mov
mov
sub
jecxz
jne
adc
cmp
popf
imul
sti
orb
ret
test
lods
push
mov
jmp
cmpsl
lock
pop
xchg
pop
test
jl
inc
ret
pop
xchg
xorl
dec
cmp
push
and
cmpsb
push
inc
aaa
or
popw
fucom
xor
sub
sbb
stos
loop
xchg
inc
movsb
dec
pop
aam
rolb
jne
jae
jp
cmp
call
js
inc
sub
xchg
icebp
dec
pop
js
push
adc
sbb
les
pop
push
pop
cltd
inc
popf
das
in
nop
gs
dec
add
and
fbld
inc
pusha
add
and
out
jne
push
sbb
iret
add
addb
loopne
shlb
lea
mov
arpl
push
ss
movsb
sub
hlt
in
and
nop
dec
cmp
pusha
mov
mov
fisttps
add
test
insb
loope
pop
jmp
enter
loope
pusha
xor
popf
movsb
outsl
outsl
dec
xchg
popf
and
sbb
sbb
popf
test
push
jmp
push
push
lahf
aad
adc
xorb
pop
cmp
mov
mov
pop
or
xor
test
cmp
adc
jo
mov
adc
xor
out
mov
cmpsb
cs
adc
xor
mov
insl
push
addb
jecxz
xchg
or
int3
shlb
test
and
out
pop
xchg
adc
ja
out
mov
nopl
xor
sarl
inc
aaa
xor
xchg
clc
xor
push
push
jbe
sti
cmp
jnp
inc
and
and
or
pop
fildll
dec
ret
cmp
xchg
ds
out
test
push
add
and
sbb
dec
pminub
mov
mov
pushf
xor
sub
push
mov
pop
int
enter
cwtl
or
fmul
adc
mov
rorl
or
in
adc
adc
inc
jb
push
fwait
aas
mov
rcr
cmp
inc
arpl
inc
call
mov
pop
pop
dec
push
int
fldl
dec
js
dec
inc
cli
sbb
push
push
mov
sbb
sbb
or
push
xor
inc
or
and
cmp
cmp
mov
or
lea
int
inc
mov
test
sub
fldenv
jecxz
push
test
xchg
scas
mov
mov
lock
mov
insl
push
or
cmp
rol
pop
sub
and
cmp
mov
mov
shlb
push
or
ret
inc
sub
rclb
inc
mov
adc
loopne
pop
shlb
jmp
pop
das
jo
xchg
aad
cmp
cmp
ret
and
ficompl
fwait
sub
scas
rorb
jge
jbe
lods
lock
xchg
data16
add
jb
xchg
jmp
sbbb
and
xor
cmpsb
pushf
mov
les
or
cmp
movsb
mov
pop
popa
test
or
or
mov
jp
dec
dec
loope
loop
dec
cmp
push
xchg
add
lahf
mov
pop
cli
xchg
jge
push
call
test
mov
cmp
xchg
pop
das
adc
jecxz
push
or
push
add
int3
sbb
iret
adc
js
mov
shrb
and
cmp
pop
xchg
xor
and
jmp
mov
or
or
arpl
push
ret
xlat
loop
inc
shlb
xor
shlb
mov
xchg
fs
push
orl
mov
test
das
jb
fadds
add
inc
sub
add
arpl
mov
ret
sti
xchg
pop
loopne
scas
mov
adc
push
mov
cmp
cltd
inc
frstor
rolb
test
mov
ret
mov
pop
loopne
in
fwait
in
das
push
push
or
lods
dec
or
ljmp
jge
add
dec
add
inc
or
add
lcall
rclb
mov
pop
scas
mov
push
stos
insb
mov
mov
mov
sbb
inc
inc
and
push
dec
js
mov
movsb
fcmovnbe
cmp
mov
and
sbb
sbb
paddusw
movsl
outsb
rcr
mov
flds
test
lcall
frstor
dec
or
loopne
arpl
les
test
les
inc
in
add
lahf
push
hlt
mov
or
push
xor
dec
enter
es
jp
mov
and
add
xor
cmc
jnp
dec
sbb
inc
pop
xor
jge
dec
cmp
adc
mov
aas
push
mov
xchg
xor
shr
loopne
arpl
jo
add
pop
inc
sbb
cmp
mov
jne
add
mov
xorl
push
add
xchg
push
adc
mov
js
mov
mov
push
xlat
push
ret
mov
test
pusha
and
xor
loope
fs
fst
jge
xor
imul
add
cltd
inc
test
push
or
div
cli
sti
add
inc
es
fnsave
fldt
mov
mov
mov
or
mov
icebp
mov
arpl
pop
pop
std
cs
and
jo
ret
or
xchg
cmp
add
and
gs
mov
mov
mov
pop
fistpll
ret
rolb
xchg
sbb
jbe
sti
adc
push
in
adc
imul
es
pop
dec
cmp
ret
sbb
jno
mov
sbb
mov
inc
jmp
mov
insb
and
push
mov
push
fiaddl
pop
mov
aaa
cwtl
add
movsl
repz
inc
adc
sbb
mov
xchg
shlb
insl
add
arpl
scas
das
adc
lds
jl
sahf
add
daa
sbb
rorb
sub
in
rol
test
add
lret
lds
jne
add
push
inc
sahf
dec
fmull
inc
mov
adc
xor
push
mov
int
stos
cli
inc
int3
dec
ljmp
or
shlb
ljmp
rolb
mov
mull
push
pushf
sbb
lds
add
btrl
outsb
popf
cmp
sub
and
push
daa
xor
sbb
addl
inc
call
mov
loope
cmpsb
cmp
in
or
test
daa
iret
mov
sarl
js
or
xor
movb
pop
rcl
jl
out
cmp
push
jge
jle
orl
add
jnp
push
bound
or
clc
icebp
lahf
push
fs
sbb
add
je
add
lods
jo
repz
int
xor
mov
jbe
push
pop
das
pop
mov
pop
imul
cltd
xorb
add
mov
call
aaa
aaa
in
ret
sub
les
insb
mov
and
adc
fnstenv
and
in
dec
loop
je
out
lahf
jnp
or
jp
mov
dec
mov
jmp
jp
test
xchg
roll
inc
arpl
lret
outsb
add
les
lret
mov
arpl
adc
inc
cmpsl
imul
xlat
push
xchg
div
imul
jae
pop
imul
out
jge
and
pop
dec
jge
push
dec
push
imul
xor
mov
sub
cmp
loope
fldenv
sub
mov
lahf
add
jno
cs
popa
mov
in
loopne
pop
adc
cmc
and
mov
xchg
pop
ror
ret
sbb
jecxz
mov
nop
mov
add
call
mov
arpl
mov
mov
jno
dec
ret
mov
movsb
or
lahf
cwtl
sub
test
fwait
sub
xor
lret
ds
in
test
cmp
cltd
hlt
daa
xor
xor
and
int
xor
aas
add
mov
dec
jne
imul
xchg
adc
and
cld
fld
call
cs
sub
cmp
cmpl
dec
aaa
push
jge
jns
xor
pop
lahf
sbb
or
inc
mov
shl
mov
add
push
sti
jnp
push
or
jmp
or
jo
mov
push
inc
in
ret
repnz
outsb
inc
aas
mov
rcr
inc
xchg
add
jnp
ljmp
xchg
inc
mov
bound
mov
pop
shll
gs
mov
sbb
push
or
or
and
daa
mov
or
adc
cmp
adc
sub
push
into
sahf
dec
je
testb
mov
lock
rol
dec
arpl
and
push
jns
xchg
rorb
push
xchg
push
push
lret
sahf
movsl
daa
mov
lcall
lods
adc
arpl
nop
nop
fwait
ret
mov
push
dec
out
aas
push
cmpsl
test
inc
aas
mov
pop
cs
inc
push
jnp
ja
pop
in
mov
lahf
pop
jp
adc
pop
dec
insb
pop
data16
mov
insl
push
leave
sub
rolb
jno
nop
popa
outsb
jg
daa
inc
pop
repnz
inc
mov
xchg
movsb
arpl
add
mov
sbb
push
arpl
and
add
and
add
hlt
pushf
cmp
cmp
pop
mov
adc
scas
lods
rep
and
inc
sub
cltd
mov
je,pt
pop
stos
cwtl
dec
in
add
mov
sub
test
lea
mov
arpl
cs
pop
jnp
scas
idivl
fsubr
mov
subb
pop
cmp
js
rcrb
or
sub
pop
stc
pop
add
adc
jmp
add
sub
inc
aad
cmp
lret
rol
mov
nopl
movsb
inc
icebp
inc
and
ficoms
dec
inc
popa
mov
dec
aam
cmp
xor
mov
dec
aaa
ret
mov
jmp
jbe
push
pop
mov
inc
xlat
sub
add
and
leave
jp
and
xchg
add
mov
sub
rcrl
inc
pop
and
loopne
mov
iret
pusha
mov
inc
jmp
in
sbbl
lock
add
mov
jge
cmp
jnp
rorb
pop
dec
inc
inc
outsb
sub
sti
and
out
iret
ljmp
pop
xchg
stc
xchg
sbb
mov
cmp
jns
xchg
loopne
xchg
movb
sub
mov
pop
aad
sbb
push
fbld
jbe
pop
or
adc
jno
dec
mov
shrb
push
mov
leave
ret
mov
lret
fsubr
cmp
mov
add
mov
imul
es
inc
inc
stos
into
test
data16
dec
into
js,pn
add
lea
mull
sub
arpl
adcb
dec
add
dec
dec
test
pushw
daa
in
push
adc
sub
dec
lock
dec
shrl
add
jecxz
insb
add
in
outsl
stos
lahf
shlb
rolb
addb
in
pop
jb
push
mov
inc
or
mov
shl
mov
pop
lahf
in
push
shll
fistl
clc
mov
cmp
and
xchg
inc
pop
testl
push
les
fiaddl
lock
inc
jl
and
pop
sti
push
cwtl
aad
cmp
inc
jecxz
in
mov
push
and
das
imul
les
push
inc
sbb
mov
cmp
les
or
das
rclb
outsl
ss
in
sbb
frstor
test
daa
repnz
mov
sbb
rcrl
test
add
jmp
sbb
jnp
cwtl
rcr
or
aas
iret
or
call
fmull
or
xchg
mov
fdiv
jecxz
pop
sub
sbb
loope
lea
and
and
imul
mov
push
cs
cltd
imul
xlat
xor
push
inc
lea
lea
sti
xorl
es
pop
add
orl
scas
pop
insl
sbb
pop
aam
add
or
cs
out
adc
addl
or
scas
or
inc
and
pusha
icebp
movsl
stos
cmpsb
ss
aaa
and
mov
addr16
out
call
push
test
pop
aas
jb
mov
addr16
and
daa
lods
jnp
xor
mov
sbb
insl
sub
test
adc
outsl
shll
data16
mov
test
mov
clc
inc
loop
sub
and
jmp
repz
inc
popa
icebp
mov
and
out
cmpsl
mov
lods
test
and
adc
pop
xor
and
or
xor
jge
outsl
mov
mov
insl
ss
int3
cs
add
mov
mov
sub
cs
pop
push
dec
and
sbbl
xchg
scas
scas
adc
cmp
inc
mov
fdivrl
xor
push
rclb
xorb
push
mov
mov
pop
pop
dec
sbb
xchg
das
adc
mov
sbb
loopne
jbe
or
add
mov
pop
xor
adc
or
adc
and
rorb
pushf
fistps
xor
push
push
int
and
dec
pavgb
mov
fidivrs
scas
add
scas
sbb
ret
adc
mov
sbb
sub
push
imul
imul
bound
and
pop
sbb
lcall
dec
add
add
mov
addb
leave
out
pop
popa
add
pop
outsb
and
pop
lret
mov
pop
xchg
jecxz
xorb
stos
scas
push
push
jae
mov
jb
mov
movsl
outsb
shrb
mov
pop
call
cmc
jno
pop
aaa
inc
subl
sub
jae
or
mov
enter
call
mov
lahf
lahf
pop
xchg
rol
fwait
aas
mov
pop
sbb
les
iret
leave
mov
mov
cmp
int
cmp
jbe
outsl
push
xchg
cmp
mov
lods
rcrb
or
sbb
cs
push
mov
into
pop
cmp
add
sbb
mov
aaa
xor
push
shrb
popa
jp
pop
test
jmp
dec
fildl
popa
adc
pop
and
mov
mov
mov
or
imul
jl
pop
and
mov
mov
js
pop
adc
movsb
lahf
add
aaa
mov
xor
push
or
mov
adc
bound
lea
mov
and
mov
sub
push
aam
les
jno
jae
or
sub
adc
adc
cs
mov
movsb
add
inc
fdivs
cmpsl
sbb
lock
sbb
arpl
test
jne
push
jb
aas
jnp
ret
or
cmpsb
sbb
jbe
out
loope
push
jae
pop
lahf
add
lds
lret
xchg
inc
arpl
scas
cld
mov
subb
mov
rcll
jne
xlat
inc
xorb
dec
roll
sub
dec
shrl
and
jnp
ret
push
push
ljmp
sbb
clc
cmp
push
outsl
addr16
loope
repz
sbb
mov
or
icebp
insl
aas
inc
mov
mov
inc
in
aam
xor
mov
xor
ret
xor
loopne
push
mov
loope
mov
ret
xor
xor
rolb
fcoms
js
and
test
inc
cmp
lret
rclb
push
sbb
dec
lret
mov
movsl
xchg
out
xor
out
test
call
das
daa
or
cmpsb
fnstenv
out
test
andl
jne
fsubr
sub
sbb
sbb
orl
adc
mov
cmp
int
outsb
test
lret
lods
int
jo
cltd
jo
pop
or
mov
lret
xor
adc
sub
aam
adc
ja
add
ret
cld
pop
loop
sbbb
loopne
jb,pn
sub
ljmp
cmp
adcl
dec
push
push
lret
lods
or
lods
xor
addr16
mov
inc
fiaddl
or
dec
cmp
subb
inc
pop
lock
jmp
sbb
add
pop
loopne
mov
je
call
add
loopne
test
or
test
lret
add
adc
test
lret
adcl
movsl
iret
clc
lock
lahf
mov
mov
add
daa
filds
xchg
pop
test
int3
add
xor
or
add
add
xchg
jbe
or
cmp
xchg
adc
filds
cmpsb
fwait
pop
fwait
je
inc
sub
movsl
and
xchg
into
add
pushf
clc
and
nop
jge
lret
jmp
test
and
inc
shlb
cmp
jne
jmp
mov
testl
test
cmp
cmc
ret
lds
icebp
inc
adcl
add
adc
aad
loop
add
push
add
pop
lahf
cmp
xor
mov
jge
mov
pop
lahf
fs
inc
int3
scas
inc
sbb
jmp
add
jbe
test
rorl
imul
mov
dec
xor
jmp
nop
mull
mov
in
insl
cmp
and
mull
jmp
add
add
xor
sub
push
andb
cmp
test
aad
adc
add
dec
loopne
insl
outsb
mov
adc
mov
inc
jnp
ljmpw
push
jnp
add
and
add
nop
xchg
dec
pmulhuw
add
inc
js
ljmp
sbb
and
cmpsl
cmp
jae
add
mov
inc
in
jge
imul
insb
xor
daa
movsl
lcall
daa
add
jg
xor
cwtl
xchg
pop
rolb
pop
fmuls
or
add
or
mov
jno
add
adcb
dec
adc
xchg
dec
mov
imul
mov
ja
inc
test
or
jne
mov
aaa
mov
je
or
mov
adc
adc
and
inc
cld
cmc
loope
lea
sbb
cmc
lahf
bound
aam
add
stc
in
pop
das
mov
and
mov
sub
push
push
ret
lcall
push
dec
or
mov
movl
pusha
and
stos
mov
add
push
inc
lods
stc
or
adc
and
movsb
movsb
xchg
cmp
jo
cmp
jl
mov
push
add
dec
ss
fs
insl
ja
xlat
or
inc
nop
jl
jmp
pop
mov
mov
scas
outsb
mov
dec
ss
andb
popa
mov
cltd
sub
scas
mov
ds
mov
add
jp
daa
movsl
ds
dec
jo
aad
fst
mov
ffree
enter
in
cmpsb
ds
cld
mov
pop
cmp
mov
add
add
add
adc
addb
jmp
mov
test
push
or
push
int
xor
hlt
xchg
packssdw
popf
rcrb
mov
push
cmp
clc
or
js
imul
mov
sub
mov
or
lret
dec
test
jmp
jno
shlb
xchg
je
pop
xchg
push
pop
pop
pop
xor
jge
xor
adc
mov
xlat
and
aad
sub
aas
subb
mov
adc
sub
fiadds
push
test
aaa
fldenv
push
outsl
add
les
sarb
adcb
mov
add
dec
push
inc
es
adc
mov
cmpsb
and
dec
js
and
cmpsl
popa
dec
cmp
adc
sbb
xchg
sbbl
pop
xchg
test
cwtl
or
add
rcrl
and
repnz
out
mov
mov
popa
jp
ret
mov
inc
cmovp
cmpsb
inc
or
add
jge
pop
es
xchg
lret
out
push
cmp
push
or
mov
add
or
sbb
iret
add
jne
adc
sub
cmc
xchg
aam
scas
fnstcw
filds
fidivrs
dec
jbe
pop
lret
jnp
or
ja
cmp
mov
xchg
lcall
mov
ret
pop
mull
lcall
inc
jmp
sbb
push
push
jmp
in
ss
adc
test
sbb
jo
bound
clc
test
sub
test
sbb
pusha
mov
mov
fcomp
fs
loop
fstps
mov
js
mov
jnp
xor
add
mov
add
shlb
pop
enter
and
mov
leave
dec
mov
loopne
lret
aad
nop
mov
mov
cmp
jae
push
sub
mov
xor
jle
mov
das
fldcw
dec
sbb
pusha
dec
mov
aam
fmull
pusha
jb
push
das
jnp
push
cmp
and
adc
pop
xchg
sbb
sub
aaa
sbb
out
sub
cwtl
bnd
push
mov
mov
arpl
add
rcrb
adc
add
int3
mov
aaa
add
mov
inc
scas
or
popf
sti
xor
in
xchg
sbb
xor
ljmp
jmp
rdpmc
mov
adc
xchg
sub
and
xlat
cmp
add
push
sub
mov
or
bound
pop
sbb
repz
and
sarb
jb
xchg
and
out
shrl
mov
lock
ret
pop
int3
repnz
dec
addr16
jnp
mov
add
out
pushf
mov
push
xchg
jp
push
cltd
scas
and
bound
das
and
sahf
push
mov
and
iret
inc
imul
sbb
rorb
sub
xor
pop
sbb
dec
arpl
lock
sbb
imul
fisttpll
cmp
lret
add
cmpsl
jnp
and
stc
mov
cmp
lock
shrb
out
fstpl
add
popf
fstp
mov
mov
iret
addr16
ret
adc
pop
push
cmp
add
push
or
sbb
sarb
repz
mov
xlat
ficoml
and
mov
popf
mov
and
and
imul
nop
pusha
imul
push
adc
and
mov
mov
nop
cltd
pop
lock
fistps
insl
fildll
repz
arpl
shlb
icebp
push
cmovbe
ss
rcrl
test
push
cmp
dec
add
add
adc
or
lds
cvtps2pi
mov
sbb
enter
jmp
jne
xor
and
lret
lods
and
push
fbld
mov
push
inc
sbb
jmp
ljmp
adc
xlat
addl
cmp
es
loop
jge
and
sbbl
dec
mov
push
cmp
adc
or
cmc
sub
aas
insb
xor
cmpsb
mov
sub
jl
sbb
xlat
arpl
cmc
pusha
push
nop
jae
leave
stc
sbb
js
dec
cli
xlat
jno
js
jle
jge
bound
mov
pop
addr16
push
mov
or
arpl
push
pop
daa
ss
mov
and
inc
and
loop
sbb
inc
push
pop
repnz
xchg
ret
inc
push
addl
movsl
mov
jecxz
mov
sbb
mov
popa
cmpsb
adc
adc
dec
inc
pop
add
pop
mov
loope
add
adc
mov
cwtl
in
mov
sub
pop
pop
xchg
ss
test
fsubrl
cwtl
sub
cmpl
jp
pop
cltd
sub
aam
lahf
lock
push
andl
and
inc
xor
adc
push
mov
jo
outsb
das
cmp
sub
cmp
daa
shrb
sbb
sti
cs
xchg
pop
fldl
mov
sbb
mov
test
xor
aaa
in
in
lret
inc
test
or
subl
push
sub
cli
sbb
cld
cmp
dec
test
jns
jmp
or
dec
inc
adc
insb
xor
rolb
and
mov
imul
jbe
xchg
mov
pop
xor
icebp
cmp
pushfw
add
pop
loop
xor
xor
movsb
jne
sbb
or
and
pop
pop
aam
aaa
int3
sub
xor
aad
out
rorb
xor
xchg
ss
mov
test
fnsave
pop
ret
pop
cld
sbb
inc
aaa
push
dec
scas
fcoms
sbb
lahf
test
std
or
mov
mov
in
pop
jmp
loopne
dec
sub
ret
fs
cmpsl
test
cmp
mov
insl
and
add
and
enter
int3
or
pop
daa
sbb
test
arpl
sub
jbe
and
xchg
jno
pushf
adc
in
js
inc
test
insb
outsl
push
cmove
push
cmp
cmp
mov
jno
arpl
mov
jnp
outsl
sub
jo
call
xchg
pop
daa
add
inc
cmp
lods
ja
sar
lock
or
outsl
pop
push
pop
sbbl
push
mov
jmp
cs
das
adc
sub
or
push
dec
jns
arpl
or
add
pushf
or
pop
loopne
stos
mov
icebp
xchg
rcrl
cmp
loop
inc
vpshuflw
andl
inc
fcomps
mov
add
add
add
lahf
inc
movsl
add
mov
rorb
fnsave
mov
sub
popa
xor
adc
movsl
pop
inc
test
xchg
mov
jecxz
cmp
lods
add
mov
mov
pop
hlt
pusha
rorb
jo
inc
test
and
loopne
dec
pushf
dec
test
repz
lret
nop
jp
rorl
aad
xchg
add
sbb
inc
cmp
add
add
es
cmp
jl
ret
pop
xor
testl
pop
cwtl
xchg
rcrl
xchg
add
ss
or
lahf
mov
cltd
mov
ret
lcall
shlb
jne
push
sbb
popf
leave
mov
dec
fistl
loopnew
dec
push
lods
mov
in
imul
xor
pop
jno
cmp
jb
pop
adc
shl
insb
jmp
jecxz
add
add
xor
or
outsb
xchg
cmp
movsb
push
xchg
sahf
call
xor
pop
adc
inc
iret
cmpsl
and
cmp
jge
aam
insb
out
dec
sbb
add
gs
imul
jo
rolb
sbb
aam
push
or
mov
adc
icebp
add
loope
pop
mov
sti
and
or
or
les
push
addr16
int3
addr16
lods
xor
insb
nop
fcoms
push
fisttpll
xchg
mov
push
arpl
jmp
and
mov
ja
inc
ja
stos
or
pop
xchg
loopne
mov
and
sub
mov
data16
rolb
roll
es
xchg
mov
pop
rcll
mov
rcr
lods
sub
imull
cltd
daa
pop
ja
add
test
push
xor
jle
jge
imull
cmc
inc
cmp
jge
and
cmp
cmovo
jge
pop
pop
sbb
mov
push
and
leave
enter
add
cmp
xor
js
cmpsb
jmp
cmp
jge
mov
cmp
xor
xor
pop
push
gs
jnp
or
in
xor
xor
and
and
pop
xlat
adc
pop
rclb
jne
arpl
cmp
jno
cmp
pushf
mov
dec
out
xor
adc
add
je
or
and
push
pushf
jb
repnz
in
cmp
cmpsl
pop
aaa
and
jecxz
mov
lret
insb
iret
js
push
clc
push
mov
push
rorb
cmp
jne
pop
mov
jmp
and
inc
inc
push
cmpsb
jl
push
addl
pop
test
das
in
push
arpl
and
xor
pop
imul
push
lea
dec
cmpsl
add
rclb
inc
cmp
pusha
movsl
add
lods
negl
add
shll
xor
fmuls
or
sub
mov
adc
mov
ret
mov
xchg
dec
add
je
rcr
xor
out
and
push
push
or
sbb
fsubrs
jg
repz
mov
xlat
rolb
ja
mov
jge
pop
mov
cltd
push
inc
jne
jae
add
into
pop
mov
loopne
mov
push
cmp
sub
cmp
xor
popa
jo
mov
pushf
loop
sbb
push
scas
jmp
sarb
jge
repnz
test
test
jp
jge
cmpsb
jb
cmp
cmp
pop
jp
sarl
movsb
and
sub
jne
add
shrl
xor
sub
les
xchg
adc
adc
or
and
xor
jb
int3
mov
lahf
xor
jmp
repz
js
stos
lods
hlt
or
repz
add
dec
and
jmp
rcrl
arpl
mov
ljmp
aam
call
mov
fldenv
stos
pop
movsb
andl
pushf
mov
lea
xor
outsl
cltd
stos
movsl
mov
push
xchg
cs
scas
cmp
lea
pop
rcrl
add
inc
loop
mov
movsl
mov
jbe
push
mov
inc
ljmp
lds
enter
jle
xor
cmc
jl
mov
inc
xchg
adcl
divl
repnz
adc
add
lods
push
mov
sub
pusha
mov
pop
sub
enter
add
dec
lret
mov
test
insl
add
xchg
das
cmp
and
xlat
fldt
pop
xor
or
inc
jb
push
and
das
outsl
sbb
xchg
ja
sbb
test
sti
xchg
sub
sarl
mov
lret
mov
fwait
sbb
ret
mov
imull
add
cmpsl
imul
add
mov
lods
or
jno
dec
xchg
xchg
fnstenv
test
aaa
pop
add
add
adc
outsb
das
push
popf
scas
push
push
aad
das
mov
add
pop
cmp
adc
sbb
jmp
pop
call
cmc
pop
scas
jne
lods
in
sbb
fcoms
and
sub
sbbb
clc
xlat
imul
addr16
fists
pop
fs
dec
dec
sub
or
add
ret
inc
repnz
xor
or
xchg
addl
push
mov
push
push
jne
sub
inc
add
jnp
loopne
daa
ficoml
xor
add
jmp
js
sub
sbb
add
ljmp
and
sbb
dec
jbe
rorb
sbb
mov
mov
add
dec
sbb
ljmp
addl
fstpt
pop
add
add
popf
nop
popa
pop
stos
shlb
pop
rcrb
or
ret
xor
or
xchg
mov
mov
call
and
push
add
pop
aas
inc
xor
xchg
test
daa
iret
sub
outsl
xchg
add
ja
cmp
and
jmp
lea
aam
out
sub
mov
xchg
jnp
out
roll
sub
mov
add
lahf
inc
pop
outsl
jge
orb
mov
jae
pushf
leave
ljmp
dec
subl
rcll
out
xchg
jmp
dec
add
outsb
mov
pop
jge
sub
shll
push
insb
jbe
pop
addb
inc
mov
jne
mov
xchg
das
imul
xor
add
mov
sbb
aad
mov
loopne
pop
pop
mov
loopne
adc
jo
jns
inc
jo
pop
add
mov
mov
fnstenv
and
dec
popw
cmp
mov
pop
rolb
sub
jge
rcll
aam
cmp
int
int3
pop
push
test
xorb
add
push
lcall
andl
pushf
lret
pop
shrb
inc
or
dec
cmc
insl
hlt
sub
add
push
pop
fldl
lahf
cmpsl
inc
sub
out
adc
jecxz
sub
shlb
jb
mov
pop
shll
js
roll
add
fdivl
jp
cmc
test
pushf
push
ret
cmp
cmp
movsl
shlb
fucomip
movsl
out
inc
push
jne
jg
ror
dec
lsl
cs
fidivs
test
aad
jnp
adc
or
inc
xchg
push
push
js
mov
pop
andb
shl
repnz
loopnew
cmp
js
adc
test
arpl
repnz
jmp
sub
push
and
add
popf
or
pusha
add
sbb
inc
push
xchg
mov
pusha
sub
aaa
shlb
mov
sbb
mov
sub
jg
pop
movsb
mov
adc
into
sahf
cmp
int
mov
sub
sbb
orl
fcoml
test
xchg
cmp
jecxz
das
mov
jnp
ljmp
lock
imul
xchg
jno
mov
jp
popf
xor
rcll
arpl
lahf
dec
dec
xor
fdivrs
ljmp
outsl
fmul
xor
in
mov
push
mov
insb
insb
stos
dec
scas
mov
not
mov
movsb
arpl
push
loope
insb
loopne
movsb
xchg
pushf
jne
xchg
and
add
xchg
or
lea
test
xor
xchg
aam
add
aam
and
outsl
ud2
xchg
jle,pn
fsubrs
add
cmp
sub
fists
xor
push
repnz
mov
adc
cmc
or
push
ds
loope
aaa
sbb
test
pop
test
cmp
mov
cs
mov
pusha
aam
ljmp
loop
das
out
fimull
daa
push
pop
jecxz
aam
test
and
and
push
aas
orb
add
sti
add
out
movsl
adc
and
add
push
imul
push
in
ljmp
pop
or
je
sbb
ret
dec
xor
int3
test
sub
out
je
and
and
cmpsb
cmpsl
cmpsl
ja
adc
cmpsl
adc
xor
and
cmp
dec
mov
aam
daa
dec
shlb
lds
xor
sub
sub
jnp
cmp
aam
pop
popa
jmp
imul
test
sub
and
jg
push
cmpsb
xor
mov
push
mov
add
int
mov
jo
lea
add
push
stc
sahf
add
icebp
aam
ret
cwtl
sbbb
push
repz
dec
fwait
pushf
ficomps
aaa
xor
fadd
mov
lods
pop
or
mov
sub
mov
sub
pop
add
rcll
sar
and
jle
shlb
add
pop
mov
rolb
es
lds
roll
inc
loopne
sti
push
xor
lods
jo
and
mov
hlt
sahf
add
jl
leave
adc
loope
cld
adc
add
xchg
repnz
cwtl
lods
cmp
push
sbb
dec
pop
or
and
mov
pop
mov
pop
in
pop
sub
sbb
dec
push
pop
loopne
mov
jmp
jge
out
std
fadd
into
inc
cmp
inc
cwtl
push
xor
fisttpll
fcomps
adc
fs
mov
add
adc
pop
aaa
jge
push
call
mov
rcl
mov
mov
cmp
xchg
mov
add
aad
jne
mov
sbb
pop
mov
cmpsl
mov
clc
and
fnstenv
sbb
mov
mov
std
xchg
into
ja
push
andl
jp
or
aam
cmp
nop
adc
cltd
iret
int
in
lock
push
pop
lds
xlat
jmp
push
imul
nop
repnz
sub
ds
inc
pop
mov
rclb
sbb
hlt
movsl
out
sbb
fstpt
scas
sbb
mov
mov
das
add
sti
shrb
dec
cltd
fildll
loope
in
leave
int
sbb
cmpsl
frstor
sahf
jno
fldenv
ret
sbb
mov
nop
jb
insl
pusha
aad
cmp
ret
enter
jo
sub
sub
les
dec
leave
cmp
sbb
or
jne
pop
push
shll
mov
sub
popa
in
cmpsb
mov
mov
xchg
pop
movsl
shufps
or
sub
out
pop
jp
jnp
cmp
cmp
sbb
stos
xchg
jno
fwait
repz
ja
inc
inc
cli
imul
ret
mov
bound
jnp
loope
dec
lods
jae
lods
jno
pop
jns
xlat
test
loopne
adc
lret
scas
popa
dec
jp
push
and
jno
andb
mov
shl
add
xor
movsl
xchg
les
lock
or
loope
aad
in
cmp
sub
rorl
mov
fdivs
or
cmp
dec
inc
inc
pop
into
mov
js
push
xor
mov
sub
sbb
mov
adc
sub
adc
daa
jo
and
adc
inc
je
jecxz
sbb
add
cmp
add
icebp
or
outsb
dec
pop
ds
sbb
pusha
test
ss
push
pop
jp
push
lods
adcb
js
sub
aas
inc
pusha
adc
cltd
aam
lret
shlb
push
cs
outsb
and
xor
jp
cmp
cmp
movsb
jno
xor
or
jnp
jne
cmp
adc
idivb
or
in
jl
xchg
adc
cmovnp
mov
cmp
and
stos
imul
rolb
jnp
insb
sbb
push
hlt
inc
push
mov
add
jmp
add
mov
cmp
pop
inc
inc
in
cmpsb
je
push
shrl
mov
movnti
addl
adc
adc
lea
adcl
in
and
add
mov
sub
jmp
iret
cmpsl
sub
add
lock
fsubl
xor
sub
jmp
fnsave
cmp
push
mov
dec
or
dec
loope
jb
das
xlat
fisubl
or
push
cmp
addr16
xor
sub
sbb
push
jae
jb
rorb
lcall
xchg
or
mov
outsl
sub
mov
shl
fsubs
push
adc
ss
bnd
dec
clc
orb
lahf
ficoms
insb
pop
and
inc
aaa
add
imul
xchg
and
adc
add
mov
mov
into
test
xor
add
xor
aas
mov
imul
sbb
add
insb
push
lock
cmp
sub
loopne
loopne
or
sub
xor
dec
loope
jmp
jno
frstor
or
add
fsubl
or
stos
push
mov
inc
pusha
add
add
mov
pop
xchg
subb
or
rol
int
or
push
xchg
push
ljmp
pop
mov
es
xchg
call
sbbl
dec
movl
loopne
hlt
fnstenv
in
popa
jmp
mov
inc
sbb
xor
lds
dec
xor
pop
in
and
movsb
shlb
inc
cmp
xchg
aam
cltd
test
push
xchg
push
fcoml
or
inc
aas
add
and
inc
push
in
adc
add
mov
stc
sub
xlat
imul
popa
lret
or
dec
pop
inc
and
lods
divl
arpl
jb
sbbb
push
or
dec
gs
lds
mov
jbe
ret
aaa
test
out
jge
sbb
insb
aaa
and
ss
ss
xchg
js
insl
lret
sub
jl
aaa
out
jo
ret
or
mov
inc
xlat
xlat
sbb
sub
dec
pop
sub
and
cmp
ja
push
lcall
test
pop
aaa
mov
push
test
pop
cmpsl
xlat
shl
cmp
cmp
aas
popa
jl
add
mov
dec
and
jmp
mov
ret
mov
jne
in
insb
jecxz
stos
aad
nop
inc
divb
or
add
mov
pop
shlb
adc
sub
sbb
cld
jmp
cmpsl
js
xorb
insl
test
rolb
dec
inc
or
insl
cli
loope
cmpsl
fs
jle
lret
add
add
jl
es
jp
dec
and
inc
dec
loopne
loope
pop
mov
fpatan
mov
js
fcomp
xchg
inc
insb
push
jge
or
xlat
shrl
jecxz
test
imul
or
ja
sbb
cmpsb
pop
or
or
aas
lods
clc
xchg
cmp
inc
add
inc
adc
flds
ss
sbb
test
adc
adc
inc
or
xchg
or
xor
je
lret
fmul
add
adc
sub
mov
and
adc
pusha
pusha
adc
add
daa
inc
out
mov
inc
fcoms
push
push
fistps
aaa
cmp
mov
sub
dec
jecxz
add
cmp
mov
jge
icebp
mov
sub
movb
push
nop
inc
push
adc
add
or
adc
push
daa
mov
aaa
cmc
cs
adc
jnp
pop
adc
sub
sbbb
bound
emms
mov
add
sbb
movsl
dec
movsl
daa
mov
xchg
loop
mov
aam
push
sub
or
cwtl
ret
pop
out
imul
js
clc
ret
or
pop
insl
add
jmp
lahf
add
and
add
das
stos
ljmp
jno
ret
xchg
int3
add
or
jmp
xor
sub
cmp
rcl
leave
pop
sub
and
mov
adc
sarb
ss
sub
xchg
mov
and
inc
sti
fucomp
inc
ljmp
jmp
movsl
fwait
cwtl
rol
adc
sub
push
mov
mov
and
sarb
xchg
push
movsl
jb
mov
and
xchg
out
add
xor
daa
jmp
dec
rcrb
and
sbb
loopne
dec
jno
je
jp
jnp
daa
loop
add
in
ljmp
stos
push
sbb
mov
pop
and
pop
add
dec
mov
add
pop
xchg
js
add
pop
or
subl
mov
ljmp
add
ds
gs
jmp
push
push
popf
mov
jecxz
je
imul
inc
roll
call
shlb
inc
out
add
jmp
cmp
lods
jo
or
out
shl
popf
jp
cmc
rorl
addr16
xor
inc
mov
pop
in
test
and
movsb
pop
pop
out
or
adc
push
jle
add
xor
add
ret
xchg
and
jb
cmc
cmp
adc
jb
mov
insl
jb
xchg
test
adc
out
imul
and
sarl
cltd
jbe
icebp
pusha
jo
in
sub
aaa
xor
lds
mov
sub
push
sbb
frstor
add
cmp
and
ja
mov
shll
popf
mov
xchg
mov
icebp
int3
idivb
gs
adc
inc
push
aam
jno
and
mov
test
inc
test
cwtl
inc
test
nop
sbb
dec
rol
aam
loope
lea
roll
push
pop
lods
sbb
mov
add
imul
filds
cmp
dec
icebp
sub
sub
dec
add
dec
lcall
adc
mov
fs
cmp
std
mov
enter
daa
dec
loope
jecxz
stos
fmuls
fnstsw
ret
push
xlat
or
fcomps
mov
add
jmp
pop
iret
xor
push
xorl
inc
and
cmpb
and
cmpsl
test
nop
mov
add
mov
das
enter
lods
stos
jno
insb
fs
cltd
mov
adc
xor
dec
push
cli
cmpsl
ja
dec
jecxz
xchg
jne
lds
stos
jne
imul
imul
syscall
sti
data16
mov
movsl
xor
lret
in
jne
lods
insl
mov
imul
or
inc
push
sbb
xchg
dec
adc
ds
xchg
loopne
xlat
cmpsl
mov
or
ret
mov
xchg
outsl
mov
nop
sbb
movsb
xor
jecxz
aas
sbb
jmp
xchg
push
insl
rolb
cs
ss
lret
sub
in
rol
cs
inc
lcall
in
rclb
arpl
cltd
test
push
push
aaa
pop
cmp
inc
inc
pop
xor
pushf
movsb
jo
daa
sbb
std
add
test
mov
and
cli
pop
dec
xchg
and
fdiv
xor
cwtl
jecxz
mov
ret
gs
xor
cli
or
and
arpl
ret
adc
xor
xchg
xchg
sbb
fs
push
adc
and
sbb
adc
andb
add
or
cmp
cld
push
xchg
ja
shlb
cmpsl
add
rcll
sub
jb
push
shll
or
ret
sub
or
mov
inc
jl
mov
pop
or
xor
mov
scas
mov
adc
ror
daa
test
sarb
xor
sbb
inc
movsb
dec
mov
pop
sbb
rclb
test
notl
cltd
inc
cmp
inc
and
icebp
fwait
rclb
ss
pop
jecxz
icebp
push
lock
or
in
mov
notl
dec
popa
dec
add
mov
or
test
outsb
cmp
xchg
jl
sub
sar
movsb
cmpsl
movhps
sub
jo
sti
mov
xor
add
divl
cmpsb
push
rorl
pop
subl
push
fwait
je
repnz
and
xchg
sub
ret
inc
fucomi
mov
add
sub
enter
leave
and
dec
xor
gs
jl
xor
popf
jge
xchg
imul
pop
add
sub
lock
lea
xchg
pop
gs
add
sbb
in
jb
stc
es
lea
mov
rcrb
divl
cmp
cwtl
sub
lds
adc
or
cmpsl
btc
push
push
mov
sub
jae
sbb
mov
xor
jns
fsubrs
test
ret
roll
push
imul
sahf
xor
mov
mov
jp
movsl
push
lea
sbb
test
in
jo
adc
icebp
or
jmp
arpl
dec
add
aam
out
mov
push
movsb
xchg
repnz
popf
pop
pop
mov
out
adc
loope
xchg
je
push
lahf
adc
inc
cmpsl
mov
add
ret
add
mov
dec
test
ja
lret
jae
scas
and
or
cmpsb
nop
hlt
fadds
loopne
and
pop
ret
ss
add
and
sti
arpl
xchg
fwait
sub
sub
gs
ret
popf
mov
inc
or
and
xchg
in
jno
test
adc
test
ds
jecxz
add
scas
jnp
pop
test
and
cmpsl
fnstcw
cmp
and
xor
jne
iret
xor
adc
fadds
dec
mov
jg
inc
pusha
bound
cs
movsl
aad
ret
insl
push
loope
dec
lcall
mov
jge
adc
fimull
xchg
cld
out
pop
and
les
mov
or
mov
data16
sbb
je
ret
gs
mov
sub
fmull
or
jmp
out
popa
orb
xor
lds
mov
sbb
push
mov
or
aaa
mov
sub
mov
xchg
pop
jo
pop
adc
test
out
xor
data16
fisubs
sub
push
push
stos
mov
shll
xchg
and
xchg
inc
cmpsb
jbe
shlb
adc
fwait
ret
ret
mov
sbb
pop
and
adc
mov
outsl
rcrl
sarl
icebp
gs
mov
xchg
cmovnp
push
mov
jbe
adc
icebp
fisubs
shrl
add
sbb
dec
add
xlat
loop
sub
xor
sub
adc
lahf
xor
cmp
rol
push
out
push
ret
mov
cmp
add
insl
sub
mov
pop
dec
or
inc
jne
ficoml
orl
adc
add
imul
sbb
dec
and
xchg
pop
dec
pop
push
xor
mov
add
mov
jle
leave
in
das
ret
lea
roll
sub
int3
inc
push
sub
subb
lods
push
adc
and
add
rcrl
xor
mov
ror
cli
mov
inc
sbb
add
repz
pop
pop
aas
ljmp
lods
mov
call
test
loope
add
mov
mov
ljmp
repz
gs
frstor
push
stos
add
mulb
adc
inc
or
cwtl
xor
adc
push
enter
movsl
mov
add
je
inc
test
inc
inc
xlat
add
dec
aam
xor
add
push
mov
loopne
popf
add
rcr
popa
rorb
test
jecxz
rorb
sub
std
shlb
and
xchg
dec
mov
adc
or
cmpxchg
pop
mov
pop
adc
cmpl
mov
xlat
stos
mov
cli
std
and
int3
dec
popf
je
dec
bound
xor
in
xchg
xchg
jcxz
scas
dec
arpl
cmp
adc
sbbb
sbb
and
fnstenv
sbb
pop
scas
jb
dec
dec
pop
sbb
aaa
scas
pop
cmc
mov
jb
cmpsb
add
into
insb
stos
ljmp
sub
ret
gs
fiaddl
clc
sub
adc
xor
mov
jmp
rolb
jg
pop
adc
push
mov
pop
call
or
nop
sbb
sub
sub
sbb
push
sbb
lock
jmp
inc
aaa
jo
push
pop
ljmp
test
daa
sbb
push
push
jl
mov
sub
cmpsl
test
cld
pop
das
popf
js
cmp
js
push
adc
pop
inc
insb
fadd
dec
mov
hlt
xorb
roll
cmp
adc
rorl
aam
lods
cmc
dec
jnp
or
loopne
stos
aaa
mov
rolb
mov
mull
push
mov
sbb
enter
iret
mov
inc
inc
clc
mov
and
mov
add
or
ret
testb
loopne
loop
pop
call
out
pop
pop
add
out
out
imul
aad
ljmp
shll
das
sti
xor
sub
push
sbb
push
out
mov
jae
sbb
nop
adc
cmp
mov
cmpb
sub
push
je
imul
pop
push
mov
mov
pop
xchg
xchg
mov
in
push
scas
add
mov
out
adcl
movq
shrb
and
loop
js
jg
push
divb
sub
aaa
push
sbb
pop
ret
sbb
xor
es
cmp
popf
movsl
push
test
cmc
dec
mov
in
into
or
dec
mov
adc
arpl
js
popf
cmp
push
sub
stos
mov
push
cmpsl
jecxz
add
and
inc
dec
je
aam
in
mov
aaa
xchg
das
add
xchg
pop
loop
ret
add
jne
and
jno
push
mov
popf
pop
bound
push
rcrb
imul
das
cmp
dec
std
aas
pop
pop
xchg
lock
add
inc
push
mov
out
sub
addb
bound
imul
fwait
mov
jae
stos
cmp
jbe
mov
int
test
call
adc
xchg
xor
nop
arpl
jnp
xchg
ret
mov
test
inc
dec
outsb
sti
js
adc
cmpsb
dec
jbe
mov
xor
adc
rcll
fldl
shl
or
fcomp
rolb
xor
popf
adc
pop
aam
push
int
mov
add
adc
ret
cmp
pop
lds
sbb
adc
mov
sti
cmp
ljmp
mov
sar
mov
and
mov
sar
pop
mov
adc
inc
das
adc
push
inc
andl
sub
fdivr
subl
fmuls
xor
cmp
popf
mov
adc
fcomi
add
jae
xorb
push
stos
mov
ret
imul
lds
les
bound
pushf
mov
inc
jae
push
add
in
insl
push
sub
and
clc
sbb
roll
or
mov
mov
adc
movsl
inc
aam
shlb
mov
mov
fimuls
jne
scas
mov
ds
xor
lods
jg
jae
rcll
cmpsl
adc
inc
jno
jl
push
inc
ljmp
push
adc
fnsave
pusha
dec
sub
sub
adc
dec
lret
clc
inc
shll
dec
xchg
mov
nop
and
jnp
mov
adc
adc
ret
rorb
aam
xchg
nop
ror
lods
xchg
xor
mov
ret
or
or
popa
and
push
aaa
or
call
movsb
mov
popa
inc
fistps
pop
xor
cltd
xor
and
or
es
cs
jmp
mov
pushf
pop
or
cmc
jl
adcb
sub
das
aaa
push
jg
or
js
cwtl
add
fcoml
sti
and
imul
addr16
loope
mov
in
push
pop
or
add
push
xchg
je
rolb
sbb
mov
xchg
in
sub
pop
cmp
inc
add
and
imul
stc
and
nop
push
loope
jbe
iret
and
mov
ljmp
das
lods
es
aaa
es
xor
adc
jnp
insb
sbb
mov
test
mov
addb
pop
mov
sahf
jg
loop
in
adc
push
xor
push
xchg
sahf
cmpsb
rolb
jge
fisttps
xor
pop
imul
roll
push
insb
dec
fwait
aad
push
bound
adc
jb
cmpsl
inc
inc
flds
ret
xchg
cltd
xor
sahf
mov
sub
adc
mov
or
in
adc
aaa
and
adc
ret
xorb
loope
pop
insl
mov
xchg
sub
inc
je
mov
cwtl
cwtl
gs
and
jb
fdivrl
xchg
sbb
sub
xchg
lret
push
subb
pop
inc
push
ret
sti
repz
mov
push
stos
sti
adc
sub
test
pop
jmp
dec
jne
sbb
mov
pop
push
test
imul
inc
or
or
mov
movsl
mov
frstor
aam
aas
aaa
call
daa
stc
cmp
adc
orl
jb
mov
sub
jbe
adcb
adc
mov
add
or
and
cmp
push
ljmp
xchg
mov
pop
ja
mov
ret
push
add
and
leave
push
xorb
dec
arpl
add
xchg
xchg
clc
inc
mov
les
cmc
xor
test
push
sbb
add
or
das
add
test
in
dec
in
adc
push
rclb
or
adc
fcmovne
inc
jbe
nop
xchg
xor
inc
mov
cmp
sbb
mov
adc
mov
mov
pop
xchg
das
sub
aam
shll
inc
xchg
sub
ret
cmpsb
outsl
and
add
mov
push
sub
mov
push
mov
xchg
in
xchg
pushf
push
dec
push
testl
sbb
push
add
test
sub
js
or
fwait
lea
jge
cltd
mov
mov
and
sbb
cmpsl
push
jl
fwait
or
adc
rcr
lmsw
mov
push
jge
enter
adc
and
push
dec
ljmp
mov
aad
inc
dec
mov
insl
mov
rcrl
shrl
sub
outsb
push
pop
in
je
sub
mov
jae
push
fstpt
shrb
jne
pop
add
xchg
in
sbb
push
pushf
ficoms
jbe
mov
dec
mov
xchg
imul
sub
add
push
pop
and
inc
pop
sub
xchg
and
cltd
sub
sbbb
or
pusha
xchg
push
push
or
in
ja
jns
pushf
add
sbb
ss
inc
add
sbb
addr16
add
xor
dec
sub
jl
dec
scas
xor
sub
and
ret
push
int
out
add
and
call
cmp
jbe
ds
loopne
add
aam
scas
fisubrs
cmp
dec
push
fwait
daa
sub
mov
xor
xlat
imul
test
jge
pop
jno
lret
icebp
mov
and
add
imul
movl
adc
add
sahf
or
mov
push
sbb
sbb
inc
fstl
sub
adcl
mov
and
lods
push
add
lods
fwait
xlat
jbe
sub
popa
pop
add
adc
xchg
add
or
loopne
xor
int3
dec
std
and
add
nop
add
call
adc
sub
mov
mov
lods
aad
inc
insl
push
cs
ret
jbe
lea
push
sbb
lcall
fimuls
shlb
add
cmp
gs
dec
mov
xchg
sbb
or
fsubs
movsb
in
mov
dec
sbb
sbb
lock
loop
pop
or
sub
lods
mov
xor
dec
popa
shlb
push
sbb
adc
setp
fcoml
jle
leave
or
ffreep
push
inc
mov
xor
sub
jecxz
shlb
neg
push
pusha
xor
out
sarb
push
jnp
aas
add
dec
cmp
pop
jae
sbb
ficoml
mov
xchg
sub
mov
sti
stos
dec
popf
pop
pushf
xor
mov
jg
inc
out
sbb
mov
addr16
adc
push
mov
xchg
lret
cmc
add
loop
stos
jns
out
jecxz
outsb
cmpsl
jns
and
jbe
sbb
lcall
sub
inc
mov
int
and
xor
sbb
jno
adc
and
das
xor
dec
mov
inc
rorb
lret
pop
fwait
gs
stos
icebp
jae
addl
pop
and
pop
jbe
push
or
cmpl
mov
jl
xchg
les
and
popf
mov
pop
jg
sub
mov
inc
ljmp
xchg
ret
add
pop
dec
push
cmpxchg
imul
pushf
mov
or
cmc
lret
fwait
cltd
or
pop
or
mov
sub
pop
jne
fimull
int3
inc
ja
inc
int3
cmpps
pop
jp
lret
ret
out
sub
loopne
or
cltd
js
shrl
jmp
jo
inc
dec
icebp
testb
loopne
push
hlt
std
arpl
test
dec
and
lea
cmpb
test
inc
nop
lcall
and
jns
rclb
mov
test
insl
push
xor
lds
out
xor
pop
sub
push
mov
insl
dec
mov
xchg
popf
cmp
and
jns
daa
cmp
adc
arpl
insl
push
xor
sub
inc
push
adc
or
test
dec
sub
and
cmp
ja
xor
mov
cmpsl
or
mov
add
xchg
jecxz
fcoms
sti
mov
cli
arpl
test
inc
jecxz
inc
add
sub
jbe
shlb
inc
mov
pusha
movsl
mov
or
adc
mov
sbbl
push
and
cmpsl
adc
fs
orb
pusha
xor
add
xchg
js
jae
mov
scas
pop
shl
sub
cmpsb
sub
xor
repz
lods
cmc
inc
mov
rcll
js
sbb
add
or
cmp
in
sub
mov
movsl
pop
dec
add
and
dec
mov
lods
mov
sbb
pop
sub
loope
aaa
test
xor
or
jne
mov
xchg
orl
pop
and
push
jo
sub
insl
pop
jg
movl
push
sbb
pop
pop
push
mov
xchg
xchg
iret
mov
imul
pusha
lret
mov
or
adc
inc
xchg
or
lcall
sub
dec
and
into
cmp
xor
xchg
push
inc
pop
mov
push
das
leave
sub
xor
mov
clc
ljmp
rcr
and
frstor
adc
mov
and
xchg
mov
jp
daa
out
loope
add
or
fldenv
ret
insl
insb
paddsw
dec
dec
jecxz
jmp
jle
call
or
mov
repz
push
stos
mov
lahf
xor
fstpl
cmp
add
and
mov
scas
mov
cmp
inc
push
jno
xor
inc
repnz
out
add
dec
or
mov
or
iret
cmp
pop
nop
push
aad
add
lds
les
adc
or
cmc
xchg
out
or
arpl
insl
xlat
jns
out
test
in
aam
shrb
or
insb
ljmp
aas
and
sub
lahf
stos
les
and
or
addb
addb
jo
js
adc
xor
scas
pop
push
xlat
xorb
jno
jecxz
pop
je
add
rolb
xchg
dec
ret
add
js
ljmp
loopne
adc
pop
mov
inc
mov
and
mov
xlat
popf
and
jb
adc
xchg
jb
jle
jmp
rolb
aam
aaa
or
fdivs
je
pop
out
inc
paddusb
stos
test
mov
or
add
sahf
je
inc
fmull
fistl
xchg
or
sbb
jecxz
or
iret
in
ret
fcmovnb
push
sbb
push
mov
mulb
ret
sub
shll
and
icebp
sub
test
cmp
inc
dec
jge
cwtl
mov
addb
xor
and
mov
imul
loope
jb
push
das
es
pop
in
or
inc
ret
clc
popa
pop
mov
daa
adc
imul
leave
add
mov
imul
pop
fbstp
add
jns
xchg
push
xor
sbb
out
or
dec
or
out
or
inc
mov
inc
inc
xchg
inc
pop
xlat
pusha
insl
and
pop
loope
pushf
jecxz
dec
jle
sbb
sbb
or
xchg
jo
popa
lds
fiaddl
out
fdivr
sub
sub
inc
lock
fwait
shrb
cs
fdivs
fimuls
daa
jp
es
inc
push
sbb
dec
adc
and
cmp
sarl
in
jg
adc
outsl
jo
inc
jl
imul
sbb
inc
int
cmpb
mov
adc
sbb
js
add
fildll
pop
push
mov
and
cwtl
pop
inc
ret
and
ret
lods
adc
adc
push
cmp
xor
es
lods
pop
cwtl
add
pusha
pop
movsl
leave
es
xchg
sahf
adc
test
dec
mov
imul
add
das
pop
or
or
insl
mov
mov
sub
loope
pop
mov
xchg
pop
sub
adc
adc
pop
inc
xchg
ficompl
insl
mov
add
pop
rclb
sbb
sbb
aam
pop
push
inc
and
jge
xor
mov
daa
rcl
sbb
mov
and
fcmovu
mov
push
jne
xor
dec
sbb
xchg
nop
mov
gs
pop
add
dec
outsl
xor
cmpsl
je
or
mov
sbb
mov
ret
jle
inc
sbb
xchg
testl
iret
lock
xchg
cmp
xchg
sub
in
inc
or
adcb
sarl
pop
jno
test
or
in
mov
pop
and
scas
mov
adc
pop
aaa
xor
sbbl
sub
jp
add
sbb
or
jp
aam
sti
adc
pop
add
pop
popf
push
movsl
iret
cmp
pop
bound
dec
add
xchg
pop
push
push
aam
movsl
add
or
test
pop
roll
jg
orb
or
push
add
xor
jns
lods
xor
or
jbe
inc
add
and
inc
lcall
mov
inc
mov
arpl
mov
xchg
cmp
jl
jnp
xorl
jne
sbb
sub
cltd
dec
pop
jne
sbb
inc
and
mov
mov
pop
ja
add
roll
cli
add
ja
inc
cmp
fwait
lcall
sbb
or
stos
pusha
adc
and
dec
sbb
pop
mov
xchg
loope
or
loope
popf
push
jns
cs
cli
sub
and
lods
cmpsl
sbb
inc
lods
sub
adc
push
cmp
dec
xchg
push
movsb
xor
ds
loopne
arpl
insl
cltd
shll
lods
inc
aaa
xor
sbb
ficompl
or
mov
cmpb
inc
or
addb
jecxz
xchg
leave
xor
sub
icebp
jnp
push
xchg
fcoml
xchg
popf
push
ret
orl
or
mov
cmp
cli
push
push
or
xor
push
stos
mov
xlat
adc
push
jno
daa
ret
and
hlt
loope
cmpsl
push
mov
pop
shlb
inc
jo
in
loopne
xlat
imul
ja
xor
mov
test
and
xchg
fwait
adc
xchg
jo
dec
sarb
add
scas
repz
pop
mov
test
imul
js
subl
jne
rcr
sbb
sti
add
add
test
cmp
mov
push
mov
push
add
shr
cmc
cld
and
jmp
pushf
cmpsb
mov
mov
out
adc
add
test
dec
cwtl
mov
clc
xor
dec
pop
cs
xchg
sub
push
adc
ljmp
popa
mov
cmp
xor
dec
mov
imul
orb
jo
adc
and
rcr
push
sub
mov
popl
test
fcompl
aam
and
add
and
ret
mov
mov
xchg
mov
cmp
push
and
gs
push
in
mov
lcall
jo
fstpl
push
cltd
mov
imul
test
pop
subl
inc
jb
mov
loopne
push
insb
fwait
and
scas
sbb
add
or
orb
enter
or
inc
and
fwait
xchg
lds
jb
aas
push
arpl
push
cmpsb
shll
add
jno
mov
push
xchg
and
sbb
sti
jb
outsl
push
add
addl
out
mov
mov
je
in
ret
fwait
fwait
or
mov
xor
and
push
cli
pop
xor
enter
and
mov
lahf
call
or
sbb
push
mov
shrb
inc
cmpsl
or
xlat
jns
sti
add
push
push
out
or
add
xor
cmp
sub
inc
pop
cmp
cmp
sub
adc
aaa
xor
jge
jg
mov
and
sub
mov
jmp
movsl
cmp
push
test
push
push
pop
cmp
pop
push
insb
lods
pop
jl
xchg
xchg
test
adc
mov
icebp
sub
cmp
rcll
push
mov
and
inc
inc
data16
adc
aas
pop
sbb
xlat
shlb
ss
sbb
iret
xchg
lock
enter
jae
test
movb
xchg
and
dec
sub
xchg
add
mov
adc
repnz
fs
inc
jne
jno
pop
sti
sbbl
xor
mov
out
jno
out
add
lahf
in
jae
js
sub
pop
add
adc
out
test
inc
mov
out
inc
or
jb
sub
adc
mov
add
ja
sbb
xchg
aam
mov
xor
shrb
in
loopne
sbb
loopne
dec
rorl
lods
lods
loop
gs
xchg
in
xchg
add
in
xor
jmp
ja
jecxz
loope
dec
push
lods
add
fstpt
fs
xor
adc
jno
cs
xchg
sti
push
jno
mov
mov
lods
xor
inc
data16
ret
fldcw
mov
mov
ss
sbb
iret
lea
inc
fs
mov
and
inc
pop
jo
or
insl
push
jnp
outsl
cmp
dec
sub
inc
rcll
push
bound
xchg
mov
mov
pop
add
mov
xchg
sti
lea
sbb
add
insb
mov
sbb
fsts
mov
lock
cmc
mov
jle
sbb
arpl
icebp
mov
add
adc
xchg
xorl
inc
jmp
mov
cmp
xchg
loopne
adc
jecxz
jmp
sbb
pop
inc
fcmovnbe
push
pop
dec
cltd
mov
mov
jg
push
mov
mul
sbb
mull
adc
xchg
fwait
mov
outsb
les
pop
mov
cltd
sbbl
inc
gs
adc
sub
orl
ret
mov
add
testl
mov
popf
lcall
xchg
inc
addr16
inc
arpl
xchg
push
addb
loope
sbb
movsb
mov
xchg
add
cmp
cmc
mov
outsl
or
sbb
xchg
xchg
cs
xor
mov
mov
cmpsb
dec
xor
mov
imul
or
inc
inc
shl
rcl
stos
iret
aad
icebp
jl
inc
xchg
cmp
rdmsr
js
inc
sub
rorl
xor
push
pop
adc
and
popf
addl
pop
popf
adc
adc
call
adcl
pushf
adc
rcl
jl
out
sbb
dec
pop
iret
push
jo
and
shll
xchg
xlat
and
or
mov
xchg
push
imul
sbb
inc
sub
pop
and
fsubl
xchg
cmp
and
out
lods
or
negl
shll
push
jp
sub
jo
jge
push
daa
fiaddl
icebp
cs
mov
mov
jl
xchg
cmpsb
mov
sbb
mov
dec
ljmpw
xor
cmp
jno
pop
icebp
cmp
dec
call
popf
inc
pusha
sbb
add
jb
add
or
adc
push
jbe
loop
test
inc
out
mov
xchg
aaa
adc
les
pop
dec
xchg
loop
mov
arpl
sub
fstp
loop
lretw
dec
loopne
mov
bound
ret
add
cmp
std
outsl
jno
add
sbb
rol
and
push
mov
adc
fabs
mov
xchg
or
shll
lret
mov
fnsave
loop
dec
lea
sub
add
int
sarb
jp
subb
sarl
adc
lods
pop
and
movsb
pop
and
iret
xlat
aam
sub
testb
and
mov
filds
lock
sarb
ds
pushf
lret
jecxz
jo
push
pop
scas
or
lret
ja
or
pop
notl
stos
add
jp
inc
js
movsb
popf
insl
scas
hlt
push
mov
adc
cmpsb
pop
roll
mov
jbe
and
leave
xchg
and
inc
cmp
sub
lret
and
sub
jae
daa
cltd
add
xchg
scas
adc
dec
dec
rcrl
push
sub
sbb
adc
loopne
xchg
xor
imul
mov
or
mov
dec
shll
das
mov
data16
scas
sub
pop
add
pop
sub
inc
dec
add
sub
push
pop
jo
add
jae
push
pop
or
push
inc
mov
pop
shlb
and
cmp
jb
cmp
or
xor
sbbb
enter
dec
and
jg
test
dec
std
sbb
shl
icebp
ja
jae
ds
roll
dec
and
push
ret
loopne
or
aaa
mov
xor
add
mov
inc
lods
lcall
dec
or
lret
inc
test
cmp
test
adc
fsubrl
ret
mov
clc
and
add
arpl
add
test
xchg
jg
cmpb
xchg
loopne
or
in
stos
or
into
aad
or
repz
sub
dec
push
icebp
cld
rolb
push
jo
imul
fdiv
xor
lods
test
aad
xchg
or
add
push
or
jo
mov
and
and
inc
imul
aam
cmpsb
pusha
xchg
daa
jg
mov
push
dec
test
xchg
cmp
lods
sti
and
lods
sahf
xor
cs
inc
lea
cmp
sub
loopne
mov
inc
cmc
js
xor
jb
js
mov
mov
sbb
and
mov
leave
lods
jmp
popa
xor
std
and
shll
mov
or
or
ret
imul
inc
jg
pop
xchg
fisubrl
mov
mul
pop
push
movsl
sub
mov
pop
das
ror
rcll
fimuls
popf
or
out
and
sub
sbb
int
data16
push
mov
addl
jl
movb
aam
sub
mov
sbb
xor
dec
pop
andl
popa
test
dec
dec
and
xor
push
jb
xchg
pop
pusha
jnp
xor
push
adc
insl
pop
pop
test
push
jecxz
aaa
mov
mov
and
mov
dec
fwait
add
mov
imull
fisttpl
cmpsb
jmp
cmp
or
xchg
outsl
inc
ja
jge
ret
xor
adc
gs
add
mov
fdivrl
xor
push
push
mov
rorb
aam
sub
jmp
adc
lods
addr16
loop
stos
xchg
and
or
sbb
inc
bound
xor
push
cmp
add
lret
sbbl
aas
xchg
add
shlb
jg
ret
jo
jne
subl
add
imul
arpl
mov
pop
add
push
cld
icebp
xchg
loope
mov
adc
or
aam
in
cwtl
and
stos
daa
mov
inc
jge
pusha
es
jmp
add
mov
cmc
inc
ss
cmp
pxor
lahf
xchg
out
in
mov
lea
add
aaa
pop
jnp
adc
mov
or
sbb
sbb
add
pop
jnp
push
sbb
loop
xorl
daa
sbb
or
pop
dec
andl
mov
mov
out
pop
in
adc
pop
xorb
ret
fisttps
mov
aam
or
iret
scas
shrb
arpl
mov
adc
inc
shlb
push
lret
dec
push
adc
mov
out
adc
aad
ja
mov
xor
fnsave
or
jae
addl
mov
push
leave
push
push
pop
pop
lods
test
out
cltd
test
xor
ret
add
adc
pop
out
pop
mov
pop
xchg
rcll
mov
and
fwait
sbb
adc
test
dec
shl
xor
dec
or
cmp
inc
in
std
or
or
lret
dec
iret
sbb
mov
mov
pop
mov
mov
lret
sbb
xor
mov
xchg
shr
jo
jns
lods
gs
add
push
adc
adc
sarl
cmpsb
scas
sub
ret
outsb
stos
pop
xor
shr
nop
pop
bound
test
inc
sbb
add
les
push
popa
add
cmpsl
in
push
xchg
and
pop
sbb
lret
loope
mov
xor
pop
jmp
add
mov
mov
dec
pop
push
xor
test
inc
outsl
and
cmc
sub
add
mov
andb
addr16
cld
cmp
dec
xor
jno
pop
dec
aas
push
jp
add
int3
xor
inc
cmpsl
pop
arpl
roll
xchg
xor
test
faddl
adc
push
les
push
and
add
pop
push
mov
or
mov
int
jmp
fnstcw
cmp
sbb
inc
out
cmpsb
insb
add
cmp
rcr
jge
cwtl
aad
xor
xor
call
iret
cmpsb
xor
sub
enter
and
add
pop
pop
mov
jno
insb
jge
adc
fsubrs
mov
mov
lods
rcl
daa
mov
lds
stos
movsl
repz
mov
mov
xchg
or
push
aam
adc
js
add
rorl
aaa
mov
and
aaa
mov
in
xlat
cmpsb
xchg
andnps
sbb
dec
stc
jnp
fdivrs
in
xchg
xchg
fcmovu
ja
jne
dec
push
mov
dec
loope
andb
test
xchg
or
pusha
cmp
jns
xor
pop
mov
or
and
rol
cmp
sub
adc
sub
bound
out
in
pop
addb
rcll
leave
pop
push
out
fwait
mov
icebp
mov
xor
inc
sub
fldl
pop
nop
sbb
mov
xchg
inc
sbbl
push
outsl
std
cmc
xorb
mov
mov
test
mov
in
outsl
subl
push
test
dec
xchg
arpl
das
pop
std
arpl
adc
arpl
test
test
test
lock
arpl
fadds
jecxz
fadds
mov
dec
movsb
lcall
mov
ret
jbe
sbb
nop
pop
flds
ret
push
jle
xchg
and
test
nop
xor
mov
xchg
shll
rolb
jnp
leave
int
or
lahf
jecxz
pop
push
adc
cmp
lahf
pop
mov
add
aam
dec
push
jne
inc
ja
test
mov
and
je
mov
jnp
xor
pop
in
in
xchg
icebp
mov
mov
ljmp
movsb
push
push
pop
cmp
rcl
aam
push
jecxz
movl
sahf
and
mov
test
rcll
pusha
stos
mov
jmp
inc
xchg
and
test
icebp
or
sbb
push
inc
sahf
leave
ljmp
and
shlb
aaa
loop
repz
mov
sub
das
test
pusha
nop
aas
xchg
or
aam
xchg
push
pop
ret
test
js
jno
in
xor
cmp
push
sbb
mov
btc
sahf
or
scas
lret
mov
in
sbb
fwait
cs
add
xlat
add
pusha
pop
scas
pop
cmpsl
lea
and
mov
arpl
jo
and
add
les
lret
cmpsl
mov
out
inc
xchg
push
scas
adc
loope
je
cmp
or
jmp
loop
adc
mov
xchg
lock
fldcw
add
cs
mov
or
cmpsl
ja
loopne
adc
int3
sub
lock
dec
push
xor
inc
mov
mov
adc
cmp
mov
je
gs
movsb
push
rcrb
jge
mov
mov
sub
aas
pop
dec
push
xchg
adc
test
repz
cmp
mov
jo
sbb
jnp
mov
loop
shr
subl
nop
mov
popf
sub
jmp
stos
mov
push
jbe
lret
adc
daa
or
xchg
adc
lahf
or
mov
or
mov
inc
fldenv
daa
mov
mov
mov
mov
pop
lahf
lods
add
jns
pop
or
shlb
ss
mov
jle
adc
or
cmpsl
lahf
out
loop
add
loopne
xchg
mov
into
push
xchg
dec
outsb
pushf
icebp
ret
jno
push
sbb
gs
jae
adc
dec
dec
cmp
jp
aam
sub
adc
aaa
out
ret
mov
andb
scas
test
xchg
scas
jge
pop
fs
or
sti
push
lods
or
add
adc
sub
pop
dec
or
inc
insl
inc
imul
xor
cmp
dec
jno
daa
adc
cmp
sarb
mov
inc
or
inc
addb
xchg
lret
jbe
xchg
xor
sbb
xor
cbtw
add
psubq
loopne
mov
scas
mov
les
mov
in
nop
out
or
add
std
imul
cmpsb
adc
or
xlat
out
xchg
out
push
ret
fistl
and
pop
mov
jb
mov
or
mov
ret
jo
add
pop
fidivrs
jp
push
pusha
lods
xchg
xchg
sti
das
adc
ror
imul
subl
and
push
movb
fistps
dec
lret
lahf
lret
inc
jb
test
lea
popf
cmp
rcrl
lods
mov
rolb
loope
ret
inc
mov
adc
push
ret
push
mov
scas
pop
mov
cwtl
push
sbb
lods
jno
or
cmpsl
cltd
or
out
addl
ret
hlt
fldenv
and
int3
dec
rorb
stos
xor
mov
mov
mov
pusha
xor
xor
mov
addr16
andl
ficomps
xlat
xor
sub
je
loopne
es
cwtl
xchg
stc
lahf
shl
lds
movsl
inc
data16
push
mov
fistl
arpl
add
mov
in
xchg
mov
leave
test
cmp
adc
imul
sbb
xor
pop
insl
sub
sub
fstpl
pop
and
push
shrl
or
aam
cld
pop
dec
xchg
mov
inc
inc
sbb
loope
mov
xor
loopne
mov
sub
ja
cmp
add
xchg
lock
je
testl
lods
ret
mov
loop
dec
in
jno
pop
add
jno
movb
jns
aas
rorb
icebp
bt
mov
movsb
in
jmp
aaa
xchg
rorb
daa
addr16
push
pop
ret
fs
push
fildl
pop
pop
cmp
pop
xor
pop
das
adc
stos
add
das
sbbl
xchg
mov
mov
mov
mov
jo
movsb
mov
repz
jo
fimuls
adc
fiadds
pusha
test
mov
add
lcall
xchg
sub
sbb
mov
adc
inc
int3
mov
push
cmp
stc
mov
push
jge
fisubrl
sub
push
mov
sub
and
or
inc
cwtl
mov
jne
pop
lods
sti
sub
or
add
in
adc
out
xlat
imul
rorl
mov
add
mov
clc
cmc
loop
testb
inc
in
sub
dec
xchg
ljmp
gs
xlat
xchg
das
adc
adc
cmpsl
xlat
sub
ret
je
jne
lods
out
aam
mov
adc
push
leave
xor
fst
adc
mov
cmpsl
in
inc
pop
adc
test
sbb
js
loope
scas
cltd
imul
cmp
insb
es
or
inc
aam
mov
or
mov
fcmovnb
inc
mov
sub
add
push
ljmp
dec
sub
cwtl
aaa
push
push
fcmovb
mov
loopne
imul
dec
cmp
movsbl
mov
fldl2t
jle
jecxz
daa
lods
inc
sbb
add
or
mov
jnp
test
and
jb
lds
mov
in
pop
roll
mov
daa
xor
and
xor
jg
inc
inc
adc
ds
mov
iret
sub
add
mov
dec
and
add
xchg
sbb
jl
jecxz
fists
nop
or
cmc
pop
dec
cmp
lods
push
dec
rorb
or
pushf
xor
lods
lds
adc
sbb
outsl
loop
push
fadd
mov
int
mov
mov
in
sub
push
or
inc
paddq
mov
sub
xchg
or
adc
stos
je
push
push
inc
lret
insl
adc
xchg
mov
cmc
insb
cmp
mov
cmp
cmp
push
mov
mov
repnz
xlat
add
mov
xorb
jae
push
mov
es
sub
adc
out
jo
dec
mov
push
xor
cmp
dec
xor
inc
sub
insb
cwtl
xchg
mov
mov
inc
or
cltd
daa
insb
adc
mov
fadds
stc
test
and
and
daa
iret
adc
push
sbb
mov
push
fwait
out
fsubrs
cmpsb
ljmp
std
mov
push
add
mov
imul
pop
push
sti
loop
dec
js
cwtl
icebp
cld
repz
stos
mov
jmp
ret
jbe
or
out
jge
jge
inc
movsb
mov
mov
leave
pop
mov
jnp
add
cmp
or
add
sbb
imul
jge
dec
push
pop
jg
inc
jmp
push
adc
sub
daa
fnstenv
add
dec
or
sbb
mov
adc
shrl
loope
aas
pop
ret
mov
shl
stc
adcl
push
lea
adc
dec
pop
and
shll
and
sub
outsb
ss
sbb
or
cmp
jle
pusha
sub
xor
xchg
mov
cmpsb
mov
sbb
mov
push
inc
or
ret
imul
push
push
aaa
insl
sub
mov
push
dec
fbld
gs
add
or
adc
sub
mov
add
in
add
sbb
rolb
or
jo
push
popa
and
cmpsl
add
jns
jnp
test
xor
divl
and
adc
lds
dec
cld
cmp
sub
addb
ret
adc
mov
pop
fisubs
mov
insb
lods
bound
es
adc
mov
jno
or
test
ret
fnstsw
add
stos
lcall
jecxz
mov
cs
mov
pop
push
pop
sti
jg
jnp
fsubl
aaa
xor
push
and
rcrb
in
jmp
add
pop
dec
mov
and
push
lea
jno
and
prefetcht2
or
dec
cmp
ret
xor
aas
add
adc
and
or
and
dec
enter
nop
aam
add
pusha
mov
xchg
pop
jb
repz
pop
xor
and
or
ret
movsb
aad
popa
fadds
fwait
cmp
mov
sub
popf
aaa
test
fisubrs
enter
ss
mov
adc
int
lods
or
in
loope
sub
jns
inc
adc
and
push
jns
pop
and
sahf
mov
icebp
popf
jo
push
test
push
sub
dec
mov
call
or
jno
mov
cmp
cltd
shlb
push
mov
add
dec
in
rorb
jle
imul
mov
jg
in
in
xor
add
das
dec
adc
loop
imul
stos
mov
pop
in
aam
jge
movsb
pop
adc
insb
jae
mov
xor
sub
out
sti
pop
pop
test
ficoml
sub
mov
jl
fstpt
cmp
ret
cmpl
xor
or
sbb
pushf
or
nop
dec
jae
cmp
sbb
or
mov
addl
orl
test
lock
and
imul
fildl
pop
das
or
loopne
insl
mov
les
daa
sbb
sub
mov
add
call
or
push
loopne
push
or
lea
aad
xor
in
pop
aas
in
xchg
cmp
inc
in
sbb
inc
mov
push
adc
ss
xchg
out
andb
xchg
cmc
rorl
das
cmp
jl
mov
lahf
push
inc
fnsave
cs
ss
jg
pop
mov
cmpsl
rcll
sub
or
cmp
stos
mov
sbbl
jecxz
push
push
sarl
inc
or
fnstenv
fs
push
loopne
dec
dec
inc
aaa
int
popa
or
push
cmc
inc
pop
iret
std
add
ljmp
inc
pop
push
imul
or
or
pop
sub
rolb
dec
call
jnp
aaa
addl
mov
adc
sub
pusha
pop
mov
and
pop
outsl
fidivrl
shl
mov
jg
xchg
jae
nop
scas
mov
push
push
test
or
imul
popa
lods
mov
dec
pop
sub
rolb
insl
xchg
xchg
lret
popl
fldln2
gs
mov
fadds
fbld
or
jp
mov
addl
mov
sub
sbb
adc
lock
bound
xor
sbb
pop
push
xor
xchg
mov
or
shlb
cmp
adc
mov
cmp
mov
in
dec
adc
lahf
inc
mov
dec
fmull
dec
jg
repz
lret
enter
aam
push
call
add
in
imul
shrl
lret
mov
sar
cltd
mov
mov
xchg
sub
add
dec
adc
fdivrs
mov
and
add
je
repnz
add
lods
lret
and
test
shll
or
lods
shlb
cmpb
cmpsb
out
pop
dec
pop
pop
push
dec
ja
sbb
movb
sub
adc
push
mov
subb
mov
mov
jp
mov
imul
fisttpl
adc
mov
or
enter
jge
mov
push
cmc
cmpsl
xor
cmp
or
jl
in
push
xor
out
aaa
sbbl
popf
add
jge
jne
xor
inc
and
out
adc
cwtl
dec
jno
push
mov
mov
pop
ss
hlt
sbb
enter
mov
adc
jg
pop
addb
scas
rorb
lods
push
setp
inc
sarb
push
sbbb
and
mov
push
repnz
dec
push
mov
or
addr16
cmp
mov
pushf
jle
clc
test
shlb
add
or
sbb
ret
adc
addl
adc
add
mov
mov
dec
cmpsb
sub
jecxz
dec
sbb
pop
jns
daa
pop
ja
push
ss
popa
jb
jb
push
or
jmp
aad
add
adc
pop
rolb
adc
pop
sub
out
mov
add
pop
cs
dec
push
mov
add
or
sbb
fistpll
lret
sti
or
pop
lea
js
arpl
push
add
push
mov
pop
fistl
adc
movsl
movhps
and
mov
sub
xchg
add
push
out
leave
add
adc
push
push
test
cmpsb
jg
movsl
stos
in
push
mov
mov
inc
add
and
nop
mov
xchg
mov
mov
adc
rorb
inc
xchg
push
or
sub
pop
scas
dec
fdiv
aad
adc
and
jne
arpl
test
jnp
cmpsb
inc
scas
cmp
pop
arpl
pop
sub
fstpt
dec
lock
ljmp
mov
mov
aas
test
imul
pop
rclb
repz
xor
sbb
scas
cmc
jne
loopne
pop
sub
dec
mov
sbb
shlb
into
emms
or
sbbl
repnz
mov
aam
push
mov
bound
mov
sahf
nop
nop
outsl
out
mov
inc
rolb
lods
fstp
dec
outsb
bound
lea
xchg
mov
scas
adc
mov
jnp
mov
mov
and
xor
pop
es
js
jecxz
jne
add
sbb
sbb
shrl
inc
lds
inc
aam
jecxz
pop
jge
mov
insl
sub
test
cmpsl
add
aaa
mov
mov
in
push
scas
inc
das
cmp
dec
shlb
test
rclb
les
cmpsl
mov
inc
jmp
sbb
mov
adc
pmulhw
insl
adc
add
sub
mov
mov
insl
or
movsb
dec
inc
or
mov
add
mov
mov
add
add
cmpsl
call
jge
xchg
cmp
rcl
stos
dec
call
cwtl
dec
gs
inc
les
or
pop
test
or
pop
cld
inc
mov
loope
aaa
jecxz
push
ret
adc
test
mov
mov
jmp
out
aad
mov
mov
add
ficomps
push
mov
mov
lret
or
in
jo
int3
test
out
das
dec
pop
pop
mov
jb
arpl
dec
lods
inc
and
imul
jnp
jmp
inc
pop
adc
sub
lock
je
push
popa
rorl
mov
pop
or
in
cmp
add
fwait
arpl
jecxz
mov
out
ss
jmp
sbb
add
es
js
andl
mov
sub
and
mov
and
stos
xor
push
test
push
mov
or
ja
and
xlat
sub
ret
jo
lahf
cwtl
fiaddl
dec
loop
fdivr
pop
push
lods
cmp
sub
sahf
jmp
in
push
orl
adc
or
inc
mov
das
add
in
dec
xor
or
ds
cwtl
mov
bound
cltd
push
enter
inc
xor
mov
shrb
adc
cmpsb
mov
xchg
fwait
daa
mov
add
lock
xchg
das
inc
or
outsl
dec
in
call
lahf
shl
and
inc
aaa
lahf
mov
fldl
repnz
imul
and
push
shlb
jnp
popf
lock
les
and
cmp
mov
xchg
sub
xchg
cmpsl
outsb
xchg
or
inc
or
push
dec
xor
and
sub
or
mov
cmp
and
mov
dec
cmpsb
sahf
imul
inc
or
jb
jb
sbb
cmp
outsb
adc
daa
movsl
stos
imul
mov
jb
jmp
sub
adcl
aad
pop
push
sbb
cmc
mov
into
sbbb
sahf
test
outsb
cmc
test
pop
push
xor
or
loope
jmp
jge
pop
addr16
enter
test
and
lods
inc
mov
or
scas
jg
ret
movsb
xchg
fstl
push
add
pop
and
add
pop
mov
jmp
mov
rorl
testb
lods
xchg
out
fidivrl
pop
ja
xor
mov
mov
xchg
add
xor
mov
push
mov
in
add
adcl
jns
and
js
xor
sbb
or
add
mov
push
out
sub
inc
rorb
mov
into
cmp
dec
pop
mov
lahf
or
sub
std
enter
adc
jge
bound
test
mov
push
inc
ret
mov
sub
or
cmp
movups
add
dec
jge
pusha
xor
es
aam
inc
mull
test
je
push
jno
xor
lods
sti
add
imul
push
cmp
fwait
popf
pop
in
cs
push
pop
xchg
mov
adc
mov
cwtl
insl
ret
ret
aaa
mov
rcrl
shll
and
push
push
shrd
jae
mov
jne
inc
or
adc
mov
mov
movsb
nop
inc
test
fstps
or
pop
insl
inc
sub
xchg
mov
fisubrl
repnz
into
xchg
scas
nop
subb
sahf
cmp
xor
sub
xchg
xor
test
in
dec
lahf
push
push
sarl
ret
mov
push
xchg
or
adc
test
cmp
outsb
and
pop
sub
or
sub
adc
xor
inc
loope
lret
add
repz
inc
add
pop
shlb
scas
mov
jge
lock
sub
mov
push
or
out
rcll
xor
test
mov
ret
notl
insb
xchg
and
fmuls
cmpsb
mov
fsubs
sbb
xchg
add
pop
das
rolb
or
dec
jl
insl
cmp
pop
addb
repz
imul
xor
mov
lods
dec
out
nop
push
test
test
insl
pop
pop
push
ljmp
xchg
or
or
repnz
xlat
sub
or
mov
sbb
aad
iret
inc
or
mov
inc
enter
iret
xor
inc
fwait
movsb
and
ret
mov
aas
ret
xlat
push
lock
lock
dec
pop
xor
std
or
mov
add
xor
sbb
xor
dec
or
pop
push
or
test
sbb
xchg
shrb
ja
or
addr16
jp
sbb
das
sbb
hlt
inc
sub
insb
pop
xor
sbb
add
xor
in
vorpd
movsl
jmp
movsl
sub
lea
test
jg
adc
cmp
xchg
jo
push
dec
push
outsl
fwait
inc
jmp
call
enter
adc
add
lods
fists
and
xor
mov
push
mov
and
mov
mov
ss
adc
push
cli
mov
push
fimull
and
iret
mov
mov
and
mov
mov
jmp
or
mov
push
nop
stos
rcl
jecxz
imul
lea
xchg
xchg
lret
dec
mov
fsubrs
movsl
jp
lret
mov
sub
pusha
ljmp
cwtl
and
loopne
mov
cmp
es
fs
in
mov
lret
and
int
mov
adc
ret
add
loope
aas
cmc
js
in
mov
dec
mov
add
out
or
inc
add
ljmp
fimull
push
rcrb
xor
mov
imul
xchg
imul
mov
dec
xchg
jne
je
mov
lods
les
pop
dec
or
adc
lret
ret
xor
cmpsl
loope
sub
xorl
add
cmp
cwtl
repz
mov
pop
sbb
add
sbbb
and
sbb
or
add
xchg
imul
mov
mov
or
daa
xchg
fadd
push
inc
jl
sub
arpl
lret
js
ret
fists
and
rol
scas
movsl
jge
xor
sub
movsb
sub
inc
jne
adcb
test
lock
sbbl
mov
insb
adc
lds
xchg
and
jnp
int3
add
scas
xabort
addr16
fldl
pop
sub
pop
adc
push
insl
ret
dec
cmpsl
mov
or
js
mov
xor
mov
pusha
and
jbe
adc
adc
pop
jge
adc
sti
jg
xor
test
inc
in
sti
inc
cmp
int3
ret
cmp
xchg
xor
js
test
addl
or
cmp
cmp
loope
lods
aas
mov
es
add
or
std
sbb
or
scas
mov
fwait
int
mov
sbb
stos
repz
xrelease
sbb
pusha
mov
push
pop
mov
inc
fs
mov
mov
sbb
xor
sub
jmp
mov
shlb
xchg
cmp
adc
cmpsl
pop
sub
arpl
mov
imul
fiaddl
ret
loopne
sbb
jmp
pop
data16
out
ja
loopne
or
dec
xchg
jmp
adc
jo
cltd
loope
loope
cmp
bound
in
or
or
imul
inc
aad
fildl
lock
jnp
les
ja
and
out
subl
pop
sub
ss
adc
hlt
and
add
ss
sbb
pop
je
outsb
and
fcoms
cltd
adc
pusha
mov
fstl
xor
xchg
inc
imul
inc
push
xchg
xchg
lahf
test
lahf
or
jmp
loope
or
dec
inc
cs
ds
inc
xchg
imul
adc
mov
xchg
mov
mov
test
popa
mov
mov
xlat
xchg
jbe
mov
push
or
pop
pop
adc
popa
sarb
mov
cs
rorb
adc
test
pop
int3
aam
test
lret
adc
daa
sbb
test
out
lcall
or
shl
repz
imul
xchg
push
imul
pop
cmpsl
inc
mov
add
xor
xchg
pop
dec
sbb
mov
ret
xchg
dec
lret
mov
cs
push
sub
jbe
cli
stc
lock
icebp
repz
xchg
and
loope
stc
lret
unpcklps
mov
sbb
mov
iret
repz
push
idivb
and
nop
adc
jl
or
dec
jl
sbb
incl
movsl
jmp
lcall
cli
xor
and
ficompl
popa
divl
clc
mov
loopne
cmp
stos
xchg
scas
mov
add
pop
sub
add
imul
call
pop
rcll
jno
loopne
jae
test
out
loop
mov
loop
push
imul
and
jecxz
scas
cmp
mov
jne
and
insl
shlb
stc
fsubl
pop
mov
inc
movsl
xor
adc
loopne
popa
add
xor
das
adc
adc
sbb
scas
jecxz
lock
adc
or
jne
je
idivb
push
jecxz
nop
loope,pn
icebp
or
xor
mov
fisttpl
jge
ret
lods
daa
test
lock
lods
cltd
ss
inc
push
push
sub
and
mov
notl
mov
dec
fdivs
pop
aam
fcompl
mov
jno
xor
add
ret
out
or
aam
cmc
lods
adc
pop
push
nop
ret
lods
xlat
dec
xchg
jg
scas
push
fsubrs
adcl
lods
orl
jg
or
xlat
push
movsl
jg
aad
fiaddl
cmpsl
pop
lahf
cltd
repz
js
ja
push
mov
loopne
stos
or
aas
jmp
push
mov
push
inc
jae
aad
leave
jmp
xchg
mov
test
repz
bound
jbe
daa
jns
movsl
add
ret
dec
cmp
call
testb
rorl
mov
and
and
in
jl
rcl
cs
mov
xor
popl
in
sbb
out
mov
pop
decb
push
xchg
cmp
les
into
pop
pop
icebp
ficoms
or
jnp
lods
aaa
xchg
sub
adc
loope
xor
jmp
mov
dec
sbb
fwait
nop
add
adc
popa
or
add
jmp
xchg
adc
in
xor
dec
pusha
daa
mov
loopne
rcr
fnstenv
or
popa
movsb
roll
movl
gs
mov
dec
sub
push
imul
aad
xchg
in
push
movsl
cmp
sbb
call
pop
lret
mov
icebp
adcb
mov
lods
inc
xor
scas
pop
rcr
daa
ret
psrlw
aam
push
arpl
mov
aaa
adc
mov
pop
daa
sti
and
and
push
jge
addb
sarl
addb
dec
divb
dec
test
nop
in
insl
xchg
xchg
add
orb
addr16
movsb
popf
pop
pusha
daa
sbb
add
inc
out
and
gs
jmp
xor
adc
sub
cmpsl
and
jbe
addr16
test
imul
lret
xchg
jns
shll
lock
or
sete
aaa
nop
pop
xchg
in
mov
in
daa
or
add
aas
adc
mov
mov
in
das
jl
call
dec
sub
sub
fst
cmc
add
xlat
pop
pop
out
sbb
cmpsl
xlat
or
pop
stos
mov
pushf
adc
mov
xlat
add
xchg
hlt
sti
pop
dec
adcl
enter
sbb
mov
loope
add
lods
xchg
jno
or
subl
mov
aad
cmp
inc
push
push
fstpl
dec
mov
xadd
arpl
test
outsl
iret
jecxz
pop
sbb
add
aaa
add
in
sub
add
fildll
and
adcl
or
insl
and
fsubrs
xchg
jecxz
mov
ds
pop
dec
js
jg
adc
nop
addl
shrb
inc
sub
jo
sarb
mov
add
dec
xchg
add
push
sub
sub
mov
in
sub
mov
into
mov
mov
repnz
sub
in
fs
fbld
es
jbe
call
lret
mov
fdivrs
or
int
cltd
xchg
int
pusha
adc
adc
ss
call
fsubrs
and
mov
sub
ret
push
lret
mov
gs
cmp
dec
fbld
cmc
adc
insl
fldt
rclb
roll
push
mov
mov
leave
test
rorl
xchg
mov
mov
rcrb
popa
xlat
cmpsl
ret
js
xor
in
jmp
fsubrl
add
scas
and
movsl
popf
lds
dec
mull
mov
and
mov
xchg
insl
cs
test
lock
shll
inc
mov
rcr
inc
nop
xor
pop
out
cli
push
cmp
aaa
mov
xchg
cmp
addr16
data16
dec
enter
mov
mov
fsubp
sub
pop
pop
xor
add
mov
in
xor
sbbl
icebp
cmp
int
ja
mov
jae
negl
fldt
adc
pop
add
loopne
movsb
mov
clc
push
sub
xchg
out
mov
sub
jmp
sub
mov
imul
mov
push
xchg
imul
jno
cmpsb
and
push
fcmovnb
jbe
lock
push
adc
push
cmp
call
adcb
out
cmp
xchg
mov
filds
scas
fcmovu
cmp
test
cs
scas
jge
test
xor
or
jo
fwait
enter
sub
cmpsb
test
fisubs
and
jmp
jmp
pop
jp
outsl
loopne
mov
outsl
imul
insl
popf
jae
xchg
inc
arpl
jnp
clc
shll
jg
xor
sbb
fdivrs
lods
or
push
scas
stc
inc
jnp
push
fnsave
lods
mov
fistpl
mov
cmp
fnsave
xchg
pop
mov
xchg
mov
cmpsl
and
push
fwait
mov
lahf
pop
mov
cmp
addl
shr
jnp
add
les
cmp
dec
fstl
das
dec
jecxz
jne
sarl
mov
mov
scas
cmp
fisubs
pop
scas
mov
adcb
add
or
fbstp
xor
imul
cmp
jmp
cmpsb
daa
cmp
rcl
adc
pop
sbb
aad
or
psllq
mov
aam
xor
insl
mov
pop
das
mov
insl
and
xchg
xchg
push
rolb
and
addr16
fisttpll
in
or
fwait
scas
addl
mov
rcrl
call
pop
sbb
repz
iret
cmp
or
adc
sub
cmp
pop
sbb
pminub
arpl
jecxz
dec
arpl
push
jp
enter
ja
adcl
inc
pop
bswap
mov
call
lret
sahf
test
sub
out
popf
rcl
xor
lret
mov
sti
jmp
orb
mov
xor
data16
das
aam
jo
and
xlat
cmp
cmpsl
jl
jo
je
aas
xor
inc
in
fiadds
lea
push
sub
daa
fstl
fwait
mov
icebp
pop
inc
mov
xlat
mov
mov
divl
outsl
jns
addr16
mov
mov
xorl
aad
sub
inc
push
cmp
cmpsb
rcr
in
add
pop
jecxz
cmp
lret
mov
sbb
idivl
mov
dec
cmp
andl
adcl
stos
outsb
cmpsl
pop
mov
inc
dec
push
ss
nop
cmp
clc
imul
dec
xchg
xlat
jnp
mov
mov
setne
aaa
out
arpl
and
popf
fldcw
mov
or
jecxz
adc
scas
test
and
pop
mov
gs
mov
cmp
cmp
inc
mov
ret
ja
add
ffreep
loope
jle
lock
sub
movsl
ja
testb
pop
negl
cmp
pop
iret
popa
scas
sub
mov
fldt
sahf
sar
pusha
adc
xchg
push
mov
sbb
cmp
mull
xchg
sbb
sub
dec
jl
xlat
jb
pop
inc
sbb
cmovo
push
cmp
fidivrl
cmp
pop
shll
ss
sub
hlt
adc
or
imulb
sub
lahf
fmuls
jecxz
xor
adc
jp
stos
fs
lds
add
popa
jp
cs
sbb
loopne
jmp
pop
and
sbb
dec
mov
shlb
sbb
movsb
add
shrl
icebp
sbb
mov
pop
addl
std
xlat
push
and
fistpll
test
mov
adc
sub
sub
sub
jne
pusha
inc
xchg
and
jnp
mov
and
subb
hlt
and
pusha
adc
push
and
add
mov
lods
add
or
or
sub
adc
pusha
sbb
xchg
loope
into
pop
or
sub
jecxz
cwtl
cmpsb
sbb
dec
mov
enter
mov
or
pop
fstl
iret
sub
mov
popa
add
sub
dec
xor
cmp
sbbb
jo
xchg
cmovno
jg
push
xchg
mov
js
out
mov
popa
rclb
repz
and
ret
pop
mov
push
sbb
push
push
aam
xchg
hlt
mov
add
jge
in
cmp
adc
sub
enter
inc
mov
inc
nop
test
mov
or
push
addr16
pop
rcr
or
cmp
mov
cmp
adc
sbb
je
int
fsubp
xor
push
xor
scas
test
push
lret
test
jecxz
insl
daa
mov
cmp
sarb
pop
pop
and
push
nop
stos
pop
test
ds
imul
jmp
fnsave
repz
jnp
jl
cs
and
mov
add
mov
imul
mov
adc
or
lahf
pop
mov
lods
clc
lock
rclb
push
jl
or
and
sbb
pop
sub
mov
leave
pop
arpl
pop
jo
push
sub
fwait
test
and
cs
sub
iret
inc
push
and
mov
adc
mov
sbb
daa
add
jl
xchg
pop
addr16
jp
xor
inc
push
push
pop
cmp
xchg
iret
push
ret
sarb
in
push
inc
ret
addl
sub
mov
push
mov
ds
sub
pop
fnstcw
add
and
movl
das
and
cmp
jecxz,pt
xlat
xor
xchg
mov
sbb
adc
cmp
stos
fwait
es
add
cltd
lahf
ret
cmpsb
xchg
adc
ret
xchg
mov
in
test
xor
jp
pop
and
sub
xchg
mov
ret
push
gs
mov
xchg
mov
push
xor
shll
negl
mov
cmp
inc
mov
add
sub
xor
comiss
cmp
jl
ja
fsubrl
arpl
sbb
ds
xchg
hlt
scas
xchg
repz
xor
add
popa
es
dec
shlb
test
adc
inc
xlat
lods
sarl
shll
jmp
pop
lock
and
pop
gs
pop
sahf
dec
js
xchg
ds
cli
pop
and
add
cmp
pop
jne
mov
aam
dec
jp
inc
push
inc
call
inc
pop
rcr
clc
and
outsb
xchg
mov
inc
ss
jge
mov
aam
and
mov
mov
aad
or
jecxz
xchg
fstp
mov
popl
das
jle
scas
fimuls
or
dec
push
dec
sbb
or
rorb
and
nop
inc
inc
fnsave
loopne
push
aas
cs
and
std
sub
test
xchg
popa
cs
testl
pop
cmp
adc
mov
aas
mov
cwtl
and
and
cmpsb
and
dec
cmp
lds
ss
or
lea
pop
insl
pop
mov
arpl
mov
into
and
push
xchg
xor
jp
pop
cltd
pop
mov
jnp
pop
adc
push
cmp
pop
sbb
loopne
adc
cmp
inc
lds
push
bound
push
inc
push
adc
loope
adc
adc
inc
and
lods
mov
and
es
arpl
sbb
cmp
pop
and
jl
mov
pop
push
ret
sahf
rorl
mov
dec
sub
jns
test
xchg
test
aas
lods
xor
rorb
mov
repz
adc
lret
mov
push
mov
popa
cld
nop
sub
test
sbb
faddl
add
andl
xchg
mov
out
mov
dec
int
lods
repz
xchg
popa
adc
pop
sub
nop
sbb
enter
jb
imull
push
mov
add
xor
xchg
rclb
movsl
lods
add
or
nop
jo
mov
aad
movb
ss
cmp
push
or
mov
xchg
jae
sbb
leave
loopne
leave
jae
xlat
or
fmull
mov
ret
dec
sbb
cmp
jns
rorl
je
adc
mov
inc
sbb
or
xor
cmpb
jo
test
lcall
outsl
js
sbb
pop
dec
push
fadd
adc
int
daa
fs
xor
push
das
jns
loop
push
mov
inc
fsubs
iret
inc
mov
cmp
jae
lea
jo
sarl
mov
pop
adc
pop
push
push
mov
jg
add
dec
jnp
leave
sbb
sbb
push
adc
ret
shr
loope
js
and
aam
pop
fsubrs
push
pop
enter
test
add
jp
push
and
pop
push
xchg
in
test
pusha
sbb
das
bound
loope
lret
subl
mov
cmc
loopne
and
sarl
add
adc
cmp
pop
inc
push
out
shl
cmp
popa
out
cmp
pop
lahf
pop
std
incl
test
pop
adc
jno
inc
lods
adc
cmp
lret
imul
inc
mov
add
es
and
cmp
pop
subb
or
add
call
adc
xor
mov
mov
push
inc
outsb
and
dec
xchg
mov
jbe
ret
test
inc
pop
test
cmpsl
mov
or
hlt
scas
xor
pop
add
jmp
aas
xor
mov
test
pop
xchg
jl
xchg
sbb
iret
lea
pop
popf
mov
xor
jae
cmp
jne
mov
add
fisttpl
add
adc
test
pop
aas
mov
fidivrl
or
adc
pop
mov
jne
aas
mov
mov
andl
mov
test
das
add
cmp
movsb
pop
sbb
mov
sarb
mov
mov
mov
and
rcll
gs
jb
andb
arpl
mov
shlb
mov
push
outsl
faddl
or
mov
adc
mov
mov
btr
xor
adc
mov
and
adc
inc
xchg
mov
mull
xchg
lahf
push
push
xchg
and
out
sbb
push
mov
add
mov
adc
test
test
push
pop
push
push
add
pmullw
push
inc
sbb
dec
dec
ss
pop
in
mov
gs
xor
stc
add
insb
jbe
push
outsb
jno
nop
outsb
adc
inc
test
and
or
xchg
cmp
jle
pop
mov
pop
pop
rolb
fcmovnu
sbb
shll
jp
in
cmp
out
jmp
sahf
xlat
adc
add
sbb
sbb
cmp
cmp
test
stos
jbe
mov
xor
ja
jb
pop
loope
stc
and
daa
in
adc
pop
sbb
mov
lds
inc
stos
inc
sbb
sub
push
insb
ja
mov
and
push
cmp
inc
push
add
inc
filds
xor
and
fs
add
mov
cmp
subl
and
push
inc
xor
ret
add
pop
push
inc
sbb
imul
dec
imul
inc
mov
stos
dec
das
mov
cmp
mov
or
addr16
mov
pop
mov
loopne
popa
cmp
aaa
cmp
adc
mov
add
roll
push
cmp
cmp
cmp
mov
sub
sub
hlt
shlb
pop
scas
pop
sub
je
je
test
adc
popa
dec
push
and
add
js
inc
rol
push
into
or
mov
cltd
mov
pop
push
dec
pop
repnz
fwait
or
add
xchg
xchg
test
insb
xlat
repnz
int
das
verw
mov
sbb
or
loope
les
cmc
sub
jo
ds
inc
pop
dec
inc
cmpsb
pop
xchg
inc
iret
loopne
sbb
inc
and
pop
cltd
movsb
cld
pop
adc
add
daa
and
sub
dec
mov
push
sub
dec
loope
movsl
ds
out
loope
stc
icebp
std
mov
sbb
xor
cmp
xchg
loope
jnp,pt
dec
in
xor
mov
aaa
dec
jae
ss
in
lea
loope
xchg
rcrl
fstpl
popf
insl
sbb
fwait
mov
cmp
cmp
cmp
pop
mov
sub
out
cs
fimull
xchg
jp
mov
xchg
fmull
std
mov
push
jne
das
fisttps
ss
aam
in
icebp
dec
adc
bound
decl
mov
inc
and
pop
loop
and
xor
or
xor
add
dec
cmpsb
mov
sbb
jnp
inc
mov
inc
loop
lret
add
add
xchg
pop
xchg
push
lock
ret
lods
sbbl
popa
mov
dec
int3
sub
add
movsl
pop
cmp
js
xchg
rorl
icebp
imul
dec
popa
lea
loopne
adc
punpcklbw
nop
aas
sub
and
movsl
and
aad
mov
mov
xchg
dec
rcrl
push
add
sub
subl
xchg
jbe
push
rorl
inc
cmp
inc
xchg
sub
lock
scas
test
and
cmpsl
mov
dec
xchg
inc
fsubl
mov
add
jo
mov
xchg
cwtl
mov
mov
inc
shlb
cli
adc
dec
xchg
pop
and
test
outsb
cmpsl
aad
mov
inc
pop
mov
nop
xor
push
subb
test
lcall
hlt
mov
jg
cmp
imul
and
insl
sti
jmp
or
ja
stos
mov
shlb
xor
fcoms
iret
mov
daa
test
icebp
pushf
fmuls
aas
dec
jnp
aaa
fsubl
inc
fldl
es
cmp
mov
mov
pop
xchg
int
push
mov
pusha
adc
lods
add
popa
and
inc
sbb
xlat
xchg
pop
xor
ret
stos
jb
cmp
inc
mov
inc
fcomps
pop
imul
jle
pop
dec
std
sbb
aad
jmp
jle
int3
or
sub
cmp
imul
fisttps
add
jb
cmp
fistpl
aad
jae
add
mull
out
xor
es
inc
pop
inc
sbb
mov
iret
inc
in
dec
mov
cmp
inc
fwait
ret
or
mov
pcmpgtd
in
aam
call
jne
push
sbb
sub
int3
scas
pusha
and
jbe
jbe
js
add
dec
movsl
dec
jnp
sub
flds
fisttpll
or
inc
mov
cmp
jp
outsb
pushf
sub
roll
imul
push
in
lahf
xlat
push
aam
add
sbbl
bound
xor
fs
cmpl
adc
xchg
pop
cmp
cmc
imul
or
inc
mov
pop
jae
fisubrl
inc
jo
ret
add
sbb
popa
sub
mov
add
adc
xchg
gs
or
adc
lds
pusha
stos
fldcw
pop
mov
imul
dec
pop
subb
dec
pop
imull
popf
in
jp
cmpsb
arpl
cmp
push
cs
je
sub
pop
xchg
jo
sti
hlt
iret
addb
jnp
lds
and
test
sbb
fs
jnp
dec
loop
std
jmp
and
and
mov
and
xor
jbe
int
xor
mov
inc
or
dec
sbb
adc
pushf
mov
dec
mov
dec
jmp
sub
sahf
cmp
cmpsl
mov
das
enter
icebp
pop
daa
ret
push
mov
or
mov
roll
add
push
push
ja
push
in
subl
mov
mov
das
push
or
jecxz
add
in
fiaddl
jmp
cmp
xchg
lods
mov
ds
sbb
pusha
out
loope
enter
pop
add
adc
dec
inc
popa
int
or
adc
mov
cmp
xor
xlat
aam
in
sbb
mov
push
jae
rcrb
out
xchg
ja
roll
jecxz
jmp
enter
loope
push
mov
cmpsl
adc
popa
ret
popf
adc
xchg
push
push
mov
lock
ret
cmpsl
shlb
dec
mov
repz
es
dec
jmp
cmp
dec
adc
shll
lahf
shll
adc
mov
pop
in
loope,pn
or
andb
add
cs
cmp
int3
icebp
outsb
arpl
adc
add
pop
mov
repz
scas
imul
call
dec
push
mov
jbe
xchg
clc
jb
fisttpl
aam
negl
push
jne
popa
fistps
jo
xchg
pop
pop
push
out
mov
xchg
das
cmp
sbb
inc
loope
inc
add
pushf
xor
mov
aad
pusha
lds
or
inc
push
enter
decl
inc
cmp
and
mov
std
sub
shll
add
push
jo
jb
adc
pop
adc
subb
ret
sub
aaa
add
nop
loop
mov
je
push
add
xor
or
outsl
mov
jmp
jo
add
or
mov
test
mov
shll
xor
cmc
mov
and
sbb
dec
xchg
ss
push
loope
or
das
inc
jo
mov
mov
adcl
mov
andl
pop
nop
insl
adc
std
push
pusha
and
arpl
add
cmpb
cli
jg
mov
sub
pop
xor
xchg
fsubl
xchg
dec
ja
dec
fsts
adc
dec
loopne
and
inc
add
fldl
sbb
inc
cmp
stos
out
les
or
pusha
aad
icebp
pop
mov
push
repz
popa
jne
repz
mov
push
test
sbb
arpl
ret
jmp
or
pop
mov
orl
or
lods
sahf
xor
push
cmp
dec
cmp
push
shll
sbb
inc
push
or
adc
dec
cmp
icebp
loop
or
cmpsb
jno
push
jbe
push
mov
xor
pop
adc
push
dec
jmp
or
gs
pop
xlat
nop
xchg
out
sbb
sbb
xor
pop
sbbl
push
enter
stos
xchg
bswap
add
ret
xor
js
mov
push
lods
daa
fdivrs
rcl
push
addl
hlt
mov
sbb
xchg
shl
aad
fnstenv
rorb
ja
lret
vmovupd
add
jecxz
dec
lods
mov
dec
mov
xchg
lcall
push
xchg
das
mov
popa
adc
xchg
xchg
adc
xor
aam
scas
movsl
push
lret
mov
sub
mov
jp
mov
sub
pop
or
cld
arpl
shll
add
dec
gs
add
sbb
sbb
enter
fnstsw
scas
mov
pop
push
push
and
addb
mov
xchg
jae
ss
ret
sbb
stos
mov
jae
aam
and
sub
xchg
mov
mov
cmpsb
das
xchg
fimuls
int3
push
sbbl
push
push
test
xorl
addl
mov
scas
rcl
icebp
in
and
add
adc
ds
jae
ret
push
adc
sbb
xchg
xchg
ret
es
mov
jecxz
inc
test
cmc
adc
or
xor
lds
mov
xor
lahf
mov
jmp
jl
dec
int
mov
jo
pop
in
test
loopne
cmp
loope
lret
sbb
arpl
ds
push
mov
js
push
ret
jp
call
jbe
dec
sbb
adc
mov
iret
call
sbb
jecxz
mov
gs
popa
fcoml
inc
push
mov
mov
out
add
mov
adc
into
insl
inc
stos
imul
dec
fmuls
adc
popa
in
std
mov
mov
fwait
mov
pop
sahf
jae
jmp
in
pop
sbb
ret
adc
jg
or
int3
mov
dec
jae
add
dec
sbb
xchg
dec
or
inc
and
je
scas
rcrb
lret
sbb
pop
movsb
push
sbb
lret
addr16
and
flds
ret
cmc
insb
and
jmp
push
ret
jbe
pop
pusha
dec
fdivs
and
pop
int
fbld
ret
shl
add
pop
cmp
pop
cmpsl
push
jne
jne
or
imul
sbb
mov
test
cmp
mov
mov
mov
and
imul
and
sub
fdivrs
arpl
adc
push
fildll
adc
push
scas
mov
inc
push
pop
cli
sbb
adc
ret
cmp
insb
xor
inc
mov
dec
testl
xor
xor
mov
mov
rolb
faddl
jl
fbstp
push
mov
jns
or
and
mov
stos
cmp
cs
mov
mov
ret
comiss
jmp
cmp
leave
inc
jmp
popf
jge
stos
xor
cmp
cltd
sbb
add
jge,pn
xchg
jmp
out
arpl
lea
add
loope
pop
push
stos
pop
bound
lret
and
ja
mov
mov
xor
jp
test
iret
ret
popf
dec
rcr
push
mov
add
sbbl
add
jge
or
mov
orb
xchg
das
ljmp
fldcw
or
xlat
and
movsl
jge
movsl
mov
imul
dec
nop
loopne
add
aam
int
add
cltd
mov
inc
mov
xchg
scas
in
mov
out
movsl
or
test
push
popf
jbe
jl
xor
fnstsw
jecxz
or
mov
xor
stos
pusha
sub
pop
mov
test
jbe
sub
add
jae
test
sub
mov
mov
add
and
ljmp
xorb
stos
xchg
pop
pop
and
cmpsl
dec
or
push
xchg
outsl
mov
dec
pop
and
add
cmp
mov
sbb
xor
shlb
add
cmp
or
cmpsl
mov
lret
in
xor
mov
mov
nop
fcom
jb
adc
movsb
subb
mov
insl
inc
sub
or
mov
mov
jnp
shlb
push
xor
mov
pop
fmull
lret
mov
lds
ret
lcall
inc
sti
and
xchg
mov
mov
sbb
aas
sldt
mov
inc
subb
mov
mov
sbb
scas
pop
push
lret
sbb
mov
jmp
outsl
mov
clc
sbb
hlt
test
mov
shll
sti
aas
scas
sbb
or
pop
mov
dec
pushl
in
jecxz
ret
adcl
and
lret
inc
xor
ficompl
push
jg
inc
push
scas
popf
adc
roll
pop
icebp
in
xchg
js
push
and
dec
les
mov
mov
xchg
xchg
roll
push
sbb
and
aaa
push
push
je
iret
ljmp
movq
adc
cmp
les
add
and
popf
push
and
sahf
ljmp
mov
daa
loop
scas
adc
mov
mov
sub
xchg
push
or
ret
nop
sarl
popa
ja
sar
cmpsl
cmp
or
clc
push
or
dec
ret
mov
push
xlat
or
mov
xchg
push
push
pop
mov
bound
test
aaa
shll
jle
mov
mull
sub
jbe
sbb
imull
enter
pop
mov
mov
imul
mov
arpl
leave
dec
sbbl
sbb
mov
cli
mov
or
mov
popa
and
xor
and
fiadds
xor
inc
pop
les
test
data16
mov
and
adcl
add
pop
lock
mov
imul
cmp
cltd
and
aam
dec
adc
push
xor
mov
shl
or
data16
push
and
mov
jae
mov
mov
fisttpll
movl
dec
adc
inc
stos
ljmp
jmp
xor
pop
and
push
movsl
sahf
mov
scas
mov
insb
xor
int
inc
inc
mov
aad
test
and
sbb
cld
pop
fsub
add
mov
inc
mov
pusha
setle
incb
inc
in
pop
jno
mov
add
test
mov
shrl
jmp
test
ljmp
jl
push
add
loope
sbb
loop
dec
cmp
movsl
orl
pop
add
add
test
test
xchg
pop
clc
dec
loopne
sub
and
cmp
rolb
orb
pop
inc
sub
pop
xchg
jnp
notl
shlb
jge
and
mov
pop
cmpl
add
jp
mov
arpl
add
adc
stos
push
jo
push
out
pop
cltd
cltd
push
les
mov
pop
outsb
loopne
push
pop
jg
or
ss
movsl
jnp
xchg
cwtl
adc
lods
jg
jbe
inc
insl
push
xchg
ret
inc
xchg
sahf
addl
fwait
mov
push
cmp
cmpsb
jp
push
in
leave
pop
push
xchg
or
arpl
xlat
xchg
add
out
shl
push
clc
scas
dec
mov
pop
or
push
and
pop
add
sbbb
and
xorl
jo
push
outsb
jmp
jp
inc
fwait
aam
imul
jp
data16
sub
idivb
out
repz
xor
and
mov
adc
stos
rorb
pop
lea
mov
sbb
cmp
fnstcw
add
xor
pop
mov
out
rclb
imul
cmp
sub
xchg
das
shrb
lds
pop
inc
js
loop
sbb
shrl
shrb
xlat
andb
pop
adc
enter
and
mov
xor
jns
orl
rcr
adc
lods
imul
jge
aad
xchg
inc
push
pop
bnd
pop
or
test
xchg
icebp
mov
loope
jbe
jmp
xchg
sbb
movsb
add
push
mov
shl
fs
scas
and
nopl
aas
ret
mov
sub
shrb
insl
pop
jmp
shll
add
xchg
repz
pop
xor
lock
mov
movsb
pushf
mov
and
xlat
into
xchg
aas
add
or
fldenv
or
sub
mov
cwtl
adc
popa
jne
xor
sub
arpl
and
lret
push
xchg
add
push
adc
mov
lea
inc
sbb
mov
ret
dec
shlb
pop
adc
lahf
cmp
adc
lea
adc
test
rol
stos
add
jl
mov
xlat
das
adc
jnp
lods
inc
or
xor
mov
or
xchg
push
sub
push
dec
xchg
xor
fmuls
dec
outsb
inc
sub
xor
xchg
mov
dec
xor
imul
inc
and
or
xor
movsl
and
xor
push
loope
subl
pop
push
xor
or
or
loope
mov
inc
out
cmpsl
sub
movsb
sbb
jmp
and
lods
sub
cmp
pop
lret
lahf
imul
and
mov
jmp
das
and
subb
fnstcw
test
pop
xchg
or
dec
xlat
xchg
adc
sub
sub
add
lods
add
cmp
mov
inc
loopne
jl
adcl
adc
movsl
pop
add
dec
pop
xchg
sbb
dec
and
jle
ret
mov
push
xchg
push
push
inc
push
lods
pusha
clc
mov
xchg
call
xor
clc
cmp
xchg
test
insb
mov
stos
in
popa
xchg
add
and
sub
sahf
sub
imul
or
arpl
cmp
das
inc
adc
and
mov
or
xchg
mov
rolb
loope
fistps
divb
or
sub
inc
int
ret
xchg
add
inc
jae
jge
xor
mov
insb
pop
lods
add
scas
popl
lds
push
loopne
subl
insb
bound
mov
rol
and
data16
out
or
pop
mov
ja
fadds
sub
xchg
aam
scas
insl
fnstcw
sub
jecxz
push
inc
enter
and
fs
rol
pushf
and
test
mov
sarl
aam
add
mov
mov
andl
ficoml
jmp
addr16
jmp
repz
scas
dec
movsb
shlb
daa
mov
add
xor
add
add
dec
jmp
cmpsb
stos
std
add
sbb
jge
fcomps
cmp
fisttps
lods
inc
iret
push
pop
mov
ret
rclb
xchg
cmp
punpcklwd
mov
dec
movl
cwtl
xchg
push
loopne
jp
ret
and
sbb
test
inc
daa
add
mov
js
dec
dec
loopne
arpl
push
xlat
addr16
mov
movsl
cmp
addr16
mov
mov
and
xchg
add
test
out
scas
cmpl
push
dec
sbb
mov
pop
xchg
inc
loopne
cmpsb
sbb
mov
xor
add
mov
ret
mov
sub
dec
add
insl
lods
and
popl
mov
fistpl
adc
pop
sub
call
adc
sbb
scas
out
addb
add
mov
dec
fsubs
push
aad
jle
pusha
dec
add
mov
test
pusha
add
fcmovnb
jne
xlat
pop
ret
pop
push
ret
iret
or
pop
xor
mov
iret
fs
scas
inc
sub
bound
fisttpll
andl
cmp
pop
push
inc
fldl
mov
xlat
out
popf
cmp
ret
cmpsb
dec
fstpt
mov
adc
repnz
push
cmp
pop
pop
inc
mov
inc
cmp
jecxz
shrb
jge
addl
lea
lock
loop
fdivl
scas
mov
inc
pop
out
adc
pop
add
inc
insb
add
mov
or
push
push
out
sub
cmp
mov
xchg
adc
adcb
dec
das
push
mov
lds
push
ret
das
push
xor
icebp
leave
data16
sbb
int
flds
xchg
adc
sub
leave
jl
xchg
call
ficoms
add
fdecstp
popa
shlb
insb
loopne
push
sbb
ret
jns
rcl
push
bound
aaa
test
dec
fbld
jb
sbb
sbb
add
roll
ret
adc
adc
adc
or
orl
inc
xor
out
push
mov
imul
xchg
mov
and
sahf
mov
jge
push
or
jge
sbb
outsl
addl
inc
mov
clc
sbb
dec
imul
test
add
xorb
cmp
sub
xor
adc
movsb
cmpsl
jns
lea
lret
push
outsb
and
push
out
dec
xor
mov
jge
xchg
mov
fsub
loopne
lock
xor
or
adc
add
leave
pop
push
or
rep
fistl
add
rcrb
adc
stos
pop
into
js
pop
add
fldl
push
repz
push
loopne
push
loopne
jg
add
add
mov
jno
pop
ja
mov
or
push
test
int
lds
loope
ss
pusha
pop
test
mov
shrb
in
cmp
xor
in
sbb
call
mov
fwait
pop
add
add
pop
in
leave
loope
lea
jmp
inc
sub
inc
xor
adc
stos
insl
movl
adcl
arpl
stos
fninit
or
mov
cltd
pop
imul
cs
or
out
shll
adc
and
scas
xor
pop
mov
fidivrs
pop
aaa
dec
xor
push
sub
push
lcall
out
or
shll
ret
gs
orb
mov
lock
cmp
adc
movb
xchg
push
in
pop
fiadds
cmp
cmp
les
adc
sbb
lods
int3
xor
xchg
int
or
rolb
and
test
in
rolb
mov
jne
adc
jne
mov
shlb
inc
cli
cmp
je
adc
inc
cmpsl
xor
ret
sub
insb
or
cli
adc
cmp
or
sub
add
or
push
enter
inc
roll
fwait
scas
lock
pop
mov
arpl
fiaddl
test
push
sbb
mov
dec
jecxz
sub
daa
xchg
fs
inc
dec
inc
xor
sbb
mov
push
enter
std
std
xchg
cs
mov
xor
pusha
call
sub
repnz
adc
pop
ret
mov
jnp
mov
push
lea
mov
adcl
xor
push
lret
jmp
movsl
loopne
or
xchg
daa
or
push
inc
nop
fwait
les
adc
cmp
xchg
mov
push
inc
xchg
inc
pop
repnz
mov
outsl
cwtl
fadd
outsb
stos
mov
mov
cmpsl
mov
xlat
leave
int
movsb
adc
mov
add
std
inc
adc
add
or
test
and
cmp
lods
fidivl
dec
mov
cmp
adc
dec
lahf
adc
push
adc
mov
test
test
cmp
dec
daa
push
dec
pop
adc
lret
and
and
leave
jbe
xor
ret
popf
sbb
lea
arpl
pop
rorl
inc
orb
lods
aaa
xlat
fsubl
or
std
sti
clc
daa
mov
adc
jecxz
test
jecxz
xchg
xor
add
lret
mov
jmp
dec
mov
add
jbe
inc
icebp
mov
test
jno
cmpsb
mov
inc
sub
adc
and
ret
sbb
mov
mov
pop
scas
loope
lock
repz
fistpll
jne
sbb
scas
push
cmp
pop
ficompl
repz
shll
push
in
lret
and
sub
fs
push
adc
push
pop
fldl
insb
enter
sub
xor
stos
adc
popa
dec
repz
cmp
or
pop
lcall
cmp
add
and
test
xor
jmp
nop
add
rorl
or
fcmovne
mov
inc
daa
cmp
pushf
or
xor
test
popf
cmpsb
pop
mov
sub
loop
insl
imul
cs
push
out
adc
or
and
addl
sbb
iret
or
sqrtps
addb
mov
mov
out
jns
jns
mov
add
add
xchg
push
add
mov
xor
icebp
mov
mov
jae
or
and
movsb
nop
test
or
dec
nop
xor
xchg
loope
xchg
fbld
sub
push
lock
imul
test
mov
and
stos
cmpsl
cmp
jg
add
pop
ret
mov
inc
adc
dec
sbb
and
lea
ret
xor
xchg
jp
adc
and
or
push
cmc
stos
aam
and
inc
fdivl
int3
mov
mov
adc
test
mov
xor
lock
insl
xchg
and
pop
loopne
add
add
std
gs
cmp
enter
sub
call
mov
xchg
cmc
xor
addr16
mov
adc
fiaddl
adc
mov
ss
add
pop
sub
xorb
int3
imul
test
test
rcrl
jp
or
adc
dec
cmpsb
icebp
imul
outsb
sbb
out
rcrl
das
or
or
sub
adc
mov
mov
mov
mov
add
inc
xor
xor
leave
mov
mov
es
sub
sub
and
scas
pop
and
jecxz
lds
ret
push
mov
lods
test
add
scas
sbb
mov
hlt
mov
inc
loopne
inc
sbb
lock
xchg
mov
jl
pop
sub
lods
push
shll
test
mov
mov
pop
movsl
cmpsl
inc
flds
adc
inc
jb
dec
sub
sbb
jmp
ret
jecxz
jge
inc
iret
jbe
push
stos
xor
test
out
outsb
sub
add
push
jmp
ffree
sub
hlt
popa
and
es
and
int
dec
adc
leave
cmp
mov
inc
testb
movsl
add
dec
dec
arpl
cmp
scas
mov
pop
inc
lock
pop
movsl
jecxz
outsl
xor
cs
pop
in
push
dec
xchg
pop
in
mov
fcompl
insb
or
xor
fsubrs
adc
je
pop
ficoml
pop
andl
xchg
ret
xor
cmpb
nop
or
cmp
hlt
bound
hlt
test
adc
push
mov
dec
dec
mov
sbb
test
push
jg
je
pop
or
fcmovbe
ja
xchg
loope
je
ret
stos
and
movsl
mov
sbb
mov
shlb
xorb
xchg
dec
fwait
lea
mov
lret
sub
enter
imul
pop
lcall
mov
jle
or
xchg
ss
fildll
add
jle,pt
popf
adc
adc
inc
inc
mov
xor
sbb
or
cmp
stos
and
xchg
test
and
ret
out
test
addb
and
jecxz
or
push
add
and
enter
mov
adc
jl
enter
add
cmp
test
push
add
and
imul
orb
mov
xor
in
sbb
ret
or
sub
sbb
push
int3
adc
daa
andl
movb
je
pop
test
fwait
sub
lods
push
or
addr16
xlat
xor
inc
outsb
ret
jo
fs
test
pop
sub
sbb
inc
ret
sbb
lods
xchg
add
addr16
dec
fs
xchg
ret
fsubrl
cmpsl
pop
pop
sahf
and
fsubrs
fldcw
imul
adc
mov
cs
inc
or
and
pop
pop
add
adc
test
lret
test
add
andl
call
push
mov
lock
jo
sub
fwait
jno
pop
inc
mov
cmp
mov
into
push
pop
mov
outsb
shrb
xor
roll
add
pop
dec
fists
orl
or
sbb
fildll
mov
mov
dec
and
call
push
sbbb
push
cmp
pop
mov
popf
aas
mov
sbb
rcrl
jae
pusha
xor
or
mov
lret
pop
addb
fs
es
ret
mov
lea
add
and
fcmovnbe
mov
insl
cmp
lock
mov
and
dec
xchg
and
jns
jp
adc
push
dec
mov
pop
fldl
sub
add
sbb
inc
das
jns
and
adc
ret
es
inc
dec
add
js
jl
inc
or
das
xchg
test
pop
and
insl
inc
pusha
jp
sbb
sub
or
xor
adc
add
push
cwtl
movsb
and
arpl
and
mov
out
imul
into
es
arpl
push
sbb
dec
cmp
ficompl
scas
adc
nop
jns
imul
add
and
xchg
adc
test
or
test
test
es
push
xchg
adc
mov
pop
pop
js
and
outsl
imul
pop
jp
inc
inc
repnz
and
dec
or
sbb
sub
jno
add
imul
sbb
inc
push
cmp
push
daa
jne
push
sbb
push
xor
xor
rorl
imul
pop
popa
aam
adc
mov
adcb
or
jge
push
lods
imul
in
decl
pop
or
pop
cmp
jnp
or
inc
incb
dec
call
shrl
mov
pop
inc
imul
in
cltd
stos
and
insb
movsl
hlt
pop
adc
and
clc
add
adc
and
test
fisttpll
mov
jmp
rolb
lret
mov
add
xor
data16
jno
mov
ds
add
sbb
sbbl
mov
fwait
xor
sub
shlb
dec
loopne
xlat
push
sti
cs
cmp
dec
inc
imul
jo
cmp
aas
or
pop
dec
mov
xor
add
jg
in
lea
gs
mov
lods
jb
adc
add
xor
mov
and
test
and
push
xchg
adc
outsl
imul
fs
sbbb
and
test
jnp
add
loope
ljmp
jl
pop
xor
push
in
xchg
sbb
pushf
xchg
add
or
icebp
ljmp
sub
lret
dec
adc
mov
sbb
inc
mov
out
adc
inc
sbbl
add
or
iret
lahf
cltd
xor
or
mov
mov
inc
rcrb
iret
lcall
inc
call
subb
adc
mov
inc
addb
fstps
jecxz
movb
ljmp
lods
sbb
mov
push
cwtl
mov
xchg
fwait
out
fildll
jnp
jmp
popa
dec
vmwrite
orl
nop
rolb
test
fsts
adc
js
repz
sub
andb
int3
adc
add
into
xor
push
push
jbe
add
mov
inc
fsubrs
jns
roll
test
rol
in
int
test
sub
movsl
xlat
xor
mov
sbb
add
dec
imul
mov
adc
testl
test
je
add
test
xchg
test
js
jae
bound
jnp
rcl
push
into
cmpsl
sub
loop
xchg
pop
daa
enter
js
dec
faddp
dec
and
mov
add
adc
clc
add
pop
decb
je
pushf
jo
out
xchg
mov
fwait
test
cmp
pop
lea
and
add
pop
sbb
pop
mov
mov
mov
mov
cltd
stos
sbb
or
dec
arpl
outsb
xchg
pusha
cmpsl
push
sbb
popf
push
stos
add
fnstcw
sahf
jb
xor
or
push
inc
or
pop
ja
in
mov
aas
adc
sbb
or
outsl
mov
dec
fnstenv
mov
and
adc
mov
push
pop
push
sub
jle
dec
add
pop
mov
movb
push
jbe
and
cmpb
cltd
test
dec
aam
outsb
sahf
add
mov
xor
dec
loope
xor
and
dec
pop
pusha
lea
add
mov
mov
xor
test
and
or
mov
jmp
adc
push
jl
or
iret
ret
adc
sti
xchg
jo
cmp
xlat
push
xchg
movb
mov
jne
mov
loope
xor
mov
sub
cmc
push
add
movsl
imul
push
mov
inc
jmp
shl
rclb
and
hlt
cltd
and
rcl
sbb
jp
xchg
add
push
mov
test
pop
xchg
sbb
cmp
xor
push
das
test
jae
xchg
scas
adc
sbb
inc
insl
adc
int
mov
sbb
jge
punpckldq
mov
ljmp
add
out
add
test
and
lcall
lea
xchg
add
subb
sbb
push
push
xchg
ljmp
rol
adc
xlat
imul
add
insl
mov
lahf
xor
lods
and
jnp
rclb
insb
adc
xor
aad
push
adc
ljmp
int
jle
ret
aam
dec
dec
dec
cmp
dec
loopne
fsts
xchg
inc
or
inc
ljmp
mov
gs
aad
add
sub
jae
jb
jmp
out
xchg
in
pop
sub
pop
cmp
dec
push
lds
pop
sub
xchg
mov
xlat
int
adc
sahf
add
les
sti
add
lea
sarl
or
cmp
or
xchg
sub
xor
push
xchg
cmpsb
into
clc
and
loopne
cld
or
dec
cmpsb
pop
rcl
iret
sti
xor
jmp
xlat
push
out
rolb
push
addr16
and
push
sub
inc
sbb
jp
je
push
mov
or
pop
jbe
mov
sub
push
add
out
lret
sub
add
sub
or
lods
imul
aam
sar
ljmp
pop
adc
sbb
movsb
cbtw
popa
sbb
inc
cmpsl
inc
or
cmpsb
sbb
ret
push
adc
inc
or
mov
fidivs
cmpsb
dec
dec
sbb
das
or
jns
dec
mov
cmpsl
in
outsb
xchg
mov
jp
jne
push
mov
jl
jnp
mov
push
leave
push
gs
mov
xor
dec
xor
insl
pop
insl
imul
xchg
xorl
lods
movsb
mov
push
ftst
xchg
orb
push
and
aaa
cmc
sub
movsb
mov
inc
shrb
pop
fcomp
dec
loope
dec
sub
fisubrs
add
mov
push
mov
shll
add
adc
mov
movsl
or
or
or
ds
add
stos
pop
jb
bound
and
jnp
imul
inc
bound
cmp
lahf
je
cs
mov
mov
das
mov
and
orl
das
pop
mov
in
sarl
loopne
pop
aaa
inc
sbb
aad
orl
mov
ja
push
pop
mov
cmp
dec
test
pop
adc
inc
jmp
jmp
add
subl
add
or
and
sub
int3
sbbl
outsl
inc
sbb
cltd
xlat
xchg
lods
xlat
dec
shrb
jne
pop
dec
and
sub
add
in
insl
scas
push
mov
ret
dec
pop
lods
imul
mov
jle
out
rcll
mov
dec
dec
mov
add
rcl
pop
mov
pop
jge
inc
xchg
xchg
ret
or
out
sbb
jl
jl
sbb
add
dec
sbb
scas
adc
subl
jo
mov
inc
mov
add
fstpl
add
mov
cmp
add
push
push
idivl
inc
and
cli
xchg
sbbb
push
mov
and
or
inc
gs
jo
adc
outsl
pop
push
mov
dec
xchg
es
sub
add
xchg
shrb
jg
or
add
mov
stc
decl
or
int3
push
push
ljmp
jno
push
xchg
mov
xor
pop
adc
dec
push
xchg
jnp
mov
add
movsb
mov
popa
addr16
pop
cltd
loopne
jbe
lcall
add
sub
cmp
pop
or
pop
mov
sbb
xchg
add
sbb
or
inc
jnp
fxch
test
sub
adc
mov
and
fwait
mov
xor
addr16
inc
ds
test
pop
adc
or
filds
test
pop
stos
loopne
insl
js
mov
aaa
pop
add
jmp
cmp
mov
fbstp
adc
sti
add
out
xor
lock
rclb
js
xchg
inc
out
arpl
inc
mul
jo
adc
mov
cmpl
or
adc
jg
repz
sbb
xchg
in
push
and
adc
dec
or
inc
or
lret
dec
aaa
add
fcomps
insb
out
lcall
test
add
lret
adc
leave
aaa
lods
dec
add
std
and
mov
lock
or
xchg
ja
xor
xor
adc
cmp
xor
jge
adc
lret
pop
cmp
pop
push
sbb
enter
cltd
and
insb
cmc
js
das
ljmp
jb
ja
andl
pop
or
adc
adc
xor
jbe
rcl
add
add
add
jge
jae
pop
sbb
pop
mov
add
sbbl
sbb
imul
in
adc
fs
add
mov
mov
clc
xchg
mov
xchg
shlb
push
pop
scas
jne
ret
sub
mov
cmp
leave
loopne
shlb
or
cltd
mov
xor
sub
cmp
push
lock
imul
mov
loope
ss
dec
pushf
or
xchg
iret
cmp
imul
fwait
and
stc
orl
mov
push
cmpb
xchg
out
frstor
cltd
or
cmp
adc
inc
jp
inc
mov
lea
scas
xor
mov
xchg
xchg
imul
or
or
aaa
nop
cmp
or
cmp
push
adc
bound
test
shll
subl
or
jno
add
cmp
adc
pop
add
jno
adc
nop
jo
adc
lods
dec
add
pop
adcl
test
fcmovu
jno
add
mov
jge
mov
push
cltd
jnp
rorb
lcall
xor
dec
xchg
mov
push
adc
adc
imul
imul
imul
outsb
add
adc
rolb
add
xchg
cld
push
ret
sbb
dec
loope
sub
sub
sub
aaa
or
ds
loop
test
cmpsl
cmp
add
out
adc
push
out
xchg
cmpsb
sbb
iret
pop
enter
test
mov
into
sbb
jo
imul
movsl
xorl
movsl
mov
out
pop
mov
xchg
cmc
shlb
scas
push
roll
push
fistps
rcrl
call
jecxz
sub
dec
and
adc
and
fcoms
adc
sahf
pop
loop
das
mov
xchg
int3
out
add
dec
xchg
add
shrl
add
fiadds
add
adc
mov
xchg
clc
das
daa
push
repz
adc
pop
sbb
pop
mov
mov
adc
ljmp
hlt
push
out
hlt
ljmp
xchg
or
int
mov
pop
fmuls
inc
leave
inc
xchg
jno
vaddss
sub
cmp
outsb
pop
sub
mov
shrb
dec
loopne
dec
cmp
pop
arpl
mov
jmp
push
add
inc
or
rorb
sahf
insl
sbb
hlt
les
adc
es
push
mov
test
push
inc
ret
cmp
dec
dec
dec
sub
call
xor
js
daa
leave
push
movsl
ja
xor
mov
push
mov
jp
mov
ror
lret
jb
pop
cmpsl
xchg
adc
test
aam
fwait
ds
mov
add
enter
aas
xor
push
dec
lcall
cmpsb
xchg
cmp
insb
ja
push
aas
pop
cmp
xor
xor
lds
loop,pt
add
dec
iret
sub
out
push
mov
pusha
loopne
pop
mov
out
ds
inc
fwait
data16
push
loope
mov
inc
inc
xor
ficompl
daa
aas
cmp
push
mov
xor
popf
lcall
dec
daa
add
pop
movsb
gs
in
or
xor
mov
pop
jbe
adc
adc
dec
ds
mov
xchg
pop
pop
add
stc
sub
roll
ret
xor
mov
jg
cmc
add
push
jp
popa
and
fs
inc
imul
testl
negl
mov
mov
daa
fnstenv
or
add
mov
jo
test
ja
mov
pop
arpl
push
pop
imul
pop
das
ret
push
inc
sbb
mov
mov
dec
imul
sub
dec
sub
imul
push
in
add
rolb
xchg
jbe
push
push
lods
dec
mov
and
cmpsl
xchg
insl
addr16
pop
imul
cmpl
and
fisubrs
xlat
or
andb
mov
subl
in
out
rcr
fsts
or
cltd
add
pop
and
into
dec
fidivs
xchg
mov
les
lds
adc
pop
arpl
loopew
push
popf
loope
mov
jb
or
dec
jmp
sbb
lds
cmpl
pop
inc
loopne
xchg
jge
mov
mov
out
jp
mov
dec
popa
inc
cmp
les
pop
lea
lods
mov
aas
mov
mov
lods
mov
jno
sub
adc
mov
and
adcb
mov
inc
loopne
ucomiss
push
or
sbb
cs
int
pop
mov
call
in
cmpsb
mov
popa
push
sbb
sbb
mov
lods
pop
lcall
repz
outsb
sahf
mov
and
mov
add
ljmp
adc
insb
jns
jne
in
dec
ret
mov
adc
ds
inc
xlat
or
icebp
add
loopne
sub
add
inc
push
pop
sub
xor
test
push
jo
xlat
pop
jne
inc
sbb
scas
cmp
nop
gs
jp
mov
add
add
or
out
pop
shr
fcoml
jae
aaa
scas
orb
xchg
add
test
ljmp
mov
inc
cmp
int
inc
mov
or
xor
add
das
jp
test
xchg
popf
das
mov
xor
lods
sub
and
xor
cmp
mov
outsl
int
test
adc
rcll
pop
dec
addr16
ljmp
xchg
xchg
js
push
gs
xor
shll
test
inc
sub
lea
rolb
cmpsl
hlt
adc
imul
mov
dec
pop
out
push
cmp
in
mov
add
and
pop
fsubl
sbb
aam
mov
ds
pushf
xchg
add
fstl
ja
mov
stos
mov
pop
pop
pop
scas
and
pop
stos
inc
subl
pop
sub
jecxz
nop
fwait
pushf
and
xchg
aad
jb
les
and
addb
aad
push
pop
cmp
push
pop
adc
andl
adc
ljmp
push
jp
mov
divl
jae
out
scas
xor
adc
inc
iret
inc
xor
and
data16
add
loopne
jno
mov
imul
sub
and
xchg
xchg
fsubs
aaa
lods
and
lahf
adc
jmp
les
ljmp
addl
callw
ds
sbb
gs
or
adc
roll
push
fstps
mov
jge,pn
les
jp
outsb
dec
mov
test
mov
lods
sbb
adc
mov
insl
inc
add
loopne
subb
pop
fisubs
adc
shlb
mov
jmp
test
xorl
in
outsl
cmp
movsb
adc
sub
aam
and
cmp
int3
add
jb
mov
sub
xor
xchg
jae
cs
sbb
xor
push
adc
stos
mov
fs
add
and
int3
xor
imull
xchg
pop
les
bound
inc
pop
inc
add
outsl
sbb
imul
pop
add
fs
push
rcr
mov
pop
fstpt
jb
add
and
mov
mov
adc
add
adc
pop
rol
mov
inc
sbb
test
stc
add
pop
sub
jp
mov
hlt
cmp
jecxz
inc
and
aam
xor
push
mov
mov
ret
inc
push
add
movsl
inc
aam
outsl
call
rolb
sbb
lods
mov
jle
or
xchg
xor
add
adc
add
pop
cmpb
pop
mov
je
ss
ret
addl
arpl
pusha
sub
push
push
pop
mov
push
xchg
data16
mov
add
mov
test
adc
das
in
xchg
mov
imul
test
or
cmp
xchg
jmp
inc
jecxz
xor
mov
and
shr
adc
xchg
inc
xor
inc
xchg
sbb
inc
xorl
sarb
sbb
inc
ljmp
lods
pop
sbb
insb
sub
loope
add
pop
pushf
and
xor
adc
sbb
push
cmp
push
add
out
lods
jmp
add
aam
test
fcompl
lods
adc
mov
shlb
daa
icebp
pop
xor
ret
push
int3
ror
clc
or
mov
repz
aaa
mov
sti
ja
add
push
xor
rorl
dec
cmp
dec
test
xor
jnp
out
cmpsb
xchg
jo
shll
or
xor
push
jmp
adc
fwait
pop
mov
mov
movsb
sbb
push
loopne
popf
cmp
add
in
jo
xor
ret
sub
aad
or
xchg
je
popa
fiadds
adc
or
je
leave
pop
jo
insb
fcoms
xor
faddl
fisttpl
jmp
ja
dec
inc
and
aam
test
cmp
jle
sbb
lahf
sub
pop
sub
cmpsb
cmp
jo
or
aaa
shl
and
jne
sub
arpl
mov
shrb
lds
sbb
pop
jg
and
sbb
jo
in
shll
mov
sbb
mov
inc
mov
sbb
pop
dec
pop
aam
push
dec
movsb
ret
pop
and
stos
add
rcr
jo
repnz
loopne
cmp
pop
xlat
or
mov
mov
iret
jbe
pop
jmp
push
inc
jmp
or
xor
xchg
ret
mov
push
les
adc
aaa
or
mov
adc
xchg
test
stos
sarb
popa
ret
dec
and
xchg
and
test
test
rolb
prefetch
scas
add
pop
rcll
movsb
push
xorb
mov
iret
stos
add
xchg
int
rcrb
addr16
mov
cmp
clc
iret
jmp
mov
int3
test
hlt
cmp
jge
aas
pop
adc
jp
push
xorl
aaa
pusha
xchg
add
cmpsl
stos
adc
add
or
add
cltd
dec
aaa
nop
inc
pandn
dec
pop
daa
clc
cmp
rorl
add
bound
add
or
xlat
inc
mov
stos
icebp
ret
stc
push
aaa
ss
cmp
mov
shrb
fldl
sub
sub
ss
jae
gs
ret
cwtl
fldlg2
push
jmp
sub
adc
gs
and
add
or
test
push
cmp
mov
push
sbb
loop
rcl
sbb
xlat
adc
daa
sbb
shll
sub
aad
sub
imul
add
pop
test
loopne
ja
and
and
xchg
dec
shlb
xchg
loop
and
push
mov
or
loopne
add
imul
dec
pop
xchg
mov
je
cmp
or
ljmp
xchg
jnp
pop
cmp
xchg
add
xor
sahf
add
sarl
inc
add
sbb
addr16
into
imul
xchg
gs
inc
pop
leave
jns
push
shrb
sub
fsubs
or
and
cli
or
jb
out
and
mov
and
enter
jo
aad
aas
cmp
mov
lods
mov
inc
out
popf
inc
into
inc
adc
mov
lret
jecxz
sbb
pusha
imul
inc
shll
dec
sbb
and
jp
js
add
inc
sahf
and
xorb
ja
mov
and
jmp
dec
cmpsl
mov
ja
jecxz
add
push
xchg
xor
aaa
sbb
sbb
ret
cmpsl
out
sub
and
pusha
or
mov
outsl
into
insb
in
xchg
stc
movsl
push
bound
fildl
pop
sub
mov
ds
mov
or
mov
jp
or
mov
jo
inc
cmc
push
inc
ljmp
data16
mov
add
add
jmp
popa
sub
sub
jns
inc
ljmp
test
push
sub
aad
inc
dec
push
fcoms
test
mov
ret
mov
imul
or
mov
xor
inc
sbb
jo
stos
inc
pop
fs
mov
int
not
adc
movsl
or
mov
scas
add
popf
push
sbb
jecxz
ret
inc
adc
stos
push
xor
ret
mov
push
dec
jnp
scas
iret
lea
lea
mov
jecxz
test
imul
aas
sbb
push
xchg
and
jae
push
lret
inc
mov
cmp
cmpsl
sbb
and
fmuls
dec
push
pop
pop
xor
add
insl
push
aaa
movsl
sbb
pop
adc
mov
mov
stos
pusha
cltd
add
idivb
sub
cmp
mov
and
imul
mov
loopne
xchg
inc
lret
or
mov
outsl
push
hlt
test
cmpsb
cmp
add
or
aaa
inc
jecxz
aam
movsl
fs
fstl
loope
cmpsl
add
dec
xor
mov
cmp
mov
aam
inc
or
jg
cmp
mov
xchg
mov
js
add
push
movsb
push
in
es
adc
popa
and
dec
mov
popf
xchg
xlat
push
bound
cmp
lea
mov
adc
lahf
enter
mov
sub
imul
je
rcr
lods
inc
cmp
inc
bound
add
mov
push
or
mov
mov
pop
cmc
daa
lahf
shll
out
xchg
add
adc
adc
les
jmp
adc
and
add
andb
aas
dec
rolb
test
mov
push
sub
fldcw
popa
popf
mov
movsl
fisubs
enter
or
push
push
je
cltd
sub
jp
add
dec
adc
or
fidivl
jnp
xchg
add
pop
add
dec
and
lcall
invd
pavgb
iret
mov
es
sub
cmp
pop
icebp
and
fistpl
jmp
ret
int
lcall
or
fisubl
mov
add
add
loope
sub
addl
outsb
dec
adc
mov
lds
pop
and
ret
add
xchg
mov
fistpl
jp
mov
and
push
movsl
lcall
cmp
je
fnsave
cmp
movsb
jecxz
xchg
movnti
es
sbb
cmpsb
mov
lods
xchg
sub
inc
shll
test
push
jo
or
les
inc
mov
mov
sub
add
imul
xor
adc
decl
movsb
fdivrl
cwtl
jb
fistpll
lods
mov
push
pushf
dec
adc
or
xchg
inc
dec
mov
shrl
scas
and
daa
jno
imul
test
push
mov
jge
mov
and
adcb
leave
loopne
roll
das
shlb
pop
dec
dec
add
adc
imul
frstor
pop
sub
jmp
scas
push
sub
inc
ret
dec
and
ficomps
fstps
add
in
adc
inc
arpl
or
repz
inc
pop
movsl
ja
int3
push
mov
fbld
inc
mov
dec
test
lcall
fistpll
mov
aad
xor
cs
and
inc
rcrl
gs
xor
bound
test
lds
sub
rcrb
mov
aaa
inc
and
add
test
scas
sub
xchg
xor
imul
pop
ret
inc
jne
sti
mov
push
rolb
ret
add
sbb
mov
dec
add
push
mov
cmp
mov
movsb
lods
sub
xchg
aad
xor
inc
add
cmc
sub
pop
add
add
xor
xor
lcall
icebp
cmp
and
cmc
jo,pt
outsl
shlb
das
popa
pusha
hlt
ja
sub
mov
push
cmpsl
rorl
mov
xor
sub
ss
sub
xchg
xor
fs
aaa
inc
xchg
aas
dec
inc
movb
and
cs
add
xchg
sub
xor
cmp
add
int
dec
mov
outsl
adc
xor
rclb
adc
les
popf
inc
push
imul
jge
mov
inc
or
mov
xlat
and
mov
stos
push
and
push
test
pop
push
pop
cmp
cmp
add
aaa
mov
mov
add
loop
cmpsb
mov
or
loope
xor
adc
or
add
aas
insl
xor
popa
and
ficoml
fists
push
dec
push
add
dec
xlat
mov
int
add
pop
xor
and
sub
adc
dec
andl
imul
sbb
shl
cmpsl
jne
push
pop
aad
inc
dec
imul
push
adc
sbb
es
test
and
stos
xor
add
js
adc
add
cmp
mov
inc
mov
scas
push
xor
das
push
leave
push
pop
xlat
fidivrl
imul
pop
sbb
in
jg
inc
mov
mov
and
add
cmp
jg
clc
mov
fs
mov
hlt
cmpsb
pop
and
push
fists
pop
sub
and
aaa
sahf
adc
and
sub
je
ret
enter
js
mov
mov
shll
and
push
addl
outsl
aad
ret
adc
mov
mov
arpl
inc
jecxz
and
add
cltd
aad
mov
into
das
shrl
and
xor
and
dec
stos
stc
dec
and
pop
jae
jmp
and
out
pop
push
sar
mov
lods
ret
lock
ds
mov
or
mov
inc
dec
mov
ret
dec
xchg
add
rclb
iret
or
pop
imul
push
or
in
jne
push
aam
sub
cld
cmpb
lds
notb
dec
fbstp
mov
daa
ret
lea
inc
dec
cmp
push
cmpsb
mov
add
add
sbbl
push
adc
ss
into
or
sbb
fcmovne
int
mov
adc
int
cmp
lods
out
ja
or
mov
loopne
scas
aaa
inc
idivl
sbb
mov
adc
arpl
add
popa
ss
arpl
jnp
jne
inc
sbb
mov
orb
movsb
icebp
sub
lahf
jl
adc
add
cmp
cmpb
xchg
add
or
test
xchg
cs
sub
hlt
add
push
cmp
mov
sbb
leave
lahf
out
daa
push
cmp
inc
dec
stos
shll
cmp
jno
sub
dec
push
test
data16
ffreep
les
lock
jmp
add
lret
cmp
sub
push
orb
adc
sbb
xchg
insl
in
xchg
xchg
shlb
add
and
pop
add
or
add
shll
mov
mov
out
add
add
jmp
sub
inc
test
shlb
push
sub
xchg
mov
in
xchg
mov
rclb
gs
push
arpl
inc
push
stos
xchg
das
je
mov
pushf
push
cmp
fs
das
addr16
push
imul
imul
icebp
push
dec
pandn
test
sub
mov
enter
dec
sarb
ret
addr16
push
jbe
and
pop
into
lock
stc
push
popa
sbb
jbe
bound
int
adc
pop
mov
jae
test
and
xchg
aam
nopl
xchg
fstps
shrb
pop
sub
roll
in
pusha
add
or
push
inc
in
fadds
js
xchg
push
das
push
xchg
lahf
out
or
leave
dec
js
lea
fbstp
xlat
dec
test
loopne
popa
lret
and
adc
ret
je
push
push
jo
lea
pop
cltd
xorb
dec
sbb
pop
les
xor
in
rcrb
gs
sub
loope
adc
xchg
mov
push
push
icebp
adc
and
add
add
or
mov
lds
fmuls
cmpsl
stos
mov
ret
paddusw
mov
cmp
push
jnp
cmp
and
pop
wbinvd
add
js
jecxz
push
and
mov
shll
push
and
jne
mov
add
pop
mov
xchg
pop
dec
sub
popf
lcall
pop
push
inc
mov
mov
jge
mov
hlt
sarb
dec
clc
cmp
add
mov
ret
jge
xchg
lock
xor
idivb
adc
xchg
icebp
shrb
jne
sub
inc
jge
xchg
jnp
test
lods
loope
and
int
daa
pusha
add
roll
bound
popf
sbb
sbb
dec
ret
jp
sti
xor
sbb
nop
iret
jp
clc
sarb
insl
int3
pop
add
js
lret
lods
ret
adc
pop
jb
and
pop
xor
xor
push
mov
arpl
pop
xor
mov
loop
mov
insb
nop
lock
pop
inc
lods
je
icebp
mov
jge
sub
cwtl
xor
push
pusha
add
adc
aaa
mov
mov
fcmovu
cmp
das
es
sub
loope
test
xchg
adc
or
insl
jno
lock
and
lods
and
push
sbb
cmp
add
sbb
xchg
mov
aas
roll
je
jge
xor
sub
ret
jecxz
movsl
xor
int
loope
popa
imul
mov
mov
xor
push
adcb
dec
cmp
inc
cmp
ret
scas
enter
inc
push
or
adc
sub
inc
call
ret
and
push
sti
mov
pop
test
inc
mov
sub
mov
mov
test
shl
imul
mov
pop
push
cmp
push
out
mov
adcb
stc
adc
aaa
and
jo
pop
sbb
cmp
lahf
dec
ret
mov
popf
movsb
mov
adc
push
test
daa
or
mov
xorl
shlb
imul
or
mov
add
out
mov
iret
lods
mov
pop
sbb
jge
dec
test
inc
pop
inc
push
push
sti
mov
add
call
gs
nop
addr16
repz
push
ror
jecxz
dec
jmp
movl
ret
push
xor
cmp
xchg
xchg
popa
inc
lods
xorb
inc
imul
iret
jge
xor
xchg
mov
push
or
int
js
test
xor
mov
pop
push
dec
imul
add
stos
nop
fs
fdivp
outsb
jb
sbb
ds
cmp
xchg
les
push
cs
leave
or
adc
jmp
cmp
xor
mov
fcmovnbe
sbb
fimuls
xor
mov
cmpl
fucomip
jecxz
je
and
xchg
lret
jno
insl
cmpsl
cmp
enter
das
add
inc
pop
sbb
jnp
rorb
fimuls
adc
xchg
movsb
pop
xchg
sbb
sahf
ret
or
sbb
push
pop
push
xchg
movsl
mov
adc
sbb
mov
outsb
mov
scas
sub
xchg
mov
movsb
sahf
shrl
mov
mov
inc
sub
push
mov
addl
push
call
jbe
cmc
mov
in
push
adc
push
lods
rorl
cmp
dec
pusha
adc
sti
imulb
dec
mov
mov
cmp
push
je
cmp
pop
cmpsl
adc
iret
sub
add
in
pop
sub
test
add
mov
aad
std
xchg
or
sub
or
or
xchg
inc
pop
or
es
out
lahf
or
sbb
jmp
loope
icebp
mov
jecxz
adc
sub
lahf
xor
ret
dec
push
add
push
add
cmpsb
sub
sub
cmp
dec
stc
jmp
xlat
dec
pop
popa
push
inc
sti
xor
dec
icebp
fwait
cmovno
mov
mov
cmp
sub
sub
rclb
loope
sub
and
jecxz
add
xchg
sarb
xchg
imul
es
add
mov
lahf
mov
dec
fldenv
cmpsl
call
xlat
pusha
aad
in
mov
xor
pop
push
ds
mov
mov
std
addb
mov
lcall
jecxz
in
popf
inc
inc
mov
or
icebp
fmull
inc
jnp
pop
inc
push
xchg
ja
and
cs
test
add
xor
mov
xchg
lds
pop
inc
cmp
pop
ss
pop
or
dec
testl
xchg
shll
sbb
mov
xor
test
movsl
jnp
or
pop
int3
mov
push
imul
pop
fs
jno
ds
in
lods
pop
test
add
mov
std
add
setno
jge
hlt
fdivp
addl
dec
es
fnstcw
inc
push
push
inc
inc
outsl
dec
adc
test
jge
and
mov
add
xchg
loopne
mov
pop
xor
sub
jne
adc
add
lds
mov
sbb
xchg
inc
xchg
xchg
aas
sbb
adc
sub
inc
add
mov
call
fldl
fcompl
pop
xchg
pushf
lea
mov
addb
sub
push
jg
fisubrs
mov
insl
roll
scas
fucomip
add
jmp
and
jmp
inc
mov
or
or
and
jae
jb
gs
icebp
test
test
xchg
icebp
xor
sbb
cmpsl
cmc
aam
push
and
mov
ss
addl
mov
and
aas
les
xor
int
outsb
sbb
inc
aas
sub
xchg
adc
xchg
inc
xor
mov
add
hlt
mov
inc
test
bound
pop
jns
pop
test
fstp
dec
jno
add
iret
lret
mov
insl
push
aad
xchg
mov
addr16
pusha
aad
ja
adc
ja
xlat
cmp
mov
lods
rcll
sbb
push
ljmp
lods
cmp
pop
mov
add
adc
cld
lea
mov
fs
cmpsb
adc
xor
mov
push
mov
rorl
sub
addl
scas
add
inc
clc
imul
aam
rcrb
mov
push
mov
sbb
jge
lret
nop
cmc
jbe
insb
popf
add
add
imul
pop
dec
sub
mov
adc
and
push
sbb
mov
add
jmp
and
lret
sbb
rorl
ljmp
adc
stos
inc
aas
xor
jae
inc
or
call
les
cmp
xor
pushw
test
addr16
jae
and
mov
and
sahf
sbb
and
call
add
jg
mov
in
not
addl
pop
shlb
or
inc
pop
es
lahf
push
lock
ret
out
mov
out
or
inc
dec
popa
jnp
popa
aam
mov
jmp
test
xor
loope
aaa
movsb
lds
in
cmp
cmp
or
call
cmp
or
or
pop
sub
daa
sub
mov
adc
fsub
imull
mov
jmp
std
mov
lods
add
jmp
mov
sti
push
jnp
sbb
inc
xor
shlb
add
test
adc
ja
js
clc
xchg
aaa
pop
je
adc
sarl
decl
and
xor
add
daa
in
xchg
mov
fisttpll
gs
rcrb
jge
sbb
mov
add
adcb
jo
sub
lret
outsl
inc
xchg
jae
sub
adc
pop
xchg
ljmp
jg
jbe
xchg
xchg
jp
ret
aas
mov
inc
stos
and
push
mov
xor
and
add
popf
icebp
inc
lcall
pop
fcomi
cmp
cwtl
add
das
dec
cmp
out
and
roll
popa
xor
rorb
pop
ret
clc
nop
pop
jge
fistpll
and
icebp
popa
mov
jo
push
push
rolb
stos
les
incl
leave
imul
xor
test
xor
test
push
nop
pop
xor
rcl
add
sub
hlt
jnp
fdivs
push
leave
lcall
xor
sub
andb
push
movsl
jb
sub
aaa
ret
inc
aas
cmp
mov
pop
push
jp
call
and
fstpl
aad
adc
jns
std
and
sub
cmpsb
scas
dec
aad
add
js
icebp
jmp
dec
cmp
xchg
loope
cmp
sbb
cli
inc
sti
mov
mov
test
add
xlat
push
lret
imul
outsb
mov
je
mov
dec
and
inc
pusha
or
cwtl
call
add
sbb
or
add
jmp
stos
leave
es
imul
call
and
xchg
xor
mov
pop
imul
mov
lds
jo
add
inc
pop
ss
jb
push
mov
aam
out
loop
leave
out
dec
sar
add
xor
jmp
mov
adc
xor
addr16
jle
xor
or
scas
addl
mov
popa
jle
mov
test
cmp
scas
inc
sub
mov
mov
push
sbb
insb
push
not
sub
or
test
xchg
ds
ja
movsb
sbb
test
mov
repz
gs
dec
scas
sub
aaa
add
xor
cmp
ret
xor
and
aam
mov
sub
dec
sbb
dec
lahf
shlb
push
and
pop
ret
cmp
cmp
repnz
les
add
cmp
dec
push
cmp
push
mov
pop
xchg
fwait
sub
and
dec
imul
xor
insb
incb
rolb
adc
insb
out
lahf
stos
sbbl
sbb
je
mov
lods
popf
add
xchg
xchg
je
jecxz
jecxz
and
xlat
xchg
outsb
daa
sbb
out
jns
pop
xchg
xor
inc
inc
cmp
adc
xor
jo
sub
test
pop
popf
loopne
pushf
sub
loop
add
sarb
mov
aaa
bound
pop
sub
add
mov
es
or
movsl
jo
xchg
add
push
adc
adc
push
pop
lret
jae
mov
aas
add
cwtl
lock
push
and
aaa
mov
pop
xchg
das
or
out
push
es
mov
and
or
cld
daa
imul
dec
movsl
clc
andl
xor
add
fmuls
adc
add
arpl
rcll
and
jl
add
or
push
xchg
xor
xchg
das
jl
das
push
pop
fstl
sub
push
out
ja
popf
fldcw
jbe
add
int
popf
or
jmp
mov
bound
or
or
adc
inc
fwait
stc
stc
jno
mov
or
dec
add
lea
inc
pop
sub
mov
add
xor
push
pop
sub
fnstenv
loope
insb
fs
out
adc
pop
mov
cmp
and
pop
cmp
adc
ret
xlat
and
mov
subl
and
dec
adc
xchg
sub
mov
lret
fdivs
fildl
mov
test
cmc
ret
push
sar
xchg
or
adc
stos
mov
dec
loope
pop
adc
lods
add
pop
dec
cmp
ret
dec
cli
add
rcrb
sbb
mov
add
xor
loopne
pusha
mov
mov
stc
sbb
mov
adc
fwait
mov
test
and
and
pop
loope
jns
adc
mov
loop
ja
jecxz
adc
adcl
push
fisttps
jnp
scas
hlt
rcrb
lcall
sti
or
imul
rcrb
adc
inc
fnsave
repnz
xorb
xchg
inc
or
popa
aad
shll
add
mov
ret
in
jo
movsb
ret
sbb
adc
sbb
mov
or
and
lock
fsubr
mov
bound
nop
loopne
rol
adc
andb
and
add
and
jg
jno
and
sub
sarl
xlat
dec
and
bound
movsb
lea
mov
jnp
cli
mov
push
ss
mov
pop
mov
aaa
jle
jo
inc
pop
insb
add
xor
xchg
cmp
dec
xchg
arpl
cmp
mov
inc
add
jb
push
push
inc
and
xlat
loope
sbb
inc
sub
cmp
xor
adc
lret
fwait
scas
pop
fsubrs
inc
sub
sub
adc
arpl
popf
dec
mov
jae
sub
lock
ljmp
jb
cmp
popa
dec
addr16
cltd
sub
inc
test
mov
lret
movsl
mov
sub
dec
mov
xchg
and
aam
adc
xchg
adc
jnp
and
mov
ja
xchg
imull
add
mov
jns
cli
sarb
pop
lret
cmp
outsb
loopne
inc
and
fistpll
jecxz
add
pop
or
les
ljmp
icebp
push
rol
mov
push
jns
add
add
sub
fimull
sahf
test
test
mov
xchg
imul
test
dec
sub
inc
jp
inc
or
and
dec
sub
adc
mov
or
popa
pop
jns
rorl
inc
dec
jle
test
nop
js
inc
xchg
and
jae
push
inc
pop
lahf
cli
dec
movaps
dec
arpl
inc
mov
in
insl
adc
push
test
mov
mov
lods
pop
inc
xlat
xchg
cli
pop
inc
push
pop
jp
div
and
pop
lahf
inc
mov
dec
adc
add
lea
cltd
jp
lds
jne
cmp
and
and
pop
inc
sub
fucomp
jno
nop
ret
aam
jo
mov
xchg
movsb
adc
test
or
sub
sbb
push
sbb
adc
jmp
sub
sub
adc
xchg
pop
ss
sub
jg
xchg
fsubrl
sub
sub
pop
and
daa
or
add
mov
pop
push
or
jecxz
push
fildll
or
es
and
pop
inc
out
in
mov
fs
rclb
push
xchg
jl
clc
lea
inc
arpl
xor
dec
gs
sub
ret
js
pop
aam
dec
xchg
adc
mov
sbb
mov
fistpll
fsub
stc
cmp
fdivl
sub
out
test
sub
inc
sub
ds
cmp
inc
pop
mov
inc
insb
adc
pop
xor
lcall
sbb
jmp
gs
fwait
popf
mov
add
fisttps
jnp
push
inc
clc
sub
push
mov
push
lret
js
add
inc
xchg
sub
divl
adc
fisubs
in
adc
add
leave
jo
mov
xchg
push
push
dec
pop
aaa
repz
cmp
rcr
xorl
lods
stos
pop
adc
hlt
mov
add
mov
outsl
ret
pushf
imul
push
push
pusha
xchg
mov
js
andl
punpckhwd
xchg
mov
mov
mov
sbbb
jnp
wrmsr
dec
adc
movsl
addr16
sub
push
bound
jmp
fbstp
sub
mov
lock
or
xor
cs
sahf
inc
xchg
push
pop
xorb
jmp
cmc
cld
jnp
outsl
popa
or
add
mull
adc
dec
sub
jo
xchg
cltd
iret
dec
hlt
frstor
mov
test
testl
xchg
adc
sbb
daa
mov
sub
in
popl
pusha
mov
add
cmp
cwtl
jns
push
mov
xchg
lds
jecxz
movsl
ss
test
xor
test
enter
mov
lea
adc
fsts
in
test
jecxz
dec
inc
out
addr16
xor
movsb
lret
sub
fsubl
pusha
pop
lods
cmpsl
incl
shll
into
add
aam
xlat
int
insb
lret
and
aam
pop
push
and
xor
xchg
pop
aam
pop
sbb
rolb
mov
and
cwtl
mov
cmp
aad
add
mov
xor
orl
testl
ss
fistpl
add
pop
cli
sysret
jno
test
adc
sbb
mov
push
and
out
jp
mov
aam
jle
or
xchg
bound
jmp
das
inc
imul
in
repnz
pextrw
xor
insb
arpl
fcoml
jge
pop
test
fst
pop
test
int3
sub
xor
ss
sbb
push
mov
lods
add
dec
mov
pop
mov
fsubl
imul
add
mov
ja
in
xor
andl
xor
ss
aam
lret
mov
add
pop
cmovg
inc
imul
out
mov
push
jecxz
mov
adc
jg
fcoms
ret
lret
shrb
mov
fadd
push
add
jne
add
call
loop
cltd
stos
cltd
rep
xchg
push
dec
sub
push
mov
jg
inc
pop
jne
cmc
fdivl
bound
incl
or
scas
dec
mov
icebp
jno
pusha
fistpl
and
mov
mov
hlt
imul
outsb
xorb
loope
inc
mov
and
push
add
xchg
push
xor
cmp
jg
loop
es
test
push
pusha
add
mov
sbb
pop
popf
das
nop
pop
ret
movsl
push
ret
nop
rcll
sbb
dec
inc
mov
xchg
aad
stos
daa
imul
test
out
xchg
popa
test
hlt
inc
ret
lds
mov
or
jo
push
into
jp
add
cltd
sub
xor
jge
stos
xor
pop
call
addr16
shr
add
imul
insl
mov
cmc
cmpsb
stos
pop
fs
jmp
xchg
cmp
inc
add
mull
adc
fsubp
jle
push
imul
mov
cmp
je
insl
inc
push
sub
mov
adc
neg
or
push
popf
or
dec
pop
adc
adc
inc
inc
ss
jge
sbb
dec
sub
pop
mov
cmpsb
xchg
push
in
popa
adc
or
rolb
fs
leave
stos
xlat
or
mov
sub
aad
aam
adc
js
mov
lods
adc
push
jo
dec
push
adc
pop
loope
mov
cmp
xchg
add
jno
mov
jp
shrl
mov
inc
loopne
adc
ret
sub
lock
push
lds
loopne
or
cmpsb
aaa
mov
add
cs
jo
mov
sahf
mov
shlb
outsb
das
imul
fsubrs
add
je
xor
pop
sub
and
xlat
push
or
sub
pop
jp
shlb
jo
leave
das
aas
cmp
fldenv
xor
jno
adc
and
es
add
das
sub
adc
or
ret
push
or
push
dec
les
xor
sbbl
push
sbb
or
rcrl
lret
lea
mov
mov
mov
insl
push
out
sbb
add
aad
jp
movb
mov
dec
ret
je
xchg
pusha
pop
jnp
aaa
repnz
push
xor
outsl
adc
or
adc
mov
in
fwait
cmpsb
scas
xchg
sub
addl
mov
insl
push
fidivl
aam
fnop
cmp
cli
ret
xor
push
mov
mov
in
mov
insb
ret
sbb
and
bound
mov
add
add
ret
push
lock
ret
fs
sub
mov
pop
clc
mov
insl
jo
imul
inc
mov
xor
sub
shrb
push
roll
pop
inc
loope
pop
cmp
adc
sbb
sbbb
xchg
jge
sbb
pop
cmp
in
fimuls
faddl
sbbl
aad
add
or
sbb
enter
jne
sub
bound
std
mov
adc
add
or
cmpsl
arpl
xchg
pop
rorb
sub
xor
mov
lret
cmpsl
cmp
and
movsb
movsl
sti
loopne
lahf
mov
lds
add
mov
inc
arpl
inc
cmp
out
cmp
nop
fnstsw
or
popf
adc
jne
adc
pop
lods
adc
sbb
push
pop
mov
xchg
inc
and
jge
dec
adc
push
sbb
push
adcb
insl
adc
loop
adc
sbb
fldl
add
push
js
lahf
pop
xor
jns
lock
loop
mov
shll
and
mov
int3
orb
mov
dec
js
mov
imul
mov
and
fisttpll
dec
dec
sub
fcoms
add
xchg
sbb
xor
xchg
push
jnp
fnsave
test
push
cmc
sub
stos
mov
mov
xor
icebp
pushf
sar
sbb
pop
in
ret
jo
pop
pop
je
pop
jae
jo
adc
sti
popa
mov
mov
push
pop
xchg
push
pusha
xchg
push
sub
ret
call
call
test
dec
cmp
jge
xlat
movsb
les
fstl
daa
or
in
jno
pop
in
push
stc
cmpsb
pushf
test
loopne
mov
jns
push
inc
test
jmp
pop
jno
inc
sub
rclb
loop
test
loop
outsb
pop
mov
adc
sub
xor
mov
mov
jmp
sarb
pop
mov
ret
adc
dec
push
lret
add
mov
xchg
cmp
jp
fstps
nop
mov
jns
or
in
rcrb
sub
rcr
ljmp
or
jle
mov
mov
packsswb
mov
mov
xchg
loopne
push
or
mov
push
dec
lods
roll
popa
mov
sarb
dec
out
or
scas
or
fwait
dec
xchg
dec
add
xor
clc
sbb
and
icebp
pusha
or
mov
adc
or
lea
mov
mov
jne
cmp
add
xchg
jmp
prefetch
xor
or
mov
fiadds
adc
sbb
push
push
loopne
cmpsl
js
lock
iret
and
loopnew
fwait
sbb
ret
subl
push
mov
and
xchg
push
jmp
mov
push
sub
or
into
dec
push
shr
and
add
mov
jmp
xchg
push
and
or
arpl
jecxz
ljmp
jp
pop
nop
sub
mov
test
sub
sti
xchg
addr16
inc
clc
xlat
test
movsb
ljmp
mov
rcrl
nop
or
cmc
loopne
xor
sbb
sbb
test
xor
jl
and
out
adc
jle
imull
stc
int
mov
aaa
cmp
shlb
fidivrs
icebp
mov
dec
jmp
pop
idivl
add
out
dec
in
mov
sub
rorb
adc
aam
cmovns
cmp
pop
testb
aaa
pop
sub
pop
sub
fwait
rcrl
cmp
pop
adc
add
sbb
push
stos
dec
and
jmp
addr16
xor
ror
push
ret
fs
pop
dec
daa
add
sub
add
sub
xchg
ret
or
lea
inc
dec
dec
dec
jmp
jae
cmp
jecxz
test
mov
jns
loope
add
nop
xor
inc
or
dec
pop
mov
or
cmp
pop
sub
ret
mov
cs
inc
add
jne
jb
rorb
pusha
in
inc
or
jge
add
es
outsb
cmp
repz
sbb
or
mov
je
rorb
std
mov
dec
aam
adc
jmp
pop
mov
test
stc
jl
fwait
mov
inc
pop
and
lds
fwait
inc
sbb
push
add
je
mov
daa
pop
push
add
cltd
jnp,pn
out
ret
inc
mov
jns
adc
movsl
inc
int3
loope
pop
loop
ret
sbb
add
popa
mov
xor
js
mov
xchg
aaa
jno
mov
push
and
pop
and
movsl
leave
cmpb
xchg
bound
sub
out
lret
mov
adcl
testl
jecxz
push
in
subb
aad
mov
lds
daa
insb
mov
and
ss
mov
dec
adc
jecxz
or
jbe
movsb
addl
jae
xorl
push
dec
add
pop
or
inc
push
andb
ljmp
adc
cmp
mov
and
leave
mov
mov
test
sub
popa
iret
pop
xchg
ss
xlat
inc
mov
movb
ret
mov
push
or
push
movsl
push
xor
cwtl
pop
pop
call
push
dec
imull
cs
push
shlb
stos
cs
fldenv
xchg
jp
jb
lret
and
lahf
dec
adc
add
std
adc
or
adc
pop
xchg
jno
mov
adc
mov
jno
inc
jo
addr16
and
or
xlat
or
stc
mov
ret
xchg
je
or
cs
push
cmp
xchg
pusha
mov
dec
pop
jge
orb
ss
and
push
jmp
pop
pop
sub
xchg
or
rcrb
sti
xor
push
in
add
cli
pop
add
imul
arpl
mov
std
mov
add
dec
inc
test
and
outsb
pop
lahf
ror
mov
imul
add
push
add
inc
adc
ret
jge
mov
mov
xchg
sub
jnp
dec
imul
mov
fwait
or
push
cmpl
in
sub
or
xchg
xor
mov
test
cmp
xor
iret
or
test
mov
jle
push
push
sbb
stos
imul
ret
lahf
and
and
cltd
push
jecxz
sub
inc
mov
push
ss
mov
clc
mov
insb
cmp
dec
sbb
pop
or
iret
aad
das
push
xor
xor
jge
sbbb
pop
outsb
inc
mov
test
mov
shlb
pop
adc
and
mov
test
add
jno
popa
pusha
std
cmp
ret
push
bound
or
ret
mov
inc
push
es
xor
dec
ret
shlb
incl
leave
test
sarl
test
pop
add
test
pop
xor
cmp
pop
push
roll
xchg
sub
mov
push
mov
and
das
stc
and
rorb
dec
mov
cmp
mov
pop
fiaddl
aaa
cltd
test
pop
jb
test
cs
cmp
add
add
loope
test
jp
addr16
adcl
or
xchg
popa
add
inc
add
shll
add
imul
shll
nop
insb
faddl
aam
add
je
sub
int
andl
out
fidivl
call
aaa
mov
sub
adc
shll
or
fistps
mov
jnp
hlt
push
fildl
push
lcall
ja
das
rcrb
aaa
mov
sbb
push
iret
subb
paddusb
dec
mov
or
scas
pop
mov
or
xor
inc
imull
cmp
push
xor
pop
rol
imul
sub
jns
adc
sub
jnp
push
mov
cs
mov
sub
imul
push
mov
or
test
andl
push
sbb
xchg
je
adc
sbb
rolb
sub
repz
dec
mov
cmpsl
push
sbb
out
dec
xchg
inc
fidivs
adc
mov
push
rdtsc
dec
pop
and
sbb
dec
jnp
adc
xadd
pop
subb
mov
shrb
sub
cs
ficomps
push
jmp
daa
js
pop
adc
daa
lea
ja
iret
divps
fisubrs
mov
mov
mov
pop
xor
out
fadds
or
adc
push
lret
test
outsb
aad
fistpl
mov
js
in
mov
lea
rol
pop
lock
dec
cmc
jp
or
out
or
adc
mov
push
int
xor
arpl
inc
xorl
insl
lahf
dec
xor
shlb
fsts
mov
mov
fwait
mov
sbb
rol
das
sub
sub
pop
mov
jns
push
loopne
icebp
or
add
enter
lea
adc
lea
dec
iret
or
dec
push
loopne
rclb
aad
jge
xchg
xor
daa
push
subb
int3
daa
in
push
adc
cmpb
jne
shl
dec
cmp
pop
mov
rcll
int
mov
jne
cmpsl
mov
pop
loope
pusha
mov
test
imul
loop
jo
cmp
fs
sbb
pop
adc
jns
sbb
push
cltd
xchg
cmp
fwait
sbbb
add
ret
nop
rcrl
or
xchg
or
xor
lahf
sldt
pop
and
push
movsl
icebp
repnz
push
xchg
fwait
xor
or
xor
aam
add
mov
or
jmp
and
popa
cmc
add
jecxz
adcl
aad
out
ljmp
xchg
gs
cmp
psubq
fcomi
test
push
fs
sub
cmpsl
and
add
es
add
mov
adc
or
push
adc
or
mov
xchg
mov
js
mov
xor
std
fisubs
xor
push
pop
push
pop
lock
or
push
pop
add
add
jns
xor
lds
inc
or
sbb
pop
loopne
aaa
es
dec
cmp
imul
mov
out
ret
das
sub
add
sub
out
ret
sub
or
cmp
rorl
xchg
or
inc
or
mov
mov
sti
les
popa
xlat
push
stc
jnp
pusha
push
add
xor
daa
adc
lret
outsl
pop
fidivl
lods
pop
outsb
shrb
jge
xchg
pop
fisttpl
push
sbb
mov
push
mov
xchg
mov
stos
push
inc
push
negb
es
divl
pop
mov
adc
fcompl
pop
int
loopne
pusha
add
cmpl
mov
push
mov
dec
mov
push
mov
outsb
adc
imul
test
xor
and
bound
cmp
and
cs
pushf
cli
in
add
mov
pop
movsl
daa
cwtl
fiadds
adc
insl
and
je
outsb
sub
std
js
rolb
inc
pop
sub
and
dec
aas
sbb
ljmp
lock
mov
sub
and
inc
nop
repnz
mov
sub
add
and
adc
in
mov
inc
inc
faddl
scas
push
cwtl
pushf
dec
rorb
cmp
and
les
and
sbb
and
roll
xor
jbe
negl
sbb
pop
adc
push
push
pusha
xor
fs
add
push
inc
mull
and
out
and
popa
adc
and
cmpb
sub
pop
sub
inc
or
imul
cld
jnp
and
roll
mov
fildl
fwait
movsl
ss
in
mov
js
cmp
cmp
addr16
jnp
in
fdivs
scas
lahf
pushf
das
mov
les
mov
fsubs
call
sbbb
mov
enter
inc
adc
mov
add
inc
call
or
jno
push
sbb
push
call
pop
xchg
gs
ret
or
fsubrl
or
jb
aad
and
mov
out
repz
in
mov
add
or
loope
scas
or
repz
imul
mov
cmp
ja
cmp
js
mov
scas
lret
push
push
push
jmp
adc
dec
xor
xchg
shll
fsubl
insl
in
test
inc
sbb
jo
push
push
sbb
sbb
dec
rcrb
rorb
sbb
jp
daa
inc
test
push
out
pop
push
xor
mov
dec
xor
add
xchg
ficomps
cmp
stos
mov
sub
out
add
xchg
xor
fsubrs
rorb
loop
sbb
dec
push
xchg
add
add
pop
xor
xchg
cmpsb
in
add
arpl
sti
dec
push
adc
inc
xchg
cmp
adc
jle
adc
mov
cmp
arpl
xchg
cltd
xor
or
dec
shlb
lret
xor
sub
in
fnsave
cmp
push
scas
xchg
jns
sbb
add
xor
mov
sbb
adc
sub
arpl
fisubl
pop
jno
cmc
mov
mov
push
jnp
xor
test
mov
and
lods
xchg
pop
push
imul
aaa
imul
sti
cwtl
cmp
fldl
fs
aaa
in
add
mov
mov
mov
push
mov
idivl
ljmp
test
in
adcb
xorb
test
paddsb
call
jp
and
jo
xchg
shlb
pop
ret
jmp
inc
bound
scas
cltd
clc
sub
dec
and
xchg
dec
mov
into
daa
insl
cmp
jo
lcall
rolb
and
push
subb
push
push
shll
adc
sub
cmp
inc
inc
pop
xchg
sub
pop
mov
cmpsb
mov
and
xorb
arpl
inc
sub
inc
add
cwtl
inc
stos
or
stos
popa
test
test
and
movsb
jmp
jb
xor
movb
dec
pop
pop
sub
add
push
or
adc
nop
cmpsl
imul
fnstsw
add
xchg
xchg
pop
les
daa
cltd
loope
or
clc
mov
ja
cmpsl
mov
xchg
loope
xchg
push
mov
test
not
gs
inc
inc
je
into
rcll
jb
in
loope
and
mov
jecxz
mov
flds
es
andb
dec
and
dec
sbb
dec
loopne
ss
and
fcmovne
mov
jp
mov
pop
js
es
xor
jge
dec
mov
mov
js
xor
hlt
test
test
jb
sbb
add
or
in
sub
sahf
movsl
je
repz
bound
mov
fcomp
xor
xlat
cmp
mov
mov
cmpsl
and
push
lcall
jne
test
mov
out
aaa
xchg
push
and
sub
or
arpl
dec
jb
fadds
lods
inc
insb
sbb
or
push
cltd
xchg
or
pop
pushf
mov
cmpl
jnp
movsl
ja
xchg
faddl
adc
push
loope
sub
lock
push
cmp
xchg
adc
push
jae
dec
loope
pop
push
dec
cwtl
adc
cmpsl
inc
inc
push
mov
sahf
pop
mov
outsl
test
outsl
xchg
add
cmp
jno
xchg
and
adc
jecxz
jo
pop
inc
push
divb
test
outsl
xchg
xor
cmpsb
mov
cltd
test
push
xchg
xor
sbb
je
outsl
andl
adc
xchg
mov
add
stos
adc
test
mov
mov
pop
rcrl
jmp
or
aas
jnp
adc
ja
sub
fadds
int3
imul
add
add
sti
inc
push
dec
adc
xor
inc
sub
sarl
lods
push
sbb
jb
add
shrb
xor
xor
lods
decb
sub
push
cmp
lahf
mov
rcll
mov
add
ja
negl
sbb
mov
add
int3
mov
mov
and
pop
inc
in
push
mov
push
je
add
adc
pop
test
adc
rcr
dec
dec
pop
sbb
and
push
adc
mov
mov
and
mov
mov
imul
inc
stos
mov
cmc
xor
sbb
cmp
inc
mov
outsl
bound
xchg
add
fsts
cs
inc
testl
ret
jno
mov
in
js
mov
push
sub
fistpll
pop
test
imul
cmpsl
lock
sub
sbb
and
jecxz
imul
daa
adc
mov
xchg
pop
mov
push
js
rorb
sbb
or
pavgw
and
shlb
dec
loopne
adc
push
cmc
add
mov
in
outsb
push
lock
fcomps
das
push
daa
in
sbb
fldcw
gs
inc
xchg
mov
pop
cwtl
cmp
sub
inc
inc
xchg
pop
mov
imul
enter
or
and
sub
mov
pop
mov
push
dec
inc
cmpl
inc
cli
js
xor
adc
arpl
ficoml
ret
sbb
popa
rorl
clc
add
xchg
add
clc
ret
dec
mov
xor
fidivrl
dec
cmp
and
popl
xchg
and
pop
jo
out
fidivl
orb
push
aaa
idivl
xacquire
mov
dec
and
cmpsb
or
push
push
cwtl
add
out
sbb
mov
sbb
leave
cltd
mov
sahf
cmp
xor
sarl
test
ret
fisubrs
dec
push
test
adc
pop
push
xchg
and
mov
fs
sbb
mov
popa
lods
mov
and
jge
pop
dec
jns
orb
insb
and
mov
add
fs
pop
sti
ds
mov
fs
adc
or
lret
aam
jecxz
add
gs
or
movsb
shrl
ror
xchg
icebp
push
pop
cs
ss
mov
sub
xchg
adc
lock
or
ljmp
fs
or
pop
xchg
test
add
mov
and
jecxz
push
jecxz,pn
in
mov
cs
shll
test
or
iret
das
adc
repnz
sub
cltd
js
inc
ja
and
sbb
ret
stc
fisubrl
mov
adc
jns
mov
pop
clc
add
xchg
iret
sbb
je
sbb
dec
xchg
cmp
push
mov
sub
mov
fisubl
or
xchg
adc
shlb
enter
pop
and
jnp
insl
lcall
sbb
dec
xor
mov
pop
pop
mov
adc
imul
add
sbb
daa
ljmp
cld
push
cmp
jg
cmp
mov
add
sbb
or
and
cmpsb
mov
push
mov
js
adc
mov
cltd
icebp
push
mov
ret
movsb
stos
pop
pop
sub
stos
push
adc
push
popa
xor
push
loope
sbb
or
jo
fcomps
sub
jmp
rcrl
mov
adc
xor
fcomp
or
inc
jecxz
adc
inc
jp
cmp
cltd
pop
fs
pop
cmp
pusha
int
lock
sbb
adc
inc
jl
mov
out
jno
jno
icebp
push
push
clc
clc
rep
add
insl
popa
add
mov
and
xor
movsb
sub
sbb
xor
pop
and
push
push
dec
int3
sahf
mov
lahf
jmp
dec
sub
mov
cli
rorb
vpmaxsw
cmc
fldenv
xor
jmp
mov
push
gs
sub
insl
aam
add
pop
test
mov
cmp
xor
push
sub
jbe
pop
push
out
ret
pop
int
ret
rcll
pop
lea
sbb
and
inc
sbb
pusha
jl
test
stos
fs
dec
xchg
push
jnp
lds
push
imul
inc
mov
rorl
and
sbb
icebp
mov
imul
mov
lods
mov
movsl
imul
test
fwait
int3
mov
push
scas
lods
adc
push
adc
adc
test
dec
push
add
xlat
or
pop
cmp
mov
outsl
push
add
sbb
inc
xchg
cmp
jecxz
movl
outsb
pop
dec
out
push
push
loope
cmp
pop
movsb
lds
xlat
xchg
sarl
addb
and
push
lods
add
and
call
outsl
into
mov
push
add
lods
adc
ljmp
in
outsb
jmp
push
jmp
inc
push
xor
sbb
cltd
shlb
adc
inc
xchg
stos
cs
mov
add
lds
push
adc
and
loope
shrl
jge
add
pop
rolb
scas
imul
add
add
js
popf
sbb
das
jne
cmp
pop
stos
addl
add
push
in
aad
xor
mov
shl
inc
push
lahf
and
add
mov
jmp
mov
or
xor
dec
pop
ret
outsb
xchg
ss
mov
xchg
jo
lahf
dec
lods
push
jmp
add
dec
push
repz
bound
and
mov
jb
decl
cmpsl
push
dec
loop
and
add
imul
gs
sbb
mov
mov
cwtl
adc
in
fs
push
outsb
xor
sbb
push
imul
das
mov
ret
adc
dec
jecxz
cltd
or
jp
mov
and
sbb
arpl
addb
lret
jb
nop
lods
fldenv
mov
testl
mov
leave
out
cltd
fidivs
pop
fsubl
pop
jl
addl
sub
push
or
xor
into
and
or
xchg
pop
pusha
pusha
add
shll
incl
push
mov
lds
call
cmp
roll
iret
mov
test
or
leave
outsl
testb
mov
stos
out
xchg
jo
ljmp
dec
push
test
cmpsl
imul
je
dec
mov
add
nop
add
dec
cmp
pop
pop
or
add
lahf
dec
and
inc
call
daa
lods
outsb
lcall
or
lock
mov
popa
cmp
xor
dec
pop
in
sahf
mov
lea
repz
add
scas
subb
ret
dec
add
call
rcll
aas
sbbb
jg
jno
pop
inc
scas
pop
jl
cmpsb
pop
sub
js
sub
ficomps
ffreep
iret
xor
add
les
add
cli
dec
xchg
cs
cmpl
or
xchg
cmp
and
xchg
pop
ret
orb
pop
push
cmp
ss
mov
jo
pusha
rcll
mov
xchg
dec
push
lods
push
iret
cmp
pop
mov
gs
enter
push
test
push
addl
scas
add
cmc
rorb
orb
repz
adc
or
or
jb
and
xor
lods
push
sub
jns
cmp
sbb
dec
icebp
inc
inc
or
dec
add
or
lret
inc
movsb
outsl
sub
jmp
clc
xchg
and
shll
mov
or
fcmovne
and
add
cmpsb
push
push
dec
mov
cmc
jecxz
jp
inc
mov
lcall
jo
lret
outsb
mov
adc
jnp
jle
cmp
repz
add
imul
push
and
inc
lds
pxor
fs
mov
arpl
pop
js
sub
sbb
out
pop
mov
push
mov
cmpsl
mov
cmp
loop
jno
and
pop
and
and
leave
iret
movsb
mov
inc
nop
xor
jne
loope
fisubrl
repnz
mov
mov
fucomp
push
sbb
cmpsl
test
nop
fildll
cmp
ret
shll
xchg
test
or
mov
xor
pop
add
push
pop
dec
xor
movsl
xor
sbb
xor
cmp
sub
nop
es
pop
sbb
sub
lods
xor
dec
mov
test
gs
adc
inc
dec
jecxz
adc
mov
cld
adc
xor
addr16
rcr
pop
dec
fldcw
and
and
dec
inc
dec
fstl
orb
cwtl
sbbl
add
push
push
cmc
shl
jo
xor
fsubp
das
sub
cmp
pusha
xor
xchg
cmc
inc
das
popa
mov
add
ret
adc
and
stc
dec
xor
mov
repz
or
dec
cmp
xor
and
mov
std
and
lock
inc
xchg
popf
xchg
rcrb
popf
call
sbb
loope
sti
and
daa
mov
stc
outsb
add
add
inc
inc
pop
mov
aaa
dec
imul
adc
adc
push
arpl
pop
loopne
push
loop
and
and
adc
mov
pop
sbb
mov
jecxz
mov
popl
pop
sub
adc
inc
ret
loope
test
push
in
outsb
dec
dec
sub
addb
or
xchg
xchg
xor
imul
cmpsl
sub
or
inc
push
xchg
inc
push
dec
js
pusha
lahf
movsb
xor
sbb
dec
xlat
sub
dec
mov
insb
in
pop
rol
dec
mov
movsl
aas
xchg
in
push
movsb
hlt
push
push
fnstenv
sbb
and
repnz
add
adc
jb
or
or
cmpsl
lret
xor
xchg
in
es
pop
insl
add
sub
xchg
add
test
cmp
adc
push
sub
mov
clc
xor
push
sbb
sub
mov
nop
jge
sbb
and
incl
popa
xchg
adc
add
cmp
sbb
lahf
and
xchg
cmp
dec
cmp
mov
mov
or
ja
xor
outsb
sub
popa
dec
cwtl
inc
test
mov
mov
insl
xchg
add
adc
sbb
sbb
movsl
movsl
sbb
test
test
or
lods
scas
cmp
dec
dec
ja
adc
sub
push
sbb
loopne
adc
cltd
sbb
mov
aaa
int
add
mov
mov
push
cwtl
test
ret
mov
addr16
pop
push
or
popf
cmpl
and
push
xchg
push
inc
mov
sub
lods
out
xchg
push
cmp
inc
mov
sarl
sub
outsb
xchg
subb
sahf
sub
jmp
fs
push
aaa
dec
cmp
inc
and
adc
mov
jne
sub
ficomps
push
in
and
icebp
adc
scas
mov
sub
xchg
push
jecxz
jne,pt
fs
mov
pop
dec
mov
and
arpl
xor
inc
in
cmp
dec
jecxz
daa
xchg
jns
pushf
sbbl
je
xchg
jp
and
lret
lock
add
enter
mov
stc
in
jmp
sub
test
or
adc
mov
add
pop
inc
and
jo
sub
aas
cmp
movsb
push
nop
add
in
xchg
jo
jo
inc
js
pop
mov
sbb
pusha
inc
sbbb
lret
add
xchg
iret
inc
in
lea
inc
enter
push
inc
add
test
aam
cmovge
push
ja
mov
daa
dec
insl
sub
inc
imul
nop
sbb
push
inc
jge
jecxz
xorb
daa
adc
repnz
sbb
adc
inc
jb
or
aam
xchg
cli
mov
test
hlt
scas
test
and
push
cmpb
mov
xchg
or
add
adc
inc
sub
or
lahf
push
cmpb
cmp
jge
rcll
mov
test
ja
es
adc
push
xor
mov
mov
cs
push
bound
loopne
pop
in
cmp
inc
arpl
lea
push
clc
sub
dec
nop
sub
jl
hlt
ret
in
mov
arpl
mov
and
arpl
out
ljmp
clc
or
jns
jne
xor
loopne
inc
movsl
add
add
xor
ror
sub
in
mov
in
dec
and
es
jl
and
rclb
mov
shlb
cmp
jbe
pop
dec
inc
lods
add
add
loope
adc
sub
xchg
imul
dec
xlat
adc
or
rorb
and
xlat
test
or
pop
push
cmpsl
add
and
in
add
test
ret
in
mov
inc
inc
daa
out
xor
add
lds
nop
add
sbb
ret
add
add
rclb
or
cmp
popa
inc
add
mov
add
jecxz
cmp
lea
movups
and
push
adc
rclb
push
enter
xor
or
adc
cli
ret
push
loop
bound
and
test
cmpb
sbb
test
and
orl
popa
fadd
or
push
sbb
in
xor
mov
mov
mov
stos
dec
inc
enter
les
mov
loope
sarl
pop
sbb
andb
and
xor
adc
pop
sbb
jb
pop
xlat
cs
scas
loope
ja
pop
pop
push
and
das
push
xlat
pop
mov
adc
mov
daa
sub
aaa
outsl
ret
dec
inc
daa
xorb
das
mov
push
mov
inc
push
mov
mov
aad
cli
cmpsl
push
inc
push
js
sub
add
add
jnp
or
imul
cwtl
and
jge
loope
push
cmp
fiaddl
push
xchg
xor
addr16
jmp
mov
ja
jmp
cs
jae
mov
jecxz
jge
loopne
adc
rolb
dec
jecxz
and
push
sub
sub
and
sub
or
add
mov
sub
sub
dec
pop
or
arpl
test
faddl
and
adc
sbb
pop
sbb
clc
jg
xchg
and
jl
fimull
cld
scas
cmpsb
mov
and
inc
add
jae
js
mov
loope
rolb
jno
call
hlt
xchg
popa
jo
test
sbb
jne
je
xor
pop
or
popf
and
add
arpl
push
mov
sbb
jne
daa
jl
mov
test
adc
xchg
dec
lods
dec
aam
jne
dec
ret
shrl
or
cmp
bound
mov
pop
mov
adc
repz
aaa
out
aaa
cs
push
outsb
cmc
imul
mov
xchg
and
dec
test
fadd
cmovs
xor
loopne
push
adc
pop
xor
lock
cmp
jge
and
or
jmp
sbb
insl
or
dec
aas
push
dec
push
sub
andb
scas
jb
cmpsl
nop
xchg
stc
adc
in
xchg
test
dec
inc
pop
and
add
inc
pop
jno
ja
sbb
add
fnstsw
pop
push
shlb
insb
add
bound
icebp
jno
adc
fwait
les
mov
jns
mov
xor
stos
ret
adc
shlb
push
mov
jb
testl
fisttpll
mov
sbb
inc
pop
mov
pop
cmpsl
and
scas
pop
enter
or
xor
and
or
clc
insl
jns
divl
rclb
pop
sbb
mov
push
movsl
inc
mov
movsl
adc
mov
adc
hlt
aam
and
fsts
aaa
sbb
mov
mov
inc
jae
ret
cmpl
push
test
adc
mov
xlat
arpl
or
dec
mov
mov
int
xchg
inc
mov
and
or
loopne
inc
lret
adc
je
rolb
test
out
add
xchg
jp
xchg
xor
imul
jmp
jmp
adc
pop
insl
sbb
mov
mov
sub
inc
dec
xor
rorb
xchg
add
dec
loop
outsl
int3
dec
pop
add
sbb
push
fwait
sbb
pusha
add
pop
lock
and
or
jns
push
pop
cmp
dec
xor
add
cmpb
subb
add
aam
fs
icebp
mov
ret
loopne
xchg
pop
cmpsl
cmpsb
std
push
insb
jmp
sar
xchg
scas
pop
or
sbb
shll
bound
subb
ffree
es
cmp
jnp
hlt
in
xor
mov
andb
ret
mov
dec
lods
loopne
test
test
leave
dec
mov
out
lret
and
loopne
mov
xlat
repnz
push
scas
sub
ret
fisubrl
movsl
pop
or
notb
ds
add
js
dec
popf
fwait
mov
fwait
aaa
sub
or
sti
fucomi
je
cmp
and
push
mov
inc
mov
inc
mov
push
mov
std
mov
or
jp
adc
mov
and
cmp
lock
loop
jb
dec
sbb
pop
enter
inc
push
adc
add
push
cmp
dec
aam
mov
mov
mov
aas
jmp
inc
jge
sub
inc
xlat
fldl
in
sbb
shrb
inc
bound
inc
mov
cmp
pop
mov
pop
and
pop
xchg
imul
mov
ficoml
jne
aaa
jbe
sbb
mov
loope
push
insb
xchg
sub
or
je
push
pop
pop
push
adc
imul
push
mov
or
pop
imul
sub
ds
test
adc
mov
xchg
mov
popa
add
das
jg
test
xchg
xlat
push
inc
and
ror
adc
jge
insl
push
inc
jmp
andl
ret
inc
test
loope
mov
inc
sub
mov
mov
jne
mov
or
lds
xchg
or
shl
mov
shll
mov
sbb
aas
lods
inc
mov
push
xchg
and
call
inc
lods
mov
mov
cmp
inc
rcrb
insb
insl
adc
in
and
xor
cmc
push
jmp
adc
aad
ret
xor
shrb
mov
in
and
dec
out
mov
and
pop
jecxz
jl
xor
insl
and
sub
mov
jno
lea
fimuls
call
mov
xchg
cs
adc
dec
mov
js
inc
mov
adc
outsl
sbb
dec
popa
and
pop
aam
das
jno
test
sub
push
test
aas
xchg
mov
sub
mov
sti
stos
and
aad
mov
adc
bound
sbbb
or
in
xchg
xor
adc
movsb
push
out
shll
fdivrl
mov
negl
or
xchg
fiadds
movsb
xorl
mov
and
adc
stos
test
and
mov
cmc
mov
int
js
add
loope
pop
dec
inc
jecxz
std
or
mov
pop
add
das
jae
scas
or
and
loope
jne
cmp
lods
cmpsb
sti
rcl
jno
pop
mov
xchg
in
int3
into
or
push
mov
icebp
or
push
and
inc
imul
imul
pop
test
dec
add
int
mov
sbb
mov
bound
add
ret
push
popf
mov
cltd
mov
mov
and
mov
mov
test
mov
pop
test
mov
xor
and
sbb
call
fwait
dec
hlt
dec
cwtl
xor
mov
add
mov
shl
jbe
pop
scas
mov
sub
pop
pop
lea
and
sti
mov
cmp
push
jmp
lea
xor
lret
jmp
cmp
push
test
and
js
mov
push
sarb
cmovbe
push
inc
loope
jmp
mov
sub
dec
je
inc
subb
dec
mov
jl
scas
add
sub
and
sub
sbb
adc
push
inc
mov
jae
lods
loope
enter
sti
and
pusha
and
in
push
mov
bound
add
inc
insl
and
fcmovb
and
jnp
cmp
loopne
imul
mov
pop
sub
pop
or
xor
push
xchg
mov
faddl
fs
scas
adc
mov
push
jbe
sub
mov
fisttps
stos
jne
test
cs
scas
dec
insb
loope
dec
les
outsb
pusha
mov
fucomi
in
imul
test
or
cltd
fadds
add
add
adc
xchg
ret
lods
jo
adc
add
xchg
or
push
call
adc
or
in
sbb
sub
mov
pop
mov
fwait
insb
and
inc
mov
xchg
dec
sti
push
sbb
pop
inc
das
icebp
sub
shll
xor
mov
cwtl
pop
bound
aad
and
dec
dec
ja
sbb
push
adc
inc
imul
lods
xor
lock
fidivl
adcb
push
fcmovnb
outsb
leave
std
in
inc
cs
iret
sub
pop
je
and
popa
roll
mov
lods
ret
adc
mov
sbb
loope
cmp
push
push
shrb
std
sbb
ret
push
mov
inc
imul
and
inc
shrl
daa
or
pop
in
mov
xlat
adc
sub
out
xor
dec
pop
es
insl
repz
clc
cwtl
jb
loopne
xchg
movsl
mov
out
push
mov
inc
add
cmp
fwait
cmp
les
cmp
adc
mov
shlb
ficoml
xchg
xor
popf
loopnew
jo
pop
jl
divl
mov
ret
mov
nop
outsb
add
das
push
mov
push
xor
inc
mov
in
push
adc
sub
mov
arpl
gs
popa
int
jno
pop
xchg
add
sub
inc
daa
fs
aad
sub
loop
mov
xchg
xor
insl
loopne
jae
sub
les
adc
ja
rcrb
movsl
pop
scas
mov
add
add
push
sub
pop
and
and
imul
mov
hlt
jns
adc
adc
aam
mov
cli
js
fdiv
stos
sbb
jl
dec
stc
out
ficompl
pop
push
jns
fimull
imul
in
xchg
cmpsb
icebp
or
mov
inc
and
rcll
lret
decb
push
arpl
mov
js
xchg
add
frstor
push
finit
pop
adc
ret
and
and
inc
sub
lock
dec
fstps
inc
adc
or
inc
or
fists
sbb
add
mov
jge
push
test
mov
arpl
ret
pop
adcl
inc
sysret
adc
xor
outsl
mov
cmp
xor
mov
fisttpll
xchg
add
imul
imul
enter
sub
push
dec
pop
inc
push
mov
mov
mov
stos
xchg
mov
ret
mov
loopne
add
and
inc
push
jns
adcb
and
scas
loope
decl
or
or
push
dec
out
mov
hlt
and
cmpsl
shrl
mov
shll
lret
jae
add
adc
sbb
fwait
daa
push
mov
and
mov
movb
pop
jns
xor
sbb
push
sbb
ret
fwait
cmc
syscall
dec
pop
rcl
js
or
jnp
arpl
adc
xchg
mull
inc
cmp
add
das
fs
mov
mov
inc
and
or
or
loop
std
ret
ret
or
inc
adc
push
push
xchg
jge
insb
or
mov
xor
and
push
cmp
sub
aas
ret
cltd
jns
ja
adc
outsb
dec
jo
fmull
xchg
adc
cmpsb
loope
loop
mov
adc
push
lods
push
or
andb
ret
aam
inc
mov
rolb
add
aam
repnz
mov
mov
arpl
push
rolb
push
imul
scas
mov
es
and
push
mov
cltd
cmp
or
adc
jmp
adc
and
ret
cmp
add
and
scas
push
fdiv
sub
or
add
cmp
and
pop
test
inc
jle
push
or
sbb
out
sub
sub
outsl
test
xor
sub
imul
pop
dec
es
je
xor
inc
js
push
inc
sbb
loope
les
sub
inc
xchg
push
ljmp
mov
rcl
pop
or
inc
inc
push
dec
aad
or
push
leave
jns
mov
cmp
sub
add
xchg
xor
sti
dec
adc
add
icebp
cwtl
sub
jbe
jmp
xchg
sub
ret
popa
or
insb
jne
sub
xor
stc
mov
pop
xchg
sbb
or
pop
rcrl
std
mov
leave
sub
or
lcall
imul
add
lahf
sahf
decl
sbb
insl
rcl
mov
mov
xlat
sahf
inc
and
push
add
dec
cmp
ja
stos
icebp
mov
and
cwtl
mov
mov
push
adc
inc
pop
add
jns
cmp
bound
test
xchg
push
fists
iret
icebp
add
inc
mov
pop
lret
icebp
mov
mov
testl
sbb
xor
dec
adc
inc
nop
hlt
add
subl
mov
fcmovb
shll
mov
inc
mov
push
mov
ss
adc
or
fdivr
push
bound
cmp
xchg
and
sbbb
dec
jmp
cmp
push
loopne
add
mov
push
sahf
mov
dec
dec
aam
adc
push
xchg
gs
das
mov
mov
cmpsb
and
jl
jp
and
pop
and
fistl
loopne
fsts
inc
cltd
push
mov
and
outsl
shlb
add
call
pop
push
and
movsl
dec
and
push
mov
or
adc
dec
inc
or
dec
and
sbb
movsl
push
add
adc
arpl
mov
mov
in
rorb
push
inc
sub
adc
and
mov
sub
jb
call
je
sub
int3
push
pop
dec
in
pop
xor
jg
adc
cmp
sbb
cmp
pop
sub
dec
adc
arpl
mov
jb
loope
ret
cmp
leave
in
jmp
mov
testl
mov
add
xchg
adc
jge
test
jl
lea
aaa
push
iret
adc
dec
dec
jb
pusha
pop
dec
or
sub
dec
sbb
jnp
into
jmp
jmp
mov
out
lea
rclb
in
cmp
mov
xor
popa
and
data16
sbb
jg
fisttpll
jnp
mov
lret
pop
push
adcb
xor
mov
push
aad
sbb
test
mov
inc
lods
cltd
push
sub
or
sbb
inc
sbb
mov
push
jl
mov
sbb
sub
jno
ret
aam
mov
pop
mov
bound
or
mov
xchg
sbbl
sub
pop
mov
test
lcall
xchg
jnp
movsl
int
add
in
shrl
pop
xchg
sub
and
popa
pop
jns
sub
ret
shll
push
sti
and
and
mov
icebp
xchg
push
pop
xchg
sbb
mov
js
cs
pop
icebp
xor
jle
adc
mov
dec
ret
mov
sti
adc
push
and
lds
mov
shlb
pushf
outsb
sti
cmp
loopne
leave
fdivrs
lea
sbb
sbb
sub
mov
sub
xor
sahf
pop
xchg
ret
xchg
mov
push
in
lea
or
lds
pop
mov
movsb
gs
jmp
lcall
pop
adc
mov
push
add
idivb
rclb
sub
cmpsl
cmpsl
pushf
add
inc
les
test
mov
add
test
push
and
add
fstl
push
cmp
adc
pop
pushf
jmp
aaa
xchg
adc
xchg
and
cmp
xchg
andb
inc
or
mov
pop
xchg
arpl
aaa
add
push
std
mov
jmp
daa
loop
inc
inc
push
inc
lock
pop
add
fisubrs
pop
std
push
jmp
adc
cmpsl
lahf
add
int
adc
dec
add
leave
xchg
fimuls
movsb
dec
out
cmp
into
jno
jo
sbb
lret
outsl
pop
pop
add
addl
je
pop
sbb
sbb
es
pop
adc
push
and
xorl
movsl
and
js
push
or
inc
and
and
sarb
cmp
mov
mov
mov
in
push
and
mov
mov
inc
aaa
jae
jmp
xchg
inc
dec
scas
and
shrb
add
push
xor
movsl
jge
pusha
or
pop
and
adc
out
jg
push
scas
nop
push
inc
push
bound
aad
mov
mov
movsb
or
jne
call
mov
rolb
pop
or
jnp
add
dec
cltd
mov
sbb
mov
mov
lahf
les
push
lods
sub
inc
adc
dec
lods
enter
dec
clc
or
cmp
rolb
test
aad
xor
leave
pop
sarl
je
and
jg
popa
jb
jecxz
mov
dec
xchg
mov
and
sub
adc
pop
shlb
jecxz
add
les
idivl
lret
pop
aas
add
mov
jnp
shlb
out
loopne
in
and
mov
aaa
mov
jne
and
imul
pop
xchg
popf
push
adc
or
decl
xchg
or
inc
jmp
lea
sub
arpl
and
imul
xchg
add
out
jge
push
inc
les
icebp
cmc
imul
and
lea
sbb
sbb
cmpsb
mov
cmp
or
xor
adc
ret
push
and
subb
lods
dec
fistpll
push
aaa
mov
cmpsb
cmp
add
or
fbld
push
mov
roll
in
xlat
xchg
out
mov
inc
push
nop
rclb
push
inc
js
das
xchg
aam
jmp
sbb
pop
cmp
or
push
lahf
dec
push
mov
mov
push
sbb
loop
mov
rcrl
adc
aas
pop
cmp
popa
int
call
ret
fisttpll
stos
xchg
mov
daa
adc
test
push
push
in
pop
adc
push
inc
cmpl
clc
sahf
cvtdq2ps
adc
daa
mov
lds
lret
jno
mov
mov
lret
in
add
xchg
mov
push
add
movsl
mov
lds
xchg
pop
imul
mov
pop
es
mov
loopne
es
adc
pushf
andl
push
and
pop
pop
jle
add
fcmovb
test
repnz
cli
dec
ljmp
push
mov
jl
jo
jp
add
push
cmp
lods
adc
jo
push
ret
inc
nop
lcall
sbb
jo
inc
adcl
filds
hlt
shll
push
test
fiaddl
push
or
aam
mov
dec
movsb
xchg
sarb
sub
lea
cltd
xchg
sub
jne
mov
and
mov
dec
enter
inc
ret
ror
mov
fnsave
shrb
aam
jmp
lret
add
dec
mov
dec
lea
jne
and
test
mov
cmp
and
sbb
lret
data16
lret
pusha
xchg
hlt
jle
ret
mov
test
pusha
aas
jg
imul
shll
pop
dec
test
ds
and
xchg
jp
sbb
in
and
add
pop
pop
add
cltd
mov
popf
add
inc
pop
inc
ja
shrd
push
aad
loop
fidivl
fadds
enter
cmp
dec
insl
xchg
imul
stos
jb
rolb
cmp
test
sub
jne
dec
jmp
imul
pop
add
inc
and
add
aad
sahf
add
pop
pop
arpl
arpl
jmp
pop
test
jecxz
or
dec
pop
das
jo
out
ret
jmp
cmpsl
lea
outsb
enter
gs
inc
mov
cmp
into
sahf
rol
cmpl
movsb
andl
lods
pop
test
add
cmp
inc
add
xchg
sbb
and
jno
or
xlat
sbb
popf
loope
xchg
loope
or
add
sbb
popa
jmp
orl
push
add
test
inc
cmp
scas
test
add
push
xor
xor
pop
sbb
and
inc
lea
add
mov
add
shll
dec
outsl
add
xchg
es
mov
cmp
mov
xchg
mov
xchg
pop
and
inc
imul
dec
push
dec
lods
add
and
jmp
call
cmp
push
call
addr16
pop
pop
cmp
arpl
lcall
jp
jo
inc
or
add
into
inc
pop
cwtl
cmp
addl
repnz
inc
rcrb
inc
add
add
add
sbbl
out
insb
cmp
lcall
popa
cmp
mov
xor
fwait
sub
xchg
mov
sahf
movsb
pop
popa
cltd
pushf
adc
fcoml
jne
shrb
mov
add
pop
movsbl
jnp
xorl
pop
adc
dec
inc
mov
js
es
jns
insl
adcb
addr16
jge
jl
adcl
adc
cltd
pop
and
ret
inc
jmp
add
pop
push
int3
pop
push
xor
sbb
addl
ret
cltd
mov
adc
pop
cmp
fiaddl
jbe
or
xor
or
ret
imul
pop
aam
fnsave
js
and
mov
dec
pop
pusha
or
stos
push
pop
addr16
rol
xlat
pop
lds
push
popa
andb
loope
imul
mov
xchg
xchg
sbb
leave
inc
lret
rcrb
push
mov
sbb
lods
pop
rolb
sub
mov
adc
sbbl
inc
sti
test
outsb
xchg
iret
pop
test
sub
lods
xchg
notb
sub
mov
mov
xchg
movsl
or
cwtl
rclb
fisubl
movsl
shll
jne
rclb
mov
shll
sub
lods
push
je
xchg
stos
and
add
in
imul
faddl
jmp
jne
push
dec
insl
or
pop
inc
mov
pop
fwait
roll
sub
sub
sub
dec
loop
push
test
mov
les
mov
push
std
xchg
push
add
add
inc
lahf
mov
jecxz
andl
pop
mull
lea
or
sbb
mov
mov
jns
movsl
push
adc
xor
lds
lods
and
xor
jne
mov
nop
sbb
idivl
adcb
cmpsl
sbb
cmp
inc
scas
inc
lods
add
pop
shrl
dec
mov
daa
pop
fisubl
test
dec
inc
test
or
sub
push
and
sbbl
xor
adc
rol
js
mov
pop
insl
adcl
mov
mov
add
add
xor
cmp
daa
sub
lods
rol
xchg
or
and
adc
call
movsb
bound
jmp
leave
loope
cmc
jnp
mov
nop
movsl
lds
mov
add
add
push
adc
pop
add
hlt
jle
add
jae
pop
lock
add
adc
arpl
xor
xor
fimull
mov
add
jnp
jmp
mov
or
adc
add
and
adc
cmp
andl
pop
popa
sti
xor
in
push
scas
inc
sub
sub
and
pop
dec
jecxz
adc
mov
inc
and
arpl
push
cmp
push
pop
adc
ret
lret
clc
cmpb
and
sbb
dec
mov
xchg
inc
dec
dec
lock
scas
inc
adc
cmpsl
lods
jno
add
bound
jmp
cmp
loope
dec
cmc
aaa
repnz
sbb
cmpsb
jne
inc
call
adc
sub
insl
fldl
rcrl
xchg
mov
jne
inc
mov
adc
in
mov
das
cmpsb
in
push
ficoms
mov
popa
leave
ret
lods
pop
ss
lock
rcl
sub
xor
ret
sub
adc
pop
scas
loope
adc
adcb
add
jp
push
fldt
imul
xchg
push
fisubs
dec
mov
int
dec
das
push
xor
sub
cmp
stos
mov
sbb
clc
pop
ja
cmp
cli
push
or
popa
clc
or
popf
roll
mov
add
repz
xor
xor
add
sub
lea
sub
adc
lret
xchg
mov
int
sub
mov
stc
fisttpll
fidivs
pop
jecxz
mov
sub
insb
pop
js
mov
das
daa
aam
sub
add
rorb
invd
adc
dec
rcrl
mov
mov
jnp
mov
inc
mov
scas
or
push
adc
xchg
pop
inc
mov
shll
imull
or
andb
xlat
lret
mov
enter
test
and
and
scas
and
or
daa
pop
lods
mov
xor
icebp
adc
test
mov
pushf
and
and
add
push
mov
push
sbb
and
pop
arpl
mov
add
push
out
dec
inc
jnp
movsl
xchg
sub
ret
fnsave
cmp
or
pop
mov
imul
bound
cltd
or
sbb
cltd
push
in
or
sti
xchg
xor
scas
mov
ss
mov
mov
lea
lahf
xchg
fistpll
sbb
dec
out
xor
cld
data16
icebp
pusha
outsl
adc
loope
add
imul
aad
push
and
mov
add
cmp
push
test
xor
aad
jo
loope
out
mov
cmpsl
or
or
or
jecxz
or
popa
inc
mull
hlt
mov
call
add
pusha
cmc
aam
pop
pop
dec
fsubs
stc
and
xor
inc
fwait
aaa
mov
add
mov
sbb
jae
lahf
ljmp
xor
pushf
imul
js
push
or
in
and
jmp
xchg
mov
cmp
mov
sub
jnp
add
xor
mov
pop
mov
mov
sbbl
adc
xchg
mov
dec
insb
popa
inc
inc
sbb
jae
sub
test
or
push
out
and
or
movl
mov
mov
mov
and
push
add
xchg
dec
or
nop
test
xor
ljmp
insb
push
fisubrl
sub
mov
push
and
aad
dec
pusha
lods
lea
out
enter
mov
add
pop
jo
add
push
and
jo
inc
aaa
jo
stos
sub
repnz
stos
inc
add
sub
fistps
jbe
mov
stos
out
mov
lret
popf
mov
das
mov
add
or
push
test
adc
sub
add
push
jmp
mov
inc
and
cltd
inc
sub
or
push
mov
push
push
push
sub
pop
pop
data16
imul
or
cmp
sbb
pop
jmp
subb
xchg
push
popa
add
or
popf
jb
adc
fists
scas
loope
js
mov
lret
sub
dec
les
dec
fucomip
jmp
pop
rorl
shll
lea
sbbb
cmpl
rolb
add
popf
jnp
add
mov
out
add
fwait
xchg
dec
movsb
push
lea
pop
jecxz
orb
insb
or
sbb
mov
rclb
dec
in
mov
sbb
xchg
and
cmp
aaa
pop
clc
jb
jle
inc
or
pushf
add
xchg
inc
xchg
sahf
add
add
out
adc
negl
cs
ss
xor
mov
movsb
push
dec
push
stos
fdivl
add
ret
push
test
mov
jnp
mov
pop
and
mov
pop
in
mov
imul
push
rcll
cs
xchg
mov
or
sub
test
std
adc
sbb
sub
sub
test
push
pusha
dec
filds
and
and
dec
mov
fmuls
aaa
and
inc
mov
push
cmp
popa
push
cmpsb
xor
lea
and
dec
push
push
mov
rclb
add
mov
es
push
mov
push
and
std
sbb
loop
mov
push
mov
or
rcrl
mov
xor
sbb
xchg
sub
ret
ret
leave
popf
in
xor
mov
insl
cmp
test
push
stc
in
sub
sub
mov
sub
push
and
xor
mov
loop
inc
popa
and
xchg
mov
pop
inc
cwtl
imul
xor
insb
lcall
xchg
pop
sbb
std
insl
daa
pop
jg
xor
sahf
sbb
les
pop
or
ja
rcrb
push
mov
out
mov
lahf
xor
push
dec
repz
or
mov
push
ret
adc
xor
rcl
scas
fistpl
cmp
fidivl
push
cs
stos
sbbb
aad
icebp
fwait
xor
ret
xchg
ss
jmp
ret
ljmp
filds
aam
mov
insl
mov
es
xchg
repz
neg
jp
dec
cmp
sbb
xchg
xor
loop
movsb
jecxz
jl
and
icebp
aam
jns
xchg
mov
pop
xchg
mov
fldt
js
mov
ja
pop
mov
pop
sbb
arpl
add
scas
sbb
mov
mov
adc
or
mov
divb
out
xor
clc
cmpsb
aam
enter
inc
inc
jecxz
pop
dec
aad
or
inc
add
or
pop
fstpl
gs
mov
sar
cmp
aad
loope
adc
xor
data16
js
and
xorb
imul
jnp
jge
das
dec
mov
sub
test
xchg
insb
cwtl
or
dec
cli
sbb
xchg
fcmovbe
sahf
mov
dec
insl
mov
loope
ret
xor
cwtl
push
stos
and
rolb
dec
mov
dec
addl
fildl
js
insl
xchg
sub
xor
jno
mov
fs
lahf
or
imul
and
pop
fisubl
mov
dec
jecxz
pop
push
nop
push
sbbb
pusha
or
sarb
popf
call
pop
int
mov
paddq
out
pop
iret
rolb
or
outsl
mov
dec
cmp
ljmp
inc
je
test
adc
and
scas
inc
mov
arpl
nop
scas
dec
mov
aas
call
imul
jo
or
lods
and
xchg
imul
aam
push
mov
adc
enter
cwtl
add
test
fldt
and
repnz
jbe
mov
and
cs
lahf
lods
push
ret
push
mov
es
sbb
cwtl
mov
lea
or
add
sub
push
dec
xor
xorl
mov
dec
xchg
xor
and
movl
jle
cmpsl
adc
mov
adc
adc
test
mov
adc
rep
sbb
js
int3
pop
and
sub
jns
call
imul
jne
or
inc
aas
lahf
outsl
inc
pop
imul
js
test
sub
mov
mov
jmp
lock
addb
sar
ja
dec
rdtsc
div
xlat
mov
jge
or
xor
mov
push
sub
and
dec
xor
mov
rcrb
int
push
imul
shll
mov
sub
out
jno
cli
xor
ret
cs
push
inc
jmp
movsl
rol
mov
jmp
mov
lret
ja
imul
insb
fistpl
jge
and
test
ret
shlb
loope
subl
or
out
inc
and
or
push
addr16
inc
fisubl
das
test
adcl
divl
inc
mov
lea
loope
test
cltd
mov
xchg
adc
pop
frndint
add
int
pop
mov
fbld
or
ret
xchg
mov
add
sub
pop
test
mov
popf
mov
pusha
mov
loopne
std
xor
mov
fwait
adc
push
jle
sub
jmp
or
pusha
je
enter
sub
mov
push
adc
test
xor
das
jmp
or
nop
add
and
adc
and
ss
js
xchg
adc
pushf
mov
js
rclb
lret
add
repz
sub
pop
lods
outsb
repnz
cmp
mov
dec
shl
sub
inc
jge
rcrb
or
jecxz
test
sbb
stos
inc
and
or
iret
jae
sbb
aaa
pop
call
xor
xchg
inc
cmp
and
test
outsl
add
add
and
pop
loopne
mov
filds
cmp
sub
or
xor
and
sub
jmp
push
es
lds
call
jo
push
sbb
and
idivl
scas
cmp
sahf
cmpsb
dec
sub
push
mov
sti
mov
rcr
and
add
add
rcll
fstp
out
pop
mov
test
mov
sbb
sbb
xchg
les
push
dec
sahf
xor
jno
les
sub
call
add
or
ds
decl
loope
imul
lahf
and
fsubl
insb
xor
jge
cmp
push
ds
jge
and
sub
or
mov
shlb
inc
add
or
mov
call
pop
push
out
xchg
addb
cmp
cmp
rol
mov
mov
cmc
adc
push
rcl
out
sarl
lods
stos
xchg
and
sbb
sub
mov
mov
enter
repz
adcb
sub
mov
push
mov
jge
fdivl
scas
or
aas
adc
push
mov
das
pop
push
sahf
fimull
fdivl
sbb
sub
mov
jecxz
sub
lds
orl
stos
daa
fiadds
xchg
outsl
mov
xchg
jb
mov
xor
and
testl
push
test
fisttpll
push
mov
icebp
adc
loopne
js
push
push
xchg
lods
pop
mov
shr
daa
ljmp
shlb
mov
fcoml
mov
ret
push
rolb
sbb
or
lock
and
sbb
insb
ja
insl
sbb
ret
mov
loope
pop
test
mov
pop
movb
lods
das
lock
repz
mov
dec
out
sbb
imul
fucomi
xlat
rol
add
or
sub
add
jmp
inc
xchg
ret
mov
test
lahf
xlat
jne
popf
rol
in
sarb
ror
sbb
sbb
mov
xchg
jbe
pop
xchg
les
inc
shrl
mov
shr
lcall
std
es
inc
dec
inc
push
add
adc
cmp
mov
fiadds
daa
fsubrl
in
ja
xchg
or
int
and
xchg
rcrl
cmpsb
test
mov
add
test
clc
pop
jns
shlb
loopne
pop
lds
jle
loope
pop
fsub
icebp
cmc
mov
data16
fucom
leave
inc
push
cli
sbb
ret
out
test
cmp
push
pushf
div
aaa
insl
sti
out
ljmp
stos
xchg
lahf
lock
mov
adc
lods
aam
dec
cmp
xor
lret
cs
shrl
daa
sub
imul
addr16
pop
inc
add
movsl
loope
push
mov
adcl
add
repz
adc
sbb
xor
lea
jmp
ljmp
and
je
aam
js
sbb
popf
mov
cmp
pop
inc
movsl
jno
add
push
aas
push
movsl
sbb
cmpsl
and
mov
or
call
test
mov
divl
out
add
mov
add
mov
add
out
cmpsl
add
mov
bound
daa
roll
mov
cwtl
jns
pop
lcall
ljmp
add
hlt
or
xor
data16
sub
inc
mov
add
adc
or
or
mov
in
mov
cmp
add
adc
add
xchg
ret
add
je
cli
mov
js
sbb
or
sub
jle
cmp
aas
mov
outsl
lds
lock
sub
js
mov
and
mov
fidivs
mov
repz
mov
sbb
rcrl
cltd
cmp
pop
pop
mov
dec
sarb
aas
repnz
push
and
shlb
pushf
jno
lret
mov
add
cmp
mov
sub
mov
sar
ljmp
push
aaa
pop
and
or
jae
sub
lfs
cld
out
and
mov
aas
gs
js
mull
mov
sahf
dec
in
xchg
push
inc
insb
js
dec
scas
cs
add
cmpxchg
add
or
pushl
mov
jnp
ljmp
sti
data16
adc
push
insl
xchg
dec
xor
pushf
push
jo
je
scas
idiv
cli
sub
jg
scas
sub
jp
aaa
cwtl
sub
call
pop
inc
cmp
outsb
and
or
xlat
movsl
push
mov
popa
xchg
or
push
sub
clc
fcomp
loope
cltd
sbb
ret
sub
mov
repz
add
mov
das
sub
add
sahf
stos
ja
xchg
push
push
in
jp
jne
pop
xchg
aam
in
dec
mov
jb
imull
xchg
push
or
sub
dec
and
das
cmp
sbb
aad
xor
outsl
scas
loopne
or
cmpsb
sbb
es
fwait
icebp
pop
mov
daa
sub
mov
add
call
ret
sub
addl
and
add
pop
enter
enter
mov
cs
cli
insl
subl
bound
dec
inc
rcll
ss
test
jmp
dec
pop
dec
push
ficoms
xchg
cs
rorl
pushf
rcl
leave
fsubs
or
or
lret
pushf
pop
push
filds
cmp
mov
es
pop
inc
sub
in
sbb
cmp
clc
mov
sbb
fildl
mov
push
lods
mov
inc
adc
cmp
xor
sbb
mov
sbb
add
cmp
stc
xchg
jns
loopne
filds
fwait
pop
test
adc
fstpt
jle
pusha
and
jb
and
push
dec
call
nop
jecxz
rolb
adc
repz
hlt
stos
cmp
or
test
inc
mov
and
add
jecxz
jo
int3
pop
call
and
or
push
pop
sbb
mov
ds
mov
dec
daa
inc
and
mov
dec
sbb
jl
jecxz
addl
add
inc
inc
out
cmp
push
dec
test
xor
int3
push
xor
cmp
cwtl
push
cwtl
jbe
xchg
adc
cmp
ss
fcom
das
sbb
mov
fistpll
dec
cmp
cmp
sub
stos
outsb
sub
inc
push
mov
daa
imul
aam
loopne
test
ret
dec
loop
mov
jle
rclb
repnz
shl
and
xchg
aaa
add
sbb
in
and
jno
sub
movb
lods
adc
pushf
adcb
jae
mov
gs
movsl
mov
subl
pop
out
mov
pop
cmc
and
pusha
dec
cmp
cmp
cmp
mov
ret
in
adc
mov
lods
pop
or
dec
pusha
nop
lds
xor
jle
repnz
sbb
ret
out
lock
adcl
or
aam
add
ss
pop
clc
adc
clc
and
bound
adc
cmpb
push
sbb
inc
mov
jecxz
in
stos
cmpsl
fisubl
sbb
jne
enter
lock
adc
rcll
call
call
add
jmp
les
jg
popf
inc
cmp
shll
fcom
dec
mov
and
inc
push
sub
adc
or
push
dec
insl
sbb
cmp
push
pushf
icebp
and
or
mov
or
pop
sub
addr16
call
in
jg
cwtl
dec
inc
push
insb
loopne
inc
icebp
mov
push
imul
or
cmp
cmp
mov
inc
sti
cmpb
popa
inc
pop
int
mov
ret
shl
push
imul
adc
jne
add
dec
sub
aaa
clc
and
icebp
sbb
repz
sub
in
push
mov
test
dec
mov
xor
outsl
push
jmp
xchg
out
in
jg
popa
add
xor
int
adc
sbb
inc
cmp
pop
push
lock
sbb
fcmovne
and
push
mov
in
hlt
dec
mov
dec
cmp
push
xchg
push
mov
decl
jg
inc
pop
je
roll
jmp
mov
xchg
out
mov
xchg
push
enter
push
out
repz
jo
vsqrtps
mov
sub
adc
pop
push
bound
dec
xchg
add
jl
les
loope
push
and
popf
into
sbb
pop
cmp
and
movb
pop
sbb
test
inc
add
dec
or
mov
aas
mov
sub
pop
imul
adc
arpl
xchg
or
fwait
scas
loop
icebp
xor
iret
call
mov
sbb
cmp
movl
sbb
out
add
and
arpl
ds
xchg
mov
data16
lds
adc
loopne
mov
test
icebp
push
imul
pusha
mov
jns
xchg
sub
sub
insb
sub
dec
sub
icebp
jns
cltd
popa
ret
icebp
push
or
addr16
mov
sub
xchg
shrl
sub
and
mov
adc
das
fwait
sub
jo
js
jo
out
jge
lock
dec
adc
lods
stos
push
sahf
adc
data16
in
rcl
andl
adc
sbb
icebp
loopne,pt
sti
movsb
pop
mov
into
and
adc
jno
rol
mov
lret
mov
inc
sbb
pop
or
fucomp
call
mov
stc
jmp
sub
mov
cli
rclb
mov
leave
ljmp
ljmp
daa
icebp
out
popa
addb
loope
add
mov
jp
jbe
scas
int
mov
dec
cmc
ret
jl
add
ret
ljmp
push
loope
je
push
lods
ljmp
and
or
push
or
pop
add
push
ja
add
addr16
cmp
call
fildl
lret
cmp
mov
mov
sbb
sbb
cmc
in
jl
push
xchg
out
inc
mov
inc
mov
pop
test
mov
or
dec
call
imul
in
ss
sub
js
stos
mov
sub
and
jae
pop
mov
jno
lret
adc
lcall
mov
je
push
add
gs
push
sbb
shlb
aad
divl
dec
cli
and
insb
loop
adc
out
and
cmp
loopne
fsubl
jp
int3
out
hlt
in
test
cld
and
jne
je
jle
push
leave
aas
adc
mov
sbbb
push
ja
sahf
cmovg
jmp
sbb
jmp
frstor
sbb
adc
movsb
jmp
jmp
push
xchg
outsl
nop
stc
mov
add
addr16
inc
stos
pop
mov
cwtl
aaa
ret
jle
jmp
data16
mov
push
dec
enter
rcr
sub
and
icebp
and
inc
mov
add
andl
and
movsl
mov
add
inc
pusha
out
push
and
cwtl
inc
pop
mov
dec
mov
or
push
lea
icebp
rol
test
fbld
lret
push
dec
bound
mov
shrb
mov
outsl
push
adc
xor
sub
aam
daa
adc
dec
jp
movsb
mov
test
popa
inc
bound
pop
js
sub
addb
jne
jmp
movsl
xor
pop
fistps
cltd
mov
jnp
daa
jge
rolb
pop
fcmovne
nop
aad
sbb
mov
pusha
in
xchg
icebp
enter
pop
mov
push
rorb
lods
pop
mov
sbb
jb
mov
pusha
aas
sub
add
sub
jae
or
rcll
mov
mov
push
jle
cltd
pop
sbb
lret
or
jb
outsb
cltd
jg
or
cmpb
aam
es
clc
test
and
xchg
cmp
sar
ljmp
mov
pop
lret
mov
pusha
push
jmp
and
fwait
movsl
int3
es
lret
push
les
or
or
mov
or
mov
inc
push
or
xor
imul
les
adc
add
test
test
es
loope
popa
or
sub
insl
notl
mov
movsb
jb
aas
dec
inc
mov
pop
loope
sbb
lods
out
and
bound
push
mov
adc
xor
icebp
xchg
cmp
leave
xchg
mov
push
push
add
rorb
adcb
subl
faddp
sub
sbb
and
inc
lea
sub
into
sub
sub
push
adc
push
movd
imul
pop
adc
ret
xorl
sbb
mov
push
sbb
outsl
aad
xlat
xor
stos
add
iret
pop
iret
xchg
movb
add
pop
addr16
roll
push
imull
push
xchg
mov
mov
add
inc
sub
rolb
xchg
lods
adc
loopne
xor
inc
jg
ret
dec
aam
test
rorb
and
push
in
jmp
xchg
stos
mov
test
cmp
mov
cmp
or
mov
push
lods
mov
idiv
push
test
xchg
in
out
cmp
ljmp
mov
xchg
sub
xchg
popa
aad
scas
aad
outsl
int
ja
lret
inc
mov
jno
aaa
xor
mov
or
cmp
add
test
mov
push
lcall
fisubl
and
add
mov
mov
shrl
rorb
ljmp
inc
fidivs
rcl
sbb
jb
sub
enter
xchg
popf
flds
lds
and
dec
or
test
mov
push
and
and
dec
imul
out
xchg
mov
push
and
mov
data16
dec
stc
inc
mov
and
sbb
aaa
pop
pop
or
cmp
fcompl
push
fwait
or
mov
adc
shlb
int
cmp
scas
or
push
add
es
rolb
jp
and
adc
ja
loope
mov
stos
push
and
in
cld
loope
jge
sub
sub
push
pop
pop
pop
pop
pop
xor
and
pop
popa
inc
push
sub
jo
or
mov
mov
ret
mov
insl
adc
ret
xchg
dec
iret
lcall
and
lock
xor
mov
or
jmp
addb
cmpsb
nop
cltd
ret
adc
ficoms
pop
add
cmpsl
fisubl
add
and
jo
insl
jo
inc
adcl
sbb
add
xorb
mov
mov
jae
inc
dec
pop
insl
pop
ss
inc
imul
or
stc
inc
cmp
test
mov
cmp
rcl
and
and
pop
jns
fdivs
es
insb
cmp
or
es
gs
mov
subl
mov
add
cmp
push
sbb
xor
insb
adc
and
push
cmc
pop
push
adc
adc
cmp
xor
lahf
jmp
jne
or
roll
dec
and
inc
imul
sub
sbb
pop
shrl
sbb
dec
aam
fucom
add
pop
in
and
mov
fdiv
test
mov
insb
in
gs
xor
cmp
xlat
sub
das
rclb
dec
stc
xor
and
dec
push
test
mov
push
sub
or
inc
mov
das
es
push
popf
aad
test
pop
fstp
mov
int
push
outsb
insb
add
addr16
add
mov
movsl
lahf
sbb
pop
sbb
xor
mov
cs
jae
das
ss
sbb
int3
ret
sbb
dec
mov
adcl
popa
or
xor
xchg
mov
enter
stc
arpl
lret
jmp
dec
sbb
mov
mov
mov
add
cld
arpl
rol
loope
sbb
pop
lds
pop
mov
insl
add
mov
iret
xor
dec
pop
jnp
adc
mov
shr
jmp
push
nop
push
bound
push
push
dec
push
add
and
pop
mov
insb
push
push
jmp
call
addl
push
xor
mov
sub
add
lds
and
mov
mov
adc
xor
or
outsl
rorl
push
cwtl
inc
push
adc
aad
fsubrs
hlt
or
pop
or
movsb
inc
or
insb
andl
jecxz
cmpsb
lock
aaa
xor
inc
filds
push
lea
xchg
or
sub
test
lock
bound
jmp
lods
mov
sbb
rolb
shll
movsb
dec
jl
inc
add
insl
scas
xchg
imul
scas
sbb
dec
xor
aam
xor
shrb
insb
popa
inc
test
insb
repz
dec
add
xchg
add
hlt
mov
dec
cmpsl
push
ficoml
inc
mov
fs
fnsave
imul
out
lock
inc
mov
add
sub
les
imul
adc
push
jne
pop
mov
mov
pop
pop
orb
pop
pop
sub
inc
mov
or
repnz
ljmp
paddw
mov
adc
sbb
push
pop
adc
inc
sbb
pop
mov
mov
pop
mov
xor
sub
jmp
jmp
jmp
sti
test
stos
and
lret
pop
fisttps
ret
sub
jecxz
or
add
pop
ret
dec
lret
sbb
jae
pop
popf
sub
xlat
test
xor
inc
sub
mov
xlat
js
jge
dec
orb
and
mov
and
aam
inc
inc
test
cmp
xchg
push
dec
rorl
lahf
aas
icebp
add
negb
sti
cmpb
int3
add
cmp
lea
idivl
push
mov
push
add
pop
pop
push
out
shrb
mov
inc
mov
js
push
gs
add
cmpsb
dec
imul
cmc
in
shrl
push
pop
clc
nop
jbe
mov
cmp
dec
add
and
xorl
cmpsb
fidivl
jb
jmp
pop
add
stos
rorb
adc
inc
sbb
rep
add
fwait
lahf
les
sbb
rclw
jmp
movsl
arpl
xchg
inc
aas
xor
xor
adc
call
and
or
jb
adc
lds
fmull
add
jo
add
xchg
daa
lea
xchg
jne
mov
lret
lods
aam
push
ret
out
ja
mov
sbb
push
sbb
cmpsb
shll
nop
sbb
jbe
pop
dec
jnp
shrl
imul
mov
sub
jp
adc
mov
inc
outsl
xchg
lds
fwait
punpcklbw
imul
fnsave
insl
adc
jbe
js
inc
push
orl
and
orl
dec
xchg
mov
add
mov
add
push
in
sub
rorb
and
jmp
push
scas
add
cmp
and
push
mov
lcall
mov
imul
jecxz
add
pop
gs
out
pop
mov
ret
add
or
fwait
mov
lods
shll
inc
inc
cmc
mov
mov
sub
ret
ret
xchg
mov
lods
add
push
ret
jmp
dec
enter
add
imul
js
sti
pop
pop
fidivl
aad
lahf
in
rolb
sbb
xor
pop
inc
movsl
lret
lods
adc
or
add
imul
push
pop
outsl
cs
notb
mov
mov
ss
fcmovnb
and
xchg
add
sub
ljmp
inc
pop
mov
push
scas
push
lock
or
add
cmpsb
mov
mov
movsl
lods
inc
or
push
sbb
andl
iret
outsb
insl
imul
imul
fs
test
fwait
pop
gs
add
js
std
das
add
sub
stos
mov
xchg
rorl
scas
adcl
sbb
js
adc
adc
and
xlat
inc
dec
pop
dec
outsl
pop
xchg
inc
sub
and
jb
loopne
sub
xchg
in
ja
or
jbe
adc
dec
in
ss
fcmovne
insb
xchg
repnz
dec
add
mov
inc
cmp
div
add
fistps
push
popa
xor
push
popa
fwait
xlat
addl
mov
jecxz
pop
shll
inc
or
cmpsb
outsb
daa
pusha
cmc
das
jl
cmp
pop
jne
pop
arpl
or
lock
test
mull
mov
xor
lcall
aam
imul
push
sbb
es
and
scas
xor
adc
push
outsl
sub
add
inc
push
xor
mov
mov
add
adc
sub
mov
loopne
xchg
into
fwait
mov
adc
dec
lods
sbb
das
ds
jl
fwait
and
jge
add
pop
sub
or
es
mov
pop
pop
jne
test
stc
lahf
mov
jb
jb
stos
cmpsb
mov
xchg
sub
leave
cwtl
lcall
shlb
or
aam
arpl
and
imul
aam
insb
adc
roll
push
fwait
lahf
addb
shll
and
mov
mov
push
add
jp
bound
mov
cmp
jne
mov
or
push
adc
add
adc
sbb
adc
mov
add
mov
movsl
xor
sub
inc
sub
or
int
and
into
inc
cmp
cmpsl
aam
aam
xor
movsb
xchg
mov
push
inc
cmp
rcrb
shll
sub
lea
push
outsl
xchg
dec
cmpsb
fsts
dec
sub
mov
xor
movsb
inc
movsl
movsl
xor
adc
fisttpl
jne
call
jae
mov
and
int3
add
dec
jb
test
add
aam
pop
ret
insl
xchg
jl
or
sub
fisubrl
add
adc
fstpt
dec
fcompl
movsl
jo
fwait
std
push
sub
adc
mov
xor
mov
jge
push
aam
es
mov
inc
jle
cmpsb
aad
andb
pop
roll
jg
mov
aad
or
inc
cmc
pop
insl
cmpsl
adc
adc
xor
jne
shll
jae
and
mov
mov
cwtl
hlt
sbb
rcll
push
std
das
cmp
add
add
push
push
sbb
jge,pn
adc
xchg
adc
sbb
xor
pop
add
inc
or
adc
inc
cwtl
add
das
cmp
pop
rol
add
mov
pop
sbb
jno
scas
jno
adc
push
push
mov
lods
fistl
sbb
or
insb
outsb
cmp
or
xchg
enter
jae
adc
inc
push
sub
scas
dec
inc
push
mov
shlb
mov
nop
dec
mov
mov
jae
jnp
jne
mov
aas
out
aad
push
pop
push
lahf
pop
pop
xchg
and
les
cmc
push
push
loop
push
lret
inc
and
jnp
mov
movsb
or
mov
fdivp
xchg
and
mov
pop
xor
insb
mov
pusha
cltd
mov
xchg
inc
jg
xchg
add
shll
ja
and
jne
sbb
insl
xchg
lock
loop
push
lcall
and
andl
mov
xchg
mov
pop
aas
ja
mov
xchg
inc
ljmp
fcmovu
fisttps
and
or
inc
or
and
dec
scas
out
dec
sbb
in
outsb
ja
sbb
push
adc
sub
jl
add
and
inc
add
rorb
sub
iret
out
mov
adc
test
sub
cli
mov
addl
icebp
int3
lods
mov
ds
ss
inc
mov
mov
test
repz
cmp
mov
loopne
ja
cmp
mov
mov
mov
das
mov
or
adc
ret
mov
sbb
jns
jg
or
pop
push
lret
mov
add
test
jne
inc
xor
aam
sub
adcl
xor
ja
es
lahf
xchg
mov
or
jbe
dec
push
push
loopne
jbe
add
add
punpckhwd
mov
test
sub
sbb
sarb
popa
and
cmc
pop
pop
sbb
or
frstor
mov
cmp
mov
inc
lret
and
xchg
cwtl
fldl
mov
scas
cmpsl
mov
cmp
push
fimuls
add
fs
inc
add
cmpl
add
jg
add
push
sbb
push
inc
cmp
stc
dec
sub
sbb
sbb
inc
jbe
cmova
pop
xchg
jo
mov
add
leave
or
cmc
and
push
or
pop
sub
lock
int
outsl
mov
cmp
popa
call
mov
or
cmp
cmp
loope
andb
xchg
call
jo
lahf
mov
jb
mov
sti
mov
add
imul
lret
cmp
pop
mov
pop
push
rcrb
test
or
fstl
xchg
mov
movsb
je
push
pop
inc
pop
pusha
sti
or
inc
add
jne
or
push
stos
xlat
xchg
std
add
lahf
cmpb
or
and
push
or
jp
push
push
inc
sub
or
adc
je
xchg
xchg
gs
decl
mov
mov
lods
or
cmp
rcll
sbb
xor
outsl
es
or
sub
nop
mov
adc
insl
or
push
xchg
dec
mov
daa
and
fistl
add
sub
rol
je
dec
imul
sub
mov
imul
add
ds
inc
pop
ret
rorb
or
lcall
and
jge
test
pop
hlt
pop
inc
inc
enter
jg
jnp
outsb
cmp
in
mov
inc
lock
add
or
jecxz
cmp
inc
cwtl
cs
and
jnp
cmpsb
xchg
or
mov
adc
outsl
vpsubsw
test
sub
outsl
add
xchg
mov
loope
cmp
jo
adc
loop
sub
and
and
mov
imul
push
adc
inc
sub
rcrl
jo
and
mov
lods
xor
jno
push
pop
xlat
pop
fidivrs
movsb
push
xor
sbb
aas
jmp
sub
xchg
push
inc
xlat
es
mov
jle
scas
outsl
inc
jg
cltd
jmp
xchg
pop
xchg
dec
and
add
jge
push
mov
push
sub
and
xchg
inc
or
cld
lods
mov
jo
andl
mov
pop
int3
aas
pop
imul
mov
imul
xchg
inc
outsb
cmp
xchg
dec
xchg
xor
cmp
mov
fistpll
btc
cmp
int3
lods
out
xor
ret
xchg
mov
dec
sbb
sbb
cmp
scas
aaa
lea
add
test
scas
daa
mov
jnp
xchg
sub
sub
lods
adc
fcoml
daa
and
dec
xchg
cmpsb
lahf
lret
mov
jl
add
lahf
add
sbb
outsb
xor
and
pop
adc
rorl
xor
daa
test
add
adc
daa
jbe
sbb
pop
adcb
imul
dec
sub
sti
test
adc
pop
adc
imul
mov
js
sub
out
mov
bound
loope
jge
dec
sub
xor
or
or
push
xor
push
das
or
mov
adc
dec
jecxz
jg
jbe
mov
lea
pop
in
sub
mov
hlt
cmp
fcoms
out
xchg
inc
xchg
xchg
call
xchg
mov
inc
scas
jl
add
jge
cmp
dec
or
sahf
out
data16
test
push
xor
jge
and
pop
cmpsb
jg
ds
jmp
rolb
pop
pusha
push
aam
jmp
shlb
jo
xchg
stc
dec
pop
dec
nop
outsl
pushf
sbb
xchg
sub
cltd
subl
and
mov
add
add
ret
clc
and
sbb
subl
xchg
fiadds
test
ja
mov
add
pop
popf
lods
or
lods
lds
ret
mov
sbb
lock
repnz
add
mov
data16
add
aas
in
out
sub
in
adc
adc
inc
lcall
adc
and
fistpl
test
dec
mov
push
and
imul
cmp
testb
daa
repz
pop
or
add
adc
movsl
movsl
adc
shll
cmc
aad
les
pop
in
pop
addb
loope
mov
dec
and
lds
and
shlb
not
xchg
jno
jno
cmp
insb
sbb
sub
cmp
mov
cmp
push
lret
mov
xchg
inc
loope
push
and
inc
jl
loope
push
scas
cltd
movsb
mov
adc
mov
pop
shrb
adc
mov
sbbl
mov
sbb
or
pusha
sti
push
pusha
insb
ret
pop
popf
scas
mov
stos
jg
jne
pop
dec
fldl
jo
insl
pop
jecxz
sub
mov
rol
mov
mov
ja
dec
pusha
jmp
sahf
je
ficompl
pop
paddsw
scas
or
lock
sub
sbb
aad
and
xlat
pop
daa
cli
fidivrl
add
incb
xor
mov
add
iret
mov
pop
dec
push
xchg
fdivrs
adc
sub
fnstsw
dec
dec
sub
pop
add
outsb
inc
shll
into
and
aaa
in
cwtl
mov
js
pop
test
or
add
data16
jae
outsb
mov
or
xchg
jg
div
and
pushf
inc
ds
mov
lea
loope
mov
mov
das
inc
out
mov
lock
das
adc
xor
pop
cld
mov
mov
inc
jns
out
call
pushf
xor
mov
jge
push
sub
push
jno
lods
mov
adc
cmp
in
adc
mov
push
jo
sub
addl
fsubrs
shrl
cmp
push
sub
xchg
cwtl
dec
xlat
xchg
add
xchg
pop
mov
xchg
add
fwait
stos
lods
inc
aam
cld
icebp
dec
movsb
fimuls
add
pop
jae
push
inc
mov
or
daa
inc
mull
jp
and
pop
mov
shrb
mov
ss
fwait
xchg
mov
sarb
popa
das
test
ret
test
ss
jmp
mov
pop
movsb
ficompl
pop
fisttpll
and
insl
mov
gs
js
popa
push
add
lock
xchg
xor
iret
fs
xchg
out
movsl
cmc
push
mov
rcr
insb
sbb
fisubrs
nop
inc
daa
and
dec
add
mov
fildl
out
in
mov
frstor
dec
icebp
jo
mov
jnp
ja
or
lahf
mov
shr
xchg
popa
pop
repz
mov
mov
inc
pop
mov
inc
icebp
push
pop
dec
mov
or
sti
nop
or
mov
hlt
nop
imul
pop
ljmp
nop
cmp
popa
bound
xor
mov
adc
jnp
js
push
dec
rorb
sbb
loopne
sbb
jns
push
mov
or
xchg
add
sti
movsl
int3
imul
adc
lret
in
fimuls
aam
jle
xlat
in
mov
mov
mull
lcall
mov
ss
out
add
jnp
pop
jno
ds
shr
cmc
ret
dec
push
in
mov
fstp
push
cmp
dec
shrl
push
push
jns
movsb
cmpl
dec
or
jmp
cmp
aam
or
mov
mov
daa
mov
or
add
stos
dec
xor
movsl
icebp
xchg
mov
dec
jnp
aaa
push
mov
jne
test
popa
sbb
push
pop
ret
loop
andl
ret
xor
mov
pop
shrl
mov
fildl
mov
rorl
jp
push
adc
xlat
inc
das
jae
xlat
push
xchg
imul
mov
fwait
test
xchg
adc
mov
cmpsl
imul
rcrl
dec
cmp
jg
push
jp
pop
pop
pop
xlat
std
sti
mov
in
mov
fldt
or
dec
cmp
test
rorb
loop
and
mov
in
test
xchg
mov
shlb
insl
mov
gs
ds
sti
repz
testl
adc
push
leave
push
daa
push
jge
popa
shrl
push
lods
dec
jne
call
out
cmp
addr16
gs
lods
js
dec
mov
in
add
jg
pop
test
test
mov
adcb
outsb
sbb
testl
and
xchg
icebp
test
mov
xchg
shr
pushf
sbb
cmp
cmp
xchg
sbb
inc
mov
rclb
mov
inc
js
pop
shrl
out
fidivs
fsubs
sub
lret
add
dec
pusha
and
dec
inc
repnz
sub
adc
push
cmp
push
jg
jnp
sbb
add
xlat
adc
adc
loop
jp
sub
mov
mov
ljmp
sub
aam
fsubl
idivl
sub
and
sub
or
fstp
mov
pop
mov
mov
negl
xchg
rorb
iret
int
sub
insl
ret
fwait
xchg
sbb
bound
ret
xchg
dec
sbb
mov
mov
and
test
inc
out
aad
sub
sbb
xor
inc
pop
jl
daa
test
xchg
fcoms
xlat
add
fdivl
lcall
rcrb
fldenv
lods
push
dec
mov
pop
pushl
jnp
fdivrl
aam
inc
and
adc
cli
sbbl
xor
jno
push
jne
movsl
xorl
scas
dec
ljmp
fistl
out
push
adc
inc
loopne
and
add
inc
aam
push
or
dec
push
pop
or
inc
mov
mov
cmp
mov
int
push
xchg
imul
aad
mov
xor
jp
sub
add
xchg
popa
out
stos
push
aaa
lods
pop
rcl
add
cmpl
dec
jb
mov
xor
in
pop
mov
jns
lcall
es
rclb
iret
iret
fmuls
movsb
je
sub
test
add
rcr
jo
or
xor
cwtl
jg
xor
jecxz
jmp
xchg
mov
aas
and
lahf
mov
aaa
add
pop
sbb
add
insb
add
loopne
lcallw
outsb
cmp
mov
adc
and
in
ja
sti
fsubr
adc
loope
and
ljmp
dec
mov
das
sbb
xor
mov
pop
sbb
rcrl
mov
mov
xchg
adc
ss
push
dec
push
arpl
bound
mov
push
pop
aam
decl
inc
mov
add
xchg
pop
aas
out
jg
sub
ret
cwtl
push
in
cmc
add
out
pop
dec
xor
movntq
out
mov
rorb
mov
push
pop
fists
mov
or
inc
les
xor
dec
mov
xor
out
cmp
xor
push
jo
push
pop
sub
adc
inc
or
insb
aas
loope
mov
sar
push
jns
mov
jge
jnp
js
sub
dec
push
push
fcmovbe
leave
cli
and
jmp
push
enter
pop
aad
out
cmpsl
mov
test
pop
pop
pop
and
in
push
sbb
adc
mov
les
das
lods
mov
jg
add
popl
gs
fwait
lods
dec
xorb
jmp
jecxz
fistpl
pusha
sub
sarb
movsb
or
lahf
loope
addl
xor
jg
daa
es
lcall
aad
mov
cmp
sbb
lock
popf
call
test
scas
push
adc
bound
adc
imul
cmp
insl
cmp
push
out
xchg
dec
mov
jl
xlat
dec
in
pop
addr16
push
and
loope
adc
sbb
sbb
lods
mov
xchg
push
xlat
pop
xor
das
and
push
shr
push
mov
or
imul
insl
in
dec
rcrb
mov
inc
mov
dec
xchg
inc
popa
push
sbb
arpl
sbb
jle
jl
rclb
je
pusha
call
sbb
jns
push
push
push
lods
mov
pusha
mov
xor
sbb
test
cmp
je
sbb
nop
and
mov
or
mov
mov
or
lods
cmp
in
xor
xchg
and
and
add
ja
and
xlat
dec
fs
cmpl
in
jg
inc
fsts
loop
pop
fnstsw
test
jl
test
jo
mov
push
pop
mov
test
add
mov
xchg
jnp
test
roll
ret
fwait
dec
inc
xchg
jne
lods
imul
mov
ret
dec
and
popa
mov
and
ficoms
mov
mov
cmp
dec
jbe
paddsw
mov
or
ret
pop
or
add
push
jmp
cltd
scas
push
lret
add
aad
mulb
sbb
jle
aam
jb
movsl
jecxz
shl
ret
frstor
gs
xchg
pop
push
sub
dec
xorb
loope
xchg
mov
mov
cmp
jnp
push
pop
sub
aas
add
mov
and
mov
mov
add
sbb
scas
je
cmp
push
dec
fsts
pop
cmp
add
dec
push
dec
mov
shlb
hlt
push
xor
ret
dec
imul
jnp
cmp
rcrb
inc
add
icebp
mov
icebp
imul
gs
es
popa
pop
notl
add
jl
jl
or
nop
mov
sbb
adc
push
xchg
mov
or
dec
jecxz
adc
pop
xor
or
mov
jo
inc
fnsave
mov
fcmovnb
js
xchg
pop
imul
inc
and
jge
adcb
mov
inc
inc
cmp
insl
cmp
enter
addl
pusha
and
dec
stos
in
rcrb
mov
fiadds
xor
xchg
mov
aam
or
mov
dec
cmp
sbb
mov
push
bts
stos
adc
mov
cmpsb
xor
jne
ror
adc
and
cmp
or
jae
das
test
jmp
in
ss
insb
loope
cmp
out
arpl
xchg
ss
push
cmp
shlb
and
mov
rcrb
xorb
or
or
dec
mov
dec
scas
xorl
cwtl
sbb
mov
sub
cmpsl
xchg
inc
test
add
testb
stos
or
or
out
mov
cmp
cltd
xchg
iret
mov
or
pop
insb
rcrb
and
adc
adc
cmp
les
pusha
daa
sbb
add
insb
mov
arpl
dec
loopne
sub
cmp
add
outsb
lock
dec
mov
fdivrs
mov
imul
or
or
pop
inc
or
inc
mov
add
jmp
clc
cmpsb
pop
cmpsl
ret
sub
xorb
dec
add
mov
and
dec
add
cmp
pop
mov
push
mov
cmpsl
jbe
add
nop
xor
nop
insb
subl
dec
insl
movsb
mov
push
inc
sbb
lret
pop
pop
cwtl
mov
or
jno
arpl
sub
cmpsb
inc
or
push
mov
pusha
add
outsb
insb
push
rolb
and
cmpsb
popf
xchg
mov
les
cmpsl
inc
mov
rcrb
out
and
pop
shl
push
add
addr16
pop
cmpsl
movsb
popf
les
push
jmp
fcoml
popa
fmull
xchg
inc
mov
pop
and
adc
xchg
hlt
push
shl
mov
xchg
loop
push
xchg
jg
dec
cmp
es
ret
mov
xor
cmpsb
mov
out
xchg
inc
mov
adc
jp
insl
xchg
jbe
adc
adc
xlat
jg
es
stos
sub
or
or
jns
sub
xchg
sub
pop
add
fldenv
mov
add
sbb
cmp
sarl
inc
fsubl
jg
lahf
adc
or
aam
stos
push
xor
nop
pop
popa
sub
outsl
xchg
adc
invlpg
stc
jno
xchg
in
sbb
push
push
out
je
ffree
ret
push
push
sub
xchg
push
dec
dec
mov
push
pop
insb
xchg
sub
mov
or
dec
aad
jmp
adc
inc
and
movsb
fimull
shlb
inc
pop
mov
inc
stos
fldl
sub
mov
mov
cmp
and
and
push
shll
scas
or
xor
pop
inc
push
movaps
fisttpl
movsb
pop
pop
pusha
push
sbb
out
les
sub
pop
imul
insl
inc
fcomps
xchg
mov
or
mov
mov
imul
aad
scas
movsb
and
cmpb
add
les
int3
mov
popa
xlat
mov
sbb
xchg
xor
adc
cmp
iret
push
and
push
push
outsb
popf
adcl
sub
insb
inc
ss
cmp
add
rcrl
mov
and
jecxz
or
add
jge
movb
fstpl
inc
add
add
subb
sub
outsb
lds
push
out
sub
dec
pop
insb
inc
pop
add
push
xchg
or
flds
sub
outsb
aas
inc
sub
clc
and
ljmp
hlt
jecxz
movsb
or
mov
insl
nop
ja
lods
add
dec
mov
sbb
loop
inc
arpl
sbb
or
movsl
mov
adc
cmp
push
jl
jp
sub
scas
icebp
inc
xchg
movsl
sbb
enter
outsb
pop
xchg
fcoml
mov
mov
add
adc
sub
mov
xchg
push
adc
out
jae
rorb
popa
or
int
xchg
fs
adc
pusha
pop
add
cmp
sbb
scas
mov
xchg
lret
stos
and
test
inc
and
ret
lcall
sbb
xchg
xchg
mov
lods
xchg
loope
sub
or
sub
mov
xor
pop
lret
inc
movsl
faddp
push
and
jecxz
sarb
shll
outsl
push
fisttpll
and
push
rcrl
mov
rcrb
data16
negl
cltd
and
mov
inc
xchg
stc
shrb
data16
out
mov
mov
and
lods
fildl
mov
testb
pop
not
xchg
mov
nop
test
add
leave
daa
lahf
loope
pop
and
fucomip
cltd
and
mov
ja
cmp
add
sbb
mov
xlat
inc
clc
adc
roll
cmp
pop
xchg
pop
daa
fmuls
iret
sub
rol
push
cltd
outsb
aam
adcb
cmp
fstpt
jmp
idiv
sbb
cld
add
jmp
push
arpl
addr16
cmp
xchg
mov
mov
add
or
and
insl
leave
pop
jge
jp
push
int3
pop
leave
lahf
int
fimull
mov
popf
mov
mov
ja
push
jns
sbb
mov
jb
cmpb
adc
dec
ss
movsl
lcall
je
test
inc
andl
sbb
hlt
mov
ja
outsl
rclb
ss
mov
push
sbbb
jecxz
out
cmp
dec
ffreep
lods
rclb
adc
imul
pop
fnstsw
mov
das
sbb
lahf
ss
aad
sub
jg
sub
cmp
scas
sahf
fstpl
jge
ss
inc
lea
roll
or
scas
adc
push
mov
mov
push
mov
inc
cmp
dec
pop
fisttpl
sbb
addl
test
add
push
aad
pop
or
shrl
push
mov
movntq
out
or
mov
and
pop
add
xor
stc
push
cmp
sti
xor
mov
sbb
repz
cmp
lds
jnp
jo
cli
notb
movsl
add
pop
push
dec
cmp
sbbl
or
fwait
stos
and
lds
mov
add
mov
mov
and
filds
ljmp
push
insb
repnz
clc
adc
or
mov
add
mov
pop
int
mov
fs
dec
jg
enter
adc
pop
add
imul
mov
fmuls
stos
ficoms
fisubl
lods
sahf
or
int
mov
lds
mov
jmp
ret
jp
mov
daa
pushf
mov
mov
lea
movsl
hlt
push
das
in
sub
pop
mov
dec
jecxz
xlat
cmp
aam
dec
add
rep
sbb
pop
mov
fstpt
cli
mov
mov
push
mov
jmp
shl
xchg
cmp
rolb
xchg
jae
fcoml
mov
mov
imul
sub
add
adc
mov
addr16
js
adc
mov
xchg
pop
adc
cwtl
dec
and
daa
xorl
dec
icebp
pop
cwtl
dec
xchg
pop
lds
leave
mov
push
mulb
add
and
pop
ret
sahf
test
lea
xchg
xor
loopne
or
and
adc
jo
mov
ret
movsl
jmp
mov
sbb
je
cs
push
mov
sbb
imul
jp
lahf
cld
push
testl
imul
mov
ret
mov
es
ret
jno
movsb
arpl
jns
cmp
add
ret
pop
push
scas
sbb
out
in
das
mov
imul
jo
add
shlb
pop
sub
add
adc
test
add
and
leave
or
imul
or
inc
sub
sbb
add
xor
jmp
lret
rcrl
aas
shll
andb
lcall
jo
mov
adc
popf
add
daa
adc
push
lret
dec
popa
outsb
in
xchg
or
cmpsl
sub
mov
push
mov
mov
out
mov
jg
cmp
aaa
fisttpl
mov
sbb
jmp
mov
dec
stc
inc
push
xor
jge
mov
iret
in
add
fs
enter
xlat
inc
ljmp
lea
xor
add
xor
sahf
shrb
subb
stos
aaa
popf
mov
mov
cmp
pop
sub
xor
aam
cmp
sbb
jge
inc
or
xchg
xorb
xchg
push
repz
rcll
inc
js
dec
dec
cmp
sub
cmp
test
add
cmpsl
in
xor
daa
ror
shlb
movsl
jbe
jno
mov
sub
test
jl
mov
movsl
lods
or
pop
test
loope
sub
into
sbb
fsubp
jno
cmc
inc
cwtl
cmp
in
add
je
add
sub
das
or
adc
loopne
clc
or
in
sub
dec
outsb
stc
jp
adc
test
mov
pop
in
mov
rcl
push
mov
scas
mov
sbb
out
dec
add
cli
dec
cmc
adc
xor
fwait
adc
sub
lret
sub
lahf
clc
sbb
and
sti
lods
mov
mov
cwtl
mov
push
or
inc
sub
sti
add
xlat
pop
inc
adc
inc
das
rcrl
fcoms
js
or
inc
aad
and
pop
push
pop
jne
dec
rclb
popa
sub
mov
pop
mov
inc
testl
and
pop
and
xchg
adc
push
mov
mov
push
daa
dec
fldcw
mov
mov
jp
mov
and
test
mov
adc
push
sbb
xor
mov
pop
push
inc
outsl
and
sub
xchg
sub
movsl
cwtl
sub
sub
dec
call
les
and
outsl
mov
call
sbb
decl
mov
scas
add
orl
mov
sbb
stos
jnp
les
sbb
jo
pop
scas
loop
sub
xlat
test
jmp
movsb
or
sub
push
adc
mov
cwtl
adc
inc
or
in
pop
pop
pop
inc
add
das
imul
push
mov
push
pop
sbb
sub
push
xchg
jnp
les
data16
addr16
push
push
sub
loope
adc
jno
test
adc
push
rcrb
sbb
xor
leave
and
lret
adc
inc
testl
inc
inc
inc
sub
mov
icebp
inc
mov
or
movsb
push
pop
mov
pusha
dec
rolb
xchg
or
dec
add
push
xchg
inc
bound
push
inc
mov
sub
push
jnp
cltd
jb
cmpsl
xor
inc
sub
sbb
mov
mov
ret
jb
movsb
sbb
sbb
cltd
lds
cli
or
fildl
and
cmpsl
xor
aam
scas
ret
add
mov
lahf
ret
cmp
test
pop
neg
inc
sbb
add
push
arpl
imul
cltd
push
inc
adc
loop
or
pusha
shll
lahf
pop
pop
popa
loopne
xchg
pop
sub
pop
or
test
aaa
dec
test
dec
pop
lret
repnz
and
add
mov
push
xor
mov
add
mov
stc
daa
fsubrl
inc
jg
lret
add
add
clc
add
hlt
mov
imul
stc
sub
sbb
nop
aam
push
jne
dec
mov
pop
or
ljmp
outsb
add
push
orps
xchg
cmc
sbb
xchg
mov
mov
mov
das
scas
jmp
sub
ret
in
xchg
jp
dec
aas
add
push
fcomps
js
jne
ret
fnsave
fmuls
aad
mov
shlb
push
ror
loope
addr16
push
dec
mov
inc
inc
iret
jmp
and
inc
mov
inc
cld
push
push
lds
dec
and
pop
lock
rorl
dec
jo
or
ss
imul
push
iret
push
adc
and
mov
sbb
sub
sti
lock
xor
loope
xchg
or
add
idivb
mov
and
xor
imul
push
adc
pop
sbb
mov
add
sbb
imul
dec
shl
inc
inc
and
mov
sti
xor
or
cmp
clc
test
jle
addr16
icebp
or
call
mov
push
fldcw
and
sub
lcall
adc
repz
jmp
shlb
push
fst
cmp
sbb
insl
or
pop
arpl
mov
mov
movsb
icebp
ds
xlat
je
push
into
movsl
addl
add
xor
repz
test
xor
push
aam
sub
stos
pop
and
in
pop
in
push
pop
int
mov
pop
mov
inc
fsubr
leave
push
sub
or
jns
cmpb
cmp
call
pop
xchg
fldl
sti
sub
mov
push
add
fstl
icebp
loope
testl
inc
xchg
jg
bound
imul
cmpsl
xchg
in
sbb
jge
test
ret
jnp
adc
das
cmp
je
out
insl
pop
aam
arpl
leave
es
sbb
jge
iret
jl
push
arpl
hlt
dec
inc
mov
das
jl
push
mov
sbb
cmp
dec
lea
loop
adc
and
hlt
mov
cmpsl
and
mov
iret
sarl
fs
add
push
lock
inc
sub
mov
add
movsl
push
mov
xor
cltd
xchg
aas
or
xor
add
sbb
jnp
adc
dec
popf
lahf
sbb
mov
imul
rolb
cltd
ja
rorl
xchg
push
gs
xchg
inc
pop
or
loope
stc
sbb
sub
fistpl
loopne
push
inc
ss
xchg
pop
lahf
cs
adc
add
testb
cmc
pop
xor
pop
shlb
cltd
mov
loopne
sub
inc
cmp
push
mov
sub
cwtl
rclb
js
orb
das
cmp
cli
aam
aad
mov
lret
sub
cmp
scas
mov
mov
js
lods
pop
bound
movb
mov
sub
out
loopne
hlt
xchg
sti
mov
hlt
fdivr
arpl
cmp
xlat
lods
inc
aad
cltd
push
dec
fmuls
movsb
lea
push
repz
inc
ljmp
push
sbb
mov
push
xchg
xchg
adc
mov
mov
dec
mov
and
push
add
mov
dec
adc
insl
ret
pop
pop
sbb
mov
frstor
scas
sub
add
lahf
pop
add
and
lods
mov
push
movsl
addr16
push
pop
mov
lods
iret
shll
push
mov
and
fmul
ret
rcl
setne
inc
lods
sahf
push
adc
loope
push
adc
loopne
lods
inc
insb
pop
inc
insl
arpl
push
mov
xchg
or
inc
nop
lds
jb
ficompl
lods
pop
mov
aaa
cmp
push
arpl
add
popf
adc
jge
push
lret
mov
scas
inc
xor
in
ror
pop
sbb
test
adc
cmp
xchg
pop
push
pop
int3
ret
mov
dec
aad
pusha
test
stos
arpl
mov
inc
jmp
pop
cld
pop
dec
imul
dec
inc
cmovp
lea
cwtl
sub
adc
aad
mov
push
sti
frstor
and
insl
fs
push
mov
scas
pop
pop
mov
ss
sub
jmp
or
ljmp
adc
inc
adc
push
jmp
stos
pop
fbstp
adc
pop
sub
add
movsl
imul
sbb
mov
and
sub
mov
int3
pop
ja
aas
inc
add
mov
add
addr16
icebp
out
xor
push
adc
inc
int
mov
loope
push
xchg
push
mov
sbb
loope
xlat
adc
xlat
popa
mov
mov
scas
mov
clc
mov
dec
repnz
fsubrs
push
lods
inc
in
push
push
pop
dec
cmp
mov
jecxz
cmpsl
push
push
lahf
mov
cmp
sbbl
ret
xor
andb
xchg
cmc
mov
shll
mov
pop
or
out
fwait
inc
ss
sub
jl
or
fwait
adc
pop
imulb
push
cmp
jmp
call
jle
inc
mov
mov
jo
lods
jl
cmpsb
aam
dec
pop
inc
mov
jp
imul
xchg
xchg
sbb
add
inc
lods
test
aam
xchg
dec
add
add
inc
out
sbb
shrb
mov
mov
pop
insl
stos
add
pop
add
xor
insl
push
movsb
sbb
inc
xchg
dec
dec
dec
xor
xor
cmp
in
xor
and
adc
mov
ret
lahf
push
xchg
movsb
ret
arpl
leave
mov
add
adc
inc
or
inc
adc
pop
add
psubd
xor
push
fisttpl
push
fs
lret
add
or
dec
push
test
popa
xor
jg
fstl
out
xlat
fcoms
cmp
inc
pop
push
mov
dec
insb
mov
roll
push
push
mov
adc
mov
pop
or
mov
pop
or
xchg
imul
adcb
shll
inc
jp
add
pop
sub
cmp
sti
inc
inc
insl
mov
sbb
or
xchg
icebp
es
push
in
sub
dec
jmp
lods
sbb
add
and
jo
inc
sbb
mov
orb
fwait
xor
enter
mov
ds
dec
les
add
jp
imul
mov
in
insl
int
xor
dec
outsb
cld
rorl
jo
dec
lods
lret
ret
nop
and
sbb
outsl
aaa
jg
add
loope
pushf
dec
pop
sbb
ljmp
push
mov
push
cmp
or
sbb
push
inc
or
mov
xor
sub
jbe
push
jne
or
dec
lea
xor
xor
lods
or
mov
js
shrl
jns,pn
cmpsb
sub
adc
inc
and
and
fmull
sub
movsb
adc
in
inc
jecxz
cmpsb
inc
sbb
add
fisttpl
scas
xor
sbb
mov
inc
incl
cwtl
or
aad
loop
sbb
sub
out
and
mov
addl
lds
or
inc
addr16
dec
int3
sub
push
cmp
repnz
daa
xchg
mov
or
pop
xor
lods
or
inc
sbb
rorb
lock
in
xlat
imul
popf
cmpsl
dec
call
into
jmp
mov
loop
cmpsl
xchg
mov
inc
stos
dec
mov
and
iret
jb
adc
lret
shrb
lds
inc
cmp
rolb
push
imul
mov
sbb
ret
aam
insb
mov
roll
ret
xchg
fsubrl
mov
aam
push
test
cmpsb
scas
pop
stos
sti
stc
movl
inc
xchg
or
jmp
and
stos
cltd
lcall
sub
jecxz
popf
push
jge
xor
lcall
xor
xor
push
xchg
dec
push
rcrb
and
es
mov
push
imul
adc
or
inc
push
jo
add
mov
cmp
inc
add
dec
jecxz
gs
or
and
jg
daa
dec
cli
add
cmp
arpl
mov
and
dec
cmp
add
jbe
jno
mov
seto
mov
imul
and
int
es
inc
arpl
and
fcoml
sbb
inc
cmp
push
imul
mov
in
pop
daa
and
add
or
rolb
adc
mov
cmpsb
mov
xchg
xor
pusha
add
xorb
movsl
mov
xchg
hlt
lods
outsl
gs
aam
sbb
or
icebp
push
mov
cmp
cmp
sbbl
or
daa
aaa
inc
jmp
push
push
mov
pop
and
add
sub
in
or
rorb
pop
push
push
insb
xchg
mov
ret
add
adc
dec
push
ss
popa
out
rolb
xchg
xor
mov
lahf
xor
cmpsl
and
sbb
or
sti
sbb
jge
popa
and
inc
dec
bound
push
inc
or
cs
sbb
xchg
movb
pop
jl
imul
mov
push
iret
jp
xor
insb
and
rclb
sub
sbb
and
subl
add
das
stos
xchg
add
push
mov
lock
dec
xchg
inc
sub
loope
mov
sbb
add
and
xchg
push
inc
jo
or
ss
ret
insl
sub
call
adc
inc
test
add
daa
and
add
lea
ret
lods
shlb
cmpb
xchg
adcb
push
jne
iret
push
outsb
sbb
aaa
rolb
ret
adc
fwait
push
mov
pop
jae
pop
dec
and
mov
dec
and
ja
or
xchg
test
or
or
fildl
and
adc
inc
dec
mov
nop
adcb
mov
jecxz
and
pop
inc
out
xchg
cwtl
scas
push
xor
lods
and
arpl
mov
adc
fsubl
daa
sub
fcmovnbe
mov
push
movdqu
add
sub
jo
jge
xchg
inc
push
or
movb
loop
cmp
adc
and
adc
push
adcb
stos
cmpsb
leave
les
push
push
mov
fsubrs
xchg
inc
mov
push
adc
insl
mov
fadd
xchg
pusha
daa
mov
jnp
and
mov
sbb
push
fisubrl
jg
mov
rclb
lea
cmp
fnstsw
jg
sbb
sbb
inc
push
mov
out
pushf
push
sbb
cmp
push
sub
xor
and
sbb
inc
adcb
in
stos
sbb
loopne
leave
pop
sahf
mov
mov
inc
sahf
xchg
mov
or
aas
ret
iret
lcall
dec
dec
js
aam
mov
sbb
and
cmp
imul
dec
cmc
subb
sub
cmpsl
test
dec
std
out
pop
pop
add
pop
out
jo
mov
loope
mov
test
ss
cmp
cltd
lea
adc
unpckhps
pop
inc
int
sub
outsb
sbb
sbbl
ret
aaa
lods
mov
add
xchg
jo
xor
mov
lods
xchg
hlt
jo
sub
loope
jb
aam
lea
mov
push
ds
mov
adc
cmp
add
aam
andl
aaa
jl
mov
mov
sub
and
adc
mov
fs
fadds
test
out
fld
enter
pushf
and
and
mov
xchg
cs
xchg
xor
or
jbe
sub
jae
xor
mov
xor
jno
and
cmp
sbb
pop
or
dec
ja
sub
ret
xchg
dec
loope
movsl
and
loopne
jbe
or
or
sbb
aad
inc
insl
loope
jp
push
out
mov
xor
imul
pop
jmp
xlat
push
pop
mov
nop
mov
lods
push
nop
or
xor
mov
mov
mov
fwait
jno
lahf
push
es
adc
dec
arpl
push
xor
push
roll
int
xor
xchg
mov
rorb
push
test
mov
iret
ja
jmp
movsl
dec
mov
daa
sarb
or
in
jnp
sub
test
sub
mov
orb
movntps
mov
sub
add
xchg
jno
and
sar
mov
mov
add
mov
xor
fildll
pop
adc
pop
xor
push
sarb
push
mov
add
enter
test
leave
loope
ror
add
or
js
lock
adc
push
scas
cmp
push
icebp
sub
jb
jmp
mov
push
xor
ret
push
cmc
push
rolb
stos
and
add
or
xchg
push
push
dec
push
inc
mov
rcrb
andb
cltd
xor
xchg
dec
add
xchg
imul
adc
fcompl
mov
lock
out
lea
aad
jp
jg
in
and
stc
cmp
loope
shl
xor
jb
sub
or
and
and
lock
pusha
pop
popf
mov
mov
dec
lods
popl
fildl
mov
lcall
jmp
dec
and
adc
mov
aam
mov
addl
add
and
imul
and
outsl
pop
or
ret
push
xor
pop
clc
or
rcrb
les
out
fcoml
and
sub
jnp
roll
push
mov
cli
loope
push
adc
fildl
xchg
les
sub
xchg
or
pop
and
mov
dec
stc
ret
test
fdivl
mov
dec
cltd
sub
adcb
arpl
sub
mov
aaa
ret
add
sbb
jo
cmp
adc
cmc
ret
popa
mov
out
sbb
sub
adc
sbb
rorb
cmpsl
sub
or
test
mov
mov
rorb
push
or
xchg
push
mov
cmpsb
cmp
pop
je
and
dec
int3
test
push
xchg
ds
jg
stos
adc
xchg
sahf
in
clc
fisubs
stos
cmpsl
add
outsl
sti
call
int3
push
and
popa
cmpsb
shl
sarl
mull
test
push
inc
mov
mov
cmpsl
dec
cltd
ja
movb
pop
sub
and
mov
scas
aad
gs
aam
xor
aad
pop
rolb
inc
add
icebp
stc
sbb
lahf
aad
mov
in
fwait
cs
loope
mov
stos
hlt
add
hlt
mov
adc
test
rcr
loop
mov
jne
xor
mov
jmp
and
lds
addb
push
lea
subl
adc
sub
pop
rclb
xchg
jge
xlat
and
data16
aas
xchg
lock
sub
bound
fsubrp
ds
jp
cs
jmp
das
cmp
push
sar
xor
fwait
outsl
jo
cmpsb
xchg
lock
sbb
clc
dec
jecxz
mov
mov
dec
xor
mov
test
or
xlat
in
mov
sub
mov
loopne
push
mov
fildll
xor
mov
mov
and
lock
adc
jp
test
or
cmp
stos
push
js
dec
pop
and
jne
fisubs
pusha
pop
ret
fwait
addl
cltd
popa
sub
cmp
jp
mov
mov
gs
sub
mull
push
lea
and
pop
shrb
cmp
sahf
stc
insb
imul
push
ss
ret
sbb
lea
mov
dec
or
inc
xor
inc
dec
dec
cltd
adc
subb
cmp
icebp
push
cmp
orl
inc
sti
push
sub
or
mov
lds
imul
pop
shlb
sbb
jne
xor
adcl
push
out
movsl
push
in
das
add
and
push
orb
xor
and
jecxz
mov
pop
mov
xchg
xor
xchg
dec
inc
adc
inc
test
xor
xchg
add
cmp
je
xchg
loope
fcmovb
retw
test
pop
imul
rclb
inc
stos
lret
dec
aaa
sbb
ljmp
imul
mov
test
add
sub
sbb
jns
dec
and
pop
pop
add
add
mov
lods
andl
sub
sbb
push
lea
nop
push
fsubs
add
mov
xchg
add
in
dec
fwait
mov
cmp
mov
xor
cmc
mov
popa
sub
je
bound
aam
test
imul
ret
cmp
out
mov
je
in
cmpsb
ret
dec
mov
enter
mov
shrb
out
rep
or
mov
inc
sub
call
es
insl
insl
pop
inc
imul
js
cli
mov
pop
lcall
and
mov
lods
rcr
mov
xchg
add
outsl
cmp
ja
ret
jp
and
pop
cld
cmp
push
leave
adc
xor
js
sbb
ficomps
pop
adc
sbb
mov
lock
outsb
arpl
push
dec
int
inc
leave
push
pusha
andl
pop
push
cmp
pop
pop
maskmovq
mull
dec
xor
sbb
push
dec
or
fcoms
cmp
je
stc
jnp
fldl
pop
jge
fmull
push
insl
pop
push
mov
and
adc
jl
pop
les
or
popl
fmull
mov
add
das
cmp
sbb
popa
addl
mov
leave
lods
mov
sbb
or
sub
lahf
fmuls
mov
mov
not
and
inc
sbb
imul
iret
loope
adc
push
sbb
inc
clc
aam
ds
pop
adc
and
add
inc
xor
push
daa
add
fs
mov
inc
xor
mov
js
adc
es
and
and
ljmp
lock
inc
adc
cmp
fwait
mov
or
ds
mov
xchg
and
enter
sbb
or
xchg
pop
leave
je
xchg
xchg
ret
mov
add
insb
xor
repnz
push
sub
lods
loopne
inc
adc
xor
lock
loope
cmp
aam
rorb
jne
bound
fidivrl
pop
and
stos
push
push
rolb
imul
and
cmpsb
cs
daa
cmpsl
mov
fidivl
xorb
add
subl
pop
sarl
lds
cmp
jb
mov
add
clc
xor
dec
inc
ret
inc
inc
jnp
popf
xor
jns
adc
popa
pop
pusha
or
das
adc
lods
add
push
call
sub
wbinvd
push
test
pop
mov
jge
add
add
fildl
xor
das
sbb
popa
inc
test
jecxz
mov
xor
mov
xor
addb
ss
xor
mov
jno
pop
sarb
dec
out
push
lock
pop
add
aas
sbb
mov
cli
or
add
fcmovne
push
sbb
jmp
push
xor
adc
leave
mov
mov
jne
push
or
push
std
sub
push
jns
xchg
and
mov
dec
dec
aaa
movsl
and
add
add
xchg
add
loop
test
dec
mov
adc
mov
mov
cmc
movsb
sahf
jbe
std
ret
lods
test
shlb
nop
mov
pop
orb
jge
mov
jbe
or
test
or
dec
pop
or
or
xchg
xor
cmp
inc
adc
adc
movsb
dec
fwait
xchg
loope
leave
stos
cmp
fisubs
fnstcw
rcrb
and
cmp
xorl
sub
movntps
sub
data16
movsb
jno
aas
cmp
cltd
add
mov
lret
pop
lods
add
fisubs
mov
sarl
test
and
dec
pop
and
pusha
loopne
jno
push
rclb
lret
fsubp
inc
and
xchg
dec
xchg
push
adc
add
inc
adc
jl
and
inc
add
test
inc
popf
pop
push
mov
push
out
popf
popa
jecxz
les
push
mov
test
outsb
inc
xchg
inc
adc
push
mov
xchg
mov
dec
sbb
push
inc
jmp
insb
mov
test
fmul
mov
insl
ret
rcll
insb
mov
subb
xor
aad
or
xorl
ja
pop
ds
and
sub
jo
inc
sbb
in
pop
int
or
mov
cmc
and
ljmp
and
hlt
out
jecxz
cld
pop
gs
and
adc
cmpsb
xor
cwtl
iret
mov
pop
push
sbb
jns
mov
test
stos
or
or
inc
sub
int
inc
and
or
dec
jl
sbb
cmp
mov
add
mov
lods
inc
xor
mov
jno
and
sbb
xor
xor
hlt
push
fld1
inc
aam
je
pop
adc
cmpsb
push
push
jo
inc
lods
inc
jno
or
push
dec
jo
push
xor
xor
sub
push
push
cmpsb
icebp
inc
jae
pop
cmp
xor
adc
xor
cwtl
inc
xchg
andl
or
test
imul
mov
add
mov
test
add
or
mov
xchg
inc
push
dec
lock
inc
pushf
shlb
popa
jecxz
cmp
sbbl
xchg
mov
sahf
push
dec
mov
roll
popa
in
lock
lahf
jbe
dec
sub
pop
rolb
cmp
mov
sub
ds
lods
je
dec
fcompl
or
pop
push
mov
frstor
mov
pushf
adc
psraw
push
mov
sti
cmp
xor
sub
popa
cltd
pop
lret
pop
notb
testb
nop
push
mov
sbb
test
xchg
movb
inc
gs
mov
scas
jmp
xor
and
jp
shlb
pop
inc
and
and
rcl
sbb
shr
mov
roll
sub
pop
jo
dec
es
mov
sbb
sahf
mov
aam
and
lock
andl
rol
imul
scas
adc
or
xchg
scas
mov
pop
lods
or
or
cmp
pop
js
add
xchg
add
xor
mov
pop
andl
mov
mov
or
jnp
push
mov
outsb
or
punpckhdq
lock
test
push
cmp
mov
cmp
jmp
bound
in
push
test
repnz
xchg
or
rclb
enter
std
xchg
xchg
scas
and
dec
mov
mov
lret
add
mov
daa
and
cmpsl
lods
adc
sahf
pop
jp
push
dec
xor
or
adc
dec
lods
xchg
xchg
add
cltd
or
sub
inc
movsb
xchg
aam
cmp
sub
stos
add
pop
aas
test
popa
rcll
ret
inc
adc
cmp
das
or
xchg
je
xchg
icebp
xor
xchg
je
cmc
xor
inc
inc
push
icebp
dec
mov
sbb
test
js
or
pop
mov
or
jnp
and
xchg
dec
and
sub
movb
daa
aaa
aad
add
or
mov
add
shl
popa
and
scas
test
mov
mov
ds
sub
fiaddl
cmc
pop
add
shr
outsb
pop
or
lret
stc
fwait
and
leave
or
es
or
mov
dec
rcrl
sahf
imul
bnd
add
add
push
inc
flds
mov
das
sbb
addr16
jge
xchg
test
dec
pop
jmp
ja
fcoml
mov
rcrb
cmp
mov
fwait
jnp
test
jae
jbe
mov
xor
in
push
push
jne
test
les
mov
sbb
add
orl
xchg
and
push
mov
adc
jp
jecxz
inc
inc
shlb
jecxz
inc
pusha
jo
cmp
in
jg
int3
fs
fbstp
insb
cmp
cmp
jmp
jno
je
mov
std
stos
sbb
dec
cmp
pop
les
dec
pop
mov
rcrl
pusha
or
push
in
xor
test
xlat
cmp
pop
and
pusha
sbb
mov
xchg
cmp
pop
sub
stos
inc
sub
adc
adc
mov
or
lcall
js
inc
mov
fnstcw
ficompl
imul
inc
je
cmpsl
xor
mov
lcall
popf
imul
mov
lahf
or
das
mov
rclb
xchg
int3
jnp
and
lock
insl
cmpsl
mov
outsb
fidivrs
mov
stos
xchg
pop
fwait
test
push
xor
lea
xchg
dec
adc
lods
test
sbb
int
push
jnp
jg
dec
aaa
test
xorb
and
andl
scas
jp
dec
xor
mov
cmp
sbb
loope
add
rol
sub
sub
das
jnp
mov
jae
cmp
fdivs
push
bndstx
sbb
push
xor
mov
js
inc
fmull
sub
ret
loopne
dec
jno
lret
mov
das
loop
inc
push
fistl
fcoms
repz
outsl
test
push
test
xchg
inc
mov
scas
or
xchg
sbb
lahf
inc
push
push
test
inc
ret
dec
inc
insl
xor
inc
dec
xor
xchg
cmc
faddl
int
adc
icebp
inc
js
rcrl
in
repz
sbb
adcb
xchg
lds
subl
jnp
inc
test
js
mov
lods
mov
pop
push
adc
aad
pop
mov
ret
imul
xchg
inc
mov
or
test
ret
mov
sbb
testb
jmp
xor
sub
stos
adc
lea
xchg
std
mov
or
mov
sbb
and
mov
pop
xor
fnclex
jecxz
pop
jp
cwtl
ljmp
pop
orw
xchg
adc
test
in
cmpsb
or
outsl
jp
jl
rolb
out
and
arpl
push
or
dec
and
loopne
dec
fsubrs
nop
push
loope,pn
sarb
test
add
or
data16
test
xchg
js
shrb
dec
add
insl
sbb
movsb
add
mov
push
pop
add
push
push
stos
or
xchg
test
cmp
loop
xor
or
dec
aas
pop
movsb
jno
add
fadd
idivl
rorl
ds
gs
xchg
dec
push
adc
lds
adc
xor
push
mov
loop
loop
fidivrs
xor
jnp
adcb
xchg
cmp
das
add
popf
add
leave
dec
lea
mov
rorl
loop
jmp
mov
fucomp
jbe
mov
mov
negl
lea
or
xchg
or
add
add
cmp
or
or
mov
repz
mov
pop
inc
es
or
xchg
push
pop
stos
stc
movsl
jp
mov
cmpsl
lahf
mov
fisubrs
sbb
scas
and
sub
sbb
pop
test
mov
jnp
xchg
jl
or
cmpsl
inc
jle
stos
ss
sbb
fwait
rolb
test
add
xlat
sbb
xor
and
mov
or
test
out
dec
push
adc
cmp
cmp
xlat
xchg
or
xor
adc
ret
xchg
mov
mov
imul
popl
mov
mov
in
fadd
sbb
adcb
sub
push
ret
loope
sub
pop
xorl
push
cmpsl
pop
xor
repz
and
mov
sub
shl
add
mov
add
nop
test
pop
add
sarb
inc
inc
movsl
jo
lret
outsb
movsl
dec
dec
xchg
and
popf
loope
subb
mov
aas
inc
test
aad
add
xor
gs
arpl
popa
and
add
je
inc
jo
add
cmc
jg
loope
aaa
testl
dec
jmp
imul
xchg
inc
js
jo
int
ja
add
cmp
inc
aaa
inc
sub
sbb
loope
mov
add
or
pop
xchg
jmp
test
mov
sbb
push
jecxz
add
insl
or
cmp
popf
jmp
lods
shlb
xchg
in
xchg
cmp
pop
js
mov
sub
btcl
cwtl
es
or
mov
adc
fxch
das
jns
stos
daa
xor
push
gs
add
popa
cmp
sub
das
sbb
movsb
add
mov
or
mov
jne
ja
mov
mov
pop
scas
mov
dec
ds
loopne
insl
movsl
lea
push
je
scas
and
sarl
dec
push
popf
sbb
daa
lods
xor
es
das
cmp
sbb
js
fwait
ret
or
mov
push
add
mov
pop
aam
mov
imul
test
fidivrl
lods
jae
add
adc
les
pop
or
sbbb
mov
xchg
dec
rclb
mov
loop
enter
dec
lea
sub
orb
mov
push
mov
jge
sti
arpl
andb
pop
pusha
cltd
scas
dec
and
adc
insl
sub
cmp
cmp
fucomi
aaa
jne
aad
xor
shll
mov
sbb
jno
push
push
mov
arpl
es
sti
aad
imul
gs
mov
arpl
jl
sub
inc
popa
and
sub
xchg
inc
scas
mov
clc
pushf
cwtl
test
push
mov
andl
stos
test
jge
sbb
mov
imul
push
outsl
inc
popa
out
outsl
outsb
xchg
mov
aas
xlat
test
mov
mov
cmp
add
fstl
out
inc
rorb
aas
and
or
dec
pop
in
mov
xor
fucomi
and
and
daa
cmpsb
popf
pop
mov
fwait
or
mov
fs
push
ret
int
mov
adc
lcall
jecxz
mov
jns
lret
mov
mov
hlt
add
fldl
jecxz
jge
aad
sub
xor
repz
dec
arpl
outsb
ret
aaa
fnstcw
pop
hlt
iret
add
leave
cltd
xor
mov
lret
flds
jp
clc
and
push
jnp
pusha
scas
mov
xor
cmp
push
add
push
mov
push
fdivs
rolb
loopne
push
or
xor
add
rcrl
push
jbe
sbb
out
sub
mov
insl
inc
out
outsl
stos
cwtl
inc
sbb
and
popa
pop
sub
mov
push
xor
popa
call
ret
push
add
cmp
scas
xchg
fisubs
into
ret
mov
sbb
lahf
push
lcall
cmpsb
mov
sub
rclb
subl
add
pusha
adc
lea
push
insb
adc
js
xor
dec
push
or
bound
jl
outsb
push
jg
icebp
loop
add
inc
orl
mov
out
xor
mov
and
sub
icebp
mov
jecxz
or
inc
cmp
cmpsl
and
adc
or
sub
in
mov
push
pop
lcall
in
mov
xor
imul
xchg
sbb
mov
jb
lret
loope
sbb
shrl
int
aad
int3
adc
ja
pop
mov
cld
sbb
xchg
sub
sub
mov
hlt
cmpsl
or
jmp
xchg
ret
ret
bound
pop
aad
pop
test
inc
mov
jecxz
or
cs
leave
mov
fcmovu
int
push
adc
xchg
bound
lods
and
sbb
inc
push
stos
xlat
ss
cwtl
addl
mov
mov
outsl
mov
sub
mov
lea
inc
roll
aaa
lods
cmp
or
sahf
arpl
cmp
aam
cmp
adc
and
mov
or
ds
push
jbe
and
inc
adc
mov
outsb
test
pop
das
sbb
sub
mov
cmp
dec
jno
fwait
pop
ret
in
cmp
mov
mov
pop
aas
cmp
pop
inc
add
mov
pop
and
jle
mov
jecxz
test
nop
adc
adc
popa
xor
pusha
test
ja
xor
sbb
mov
push
mov
lret
pop
mov
inc
add
in
js
inc
fistps
or
loop
pop
and
sub
xchg
jo
push
stos
add
sub
and
cmpb
push
pop
mov
add
sbb
xchg
and
add
enter
rol
mov
sub
es
mov
imul
outsl
sub
sbb
push
pop
lea
inc
sbb
xor
mov
add
shll
stos
mov
sbb
mov
cld
jge
jle
ret
pop
cmc
fildl
mov
xor
mov
adc
sub
lods
shlb
jno
aad
lods
push
jo
push
insb
xor
pop
aaa
dec
jae
sub
int
push
pushf
mov
movsb
ret
jmp
dec
push
cwtl
shrb
movsl
xor
jecxz
insl
shll
dec
adc
or
insl
dec
mov
test
add
pop
popa
lea
imul
icebp
mov
mov
xchg
mov
pop
adc
cmp
ret
movsl
inc
pop
pop
mov
jg
lods
mov
xchg
pop
xorb
sub
inc
mov
adc
movsl
sub
add
aad
add
add
js
cmp
inc
repz
aad
test
xchg
mov
jg
ds
jmp
lea
dec
into
jp
inc
add
pop
js
shll
and
sbb
fs
xor
lahf
push
or
adc
pop
loop
cmp
xchg
cmpsb
orl
mov
fistpll
insb
cmp
cmpb
test
aas
sar
sub
outsb
sub
and
rcrl
sub
xor
fdivs
fldt
inc
push
movsl
lret
cmc
and
in
jmp
adc
push
xor
inc
mov
cmp
xchg
cli
push
cmpsb
pop
mov
push
and
addr16
add
jmp
jne
jl
xchg
adcb
mov
dec
in
push
push
pusha
sub
outsb
or
sub
xor
cs
nop
test
jmp
sbbb
mov
outsl
add
sub
mov
jecxz
mov
jbe
adc
sarb
insl
adc
loope
lds
mov
cwtl
sbb
mov
ror
xchg
rcll
stos
ret
push
daa
insl
jle
add
inc
outsb
cmp
out
lea
xchg
and
pop
aas
and
test
jbe
mov
lds
or
adc
sarb
sub
mov
int3
clc
out
add
add
jg
jns
les
mov
xor
mov
jmp
adc
mov
or
dec
aas
xchg
pusha
jge
pop
add
mov
mov
xor
or
add
bound
aam
shlb
and
jno
xchg
mov
fs
mov
add
and
and
sub
mov
adc
dec
or
jne
sbb
icebp
push
in
pop
add
or
popa
test
adc
cltd
xlat
pop
sub
ss
popf
sub
inc
cmpsl
fists
mov
movl
insb
mov
test
and
cmp
inc
in
mov
xchg
push
rorb
call
add
mov
add
inc
pop
push
jnp
cmp
filds
and
mov
inc
imul
xor
outsb
sahf
xchg
pop
popa
xchg
mov
xor
adc
adc
xorl
cmc
mov
sbb
jp
sub
xor
cmc
pop
js
push
mov
test
add
inc
push
repnz
in
jl
outsb
adcb
jb
lods
mov
loopne
mov
out
mov
sti
jns
bound
mov
ja
sub
ret
sbb
pop
cwtl
out
push
icebp
imul
sbb
stos
mov
cld
js
std
sub
push
cmpsl
mov
jg
lahf
mov
mov
mov
insb
and
lds
dec
cmp
sahf
ret
xorb
sbb
push
jp
push
xchg
mov
pop
mov
cmp
stos
popa
add
inc
pop
sbb
aaa
mov
dec
adc
pop
fimull
shlb
adc
aaa
inc
imul
jne
add
inc
and
addb
push
and
in
cmp
xor
jecxz
lret
insb
cmp
and
arpl
shll
jne
and
sahf
stos
mov
jmp
sub
lcall
movsb
sbb
jb
fdiv
loop
xlat
and
mov
mov
sbb
arpl
and
jno
pop
ljmp
mov
mov
xchg
sub
sbb
insb
jnp
xor
aad
pop
pop
xchg
outsl
cmp
mov
in
sti
sbb
in
adc
stos
mov
sbb
ljmp
popa
xchg
adc
push
inc
jns
sbb
aas
arpl
and
mov
lea
mov
popa
cmpsl
out
xor
mov
jg
or
dec
shll
in
adc
push
cmp
mov
mov
dec
ljmp
pop
fcoms
imul
inc
cmp
sub
adc
pop
lsl
loope
and
mov
mov
aam
dec
jmp
push
adc
dec
xor
sub
push
xorl
add
xchg
pop
xor
jecxz
rorl
xchg
and
sub
ret
dec
mov
pop
jmp
loope
add
ficomps
rcl
lds
ficoml
sbb
shrl
mov
mov
test
push
cmp
mov
mov
js
jae
or
popf
cmpsb
fisubrs
aad
sbb
sbb
adc
mov
data16
popa
push
and
call
jnp
add
xchg
lds
jnp
adc
add
and
orl
pop
mov
add
lds
push
dec
leave
fisttps
subl
xchg
lcall
add
adcl
bound
lahf
dec
or
std
mov
or
sbb
subl
je
pop
inc
lahf
lods
stos
jb
xorb
repz
cmp
adc
pop
pushf
cmp
leave
sub
mov
add
mov
dec
cmp
sbb
pop
hlt
jne
push
cmp
push
inc
lods
test
pop
clc
cmp
loope
and
mov
and
pop
sahf
movsl
ret
xchg
adc
cmp
sub
push
cmpsb
adc
and
mov
push
jmp
nop
cwtl
sub
pop
fldt
jno
in
mov
add
xor
imul
das
daa
pop
or
popf
imul
fwait
ljmp
repz
sbb
out
outsb
inc
mov
jmp
push
xor
movsl
dec
shrb
shr
outsl
jae
sbb
ret
pop
and
call
shll
and
add
lds
je
addr16
fmuls
dec
pop
test
xchg
sbb
mov
add
hlt
mov
jo,pn
xor
cld
xchg
rolb
mov
push
ja
icebp
or
sub
xchg
dec
xor
das
mov
sbb
pop
jne
lds
xchg
lcall
les
mull
mov
scas
add
mov
aam
adc
fnstcw
mov
jmp
arpl
push
adc
outsb
mov
inc
adc
xor
push
insl
xor
sub
stos
pop
or
ds
enter
mov
pop
adc
xchg
sub
mov
sbb
leave
mov
ss
mov
xor
and
mov
xchg
sbb
das
xchg
not
sub
add
xor
dec
xor
pop
aam
mov
fsubrs
xor
ja
or
mov
in
or
mov
and
aaa
lds
or
ret
scas
adc
cmp
or
dec
push
loopne
push
stc
add
jb
pop
add
and
jo
push
aad
mov
adc
pop
imul
je
inc
xor
sbb
sub
add
adcb
adc
sbb
or
xchg
xor
arpl
add
into
ret
adc
das
adc
je
xor
scas
or
sub
test
pop
add
sub
or
lret
xor
lcall
and
mov
imul
adc
in
pop
sub
repz
imul
jno
push
jmp
mov
jae
add
mov
outsb
sarl
outsl
push
cmp
mov
addb
lods
outsb
lds
jp
ret
inc
aas
test
test
adc
jno
addb
aaa
lret
xchg
ljmp
sbb
add
lahf
or
add
xor
and
push
sbb
lcall
cmp
pop
push
pop
dec
imul
add
xchg
test
dec
das
sub
ret
jecxz
or
add
mov
mov
mov
lahf
pop
xchg
and
addb
fwait
cmp
fsubs
push
pop
mov
or
push
push
mull
fsts
std
cs
adc
push
lods
adcb
ja
mov
and
das
jmp
sbb
andl
xor
adc
subb
dec
or
adc
or
subb
aam
fcomps
jne
fwait
in
cmp
test
fisttpl
sbb
fists
stos
icebp
arpl
or
lods
push
pop
jno
pop
inc
inc
bound
sbb
les
xlat
mov
or
cmpsl
add
mov
adc
jno
in
xchg
ja
ret
lahf
xchg
mov
jne
mov
shl
dec
pop
ret
jecxz
push
sbb
insl
sahf
lds
aas
lahf
mov
aaa
stos
xchg
les
popa
daa
push
iret
push
call
mov
ss
jg
sub
cmp
inc
imul
test
sub
stos
dec
lds
and
adc
push
inc
shlb
sbb
popa
xor
jne
mov
rcrl
arpl
shrl
fisubl
mov
push
mov
mov
idivl
and
rolb
sbb
add
fnstsw
outsl
aad
fistpl
cmpsb
adc
push
loope,pn
test
sbb
iret
mov
push
sbb
and
xchg
add
insl
inc
imul
rcrl
loopne
cmp
inc
dec
lock
sub
fisttpl
inc
cmp
cmp
ror
push
push
daa
add
sbb
dec
mov
mov
jnp
dec
mov
xchg
lods
xchg
pop
jg
xchg
mov
adc
mov
pop
movsl
sbb
fstpt
mov
mov
xchg
or
adc
addr16
enter
fsts
xchg
push
push
les
push
cmp
mov
aam
mov
test
dec
push
mov
xor
loope
cmp
cmpsb
adc
and
test
fdivl
rcrb
sub
dec
and
ds
adc
and
pop
add
stc
jge
xchg
inc
inc
imul
es
or
or
pop
out
mov
sbbl
movsl
fisubl
rol
jno
xchg
sbb
ret
sub
shl
inc
das
addr16
testb
mov
outsl
add
nop
and
or
mov
sub
adcl
ds
enter
fiaddl
outsb
dec
sub
into
test
repnz
fwait
dec
gs
pop
shlb
into
das
add
or
mov
push
sbb
test
repnz
add
and
adcb
jp
pop
test
push
mov
xchg
push
insl
test
xor
fsubs
mov
cmp
add
shrb
sbb
shrl
xchg
jecxz
or
shll
lock
jmp
sub
rolb
lea
inc
mov
pop
pop
loopne
lds
test
cs
loope
addr16
popf
pop
subl
aaa
cs
or
loopne
push
mov
lcall
pop
inc
lret
xchg
add
sbb
fs
add
sub
arpl
xchg
fildl
mov
movl
adc
sbb
mov
jb
mov
xor
cmp
fisttpl
pusha
test
ret
pop
das
aam
cs
test
test
aas
sbb
push
fcoml
push
cmp
repz
or
jno
sub
adc
js
bound
mov
jnp
cltd
pop
scas
pop
daa
xchg
pop
sub
shlb
and
jp
push
cmp
or
push
loope
lcall
dec
stos
xor
daa
pop
out
out
adc
sub
call
pop
int
repnz
add
lret
lock
cmp
out
or
pop
ret
in
mov
scas
sbb
mov
cmp
je
pop
cmp
mov
adc
cmovae
push
and
pop
pop
jb
pop
movsb
mov
adc
testl
add
xchg
scas
mov
jge
aam
push
mov
orb
add
inc
pop
and
add
sub
mov
add
xchg
mov
push
add
flds
js
jle
out
fldt
push
cmpsb
push
pop
icebp
add
loope
fdivrl
sub
add
sub
sarb
sub
sub
pop
aaa
inc
xlat
or
movsb
inc
add
adc
fsubs
pusha
pop
add
addr16
fidivrl
daa
ud2
mov
ret
outsl
popf
test
xchg
add
push
or
add
sahf
cmp
mov
ja
mov
pop
out
pop
js
add
mov
and
outsl
xor
out
pop
faddp
stos
adc
dec
inc
pshufw
xchg
sub
insl
pushf
loopne
ret
fld
pusha
xchg
stos
fisubl
movsb
bound
inc
mov
imul
mov
lds
ret
mov
movsb
test
mov
inc
push
mov
outsb
pop
js
icebp
dec
push
cmp
xor
aaa
scas
and
adc
push
nop
iret
xor
push
pop
imul
cmp
inc
adc
mov
and
outsl
pop
mov
sbb
rorl
push
and
push
rcl
les
leave
out
mov
loop
pop
out
addr16
dec
scas
out
and
adc
pop
mov
fisubrs
iret
sarl
lret
fnstsw
dec
outsl
dec
cmpsb
hlt
adc
sub
and
add
test
lret
adc
leave
add
mov
lods
sub
je
pop
adc
ja
push
sbb
mov
sub
pop
testl
xchg
cmc
bound
ret
and
jmp
stc
loop
adc
stc
fsubrl
mov
fstl
pop
push
rorl
sub
outsb
adc
xor
test
in
and
dec
mov
add
test
imul
bound
pop
inc
pop
cwtl
inc
add
in
xor
jp
nop
mov
das
sti
push
mov
sub
lods
jae
mov
sub
or
icebp
push
scas
pop
sbb
mov
jle
jp
sub
or
dec
lahf
stos
dec
jecxz
jno
push
mov
mov
cmp
daa
dec
or
mov
and
or
dec
sub
mov
mov
mov
add
add
pop
jns
out
and
adc
adc
insl
mov
cmp
pop
mov
and
mov
jp
sub
push
pop
icebp
and
xor
aas
adc
js
xor
push
mov
ret
mov
fs
hlt
mov
cmp
test
rclb
push
xor
imul
add
xchg
imul
andb
dec
ret
jmp
mov
adc
outsb
je
mov
or
and
pop
lock
imul
sbb
or
bound
xor
repz
push
sti
xor
sub
xor
add
sub
or
ljmp
call
imul
mov
push
icebp
jmp
inc
mov
sahf
ret
int3
or
lods
adc
and
mov
lea
popa
or
movsl
push
add
sub
int3
jp
mov
jecxz
adc
inc
bound
rcll
mov
psubw
daa
and
push
or
pop
xor
jae
xchg
test
das
sbb
inc
je
xlat
jae
sub
sbb
out
cmp
cwtl
jl
sub
xchg
or
push
imul
int3
and
pop
xor
xor
leave
jg
imul
mov
fsubrs
push
dec
outsl
push
adc
das
popf
and
or
and
sbb
and
push
pop
push
hlt
xor
sbb
jns
add
jp
xlat
add
add
sbb
push
sarb
or
fstpt
or
imul
std
ja
ret
pop
in
mov
and
stos
push
add
mov
sub
inc
jnp
div
mov
js
inc
mov
sub
fiaddl
jmp
je
push
lahf
mov
mov
push
in
add
sub
inc
sub
dec
adcl
nop
call
mov
jle
imul
jne
test
aaa
xchg
or
arpl
xor
push
cld
lahf
lods
sbb
jecxz
xchg
adc
xlat
into
jae
call
fbld
dec
mov
dec
dec
cmp
pop
jge
xor
pop
insl
es
sub
adc
outsb
sbb
ss
lcall
jecxz
mov
insb
sbb
add
in
and
out
repnz
jp
pop
cmp
dec
push
fisubrs
and
daa
loope
iret
push
xchg
cmpsb
and
pusha
mov
lods
jne
and
mov
mov
jecxz
push
movsb
adc
testb
pop
jg
or
pop
pop
cmp
pop
jbe
mov
dec
loopne
push
pop
pop
sbb
push
loopne
push
and
add
xchg
sub
push
leave
les
push
inc
jbe
jno
ret
fst
mov
xor
fadds
imul
mov
mov
sub
xor
js
orl
and
mov
inc
sbb
or
xor
mov
adc
jmp
outsl
lret
or
sub
inc
ja
push
add
inc
jp
ret
lcall
sbb
xchg
aam
add
and
shrb
xor
sarl
nop
mov
and
inc
mov
fidivs
aam
in
lret
addb
std
and
mov
or
cmpsb
pushf
push
push
mov
sbb
pop
inc
test
xlat
xlat
and
push
xchg
jnp
fwait
jnp
add
test
hlt
mov
sub
sub
and
sub
mov
cmp
jnp
inc
aas
sub
aaa
xor
mov
push
xor
or
xor
sbb
loope
add
pop
xchg
dec
fiaddl
ds
cmp
add
and
insl
add
add
das
push
popa
push
lahf
add
mov
sarl
in
xor
dec
insb
add
xor
mov
adc
loopne
push
jmp
add
pop
push
push
fstl
sub
add
enter
or
jo
inc
mov
ljmp
outsb
jecxz
and
ja
or
fistps
ficoms
and
hlt
arpl
mov
jno
popf
xchg
sar
or
mov
cmp
lcall
lods
scas
out
popf
jnp
test
ret
enter
xchg
outsb
jmp
push
pop
xorl
aas
sbb
xor
sti
mov
jnp
repnz
out
insb
cmp
fwait
ds
push
cmp
jge
xor
test
cs
mov
pushf
repz
adc
fxch
testl
push
push
mov
xchg
cwtl
js
ffree
in
push
idiv
fwait
mov
push
sbb
and
push
stc
ret
mov
js
lret
lods
xchg
inc
in
lods
cmp
xchg
jbe
pushf
sbb
ret
outsb
pop
cmp
and
fldl
and
lahf
cmp
leave
xlat
loope
mov
xchg
add
ljmp
mov
push
nop
icebp
xchg
mov
movsb
je
or
push
xor
sbb
add
and
rol
inc
sbb
aam
mov
sbb
sub
push
jp
in
sti
rolb
and
outsb
pop
loopne
mov
xchg
cmp
outsb
push
sbb
fwait
bound
inc
xor
sbb
stc
push
test
jnp
adc
or
xchg
sub
adc
fwait
pop
sahf
cs
lahf
lods
mov
xor
push
inc
jno
pop
or
adc
mov
in
add
lret
or
jle
das
decb
addl
aad
ret
test
loope
out
add
je
xchg
scas
push
sahf
inc
shlb
scas
add
xor
insl
or
mov
mov
mov
mov
popf
out
mov
and
arpl
popf
mov
xlat
fidivs
js
pop
cmpsb
lods
push
andl
out
lods
xor
push
sub
int3
in
xor
add
insb
add
push
dec
mov
push
jecxz
loope
call
pop
push
mov
xchg
sub
lret
push
jle
add
pop
inc
cmp
lock
or
cmp
jno
push
sub
lcall
aaa
sbb
cmp
mov
dec
and
sbb
imul
enter
cmp
xor
fstp
fisubl
in
xlat
or
into
inc
xor
fimull
subb
arpl
pop
and
inc
js
mov
add
sbb
notb
das
in
xchg
loop
idiv
push
in
pop
xor
sahf
pop
imul
or
lds
out
out
jmp
mov
sbb
mov
adc
or
or
mov
mov
jecxz
inc
rcr
imull
das
lret
cmc
xchg
add
dec
lea
icebp
movsb
add
out
loope
les
lea
mov
addl
enter
add
inc
mov
outsl
pusha
or
mov
or
xchg
mov
cmp
push
out
sub
mov
sbb
xor
out
inc
mov
push
mov
rcrb
xor
ret
adc
pop
sbb
sub
ffreep
push
in
or
mov
mov
mov
cltd
jmp
xor
jns
and
test
mov
mov
aam
sti
pop
or
mov
scas
xchg
icebp
xchg
sbb
add
mov
cmpsb
mov
je
cmp
sar
mov
aam
push
ret
ret
shrl
lahf
sbb
jae
test
test
pop
fbstp
arpl
jge
push
cmp
adc
ror
sub
lods
pop
dec
inc
mov
push
push
mov
xchg
insl
cmp
and
outsl
pop
popa
addr16
insl
fimuls
data16
push
insl
rcll
mov
std
xor
hlt
test
testl
lock
inc
adc
mov
xor
xchg
fldcw
repz
and
sbb
and
push
cmp
loope
icebp
movsl
xchg
mov
pusha
jecxz
push
pusha
sbb
psubw
pop
sub
aam
or
flds
cmp
and
fistpl
pop
adc
sub
pop
mov
sbb
push
bound
jo
jge
and
int
hlt
mov
cwtl
sbb
lock
stos
imul
icebp
sbb
and
stc
stos
movsl
popf
pop
sbb
es
pop
out
mov
ja
aam
and
adcl
inc
das
jmp
and
mov
test
in
fisubl
sub
inc
out
mov
movl
lods
movsl
loope
iret
ja
rcrb
shll
push
mull
mov
sarl
loope
lret
cmp
push
mov
or
adc
inc
addl
shll
add
xchg
int
adc
cwtl
iret
fwait
int
inc
add
pop
loop,pt
aaa
mov
ret
stc
out
or
adc
mov
xor
jne
arpl
push
loope
push
mov
mov
and
pop
dec
aaa
adc
lock
cmovb
dec
gs
sbb
jo
jb
sbb
loop
lods
leave
insb
loop
mov
fldt
pop
adc
cmp
lods
iret
sub
out
pop
xlat
js
pop
and
pop
bound
lods
cltd
inc
adcb
mov
sub
fidivl
add
jb
or
push
or
movsl
repz
outsl
daa
jo
xor
pop
pop
sub
imul
test
inc
or
cli
xchg
aad
dec
mov
lahf
movsl
loop
inc
xchg
insl
xor
or
sbb
push
add
int3
jmp
sub
imul
xor
push
pop
movsl
add
ret
xor
call
fsts
leave
icebp
js
mov
arpl
shlb
pop
jno
jno
mov
or
pop
mull
int3
inc
ret
insb
inc
lgs
dec
hlt
adc
cmp
in
sub
and
outsb
jl
dec
add
jge
js
scas
adc
cmpsb
pop
hlt
in
add
test
pop
testl
les
xchg
jbe
cmpb
sbbl
add
xor
jmp
or
lods
fistps
sub
xor
pop
adc
mov
scas
in
jl
push
stos
mov
xlat
test
xor
subl
add
jecxz
mov
arpl
sub
xor
inc
fisttpl
maxps
sbb
sub
push
push
add
and
xor
add
daa
sub
mov
insl
outsl
adc
pop
enter
aam
int3
mov
cmpsb
sub
scas
inc
push
mov
inc
fsubrs
lods
xor
xchg
sbb
test
pop
mov
adc
xchg
gs
push
inc
and
push
fdivs
stc
jl
mov
out
xor
dec
mov
arpl
jmp
sub
inc
add
sub
clc
xchg
popa
inc
or
adc
es
aaa
jmp
pop
inc
sub
ret
daa
jno
movsl
inc
out
loopne
mov
sbb
xchg
cmp
cwtl
mov
shrl
popa
ret
ret
ret
mov
pop
pop
sbb
sbb
jae
and
mov
mov
aad
mull
shlb
ja
xchg
and
cmp
popa
jnp
push
add
gs
daa
adc
in
add
mov
sub
enter
and
add
lret
add
jl
stc
loope
pop
xchg
sub
lods
sub
aam
add
popa
inc
imul
mov
add
inc
adc
xchg
in
popf
mov
push
mov
xlat
enter
addr16
repz
xchg
or
out
mov
addl
push
dec
jbe
dec
adc
scas
dec
fld
pop
and
dec
pop
and
xchg
lds
pop
fyl2xp1
inc
orb
test
idiv
and
pop
out
insl
mov
out
addr16
lds
lock
mov
shr
ja
mov
pusha
dec
xchg
jns
orl
push
loopne
cmc
mov
jno
pusha
insb
mov
icebp
cmpb
jge
add
or
jno
fldt
cmpsl
dec
shl
fwait
adc
and
dec
icebp
sbb
les
xchg
mov
xchg
lea
xchg
imul
add
and
ss
jecxz
cmp
sbb
fcomip
pop
add
outsl
inc
out
dec
fwait
ret
adc
bound
sbb
sub
lret
xchg
lods
add
cmp
pop
scas
bound
lahf
push
rclb
ret
adc
fwait
inc
fldt
aam
dec
inc
jo
test
xchg
xchg
jae
cmp
out
vpaddq
sub
cmp
outsb
enter
sbb
sar
sub
xor
int
icebp
pop
jbe
mov
push
mov
sub
popa
mov
aaa
push
adc
sbb
pop
subb
or
arpl
add
sbb
imul
int3
dec
lds
ret
add
jno
decl
jno
dec
jmp
ja
jbe
adc
sti
enter
arpl
pop
faddp
cmp
in
inc
ja
aas
xchg
mov
inc
aaa
shrb
jnp
out
dec
xor
mov
jns
add
pop
mov
pop
pop
jmp
rorl
jl
adc
pop
or
dec
iret
pop
pop
and
push
sbb
push
daa
pushf
rcll
bndstx
jae
or
push
fstpt
rol
shll
daa
push
mov
cmpsl
clc
sbb
pop
test
fimuls
cmpsb
cmp
test
sbbl
stc
add
xor
ja
movsl
add
pop
xchg
sbb
movsl
add
lods
insb
xlat
andl
add
push
add
dec
rcll
dec
xchg
push
sub
jle
testl
pop
movsb
add
push
lds
cmp
js
dec
daa
add
xor
cmpsb
movb
pushf
add
push
add
sti
or
jo
pop
jmp
ret
mov
cmc
les
push
std
rolb
rclb
mov
addr16
or
roll
add
idivl
jo
test
sbbl
mov
adc
push
mov
fistpl
sub
jns
jge
adc
pusha
or
or
jl
cmc
mov
dec
imul
push
pop
out
stos
test
adc
fldt
pop
sub
add
test
ja
push
cltd
sub
adc
mov
dec
add
or
shlb
fisubs
cli
or
in
add
pop
add
jecxz
sub
pop
out
or
inc
jle
rcrl
in
add
sub
rol
mov
xor
adc
push
stos
or
rcll
xchg
std
pop
fwait
push
test
imul
jmp
ret
jno
cmp
test
stos
test
pop
mov
test
mov
lds
loope
lds
push
or
pop
xor
nop
jbe
jecxz
jno
or
xor
jae
rcrb
mov
mov
outsl
pop
jnp
nop
sub
ret
pop
add
in
std
cmp
push
or
add
lock
add
lret
cmpsl
sti
mov
fstps
jae
and
mov
add
mov
jnp
int3
pop
mov
fs
push
dec
add
divl
ret
test
push
fisubrs
int3
jae
mov
insl
pop
mov
loopne
dec
jge
ds
inc
faddl
mov
xor
pop
int
push
push
or
cmpsb
ret
and
imul
push
jecxz
aaa
ljmp
add
push
lds
xchg
lods
fneni(8087
popa
aas
lret
ret
jns
js
inc
fcomp
pop
inc
push
gs
fwait
dec
cmp
fsubrl
add
inc
push
mov
push
xchg
call
jno
mov
push
inc
testl
xor
lret
mov
repnz
jne
imul
loop
mov
filds
dec
imul
add
lock
les
or
bound
in
sub
inc
cmp
sub
popa
xor
cmc
adc
decl
ja
cmp
mov
or
xchg
pop
test
xchg
inc
jns
pop
or
mov
nop
imul
xchg
mov
lods
and
mov
lds
mov
mov
push
fnstenv
adc
sub
movsb
loope
sub
push
xor
in
lret
add
daa
fmuls
adc
push
imul
out
aad
inc
sarb
lea
xchg
insl
dec
mov
sahf
daa
push
cwtl
jecxz
sti
jmp
xchg
sbb
adcb
ret
inc
adc
out
mov
push
bound
or
xor
add
iret
subl
add
push
dec
into
jae
add
cmp
les
xor
loope
add
cmp
les
adc
inc
pop
sbb
mov
inc
sbb
aam
fwait
imul
inc
pop
stos
inc
cmc
stc
mov
shll
mov
adc
adc
and
js
aad
cmp
int3
push
shll
aam
cld
add
outsb
xlat
bound
stos
shrb
cmp
push
insb
mov
sbb
jne
dec
in
add
pushf
iret
mov
xchg
in
mov
or
jg
jae
ja
add
add
call
mov
sbb
lods
iret
xchg
xchg
xor
outsb
jg
and
outsb
dec
imul
nop
sbb
sub
xchg
push
xor
dec
insl
push
test
or
retw
sbb
add
dec
pop
aad
adc
pop
inc
push
or
cwtl
add
push
insl
pop
and
fisubl
dec
and
fcomi
inc
mov
inc
ror
cmpsb
arpl
inc
xchg
sbb
test
enter
jecxz
and
enter
aad
xlat
inc
xchg
pop
cmp
push
pop
jmp
lds
rorb
aad
lret
orb
sbb
cmp
or
mov
push
cltd
popa
jmp
sbb
iret
push
test
dec
lods
sbb
dec
or
cmp
inc
test
adcl
stos
lahf
add
xchg
mov
cwtl
mov
arpl
dec
sub
icebp
insl
test
fs
push
jecxz
sbb
clc
test
push
iret
push
inc
sbb
sbb
push
sbb
popa
add
add
rcrl
push
sbb
jge
sbb
fdivs
rcll
add
es
or
push
bound
xchg
dec
cltd
popa
mov
iret
add
div
arpl
es
xchg
in
sub
cmp
fnstsw
push
and
lods
shl
inc
xchg
fidivrl
stos
and
xor
sub
xchg
test
leave
mov
arpl
mov
or
popf
aam
and
inc
mov
or
fcmovbe
and
outsl
and
dec
and
and
add
ja
adc
aaa
push
mov
sub
pop
xlat
pop
xchg
cmp
repnz
push
icebp
inc
insl
imul
pop
out
lds
mov
cmpsb
sub
sbb
repz
adcb
xchg
dec
fsubs
loope
pop
call
sub
lret
mov
data16
enter
bound
add
jmp
mov
dec
mov
inc
lods
or
push
scas
imul
mov
inc
sbb
mov
jecxz
jecxz
add
rclb
lret
bound
lret
mov
mov
xchg
mov
mov
mov
sbb
mov
and
adc
sub
mov
dec
jo
mov
sbb
lods
adcb
aaa
movsb
dec
loope
fnsave
mov
xchg
mull
sbb
xlat
mov
subb
aaa
mov
sbb
out
mov
and
shll
movsb
test
in
mov
shrb
lret
sti
adc
pop
inc
stc
mov
aaa
test
movsl
out
test
cmpsb
xor
push
nop
xorb
imul
xchg
ret
sti
adc
pushf
aam
inc
pop
mov
xor
add
xor
mov
jo
iret
pop
mov
test
jecxz
pusha
sbb
lds
jge
push
addb
add
cmp
inc
or
dec
int
lcall
xor
add
xchg
dec
sbb
jne
lret
data16
bound
pop
pop
adc
sub
adc
lods
and
pusha
cmp
ret
cwtl
hlt
std
inc
or
mov
add
popa
dec
add
loope
push
pop
xor
in
fucom
and
fisttps
rorb
out
in
cmp
pop
and
popa
inc
inc
lods
sti
or
mov
js
jae
arpl
and
xchg
repz
fmull
cwtl
mov
repnz
subl
leave
dec
sub
out
mov
mov
std
xchg
shll
sbb
dec
hlt
andl
adc
pop
mov
sub
clc
out
getsec
adc
aad
xchg
push
cmpsl
inc
inc
sub
xor
push
lahf
imul
xchg
add
pusha
inc
test
sub
arpl
sbb
sbbb
cmc
pop
outsl
daa
xchg
cmpsb
dec
out
mov
and
pop
inc
scas
adc
or
pop
lods
jnp
arpl
xchg
outsb
iret
shl
std
cmp
dec
add
sbb
jno
add
pushf
inc
std
pop
mov
test
mov
sbbl
das
cmc
cmc
xchg
push
pop
add
push
ret
inc
icebp
pop
xor
pop
mov
scas
push
cs
rcrl
push
pop
fldenv
pop
mov
add
jns
cmc
jbe
sub
pop
ud1
sbb
jns
arpl
int3
mov
jb,pn
adc
imul
dec
shlb
dec
xor
lods
gs
lea
pop
and
or
add
jae
cwtl
cs
loope
fcmovb
and
fsubs
mov
or
mov
mov
lea
out
jmp
in
out
push
or
sti
gs
mov
imulb
adc
push
sub
inc
dec
pop
pop
sub
ret
inc
jbe
xchg
fisttps
cltd
and
cmpsb
add
lret
sarb
ja
push
add
lea
xor
imul
pop
cs
nop
inc
mov
in
addb
jmp
lretw
sbb
dec
fwait
adc
lods
dec
and
popf
fidivs
insl
and
push
fs
les
xor
inc
ret
repz
dec
bound
sub
adc
arpl
mov
jmp
add
mull
lds
adc
nop
sbb
daa
shl
les
ret
mov
test
mov
stos
das
repz
test
xor
lcall
sbb
flds
mov
push
aas
xor
inc
xchg
test
mov
xor
rcll
jno
popf
inc
jg
mov
adcl
pop
and
xchg
cs
adc
xchg
or
mov
sbb
sti
jnp
and
xor
pop
or
ljmp
xor
or
cltd
xchg
cmp
stos
pop
dec
arpl
xchg
mov
inc
xor
pop
jb
mov
inc
lret
mov
lock
fildl
or
mov
sti
adc
sbb
fdivrs
arpl
stc
mov
in
test
cmp
aam
cmp
cmc
xor
add
in
loope
scas
add
pop
out
pop
test
jo
outsl
adc
xor
or
cmp
pop
jecxz
or
mov
fstpt
popf
mov
fneni(8087
es
psrlw
shl
andl
movb
mov
and
mov
sbb
or
je
mov
call
fidivrl
icebp
fstpt
xor
arpl
xor
aad
cmc
push
adcb
mov
lea
imul
xchg
xchg
int3
jns
cmpsl
add
fsubrs
adc
mov
push
sbb
icebp
sub
add
mov
add
sub
pop
dec
mov
cmp
or
int3
scas
cmp
pop
mov
jne,pt
jo
out
adc
push
add
sbb
ss
mov
inc
xor
fcoml
and
mov
cmp
mov
mov
mov
popa
adc
les
rorl
cmp
cmpsb
jnp
daa
cld
or
push
cmpsl
adc
add
or
push
cltd
xchg
js
add
jns
lcall
cmpsl
lret
inc
pop
pusha
int3
add
or
cmp
mov
mov
xchg
mov
and
mov
cmp
mov
test
and
je
iret
imul
sub
test
das
adc
xchg
lret
adc
sbb
xor
xchg
ret
pop
stos
mov
sub
and
loope
clc
sbb
xchg
push
add
mov
xchg
lea
add
push
mov
sbb
mov
daa
push
pusha
xchg
cltd
mov
scas
mov
test
add
sub
divl
test
out
repz
sub
ficomps
fwait
cmp
sbb
lahf
jmp
xchg
inc
jle
inc
inc
pop
push
lret
pop
scas
popa
mov
aaa
push
xor
lock
test
xchg
fistps
out
gs
or
ret
pop
inc
das
push
test
bound
mov
mov
jo
cmp
fiaddl
repz
push
mov
es
aas
add
adc
add
add
ret
lahf
push
fld
adc
xchg
inc
sbb
rdpmc
std
sub
aam
pop
and
push
rcrl
push
icebp
sahf
lods
xor
inc
das
lea
xchg
inc
sbbb
lods
sbb
out
mov
ljmp
mov
jge
xchg
mov
xor
stos
mov
mov
shll
jl
jmp
pop
aad
xor
lret
add
into
dec
add
int3
jmp
mov
fsubs
jb
out
test
mov
sub
jno
bound
inc
outsb
out
sub
xlat
sahf
pop
or
lea
xor
call
jp
push
mov
iret
and
jecxz,pt
inc
jns
sbb
jl
test
mov
loope
adc
ret
aas
cmp
dec
lods
cmpl
push
mov
mov
aad
repz
mov
xchg
cmp
cwtl
sbb
dec
or
loope
add
pop
lret
xor
pusha
push
pop
adc
dec
xor
roll
adc
add
movsl
mov
iret
inc
mov
mov
inc
push
inc
push
roll
mov
push
or
pop
mov
adc
and
addr16
lods
lods
jmp
cmp
vpackssdw
xor
mov
or
bound
push
fwait
cmp
dec
jg
ret
dec
dec
push
or
add
pop
cmp
psubsw
pop
bound
sbb
fcomps
mov
aad
lds
or
and
gs
fcoms
adc
adc
xor
insl
push
mov
mov
mov
movsl
sarl
les
push
fdivs
movsb
mov
pop
aas
add
mov
or
popa
pop
mov
shrl
xchg
sbb
cmc
sub
jmp
daa
jnp
xor
or
lods
lods
mov
shlb
lods
imul
xor
lods
in
or
sub
leave
xor
imul
or
adc
dec
int
xor
xor
lods
cmp
mov
and
pusha
mov
movsl
int
inc
inc
loop
lds
adc
or
mov
addl
test
mov
flds
push
xchg
xchg
mov
add
mov
push
rorl
mov
or
stos
mov
pop
jnp
add
dec
mov
loop
sbb
add
test
jg
sub
fstps
lahf
pusha
insl
insl
push
and
and
rolb
insl
inc
adc
fucomp
test
addr16
fcoms
sub
shll
dec
push
mov
push
cmp
test
push
mov
sub
lret
jmp
jge
push
and
aad
jne
sbb
inc
movsb
popa
sub
aaa
sub
popa
pop
adc
inc
mov
sub
imul
andb
mov
inc
xchg
cmp
cmp
push
outsl
inc
lods
sub
pop
cmp
cmp
push
sub
xor
xor
mov
or
sub
lds
pop
jns
xorb
and
and
in
addb
jmp
sbb
and
sbb
inc
mov
and
mov
cmpsb
scas
sub
bound
mov
ret
out
das
inc
xchg
push
sarl
xchg
or
pusha
mov
fwait
aas
mov
adc
xor
pop
adc
cmp
mov
sub
cltd
or
test
sbb
and
sbb
mov
jnp
and
sub
testl
add
dec
pop
mov
sub
mov
pop
push
cmp
inc
loop
cmp
fdivrs
scas
sub
pop
pop
lods
imul
mov
xlat
movsl
xor
sub
dec
sub
lds
icebp
jne
and
inc
jnp
mov
test
or
mov
xchg
push
cmp
pop
imul
add
and
mov
iret
mov
push
xlat
push
mov
sub
lds
mov
sub
and
pop
inc
or
test
inc
adc
out
push
push
lea
sub
jge
and
outsl
xor
mov
aas
jbe
orl
lea
xchg
movsl
add
stos
push
bound
mov
mov
or
imul
sub
shl
pop
mov
les
cmpsl
sbb
loope
std
push
aam
or
mov
xchg
cmpsl
sub
or
je
sbb
sub
push
jg
pop
test
mov
and
pop
or
cmp
fwait
pop
orb
mov
adc
lds
outsl
arpl
inc
mov
inc
mov
aam
test
mov
and
jnp
push
addb
insl
push
lods
lods
mov
jne
xchg
push
in
or
test
stos
push
mov
sub
adc
movsb
or
sub
jno
pop
push
stos
jge
ret
push
hlt
push
shll
scas
and
test
dec
cmpsl
mov
mov
mov
and
nop
mov
xchg
mov
adc
adc
jecxz
jmp
bound
fstl
les
inc
dec
add
mov
adc
mov
movsl
sub
gs
and
jnp
and
add
pop
cmp
push
jns
mov
or
mov
sub
jecxz
iret
shrl
sti
mov
jbe
cmp
and
std
outsb
mov
or
arpl
jae
sub
in
div
dec
pop
add
or
dec
xchg
mov
jmp
sti
cmp
mov
pop
mov
or
jne
pop
ja
jbe
jne
outsl
sbb
jg
ja
adc
sub
jl
mov
pop
xor
mov
cmp
cmpsl
movsl
cmp
leave
shr
pop
inc
ja
inc
jmp
sub
pop
mov
mov
inc
sbb
inc
sbb
ja
test
testb
pop
sub
add
inc
lahf
adc
xchg
icebp
push
sbb
mov
fnsave
inc
mov
xor
sarl
or
mov
jbe
out
mov
adc
sub
add
scas
inc
jne
lahf
int
or
inc
sbb
sbb
fwait
inc
fstps
xor
notb
or
js
adc
fnsave
shll
lods
push
inc
or
xchg
push
out
mov
add
dec
pop
out
nopl
mov
xor
pop
adc
in
pop
xor
popa
arpl
dec
adc
lods
mov
adc
xlat
and
mov
or
sbb
sti
mov
add
adc
in
cmp
or
test
sbb
out
cmp
arpl
popa
sub
jb
jo
add
cmp
adc
cmp
sbb
ret
scas
adc
and
cs
dec
lea
aaa
jo
popa
dec
mov
inc
popf
jne
jbe
cmp
addr16
jnp
arpl
mov
adc
out
fs
mov
hlt
xchg
pop
and
iret
mov
iret
or
icebp
shll
imul
jge
jo
sti
or
inc
dec
sub
daa
inc
movsb
mov
pop
xorb
and
push
push
mov
shrl
scas
adc
add
fadds
popa
lahf
cmp
jecxz
repz
stos
pop
adc
repz
fucomp
andl
imul
cmp
jge
stos
mov
adc
fsubrl
mov
xchg
fstpt
sti
decl
push
sbb
cmp
sarl
push
orb
mov
mov
add
lahf
and
fadds
imul
std
fistl
divl
scas
xchg
repnz
in
xchg
add
sub
dec
mov
test
fwait
push
lods
xchg
orb
fwait
dec
or
mov
xor
test
test
scas
aaa
xor
ret
fwait
pop
mov
jne
fsubrl
js
fnstcw
add
loope
and
fadds
aaa
test
add
cltd
and
and
ljmp
loopne
imul
rcr
adc
enter
xchg
jne
xor
jo
adc
xchg
jle
cmpsb
lock
test
movsb
mov
ret
mov
and
jmp
call
and
in
and
stos
lock
scas
loopne
cmpsb
add
mov
fisttpl
clc
jmp
sbb
and
pusha
outsl
jmp
sbb
clc
pop
out
add
lret
aaa
inc
mov
lock
in
add
add
inc
push
or
pusha
and
inc
dec
pop
or
notb
addr16
fildl
loop
jb
and
pop
add
pushl
addr16
sbb
pusha
inc
subl
sbb
je
jae
loope
xchg
mov
adc
and
js
ljmp
xchg
add
add
mov
add
movsb
inc
jmp
pop
sub
push
push
and
test
push
ss
adc
sarl
pop
jnp
lea
cltd
add
mov
in
je
cli
jecxz
rol
lcall
les
repz
inc
pop
mov
mov
mov
hlt
jne
mov
mov
mov
imul
clc
mov
lods
pop
icebp
test
pop
mov
int3
lret
xchg
xor
xor
and
push
cmp
sub
jl
xor
sub
mov
ret
mov
mov
jne
inc
les
mov
scas
dec
pop
add
shll
mov
popa
jo
xchg
sub
xchg
arpl
fsubrs
hlt
mov
pop
mov
push
mov
xor
dec
fisttpl
es
clc
sub
jmp
sbb
push
mov
fsubl
jbe
push
data16
lcall
idivb
ljmp
outsb
jl
add
xchg
sarl
mov
into
mov
sbb
inc
leave
push
jbe
push
fmull
xchg
adc
push
sbb
xor
pop
pop
pop
or
pop
mov
inc
and
push
lea
popa
dec
test
lea
data16
sahf
mov
outsl
pop
mov
mov
lahf
sub
adc
mov
xchg
pop
mov
add
clc
cmc
jp
jnp
testb
lock
xchg
idivb
andl
jmp
aam
add
dec
rorl
or
cmp
mov
popf
add
cmpsl
ljmp
cmp
add
adcb
lock
cmp
lcall
or
dec
cmp
and
cmp
or
dec
mov
cwtl
adc
test
pop
adc
jmp
jne
movsl
push
into
rclb
jmp
sbb
inc
add
cmc
sbb
inc
dec
cmp
jmp
push
out
and
into
ret
sbb
jle
in
fcompl
mov
and
mov
je
xor
sarl
inc
sarl
jno
jle
or
cmpsb
popa
repz
push
lock
xor
or
inc
leave
mov
mov
sbb
scas
xor
dec
out
mov
push
push
subl
sub
mov
lods
pusha
test
fcmovu
mov
pop
faddl
test
lods
fisubs
jo
mov
cmp
inc
cmp
je
shl
subb
xchg
and
lret
xchg
jg
js
sbb
add
ja
stos
andb
push
xor
sahf
mov
scas
jle
arpl
test
les
push
fstp
insb
ljmp
mov
out
sub
push
cmp
xchg
push
out
enter
lahf
sti
adc
pop
push
xor
inc
sti
bnd
jl
or
dec
lds
cmp
jp
cmc
mov
push
sub
mov
dec
lods
push
sub
sub
mov
sbb
imul
clc
icebp
sbb
lret
mov
js
add
mov
push
test
adc
pushf
cmp
mov
mov
fwait
ss
mov
je
fucomi
mov
jns
jo
and
sahf
push
adcl
lock
outsb
sbb
rol
lods
push
mov
div
mov
je
loopne
sar
rolb
cmp
adc
push
lahf
ffreep
adc
or
add
insb
sub
mov
imul
pop
pop
adc
inc
mov
fldcw
xchg
cmp
adc
loope
nop
lcall
insl
aas
ss
sbb
aam
dec
push
add
mov
mov
in
je
cld
jecxz
aam
rolb
push
ss
mov
je
dec
gs
pop
or
sub
jne
icebp
dec
or
shll
nop
or
lock
push
movsb
sub
pop
call
shlb
jecxz
jecxz
std
fs
adc
imul
mov
cmp
jbe
fdivp
fmul
pop
add
pop
aas
mov
or
test
pop
inc
fadd
pop
and
push
cld
inc
push
mov
mov
fisttps
stc
sub
aas
rolb
inc
imul
hlt
dec
mov
mov
jb
or
inc
push
cwtl
je
insb
jnp
ds
sbb
sub
dec
mov
rolb
cwtl
repz
push
inc
addb
mov
xchg
ja
sbb
pop
xchg
orb
gs
jns
mov
add
mov
fnsetpm(287
in
or
push
or
sub
sub
lahf
imul
icebp
and
mov
and
sub
clc
int
jno
push
or
pop
test
cwtl
push
je
sti
inc
xor
ret
jo
push
outsb
inc
or
mov
sub
add
add
pop
cld
clc
cmc
xchg
adc
lcall
addl
sub
sub
rorl
orb
jbe
pop
stos
xlat
and
and
stos
or
out
inc
cwtl
testb
cmp
push
pushf
xor
cmp
sub
test
test
into
jle
mov
xor
fldl
and
inc
js
lods
cmp
dec
cmpsb
aas
inc
cmp
and
sub
dec
rclb
push
jns
mull
pop
les
mov
ss
xor
stc
xor
sbbl
fdiv
loopne
ja
pusha
or
lahf
fwait
or
push
lock
js
clc
dec
movsl
fwait
push
cmpsb
or
loope
loopne
fistl
xchg
outsb
ret
adc
fistps
cmp
aaa
lret
mov
cli
push
movsl
add
dec
mov
xchg
xorl
push
cmp
and
nop
movsb
xor
and
lock
lds
pop
mov
out
fsts
mov
jge
clc
push
outsb
lea
scas
fdivp
sbb
out
sti
lods
into
jmp
push
xor
lret
or
aas
adc
lock
xchg
xchg
push
jne
pop
lcall
and
icebp
pop
rcrl
pop
cmp
xor
xchg
inc
add
push
dec
shl
push
addr16
mov
xchg
nop
push
lods
test
mov
add
pop
leave
sbbl
and
mov
loopne
js
add
inc
mov
xchg
adc
movsbl
fwait
adc
cmpsb
inc
mov
cmp
pop
push
aam
cmc
add
mov
pusha
in
add
xchg
sbb
or
and
out
push
jo
xchg
mov
gs
popa
adc
jl
dec
lods
mov
mov
xchg
jo
inc
rcr
cli
bound
cmpsb
cmpsb
mov
mov
cs
ja
add
call
push
add
jle
nop
push
or
add
and
push
cmp
mov
or
sbb
js
xchg
fscale
pop
hlt
rorb
mov
movsb
xlat
mov
int
jle
test
out
inc
mov
jne
dec
test
sar
negl
pop
ficomps
and
xchg
push
add
sti
hlt
das
xor
insb
repnz
out
sbb
fwait
icebp
sahf
add
es
and
into
or
inc
call
into
fisttpl
add
ret
add
mov
ss
inc
arpl
xchg
orb
push
ror
adc
aam
shll
lods
cmp
xlat
ja
mull
lea
fnstenv
jbe
inc
jecxz
mov
and
popf
mov
fdivrl
pop
mov
mov
and
inc
test
outsb
idivb
cwtl
push
out
lods
dec
imul
mov
xor
sub
push
test
aad
cmp
icebp
adcl
lahf
lahf
xor
or
jae
loop
daa
mov
push
push
push
push
push
add
push
ja
pop
clc
push
popa
sub
cmp
mov
jo
pop
mov
sub
or
les
sub
je
sub
aam
jnp
addl
lock
sub
movsb
sbb
stos
push
repz
nop
mov
push
cmp
cmpsl
stos
and
out
out
mov
adc
xchg
jge
add
test
jns
popf
fyl2x
fadd
fnstcw
push
xchg
cs
mov
xchg
mov
add
aam
add
inc
jo
dec
mov
xchg
jmp
xor
mov
and
ss
xchg
loopne
leave
lret
cmp
insb
mov
pop
inc
aad
pop
xchg
mov
paddq
xlat
pop
rolb
iret
fsubrs
scas
aad
iret
lcall
add
loopne
ret
push
stc
into
dec
aam
nop
jae
mov
sub
pushf
mov
jne
ss
or
xchg
and
jle
fsub
test
cmp
les
pop
lock
sbb
das
cltd
mov
sti
sbb
js
push
or
cs
out
pusha
fdivrs
testb
sbb
or
xlat
xor
les
stos
loopne
testl
inc
test
fcmove
xchg
ljmp
loopne,pn
mov
movsb
add
lahf
add
cld
sub
jne
adc
inc
stos
andl
add
mov
and
out
imul
push
pop
inc
cmp
andb
out
xchg
call
mov
lock
adc
cmp
jp
push
lret
call
xor
xabort
fsubl
add
in
dec
je
call
xchg
in
jne
pop
loope
dec
test
sbb
adc
out
xchg
aaa
flds
cmpsl
sbb
cmpsl
es
mov
xchg
ret
fiadds
mov
dec
xlat
add
jmp
inc
aas
mov
pushf
aam
fcmovu
pop
in
call
stos
inc
mov
mov
adc
popf
push
dec
movsl
bound
bound
xor
ficompl
mov
sahf
jo
pusha
outsl
adc
repz
fucompp
ret
mov
hlt
nop
or
daa
pop
ja
enter
movsb
pop
jp
or
jmp
add
mov
cmpsl
inc
jg
dec
mov
dec
movsb
repnz
lds
dec
push
mov
lods
adc
into
sbb
pop
xchg
inc
aad
lods
add
call
push
or
dec
shll
or
inc
and
in
ss
inc
inc
sub
xchg
or
test
xor
cmp
lods
xchg
pop
lock
cwtl
xchg
out
mov
gs
mov
add
ret
inc
addl
loop
add
ds
xor
push
jno
sbb
push
sub
or
je
or
fmull
push
in
mov
ret
jnp
mov
rcrb
cmp
cld
mov
cmpl
mov
mov
pop
nop
pop
in
movb
fwait
pop
xchg
andl
pop
push
hlt
cmpl
out
call
test
and
dec
iret
aad
nop
fwait
jp
push
mov
add
andps
pop
dec
rcl
push
xchg
loopne
inc
jbe
sub
xlat
adc
mov
cs
mov
popa
pop
js
xlat
adc
dec
xor
dec
xor
cli
orb
xor
js
fwait
bswap
fsubp
inc
mov
mov
aad
hlt
ret
add
shlb
jne
in
daa
jecxz
rorl
pop
outsl
jae
add
xor
stos
in
hlt
jno
jl
fdivl
push
add
sbb
mov
daa
sbb
cld
lcall
loop
push
lahf
hlt
bound
aam
cmc
cmp
push
ljmp
repz
mov
sahf
test
cmp
push
ficoml
sbb
adcl
adc
jbe
or
dec
lahf
sbb
mov
popf
mov
cmovne
fidivl
adc
loop
into
and
sub
shrb
push
add
fmul
sbb
scas
jl
sub
das
ret
lds
mov
hlt
mov
xchg
fsubrp
jge
hlt
cwtl
push
push
dec
inc
test
fwait
xchg
push
fdivs
rcrb
inc
rcl
lock
or
je
test
push
lds
jmp
pop
push
iret
clc
in
pop
adc
scas
icebp
lret
or
cmp
mov
jge
pushf
pop
pop
mov
and
in
aam
movsb
lahf
mov
jmp
inc
stos
add
push
shll
inc
or
lret
cmp
sbb
pop
shll
cmp
pusha
outsb
push
cmpl
adcl
insl
pushf
ds
pop
add
es
mov
adc
mov
xor
cmc
pop
imul
pop
popl
fnstenv
lods
jno
imul
cmc
shlb
mov
popf
push
into
mov
cmp
mov
mov
jmp
fsubs
pop
out
cmp
bound
xor
xchg
pop
test
jmp
push
cld
xor
repz
push
pop
and
fisubs
sbb
out
or
lods
jmp
jge
push
dec
mov
mov
mov
aam
cltd
and
add
les
pop
aam
hlt
push
sti
cli
push
xchg
inc
mov
aam
xlat
ret
rcll
mov
cmp
mov
test
scas
add
stos
nop
sub
dec
fisubs
cli
in
mov
push
sub
outsb
pop
push
je
mov
mov
jae
pushf
xchg
lret
pop
adcb
sarl
dec
sub
adc
loop
add
jecxz
mov
jno
test
mov
pop
and
into
ret
out
lock
scas
lods
lods
orl
or
mov
jae
jecxz
call
mov
icebp
jae
push
fs
rcrl
jge
rcrb
fwait
mov
rorb
add
cwtl
inc
adc
inc
adc
add
mov
sbbl
leave
and
sbb
outsl
pop
mov
movsb
loop
cmc
inc
mov
in
popf
dec
mov
push
lahf
pushf
repnz
mov
push
cmp
aaa
mov
out
xchg
dec
test
pop
ss
icebp
xor
in
dec
fs
fcmovb
das
pop
gs
and
push
sub
push
inc
sbb
lods
je
inc
and
ljmp
inc
pop
adc
mov
jne
cmc
call
scas
jbe
arpl
fwait
cli
fisubrs
mov
jecxz
mov
js
push
mov
jge
or
bound
push
div
dec
jg
xor
jns
mov
add
mov
mov
imul
mov
mov
xor
neg
xor
std
int3
pop
dec
pop
in
popa
mov
mov
pop
mov
mov
or
cmpsl
xor
xor
add
or
mov
push
out
sbb
inc
cwtl
mov
rclb
lret
inc
adc
sahf
jbe
sbbb
adc
gs
lret
xchg
mov
scas
push
hlt
ljmp
out
ret
xor
cwtl
xor
and
paddusb
ficompl
popa
xchg
push
mov
mov
lods
and
jg
aam
mov
dec
ja
mov
mov
ljmp
xchg
mov
les
push
mov
dec
mov
mov
pop
lods
lret
iret
pop
aad
mov
pop
icebp
xor
push
jl
loope
scas
call
push
hlt
jo
jbe
lahf
mov
loopne
lcall
jmp
iret
mov
dec
out
enter
mov
jmp
inc
xchg
inc
stos
mov
pop
fmuls
clc
les
inc
jae
roll
mov
stos
cmp
jo
hlt
xchg
push
fbstp
fdivp
lcall
add
cmp
sarl
inc
dec
push
ds
mov
sub
mov
mov
dec
xlat
daa
jnp
cmpsl
outsb
orl
roll
mov
ds
sub
je
jnp
cmp
dec
xor
mov
loopne
and
js
addr16
push
cli
jecxz
dec
test
jns
sti
call
aad
ja
cs
insl
scas
dec
adc
and
sbb
cmc
adc
mov
push
xlat
cmp
ja
cmc
popf
or
insl
push
scas
or
jb
mov
mov
lock
inc
fstpt
icebp
repz
xor
push
stos
les
xor
push
add
stos
roll
jb
adc
dec
push
test
clc
mov
mov
ret
add
pop
push
in
scas
cmp
hlt
mov
cwtl
fsts
push
ficomps
call
daa
in
mov
xchg
inc
ret
jns
inc
add
mov
mov
into
or
pushl
loopne
push
pop
daa
or
cmpl
negb
mov
mov
mov
pop
mov
imul
stc
push
sub
cmpsb
sbb
mov
icebp
push
jl
je
cmpsl
mov
call
inc
movsl
xor
jb
inc
xor
test
lock
movsl
mov
ss
cmovae
sti
inc
repz
add
cld
ljmp
ja
fildll
mov
dec
sub
std
pop
push
sbb
cmp
testb
push
push
add
aam
stos
test
shl
mov
mov
cmp
xlat
call
lods
roll
sbb
jno
pop
ss
inc
sbb
mov
cmp
mov
push
jae
inc
arpl
xchg
test
lret
dec
lcall
or
adc
pop
jecxz
sub
mov
dec
lods
sub
lret
sub
mov
fcmovnu
mov
mov
add
cmp
arpl
jnp
xor
test
push
imul
cmp
pushf
pop
mov
ret
lock
pop
test
sahf
sub
notb
jge
mov
cmpsb
cmp
nop
ffreep
pop
cmp
lods
out
subl
add
mov
push
jge
aam
jmp
cwtl
push
adc
adc
add
decb
pop
inc
loop
or
lea
enter
add
ret
test
jge
sub
into
rol
xchg
sub
lods
jo
int3
xchg
sub
mov
cld
push
stc
dec
push
push
push
sub
insb
xor
les
adc
mov
sbb
xchg
adc
pop
pop
test
pop
mov
fldcw
and
cmc
jo
xchg
pusha
and
push
mov
xor
je
mov
cli
pop
pop
fisttpll
sub
pop
or
xchg
jnp
ret
xor
cld
jp
frstor
ficompl
mov
pop
cmpl
mov
cld
pop
sub
mov
test
jge
xor
mov
sbb
push
shrb
aam
das
add
sbb
in
add
xchg
ret
adc
and
cmp
mov
mov
les
inc
jo,pn
mov
inc
jae
mov
mov
mov
push
mov
dec
ss
jmp
jg
in
mov
xorl
add
movsb
cld
btr
shl
jecxz
xor
stos
mov
mov
hlt
ret
arpl
xchg
or
xchg
push
mov
stos
adc
icebp
btl
xchg
mov
xchg
xchg
mov
mov
add
pop
pop
dec
decb
dec
push
mov
fdivl
aaa
pop
xor
loope
xor
add
push
xor
add
pop
xlat
dec
add
nop
pop
mov
inc
cmp
dec
cltd
adcb
icebp
ljmp
cltd
xchg
inc
push
xchg
dec
popf
lea
dec
pusha
out
sub
xchg
lock
and
popa
and
push
cmp
dec
xor
sbb
into
push
popa
xchg
lock
outsb
notl
adc
xor
pop
in
xchg
setne
test
sbb
lret
add
test
push
mov
addb
nop
xchg
and
orb
xchg
hlt
add
sbb
jg
and
xchg
jl
xor
add
shl
add
lahf
inc
fmulp
push
popa
rolb
jo
dec
outsb
add
shlb
and
leave
add
xor
xchg
and
lock
jmp
incl
push
call
rolb
mov
dec
imul
test
orl
divl
inc
scas
testl
mov
mov
adc
dec
flds
pop
punpcklbw
dec
push
jl
js
movsb
adc
mov
jmp
loope
xlat
test
ret
adc
push
icebp
sub
xor
cmp
out
xchg
pop
sti
xor
pop
lea
mov
jmp
adc
pavgb
loop
xchg
mov
and
fdivrs
stc
xchg
inc
imul
arpl
adc
js
ret
outsl
xor
aam
xchg
push
roll
inc
jecxz
setl
mov
push
fistpll
mov
int
jp
ss
push
iret
pushfw
addl
sti
cwtl
mov
rcr
mov
loop
mov
pop
lds
mov
out
inc
push
testl
ja
adc
cmp
mov
lock
cmp
sub
in
lods
and
pop
popf
add
xor
inc
and
xadd
xor
pop
or
pop
mov
dec
xor
mov
shll
push
fcoml
ficoml
popa
rorb
adc
pop
outsb
pop
test
mov
xlat
cltd
sti
cmp
sub
dec
adc
dec
rorl
jns
and
xor
sbb
test
out
jp
out
mov
dec
mov
cmpsb
mov
xchg
sahf
js
xor
jp
inc
loope
mov
push
pop
jge
imul
hlt
push
mov
fdivp
or
or
jbe
cmp
aam
xchg
ljmp
add
push
mulb
dec
sub
insb
ds
aad
cwtl
jle
ljmp
rcrb
lea
ret
add
shl
inc
xchg
addr16
pop
dec
ja
push
out
cmp
scas
add
ss
jp
jecxz
js
les
in
orb
arpl
or
jo
cmp
popa
sub
loope
xchg
add
push
lock
and
xchg
dec
mov
das
dec
dec
adc
inc
inc
dec
xchg
xchg
mov
je
shrl
xor
adc
adc
jp
orl
push
add
rol
in
movsb
xchg
sub
test
cmp
clc
dec
pop
std
dec
je
xchg
mov
xchg
jp
fidivrl
push
cmovs
test
sbb
mov
test
mov
push
adc
cmpb
push
cmp
or
or
add
mov
mov
roll
fnstenv
xor
push
sub
pushf
aam
divl
in
mov
pop
in
cmp
arpl
jge
push
fwait
cltd
gs
pop
add
mov
mov
jns
cmp
xchg
or
shll
dec
ljmp
data16
outsl
arpl
jle
sbb
pusha
mov
sub
pop
add
ret
sahf
adc
arpl
cmp
loopne
mov
daa
sahf
cmpb
xlat
loop
scas
mov
inc
push
dec
xchg
jnp
movsl
xchg
repnz
cmp
mov
movsl
sarb
sub
push
mov
int
js
dec
jno
popf
div
rcl
faddp
js
jbe
js
paddq
cmp
inc
cmp
add
and
mov
int3
mov
es
popf
lret
and
mov
insb
lahf
out
pushf
push
mov
data16
mov
jnp
js
cmp
mov
popf
cmp
inc
jl
xor
int3
sbb
ds
push
mov
outsb
pop
xor
pop
sub
or
idivb
pop
and
pop
xlat
cmp
add
inc
mov
lahf
adc
mov
pop
mov
dec
sbbb
shlb
push
dec
mov
sbb
js
cmc
aaa
les
sbb
cmp
inc
fmull
jle
dec
xchg
popf
out
jmp
mull
and
pop
mov
mov
jle
and
jmp
add
xor
loop
mov
pop
ja
sbb
sbb
sbb
roll
xchg
je
aas
inc
mov
or
mov
inc
xchg
outsb
nop
inc
fdivs
jo
dec
inc
xchg
jge
add
xor
xlat
out
push
pop
push
faddl
mov
fdivl
sub
jo
inc
mov
jecxz
pushf
adc
xchg
int3
das
cmp
pop
and
sbb
insl
xor
sub
punpcklbw
jne
loope
movd
aaa
pop
popa
les
cmpsb
adc
cmpsb
ja
test
pop
add
jno
cwtl
xor
js
and
lock
insl
push
test
test
and
fs
aad
push
lret
subl
xor
inc
pusha
cmp
clc
icebp
loop
xchg
xchg
xor
aas
mov
adc
jge
sahf
je
pop
mov
or
xlat
add
dec
mov
inc
push
and
clc
xor
cmp
call
lret
mov
insb
inc
dec
cmp
mov
and
push
pop
je
test
arpl
pop
cwtl
mov
mov
inc
fs
sbb
add
sbb
movhps
mov
lock
push
pop
dec
mov
negl
idiv
inc
adc
aam
sub
enter
adc
or
repnz
mov
jbe
hlt
aam
sub
cmp
scas
jnp
mov
emms
bound
pop
push
pop
popf
or
icebp
lock
cmp
or
fiadds
pop
lret
xor
mov
fs
rcrl
loop
mov
scas
sar
ret
xchg
daa
fs
aad
lock
pop
sbb
mov
jle
and
sub
inc
mov
mov
lds
adc
pop
sub
mov
pop
xor
inc
sti
inc
xor
insl
mov
pop
out
dec
mov
stos
cmp
sarl
les
ret
push
cmp
xchg
fdivl
jnp
stc
pusha
mov
jb
xchg
cmpsl
out
inc
pop
popf
ret
test
jbe
out
imul
sub
decb
push
xorl
aad
pop
cmp
pusha
les
clc
cld
jo
cld
jbe
mov
mov
orl
shl
pop
jo
pop
sarb
aam
push
insb
pop
pop
add
shll
stos
pop
imul
out
mov
fs
mov
fs
push
mov
iret
cmp
or
jmp
fwait
xor
push
xchg
clc
push
mov
pop
stos
shrl
dec
xor
sub
sbb
int3
sahf
movsb
sbb
icebp
inc
roll
test
push
xor
inc
jge
and
adc
ljmp
gs
adc
sbb
adc
jp
fwait
in
lods
cmpb
mov
lret
mov
addr16
jge
dec
adc
and
movsl
sti
hlt
iret
loope
outsl
jb,pn
push
push
pop
mov
ljmp
aad
insb
out
mov
imul
push
push
jp
add
xchg
adc
cmp
mov
shrb
jp
or
imul
jns
add
shl
mov
js
test
jg
je
jp
pop
or
loop
and
loope
mov
or
into
mov
clc
pop
mov
ds
cmp
cltd
add
xor
mov
mov
mov
test
movsl
icebp
cld
int
repnz
icebp
xchg
xor
add
inc
lret
sub
scas
pop
mov
ret
add
ret
adc
aad
pop
cmp
xor
inc
imul
mov
enter
adcb
pop
subl
add
fmull
jecxz
scas
notl
roll
stos
add
jg
in
icebp
add
mov
jl
sti
jno
clc
loopne
nop
call
add
data16
lods
andb
xlat
xor
pop
pop
adcl
lret
and
mov
adc
outsb
dec
mov
lock
xchg
mov
les
xchg
in
mov
pop
sub
sahf
inc
cmp
call
add
pop
push
mov
sbbl
mov
popa
imul
imul
jp
dec
js
or
pop
les
jae
and
popf
pinsrw
lret
jecxz
fiadds
addr16
pusha
cmp
mov
jecxz,pt
mov
dec
cwtl
std
adc
lret
xor
cmp
pop
ret
sti
inc
popf
jle,pn
dec
into
add
push
jmp
insl
xorl
dec
adc
sbb
lock
push
xor
adc
adc
loope
mov
inc
pop
aaa
ret
jbe
out
jb
inc
and
pop
jg
repnz
js
or
fadds
mov
mov
cmpsb
or
test
mov
daa
mov
jbe
pop
inc
in
pusha
mov
push
xorb
scas
psraw
mov
mov
popa
or
ljmp
enter
popf
xor
mov
mov
jecxz
sbbl
mov
and
xlat
loope
stc
dec
aad
xchg
or
cmp
es
sub
mov
push
pop
mov
into
pop
jecxz
outsb
iret
iret
pop
lods
es
loopne
add
mov
mov
sahf
pop
std
mov
pusha
iret
movsb
idivl
divb
lods
add
mov
aaa
and
sub
dec
dec
popf
inc
xchg
inc
jl
lock
or
jg
pop
int3
pop
jbe
mov
dec
xor
lods
lea
pop
adc
inc
orl
xchg
dec
ljmp
ret
mov
cmp
out
adc
push
mov
jno
and
lret
ds
pop
mov
inc
adc
je
mov
cmp
pusha
cmp
and
adc
push
loopne
mov
mov
xlat
movsb
jle
iret
popl
mov
mov
pop
insb
mov
inc
aaa
insl
or
loop
jno
in
sub
lock
stos
popa
roll
cli
sar
fnstsw
xchg
mov
adc
fistpl
push
call
adc
popf
das
rorb
xchg
jp
jge
outsb
or
fisttpll
xor
stos
mov
scas
jno
cli
xchg
mov
push
xchg
jp
out
mov
cs
fimuls
loopne
and
imul
fucom
cmp
fsubrs
xlat
int3
aaa
insl
cmpsl
xchg
jmp
fxch
out
les
cmpb
pop
data16
ljmp
sbb
xchg
jp
pop
scas
imull
mov
aaa
mov
inc
ret
inc
sub
data16
mov
jo
jl
pop
fisttps
xlat
hlt
inc
push
popa
scas
cmpsb
push
repz
push
call
mov
in
dec
outsb
sub
sar
les
dec
test
xor
jns
jae
sub
inc
rol
sub
and
push
sbb
pop
xor
or
into
jmp
or
ljmp
pushf
rcrb
cmp
xor
add
ja
or
xchg
insb
insl
mov
fisubs
sub
xor
aas
mov
test
shrb
dec
push
test
pop
popa
and
mov
popa
adc
mov
movsb
fistpll
xlat
das
das
cs
push
adc
and
aas
or
aaa
int
jp
jnp,pn
push
sub
xor
jnp
rorl
pop
push
movups
adc
ret
xchg
imul
inc
sub
mov
mov
pop
cmp
lahf
sub
fisubrs
repz
xchg
xchg
mov
popf
int
jecxz
jns
sub
sbb
arpl
mov
xor
or
out
jbe
mov
push
add
inc
pop
ds
pop
adc
fimuls
ja
push
inc
push
pop
mov
xlat
subl
cmpsl
mov
mov
out
imul
inc
jmp
xchg
push
rol
xlat
jge
jns
aas
sti
sub
out
insl
mov
ret
push
fisttpl
inc
push
data16
and
and
gs
jne
cmp
or
add
cmp
lods
cs
mov
arpl
mov
push
jno
push
mov
mov
mov
mov
cmp
xchg
adc
and
movlps
push
jge
push
fsubrl
and
jb
or
cmp
mov
aaa
mov
and
aaa
fisttps
xchg
pop
mov
das
js
adc
cltd
and
adc
xor
or
test
mov
mov
popf
imull
jmp
mov
daa
das
aaa
daa
gs
sbb
mov
or
jg
insl
inc
daa
xchg
je
xchg
sbb
loopne
cmpl
sti
mov
and
cmp
cmpsb
pop
stos
jmp
dec
push
mov
or
in
shll
jne
lcall
and
xchg
lahf
fucomip
jae
push
divl
xor
andb
ja
int3
dec
and
inc
mov
and
sbb
dec
mov
pop
jecxz
sub
loope
add
sub
mov
mov
or
sbb
imul
test
fucomi
mov
pop
mov
lahf
pop
jmp
insl
xor
jnp
jns
leave
pop
jbe
cmp
aas
cmp
loop
sub
movsl
loop
mov
push
cmp
in
pop
xchg
sub
cmp
popa
jmp
xor
lahf
out
xor
push
xchg
pop
and
fnstsw
xlat
push
imul
jnp
dec
push
lods
popa
pop
mov
daa
pop
adc
outsb
fcoms
mov
adc
jns
lahf
loopne
xlat
or
divl
in
xor
cmp
mov
mov
jne
iret
int3
or
fildll
jp
dec
xchg
cmp
adc
sub
fsubrl
and
add
jbe
mov
insl
fdivs
das
ljmp
push
jl
dec
rdpmc
jo
sbb
mov
arpl
pop
push
div
jb
inc
xorps
xor
outsb
mov
xchg
mov
aas
add
ret
jge
pop
cmp
pop
scas
and
cmp
xor
jno
ds
xor
divl
push
or
or
pop
jg
adc
add
in
pop
inc
scas
cmpb
mulb
fwait
subl
jg
out
data16
fmul
push
sub
mov
pop
dec
add
and
dec
aam
andl
and
or
mov
or
mov
stc
or
data16
mov
cmove
jecxz
inc
cmp
cmp
ret
out
xor
sbb
lahf
mov
xor
xor
fcoml
pop
scas
jmp
jae
scas
jg
and
scas
pop
inc
neg
mov
jecxz
repz
push
xor
rcrl
xor
jnp
mov
repnz
or
push
sbb
xor
xor
cmp
pop
fwait
pop
xorl
imull
xchg
inc
cmp
out
jmp
xor
jmp
fwait
loopne
bswap
or
sbb
inc
int3
pusha
sub
xor
daa
clc
pop
xor
add
adc
sbb
outsl
xor
insl
adc
aaa
inc
xor
mov
data16
pop
ds
dec
iret
insl
enter
out
loop
in
insl
xor
and
cmp
pop
xor
call
pop
pop
push
mov
xchg
mov
mov
push
divl
dec
adcl
pop
dec
sbbb
push
icebp
aaa
aaa
das
jge
cltd
inc
mov
or
jae
adc
fwait
push
push
js
inc
push
xchg
jecxz
jl
cmp
sti
sbb
sub
nop
subl
or
frstor
adc
add
or
sub
adc
mov
xor
lock
jmp
into
loope
lcall
mov
mov
sub
cmpl
or
jno
sbb
mov
jmp
jnp
mov
idiv
dec
dec
in
mov
scas
xor
inc
inc
add
xorb
rclb
or
rcrl
cmpl
add
sbb
jo
dec
int
cs
sub
jle
or
stos
jp
pop
and
pop
jo
xchg
lods
add
add
mov
imul
ds
ret
adc
cmpsb
movsb
jle
push
mov
xchg
insb
movsl
dec
pop
mov
in
movsb
frstor
adc
cmc
cs
xor
fnstsw
shll
cmpsl
aam
jne
push
popa
in
lea
fildll
inc
push
adc
push
sub
int
subb
xor
clc
std
out
sti
jle
sub
sub
xor
adc
outsl
xchg
and
orb
add
pop
add
cmp
adc
sbb
sub
xor
xor
sahf
inc
lods
out
cmp
pop
or
lods
push
dec
popf
sti
dec
mov
push
aas
inc
sbb
sti
sahf
or
mov
ds
aad
adc
fdivs
inc
filds
lock
dec
push
stos
inc
adc
xor
inc
and
out
stos
jl
push
mov
lds
cmp
roll
jmp
or
sbb
out
in
push
mov
add
outsl
dec
adc
sub
sti
or
insl
jmp
mov
xor
das
sub
jne
lods
jmp
mov
sbb
pop
adc
dec
adc
and
ret
lds
addb
cld
movsl
mov
pop
mov
dec
cmp
mov
test
test
xchg
cmp
adc
jle
cmp
push
ljmp
sbb
dec
lret
xor
popf
mov
jmp
nop
sub
pop
imul
sbb
lods
jmp
inc
dec
and
insl
sbb
in
pop
or
xchg
jge
int
add
cmp
jp
jecxz
ret
rcrb
pop
pop
cs
push
icebp
dec
and
rcll
push
dec
push
xlat
jmp
inc
imul
outsb
push
scas
cmp
jae
fcomps
imul
iret
pusha
sub
pop
xchg
xor
sbb
lds
push
test
call
incb
mov
jb
ljmp
orb
loop
sub
inc
add
mov
pop
push
aam
lods
jmp
push
jmp
mov
push
aad
test
or
add
add
cmp
mov
push
sbbb
mov
push
fildll
adc
pop
movsl
sub
jnp
mov
out
out
lock
nop
cmpsl
fstpt
inc
add
jns
aam
data16
inc
cmp
jbe
cmpxchg
lea
outsb
or
enter
or
mov
cwtl
add
add
push
and
cmpsl
out
mov
and
pop
pop
or
das
shll
cmp
mov
ret
imul
out
movsl
inc
add
ja
addr16
inc
adc
lds
jmp
into
adc
adc
imul
sbb
scas
sti
cmp
imul
sub
and
jle
dec
pop
and
insl
lret
pop
pop
cmpsl
sub
stos
xchg
mov
in
sub
fcompl
jecxz
cmp
xchg
jl
mov
lahf
jge
xchg
js
sbb
jl
clc
xor
mov
push
or
lds
repz
lret
rcrl
mov
jl
fdiv
mov
outsl
adc
and
add
aad
aaa
cltd
clc
and
sti
ds
mov
test
sbb
repz
push
nop
jmp
mov
popf
sub
popf
fwait
push
pop
push
mov
gs
push
scas
cltd
cmpsl
dec
test
sub
cmc
mov
add
pop
test
or
loope
or
jae
fildll
cmp
adc
xchg
or
repz
sbb
push
sbb
addl
mov
je
mov
and
mov
ljmp
xor
and
mov
imul
fwait
cmp
test
push
sub
arpl
jae
sbb
inc
jle
pop
sub
and
push
adc
into
dec
enter
lods
sarb
cmpsb
in
mov
sbb
js
mov
aaa
mov
add
adc
das
cmp
cli
sbb
jecxz
inc
loopne
faddl
mov
xchg
popf
lods
push
mov
or
xchg
mov
and
sub
popa
shlb
mov
fstpl
ds
mov
pop
cs
in
or
imul
arpl
xchg
insb
mov
fidivrs
lock
jae
add
into
insb
inc
xchg
dec
cli
stc
and
addps
inc
pop
add
push
push
mov
add
dec
xlat
mov
inc
add
fistpll
jae
sub
pusha
inc
mov
mov
lret
jmp
scas
mov
pop
inc
mov
iret
pavgb
ret
sbb
sub
out
imul
xchg
xchg
jmp
loopne
jbe
fcmovne
adc
adc
xor
and
sbb
xlat
push
and
dec
stc
pop
hlt
ret
and
mov
xor
sbb
push
stc
xlat
arpl
scas
dec
ret
movl
pop
and
out
lds
inc
pop
and
loope
int
dec
fstl
addr16
mov
loope
sub
ja
imul
iret
jle
inc
inc
pop
sbbl
mov
and
push
mov
xchg
pop
add
movsl
fisttpll
cmp
xor
nop
aad
sub
cwtl
xchg
push
adc
lahf
call
dec
jg
stc
push
sbb
and
cmp
sbb
pushf
test
xchg
rep
jne
or
add
mov
xchg
or
arpl
fsubs
dec
mov
test
clc
add
push
push
cmc
lret
add
dec
and
mov
lret
mov
lret
sub
sub
pop
sbb
fimull
sub
cs
add
fdivrs
subl
in
movsl
jmp
jle
cltd
in
clc
mov
push
dec
inc
or
xlat
aas
sub
add
jmp
add
inc
in
adc
mov
inc
sbb
and
test
repnz
and
pop
out
and
sub
test
aaa
inc
mov
adc
xchg
popa
dec
xlat
lcall
mov
leave
cmc
adcl
fnstenv
mov
adc
inc
mov
xchg
adc
mov
arpl
pop
sbb
inc
test
dec
bound
scas
cltd
inc
pusha
lret
pop
cmpsl
in
sub
sub
imul
add
mov
sub
nop
xchg
jmp
add
ret
xor
bound
pushf
cmc
mov
imul
mov
mov
mov
mov
sbb
out
mov
les
or
jl
inc
inc
mov
inc
stos
ret
out
shll
inc
push
xor
outsb
stos
btc
inc
movsb
inc
xchg
stos
inc
movsb
push
fcomps
sub
add
xor
adc
jnp
pop
jmp
mov
mov
push
adc
adc
add
fidivrl
inc
xchg
or
or
imul
sbb
add
movsb
mov
imul
mov
add
cmp
push
push
pop
sahf
xchg
add
xor
in
sub
or
sbb
push
xor
test
int3
lahf
xor
call
popa
mov
dec
mov
mov
xor
stos
cmp
mov
in
cwtl
jb
cmpsl
sub
scas
adc
xchg
or
pop
ret
or
push
lock
mov
jnp
ss
sbb
cmp
mov
icebp
out
push
sbb
or
out
sbb
jl
jno
fiadds
add
pop
sbb
jns
movl
test
or
pop
sbb
movsb
les
cmpsb
pop
mov
pop
xchg
cmpb
and
stos
lods
or
lds
add
xchg
stos
or
xchg
in
out
jecxz
movl
adc
test
and
fcmovnu
mov
and
rcrl
adcb
imul
fstpt
js
sbb
pop
jecxz
aaa
cmpsl
inc
xchg
jbe
aaa
jmp
jp
cmp
push
and
fnstcw
inc
lods
sub
mov
cmpsl
notb
cwtl
dec
outsl
std
dec
push
data16
or
and
dec
mov
lahf
sbb
dec
sarl
push
adc
or
sub
test
and
sub
sub
adc
mov
push
jmp
fmul
xchg
movsl
sub
add
loopne
addr16
adc
shrb
imul
adc
or
sbb
sub
daa
sub
shl
jne
cld
mov
add
mov
popf
inc
add
mov
push
bound
pop
and
push
ret
push
add
arpl
sarb
adc
xchg
xor
adc
sub
cmp
dec
arpl
cmp
mov
push
loope
cmp
loopne
nop
jge
dec
lcall
lock
sub
sti
js
pop
jne
ja
pop
lock
pop
and
sbb
and
mov
and
pusha
pusha
jns
jbe
sub
pusha
cmc
mov
xor
fldt
sub
movsb
or
xchg
daa
adc
popa
js
jo
insl
out
cmp
and
mov
jb
xchg
scas
pop
mov
ret
xchg
or
sub
rol
cmc
or
mov
popf
and
jge
mov
repz
addr16
mov
mulb
ret
stos
pop
lret
mov
test
add
xor
mov
repz
mov
ror
sbb
in
mulb
jmp
int
adc
bound
dec
cmp
fwait
sub
mov
in
loopne
and
cmpsl
ja
dec
test
lahf
dec
jmp
mov
and
fwait
pop
and
jnp
push
and
sbb
aaa
mov
ret
xor
or
or
fwait
add
jmp
test
or
sbb
scas
pop
imul
aaa
sub
inc
loope
inc
or
and
imul
and
xchg
and
xlat
test
daa
gs
xor
divl
add
adc
adc
and
push
sub
mov
jle
and
add
xchg
ds
das
dec
adc
jae
xchg
sub
sbb
and
add
ficoml
inc
xor
outsb
inc
sub
sbb
sub
xorb
clc
fmuls
ja
pop
jnp
mov
and
push
pop
xchg
mov
mov
and
fadds
mov
cmp
mov
imul
jmp
sub
sub
je
lahf
mov
mov
pop
aaa
icebp
pop
jo
or
add
adc
sbb
mov
ja
pop
movsb
pmulhw
push
xor
sub
mov
loope
dec
pop
sbb
mov
xchg
cs
push
or
rcrb
or
frstor
outsl
mov
jp
and
inc
daa
aaa
pop
enter
in
lds
lods
or
pop
and
sbb
loopne
inc
in
or
push
ljmp
jnp
sub
stos
repz
scas
sub
mov
cmc
popf
lahf
pusha
shrb
dec
in
movsb
sbb
add
mov
scas
pop
xchg
lock
mov
mov
mov
sub
mov
pushf
inc
ljmp
outsb
aaa
push
mov
xchg
mov
pop
lock
loopne
jne
rcll
mov
or
jp
or
filds
ret
sbb
dec
popf
cli
and
adc
pop
cmpl
rcr
enter
pop
adc
sub
lahf
fwait
inc
rcll
dec
jg
xor
sub
jns
xor
ret
add
or
aaa
int
pusha
int
jecxz
xor
popf
lea
nop
sub
sbb
dec
xchg
mov
jo
xlat
call
icebp
ficoms
jo
cmpsl
lea
aam
sub
sub
sbb
push
inc
lret
push
stos
mov
jne
adc
cmpsl
cmp
sub
pop
mov
sbb
addr16
mov
outsb
add
or
arpl
jno
add
lods
ret
ss
mov
xchg
cld
adc
pusha
mov
std
xchg
leave
push
jns
in
imul
cwtl
dec
dec
mov
xor
jmp
shr
rorb
imul
loope
insb
shl
divl
notl
movsl
je
pop
inc
mov
or
mov
pop
mov
push
mov
mull
or
rcrb
arpl
inc
sub
adc
sti
xor
not
xchg
xor
jns
pop
and
sub
movsl
push
test
adcb
xchg
push
fisttpll
mov
dec
adc
pop
icebp
cmp
mov
cmpsl
sbb
aad
fwait
rorl
lahf
adc
shll
inc
mov
fwait
out
mov
sub
dec
or
push
stos
sub
fldenv
insb
aaa
nop
pop
adc
ret
mov
fistpll
sbbb
mov
add
and
cmpsl
pop
pop
xchg
inc
lea
aaa
in
mov
ret
dec
addr16
jno
mov
cwtl
jns
inc
stos
xchg
das
xor
testb
dec
fs
xor
popl
stos
mov
push
mov
nop
pusha
outsl
dec
fldt
pop
and
loopne
xor
and
mov
xchg
mov
push
cmp
sti
aam
das
out
loopne
push
push
push
push
inc
and
mov
sub
jne
shlb
mov
insl
mov
sarl
outsl
pop
out
mov
cmpsb
rcrl
and
add
out
lea
icebp
push
adc
xchg
cltd
lret
xchg
mov
insl
ss
sub
cltd
rcl
and
mov
add
adc
test
mov
jo
std
mov
push
mov
xor
cmp
mov
push
sbb
das
cmp
mov
or
sub
mov
fwait
pop
push
inc
push
ret
js
inc
daa
ja
ret
xor
dec
out
stos
sub
adc
sub
fbld
loope
sub
jmp
out
or
arpl
pop
jne
scas
push
xchg
lret
jne
adc
xor
push
lds
bound
sbb
fildl
mov
sarl
push
push
pop
scas
sbb
cmpsb
cmp
mov
jmp
xor
adc
imul
xchg
sub
sarb
xchg
adc
jp
pop
fistl
xor
shlb
ljmp
dec
rclb
jg
and
iret
leave
outsl
fmull
arpl
fstpt
xorl
push
ja
hlt
nop
daa
jno
cmp
lods
adc
xor
or
lds
push
mov
xorl
or
inc
or
adc
shll
or
sbb
sbb
xchg
push
loopne
add
push
mov
mov
inc
inc
mov
mov
push
mov
xchg
fcoml
shr
imul
stos
xor
pop
sbb
mov
add
mov
inc
loope
jg
insb
mov
dec
ret
mov
push
cmc
mov
popa
push
mov
ret
cmp
stc
pop
pop
fadds
and
pop
sbb
fwait
nop
imul
and
jecxz
pop
dec
or
insb
adc
fistps
mov
pop
loop
loopne
shl
xorb
imul
lret
popa
push
dec
orl
add
cmpsl
mov
out
das
pushf
dec
ret
xor
mov
int3
enter
pop
fildl
in
fmulp
std
sbb
xor
inc
movsb
push
xlat
pop
icebp
cmp
test
jg
sub
shrl
cmpb
pop
mov
push
mov
xchg
pop
imul
sbb
mov
pop
mov
movsl
sbb
adc
gs
push
sub
jo
lret
jno
mov
adc
fstps
inc
sahf
and
insl
adc
out
in
add
das
and
mov
or
cmp
daa
and
and
push
mov
pop
push
sbbl
and
or
mov
pop
sbb
shlb
rorb
jg
icebp
mov
or
addr16
sub
or
ffreep
iret
push
shrb
xor
add
fisubl
popa
xor
jecxz
movsl
stc
cmpsb
push
and
test
cmpsl
lret
and
sub
or
dec
stos
add
and
outsb
sbb
and
and
mull
fnsave
or
outsl
sbb
das
sub
lods
or
sub
mov
jo
fildl
pop
jmp
cltd
push
cmc
call
and
lea
loope
ret
bound
dec
in
cld
fbstp
shll
addb
inc
fldt
xchg
jg
push
pop
cmp
fs
shl
ds
lock
int3
fldenv
push
fdivs
ss
inc
stc
loop
and
stc
aas
inc
rorb
fcmovnb
cmp
dec
ja
prefetch
or
cmp
jecxz
push
mov
push
pop
aad
sbb
leave
jbe
inc
cmc
pop
inc
adc
add
jnp
fsts
cmp
dec
jl
xor
jg
sub
jae
push
jbe
les
mov
and
push
sbb
fld
fldl
jne
push
mov
mov
mov
push
pop
ja
sbb
je
je
and
fwait
push
aad
sbb
cwtl
gs
retw
push
pop
sub
out
sub
push
ss
int3
out
adc
cmovb
dec
jnp
ret
pop
fbld
add
xchg
frstor
enter
mov
sti
xor
push
inc
jno
add
icebp
rcll
dec
lea
and
pop
fwait
push
dec
int
pop
pop
mov
flds
and
pop
pop
jno
pop
pop
int
rol
ret
subl
xor
fstl
dec
or
and
cmpsb
jg
cmp
ret
jne
push
push
adc
push
jne
gs
push
mov
pusha
sub
add
mov
push
mov
movsl
adc
sub
xorb
push
dec
clc
push
adc
seta
pop
sub
lret
and
jo
fisttpll
push
mov
xchg
adc
mov
orl
sbb
sbb
ret
lahf
fmul
in
rol
mov
or
dec
and
push
andl
xchg
cmovne
sbb
imul
mov
bound
out
push
or
rcrl
pusha
inc
iret
sbb
cmovae
xchg
movsl
es
or
and
or
int
mov
mov
pusha
jmp
mov
pop
add
mov
push
add
lds
xor
mov
xlat
ja
sti
dec
popa
cmp
jo
push
push
movsb
lods
inc
push
cltd
insb
xorl
mov
stos
iret
popf
cmpsl
sub
lcall
mov
xlat
and
mov
shlb
sub
inc
mov
pop
push
test
les
imul
int3
and
gs
popa
cmpsb
ret
fadds
and
ret
ja,pn
insb
or
or
movsl
dec
and
and
aam
push
sub
arpl
je
sbb
arpl
pushf
xchg
bound
adc
imull
test
ds
in
and
std
add
inc
cmp
inc
or
sbb
inc
mov
addb
sub
sbb
add
pop
fldenv
imul
dec
imul
or
outsb
pop
stos
jns
mov
es
jae
inc
sbb
cltd
pop
into
push
js
mov
arpl
sub
pop
mov
imul
das
mov
les
lods
cmpb
cmpsb
dec
mov
and
add
pop
sub
cmp
aas
out
sbb
insl
adc
xor
movsl
jecxz
popa
fidivl
xchg
add
mov
inc
xchg
sbb
orb
cmp
sti
cmp
ss
xchg
and
push
cmp
insb
nop
mov
sbb
sbb
mov
fildl
adc
mov
bound
ret
adc
mov
jge
dec
lahf
pop
inc
add
pop
sbb
lret
sub
fcoms
mov
pop
cmc
mov
stos
sbb
xlat
push
and
sbb
mov
inc
icebp
mov
inc
mov
test
icebp
popa
or
sub
add
daa
lret
test
sub
push
and
inc
movsb
adc
pop
jp
insb
int3
imul
in
push
cmpsb
daa
cmove
mov
rcrl
push
imulw
inc
dec
jns
mov
fnstsw
bound
arpl
adc
jo
jecxz
inc
sub
ja
add
and
adc
mov
and
fisubrl
adc
adc
and
mov
and
mov
add
iret
mov
outsl
mov
pusha
lea
movsl
lds
xchg
into
imul
outsb
or
mov
pop
and
adc
adcb
popf
mov
rcll
iret
ds
lock
fiaddl
fcompl
mov
das
push
jmp
outsb
movsb
adc
or
lock
arpl
adc
jge
in
out
xor
sbbl
jb
shrl
addr16
jge
dec
adc
mov
or
mov
ret
jg
push
pop
push
out
push
or
imul
inc
pusha
push
out
mov
icebp
push
fistl
notb
cmp
cmc
jecxz
dec
sbb
or
mov
xchg
les
lods
sbb
fmuls
loopne
sbb
sbbl
adc
mov
jo
es
jne
xchg
aam
xchg
fmull
mov
pop
push
les
adc
push
mov
mov
mov
jno
sub
push
pop
or
adc
and
mov
mov
js,pt
insl
mov
inc
push
xchg
stos
imull
sub
and
inc
sbb
jbe
and
inc
pop
imul
push
ljmp
adc
nopl
stos
outsb
push
xor
fcompl
and
shll
jns
and
dec
xchg
in
xchg
aas
lahf
test
das
sub
mov
sub
mov
loope
lock
movsl
sbb
push
push
stos
adc
shll
pop
xchg
out
and
push
ffreep
mov
decl
mov
pop
xchg
sub
imul
add
imul
mov
mov
pop
repz
xadd
insl
xchg
scas
aad
bound
jae
pop
xchg
lods
dec
mov
bound
lea
inc
sub
shl
mov
mov
fwait
lret
dec
dec
mov
add
sbb
jge
pop
sbb
frstor
mov
lods
std
lds
mov
add
popf
popa
ljmp
jo
out
mulb
sbb
xchg
test
insb
or
jmp
sbb
push
incl
push
mov
imul
dec
push
sub
ja
call
inc
cmp
arpl
adcl
add
roll
mov
cmp
sbb
and
mov
mov
mov
and
daa
lret
xorb
xor
jnp
mov
pusha
and
test
dec
jg
fisubl
iret
lcall
cmpsl
dec
adc
pop
xor
sub
shl
imul
cmp
out
lods
or
adc
mov
roll
adc
inc
or
push
mov
xchg
pop
mov
ljmp
loop
out
jnp
shr
jno
inc
movsb
sahf
xor
lret
jae
xchg
test
ret
lea
imul
fistpl
or
popa
popa
push
lods
inc
push
pop
pop
adc
pop
ljmp
imul
xchg
mov
adcb
in
pop
fcompl
cld
dec
aas
inc
mov
add
sub
pop
push
dec
sbb
sarl
stos
push
test
imul
loope
outsl
xor
xor
mov
sub
add
pop
out
jge
fnstcw
or
bound
push
mull
frstor
ret
inc
loope
mov
sbb
or
out
cmp
inc
adc
out
test
mov
mov
mov
mov
lret
cmpl
adc
push
xor
add
aaa
jnp
das
in
xchg
sbb
inc
out
out
addr16
in
jnp
cmp
cmpsl
repnz
out
repnz
in
mov
repz
add
cmp
adc
in
fwait
js
jp
add
or
sbb
mov
xchg
push
fldt
dec
mov
arpl
test
ss
mov
cwtl
and
push
pop
leave
lret
mull
jg
in
sub
sbb
inc
xor
in
out
imul
or
push
fisubl
and
and
mov
cmp
sub
mov
inc
sbb
or
push
mov
lea
sbb
imul
lods
aaa
rorl
popa
stc
inc
and
mov
sbb
fnstenv
xchg
push
movb
fwait
mov
sub
xchg
adc
loope
pop
xor
dec
jo
out
sub
mov
push
stos
les
sbb
mov
lret
out
or
sub
adcl
inc
lods
mov
lcall
inc
sbbl
xor
and
lea
jg
daa
or
xchg
xor
add
dec
or
leave
cmpsb
daa
lock
lods
xlat
imull
add
xchg
scas
mov
or
loop
movsl
data16
mov
lds
loop
ja
pusha
xchg
push
sub
lods
mov
adc
arpl
insb
push
mov
sti
scas
xorb
lods
jle
mov
sub
lret
jg
inc
popa
bound
jecxz
pusha
jae
insl
and
movsl
add
dec
jae
cli
mov
xor
jle
push
lods
adc
leave
rolb
movsb
bound
adc
pop
movsl
mov
lcall
add
lods
adc
mov
jo
jle
jecxz
pop
mov
sti
add
sbb
mov
movsb
jmp
xorl
mov
adc
xor
mov
cmpsl
or
test
jecxz
das
or
roll
outsb
jbe
and
push
movsb
outsb
sbb
leave
xchg
cmp
jecxz
adc
ljmp
push
jmp
insl
mov
xbegin
jge
adc
mov
dec
jge
test
aaa
adc
popf
inc
fcomi
sbb
andb
incl
int3
mov
sub
push
push
cmp
mov
fnstcw
dec
add
insl
stos
adc
sbb
mov
aad
pushf
inc
push
sti
jge
in
mov
push
jne
sub
cmp
push
sbb
inc
sub
xchg
dec
pop
adcb
ja
ret
pop
push
sbb
xor
jl
push
test
and
dec
inc
jbe
rorl
adc
aas
push
push
orl
adc
aaa
push
test
fsubrp
jno
push
or
jno
jbe
insl
imul
jno
sti
loope
sbb
fisubs
mov
call
rclb
loope
mov
xchg
popa
loopne
scas
and
jmp
xchg
jno
sbb
adcb
pusha
aaa
sub
sbbl
stc
mov
mov
add
test
push
mov
rol
nop
push
pusha
inc
fidivl
orb
outsl
mov
mov
pop
stc
push
lret
out
loope
popf
jne
scas
mov
sub
mov
out
push
mov
sti
xor
pop
dec
aam
out
add
scas
ss
test
dec
imul
dec
push
jb
ljmp
and
into
jo
cmpsl
es
push
mov
out
inc
dec
or
pushf
imul
cmp
sbb
pop
mov
pop
sub
fnstsw
sub
xchg
ja
test
shrb
js
test
or
test
inc
and
shrl
mov
inc
mov
inc
aam
sahf
mov
adc
jbe
rolb
pop
testl
jo
xchg
add
divb
adc
dec
mov
iret
and
jo
lret
sub
and
jg
rol
jnp
jbe
cmp
lcall
ret
mov
cltd
jae
dec
and
pop
push
push
jno
clc
mov
mov
ss
rcr
cltd
adc
sti
das
lahf
daa
mov
les
or
pop
jne
pop
imulb
cmp
cmp
cmp
lcall
cmpsl
mov
lcall
jne
fwait
sub
xor
cmp
shr
or
out
movsb
rcr
sub
mov
mov
inc
or
sub
sub
ds
out
imul
call
inc
jnp
in
jbe
mov
dec
adc
or
shll
sbb
add
add
test
roll
cwtl
out
in
sbb
jle
cmp
sahf
pop
inc
and
sbb
ds
pop
mov
pop
dec
ret
cmp
sbb
dec
sbb
bound
add
push
in
cmc
mov
out
adc
mov
pop
push
roll
imull
fwait
jmp
mov
imul
jecxz
xchg
stc
xor
dec
mov
lcall
jns
pop
idivl
lds
sub
js
cwtl
aas
push
fwait
cmp
jae
jbe
sti
icebp
sub
adc
add
xchg
popf
ficomps
pop
jbe
repz
xchg
pop
ret
pop
cltd
das
or
sbb
mov
fsubrp
icebp
dec
lea
insb
mov
or
push
push
adc
mov
jnp
jg
fnstenv
xchg
in
lock
mov
jp
or
mov
jge
fs
inc
sbb
pusha
inc
sbb
add
dec
mov
add
daa
out
ss
int
and
fstl
fildl
mov
cmp
jo
add
popf
es
jno
fisubrs
ret
mov
sub
inc
xchg
cmp
jnp
shll
pop
int
and
ret
or
test
imul
sub
jnp
xor
stc
ds
inc
aas
xchg
mov
pushf
fs
jmp
sahf
mov
test
das
pop
adc
adc
ficomps
cmp
pop
push
sub
negb
add
insl
pop
dec
les
fstp
imul
sub
mov
mull
mov
aas
and
dec
push
insb
xor
cmpsb
outsb
popf
cmp
fs
inc
scas
add
jge
jg
pop
dec
pop
bound
mov
iret
pop
dec
xor
pop
inc
cmp
js
fiaddl
inc
test
jo
push
outsl
mov
sub
je
pop
xor
dec
dec
imul
std
testl
inc
inc
int
fildl
jnp
dec
je
js
push
test
pop
or
inc
into
sahf
mov
push
cmp
shll
in
loope
pop
outsb
mov
loopne
sub
mov
inc
inc
mov
pop
lock
jbe
lods
repz
inc
mov
jo
addr16
out
and
shrl
inc
int3
jnp
or
inc
xchg
xchg
sub
and
inc
or
dec
dec
leave
or
pop
add
pusha
int
sbb
mov
pop
dec
add
shrb
nop
mov
add
jnp
out
pop
sub
pop
sub
ds
imul
std
jg
jl
fld
stc
add
inc
pusha
int
pop
neg
jge
inc
pop
pop
push
mov
out
xor
enter
jl
in
sbb
push
add
cmp
loopne
inc
sbb
jmp
out
and
push
in
jbe
out
push
dec
pop
adc
dec
sbb
gs
fidivrs
fwait
stc
sub
into
pop
lea
xchg
clc
js
dec
pop
sub
mov
fucom
cmp
fmulp
inc
mov
add
add
ja
rolb
inc
test
lret
repnz
unpcklps
nopl
js
dec
out
sarl
js
jecxz
fimuls
or
push
push
sub
xchg
jo
aad
inc
adc
jns
push
sub
dec
dec
dec
add
sbb
xor
push
mov
out
test
inc
xor
mov
push
inc
mov
cmc
mov
filds
inc
inc
out
mov
push
pop
mov
scas
pop
cmp
faddl
add
sbb
pop
fldl
xchg
dec
dec
out
mov
jmp
loopne
enter
push
ffree
shll
imul
jns
or
ss
add
jmp
pop
leave
arpl
mov
ret
push
inc
jns
inc
push
pop
push
sbb
sub
in
mov
inc
adc
xchg
sub
cmp
cmp
jge
pop
cmp
dec
dec
or
jl
jbe
out
pop
sarb
cmc
inc
add
outsl
mov
sbb
dec
pop
repz
out
pusha
add
gs
loopne
push
cwtl
loopne
add
mov
push
pop
jne
mov
adc
cmp
xchg
insl
dec
shr
xchg
fisttpl
std
cmpsl
jge
gs
inc
cmp
pop
insb
fs
in
push
pop
data16
xlat
sbbl
inc
inc
push
aaa
pop
inc
ljmp
das
mov
pop
cwtl
insl
aaa
mov
out
pop
inc
mov
pop
das
inc
rolb
test
js
adc
sarl
jnp
xor
in
xchg
insl
jo
loopne
arpl
call
arpl
cli
sub
dec
inc
mov
rorl
push
mov
mov
popaw
inc
imul
shrb
mov
add
loope
das
inc
inc
dec
sbb
ja
pop
push
mov
jl
mov
push
and
mov
rcpps
jp
ja
sbb
movsl
add
faddl
xchg
dec
sti
shlb
lahf
pop
mov
pop
pop
mov
pushf
sbb
out
test
cmp
xor
scas
mov
jle
sar
int
imul
ljmp
push
jb
inc
pop
jg
pop
push
aaa
push
jge
js
daa
jo
jae,pt
je
cmp
inc
push
ret
rcrl
and
sbb
fwait
wbinvd
inc
daa
fsubrl
cld
lods
cmp
xchg
inc
jnp
dec
and
adc
mov
outsl
inc
inc
js
lods
ljmp
jecxz
dec
and
adc
pop
inc
and
popa
push
fldt
push
mov
out
jg
dec
jecxz
ret
jnp
stc
adc
push
data16
imul
sahf
jp
lock
inc
jp
aaa
inc
testl
xor
je
scas
jnp
cmp
pop
inc
or
jnp
in
imul
ss
or
dec
push
sbb
out
lds
dec
sbb
adc
imul
jg
jo
pop
ja
movsl
sbb
jo
aas
cmp
aaa
pop
xor
xor
dec
dec
movsb
jle
dec
jecxz
gs
js
clc
pop
jecxz
pop
inc
or
add
jae,pt
roll
pop
dec
and
out
inc
lock
cmp
push
jp
mov
call
imul
dec
inc
jg
mov
push
push
leave
mov
add
addr16
addl
pop
xlat
add
ret
addl
in
and
and
rcrl
or
add
pop
inc
mov
push
sbb
pop
out
int3
jo
lds
jae
and
xchg
mov
sbb
nop
in
stos
je
loopne
pop
stos
mov
popa
mov
xchg
sarl
pop
cmp
lods
leave
lret
popa
pop
pop
pusha
addb
jp
mov
or
sbb
imul
mov
adc
inc
jno
sub
add
sub
pop
xor
add
jo
xorl
mov
jb
or
stos
imul
add
mov
call
push
cmpsl
sbb
push
add
push
jae
mov
fiaddl
shll
int3
pop
push
mov
ret
mov
cmpsb
inc
das
iret
pop
xchg
pop
ret
xor
shll
cltd
imul
sbb
sub
dec
pushf
or
mov
pop
xor
aaa
sub
arpl
push
jae
xor
push
imul
rol
ds
sbb
jg
xlat
xor
popf
adc
fidivl
lds
mov
mov
xor
mov
lea
sub
jecxz
mov
mov
xchg
push
jns
jbe
ljmp
stos
fildl
cmp
cmp
pop
lds
rcll
inc
inc
int
lock
daa
dec
and
loop
jmp
add
jmp
cwtl
jl
leave
pop
add
movsb
add
pop
dec
inc
nop
lret
xchg
sbb
sbb
inc
jecxz,pt
and
std
mov
adcl
daa
cmpsl
cmpl
mov
gs
mov
mov
insb
aaa
subb
shl
les
arpl
mov
arpl
jno
dec
mov
aad
call
dec
adcl
push
add
ret
jae
aad
jb
mov
mov
scas
das
adc
stos
les
pop
jne
out
lods
dec
je
add
rorl
ret
adc
outsl
cmp
rolb
arpl
stos
add
sbb
subb
jge
inc
pop
enter
sbb
in
das
dec
les
dec
cmc
mov
adc
dec
enter
adc
rorl
lods
lret
loope
fiaddl
movsl
add
fnsave
test
rolb
cmp
dec
push
jo
ja
push
mov
cmpsb
push
mov
rcl
pop
imull
push
lods
xchg
scas
pop
test
cmp
fwait
stos
ret
sbb
cmp
cmp
push
fstpl
imul
div
test
and
arpl
roll
jb
adc
jns
loopne
and
js
add
add
in
add
cmp
push
push
inc
jmp
push
and
xchg
dec
sub
test
mov
and
imul
lds
lds
adc
xchg
lods
ret
sbb
sbb
in
je
jp
and
jae
add
push
sub
loope
ret
xchg
jae
add
hlt
and
cmp
fcoml
xchg
push
bound
add
lods
add
xor
imul
cmp
fistps
in
mov
sti
out
add
test
sarl
ja
mov
adc
jnp
jmp
jp
cmp
sbb
jl
dec
xchg
mov
or
outsb
popf
jge
sbb
out
imul
pushl
je
mov
dec
or
loope
lahf
imul
sbb
cmp
jl
and
sub
fstpl
inc
test
mov
add
ffreep
mov
js
add
fwait
sarl
jnp
ja
xchg
mov
outsl
ljmp
test
xchg
pop
xlat
push
mov
adc
or
inc
iret
data16
dec
mov
adc
inc
push
lret
inc
arpl
movsl
cmpsl
pop
and
test
testl
inc
ja
insl
je
loope
dec
std
rcrl
imul
or
inc
bound
cmc
push
arpl
push
push
nop
jmp
aad
cmp
ss
cmpl
or
fisubrs
lods
or
sub
aaa
or
jbe
xor
push
ret
push
es
dec
jno
dec
je
out
mov
jp
scas
cmp
mov
push
hlt
test
jmp
lea
adcb
popf
push
mov
adc
and
daa
icebp
push
push
pop
pop
sbb
cmp
lods
arpl
in
bound
call
cmp
jecxz
mull
mov
pop
inc
add
inc
stc
pop
add
xchg
push
mov
cmc
stos
test
mov
imul
fwait
jb
and
add
jbe
dec
push
sarl
pop
mov
dec
decb
add
rcl
stc
cs
fcompl
stos
dec
loope
sbb
mov
xor
test
pop
js
les
sbb
out
push
jl
pop
js
inc
stc
and
js
dec
cmc
jle
or
sbb
inc
inc
cmp
dec
cmc
push
or
movb
roll
imul
mov
ljmp
sbb
int
outsl
data16
mov
cltd
lods
insl
fisttpll
sub
lds
in
add
dec
push
cs
xor
pop
xchg
xchg
dec
das
shll
cmp
mov
imul
sub
pop
add
stos
add
rcrl
dec
or
sbb
inc
jmp
icebp
mov
imul
lock
push
dec
je
push
je
adc
cmc
aad
clc
sbb
test
push
bound
movsb
dec
aaa
push
shll
push
lods
push
enter
fisttpll
icebp
mov
cmpsl
pop
andb
mov
pop
mov
inc
gs
sbb
pop
test
addl
cld
add
pusha
add
sbb
mov
jmp
stos
jecxz
pop
pop
stos
ss
jno
ret
pop
lods
or
mov
sarl
adcl
jmp
push
pop
int3
loope
adc
subl
mov
leave
pop
popa
sti
mov
cli
rclb
mov
xchg
loop
test
inc
cli
inc
xor
inc
mov
ret
and
mov
in
adc
insb
mov
dec
add
or
push
lods
push
aad
xchg
shlb
or
test
and
outsl
lds
cmpl
jbe
mov
jmp
into
test
cmc
daa
lock
imul
frstor
pop
addr16
mov
xor
les
cmp
xchg
aas
dec
sbb
movsl
int
outsb
push
shl
or
pop
je
clc
inc
or
aaa
pop
push
pushf
aaa
mov
pushfw
stc
mov
ret
add
inc
add
iret
jb
pop
stos
shll
aas
cs
lcall
jp
xor
push
push
roll
jno
fcomps
aad
inc
pop
pop
roll
in
push
jl
lret
adc
mov
add
inc
inc
mov
push
push
pop
ljmp
sub
inc
cmp
sbb
cmp
movl
jmp
ret
mov
loope
cmp
rcr
dec
arpl
je
xlat
add
pop
mov
ss
inc
mov
xchg
sbb
dec
sbb
push
xchg
sub
push
sbb
mov
jmp
adc
jae
cmp
mov
sub
addr16
add
mov
popf
outsl
insl
outsl
in
mov
mov
push
sub
mov
cmp
jne
test
adc
out
push
fidivrs
dec
adc
xlat
cmp
lds
xchg
push
ja
pusha
or
fisubs
cmp
fidivrs
repz
inc
add
mov
fwait
xor
insl
cli
adc
aad
dec
imul
lea
sbb
imul
dec
loope
rcll
inc
inc
lods
jp
inc
add
cmc
jno
adc
imul
rcl
xchg
cmpsb
mov
stos
addr16
cwtl
jl
jle
loope
cmp
mov
loopne
jns
push
mov
pop
filds
xor
ret
addb
sub
xchg
xor
xchg
cmpb
adc
jp
in
jnp
push
inc
out
bound
cmp
cmp
and
mov
loop
xor
test
pop
lods
fwait
dec
dec
sub
popf
adc
add
add
sub
imul
push
dec
push
adc
xorb
das
arpl
add
lret
cmpsl
xchg
lcall
fcomi
hlt
mov
or
movsb
mov
xchg
xchg
jmp
sbb
pop
xchg
inc
mov
mov
ret
jle
xorb
outsl
and
popa
inc
mov
xor
rcrl
pop
xor
imul
mov
mov
xchg
pushf
xchg
xchg
adc
xchg
pop
or
lods
mov
add
mov
sub
add
sbb
xchg
mov
dec
inc
jb
adc
jnp
push
scas
sbb
add
jnp
jne
add
in
shlb
stc
adc
inc
jns
sbb
push
aaa
jl
inc
and
sub
sub
imul
test
test
outsb
arpl
aaa
les
and
inc
dec
in
arpl
test
xchg
sub
add
and
leave
dec
jmp
cmp
push
inc
sbb
add
sbb
repnz
movsl
das
or
insb
inc
add
sub
pop
sbb
or
adc
fstpt
jecxz
jecxz
sub
jecxz
jno
sub
aas
dec
lods
lock
jge
jne
jae
jmp
imul
aas
outsl
js
movb
push
mov
cmp
mov
sbb
je
push
popa
push
insl
lods
pop
arpl
pop
inc
loope
aaa
push
lock
xchg
enter
jbe
sub
ret
ficoms
sub
in
add
sbb
sub
lods
hlt
mov
and
cmp
xor
jae
aaa
test
inc
dec
pop
in
cmp
mov
pop
and
and
push
movsb
push
pop
or
fidivs
dec
mov
xor
push
cmp
and
dec
push
out
inc
pop
add
jp
pop
arpl
inc
mov
xchg
or
cmp
xchg
sub
les
mov
cmp
pop
loop
out
jp
lods
mov
push
push
sahf
inc
pop
lea
mov
iret
dec
js
mov
xchg
push
xor
loope
xchg
fidivrl
cmp
pushf
bound
pushf
jb
mov
pop
or
push
repz
lods
loope
push
cli
cltd
pop
sub
fdivl
popf
mov
mov
lds
xorb
push
xorl
cltd
aaa
insb
cmp
imul
dec
and
jnp
inc
push
inc
xlat
sbb
jle
je
xor
jno
clc
sbb
jae
and
lea
loope
pop
xchg
js
sbb
xchg
mov
or
sbb
or
ja
loop
mov
or
add
inc
shlb
pop
pop
cmp
push
push
jb
pop
cmp
imul
pop
es
mov
mov
jmp
das
fcoml
das
movsb
pop
pop
mov
pop
cmp
aaa
les
into
das
or
ret
pop
dec
mov
or
fistpll
adc
test
push
xor
cwtl
inc
stc
ljmp
mov
or
dec
jl
mov
pop
dec
inc
aas
xchg
pop
or
adc
sub
mov
jo
cmpsb
lea
or
xor
pop
rorb
push
fadd
pop
mov
movsb
xchg
frstor
loopne
fstps
pop
mov
ds
ljmp
addr16
jnp
xchg
pop
lock
ss
push
mov
and
jno
jg
mov
pop
cmp
mov
push
ja
mov
mov
sub
mov
loope
sbb
test
andl
sbb
mov
imul
loopne
adc
push
pop
call
push
sub
ljmp
push
add
mov
test
mov
out
inc
mov
pop
sbb
add
imul
xor
mov
fldt
pop
or
xor
arpl
xchg
xchg
addb
adc
orl
dec
pop
cmp
imul
cmpsl
pusha
stos
sbb
repz
pop
push
xorb
addb
mov
mov
nop
mov
mov
jno
push
dec
stos
mov
or
sub
rcll
mov
jmp
sbb
mov
shll
push
xor
shrb
sub
test
jecxz
pop
pop
dec
fistpll
roll
xlat
push
lea
fildl
mov
adc
cwtl
push
adc
mov
mov
mov
mov
mov
popa
inc
mov
xor
cmp
inc
sbb
ficoml
std
push
inc
and
or
sbb
lds
sarl
push
int
sbb
push
push
sub
sarl
jg
xor
push
xchg
push
lds
mov
push
ret
pop
cmp
lods
and
subb
lods
mov
mov
iret
jae
adc
sbb
test
mov
dec
cmpl
dec
xchg
aam
pop
inc
or
pop
mov
imul
or
mov
inc
das
mov
jno
lea
ja
popa
jne
arpl
mov
pusha
push
bound
imul
dec
adc
push
and
xor
sub
dec
popa
test
pop
movsl
and
popf
add
imul
lds
lcall
bound
push
push
addr16
stos
push
inc
jne
dec
stos
dec
roll
cwtl
inc
lods
cs
imull
lret
xor
sub
mov
lods
andb
jne
push
push
or
adc
rcrl
push
sti
movsl
inc
adc
cmp
push
enter
jg
xor
mov
test
sbb
lds
xlat
pop
push
push
pop
dec
push
mov
add
rcl
aad
xchg
mov
jae
and
jne
dec
imul
sub
push
adc
mov
push
push
push
aaa
adc
adcl
inc
sbb
jmp
or
leave
sub
jno
push
add
das
or
lods
sub
lods
lea
call
mov
mov
lds
or
mov
sub
adc
dec
xchg
test
and
lcall
lds
fcom
adc
popa
jne
subl
test
sbb
push
push
rclb
stos
add
inc
sbb
movsl
mov
push
mov
jge
inc
test
mov
in
add
push
shll
rolb
sbb
fsts
lds
push
pop
push
pop
cmpsl
and
inc
pop
pop
push
or
fwait
inc
and
les
test
mov
adc
xchg
addr16
push
lods
movsl
test
cmp
jne
jns
push
adc
sbb
rcrb
shll
dec
fdivrl
xchg
push
jecxz
lds
xchg
arpl
xchg
lods
or
dec
insl
xor
insb
push
dec
push
incl
inc
lds
dec
testl
add
int
pop
stos
pop
xor
inc
ret
mov
nop
pop
fcomip
pop
pop
pop
push
dec
mov
inc
scas
jae
lods
lds
jns
movsl
aad
mov
push
inc
andb
insb
shlb
dec
test
mov
add
insl
add
pop
inc
xchg
add
pop
push
sbb
cmp
dec
push
lods
dec
and
mov
xor
lods
dec
lods
pop
mov
shl
imul
jmp
mov
or
inc
adcl
aaa
adc
adc
dec
insl
xor
mov
xchg
stos
leave
arpl
and
sub
mov
sub
and
gs
imul
bound
shll
shll
xchg
mov
sbb
adc
shrl
pop
add
unpcklps
cmp
sub
add
add
push
xor
imul
pop
or
sub
nopl
mov
mov
push
sub
mov
and
sti
jbe
std
add
popl
pop
dec
enter
jmp
aad
jbe
mov
cld
add
fstpl
sbb
dec
imul
ja
cmp
pop
push
lahf
test
cmp
or
mov
jnp
out
add
clts
je
testb
xchg
rclb
dec
and
ja
push
sti
mov
into
xor
daa
push
sbb
mov
ror
imul
adc
lods
or
insb
nop
notb
enter
xchg
je
or
andl
adc
es
shll
sub
jmp
xchg
mov
int3
fists
gs
sub
mov
inc
xchg
subb
adc
ds
add
adc
sti
loop
leave
push
aam
sbb
dec
sbb
ds
jbe
test
jo
out
and
sub
inc
repz
insl
scas
js
mov
jno
sub
pop
in
dec
jns
insl
inc
jne
loopne
xor
pop
adc
int
dec
inc
je
sub
inc
dec
dec
mov
je
dec
sub
adc
inc
mov
dec
nop
pusha
xor
jo
dec
cltd
fisubl
pusha
sub
out
or
add
xor
frstor
add
mov
add
inc
sbbl
jns
pop
mov
jp
leave
jae
add
lcall
inc
push
ffree
jb
inc
dec
or
push
xchg
imul
mov
sub
inc
fwait
sbb
stc
insl
inc
out
test
jns
dec
xchg
dec
popa
xchg
cmpsl
imul
outsl
adc
sbb
sub
and
sahf
loopne
push
sbb
outsb
mov
jne
push
sub
push
push
addr16
and
xchg
xchg
adc
and
or
pop
adc
adc
lock
sub
inc
mov
mov
fnstcw
cmc
mov
adcl
inc
mov
lds
cmp
xchg
inc
jnp
insl
es
pop
sub
xchg
pop
add
loope
enter
xor
insb
add
add
push
add
or
add
aas
loopne
pop
sbb
add
inc
xchg
jecxz
xor
inc
inc
cld
adc
loope
pop
add
loop
out
adc
xlat
sub
pushf
rcll
pop
ret
fbld
loop
std
inc
movsb
pop
add
or
inc
pop
dec
insb
inc
pop
pop
adc
xchg
fs
inc
outsb
and
dec
cmpsb
dec
pop
add
test
add
es
hlt
and
ja
cmc
fidivl
sbb
push
stc
mov
inc
ljmp
mov
out
cmp
lods
out
jle
hlt
stos
xchg
fmul
pop
jnp
add
jge
js
mov
pop
push
mov
sbb
fistl
xchg
icebp
gs
cmp
ret
jne
cmp
lea
das
mov
and
push
stos
dec
insb
iret
mov
aam
pop
mov
ja
sbb
fcoml
inc
cmp
add
fsub
dec
jecxz
pop
sbb
ret
push
imul
repnz
xor
in
lods
lcall
push
mov
mov
dec
or
or
mov
jnp
sbb
ds
jle
out
fldl
xchg
in
jns
sbb
movl
xchg
adc
popf
ja
out
mov
pop
sti
popa
push
add
lds
fwait
cmp
cmp
sbb
push
aaa
push
in
and
jb
adc
int
jle
adc
push
and
pop
ja
movsb
pop
and
cmp
in
sbb
test
push
push
push
inc
arpl
add
or
mov
sub
sub
cmc
push
mov
pop
aas
push
jg
pop
movsl
dec
and
add
pop
scas
inc
cli
pushf
jno
xor
popf
push
je
lods
sbb
fcoml
sbb
test
ja
lcall
lods
movsl
push
idivl
dec
lods
or
mov
popf
nop
and
nop
ja
mov
andl
and
mov
movsl
sbb
daa
mov
fldt
xchg
jo
stos
sbb
sbb
addl
inc
int
shrb
aaa
inc
cmovb
xor
mov
adc
push
stos
pusha
sbb
mov
stos
aam
pop
movsl
mov
adc
jae
dec
sub
push
and
aaa
inc
dec
pop
and
dec
mov
pop
lods
sub
rclb
fsincos
ret
and
inc
jge
lcall
loopne
mov
mov
xchg
int
push
insl
jmp
mov
pop
mov
vmovsldup
jge
xor
stos
adc
xor
mov
sbb
xchg
lcall
inc
and
adc
mov
xchg
xor
xchg
sub
mov
sub
popf
or
outsl
jnp
xchg
dec
insb
sub
push
or
int
sub
push
test
mov
push
push
lods
aam
pop
lods
inc
xchg
cmp
rorb
mov
test
xlat
movsl
inc
xor
movsl
lods
stos
fstpt
xchg
out
mov
mov
or
jg
or
imul
roll
sbb
adc
pop
mov
mov
adc
loopne
shll
mov
test
imul
push
gs
adc
inc
nop
mov
mov
cmpsl
inc
call
adc
pop
sub
sub
inc
sbb
mov
mov
popa
iret
jge
inc
mov
rorl
and
jne
stc
xchg
add
aas
inc
or
mov
pop
adc
adc
xor
stc
inc
mov
inc
fnsave
add
outsl
fisttpll
jge
insl
insl
inc
xchg
xor
stos
jmp
push
lods
bound
pop
sbb
pop
stos
shlb
mov
sub
xchg
xchg
shrb
push
inc
sbb
mov
add
jne
adc
inc
and
inc
sub
xor
aaa
stos
adc
adc
mov
cmp
lods
or
lods
sub
cmp
sbb
subl
or
subl
je
pop
stos
push
stos
or
push
mov
popf
dec
int
sub
pop
sub
push
ljmp
mov
fstpl
adc
fwait
mov
mov
sub
mov
jns
push
lods
mov
and
movsb
imul
inc
inc
cmp
inc
mov
lea
push
cmp
adc
stos
lods
and
sbb
inc
mov
fbstp
jno
pop
push
xchg
xor
add
adc
in
sbb
sbb
push
addl
movsl
sub
sub
les
mov
jne
rcrl
movsl
pop
sbbb
push
lahf
pop
inc
ljmp
inc
push
fwait
fwait
mov
mov
xchg
mov
loope
aam
imul
mov
and
xor
xor
push
pop
mov
mov
test
inc
rcll
inc
jmp
inc
imul
pop
push
add
add
pushf
in
mov
xgetbv
sub
insb
sub
fwait
daa
subl
xchg
in
enter
xchg
cmp
push
pop
push
fstps
mov
das
test
fs
and
es
iret
je
mov
in
fisubrl
fildll
in
pushf
nop
mov
xor
jg
cltd
in
dec
ret
pop
cmpsl
movsl
scas
fldt
negb
stos
das
xor
in
mov
mov
icebp
sbb
cmp
push
shll
or
xor
jae
dec
mov
sub
movl
pop
loope
pop
or
jns,pn
in
and
incb
mulb
pushl
ja
and
add
leave
sub
in
jo
loope
add
ds
cmp
add
mov
daa
scas
push
fs
push
xchg
outsl
mov
cmp
sti
fistl
and
pop
ret
je
dec
int
daa
cmp
or
pop
pop
int3
push
add
leave
out
mov
push
getsec
push
and
cs
dec
jb
je
aas
cs
cmp
fnstcw
fwait
xchg
fisttpl
aas
push
addr16
add
mov
imul
daa
ds
daa
stc
mov
test
das
pop
add
mov
cmp
imul
add
flds
ja
mov
pushf
jbe
xchg
pop
daa
cwtl
stos
sahf
nopl
sbb
mov
ret
enter
shl
paddb
xor
and
sub
inc
push
in
pop
in
pop
and
fidivl
das
std
pop
dec
out
jns
fldt
pop
lret
movups
pushf
push
sarl
int
jmp
icebp
scas
cmp
outsl
dec
dec
repnz
imul
dec
repz
add
mov
leave
and
out
and
and
imul
lods
and
mov
xchg
sub
sub
cld
stc
cltd
jbe
idivl
pop
fdivs
add
scas
jns
pusha
push
push
jg
bound
dec
faddp
mov
arpl
into
dec
mov
arpl
cs
and
and
xchg
js
sbbl
repnz
nop
fistl
into
xchg
pop
pop
dec
xchg
outsl
ss
por
xchg
aas
arpl
lods
mov
mov
xchg
mov
outsl
into
dec
mov
out
pushl
mov
mov
insb
enter
pop
icebp
fistpll
loop
scas
in
jmp
sbb
inc
stc
inc
cli
bswap
out
jge
popl
or
aas
frndint
out
xor
lsl
jge
nop
cmp
shll
daa
faddl
pop
push
icebp
mov
das
pushf
jbe
in
xchg
fs
inc
data16
pop
lds
xchg
fwait
xchg
jae
jecxz
add
adc
and
daa
lret
mov
in
fwait
jmp
adc
push
jg
enter
pop
mov
in
in
pushf
pop
mov
push
ficompl
daa
fimuls
fs
out
cltd
lahf
setg
xor
push
mov
aaa
mov
sub
pop
add
mov
mov
les
cmpsl
insl
dec
cmp
pop
or
mov
in
imul
div
stc
pop
push
mov
in
pop
add
nop
pop
add
xor
in
dec
leave
imul
imul
mov
pop
popa
xchg
push
rcll
out
shll
mov
pop
jo
cmpsl
insl
fcompp
push
pop
or
ret
aas
adc
ss
iret
push
jno
loop
shl
mov
in
and
repnz
or
push
or
push
inc
into
push
sti
loop
add
in
pop
data16
inc
or
les
cmp
daa
dec
sbb
and
leave
enter
pop
aam
int
in
add
add
dec
mov
sub
add
cmp
ss
pop
mov
mov
nop
push
xchg
add
add
cmp
in
enter
mov
loopne,pt
imul
push
or
pop
or
test
in
enter
or
out
or
or
cmp
sahf
sbb
sbb
inc
paddusb
sti
and
push
pcmpeqd
fwait
jbe
daa
outsb
push
imul
popf
negb
xor
sbb
push
add
dec
ficoms
push
jl
sti
mov
pop
pop
xadd
jns
std
and
inc
mov
cmp
pop
fdivrl
fsubs
pusha
adc
inc
or
addb
add
and
aam
enter
inc
add
jns
adc
fldcw
pop
jg
push
gs
push
sbb
dec
outsb
outsw
push
push
mov
int
sbb
inc
push
jae
jb
gs
jne
dec
inc
dec
inc
mov
outsl
jg
push
jns
xchg
insl
push
imul
fcomip
popa
outsb
addr16
in
inc
fs
jae
pop
dec
outsl
fs
rcrl
inc
gs
or
inc
push
xor
outsb
je
or
out
daa
outsl
insl
insl
inc
dec
imul
neg
cmp
sti
test
daa
sbb
fs
popa
sub
popa
mov
xchg
je
inc
test
push
popa
lcall
jb
jb
inc
or
sub
jns
imul
fnsave
je
or
xchg
adc
icebp
lcall
mov
dec
push
div
imul
and
cmp
fidivs
mov
fistps
in
xchg
je
outsb
outsb
jnp
xchg
mov
out
pop
inc
in
inc
jl
es
outsb
or
dec
outsl
ja
hlt
sub
jb
aas
fiaddl
dec
inc
dec
dec
inc
arpl
pop
push
pop
xor
jbe
adc
or
dec
lods
enter
pop
in
hlt
fs
add
pop
mov
scas
cmpsb
cmp
jo
xchg
jns
push
cmp
xor
pop
or
jb
jae
and
in
add
push
addr16
bound
cwtl
je
insb
push
mov
jns
out
jne
inc
ss
dec
popa
fadd
leave
mov
movsl
out
andb
nop
adc
outsl
in
xlat
xchg
or
je
inc
call
mul
cmp
in
push
cld
loope
or
pop
jecxz
add
ljmp
sti
add
pop
inc
sub
push
popl
mov
mov
das
ss
stos
jnp
adc
lods
sbb
aad
cltd
pop
add
insl
mov
fstps
rolb
cmp
mov
iret
adc
mov
enter
lods
mov
add
add
jl
adc
dec
inc
inc
and
loope
mov
fiaddl
mov
jb
jl
fsubrs
pop
sub
dec
in
mov
jns
inc
rolb
or
cmp
shrb
fs
popa
add
push
repnz
dec
push
inc
repz
loope
mov
add
aam
leave
jle
jae
add
push
sbb
xchg
adc
and
das
push
dec
push
xchg
and
incl
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
