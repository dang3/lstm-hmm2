mov
adc
or
push
je
imul
add
push
mov
lea
mov
push
lea
and
aas
add
lret
fldt
sbb
add
jge
jae
mov
jmp
das
inc
and
xchg
lea
fmull
or
das
pushl
ja
inc
inc
dec
dec
dec
dec
lea
lea
mov
mov
jl
dec
dec
dec
dec
lea
mov
dec
push
call
add
jg
mov
add
movsl
push
fcmovne
in
pop
inc
dec
cmp
jns
cs
je
inc
xchg
mov
mov
adc
aam
cs
psrld
lea
jae
test
mov
mov
dec
mov
mov
xchg
mov
pop
xchg
std
out
mov
ret
nop
push
mov
push
jnp
sbb
inc
pop
pop
ret
jmp
mov
pop
hlt
lock
inc
push
in
call
sbb
inc
push
sbb
int3
push
sbb
sarb
mov
nop
inc
push
lods
test
mov
pushf
cmp
cld
mov
mov
xor
xor
and
sub
xor
and
and
and
inc
fisttps
call
mov
cmp
xor
pushl
cmp
mov
in
jle
arpl
je
adc
jmp
loop
arpl
jno
ds
inc
add
or
mov
aas
ret
jne
mov
mov
repnz
aas
add
out
ljmp
ds
inc
loop,pt
jae
dec
mov
inc
loop
mov
divl
mov
xor
fstpt
adc
jne
or
inc
cmc
mov
pop
mov
pop
xor
clc
adc
repnz
mov
push
roll
rcll
xlat
fdivrp
mov
ds
pop
cmpsl
shll
push
dec
mov
jecxz
addr16
cmp
dec
aaa
dec
cli
sti
push
jae
imul
sbb
divl
ja
and
inc
push
ljmp
add
inc
repnz
mov
mov
cli
dec
mov
jbe
xchg
rcr
mov
shll
cmc
pusha
clc
add
fsubs
adc
fwait
adc
pusha
popf
daa
mov
pusha
mov
mov
lcall
sti
mov
fistpl
lods
mov
mov
push
test
outsb
movsl
clc
or
inc
andb
sti
lock
fnstsw
pop
lea
mov
lcall
sub
jne
jne
into
push
pop
jmp
cmp
push
mov
out
mov
cmc
xor
pop
push
mov
xchg
add
mov
xchg
insl
inc
adc
pop
pop
mov
ss
pop
cmp
sbb
sti
out
mov
ret
pop
jae
dec
dec
xor
lea
outsl
or
sub
inc
cli
pop
sbb
xchg
cmp
jg
and
xchg
outsb
xchg
pop
or
dec
roll
test
dec
ds
mov
in
jnp
scas
push
cmc
mov
lods
cmp
or
or
jmp
idivl
int
pusha
push
jge
add
movsb
cmpsb
jge
mov
pop
mov
inc
xor
jge
jbe
fidivrs
lea
or
xchg
cmp
sbb
ss
imul
cmp
into
mov
lods
insl
ds
xchg
mov
jmp
push
jno
and
mov
cmp
dec
cmp
sub
ret
mov
mov
loope
dec
ljmp
out
cwtl
add
insl
insb
fsub
fs
gs
aas
or
mov
or
inc
icebp
ja
pop
mov
mov
icebp
dec
push
dec
cli
add
add
popf
lahf
dec
sub
jne
loop
in
or
xchg
insl
fs
push
or
dec
test
rorb
in
pop
movsl
lret
cmp
ret
dec
or
xor
movsb
dec
adc
mov
incl
cmp
xchg
xor
dec
cmp
xchg
push
mov
ja
es
aad
ret
mov
mov
sbb
adc
mov
fidivl
pop
rorl
test
out
pop
lock
sbb
add
movsl
jne
inc
ret
pusha
cmpsl
in
out
popa
pop
cli
or
test
in
inc
cli
cmpsb
jle
test
mov
jb
cmp
mov
rorl
inc
mulb
ds
or
jae
std
incl
ss
cmp
mov
je
pop
pop
ja
ja
lea
push
push
movl
cmpsl
ffreep
sarb
and
inc
push
loop
pop
ret
mov
popl
outsl
out
jg
clc
mov
mov
xor
divl
test
jne
or
hlt
jmp
pop
push
loop
adc
dec
adc
mov
mov
call
call
pop
clc
mov
add
dec
sub
movzwl
dec
test
jb
in
movl
stos
sbb
lea
mov
sti
adc
lods
push
or
xchg
mov
add
cmp
or
sarb
icebp
and
jmp
jl
xchg
je
cmp
sub
ud1
adc
push
cmp
jle
nop
dec
popa
sub
push
ret
ss
sbb
cmp
out
arpl
dec
rcll
add
sbb
in
nop
sub
call
dec
in
jne
lahf
rolb
inc
ret
adc
std
decl
fs
imul
js
add
outsb
push
push
mov
push
imul
insb
insb
outsl
arpl
push
jb
je
arpl
add
loope
ret
sub
mov
dec
jecxz
cli
mov
mov
js
xor
repnz
mov
mov
cmp
imul
push
add
cmpl
je
scas
mov
ret
mov
dec
test
test
mov
incl
mov
mov
add
cmp
or
pop
mov
and
pushl
push
sbb
mov
and
xor
aas
icebp
das
jg
sbb
das
and
and
icebp
add
xchg
lods
std
pusha
sub
mov
js,pt
jg
repnz
jae
lea
repz
jne
mov
lock
ror
adc
aas
popl
movl
call
add
hlt
shl
decl
cmp
jnp
dec
dec
dec
dec
clc
xchg
sbbb
jg
add
or
inc
inc
mov
aas
jp
in
jl
inc
or
adc
push
add
and
inc
mov
mov
pop
jnp
dec
inc
push
lea
dec
inc
fdivrs
dec
imul
dec
dec
inc
dec
mov
mov
cmp
call
mov
sbb
mov
pop
add
inc
inc
jb
andb
jo
lret
in
cmp
cmp
jo
mov
push
dec
sar
jmp
fwait
jb
dec
dec
cmp
jl
inc
mov
mov
xchg
ret
je
mov
mov
adc
jno
xor
fucomi
inc
xor
gs
outsb
or
inc
or
sbb
inc
dec
xchg
or
and
jl
mov
or
mov
nop
in
or
mov
xorb
push
inc
mov
push
jmp
imul
push
imul
push
pop
incb
insl
jae
dec
adc
push
outsb
lods
jo
imul
dec
fs
imul
outsb
dec
mov
insl
xor
leave
and
out
aas
hlt
xor
adc
cwtl
adc
push
testl
mov
call
dec
mov
fcomps
and
sbb
xchg
out
addl
jb
lea
jo
and
das
cmp
jge
out
jle
dec
sub
mov
mov
out
adc
imul
mov
pop
fistl
fisttpl
jg
mov
inc
sarb
call
insb
mov
fdivr
add
sbb
mov
je
mov
dec
xchg
cmp
test
icebp
sub
cmp
fdivrl
pop
mov
dec
cwtl
sbb
mov
fcmovnu
insl
imul
or
out
dec
std
lea
jle
or
inc
xchg
icebp
in
inc
dec
inc
fwait
pop
lock
fcoms
add
neg
test
add
cmp
or
mov
xchg
insl
dec
inc
add
insl
adc
dec
inc
rcl
cmp
shll
jne
dec
adc
pusha
repz
in
sub
cmp
xchg
mov
jno
mov
mov
dec
mov
out
inc
lea
cld
xchg
mov
mov
pop
out
fcoms
xchg
jge
jge
xor
test
scas
int
mov
inc
loope
sti
ficoms
or
and
loope
dec
dec
inc
test
jne
jl
add
ret
shrb
outsb
imul
jae
pop
dec
cs
sbb
dec
push
outsb
js
jle
mov
shr
push
ja
ret
push
sbb
xor
aaa
testl
les
clc
test
mov
popa
dec
loopne
fcomps
or
cmp
jp
or
hlt
mov
clc
loopne
or
mov
dec
mov
jne
dec
mov
je
jmp
mov
jb
inc
dec
mov
sub
add
or
dec
gs
add
push
insb
or
pop
push
imul
hlt
xlat
fstpl
pop
shll
scas
lock
inc
push
arpl
add
sub
fcomp
pop
popa
std
xchg
jbe
loope
xor
mov
fstpt
mov
sbb
jae
add
mov
das
mov
push
jecxz
or
fdivrl
inc
lods
sarb
movsl
testl
mov
or
jl
mov
daa
sub
or
pop
or
daa
inc
rclb
push
fwait
add
or
and
lock
cmp
push
gs
or
mov
mov
add
mov
fs
cli
call
in
lock
add
add
adc
in
dec
fcoms
xchg
or
fbld
test
sbb
das
gs
and
and
and
jbe
sbb
loopne
call
out
inc
enter
jecxz
in
in
xchg
sub
psllq
popa
mov
ss
adc
mov
ret
mov
cmp
mov
adc
jae
test
jae
jl
fdivs
xor
cmp
sbb
push
inc
push
pop
ja
and
mov
pop
adc
pushf
add
xchg
int
pop
sbb
test
sbb
call
pop
mov
inc
scas
or
in
mov
push
inc
sbb
outsb
lea
into
cmpsb
add
push
or
dec
mov
fdivl
adc
inc
outsb
popa
imul
mov
imul
aam
or
or
adc
inc
push
ret
shr
std
imul
lods
mov
outsb
add
add
loopne
mov
inc
gs
arpl
cld
out
fs
jae
add
insb
cs
lcall
insl
fistpl
add
das
insb
inc
outsb
jl
jns
outsl
jb
insl
pop
mov
sub
ja
inc
gs
pop
je
or
ljmp
or
insl
bound
insb
mov
add
popa
fistl
mov
and
jne
mull
out
dec
add
or
or
dec
jne
mov
aas
je
neg
nop
ja
mov
mov
arpl
call
add
int
in
lcall
shl
movsb
loopne
add
and
xchg
fdivs
insb
cmp
aam
mov
movsb
imul
cmp
fcomp
outsl
mov
mov
mov
stc
jns
sub
enter
movb
testb
add
ret
push
pop
int3
cmp
jne
cld
add
add
add
fwait
sub
and
xchg
in
add
mov
and
cs
aaa
cli
jnp
jbe
sbb
insl
ss
pop
sbb
jb
stos
mov
xchg
add
inc
and
test
inc
jmp
cli
insb
outsl
xchg
pop
inc
mov
cmp
out
add
fidivrs
adc
clc
add
icebp
arpl
lcall
clc
cmpb
pop
mov
sbb
pop
mov
shlb
fwait
ret
int3
movb
add
gs
adc
dec
cmp
fdivl
fldenv
jmp
inc
dec
cmp
cmp
cs
cwtl
js
adc
cltd
shl
rorb
push
in
xor
xor
xor
xor
xor
out
insb
out
xor
aaa
pop
add
mov
pop
xlat
xor
jnp
or
incb
or
add
adc
in
jbe
ret
test
jmp
or
add
adc
xchg
and
hlt
inc
sbb
adc
hlt
pushf
sbb
sub
inc
or
inc
sbb
test
or
inc
mov
or
add
ret
xlat
mov
add
adc
add
test
ljmp
adc
fwait
jmp
inc
roll
test
jnp
test
popa
nop
jmp
xor
push
sbb
cld
cmpl
add
push
clc
mov
cmp
mov
sub
loopne
mov
in
sub
jne
xor
rolb
jo,pt
ret
popa
cld
pop
xchg
mov
cmp
add
mov
push
cmp
lds
mov
pusha
mov
adc
adc
jnp
push
push
and
das
inc
sub
mov
sbb
fisttpl
adc
sub
xchg
jns
rorl
cmc
inc
clc
popf
decl
xchg
hlt
jle
lahf
cmp
lods
sbb
cmp
jnp
mov
int3
ss
push
add
pop
outsl
cwtl
call
nop
movl
or
popa
lods
inc
cs
aas
dec
lea
lret
mov
jno
mov
xor
xor
test
in
dec
push
shlb
adc
and
clc
pop
or
pop
ja
push
or
sbbb
cmp
lret
sub
pop
push
movb
arpl
add
call
test
cmp
cld
rolb
adc
and
movsb
xchg
andl
iret
jne
push
jmp
adc
sub
xchg
or
add
adc
or
mov
lea
adc
sub
outsl
pop
dec
mov
or
inc
clc
push
mov
test
in
pushl
inc
lcall
jne
mov
jns
or
xor
push
repz
jg
faddl
sub
mov
xor
inc
xchg
inc
push
and
dec
inc
xchg
jno
int3
mov
lahf
fs
xor
xor
fstl
jo
fwait
cmp
ss
adc
fwait
cwtl
mov
in
mov
cld
sub
popa
rcrb
sahf
int
sub
les
mov
in
push
dec
mov
xchg
jmp
lock
cmp
popf
add
lock
sub
data16
mov
popl
xor
or
addl
je
push
push
sub
add
hlt
mov
or
mov
mov
iret
data16
je
loopne
and
mov
lea
push
sub
sub
aaa
xor
xor
in
mov
sbb
loop
mov
fs
sbb
lahf
pop
sbb
insb
mov
ret
imul
jecxz
push
int3
inc
cmp
or
mov
cmp
fs
mov
push
xor
insb
push
dec
insb
imul
in
and
fcomps
pop
scas
je
or
sbb
insb
ljmp
jae
inc
mov
add
mov
add
add
mov
jmp
dec
add
das
add
add
aam
stos
xchg
jmp
dec
mov
imul
add
add
outsb
fisttpll
xchg
add
sub
and
add
lcall
mov
add
sub
push
mov
popl
mov
aam
or
ss
fs
add
adc
pop
add
add
pop
add
and
add
js
sub
jns
add
lods
mov
push
add
push
mov
push
add
add
add
jb
mov
test
and
cmp
call
cmp
jbe
mov
add
xchg
mov
dec
cld
pop
jl
add
out
add
jle
mov
and
and
adc
insl
inc
adc
and
jae
xchg
insb
push
imulb
outsb
setge
lret
fists
add
xlat
fistpl
adc
cmp
mov
in
outsl
test
pop
push
addr16
dec
outsb
and
nop
push
add
data16
adc
sub
push
and
mov
dec
mov
jno
mov
pop
mov
out
sbb
jae
mov
fstpt
xor
sub
fdiv
cli
and
movsb
add
add
mov
sti
pop
fisubrl
sub
outsb
adc
sbb
cmp
arpl
scas
std
xchg
sti
dec
mov
add
jno
rcrb
add
aas
cmp
into
insl
out
enter
xchg
sbb
jle
or
add
add
adc
xlat
int
cmp
add
jbe
repnz
or
cmc
and
jo
outsb
mov
test
add
out
inc
pop
and
sbb
push
dec
add
mov
sub
insl
cmp
mov
pop
lods
in
or
and
daa
pop
mov
lret
sub
scas
add
fisttpl
add
mov
fwait
ret
inc
movl
xacquire
aad
cs
dec
and
cld
outsb
sbb
jge
das
xor
clc
mov
shrl
mov
and
inc
pop
add
inc
xor
mov
repnz
gs
mov
icebp
jno
ss
dec
mov
mov
outsl
lret
ret
adc
sbb
fmull
loope
testb
add
ret
fcomi
outsb
mov
sub
test
out
aaa
insb
dec
stos
mov
ds
mov
jo
ljmp
leave
outsb
clc
adc
lcall
fwait
jmp
mov
mov
sti
mov
xor
mov
fwait
insl
cmpsb
jbe
mov
cmp
sbb
xchg
xor
and
in
adc
shll
mov
cmp
jge
lock
inc
push
scas
add
je
insl
popa
mov
push
rclb
adc
sbb
and
and
sbb
cmpsb
dec
jecxz
repnz
pop
fidivl
add
call
pop
imul
addr16
sub
aad
inc
roll
cltd
arpl
fdivs
pushf
push
ds
lock
cmp
shrl
mov
xchg
dec
or
xchg
in
push
shlb
and
pop
ret
outsb
adc
sbb
and
dec
and
pop
jb
xchg
jnp
mov
sub
cs
inc
in
push
out
xchg
js
add
add
scas
and
jecxz
out
adcb
pop
adc
sti
xor
test
in
sarl
je
popa
sub
movsl
xchg
lods
arpl
push
adc
dec
cmpsb
int
je
dec
gs
out
out
jb
inc
mov
dec
lock
hlt
mov
mov
sbb
lock
lock
test
jge
ret
lret
arpl
pop
mov
pop
fcomps
call
divl
pop
cmp
sbb
out
inc
push
ret
mov
lods
test
adc
xchg
pop
call
imull
jp
xor
js
sti
sahf
call
fstpl
sub
rcrb
cli
xchg
test
inc
and
pop
mov
loopne
push
mov
cli
sbbl
sti
add
cs
sbb
and
mov
xlat
add
shll
in
jo
imul
mov
scas
cwtl
xor
ret
ret
or
mov
push
jle
les
jl
outsb
repz
push
cmp
push
sub
mov
jg
scas
xor
subl
ljmp
call
loopne
int3
xor
imull
insb
shld
xchg
outsb
out
mov
movsl
dec
cmp
xor
inc
cmp
mov
aad
js
dec
xchg
imul
rcll
adc
cmp
dec
xchg
repnz
int3
and
pop
pop
les
scas
outsb
sti
ds
pushw
pop
test
scas
addl
stc
aad
mov
pop
fimull
push
inc
fcoml
jo
out
mov
jge
loopne
or
or
jle
idivl
cmpsl
cmp
jp
xor
mull
icebp
stos
pop
adc
xor
aas
fildll
arpl
movsl
imulb
daa
inc
or
sbb
dec
lea
in
pop
and
jnp
lahf
or
bnd
ds
inc
jecxz
ss
cmp
pop
mov
cmc
sahf
mov
ja
inc
sub
out
adc
insb
jl
mov
mov
and
ret
mov
inc
mov
or
andl
sbb
cli
lcall
mov
mov
mov
es
mov
xchg
or
sub
ret
push
lahf
in
jo
call
popa
lea
mov
stos
cs
pop
out
sahf
sub
xchg
xchg
ds
into
in
push
outsl
pop
or
std
mov
xor
jmp
leave
ds
repnz
or
dec
mov
add
scas
icebp
pop
push
xlat
sbb
dec
mov
outsl
ds
pop
fcomi
imul
cwtl
loope
das
inc
ss
mov
or
ret
adc
subl
cmp
movl
lods
mov
xchg
lret
jns
fcmovbe
je
loope
cmpsb
jg
hlt
cs
mulb
data16
inc
inc
jp
xchg
add
je
cmp
xor
push
fisubrl
xchg
dec
or
in
mov
sbbb
leave
in
or
xchg
mov
cs
pushf
sub
mov
mov
xchg
ds
push
add
cmpsb
iret
mov
adc
xchg
add
xor
or
jns
ja
out
mov
lcall
sti
jge
js
inc
rcrl
inc
arpl
cmp
insb
xchg
dec
dec
xchg
push
cwtl
fcompl
mov
inc
or
daa
and
minps
in
sub
lahf
call
lea
fimuls
dec
xor
mov
pop
sqrtps
aad
shrb
adc
pop
cmp
insb
fyl2x
jmp
data16
dec
out
fcmovb
outsb
testl
aam
iret
popa
or
mov
cli
jecxz
movsl
xchg
daa
sub
cli
dec
pop
inc
ljmp
xchg
sub
mov
push
aad
sbb
fcomip
movsl
mov
hlt
rorl
repnz
mov
vmread
clc
rcr
fdivrl
push
xchg
inc
cmp
sbb
lea
cmpsb
mulb
jg
sub
push
cmc
je
scas
mov
ljmp
mov
pop
lds
inc
inc
insb
les
popf
or
bound
jno
mov
adc
mov
fcmovne
mov
scas
shll
or
call
lret
sub
or
mov
in
push
loope
popa
jmp
das
xor
sbb
std
stos
out
loope
jecxz
push
insb
and
cmovbe
cmp
test
ret
inc
lret
shrb
hlt
imul
push
int
fwait
xchg
fsubrl
cmpsb
or
jp
xor
push
scas
ret
mov
pand
pop
sti
mov
sub
lret
sbb
cld
xor
xor
loop
iret
imul
sub
jecxz
arpl
or
das
aaa
into
jno
outsl
and
pop
iret
cmpsb
mov
jnp
enter
xor
lods
cmpsb
cmp
jl
mov
loopne
test
sub
leave
xrelease
xlat
sbb
in
dec
cmp
pusha
jne
daa
inc
xor
clc
fistl
push
mov
mov
sarl
fwait
out
mov
lods
or
mov
add
inc
orb
mov
xor
into
fsubrl
lcall
dec
mov
outsl
aaa
out
xchg
sbb
mov
out
test
pop
lds
push
out
pop
mov
sub
int
mov
push
xor
push
fisubrl
xchg
out
xchg
pop
adc
inc
jne
sub
jne
sbb
nop
lahf
and
insl
paddusb
les
incb
mov
bound
xor
jbe
mov
aad
mov
insb
sbb
into
and
cmp
add
fsubs
fldln2
sbb
int
hlt
mov
adcl
scas
imul
jno
mov
mov
sbb
sbb
cmp
daa
fsubrs
mov
adc
push
add
stos
insl
aaa
stos
pop
int3
arpl
lret
ljmp
mov
je
dec
xchg
mov
jnp
mov
mov
jb
shrb
icebp
pop
push
sub
daa
xchg
push
add
imul
pop
js
jnp
ret
pop
ret
test
je
cmp
cmp
fisttpl
movsl
stos
imul
pop
jbe
dec
or
or
push
mov
loopne
xor
imul
add
fistps
jmp
push
frstor
pop
fdivs
sub
pop
cmpsl
xchg
xchg
push
fisttpl
pop
jns
ljmp
in
xor
sbb
int
mov
pusha
stc
jo
xor
cmp
inc
and
aad
mov
dec
shrl
sbb
cmp
ljmp
gs
push
add
mov
add
aad
ds
inc
push
mov
js,pt
mov
aas
pushf
outsb
mov
call
jmp
out
out
push
dec
or
test
sub
mov
pop
lea
stc
push
xchg
and
or
out
stos
mov
insl
push
sti
cmp
lahf
incl
xchg
dec
cmp
outsl
cvtdq2ps
fcoml
lret
ds
data16
mul
orl
call
mov
cmp
cmp
popa
cmp
test
push
cli
xor
cmp
or
xchg
push
mov
in
sbb
mov
fwait
aas
mov
sub
test
movsl
es
add
out
inc
mov
mov
sub
sub
push
repz
pusha
out
or
fsubrl
addr16
test
dec
sbb
int
mov
insb
mov
push
sbb
int
inc
imul
mov
insb
or
jo
jnp
mov
cmp
mov
dec
test
ret
fldt
daa
pop
xchg
lret
push
sbb
rcrl
and
and
inc
mov
mov
jp
xchg
je
push
je
xchg
repnz
mov
add
loop
mov
sub
xchg
rol
inc
sub
mov
jne
js
sbb
ljmp
mov
pusha
pop
mov
or
enter
repz
ffree
fisttpl
cmp
or
sbbb
push
lret
pop
ret
pop
ds
dec
pavgw
mov
mov
sbb
cmp
fstpt
cmpsb
jbe
sbb
bound
or
daa
into
adc
push
ret
inc
aaa
push
das
mov
mov
fld
lret
lods
addr16
push
stos
jb
push
mov
sbb
les
iret
add
ficoms
js
sarl
pop
cmp
imul
dec
test
push
ss
pop
jnp
lcall
inc
inc
ja
sbb
push
std
push
ret
out
loop
cmc
dec
and
mov
mov
push
mov
je
ss
mov
pop
adc
mov
arpl
pusha
or
scas
add
or
inc
enter
lods
ret
pop
packuswb
jle
ret
dec
push
stos
push
aad
pop
inc
push
loope
imul
mov
out
add
fs
in
or
mulb
lods
push
jo
sti
ret
mov
into
outsb
jae
sahf
mov
mov
mov
lods
xor
lret
aaa
sbb
je
popl
add
ret
mov
fnstenv
mov
cmp
fisubrl
sbb
andl
insb
das
sbb
jb
imul
dec
ret
fidivl
test
mov
clc
push
push
push
out
sbbl
andl
push
jne
mov
xor
outsb
add
daa
cmp
jg
lods
icebp
jmp
xor
cld
mov
mov
pusha
es
fiadds
aam
xor
dec
stos
push
out
cmp
outsb
jl
cmpsb
xor
dec
add
jge
rclb
scas
aaa
or
cmp
inc
inc
push
fistpl
loope
sbb
call
sbb
mov
jb
xor
das
ret
fisttps
mov
mov
cmovl
je
jbe
stos
bound
jmp
lcall
imul
lock
mov
outsl
pop
cmp
jp
stos
mov
insb
jae
mov
jmp
or
je
adc
xchg
inc
mov
es
outsb
and
repnz
jbe
adc
pop
sub
jg
inc
fistps
push
mov
xlat
shrl
mov
add
cmpsb
xor
fcmovbe
lock
rclb
push
mov
pop
cld
imul
mov
shr
xor
insb
pop
loope
sbb
imulb
popa
movsb
mov
dec
cmpsb
fst
push
xchg
sbb
or
xor
push
adc
cmp
jmp
add
cld
xor
movsl
and
dec
mov
sub
mov
and
xchg
popa
sbb
mov
add
aas
sbb
sbb
shll
imul
ret
cmp
loope
frstor
hlt
aas
clc
jecxz
repz
adc
or
out
dec
sbb
imul
sahf
movsb
lcall
inc
mov
pop
push
sahf
mov
rorb
add
and
mov
paddusw
mov
rolb
inc
push
mov
jnp
arpl
jle
sub
dec
fdivrl
orl
jge
push
bound
adc
add
inc
arpl
cmpsl
mov
lock
dec
mov
cmpsb
push
faddl
nop
insl
inc
mov
sub
mov
js
cmp
push
dec
or
negl
mov
xor
scas
scas
xor
loope
or
pop
test
roll
pop
pop
lahf
lds
mov
imul
sti
lea
add
dec
aam
lahf
imul
push
lods
jecxz
lea
outsb
in
into
popf
sub
or
movsb
out
mov
cmp
push
mov
lret
xchg
cmpsb
fnstsw
or
jle
lods
cmpsb
xor
pop
mov
add
mov
fs
fcoms
and
out
scas
nop
add
fucomip
mov
std
rcrl
pop
jp
call
fwait
out
sub
jo
sti
mov
aaa
xlat
cmp
enter
mov
xor
sbb
pop
addr16
popf
or
outsl
add
push
call
push
mov
cs
lods
popfw
cltd
mov
scas
cmp
jmp
imul
add
fldcw
in
roll
cmp
xor
jecxz
push
cli
push
cmp
stos
fs
dec
xchg
xor
lcall
push
cli
pop
adc
ljmp
jecxz
cmp
cmp
aam
push
add
mov
sub
cmp
mov
jb
push
sub
ret
sarl
das
fmuls
push
enter
stc
insb
dec
cmp
jbe
and
xchg
inc
fdivrs
je
in
in
dec
test
lcall
insl
insb
sbb
loope
decl
add
mov
cmp
mov
leave
iret
xor
dec
loopne
jmp
push
and
aad
add
mov
inc
push
imul
ret
fs
in
arpl
scas
ret
daa
pop
aaa
and
mov
mov
fcomp
pop
scas
push
rcrb
dec
push
xchg
aam
insl
pusha
call
fcomps
cmp
pop
push
jge
dec
sarb
ja
scas
jmp
movsb
mov
mov
mov
out
and
enter
pop
push
jl
or
shlb
or
or
sar
loopne
leave
mov
xor
loopne
aad
mov
push
jo
and
ja
sbb
mov
fs
push
cli
jecxz
aam
or
mov
es
sahf
dec
sbb
subb
sub
loopne
int
fsub
mov
push
enter
fdivrs
sbb
sub
sub
lods
fistps
and
out
mov
fstpt
jb
mov
repz
push
xor
cmp
orl
out
lock
inc
test
cmp
and
out
inc
push
in
dec
pusha
cli
sbb
jmp
sbb
jno
arpl
dec
fs
mov
xor
movsl
add
mov
fdivr
adc
dec
loopne
mov
ret
out
stos
sbb
sbb
sahf
xor
in
outsb
or
in
mov
pop
fs
or
mov
dec
sar
aam
maxps
push
sahf
push
xor
pop
imul
xor
jae
jecxz
push
pop
or
mov
imul
repnz
pop
sub
mov
jp
jnp
loopne
push
inc
push
jo
sub
lea
ret
inc
pop
int3
sahf
js
mov
jmp
jmp
xchg
outsb
aam
stos
jo
jnp
pop
pop
scas
test
popa
rorb
inc
clc
loopne
push
sbb
outsl
ret
loopne
neg
jmp
xchg
stos
xchg
pop
js
loope
mov
push
and
pop
cli
je
call
xor
in
jmp
xor
jo
inc
mov
xlat
testb
fs
mov
and
mov
decb
fists
cmpsb
mov
jl
sahf
mov
mov
inc
das
push
mov
xchg
cli
sbb
push
idivl
popa
push
outsl
adc
add
insb
repz
fwait
and
add
jmp
ret
mov
push
cmp
xor
or
aas
inc
arpl
mov
scas
add
add
arpl
insb
or
mov
inc
pop
pop
sbb
pop
cld
and
rcr
and
repnz
xlat
jge
jno
pop
add
xor
cmp
jge
clc
decb
push
sbb
scas
sbb
ret
mov
mov
sahf
call
adc
jg
sbb
test
dec
mov
fucom
xlat
test
adc
jns
jnp
pop
or
insl
bts
jmp
out
xchg
sbb
repz
jnp
mov
call
filds
jb
cmp
bound
jmp
stc
pop
lcall
sub
mov
cmpb
cmpsl
sbb
add
xchg
pop
mov
call
inc
cmp
enter
ja
jge
push
and
push
aaa
movsl
int3
pop
mov
inc
scas
adc
sbb
loop
dec
mov
andl
cmp
cmp
dec
mov
outsb
jmp
sub
or
popa
rcr
pop
test
or
jns
sarb
scas
std
fldenv
ss
xchg
xlat
jno
add
push
popa
mov
or
pop
mov
mov
movsb
add
xor
loop
int
lcall
sbb
pop
and
pop
and
cmp
roll
out
aad
and
icebp
jne
mov
sub
sbb
pop
mov
subl
xlat
push
xchg
jae
sbb
inc
sbb
inc
pop
loope
idivb
add
filds
mov
clc
cmp
mov
cmp
mov
xchg
sahf
mov
push
dec
dec
es
xchg
outsl
je
imul
bound
sti
push
mov
mov
fneni(8087
scas
jae
mov
stos
inc
movsl
shlb
faddl
xacquire
movsl
lds
repz
mov
rcll
fisttpl
clc
js
fisubl
pusha
aam
pop
xlat
cmpsl
xchg
adc
inc
shr
xor
pop
fildll
sub
xchg
dec
js
jbe
jns
sub
insl
insb
pop
pop
jmp
jl
add
lret
sbb
sub
adc
mov
ret
pop
pop
push
movhps
in
add
sub
xchg
jle
jnp
fldt
pop
lret
push
lock
dec
xlat
cmp
xchg
push
push
outsl
icebp
push
sub
fistps
test
insb
out
arpl
sbb
sbb
or
aad
xor
shrl
inc
fstpt
in
xor
out
shll
test
aam
ficoml
mov
scas
rolb
std
cmp
cmp
dec
and
sbb
adcb
scas
jecxz
mov
xchg
cmp
xchg
addps
mov
stos
dec
and
inc
xor
outsb
cmpsb
mov
mov
lea
pop
fnsave
jl
cmp
add
nop
out
imul
push
ds
outsl
xlat
push
pusha
mov
xor
push
test
jo
inc
add
fs
push
daa
inc
jae
xor
movsb
mov
call
insl
add
repnz
ds
pop
xor
leave
or
jne
test
jne
mov
fst
mov
inc
int
xchg
pop
addr16
mov
pop
pusha
pop
adc
mov
iret
fsubrs
add
ljmp
js
jl
mov
fs
popa
mov
aaa
pop
fsubrs
mov
and
int3
js
xlat
hlt
cmc
ret
sub
dec
jnp
mov
cs
fldt
mov
fwait
mov
jg
jmp
ds
cs
hlt
push
xchg
cmp
shll
js
xor
insb
pusha
mov
lea
mov
and
lock
outsb
pop
scas
sbb
jl
push
call
jo
sbb
es
les
ds
fs
mov
sahf
cmp
mov
loop
mov
insl
mov
aaa
push
pop
mov
cwtl
jno
dec
xchg
cli
or
aas
loopne
cs
addr16
popf
std
xchg
incl
or
in
lods
push
fsubrp
sbb
out
outsb
blci
das
jle
push
or
clc
imul
imull
loop
subb
ja
inc
or
pop
jmp
enter
cmpsl
ret
mov
push
mov
mov
scas
jg
pop
mov
jl
xlat
lock
shrb
outsb
jnp
stos
jne
cld
push
dec
lcall
adc
neg
fcomp
mov
mov
and
sub
mov
imul
dec
add
add
lods
xchg
xor
pop
cli
shll
ja
sbb
sub
hlt
inc
outsl
aas
popa
aam
clc
sub
das
pop
mov
js
sbb
mov
or
call
fstps
mov
inc
mov
ret
xor
cmpsb
or
jecxz
ds
sub
scas
scas
or
imul
mov
hlt
adc
cs
mov
data16
scas
nop
pop
or
pop
lahf
insl
ret
adc
loopne
imul
ficompl
jge
fsubrl
add
pop
gs
ljmp
xchg
mov
sbb
mov
xchg
inc
jge
in
orl
cmpsl
push
bound
loopne
pop
push
cltd
cld
inc
nop
xchg
mov
mov
lret
es
loop
sub
jbe
cmp
xor
jge
sti
add
push
aas
push
test
addl
daa
lret
or
cmpsl
adc
dec
aaa
jl
scas
add
dec
pop
jnp
push
cld
fdivs
jbe
xchg
jb
xchg
roll
and
xlat
in
icebp
or
adc
mov
dec
sub
sub
jmp
daa
mov
jbe
ret
lea
hlt
shrl
jns
sbbb
add
mov
push
arpl
in
jmp
cltd
lcall
insb
dec
pop
sub
rorl
pop
and
jmp
pop
dec
adc
push
jne
loope
pop
jbe
sbb
pop
inc
rcrl
loopne
sbb
xchg
sub
pop
cld
loopne
rol
mov
aam
cmp
push
sbb
leave
imul
in
dec
fwait
ja
sarb
jne
aas
dec
adc
shl
repnz
mov
ret
jne
out
adc
adc
pop
rolb
out
add
jl
cwtl
bnd
fwait
leave
or
jno
ljmp
cmp
std
ss
jecxz
repz
call
xlat
xlat
ret
imul
lea
push
push
insl
leave
cmp
inc
xchg
push
jg
ss
fadds
sbbb
inc
ret
cmpsb
movsl
das
shll
sub
cmp
xor
mov
lds
or
cmpsb
push
xchg
inc
iret
stos
xchg
xchg
pop
mov
pop
sbb
stos
jmp
enter
dec
icebp
inc
shl
pop
outsl
lret
orb
or
sbb
clc
push
bound
repz
inc
lahf
cli
push
cmp
push
adc
out
jbe
out
xor
sub
mov
sahf
stc
mov
ret
mov
in
clc
data16
loop
jl
jle
outsl
sti
cmpsl
test
adc
jbe
mov
or
fwait
sti
xchg
mov
mov
xor
jl
insb
or
cmpsb
pop
push
adc
sbb
xchg
cltd
call
fsubrs
mov
or
aaa
jnp
add
push
or
mov
mov
pusha
dec
pop
dec
jne
test
xor
mov
sbb
dec
push
xchg
jb
lods
mov
or
jg
hlt
adc
in
insl
cmp
push
aam
sbb
in
jne
loop
outsl
cmp
xchg
insl
mov
jbe
jo
ljmp
fsubrl
popf
fs
cmpl
dec
cli
and
jg
jge
sbb
sub
jl
inc
sub
xchg
push
cmpsb
ret
dec
jp
test
xchg
in
cmpsb
or
adc
daa
leave
sbb
and
mov
jno
testb
in
in
es
out
push
hlt
pusha
test
xlat
pop
mov
adc
or
test
ja
ss
mov
cmp
cmp
lcall
or
dec
std
add
outsb
psrad
jmp
test
adc
mov
lea
lcall
lds
mov
lret
pop
das
xchg
idivb
arpl
xchg
jge
push
pushf
mov
out
lcall
fidivs
lods
cmp
add
lea
mov
sahf
ret
out
xor
and
jle
mov
insb
insl
movsb
mov
sti
mov
loop
and
jp
jl
pop
rcrl
xchg
pop
xchg
clc
fsubrl
lahf
lea
enter
mov
movsl
push
fsubrl
ret
mov
and
push
xor
insl
pusha
sbb
push
jl
test
imul
mov
mov
mov
arpl
cmp
bound
stc
add
ret
pop
jl,pt
dec
push
and
aam
sub
int
out
add
mov
imul
call
cwtl
push
xchg
pop
mov
ljmp
mov
dec
in
push
jl
cmc
stos
jb
push
add
stos
shll
mov
or
add
aas
cmpsl
insl
mov
add
lods
push
jle
loopne
mov
jae
sahf
pop
addr16
push
push
enter
jmp
popa
xchg
push
outsb
ds
insl
sarb
xchg
mov
addb
fiadds
jnp
hlt
movsl
push
cmp
jmp
fmuls
fdivr
jae
icebp
js
loope
movl
fbld
inc
cwtl
fcoml
add
and
fstp
mov
add
je
cmpsl
push
xchg
aad
mov
sub
std
in
add
lds
sbb
mov
aam
addr16
mov
sbb
xor
mov
aaa
sbb
leave
mov
insb
sbb
jne
cmp
inc
inc
js
out
repz
divl
clc
push
and
mov
jge
les
dec
pop
mov
cmc
fdivrs
and
out
stos
scas
mov
cmp
add
cld
mov
adc
inc
gs
iret
fidivrl
sub
nop
push
sbb
jle
and
lret
iret
mov
out
mov
dec
in
and
lcall
mov
sub
insb
das
xadd
sub
pop
fs
imul
rclb
jmp
iret
dec
mov
rclb
mov
jne
cmp
mov
sti
mov
xor
pushl
movsb
mov
ret
mov
push
jecxz
arpl
push
lret
sub
fildll
lcall
setae
mov
pop
dec
cmc
insb
rcr
cmp
out
or
icebp
sbb
sti
mov
movsb
out
lods
lods
xchg
mov
imull
loopne
pop
ffreep
ja
imul
jae
mov
jmp
add
out
je
add
outsb
add
dec
sbb
scas
lea
ret
loop
dec
mov
sti
mov
je
sub
hlt
jg
jb
aas
jno
jns
lahf
ficomps
pop
dec
lcall
jle
add
pop
mov
les
call
xchg
mov
loope
popf
or
pop
fucom
cmp
sbb
mov
hlt
lret
dec
pop
mov
jecxz
mov
pop
ffreep
cmp
jne
jle
aaa
sub
or
jecxz
call
cmp
jp
wbinvd
xor
xlat
and
sub
sbb
aas
mov
and
sarb
push
frstor
stos
or
sti
pop
inc
mov
jne
and
dec
jo
xor
scas
jecxz
cmp
insl
cmp
in
mov
rcrl
cmp
in
out
adc
push
stos
push
outsl
ss
mov
jo
int3
jb
and
push
iret
cmpsl
pop
aad
jcxz
test
mov
add
xlat
scas
pop
cmpsb
cmpsl
push
scas
and
push
sbb
xchg
outsb
out
jmp
pop
pop
pop
dec
adc
jnp
mov
popa
mov
fnstenv
fcomi
xchg
rcrb
addr16
in
or
call
mov
jbe
xor
mov
div
sbb
outsl
imul
push
aam
sub
ds
aad
jge
mov
pop
scas
sbb
and
mov
mov
jecxz
test
pop
notl
pop
loopne
adc
xlat
jns
jmp
imul
adc
mov
jl
loopne
xchg
lret
mov
std
loop
add
jmp
rcr
add
xor
aam
ljmp
xchg
pop
sbb
or
adc
cs
jmp
enter
fcomps
rcrb
aad
cs
sub
lock
cmpb
mov
aas
insl
pop
stc
cli
adcb
clc
je
test
sbb
adc
push
daa
in
and
or
scas
jecxz
aaa
dec
pop
clc
add
mov
dec
out
mov
int3
lret
or
loope
fbld
jnp
dec
cld
add
fs
mov
sbb
leave
shrb
outsl
sbb
mov
movsb
pop
sbb
sbb
push
sbb
mov
jns
pushf
dec
iret
adc
ss
cmp
inc
jl
rorl
xor
orb
push
jno
pop
lds
sti
jb
aas
inc
pusha
dec
add
cltd
lods
push
or
mov
mov
jnp
mov
xor
jmp
in
fcmovnu
xlat
or
fistpll
cltd
int
scas
cs
pop
pop
sti
sahf
mov
loope
stc
in
rorl
xor
mov
push
fdivs
aad
mov
cmc
push
ja
xchg
or
sarl
outsb
pop
pmaddwd
or
ss
and
sbb
stc
lods
in
pop
or
out
xor
pop
or
imul
outsb
mov
outsl
outsl
add
push
mov
mov
cmp
cmp
cmp
push
sbb
fisttps
lahf
push
jnp
sub
cmpb
mov
xor
mov
pop
rcll
mov
ss
imul
ds
cmp
mov
das
test
xlat
jne
mul
inc
jo
or
fiaddl
xlat
insl
outsl
lret
or
pop
jnp
pop
ss
rcrb
nop
jl
gs
iret
rol
idivl
xchg
push
mov
fmull
mov
push
cmp
add
mov
add
adc
aam
int
xchg
arpl
xor
inc
insb
mov
pop
lods
push
mov
xor
lret
scas
and
aad
cwtl
movsl
cmpsl
loopne
mov
orl
xchg
sub
mov
pushl
or
inc
xchg
adcl
xchg
inc
fwait
out
jecxz
mov
imul
jecxz
arpl
xchg
xchg
or
mov
repz
jecxz
mov
and
lret
cmp
iret
out
ja
idiv
inc
cvtps2pi
es
jle
testl
rorl
cld
cmp
xor
lods
lret
add
ja
out
adc
das
mov
sbb
dec
mov
jle
xor
cmc
xor
and
shl
dec
xor
push
outsl
ss
jb
dec
cmp
jmp
xor
sub
cmp
scas
and
xor
lds
mov
js
pop
pop
mov
sbb
je
add
xchg
adc
and
sbb
pop
stos
adc
pop
mov
inc
sub
outsl
mov
mov
mov
arpl
sub
aaa
divl
sti
mov
pop
pushl
jae
dec
outsb
dec
shlb
sbb
xchg
cmp
push
jb
lret
sbb
cltd
inc
push
adc
sub
mov
aaa
insb
and
cmc
or
outsl
mov
mov
mov
or
adc
push
or
stos
or
cltd
popa
pop
bt
xchg
out
cmp
repz
sub
mov
int3
ret
pop
push
test
push
add
movsb
add
icebp
sub
cld
push
sbb
or
mov
scas
gs
xchg
out
popa
mov
call
mov
sub
inc
mov
icebp
cmc
test
mov
addl
inc
inc
mov
addl
ss
mov
mov
das
rol
cmp
scas
xorl
or
test
jb
lock
sahf
cmpsb
pop
sub
lcall
xchg
dec
leave
xchg
mov
call
out
pop
mov
pop
inc
rcrl
sub
popf
jnp
fbld
push
imul
xchg
inc
mov
push
ret
inc
inc
int
dec
cmp
icebp
jecxz
out
mov
adc
push
loop
xor
insl
mov
sbb
popa
xchg
shrb
mov
xor
dec
and
xchg
push
add
std
pop
mov
xor
fsub
outsb
sbb
insb
push
imul
or
mov
in
and
repnz
fistl
loope
ss
inc
pusha
inc
mov
xor
and
sub
call
fcoml
sbb
popa
xor
pop
ret
roll
lock
xchg
push
in
push
clc
out
xlat
sub
xchg
mov
dec
pushf
and
les
lcall
dec
icebp
pop
je
shrl
mov
pusha
cmp
imul
ja
fcmovb
cmpsl
mov
out
stc
or
cmp
sbb
out
jnp
sub
dec
adc
arpl
mov
in
sub
outsb
jmp
jnp
imul
out
mov
cmp
sub
outsl
inc
pusha
daa
mov
jge
dec
popa
ljmp
pop
frstor
sub
mov
cltd
xchg
push
pop
fidivrl
push
roll
jmp
stos
pop
popf
lret
test
sbb
xchg
xor
je
test
sbb
dec
add
jbe
and
lods
add
mov
ret
stos
push
sbb
rcll
mov
out
mov
dec
stos
dec
adc
and
ss
xor
or
xchg
cwtl
lods
insl
mov
xorl
jge
jnp
dec
cmp
push
pushf
cmp
cltd
shll
sbb
xchg
ss
daa
or
push
ret
cmp
pop
sub
pop
mov
fst
nop
imulb
mov
frstor
test
pop
adc
loopne
jmp
jne
and
jp
mov
xchg
in
sub
push
adc
popf
addl
pop
push
cmp
lea
add
push
rclb
jo
and
or
adc
stos
call
or
in
xchg
mov
or
mov
insb
cmpsl
dec
ja
adc
lds
mov
les
cmp
ret
and
subb
addr16
sub
insl
daa
fcmovnu
pop
mov
icebp
sbb
sub
inc
cld
aam
inc
xchg
mov
jns
pop
fwait
int3
xor
dec
das
push
ret
into
mov
lahf
mov
pop
inc
filds
dec
pop
enter
push
cmpsb
mov
rcrb
inc
mov
mov
rclb
sub
shlb
cmc
rcrl
jb
push
push
mov
ret
sub
aad
mov
jle
add
jno
push
xor
inc
stos
cmp
sbb
cmp
mov
fdivrs
inc
orl
mov
add
xchg
iret
mov
push
icebp
sbb
fistpl
pop
addr16
stos
bnd
pop
push
aaa
pop
mov
aaa
jne
fldt
xchg
ja
sub
lea
and
mov
outsl
into
xchg
cmc
or
int
in
xchg
fdiv
call
daa
ljmp
push
mov
sbb
inc
pop
mov
jecxz
jmp
push
sub
ret
les
or
push
ja
addr16
fisttpl
xchg
mov
sarl
idiv
inc
imul
jb
mov
xchg
cmp
inc
inc
and
inc
lcall
xchg
dec
xchg
inc
push
or
or
adc
leave
mov
mov
bound
mov
rolb
movsl
mov
push
xchg
ret
and
push
mov
pop
into
add
leave
push
xchg
inc
xchg
mov
aam
pop
lea
add
cmp
cld
rcll
or
cmpsl
xorl
mov
in
sbb
jge
mov
popa
sbb
or
fdivr
push
outsb
fwait
andl
rclb
fs
movsl
add
xchg
loope
test
pop
addr16
lea
scas
in
xor
jbe
loope
sub
sbb
jg
dec
jg
fstpt
ficompl
daa
mov
cmp
ds
add
cmp
push
hlt
adc
aas
std
jmp
imul
adc
mov
push
cmpsl
rclb
daa
bound
jle
adc
fdivl
icebp
out
cmovle
xor
loopne
push
xor
cmc
decl
scas
adc
fs
pop
pop
ret
mov
mov
cmp
mov
fsubs
insl
cmp
ja
sbb
xor
xor
adc
or
sti
mov
test
pop
jge
pop
xchg
jle
repz
es
push
enter
jle
ja
cltd
sub
cmp
ffree
or
or
jp
xchg
mov
sbb
das
rol
or
cmpsb
imul
ss
xchg
jbe
sbb
rolb
in
imull
lret
push
fdivs
adc
shr
repz
arpl
ja
shr
mov
fistpl
sbb
ficoml
adc
mov
imul
mov
and
lahf
outsl
and
pop
shl
xchg
lods
jae
xchg
cmpsl
pusha
mov
divb
js
sbb
icebp
mov
mov
rcrl
fsub
sbb
clc
icebp
or
jnp
aad
mov
test
push
aam
ret
adc
dec
paddusw
jmp
jmp
ja
add
jp
xor
fdivl
dec
fdivl
mov
or
cmp
shll
jbe
mov
aam
es
int3
cs
cli
sbb
add
shlb
xlat
cmc
adc
mov
scas
sbb
lret
rcll
lock
adc
sub
call
mov
cmp
jbe
packsswb
pop
cmpsb
push
cs
mov
leave
in
jg
clc
test
insl
js
insl
ret
loope
movsl
fdivl
mov
mov
in
dec
ss
es
jmp
add
inc
lock
sbb
xchg
imul
outsl
pop
or
cmp
sub
jnp
notb
mov
mov
hlt
mov
jnp
pop
xchg
cmpsb
rol
pop
rol
imull
cld
js
aaa
mov
jmp
out
and
les
aad
popf
ss
mov
pop
jb
div
fsubrs
hlt
inc
ljmp
lods
cli
enter
mov
mov
inc
cmc
push
inc
sub
shll
out
xlat
in
fcomps
jmp
adc
mov
gs
sahf
sbb
ja
pop
mov
mov
push
add
ds
ds
and
sbb
add
sahf
jp
mov
and
pop
shll
outsb
mov
out
test
push
jno
inc
rclb
push
outsl
outsl
lock
call
inc
jnp
jmp
lret
sbb
or
fnstsw
js
mov
jno
out
fcmovu
inc
mov
xor
and
and
xchg
fldcw
push
iret
jecxz
mov
pcmpgtw
xchg
dec
xlat
cld
mov
cmpsl
mov
jb
push
dec
mov
dec
dec
lods
xor
dec
frstor
mov
mov
jno
pop
jp
aas
clc
jne
sub
enter
jno
fsubrl
call
bts
sbb
std
xor
and
lock
jae
testb
cvttps2pi
sbb
inc
cmpsb
mov
adc
push
es
xchg
test
jo
inc
sub
jmp
mov
pop
ret
pop
fistpl
in
xchg
inc
pusha
mov
adc
sbb
jae
pop
dec
scas
movsl
inc
mov
in
rcll
sbbl
ja
push
mov
cmp
test
mov
bound
mov
mov
dec
or
add
xor
rcll
pop
lea
in
je
adc
nop
pop
add
pop
mov
bnd
mov
and
pop
inc
je
cli
imul
hlt
inc
mov
leave
jo
fmull
pop
jo
sub
xorl
jmp
adc
sbb
mov
mov
loop
cld
sbb
sbb
fs
clc
sub
sub
rorl
xchg
mov
das
stc
testl
mov
inc
push
cmp
pop
jmp
sahf
call
jns
xchg
xor
stos
xor
xchg
add
adc
cmp
jno
ret
mov
pop
cmp
cwtl
scas
pop
mov
mov
push
xchg
xor
jnp
int3
xor
xlat
inc
call
shr
xchg
xor
xchg
cs
push
ljmp
pop
cmp
fdivl
push
sbb
fstpt
rcl
ja
mov
fildl
out
leave
xor
xchg
add
xor
mov
insl
xor
jo
pop
imul
lahf
cmpsl
sub
out
jbe
repnz
or
outsb
pusha
out
lea
sbb
jmp
stc
xchg
cwtl
push
dec
decb
pop
cmc
lret
jo
fstpl
aad
fisubs
sbbb
imull
into
call
xorb
bnd
cmp
mov
test
repnz
and
ja
push
jbe
daa
icebp
test
clc
add
mov
push
lret
scas
fcomps
push
cmp
int3
out
sbb
sub
mov
jg
cld
ret
xor
iret
stos
mov
aam
shll
lret
fistl
mov
dec
push
jecxz
shlb
mov
shll
ss
clc
or
outsl
popa
mov
enter
add
lea
scas
lock
push
stos
dec
loope
xor
push
icebp
roll
dec
shll
stos
and
fs
imul
jg
sarl
xchg
sbb
mov
stos
sub
iret
inc
sti
clc
jno
sbb
mov
in
cmp
mov
adc
jno
int
outsb
mov
jb
shlb
mov
dec
in
pand
ss
std
data16
sub
shrl
xchg
test
mov
adc
hlt
mov
xchg
lock
ss
lahf
dec
aas
jo
ss
scas
jecxz
push
sub
pop
jns
jle
call
jmp
clc
outsl
sub
test
int
pop
jp
ss
mov
ret
mov
cmp
mov
out
cmp
push
sub
testl
mov
jle
xor
add
or
movaps
mov
sbb
adc
cmp
inc
je
andb
sti
test
mov
ret
jecxz
xchg
jmp
and
scas
mov
cmp
pop
mov
push
aam
push
icebp
mov
aam
mov
pop
ljmp
mov
insl
mov
mul
pop
insb
mov
in
mov
jne
mov
xor
shlb
mov
and
rcl
or
jne
call
ss
fdivs
orb
add
mov
sbb
sub
mov
pop
sbb
mov
sub
xor
adc
lods
or
jmp
jmp
push
mov
aaa
add
lcall
pop
xchg
rcll
mov
sbbl
push
push
push
sbb
fsubrl
scas
fldt
jno
pop
movsb
sbb
ds
xlat
aaa
icebp
jge
and
mov
sbb
not
clc
mov
push
adc
push
inc
xor
cmc
cld
xor
and
mov
je
fildl
in
into
inc
cwtl
xor
jae
in
jbe
movsl
xchg
cmp
push
inc
ret
mov
lcall
out
mov
jge
pop
inc
xlat
push
in
dec
and
push
mov
aaa
negb
lock
shlb
out
loopne
mov
and
push
testl
lods
pop
adc
fstpt
xchg
xchg
nop
xor
aam
mov
cmpsb
ds
scas
adc
xchg
pop
rorl
cmpsl
or
jle
rcll
mov
or
cltd
xchg
stos
jae
cs
cltd
adc
in
mov
in
sbbl
adcl
in
mov
fldl
popf
test
movsb
std
into
lods
outsb
nop
cmp
sub
jbe
sub
pop
in
push
ds
xchg
mov
sarl
loope
cs
xor
rolb
xchg
push
mov
hlt
add
test
ljmp
lret
lods
pop
dec
dec
sbb
ret
cmpsl
xchg
negl
fcmovnu
clc
cmc
lds
jmp
popl
pop
push
insl
adc
je
jae
push
fcmovne
aaa
out
loopne
jmp
into
xor
inc
xor
inc
rcll
lock
xchg
in
or
cmp
das
push
pop
insb
daa
and
xchg
jmpw
pop
xchg
sarl
idivl
inc
cmp
push
or
xchg
mov
or
and
cmc
fdivrl
cmpsl
icebp
sbb
cmp
jno
mov
add
test
test
jbe
lcall
lock
dec
adc
xor
scas
stos
test
dec
xchg
cs
or
xor
mov
in
pop
rcll
test
dec
xor
out
ja
imul
out
mov
aaa
pmaxub
adc
and
xchg
mov
movsl
pop
loopne
dec
cmc
clc
rol
and
daa
lret
mov
rorl
fdivr
je
push
ljmp
test
sub
push
outsl
insb
mov
leave
sbb
test
inc
pop
jno
sub
movsb
jbe,pt
jl
xchg
jp
lods
xor
mov
in
cmp
fimull
das
fwait
sub
cmpsb
mov
jo
rclb
ret
pop
loop
dec
jge
add
cmp
mov
or
sbb
call
aad
call
cmp
inc
mov
cmpsb
xchg
ja
push
jne
imul
mov
insb
adc
imul
stos
cli
in
dec
pop
mov
cmp
stos
jo
fstpl
hlt
icebp
arpl
add
out
outsl
rorb
push
xor
clc
mov
negl
xor
loop
cmp
mov
inc
mov
push
mov
aas
sub
fmulp
mov
pop
mov
in
mov
lret
out
sbbl
insb
rcr
cltd
cmpl
shll
repnz
icebp
mov
xor
bound
push
mov
sbb
fbstp
ljmp
clc
mov
and
sbb
lsl
push
mov
ret
in
stos
cmp
xor
mov
dec
jb
push
pop
push
js
jae
push
xchg
mov
adc
fdivrp
scas
gs
outsl
xlat
pop
or
jnp
or
jno
imul
adc
add
jns
dec
jne
loopne
outsl
call
scas
xor
sbb
sbb
jo
mov
lods
addl
loope
cmpsl
sbb
push
fdivl
aaa
xchg
cmp
shrb
sub
ret
in
add
aam
out
andps
das
xlat
ret
pop
icebp
push
int3
jl
push
push
or
in
xchg
jns
or
into
arpl
xchg
push
cmp
repnz
push
xchg
sub
sahf
inc
pop
cld
xor
mov
sub
pop
xchg
hlt
push
mov
leave
cmp
mov
out
cmp
mov
jg
jp
mov
mov
pop
flds
mov
cs
pushf
push
cmp
insb
mov
shl
fildl
repz
idivl
adc
inc
xchg
adc
insl
shlb
jnp
lret
mov
push
xchg
push
das
ss
xchg
xor
mov
nop
add
pop
shr
or
xchg
dec
insb
inc
mov
fistpll
adc
xchg
fs
push
fcmovu
mov
int
mov
lock
jae
and
pop
divb
mov
stos
sti
shl
rorb
or
je
cmp
cld
cmpsb
dec
push
inc
or
xchg
faddl
fdivl
test
push
pop
pusha
push
call
dec
test
scas
adc
sub
aad
andb
std
cmc
sarb
adc
mov
lds
aad
mov
ds
inc
jno
jg
push
fdivs
jo
mov
inc
jo
enter
setno
cld
mov
insb
xchg
leave
xchg
mov
mov
fimuls
hlt
mov
mov
lea
mov
insl
jmp
outsb
sub
out
jp
and
pop
sbb
js
out
pop
outsl
sti
das
xchg
push
jge
dec
movsl
fwait
inc
outsb
and
cmp
and
adc
lds
push
iret
push
jmp
addr16
cmp
jmp
pop
aaa
jecxz
scas
push
out
fbstp
imul
lods
not
das
and
pop
push
imulb
daa
inc
or
out
sub
sbb
or
mov
jl
and
repz
ret
sahf
or
out
inc
mov
mov
bswap
push
cmp
push
mov
stc
scas
jne
mov
jle
adc
push
inc
xchg
jge
ret
ret
push
cmp
fisubs
js
in
xchg
lock
jbe
or
ja
mov
xchg
data16
pop
cmp
sbb
xchg
loopne
icebp
aas
test
xor
cmp
jecxz
jmp
inc
shrb
add
dec
add
or
inc
adc
add
lock
add
filds
sarb
xchg
popa
mov
adc
scas
xor
das
push
je
jge
or
arpl
mov
cmc
insb
cmp
mov
clc
sbb
ja
lods
loope
scas
jne
pop
testb
xchg
adc
cmc
mov
insl
cs
lock
mull
jae
mov
test
mov
call
scas
gs
daa
pop
imul
fldt
cwtl
je
pop
xchg
shll
jp
adcb
xor
lahf
outsl
or
emms
testl
enter
add
or
pusha
push
mov
iret
inc
adc
in
pusha
dec
mov
out
arpl
gs
test
push
add
jnp
bound
imul
rclb
das
outsb
add
xor
mov
test
call
and
cmpsb
and
jno
mov
leave
cmpsl
push
push
pop
push
cs
cmc
jne
dec
mov
mov
add
inc
imul
push
jmp
jnp
iret
movsb
dec
rol
ret
aas
jge
jo
loopne
mov
sub
imul
cmpsb
mov
push
sbb
mov
jns
inc
enter
push
ss
mov
push
fidivs
popa
call
stc
pop
fiadds
jg
int3
sbb
inc
pop
jnp
xchg
data16
mov
lock
mov
push
stos
out
xlat
add
sub
xlat
sbb
call
shll
mov
xor
fcomp
mov
cmp
and
jnp
jbe
nop
gs
dec
or
mov
or
ret
shll
loop
xchg
jns
imul
and
push
test
hlt
das
mov
in
cs
and
sub
pop
fisttpl
dec
xchg
mov
add
sub
inc
scas
push
popf
fsubrl
sarl
mov
and
and
adc
mov
add
mov
sbb
data16
pop
mov
mov
sarl
fcmovnbe
xchg
aad
lds
pop
mov
sub
insl
insb
test
imul
pop
cli
mov
push
out
sti
sbb
lds
imul
sub
push
lods
sahf
iret
leave
pop
push
or
lock
inc
or
mov
add
mov
or
in
fs
and
dec
frstor
cmc
icebp
pop
mov
pop
dec
call
imul
mov
xor
pop
inc
and
push
inc
jmp
jecxz
clc
jo
mov
xlat
xchg
inc
sub
out
inc
decl
mov
adc
mov
stos
les
clc
aam
push
xor
jge
add
pop
idivl
add
les
mov
aam
lods
add
jnp
popa
scas
adc
loope
jnp
mov
fsts
dec
sti
sbb
inc
fwait
imul
sbb
rcll
insl
mov
test
out
mov
mov
add
jne
insl
pop
push
hlt
mov
bnd
sbb
adc
ret
mov
mov
iret
push
lock
and
ret
cld
inc
lods
sbb
je
cmp
in
jne
mov
mov
mov
repz
shrl
mov
scas
xlat
rclb
movsl
in
mov
pop
daa
mov
loop
out
jne
sub
ret
dec
ret
inc
xlat
jo
addb
xor
inc
fldl
test
cmc
xor
orl
push
pop
inc
fisttpll
adc
mov
ja
dec
pop
outsb
or
cmp
aam
jecxz
mov
shll
hlt
push
enter
and
jmp
mov
add
cmp
pop
movsl
clc
xchg
cmpl
sti
orb
mov
mov
insl
fwait
add
sti
cs
outsb
imul
lret
dec
jl
inc
in
push
push
jg
leave
mov
je
push
sbb
aas
out
mov
out
inc
test
ret
xor
lock
xor
icebp
mov
push
popf
xor
out
mov
inc
cmc
sbb
jbe
xor
out
cwtl
test
pop
jl
in
add
xor
ret
popa
dec
aam
mov
mov
popa
or
or
stos
xor
pusha
out
mov
inc
scas
adc
into
mov
dec
cmpb
insl
mov
and
cmp
std
mov
cmp
and
pop
rcr
push
push
sbb
mov
dec
add
cmpsb
pusha
jp
pop
outsb
mov
mov
add
and
xor
shlb
les
fldenv
ficomps
loop
call
lds
mov
cld
jge
and
dec
sub
addb
int3
dec
icebp
mov
stc
and
push
fbstp
sbb
pop
pop
inc
sub
test
lcall
dec
xor
xchg
ror
lock
push
shll
test
sub
mov
addr16
sbb
rcrb
push
mov
sti
aam
adc
imul
push
imul
ljmp
mov
leave
jo
sbb
daa
mov
lods
cmc
mov
xchg
push
mov
mov
pop
dec
xchg
dec
adc
ret
ret
push
jmp
fistpl
stos
mov
js
rcll
lock
push
scas
lcall
or
cmpsl
ja
cmpxchg
in
lods
ret
popf
push
mov
push
dec
sbb
ds
push
stc
mov
test
pop
int3
xchg
mov
dec
insl
pop
sbb
dec
clc
xchg
adc
add
mov
push
and
aad
imul
imul
push
pop
out
or
gs
dec
dec
adc
and
shr
jbe
mov
mov
and
jo
pop
sub
xor
test
xchg
scas
test
call
jns
push
dec
xlat
pop
je
dec
lret
cld
repnz
xchg
and
wbinvd
or
sbb
cmp
xchg
jge
sbb
es
add
mov
mov
imul
cmp
cmpsb
imul
fstpl
sahf
push
push
lds
inc
dec
jge
mov
cmp
sbb
xor
add
push
ss
and
out
test
stos
arpl
push
mov
xchg
inc
or
pushw
ret
cmpsl
sbb
jnp
xchg
ja
int3
mov
sbb
mov
mov
clc
sub
and
lahf
loop
outsb
sub
loopne
cmp
mov
push
and
xchg
idivl
scas
ror
lcall
aam
xor
inc
xlat
aam
pusha
cmp
xchg
jl
sub
in
js
scas
mov
sbb
jl
mov
sub
orl
jecxz
shll
inc
mov
in
andl
push
jno
dec
das
lock
outsl
cmp
mov
add
cmp
cmpsl
xchg
cmp
pop
test
push
call
clc
push
jl
add
lock
out
call
cli
and
scas
mov
imul
ds
cmp
dec
jecxz
call
vpcmpgtb
sbb
inc
ljmp
out
mov
cmp
pop
push
jp
mov
mov
add
pusha
cmp
mov
xchg
cld
sub
out
daa
les
xlat
mov
xchg
xor
jb
jle
fisttpll
nop
lret
mov
lock
jecxz
add
andl
mov
negb
shrl
xchg
jmp
xlat
sub
imul
pop
sarb
add
push
sbb
insb
stos
xchg
push
mov
sbb
ss
jge
xchg
enter
jne
aaa
out
mov
push
inc
lahf
hlt
sub
cld
push
push
or
or
push
add
mov
or
pushf
push
arpl
inc
call
imul
jge
shll
mov
mov
sbb
test
mov
js
ret
pop
dec
mov
js
push
daa
dec
inc
iret
nop
pusha
scas
jo
sti
jb
mov
mov
mov
mov
mov
ret
cmp
lret
xor
data16
sbb
pop
or
ret
jbe
je
adc
in
mov
adc
mov
add
inc
dec
mov
je
loope
arpl
rol
pop
dec
mov
subl
lret
dec
popf
xchg
mov
jmp
cs
daa
hlt
sti
add
mov
ja
sbb
sbb
xchg
mov
mov
sbb
aas
rcrb
xlat
ja
pop
sbb
jge
mov
repz
dec
sbb
rorb
mov
insb
xchg
lcall
lea
and
fldcw
insl
mov
lock
adc
and
outsb
cmp
inc
js
mov
leave
cmp
fs
sub
ja
loop
jmp
sbb
loop
cmc
imul
inc
mov
arpl
jne
out
rclb
rcll
push
lods
or
test
xchg
pop
pop
mov
adc
lock
xor
adc
stos
dec
adc
fdivrs
adc
jmp
clc
icebp
or
adc
xchg
in
sbb
rclb
add
jecxz
or
jge
and
dec
imul
jmp
lcall
inc
stos
add
mov
xchg
push
sti
or
insl
ljmp
mov
mov
sbb
enter
fmulp
fldcw
mov
fwait
hlt
push
paddusw
cmpsb
pop
lock
inc
insb
mov
adc
jge
gs
jmp
addr16
fidivl
ret
xor
sub
fnstsw
sbb
daa
mov
daa
inc
ds
mov
jp
iret
add
inc
mov
daa
cmpsb
inc
pop
imul
xchg
mov
add
mov
cld
sbb
mov
or
fwait
mov
dec
sub
push
pop
inc
mov
scas
push
fs
mov
mov
inc
je
sbb
adc
pop
mov
inc
idivl
pop
iret
jo
aam
push
or
call
sub
imul
clc
cmp
mov
dec
arpl
mov
sbb
xchg
mov
add
push
pushf
jno
push
out
stos
push
mov
frstor
cmp
mov
mov
inc
or
fucom
inc
xor
lahf
das
mov
xlat
jne
or
test
dec
mov
jo
shlb
in
je
lds
repnz
mov
out
push
repnz
lcall
in
rclb
rcrb
rorb
mov
psraw
call
mov
push
mov
jb
pop
js
cmpsl
cmp
push
pop
popf
add
fwait
sahf
or
xlat
rolb
or
mov
pop
shrl
mov
push
cmp
je
lock
aam
test
mov
outsb
push
lock
sub
jecxz
adc
adc
and
lds
outsl
sahf
inc
and
es
lods
jecxz
jle
movsl
push
rorb
jbe
mov
jae
subl
inc
rorl
jge
mov
ret
jg
pop
inc
std
xchg
or
ret
pop
imul
iret
popa
out
fnsave
mov
popa
js
xchg
push
xlat
insb
pop
inc
icebp
mov
sbb
inc
cmp
adc
mov
je
cli
mov
sub
cli
jp
mov
adc
and
and
xor
push
pusha
jnp
jb
jo
mov
sarl
jle
mov
sub
xchg
sti
jae
dec
sti
inc
es
lock
jb
jo
loope
scas
mov
lcall
jp
push
rorl
scas
lock
mov
imul
dec
test
jns
bound
jmp
testl
popf
leave
test
cli
xor
cmp
cltd
mov
sub
jne
add
add
dec
sbb
std
imul
and
xchg
pop
ja
rorl
scas
cld
ja
sbbl
fildll
std
movl
mov
loope
xor
out
cwtl
cmp
sbb
or
test
imul
andb
sahf
sarb
xchg
lock
aam
scas
adc
jne
jl
fs
mov
icebp
xchg
adc
push
leave
outsb
lcall
sub
jmp
popa
addr16
xchg
xor
stos
or
mov
stc
aad
loopne
jno
adc
sbbb
and
adc
fcomi
stos
cmp
push
lods
stos
sbb
outsl
xlat
popf
mov
pusha
into
and
adc
or
mov
imul
int
mov
mov
push
daa
jbe
xchg
jae
setb
scas
cmpsl
push
loope
scas
pop
lcall
jecxz
xchg
pop
int3
int3
icebp
pop
mov
loope
int
dec
sub
idivl
xor
xchg
jo
inc
inc
ja
adc
mov
call
cmpsb
mov
or
imul
jnp
mov
xor
xchg
sbb
xchg
or
jp
jl
call
sbb
insl
sbb
sbbl
inc
jge
movsl
or
call
pop
outsb
push
lcall
lea
xchg
or
xchg
repnz
xor
adc
mov
out
lock
fnstenv
pop
aad
filds
jl
sbb
rorl
mov
aas
cld
cmpsb
out
out
jns
js
pop
pop
popa
loopne
cmp
sub
adc
stos
mov
loopne
mov
add
clc
cmp
clc
shlb
push
adc
pop
lcall
or
sti
or
jl
sbb
push
aaa
sbb
in
mov
pop
pop
sarl
mov
decb
xor
and
enter
mov
push
dec
inc
arpl
push
add
or
jb
or
jbe
sbb
jge
mul
sbb
in
ficompl
xor
out
inc
push
lcall
ljmp
lcall
fwait
popf
int
pop
cmp
dec
inc
loope
loopne
aaa
mov
jo
sbb
imul
test
and
faddp
adc
mov
cmpsl
in
xor
test
sbb
jno
xchg
cmp
into
in
mov
in
push
inc
cmp
dec
fidivs
icebp
rcrl
gs
push
xor
sub
rol
adc
jp
pop
pop
iret
cmpsb
pop
into
into
rcl
aad
jmp
adc
cld
lcall
or
repnz
mov
div
push
pusha
mov
in
out
scas
jnp
in
dec
and
dec
inc
lods
cmpl
test
cmp
mov
cmpsb
sbb
stos
push
mov
mov
call
ret
scas
jge
and
mov
std
rcrb
stos
or
mov
ja
sbb
iret
stos
adc
scas
ret
std
mov
sahf
dec
mov
mov
sti
and
mov
lds
pop
jle
xchg
and
ljmp
int3
mov
movd
test
roll
push
and
movsb
push
outsl
test
imulb
or
mov
int
or
addb
mov
ret
fwait
cltd
loop
xor
in
dec
loope
lock
inc
xor
jnp
ss
cwtl
jbe
rorl
xchg
push
scas
pop
rorl
jne
sub
lods
bound
xchg
sbb
and
pop
js
sarl
je
mov
mov
or
imul
lahf
mov
dec
lods
imul
pop
stos
cmp
insb
cmp
cmp
or
dec
and
jmp
dec
dec
push
out
sbb
insl
mov
loope
mov
xor
jmp
sti
push
cmp
lret
mov
out
push
jp
add
js
xchg
push
mov
pop
outsl
mov
aad
loopne
xchg
jecxz
xor
inc
mov
or
xor
xor
cltd
mov
mov
xchg
mov
int3
insb
int
and
popf
xchg
pushf
lock
dec
daa
outsl
xchg
jns
ret
shl
add
shll
xchg
arpl
xlat
shrl
jo
push
lds
andb
adc
jl
sahf
mov
sti
mov
cld
push
lock
adc
shlb
inc
cmp
iret
push
fcmovbe
inc
xlat
movnti
push
jecxz
xchg
btc
jecxz
scas
mov
sbb
dec
je
and
dec
cmp
insb
mov
subl
mov
rcr
icebp
push
dec
mov
xor
push
jmp
xchg
andb
jae
sub
mov
and
aam
fistpll
movsb
or
jbe
les
jl
rorb
cmpsb
sub
lret
insb
pusha
jnp
xchg
or
orb
adc
adc
mov
sub
mov
divb
inc
inc
xchg
mov
clc
cli
call
pop
imul
lods
sbb
sub
mov
and
dec
sbb
jno
sub
fisubl
mov
aaa
add
stos
jne
cmpsl
jmp
in
add
adc
popf
jp
lods
test
mov
daa
jb
cmp
pop
pop
cmp
xlat
rcrb
clc
fbld
pop
fstpt
sub
push
out
in
push
pop
outsl
test
dec
mov
mov
ret
pop
mov
ss
sbb
and
pop
faddl
cmp
out
jne
xor
jb
push
out
mov
sub
adc
inc
int
lret
loop
xchg
sbb
orb
inc
dec
leave
cmpsl
inc
dec
mov
add
aaa
jl
daa
inc
test
xor
sbb
add
dec
push
mov
or
pop
or
mov
in
lahf
test
stos
mov
cmp
out
inc
mov
fucomip
adc
cmp
mov
outsb
and
xor
and
pop
addr16
lret
into
stc
sahf
xchg
sbbl
mov
scas
fidivrl
cmp
jmpw
in
cmpsb
push
lea
mov
aam
cmp
icebp
shlb
mov
cld
ficoms
xchg
gs
shlb
fucomi
xchg
outsb
movsl
jp
fs
dec
push
xlat
mov
es
mov
push
scas
adc
cmp
sub
inc
vaddpd
mov
and
mov
add
cmpsl
push
mov
test
fucomip
fwait
ret
popa
fidivs
rorl
cwtl
bound
imul
xorl
popf
sarl
aad
sbb
jno
ficompl
insl
dec
and
mov
dec
and
stos
jne
ret
jnp
jne
jl
mov
and
mov
mov
jp
fwait
movsb
scas
jnp
mov
popf
rcll
add
in
mov
repnz
add
cmpsb
cs
jnp
lds
xor
push
mov
ljmp
jne
les
mov
fucomp
mov
orb
adc
cltd
ja
fmull
sub
loop
pop
repz
les
or
and
rorb
pop
adc
addr16
sbb
sbb
push
popf
or
or
jne
popa
or
pop
mov
inc
jl
fldl
fnstenv
jmp
pop
je
pop
into
out
push
inc
pop
pop
js
xchg
xchg
jmp
lock
dec
mov
iret
in
out
imul
push
pop
inc
mov
aad
imul
lea
test
aaa
outsb
pop
xor
push
ret
decl
xor
mov
add
mov
les
push
test
out
xor
aas
dec
jo
mov
popf
inc
movl
int3
lods
mov
lds
and
adc
pop
leave
dec
fdiv
jecxz
out
mov
mov
dec
mov
pop
mov
xor
dec
imul
jne
mov
and
pop
mov
jbe
loop
adc
lods
out
or
roll
scas
movsb
bound
js
popf
dec
cld
inc
fstps
inc
lret
or
ret
jge
pop
xchg
subl
pusha
lret
aas
js
cmp
mov
and
sub
sbb
call
repz
loopne
sti
roll
pop
jbe
cld
aad
xchg
push
cmp
mov
cmpl
mov
mov
mov
mov
adc
popa
cs
mov
imul
mov
mov
jo
push
lret
outsb
or
pop
inc
cmp
cmpsb
adc
shl
pop
fcmove
iret
lds
in
mov
and
inc
xchg
outsl
cmp
fnstsw
popa
mov
jmp
mov
xchg
dec
xchg
aas
dec
jge
imul
and
cmp
mov
aad
jnp
test
stos
pop
dec
mov
div
inc
popf
mov
inc
hlt
iret
out
sti
mov
mov
push
lds
jbe
add
andb
int
hlt
mov
mov
mov
inc
scas
fisubl
cmp
jo
ret
jne
jbe
nop
sbb
mov
imul
xchg
ja
mov
das
out
xchg
icebp
jnp
mov
ds
or
adc
insl
dec
mov
pop
rcrl
lods
mov
or
ja
dec
sbb
in
inc
hlt
sbb
ret
lea
mov
push
inc
cmc
inc
outsb
ret
flds
pop
inc
call
jae
aad
je
mov
or
adc
sbb
aam
jecxz
jg
ljmp
push
int
enter
and
jge
sbb
inc
cs
adc
ja
xchg
inc
aaa
push
push
pop
rorl
test
sbb
dec
push
and
lock
and
fcompl
outsb
int
dec
pushf
stos
cwtl
sbb
mov
push
outsl
js
jmp
or
add
cli
sub
pmuludq
mov
pop
es
xchg
mov
movsb
fs
mov
mov
pop
cld
loopne
push
and
add
clc
jecxz
dec
jno
fistl
insl
jp
ljmp
test
ucomiss
mov
data16
jne
inc
mov
push
addl
dec
je
cmp
in
out
pop
pop
sub
jmp
ret
push
mov
loop
imul
ja
jl
dec
pop
pmaddwd
and
loopne
dec
aaa
lret
push
cmp
in
xlat
pop
insb
cwtl
ljmp
shrb
dec
or
into
mov
mov
jo
mov
lret
divl
mov
push
jnp
lahf
xchg
or
inc
inc
pop
notl
pop
mov
mul
popa
stos
sub
cli
jno
mov
ljmp
jge
or
adc
cwtl
stos
test
ss
les
loope
mov
and
pop
pop
inc
mov
popa
jae
or
sbb
xor
insb
jge
shlb
arpl
xchg
mov
fidivl
jno
mov
mov
mov
cli
adc
outsl
adc
lock
aas
xor
daa
lret
in
inc
pop
add
shlb
sbb
dec
fdivl
minps
mov
and
dec
icebp
cmp
push
xlat
cwtl
test
jae
mov
xor
push
mov
loop
sub
cmp
jmp
push
inc
fildl
sbbl
cltd
sub
ljmp
gs
cmp
jecxz
loopne
inc
pop
sbb
cmp
fiadds
dec
pop
bound
insb
ljmp
and
cmpsb
and
mov
stos
adc
push
dec
and
sub
or
jno
faddl
movl
mov
in
and
sub
imul
fldenv
fdivrl
jecxz
and
aad
enter
mov
mov
leave
dec
dec
jge
les
cmp
cmp
jg
test
fdivrs
xchg
inc
jg
cmp
jecxz
mov
inc
mov
push
aaa
shrb
dec
fwait
repz
jnp
shrl
dec
test
mov
loopne
jno
add
scas
push
push
mov
mov
mov
dec
in
out
scas
out
cmp
mov
xor
xchg
dec
add
imul
lods
cmp
ss
insl
jmp
es
outsl
call
mull
sbb
xchg
pop
xchg
fidivl
out
xor
ss
jbe
ljmp
inc
mov
xor
pusha
out
subl
je
dec
lahf
pop
xor
pop
stos
jecxz
xor
add
or
ljmp
mov
push
inc
lahf
mov
out
sub
cmp
push
push
mov
dec
add
popa
sbb
sub
push
xchg
fs
cmp
mov
or
cmp
jle
out
mov
mov
xor
or
xlat
jno
xchg
loop
loop
cmc
mov
adc
ss
mov
rcr
cmp
xchg
loopne
arpl
cmp
mov
inc
dec
es
mov
shl
dec
dec
push
pop
ss
jno
test
pop
fists
addr16
cmp
xlat
dec
push
lahf
xchg
push
pop
in
pop
out
lods
cmp
pop
mov
orl
mov
arpl
mov
mov
mov
psubsb
loope
lcall
pop
sbb
es
inc
cmp
push
stos
mov
jmp
xchg
imul
dec
aam
mov
pop
xor
fiadds
jne
cmp
mov
shl
aad
inc
enter
outsb
or
dec
dec
hlt
dec
adc
lods
andb
push
mov
xlat
fildll
pushf
mov
mov
outsl
mov
adc
pop
mov
notb
inc
inc
mov
sbb
mov
cmp
inc
and
xor
sbb
xchg
mov
shll
popa
jl
pop
cltd
pop
ret
dec
insb
cli
pop
cmpsb
sbb
or
data16
into
pop
jae
aad
pop
add
stos
fsub
rclb
pop
adc
sub
sbb
push
lock
test
adc
sahf
pusha
jp
xor
jns
ret
mov
movsb
repz
ficompl
cmpsl
es
adc
push
or
scas
cmpsl
mov
sub
das
sbb
xor
pop
sbb
mov
out
add
ds
jl
add
cltd
dec
mov
mov
mov
subb
add
mov
mov
sub
ljmp
gs
jns
in
cld
loope
jb
sub
push
mov
jb
lcall
cli
imul
stos
push
pop
xor
push
fnsave
dec
mov
cmp
dec
cs
push
mov
insl
xchg
mov
call
sti
jecxz
out
cmp
test
mov
pop
pop
pop
loop
pshufw
or
addr16
mov
iret
test
movsl
or
jmp
fs
int
dec
aad
ret
out
arpl
mov
push
test
push
daa
neg
enter
push
mov
add
inc
rcl
iret
test
mov
add
xor
or
add
daa
adc
fcompl
mov
sbb
sbb
movsb
pushf
out
roll
out
and
bound
dec
inc
xor
push
int
inc
jmp
in
lods
adc
pop
xchg
idivl
outsb
mov
jb
cmp
jl
in
in
insl
mov
add
imul
loopne
scas
in
or
jbe
xchg
movsl
sub
js,pt
ljmp
icebp
loope
jmp
sub
jge
out
scas
mov
lock
test
lods
push
lret
test
lahf
stos
inc
xchg
push
jne
sub
test
mov
mov
out
pop
jb
inc
ret
push
fcompl
insb
lret
pop
xlat
or
movsl
sbb
mov
fdivrp
sbb
faddp
outsb
sbb
nop
inc
adc
jae
in
inc
mov
fstl
cld
cli
pusha
mov
push
es
mov
or
rcr
jecxz
outsl
add
jl
pop
into
test
int
push
in
nop
mov
test
sbb
cmp
xchg
mov
cwtl
stos
popf
jg
test
out
adc
mov
and
and
adc
jne
outsb
je
xlat
and
rol
or
jne
mov
test
in
shrb
xor
cmpsl
fldl
mov
ds
lahf
lret
jnp
fwait
mov
sahf
call
xor
call
and
xchg
sbb
fstpl
sub
fdivrs
push
add
sarw
js
and
xchg
add
insl
insl
js
inc
orb
or
ja
pusha
fisubs
in
pop
and
or
sbb
push
or
or
inc
pop
mov
jb
xor
inc
leave
xchg
push
mov
jae
pop
test
pop
cli
mov
dec
mov
call
insl
jo
fsubs
mov
add
add
pop
shrb
mov
adc
pop
sbb
sbb
std
mov
adc
dec
aaa
jge
push
xlat
rolb
enter
mov
xchg
out
adc
xor
loope
push
xchg
push
pop
mov
dec
les
cmpsb
jmp
mov
push
sbb
pop
jl
mov
cmp
pop
dec
int
jne
xchg
jmp
xor
loop
out
pusha
jmp
xchg
lds
gs
pop
imul
cli
mov
pop
stc
xchg
or
pop
je
push
repnz
shlb
aas
lret
das
test
push
andb
je
ficoms
js
movsb
pop
pop
cld
push
sbb
push
lods
cmp
test
cmpsb
repz
inc
mov
lcall
lea
jge
shlb
add
sub
out
push
sbb
add
loop
push
stos
xor
sbb
lock
jne
stos
dec
push
xchg
pop
cmp
filds
test
shlb
mov
fwait
pop
enter
sub
xlat
das
jg
movsb
mov
inc
icebp
test
stc
fistl
pop
cmp
adc
outsb
int
cmp
cwtl
es
sub
fcoms
fisttpll
imul
xchg
push
or
cmp
mov
call
fwait
stos
fwait
and
push
and
jbe
fcomp
mov
iret
sub
rolb
int
cmp
vmwrite
andb
sub
mov
adc
test
sub
popf
jecxz
jmp
jecxz
cmp
cmp
or
sbb
test
add
int
outsb
lods
jmp
sbb
data16
ret
inc
inc
movl
push
push
stos
jmp
add
test
adc
jg
push
das
pop
movsl
leave
cmp
outsb
cltd
xor
aad
mov
arpl
loop
xchg
sub
xor
dec
pop
pop
push
sti
cmp
xlat
mov
ss
movsb
push
test
filds
add
mov
xchg
xor
mov
push
imul
inc
jae
aaa
dec
out
sub
ret
mov
jp
or
mov
fwait
jecxz
jbe
and
jnp
pop
jns
mov
gs
jl
adc
xorl
sub
and
les
in
pmaxub
call
sti
cbtw
mov
shrb
sub
dec
push
jmp
and
mov
mov
ds
fcmovnb
mov
je
dec
or
fisttpll
cmp
pusha
imul
push
lea
xchg
jmp
mov
push
add
dec
or
and
cmp
scas
mov
pop
loop
sbb
ss
rcl
jnp
and
inc
daa
lock
jecxz
ret
adc
pop
ja
loop
fildll
ljmp
loopne
rcrl
cld
or
mov
sbb
scas
outsl
push
jbe
mov
enter
or
jbe
stos
dec
sbb
push
std
ret
aam
popf
push
cmc
daa
xor
ret
cmp
loopne
insl
inc
fs
pop
daa
outsb
jl
bound
mov
inc
push
mov
mov
in
and
out
jmp
scas
scas
fbld
adc
mov
jl
enter
add
jmp
push
cmp
cmpb
add
ficompl
test
xor
xor
pop
in
data16
pop
ljmp
sub
jmp
into
sbb
jp
enter
clc
repnz
ljmp
test
fs
test
clc
add
jno
ficoml
out
lret
jmp
and
lea
in
mov
mov
dec
mov
mov
dec
inc
lret
ljmp
adc
add
cli
fcoms
in
mov
xchg
lret
test
lods
sahf
dec
add
or
mov
cmp
fcomi
xor
loopne
loop
xchg
fldt
inc
divl
addl
mov
pop
xchg
and
push
push
jmp
data16
lcall
inc
insb
jne
xchg
es
or
add
cmp
sahf
test
push
adc
nopl
mov
adc
insb
orb
dec
dec
cmovno
fidivl
adc
mov
insb
fwait
adc
push
sub
outsl
mov
push
test
gs
popa
mov
mov
repnz
push
dec
sbb
mov
mov
stos
mov
dec
cmp
pop
fildl
cmp
sub
adc
outsl
pop
cmp
fcompl
push
shlb
add
adc
xor
ss
fwait
jo
mov
xor
xor
cmp
and
adc
adc
and
stos
jnp
mov
jno
pop
js
imul
xchg
leave
sar
inc
arpl
outsl
stos
out
mov
call
xor
in
xor
je
outsl
dec
add
outsl
and
push
cmp
stos
js
lea
lods
sahf
and
adc
push
cmp
loopne
js
insb
sbb
hlt
fstps
xor
cmc
cmp
dec
xchg
test
inc
xlat
dec
cmp
add
lcall
sub
mov
adc
rcrl
xchg
mov
imul
ds
mov
mov
and
and
jo
loope
inc
fs
xor
orps
or
inc
cmp
shl
pop
mov
cmpsb
lods
cmp
in
pop
pop
jo
and
rclb
cmp
adc
dec
in
repz
inc
pushf
push
mov
pop
dec
loope
iret
movsl
lods
xor
ja
icebp
bound
and
fildll
pop
in
je
stos
lods
es
and
xlat
aaa
les
dec
fnstenv
leave
incl
out
in
mov
mov
jae
roll
icebp
adc
xor
std
xor
lods
data16
push
pop
adc
xor
cwtl
pop
mov
push
iret
cmp
mov
cmpsb
mov
divl
xchg
out
xor
cltd
dec
push
inc
imul
lret
xchg
inc
inc
mov
dec
inc
test
xchg
rcrl
sub
sbb
xchg
push
cwtl
les
and
hlt
fstp
arpl
out
push
push
repz
xor
xchg
test
fdivl
fwait
das
ret
lcall
push
cld
sub
push
in
imul
push
out
pop
out
dec
jae
cmp
pop
mov
jnp
adc
sub
dec
lea
sub
xchg
add
loopne
faddl
sbb
or
rolb
mov
or
loope
out
jg
xor
lods
daa
aaa
mov
jns
les
in
dec
add
or
mov
mov
cmp
add
fwait
nop
xor
sub
adc
insl
outsl
add
test
sub
cmpsl
out
dec
out
cmc
xchg
test
mov
jo
jle
stos
fiadds
mov
dec
ljmp
xchg
loop
or
inc
add
fisubl
xor
fwait
ret
pop
adc
fistps
push
test
xchg
les
jae
jb
loopne
adc
popf
xchg
inc
test
dec
fcoms
rcll
xchg
inc
lret
pop
xchg
lahf
push
inc
ror
idivl
xchg
das
xor
sbb
push
test
pop
pop
ret
loope
or
movl
xor
adc
loop
enter
loopne
or
decl
pop
pop
xchg
pop
data16
pop
inc
dec
push
push
lods
sub
jnp
push
je
jnp
lods
mov
cmp
pop
pop
shll
lods
jns
mov
sub
jecxz
sub
xchg
das
test
mov
or
cmp
mov
cld
loope
sbb
rorl
mov
xor
mov
jmp
inc
xchg
push
xor
jbe
pop
fnsave
scas
scas
jnp
outsl
add
cld
xchg
pop
mov
in
xchg
out
adc
popf
gs
out
push
or
inc
scas
mov
xchg
loop
mov
fisttpl
jle
adcb
xor
add
mov
cmp
aad
mov
pop
push
call
mov
mov
push
adc
mov
mov
out
add
mov
test
jle
sbb
sbb
fiadds
mov
outsb
push
or
faddl
xorb
mov
add
pusha
mov
divb
jbe
ret
inc
not
das
mov
pop
lret
adc
mov
mov
or
ss
repnz
jne
sub
add
pusha
imul
shlb
in
pop
xlat
outsl
daa
push
sub
outsl
add
insl
xchg
insb
adc
hlt
or
in
sbb
lds
andb
cltd
sbb
mov
call
push
mov
movsb
xchg
insl
sbb
mov
xchg
cmpl
push
mov
dec
je
in
sbb
into
insl
and
cli
mov
and
pop
mov
dec
gs
outsl
lahf
push
mov
inc
dec
xor
xor
das
repz
aas
fdivs
lahf
push
out
pop
pop
fs
jle
insl
or
mov
xchg
aam
pusha
jne
popa
fsin
xor
mov
daa
inc
jge
data16
fstpt
lea
popa
add
push
fsubs
sbb
mov
adc
out
cmc
xchg
cli
gs
shrl
sbb
mov
scas
push
sbb
jne
ss
adc
dec
dec
lock
cwtl
test
lea
ja
filds
jp
ds
je
cmp
jns
hlt
inc
jnp
mov
movsl
addr16
xchg
sti
call
and
dec
jge
or
fcomi
jne
mov
std
shlb
test
shlb
add
ds
cli
or
xlat
stos
pop
jb
xchg
ss
arpl
dec
bound
rol
not
push
cmc
shl
andl
int
call
ja
ret
es
call
mov
mov
lcall
pop
sbb
rcl
jle
mov
icebp
icebp
arpl
jp
out
dec
in
inc
stos
sti
jae
sub
stos
push
sub
mov
jg
loopne
adc
cld
cltd
cmpl
pop
inc
dec
adc
pusha
clc
pop
test
pop
insl
cs
cwtl
push
shld
mov
xchg
push
enter
xor
idivw
push
iret
jge
inc
sbb
repz
bound
xor
sub
daa
mov
mov
mov
cmp
sbb
fisubrl
mov
sbb
inc
add
mov
sub
scas
js
dec
in
mov
leave
pop
stos
cmp
sbb
repnz
mov
dec
ror
test
ret
inc
stc
cmp
decl
and
jle
sahf
pop
cs
add
inc
add
or
sbb
ret
inc
rcrl
inc
leave
sti
pop
jge
in
divl
push
or
adc
lcall
pop
and
adc
jnp
add
xor
jp
das
inc
sbb
pop
fcom
ss
xchg
mov
hlt
jge
pop
pop
mov
shlb
push
and
pop
in
cltd
add
loopne
shrb
ret
lcall
mov
cmpsl
inc
shl
test
lcall
out
mov
xor
daa
int
mov
dec
jge
push
test
ret
mov
ret
cmp
ljmp
mov
jle
pop
iret
sub
sub
cmp
or
inc
std
jae
insl
scas
out
lds
mov
push
xor
clc
mov
shrl
addl
icebp
in
loop
cmp
xor
sub
mov
jae
mov
inc
out
imulb
ds
clc
in
mov
ljmp
leave
dec
or
sbb
dec
dec
cmpsl
xchg
les
jge
add
mov
xchg
sub
ds
dec
xor
sub
pushf
iret
sbb
jo
dec
lahf
and
sbb
imul
fiaddl
push
addr16
outsb
rcrb
and
lock
je
int3
pop
fldlg2
pop
or
jl
cmp
sti
inc
aad
inc
cmpsb
loope
add
mov
les
fisubrl
add
jae
lea
clc
loopne
insl
out
xor
iret
scas
pop
jne
jp
jns
aam
cmp
xlat
and
mov
xor
ds
adcb
jne
sti
mov
lods
fmuls
icebp
movsb
push
mov
dec
xor
and
push
jno
insl
out
hlt
and
mov
leave
pop
je
scas
pop
pop
fsubr
and
add
jge
xchg
in
loopne
ljmp
int3
jae
lock
scas
dec
or
mov
xchg
stos
cld
jge
cmp
rcrl
and
test
sarb
xchg
inc
in
xor
rcrl
and
call
mov
repnz
push
inc
in
jecxz
add
xor
clc
inc
movl
mov
adc
dec
pusha
movsl
xchg
add
packsswb
adc
inc
je
jp
dec
jle
aad
outsl
xchg
dec
sbb
cltd
fs
cmp
jns
mov
dec
pop
inc
fbstp
cmpsl
push
sbb
and
adc
aas
fimull
test
pop
sbb
adc
mov
cs
jmp
mov
std
icebp
jo
dec
xor
out
outsl
push
xor
scas
xor
leave
imul
jne
mov
or
imul
push
sub
shll
or
xchg
and
popa
sbb
push
fcmovnb
hlt
inc
add
in
fcmovne
inc
aam
aam
jmp
stos
dec
jne
ret
mov
lods
push
insb
aaa
add
or
mov
repz
xchg
test
xchg
xchg
sub
xor
and
pop
fldl
in
inc
sbb
mov
pop
cmpsb
shlb
ret
lods
das
sub
js
push
push
shlb
int
insb
cmp
mov
lcall
out
scas
rcr
cli
xchg
push
aad
pop
mov
mov
mov
jnp
mov
imul
push
call
call
sbb
scas
cmp
xchg
sbb
pusha
mov
or
jo
inc
into
insl
fucomip
fwait
xchg
cld
iret
jmp
insb
icebp
add
jb
dec
cld
roll
pop
movsl
and
movl
test
lock
pop
dec
lods
imul
test
add
mov
mov
rcrl
adcb
pop
pop
out
jecxz
jae
xchg
mov
call
mov
cmp
mov
aaa
sti
jo
push
fildl
imul
pop
add
les
loopne
fcmove
es
jno
xor
adc
jae
mov
fistps
insl
mov
test
fwait
or
inc
aam
sub
lock
push
and
cmp
sub
jecxz
mov
push
xor
xchg
dec
cltd
in
cmp
sbb
jle
outsb
sbbl
and
inc
pushw
push
scas
dec
dec
test
loope
sahf
pop
and
loop
rcll
ret
pop
adc
sbb
loopne
loopne
mov
add
pop
mov
aad
cmp
mov
xchg
fs
ret
dec
adc
and
xlat
pop
rcll
jp
push
lods
out
repnz
add
out
fdivl
jbe
addr16
xor
sbb
inc
mov
movsl
mov
sub
and
int3
or
loopne
xlat
mov
ficompl
mov
or
lods
pop
push
xchg
push
mov
sub
pop
js
mov
mov
ja
jmp
inc
pop
ljmp
sub
mov
sti
jl
int
jae
sub
scas
lcall
pop
lock
and
std
lock
lods
adc
fsubrp
pusha
lods
icebp
mov
and
nop
sbb
jb
into
ja
fcmovb
scas
out
pop
gs
mov
inc
lds
rclb
push
add
loopne
mov
ds
jmp
pop
mov
dec
pop
loopne
daa
inc
dec
mov
jo
pushf
ljmp
or
popf
cmpsb
xchg
loope
push
xchg
je
sbb
cmp
adc
adc
pop
inc
adc
cmc
insl
pop
aaa
insl
xchg
jmp
ljmp
movsb
daa
cmp
lcall
lcall
or
lahf
sarl
xchg
popf
imul
in
enter
xchg
sub
mov
std
mov
jge
jbe
test
jecxz
stc
jmp
lfs
or
jbe
scas
dec
popl
adc
test
lret
out
push
jne
push
push
mov
mov
out
shrb
lods
sbb
fdiv
test
sbb
mov
or
push
fs
sbb
cmp
fisubs
gs
sbb
sbb
lock
cmpsl
sub
fists
xor
mov
mov
push
jl
orb
int3
mov
pop
ljmp
jge
rorb
xchg
adc
xor
jbe
mov
addr16
rclb
xor
jbe
mov
push
inc
ret
fdivrs
fisttpl
mov
or
and
or
and
int
push
sbb
out
sub
jno
jmp
nop
je
loop
sbb
fbstp
jp
cmpsb
adc
aas
repnz
sahf
popf
test
mov
outsl
dec
sub
sbb
popf
arpl
push
xchg
scas
and
and
fistl
lods
out
inc
push
mov
pop
sbb
cmpsb
cmp
sbb
int3
adcl
outsb
jo
add
lock
mov
sahf
in
push
ret
push
mov
push
sub
inc
roll
js
jl
adc
gs
inc
xchg
inc
cmc
fiadds
sbb
push
mov
pop
dec
fsubrl
pop
sbb
inc
mov
mov
cmpsb
dec
or
push
xchg
dec
sbb
imul
mov
push
lret
jmp
xor
shll
js
out
pop
js
insl
pop
inc
je
inc
mov
xorb
rolb
cmpsl
stc
jno
into
mov
cld
lods
js
cwtl
mov
add
cmp
outsl
movsl
and
sbb
insb
mov
push
and
or
fcomi
mov
add
arpl
jae
adc
movsl
iret
jge
fstpt
mov
dec
fbld
fisubs
fistps
mov
lahf
push
cmpsb
xchg
and
fisubrl
out
and
pop
call
xchg
xorl
mov
or
jb
rcl
and
adc
shlb
mov
addb
js
les
mov
xchg
or
add
loopne
sbb
sub
call
sti
jp
js
add
mov
stc
mov
cmp
jno
fldt
mov
lret
adc
gs
jge
or
lea
std
cmp
das
pop
add
xor
dec
and
push
jae
adc
mov
mov
dec
dec
pminub
mov
jle
mov
xchg
cwtl
std
aas
xchg
mov
call
push
mov
or
dec
fstl
int3
cmp
dec
inc
gs
cmp
xchg
leave
out
xor
lds
and
push
out
mov
and
xchg
jmp
push
jo
xor
mov
cli
orl
cli
mov
and
mov
push
mov
lock
push
sub
add
test
pop
rcrl
inc
xchg
movw
adc
or
add
and
ds
call
lds
test
or
xor
or
mov
bound
sbb
cmp
sbb
adc
sub
lcall
jmp
pop
and
jne
aaa
mov
repz
popf
arpl
roll
shlb
push
xchg
adc
cltd
lea
xor
test
xlat
xor
pushf
mov
addr16
out
cmp
push
pop
aas
seta
inc
push
cmp
mov
xor
pop
fwait
sub
push
inc
addr16
adc
add
jbe
and
sub
or
movsb
xchg
cmp
stos
mov
fwait
xor
outsb
sti
loope
mov
jne
fucom
mov
insl
or
xchg
push
and
mov
test
rol
out
lahf
outsb
icebp
ret
into
lds
icebp
jle
sub
jmp
push
xlat
pop
inc
push
fnsave
daa
or
lods
scas
out
sub
dec
xor
fnstsw
mov
adc
pushf
cmpsb
or
sar
pop
rcrl
out
test
jo
mov
xchg
pop
aaa
jbe
cmp
mov
popa
pop
cs
and
incl
pop
pushf
repz
mov
in
mov
mov
push
and
inc
xchg
and
xor
cmc
rcrl
or
mov
ja
pushf
xchg
sti
add
and
pop
adc
nop
inc
xchg
sbb
push
or
fsubrl
lods
gs
cld
in
ret
test
les
call
fs
or
cmp
loope
add
push
sbb
fimuls
mov
inc
dec
lea
pop
aaa
mov
xor
and
mov
pop
icebp
aam
pop
out
add
scas
mov
out
mov
ja
out
mov
rcrb
add
push
cmpl
test
daa
mov
pop
or
sbbw
or
icebp
lock
sbb
sti
xchg
aad
sbb
inc
mov
inc
sbb
push
jns
lahf
imul
aam
test
push
push
daa
add
ret
or
xor
fldcw
les
xor
jge,pt
ret
and
pushf
subb
outsb
icebp
cmpsl
ja
lods
insl
fwait
or
mov
enter
gs
jbe
into
cmp
sahf
iret
xlat
jne
jnp
pop
xchg
sbb
fs
repnz
mov
cld
movsl
jb
mov
xchg
in
fs
mov
inc
and
add
les
mov
lock
sahf
insb
js
add
adc
sbb
outsb
jno
dec
jns
pop
inc
add
roll
sub
mov
fs
sbb
push
pop
lret
fsubrs
imul
idivl
aaa
sti
add
jl
stos
pop
in
insl
cmp
imul
fildll
das
repnz
or
icebp
jne
sbb
pop
and
or
aad
lock
cs
call
adc
cmp
or
scas
pop
cmp
stos
pop
sbb
add
sbb
out
sti
stos
outsb
add
xchg
jmp
mov
or
cmpsb
shlb
and
sub
push
dec
sbb
insl
lea
xchg
push
pop
jnp
subl
mov
std
shl
ja
test
xchg
in
cmp
rcll
mov
and
cmp
sub
mov
int3
ret
adc
sub
fidivs
loope
inc
or
cmp
mov
xchg
in
int3
lock
pop
push
push
fnsave
stos
xchg
mov
inc
mov
mov
mov
sarb
sbb
pop
fnstcw
lock
lods
xor
aam
push
mov
sarb
lock
mov
imul
dec
shlb
push
rcll
popa
sub
addb
xor
minps
imul
ficoms
cmp
inc
cld
lahf
and
pop
fwait
add
punpckldq
in
push
aaa
shrl
add
and
pop
daa
push
jecxz
inc
pop
test
sub
and
ds
dec
mov
out
je
ret
mov
fists
enterw
pop
in
lahf
xlat
mov
push
not
fists
fcomps
aaa
jne
mov
mov
ss
leave
jge
inc
aas
mov
data16
mov
inc
mov
add
push
fwait
mov
mov
test
ret
scas
sub
pop
mov
or
popf
leave
and
lock
scas
inc
inc
ret
jmp
mov
mov
je
pop
test
mov
lret
lods
stos
jo
ret
and
divl
pop
xchg
and
gs
mov
hlt
adc
popf
mov
in
ficoms
or
in
in
pop
mov
add
xor
jge
add
push
fwait
sub
sub
push
nop
sub
lds
adc
lret
lock
out
jo
inc
sub
in
cmp
test
mov
cwtl
cmpsl
mulb
dec
xchg
cmc
ret
ljmp
cs
lods
mov
dec
adc
pop
in
inc
mov
pop
outsb
divl
adc
pop
mov
movsl
push
pand
imul
pop
shll
ss
cmp
cmpsb
dec
xor
cs
push
pop
jne
mov
dec
jg
or
adc
btc
testl
jne
in
outsb
aas
addr16
sub
inc
in
out
les
lret
inc
mull
ja
enter
ja
mov
or
pop
sub
or
adc
pop
jno
insl
or
cli
mov
inc
and
push
xor
sub
test
loope
push
xchg
bound
test
pusha
mov
xor
mov
push
test
cmp
js
lea
lahf
jp
adc
stc
add
ret
in
or
jnp
sub
lock
mov
fildll
imul
xchg
leave
xor
inc
sahf
dec
and
cmpsb
insb
adc
push
mov
ret
aaa
push
push
inc
xchg
in
pop
je
inc
xor
xchg
dec
jbe
test
fdivrs
in
sbb
jbe
stc
add
sbb
sbb
clc
jmp
scas
cmp
mov
xlat
jne
pop
inc
insl
pop
mov
xor
sub
popl
dec
aam
add
pushf
bound
add
mov
inc
or
mov
ss
cwtl
sarl
ret
out
cmp
push
icebp
mov
push
int
scas
cmpsl
out
and
or
lods
cmp
mov
push
push
sub
shrl
xchg
ss
xor
mov
shrl
fst
aaa
lret
adc
inc
jecxz
adc
sbb
sbb
in
into
mov
in
popl
and
inc
adc
scas
mov
bound
mov
fcomps
or
aaa
hlt
hlt
add
gs
scas
add
adc
nop
push
jae
cmp
test
jne
jge
sub
hlt
mov
and
sahf
jb
push
into
test
xor
push
mov
insb
pop
and
jne
jge
cwtl
add
jge
pop
dec
stos
rolb
imul
jp
es
mov
dec
es
xor
and
lock
sahf
adc
inc
inc
loop
pop
test
movsl
push
mov
mov
ds
insl
jmp
cmp
push
outsb
shlb
pop
xlat
outsl
mov
addr16
mov
mov
mov
xor
or
mov
cmpb
movsb
pop
roll
dec
dec
sbb
and
mov
xlat
ja
sub
dec
and
icebp
mov
test
jmp
or
adc
xchg
inc
mov
push
mov
adc
mov
cmp
sub
aad
call
icebp
xor
call
jae
popf
call
jno
jmp
lods
out
mov
hlt
daa
xlat
sub
jbe
mov
jno
stos
sub
je
push
hlt
mov
mov
mov
leave
popa
scas
push
hlt
jnp
sub
insl
loope
add
test
pop
in
jbe
adc
lock
mov
fcomip
ljmp
sti
cmp
cltd
add
clc
jecxz
loopne
mov
mov
fdiv
fiadds
pop
aas
mov
pop
push
lsl
xlat
iret
imul
fsts
or
div
mov
cmp
push
fistl
or
dec
push
mov
xor
cmp
jne
ja
sti
jbe
shll
outsl
out
orl
ficoms
loopne
jmp
mov
or
jae
push
ds
sbb
inc
push
add
js
in
jno
sub
das
mov
xor
scas
jecxz
jecxz
les
cmc
loop
insb
add
subb
scas
or
stos
ds
out
add
insl
or
xorl
mov
xor
shlb
xlat
loope
jge
hlt
rcl
jle
fstpt
cmpsb
xor
jecxz
sub
es
cmp
and
pop
aam
inc
in
cmp
mov
js
inc
bound
cli
cmp
dec
packsswb
adc
popa
mov
add
repz
outsl
xor
and
fwait
sarb
mov
sahf
fisubrl
mov
ret
int
popa
mov
inc
and
fsub
rcrl
es
pop
outsl
imull
jp
test
cmpsl
arpl
cmp
dec
or
dec
jecxz
cmp
add
adc
jno
or
and
dec
pminub
es
inc
stos
sub
call
test
sbb
inc
cmp
jmp
xor
push
cltd
hlt
jecxz
jmp
repz
jmp
jl
pop
push
mov
adc
dec
xor
je
pop
adcb
jle
mov
shrl
jo
in
mov
and
and
mov
negl
ret
jp
sub
or
mov
enter
mov
fwait
aas
sarb
add
jmp
pop
sti
and
arpl
es
cmpsb
push
sti
adc
push
lea
fnstcw
sbb
or
mov
pusha
repnz
jbe
xchg
mov
or
arpl
cmpsl
sub
sbb
push
mov
xor
js
in
and
cmc
jno
pop
pop
ljmp
loop,pn
xor
cmp
xor
inc
jl
mov
insl
pop
adc
push
xor
test
imul
test
sbb
aas
in
mov
jmp
lock
inc
mov
arpl
popa
lods
pop
shl
test
mov
adc
mov
mov
push
mov
mov
adc
add
mov
fstpt
mov
sub
jne
push
cmc
jge
or
lods
fnstsw
call
pop
push
cli
lock
push
cmp
mov
and
arpl
mov
jecxz
lahf
jnp
repnz
addl
insb
pusha
sub
push
mov
jp
sub
daa
xchg
shlb
aas
out
jecxz
add
sbb
inc
mov
xchg
xlat
sti
aad
outsb
mov
mov
std
jmp
pop
ret
int
inc
add
test
lds
sti
xchg
cmp
inc
mov
shll
cli
into
dec
adc
inc
fisubrl
in
cmp
hlt
in
iret
dec
sti
sub
jp
inc
fwait
xorb
rol
or
mov
xchg
jnp
fidivl
ret
xor
stos
mov
xlat
and
stos
mov
jo
or
aad
and
into
fwait
iret
mov
shl
icebp
add
adc
jne
adc
inc
push
std
cmp
out
clc
ljmp
mov
rorl
jle
sbb
sub
mov
xchg
movsb
push
pop
sub
add
lret
mov
mov
jnp
mov
mov
ja
out
mov
fidivl
mov
in
aam
jbe
addr16
pop
js
or
jmp
lds
jmp
xor
mov
mov
jl,pn
cs
shl
push
inc
je
jno
sahf
sbb
lret
std
mov
pop
lret
push
orl
or
adc
pushf
fwait
pop
imul
ret
loopne
lds
dec
out
xorl
or
mov
scas
into
cli
xchg
push
cmp
inc
sbb
push
pop
sbb
pop
jmp
push
push
mov
push
aaa
and
cmpsb
dec
shrb
out
gs
gs
jmp
mov
dec
add
xor
sub
and
addr16
loope
loope
fstl
add
stos
dec
pop
mov
aam
pop
stos
in
popf
jnp
mov
and
adc
aam
in
out
andb
jge
jle
or
push
and
or
inc
fbld
add
sbb
iret
popa
in
ljmp
push
pop
push
lods
inc
ds
scas
sbb
scas
adc
or
hlt
mov
repz
incl
pop
je
aad
pop
adc
xchg
dec
fisttpll
jle
icebp
stos
stos
test
dec
es
cmp
inc
femms
pop
inc
in
sub
mov
inc
shlb
mov
testb
mov
and
or
or
icebp
gs
pop
enter
push
sub
sbb
xchg
cmp
pop
das
xchg
mov
dec
bound
rcll
jecxz
dec
push
push
aam
dec
and
test
mov
test
mov
pop
cmc
pusha
pop
ljmp
mov
mov
jae
ffreep
xchg
int
mov
sbb
adc
inc
sbb
cmp
jbe
les
fstp
shll
ds
pop
xchg
cwtl
xlat
and
dec
xor
fbstp
push
hlt
not
mov
cmp
and
adc
mov
adc
iret
dec
push
cmpsb
inc
call
push
dec
movsb
xchg
sbb
mov
stos
mov
jg
xchg
mov
xchg
das
jge,pt
fnsave
in
cltd
jmp
mov
inc
xlat
sbb
add
sub
mov
out
ret
push
les
stos
pop
cmpsb
and
js
in
jge
cltd
shlb
sub
jbe
testl
clc
cmp
stos
dec
pop
cmp
into
fistl
rorb
outsb
imul
call
shll
pop
xchg
pop
or
leave
scas
cmp
or
ret
or
sbb
push
dec
cmp
push
sub
cmp
je
mov
iret
int3
dec
paddb
pusha
cltd
add
fs
and
pop
mov
jecxz
pop
pop
mull
outsb
pop
add
push
mov
pop
aam
stos
push
aam
mov
cmp
aam
mov
in
sub
int
xchg
loopne
mov
sbb
pop
mov
hlt
mov
mov
cmpsb
lcall
cvtps2pi
inc
lret
sbb
dec
pop
or
jb
aaa
xor
xchg
test
lret
fucomi
pop
or
cwtl
xchg
jg
add
mov
subb
shll
xor
mov
cli
out
daa
or
xor
sub
roll
int
cli
aad
sub
xlat
cmp
ss
popf
xor
sbb
fwait
add
cmpsl
jle
call
adc
and
fwait
push
xchg
mov
hlt
fwait
outsl
push
adc
xor
or
xchg
fsub
or
pop
mov
data16
fs
mov
adc
inc
cmp
jnp
rol
fldlg2
pusha
pop
pusha
icebp
ljmp
dec
xchg
arpl
popa
mov
jg
pop
mov
jb
push
mov
popf
mov
dec
xchg
push
in
cli
and
mov
pop
mov
ficoms
insl
pop
pop
ljmp
scas
cmp
adc
shl
sbbl
mov
fidivrl
push
adc
scas
push
adc
rolb
rol
test
pop
jg
idiv
ja
cmpsb
sbb
hlt
in
mov
out
les
addr16
lret
dec
cmpl
xor
and
scas
inc
add
jmp
ja
dec
mov
push
jbe
scas
cmp
test
push
or
fs
jmp
scas
cmp
dec
dec
pop
inc
mov
push
fdiv
jbe
fsubl
jb
stos
pop
push
xorl
fcompl
push
or
pusha
jecxz
scas
movswl
or
inc
icebp
push
cmp
imull
in
lret
test
push
xor
jmp
aas
outsb
test
xchg
mov
insl
out
cmc
or
je
out
rcll
mov
mov
dec
ret
je
cld
cmc
xor
es
adc
jle
rolb
lcall
jg
push
sub
mov
gs
cmp
loopne
lret
js
or
mov
call
stos
or
mov
loop
mov
fldt
pop
scas
outsb
stos
loope
repnz
outsb
out
mov
mov
test
mov
loope
ret
div
cli
sbb
dec
stc
inc
adc
mov
cmc
inc
inc
fdivrp
push
les
sub
fldcw
inc
hlt
jbe
sahf
sbb
adc
in
mov
call
int
dec
ds
cmovns
cmp
mov
cmp
rclb
cld
push
add
mov
rclb
xor
add
mov
add
outsb
imul
movsl
jnp
push
pop
in
in
into
stos
sub
jl
lods
incb
pop
and
mov
iret
dec
mov
cli
cmp
xorb
inc
les
icebp
fbstp
sbb
and
cmp
xor
xchg
dec
lcall
subb
jno
cld
push
cmp
add
mov
addb
fwait
les
test
push
mov
mov
xorb
fmulp
sbb
xchg
cmpsl
das
ficoml
divb
jbe
ret
imul
sbb
mov
sub
stos
push
cmp
push
outsl
lcall
mov
mov
or
and
dec
subb
popf
stos
out
test
cmp
fistpl
rsqrtps
inc
icebp
mov
pop
int3
sbbb
cmp
sub
fwait
lea
scas
xchg
jbe
daa
addr16
std
insl
pop
popf
lcall
mov
cmp
xor
std
adc
inc
pop
hlt
popa
push
cmp
subb
jnp
xor
arpl
pop
and
lcall
jne
cli
mov
pop
das
mov
dec
xchg
sub
ljmp
push
mov
cmp
fcoms
shr
shlb
cmpsl
jbe
iret
cs
aas
pop
mov
je
inc
dec
cmp
jl
fimull
out
push
mov
mov
cmp
mov
jg
je
add
shll
out
cmc
test
sbb
and
dec
aas
pop
jl
jo
sti
jno
aam
cs
cmpsb
or
lahf
xlat
lds
mov
or
push
mov
mov
aad
outsl
cmp
sarl
jecxz
push
cmp
mov
xor
bound
outsl
mov
xchg
mov
daa
stos
sub
mov
cmp
outsl
out
add
in
mov
jge
add
cwtl
call
sub
sbb
push
test
loopne
movsb
jbe
push
lahf
xchg
push
cmc
add
mov
jno
aad
icebp
shl
dec
lcall
jg
jo
scas
fbstp
inc
mov
lret
dec
ss
lahf
pop
in
scas
outsb
ret
ss
mov
pop
fildl
ss
lods
fstenv
outsb
scas
cmpsb
xchg
sti
lret
clc
mov
and
mov
in
or
out
or
in
arpl
dec
cmp
sbb
sub
cmp
mov
lea
or
jle
dec
arpl
cli
push
dec
jbe
out
aaa
jae
pop
clc
jg
out
pop
or
ds
ficoms
jo
fiadds
out
test
adc
and
lods
mov
cmp
jnp
outsb
mov
clc
aad
stos
jo
jnp
adc
xor
popf
in
jb
negl
pop
andb
add
cmp
cli
outsb
mov
ret
push
lret
jne
ja
mov
sahf
pop
cmp
and
int
fsts
imul
add
xlat
xor
cld
aam
cmp
data16
mov
xor
jbe
mov
mov
adc
mov
mov
pop
jo
pop
shlb
into
pop
int3
lea
push
mov
mov
push
inc
lret
pop
jle
jo
dec
cmpsb
outsb
stos
jl
add
clc
xor
add
pop
pop
xchg
mov
outsb
pop
lret
movsl
hlt
push
outsb
or
push
xor
cmp
inc
movl
cmp
aad
jae
in
mov
jmp
adc
and
mov
loope
in
cmp
ret
push
ja
stos
sbb
pop
scas
je
fcmovnu
xchg
ret
ret
mov
ret
aaa
add
or
adc
test
pop
scas
xor
lods
push
jecxz
sbb
xor
cmp
dec
jne
mov
cmp
dec
inc
cmp
xchg
add
subl
mov
test
jbe
aam
jge
movsl
adc
out
adc
fdivrs
mov
mov
in
cs
je
lods
mov
sahf
and
shl
shr
push
mov
fbld
into
mov
das
mov
daa
pop
dec
iret
mov
stc
xor
push
mov
mov
mov
xlat
loopne
out
mov
jnp
inc
or
mov
ss
ficoml
mov
push
ror
loopne
xor
out
inc
xchg
stc
pop
pop
out
jl
and
xchg
fadds
xchg
cwtl
ja
cld
dec
je
data16
mov
ror
inc
sub
sbb
adc
ss
std
insl
filds
imull
xor
lds
test
loope
arpl
adc
repz
push
lods
ds
or
cmp
cltd
add
loopne
jne
mov
lea
sahf
mov
nop
and
add
jnp
sahf
mov
stos
pop
pop
out
hlt
xor
scas
jmp
clc
sahf
and
jno
rcll
fdivr
cmp
adc
popf
rcr
mov
mov
dec
mov
aaa
push
xor
mov
or
inc
loop
cmp
and
fwait
scas
dec
add
mov
gs
je
js
or
cmp
push
xchg
loopne
imul
mov
dec
mov
out
inc
mov
mov
popf
sbb
lods
scas
pop
lds
cli
sti
mov
loope
insl
add
adc
scas
mov
sub
jb
jp
mov
test
jecxz
xor
popa
xorl
fiaddl
xlat
mov
jne
lods
mov
cs
shrb
mov
negb
lret
jb
inc
mov
xchg
xchg
cmp
or
addb
je
loope
push
add
insl
mov
fdivrs
adc
lds
lock
add
mov
flds
lret
push
dec
fcomip
dec
push
jmp
mov
sub
es
xor
lcall
or
mov
popa
push
sub
mov
aad
outsl
sti
xlat
in
lods
xchg
testl
push
icebp
mov
fisubs
movsl
pop
decl
mov
adc
aad
fcoml
sub
loope
es
in
jnp
lcall
ret
mov
loope
ss
jmp
scas
das
xchg
pop
pop
fisttpll
ss
adc
cmpl
push
aas
shrb
jne
sahf
mov
sti
std
push
xchg
push
jo
ret
mov
dec
xor
cmpsl
scas
jnp
daa
imul
jl
imulb
push
push
popa
cmp
arpl
mov
sub
mov
ja
push
mov
jl
loope
lret
nop
dec
mov
pop
lods
dec
fwait
insl
das
pushf
dec
pop
xchg
lret
pop
dec
scas
movsb
xchg
inc
fistpl
dec
hlt
jle
lds
ss
fwait
and
and
notb
cmp
rorl
bound
rcrb
lcall
rcll
adc
movsb
mov
cmp
jmp
sarl
or
and
jl
daa
inc
in
cmp
inc
out
adc
in
cs
std
aaa
scas
push
lock
cmpsb
test
inc
pop
sbbb
arpl
adc
je
inc
sbb
push
stos
ja
or
xor
insb
fs
inc
ret
add
into
sbb
test
mov
adc
fwait
sti
ret
and
pushf
push
scas
insl
push
fisttpll
xchg
cmp
inc
mov
mov
xchg
push
out
cld
ljmp
xchg
xor
inc
adc
lcall
mov
sbb
loope
cmp
add
sub
or
call
aas
imul
mov
cmc
push
fadds
sbb
fidivs
and
or
rolb
jge
rcrb
jecxz
in
inc
dec
das
xchg
push
sub
add
inc
xchg
and
jmp
sub
mov
cwtl
lret
cmp
xlat
mov
and
fwait
mov
clc
shlb
or
mov
inc
shlb
mov
add
jge
mov
aas
pusha
aaa
fnstsw
mov
mov
cmp
in
in
iret
rcrb
mov
jge
xorl
loop
je
jo
jbe
xchg
popa
push
jae
loope
mov
inc
xlat
adc
push
sbb
js
add
mov
pop
xor
sub
frstor
fwait
xor
sbb
adc
flds
addr16
orl
int
pop
jl
rcl
cwtl
push
mov
icebp
add
fmuls
xchg
shrl
roll
not
push
mov
or
imul
je
mov
mov
sub
jle
adc
fnstcw
call
in
add
sbb
mov
sub
loop
sbb
and
adc
cmp
dec
mov
into
xchg
jns
xor
cmp
js
and
out
test
div
test
add
mov
popa
imul
mov
ss
int
mov
jno
push
fs
jo
add
jle
pop
xor
das
sub
inc
test
fistps
mov
mov
pop
repnz
lret
and
insl
mov
mov
or
jne
mov
cmp
pop
push
mov
lahf
ljmp
sub
test
add
lcall
jb
xchg
mov
stc
pop
outsl
bound
pop
movsl
cwtl
aad
sbb
xor
cmp
mov
sbb
xlat
jp
add
pop
nop
mov
sahf
dec
sbb
dec
pand
out
inc
push
sbb
ljmp
js
jbe
or
dec
ds
sub
lea
scas
mov
outsb
loope
inc
mov
fwait
xchg
ss
mov
pop
gs
add
ds
outsl
jb
dec
sub
cmp
negb
push
ja
loop
adc
fwait
aad
rorl
inc
cli
sbb
rolb
push
arpl
in
or
mov
xchg
cmp
pushf
aad
mov
nop
mov
jl
sbb
mov
dec
inc
outsl
pop
jl
aad
add
adc
jae
xlat
dec
xor
sbb
daa
and
mov
xor
je
rorb
pop
mov
movzbl
pop
in
jbe
xor
cmp
std
cmp
jnp
mov
das
nop
outsl
sti
mov
lret
out
cmpsl
cmp
test
sahf
hlt
mov
mov
sti
pop
pop
in
aad
stos
mov
mov
cmp
cmpsl
add
mov
xor
adc
stos
in
cmp
fdiv
xchg
sti
dec
sbb
mov
xor
frstor
pop
sar
or
call
dec
dec
mov
outsb
xlat
mov
cmp
loope
cwtl
ss
sar
test
or
ror
lods
bound
sub
mov
das
and
inc
or
sbb
out
jmp
sub
daa
or
andb
cmc
cmp
jge
inc
xchg
fcmovnu
adc
lahf
scas
int3
xchg
inc
adc
or
push
xchg
add
loopne
das
pop
fisubs
push
mov
into
and
ret
loop
sbb
mov
in
sub
arpl
dec
mov
aam
mov
cli
je
mov
ret
dec
pop
aam
add
addr16
cmp
mov
insb
dec
scas
cld
jp
shll
mov
lock
pop
filds
mov
sarl
jl
push
call
push
fwait
sahf
mov
sub
add
push
cmp
jne
inc
push
sbb
inc
sub
scas
sub
mov
add
or
cmp
add
daa
data16
adc
out
shll
xor
imul
mov
mov
fld
jp
loop,pn
fcomp
adc
push
dec
data16
mov
mov
roll
mov
aaa
inc
inc
insb
fcmovnb
das
and
mov
cmp
sti
jns,pt
js
sub
sbb
and
pop
or
lock
jne
loopne
inc
mov
mov
add
xor
in
in
scas
rcl
ret
outsl
jge
cmp
jmp
mulw
pop
arpl
add
cmp
push
cmpsb
int3
cs
sbb
and
ret
sub
gs
or
jnp
xchg
in
fcmovnbe
adc
out
sbb
inc
outsl
insb
arpl
sbb
out
and
adc
pop
je
mov
adc
and
sbb
add
in
gs
jne
push
fcmove
sub
notl
lock
cmp
or
mov
aam
ret
pop
add
mov
add
insb
adc
cmp
rcl
mov
clc
adc
ds
jae
dec
pusha
and
pop
mov
push
mov
int3
cmpsb
ja
jmp
add
xchg
jno
fsubr
jns
mov
mov
push
xor
sbb
xchg
or
test
sub
inc
mov
pop
and
pop
or
fnsave
shl
fcomp
mov
fsubr
jp
mov
fcmovu
push
inc
insb
mov
rorb
stos
push
and
xchg
js
rorl
aas
jp
dec
popa
movsl
sbb
aam
and
outsb
sub
pop
mov
out
jb
call
loope
rcr
jbe
mov
out
int3
jl
xchg
pop
call
int
aaa
nop
mov
mov
jnp
inc
insl
andb
scas
shlb
mov
add
cmp
xchg
dec
adc
ret
bound
pushf
ds
push
xchg
stos
cli
insl
sbb
aas
push
cmc
pop
aam
mov
pop
xchg
cmp
jne
cmpb
pushf
or
mov
outsb
xor
sub
imul
pop
ror
pop
pop
imul
push
loopne
push
mov
add
jmp
adc
and
hlt
gs
xchg
mov
mov
mov
roll
xchg
jmp
cmp
sbb
mov
pop
leave
jecxz
lea
mov
dec
push
iret
mov
outsl
cltd
test
in
loopne
mov
repnz
cmp
dec
cmp
loop
sbb
rorl
xor
push
cld
dec
sub
inc
arpl
iret
mov
mov
dec
sub
inc
divl
xor
dec
push
cmpl
xor
pushf
push
cmp
pop
or
sahf
fucomip
pop
push
out
aam
xlat
cmp
cmpsl
mov
addr16
xchg
xchg
dec
adcb
add
lock
idivl
inc
ja
jmp
aad
clc
pop
xchg
lock
xchg
pop
ss
dec
mov
rcr
jmp
test
pop
ja
ret
mov
sti
int3
and
mov
xor
scas
push
mov
adc
cmp
jbe
cltd
insl
popa
xlat
jne
cltd
mov
cmp
aas
pop
movl
insl
leave
lods
loope
hlt
pusha
jge
lret
inc
aad
sbb
aam
adc
mov
and
jge
xor
mov
mov
aad
inc
xor
adc
dec
icebp
adc
jle
scas
call
fs
shl
jmp
xor
cmpsl
jl
dec
lahf
sbb
xchg
mov
xchg
idivb
scas
xor
stc
xlat
rcrb
mov
mov
hlt
cld
sub
jb
pop
in
mov
mov
jb
xchg
ss
test
cmp
int3
xchg
aam
lock
stc
cmp
mov
popf
les
roll
mov
iret
out
arpl
jmp
mov
lock
test
pop
inc
test
and
cmp
ja
int
ja
rorl
jge
shrl
out
clc
adc
and
adc
jbe
imul
jno
imul
mov
push
dec
mov
sbb
mov
out
jge
mov
movsl
imul
mov
imul
cmpsl
fildl
ret
push
xchg
insl
xchg
cmc
icebp
aam
inc
or
pop
rolb
mov
adc
inc
cmp
in
cmp
push
test
ret
dec
aam
cmp
cli
fiadds
jne
inc
mov
mov
ds
mov
or
sti
cmp
dec
outsb
lock
xor
adc
adc
push
js
or
fwait
inc
pop
lock
xlat
push
jge
lds
add
insb
mov
jmp
decb
lret
pop
adc
fisttpl
stos
cmp
jnp
fstl
dec
iret
dec
test
dec
push
jg
ud1
dec
cmp
unpcklps
mov
inc
lret
xor
insb
dec
or
shrb
mov
pop
sub
add
sbb
into
mov
imul
pop
repnz
or
push
xor
push
mov
and
inc
pop
xchg
cmpsl
pop
ss
rorl
sub
sbb
ret
sub
loop
mov
or
sbbl
scas
sub
aaa
xor
rorb
addr16
mov
rcrl
mov
xor
das
int3
jmp
mov
andb
inc
sarb
popf
mov
insl
sbb
nop
aad
push
inc
xor
mov
mov
lock
in
out
pusha
add
push
sub
outsl
add
inc
fadds
data16
push
mov
add
sub
sarb
mov
xor
push
pop
sbb
mov
cmp
shll
add
mov
sbb
jge
sbb
hlt
sub
iret
xchg
sub
out
pop
aad
push
jge
pop
add
iret
lcall
adc
das
pop
leave
cwtl
lock
dec
xlat
jo
mov
aaa
mov
insb
pusha
jb
mov
jbe
hlt
pop
push
es
xor
mov
adc
bound
insb
jo
jo
or
cli
fstpt
shrb
cmp
inc
sub
insl
popf
int3
stc
mov
pop
pop
mov
mov
pushf
jp
imul
mov
fcoml
jle
jge
aam
jne
jge
arpl
inc
ret
mov
or
cmpsb
add
push
inc
lea
xor
add
cmp
mov
jmp
in
mov
add
dec
ja
mov
das
js
lcall
add
sub
mov
xchg
sarb
add
cmpsb
scas
int3
pop
push
mov
in
imul
xor
loopne
ret
movl
jne
or
ss
xlat
sub
xor
push
mov
jb
xchg
adc
xchg
or
xchg
pop
cmp
adc
cmpl
pop
jb
xor
call
jne
inc
xor
shlb
push
ffree
add
pop
mov
push
jno
dec
test
stos
adc
add
push
mov
add
cmpsb
mov
add
jo
fimull
in
in
cmpl
dec
jno
dec
xchg
push
cwtl
mov
mov
push
mov
stos
daa
push
pushf
mov
mov
push
push
mov
push
mov
rclb
fdivs
xchg
cmp
xor
out
aam
lea
out
lea
dec
xor
out
adc
outsb
pop
xchg
shl
sti
hlt
and
xchg
lds
sbb
sub
in
cmp
sti
push
repnz
shrb
loop
popa
mov
jbe
jg
pop
out
mov
mov
outsb
sbb
sbb
jnp
jo
out
inc
pop
faddl
adc
or
or
jne
xchg
inc
cmp
outsl
arpl
loopne
xor
je
js
ljmp
sarl
jns
aaa
ret
add
mov
xchg
outsb
push
add
mov
sub
outsb
jge
or
cmp
lahf
sbb
sbb
loope
aad
fs
xor
add
jle
fdivrs
pop
pop
incb
or
ret
mov
nop
sub
fistl
inc
mov
fildl
sbb
leave
dec
leave
mov
jo
lods
repnz
jge
shrl
xor
lock
std
hlt
shlb
inc
and
or
adc
in
scas
mov
fistpl
iret
adc
mov
adc
shll
and
adc
scas
add
mov
leave
xchg
sub
push
aad
sbb
and
rclb
xchg
and
shl
inc
mov
jbe
arpl
jne
and
mov
in
add
cld
outsl
mov
cmp
and
xchg
jl
mov
addr16
adc
loopne
ret
xchg
mov
xor
pop
out
mov
and
mov
jae
sbb
clc
gs
fisubrs
in
push
cs
test
jne
mov
cmp
jno
rcll
xchg
mov
mov
rclb
sbb
rcl
xor
add
mov
dec
lods
mov
or
cmp
or
sti
pop
in
jg
jae
adc
mov
xor
stos
xchg
inc
filds
jae
lcall
push
mov
jg
sbb
push
mov
call
xchg
push
mov
imul
push
pop
cltd
lret
push
cmp
xor
inc
adc
dec
pop
rolb
js
sbb
dec
push
push
cltd
push
xchg
pop
mov
inc
fiadds
std
inc
and
pop
or
jge
xchg
dec
lahf
imul
frstor
mov
sbb
cmp
or
fiadds
fwait
push
push
mov
mov
fldpi
inc
cwtl
sub
jmp
pop
arpl
push
cmc
push
xor
sbb
dec
jns
sbb
add
pop
xchg
mov
jp
jne
sub
je
out
loop
jns
xadd
lea
push
mov
orl
loopne
rolb
orl
fidivl
inc
shlb
ret
hlt
xor
movsb
adc
mov
inc
aaa
push
pop
nop
mov
testb
aaa
pop
leave
mov
negb
lahf
jns
into
add
ffreep
mov
test
cmp
clc
popa
pusha
adc
mov
jmp
fsubp
mov
or
std
mov
pop
fimull
sahf
and
shll
mov
add
jmp
pushf
mov
push
push
dec
jne
jmp
dec
jb
xchg
inc
dec
adc
aad
push
fwait
das
dec
aam
jae
sti
sub
dec
sahf
cmpsb
out
shll
jg
les
pushf
mov
or
outsb
fildl
xchg
sub
xor
fists
or
lods
jbe
cmp
xor
and
jge
fbld
sarb
mov
sbb
sbb
xchg
clc
out
imull
movsb
inc
out
stos
fildl
inc
inc
jmp
mov
cmp
add
fst
sub
jge
xchg
hlt
cltd
pop
mov
push
add
iret
in
pop
cmpsb
xlat
adc
fcmovne
inc
shll
addb
mulb
dec
outsl
call
mov
rcrl
mov
jmp
cmc
push
out
movsb
push
test
mov
pop
bound
clc
sbb
fiaddl
pop
push
pop
in
jge
sarl
dec
sub
scas
or
sbb
mov
popa
sahf
es
add
test
and
lret
shrb
push
fwait
pop
dec
push
lret
pop
push
test
push
out
sub
movb
adc
pop
aam
mov
xchg
dec
test
push
rorb
jo
loop
ja
stc
add
xchg
mov
clc
cmc
jo
stos
dec
mov
pop
mov
les
inc
jg
push
pushf
pop
lret
in
jp
test
and
fcompl
jbe
jle
clc
loop
adc
add
mov
cmp
mov
stos
ja,pn
rcl
in
inc
xchg
mov
and
jle
shlb
cmp
sahf
lods
les
js
add
xchg
jle
and
ret
imul
aas
lock
popf
push
imul
and
mov
aam
cmp
jge
in
pop
in
ret
call
push
mov
mov
and
xor
cwtl
add
xor
dec
mov
pop
and
out
and
jb
mov
ret
insl
adc
movsb
and
fsubp
fildll
cmp
sub
mov
arpl
xor
inc
mov
or
insb
or
mov
fidivs
mov
lret
adc
inc
mov
add
jp
jmp
ret
adc
cmp
jno
movsb
inc
test
or
fsubl
icebp
ror
in
arpl
rorb
jl
int3
sahf
cltd
xor
leave
shll
lock
leave
out
mov
scas
mov
xchg
xchg
sub
clc
jae
fcom
push
orl
dec
cmpsl
popf
cwtl
dec
insb
popf
aam
xlat
scas
xor
xchg
mov
pop
cmc
jb
scas
sarl
fldl
int
cltd
ja
scas
in
scas
imul
test
divb
xchg
push
xlat
push
aam
jg
push
in
push
outsl
outsb
ljmp
dec
pop
adcl
push
popf
xchg
stos
add
sub
ja
sbb
xchg
inc
sbb
call
or
cmp
test
mov
cli
mov
jmp
jecxz
dec
mov
jle
stos
scas
mov
lcall
ja
jbe
into
and
out
xlat
bound
fnsave
mov
inc
xlat
mov
fst
cmpsl
mov
roll
fistl
and
jno
jo
add
and
jo
mov
jb
imul
fiaddl
ret
xor
shrb
stc
sbbl
mov
xor
dec
ffreep
add
stos
pop
das
dec
mov
adc
mov
icebp
scas
int
dec
addr16
out
jns
mov
and
imulb
and
jge
xor
sbb
mov
and
mov
lods
loop
mov
and
les
outsb
jbe
clc
rolb
xchg
inc
jge
pop
jmp
cmp
jne
sub
aam
cmp
test
fcomps
ds
adc
or
pop
ret
jo
aaa
loope
cmp
adc
inc
adc
notl
cwtl
jmp
mov
jge
pop
cmpsb
jb
leave
into
imul
jle
mov
add
mov
lret
push
cwtl
test
or
jp
int
cmp
mov
sub
dec
mull
pop
mov
into
loop
mov
js
mov
scas
out
popa
popf
orl
inc
insb
and
subb
pop
js
or
mov
sbb
cmp
sbb
jns
push
insb
cmpsb
cwtl
ds
add
xor
add
je
fnstsw
jge
cmp
push
stos
out
push
xchg
add
aad
push
dec
lcall
add
inc
adc
gs
mov
sbb
aad
xchg
ret
push
sahf
xbegin
sar
dec
mov
lock
pop
jle
js
lcall
jb
outsl
pop
jbe
mov
iret
pop
imul
jge
xchg
aad
sub
out
and
mov
adc
arpl
fistl
mov
ja
or
jo
mov
adcl
fildl
test
mov
inc
xchg
sti
ret
cmp
cltd
imulb
icebp
subl
xchg
subl
out
fwait
push
insl
clc
shr
pusha
aas
je
loope
sub
pop
loopne
sbb
sbb
cmp
push
addb
inc
dec
jmp
pop
sbb
or
fisubrl
arpl
jno
xor
and
ret
and
adc
adcb
inc
mov
stc
call
pushf
rorl
jb
jae
sub
or
notl
pop
sbb
adc
push
or
dec
inc
cmp
fldl
in
ljmp
mov
pop
inc
scas
jne
xchg
mov
jbe
mov
mov
ljmp
jge
shll
mov
jno
or
cmc
clc
push
mov
rcl
jns
jbe
out
sti
fistpll
fidivrl
stos
xchg
mov
fyl2xp1
cmp
das
mov
xor
xor
cmp
mov
cmpsb
dec
andb
inc
push
ficompl
mov
in
mov
sub
test
hlt
add
insl
pop
loopne
scas
pop
loope
sub
test
dec
sbb
js
clc
cmpsb
lock
dec
xlat
add
out
sub
loope
pop
rcl
add
xchg
imul
cltd
cmp
hlt
or
gs
out
sbb
or
push
in
sbb
or
icebp
aam
mov
loop
sub
pop
mov
and
ficoms
jno
sbb
shlb
mov
sub
dec
adc
insl
adcb
insl
and
mov
pop
jmp
int3
push
or
push
jg
and
pop
outsb
lahf
test
add
dec
std
xchg
xchg
iret
pop
cmp
mov
mov
push
adc
mov
jne
iret
lahf
jecxz
insl
xchg
cli
data16
mov
jne
inc
sbb
out
dec
icebp
cmp
out
fs
aas
clc
adc
push
repz
cmp
sbb
icebp
mov
test
jmp
iret
sbb
pop
fwait
imul
testl
mov
or
jo
mov
aad
mov
push
in
or
sahf
ss
iret
dec
or
add
daa
sub
lret
call
push
add
sbb
xchg
pop
out
mov
ds
outsl
jns
pop
or
fldl
sub
subl
daa
mov
mov
imul
sbb
pop
mov
daa
sbb
negl
add
mov
test
pop
iret
add
mov
push
sti
cmp
sub
jo
ffreep
cld
xchg
mov
inc
cmp
xchg
addl
dec
mov
loopne
nop
pop
imul
and
insb
fists
mov
cltd
or
sbb
mov
dec
fimuls
mov
fstpt
cmp
fcmovnu
mov
pop
mov
rorb
jne
xchg
fwait
inc
push
je
andb
adc
and
jecxz
cmp
aam
testl
jne
hlt
push
push
or
out
sahf
cmpsl
lods
nop
out
mov
add
lret
jno
sahf
jmp
lods
xchg
mov
cmp
push
or
jg
rcrb
and
adc
xchg
lcall
mov
subl
push
pop
test
pop
or
jmp
sahf
inc
sbb
repnz
je
std
push
push
insl
mov
and
cmpsb
mov
outsl
dec
mov
arpl
mov
and
push
sti
inc
mov
cwtl
mov
std
xchg
jo
test
push
mov
xchg
fiadds
dec
pop
jecxz
std
mov
mov
push
jmp
push
xor
pop
int
cmp
ret
dec
mov
and
ja
and
jbe
xchg
dec
jb
xchg
fwait
add
fsts
lods
add
movsb
jae
add
inc
mov
daa
mov
ret
ret
aas
jb
push
dec
dec
adc
jo
cmp
xor
lods
lea
bndldx
xorb
mov
xor
adc
jmp
mov
icebp
jae
fs
mov
cld
sbb
mov
inc
and
or
rol
ffree
or
sub
dec
xchg
mov
jle
xor
mov
mov
xor
sbb
les
jo
pop
mov
inc
add
inc
lea
cmpsl
sbb
jo
mov
cmpsb
cmp
ret
ret
das
rcr
mov
jle
out
cld
test
adc
push
ret
mov
loop
dec
rcl
jecxz
add
adc
mull
jae
dec
mov
jecxz
xchg
ficomps
jae
inc
in
push
push
cmp
sbb
mov
bswap
out
mov
xchg
aam
sub
rcl
ret
mov
xor
aaa
mov
les
in
aad
movl
push
cmp
mov
arpl
push
adc
iret
sbbl
subb
test
hlt
les
sbb
push
mov
imull
fwait
sahf
lods
daa
mov
int3
mov
mov
xchg
mov
sbb
fimuls
ljmp
stos
in
fwait
and
sbb
ret
sub
sbb
js
sub
insl
push
orl
outsl
scas
and
jne
xor
jne
mov
into
cmc
movsl
adc
mov
cmpsl
mov
insb
ds
pop
mov
or
sbb
and
test
dec
push
sub
sti
fdiv
stos
xchg
pushf
mov
adc
mov
rorb
jnp
aaa
inc
mov
cmp
arpl
pop
dec
cmc
jne
mov
and
sbb
rorl
jmp
mov
dec
adcb
lods
jbe
cwtl
insl
jne
add
mov
sbb
sub
sbb
jae
insb
mov
cmp
or
cs
rol
adc
jno
pop
dec
mov
rclb
aam
mov
daa
push
out
js
les
sub
loop
mov
je
dec
xchg
push
jle
jmp
cmpl
inc
mov
mov
sarb
je
arpl
and
jle
push
jbe
jp
sbb
nop
fcmovu
test
ja
jb
jl
jns
orl
jge
stos
jle
ret
mov
mov
push
push
popf
es
sbb
pop
pop
insl
lahf
xor
mov
or
ja
inc
rorl
insl
mov
out
adc
sub
out
mov
push
data16
mov
ss
pop
cwtl
or
add
divl
movsb
rorl
mov
mov
and
insl
pop
push
shl
push
push
aas
cmp
jle
in
pop
xchg
adc
div
cmp
pusha
fcmovnbe
mov
mov
lods
mov
inc
sbb
rolb
aaa
jbe
push
outsl
ss
nop
outsl
pop
enter
xchg
rep
fimuls
mov
aam
xor
xchg
addb
hlt
pop
mov
push
push
bound
and
rcrb
add
loopne
jge
mov
mov
jl
mov
mov
xchg
lock
mov
adc
pop
daa
push
push
loop
xor
push
or
outsb
pushf
call
scas
add
add
jge
xchg
xor
jnp
adc
and
add
jecxz
mov
cmp
xchg
push
dec
jmp
lods
sbb
insl
xchg
or
test
cmp
fucomp
inc
push
xchg
repz
lods
sti
push
and
add
sub
push
ficomps
jnp
push
test
push
iret
cmp
push
sbb
pop
inc
in
mov
lods
stos
adc
notl
mov
mov
test
lods
insl
mov
lret
xor
leave
add
cmp
dec
repnz
stos
outsb
jle
int3
xchg
mov
sub
dec
scas
mov
icebp
sbb
sti
fs
jmp
jl
lds
push
mov
loopne
add
inc
mov
pop
stos
rorl
lret
fldcw
mov
hlt
jo
mov
sbb
xchg
daa
gs
pop
daa
jmp
mov
cmp
jne
insl
cmp
fidivrl
imul
sub
imul
or
orl
add
mov
cmp
sarl
inc
call
out
pop
icebp
loopne
and
shrb
outsl
orb
cmp
cli
add
lret
xor
add
mov
fidivrl
inc
fcmovnb
mov
pop
jge
dec
inc
imul
add
dec
push
adc
push
mov
cmp
adc
jge
pop
js
jns
leave
movsb
test
mov
xor
imull
pop
push
jg
in
jno,pn
movsb
movsb
outsb
nop
push
jae
test
loopne
push
mov
cmpb
push
ja
es
in
es
mov
xor
les
sub
sbb
pop
mov
or
in
mov
push
sahf
jge
loopne
js
sbb
lcall
jae
notl
out
dec
sbb
jmp
out
popf
mov
mov
fcoms
inc
xchg
xchg
insb
xchg
imull
pop
cmp
add
jne
mov
lods
jecxz
insb
lock
mov
sbb
or
rcr
mov
stos
dec
jl
mov
frstor
or
cmpsl
jo
out
jo
mov
pop
aad
xchg
pusha
inc
arpl
xlat
mov
sbb
push
mov
vpsrad
clc
mov
dec
aas
les
xchg
push
xor
sbbl
cmp
push
aaa
sbb
out
cmp
dec
xchg
repz
push
dec
sub
imul
push
sbb
fldenv
inc
pop
sub
hlt
rcll
jmp
lcall
xchg
mov
adc
shrl
and
mov
or
pop
inc
mov
cmp
sbb
push
mov
punpckldq
popf
mov
jno
aad
repz
mov
cmp
mov
pop
push
add
mov
mov
lock
jecxz
add
test
pop
repz
push
push
adc
arpl
stos
cwtl
sbb
pop
scas
dec
outsl
loop
cmp
xchg
adc
mov
sub
subb
fld
ret
mov
jl
arpl
mov
sub
jle
xchg
lods
mov
insl
ret
outsl
sub
lea
in
aam
ja
push
xchg
test
ljmp
jecxz
loope
loopne
inc
ja
push
ljmp
dec
out
js
lcall
push
addb
mov
mov
jbe
fnsave
inc
adc
pop
push
push
enter
fsubrs
sbb
sbb
or
jle
out
outsl
xchg
pop
jo
push
or
push
arpl
pop
fdivrl
pop
fnstcw
clc
ret
cmp
ds
sarl
aaa
pushf
cmc
outsl
inc
dec
mov
dec
mov
in
or
inc
mov
out
stos
xchg
dec
sub
and
stos
or
cmp
pop
ret
mov
in
adc
cli
scas
push
loopne
in
shll
inc
fwait
mul
inc
cmpl
push
pop
xchg
add
je
sub
mov
mov
cmpsl
jnp
xor
lea
add
sbb
cmp
insl
push
adc
sti
fldl
mov
fdivr
fisubl
outsl
push
js
ficompl
scas
cmpsb
arpl
xor
push
repnz
imul
mov
std
pop
pop
push
js
js
js
and
cmc
sub
rclb
mov
mov
stos
cmp
sbb
pushf
cwtl
mov
fwait
movsl
fwait
add
ja
mov
mov
imull
push
stos
sbb
jg
imul
sbbl
cmp
test
jecxz
scas
xchg
lock
pop
dec
sti
orb
test
adcl
std
rolb
adc
add
in
or
xor
orb
mov
mov
mov
jo
adc
dec
lock
hlt
mov
sbb
and
out
lds
adc
addr16
inc
icebp
adc
push
movsl
jge
mov
loop
cwtl
int3
bndstx
xlat
xlat
les
and
jmp
dec
push
divl
lods
or
fisubrl
jae
lea
loop
leave
xor
dec
jne
or
cmp
pop
std
testb
gs
xchg
mov
cmp
add
fcoml
jno
fistpll
stos
stos
idivl
jecxz
push
push
mov
sub
jb
adc
add
dec
clc
jnp
pop
pop
pop
sub
je
sbb
inc
std
mov
leave
xor
mov
cmpsl
sub
jl
ss
aam
mov
gs
and
jecxz
sbb
pop
incl
pop
and
add
aad
movsl
xchg
push
dec
jecxz
mov
adc
xchg
stos
lock
pop
xchg
sub
pop
cmp
scas
inc
mov
aaa
das
lock
sbb
lret
sub
add
fimull
push
jb
mov
in
mov
or
hlt
jle
pop
jne
sbb
push
sub
data16
aaa
aas
stos
subl
loope
pop
dec
sbb
xchg
adc
mov
cs
jnp
es
das
ficompl
adc
out
and
cmc
push
dec
enter
jl
sbb
xchg
cmp
mov
push
push
in
xchg
arpl
jmp
add
in
adc
sbb
jge
in
push
fcompl
jmp
sbb
push
sub
jb
xchg
insb
mov
adc
and
rcl
jge
imulb
pop
lock
mov
das
mov
out
xor
push
test
mov
add
std
ja
mov
push
call
add
roll
in
sub
sbb
fisubrl
xor
sub
loop
mov
aas
pop
int3
out
sahf
and
sbb
insb
cmp
outsl
push
or
or
mov
jo
jecxz
out
stos
test
mov
stos
sub
sub
push
fs
xor
repnz
jge
les
dec
sbb
push
mov
adc
pusha
or
jne
cmc
pop
test
pop
xchg
js
sub
lods
popf
push
add
push
ret
xor
cmpl
dec
inc
movsb
pop
cmovg
adc
in
popa
jmp
push
imull
jp
iret
mov
and
fisttps
add
pop
pop
fstpl
out
add
jbe
or
sarl
mov
sub
xor
push
test
add
test
repnz
sub
sub
cmc
loop
dec
in
lds
jns
sub
pop
pop
stos
add
lcall
ljmp
insl
cmpsl
stos
mov
outsl
sti
hlt
mov
insb
imul
loope
out
pop
jp
cltd
jb
insl
pop
std
sub
aas
mov
pop
adc
jecxz
pop
sbb
push
xchg
dec
mov
in
or
cmp
shlb
cmpsl
loop
mov
inc
cmp
fdivr
movsb
mov
mov
mov
xchg
cltd
bound
jle
sbb
stc
lret
test
incb
leave
sahf
push
mov
ficompl
adc
fs
loop
and
cmp
sub
rolb
cltd
dec
sub
cmpsb
pop
cmp
pop
xchg
mov
mov
mov
and
fs
mov
test
push
mov
and
out
imulb
inc
fs
sub
out
shrl
xlat
xlat
ds
in
sbb
push
dec
jns
jae
insl
shll
xor
popf
mov
push
mov
les
mov
cmc
dec
icebp
shl
cmp
pop
pop
movsl
adc
sbb
aas
stos
fstpl
jg
pop
xor
pusha
outsl
mov
push
push
bound
imul
and
add
sbb
and
jo
pop
inc
aam
mov
lcall
mov
xor
stos
jle
insl
ret
mov
in
mov
push
cmp
fldl
sbb
movl
mov
movsb
lcall
and
mov
jo
into
clc
sub
mov
mov
fimuls
sub
arpl
cmp
dec
xchg
jnp
pop
sbb
adc
cmp
dec
push
shlb
push
daa
shrb
addr16
ret
leave
popf
add
add
ret
ja
push
xor
mov
push
popf
push
lds
enter
ret
mov
mov
xor
mov
imul
lds
in
imul
aas
and
out
push
int3
xlat
inc
addr16
mov
lea
lret
cwtl
mov
stos
test
sbb
sbb
mov
int
mov
pop
lock
add
fninit
and
dec
aam
fisubrs
mov
and
push
or
mov
sbb
stc
or
fidivs
cmp
adc
mul
ds
ss
fwait
addl
or
xchg
push
lea
hlt
jmp
roll
sub
xor
push
add
lods
loope
add
imul
idivb
mov
xchg
iret
lcall
mov
data16
fucomi
bound
data16
mov
sti
inc
roll
cli
dec
mov
jno
xchg
pushf
inc
enter
cmpb
pop
jmp
into
in
pushf
lret
leave
icebp
and
xor
push
dec
daa
pop
mov
and
mov
pop
cmp
or
xor
clc
push
push
subb
popf
lea
push
imul
jne
push
xchg
clc
test
xor
cltd
pop
inc
pop
jecxz
mov
dec
mov
mov
mov
repz
mov
shrb
out
and
ret
cs
mov
ficompl
cmpsl
cmpl
adc
loope
xchg
xchg
sbb
inc
pop
lret
mov
cmpb
mov
pop
das
cmp
jmp
cmpsl
aas
fcomps
pop
pop
outsl
sub
fdivl
mov
mov
imul
inc
dec
pop
dec
mov
jmp
cmpsb
xchg
inc
jge
aas
das
mov
cmp
aad
test
arpl
jle
jne
xor
fstl
dec
subl
test
rcr
add
sarb
clc
pop
popa
and
test
es
sti
add
adc
pop
mov
dec
insb
test
adc
sbb
pop
out
pop
xor
out
add
pop
cltd
arpl
mov
inc
dec
inc
insl
and
fwait
xchg
jo
cmp
pop
adc
jg
pop
mov
mov
in
popa
test
add
pop
pop
or
mov
ja
call
xchg
jge
dec
enter
jl
ljmp
stc
ficoml
loope
out
sbb
es
mov
xchg
xchg
push
xlat
mov
sub
das
jmp
jno
pop
cld
movsl
push
je
sub
sub
pop
loopne
or
icebp
push
addr16
jo
test
setle
fldt
cmpsb
mov
sbb
pop
sub
sar
rcrl
push
enter
push
cltd
stos
mov
dec
pop
dec
in
adc
pop
mov
lock
sti
and
xadd
and
jecxz
insb
addr16
mov
icebp
shll
inc
mov
stos
fcoml
out
mov
dec
arpl
xor
jo
and
fidivrl
ss
jne
pop
inc
adc
leave
add
outsb
in
jl
sub
nop
mov
ljmp
cmp
addr16
mov
push
dec
sub
jo
adc
xchg
shll
sub
popa
mov
scas
adc
loop
loop
cli
mov
cld
test
cmpsb
fildl
add
aam
scas
mov
xlat
xchg
sub
std
ljmp
je
js
pop
lods
aam
arpl
sub
dec
out
mov
xchg
bound
push
dec
jno
popa
xor
jl
or
lret
sarb
push
insb
push
movsl
mov
and
stc
mov
mov
mov
pop
cmp
jle
insb
aaa
hlt
movsb
jl
sub
fnsave
xlat
gs
and
add
xor
ror
bound
dec
lock
push
shrl
dec
mov
popa
jbe
add
mov
arpl
sub
sbb
out
push
jo
mov
jo
inc
or
mov
jbe
cmp
sub
pop
js
pop
push
hlt
mov
sub
popf
ds
fisttpl
jmp
mov
data16
out
jecxz
mov
xchg
xchg
stos
and
mov
jnp
inc
add
in
ljmp
dec
mov
aad
adc
jmp
ret
addr16
cmp
add
sub
orl
pop
sarl
sbb
dec
xor
ss
pop
jl
sub
sbb
in
fstp
bswap
pop
out
mov
pop
sub
sti
cmp
sarl
in
ret
and
mov
add
pop
add
add
push
push
ret
ja
xor
lcall
ficomps
add
sub
xchg
inc
es
xlat
jmp
lock
enter
adcb
xlat
lds
xchg
cli
or
adc
cwtl
loope
mov
scas
jecxz
mov
shrb
iret
ds
inc
mov
test
das
mov
fbld
push
and
gs
aad
pop
outsl
arpl
ja
mov
pop
hlt
mov
sbb
iret
std
test
out
in
testl
dec
sbb
out
fcomi
lds
ds
clc
jbe
dec
andb
not
sahf
aaa
mov
pop
add
cmp
fidivl
sbbl
mov
mov
fcompl
loope
rorl
ret
sub
fistps
mov
pop
ljmp
ja
div
arpl
jg
pop
leave
dec
inc
sbb
add
sbb
adc
fmuls
jge
leave
push
push
pop
adc
and
fstl
mov
cwtl
adc
mov
sbb
imul
shlb
mov
inc
cld
push
shrl
lods
pop
arpl
sbb
and
mov
iret
lods
lea
outsb
stos
sar
mov
push
gs
int
fcmovbe
mov
jg
cwtl
mov
cmpsb
test
scas
mov
dec
mov
xchg
mov
dec
test
pushf
cli
stos
or
lds
push
fwait
sbb
mov
xor
ja
mov
pop
loope
mov
pop
jne
mov
push
sub
xor
mov
out
sub
sbb
stos
ret
jne
cmp
loopne
dec
pop
cmp
lods
xchg
sub
addr16
shll
xchg
test
push
add
mov
nop
fildll
js
hlt
xor
js
test
jo
pop
notl
fwait
jecxz
dec
loopne
sub
sbb
mov
icebp
mov
sub
mov
mov
adc
imull
dec
bnd
js
out
arpl
hlt
test
ror
mov
rcrb
lock
lock
mov
es
and
and
xor
rep
sub
pushf
mov
je
pop
jecxz
test
mov
setl
dec
mov
add
pop
shll
cmp
scas
jg
jg
test
aad
jg
mov
jle
mov
ss
push
subl
int
ja
lds
mov
fisubl
mov
cmp
pop
mov
insl
mov
in
mov
xchg
jne
sub
inc
mov
mov
inc
sbb
pop
xor
sbb
add
lret
push
hlt
mov
or
lods
jg
jo
sbb
enter
or
arpl
xchg
movsl
popa
mov
jmp
je
inc
fcmovnu
cmp
pop
daa
jnp
movsb
mov
jnp
add
cmp
ret
or
mov
sahf
hlt
inc
cmp
pop
xlat
or
dec
mov
jge
sbb
mov
mov
sub
push
sbb
or
test
ror
mov
cmp
rclb
push
push
or
sbb
jp
xchg
cmc
sub
adc
stos
js
and
mov
stos
sbb
lods
jae
jle
add
mov
mov
sub
xor
hlt
or
int
cmc
mov
jle
pop
lock
cmc
mov
fldl2e
pusha
cmp
xchg
cmp
das
pop
jp
mov
xor
leave
addr16
pop
popa
dec
and
js
icebp
pushf
lret
inc
outsb
push
fiaddl
aaa
mov
inc
pop
imul
sbb
mov
adc
subl
scas
xlat
in
mov
jns
sbb
xchg
arpl
into
inc
pop
or
push
jmp
lods
jmp
adc
mov
mov
pop
imul
fcoms
pop
negl
fcmovbe
rol
imul
fcmovu
push
mov
cs
js
cmp
test
adc
shl
mov
loop
fadd
xchg
sti
cmc
dec
outsl
mov
adc
or
add
mov
scas
lcall
or
shlb
or
mov
mov
ljmp
pop
jle
mov
xlat
xchg
jne
fadd
xchg
cs
pop
aas
lea
outsl
repz
das
icebp
fwait
jp
clc
cmp
or
aad
cmp
outsb
cli
dec
sub
or
jae
das
mov
sarl
push
test
and
jl
jp
jmp
add
faddl
arpl
cmp
sti
rorb
xchg
lods
ret
je
and
ret
dec
aam
ss
cmp
in
xor
jb
bnd
and
push
cmp
sub
mov
mov
leave
pop
or
out
sub
ss
repz
repnz
add
ja
dec
add
xor
jnp
mov
or
scas
jecxz
dec
xchg
sub
inc
sbb
mov
adc
ficomps
stc
repnz
sub
loop
out
pop
sbb
ss
push
and
andl
xor
push
sahf
lock
fidivrs
dec
jo
jge
inc
repnz
fadds
add
sbb
ss
push
jecxz
jecxz
jne
fs
pop
stos
int
into
or
cmpsl
jg
cmp
call
jp
sti
clc
mov
in
jb
xchg
aas
cltd
adc
es
inc
iret
leave
mul
cli
inc
mov
shlb
fisttpl
ret
adc
and
and
push
cwtl
ret
inc
inc
sbb
push
push
jno
push
push
sub
dec
mov
jmp
mov
push
cmp
test
add
outsl
mov
lcall
push
leave
sbb
sub
insb
mov
cli
jns
aas
inc
sbb
mov
mov
pop
out
ja
adc
lret
xchg
popa
cmpsb
ss
ja
in
mov
cmp
jmp
xor
scas
sbb
xchg
jp
jmp
pop
fstpl
leave
shl
lods
sbb
jne
add
add
mov
pop
lods
inc
cmp
adc
test
mull
dec
fimull
sbb
test
jmp
xchg
negb
mov
xorl
in
lcall
frstor
bound
mov
xchg
gs
ud0
fldcw
stos
sti
out
mov
cld
jne
xor
xor
scas
and
mov
daa
or
jecxz
cmp
popa
in
jl
jge
sub
jg
int3
fmul
lods
ja
sub
sbb
lcall
sbb
mov
mov
sub
mov
push
adc
cmp
jecxz
das
mov
or
sub
cmp
int3
mov
aas
inc
std
fisttpll
cld
decb
ljmp
mov
adc
lods
cmp
hlt
mov
pop
lock
jno
inc
adc
sub
cmp
sub
in
dec
sti
inc
jl
push
fisubrs
jp
pushf
and
lds
jle
scas
sbb
sub
add
adc
mov
out
cmp
shll
dec
and
fwait
xor
xor
bound
outsb
clc
push
mov
shrb
stos
daa
shl
imul
dec
sbb
jp
lret
std
pop
pop
test
out
call
cmp
xlat
out
dec
sub
aaa
mov
push
push
and
sub
mov
hlt
jb
out
hlt
and
mov
movsb
xchg
push
add
fistps
add
paddsb
push
call
loop
dec
sub
ret
xor
sub
jecxz
roll
mov
aad
jge
sub
push
int
mov
mov
mov
mov
cmp
popa
push
fildll
pop
arpl
ss
in
cmpb
into
jno
mov
sub
nop
data16
cs
inc
sbb
and
sbb
cmp
ljmp
arpl
xlat
rcrl
inc
inc
push
push
sub
adc
mov
insb
jbe
call
arpl
in
data16
popf
push
xor
cmpsb
aaa
cmp
sbb
pop
push
jge
arpl
lock
pop
bound
adc
dec
adc
js
xchg
mov
adc
fadd
lock
add
lds
ret
outsl
add
or
push
outsb
cmp
xchg
lcall
call
and
je
cmc
or
sub
outsb
pop
rcll
int3
lea
aas
push
ret
or
and
or
sahf
or
loop
or
jmp
andl
dec
mov
lcall
inc
dec
adc
dec
mov
loop
push
xor
sub
loop
das
outsl
loopne
aas
fisubrs
jne
cli
shll
and
xchg
clc
cltd
into
insl
push
add
cmc
inc
mov
xor
jnp
imul
std
cmp
enter
dec
add
andb
insl
mov
cmpl
fisubrl
mov
out
push
add
dec
push
lea
clc
and
hlt
mov
mov
ja
sbb
roll
mov
pusha
mov
out
jno
imul
mov
aas
lcall
mov
xor
xor
xchg
fisttpl
jae
sub
jo
sbb
in
mov
xchg
mov
orl
pop
jg
or
push
inc
ret
jle
ret
rcl
mov
pop
inc
divl
mov
rorb
mov
dec
les
push
cmp
add
roll
fsubrs
xchg
add
rclb
stos
add
lret
ja
adc
pop
mov
gs
inc
mov
fisttpl
jbe
mov
xor
hlt
and
cmc
hlt
imul
vmovaps
out
inc
or
stos
jle
jne
xlat
test
jns
cmp
mov
mov
mov
jp
dec
jb
out
popa
ret
sbb
push
lods
pop
icebp
shl
and
in
lret
movaps
add
lcall
inc
divl
das
sub
pop
inc
call
test
jbe
imul
out
dec
xor
pop
cmp
sbb
pop
sbb
ds
push
cmp
testb
xchg
dec
push
test
mov
mov
stos
loop
std
std
and
mov
lcall
scas
add
aad
rclb
lcall
cwtl
xchg
pop
mov
movaps
xchg
fdiv
sbbl
pop
outsb
mov
icebp
jmp
sub
ljmp
fadds
ljmp
lret
push
xchg
cltd
out
sub
mov
out
or
mov
inc
enter
pop
jns
xor
sarl
inc
pop
sub
lahf
dec
dec
or
adc
cmp
sub
xor
mov
jnp
les
mov
dec
fsubrs
cmp
loop
loopne
or
mov
je
lds
dec
sub
adc
popf
push
sbb
jbe
and
xchg
cmc
pop
push
push
mov
lret
inc
xchg
ret
mov
xlat
popf
xor
sbb
cmpsl
stos
push
les
hlt
sub
dec
in
ja
paddsb
inc
scas
sbbl
shl
mov
sub
out
jo
dec
jno
fs
pop
inc
dec
xor
fbstp
icebp
or
sub
xor
enter
ljmp
aam
pop
adcb
mov
pushf
scas
into
scas
mov
in
or
dec
lock
pop
std
or
add
iret
pop
or
jmp
rcr
jb
add
cld
cmp
fnsave
inc
fbstp
imul
mov
ds
addr16
bound
jge
mov
out
pop
mov
jmp
das
shll
repnz
fstpl
xor
flds
outsl
jge
sbb
xor
je
lea
mov
jp
mov
outsb
and
cltd
es
and
lock
and
sub
ljmp
mov
cmpsb
es
stos
fstpl
mov
lea
ds
movl
cld
cmp
daa
inc
adc
push
mov
jno
xchg
aas
stos
pop
ss
shl
xchg
mov
ret
icebp
pop
in
lcall
or
xlat
fsts
pushf
xor
jb
imulb
push
push
bound
jge
add
xchg
jle
adc
sub
outsb
mov
mov
jno
jns
orl
pop
scas
cwtl
repz
xor
in
call
mov
push
int3
fstpt
xor
push
or
add
ss
cmp
inc
minps
stc
or
sar
xchg
add
mov
add
mov
cwtd
sti
jne
jae
jl
or
call
sti
movsl
dec
jne
movsl
adc
add
pop
sub
mov
inc
cmc
mov
jmp
push
mov
inc
gs
mov
das
ja
pop
xchg
jecxz
mov
fildl
inc
sbb
mov
imul
inc
mov
dec
cmp
sub
clc
sbb
pusha
in
and
loop
fdivrl
adc
in
mov
and
addr16
xchg
jmp
sub
and
lea
cmc
jge
rorl
jmp
jnp
mov
nop
xchg
je
adc
addr16
pop
cmc
cmp
hlt
cmpsl
sahf
cmp
ljmp
pop
pop
rorl
and
scas
aaa
xor
and
mov
scas
sub
popf
mov
mov
js
les
push
test
lcall
xorl
adc
jg
fs
shr
in
or
hlt
dec
lock
jge
rolb
scas
ja
inc
cmc
push
imulb
xor
inc
ja
and
loopne
bound
outsb
lods
ljmp
adc
out
mov
inc
cmp
sti
or
xsaves
icebp
add
fnsave
cmp
sub
sti
cmpsl
push
mov
xchg
fstps
cmpl
mov
fs
xor
pop
inc
loopne
mov
icebp
xchg
pop
fidivrs
dec
outsl
adc
lds
fnsave
out
push
push
orl
pop
or
dec
lock
dec
fdivrl
add
mov
cmp
aam
std
xor
push
adc
mov
arpl
inc
jno
bsr
xor
ffreep
jmp
sbb
shrb
ret
subb
aad
aaa
test
in
or
sahf
pop
sbb
iret
pop
jle
sub
mov
cltd
bound
stos
add
push
push
cli
lods
dec
add
jne
xlat
push
mov
xor
cmp
jge
insb
loop
loope
jbe
repz
movsb
sub
or
es
arpl
sbb
push
and
inc
movsl
adc
arpl
lea
pop
je
rcrl
jns
pop
xchg
dec
out
je,pt
sbb
fildll
sub
mov
sub
lcall
inc
lret
dec
sub
cmp
or
sbb
nop
pop
push
in
fsubrs
mov
roll
mov
mov
mov
andl
aad
loopne
pop
jmp
fdivl
mov
lods
stc
mov
jo
inc
inc
mov
outsl
jmp
rol
fistpl
arpl
mov
or
outsl
jg
popf
inc
mov
mov
jnp
dec
popl
roll
or
mov
sub
xor
mov
outsl
fwait
mov
mov
out
mov
fwait
cmp
inc
loope
cmp
inc
cs
jg
lods
jmp
mov
in
mov
mov
cmp
outsb
repz
xchg
mov
fcmovbe
cltd
subb
pop
sbb
outsb
ja
punpcklwd
push
xchg
sbb
not
into
inc
int3
cmp
nopl
sbb
neg
pop
arpl
scas
ds
jmp
cmp
jl
call
hlt
arpl
div
insl
pusha
cmpsb
divl
loopne
aam
push
pop
mov
fbstp
push
sub
pop
out
insl
jmp
out
cmp
fstl
roll
cmp
addr16
inc
outsl
push
add
sti
jge
mov
mov
cmc
cmp
or
scas
jmp
shlb
outsl
mov
mov
fildl
jmp
fwait
and
call
cmp
xor
aaa
lods
pop
push
sub
jnp
pop
je
jae
cmp
arpl
mov
mov
jne
std
xchg
sub
out
xor
sbb
lret
ja
je
les
faddl
in
arpl
dec
pop
push
jg
mov
pop
cmp
xchg
mov
divb
aas
mov
jne
out
mov
mov
ljmp
and
add
inc
mov
ss
xchg
addr16
xlat
int3
fnsave
adc
in
mov
es
sti
xchg
lret
pop
fbld
cmc
cmp
cmpb
pop
repz
fildll
adc
inc
aaa
divb
mov
ja
dec
shrb
stos
cmp
mov
icebp
mov
outsb
ret
mov
or
outsl
subl
hlt
inc
and
fstpl
xchg
bndstx
mov
je
insb
mov
jae
outsb
mov
and
arpl
outsl
pop
pop
popa
mov
or
mov
jl
filds
pop
pop
adc
fstpt
jae
mov
push
pop
rep
notl
fnsave
cmp
add
js
arpl
lret
ja
cmp
jle
insb
outsl
dec
out
push
mov
stos
das
movsb
and
pop
and
dec
icebp
xor
jmp
push
bound
mov
jbe
mov
mov
imul
cmp
arpl
dec
bound
aam
fldl
and
cmp
xchg
pop
cmp
sub
mov
xchg
mov
ret
out
lret
sub
adc
adc
xchg
outsl
mov
jecxz
sbb
fsubs
rclb
mov
cmp
sub
sub
imul
mov
mov
and
jle
inc
jge
xchg
xor
push
inc
popf
jmp
js
inc
and
loop
xchg
insl
sti
mov
dec
mov
test
and
push
dec
cmpsb
adc
in
das
outsb
push
sbb
lea
das
dec
insb
cmp
subb
xor
insl
jo
dec
stos
arpl
xor
lock
mov
mov
iret
int
out
xor
flds
or
out
mov
test
sbb
pop
sbb
push
test
es
sbb
ljmp
cwtl
push
inc
rcr
ss
or
mov
xor
movsb
dec
push
imul
jno
push
inc
xchg
pop
movsl
sub
aam
add
inc
mov
jmp
fwait
push
pop
xchg
add
and
arpl
cmp
sub
mov
mov
and
cmp
push
push
out
rorb
lret
movl
dec
xor
and
sbb
test
jo
in
pop
mov
add
pop
push
or
std
ss
aaa
dec
lods
adc
xchg
outsl
movsl
pop
stos
call
fcomi
cwtl
ret
call
sahf
aaa
push
pop
add
fsubrs
arpl
cmp
out
shlb
outsl
mov
jne
orb
call
push
out
scas
add
dec
ja
stos
pusha
jmp
ret
lea
mov
inc
sbbl
fldl
repnz
aas
inc
dec
cmc
je
mov
mov
sub
aaa
xchg
insl
sub
daa
insl
sbb
pushf
jnp
in
pop
jg
idiv
daa
jle
cli
loope
jp
or
pop
sbb
jbe
pop
insl
jle
out
incl
shl
xchg
add
arpl
cmp
ja
inc
pop
jbe
xchg
out
mov
xor
mov
sbb
xor
cmp
push
aas
outsl
or
pop
dec
mov
dec
aaa
retw
sub
testb
add
sbb
out
lret
faddl
adc
sbb
into
rcll
aas
ja
outsl
sub
and
dec
sbb
add
bound
inc
jno
cmpsl
mulb
outsl
lret
inc
or
test
push
or
mov
fildll
pop
push
or
cmovge
or
std
pushf
loop
jg
out
clc
bound
loope
jb
mov
xlat
leave
rcl
mov
cmc
leave
addr16
push
idiv
lea
push
mov
imul
popf
imul
and
inc
je
dec
pop
enter
call
psubd
mov
ret
jp
jge
fists
xor
cmp
cmp
sbb
ret
daa
and
push
data16
sbb
jmp
mov
ret
rcr
sahf
sbb
jno
imul
pop
jmp
sub
sub
cmc
outsb
fisubrs
bound
ja
sub
imul
mov
mov
shl
mov
outsl
das
clc
push
repz
xchg
loope
pop
daa
test
xlat
push
daa
mov
ljmp
dec
movsb
jnp
pop
inc
cmpsw
loopne
arpl
fbstp
mov
inc
sbb
dec
movsb
cmp
lods
jae
and
sti
inc
in
rolb
outsb
movsl
stos
jbe
mov
push
xchg
or
pop
test
sti
jl
mov
pop
cmpsl
adc
sub
in
push
les
add
and
std
fidivrs
push
stos
xchg
ljmp
mov
xchg
pop
fisubrl
sti
cmp
or
jp
push
daa
inc
add
add
inc
lcall
or
pop
xlat
xchg
cmp
mov
mov
adc
inc
or
icebp
and
outsl
push
mov
stc
pop
mov
dec
adc
test
out
rorb
pop
jmp
out
pop
loope
inc
dec
jmp
ret
loope
jge
imul
cmp
sti
inc
aam
and
xchg
or
aaa
or
mov
fstl
cmpsb
or
sbb
push
int
test
das
jb
lock
inc
daa
cmp
js
repnz
outsl
daa
insb
add
or
arpl
cmp
testl
or
lea
mov
and
fildll
loop
push
mov
clc
mov
imul
in
ljmp
mov
adc
ret
addr16
push
cmp
int3
pop
shr
add
cltd
loopne
jmp
sbb
clc
cmp
std
out
out
call
pop
lods
and
loopne
ds
or
fmuls
popa
loop
ds
push
pusha
jl
mov
icebp
outsb
lcall
icebp
inc
inc
jnp
pop
pop
sbb
cmovns
mov
mov
pop
sbb
inc
pop
dec
dec
outsl
jle
filds
in
mov
xor
je
xor
jnp
imul
jge
add
xchg
fldl
out
inc
inc
mov
pop
cmp
or
jo
sbb
outsb
jl
aam
or
adc
shll
das
push
dec
test
push
push
jae
gs
ret
out
fidivrs
fwait
xchg
inc
inc
dec
add
inc
jns
add
push
xchg
arpl
adc
int3
leave
jnp
outsl
rorb
out
sbb
dec
inc
pushf
fidivrs
adcl
jge
xor
inc
and
bound
sub
xchg
xchg
ret
imul
lods
decl
es
pop
std
je
aad
bound
stc
jp
fisubl
cmpb
inc
insb
iret
dec
push
sbb
xor
mov
push
jns
lahf
jnp,pt
cmp
cs
mov
shll
jnp
fdivr
lea
and
subb
dec
inc
loope
xchg
jbe
jo
aam
mov
jge
mov
das
jle
cmp
arpl
nop
mov
ret
jg
cmp
and
pop
fildl
pusha
pop
rep
mov
fcoms
pop
pop
aas
cmp
fcomi
cmpsb
out
loop
sbb
je
bnd
in
mov
jmp
jne
dec
mov
sub
mov
aaa
mov
dec
xorl
fnstcw
inc
cmp
insl
aad
mov
daa
push
out
jno
int3
lcall
call
scas
or
push
sub
and
xchg
adc
fiadds
adc
bndstx
dec
cmp
aas
xlat
mov
inc
mov
.byte
movsb
jmp
sbb
.byte
mov
adc
or
push
je
imul
add
push
mov
lea
mov
push
lea
and
aas
add
lret
fldt
sbb
add
jge
jae
mov
jmp
das
inc
and
xchg
lea
fmull
or
das
pushl
ja
inc
inc
dec
dec
dec
dec
lea
lea
mov
mov
jl
dec
dec
dec
dec
lea
mov
dec
push
call
add
jg
mov
add
movsl
push
fcmovne
in
pop
inc
dec
cmp
jns
cs
je
inc
xchg
mov
mov
adc
aam
cs
psrld
lea
jae
test
mov
mov
dec
mov
mov
xchg
mov
pop
xchg
std
out
mov
ret
nop
push
mov
push
jnp
sbb
inc
pop
pop
ret
jmp
mov
pop
hlt
lock
inc
push
in
call
sbb
inc
push
sbb
int3
push
sbb
sarb
mov
nop
inc
push
lods
test
mov
pushf
cmp
cld
mov
mov
xor
xor
and
sub
xor
and
and
and
inc
fisttps
call
mov
cmp
xor
pushl
cmp
mov
in
jle
arpl
je
adc
jmp
loop
arpl
jno
ds
inc
add
or
mov
aas
ret
jne
mov
mov
repnz
aas
add
out
ljmp
ds
inc
loop,pt
jae
dec
mov
inc
loop
mov
divl
mov
xor
fstpt
adc
jne
or
inc
cmc
mov
pop
mov
pop
xor
clc
adc
repnz
mov
push
roll
rcll
xlat
fdivrp
mov
ds
pop
cmpsl
shll
push
dec
mov
jecxz
addr16
cmp
dec
aaa
dec
cli
sti
push
jae
imul
sbb
divl
ja
and
inc
push
ljmp
add
inc
repnz
mov
mov
cli
dec
mov
jbe
xchg
rcr
mov
shll
cmc
pusha
clc
add
fsubs
adc
fwait
adc
pusha
popf
daa
mov
pusha
mov
mov
lcall
sti
mov
fistpl
lods
mov
mov
push
test
outsb
movsl
clc
or
inc
andb
sti
lock
fnstsw
pop
lea
mov
lcall
sub
jne
jne
into
push
pop
jmp
cmp
push
mov
out
mov
cmc
xor
pop
push
mov
xchg
add
mov
xchg
insl
inc
adc
pop
pop
mov
ss
pop
cmp
sbb
sti
out
mov
ret
pop
jae
dec
dec
xor
lea
outsl
or
sub
inc
cli
pop
sbb
xchg
cmp
jg
and
xchg
outsb
xchg
pop
or
dec
roll
test
dec
ds
mov
in
jnp
scas
push
cmc
mov
lods
cmp
or
or
jmp
idivl
int
pusha
push
jge
add
movsb
cmpsb
jge
mov
pop
mov
inc
xor
jge
jbe
fidivrs
lea
or
xchg
cmp
sbb
ss
imul
cmp
into
mov
lods
insl
ds
xchg
mov
jmp
push
jno
and
mov
cmp
dec
cmp
sub
ret
mov
mov
loope
dec
ljmp
out
cwtl
add
insl
insb
fsub
fs
gs
aas
or
mov
or
inc
icebp
ja
pop
mov
mov
icebp
dec
push
dec
cli
add
add
popf
lahf
dec
sub
jne
loop
in
or
xchg
insl
fs
push
or
dec
test
rorb
in
pop
movsl
lret
cmp
ret
dec
or
xor
movsb
dec
adc
mov
incl
cmp
xchg
xor
dec
cmp
xchg
push
mov
ja
es
aad
ret
mov
mov
sbb
adc
mov
fidivl
pop
rorl
test
out
pop
lock
sbb
add
movsl
jne
inc
ret
pusha
cmpsl
in
out
popa
pop
cli
or
test
in
inc
cli
cmpsb
jle
test
mov
jb
cmp
mov
rorl
inc
mulb
ds
or
jae
std
incl
ss
cmp
mov
je
pop
pop
ja
ja
lea
push
push
movl
cmpsl
ffreep
sarb
and
inc
push
loop
pop
ret
mov
popl
outsl
out
jg
clc
mov
mov
xor
divl
test
jne
or
hlt
jmp
pop
push
loop
adc
dec
adc
mov
mov
call
call
pop
clc
mov
add
dec
sub
movzwl
dec
test
jb
in
movl
stos
sbb
lea
mov
sti
adc
lods
push
or
xchg
mov
add
cmp
or
sarb
icebp
and
jmp
jl
xchg
je
cmp
sub
ud1
adc
push
cmp
jle
nop
dec
popa
sub
push
ret
ss
sbb
cmp
out
arpl
dec
rcll
add
sbb
in
nop
sub
call
dec
in
jne
lahf
rolb
inc
ret
adc
std
decl
fs
imul
js
add
outsb
push
push
mov
push
imul
insb
insb
outsl
arpl
push
jb
je
arpl
add
loope
ret
sub
mov
dec
jecxz
cli
mov
mov
js
xor
repnz
mov
mov
cmp
imul
push
add
cmpl
je
scas
mov
ret
mov
dec
test
test
mov
incl
mov
mov
add
cmp
or
pop
mov
and
pushl
push
sbb
mov
and
xor
aas
icebp
das
jg
sbb
das
and
and
icebp
add
xchg
lods
std
pusha
sub
mov
js,pt
jg
repnz
jae
lea
repz
jne
mov
lock
ror
adc
aas
popl
movl
call
add
hlt
shl
decl
cmp
jnp
dec
dec
dec
dec
clc
xchg
sbbb
jg
add
or
inc
inc
mov
aas
jp
in
jl
inc
or
adc
push
add
and
inc
mov
mov
pop
jnp
dec
inc
push
lea
dec
inc
fdivrs
dec
imul
dec
dec
inc
dec
mov
mov
cmp
call
mov
sbb
mov
pop
add
inc
inc
jb
andb
jo
lret
in
cmp
cmp
jo
mov
push
dec
sar
jmp
fwait
jb
dec
dec
cmp
jl
inc
mov
mov
xchg
ret
je
mov
mov
adc
jno
xor
fucomi
inc
xor
gs
outsb
or
inc
or
sbb
inc
dec
xchg
or
and
jl
mov
or
mov
nop
in
or
mov
xorb
push
inc
mov
push
jmp
imul
push
imul
push
pop
incb
insl
jae
dec
adc
push
outsb
lods
jo
imul
dec
fs
imul
outsb
dec
mov
insl
xor
leave
and
out
aas
hlt
xor
adc
cwtl
adc
push
testl
mov
call
dec
mov
fcomps
and
sbb
xchg
out
addl
jb
lea
jo
and
das
cmp
jge
out
jle
dec
sub
mov
mov
out
adc
imul
mov
pop
fistl
fisttpl
jg
mov
inc
sarb
call
insb
mov
fdivr
add
sbb
mov
je
mov
dec
xchg
cmp
test
icebp
sub
cmp
fdivrl
pop
mov
dec
cwtl
sbb
mov
fcmovnu
insl
imul
or
out
dec
std
lea
jle
or
inc
xchg
icebp
in
inc
dec
inc
fwait
pop
lock
fcoms
add
neg
test
add
cmp
or
mov
xchg
insl
dec
inc
add
insl
adc
dec
inc
rcl
cmp
shll
jne
dec
adc
pusha
repz
in
sub
cmp
xchg
mov
jno
mov
mov
dec
mov
out
inc
lea
cld
xchg
mov
mov
pop
out
fcoms
xchg
jge
jge
xor
test
scas
int
mov
inc
loope
sti
ficoms
or
and
loope
dec
dec
inc
test
jne
jl
add
ret
shrb
outsb
imul
jae
pop
dec
cs
sbb
dec
push
outsb
js
jle
mov
shr
push
ja
ret
push
sbb
xor
aaa
testl
les
clc
test
mov
popa
dec
loopne
fcomps
or
cmp
jp
or
hlt
mov
clc
loopne
or
mov
dec
mov
jne
dec
mov
je
jmp
mov
jb
inc
dec
mov
sub
add
or
dec
gs
add
push
insb
or
pop
push
imul
hlt
xlat
fstpl
pop
shll
scas
lock
inc
push
arpl
add
sub
fcomp
pop
popa
std
xchg
jbe
loope
xor
mov
fstpt
mov
sbb
jae
add
mov
das
mov
push
jecxz
or
fdivrl
inc
lods
sarb
movsl
testl
mov
or
jl
mov
daa
sub
or
pop
or
daa
inc
rclb
push
fwait
add
or
and
lock
cmp
push
gs
or
mov
mov
add
mov
fs
cli
call
in
lock
add
add
adc
in
dec
fcoms
xchg
or
fbld
test
sbb
das
gs
and
and
and
jbe
sbb
loopne
call
out
inc
enter
jecxz
in
in
xchg
sub
psllq
popa
mov
ss
adc
mov
ret
mov
cmp
mov
adc
jae
test
jae
jl
fdivs
xor
cmp
sbb
push
inc
push
pop
ja
and
mov
pop
adc
pushf
add
xchg
int
pop
sbb
test
sbb
call
pop
mov
inc
scas
or
in
mov
push
inc
sbb
outsb
lea
into
cmpsb
add
push
or
dec
mov
fdivl
adc
inc
outsb
popa
imul
mov
imul
aam
or
or
adc
inc
push
ret
shr
std
imul
lods
mov
outsb
add
add
loopne
mov
inc
gs
arpl
cld
out
fs
jae
add
insb
cs
lcall
insl
fistpl
add
das
insb
inc
outsb
jl
jns
outsl
jb
insl
pop
mov
sub
ja
inc
gs
pop
je
or
ljmp
or
insl
bound
insb
mov
add
popa
fistl
mov
and
jne
mull
out
dec
add
or
or
dec
jne
mov
aas
je
neg
nop
ja
mov
mov
arpl
call
add
int
in
lcall
shl
movsb
loopne
add
and
xchg
fdivs
insb
cmp
aam
mov
movsb
imul
cmp
fcomp
outsl
mov
mov
mov
stc
jns
sub
enter
movb
testb
add
ret
push
pop
int3
cmp
jne
cld
add
add
add
fwait
sub
and
xchg
in
add
mov
and
cs
aaa
cli
jnp
jbe
sbb
insl
ss
pop
sbb
jb
stos
mov
xchg
add
inc
and
test
inc
jmp
cli
insb
outsl
xchg
pop
inc
mov
cmp
out
add
fidivrs
adc
clc
add
icebp
arpl
lcall
clc
cmpb
pop
mov
sbb
pop
mov
shlb
fwait
ret
int3
movb
add
gs
adc
dec
cmp
fdivl
fldenv
jmp
inc
dec
cmp
cmp
cs
cwtl
js
adc
cltd
shl
rorb
push
in
xor
xor
xor
xor
xor
out
insb
out
xor
aaa
pop
add
mov
pop
xlat
xor
jnp
or
incb
or
add
adc
in
jbe
ret
test
jmp
or
add
adc
xchg
and
hlt
inc
sbb
adc
hlt
pushf
sbb
sub
inc
or
inc
sbb
test
or
inc
mov
or
add
ret
xlat
mov
add
adc
add
test
ljmp
adc
fwait
jmp
inc
roll
test
jnp
test
popa
nop
jmp
xor
push
sbb
cld
cmpl
add
push
clc
mov
cmp
mov
sub
loopne
mov
in
sub
jne
xor
rolb
jo,pt
ret
popa
cld
pop
xchg
mov
cmp
add
mov
push
cmp
lds
mov
pusha
mov
adc
adc
jnp
push
push
and
das
inc
sub
mov
sbb
fisttpl
adc
sub
xchg
jns
rorl
cmc
inc
clc
popf
decl
xchg
hlt
jle
lahf
cmp
lods
sbb
cmp
jnp
mov
int3
ss
push
add
pop
outsl
cwtl
call
nop
movl
or
popa
lods
inc
cs
aas
dec
lea
lret
mov
jno
mov
xor
xor
test
in
dec
push
shlb
adc
and
clc
pop
or
pop
ja
push
or
sbbb
cmp
lret
sub
pop
push
movb
arpl
add
call
test
cmp
cld
rolb
adc
and
movsb
xchg
andl
iret
jne
push
jmp
adc
sub
xchg
or
add
adc
or
mov
lea
adc
sub
outsl
pop
dec
mov
or
inc
clc
push
mov
test
in
pushl
inc
lcall
jne
mov
jns
or
xor
push
repz
jg
faddl
sub
mov
xor
inc
xchg
inc
push
and
dec
inc
xchg
jno
int3
mov
lahf
fs
xor
xor
fstl
jo
fwait
cmp
ss
adc
fwait
cwtl
mov
in
mov
cld
sub
popa
rcrb
sahf
int
sub
les
mov
in
push
dec
mov
xchg
jmp
lock
cmp
popf
add
lock
sub
data16
mov
popl
xor
or
addl
je
push
push
sub
add
hlt
mov
or
mov
mov
iret
data16
je
loopne
and
mov
lea
push
sub
sub
aaa
xor
xor
in
mov
sbb
loop
mov
fs
sbb
lahf
pop
sbb
insb
mov
ret
imul
jecxz
push
int3
inc
cmp
or
mov
cmp
fs
mov
push
xor
insb
push
dec
insb
imul
in
and
fcomps
pop
scas
je
or
sbb
insb
ljmp
jae
inc
mov
add
mov
add
add
mov
jmp
dec
add
das
add
add
aam
stos
xchg
jmp
dec
mov
imul
add
add
outsb
fisttpll
xchg
add
sub
and
add
lcall
mov
add
sub
push
mov
popl
mov
aam
or
ss
fs
add
adc
pop
add
add
pop
add
and
add
js
sub
jns
add
lods
mov
push
add
push
mov
push
add
add
add
jb
mov
test
and
cmp
call
cmp
jbe
mov
add
xchg
mov
dec
cld
pop
jl
add
out
add
jle
mov
and
and
adc
insl
inc
adc
and
jae
xchg
insb
push
imulb
outsb
setge
lret
fists
add
xlat
fistpl
adc
cmp
mov
in
outsl
test
pop
push
addr16
dec
outsb
and
nop
push
add
data16
adc
sub
push
and
mov
dec
mov
jno
mov
pop
mov
out
sbb
jae
mov
fstpt
xor
sub
fdiv
cli
and
movsb
add
add
mov
sti
pop
fisubrl
sub
outsb
adc
sbb
cmp
arpl
scas
std
xchg
sti
dec
mov
add
jno
rcrb
add
aas
cmp
into
insl
out
enter
xchg
sbb
jle
or
add
add
adc
xlat
int
cmp
add
jbe
repnz
or
cmc
and
jo
outsb
mov
test
add
out
inc
pop
and
sbb
push
dec
add
mov
sub
insl
cmp
mov
pop
lods
in
or
and
daa
pop
mov
lret
sub
scas
add
fisttpl
add
mov
fwait
ret
inc
movl
xacquire
aad
cs
dec
and
cld
outsb
sbb
jge
das
xor
clc
mov
shrl
mov
and
inc
pop
add
inc
xor
mov
repnz
gs
mov
icebp
jno
ss
dec
mov
mov
outsl
lret
ret
adc
sbb
fmull
loope
testb
add
ret
fcomi
outsb
mov
sub
test
out
aaa
insb
dec
stos
mov
ds
mov
jo
ljmp
leave
outsb
clc
adc
lcall
fwait
jmp
mov
mov
sti
mov
xor
mov
fwait
insl
cmpsb
jbe
mov
cmp
sbb
xchg
xor
and
in
adc
shll
mov
cmp
jge
lock
inc
push
scas
add
je
insl
popa
mov
push
rclb
adc
sbb
and
and
sbb
cmpsb
dec
jecxz
repnz
pop
fidivl
add
call
pop
imul
addr16
sub
aad
inc
roll
cltd
arpl
fdivs
pushf
push
ds
lock
cmp
shrl
mov
xchg
dec
or
xchg
in
push
shlb
and
pop
ret
outsb
adc
sbb
and
dec
and
pop
jb
xchg
jnp
mov
sub
cs
inc
in
push
out
xchg
js
add
add
scas
and
jecxz
out
adcb
pop
adc
sti
xor
test
in
sarl
je
popa
sub
movsl
xchg
lods
arpl
push
adc
dec
cmpsb
int
je
dec
gs
out
out
jb
inc
mov
dec
lock
hlt
mov
mov
sbb
lock
lock
test
jge
ret
lret
arpl
pop
mov
pop
fcomps
call
divl
pop
cmp
sbb
out
inc
push
ret
mov
lods
test
adc
xchg
pop
call
imull
jp
xor
js
sti
sahf
call
fstpl
sub
rcrb
cli
xchg
test
inc
and
pop
mov
loopne
push
mov
cli
sbbl
sti
add
cs
sbb
and
mov
xlat
add
shll
in
jo
imul
mov
scas
cwtl
xor
ret
ret
or
mov
push
jle
les
jl
outsb
repz
push
cmp
push
sub
mov
jg
scas
xor
subl
ljmp
call
loopne
int3
xor
imull
insb
shld
xchg
outsb
out
mov
movsl
dec
cmp
xor
inc
cmp
mov
aad
js
dec
xchg
imul
rcll
adc
cmp
dec
xchg
repnz
int3
and
pop
pop
les
scas
outsb
sti
ds
pushw
pop
test
scas
addl
stc
aad
mov
pop
fimull
push
inc
fcoml
jo
out
mov
jge
loopne
or
or
jle
idivl
cmpsl
cmp
jp
xor
mull
icebp
stos
pop
adc
xor
aas
fildll
arpl
movsl
imulb
daa
inc
or
sbb
dec
lea
in
pop
and
jnp
lahf
or
bnd
ds
inc
jecxz
ss
cmp
pop
mov
cmc
sahf
mov
ja
inc
sub
out
adc
insb
jl
mov
mov
and
ret
mov
inc
mov
or
andl
sbb
cli
lcall
mov
mov
mov
es
mov
xchg
or
sub
ret
push
lahf
in
jo
call
popa
lea
mov
stos
cs
pop
out
sahf
sub
xchg
xchg
ds
into
in
push
outsl
pop
or
std
mov
xor
jmp
leave
ds
repnz
or
dec
mov
add
scas
icebp
pop
push
xlat
sbb
dec
mov
outsl
ds
pop
fcomi
imul
cwtl
loope
das
inc
ss
mov
or
ret
adc
subl
cmp
movl
lods
mov
xchg
lret
jns
fcmovbe
je
loope
cmpsb
jg
hlt
cs
mulb
data16
inc
inc
jp
xchg
add
je
cmp
xor
push
fisubrl
xchg
dec
or
in
mov
sbbb
leave
in
or
xchg
mov
cs
pushf
sub
mov
mov
xchg
ds
push
add
cmpsb
iret
mov
adc
xchg
add
xor
or
jns
ja
out
mov
lcall
sti
jge
js
inc
rcrl
inc
arpl
cmp
insb
xchg
dec
dec
xchg
push
cwtl
fcompl
mov
inc
or
daa
and
minps
in
sub
lahf
call
lea
fimuls
dec
xor
mov
pop
sqrtps
aad
shrb
adc
pop
cmp
insb
fyl2x
jmp
data16
dec
out
fcmovb
outsb
testl
aam
iret
popa
or
mov
cli
jecxz
movsl
xchg
daa
sub
cli
dec
pop
inc
ljmp
xchg
sub
mov
push
aad
sbb
fcomip
movsl
mov
hlt
rorl
repnz
mov
vmread
clc
rcr
fdivrl
push
xchg
inc
cmp
sbb
lea
cmpsb
mulb
jg
sub
push
cmc
je
scas
mov
ljmp
mov
pop
lds
inc
inc
insb
les
popf
or
bound
jno
mov
adc
mov
fcmovne
mov
scas
shll
or
call
lret
sub
or
mov
in
push
loope
popa
jmp
das
xor
sbb
std
stos
out
loope
jecxz
push
insb
and
cmovbe
cmp
test
ret
inc
lret
shrb
hlt
imul
push
int
fwait
xchg
fsubrl
cmpsb
or
jp
xor
push
scas
ret
mov
pand
pop
sti
mov
sub
lret
sbb
cld
xor
xor
loop
iret
imul
sub
jecxz
arpl
or
das
aaa
into
jno
outsl
and
pop
iret
cmpsb
mov
jnp
enter
xor
lods
cmpsb
cmp
jl
mov
loopne
test
sub
leave
xrelease
xlat
sbb
in
dec
cmp
pusha
jne
daa
inc
xor
clc
fistl
push
mov
mov
sarl
fwait
out
mov
lods
or
mov
add
inc
orb
mov
xor
into
fsubrl
lcall
dec
mov
outsl
aaa
out
xchg
sbb
mov
out
test
pop
lds
push
out
pop
mov
sub
int
mov
push
xor
push
fisubrl
xchg
out
xchg
pop
adc
inc
jne
sub
jne
sbb
nop
lahf
and
insl
paddusb
les
incb
mov
bound
xor
jbe
mov
aad
mov
insb
sbb
into
and
cmp
add
fsubs
fldln2
sbb
int
hlt
mov
adcl
scas
imul
jno
mov
mov
sbb
sbb
cmp
daa
fsubrs
mov
adc
push
add
stos
insl
aaa
stos
pop
int3
arpl
lret
ljmp
mov
je
dec
xchg
mov
jnp
mov
mov
jb
shrb
icebp
pop
push
sub
daa
xchg
push
add
imul
pop
js
jnp
ret
pop
ret
test
je
cmp
cmp
fisttpl
movsl
stos
imul
pop
jbe
dec
or
or
push
mov
loopne
xor
imul
add
fistps
jmp
push
frstor
pop
fdivs
sub
pop
cmpsl
xchg
xchg
push
fisttpl
pop
jns
ljmp
in
xor
sbb
int
mov
pusha
stc
jo
xor
cmp
inc
and
aad
mov
dec
shrl
sbb
cmp
ljmp
gs
push
add
mov
add
aad
ds
inc
push
mov
js,pt
mov
aas
pushf
outsb
mov
call
jmp
out
out
push
dec
or
test
sub
mov
pop
lea
stc
push
xchg
and
or
out
stos
mov
insl
push
sti
cmp
lahf
incl
xchg
dec
cmp
outsl
cvtdq2ps
fcoml
lret
ds
data16
mul
orl
call
mov
cmp
cmp
popa
cmp
test
push
cli
xor
cmp
or
xchg
push
mov
in
sbb
mov
fwait
aas
mov
sub
test
movsl
es
add
out
inc
mov
mov
sub
sub
push
repz
pusha
out
or
fsubrl
addr16
test
dec
sbb
int
mov
insb
mov
push
sbb
int
inc
imul
mov
insb
or
jo
jnp
mov
cmp
mov
dec
test
ret
fldt
daa
pop
xchg
lret
push
sbb
rcrl
and
and
inc
mov
mov
jp
xchg
je
push
je
xchg
repnz
mov
add
loop
mov
sub
xchg
rol
inc
sub
mov
jne
js
sbb
ljmp
mov
pusha
pop
mov
or
enter
repz
ffree
fisttpl
cmp
or
sbbb
push
lret
pop
ret
pop
ds
dec
pavgw
mov
mov
sbb
cmp
fstpt
cmpsb
jbe
sbb
bound
or
daa
into
adc
push
ret
inc
aaa
push
das
mov
mov
fld
lret
lods
addr16
push
stos
jb
push
mov
sbb
les
iret
add
ficoms
js
sarl
pop
cmp
imul
dec
test
push
ss
pop
jnp
lcall
inc
inc
ja
sbb
push
std
push
ret
out
loop
cmc
dec
and
mov
mov
push
mov
je
ss
mov
pop
adc
mov
arpl
pusha
or
scas
add
or
inc
enter
lods
ret
pop
packuswb
jle
ret
dec
push
stos
push
aad
pop
inc
push
loope
imul
mov
out
add
fs
in
or
mulb
lods
push
jo
sti
ret
mov
into
outsb
jae
sahf
mov
mov
mov
lods
xor
lret
aaa
sbb
je
popl
add
ret
mov
fnstenv
mov
cmp
fisubrl
sbb
andl
insb
das
sbb
jb
imul
dec
ret
fidivl
test
mov
clc
push
push
push
out
sbbl
andl
push
jne
mov
xor
outsb
add
daa
cmp
jg
lods
icebp
jmp
xor
cld
mov
mov
pusha
es
fiadds
aam
xor
dec
stos
push
out
cmp
outsb
jl
cmpsb
xor
dec
add
jge
rclb
scas
aaa
or
cmp
inc
inc
push
fistpl
loope
sbb
call
sbb
mov
jb
xor
das
ret
fisttps
mov
mov
cmovl
je
jbe
stos
bound
jmp
lcall
imul
lock
mov
outsl
pop
cmp
jp
stos
mov
insb
jae
mov
jmp
or
je
adc
xchg
inc
mov
es
outsb
and
repnz
jbe
adc
pop
sub
jg
inc
fistps
push
mov
xlat
shrl
mov
add
cmpsb
xor
fcmovbe
lock
rclb
push
mov
pop
cld
imul
mov
shr
xor
insb
pop
loope
sbb
imulb
popa
movsb
mov
dec
cmpsb
fst
push
xchg
sbb
or
xor
push
adc
cmp
jmp
add
cld
xor
movsl
and
dec
mov
sub
mov
and
xchg
popa
sbb
mov
add
aas
sbb
sbb
shll
imul
ret
cmp
loope
frstor
hlt
aas
clc
jecxz
repz
adc
or
out
dec
sbb
imul
sahf
movsb
lcall
inc
mov
pop
push
sahf
mov
rorb
add
and
mov
paddusw
mov
rolb
inc
push
mov
jnp
arpl
jle
sub
dec
fdivrl
orl
jge
push
bound
adc
add
inc
arpl
cmpsl
mov
lock
dec
mov
cmpsb
push
faddl
nop
insl
inc
mov
sub
mov
js
cmp
push
dec
or
negl
mov
xor
scas
scas
xor
loope
or
pop
test
roll
pop
pop
lahf
lds
mov
imul
sti
lea
add
dec
aam
lahf
imul
push
lods
jecxz
lea
outsb
in
into
popf
sub
or
movsb
out
mov
cmp
push
mov
lret
xchg
cmpsb
fnstsw
or
jle
lods
cmpsb
xor
pop
mov
add
mov
fs
fcoms
and
out
scas
nop
add
fucomip
mov
std
rcrl
pop
jp
call
fwait
out
sub
jo
sti
mov
aaa
xlat
cmp
enter
mov
xor
sbb
pop
addr16
popf
or
outsl
add
push
call
push
mov
cs
lods
popfw
cltd
mov
scas
cmp
jmp
imul
add
fldcw
in
roll
cmp
xor
jecxz
push
cli
push
cmp
stos
fs
dec
xchg
xor
lcall
push
cli
pop
adc
ljmp
jecxz
cmp
cmp
aam
push
add
mov
sub
cmp
mov
jb
push
sub
ret
sarl
das
fmuls
push
enter
stc
insb
dec
cmp
jbe
and
xchg
inc
fdivrs
je
in
in
dec
test
lcall
insl
insb
sbb
loope
decl
add
mov
cmp
mov
leave
iret
xor
dec
loopne
jmp
push
and
aad
add
mov
inc
push
imul
ret
fs
in
arpl
scas
ret
daa
pop
aaa
and
mov
mov
fcomp
pop
scas
push
rcrb
dec
push
xchg
aam
insl
pusha
call
fcomps
cmp
pop
push
jge
dec
sarb
ja
scas
jmp
movsb
mov
mov
mov
out
and
enter
pop
push
jl
or
shlb
or
or
sar
loopne
leave
mov
xor
loopne
aad
mov
push
jo
and
ja
sbb
mov
fs
push
cli
jecxz
aam
or
mov
es
sahf
dec
sbb
subb
sub
loopne
int
fsub
mov
push
enter
fdivrs
sbb
sub
sub
lods
fistps
and
out
mov
fstpt
jb
mov
repz
push
xor
cmp
orl
out
lock
inc
test
cmp
and
out
inc
push
in
dec
pusha
cli
sbb
jmp
sbb
jno
arpl
dec
fs
mov
xor
movsl
add
mov
fdivr
adc
dec
loopne
mov
ret
out
stos
sbb
sbb
sahf
xor
in
outsb
or
in
mov
pop
fs
or
mov
dec
sar
aam
maxps
push
sahf
push
xor
pop
imul
xor
jae
jecxz
push
pop
or
mov
imul
repnz
pop
sub
mov
jp
jnp
loopne
push
inc
push
jo
sub
lea
ret
inc
pop
int3
sahf
js
mov
jmp
jmp
xchg
outsb
aam
stos
jo
jnp
pop
pop
scas
test
popa
rorb
inc
clc
loopne
push
sbb
outsl
ret
loopne
neg
jmp
xchg
stos
xchg
pop
js
loope
mov
push
and
pop
cli
je
call
xor
in
jmp
xor
jo
inc
mov
xlat
testb
fs
mov
and
mov
decb
fists
cmpsb
mov
jl
sahf
mov
mov
inc
das
push
mov
xchg
cli
sbb
push
idivl
popa
push
outsl
adc
add
insb
repz
fwait
and
add
jmp
ret
mov
push
cmp
xor
or
aas
inc
arpl
mov
scas
add
add
arpl
insb
or
mov
inc
pop
pop
sbb
pop
cld
and
rcr
and
repnz
xlat
jge
jno
pop
add
xor
cmp
jge
clc
decb
push
sbb
scas
sbb
ret
mov
mov
sahf
call
adc
jg
sbb
test
dec
mov
fucom
xlat
test
adc
jns
jnp
pop
or
insl
bts
jmp
out
xchg
sbb
repz
jnp
mov
call
filds
jb
cmp
bound
jmp
stc
pop
lcall
sub
mov
cmpb
cmpsl
sbb
add
xchg
pop
mov
call
inc
cmp
enter
ja
jge
push
and
push
aaa
movsl
int3
pop
mov
inc
scas
adc
sbb
loop
dec
mov
andl
cmp
cmp
dec
mov
outsb
jmp
sub
or
popa
rcr
pop
test
or
jns
sarb
scas
std
fldenv
ss
xchg
xlat
jno
add
push
popa
mov
or
pop
mov
mov
movsb
add
xor
loop
int
lcall
sbb
pop
and
pop
and
cmp
roll
out
aad
and
icebp
jne
mov
sub
sbb
pop
mov
subl
xlat
push
xchg
jae
sbb
inc
sbb
inc
pop
loope
idivb
add
filds
mov
clc
cmp
mov
cmp
mov
xchg
sahf
mov
push
dec
dec
es
xchg
outsl
je
imul
bound
sti
push
mov
mov
fneni(8087
scas
jae
mov
stos
inc
movsl
shlb
faddl
xacquire
movsl
lds
repz
mov
rcll
fisttpl
clc
js
fisubl
pusha
aam
pop
xlat
cmpsl
xchg
adc
inc
shr
xor
pop
fildll
sub
xchg
dec
js
jbe
jns
sub
insl
insb
pop
pop
jmp
jl
add
lret
sbb
sub
adc
mov
ret
pop
pop
push
movhps
in
add
sub
xchg
jle
jnp
fldt
pop
lret
push
lock
dec
xlat
cmp
xchg
push
push
outsl
icebp
push
sub
fistps
test
insb
out
arpl
sbb
sbb
or
aad
xor
shrl
inc
fstpt
in
xor
out
shll
test
aam
ficoml
mov
scas
rolb
std
cmp
cmp
dec
and
sbb
adcb
scas
jecxz
mov
xchg
cmp
xchg
addps
mov
stos
dec
and
inc
xor
outsb
cmpsb
mov
mov
lea
pop
fnsave
jl
cmp
add
nop
out
imul
push
ds
outsl
xlat
push
pusha
mov
xor
push
test
jo
inc
add
fs
push
daa
inc
jae
xor
movsb
mov
call
insl
add
repnz
ds
pop
xor
leave
or
jne
test
jne
mov
fst
mov
inc
int
xchg
pop
addr16
mov
pop
pusha
pop
adc
mov
iret
fsubrs
add
ljmp
js
jl
mov
fs
popa
mov
aaa
pop
fsubrs
mov
and
int3
js
xlat
hlt
cmc
ret
sub
dec
jnp
mov
cs
fldt
mov
fwait
mov
jg
jmp
ds
cs
hlt
push
xchg
cmp
shll
js
xor
insb
pusha
mov
lea
mov
and
lock
outsb
pop
scas
sbb
jl
push
call
jo
sbb
es
les
ds
fs
mov
sahf
cmp
mov
loop
mov
insl
mov
aaa
push
pop
mov
cwtl
jno
dec
xchg
cli
or
aas
loopne
cs
addr16
popf
std
xchg
incl
or
in
lods
push
fsubrp
sbb
out
outsb
blci
das
jle
push
or
clc
imul
imull
loop
subb
ja
inc
or
pop
jmp
enter
cmpsl
ret
mov
push
mov
mov
scas
jg
pop
mov
jl
xlat
lock
shrb
outsb
jnp
stos
jne
cld
push
dec
lcall
adc
neg
fcomp
mov
mov
and
sub
mov
imul
dec
add
add
lods
xchg
xor
pop
cli
shll
ja
sbb
sub
hlt
inc
outsl
aas
popa
aam
clc
sub
das
pop
mov
js
sbb
mov
or
call
fstps
mov
inc
mov
ret
xor
cmpsb
or
jecxz
ds
sub
scas
scas
or
imul
mov
hlt
adc
cs
mov
data16
scas
nop
pop
or
pop
lahf
insl
ret
adc
loopne
imul
ficompl
jge
fsubrl
add
pop
gs
ljmp
xchg
mov
sbb
mov
xchg
inc
jge
in
orl
cmpsl
push
bound
loopne
pop
push
cltd
cld
inc
nop
xchg
mov
mov
lret
es
loop
sub
jbe
cmp
xor
jge
sti
add
push
aas
push
test
addl
daa
lret
or
cmpsl
adc
dec
aaa
jl
scas
add
dec
pop
jnp
push
cld
fdivs
jbe
xchg
jb
xchg
roll
and
xlat
in
icebp
or
adc
mov
dec
sub
sub
jmp
daa
mov
jbe
ret
lea
hlt
shrl
jns
sbbb
add
mov
push
arpl
in
jmp
cltd
lcall
insb
dec
pop
sub
rorl
pop
and
jmp
pop
dec
adc
push
jne
loope
pop
jbe
sbb
pop
inc
rcrl
loopne
sbb
xchg
sub
pop
cld
loopne
rol
mov
aam
cmp
push
sbb
leave
imul
in
dec
fwait
ja
sarb
jne
aas
dec
adc
shl
repnz
mov
ret
jne
out
adc
adc
pop
rolb
out
add
jl
cwtl
bnd
fwait
leave
or
jno
ljmp
cmp
std
ss
jecxz
repz
call
xlat
xlat
ret
imul
lea
push
push
insl
leave
cmp
inc
xchg
push
jg
ss
fadds
sbbb
inc
ret
cmpsb
movsl
das
shll
sub
cmp
xor
mov
lds
or
cmpsb
push
xchg
inc
iret
stos
xchg
xchg
pop
mov
pop
sbb
stos
jmp
enter
dec
icebp
inc
shl
pop
outsl
lret
orb
or
sbb
clc
push
bound
repz
inc
lahf
cli
push
cmp
push
adc
out
jbe
out
xor
sub
mov
sahf
stc
mov
ret
mov
in
clc
data16
loop
jl
jle
outsl
sti
cmpsl
test
adc
jbe
mov
or
fwait
sti
xchg
mov
mov
xor
jl
insb
or
cmpsb
pop
push
adc
sbb
xchg
cltd
call
fsubrs
mov
or
aaa
jnp
add
push
or
mov
mov
pusha
dec
pop
dec
jne
test
xor
mov
sbb
dec
push
xchg
jb
lods
mov
or
jg
hlt
adc
in
insl
cmp
push
aam
sbb
in
jne
loop
outsl
cmp
xchg
insl
mov
jbe
jo
ljmp
fsubrl
popf
fs
cmpl
dec
cli
and
jg
jge
sbb
sub
jl
inc
sub
xchg
push
cmpsb
ret
dec
jp
test
xchg
in
cmpsb
or
adc
daa
leave
sbb
and
mov
jno
testb
in
in
es
out
push
hlt
pusha
test
xlat
pop
mov
adc
or
test
ja
ss
mov
cmp
cmp
lcall
or
dec
std
add
outsb
psrad
jmp
test
adc
mov
lea
lcall
lds
mov
lret
pop
das
xchg
idivb
arpl
xchg
jge
push
pushf
mov
out
lcall
fidivs
lods
cmp
add
lea
mov
sahf
ret
out
xor
and
jle
mov
insb
insl
movsb
mov
sti
mov
loop
and
jp
jl
pop
rcrl
xchg
pop
xchg
clc
fsubrl
lahf
lea
enter
mov
movsl
push
fsubrl
ret
mov
and
push
xor
insl
pusha
sbb
push
jl
test
imul
mov
mov
mov
arpl
cmp
bound
stc
add
ret
pop
jl,pt
dec
push
and
aam
sub
int
out
add
mov
imul
call
cwtl
push
xchg
pop
mov
ljmp
mov
dec
in
push
jl
cmc
stos
jb
push
add
stos
shll
mov
or
add
aas
cmpsl
insl
mov
add
lods
push
jle
loopne
mov
jae
sahf
pop
addr16
push
push
enter
jmp
popa
xchg
push
outsb
ds
insl
sarb
xchg
mov
addb
fiadds
jnp
hlt
movsl
push
cmp
jmp
fmuls
fdivr
jae
icebp
js
loope
movl
fbld
inc
cwtl
fcoml
add
and
fstp
mov
add
je
cmpsl
push
xchg
aad
mov
sub
std
in
add
lds
sbb
mov
aam
addr16
mov
sbb
xor
mov
aaa
sbb
leave
mov
insb
sbb
jne
cmp
inc
inc
js
out
repz
divl
clc
push
and
mov
jge
les
dec
pop
mov
cmc
fdivrs
and
out
stos
scas
mov
cmp
add
cld
mov
adc
inc
gs
iret
fidivrl
sub
nop
push
sbb
jle
and
lret
iret
mov
out
mov
dec
in
and
lcall
mov
sub
insb
das
xadd
sub
pop
fs
imul
rclb
jmp
iret
dec
mov
rclb
mov
jne
cmp
mov
sti
mov
xor
pushl
movsb
mov
ret
mov
push
jecxz
arpl
push
lret
sub
fildll
lcall
setae
mov
pop
dec
cmc
insb
rcr
cmp
out
or
icebp
sbb
sti
mov
movsb
out
lods
lods
xchg
mov
imull
loopne
pop
ffreep
ja
imul
jae
mov
jmp
add
out
je
add
outsb
add
dec
sbb
scas
lea
ret
loop
dec
mov
sti
mov
je
sub
hlt
jg
jb
aas
jno
jns
lahf
ficomps
pop
dec
lcall
jle
add
pop
mov
les
call
xchg
mov
loope
popf
or
pop
fucom
cmp
sbb
mov
hlt
lret
dec
pop
mov
jecxz
mov
pop
ffreep
cmp
jne
jle
aaa
sub
or
jecxz
call
cmp
jp
wbinvd
xor
xlat
and
sub
sbb
aas
mov
and
sarb
push
frstor
stos
or
sti
pop
inc
mov
jne
and
dec
jo
xor
scas
jecxz
cmp
insl
cmp
in
mov
rcrl
cmp
in
out
adc
push
stos
push
outsl
ss
mov
jo
int3
jb
and
push
iret
cmpsl
pop
aad
jcxz
test
mov
add
xlat
scas
pop
cmpsb
cmpsl
push
scas
and
push
sbb
xchg
outsb
out
jmp
pop
pop
pop
dec
adc
jnp
mov
popa
mov
fnstenv
fcomi
xchg
rcrb
addr16
in
or
call
mov
jbe
xor
mov
div
sbb
outsl
imul
push
aam
sub
ds
aad
jge
mov
pop
scas
sbb
and
mov
mov
jecxz
test
pop
notl
pop
loopne
adc
xlat
jns
jmp
imul
adc
mov
jl
loopne
xchg
lret
mov
std
loop
add
jmp
rcr
add
xor
aam
ljmp
xchg
pop
sbb
or
adc
cs
jmp
enter
fcomps
rcrb
aad
cs
sub
lock
cmpb
mov
aas
insl
pop
stc
cli
adcb
clc
je
test
sbb
adc
push
daa
in
and
or
scas
jecxz
aaa
dec
pop
clc
add
mov
dec
out
mov
int3
lret
or
loope
fbld
jnp
dec
cld
add
fs
mov
sbb
leave
shrb
outsl
sbb
mov
movsb
pop
sbb
sbb
push
sbb
mov
jns
pushf
dec
iret
adc
ss
cmp
inc
jl
rorl
xor
orb
push
jno
pop
lds
sti
jb
aas
inc
pusha
dec
add
cltd
lods
push
or
mov
mov
jnp
mov
xor
jmp
in
fcmovnu
xlat
or
fistpll
cltd
int
scas
cs
pop
pop
sti
sahf
mov
loope
stc
in
rorl
xor
mov
push
fdivs
aad
mov
cmc
push
ja
xchg
or
sarl
outsb
pop
pmaddwd
or
ss
and
sbb
stc
lods
in
pop
or
out
xor
pop
or
imul
outsb
mov
outsl
outsl
add
push
mov
mov
cmp
cmp
cmp
push
sbb
fisttps
lahf
push
jnp
sub
cmpb
mov
xor
mov
pop
rcll
mov
ss
imul
ds
cmp
mov
das
test
xlat
jne
mul
inc
jo
or
fiaddl
xlat
insl
outsl
lret
or
pop
jnp
pop
ss
rcrb
nop
jl
gs
iret
rol
idivl
xchg
push
mov
fmull
mov
push
cmp
add
mov
add
adc
aam
int
xchg
arpl
xor
inc
insb
mov
pop
lods
push
mov
xor
lret
scas
and
aad
cwtl
movsl
cmpsl
loopne
mov
orl
xchg
sub
mov
pushl
or
inc
xchg
adcl
xchg
inc
fwait
out
jecxz
mov
imul
jecxz
arpl
xchg
xchg
or
mov
repz
jecxz
mov
and
lret
cmp
iret
out
ja
idiv
inc
cvtps2pi
es
jle
testl
rorl
cld
cmp
xor
lods
lret
add
ja
out
adc
das
mov
sbb
dec
mov
jle
xor
cmc
xor
and
shl
dec
xor
push
outsl
ss
jb
dec
cmp
jmp
xor
sub
cmp
scas
and
xor
lds
mov
js
pop
pop
mov
sbb
je
add
xchg
adc
and
sbb
pop
stos
adc
pop
mov
inc
sub
outsl
mov
mov
mov
arpl
sub
aaa
divl
sti
mov
pop
pushl
jae
dec
outsb
dec
shlb
sbb
xchg
cmp
push
jb
lret
sbb
cltd
inc
push
adc
sub
mov
aaa
insb
and
cmc
or
outsl
mov
mov
mov
or
adc
push
or
stos
or
cltd
popa
pop
bt
xchg
out
cmp
repz
sub
mov
int3
ret
pop
push
test
push
add
movsb
add
icebp
sub
cld
push
sbb
or
mov
scas
gs
xchg
out
popa
mov
call
mov
sub
inc
mov
icebp
cmc
test
mov
addl
inc
inc
mov
addl
ss
mov
mov
das
rol
cmp
scas
xorl
or
test
jb
lock
sahf
cmpsb
pop
sub
lcall
xchg
dec
leave
xchg
mov
call
out
pop
mov
pop
inc
rcrl
sub
popf
jnp
fbld
push
imul
xchg
inc
mov
push
ret
inc
inc
int
dec
cmp
icebp
jecxz
out
mov
adc
push
loop
xor
insl
mov
sbb
popa
xchg
shrb
mov
xor
dec
and
xchg
push
add
std
pop
mov
xor
fsub
outsb
sbb
insb
push
imul
or
mov
in
and
repnz
fistl
loope
ss
inc
pusha
inc
mov
xor
and
sub
call
fcoml
sbb
popa
xor
pop
ret
roll
lock
xchg
push
in
push
clc
out
xlat
sub
xchg
mov
dec
pushf
and
les
lcall
dec
icebp
pop
je
shrl
mov
pusha
cmp
imul
ja
fcmovb
cmpsl
mov
out
stc
or
cmp
sbb
out
jnp
sub
dec
adc
arpl
mov
in
sub
outsb
jmp
jnp
imul
out
mov
cmp
sub
outsl
inc
pusha
daa
mov
jge
dec
popa
ljmp
pop
frstor
sub
mov
cltd
xchg
push
pop
fidivrl
push
roll
jmp
stos
pop
popf
lret
test
sbb
xchg
xor
je
test
sbb
dec
add
jbe
and
lods
add
mov
ret
stos
push
sbb
rcll
mov
out
mov
dec
stos
dec
adc
and
ss
xor
or
xchg
cwtl
lods
insl
mov
xorl
jge
jnp
dec
cmp
push
pushf
cmp
cltd
shll
sbb
xchg
ss
daa
or
push
ret
cmp
pop
sub
pop
mov
fst
nop
imulb
mov
frstor
test
pop
adc
loopne
jmp
jne
and
jp
mov
xchg
in
sub
push
adc
popf
addl
pop
push
cmp
lea
add
push
rclb
jo
and
or
adc
stos
call
or
in
xchg
mov
or
mov
insb
cmpsl
dec
ja
adc
lds
mov
les
cmp
ret
and
subb
addr16
sub
insl
daa
fcmovnu
pop
mov
icebp
sbb
sub
inc
cld
aam
inc
xchg
mov
jns
pop
fwait
int3
xor
dec
das
push
ret
into
mov
lahf
mov
pop
inc
filds
dec
pop
enter
push
cmpsb
mov
rcrb
inc
mov
mov
rclb
sub
shlb
cmc
rcrl
jb
push
push
mov
ret
sub
aad
mov
jle
add
jno
push
xor
inc
stos
cmp
sbb
cmp
mov
fdivrs
inc
orl
mov
add
xchg
iret
mov
push
icebp
sbb
fistpl
pop
addr16
stos
bnd
pop
push
aaa
pop
mov
aaa
jne
fldt
xchg
ja
sub
lea
and
mov
outsl
into
xchg
cmc
or
int
in
xchg
fdiv
call
daa
ljmp
push
mov
sbb
inc
pop
mov
jecxz
jmp
push
sub
ret
les
or
push
ja
addr16
fisttpl
xchg
mov
sarl
idiv
inc
imul
jb
mov
xchg
cmp
inc
inc
and
inc
lcall
xchg
dec
xchg
inc
push
or
or
adc
leave
mov
mov
bound
mov
rolb
movsl
mov
push
xchg
ret
and
push
mov
pop
into
add
leave
push
xchg
inc
xchg
mov
aam
pop
lea
add
cmp
cld
rcll
or
cmpsl
xorl
mov
in
sbb
jge
mov
popa
sbb
or
fdivr
push
outsb
fwait
andl
rclb
fs
movsl
add
xchg
loope
test
pop
addr16
lea
scas
in
xor
jbe
loope
sub
sbb
jg
dec
jg
fstpt
ficompl
daa
mov
cmp
ds
add
cmp
push
hlt
adc
aas
std
jmp
imul
adc
mov
push
cmpsl
rclb
daa
bound
jle
adc
fdivl
icebp
out
cmovle
xor
loopne
push
xor
cmc
decl
scas
adc
fs
pop
pop
ret
mov
mov
cmp
mov
fsubs
insl
cmp
ja
sbb
xor
xor
adc
or
sti
mov
test
pop
jge
pop
xchg
jle
repz
es
push
enter
jle
ja
cltd
sub
cmp
ffree
or
or
jp
xchg
mov
sbb
das
rol
or
cmpsb
imul
ss
xchg
jbe
sbb
rolb
in
imull
lret
push
fdivs
adc
shr
repz
arpl
ja
shr
mov
fistpl
sbb
ficoml
adc
mov
imul
mov
and
lahf
outsl
and
pop
shl
xchg
lods
jae
xchg
cmpsl
pusha
mov
divb
js
sbb
icebp
mov
mov
rcrl
fsub
sbb
clc
icebp
or
jnp
aad
mov
test
push
aam
ret
adc
dec
paddusw
jmp
jmp
ja
add
jp
xor
fdivl
dec
fdivl
mov
or
cmp
shll
jbe
mov
aam
es
int3
cs
cli
sbb
add
shlb
xlat
cmc
adc
mov
scas
sbb
lret
rcll
lock
adc
sub
call
mov
cmp
jbe
packsswb
pop
cmpsb
push
cs
mov
leave
in
jg
clc
test
insl
js
insl
ret
loope
movsl
fdivl
mov
mov
in
dec
ss
es
jmp
add
inc
lock
sbb
xchg
imul
outsl
pop
or
cmp
sub
jnp
notb
mov
mov
hlt
mov
jnp
pop
xchg
cmpsb
rol
pop
rol
imull
cld
js
aaa
mov
jmp
out
and
les
aad
popf
ss
mov
pop
jb
div
fsubrs
hlt
inc
ljmp
lods
cli
enter
mov
mov
inc
cmc
push
inc
sub
shll
out
xlat
in
fcomps
jmp
adc
mov
gs
sahf
sbb
ja
pop
mov
mov
push
add
ds
ds
and
sbb
add
sahf
jp
mov
and
pop
shll
outsb
mov
out
test
push
jno
inc
rclb
push
outsl
outsl
lock
call
inc
jnp
jmp
lret
sbb
or
fnstsw
js
mov
jno
out
fcmovu
inc
mov
xor
and
and
xchg
fldcw
push
iret
jecxz
mov
pcmpgtw
xchg
dec
xlat
cld
mov
cmpsl
mov
jb
push
dec
mov
dec
dec
lods
xor
dec
frstor
mov
mov
jno
pop
jp
aas
clc
jne
sub
enter
jno
fsubrl
call
bts
sbb
std
xor
and
lock
jae
testb
cvttps2pi
sbb
inc
cmpsb
mov
adc
push
es
xchg
test
jo
inc
sub
jmp
mov
pop
ret
pop
fistpl
in
xchg
inc
pusha
mov
adc
sbb
jae
pop
dec
scas
movsl
inc
mov
in
rcll
sbbl
ja
push
mov
cmp
test
mov
bound
mov
mov
dec
or
add
xor
rcll
pop
lea
in
je
adc
nop
pop
add
pop
mov
bnd
mov
and
pop
inc
je
cli
imul
hlt
inc
mov
leave
jo
fmull
pop
jo
sub
xorl
jmp
adc
sbb
mov
mov
loop
cld
sbb
sbb
fs
clc
sub
sub
rorl
xchg
mov
das
stc
testl
mov
inc
push
cmp
pop
jmp
sahf
call
jns
xchg
xor
stos
xor
xchg
add
adc
cmp
jno
ret
mov
pop
cmp
cwtl
scas
pop
mov
mov
push
xchg
xor
jnp
int3
xor
xlat
inc
call
shr
xchg
xor
xchg
cs
push
ljmp
pop
cmp
fdivl
push
sbb
fstpt
rcl
ja
mov
fildl
out
leave
xor
xchg
add
xor
mov
insl
xor
jo
pop
imul
lahf
cmpsl
sub
out
jbe
repnz
or
outsb
pusha
out
lea
sbb
jmp
stc
xchg
cwtl
push
dec
decb
pop
cmc
lret
jo
fstpl
aad
fisubs
sbbb
imull
into
call
xorb
bnd
cmp
mov
test
repnz
and
ja
push
jbe
daa
icebp
test
clc
add
mov
push
lret
scas
fcomps
push
cmp
int3
out
sbb
sub
mov
jg
cld
ret
xor
iret
stos
mov
aam
shll
lret
fistl
mov
dec
push
jecxz
shlb
mov
shll
ss
clc
or
outsl
popa
mov
enter
add
lea
scas
lock
push
stos
dec
loope
xor
push
icebp
roll
dec
shll
stos
and
fs
imul
jg
sarl
xchg
sbb
mov
stos
sub
iret
inc
sti
clc
jno
sbb
mov
in
cmp
mov
adc
jno
int
outsb
mov
jb
shlb
mov
dec
in
pand
ss
std
data16
sub
shrl
xchg
test
mov
adc
hlt
mov
xchg
lock
ss
lahf
dec
aas
jo
ss
scas
jecxz
push
sub
pop
jns
jle
call
jmp
clc
outsl
sub
test
int
pop
jp
ss
mov
ret
mov
cmp
mov
out
cmp
push
sub
testl
mov
jle
xor
add
or
movaps
mov
sbb
adc
cmp
inc
je
andb
sti
test
mov
ret
jecxz
xchg
jmp
and
scas
mov
cmp
pop
mov
push
aam
push
icebp
mov
aam
mov
pop
ljmp
mov
insl
mov
mul
pop
insb
mov
in
mov
jne
mov
xor
shlb
mov
and
rcl
or
jne
call
ss
fdivs
orb
add
mov
sbb
sub
mov
pop
sbb
mov
sub
xor
adc
lods
or
jmp
jmp
push
mov
aaa
add
lcall
pop
xchg
rcll
mov
sbbl
push
push
push
sbb
fsubrl
scas
fldt
jno
pop
movsb
sbb
ds
xlat
aaa
icebp
jge
and
mov
sbb
not
clc
mov
push
adc
push
inc
xor
cmc
cld
xor
and
mov
je
fildl
in
into
inc
cwtl
xor
jae
in
jbe
movsl
xchg
cmp
push
inc
ret
mov
lcall
out
mov
jge
pop
inc
xlat
push
in
dec
and
push
mov
aaa
negb
lock
shlb
out
loopne
mov
and
push
testl
lods
pop
adc
fstpt
xchg
xchg
nop
xor
aam
mov
cmpsb
ds
scas
adc
xchg
pop
rorl
cmpsl
or
jle
rcll
mov
or
cltd
xchg
stos
jae
cs
cltd
adc
in
mov
in
sbbl
adcl
in
mov
fldl
popf
test
movsb
std
into
lods
outsb
nop
cmp
sub
jbe
sub
pop
in
push
ds
xchg
mov
sarl
loope
cs
xor
rolb
xchg
push
mov
hlt
add
test
ljmp
lret
lods
pop
dec
dec
sbb
ret
cmpsl
xchg
negl
fcmovnu
clc
cmc
lds
jmp
popl
pop
push
insl
adc
je
jae
push
fcmovne
aaa
out
loopne
jmp
into
xor
inc
xor
inc
rcll
lock
xchg
in
or
cmp
das
push
pop
insb
daa
and
xchg
jmpw
pop
xchg
sarl
idivl
inc
cmp
push
or
xchg
mov
or
and
cmc
fdivrl
cmpsl
icebp
sbb
cmp
jno
mov
add
test
test
jbe
lcall
lock
dec
adc
xor
scas
stos
test
dec
xchg
cs
or
xor
mov
in
pop
rcll
test
dec
xor
out
ja
imul
out
mov
aaa
pmaxub
adc
and
xchg
mov
movsl
pop
loopne
dec
cmc
clc
rol
and
daa
lret
mov
rorl
fdivr
je
push
ljmp
test
sub
push
outsl
insb
mov
leave
sbb
test
inc
pop
jno
sub
movsb
jbe,pt
jl
xchg
jp
lods
xor
mov
in
cmp
fimull
das
fwait
sub
cmpsb
mov
jo
rclb
ret
pop
loop
dec
jge
add
cmp
mov
or
sbb
call
aad
call
cmp
inc
mov
cmpsb
xchg
ja
push
jne
imul
mov
insb
adc
imul
stos
cli
in
dec
pop
mov
cmp
stos
jo
fstpl
hlt
icebp
arpl
add
out
outsl
rorb
push
xor
clc
mov
negl
xor
loop
cmp
mov
inc
mov
push
mov
aas
sub
fmulp
mov
pop
mov
in
mov
lret
out
sbbl
insb
rcr
cltd
cmpl
shll
repnz
icebp
mov
xor
bound
push
mov
sbb
fbstp
ljmp
clc
mov
and
sbb
lsl
push
mov
ret
in
stos
cmp
xor
mov
dec
jb
push
pop
push
js
jae
push
xchg
mov
adc
fdivrp
scas
gs
outsl
xlat
pop
or
jnp
or
jno
imul
adc
add
jns
dec
jne
loopne
outsl
call
scas
xor
sbb
sbb
jo
mov
lods
addl
loope
cmpsl
sbb
push
fdivl
aaa
xchg
cmp
shrb
sub
ret
in
add
aam
out
andps
das
xlat
ret
pop
icebp
push
int3
jl
push
push
or
in
xchg
jns
or
into
arpl
xchg
push
cmp
repnz
push
xchg
sub
sahf
inc
pop
cld
xor
mov
sub
pop
xchg
hlt
push
mov
leave
cmp
mov
out
cmp
mov
jg
jp
mov
mov
pop
flds
mov
cs
pushf
push
cmp
insb
mov
shl
fildl
repz
idivl
adc
inc
xchg
adc
insl
shlb
jnp
lret
mov
push
xchg
push
das
ss
xchg
xor
mov
nop
add
pop
shr
or
xchg
dec
insb
inc
mov
fistpll
adc
xchg
fs
push
fcmovu
mov
int
mov
lock
jae
and
pop
divb
mov
stos
sti
shl
rorb
or
je
cmp
cld
cmpsb
dec
push
inc
or
xchg
faddl
fdivl
test
push
pop
pusha
push
call
dec
test
scas
adc
sub
aad
andb
std
cmc
sarb
adc
mov
lds
aad
mov
ds
inc
jno
jg
push
fdivs
jo
mov
inc
jo
enter
setno
cld
mov
insb
xchg
leave
xchg
mov
mov
fimuls
hlt
mov
mov
lea
mov
insl
jmp
outsb
sub
out
jp
and
pop
sbb
js
out
pop
outsl
sti
das
xchg
push
jge
dec
movsl
fwait
inc
outsb
and
cmp
and
adc
lds
push
iret
push
jmp
addr16
cmp
jmp
pop
aaa
jecxz
scas
push
out
fbstp
imul
lods
not
das
and
pop
push
imulb
daa
inc
or
out
sub
sbb
or
mov
jl
and
repz
ret
sahf
or
out
inc
mov
mov
bswap
push
cmp
push
mov
stc
scas
jne
mov
jle
adc
push
inc
xchg
jge
ret
ret
push
cmp
fisubs
js
in
xchg
lock
jbe
or
ja
mov
xchg
data16
pop
cmp
sbb
xchg
loopne
icebp
aas
test
xor
cmp
jecxz
jmp
inc
shrb
add
dec
add
or
inc
adc
add
lock
add
filds
sarb
xchg
popa
mov
adc
scas
xor
das
push
je
jge
or
arpl
mov
cmc
insb
cmp
mov
clc
sbb
ja
lods
loope
scas
jne
pop
testb
xchg
adc
cmc
mov
insl
cs
lock
mull
jae
mov
test
mov
call
scas
gs
daa
pop
imul
fldt
cwtl
je
pop
xchg
shll
jp
adcb
xor
lahf
outsl
or
emms
testl
enter
add
or
pusha
push
mov
iret
inc
adc
in
pusha
dec
mov
out
arpl
gs
test
push
add
jnp
bound
imul
rclb
das
outsb
add
xor
mov
test
call
and
cmpsb
and
jno
mov
leave
cmpsl
push
push
pop
push
cs
cmc
jne
dec
mov
mov
add
inc
imul
push
jmp
jnp
iret
movsb
dec
rol
ret
aas
jge
jo
loopne
mov
sub
imul
cmpsb
mov
push
sbb
mov
jns
inc
enter
push
ss
mov
push
fidivs
popa
call
stc
pop
fiadds
jg
int3
sbb
inc
pop
jnp
xchg
data16
mov
lock
mov
push
stos
out
xlat
add
sub
xlat
sbb
call
shll
mov
xor
fcomp
mov
cmp
and
jnp
jbe
nop
gs
dec
or
mov
or
ret
shll
loop
xchg
jns
imul
and
push
test
hlt
das
mov
in
cs
and
sub
pop
fisttpl
dec
xchg
mov
add
sub
inc
scas
push
popf
fsubrl
sarl
mov
and
and
adc
mov
add
mov
sbb
data16
pop
mov
mov
sarl
fcmovnbe
xchg
aad
lds
pop
mov
sub
insl
insb
test
imul
pop
cli
mov
push
out
sti
sbb
lds
imul
sub
push
lods
sahf
iret
leave
pop
push
or
lock
inc
or
mov
add
mov
or
in
fs
and
dec
frstor
cmc
icebp
pop
mov
pop
dec
call
imul
mov
xor
pop
inc
and
push
inc
jmp
jecxz
clc
jo
mov
xlat
xchg
inc
sub
out
inc
decl
mov
adc
mov
stos
les
clc
aam
push
xor
jge
add
pop
idivl
add
les
mov
aam
lods
add
jnp
popa
scas
adc
loope
jnp
mov
fsts
dec
sti
sbb
inc
fwait
imul
sbb
rcll
insl
mov
test
out
mov
mov
add
jne
insl
pop
push
hlt
mov
bnd
sbb
adc
ret
mov
mov
iret
push
lock
and
ret
cld
inc
lods
sbb
je
cmp
in
jne
mov
mov
mov
repz
shrl
mov
scas
xlat
rclb
movsl
in
mov
pop
daa
mov
loop
out
jne
sub
ret
dec
ret
inc
xlat
jo
addb
xor
inc
fldl
test
cmc
xor
orl
push
pop
inc
fisttpll
adc
mov
ja
dec
pop
outsb
or
cmp
aam
jecxz
mov
shll
hlt
push
enter
and
jmp
mov
add
cmp
pop
movsl
clc
xchg
cmpl
sti
orb
mov
mov
insl
fwait
add
sti
cs
outsb
imul
lret
dec
jl
inc
in
push
push
jg
leave
mov
je
push
sbb
aas
out
mov
out
inc
test
ret
xor
lock
xor
icebp
mov
push
popf
xor
out
mov
inc
cmc
sbb
jbe
xor
out
cwtl
test
pop
jl
in
add
xor
ret
popa
dec
aam
mov
mov
popa
or
or
stos
xor
pusha
out
mov
inc
scas
adc
into
mov
dec
cmpb
insl
mov
and
cmp
std
mov
cmp
and
pop
rcr
push
push
sbb
mov
dec
add
cmpsb
pusha
jp
pop
outsb
mov
mov
add
and
xor
shlb
les
fldenv
ficomps
loop
call
lds
mov
cld
jge
and
dec
sub
addb
int3
dec
icebp
mov
stc
and
push
fbstp
sbb
pop
pop
inc
sub
test
lcall
dec
xor
xchg
ror
lock
push
shll
test
sub
mov
addr16
sbb
rcrb
push
mov
sti
aam
adc
imul
push
imul
ljmp
mov
leave
jo
sbb
daa
mov
lods
cmc
mov
xchg
push
mov
mov
pop
dec
xchg
dec
adc
ret
ret
push
jmp
fistpl
stos
mov
js
rcll
lock
push
scas
lcall
or
cmpsl
ja
cmpxchg
in
lods
ret
popf
push
mov
push
dec
sbb
ds
push
stc
mov
test
pop
int3
xchg
mov
dec
insl
pop
sbb
dec
clc
xchg
adc
add
mov
push
and
aad
imul
imul
push
pop
out
or
gs
dec
dec
adc
and
shr
jbe
mov
mov
and
jo
pop
sub
xor
test
xchg
scas
test
call
jns
push
dec
xlat
pop
je
dec
lret
cld
repnz
xchg
and
wbinvd
or
sbb
cmp
xchg
jge
sbb
es
add
mov
mov
imul
cmp
cmpsb
imul
fstpl
sahf
push
push
lds
inc
dec
jge
mov
cmp
sbb
xor
add
push
ss
and
out
test
stos
arpl
push
mov
xchg
inc
or
pushw
ret
cmpsl
sbb
jnp
xchg
ja
int3
mov
sbb
mov
mov
clc
sub
and
lahf
loop
outsb
sub
loopne
cmp
mov
push
and
xchg
idivl
scas
ror
lcall
aam
xor
inc
xlat
aam
pusha
cmp
xchg
jl
sub
in
js
scas
mov
sbb
jl
mov
sub
orl
jecxz
shll
inc
mov
in
andl
push
jno
dec
das
lock
outsl
cmp
mov
add
cmp
cmpsl
xchg
cmp
pop
test
push
call
clc
push
jl
add
lock
out
call
cli
and
scas
mov
imul
ds
cmp
dec
jecxz
call
vpcmpgtb
sbb
inc
ljmp
out
mov
cmp
pop
push
jp
mov
mov
add
pusha
cmp
mov
xchg
cld
sub
out
daa
les
xlat
mov
xchg
xor
jb
jle
fisttpll
nop
lret
mov
lock
jecxz
add
andl
mov
negb
shrl
xchg
jmp
xlat
sub
imul
pop
sarb
add
push
sbb
insb
stos
xchg
push
mov
sbb
ss
jge
xchg
enter
jne
aaa
out
mov
push
inc
lahf
hlt
sub
cld
push
push
or
or
push
add
mov
or
pushf
push
arpl
inc
call
imul
jge
shll
mov
mov
sbb
test
mov
js
ret
pop
dec
mov
js
push
daa
dec
inc
iret
nop
pusha
scas
jo
sti
jb
mov
mov
mov
mov
mov
ret
cmp
lret
xor
data16
sbb
pop
or
ret
jbe
je
adc
in
mov
adc
mov
add
inc
dec
mov
je
loope
arpl
rol
pop
dec
mov
subl
lret
dec
popf
xchg
mov
jmp
cs
daa
hlt
sti
add
mov
ja
sbb
sbb
xchg
mov
mov
sbb
aas
rcrb
xlat
ja
pop
sbb
jge
mov
repz
dec
sbb
rorb
mov
insb
xchg
lcall
lea
and
fldcw
insl
mov
lock
adc
and
outsb
cmp
inc
js
mov
leave
cmp
fs
sub
ja
loop
jmp
sbb
loop
cmc
imul
inc
mov
arpl
jne
out
rclb
rcll
push
lods
or
test
xchg
pop
pop
mov
adc
lock
xor
adc
stos
dec
adc
fdivrs
adc
jmp
clc
icebp
or
adc
xchg
in
sbb
rclb
add
jecxz
or
jge
and
dec
imul
jmp
lcall
inc
stos
add
mov
xchg
push
sti
or
insl
ljmp
mov
mov
sbb
enter
fmulp
fldcw
mov
fwait
hlt
push
paddusw
cmpsb
pop
lock
inc
insb
mov
adc
jge
gs
jmp
addr16
fidivl
ret
xor
sub
fnstsw
sbb
daa
mov
daa
inc
ds
mov
jp
iret
add
inc
mov
daa
cmpsb
inc
pop
imul
xchg
mov
add
mov
cld
sbb
mov
or
fwait
mov
dec
sub
push
pop
inc
mov
scas
push
fs
mov
mov
inc
je
sbb
adc
pop
mov
inc
idivl
pop
iret
jo
aam
push
or
call
sub
imul
clc
cmp
mov
dec
arpl
mov
sbb
xchg
mov
add
push
pushf
jno
push
out
stos
push
mov
frstor
cmp
mov
mov
inc
or
fucom
inc
xor
lahf
das
mov
xlat
jne
or
test
dec
mov
jo
shlb
in
je
lds
repnz
mov
out
push
repnz
lcall
in
rclb
rcrb
rorb
mov
psraw
call
mov
push
mov
jb
pop
js
cmpsl
cmp
push
pop
popf
add
fwait
sahf
or
xlat
rolb
or
mov
pop
shrl
mov
push
cmp
je
lock
aam
test
mov
outsb
push
lock
sub
jecxz
adc
adc
and
lds
outsl
sahf
inc
and
es
lods
jecxz
jle
movsl
push
rorb
jbe
mov
jae
subl
inc
rorl
jge
mov
ret
jg
pop
inc
std
xchg
or
ret
pop
imul
iret
popa
out
fnsave
mov
popa
js
xchg
push
xlat
insb
pop
inc
icebp
mov
sbb
inc
cmp
adc
mov
je
cli
mov
sub
cli
jp
mov
adc
and
and
xor
push
pusha
jnp
jb
jo
mov
sarl
jle
mov
sub
xchg
sti
jae
dec
sti
inc
es
lock
jb
jo
loope
scas
mov
lcall
jp
push
rorl
scas
lock
mov
imul
dec
test
jns
bound
jmp
testl
popf
leave
test
cli
xor
cmp
cltd
mov
sub
jne
add
add
dec
sbb
std
imul
and
xchg
pop
ja
rorl
scas
cld
ja
sbbl
fildll
std
movl
mov
loope
xor
out
cwtl
cmp
sbb
or
test
imul
andb
sahf
sarb
xchg
lock
aam
scas
adc
jne
jl
fs
mov
icebp
xchg
adc
push
leave
outsb
lcall
sub
jmp
popa
addr16
xchg
xor
stos
or
mov
stc
aad
loopne
jno
adc
sbbb
and
adc
fcomi
stos
cmp
push
lods
stos
sbb
outsl
xlat
popf
mov
pusha
into
and
adc
or
mov
imul
int
mov
mov
push
daa
jbe
xchg
jae
setb
scas
cmpsl
push
loope
scas
pop
lcall
jecxz
xchg
pop
int3
int3
icebp
pop
mov
loope
int
dec
sub
idivl
xor
xchg
jo
inc
inc
ja
adc
mov
call
cmpsb
mov
or
imul
jnp
mov
xor
xchg
sbb
xchg
or
jp
jl
call
sbb
insl
sbb
sbbl
inc
jge
movsl
or
call
pop
outsb
push
lcall
lea
xchg
or
xchg
repnz
xor
adc
mov
out
lock
fnstenv
pop
aad
filds
jl
sbb
rorl
mov
aas
cld
cmpsb
out
out
jns
js
pop
pop
popa
loopne
cmp
sub
adc
stos
mov
loopne
mov
add
clc
cmp
clc
shlb
push
adc
pop
lcall
or
sti
or
jl
sbb
push
aaa
sbb
in
mov
pop
pop
sarl
mov
decb
xor
and
enter
mov
push
dec
inc
arpl
push
add
or
jb
or
jbe
sbb
jge
mul
sbb
in
ficompl
xor
out
inc
push
lcall
ljmp
lcall
fwait
popf
int
pop
cmp
dec
inc
loope
loopne
aaa
mov
jo
sbb
imul
test
and
faddp
adc
mov
cmpsl
in
xor
test
sbb
jno
xchg
cmp
into
in
mov
in
push
inc
cmp
dec
fidivs
icebp
rcrl
gs
push
xor
sub
rol
adc
jp
pop
pop
iret
cmpsb
pop
into
into
rcl
aad
jmp
adc
cld
lcall
or
repnz
mov
div
push
pusha
mov
in
out
scas
jnp
in
dec
and
dec
inc
lods
cmpl
test
cmp
mov
cmpsb
sbb
stos
push
mov
mov
call
ret
scas
jge
and
mov
std
rcrb
stos
or
mov
ja
sbb
iret
stos
adc
scas
ret
std
mov
sahf
dec
mov
mov
sti
and
mov
lds
pop
jle
xchg
and
ljmp
int3
mov
movd
test
roll
push
and
movsb
push
outsl
test
imulb
or
mov
int
or
addb
mov
ret
fwait
cltd
loop
xor
in
dec
loope
lock
inc
xor
jnp
ss
cwtl
jbe
rorl
xchg
push
scas
pop
rorl
jne
sub
lods
bound
xchg
sbb
and
pop
js
sarl
je
mov
mov
or
imul
lahf
mov
dec
lods
imul
pop
stos
cmp
insb
cmp
cmp
or
dec
and
jmp
dec
dec
push
out
sbb
insl
mov
loope
mov
xor
jmp
sti
push
cmp
lret
mov
out
push
jp
add
js
xchg
push
mov
pop
outsl
mov
aad
loopne
xchg
jecxz
xor
inc
mov
or
xor
xor
cltd
mov
mov
xchg
mov
int3
insb
int
and
popf
xchg
pushf
lock
dec
daa
outsl
xchg
jns
ret
shl
add
shll
xchg
arpl
xlat
shrl
jo
push
lds
andb
adc
jl
sahf
mov
sti
mov
cld
push
lock
adc
shlb
inc
cmp
iret
push
fcmovbe
inc
xlat
movnti
push
jecxz
xchg
btc
jecxz
scas
mov
sbb
dec
je
and
dec
cmp
insb
mov
subl
mov
rcr
icebp
push
dec
mov
xor
push
jmp
xchg
andb
jae
sub
mov
and
aam
fistpll
movsb
or
jbe
les
jl
rorb
cmpsb
sub
lret
insb
pusha
jnp
xchg
or
orb
adc
adc
mov
sub
mov
divb
inc
inc
xchg
mov
clc
cli
call
pop
imul
lods
sbb
sub
mov
and
dec
sbb
jno
sub
fisubl
mov
aaa
add
stos
jne
cmpsl
jmp
in
add
adc
popf
jp
lods
test
mov
daa
jb
cmp
pop
pop
cmp
xlat
rcrb
clc
fbld
pop
fstpt
sub
push
out
in
push
pop
outsl
test
dec
mov
mov
ret
pop
mov
ss
sbb
and
pop
faddl
cmp
out
jne
xor
jb
push
out
mov
sub
adc
inc
int
lret
loop
xchg
sbb
orb
inc
dec
leave
cmpsl
inc
dec
mov
add
aaa
jl
daa
inc
test
xor
sbb
add
dec
push
mov
or
pop
or
mov
in
lahf
test
stos
mov
cmp
out
inc
mov
fucomip
adc
cmp
mov
outsb
and
xor
and
pop
addr16
lret
into
stc
sahf
xchg
sbbl
mov
scas
fidivrl
cmp
jmpw
in
cmpsb
push
lea
mov
aam
cmp
icebp
shlb
mov
cld
ficoms
xchg
gs
shlb
fucomi
xchg
outsb
movsl
jp
fs
dec
push
xlat
mov
es
mov
push
scas
adc
cmp
sub
inc
vaddpd
mov
and
mov
add
cmpsl
push
mov
test
fucomip
fwait
ret
popa
fidivs
rorl
cwtl
bound
imul
xorl
popf
sarl
aad
sbb
jno
ficompl
insl
dec
and
mov
dec
and
stos
jne
ret
jnp
jne
jl
mov
and
mov
mov
jp
fwait
movsb
scas
jnp
mov
popf
rcll
add
in
mov
repnz
add
cmpsb
cs
jnp
lds
xor
push
mov
ljmp
jne
les
mov
fucomp
mov
orb
adc
cltd
ja
fmull
sub
loop
pop
repz
les
or
and
rorb
pop
adc
addr16
sbb
sbb
push
popf
or
or
jne
popa
or
pop
mov
inc
jl
fldl
fnstenv
jmp
pop
je
pop
into
out
push
inc
pop
pop
js
xchg
xchg
jmp
lock
dec
mov
iret
in
out
imul
push
pop
inc
mov
aad
imul
lea
test
aaa
outsb
pop
xor
push
ret
decl
xor
mov
add
mov
les
push
test
out
xor
aas
dec
jo
mov
popf
inc
movl
int3
lods
mov
lds
and
adc
pop
leave
dec
fdiv
jecxz
out
mov
mov
dec
mov
pop
mov
xor
dec
imul
jne
mov
and
pop
mov
jbe
loop
adc
lods
out
or
roll
scas
movsb
bound
js
popf
dec
cld
inc
fstps
inc
lret
or
ret
jge
pop
xchg
subl
pusha
lret
aas
js
cmp
mov
and
sub
sbb
call
repz
loopne
sti
roll
pop
jbe
cld
aad
xchg
push
cmp
mov
cmpl
mov
mov
mov
mov
adc
popa
cs
mov
imul
mov
mov
jo
push
lret
outsb
or
pop
inc
cmp
cmpsb
adc
shl
pop
fcmove
iret
lds
in
mov
and
inc
xchg
outsl
cmp
fnstsw
popa
mov
jmp
mov
xchg
dec
xchg
aas
dec
jge
imul
and
cmp
mov
aad
jnp
test
stos
pop
dec
mov
div
inc
popf
mov
inc
hlt
iret
out
sti
mov
mov
push
lds
jbe
add
andb
int
hlt
mov
mov
mov
inc
scas
fisubl
cmp
jo
ret
jne
jbe
nop
sbb
mov
imul
xchg
ja
mov
das
out
xchg
icebp
jnp
mov
ds
or
adc
insl
dec
mov
pop
rcrl
lods
mov
or
ja
dec
sbb
in
inc
hlt
sbb
ret
lea
mov
push
inc
cmc
inc
outsb
ret
flds
pop
inc
call
jae
aad
je
mov
or
adc
sbb
aam
jecxz
jg
ljmp
push
int
enter
and
jge
sbb
inc
cs
adc
ja
xchg
inc
aaa
push
push
pop
rorl
test
sbb
dec
push
and
lock
and
fcompl
outsb
int
dec
pushf
stos
cwtl
sbb
mov
push
outsl
js
jmp
or
add
cli
sub
pmuludq
mov
pop
es
xchg
mov
movsb
fs
mov
mov
pop
cld
loopne
push
and
add
clc
jecxz
dec
jno
fistl
insl
jp
ljmp
test
ucomiss
mov
data16
jne
inc
mov
push
addl
dec
je
cmp
in
out
pop
pop
sub
jmp
ret
push
mov
loop
imul
ja
jl
dec
pop
pmaddwd
and
loopne
dec
aaa
lret
push
cmp
in
xlat
pop
insb
cwtl
ljmp
shrb
dec
or
into
mov
mov
jo
mov
lret
divl
mov
push
jnp
lahf
xchg
or
inc
inc
pop
notl
pop
mov
mul
popa
stos
sub
cli
jno
mov
ljmp
jge
or
adc
cwtl
stos
test
ss
les
loope
mov
and
pop
pop
inc
mov
popa
jae
or
sbb
xor
insb
jge
shlb
arpl
xchg
mov
fidivl
jno
mov
mov
mov
cli
adc
outsl
adc
lock
aas
xor
daa
lret
in
inc
pop
add
shlb
sbb
dec
fdivl
minps
mov
and
dec
icebp
cmp
push
xlat
cwtl
test
jae
mov
xor
push
mov
loop
sub
cmp
jmp
push
inc
fildl
sbbl
cltd
sub
ljmp
gs
cmp
jecxz
loopne
inc
pop
sbb
cmp
fiadds
dec
pop
bound
insb
ljmp
and
cmpsb
and
mov
stos
adc
push
dec
and
sub
or
jno
faddl
movl
mov
in
and
sub
imul
fldenv
fdivrl
jecxz
and
aad
enter
mov
mov
leave
dec
dec
jge
les
cmp
cmp
jg
test
fdivrs
xchg
inc
jg
cmp
jecxz
mov
inc
mov
push
aaa
shrb
dec
fwait
repz
jnp
shrl
dec
test
mov
loopne
jno
add
scas
push
push
mov
mov
mov
dec
in
out
scas
out
cmp
mov
xor
xchg
dec
add
imul
lods
cmp
ss
insl
jmp
es
outsl
call
mull
sbb
xchg
pop
xchg
fidivl
out
xor
ss
jbe
ljmp
inc
mov
xor
pusha
out
subl
je
dec
lahf
pop
xor
pop
stos
jecxz
xor
add
or
ljmp
mov
push
inc
lahf
mov
out
sub
cmp
push
push
mov
dec
add
popa
sbb
sub
push
xchg
fs
cmp
mov
or
cmp
jle
out
mov
mov
xor
or
xlat
jno
xchg
loop
loop
cmc
mov
adc
ss
mov
rcr
cmp
xchg
loopne
arpl
cmp
mov
inc
dec
es
mov
shl
dec
dec
push
pop
ss
jno
test
pop
fists
addr16
cmp
xlat
dec
push
lahf
xchg
push
pop
in
pop
out
lods
cmp
pop
mov
orl
mov
arpl
mov
mov
mov
psubsb
loope
lcall
pop
sbb
es
inc
cmp
push
stos
mov
jmp
xchg
imul
dec
aam
mov
pop
xor
fiadds
jne
cmp
mov
shl
aad
inc
enter
outsb
or
dec
dec
hlt
dec
adc
lods
andb
push
mov
xlat
fildll
pushf
mov
mov
outsl
mov
adc
pop
mov
notb
inc
inc
mov
sbb
mov
cmp
inc
and
xor
sbb
xchg
mov
shll
popa
jl
pop
cltd
pop
ret
dec
insb
cli
pop
cmpsb
sbb
or
data16
into
pop
jae
aad
pop
add
stos
fsub
rclb
pop
adc
sub
sbb
push
lock
test
adc
sahf
pusha
jp
xor
jns
ret
mov
movsb
repz
ficompl
cmpsl
es
adc
push
or
scas
cmpsl
mov
sub
das
sbb
xor
pop
sbb
mov
out
add
ds
jl
add
cltd
dec
mov
mov
mov
subb
add
mov
mov
sub
ljmp
gs
jns
in
cld
loope
jb
sub
push
mov
jb
lcall
cli
imul
stos
push
pop
xor
push
fnsave
dec
mov
cmp
dec
cs
push
mov
insl
xchg
mov
call
sti
jecxz
out
cmp
test
mov
pop
pop
pop
loop
pshufw
or
addr16
mov
iret
test
movsl
or
jmp
fs
int
dec
aad
ret
out
arpl
mov
push
test
push
daa
neg
enter
push
mov
add
inc
rcl
iret
test
mov
add
xor
or
add
daa
adc
fcompl
mov
sbb
sbb
movsb
pushf
out
roll
out
and
bound
dec
inc
xor
push
int
inc
jmp
in
lods
adc
pop
xchg
idivl
outsb
mov
jb
cmp
jl
in
in
insl
mov
add
imul
loopne
scas
in
or
jbe
xchg
movsl
sub
js,pt
ljmp
icebp
loope
jmp
sub
jge
out
scas
mov
lock
test
lods
push
lret
test
lahf
stos
inc
xchg
push
jne
sub
test
mov
mov
out
pop
jb
inc
ret
push
fcompl
insb
lret
pop
xlat
or
movsl
sbb
mov
fdivrp
sbb
faddp
outsb
sbb
nop
inc
adc
jae
in
inc
mov
fstl
cld
cli
pusha
mov
push
es
mov
or
rcr
jecxz
outsl
add
jl
pop
into
test
int
push
in
nop
mov
test
sbb
cmp
xchg
mov
cwtl
stos
popf
jg
test
out
adc
mov
and
and
adc
jne
outsb
je
xlat
and
rol
or
jne
mov
test
in
shrb
xor
cmpsl
fldl
mov
ds
lahf
lret
jnp
fwait
mov
sahf
call
xor
call
and
xchg
sbb
fstpl
sub
fdivrs
push
add
sarw
js
and
xchg
add
insl
insl
js
inc
orb
or
ja
pusha
fisubs
in
pop
and
or
sbb
push
or
or
inc
pop
mov
jb
xor
inc
leave
xchg
push
mov
jae
pop
test
pop
cli
mov
dec
mov
call
insl
jo
fsubs
mov
add
add
pop
shrb
mov
adc
pop
sbb
sbb
std
mov
adc
dec
aaa
jge
push
xlat
rolb
enter
mov
xchg
out
adc
xor
loope
push
xchg
push
pop
mov
dec
les
cmpsb
jmp
mov
push
sbb
pop
jl
mov
cmp
pop
dec
int
jne
xchg
jmp
xor
loop
out
pusha
jmp
xchg
lds
gs
pop
imul
cli
mov
pop
stc
xchg
or
pop
je
push
repnz
shlb
aas
lret
das
test
push
andb
je
ficoms
js
movsb
pop
pop
cld
push
sbb
push
lods
cmp
test
cmpsb
repz
inc
mov
lcall
lea
jge
shlb
add
sub
out
push
sbb
add
loop
push
stos
xor
sbb
lock
jne
stos
dec
push
xchg
pop
cmp
filds
test
shlb
mov
fwait
pop
enter
sub
xlat
das
jg
movsb
mov
inc
icebp
test
stc
fistl
pop
cmp
adc
outsb
int
cmp
cwtl
es
sub
fcoms
fisttpll
imul
xchg
push
or
cmp
mov
call
fwait
stos
fwait
and
push
and
jbe
fcomp
mov
iret
sub
rolb
int
cmp
vmwrite
andb
sub
mov
adc
test
sub
popf
jecxz
jmp
jecxz
cmp
cmp
or
sbb
test
add
int
outsb
lods
jmp
sbb
data16
ret
inc
inc
movl
push
push
stos
jmp
add
test
adc
jg
push
das
pop
movsl
leave
cmp
outsb
cltd
xor
aad
mov
arpl
loop
xchg
sub
xor
dec
pop
pop
push
sti
cmp
xlat
mov
ss
movsb
push
test
filds
add
mov
xchg
xor
mov
push
imul
inc
jae
aaa
dec
out
sub
ret
mov
jp
or
mov
fwait
jecxz
jbe
and
jnp
pop
jns
mov
gs
jl
adc
xorl
sub
and
les
in
pmaxub
call
sti
cbtw
mov
shrb
sub
dec
push
jmp
and
mov
mov
ds
fcmovnb
mov
je
dec
or
fisttpll
cmp
pusha
imul
push
lea
xchg
jmp
mov
push
add
dec
or
and
cmp
scas
mov
pop
loop
sbb
ss
rcl
jnp
and
inc
daa
lock
jecxz
ret
adc
pop
ja
loop
fildll
ljmp
loopne
rcrl
cld
or
mov
sbb
scas
outsl
push
jbe
mov
enter
or
jbe
stos
dec
sbb
push
std
ret
aam
popf
push
cmc
daa
xor
ret
cmp
loopne
insl
inc
fs
pop
daa
outsb
jl
bound
mov
inc
push
mov
mov
in
and
out
jmp
scas
scas
fbld
adc
mov
jl
enter
add
jmp
push
cmp
cmpb
add
ficompl
test
xor
xor
pop
in
data16
pop
ljmp
sub
jmp
into
sbb
jp
enter
clc
repnz
ljmp
test
fs
test
clc
add
jno
ficoml
out
lret
jmp
and
lea
in
mov
mov
dec
mov
mov
dec
inc
lret
ljmp
adc
add
cli
fcoms
in
mov
xchg
lret
test
lods
sahf
dec
add
or
mov
cmp
fcomi
xor
loopne
loop
xchg
fldt
inc
divl
addl
mov
pop
xchg
and
push
push
jmp
data16
lcall
inc
insb
jne
xchg
es
or
add
cmp
sahf
test
push
adc
nopl
mov
adc
insb
orb
dec
dec
cmovno
fidivl
adc
mov
insb
fwait
adc
push
sub
outsl
mov
push
test
gs
popa
mov
mov
repnz
push
dec
sbb
mov
mov
stos
mov
dec
cmp
pop
fildl
cmp
sub
adc
outsl
pop
cmp
fcompl
push
shlb
add
adc
xor
ss
fwait
jo
mov
xor
xor
cmp
and
adc
adc
and
stos
jnp
mov
jno
pop
js
imul
xchg
leave
sar
inc
arpl
outsl
stos
out
mov
call
xor
in
xor
je
outsl
dec
add
outsl
and
push
cmp
stos
js
lea
lods
sahf
and
adc
push
cmp
loopne
js
insb
sbb
hlt
fstps
xor
cmc
cmp
dec
xchg
test
inc
xlat
dec
cmp
add
lcall
sub
mov
adc
rcrl
xchg
mov
imul
ds
mov
mov
and
and
jo
loope
inc
fs
xor
orps
or
inc
cmp
shl
pop
mov
cmpsb
lods
cmp
in
pop
pop
jo
and
rclb
cmp
adc
dec
in
repz
inc
pushf
push
mov
pop
dec
loope
iret
movsl
lods
xor
ja
icebp
bound
and
fildll
pop
in
je
stos
lods
es
and
xlat
aaa
les
dec
fnstenv
leave
incl
out
in
mov
mov
jae
roll
icebp
adc
xor
std
xor
lods
data16
push
pop
adc
xor
cwtl
pop
mov
push
iret
cmp
mov
cmpsb
mov
divl
xchg
out
xor
cltd
dec
push
inc
imul
lret
xchg
inc
inc
mov
dec
inc
test
xchg
rcrl
sub
sbb
xchg
push
cwtl
les
and
hlt
fstp
arpl
out
push
push
repz
xor
xchg
test
fdivl
fwait
das
ret
lcall
push
cld
sub
push
in
imul
push
out
pop
out
dec
jae
cmp
pop
mov
jnp
adc
sub
dec
lea
sub
xchg
add
loopne
faddl
sbb
or
rolb
mov
or
loope
out
jg
xor
lods
daa
aaa
mov
jns
les
in
dec
add
or
mov
mov
cmp
add
fwait
nop
xor
sub
adc
insl
outsl
add
test
sub
cmpsl
out
dec
out
cmc
xchg
test
mov
jo
jle
stos
fiadds
mov
dec
ljmp
xchg
loop
or
inc
add
fisubl
xor
fwait
ret
pop
adc
fistps
push
test
xchg
les
jae
jb
loopne
adc
popf
xchg
inc
test
dec
fcoms
rcll
xchg
inc
lret
pop
xchg
lahf
push
inc
ror
idivl
xchg
das
xor
sbb
push
test
pop
pop
ret
loope
or
movl
xor
adc
loop
enter
loopne
or
decl
pop
pop
xchg
pop
data16
pop
inc
dec
push
push
lods
sub
jnp
push
je
jnp
lods
mov
cmp
pop
pop
shll
lods
jns
mov
sub
jecxz
sub
xchg
das
test
mov
or
cmp
mov
cld
loope
sbb
rorl
mov
xor
mov
jmp
inc
xchg
push
xor
jbe
pop
fnsave
scas
scas
jnp
outsl
add
cld
xchg
pop
mov
in
xchg
out
adc
popf
gs
out
push
or
inc
scas
mov
xchg
loop
mov
fisttpl
jle
adcb
xor
add
mov
cmp
aad
mov
pop
push
call
mov
mov
push
adc
mov
mov
out
add
mov
test
jle
sbb
sbb
fiadds
mov
outsb
push
or
faddl
xorb
mov
add
pusha
mov
divb
jbe
ret
inc
not
das
mov
pop
lret
adc
mov
mov
or
ss
repnz
jne
sub
add
pusha
imul
shlb
in
pop
xlat
outsl
daa
push
sub
outsl
add
insl
xchg
insb
adc
hlt
or
in
sbb
lds
andb
cltd
sbb
mov
call
push
mov
movsb
xchg
insl
sbb
mov
xchg
cmpl
push
mov
dec
je
in
sbb
into
insl
and
cli
mov
and
pop
mov
dec
gs
outsl
lahf
push
mov
inc
dec
xor
xor
das
repz
aas
fdivs
lahf
push
out
pop
pop
fs
jle
insl
or
mov
xchg
aam
pusha
jne
popa
fsin
xor
mov
daa
inc
jge
data16
fstpt
lea
popa
add
push
fsubs
sbb
mov
adc
out
cmc
xchg
cli
gs
shrl
sbb
mov
scas
push
sbb
jne
ss
adc
dec
dec
lock
cwtl
test
lea
ja
filds
jp
ds
je
cmp
jns
hlt
inc
jnp
mov
movsl
addr16
xchg
sti
call
and
dec
jge
or
fcomi
jne
mov
std
shlb
test
shlb
add
ds
cli
or
xlat
stos
pop
jb
xchg
ss
arpl
dec
bound
rol
not
push
cmc
shl
andl
int
call
ja
ret
es
call
mov
mov
lcall
pop
sbb
rcl
jle
mov
icebp
icebp
arpl
jp
out
dec
in
inc
stos
sti
jae
sub
stos
push
sub
mov
jg
loopne
adc
cld
cltd
cmpl
pop
inc
dec
adc
pusha
clc
pop
test
pop
insl
cs
cwtl
push
shld
mov
xchg
push
enter
xor
idivw
push
iret
jge
inc
sbb
repz
bound
xor
sub
daa
mov
mov
mov
cmp
sbb
fisubrl
mov
sbb
inc
add
mov
sub
scas
js
dec
in
mov
leave
pop
stos
cmp
sbb
repnz
mov
dec
ror
test
ret
inc
stc
cmp
decl
and
jle
sahf
pop
cs
add
inc
add
or
sbb
ret
inc
rcrl
inc
leave
sti
pop
jge
in
divl
push
or
adc
lcall
pop
and
adc
jnp
add
xor
jp
das
inc
sbb
pop
fcom
ss
xchg
mov
hlt
jge
pop
pop
mov
shlb
push
and
pop
in
cltd
add
loopne
shrb
ret
lcall
mov
cmpsl
inc
shl
test
lcall
out
mov
xor
daa
int
mov
dec
jge
push
test
ret
mov
ret
cmp
ljmp
mov
jle
pop
iret
sub
sub
cmp
or
inc
std
jae
insl
scas
out
lds
mov
push
xor
clc
mov
shrl
addl
icebp
in
loop
cmp
xor
sub
mov
jae
mov
inc
out
imulb
ds
clc
in
mov
ljmp
leave
dec
or
sbb
dec
dec
cmpsl
xchg
les
jge
add
mov
xchg
sub
ds
dec
xor
sub
pushf
iret
sbb
jo
dec
lahf
and
sbb
imul
fiaddl
push
addr16
outsb
rcrb
and
lock
je
int3
pop
fldlg2
pop
or
jl
cmp
sti
inc
aad
inc
cmpsb
loope
add
mov
les
fisubrl
add
jae
lea
clc
loopne
insl
out
xor
iret
scas
pop
jne
jp
jns
aam
cmp
xlat
and
mov
xor
ds
adcb
jne
sti
mov
lods
fmuls
icebp
movsb
push
mov
dec
xor
and
push
jno
insl
out
hlt
and
mov
leave
pop
je
scas
pop
pop
fsubr
and
add
jge
xchg
in
loopne
ljmp
int3
jae
lock
scas
dec
or
mov
xchg
stos
cld
jge
cmp
rcrl
and
test
sarb
xchg
inc
in
xor
rcrl
and
call
mov
repnz
push
inc
in
jecxz
add
xor
clc
inc
movl
mov
adc
dec
pusha
movsl
xchg
add
packsswb
adc
inc
je
jp
dec
jle
aad
outsl
xchg
dec
sbb
cltd
fs
cmp
jns
mov
dec
pop
inc
fbstp
cmpsl
push
sbb
and
adc
aas
fimull
test
pop
sbb
adc
mov
cs
jmp
mov
std
icebp
jo
dec
xor
out
outsl
push
xor
scas
xor
leave
imul
jne
mov
or
imul
push
sub
shll
or
xchg
and
popa
sbb
push
fcmovnb
hlt
inc
add
in
fcmovne
inc
aam
aam
jmp
stos
dec
jne
ret
mov
lods
push
insb
aaa
add
or
mov
repz
xchg
test
xchg
xchg
sub
xor
and
pop
fldl
in
inc
sbb
mov
pop
cmpsb
shlb
ret
lods
das
sub
js
push
push
shlb
int
insb
cmp
mov
lcall
out
scas
rcr
cli
xchg
push
aad
pop
mov
mov
mov
jnp
mov
imul
push
call
call
sbb
scas
cmp
xchg
sbb
pusha
mov
or
jo
inc
into
insl
fucomip
fwait
xchg
cld
iret
jmp
insb
icebp
add
jb
dec
cld
roll
pop
movsl
and
movl
test
lock
pop
dec
lods
imul
test
add
mov
mov
rcrl
adcb
pop
pop
out
jecxz
jae
xchg
mov
call
mov
cmp
mov
aaa
sti
jo
push
fildl
imul
pop
add
les
loopne
fcmove
es
jno
xor
adc
jae
mov
fistps
insl
mov
test
fwait
or
inc
aam
sub
lock
push
and
cmp
sub
jecxz
mov
push
xor
xchg
dec
cltd
in
cmp
sbb
jle
outsb
sbbl
and
inc
pushw
push
scas
dec
dec
test
loope
sahf
pop
and
loop
rcll
ret
pop
adc
sbb
loopne
loopne
mov
add
pop
mov
aad
cmp
mov
xchg
fs
ret
dec
adc
and
xlat
pop
rcll
jp
push
lods
out
repnz
add
out
fdivl
jbe
addr16
xor
sbb
inc
mov
movsl
mov
sub
and
int3
or
loopne
xlat
mov
ficompl
mov
or
lods
pop
push
xchg
push
mov
sub
pop
js
mov
mov
ja
jmp
inc
pop
ljmp
sub
mov
sti
jl
int
jae
sub
scas
lcall
pop
lock
and
std
lock
lods
adc
fsubrp
pusha
lods
icebp
mov
and
nop
sbb
jb
into
ja
fcmovb
scas
out
pop
gs
mov
inc
lds
rclb
push
add
loopne
mov
ds
jmp
pop
mov
dec
pop
loopne
daa
inc
dec
mov
jo
pushf
ljmp
or
popf
cmpsb
xchg
loope
push
xchg
je
sbb
cmp
adc
adc
pop
inc
adc
cmc
insl
pop
aaa
insl
xchg
jmp
ljmp
movsb
daa
cmp
lcall
lcall
or
lahf
sarl
xchg
popf
imul
in
enter
xchg
sub
mov
std
mov
jge
jbe
test
jecxz
stc
jmp
lfs
or
jbe
scas
dec
popl
adc
test
lret
out
push
jne
push
push
mov
mov
out
shrb
lods
sbb
fdiv
test
sbb
mov
or
push
fs
sbb
cmp
fisubs
gs
sbb
sbb
lock
cmpsl
sub
fists
xor
mov
mov
push
jl
orb
int3
mov
pop
ljmp
jge
rorb
xchg
adc
xor
jbe
mov
addr16
rclb
xor
jbe
mov
push
inc
ret
fdivrs
fisttpl
mov
or
and
or
and
int
push
sbb
out
sub
jno
jmp
nop
je
loop
sbb
fbstp
jp
cmpsb
adc
aas
repnz
sahf
popf
test
mov
outsl
dec
sub
sbb
popf
arpl
push
xchg
scas
and
and
fistl
lods
out
inc
push
mov
pop
sbb
cmpsb
cmp
sbb
int3
adcl
outsb
jo
add
lock
mov
sahf
in
push
ret
push
mov
push
sub
inc
roll
js
jl
adc
gs
inc
xchg
inc
cmc
fiadds
sbb
push
mov
pop
dec
fsubrl
pop
sbb
inc
mov
mov
cmpsb
dec
or
push
xchg
dec
sbb
imul
mov
push
lret
jmp
xor
shll
js
out
pop
js
insl
pop
inc
je
inc
mov
xorb
rolb
cmpsl
stc
jno
into
mov
cld
lods
js
cwtl
mov
add
cmp
outsl
movsl
and
sbb
insb
mov
push
and
or
fcomi
mov
add
arpl
jae
adc
movsl
iret
jge
fstpt
mov
dec
fbld
fisubs
fistps
mov
lahf
push
cmpsb
xchg
and
fisubrl
out
and
pop
call
xchg
xorl
mov
or
jb
rcl
and
adc
shlb
mov
addb
js
les
mov
xchg
or
add
loopne
sbb
sub
call
sti
jp
js
add
mov
stc
mov
cmp
jno
fldt
mov
lret
adc
gs
jge
or
lea
std
cmp
das
pop
add
xor
dec
and
push
jae
adc
mov
mov
dec
dec
pminub
mov
jle
mov
xchg
cwtl
std
aas
xchg
mov
call
push
mov
or
dec
fstl
int3
cmp
dec
inc
gs
cmp
xchg
leave
out
xor
lds
and
push
out
mov
and
xchg
jmp
push
jo
xor
mov
cli
orl
cli
mov
and
mov
push
mov
lock
push
sub
add
test
pop
rcrl
inc
xchg
movw
adc
or
add
and
ds
call
lds
test
or
xor
or
mov
bound
sbb
cmp
sbb
adc
sub
lcall
jmp
pop
and
jne
aaa
mov
repz
popf
arpl
roll
shlb
push
xchg
adc
cltd
lea
xor
test
xlat
xor
pushf
mov
addr16
out
cmp
push
pop
aas
seta
inc
push
cmp
mov
xor
pop
fwait
sub
push
inc
addr16
adc
add
jbe
and
sub
or
movsb
xchg
cmp
stos
mov
fwait
xor
outsb
sti
loope
mov
jne
fucom
mov
insl
or
xchg
push
and
mov
test
rol
out
lahf
outsb
icebp
ret
into
lds
icebp
jle
sub
jmp
push
xlat
pop
inc
push
fnsave
daa
or
lods
scas
out
sub
dec
xor
fnstsw
mov
adc
pushf
cmpsb
or
sar
pop
rcrl
out
test
jo
mov
xchg
pop
aaa
jbe
cmp
mov
popa
pop
cs
and
incl
pop
pushf
repz
mov
in
mov
mov
push
and
inc
xchg
and
xor
cmc
rcrl
or
mov
ja
pushf
xchg
sti
add
and
pop
adc
nop
inc
xchg
sbb
push
or
fsubrl
lods
gs
cld
in
ret
test
les
call
fs
or
cmp
loope
add
push
sbb
fimuls
mov
inc
dec
lea
pop
aaa
mov
xor
and
mov
pop
icebp
aam
pop
out
add
scas
mov
out
mov
ja
out
mov
rcrb
add
push
cmpl
test
daa
mov
pop
or
sbbw
or
icebp
lock
sbb
sti
xchg
aad
sbb
inc
mov
inc
sbb
push
jns
lahf
imul
aam
test
push
push
daa
add
ret
or
xor
fldcw
les
xor
jge,pt
ret
and
pushf
subb
outsb
icebp
cmpsl
ja
lods
insl
fwait
or
mov
enter
gs
jbe
into
cmp
sahf
iret
xlat
jne
jnp
pop
xchg
sbb
fs
repnz
mov
cld
movsl
jb
mov
xchg
in
fs
mov
inc
and
add
les
mov
lock
sahf
insb
js
add
adc
sbb
outsb
jno
dec
jns
pop
inc
add
roll
sub
mov
fs
sbb
push
pop
lret
fsubrs
imul
idivl
aaa
sti
add
jl
stos
pop
in
insl
cmp
imul
fildll
das
repnz
or
icebp
jne
sbb
pop
and
or
aad
lock
cs
call
adc
cmp
or
scas
pop
cmp
stos
pop
sbb
add
sbb
out
sti
stos
outsb
add
xchg
jmp
mov
or
cmpsb
shlb
and
sub
push
dec
sbb
insl
lea
xchg
push
pop
jnp
subl
mov
std
shl
ja
test
xchg
in
cmp
rcll
mov
and
cmp
sub
mov
int3
ret
adc
sub
fidivs
loope
inc
or
cmp
mov
xchg
in
int3
lock
pop
push
push
fnsave
stos
xchg
mov
inc
mov
mov
mov
sarb
sbb
pop
fnstcw
lock
lods
xor
aam
push
mov
sarb
lock
mov
imul
dec
shlb
push
rcll
popa
sub
addb
xor
minps
imul
ficoms
cmp
inc
cld
lahf
and
pop
fwait
add
punpckldq
in
push
aaa
shrl
add
and
pop
daa
push
jecxz
inc
pop
test
sub
and
ds
dec
mov
out
je
ret
mov
fists
enterw
pop
in
lahf
xlat
mov
push
not
fists
fcomps
aaa
jne
mov
mov
ss
leave
jge
inc
aas
mov
data16
mov
inc
mov
add
push
fwait
mov
mov
test
ret
scas
sub
pop
mov
or
popf
leave
and
lock
scas
inc
inc
ret
jmp
mov
mov
je
pop
test
mov
lret
lods
stos
jo
ret
and
divl
pop
xchg
and
gs
mov
hlt
adc
popf
mov
in
ficoms
or
in
in
pop
mov
add
xor
jge
add
push
fwait
sub
sub
push
nop
sub
lds
adc
lret
lock
out
jo
inc
sub
in
cmp
test
mov
cwtl
cmpsl
mulb
dec
xchg
cmc
ret
ljmp
cs
lods
mov
dec
adc
pop
in
inc
mov
pop
outsb
divl
adc
pop
mov
movsl
push
pand
imul
pop
shll
ss
cmp
cmpsb
dec
xor
cs
push
pop
jne
mov
dec
jg
or
adc
btc
testl
jne
in
outsb
aas
addr16
sub
inc
in
out
les
lret
inc
mull
ja
enter
ja
mov
or
pop
sub
or
adc
pop
jno
insl
or
cli
mov
inc
and
push
xor
sub
test
loope
push
xchg
bound
test
pusha
mov
xor
mov
push
test
cmp
js
lea
lahf
jp
adc
stc
add
ret
in
or
jnp
sub
lock
mov
fildll
imul
xchg
leave
xor
inc
sahf
dec
and
cmpsb
insb
adc
push
mov
ret
aaa
push
push
inc
xchg
in
pop
je
inc
xor
xchg
dec
jbe
test
fdivrs
in
sbb
jbe
stc
add
sbb
sbb
clc
jmp
scas
cmp
mov
xlat
jne
pop
inc
insl
pop
mov
xor
sub
popl
dec
aam
add
pushf
bound
add
mov
inc
or
mov
ss
cwtl
sarl
ret
out
cmp
push
icebp
mov
push
int
scas
cmpsl
out
and
or
lods
cmp
mov
push
push
sub
shrl
xchg
ss
xor
mov
shrl
fst
aaa
lret
adc
inc
jecxz
adc
sbb
sbb
in
into
mov
in
popl
and
inc
adc
scas
mov
bound
mov
fcomps
or
aaa
hlt
hlt
add
gs
scas
add
adc
nop
push
jae
cmp
test
jne
jge
sub
hlt
mov
and
sahf
jb
push
into
test
xor
push
mov
insb
pop
and
jne
jge
cwtl
add
jge
pop
dec
stos
rolb
imul
jp
es
mov
dec
es
xor
and
lock
sahf
adc
inc
inc
loop
pop
test
movsl
push
mov
mov
ds
insl
jmp
cmp
push
outsb
shlb
pop
xlat
outsl
mov
addr16
mov
mov
mov
xor
or
mov
cmpb
movsb
pop
roll
dec
dec
sbb
and
mov
xlat
ja
sub
dec
and
icebp
mov
test
jmp
or
adc
xchg
inc
mov
push
mov
adc
mov
cmp
sub
aad
call
icebp
xor
call
jae
popf
call
jno
jmp
lods
out
mov
hlt
daa
xlat
sub
jbe
mov
jno
stos
sub
je
push
hlt
mov
mov
mov
leave
popa
scas
push
hlt
jnp
sub
insl
loope
add
test
pop
in
jbe
adc
lock
mov
fcomip
ljmp
sti
cmp
cltd
add
clc
jecxz
loopne
mov
mov
fdiv
fiadds
pop
aas
mov
pop
push
lsl
xlat
iret
imul
fsts
or
div
mov
cmp
push
fistl
or
dec
push
mov
xor
cmp
jne
ja
sti
jbe
shll
outsl
out
orl
ficoms
loopne
jmp
mov
or
jae
push
ds
sbb
inc
push
add
js
in
jno
sub
das
mov
xor
scas
jecxz
jecxz
les
cmc
loop
insb
add
subb
scas
or
stos
ds
out
add
insl
or
xorl
mov
xor
shlb
xlat
loope
jge
hlt
rcl
jle
fstpt
cmpsb
xor
jecxz
sub
es
cmp
and
pop
aam
inc
in
cmp
mov
js
inc
bound
cli
cmp
dec
packsswb
adc
popa
mov
add
repz
outsl
xor
and
fwait
sarb
mov
sahf
fisubrl
mov
ret
int
popa
mov
inc
and
fsub
rcrl
es
pop
outsl
imull
jp
test
cmpsl
arpl
cmp
dec
or
dec
jecxz
cmp
add
adc
jno
or
and
dec
pminub
es
inc
stos
sub
call
test
sbb
inc
cmp
jmp
xor
push
cltd
hlt
jecxz
jmp
repz
jmp
jl
pop
push
mov
adc
dec
xor
je
pop
adcb
jle
mov
shrl
jo
in
mov
and
and
mov
negl
ret
jp
sub
or
mov
enter
mov
fwait
aas
sarb
add
jmp
pop
sti
and
arpl
es
cmpsb
push
sti
adc
push
lea
fnstcw
sbb
or
mov
pusha
repnz
jbe
xchg
mov
or
arpl
cmpsl
sub
sbb
push
mov
xor
js
in
and
cmc
jno
pop
pop
ljmp
loop,pn
xor
cmp
xor
inc
jl
mov
insl
pop
adc
push
xor
test
imul
test
sbb
aas
in
mov
jmp
lock
inc
mov
arpl
popa
lods
pop
shl
test
mov
adc
mov
mov
push
mov
mov
adc
add
mov
fstpt
mov
sub
jne
push
cmc
jge
or
lods
fnstsw
call
pop
push
cli
lock
push
cmp
mov
and
arpl
mov
jecxz
lahf
jnp
repnz
addl
insb
pusha
sub
push
mov
jp
sub
daa
xchg
shlb
aas
out
jecxz
add
sbb
inc
mov
xchg
xlat
sti
aad
outsb
mov
mov
std
jmp
pop
ret
int
inc
add
test
lds
sti
xchg
cmp
inc
mov
shll
cli
into
dec
adc
inc
fisubrl
in
cmp
hlt
in
iret
dec
sti
sub
jp
inc
fwait
xorb
rol
or
mov
xchg
jnp
fidivl
ret
xor
stos
mov
xlat
and
stos
mov
jo
or
aad
and
into
fwait
iret
mov
shl
icebp
add
adc
jne
adc
inc
push
std
cmp
out
clc
ljmp
mov
rorl
jle
sbb
sub
mov
xchg
movsb
push
pop
sub
add
lret
mov
mov
jnp
mov
mov
ja
out
mov
fidivl
mov
in
aam
jbe
addr16
pop
js
or
jmp
lds
jmp
xor
mov
mov
jl,pn
cs
shl
push
inc
je
jno
sahf
sbb
lret
std
mov
pop
lret
push
orl
or
adc
pushf
fwait
pop
imul
ret
loopne
lds
dec
out
xorl
or
mov
scas
into
cli
xchg
push
cmp
inc
sbb
push
pop
sbb
pop
jmp
push
push
mov
push
aaa
and
cmpsb
dec
shrb
out
gs
gs
jmp
mov
dec
add
xor
sub
and
addr16
loope
loope
fstl
add
stos
dec
pop
mov
aam
pop
stos
in
popf
jnp
mov
and
adc
aam
in
out
andb
jge
jle
or
push
and
or
inc
fbld
add
sbb
iret
popa
in
ljmp
push
pop
push
lods
inc
ds
scas
sbb
scas
adc
or
hlt
mov
repz
incl
pop
je
aad
pop
adc
xchg
dec
fisttpll
jle
icebp
stos
stos
test
dec
es
cmp
inc
femms
pop
inc
in
sub
mov
inc
shlb
mov
testb
mov
and
or
or
icebp
gs
pop
enter
push
sub
sbb
xchg
cmp
pop
das
xchg
mov
dec
bound
rcll
jecxz
dec
push
push
aam
dec
and
test
mov
test
mov
pop
cmc
pusha
pop
ljmp
mov
mov
jae
ffreep
xchg
int
mov
sbb
adc
inc
sbb
cmp
jbe
les
fstp
shll
ds
pop
xchg
cwtl
xlat
and
dec
xor
fbstp
push
hlt
not
mov
cmp
and
adc
mov
adc
iret
dec
push
cmpsb
inc
call
push
dec
movsb
xchg
sbb
mov
stos
mov
jg
xchg
mov
xchg
das
jge,pt
fnsave
in
cltd
jmp
mov
inc
xlat
sbb
add
sub
mov
out
ret
push
les
stos
pop
cmpsb
and
js
in
jge
cltd
shlb
sub
jbe
testl
clc
cmp
stos
dec
pop
cmp
into
fistl
rorb
outsb
imul
call
shll
pop
xchg
pop
or
leave
scas
cmp
or
ret
or
sbb
push
dec
cmp
push
sub
cmp
je
mov
iret
int3
dec
paddb
pusha
cltd
add
fs
and
pop
mov
jecxz
pop
pop
mull
outsb
pop
add
push
mov
pop
aam
stos
push
aam
mov
cmp
aam
mov
in
sub
int
xchg
loopne
mov
sbb
pop
mov
hlt
mov
mov
cmpsb
lcall
cvtps2pi
inc
lret
sbb
dec
pop
or
jb
aaa
xor
xchg
test
lret
fucomi
pop
or
cwtl
xchg
jg
add
mov
subb
shll
xor
mov
cli
out
daa
or
xor
sub
roll
int
cli
aad
sub
xlat
cmp
ss
popf
xor
sbb
fwait
add
cmpsl
jle
call
adc
and
fwait
push
xchg
mov
hlt
fwait
outsl
push
adc
xor
or
xchg
fsub
or
pop
mov
data16
fs
mov
adc
inc
cmp
jnp
rol
fldlg2
pusha
pop
pusha
icebp
ljmp
dec
xchg
arpl
popa
mov
jg
pop
mov
jb
push
mov
popf
mov
dec
xchg
push
in
cli
and
mov
pop
mov
ficoms
insl
pop
pop
ljmp
scas
cmp
adc
shl
sbbl
mov
fidivrl
push
adc
scas
push
adc
rolb
rol
test
pop
jg
idiv
ja
cmpsb
sbb
hlt
in
mov
out
les
addr16
lret
dec
cmpl
xor
and
scas
inc
add
jmp
ja
dec
mov
push
jbe
scas
cmp
test
push
or
fs
jmp
scas
cmp
dec
dec
pop
inc
mov
push
fdiv
jbe
fsubl
jb
stos
pop
push
xorl
fcompl
push
or
pusha
jecxz
scas
movswl
or
inc
icebp
push
cmp
imull
in
lret
test
push
xor
jmp
aas
outsb
test
xchg
mov
insl
out
cmc
or
je
out
rcll
mov
mov
dec
ret
je
cld
cmc
xor
es
adc
jle
rolb
lcall
jg
push
sub
mov
gs
cmp
loopne
lret
js
or
mov
call
stos
or
mov
loop
mov
fldt
pop
scas
outsb
stos
loope
repnz
outsb
out
mov
mov
test
mov
loope
ret
div
cli
sbb
dec
stc
inc
adc
mov
cmc
inc
inc
fdivrp
push
les
sub
fldcw
inc
hlt
jbe
sahf
sbb
adc
in
mov
call
int
dec
ds
cmovns
cmp
mov
cmp
rclb
cld
push
add
mov
rclb
xor
add
mov
add
outsb
imul
movsl
jnp
push
pop
in
in
into
stos
sub
jl
lods
incb
pop
and
mov
iret
dec
mov
cli
cmp
xorb
inc
les
icebp
fbstp
sbb
and
cmp
xor
xchg
dec
lcall
subb
jno
cld
push
cmp
add
mov
addb
fwait
les
test
push
mov
mov
xorb
fmulp
sbb
xchg
cmpsl
das
ficoml
divb
jbe
ret
imul
sbb
mov
sub
stos
push
cmp
push
outsl
lcall
mov
mov
or
and
dec
subb
popf
stos
out
test
cmp
fistpl
rsqrtps
inc
icebp
mov
pop
int3
sbbb
cmp
sub
fwait
lea
scas
xchg
jbe
daa
addr16
std
insl
pop
popf
lcall
mov
cmp
xor
std
adc
inc
pop
hlt
popa
push
cmp
subb
jnp
xor
arpl
pop
and
lcall
jne
cli
mov
pop
das
mov
dec
xchg
sub
ljmp
push
mov
cmp
fcoms
shr
shlb
cmpsl
jbe
iret
cs
aas
pop
mov
je
inc
dec
cmp
jl
fimull
out
push
mov
mov
cmp
mov
jg
je
add
shll
out
cmc
test
sbb
and
dec
aas
pop
jl
jo
sti
jno
aam
cs
cmpsb
or
lahf
xlat
lds
mov
or
push
mov
mov
aad
outsl
cmp
sarl
jecxz
push
cmp
mov
xor
bound
outsl
mov
xchg
mov
daa
stos
sub
mov
cmp
outsl
out
add
in
mov
jge
add
cwtl
call
sub
sbb
push
test
loopne
movsb
jbe
push
lahf
xchg
push
cmc
add
mov
jno
aad
icebp
shl
dec
lcall
jg
jo
scas
fbstp
inc
mov
lret
dec
ss
lahf
pop
in
scas
outsb
ret
ss
mov
pop
fildl
ss
lods
fstenv
outsb
scas
cmpsb
xchg
sti
lret
clc
mov
and
mov
in
or
out
or
in
arpl
dec
cmp
sbb
sub
cmp
mov
lea
or
jle
dec
arpl
cli
push
dec
jbe
out
aaa
jae
pop
clc
jg
out
pop
or
ds
ficoms
jo
fiadds
out
test
adc
and
lods
mov
cmp
jnp
outsb
mov
clc
aad
stos
jo
jnp
adc
xor
popf
in
jb
negl
pop
andb
add
cmp
cli
outsb
mov
ret
push
lret
jne
ja
mov
sahf
pop
cmp
and
int
fsts
imul
add
xlat
xor
cld
aam
cmp
data16
mov
xor
jbe
mov
mov
adc
mov
mov
pop
jo
pop
shlb
into
pop
int3
lea
push
mov
mov
push
inc
lret
pop
jle
jo
dec
cmpsb
outsb
stos
jl
add
clc
xor
add
pop
pop
xchg
mov
outsb
pop
lret
movsl
hlt
push
outsb
or
push
xor
cmp
inc
movl
cmp
aad
jae
in
mov
jmp
adc
and
mov
loope
in
cmp
ret
push
ja
stos
sbb
pop
scas
je
fcmovnu
xchg
ret
ret
mov
ret
aaa
add
or
adc
test
pop
scas
xor
lods
push
jecxz
sbb
xor
cmp
dec
jne
mov
cmp
dec
inc
cmp
xchg
add
subl
mov
test
jbe
aam
jge
movsl
adc
out
adc
fdivrs
mov
mov
in
cs
je
lods
mov
sahf
and
shl
shr
push
mov
fbld
into
mov
das
mov
daa
pop
dec
iret
mov
stc
xor
push
mov
mov
mov
xlat
loopne
out
mov
jnp
inc
or
mov
ss
ficoml
mov
push
ror
loopne
xor
out
inc
xchg
stc
pop
pop
out
jl
and
xchg
fadds
xchg
cwtl
ja
cld
dec
je
data16
mov
ror
inc
sub
sbb
adc
ss
std
insl
filds
imull
xor
lds
test
loope
arpl
adc
repz
push
lods
ds
or
cmp
cltd
add
loopne
jne
mov
lea
sahf
mov
nop
and
add
jnp
sahf
mov
stos
pop
pop
out
hlt
xor
scas
jmp
clc
sahf
and
jno
rcll
fdivr
cmp
adc
popf
rcr
mov
mov
dec
mov
aaa
push
xor
mov
or
inc
loop
cmp
and
fwait
scas
dec
add
mov
gs
je
js
or
cmp
push
xchg
loopne
imul
mov
dec
mov
out
inc
mov
mov
popf
sbb
lods
scas
pop
lds
cli
sti
mov
loope
insl
add
adc
scas
mov
sub
jb
jp
mov
test
jecxz
xor
popa
xorl
fiaddl
xlat
mov
jne
lods
mov
cs
shrb
mov
negb
lret
jb
inc
mov
xchg
xchg
cmp
or
addb
je
loope
push
add
insl
mov
fdivrs
adc
lds
lock
add
mov
flds
lret
push
dec
fcomip
dec
push
jmp
mov
sub
es
xor
lcall
or
mov
popa
push
sub
mov
aad
outsl
sti
xlat
in
lods
xchg
testl
push
icebp
mov
fisubs
movsl
pop
decl
mov
adc
aad
fcoml
sub
loope
es
in
jnp
lcall
ret
mov
loope
ss
jmp
scas
das
xchg
pop
pop
fisttpll
ss
adc
cmpl
push
aas
shrb
jne
sahf
mov
sti
std
push
xchg
push
jo
ret
mov
dec
xor
cmpsl
scas
jnp
daa
imul
jl
imulb
push
push
popa
cmp
arpl
mov
sub
mov
ja
push
mov
jl
loope
lret
nop
dec
mov
pop
lods
dec
fwait
insl
das
pushf
dec
pop
xchg
lret
pop
dec
scas
movsb
xchg
inc
fistpl
dec
hlt
jle
lds
ss
fwait
and
and
notb
cmp
rorl
bound
rcrb
lcall
rcll
adc
movsb
mov
cmp
jmp
sarl
or
and
jl
daa
inc
in
cmp
inc
out
adc
in
cs
std
aaa
scas
push
lock
cmpsb
test
inc
pop
sbbb
arpl
adc
je
inc
sbb
push
stos
ja
or
xor
insb
fs
inc
ret
add
into
sbb
test
mov
adc
fwait
sti
ret
and
pushf
push
scas
insl
push
fisttpll
xchg
cmp
inc
mov
mov
xchg
push
out
cld
ljmp
xchg
xor
inc
adc
lcall
mov
sbb
loope
cmp
add
sub
or
call
aas
imul
mov
cmc
push
fadds
sbb
fidivs
and
or
rolb
jge
rcrb
jecxz
in
inc
dec
das
xchg
push
sub
add
inc
xchg
and
jmp
sub
mov
cwtl
lret
cmp
xlat
mov
and
fwait
mov
clc
shlb
or
mov
inc
shlb
mov
add
jge
mov
aas
pusha
aaa
fnstsw
mov
mov
cmp
in
in
iret
rcrb
mov
jge
xorl
loop
je
jo
jbe
xchg
popa
push
jae
loope
mov
inc
xlat
adc
push
sbb
js
add
mov
pop
xor
sub
frstor
fwait
xor
sbb
adc
flds
addr16
orl
int
pop
jl
rcl
cwtl
push
mov
icebp
add
fmuls
xchg
shrl
roll
not
push
mov
or
imul
je
mov
mov
sub
jle
adc
fnstcw
call
in
add
sbb
mov
sub
loop
sbb
and
adc
cmp
dec
mov
into
xchg
jns
xor
cmp
js
and
out
test
div
test
add
mov
popa
imul
mov
ss
int
mov
jno
push
fs
jo
add
jle
pop
xor
das
sub
inc
test
fistps
mov
mov
pop
repnz
lret
and
insl
mov
mov
or
jne
mov
cmp
pop
push
mov
lahf
ljmp
sub
test
add
lcall
jb
xchg
mov
stc
pop
outsl
bound
pop
movsl
cwtl
aad
sbb
xor
cmp
mov
sbb
xlat
jp
add
pop
nop
mov
sahf
dec
sbb
dec
pand
out
inc
push
sbb
ljmp
js
jbe
or
dec
ds
sub
lea
scas
mov
outsb
loope
inc
mov
fwait
xchg
ss
mov
pop
gs
add
ds
outsl
jb
dec
sub
cmp
negb
push
ja
loop
adc
fwait
aad
rorl
inc
cli
sbb
rolb
push
arpl
in
or
mov
xchg
cmp
pushf
aad
mov
nop
mov
jl
sbb
mov
dec
inc
outsl
pop
jl
aad
add
adc
jae
xlat
dec
xor
sbb
daa
and
mov
xor
je
rorb
pop
mov
movzbl
pop
in
jbe
xor
cmp
std
cmp
jnp
mov
das
nop
outsl
sti
mov
lret
out
cmpsl
cmp
test
sahf
hlt
mov
mov
sti
pop
pop
in
aad
stos
mov
mov
cmp
cmpsl
add
mov
xor
adc
stos
in
cmp
fdiv
xchg
sti
dec
sbb
mov
xor
frstor
pop
sar
or
call
dec
dec
mov
outsb
xlat
mov
cmp
loope
cwtl
ss
sar
test
or
ror
lods
bound
sub
mov
das
and
inc
or
sbb
out
jmp
sub
daa
or
andb
cmc
cmp
jge
inc
xchg
fcmovnu
adc
lahf
scas
int3
xchg
inc
adc
or
push
xchg
add
loopne
das
pop
fisubs
push
mov
into
and
ret
loop
sbb
mov
in
sub
arpl
dec
mov
aam
mov
cli
je
mov
ret
dec
pop
aam
add
addr16
cmp
mov
insb
dec
scas
cld
jp
shll
mov
lock
pop
filds
mov
sarl
jl
push
call
push
fwait
sahf
mov
sub
add
push
cmp
jne
inc
push
sbb
inc
sub
scas
sub
mov
add
or
cmp
add
daa
data16
adc
out
shll
xor
imul
mov
mov
fld
jp
loop,pn
fcomp
adc
push
dec
data16
mov
mov
roll
mov
aaa
inc
inc
insb
fcmovnb
das
and
mov
cmp
sti
jns,pt
js
sub
sbb
and
pop
or
lock
jne
loopne
inc
mov
mov
add
xor
in
in
scas
rcl
ret
outsl
jge
cmp
jmp
mulw
pop
arpl
add
cmp
push
cmpsb
int3
cs
sbb
and
ret
sub
gs
or
jnp
xchg
in
fcmovnbe
adc
out
sbb
inc
outsl
insb
arpl
sbb
out
and
adc
pop
je
mov
adc
and
sbb
add
in
gs
jne
push
fcmove
sub
notl
lock
cmp
or
mov
aam
ret
pop
add
mov
add
insb
adc
cmp
rcl
mov
clc
adc
ds
jae
dec
pusha
and
pop
mov
push
mov
int3
cmpsb
ja
jmp
add
xchg
jno
fsubr
jns
mov
mov
push
xor
sbb
xchg
or
test
sub
inc
mov
pop
and
pop
or
fnsave
shl
fcomp
mov
fsubr
jp
mov
fcmovu
push
inc
insb
mov
rorb
stos
push
and
xchg
js
rorl
aas
jp
dec
popa
movsl
sbb
aam
and
outsb
sub
pop
mov
out
jb
call
loope
rcr
jbe
mov
out
int3
jl
xchg
pop
call
int
aaa
nop
mov
mov
jnp
inc
insl
andb
scas
shlb
mov
add
cmp
xchg
dec
adc
ret
bound
pushf
ds
push
xchg
stos
cli
insl
sbb
aas
push
cmc
pop
aam
mov
pop
xchg
cmp
jne
cmpb
pushf
or
mov
outsb
xor
sub
imul
pop
ror
pop
pop
imul
push
loopne
push
mov
add
jmp
adc
and
hlt
gs
xchg
mov
mov
mov
roll
xchg
jmp
cmp
sbb
mov
pop
leave
jecxz
lea
mov
dec
push
iret
mov
outsl
cltd
test
in
loopne
mov
repnz
cmp
dec
cmp
loop
sbb
rorl
xor
push
cld
dec
sub
inc
arpl
iret
mov
mov
dec
sub
inc
divl
xor
dec
push
cmpl
xor
pushf
push
cmp
pop
or
sahf
fucomip
pop
push
out
aam
xlat
cmp
cmpsl
mov
addr16
xchg
xchg
dec
adcb
add
lock
idivl
inc
ja
jmp
aad
clc
pop
xchg
lock
xchg
pop
ss
dec
mov
rcr
jmp
test
pop
ja
ret
mov
sti
int3
and
mov
xor
scas
push
mov
adc
cmp
jbe
cltd
insl
popa
xlat
jne
cltd
mov
cmp
aas
pop
movl
insl
leave
lods
loope
hlt
pusha
jge
lret
inc
aad
sbb
aam
adc
mov
and
jge
xor
mov
mov
aad
inc
xor
adc
dec
icebp
adc
jle
scas
call
fs
shl
jmp
xor
cmpsl
jl
dec
lahf
sbb
xchg
mov
xchg
idivb
scas
xor
stc
xlat
rcrb
mov
mov
hlt
cld
sub
jb
pop
in
mov
mov
jb
xchg
ss
test
cmp
int3
xchg
aam
lock
stc
cmp
mov
popf
les
roll
mov
iret
out
arpl
jmp
mov
lock
test
pop
inc
test
and
cmp
ja
int
ja
rorl
jge
shrl
out
clc
adc
and
adc
jbe
imul
jno
imul
mov
push
dec
mov
sbb
mov
out
jge
mov
movsl
imul
mov
imul
cmpsl
fildl
ret
push
xchg
insl
xchg
cmc
icebp
aam
inc
or
pop
rolb
mov
adc
inc
cmp
in
cmp
push
test
ret
dec
aam
cmp
cli
fiadds
jne
inc
mov
mov
ds
mov
or
sti
cmp
dec
outsb
lock
xor
adc
adc
push
js
or
fwait
inc
pop
lock
xlat
push
jge
lds
add
insb
mov
jmp
decb
lret
pop
adc
fisttpl
stos
cmp
jnp
fstl
dec
iret
dec
test
dec
push
jg
ud1
dec
cmp
unpcklps
mov
inc
lret
xor
insb
dec
or
shrb
mov
pop
sub
add
sbb
into
mov
imul
pop
repnz
or
push
xor
push
mov
and
inc
pop
xchg
cmpsl
pop
ss
rorl
sub
sbb
ret
sub
loop
mov
or
sbbl
scas
sub
aaa
xor
rorb
addr16
mov
rcrl
mov
xor
das
int3
jmp
mov
andb
inc
sarb
popf
mov
insl
sbb
nop
aad
push
inc
xor
mov
mov
lock
in
out
pusha
add
push
sub
outsl
add
inc
fadds
data16
push
mov
add
sub
sarb
mov
xor
push
pop
sbb
mov
cmp
shll
add
mov
sbb
jge
sbb
hlt
sub
iret
xchg
sub
out
pop
aad
push
jge
pop
add
iret
lcall
adc
das
pop
leave
cwtl
lock
dec
xlat
jo
mov
aaa
mov
insb
pusha
jb
mov
jbe
hlt
pop
push
es
xor
mov
adc
bound
insb
jo
jo
or
cli
fstpt
shrb
cmp
inc
sub
insl
popf
int3
stc
mov
pop
pop
mov
mov
pushf
jp
imul
mov
fcoml
jle
jge
aam
jne
jge
arpl
inc
ret
mov
or
cmpsb
add
push
inc
lea
xor
add
cmp
mov
jmp
in
mov
add
dec
ja
mov
das
js
lcall
add
sub
mov
xchg
sarb
add
cmpsb
scas
int3
pop
push
mov
in
imul
xor
loopne
ret
movl
jne
or
ss
xlat
sub
xor
push
mov
jb
xchg
adc
xchg
or
xchg
pop
cmp
adc
cmpl
pop
jb
xor
call
jne
inc
xor
shlb
push
ffree
add
pop
mov
push
jno
dec
test
stos
adc
add
push
mov
add
cmpsb
mov
add
jo
fimull
in
in
cmpl
dec
jno
dec
xchg
push
cwtl
mov
mov
push
mov
stos
daa
push
pushf
mov
mov
push
push
mov
push
mov
rclb
fdivs
xchg
cmp
xor
out
aam
lea
out
lea
dec
xor
out
adc
outsb
pop
xchg
shl
sti
hlt
and
xchg
lds
sbb
sub
in
cmp
sti
push
repnz
shrb
loop
popa
mov
jbe
jg
pop
out
mov
mov
outsb
sbb
sbb
jnp
jo
out
inc
pop
faddl
adc
or
or
jne
xchg
inc
cmp
outsl
arpl
loopne
xor
je
js
ljmp
sarl
jns
aaa
ret
add
mov
xchg
outsb
push
add
mov
sub
outsb
jge
or
cmp
lahf
sbb
sbb
loope
aad
fs
xor
add
jle
fdivrs
pop
pop
incb
or
ret
mov
nop
sub
fistl
inc
mov
fildl
sbb
leave
dec
leave
mov
jo
lods
repnz
jge
shrl
xor
lock
std
hlt
shlb
inc
and
or
adc
in
scas
mov
fistpl
iret
adc
mov
adc
shll
and
adc
scas
add
mov
leave
xchg
sub
push
aad
sbb
and
rclb
xchg
and
shl
inc
mov
jbe
arpl
jne
and
mov
in
add
cld
outsl
mov
cmp
and
xchg
jl
mov
addr16
adc
loopne
ret
xchg
mov
xor
pop
out
mov
and
mov
jae
sbb
clc
gs
fisubrs
in
push
cs
test
jne
mov
cmp
jno
rcll
xchg
mov
mov
rclb
sbb
rcl
xor
add
mov
dec
lods
mov
or
cmp
or
sti
pop
in
jg
jae
adc
mov
xor
stos
xchg
inc
filds
jae
lcall
push
mov
jg
sbb
push
mov
call
xchg
push
mov
imul
push
pop
cltd
lret
push
cmp
xor
inc
adc
dec
pop
rolb
js
sbb
dec
push
push
cltd
push
xchg
pop
mov
inc
fiadds
std
inc
and
pop
or
jge
xchg
dec
lahf
imul
frstor
mov
sbb
cmp
or
fiadds
fwait
push
push
mov
mov
fldpi
inc
cwtl
sub
jmp
pop
arpl
push
cmc
push
xor
sbb
dec
jns
sbb
add
pop
xchg
mov
jp
jne
sub
je
out
loop
jns
xadd
lea
push
mov
orl
loopne
rolb
orl
fidivl
inc
shlb
ret
hlt
xor
movsb
adc
mov
inc
aaa
push
pop
nop
mov
testb
aaa
pop
leave
mov
negb
lahf
jns
into
add
ffreep
mov
test
cmp
clc
popa
pusha
adc
mov
jmp
fsubp
mov
or
std
mov
pop
fimull
sahf
and
shll
mov
add
jmp
pushf
mov
push
push
dec
jne
jmp
dec
jb
xchg
inc
dec
adc
aad
push
fwait
das
dec
aam
jae
sti
sub
dec
sahf
cmpsb
out
shll
jg
les
pushf
mov
or
outsb
fildl
xchg
sub
xor
fists
or
lods
jbe
cmp
xor
and
jge
fbld
sarb
mov
sbb
sbb
xchg
clc
out
imull
movsb
inc
out
stos
fildl
inc
inc
jmp
mov
cmp
add
fst
sub
jge
xchg
hlt
cltd
pop
mov
push
add
iret
in
pop
cmpsb
xlat
adc
fcmovne
inc
shll
addb
mulb
dec
outsl
call
mov
rcrl
mov
jmp
cmc
push
out
movsb
push
test
mov
pop
bound
clc
sbb
fiaddl
pop
push
pop
in
jge
sarl
dec
sub
scas
or
sbb
mov
popa
sahf
es
add
test
and
lret
shrb
push
fwait
pop
dec
push
lret
pop
push
test
push
out
sub
movb
adc
pop
aam
mov
xchg
dec
test
push
rorb
jo
loop
ja
stc
add
xchg
mov
clc
cmc
jo
stos
dec
mov
pop
mov
les
inc
jg
push
pushf
pop
lret
in
jp
test
and
fcompl
jbe
jle
clc
loop
adc
add
mov
cmp
mov
stos
ja,pn
rcl
in
inc
xchg
mov
and
jle
shlb
cmp
sahf
lods
les
js
add
xchg
jle
and
ret
imul
aas
lock
popf
push
imul
and
mov
aam
cmp
jge
in
pop
in
ret
call
push
mov
mov
and
xor
cwtl
add
xor
dec
mov
pop
and
out
and
jb
mov
ret
insl
adc
movsb
and
fsubp
fildll
cmp
sub
mov
arpl
xor
inc
mov
or
insb
or
mov
fidivs
mov
lret
adc
inc
mov
add
jp
jmp
ret
adc
cmp
jno
movsb
inc
test
or
fsubl
icebp
ror
in
arpl
rorb
jl
int3
sahf
cltd
xor
leave
shll
lock
leave
out
mov
scas
mov
xchg
xchg
sub
clc
jae
fcom
push
orl
dec
cmpsl
popf
cwtl
dec
insb
popf
aam
xlat
scas
xor
xchg
mov
pop
cmc
jb
scas
sarl
fldl
int
cltd
ja
scas
in
scas
imul
test
divb
xchg
push
xlat
push
aam
jg
push
in
push
outsl
outsb
ljmp
dec
pop
adcl
push
popf
xchg
stos
add
sub
ja
sbb
xchg
inc
sbb
call
or
cmp
test
mov
cli
mov
jmp
jecxz
dec
mov
jle
stos
scas
mov
lcall
ja
jbe
into
and
out
xlat
bound
fnsave
mov
inc
xlat
mov
fst
cmpsl
mov
roll
fistl
and
jno
jo
add
and
jo
mov
jb
imul
fiaddl
ret
xor
shrb
stc
sbbl
mov
xor
dec
ffreep
add
stos
pop
das
dec
mov
adc
mov
icebp
scas
int
dec
addr16
out
jns
mov
and
imulb
and
jge
xor
sbb
mov
and
mov
lods
loop
mov
and
les
outsb
jbe
clc
rolb
xchg
inc
jge
pop
jmp
cmp
jne
sub
aam
cmp
test
fcomps
ds
adc
or
pop
ret
jo
aaa
loope
cmp
adc
inc
adc
notl
cwtl
jmp
mov
jge
pop
cmpsb
jb
leave
into
imul
jle
mov
add
mov
lret
push
cwtl
test
or
jp
int
cmp
mov
sub
dec
mull
pop
mov
into
loop
mov
js
mov
scas
out
popa
popf
orl
inc
insb
and
subb
pop
js
or
mov
sbb
cmp
sbb
jns
push
insb
cmpsb
cwtl
ds
add
xor
add
je
fnstsw
jge
cmp
push
stos
out
push
xchg
add
aad
push
dec
lcall
add
inc
adc
gs
mov
sbb
aad
xchg
ret
push
sahf
xbegin
sar
dec
mov
lock
pop
jle
js
lcall
jb
outsl
pop
jbe
mov
iret
pop
imul
jge
xchg
aad
sub
out
and
mov
adc
arpl
fistl
mov
ja
or
jo
mov
adcl
fildl
test
mov
inc
xchg
sti
ret
cmp
cltd
imulb
icebp
subl
xchg
subl
out
fwait
push
insl
clc
shr
pusha
aas
je
loope
sub
pop
loopne
sbb
sbb
cmp
push
addb
inc
dec
jmp
pop
sbb
or
fisubrl
arpl
jno
xor
and
ret
and
adc
adcb
inc
mov
stc
call
pushf
rorl
jb
jae
sub
or
notl
pop
sbb
adc
push
or
dec
inc
cmp
fldl
in
ljmp
mov
pop
inc
scas
jne
xchg
mov
jbe
mov
mov
ljmp
jge
shll
mov
jno
or
cmc
clc
push
mov
rcl
jns
jbe
out
sti
fistpll
fidivrl
stos
xchg
mov
fyl2xp1
cmp
das
mov
xor
xor
cmp
mov
cmpsb
dec
andb
inc
push
ficompl
mov
in
mov
sub
test
hlt
add
insl
pop
loopne
scas
pop
loope
sub
test
dec
sbb
js
clc
cmpsb
lock
dec
xlat
add
out
sub
loope
pop
rcl
add
xchg
imul
cltd
cmp
hlt
or
gs
out
sbb
or
push
in
sbb
or
icebp
aam
mov
loop
sub
pop
mov
and
ficoms
jno
sbb
shlb
mov
sub
dec
adc
insl
adcb
insl
and
mov
pop
jmp
int3
push
or
push
jg
and
pop
outsb
lahf
test
add
dec
std
xchg
xchg
iret
pop
cmp
mov
mov
push
adc
mov
jne
iret
lahf
jecxz
insl
xchg
cli
data16
mov
jne
inc
sbb
out
dec
icebp
cmp
out
fs
aas
clc
adc
push
repz
cmp
sbb
icebp
mov
test
jmp
iret
sbb
pop
fwait
imul
testl
mov
or
jo
mov
aad
mov
push
in
or
sahf
ss
iret
dec
or
add
daa
sub
lret
call
push
add
sbb
xchg
pop
out
mov
ds
outsl
jns
pop
or
fldl
sub
subl
daa
mov
mov
imul
sbb
pop
mov
daa
sbb
negl
add
mov
test
pop
iret
add
mov
push
sti
cmp
sub
jo
ffreep
cld
xchg
mov
inc
cmp
xchg
addl
dec
mov
loopne
nop
pop
imul
and
insb
fists
mov
cltd
or
sbb
mov
dec
fimuls
mov
fstpt
cmp
fcmovnu
mov
pop
mov
rorb
jne
xchg
fwait
inc
push
je
andb
adc
and
jecxz
cmp
aam
testl
jne
hlt
push
push
or
out
sahf
cmpsl
lods
nop
out
mov
add
lret
jno
sahf
jmp
lods
xchg
mov
cmp
push
or
jg
rcrb
and
adc
xchg
lcall
mov
subl
push
pop
test
pop
or
jmp
sahf
inc
sbb
repnz
je
std
push
push
insl
mov
and
cmpsb
mov
outsl
dec
mov
arpl
mov
and
push
sti
inc
mov
cwtl
mov
std
xchg
jo
test
push
mov
xchg
fiadds
dec
pop
jecxz
std
mov
mov
push
jmp
push
xor
pop
int
cmp
ret
dec
mov
and
ja
and
jbe
xchg
dec
jb
xchg
fwait
add
fsts
lods
add
movsb
jae
add
inc
mov
daa
mov
ret
ret
aas
jb
push
dec
dec
adc
jo
cmp
xor
lods
lea
bndldx
xorb
mov
xor
adc
jmp
mov
icebp
jae
fs
mov
cld
sbb
mov
inc
and
or
rol
ffree
or
sub
dec
xchg
mov
jle
xor
mov
mov
xor
sbb
les
jo
pop
mov
inc
add
inc
lea
cmpsl
sbb
jo
mov
cmpsb
cmp
ret
ret
das
rcr
mov
jle
out
cld
test
adc
push
ret
mov
loop
dec
rcl
jecxz
add
adc
mull
jae
dec
mov
jecxz
xchg
ficomps
jae
inc
in
push
push
cmp
sbb
mov
bswap
out
mov
xchg
aam
sub
rcl
ret
mov
xor
aaa
mov
les
in
aad
movl
push
cmp
mov
arpl
push
adc
iret
sbbl
subb
test
hlt
les
sbb
push
mov
imull
fwait
sahf
lods
daa
mov
int3
mov
mov
xchg
mov
sbb
fimuls
ljmp
stos
in
fwait
and
sbb
ret
sub
sbb
js
sub
insl
push
orl
outsl
scas
and
jne
xor
jne
mov
into
cmc
movsl
adc
mov
cmpsl
mov
insb
ds
pop
mov
or
sbb
and
test
dec
push
sub
sti
fdiv
stos
xchg
pushf
mov
adc
mov
rorb
jnp
aaa
inc
mov
cmp
arpl
pop
dec
cmc
jne
mov
and
sbb
rorl
jmp
mov
dec
adcb
lods
jbe
cwtl
insl
jne
add
mov
sbb
sub
sbb
jae
insb
mov
cmp
or
cs
rol
adc
jno
pop
dec
mov
rclb
aam
mov
daa
push
out
js
les
sub
loop
mov
je
dec
xchg
push
jle
jmp
cmpl
inc
mov
mov
sarb
je
arpl
and
jle
push
jbe
jp
sbb
nop
fcmovu
test
ja
jb
jl
jns
orl
jge
stos
jle
ret
mov
mov
push
push
popf
es
sbb
pop
pop
insl
lahf
xor
mov
or
ja
inc
rorl
insl
mov
out
adc
sub
out
mov
push
data16
mov
ss
pop
cwtl
or
add
divl
movsb
rorl
mov
mov
and
insl
pop
push
shl
push
push
aas
cmp
jle
in
pop
xchg
adc
div
cmp
pusha
fcmovnbe
mov
mov
lods
mov
inc
sbb
rolb
aaa
jbe
push
outsl
ss
nop
outsl
pop
enter
xchg
rep
fimuls
mov
aam
xor
xchg
addb
hlt
pop
mov
push
push
bound
and
rcrb
add
loopne
jge
mov
mov
jl
mov
mov
xchg
lock
mov
adc
pop
daa
push
push
loop
xor
push
or
outsb
pushf
call
scas
add
add
jge
xchg
xor
jnp
adc
and
add
jecxz
mov
cmp
xchg
push
dec
jmp
lods
sbb
insl
xchg
or
test
cmp
fucomp
inc
push
xchg
repz
lods
sti
push
and
add
sub
push
ficomps
jnp
push
test
push
iret
cmp
push
sbb
pop
inc
in
mov
lods
stos
adc
notl
mov
mov
test
lods
insl
mov
lret
xor
leave
add
cmp
dec
repnz
stos
outsb
jle
int3
xchg
mov
sub
dec
scas
mov
icebp
sbb
sti
fs
jmp
jl
lds
push
mov
loopne
add
inc
mov
pop
stos
rorl
lret
fldcw
mov
hlt
jo
mov
sbb
xchg
daa
gs
pop
daa
jmp
mov
cmp
jne
insl
cmp
fidivrl
imul
sub
imul
or
orl
add
mov
cmp
sarl
inc
call
out
pop
icebp
loopne
and
shrb
outsl
orb
cmp
cli
add
lret
xor
add
mov
fidivrl
inc
fcmovnb
mov
pop
jge
dec
inc
imul
add
dec
push
adc
push
mov
cmp
adc
jge
pop
js
jns
leave
movsb
test
mov
xor
imull
pop
push
jg
in
jno,pn
movsb
movsb
outsb
nop
push
jae
test
loopne
push
mov
cmpb
push
ja
es
in
es
mov
xor
les
sub
sbb
pop
mov
or
in
mov
push
sahf
jge
loopne
js
sbb
lcall
jae
notl
out
dec
sbb
jmp
out
popf
mov
mov
fcoms
inc
xchg
xchg
insb
xchg
imull
pop
cmp
add
jne
mov
lods
jecxz
insb
lock
mov
sbb
or
rcr
mov
stos
dec
jl
mov
frstor
or
cmpsl
jo
out
jo
mov
pop
aad
xchg
pusha
inc
arpl
xlat
mov
sbb
push
mov
vpsrad
clc
mov
dec
aas
les
xchg
push
xor
sbbl
cmp
push
aaa
sbb
out
cmp
dec
xchg
repz
push
dec
sub
imul
push
sbb
fldenv
inc
pop
sub
hlt
rcll
jmp
lcall
xchg
mov
adc
shrl
and
mov
or
pop
inc
mov
cmp
sbb
push
mov
punpckldq
popf
mov
jno
aad
repz
mov
cmp
mov
pop
push
add
mov
mov
lock
jecxz
add
test
pop
repz
push
push
adc
arpl
stos
cwtl
sbb
pop
scas
dec
outsl
loop
cmp
xchg
adc
mov
sub
subb
fld
ret
mov
jl
arpl
mov
sub
jle
xchg
lods
mov
insl
ret
outsl
sub
lea
in
aam
ja
push
xchg
test
ljmp
jecxz
loope
loopne
inc
ja
push
ljmp
dec
out
js
lcall
push
addb
mov
mov
jbe
fnsave
inc
adc
pop
push
push
enter
fsubrs
sbb
sbb
or
jle
out
outsl
xchg
pop
jo
push
or
push
arpl
pop
fdivrl
pop
fnstcw
clc
ret
cmp
ds
sarl
aaa
pushf
cmc
outsl
inc
dec
mov
dec
mov
in
or
inc
mov
out
stos
xchg
dec
sub
and
stos
or
cmp
pop
ret
mov
in
adc
cli
scas
push
loopne
in
shll
inc
fwait
mul
inc
cmpl
push
pop
xchg
add
je
sub
mov
mov
cmpsl
jnp
xor
lea
add
sbb
cmp
insl
push
adc
sti
fldl
mov
fdivr
fisubl
outsl
push
js
ficompl
scas
cmpsb
arpl
xor
push
repnz
imul
mov
std
pop
pop
push
js
js
js
and
cmc
sub
rclb
mov
mov
stos
cmp
sbb
pushf
cwtl
mov
fwait
movsl
fwait
add
ja
mov
mov
imull
push
stos
sbb
jg
imul
sbbl
cmp
test
jecxz
scas
xchg
lock
pop
dec
sti
orb
test
adcl
std
rolb
adc
add
in
or
xor
orb
mov
mov
mov
jo
adc
dec
lock
hlt
mov
sbb
and
out
lds
adc
addr16
inc
icebp
adc
push
movsl
jge
mov
loop
cwtl
int3
bndstx
xlat
xlat
les
and
jmp
dec
push
divl
lods
or
fisubrl
jae
lea
loop
leave
xor
dec
jne
or
cmp
pop
std
testb
gs
xchg
mov
cmp
add
fcoml
jno
fistpll
stos
stos
idivl
jecxz
push
push
mov
sub
jb
adc
add
dec
clc
jnp
pop
pop
pop
sub
je
sbb
inc
std
mov
leave
xor
mov
cmpsl
sub
jl
ss
aam
mov
gs
and
jecxz
sbb
pop
incl
pop
and
add
aad
movsl
xchg
push
dec
jecxz
mov
adc
xchg
stos
lock
pop
xchg
sub
pop
cmp
scas
inc
mov
aaa
das
lock
sbb
lret
sub
add
fimull
push
jb
mov
in
mov
or
hlt
jle
pop
jne
sbb
push
sub
data16
aaa
aas
stos
subl
loope
pop
dec
sbb
xchg
adc
mov
cs
jnp
es
das
ficompl
adc
out
and
cmc
push
dec
enter
jl
sbb
xchg
cmp
mov
push
push
in
xchg
arpl
jmp
add
in
adc
sbb
jge
in
push
fcompl
jmp
sbb
push
sub
jb
xchg
insb
mov
adc
and
rcl
jge
imulb
pop
lock
mov
das
mov
out
xor
push
test
mov
add
std
ja
mov
push
call
add
roll
in
sub
sbb
fisubrl
xor
sub
loop
mov
aas
pop
int3
out
sahf
and
sbb
insb
cmp
outsl
push
or
or
mov
jo
jecxz
out
stos
test
mov
stos
sub
sub
push
fs
xor
repnz
jge
les
dec
sbb
push
mov
adc
pusha
or
jne
cmc
pop
test
pop
xchg
js
sub
lods
popf
push
add
push
ret
xor
cmpl
dec
inc
movsb
pop
cmovg
adc
in
popa
jmp
push
imull
jp
iret
mov
and
fisttps
add
pop
pop
fstpl
out
add
jbe
or
sarl
mov
sub
xor
push
test
add
test
repnz
sub
sub
cmc
loop
dec
in
lds
jns
sub
pop
pop
stos
add
lcall
ljmp
insl
cmpsl
stos
mov
outsl
sti
hlt
mov
insb
imul
loope
out
pop
jp
cltd
jb
insl
pop
std
sub
aas
mov
pop
adc
jecxz
pop
sbb
push
xchg
dec
mov
in
or
cmp
shlb
cmpsl
loop
mov
inc
cmp
fdivr
movsb
mov
mov
mov
xchg
cltd
bound
jle
sbb
stc
lret
test
incb
leave
sahf
push
mov
ficompl
adc
fs
loop
and
cmp
sub
rolb
cltd
dec
sub
cmpsb
pop
cmp
pop
xchg
mov
mov
mov
and
fs
mov
test
push
mov
and
out
imulb
inc
fs
sub
out
shrl
xlat
xlat
ds
in
sbb
push
dec
jns
jae
insl
shll
xor
popf
mov
push
mov
les
mov
cmc
dec
icebp
shl
cmp
pop
pop
movsl
adc
sbb
aas
stos
fstpl
jg
pop
xor
pusha
outsl
mov
push
push
bound
imul
and
add
sbb
and
jo
pop
inc
aam
mov
lcall
mov
xor
stos
jle
insl
ret
mov
in
mov
push
cmp
fldl
sbb
movl
mov
movsb
lcall
and
mov
jo
into
clc
sub
mov
mov
fimuls
sub
arpl
cmp
dec
xchg
jnp
pop
sbb
adc
cmp
dec
push
shlb
push
daa
shrb
addr16
ret
leave
popf
add
add
ret
ja
push
xor
mov
push
popf
push
lds
enter
ret
mov
mov
xor
mov
imul
lds
in
imul
aas
and
out
push
int3
xlat
inc
addr16
mov
lea
lret
cwtl
mov
stos
test
sbb
sbb
mov
int
mov
pop
lock
add
fninit
and
dec
aam
fisubrs
mov
and
push
or
mov
sbb
stc
or
fidivs
cmp
adc
mul
ds
ss
fwait
addl
or
xchg
push
lea
hlt
jmp
roll
sub
xor
push
add
lods
loope
add
imul
idivb
mov
xchg
iret
lcall
mov
data16
fucomi
bound
data16
mov
sti
inc
roll
cli
dec
mov
jno
xchg
pushf
inc
enter
cmpb
pop
jmp
into
in
pushf
lret
leave
icebp
and
xor
push
dec
daa
pop
mov
and
mov
pop
cmp
or
xor
clc
push
push
subb
popf
lea
push
imul
jne
push
xchg
clc
test
xor
cltd
pop
inc
pop
jecxz
mov
dec
mov
mov
mov
repz
mov
shrb
out
and
ret
cs
mov
ficompl
cmpsl
cmpl
adc
loope
xchg
xchg
sbb
inc
pop
lret
mov
cmpb
mov
pop
das
cmp
jmp
cmpsl
aas
fcomps
pop
pop
outsl
sub
fdivl
mov
mov
imul
inc
dec
pop
dec
mov
jmp
cmpsb
xchg
inc
jge
aas
das
mov
cmp
aad
test
arpl
jle
jne
xor
fstl
dec
subl
test
rcr
add
sarb
clc
pop
popa
and
test
es
sti
add
adc
pop
mov
dec
insb
test
adc
sbb
pop
out
pop
xor
out
add
pop
cltd
arpl
mov
inc
dec
inc
insl
and
fwait
xchg
jo
cmp
pop
adc
jg
pop
mov
mov
in
popa
test
add
pop
pop
or
mov
ja
call
xchg
jge
dec
enter
jl
ljmp
stc
ficoml
loope
out
sbb
es
mov
xchg
xchg
push
xlat
mov
sub
das
jmp
jno
pop
cld
movsl
push
je
sub
sub
pop
loopne
or
icebp
push
addr16
jo
test
setle
fldt
cmpsb
mov
sbb
pop
sub
sar
rcrl
push
enter
push
cltd
stos
mov
dec
pop
dec
in
adc
pop
mov
lock
sti
and
xadd
and
jecxz
insb
addr16
mov
icebp
shll
inc
mov
stos
fcoml
out
mov
dec
arpl
xor
jo
and
fidivrl
ss
jne
pop
inc
adc
leave
add
outsb
in
jl
sub
nop
mov
ljmp
cmp
addr16
mov
push
dec
sub
jo
adc
xchg
shll
sub
popa
mov
scas
adc
loop
loop
cli
mov
cld
test
cmpsb
fildl
add
aam
scas
mov
xlat
xchg
sub
std
ljmp
je
js
pop
lods
aam
arpl
sub
dec
out
mov
xchg
bound
push
dec
jno
popa
xor
jl
or
lret
sarb
push
insb
push
movsl
mov
and
stc
mov
mov
mov
pop
cmp
jle
insb
aaa
hlt
movsb
jl
sub
fnsave
xlat
gs
and
add
xor
ror
bound
dec
lock
push
shrl
dec
mov
popa
jbe
add
mov
arpl
sub
sbb
out
push
jo
mov
jo
inc
or
mov
jbe
cmp
sub
pop
js
pop
push
hlt
mov
sub
popf
ds
fisttpl
jmp
mov
data16
out
jecxz
mov
xchg
xchg
stos
and
mov
jnp
inc
add
in
ljmp
dec
mov
aad
adc
jmp
ret
addr16
cmp
add
sub
orl
pop
sarl
sbb
dec
xor
ss
pop
jl
sub
sbb
in
fstp
bswap
pop
out
mov
pop
sub
sti
cmp
sarl
in
ret
and
mov
add
pop
add
add
push
push
ret
ja
xor
lcall
ficomps
add
sub
xchg
inc
es
xlat
jmp
lock
enter
adcb
xlat
lds
xchg
cli
or
adc
cwtl
loope
mov
scas
jecxz
mov
shrb
iret
ds
inc
mov
test
das
mov
fbld
push
and
gs
aad
pop
outsl
arpl
ja
mov
pop
hlt
mov
sbb
iret
std
test
out
in
testl
dec
sbb
out
fcomi
lds
ds
clc
jbe
dec
andb
not
sahf
aaa
mov
pop
add
cmp
fidivl
sbbl
mov
mov
fcompl
loope
rorl
ret
sub
fistps
mov
pop
ljmp
ja
div
arpl
jg
pop
leave
dec
inc
sbb
add
sbb
adc
fmuls
jge
leave
push
push
pop
adc
and
fstl
mov
cwtl
adc
mov
sbb
imul
shlb
mov
inc
cld
push
shrl
lods
pop
arpl
sbb
and
mov
iret
lods
lea
outsb
stos
sar
mov
push
gs
int
fcmovbe
mov
jg
cwtl
mov
cmpsb
test
scas
mov
dec
mov
xchg
mov
dec
test
pushf
cli
stos
or
lds
push
fwait
sbb
mov
xor
ja
mov
pop
loope
mov
pop
jne
mov
push
sub
xor
mov
out
sub
sbb
stos
ret
jne
cmp
loopne
dec
pop
cmp
lods
xchg
sub
addr16
shll
xchg
test
push
add
mov
nop
fildll
js
hlt
xor
js
test
jo
pop
notl
fwait
jecxz
dec
loopne
sub
sbb
mov
icebp
mov
sub
mov
mov
adc
imull
dec
bnd
js
out
arpl
hlt
test
ror
mov
rcrb
lock
lock
mov
es
and
and
xor
rep
sub
pushf
mov
je
pop
jecxz
test
mov
setl
dec
mov
add
pop
shll
cmp
scas
jg
jg
test
aad
jg
mov
jle
mov
ss
push
subl
int
ja
lds
mov
fisubl
mov
cmp
pop
mov
insl
mov
in
mov
xchg
jne
sub
inc
mov
mov
inc
sbb
pop
xor
sbb
add
lret
push
hlt
mov
or
lods
jg
jo
sbb
enter
or
arpl
xchg
movsl
popa
mov
jmp
je
inc
fcmovnu
cmp
pop
daa
jnp
movsb
mov
jnp
add
cmp
ret
or
mov
sahf
hlt
inc
cmp
pop
xlat
or
dec
mov
jge
sbb
mov
mov
sub
push
sbb
or
test
ror
mov
cmp
rclb
push
push
or
sbb
jp
xchg
cmc
sub
adc
stos
js
and
mov
stos
sbb
lods
jae
jle
add
mov
mov
sub
xor
hlt
or
int
cmc
mov
jle
pop
lock
cmc
mov
fldl2e
pusha
cmp
xchg
cmp
das
pop
jp
mov
xor
leave
addr16
pop
popa
dec
and
js
icebp
pushf
lret
inc
outsb
push
fiaddl
aaa
mov
inc
pop
imul
sbb
mov
adc
subl
scas
xlat
in
mov
jns
sbb
xchg
arpl
into
inc
pop
or
push
jmp
lods
jmp
adc
mov
mov
pop
imul
fcoms
pop
negl
fcmovbe
rol
imul
fcmovu
push
mov
cs
js
cmp
test
adc
shl
mov
loop
fadd
xchg
sti
cmc
dec
outsl
mov
adc
or
add
mov
scas
lcall
or
shlb
or
mov
mov
ljmp
pop
jle
mov
xlat
xchg
jne
fadd
xchg
cs
pop
aas
lea
outsl
repz
das
icebp
fwait
jp
clc
cmp
or
aad
cmp
outsb
cli
dec
sub
or
jae
das
mov
sarl
push
test
and
jl
jp
jmp
add
faddl
arpl
cmp
sti
rorb
xchg
lods
ret
je
and
ret
dec
aam
ss
cmp
in
xor
jb
bnd
and
push
cmp
sub
mov
mov
leave
pop
or
out
sub
ss
repz
repnz
add
ja
dec
add
xor
jnp
mov
or
scas
jecxz
dec
xchg
sub
inc
sbb
mov
adc
ficomps
stc
repnz
sub
loop
out
pop
sbb
ss
push
and
andl
xor
push
sahf
lock
fidivrs
dec
jo
jge
inc
repnz
fadds
add
sbb
ss
push
jecxz
jecxz
jne
fs
pop
stos
int
into
or
cmpsl
jg
cmp
call
jp
sti
clc
mov
in
jb
xchg
aas
cltd
adc
es
inc
iret
leave
mul
cli
inc
mov
shlb
fisttpl
ret
adc
and
and
push
cwtl
ret
inc
inc
sbb
push
push
jno
push
push
sub
dec
mov
jmp
mov
push
cmp
test
add
outsl
mov
lcall
push
leave
sbb
sub
insb
mov
cli
jns
aas
inc
sbb
mov
mov
pop
out
ja
adc
lret
xchg
popa
cmpsb
ss
ja
in
mov
cmp
jmp
xor
scas
sbb
xchg
jp
jmp
pop
fstpl
leave
shl
lods
sbb
jne
add
add
mov
pop
lods
inc
cmp
adc
test
mull
dec
fimull
sbb
test
jmp
xchg
negb
mov
xorl
in
lcall
frstor
bound
mov
xchg
gs
ud0
fldcw
stos
sti
out
mov
cld
jne
xor
xor
scas
and
mov
daa
or
jecxz
cmp
popa
in
jl
jge
sub
jg
int3
fmul
lods
ja
sub
sbb
lcall
sbb
mov
mov
sub
mov
push
adc
cmp
jecxz
das
mov
or
sub
cmp
int3
mov
aas
inc
std
fisttpll
cld
decb
ljmp
mov
adc
lods
cmp
hlt
mov
pop
lock
jno
inc
adc
sub
cmp
sub
in
dec
sti
inc
jl
push
fisubrs
jp
pushf
and
lds
jle
scas
sbb
sub
add
adc
mov
out
cmp
shll
dec
and
fwait
xor
xor
bound
outsb
clc
push
mov
shrb
stos
daa
shl
imul
dec
sbb
jp
lret
std
pop
pop
test
out
call
cmp
xlat
out
dec
sub
aaa
mov
push
push
and
sub
mov
hlt
jb
out
hlt
and
mov
movsb
xchg
push
add
fistps
add
paddsb
push
call
loop
dec
sub
ret
xor
sub
jecxz
roll
mov
aad
jge
sub
push
int
mov
mov
mov
mov
cmp
popa
push
fildll
pop
arpl
ss
in
cmpb
into
jno
mov
sub
nop
data16
cs
inc
sbb
and
sbb
cmp
ljmp
arpl
xlat
rcrl
inc
inc
push
push
sub
adc
mov
insb
jbe
call
arpl
in
data16
popf
push
xor
cmpsb
aaa
cmp
sbb
pop
push
jge
arpl
lock
pop
bound
adc
dec
adc
js
xchg
mov
adc
fadd
lock
add
lds
ret
outsl
add
or
push
outsb
cmp
xchg
lcall
call
and
je
cmc
or
sub
outsb
pop
rcll
int3
lea
aas
push
ret
or
and
or
sahf
or
loop
or
jmp
andl
dec
mov
lcall
inc
dec
adc
dec
mov
loop
push
xor
sub
loop
das
outsl
loopne
aas
fisubrs
jne
cli
shll
and
xchg
clc
cltd
into
insl
push
add
cmc
inc
mov
xor
jnp
imul
std
cmp
enter
dec
add
andb
insl
mov
cmpl
fisubrl
mov
out
push
add
dec
push
lea
clc
and
hlt
mov
mov
ja
sbb
roll
mov
pusha
mov
out
jno
imul
mov
aas
lcall
mov
xor
xor
xchg
fisttpl
jae
sub
jo
sbb
in
mov
xchg
mov
orl
pop
jg
or
push
inc
ret
jle
ret
rcl
mov
pop
inc
divl
mov
rorb
mov
dec
les
push
cmp
add
roll
fsubrs
xchg
add
rclb
stos
add
lret
ja
adc
pop
mov
gs
inc
mov
fisttpl
jbe
mov
xor
hlt
and
cmc
hlt
imul
vmovaps
out
inc
or
stos
jle
jne
xlat
test
jns
cmp
mov
mov
mov
jp
dec
jb
out
popa
ret
sbb
push
lods
pop
icebp
shl
and
in
lret
movaps
add
lcall
inc
divl
das
sub
pop
inc
call
test
jbe
imul
out
dec
xor
pop
cmp
sbb
pop
sbb
ds
push
cmp
testb
xchg
dec
push
test
mov
mov
stos
loop
std
std
and
mov
lcall
scas
add
aad
rclb
lcall
cwtl
xchg
pop
mov
movaps
xchg
fdiv
sbbl
pop
outsb
mov
icebp
jmp
sub
ljmp
fadds
ljmp
lret
push
xchg
cltd
out
sub
mov
out
or
mov
inc
enter
pop
jns
xor
sarl
inc
pop
sub
lahf
dec
dec
or
adc
cmp
sub
xor
mov
jnp
les
mov
dec
fsubrs
cmp
loop
loopne
or
mov
je
lds
dec
sub
adc
popf
push
sbb
jbe
and
xchg
cmc
pop
push
push
mov
lret
inc
xchg
ret
mov
xlat
popf
xor
sbb
cmpsl
stos
push
les
hlt
sub
dec
in
ja
paddsb
inc
scas
sbbl
shl
mov
sub
out
jo
dec
jno
fs
pop
inc
dec
xor
fbstp
icebp
or
sub
xor
enter
ljmp
aam
pop
adcb
mov
pushf
scas
into
scas
mov
in
or
dec
lock
pop
std
or
add
iret
pop
or
jmp
rcr
jb
add
cld
cmp
fnsave
inc
fbstp
imul
mov
ds
addr16
bound
jge
mov
out
pop
mov
jmp
das
shll
repnz
fstpl
xor
flds
outsl
jge
sbb
xor
je
lea
mov
jp
mov
outsb
and
cltd
es
and
lock
and
sub
ljmp
mov
cmpsb
es
stos
fstpl
mov
lea
ds
movl
cld
cmp
daa
inc
adc
push
mov
jno
xchg
aas
stos
pop
ss
shl
xchg
mov
ret
icebp
pop
in
lcall
or
xlat
fsts
pushf
xor
jb
imulb
push
push
bound
jge
add
xchg
jle
adc
sub
outsb
mov
mov
jno
jns
orl
pop
scas
cwtl
repz
xor
in
call
mov
push
int3
fstpt
xor
push
or
add
ss
cmp
inc
minps
stc
or
sar
xchg
add
mov
add
mov
cwtd
sti
jne
jae
jl
or
call
sti
movsl
dec
jne
movsl
adc
add
pop
sub
mov
inc
cmc
mov
jmp
push
mov
inc
gs
mov
das
ja
pop
xchg
jecxz
mov
fildl
inc
sbb
mov
imul
inc
mov
dec
cmp
sub
clc
sbb
pusha
in
and
loop
fdivrl
adc
in
mov
and
addr16
xchg
jmp
sub
and
lea
cmc
jge
rorl
jmp
jnp
mov
nop
xchg
je
adc
addr16
pop
cmc
cmp
hlt
cmpsl
sahf
cmp
ljmp
pop
pop
rorl
and
scas
aaa
xor
and
mov
scas
sub
popf
mov
mov
js
les
push
test
lcall
xorl
adc
jg
fs
shr
in
or
hlt
dec
lock
jge
rolb
scas
ja
inc
cmc
push
imulb
xor
inc
ja
and
loopne
bound
outsb
lods
ljmp
adc
out
mov
inc
cmp
sti
or
xsaves
icebp
add
fnsave
cmp
sub
sti
cmpsl
push
mov
xchg
fstps
cmpl
mov
fs
xor
pop
inc
loopne
mov
icebp
xchg
pop
fidivrs
dec
outsl
adc
lds
fnsave
out
push
push
orl
pop
or
dec
lock
dec
fdivrl
add
mov
cmp
aam
std
xor
push
adc
mov
arpl
inc
jno
bsr
xor
ffreep
jmp
sbb
shrb
ret
subb
aad
aaa
test
in
or
sahf
pop
sbb
iret
pop
jle
sub
mov
cltd
bound
stos
add
push
push
cli
lods
dec
add
jne
xlat
push
mov
xor
cmp
jge
insb
loop
loope
jbe
repz
movsb
sub
or
es
arpl
sbb
push
and
inc
movsl
adc
arpl
lea
pop
je
rcrl
jns
pop
xchg
dec
out
je,pt
sbb
fildll
sub
mov
sub
lcall
inc
lret
dec
sub
cmp
or
sbb
nop
pop
push
in
fsubrs
mov
roll
mov
mov
mov
andl
aad
loopne
pop
jmp
fdivl
mov
lods
stc
mov
jo
inc
inc
mov
outsl
jmp
rol
fistpl
arpl
mov
or
outsl
jg
popf
inc
mov
mov
jnp
dec
popl
roll
or
mov
sub
xor
mov
outsl
fwait
mov
mov
out
mov
fwait
cmp
inc
loope
cmp
inc
cs
jg
lods
jmp
mov
in
mov
mov
cmp
outsb
repz
xchg
mov
fcmovbe
cltd
subb
pop
sbb
outsb
ja
punpcklwd
push
xchg
sbb
not
into
inc
int3
cmp
nopl
sbb
neg
pop
arpl
scas
ds
jmp
cmp
jl
call
hlt
arpl
div
insl
pusha
cmpsb
divl
loopne
aam
push
pop
mov
fbstp
push
sub
pop
out
insl
jmp
out
cmp
fstl
roll
cmp
addr16
inc
outsl
push
add
sti
jge
mov
mov
cmc
cmp
or
scas
jmp
shlb
outsl
mov
mov
fildl
jmp
fwait
and
call
cmp
xor
aaa
lods
pop
push
sub
jnp
pop
je
jae
cmp
arpl
mov
mov
jne
std
xchg
sub
out
xor
sbb
lret
ja
je
les
faddl
in
arpl
dec
pop
push
jg
mov
pop
cmp
xchg
mov
divb
aas
mov
jne
out
mov
mov
ljmp
and
add
inc
mov
ss
xchg
addr16
xlat
int3
fnsave
adc
in
mov
es
sti
xchg
lret
pop
fbld
cmc
cmp
cmpb
pop
repz
fildll
adc
inc
aaa
divb
mov
ja
dec
shrb
stos
cmp
mov
icebp
mov
outsb
ret
mov
or
outsl
subl
hlt
inc
and
fstpl
xchg
bndstx
mov
je
insb
mov
jae
outsb
mov
and
arpl
outsl
pop
pop
popa
mov
or
mov
jl
filds
pop
pop
adc
fstpt
jae
mov
push
pop
rep
notl
fnsave
cmp
add
js
arpl
lret
ja
cmp
jle
insb
outsl
dec
out
push
mov
stos
das
movsb
and
pop
and
dec
icebp
xor
jmp
push
bound
mov
jbe
mov
mov
imul
cmp
arpl
dec
bound
aam
fldl
and
cmp
xchg
pop
cmp
sub
mov
xchg
mov
ret
out
lret
sub
adc
adc
xchg
outsl
mov
jecxz
sbb
fsubs
rclb
mov
cmp
sub
sub
imul
mov
mov
and
jle
inc
jge
xchg
xor
push
inc
popf
jmp
js
inc
and
loop
xchg
insl
sti
mov
dec
mov
test
and
push
dec
cmpsb
adc
in
das
outsb
push
sbb
lea
das
dec
insb
cmp
subb
xor
insl
jo
dec
stos
arpl
xor
lock
mov
mov
iret
int
out
xor
flds
or
out
mov
test
sbb
pop
sbb
push
test
es
sbb
ljmp
cwtl
push
inc
rcr
ss
or
mov
xor
movsb
dec
push
imul
jno
push
inc
xchg
pop
movsl
sub
aam
add
inc
mov
jmp
fwait
push
pop
xchg
add
and
arpl
cmp
sub
mov
mov
and
cmp
push
push
out
rorb
lret
movl
dec
xor
and
sbb
test
jo
in
pop
mov
add
pop
push
or
std
ss
aaa
dec
lods
adc
xchg
outsl
movsl
pop
stos
call
fcomi
cwtl
ret
call
sahf
aaa
push
pop
add
fsubrs
arpl
cmp
out
shlb
outsl
mov
jne
orb
call
push
out
scas
add
dec
ja
stos
pusha
jmp
ret
lea
mov
inc
sbbl
fldl
repnz
aas
inc
dec
cmc
je
mov
mov
sub
aaa
xchg
insl
sub
daa
insl
sbb
pushf
jnp
in
pop
jg
idiv
daa
jle
cli
loope
jp
or
pop
sbb
jbe
pop
insl
jle
out
incl
shl
xchg
add
arpl
cmp
ja
inc
pop
jbe
xchg
out
mov
xor
mov
sbb
xor
cmp
push
aas
outsl
or
pop
dec
mov
dec
aaa
retw
sub
testb
add
sbb
out
lret
faddl
adc
sbb
into
rcll
aas
ja
outsl
sub
and
dec
sbb
add
bound
inc
jno
cmpsl
mulb
outsl
lret
inc
or
test
push
or
mov
fildll
pop
push
or
cmovge
or
std
pushf
loop
jg
out
clc
bound
loope
jb
mov
xlat
leave
rcl
mov
cmc
leave
addr16
push
idiv
lea
push
mov
imul
popf
imul
and
inc
je
dec
pop
enter
call
psubd
mov
ret
jp
jge
fists
xor
cmp
cmp
sbb
ret
daa
and
push
data16
sbb
jmp
mov
ret
rcr
sahf
sbb
jno
imul
pop
jmp
sub
sub
cmc
outsb
fisubrs
bound
ja
sub
imul
mov
mov
shl
mov
outsl
das
clc
push
repz
xchg
loope
pop
daa
test
xlat
push
daa
mov
ljmp
dec
movsb
jnp
pop
inc
cmpsw
loopne
arpl
fbstp
mov
inc
sbb
dec
movsb
cmp
lods
jae
and
sti
inc
in
rolb
outsb
movsl
stos
jbe
mov
push
xchg
or
pop
test
sti
jl
mov
pop
cmpsl
adc
sub
in
push
les
add
and
std
fidivrs
push
stos
xchg
ljmp
mov
xchg
pop
fisubrl
sti
cmp
or
jp
push
daa
inc
add
add
inc
lcall
or
pop
xlat
xchg
cmp
mov
mov
adc
inc
or
icebp
and
outsl
push
mov
stc
pop
mov
dec
adc
test
out
rorb
pop
jmp
out
pop
loope
inc
dec
jmp
ret
loope
jge
imul
cmp
sti
inc
aam
and
xchg
or
aaa
or
mov
fstl
cmpsb
or
sbb
push
int
test
das
jb
lock
inc
daa
cmp
js
repnz
outsl
daa
insb
add
or
arpl
cmp
testl
or
lea
mov
and
fildll
loop
push
mov
clc
mov
imul
in
ljmp
mov
adc
ret
addr16
push
cmp
int3
pop
shr
add
cltd
loopne
jmp
sbb
clc
cmp
std
out
out
call
pop
lods
and
loopne
ds
or
fmuls
popa
loop
ds
push
pusha
jl
mov
icebp
outsb
lcall
icebp
inc
inc
jnp
pop
pop
sbb
cmovns
mov
mov
pop
sbb
inc
pop
dec
dec
outsl
jle
filds
in
mov
xor
je
xor
jnp
imul
jge
add
xchg
fldl
out
inc
inc
mov
pop
cmp
or
jo
sbb
outsb
jl
aam
or
adc
shll
das
push
dec
test
push
push
jae
gs
ret
out
fidivrs
fwait
xchg
inc
inc
dec
add
inc
jns
add
push
xchg
arpl
adc
int3
leave
jnp
outsl
rorb
out
sbb
dec
inc
pushf
fidivrs
adcl
jge
xor
inc
and
bound
sub
xchg
xchg
ret
imul
lods
decl
es
pop
std
je
aad
bound
stc
jp
fisubl
cmpb
inc
insb
iret
dec
push
sbb
xor
mov
push
jns
lahf
jnp,pt
cmp
cs
mov
shll
jnp
fdivr
lea
and
subb
dec
inc
loope
xchg
jbe
jo
aam
mov
jge
mov
das
jle
cmp
arpl
nop
mov
ret
jg
cmp
and
pop
fildl
pusha
pop
rep
mov
fcoms
pop
pop
aas
cmp
fcomi
cmpsb
out
loop
sbb
je
bnd
in
mov
jmp
jne
dec
mov
sub
mov
aaa
mov
dec
xorl
fnstcw
inc
cmp
insl
aad
mov
daa
push
out
jno
int3
lcall
call
scas
or
push
sub
and
xchg
adc
fiadds
adc
bndstx
dec
cmp
aas
xlat
mov
inc
mov
andl
popf
lea
cld
flds
pop
pop
pusha
add
aas
loop
mov
mov
push
mov
sbb
jnp
push
lea
cmp
mov
mov
insl
push
jmp
push
push
fiaddl
lods
shrl
inc
fcomps
es
sub
out
imul
cmp
out
or
idivl
push
cmp
insl
lcall
fdivrl
jnp
pop
jns
roll
lea
cmp
mov
xor
mov
jne
jnp
push
jnp
lds
int3
cltd
mov
sbb
mov
lea
jae
scas
mov
cli
lret
ds
je
sbb
repnz
add
jmp
inc
mov
dec
push
divl
sub
jl
pop
orl
es
mov
and
inc
mov
or
add
and
xchg
xchg
or
inc
sbb
in
push
dec
jnp
and
pop
or
mov
mov
into
insl
inc
ret
add
mov
sub
or
ficompl
cwtl
movd
push
fptan
jae
lcall
mov
fstpt
inc
mov
cmp
cmp
imul
mov
inc
cmc
shl
sub
xor
mulb
rclb
push
mov
lds
insb
jge
in
pop
iret
fcoml
sub
icebp
xchg
sbb
sub
or
addr16
and
jmp
imul
mov
pushf
xor
fdivrp
clc
mov
mov
aaa
sbb
xor
imul
call
dec
sub
adc
addr16
imul
bound
inc
outsl
sahf
jnp
jmp
jge
scas
in
adc
enter
test
adc
inc
and
cwtl
addr16
xor
jnp
xor
pop
loop
idiv
jge
sbb
or
mov
adc
adc
add
inc
mov
xchg
inc
insl
out
sub
imul
jne
dec
push
push
sti
in
scas
sysret
cli
sbb
in
ds
adc
ficoms
cmp
insl
lret
lock
xchg
imul
pop
ficoms
mov
imul
add
scas
orb
hlt
rcll
xchg
pop
jmp
mov
push
mov
or
mov
pop
pop
jl
lcall
mov
imul
dec
aad
xor
sbb
push
fwait
sbb
int
fwait
mov
push
mov
fwait
mov
adc
jp
js
mov
mov
fldt
scas
inc
mov
push
imul
sbb
ja
inc
pusha
imul
movsb
sti
xor
cmpsl
sbb
push
ljmp
cmp
dec
int3
push
lods
mov
or
icebp
loop
and
into
fnsave
insl
roll
jg
fmuls
adcl
xchg
sarb
sti
push
xor
xor
adc
mov
pop
imul
fsubr
scas
pop
xchg
daa
gs
int
nop
fimull
loop
inc
adc
ds
dec
fldenv
dec
call
dec
add
push
and
mov
aad
inc
roll
sbb
loope
push
cmp
push
test
ss
fs
ljmp
xchg
stos
test
and
pop
cmpsl
clc
or
hlt
jo
push
jge
xor
or
negb
popf
shl
mov
into
ljmp
loop
jle
sub
jg
inc
cltd
xor
lcall
std
mov
shl
xchg
mov
leave
inc
push
test
lds
and
fdivr
push
xor
mov
pop
and
or
cld
jbe
outsl
dec
aaa
mov
popf
or
xchg
mov
mov
add
rorb
es
mov
addb
loop
pop
pop
adc
sbb
jne
dec
inc
cs
and
call
xchg
sbb
and
adc
push
in
arpl
adc
fdiv
fisubrl
data16
dec
cmc
inc
notl
push
mov
enter
popf
cmp
mov
adc
xlat
loop
add
test
or
push
add
adc
in
sub
push
and
movsb
jg
push
in
std
lds
movsl
cmpsl
cmp
cli
pop
and
xor
sbb
lahf
lods
push
push
mov
lds
inc
jns
mov
stos
std
loope
lret
std
test
pop
mov
sbb
pop
das
sub
insb
in
adc
scas
iret
ror
cwtl
add
push
ja
or
or
mov
testl
hlt
out
xor
mov
enter
xchg
sub
or
pop
stos
in
mov
in
push
sub
sbb
add
daa
dec
push
fidivl
frstor
adc
loope
das
push
push
movsb
inc
add
fstpl
push
xchg
cmc
dec
mov
daa
mov
fisttpl
pop
imul
dec
dec
dec
sub
inc
sbb
loope
test
mov
or
scas
shl
int3
inc
dec
jnp
cmc
sub
shll
ljmp
sti
lret
icebp
inc
xor
hlt
repnz
jae,pt
jne
ljmp
mov
jle
test
pop
ljmp
mov
into
push
sub
pop
leave
sub
push
sbb
outsb
sbb
mov
outsb
ja
pop
cmp
jo
sub
pop
hlt
out
mov
cltd
inc
pop
stc
lods
push
or
hlt
pop
cmpsb
fs
iret
sbb
dec
xor
inc
mov
out
dec
xchg
jne
adc
xchg
xor
test
or
fidivrs
mov
js
and
inc
or
popa
mov
test
mov
inc
insb
inc
lahf
sub
push
or
pop
add
mov
testb
adc
jbe
repnz
mov
or
pusha
pop
enter
daa
psubd
jb
mul
jno
add
pop
push
mov
pop
out
inc
cmp
fwait
mov
mov
sub
cs
test
setbe
or
dec
xor
pop
jb
fnstenv
pop
pusha
cmp
cmp
mov
inc
xlat
inc
pop
push
inc
in
mov
or
cmp
or
xchg
xchg
sbb
dec
push
push
jnp
nop
pop
enter
mov
popf
lret
insl
sub
cmp
es
addr16
jnp
pop
mov
int3
data16
or
fildll
pop
outsb
das
in
ja
jns
sbb
scas
test
in
test
pop
jb
leave
mov
popf
xchg
and
dec
xchg
fcoms
pop
cltd
or
push
in
test
pop
mov
sbbb
stos
adc
pop
fsub
test
cmp
subl
mov
mov
and
jnp
ret
out
flds
cmp
dec
ret
call
pop
jb
mov
js
das
jnp
leave
or
sbb
int3
jp
sbbb
into
leave
ror
pusha
sbbl
sarl
aam
and
pop
xchg
pop
dec
popa
int
push
sbb
sahf
jne
fcoml
das
fiadds
or
cmp
cmp
dec
fneni(8087
pop
in
xchg
fisttpl
std
or
in
enter
in
in
inc
pop
imulb
and
xchg
or
jmp
xor
cmp
and
test
jp
setb
icebp
in
repnz
hlt
push
lret
pop
repnz
or
out
pop
enter
emms
aaa
mov
pop
add
out
or
adc
adc
pop
fsub
dec
push
repnz
adc
and
fstp
lret
sahf
mull
roll
xchg
jg
mov
pop
das
sub
add
lret
in
xor
xor
push
rolb
push
or
aas
adc
sbb
loopne
in
xchg
int
imul
lret
fsubl
or
jb
add
mov
inc
adc
inc
stos
and
add
adc
fisttps
test
add
add
jb
jo
inc
test
out
je
xchg
inc
push
out
inc
js
inc
add
add
js
add
es
or
mov
and
xsavec
decl
fs
gs
popa
outsb
fs
dec
in
mov
imulb
outsl
push
andps
gs
mov
adc
outsb
je
dec
adc
or
or
inc
jbe
push
or
popf
or
repz
fldt
inc
imul
outsb
mov
gs
push
popa
pop
popa
bound
jge
xor
inc
mov
fidivs
lods
daa
imul
scas
push
imul
imul
jae
mov
inc
popa
insl
jne
adc
push
outsl
push
lret
mov
pop
sahf
dec
inc
es
imul
jb
jae
or
popa
mov
fstpt
or
insl
lods
loope
outsl
jne
push
arpl
dec
imul
jo
jge
cld
notb
xor
ja
gs
pop
addr16
push
imul
aas
push
xchg
mov
jo
popa
mov
pushf
fistl
jne
push
inc
outsl
test
pop
addr16
jne
xor
push
ss
fsubs
sti
lret
or
jo
test
sbb
jge
push
and
loope
push
mov
push
push
cmp
push
inc
push
testb
add
cmpsb
mov
orl
inc
mov
jp
inc
add
adc
in
jnp
or
cmp
pop
add
add
push
cmp
xor
pop
adc
mov
mov
shlb
cmp
add
jo
fisubrs
inc
dec
inc
inc
pop
cmp
enter
pusha
inc
inc
push
inc
inc
add
push
popf
sti
dec
pop
ds
faddp
inc
push
push
lret
arpl
jns
mov
into
jl,pn
imul
push
jbe
pushf
sub
sar
xor
add
jae
or
mov
add
std
push
sbb
mov
add
add
add
or
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
