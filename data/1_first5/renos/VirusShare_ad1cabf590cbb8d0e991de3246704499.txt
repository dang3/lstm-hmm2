jmp
mov
jmp
mov
jmp
mov
popa
xor
fs
data16
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
movl
lea
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
lea
push
mov
push
call
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
movl
lea
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
movl
lea
push
mov
push
call
mov
pop
ret
push
mov
add
mov
mov
cmp
jl
dec
inc
dec
inc
inc
inc
cmp
jns
lea
mov
lea
mov
lea
jmp
dec
dec
mov
xchg
mov
mov
mov
mov
mov
cmp
je
call
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
mov
xor
divl
test
jne
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
cmp
jns
jmp
mov
inc
dec
dec
mov
mov
inc
lea
jmp
lea
lea
jmp
lea
mov
inc
mov
mov
inc
inc
mov
cmp
je
jmp
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
push
mov
add
mov
mov
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
mov
cmp
je
jmp
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
mov
sub
mov
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
push
mov
mov
xor
call
mov
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
mov
mov
mov
call
mov
cmp
jns
jmp
mov
inc
dec
dec
mov
mov
inc
lea
jmp
lea
lea
jmp
lea
mov
inc
mov
mov
inc
inc
push
mov
mov
xor
call
mov
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
mov
mov
cmp
jl
dec
inc
dec
inc
inc
inc
cmp
jns
lea
mov
lea
mov
lea
jmp
dec
dec
mov
xchg
mov
mov
mov
mov
mov
mov
push
add
jmp
mov
mov
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
lea
mov
push
mov
jmp
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
mov
sub
add
add
mov
cmp
jl
dec
inc
dec
inc
inc
inc
cmp
jns
lea
mov
lea
mov
lea
jmp
dec
dec
mov
xchg
mov
mov
mov
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
cmp
jns
jmp
mov
inc
dec
dec
mov
mov
inc
lea
jmp
lea
lea
jmp
lea
mov
inc
mov
mov
inc
inc
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
mov
mov
movl
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
mov
pop
ret
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
mov
push
pop
pop
cmp
arpl
push
pop
dec
cmp
ja
push
pop
cmpl
push
pop
jne
push
pop
lahf
cmp
mov
insb
pop
pop
sahf
pop
out
add
daa
insb
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
add
das
insb
pop
pop
sahf
pop
out
add
xor
sahf
pop
out
add
mov
insb
pop
pop
sahf
pop
out
add
mov
insb
pop
pop
sahf
pop
out
add
pop
insb
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
mov
mov
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
xchg
pop
pop
pop
fstpl
push
xchg
pop
pop
pop
fstpl
pop
sub
mov
lock
xchg
xchg
pop
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
xchg
pop
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
xchg
pop
pop
push
cmp
pop
pop
pop
mov
sub
mov
xchg
pop
pop
sub
mov
pop
and
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
xchg
pop
pop
mov
pop
lahf
pop
repnz
mov
xchg
pop
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
xchg
pop
pop
mov
and
mov
xchg
pop
pop
and
xchg
and
mov
pop
and
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
push
call
mov
movl
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
mov
mov
call
mov
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
movl
mov
mov
call
mov
cmpl
je
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
mov
mov
call
mov
cmpl
je
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
lea
push
push
mov
sub
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
cmp
je
mov
subb
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
xor
add
mov
xor
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
incl
mov
cmp
jne
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
mov
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
push
mov
push
call
cmpl
je
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
cmp
jl
dec
inc
dec
inc
inc
inc
cmp
jns
lea
mov
lea
mov
lea
jmp
dec
dec
mov
xchg
mov
mov
mov
mov
push
mov
pushl
xchg
push
jmp
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
jl
dec
inc
dec
inc
inc
inc
cmp
jns
lea
mov
lea
mov
lea
jmp
dec
dec
mov
xchg
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
movb
mov
cmp
jnp
mov
mov
inc
mov
inc
dec
inc
lea
mov
mov
xchg
xchg
xchg
inc
mov
mov
pop
ret
mov
push
mov
add
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
call
test
jne
mov
jmp
movw
mov
cmp
jns
jmp
mov
inc
dec
dec
mov
mov
inc
lea
jmp
lea
lea
jmp
lea
mov
inc
mov
mov
inc
inc
call
lea
mov
pop
ret
mov
push
mov
add
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
movl
mov
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
call
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
call
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jle
mov
xchg
mov
lea
mov
mov
lea
lea
dec
inc
dec
mov
mov
xchg
inc
push
call
mov
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
movl
mov
push
mov
push
call
mov
jmp
lea
mov
mov
xchg
lea
mov
lea
dec
inc
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
call
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
call
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xchg
lea
inc
mov
pop
ret
insl
add
imul
arpl
jo
insb
add
add
add
in
add
cmp
jl
dec
inc
dec
inc
inc
inc
cmp
jns
lea
mov
lea
mov
lea
jmp
dec
dec
mov
xchg
mov
mov
mov
mov
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jno
lea
xchg
mov
lea
lea
inc
dec
inc
lea
mov
xchg
mov
lea
dec
dec
xchg
mov
mov
movl
lea
push
mov
push
call
mov
pop
ret
mov
subl
jae
mov
lea
mov
cmp
jb
lea
xchg
lea
mov
mov
mov
inc
dec
dec
jmp
mov
inc
lea
dec
mov
lea
mov
mov
lea
call
mov
xchg
xchg
cmp
jl
lea
lea
mov
inc
lea
mov
mov
dec
mov
lea
xchg
lea
lea
mov
ret
lea
ret
lea
xchg
push
lret
ficoms
popa
stos
test
jbe
movl
pusha
cmp
mov
sbb
fadds
mov
add
in
jp
pop
fwait
add
mov
add
stos
popf
sub
jecxz
add
lods
add
and
inc
add
lock
in
add
hlt
out
or
mov
stos
lea
add
fwait
xor
mov
ds
rcl
add
and
sbb
into
jo
loop
cmpxchg
xorb
xchg
loopne
add
sahf
mov
mov
adc
enter
pop
push
pushf
mov
js
movsb
jnp
inc
sbb
imul
fadds
dec
push
add
inc
iret
testb
aaa
lds
insl
mov
add
aas
outsb
pop
mov
add
es
mov
cmp
sbb
adc
add
add
add
cwtl
gs
add
mov
add
add
add
mov
sbb
dec
add
add
shr
mov
xchg
filds
ret
add
mov
add
jecxz
add
dec
fwait
lcall
push
addb
xor
cmc
and
push
add
adc
cmpsb
or
cmp
movsb
mov
add
add
add
add
mov
mov
xor
test
adc
gs
lock
js
mov
addl
xor
jne
std
add
inc
push
cmp
insl
inc
cmp
sub
mov
cmp
xor
add
pop
adc
pop
cmp
addr16
inc
in
inc
mov
or
jp
inc
jnp
adc
ljmp
loop
inc
repnz
addb
xchg
xchg
add
and
addr16
add
sub
sahf
les
aaa
stos
add
add
push
rolb
std
test
mov
sbb
add
add
cmp
cmc
sbb
add
pop
stc
cmp
gs
adc
leave
add
dec
add
mov
cwtl
lods
cld
pop
pop
xchg
popa
add
subl
cmp
lret
jp
push
jb
jmp
mov
cs
mov
push
add
shl
iret
add
addr16
mov
xor
nop
in
xchg
add
ljmp
add
mov
push
dec
mov
rclb
outsb
add
push
add
add
cwtl
flds
mov
jns
add
outsb
les
push
inc
sub
add
inc
add
jl
hlt
mov
add
or
add
add
add
add
adc
jbe
mov
cmp
cmp
pusha
sub
sub
lcall
fdivrs
fstpt
lods
cmp
cmp
dec
add
xor
push
int
rcl
xor
mull
push
dec
fstps
sbb
pop
sub
or
enter
inc
add
ja
repz
hlt
add
add
add
add
push
adc
cmp
add
mov
stos
add
add
add
jb
pop
and
or
pop
add
rorl
jb
sub
add
add
cmpsb
ret
pop
add
out
roll
fs
add
icebp
pop
or
xchg
jl
sub
add
faddl
lock
xor
inc
jecxz
add
fstpt
ret
add
or
xor
xor
cli
add
and
out
jne
cmp
mov
add
xlat
imul
popl
repz
lods
inc
sarl
or
mov
cwtl
jb
aas
pop
mov
mov
cmpsl
jmp
inc
fistl
cwtl
xor
in
mov
int3
push
cld
cmc
cmp
out
mov
inc
addr16
or
jbe
pop
mov
cmp
outsl
add
adc
xchg
and
mov
dec
ja
jge
les
and
stc
sti
lods
loop
sahf
mov
xchg
adc
adc
or
inc
cltd
dec
push
leave
test
jecxz
sub
adc
clc
sarb
xchg
xchg
dec
js
scas
es
pop
mov
lock
xchg
pop
push
stc
push
test
repz
out
rorb
add
push
xor
sbb
mov
mov
fisttps
cmpsb
sbb
in
jp
sbb
push
xor
pop
out
or
iret
bound
shrl
push
aam
add
push
js
and
cmp
je
pop
cltd
clc
in
jle
xchg
arpl
mov
rcrb
fcmovbe
dec
add
in
mov
push
fsubrs
jne
mov
mov
mov
out
mov
bound
lods
push
xchg
mov
mov
out
dec
ds
push
jae
addr16
and
xor
xchg
fistpll
les
in
fistpll
dec
mov
fcomip
jl
xchg
outsb
xchg
cmp
scas
cltd
inc
jnp
aaa
jae
sbbb
push
mov
mov
push
in
stos
sub
xchg
lcall
imul
scas
sub
push
nop
jne
adc
iret
cmp
jns
push
pop
in
leave
inc
cmc
cli
hlt
xchg
cwtl
xchg
arpl
mov
or
cmp
or
xlat
add
cmp
pop
lods
xchg
pushf
fimuls
loopne
rolb
sbb
jo
mov
movsb
add
les
lds
jbe
repnz
sbb
sbb
popa
in
and
jno
ja
jl
and
dec
adc
sub
fisubrs
int3
jo
mov
scas
int3
out
cmp
rorb
push
sbb
inc
mov
or
in
jmp
sahf
enter
daa
les
xchg
lods
sub
sub
inc
ret
pop
mov
mov
push
jbe
shld
sbb
out
inc
and
add
mov
mov
lods
pop
or
js
or
mov
int
call
mov
sub
ljmp
add
sti
shlb
and
cmp
xchg
dec
cmp
pop
out
movsl
push
mov
dec
sub
lods
das
pop
sub
imul
or
fwait
sbb
hlt
sahf
xchg
lcall
test
mov
jecxz
enter
in
and
cmp
imul
lcall
stc
loop
fcomps
nop
clc
lret
mov
cmp
mov
or
scas
into
mov
and
xchg
sti
insb
xor
outsl
and
icebp
loop
in
dec
imul
movsl
add
outsl
ds
and
lods
lds
mov
int3
pop
out
into
dec
cli
xlat
push
sbb
xchg
mov
sti
xchg
gs
mov
adc
xchg
pop
mov
fsts
outsl
dec
les
sbb
xchg
gs
sbb
popf
inc
mov
movsl
xor
mov
call
jmp
jno
cs
aad
push
jle
leave
pop
sub
popf
lret
inc
filds
dec
jge
fidivs
and
mov
or
lea
outsl
sbb
cli
pop
push
sub
cmc
pop
cmpsb
in
sbbl
adc
pop
ja
pop
ficompl
xchg
bound
push
add
jb
pop
sub
dec
leave
test
repz
testb
lahf
cwtl
in
mov
mov
pop
xchg
icebp
sbb
jmp
mov
adc
lock
lods
mov
mov
sub
paddq
ret
push
xor
dec
jb
push
cmpsl
ret
xor
daa
popa
mov
cmp
mov
mov
loop
shr
xor
sub
xchg
shrb
ljmp
sahf
xchg
stc
and
pop
push
clc
clc
mov
call
ljmp
cmc
pop
dec
pop
cwtl
stos
pop
push
adc
xchg
mov
xchg
movsl
xchg
push
pusha
inc
insl
push
movsl
out
add
dec
or
repnz
in
jnp
pop
jg
xchg
scas
or
xchg
out
mov
xchg
inc
arpl
aas
fwait
lock
push
pslld
js
aam
pop
cs
xor
mov
xchg
mov
cwtl
mov
cmp
pop
jnp
jge
test
lock
clc
out
mov
jl
mov
test
dec
sub
jne
fscale
mov
sti
mov
xchg
cmp
inc
jmp
jg
add
dec
inc
lods
out
pop
dec
sub
push
or
jp
adc
and
movsl
data16
xor
repz
and
pusha
jecxz
int
adc
inc
xchg
inc
loop
pop
xor
inc
xchg
cmp
inc
fcoml
test
es
or
mov
inc
mov
mov
sbb
lods
aad
sti
push
pop
scas
mov
xor
inc
push
adc
stos
sbb
xchg
sub
mov
hlt
loopne
int3
arpl
inc
inc
out
dec
mov
mov
ret
jmp
into
inc
dec
add
cmc
int3
mov
shl
sub
lds
pop
cmpsl
mov
ret
cmp
loop
aas
movsb
gs
cmpsb
xor
jge
push
mov
aaa
adc
lods
sahf
jno
sbb
dec
or
push
xor
sbb
sub
stos
insl
shlb
jle
test
xchg
test
adc
rorb
jg
ret
or
cmp
push
jmp
ret
fs
sub
stos
aas
cmp
add
dec
cmpsl
ret
sub
and
adc
push
incb
and
loop
jmp
rcrb
js
je
xor
outsl
js
pop
lods
pop
cmc
movsb
xlat
push
or
push
cmpsl
into
jecxz
and
sub
xor
outsb
adc
dec
push
xchg
iret
cmc
sub
frstor
xchg
xor
addl
ja
mov
ja
mov
stos
mov
lcall
ret
mov
imul
xor
enter
bound
mov
roll
out
add
fs
cltd
in
sbb
fcmovnu
pop
and
mov
xor
adc
icebp
or
movsb
pop
cmc
pop
push
jo
sar
sbb
mov
inc
imul
out
add
in
pushf
lods
lods
mov
mov
cs
mov
jg
mov
std
push
xor
xor
and
gs
sbb
mov
cmpsl
pop
mov
sbb
jns
mov
inc
repz
fs
mov
in
sbb
fdivs
mov
pop
lods
pushf
adc
lock
jb
clc
cs
mov
dec
inc
mov
jbe
hlt
adc
jecxz
rorb
outsl
fs
lea
cmp
jne
fcmovnb
stos
flds
pop
pop
leave
mov
xor
jae
mov
push
add
jle
fs
loope
nop
inc
lods
sbb
jb
test
sub
test
test
mov
cwtl
cmpsl
fsubl
mov
es
out
xor
sub
cmp
mov
test
sub
loope
sbb
cmp
sub
aam
xchg
ss
adc
xlat
es
stc
cmp
jno
dec
insl
divb
ret
mov
iret
outsl
movsb
lods
mov
pop
into
mov
fidivrl
adc
dec
jle
sarb
rcrl
in
mov
push
fimull
scas
fldl
xor
ja
xchg
adc
mov
xchg
sub
stos
pop
stc
data16
stos
push
jle
out
notb
xchg
in
and
push
cmp
ud0
add
frstor
xor
adc
mov
nop
les
test
cmp
xchg
xor
in
cli
fstps
push
xlat
pop
fwait
pop
and
push
pop
out
add
xchg
inc
mov
cmp
loop
mov
es
push
out
ds
add
mov
repz
mov
ja
jbe
dec
jmp
or
mov
hlt
xchg
xchg
dec
or
jne
pusha
shlb
jb
std
dec
jg
xchg
dec
lods
jns
fsubs
out
fnstsw
and
xchg
and
and
jle
mov
jnp
mov
jnp
imul
add
mov
pusha
jle
aad
xor
into
pop
push
iret
inc
xchg
mov
jae
dec
in
push
imul
xor
cmc
fs
push
test
push
stos
adc
xchg
dec
sbb
sbb
push
imul
pop
scas
out
lods
or
js
adc
push
lods
iret
testb
jnp
jnp
das
lock
hlt
sub
movsb
inc
icebp
pop
sbb
xor
cmp
mov
fidivl
dec
bswap
test
stc
pop
or
cmc
lds
sbb
mov
cmpsb
std
repnz
movsl
dec
cmp
popf
or
jbe
sarb
adc
aam
or
push
jl
mov
lahf
push
movsb
scas
pop
xor
jne
lret
lock
and
mov
jg
pop
mov
inc
fsubrl
mov
pop
pop
cmp
mov
mov
daa
ret
cmp
pop
outsl
loope
ret
inc
sub
call
cmp
insb
mov
repz
or
pop
sub
push
jmp
rorb
hlt
notl
in
jae
cmp
pop
pop
mov
call
push
mov
jp
into
mov
or
sub
adc
sub
jle
and
mov
test
jbe
push
push
xchg
ljmp
repnz
sub
data16
or
fsubrs
andb
popa
jg
mov
mov
aaa
push
stc
cmpsb
lock
fldl
cmp
adc
lret
and
mov
xor
mov
adc
jl
data16
and
xor
sub
out
loop
adc
sub
adc
hlt
mov
lcallw
ljmp
mov
pusha
test
push
pand
adc
inc
gs
popa
loopne
fs
adc
mov
jecxz
xchg
insl
dec
repz
cs
xchg
dec
lret
mov
cmp
mov
mov
lret
push
mov
hlt
xchg
cli
pushf
cltd
sbb
jmp
movsl
loope
mov
mov
nop
jg
mov
cmpsb
loop
inc
add
mov
je
xor
out
jb
insb
fdivs
scas
call
sub
pop
or
outsl
or
mov
pop
and
mov
inc
in
aas
mov
and
hlt
aam
and
cmp
rcrl
dec
std
rorb
movsb
cwtl
bound
or
mov
mov
icebp
or
cld
jbe
aas
lret
cmpsl
inc
jne
xchg
mov
lock
pusha
das
jp
sbb
and
movsb
aam
mov
aas
sbb
insl
lods
movsb
sub
push
xchg
stos
fs
popa
out
mov
mov
std
fnstsw
and
xchg
inc
outsb
pop
push
xor
push
sub
repz
mov
shl
push
popf
cwtl
in
fdivrp
add
ljmp
jge
movsb
inc
sbb
out
pop
ljmp
push
sahf
jge
pop
in
or
sub
fs
mov
xchg
imul
xchg
rcrl
sbb
push
inc
xchg
dec
xchg
or
sbb
stos
mov
add
scas
push
fcos
push
gs
xor
arpl
in
movsl
lahf
xchg
push
sbb
mov
mov
mov
icebp
cmp
ja
mov
dec
fiadds
jl
and
adc
dec
out
jae
jne
dec
popf
mov
sbb
bound
jmp
adc
ret
and
fcmovnbe
push
sub
inc
idivl
and
movsl
jp
aam
and
dec
adc
mov
cmp
bnd
mov
in
into
mov
fists
xchg
mov
clc
jp
ret
push
cs
into
popf
push
jbe
mov
ret
movsl
xor
lahf
push
or
sti
pop
imul
jmp
push
prefetchwt1
in
push
loop
push
jbe
ret
lods
leave
cmpsb
arpl
hlt
jbe
sub
inc
hlt
loope
or
scas
push
popl
mov
add
loop
pop
cmp
fidivs
sub
rcl
cmpb
inc
jno
push
pop
test
push
inc
fdivr
jbe
jns
movsb
push
sbb
ljmp
sti
and
jno
lds
dec
pop
hlt
orl
pop
add
push
movsl
adc
push
ret
scas
imul
test
sub
mov
cmpsb
fsubrl
in
mov
xchg
daa
shll
cmp
loope
inc
mov
pop
cli
jnp
dec
xchg
bound
mov
push
and
das
jmp
jns
or
push
adc
add
aad
dec
dec
decb
pop
cmpl
pop
jae
xor
push
push
jns
scas
sub
or
outsb
mov
sub
add
dec
lea
xorb
rorl
sub
mov
push
xchg
int
int
inc
sub
insl
push
lods
pop
test
push
xchg
mov
js
insw
cltd
sahf
jnp
or
lods
inc
ljmp
aad
mov
loope
stc
pop
jg
fs
push
adc
insl
ss
sbb
sub
into
loop
mull
or
push
jnp
xor
jge
or
or
cmc
out
and
xchg
jp
ror
loop
shrl
cmp
jl
jnp
mov
sbb
lods
jp
cmp
mov
cmc
leave
mov
roll
sti
xchg
imul
xchg
std
loopne
shlb
xor
fnstcw
repz
pop
sbb
dec
push
rcl
mov
mov
pushf
inc
adc
jmp
shrb
add
mov
mov
popa
dec
add
mov
dec
loop
test
mov
jne
repz
jb
call
test
xor
andl
xlat
fcmovnbe
add
pop
les
pop
inc
out
test
inc
loop
cmp
sub
in
mov
jmp
push
shr
jo
testb
std
ja
les
jb
scas
mov
dec
sbb
popf
pop
repnz
mov
cltd
sub
mov
push
das
pop
cld
mov
sbb
add
or
icebp
ljmp
mov
inc
cmpsl
shr
mov
std
jne
lods
mov
mov
call
arpl
pop
mov
cltd
sub
add
push
adcl
or
xchg
sub
addr16
xchg
iret
fwait
ljmp
fcompl
dec
stos
in
sbb
mov
andb
call
adc
or
cmp
popa
mov
xchg
mov
test
sub
call
sti
or
jmp
lods
fwait
jge
xor
dec
outsl
jl
jno
jmp
push
push
jb
mov
mov
in
mov
xchg
lahf
shr
inc
and
mov
lods
scas
jns
ret
dec
rcrl
mov
sbb
mov
cmp
cltd
popa
jne
cltd
into
mov
push
out
xor
in
pop
enter
loope
xchg
loopne
test
out
inc
daa
sub
inc
dec
hlt
and
sub
mov
aad
jecxz
sbb
xlat
jnp
and
dec
je
in
cmp
fbstp
sahf
xchg
mov
sub
inc
cmpsl
lea
push
icebp
pop
insl
popf
jle
xchg
mov
add
mov
xchg
testb
lcall
scas
mov
bound
or
adc
fisubrs
mov
loope
mov
jnp
hlt
shrl
arpl
pop
inc
neg
xor
sub
inc
push
push
mov
cs
aas
int3
jle
loop
imul
std
lds
outsb
inc
shr
sub
cld
addr16
repnz
data16
xor
int3
push
xchg
push
leave
jbe
pop
test
sbb
loope
push
sub
or
push
jno
rcl
jl
test
les
push
or
jo
push
scas
dec
add
and
adc
repz
sbb
aam
cmpsb
pop
jne
in
xchg
enterw
daa
rorb
cmp
xchg
loope
out
lock
fistps
ds
scas
movsl
imul
and
push
lahf
cwtl
outsb
or
sbb
stos
cld
add
js
xor
inc
pop
pop
test
mov
pop
mov
imul
jbe
fsubl
int
in
xchg
outsb
out
jo
adc
ficoms
adc
fwait
jb
mov
pop
scas
and
int
jmp
sub
bound
lcall
mov
sbb
sub
adcb
jg
stc
lods
mov
shl
adc
jo
xor
mov
cmp
mov
jo
dec
xor
cmp
adc
or
mov
into
inc
sub
xor
in
outsl
mov
sbb
xor
adc
in
add
cmc
lahf
data16
or
mov
sahf
pop
cli
mov
test
and
inc
mov
pop
out
pop
gs
negl
xorl
adcb
mov
les
int
rolb
add
adc
lret
inc
lahf
sub
call
sub
aas
jmp
fst
iret
lods
pushf
nop
xor
aaa
xor
sub
je
cli
and
xor
js
and
out
clc
daa
sub
xchg
cmp
mov
out
addr16
into
inc
jbe
xchg
inc
std
mov
aas
int3
jp
jb
iret
cmpsl
mov
jbe
inc
sarl
int
notb
aam
cwtl
fadds
mov
cli
fimuls
je
jns
int3
call
mov
pop
into
lret
es
fsubs
shrb
cmp
jge
adc
call
fdivrs
leave
and
mov
pop
ret
pop
cmpsl
mov
popf
imul
xorl
inc
shrb
mov
test
mov
clc
sbb
test
sbb
push
and
cmp
mov
mov
popf
ljmp
aaa
pop
cli
js
stos
fistl
je
rorl
int3
inc
nopl
add
mov
xor
jp
mov
cltd
fwait
cmp
test
add
lods
lcall
jg
inc
inc
mov
sbb
push
lock
add
scas
push
xchg
lods
xor
add
jns
enter
push
jne
out
scas
mov
mov
addr16
ja
cmp
push
mov
inc
jp
ja
cli
mov
insb
dec
mov
out
jne
dec
mov
mov
out
minps
bound
or
stos
xchg
ret
addl
stc
sub
cmp
lock
cmp
sub
insb
hlt
mov
adc
and
sahf
pusha
dec
shll
xchg
lea
jecxz
mov
xchg
jae
add
sub
cmpsb
adc
push
inc
mov
sbb
inc
fwait
icebp
imul
aas
push
repz
iret
adc
popf
ret
xlat
leave
xchg
ss
or
pop
arpl
xchg
inc
cli
dec
inc
or
movsb
xor
inc
out
mov
lret
outsl
sub
int3
imul
loope
mov
lret
mov
or
xchg
mov
nopl
mov
cmp
loop
xchg
jbe
pop
jnp
repnz
ss
into
aaa
adc
or
addr16
jno
add
dec
cmp
cwtl
popa
xor
xchg
subb
dec
test
mov
movhps
outsb
jmp
stos
daa
mov
pop
xchg
loope
mov
dec
cmp
cmpsl
xor
push
fwait
daa
lahf
mov
jno
bound
sbb
mov
add
mov
xor
test
push
js
pop
pop
pop
icebp
inc
ss
push
sahf
push
add
iret
or
sub
hlt
sbb
adc
mov
fwait
sbbb
mov
xchg
mov
and
out
scas
int
jne
sub
jge
cmpsl
push
sub
rorl
push
mov
sbb
jg
sahf
rcll
mov
repnz
jg
and
mov
rolb
fs
aas
and
stc
or
inc
lock
mul
cmp
lret
push
xor
and
mov
jns
cmpsl
into
and
mov
cmp
in
loop
test
imul
pop
push
add
andb
dec
lock
sahf
fsubl
cmp
test
mov
sti
icebp
outsb
pop
jge
frstor
jp
loopne
mov
pop
pop
call
xor
sub
data16
dec
mov
xchg
dec
fistps
les
xlat
loopne
and
stc
inc
push
pushf
lcall
cs
aad
aas
xchg
nop
adc
dec
ret
addr16
inc
movsb
push
dec
shlb
je
pop
mov
push
mov
jnp
sub
popa
sub
pop
and
and
dec
pop
jmp
fldt
jns
pop
or
push
inc
std
aas
xor
sbb
lds
out
xor
sbb
cmpsl
and
aad
rorl
inc
lock
lds
cwtl
xchg
cmp
js
mov
dec
icebp
dec
imul
mov
pop
pop
mov
and
lock
or
mov
pop
stc
push
aam
les
push
lretw
movsb
sbb
dec
pop
fidivl
test
mov
sub
lods
fs
push
data16
and
arpl
pop
or
ror
fidivrs
cltd
cwtl
mov
ljmp
in
stos
fucom
xor
clc
mov
call
ljmp
pop
movsl
shl
stos
lret
out
sbbb
jae
push
cmpsl
mov
add
inc
or
xchg
mov
pushf
and
test
imul
xor
es
push
mov
fstpt
push
add
cli
pop
pushl
push
inc
xor
das
jns,pn
icebp
jg
add
xchg
cmp
push
js
push
call
ja
fst
dec
mov
add
mov
mov
pop
dec
xchg
shrl
arpl
push
push
out
out
out
arpl
jecxz
jmp
jbe
lret
andb
jae
sub
cmp
loop
lock
cmp
jnp
ljmp
xchg
inc
cli
pusha
ljmp
xchg
pusha
js
pop
inc
inc
xor
mov
das
pop
adcb
cltd
das
popf
int3
aam
mov
orb
stos
fnstsw
xchg
movsb
add
cmpsb
jle
scas
jnp
rcll
sub
cmp
jb
scas
ret
das
leave
or
mull
lods
dec
inc
std
sub
rorl
push
data16
fidivrl
sbb
pop
push
lods
int3
push
dec
pop
adc
lds
lahf
shlb
imul
push
jae
jne
mov
push
inc
jbe
int
jge
mov
add
shrb
mov
jno
pop
mov
dec
lods
out
pop
push
xor
xor
loope
test
and
cmp
adc
mov
cmpsb
bound
enter
daa
mov
fbstp
ss
sub
es
cmp
xchg
ds
mov
movsl
jns
pop
and
shlb
xor
adc
and
xor
adc
or
pop
testb
js
mov
xor
mov
movsl
gs
pop
inc
jge
jp
pop
sub
cmpps
sbb
lods
sub
xor
insb
or
dec
mov
or
and
cs
int
loop
sub
xor
movsb
lcall
rorl
or
test
ret
enter
dec
xchg
mov
sbb
addb
fs
lcall
push
fsubl
lahf
push
je
xor
sbb
mov
push
xor
or
cmp
push
outsl
pop
jns
loop
push
imul
and
add
data16
test
lods
das
mov
jle
popf
sahf
out
or
sbb
adc
je
mov
cmp
fwait
popa
xor
mov
xchg
pop
ds
adc
jae
popa
out
cmpsl
vpermilpd
xchg
test
pop
push
pop
sbb
lcall
add
xchg
jmp
adc
fistps
cmp
mov
pop
xor
nop
jmp
daa
dec
and
dec
inc
mov
jo
adc
call
mov
faddl
and
cmp
daa
loope
dec
dec
or
pop
lods
in
inc
test
sub
jb
inc
xor
rorb
rcl
fcoms
negb
repnz
insb
sub
cwtl
dec
scas
jnp
mov
aam
icebp
and
xor
and
mov
arpl
std
mov
in
mov
xchg
lock
mov
imulb
dec
sub
jle
aam
and
filds
cmpsl
insl
dec
pop
adc
push
test
mov
movsl
repnz
inc
lea
lods
iret
pushf
sbb
mov
sub
out
lcall
xchg
aad
movsl
ror
mov
outsl
mov
test
or
lods
xchg
dec
fldl
rorl
roll
shrb
in
scas
xchg
dec
add
addb
fisubrl
scas
or
inc
xor
mov
loop
lahf
sbb
dec
scas
mov
test
addr16
xchg
jmp
inc
in
lea
movsl
push
test
add
sbb
call
add
jns
mov
dec
xchg
mov
mov
pop
lcall
jle
ja
add
dec
stos
sub
mov
jmp
mov
pop
pop
inc
dec
jp
or
fisubrs
mov
inc
mov
int
je
sarb
jmp
inc
sub
mov
cmp
or
mov
bnd
leave
je
sub
cmpl
arpl
in
fidivl
pusha
test
and
int
push
xchg
xor
ds
jge
aaa
inc
enter
jl
push
cmp
add
mov
leave
insb
xchg
sti
xchg
sbb
mov
xchg
insb
push
fiadds
dec
push
adcl
shll
add
fiaddl
leave
sbbb
arpl
subb
loop
push
in
insl
fidivl
aas
mov
rep
adc
aas
push
pop
pop
not
and
je
inc
push
imul
sub
frstor
pop
xlat
jbe
mov
jge
dec
int3
sbb
bound
jge
jno
rorl
mov
jbe
push
adc
repz
xchg
ljmp
xchg
push
repnz
push
jge
call
outsl
dec
push
xor
daa
mov
sbb
dec
mov
cmp
add
push
sbb
movsl
cmp
and
lahf
cmc
out
sbb
or
sbb
dec
add
cs
xor
outsl
mov
pop
sbb
push
int
outsl
test
push
loope
push
mov
cwtl
fsubl
out
outsl
outsb
pop
lods
gs
outsl
mov
cmpb
mov
int3
stc
mov
std
xor
shll
int
xor
sub
mov
lcall
jl
sbb
cli
sahf
pop
mov
andb
lret
mov
xchg
gs
cmp
cs
pop
adc
cmp
mov
test
lret
pop
xor
add
cmp
leave
rorl
dec
cmpsl
into
jmp
xchg
cmc
add
inc
outsl
cmp
pusha
sub
pop
pop
mov
inc
nop
add
arpl
lods
push
push
xchg
pushf
in
cli
cmp
stos
mov
jg
or
inc
dec
call
loopne
sti
fcompl
les
sbb
rcl
int
push
repz
repz
cmp
in
sub
adc
adc
dec
sbb
or
test
nop
jb
aad
lea
dec
adc
jge
mov
pop
fsubp
and
iret
movb
jo
push
out
mov
movsb
and
pop
mov
pop
cmpl
std
mov
inc
or
fdivrs
test
leave
aad
xchg
and
shll
jp
negb
dec
std
adc
fwait
cwtl
or
jge
outsb
add
icebp
stc
pop
inc
cld
dec
aas
push
lret
shlb
pushf
mov
dec
pop
lock
inc
pop
mov
cmc
test
aam
xlat
ret
outsb
jmp
es
fs
insl
xor
lea
les
mov
pop
xor
lods
cmp
add
mov
add
jae
cltd
mov
pop
add
push
lret
adc
test
jmp
insb
adc
sub
ljmp
nop
pop
sti
incb
test
push
out
dec
pop
test
pop
fmull
arpl
or
mov
mov
shrb
xchg
std
sbb
mov
or
into
xor
fyl2x
adc
lea
add
mov
xor
and
in
and
xchg
fisttpl
popf
mov
pop
loop
fstpl
lea
test
dec
popf
xlat
fnsave
clc
loope
mov
mov
push
mov
inc
mov
bound
sub
xchg
or
pop
xorl
jecxz
push
cmpsl
sub
arpl
sbb
push
mov
xor
shl
aad
ss
xlat
mov
fucomip
popf
push
xchg
push
mov
pusha
inc
shrl
imul
cli
jecxz
sbb
add
push
ss
xchg
push
push
sbbl
inc
imul
push
enter
xor
fwait
iret
xor
ret
push
leave
stc
inc
jp
in
cli
jmp
fs
sahf
movsb
push
fs
jecxz
in
pop
add
loope
pop
and
sti
clc
lds
movsl
rcrb
mov
or
cmp
hlt
shlb
xor
jge
mov
sbb
repz
dec
aaa
or
mov
insl
cmp
jg
mov
sbb
notb
xor
xchg
xchg
cmc
scas
les
and
repz
pop
iret
addb
icebp
cmpsb
imul
in
and
push
enter
daa
mov
add
loope
repnz
sub
mov
bound
ds
movsl
xchg
int
out
adc
sub
push
sub
int
sbb
jle
js
lods
push
pop
scas
mov
mov
movsb
mov
ror
in
sub
push
adc
dec
xor
adcb
inc
mov
inc
cmp
push
movsb
or
int
imul
lcall
icebp
mov
fnstenv
sahf
stos
xchg
movsl
test
mov
jg
scas
jae
jge
or
lock
fs
dec
jbe
add
ret
cmp
jne
push
negl
adc
xor
scas
pop
or
or
into
into
das
jns
lret
xor
add
lods
inc
loop
mov
push
cld
inc
adc
mov
add
jne
lods
pop
subl
fwait
scas
sbb
mov
ljmp
out
xchg
gs
mov
mov
lock
sbb
iret
cmp
fcomp
call
xchg
mov
jne
jne
popf
xchg
cmp
jge
fs
cmp
jmp
mov
ss
dec
adcl
ja
leave
dec
xor
jae
jecxz
sbb
daa
lea
and
shrb
mov
pop
ds
adcl
inc
fstpt
xor
movb
imul
jb
test
ds
xor
jbe
lcall
push
push
cwtl
les
mov
or
js
or
iret
xlat
mov
leave
xor
pushf
jne
lock
loopne
das
mov
jmp
in
jbe
aam
fnsave
std
xchg
add
sub
mov
dec
dec
xchg
cmpsl
mov
jge
popa
jo
cmp
in
repz
or
pop
mov
and
rolb
cltd
cmp
inc
xchg
mov
aam
push
das
push
pop
fstl
inc
clc
arpl
lods
xchg
int
stos
ljmp
cmp
ljmp
stos
bound
xchg
fisttpll
push
cmp
lods
add
mov
movb
xlat
xchg
xlat
xchg
stc
add
arpl
mov
or
or
push
je
add
push
push
xor
packssdw
in
mov
inc
xchg
in
shrl
mov
or
pop
push
cwtl
pop
ja
aam
dec
nop
aaa
push
es
xor
rclb
scas
call
jnp
sahf
out
mov
jmp
xlat
or
shll
sub
sub
sub
sti
jbe
push
fwait
xor
add
push
push
jle
clc
jno
in
cmp
pusha
mov
adc
xchg
fldcw
push
inc
fisubs
jae
add
push
rcr
popf
inc
aaa
mov
xchg
roll
ss
test
leave
pop
imul
scas
movsb
mov
repnz
sbb
iret
mov
ret
or
cmp
mov
push
mov
or
nop
out
inc
jecxz
push
ficoml
jbe
int3
adc
mov
xchg
vmovapd
mov
pop
sarl
lcall
push
push
ss
jbe
jge
push
pop
sbb
and
nop
or
cs
push
imul
dec
stc
into
xor
xor
repnz
jp
mov
push
std
test
ljmp
cmpsb
out
stos
in
or
iret
daa
mov
movsb
and
jnp
jp
fcmovnb
mov
ds
call
mov
andb
xor
push
scas
sub
sbb
jge
add
testb
mov
or
nop
and
pop
imul
pop
in
push
sbb
push
pop
or
jnp
push
sub
inc
push
adc
and
addb
ss
mov
nop
xchg
mov
filds
fisttps
adc
scas
andb
dec
dec
lahf
pop
mov
in
shll
mov
adc
sbb
xchg
faddl
ffree
scas
jg
out
mov
and
cmpsl
dec
jo
ljmp
ss
pop
cmp
xor
mov
mov
or
xor
push
push
into
mov
clc
cmc
xchg
push
adc
test
dec
pop
loop
out
imul
push
jne
das
mov
in
push
mov
cld
mov
mov
rorl
in
push
shl
sti
lods
movsl
mov
gs
sub
mov
mov
ret
mov
flds
push
sub
jecxz
jge
add
fs
mov
cmp
xlat
fdivl
adcl
inc
pop
cli
jmp
clc
popa
cs
add
nop
jl
or
push
push
inc
mov
and
sets
sbb
inc
andl
call
mov
ss
sub
push
and
jmp
push
pop
xchg
ss
sbb
inc
test
xchg
jb
je
mov
sub
xchg
insb
mul
stos
int
popa
xlat
mov
mov
fwait
lahf
mov
faddl
cld
mov
mov
icebp
mov
add
lahf
add
xchg
test
mov
cmp
jecxz
mov
ret
mov
adc
dec
inc
lock
mov
js
popa
xchg
adc
adc
mov
adc
pop
mov
inc
xlat
ja
pop
cmp
jl
mov
in
addr16
repnz
fnstsw
daa
clc
sahf
or
or
loopne
sub
xchg
rorl
jl
stos
xchg
out
push
mov
mov
adc
maskmovq
cmp
scas
mov
or
or
fildl
jecxz
pop
test
xlat
mov
loop
adc
xchg
xor
jbe
or
push
sub
push
pop
jmp
add
imul
ljmp
call
fsubp
scas
shrl
jns
xor
mov
push
or
cmp
xor
dec
divb
dec
push
add
and
fdivl
push
sub
mov
add
xchg
mov
ficomps
out
dec
subb
insl
sbb
mov
push
adc
hlt
jnp
test
aam
mov
jo
push
loop
fildll
mov
xchg
lods
lret
rcrl
loope
jmp
notl
subl
push
push
jns
jl
test
test
sub
sbb
into
or
push
and
iret
out
repnz
and
out
mov
sbbl
lret
inc
or
push
bound
mov
dec
mov
cmp
pop
xorl
lds
rclb
or
scas
aas
cmp
push
adc
movsb
jb
push
insl
or
add
stos
jge
push
or
fnsave
or
adc
jl
dec
pop
dec
push
or
dec
fsubrs
scas
adcb
test
mov
in
push
xor
cmpsb
jno
js
icebp
in
enter
daa
mov
clc
pop
loope
int3
mov
inc
movsb
scas
cmp
sub
sub
sbb
xchg
in
sbb
mov
xor
ss
push
adc
pop
xchg
mov
js
sbb
hlt
push
lret
mov
mov
ret
and
sub
adc
inc
jge
adc
add
aam
mov
jmp
cmp
out
pusha
mov
stos
mov
int
sub
lret
pop
and
lret
lcall
into
mov
or
sbb
sbbl
clc
call
shll
pop
push
iret
fs
push
adc
sub
insl
fsubr
das
push
negl
cmp
xor
daa
cmp
cmc
sbb
into
xchg
jmp
cmc
pop
filds
outsl
inc
loop
js
imul
xchg
inc
add
shrd
leave
cmp
out
into
sub
aad
pop
mov
shlb
sub
xor
in
loopne
jns
pop
mov
lock
cmc
shl
sbb
xchg
fs
cmp
les
sbb
sub
sbb
lods
cmp
pushf
icebp
and
mov
aad
icebp
fstl
sahf
xchg
pop
inc
popf
adc
dec
and
pop
je
sub
push
sub
lea
sti
xor
and
jb
movsb
outsb
adc
dec
test
fistpl
add
mov
or
lods
jb
xchg
addr16
mov
mov
and
ja
or
mov
scas
dec
mov
rorl
pop
je
mov
cmc
jmp
das
jb
mov
mov
lcall
xor
xchg
insl
in
pop
dec
inc
stc
andb
es
popa
sahf
stc
adc
stc
mov
adc
jnp
mov
bound
cltd
stos
pop
lahf
test
or
mov
dec
xchg
push
mov
xor
movsl
pop
clc
clc
cmp
lahf
lcall
cld
clc
adc
jno
sbb
imul
push
out
and
orps
adc
and
pop
xor
mulb
stos
test
dec
hlt
and
xchg
negl
mov
inc
inc
dec
or
or
clc
pop
fwait
mov
jg
and
add
loop
xor
sbb
cmp
in
sub
mov
enter
mov
ja,pt
mov
dec
jbe
mov
aam
call
mov
push
out
push
push
jl
cmp
sbb
dec
add
bound
out
xchg
insl
aas
aam
fistps
out
loopne
sub
pop
xor
dec
pop
jp
std
ret
and
in
jnp
ret
ds
and
andb
rcr
dec
or
xchg
jg
dec
pop
pop
xor
inc
hlt
rcrb
cmp
popf
xchg
ret
adc
stos
sbb
xlat
xchg
push
push
pop
sbb
pop
sub
push
int3
scas
push
out
popf
fnstenv
adc
mov
mov
leave
pop
pslld
mov
inc
or
testb
mov
inc
loope
jmp
add
mov
pop
mov
enter
sub
jecxz
mov
mov
add
cmp
lcall
mov
sarb
jge
outsl
mov
cwtl
fcoms
aaa
mov
sub
sbb
jl
jp
dec
xlat
aaa
dec
push
lahf
and
stc
jo
push
mov
popa
xor
adc
test
push
cmpsl
sahf
push
sbbb
jecxz
xchg
cmpsb
hlt
and
in
fsubrs
in
enter
daa
mov
add
test
push
push
cmp
ja
cmpsl
inc
mulb
mov
aam
push
push
rcrb
dec
pop
add
push
xchg
xor
pushf
push
ja
pop
mov
xor
imul
push
or
push
mov
insl
adc
mov
xlat
push
rcr
xchg
and
lret
add
mov
in
mov
adc
push
lods
xor
pop
sub
icebp
pop
mov
scas
enter
push
mov
fsubs
sbb
push
call
test
lds
jg
bound
jbe
cmc
stc
adc
push
cld
adc
cs
cmp
cmpsb
clc
mov
pop
inc
ds
xorb
je
cmp
push
stos
or
aam
into
ja
jge
pop
sbb
xor
push
mov
shrb
cmc
adc
add
xor
lods
mov
out
mov
js
or
aaa
mov
sub
sti
or
stos
decb
andb
gs
jne
pop
fldcw
fnstenv
stc
andb
lods
and
and
cmp
add
sub
mov
mov
jmp
hlt
xchg
cs
in
aad
fisubrl
dec
std
fstpl
mov
dec
lcall
jecxz
adc
jns
ja
jb
inc
push
xchg
pop
push
pop
adc
dec
loope
fisttpl
cwtl
pop
faddl
out
inc
mov
stos
jg
sub
jno
arpl
and
ljmp
addr16
sti
std
scas
adc
cwtl
cmc
and
push
scas
mov
jbe
stc
lahf
jae
mov
push
mov
dec
mov
push
jge
das
push
ror
mov
sarl
or
stos
and
adc
orb
mov
mov
mov
mov
mov
cmp
inc
mov
adcl
cltd
loop
je
xor
aam
cmpsb
and
xchg
mov
add
cmp
stos
xor
aam
clc
xchg
mov
rcll
lgs
add
mov
or
xchg
sbb
scas
ret
mov
aad
addb
xchg
int3
test
inc
loopne
lock
scas
negb
gs
add
mov
mov
cmpsl
jns
pop
mul
xchg
pop
pushf
dec
mov
aam
mov
test
ja
outsl
cwtl
dec
imul
enter
dec
dec
jmp
and
mov
add
out
sub
mov
out
or
subl
out
in
mov
or
mov
lret
lea
insb
loope
mov
jle
lods
in
mov
pusha
mov
fildll
push
xchg
push
lods
sub
in
inc
incl
push
popf
mov
or
cli
mov
daa
xchg
scas
cltd
ret
sbb
pop
inc
imul
scas
int
lods
push
in
push
adc
xorl
mov
shl
sbb
arpl
add
inc
paddb
push
pusha
jmp
fidivl
adc
xchg
sbbb
sub
dec
mov
mov
push
out
lcall
aam
push
or
jbe
stc
mov
sbb
dec
aaa
dec
sbbb
dec
add
loop
inc
xchg
sub
xor
add
scas
inc
jmp
test
push
dec
mov
jb
push
cmpsb
ja
jg
mov
daa
mov
mov
aaa
sub
outsl
xchg
movsl
mov
or
nop
pop
mov
fadds
jle
pop
add
cwtl
push
xor
dec
cltd
pop
loopne
and
fisttpll
stos
scas
cmp
xchg
push
adc
fdivrl
sub
outsb
push
int3
adc
mov
orl
xor
mov
test
jb
mov
and
in
out
rorb
lcall
fmuls
pop
mov
test
subb
jo
cmp
sub
int3
push
cmp
fistl
aas
sbb
ss
inc
stos
cmp
popa
push
adc
sbb
xor
stos
stc
cmp
mov
into
pop
ja
cmc
out
ljmp
inc
inc
loop
aaa
pushf
imul
ret
mov
mov
lods
cltd
sub
out
decb
mov
xchg
lds
jb
mov
loopne
xchg
adc
fldcw
pusha
sbb
jo
and
ljmp
cmp
mov
cltd
and
mov
pop
lret
fwait
pushf
inc
xor
mov
call
aad
sub
or
sub
ret
loopne
dec
adc
je
sub
jecxz
inc
nop
adc
ficoms
pusha
pop
adc
or
inc
xorl
imul
pushf
movsl
inc
aad
mov
les
std
jb
jp
mov
into
adc
mov
jnp
stos
jns
std
push
mov
cwtl
mov
sbb
jg
and
sub
das
cld
and
xchg
lret
std
sub
mov
fidivs
mov
push
xor
mov
aam
inc
mov
cmp
mov
dec
ss
int
mov
aad
test
cs
int3
xchg
lods
push
int
mov
pop
ret
mov
mov
sbb
cltd
sbb
clc
test
sbb
mov
shl
push
cmp
xchg
repz
pop
clc
dec
sub
xchg
leave
in
ljmp
add
xchg
aaa
sbb
stc
mov
push
movsb
push
xor
adc
rolb
call
xor
xor
push
addr16
push
xchg
jg
test
jnp
xchg
sbb
pop
pop
add
mov
popa
fwait
and
in
push
or
aaa
add
mov
imul
test
mov
xchg
test
fwait
push
sbb
and
mov
mov
inc
dec
pop
mov
mov
out
mov
jne
repnz
out
pop
pop
push
bound
test
jmp
add
xchg
cmp
inc
out
imul
inc
mov
jp
rcr
and
mov
jnp
inc
fdivrs
jg
enter
daa
jbe
filds
insb
mov
movsb
inc
or
jbe
int3
faddl
mov
cmp
xchg
add
cmp
imul
sub
sub
jnp
jnp
or
cmpps
dec
and
fs
arpl
scas
inc
adc
push
or
jl
in
fists
lods
fisubl
popl
jge
nop
int3
rcll
shll
nop
dec
mov
cmpsl
xchg
repnz
sbb
pop
iret
jbe
xchg
arpl
pop
aam
push
fsubl
or
jmp
jl
dec
pop
dec
mov
xlat
push
gs
xor
sbb
lret
jo
iret
adc
aaa
popf
pop
test
push
or
inc
add
cli
gs
in
cmpsb
pusha
test
mov
push
inc
sub
pop
sub
xor
cmp
pop
sarb
push
test
out
addr16
scas
pop
mov
cli
and
sbb
jbe
xor
fcom
pushf
lcall
in
sbb
push
or
push
mov
push
loope
dec
cmp
outsb
imul
data16
cmpsb
dec
xor
lea
pop
xchg
push
and
jle
push
mov
sub
dec
sar
sub
into
sbb
lahf
dec
negl
ret
mov
push
sahf
dec
test
push
sub
fucomi
or
stc
orl
push
push
adc
add
fcomps
lahf
neg
mov
mov
cmp
xchg
xchg
icebp
loop,pn
cmp
sarl
ja
icebp
loop
and
adc
imul
mov
lods
subb
mov
pop
push
cli
outsb
jne
mov
add
sti
imul
gs
mov
stc
pop
pop
mov
dec
sub
les
xchg
mov
aas
cwtl
jnp
lods
fistps
cmp
jb
mov
dec
es
bnd
jmp
add
aad
fld
nop
call
jp
inc
xchg
out
mov
lods
je
sub
dec
xchg
fsubl
call
sahf
decl
mov
stc
jo
mov
enter
out
pop
and
push
inc
lock
cltd
aas
arpl
insl
mov
pop
xchg
and
imul
push
push
std
std
loope
cwtl
imul
mov
adc
add
pop
lret
insb
sub
or
or
das
rdtsc
mov
sub
ljmp
mov
pushf
repz
xor
cmpsl
mov
sub
jecxz
inc
lods
mov
dec
es
cs
mov
cmp
xlat
pop
mov
pop
mov
test
movsb
cltd
mov
clc
add
imul
mov
cwtl
ljmp
ljmp
and
lcall
push
jg
mov
add
andl
mov
mov
cmp
sbb
xchg
out
sbb
pop
or
movsl
cmpsl
or
xchg
setnp
mov
stos
dec
fiadds
xlat
sub
ljmp
xor
jns
inc
test
push
mov
cli
cmc
sub
imul
mov
pop
mov
sub
dec
scas
adcb
inc
fnstenv
out
push
lds
jmp
into
add
out
pop
jecxz
hlt
or
pop
mov
push
sbb
stos
and
xchg
imull
cmc
jnp
cmpsl
sbb
inc
xor
iret
stc
mov
fbld
pop
mov
inc
adc
jge
push
ljmp
mov
js
jg
jne
pop
xchg
pop
xchg
xor
dec
out
imul
scas
scas
xchg
pop
jnp
jb
mov
iret
push
add
and
leave
ret
mov
shlb
in
or
or
test
push
ficoml
cmp
add
mov
pop
aas
xchg
mov
lds
mov
xor
xlat
repnz
insb
movsb
cmp
iret
jecxz
test
test
jge
and
leave
mov
ret
or
jno
push
dec
jl
notb
dec
lret
jecxz
iret
jo
dec
dec
scas
decb
and
xor
test
loope
xchg
inc
nop
adc
jge
fwait
in
lea
enter
daa
mov
xchg
cmp
ss
xor
int
dec
ds
push
movsl
mov
cmp
mov
mov
int
movsl
sbb
push
faddl
test
xor
pop
or
cs
sub
sub
inc
pop
sub
push
xor
push
adc
dec
mov
sub
ja
outsb
int3
ljmp
insb
mov
mov
ss
mov
jmp
and
addl
mov
adc
mov
push
pop
push
popa
push
mov
push
mov
cmp
sahf
jl
mov
andb
jp
add
cmp
sbb
adc
mov
hlt
cmp
xlat
lret
xchg
mov
lahf
xor
adcl
sub
and
jmp
xor
js
push
test
loop
jg
fmul
pop
adc
inc
out
add
pop
adc
fs
lods
sbb
les
out
ds
cli
mov
mov
mov
sbb
adc
shrl
int3
pop
lds
fstps
js
les
sbb
hlt
sbb
cwtl
xchg
pop
cmp
sub
sub
fildll
pushf
popf
mov
xchg
sub
cs
fwait
call
xchg
out
jmp
ret
sbb
dec
sbb
mov
dec
ds
je
add
xchg
sbb
lea
push
sbb
push
stc
sbb
mov
sbb
and
mov
addb
inc
mov
mov
in
pop
rcll
divb
pushf
test
movsb
push
and
cmpsl
and
gs
icebp
ficoml
lret
pop
lods
lret
fucomi
rorl
movsb
mov
data16
inc
das
out
in
mov
mov
out
jmp
mov
insl
cmpl
cmpsl
mov
pop
mov
cli
movsl
cmp
inc
adc
xor
cld
mov
fidivs
fstpl
std
adcb
mov
gs
inc
out
clc
xchg
inc
pop
jo
imul
cmp
xor
stos
xor
pusha
out
std
sub
xchg
xchg
xchg
shl
mov
push
mov
or
add
xor
shll
mov
mov
or
out
pushf
test
and
sbb
jo
movsl
lret
std
mov
sub
push
dec
mov
add
sub
dec
add
xor
loop
jns
xor
in
int3
out
xchg
add
cs
mov
mov
mov
mov
dec
inc
cmp
mov
mov
mov
and
jne
les
popf
bound
out
vsqrtsd
imul
cltd
xchg
add
inc
inc
sub
or
loop
adc
jb
and
sti
mov
jnp
rcrl
in
mov
pusha
pop
out
ffreep
sub
xchg
lret
test
inc
and
in
push
push
xchg
rcrl
hlt
pushf
mov
stos
call
dec
leave
sbb
mov
insb
add
mov
cmc
movsb
iret
leave
jp
ret
fmul
cmp
xor
cli
mov
inc
sbb
dec
push
sbb
leave
pushf
lahf
add
or
aaa
ficoms
mov
mov
sbb
or
repnz
jp
cmp
sbb
movsb
sub
push
clc
pop
fnstenv
sub
mov
aaa
xchg
or
fnstenv
cmpsl
sarb
ss
xchg
cmp
sub
inc
xor
adc
sbb
fldl
and
test
lods
or
inc
pop
cmc
pop
cmpsb
add
in
je
mov
daa
mov
push
cmp
fs
dec
push
xor
movsl
mov
arpl
lahf
in
clc
jb
mov
lahf
cld
add
shlb
jne
and
push
js
push
enter
ss
or
push
imul
sub
jbe
outsb
das
call
cmp
inc
jecxz
popl
push
repnz
out
mov
addr16
and
nop
dec
push
mov
iret
nop
sub
or
lcall
bound
lret
popa
sahf
pop
sbbl
jg
xor
sbb
call
fs
xor
sub
test
ret
rcl
cmp
xchg
jecxz
notl
cmc
lret
and
pushf
and
cmp
and
or
cltd
pop
into
add
cmc
cmp
lds
lret
out
rep
xor
pop
out
iret
cs
add
stos
inc
xchg
mov
scas
out
movsb
enter
outsl
mov
xlat
sub
sti
outsl
adc
ficoml
loopne
xor
pop
push
aad
adc
imul
and
xchg
in
xchg
xor
idivb
adc
sbb
mov
mov
pushf
dec
js
jmp
sbb
cs
insb
aad
addr16
nop
sahf
shlb
daa
repz
cld
cwtl
add
jbe
insl
je
sub
pushf
insl
and
cltd
enter
cmpsl
bnd
pushf
push
faddl
lea
fildl
xchg
roll
push
sbb
push
push
jb
push
xor
outsl
mov
rcrl
pop
push
std
dec
aas
adc
enterw
pop
mov
mov
mov
movsl
inc
push
lret
dec
jbe
mov
into
mov
mov
das
int
fsubs
lods
or
ret
out
mov
ret
insl
push
mov
mov
cmpsl
mov
adc
lods
xchg
adc
mov
les
mov
std
xorl
mov
mov
mov
push
sahf
push
test
and
push
jg
xchg
xchg
aaa
ljmp
aas
pop
push
aam
stos
and
jnp
pusha
and
push
xor
mov
sub
je
inc
xor
nop
adc
mov
std
cmp
fcoml
dec
sbb
jl
inc
cmp
stos
or
int
fwait
mov
push
push
icebp
mov
add
or
rolb
insb
push
jg
int
je
icebp
mov
mov
lea
jo
push
ja
jbe
dec
xor
inc
xchg
mov
push
mov
nop
mov
movsb
jge
jmp
std
jmp
fs
subl
insl
sub
push
push
out
adc
pop
jp
rol
and
mov
insb
xlat
jno
pop
mov
cmc
in
iret
push
pusha
clc
mov
stos
xchg
sahf
loopne
pop
insb
and
sub
jo
inc
mov
daa
popf
push
sahf
cltd
mov
testb
xchg
or
xchg
mov
adc
add
adc
pushf
ret
mov
mov
loop
inc
pop
std
arpl
and
in
pop
cmova
fidivrl
add
fcmovne
orb
fidivrs
cwtl
add
pusha
or
repnz
sar
movsb
mov
loop
inc
mov
xchg
add
gs
sbb
aaa
repz
inc
or
fwait
jno
fs
cmp
repnz
add
xor
outsl
jp
scas
mov
divb
test
ja
fildl
sbb
xorl
in
pop
fcomip
enter
daa
mov
pushf
cmp
mov
loope
mov
push
cmp
imul
movsl
mov
incb
lahf
or
loop
jae
lret
sbb
popf
add
or
xor
xlat
in
mov
js
dec
out
cmpsb
sti
jo
sbb
fsubrl
hlt
push
sub
cmp
outsb
xchg
fyl2x
adc
and
push
pusha
sub
subb
xchg
mov
jo
mov
dec
or
dec
pushl
mov
and
sub
pop
lcall
jo
pop
inc
das
sbb
and
test
jno
jg
mov
add
stc
test
std
fs
adc
pusha
ss
out
cmp
dec
nop
and
adc
nop
pusha
xor
mov
data16
or
jne
into
out
into
cmc
add
loope
es
and
loop
mov
xor
lret
add
pop
jle
les
pop
lods
xor
dec
add
xchg
mov
pop
test
mov
inc
notl
jbe
xor
fistl
loopne
nop
out
je
xchg
adc
add
rep
ja
xchg
notb
sbb
dec
aam
xlat
xchg
testb
and
adc
aaa
cmp
jae
mov
or
nop
jns
jmp
fadds
or
int
je
and
push
pushf
in
xchg
lea
es
sbb
pop
subb
js
sbb
or
sub
mov
inc
inc
xor
aas
inc
push
jb
scas
idivb
cli
add
shr
fcomps
std
repnz
inc
cwtl
pushf
bnd
and
out
jae
mov
ror
mov
add
aam
xlat
lock
jmp
mov
movsb
imulb
pop
jecxz
ret
jne
pop
es
sbb
insl
dec
icebp
sbb
cmpsl
mov
mov
je
mov
sub
std
sarb
add
sahf
and
or
and
sbb
ja
fadd
scas
cltd
cmc
inc
adc
or
push
inc
mov
fisttpll
ret
pop
xchg
lds
loopne
push
xchg
jmp
mov
pushf
stos
pinsrw
adc
sarb
nop
fwait
jae
xor
aad
jmp
pop
xor
mov
faddl
mov
out
test
sbb
sbb
cwtl
adc
andl
loopne
adc
xchg
flds
dec
mov
add
push
push
xor
stc
sbb
jl
gs
mov
fstpl
mov
sub
out
jne
xlat
dec
sub
cmpl
inc
dec
jne
and
or
cmpl
bound
sub
rcl
xchg
das
mov
push
out
repnz
sub
add
jo
adc
imul
cmp
insb
clc
mov
jnp
jo
jle
lret
in
push
inc
pusha
xchg
test
filds
push
test
mov
sti
imul
pop
fcomps
push
fwait
push
xor
test
popa
pop
fistpl
out
imul
shrb
inc
pop
lock
mov
iret
xchg
sub
cwtl
inc
das
leave
sub
cmp
nop
adc
xor
jp
push
lret
cs
push
push
fcomi
mov
add
cmp
pop
int3
test
pop
mov
or
int
mov
repz
movsb
aas
ds
xchg
cmp
fcoms
mov
aaa
add
sbb
je
into
jl
out
dec
jno
xor
xor
lret
scas
fwait
jnp
and
mov
push
inc
push
and
cmp
pusha
push
in
inc
jl
enter
daa
mov
pop
cmp
testb
xor
push
sub
loop
cmp
dec
xchg
jns,pt
push
movsl
call
cmp
sub
sahf
sbb
imul
pop
dec
test
jo
mov
fcoml
in
subl
call
sarb
pop
rclb
mov
addb
or
cmp
inc
lods
mov
mov
push
mov
pop
xchg
sub
xchg
out
pop
fwait
lods
adc
push
out
mov
jne
clc
cmp
push
test
push
jmp
jg
xor
mov
xchg
pop
xchg
ret
cmp
adc
scas
nop
ss
jno
cmp
or
nop
not
fincstp
lret
test
dec
shll
xchg
add
leave
or
leave
mov
mov
loop
and
adc
ja
add
and
xchg
mov
lods
out
cld
push
cli
cmp
mov
lods
xchg
psubq
ja
gs
add
cmp
pop
dec
jge
mov
cmpsl
mov
jnp
notb
or
xchg
sub
stos
mov
sahf
lret
imul
bound
outsb
data16
xchg
nop
push
jp
dec
aaa
in
inc
and
dec
fs
je
jbe
jecxz
xor
lahf
test
loope
inc
call
lcall
andl
aad
scas
push
cmpsl
inc
push
jb
inc
pop
sub
aas
filds
inc
jb
aas
ds
test
hlt
sarl
xor
es
push
fcom
mov
mov
adc
pop
subl
mov
lret
sub
jno
loop
bound
ja
popf
das
mov
mov
fwait
mov
daa
fdivrp
ret
add
loopne
enter
addb
sbb
push
sub
aas
popa
int3
lods
push
movb
je
and
cmpsl
insl
adc
cmp
adc
scas
cld
mov
test
or
ret
or
fnsave
fwait
mov
les
pop
test
sub
out
es
mov
pop
out
push
jmp
out
out
jl
add
pop
or
mov
mov
shlb
fs
xchg
dec
pop
sbb
adc
mov
adc
jl
ror
and
inc
movsb
ud0
sbb
cmp
fnsetpm(287
pop
mov
mov
mov
out
push
ja
xchg
test
mov
adc
cli
mov
int
dec
cmp
movsb
jne
in
jg
scas
jbe
out
std
xlat
bound
xchg
pop
jmp
cli
dec
pop
or
outsb
out
mov
sub
cld
xchg
sub
adc
pop
jp
lods
and
adc
jnp
out
jle
loopne
in
xor
mov
xchg
inc
xor
pop
ficompl
cmp
or
push
fwait
adc
mov
je
push
stos
inc
nop
inc
xchg
mov
in
imul
sub
push
mov
repz
jo
iret
out
dec
ret
std
leave
lahf
pop
mov
jae
inc
in
cs
and
or
jecxz
adc
mov
stc
dec
add
xor
pop
cli
das
pop
sti
mov
fdivrp
pop
and
xchg
pop
insl
shrb
mov
inc
fidivl
movsb
lret
push
in
cld
jbe
jne
jge
ss
sbb
push
or
cmp
jno
dec
es
fistpll
loopne
ljmp
mov
or
and
mov
test
or
xor
cmpsb
mov
adc
enter
daa
mov
lea
inc
ljmp
sahf
pop
cmp
jnp
movsl
int
sub
cmc
jno
lahf
dec
xchg
push
sbb
and
mov
mov
imul
pop
lret
js
pushl
movsb
push
outsb
in
adc
jle
jns
testb
outsb
pop
cwtl
lea
fsubr
xchg
push
out
sub
sbb
sbb
and
or
int
jnp
sub
iret
sbbl
xor
sahf
or
test
jmp
pop
mov
cmp
stc
push
mov
or
sbb
sub
mov
cmp
ret
movsl
outsb
notl
clc
mov
cmp
rorb
js
into
lods
cli
adc
nop
mov
xor
and
rcrb
xor
adc
xor
add
ret
mov
mov
fmull
xchg
out
mov
insl
adc
mov
sbb
std
sti
aam
lods
incb
gs
lods
mov
sti
lea
cs
lock
sbb
les
or
dec
or
sbb
ret
into
dec
xlat
adc
sbb
sti
cmp
adc
pushf
dec
xor
jmp
test
sarl
aad
sub
nop
das
insb
std
dec
xchg
dec
lods
inc
xor
in
enter
loop
leave
stc
mov
lea
mov
mov
fs
pop
cmp
call
dec
dec
sti
dec
fistl
mov
aas
inc
ja
jnp
jle
jne
jo
cmp
adc
sbb
idivb
cmp
inc
stc
and
mov
aam
mov
xor
cld
es
lret
xchg
cmpsl
decb
bound
aam
push
hlt
mov
xchg
mov
mov
xchg
dec
pop
imull
repz
sbb
push
mov
push
xchg
mov
ror
call
mov
push
or
mov
rolb
scas
roll
sarb
fnsave
int3
xchg
inc
jl
ljmp
cwtl
pop
push
scas
cmp
mov
aam
mov
stos
mov
dec
bound
or
push
les
rcl
insl
sahf
ljmp
jg
test
pusha
imul
out
gs
add
addr16
xlat
sbbb
cli
xchg
add
pop
hlt
mov
xor
mov
repnz
and
xchg
scas
fists
sub
loopne
pop
mov
in
dec
push
mov
fnstsw
adc
dec
push
xor
je
xor
inc
ret
push
bound
sub
cld
fs
in
subl
xchg
int3
adc
jp
daa
in
cmp
sbb
popf
jnp
and
push
jmp
fwait
pusha
leave
mov
xchg
pop
sub
inc
dec
test
test
pop
jns
popf
mov
mov
mov
inc
stos
mov
mov
sbb
mov
imul
pop
scas
and
push
aad
jnp
popf
insb
push
ret
and
push
mov
andb
nop
inc
and
jmp
cld
jle
push
fdecstp
or
xchg
sub
pop
adc
int3
inc
icebp
cltd
pop
sub
lds
in
push
test
enter
in
cltd
mov
cmp
xlat
jbe
push
andl
pop
lret
adc
push
sbb
mov
or
adc
and
jl
stos
test
dec
jnp
push
mov
sub
sbb
scas
pop
add
arpl
fdiv
outsb
inc
pop
daa
aad
or
jns
adc
enter
daa
mov
adc
je
aaa
loope
cwtl
ss
mov
cmp
pop
std
ds
enter
dec
pop
lahf
imul
sbb
das
in
scas
mov
xor
pop
adc
in
pop
icebp
dec
xchg
js
mov
pop
arpl
push
add
lds
hlt
sub
sbb
outsb
mov
imul
jge
std
andb
mov
hlt
and
filds
lds
test
sbb
je
lcall
pusha
mov
or
sbb
addr16
stos
fcmovnb
test
ret
push
jg
out
insb
mov
daa
aas
stc
int
sub
cld
adc
sbb
iret
loope
cmp
jle
insl
notl
adc
xchg
inc
xor
adc
or
data16
push
adc
xor
add
outsl
mov
adc
in
mov
xlat
adc
aas
cmpsl
add
xchg
out
ljmp
out
fs
mov
testb
orl
addl
addr16
imulb
jge
sarl
lahf
fldcw
adc
push
test
sbb
pop
das
cmp
test
lcall
xor
jmp
test
cs
int3
aad
xor
nop
or
dec
cmc
mov
inc
dec
adc
je
adc
add
fisttpll
sbb
cwtl
push
pop
out
pop
scas
adc
fsubrl
shll
hlt
loop
inc
pop
sbb
pop
aas
sbb
stc
adc
fwait
data16
fistl
push
std
out
mov
int
cmp
and
es
or
and
lret
push
inc
outsl
mov
or
das
dec
stos
xchg
mov
jge
and
es
sub
insl
add
lods
dec
adc
sbb
or
out
lods
or
setl
and
fstpl
pop
jns
rcl
push
add
cltd
lcall
mov
sub
fldl
and
in
pop
xchg
xchg
andb
stos
sti
xor
lock
cmp
js
fmull
out
in
xchg
xchg
ljmp
shrd
add
mov
xor
int
mov
cli
pop
dec
jmp
loop
xchg
cwtl
ljmp
mov
ss
insl
pop
daa
push
jge
mov
add
or
xor
outsl
pop
in
stc
notb
jo
cmp
mov
mov
ja
mov
sahf
mov
jns
mov
ret
dec
add
dec
mov
cmp
jg
aaa
popa
sub
xor
xchg
nop
gs
out
cwtl
mov
pop
jmp
or
sub
adc
mov
sub
jnp
sbb
sbb
stc
sub
pusha
fs
fbld
dec
xchg
ljmp
inc
push
jle
jae
insb
out
and
out
fidivrs
push
repnz
sbb
data16
lret
pop
xor
sub
je
sbb
notl
js
mov
movsb
pushw
ret
iret
leave
lea
scas
hlt
jno
mov
pusha
add
mov
push
pop
mov
mov
int3
cs
test
lds
mov
mov
in
enter
and
loopne
ds
sbb
jbe
xchg
outsl
jge
xchg
adc
sub
loope
inc
fdivs
jno
mov
mov
mov
iret
jo
lea
dec
scas
cmp
and
cmp
lea
mov
pop
xor
imull
cli
daa
mov
jecxz
cmpsl
out
repz
jg
sub
mov
loop,pt
dec
movsl
fisttpl
and
xor
dec
push
mov
scas
out
mov
cmp
pop
sbb
js
ljmp
mov
loope
push
sbb
mov
aam
lahf
sub
in
dec
outsb
push
daa
icebp
adc
mov
push
fadd
rolb
lcall
test
push
enter
sbb
mov
cwtl
mov
pop
lcall
mov
sbb
push
inc
test
cltd
jg
push
imul
jecxz
adc
enter
aam
fdivrs
or
adc
ds
push
dec
or
mov
jb
cmp
push
sarl
outsl
nop
xor
loop
push
pop
imul
mov
lods
rorl
mov
mov
cli
shll
mov
out
push
add
mov
adc
loopne
pop
lock
cmp
aam
mov
les
repz
in
into
sbb
cmp
in
xlat
xchg
pop
mov
adc
scas
jae
lahf
jle
jmp
dec
lea
xchg
lds
aas
mov
decl
sbb
xchg
dec
leave
fwait
popf
je
pop
jo
out
hlt
test
add
xchg
dec
cs
pop
cmc
pop
mov
cmc
add
and
in
fcomi
jg
pop
xchg
sbb
inc
lods
mov
aas
mov
and
sub
shrl
mov
test
hlt
std
mov
inc
cwtl
mov
scas
mov
and
pop
inc
push
in
outsb
cld
jl
cmp
mov
loop
lock
mov
adcb
aam
jge
mov
out
es
insl
imulb
test
push
xchg
daa
cmpsl
scas
pop
mov
popa
test
lods
test
sub
mov
pop
pop
leave
mov
cwtl
rcr
shrb
mov
shrl
and
push
push
lock
jno
clc
daa
pushf
mov
sbb
mov
pop
stos
arpl
stos
lret
jmp
dec
inc
cmpsb
xchg
xor
mov
cmp
or
xlat
test
mov
leave
dec
xchg
dec
push
dec
inc
test
divl
sbb
mov
lcall
and
sbb
xchg
shlb
xor
sub
pusha
xor
in
xchg
fists
mov
mov
pop
rcrl
jno
push
dec
hlt
mov
mov
xor
cmc
dec
in
mov
mov
ds
lcall
lret
jmp
pop
icebp
je
jne
shl
mov
or
push
ja
out
in
cmp
and
cs
movsb
movsl
or
fists
pushf
xlat
je
add
movsl
fistpll
sbb
mov
sbb
jae
andb
adc
dec
xchg
sahf
mov
mov
aad
imul
xor
jle
adc
add
add
add
hlt
xor
add
push
hlt
mov
negl
inc
sub
inc
or
push
jl
inc
xlat
or
xor
pop
dec
pop
mov
pushf
fsubrp
mov
lds
les
mov
aas
push
pop
cmp
jo
push
rcrb
call
sbb
or
or
xlat
ret
jno
xor
jl
rolb
xor
push
jge
add
push
mov
jo
shrb
scas
pop
lahf
sub
test
outsb
loope
inc
jns
cmpsb
adc
dec
enter
daa
scas
pop
in
cmp
pop
loope
mov
cmp
sub
loop
out
and
xor
lahf
cmpsl
daa
ds
xchg
rorb
rcrb
xor
mov
sbbl
frstor
push
cmc
loop
jae
fdivrl
sub
ret
xor
sbb
xor
cmp
mov
mov
mov
add
lret
aas
or
sub
sub
lcall
mov
sbb
jp
orb
pop
sahf
icebp
rclb
sub
and
sarl
dec
stc
cmp
outsb
data16
adc
push
les
push
and
lods
adc
not
cmp
lret
loopne
cmpsb
loop
cmp
scas
or
into
push
sbb
in
shlb
push
fldcw
add
loop
and
adc
push
xchg
add
rol
lods
mov
ds
mov
cmpsb
cli
push
scas
inc
mov
pop
push
sar
loope
hlt
lods
imul
add
int3
loopne
lahf
xor
mov
lcall
repz
aad
lds
sbb
je
xlat
rclb
sub
adc
aas
pushf
dec
bound
cs
ja
aad
jae
nop
sarb
inc
outsb
test
inc
imul
stos
insb
add
adc
pop
xchg
add
addl
sbb
pop
cmp
inc
insl
pop
loop
enter
pop
lea
jb
test
mov
mov
sbb
jns
insl
testb
ds
inc
aaa
xchg
mov
test
mov
pop
dec
icebp
mov
or
mov
cli
mov
and
das
pop
dec
sbb
ja
insb
aam
adc
ret
inc
dec
movsl
es
stos
insl
shlb
cmp
scas
mov
adc
lods
adc
jmp
insl
adcl
mov
mov
aaa
sar
fildl
or
mov
iret
movsl
push
push
ljmp
les
add
jecxz
sahf
pop
push
cld
cmp
mov
repnz
js
out
push
push
mov
xchg
fcmove
or
push
fs
in
mov
int3
adc
test
mov
jne
bound
or
push
mov
ret
shr
add
scas
pop
push
jmp
adc
xor
mov
popf
jns
xor
fnsave
decl
pop
rcrb
rorl
mov
adc
mov
mov
aas
mov
leave
out
push
sbb
fisubrs
bound
jmp
xchg
mov
rolb
dec
outsl
sub
call
lods
xor
rorl
sar
insb
movd
jnp
gs
mov
fisubl
imul
pop
mov
test
insl
and
jae
fdivl
popf
cmp
jge
xchg
xchg
into
push
jo
test
adc
mov
imul
mov
adc
fadds
ret
jge
jnp
pop
hlt
pop
das
cmp
inc
sub
jo
push
push
fmull
fisubrl
out
int3
add
negb
adc
lds
sbb
sub
add
xchg
xchg
in
pop
movsb
neg
pushf
push
and
jge
mov
aaa
rclb
add
sti
jno
lds
cmp
ss
push
pusha
jno
xor
xchg
in
jno
divb
and
stos
test
cmp
inc
or
out
enter
daa
scas
jns
cmp
mov
or
inc
xor
jno
jmp
dec
jne
xchg
adcl
rcrb
xchg
jo
rorb
fnstenv
xor
sub
ja
sub
xchg
sbb
push
iret
pop
and
push
mov
pop
fsubrl
cwtl
dec
sub
test
inc
imul
pushf
pop
rorb
mov
sub
mov
sub
jge
lcall
and
filds
sbb
inc
add
mov
roll
jb
das
mov
push
stc
stc
repnz
jns
stc
add
push
out
ss
lock
cmp
scas
rorb
pop
cmp
pusha
cmp
jge
adc
or
lods
xchg
into
cmp
cmc
lods
addb
es
loop
and
nop
lds
mov
add
data16
and
lods
lahf
js
mov
jns
fiadds
cli
cmp
shr
les
gs
nop
mov
ror
mov
loopne
js
pop
cs
adc
cmc
add
xrelease
xchg
mov
sbb
scas
mov
xlat
movaps
adc
push
mov
sbb
cs
push
out
aad
test
nop
fwait
sti
jno
adc
jbe
orl
cmpsl
jecxz
ret
scas
dec
add
call
adc
jecxz
adcl
cld
sbb
pop
mov
or
inc
jecxz
and
cli
cmp
jb
pop
aad
inc
out
and
mov
testb
std
fcoml
sbb
lahf
cli
mov
and
icebp
xchg
pop
jmp
sarb
ja
push
rcrb
lock
mov
sub
xchg
aam
mov
ret
iret
scas
outsb
es
dec
imul
jno
add
or
cmpsb
sub
popa
mov
jle
jg
call
mov
insl
mov
mov
test
ljmp
xor
mov
pop
or
flds
sub
popf
adc
aas
xor
shl
and
pop
add
stos
test
xchg
pop
xchg
mov
dec
adc
lret
add
call
fsubs
iret
dec
fisttpll
movsl
inc
test
fdivp
xchg
repnz
pop
sbb
add
lods
push
add
lret
inc
std
hlt
xor
test
in
jl
fs
inc
movsb
mov
lea
add
dec
fimull
mov
sbb
mov
psrlw
dec
stos
adc
mov
jge
out
mov
xchg
bnd
icebp
add
adcl
pop
sub
jecxz
lock
sbb
and
sub
jnp
scas
cmpb
outsl
in
mov
xor
sub
add
divb
js
jae
jns
push
push
adc
int3
jbe
push
scas
inc
stos
adcb
imul
sbb
inc
sub
imul
push
lods
stc
push
icebp
call
insl
iret
sarl
leave
bnd
arpl
sbbb
mov
dec
sub
lods
fisubl
mov
int3
out
adc
pop
out
jp
cs
aaa
sub
shl
jne
leave
xor
in
mov
pushf
push
movsb
xor
jmp
push
cmpb
pop
sbb
aaa
jg
insb
or
insb
outsl
jno
jle
jl
and
dec
or
orl
xor
xor
in
sbb
scas
aad
imul
mov
test
add
sub
cltd
add
in
lods
fucomp
enter
daa
lods
push
insl
cmp
add
mov
fnstcw
hlt
scas
push
ds
bound
movsl
lock
cld
outsl
pop
lahf
in
or
inc
in
fildl
add
cs
cmp
lea
and
cmp
pop
pop
sbb
push
cmp
push
and
outsb
cmpsb
sub
and
rcrb
cmp
stc
fwait
or
jo
pop
mov
sar
and
mov
int
push
sub
adc
cwtl
lcall
adc
cmc
stc
sahf
aaa
jbe
test
in
mov
adc
clc
stc
test
repz
adc
je
cli
ds
push
insb
testl
fnsave
push
inc
jg
xchg
jl
or
push
into
sbb
mov
mov
scas
xchg
loop
pop
out
imul
mov
test
mov
mov
cli
insb
inc
loope
and
fwait
sti
aas
pop
and
repz
or
add
pop
dec
out
adc
jne
or
pop
repz
and
sbb
ljmp
sub
cmp
adc
cmc
pushf
mov
sub
sarb
nop
jbe
sub
inc
xchg
leave
pop
dec
lock
clc
cmp
jecxz
fmulp
mov
inc
lea
outsb
call
xchg
lods
ret
pop
mov
jmp
dec
in
fstpt
ds
xorb
jnp
adc
aas
cltd
ljmp
imull
and
test
rcll
pop
push
testb
inc
cwtl
mov
mov
mov
mov
pop
cld
std
inc
mov
ret
mov
std
mov
enter
stc
xchg
das
vmovq
gs
mov
es
imul
push
cmpsl
lods
add
mov
leave
mov
xor
fmull
inc
mov
cmc
lcall
jbe
xor
sub
push
pushf
xchg
push
frstor
rolb
ljmp
negb
movsb
stos
cwtl
mov
out
js
adc
or
sbb
mov
addr16
xor
dec
sub
shl
dec
dec
test
ret
test
mov
xchg
pop
jg
enter
hlt
jo
or
int
fwait
sub
add
or
std
nop
mov
in
insl
jmp
xchg
xor
fdivrs
pop
mov
dec
imul
ret
jl
jl
sarl
dec
or
test
xorb
xor
mov
rorb
jne,pt
leave
data16
mov
push
bound
movsb
jno
mov
and
lcall
or
inc
push
addr16
or
and
stos
ljmp
arpl
adc
inc
test
inc
xchg
ss
jae
and
push
sbbl
jae
pop
jge
sub
pop
mov
mov
stos
repz
outsb
xchg
ret
sbb
cmp
scas
jno
addr16
cmp
iret
and
mov
sbb
fdivs
hlt
popf
mov
outsb
inc
xor
push
push
or
adc
ss
sub
pop
adc
push
jg
mov
stc
scas
mov
cmp
cmp
push
mov
movsb
or
jo
mov
inc
add
or
aaa
jecxz,pt
or
lds
push
pop
cmpsl
jl
adc
dec
jp
iret
push
es
xor
inc
pop
add
mov
mov
push
iret
cmp
es
cmpsb
fwait
inc
out
in
xchg
mov
enter
daa
lods
inc
ret
cmp
cwtl
loope
or
and
outsb
insb
dec
movsl
testl
lahf
add
rcll
jmp
add
test
xor
outsb
pop
std
ret
inc
pop
mov
add
jbe
sbb
sahf
push
je
mov
mov
faddl
loopne
outsb
stos
mov
adc
cli
push
in
pop
xchg
in
add
push
mov
add
push
pop
outsb
and
pop
jbe
aam
nop
int
fbstp
sub
es
mov
sbb
cmp
fidivrl
mov
jg
or
mov
jle
pusha
xor
adc
fxch
ss
jmp
neg
and
sub
lret
xchg
xor
sub
or
int
cmc
cmp
int
or
jno
int3
ret
jle
jecxz
and
add
push
data16
xchg
lods
insl
cmp
pop
mov
out
outsb
call
mov
lcall
push
gs
sbb
popf
gs
insb
sbb
fnstcw
int3
les
es
xchg
push
enter
adc
xlat
lea
sub
jmp
dec
add
jmp
aad
aas
rclb
shl
addb
pop
dec
movsl
test
or
and
es
mov
in
mov
and
adc
adc
pop
outsb
dec
movsb
add
lods
lret
mov
and
inc
add
add
cmp
xor
push
sahf
inc
shll
mov
into
js
std
sub
cwtl
je
cmpsl
mov
fstps
icebp
inc
pop
loope
sub
mov
cmp
or
mov
hlt
inc
dec
das
movsb
rcrb
sub
aam
jmp
sti
es
call
insl
xchg
dec
cli
data16
or
cli
popa
loopne
and
pop
and
jnp
ret
mov
adc
lret
and
loop
imul
push
pop
adc
ffree
popf
xchg
adc
xor
shll
mov
insb
out
fstpt
inc
push
call
push
cmp
int3
cmc
int
mov
cld
loope
enter
pop
xor
in
aad
rcll
sbb
xchg
inc
mov
lds
inc
stos
fwait
pop
icebp
sbbl
lds
add
jmp
mov
jns
scas
dec
in
pop
outsl
xchg
sbb
adc
mov
add
dec
rcl
mov
call
sub
in
push
dec
jo
sub
dec
push
mov
or
out
jnp
jecxz
push
imul
xchg
xorl
aas
sub
fnstcw
cmpb
or
insb
push
lcall
jle
and
in
imul
xchg
add
pop
pop
gs
mov
push
push
lock
inc
cmc
pop
push
sub
mov
sbb
push
imul
scas
aam
sbb
jecxz
adc
mov
ret
test
hlt
call
popl
or
push
shll
fcmovb
sbb
int3
lds
jb
inc
data16
je
sub
inc
and
es
addr16
mov
sub
or
jb
xchg
sub
push
push
cmp
jbe
dec
out
mov
add
std
outsl
jmp
fst
leave
jno
pop
cmp
mov
push
or
jl
mov
add
sbb
sbb
lcall
cmpsb
push
adc
in
jp
ret
enter
daa
stos
hlt
adc
cmpsb
inc
sahf
loope
push
jmp
mov
adc
ds
push
movsl
dec
andl
sti
loopne
and
cltd
push
fimuls
adc
jbe
xor
jg
pop
fninit
sub
push
lcall
dec
clc
push
iret
jle
fsubrl
cwtl
in
jg
out
outsb
or
ds
pop
and
aad
and
fwait
xor
and
fisubrl
xlat
repz
cmp
sub
fbld
push
lock
repnz
cmpsl
mov
jge
insl
test
into
orb
push
stc
pop
xlat
mov
adc
jl
popa
adc
loopne
test
mov
cmp
lcall
loope
lahf
cmc
add
xor
push
outsl
jmp
stos
loop
pusha
sub
adc
jne
add
das
dec
pop
rcll
push
out
sahf
mov
jb
mov
push
cli
shrb
out
add
add
cmp
pop
loopne
jp
pop
mov
adc
loopne
fnstenv
add
xchg
jo
rep
sbb
inc
sbb
cmp
int3
mov
sub
sub
pushf
idivb
sub
ficoml
std
aad
mov
sbb
ja
inc
mov
pop
dec
je
enter
loop
mov
and
std
ljmp
and
pop
sbbl
fcmovnu
je
pop
jo
inc
mov
inc
xor
cltd
aas
xlat
push
mov
mov
dec
mov
fisttpll
xchg
shll
ror
roll
sbb
fsubl
shl
sub
cld
push
lret
mov
fcom
mov
call
dec
cmpsb
dec
das
xorl
sub
test
jg
add
imul
dec
cmc
or
jae
aas
mov
int
rcl
mov
and
push
mov
xor
dec
cltd
in
mov
mov
lcall
out
bound
xchg
cld
mov
xor
cli
fdivrp
pop
add
sub
cmp
xchg
enter
sbb
movntq
enter
out
or
push
or
add
xchg
lods
mov
test
xchg
flds
inc
and
es
xchg
daa
add
sbb
lcall
dec
pushf
jns
cmpsl
and
imul
sti
pop
mov
mov
mov
add
mov
pop
imul
xchg
out
pop
pushf
push
bound
ss
xchg
push
cwtl
jmp
inc
xlat
mov
mov
jle
or
shlb
aad
jp
xor
pop
insb
mov
and
and
pusha
push
insb
repnz
push
pop
xchg
fcompl
jg
cltd
pusha
mov
jmp
push
mov
cmp
fdivs
mov
insb
xchg
mov
fnstenv
sub
dec
mov
mov
push
jbe
adc
cmp
leave
push
xchg
mov
arpl
cld
lds
mov
inc
cltd
fidivrl
jbe
sub
repz
mov
mov
ficoms
dec
xchg
fcmovb
inc
daa
dec
mov
fidivs
rorl
and
push
pop
dec
cmc
jbe
iret
pop
jge
sbb
lea
aaa
mov
xchg
adc
addl
dec
pop
call
jmp
aaa
int3
cmp
scas
jb
and
push
out
push
gs
inc
inc
cmp
cmpsb
mov
adc
enter
daa
stos
and
inc
loope
fidivrs
negb
in
add
movsl
add
pop
in
inc
adcl
push
sbb
cwtl
stc
xor
outsb
subl
js
loopne
pop
sbb
ljmp
dec
outsb
ljmp
jo
lret
imul
mov
xor
sub
loope
aad
jo
out
ss
icebp
loop
fiaddl
int
jbe
sub
test
adc
lcall
cli
mov
cmpsb
pop
sahf
and
test
jg
subb
cs
aas
into
and
adc
mov
cmp
fwait
sbb
lret
jno
fstps
cmp
push
es
les
out
enter
mov
je
lret
loop
xor
insb
mov
xchg
add
ficoms
cmp
inc
out
push
movsl
cli
add
mov
ljmp
iret
inc
gs
jbe
loopne
mov
ficoml
pop
mov
les
stc
and
insb
or
cmp
cltd
xchg
sub
cmpb
inc
or
leave
repz
aad
gs
dec
mov
incl
xor
jae
jecxz
lret
mov
subl
adc
pop
pop
aam
call
dec
cmpsb
xor
fisttpl
and
mov
inc
dec
pop
cmp
jbe
pushl
insl
xchg
mov
push
lock
std
js
cld
cwtl
ljmp
mov
push
pop
icebp
out
pusha
iret
cld
jle
mov
pand
mov
xor
stos
sbb
bound
and
dec
jle
aam
jae
ret
or
adc
arpl
xor
lock
sub
jb
punpcklwd
sub
mov
inc
icebp
mov
mov
push
xchg
rcrb
add
sub
mov
aaa
jge
in
adc
adc
cmp
cmp
lock
mov
lods
arpl
out
mov
es
push
sahf
xor
cmovbe
pushf
or
pop
inc
mov
jbe
mov
push
xchg
loope
loope
mov
mov
mov
fwait
mov
xchg
repnz
out
xchg
cmp
cmp
mov
mov
xchg
mov
in
sub
jns
add
jmp
xchg
xor
mov
inc
pop
mov
lret
into
pop
dec
adc
lods
jge
mov
ljmp
cmp
cmp
addr16
xchg
sbb
cwtl
mov
sub
iret
dec
or
pop
push
mov
hlt
in
or
ret
jge
jle
or
sub
punpcklbw
push
cmp
leave
arpl
jae
cltd
arpl
jbe
fstps
mov
mov
adc
notl
jo
inc
lret
xlat
scas
lcall
adc
mov
cmp
xchg
adc
into
data16
jle
lea
aaa
jns
cmp
mov
push
shrl
fwait
add
js
pop
mov
mov
lds
repz
inc
adc
repnz
or
js
pop
movsb
lods
lods
jno
lods
mov
xchg
jge
jp
sbb
xchg
aaa
jnp
xchg
or
or
fcmove
jb
adc
xchg
dec
mov
ss
pop
pushf
and
inc
cmp
lds
push
xor
ljmp
cltd
push
enter
daa
test
and
loope
shl
popa
or
cmp
inc
mov
and
cld
lahf
popa
out
push
test
rolb
jp
inc
push
cmp
add
aaa
mov
pop
sbb
push
cs
push
jge
cld
faddl
and
outsb
shll
pop
adc
mov
jne
adc
mov
mov
out
and
dec
mov
int
xchg
test
pop
xchg
xor
mov
sahf
jae
jbe
pop
sbb
imul
test
jno
ret
fs
jg
jl
mov
leave
adc
fs
push
adc
ret
mov
out
sbb
fcoms
jne
dec
mov
repnz
or
into
cmpsl
adc
xorb
out
fsubrs
ss
loop
aaa
shrb
mov
adc
jge
add
mov
data16
lods
and
les
mov
mov
fistl
sti
sti
mov
jg
shll
inc
loopne
fucomip
pop
leave
into
xor
cltd
push
psubusw
leave
ffreep
test
leave
mov
sbb
push
or
dec
pushl
push
in
adc
xlat
pushf
dec
sbb
jmp
adc
stos
sub
xor
xor
addl
shrl
scas
pusha
je
movsl
scas
jecxz
negb
out
imul
nop
cs
pop
xchg
mov
xchg
mov
fstpt
cltd
arpl
inc
int
xchg
imul
aas
adc
add
mov
repz
rcll
aam
xchg
stos
inc
std
pop
aas
ret
popf
dec
mov
rorl
icebp
lds
int
jle
jnp
shl
mov
adc
add
add
sub
pop
aam
mov
ret
lcall
insl
cmp
inc
dec
jmp
fsubl
movsl
dec
sbb
and
mov
mov
push
outsb
mov
jno
ds
inc
and
push
dec
cmpsl
test
call
push
jl
cmp
push
clc
fstps
ljmp
jne
push
hlt
pop
stos
push
bound
xchg
and
into
push
jns
test
movsl
es
add
leave
cmp
or
hlt
repz
dec
and
in
xor
or
xchg
cmp
inc
push
jg
or
lods
push
in
jmp
xchg
ds
sbb
pop
add
mov
push
bound
popa
test
jne
loope
pop
push
aas
mov
cmp
mov
xor
stc
ja
or
dec
cltd
out
pop
mov
test
mov
cmp
ss
sbb
iret
jne
sub
mov
js
out
sbb
iret
lods
vdivpd
xchg
call
sahf
out
out
inc
add
or
lcall
push
and
and
sub
insb
xchg
hlt
xchg
jnp
fwait
cltd
jle
pop
mul
xor
fistps
mov
add
inc
scas
imul
jae
mov
push
cmp
popf
and
push
ljmp
xchg
push
aas
fistpl
pop
push
imul
in
scas
std
sbb
adc
pop
iret
pushf
dec
lcall
fidivs
leave
rclb
inc
aas
cmp
or
mov
adc
xchg
inc
mov
push
pop
sti
int3
xchg
fwait
pop
rcrl
sub
ja
imul
das
jg
movsb
cmp
push
sti
cmp
mov
sbb
lods
cwtl
aaa
cmp
jo
mov
shll
clc
jl
sbb
rorl
mov
push
xor
mov
push
scas
xor
mov
push
sti
testb
mov
ret
in
das
add
call
adc
cmp
and
loope
enter
rcll
xchg
out
cli
sbb
movsl
adc
ficompl
push
cmc
jge
out
scas
lcall
loop
or
pop
push
xor
mov
lcall
push
aam
dec
fsubrl
pop
sub
outsb
orb
out
mov
data16
aam
sbb
ret
lods
sbb
jl
ja
cld
jmp
push
loopne
js
push
popf
jae
jo
les
adc
lcall
push
sbb
lock
faddl
xchg
add
stc
xchg
cmp
les
sub
cmp
adc
mov
or
iret
lret
imul
daa
sarb
adc
jb
pushf
into
mov
sub
push
xor
and
loop
jno
imul
dec
add
jne
lods
or
mov
push
out
mov
in
mov
inc
or
sti
stos
xor
mov
adc
xor
pop
call
repz
fstps
adc
les
test
mov
arpl
xlat
mov
jle
jns
stos
adc
nop
push
pushf
test
mov
aad
sbb
nop
mov
adc
repz
jecxz
data16
mov
lea
pop
call
psubusw
andl
or
pop
scas
adc
dec
inc
test
push
aas
mov
scas
jb
iret
cmpb
dec
mov
dec
std
std
repz
cwtl
pusha
fildll
sbb
mov
cmp
cld
aam
fwait
lret
in
nopl
sub
adc
das
and
mov
cmp
rcl
dec
dec
ret
sub
mov
insb
jp
cmpsl
cmpsl
ror
fsubs
imul
sbb
mov
aam
push
pop
nop
mov
mov
cltd
mov
test
cmp
push
imul
clc
decl
insb
ljmp
mov
add
stos
inc
aaa
or
outsb
jp
imul
dec
xor
add
repnz
or
xor
or
xchg
and
dec
mov
jne
dec
jo
sbb
add
or
jbe
fwait
adc
into
push
cmp
cmp
add
jnp
xor
push
in
pop
adc
push
sahf
cmp
nop
adc
pop
out
pop
ja
xchg
dec
mov
mov
das
inc
mov
test
adc
mov
sbb
out
negl
bound
arpl
push
fistpll
sub
push
out
add
sub
lds
addr16
jp
mov
xor
int
add
jle
mov
in
aad
pusha
xlat
mov
ds
push
stc
loope
aaa
repnz
jae
shrb
push
pop
mov
sub
ficoms
dec
jae
imul
icebp
scas
pusha
jae
push
fwait
mov
sub
test
adc
clc
hlt
adc
out
out
fadds
mov
push
iret
cmp
xchg
enter
rcrl
add
inc
fiadds
pop
test
xchg
add
mov
xlat
mov
cmp
mov
push
dec
sbb
jbe
or
jge
jecxz
sbb
lret
test
movl
dec
movsl
mov
push
xchg
lods
shll
push
aad
scas
xsha256
cmpsb
aam
addr16
jno
mov
adc
pop
inc
icebp
cmp
cmpsb
sub
insl
in
push
dec
sbb
jecxz
and
cmpsl
rcl
cmp
enter
adc
aaa
imul
movsb
adc
movsl
sbb
sub
push
sub
xchg
add
testl
int3
idivb
pop
ja
xor
lahf
cmp
fldcw
fwait
push
loopne
push
sub
xlat
fisubrl
outsb
cltd
xlat
rcll
inc
ret
xchg
xor
mov
xor
mov
jmp
jae
jecxz
mov
mov
test
popl
lcall
inc
mov
sbb
pushf
sahf
or
test
repnz
movq
xchg
repz
fs
jp
adc
mov
cmp
int3
icebp
pushf
test
jp
xor
out
xchg
dec
or
inc
sub
insl
or
sbb
xor
addr16
loop
ficoms
push
shr
sbb
jmp
xor
out
js
lock
nop
mov
jmp
xchg
sahf
call
or
mov
test
inc
adc
gs
cmp
movsb
xchg
scas
pop
pop
pop
sbb
aas
or
fsts
xor
mov
xor
sbb
or
dec
push
push
xlat
enter
in
jno
adc
dec
popa
pushf
mov
lahf
aaa
adc
aad
or
decb
mov
jbe
clc
in
je
roll
mov
mov
mov
jne
jmp
pop
ficompl
sub
mov
aas
fistl
fistpll
inc
mov
clc
jb
iret
test
or
icebp
and
negb
mov
cwtl
sbb
ja
mov
fisttpll
lret
pop
push
add
xchg
out
out
push
shl
out
pop
das
lcall
mov
das
pop
mov
ret
mov
daa
in
insl
or
js
cmpsb
inc
mov
popa
push
testb
out
mov
scas
in
mov
mov
scas
xchg
xor
xchg
pop
fistpl
mov
movsl
fsts
push
and
cmp
fwait
xchg
clc
lret
ljmp
ficomps
scas
stos
xor
lods
out
lret
xchg
mov
pop
push
das
out
mov
add
xor
or
shrl
mov
in
add
lock
into
decl
inc
jle
and
adc
fwait
inc
stos
and
fistl
add
xchg
lods
xor
inc
jns
repnz
out
dec
xchg
movsl
das
bound
aaa
out
pop
stos
inc
push
ja
xchg
mov
fndisi(8087
mov
sbb
jne
mov
mov
into
mov
cmc
mov
dec
or
jle
fildl
lods
aaa
pop
sub
sarb
jp
ficompl
insb
adc
jnp
and
jle
xor
push
pusha
jb
repz
sub
pop
outsb
das
mov
jae
cmp
popf
je
cmc
mov
push
in
xchg
int3
mov
out
imul
shrl
loop
xchg
adc
addr16
pop
push
ret
fmul
xor
aas
arpl
insl
mov
dec
les
cmpsl
dec
cli
inc
dec
lock
inc
mov
add
jl
das
xchg
or
mov
loope
shrb
icebp
repnz
mov
push
cltd
ds
jbe
pop
stos
jge
out
nop
sbb
xchg
aaa
mov
lahf
loopne
pop
jl
jl
sbb
adc
pop
push
js
xorl
out
cwtl
inc
and
sbb
push
xchg
int3
jl
sbbb
cmpsb
lods
fimuls
enter
daa
cmpsb
adc
cmp
inc
mov
cmp
lods
dec
movsl
and
jp
cmp
xchg
push
std
inc
jmp
add
imul
mulb
sahf
fistpll
pop
sbb
fsts
aad
faddl
inc
outsb
cld
and
adc
sbb
push
xchg
iret
xorb
mov
imul
int
push
sbb
data16
pop
push
cltd
cltd
lcall
orb
inc
sahf
lods
jbe
test
adc
adcb
jg
adc
mov
mov
jle
push
mov
adc
adc
mov
cmp
xchg
or
clc
ja
xor
in
or
xor
push
icebp
cmc
in
xchg
xor
icebp
mov
push
pop
loop
or
dec
mov
push
add
jne
data16
fcompl
mov
jle
cli
sarl
mov
sbb
mov
or
call
cmp
loopne
or
mov
adc
sub
xchg
mov
mov
cmp
dec
mov
adc
outsb
pushf
dec
cmpsl
sub
test
and
jne
pop
aad
arpl
nop
jae
sahf
dec
or
pusha
dec
outsl
jbe
je
and
jge
dec
mov
mov
call
or
jo
orl
mov
pop
cmc
pushf
icebp
inc
sub
loope
mov
cs
jb
add
clc
adc
and
sbb
inc
imul
std
adc
int
push
adc
mov
movsb
xchg
cld
sub
push
mov
out
mov
xchg
push
mov
das
ficoms
mov
es
jbe
aas
ret
inc
inc
out
outsl
repnz
int
dec
fdivr
shll
push
popa
push
or
mov
shrl
xlat
and
xchg
pop
into
mov
add
lods
loope
mov
push
adc
mov
push
clc
jne
pop
xchg
aaa
pop
sub
fwait
pop
mov
pop
pop
sahf
popf
stos
and
xchg
xchg
testl
inc
add
test
or
sysenter
cmp
adc
xchg
popa
mov
mov
test
lcall
lods
decb
inc
adc
xchg
jb
fstps
jle
inc
add
mov
cli
shlb
dec
xchg
xchg
test
xchg
hlt
add
mov
aad
mov
gs
lea
or
dec
jb
aas
mov
stos
lea
or
dec
ret
jne
nop
shll
mov
bound
fldenv
dec
jae
orl
das
sub
mov
and
jmp
fsubs
push
mov
inc
jnp
mov
in
arpl
fbstp
xchg
js
movsl
adc
inc
rorb
jae
clc
test
andb
mov
cmpsl
je
stos
sbb
xchg
and
add
push
scas
add
adc
push
cmp
mov
gs
stos
sbb
hlt
stos
cmovp
or
dec
sbbb
rcrb
push
int
push
push
add
int3
inc
sbb
pop
pop
mov
fiadds
repnz
leave
ror
mov
bnd
or
push
xchg
mov
movsb
pcmpeqd
fdivrl
ja
arpl
in
jno
push
insl
jl
aad
dec
add
push
pop
ja
xor
les
scas
int
xor
lea
lods
test
pop
xor
andl
xchg
xchg
enter
daa
movsl
call
loope
mov
sub
sbb
insb
adc
and
aam
icebp
lahf
fisttpll
loop
shlb
sbb
das
lea
jp
sub
push
push
pop
lds
lods
pop
push
push
push
push
arpl
push
fsts
fsubrl
test
adc
notl
and
sub
nop
mov
cmp
and
popa
or
int
add
mov
lea
lcall
mov
push
ret
sahf
dec
imul
jno
rolb
or
xchg
stc
popa
xor
faddl
adc
mov
repz
scas
cmp
inc
ja
lret
xorl
popa
lcall
xor
cmc
stos
jecxz
xor
out
and
push
inc
imul
jl
add
cmp
je,pt
mov
jle
out
and
cli
add
jmp
xchg
xchg
sti
mov
loop
or
enter
into
loopne
cltd
mov
adc
fldcw
sarb
repz
cli
xchg
arpl
bound
ret
xlat
inc
rcl
ror
inc
adc
aaa
jmp
clc
rorb
je
push
cs
and
nop
dec
sar
dec
imul
jns
out
jnp
push
dec
leave
jecxz
dec
rol
push
loop
fisttps
push
pop
push
insb
addr16
cli
fcomi
adc
pop
cwtl
dec
ljmp
loop
aas
xchg
lcall
jb
imul
rorl
out
cmp
mov
sbb
mov
push
push
mov
pop
icebp
and
adc
mov
mov
push
xlat
lock
stos
das
mov
sbb
aam
or
or
insl
fcom
sbb
xlat
sbb
cmpsl
movsb
lret
jno
adc
fsubl
lods
inc
push
mov
hlt
pop
mull
and
scas
pop
in
mov
sarb
inc
repz
cs
test
inc
mov
fstp
mov
clc
mov
jecxz
jbe
jnp
push
adc
mov
add
stos
adc
out
nop
cmp
push
in
mov
and
push
push
mov
in
xor
add
clc
xchg
scas
fmuls
push
inc
test
or
xchg
stos
xchg
sbb
dec
inc
lods
int
or
int3
pusha
fwait
mov
inc
test
xor
and
lcall
in
xor
xchg
in
pcmpeqd
xchg
icebp
aaa
mov
and
inc
ja
adc
gs
mov
lahf
mov
add
jne
testb
movsl
mov
jne
iret
aad
test
fucomip
xchg
cmp
sbb
jmp
adc
mov
out
cli
adc
mov
mov
jp
or
mov
jle
jnp
mov
stos
in
rclb
aam
push
xchg
into
sub
lods
inc
fistl
std
jae
cli
push
push
inc
in
add
mov
out
shrl
jp
cmpsb
sbb
mov
out
scas
mov
push
jo
adcl
sbb
push
leave
and
hlt
cmc
and
inc
dec
sub
or
popf
addr16
inc
dec
pop
call
add
xlat
fistpl
popf
fstp
jmp
push
lret
shl
adc
repnz
cmp
mov
fs
push
aaa
dec
shll
pop
mov
sbb
push
bound
ss
out
jno
push
stos
jl
gs
dec
repnz
push
ds
loope
adc
scas
lods
mov
cwtl
stos
into
push
daa
repnz
inc
sahf
movsb
lds
lret
lea
enter
daa
movsb
pop
dec
cmp
sbb
sub
das
mov
xchg
jmp
outsl
pop
ret
lahf
cld
popf
loope
mov
nop
add
dec
outsb
xor
call
pop
in
sbb
dec
xchg
cmc
pop
xchg
scas
cwtl
push
xor
xor
ds
add
test
rcl
adc
inc
sbbb
mov
arpl
cmp
or
in
mov
jb
pop
pop
mov
or
es
leave
mov
mov
sahf
repnz
movsb
test
xor
dec
xrelease
shll
sbb
fs
adc
inc
ss
cmp
std
sti
mov
lret
mov
cmp
fwait
pop
or
dec
data16
push
popf
jno
jb
mov
outsl
add
dec
loop
pop
clc
imul
into
sub
loop
add
adc
xor
aaa
out
dec
aaa
mov
in
repnz
lock
cs
mov
loopne
cmp
fs
movlps
xchg
imul
pushf
aam
xchg
es
sbb
std
addr16
xlat
test
sbb
bound
mov
das
mov
aad
cmp
nop
sub
ret
imul
dec
pop
test
je
mov
jecxz
into
xchg
int3
int3
jge
pop
stos
lahf
or
movb
movsb
cld
in
cmp
roll
mov
inc
icebp
add
aam
cli
add
mov
stos
cmp
rcr
mov
cld
std
bound
repz
mov
add
clc
popf
insl
cld
cmpb
mov
out
loopne
inc
nop
and
int3
js
das
pushf
dec
sub
adc
addr16
lock
adc
insl
mov
into
mov
mov
cwtl
add
lock
pop
jle
and
mov
leave
pop
rorb
fistpl
ret
adc
lret
jno
mov
clc
jmp
ficoml
cmpl
je
pushl
ret
arpl
xchg
test
cwtl
jo
cs
or
insb
xor
push
andl
outsl
sbb
dec
fstps
adc
inc
inc
jnp
or
out
fwait
rorb
push
les
jo
fmuls
out
xor
mov
daa
in
sahf
into
xchg
xchg
jnp
mov
xorl
pop
fldt
in
gs
inc
dec
pop
es
dec
mov
mov
gs
xor
jne
jb
mov
outsl
out
jae
and
xlat
inc
jmp
fists
xchg
subl
movsb
out
mov
sbb
leave
or
jne
jp
mov
into
insb
test
lcall
jge
in
sbb
fcomip
xchg
mov
mov
in
jae
inc
mov
popf
jmp
xadd
imul
sbb
and
imul
or
mov
adc
cmp
ret
icebp
leave
cwtl
iret
add
inc
mov
arpl
or
inc
dec
dec
gs
sbb
inc
lret
fldcw
add
jle
sbb
inc
lret
and
jge
sbb
xchg
and
sub
ret
movsb
out
push
lods
push
xchg
push
jge
cwtd
sbb
mov
jne
pop
jno
jb
jl
lret
popa
push
and
push
xor
jp
test
mov
fwait
test
repnz
inc
sub
enter
push
enter
daa
mov
cltd
fsubp
mov
sbb
cmp
xchg
cltd
ds
test
lret
xor
imul
arpl
add
mov
xor
in
adc
lods
fistps
lea
aad
mov
mov
mov
jle
testl
adc
lods
scas
add
insl
push
orb
fiadds
inc
add
out
sbb
adc
sub
sub
lcall
mov
clc
loop
sbb
adc
test
mov
inc
into
add
iret
sbb
fs
ss
lods
cmp
mov
aad
lret
fnstenv
mov
xor
or
pusha
outsl
cmc
cmp
mov
xor
xor
negl
adc
je
add
out
data16
cmc
lods
mov
sbb
cli
push
jb
or
pop
sbb
sti
adc
leave
mov
addr16
adc
xchg
mov
jecxz
adc
jmp
sub
imul
jge
jg
cmp
xlat
les
lcall
mov
pushf
dec
cmpsb
xchg
jmp
out
cs
sub
aad
mov
cmpsb
dec
daa
or
inc
push
dec
cli
dec
aam
jg
out
hlt
jecxz
xchg
xchg
iret
movsb
lea
cs
mov
fstps
jg
adcl
push
fimuls
sahf
inc
or
and
jb
aam
mov
xor
into
aam
sub
std
or
sbb
mov
lods
out
outsb
inc
pop
icebp
iret
rcrb
cld
stos
or
lret
sbb
add
or
lock
jns
das
jnp
pop
mov
or
add
ret
hlt
pop
sub
insl
cmpsb
mov
dec
int
int3
cmpsl
mov
fcoml
push
sbb
xor
and
push
cmpsl
sub
sub
or
jmp
pushf
mov
mov
lock
pop
popa
frstor
pushf
push
clc
es
lods
ljmp
sbbb
stos
out
fisttpl
cmpl
stos
fstl
add
pandn
dec
or
xchg
inc
xor
cld
ret
mov
lock
jge
mov
test
stos
out
lret
sbb
adc
inc
fimull
outsb
aam
fwait
incl
sahf
push
addr16
syscall
inc
jb
add
add
xor
gs
jge
in
sub
loope
stos
mov
xchg
mov
xchg
hlt
sbb
dec
dec
sbb
mov
repz
mov
add
dec
imul
jne
jns
mov
insb
cmp
bound
or
sub
rcll
and
lea
or
leave
jp
mov
mov
ss
popa
mov
in
cmpsb
int3
pusha
fidivs
xchg
adc
jmp
inc
icebp
cwtl
mov
ror
jp
lret
fiadds
mov
sub
xlat
jl
sub
sbb
pop
lcall
jns
push
and
adc
dec
iret
fcomi
ret
mov
nopl
arpl
outsb
std
inc
push
fdivrl
push
dec
fcmovu
ficoml
jne
add
fidivrs
leave
cmp
mov
fisubrs
ss
lds
and
sbb
cmpsb
mov
jbe
dec
cmp
sub
push
aad
pushl
sub
jge
add
sbb
xorb
xchg
adc
jno
mov
jl
add
dec
rorb
cli
push
add
xor
aad
gs
push
outsb
and
out
test
mov
cmp
fs
cltd
sub
lret
daa
mov
int
loope
out
sub
scas
cmp
fnstsw
int3
cmp
shll
dec
mov
cmp
mov
dec
dec
sbbb
fstps
xor
xchg
fwait
jge
pop
cmp
lds
ret
adc
xchg
push
out
lret
push
fisubs
add
outsb
mov
test
mov
push
inc
fildl
lea
ds
adc
push
cmp
push
repnz
int
jno
sub
or
or
xchg
lcall
mov
sbb
xor
test
in
addb
pushl
xchg
hlt
adc
xchg
cmp
jae
sbb
andl
lret
adc
xchg
fidivs
cmp
mov
mov
cmc
add
xor
ljmp
sbb
add
fdiv
data16
sbb
lods
jae
test
subl
repz
enter
les
je
addr16
ds
stos
mov
pop
mov
xchg
cltd
fldenv
sub
testb
xchg
lods
mov
loop
xlat
add
sub
adc
and
stc
dec
sbb
inc
arpl
add
aad
mov
push
dec
xchg
rorl
push
je
fsub
mov
lock
push
cmpsl
call
pop
insb
xchg
adc
dec
imul
inc
dec
out
cs
daa
mov
jb
xlat
jg
aam
inc
and
test
jno
insb
movsl
lcall
lea
popa
jg
icebp
cmpsb
daa
ds
lods
cwtl
lret
xchg
dec
mov
imul
lea
dec
shll
add
gs
mov
std
es
shrb
inc
aad
enter
mov
imul
ret
shrb
jp
mov
shrl
mov
dec
cmp
cltd
rcll
test
cltd
scas
mov
lods
lret
push
std
adc
clc
popa
imul
xor
outsb
ljmp
xlat
pop
add
cs
fisttpll
out
mov
sub
jbe
lods
fsubs
or
enter
dec
mov
repz
xor
test
fsubs
sbb
sub
or
xchg
and
or
add
push
xchg
mov
xor
nop
push
jns
cmp
in
mov
xchg
xor
mov
addr16
push
push
lahf
ja
inc
cmc
dec
ds
cld
push
bound
mov
lock
jecxz
mov
test
out
xor
aam
jmp
jne
insl
addl
out
add
or
fnstenv
and
pop
jnp
fildl
in
das
frstor
sbb
xor
sbb
std
jno
cld
pop
add
xchg
rclb
mov
call
push
mov
aad
xchg
jg
xor
dec
jno
imul
gs
inc
cmp
dec
lret
xor
jne
leave
xchg
in
hlt
push
sub
inc
sbb
or
push
jecxz
inc
leave
pop
jmp
add
stos
int3
repz
pop
sbb
pop
cmp
push
shlb
repnz
sub
cmp
push
call
push
and
inc
jbe
mov
adc
and
fisttpl
pop
add
and
jl
push
ss
aas
add
out
inc
xor
xor
scas
dec
xchg
and
dec
shrb
and
dec
jo
cmpsb
cmp
lahf
in
adc
enter
daa
mov
mov
loope
jmp
mov
ds
ret
xchg
movsl
inc
or
inc
arpl
lahf
pop
outsl
push
sbb
mov
outsl
repz
xor
roll
mov
xor
flds
fsts
or
outsb
jmp
fs
arpl
adcb
jg
mov
jg
gs
push
cmc
insl
and
xchg
lcall
dec
mov
data16
inc
adc
sahf
fcmovnb
insb
test
add
mov
stc
cmp
sar
adc
or
jmp
push
cmp
lret
mov
push
loop
or
daa
into
mov
shll
out
push
outsl
mov
mov
imul
mov
add
dec
jl
pop
add
mov
cli
rcr
mov
xor
sti
jae
gs
xchg
pop
jge
data16
loopne
xchg
cltd
pop
rcrl
xor
mov
pushf
repz
add
lock
mov
sbb
scas
std
xlat
inc
shll
xor
sub
lret
jmp
mov
add
push
outsl
orl
xor
dec
ret
je
aaa
mov
enter
aad
cmp
lret
cmpl
mov
out
pop
pop
arpl
inc
push
dec
jmp
lret
and
push
inc
iret
mov
inc
inc
out
aas
or
push
mov
dec
pop
js
lret
mov
fscale
push
aam
cwtl
jge
xchg
push
outsb
jmp
cld
add
lret
mul
js
fmuls
aas
lock
xchg
stc
push
not
insl
pushf
movsb
ret
adc
adc
mov
insl
je
push
dec
ret
pop
andl
lods
jb
fstpl
lods
out
pop
test
incl
jge
enter
xchg
pop
imul
inc
cltd
or
mov
popf
scas
lahf
push
rorb
clc
pushf
stos
push
xchg
jb
loopne
in
pusha
les
stos
int3
jns
out
sbb
xchg
pop
or
push
test
popf
add
add
dec
insl
xor
inc
enter
inc
xchg
push
dec
pop
leave
loopne
or
bndldx
jle
or
inc
sub
fwait
pop
into
fistps
lods
sub
push
dec
faddl
sub
mov
aam
mov
jns
fwait
es
inc
and
mov
test
pop
or
sbb
pop
pushf
dec
xor
or
lods
xchg
xchg
mov
xchg
in
jne
mov
mov
mov
out
adc
bound
push
jmp
inc
adc
pop
aad
mov
or
or
push
jmp
ljmp
insb
jmp
sbb
in
sbb
pusha
adc
add
xchg
sbb
cmp
jae
test
out
popf
pop
popa
les
loop
imull
xchg
hlt
sbb
push
lods
imul
jp
mov
bswap
xchg
sub
ret
imul
test
add
push
push
inc
push
pop
mov
rcl
in
mov
inc
fidivrl
add
xorb
or
pop
dec
fidivs
test
adc
and
dec
mov
cmp
fdivl
nop
cmp
jbe
test
sbb
cmp
xor
jno
lods
sarb
dec
scas
mov
enter
imul
in
sub
ds
push
sub
pop
cmpsb
mov
pop
out
enter
daa
mov
push
or
call
int
cmp
xchg
add
movsl
dec
iret
jge
fisttpl
mov
add
add
stc
adc
test
mov
mov
cmpsl
js
inc
loopne
xchg
cmp
push
jns
push
mov
repz
lret
frstor
adc
ds
popa
int3
xchg
jno
cmpsb
in
jmp
jnp
mov
dec
cmp
je
scas
push
clc
inc
outsb
int
fsubrs
sub
movsl
pop
or
lcall
fisttpll
mov
mov
xorb
sub
hlt
dec
mov
jp
cmpsl
flds
inc
int3
or
jmp
push
fmul
stos
das
test
aas
out
cmp
testl
cmc
mov
xor
and
adc
imul
pop
push
add
daa
add
lods
inc
xchg
jg
pop
cli
add
sub
scas
mov
and
outsb
mov
sbb
loopne
test
pop
loopne
notb
add
ljmp
mov
nop
xchg
xor
or
cmp
lods
mov
sub
test
xorb
dec
sbb
cmpsl
sub
dec
adc
scas
xchg
jo
xchg
leave
fisttpl
add
dec
cmp
je
ret
mov
xlat
jbe
fsub
push
lea
hlt
test
shl
addr16
jg
fneni(8087
and
pop
adc
pop
pop
inc
aas
lods
dec
stos
jb
jp
mov
push
push
div
mov
std
test
cwtl
cmp
out
mov
jge
push
inc
xchg
sub
scas
lret
cmpl
stos
add
lock
push
das
sbb
mov
lock
sub
mov
xor
fmuls
bound
mov
hlt
adc
lods
pop
scas
jbe
scas
push
xchg
mov
iret
mov
mov
mov
rcrb
out
cltd
inc
into
test
out
insl
ja
insb
repz
push
addl
clc
xlat
jg
xchg
mov
repz
lcall
outsb
xchg
out
jg
lret
xchg
mov
arpl
cld
sub
mov
orb
pop
mov
mov
stc
sti
pop
dec
shl
test
out
fwait
xchg
mov
fistpll
inc
lahf
cltd
aad
das
xchg
sbb
push
mov
add
inc
repnz
jae
mov
jns
lahf
mov
pop
and
mov
dec
cmp
int3
cmp
cmc
popa
dec
and
insb
mov
jle
mov
and
inc
dec
adc
jns
jb
cli
mov
hlt
sti
out
out
pop
shll
insl
cmp
xchg
or
andl
out
push
mov
mov
pop
or
dec
pusha
jp
or
jge
push
mov
jp
push
jle
mov
pusha
scas
fs
xchg
in
aas
and
lret
faddl
icebp
jae
mov
popf
test
push
push
and
stc
xchg
sub
adc
scas
js
adc
adc
jle
iret
repz
adc
ret
in
hlt
insb
imul
or
add
pop
inc
repz
fisubrl
out
add
jmp
sbb
sbb
cmp
cltd
mov
mov
outsl
add
cmp
in
xor
sahf
in
jbe
inc
lret
sub
aaa
icebp
inc
or
aas
jno
pop
mov
dec
sbb
mov
xor
out
in
pop
lods
cld
and
lcall
push
mov
cmpsb
inc
add
in
dec
pop
enter
daa
lahf
dec
adc
loope
pop
fildll
push
in
cmp
lods
inc
movsl
push
stc
leave
and
mov
push
ret
sbb
adc
xor
in
or
js
popa
jge
shrl
push
push
int3
fistl
ss
das
and
mov
lea
sar
adc
sbb
jbe
sub
xchg
cmpb
lds
ja
push
sti
loope
sub
xor
xchg
lcall
mov
or
fwait
pop
popf
adc
fstpt
push
xor
stc
stos
lahf
xchg
fs
and
imulb
test
cmp
movsb
inc
shl
shlb
popf
sbb
xor
mov
cmp
pop
push
cmp
test
adc
xor
and
inc
fwait
imul
adc
push
pop
add
or
mov
decb
out
fsubrl
and
mov
or
idiv
shll
fnstsw
push
loopne
mov
ljmp
rcll
and
out
les
int3
cmc
repz
cmpl
sbb
add
xlat
rcrb
test
sbb
fsts
pushf
cli
cmp
jmp
outsl
lods
sub
aad
cmpsl
pause
jo
adc
mov
inc
sahf
data16
mov
icebp
je
movsb
add
fisttpl
call
xchg
adc
push
dec
xorl
ljmp
jl
inc
fnsave
inc
js
xchg
aas
dec
aaa
mov
sbb
push
jp
popa
call
imul
out
cwtl
repz
nop
orb
add
cld
push
mov
mov
sbb
shrl
divl
mov
out
insl
aam
pop
outsl
ret
xor
ret
es
mov
mov
dec
mov
enter
dec
jmp
or
cmp
in
cmpb
xchg
mov
pop
cmpsl
outsb
jo
sub
jg
js
mov
jl
push
inc
out
ffree
sbb
call
xchg
ljmp
in
add
daa
or
loop
cli
xchg
call
push
rorb
pop
pusha
cmc
add
mov
xor
fldenv
mov
xchg
add
dec
daa
fsubl
add
cmp
sbb
sti
lea
aam
fwait
mov
fdivrl
add
call
lret
mov
push
jns
dec
pop
in
push
popf
xchg
sbb
pop
xor
and
ja
adc
cmpxchg
gs
mov
mov
adc
out
into
push
bound
jb
xchg
insl
or
les
sahf
sub
cwtl
outsb
hlt
addr16
add
in
and
push
fsubrl
out
sub
cmp
scas
push
in
and
pusha
dec
repz
xchg
rclb
pop
es
inc
sbb
cltd
das
push
xlat
xor
popf
lods
fldenv
push
pusha
push
hlt
stos
cmp
dec
in
sbb
sahf
xchg
imul
push
sbb
mov
fdivp
jecxz
push
cld
ret
add
jmp
inc
hlt
mov
arpl
inc
inc
pop
lods
cmpsb
or
jg
xchg
inc
inc
add
fcmovu
jae
add
lods
int3
mov
negb
push
or
mov
push
rolb
mov
cmp
enter
or
jbe
ss
sbb
mov
or
mov
pop
xor
jl
sub
push
nop
mov
add
inc
xor
out
mov
test
jmp
lahf
jo
lds
jg
mov
mov
sahf
test
xchg
loope
lret
stos
sub
adc
ds
push
in
pop
xchg
lahf
mov
in
xchg
push
sbb
adc
or
xor
lcall
sub
adc
fsts
mov
bound
sub
mov
pop
shl
stos
or
inc
mov
inc
mov
xor
xchg
mov
push
int
iret
xchg
sub
in
pop
push
mov
lcall
stos
mov
push
mov
lret
addl
bound
shlb
bound
movsb
adc
pop
ss
ret
xchg
neg
pop
lods
fdiv
jg
or
mov
xor
jge
cmp
sahf
int
enter
push
sub
fldt
xor
popa
imul
popf
mov
pushw
cltd
jns
getsec
cmp
jge
mov
mov
je
sub
orb
pop
add
sub
pop
mov
pop
adc
adc
xchg
jbe
mov
mov
cmp
pop
out
xlat
ljmp
sub
mov
pop
pushf
movsl
xor
jmp
cli
add
lea
aad
sbb
rorb
push
adc
je
fdivs
jecxz
bound
push
xchg
movl
mov
dec
stos
in
fstpt
pop
stos
pop
or
fs
xchg
jl
aas
ljmp
mov
in
ja
sarl
lcall
scas
cmp
mov
adc
icebp
add
enter
dec
lret
inc
or
mov
ljmp
mov
pop
cmp
xor
into
cmp
ret
mov
xchg
mov
dec
mov
pop
cmpsl
popf
jmp
mov
and
in
das
lret
or
out
mov
fst
add
fwait
sub
push
sub
add
dec
test
fucomp
jno
clc
dec
in
xchg
das
test
shll
or
mov
dec
stos
cltd
movsb
or
inc
insb
adcl
pop
cmp
mov
mov
jp
nop
and
mov
jns
dec
mov
lea
inc
hlt
sbb
sbb
add
xor
jne
out
mov
jp
insl
pushl
fnstenv
in
fxch
xchg
insb
aas
add
imul
pop
cmp
mov
and
sub
inc
or
aas
nop
jne
ja
mov
mov
out
lods
sub
and
jg
sti
pusha
sub
arpl
out
imul
xchg
mov
jp
outsl
test
insb
sub
pop
jle
enter
cmp
fildll
sbb
pop
pop
sub
sub
loopne
lcall
mov
lahf
cmpsb
mov
mov
mov
sbb
decl
scas
ds
popf
push
popa
jge
adc
inc
rol
cmp
push
leave
bound
hlt
add
xor
push
mov
push
lds
jnp
sarl
int3
lahf
and
ficomps
mov
mov
xchg
mov
adc
push
outsb
movsb
xor
push
pusha
addr16
jbe
fwait
mov
and
sbb
jae
outsl
inc
sti
or
pop
popa
jno
sub
dec
sti
add
jae
in
push
push
push
jo
mov
jp
and
push
lcall
loop
cmpsb
dec
xlat
inc
in
sbb
mov
daa
popf
mov
cmp
pop
loope
pop
xchg
sub
cmc
dec
cmp
jp
jnp,pt
rep
pusha
jns
and
sti
push
push
les
add
das
xor
repnz
push
negl
repz
jmp
xchg
pop
dec
nop
xchg
push
stc
push
xchg
dec
xchg
test
sub
cltd
cwtl
adc
iret
out
sbb
jb
loopne
jmp
and
sbbb
mov
stos
sbbl
jp
les
add
sahf
addr16
pop
test
ss
jg
mov
mov
sbb
les
scas
adc
test
sbb
int3
lret
push
xor
jg
cmp
das
stc
or
jl
into
dec
cld
fdiv
jecxz
push
xor
sub
dec
gs
push
out
divl
adc
cmp
add
adc
fwait
lods
mulb
adc
test
jl
call
mov
fbstp
push
and
loope
orb
mov
mov
or
fnstcw
std
les
aas
fistl
addr16
insl
cmp
add
push
adc
add
jmp
dec
and
lock
mov
nop
es
int
popa
and
les
push
je
pusha
in
jecxz
mov
jl
mov
mov
ret
pop
jmp
jo
sahf
adc
dec
xchg
push
and
insl
ret
pushf
pop
mov
push
inc
jmp
xchg
inc
scas
sub
jb
hlt
xchg
mov
ja
pushf
roll
out
idivb
jle
cwtl
imul
pushf
mov
xor
cld
lods
inc
sub
mov
rorl
mov
dec
lock
pop
inc
das
mov
push
mov
aad
jmp
cltd
outsl
sti
ret
dec
mov
stc
insl
adc
dec
scas
jecxz
cmpsl
pushf
xchg
pop
mov
cmp
xor
mov
sub
in
jbe
stc
and
pop
in
sbb
roll
sbb
adc
cmpsb
push
int3
or
stos
clc
mov
outsb
mov
aad
mov
push
fldcw
test
xchg
xchg
jbe
lcall
iret
xlat
add
jmp
xor
mov
cmpsb
xchg
addr16
dec
cmc
jle
test
cmp
test
clc
cmp
inc
sub
or
lret
add
sbb
incb
xchg
xchg
push
sub
xor
xor
test
in
mov
xchg
mov
and
mov
clc
fdivs
sahf
loopne
dec
std
xchg
mov
dec
nop
mov
outsb
mov
jnp
aad
mov
xor
bound
repz
insb
test
ss
es
sub
mov
xlat
addr16
pop
nop
jp
scas
das
and
or
insb
xchg
push
cmp
mov
jle
aad
in
mov
repnz
and
xchg
push
cs
xchg
iret
pop
inc
xor
xorl
mov
popf
cli
loope
mov
fidivrs
stos
and
xchg
xor
int
fs
xchg
test
out
xchg
and
adc
fld
dec
pop
repnz
fldcw
hlt
dec
test
mov
inc
arpl
sbb
jne
jp
inc
mov
fiaddl
add
lahf
int3
mov
pop
add
mov
lds
lods
xor
mov
scas
ljmp
imul
scas
xor
jbe
je
jge
push
sbb
pusha
shll
cs
cmc
or
cmc
jnp
lds
jl
mov
dec
push
dec
push
push
mov
xor
mull
pop
scas
movsb
icebp
sub
mov
lcall
push
imul
enter
daa
pushf
divl
cmp
adc
pushf
cmp
scas
mov
and
mov
cmp
dec
sbb
jmp
dec
sub
mov
je
mov
fisubrs
push
call
shrb
subb
outsb
fisubrl
adc
stos
or
vpmacsdd
sub
mov
outsb
repz
sub
push
stos
sub
sbb
add
or
scas
lods
mov
sbb
decl
sahf
or
sbb
andb
sahf
jg
arpl
fisttpll
stc
sarb
fs
scas
iret
ss
in
inc
cmp
aad
inc
idiv
in
lret
lret
xor
xchg
imul
mov
into
cs
mov
xor
push
and
fisubl
shrb
add
jl
or
pop
lods
fnsave
mov
or
out
cs
cli
iret
sarl
dec
popa
and
fsubp
pop
incb
out
mov
dec
packssdw
jl
adc
pop
fldcw
std
aaa
repz
stos
xchg
ds
sbb
aad
xchg
xlat
jge
ds
mov
ss
sti
lahf
std
jmp
pop
imull
push
int
aad
xor
dec
rcr
inc
xlat
pop
lcall
cmp
jecxz
pop
cmp
in
pop
lea
incl
call
add
test
xorl
sub
inc
jb
or
out
ljmp
das
dec
mov
add
stos
rcll
adc
decb
lcall
mov
movsl
add
icebp
mov
cmp
fdivrp
lret
and
imul
xchg
sarb
xor
add
mulb
es
mov
dec
stos
shlb
cmp
xchg
popa
push
pop
das
lods
add
inc
adc
das
out
inc
and
xchg
sub
pop
add
xor
movsb
loop
cltd
sbb
push
xchg
mov
scas
test
iret
jne
aaa
shrb
xchg
lods
ja
ljmp
mov
push
test
mov
or
arpl
cwtl
cmpsb
scas
vmread
or
rcl
xor
mov
mov
add
lea
inc
xor
inc
sti
imul
or
test
push
fmull
addl
lcall
xchg
iret
jns
sbb
xchg
or
mov
mov
mov
sbb
mov
lock
mov
xchg
mov
mov
out
mov
imul
inc
inc
inc
jmp
aaa
lds
andl
mov
push
xor
cmc
addr16
fs
jp
mov
aas
insb
add
or
leave
and
pop
xchg
in
cltd
sub
pop
lods
fucomip
pop
lret
xchg
cmp
and
inc
les
mov
popf
and
push
sbb
nop
nop
xchg
mov
pushf
sbb
aas
subl
lock
out
idivl
outsl
aad
iret
outsl
mov
push
leave
push
cmp
cwtl
mov
fwait
test
inc
data16
or
lock
inc
ret
dec
cmp
notl
add
jmp
fisubs
popf
rcl
push
mull
repnz
sub
movsb
inc
add
jbe
ret
outsb
sub
sbb
pop
lret
inc
xor
mov
dec
fisttpl
cmp
sub
mov
shll
movsl
push
inc
mov
mov
cmpsb
dec
jl
in
ljmp
daa
fwait
in
cmp
ljmp
cmp
cmp
cmpsb
ds
movsl
outsb
mov
lahf
adc
push
push
out
sbb
idivl
nop
xor
lock
pop
dec
sbb
mov
jge
push
and
aas
hlt
inc
and
outsl
push
cli
outsb
cmp
jecxz
rolb
lods
mov
mov
pop
insb
mov
mov
push
pop
inc
in
out
scas
sub
and
roll
mov
fistpl
pusha
jp
sahf
lods
repz
inc
lret
jg
sbb
xor
scas
fs
stc
and
xor
ss
push
insb
cmp
nop
push
cld
idivl
out
jb
fdivrl
int
or
sarb
cmc
jno
lea
or
outsl
fisttpl
dec
imul
jb
add
or
stc
xor
push
mov
cli
add
jmp
in
mov
dec
sti
lea
imul
in
loopne
arpl
jnp
dec
adc
push
stos
cli
jge
inc
pusha
mov
jecxz
adc
mov
cwtl
cmp
lds
xlat
mov
iret
push
adc
adc
jmp
ss
mov
outsl
aad
aad
nop
fdivl
and
dec
mov
popf
je
insl
mov
out
dec
lea
rcrb
subb
push
in
pop
or
mov
fcmovne
push
jle
imulb
addb
jne
movl
or
lea
testb
std
inc
sub
cwtl
and
push
int3
out
xchg
cld
add
lret
nop
or
movsb
mov
cld
xrelease
das
jae
cli
mov
ret
addr16
aam
ror
ret
insb
push
lea
adc
pop
dec
movsl
sbb
sub
addr16
stos
lods
jo
sub
mov
bnd
mov
and
shlb
xchg
cltd
push
mov
dec
mov
inc
aaa
push
push
add
cs
push
and
mov
shrl
or
mov
jle
data16
out
outsb
into
sbb
jae
push
dec
pop
add
sbb
mov
fs
imulb
scas
incb
ret
mov
test
inc
insl
xchg
icebp
jl
pop
ljmp
adc
fwait
ja
mov
jg
xor
jnp
les
lret
mov
decl
mov
jns
push
enter
addr16
pop
mov
mov
clc
cltd
mov
outsb
sbb
ja
mov
fdivl
scas
stc
sbb
dec
mov
add
mov
call
fnstcw
mov
rolb
sar
and
test
enter
adc
dec
push
and
inc
insb
imul
in
movsl
jle
lret
cli
in
fiadds
mov
pop
fisttps
adc
xchg
or
adc
push
roll
jae
test
push
jecxz
jecxz
dec
jp
mov
pop
mov
cmp
loopne
std
sbb
sbb
imul
scas
lods
test
lret
stos
adc
mov
ret
ror
stos
mov
jecxz
pop
arpl
mov
nop
push
inc
outsb
add
add
mov
pop
arpl
sub
cmp
inc
shl
ret
lahf
shl
stos
cmp
mov
push
dec
xchg
sbb
addl
cmp
lods
imul
jae
pop
jl
xchg
sbb
das
imul
jae
xor
lods
arpl
scas
bound
daa
and
jmp
inc
push
adc
inc
cltd
cmpsb
sar
pop
in
roll
enter
daa
lcall
loope
out
pusha
sub
xchg
out
cmp
inc
add
in
cwtl
movsl
jne
adc
jge
int
xor
and
sbb
lcall
pop
in
jmp
pop
jb
sarb
cmp
push
stc
add
std
cmp
sub
popf
outsb
mov
dec
mov
pusha
xchg
orb
movsb
and
mov
clc
test
into
addb
imulb
sub
pop
add
cmp
fisttpll
pop
sbb
or
sbbb
jg
nop
mov
inc
dec
stc
ds
loop
aad
jmp
ss
xor
fmuls
test
jnp
xlat
lret
pushf
xor
dec
cmp
or
xor
add
outsl
mov
jmp
imul
or
add
in
adc
lods
stos
inc
mov
cli
xor
pop
std
in
and
and
cmp
push
decb
lret
loopne
int3
cmp
lcall
fstps
pop
out
mov
xchg
les
sbb
dec
in
pop
xlat
sti
fsub
sub
xchg
cmpsl
adc
pop
jmp
rolb
aad
nop
mov
or
popa
stos
inc
std
push
pop
dec
add
je
icebp
xor
xor
ljmp
call
add
pop
add
outsl
andl
pop
inc
dec
pop
cltd
fdivr
inc
sbbb
inc
pushl
push
jb
inc
idivl
sbb
in
testb
cwtl
lcall
mov
cmpsb
add
pop
out
xor
lret
incl
mov
outsb
push
lock
add
das
push
push
test
mov
lcall
ret
sti
add
insl
dec
mov
lahf
push
popa
jle
dec
lods
fucomi
fidivrs
jne
les
lret
pop
inc
js
rorb
sbbl
inc
and
push
adc
mov
arpl
decl
aaa
rol
popl
pop
into
imulb
roll
adcb
inc
xchg
outsl
add
std
pop
or
andb
mov
cmpsl
sbb
or
cs
sub
stos
test
adc
xchg
push
sbb
dec
aad
sub
xchg
jne
fwait
cmpsb
and
push
and
inc
add
out
push
ljmp
arpl
jns
xor
in
cmp
mov
adc
xchg
out
sub
pop
ja
outsl
add
push
mov
fnstenv
mov
iret
std
jne
dec
or
sub
xor
addr16
xlat
test
int
leave
cmpl
insl
sub
jg
addr16
or
and
insb
mov
xchg
cmp
in
xchg
pusha
push
call
sahf
xchg
fistpll
pop
cmp
divb
xchg
rclb
cmpsb
or
popf
outsl
sbb
mov
fwait
pop
pop
stos
jl
xchg
aaa
sbb
sbb
into
xchg
lret
lret
push
jge
fstl
and
inc
mov
xchg
leave
ds
pusha
arpl
cli
or
out
pop
inc
rcll
ficompl
xchg
das
and
pop
xchg
or
nop
rorb
mov
popa
loopnew
call
push
lea
sub
jge
test
aaa
imul
jno
ja
jl
aas
mov
inc
out
incl
xor
or
movsb
scas
inc
pop
dec
and
bound
loopne
xchg
inc
ret
xchg
xchg
mov
lods
stc
daa
cltd
dec
sbb
cmp
mov
sub
ret
push
cmp
inc
inc
movsl
jl
sub
sbb
mov
push
clc
lahf
push
mov
push
sbb
aad
add
xor
in
cwtl
jbe
lock
cltd
or
pop
dec
lea
in
sub
sub
or
xchg
jmp
out
pop
cmp
movsl
gs
dec
subb
mov
mov
mov
jno
or
into
fsubrl
movsl
adc
pop
subl
cmc
mov
xchg
bound
mov
cmp
xorb
jg
xchg
push
mov
push
push
cmc
sbb
fs
cmpsb
stc
adc
pop
pushf
ss
mov
cmp
push
push
hlt
idivl
cmp
dec
pop
sbb
and
ret
cmp
mov
stos
into
xlat
jae
cmc
push
mov
outsl
cltd
aam
loop
xor
shl
icebp
adc
cli
and
pop
or
xchg
sub
lods
xchg
add
mov
dec
add
cli
push
dec
dec
in
mov
sti
jmp
scas
scas
cmc
gs
popa
jg
push
dec
pop
mov
mov
icebp
les
je
and
mov
cmp
adcl
jecxz
xor
xor
jl,pn
pop
aad
inc
pop
nop
xchg
outsb
fmuls
sub
inc
adc
dec
dec
jp
sub
cmc
jecxz
xlat
sub
in
add
call
xorb
cmp
fldt
cld
repnz
cmp
pushf
inc
pop
add
inc
sbb
xchg
sbb
inc
xchg
out
and
fistl
test
or
vpshab
out
dec
pop
icebp
mov
xor
in
pop
movsl
sti
lret
outsb
cmp
lock
mov
inc
add
mov
inc
das
xor
mov
mov
cli
aam
adcb
mull
insl
lods
lahf
fmull
cmpsl
xcrypt-ctr
cmpsl
cwtl
push
jp
aad
jbe
xchg
adc
ja
nop
mov
add
cli
mov
popa
mov
jae
ret
test
add
fmul
push
cmpsl
xchg
push
ljmp
or
stos
inc
xchg
js
xor
add
push
sub
cld
add
rorb
mov
push
mov
test
jne
xchg
cld
repnz
addr16
inc
sarb
or
stos
mov
aad
add
add
add
xor
int3
pop
mov
addb
shll
mov
testl
pusha
pop
in
pop
ja
cmpsl
fisttps
dec
mov
mov
sub
or
cmp
mov
in
fucomip
or
scas
incl
jmp
cwtl
adc
dec
pop
mov
pushf
mov
or
inc
addr16
mov
andl
sub
insb
inc
fwait
pop
jnp
xchg
xchg
jle
xchg
loope
mov
out
outsl
fisttps
mov
pop
jo
cmp
pop
out
jae
lret
sbb
mov
pop
cwtl
stos
out
imul
push
push
cmp
or
scas
sub
popf
adcb
imul
ret
in
leave
mov
mov
arpl
push
cmp
jl
or
popa
lea
inc
cmp
ficoml
mov
movsb
mov
pop
rcrl
fimuls
mov
sarb
pop
push
cmp
add
jl
jmp
pop
stos
sbb
fcmovb
or
pusha
and
jl
mov
cmp
xor
arpl
stc
scas
and
or
stos
arpl
push
sub
in
lahf
mov
enter
daa
cwtl
ret
or
outsl
adcl
jl
sbb
dec
pushf
aam
sub
movsl
orl
and
mov
out
sbb
jnp
ret
xor
jb,pn
cmp
lock
gs
mov
int
lods
les
push
inc
jl
push
push
outsb
data16
ss
and
push
push
lret
cmpb
cmpsl
mov
aad
mov
rcll
push
adc
int
adc
sub
ds
aaa
repnz
sbb
adc
ficomps
dec
leave
push
orb
stos
mov
or
cmc
fs
add
pop
pop
dec
bound
shrl
stc
mov
lret
mov
mull
or
lods
into
mov
adc
xchg
outsl
js
sahf
loop
stos
push
imul
cmp
xchg
repz
lods
jns
push
mov
mov
out
jle
cli
fwait
ds
mov
notb
sti
lcall
movsl
and
mov
je
adc
pop
les
repz
cmp
xchg
dec
iret
fcomps
shl
xlat
jns
arpl
test
push
xor
push
and
fisttps
fs
insl
push
xchg
inc
and
fisttpl
scas
add
jecxz
xchg
lock
lea
dec
hlt
jmp
int
xchg
adc
divl
pop
je
pop
fisttps
jb
mov
inc
xor
add
fisubs
mov
test
testb
in
ss
mov
mov
clc
inc
mov
js
icebp
or
popa
cld
test
lds
cwtl
jge
lock
mov
int
lods
sub
pop
pop
ret
sbb
inc
es
cltd
shrb
cmp
xchg
dec
xchg
cmpsl
xchg
xchg
dec
mov
lods
ljmp
es
mov
and
add
push
pop
cmp
shl
jno
cltd
stc
pop
loopne
inc
ficomps
in
cltd
push
fwait
pop
sarl
clc
scas
icebp
popf
xchg
test
xchg
shrl
mov
mov
out
xchg
les
push
add
jge
hlt
sub
add
jnp
out
ret
push
mov
in
xchg
aam
dec
clc
stos
push
test
imul
aas
dec
push
sbb
mov
or
mov
fwait
add
jne
push
or
add
imul
rcrl
jns
aad
in
in
xchg
inc
xchg
icebp
mov
pushf
jnp
add
cmc
pop
lahf
rolb
mov
int
mov
cltd
fcoml
sub
push
jne
mov
inc
iret
mov
bound
outsb
notb
mov
dec
sub
jne
push
idivl
mov
pop
and
jg
jnp
mov
jle
adc
or
fbld
inc
xchg
test
inc
inc
push
pop
jae
cmp
add
mov
sbb
bound
xchg
in
scas
sbb
lods
mov
scas
nop
cltd
inc
push
or
mov
jmp
loope
lods
push
mov
hlt
jmp
arpl
pop
inc
inc
jb
cmp
fsubl
inc
mov
add
add
iret
int3
and
and
lock
mov
pop
jle
cmp
cmpsb
movsb
jae
rclb
outsl
jbe
jg
jge
outsb
pop
sbb
pop
aaa
jmp
jge
jno
hlt
jl
adc
dec
xchg
mov
bound
mov
mov
and
mov
push
inc
loope
push
cmpsb
pop
ss
in
xchg
in
daa
xchg
sarb
mov
repnz
mov
cs
insl
jecxz
mov
and
mov
pop
fisubs
add
ja
xor
mov
cld
push
lcall
push
js
and
leave
and
push
mov
ljmp
pop
add
int
adc
icebp
lock
and
scas
adcb
mov
ds
and
pop
dec
push
adc
mov
sub
addl
aas
jmp
shll
fcomps
sbb
test
test
pop
and
mov
aas
movsb
stc
arpl
fs
mov
outsb
jae
ss
mov
cmp
jl
idivl
mov
jae
inc
cli
fisttpll
rcrl
popf
out
cmc
lea
jns
push
xor
loop
push
ret
outsl
jno
leave
rcr
add
daa
imulb
repnz
or
jbe
loope
into
pop
movsl
mov
popa
and
cmc
inc
lods
inc
sub
push
jle
pop
idiv
test
outsl
cmp
fld
iret
les
outsb
repz
rorb
or
pop
cmp
cld
fnstcw
xlat
mov
sbb
push
rcrb
xchg
cs
and
aad
inc
mov
fwait
loopne
ss
cmp
faddl
pop
jnp
repz
lea
in
or
jle
sub
add
subl
pusha
mov
xchg
test
adc
ljmp
xor
mov
adc
shl
dec
mov
std
fnsave
pop
cwtl
lret
mov
mov
push
sub
jecxz
sbb
scas
dec
push
lret
dec
ja
mov
sbb
lock
mov
lahf
xchg
mov
pop
test
ret
test
mov
sbb
xchg
mov
sahf
cmpsl
xchg
push
sarb
ret
out
lods
sbb
add
mov
push
test
mov
lahf
inc
out
rol
push
xor
push
out
mov
push
hlt
push
pop
fs
cli
ror
clc
ljmp
ljmp
cmc
pop
pop
mov
out
cli
push
fcoms
fistpll
add
sbb
pop
in
xor
push
fldenv
adc
cmp
test
hlt
jne
mov
mov
inc
out
pop
ret
xchg
rcrb
bound
xchg
adc
aaa
out
ud0
cmpsl
mov
lods
cmp
sahf
jecxz
cmp
lahf
mov
adc
cmpsl
and
pop
lea
scas
popa
mov
mov
or
mov
jne
inc
push
mov
les
out
mov
bound
fnstenv
subl
fmull
inc
sub
jo
aad
negb
call
xchg
mov
jnp
popf
cld
jle
sub
in
fiaddl
and
movsl
filds
stc
or
and
inc
jne
testl
in
mov
pop
fs
stos
aad
movsl
xchg
cmp
nop
sbb
fldt
fstpt
push
push
add
adc
mov
ret
cmc
leave
mov
xchg
add
out
dec
inc
jne
or
imul
xchg
inc
sbb
add
adc
pop
pop
cwtl
cmp
sarl
lds
loop
pop
and
adc
pop
xlat
ljmp
add
push
mov
insl
jge
mov
add
test
nop
or
dec
jno
iret
jmp
mov
push
test
push
xor
sbb
add
sub
test
inc
mov
jbe
fldl
insl
enter
daa
xchg
inc
adc
aad
push
loope
push
call
cmp
outsl
cmp
jmp
dec
jbe
sub
pop
and
sub
mov
jb
js
jne
pop
or
inc
push
repnz
fdivl
dec
cmp
sbb
xchg
int3
lea
andb
mov
add
and
xchg
push
push
xchg
test
xchg
dec
or
push
push
jae
rorb
cmp
sarl
fwait
mov
jno
sbb
pop
sahf
fsubl
jmp
add
cmpb
inc
mov
movsl
and
sbb
ret
adc
ss
cmp
aaa
mov
xchg
lret
sbb
movsl
jl
cmp
push
imul
orb
cmc
push
addl
xchg
loop
cmp
mov
mov
mov
push
mov
inc
xchg
orl
add
out
in
int3
ret
cmp
clc
sbb
gs
cld
loopne
ss
pop
push
mov
inc
sbb
stc
sahf
int3
les
cmp
out
lods
mov
rclb
sbb
aaa
push
stos
xlat
testl
dec
pushf
std
shll
movsl
cmpsl
cmpsl
aad
xlat
cmp
and
cmc
inc
dec
mov
pop
je
dec
insl
mov
neg
mov
mov
std
call
std
add
pop
rorb
decl
jmp
pop
and
adc
and
jecxz
test
addr16
inc
aam
shll
into
adc
nop
inc
jle
test
pop
cwtl
xchg
mov
mov
or
cld
fcmovu
inc
lret
mov
aaa
jbe
es
pop
das
into
rorl
push
sub
add
ret
aaa
insl
arpl
lahf
cmp
insl
popa
sbb
dec
mov
xchg
xchg
clc
mov
fimull
pop
lods
xchg
mov
add
mov
mov
jno
cltd
lods
add
pop
inc
mov
and
dec
frstor
dec
push
clc
and
scas
push
lret
xchg
rcrl
or
stos
adc
out
pop
xlat
lock
addr16
push
mov
rcl
add
or
fstl
dec
mov
pop
xchg
jle
mov
test
adc
xchg
jmp
data16
inc
fstpl
scas
sbb
add
push
outsl
jae
test
sub
jns
or
xchg
in
insl
mov
stc
int3
mov
adc
callw
jns
mov
leave
lods
mov
ja
adc
repnz
push
cmp
mov
int
out
movsl
mov
mov
xchg
stc
dec
and
pop
test
or
jns
cmc
subb
sbb
and
jle
insb
add
jnp
inc
xlat
jle
loope
in
adc
pusha
mov
xor
sub
or
and
cmc
test
mov
jne
or
notl
fadd
stos
dec
fwait
popf
xchg
xchg
adc
dec
imul
scas
push
cmpsb
sub
lea
xchg
mov
iret
test
es
leave
sbb
pop
xchg
mov
cmc
enter
xorb
inc
add
rcr
out
inc
mov
adc
add
sub
dec
cli
fidivs
xlat
sarb
mov
lods
fs
cmp
psubw
sub
jge
out
sbb
out
aaa
addr16
xor
mov
add
jl
cmp
push
mov
jmp
je
pop
scas
mov
dec
lock
or
insl
inc
incl
xchg
in
push
add
mov
add
or
loope
push
jnp
mov
loopne
ds
andb
xchg
lock
int
push
push
add
dec
sbb
es
add
das
scas
xor
pop
addb
xor
pop
es
inc
lret
add
dec
fcomp
ljmp
aam
adc
cmpsl
ds
loope
push
xorb
mov
adc
and
xor
push
sbb
int
cmp
pop
jge
inc
lcall
rorl
jno
sahf
jg
sub
loope
jmp
fists
jg
mov
ja
sarl
shlb
fcoms
or
stos
and
cmp
repnz
divl
cmp
sbb
xchg
xor
cmp
mov
or
sub
cmc
sbb
or
outsl
adc
dec
aad
scas
lea
add
push
mov
in
mov
mov
mov
xor
inc
mov
aaa
cmp
sti
cmpsl
and
mov
loopne
add
adc
adc
repz
gs
sbb
jb
out
xlat
ss
cvtpi2ps
imulb
adc
mov
push
jmp
pop
gs
rcl
mov
int
dec
pop
jae
inc
pop
pop
and
and
je
jae
jecxz
das
mov
repz
jl
adc
add
adcl
inc
frstpm(287
je
pop
enter
and
pop
aas
subl
and
iret
jns
sarl
push
not
sbbl
inc
cwtl
les
mov
pop
or
add
les
mov
mov
sbbb
mov
das
lods
cli
xlat
mov
lea
mov
and
cs
xchg
mov
mov
dec
repnz
repnz
xor
jl
and
stos
and
roll
daa
shrb
dec
cltd
sahf
enter
repnz
push
in
mov
clc
pusha
nop
xchg
pushw
inc
ljmp
push
pop
mov
inc
stos
add
out
rorb
scas
push
insb
push
xchg
push
in
adc
mov
or
xor
jp
mov
sbb
orl
cs
ret
dec
xchg
loop
sbb
mov
lret
popf
fwait
xchg
les
push
push
lret
nop
add
insl
add
xor
loopne
jns
sbb
push
pop
sahf
xchg
xor
dec
mov
push
xlat
mov
sarb
fisttpll
inc
gs
cld
cmc
mov
out
dec
dec
aad
xchg
jne
fstpt
pop
jmp
out
test
xchg
int
jmp
les
aad
loop
sub
data16
addr16
sub
dec
clc
add
xlat
mov
jnp
mov
jle
mov
mov
sarl
les
xchg
jp
pop
dec
or
and
cmp
xor
mov
rclb
mov
insl
jmp
mov
imul
nop
scas
mov
repnz
iret
or
ret
pop
leave
xchg
mov
les
out
inc
jnp
rorb
dec
outsl
adc
add
sub
and
enter
rcrb
movsb
ficomps
pop
xchg
lds
ja
xchg
ret
xor
add
stos
cmp
xchg
adc
jbe
mov
sbb
gs
or
aas
dec
jl
or
dec
loop
out
push
outsb
cwtl
loop
push
fwait
push
jo
add
inc
and
sub
or
sbb
sub
add
cmp
enter
daa
xchg
iret
jge
cmp
cld
fstpl
sub
es
cmp
jg
ds
in
lahf
mov
lahf
in
out
in
sarl
sbb
xchg
or
xor
loop
inc
outsb
in
pop
sub
js
aad
pop
xchg
push
lret
mov
mov
outsb
repnz
push
adc
addb
popl
clc
orb
out
pop
js
and
and
push
sbb
mov
sub
adc
cld
jg
lcall
inc
mov
dec
cmp
test
mov
cwtl
nop
aam
jne
sar
mov
test
pop
sbb
out
imul
cmc
ret
jl
push
in
cmp
lea
and
inc
cmp
cmc
loop
cmc
xor
xlat
jp
xchg
cwtl
pushf
imul
cmp
data16
outsl
lods
adc
dec
add
jae
lock
addr16
mov
mov
cmc
jno
pop
add
roll
and
lods
mov
call
sub
les
xor
xchg
push
sub
sbb
lods
sti
mov
sub
pop
adc
insl
test
push
mov
aad
cs
nop
fsts
scas
dec
mov
sub
dec
int
cmp
sub
mov
cmp
cld
lods
sti
lea
out
or
sti
jb
pop
ss
sub
xchg
aas
fistl
outsl
inc
stos
arpl
inc
mov
ds
jb
pop
sub
and
jae
ror
mov
cmp
cld
imul
mov
stos
and
xor
inc
mov
out
mov
dec
iret
lock
xchg
mov
int
sbb
loop
test
or
mov
mov
mov
dec
sbbb
mov
or
cmp
inc
pusha
repnz
insb
daa
mov
sarb
cmp
jae
jecxz
and
rcll
sub
pop
clc
fwait
mov
xchg
movsl
loope
ljmp
and
pop
push
and
and
je
jo
lret
pshufw
or
hlt
pop
xor
or
xchg
jno
test
or
xchg
sahf
sbb
inc
outsl
sub
je
or
and
std
push
hlt
insl
mov
add
fwait
leave
xor
leave
cmpb
aad
fsubl
mov
pop
es
pop
mov
xor
lds
mov
push
cmp
mov
mov
jmp
fidivs
in
jae
sbbl
xchg
and
mov
popa
push
addr16
fidivrl
mov
and
mov
bnd
out
jle
das
push
in
mov
pusha
repz
jecxz
setb
mov
pop
xorl
xchg
pop
ret
mov
xchg
popf
pop
popf
icebp
mov
adc
xchg
iret
xchg
inc
ljmp
lret
roll
scas
sbb
imul
inc
iret
addr16
std
ret
out
or
jmp
inc
jle
insb
or
enter
mov
repnz
int3
int
adc
lods
or
fidivrs
cli
shrb
fs
sbb
cmp
daa
xchg
movsb
lahf
out
push
jbe
jbe
jl
jge
lock
sbb
jl
in
stos
or
mov
mov
push
loopne
push
push
pop
in
sbb
into
scas
jnp
stos
and
jns
test
mov
sbb
cmpsb
data16
and
enter
daa
xchg
fdivl
outsb
cmp
loope
fnstenv
sub
dec
or
mov
sub
pop
and
adc
sbb
mov
stc
aaa
xor
jns
or
ret
pop
sbb
js
in
pop
lds
mov
imull
fdivl
call
test
push
stos
mov
rcrb
xlat
lahf
aaa
mov
mov
xor
aaa
push
aaa
push
pop
insb
inc
int
lret
xchg
and
jnp
les
sbb
test
xchg
sbb
jecxz
sahf
lds
xchg
adcb
je
enter
aas
test
mov
fsubs
lock
push
mov
stc
lret
loop
sub
cmp
push
or
aas
add
xor
cld
cmp
loop
push
int
popf
cmp
popa
jne
cmpsw
xchg
iret
lods
cld
sub
out
cld
lahf
cli
lcall
in
or
mov
gs
rcr
pop
jae
aad
mov
in
les
xchg
sbb
sbb
call
cmp
sub
mov
pop
pushf
incb
ucomiss
repnz
dec
out
nop
mov
rorl
xor
das
mov
cli
movsl
je
mov
sbb
inc
test
call
jp
or
pop
fwait
addl
ret
pop
push
enter
mov
mov
mov
imul
rcrl
pop
std
jns
stc
cwtl
mov
fidivs
sahf
push
pop
icebp
aas
push
xor
lret
or
pop
mov
or
xlat
push
jg
imul
lods
inc
mov
aam
ja
ret
in
mov
insl
push
popf
mov
cmpsl
xchg
je
mov
pop
inc
mov
pushf
cmpl
pop
jmp
pop
loope
pop
sbb
cltd
or
xor
popf
aad
push
push
clc
loop
xchg
in
test
and
aam
and
mov
stos
fimuls
ss
cmp
je
dec
sarb
bswap
call
jb
inc
sbb
leave
lock
mov
and
adc
mov
mov
daa
or
push
lret
cli
add
xchg
add
add
mov
cmc
xchg
xor
sahf
jns
sub
addr16
cmp
dec
push
mov
inc
inc
mov
dec
jnp
gs
shlb
les
sbb
jne
add
sbb
inc
jns
bound
jmp
cwtl
in
mov
subl
cmc
sub
pop
push
sbb
add
jp
rclb
add
popa
stos
jnp
fdivrl
jle
fsub
lret
push
sbb
mov
sahf
xchg
movsb
int3
inc
pop
mov
or
ret
xchg
popf
cmpb
add
dec
ds
mov
mov
imul
loope
outsb
jne
adc
lods
aaa
iret
and
leave
jg
push
hlt
cmp
cmovbe
ret
inc
push
cmp
or
add
jmp
pop
fstpt
push
lds
ror
movsb
mov
cmpsb
inc
adc
jmp
out
push
lds
jge
lret
fcompl
adc
ret
cwtl
lcall
icebp
and
dec
rclb
xor
mov
jo
xchg
scas
pop
fisubl
jbe
sub
push
insl
push
pop
inc
lods
inc
pop
cmpsb
jmp
pop
xor
jp
pop
daa
xchg
insl
iret
cmp
clc
inc
sub
dec
movsb
cmp
aam
cld
dec
movsl
lods
cmpsl
mov
lahf
sub
push
sbb
cmp
xor
push
adc
stos
jbe
js
xchg
pop
add
push
push
add
mov
ficomps
gs
test
outsb
mov
shl
cmp
sub
xorb
arpl
lret
dec
push
and
loopne
add
pop
cli
ds
sahf
mov
inc
add
jbe
jae
xor
push
jg
inc
jecxz
sbb
stc
notb
fs
fildl
in
ja
cmp
and
divl
mov
xor
fsubr
cmp
adc
or
and
dec
cmc
jo
and
cmp
scas
outsl
mov
fucom
mov
or
shrb
data16
adc
jno
mov
int
mov
in
js
jo
mov
fwait
movsb
sub
gs
into
test
pop
loope
pop
xchg
loope
adc
inc
inc
les
fmull
int3
sbb
and
movsl
xlat
repz
sub
pop
adc
pushf
test
inc
lea
xor
aad
adc
nop
out
dec
jbe
add
les
pop
out
loope
and
test
push
lahf
lea
lret
outsb
call
stc
rep
pop
pushf
mov
sbbl
fdiv
jns
mov
hlt
inc
mov
fsts
jb
lods
sti
mov
jo
aas
shrl
negb
aad
jb
push
mov
insb
jp
push
mov
cld
xchg
lret
ja
pop
mov
or
lock
das
dec
mov
jl
jb
cmp
push
inc
and
es
in
and
popl
cmpsl
xchg
mov
popa
ss
adc
and
in
xor
mov
icebp
dec
shl
loopne
cltd
inc
cmc
xor
mov
jmp
push
sub
pop
sar
adc
mov
xchg
in
sarl
cmp
hlt
stos
int
loopne
jmp
sub
jecxz
cs
mov
or
sub
mov
and
dec
bound
xchg
loope
sbb
mov
xchg
fwait
push
mov
dec
add
mov
push
and
lds
and
mov
test
lea
mov
pop
add
inc
ja
popf
mov
outsb
loope
mov
jo
mov
xor
xchg
dec
jle
jne
mov
mov
mov
shll
adc
jmp
and
outsb
mov
imul
or
sub
jp
int
and
xchg
insb
cs
jnp
xchg
jne
mov
mov
pusha
sub
fbld
xchg
xor
icebp
xor
inc
lods
or
jae
xchg
arpl
mov
cmp
aaa
push
xchg
shl
stos
adc
cwtl
xchg
out
dec
sbbb
arpl
dec
mov
push
mov
test
std
daa
mov
and
aaa
test
imulb
hlt
xchg
sub
fstps
inc
test
arpl
mov
push
mov
mov
mov
sub
mov
mov
stc
mov
std
movsb
mov
lcall
mov
jge
mov
aaa
arpl
add
add
adc
xchg
dec
das
mov
pop
or
cmpsb
mov
sub
cmp
pop
and
ja
test
cmp
inc
cmp
cmp
lock
movsl
mov
cmp
fdivrs
loope
cmp
cmp
repz
pop
lods
movsl
mov
pop
and
jl
lahf
dec
sbbl
sbb
mov
add
nop
mov
mov
test
scas
mov
imull
xor
push
movsl
movsl
fmull
aaa
push
outsb
sbb
adc
adc
xchg
pop
add
ret
imul
je
add
cmp
inc
push
and
jmp
xor
jns
fistps
sub
arpl
push
sahf
or
lcall
and
mov
mov
stc
lods
mov
dec
adc
aas
ss
push
cmp
fisubs
divl
jns
lret
mov
fmuls
cmp
imul
into
out
and
cmc
aaa
jmp
xor
mov
sub
jns
adc
cmp
jg
movsl
lods
add
lods
lret
mov
insl
xor
jo
and
add
andb
pop
jp
arpl
stos
inc
sub
movsb
loopne
std
leave
pop
mov
jns
popa
xchg
lods
aaa
les
hlt
fwait
xchg
lahf
xor
sbb
pop
push
and
sub
pop
xchg
fwait
ds
pushf
push
and
jmp
ret
xchg
xchg
sub
fcomps
xor
cld
and
shr
dec
xor
je
pop
clc
jecxz
push
add
lds
js
xchg
pop
dec
mov
sbb
push
pusha
inc
aas
dec
sub
bnd
aas
std
xchg
in
jb
and
mov
sti
push
or
mov
or
std
incb
sub
mov
pop
icebp
in
outsl
push
cld
mov
and
out
inc
mov
mov
pusha
lock
mov
imul
pop
ret
add
es
insl
in
fimuls
out
andb
jo
popa
dec
lret
sahf
mov
mov
mov
out
and
cmp
push
pop
shlb
mov
and
push
lock
fucom
add
clc
dec
dec
mov
ljmp
pop
pop
pop
hlt
dec
stos
mov
mov
xchg
lret
push
add
jae
lea
mov
xor
mov
mov
es
dec
leave
pop
lds
mov
jge
inc
js
or
fwait
dec
inc
pop
push
fisttpll
imul
sbb
les
jns
xchg
in
mov
mov
dec
inc
mov
mov
cmc
ret
dec
popa
jge
mov
xor
mov
mov
xchg
and
mov
icebp
out
add
shll
pop
jmp
lock
jmp
out
dec
sub
push
ljmp
sbb
and
sub
push
mov
lret
pusha
repz
filds
mov
pop
sub
cmp
out
push
sub
mov
jnp
fs
rcr
pop
stos
xchg
xchg
inc
aaa
inc
sbb
push
cld
imul
je
cld
xchg
iret
test
pop
ret
cmp
insl
inc
cmp
shll
arpl
roll
push
or
cmp
loop
test
nop
add
int3
mov
pop
cmp
fisubs
xchg
test
mov
dec
xor
movsb
inc
rcrb
push
arpl
jbe
cld
push
jge
sub
sbb
xor
jle
lret
jno
lcall
sahf
sbbl
imul
push
xchg
scas
sbb
pushf
ret
and
add
shll
xlat
pop
mov
jo
fwait
daa
nop
sbb
loope
mov
sub
mov
outsb
movsl
mov
call
into
push
pop
and
sbb
mov
add
cmp
push
xchg
scas
pop
clc
push
jb
ljmp
push
adc
push
cld
push
pop
fdivl
mov
outsb
jle
push
adc
out
fidivrs
adc
xor
test
and
push
sub
int
dec
xchg
sub
imul
ret
outsl
and
dec
sub
test
andb
jg
pop
out
mov
dec
cmp
fs
or
loope
xchg
scas
xorb
rcrb
in
out
fcomps
adc
lret
xorb
arpl
jb
pushf
or
cmp
cmc
sub
repnz
outsl
jo
aaa
loop
mov
orb
add
rcrb
mov
jne
iret
dec
test
outsl
cli
xor
xchg
mov
dec
notb
ljmp
loopne
cs
pop
shlb
dec
flds
dec
les
push
xchg
bound
cmp
popl
adc
cmp
jmp
push
mov
not
popf
aad
mov
inc
pop
int3
dec
xor
scas
inc
mov
or
jecxz
xchg
mov
mulb
push
testl
dec
test
fcmovnbe
vdivsd
or
inc
mov
cmpb
mov
push
mov
xchg
call
std
outsb
adc
mov
pop
cmp
ja
scas
icebp
les
cld
fdivl
add
rcrb
lock
push
xchg
pusha
adc
sub
xchg
test
es
jge
lret
and
outsb
xor
mov
fs
xlat
lods
or
mov
sarl
and
fadds
sub
cltd
mov
inc
test
pusha
cs
mov
mov
or
add
xchg
xchg
mov
mov
sbbl
push
out
scas
out
in
adc
cmpsl
push
fdiv
fwait
paddsb
or
cwtl
andb
lods
popf
dec
xor
test
out
xchg
xor
sbb
ljmp
or
addb
add
adc
arpl
pop
xor
scas
jns
or
in
test
addr16
out
pop
mov
ja
bnd
shl
dec
push
int
mov
sbb
mov
adc
push
dec
inc
outsb
sub
loop
and
fists
bound
inc
fsubr
jge
scas
xchg
mov
jge
out
call
rorl
dec
xchg
mov
jp
loopne
and
lock
add
sarl
push
sbb
in
popf
push
fistps
sub
pop
jg
inc
ret
jae
jl
push
inc
mov
xchg
adc
stos
cli
cmc
ja
popf
inc
pop
sbb
dec
lret
shrl
test
out
push
inc
cmpsl
cli
adc
loopne
ret
test
in
pop
hlt
sbb
repz
cmc
inc
mov
cwtl
or
mov
stos
inc
mov
lods
ficompl
daa
add
js
pop
push
ret
jl
or
push
mov
lahf
clc
push
cmp
push
mov
lret
lds
jbe
mov
and
inc
shl
loope
cwtl
or
outsb
jno
mov
jl
test
dec
or
ret
xor
add
fnsave
and
inc
shrl
into
cmp
pop
push
cmpsb
jb
push
in
mov
sub
cmp
inc
adc
outsl
sub
js
jbe
inc
ds
ret
and
push
jecxz
repnz
add
cmp
xor
adc
push
pop
pop
xchg
sarb
in
pop
rcrl
push
push
lods
add
fildll
ljmp
mov
push
sbb
leave
sub
js
int
mov
push
mov
sub
or
cwtl
inc
sub
sbb
ja
sbb
pop
jg
mov
sbb
xchg
test
in
addb
imul
into
mov
adc
jge
ss
push
cmp
push
repz
divl
pop
sbb
xchg
cmp
adc
or
sub
mov
test
xor
arpl
aas
pop
loop
adc
imul
jbe
popf
or
mov
shrb
mov
mov
xchg
pop
mov
mov
jg
decb
imul
out
int
adc
push
mov
jp
out
pushf
mov
xchg
and
or
xlat
mov
shrb
mov
sub
dec
push
std
pushf
stos
pop
sbb
decb
lods
aad
fdivrl
nop
and
xchg
inc
into
inc
into
dec
and
je
dec
shl
stos
shufps
or
pop
cs
mov
pop
mov
int3
and
ja
and
lcall
inc
sub
mov
jb
scas
leave
mov
adc
cmp
pop
mulb
outsl
std
adc
cs
ja
icebp
fwait
push
xor
pop
push
lret
les
test
xchg
sbb
lock
call
popf
mov
push
mov
aam
stos
hlt
ret
and
and
insl
mov
sbb
or
mov
jnp
icebp
lods
je
dec
mov
mulb
daa
mov
xchg
and
cltd
call
idivb
sub
fistl
loop
fnsave
mov
or
loopne
bextr
push
inc
stos
lcall
xchg
pop
shr
mov
or
dec
xchg
mov
repz
or
sbb
loope
jp
mov
dec
xchg
mov
test
adc
xchg
or
inc
cmpsb
xor
or
push
adc
and
jle
iret
fs
add
and
xor
repz
in
sbb
or
add
pop
xor
ja
adc
cs
inc
shll
mov
daa
sub
mov
xor
daa
cmp
jne
or
jp
add
mov
cs
je
pushf
xchg
xchg
stos
and
push
out
sti
inc
sub
dec
into
lcall
notl
insb
outsl
lret
sarl
pop
outsl
jle
mov
pusha
cli
jl
fistpll
insl
xchg
lock
pop
xchg
sbb
inc
int
xchg
jae
push
in
push
pop
dec
popf
sbb
mov
icebp
jl
push
push
jbe
stos
insl
push
mov
add
jge
jbe
pop
scas
or
push
push
mov
cmp
mov
iret
inc
shrl
leave
pop
fmul
hlt
addr16
cmpsl
inc
lea
adc
clc
inc
ss
fimull
out
add
lret
sbb
lds
jle
mov
repnz
fdivrl
lds
frstor
xorl
mov
sbb
shll
aad
fs
jl
dec
push
dec
jl
sbb
rorb
jo
ja
scas
or
mov
cltd
das
stc
inc
call
pop
mov
movsl
inc
aad
data16
xchg
daa
mov
and
insl
mov
xchg
insl
sub
mov
cmp
rorb
xchg
and
sti
rcrb
lds
sbb
mov
adc
xlat
loopne
pop
inc
mov
outsb
pop
add
xchg
push
jmp
push
stos
gs
mov
jecxz
inc
bnd
cld
fidivl
shlb
cmp
mov
push
mov
sbb
push
push
fisttps
int
lds
out
mov
ja
fwait
pop
gs
push
mov
xorl
hlt
jne
test
int
jg
fidivl
sub
stc
shlb
fs
aam
adc
clc
es
sets
outsl
rorb
mov
pop
jnp
cmp
adc
into
cwtl
sahf
in
cmc
mov
and
test
or
cs
or
push
xchg
jns
jo
adc
flds
adc
jg
inc
mov
ret
sub
insl
pop
ret
push
push
mov
and
ret
out
xor
cmp
adc
lret
add
jp
adc
jl
fnstenv
inc
ret
sbb
xchg
call
call
or
out
scas
popf
sub
mov
dec
pushf
push
dec
ret
jmp
fstps
aad
xchg
seto
jbe
dec
repnz
inc
loope
in
xchg
dec
icebp
je
mov
pop
push
or
les
call
cmc
and
dec
xorl
jge
cs
add
push
mov
mov
inc
aas
fimull
mov
and
add
test
daa
imulb
call
jl
jg
mov
pop
ret
jb
lret
inc
out
lret
xor
mov
cmp
sahf
mov
mov
dec
std
jb
jle
das
ret
scas
add
mov
dec
insl
cltd
inc
fmuls
je
cmpsl
lea
popa
mov
xchg
and
fnstsw
add
cld
out
dec
mov
dec
hlt
add
mov
jne
cs
pushf
cltd
pop
jle
test
xor
xor
pop
and
clc
std
inc
fcoml
arpl
sub
aad
js
pusha
ds
stos
mov
fistl
xchg
push
rsm
or
add
xchg
orb
ja
xor
push
inc
mov
das
stos
ret
dec
rcrl
xchg
ffreep
inc
cmp
movsb
mov
movb
push
icebp
movsb
add
inc
notrack
jg
jns
sub
push
loop
xchg
pop
mov
mov
mov
in
and
iret
adc
dec
cmp
or
mov
inc
jne
inc
popf
xor
dec
inc
jmp
push
mov
mov
ja
pop
sub
inc
sahf
sbb
xor
mov
push
and
xchg
insb
sbb
and
jle
cli
popa
in
jmp
pusha
xchg
pop
into
fistps
es
pop
int
loope
fcoms
jae
jae
push
lret
popf
inc
cmpsb
mov
loopne
out
xchg
dec
enter
mov
xchg
scas
outsb
stc
xor
rcll
ret
fistpll
ret
dec
rcrb
arpl
movb
mov
stos
mov
mov
add
sahf
int3
dec
xor
fimuls
sbb
rclb
mov
inc
pop
jno
jl
sub
loope
pusha
push
push
in
loopne
lret
jge
insb
sbb
or
jno
fstps
enter
jmp
rorl
dec
out
xor
dec
es
mov
mov
push
loope
test
fs
inc
ja
loop
js
cmp
mov
adc
mov
loope
scas
test
cmp
inc
ss
lretw
mov
push
lahf
lds
fistpl
mov
xor
xor
xchg
int
lcall
js
pop
pop
pop
aas
add
push
out
push
add
fdivl
sbb
outsb
cmpsl
push
adc
jg
mov
rorb
gs
and
push
enter
nop
sub
pop
pop
jne
out
lcall
cmpsb
mov
mov
inc
sahf
xchg
dec
cmp
mov
cmpsb
jg
leave
mov
bound
fs
push
adc
or
lret
imull
clc
or
enter
mov
rorb
daa
adc
into
jnp
push
push
inc
pop
xor
add
cmp
cltd
dec
adc
movsl
rcll
xchg
mov
push
add
rcrb
insb
fs
int3
sub
add
in
mov
dec
push
ret
repnz
add
sub
lods
fstpl
fnstsw
push
xchg
stos
cmp
cmp
xlat
cs
sub
decl
jmp
imul
aad
stos
popa
nop
dec
orl
mov
je
test
jecxz
lahf
mov
adc
sub
addr16
inc
pop
sbb
or
inc
add
mov
inc
pop
push
jbe
pop
mov
daa
jb
or
mov
daa
jbe
shl
push
mov
arpl
push
rcll
dec
ret
add
pop
inc
jns
mov
out
mov
roll
stc
inc
push
das
movsl
push
fisubl
inc
out
aam
cmp
ret
ds
cmp
cld
insl
subb
cmpsl
mov
gs
test
in
or
cmp
mov
mov
aad
jbe
add
cltd
push
mov
inc
mov
xchg
push
cld
mov
andb
xchg
pop
push
pop
ljmp
cs
or
loope
js
out
fcomps
xchg
out
push
push
insl
lds
sbb
test
or
or
xor
mov
xor
mov
test
pop
ret
mov
sbb
push
mov
fwait
or
cltd
push
imul
pop
incl
outsb
xor
jns
mov
in
cld
mov
stos
sub
adc
test
dec
ja
jl
dec
sub
stos
in
or
push
mov
or
mov
jne
loop
mov
cmpsb
lret
out
jl
pop
cltd
xchg
sbb
fildl
cli
jle
sub
ds
addr16
clc
xchg
jp
inc
andl
or
pop
jnp
mov
jle
inc
ret
test
pusha
xor
fistpll
sbb
inc
jecxz
or
push
fildll
shrl
push
into
and
push
and
xchg
mov
xor
push
fisttpl
scas
rorl
cld
adc
iret
add
pop
ret
xchg
hlt
std
dec
stos
arpl
inc
xchg
or
or
and
pop
fidivl
add
mov
and
loope
fidivs
or
sahf
gs
shrb
mov
cwtl
cmpb
xor
shld
lahf
testb
or
lahf
inc
sbb
push
aaa
push
cmp
or
pop
jno
ss
jl
pop
into
dec
pop
adc
add
jo
call
loopne
call
jns
push
das
adc
repnz
sti
xchg
sbb
jae
lcall
cmpsl
sub
shrl
jb
andb
ds
lock
xlat
dec
sub
negl
lahf
in
enter
out
repnz
outsl
xor
cld
pop
xchg
mov
js
ja
pop
jle
lret
push
xchg
jmp
fsub
scas
jg
jo
loop
or
imul
cmp
andb
inc
mov
push
mov
or
mov
cmp
int
int3
pop
sub
pop
outsl
pop
hlt
fldt
add
rcrl
mov
adc
xchg
lahf
sahf
cmp
enter
fiaddl
nop
mov
pop
stc
inc
cmc
outsl
or
ss
cs
test
fwait
lret
mov
or
cmpb
xor
xchg
mov
pop
or
sbb
stc
xor
lahf
outsl
in
inc
aad
sub
bound
dec
or
jmp
out
cmp
sbb
dec
mov
mov
out
or
incl
mov
cli
cmpsl
idiv
into
add
jbe
mov
mov
pop
dec
fisubrs
fstps
rep
call
loopne
xchg
outsb
mov
bound
test
test
insl
loopne
sub
mov
pushf
stos
cmp
adcl
cmp
mov
dec
mov
fiaddl
cld
push
dec
test
dec
je
mov
mov
adc
mov
call
repz
in
into
test
andl
into
sbbl
dec
mov
aas
sbb
jb
test
and
pcmpgtw
inc
xchg
mov
and
cwtl
aam
mov
std
jo
mov
dec
icebp
and
dec
cld
mov
test
test
mov
jb
in
stos
or
push
adc
das
test
inc
sub
mov
int
mov
mov
cmc
dec
pop
push
scas
cmpsl
mov
fisubs
maxps
insl
lret
rcrl
pop
and
pop
hlt
jae
rcl
lahf
cltd
lea
or
mov
add
xchg
popf
dec
aad
dec
xchg
or
pop
mov
lds
cmp
xchg
sub
xor
punpckhbw
arpl
sub
mov
sbbl
xor
gs
cmpsl
sub
dec
int3
mov
xchg
or
inc
imul
or
les
push
or
xor
fs
add
pop
xor
xchg
xchg
cli
ljmp
aam
pop
pop
arpl
lcall
and
mov
int
dec
dec
rcrb
jne
in
mov
ja
out
pop
mov
bound
das
jmp
out
xchg
adcl
pushf
sub
cmp
addr16
mov
and
int3
dec
jnp
add
jle
mov
cld
leave
aam
lret
pusha
sbb
fistpl
fcomps
int3
test
in
jae
jnp
push
push
jle
popf
xchg
jle
mov
or
xchg
jnp
stc
fdiv
sbb
jp
imul
scas
xor
rcll
or
adc
mov
iret
pop
ret
nop
addr16
leave
rclb
hlt
dec
and
jmp
mov
push
mov
lock
nop
sbb
jno
movsb
int3
and
in
scas
or
lds
jmp
popf
bnd
js
ljmp
push
out
inc
icebp
jbe
ss
jge
mov
sbb
cmp
or
mov
jl
sahf
dec
leave
jecxz
push
imul
cmp
jnp
out
test
cli
add
outsb
cmpsb
jle
jl
pop
push
ror
daa
jge
mov
test
push
mov
sub
push
cmp
xchg
ds
outsb
shlb
xchg
cs
add
rcll
add
sub
add
js
xor
cmp
pop
mov
xor
mov
stc
ja
scas
imul
pop
movsl
enter
add
roll
leave
xchg
ret
xor
into
mov
ffree
and
xchg
jnp
jmp
insb
pop
jae
in
mov
lret
and
sbb
xor
daa
cmpsb
fldl
das
mov
mov
jae
stc
imul
inc
fs
and
adc
arpl
rcrl
fadds
cld
imull
lret
xor
lods
add
dec
add
into
inc
scas
lret
cmc
loope
bound
mov
cmpsb
iret
loop
push
pushf
imul
sub
fabs
ret
xor
lods
xor
jnp
mov
jl
push
and
mov
gs
mov
cltd
inc
pop
add
loopne
dec
add
xchg
sahf
adc
pop
fsts
sahf
repz
shll
sbbb
cwtl
sti
xlat
lods
mov
iret
adc
out
add
cs
aad
orb
nop
mov
dec
movnti
dec
cld
cmc
xchg
je
adc
adc
stc
push
fsubr
pop
mov
jbe
or
sbb
and
pop
es
inc
imul
push
jb
xor
mov
cmp
add
and
mov
cld
cwtl
int
mov
mov
shl
les
lret
xorb
pop
xor
stc
lock
icebp
inc
das
arpl
mov
sub
cmpsl
std
aam
sbb
shlb
xchg
iret
insl
dec
and
dec
push
sub
popa
mov
xlat
mov
mov
mov
int3
jns
fistpll
pop
adc
in
cmpsl
cmc
adc
fdivrp
mov
hlt
add
addb
inc
mov
scas
je
xchg
fmul
mov
rcr
or
pop
popa
cld
mov
out
sahf
fs
xchg
je
in
and
lock
leave
cmp
cli
pop
fs
jmp
mov
cmp
mov
xchg
xchg
mov
add
mov
xchg
xchg
fwait
addr16
push
scas
or
add
jnp
test
jle
lcall
mov
mov
in
mov
mov
push
mov
fdivs
adc
fdivl
pop
int3
mov
xlat
aam
mov
xor
dec
cmpsl
mov
pop
int
cmp
lret
bound
aad
jmp
mov
incb
add
and
xor
push
addr16
and
jne
jnp
sbb
in
dec
dec
pusha
data16
rorl
pop
jb
cmpsb
inc
stc
inc
and
gs
push
adc
cwtl
mov
dec
fistps
cmp
add
lods
xchg
clc
imul
jae
xchg
adc
adc
mov
cmc
ret
inc
leave
aaa
ret
xchg
sub
arpl
jl
or
sbb
inc
xor
in
add
int
adc
pop
push
mov
mov
lods
and
shlb
and
fisttps
mov
jae
push
cmp
aaa
sbb
mov
sbb
xchg
aaa
pushf
fdiv
or
repnz
pop
sarb
mov
push
dec
roll
pop
test
sbb
push
sarl
push
lds
inc
and
inc
cmpsb
add
push
enter
daa
mov
sub
loop
insb
sub
or
cmp
int
ds
mov
and
or
push
adc
add
sbb
dec
mov
fstps
aas
popa
js
push
bound
adc
fdivl
and
dec
nop
mov
pop
mov
rclb
add
testb
dec
cmc
popf
mov
lea
and
arpl
int
arpl
sub
push
incb
repnz
addr16
or
dec
jmp
stc
sbb
out
sahf
addb
orb
outsl
jg
mov
mov
dec
repz
scas
mov
rclb
jno
ja
add
lock
sti
repnz
imul
xor
dec
xchg
je
sbb
and
adc
test
or
adc
lret
outsl
stos
or
loop
movsb
out
imul
add
ss
iret
xor
mov
mov
cli
rcrl
in
sar
xor
sub
sar
mov
xchg
xchg
loopne
mulb
mov
adc
cmp
lea
daa
div
mov
lds
cmp
fcom
jmp
shrb
jp
adc
or
add
jmp
mov
cs
dec
lret
dec
mov
dec
outsb
pop
inc
sub
ja
je
test
and
sbb
fmuls
fsub
rol
xchg
jmp
xor
stos
adc
adc
pop
leave
push
sub
inc
scas
add
aas
push
call
lea
enter
in
sbb
mov
inc
std
pop
inc
nop
cwtl
dec
addr16
xchg
jg
sub
xchg
icebp
into
jnp
cld
ficoms
lret
out
test
mov
stos
inc
lock
lea
inc
je
mov
sub
aam
mov
ret
jmp
lahf
es
adc
xor
call
cmp
out
lea
lods
mov
int3
mov
movsl
mov
and
jp
dec
pop
xor
sarb
add
loope
mov
adc
jo
clc
jmp
into
mov
das
rcrb
gs
or
daa
stos
inc
das
movsl
out
add
xchg
mov
dec
xchg
or
add
dec
or
mov
mov
cmp
mov
test
mov
xchg
lea
inc
cmp
or
xor
fwait
xchg
push
push
add
xchg
mov
lcall
or
jns
sbb
in
inc
iret
xchg
cwtl
xor
mov
xor
mov
fldenv
dec
push
jno
mov
jg
mov
stos
mov
lods
jne
push
cwtl
mov
push
sbb
sbb
bound
ja
jge
ret
or
sub
das
cmpsb
inc
addr16
mull
insb
xchg
out
test
jbe
into
out
in
cmp
add
or
test
jecxz
jae
xchg
test
pop
sub
sbb
jne
mov
lahf
xchg
cmpsl
xorl
scas
cli
add
in
xchg
inc
adc
bswap
sbb
pop
lret
adc
mov
mov
stos
or
xchg
push
ds
mov
fimull
sub
pop
orb
in
lds
lcall
and
fsub
cmp
xchg
lods
mov
lods
mov
sbb
in
jbe
and
les
and
jl
mov
xlat
push
das
rorb
fsubrp
jmp
mov
call
lea
nop
jecxz
inc
mov
push
in
sub
enter
daa
mov
jb
stc
arpl
jns
cmp
inc
movsl
in
imul
lahf
inc
or
push
in
sub
xchg
cwtl
and
adc
push
stc
jl
cmpsb
or
xchg
repnz
cmp
mov
push
pop
and
es
sub
or
adc
push
int
sbbb
mov
and
xchg
nop
lods
and
out
pushw
cmp
add
sub
pop
jno
ja
sbb
shl
lcall
pextrw
sahf
and
pop
andb
mov
insl
mov
mov
push
repnz
gs
aas
adc
adc
in
repnz
dec
out
cmp
mov
pop
imull
mov
lret
repnz
outsb
fimull
jecxz
or
rorb
loope
xor
repnz
mov
loop
sub
jecxz
fiadds
mull
lods
add
sbb
push
enter
sub
sti
fldt
fists
and
into
mov
pop
test
push
cmpsb
les
jae
repz
addr16
mov
in
jae
add
ss
int3
xlat
sub
xor
xor
adc
mov
lods
shll
lods
ss
adc
inc
nop
inc
insb
xchg
dec
int
sbb
test
pushf
xchg
je
out
jecxz
mov
rorb
lahf
std
jo
xor
out
dec
subl
sbb
sbb
pop
insb
mov
inc
ja
testb
and
cmc
sub
jb
cmpl
xor
cmp
call
adc
cmp
fmuls
movsl
push
sar
or
push
mov
push
mov
gs
mov
and
lret
mov
and
cmp
jne
cld
ret
jp
inc
es
call
insl
sbb
pop
dec
dec
aaa
xlat
cmpsl
mov
jecxz
add
subl
mulb
mov
enter
jo
jmp
adc
jmp
rorb
negl
in
lret
add
dec
cmpsl
fstpl
pop
clc
and
inc
xchg
pop
push
out
ljmp
mov
stos
xor
sub
xchg
add
push
fprem
push
jne
inc
sbb
call
icebp
mov
aam
mov
dec
add
lods
test
sub
pop
sbb
xchg
insb
inc
xor
mov
fwait
push
cmc
push
jg
stc
mov
mov
jns
mov
sub
jns
faddl
aad
fistl
call
fwait
mov
ja
inc
dec
dec
stc
lods
xchg
mov
iret
mov
sbb
dec
jns
aaa
jne
inc
outsl
mov
arpl
bound
loopne
jmp
dec
sub
insb
out
cmc
in
sub
sub
addr16
inc
test
jmp
scas
insb
icebp
inc
bnd
xchg
push
jle
add
in
test
pushf
clc
adc
cmp
loop
sbbl
fcoms
flds
push
cltd
adc
popf
push
and
push
lret
stos
pop
xor
sbb
dec
repz
adc
xor
mov
mov
ds
jl
repz
push
leave
and
pop
arpl
mov
cld
push
xor
sbb
test
add
out
popf
int3
out
dec
pop
mov
cltd
fidivrs
jae
rcl
sub
ljmp
psadbw
movsb
cwtl
sahf
lods
push
fcmovnb
insl
jbe
xchg
sbb
push
lods
sbb
call
or
nop
test
jl
bound
push
out
push
adc
mov
movsl
xor
scas
adc
and
mov
pop
rolb
cmpsb
pop
andb
dec
mov
daa
mov
cmp
jmp
sub
mov
test
pop
mov
inc
and
add
push
mov
xchg
sbb
mov
add
pop
push
xor
jnp
imul
inc
pop
jp
fldt
pop
or
fmull
push
outsb
xchg
out
mov
rol
push
insl
mov
addb
cld
sbb
or
jle
xor
cmp
rclb
jae
int
pop
sarl
mov
push
ret
push
mov
test
bnd
mov
mov
xchg
aaa
stc
sbb
lret
arpl
mov
cmp
jno
sub
lret
popa
xor
mov
or
or
push
mov
ss
aam
lret
outsl
push
jecxz
imul
clc
testb
mov
lods
jmp
or
cli
lret
jno
mov
cmpsb
cltd
hlt
sti
mov
incb
cs
adc
sbbl
js
int3
int
fsincos
aaa
pop
les
or
inc
xchg
adc
jp
lds
jno
xchg
imul
adc
add
xchg
push
aad
add
dec
dec
sub
movb
pop
dec
popa
sub
pop
jno
aas
test
and
icebp
call
out
push
push
addl
in
fisttpl
jl
lds
and
les
xchg
insl
and
jp
mov
fidivrs
lret
testb
enter
push
ret
ret
aam
cmovs
icebp
jl
mov
xor
and
mov
push
adc
rorb
das
add
mov
sbb
dec
ret
or
xchg
es
popa
mov
or
cmpsl
xchg
mov
sbb
cmp
cwtl
es
ja
jle
mov
mov
jo
movsl
shlb
das
and
test
mov
push
push
lret
sbb
clc
pop
aad
xchg
cltd
pusha
dec
ljmp
sbbb
stos
and
lods
xchg
dec
sbb
pmulhuw
mov
js
rorl
pop
or
add
mov
inc
test
test
arpl
das
and
sbb
popl
aaa
hlt
jo
hlt
arpl
push
cwtl
gs
add
int3
movsb
xlat
lcall
enter
mov
clc
inc
mov
pusha
insl
cmp
sub
mov
dec
fiadds
dec
in
pushf
mov
shrb
mov
mov
inc
dec
pop
lea
jne
fcomps
xlat
push
fldenv
xor
xchg
adc
pop
or
je
mov
sub
and
pushf
out
jp
dec
ret
and
adc
insb
pop
data16
repnz
adc
pop
pusha
aaa
push
loop
push
lcall
pop
pop
xchg
mov
test
sbb
pop
xor
mov
or
stos
xchg
jns
xchg
push
mov
sbb
call
into
scas
sarb
adc
jecxz
ret
sbb
pushf
test
hlt
je
jbe
cltd
testb
or
mov
ljmp
aam
int3
sarl
inc
pop
loopne
lret
fisubs
js
inc
mov
shl
mov
repnz
jae
cmp
andl
xor
push
sub
movsl
jbe
repz
jp
negb
push
out
xchg
aaa
fldenv
jmp
jl
notb
test
leave
push
cmc
leave
out
insb
fsubl
scas
out
sarl
cwtl
loopne
xchg
roll
es
inc
ror
dec
cmpsb
mov
or
inc
arpl
xchg
xor
daa
xchg
hlt
sub
fsubrs
out
cmp
jge
push
movsl
cli
sbb
and
xor
lahf
jg
scas
push
mov
rcrb
add
clc
lds
mov
scas
cmp
mov
sbb
push
popl
fdivl
lock
outsb
stc
ret
arpl
mov
call
cmpsl
mov
add
mov
xchg
shlb
jmp
insb
push
inc
mov
int
repz
dec
xchg
push
pop
outsl
aaa
sub
adc
mov
jns
imul
sbbb
jg
mov
repz
shl
repz
fstl
pop
mov
ss
pop
cmp
sub
push
imull
clc
divl
ds
cmp
sub
or
jae
into
int
insl
cmc
std
push
xlat
xor
dec
and
imul
into
and
adc
pop
out
shrb
mov
cli
dec
inc
mov
adc
xchg
and
xchg
ja
add
push
pop
out
cmp
lahf
repz
mov
fdivp
movq
xchg
cmp
stc
push
cmp
jns
dec
rclb
pop
inc
pushf
add
mov
jb
sahf
jbe
nop
clc
repz
dec
mov
dec
inc
data16
dec
fcom
data16
sbb
jecxz
fdiv
and
or
dec
aam
outsb
pop
add
fists
cwtl
cmc
nop
dec
mov
pop
mov
mov
adc
jl
xor
dec
mov
imul
sbb
jge
jg
dec
loope
cwtl
jnp
pop
mov
and
add
icebp
push
js
cld
pop
shlb
mov
inc
jl
iret
pop
fwait
lock
pop
das
fistpll
outsb
sub
xlat
add
or
ret
cwtl
xchg
es
cmp
dec
inc
xchg
pop
cmpsl
xchg
mov
xor
mov
mov
push
xor
jle
loop
dec
lods
xchg
stc
lods
shl
push
mov
test
pop
sub
push
mov
clc
lcall
ljmp
xor
mov
sub
or
inc
mov
add
loopne
xor
dec
jg
repnz
inc
xchg
dec
iret
popf
in
test
sub
xchg
pusha
adc
or
adc
and
mov
add
push
mov
xor
sbb
scas
dec
ja
jmp
cwtl
xchg
test
lods
mov
or
mov
mov
xchg
mov
xchg
add
add
dec
aas
sti
cmp
into
nop
mov
mov
je
push
mov
jmp
sbb
or
popf
sub
and
addr16
adc
and
push
push
insb
pop
idivb
sbb
in
dec
mov
fbstp
cli
xchg
mov
mov
push
sbb
and
push
pop
negl
leave
mov
push
dec
mov
xchg
lods
push
cmc
sbb
push
shrl
push
push
ret
adc
iret
cmp
add
adc
repz
mov
outsl
push
inc
movsl
int3
jnp
dec
lock
pop
roll
fisubl
fildll
pop
setnp
fiadds
push
rol
push
test
or
jl
repnz
cmp
in
scas
sbb
jbe
les
sbb
mov
aaa
cwtl
inc
mov
jno
push
out
cmc
pop
adc
addr16
fdivs
jo
sbb
scas
into
xor
and
lds
icebp
movsl
dec
inc
pusha
sub
iret
in
fstp
mov
movsb
hlt
daa
xchg
cmp
gs
add
out
cmp
xor
cltd
push
pop
push
pop
jnp
sbb
mov
xor
jne,pn
jle
or
pop
clc
call
imul
adc
sub
in
outsb
pop
call
sarb
jb
cltd
adcb
mov
xchg
iret
and
pop
dec
push
inc
daa
push
int
inc
fldt
sub
pop
out
or
test
nop
cmp
cmp
sahf
or
outsb
test
mov
and
push
stc
mov
fs
call
lods
mov
mov
fsub
lea
mull
movsb
lret
out
adc
lret
xor
mov
les
fdivs
sbbb
es
sahf
repnz
imul
clc
adc
movsb
cmpsl
lods
dec
int
lods
mov
jns
popf
ret
adc
gs
in
xor
xchg
mov
jl
mov
decb
cmc
and
loopne
pusha
fistpl
imul
xor
fldcw
pusha
les
dec
pop
repz
rcrl
out
adc
out
sub
mov
mov
or
gs
push
cs
jmp
nop
rcll
dec
ljmp
dec
dec
in
je
das
jecxz
pop
push
stos
cmp
cld
dec
mov
les
in
dec
arpl
cmpsl
adc
dec
mov
push
xchg
loopne
or
cmp
ja
aas
rolb
jb
lods
mov
hlt
mov
test
sub
hlt
fst
cwtl
ss
xchg
mov
add
icebp
sub
dec
lret
stos
and
mov
and
lods
lock
mov
mov
mov
push
ret
daa
xchg
sbb
iret
xorb
shrl
dec
cmp
xchg
cmpsl
test
sub
dec
cmp
aaa
insb
jo
je
add
and
out
push
pop
scas
xchg
scas
jmp
test
sub
push
push
sbb
fstl
stc
cli
xchg
pop
add
ljmp
cmp
mov
or
xchg
xlat
nop
aam
push
sbb
mov
mov
or
xor
jno
mov
inc
ret
frstor
test
mov
xchg
aad
inc
cmc
fmull
sbbb
fisubs
add
add
into
lcall
rol
jns
testb
jbe
test
aam
jb
mov
stc
mov
lds
ja
ret
rcrb
icebp
mov
addr16
decl
pop
push
jne
sub
out
xchg
cmp
adc
xchg
test
mov
inc
sub
sbb
mov
jp
insb
sub
xor
insb
xor
dec
jnp
add
jle
adc
in
les
fists
lods
rcrb
ja
inc
xor
in
push
loop
hlt
popf
jnp
or
xchg
stos
js
lods
xchg
add
sbb
cwtl
outsl
imul
shrb
or
inc
push
mov
ret
pop
leave
mov
adc
or
outsl
arpl
mov
or
andb
ficompl
in
add
or
cmpsb
pop
ds
mov
dec
pop
sbb
sub
or
repnz
add
xor
or
scas
dec
jbe
or
xchg
ret
push
push
cmp
jl
fwait
cmp
into
stos
push
mov
pop
jecxz
and
xor
in
jne
test
mov
iret
mov
in
les
enter
daa
test
insb
loope
pop
and
stos
test
movsl
or
and
add
xor
js
jae
jnp
xchg
xor
xor
rcl
mov
mov
js
pop
xor
aaa
and
adc
push
mov
or
stc
mov
pop
adc
push
in
orl
or
imul
push
push
dec
cmp
int
jb
sub
lods
pop
insl
pop
ja
out
and
inc
xlat
inc
mov
rcrl
push
add
cwtl
jb
jmp
test
cmp
sub
cld
xor
ss
sbb
mov
mull
mov
lret
pop
xor
dec
cmp
lahf
pop
outsl
into
xchg
mov
xor
outsl
or
cmp
loop
dec
lcall
jbe
add
fwait
and
lods
sahf
loop
mov
and
cli
movsl
cmp
out
sti
xchg
add
imul
loopne
insl
mov
adc
fldenv
out
rep
ljmp
pmaxub
cmp
mov
xlat
es
sbb
pushf
pop
mov
jmp
jns
cmp
aad
test
nop
scas
lret
bound
sbb
dec
lcall
insb
adc
sub
insl
call
insb
add
mov
lcall
pop
pop
fcmovnbe
xlat
sbb
ret
xchg
and
aas
jno
lods
jb
xchg
out
repz
jae
outsl
cmp
add
insb
std
fwait
mov
pop
mov
insb
testl
mov
scas
lret
sbb
mov
dec
lock
cs
popf
test
mov
std
inc
iret
aam
mov
sub
push
inc
mov
icebp
and
cmp
mov
popa
mov
movsb
mov
push
sahf
push
and
cmpl
pop
rcrb
lods
adc
sbb
push
adc
or
clc
adc
xchg
push
lcall
in
adc
mov
lock
mov
xchg
push
arpl
inc
insb
sub
add
cmp
mov
arpl
les
xor
out
mov
dec
mov
test
jnp
xchg
xor
inc
mov
clc
leave
scas
fwait
xorl
insl
add
sbb
add
cld
sbb
mov
aad
hlt
mov
leave
pop
orb
dec
lds
mov
mov
dec
add
call
and
je
lods
bound
sub
xchg
je
jae
adc
out
or
repnz
enter
mov
insb
popf
lret
and
scas
iret
jle
add
in
mov
data16
sub
jl
inc
cmp
adc
je
push
movsl
test
popf
mov
dec
insl
push
je
stos
jmp
test
scas
lods
loop
int3
cli
cmc
scas
jmp
lods
adc
dec
clc
es
adc
push
jno
push
stos
es
out
inc
stos
lods
aam
pop
inc
iret
push
sub
out
or
add
xchg
pusha
je
xchg
je
pop
insl
mov
jp
roll
inc
sbb
popa
cmp
add
movsb
in
push
pop
fsts
outsl
inc
sbbb
mov
aaa
push
adc
jno
sub
jl
stos
jg
sar
or
sahf
and
aaa
out
jo
lret
mov
mov
cld
and
imul
mov
cmpsb
adc
enter
daa
test
cmp
loope
outsl
adc
sbb
cmp
mov
movsl
movups
and
or
faddl
push
add
mov
xor
das
xlat
jne
xor
js
sbb
pop
jbe
je
test
dec
push
adc
fdivrl
aam
sub
and
notl
xor
dec
xor
decb
or
jp
dec
rcl
rolb
xor
in
aaa
repnz
out
insl
sbb
sbb
test
test
ret
add
mov
clc
in
mov
push
adc
xlat
ss
pause
cmp
pop
shrl
lret
mov
ret
popa
adc
andb
jbe
xchg
cmc
push
lods
xchg
xor
xlat
loopne
in
mov
shll
sbbb
ret
push
add
lods
test
xchg
lret
out
into
test
xchg
push
outsb
mov
push
lret
psubq
mov
mov
icebp
xor
pop
pop
inc
movlps
sbb
mov
scas
repz
mov
cmpsb
pop
cmp
repz
gs
pop
sub
in
aaa
pushf
add
popf
jmp
in
pop
cs
push
lods
aad
and
mov
dec
test
jae
lahf
int3
pop
dec
cmp
push
jle
jnp
xor
sub
pop
lret
call
jmp
aam
push
jno
mov
ret
call
xor
test
jb
scas
xchg
mov
or
testb
std
inc
orl
cmc
push
fisttpll
fdivrs
or
ja
mov
or
lock
cmc
das
jl
jae
dec
add
sub
hlt
dec
aam
or
ret
inc
arpl
insl
lahf
pop
in
dec
xor
cmpsl
xorl
add
mov
push
push
mov
ja
mov
sbb
stos
pop
in
lods
cmp
insb
dec
cltd
inc
lods
pop
test
xlat
or
xlat
jmp
xchg
clc
dec
outsb
sbb
xchg
mov
ljmp
es
push
or
out
push
adc
xchg
gs
push
punpcklbw
add
adc
xor
rcr
pop
inc
mov
dec
add
in
test
add
xchg
jbe
sbb
roll
orl
sbbb
cmp
add
cmp
push
call
adc
mov
cmp
in
scas
popf
xchg
jb
cmp
or
push
pop
cmp
ja
push
movsb
dec
mov
repnz
mov
adc
call
or
arpl
jbe
push
xor
push
jmp
aas
shrb
or
lods
out
mov
stos
or
mov
jp
pop
pop
and
inc
insb
or
jnp
and
loope
in
loop
pusha
mov
ficompl
add
lds
and
in
jae
cmp
push
pop
lcall
xor
pop
fwait
xchg
xchg
mov
scas
sbb
xchg
lret
push
leave
scas
dec
test
out
adc
and
ret
adc
js
jns
mov
mov
or
js
sub
test
mov
int3
jge
dec
pop
pushf
int
fsubrp
push
dec
lds
inc
rcrb
mov
adcl
cmp
enter
inc
sbb
jge
jnp
sbb
out
aaa
aad
push
or
push
pop
jl
mov
out
push
subl
sub
imul
test
push
pop
or
cmpsb
xchg
cwtl
fucomi
xchg
inc
das
enter
daa
or
cmp
stos
subb
hlt
cmp
mov
movsl
push
sub
lahf
sti
pop
lods
push
jb
sbb
jmp
or
cmp
pop
repz
js
addr16
mov
lahf
push
gs
movsb
sbb
jecxz
imull
xlat
insb
pop
outsb
test
in
or
dec
hlt
or
or
idivb
mov
mov
and
movsl
cmpsb
push
dec
mov
lea
aaa
pop
sbb
imul
shrl
mov
fistps
enter
cmc
add
test
incl
daa
add
mov
aad
stc
scas
xor
adc
cmp
jae
sbb
mov
movsb
int
lret
mov
cmp
cltd
jb
jge
xor
pop
sbb
xor
xchg
push
sbb
ret
xor
mov
adc
insl
bound
push
dec
stos
data16
int
lods
insb
stos
loope
mov
or
lret
mov
mov
jecxz
mov
pop
cmp
arpl
jo
mov
arpl
test
jmp
dec
mov
pop
repz
jbe
xchg
dec
jns
pop
push
cmp
cwtl
add
xlat
movsb
inc
mov
adc
jmp
jmp
and
ret
aad
and
dec
pop
push
int3
inc
mov
dec
dec
mov
jo
inc
fs
jecxz
push
out
das
in
lea
sti
mov
xor
stc
rcrl
movsl
xor
jp
sub
pop
add
inc
mov
pusha
add
jb
inc
mov
xchg
cmp
testb
mov
mov
lds
icebp
scas
imul
adc
clc
inc
jno
jb
lret
mov
jbe
lock
lea
pop
cmpsb
loop
fmull
and
aaa
les
aam
xchg
es
sbb
sub
test
popa
xor
xor
addl
es
mov
xchg
pop
or
sarb
hlt
in
jl
push
test
outsl
adc
lcall
clc
xchg
mov
push
or
pop
mov
cmp
mov
in
lods
xor
sti
popf
test
mov
mov
inc
xor
in
mov
push
test
dec
imul
test
sbb
xchg
test
imul
mov
rcll
fucomip
sub
push
adc
push
leave
push
pushl
bound
mov
aam
in
adc
xchg
roll
mov
testb
dec
stos
fadds
add
mov
mov
inc
jne
xchg
loopne
mov
mov
bound
mov
clc
sbbl
scas
sub
or
jo
loop
cmp
in
and
and
jnp
push
xchg
mov
in
xchg
pusha
ds
xchg
repnz
xchg
aam
aad
sub
inc
push
jp
jae
inc
sbb
sub
popf
lock
mov
inc
jno
stos
shll
xchg
or
xlat
imul
adc
leave
inc
adc
leave
cmp
mov
dec
ret
mov
hlt
jmp
jl
adc
inc
mov
sub
repz
inc
sub
mov
add
jno
int3
push
mov
pop
mov
jns
mov
jle
je
jns
cmp
cmpsl
movsb
and
jbe
xchg
push
jge
xchg
jae
aaa
xchg
out
sub
enter
fwait
xchg
pop
jl
inc
sbb
cltd
fs
fs
push
jo
int3
dec
scas
dec
sub
cmpsb
inc
lahf
test
sbb
dec
push
cmpsb
sbb
pop
in
jns
repz
daa
sbbb
loope
or
sub
ret
insb
cmp
mov
sub
push
sbb
ljmp
push
test
loopne
add
cli
scas
xor
and
sti
mov
pop
sbb
pop
js
dec
xchg
pop
hlt
push
xchg
push
sbb
push
mov
in
sub
ja
outsb
call
cmpsb
adc
call
lock
and
lea
sahf
xlat
pop
and
pop
int3
push
push
sub
sub
jbe
lcall
movsb
mov
cmp
notl
sahf
cwtl
push
test
je
and
test
sbb
sbb
pushw
pusha
fs
ret
adc
xor
cmp
shrl
mull
insb
lret
int
jno
lret
cmp
xchg
in
jl
into
cmp
shl
loopne
mov
in
loope
outsl
mov
adcb
jo
inc
add
or
push
lods
push
in
mov
scas
cli
cli
std
sub
mov
sub
movsb
jnp
aam
pop
gs
pop
add
or
bound
ret
dec
adc
push
inc
push
mov
repz
fs
rorl
mov
jecxz
mov
or
mov
pop
pushf
pop
andl
and
cs
dec
call
nop
aas
movsl
inc
dec
data16
inc
lds
insb
je
enter
xor
and
mov
rol
jmp
int
orl
jl
pop
loope
mov
inc
xchg
cmpl
add
lods
and
sbb
pop
in
test
mov
nop
mov
dec
mov
mov
icebp
xchg
cld
xor
fdivl
mov
jns
mov
mov
das
cmp
pushf
mov
loop
mov
add
outsb
ret
arpl
dec
sub
xor
push
mov
cmpsb
es
jecxz
repnz
mov
insb
insb
mov
sub
pop
rclb
push
push
cltd
mov
pop
test
pop
jns
scas
xchg
xor
xchg
adc
ljmp
rcrl
stos
mov
inc
gs
repz
push
aam
nop
push
add
data16
or
lods
mov
mov
push
scas
dec
dec
rol
ret
test
mov
sbb
scas
flds
xor
fistps
push
pop
add
outsb
call
fimull
in
enter
in
mov
mov
mov
jl
ret
stc
testl
fdivrs
js
dec
scas
insb
jg
les
sbb
test
adc
sbb
lcall
pop
andl
ret
out
xor
mov
pop
jbe
loopew
sarb
and
and
push
jnp
push
sub
jg
in
nop
mov
push
std
fists
xchg
push
xchg
cmpsl
push
mov
rolb
aad
adcb
popf
pop
orb
xorl
xchg
pop
mov
sbb
out
imul
mov
popa
pop
adc
mov
ret
mov
hlt
ss
jnp
and
int
dec
jb
push
test
pop
cmp
push
xor
cli
insl
je
xor
lds
push
rclb
repnz
mov
movsb
mov
jbe
cmpsb
lods
jge
xchg
aaa
sbb
and
mov
jnp
jl
ror
dec
pop
adc
push
inc
xchg
dec
xor
nop
push
scas
sub
push
test
call
add
in
pusha
lods
adc
daa
xor
push
loope
mov
cmp
mov
mov
and
xchg
rclb
int3
sbb
fiadds
nop
add
mov
les
pop
xor
and
fdivrl
sub
sub
enter
ret
ja
dec
cwtl
fwait
xor
mov
in
sub
and
fildl
push
push
jmp
add
mov
pop
imul
adc
pushf
sbb
sahf
sbb
mov
pushf
test
repnz
loop
gs
mov
sbb
and
adc
mov
insb
cmp
mov
dec
lret
inc
xor
mov
testl
into
pop
orl
outsl
addl
imul
mov
add
mov
mov
push
mov
cmp
mov
xchg
bound
sti
push
xlat
mov
idiv
int3
gs
sbb
loopne
addr16
pop
mov
aas
add
jl
les
sti
repz
fsubl
sbb
push
movsl
sbb
and
mov
incb
adc
std
pushf
add
mov
adc
pop
cs
dec
push
popa
nop
sbb
dec
lds
cwtl
dec
mov
cmpb
icebp
push
decl
pop
push
sbb
andl
call
cmp
adc
inc
mov
mov
jno
imul
and
push
in
shrl
popf
inc
std
aaa
sub
cwtl
fst
loop
xor
mov
adc
lret
xor
mov
ljmp
cmp
mov
mov
jnp
int
out
ret
repnz
dec
es
ret
adc
cmc
dec
dec
and
cmpsl
subb
mov
mov
or
mov
loopne
push
and
in
dec
inc
pop
dec
test
shl
jnp
cltd
ljmp
mov
or
push
and
stos
clc
cld
repnz
cmp
pusha
roll
sub
rep
lods
xlat
xor
jl
scas
xchg
cmp
insl
pusha
add
pop
pusha
or
sub
mov
push
dec
repz
cmp
test
or
xchg
test
inc
call
sub
fwait
cmp
cwtl
sub
mov
inc
pushl
cmp
icebp
movsb
in
shrl
pop
xchg
ret
mov
mov
insb
fisttpll
ja
xchg
outsl
dec
xchg
fdiv
mov
xchg
mov
inc
add
jne
lret
push
mov
sahf
mov
sub
jmp
mov
dec
xchg
out
mov
mov
add
fwait
loopnew
mov
and
xchg
out
jnp
push
cmp
cmp
pusha
je
dec
fbstp
cmc
ja
jp
adc
stc
xor
inc
jae
and
push
mov
inc
popf
xchg
ret
stos
mov
in
mov
mov
pop
dec
pop
imul
bound
pop
out
adc
mov
aas
leave
fstp
div
cmpl
inc
mov
decl
jmp
mov
fcmovu
add
int3
ds
pop
sub
in
fcmovb
repnz
xchg
shrb
out
jl
out
push
cltd
movsb
lock
push
push
sub
jge
ja
sbb
jno
aaa
adc
orb
daa
je
dec
mov
divl
pop
dec
mov
push
sub
push
xor
jmp
push
scas
or
mov
test
mov
jmp
cmpsb
pop
push
leave
in
inc
mov
enter
daa
or
cmp
sbb
enter
test
addr16
jmp
sub
xor
cmp
lahf
pop
mov
push
dec
ds
sbb
jp
xor
fcom
xorl
add
jb
xchg
push
cmpsl
cmpsb
push
insb
dec
in
in
push
sub
outsb
adc
sahf
int3
and
addb
test
mov
jb
and
push
pop
gs
sub
gs
lea
loopne
sahf
xchg
push
aaa
mov
mov
aam
stc
aam
xor
popf
adc
aam
cmp
dec
dec
xor
loope
push
lret
das
xor
loope
cmp
fldl
into
add
cmp
outsl
pusha
int
loop
add
imul
xlat
push
add
pop
jp
pusha
loop
lods
and
mov
leave
out
sahf
cli
arpl
arpl
cmp
sti
add
xchg
sbb
lods
gs
cmp
rolb
fnstenv
fimull
mov
mov
sbb
dec
aam
xlat
popa
push
xor
jno
jne
aas
pushf
scas
dec
fucomi
jmp
daa
pop
sbb
jg
nop
cmc
inc
rorb
iret
filds
adc
dec
sbb
sahf
je
lea
jecxz
mov
pop
lea
inc
inc
out
mov
cmpl
push
dec
inc
ss
int
mov
and
jb
and
mov
fisubrl
sar
pusha
mov
std
fidivrs
cwtl
cwtl
xor
mov
sub
mov
pop
and
lret
inc
push
push
mov
xchg
mov
sbb
lock
mov
lods
mov
rclb
aam
in
jge
subl
lea
add
jg
popa
mov
aam
loop
mov
lods
arpl
scas
clc
inc
mov
push
or
jge
dec
das
pop
mov
int
push
jecxz
fnstsw
mov
xchg
xchg
dec
pop
ljmp
mov
loope
fwait
dec
cmp
filds
xchg
sbbl
paddusb
push
add
lea
or
scas
jle
pop
dec
insl
mov
pop
pop
push
dec
mov
fisubs
xchg
or
sbb
push
and
jg
testl
cmp
jp
mov
xor
stc
xor
jbe
in
xor
xchg
scas
addb
test
fcompl
in
ja
lods
add
mov
mov
cmc
mov
iret
sub
lods
shll
jle
mov
pop
or
bound
cmpsl
jmp
imul
addl
out
cmpb
xchg
cmp
or
mov
fisttps
loopne
jge
sbb
mov
pop
jb
pop
nop
test
in
into
push
pusha
psubb
fisttps
mov
dec
pop
mov
inc
jb
pushf
jae
stc
mov
je
sbb
data16
push
add
stos
sub
test
sbb
xchg
scas
fcom
mov
adc
xchg
iret
shl
dec
ret
jl
push
xchg
push
hlt
int3
jb
arpl
mov
icebp
or
fs
mov
ret
or
mov
test
std
int3
sub
push
pop
pop
push
push
lds
fld
lret
mov
iret
in
mov
movsb
jnp
push
mov
sub
test
negb
aaa
rcrl
fimuls
mov
mov
jbe
std
dec
call
xor
inc
jecxz
scas
out
cmpsb
and
cmp
dec
push
push
jle
ret
xor
cmpsb
mov
mov
shlb
jg
icebp
cmp
cld
loope
loop
out
jae
cmp
test
xchg
mov
movsl
xor
and
add
push
and
ja
mov
mov
adc
pop
sbbb
cmp
pop
mov
subb
jmp
fmull
xor
adc
sbb
jns
cmp
sbbb
movsb
mov
xor
mov
mov
jne
pop
xor
sub
popa
ja
xor
lcall
ljmp
lret
stos
sahf
cmp
ret
stc
mov
mov
out
stc
mov
jo
xchg
jnp
in
jnp
cld
bound
mull
xchg
ret
xor
sbb
cmp
inc
or
cmp
into
in
das
cmc
xor
pop
outsl
aas
pop
jno
mov
testb
dec
out
in
data16
imul
jge
out
faddl
inc
lahf
call
sti
mov
dec
cmp
mov
sub
outsl
out
aaa
jge
fldl2e
or
les
aad
xchg
fistps
test
inc
sub
adc
adc
repnz
jmp
lods
jmp
aad
adc
nop
shlb
xchg
decl
inc
sub
nop
dec
mov
jb
into
jecxz
or
cmp
inc
int
fucomi
and
inc
sbb
push
lret
pop
cmpsb
sub
out
add
pop
lret
inc
mov
add
aas
sub
arpl
shll
notb
mov
cwtl
push
sub
mov
test
mov
lahf
repz
mov
outsb
lret
mov
mov
pop
push
shl
repz
in
xlat
shl
mov
negb
arpl
int
adc
lret
es
insl
and
inc
dec
sbb
or
mov
jmp
into
lods
and
cmp
cmp
ret
pop
and
and
imul
shr
rorb
dec
jb
pop
pop
scas
mov
pop
push
cmpsb
ficoms
mov
das
push
xchg
sar
or
and
pop
pop
gs
stos
mov
pop
xchg
enter
addr16
pop
int3
and
and
mov
xor
ret
push
and
pop
loope
dec
pop
mov
pusha
dec
jl
cmpsb
cmp
repnz
inc
push
outsb
adc
jp
xchg
fwait
fwait
mov
push
push
icebp
ss
mov
cmp
fistpll
lahf
ds
in
xchg
std
mov
mov
out
mov
loop
lret
ja
dec
stos
dec
ja
jmp
popa
add
fwait
mov
int3
dec
push
mov
xchg
mov
xor
call
jmp
cmpsl
pushf
adc
jns
and
push
sub
clc
sub
xor
or
push
or
jnp
addr16
xchg
int3
in
add
pusha
stos
push
xor
xchg
and
filds
mov
adc
push
aaa
lret
mov
mov
push
inc
lcall
fs
mov
mov
cmp
jp
scas
cmp
lret
push
cli
jle
adc
xor
iret
xor
pop
ret
mov
hlt
pop
std
add
dec
mov
inc
mov
mov
out
inc
es
cmp
ds
add
cmp
adc
jb
xchg
lds
outsl
pushf
shl
push
mov
and
push
movsb
push
es
push
icebp
push
jbe
sahf
sub
call
ret
aaa
nop
flds
xchg
aad
jno
or
lret
dec
insb
or
xor
mov
pop
movsl
and
loope
test
dec
sbb
inc
fdivs
dec
in
adc
jl
daa
jle
insl
cmp
in
push
sub
add
adc
xchg
test
cmp
pushf
lahf
xchg
or
sbb
and
loopne
sbb
add
pop
jge
pop
mov
dec
js
fwait
pushf
pop
lock
push
add
push
sbb
loopne
cmp
push
sub
sub
adc
push
mov
subb
mov
into
mov
pop
lret
and
filds
pop
outsl
jne
cmp
pop
out
jno
lret
test
and
jp
sahf
and
lea
dec
iret
lcall
sub
jle
or
and
sub
cmp
mov
push
popf
lret
das
xor
js
cmp
cmpl
mov
into
enter
cld
test
xor
push
outsl
push
icebp
and
loopne
rcll
push
mov
data16
mov
loop
pop
sahf
push
mov
aam
das
sti
pusha
or
pusha
subl
ja
stc
pop
pop
push
adc
ljmp
adcb
stc
adc
sbb
cmpl
out
mov
sub
sbb
adc
fs
add
mov
aad
push
add
loop
jle
adc
dec
pop
sbbl
aad
dec
imul
call
in
sti
pop
cwtl
xor
and
ret
sbb
sbb
into
je
inc
adc
ja
lret
jb
xchg
out
mov
dec
jmp
test
fadds
std
sub
and
outsl
stos
aad
lea
xor
loop
lock
loop
arpl
and
jle
loope
aaa
mov
ja
lock
jb
das
mov
mov
mov
push
mov
lahf
sub
insl
or
lds
ss
popa
add
lods
notl
in
lcall
mov
es
cmpsb
jg
rcrb
inc
cltd
and
gs
bound
imul
jbe
lods
stos
mov
ljmp
or
push
stos
jns
and
movsl
sbb
xchg
movlps
inc
js
setp
fisttpl
add
mov
mov
pop
dec
outsb
call
jle
and
lret
lods
jae
or
arpl
fwait
lret
push
testb
add
loope
call
and
jns
insb
mov
xchg
dec
sub
mov
scas
jp
testb
popf
lods
popa
ja
jo
dec
push
cmc
mov
jne
mov
fbstp
out
loopne
xor
test
out
lea
andb
xchg
add
imul
arpl
sbb
fstl
jecxz
scas
and
mov
idivl
fbld
sub
in
pushf
pushaw
inc
sub
fisttps
xor
inc
mov
shlb
push
popf
mov
movsb
mov
jg
mov
adc
xchg
mov
jne
imul
scas
sahf
lahf
rclb
jne
sbb
mov
lcall
hlt
fldt
rolb
push
movsl
push
pop
add
inc
mov
mov
push
fidivrs
xchg
dec
rolb
adc
cltd
dec
jb
jne
pop
cmp
dec
movsb
xchg
add
push
inc
jno
jbe
subl
ja
sbb
aaa
dec
push
movsb
or
xchg
js
or
xchg
test
rcr
in
xor
cld
stos
or
test
cwtl
test
adc
outsl
inc
addr16
cmpsb
test
cmpsl
in
cld
sub
enter
daa
jge
add
shlb
sub
bound
fldt
movsl
inc
cli
stos
and
jmp
sbb
dec
dec
add
xor
lret
pop
fstpl
mov
das
js
push
cmp
add
in
or
jno
inc
outsb
xlat
test
shrb
inc
jl
leave
pop
stos
cmpb
arpl
adc
jmp
push
popa
and
mov
pop
addr16
gs
clc
mov
imul
xor
test
mov
pop
mov
cmpsl
ljmp
in
push
adc
imul
dec
push
loope
jp
negl
je
lret
mov
cmp
xchg
orb
stos
mov
cmc
ret
xor
xor
mov
loop
inc
jo
xlat
aam
adc
xor
add
or
lods
popa
or
out
in
cli
cld
push
mov
in
aas
les
incb
out
in
adc
adc
fisttpll
mov
repz
out
sbb
cli
fstps
push
or
sub
mov
adc
daa
pushf
mov
push
cs
mov
aad
pop
cwtl
nop
xchg
dec
inc
insb
das
inc
and
and
push
or
jecxz
orb
jns
lea
lea
fs
dec
pop
dec
push
push
cmpl
push
fisttpl
movsl
pop
adc
mov
aas
imul
mov
xlat
outsb
mov
negb
sar
rcll
mov
xor
icebp
mov
dec
lcall
adc
and
das
xchg
jmp
dec
adc
mov
inc
aam
or
cs
lcall
cmp
dec
lsl
cmpsl
jl
icebp
mov
sbb
inc
lods
cli
inc
mov
fwait
aaa
test
insb
outsl
les
pop
cwtl
xchg
lds
fcom
xor
cmp
jo
loopne
mov
push
out
xchg
or
call
in
ljmp
add
mov
out
or
xchg
push
add
aad
stc
cmp
add
adc
jl
mov
mov
bound
dec
aad
pop
test
xlat
fldl
pop
xchg
sbb
popf
ja
push
leave
es
stc
jo
push
cltd
sbb
add
push
repz
popf
fbstp
xchg
mov
repnz
inc
fcoms
or
pop
mov
pop
jo
ja
sbb
dec
pop
push
lahf
mov
or
mov
rsqrtps
mov
jne
out
divl
insb
push
andb
sbb
rclb
pop
xor
cltd
out
xlat
add
dec
outsb
inc
or
loope
fcompl
push
aad
and
push
lds
pop
jnp
lods
nop
jle
mov
inc
pusha
loopne
ret
movsl
das
xchg
out
inc
pop
je
pop
inc
xchg
in
in
jae
adc
push
mov
out
mov
mov
call
xchg
sbb
sub
scas
add
lret
push
mov
jbe
hlt
pop
inc
iret
lock
ret
pusha
leave
mov
or
xchg
inc
ret
dec
and
aad
cmp
add
fisubl
clc
int3
ljmp
fisubs
lret
push
push
rcrb
mov
repnz
mov
xor
jbe
fucom
jge
jmp
pushl
push
out
or
bnd
and
jl
cld
in
dec
faddl
xor
push
scas
cwtl
scas
test
push
test
filds
jnp
sub
pop
in
jecxz
nop
enter
daa
jl
mov
loope
cmp
sub
cwtl
mov
ds
xor
movsl
inc
rorb
and
push
push
fwait
and
push
add
push
xor
sbb
js
mov
cmp
push
enter
nop
stc
add
pusha
int
outsb
cmp
add
or
add
push
in
mov
jp
mov
xchg
stc
and
dec
mov
or
sub
push
lcall
in
lds
sbb
and
test
call
cmpsl
jg
pop
xorl
pop
repnz
pop
cmpsl
ss
cmc
cmp
xor
pop
mov
xor
sub
jns
or
test
cmc
mov
xor
loop
outsl
fsubl
imul
cmpsb
out
add
pop
xchg
data16
add
mov
ljmp
cmp
mov
stos
out
popf
sti
mov
fwait
push
imul
mov
mov
je
popl
xlat
repz
cmp
xchg
sahf
mov
sbb
xor
movsb
push
sub
dec
dec
pushf
pop
aad
jmp
sbb
cs
push
nop
popa
je
dec
mov
popf
cmp
iret
je,pn
push
mov
repz
lea
or
call
jecxz
movsb
pop
pop
adc
loopne
push
fstpt
pop
mov
mov
inc
sub
es
fstps
mov
bound
shll
jp
negb
loope
jp
lret
cwtl
test
mov
and
nop
aas
xor
cmp
add
mov
addr16
lock
jae
je
xchg
lods
je
aam
mov
mov
push
out
xlat
ret
mov
sbb
mov
xor
mov
bound
mov
mov
and
hlt
sbb
adc
add
lods
cltd
std
mov
fidivl
out
inc
pop
fstl
xor
or
jns
lods
shl
daa
mov
data16
stos
push
enter
mov
mov
sarl
pop
clc
cld
add
or
pop
xorb
mov
sub
test
cld
dec
xchg
loop
sbb
adc
fucomi
popf
or
add
sub
xor
cmp
fiaddl
adc
dec
push
mov
jns
icebp
dec
in
rep
xchg
ljmp
mov
adc
addr16
inc
dec
dec
push
mov
mov
rol
jecxz
lds
add
mov
sub
out
bound
dec
push
xchg
jle
addl
stc
sub
jmp
and
jp
dec
or
push
mov
arpl
aas
fstpt
cmp
in
cli
jecxz
jnp
sahf
sbb
cltd
fnstsw
inc
sahf
and
aad
orb
popf
add
mov
std
mov
sbb
mov
imull
nop
push
scas
fs
push
iret
and
iret
dec
enter
test
leave
xor
pop
hlt
clc
xchg
push
arpl
mov
mov
or
push
add
sub
push
lret
pop
add
fwait
push
int3
aad
push
pop
adc
call
lds
pop
lods
mov
sbb
insl
cmp
stos
movsb
cmpsl
mov
push
fimuls
jbe
stos
mov
sbb
xchg
inc
aaa
int
adc
insl
and
jno
in
jl
orb
mov
mov
xor
mov
mov
and
stc
push
push
stos
mov
inc
test
sub
lret
enter
daa
jnp
cmp
xor
cmp
sbb
and
ret
icebp
jnp
dec
or
inc
enter
mov
push
sbb
stc
cmp
jo
lock
push
xchg
jno
sub
mov
pop
lods
out
in
push
rolb
pop
fdivrl
cmp
outsb
popf
sbb
adc
in
mov
andb
mov
xor
lahf
int
push
addr16
int
pop
leave
sub
cmpsl
sub
lcall
dec
mov
and
test
leave
ss
dec
dec
mov
cmp
stc
addr16
fs
dec
sbb
adc
ss
fisttps
fdiv
test
xchg
lret
bound
push
push
cmp
xor
or
in
into
jno
dec
cmc
push
mov
shrb
les
out
lret
and
inc
lods
adc
imul
out
imul
mov
pop
cld
push
cli
bound
push
in
adc
adc
leave
xchg
fsubl
mov
loopne
aaa
scas
pop
pop
cmp
adc
mov
inc
repz
inc
iret
xchg
popa
movsl
lea
jo
xlat
pushf
ret
mov
cld
adc
leave
mov
stos
je
cs
sbb
aad
cmp
mov
inc
dec
andl
sahf
mov
jecxz
add
testl
bound
pop
mov
insl
subl
mov
inc
fld
addb
imul
inc
leave
and
in
jne
roll
cld
jge
and
in
mov
lret
repz
dec
icebp
adc
arpl
lret
jo
out
mov
daa
mov
cmc
arpl
pop
xchg
pop
das
push
cmp
or
aam
push
ret
dec
and
es
cmc
insl
mov
cmp
push
mov
inc
scas
shrl
mov
add
mov
add
les
xchg
pushl
mov
lret
fnstsw
mov
dec
xchg
int3
fiadds
in
inc
dec
rorl
xchg
pop
adc
cltd
stos
inc
adc
xchg
in
adc
test
add
sub
push
pop
xor
mov
push
pop
stc
test
mov
xchg
inc
cmc
inc
jb
cmpsl
or
adc
fwait
push
addr16
push
fists
sub
sub
ljmp
in
xor
jge
jns
stos
inc
in
divb
xchg
rcrb
cmpsb
lcall
mov
ja
repz
enter
pushf
add
push
pop
dec
jecxz
push
jne
fdivs
out
sub
bound
out
jmp
bound
adcl
jbe
xor
xor
in
jb
fidivl
jp
outsl
pop
and
fwait
enter
xor
fldt
scas
pusha
push
or
xchg
sub
loop
xor
in
jae
and
popf
sub
mov
cmp
icebp
stos
imul
xlat
sbb
adc
imul
jb
js
push
push
je
adc
or
leave
cmpsl
fstps
hlt
inc
outsb
mov
mov
or
cmp
or
lret
mov
imul
js
lock
rorb
inc
mov
aaa
lds
call
repnz
adc
cmp
add
push
sub
jmp
jge
jp
sbb
add
or
pop
jno
leave
outsl
jl
fsubrs
dec
sub
inc
xor
or
iret
adc
ds
loope
jne
xor
push
aaa
cmpsb
xor
in
mov
or
add
dec
daa
jp
mov
loope
adc
cmp
pop
jne
inc
mov
aad
fucomp
ficompl
inc
push
das
sbb
mov
mov
adc
js
sub
in
out
in
sub
push
jbe
dec
fsub
dec
subb
pop
aaa
outsb
add
adc
shrb
out
movsl
cmpb
mov
and
and
repz
pop
xchg
mov
cltd
pop
loop
sbb
xchg
pushf
mov
mov
xchg
outsl
fistps
mov
xchg
test
mov
mov
jecxz
int3
stc
push
test
adc
or
cmp
stos
fimuls
pop
mov
or
cmp
sar
sub
cmc
sbb
xchg
outsl
lcall
imul
int3
data16
aad
mov
jo
popa
mov
cs
xchg
xchg
mov
mov
push
in
test
loopne
pop
mov
adc
movsb
fscale
pusha
fwait
les
nop
test
mov
adc
xlat
and
adc
pushf
mov
jns
cltd
nop
pop
jns,pn
adc
ret
stos
nop
pop
add
dec
pop
sub
lret
scas
mov
jno
adc
loopne
rclb
call
loope
sbb
fistpl
dec
mov
jle
fimull
push
inc
pusha
lret
fiaddl
push
fidivrs
inc
rorb
cwtl
in
push
mov
js
aam
aam
mov
in
std
enter
cli
mov
inc
mov
fcomip
or
mov
lret
fisttps
pop
mov
xor
lock
loop
mov
lcall
ret
fistl
repz
shrb
test
dec
add
xchg
cmpsl
jns
mov
pop
mov
lea
aad
mov
frndint
ja
sub
pop
and
stos
mov
lods
test
rclb
daa
imul
and
clc
cltd
ficoms
pop
ja
shll
mov
sub
mov
scas
pop
fimull
push
jg
add
adc
mov
imul
or
test
add
xchg
in
sbb
xor
or
repz
xchg
fadds
inc
sub
xor
push
cmp
cli
dec
mov
mov
mov
mov
shlb
daa
mov
nop
cmp
cmp
dec
dec
dec
dec
jne
loop
mov
mov
or
mov
jmp
sub
inc
add
mov
cvtps2pi
movsl
iret
or
inc
sbb
enter
dec
mov
inc
xor
je
mov
sbb
jp
push
pusha
mov
repnz
adc
xchg
aas
push
pop
sbb
nop
inc
mov
pop
jae
jl
push
and
popf
dec
mov
ficoms
out
stos
fsubl
cmc
xchg
pop
out
sbb
inc
xor
enter
test
adc
test
iret
or
fdivs
insl
jmp
mov
inc
int3
into
or
inc
mov
mov
cmp
sysexit
cmp
stos
movsb
mov
jb
jne
dec
pushl
shrb
adc
push
and
enter
mov
xor
pushf
cltd
prefetcht2
mov
dec
pop
scas
or
or
rolb
dec
xchg
push
lea
pop
pop
dec
xor
push
jbe
and
mov
test
inc
adc
inc
mov
rcrl
fcmove
std
mov
jns
pop
cmp
std
sub
xor
ds
pop
movsl
pop
stos
push
and
addr16
xor
push
adc
jle
pop
pop
ret
adc
push
push
movsl
out
pop
jns
dec
js
inc
out
pop
sub
push
xor
push
int
push
fcoml
dec
sub
iret
push
jnp
inc
arpl
mov
or
mov
jbe
int
cmp
sub
cwtl
dec
lcall
mov
bound
push
xadd
shrl
jg
lret
ss
scas
stc
aad
dec
fs
adc
adc
fsubs
scas
negl
xor
add
cmp
and
into
aaa
xor
cmc
xor
jo
outsl
jns
mul
adc
inc
jle
xchg
repz
add
mov
lret
lods
jb
fwait
mov
out
and
cli
enter
iret
or
jmp
mov
lret
inc
ret
decb
imul
loopne
sbb
pop
cltd
xor
adc
push
mov
les
and
sbb
out
or
sbb
mov
pushf
pop
sub
jmp
jo
fdivrl
subb
mov
in
dec
pop
adc
je
adc
and
rorb
pop
and
pusha
sbb
pop
mov
dec
mov
ret
pushf
outsb
sbb
xor
inc
jp
or
in
mov
mov
add
fst
and
mulb
addr16
outsl
mov
mov
jne
mov
icebp
adc
stos
ror
dec
mov
mov
cmp
lock
mov
mov
xchg
mov
aam
sbb
ret
push
and
jbe
lods
insl
mov
cmpsl
js
sarl
jne
hlt
lods
cmpsb
mov
lret
aaa
mov
mov
inc
sbb
scas
cltd
mov
imul
lds
mov
clc
aam
je
dec
jmp
nop
sar
stc
lcall
out
cmpsb
out
xchg
push
loope
jb
dec
push
mov
pcmpeqw
add
fists
mov
outsb
cmpl
in
xchg
mov
and
test
fwait
mov
xchg
and
mov
add
sar
lods
mov
loopne
cmpsl
jns
pop
stos
in
notl
xlat
outsl
test
mov
inc
inc
loope
jp
ss
sub
mov
rcl
fs
mov
or
pop
jne
push
inc
mov
flds
call
jns
jmp
clc
dec
and
out
dec
nop
sub
fidivrl
xlat
addr16
pusha
jp
fnstcw
and
inc
insb
mov
mov
jle
jbe
in
jne
pusha
dec
add
fildll
xchg
aaa
xchg
adc
mov
push
mov
inc
mov
inc
cmp
popf
jbe
mov
mov
cli
mov
outsb
das
cli
sbb
dec
subb
lret
int
push
movsb
inc
inc
adc
lret
iret
insb
fwait
es
hlt
leave
xchg
movsb
xor
fstps
mull
or
inc
iret
cld
cmp
rcrl
jo
pop
add
iret
in
mov
sbb
sub
rolb
sub
adc
fnstsw
jg
enter
lds
mov
jge
pushf
xchg
sbb
out
aaa
or
add
inc
mov
mov
dec
add
pop
push
inc
mov
divl
jg
scas
add
xchg
and
test
or
and
jg
cli
enter
daa
js
cmp
iret
dec
xchg
loope
jl
sub
mov
cmp
mov
ds
inc
movsl
arpl
andl
push
pop
pushf
push
out
insl
sbb
mov
std
xor
enter
mov
dec
js
in
addr16
push
outsb
push
rep
push
and
mov
cmp
add
sbb
cmp
adc
jbe
jecxz
movsb
cs
mov
and
mov
cld
shll
push
adc
jo
das
int
add
in
lock
loopne
ds
out
mov
mov
int
sub
sub
mov
out
ja
jg
or
xlat
stc
mov
jnp
ljmp
ss
push
into
fsubs
add
neg
sub
lret
ljmp
push
test
inc
sti
sbb
sbb
xor
cmpsb
outsb
aas
xor
fwait
outsl
pop
mov
popa
imul
and
jecxz
pop
and
out
push
cli
sti
movsb
dec
mov
push
loopne
sti
jp
fwait
xor
test
loopne
sub
mov
fldcw
add
les
inc
xchg
stos
cmpsl
es
and
scas
xlat
pop
xor
dec
adc
loope
pushf
pop
pushf
mov
cs
fwait
xchg
aad
stc
sub
sbb
stc
inc
andl
rcrl
test
das
leave
mov
lea
xchg
xlat
fbstp
loope
lret
xorl
mov
cmp
or
outsb
movsb
inc
xchg
pushfw
aas
test
fidivs
iret
pop
mov
mov
or
jb
ret
lret
push
xor
cwtl
jo
int
jmp
pop
jmp
in
bound
cld
in
test
mov
mov
jg
jo
in
lock
add
mov
aam
jb
ret
stc
subl
insl
jae
jmp
cmpsl
ja
aad
push
dec
aad
adc
ds
sbb
out
push
pop
pusha
loop
rclb
fistps
cmpsl
lahf
push
mov
adcl
cli
fnsave
mov
test
inc
negb
pop
adc
or
divl
xchg
mov
inc
push
paddq
pusha
or
push
jl
mov
ret
cwtl
xchg
cmc
dec
fcomp
arpl
pop
clc
sahf
sbb
or
aaa
mov
out
push
fwait
in
nop
das
or
jl
jecxz
dec
push
jmp
xor
add
adc
dec
xchg
es
mov
in
mov
jmp
orl
or
mov
jns
cld
dec
mov
mov
mov
cmp
out
push
bound
or
jmp
ret
xor
or
sub
aad
push
xlat
jl
jp
sbb
inc
insb
or
bnd
sub
shl
mov
pusha
out
stos
filds
pop
xchg
in
and
or
inc
lret
jae
aaa
fcoml
mov
scas
mov
stc
cmp
ret
xchg
lds
subb
jecxz
lock
push
jmp
pop
adc
sub
iret
lret
jmp
stos
leave
or
addr16
and
cmp
mov
jmp
rorb
jmp
push
lahf
mov
fisubl
jp
add
into
push
pop
sarb
ficoms
test
xchg
mov
addr16
ret
or
sbb
pop
jbe
addr16
sbb
dec
data16
leave
mov
or
pop
cmpsl
jno
dec
fs
jne
testl
fdivrl
dec
scas
push
and
inc
out
add
icebp
push
mov
frstor
data16
enter
daa
ja
sbb
add
sbb
cmp
test
movsl
push
test
scas
into
jle
outsl
cmpsb
or
cwtl
sub
jne
roll
add
pop
or
pop
rsqrtps
sub
or
push
mov
faddl
sub
js
outsb
sub
cltd
rclb
cmp
mov
insl
mov
out
and
ror
jae
adc
or
cmp
lcall
data16
sbb
mov
sahf
cltd
mov
test
fisubl
fwait
push
loopne
fmul
jne
inc
jl
fs
hlt
pop
adc
aad
std
adc
xor
ss
hlt
or
lret
jl
scas
stc
clc
cmp
pop
test
mov
sahf
into
std
mov
test
aad
inc
outsl
aaa
insb
loop,pt
dec
xor
into
data16
lret
mov
data16
xchg
dec
lods
inc
sub
out
pop
jge
cs
pushf
mov
shrl
sti
sub
inc
gs
sub
mov
inc
pop
xlat
inc
rclb
iret
xchg
call
iret
aad
repz
sub
xor
dec
cmp
xlat
cwtl
arpl
sub
adc
ljmp
jl
mov
stos
ficoms
jnp
ret
inc
xchg
sbb
dec
lret
in
je
mov
mov
push
pop
lea
mov
pop
pop
jge
loop
or
pushf
push
pop
loop
pusha
inc
cmc
sub
inc
aas
and
jb
mov
mov
sbb
rcll
std
mov
test
mov
cs
mov
mov
icebp
ret
lds
lret
sub
jl
push
out
xor
aas
adc
lock
loopne
das
iret
call
cmp
aam
sbb
xlat
es
sbb
cmovs
mov
mov
mov
imul
mov
jmp
ds
sbb
out
inc
arpl
jg
outsl
shlb
push
jns
adc
push
test
lods
cmc
push
mov
mov
clc
dec
inc
imul
cmpsb
in
pop
mov
fnsave
pop
xorb
add
lods
push
aas
pop
mov
xor
jno
mov
push
jns
loop
push
xchg
dec
aas
je
test
fs
xchg
or
or
nop
rcrl
jbe
add
xchg
mov
ljmp
jns
cmc
scas
in
dec
ds
jne
in
sahf
fldenv
xchg
sub
dec
mov
mov
je
mov
call
jns
jne
pop
xor
out
cmpsb
add
lcall
jne
orl
cmp
outsb
sub
rcr
dec
addr16
pushf
mov
dec
adc
and
test
jle
or
in
mov
inc
fbld
fsts
mov
les
jno
push
dec
xor
mov
cmp
xchg
sbb
jge
or
call
scas
push
repnz
push
xor
out
sub
leave
cmp
hlt
outsl
pop
test
lock
inc
aad
add
push
push
push
movsl
add
test
int3
insb
mov
loopne
xor
jle
cmp
push
repnz
pop
repnz
lock
movsb
pop
xor
push
imul
sub
mov
mov
or
or
movsl
cmpl
push
or
into
xor
jns
or
mov
push
test
mov
ss
cmp
or
enter
daa
jbe
mov
loope
jbe
sub
cmp
cmp
repz
movsl
jno
xchg
and
push
mov
inc
push
lea
in
sbb
mov
jnp
dec
pop
lret
sub
xchg
lret
cld
stos
pop
call
lea
push
shl
hlt
fcoml
mov
outsb
mov
ds
sub
xor
les
mov
push
mov
and
test
push
jbe
jae
jb
xchg
sub
filds
fiadds
lcall
aaa
mov
mov
sahf
cmp
call
andb
jg
mov
mov
fs
icebp
adc
aas
outsb
cmp
xchg
jns
notl
ss
xor
cmp
or
ficomps
cmc
xor
wrmsr
xor
jg
into
stos
fisubrs
mov
adc
xor
add
aaa
lods
daa
adc
dec
ret
xchg
out
ds
cli
popa
xchg
adc
adc
adc
sti
fmuls
js
sahf
gs
jmp
loopne
mov
testb
mov
cwtl
ficompl
into
addr16
xchg
xor
ret
sbb
cmp
adc
leave
adc
add
pop
idivl
jmp
test
cs
rcrb
fisubl
inc
test
sbb
je
adc
jecxz
cmc
cmp
lea
call
fstl
xor
bound
fistl
or
jl
jl
lret
enter
in
sbb
in
loope
dec
daa
sub
inc
cwtl
rcll
cwtl
into
div
in
inc
std
fs
shll
mov
push
fmuls
lcall
lret
fwait
mov
mov
adc
push
xchg
lock
das
scas
popf
sbb
jbe
in
xchg
es
or
mov
into
repz
popa
mov
andb
popa
push
add
xchg
jecxz
pop
sahf
js
shl
jmp
cltd
inc
rep
test
sbb
push
adcl
clc
test
xchg
pop
push
jne
sub
sar
pmaxub
int
icebp
stc
out
mov
xchg
and
jg
setb
or
cmpsb
mov
icebp
xchg
mov
dec
cmpsb
repz
sbb
rclb
gs
or
ret
inc
mov
push
push
mov
add
mov
cmp
mov
int
fnstenv
jns
loope
in
out
jecxz
les
mov
inc
cltd
mov
jne
ja
push
mov
add
pop
mov
push
jno
dec
push
sbb
mov
cmp
out
test
movsb
jmp
pop
or
out
daa
sub
fwait
mov
pusha
addr16
into
jp
mov
sbb
adc
xor
sbb
xchg
je
pusha
sbb
xor
xchg
mov
pop
inc
loopne
hlt
jae
out
je
adc
out
jmp
jns
mov
adcb
inc
stos
test
outsb
xchg
jae
sbb
push
fs
popf
scas
mov
inc
push
jns
hlt
adc
imul
xchg
push
xor
push
hlt
mov
dec
cmp
add
and
push
popf
pushf
cmp
mov
dec
push
dec
mov
subb
mov
int
mov
or
push
mov
push
mov
gs
cld
and
inc
sahf
push
aaa
inc
aam
or
mov
jno
pop
sbb
dec
push
push
push
push
jmp
addr16
aam
bound
sbb
sub
push
insb
mov
lcall
loopne
enter
daa
jne
les
push
test
ljmp
imul
and
leave
sub
pusha
int3
fistpl
jecxz
inc
add
xor
xor
mov
loop
jne
adc
arpl
pop
daa
mov
push
imul
cmp
mov
outsb
out
rclb
pushf
rolb
lcall
xlat
dec
pusha
mov
dec
mov
mov
loope
jns
jg
fldcw
xchg
pop
sub
mov
aam
xor
sbb
jg
fildll
lret
or
aas
ficompl
f2xm1
inc
mov
lret
mov
lcall
mov
cmp
push
xchg
das
notl
xor
lret
xlat
xor
cmp
in
or
out
cmc
sti
test
xor
xlat
mov
imul
hlt
andb
shrl
dec
cmp
mov
xchg
cwtl
out
sub
sti
xchg
in
fwait
jge
gs
pop
adc
loope
fsts
mov
cs
pop
mov
sbb
rolb
and
push
dec
push
sub
adc
pushf
or
inc
jmp
cwtl
xlat
cs
cmp
pop
leave
xor
cmp
adc
adc
pusha
mov
sub
pop
dec
stos
rol
or
out
shlb
pop
mov
pop
jecxz
inc
xorl
or
lds
bound
jge
inc
add
sahf
aas
popa
jge
jb
test
xchg
and
imul
loopne
divb
lods
mov
or
xlat
cwtl
mov
clc
add
jno
sbb
gs
cmp
or
ds
sub
mov
jnp
lock
out
out
jne
insl
push
pop
aam
outsl
add
inc
or
insl
sub
clc
cmpsl
je
leave
mov
shll
cmc
lods
push
outsb
aaa
mov
test
and
xor
sbbl
leave
mov
roll
mov
inc
in
lea
clc
rorb
ljmp
negl
cld
stos
loopne
mov
and
xchg
mov
test
icebp
xchg
aad
loope
mov
xor
insl
xor
arpl
mov
jp
xor
push
mov
xor
sbb
sub
inc
cld
stc
add
enter
stos
or
add
int
in
sub
mov
lea
in
jmp
mov
mov
xor
ja
out
dec
cmc
add
mov
mov
mov
push
dec
xor
hlt
cld
mov
fs
fs
bound
cmp
subl
out
add
or
rorl
aam
js
scas
push
adc
mov
fldcw
add
fildll
jg
popf
xchg
test
mov
xchg
pop
adc
xchg
inc
jmp
fwait
jae
mov
push
aad
pop
popf
adc
in
mov
and
sbb
lret
sbb
test
imul
push
rcrb
iret
call
pop
cld
leave
jno
call
arpl
call
dec
or
lods
jle
inc
sbb
lods
fidivrl
nop
add
stos
inc
int3
inc
ret
add
pop
es
jns
push
lds
cli
shl
cmpsb
mov
pusha
nop
dec
cmp
lahf
movsb
je
mov
jbe
imull
jge
mov
sbb
movsl
daa
aaa
push
mov
and
sbb
jl
dec
add
mov
pop
xor
das
xchg
add
mov
imull
aaa
cmp
cmpsb
inc
aam
in
sbb
test
je
outsl
cmp
add
sub
adc
cmp
xchg
ds
aam
movsl
jg
mov
jg
jo
int3
xchg
notl
mov
sbb
fwait
or
xor
jl
movsl
cmpsb
stc
pop
cmp
fidivrl
pop
cwtl
pop
lretw
daa
push
clc
pop
push
adcb
fdivs
push
mov
adc
loop
ret
and
mov
or
outsl
and
inc
sbb
jl
gs
pop
sub
pop
fsubr
popf
lcall
lods
mov
outsb
in
sahf
adc
test
fildl
js
out
aad
idiv
push
out
adc
ret
xchg
imull
cmp
or
cmp
xor
cmp
jae
or
shlb
cmc
ret
xor
in
icebp
outsl
aam
ljmp
icebp
cmc
adc
add
add
cld
push
lods
cmc
xchg
loop
inc
dec
push
out
mov
mov
add
mov
mov
and
add
jno
adc
fcmovu
inc
push
jecxz
lock
insb
jmp
xchg
mov
mov
cmpsb
dec
add
xlat
push
push
imul
jbe
gs
mov
gs
dec
shrb
lret
pushf
mov
nop
cmp
cmpsl
inc
iret
insl
in
lods
stos
std
je
mov
outsl
pop
insl
das
lea
ss
fildl
push
pop
xchg
in
inc
or
jo
fcomi
inc
xlat
pop
lret
loop
inc
mov
inc
add
aas
add
inc
jb
add
mov
mov
insb
sub
jbe
out
mov
ret
loope
mov
and
icebp
dec
cmc
cld
nop
add
les
xchg
lds
fsubrl
sbb
sub
aam
push
je
xor
cmp
insl
movntps
cmpsl
jae
xor
call
sub
mov
add
fwait
mov
fcompl
sub
cltd
mov
adc
mov
mov
lahf
fisttpll
idiv
sti
push
fwait
xchg
test
and
stos
rorb
repz
iret
jg
out
andl
aad
rcll
outsl
jae
add
addl
xor
je
mov
jge
lcall
clc
sbb
sbb
sbb
orl
mov
add
add
call
mov
jg
leave
jns
cmpsl
push
in
cmp
xchg
bound
mov
outsb
and
jmp
push
ja
xor
mov
pop
mov
xor
cmp
jne
push
lret
mov
out
inc
xor
jmp
out
sub
cmp
adc
sub
shrl
jp
xor
into
inc
mov
jnp
pop
add
xchg
test
pusha
push
iret
inc
ffreep
pop
stos
xchg
xor
inc
idivb
push
cwtl
push
es
cmp
daa
mov
cmc
adc
stos
mov
ds
rcrb
stos
iret
dec
scas
jl
std
push
pop
stos
pusha
adc
dec
loope
pop
dec
jo
call
xchg
dec
arpl
lret
fmulp
xlat
or
sub
cmp
xchg
push
fcmove
sub
nop
dec
ficomps
cmp
int
ljmp
jge
repnz
mov
movsb
jmp
test
cwtl
fdivrl
add
shll
lds
jns
add
sti
sub
cmp
push
mov
fnsave
mov
scas
pop
mov
and
imull
add
add
test
mov
add
jbe
fisttps
daa
jae
xchg
cmp
adcb
repz
inc
cmp
in
movsl
xchg
push
and
adc
dec
push
push
rorb
sbb
enter
inc
xor
xchg
mov
pop
arpl
pop
movsl
push
push
push
xlat
sbb
sub
sti
int
mov
push
adc
mov
arpl
cmp
lahf
mov
xor
and
negb
jg
pop
int
aaa
sub
repnz
pop
pop
lea
rcr
das
mov
jg
sbb
outsl
in
test
jb
xorb
jg
pushf
addr16
fwait
dec
stc
pop
mov
sub
mov
leave
or
rcr
enter
xchg
leave
or
popa
adc
or
ret
cmp
int3
or
mov
cmc
mov
xor
push
outsl
mov
cmc
loop
or
imul
adc
inc
daa
out
popw
push
loopne
fsubrl
sbb
push
cld
std
cli
cli
mov
call
sti
in
stos
loope
push
gs
outsl
loopne
lods
in
pop
push
mov
fnstcw
add
jmp
jmp
sbb
dec
xchg
xlat
xchg
inc
nop
sub
mov
int
cltd
pushf
pop
ss
jmp
bnd
aad
pop
test
idivl
inc
loop
inc
dec
and
fbstp
popa
jecxz
mov
pop
add
dec
call
pop
add
pop
dec
adc
fs
xchg
xadd
cmp
inc
adc
mov
aas
lahf
stos
in
jb
xchg
or
inc
mov
sar
cmp
idivb
pop
cwtl
pop
cmp
movsb
shll
jno
icebp
pop
mov
pop
lret
call
cmp
lock
push
das
dec
aam
mov
pop
xchg
ret
les
lods
mov
adc
idivb
test
mov
jmp
aam
sub
cmpb
cld
mov
mov
sti
testl
cltd
in
mov
test
pop
mov
idiv
push
lret
fnsave
mov
xchg
les
ljmp
dec
pop
imul
out
out
mov
stos
imul
scas
push
flds
pop
push
pop
or
sub
mov
xorb
fcmovne
lea
lcall
inc
sub
arpl
push
mov
iret
loopne
push
negl
addl
imul
scas
lods
jns
jg
in
fcmovu
xchg
mov
popa
mov
xor
mov
cmpsb
xlat
stos
ja
add
dec
cs
movsb
test
bound
push
push
mov
dec
or
and
push
jmp
mov
ds
out
push
mov
inc
xor
and
pop
sub
adc
rclb
in
mul
pusha
out
int
neg
xchg
add
cltd
pop
lcall
jae
add
push
pop
inc
sbbb
cmpsl
jp
xor
outsb
stos
add
movsb
sbb
iret
xor
sub
fildll
jge
and
iret
cmpsb
lods
add
imul
pop
gs
fwait
adc
add
add
sbb
or
mov
push
cmc
fisubl
cmp
int3
sbb
or
mov
stc
xchg
shrb
fidivrs
push
scas
inc
cmp
pop
pop
movsb
mov
ds
movsl
mov
jge
pusha
out
sbb
pushl
test
jge
clc
clc
add
add
push
push
dec
mov
sbb
in
jecxz
cmp
and
xor
insb
dec
push
int
mov
cmpsb
dec
mov
cwtl
enter
daa
jb
and
add
loope
sbb
cmp
or
movsl
lea
dec
lahf
or
push
fstps
lods
sbb
mov
mov
sub
pop
mov
mov
in
push
push
xor
cs
loop
ds
sub
jno
adc
cwtl
movsb
adc
fiadds
adcb
rorl
dec
insb
jl
es
xchg
push
cmpb
sub
jle
fisubrl
adc
jne
int
repz
xchg
sbb
push
mov
nop
lock
divl
stc
jmp
test
ss
andb
adcl
fistpl
xor
lret
cmp
stc
inc
or
shl
into
insb
jae
cmc
push
addr16
xor
into
loop
cmp
imul
add
shll
xorl
cmp
test
push
out
ret
cli
sub
lock
fsubs
xor
xchg
push
fwait
incb
mov
loopne
xor
pop
jb
je
out
fcmovne
fnstenv
rorl
jg
xchg
cmp
jo
hlt
add
cmp
push
jl
mov
repz
add
cs
push
fwait
aad
std
push
nop
out
fmull
loopne
inc
cmc
test
xchg
je
lods
mov
mov
bound
mov
or
mov
pusha
push
es
flds
aam
sti
push
push
dec
push
mov
fistl
divps
mov
cwtl
notl
jge
aas
ds
fnsave
push
mov
rcl
mov
dec
push
pop
idiv
mov
adc
mov
add
mov
insb
out
test
cld
out
aam
push
inc
int3
mov
test
das
sub
daa
sub
aam
mov
or
push
imul
dec
fcomp
pushf
cmpsl
jno
dec
mov
push
pop
add
jnp
mov
adc
xlat
pop
sbb
insl
rolb
and
jmp
je
push
lds
jno
cltd
xchg
add
sbb
notl
rcrl
insb
pop
adc
std
stos
lods
adc
sub
xchg
mov
push
cmp
add
pop
mov
xor
xchg
stos
mov
sbb
dec
inc
fnstenv
xchg
xchg
lds
or
sbb
sar
fwait
and
lcall
add
jnp
incl
adcb
push
shll
xchg
add
mov
push
mov
popa
testb
push
mov
mov
stos
leave
mov
adc
adc
sub
leave
es
xabort
outsl
stos
lds
loopne
out
dec
loopne
aaa
adc
fbld
clc
daa
jp
je
and
adc
in
or
in
inc
cli
pusha
mov
sub
add
adc
xchg
js
or
jae,pt
mov
push
stos
xchg
popf
xchg
cmp
jae
mov
je
inc
xchg
iret
sbb
imul
xchg
push
xchg
cmc
sbb
iret
add
mov
jae
out
and
pop
mov
in
stos
or
push
cmp
inc
cltd
xchg
stos
ficoml
jmp
cmp
pop
ljmp
insb
rolb
or
mov
add
movsb
adc
je
jbe
fwait
pushf
jge
sahf
mov
aaa
inc
mov
jno
sub
jl
ss
dec
seta
push
ja
inc
xor
inc
lock
int
cmpsl
push
cwtl
cmpsb
ja
sbb
cmpsb
int3
mov
in
rcrb
sbb
aad
mov
cmp
sbb
and
stos
sub
mov
jg
mov
and
aas
lahf
sub
cmp
mov
xchg
mov
out
push
mov
mov
dec
js
les
and
or
xor
add
nop
sbb
jmp
push
in
outsb
jnp
loopne
pop
sti
out
jae
jge
cmp
mov
mov
dec
sbb
xor
ficomps
int
push
loop
sbb
pop
push
test
or
testb
dec
sahf
imul
stos
lret
push
push
lds
lea
out
adc
dec
je
repnz
push
loop
fdivrs
mov
push
inc
aaa
stos
xor
cli
std
or
push
into
dec
fisttps
cmc
pop
les
pop
cmp
fbld
lahf
subl
xor
or
lods
stos
add
out
fs
pusha
mov
mov
inc
imul
daa
shlb
mov
mov
push
shll
xchg
lds
shr
fldlg2
in
jmp
repz
cs
decl
and
xlat
adc
sub
outsb
dec
adc
mov
mov
pusha
jmp
add
hlt
pop
pop
aad
push
jecxz
lret
dec
mov
pop
inc
or
je
movsl
aam
cwtl
mov
lea
in
call
pop
mov
scas
je
adcl
repz
mov
iret
inc
pop
jg
inc
push
pushf
movsb
aas
fucom
or
dec
clc
mov
pop
dec
and
fwait
test
and
cwtl
lea
mov
mov
imul
adc
lret
fldt
mov
cli
int3
lock
es
das
or
mov
dec
xchg
xor
jge
adc
loop
leave
mov
insl
les
cmp
int
test
lods
arpl
iret
inc
xchg
mov
sbb
mov
cmp
sbb
test
cmp
mov
xor
js
jmp
add
inc
mov
ljmp
push
pop
mov
push
out
lods
loopne
xchg
stos
fcoms
and
add
arpl
mov
xchg
cmp
cwtl
clc
xchg
sbb
adc
sub
push
cmp
enter
fildll
jmp
mov
in
sbb
xor
push
mov
sbb
fidivs
sub
jl
and
sahf
mov
cmp
dec
rcll
mov
adc
out
loopne
adc
lds
jmp
push
fmuls
out
stc
insb
sub
mov
mull
xor
jp
push
and
xor
stc
cmp
fwait
or
jle
scas
cltd
in
in
lcall
aaa
cmp
or
inc
pop
inc
mov
push
loope
cltd
popf
scas
call
or
and
xchg
orb
inc
push
imul
scas
movsl
inc
inc
push
fdivl
mov
cmp
cltd
iret
fs
ret
ja
dec
jo
hlt
xor
out
and
add
sbb
or
cltd
mov
stos
fimull
decb
pop
pop
int3
out
mulb
pop
sbb
fiadds
or
rcrb
mov
lods
popf
pusha
cmp
pop
movsb
mov
out
xlat
jbe
adc
rcrl
jmp
test
or
push
shlb
jne
jl
xchg
dec
jle
aas
push
pop
or
jo
loop
scas
clc
pop
cmc
and
xchg
xchg
arpl
inc
stos
addl
enter
daa
jo
cmp
addr16
loope
lds
cmpsl
mov
mov
push
es
fwait
jns
dec
or
jg
in
sbb
mov
adc
push
outsl
inc
mov
cld
pop
fdivs
js
push
jb
bound
push
and
adcl
outsb
fdivrp
jg
dec
iret
dec
rorb
movsl
pushf
sbb
lret
aaa
push
and
push
mov
int
cmp
sub
das
pop
fdivrs
lcall
sbb
jae
sahf
push
std
faddl
mov
xorb
sub
mov
pop
mov
cmp
stc
mov
pop
lret
xchg
xor
iret
cmp
mov
aas
outsl
cmc
fiadds
outsl
push
stos
test
imul
push
add
icebp
lcall
inc
mov
das
dec
mov
cli
xchg
ds
sahf
sub
in
scas
orl
adc
dec
dec
jno
mov
adcl
xchg
xor
les
inc
repz
mov
ret
sbb
stc
addr16
push
pop
popa
sub
ret
jbe
pop
jmp
xchg
cs
fimuls
movsl
sub
adc
adc
sbb
cmp
xlat
icebp
insl
jecxz
fsts
mov
call
xlat
adc
pop
bound
dec
in
jne
mov
fwait
pop
push
add
inc
cmpsb
push
inc
insl
iret
das
aas
jl
pop
jb
jns
mov
out
cmp
testb
mov
mov
cmc
arpl
movsb
imul
mov
add
dec
and
das
call
outsl
arpl
inc
adc
aam
stc
and
adc
mov
cmpsl
outsl
cltd
test
popa
inc
adc
fdiv
mov
pop
cltd
jecxz
cmp
pop
pop
fwait
xchg
shr
lret
xchg
cmp
decl
gs
cmp
push
adc
push
clc
out
mov
ljmp
mov
stos
mov
repz
icebp
fisubs
push
cmp
dec
bswap
adc
add
pop
or
add
mov
dec
adc
xchg
in
sbb
sahf
inc
out
test
fwait
pop
lock
push
loopne
xlat
add
push
push
xchg
incl
sahf
xor
mov
movsl
in
mov
jmp
mov
xlat
out
sbb
xor
push
mov
push
push
mov
icebp
movsb
ljmp
jg
xor
mov
stc
test
xchg
sbb
xor
sbb
or
in
in
lods
xchg
and
jb
insb
fs
out
dec
lret
stc
jle
mov
cmp
inc
jbe
aas
fldl
jge
lods
pop
aas
out
inc
and
jae
jbe
push
movsb
sarl
mov
icebp
sub
nop
xchg
jge
push
imul
scas
or
jl
and
lods
adc
pop
out
iret
ret
in
ds
cmpsl
leave
les
hlt
jl
jg
das
sti
filds
lret
mov
push
xchg
stos
out
mov
mov
dec
pop
dec
loope
fisubrs
movsl
pop
sarb
mov
jmp
push
cmp
cld
outsl
movsb
sub
push
xchg
lods
cmc
jbe
mov
leave
sbb
add
or
xchg
jmp
jl
dec
fimull
dec
clc
push
cmp
daa
and
call
andl
mov
xchg
int
cmp
pop
cmpsb
sarb
aas
in
sahf
xchg
repz
daa
outsl
sbb
loope
rcrb
cmp
xchg
lds
or
xchg
cwtl
push
push
inc
out
sbb
cmp
je
push
cmp
pop
mov
push
push
xor
icebp
sub
mov
adc
sub
sti
or
dec
push
sbb
and
jns
mov
ss
clc
addr16
push
sub
sarl
stos
mov
mov
test
hlt
push
loope
lret
jg
and
mov
lods
mov
sti
inc
inc
fs
ss
jge
fdivs
arpl
sub
fdivs
or
xchg
push
into
adc
test
outsl
das
jnp
loop
push
adc
cmpsb
ljmp
mov
mov
sub
cli
jnp
mov
sbb
sti
mov
mov
les
loopne
inc
movsl
pop
iret
adc
adc
jbe
pop
loopne
les
ds
repz
or
test
inc
sbb
xor
leave
xlat
nop
cmp
adc
pop
adc
bound
or
fucomp
fimuls
cs
inc
repnz
xorb
inc
or
add
je
xchg
xor
mov
mov
imul
lea
scas
push
and
pop
adc
jae
dec
iret
aam
fcmovnu
out
pop
cli
sub
inc
sub
push
push
aas
sbb
xor
jno
stos
sarl
es
test
pop
std
cmc
pusha
pop
cwtl
add
xchg
mov
mov
mov
xchg
addr16
jnp
addr16
lret
movsb
pop
pop
mov
or
ja
add
das
ljmp
mov
aaa
ss
aam
inc
sti
ret
add
mov
xchg
inc
out
xchg
fstl
leave
sub
mov
pop
ret
iret
lods
aam
mov
push
in
and
roll
add
ja
xor
mov
lods
pop
test
cmp
mov
andl
ficompl
adc
clc
and
xchg
rorb
rcrl
into
pop
adc
xor
out
jb
adcb
mov
roll
lahf
sti
or
sub
xor
mov
mov
mov
outsb
dec
ja
xor
xchg
popa
cli
inc
xchg
out
mov
push
cmp
add
outsl
jecxz
jmp
testl
jns
dec
enter
nop
xchg
in
call
scas
mov
xchg
lret
lock
addr16
loop
mov
pusha
push
loope
xchg
push
mov
sub
out
sahf
and
bound
loopne
xchg
out
jecxz
les
push
lods
loop
in
mov
or
sub
jp
sbb
pop
insb
iret
sbb
jnp
push
and
jg
js
jae
pusha
pop
nop
cwtl
fistps
sub
jbe
in
sub
iret
xor
addr16
and
cld
loopne
mov
xor
push
xchg
aam
dec
sbb
push
int3
imul
scas
imul
adc
dec
test
pop
adc
mov
mov
hlt
movl
inc
in
in
adc
push
push
jl
fisubrl
and
mov
out
pop
ja
add
lds
push
rclb
repnz
pop
daa
cmp
ds
push
loope
pushl
push
leave
mov
sbb
movsl
aaa
addb
jno
jnp
jl
xchg
pop
dec
pop
push
in
push
and
nop
jo
add
mov
and
and
ds
stc
or
inc
enter
push
stos
push
in
test
insb
daa
outsb
cmp
cmp
dec
nop
loope
lcall
or
cmp
push
clc
movsl
test
scas
jl
xchg
push
push
and
movsb
add
or
xor
add
aaa
sbb
pop
es
js
pop
pop
pop
loopne
sbb
push
mov
adc
ljmp
outsb
movsb
pop
and
rolb
testl
mov
icebp
andl
mov
dec
int
mov
sub
jbe
pop
out
lcall
adc
sbb
lret
jb
hlt
cmp
fidivrl
mov
mov
xor
stc
mov
sbb
mov
cmp
ss
add
cmp
outsl
outsl
testl
mov
cmp
testb
cwtl
or
into
clc
cmc
insb
xor
outsl
push
dec
std
loop
or
push
orl
inc
add
inc
lods
pop
jb
mov
ficoms
mov
test
sti
push
sbb
gs
xor
daa
pop
push
pop
out
cmp
pop
fsts
gs
inc
sub
dec
and
nop
sub
call
iret
aaa
cwtl
sub
and
pushf
mov
pop
jmp
xchg
fwait
cs
jp
nop
pop
repnz
rcrb
and
mov
iret
jecxz
inc
add
movsb
sbb
aad
into
pop
enter
push
jo
dec
mov
mov
pop
popf
dec
push
inc
mov
arpl
jno
aas
mov
insb
pusha
mov
cld
mov
sub
or
in
cwtl
mov
idivl
mov
xchg
cmp
xchg
stos
lret
adc
test
lock
push
xor
cmpsb
aam
mov
cs
fst
fsubp
inc
ret
push
dec
es
outsl
add
jns
into
dec
les
xlat
cmpsl
insl
fcmovne
mov
jb
rep
aas
push
jno
faddl
mov
sub
mov
sbb
mov
pop
cltd
inc
xor
adc
prefetcht1
je
fnstsw
mov
xchg
incl
scas
shll
adc
out
aad
xchg
jg
in
push
repnz
jp
je
or
sbb
rolb
fdivrp
mov
adc
mov
inc
sbb
and
fwait
mov
mov
mov
lock
leave
jns
push
xor
jle
adcb
rcll
enter
cmp
scas
int3
mov
lcall
mov
iret
lods
jo
push
xorl
push
jbe
jge
lds
cld
pop
jmp
mov
loopne
push
push
out
mov
sub
mov
lock
jp
imul
jnp
lcall
into
dec
sub
fistpll
rcll
lods
fildl
std
jae
insl
adc
sub
or
and
jg
outsl
shl
stos
inc
insl
jae
sub
scas
imul
scas
into
inc
inc
push
mov
lea
leave
lcall
lret
leave
mov
dec
hlt
adc
arpl
add
orb
or
xchg
rcl
fisubl
out
add
pushf
pop
int3
scas
dec
lods
pop
cmpsb
and
out
xor
cmp
mov
jno
mov
repnz
or
cmp
movsb
inc
pop
xchg
push
xor
in
sub
jge
orl
or
xor
jl
scas
leave
dec
lret
sbb
push
add
xor
lods
xor
xchg
add
mov
fisubrs
roll
fmuls
test
shl
daa
insl
fsubp
cmp
enter
push
ds
sbb
or
movsl
mov
fbld
mov
dec
out
clc
mov
gs
xor
cli
in
jg
dec
imul
sti
fs
pop
pop
in
shrl
xchg
mov
fcoml
cmp
pop
cld
mov
fcomip
jg
mov
adc
mov
push
pop
mov
and
and
and
xchg
bnd
adc
leave
jae
pop
push
adc
scas
mov
lret
mov
inc
lahf
sahf
negl
lret
or
je
sar
xor
sbb
dec
stc
imul
adc
ss
inc
jae
mov
sub
push
lock
adc
xor
push
cmp
inc
add
pop
inc
sub
cmc
xor
lcall
es
loop
cmp
les
mov
add
ret
sub
and
push
out
fs
sub
shll
lret
dec
test
mov
sarb
sub
outsb
int3
adc
bound
repz
xchg
push
sbb
stos
sub
push
cli
xlat
pusha
adc
or
pushf
pusha
adc
mov
rorl
nop
ss
and
inc
push
dec
into
dec
out
int
je
into
mul
aam
pop
jno
in
or
push
int3
fstps
stos
pop
sub
bound
fstpt
pop
ret
test
mov
xchg
lds
xor
mov
xchg
rcl
mov
testb
std
inc
rcrb
push
mov
hlt
icebp
sub
cld
mov
in
mov
inc
or
pop
nop
das
test
and
and
aad
ret
push
clc
in
es
dec
mov
inc
add
mov
lods
stos
cltd
xor
pushf
adc
and
or
pop
mov
cmp
cltd
adcl
test
orb
pusha
xchg
xchg
js,pt
ljmp
negb
outsl
stos
pop
jb
out
cmp
sti
push
int
cmp
jmp
jge
or
test
xor
sbb
pop
xchg
addb
push
lea
mov
push
or
enter
jecxz
push
leave
movsb
add
movsl
aaa
popf
jmp
xlat
push
xor
popf
jae
inc
or
or
mov
mov
or
ja
mov
dec
lea
stc
mov
ds
pop
dec
dec
mov
jne
sti
lcall
aam
bound
aam
inc
loop
xchg
jl
sub
pop
das
mov
or
cmp
jp
push
aaa
insb
movsl
inc
and
jle
sub
in
mov
nop
imul
idivb
cwtl
pop
in
clc
inc
inc
fstpl
jae
dec
push
push
in
ja
popf
dec
imul
push
scas
push
stos
mov
adc
sbb
and
pop
scas
xor
sub
add
loop
loopne
outsl
ret
gs
sub
xor
rclb
arpl
inc
repz
push
popf
push
adc
popa
fcmovbe
pushf
lcall
push
pop
aad
insl
ficoms
jns
lret
mov
cli
repnz
ljmp
int3
leave
push
jg
cwtl
jbe
adc
jge
xor
sbb
mov
aaa
xchg
xor
stos
cmpb
adc
lahf
rorl
mov
jae
imul
push
and
ljmp
out
mov
cmpsb
pop
call
imul
sub
cmp
hlt
fabs
xchg
leave
stos
sub
mov
jne,pn
movsl
mov
pop
and
aam
les
sbb
sbb
add
stos
imul
mov
xchg
fcmovu
js
push
pop
pop
and
add
scas
jecxz
inc
inc
pop
sub
xchg
outsb
push
xchg
adc
mov
out
lret
addb
dec
mov
lods
jp
orb
xchg
pop
clc
int
mov
aam
aam
lds
cmp
jne
daa
sbb
mov
clc
test
cmp
jo
push
mov
and
fs
fisubl
adc
stc
fs
in
arpl
int
popa
lret
lahf
xor
sbb
cmp
jbe
data16
mov
outsl
add
mov
add
mov
rcll
add
sub
jno
sub
mov
cli
pop
imul
push
inc
in
pop
xor
dec
lods
cwtl
fldcw
mov
adc
dec
dec
fcos
sbb
les
movsb
repz
adcb
cltd
lods
cmp
in
sbb
sub
notl
cs
sbb
stos
jnp
jecxz,pn
push
aad
adc
nop
adc
inc
inc
addr16
dec
xchg
jecxz
roll
je
lea
stc
call
shll
pop
cs
adc
fldt
pop
jecxz
mov
inc
fldenv
aas
clc
inc
sub
das
mov
adc
leave
testb
jae
xor
push
mov
or
mov
dec
inc
cld
call
push
ds
lock
mov
and
lock
das
mov
mov
sbb
dec
aam
sbb
ret
lods
loopne
es
xchg
ss
mov
sub
xchg
popa
mov
stc
in
mov
mov
popa
inc
mov
aam
mov
xor
mov
sub
int
pop
add
fldl
inc
rclb
test
jge
pop
push
imul
fwait
adc
xchg
or
dec
movsb
cmovs
lcall
cmpsl
dec
xor
iret
cmp
xchg
fmuls
test
hlt
push
xchg
mov
stc
inc
dec
in
or
inc
jecxz
sbb
je
inc
pop
loope
sar
mov
cmpsb
cmp
pop
xchg
in
jl
xchg
fcmovbe
dec
mov
inc
inc
mov
ret
shrb
sub
push
push
mov
pop
cmpl
fcmovbe
jne
jge
mov
loop
out
cmp
lcall
fldt
jno
add
fstpl
lret
push
mov
cltd
cmp
addr16
add
jp
sbb
xchg
fildll
dec
jnp
jp
jle
in
in
fsubrl
push
pusha
sub
xor
xchg
leave
push
pop
sbb
test
jae
jne
push
mov
adc
add
nop
push
in
xchg
cmpsb
insl
xchg
fldenv
lock
mov
push
aas
xor
daa
iret
aas
into
fadd
lock
loope
test
fsubs
imul
ljmp
inc
xchg
add
dec
add
sub
test
pop
add
in
xor
or
add
int3
in
mov
dec
add
movsb
push
fsts
dec
pop
jbe
push
cwtl
jge
lret
xchg
out
xorb
pop
jg
popf
mov
jl
arpl
test
ret
xor
nop
jo
lret
push
cmp
and
mov
cmp
sbb
cmpsb
fidivs
enter
daa
imul
stos
fs
sub
fadd
cmp
sbb
sbb
repnz
mov
jecxz
clc
push
sahf
rcrl
or
repz
jns
xor
adc
xor
pop
fwait
sub
sbb
popf
loop
push
cmpsl
push
push
inc
fsubr
ret
aas
ret
mov
int
insb
adc
xchg
into
rorl
mov
pop
xchg
push
sub
int
adc
mov
or
adc
lock
sbbb
repz
test
mov
orb
jg
jmp
sub
xlat
add
fs
jae
adc
lea
and
fsubs
and
stc
xchg
cmp
gs
or
sti
data16
mov
and
xor
push
iret
outsl
stos
loop
loop
inc
fldt
repnz
lods
push
dec
popw
mov
call
out
cld
pop
cli
xchg
js
mov
lds
sti
pop
insb
scas
stc
call
sti
loopne
and
dec
fimull
mov
fnstenv
jne
les
xor
loope
xchg
xchg
rorl
and
xlat
mov
sub
loopne
fcoml
test
pushf
mov
xor
lcall
aad
jb
nop
in
das
sbb
push
jl
jp
cmc
dec
fsub
je
dec
pop
cmpsl
jecxz
gs
ja
jge
ftst
or
mov
test
pop
loope
test
jnp
neg
fwait
add
pop
xchg
inc
dec
loopne
inc
hlt
cli
cmpl
jne
jl
and
out
js
jne
jo
rcll
dec
std
xchg
sub
les
mov
pop
lret
aad
lret
pusha
andb
xchg
icebp
xor
mov
inc
imul
jl
sub
es
aam
mov
ret
cmp
repnz
inc
add
dec
sbb
inc
scas
popa
mov
sbb
mov
loop
sti
and
aas
icebp
repz
repz
in
rolb
lock
test
and
inc
dec
insb
push
loop
hlt
mov
ljmp
adc
fs
shlb
push
fisubl
xcrypt-ofb
cmpsl
out
sub
lahf
sub
fisubrl
xor
aam
mov
cwtl
insl
lock
adc
xlat
xchg
jmp
inc
loop
jmp
fwait
inc
pop
push
push
nopl
fcmovnu
mov
pop
movb
loop
jns
push
je
pop
mov
data16
movsb
in
mov
jle
inc
ja
comiss
cmpsl
cli
mov
jp
mov
sbb
sbb
jne
and
sbb
jmp
adc
bound
pusha
cmpb
clc
xchg
xchg
inc
es
jp
subb
fcomps
jnp
cpuid
jle
mov
js
xchg
sbb
ficoml
xchg
pushf
int
pop
push
loopne
inc
pop
and
jae
filds
popf
cwtl
or
push
sub
or
xchg
xor
jp
or
mov
adc
add
enter
neg
iret
sahf
push
pop
ret
out
pop
icebp
fdiv
repz
arpl
inc
inc
stc
cld
nop
or
jnp
pop
inc
adc
popa
fidivrl
and
add
pop
aaa
int3
jo
xchg
ror
xlat
mov
lds
cwtl
mov
sahf
dec
scas
cmp
movsb
dec
push
sbb
lahf
stos
jge
inc
rcrl
mov
xchg
or
xor
jno
sbb
push
lods
pop
lock
mov
sbb
or
and
pop
insb
cmpsb
popa
cmc
in
in
and
mov
daa
push
call
loope
and
sub
cmc
push
cmp
jecxz
je,pt
loop
lds
lcall
jno
xor
add
fwait
dec
xor
push
cmc
inc
and
ret
js
out
mov
fsubl
jmp
push
aas
ds
out
test
xchg
adc
stos
outsb
xor
shlb
fimull
test
sub
cmpsb
mov
and
or
inc
push
daa
sub
add
pop
rorb
lcall
jl
pop
repnz
sahf
loopne
ret
test
icebp
gs
fs
mov
push
fyl2xp1
mov
fs
fwait
adc
call
cmp
pop
lret
dec
stc
stos
lret
push
xor
xor
push
jg
into
test
stos
xor
outsl
mov
or
mov
push
imul
adc
dec
mov
data16
xorl
cli
lds
sti
mov
xor
xchg
sbb
push
gs
pop
loopne
dec
hlt
pop
push
push
xchg
add
insl
je
les
adc
subb
push
sahf
mov
cmp
pop
xlat
lret
test
sub
aas
adc
xchg
mov
popa
stos
inc
jmp
outsl
push
test
aaa
sbb
dec
xchg
roll
iret
dec
push
out
je
lahf
mov
add
jp
pop
lea
clc
call
shll
rcrb
idivb
mov
mov
dec
fcmovne
mov
pop
sub
inc
shlb
test
out
ss
push
mov
sub
cmp
adc
mov
cwtl
stos
fisubs
mov
sub
icebp
scas
xchg
inc
cld
xlat
lods
lret
iret
jbe
mov
and
lock
adc
mov
or
or
cmp
and
jne
mov
mov
xor
xor
mov
add
sbb
nop
pop
adc
rcr
stc
popf
cltd
fisttpl
lea
movsl
arpl
fst
aad
clc
dec
enter
jne
ljmp
iret
pop
insb
push
add
and
add
xchg
fwait
cmp
push
pop
imul
mov
lret
or
xorb
lds
fwait
jbe
dec
jp
sahf
test
jnp
xchg
cmp
jae
jns
clc
or
mov
fwait
jbe
pop
push
mov
adc
test
std
ret
stos
xor
repnz
in
push
out
xchg
js
loopne
add
pop
and
mov
xchg
dec
scas
push
mov
mov
cmpsb
mov
or
jne
scas
fbstp
stc
jns
cld
jb
jmp
fisttpll
clc
out
pop
push
sub
in
addr16
sub
popf
outsb
and
pop
jnp
imul
ljmp
adc
push
inc
fs
xor
mov
popf
mov
xchg
fcoml
dec
stc
stos
or
xchg
xchg
mov
imul
mov
push
int
inc
adc
jecxz
push
lcall
ds
arpl
bound
hlt
imul
negb
mov
in
cmc
test
jg
hlt
int3
pop
mov
pop
or
jp
cmp
adc
and
add
xchg
cmp
add
insl
adc
push
insb
mov
jbe
xchg
jg
or
ljmp
lds
add
jno
jg
jl
addr16
xchg
push
push
in
cmp
sbb
sbb
add
jg
test
or
pop
inc
xchg
outsl
mull
or
enter
daa
imul
mov
cmp
out
ds
dec
fisubl
sub
dec
push
inc
adc
sbb
add
xor
adc
push
iret
pop
jmp
inc
jle
sbb
and
mov
faddl
push
sbb
stc
push
adc
dec
cld
orl
fisttpl
icebp
cmp
push
popf
inc
test
lods
jno
sub
adc
rol
push
mov
mov
sbb
stc
rolb
imul
in
mov
ficomps
fs
jmp
mov
aam
cmp
push
shr
testl
xchg
shll
cmpsl
je
call
jae
ret
jg
mov
dec
mov
pop
outsl
imul
cmp
jo
add
push
mov
push
jbe
loop
decl
dec
movsb
inc
cli
clc
scas
scas
mov
fwait
insb
fdivr
mov
cmp
out
rclb
pop
mov
adc
popa
fldenv
add
push
cmp
mov
xchg
mov
add
movb
pushf
or
or
js
xchg
cs
mov
nop
mov
sbb
inc
mov
mov
in
shl
jp
jge
xor
mov
push
dec
mov
and
orl
fstp
stc
and
pop
int3
sub
inc
push
lret
cltd
inc
sub
aas
aad
xor
pop
mov
mov
mov
notb
add
fucomip
xor
sbb
xor
jl
mov
cld
imul
hlt
mov
mov
push
das
add
loope
lret
sub
jbe
aam
call
inc
cmpsb
pmaddwd
dec
decb
push
and
gs
mov
lods
push
psubw
sub
jbe
push
adc
mov
xor
shrb
fisubrl
dec
or
mov
lret
fists
inc
mov
clc
test
xchg
cmp
ljmp
lcall
push
in
les
xchg
loop
jmp
cmp
add
test
push
xor
mov
xchg
ja
test
pushf
fadds
push
jmp
lret
cmpsl
sbbb
addr16
rolb
pushf
lds
adc
sub
xor
xchg
and
mov
leave
xchg
mov
hlt
push
add
jnp
dec
pop
imul
adc
orb
movq
pop
xorl
arpl
jmp
test
or
movsw
cmpsb
sub
mov
std
addr16
adc
and
xor
insb
push
mov
jle
call
add
or
xchg
inc
das
push
pop
shlb
inc
outsl
mov
fcoml
stc
stos
jo
out
lock
stos
repz
mov
imul
inc
scas
mov
sbb
adc
inc
insl
iret
pop
popa
pop
ret
leave
add
jecxz
arpl
cmp
or
jno
daa
inc
adc
rcr
mov
adc
pop
xchg
test
ficomps
in
shlb
ds
inc
js
cmp
insb
and
push
sbb
jge
out
sbb
sbb
or
popa
jno
in
aaa
jl
cmpsl
mov
push
jb
sbb
jo
inc
pop
scas
lock
shll
xchg
dec
and
mov
mov
in
out
mov
test
push
lods
sbb
sub
lods
pusha
cmp
mov
xor
ret
enter
mov
push
pop
push
sbb
xor
adc
cwtl
pop
adc
js
xor
pop
pop
xor
push
xchg
sbb
fsubr
ss
sub
call
adc
xor
xchg
add
or
loopne
orl
cmp
fsubs
mov
jge
int
ja
sub
inc
rolb
rcrb
lcall
jl
mov
adc
pushf
mov
lods
jg
mov
stos
stc
cld
rcrb
sti
xor
adc
inc
mov
cmp
shrl
test
sub
xor
inc
cmp
dec
test
into
dec
mov
xor
fnstsw
outsl
dec
lcall
sbb
hlt
add
in
test
and
mov
or
inc
mov
sub
push
mov
add
push
mov
bound
gs
push
adc
leave
xor
lcall
fistpl
les
repz
xchg
ficoml
pop
cmp
mov
xlat
dec
stc
sub
cmp
adc
ss
jmp
jae
outsl
and
aad
out
and
dec
or
xor
push
add
aad
je
and
jecxz
ljmp
push
mov
call
iret
clc
add
and
ret
push
fldt
pop
pop
pop
outsl
incb
fiadds
cmp
jb
and
mov
ds
ret
shll
negb
popf
xor
fstps
mov
pop
icebp
pop
jo
cld
xchg
push
add
lods
stos
push
mov
stc
mov
mov
lock
hlt
das
loopne
das
mov
clc
adc
mov
sub
es
push
insl
jecxz
or
cmpsb
mov
fistpll
cld
xchg
lods
sarl
mov
push
imul
rolb
lret
push
orb
lock
push
sub
je
mov
or
jne
pop
sarl
add
stos
add
out
daa
scas
xchg
sub
test
roll
add
mov
or
cltd
xor
fsubrl
mov
mov
outsl
shrb
rorb
inc
cmpsl
or
xchg
jno
fwait
aam
add
clc
stc
loopne
pusha
inc
xor
sub
add
cmp
adc
arpl
dec
jns
pop
repz
jle
xchg
push
jb
mov
mov
mov
scas
cmc
inc
ja
negl
dec
mov
imul
cmp
jo
mov
lock
out
mov
out
bound
out
jmp
jae
and
jmp
dec
or
pop
cli
jp
lock
xchg
mov
push
jnp
push
dec
in
xchg
dec
pusha
xchg
out
fbstp
sahf
jo
adc
mov
pop
jae
mov
push
mov
push
out
out
mov
push
jmp
xchg
sbb
pop
mov
fisttps
cltd
push
pop
ficoml
adc
add
mov
leave
jl
aam
aam
push
arpl
mov
ret
push
lahf
test
push
mov
add
pop
ds
rolb
rol
lds
mov
xchg
mov
xchg
pop
js
cmpsb
jp
movsb
and
push
or
fnsave
jge
or
leave
aaa
mov
lret
sbb
jge
jl
mov
jmp
xor
into
jmp
scas
iret
fnsave
and
jmp
test
xchg
inc
mov
scas
cmpsb
ljmp
enter
daa
addr16
nop
cmp
pop
imul
cmp
inc
cmp
iret
adc
push
movsl
ficompl
pop
lahf
pop
cmp
ljmp
add
stc
xor
or
bound
pop
cltd
push
cmp
push
fcoml
push
push
outsb
pop
mov
adc
add
repz
loope
addr16
iret
pop
mov
cmp
and
adc
mov
pusha
loopne
stos
testl
loopne
inc
shl
mov
sbb
xchg
leave
push
fiaddl
mov
out
sahf
mov
sub
mov
pop
xchg
mov
cmp
mov
dec
lret
mov
push
mov
cmp
xchg
xchg
or
andb
xor
mov
imul
imul
stos
add
test
and
mov
popf
loop
inc
pop
xchg
cli
pop
mov
mov
jno
out
sbb
sar
test
gs
xor
loopne
cmp
loop
adc
rclb
adc
les
mov
xchg
popf
mov
sub
or
outsb
xlat
mov
sub
mov
bound
cmp
shlb
aad
fistps
nop
pop
out
adc
imul
inc
cli
mov
je
fs
sahf
mov
lea
sub
test
daa
ss
lods
xchg
daa
cmpl
arpl
push
pop
mov
enter
inc
out
pusha
pop
and
adc
stos
jb
and
mov
leave
in
fwait
shll
mov
std
sub
mov
pop
mov
cmc
icebp
xor
pushf
cld
mov
in
sub
inc
popf
loope
scas
adc
das
mov
cs
sub
push
fst
imul
js
arpl
lods
dec
adc
in
dec
mov
subb
mov
mov
mov
outsb
jbe
and
stos
pop
mov
outsl
pop
rclb
imul
dec
xor
out
pop
xchg
fisttpll
xor
cli
adcb
mov
adc
insl
cmp
stos
repnz
out
mov
dec
xchg
jo
push
push
out
and
adc
jmp
pop
or
xor
mov
movsb
dec
test
test
fwait
ja
mov
les
orb
fwait
add
push
fwait
adcb
adc
fcmovbe
out
xor
mov
cmp
into
mov
out
pop
push
pop
ja
negb
mov
push
mov
push
pop
mov
jb
dec
lahf
divl
shl
mov
movsl
mov
xchg
inc
dec
bound
dec
inc
xchg
adc
out
cwtl
mov
and
imul
mov
pop
and
sbb
insb
daa
lods
sbb
push
or
xchg
imul
xor
xor
push
push
cs
cs
and
mov
push
cs
jg
ret
bound
push
sub
mov
mov
sbb
dec
in
into
sbb
scas
sbbl
mov
fisttpll
iret
sbb
or
push
sahf
hlt
pop
fs
arpl
dec
add
insl
fadds
nop
sub
push
mov
cmpsb
int3
sbb
sbb
mov
xor
test
test
loop
test
ljmp
movsb
push
dec
rcpps
or
sub
jge
sbb
sbb
into
aaa
js
mov
jno
xor
push
movsb
xor
aam
jl
cmp
xor
sub
pop
and
adc
push
push
jg
inc
inc
aas
mov
in
mov
add
shlw
cmp
pop
loope
mov
bound
jl
add
bound
stc
sbb
lahf
jle
ss
mov
out
add
imul
imul
dec
addr16
pop
pop
sub
shlb
and
cmp
inc
test
sub
or
adc
mov
xor
mov
mov
mov
jle
cmpsb
inc
pop
int
sub
jb
into
js
lcall
mov
sbb
xchg
aas
sahf
insb
pop
push
test
push
mov
mov
mov
stc
push
imul
imul
dec
into
lcall
call
cltd
xor
je
cmp
scas
call
into
adc
cmc
movsb
mov
outsl
push
jle
loop
fs
imul
jno
add
cmpsl
lods
xchg
rcll
std
ret
inc
jle
cli
xchg
inc
dec
mov
fcoml
inc
sti
enter
test
cmp
add
pushl
sbb
je
mov
repz
pop
es
inc
mov
sub
arpl
cmp
pushf
or
xchg
aad
xor
nop
xor
mov
inc
fldenv
jno
das
push
fdivs
repnz
xchg
adc
fcompl
and
sub
pop
pusha
fldl
orl
jmp
mov
mov
lahf
inc
in
sbb
inc
jnp
test
mov
aas
jb
push
insb
mov
push
stc
roll
std
xchg
mulb
inc
fscale
aam
push
mov
popf
rorb
fisubrl
cld
ljmp
mov
add
mov
shlb
dec
sbb
sahf
or
sub
cmp
aam
test
push
es
adc
mov
jnp
pushf
cmp
mov
sub
mov
push
fwait
sarb
gs
sbb
mov
shlb
sub
test
mov
push
push
cmpsb
push
mov
pop
fnsave
sahf
clc
xor
stos
inc
ljmp
mov
stos
loope
adc
in
pop
ret
cltd
rclb
mov
jb
insb
loop
sub
fucompp
mov
cmpsl
and
dec
push
or
test
jns
xchg
stos
jle
aad
xor
call
fs
bound
jns
aam
or
jns
int
in
divl
mov
dec
mov
lods
mov
and
jp
dec
xor
dec
mov
and
mov
inc
call
dec
jne
ret
or
cmp
jmp
or
inc
or
pop
out
aas
mov
jnp
mov
lds
dec
and
ret
mov
lods
jnp
js
jle
ja
in
and
inc
fbstp
dec
xchg
mov
fiadds
jae
in
inc
push
inc
rorl
pop
push
int
fs
and
add
stos
fdivs
in
jecxz
leave
sbb
or
cs
out
mov
adc
sbb
ret
sub
push
xor
push
in
lds
sbb
xorl
nop
cmc
xchg
das
jg
lea
fidivrl
and
pop
push
ret
outsb
fiadds
inc
aas
lds
dec
test
sbbl
cmp
push
movsb
cltd
push
repnz
test
xchg
jbe
repnz
push
mov
hlt
jns
aaa
aaa
inc
mov
jno
or
andb
inc
fdivrl
xor
test
nop
and
hlt
test
sbb
cs
iret
popa
aam
lock
in
movsb
dec
stc
enter
daa
gs
push
cwtl
fsts
xor
hlt
ret
inc
popa
and
call
jecxz
lahf
popf
push
push
nop
test
scas
add
xor
xor
mov
adc
cmpsb
pop
test
xchg
js
or
pop
es
push
rorb
in
push
or
fld
push
outsb
pop
aaa
ds
mov
mov
pop
fcmovnb
mov
xlat
mov
in
jmp
fimull
dec
sub
dec
bound
and
mov
push
sahf
unpcklps
test
adc
jg
or
mov
rcpps
and
fs
ljmp
mov
xchg
cmp
add
es
xor
push
mov
stos
mov
dec
into
repz
mov
xor
sbb
in
fwait
loop
cmp
imul
outsl
pop
add
dec
and
pop
fldt
clc
jl
out
and
cli
les
test
inc
dec
mov
dec
dec
inc
or
xchg
lcall
adc
or
les
and
xchg
and
sbb
adcb
push
rcr
sub
dec
push
pushf
mov
mov
cs
hlt
xchg
aad
out
and
dec
sub
inc
in
jle
dec
cmpsb
mov
jecxz
rcl
mov
cli
lea
mov
lahf
sub
dec
adc
adc
pushf
andl
popf
outsb
pop
pop
aaa
aad
jae
add
sub
push
cmpsl
dec
jb
mov
arpl
arpl
mulb
imul
adc
mov
test
loope
frndint
adc
mov
push
mov
clc
dec
lock
add
jge
jne
push
inc
pop
sub
lds
aam
cmp
ret
xchg
lods
iret
es
popa
insl
cwtl
push
mov
cmpsl
or
inc
mov
sahf
mov
mov
andl
lods
jnp
sar
ss
cltd
out
jb
test
test
je
inc
fstpl
mov
xchg
ss
into
icebp
mov
pop
ret
sub
stos
rorb
cmp
push
xchg
inc
xchg
jmp
push
movsl
pop
repz
dec
jne
adc
in
movsb
mov
mov
stos
outsl
cmp
lods
dec
test
ljmp
and
insb
mov
or
dec
fwait
popa
sbb
add
jge
sbb
sbb
mov
pop
nop
sarl
jge
popa
xor
xchg
add
mov
push
subb
pop
mov
ja
orb
aaa
adc
xchg
gs
bnd
add
mov
dec
mov
fistpl
call
sbbl
out
pop
es
jbe
push
les
dec
jp
mov
and
xchg
mov
jle
in
in
xorb
out
jb
xchg
or
xchg
mov
pop
pushf
arpl
jae
in
jle
add
sub
push
cmpsb
mov
jne
cmp
sbb
mov
or
dec
int
push
xor
adc
iret
fdivs
fwait
leave
loope
add
mov
out
aam
jmp
or
pop
xchg
inc
or
neg
insb
lcall
repnz
dec
test
daa
lds
pop
mov
nop
inc
insl
cmp
jnp
movsb
and
bound
bound
test
popf
jge
fldenv
aaa
imulb
or
inc
jno
pop
stos
lock
dec
mov
xchg
push
incb
xchg
fists
scas
insb
ret
loopne
sub
out
jmp
cmpsb
jae
cli
in
mov
enter
daa
fildll
loope
xchg
jo
cmp
lcall
push
add
das
mov
push
push
arpl
inc
sbb
dec
mov
aad
xor
arpl
js
mov
pop
push
nop
sbb
leave
dec
fcompl
ret
fldcw
push
cmp
xchg
int3
push
adc
sbbb
repnz
xorl
loope
int
je
sub
sub
int3
cmpsl
int
stc
imul
int
jge
jns
push
mov
sbb
mov
cli
ret
sahf
divb
fadds
fcoms
sub
cmp
mov
mull
mov
orl
cmpsl
add
cmc
xor
add
xchg
add
outsl
les
loop
inc
shrl
cmc
adc
shrl
mov
hlt
out
lods
gs
mov
lret
inc
dec
cmp
testl
sti
es
out
ss
adc
js
xor
shll
js
int
mov
push
les
dec
dec
xchg
out
mov
cmp
lret
add
ja
pushf
arpl
or
aad
or
jmp
add
inc
decl
popf
dec
sbb
sbb
out
mov
lea
dec
cli
lret
lret
mov
cmpl
in
pop
sti
fdivr
inc
cli
in
hlt
inc
mov
pop
aas
lock
jb
pop
add
and
sbb
js
cmpsb
mov
std
and
cwtl
or
mov
cmp
dec
icebp
mov
dec
lret
imul
mov
xorb
mov
or
pop
add
mov
aam
aam
and
and
add
insl
jg
inc
dec
xchg
or
sahf
mov
pop
lret
push
lods
insl
les
mov
xlat
push
xchg
and
jl
rcrl
nop
and
int3
js
cltd
and
cwtl
dec
mov
sub
fnstsw
xor
add
inc
fwait
dec
rcrl
sub
stos
mov
mov
jge
adcb
add
nop
or
lret
adc
sub
xchg
xor
test
lock
xchg
es
sbb
mov
inc
add
or
loope
fwait
nop
push
sbb
add
cwtl
adc
pushl
cmp
jns
adc
xchg
push
dec
and
in
pushf
lea
pop
movsl
ja
push
push
dec
sbb
cs
and
jns
jne
movsb
test
xor
inc
bound
mov
icebp
mov
lcall
ljmp
jno
jl
ret
hlt
enter
sub
orl
or
data16
inc
fucom
adc
push
pusha
add
imul
popa
xor
pop
rorl
jae
xor
enter
test
fstpl
stos
mov
lcall
fwait
dec
cwtl
scas
lods
cmc
xor
adc
pop
iret
aaa
push
fld
mov
xor
jecxz
xchg
dec
cmp
fdivs
inc
mov
ficompl
movsb
xchg
or
inc
int3
frstor
lods
fimuls
lds
add
or
jecxz
std
cmp
jns
push
inc
push
ja
enter
testb
aaa
mov
or
sub
push
rorb
cld
push
loope
inc
xor
cmp
scas
dec
sarl
dec
sub
mov
dec
inc
in
jb
cmpsb
imulb
in
jb
mov
daa
arpl
loope
dec
test
repz
cmp
mov
movsl
imulb
enter
call
sbb
jo
add
mov
call
cwtl
push
and
js
outsl
cs
xchg
pop
fwait
push
adc
inc
mov
sub
lea
adc
insl
gs
outsl
jns
subb
mov
mov
and
inc
push
push
scas
pop
xchg
int
out
push
sub
test
rorl
mov
pop
pushf
sahf
push
fld
test
sti
add
pop
ss
pop
pusha
xchg
stc
mov
push
adc
shll
into
cmp
js
push
testl
inc
cmp
ljmp
or
add
mov
fisubrl
icebp
std
adc
mov
subl
adc
addr16
xor
ja
aaa
ds
lods
dec
cmpsl
xor
inc
cld
jb
sub
adc
leave
jmp
aam
aad
arpl
adc
andb
fnstsw
rclb
pop
adc
test
out
pop
les
mov
xchg
test
pop
xchg
clc
test
ljmp
insl
pushf
push
adc
adc
cs
inc
pop
aad
mov
nop
out
rorb
mov
jno
xchg
loopne
je
lods
and
push
dec
and
call
dec
or
adc
xlat
dec
fistl
repnz
sahf
jbe
inc
sub
xor
jb
sub
frstor
and
sub
in
popa
xor
leave
and
mov
push
mov
adcl
lret
fcoms
sub
out
out
cmp
jnp
cmp
adc
lret
xchg
pop
aam
mov
or
mov
enter
push
jo
bound
popa
outsl
sbb
mov
cli
push
adc
pop
mov
jmp
adc
lahf
out
scas
cltd
pop
pop
js
mov
jo
cli
divl
out
insl
xchg
mov
and
shll
ficompl
cltd
stos
scas
xchg
dec
out
push
fsubl
xchg
mov
setg
sbb
xchg
mov
xor
into
push
mov
mov
cltd
dec
dec
mov
and
xchg
and
lcall
fwait
mov
and
add
mov
aaa
call
push
xor
adc
or
ja
sub
ficoml
mov
pop
push
and
ja
sbb
adc
push
pop
orb
aaa
je
and
adc
push
bound
adc
jmp
push
scas
cmpl
out
out
jle
rolb
insb
jne
addr16
jp
or
and
push
insb
rcl
add
dec
bound
fwait
test
pusha
sahf
push
fcomp
sarb
xchg
pop
or
inc
mov
fdivs
mov
mov
mov
and
int3
stos
xor
gs
call
dec
imul
dec
push
mov
add
mov
leave
iret
jl
hlt
dec
push
shll
jno
inc
adc
insb
or
push
out
in
inc
or
fcmovbe
popa
testb
add
int3
enter
stos
shll
les
fcmovb
fld
sbb
ss
cmp
pop
mov
cmp
stos
push
xchg
xorl
sub
and
inc
push
or
test
jno
insl
fistpll
movsb
dec
nop
daa
fisttps
les
jo
push
mov
push
sbb
test
jge
or
popa
shlb
in
enter
daa
std
adc
xor
loope
sub
sub
mov
cmp
test
test
gs
lahf
cli
pop
pop
push
or
in
add
jl
xor
out
mov
cli
sub
pusha
pop
aam
lahf
push
dec
jo
sahf
js
fsubr
jp
sub
cmpsl
jmp
rorb
cmpsb
into
pushf
les
dec
add
mov
add
and
jle
push
mov
test
dec
in
sub
out
jbe
lret
lcall
sbb
jnp
sahf
clc
test
lds
cmpsb
shll
stc
inc
mov
fs
fisubrl
jl
cmpl
inc
pop
push
lret
pop
xor
out
cmp
insb
stc
or
sub
into
pushf
xchg
shl
adc
outsl
xorb
dec
repz
pusha
addl
mov
popa
adc
inc
cs
pop
xchg
inc
mov
mov
sar
test
sbb
subb
pop
add
bound
inc
fldenv
shrl
xchg
insb
push
icebp
sbb
xor
adc
dec
sahf
sub
mov
in
mov
fistps
rcrl
loope
cmc
nop
lahf
and
inc
and
add
icebp
xchg
cld
jecxz
push
faddp
xchg
jno
lea
xor
adc
leave
lret
jnp
sub
rolb
mov
ret
inc
add
inc
or
inc
out
xchg
aas
cs
jb
sub
mov
orb
sub
lahf
std
jo
or
push
push
pop
mov
mov
clc
cld
xchg
mov
sub
xchg
shll
sbb
jne
iret
pop
dec
sub
cmp
ret
inc
xchg
stos
es
insl
dec
jnp
dec
mov
pop
cmpsl
popa
mov
mov
xchg
sbb
adc
sarl
subl
test
jb
and
test
popa
mov
fisttpll
cli
xchg
repz
or
daa
or
popf
add
out
jns
ficoms
ss
paddd
lods
or
cmp
xor
enter
adc
mov
cs
mov
subl
jmp
push
inc
xor
mov
fwait
out
push
push
lret
add
into
sbb
push
inc
outsl
xor
leave
jns
call
or
sbb
inc
mov
adc
or
je,pt
mov
xor
add
dec
push
jmp
lock
pop
out
icebp
cmp
bound
push
xchg
xor
sbb
cmpsl
repz
addr16
rcrl
ja
push
and
insb
jb,pt
jnp
fdivrl
in
in
icebp
lret
pusha
cmp
add
inc
lret
ret
sbb
jae
mov
popf
testl
push
arpl
pop
stos
movsb
repnz
aas
jg
sbb
pop
loopne
jns
jns
jb
mov
mov
iret
cmc
cltd
and
scas
jp
leave
inc
jo
hlt
xchg
arpl
arpl
sbb
inc
adc
std
or
into
add
inc
mov
pushf
fiaddl
inc
dec
mov
mov
repz
ficoms
inc
out
hlt
fwait
pop
mov
mov
sahf
cmp
inc
push
movsb
lds
push
in
or
jge
test
jge
xor
mov
jno
enter
mov
lcall
sub
lock
scas
or
sub
cltd
repnz
cmp
ror
inc
or
in
inc
mov
enter
daa
popa
rclb
cmp
loope
das
jecxz
jns
loop
call
int3
mov
add
lock
lret
sbb
loopne
das
add
xchg
xchg
xor
mov
pop
and
js
cmp
push
ss
push
cmc
test
fcompl
fs
outsb
stos
mov
adc
and
sub
pop
dec
and
and
scas
int
mov
pop
dec
int3
pushf
lcall
jbe
mov
test
push
pop
jmp
fwait
outsb
pushf
test
into
sbbb
jg
jno
mov
subb
ret
aad
enter
sbb
je
mov
jl
fsubr
call
or
ja
lds
sub
cmp
lods
sahf
or
xchg
cltd
into
jg
jl
xchg
add
jge
loop
cwtl
sti
imul
scas
and
dec
ret
sub
sub
out
in
adc
inc
in
cli
nop
test
mov
rep
mov
xor
in
gs
rcrl
out
adc
cltd
inc
fstps
vorps
leave
dec
fstl
mov
pop
cmp
mov
sub
mov
pushf
fs
jmp
push
xor
aad
mov
mov
movsl
out
incl
testl
jecxz
push
xchg
xor
fistps
gs
dec
adc
addl
inc
mov
jno
lock
in
cmc
inc
pop
mov
aas
int
sbb
mov
or
rorl
lds
pop
jle
cwtl
cmp
inc
sbb
icebp
cmp
loop,pn
mov
inc
mov
ja
lock
dec
shrl
stc
pop
mov
mov
iret
xchg
shlb
es
adc
dec
sbbl
mov
popf
push
enter
and
inc
sub
and
dec
mov
jae
inc
jbe
cltd
lret
test
or
jg
fnsave
daa
clc
pop
cmp
xchg
xor
ljmp
daa
pop
outsl
hlt
mov
out
fdiv
xchg
sbb
xchg
minps
popf
add
jp
subb
outsl
adc
aad
mov
inc
dec
sbb
lret
js
xchg
rolb
inc
dec
or
daa
push
fwait
sbb
lods
cmp
jmp
bound
jns
dec
mov
lea
aas
inc
mov
jnp
mov
int3
je
ja
leave
push
dec
icebp
lcall
insb
fnstsw
jb
add
mov
imul
mov
mov
rolb
bound
pop
lods
jmp
add
sbb
out
push
cmp
or
out
rcl
jp
fldenv
xorl
insb
test
add
jle
and
in
faddp
pusha
aam
loop
adc
xchg
fcmovbe
fistpl
loopne
inc
xor
xor
fs
push
imul
mov
push
mov
movsl
lods
xchg
xchg
daa
add
inc
loope
push
sbb
add
inc
iret
push
inc
cli
ret
jecxz
mov
lds
inc
pop
pop
push
or
dec
test
inc
or
fidivrl
stc
mov
int3
sahf
inc
jbe
or
push
fidivs
rorb
pushf
and
push
or
movsb
push
pushf
addr16
xor
jge
or
fwait
test
aaa
repnz
push
xchg
jno
arpl
push
jns
dec
outsb
fcom
push
mov
scas
xor
dec
test
scas
call
incl
test
adc
inc
inc
lcall
in
daa
adc
daa
pusha
sub
xchg
fisubs
test
push
sub
cmpsl
xor
xchg
ret
rolb
movsl
or
jnp
fwait
cmc
lret
pop
mov
scas
js
sbb
sbb
cld
mov
loope
push
pop
dec
mov
js
push
jne
push
or
push
aad
push
dec
mov
faddl
sub
test
cmpsl
cmp
data16
mov
pop
shll
mov
xor
dec
mov
sub
jno
pop
enter
lds
rcll
int3
mov
inc
sbb
daa
es
inc
popl
in
push
mov
fbld
mov
push
push
test
ret
ss
add
test
inc
jecxz
push
test
cmp
ret
stos
mov
fdivp
dec
mov
xor
push
push
imul
push
test
fimuls
shrl
push
out
push
ds
ret
jno
mov
pop
lret
loop
iret
jp
sub
pop
ss
sub
mov
push
mov
xchg
test
int3
sti
repz
jg
xchg
repnz
cmp
fistl
sub
and
inc
mov
pushf
je
inc
xchg
outsl
push
adc
add
dec
inc
dec
push
sub
xor
xchg
jecxz
cli
popa
cwtl
xor
push
xchg
out
fsubr
pop
xchg
dec
jle
cltd
add
dec
xchg
cmp
sti
mov
inc
sbb
mulb
mov
xchg
dec
sahf
rcr
sub
divb
push
jbe
clc
stos
jb
rol
cmp
icebp
adc
push
cld
in
js
lret
and
arpl
mov
xchg
inc
lock
mov
sbb
mov
mov
sub
ret
popa
jg
es
push
das
insl
sbb
frstor
xor
arpl
add
arpl
int3
and
call
or
fstps
scas
lock
mov
cmpsl
push
inc
jno
fstpl
sar
xchg
push
pop
xchg
jno
into
ljmp
subps
stc
stos
jnp
in
out
aas
bnd
push
in
cltd
mov
add
mov
idivl
xor
mov
mov
mov
cmp
test
into
add
lahf
sub
inc
pop
jg
or
nop
iret
fwait
dec
mov
daa
add
add
cmp
xor
vmwrite
inc
loopne
mov
mov
jnp
pop
xchg
ja
gs
mov
hlt
ja
xchg
pop
push
loope
push
dec
aam
jne
pop
hlt
mov
lret
outsb
out
scas
push
mull
shl
jmp
lret
rcl
and
mov
sub
pop
icebp
cld
addr16
pop
inc
and
daa
xor
push
push
jle
push
mov
pusha
outsl
mov
fildll
pop
fistl
scas
cltd
jg
rcrb
mov
popf
inc
mov
mov
loope
jae
mov
sub
gs
push
imul
scas
cmp
xor
in
adc
hlt
pop
iret
mov
aaa
ret
pop
leave
xor
call
arpl
cmp
inc
sbb
or
xchg
jbe
gs
int3
mov
pop
cmp
lds
inc
shrb
sarl
fsubs
cmp
lds
mov
jbe
adc
repz
xor
mov
cmc
or
add
jl
sub
int3
push
insl
in
jg
test
jo
out
cwtl
scas
in
and
nop
ljmp
add
xchg
enter
daa
pop
or
cmp
cs
loope
cmp
dec
ds
mov
movsl
adc
and
ss
jns
andb
xor
and
movsb
adc
in
xor
stc
mov
push
mov
dec
jne
jae
fwait
outsb
jno
adc
fsts
addl
fbld
and
roll
shrb
mov
subl
nop
in
pop
inc
and
shrl
dec
sbb
sahf
loope
add
pop
jge
adcb
pop
mov
jno
stc
imul
fidivs
movlps
ja
cmp
idivb
lret
xor
xchg
mov
or
lods
into
inc
jno
cmc
adc
mov
outsl
pop
cltd
stos
loop
xorb
xor
add
mov
lods
call
cld
daa
out
fsubrl
and
clc
xchg
nop
pusha
popf
push
add
pop
shl
cmp
xor
mov
xlat
mov
xlat
push
add
xchg
mov
sbb
in
mov
sub
adc
cmpsl
cld
jmp
ljmp
mov
fs
xor
dec
dec
arpl
inc
pop
jmp
dec
jo
or
call
fwait
or
loop
adcl
lea
jg
mov
iret
lret
sub
inc
popf
shlb
cmp
mov
jb
outsb
xor
and
jo
cmc
mov
lcall
shlb
movsb
jo
jmp
out
pop
xchg
ja
xchg
jg
mov
mov
out
sahf
lock
flds
mov
jg
mov
sub
nop
jl
lock
les
add
inc
dec
jns
shll
arpl
popa
lret
mov
lods
test
fidivrs
xchg
adc
scas
pop
addr16
jmp
ja
cmp
jmp
mov
das
sub
xlat
and
clc
shlb
xchg
mov
xchg
ljmp
arpl
pop
stos
push
iret
out
mov
or
xor
sbb
bound
adcl
outsb
mov
xor
lods
dec
mov
mov
xor
or
push
or
inc
mul
sub
into
push
fwait
jnp
adc
mov
addl
inc
pop
call
mov
xor
jo
inc
div
in
jne
xchg
fstpl
adc
pop
inc
push
xor
test
dec
xlat
outsb
xchg
mov
shlb
ret
mov
mov
jne
lods
cmpsl
mov
and
bound
jmp
xchg
loopne
xorl
sub
pop
in
add
jp
xor
and
aas
mov
lret
movsb
jle
ja
in
in
pusha
or
adc
dec
dec
xchg
addb
out
mov
outsl
jae
mov
popf
insb
jecxz
mov
and
fsubrs
inc
in
sbb
mov
imul
scas
fwait
or
push
fisubl
xor
sahf
insb
and
adc
adc
stos
and
ja
andl
imul
jo
push
push
movsb
ljmp
pop
int3
je
cmp
fidivrs
in
loopne
jb
inc
xchg
inc
mov
adcb
movsb
push
sbb
hlt
and
pop
push
sbb
xchg
sbb
jo
lods
or
xor
jl
mov
dec
dec
cltd
std
push
push
clc
lret
xor
add
scas
cmpsb
negl
test
test
ret
js
test
in
cmc
shrb
enter
daa
pop
imul
sub
out
ds
jmp
sbb
cmp
sbb
jo
jbe
push
push
add
sbb
daa
or
int3
jmp
addr16
pop
xchg
jb
js
and
mov
test
lcall
outsb
aam
imul
dec
push
jne
mov
sub
sub
sub
push
push
mov
test
aam
xchg
out
lcall
sub
mov
push
subb
mov
aaa
jne
and
pop
imul
clc
mov
dec
fcomps
pop
call
lret
xchg
xor
push
add
sub
pop
cmc
pop
xor
lods
jl
xchg
sar
shlb
cld
and
cld
in
data16
jns
lods
iret
xor
out
push
inc
cli
sub
out
cmp
das
in
xor
test
inc
mov
cmpsb
gs
adc
pop
ficomps
hlt
adc
flds
arpl
repz
xchg
js
add
pop
push
xlat
xlat
mov
push
push
lock
jmp
jbe
cs
cmp
or
or
in
inc
jno
lea
out
daa
je
imul
sahf
sub
lea
or
cld
das
push
mov
push
add
mov
fwait
pop
int
daa
inc
and
mov
aas
stos
lret
bnd
inc
add
and
pop
sub
js
push
idivb
jmp
std
or
pushf
cwtl
outsb
sub
mov
inc
cmpsb
mov
scas
or
ret
cld
inc
mov
lret
add
mov
lock
lock
cmp
add
sahf
jnp
aam
outsl
inc
ret
jg
xor
inc
mov
insl
jmp
arpl
sub
mov
loop
ljmp
lock
mov
popf
push
pop
mov
xchg
sarb
push
daa
mov
cld
les
mov
jae
xchg
out
aam
ljmp
xchg
pop
jo
xor
add
sbb
push
mov
insl
clc
add
int
xor
cmc
bound
mov
adc
mov
sbb
data16
or
loopne
fwait
stos
add
add
cmp
jns
mov
inc
dec
in
cld
mov
mov
clc
mov
pop
std
fdivs
sub
mov
mov
mov
mov
cmp
jne
test
mov
mov
insl
js
loopne
mov
xchg
popa
push
rolb
int3
inc
sub
push
jge
addr16
mov
xor
sub
push
jp
rclb
push
pusha
movsl
mov
or
sbb
push
add
pop
fldcw
mov
pop
ss
xchg
fwait
clc
sub
imul
mov
and
or
jns
push
iret
jno
lahf
ret
xor
and
jne
cmp
cmpl
adc
inc
test
cmpsb
ficoml
addb
movsl
outsb
int3
pop
pop
jns
xchg
ficomps
dec
sti
lds
shlb
mov
aad
sbb
int3
aas
inc
movsb
icebp
mov
push
and
jbe
insb
cli
jge
mov
das
negb
sbb
jno
loope
jl
adc
lahf
pop
push
xor
ret
xor
pop
mov
scas
test
loope
in
pop
test
je
in
inc
inc
push
stos
cmpsb
or
in
faddl
sbb
cmp
jmp
loope
mov
pop
cmp
pop
movsl
and
and
lahf
xchg
pop
out
sub
and
xor
mov
pop
sub
ljmp
push
inc
push
in
mov
faddl
je
push
dec
inc
outsb
aaa
jb
adc
sahf
xchg
sbbb
jns
jne
out
popa
lea
int
jp
sub
inc
pop
inc
mov
fisubrs
stos
rcr
adc
xchg
jb
daa
or
add
cli
jg
pop
push
mov
xor
stc
fldenv
fs
ds
adc
ss
pop
push
cmp
ficoml
idiv
imul
test
cmp
cli
push
or
xlat
pusha
into
or
cmc
mov
xchg
outsl
ffree
lret
loop
aaa
lret
xor
add
jnp
lods
mov
leave
mov
sbb
out
in
cli
pop
add
sub
ror
sti
out
mov
inc
gs
insl
loopne
jne
pop
std
in
fnstcw
mov
in
xor
add
inc
sbbl
orl
adc
pushf
adc
jmp
cs
adc
inc
enter
inc
adc
inc
test
dec
je
repz
jecxz
inc
cmpsl
mov
ljmp
inc
push
jmp
sbbl
fcmovu
sub
adc
inc
stos
sbb
gs
dec
mov
jp
daa
js
and
pusha
sub
push
add
jnp
xor
mov
out
cwtl
sub
insb
mov
dec
into
mov
outsb
je
cltd
sub
cld
insl
dec
pop
lret
jb
mov
das
mov
ss
or
jge
scas
movsb
sub
aam
mov
andl
xchg
mov
dec
outsl
and
mov
stc
fidivl
mov
int3
mov
and
mov
xchg
cmpsb
rclb
fs
test
and
mov
or
xchg
fst
js
clc
dec
add
xchg
cs
ljmp
adc
rep
dec
mov
sub
jge
mov
fldenv
les
pop
mov
xor
xchg
mov
ret
dec
mov
mov
test
sbb
adc
mov
cwtl
fsts
push
stc
cs
add
push
sbb
adc
into
xor
sbbb
and
insb
mov
mov
mov
push
add
mov
ret
mov
mov
jge
dec
jge
divl
pop
mov
out
dec
xchg
frstor
gs
xor
xchg
sub
dec
adc
or
mov
popa
or
mov
mov
sti
mov
fists
int
push
in
lds
mov
loope
inc
jp
pusha
inc
jae
fisttps
and
popf
xor
jae
mov
sbb
jmp
mov
sahf
push
or
repnz
sbb
and
imul
scas
popa
sarb
ficoml
iret
rclb
sahf
leave
cltd
int
hlt
or
push
inc
and
cli
or
xor
push
insl
fiaddl
xor
int3
dec
mov
loop
rcrl
add
jnp
push
mov
sub
and
inc
inc
jbe
inc
mov
sbb
ds
or
mov
jno
jecxz
add
dec
sub
push
push
ljmp
mov
bound
js
mov
push
aas
pop
sub
mov
mov
aas
in
ret
push
sub
insb
pop
inc
daa
pop
mov
cmp
insb
loope
pop
jle
nop
test
push
and
jno
daa
rorl
and
insb
push
mov
jo
sti
pop
out
inc
and
push
in
out
sub
stc
pop
in
mov
inc
popf
pop
dec
fldcw
test
mov
sub
xchg
outsb
lcall
shrb
and
mov
scas
mov
leave
lahf
mov
rorb
pop
addr16
les
int
das
jne
hlt
data16
les
mov
xchg
shll
outsl
adc
sbb
dec
repnz
lret
test
js
and
add
lret
lahf
mov
pusha
nop
test
fists
mov
lods
cmp
xchg
loopne
idivl
or
xor
ljmp
adc
cmc
push
fwait
xor
icebp
outsl
mov
loopne
imul
push
mov
lods
popf
jo
mov
or
out
cs
jbe
in
or
sahf
push
jge
push
rorb
dec
mov
std
pop
sbb
int3
adc
cmp
outsl
lods
leave
clc
aas
repz
movsb
xchg
fs
sbb
xchg
or
cmp
pop
xor
sahf
pushf
mov
fcmovbe
cs
cmp
mov
add
je
inc
xchg
fildll
mov
and
loop
movsb
mov
imul
ret
cs
pop
push
filds
inc
push
iret
fistpl
pop
adc
inc
xor
ret
inc
mov
sub
mov
ret
rcll
inc
cmp
mov
cwtl
in
and
shl
jecxz
jo
jae
cwtl
jmp
add
mov
loopne
lock
sahf
das
push
js
mov
mov
aam
sub
ret
popf
mov
es
call
les
jne
cmpsl
pop
std
fs
adc
lods
lds
test
stos
add
leave
add
xlat
mov
test
mov
adc
negl
das
xchg
insl
mov
rcl
rorb
push
ljmp
lret
addr16
jge
add
fstpl
add
mov
mov
lds
push
test
in
lock
xchg
test
imul
inc
mov
addb
jo
push
pushf
xor
add
jo
mov
xor
jns
enter
add
add
scas
in
mov
jae
add
cld
inc
dec
mov
cmpsl
mov
sti
arpl
lcall
dec
lret
fwait
cwtl
lock
sub
push
jmp
divl
fiaddl
or
scas
sub
dec
pop
mov
mov
out
mov
mulb
or
or
mov
jle
lahf
xchg
in
pop
cs
fstpt
or
mov
mov
incb
push
loopne
inc
popf
loope
movsl
mov
stos
push
lods
je
dec
fcomps
sub
scas
les
inc
adc
dec
cltd
iret
das
aam
ret
jg
adc
mov
pop
lods
les
mov
push
sub
fidivl
scas
and
xor
xor
fisubs
lds
inc
rclb
lret
cmc
repnz
pop
add
push
mov
xchg
out
cs
push
sbb
push
aaa
lods
or
int
aas
loop
cs
adc
clc
push
push
stc
shlb
mov
shrb
and
dec
mov
pop
cmp
inc
gs
jno
push
sbb
insb
enter
daa
pop
movsb
out
xchg
ja
loope
cmp
push
inc
cmp
push
stos
movsl
mov
mov
lds
push
into
pop
mov
jns
movb
dec
xor
jnp
mov
lock
or
jmp
push
jg
ret
nop
