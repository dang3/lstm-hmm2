jmp
mov
jmp
mov
jmp
mov
xor
fs
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
cmp
jle
xchg
xchg
mov
dec
inc
inc
mov
lea
mov
dec
dec
dec
lea
mov
mov
xchg
xchg
xchg
mov
mov
movl
lea
push
mov
push
call
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
lea
push
call
lea
push
call
movl
lea
push
mov
push
call
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
lea
push
call
lea
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
cmp
cmp
mov
add
movl
lea
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
lea
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
movl
lea
push
mov
push
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
lea
push
call
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
movl
lea
push
mov
push
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
aaa
xor
xor
xor
add
xor
cmp
ss
add
add
xor
cmp
ss
add
xor
xor
xor
xor
xor
add
xor
xor
xor
cmp
add
lea
push
mov
add
mov
mov
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
mov
cmp
je
jmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
mov
xor
divl
test
jne
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jle
xchg
xchg
mov
dec
inc
inc
mov
lea
mov
dec
dec
dec
lea
mov
mov
xchg
xchg
xchg
mov
mov
mov
cmp
je
jmp
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
xchg
dec
inc
dec
dec
je
mov
xchg
mov
lea
inc
mov
cmp
je
jmp
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
jmp
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
mov
sub
mov
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
push
mov
mov
xor
call
mov
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
mov
mov
mov
call
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
xchg
dec
inc
dec
dec
je
mov
xchg
mov
lea
inc
push
mov
mov
xor
call
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
mov
mov
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
mov
mov
push
add
jmp
mov
mov
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
lea
mov
push
mov
jmp
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jle
xchg
xchg
mov
dec
inc
inc
mov
lea
mov
dec
dec
dec
lea
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
mov
sub
add
add
mov
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
xchg
dec
inc
dec
dec
je
mov
xchg
mov
lea
inc
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
mov
mov
movl
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
mov
pop
ret
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
test
cmp
cmpl
pop
insl
cmp
xchg
cmp
mov
cmp
xchg
cmp
mov
xlat
mov
pop
sahf
pop
out
add
out
add
fbstp
out
add
jecxz
push
pop
sahf
pop
out
add
mov
pop
sahf
pop
out
add
mov
mov
pop
sahf
pop
out
add
mov
mov
pop
sahf
pop
out
add
shll
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
push
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jle
xchg
xchg
mov
dec
inc
inc
mov
lea
mov
dec
dec
dec
lea
mov
mov
xchg
xchg
xchg
mov
mov
push
call
mov
lea
mov
subl
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
mov
mov
call
mov
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
mov
mov
call
mov
cmpl
je
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
lea
push
push
mov
sub
push
mov
push
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
cmp
je
mov
subb
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
xor
add
mov
xor
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
incl
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
mov
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
push
mov
pushl
xchg
push
jmp
cmp
jle
xchg
xchg
mov
dec
inc
inc
mov
lea
mov
dec
dec
dec
lea
mov
mov
xchg
xchg
xchg
mov
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
cmpb
jne
movb
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
push
call
mov
mov
mov
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
xchg
dec
inc
dec
dec
je
mov
xchg
mov
lea
inc
jmp
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
movb
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
mov
mov
pop
ret
add
jo
imul
add
in
add
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
call
test
jne
mov
jmp
movw
mov
xchg
mov
lea
xchg
mov
mov
mov
mov
xchg
dec
inc
dec
dec
je
mov
xchg
mov
lea
inc
call
lea
mov
pop
ret
mov
push
mov
add
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
movl
lea
push
mov
push
call
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
movl
lea
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
push
push
push
call
mov
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
movl
lea
push
mov
push
call
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
cmp
jb
lea
xchg
mov
mov
mov
xchg
mov
xchg
dec
inc
inc
mov
mov
lea
inc
inc
mov
mov
xchg
inc
movl
lea
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
mov
pop
ret
xor
xor
xor
xor
xor
add
aaa
xor
xor
xor
cmp
add
xor
xor
ss
xor
xor
add
xor
xor
xor
add
popa
jo
ja
jp
arpl
add
push
mov
add
lea
push
call
mov
cmp
jge
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
xchg
lea
xchg
inc
dec
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
dec
inc
dec
dec
je
lea
lea
xchg
xchg
lea
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
movl
lea
push
mov
push
call
cmp
je
mov
xchg
mov
mov
lea
mov
inc
inc
inc
mov
lea
dec
inc
inc
mov
xchg
mov
mov
lea
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
push
call
lea
push
call
call
jmp
xchg
inc
inc
cmp
jo
mov
lea
lea
lea
lea
mov
mov
xchg
inc
inc
dec
mov
lea
mov
dec
inc
dec
mov
dec
inc
inc
lea
push
call
call
mov
pop
ret
add
xor
aaa
xor
aaa
aaa
xor
add
xor
cmp
cmp
xor
add
add
xor
aaa
xor
ss
subl
jae
mov
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
xchg
xchg
mov
mov
mov
lea
call
cmp
jb
dec
inc
inc
dec
cmp
jne
mov
mov
mov
mov
mov
lea
xchg
lea
dec
jne
dec
dec
mov
lea
lea
inc
ret
ret
lea
add
mov
add
ljmp
cltd
add
cmp
pop
pop
bound
add
cmp
nopl
adc
add
movl
lret
pop
add
iret
and
movsb
int3
add
xor
pop
cmpsb
sti
outsb
out
addl
add
shlb
add
mov
add
add
sti
sbb
das
add
pop
or
ret
add
and
stos
add
cli
xor
ret
add
sub
add
ret
orb
cmp
arpl
add
cmp
jp
add
jge
pop
sbb
xchg
add
add
mov
std
inc
jno
add
sub
jge
aas
aaa
nop
push
insl
inc
ljmp
mov
jl
cld
xchg
and
jle
inc
sub
add
inc
cmp
loopne
add
adc
jno
in
xor
out
push
aad
aam
mov
add
insl
mov
nop
adcl
int3
rcrb
sub
stos
dec
filds
xchg
xor
sbb
shr
push
aam
add
xchg
pop
loope
fcmovnb
add
pop
dec
or
clc
cmp
push
add
jne
or
add
adc
push
add
ja
add
adc
pushfw
fimuls
ret
add
add
mov
adc
mov
xchg
inc
xchg
lods
xor
push
add
pop
add
test
jns
cmp
in
push
cli
push
mov
jecxz
add
addr16
push
push
mov
aad
leave
aaa
add
int3
fs
sub
push
jl
divl
and
add
add
inc
jno
jecxz
fsubrl
adc
fistpll
sti
mov
sbbb
sub
sti
mov
repnz
pop
mov
les
nop
xchg
cmp
add
xor
jp
cmp
iret
add
jne,pn
pop
xchg
jge
sub
add
enter
cmp
stc
fpatan
popf
mov
xchg
push
xor
xor
ret
int
ret
cmp
mov
loopne
add
xor
add
cld
xor
add
push
addr16
mov
add
or
cmp
add
add
adc
add
xor
dec
add
pop
jo
dec
add
in
xor
adc
add
test
inc
add
adcb
loopne
and
add
into
add
addr16
mov
mov
add
jno
xor
add
add
add
add
lret
out
jne
mov
add
xchg
add
add
add
add
add
cltd
push
push
gs
jae
push
add
add
adc
or
adc
popf
xor
sbb
add
adc
add
xchg
add
cmp
mov
add
ds
xchg
aaa
cmp
lcall
cs
cs
movsb
ror
add
cld
rolb
sub
cmc
out
add
and
add
cmp
xor
add
mov
mov
pop
pop
or
add
mov
pop
adc
aaa
arpl
lods
dec
in
add
out
add
pop
cmovbe
fiaddl
push
pop
push
jmp
mov
and
data16
lea
faddl
iret
lods
pop
insl
dec
stos
adc
cld
popf
mov
sbb
iret
push
stos
xchg
add
adc
shrb
mov
xor
add
sbb
popa
sbb
int3
add
aas
add
add
add
in
adcb
jns
insl
add
es
add
lcall
cmpsl
mov
jmp
fildl
add
lret
insb
lret
jle
andl
mov
pop
sub
outsl
sbb
push
js
fstpl
push
pop
clc
mov
js
or
push
popa
jecxz
push
mov
lcall
push
jg
adc
jae
and
cltd
push
mov
mov
cmp
dec
jg
mov
xchg
js
sbb
jnp
shl
fstpl
sub
inc
inc
dec
push
stos
jp
add
xlat
pusha
sti
ljmp
movsb
xor
pop
mov
xchg
xor
outsl
iret
mov
xor
cli
mov
ja
mov
lock
push
sahf
cld
or
sti
sbbb
insl
ss
repnz
mov
into
pop
out
out
jno
lds
in
ljmp
jl
out
hlt
adc
or
mov
addr16
sub
fs
pop
mov
mov
sub
xchg
jle
lock
in
orb
cmpsb
cmp
or
std
xchg
push
or
popf
add
mov
js
cli
stos
jne
test
leave
or
insb
mov
out
rorl
scas
xchg
fcoms
mov
mov
ret
lock
xchg
js
adc
mov
and
stc
in
push
pop
pop
dec
ficoml
pop
stos
xchg
pop
iret
push
sbb
mov
push
jg
fidivs
xor
js
cmp
mov
cli
jmp
mov
arpl
out
xchg
xor
jbe
leave
push
mov
enter
insb
int
add
cmp
lods
lret
adc
aas
jae
push
dec
mov
xor
mov
jnp
and
outsb
inc
cmp
xchg
repz
test
xor
cli
stc
enter
daa
mov
jo
jne
jno
xbegin
dec
and
and
adc
fwait
and
lcall
cmp
pop
push
loope
and
xchg
scas
pop
sbbb
mov
pop
sub
mov
xor
sbb
inc
sbb
int
cmp
push
cs
insb
daa
mov
repz
in
lods
inc
add
in
xchg
xor
inc
push
int
xchg
pop
push
repnz
adc
push
fisubrl
cmp
push
test
ljmp
stos
ljmp
int3
jmp
and
sbb
cmpb
fcom
pop
mov
lret
xor
pop
dec
xor
sbb
and
repz
je
add
jo
mov
push
fldcw
stc
cmp
inc
mov
jge
mov
lods
addr16
lea
je
xchg
dec
mov
mov
cmp
adc
push
mov
xor
loopne
cwtl
mov
adc
call
sti
adc
cwtl
add
fstl
xchg
jo
les
xlat
ds
pop
xlat
in
das
cmp
mov
insb
sbb
sti
sbb
cs
or
aad
aaa
repnz
ret
xchg
cmp
cmp
jmp
sarl
repz
xor
bound
mov
fcmovb
sbb
jb
adc
and
xchg
jmp
dec
mov
lds
inc
mov
mov
aas
add
lds
push
shlb
fsub
lea
divb
sub
cwtl
es
mov
jb
mov
jp
repz
mov
dec
xchg
inc
insl
pop
lock
sub
out
push
jnp
xchg
sub
mov
in
pop
rcll
or
aas
notl
subl
in
cmpsl
mov
sbb
icebp
fcmove
inc
cld
jp
sub
fisttpl
ja
xor
mov
pop
fisubs
sub
outsb
ja
push
pushf
gs
shll
inc
dec
pop
clc
xchg
inc
fcomp
ljmp
imulb
movsl
jle
std
xchg
pop
xchg
xchg
and
psrld
rcrl
std
lds
xchg
ret
repz
xchg
loop
jge
mov
pop
test
clc
stos
xor
push
dec
mov
add
repnz
test
leave
jno
xor
pop
mov
xor
fsub
mov
and
adc
outsb
or
ja
lcall
inc
movsl
ret
fmuls
lret
xchg
maxps
lea
out
bound
sbb
or
nop
xchg
add
xor
call
xchg
sub
or
adc
movups
and
ss
jle
sub
pusha
pop
pushf
xlat
ffreep
sbb
ss
cltd
sbb
sbbl
imul
mov
stos
mov
mov
or
loopne
and
sarl
xor
test
push
mov
push
iret
leave
sub
ret
gs
xor
loop
jae
cmp
inc
sbb
or
jb
and
lea
xchg
mov
aas
sbb
or
imul
mov
rcrb
es
dec
imull
hlt
cli
popl
jbe
mov
sbb
push
or
mov
stos
ljmp
outsb
push
and
sub
arpl
adc
pop
scas
fnsave
lock
jp
in
ret
adc
cmpsb
add
sub
je
add
daa
mov
insl
cmp
pusha
sbb
cmpsl
dec
xchg
fidivl
xor
adc
and
mov
in
jmp
test
lods
lea
and
mov
pop
addr16
push
imul
pop
dec
cmp
outsb
das
push
xchg
adc
inc
pop
jle
add
xchg
adcb
push
sbb
clc
jle
xorl
mov
mov
sbb
js
xor
push
popf
xchg
push
into
sbb
xchg
and
jge
pop
sub
xchg
rcrb
icebp
add
sbb
xchg
mov
xor
mov
insb
mov
cmp
inc
cmp
xchg
js
notl
add
mov
add
sbb
pop
mov
xor
jecxz
outsl
xor
cltd
sub
icebp
add
fs
mov
sub
insb
inc
shll
lods
dec
nop
cli
mov
mov
cli
aam
inc
xor
in
or
cmp
fndisi(8087
adc
loopne
in
pop
push
call
imul
test
add
das
xchg
xor
dec
sbb
adc
jge
push
or
in
mov
xlat
adc
sarb
aad
mov
nop
sahf
inc
add
fadds
cld
push
push
fsts
daa
les
aam
cltd
xchg
outsl
lea
rcl
call
pushf
stc
cmpsb
pop
and
xchg
adc
out
pushf
dec
sbb
add
push
pusha
sbb
xchg
mov
rol
dec
jbe
nop
je
cs
outsb
push
divb
iret
std
dec
sub
loope
repnz
sbb
mov
in
xorl
cltd
fildl
popa
push
mov
push
loope
rcrl
int
andl
outsl
dec
hlt
rcrl
cmc
imulb
out
sub
loope
cmpsl
mov
loopne
inc
mov
icebp
mov
movsb
cld
movsl
gs
lret
dec
pop
and
les
cmp
sbb
std
jb
rorb
ret
lods
mov
jno
out
aam
test
or
push
xchg
lds
fidivrs
popa
adc
fsubrs
bound
pusha
iret
xchg
into
fdivp
push
xor
outsl
incl
and
pop
cltd
mov
notb
jno
rolb
dec
adc
fsubl
sahf
rcll
fisubrs
icebp
jecxz
add
or
inc
or
insb
xchg
xor
xor
xchg
mov
sbb
jo
jno
mov
add
fldl
or
inc
fwait
mov
decl
movsl
push
jne
mov
out
movsb
scas
loopne
jmp
add
int
dec
in
mov
out
out
or
push
test
addr16
movsl
jp
outsb
mov
mov
push
xor
jle
push
es
pop
xlat
pusha
clc
jb
scas
out
sahf
fst
jmp
add
stos
add
adc
pop
adc
negb
stos
pop
mov
testl
cmp
and
scas
pop
mov
adc
or
mov
sub
mov
inc
sub
jae
incb
sbb
inc
push
pop
inc
pop
fidivrl
xchg
or
sahf
bound
mov
mov
sarb
mov
movsl
adc
inc
bound
jbe
mov
jge
dec
mov
aas
int3
pop
aaa
inc
pop
push
or
addl
jge
int3
sub
pop
popf
sti
rorl
jmp
sbb
outsl
and
lock
mov
leave
push
inc
dec
cmp
pop
mov
enter
daa
mov
repz
push
sbb
sbb
dec
dec
add
ds
js
movsl
mov
mov
lahf
or
dec
push
jae
xchg
test
ja
inc
inc
scas
pushf
in
lods
pop
jl
clc
js
arpl
pop
cmpsb
int3
mov
sbb
pop
loope
xor
sub
sbb
lods
outsb
xchg
inc
sbb
and
repz
xchg
sbb
cmp
dec
and
pop
mov
push
mov
dec
mov
lods
lcall
mov
sub
pop
repnz
ret
test
cmpsb
fdivrl
dec
xor
adc
mov
and
lds
push
je
cmp
dec
and
xchg
lret
or
xchg
dec
mov
lock
add
into
out
jo
add
adc
mov
loop
arpl
test
pop
fs
cltd
adc
mov
lods
xor
mov
mov
xor
add
data16
or
push
xchg
decb
push
loopne
inc
sub
je
sub
imul
xchg
rolb
mov
negb
sbb
dec
jmp
fldt
adc
aaa
lock
inc
fcoml
cs
loop
and
xor
fdivs
flds
imul
pushf
mov
loope
stos
xlat
add
sbb
popf
je
mov
pushfw
repz
jmp
icebp
mov
daa
pushf
inc
lret
inc
inc
imul
lret
dec
in
out
je
sub
scas
sbb
pushf
xchg
mov
inc
lock
loope
or
sbb
mov
insl
sbb
sbb
daa
das
lods
mov
mov
testb
shr
cltd
ds
push
xor
and
mov
and
icebp
mov
cld
rcrb
and
mov
inc
sbb
or
push
pop
sbb
inc
rcr
ret
shrb
or
pop
push
mov
inc
ret
in
gs
cmp
aas
xchg
lds
shr
in
popa
sub
subb
push
out
ret
jp
xchg
adc
inc
in
seto
xor
xchg
cltd
cmc
lcall
inc
dec
mov
mov
insl
mov
xchg
jp
jecxz
pop
shr
mov
pop
in
mov
xchg
push
and
add
popf
pop
incl
sbb
xor
jle
xor
cmpsl
pop
mov
cmpsl
push
mov
sub
rorb
mov
sarl
or
or
fwait
loopne
mov
pop
das
push
jne
out
movsl
mov
cmpsb
repnz
subl
cmp
jns
rorb
jl
fstl
add
push
cmp
add
test
and
popf
mov
jne
xor
adc
in
fldenv
pusha
xchg
pop
cmpsb
filds
inc
jl
jno
scas
jmp
das
aas
pop
cmpl
inc
push
fsubrs
mov
xor
loop
and
mov
insb
clc
jo
jnp
roll
mov
mov
mov
ret
aam
mov
inc
mov
adc
stos
inc
push
xchg
inc
or
push
andb
popa
pop
mov
mov
imul
lret
ficomps
lds
add
vmptrst
rep
sbb
sub
mov
nop
mov
arpl
enter
and
jge
les
cli
shlb
add
clc
insb
add
xor
int3
insl
cmp
pop
int3
gs
push
icebp
out
ja
cmp
loop
fwait
lods
dec
and
or
movsb
aas
add
push
xchg
stc
jo
push
lods
push
in
inc
and
test
mov
repz
xchg
divl
decb
data16
dec
jno
adc
jns
add
and
inc
lahf
sub
test
inc
fcomi
inc
cmp
pop
enter
adc
icebp
mov
in
add
cmp
loope
scas
push
sub
push
cmp
lods
jne
cmc
sub
adc
std
cmc
or
mov
cld
adc
xchg
js
add
jnp
xor
mov
aas
int
xchg
sub
imul
lcall
push
ja
sub
loope
sahf
gs
test
pop
mov
push
movsl
scas
mov
add
mov
popl
push
mov
ss
decb
cmp
or
not
sub
mov
fbld
sbb
push
mov
leave
outsl
cmp
leave
test
xor
or
loop
pusha
jmp
pop
push
fs
add
adc
outsl
dec
inc
jb
lods
sbb
adc
xchg
or
jnp
dec
mov
or
and
gs
mov
adc
ja
mov
cld
cmp
addl
or
pushf
xlat
aam
push
sub
jnp
in
lods
jp
sti
and
shll
nop
push
out
orb
adc
sub
fnstcw
in
mov
jnp
inc
lahf
push
outsl
loope
fld1
and
jb
pop
mov
je
or
jo
jmp
imul
inc
pop
pusha
sbb
fbstp
jb
mov
push
je
jnp
jecxz
xor
stc
ret
cltd
adc
aas
mov
repnz
cmp
dec
arpl
ss
outsb
xorl
enter
dec
mov
mov
test
es
ss
dec
sbb
fstpt
pop
cmp
cld
sti
lods
dec
sub
or
inc
and
cmpsl
and
pop
cmp
xchg
shrb
and
daa
arpl
ret
add
cli
push
or
dec
fnsave
mov
xchg
add
jne
les
imul
dec
sub
es
or
push
jmp
add
add
stos
cltd
sub
sub
mov
test
xchg
add
test
dec
lret
fdivp
sbb
dec
out
test
dec
outsb
push
aaa
sbb
out
add
sar
bnd
adc
sbb
or
mov
ljmp
pop
out
nop
ja
jecxz
dec
sbb
or
or
or
mov
popf
dec
cmp
mov
out
bound
call
jns
stos
out
pop
jge
xchg
icebp
test
out
add
sub
cld
jmp
addr16
sbb
dec
pop
mov
into
cmpl
lea
pusha
cs
imul
loopne
xchg
inc
das
add
mov
into
jle
enter
fwait
pop
es
mov
in
cmpsl
push
je
mov
and
stc
xor
scas
pop
sub
mov
mov
ret
cs
sub
in
jae
dec
fwait
inc
and
insb
or
jecxz
lcall
push
and
hlt
mov
fdivrp
mov
xchg
and
imul
mov
hlt
fildl
add
jbe
add
insl
pop
sbb
mov
mov
int3
pop
pop
mov
xchg
out
aam
xorl
lock
scas
jp
jg
push
leave
cmp
or
push
in
aam
mov
in
sub
jno
mov
pop
cmp
bnd
add
add
dec
loopne
sarl
sub
movsl
int
cli
and
or
sbb
sub
inc
int3
mov
imul
pop
lret
js
adc
pop
and
sbb
xor
dec
dec
push
sub
inc
jmp
mov
outsb
pop
add
test
fsubs
push
mov
push
sbb
scas
testl
cli
jno
ret
int
movsb
jb
mov
pusha
cmp
outsb
es
fdivrl
dec
sub
sub
test
push
adc
mov
mov
popa
mov
push
sbb
data16
xchg
ss
add
ret
cmp
notl
aad
shll
mov
daa
decb
lods
out
cmc
nop
jle
xor
adc
ljmp
xchg
lock
cmpsb
adc
repz
lretw
lods
add
mov
jg
xchg
call
and
jo
sbb
fsin
inc
mov
gs
ss
sti
inc
and
push
call
cs
imul
adcb
in
cmp
jecxz
xlat
adc
and
sti
xchg
pop
mov
sbb
adc
aam
dec
shrl
ss
das
loope
dec
xchg
stc
icebp
inc
xor
jne
les
jae
dec
dec
aam
mov
out
call
sbb
cltd
pop
cmp
lds
fs
mov
dec
fdivr
jmp
movsl
negb
into
jnp
fcomps
outsb
aas
jle
pushl
jg
dec
fildl
test
idivb
fwait
std
inc
loop
cwtl
adc
sbb
xor
cs
dec
pusha
and
xchg
hlt
dec
mov
arpl
lock
mov
or
mov
rorl
and
sbb
test
mov
repz
ss
aad
adc
mov
push
xchg
jae
inc
jo
pop
pop
jbe
andb
xchg
push
or
ret
xchg
inc
xchg
push
int
pop
fstp
sbb
xchg
inc
dec
jmp
aaa
sar
popa
push
or
lods
shll
cli
out
mov
push
push
and
dec
adc
pop
push
lret
pop
test
jle
mov
add
ret
ljmp
fbstp
rcrb
dec
or
rcrl
push
add
in
jp
push
fisubl
adc
pop
sub
incl
out
gs
inc
xor
lds
insl
lahf
mov
sub
leave
fwait
pop
mov
sbb
orb
add
enter
nop
fwait
ds
cmpsb
dec
push
pop
add
loopne
mov
inc
adc
inc
hlt
sbb
movsb
sahf
push
repnz
dec
in
jae
xchg
inc
dec
cmp
sub
imul
jl
adc
in
mov
das
mov
push
mov
jle
xchg
repnz
xor
outsb
pop
filds
xchg
pop
es
jmp
lds
lcall
and
mov
mov
in
stos
mov
inc
and
sub
xorl
aad
lahf
adc
lods
adc
mov
and
inc
dec
out
mov
mov
or
scas
cmc
or
pop
lock
flds
dec
xchg
bsr
sbb
pop
imull
insb
or
mov
imulb
dec
add
repnz
xor
leave
push
aam
hlt
sarl
push
pop
jne
pop
push
pop
jge
pop
fwait
sbb
outsl
aaa
xorl
or
out
push
add
or
in
sub
jnp
lret
or
scas
pop
repz
mov
movsb
push
inc
push
xor
push
cmpsb
or
dec
in
adc
and
adc
mov
cmp
jno
sub
jl
ror
dec
dec
sbb
ds
push
leave
and
dec
push
push
in
sub
or
js
inc
pop
test
repnz
mov
js
lret
arpl
jmp
loope
adc
cmp
mov
pop
adc
mov
sbb
arpl
popf
sbb
mov
add
rcrl
lds
int
movsl
sbb
add
mov
fsubrl
mov
sub
cmp
sahf
stos
or
jmp
mov
pusha
add
xchg
repnz
in
ss
outsb
dec
cmp
jle
sub
push
rclb
lret
adc
dec
dec
jl
push
mov
fdiv
push
fisttpl
xor
stc
jne
mov
mov
stc
int
fbld
add
push
loope
lods
ljmp
out
jne
cli
mov
lret
lds
push
pop
or
ss
jmp
xchg
ffreep
pop
shrl
imul
xor
inc
adc
les
xchg
aas
in
sbb
mov
loopne
outsb
mov
in
xorl
sti
andl
aad
jge
nop
or
xor
cmc
popa
dec
inc
dec
into
mov
sub
int
push
out
cmp
movsl
fisttpll
sbb
pop
cwtl
sti
push
pop
out
and
adc
adc
inc
movsl
mov
inc
pop
es
inc
xchg
mov
aas
sbb
jbe
dec
push
mov
pop
lahf
jecxz
push
jo
jg
std
out
imul
and
mov
dec
cmp
fcmovnb
dec
mov
mov
shlb
lock
mov
sbb
adc
fwait
sub
rcr
sub
into
ja
insl
add
push
dec
adc
pop
mov
or
inc
push
loope
mov
pop
push
adc
jns
iret
rclb
lds
mov
and
mov
fldt
nop
pop
push
fldl
push
clc
in
sbb
xchg
xorb
stos
pop
mov
pusha
ja
ds
fnstcw
in
hlt
mov
ljmp
shrd
adc
insl
mov
lcall
mov
ret
mov
dec
jmp
mov
xchg
sub
sbb
inc
xlat
shl
out
pop
incl
stos
fsubrl
push
jge
add
jns
pop
jmp
mov
xor
pop
mov
sarb
mov
jo
cld
mov
pop
psrlw
push
xchg
dec
add
or
xchg
xor
add
cmp
out
and
mov
in
mov
xor
mov
jg
pop
xchg
pop
or
jg
addr16
add
repz
cld
fs
mov
jl
stc
mov
pusha
fs
and
pusha
and
ljmp
xchg
nop
ljmp
and
popf
out
inc
mov
push
repnz
cld
stos
daa
push
xchg
and
and
pop
jnp
jle
scas
in
lcall
icebp
push
iret
movsb
pop
out
shl
pop
pop
dec
clc
incl
lods
jae
lods
call
or
fsts
inc
pop
push
enter
xchg
and
dec
add
imul
add
mov
rcrl
and
repnz
inc
mov
hlt
jno
sbb
pusha
push
lock
and
mov
mov
aaa
inc
sub
or
ja
add
and
pop
cmp
push
lcall
jo
shl
cmp
cltd
and
sub
ja
in
loopne
push
sbbl
notl
enter
daa
mov
sub
cmpsl
mov
stc
js
jl
jo
dec
mov
test
movsl
fcmovnbe
inc
and
ljmp
mov
cmp
push
mov
fiadds
pop
sbb
out
pop
mov
ds
loope
clc
mov
push
outsb
push
xchg
dec
adc
mov
fdivl
xorb
sbb
pop
testb
mov
push
enter
sbb
in
cwtl
testb
das
mov
sbb
sbb
aam
dec
sub
or
insl
test
jns
xor
mov
mov
mov
mov
cmp
test
adc
cmp
cmp
sahf
lret
sbb
jecxz
push
mov
lods
sahf
sbb
mov
cmc
push
pushf
pusha
xor
fs
adcb
fs
fcoms
mov
andb
loopne
shl
mov
sub
outsl
cli
rorl
and
iret
and
adc
aad
cli
sub
decb
nop
jg
xor
les
aam
pop
imul
push
xchg
add
popf
sbb
cmp
cmp
xchg
fdivrs
sub
jp
mov
out
dec
sbb
xor
xchg
cs
xor
aad
jmp
nop
in
clc
dec
push
into
push
inc
pop
out
movsl
fldenv
les
xchg
repz
sar
lea
rorb
pop
xchg
mov
out
pushf
lahf
and
pop
xchg
inc
pop
inc
out
pop
inc
lods
mov
ja
push
mov
dec
je
fs
push
xchg
test
in
std
mov
rcrl
and
mov
pop
popf
subl
cltd
fcomi
pusha
jno
mov
jae
lock
ljmp
test
mov
rcrb
shrl
jae
es
mov
fimull
call
pop
mov
in
xchg
cld
jl
inc
lret
jne
cmpb
mov
clc
pop
cwtl
les
sub
dec
lret
mov
push
push
rcll
sub
dec
clc
daa
mov
xchg
rcrl
popa
test
xchg
lods
test
lea
xchg
xor
mov
ljmp
roll
push
test
rol
mov
filds
push
jae
test
int3
testb
xor
inc
jmp
pop
stos
or
stos
lret
and
push
and
das
add
xchg
add
aam
or
pop
xor
xor
mov
mov
xchg
mov
pop
push
push
ja
push
dec
hlt
imul
das
cltd
adc
mov
fdivp
jne
bound
out
decl
cltd
jns
or
or
adc
les
in
cmpsl
jg
movd
in
inc
mov
lcall
xor
mov
pusha
dec
jo
jg
add
mov
xor
xchg
pop
jbe
xorl
push
in
jmp
adc
pop
ljmp
inc
shlb
push
cmp
jo
mov
scas
dec
int
push
arpl
mov
push
adc
push
ret
pop
pop
jg
icebp
inc
in
nop
jae
ret
and
sub
outsl
push
xlat
pushf
pop
sbb
cmc
jp
imul
jne
sub
mov
mov
aas
mov
mov
clc
divl
pop
pop
jge
xchg
sbb
sahf
mov
or
mov
add
shrb
mov
push
jge
out
xor
ss
insl
scas
pop
shlb
iret
cs
movsb
imul
push
rcrb
cmpsb
adc
pushf
in
fiadds
imul
ficompl
les
cmp
aad
ds
rcl
jmp
push
push
xchg
iret
shrl
outsb
sbb
pop
add
mov
or
pop
in
js
repnz
loope
jb
push
push
enter
inc
sub
mov
cmp
dec
dec
adc
imul
outsb
orb
movb
mov
int
push
imull
adc
pop
xchg
fmull
mov
cltd
push
jae
fcmovnu
jg
ret
movsb
fstpl
sub
xor
shrl
adc
adcb
mov
les
ss
scas
xchg
hlt
xor
lret
mov
hlt
rcrb
xor
push
pop
adc
xor
sti
outsl
outsl
xor
loop
pop
pop
stc
cmp
cmp
fcoms
push
adc
test
push
push
out
in
cmp
push
dec
xor
roll
lods
sbb
int3
push
rcrl
jnp
adc
sub
add
orb
xor
shlb
xor
push
jnp
mov
pop
cmp
sti
loope
xchg
cli
in
aad
mov
xchg
dec
mov
cmp
inc
jecxz
lcall
repz
adc
stos
cmp
jge
xchg
adc
add
xchg
xchg
jl
push
pop
jl
imul
sbb
cmp
inc
insl
popa
or
add
aas
pop
jecxz
imul
push
je
add
jecxz
ljmp
xor
int3
mov
loopne
push
mov
ss
addl
jg
fistpl
cmp
dec
mov
jmp
ljmp
pop
jns
mov
mov
jae
mov
rcl
jns
js
aam
mov
dec
or
cmpsl
scas
leave
jecxz
jae
aaa
icebp
mov
cs
in
test
data16
mov
mov
lods
sar
fcoms
sub
lcall
shrb
fstl
or
fldcw
add
dec
popa
fwait
jbe
lods
adc
cmpl
js
dec
push
push
std
jnp
imul
add
js
test
and
dec
adc
xchg
dec
mov
call
xchg
test
sbb
lahf
rcrl
mov
test
add
scas
xchg
mov
xor
mov
ds
ss
jmp
jmp
test
mov
shlb
mov
xor
dec
out
sbb
mov
pop
fwait
lret
xchg
jecxz
sub
jne
mov
fwait
out
ficomps
bound
cmp
jbe
in
dec
ficoms
xchg
cwtl
shrl
call
mov
jb
adc
push
mov
mov
imul
lcall
xchg
nop
inc
xchg
jmp
es
xchg
addl
push
cmpsl
jb
popf
cmp
sbb
push
jo
loopne
or
dec
mov
jnp
fldcw
stos
lret
cs
add
clc
stos
ret
ficomps
mov
inc
insl
imul
inc
sub
cltd
and
iret
inc
push
insl
and
scas
adc
js
mov
pop
outsl
fimuls
into
push
rcl
fnstcw
xchg
add
leave
jnp
xor
pop
xor
arpl
jge
daa
setg
jb
sbb
cmpsb
push
add
loopne
int3
add
add
push
pusha
pop
lret
xor
xchg
loope
scas
mulb
pop
cmp
jns
movsb
mulb
fbld
lds
nop
daa
scas
mov
cmp
jle
jl
sub
sbb
sub
pop
movsl
jmp
std
xlat
lahf
movb
test
cmp
imul
and
ja
pop
ljmpw
add
pop
and
or
sbb
loope
xor
dec
adcb
inc
xchg
subl
mov
inc
fimuls
sbbb
add
dec
xchg
xor
push
add
into
mov
ljmp
pop
push
push
mov
push
lret
fsubrl
cmp
cltd
sahf
xchg
dec
das
test
decl
mov
fwait
cmp
mov
mov
cmpsb
ss
jge
cmp
scas
push
dec
testl
stc
cmpsb
mov
test
sbb
and
into
cmp
cmc
lods
dec
popf
xor
pop
outsl
dec
or
loop
pusha
xchg
stc
repnz
andl
adc
test
insl
sub
sbb
out
iret
cli
cmp
or
push
adc
shlb
or
loopne
sub
std
adc
stos
imul
ljmp
rorb
cmp
stc
lods
sub
das
sbb
sub
nop
adc
aad
icebp
inc
nop
fwait
jo
dec
adc
lahf
pop
scas
les
mov
scas
adc
xchg
call
adc
add
adc
inc
adc
cmp
movb
outsb
inc
jecxz
lds
cli
stos
pop
jb
xchg
cmp
mov
out
lods
clc
push
jecxz
ret
fdecstp
dec
shrl
std
fdivr
bound
lahf
sbb
add
adcl
frstor
push
mov
insl
lock
das
out
leave
mov
inc
rorb
cmp
pop
ror
ja
es
fwait
enter
mov
add
pop
cmpsl
lods
lods
loope
cmpsb
lds
icebp
xchg
push
inc
cld
shl
pop
lret
push
inc
cmp
mov
cmp
mov
lcall
outsb
xchg
loop
push
xor
cmc
push
fsts
out
clc
popf
xchg
add
add
call
lods
jg
push
sbb
mov
xchg
mov
les
add
nop
push
test
movsb
mov
popf
mov
dec
push
into
push
test
mov
xchg
mov
adc
pop
xor
add
popf
stos
test
fiaddl
add
lret
inc
outsb
sbb
or
repnz
rolb
cmpsb
cmp
lea
jl
fisubl
roll
jmp
push
mov
jecxz
dec
stos
outsb
mov
mov
jb
out
mov
aam
jns
adc
mov
mov
pop
mov
mov
jecxz
push
addr16
mov
lea
jb
jle
inc
xor
push
adc
pusha
xor
push
xchg
mov
fists
stos
mov
popf
arpl
sarl
scas
adc
and
nopl
jle
push
icebp
xor
adc
cltd
adc
shrl
or
int3
pop
in
dec
adc
int
out
mov
xchg
or
dec
add
inc
aad
add
popa
pop
iret
xchg
imul
sbb
ljmp
idivl
aaa
xor
shl
out
mov
in
pop
leave
repnz
hlt
push
push
mov
jbe
xor
jge
inc
adc
aaa
jg
mov
testl
int3
out
jns
pop
out
inc
push
inc
sbb
push
jo
pshufw
lret
cmp
pushf
scas
xor
mov
ret
in
lods
xchg
enter
daa
lods
das
push
jno
aaa
add
push
sahf
inc
ds
bswap
movsl
lock
cld
and
lahf
in
cwtl
push
cmp
test
add
addb
lret
mov
mov
cmp
pop
pop
in
sbb
cmp
test
cmp
adc
adc
pop
scas
mov
subb
cmp
jae
xor
mov
test
or
es
xchg
ret
jp
out
xchg
xchg
push
and
adc
sahf
aaa
mov
push
adcb
jg
pop
pop
mov
push
leave
mov
sbb
jns
fstpt
fsubrs
fdiv
dec
push
mov
push
daa
fadd
test
das
mov
fs
adc
add
sbb
imul
sub
xchg
nop
stc
test
mov
mov
pop
das
add
pusha
xor
cli
insb
loop
xor
cmp
mov
dec
repz
adc
cmp
pop
dec
xlat
mov
imul
cmp
sbb
ljmp
sub
cwtl
xor
das
xchg
dec
sti
aas
mov
cli
aad
mov
jbe
sub
sub
xchg
xchg
outsb
les
fcomip
push
arpl
mov
and
pop
sub
pop
mov
cs
mov
dec
rcrl
sahf
ret
inc
jnp
cmc
inc
dec
or
cltd
pop
into
jb
pop
or
je
inc
push
jecxz
testb
imul
lock
subl
or
fstpt
xchg
inc
xchg
push
lock
out
xchg
lds
pusha
mov
testl
rcll
loopne
fidivrl
adc
ss
ljmp
icebp
mov
imul
jp
ret
mov
je
push
mov
cmc
mov
sub
sbb
jmp
aad
push
pushf
sahf
popf
frstor
in
xchg
jle
dec
ljmp
push
mov
js
xor
push
or
lret
mov
dec
and
insl
ja
rol
add
push
jns
inc
test
sbb
cs
dec
int
pop
stos
dec
or
or
addl
pusha
pusha
jl
add
out
or
mov
mov
jl
ret
mov
dec
mov
adc
adc
or
xor
sub
mov
movsb
fidivl
xchg
lret
mov
scas
aaa
out
pushf
or
cmpl
xor
xchg
lret
test
out
sbb
or
xchg
fisubs
lret
xchg
mov
mov
add
adc
in
push
stos
pusha
shl
ja
pop
xchg
ss
jmp
mov
mov
popa
popf
mov
mov
push
out
stos
mov
repz
xor
scas
andl
in
adc
sbb
mov
adc
clc
cmp
and
jg
sbb
mov
inc
sbbl
mov
pop
leave
or
lds
ljmp
test
fistpll
jle
subb
std
dec
rorb
aam
push
xchg
jno
imul
test
pushf
mov
int
jge
repz
pop
fisubl
ljmp
int3
ficoml
push
shlb
jo
push
dec
scas
mov
in
mov
cmp
fsubl
sub
ds
xchg
pop
popa
enter
daa
lods
pop
cli
cmp
fnstenv
adc
jl
cmp
dec
jp
mov
outsb
sbb
movsl
not
andl
add
or
or
adc
loopne
out
iret
rclb
es
out
std
shlb
js
add
xchg
push
les
sub
cltd
xor
mov
and
sar
xchg
push
pop
dec
sub
adc
add
in
push
xor
scas
out
aam
call
sub
inc
lcall
mov
sub
jmp
test
pop
fldl
mov
xor
out
jnp
push
pop
and
rorb
ss
jbe
cmp
and
jnp
lret
mov
mov
dec
inc
into
mov
xchg
xor
xchg
shrb
loop
incl
pusha
or
adc
lcall
insl
loope
mov
dec
out
jg
cli
lahf
cmp
xor
loope
cmp
mov
mov
mov
push
adc
loopne
sbb
pop
insb
or
adc
xchg
out
imul
mov
push
ss
push
aad
sbb
and
sub
sub
dec
lcall
and
nop
push
xor
shlb
push
fnstcw
and
push
repz
inc
mov
adc
subb
pop
outsb
imul
outsb
cmp
pushf
dec
stos
pushf
jmp
and
pop
and
inc
sbb
aas
cmp
sub
bound
dec
movsl
ret
inc
fstl
and
mov
into
add
cs
je
dec
mov
sub
lds
fisttpll
daa
fldt
or
hlt
cmp
das
movsb
add
mov
scas
jae
and
arpl
data16
pop
dec
lret
insl
xchg
fimuls
mov
add
inc
shlb
rorl
mov
jmp
in
jo
adc
jae
je
mov
pop
movzwl
mov
ffree
in
mov
ret
push
add
adc
scas
xchg
mov
jg
popa
loopne
stc
lods
push
adc
jp
data16
mov
call
push
add
mov
cltd
lods
lods
out
test
mov
mov
in
dec
in
mov
lcall
jmp
shll
arpl
push
lods
imul
test
add
scas
mov
xor
mov
mov
add
mov
mov
sahf
into
pop
add
xorl
mov
inc
mov
into
or
lods
inc
fwait
pop
rolb
dec
jo
xchg
jne
adc
inc
out
jnp
pop
bound
test
jns
mov
xchg
sbb
repnz
or
or
pshufw
in
mov
mov
pop
mov
push
adc
sbb
mov
xchg
xchg
or
mov
xchg
xchg
and
push
lock
popf
mov
push
mov
sub
out
and
push
and
mov
inc
out
jb
aam
cmp
jg
push
adc
addr16
xor
lds
out
mov
addl
jle
mov
push
shl
iret
fcmovb
ss
sbb
sbb
test
nop
fidivs
lds
xlat
shlb
cmp
mov
xlat
hlt
call
push
xor
decb
mov
or
scas
sbb
int3
lds
dec
push
or
xor
mov
xor
or
mov
cld
daa
cmpsb
push
popa
aas
in
jp
test
negl
cmp
adc
popa
dec
jmp
pop
stos
movsl
push
fldenv
xor
mov
test
lcall
rorb
mov
cmp
fucom
imul
xchg
push
sub
loop
cmp
add
cmpsl
rclb
mov
mov
push
aad
or
dec
sbb
xor
shlb
bound
pushl
lcall
test
sub
leave
sahf
jge
xchg
test
dec
orb
data16
mov
mov
cmp
ss
mov
dec
fsub
cmp
int3
sub
cmp
rcl
loop
mov
mov
cmc
add
xor
hlt
outsl
jmp
mov
stc
pop
mov
fs
pop
push
add
push
and
out
or
clc
xor
jmp
cmp
mov
cwtl
cmp
and
loopne
das
cmp
inc
xor
imul
imul
shrl
inc
cmp
or
int3
xchg
mov
add
popa
push
xchg
test
mov
scas
insb
dec
das
sub
fnstenv
les
scas
inc
mov
cwtl
lea
hlt
mov
std
mov
sti
pop
and
adc
sub
mov
inc
inc
mov
inc
aas
xlat
enter
xchg
sbb
test
jnp
xor
push
notb
dec
inc
std
shrl
cwtl
das
imul
fdivr
arpl
pop
xchg
lock
mov
push
enter
push
mov
enter
fwait
cwtl
das
and
mov
gs
mov
fst
cld
shll
shlb
insl
outsb
mov
dec
cmc
bound
cmpsl
stos
insl
add
aas
pop
mov
cld
push
out
cmp
mov
xor
jg
aaa
pop
xor
rolb
dec
sub
and
jg
jmp
jl
cwtl
push
and
out
out
lret
adc
dec
inc
and
pop
cmp
aas
lods
shlb
out
movsl
adc
ret
nop
jae
out
mov
cltd
in
jecxz
jbe
cmpsb
mov
dec
push
add
test
in
xchg
push
sbb
pop
or
cli
pop
inc
pop
add
jbe
add
dec
and
add
sbb
pop
xor
imul
ds
mov
mov
addps
icebp
dec
mov
sub
and
test
dec
push
in
cli
jne
sti
fdivs
pop
int
bound
subb
popa
add
mov
daa
lret
or
sbb
jp
shlb
mov
pop
or
jle
xchg
pusha
push
and
fistps
inc
lock
fcoml
xchg
pop
sub
mov
scas
popf
fsub
add
insb
push
or
fisttpll
insb
mov
test
push
mov
test
fsubrp
in
inc
pusha
add
imul
movsl
sahf
jae
sub
inc
cmp
jecxz
int
js
mov
xlat
mov
xchg
jo
lock
inc
imul
ficoms
jbe
mov
mov
fdivp
pop
leave
push
lods
add
arpl
pop
idivb
add
sbb
shll
add
repz
pop
jae
cld
push
in
adc
xor
std
adc
scas
jb
push
and
sub
push
pop
push
scas
cmpsb
mov
mov
test
cmp
js
jno
cmp
jl
xchg
out
pop
mov
ds
andl
adc
lahf
inc
pop
inc
push
mov
xchg
test
negb
inc
mov
or
test
js
cmc
pop
pop
sbb
test
aas
and
add
sub
jmp
outsb
jo
jmp
cmp
push
dec
cmp
xorb
cld
frstor
outsl
popa
ss
fimull
sahf
int
lahf
push
sub
cmp
adc
scas
lcall
jg
push
sub
dec
sahf
and
test
mov
subb
jmp
mov
test
ret
repnz
movsb
ds
cmp
fwait
mov
testl
das
in
mov
xchg
idivb
enter
mov
mov
loop
outsb
lahf
stc
into
cli
add
push
adc
sub
mov
shl
pop
arpl
add
sbb
cmp
lea
or
push
gs
ljmp
pop
stos
jg
adc
pop
movsb
imul
add
cli
xlat
sbb
fwait
in
aas
xlat
or
sub
xor
in
jo
popa
sti
dec
pop
pushf
cs
scas
adc
mov
fldcw
dec
bnd
mov
stos
sub
adc
and
pushf
mov
adc
pop
imul
lea
jbe
push
dec
xchg
and
je
adc
jecxz
lret
movsl
notb
std
js
mov
ljmp
mov
xor
xor
xchg
cmp
or
enter
in
mov
cli
outsl
lock
cmovl
leave
pusha
mov
sbb
push
and
xchg
jl
add
jl
arpl
inc
insl
push
inc
jecxz
lock
out
cmpsl
test
inc
outsb
icebp
out
sbb
lret
loope
inc
sahf
mov
mov
push
ja
rcrb
add
aam
clc
sub
or
push
in
cmp
adc
dec
in
cmp
sub
iret
scas
outsl
popa
push
movsb
stos
lods
sub
jbe
mov
outsl
inc
push
sahf
cmpsl
inc
cmovbe
jno
repnz
pop
jno
subl
scas
dec
mov
jno
xchg
xchg
sbb
xorb
repz
pop
lods
or
stos
gs
push
repnz
ret
inc
mov
cmp
cmp
xchg
shrl
mov
inc
jns
mov
jns
or
fs
dec
cmpsb
movq
jle
or
sbb
fwait
mov
add
incb
lods
inc
pop
mov
filds
cmp
inc
jns
sbb
scas
xchg
mov
inc
stos
sub
iret
mov
cli
jp
out
adc
sub
lea
das
mov
pusha
mov
incl
jmp
sbb
sbb
push
jbe
xchg
popf
incl
mov
stos
mov
stos
dec
out
cli
and
gs
jnp
ficoms
push
or
nop
or
cmp
push
sub
inc
movsb
pop
jae
fcmove
inc
cmp
sub
ss
and
sarl
dec
fisubrl
out
loop
idivl
stos
fidivrs
mov
rcrb
inc
test
repnz
leave
into
jg
hlt
jle
ljmp
push
jp
dec
arpl
sbb
mov
or
in
add
fisttpll
push
iret
mov
pusha
jo
xchg
insl
scas
push
std
pop
and
fnstcw
js
test
push
lods
shlb
dec
inc
out
enter
daa
test
rcrl
fiaddl
push
dec
pop
imul
out
mov
push
xlat
in
push
test
xor
xor
jno
ror
sahf
inc
pusha
mov
lahf
movsl
js
dec
lods
pop
pop
ljmp
sbb
inc
sub
icebp
adc
mov
push
outsb
rorl
mov
mov
mov
movsb
add
push
arpl
and
int
shl
cmc
iret
mov
xchg
shll
mov
outsb
test
sub
lcall
xlat
stos
add
aas
jg
in
stos
mov
inc
push
mov
mov
in
out
in
dec
mov
cmp
push
mov
push
pop
ja
roll
mov
ds
dec
adc
cmpsl
add
xor
in
outsl
test
je
stc
test
movsb
fs
mov
loopne
sbb
lods
and
out
mov
cli
cmp
xor
lea
add
jg
pushf
gs
loopne
xchg
xchg
pop
leave
mov
subl
add
add
xor
xchg
push
cmp
sbb
push
pushf
sub
inc
fwait
mov
jmp
sti
adc
cs
pop
dec
aad
fadds
in
xor
inc
loopne
push
ftst
and
test
or
mov
inc
cwtl
call
nop
mov
mov
pushf
dec
shll
or
add
jb
inc
push
xchg
aas
adc
andl
and
inc
jecxz
negl
std
pop
sub
movsl
xor
and
mov
insb
dec
xchg
sbb
fstpt
jp
mov
jecxz
mov
nop
xchg
lock
mov
mov
ror
xchg
and
cmpsl
jno
push
sub
es
fs
cmp
into
dec
jmp
int
test
popf
mov
lds
test
xor
mov
nop
sbb
pop
jno
sbb
in
aas
cmp
inc
adc
aam
cmp
lcall
fnstsw
fs
out
stos
xchg
jp
xchg
ljmp
stos
lods
xchg
cltd
inc
mov
add
push
xchg
and
pop
push
jns
jg
movsl
xlat
mov
cltd
push
movsl
pop
test
add
and
test
xchg
je
shl
cld
sbb
lock
push
cltd
jb
push
adcl
imul
sbb
push
jle
fmull
xor
lahf
or
loop
xor
or
loope
mov
icebp
mov
xor
sub
pop
jbe
cltd
lret
adc
js
or
adc
fwait
in
bound
add
jne
cmc
mov
out
sbb
pop
jns
pop
xchg
in
loop
xchg
pop
adc
sub
lret
or
inc
jp
mov
pop
mov
cmp
mov
xor
pusha
fistps
xchg
xchg
xor
jmp
call
pop
adcl
mov
repz
adcl
cmp
or
jnp
cld
nop
scas
std
xchg
push
push
adc
adc
popa
iret
pushf
cli
pop
ret
pop
pop
add
aam
stc
lret
fadds
or
xchg
mov
push
inc
push
and
stos
cmpsl
xchg
push
js
sbb
imul
mov
cmpsb
shlb
mov
test
leave
inc
div
hlt
leave
aad
arpl
push
arpl
mov
nop
sbb
inc
aad
cmp
or
push
dec
xchg
pop
sarl
push
mov
popf
xor
mov
dec
scas
xor
dec
and
loop
cmp
pop
movsb
cmp
outsl
push
sti
jle
cmpsl
jle
in
das
stos
iret
enter
daa
test
bound
aas
mov
sub
dec
ss
cmpl
adc
pop
and
pop
inc
lahf
sbbb
push
repnz
sti
jnp
inc
bound
adc
or
pop
push
sahf
adc
pop
lcall
loope
inc
xchg
sub
mov
cmp
popf
outsb
ss
add
shlb
ljmp
ret
out
or
xor
or
int
movb
adc
jns
insl
mov
push
aam
xchg
fsubrl
bound
dec
xor
imul
daa
enter
fwait
mov
add
mov
movsb
mov
ret
cld
in
push
ss
xchg
cmp
adc
testl
or
xchg
mov
xor
std
rcl
into
mov
mov
xor
outsl
mov
loop
scas
sbb
cmp
ja
cmp
adc
mov
callw
lods
or
insl
mov
es
iret
in
cli
imul
cmp
mov
lret
mov
gs
in
pop
call
lock
imul
fildl
cmpsb
fildl
sbb
mov
adc
xlat
mov
sub
inc
icebp
xchg
stos
xchg
push
cs
jne
aad
movsb
nop
mov
rorl
repz
fstps
push
les
and
lea
callw
cmp
punpckhdq
pop
cmp
test
sbb
scas
inc
adc
jle
inc
test
cld
aas
mov
xchg
jb
dec
xor
adc
je
xchg
inc
jecxz
addr16
fcmovu
push
std
fdivl
pusha
je
mov
jge
mov
mov
xor
push
pusha
loopne
sub
jns
and
fidivrl
jle
mov
mov
push
mov
and
andl
ds
pushf
repz
aam
dec
in
mov
mov
xchg
jo
mov
nop
jge
rol
mov
sub
scas
mov
loopne
cmc
ret
sub
stos
push
imul
clc
jmp
and
mov
lods
dec
popa
cmp
mov
add
mov
fistpl
pop
xor
push
adc
in
add
scas
test
mov
pop
mov
jge
xchg
lock
ds
lods
dec
sbb
inc
out
sar
adc
sub
cmp
mov
mov
xchg
adc
jnp
and
mov
xchg
xor
push
sbb
lret
test
mov
out
pop
jne
imul
inc
inc
out
mov
fwait
adc
inc
dec
cld
std
xor
or
xchg
push
mov
bound
xchg
inc
inc
in
and
out
push
repnz
lds
inc
jp
inc
cltd
mov
call
test
jle
pop
mov
cmp
pusha
xlat
je
fbstp
push
xchg
push
mulb
xchg
mov
xor
in
push
ficomps
cs
push
sub
stos
xor
loopne
and
push
insb
cld
jge
jnp
fisubrs
pusha
loopne
push
fwait
shll
adc
add
iret
sti
mov
jl
enter
in
mov
add
inc
inc
push
prefetch
clc
push
push
iret
nop
clc
ficoml
and
sbb
sbb
imul
mov
lds
rol
aaa
jg
orl
repnz
add
xchg
hlt
adc
sbb
sbb
jge
int3
ficompl
mov
sbb
test
mov
push
pop
add
testl
mov
ss
lret
pmovmskb
and
idivl
out
adc
push
dec
in
push
clc
insl
enter
daa
cmpsl
loope
cmp
inc
jno
adc
push
xor
ds
and
sahf
mov
lahf
lahf
loope
push
sub
test
cmp
inc
icebp
mov
and
orl
push
cmp
test
aaa
push
aad
push
add
push
adc
inc
cmp
xor
andb
iret
sbb
cmp
xor
imul
sub
cmp
lcall
mov
sub
in
push
sahf
or
jecxz
stc
leave
sti
jg
clc
stos
mov
mull
mov
out
dec
and
rorb
insl
sarl
cmp
int3
xchg
test
push
push
shll
push
mov
sbb
inc
cmc
sbb
subl
add
stos
sbb
repz
fs
aas
and
jle
inc
imul
lock
pop
mov
jmp
cli
sahf
test
xor
pop
cmp
in
sbb
loope
push
inc
shll
cmp
cltd
loopne
dec
mov
pop
dec
inc
adc
or
imul
jmp
xchg
fstpl
loope
loope
sbb
dec
sbb
enter
in
into
ret
movsb
inc
in
mov
in
pop
fdivrs
aad
push
loopne
cwtl
insl
add
push
iret
inc
push
xor
push
push
add
mov
jbe
mov
pop
lea
fabs
mov
lods
adc
mov
jmp
rolb
push
or
inc
movsl
in
xchg
or
xchg
jb
dec
rorb
icebp
je
repnz
sbb
negb
jne
cwtl
sbb
mov
pop
pushf
mov
fwait
inc
dec
addr16
aaa
fistl
rcll
lock
jmp
xor
mov
or
jnp
icebp
in
es
je
insl
or
loope
shll
dec
lods
icebp
jae
cs
out
sbb
pop
icebp
lods
mov
sahf
sub
mov
scas
xchg
sub
icebp
aam
mov
mov
jne,pn
fisttpll
jmp
xchg
clc
cwtl
mov
popa
push
outsl
sub
pop
loop
lret
xchg
mov
dec
push
das
fs
packsswb
je
sub
mov
test
out
xchg
push
jl
out
sbb
test
xchg
cmp
cli
es
xchg
pop
lods
ss
stos
xor
je
fildl
add
pop
stc
xor
ret
in
or
ljmp
adc
dec
mov
stos
xchg
ja
fcomps
inc
jle
aaa
or
jns
fwait
inc
mov
jne
jg
mov
ret
pop
out
jl
cmc
iret
lret
dec
in
mov
xchg
movsl
lock
out
test
rclb
addr16
dec
stc
jp
ja
mov
xchg
call
mov
cmp
jle
loop
in
repz
arpl
fists
sub
xchg
jle
jae
mov
shll
test
adc
stos
movsl
inc
xor
cmp
jnp
sbbl
ret
sub
push
loop
stos
adc
fmull
sbb
pusha
cltd
pop
outsb
mov
inc
lds
cmpsl
jae
jnp
inc
inc
sbb
or
cmpsl
and
inc
rol
xchg
int3
hlt
ljmp
ds
ljmp
and
repnz
das
leave
xor
xchg
hlt
pop
push
loopne
imulb
jbe
jmp
dec
sbb
sub
mov
jl
add
ljmp
add
cmp
scas
out
leave
adc
cli
push
ret
pop
pop
movsb
dec
lods
jp
cltd
incl
lods
sub
enter
daa
cmpsb
and
jno
xor
test
jnp
ds
pop
cwtl
movsl
and
addr16
mov
cmp
cmp
lret
inc
sbbb
sahf
dec
je
fadd
jns
sbb
push
movsl
sub
pop
mov
xchg
mov
lea
push
dec
or
sbb
mov
xor
leave
sbb
add
scas
insb
xor
rcll
sub
add
push
sub
lcall
sbb
and
sub
addr16
sahf
lods
mov
imul
test
mov
sbb
cmpsl
mov
outsb
out
and
testl
fadds
dec
sahf
lret
push
ror
in
aaa
mov
xor
push
ficoms
in
iret
xor
out
outsl
inc
aaa
fucom
ds
push
adc
rcrb
out
sub
lods
xlat
adcb
test
cmp
xor
or
call
ret
repz
ret
es
imul
push
pusha
imul
mov
xchg
mov
push
loop
xchg
xlat
pop
sbb
mov
sbb
mov
or
addr16
fst
add
dec
dec
dec
or
pop
inc
sbb
outsl
and
adc
mov
lods
lea
jmp
fs
or
lea
js
pushf
dec
dec
or
test
pop
cmc
leave
mov
roll
or
aas
repnz
and
dec
outsl
out
add
adc
mulb
cmp
adc
cmc
cwtl
mov
mov
mov
push
orl
test
outsb
jbe
imul
sbb
push
test
cwtl
mov
clc
in
dec
and
loopne
roll
andb
aas
xchg
insl
icebp
jbe
dec
fcoml
cmpsl
movsl
push
pop
mov
dec
pop
sar
sub
lret
lret
cmc
ret
or
xchg
outsb
pop
into
xchg
hlt
shlb
mov
aam
sti
ret
ret
inc
lds
icebp
scas
fnsave
inc
out
xchg
aaa
sub
ljmp
mov
push
jbe
sub
rolb
cmpps
add
gs
test
xchg
mov
push
fstps
xchg
insl
sbb
enter
inc
jbe
and
push
jle
push
add
mov
imul
dec
add
or
fnsave
or
ds
bound
mov
gs
ja
pop
cli
dec
jb
sbb
cmp
jl
jb
inc
dec
ret
jne
pop
mov
out
mov
sub
add
jns
clc
and
push
lcall
das
sub
sub
mov
xor
jmp
push
mov
cmpsl
imul
inc
in
jno
or
pop
fsts
inc
jb
xchg
dec
clc
add
push
subb
mov
cmpsl
inc
inc
stos
sbb
and
ret
inc
fnstsw
in
subl
jl
adc
movl
mov
imul
cmp
inc
dec
dec
mov
rolb
inc
int
push
je
xchg
and
sbb
imul
inc
fiadds
jno
outsl
jo
ror
jge
shll
leave
stos
xor
push
arpl
scas
loop
call
mov
bound
pop
lea
sbb
daa
int3
inc
sbbl
pop
fs
xor
les
scas
int
mov
cmp
movsb
fldcw
push
call
mov
in
in
movsb
enter
daa
movsl
out
cmp
jmp
ja
sar
dec
andl
arpl
cmp
aam
pusha
lahf
push
push
shlb
dec
test
pop
mov
daa
push
ja
pop
js
insl
push
pop
push
daa
sbb
loope
les
jbe
outsb
pop
lret
insb
adc
testl
cmpsb
sbb
je
xor
pop
push
jmp
subl
lcall
xchg
push
add
sbb
mov
subb
and
or
mov
ja
mov
inc
insb
mov
inc
insl
and
fdivrs
inc
movsb
push
testl
loop
pusha
popf
xchg
ljmp
stos
lods
into
xor
mov
das
mov
rcll
fmull
repnz
or
mov
lods
mov
roll
out
xor
xchg
xor
or
cli
inc
or
mov
gs
outsb
jecxz
fimull
pop
inc
call
or
adc
add
add
jle
arpl
bound
ret
xlat
inc
xchg
out
shrb
loope
xchg
xchg
movsl
sti
mov
dec
fmuls
aad
gs
nop
dec
inc
push
dec
imul
fld
pop
jle
aad
add
int
or
lea
pop
test
pop
push
mov
adc
jo
pushf
clc
ja
jmp
pop
adc
jnp
inc
mov
cmpsl
inc
pop
xchg
xchg
jo
jb
out
dec
out
pop
je
push
or
mov
mulb
push
xor
push
movsl
pop
mov
clc
cli
dec
cmp
repnz
mov
mov
iret
lock
cld
das
mov
pop
adc
scas
xchg
push
and
inc
fwait
rorl
jge
insl
fdivrs
dec
xlat
jo
cmpsl
movsb
jno
lods
icebp
and
cld
push
push
cld
mov
lods
rcrb
and
pop
in
movsb
sbb
cmp
cmp
sbb
mov
mov
mov
dec
fstp
push
and
mov
lahf
xchg
jbe
loopne
push
jb
popa
adcl
mov
nop
movsl
sbb
in
cmp
and
test
test
test
dec
mov
loope
xchg
cmp
pusha
les
pop
mov
stos
adc
push
and
add
mov
jge
xor
shlb
mov
xor
xchg
and
ret
dec
gs
sbb
xlat
or
xor
xor
movsl
mov
sbb
xchg
insb
mov
jns
leave
sub
mov
filds
mov
insl
sub
mov
mov
lcall
ja
repnz
mul
enter
lcall
jl
icebp
sbb
cmp
les
fucomp
push
inc
cli
ds
ret
mov
out
xchg
addr16
insb
cmp
sbb
push
jo
push
adc
je
mov
xor
out
inc
inc
fistl
jae
cmp
inc
dec
stc
and
push
dec
out
push
fisubrl
jns
dec
pop
lcall
das
call
shl
lcall
in
mov
hlt
cmc
xor
out
jbe
out
jge
cwtl
bound
out
out
aaa
or
add
cmp
pop
lea
push
ds
xor
pop
xor
and
dec
movsb
fs
push
aaa
adc
test
in
lret
ss
aam
pusha
daa
movsb
xor
or
push
jl
mov
xchg
les
outsl
or
or
mov
inc
and
testb
out
adc
andb
cmpsl
pop
xchg
sbbb
mov
lods
sub
adc
cmp
aad
outsb
ret
adc
rorb
arpl
lret
add
mov
dec
cwtl
push
in
insl
ror
lock
imulb
pop
xor
or
and
push
xor
subb
test
popa
test
cmp
jg
cmpsl
repz
push
lret
mov
mov
push
pop
ss
cmp
std
nop
mov
add
insb
and
mov
xchg
icebp
into
push
mov
cmc
jb
lods
xor
mov
jg
fs
test
sbb
push
fs
pop
adc
inc
data16
pusha
lods
movsl
andb
sbbl
aaa
push
jg
jecxz
adc
push
shrb
cs
xchg
gs
jge
loopne
out
push
pop
fs
adc
cmp
adc
push
outsb
add
and
xchg
es
repnz
std
jl
xlat
test
les
repnz
cmp
cmp
aad
sbbb
enter
aas
inc
xchg
fincstp
out
mov
loopne
mov
pushf
adc
fwait
ljmp
or
pop
push
cmp
es
call
jmp
push
jne
cmp
add
cmp
aas
xor
jb
adc
je
fsub
fwait
iret
cmc
mul
out
test
bound
divb
jnp
xor
sub
mov
mov
fdiv
mov
pop
imul
insl
sub
pushf
jp
mov
data16
and
ljmp
rcr
jle
es
jo
mov
and
mov
clc
push
loope
andb
test
sub
and
mov
mov
lods
sub
lret
jne
ret
gs
push
push
ja
mov
lcall
jmp
ret
fimuls
sbb
lods
lods
dec
stos
mov
repz
xchg
test
cmp
aam
jo
jmp
cltd
gs
mov
xchg
cmp
dec
and
daa
test
out
xchg
negb
adc
dec
rcrl
int
scas
fsubs
call
push
shrb
add
fdivrs
outsb
xor
and
xor
pop
int
aas
loop
mov
push
int
sub
leave
pop
fstpt
ljmp
je
or
dec
scas
fwait
shrb
mov
insl
shlb
cmp
out
jae
aaa
bound
cmp
pop
xchg
xchg
cmp
out
xlat
repz
mov
cld
add
push
push
push
mov
jo
mov
gs
jle
sub
pusha
inc
cmpsl
aaa
fcomip
jg
mov
cld
cs
fistps
mov
popf
jmp
and
push
and
jmp
sub
mov
leave
mov
mov
adc
ljmp
adc
dec
inc
out
bnd
sub
or
sbb
ljmp
aam
xchg
sarl
shrl
jae
fimuls
sar
mov
call
repnz
push
hlt
inc
lea
arpl
or
jge
dec
call
aaa
cmc
mov
or
mov
int3
sbb
sub
and
shll
jp
fsubrs
mov
push
cmp
add
movsb
out
fstpt
cmpsb
ss
adc
iret
push
andl
std
jns
ds
sub
push
out
mov
popa
jp
ds
xor
lahf
sbb
imul
inc
push
xacquire
fdivrs
dec
js
jne
pop
aad
repnz
adc
loope
adcb
std
and
lret
outsb
and
ficompl
scas
shlb
insl
or
cltd
add
cld
add
sbb
push
sub
add
lcall
or
addl
sub
outsl
jbe
xchg
pop
fwait
test
in
andb
jg
aas
fbstp
push
lds
inc
add
ss
outsl
cmp
mov
es
lret
push
rorl
xchg
call
dec
popf
cmc
cmp
xlat
xor
pushf
jb
jecxz
and
stc
iret
cmc
lahf
repnz
data16
inc
lods
mov
mov
add
out
or
and
mov
pop
mov
popf
int3
push
jbe
gs
lock
loopne
movsb
cmp
xchg
sbb
mov
sub
stc
lods
add
sub
jge
add
cmp
xlat
les
sub
mov
add
cs
cltd
fiaddl
lods
nop
add
pop
dec
daa
mov
and
jmp
in
imul
iret
jno
lea
test
aad
test
mov
jmp
xor
push
or
pop
fidivrs
push
inc
or
sub
iret
sbb
dec
dec
aam
lcall
xchg
jge
sub
mov
or
ficompl
aam
cld
mov
xchg
adcl
fistl
mov
or
lock
outsb
cs
jnp
cmp
sbb
or
scas
es
push
jno
cmpsb
aaa
lahf
dec
int
lds
xlat
jns
icebp
iret
mov
cld
stos
xor
lret
sbb
mov
mov
sub
dec
rcr
testb
popa
test
xlat
scas
jecxz
hlt
fiadds
push
cmp
frstor
add
or
hlt
js
popa
scas
lret
imul
lock
xchg
int3
repz
ja
pandn
add
pop
cltd
pushf
loop
test
jb
mov
xor
lock
dec
mov
test
andb
imul
sbb
xor
shll
popa
pop
stos
out
cld
add
addr16
jg
inc
jnp
add
cmp
call
std
repz
lods
fs
add
dec
ja
mov
adc
mov
xchg
mov
and
pusha
dec
dec
idivl
inc
fiaddl
or
cmp
fwait
call
jp
sbb
popa
xchg
out
push
insb
xchg
in
jmp
in
inc
lea
mov
ja
or
dec
jp
pop
mov
mov
aam
cwtl
jle
jg
in
das
pusha
fsubp
or
xchg
je
jmp
xchg
stos
imul
stc
push
lret
jmp
popf
adc
jne
push
popa
notb
cli
xchg
stos
jno
mov
insb
adc
xchg
jnp
ret
dec
out
push
imul
ret
mov
inc
icebp
frstor
rorl
inc
inc
push
test
sbb
movsl
les
imul
adc
addr16
add
imul
jp
das
arpl
lds
mov
sahf
stos
pushf
bnd
stc
leave
hlt
mov
arpl
outsl
es
mov
jge
jmp
aaa
mov
enter
sub
loopne
sub
or
pop
pop
jmp
inc
push
add
sbb
jo
xor
sub
cmp
inc
movsb
jp
jno
aad
cwtl
cmpsb
mov
aam
enter
daa
mov
push
jno
jo
jl
daa
rorl
lods
nop
ds
ljmp
movsl
add
lahf
cmp
push
push
dec
inc
and
push
mov
mov
mov
cmp
js
xlat
aas
pop
adc
adc
dec
dec
loope
pop
push
cmp
jnp
mov
add
rorb
divb
cmpb
add
mov
mov
repnz
cmp
mov
and
or
scas
push
ret
cmc
xchg
sub
cli
xchg
push
in
xor
out
cltd
mov
mov
or
cmp
mov
inc
dec
fdivs
push
cmpl
les
and
pop
push
sbb
adc
cmc
add
ret
stos
lods
outsl
ret
loop
dec
jno
xchg
fs
dec
adc
dec
or
lods
jae
popf
mov
jns
out
aas
xchg
cli
popf
arpl
cmp
xchg
or
iret
je
gs
xchg
loopne
insb
insl
pop
mov
xchg
fildll
mov
adc
repz
add
xchg
lods
mov
sbb
jae
jecxz
add
sub
jge
mov
enter
les
adc
and
add
dec
xchg
inc
add
mov
repz
dec
sarb
shr
push
jl
or
mov
aam
cmp
test
inc
dec
testl
aas
outsb
cli
xchg
jb
push
ja
dec
cmp
pusha
jecxz
fwait
cmp
insb
xor
cwtl
ret
mov
jno
mov
filds
dec
dec
fildl
push
sbb
addb
mov
aam
call
sarl
es
mov
dec
enter
mov
or
icebp
cmpsb
loopne
cld
rolb
mov
shll
dec
lock
xlat
call
mov
outsl
push
push
std
sbb
mov
popa
andb
xor
push
popa
cmp
lods
or
mov
mov
jb
push
jbe
cmp
mov
cltd
shrl
xor
repz
lods
dec
xchg
cmp
rorl
ficoms
stos
push
or
add
push
lret
sar
xor
or
push
xor
cli
insb
mov
pop
mov
pop
push
call
adc
inc
jno
jg
pop
sti
lock
cs
dec
dec
fldl
mov
jp
out
xor
aam
push
bound
call
xchg
xor
mov
cmp
sub
cmpsl
mov
addr16
outsl
jp
pop
in
mov
or
orl
jle
enter
mov
or
xchg
inc
xor
jne
mov
push
mov
mov
nop
xor
mov
xor
and
test
sbb
popa
scas
mov
jle
inc
xorl
iret
xor
xor
adcl
jae
fcoms
inc
push
scas
aaa
or
push
mov
push
fcmovb
add
sbb
push
imul
inc
lds
or
repnz
test
xor
push
jmp
jbe
dec
jb
test
sbb
aaa
cli
aaa
jae
lret
fstl
add
repnz
repz
sbb
hlt
push
out
push
xor
xor
dec
les
pop
movsb
add
cmpsl
pop
cmpsb
cmp
xor
cmpb
lds
xlat
daa
mov
push
cmpsb
jno
flds
insb
xor
dec
aas
mov
inc
sbb
pop
pusha
lds
or
push
mov
fs
pop
into
xor
js
int
pop
push
movsb
jmp
loope
bound
sub
dec
stos
cmp
mov
outsb
jmp
mov
mov
mov
arpl
addl
pop
aam
xor
cmp
sub
pop
pop
pop
mov
lcall
dec
mov
jecxz
fcomi
lea
fwait
cmp
mov
jmp
lret
mov
xlat
and
mov
pushl
cmpb
iret
sbb
lret
sbb
mov
lret
sub
inc
hlt
ror
mov
fidivl
out
scas
outsl
mov
icebp
jl
cmp
xchg
rcll
dec
jle
jge
bound
and
ret
cmc
pusha
cli
sarb
xor
mov
or
cmp
xchg
or
loopne
dec
mov
adc
loop
imul
inc
push
loopne
xchg
outsl
xchg
sbb
scas
adc
sub
push
ja
xor
jl
jae
mov
aad
xor
mov
pop
testl
dec
dec
les
aas
test
or
mov
lea
sub
call
mov
movups
bnd
movsb
outsb
inc
jmp
les
inc
iret
mov
out
aas
or
mov
je
cmp
jecxz
out
imulb
mov
push
mov
push
cmp
jmp
stos
stos
mov
jp
mov
dec
popf
lock
fbld
mov
ror
jnp
es
decl
dec
ret
mov
cmpsl
mov
dec
cmp
cld
add
lret
testb
and
lea
test
test
sub
lock
aam
and
adc
rcrb
clc
pushf
sarb
dec
clc
popa
fst
daa
lods
out
inc
es
sbb
jns
pop
push
in
push
stc
jae
popf
mov
add
pop
jno
in
movsb
mov
out
addl
or
xchg
rcr
sub
stos
shll
adc
stos
int3
lcall
push
pop
and
sub
call
jmp
xor
push
lods
or
gs
xor
inc
push
mov
mov
insl
jae
or
stos
ja
stos
clc
dec
xor
sbb
or
or
xchg
dec
fwait
pop
scas
aaa
dec
xor
adc
addr16
dec
jns
je
in
push
popf
xchg
jg
add
mov
mov
or
jp
xchg
mov
jg
lods
mov
mov
add
sub
fists
out
xchg
sbb
aas
xchg
inc
pop
xchg
adc
inc
push
push
lods
pop
popf
pop
lret
lret
xchg
push
loop
fwait
stos
push
in
and
movsb
mov
jnp
jns
scas
adc
cld
rclb
sub
into
ret
jae
mov
mov
jae
ljmp
sar
loope
mov
inc
dec
clc
mov
xchg
lret
cli
sti
sbb
test
jl
jne
inc
adc
add
repz
fsubrl
sbb
pop
leave
std
ret
and
daa
jbe
push
cmp
sub
mov
aaa
xor
testb
cmpsb
scas
add
jns
int3
fisubrs
pop
dec
mov
cmpsl
xor
mov
xchg
insb
xchg
cwtl
cmp
mov
movsb
nop
pop
push
jae
sub
in
add
rolb
mov
out
fnstenv
data16
jl
adc
dec
scas
pop
sahf
ds
clc
movsl
dec
pop
and
inc
enter
movsl
push
out
add
je
test
inc
fisubl
and
add
pop
xchg
or
push
sub
mov
cmp
negl
adc
ds
int3
dec
addb
or
push
mov
push
clc
adc
mov
and
dec
out
pop
or
dec
lcall
sbb
sub
pop
js
jle
cmpsb
test
add
and
cmp
xchg
inc
mov
data16
dec
and
ss
pop
scas
cmp
jmp
test
lret
and
push
dec
mov
into
mov
enter
push
outsl
addb
mov
cmp
xchg
lret
lods
adc
aas
int3
lods
inc
xor
and
out
das
jne
add
xor
lahf
in
cmp
sbb
or
add
gs
mov
mov
mov
adc
dec
imul
loop
add
test
xchg
xor
pushf
sbb
jmp
pushf
mov
mov
sahf
xchg
data16
and
les
mov
pop
nop
xchg
ds
dec
inc
mov
inc
mov
xor
or
push
repz
fdivs
ss
pop
dec
in
sar
sbb
subb
pop
enter
aas
add
push
ljmp
lods
mov
lahf
dec
cmp
enter
ja
div
inc
pop
std
xchg
aad
cmp
mov
jecxz
mov
fiaddl
aam
mov
mov
push
add
sbb
pop
mov
sub
movsl
addl
pop
cmpsl
lahf
cmp
icebp
push
cli
push
sub
jno
gs
mov
iret
inc
mov
sub
pop
mov
jp
pop
nop
out
sub
scas
sti
aam
pop
ss
mov
lea
fstpl
xchg
mov
dec
leave
leave
popa
hlt
mov
lods
pop
xchg
loopne
scas
mov
dec
xchg
mov
fadds
cld
fists
mov
xor
inc
daa
add
mov
xor
xchg
enter
or
test
les
sbb
fwait
adc
inc
xchg
pop
pop
rep
stos
mov
jecxz
add
inc
daa
cmp
cmp
jge
aaa
cmp
xor
call
dec
mov
xlat
add
popa
stc
ja
inc
cli
dec
and
lea
xchg
cs
sti
rcrl
sbb
or
out
mov
cli
stos
sarb
shl
pop
in
xchg
into
pop
cmp
inc
popf
mov
popf
cwtl
lcall
jp
stos
sahf
mov
aaa
xor
xlat
ss
mov
orb
ss
mulb
scas
sbb
outsl
dec
dec
xchg
in
cmp
jmp
or
mov
push
adc
out
popf
test
mov
and
stos
lret
and
es
insb
push
jno
jnp
jnp
scas
js
push
rcr
rcll
add
sub
ret
push
pop
out
and
inc
adc
cli
inc
pop
pop
push
or
add
sub
fisubrl
add
sbb
mov
imul
add
lds
mov
outsl
xorb
inc
hlt
insb
outsb
inc
arpl
xorl
test
rclb
sbb
xchg
cmp
add
dec
mov
js
scas
push
lods
mov
out
jo
int3
call
and
xlat
jg
sahf
jecxz
movsb
sbb
cli
cmpsb
inc
dec
xor
dec
outsl
xchg
enter
daa
lahf
pop
pop
cmp
aas
mov
jl
jecxz
sbb
pop
and
and
das
lahf
xchg
stos
in
ret
test
push
adc
inc
imul
push
pop
scas
stos
popa
js
jbe
pop
sar
subb
and
jmp
cmp
aas
fists
sbb
sub
cmpb
lahf
add
cld
xchg
push
xor
sti
pop
std
int
or
ret
push
jmp
xchg
lds
jecxz
mov
sub
pop
adc
fwait
outsb
adc
daa
jg
lds
mov
fxch
mov
jle
mov
sbb
and
repz
movsb
fsubl
lret
leave
shr
jge
movsb
lahf
mov
into
test
jae
push
sub
ret
outsl
pop
push
sub
inc
fsubrs
fs
push
rcll
sub
sbbw
sub
addr16
in
mov
xor
pop
cmpl
push
gs
inc
loopne
rcrb
sbb
adc
pop
iret
imul
fdivs
xchg
cmc
scas
push
sbb
and
scas
xlat
shrb
sub
es
or
xchg
sti
roll
fcmovnbe
div
cmp
dec
mov
and
mov
fistpl
in
dec
sub
ror
movl
mov
pushf
cli
loope
jmp
nop
push
pop
push
ds
fnstsw
inc
js
dec
aas
dec
test
jb
xchg
decl
jns
je
test
adc
xor
dec
sbb
repz
push
mov
loope
mov
inc
out
xorl
inc
fisttpl
and
mov
out
lock
aaa
sub
mull
movsl
mov
popa
mov
imul
insl
inc
pop
cmc
dec
mov
fincstp
mov
sub
fs
aam
mov
sbb
mov
cmpsl
pop
movsl
shrb
or
out
pop
aam
jecxz
ret
xor
add
clc
adc
cmp
shl
popa
or
lods
les
xchg
out
loop
inc
xchg
call
lret
popa
cvtdq2ps
sahf
add
dec
enter
add
mov
or
add
insb
xchg
pushf
rcrl
xchg
jl
rorl
test
pop
add
dec
mov
repz
pop
lds
call
cmp
mov
or
fmulp
mov
lods
dec
mov
cmpb
data16
iret
cmp
ss
orb
clc
fwait
mov
stos
mov
mov
cmpsl
out
into
fisubs
push
cmc
jns
and
jecxz
repnz
sbb
jo
sub
cwtl
ret
call
jp
cmpl
add
cmc
jle
pop
or
ja
mov
test
fisttps
jl
xchg
repnz
xor
push
push
xlat
rcrb
inc
push
push
push
pusha
and
stos
cmp
int3
inc
insb
mov
inc
or
sbb
stos
adc
push
iret
push
ds
daa
and
pop
addb
sbb
inc
pop
jns
or
jg
mov
xchg
insl
fcmovu
nop
xchg
xchg
test
fldt
sbb
inc
and
insb
rolb
jl
ret
leave
jmp
fcomi
mov
xlat
arpl
pop
jbe
ret
out
jns
int3
sbb
scas
aaa
mov
mov
xor
mov
int3
mov
lds
notl
xor
inc
daa
scas
out
imul
push
mov
movsb
cmpsb
mov
mov
in
xor
jno
daa
sahf
mov
jge
pop
in
jge
in
dec
lret
push
fstpt
pop
mov
mov
lahf
mov
ja
xchg
mov
test
jmp
and
cmpsl
push
push
pop
xchg
mov
mov
scas
pop
adc
cli
xor
sub
clc
insb
cmp
sub
adc
hlt
dec
xchg
or
dec
sbb
sbb
push
sbb
and
lods
push
sbb
sub
mov
imul
fiaddl
dec
sub
clc
push
test
pushl
in
add
bound
mov
mov
jecxz
push
mulb
xchg
mov
inc
cmp
pop
inc
fdiv
jg
repnz
dec
roll
rcrl
shll
test
sbb
lcall
xor
sbb
stc
bound
fs
std
inc
pushw
out
lods
pavgb
mov
das
cs
imul
out
sbb
in
or
movsl
ret
incb
or
loopne
push
sub
mov
adc
dec
push
adc
and
cmp
pop
xchg
mov
das
push
cmp
push
xlat
cmp
sub
push
mov
je
mov
subb
aad
sub
add
adc
flds
or
repz
sub
fidivs
lea
call
add
sbb
adc
lea
jmp
sbb
inc
fs
testb
lea
ljmp
dec
daa
sub
je
cmc
arpl
idivb
in
dec
out
cwtl
scas
rol
mov
fs
mov
lods
push
dec
stos
dec
fstpt
add
mov
pop
lock
fwait
xchg
das
mov
xchg
mov
in
cmp
sarl
jecxz
insl
sub
xor
popf
cld
lea
add
lret
inc
test
in
and
pop
call
sbb
decb
sub
push
ds
rorl
mov
int
fucomp
fidivrl
clc
dec
stc
jge
das
push
ret
ljmp
inc
lods
das
scas
into
mov
inc
fstps
push
loop
je
mov
pop
daa
cltd
scas
xor
test
mov
xchg
inc
cmp
test
sub
xchg
add
inc
adc
xor
mov
test
xchg
and
add
jp
cmp
mov
push
xor
push
sti
or
daa
mov
mov
hlt
test
cmp
or
dec
or
inc
int
push
add
push
in
dec
fisubrl
jne
inc
scas
mov
test
out
lods
mov
bound
sbb
outsb
sbb
outsb
sahf
mov
inc
mov
inc
or
loope
jp
or
mov
repz
mov
call
jae
jle
lret
pusha
in
fildll
push
mov
sti
stc
mov
addl
cs
rcll
jl
lods
push
lahf
ja
stos
mov
xor
or
adc
lret
ds
popa
mov
mov
hlt
movsb
ret
add
xorl
fidivs
mov
or
push
lds
test
xchg
rorb
fistpl
inc
imul
ficomps
movsl
lds
sarb
adc
popa
shl
xlat
mov
jbe
sub
jge
dec
dec
sbb
xchg
aaa
outsl
xchg
fimull
daa
cmp
sarl
int3
lahf
mov
pop
cmp
xor
pushf
xchg
sub
and
sub
push
pusha
sub
dec
and
in
sbb
test
mov
stc
daa
popf
lahf
cmpb
sti
dec
jno
in
jl
lods
fwait
dec
sti
and
jnp,pt
imul
ds
lahf
aad
dec
push
push
mov
push
mov
pop
inc
xchg
push
xlat
pop
std
pop
push
pop
dec
popa
ds
in
mov
sub
fiaddl
cmp
fucomi
outsb
ja
adc
ror
pop
inc
sbb
add
dec
sbb
sbb
repnz
mov
add
int
leave
cli
sub
cmp
push
pop
sqrtps
push
and
xchg
sub
scas
test
imul
add
xor
loopne
movsl
mov
stos
daa
and
test
cmp
sbb
repnz
int
lret
aam
sbb
mov
mov
into
dec
jmp
int
push
and
outsl
sbb
popl
sbb
stos
fs
adc
mov
testb
out
cmc
mov
pushf
aad
xor
cmp
or
sbb
dec
gs
loopne
addl
stc
sub
jge
jno
testl
push
add
xchg
pop
xchg
jnp
sbb
lcall
sub
mov
fistps
popf
lock
aas
xchg
nop
les
inc
out
fnstcw
out
sub
or
loope
sbb
mov
xchg
push
movl
cld
pushf
push
movsl
inc
jmp
imul
mov
push
inc
jmp
xor
pusha
aas
mov
inc
dec
sahf
andb
test
jecxz
rcr
mov
addr16
imul
mov
wrmsr
sbbl
movsb
movsl
mov
mov
or
imulb
mov
lahf
mov
jcxz
and
inc
out
roll
test
insl
adc
ret
dec
scas
cmp
mov
fldcw
mov
mov
push
mov
in
add
in
rcl
std
mov
aam
hlt
dec
ret
dec
test
sbb
mov
xchg
ljmp
popa
lods
lcall
out
test
js
jbe
jae
mov
cmp
jmp
das
cmc
test
out
mov
lcall
cmc
cmpsl
xor
les
fcmovnbe
mov
stc
std
stos
mov
xor
cmp
xor
add
lcall
pushf
xchg
xor
les
test
cwtl
mov
mov
mov
clc
insl
mov
dec
std
jb
inc
and
lock
sbb
mov
sahf
add
mov
outsb
bound
pop
xchg
in
js
xchg
mov
jae
sub
mov
addr16
imul
das
pop
scas
mov
outsb
inc
cmpb
lock
inc
pop
pusha
addb
adc
jmp
insb
cs
adcl
cwtl
push
pop
mov
ret
hlt
xor
stos
and
in
insb
xchg
ss
xchg
jp
mov
rcll
iret
adc
sub
sub
jae
fnstenv
arpl
das
push
inc
inc
cmpsb
fiaddl
xchg
xor
jbe
cmpsb
imul
add
mov
sarb
ds
mov
dec
mov
addr16
jbe
add
sbb
cmc
sbb
or
rolb
int3
mov
stc
pop
add
sahf
lret
xor
notl
daa
scas
movsb
and
roll
inc
popa
movsb
mov
repnz
cmpsb
lret
mov
push
enter
daa
pushf
or
cmp
add
dec
push
ds
pop
in
addr16
pusha
and
add
cmp
cmp
jg
lock
push
ljmp
and
repz
dec
cmpsb
pop
mov
shrb
xor
inc
mov
rorb
popf
outsb
fcmovbe
or
stos
xorl
repnz
subb
xchg
cs
xor
cld
fiaddl
add
xchg
int
jg
sub
out
rol
mov
call
or
sub
push
cmp
and
out
jg
aam
mov
enter
inc
pushl
sbb
ss
jp
cmp
aad
cwtl
idiv
ss
shrl
sbb
xor
ror
cs
xor
mov
xor
cltd
mov
cld
cmp
stc
rclb
mov
outsl
scas
data16
subl
jnp
cmp
xor
mov
insb
incb
and
loopne
rcrb
insl
call
imul
mov
add
sbb
rorl
aad
push
xlat
jge
outsl
sub
sbb
in
dec
inc
cmp
dec
sahf
cs
cmp
aad
jl
nop
add
dec
rorb
fldcw
inc
call
in
add
xor
movl
push
cli
adc
std
mov
sti
inc
adc
fstpt
pop
push
sahf
adc
addb
and
jb
lods
mov
jp
je
inc
out
jecxz
pusha
xchg
std
lcall
mov
idivb
xorl
or
mov
fidivs
movsb
mov
inc
mov
push
dec
mov
add
lea
insl
test
jmp
cmp
cltd
icebp
mov
cld
fadds
outsl
lret
and
mov
jmp
jne
xchg
fistpll
add
pushf
shlb
inc
aam
jnp
ret
frstor
push
fadd
fnsave
cmp
clc
ret
lods
jnp
lods
dec
ljmp
les
mov
adc
cwtl
sbb
js
test
cltd
sbb
dec
pushf
mov
out
roll
pop
dec
fildll
inc
ret
test
stos
push
xchg
adc
shrb
xor
sub
mov
cmp
iret
pop
xor
ljmp
mov
aas
mov
loopne
mov
mov
mov
dec
lock
stos
inc
sti
lock
fucomi
adc
mov
popa
in
mov
mov
out
imul
bound
cli
jns
repz
test
pop
out
mov
cmp
mov
outsb
addr16
jne
jp
bound
cmpl
fstpl
jle
xorl
sbb
out
jmp
arpl
jmp
dec
add
and
and
repnz
cmp
and
xchg
jnp
add
loopne
ss
scas
add
pop
push
out
inc
mov
outsl
dec
or
outsl
insl
push
ret
lret
jno
inc
ds
jae
aas
ljmp
mov
push
ret
faddp
jno
xchg
mov
jmp
push
in
imul
fisubs
mov
notl
cmp
push
push
das
hlt
cwtl
test
jae
outsb
adc
sbb
lods
and
or
addb
jne
jl
xor
mov
xor
push
scas
lcall
loop
cmp
mov
push
incb
leave
cmpsb
dec
leave
xor
ljmp
daa
fwait
cmc
into
cmp
xchg
jno
inc
iret
jl
loopne
dec
fnstcw
rcrl
and
dec
pop
lahf
adc
push
push
in
test
dec
fisubrs
lock
ret
mov
pop
int
fwait
push
jg
loope
imul
inc
popf
sub
popf
rclb
test
pop
addb
scas
add
cmp
xor
adc
sbb
sub
mov
lcall
ja
fcmovnb
push
sub
xchg
sahf
lods
xchg
faddl
cmp
mov
mov
sub
mov
js
mov
mov
mov
in
cmp
nop
out
idivl
mov
mov
test
into
adc
mov
outsl
fstpt
stc
xchg
int
dec
mov
loop
popl
lods
les
mov
cli
add
cmp
repnz
imul
jge
jnp
inc
adc
or
imul
testl
xchg
add
sbb
adc
or
mov
sub
mov
mov
xchg
sti
lea
aad
push
xchg
nop
fsubrl
dec
dec
pop
dec
dec
inc
ljmp
les
shl
jecxz
std
out
orl
cmp
pop
push
or
xor
mov
or
xlat
mov
stc
lahf
fadds
cli
fdivrl
jb
jb
sbb
dec
mov
cltd
je
jb
jecxz
inc
stc
testb
std
inc
adc
mov
int3
add
mov
test
repnz
imul
fcmovne
cmp
sub
inc
lds
incl
das
jae
mov
mov
lea
shll
fistpl
insl
fidivrs
cmp
outsl
fwait
push
xchg
aad
add
lret
nop
scas
sub
and
das
stc
xchg
pop
and
shlb
push
sub
add
das
push
icebp
ret
insb
roll
push
adc
ds
clc
gs
xchg
in
xchg
mov
lods
jo
xor
outsb
cmp
jae
pop
pmovmskb
repnz
aad
cltd
push
adc
test
add
mov
mov
xchg
push
dec
ret
fimull
xchg
xorb
push
subps
aam
push
jg
add
jnp
xor
lret
jmp
decl
das
stos
or
sti
andb
test
mov
outsb
scas
jb
sbb
pushf
dec
jecxz
cmp
loop
or
js
fwait
ja
testl
mov
mov
pop
popf
out
dec
or
jns
sub
in
sub
js
out
inc
js
cmp
or
je
sbb
imul
dec
inc
dec
jle
js
in
and
stos
inc
fisttps
add
or
jno
loopne
outsl
xchg
add
pushf
push
jecxz
adc
dec
jecxz
mov
pop
mov
or
fisubl
dec
int
insb
imul
jnp
jmp
sbb
push
ss
adc
sub
into
das
dec
ret
adc
pop
jo
dec
push
xorb
jno
imul
icebp
inc
inc
dec
fisubrl
mov
sbb
rcl
inc
insl
into
fiadds
insb
lds
add
push
daa
js
mov
or
das
addr16
adc
jge
iret
mov
cmp
std
cld
or
and
add
adc
mov
xor
lods
pop
cmp
fisubs
mov
xor
rcrb
fists
push
xchg
cmpsb
rorl
in
shr
pop
enter
daa
lcall
jno
cmpsl
push
jl
mov
loope
in
jae
jne
test
jge
lahf
lahf
xor
test
loope
shrl
jecxz
inc
xor
xchg
mov
jns
jb
inc
js
mov
mov
loope
push
imul
mov
pushf
adc
pusha
pop
push
popl
mov
pop
sbb
repz
lods
sahf
mov
push
or
or
sub
pop
add
lcall
paddusb
loop
sahf
push
add
test
push
and
jg
inc
or
inc
push
cmp
subl
pop
icebp
jae
dec
pushf
push
idivl
cmp
pop
adc
rcr
cld
mov
scas
adc
lcall
cmp
pop
xor
outsl
mov
sub
fs
mov
data16
mov
stc
cmc
out
pop
and
xor
push
je
pushl
mov
pop
gs
shl
addl
adc
daa
imul
xchg
lods
add
jnp
les
sbb
dec
add
sub
lock
mov
and
pop
sti
cmp
push
sbb
adc
jle
nop
inc
std
adc
sbb
pop
outsb
repz
data16
ljmp
call
add
and
add
insb
adc
dec
jmp
repz
inc
andb
inc
jmp
sbb
outsw
jle
cmp
cltd
je
negb
jecxz
insb
and
test
call
sarb
xchg
jno
stc
andl
push
push
push
sub
or
aaa
clc
lock
cmc
popf
das
push
aaa
add
mov
and
sbb
shl
adc
cltd
insl
lds
call
mov
pop
cmpsl
sar
mov
lret
jmp
sarb
stc
inc
jmp
inc
imul
cli
test
adc
daa
nop
clc
cmp
pop
ljmp
sbb
mov
out
shr
xor
dec
mov
inc
les
and
bound
gs
xchg
mov
dec
sub
test
jmp
les
adc
ror
pop
pop
jae
stos
push
popa
and
and
filds
out
ljmp
loopne
or
fwait
inc
xor
xchg
push
mov
popf
xlat
mov
sub
add
testl
ficoml
dec
mov
sbb
inc
mov
adc
pushf
bound
jns
or
xchg
test
int3
out
pop
or
or
into
addr16
sbb
dec
inc
je
mov
in
fsts
cmpl
mov
pusha
push
popf
dec
fildll
add
jmp
int
jns
mov
sbb
outsl
test
push
lock
stos
jl
test
fs
cmp
pop
jnp
cltd
loopne
lret
push
jge
mov
iret
sub
adc
pop
cmp
push
inc
push
ja
jae
xlat
testl
mov
xor
mov
mov
cmpsl
jae
imul
ds
notl
rorb
mov
popa
in
leave
xlat
or
cs
jge
mov
inc
pop
jge
insl
in
sbb
and
aaa
imul
or
aam
add
sbb
dec
in
mov
push
ljmp
mov
jo
pop
mov
inc
mov
cmp
imul
cmpsb
push
ds
mov
add
cmp
fidivs
xor
les
mov
pop
ds
bnd
and
movsl
xor
push
mov
xchg
test
loopne
pop
inc
ret
adc
add
jno
js
dec
inc
pop
dec
pop
sbb
loop
loope
mov
sub
test
cmp
add
adc
cmp
gs
jl
daa
cs
xor
sub
adc
pop
not
sub
cmp
push
in
arpl
fdivl
rol
dec
push
popf
sahf
repz
test
fildll
jge
cmp
mov
pop
and
push
adc
cmp
push
in
idivl
mov
lret
pop
shll
es
pop
sbb
pusha
in
mov
adc
add
movsl
stc
cmc
hlt
sub
and
rcrb
lock
jne
lods
xchg
lods
push
mov
mov
pop
cli
push
test
cmp
loopne
or
mov
nop
gs
ljmp
mov
mov
add
jg
add
xchg
xchg
bound
xchg
sub
imul
in
mov
call
aad
mov
nop
xchg
jecxz
dec
fstp
int3
inc
adc
out
fsts
les
push
in
int
lea
xor
mov
inc
icebp
pop
mov
adc
mov
pushf
cld
sbb
jmp
push
cmpsl
pop
cmp
xchg
inc
pop
or
sbb
add
xchg
sub
ds
je
into
dec
jecxz
fsubr
test
aam
push
pop
cwtl
push
scas
int
dec
scas
pop
mov
adc
cli
notl
inc
rcr
sub
jmp
lock
mov
or
lock
movsb
das
xor
mov
inc
push
and
mov
xor
push
les
insl
lods
dec
daa
dec
fwait
cld
shlb
stos
mov
cld
pop
lret
outsb
fcmovnbe
mov
add
mov
popa
stos
jne
sbb
rclb
ret
mov
push
fcomp
jae
push
stc
ljmp
in
lods
inc
lock
ja
mov
xor
pop
xchg
xchg
jbe
push
sub
insl
setne
jp
ret
test
push
mov
xchg
dec
xchg
popf
mov
xchg
lea
rcrl
or
inc
pushf
stos
inc
mov
push
add
add
dec
mov
add
or
ret
xor
add
in
std
mov
sub
in
dec
ja
clc
sbb
sub
or
adc
fwait
aad
cmp
jne
add
out
or
incl
insb
in
sub
out
jmp
data16
inc
addr16
mov
jp
push
mov
mov
dec
mov
push
fnstcw
ds
in
sbb
scas
fisttps
mov
into
inc
ret
xchg
jo
dec
cwtl
fstl
imul
cmpsl
mov
fcmovu
sbb
jnp
dec
insb
inc
xor
inc
testl
out
adc
fiadds
ret
push
pop
jo
and
pop
sub
jae
or
dec
out
or
popa
bound
int3
popa
ficoml
cmpsl
pop
xchg
mov
or
sub
fadd
dec
les
shlb
push
mov
mov
jge
mov
sti
hlt
jns
xchg
arpl
pop
cmp
jmp
lock
sbb
sub
or
cmp
jle
ss
loope
roll
push
loop
scas
xor
arpl
mov
and
les
lahf
adc
call
ret
in
cmpsb
xlat
cmpsb
mov
enter
daa
cwtl
aam
cmp
enter
pop
jl
in
dec
shrl
sbbl
lahf
jo
push
push
xchg
or
stos
call
mov
pop
shlb
pop
mov
lahf
push
and
loope
shl
sub
lods
insl
cmp
dec
outsb
movsw
cmc
adc
push
pop
xor
sbb
sub
pop
add
std
outsl
repnz
adc
mov
les
sub
adc
lcall
stos
sti
xor
cmp
rcrb
shrb
mov
popf
mov
mov
mov
out
adc
std
fidivl
pop
lods
test
idiv
add
xchg
or
push
mov
sbb
sbb
fs
into
mov
fimuls
xor
xchg
cli
outsl
js
movsb
loop
out
stc
lods
addr16
xchg
adc
test
lods
jns
add
mul
int3
out
pop
cli
fdisi(8087
xor
pop
pop
cmp
xchg
popa
or
lcall
test
sub
gs
adc
add
rol
xchg
je
xchg
dec
fadd
sbb
rorl
xlat
jns
test
test
shlb
sti
lcall
aad
pop
xor
cmp
cmc
inc
and
or
mov
rol
fs
jno
push
jnp
lock
call
pushl
sbbl
and
ja
pop
fistpll
inc
mov
inc
xor
je
jb
mov
push
je
sti
jo
dec
mov
or
in
cwtl
adc
pop
mov
dec
out
mov
push
fldl
sub
aas
fistpl
push
mov
into
mov
cwtl
inc
lock
test
mov
cs
pop
rcll
out
insl
xchg
jecxz
dec
xchg
lahf
jo
xchg
mov
cmp
or
and
lret
fstl
mov
mov
sub
shl
outsb
ljmp
test
lods
aam
fimuls
push
fwait
imul
movsl
test
scas
push
xchg
xchg
test
in
popa
lods
arpl
lods
mov
in
es
mov
xchg
xor
imul
rorb
fidivrl
cltd
stc
mov
sbb
adc
sbb
aas
flds
ja
push
shrl
pusha
pop
mov
popa
stos
xor
and
push
adc
sbb
mov
imul
xor
fmul
or
fistl
push
ret
inc
mov
sti
sub
pop
lahf
addr16
mov
dec
mov
sbb
dec
sub
lods
jne
push
xor
out
cmp
xchg
inc
jns
scas
or
mov
lds
pop
jmp
js
jne
jl
test
push
mov
xchg
das
add
mov
femms
in
mov
pusha
xchg
int
test
xor
and
push
sub
sbb
fisubrs
mov
sbb
stos
iret
inc
and
fs
scas
nop
push
push
push
or
mov
fndisi(8087
and
jmp
sbb
pop
cmpsl
incb
xor
mov
or
fdivrl
inc
mov
and
xchg
in
outsb
sbb
push
pop
imul
or
xor
fs
mov
inc
test
repnz
sti
cmpsl
leave
sub
hlt
lock
arpl
pop
ret
or
jge
push
cmpsb
sbb
test
jmp
pop
and
pop
inc
das
int3
and
inc
pop
lock
xor
mov
in
and
popa
in
movsb
jae
in
cmp
pop
cmpsb
pop
orl
xchg
dec
pusha
daa
xchg
rcr
cmp
lods
xchg
jl
cmp
xchg
pop
lret
sbb
movsl
mov
ret
push
pusha
lahf
jae
push
pop
fisttpl
and
jp
jbe
repnz
loope
jb
cld
pop
cmpsl
pop
out
jno
dec
cmp
leave
hlt
cmp
pop
adc
inc
sub
xchg
cmp
dec
mov
adc
icebp
gs
and
in
sbb
mov
popa
push
adc
sub
fwait
sarb
shl
lcall
nop
faddl
jnp
sahf
cmp
rolb
mov
mov
icebp
mov
inc
lea
sti
and
ss
adc
mov
idivl
xchg
shll
push
sbb
pop
into
popf
aam
cmc
lea
xor
mov
popa
shl
fistl
fs
mov
outsb
xor
data16
je
lods
pusha
aad
mov
mov
out
insl
adc
into
clc
in
into
aaa
insb
cmp
pop
jb
sar
and
cmc
adc
int3
inc
loopne
xor
pop
imul
mov
outsl
ss
rorl
adc
push
fwait
add
inc
loope
push
orb
out
aam
mov
jbe
mov
popa
push
mov
dec
xor
cs
mov
mov
fwait
ja
inc
ss
fld
sub
outsl
jns
repz
adc
repz
hlt
call
jle
les
and
pushf
push
iret
popa
jmp
pop
sbb
inc
xor
adc
pop
fistpll
inc
jge
jb
loope
dec
push
jnp
jecxz
jl
testb
std
fstpl
push
lret
inc
rorb
sub
dec
pop
lds
xchg
sub
imul
mov
mov
ljmp
or
sbb
mov
dec
xchg
cmpsl
cmpsl
xchg
popa
adc
jecxz
jnp
scas
jb
lret
dec
sbb
mov
push
or
cmp
lahf
cmp
rol
push
push
sub
or
ret
test
ss
pop
jno
cmp
ljmp
ljmp
adc
xor
cli
rolb
fbstp
fmull
push
sub
add
mov
test
iret
mov
xchg
scas
xchg
js
pop
lock
mov
rolb
rol
repnz
stos
and
jge
xchg
sbb
aaa
and
decl
sbb
xor
sub
data16
xor
pop
lahf
mov
ds
loopne
cmpsl
or
pop
and
ja
hlt
adc
inc
out
adc
fwait
xor
dec
punpckhdq
jne
or
out
mov
inc
jns
ja
in
jl
xchg
xchg
and
lds
jo
sub
insl
dec
jp
mov
mov
or
jle
aad
in
arpl
filds
negb
xchg
roll
out
fistl
out
movsb
and
sbb
push
pop
xor
jae
test
sbb
stos
scas
repz
loope
push
dec
ret
adc
popa
lret
loope
pop
fidivrs
inc
jne
pop
jae
cmp
inc
jne
jae
fnstenv
in
inc
ds
xchg
xchg
cmp
jmp
test
adc
cmpsb
push
rcrb
mov
pop
push
sub
mov
fwait
arpl
out
inc
jbe
popf
idivl
mov
pop
aaa
test
adc
int3
sub
add
push
or
xchg
pop
pop
jns
push
test
sub
sbb
adc
sub
cmp
lds
mov
fst
lret
in
insl
push
pop
enter
daa
xchg
push
jno
aad
push
jno
mov
les
ret
jo
inc
movsl
xchg
nop
jmp
jmp
ds
test
inc
ds
inc
jo
pop
mov
fldt
js
mov
push
mov
xlat
sub
xor
cmp
les
ror
add
fs
lcall
outsb
cwtl
xor
fs
xchg
jae
sub
es
pop
popa
xchg
lcall
sbb
xor
fldt
sbb
hlt
sahf
fmull
test
dec
add
fdivrs
pop
lods
mov
and
mov
add
ss
out
sti
cmpsl
dec
fdivs
aaa
fdiv
ja
call
sarl
mov
sbb
or
cmp
cmc
push
dec
pushl
sarb
outsl
ss
push
loop
jbe
stc
sbb
fs
sub
pushw
mov
jmp
out
iret
outsb
cli
add
adc
movsl
xor
jmp
sbb
gs
jne
out
jmp
pop
push
jp
adc
lock
movlps
js
arpl
aaa
outsw
xlat
negl
sub
pop
xchg
int3
test
sti
clc
jp
movsl
adc
aad
and
nop
and
lret
inc
dec
jl
fyl2xp1
idivl
jp
jb
out
out
pop
mulb
sub
cli
push
std
xchg
stos
pop
shrb
ja
std
dec
jmp
or
pop
and
sbb
aas
loop
cld
jb
push
out
dec
ffreep
sahf
je
dec
jo
insl
mov
notb
faddl
xchg
hlt
mov
or
cmpl
xchg
sub
es
lock
mov
das
into
repnz
mov
inc
cltd
push
shll
cmp
lahf
xchg
popa
lds
mov
jne
outsb
mov
icebp
mov
add
lret
mov
cmp
mov
mov
outsb
aad
xchg
push
or
mov
out
mov
jmp
frstor
mov
clc
and
adcb
xor
popa
fiaddl
mov
test
xor
pop
inc
addr16
addr16
push
mov
sbbl
cltd
addr16
push
mov
addb
pop
pop
add
test
out
xchg
push
or
sbb
scas
stos
adc
lods
add
push
movsb
mov
xor
sub
mov
addl
xorb
fmuls
push
lea
mov
or
stos
mov
dec
repnz
cmp
cmp
out
movsl
lock
mov
jecxz
in
mov
repz
inc
mov
or
stc
addr16
xchg
cmc
jp
mov
mov
adcb
test
clc
jle
mov
in
pushf
jle
mov
and
sub
les
add
popf
or
xchg
mov
xchg
test
ja
shl
insb
subb
scas
push
adc
push
cltd
adc
adc
aaa
cmp
shl
rcrb
popf
inc
inc
addb
push
ss
or
shrb
xchg
fisubrl
xor
xchg
dec
and
and
in
mov
jbe
push
nop
sarb
mov
lods
loope
leave
sbb
jg
cmc
leave
mov
mov
or
pop
sar
sbb
jnp
aaa
addr16
repz
std
std
int3
testl
push
xor
je
shrl
mov
call
movsb
push
fsubr
outsb
cmpsb
pusha
cwtl
mov
push
lods
es
daa
xchg
push
sahf
cmp
or
idivl
lods
dec
jae
sub
xchg
adc
cwtl
mov
pop
lahf
int
test
wbinvd
test
or
out
incl
push
adcb
xor
jo
pop
inc
fwait
subb
push
loope
jg
sub
mov
cmp
outsb
popl
adc
cmpsl
mov
loope
js
ja
sub
add
add
je
xor
dec
push
sbb
jb
stc
fs
sub
ja
lcall
mov
frstor
in
jg
fldl
fisttps
cmp
cwtl
daa
enter
ja
sbb
movsb
ss
jecxz
mov
iret
mov
ss
lret
mov
shlb
xchg
mov
jb
sbb
xchg
into
arpl
jns
sbb
push
outsl
adc
mov
mov
out
mov
cli
mov
adc
je
pop
cli
xor
fwait
xor
cmp
lods
ja
scas
push
andl
cmp
mov
ret
adc
es
adc
jle
add
adc
lahf
in
cmp
loopne
ss
mov
aaa
pop
mov
cmpsl
xchg
aad
sbb
nop
incb
dec
pop
and
inc
pop
sbb
fnstenv
imul
fcmovne
repz
aad
repz
adc
jl
es
and
adc
notb
pushf
test
cmpsl
jmp
jnp
pop
enter
and
lret
lcall
push
cmp
je
js
jecxz
xor
rcll
xchg
std
sub
cwtl
inc
sub
int3
mov
and
frstpm(287
push
jle
jl
xorl
lods
sub
mov
pop
xor
and
ds
sarl
clc
and
xchg
insl
dec
or
dec
xchg
insl
cmpsl
xchg
imul
cmp
icebp
xchg
adc
sub
mov
sbb
add
fst
mov
imul
ret
repnz
push
in
push
fisttpll
cs
pusha
fisttpl
data16
addr16
lret
lods
repnz
jb
xor
gs
sarb
push
xchg
xchg
sub
adc
mov
cltd
sahf
and
push
mov
xchg
in
push
dec
sub
cwtl
xor
nop
out
sahf
shll
pop
mov
stos
add
daa
add
insl
cmp
int3
pop
or
mov
mov
cmc
fsubrs
ja
decl
dec
xchg
and
inc
sbb
fwait
or
xor
xchg
movsl
push
dec
aad
push
jne
movsb
xorl
sub
jns
hlt
lods
in
sbb
dec
out
lahf
inc
sub
addr16
addr16
cmp
jp
xchg
pusha
mov
mov
mov
out
sub
dec
cmp
in
cmp
pusha
pop
xchg
les
push
xchg
ja
jmp
les
orl
push
popf
xor
mov
mov
andb
add
pop
jnp
adc
pop
push
loopne
cmc
adc
iret
or
pusha
ret
repz
dec
bound
inc
mov
jae
js
inc
jnp
jbe
cmpsl
xchg
push
cmp
aad
fadd
imul
pmaxub
mov
xchg
clc
jbe
push
inc
mov
leave
xchg
aam
hlt
movsl
jmp
arpl
add
cmc
sbb
jge
loop
sbb
mov
or
adc
int3
loop
pop
jge
or
outsb
test
push
lods
jo
cli
push
push
pop
cmp
and
aad
cmpsb
jecxz
jb
cmp
cld
enter
daa
xchg
loopne
cmp
sbb
jno
clc
mov
fwait
sub
dec
ds
mov
pop
outsb
lahf
in
loopne
push
shll
test
xlat
jecxz
inc
mov
jno
pop
xchg
mov
pop
xchg
push
daa
sbb
sub
or
cmp
loopne
outsb
repnz
adc
cmpb
inc
mov
orb
sub
into
stc
xor
and
int
cmp
sub
popl
cld
adc
push
mov
mov
clc
testl
push
test
mov
jne
dec
mov
fcomps
and
and
ss
cmp
lods
cld
mov
lret
repz
mov
sub
into
inc
sub
cmc
loop
test
xchg
jno
xchg
aad
stc
mov
fs
adc
sub
pop
xor
jecxz
inc
out
pop
cli
mov
popf
inc
cmp
mov
or
les
pop
lods
jae
rorl
pop
push
sahf
test
call
stos
jle
sub
jo
sarb
dec
sbb
lods
adc
xlat
jne
jecxz
jne
enter
dec
in
mov
push
xchg
cs
aad
ja
nop
inc
outsl
call
rol
nop
mov
repz
cld
jns
lea
and
or
loopne
sti
add
ss
adc
adc
jmp
scas
and
imul
inc
stos
insb
les
or
aas
and
int3
dec
int
divl
cwtl
jecxz
lock
rolb
fstpl
add
imul
dec
fdiv
mov
mov
les
jl
inc
das
mov
mov
mov
sti
ror
arpl
clc
shrb
aaa
mov
xor
cmpsl
xchg
mov
mov
push
movsl
icebp
lret
cltd
xor
and
insb
fsubrl
cld
sub
sub
mov
push
cmpsl
cmp
xor
fwait
lahf
fsts
mov
nop
popa
or
sbb
cmp
and
jle
cmc
pop
mov
bound
add
testl
in
cltd
dec
xchg
lcall
cmp
negb
inc
mov
ror
pusha
imul
stos
out
ret
hlt
lcall
mov
sbb
out
or
pop
inc
inc
or
or
mov
pop
mov
mov
mov
inc
ja
lret
cltd
dec
mov
push
or
mov
rcr
dec
mov
xchg
mov
adc
arpl
fsubrp
cmpsl
jns
test
test
outsl
loop
mov
les
fidivrs
sub
mov
les
mov
xor
fcompl
pusha
repz
jecxz
xchg
mov
clc
or
sbb
inc
push
cmp
popf
pop
push
lds
adc
icebp
shll
aaa
adc
jnp
inc
sub
sbb
stos
push
daa
lret
int3
adc
or
lock
clc
orl
lret
inc
xchg
mov
jbe
jle
pop
or
enter
mov
xchg
inc
and
test
repnz
jmp
add
scas
in
mov
push
cwtl
mov
or
cmp
lock
mov
dec
and
or
cmpsb
fldcw
pop
push
aaa
in
loop
movsl
mov
int3
int
pop
pop
lods
jmp
push
push
or
xor
sub
loop
jnp
insl
and
mov
cmp
add
lahf
mov
push
jbe
mov
data16
in
and
push
enter
daa
xchg
in
test
outsb
jno
pop
mov
sarl
cmp
movsl
cmpsb
repnz
and
mov
inc
test
mov
cltd
es
or
fwait
pop
orl
cmp
adc
lds
push
ljmp
xchg
xor
cmp
sbb
adc
pop
push
and
popf
push
mov
jno
in
add
jl
xor
mov
push
int
repz
xchg
mov
push
mull
fdivl
lea
sahf
vcvtsd2ss
adc
fsts
mov
lea
xchg
and
push
ret
ss
mov
divl
sbb
adc
rcrb
in
into
sub
cmc
test
icebp
cld
outsl
rorl
loop
push
cmpsb
stc
aas
andl
cmpsw
loop
lods
cld
aam
mov
ret
jb
ret
jne
xor
pop
xchg
cmp
mov
incb
inc
inc
loopne
lea
pop
jae
stos
adc
aam
adc
cmc
je
popa
mulb
sbb
call
or
aam
jns
shr
mov
sti
add
pop
or
dec
cmp
dec
pop
loope
inc
sub
fstps
lea
call
adc
jp
xchg
pop
jmp
out
pop
pushf
and
mov
cmc
lds
lods
jae
mov
fidivs
out
dec
inc
adc
jecxz
hlt
vmulss
idiv
jns
jbe
mov
int
les
adc
test
fildl
movsb
mov
stos
mov
inc
adc
xlat
adc
das
imul
mov
in
cmc
rcrl
pop
sub
inc
sub
cmpsl
xchg
test
mov
aas
xlat
add
pop
mov
lret
or
mov
push
cmc
and
pop
xchg
scas
pop
sbb
imul
mov
adc
in
pop
push
push
data16
test
ljmp
cltd
lods
enter
xchg
std
arpl
xchg
in
dec
inc
fisttpl
iret
cltd
sbb
cltd
or
cld
test
nop
mov
fidivrs
and
dec
sti
inc
and
mov
fsubrl
shll
js
pop
or
push
xchg
xor
add
mov
data16
xor
in
or
push
xor
cmc
and
dec
testl
inc
aad
ja
sbb
jnp
and
jg
or
mov
and
test
ret
mov
push
sub
bound
mov
add
in
push
mov
out
mov
sub
pop
stos
pop
addr16
enter
jmp
push
or
mov
fdiv
jle
jno
in
lahf
pusha
mov
filds
rclb
cwtl
xchg
subl
repz
and
mov
push
push
sub
add
inc
int3
jnp
cmp
out
push
outsb
mov
add
rolb
pop
mov
dec
mov
ret
xor
imul
inc
sub
mov
inc
or
jo
push
jg
imul
hlt
lds
ror
inc
mov
cmpsb
roll
cmp
jbe
push
jge
mov
sbb
adc
or
mov
negl
cltd
popa
push
xor
stos
xor
test
scas
pop
or
and
das
cmp
subl
lds
cmpsb
jmp
add
daa
xchg
jle
cmp
fisubrs
icebp
dec
lds
repz
cld
lods
pop
movsl
lods
xor
and
pop
lahf
sub
imul
lods
lret
es
pop
stos
fistps
je
hlt
pop
add
lea
call
sub
xor
outsb
mov
or
cmp
and
mov
nopl
jg
xor
xchg
jmp
int
xchg
fsubrl
add
lcall
fs
mov
push
sahf
push
mov
xorb
daa
jg
mov
mov
out
mov
and
mov
inc
cmp
inc
int3
push
ss
add
cmp
and
push
jae
dec
hlt
rcll
xchg
mov
mov
and
into
or
add
jo
mov
cmp
sbb
mov
mov
sub
fs
pushf
std
data16
lret
lods
jecxz
jmp
out
jg
cli
int
xor
cmp
cmp
movsb
xlat
adc
iret
push
insl
loopne
xchg
int3
pop
xchg
sarb
imul
sbb
fcompl
sbb
and
sbb
repz
dec
sub
fbld
js
pop
sti
mov
mov
aad
pop
cmp
jbe
movb
cmp
aad
pop
les
push
push
movb
orl
movsb
mov
stc
test
pushf
iret
push
adc
pushf
test
arpl
pop
mov
jl
mov
push
mov
pop
in
jb
sub
je
call
push
negb
cs
jb
cmp
xchg
stos
pop
sbbl
cmp
push
mov
aad
lock
das
dec
out
adc
inc
rorb
jo
xor
es
cmp
insl
std
cmp
dec
js
mov
mov
push
outsb
and
xchg
mov
lea
fbld
cmp
or
loop
arpl
jb
xchg
aam
lret
sbb
jae
pop
push
sub
andb
and
cmpsl
ljmp
shrb
pmaxsw
fnstcw
es
ucomiss
out
add
dec
sbb
fildl
and
dec
aad
test
and
sub
sarl
mov
stos
int
push
push
cmp
add
lds
insl
xor
das
stc
mov
lea
mov
add
shr
xchg
dec
outsb
mov
pop
or
mov
inc
dec
jle
divb
jns
mov
mov
out
and
sbb
jns
sub
repnz
and
push
out
push
sub
push
sub
icebp
dec
jge
out
test
insb
sub
mov
xor
shl
shrb
pusha
sub
aad
and
sub
and
dec
xorl
push
mov
cmpsb
push
mov
xchg
mov
mov
insb
cs
jnp
notl
scas
loop
pop
push
mov
sub
std
pushf
daa
iret
and
hlt
in
icebp
mov
lods
dec
pop
jae
aad
inc
test
stos
push
mov
mov
out
call
cmpsb
imul
and
shl
fnstsw
stc
push
fwait
leave
testb
arpl
fidivrl
mov
jb
sbb
adc
aaa
arpl
cld
or
pop
xchg
int3
mov
or
push
pop
mulb
xor
loopne
cwtl
scas
cmp
and
mov
cmp
testl
insb
xor
enter
daa
xchg
xchg
adc
aam
les
xchg
sbb
cmp
sub
movsl
mov
or
lock
dec
jb
push
dec
out
test
cmp
cmc
inc
cmp
fs
mov
jmp
scas
roll
push
lea
inc
mov
sub
add
outsb
sbb
mov
adc
xor
add
or
fisttps
add
pmullw
and
adc
sub
xor
jns
push
lcall
mov
mov
cmp
lds
sahf
or
jmp
std
arpl
dec
jl
jg
xchg
daa
mov
or
cmp
ss
imull
cmp
fdivrp
cmpsb
divl
lret
out
ffree
sub
xchg
mov
fcompl
ss
ljmp
mov
xor
aam
loop
ljmp
mov
in
lods
push
sub
aam
stc
out
jne
cli
add
fadds
cmp
mov
out
inc
fisubl
loopne
mov
pop
mov
adc
imul
cmp
sbb
pop
data16
xlat
xor
cltd
sub
jl
mov
jecxz
std
sti
arpl
cs
add
out
nop
push
decb
lods
mov
jo
mov
and
stc
xor
cmp
out
jne
jnp
iret
js
xchg
pop
dec
fstpt
adc
leave
or
pop
push
test
repnz
idivb
std
add
jb
mov
jg
sub
stos
jecxz
enter
xchg
add
out
cwtl
sub
hlt
popa
mov
jae
cltd
sahf
dec
test
jge
shlb
sub
mov
mov
sti
sbb
sarl
mov
insl
in
or
inc
xchg
cmpsl
nop
scas
cmpsl
mov
in
sub
cld
mov
mov
mov
cmp
and
pop
inc
test
mov
jecxz
imul
popf
push
lock
xchg
in
hlt
clc
dec
fs
xchg
bound
or
popa
dec
inc
cld
lods
sahf
fwait
inc
mov
dec
and
xchg
lret
push
add
jge
jmp
cltd
jp
mov
mov
sbb
xchg
test
dec
leave
dec
mov
mov
lcall
pop
cltd
subb
cmp
add
fsts
inc
and
insb
or
insl
test
mov
rcr
cmpb
cmpsb
sbb
inc
loopne
popa
pop
cli
inc
js
mov
popl
dec
and
orl
out
add
leave
bound
lahf
push
in
dec
ficoml
out
xchg
je
shrl
push
aas
xor
add
sbb
cmp
pop
or
mov
ja
in
xchg
jmp
filds
addr16
dec
jmp
jmp
lock
push
inc
push
cmp
sbb
shrb
mov
insb
cltd
shll
mov
loope
push
cld
rorb
iret
test
add
fildll
mov
inc
jae
daa
cmovbe
loope
push
cmp
call
stos
imulb
imul
out
lds
and
mov
dec
mov
leave
insl
pop
pop
hlt
sarl
inc
or
jge
adc
stc
aaa
and
arpl
jle
imul
mov
sub
cli
pop
mov
insl
stos
or
dec
stos
scas
sbb
cmp
movsb
inc
xchg
aaa
push
arpl
mov
in
xlat
mov
enter
daa
nop
sub
cmp
push
arpl
push
ret
mov
dec
sahf
and
ds
sub
mov
mov
test
test
add
into
inc
lret
push
mov
nop
js
fwait
imul
inc
insl
cmp
pop
sbb
aam
fistpll
movl
sub
out
push
pop
mov
jnp
sbb
push
cmp
jg
xor
push
push
sub
lcall
roll
sahf
mov
cld
dec
inc
fdivl
ljmp
aad
test
push
jg
js
mov
int3
out
jmp
cmpsb
mov
bound
and
ss
mov
fcomps
arpl
rol
out
mov
stos
sbb
mov
cmc
hlt
es
sbb
and
loop
add
stc
fs
pop
fs
mov
adc
aaa
sub
mov
add
out
out
cmpsb
cli
xor
xor
shld
fcmovu
insb
ljmp
loopne
jecxz
pop
rclb
rcll
push
insb
imul
inc
or
sbb
cltd
push
mov
sub
lods
mov
dec
fildl
idivl
test
nop
inc
jl
dec
xor
in
inc
mov
inc
sahf
les
xchg
or
shr
jo
notl
aam
bnd
pushf
lcall
jmp
daa
negl
cmp
inc
or
sub
dec
and
and
je
sub
fdecstp
and
cmp
cwtl
call
scas
lds
dec
shll
test
mov
shlb
push
mov
and
lock
test
gs
xchg
rorl
cmp
ret
insl
lret
lret
outsb
xchg
mov
les
push
lret
push
or
shll
inc
mov
js
data16
scas
aam
fs
add
cwtl
fisttpll
aas
mov
xchg
xchg
mov
add
popa
fs
lods
or
pop
mov
scas
pop
and
fsubl
paddsb
imul
mov
pop
test
mov
in
dec
xor
fiaddl
sysret
push
shll
xchg
cmp
dec
stos
stos
jb
subb
add
dec
scas
jmp
mov
imul
or
popf
cmp
imul
mov
jl
mov
ja
jo
push
and
push
stos
in
jl
jno
jl
cmpsb
dec
inc
pop
in
loop
repz
lahf
adc
filds
sbb
in
in
outsb
pop
xchg
mov
xor
push
or
inc
addr16
cmp
mov
sbb
loope
xchg
testb
call
aaa
pusha
pop
arpl
fistps
xchg
xchg
sbb
dec
leave
xchg
mov
decb
popf
cmc
leave
mov
adc
cli
stos
cli
push
lcall
pop
mov
push
mov
test
pusha
push
inc
lock
adc
xchg
je
inc
xor
pop
pop
fdivs
jae
mov
mov
push
mov
or
pop
mov
sbb
lock
xchg
fcomp
dec
lock
mov
repz
lahf
jne
leave
in
push
hlt
sbb
dec
arpl
push
jbe
inc
mov
sbb
outsl
aaa
loope
mov
add
pop
push
scas
xchg
xor
xchg
shlb
imul
andb
xorl
lret
mov
push
mov
into
cmpsb
jb
cmp
mov
cmpb
les
cmp
mov
mov
cmp
dec
or
fcmovnu
movsl
ret
and
sbb
jp
repnz
fcmovne
dec
push
into
mov
mov
adc
push
pop
pop
std
mov
pop
shr
push
add
loope
cmpsb
subb
sbb
jbe
xchg
outsb
loope
push
ror
jl
sbb
mov
dec
mov
add
jge
xor
push
sub
sub
jae
ja
add
push
in
dec
jge
mov
ret
or
push
addb
clc
mov
lahf
mov
mov
insl
mov
jae
xor
mov
add
push
mov
mov
add
rcrl
mov
sbb
cmc
lds
shrb
jo
loop
push
je
sbb
fs
jl
adc
ds
lods
cwtl
adc
mov
adc
out
in
enter
mov
cmp
cmp
dec
or
decb
hlt
lahf
loopne
sub
pop
out
mov
imul
xchg
add
fisttpl
aam
mov
sub
ret
dec
dec
sti
shl
cs
jno
aad
and
dec
xchg
mov
fnstcw
pop
loope
repz
popa
movsb
or
lea
mov
jno
fadd
jbe
sahf
pop
mov
dec
adc
imul
jecxz
inc
dec
xchg
adc
sub
aas
cmp
jb
sub
je
dec
dec
jecxz
lods
stos
mulb
xor
adc
ret
mov
push
fwait
and
fdivl
add
mov
push
insb
mov
loop
lock
out
mov
imul
je
pop
popf
pusha
es
jno
mov
cld
dec
imul
mov
fwait
or
pop
xor
lret
les
mov
mov
xchg
adc
sub
rcl
das
sub
push
jbe
jmp
clc
ret
xchg
loopne
sbb
lock
dec
popa
jnp
jae
je
arpl
adc
push
mov
pop
cmovnp
add
stc
jns
call
cmp
mov
push
xchg
rorl
inc
test
in
xchg
daa
daa
sarl
bound
push
stos
lcall
add
andnps
cmc
lret
push
ss
xor
rolb
mov
push
nop
adc
fbld
and
add
inc
scas
adc
sub
fs
stos
js
dec
daa
sub
mov
xor
out
mov
imul
test
pop
xchg
or
dec
and
or
dec
addr16
std
mov
xchg
cmp
mov
sbb
pop
dec
in
sbb
pusha
cli
xor
fistpll
nop
xchg
lock
xchg
aaa
push
pop
or
mov
push
inc
ret
stos
insl
lods
mov
popa
dec
or
mov
scas
or
push
mov
adc
test
pop
xchg
jne
inc
int
js
call
jo
adc
push
ss
mov
sbb
mov
rcr
adc
lds
mov
mov
repnz
jle
pop
cmc
sub
addr16
xorb
movsb
jge
push
clc
sbb
push
sub
mov
add
add
pop
pop
xchg
cli
out
sar
xor
icebp
insb
scas
scas
ds
and
xor
pop
movsb
push
rol
push
add
lret
cmpsb
cmc
cmpsl
ljmp
and
cmp
fnsave
pop
jl,pn
jb
dec
jl
pop
mov
movsl
leave
adc
lahf
cmpsb
daa
pushf
push
lds
inc
test
cltd
mov
inc
call
in
sbb
and
js
in
or
add
xchg
loope
push
cmp
cmp
pop
jmp
shlb
test
test
and
iret
in
xor
test
push
lods
push
int
out
loope
out
xchg
sti
pop
idivb
lcall
repnz
popf
dec
sahf
hlt
mov
pop
sbbb
mov
movsl
mov
mov
int
and
test
cvtps2pi
imull
jg
rclb
shl
push
mov
out
sbb
dec
ror
mov
cmc
mov
daa
outsl
les
push
rorl
stc
sarb
or
adc
pop
shrb
lds
jbe
insl
outsl
adc
cltd
mov
call
or
pushf
lcall
or
push
imul
fidivrl
imul
push
add
fwait
xchg
call
push
stc
cmp
lock
xlat
out
adcb
daa
mov
in
cs
and
or
jo
push
cs
fidivl
sti
jmp
dec
bnd
inc
loope
mov
mov
pinsrw
pop
repz
js
push
adc
in
lea
pop
push
rclb
push
hlt
shr
cli
sbbb
inc
inc
aam
loop
inc
add
fidivrl
jb
aas
lcall
ret
in
jno
test
adc
cwtl
pop
or
mov
pop
lahf
or
dec
pop
mov
into
mov
add
lock
cmpl
mov
daa
mov
pushf
cmc
test
test
cs
sub
dec
fs
frstor
push
int3
in
jb
cmpsb
cld
xor
lret
xor
std
mov
dec
jge
mov
mov
shrb
lea
dec
xchg
cmp
ret
scas
sbbb
or
std
pop
mov
arpl
mov
push
sbb
jne
mov
lahf
push
xchg
push
xchg
fildll
stos
mov
or
pop
xlat
inc
test
jbe
xchg
ja
dec
cli
clc
test
mov
sbb
aam
aad
push
stos
mov
add
sub
jmp
cld
in
xchg
nop
jns
inc
pop
fldenv
cltd
sbb
mov
in
mov
ja
cmp
stos
inc
cmp
or
fimull
dec
or
xchg
jne
or
mov
out
popf
das
outsl
bound
pushf
jns
pop
add
xchg
pop
jne
out
rorb
or
sti
addr16
inc
fnstsw
pop
add
ffree
jle
out
pop
aad
inc
cmpsl
cmpsb
in
je
pusha
xchg
adc
fistps
and
xchg
push
inc
faddl
lret
popf
inc
xchg
mov
push
fisttpl
stos
loopne
sub
js
pop
insb
fcmovu
fdivrs
test
push
rcrl
adc
out
mov
inc
insb
pop
int
cld
inc
fcomps
testl
xchg
push
mov
mov
rorl
sbb
pop
mov
fimuls
and
lds
inc
pushf
sahf
leave
sarb
repz
sbb
sbb
jge
push
sbb
lods
or
ret
add
push
int3
dec
xchg
or
jl
push
mov
jp
jo
sbb
scas
mov
mov
cmp
movsb
loope
mov
cmpsb
js
mov
enter
daa
lea
sbb
jno
xchg
add
dec
jmp
add
stos
adc
movsl
rolb
and
lahf
lds
call
std
stc
test
fs
mov
lods
es
lcall
js
jb
pop
aas
aad
push
inc
pop
loope
sub
cmp
cmpsb
subb
fcoml
jg
fimuls
shrd
sbb
jne
xor
mov
int
add
sub
or
jne
push
lcall
lock
cmp
sahf
xchg
ja
test
push
or
icebp
cmp
mov
shll
sbb
cmp
cmp
lret
imull
dec
out
lret
add
sub
bound
bnd
into
jnp
and
push
setne
add
add
sbb
loop
mov
stc
mov
mov
test
xlat
lods
data16
mov
mov
out
jne
cli
int3
enter
jbe
cmp
push
lahf
or
mov
push
outsl
ja
repnz
in
loopne
in
jp
sub
ficompl
and
mov
jge
mov
dec
in
xlat
adc
adc
sub
lret
mov
sti
pop
je
and
and
push
ja
inc
hlt
dec
fcompp
call
subl
add
adc
push
call
je
cmp
adc
pushf
add
inc
jmp
mov
loopne
pop
inc
pop
pop
inc
pop
repnz
aas
jns
fdivl
xchg
je
mov
mov
adc
arpl
shll
push
sahf
push
orl
push
fistpl
mov
and
cmp
movsl
and
push
xchg
daa
cmp
cmp
insl
adcb
pop
enter
xor
mov
dec
jl
cld
pop
insb
ror
cmp
mov
push
popa
pop
mov
aad
jecxz
add
sub
stos
aam
rcrl
cld
xchg
push
fldl
sub
pop
ljmp
jle
dec
shl
mov
fadd
scas
xchg
out
lock
insl
cmp
or
dec
add
fcomps
test
xchg
xchg
movsb
dec
gs
test
hlt
or
sub
mov
stos
js
ss
imul
xchg
incl
shlb
fs
push
or
xchg
xor
cmp
cwtl
jp
mov
adc
mov
test
dec
ja
int
dec
sub
fsubrl
fwait
or
mov
jne
stos
popf
mov
fwait
call
mov
rcrl
cli
lret
cmp
ds
cld
addr16
or
jp
fiadds
lahf
fs
mov
pop
stc
jle
hlt
shl
cmc
xor
xor
mov
xchg
xchg
sahf
and
xchg
sbb
pop
addl
addr16
in
test
addr16
mov
and
fisttpll
jnp
adc
sarl
push
sbb
nop
iret
add
ret
mov
pushf
mov
jae
push
mov
xchg
fldcw
fistpll
push
xor
in
je
pop
xchg
mov
aad
imul
xor
rol
sahf
outsb
and
imul
repnz
std
clc
leave
dec
and
std
dec
inc
arpl
jbe
ss
aaa
mov
ja
sub
push
mov
or
and
int3
cmp
mov
ret
xchg
mov
jo
fstpl
scas
xchg
lock
and
cmp
cmp
add
push
lahf
mov
cmpsb
sti
in
in
jae
and
pop
pop
sub
mov
xchg
jno
out
xor
or
mov
ds
popf
ljmp
adc
lahf
in
xchg
push
imul
push
das
lcall
pop
or
pop
xchg
push
mov
mov
jle
outsb
push
repz
mov
jp
addb
outsb
or
fwait
rcrb
nop
cmp
adc
repnz
dec
add
outsl
test
mov
adc
xor
mov
cwtl
cmc
sub
in
dec
pop
hlt
insb
or
add
repnz
push
pop
sub
inc
sahf
cmp
test
push
jg
cs
mov
imul
mov
add
mov
jle
cmp
test
shl
in
repnz
lret
cmp
mov
jae
into
pop
not
cmc
sbb
mov
pop
rcll
in
ja
loop
jb
stc
inc
mov
push
adc
inc
mov
lods
dec
pop
xrelease
dec
cli
jmp
cs
lods
ljmp
ss
stc
adc
xchg
pop
dec
iret
test
imul
nop
add
inc
xchg
outsb
lods
push
sbb
test
add
insl
mov
sub
mov
mov
cs
aad
jno
nop
mov
rorl
jae
inc
pop
mov
xor
call
and
adc
push
call
repz
mov
outsb
pushf
stos
fistps
lret
fisubs
inc
loop
pop
inc
jns
fs
sbb
lcall
xor
je
cmpsb
fsub
add
push
std
or
mov
std
shrl
push
popf
andl
scas
inc
mov
cmpsl
mov
jae
lock
push
sbb
test
movsb
mov
mov
shll
aam
roll
mov
mov
sahf
cmp
cmpsl
mov
movsl
icebp
and
pop
cld
mov
lret
adc
dec
and
inc
fldenv
rcl
pushf
out
sub
jnp
adc
xor
int
mov
mov
imul
popf
sbb
ljmp
mov
mov
out
pop
into
mov
cmp
addr16
sub
test
incl
sub
push
cltd
repz
test
sub
mov
pop
mov
dec
int3
in
test
fimull
xor
xchg
orl
pop
mov
xchg
stos
addr16
push
or
clc
add
pusha
icebp
jne
fisttps
xor
xor
xor
push
mov
pop
test
mov
arpl
ja
mov
out
inc
imul
or
sub
dec
rorb
jne
lods
insl
mov
insb
mov
pop
out
bound
mov
in
xor
cli
stos
push
out
cmp
sarl
cmp
addr16
sahf
jp
adc
mov
fsubl
mov
push
or
xor
adc
adc
in
xchg
imul
xchg
out
adcl
mov
xchg
out
mov
or
hlt
int
cmpsb
fdiv
insb
mov
loop
es
pop
push
daa
adc
sub
iret
pop
jae
ret
sbb
and
adc
mov
or
push
mov
cmp
daa
lods
lds
add
sahf
imul
ss
xchg
sarl
jmp
mov
hlt
dec
xchg
daa
arpl
ret
and
sbb
int
aaa
fstpl
and
jno
push
int3
and
int
push
imul
scas
scas
jae
mov
cmp
std
mov
add
cwtl
in
pop
stc
and
daa
mov
fwait
cmp
sub
or
es
ret
out
dec
leave
test
movsl
and
add
ds
cmp
cli
mov
inc
xchg
jge
and
pop
mov
cmp
mov
push
or
sub
dec
xchg
cmp
call
fcoms
xor
jae
xorb
push
add
mov
fldl
aaa
popa
mov
sub
je
jae
mov
push
scas
mov
push
sub
and
daa
scas
fiadds
das
es
mov
lock
loopne,pt
mov
loop
and
sub
fadds
inc
imull
popa
shll
int3
sbb
mov
inc
fwait
sbb
loope
push
xor
xlat
popa
loop
aad
test
add
and
mov
lods
xor
push
mov
or
lods
xor
gs
cmp
and
adc
cltd
icebp
loope
add
dec
loopne
add
pop
imul
imul
testl
xor
cwtl
cmp
lods
movsb
xlat
lods
scas
sub
outsl
push
in
gs
sti
jge
lds
out
adcb
mov
jge
sbb
fsts
add
jne
repz
stc
pop
mov
shr
pop
push
loopne
and
jnp
push
xchg
jmp
divb
adc
inc
imul
xor
adc
push
push
je
push
inc
jecxz
movsl
jecxz
jno
sbb
mov
pop
cwtl
bound
mov
mov
pop
dec
sbb
fstpt
and
mov
aas
lock
out
das
arpl
mov
inc
jp
and
ret
xchg
push
es
jecxz
insl
dec
int
dec
push
or
mov
div
idivl
cld
mov
xor
adc
mov
bound
mov
adc
leave
shlb
inc
sbb
fbld
cmp
push
jne
into
mov
clc
scas
mov
ljmp
lahf
lods
and
or
or
and
add
xchg
les
test
and
mov
xor
mov
test
push
inc
xchg
mov
rcr
inc
add
pop
stos
push
xorl
jmp
inc
add
pop
jle
jbe
or
es
lock
mov
bound
mov
push
sti
pop
ja
sub
dec
adc
stc
inc
add
or
negl
dec
mov
in
lds
mov
push
inc
out
cmp
bound
adc
rcl
push
in
repnz
add
cmp
xor
mov
ljmp
mov
js
mov
cmp
mov
push
in
fsub
pusha
data16
les
jmp
mov
add
adc
daa
mov
dec
mov
stos
cmp
popa
and
pop
push
jnp
jp
scas
xchg
jg
push
cmpsb
push
loopne
mov
bound
jb
push
inc
stc
xchg
inc
cltd
dec
popa
or
sbb
jns
xor
jge
fimull
xchg
push
add
cmp
imul
lret
sub
shlb
lods
repnz
sbb
aaa
fcmovne
hlt
xchg
cs
arpl
les
sbb
sbb
aaa
pushf
sub
xor
jmp
or
mov
push
fwait
cmp
dec
scas
in
xor
pop
sahf
insl
scas
push
mov
and
adc
cmp
cmp
cmpsb
add
cld
in
inc
sbb
daa
mov
add
adc
jl
fcmovne
dec
cmp
push
ds
pop
movsl
in
hlt
and
cld
or
test
inc
and
jecxz
pop
pop
loop
cmpsl
js
jge
pop
cld
mov
imulb
loope
jns
sub
in
or
loope
xchg
outsb
rorb
rclb
jne
div
and
pusha
ja
add
pop
push
push
cmp
inc
int
mov
pop
repnz
outsb
inc
push
push
in
ret
and
ficomps
scas
sbb
jg
and
mov
out
mov
push
mov
xchg
xor
ss
push
cmp
sti
xchg
lret
sbb
mov
int
sbb
insl
into
and
sub
test
push
xor
xchg
outsl
stos
cmp
push
loope
stc
scas
xchg
fsubl
dec
adc
pcmpgtd
lock
sbb
mov
cli
gs
xor
jb
or
mov
and
xor
mov
es
mov
add
mov
dec
mov
scas
xlat
jmp
sub
repz
pop
mov
rcr
sub
sub
iret
cs
mov
js
addr16
incb
xor
mov
insb
repz
into
sbb
fdivs
xchg
pop
xor
addr16
inc
enter
cs
rcrb
leave
jg
inc
lock
inc
scas
aaa
mov
jb
xchg
movsb
dec
jae
or
cmp
dec
jecxz
or
cmp
sub
cwtl
dec
cld
sbb
mov
sar
adc
jne
fucomi
dec
xchg
mov
jae
lock
add
inc
movsl
movsl
mov
cld
insl
xchg
and
add
in
mov
pop
bound
loopne
dec
push
cmp
xchg
into
xor
cld
fidivs
lret
out
dec
test
imul
pop
xor
sarb
or
sub
call
stos
adc
inc
clc
fcomp
cmc
fincstp
clc
jmp
lahf
imul
out
push
scas
lods
mov
jge
mov
mov
ret
es
add
test
outsl
push
ss
and
lcall
xchg
push
ja
inc
push
jmp
xor
iret
stos
inc
push
stc
push
push
popa
out
add
xchg
mov
mov
or
jg
insb
leave
push
mov
movsl
shll
and
xchg
cmp
ja
sbb
dec
push
dec
xor
jno
or
cltd
scas
fwait
xchg
ss
xchg
jp
jne
fists
out
sbb
lods
jns
hlt
dec
in
or
xchg
cwtl
repnz
jbe
sub
das
sti
shlb
jns
jp
xchg
mov
mov
jle,pt
xchg
test
pusha
add
fistps
add
xchg
cmova
jmp
jge
xor
and
popf
ffreep
jnp
sbb
push
mov
lods
std
or
aam
fldt
push
jnp
push
repnz
cli
outsl
adcb
leave
adc
dec
out
sbb
aam
pop
test
sub
or
push
pushf
das
xchg
or
xchg
jecxz
inc
mov
lcall
mov
pop
imul
xchg
ficomps
adc
lds
mov
popf
mov
xchg
pop
inc
leave
scas
jl,pn
ficomps
jbe
cmp
jge
js
sbb
ds
or
les
int3
sti
cli
lds
sub
xorb
pushf
push
scas
xor
jmp
mov
in
movsb
or
outsb
cmpsb
test
inc
in
sub
out
dec
repnz
daa
mov
sarb
pop
push
jno
fstpl
jl
pop
dec
cmpsl
insl
or
aaa
hlt
cmp
and
mov
aam
in
ja
movsl
push
cmp
nop
push
popf
cmpsb
sbb
pop
or
xchg
pop
cmp
loope
imul
push
sub
pop
xor
outsb
xor
adc
jmp
mov
pop
jno
sbb
push
iret
xor
cmp
cmp
sub
ss
jno
leave
lcall
jno
loope
fisubrs
cmp
push
testb
sbb
shll
sub
adc
out
lret
fldcw
jbe
dec
fdivs
or
lret
mov
mov
pop
movsl
sbb
mov
push
xor
imul
data16
add
adc
lds
lods
mov
js
cwtl
gs
nop
in
cmp
xchg
push
or
cmp
filds
gs
mov
jae
test
gs
imul
addl
in
xchg
mov
dec
sbb
ss
xlat
sub
fldcw
xchg
lds
cmp
fcmovne
push
lods
mov
js
inc
loope
dec
int
jnp
inc
inc
mov
les
mov
or
sbb
shll
jo
adc
adc
lds
jb
pop
insb
loope
inc
ja
movb
mov
jb
stos
and
ljmp
jecxz
mov
leave
std
jl
cwtl
add
cmp
mov
jo
push
pop
dec
icebp
jne
fistpl
inc
decl
inc
mov
gs
das
and
lds
mov
sub
cltd
adc
xor
es
dec
xor
xlat
arpl
mov
mov
insb
mov
movsl
ud1
or
hlt
lret
pop
addb
inc
