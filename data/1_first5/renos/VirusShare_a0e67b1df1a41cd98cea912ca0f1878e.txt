jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
bound
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
movl
pushl
pushl
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
pushl
pushl
mov
push
call
call
call
call
movl
pushl
pushl
mov
push
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
lea
push
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
movl
pushl
pushl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
cmp
je
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xor
divl
test
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
push
mov
push
call
mov
mov
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
sub
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
push
mov
mov
xor
call
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
mov
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
push
mov
mov
xor
call
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
mov
push
mov
jmp
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
sub
add
add
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
call
mov
mov
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
movl
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
pop
ret
lea
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
sbb
mov
sahf
in
mov
into
in
mov
enter
loop
mov
in
in
mov
out
mov
add
mov
cli
in
mov
test
mov
imul
inc
xor
test
xchg
int3
inc
xor
mov
xchg
int3
inc
xor
add
xchg
int3
inc
xor
out
jl
int3
inc
xor
in
imul
xor
shrl
xchg
int3
inc
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
ret
lods
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
lods
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
lods
int3
cmp
int3
mov
or
inc
sub
or
les
int3
int3
int3
outsb
les
ret
lods
int3
std
push
inc
ffreep
lods
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
lods
int3
std
or
les
lods
int3
inc
aaa
std
or
ret
lods
int3
inc
dec
enter
std
push
inc
ffreep
lods
int3
inc
dec
enter
std
or
ret
lods
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
enter
std
push
inc
ffreep
lods
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
call
mov
cmpl
je
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
je
mov
subb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xorb
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
incl
mov
cmp
jne
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
call
test
jne
mov
jmp
movw
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
lea
push
call
call
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
lea
push
call
call
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
call
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
lea
push
call
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
pushl
pushl
mov
push
call
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
push
call
mov
call
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
pop
ret
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
movl
pushl
pushl
mov
push
call
call
call
call
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
lea
push
call
lea
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
lea
push
call
call
mov
pop
ret
subl
jae
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
lea
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
ret
mov
ret
lea
or
cld
cmp
sti
add
add
aas
xor
add
add
fs
add
cmp
xor
xor
sub
shrl
out
cltd
cli
jge
add
outsl
sti
add
add
add
hlt
add
add
mov
add
fnstcw
pop
fdivrs
mov
push
add
addr16
and
push
fcmovnu
add
push
sahf
dec
add
cwtl
sarb
add
or
adc
inc
push
aas
or
cli
or
add
add
out
xor
or
add
hlt
push
sub
cmp
mov
sub
mov
dec
inc
push
add
cld
add
call
add
mov
imul
clc
xchg
nop
adc
add
aad
add
xor
popa
cwtl
or
dec
and
add
add
in
add
add
mov
ljmp
dec
jecxz
add
pushf
add
add
add
fs
adc
sub
sub
pop
xor
in
aad
fildl
sbbl
stc
add
andl
add
pop
insl
mov
lahf
and
add
into
mov
adc
shll
jecxz
insb
sbb
and
pop
outsb
add
lret
scas
mov
or
sbb
inc
popa
dec
xor
add
mov
add
pop
jle
add
flds
cmp
push
add
lahf
jp
in
push
jne
mov
add
add
add
out
add
data16
ds
icebp
sub
ds
sub
outsl
addl
push
loop
add
mov
add
add
cwtl
xchg
xchg
js
xchg
add
test
add
jnp
xor
mov
mov
loop
add
adc
pop
add
add
add
cld
push
cld
jnp
dec
mov
mov
xor
add
les
add
inc
cmp
aad
pusha
add
cmp
or
add
mov
out
and
add
pop
jecxz
into
sbbb
add
add
addr16
push
xchg
xchg
or
pop
mov
repnz
cmp
jno
in
outsl
lock
push
add
pop
add
cli
js
aad
leave
cmpsl
fildl
out
and
and
jb
mov
aas
imulb
fcomps
jl
in
test
stos
sti
add
add
sub
jnp
aad
xor
sbb
push
add
add
insb
scas
add
add
sbb
push
add
push
dec
dec
arpl
xchg
add
xchg
cli
incb
sysenter
add
or
add
insb
ret
adc
add
test
xchg
add
mov
je
add
bound
repnz
jae
pop
jbe
aam
xchg
add
add
inc
ret
sbbl
stc
push
pop
insl
aas
sub
push
testb
add
mov
pushf
cmpsl
jb
add
out
xchg
mov
add
fidivrs
sbb
add
ficoml
ret
add
inc
add
notl
dec
add
mov
cmc
filds
hlt
xchg
aaa
cli
add
fst
mov
mov
lret
sbb
cmpsb
clc
xor
add
cmp
add
pop
mov
jecxz
xor
add
add
shrb
add
xor
movsl
mov
dec
inc
in
bound
add
sub
call
lds
push
pop
mov
imul
push
jb
pop
or
add
add
adc
add
icebp
add
mov
mov
stos
shrl
add
jecxz,pn
fucom
mov
clc
dec
aaa
movsb
xchg
bound
ljmp
push
lods
sahf
push
cmp
out
mov
dec
xchg
lret
push
add
mov
cltd
jp
out
test
in
lock
dec
leave
cmpsl
test
cmp
mov
movsl
rcl
loope
pop
pop
pop
and
out
dec
pop
mov
sar
add
add
inc
jl
xor
loop
or
pop
cmp
mov
andl
stc
shll
mov
push
inc
js
stos
or
xchg
lds
fnsave
call
out
add
int
xchg
mov
aas
in
repnz
xchg
outsl
sub
shl
ret
sub
push
shlb
addr16
adc
inc
cmp
mov
mov
cmp
in
xchg
xchg
pusha
fildl
inc
jnp
xchg
dec
push
out
jmp
lock
rolb
out
lock
pop
jge
shlb
stos
and
xor
ss
pop
cmp
fnstenv
push
cld
bswap
adc
lahf
push
test
and
mov
jae
cs
push
adcl
inc
cmp
and
test
jecxz
inc
aas
sbb
mov
out
scas
inc
sbb
lds
xlat
add
repnz
pop
add
insl
dec
loope
rcr
fldenv
dec
clc
inc
xchg
fwait
mov
sbb
clc
xor
jle
aad
jle
pop
int3
mov
mov
test
adc
jo
aas
or
pushf
jmp
cmp
fldenv
lods
push
jbe
movsb
xor
xlat
ds
daa
nop
jecxz
cmp
fstl
jno
mov
ss
sahf
lret
push
cli
adc
movsl
mov
rclb
lahf
push
dec
add
push
add
mov
cmpsb
out
xchg
xchg
pop
clc
fadds
js
outsb
pop
pop
cmpb
loope
stos
outsb
sub
sub
ds
sub
outsb
mov
out
mov
adc
lock
mov
movsl
xor
outsl
push
cmp
test
clc
push
or
clc
aad
lcall
sub
xor
leave
sub
repnz
jp
adc
pushf
mov
ja
mov
lock
int
push
sub
int
in
mov
div
fcmovu
lret
popa
rol
mov
imul
pop
sahf
scas
push
fdivp
mov
xor
push
and
mov
loop
out
loope
fs
cmpsl
fs
push
adc
xchg
negb
lods
mov
movsb
mov
xor
out
cmpsb
in
xor
stos
xor
push
jb
fiaddl
mov
loopne
push
lods
pop
shr
adcl
adcb
add
or
xor
test
cltd
sub
jno
sub
inc
adc
mov
dec
pop
adc
adc
ljmp
nop
inc
out
out
xor
inc
inc
mov
mulb
mov
mov
xchg
bound
imulb
sub
testl
repnz
hlt
pushf
lcall
push
jmp
dec
or
idivl
inc
movb
or
or
jbe
pusha
dec
test
nop
stos
jecxz
fbld
or
std
outsb
fwait
repz
call
es
ja
push
dec
test
push
fcmovnbe
or
mov
call
sbb
mov
mov
xchg
or
or
cmp
insl
lret
test
sbb
pop
jmp
icebp
les
cld
fcompl
popa
lret
push
mov
mov
shlb
fsubrs
pop
js
xor
mov
sub
inc
aam
inc
fcmovb
xchg
int3
mov
mov
or
clc
xchg
xchg
mov
lret
into
popa
fs
pop
lods
or
in
shll
lods
xchg
adc
push
iret
paddsb
lea
loopne
mov
mov
push
test
test
push
mov
insb
dec
xor
xchg
aaa
cld
mov
shll
gs
pop
or
aas
out
scas
xchg
ss
hlt
sti
xor
arpl
ja
imul
xor
add
imul
sub
cmp
pop
ja
pop
ja
cltd
addr16
push
cmc
xchg
inc
setnp
or
cmp
fwait
jl
cmp
subb
jne
mov
mov
bound
outsl
mov
inc
adc
xchg
mov
xchg
ds
dec
jp
addr16
hlt
loope
dec
or
mov
and
mov
adc
call
in
and
sub
pop
mov
sbb
jge
mov
adcl
out
nop
clc
popf
cmc
cmc
cmpb
cs
stos
cli
sbb
imul
pop
jle
jecxz
push
inc
das
push
adc
test
ret
int
pop
xchg
inc
ret
jae
call
inc
arpl
or
mov
push
ficompl
ficoml
push
mov
imul
cwtl
lds
cmp
and
imul
in
popf
hlt
sbb
xchg
rorl
jb
jge
cmp
inc
test
inc
or
xlat
add
loopne
pop
push
imul
lds
and
insb
test
push
push
xor
lret
sub
jbe
popa
pop
in
mov
adc
add
cmp
jno
xchg
jle
jb
orl
call
movsl
ret
and
push
std
lahf
xchg
push
push
repnz
test
into
mov
xor
pop
pop
sbb
js
int
pop
shl
push
lret
fucom
outsl
xor
cmp
jbe
ds
test
ror
out
mov
sbb
cwtl
sbb
jb
and
aam
adc
je
arpl
sbb
jae
icebp
pop
ja
jo
call
mov
adc
sub
jo
test
insb
scas
addb
clc
mov
dec
sbb
iret
ror
and
test
sub
add
push
fisttpl
mov
hlt
lret
pop
rcrl
mov
sbb
scas
cmc
lds
xor
push
outsl
dec
pop
mov
jae
idiv
sbb
cld
fs
pop
xor
out
ja
mov
jecxz
cwtl
repz
mov
movsl
aad
outsb
movsb
stos
cli
mov
xchg
cmp
jnp
or
sub
mov
push
gs
nop
loopne
pop
cmp
xchg
jl
pop
js
imul
out
add
jmp
sbb
aam
push
xlat
mov
push
sub
push
in
mov
or
fs
nop
and
adc
outsl
fnstcw
ffreep
movl
xchg
and
out
js
jno
cmpsl
jbe
mov
mov
xor
dec
pop
movsb
pushf
stos
jg
jmp
push
dec
cs
lods
push
inc
dec
adc
sub
sarl
test
aaa
dec
and
je
mov
jecxz
repz
or
std
adc
push
lahf
mov
fs
mov
mov
outsl
filds
ljmp
pop
lcall
lock
rcrb
out
xor
imul
rcrl
or
sub
mov
mov
cmpsl
mov
icebp
fwait
pop
sar
pop
ja
lret
les
mov
adc
mov
xchg
call
leave
sub
add
mov
add
es
mov
clc
ret
xchg
loopne
dec
ljmp
push
lods
je
inc
mov
testb
pop
dec
insl
push
mov
mov
add
fs
cltd
call
pop
divb
jbe
rorb
cmp
xchg
xor
jle
scas
pop
mov
fisubrs
adc
in
iret
in
mov
invd
pushf
incl
dec
fnsave
mov
and
mov
sub
adc
xor
inc
ja
stc
orl
adc
cmpsb
cmp
or
mov
aas
push
and
arpl
mov
push
push
jns
sti
in
addl
or
stos
jg
or
jmp
addr16
mov
jp
pop
mov
mov
xorb
dec
daa
in
in
sbb
fistpll
xchg
je
xchg
mov
out
mov
mov
push
fldcw
popa
fnstsw
insb
outsl
xor
sbb
mov
mov
adc
fwait
xchg
ret
pop
pop
xchg
and
inc
int
movsb
jae
popf
mov
pop
cmpsb
cmp
das
add
inc
ss
movsb
fimull
pop
dec
xchg
hlt
jnp
sbb
subl
lds
data16
or
repnz
leave
pop
in
hlt
and
ja
inc
lea
jge
movsl
mov
add
arpl
fs
out
lods
xorb
shll
pop
xchg
popa
xlat
fsubrp
mov
in
jo
pop
jbe
aad
and
and
movsb
push
jne
push
add
jbe
xchg
push
in
movsl
int
enter
daa
mov
xor
test
jl
mov
dec
jl
inc
push
shlb
and
jecxz
lahf
cmpsb
fwait
push
lds
shrb
cmp
lock
cmpsb
cmc
add
pusha
mov
shrb
xlat
loope
in
sub
repnz
mov
adc
movsb
sub
jp
pop
cmp
jae
test
push
xor
scas
xlat
mov
out
movsb
lods
pop
divb
push
stos
insl
pusha
fmull
les
inc
lcall
pushf
mov
jg
mov
jmp
fstps
mov
xor
and
xchg
jo
adc
rcrb
icebp
mov
fs
scas
sub
mov
xor
pop
inc
loop
mov
fbld
sub
xor
mov
das
mov
stos
outsb
out
es
cli
cltd
cs
cmp
js
or
inc
sti
gs
xor
mov
pop
push
inc
inc
adc
movsb
clc
imul
pop
add
mov
sbb
movnti
xlat
out
ja
sub
leave
mov
and
jle
jo
push
xor
sti
nop
sti
pop
pop
dec
repnz
and
fnstenv
stos
add
data16
call
xchg
mov
in
mov
sbb
inc
push
adc
mov
jmp
and
mov
inc
push
aas
fcmovbe
mov
sbb
orb
inc
je
and
rol
mov
std
mov
pusha
xchg
mov
daa
mov
pop
ljmp
pop
mov
scas
pop
cmp
ret
and
das
mov
mov
and
shrl
xchg
dec
insl
cltd
lret
ds
fs
mov
mov
jb
dec
cld
xor
push
mov
jl
mov
mov
cmp
cs
inc
aam
xor
es
jo
pop
lods
push
xchg
pop
mov
lea
sub
mov
sbb
xchg
lahf
xchg
mov
xchg
push
push
add
mov
mov
mov
jge
push
cmp
test
mov
xchg
pop
pusha
rcl
xlat
negl
inc
stos
mov
lods
out
jne
in
add
sub
mov
xor
cmpsl
orb
jg
xor
mov
data16
push
adc
in
or
ja
fcompl
inc
cmp
or
fidivl
mov
jo
cli
mov
shlb
out
popf
fbld
jb
jns
mov
in
dec
sub
mov
xor
or
mov
clc
mov
mov
fdivs
fldl
outsb
mov
push
dec
or
shll
aam
popf
stc
outsl
xchg
ret
dec
cmp
imul
push
es
out
sub
popf
inc
mov
mov
rol
stos
loopne
sub
js
int3
insb
ficompl
jnp
insb
ret
mov
popf
adc
lret
iret
mov
scas
pop
pop
int
test
jae
mov
cmc
or
stos
movsb
pop
inc
mov
xchg
fcmovb
cwtl
bound
stos
and
gs
scas
outsb
mov
cmp
push
lret
pop
mov
inc
inc
out
leave
shlb
sbb
jno
inc
nop
sub
jge
hlt
sbb
jnp
push
jae
add
ror
dec
lcall
mov
mov
dec
push
jnp
mov
jae
push
or
cmp
movsb
loope
sbb
xor
jbe
aaa
push
in
mov
enter
daa
sbb
jno
loope
jl
push
jle
jmp
int
mov
inc
adc
pop
mov
push
cwtl
sub
test
fs
inc
ja
xchg
cmpsb
js
or
insl
dec
loopne
fwait
inc
stos
pop
aas
int3
xchg
push
repnz
mov
sub
adc
cmp
lea
adc
jg
mov
mov
mov
cwtl
add
loop
cs
lcall
sub
out
pop
jne
push
lcall
mov
sub
mov
test
test
jg
xchg
dec
mov
mov
mov
xchg
mov
jecxz
and
cli
les
lret
imull
shlb
mov
add
mov
rorl
loop
sahf
xchg
repnz
push
into
insl
xor
in
ljmp
jae
stc
mov
in
test
cmp
lods
data16
mov
inc
and
sub
cli
int3
push
mov
cmp
dec
enter
into
jnp
fsubs
movsl
in
bound
aaa
pop
sub
add
jnp
mov
rolb
mov
mov
sbb
dec
outsb
sub
sub
pop
shr
and
jge
push
push
aad
xor
dec
push
mov
hlt
mov
fld1
ret
inc
frstor
push
lea
pop
and
addr16
xchg
pop
sbb
cmc
pushf
add
sbb
fdivl
jle
pop
inc
pop
movsl
xchg
jns
scas
jb
xor
out
je
in
jne
hlt
out
adc
sub
outsb
rorb
inc
push
dec
inc
insl
cmp
pop
outsb
dec
pop
loopne
or
stc
sub
das
movsl
sbb
mov
xlat
lods
or
fisubrs
divl
pop
insl
xorb
dec
pop
pop
sub
cmp
gs
pop
scas
push
lret
mov
popa
and
test
sbb
add
jbe
dec
movsb
pop
ret
outsb
scas
cmp
clc
cmp
pusha
xchg
pop
sbb
ljmp
out
dec
push
mov
mov
out
lcall
dec
fiadds
sbb
cltd
push
ret
shrb
push
cld
xor
dec
gs
sbb
cmpsb
pop
mov
sub
lea
cmp
fadds
jg
add
aaa
incl
sub
or
aaa
xor
pushf
jg
cwtl
shl
xor
mov
test
ja
inc
test
sub
jmp
or
xor
push
imul
mov
out
jl
out
jecxz
mov
mov
xor
stos
jne
mov
das
adc
or
ljmp
out
push
lahf
mov
mov
pop
mov
lret
xor
pusha
xor
mov
mov
leave
test
sbb
inc
addl
and
cli
es
popf
push
outsl
mov
into
ljmp
adc
stos
jnp
cli
popa
jle
out
cmc
push
sbb
mov
inc
cmpsl
sub
add
pop
add
adc
fdivl
sbb
pop
or
and
and
xchg
mov
cwtl
inc
imul
shll
jmp
imul
shl
cwtl
test
leave
dec
ud1
std
mov
arpl
inc
xchg
mov
jge
daa
pop
sbb
ret
aaa
push
add
dec
dec
out
fcmovb
into
int3
cmp
iret
fidivs
mov
xor
cmpsl
rorb
xchg
xchg
cmp
das
xor
jo,pt
or
fwait
ror
pop
mov
daa
mov
cmp
push
nop
jno
ds
jl
rorl
xchg
jnp
xlat
xlat
ds
inc
popa
lahf
in
ficoml
xor
test
das
jge
inc
push
cmp
pop
xchg
cmp
adc
jle
mov
adc
subl
movsb
cmp
cwtl
jb
mov
xchg
pop
loop
cmp
xor
sbb
sbb
aad
mov
add
pop
movsb
test
cwtl
push
jp
in
popw
hlt
mov
cmp
dec
call
sub
sub
leave
mov
rcrb
es
stc
mov
mov
ljmp
xor
cmp
test
and
cmpsb
ss
pop
mov
sbb
ficoml
cmp
call
outsl
in
push
shl
sub
push
stc
inc
iret
adc
arpl
ror
ss
loope
dec
cmp
ret
out
mov
cli
ljmp
cmp
out
xchg
xchg
test
mov
gs
adc
loopne
mov
cli
adc
push
movsb
adc
push
movl
cmp
movsb
sbb
test
cmpsl
sub
sbb
sti
into
dec
dec
jbe
insb
aad
mov
nop
mov
inc
dec
mov
repz
pop
and
fstps
sti
add
repz
std
xchg
outsb
dec
jle
xchg
lea
repz
adc
into
lods
mov
pushf
stos
mov
leave
cs
inc
loop
ljmp
cmp
dec
test
bound
out
jecxz
enter
lds
or
rcrb
std
cmp
andl
push
lock
adcl
mov
xor
push
stc
and
test
mov
mov
and
ja
roll
mov
cs
mov
dec
pop
out
enter
ss
and
mov
mov
pop
mov
xchg
and
inc
or
pop
hlt
cmp
aam
clc
sub
out
int
mov
mov
mov
xchg
popf
adc
ljmp
pusha
lods
mov
and
pop
jns
xchg
sub
sbb
punpckhbw
mov
sub
mov
test
dec
mov
push
mov
inc
mov
xor
repnz
int3
mov
pop
mov
jle
addr16
cmp
mov
fbld
and
xor
int
mov
xor
xor
ja
xor
inc
imul
or
sub
fwait
cmp
sbb
insb
or
mov
out
pop
jle
bound
mov
mov
xchg
cli
xor
mov
mov
pushf
or
loop
addr16
mov
mov
sub
xor
mov
std
bound
add
push
pusha
lret
dec
loope
xchg
imul
xchg
out
pop
adcl
aad
xchg
push
es
or
mov
hlt
insb
mov
stc
jnp
dec
and
xor
push
pop
xchg
notb
pop
fwait
dec
iret
pop
mov
nop
pop
pop
cmp
or
jae
ret
adc
push
es
or
mov
std
fisubl
mov
sub
add
and
pop
and
and
rcl
mov
jmp
mov
rcrb
hlt
dec
divl
arpl
mov
jge
cmp
lahf
aaa
fisttpll
pop
or
sbb
pop
and
mov
aam
jb
push
or
xchg
scas
jae
mov
cmp
sub
movsb
testl
jbe
ficoms
in
pop
fcom
enter
daa
mov
jno
mov
in
leave
sub
push
imul
and
fdivs
test
cli
insl
xchg
inc
xchg
inc
loop
jle
or
js
push
inc
pop
mov
and
lret
leave
sub
rolb
ds
push
mov
shlb
mov
sbb
push
mov
xor
loopne
int
sub
ret
loope
lcall
mov
sub
lock
insl
into
test
in
out
loopne
das
jge
mov
fwait
and
sti
inc
jo
scas
les
cmp
inc
out
imull
mov
mov
xlat
mov
sbb
push
xchg
leave
sahf
fnsave
cmc
loope
xor
mov
outsb
lods
loop
jp
stc
div
inc
fs
mov
adc
stos
shll
roll
xor
or
push
cltd
cli
xor
das
cmp
push
inc
push
stc
gs
dec
loopne
xor
leave
adc
loopne
push
fwait
ret
xlat
and
fldcw
out
mov
sbb
rolb
sub
cmc
in
gs
xchg
sti
jge
mov
cltd
in
aad
xchg
nop
mov
inc
sbb
jge
push
push
repz
mov
shr
daa
xchg
xor
rorl
mov
xchg
lock
adc
push
xchg
mov
std
scas
inc
imul
out
mov
dec
jb
pop
jmp
je
jns
jecxz
in
pop
pop
jge
std
mov
movsl
cwtl
mov
mov
xchg
add
cmp
decb
int
mov
ljmp
fxch
das
arpl
shll
inc
test
or
xchg
dec
mov
jno
mov
lods
fisttpll
adc
or
icebp
test
arpl
cmpb
and
fbld
pop
adc
outsb
sub
scas
outsl
aam
test
ret
pop
andl
into
iret
insb
clc
scas
pop
lods
xchg
fcoml
adc
les
mov
xorb
je
call
cmpxchg8b
add
icebp
mov
inc
repnz
cmp
push
subb
test
xchg
mov
pop
pop
popa
fs
out
sahf
or
add
jnp
pop
jle
sbb
or
or
push
xor
push
pop
mov
cmp
cmp
dec
or
mov
dec
inc
add
data16
cli
aam
addr16
jge
mov
inc
insl
out
cmp
pop
bound
std
or
push
lahf
in
xchg
cmpsb
xchg
dec
xor
mov
test
xor
out
ljmp
mov
pusha
mov
cmp
leave
dec
mov
pmulhw
xlat
cmpsb
pusha
addr16
fwait
es
cmp
mov
xchg
mov
daa
andl
out
jp
popf
mov
popa
pop
push
dec
cmpsl
lret
ljmp
sbb
mov
jle
outsl
push
cmpsb
cmpsl
leave
adc
mov
pop
ret
insb
pop
jb
cmove
test
pusha
push
adc
in
or
sbb
inc
xor
fcmovu
push
adcb
ljmp
scas
xchg
mov
and
mov
xor
repnz
jmp
hlt
xchg
xchg
push
arpl
and
jge
cmp
outsl
jg
pushf
mov
push
add
xchg
mov
pop
push
add
xor
pop
xchg
add
and
sti
push
cmp
fcomi
push
cmp
fbstp
enter
daa
mov
cmp
lret
jecxz
in
dec
push
aaa
dec
cmp
mov
and
rcrl
test
lds
cltd
cmpsb
add
pop
loop
xor
pop
cld
orl
cmp
loope
or
cmp
adc
or
adc
and
dec
sbb
addr16
andb
jecxz
and
data16
sub
cmp
lcall
inc
fdivl
call
nop
outsb
rol
addb
cmp
js
mov
jno
mov
cmc
xor
push
cmp
repz
sti
fisubrl
lret
fwait
rorl
mov
shrb
jg
data16
subb
cmc
test
mov
outsl
stos
rcl
loop
int3
pop
stc
scas
sarb
jno
push
ss
arpl
mov
xchg
imul
xor
mov
or
into
and
popf
gs
pop
in
xor
mov
adc
pusha
pop
imul
add
inc
inc
ja
sbb
sti
out
xlat
jmp
mov
mov
shlb
sti
sub
movsb
mov
or
dec
outsb
xor
mov
in
decb
fcoms
pusha
push
jbe
fmul
pop
icebp
pop
fistpl
call
push
pushf
add
popa
jmp
stc
lret
hlt
add
cli
jp
scas
ljmp
push
jg
je
ds
jecxz
push
mov
std
pop
lret
sbb
jnp
std
mov
push
popl
push
js
fucomi
mov
pop
leave
cli
jl
jp
push
or
jne
inc
cmp
mov
cld
pushf
sub
cmpsb
es
add
insl
xor
rorb
mov
iret
icebp
into
add
fidivrs
imul
fs
jp
mov
xor
je
jp
mov
aam
hlt
das
ret
jmp
bound
ret
mov
pop
clc
jmp
xchg
lret
call
loop
mov
mov
movsl
pop
mov
push
xor
push
add
cld
cltd
sti
dec
test
pop
mov
xchg
and
test
je
xchg
push
push
inc
shll
insl
js
or
mov
out
add
push
add
xchg
jo
lcall
xor
or
outsl
xor
sub
mov
cmp
pop
pop
dec
push
cltd
fildl
xor
popa
pushf
pop
fwait
xchg
popf
dec
push
push
fdivrl
jne
sahf
aaa
mov
ds
sbb
bound
mov
dec
lods
jno
cwtl
jns
mov
fdiv
sub
das
mov
jp
pop
scas
mov
xchg
mov
xor
cwtl
pusha
add
adcb
pushf
rcll
iret
out
sarl
out
mov
mov
stos
lods
enter
ja
insb
xchg
jnp
cmp
push
in
push
mov
iret
sbb
aas
push
pop
test
dec
dec
jae
fldt
or
xchg
idivb
mov
fimull
mov
imul
je
cli
stos
xor
xor
mov
mov
lock
xchg
add
leave
scas
sbb
pop
arpl
or
jge
pop
xchg
sbb
mov
or
movd
lahf
xor
sti
std
rcrb
xchg
inc
ficomps
lea
xor
mov
mov
and
adc
movsb
or
cmc
mov
push
sbb
sub
lahf
enter
daa
mov
push
jno
sub
jl
or
push
das
js
movsl
in
icebp
mov
lahf
inc
rorb
test
nop
dec
aaa
inc
mov
pushf
cmpsb
test
mov
xchg
ret
pop
cmp
adc
imul
sub
loope
cmp
out
adcl
push
xchg
incl
xchg
mov
cld
xor
inc
pop
cmpsb
mov
int
mov
sub
in
pop
jno
push
lcall
xor
loope
jmp
outsb
xor
lret
andb
fnstsw
js
mov
jl
mov
loop
xchg
clc
sbb
int
jbe
cmp
add
mov
in
sub
lret
jae
in
inc
mov
pop
bndstx
int
cmc
outsl
imul
outsl
mov
cmp
in
pop
stc
gs
sti
adc
mov
inc
hlt
shrl
jne
out
insb
xor
cwtl
lock
nop
xor
cmp
dec
or
loopne
into
pop
jp
gs
mov
lcall
adc
nop
xchg
imul
xchg
add
lods
sbb
lds
das
cmp
jecxz
xlat
sub
cmc
sub
inc
mov
cmp
movsl
sti
and
adc
dec
dec
int
rolb
lods
xchg
fld
js
les
fistl
repz
add
xor
jo
add
out
out
adc
cwtl
pushf
lods
cmp
jmp
cltd
sbb
lods
ficoms
inc
ja
loopne
lret
aas
cmc
lock
push
das
dec
ljmp
jecxz
add
sbb
sbb
mov
mov
mov
int3
dec
icebp
js
fistpl
cmpsl
push
pop
insb
pop
adc
gs
shrl
and
push
mov
push
cmp
shll
cli
in
idivl
insl
sbb
pop
dec
dec
pop
adc
add
pop
mov
or
or
pop
sub
mov
sti
shll
adc
mov
rorb
adc
and
outsb
aam
mov
ret
jp
in
inc
cmpsl
fcomp
sbb
add
and
inc
xchg
pop
sbb
jecxz
add
leave
sbb
enter
add
fcoms
loopne
jne
outsl
sub
in
xor
mov
mov
std
dec
add
test
adc
gs
mov
sahf
pop
mov
fisubrs
fs
add
mov
sar
mov
push
fisttps
call
pop
dec
mov
ds
lahf
pop
xchg
pop
bound
or
dec
stc
aam
inc
xor
cmp
fwait
lds
push
cmc
cli
xchg
int
mov
dec
out
clc
scas
pusha
bound
or
inc
in
in
push
ficoms
call
aas
scas
or
inc
cwtl
addr16
outsb
jmp
sti
push
mov
sbb
aam
adc
clc
fistpll
sbb
xchg
loop
jae
decl
dec
xchg
jnp
ds
out
popf
inc
popf
push
lods
popf
mov
lret
stos
pop
pop
lahf
and
xor
mov
jle
stos
je
xor
in
adc
popf
sbb
leave
in
pop
loopne
filds
movsb
jae
dec
jmp
cltd
mov
jbe
adc
inc
xor
dec
xchg
xchg
dec
sbb
mov
imul
and
mov
lock
mov
in
and
ret
mov
fs
sbb
or
or
mov
xor
out
in
mov
pop
fidivrs
mov
sub
xor
fdivrl
paddd
push
fisttpl
push
jbe
ds
in
movntq
dec
sahf
push
mov
cmp
sbb
jl
lret
push
das
xlat
push
adc
movsl
repz
xlat
and
add
mov
pop
test
pop
cmp
cmpsb
pop
sub
xor
sarl
jae
jp
inc
push
addl
adc
push
sub
push
cmp
out
pop
ds
dec
pop
adc
cmp
jecxz
outsb
iret
inc
sbb
mov
cmp
in
ret
cmp
imul
sub
jge
pop
lock
lcall
jmp
sub
sbb
test
jl
or
mov
mov
dec
int3
and
push
mov
inc
add
movsl
fdivs
push
jmp
push
inc
sarl
mov
mov
fstps
ss
lret
outsl
push
or
stc
sbb
data16
lret
inc
adc
loope
ss
push
lods
jmp
repz
out
push
scas
cli
lret
cltd
cmp
sub
lret
or
push
insb
cmpsb
into
ljmp
loopne
imul
inc
adc
cmc
mov
cmp
adc
pusha
lsl
push
push
sbb
jno
rcl
imul
fldenv
cmpsb
add
sti
mov
dec
aad
rcll
movsb
pop
inc
push
in
neg
sti
aas
jne
adc
mov
inc
fisttps
lea
das
pop
call
out
xor
pop
lcall
pushf
push
imul
bsr
inc
lods
cwtl
inc
in
data16
xchg
xor
adc
je
ret
aas
lock
and
std
cmpsb
push
pushf
cwtl
sarb
mov
mov
mov
jo
addl
dec
pop
fisttpl
push
aam
or
mov
shl
das
add
mov
push
fbld
and
and
cmp
push
dec
inc
add
cmpsl
xchg
fwait
mov
jl
jae
xor
xchg
lret
int
push
mov
clc
mov
ja
add
jo
test
and
sub
sbb
stc
ret
or
sbb
leave
or
fldl
clc
pop
mov
sub
adc
movsb
mov
mov
jmp
stc
xchg
dec
mov
repz
out
add
inc
cltd
imul
test
ret
push
dec
adc
das
call
add
pop
bound
and
mov
fadds
int3
mov
xor
lods
cltd
or
clc
xor
fldt
xchg
adc
pop
dec
bnd
pop
mov
inc
xchg
mov
fwait
hlt
stos
xchg
cwtl
or
cld
mov
insb
sub
ret
jns
dec
inc
in
aad
xchg
ss
mov
jmp
or
fs
in
mov
and
pop
xor
adc
aaa
cmp
fists
mov
xor
inc
push
out
fmull
sub
xor
or
rep
xchg
mov
xchg
insb
pop
into
xchg
jnp
cmp
push
jnp
sbb
iret
fldt
bound
popa
mov
pusha
jae
add
push
pop
sub
push
scas
xchg
or
repz
xchg
push
mov
stc
imul
mov
lds
pop
shl
je
arpl
repnz
fwait
dec
pushf
mov
hlt
je
or
loope
inc
mov
subb
push
xlat
sbb
fldcw
or
adc
cltd
int3
shll
sub
pusha
cmp
xor
outsb
enter
mov
cmp
mov
movsb
and
push
pop
fwait
lock
divb
adc
cmp
shll
sub
jl
pop
icebp
dec
test
cmp
and
sbb
lahf
jg
and
arpl
test
es
inc
rcll
inc
cmpsb
mov
pop
push
inc
xlat
js
mov
push
mov
loope
sahf
gs
inc
xor
out
add
adc
mov
mov
addb
push
add
pusha
or
mov
push
mov
sub
in
pop
outsl
jg
adcb
fdivl
pop
and
sbb
jmp
stc
imul
xor
sbbb
jg
xorl
or
daa
sti
cld
and
mov
push
fsubrs
icebp
imull
and
rcll
movsl
mov
nop
sahf
imul
xor
push
and
stc
in
stc
sar
outsl
fs
adc
scas
ss
stos
lods
shlb
outsb
mov
and
cli
idivb
cmp
xchg
jl
sarl
gs
gs
push
lret
data16
lahf
mov
imul
ss
add
pop
push
sbb
lods
xchg
popa
xlat
test
sti
sub
mov
adc
cld
sti
cmp
and
decb
dec
mov
fnstenv
stos
sbb
pop
insl
mov
xchg
cmp
adc
dec
mov
pop
dec
pop
mov
add
pushf
add
jmp
and
ss
test
jle
xor
jb
and
je
add
dec
and
and
int3
std
dec
imul
add
cmc
dec
not
xor
mov
stc
mov
lahf
lock
pusha
das
filds
sarb
imul
idivb
push
ljmp
cmpsl
xchg
cwtl
mov
push
xorb
cmp
cmp
dec
mov
call
inc
mov
pop
shl
jl
sub
fcomip
aam
cmp
ret
cwtl
es
loopne
xabort
add
ja
mov
pop
popa
xor
sbb
int3
cld
std
mov
push
fidivrl
nop
stos
ljmp
jns
add
lahf
stos
test
outsl
mov
push
mov
nop
dec
iret
and
sbb
scas
testl
pop
or
jbe
out
sub
mov
out
sar
cli
sub
xor
bound
call
inc
adc
mov
or
pop
ja
xchg
dec
fildll
inc
pop
pop
loop
and
fwait
and
rcrl
cmp
jne
push
shlb
mov
inc
bound
fidivrl
push
jecxz
jmp
pop
xchg
test
or
sub
and
addr16
jns
sbb
mov
mov
clc
dec
lahf
dec
aas
mov
jle
shrb
adc
jmp
fiadds
sbbl
or
mov
push
in
mov
dec
push
test
sbb
stos
insb
mov
jne
aaa
ret
ret
adc
or
mov
in
pop
dec
push
add
xor
ja
out
push
pop
or
or
pop
inc
loopne
cs
fisubl
push
mov
mov
cmp
enter
or
inc
push
mov
leave
adc
pop
hlt
mov
mov
inc
movsl
je
jge
or
aaa
cwtl
or
cld
and
dec
mov
jecxz
fiadds
cld
fbstp
leave
add
scas
into
cld
sub
cmp
dec
movsb
scas
orl
in
frstor
mov
daa
xchg
xor
add
pop
jns
cmc
cmovnp
scas
adc
fcomps
add
rcrb
pop
mov
and
icebp
or
cmpsb
or
mov
cmp
and
clc
mov
push
sahf
push
loope
insl
lea
adc
popf
fdivs
adc
jl
jle
jb
mov
sbb
pushf
add
push
and
mov
cmp
add
lea
adc
pop
out
sarb
push
bound
fsub
jp
sub
sub
outsb
pop
xor
fldl
dec
xlat
mov
rorb
xchg
mov
mov
cli
pop
and
pop
cld
push
inc
iret
lock
out
sub
cmp
pop
sahf
xchg
test
clc
sub
cmp
out
les
cmp
mov
sahf
sbb
stc
mov
fs
icebp
adc
arpl
popf
stos
push
out
mov
xor
xor
xor
in
into
mov
mov
loopne
dec
mov
push
xor
adc
subl
pusha
in
add
add
out
sbb
out
mov
mov
mov
sti
call
loopne
aad
shl
nop
sarl
std
inc
jns
pop
fldcw
cmp
sub
xchg
add
repnz
cld
xlat
loope
les
in
adc
pop
add
fcoms
pop
fistpl
adc
or
ret
inc
sbb
aas
ror
movsb
jb
aam
dec
dec
in
or
pop
jecxz
pushf
adc
es
std
hlt
fistpl
ja
jno
cmc
xchg
or
mov
cmp
lock
repnz
mov
mov
mov
hlt
hlt
adc
and
test
jae
shl
push
dec
cmp
out
cmpsl
test
and
sub
sbb
mov
jl
stos
push
mov
int
and
out
inc
pop
scas
dec
inc
rol
and
push
inc
add
test
es
sub
xchg
test
aad
sbb
sti
mov
popa
dec
inc
lods
aaa
aam
mov
xor
cmp
pop
or
add
push
roll
je
push
push
ret
ss
test
jb
xchg
std
not
lea
pop
mov
push
stos
out
lea
add
add
inc
lcall
stc
push
xor
fsts
xchg
xor
lds
ja
mov
dec
rol
scas
inc
cmc
sbb
lret
fimuls
xchg
jne
mov
mov
jmp
out
xchg
add
mov
data16
dec
lret
xchg
aam
inc
mov
lds
or
adc
jp
xchg
mov
sub
mov
addr16
push
dec
and
inc
pusha
insl
sub
fists
aad
jmp
test
add
popf
jnp
lds
xchg
stos
js
jmp
insb
xor
pushf
jle
mov
ljmp
aam
ret
adc
jg
inc
xor
iret
jae
cmp
or
orb
ficompl
pop
xchg
add
add
mov
scas
xchg
and
shrb
lahf
mov
fldl
or
rcrl
or
jb
test
gs
jns
sbb
testb
ljmp
cmpsl
mov
fisubs
out
jo
push
lret
scas
lods
jae
and
popf
fdivrl
xor
dec
movsb
cmp
int
loop
push
in
stc
push
enter
daa
test
cmp
mov
test
cltd
dec
arpl
mov
mov
loop
and
and
xor
arpl
mov
pop
push
cmpsb
nop
fistl
pop
movsl
mov
js
inc
test
aaa
push
sub
cmp
loope
pusha
push
sub
out
push
ds
paddw
push
aam
rcr
lea
jae
cmp
cwtl
sub
pop
in
mov
imul
inc
pop
insl
es
lcall
push
fmull
ljmp
push
mov
sbbb
sahf
stc
mov
lods
loop
or
test
and
dec
out
dec
loop
cmp
mov
jle
lret
pop
roll
mov
or
sahf
scas
out
cmc
mov
fistl
outsl
add
jo
stc
inc
push
pop
fs
jge
cld
jp
ss
lds
cwtl
in
out
in
and
xor
jecxz
cmp
mov
xor
xchg
xor
cmp
pop
and
pop
mov
lds
adc
fidivs
rclw
sbb
and
adc
xor
mov
out
sbb
xchg
dec
add
imul
sub
mov
dec
dec
loope
inc
mov
mov
les
xor
xchg
ret
mov
js
aas
inc
dec
insb
enter
dec
mov
pushf
pop
lock
push
rcrl
mov
test
inc
ss
mov
jno
xor
pop
mov
mov
jecxz
pop
or
sub
std
fwait
inc
stc
cwtl
icebp
sti
mov
call
pop
cld
dec
popf
les
aad
test
clc
push
mov
xchg
lock
mov
mov
and
jg
pop
shrl
dec
testb
push
insl
mov
and
test
loop
add
in
mov
cmp
sbb
andl
int
test
sub
dec
adc
mov
dec
es
jmp
inc
clc
adc
xchg
push
bound
ljmp
add
or
mov
push
jmp
push
inc
push
jle
add
repz
push
mov
test
sti
fbstp
adc
jecxz
popf
mov
xchg
sub
in
jb
arpl
stos
lock
lock
add
sbb
dec
test
cld
in
fisttpll
les
andb
aaa
dec
mov
xorb
xchg
decb
int3
cli
inc
mov
or
xor
fwait
cmpl
jne
jo
mov
dec
add
je
cmp
mov
jns
dec
in
in
or
mov
popa
in
sub
push
fisubl
jp
mov
mov
bound
mov
sti
call
in
sub
pusha
or
int3
fbstp
lcall
cmp
cmpl
out
push
mov
aas
xor
mov
inc
xchg
adc
insl
jnp
divl
jge
and
dec
push
iret
clc
out
enter
stc
pop
mov
pop
loope
adc
sub
leave
push
sub
cmpsl
fimull
xchg
pop
sbb
imul
xchg
dec
loopne
inc
fstl
inc
in
repnz
inc
leave
add
hlt
push
adc
arpl
das
jns
stos
push
fnstcw
int3
pop
sbb
mov
or
arpl
add
fmull
fimuls
pop
xor
jg
stos
scas
mov
shlb
pop
int3
cmp
or
movsb
les
pop
and
jbe
imul
xor
adc
test
cmp
dec
jno
xor
jl
adc
push
sahf
push
fwait
movsl
sets
lahf
fmull
call
mov
push
xchg
mov
jle
loope
adc
int3
xchg
js
add
jbe
pop
push
mov
loope
ja
sub
test
cmp
sar
ds
xor
xor
int3
xor
cmpb
pop
add
xor
xor
ja
jne
mov
sub
jmp
push
adc
fdivrl
cmp
sub
insl
lods
outsb
and
subb
or
jg
ds
cmc
and
jp
push
dec
imul
in
loope
ds
rcl
hlt
mov
xchg
sbb
push
xor
push
xor
lock
in
lods
loop
stc
and
clc
hlt
movsb
fs
rcll
ss
ss
fwait
inc
lods
test
js
xchg
mov
out
xchg
sbb
xchg
inc
add
cmp
call
ror
jbe
pusha
xor
repnz
inc
xlat
pop
adc
xchg
cmp
adc
scas
pushf
add
sbb
push
lods
scas
sbb
pop
ja
xlat
or
movsl
andl
sti
inc
pop
leave
decb
stos
std
nop
mov
mov
hlt
ja
xlat
les
repz
adcb
adc
jmp
add
data16
adc
cmc
jle
add
jmp
xor
es
sbb
jl
push
xchg
xor
adc
jb
xlat
and
cmp
mov
pop
sub
adc
inc
or
lods
or
fwait
mov
cmpl
aas
sub
popf
fildl
xor
nop
mov
xchg
dec
lock
sbb
mov
inc
mov
adc
sarl
mov
insl
lahf
in
dec
xor
cmpsl
cmpl
icebp
fadd
cmp
loopne
jo
mov
pop
and
sbb
pop
pop
in
je
shrb
sub
cld
loope
insb
jno
ret
inc
stos
mov
aad
mov
fbld
std
xchg
xchg
jge
ljmp
lods
or
dec
jns
ja
lds
and
punpcklbw
add
cmp
test
aas
lahf
mov
lcall
add
dec
test
call
inc
sbb
sbb
pop
push
jno
stos
fistps
out
push
mov
out
add
mov
call
fldl
dec
push
icebp
or
inc
test
sub
pop
mov
dec
js
mov
cmp
mov
push
lcall
jbe
or
lret
pop
fwait
mov
mov
jne
xchg
push
mov
mov
xchg
bound
mov
jns
inc
xor
mov
adcb
jb
sub
adc
jcxz
jp
xchg
mov
inc
jns
dec
call
push
pusha
mov
mov
xchg
jmp
aas
cmp
orl
addr16
bound
leave
out
mov
add
ret
xchg
and
inc
insb
or
out
mov
push
mov
testl
jbe
sub
ficompl
sub
sbb
sbb
or
js
imul
push
xchg
mov
out
pop
lcall
imul
jecxz
pop
pop
jp
pop
or
mov
cmpl
leave
js
jg
mov
rorb
repnz
jge
add
aaa
aad
jle
aad
sub
sub
mov
jge
rcrl
xchg
fsubrp
decb
fisubrl
test
adc
cmp
xor
jbe
cwtl
imul
xchg
iret
inc
enter
daa
adcl
aad
jl
imull
push
adc
cwtl
and
lcall
lcall
push
les
or
inc
insb
pop
repz
les
mov
imul
mov
sub
out
aaa
cmp
pop
mov
or
rorb
adc
lods
sbb
icebp
imul
aam
clc
dec
cmp
add
aaa
or
sub
inc
jno
imul
dec
xor
push
lods
dec
fsub
sub
mov
outsb
test
test
mov
lds
jg
lret
clc
std
push
mov
sbbb
lock
and
in
cmc
push
dec
fs
cmp
sbb
lret
popa
shrl
mov
out
sbb
loop
cmc
lods
pushf
cmc
sbb
mov
std
aaa
loop
mov
stc
scas
cmp
adc
in
lods
insb
xor
mov
cmp
jae
xor
add
or
mov
cmp
lods
pop
arpl
int
or
aad
add
data16
jne
sbb
cwtl
ljmp
sbb
mov
mov
sub
aad
stos
sbb
pop
push
lds
cmp
shl
dec
cmpl
lea
cmpl
push
push
push
rcrl
pop
mov
pop
ret
adc
insl
jg
pusha
popf
inc
mov
dec
xchg
scas
enter
es
mov
data16
int3
xlat
jecxz
pushf
out
das
lea
cwtl
addr16
mov
lea
xor
loop
je
pop
ds
sbb
xchg
mov
std
ss
xchg
mov
pop
testb
jae
sub
dec
cmp
scas
jae
cld
or
lret
clc
lods
mov
push
and
mov
lahf
pop
or
push
sub
dec
xchg
aam
sub
ret
aam
jbe
pop
ret
push
or
clc
xchg
leave
xchg
aam
sbb
push
xor
popa
cmp
test
orl
xchg
lods
mov
cwtl
movswl
insl
add
leave
sbb
xlat
or
lcall
test
add
xchg
xchg
cli
rcll
jns
stos
into
sbb
add
push
mov
pushl
loope
mov
stos
das
xor
dec
ret
mov
nop
mov
divb
ja
scas
test
add
or
cmp
push
mov
jne
sbb
out
xor
bound
fcoml
xchg
ror
mov
testb
xchg
cmp
or
add
in
sbb
or
jp
mov
orb
loop
in
cvtps2pi
sub
fcomip
cld
push
xchg
aam
pop
jmp
or
or
sbb
inc
popf
lock
mov
cmp
stos
rorl
insb
jae
jnp
lahf
jmp
push
ficoms
adc
mov
iret
mov
mov
cmp
loop
sub
inc
push
loop
jae
mov
sub
cmpsb
or
repz
stos
inc
sub
fidivl
mov
add
mov
mov
scas
scas
in
lcall
dec
imul
out
push
xor
xor
arpl
mov
lock
sbb
cmpsb
aaa
xchg
mov
or
jno
add
jns
int3
push
add
fimuls
fwait
inc
jo
mov
scas
dec
lock
cmpsb
outsl
xor
pop
in
mov
inc
divl
cmp
jns
ljmp
sarb
sarl
outsl
jl
scas
xchg
dec
mov
adc
fs
lcall
out
lahf
sbb
push
test
adc
jle
pushf
xchg
test
pop
sbb
add
hlt
sbb
imul
adc
cmp
test
sub
mov
push
cs
shr
push
fisttpl
loopne
lea
sbb
faddl
xor
push
fmulp
sahf
out
sub
negb
mov
dec
loop
mov
xor
loopne
dec
jg
in
mov
je
mov
outsl
mov
aas
and
push
push
shll
fcom
push
stos
mull
mov
and
out
roll
test
negl
int
loopne
cmp
in
leave
cmp
loop
test
stc
data16
ss
js
ss
lods
lods
push
insb
icebp
mov
jbe
cli
std
push
mov
jno
cmp
out
jnp
in
into
cmp
pusha
gs
out
loopne
repz
orb
imul
popf
add
push
movsb
pop
mov
sbb
shl
cmp
jecxz
mov
mov
sub
mov
aam
cld
aad
adc
dec
inc
mov
mov
flds
push
les
cld
repz
ret
and
lea
fisubs
pop
int3
cmc
into
adc
inc
jmp
imul
inc
xchg
arpl
dec
and
stc
dec
sub
jcxz
and
xor
std
nop
inc
mov
jae
push
mov
inc
mov
dec
pop
scas
or
pop
loope
repnz
shl
lock
nop
das
cmp
nop
mov
mov
andb
pop
rcrl
test
jg
insl
data16
dec
sub
cmpsl
sbb
in
xchg
cld
ss
out
lret
addr16
mov
pop
and
push
adc
rclb
inc
movaps
inc
or
add
pop
ret
arpl
test
sub
sbb
adc
ljmp
cmp
sbb
mov
repz
mov
add
mov
test
ret
iret
mov
iret
and
xor
test
scas
scas
xchg
add
shr
push
rcrb
stos
mov
jmp
add
outsb
rcr
adc
add
xor
jae
cmp
push
push
mov
mov
sub
shrl
push
cmp
jle
push
aaa
rcrl
cmpl
out
adc
cmp
sbb
mov
xor
mov
out
test
mov
das
loopew
xchg
jp
dec
fnsave
loope
jmp
and
inc
dec
scas
adc
in
sbb
pusha
fsin
sbb
pop
cltd
xchg
cmpsl
js
jmp
aad
out
daa
out
ds
fstl
mov
cmp
stos
inc
or
and
sarb
imul
mov
adc
push
jl
dec
and
popa
insb
sbb
les
fldenv
out
inc
aad
dec
cli
ss
test
test
xchg
pop
mov
lret
nop
imul
xchg
mov
sub
sub
mov
hlt
ss
and
sbb
mov
jge
sbb
sbb
jmp
or
cmp
push
test
pop
cli
mov
fidivs
sbb
xor
nop
push
in
sub
and
enter
push
jnp
gs
push
add
test
out
dec
sub
pusha
xor
cld
daa
cmpl
je
int3
cmp
push
inc
aas
in
and
mov
mov
pop
test
out
ss
call
dec
cmpsb
pushf
jne
pop
inc
dec
js,pt
test
pop
xor
mov
sub
cmp
pusha
ds
jo
adc
ret
pop
and
repz
sbb
push
add
clc
mov
xchg
test
int
test
sub
movsb
xchg
adc
xchg
sub
jo
test
arpl
gs
pusha
mov
xchg
jmp
jmp
lahf
ljmp
iret
daa
fmuls
mov
ret
rcrl
sbb
add
sahf
cmp
cmc
cmpsl
pop
movsl
xor
mov
orl
pop
stc
sbb
mov
adc
add
pop
lods
cmp
popa
out
lods
jno
xor
fdivl
dec
rcrl
or
sbb
pop
sub
inc
mov
les
imul
xchg
addr16
imul
sbb
jns
frstor
stos
fiadds
cmp
lea
xlat
and
std
mov
xchg
lret
push
pop
addr16
mull
lods
nop
sbb
dec
lds
inc
fcomps
jl
jbe
popa
add
repz
test
call
loop
sub
mov
push
inc
xchg
adc
int3
in
add
icebp
jmp
sub
les
addl
jne
in
test
jb
popa
pop
dec
mov
call
cmpsb
xor
mov
cwtl
fnstsw
fwait
mov
sahf
dec
dec
push
sbb
test
in
lock
jl
mov
imul
and
mov
div
cmovne
push
jge
dec
and
cmpsl
xor
mov
pop
inc
clc
cld
popa
xchg
fwait
lret
jl
mov
xchg
jo
test
mov
dec
dec
dec
shl
mov
lods
aam
popf
ds
repnz
es
imul
fimull
ljmp
mov
movsb
sbb
loopne
mov
cmp
push
mov
xchg
xor
jo
ljmp
mov
push
sbb
dec
cmp
pop
xchg
sarb
roll
pop
pop
sysret
int
lods
pop
mov
jl
mov
add
mov
xor
mov
xor
xchg
sbb
push
repz
mov
insb
lds
dec
xchg
add
inc
call
xchg
lret
fwait
cmp
inc
xor
push
mov
lock
push
adc
in
cmp
pop
fucomp
mov
pop
je
scas
into
lret
mov
loopnew
pop
jp
cmp
mov
mov
orl
cmp
in
test
pusha
je
xor
xor
add
xchg
mov
xchg
icebp
out
dec
imul
ret
stos
mov
add
mov
std
mov
jle
in
push
insb
in
adc
xorb
cwtl
add
addr16
rclb
mov
lock
jmp
jg
fcmovu
sub
xchg
mov
mov
mov
imul
lods
imul
or
mov
jl
inc
leave
fucom
popf
hlt
andl
jge
lcall
sbb
pop
jle
adc
add
sbb
int3
adc
pop
sub
xchg
cmp
jmp
int
or
jmp
int3
push
cmp
pop
cmp
push
push
jb
jbe
fcoms
ds
daa
adcb
jno
nop
negl
xlat
push
sub
dec
movsl
sub
and
sub
lahf
pop
jle
push
dec
les
mov
imul
mov
mov
lcall
push
iret
fwait
loope
cmp
cmp
push
adc
sahf
mov
lods
or
push
mov
mov
xor
cltd
sbbl
sub
lea
gs
push
insb
push
mov
in
pop
sub
jne
push
pop
inc
jg
sub
icebp
cld
testb
and
push
pop
or
inc
fmuls
jo
loope
pop
lret
adc
xor
mov
mov
sbb
test
outsb
loopne
xor
xchg
imul
sub
stc
aam
int
repz
rclb
xchg
lcall
mov
jg
dec
out
data16
arpl
jp
pop
jmp
pop
or
push
jp
add
gs
rol
inc
rolb
fs
mov
add
outsl
add
mov
push
sbb
dec
mov
aam
jno
inc
mov
movsb
inc
sti
add
sub
sbb
pmullw
sub
dec
and
js
jmp
in
fnstenv
inc
repz
pop
inc
lea
xor
cmpsb
sub
out
push
pop
xor
adc
pop
pushf
scas
mov
jmp
lods
cs
add
inc
mov
ljmp
sbb
xor
daa
cmc
xchg
jecxz
add
std
fiadds
mov
cmpsl
xlat
dec
cmpl
mov
pop
daa
scas
pop
mov
mov
lret
das
clc
or
xchg
mov
mov
ss
cli
sar
test
notb
in
cmp
dec
push
ljmp
rcl
insb
icebp
xor
call
lret
inc
cltd
sub
and
mov
pop
push
xor
cmc
aam
push
cs
xorl
fnstsw
cmp
aaa
das
fists
lods
add
popa
aam
arpl
cmc
lods
mov
and
sbb
fsub
add
mov
cltd
and
sub
push
jecxz
jge
mov
into
xchg
aam
sbb
jge
rcll
mov
stos
fwait
xchg
jb
fucomip
inc
add
movsb
sbb
sbb
fwait
mov
or
pop
mov
mov
pop
add
mov
daa
int3
stos
ja
jne
dec
test
or
jnp
fwait
insb
test
jne
push
cmpxchg
inc
int
iret
sbb
bound
cmpl
xchg
in
cltd
jns
scas
lret
inc
cmp
sub
std
cltd
icebp
addr16
arpl
fninit
mov
shll
add
mov
in
push
sbb
pavgb
dec
and
xchg
dec
xor
in
dec
addr16
imul
inc
jle
out
sub
popf
gs
sbb
adc
and
rcrl
sub
push
mov
cmp
iret
shrl
les
cmp
jb
dec
jae
inc
popf
push
je
sub
cmp
cmpsl
mov
fimull
xor
imul
scas
fdivrs
lds
xchg
ror
mov
iret
adc
xchg
hlt
int3
fisubl
arpl
add
mov
lds
shl
mov
mov
and
sub
pop
pop
data16
fidivrs
jno
movsb
shlb
scas
out
lret
and
icebp
cmp
inc
movsb
jnp
popa
push
mov
aad
in
cs
enter
daa
jg
lods
cmp
pushf
jno
shll
std
nop
xor
or
add
and
jmp
cs
and
mov
push
jle
mov
cmpsb
mov
outsb
mov
aad
adcl
fxch
push
mov
push
sub
fistpl
ds
pop
xchg
adc
jns
mov
sbbb
les
mov
and
xor
and
inc
add
sahf
sub
dec
dec
pop
addr16
jo
sbb
das
push
ret
sub
fmull
js
outsb
adc
test
repz
cmpsb
jg
push
xor
sarb
mov
and
inc
push
pop
fsubr
cmp
add
mov
lret
add
lret
mov
fistpl
test
ret
cmpsl
fcomip
xor
out
mov
aas
and
das
stc
mov
add
ss
push
lods
or
mov
push
out
movsb
js
xchg
xor
cmp
scas
inc
or
in
frstor
inc
xchg
loopne
inc
mov
adc
movsl
imul
mov
add
and
sbb
test
xlat
mov
cmp
in
imul
cmp
cwtl
out
nop
rcrb
add
movl
les
mov
xchg
sahf
int
es
data16
pop
in
adc
pop
xchg
jmp
hlt
dec
mov
inc
mov
in
add
sub
jb
imul
nop
push
sub
xchg
jecxz
push
mov
cmp
std
test
and
mov
jo
mov
sarb
dec
pop
push
push
fucomi
dec
je
lret
mov
sahf
xchg
lock
das
xlat
cltd
jns
sub
xchg
mov
rcrl
rorl
movsl
notb
push
lret
dec
sbb
or
add
add
or
cmp
mov
dec
mov
mov
pop
mov
xchg
insl
sub
decb
arpl
ret
adc
es
frstor
pop
push
xchg
rol
ljmp
das
lods
and
das
mov
imul
or
push
addr16
xchg
aam
and
jb
pop
push
bound
push
insl
push
cmpsb
xchg
pop
adc
test
xor
sbb
out
mov
mov
out
inc
pop
adc
mov
add
and
xor
sub
mov
pop
mov
dec
and
loop
cwtl
ja
adc
faddl
jbe
or
cmp
fwait
rcrb
jne
sbb
xchg
out
scas
scas
mov
in
outsl
mov
cmpsl
stos
in
dec
add
xchg
in
clc
adc
xchg
jp
xor
popa
or
add
push
bound
pusha
stos
out
fcmovu
outsb
in
and
adc
in
mov
stos
xchg
out
jl
popf
mov
mov
inc
bound
popf
mov
fs
pop
pop
sbb
push
dec
jle
cmp
cli
push
and
iret
xor
inc
ret
dec
pop
push
sbb
inc
jge
cwtl
jae
pop
mov
or
fisttps
cmp
ds
xchg
mov
imul
mov
lds
divl
mov
and
leave
lret
sti
data16
pop
gs
arpl
inc
inc
mov
jo
sbb
mov
add
sbb
xchg
int3
adc
leave
pop
xchg
sbb
xor
mov
and
cmp
mov
icebp
mov
jbe
inc
vunpckhpd
test
push
bound
jle
or
popf
xchg
xchg
adc
enter
int
lock
movsl
cmp
add
lahf
xchg
rolb
cmc
icebp
ljmp
dec
test
inc
fdivr
aas
cmpsb
and
aad
js
orl
pop
sub
loope
cmc
movsb
sub
imul
mov
inc
fst
push
lcall
sub
push
sbb
sub
add
mov
xor
jl
pop
and
in
sub
in
test
lret
shll
fdivrl
pusha
shrb
adcb
test
packuswb
inc
jl
mov
push
aaa
mov
sub
and
popl
pop
pop
adc
mov
lret
rol
popa
adc
mov
pop
in
mov
addr16
and
add
cld
or
mov
loop
ja
stc
inc
cmp
or
jg
sub
sbb
pop
data16
leave
loope
xor
andb
jmp
or
andl
pop
and
imul
jle
add
andl
push
sbb
mov
mov
movsl
mov
aam
ljmp
sub
nop
stos
sbb
dec
loop
inc
adc
inc
les
inc
dec
xchg
sbb
lea
xor
pushf
enter
xor
rclb
adc
jmp
add
add
cs
fdivrs
inc
popf
clc
inc
repz
fnstcw
lret
jb
mov
mov
mov
in
mov
adc
std
sub
sub
outsl
jae
mov
mov
dec
or
or
push
lods
leave
pop
insl
jbe
mov
lcall
dec
pop
dec
das
mov
fwait
mov
nop
add
and
push
icebp
rcrl
ljmp
adc
and
fimull
icebp
loop
jae
loop
nop
lret
and
sbb
mov
push
rcrl
cmpsb
inc
mov
pop
cmc
jge
mov
mov
hlt
es
nop
pop
mov
xchg
pmaddwd
ljmp
popa
lods
pop
movsb
mov
dec
dec
xchg
setnp
push
inc
pusha
mov
lcall
cltd
gs
mov
dec
outsb
jo
test
sub
into
sbb
lods
xchg
adc
movsl
sarb
popa
cld
add
leave
pushf
call
dec
fimuls
add
repz
xchg
xor
popf
xchg
mov
cmp
inc
lods
jnp
or
lret
jmp
push
divb
mov
mov
push
or
bound
je
in
push
mov
mov
push
sbb
or
and
out
jecxz
xor
mov
fistpll
dec
cmp
pop
and
pusha
inc
adc
xchg
repz
cltd
jmp
add
pop
andl
out
inc
add
fdivrl
push
jg
subb
test
insb
mov
loop
mov
aam
push
inc
cs
adc
and
jns
lcall
inc
mov
jae
mov
scas
or
pop
insb
outsl
inc
movsl
xor
icebp
push
mov
pop
fucom
imul
scas
sahf
inc
sub
xchg
rolb
cmpsb
mov
jne
popf
leave
inc
incl
pop
xor
jge
jmp
sbb
out
or
lcall
mov
sub
xor
cld
xchg
mov
and
push
shll
mov
imul
adc
mov
cmp
int3
xorl
mov
dec
fcmovnu
xchg
push
roll
loopne
or
adc
enter
cmp
push
adc
adc
mov
js
frstor
cli
js
dec
add
das
inc
lock
gs
or
lret
les
fistl
rcll
sub
cmpb
inc
sbb
push
or
cwtl
and
shr
mov
and
pop
gs
clc
lcall
jae
in
xor
outsb
xlat
sub
loope
addr16
loope
data16
iret
inc
mov
jno
mov
mov
addl
lret
dec
xchg
push
fdivrs
xchg
negl
cmp
lret
movsb
sar
rorl
xor
fdivp
ret
mov
adc
push
sub
stc
stc
push
es
push
movsl
adc
imul
lods
jmp
jae
pop
lods
adc
xor
jne
pop
repnz
bound
loopne
mov
pop
sbb
mov
imul
pushf
mov
jmpw
sbb
cli
rol
push
shlb
lret
mov
aas
sub
sti
cmp
cmpl
fs
nop
xchg
test
xor
inc
and
fcmovnu
pop
pop
jb
testl
xchg
fisttpl
leave
call
fs
pop
dec
js
adc
mov
shl
cs
xor
inc
lret
je
inc
push
aaa
test
imul
dec
dec
jle
inc
je
adc
jecxz
enter
and
cwtl
leave
mov
mov
jle
mov
cmc
sbb
fisttpl
xor
dec
xorl
push
movsb
das
xchg
mov
dec
cmp
mov
xlat
movsb
shl
push
in
sbb
imul
sbb
jmp
cmpsl
jl
fnstsw
mov
mov
lret
xchg
xchg
and
pop
adc
shlb
and
sub
jo
ret
xlat
mov
sbb
clc
call
lods
pop
ljmp
push
mov
insb
pop
mov
push
sbb
add
dec
je
cltd
movsl
push
test
pop
mov
sti
lds
scas
lds
mov
test
mov
mov
rcrl
sbb
or
ljmp
cmp
sahf
xor
out
cmp
sbb
out
sub
pop
pop
cmp
dec
pop
jl
inc
inc
movsl
xchg
or
xor
push
cltd
ret
cmpsl
jbe
mov
add
out
insb
fimuls
bound
pop
adc
aad
push
in
lods
pop
xchg
fwait
sub
or
bound
out
leave
outsl
fsubl
jp
std
jno
movups
mov
xchg
pop
out
in
and
pusha
loopne
sub
lods
insl
or
rcrb
roll
jg
popf
fisubrl
mov
mov
adc
and
push
fisubrs
movsb
jnp
cmc
xor
popa
or
mov
mov
lock
loop
lods
xchg
pop
je
push
inc
xchg
push
mov
push
mov
shrb
loop
inc
and
cltd
fisubl
in
sbb
xchg
lcall
pushf
xchg
lds
cmpsb
lods
rcrb
xchg
mov
enter
mov
jne
arpl
inc
ret
hlt
es
jno
sbb
andb
jnp
add
or
pop
in
mov
xor
push
xchg
nop
scas
test
and
and
movsb
sbb
fsts
add
in
jecxz
enter
daa
jl
std
cmp
mov
sbb
mov
push
mov
mov
inc
pop
and
lahf
aam
fs
fwait
dec
cld
test
fucomip
mov
cmpsb
sub
pop
add
and
pop
outsb
cmp
push
push
xchg
loope
inc
push
sub
add
fisubrl
or
xchg
push
or
sbb
lock
shrb
rorb
or
mov
pop
in
dec
lcall
jnp
nop
popa
mov
pusha
adc
and
addb
scas
mov
jle
mov
cmpb
nop
adcb
fs
or
icebp
inc
pop
fdivs
and
mov
addr16
rorl
sbb
insl
lods
sahf
push
popf
cmc
mov
mov
outsl
fsubr
or
pop
xchg
cmp
sbb
fs
pop
je
ret
mov
inc
lods
mov
repz
out
jbe
cli
das
pusha
lcall
loope
or
push
mov
loopne
dec
and
or
adc
shrl
cmp
data16
test
sbb
xor
insb
jae
cmp
cmp
in
stos
push
sbb
mov
inc
cli
aad
movsb
enter
push
dec
mov
lds
mov
repz
test
lea
xchg
push
call
jecxz
aam
incb
adc
cmp
pop
cs
loop
push
mov
inc
sub
aas
or
lods
dec
cmc
xlat
inc
je
outsb
insb
jecxz
call
mov
jp
xchg
cwtl
test
mov
add
mov
pop
adcl
mov
xor
add
fwait
das
je
mov
mov
bound
jae
pop
popf
in
insl
xlat
dec
mov
or
pop
mov
nop
inc
jbe
cmp
mov
add
xchg
and
hlt
add
xchg
rolb
and
les
ret
mov
inc
fstl
mov
ljmp
lock
leave
mov
gs
dec
loopne
mov
popf
jecxz
push
clc
test
dec
add
cltd
std
lds
mov
ror
push
out
out
xchg
dec
cmp
or
and
lods
shl
das
hlt
pop
data16
stos
push
adc
out
imul
aam
cld
add
adc
iret
sbb
out
dec
or
mov
xchg
mov
mov
adc
inc
dec
push
fsubrl
inc
fcomi
lcall
push
push
push
cmp
ret
mov
jl
bound
stc
pop
in
pop
mov
dec
inc
sub
jmp
in
mov
mov
enter
jecxz
mov
inc
mov
pusha
jnp
fs
jecxz
xchg
cltd
add
hlt
xchg
xchg
out
addl
xor
push
js
push
std
push
stos
test
and
test
push
xchg
mov
test
adc
js
iret
dec
nop
outsl
ret
and
xchg
inc
sahf
out
jae
inc
aas
push
xorb
push
mov
repz
mov
dec
imul
ret
scas
fs
lds
inc
mov
sbb
stos
leave
xor
arpl
clc
sti
arpl
inc
inc
xor
dec
enter
jnp
aaa
int
inc
or
or
loope
dec
int3
aad
int3
pop
adc
fiadds
in
shr
jo
lods
cli
scas
arpl
adc
stos
pop
fdivrl
pop
sub
push
ficoms
js
lret
enter
daa
jnp
jne
ss
bound
in
xor
sub
xor
cltd
pop
jns
dec
xchg
inc
and
inc
lahf
repz
test
stos
sbb
test
daa
pop
sub
js
xchg
jmp
lods
mov
push
clc
sbb
cmp
pop
cmp
sbb
and
push
in
lahf
popl
mov
inc
add
popa
add
jo
adc
push
cmp
int
in
sub
popl
in
mov
out
fdivrl
mov
subl
mov
sbbb
pop
mov
pusha
push
mov
lcall
mov
cwtl
shl
fdiv
xchg
scas
negl
and
es
cmp
mov
test
inc
push
jno
push
inc
push
imul
inc
loop
repz
fs
mov
adc
shlb
xchg
mov
inc
out
enter
jge
push
jb
cmp
lcall
jno
jge
jo
stos
loopne
pop
movsl
pop
pop
add
adc
dec
es
shll
out
adc
cmp
nop
xlat
pushf
mov
sub
pop
aas
in
adc
pop
dec
dec
ds
repnz
dec
pushl
fcmovnu
test
lahf
repz
mov
lea
dec
call
bound
pop
mov
push
adc
xor
jmp
mov
or
dec
lods
inc
inc
shr
aas
cmpsl
sbb
cmovns
je
push
hlt
jecxz
dec
into
movb
std
and
xlat
cwtl
aas
mov
mov
xchg
xchg
mov
call
dec
lret
jns
fldt
movl
das
push
add
icebp
mov
in
fucomp
roll
movsb
call
dec
add
push
lret
lods
fdivp
sbb
arpl
and
shlb
mov
add
rcl
sbb
sub
shl
ret
dec
insb
sbb
jo
fnstsw
inc
stos
clc
pop
orb
in
insl
iret
popa
inc
mov
lods
sarb
fidivrs
in
adc
movzwl
jnp
xor
lea
jmp
bound
out
test
sahf
cld
xchg
push
mov
adc
aaa
out
into
mov
jae
sub
ljmp
push
cmp
cmc
xor
inc
mov
xchg
mov
pop
into
cltd
test
mov
add
test
jns
fwait
push
scas
or
jne
pusha
jb
xchg
cmp
sub
add
push
mov
in
pop
notl
xchg
push
scas
or
int
addr16
jmp
mov
movsb
sbb
mov
or
and
in
inc
or
push
icebp
cltd
fucomip
pop
les
shrb
adc
adc
xor
popf
sub
push
mov
cmp
bound
sub
add
jnp
fcoml
push
push
cld
iret
adc
rclb
ret
and
loop
cwtl
inc
test
push
push
inc
add
icebp
push
and
leave
xchg
ror
sbb
jp
imul
ret
scas
and
sbb
push
rclb
mov
outsb
cmp
leave
cmpsl
loope
hlt
inc
arpl
in
jge
add
popf
or
aaa
mov
adc
pusha
leave
pusha
add
mov
pop
inc
add
xlat
xor
or
xchg
cwtl
and
in
cmp
or
push
sub
xchg
inc
in
mov
add
add
xlat
cmp
test
push
roll
dec
sub
jbe
push
xor
lahf
adc
cmp
jne
icebp
inc
adc
mov
push
pop
mov
pop
in
mov
push
push
push
loope
sbb
out
cmp
mov
and
rclb
out
inc
cmpb
sbb
test
loopne
aas
iret
scas
adc
int
loope
sub
fcmovbe
lcall
pop
fsub
mov
sub
cmpsl
aas
outsb
add
pop
test
popa
fldl
mov
jbe
mov
mov
push
push
xor
fsubrs
test
mov
dec
and
daa
sahf
mov
mov
sbb
pop
xor
adc
outsl
lcall
stc
push
mov
xor
and
ss
xchg
lods
mov
mov
and
pop
xchg
cmp
scas
lret
pusha
adc
sub
or
into
push
or
gs
adc
pop
jp
lret
int
imul
xlat
data16
sbb
cmp
sub
sub
mov
mov
andb
sti
sbb
and
in
sub
pop
nop
pop
in
push
pop
cmc
jecxz
pop
shll
scas
mov
cmp
rcrb
loope
or
add
adc
pushf
mov
pop
jmp
fcomps
jns,pn
mov
inc
pop
cmp
aas
inc
lcall
jecxz
bound
push
jecxz
cmc
add
dec
or
enter
cli
mov
mov
fadds
mov
test
fcmovbe
dec
pop
stc
je
mov
outsb
cli
lock
stos
inc
mov
insb
clc
jg
js
aam
sbb
insl
movsl
or
outsl
cmpsl
jns
sbb
adc
mov
fists
mov
sbb
sub
pop
and
shrb
add
aam
andl
frstor
xchg
clc
cltd
dec
jg
or
lock
fisubrl
in
out
mov
sub
movhps
add
repnz
test
inc
inc
push
jne
popa
dec
or
loopne
jmp
xchg
lods
loopne
jno
push
shll
or
out
xor
sbb
inc
adc
xor
sbb
mov
imul
mov
mov
jge
mov
mov
rorb
xchg
fwait
xchg
fs
andb
jne
push
mov
jae
out
or
jmp
jns
push
pop
in
mov
xchg
mov
mov
aad
stc
sub
fildll
adc
jb
mov
movsb
xchg
jnp
dec
repz
jp
push
pusha
mov
js
or
lock
aas
jg
jmp
sub
mov
mov
pop
popf
dec
sub
jnp
out
fmull
and
insb
shlb
inc
lods
push
pop
mov
adc
sbb
pop
sbb
flds
or
push
push
int3
dec
or
inc
mov
loop
mov
out
sub
lods
inc
imul
shrb
mov
sbb
adc
jns
leave
push
jne
hlt
mov
arpl
or
jge
and
aaa
dec
and
lock
stos
or
pop
jb
adc
dec
cmpsl
mov
dec
int
jo
adc
loope
rcr
loopne
enter
mov
jp
jbe
dec
shr
cwtl
insb
mov
std
je
daa
jns
adc
pushf
mov
jno
fidivrl
and
aam
xchg
fwait
sbb
pop
push
loopne
pop
xor
and
add
push
adc
call
push
inc
js
inc
mov
imul
pop
sub
jae
imul
fdivrl
addr16
or
fwait
ss
popl
cmp
pop
add
jns
xor
dec
xchg
int
ret
add
add
pusha
loope
dec
add
fcoml
xchg
lds
sub
test
adc
jg
xchg
test
pushf
mov
mov
int
and
push
adc
data16
mov
sbb
mov
scas
incl
rcll
xchg
xchg
sahf
push
mov
cmc
fists
xor
pop
int
jns
xchg
loop
dec
add
aad
or
sbb
mov
dec
ss
pop
lods
jb
jmp
out
in
adc
enter
add
cmp
mov
into
aaa
fdivrs
jle
into
pop
cltd
cld
repz
add
dec
mov
add
add
je
jecxz
or
xlat
sbb
sub
adc
sti
lret
mov
movups
nop
repnz
sbb
cmp
xor
aaa
les
push
jge
aaa
imull
call
pusha
mov
pop
pop
out
imul
pop
xchg
das
jmp
mov
das
inc
out
incl
mov
cmpsl
jb
imul
jnp
jecxz
loope
dec
jmp
test
mov
cmp
pop
sbb
daa
js
or
insb
pop
pushf
push
enter
adc
adc
push
test
mov
add
sbb
daa
movups
inc
orb
insl
cmpsl
js
cmp
icebp
adc
adc
lret
dec
rolb
and
lds
push
inc
in
sarb
enter
push
aam
test
push
les
jbe
lods
fisttpll
jne
dec
mov
ljmp
xchg
lods
cmpsb
and
mov
clc
xchg
jb
adc
cs
pcmpeqw
pop
add
jbe
pushf
roll
cmc
out
push
cmp
dec
jno
imul
and
mov
pop
addr16
lock
and
out
xchg
std
rolb
popa
sub
xor
cmp
xor
into
jge
les
pop
xchg
imul
jp
int3
dec
sub
inc
mov
adc
push
and
fld
mov
shll
pop
mov
push
in
pop
pop
xchg
xlat
mov
mov
or
pop
or
and
fsubrs
loop
mov
mov
or
dec
test
std
test
fildll
pop
xchg
xchg
adc
movsb
jmp
clc
mov
subl
in
out
cmc
call
mov
mov
and
and
fildll
sub
aam
jle
push
dec
push
movsb
into
jg
pusha
mov
ret
fcompl
mov
pop
jae
mov
leave
push
mov
roll
jo
scas
xchg
outsb
aaa
rcrl
mov
imul
fisubrl
sub
mov
adc
cmp
xchg
lods
fxtract
flds
jo
iret
movsb
sarb
ljmp
cli
rorb
inc
out
add
aaa
jge
mov
ret
adc
addr16
scas
add
or
movsb
dec
lahf
pop
push
lret
aam
jbe
jb
in
jg
mov
clc
int
daa
js
pop
cmp
jno
jno
pop
test
pop
dec
push
test
inc
dec
in
arpl
mov
push
daa
das
push
out
aaa
test
or
xor
mov
aam
pop
push
fsubrs
sbb
sub
sbb
aam
mov
sub
jbe
out
movsb
negb
sbb
ret
and
in
fstl
mov
cltd
addr16
movsb
mov
adc
pop
loopne
mov
std
cmc
sahf
push
and
test
cmp
push
sub
add
test
add
out
pop
sarb
aad
mov
aas
or
mov
mov
int3
data16
jo
or
fcomps
neg
hlt
mov
mov
mov
loopne
int
popa
sahf
testb
xor
sub
test
stc
mov
lods
adc
mov
ss
stos
fisttpll
push
data16
sti
int3
gs
cmpsl
mov
jp
pop
or
aas
into
sbb
fsub
sbb
mov
cld
loop
imul
insl
in
data16
in
sbb
and
clc
xlat
pop
std
pop
sub
das
sbb
push
dec
or
jp
sub
aad
adcl
sbb
xchg
inc
orl
les
fpatan
xor
xchg
stos
dec
test
jle
data16
nop
pop
lret
adc
jmp
popa
jmp
pop
ljmp
xchg
xchg
dec
ds
test
and
je
daa
jmp
push
cmp
sbb
jmp
aas
movsb
xorl
push
fstpt
add
aas
lods
sbb
jo
mov
lock
mov
mov
shll
sbb
push
fwait
insl
jae
nop
dec
not
inc
cmpsl
ja
and
in
push
cld
in
push
lret
mov
data16
out
out
mov
pusha
stos
pop
rclb
pop
sub
fidivl
stc
leave
lods
es
rcll
pop
push
xchg
mov
pop
ljmp
push
lods
adc
pushf
mov
mov
sub
hlt
add
scas
push
mov
lret
adcl
mov
fsubs
test
inc
out
xchg
rolb
dec
in
pop
adc
xor
add
jl
popf
decl
or
xor
dec
or
pop
or
mov
xchg
cmpl
cmp
testb
insb
inc
aaa
xchg
repz
lcall
enter
mov
out
sbb
repnz
jns
mov
in
pop
lods
xchg
lds
pop
lea
or
test
mov
adc
adc
mov
jns
xchg
dec
mov
in
out
jl
out
lock
cwtl
xchg
in
jb
movsl
xchg
pop
xchg
ret
popf
aas
cmpl
add
ds
add
test
and
mov
jnp
jne
jle
outsl
out
jmp
jbe
cmp
mov
lret
mov
ret
hlt
pop
xchg
inc
lret
jae
jg
push
mov
dec
push
lahf
jg
fisubl
mov
dec
sbb
mov
out
push
shrl
mov
call
mov
addr16
or
mov
hlt
and
shll
and
inc
shlb
add
into
xor
aaa
leave
push
mov
add
ss
pop
rol
xchg
ficoms
inc
mov
into
daa
scas
fists
lcall
jb
push
sbb
jbe
pmuludq
data16
push
daa
ja
cmp
loop
jno
push
pop
jl
inc
jmp
jne
inc
push
and
cli
and
outsb
jl
mov
jmp
sahf
inc
rcr
cmpsb
mov
xchg
js
adc
pop
test
mov
loope
outsl
mov
ja
cmp
int3
lods
sbb
adc
push
xor
popl
popa
xorb
roll
movsb
pop
mov
int
xor
sti
adc
pop
pop
testl
jnp
xor
out
push
outsb
sub
test
ret
fwait
sbb
or
xlat
dec
and
fisttpl
sahf
push
jae
push
cmp
stos
negl
pop
mov
mov
sbb
cld
and
cltd
pop
push
cmc
insl
sti
divl
aad
xor
xor
loop
jb
stc
inc
test
pop
jmp
dec
in
ss
mov
sub
push
and
cli
cs
xor
mov
into
std
dec
pushf
mov
mov
mov
adc
mov
pusha
adc
xor
add
aas
mov
xor
pop
imul
jl
sbb
rcll
push
mov
aad
xor
nop
test
sub
inc
xchg
inc
push
fldenv
cmp
adcl
pop
bnd
pop
out
pop
jge
inc
adc
xchg
pushf
mov
lahf
jmp
repz
mov
inc
mov
inc
aas
and
jg
xchg
mov
dec
dec
shll
lret
jecxz
test
push
add
ja
sub
cmp
xor
dec
dec
ja
in
loop
shlb
lret
enter
mov
mov
xchg
imul
rcr
imulb
pop
xchg
dec
icebp
mov
mov
ret
int
cld
btc
mov
xchg
cmp
sti
int
pop
jg
push
shlb
jp
sub
adc
mov
cmp
jl
fidivrl
cmp
xchg
enter
mov
rorb
mov
ds
aaa
xchg
add
push
aas
inc
sbb
xor
cmp
mov
jl
xchg
hlt
push
push
mov
cld
out
cmp
sahf
punpckhwd
mov
mov
pop
mov
and
jecxz
ja
dec
add
loop
xor
jo
xor
movsb
aad
loop
xchg
xchg
mov
mov
mov
and
into
xchg
leave
or
clc
sbbb
push
mov
push
jecxz
mov
cwtl
pop
out
cmpsb
int
bound
std
sbb
fwait
mov
xchg
jne
shll
mov
xchg
or
lds
fs
mov
jl
mov
call
and
pusha
xorb
fbld
hlt
xchg
mov
subb
dec
test
out
push
dec
mov
cmp
xor
lahf
data16
ja
sub
fcmovne
jle
mov
push
xor
rcll
test
iret
sub
ret
jb
mov
xchg
shlb
mov
adc
mov
mov
fcmovbe
dec
mov
sbb
cmp
imul
test
lds
adc
sarb
xchg
repnz
pop
pop
hlt
outsl
xchg
cmp
jge
aad
sbb
aaa
cli
or
jmp
insb
or
fidivs
popf
xor
jns
inc
scas
mov
xor
in
clc
push
movsb
pop
lcall
iret
and
in
dec
xchg
pop
enter
daa
jbe
cmp
int3
lahf
jl
jmp
jp
or
out
dec
sub
lahf
mov
jbe
cli
mov
jb
push
jle
cmpsb
cmp
push
pop
js
in
pop
call
mov
loope
jle
sub
movsb
cmp
lea
rcrb
sahf
shrb
testl
lods
push
add
adc
pop
jae
int
mov
adc
lcall
sbb
inc
aam
cli
cli
jno
mov
test
repz
andb
jg
imul
mov
pop
push
mov
lock
jbe
adc
xchg
popa
imul
je
lret
pop
rcrl
test
int3
rcrb
xor
aas
xor
lcall
into
ror
stc
cli
push
aad
popa
pop
adcb
pop
inc
out
lods
daa
fwait
inc
mov
fsub
push
push
and
popa
mov
jecxz
shlb
into
loopne
aas
gs
jae
loopne
jb
pop
notb
imul
or
sbb
xchg
pusha
adc
xlat
fisttpll
sub
mov
pop
in
sub
sar
fcoms
ret
dec
or
fisubrl
mov
test
int
fcmovb
xchg
repz
scas
xchg
xchg
xor
jg
je
cli
fstpl
pop
xor
hlt
adc
or
jmp
lock
cs
dec
push
inc
lret
mov
aas
ret
jb
test
dec
je
jl
jecxz
cmp
add
fs
xor
out
inc
mov
sbb
mov
subl
xchg
and
mov
mov
push
jle
es
xor
scas
gs
mov
dec
das
jg
movsb
lods
and
adc
jecxz
lock
xchg
insl
inc
inc
add
shll
cmpsl
jne
in
mov
lcall
lret
fwait
shll
stc
mov
in
xchg
lret
mov
shl
adc
sub
mov
xchg
pushl
fldl
cmp
clc
test
xchg
pop
pop
pminsw
insl
iret
popa
mov
ljmp
popa
clc
jle
inc
sbb
data16
cltd
inc
sti
jne
mov
popa
or
cmp
mov
xchg
call
pop
pop
push
inc
clc
out
mov
aad
add
mov
xor
sahf
loopne
mov
push
jae
icebp
fstp
xchg
or
pop
jne
hlt
ja
out
dec
add
lret
inc
gs
js
inc
std
enter
pop
jne
jle
mov
and
bound
clc
inc
jns
jmp
push
xchg
les
cmp
lret
jne
addr16
adc
out
mov
or
mov
push
mov
jae
xchg
cld
pop
pusha
sbb
cld
xchg
xchg
mov
pop
jmp
pop
jno
sbb
mov
mov
cltd
xor
push
ja
adc
mov
stc
jnp
add
jmp
jns
rclb
icebp
push
jle
mov
ret
xchg
mov
inc
loopne
bound
aaa
push
push
adc
or
xor
inc
popf
fs
mov
xchg
sbb
mov
dec
scas
mov
stos
lds
mov
mov
or
sub
arpl
xchg
adc
sub
cmp
aaa
inc
pushf
into
or
ficompl
int3
push
mov
pop
cs
int
xor
aam
cli
scas
popf
add
sbb
push
add
jnp
jbe
cmpsb
pusha
in
xor
loope
jmp
out
aas
cmp
in
xchg
jl
gs
dec
push
popf
pop
push
jmp
jl
js
dec
and
mov
lahf
lods
or
pusha
hlt
lds
insb
and
cmpsb
rol
pop
adc
dec
and
push
xchg
js
lds
insl
cmp
sbb
adc
pop
sbbb
xlat
jno
sbb
mov
add
cltd
repnz
ljmp
xor
pop
sahf
inc
lcall
jmp
sub
stc
jle
out
push
aas
cmpb
add
mov
sub
insl
and
push
jns
jnp
and
fcoms
mov
push
cli
insb
lret
fadd
mov
add
pop
push
sahf
mov
xor
lahf
popa
imul
fs
test
cld
orl
mov
ret
out
insb
data16
xchg
rcrb
pop
and
cmp
push
pop
or
fwait
gs
pop
adc
or
adc
pop
xlat
add
cmp
add
cld
sbb
shr
mov
push
adc
sub
add
xchg
scas
or
fwait
and
and
pop
mov
dec
cmp
lret
rol
in
int3
repz
dec
xchg
repz
rorl
call
pop
push
jae
jecxz
adc
shr
pushf
or
jmp
loopne
cs
inc
cmovo
jg
aas
popa
inc
xorl
cmovns
sbb
jecxz
cmp
pop
icebp
std
or
cwtl
mov
shl
sbb
icebp
xorl
jae
fcmovnb
xor
sub
and
and
cmp
out
cltd
mov
das
roll
pop
sub
insl
sub
inc
dec
out
mov
je
mov
add
icebp
jno
jle
gs
lret
or
mov
aam
and
xor
iret
pop
mov
loope
sub
rcl
push
xlat
push
ret
cmpsb
mov
xorb
sub
sub
sahf
and
sarl
push
lods
push
ljmp
call
lock
cmc
mov
inc
add
or
cltd
jle
jno
enter
xor
test
insb
les
fbstp
test
sbb
pushf
cmp
sbb
push
rcll
pop
adc
push
stos
loopne
fs
and
pop
add
int
mov
xor
mov
xor
lret
inc
mov
jp
loopne
aad
and
xor
sub
scas
mov
sub
or
xor
fwait
jno
push
push
mov
lds
jl
mov
mov
bound
jp
in
push
insl
xchg
adc
je
addb
addr16
pushf
jp
inc
stc
mov
mov
sub
xor
sbb
mov
mov
pop
cmp
pusha
xchg
and
pop
subl
out
stos
mov
out
sub
mov
aad
sbb
mov
repnz
dec
fimull
fcomip
movsb
jle
sbb
adc
adc
iret
call
xchg
clc
ds
jmp
push
add
jns
or
lods
inc
inc
sbb
insl
fidivrl
arpl
pop
adc
scas
sbb
push
shl
cwtl
mov
pusha
mov
push
hlt
add
xor
fistl
sbb
int3
aaa
push
test
add
mov
int3
inc
sub
pop
outsb
jnp
jns
ss
das
jns
scas
jl
jp
mov
lret
cmp
ret
movsb
je
mov
jbe
lahf
mov
sbb
js
in
outsl
daa
je
lret
push
jno
and
sti
mov
dec
ret
push
into
movsl
jg
sahf
and
out
lahf
int3
pop
or
fdivl
call
mov
or
inc
jl
pop
cmp
out
js
inc
dec
pop
xchg
adc
and
loope
or
mov
cmp
fsubl
ds
jl
adc
loop
inc
and
ljmp
add
jae
xor
cmc
movsl
dec
or
xchg
sub
pop
fdivl
popa
push
sbbb
fdivrs
test
lods
sbbb
jg
or
mov
inc
lods
mov
adc
mov
push
jl
ret
scas
adc
or
add
mov
roll
mov
mov
sahf
cmpb
ret
xor
aam
outsl
aam
out
hlt
xor
fs
jl
cmp
movsl
ss
lahf
fisubrs
inc
xor
push
push
xor
jns
xor
out
cmp
or
sbb
pop
fbld
lods
imul
pop
xchg
pop
xor
in
dec
jle
imul
mov
data16
cmp
into
mov
aad
dec
mov
add
sti
ss
mov
sahf
lods
nop
cmp
dec
cwtl
jecxz
inc
iret
xchg
cld
flds
jnp
lock
shl
insb
xor
mov
lea
pop
and
push
push
fcmovne
test
adc
lods
pushf
mov
xchg
xor
inc
mov
aas
add
lods
jb
sub
dec
lods
mov
je
and
jecxz
jns
pop
adc
mov
in
dec
mov
push
sub
cmp
mov
hlt
mov
lret
mov
mov
dec
mov
das
insb
fistl
jns
lds
mov
mov
divb
icebp
insl
btr
dec
loop
enter
mov
dec
into
cmp
nop
insl
test
jns
and
add
pop
pop
fsub
scas
rcrb
lret
aam
jle
ret
xor
in
fisttpll
cli
clc
sti
cmp
push
sub
call
xchg
pop
mov
cmpsl
int3
push
xchg
aad
in
shl
and
push
cmp
hlt
test
movsl
test
pop
sbb
pop
dec
dec
je
shrb
push
lea
mov
fimull
stos
iret
mov
add
call
push
sub
jg
das
or
faddl
mov
jge
cmpsl
mov
jmp
inc
ja
cli
nop
dec
call
outsl
jle
xchg
or
fwait
mov
stos
lock
fildll
out
inc
sti
mov
jns
scas
sub
cmp
in
bound
test
rcll
jp
pop
scas
mov
xchg
cwtl
mov
xor
jecxz
in
lcall
ret
and
xchg
xor
xchg
jmp
out
xchg
and
popf
cmp
mov
stos
mov
or
into
dec
mov
mov
movsb
test
cmp
adc
adc
pop
jno
pop
arpl
push
mulb
das
push
cwtl
clc
mov
out
jae
push
fwait
pop
cmp
out
nop
outsb
xchg
and
stos
imul
daa
and
push
jl
mov
mov
stc
leave
call
pop
arpl
adc
jge
lea
mov
icebp
cmpsb
or
push
lret
pop
mov
sub
sbb
js
clc
xlat
sub
scas
pop
jnp
and
sub
adc
or
xchg
in
jbe
or
in
add
xor
jae
iret
cmp
stos
mov
xor
pop
jl
ficompl
xor
out
mov
mov
xchg
and
std
enter
cmp
clc
mov
fists
icebp
push
add
inc
std
icebp
mov
test
pop
arpl
js
shll
push
fs
sub
and
cmp
fcmovbe
adc
mov
sub
cmp
aas
sbb
dec
add
mov
fcmovbe
push
mov
cld
pop
pop
push
pusha
lcall
mov
xchg
gs
sub
inc
imulb
aas
cwtl
test
cli
addb
fs
sub
mov
xor
ds
cmp
enter
xchg
xchg
jno
popa
rol
ficoms
mov
out
sbb
pop
test
mov
imul
nop
jle
mov
shl
xchg
in
pop
adc
add
adc
sub
fdivl
dec
out
les
cli
out
xor
shr
cmp
xor
or
ds
mov
fsub
and
adc
daa
shrb
mov
or
inc
outsl
sbb
scas
enter
fstpt
dec
mov
xchg
sub
arpl
insl
sbb
loope
lcall
pop
fs
testl
fnstcw
sti
sti
push
push
repz
xchg
jns
std
lea
std
and
pop
leave
or
cmp
int
rcrb
shrl
cs
icebp
inc
adc
sbb
adc
jb
mov
aad
divb
jecxz
std
inc
pop
lods
loopne
pop
pop
add
mov
cltd
adc
fs
jp
and
cmp
and
pop
outsb
in
mov
sti
push
cmp
dec
pushf
shll
push
cs
sbb
sar
test
insl
testb
cmpsl
jb
mov
icebp
pop
shl
mov
mov
mov
movsl
and
sti
mov
or
pop
mov
aam
js
ret
les
es
push
fnsave
sahf
clc
ss
xchg
les
sti
ljmp
mov
sub
idivb
lret
xchg
sbb
rcll
push
cmc
imul
add
jnp
cltd
in
mov
mov
iret
aas
mov
mov
shrb
lcall
roll
jb
pop
imul
add
add
cmp
xor
or
xor
mov
sbbb
pop
cmpsb
mov
jecxz
fcmovnu
inc
inc
sub
inc
or
mov
sbb
test
fnsave
and
push
jns
xchg
movl
mov
ficompl
or
sbb
and
mov
movsb
icebp
xchg
dec
sti
pusha
inc
in
jg
pusha
out
mov
mov
lret
jmp
mov
xchg
out
mov
or
xor
loopne
add
mov
insb
and
sbb
jle
push
mov
adc
jne
ret
xor
outsb
sbb
lahf
jae
dec
push
push
pop
jmp
or
mov
sbb
mov
fnstsw
imul
mov
shrb
mov
push
xlat
loopne
pop
insl
outsl
hlt
fwait
js
arpl
cmp
loope
push
jge
call
fs
test
mov
clc
and
xor
int3
sbb
lret
fidivrs
mov
jo
stc
lcall
pop
fnstcw
leave
daa
aas
movsb
mov
jbe
in
mov
jmp
pop
adc
jb
cmp
jno
or
jl
shlb
mov
fimuls
lea
mov
lahf
or
push
flds
test
int
jns
mov
cld
pop
mov
sarb
cmc
and
in
add
pop
scas
loope
and
pop
mov
daa
ds
sub
adc
cwtl
mov
fimuls
movsl
adcb
aam
mov
add
and
sub
mov
push
fisttpll
fidivl
lcall
icebp
fdivrl
sbb
sub
sbb
nop
fmul
jg
mov
orb
aam
and
xor
mov
fadds
mov
pop
shll
mov
jle
sbb
mov
sahf
enter
push
out
or
pushf
pop
adc
fisttps
stc
icebp
xor
sbb
fxch
dec
ss
sub
lods
ret
sub
cmp
dec
out
mov
cli
sub
cmp
popa
pop
or
sbb
insb
sbb
gs
ja
loopne
sbb
pop
jb
jg
out
add
adc
mov
add
outsb
fsubl
sub
sbb
addl
sub
clc
hlt
in
fmuls
insl
incb
aad
test
nop
out
dec
cmp
test
inc
cmc
sarl
fnstenv
sub
repz
dec
xchg
cmp
jge
pusha
push
cmc
pop
cld
adc
adc
xchg
pushf
or
cmpsl
jmp
dec
jmp
inc
cwtl
jg
inc
aaa
gs
ds
jb
jg
dec
fwait
shrb
inc
adc
pushf
bound
sahf
cwtl
shrb
movsb
mov
int3
adc
sti
pop
sbb
repz
cmp
mov
or
push
das
sub
mov
and
sub
cmp
idiv
dec
cmp
mov
dec
fadd
ja
jno
xlat
mov
not
push
cld
out
or
mov
mov
adc
inc
pop
sbb
push
les
aam
cld
ret
push
mov
or
scas
clc
jno
cmp
idivl
popa
push
pusha
les
ret
bound
arpl
decl
push
add
add
subb
inc
js
jmp
mov
stos
dec
inc
popa
aam
lahf
daa
mov
sbb
ret
fcom
pop
sub
jbe
lods
pop
adc
dec
sarl
push
arpl
xor
jl
xor
sti
out
sub
xchg
mov
popa
fdivp
ja
sbb
xchg
mov
or
cmp
push
lcall
mov
push
ljmp
out
adc
mov
inc
in
cmp
xchg
add
out
aaa
popf
in
or
shr
inc
pushf
inc
mov
mov
mov
adc
out
pop
in
enter
enter
pop
mov
outsl
mov
xchg
test
pop
adcl
xchg
out
cmc
fcomps
mov
popa
or
cld
sbb
mov
jnp
push
jecxz
push
pop
pop
push
xchg
jge
adc
aad
add
loope
pop
rcrl
sub
jb
jp
push
push
in
mov
and
ficoml
ficoms
pop
or
imul
jnp
fistl
rolb
or
mov
leave
and
hlt
out
cmc
arpl
mov
sarb
sbb
xor
test
add
inc
push
pop
ljmp
xor
inc
fcomps
and
add
or
movsb
adc
mov
pop
in
shlb
lds
jno
add
jno
xor
jl
sahf
mov
pandn
ja
fsubs
push
cwtl
fstpl
lods
lret
cmpsb
test
cwtl
push
cwtl
inc
sbb
sbb
js
lods
xor
and
xchg
push
pop
cltd
loope
out
sub
repz
cmp
rorb
jg,pt
imul
cmp
mov
sbb
stc
sub
xchg
repz
out
std
pop
int
fdivp
sub
mov
pop
pop
sbb
lcall
pop
fsubr
sahf
stc
sub
out
test
repz
subb
xchg
mov
arpl
mov
mov
mov
and
xchg
fdivrs
movsl
xchg
notl
cmp
rorl
mov
ljmp
imul
pop
dec
fdivl
testl
loop
dec
stc
rorb
sub
shrd
aad
out
sub
cli
pusha
fnsave
cmp
bound
dec
inc
fwait
into
dec
xchg
gs
fnstsw
push
mov
push
adc
adc
imul
dec
add
movsl
or
sbb
mov
adc
mov
in
inc
rcll
sti
inc
cli
xor
daa
jp
aad
mov
nop
lret
dec
mov
rolb
scas
fldlg2
cmc
and
adc
fnstenv
xchg
pushl
testb
mov
xor
pushf
push
jnp
cltd
pushf
mov
mov
cs
testb
push
inc
push
test
aas
cmpsb
dec
adc
je
or
pop
gs
std
cmpsl
fcmovnb
cwtl
lea
jecxz
and
ret
out
sahf
dec
stc
arpl
cmpl
jg
jmp
push
mov
mov
fistpl
mov
fwait
icebp
dec
idivb
les
dec
shl
jb
jo
inc
mov
int
sbb
adc
mov
movsb
and
popf
jmp
pop
cmp
rclb
sahf
data16
push
ret
loop
insl
es
mov
clc
lods
jle
xchg
inc
jnp
ljmp
call
mov
adc
or
popa
push
jmp
add
jo
test
mov
cltd
push
push
stos
into
dec
test
test
pushf
sbb
cmc
pop
mov
dec
in
lods
mov
add
movl
or
imul
or
cmp
mov
jno
pop
pop
sbb
jmp
jb
xor
shll
pop
nop
scas
or
nop
movsl
fwait
sub
lret
sti
pop
cwtl
mov
cld
out
loopne
pop
imul
test
and
xchg
xchg
dec
xchg
into
mov
mov
insb
or
clc
or
lret
jge
and
jns
mov
inc
dec
sarl
in
jne
pusha
and
jb
and
xchg
xchg
stos
mov
jmp
push
inc
testb
mov
pop
mov
mov
fsubrl
adc
sbb
adc
push
inc
jle
push
dec
push
fdivrl
test
fs
ljmp
jne
inc
pop
test
dec
push
loope
dec
or
cltd
mov
inc
sbb
jmp
or
mov
sbb
scas
xchg
jno
scas
movsl
call
mov
mov
lods
lds
hlt
xor
arpl
push
cmp
fnstcw
dec
jb
jmp
into
aaa
add
or
jle
add
imul
pop
mov
fiadds
mov
mov
and
mov
inc
movsb
mov
aaa
mov
in
mov
sbb
daa
jo
push
cmp
shlb
cmpl
dec
jle
stos
push
pop
mov
movsl
fdivrs
lahf
dec
shl
push
jg
mov
les
or
arpl
outsb
inc
stos
leave
cltd
cmpsb
dec
out
pop
fdivr
dec
js
mulb
push
adc
int
sub
sbb
cmpsl
lcall
mov
push
call
dec
mov
cld
xorb
push
sbb
ret
sbb
and
xor
pop
mov
add
fadd
clc
sub
cmpsb
pop
fadds
lcall
popa
fcoml
mov
test
add
and
xorb
and
push
mov
out
into
and
push
mov
mov
stc
mov
popa
lret
jae
mov
sub
sbb
outsl
sahf
push
movsl
xchg
cmc
fimuls
xor
cmp
jae
loop
popa
pusha
stc
inc
xor
adc
pop
rolb
loop
das
xor
cli
xchg
data16
xor
aaa
adc
mov
out
gs
imul
xchg
pop
push
imul
insl
add
cmp
nop
sbb
inc
fstps
stc
dec
adc
filds
sub
xor
in
scas
jmp
sti
repnz
jecxz
dec
icebp
aam
sti
nop
movsl
push
dec
adc
lods
inc
sbb
cmp
les
mov
xchg
ret
cmp
call
xlat
fdivl
adc
lret
cmp
jmp
or
cs
xchg
inc
insl
mov
aas
jl
inc
jb
mov
shlb
shl
cmpsl
and
push
jo
cwtl
dec
fcomp
mov
mov
out
sub
cmp
mov
mov
test
mov
das
call
xchg
addr16
out
pop
shr
lea
insl
stos
inc
gs
into
mov
cmc
mov
movsb
jno
cld
cmp
addr16
xor
popf
test
mov
pop
arpl
sub
dec
aam
popa
ret
jno
mov
adc
ss
ret
out
add
fnstsw
jmp
lods
imul
cmp
icebp
lretw
hlt
jl
int3
fadd
add
lret
inc
insl
test
ja
mov
sbbb
add
sub
test
mov
mov
outsl
call
jnp
push
mov
out
cmove
sub
dec
incl
mov
or
push
mov
mov
pop
xlat
xlat
mov
push
adc
xor
inc
out
lea
or
mov
xchg
push
loopne
jne,pt
push
pushl
mov
and
in
and
sahf
mov
loope
add
mov
imul
pop
fnstcw
or
insb
in
xchg
pusha
mov
movsl
adcl
sbb
lret
aaa
dec
out
shrb
jp
mov
icebp
cmc
dec
stos
pop
sub
and
jp
insb
fs
jnp
adc
jle
dec
ret
push
and
adc
cmp
ret
mov
ret
lock
aas
out
test
and
popf
jae
mov
or
adc
mov
fidivrl
push
pop
sbb
sub
addr16
xchg
jmp
clc
add
dec
enter
or
hlt
jl
adc
inc
testl
push
add
cmpsb
pusha
or
ror
or
mov
jge
fscale
inc
pop
dec
sub
xor
not
gs
xlat
sahf
cmpsb
and
add
movsb
sub
js
xchg
cmc
mov
in
sahf
sbb
daa
outsl
loopne
cmp
out
push
jl
mov
dec
in
xchg
inc
push
cmp
ret
xchg
or
outsl
sbb
cs
lods
inc
cmp
shl
dec
pop
inc
adc
aam
pop
mov
jp
loope
fmuls
sub
adc
cmp
inc
ds
adc
sub
sti
rolb
sbb
mov
mov
je
ror
inc
lea
sub
loopne
pop
push
repz
lcall
outsl
fdivrl
sub
addl
outsb
inc
pop
xor
loope
mov
xchg
ljmp
inc
movsb
fwait
mov
jp
and
dec
push
mov
nop
cmp
mov
mov
lret
cmp
icebp
sbb
sahf
mov
add
movsl
xor
xor
inc
jmp
stc
sti
dec
shll
adc
out
mov
lods
js
mov
out
movsb
lret
mov
pop
cmp
loopne
or
ficoms
adc
xchg
mul
mov
sbb
fldcw
imul
and
jge
push
adc
imul
xlat
nop
sub
mov
sbb
sar
jge
insl
pop
inc
int
nop
sbbb
inc
xor
pop
call
and
ja
gs
test
add
rcll
pop
adc
push
pushf
or
push
cs
inc
sub
mov
push
aas
sbb
xchg
jb
add
je
cli
cmc
jecxz
mov
imul
cwtl
add
inc
mov
jl
mov
mov
pop
dec
iret
cmp
fcmovnu
das
xchg
rclb
lock
mov
mov
jno
aad
cmp
test
dec
insl
xchg
fimull
adc
cmpsl
outsb
rcl
xor
cmc
icebp
jnp
jge
addr16
lret
movsb
mov
adc
shr
nop
pop
ja
adc
sub
ds
adc
es
in
cmpsb
fstl
clc
int
and
jecxz
rcl
ljmp
xor
jne
mov
cmp
clc
push
pop
cmpsl
dec
lret
push
lret
cltd
enter
or
xor
xorb
out
test
push
stos
sbb
mov
pop
adc
jl
out
jb
xor
outsl
lret
push
jmp
mov
push
or
xor
pop
xor
mov
mov
xchg
mov
ja
xor
dec
cmpsl
mov
inc
xchg
movsl
fwait
mov
mov
andl
mov
adc
out
sahf
in
and
mov
xlat
push
xor
repz
xchg
in
xor
mov
jae
sub
test
mov
into
hlt
hlt
jp
inc
shlb
adc
mov
push
dec
xchg
sti
and
js
fistps
inc
xchg
push
mov
cmp
movsb
inc
out
push
sti
popf
cld
push
in
push
xor
xor
inc
loopne
insb
iret
subb
jg
in
push
push
jbe
out
mov
ret
push
inc
sub
pop
push
addr16
or
adc
fisubrl
aaa
xchg
aam
in
pusha
jbe
imul
scas
imul
jo
out
rclb
vrsqrtss
hlt
test
xor
xchg
pop
jge
cmp
sbb
mov
or
or
lods
xlat
add
inc
pop
ja
inc
fimuls
fdivs
push
jmp
scas
mov
and
cmp
cmpsb
mov
loope
movsb
jbe
cli
test
enter
daa
outsb
add
cmp
ja
jno
addl
std
cli
pop
dec
pop
lcall
test
xchg
cmp
and
insb
into
push
stc
jo
inc
enter
push
push
rcrl
sarl
inc
dec
pop
loopne
push
push
inc
and
pop
scas
sub
loopne
cmp
cld
ret
adc
add
mov
sbbb
lods
mov
nop
jae
xor
dec
out
aaa
shl
stos
cmp
and
lcall
mov
sub
stos
outsb
movsb
push
xchg
cld
mov
cmp
mov
pop
push
and
cmpsl
push
mov
xor
outsl
push
testl
sub
shrl
mov
aad
sahf
push
jb
cmc
insb
mov
stc
outsl
push
pop
cmp
data16
stc
mov
jns
mov
orl
test
out
and
cmpsb
data16
stc
xchg
das
xor
pop
movsb
or
cmp
lret
mov
fcompl
add
imul
mov
lea
test
dec
cmp
pop
xlat
iret
stc
sub
add
in
test
nop
mov
inc
nop
pop
fiaddl
shlb
inc
inc
mov
lret
int
repz
push
xchg
dec
lret
test
dec
lock
aad
ds
enter
subb
mov
sub
cs
cmc
in
inc
mov
test
cs
ja
je
out
repz
call
std
pushf
inc
negb
pop
mov
mov
dec
mov
shlb
mov
cmp
lock
aas
cwtl
das
cmpsb
pushf
push
mov
add
and
or
testb
mov
push
xor
pop
in
icebp
push
fwait
mov
lret
adc
sub
mov
rorb
add
aam
dec
mov
fwait
xchg
es
pop
and
clc
pop
notl
decl
ljmp
xor
aas
jbe
mov
jns
jno
jg
dec
push
repnz
sbb
mov
cwtl
cltd
dec
add
adc
push
or
sbb
dec
fiadds
cmp
aad
int
mov
cmp
mov
imul
mov
mov
incl
icebp
outsl
or
addr16
sub
mov
mov
mov
dec
and
dec
lcall
or
mov
fwait
mov
jle
jne
adc
jge
jb
mov
cld
jns
pop
jge
jle
mov
mov
jnp
sub
mov
mov
inc
mov
lcall
iret
hlt
les
and
in
aam
pusha
cmc
fisubrl
xchg
and
jmp
mov
call
out
pop
movsb
popf
and
inc
mov
outsl
lcall
pop
push
insb
cmp
dec
jle
push
clc
push
mov
push
iret
sbbl
mov
jae
mov
push
sub
or
or
inc
xchg
cwtl
mov
and
xchg
sub
aas
imul
scas
into
in
test
shlb
loop
movsl
xor
hlt
adc
cmp
repz
sub
jge
or
aaa
aas
push
sub
mov
cwtl
add
movsb
int3
scas
mov
pop
cmpsb
imul
jo
sbb
scas
xchg
dec
cmpsb
and
int3
fldenv
imul
cmc
in
insb
pop
fmul
ror
daa
insl
cmpsb
bound
add
hlt
jno
cmp
jl
pop
daa
dec
lret
pusha
sbb
add
hlt
movsl
mov
adc
mov
adc
push
clc
loop
test
les
and
cmpsb
fdivs
pop
pop
dec
repz
dec
in
pop
pop
mov
push
mov
outsl
sub
sbbl
or
adcb
fsubs
subb
sbb
cltd
xchg
xor
mull
int
int3
or
leave
pop
mov
lcall
push
sub
outsb
pop
movsb
dec
test
xchg
jbe
pop
jecxz
jg
lds
mov
pop
pop
mov
mov
jno
mov
xchg
lcall
sub
stos
testl
outsl
stc
shrl
mov
mov
test
test
outsl
in
out
or
stc
gs
stc
imul
adc
ss
jmp
lods
inc
call
mul
dec
sub
cli
sub
clc
xor
mov
or
mov
into
fstpt
movsl
loopne
repz
pop
or
pusha
push
imul
or
fwait
push
push
sbb
stos
adc
lods
sub
decl
jecxz
aas
in
out
xor
sti
call
mov
mov
adc
fwait
nop
xor
xor
pop
inc
push
jbe
fxch
push
les
ficomps
or
call
push
xchg
sub
sarl
xlat
adc
js
jmp
out
outsb
cmpb
cmp
fnstsw
pop
pop
dec
jb
pop
pusha
dec
out
aad
je
ss
aam
mov
std
inc
xchg
mov
xchg
mov
cwtl
jl
movsl
lret
cmp
add
mov
inc
cs
js
das
test
mov
mov
pop
and
iret
xor
xlat
cli
dec
testb
insl
pusha
dec
out
mov
or
mov
sub
cld
mov
sub
iret
and
or
nopl
mov
push
aam
cmp
adc
lcall
clc
cwtl
inc
or
ss
sub
jno
lods
stos
add
mov
pushf
mov
ds
int
lea
jmp
movsl
pusha
cltd
mov
mov
sub
push
pop
sub
dec
inc
or
xchg
jb
or
push
pop
imul
cmp
dec
add
movsl
pop
ja
and
jns
in
mov
xor
test
mov
xchg
pop
jne
or
and
ja
jl
dec
fcmovnb
inc
mov
jb
add
jne
jmp
dec
mov
sbbl
pop
pushf
cmp
hlt
sarb
adc
or
aam
mov
push
mov
clc
and
sahf
test
push
jp
nop
sub
mov
ds
xchg
dec
dec
pop
or
aad
add
push
scas
fistps
or
inc
ljmp
loop
or
pop
xlat
xchg
popf
dec
icebp
insb
mov
scas
xor
outsl
sbb
movsl
lods
jo
push
lock
jle
rcll
push
clc
lea
adc
sbb
fldl
mov
jae
xchg
cmpsl
push
in
pop
rorb
test
xlat
inc
adc
and
aam
insl
xchg
adcb
imul
scas
xor
rol
lret
cmpsl
popa
mov
clc
adc
leave
sub
test
pop
cmp
arpl
inc
repz
jge
mov
sbb
pop
jg
stos
stos
les
mov
rclb
aad
insb
ficoms
sub
jo
pop
jmp
je
sbb
dec
clc
mov
movsb
int3
xor
push
jg
std
jbe
mov
mov
daa
insb
iret
stc
cmp
sbb
jno
sbb
jl
pop
dec
cmp
ss
out
call
and
push
lahf
les
test
push
mov
cmpsb
pop
nop
inc
pop
je
icebp
js
out
pop
pop
in
sbb
jo
ja
xchg
sarl
arpl
ds
jb
mov
mov
addb
xchg
add
adc
xor
fmull
sub
pop
aam
mov
push
cmp
jecxz
push
fldt
xor
pop
xorb
push
jg
cmp
mov
adc
and
add
popa
sbb
fsub
pop
and
int
out
push
xor
dec
mov
sbb
add
sahf
lcall
xor
lret
mov
es
and
fs
inc
fsts
mov
xchg
fisubs
rorb
dec
ss
cli
pop
xchg
lret
xor
and
xchg
or
or
mov
xor
push
pop
sub
or
loopne
outsl
imul
lret
sub
shll
mov
cmp
in
out
dec
xor
sub
inc
mov
pop
popf
xchg
sti
scas
andb
push
jl
sbb
insl
dec
nop
push
pop
inc
addr16
jmp
lahf
les
mov
xchg
into
and
jb
jecxz
inc
pop
jl
shrl
sbb
jecxz
adc
sbb
cmp
stos
ret
mov
jecxz
roll
mov
aas
clc
push
jb
push
fs
gs
lret
je
sarl
jecxz
or
je
sbb
ljmp
mov
rcrb
mov
fstl
fldt
pop
jecxz
xor
mov
es
fs
push
mov
adc
pop
shll
cmpsl
sahf
testb
pop
dec
mov
cmc
add
add
cld
call
cltd
lcall
jmp
inc
pop
aam
or
xor
mov
sbb
je
or
es
out
cmp
sub
ljmp
sub
or
mov
push
pop
cmovs
push
cltd
insl
jmp
xchg
mov
cmp
xor
test
fdivrl
adc
push
shll
sub
push
shll
stos
inc
jg
out
fwait
mov
mov
mov
into
mov
xor
aaa
mov
xchg
xchg
daa
jmp
ret
mov
jge
cmpb
dec
in
sub
test
sbb
insb
subps
add
jo
cmp
div
jns
mov
xchg
ficompl
mov
call
sub
cltd
and
lret
int3
pop
jp
inc
mov
mov
lods
jmp
dec
xor
aam
sub
sti
fistpll
xchg
stos
jmp
inc
inc
cmp
ffree
add
add
stos
es
push
xchg
fsubrs
stc
jnp
ret
call
mov
repz
aas
xchg
gs
sbb
cmp
inc
dec
mov
mov
mov
mov
push
xchg
int
fiaddl
scas
dec
sbb
push
inc
imul
sub
add
mov
mov
dec
sub
leave
mov
add
arpl
das
inc
divb
daa
sbb
out
or
sub
mov
fidivs
dec
xor
bound
outsb
and
enter
and
movsb
push
cmc
push
push
into
xchg
dec
jbe
push
in
cmp
je
imul
cld
stos
jno
sbb
jl
lret
inc
dec
test
push
movsl
mov
dec
xchg
lahf
jecxz
ljmp
and
inc
jne
lahf
cmpsb
ficomps
fwait
mov
js
adc
mov
jecxz
pushf
loope
insb
pop
sub
inc
push
cmp
gs
push
sbb
rclb
mov
adcb
jae
mov
loopne
pusha
and
int
lcall
push
roll
lcall
jno
jmp
push
outsb
int
in
test
aas
orb
jg
mov
mov
and
jge
pop
out
call
push
xchg
fadd
cmp
mov
scas
outsb
rcll
sbb
cmp
cmp
lods
push
xor
cmp
outsl
stos
stos
loopne
pop
insl
out
xlat
or
fs
ss
xlat
lods
adc
ja
push
mov
out
les
xchg
mov
jmp
test
inc
jmp
mov
mov
clc
or
dec
mov
in
xor
rolb
popw
dec
xor
cmp
sub
sub
in
mov
sti
pop
mov
stc
nop
rcl
cli
mov
in
pop
push
dec
out
je
jp
insl
fnstenv
jge
les
loop
mov
insl
xchg
xchg
jns
fldcw
mov
dec
cli
pop
loope
push
pushf
mov
mov
lcall
inc
dec
push
add
xchg
lods
jb
xchg
fsubr
push
dec
ret
jmp
repnz
add
mov
in
cwtl
out
lods
in
pushf
lahf
xor
sbb
ss
jnp
popf
fistpl
add
mov
jns
lock
adc
inc
xor
movsb
movsb
cmpsl
mov
popf
push
and
jne
and
insl
cs
or
xor
cmpsl
push
or
xlat
addr16
cld
adc
loop
mov
adc
add
repz
pop
sbb
adc
js
aas
pop
and
cmp
aad
mov
mov
clc
push
movsb
std
xchg
mov
in
popa
mov
lods
adcb
loop
xchg
xchg
push
bound
mov
add
in
mov
mov
xchg
std
push
loop
mov
mov
pop
xchg
adc
pop
sarl
out
cmp
lret
popl
fcmovnb
and
pop
mov
xor
sbb
fidivl
xor
cmp
mov
cwtl
adc
jmp
ja
xlat
add
jae
imul
or
notl
push
shufps
in
loope
inc
xor
sbb
imul
pusha
in
daa
pushf
xchg
sub
mov
mov
mov
jp
stos
adc
mov
sbb
adc
mov
aad
jp
pop
xchg
pushf
cmc
inc
jmp
adc
addl
xchg
out
sub
popf
cwtl
or
mov
sub
jle
cltd
js
and
sub
jnp
push
add
or
push
xchg
adc
or
sahf
sbb
ret
mulps
movb
jae
daa
lret
sarl
lea
push
adc
xchg
xor
xchg
sbb
cmc
bound
roll
lds
dec
mov
sahf
jno
leave
pop
stc
ret
sbb
jp
mov
jge
int
sbb
cli
aaa
jl
movsb
or
daa
or
jo
pop
pop
xor
mov
xlat
pop
dec
xor
mov
in
and
lahf
cmp
or
push
sbb
inc
push
xchg
enter
daa
push
add
cltd
nop
pop
jno
ds
jl
arpl
dec
sbb
lods
add
and
lea
cmc
push
jno
inc
test
and
movsl
mov
pop
ret
js
xlat
es
fsubr
xchg
push
addr16
ret
sub
pop
stos
cmp
sub
je
cs
jo
push
mov
sub
inc
sub
jae
das
pushf
not
inc
enter
fcomps
cmp
jle
rclb
xor
out
xchg
fcoml
jbe
outsb
xor
test
fldcw
jg
sub
mov
jl
mov
push
jns
sahf
jge
push
lcall
fcomps
jle
dec
shl
in
fdivl
movsb
fmull
cmp
sahf
loopne
mov
xor
outsl
mov
sar
push
stos
fs
or
ss
lods
sti
or
mov
mov
dec
or
xor
lcall
test
cwtl
gs
stos
loopne
xor
push
je
xchg
out
sub
data16
sub
dec
sti
mov
mov
push
lods
cmp
mov
sub
dec
mov
xor
add
or
addr16
sbb
mov
test
test
lcall
jl
les
shl
xorb
lea
mov
shr
mov
adc
popf
mov
jmp
mov
cs
stos
mov
jle
xchg
jb
jmp
pop
je
pop
xor
add
sar
cmp
mov
mov
rorb
push
push
fcmovne
clc
pop
pop
sub
shll
cltd
std
das
and
xor
fcoml
and
sbb
rol
lret
shl
adc
test
pop
pop
dec
mov
cmpsl
imul
icebp
scas
sahf
inc
cld
ds
pop
lret
iret
mov
mov
fcmovb
pop
adc
pushf
rcr
and
or
ret
lret
and
fst
pop
add
dec
mov
xchg
sti
cmp
mov
lods
jmp
cmc
mov
add
sar
pop
push
mov
push
mov
jnp
fistl
in
push
xor
push
movsl
or
dec
jp
shrb
add
mov
adc
into
pop
insb
jbe
stos
and
lods
add
divb
or
mov
loopne
xor
xchg
add
fwait
push
idivb
cmp
dec
data16
out
inc
jns
mov
rcrl
fwait
jbe
aas
push
mov
mov
mov
test
mov
cld
lcall
stos
mov
sub
sub
int
addr16
lock
jp
lds
add
mov
repnz
dec
divb
je
popa
sub
bound
daa
mov
cmp
jecxz
pop
popf
mov
jp
push
imul
stos
or
mov
insb
out
jnp
mov
jle
repz
inc
sahf
adc
sahf
sub
push
ret
mov
roll
and
aam
push
fcomps
push
xchg
adc
sbb
rcrl
data16
scas
pop
divl
lds
adc
mov
icebp
out
nop
leave
mov
test
arpl
or
sbb
or
aaa
cmp
scas
add
test
pop
bound
test
xor
sbb
jge
add
je
cmp
add
push
insb
fidivs
cmp
cmpsb
enter
daa
imul
jno
xchg
aam
inc
dec
xchg
xchg
push
xchg
into
movsl
int3
jb
and
and
add
cmp
test
dec
push
lock
aaa
inc
xchg
mov
cmpsb
in
ljmp
sub
lods
push
mov
loope
push
push
sub
dec
add
jo
jmp
adc
dec
in
xor
cmp
ja
inc
add
jns
xor
pop
repnz
push
insb
jbe
lods
stc
loopne
mov
imul
jp
popf
push
cmp
movsb
adc
sbb
mov
inc
addb
arpl
or
jl
icebp
mov
sub
cmp
push
mov
bswap
fistpll
decl
std
xlat
sahf
andl
xor
sub
lock
inc
in
inc
inc
mov
adc
jl
lods
loop
dec
mov
jne
clc
xor
pop
cmp
cmp
or
push
into
xor
pop
shl
outsb
mov
mov
out
adc
mov
adc
fmuls
add
pop
jne
and
repnz
cmp
xlat
ret
test
ds
fwait
aam
sti
mov
jecxz
aad
call
sti
dec
lods
jecxz
inc
mov
pop
xor
repz
test
xchg
pop
xchg
call
push
push
pop
pop
inc
dec
cwtl
adc
adc
pushf
or
dec
jmp
xlat
xor
or
cmp
push
addl
inc
aas
aad
cmp
cmpl
jecxz
ret
jge
or
fbstp
cwtl
gs
mov
leave
xchg
mov
orl
inc
insb
inc
pop
int3
shlb
and
lock
pushf
das
add
mov
lret
mov
mov
sub
adc
push
mov
les
ds
cmpsl
push
orb
stc
stc
cld
imul
cmp
jne
call
shrb
jle
aam
push
xchg
ret
pop
jp
cmpsb
mov
ljmp
cmp
ljmp
test
test
sub
scas
push
cmp
gs
mov
cltd
adc
sahf
test
mov
adc
push
push
incl
test
test
xchg
adc
push
pop
stos
adc
cmp
les
scas
add
adc
mov
adc
scas
or
out
pushl
inc
add
sahf
fwait
xchg
mov
hlt
testb
pop
xchg
roll
insl
addr16
jb
push
push
cpuid
jne
out
mov
ss
fsubrs
mov
cmp
jns
cmp
xor
insb
xlat
mov
jno
sub
mov
push
addr16
adc
sarl
sbb
fnstenv
pop
pusha
cld
repz
sbb
or
push
sahf
ds
test
repz
push
out
dec
lcall
mov
sub
mov
mov
lret
cmp
jnp
iret
cmp
nop
andnps
jbe
adc
pop
iret
pop
sub
pop
shrb
inc
outsl
and
mov
push
pop
or
jno
xchg
sti
pminub
fdivrl
bound
scas
mov
insb
movsb
shlb
mov
movsb
inc
insb
repnz
mov
or
mov
arpl
in
jge
outsb
mov
ret
add
or
imul
mov
inc
xchg
pop
xchg
lock
ficomps
icebp
mov
scas
lock
and
movsb
clc
aaa
int3
push
mov
cmpsb
and
out
inc
add
test
out
daa
push
aam
jno
hlt
or
sti
dec
idivb
movsl
rcrl
mov
lahf
inc
jns
push
pop
xchg
inc
test
mov
push
shll
adc
call
pop
pop
cli
out
push
mov
loope
adc
les
pop
add
cmp
xchg
in
shlb
sbb
xchg
int3
pop
or
mov
add
inc
loope
int
sbb
leave
sbbl
xor
add
push
xchg
and
fsubr
sahf
lcall
add
pushf
sub
sahf
loope
jg
das
cmp
adcl
cmp
movsb
and
xor
rcll
test
push
or
pop
xchg
pushf
mov
cli
mov
sahf
es
jle
sub
lret
outsl
dec
bound
fdivrs
stc
cld
fdivr
fs
pushf
addr16
mov
ljmp
mov
repz
cli
sub
inc
xor
or
or
sbb
cmc
fstps
pop
test
aam
sub
dec
imul
fimull
pushw
mov
test
sub
cmp
cltd
mov
dec
ror
cmp
dec
in
push
cld
sti
push
dec
cli
rcl
aaa
jbe
nop
jge
cwtl
dec
or
leave
inc
mov
lcall
fwait
jnp
and
pop
lea
cmp
call
iret
shlb
mov
enter
mov
outsl
leave
cli
inc
ficomps
inc
inc
and
aas
je
mov
dec
push
inc
je
mov
pop
xor
sbbb
cwtl
and
mov
and
sub
sub
push
mov
cmp
das
loopne
jecxz
pop
sbb
mov
ds
shll
push
negb
sub
sub
addr16
sub
pop
js
cld
xchg
mov
xor
push
icebp
cmp
adc
outsl
pop
push
sbb
rolb
sbb
ret
jmp
lcall
mov
rcrb
ljmp
pop
lods
shll
mov
dec
mov
adc
mov
rcll
cltd
dec
rcrb
mov
cmp
push
sub
jo
dec
mull
xchg
cwtl
jno
pop
sahf
cli
sarl
imul
add
pmaxsw
outsl
add
sub
mov
xor
das
or
mov
daa
mov
mov
xchg
ja
mov
inc
inc
cmpsl
mov
fsin
fwait
aam
test
clc
mov
fdivl
mov
fsubl
push
jnp
fcomps
jg
shl
xchg
push
mov
shrl
test
call
jp
sbb
mov
lods
inc
mov
imul
xor
pusha
xchg
into
int3
fbstp
stos
xchg
adc
and
push
lods
adc
popf
or
cwtl
pop
push
jmp
scas
and
loop
pop
insb
mov
mov
jle
and
pop
bound
adc
in
in
iret
mov
inc
mov
inc
jp
push
jae
cld
enter
inc
or
in
or
addr16
xchg
xor
movb
and
rclb
mov
xchg
test
leave
jl
pop
hlt
aam
jmp
cmpsl
arpl
add
push
jge
xchg
mov
aaa
mov
repz
xor
xor
faddp
insb
mov
into
shrl
scas
iret
movsl
push
and
adc
cmp
dec
add
or
jbe
subl
nop
pop
enter
daa
addr16
dec
cmp
test
jno
test
sub
dec
sbb
push
push
mov
movsl
fisubl
mov
pop
push
jne
pop
add
push
ljmp
push
xchg
rolb
test
cmpsb
ljmp
js
xchg
fists
cltd
dec
push
gs
pop
inc
aad
imull
int
fstpl
jae
add
repz
sbb
pop
sbb
movsb
pop
mov
jno
jnp
mov
stos
lods
into
pop
dec
out
mov
jmp
mov
xchg
insl
subb
dec
mov
pop
pop
movl
mov
ret
xlat
fnstenv
pop
inc
push
mov
adc
mov
xor
lds
and
sbb
iret
jge
leave
icebp
cmc
frstor
xor
push
mov
stc
mov
fldenv
mov
ss
das
int
add
test
pop
fstpl
push
mov
lret
jmp
adc
mov
rcrb
pop
adc
call
rcll
das
and
cmc
icebp
push
sub
sbb
or
pop
xlat
mov
jmp
mov
jno
inc
sti
sbb
inc
incb
sub
nop
dec
imul
inc
and
les
cwtl
repz
lock
jne
jne
test
out
lds
mov
pop
pushf
bound
push
jmp
arpl
inc
gs
nop
inc
pusha
pop
and
jb
dec
pop
dec
mov
int3
xchg
cs
movb
inc
cwtl
fisttpl
jge
lds
cmpl
mov
push
mov
lcall
outsb
scas
das
mov
push
movsl
mov
leave
push
shll
pop
int3
insl
lret
dec
mov
dec
pop
mov
xor
aas
cld
mov
xor
mov
out
pop
lods
lods
mov
outsl
and
inc
sub
pop
iret
aam
rolb
js
lods
lock
dec
mov
clc
cli
dec
inc
xchg
mov
loop
popa
adc
push
lods
sub
cmpl
push
ljmp
or
roll
pop
sub
andb
bound
in
push
out
add
test
adcl
mov
int3
sbb
xorb
repnz
out
mov
add
popa
ficompl
or
cltd
and
movsb
icebp
xchg
mov
push
sub
call
daa
jp
ds
aam
xorb
add
fdivl
outsl
jge
mov
test
bound
test
in
jns
xchg
gs
fdivl
and
push
movb
dec
xchg
push
insb
mov
mov
into
in
mov
pusha
xor
xlat
xchg
call
push
sub
cmpl
out
inc
int3
popf
xor
xchg
mov
sub
cmp
stc
and
daa
adc
jnp
push
out
jle
cmpsb
fstl
test
lds
ret
sub
add
lds
jbe
push
jg
xor
addr16
testl
lret
loop
mov
sbb
mov
imul
fisubrs
test
xchg
shrb
mov
ljmp
hlt
pop
int3
cmp
mov
inc
jge
mov
mov
js
or
add
int3
sbb
jb
out
call
dec
xor
sub
and
mov
xor
movsb
push
mov
push
pop
lcall
mov
jmp
daa
cwtd
int3
cmp
push
jno
cmp
jl
or
dec
aam
test
movsl
loope
mov
stc
add
push
mov
sbb
push
push
out
inc
inc
xchg
pop
pop
mov
js
test
pop
fcomps
stos
push
int
loope
nop
mov
cmp
push
add
adc
fdivrl
xor
hlt
repz
sbb
mov
xor
mov
int
mov
sub
shrb
xchg
inc
cld
push
inc
mov
faddl
jnp
ljmp
test
cmp
jg
inc
xor
jno
movsb
mov
and
and
subl
fadds
inc
testl
cmp
mov
or
fbstp
cmc
movsb
adc
xor
das
in
outsl
push
inc
cmp
decb
fs
adc
imul
std
stos
in
out
inc
or
xor
jl
cmp
pop
jle
adc
into
adc
mov
add
loopne
fwait
leave
pop
out
cmpsl
adc
xor
add
fcos
add
jo
enter
inc
je
xlat
and
sub
mov
mov
fdivrl
sti
enter
test
pusha
aad
mov
xchg
dec
lret
inc
dec
les
mov
xchg
pusha
add
fsub
add
and
jl
int
jns
pusha
add
push
pushf
or
iret
aad
xor
mov
out
mov
out
adc
cmp
pop
je,pn
pusha
pop
jecxz
fidivrs
mov
jno
xchg
cmc
jbe
push
gs
orl
push
inc
fildl
sub
or
xor
add
mov
push
data16
add
mulb
jmp
loope
pushf
and
cmpsl
gs
daa
mov
or
scas
cld
ljmp
mov
stos
inc
and
inc
inc
adc
shlb
push
fisubrl
out
adc
adc
ret
pop
xor
fnsave
loop
xor
jb
ljmp
or
jecxz
mov
mov
xor
lret
jb
xchg
adc
insl
int3
mov
mov
rorb
xchg
xchg
test
popa
incb
insl
rcrl
shrl
and
aam
loope
or
in
add
add
bound
jns
mov
or
sub
inc
cmpsb
mov
cmpsl
lret
sahf
or
xor
inc
xchg
dec
xor
pushf
inc
aad
jo
insl
jmp
aam
mov
push
mov
push
mov
jne
pop
bound
add
inc
aad
in
pop
xchg
xchg
mov
pop
mov
push
push
sub
jnp
and
jp
cmp
mov
sub
xchg
xor
ja
addb
pusha
int
dec
fbstp
inc
xchg
mov
pop
mov
or
push
out
out
popf
pop
fmull
push
addr16
cwtl
stos
fcomps
and
lret
lds
cltd
jnp
shr
mov
or
adc
loopne
ret
xor
out
inc
nop
js
jae
xor
push
inc
jnp
or
loop
incb
int3
sub
mov
dec
inc
sbb
jne
imul
and
rorb
mov
cmp
cmpb
mov
arpl
push
repnz
or
fstpt
mov
aaa
aaa
or
or
addb
sub
pop
push
or
xor
test
lea
push
movsb
cltd
outsb
lods
push
test
pop
jbe
lcall
cltd
inc
xchg
daa
gs
out
cwtl
add
jl
enter
and
push
sbb
movsl
call
lret
sbbl
rcrl
aam
push
sbb
iret
inc
iret
test
rcrl
pop
int3
js
dec
pop
pop
pop
out
add
loope
add
sub
pop
inc
cmp
fstpt
and
adc
mov
lods
mov
or
push
js
add
cltd
rdpmc
cmp
out
adc
je
mov
push
jp
inc
xchg
sbb
xor
fsubr
xchg
jg
pop
test
lcall
leave
shlb
mov
aaa
test
mov
not
and
in
aas
push
test
jge
fadds
cmpsb
in
testl
dec
pop
shll
mov
sbb
sahf
bsf
cmc
imul
outsl
in
mov
stc
and
fs
push
sbb
fsubl
lods
jle
jae
clc
fs
inc
in
sub
les
and
or
jg
adc
repz
push
or
adc
add
mov
imul
xlat
dec
add
xchg
mov
movl
cmp
cwtl
and
xchg
xchg
push
mov
inc
mov
sti
ja
dec
test
nop
push
scas
push
dec
sub
psubusw
lock
repz
and
rorl
adc
dec
fadd
pop
adc
rclb
push
mov
jmp
call
cwtl
pushf
lods
inc
jae
imul
and
push
outsl
jb
out
dec
cmpsb
xchg
push
je
dec
mov
dec
sbb
mov
imul
dec
jb
dec
dec
xchg
andl
in
pop
pop
filds
xor
lret
das
jge
leave
mov
outsl
xor
rorl
sbb
arpl
adc
dec
xchg
inc
mov
xor
je
loope
cmp
adc
add
mov
in
insb
push
ret
mov
lods
inc
je
stc
pop
aaa
sub
int
aam
movsb
mov
xchg
hlt
repnz
loope
cwtl
pop
dec
clc
jo
xchg
xchg
mov
ljmp
dec
lods
add
idivb
jae
push
movsl
out
inc
psraw
out
adc
je
out
jp
test
mov
push
je
sbb
xor
ret
xchg
in
les
ret
xchg
jo
rclb
out
push
cmp
jge
repz
mov
or
pop
mov
stos
pop
out
inc
cmpsl
add
or
dec
lahf
dec
and
mov
int3
fwait
popa
gs
loope
mov
mov
mov
xor
out
push
sti
xchg
fcmovnb
mov
in
lcall
push
sub
repnz
or
sub
shrb
mov
sbb
lods
mov
push
adc
or
fcomp
xchg
shr
xchg
mov
xchg
xchg
aam
sbb
jb
lcall
lahf
sbb
push
cmpsb
test
and
cltd
imulb
push
jnp
in
fwait
jle
mov
push
xor
and
jl
movsb
iret
fdivrs
ret
add
imul
fwait
cmp
or
add
cltd
and
outsb
into
inc
or
mov
insb
ret
cmp
sbb
or
lods
rcrb
mov
lock
nop
insl
dec
leave
loope
sub
mov
lcall
aad
jge
popa
jns
scas
test
xchg
or
int3
add
dec
int3
bnd
pop
dec
icebp
fisubrs
clc
iret
jo
ds
scas
insb
mov
and
sub
cmp
add
and
jl
imull
imul
mov
inc
enter
daa
cmpsl
mov
lret
int
jno
punpckldq
adc
mov
orb
stos
cld
movsl
out
cwtl
lcall
lods
sbb
stc
sbb
out
ljmp
movsb
sub
jmp
js
mov
push
mov
subl
out
ds
mov
imul
mov
adc
or
sbb
mov
xor
adc
aad
mov
sub
and
int3
outsl
lds
lock
sub
or
outsb
adcb
test
loop
jg
and
or
mov
push
addr16
fwait
imul
mov
cmp
mov
mov
mov
mov
mov
sbb
and
xor
outsl
les
and
stc
fmuls
mov
sub
cwtl
mulb
lea
inc
push
into
cli
imull
cmp
int
or
out
test
adc
dec
pop
and
outsl
adc
out
imul
sub
add
pushf
js
push
jae
cmp
xchg
sbb
add
insl
in
mov
cmp
out
aad
xchg
mov
dec
mov
testl
jmp
les
nop
inc
xchg
out
orl
lret
xchg
mov
mov
adc
jg
pushf
arpl
or
inc
cli
je
inc
mov
cmpb
inc
xor
adcl
jecxz
lcall
and
movsb
cwtl
or
pop
mov
mov
mov
and
dec
call
sub
mov
mov
xor
pop
leave
jmp
es
and
test
sahf
cltd
dec
mulb
andl
arpl
imul
inc
mov
lret
imul
dec
mov
int3
pop
cmpsl
ror
mov
pop
aam
mov
es
or
stos
sbb
pop
ljmp
push
lods
insl
sub
mov
xlat
scas
rcll
cmpb
inc
xor
and
add
mov
jae
push
aaa
or
test
fcoms
xchg
out
pop
sbb
fsubrs
sbb
pop
outsb
inc
aad
mov
fs
add
cwtl
clc
inc
pushl
pusha
mov
xor
xchg
mov
lods
fsubs
and
pop
fwait
inc
xchg
ja
or
lret
jno
add
or
dec
js
nop
pop
inc
push
test
push
sub
mov
and
scas
bound
adc
sbb
in
sub
mov
mov
mov
addr16
mov
outsl
mov
xor
mov
dec
dec
and
in
lret
xchg
pusha
add
das
fbstp
pop
int3
jmp
lahf
icebp
bound
cmc
xchg
negb
fcmovb
push
push
in
mov
mov
push
fucomip
jle
out
jo
ja
rclb
push
lds
iret
aaa
sbb
mov
and
imul
les
enter
pop
lcall
mov
ficompl
int3
mov
sbb
je
imul
pop
lds
in
test
jecxz
cmp
pop
xor
packsswb
push
sbb
jge
pop
mov
aaa
mov
push
or
repnz
pop
jl
mov
dec
xor
push
xor
pop
and
mov
andb
movsb
scas
loope
push
inc
cltd
mov
in
jb
mov
cmpsb
pushf
daa
arpl
decb
jno
xor
mov
leave
push
loope
sbb
divb
pop
and
xchg
cmpsb
lahf
fildl
ss
push
test
mov
lods
inc
in
mov
mov
pop
push
js
push
aas
pop
xchg
and
push
cmp
sub
pop
mov
mov
xchg
imul
insl
dec
mov
outsl
inc
xor
sarl
or
xor
addr16
cwtl
or
pop
jbe
sub
dec
mov
inc
xchg
cmp
inc
lock
outsb
in
rolb
aam
jg
cmc
mov
mov
mov
cltd
cmp
pop
mov
cmp
js
and
test
test
mov
movsb
xor
stc
bound
xor
in
outsl
mov
test
inc
fs
arpl
jp
mov
lods
dec
das
rorl
out
sub
xor
jo
add
or
mov
mov
xor
sarb
pop
inc
xrelease
dec
push
push
imul
iret
or
xor
data16
out
sbb
clc
xchg
pop
xlat
test
in
sub
sbb
in
sbb
loope
adc
push
int3
dec
out
mov
adc
jmp
les
clc
test
test
adc
dec
ror
pop
jns
mov
pushf
push
jns
jmp
stos
ljmp
je
inc
int3
imul
or
call
jecxz
pop
push
int
std
leave
or
mov
movsl
icebp
mov
test
mov
fistl
cmp
lret
test
das
cmp
mov
and
xchg
mov
imul
inc
mov
push
orl
jmp
bound
xchg
adc
icebp
push
jae
imul
fcomp
sub
jp
pop
mov
jmp
jae
lahf
push
or
lret
int
aam
lds
dec
in
es
in
xor
out
scas
xchg
mov
pop
ljmp
xchg
lods
fdivr
pop
mov
cli
lods
xchg
mov
pop
and
lahf
push
stos
add
sub
cltd
pop
pop
call
mov
in
add
lahf
lret
dec
dec
sub
test
jno
xchg
jmp
cli
pop
sbb
mov
scas
out
push
test
add
call
mov
add
mov
mov
mov
push
mov
push
or
in
dec
or
adc
fwait
mov
lret
sub
xor
push
sub
out
adc
mov
jns
xor
in
or
mov
mov
out
insb
pop
push
ret
jp
xor
mov
jo
mov
xchg
sub
sub
push
in
lock
sbbb
call
rcl
js
or
js
pop
popf
rorb
xchg
and
ds
xor
and
sub
push
jnp
xchg
les
inc
popf
push
mov
in
mov
ret
mov
inc
mov
data16
add
stos
or
push
xlat
mov
inc
das
fcmovbe
mov
sbb
mov
imul
aad
les
lret
sub
repnz
leave
iret
test
hlt
dec
mov
push
inc
adc
in
and
push
pusha
or
shl
add
imul
out
inc
loop
das
aam
jo
aas
inc
scas
sub
cmp
arpl
push
xchg
lret
fnstenv
mov
sbb
mov
sub
xor
bnd
cmc
and
outsl
mov
les
movsl
std
xor
and
aaa
lahf
cli
fildll
test
jge
enter
adc
cli
mov
js
mov
dec
push
jb
loope
xor
sub
sbb
ds
iret
adc
dec
cli
jmp
addb
sbb
out
dec
add
in
xor
xchg
test
adc
sub
lcall
aas
fsubr
loop
sub
dec
lret
test
lea
inc
ficompl
cmpsb
cltd
xchg
mov
jle
mov
mov
and
into
push
mov
adc
xor
maskmovq
testl
jnp
in
out
mov
ret
in
sahf
clc
push
das
cmc
rcrb
outsl
cmpb
stc
inc
mov
push
adc
and
lods
rep
xor
jle
jmp
mulb
mov
cli
cmp
aam
or
jb
into
pushf
cmp
pop
or
imul
bound
adc
jno
imul
enter
xchg
mov
scas
pushf
cmp
sbb
ret
adc
mov
mov
sti
test
adc
xor
mov
nop
lahf
or
dec
inc
push
testl
xchg
repz
mov
lea
fsubr
adc
fadd
leave
xchg
imul
adc
pushf
mov
daa
roll
inc
or
fldl
mov
aas
cs
out
pusha
push
cmc
dec
or
cmp
mov
xchg
sbb
jo
xchg
cwtl
andb
sbb
subl
lods
fildl
scas
pop
inc
lods
sub
inc
or
das
sbb
imul
xor
sarl
ret
imulb
push
dec
add
dec
mov
cmp
lret
icebp
data16
cld
xchg
and
lret
inc
repnz
mov
xor
std
pop
or
fildll
ret
aam
push
out
ret
inc
fisubrl
cmp
fisttpll
loop
xchg
repz
ljmp
jb
inc
cmpsl
out
mov
sbb
ret
fdivs
ja
add
pop
cltd
xchg
out
test
test
xchg
dec
mov
cmpsb
test
lahf
and
sbb
scas
jo
leave
add
pop
les
mov
out
jns
jo
mov
add
add
push
or
xor
out
or
inc
or
mov
mov
cli
mov
adc
ja
jns
dec
inc
inc
xor
pop
or
stc
mov
lret
jne
popf
mov
inc
out
icebp
add
xchg
inc
and
in
inc
scas
xchg
lock
xchg
sub
addr16
or
and
jp
out
push
mov
rcr
mov
add
ljmp
xchg
neg
icebp
pop
jge
pop
xchg
pop
jmp
xor
popa
daa
out
or
add
arpl
scas
stos
movsb
sbb
and
insb
fimull
jnp
push
pop
jle
mov
push
add
sub
iret
cmc
popa
imul
inc
rorl
inc
mov
rcl
push
dec
pop
imul
mov
cld
fiaddl
xchg
sbb
icebp
imul
scas
jb
jno
dec
iret
loopne
hlt
subl
mov
mov
pushf
leave
inc
js
hlt
xchg
lret
out
arpl
fs
jge
xor
loopne
inc
aaa
xor
cmpsb
or
in
add
dec
mov
mov
rcrl
cmp
xor
lock
bound
cltd
sbb
cmp
dec
fisubl
inc
adc
aaa
jp
inc
adc
enter
daa
popa
lcall
push
fidivrs
dec
jmp
push
cmpsl
pop
shll
mov
lahf
sbb
push
fsubrl
sbb
in
inc
or
cwtl
cmpsb
cld
inc
adc
and
stos
js
scas
push
pop
adc
push
pop
sub
xchg
aaa
xchg
sub
stos
in
call
je
adc
and
cltd
adcb
sbb
or
jbe
adc
in
sub
xchg
xor
adc
loop
cmc
lea
fcompl
lods
inc
outsb
stos
pop
mov
pop
hlt
js
inc
cmp
mov
test
mov
sub
inc
out
mov
inc
cmp
out
rcrb
testl
push
inc
sarl
mov
sbb
cmpsl
inc
sahf
fwait
push
hlt
cmc
xchg
ja
cmpsl
sbb
outsl
popa
inc
pusha
loop
rol
std
lret
xchg
fs
sbb
xor
mov
xchg
mov
adc
out
lods
cmp
nop
rolb
sub
cmp
adc
jg
imul
and
adc
rorl
fwait
push
fildl
dec
or
cmp
sbb
outsb
xor
xlat
add
sub
repz
push
sti
xor
push
dec
lock
inc
adc
jp
jae
movsl
mov
inc
cmp
rcr
dec
jno
shll
das
fnstsw
call
dec
fisubl
fcomip
repnz
jno
fs
es
data16
and
std
inc
lahf
mov
push
imul
fldenv
jb
mov
or
je
xor
mov
or
cwtl
cmp
mov
push
addl
lods
sbb
jno
pop
in
movsl
mov
jmp
lock
xor
das
stc
xlat
jge
cli
cmp
and
stos
sbb
mov
cmpsb
insl
xor
pushf
dec
addl
mov
cmp
xchg
out
lret
mov
inc
mov
dec
jmp
sub
cmp
aam
aaa
fadd
shrb
movsl
fnsave
int3
clc
pop
and
xor
xchg
ljmp
imul
rcll
sbb
minps
mov
movsb
inc
es
stos
pop
push
andb
dec
sbb
inc
xchg
es
shll
and
pop
outsl
pop
cwtl
stos
mov
out
fcompl
rolb
jmp
sub
xor
jb
xor
jge
mov
mov
jb
loope
scas
pop
int3
pop
push
ja
xchg
call
inc
enter
add
push
fwait
sbb
push
inc
jne
insb
push
mov
jno
out
rorb
into
bound
xchg
jns
push
pop
in
int3
setae
inc
icebp
mov
and
sub
bound
rcrb
pop
inc
mov
push
mov
insb
inc
push
mov
mov
icebp
ss
sub
pusha
aam
fists
inc
push
xchg
int
add
adcl
xchg
popf
push
repz
mov
int
and
dec
cmp
jle
leave
mov
lea
adc
js
iret
push
or
ret
lret
pop
js
fiadds
mov
push
adc
or
dec
nop
scas
inc
or
adc
xchg
xchg
das
ficompl
test
mov
imul
pushf
jmp
repnz
leave
mov
sub
roll
mov
sbb
sti
pop
or
scas
jmp
int3
sahf
lods
or
fidivs
aas
or
nop
mov
sub
pop
cmp
add
push
xor
pop
jbe
inc
cmc
in
daa
fwait
arpl
adcb
cmp
imul
push
loope
dec
outsb
and
mov
movsl
or
and
and
scas
mov
push
push
adc
inc
lcall
pop
dec
adc
js
cmp
push
std
inc
loope
pop
lahf
sub
sete
xchg
or
mov
cmp
andb
sbb
cmp
fs
xor
mov
int
cmp
sub
pop
push
pop
enter
lds
xor
inc
inc
xor
test
daa
test
into
loopne
jbe
adc
faddl
mov
pop
sahf
mov
addr16
xchg
add
and
xlat
push
mov
mov
stc
test
push
mov
adc
mov
jae
xor
iret
dec
cmp
add
outsl
inc
push
in
jo
in
stc
mov
push
fs
adc
jne
add
pop
mov
mov
out
out
cli
ret
cltd
ss
jecxz
cmp
sub
into
bound
inc
loopne
adc
mov
inc
push
imul
mov
lret
jp
sbb
test
mov
daa
mov
pop
xor
loop
popa
jp
mov
outsl
lock
push
test
dec
add
out
dec
jg
fsts
arpl
cwtl
mov
lea
cmp
push
jnp
mov
ja
adc
cwtl
pushf
paddsb
fildll
xchg
inc
push
lret
or
mov
insb
mov
fisttps
cmp
xchg
or
cwtl
or
mov
mov
mov
pop
jbe
sbbl
notb
mov
sbb
lock
jo
das
fsub
mov
mov
xchg
mov
rcr
jb
divb
adc
js
pop
xor
mov
adc
push
cld
in
loopne
lret
and
or
mov
dec
aad
rcrb
mov
sub
insl
rol
popa
sub
inc
decb
clc
xchg
idivb
ljmp
in
sbb
mov
arpl
xchg
in
xor
add
and
add
scas
pop
sbb
push
inc
sbb
dec
add
test
mov
xchg
test
sbb
gs
pop
sbb
stos
jnp
and
add
add
cmc
pushl
push
gs
or
or
inc
jns
mov
xchg
add
xchg
cld
ja
sub
xchg
inc
pop
xchg
or
clc
cs
dec
jmp
push
adc
push
mov
mov
out
scas
sbb
bound
push
jne
sbb
popf
mov
andl
jg
or
scas
addr16
orl
mov
loope
mov
aam
sti
in
mov
pusha
outsl
jae
fildll
daa
push
xchg
lods
pushf
inc
jmp
lret
sub
andl
push
popf
inc
cmp
mov
stos
mov
cmpsl
and
pop
jnp
dec
adc
cli
mov
xchg
insb
mov
ret
fsubl
ret
dec
pop
scas
mov
inc
jae
cmp
cli
xorl
xchg
cli
sub
gs
imul
scas
cmp
fcmovnb
pop
es
shrb
xchg
mov
das
add
leave
xor
outsb
hlt
sub
push
arpl
test
inc
sbb
loop
xchg
fisubrl
sbb
mov
mov
mov
add
lods
int3
mov
cmp
jo
jo
lods
test
mov
add
lcall
or
enter
daa
pop
rcrb
jno
sbb
jl
xchg
scas
dec
fstpl
aad
adc
sub
or
test
fisubrs
lds
outsl
adc
xor
rorl
inc
push
sbb
mov
dec
fdivrs
inc
cmp
dec
adc
fnstcw
jmp
roll
sub
xor
mov
movsb
mov
push
sub
jmp
lcall
add
out
mov
sub
inc
outsb
jno
fadds
xchg
fdivrs
test
mov
into
mov
push
mov
pop
dec
fsubs
testl
sar
mov
sbb
sahf
loope
sbb
adc
fwait
mov
loop
test
stc
imul
ficomps
ss
pop
shrl
in
out
movsb
mov
xor
popf
data16
adc
sbb
xchg
into
inc
sbb
gs
shl
sbb
adc
pop
daa
adc
scas
cmp
insl
fisubs
inc
xchg
xchg
in
popa
xlat
xorb
sub
mov
leave
pusha
cmp
xchg
fcom
popf
scas
aad
add
xor
lret
adc
pop
adc
xlat
jbe
repz
fstl
lods
shrl
jg
movl
lock
paddd
into
xor
inc
popf
pop
into
inc
cmp
mov
jb
xchg
mov
je
sahf
lods
jecxz
push
mov
std
gs
ret
or
nop
mov
xorl
imul
iret
adc
or
gs
rorl
cmc
adc
mov
adc
sub
in
insl
add
jns
int3
cmpsl
pop
sarb
mov
jmp
mov
pop
incl
stos
mov
mov
mov
addr16
pop
shr
cmc
push
sub
clc
mov
lock
hlt
push
fldl
pop
inc
xchg
mov
dec
ljmp
push
lods
test
or
test
aam
je
bndstx
adc
cmpl
cmp
fildl
ja
push
push
jg
dec
out
add
rcrb
sbb
scas
ror
int3
add
mov
out
mov
out
add
sub
fwait
xor
mov
outsb
mov
stos
mov
mov
cmc
in
inc
cld
ja
dec
test
xchg
mov
call
into
fwait
jnp
xchg
push
mov
dec
jne
xor
mov
bound
adc
popa
in
xchg
frstor
mov
push
pop
sub
pop
aad
addr16
pop
jmp
mov
push
cs
mov
aam
aaa
insb
mulb
add
xchg
subb
les
xorl
popf
insb
imul
add
jo
and
test
insb
jg
adc
adc
push
fisubrl
ror
adc
ret
mov
inc
fnstsw
xchg
xchg
or
or
aas
cltd
mov
ficompl
in
mov
imul
scas
fwait
mov
or
inc
jnp
mov
cmpb
hlt
ja
ja
cs
pusha
inc
sbb
add
add
jo
cmp
hlt
pop
pop
add
fidivs
pop
addr16
fidivrs
add
dec
cmp
cmpsb
mov
jns
adc
mov
leave
jbe
scas
add
cmc
pop
cmpsb
enter
daa
pop
xor
jno
lock
jl
sbb
sub
push
mov
movsl
and
jo
lahf
jbe
loop
push
sub
test
test
or
sti
cmp
js
or
push
pop
out
sbb
sub
push
bound
cmc
xor
sbb
ja
mov
push
orb
add
xor
xor
adc
pop
int
xor
sub
sub
pop
pop
daa
lcall
clc
fcompl
xor
aam
lret
test
lahf
or
and
ljmp
push
dec
mov
out
sbb
push
dec
add
mov
sbb
pop
inc
in
aas
dec
aaa
roll
mov
pop
sbb
sbb
cmc
fsubl
xor
je
loop
jmp
mov
adc
sub
cwtl
mov
stos
dec
out
out
cli
sub
xor
rorb
mov
imul
xor
pop
fsubp
jle
push
out
imul
idiv
add
sub
xor
add
sub
pop
mov
jle
mov
xor
inc
sti
inc
add
inc
dec
lret
jbe
nop
or
inc
inc
jno
in
add
vfmadd213sd
ss
rcll
sub
call
pop
clc
xchg
jo
lock
pushf
gs
in
jmp
mov
roll
dec
inc
inc
push
stos
jne
stos
xchg
cltd
jb
imul
je
ror
jecxz
cs
sahf
rcl
std
or
movsl
cwtl
outsb
adc
dec
or
popa
cmc
dec
push
xchg
repnz
pop
int
divl
scas
and
jbe
sbb
jno
lods
ret
js
and
cmp
push
dec
je
xlat
cmpsl
pop
repz
xchg
loopne
icebp
ret
cld
inc
icebp
repz
add
repz
jne
popf
frstor
pop
xchg
aaa
sarb
sbb
mov
mov
jg
je
inc
pop
sub
clc
or
pushf
jno
repz
popa
loop
sub
cmp
mov
out
mov
xchg
xor
pop
cltd
outsl
jo
test
jl
mov
inc
mov
leave
pop
bound
popf
imulb
add
leave
xchg
shll
out
stos
pop
test
out
add
xor
add
or
pop
xor
aad
xor
pop
pop
mov
mov
lret
std
lods
add
dec
lret
inc
lea
or
dec
loope
stos
dec
and
push
enter
xor
mov
jno
out
insl
inc
ret
jge
jns
dec
xchg
in
fcoml
sub
fimull
push
gs
jp
in
mov
mov
outsl
mov
loopne
in
test
fildll
add
mov
mov
out
out
je
popf
xchg
jge
mov
pop
decb
enter
ljmp
jle
cmp
and
adc
pop
iret
jno
push
pop
sbb
sar
jae
mov
push
pop
cmpl
sti
dec
inc
test
xchg
push
lret
fwait
add
imul
sbb
shlb
mov
aad
xchg
leave
and
lret
mov
inc
and
popa
jge
adc
aaa
das
mov
pop
add
xor
lods
mov
xor
pop
lahf
daa
scas
test
lds
in
int3
cmp
inc
test
ret
shll
adc
in
fmull
test
pop
push
lret
cmp
adc
scas
jmp
mov
push
xor
lods
and
lahf
xchg
and
push
sub
cmp
je
mov
dec
pop
cmpsb
or
lods
pop
mov
push
insb
pop
movaps
sub
stos
out
sub
cmp
cmp
xor
popl
sub
or
loop
dec
lcall
sub
int
add
sub
fadds
inc
push
addr16
sbb
push
nop
test
aaa
sbb
test
outsl
add
movsb
jg
fbld
mov
popa
shll
popa
aad
push
shrl
sub
and
fidivrl
push
idiv
xor
cs
fcomp
inc
mov
inc
lods
sbb
fisttpl
daa
mov
cmc
mov
outsb
cwtl
outsl
fisttpll
stc
fldcw
fs
cmpsb
cwtl
adc
ss
scas
cmpsl
lods
mov
xchg
mov
add
out
lods
sahf
cli
pop
sub
push
cmp
bound
negl
and
gs
pop
sbb
jb
maxps
push
hlt
adc
cmp
xchg
stos
add
and
sbb
pop
imul
mov
lahf
cmp
sti
out
jmp
jecxz
enter
std
nop
out
push
dec
and
fnstcw
mov
psllq
call
leave
call
inc
sbb
pop
stos
xor
inc
cwtl
sub
jmp
push
mov
mov
sub
stos
movsl
filds
pop
daa
aas
dec
test
jb
jo
dec
pop
dec
xorb
jecxz
mov
mov
mov
cwtl
sub
lods
mov
xchg
dec
sbbl
rcr
xchg
dec
pop
jo
push
mov
mov
mov
jne
shlb
daa
cmpb
enter
lahf
div
jnp
fisubrs
fstl
cmpsl
pop
lcall
cltd
xor
insl
mov
lret
jb
loopne
and
cmc
and
mov
pop
dec
rclb
sub
add
push
test
inc
fst
add
dec
jmp
xchg
cs
ljmp
lods
pop
pop
xor
mov
ss
daa
push
jge
add
add
insb
test
rorb
push
mov
or
mov
cwtl
xchg
adc
pop
jo
sbb
stos
dec
jmp
pushf
add
push
add
xor
stos
mov
xor
cli
dec
mov
ret
mov
mov
sbb
dec
mov
sbb
sbb
stc
jne
mov
out
dec
pop
push
jae
sarl
jg
mov
xchg
test
sub
and
dec
mov
jp
and
mov
lds
jge
adc
pusha
inc
pop
dec
fisttps
xchg
jmp
sub
mov
rol
out
mov
les
ja
pop
push
sahf
mov
and
sbb
insb
push
push
adc
jmp
jle
inc
adc
adc
iret
rcr
push
ret
push
pop
push
movsl
fldl
jne
insl
aam
push
sbb
lea
inc
add
sub
xchg
repnz
data16
imul
scas
popa
push
pop
sarb
mov
sub
cs
cltd
aad
hlt
or
mov
inc
and
jge
push
push
sbb
push
inc
or
fld
add
mov
pushf
pop
lds
dec
xor
mov
pop
scas
fs
fsubs
js
mov
andl
jl
pop
push
outsl
lea
in
ret
cmpsb
pusha
enter
daa
pop
jg
cmp
sub
push
aaa
jl
stos
dec
dec
sub
or
and
push
call
push
sti
xchg
test
aas
ret
sub
aam
cmpsb
mov
mov
pop
dec
mov
adc
add
sub
in
pop
cmp
or
pop
pop
std
adc
push
movsl
xorb
faddl
push
dec
xor
clc
jg
call
dec
fildl
lret
scas
lcall
or
sub
fldcw
jmp
test
add
loop
or
xchg
into
mov
mov
mov
sub
les
adc
xchg
enter
popf
bswap
ss
shrl
mov
xchg
test
lret
cmc
push
mov
outsb
cmc
add
test
loop
or
stc
nop
mov
fs
xchg
adc
cmpsb
pusha
lods
popf
clc
rorb
imulb
xor
xor
or
cmp
out
mov
loopne
sahf
xchg
pop
sbb
push
adc
bound
mov
add
sbb
push
sbb
xchg
push
xchg
sub
jle
in
or
jecxz
sahf
fwait
incb
push
out
nop
rcl
dec
cmpb
outsl
mov
clc
cmpsl
repz
sahf
xchg
decb
loop
push
call
ret
neg
pop
pop
jle
adc
jb
jmp
and
adc
or
aas
call
lods
dec
dec
aad
divb
gs
sub
movsb
gs
pop
adc
clc
mov
pushf
xchg
mov
or
dec
inc
mov
push
pop
adc
and
fs
das
push
inc
sbb
fsubrp
iret
and
and
rcll
mov
insl
mov
ljmp
lds
mov
jo
mov
cwtl
push
lret
andb
pop
imul
les
popf
sub
push
ret
popf
ror
es
nop
rcr
and
clc
orl
xchg
insl
cld
ljmp
lods
mov
out
pop
lods
xchg
jge
and
pop
cmp
cltd
fisttpll
test
lock
dec
push
mov
xor
pop
xchg
pop
adc
imul
rcl
fimull
stos
aaa
out
pop
out
lret
cmovbe
jo
scas
push
sub
inc
repz
xor
jmp
mov
lds
bsr
push
jae
lock
les
dec
mov
mov
or
call
sahf
push
pushf
fldl2t
jne
push
test
fwait
xorb
sub
bound
sarl
insb
rorb
xchg
lret
mov
mov
sub
dec
inc
jmp
jp
push
shll
inc
or
mov
rcr
dec
jecxz
pusha
ret
xchg
stc
pop
cli
jmp
negl
or
dec
and
fnsave
inc
stos
push
aad
and
sub
insb
shr
jnp
cld
and
inc
es
scas
shl
adc
xor
iret
das
pushf
pop
ret
inc
pop
mov
cmp
xchg
jae
cmp
loopne
rorb
mov
add
mov
fidivl
xchg
nopl
xchg
packssdw
push
scas
les
mov
jne
jle
xchg
es
mov
jnp
xor
adc
arpl
pop
inc
xor
sbb
pop
aaa
lods
rcrl
add
mov
int3
xor
jl
fisubs
xor
adc
into
and
jb
cmp
pop
or
fwait
cmp
in
stos
mov
test
cmp
inc
adc
dec
cltd
inc
and
stc
js
movsl
adc
mov
lea
into
xorl
or
gs
in
push
lds
js
cltd
cli
pop
lea
shl
sbb
sub
sti
jbe
cmp
mov
sbbl
mov
add
popf
sbb
inc
add
bound
xor
pushf
mov
int
push
lds
outsl
mov
in
lcall
push
fcompl
lcall
ja
adc
decl
mov
ljmp
or
jg
adc
cmp
push
jmp
cltd
lret
insl
roll
jb
adc
inc
sahf
insl
mov
cmc
xor
pop
xor
nop
dec
outsl
fwait
enter
out
stc
inc
cwtl
fldenv
jne
bnd
mov
je
out
les
xor
in
jle
pop
add
aad
pop
into
shl
pusha
gs
pop
cmp
jecxz
xor
movsl
test
lods
add
andb
sar
and
jl
lret
xchg
push
mov
jne
loopne
dec
bsf
sub
jbe
shrb
cmp
pushf
xchg
mov
cld
out
inc
stos
imul
cmpsb
push
push
les
or
mov
movsl
lea
inc
call
inc
push
jp
adc
or
data16
jmp
cli
lahf
jbe,pn
cwtl
inc
mov
hlt
das
aas
xchg
jb
sbb
dec
dec
in
je
addr16
jecxz
push
ja
cmpsl
fisttpll
cwtl
lahf
test
mov
stos
push
mov
xor
orl
push
pop
mov
xchg
mov
jbe
lock
popa
cmp
xchg
sti
fisubs
mov
clc
insl
sahf
xlat
jne
gs
cmpsl
pop
je
mov
inc
mov
cld
ret
mov
gs
out
and
out
adc
pop
jecxz
fcom
aaa
adc
jb
out
imul
rclb
fstpl
daa
sar
mov
into
inc
ljmp
insb
lods
xor
mov
adc
jg
les
fwait
push
xor
cmpsb
seta
sti
add
add
cltd
adc
pop
test
test
mov
inc
xchg
push
adc
arpl
sbbb
sbb
mov
int
jno
sbb
es
out
cs
flds
mov
sbb
lcall
xor
xor
xchg
add
xchg
pop
xor
ja
repz
scas
mov
xlat
sub
xchg
fwait
aaa
xchg
insl
push
aas
sarb
jne
jns
mov
and
fsubl
dec
mov
and
aaa
in
out
xchg
xchg
sbb
movzbl
xor
inc
lea
addr16
mov
add
fisttpl
push
push
in
sub
pusha
jbe
loope
xchg
int3
ret
mov
lock
push
out
add
or
mov
sbb
pop
stos
leave
mov
sub
jnp
shlb
push
mulb
iret
mov
ret
das
pop
ret
inc
or
or
in
push
mov
mov
push
add
pop
fisubrl
js
mov
outsl
std
imul
push
scas
daa
in
pushf
vandnps
shlb
push
repnz
cmpsb
int
xchg
and
arpl
aas
inc
sub
jge
xchg
sub
std
inc
xchg
aaa
insb
and
or
daa
xchg
add
jbe
and
pop
and
xchg
fiadds
xor
xor
insl
sahf
mov
cmp
cmpb
xchg
and
jl
and
mov
enter
daa
pop
fnsave
jno
lods
sub
or
xchg
test
fcoml
movsl
xor
xchg
repnz
cmpsl
push
mov
add
aad
popl
lods
cmp
xor
js
fwait
and
int3
pop
pop
push
jle
loope
cmp
add
mov
adc
movsb
iret
cs
and
mov
sbb
aas
sbb
les
pop
imul
sub
roll
dec
adc
negl
push
push
fcomi
faddl
subl
inc
jmp
test
icebp
xor
sahf
push
das
mov
adcl
and
mov
jnp
or
jmp
rcrl
inc
sbb
add
clc
jno
xor
xor
jp
leave
loop
test
fs
xor
adc
jecxz
xchg
out
dec
lods
imul
mov
mov
out
push
sbb
xor
pop
pop
cmp
or
lods
into
mov
add
shlb
pop
pop
shlb
mov
jns
pushf
push
in
adc
addr16
add
adc
data16
mov
cmp
and
sub
ljmp
cld
inc
outsl
decb
aad
xor
nop
ja
mov
inc
mov
std
les
ret
jb
rcll
mov
psubsb
inc
out
shll
pop
les
xlat
adc
pushf
adc
leave
jmp
xchg
add
flds
or
add
inc
mov
outsb
sti
jb
mov
std
je
in
mov
stos
leave
sar
mov
dec
rorl
and
fstpt
imul
lock
das
adc
adc
dec
scas
sbb
rorb
xor
testb
test
out
cmpsl
pop
cmpsl
push
mov
push
sub
cld
out
add
mov
mov
in
mov
pop
add
rorb
pop
je
jp
call
ret
mov
xchg
leave
fldl
push
clc
stc
adc
jmp
leave
ljmp
aaa
lods
fwait
mov
mov
xor
push
pop
xor
divb
repnz
jmp
fldl
and
inc
ss
ljmp
xchg
pop
pop
sbb
and
pop
sbb
sub
xchg
addb
cmpsb
push
and
in
test
in
pop
pop
or
cmpsl
mov
jl
repz
lret
dec
fdivrl
jmp
cmpsl
xlat
dec
xchg
testb
jno
jae
data16
loop
in
faddl
cmp
jmp
hlt
mov
in
pop
xchg
push
dec
pop
sub
aas
insl
jnp
mov
sbb
mov
fbstp
mov
out
es
in
shl
pusha
adc
fucomip
xchg
lahf
cltd
iret
jmp
shrl
out
sbb
das
scas
sahf
mov
pop
ja
stos
cmp
jns
and
fisubrl
mov
jle
and
xor
in
cmp
in
and
ret
out
pop
stc
insb
insl
inc
adc
xchg
rcrl
data16
or
cmpsb
dec
pop
inc
cmpl
xchg
idivl
inc
imul
aam
mov
jecxz
int3
cld
imul
fs
and
out
or
push
inc
sub
xchg
jge
and
mov
stc
xchg
or
dec
xchg
or
popf
pop
push
pop
add
stos
fldt
jo
and
and
das
cmp
test
pop
movsb
sbb
test
xor
enter
daa
pop
shlb
cmp
sti
mov
or
dec
ja
rorb
mov
mov
and
ds
push
je
xor
mov
add
cmpsb
adc
fwait
pop
pop
ficoml
xchg
xor
or
cwtl
loope
pusha
sbb
cmp
mov
adc
sti
xchg
inc
and
popl
sbb
ljmp
out
addr16
dec
dec
sbb
pop
add
lcall
sub
sub
pop
testl
cmp
dec
cltd
mov
mov
jbe
and
mov
ljmp
repnz
cmp
xor
adc
push
fcompl
mov
add
pop
adc
loop
cmp
adc
mov
nop
hlt
dec
xlat
inc
loop
push
xchg
out
in
pop
cli
sub
int3
xor
in
aaa
cmp
out
repz
xchg
popf
gs
sub
pop
jns
in
adc
cmpsl
aam
repz
roll
mov
push
mov
sbb
inc
fisubrs
cli
pop
out
sub
rolb
mov
dec
fistpl
outsl
mov
aad
popf
lods
nop
push
dec
lock
popf
mov
fsts
les
int
repz
mov
or
call
inc
sahf
dec
pop
ja
jp
mov
dec
cmp
push
mov
inc
jmp
inc
fcmovu
push
aas
lds
jb
xchg
adc
or
xchg
les
add
lock
dec
fwait
jno
adc
push
add
cmpl
iret
out
cld
mov
mov
mov
pop
das
icebp
scas
mov
add
in
and
es
roll
jmp
mov
dec
pop
into
loopne
pop
pop
movsb
mov
cmc
push
cld
sbb
or
cs
mov
and
and
dec
mov
fstp
shrl
jno
paddq
jecxz
es
aas
mov
insb
fnstsw
clc
xor
xchg
xchg
sub
sub
jae
popa
push
fists
mov
pop
and
xchg
push
mov
jmp
jl
add
add
cltd
add
test
adc
mov
inc
adc
movsb
dec
push
push
mov
andb
fsubrs
pop
mov
stos
add
cmp
add
rcrl
xor
or
neg
xor
mov
mov
into
or
mov
movsb
ret
pop
fbstp
dec
mov
out
andb
or
push
sbb
test
mov
out
enter
mov
or
in
dec
xchg
mov
sbb
js
call
or
loope
addr16
sub
mov
ljmp
in
fdivrp
pusha
lods
std
pop
fisttps
loop
xchg
jb
mov
xchg
pop
jmp
orl
add
xchg
movsl
mov
arpl
and
lcall
and
cmp
add
inc
jle
add
push
test
adc
push
iret
dec
out
rol
jmp
es
pop
adc
sub
call
inc
add
mov
adc
xchg
scas
in
inc
mov
or
push
mov
je
xchg
leave
jne
loop
cmp
imul
and
pusha
sbb
fdivl
ljmp
add
aam
pop
xorl
xor
and
enter
pop
and
fisttpl
movsb
test
mov
pop
shlb
gs
pop
repnz
pop
sub
push
cmp
cmp
scas
mov
dec
out
clc
push
mov
cltd
shll
or
xor
iret
push
inc
scas
test
imul
adc
xchg
pop
sbbb
js
pop
lahf
pop
dec
scas
mov
dec
std
loope
cmpsl
push
sub
or
cmp
adc
ds
rcl
push
jg
incb
sbb
leave
xchg
test
xor
lahf
cs
jne
sub
test
lcall
sub
pushf
jmp
pop
outsb
es
xor
fmull
call
mov
lea
and
lret
lea
add
sahf
lret
stc
ror
loopne
rcrl
mov
cmc
xchg
xor
fidivrl
cmp
loop
mov
stc
insb
and
fs
test
fistps
sbb
jne
cmp
enter
pop
out
inc
cli
pop
xor
xor
mov
mov
gs
cwtl
les
adc
imul
lahf
mov
fdiv
jecxz
ljmp
xlat
cmp
mov
out
in
mov
sar
add
xchg
or
aad
push
nop
sub
push
add
jecxz
mov
les
jb
adc
loope
or
mov
call
mov
lds
cli
jae
pushf
cmp
jmp
sbb
lahf
dec
pop
inc
dec
aaa
inc
inc
cmc
icebp
sub
fs
jb
mov
adc
or
rcpps
mov
inc
std
testb
mov
out
push
ror
in
sbb
pop
lahf
mov
dec
lock
shrl
fistl
lea
int3
and
iret
cwtl
rcll
shl
lret
insl
push
cld
mov
cmpsl
push
cltd
mov
icebp
int3
test
cld
inc
add
mov
xchg
out
mov
inc
mov
shlb
sbb
push
hlt
outsl
ret
fstps
mov
fstl
push
pop
ljmp
sti
lods
jno
inc
mov
jnp
inc
xchg
cltd
sub
xor
mov
add
push
test
pop
leave
lods
mov
movsl
dec
push
pop
mull
test
xor
ljmp
sbb
or
pop
jb
stos
repz
lock
fdiv
icebp
ljmp
or
dec
or
stc
jecxz
mov
mov
sarl
mov
pop
jmp
cs
jl
aad
pop
test
or
sbb
les
sub
push
arpl
cmpsl
pop
insl
bound
dec
jns
mov
jo
leave
xchg
push
scas
mov
lods
cs
or
add
jp
jmp
mov
dec
lods
mov
pop
add
in
out
mov
pusha
inc
sbb
xchg
inc
jecxz
jmp
and
sbbl
rcrb
sahf
int3
mov
stos
and
js
insb
subb
movsb
rol
push
lret
jbe
adc
mov
mov
addr16
inc
sub
pop
jae
jns
push
in
int
or
pushf
outsb
fiaddl
dec
in
fiaddl
outsb
sbb
add
push
lds
and
repnz
jp
leave
in
ss
pop
arpl
mov
jge
pop
push
sbb
ljmp
cltd
bound
int3
loope
repnz
mov
mov
lock
and
jle
cmp
and
inc
cmp
jle
movsb
xor
push
cli
jl
jbe
notl
inc
jg
enter
daa
push
dec
inc
cmp
mov
mov
push
pop
dec
push
and
push
test
and
ljmp
sbb
test
ss
inc
mov
jg
pop
cmpsl
cmp
js
sbb
mov
movsb
loope
adc
cmpsl
in
cmp
push
rcll
mov
leave
jecxz
jecxz
adc
mov
push
dec
adc
loop
xor
pop
int
sahf
repnz
sbb
lcall
pop
faddl
outsl
sub
fldl
mov
test
inc
xchg
jg
push
lock
jl
mov
adc
stos
cs
shll
jge
adc
loope
cmp
js
loop
cmc
fucom
shll
mov
lcall
aam
xor
jo
loop
fs
and
fstl
pcmpgtw
pop
inc
lods
and
xor
cli
mov
xor
sub
sbb
pop
or
insb
or
fstps
dec
mov
das
push
jno
xorl
dec
pop
mov
sbb
mov
xor
mov
and
mov
aad
fwait
into
nop
or
dec
pop
es
testb
flds
filds
repz
in
in
fsubr
pop
jae
mull
pop
fstpl
dec
pushf
adc
fsubr
inc
add
inc
aad
in
adc
push
aas
add
icebp
loopne
dec
sub
pop
je
jno
jecxz
inc
xchg
mov
repz
popf
push
leave
mov
push
inc
mov
stc
pop
dec
xlat
andb
inc
test
mov
xchg
xchg
lock
mov
jno
and
shll
jb
insl
cmp
dec
push
test
cmpsl
push
pop
jle
sti
and
mov
rorb
jbe
xchg
pop
inc
jns
pop
xlat
jecxz
xorl
popf
xor
sbb
in
ret
push
clc
cmp
mov
jo
xchg
test
inc
ljmp
aad
faddl
adc
loopne
out
lahf
fildl
movlps
add
rcll
lock
pop
test
shrl
mov
dec
sbb
std
popa
dec
pop
test
jno
jle
mov
ljmp
pop
sbb
cmpb
push
cmp
dec
push
or
out
cmp
es
xor
mov
mov
aam
mov
pop
sbb
dec
outsl
push
test
add
rcrl
lret
xor
jne
cld
jmp
out
xchg
in
imul
jbe
sti
inc
dec
xchg
push
subb
decb
sub
xor
fnstcw
stc
mov
fidivrl
icebp
test
sbb
out
loop
inc
repnz
jmp
out
push
adc
pushf
sbb
mov
sbb
and
dec
insb
xlat
cmp
jnp
rcl
jle
cwtl
notl
fisubrl
adc
out
iret
or
pop
pop
sahf
clc
push
inc
xor
xor
push
scas
jo
or
pop
fucom
inc
jg
fidivl
inc
rcll
cs
mov
pop
sbb
mov
sbb
add
hlt
iret
adc
cmp
inc
xor
push
sbb
dec
je
push
xor
int3
int3
cmpsb
lods
pop
fucomip
ficoms
leave
lahf
jo
rcrl
ljmp
movsb
mov
fcomip
jbe
mov
enter
daa
push
leave
fidivrs
xchg
int3
sub
cmpsl
pop
jl
das
add
test
movsl
push
xchg
jmp
test
pop
jl
in
jp
test
add
cmp
nop
fldenv
into
inc
inc
js
insb
inc
pop
enter
push
in
loope
mov
add
insl
jns
xor
inc
adc
mov
popl
clc
andb
add
xchg
pop
xor
mov
int
lods
pop
sub
xchg
roll
mov
lea
fdiv
sub
cwtl
std
outsb
in
xlat
sub
test
lret
sbb
sbb
cmpb
push
jg
cmp
idivl
lods
divl
in
lods
lret
and
stc
jae
mov
repnz
sahf
pushf
jno
cmc
adc
fidivl
nop
lds
mulb
xor
fidivl
lahf
adc
divb
mov
sbb
out
xchg
shll
xor
cmp
or
aam
into
inc
xor
scas
lds
fcoms
imul
pop
add
data16
push
sbb
testl
pop
mov
mov
sti
mov
xchg
icebp
aad
xor
jecxz
dec
dec
mov
insb
iret
fnstcw
out
repz
imul
dec
imul
stos
xchg
mov
and
test
ret
pushf
mov
scas
sbb
gs
mov
sub
mov
push
stc
dec
lahf
xchg
mov
jne
sbb
mov
sub
inc
and
cmp
inc
mov
mov
push
mov
fs
in
mov
lock
jmp
mov
mov
sub
imul
test
sub
fisubs
push
fwait
in
cs
icebp
jp
cs
lcall
mov
mov
mov
jle
vorps
push
aam
popf
pop
ret
negl
es
add
clc
in
pop
xchg
out
sub
mov
jb
lcall
mov
sarl
jp
push
jo
add
xchg
daa
inc
cmpsl
test
cmp
loope
adc
test
test
fnstenv
sbb
ret
enter
rcrl
loopne
sbb
cmpsb
sub
adc
iret
ljmp
mov
or
ja
mov
xlat
cli
pop
mov
aad
pushl
sahf
mov
inc
inc
stos
push
or
test
fwait
and
push
outsb
in
cmc
jne
push
cmpsl
mov
mov
bound
sti
jns
rcrb
movsb
xchg
call
sub
sub
xchg
out
mov
inc
adc
cmpsl
scas
dec
mov
in
pop
mov
jge
pop
fbld
call
jae
xor
cmpl
rcrl
adc
xchg
push
push
xor
and
movl
jle
push
mov
mov
pop
iret
imul
pop
aad
push
inc
inc
sub
push
jb
clc
or
xchg
filds
inc
jge
rcr
daa
add
adc
pop
imul
xchg
lds
cltd
push
mov
insl
popa
jne
fcmovu
hlt
sbb
icebp
arpl
sub
jge
cltd
and
aaa
daa
je
or
push
add
pop
int3
mov
push
pop
push
dec
pop
fidivs
add
std
mov
scas
jge
xchg
and
jge
test
insb
push
cwtl
test
in
adc
mov
daa
push
into
adc
enter
data16
xor
adc
stos
testb
out
movsl
pop
mov
rcrb
shrb
push
int3
jl
inc
mov
xchg
loope
cmc
and
push
and
pop
bound
loope
push
sbb
cmp
pop
ds
push
test
lret
cli
shlb
into
mov
xchg
xor
add
lcall
inc
pop
jb
mov
jg
pop
cmp
sbb
push
or
sbb
popf
xchg
cmp
leave
pop
inc
outsb
dec
push
fldl
lahf
inc
push
jg
in
mov
jl
mov
inc
mov
lret
push
fnstcw
test
mov
loopne
div
in
lret
ljmp
lock
sbb
add
pmaddwd
or
jmp
xchg
fistpl
stc
xchg
je
fs
sti
imul
jecxz
add
out
gs
out
insb
jae
hlt
cmpsb
xchg
xor
cmpl
pop
or
sub
and
jp
pop
loopne
xchg
dec
pop
cmc
push
cwtl
imul
sbb
add
outsb
popaw
jg
sbb
xor
outsl
sub
mov
iret
in
idivl
sti
leave
xchg
jl
and
sbb
aad
sbb
mov
lock
repz
push
xchg
push
mov
imul
dec
js
cmp
xchg
pop
inc
pop
iret
adc
fisubrl
jmp
push
jp
enter
jecxz
sub
inc
mov
sub
dec
push
or
jecxz
sti
push
mov
add
mov
fadds
adcl
rolb
pop
mov
jmp
loope
shrl
insl
jp
mov
or
les
sarl
jb
notb
and
lock
push
fidivrs
push
lcall
ljmp
and
xchg
push
imul
jne
shrb
fsubl
dec
lea
jo
ret
xchg
es
sti
fisttpll
cli
and
xchg
es
add
adc
popa
mov
test
mov
in
loop
outsb
mov
leave
psrlw
mov
inc
outsl
add
sub
cmpsb
mov
insb
es
movsb
fs
in
mov
mov
daa
sbb
dec
shll
mov
pop
stos
rolb
add
sub
imulb
mov
mov
mov
mov
fiaddl
pop
nop
aad
ja
out
dec
push
ljmp
or
pop
fwait
push
fadds
adc
mov
stos
add
inc
mov
sub
in
jecxz
xchg
repz
mov
test
aad
es
addr16
sarl
fdivs
jo
add
xchg
push
pop
in
cli
inc
pusha
sbb
cld
filds
out
jmp
test
mov
xor
mov
xchg
sub
stos
jnp
sbb
xchg
lcall
mov
ljmp
adc
pop
iret
enter
movsl
mov
pop
or
mov
jae
jb
push
xor
andb
or
insb
test
pushf
mov
mov
imul
lds
jae
rclb
mov
shlb
leave
push
and
hlt
gs
clc
arpl
xor
inc
cmp
fistps
pop
out
lcall
inc
data16
mov
je
fcompp
insl
lret
xor
popl
scas
pop
pop
cli
and
xchg
cmp
aas
insl
movsb
aam
xchg
push
out
lcall
jge
enter
daa
push
push
int3
cmp
xor
jno
std
xchg
jl
sti
cmp
push
jns,pn
movsl
pop
sbb
and
add
lahf
lods
ljmp
xchg
push
fisubrs
xchg
jns
inc
dec
cltd
sub
pop
sbb
dec
js
int3
cltd
pop
inc
sti
add
cmp
loope
sub
sub
push
mov
adc
inc
mov
rolb
cli
test
dec
xor
pop
jl
add
jae
sub
cli
cli
pop
mov
pop
or
fmull
hlt
sub
mov
sub
or
mov
dec
mov
mov
xor
call
cltd
cmp
insl
and
mov
xchg
lret
imul
jge
mov
sahf
loop
push
cmc
mov
add
mov
loopw
movsl
loope
dec
xlat
hlt
xlat
pop
out
adc
mov
ss
lods
aad
insl
mov
out
cli
daa
loopne
xor
loop
cmp
rolb
push
pop
mov
loopne
jb
pop
adc
adc
fdivs
adc
in
add
xchg
mov
insl
xor
xlat
xor
mov
mov
bound
mov
push
icebp
enter
ss
cltd
idivb
inc
das
fsubs
les
adc
dec
in
mov
sbb
call
mov
dec
inc
adc
je
adc
jmp
push
or
inc
push
mov
popa
push
inc
aas
loopne
mov
dec
lea
imul
fcmovb
mov
dec
mov
mov
addb
icebp
popf
subl
sarb
mov
aad
cmp
dec
mov
mov
xchg
pop
jb
sbb
fdivp
das
daa
insl
out
dec
out
inc
push
lods
pop
mov
sub
pushf
cld
lock
lret
pop
je
mov
mov
push
mov
mov
pop
mov
aam
xchg
mov
cmpsb
stos
es
cmp
pop
add
xchg
gs
mov
popa
enter
sbb
lret
pop
mov
mov
rcll
push
wrmsr
daa
pusha
add
cltd
xchg
push
add
loopne
push
movb
push
push
dec
test
sarb
sti
lds
rorl
xor
stos
scas
movsl
sbb
jecxz
cmp
dec
sbb
jmp
test
mov
arpl
inc
push
mov
fisttpll
mov
ja
mov
dec
dec
push
inc
jae
out
repz
fwait
adcb
push
mov
or
xchg
mov
fcmovnbe
out
and
shll
xor
xchg
in
mov
xchg
inc
mov
sub
and
pop
addr16
jns
inc
add
mov
rcrb
fwait
push
mov
pop
lahf
in
sti
sbb
mov
fbld
out
jmp
dec
dec
testl
sbb
imul
out
fcomps
and
pop
inc
jnp
sbb
jle
mov
or
pop
mov
pop
ret
nop
pop
inc
dec
jp
push
xchg
push
clc
adc
mov
ret
fimull
mov
sbb
scas
inc
imul
mov
lods
add
scas
pop
and
adc
mov
enter
mov
adc
xchg
jmp
jae,pt
jge
mov
jp
movsl
leave
test
fiadds
jnp
int3
lea
scas
fidivrs
xor
ljmp
and
sbb
movsb
pop
mov
iret
jbe
hlt
xor
loop
enter
daa
push
add
cs
stos
jno
pop
fs
lahf
xor
adc
adc
jnp
data16
jp
cwtl
lahf
lret
jle
data16
test
lret
fldl
inc
pop
inc
mov
js
ficompl
test
sub
adc
sub
xchg
icebp
cmp
outsl
ds
fdivrp
adc
sbb
push
jne
pop
into
add
xor
xor
hlt
test
int
sub
sub
rolb
cmp
lcall
jmp
repz
sub
sub
test
xchg
ja
notl
and
arpl
lahf
and
push
fists
mov
jo
sub
xchg
lret
rol
mov
movsb
int
cwtl
ja
sahf
test
cs
imul
lahf
outsl
xchg
push
adc
out
mov
bound
cli
imul
pusha
out
pop
int
xor
dec
push
cmp
cltd
jp
dec
out
into
jmp
andl
pop
xor
jo
pop
add
mov
arpl
and
outsb
addr16
test
cmp
adc
sub
push
hlt
in
int
xchg
lds
incb
in
or
nop
je
dec
dec
xlat
sub
fstps
adc
repz
jecxz
adcl
cmp
or
out
fstl
lods
rorl
add
mov
roll
insl
aas
jg
sahf
jb
out
dec
add
lahf
je
mov
jmp
mov
mov
cwtl
ja
pop
mov
mov
mov
incb
subl
add
cs
hlt
sub
xchg
popf
mov
mov
dec
mov
and
or
rcr
into
mov
sbb
insl
pop
loope
cmp
jl
mov
lcall
cld
sbb
repz
enter
add
dec
and
scas
rcrl
jg
iret
adc
aam
adc
es
pusha
test
xchg
movsb
pop
inc
ljmp
xchg
lods
mov
or
mov
cld
or
jg
fstpl
int3
xor
cmp
mov
cltd
mov
dec
mov
test
cltd
sbb
pushf
stos
pop
leave
stc
mov
out
inc
sbb
add
arpl
jnp
inc
movsl
push
or
inc
jl
mov
imul
std
out
mov
push
push
cmp
add
dec
cmp
or
fwait
scas
push
inc
push
push
aad
jne
mov
in
out
add
xchg
bound
push
xor
fcmovnu
pop
in
aam
xchg
xchg
insl
inc
mov
mov
adc
addr16
lahf
jp
inc
inc
mov
dec
push
mov
test
dec
pop
pop
push
in
pusha
lahf
pusha
dec
leave
inc
ffreep
inc
rclb
xor
sbb
subl
out
outsb
sub
mov
adc
and
lds
js
andl
adc
push
xor
xchg
adc
or
iret
xchg
loopne
lret
xchg
jb
jp
mov
jae
ret
mov
in
push
cli
imul
pop
sub
adc
sbb
out
jnp
aas
and
lds
fwait
rorb
out
repnz
loope
aas
pushf
xor
sti
add
arpl
cmp
inc
inc
cmpb
sub
aad
fwait
aaa
cmp
add
fxch
js
mov
fwait
or
ficomps
and
xor
inc
test
scas
sbb
and
sub
cmp
mov
push
test
xor
push
mov
enter
daa
push
cmc
lahf
cmp
jle
jmp
jmp
dec
xorb
movsl
insl
xor
adc
mov
push
cmp
jg
sub
mov
cmpsb
test
dec
imul
push
pop
les
push
loope
inc
pop
sub
popa
cmp
jl
ds
mov
mov
cld
add
movsb
mov
xchg
iret
mov
int
leave
xchg
sub
lods
mov
lcall
mov
sahf
lods
jne
xchg
sub
outsb
js
xchg
lock
jg
jae
mov
addl
mov
mov
std
and
push
push
push
loop
idivl
jecxz
lahf
divl
sbb
lret
push
rcll
mov
ds
inc
sahf
sub
int
xor
xor
mov
outsl
jb
mov
jp
xor
fs
fs
mov
xor
mov
or
out
ss
lea
xor
flds
faddl
or
mov
cwtl
and
sbb
pop
push
xor
adc
imul
add
sbb
sbb
jecxz
rcl
mov
sub
int3
push
mov
cmp
cmp
xchg
jl
sbb
dec
lahf
dec
ss
inc
push
adc
fsts
dec
and
ljmp
call
push
push
mov
inc
adc
gs
imul
xchg
cs
or
inc
js
roll
sbb
jb
sub
jnp
stos
je
fidivrs
jecxz
pop
xor
ret
std
loopne
insl
cwtl
xor
stos
mov
inc
sbb
sti
cmp
xor
mov
add
pop
das
or
out
add
gs
lods
jl
sub
pop
repnz
dec
cmp
cmpsl
push
iret
xchg
mov
repnz
inc
jecxz
lret
aaa
pop
addr16
mov
and
bound
pop
cli
and
mov
ret
dec
aam
loope
ret
xor
ret
imul
clc
roll
xchg
jecxz
xchg
ljmp
inc
lods
repz
sbb
inc
sbb
out
testl
jp
test
dec
in
mov
xchg
je
in
in
dec
and
aas
xchg
or
sbb
mov
pop
je
iret
stos
lea
fsubr
test
inc
inc
add
mov
in
lcall
or
aam
int3
mov
jecxz
lcall
cmc
dec
ja
aad
dec
xchg
or
mov
fmulp
jne
cli
pop
jne
push
mov
jp
out
loope
xor
mov
ret
dec
out
loopne
out
dec
pop
mov
or
cmp
and
inc
and
icebp
lods
dec
mov
and
dec
ds
outsl
in
sub
pusha
jmp
pusha
jne
aaa
mov
xor
xor
add
sub
mov
mov
push
sub
stos
aam
jnp
fcompl
jnp
leave
push
jle
mov
mov
iret
in
in
fisubs
pop
mov
stc
inc
insb
xor
js
jle
popa
or
jle
inc
inc
jns
jae
mov
push
xchg
scas
in
or
mov
lea
mov
inc
mov
mov
mov
iret
jno
inc
push
cmp
icebp
and
inc
inc
mov
jge
cmp
aaa
and
sub
dec
aam
add
mov
pop
lret
faddp
push
and
mov
and
and
inc
xchg
cmp
jg
jne
xor
scas
jbe
sub
mov
mov
daa
push
or
jno
mov
dec
out
in
fmuls
xlat
jmp
dec
and
xchg
lds
xchg
test
clc
addr16
inc
sti
and
cmpsb
sub
jg
xchg
ret
cmp
mov
pop
add
mov
loope
mov
sub
popa
pop
cmp
data16
fbstp
adc
shrl
sbb
fcomps
add
cli
popa
xor
push
dec
mov
int
dec
jnp
cmp
or
lcall
dec
fmull
lahf
sub
shl
test
ss
jg
push
pop
mov
out
jle
xor
ds
pusha
mov
adc
es
cmp
sahf
cld
xor
repnz
cmpsl
fstl
shr
mov
test
sbb
stc
cmpsl
sahf
lret
add
mull
xor
movq
ret
mov
cmp
mov
or
or
mov
loop
rol
xor
enter
jno
into
scas
inc
into
gs
adc
mov
or
rorl
outsl
jns
dec
aas
mov
add
fs
fcomps
push
mov
repnz
sub
inc
cmp
sti
and
outsb
aad
negl
sub
xchg
pop
mov
push
pushf
les
lahf
repz
mov
lea
dec
call
cmp
pop
rcpps
adc
outsb
pushf
adc
jle
loopne
imul
pushl
and
mov
add
mov
mov
clc
je
push
add
mov
scas
std
xchg
jb
in
sub
xor
jb
or
movsl
add
call
shl
dec
pop
test
jmp
ret
push
and
mov
ret
negb
sub
cmpsl
push
cmpsb
xor
lods
lods
int3
cld
jno
xlat
lret
cmpsb
jno
mov
sbb
and
std
pop
sub
sbb
ret
sbb
sub
mov
es
add
or
mov
and
and
lods
pop
jns
mov
jo
cltd
xchg
mov
push
push
shl
cmovge
add
aaa
mov
xlat
pop
push
mov
and
test
sbb
sbb
in
nop
aaa
cmp
mov
out
or
and
cltd
mov
xor
jbe
or
jns
xor
repnz
out
lret
mov
pop
jl
push
ja
sub
aam
cmp
inc
or
aad
or
fidivs
jne
js
mov
out
out
ror
bound
add
jl
in
adc
push
mov
xchg
or
push
mov
jp
icebp
mov
add
sub
and
insb
pusha
test
xor
add
sub
adc
push
xchg
adc
scas
push
ficompl
cmp
ds
inc
xchg
cmp
insb
pop
icebp
cmp
jnp
push
jle
cmp
push
mov
push
icebp
iret
inc
rcrb
icebp
imul
ja
test
push
inc
lds
add
bound
xchg
xor
jbe
fisubrl
xor
push
icebp
imul
scas
add
add
mov
xor
dec
leave
sub
repnz
arpl
push
mov
inc
loopne
pop
fmulp
sbb
sub
loop
rorl
int3
dec
cld
ss
stc
mov
fisubs
bound
sti
push
mov
pop
nop
adc
pop
mov
add
cmp
je
in
xchg
dec
enter
daa
push
mov
aas
jno
pop
xlat
jl
test
push
mov
fxch
and
cs
sub
fistpll
inc
push
ret
mov
inc
mov
pop
cmpsb
scas
ss
mov
jge
pop
inc
mov
push
xchg
and
sbb
dec
sub
push
xchg
cmp
xor
adc
scas
jge
jl
addb
lret
fisubl
adc
sti
sub
mov
lcall
sub
hlt
mov
sub
outsb
ds
test
andb
sbb
ss
mov
mov
mov
sbb
push
call
jp
fcomps
fwait
divl
push
push
roll
hlt
sbb
stc
sbb
mov
mov
loop
shrl
fs
sti
adc
test
lods
jno
mov
xor
cli
repz
and
outsl
popa
xchg
cmp
sbb
ss
xchg
and
loopne
mov
stos
adc
xor
adc
jne
add
imul
jb
sbb
pop
ja
xlat
xor
sub
mov
mov
push
jns
sti
rorb
cmp
adcl
dec
and
and
add
jl
lods
xrelease
xchg
and
jae
mov
xchg
call
mov
add
ret
adc
xchg
jmp
leave
xor
mov
inc
inc
xchg
sarl
pop
sub
jb
dec
jb
imul
dec
jecxz
arpl
enter
cs
jne
test
inc
mov
push
or
dec
inc
xchg
js
nop
cltd
pusha
pop
mov
js
nop
aad
lock
sbb
enter
and
lock
in
sbb
mul
test
mov
jb
cs
mov
mov
test
lret
adc
jns
and
cwtl
push
lods
pop
cmp
rorb
nop
sub
sbb
aam
jp
ret
push
jo
es
pop
daa
mov
inc
fiaddl
xchg
popa
mov
ljmp
pop
lods
leave
or
mov
xchg
test
fsts
shrd
add
xchg
test
adc
jae
addr16
lock
stc
test
lods
jbe
negl
sbb
mov
inc
pop
lret
stos
imul
out
outsl
lock
mov
mov
and
adc
sub
sub
mov
shll
mov
jmp
std
out
pop
aaa
out
add
or
dec
adc
add
xorb
cmp
add
inc
push
aam
mov
push
ja
ljmp
in
xor
mov
daa
push
sub
or
je
jp
push
sub
mov
sar
rorl
movq
mov
mov
scas
xchg
mov
cmp
test
adcl
scas
popf
mov
popa
mov
sarl
cmc
and
std
sahf
insb
les
jnp
mov
jle
lods
cwtl
push
add
daa
iret
mov
movsb
loop
pop
push
or
inc
jae
mov
push
add
pusha
or
je
pop
inc
ja
push
ficompl
ss
xchg
pop
loope
sbb
sahf
push
imul
scas
push
push
dec
rcr
xor
repnz
cmc
call
hlt
fsubr
out
arpl
dec
jae
jge
cmp
push
sbb
aaa
mov
lcall
cmp
rcrb
jne
or
xor
push
fmull
and
adc
sti
inc
movsb
mov
mov
in
jle
mov
sub
mov
dec
rclb
lea
dec
pop
jl
js
dec
int
mov
popf
mov
data16
mov
lahf
inc
pop
rclb
sub
push
mov
inc
sbb
jl
xor
cmpb
or
xorl
out
jg
cmp
mov
jne
sbb
mov
push
subb
iret
add
mov
cmpsb
aam
dec
and
xchg
xor
faddl
aaa
jecxz
lcall
mov
sub
mov
mov
lea
addb
jg
push
repz
pop
testb
and
push
jmp
xor
adc
xor
call
cmp
sbb
add
mov
sahf
adc
sub
test
stc
xor
jg
loop
and
stc
fs
outsb
adc
arpl
pop
in
lret
movsb
inc
out
movsb
cli
cli
mov
pop
inc
mov
or
into
jne
sub
xor
dec
pop
scas
sbb
xor
or
cmpsb
add
add
int3
lea
xchg
cli
jecxz
jo
sub
mov
jns
test
xorl
mov
nop
loopne
dec
dec
push
cmp
inc
mov
inc
fnstcw
les
fcompl
lea
addr16
ss
sub
xchg
or
pushf
push
lock
shl
cs
xor
jae
inc
call
push
test
sub
dec
loopne
pop
je
inc
mov
xchg
ja
lret
aad
std
aad
out
arpl
xchg
mov
faddl
mov
lcall
pop
inc
adc
add
das
cmpsl
and
mov
mov
and
mov
mulb
andb
loopne
mov
pop
mov
lret
test
add
push
jle
mov
push
mov
rcrb
repz
sub
mov
loopne
mov
fmull
addb
ljmp
sahf
lods
xor
hlt
mov
mov
xchg
sbb
push
ja
dec
ud2
ss
cltd
test
or
mov
and
push
ss
dec
push
xchg
cmc
test
xlat
xchg
js
sbb
sarl
bound
pop
fiaddl
out
rcrb
dec
add
iret
mov
inc
xor
xor
dec
or
inc
sbb
mov
in
pop
jae
lahf
das
mov
ja
push
insb
inc
data16
mov
cmp
jecxz
fidivs
ret
cmp
imul
jge
adc
test
out
xchg
int
imul
or
cmp
mov
movsl
outsb
mov
inc
or
in
fsubrl
pusha
mov
rcll
xchg
mov
and
xor
jge
inc
in
andl
popf
fsubrl
mov
adc
int
sub
jecxz
insb
das
into
dec
jnp
mov
jle
adc
push
dec
add
adc
adc
add
inc
pop
push
repnz
jae
xchg
push
push
mov
push
notb
hlt
xchg
mov
xchg
imul
sbb
shl
mov
mov
pop
leave
sbb
hlt
daa
xor
inc
dec
adc
dec
sbb
pop
or
pusha
and
cltd
add
int3
and
mov
fisubrs
push
inc
jo
jbe
scas
xchg
or
aam
test
mov
xorl
in
xchg
dec
popa
stc
cmp
pop
fnstsw
clc
dec
cmp
decb
sub
movsl
mov
mov
orl
push
test
mov
pop
dec
and
adc
cmpsb
mov
cs
push
fidivrs
into
mov
shlb
ljmp
sub
int
cmp
mov
aas
adc
fs
cmp
cmpb
add
hlt
cmc
xor
loop
xchg
stc
xor
mov
nop
sub
xchg
lods
lcall
jae
dec
rolb
push
add
outsb
add
add
pop
mov
lahf
mov
gs
mov
xorb
repz
cs
pop
stc
shll
pop
sbb
mov
xor
out
out
sarb
mov
mov
adc
sub
ss
ja
mov
es
cli
pop
sti
add
sbb
inc
dec
or
loop
pop
mov
out
xchg
pop
into
leave
out
adc
push
adc
xor
add
inc
imul
rcrb
iret
adc
xchg
out
mov
in
sub
xor
aad
insl
jmp
nop
mov
sub
test
jno
lret
out
xor
fsubs
test
xor
lods
aas
xor
pop
sub
or
popf
imul
xchg
cmpsb
add
std
loope
lcall
dec
push
das
fdivs
jmp
movsl
iret
pop
into
xor
jl
cmp
aas
push
push
mov
dec
adc
sbb
fucomi
adc
mov
lock
or
xchg
mov
loopne
or
jnp
shrl
dec
imulb
cwtl
insl
pop
add
adc
arpl
icebp
xor
jecxz
repz
push
mov
iret
and
into
jnp
pop
jbe
xchg
shr
lods
stos
sub
add
ret
outsl
in
lcall
jbe
clc
mov
lock
and
insb
popa
push
out
inc
lods
lahf
mov
jne
fldln2
fwait
xchg
pop
test
push
push
mov
push
cs
jle
cltd
fists
fiaddl
xor
dec
mov
xchg
movsb
xchg
mov
or
xchg
sub
jbe
dec
xchg
hlt
out
xor
sbb
ljmp
xor
cmp
or
add
add
stc
xchg
adc
inc
inc
or
cmp
ja
dec
dec
dec
cli
sub
out
or
pop
fwait
fwait
lcall
jne
std
mov
xchg
cmpsl
add
pop
mov
ljmp
insb
imul
mov
push
or
add
xchg
jp
aaa
xorb
push
ret
loop
dec
lret
in
xor
iret
fistps
cmp
addl
xchg
adc
lcall
shlb
dec
fsubrs
cmp
xchg
insb
lcall
jle
imul
sub
popa
iret
popa
test
mov
lea
cs
cwtl
and
push
mov
fisubrs
ret
sbb
push
cmp
imul
scas
cmp
rclb
stc
mov
add
add
lods
arpl
sub
jl
adc
pop
sub
or
xor
add
mov
int3
pmullw
pop
xchg
movsl
fimuls
stos
xor
or
mov
adc
ret
shlb
dec
xorb
imul
and
mov
pusha
divl
xchg
cmpl
ja
arpl
test
lahf
test
and
and
dec
inc
aaa
xchg
jle
cmp
je
sub
push
jg
lcall
xchg
pop
std
xchg
sub
out
js
xchg
mov
ficoml
aas
xor
cltd
out
or
xor
jnp
inc
add
lcall
pop
dec
lock
cmp
xor
loop
push
shll
fdiv
push
adc
inc
lahf
dec
outsb
addr16
pop
test
cmpsb
int3
xorb
jg
stc
leave
mov
lahf
push
mov
sub
and
aad
icebp
cmp
cmp
mov
imul
scas
and
jae
mov
mov
lahf
in
mov
loopne
push
fwait
add
adc
cli
outsl
int
int3
loop
pop
adc
dec
jp
movsb
dec
nop
adc
ss
jae
lods
es
mov
sub
cli
mov
and
hlt
mov
ja
out
sbb
cmp
gs
hlt
loopne
aam
in
jns
adc
sbb
adc
adc
data16
dec
sbb
or
inc
sub
mov
in
dec
inc
outsl
sti
ffreep
add
adc
pusha
nop
xchg
sub
adc
push
inc
mov
jns
test
fcmovnb
popf
jmp
loope
imul
daa
lods
nop
xor
int3
pop
fisttpl
xor
sub
movsb
inc
sbb
push
inc
push
in
test
cmp
and
into
les
mov
add
add
std
and
xlat
cwtl
fldcw
mov
popf
add
into
jmp
dec
add
cli
jle
mov
cmp
mov
shll
ficoms
aas
and
rolb
inc
in
stos
movb
insb
sub
lcall
stc
mov
icebp
or
pop
cld
sbb
jnp
mov
and
imul
or
aam
xlat
loop
adc
fldl
push
xchg
push
push
mov
imul
imul
cld
std
mov
push
sub
and
add
pop
jge
push
push
out
test
cmpb
and
out
xchg
sbb
cmp
shr
sbb
pop
lret
adc
out
cwtl
pop
jecxz
popf
or
add
adc
xor
decl
int3
fwait
lret
xor
outsl
loope
pop
test
xchg
aas
push
in
ds
ja
mov
dec
in
cltd
ret
inc
xchg
rcrl
fwait
leave
adc
push
sub
jne
fwait
or
lock
out
cmp
sahf
bound
addr16
xchg
imul
pushf
rolb
lcall
lods
inc
std
jp
mov
mov
sub
mov
push
jl
dec
lods
push
push
in
repnz
lock
jl
sbb
and
xor
mov
idiv
mov
mov
stos
adc
and
mov
jnp
out
jle
mov
notl
add
iret
shlb
pop
les
mov
jae
adc
or
in
cmova
sarb
fidivs
push
sbbl
xchg
dec
mov
pop
iret
dec
shrb
cmp
pop
jge
leave
or
hlt
mov
mov
inc
push
mov
jge
push
sub
aaa
sarl
or
or
lcall
pop
mov
sbb
icebp
sbb
jo
out
scas
push
mov
lea
repz
movsb
sub
sbb
pop
push
fwait
jbe
and
enter
daa
dec
das
jg
xchg
loop
jno
repz
mov
loop
sbb
push
inc
pusha
movsl
xchg
fnstenv
and
sub
push
sub
adcb
inc
pop
inc
cmpsb
mov
xchg
pop
ds
xchg
push
sbb
je
test
in
cmp
sbb
mov
in
rcrb
cltd
push
clc
bound
loop
rcrl
mov
enter
push
xor
mov
sbb
cs
movsb
cmpsb
jg
mov
and
rol
push
sbb
or
sub
add
pusha
dec
mov
jg
in
arpl
xchg
mov
jo
lds
pusha
mov
push
hlt
and
inc
shll
inc
xor
imull
xor
aad
in
sbb
and
xor
ficoml
xor
or
xchg
loop
inc
psubw
std
es
adc
adc
stos
sbb
mov
loope
sub
dec
xor
and
fidivrs
cs
push
sub
gs
inc
ljmp
dec
mov
adc
inc
mov
data16
nop
and
inc
cld
iret
xlat
sub
ljmp
mov
mov
ss
aad
adcl
inc
test
dec
enter
cmp
les
inc
lea
cmpsl
call
mov
sub
sbb
push
test
pushf
imul
cs
adc
inc
mov
out
into
aas
fsub
popf
jb
add
inc
inc
je
pushf
ret
dec
mov
aam
xchg
std
lret
cwtl
xchg
sahf
lcall
andl
xchg
fisttpl
pop
inc
cld
or
adc
jns
inc
cs
mov
dec
mov
roll
jno
imul
sbb
dec
sbb
loope
sub
test
loopne
or
dec
xchg
adc
shll
mov
jne
and
add
xchg
pop
mov
add
xchg
mov
inc
aam
popf
add
jp
es
jmp
addr16
sar
xor
add
or
xchg
popa
adc
xchg
in
jo
push
or
movaps
cltd
dec
xor
mov
pop
scas
push
jg
aad
mov
dec
xchg
xor
sbb
xor
pop
jbe
push
stos
daa
pop
dec
out
sti
lods
add
and
pop
lcall
sbb
or
loop
xchg
mov
leave
xchg
loopne
mov
and
sbb
or
mov
mov
dec
daa
push
fwait
clc
push
push
int3
mov
stc
mov
ss
sbb
bound
stos
xor
cmp
in
cmc
mov
mov
xor
xchg
dec
or
pusha
or
mov
fldl2t
mov
mov
fsts
dec
nop
pop
in
adc
pusha
mov
fistps
lods
jl
sbb
adc
mull
popf
push
adc
mov
int
and
insw
dec
insb
jo
dec
jnp
aaa
lods
jle
stc
push
pop
out
adc
adc
iret
pop
mov
cmpsl
pop
sti
mov
fs
mov
push
adc
or
pusha
incl
popf
xchg
movsb
jle
mov
int3
mov
add
scas
hlt
push
ffree
in
mov
mov
stos
adc
leave
cmpb
or
repz
int3
inc
push
mov
jge
rcrb
repnz
aaa
popf
mov
mov
xor
int3
in
and
aas
or
xchg
sbb
xor
ret
scas
xor
xor
cmp
cmp
cmpsb
sub
mov
arpl
sbb
jno
dec
pop
inc
cmp
inc
pop
jno
je
jl
nop
out
dec
mov
push
sub
xchg
and
js
ret
pop
xor
loopne
test
mov
push
das
pop
jnp
adc
sbb
pop
jge
cmp
inc
jle
loope
pcmpeqw
lods
aam
repnz
gs
sbb
xchg
mov
out
push
loop
xor
xor
jmp
jecxz
xor
dec
loopne
int
pop
lock
push
inc
pop
xor
pop
lcall
rcr
dec
inc
lods
sub
sub
outsb
sub
dec
pop
subb
pop
mov
mov
mov
insb
mov
and
repz
idivl
call
xchg
in
insb
xchg
lret
and
jbe
inc
mov
xchg
and
adc
lock
popf
and
mov
out
outsl
mov
and
jg
idiv
mov
jmp
xchg
adc
mov
adcl
jbe
loop
sub
insl
cli
xacquire
cmp
xor
lds
into
add
shlb
adc
pop
fsubl
pop
sub
aaa
adc
sbb
adc
lret
cltd
lea
sbb
or
xlat
insb
xchg
ljmp
xor
and
push
pop
xor
sub
iret
and
fimull
push
and
les
arpl
xchg
icebp
shll
call
xor
pop
inc
pop
mov
gs
push
pushf
push
shrl
jp
pop
cmpsb
push
into
inc
sub
jo
ja
sbb
aad
mov
je
or
jecxz
outsl
mov
xlat
std
idiv
jno
les
jl
cli
mov
aas
lret
cwtl
std
dec
fildl
sbb
jne
mov
jb
lock
jo
das
and
mov
add
inc
mov
push
loope
divb
loope
insl
push
out
dec
adc
test
mov
mov
cmp
jae
dec
lret
inc
sbb
and
lahf
dec
negb
sarl
adc
rep
adc
lahf
mov
pop
add
fisttpll
jmp
xchg
pushf
loop
ljmp
lods
loopne
mov
mov
xor
repz
jecxz
xor
xchg
mov
cltd
test
mov
lock
inc
lcall
pop
inc
filds
dec
push
rcrl
seto
pop
gs
add
cmp
js
lret
or
and
mov
mov
fidivrs
int3
psrlq
lea
ret
or
cmc
mov
push
outsl
fimull
jne
add
leave
out
cli
xlat
shlb
popa
add
mov
in
mov
nop
mov
adc
popa
or
in
pop
mov
or
push
mov
cmp
rorb
pushf
push
in
cwtl
xchg
pusha
es
fistpll
cwtl
jmp
jb
cmp
out
fiaddl
js
icebp
mov
or
inc
stos
stc
push
andl
jnp
dec
sub
cs
push
data16
cmp
mov
movsb
aas
ret
sbbb
push
inc
mov
mov
loopne
insl
sbb
push
repnz
pop
ficompl
cmp
ljmp
push
push
mov
shlb
mov
fildl
hlt
push
movsb
mov
inc
pop
and
fistps
lods
faddp
aaa
pop
push
push
or
mov
int3
shlb
mov
fidivs
push
adc
sbb
sbbl
movsb
inc
movsb
push
std
xor
jbe
mov
in
add
add
dec
or
jecxz
mov
test
dec
push
or
pusha
movsl
movsl
xor
in
pusha
ret
lahf
loop
pop
push
rcll
test
test
inc
in
cmc
cmpsb
shr
pop
mov
pop
mov
mov
xchg
leave
loope
dec
shrl
dec
xor
mov
xchg
and
rcrb
lea
and
add
test
mov
lds
lcall
lcall
ja
notb
popf
sub
adc
outsb
nop
mov
jo
enter
mov
movsb
mov
xchg
mov
dec
or
jle
mov
cmp
mov
cmp
dec
fistpl
mov
pusha
mov
cmc
push
aad
outsl
push
into
loop
mov
stc
outsb
out
and
adc
and
les
lods
fildl
outsb
out
push
mov
and
pop
mov
xor
imul
in
bound
pusha
jmp
repz
pop
dec
mov
inc
imul
mov
data16
sbb
mov
clc
sub
mov
loopne
or
sti
in
loope
jl
dec
aad
test
nop
daa
and
adc
and
clc
les
outsl
add
mov
sub
cwtl
imul
hlt
push
loop
mov
dec
ds
jne
or
js
outsl
xor
aas
push
pop
gs
xchg
cmp
pop
inc
je
shrb
loope
popa
fisubrl
es
sbb
cwtl
or
xchg
mov
mov
mov
pop
in
adcl
ds
mov
and
lock
das
add
push
mov
mov
mov
shll
lret
insl
cmc
clc
aam
adc
push
cmpsl
dec
divl
mov
mov
ror
scas
mov
mov
stos
inc
and
cmp
rcl
cmp
aam
daa
test
pop
cmpsl
es
fnsave
ja
xchg
frstpm(287
jnp
out
shll
pop
fwait
lods
dec
leave
fwait
mov
gs
xchg
jnp
pop
push
mov
test
add
fcmovne
cltd
mov
adc
push
add
sbb
xchg
mov
sbb
mov
icebp
ret
int3
dec
stos
stos
add
pop
sub
xor
add
xor
outsl
mov
mov
sti
jle
mov
cltd
mov
jmp
inc
pop
data16
xchg
and
adc
push
mov
adc
pop
bound
jns
rorl
or
add
gs
mov
or
or
addr16
insb
or
in
cld
mov
imul
dec
push
cs
pusha
rol
loope
xchg
iret
cmpsb
fsubr
pop
fcmovb
xchg
cmp
ss
inc
xor
lahf
lock
insb
in
and
mov
daa
test
mov
push
lods
jo
adc
stos
and
pop
imul
and
xchg
lock
push
adc
fimull
cmpsb
xchg
addr16
mov
fdivrl
loope
jl
mov
add
out
mov
in
jno
push
leave
outsb
jnp
hlt
sahf
xchg
inc
arpl
imul
inc
lds
push
gs
or
lret
roll
pop
xchg
mov
mov
sbb
js
je
icebp
out
and
cmp
add
int
cmp
dec
or
jbe
and
cmp
daa
dec
inc
outsl
cmp
cmp
loop
jl
xchg
stos
dec
addr16
push
out
mov
movsl
lods
repz
and
sbb
test
push
incb
cmpsb
inc
and
pop
leave
lods
push
js
xor
push
push
popa
mov
sub
mov
dec
ds
pop
adc
stos
aas
jne
adc
and
sbb
mov
daa
jnp
xor
je
data16
int
dec
sub
enter
movsb
rclb
jb
mov
ret
repz
cmc
mov
jecxz
fidivrs
loopne
mov
nop
icebp
mov
inc
cmpsb
mov
dec
test
lea
push
std
mov
cmp
jbe
stc
imul
outsb
push
lret
loop
movsb
ds
mov
mov
hlt
cmc
das
sbb
das
flds
dec
mov
loop
ss
stc
and
pop
add
orb
lods
ret
mov
out
insb
enter
out
push
sub
pop
mov
ror
repnz
gs
sti
ret
inc
mov
imul
imul
ror
add
imul
cmp
xor
xlat
ljmp
mov
sti
loope
sti
fwait
sbb
dec
aad
push
sub
lea
mov
add
fcompp
test
sbb
leave
sbb
mov
lea
es
xor
mov
adc
pop
cli
pushf
insb
movsb
cli
jmp
adc
das
inc
aaa
test
aas
mov
imul
subb
jmp
mov
dec
std
mov
imul
fsubrl
mov
dec
mov
pop
fcmovnu
xor
sub
cmpsl
mov
cmp
das
loope
jae
pop
and
pop
ljmp
lret
shrl
stc
dec
or
cmpsl
dec
out
sbb
icebp
gs
iret
cld
leave
sbb
push
lds
loopne
jb
xor
mov
adc
rorb
cld
loope
xor
dec
cli
es
enter
iret
mov
xchg
sbb
ljmp
int
mov
lea
mov
push
xchg
ret
push
cltd
pop
mov
add
test
test
cmp
loope
dec
shrl
jo
aaa
sbb
jecxz
ja
sbb
out
and
inc
add
jno
mov
jl
add
jo
dec
or
sub
mov
jnp
mov
push
mov
ja
jnp
dec
mov
fbld
or
or
int3
push
mov
lea
jmp
out
mov
insb
fistpll
xchg
pop
in
cmp
xchg
cmpsl
movsb
mov
cmp
sub
ljmp
jp
mov
xchg
mov
in
into
aaa
pusha
pop
pop
dec
and
mov
cmp
xchg
or
mov
out
std
xchg
adc
mov
mov
sub
stos
cmp
inc
insb
jnp
les
jle
je
push
hlt
dec
nop
adc
fmul
cmp
inc
mov
out
pop
mov
add
inc
lock
pop
jmp
or
rcrl
insl
fiaddl
lcall
ret
imul
fwait
scas
sbb
rclb
or
movsb
or
hlt
jmp
push
jmp
pop
gs
jge
add
sbb
cmp
or
je
add
sbb
int3
cmpsb
and
pop
jno
and
xor
sarl
sahf
and
inc
fidivrs
iret
jmp
movsb
pop
imul
in
iret
mov
ret
daa
dec
sti
mov
jno
iret
cmpb
dec
dec
ss
shlb
sub
lahf
and
cli
test
sbb
jmp
add
fsubs
lock
pop
cmp
push
loopne
loope
cmp
cmp
sbb
sbb
adc
xchg
rorb
adc
sbb
lods
testl
hlt
jmp
sub
xchg
cs
xor
dec
xor
sub
xor
pop
test
cmp
inc
jg
jecxz
mov
iret
and
pushf
mov
test
add
cmp
xor
movsb
imull
push
sahf
sarl
dec
mov
stos
xchg
sahf
xchg
xchg
cmc
idivb
xor
push
lret
loop
lock
fsubrl
fs
outsb
xlat
adc
xor
ss
or
lods
test
bnd
cli
mov
xor
and
cmp
xchg
inc
or
enter
jb
gs
lret
loopne
adc
mov
jne
mov
loope
outsb
push
pop
add
add
out
or
cmp
shl
sub
sub
or
in
data16
sti
dec
sbb
sub
nop
fldl
inc
adc
fnstcw
mov
fistl
out
dec
cmp
mov
scas
push
mov
pusha
jo
push
fs
pop
aam
jmp
jns
cs
aad
inc
mov
ret
cmp
jb
testb
push
sbb
pushl
loopne
cwtl
std
data16
in
subb
mov
lods
sbb
pushf
or
or
nop
pop
iret
lcall
orb
mov
sub
bound
or
roll
xchg
idiv
out
ret
lret
push
inc
mov
mov
cmp
pop
cld
hlt
inc
cwtl
lret
shll
mov
and
jo
dec
pop
xor
mov
loopne
ret
sbb
aam
add
ret
leave
les
mov
push
fldl
sarl
pop
js
ljmp
add
and
mov
xchg
or
lds
movsb
mov
lods
cltd
sub
jmp
mov
dec
mov
adc
push
mov
or
out
inc
rcrl
addr16
rcrl
inc
cltd
stos
jecxz
push
out
xchg
aam
inc
lcall
sbb
xchg
or
xor
xor
lods
hlt
mov
add
jg
xor
pop
pmaddwd
dec
lods
inc
sbb
jge
or
push
jge
mov
fstps
pop
shlb
xchg
dec
mov
inc
insb
out
xchg
adc
push
jns
testb
clc
aad
mulb
mov
or
or
cmpsl
in
jp
mov
cmp
lahf
and
sbb
cmp
fdivrs
pusha
mull
fists
push
xchg
jne
test
cmc
inc
mov
shll
stos
out
cmp
mov
leave
scas
into
stos
push
mov
push
insb
sbb
mov
mov
test
push
cmp
out
iret
fwait
ret
mov
pop
xlat
or
std
jae
negb
or
dec
mov
inc
outsl
aaa
xchg
fidivl
push
mov
imul
xchg
lds
sbb
mov
imull
leave
pop
push
and
xor
sbb
in
inc
bound
mov
sbb
inc
shll
cltd
sbb
leave
roll
int3
xchg
loop
pop
mov
mov
adc
fbld
scas
rcrl
xchg
cmp
cld
adcl
ljmp
insl
das
enter
daa
inc
cmp
cmp
loopne
jl
jmp
pushw
mov
fldenv
mov
and
push
dec
fsubs
push
out
cmp
cmp
cmpsb
dec
out
pop
pop
in
js
popf
pusha
pop
jns
adc
adc
loope
jecxz
sub
sbb
scas
lods
jecxz
cmp
stos
sub
popa
mov
sub
lds
jle
jl
in
adc
pop
push
push
sub
fdivr
pop
das
fbld
push
lret
inc
es
xorb
fldt
mov
push
pop
sbbb
push
jg
jmp
mov
inc
int3
mov
cmpsb
in
mov
dec
xchg
and
jno
cmp
in
fisttps
push
sbb
xor
sbb
jne
sahf
sub
les
in
lock
pop
mov
loop
xchg
shlb
push
adc
and
lea
mov
out
and
cli
mov
cmp
cmp
pop
imul
out
fcompl
loopne
testb
pop
inc
add
in
adc
sub
add
mov
pushf
sbb
insb
in
xlat
push
test
in
shrl
stc
loopne
in
sub
pop
rcl
nop
mov
dec
lods
inc
es
fptan
clc
cmpsl
fildll
push
xchg
std
mov
sub
or
decl
pop
or
ja
pushf
ret
jmp
mov
dec
inc
inc
lcall
repz
les
mov
pushf
jecxz
test
jecxz
cmp
cwtl
cmp
mov
pop
mov
xchg
mov
in
mov
xchg
lock
push
mov
loope
out
sub
rcll
xchg
insl
stos
mov
add
sub
adc
cmp
cld
adcl
mov
dec
mov
sub
fdivrl
aam
imul
pop
subl
clc
pop
xchg
sub
dec
shll
popa
repz
mov
mov
mov
into
bound
xchg
push
mov
fwait
lsl
add
scas
cltd
pusha
sub
pushl
dec
stc
dec
jg
test
repz
xchg
push
sbb
xor
es
int
int
shlb
cmp
ljmp
add
adc
xor
into
jmp
xchg
push
dec
xor
cmpl
add
and
lret
ja
testb
lahf
in
inc
push
aas
push
or
je
fwait
jecxz
push
push
sti
cmp
jne
mov
out
jbe
bound
lcall
xchg
inc
mov
mov
mov
loopne
loope
cmpsb
les
jp
jne
mov
adc
mov
mov
fwait
shl
fists
fbstp
mov
xchg
dec
and
in
out
adc
sahf
mov
sbbl
out
lock
adc
leave
mov
or
subb
and
xchg
jnp
dec
ja
testl
cmp
cli
aad
ret
aaa
pop
push
in
movsl
inc
in
movsl
jae
lock
or
fs
inc
out
cmpsl
push
rclw
movsb
test
test
xchg
scas
jecxz
adc
mov
mov
dec
or
rorl
hlt
jg
mov
xchg
mov
lahf
jge
xor
sbb
mov
cltd
add
mov
faddp
fs
xor
mov
out
mov
and
mov
dec
movsb
outsb
in
push
cmp
jbe
cmp
xor
daa
inc
stc
je
lds
jmp
mov
movsb
dec
mov
push
push
cwtl
xchg
movsl
rcll
lahf
pop
das
jae
sbb
fistpl
inc
and
xor
scas
js
das
jnp
mov
sti
scas
loope
mov
sub
or
ds
loop
adc
cmp
fmuls
push
xchg
sbb
cld
hlt
push
dec
push
push
scas
inc
lret
mov
lea
scas
mov
lcall
mov
sub
imul
dec
call
jg
negl
mov
stos
mov
dec
xchg
mov
adc
cmp
cmpsl
and
mull
sub
lret
mov
mov
sbb
add
sahf
int3
sbb
xor
out
outsl
out
inc
loop
pushl
fs
sub
insl
push
imul
ja
mov
shl
and
aam
xor
ja
cmp
cld
testb
sub
into
jo
js
jecxz
outsb
loopne
out
xor
mov
fwait
imul
push
bound
fs
insl
pushw
push
lods
sbb
cmpsl
fwait
jns
cmpsl
test
insl
mov
cmp
int
test
mov
aad
movsl
enter
sbb
pusha
jecxz
cmp
icebp
ljmp
xchg
rcr
lea
cmp
lods
xor
pop
sarb
adc
ficompl
insl
scas
sbb
and
outsb
xor
push
and
aas
xchg
jb
jb
sub
dec
bswap
loop
and
and
out
imul
imulb
aaa
std
sbb
out
aas
push
dec
jb
inc
sub
adc
rcll
ss
gs
jle
in
jecxz
adc
mov
inc
shl
push
std
testb
dec
dec
cld
ret
inc
jmp
mov
ljmp
lret
imul
mov
push
andb
push
movsb
rolb
inc
mov
xchg
sub
ret
out
out
dec
jae
push
dec
loopne
xchg
jo
xchg
xlat
sbb
ljmp
inc
lods
imull
xchg
mov
icebp
push
aas
xchg
xchg
sub
push
sub
addb
ja
cltd
xchg
in
test
lea
xor
jns
adc
repnz
push
sti
xchg
ljmp
dec
cwtl
sbb
imul
scas
and
ret
lcall
int
imul
or
pop
sub
jle
and
jle
ja
cli
jno
xchg
cmp
push
or
out
adc
push
jne
jecxz
mov
ret
push
std
add
add
jns
lods
lods
in
jno
xchg
xchg
or
mov
push
aam
jmp
jbe
fistl
movsl
sub
jp
loope
mov
fs
cmc
pop
jnp
daa
push
stos
dec
loop
or
out
icebp
pusha
sub
add
jmp
imul
test
popf
cmp
mov
inc
xchg
das
stos
cmp
and
dec
adc
jnp
ss
jle
test
leave
xor
push
pop
in
movsl
ret
daa
pop
inc
dec
ja
lock
push
mov
lret
inc
cmpsl
xchg
inc
insl
pushf
fcmovu
sbb
sahf
xchg
ret
sbb
sbb
ljmp
inc
hlt
lds
ret
call
cmp
popf
fxch
dec
xor
hlt
lret
arpl
sub
jge
mov
xor
or
cmp
pop
nop
fisubs
sbb
jo
add
mov
cmp
xor
stc
pop
adcl
orb
test
inc
daa
inc
ds
jno
insl
cmpb
dec
and
jmp
movsl
enter
hlt
xor
push
lock
test
jl
dec
inc
scas
cmp
cmpsb
push
jl
pop
add
xor
pop
not
lock
xchg
add
adc
lret
or
mov
adc
pop
mov
xchg
xor
xor
xor
fwait
inc
xor
sbb
int
aam
sub
xchg
and
sub
cmpsl
xchg
push
jns
push
dec
pushf
sbb
mov
lret
scas
test
stos
inc
orb
jg
push
jle
adc
aas
mov
fwait
adc
mov
cmp
std
push
lret
add
inc
xchg
mov
jno
sub
sahf
outsl
nop
xor
dec
mulb
xor
jns
loop
push
add
add
or
mov
xchg
lods
pop
fisttpl
and
aas
cli
and
pop
xor
fwait
or
add
push
stos
shll
dec
out
cli
sti
sahf
pop
in
notl
add
cmp
iret
sarb
repz
xchg
xchg
aaa
outsl
sbb
loop
lods
xlat
out
inc
sub
loope
mov
cmpsl
ret
loope
push
mov
sub
nop
outsb
stos
pop
dec
or
inc
dec
imul
cmc
xchg
iret
rep
cmpsb
cld
xchg
subl
and
sub
out
jae
xchg
adc
ret
pushf
sbb
jmp
cmp
fwait
inc
push
or
divb
aas
xor
mov
adc
dec
xchg
pop
jecxz
faddl
jmp
lock
cwtl
mov
popf
mov
arpl
mov
add
fistl
push
mov
sbb
push
out
das
pop
sub
mov
dec
imul
shrl
pop
div
ret
adc
insl
js
sub
popa
in
cmpsl
inc
repnz
icebp
shll
jne
pusha
lret
fimull
mov
and
inc
or
lea
les
mov
cmp
cmpsl
adc
mov
js
in
shl
and
or
lods
ficompl
adc
pop
xchg
fdivrp
ds
add
jg
add
les
fdivrs
mov
cltd
fstl
loopne
dec
pop
loop
test
inc
jae
insb
add
shll
and
mov
inc
add
fstl
clc
das
push
mov
lahf
divb
sub
or
dec
mov
inc
mov
push
dec
test
inc
dec
fimull
sub
fwait
inc
dec
pushw
inc
es
jne
mov
jle
xor
stc
bound
repz
cmc
in
sub
xchg
jecxz
push
mov
bnd
pusha
stos
or
pop
cli
movsb
adc
mov
fdivrs
mov
push
adc
in
ljmp
je
add
fidivl
jecxz
xor
or
cmp
out
mov
popf
bound
pop
push
xchg
lret
leave
shll
pop
pushf
push
pop
into
out
jnp
jecxz
jle
jno
push
adc
sub
ret
fstpl
push
in
inc
sti
push
std
jae
scas
xor
gs
out
or
mov
adc
fcmove
mov
mov
outsb
add
imul
lds
movsb
fdivrl
lock
es
sarl
arpl
jb
das
imulb
sbb
loope
aaa
mov
or
mov
pop
sub
enter
xor
jo
lret
dec
shlb
incl
cmp
scas
sti
push
xlat
xor
jbe
cmp
in
imul
hlt
mov
daa
inc
pop
xchg
cmp
xchg
cwtl
jno
ljmp
xchg
pop
sbb
pop
inc
movsl
iret
cltd
mov
lahf
pushf
push
inc
push
ret
xor
cmp
leave
push
inc
out
inc
and
shl
imul
adc
pop
ss
inc
push
out
loope
mov
cmp
inc
mov
shl
xor
jp
cmc
sbb
jnp
pop
xor
and
int
jmp
imul
pop
sub
sarb
fdivr
pop
sub
jl
test
in
jg
sbb
shrb
aas
mov
and
mov
and
jns
jle
sbb
aaa
test
mov
rcll
pop
sbb
addr16
adc
dec
cmc
adc
in
xor
adc
lods
loop
fimuls
xchg
movsl
adc
mov
lods
lods
inc
xor
and
lcall
mov
or
popf
xchg
into
ss
adc
fisubs
xchg
sbb
pop
add
xchg
adc
inc
jno
inc
jp
lcall
data16
adc
sbb
sbb
sub
xchg
adc
sti
push
les
aad
jl
nop
dec
xor
dec
push
jns
fsts
xorl
inc
outsl
rorl
subb
stos
and
pop
es
adc
or
pushf
ret
fcmovu
jmp
mov
cs
xlat
mov
fisubl
sbb
jb
sub
dec
std
je
dec
cld
jecxz
fsub
in
mov
std
add
mov
mov
in
dec
dec
movsb
inc
fcmovnb
jae
pop
pop
jns
mov
xorb
ret
cmp
addr16
fdivrs
lret
sarl
mov
push
add
insl
pop
push
dec
dec
repnz
in
cmpsl
inc
jge
mov
cwtl
testb
xor
sbb
push
jp
mov
lods
cmp
shrb
and
mov
popa
aam
movsb
push
ret
add
cmp
fstpl
in
xchg
push
int
ljmp
aam
int
and
aaa
jae
xchg
and
cltd
lods
mov
or
test
aaa
cltd
add
sarl
dec
movsb
push
xchg
add
jmp
js
jmp
jl
xor
pop
into
sbb
out
adc
fwait
add
clc
cmp
xchg
bts
or
popa
dec
xor
cli
cmc
mov
or
sbb
add
or
or
loopne
jo
push
in
or
les
mov
xchg
mov
adc
xlat
into
push
cmpb
in
dec
cmp
xchg
xor
mov
shl
repz
jp
rorl
out
outsl
jbe
dec
in
mov
popf
sbb
hlt
sub
pusha
arpl
xchg
shll
rol
cs
ljmp
cmpsb
out
ret
addr16
mov
mov
push
lds
lods
and
push
loope
enter
pop
push
sti
jle
push
mov
push
jo
adc
and
mov
sti
ja
push
mov
mov
or
cmp
push
inc
imul
fidivrl
outsl
xchg
jno
cli
sbb
ljmp
or
stos
lds
rcll
jecxz
repnz
or
push
hlt
pusha
or
arpl
aad
inc
outsb
repz
sub
sbb
cmp
aaa
xchg
mov
or
add
int3
cmp
and
xor
lcall
and
out
pop
cmp
sti
movsb
setae
jbe
imul
enter
daa
inc
push
loopne
pop
xchg
mov
test
pop
dec
add
push
inc
push
int
mov
and
lret
mov
cvtpi2ps
adc
inc
int
imul
add
js
pop
or
jne
jno
fucomi
push
loope
clc
push
sub
leave
sub
push
or
adc
int
or
dec
insl
mov
sbb
and
clc
jle
int
loop
sub
mov
fs
mov
sub
and
test
xchg
inc
addb
add
mov
xchg
mov
inc
pop
and
xor
shld
fsubrs
mull
lret
pop
shrl
dec
xchg
sahf
mov
repnz
fnstcw
add
push
xchg
int
xorl
pop
pushf
jp
outsl
imul
ss
imulb
lods
sub
mov
out
les
inc
xchg
xor
loopne
popa
int3
call
into
sbb
insb
gs
rcrl
xor
pop
and
dec
adc
mov
adc
enter
cli
jge
xchg
push
sbb
pop
cmp
sbb
fmuls
scas
mov
jge
xor
mov
adc
jno
clc
aad
jge
nop
and
mov
inc
jb
fstp
into
or
sbb
or
inc
xchg
or
test
cmc
mov
sub
rcrl
lret
sbb
cs
bnd
movsb
inc
popa
movsl
push
inc
sub
aaa
aas
outsl
jo
jb
jnp
dec
je
cli
je
pop
push
jecxz
and
out
or
dec
cwtl
daa
mov
aas
mov
in
movsl
dec
xor
dec
pop
xchg
sbb
lock
inc
sbb
sbb
cmp
mov
test
int
and
dec
imul
inc
insl
and
pop
xor
mov
outsl
test
push
lret
mov
in
fbld
ja
pop
pop
lret
aad
sar
adc
negl
ret
xchg
sbb
sbb
lods
ffree
rolb
inc
jge
xchg
xchg
insb
mov
adc
leave
popa
dec
add
mov
pop
or
insb
int
push
mov
mov
xchg
out
pop
mov
push
pop
cwtl
in
dec
sub
mov
xor
mov
sbb
aas
xchg
rcll
jg
jns
cltd
stos
mov
pop
add
adc
cmp
ss
dec
xor
nop
or
fnsave
and
mov
adc
dec
mov
mov
mov
dec
imul
jp
sub
xor
fwait
lahf
add
xchg
int
mov
push
sub
bnd
bound
sbb
mov
in
pushf
pop
xchg
andl
daa
or
sbb
addr16
jp
pop
push
mov
sub
mov
dec
mov
push
in
shl
pusha
push
lahf
fbstp
testb
add
sbbl
out
inc
mov
mov
xor
add
xchg
xor
mov
mov
push
sahf
mov
xor
jbe
mov
pop
ljmp
jae
jg
push
jmp
orl
ljmp
xchg
enter
les
test
lds
jl
ds
scas
leave
scas
mov
hlt
stos
inc
ljmp
add
dec
sbb
xchg
or
lahf
cli
int3
sub
mov
mov
sbb
dec
sti
fwait
xor
cmc
lret
or
frstor
data16
cmp
fidivl
movsb
lcall
jbe
or
cmp
enter
daa
inc
and
cmc
jno
push
add
dec
jo
adc
movsl
fnsave
popa
and
dec
rcrl
imul
fcoml
bound
mov
mov
fcmovu
or
pop
mov
gs
mov
mov
push
jp
sbb
cmp
in
jb
adc
test
dec
scas
adc
andb
dec
add
gs
xchg
int
shl
jb
fildl
stos
push
jg
mov
jmp
fmull
stc
sub
mov
andb
xorl
pop
xchg
in
mul
mov
adc
cmp
xchg
inc
mull
push
xchg
lret
fadd
lds
sbb
mov
gs
pop
cmpsb
pusha
cmc
mov
and
stc
xchg
loop
lea
es
jmp
popf
int
adc
mov
lods
adc
mov
repnz
jbe
cli
mov
xlat
scas
cmp
mov
js
cld
jne
ljmp
xor
lret
cltd
dec
pop
inc
adc
adc
mov
adc
inc
add
xchg
mov
cmp
lcall
rcr
in
call
das
stos
xchg
lods
dec
aad
loop
nop
incl
jae
test
mov
push
pop
sub
ficompl
xchg
int3
aam
lea
jge
jo
data16
test
bound
adc
pushf
sbb
jmp
in
and
cmpsb
inc
call
pop
fdivrs
push
int
jb
inc
dec
jmp
mov
jecxz
test
repnz
std
push
ljmp
xor
addb
push
push
fstpl
mov
inc
lock
stos
push
mov
je
stc
and
gs
sbb
cmp
mov
insl
sub
mov
cmpsl
inc
pop
xor
icebp
inc
xorb
mulb
dec
mov
jbe
mov
ljmp
sub
insl
int
and
es
std
sbb
in
sbb
clc
subl
outsb
popa
data16
cmp
ret
cwtl
mov
mov
lods
push
xchg
repz
pmaxub
add
cs
stc
inc
push
mov
sbbl
sbb
movsb
imulb
jmp
test
and
mov
out
flds
add
cs
and
aad
imul
jmp
cltd
cmp
std
mov
scas
mov
jno
shll
xor
dec
pop
movsl
fldl
and
or
jbe
fwait
into
add
push
sub
lret
mov
scas
mov
sar
push
hlt
stc
loope
add
jns
bound
xchg
rolb
push
mov
jg
sub
fdivl
addr16
jp
xchg
mov
mov
jecxz
pop
dec
outsb
or
fsubs
and
jno
lods
jo
mov
sahf
mov
out
ds
popf
xlat
adc
mov
inc
lea
and
insb
sahf
cmpsl
mov
jle
lock
push
in
int
insl
in
iret
aad
retw
mov
cmp
jae
int
push
scas
jbe
or
jns,pn
inc
imul
or
outsl
cmp
pop
mov
scas
rclb
cmp
sub
add
push
add
mov
leave
es
test
not
frstor
in
inc
je
and
inc
lods
sbb
xor
adc
add
pop
mov
adc
in
pop
mov
subb
push
imul
and
insb
daa
cmp
aas
leave
movsb
and
dec
mov
pop
pushf
in
and
push
enter
daa
inc
jp
cmp
mov
jno
cmp
dec
fbstp
push
pop
js
movsl
in
push
and
cltd
lahf
stc
mov
cs
test
nop
inc
jmp
jnp
pop
push
pop
pop
add
jle
repz
adc
or
loope
fisubrl
fsts
std
cmp
xor
adc
adcl
or
imul
add
sti
sti
xor
imul
lds
fs
sub
push
aad
mov
sub
jae
or
test
ja
jg
insl
shlb
xor
adc
add
imul
cmp
dec
sub
mul
lods
cli
lret
lcall
push
rcrl
out
rcrb
addr16
xor
les
outsl
inc
subl
stc
fucom
test
test
ss
out
lods
cli
adcl
and
xor
leave
cmp
jp
or
or
gs
in
loopne
negb
adc
sahf
imul
mov
and
cmp
fistpl
sub
sub
sti
adc
or
dec
test
mov
cwtl
loope
fnstcw
sti
les
inc
pop
repz
xor
call
sub
dec
pop
aas
scas
pop
adc
loope
pushf
les
jmp
movsb
shrl
lcall
bound
mov
lods
sub
jae
bound
sbb
push
sbb
std
negl
cwtl
popf
test
push
je
xchg
and
or
push
lds
mov
in
std
jg
das
fnstenv
cmpsl
mov
sub
and
fwait
shrl
in
iret
xchg
scas
insl
adc
mov
jecxz
pop
cmpsl
inc
ss
mov
sbb
pushf
xchg
lret
xchg
sbb
mov
dec
stc
and
lods
sbb
or
shlb
fsubrl
rol
ret
mov
mov
push
mov
fstl
fdivr
mov
aaa
or
cli
in
popa
jge
lods
push
rorb
mov
cli
sub
mov
cmp
dec
jne
stos
sbb
add
sti
mov
add
push
loopne
jg
stc
push
cltd
test
sarb
sbb
roll
dec
xchg
pop
iret
mov
stos
insb
fisttpl
add
dec
insb
test
xor
pop
xchg
or
xorl
jns
or
mov
push
mov
mov
sub
in
inc
leave
fisttpl
xorl
mov
fwait
std
or
int
and
test
mov
pop
nop
out
mov
aaa
bound
cmpsl
std
in
pop
xchg
pop
mov
mov
jmp
sub
ret
addr16
jp
test
mov
jl
mov
les
xor
in
inc
pop
pusha
xor
scas
fcomip
jmp
cmp
jecxz
pusha
xchg
and
fisubrs
fnstcw
adc
stos
ja
and
imul
jnp
inc
test
lods
in
push
sub
xchg
adc
iret
xor
mov
pop
pop
iret
repz
daa
jnp
jae
pop
pop
push
jno
push
or
test
push
neg
cwtl
pop
or
sbb
scas
xor
mov
xchg
mov
cmp
pusha
leave
popf
ds
hlt
inc
mov
arpl
push
fwait
inc
ja
xchg
jge
sub
sbb
ss
rclb
or
add
dec
xor
jmp
push
xor
stos
sbb
mov
clc
cmp
xor
pop
jbe
test
in
pop
clc
lcall
push
add
test
mov
mov
insb
dec
dec
scas
mov
movsl
jmp
call
lahf
sbb
repnz
pand
test
jae
ja
jp
and
fistps
pop
sub
push
push
sub
loope
sbbl
cmp
ss
adc
pop
imul
cld
push
sbb
fs
in
xor
lret
sub
shrl
push
insl
stos
lcall
inc
fsubl
xchg
outsb
outsb
lret
mov
cmp
les
adc
mov
sub
and
or
sbb
cmp
or
shl
mov
push
aam
repz
mov
push
dec
sbb
and
xchg
jns
bound
outsl
and
movsb
stc
xchg
adc
pop
adc
ss
out
mov
mov
out
data16
and
ret
xor
fiadds
loop
cmp
mov
out
or
addr16
xlat
jg
and
lock
add
data16
sbb
or
push
xlat
and
cmpsl
sub
sbb
mov
mov
stos
test
aad
fnstenv
mov
lds
cs
stos
shrl
xlat
pusha
les
mov
push
or
es
aam
lretw
cmpsl
xor
pop
repnz
les
and
pushf
outsl
and
mov
sbb
inc
jge
outsl
aas
dec
xchg
pop
jb
mov
xorl
jecxz
test
clc
int
std
sahf
scas
sets
push
mov
and
cmpl
aam
cmpb
out
adc
lock
cmp
das
mov
mov
mov
mulb
sarl
pop
les
mov
dec
fisubrs
lcall
faddp
icebp
hlt
cltd
aam
dec
data16
lret
add
out
and
dec
dec
das
pop
sub
add
nop
sbb
aam
xchg
ret
inc
sbb
mov
pop
std
clc
idivl
cs
imulb
mov
fstl
dec
popf
push
setl
jne
loope
in
bndldx
or
push
push
mov
out
push
movsl
movsl
xchg
xor
sbb
sub
rcll
loope
jp
ss
pop
push
call
add
movsb
test
adc
pop
push
nop
or
shll
sbb
xchg
xchg
lds
mov
out
sahf
ja
in
dec
inc
adc
or
jbe
fwait
sub
loopne
jo
or
mov
push
loopne
adc
bound
lods
jns
sub
in
mov
mov
add
mov
or
push
xchg
jp
sub
mov
aaa
push
mov
shl
dec
xor
mul
adc
frstor
push
sub
movntps
or
mov
addl
jle
and
lcall
ljmp
insb
je
imul
pop
jno
jae
rcll
cwtl
mov
ret
test
inc
xor
loopne
mov
or
and
mov
sub
int
mov
imul
add
cmp
test
sbb
repnz
adc
xlat
hlt
mov
add
mov
sbb
nop
lret
or
push
add
js
jmp
jb
fidivrs
outsb
lret
xor
push
loop
scas
cmpsl
enter
mov
loope
cmp
push
bound
jbe
cmpsb
shr
out
in
enter
daa
aas
mov
cmp
popf
inc
jno
jbe
jl
pop
fwait
dec
mov
mov
movsl
repnz
lahf
aaa
in
mov
test
ds
inc
or
pushf
pop
dec
mov
pop
pop
jno
push
push
dec
loope
dec
or
mov
cmp
shl
ds
popa
rclb
cmp
sbb
sbb
jl
jge
rolb
add
int
mov
sub
cmpsl
mov
daa
fistpl
cmp
fmull
popa
sub
loop
sarl
incb
icebp
out
jg
mov
das
mov
js
and
movsl
in
push
sbb
das
cmp
les
and
mov
push
xor
pop
xor
cmc
cmc
jbe
xor
pushf
push
loop
lcall
ds
adc
cmpsl
inc
lods
enter
cmp
push
movsb
fdivr
push
std
xchg
mov
call
or
and
aad
gs
jg
pushf
jmp
pop
lahf
mov
fisubrs
mov
add
in
mov
cld
sub
inc
into
cli
xlat
pusha
cmp
mov
sub
sti
jno
repz
std
push
jae
xchg
push
nop
nop
adc
dec
inc
pop
outsb
inc
mov
bound
aaa
sbb
inc
jns
xchg
adc
dec
ret
call
es
pop
movsl
popa
dec
adc
cmc
pushf
sbb
mov
scas
jo
cs
mov
inc
jge
ds
cwtl
xor
aas
jmp
add
sarb
push
xor
adc
sti
cmc
sub
cwtl
adc
cltd
mov
mov
mov
adc
dec
mov
pop
mov
ret
lock
add
xchg
push
mov
mov
addl
mov
push
nop
xchg
insl
loop
pop
dec
fnstcw
loopne
lock
lret
fmull
cld
ja
sahf
lret
je
sbb
jbe
jg
jecxz
into
pop
inc
sti
rorb
add
aam
xchg
mov
shl
insl
es
push
frstor
xor
jecxz
loopne
stc
popa
stos
lahf
or
mov
mov
mov
mov
psubq
add
ficoml
cltd
sbb
jecxz
sbb
sub
data16
dec
push
test
xchg
movsl
sbb
negl
stos
dec
mov
out
add
cli
add
pushl
adcb
dec
lret
gs
xchg
mov
sbb
lods
mov
mov
test
dec
aaa
push
add
pop
cs
xor
fwait
pop
sahf
movsb
push
adc
data16
dec
mov
outsb
cmpsb
jp
lods
aam
jns
push
test
xchg
mov
and
or
push
daa
jp
jg
mov
xorl
and
sub
in
dec
lret
pusha
push
loope
cs
jg
loopne
adc
adcl
popf
dec
jo
mov
add
push
stos
pop
fsubrl
insb
fcomip
pop
jnp
or
jle
add
push
mov
clc
xor
inc
xchg
sti
pop
in
inc
cmp
dec
addr16
mull
mov
inc
out
lods
jle
xchg
and
mov
out
imul
fwait
scas
sti
jg
jb
movsl
fisubrs
repnz
mov
hlt
xlat
ja
arpl
cld
mov
aad
jge
lcall
push
push
mov
push
mov
pusha
int3
aam
mov
inc
jo
shll
xor
popa
mov
scas
and
dec
inc
movsb
lock
mov
fnsave
pop
adc
aad
push
enter
daa
ds
push
cmp
fbstp
lret
cmpl
xchg
push
mov
stos
movsl
stc
adc
and
and
lahf
push
sbb
push
mov
push
test
or
sub
cmpsb
in
xchg
pop
jbe
mov
pop
mov
into
push
xchg
loope
cmp
cmp
dec
pushf
js,pt
imul
push
mov
sub
xlat
sbb
scas
xor
scas
stos
xchg
jle
cli
sbb
addb
int3
mov
mov
or
adc
cli
mov
outsb
xor
das
test
xor
orb
jg
in
mov
push
mov
mov
sub
xor
push
pop
xor
jg
jecxz
pop
lret
lret
outsb
shll
adc
push
or
in
mov
mov
es
fidivs
call
fs
inc
icebp
adc
cmpl
scas
xor
leave
out
data16
cli
mov
pop
cmp
mov
or
mov
sbb
loopne
test
mov
cwtl
imul
pop
inc
data16
sbb
jg
dec
xlat
lahf
lret
dec
sub
dec
sbb
xchg
lock
and
add
and
aad
pop
xchg
nop
imul
dec
mov
sbb
inc
les
adc
push
mov
xchg
fmuls
mov
call
movsl
push
rcrb
leave
loopne
sar
mov
lds
jmp
jl
lods
icebp
testl
dec
bound
mov
jb
adc
dec
data16
je
pushf
and
jo
xchg
push
std
in
add
cwtl
into
mov
mov
mov
andl
cmp
pop
sub
icebp
loope
push
icebp
ljmp
pushf
and
and
xor
rcrl
mov
insl
leave
push
push
dec
aam
frstor
mul
mov
cld
mov
mov
sbb
jge
sub
pmaddwd
push
ljmp
out
lock
push
add
fisttpll
and
xchg
iret
inc
sbb
push
out
movsl
popa
ret
lods
dec
mov
cmpsl
mov
iret
lods
and
xchg
mov
add
outsl
ja
dec
mov
test
push
fcoml
ror
dec
cs
fwait
or
xchg
push
dec
sbb
cmp
add
mov
jo
gs
add
lcall
xor
loope
or
fs
xor
aad
cmp
pop
xchg
inc
ds
pop
int3
ja
test
dec
sub
inc
insl
popa
xchg
scas
dec
push
mov
pop
jne
leave
sahf
mov
out
dec
cmp
bound
mov
fisubs
mov
mov
xchg
or
and
and
inc
or
fcomp
jp
mov
mov
lahf
pop
adc
pop
in
out
pusha
add
add
mov
and
fwait
lds
xchg
shll
and
mov
movsb
inc
popf
jae
inc
mov
aas
cmpsl
stos
shrb
mov
insb
dec
popa
cwtl
jnp
adc
xor
pop
adc
fwait
js
push
das
addr16
fs
std
jmpw
xor
push
mov
popf
cmp
mov
sarb
xchg
jnp
xchg
sbb
enter
lods
subb
fld
rolb
repnz
pop
lcall
xor
sub
jge
sub
sub
jnp
setbe
add
aaa
int3
mov
xor
jle
int
repnz
outsb
jo
stos
scas
repnz
inc
xlat
pop
cmp
mov
int
jbe
cld
push
in
mov
xchg
call
cmp
inc
or
pop
dec
fwait
cmc
dec
push
xchg
mov
or
int3
or
jne
sub
jp
test
aam
pop
inc
daa
loopne
cmpsb
push
push
js
pop
es
out
movsbl
ret
int
pop
sub
movsl
jecxz
test
adc
out
loope
cmp
xchg
sbb
pusha
dec
add
fwait
out
xchg
push
lret
sub
popa
outsl
push
sub
mov
out
ds
daa
push
xor
pop
fsubl
scas
mov
test
lea
mov
in
mov
or
push
and
pop
cmp
cmp
imul
mov
icebp
sbb
test
xor
jo
mov
push
inc
stc
mov
clc
fistl
xor
in
sub
lods
xchg
jecxz
mov
test
out
lods
aaa
cli
mov
clc
sbb
je
xlat
dec
fmul
imul
and
scas
pop
fstpl
dec
imul
jae
test
sbb
mov
loope
sub
shl
incl
sti
iret
mov
xor
and
es
inc
sub
add
push
inc
in
rcr
gs
les
fs
test
lea
pop
call
and
in
or
mov
daa
mov
mov
mov
adc
mov
sub
jge
aas
sub
xlat
jb
fwait
aam
ds
je
movsb
jnp
movsb
dec
push
movb
mov
xchg
add
es
sub
mov
push
dec
mov
xchg
fisttpl
xor
mov
mov
lock
std
mov
pop
mov
and
mov
pop
neg
pop
and
cli
mov
cmpsl
cmp
aaa
mov
jns
je
int
repz
push
and
test
and
sbb
pop
test
daa
shl
pop
mov
jne
push
aam
mov
lahf
sub
fnsave
xor
xchg
push
cld
mov
popa
fld
aad
mov
sub
sub
mov
push
lahf
and
xor
ud1
push
add
cmp
cltd
xchg
fiaddl
scas
xchg
push
in
sahf
out
xchg
or
fildl
sbb
rcrl
pop
jnp
shrb
enter
or
in
push
dec
mov
push
jne
or
or
jecxz
mov
and
push
pop
sbb
dec
dec
sbb
mov
or
sub
fwait
mov
jmp
jne
test
mov
fiaddl
xchg
xchg
outsl
in
sarb
xchg
pop
mov
int3
and
sub
scas
dec
jmp
pushf
loopne
jp
dec
cwtl
mov
xchg
mov
push
xor
fstl
in
jecxz
pusha
mov
jne
xchg
xchg
jmp
mov
push
ljmp
mov
jle
stos
inc
sub
jle
mov
into
jnp
loope
jle
sub
push
dec
or
adc
rol
insl
mov
xor
inc
inc
push
pop
jg
dec
dec
push
jge
in
cvtps2pd
xchg
add
fisubl
xchg
rolb
inc
imul
scas
shll
into
xchg
clc
xor
leave
jns
pop
hlt
insl
mov
sub
xor
cmc
cmpsl
jge
fwait
in
out
lock
into
pop
pop
or
cmp
add
xor
stos
mov
adc
xor
pop
lods
jae
inc
lea
xor
cmp
fisubl
pop
shlb
push
in
mov
mov
pop
cmp
inc
insb
jno
loope
jl
out
dec
dec
or
push
jbe
xor
addr16
push
lahf
xchg
jp
push
pop
ret
lock
lahf
pushf
add
mov
fsubs
les
pop
pop
or
push
mov
loope
test
cmp
sub
mov
mov
adc
adc
sbb
das
pop
add
aad
xor
push
dec
xor
int
movsb
movsb
sub
pop
movsb
cmp
lcall
xor
push
mov
sub
push
and
push
sbb
inc
cmpsb
mov
inc
inc
std
mov
xchg
and
and
and
lods
push
and
in
mov
inc
fdiv
lahf
jbe
popf
adc
sub
dec
int
mov
mov
sahf
cmc
dec
jge
xor
and
loop
jnp
stc
jo
xchg
call
xor
outsb
scas
dec
lods
jge
dec
mov
repnz
out
jbe
cli
out
sub
xor
sahf
test
lods
or
out
dec
leave
cmp
addr16
loopne
icebp
push
pop
cld
cmp
imul
lret
sub
popa
sbb
cmc
mov
sub
push
or
in
push
sti
jle
cmp
data16
nop
and
dec
pusha
or
rol
pop
leave
add
mov
mov
pop
in
ret
call
mov
mov
adc
push
jmp
loopne
jae,pn
push
inc
adc
ret
inc
jmp
dec
stos
jb
push
ret
mov
je
add
movb
std
cmp
mov
lods
xor
mov
test
adc
fwait
in
cmp
adc
mov
loope
lock
cmc
inc
das
xor
test
mov
xchg
ds
push
mov
push
out
aas
insl
xchg
test
cmpsl
cmp
mov
push
jge
cld
clc
xor
rorl
jcxz
and
mov
pop
pop
movsb
jne
rol
jns
sub
aam
stos
cmp
jge
sub
fst
xchg
jecxz
test
cmp
pop
popa
lock
and
mov
xchg
pop
cmc
sub
prefetcht2
cwtd
mov
mov
mov
test
push
scas
loopne
dec
cld
xor
test
ret
or
sbb
in
shll
xchg
pop
stos
pop
int3
out
sub
add
dec
cmc
decl
cmp
fwait
xor
push
sub
and
pop
adc
rcr
fdivl
jnp
dec
adc
inc
fdivs
fwait
call
insl
loope
cs
mov
jmp
out
or
sbbw
dec
cmpsl
push
in
jle
xchg
stos
sti
int
pmullw
icebp
repz
or
insb
push
jp
mov
sarb
shr
dec
sarb
sub
xchg
mov
jp
pop
cmp
jmp
push
pop
jae
inc
mov
out
sub
rcl
mov
mov
jecxz
and
scas
mov
jnp
jb
jle
stos
pop
push
cli
push
adc
test
ret
cmp
push
xor
pop
push
mov
xor
push
inc
jecxz
or
adc
inc
arpl
mov
jno
es
stc
scas
and
test
testb
mov
fildl
xchg
lock
dec
hlt
mov
jbe
inc
xchg
mov
push
bnd
mov
stos
add
add
insl
xchg
pop
aam
push
faddp
mov
xor
jb
bound
imul
cmp
push
rep
addr16
push
sahf
movsl
jmp
inc
and
enter
daa
cmp
mul
shlb
xchg
test
dec
cli
push
pop
xchg
icebp
movsl
push
xchg
push
and
pop
or
cs
test
push
aam
inc
xor
cmpsb
outsb
xchg
sbb
lods
push
js
mov
push
push
pop
loope
loopne
sub
in
cmp
inc
data16
xchg
adc
movsl
aas
xor
and
mov
jno
xor
aaa
adc
sub
in
push
pop
and
jp
fistpll
sub
mov
das
test
or
fistpll
mov
jne
mov
push
mov
in
xchg
and
adc
daa
int
cmp
mov
leave
negl
lret
mov
out
cmp
mov
sahf
int
scas
cmc
adc
xor
sub
outsl
jnp
int
scas
fmuls
daa
scas
enter
or
ss
inc
lods
fs
mov
hlt
xchg
out
les
adc
cmp
gs
or
lods
adc
xor
loopne
sbb
sbb
jno
test
sbb
add
repnz
sbb
xor
mov
jo
arpl
aad
xor
decb
xchg
jle
cld
nop
test
inc
or
pop
flds
lods
mov
xchg
and
orb
sub
jno
call
pushf
fwait
sub
push
fildll
fdiv
inc
cltd
mov
inc
add
les
lds
add
roll
jecxz
shrb
movb
fscale
loope
test
insb
ret
and
subl
fldt
test
mov
outsb
cmp
pop
push
comiss
mov
add
lods
rol
inc
push
mov
popa
cmc
fsubrs
hlt
stc
dec
lds
cmpsl
cmp
icebp
daa
push
push
cld
and
adc
xor
mov
and
dec
xchg
pop
ret
cs
rclb
in
push
aam
add
sahf
xor
or
xchg
mov
sbb
lods
dec
lds
jl
lods
nop
sbb
mov
mov
movsb
scas
mov
xchg
mov
dec
add
addr16
cltd
hlt
pop
mov
inc
ljmp
jb
mov
test
jge
xchg
pop
sbb
mov
or
jbe
sarl
xlat
stos
push
adc
fadds
jmp
sar
mov
orb
or
xor
sbb
xchg
out
mov
mov
xor
sub
dec
add
inc
xor
or
jae
fwait
pop
jnp
push
lahf
in
jne
xchg
mov
ljmp
jns
pusha
shl
das
addl
sub
movsb
dec
dec
addr16
mov
sbb
into
push
das
mov
xor
xor
mov
pop
mov
stos
arpl
sub
xchg
and
adc
test
popf
call
movsb
and
stos
sub
and
fs
insb
mov
in
fwait
and
dec
rcll
push
loope
outsb
ljmp
mov
fucomp
jae
pop
out
add
aas
or
mov
loop
lret
xchg
andb
sbb
scas
imul
push
xchg
repz
aam
ss
repnz
addr16
aad
add
arpl
or
mov
outsl
jge
sub
sbb
mov
dec
jl
or
xchg
int3
xor
pop
add
sti
fisubs
bound
int
jnp
add
mov
cmp
idivl
repnz
bound
ja
jbe
fs
jno
mov
ret
daa
cmp
mov
adc
mov
push
cmp
jmp
adc
cmp
shr
push
push
add
mov
xor
mov
pop
adc
pop
lods
xchg
loope
pusha
nop
sub
shll
add
or
dec
xor
rolb
mov
add
nop
mov
add
inc
and
incl
data16
rcrl
sub
addl
mov
adc
inc
pop
fsubl
loop
outsb
rcl
test
adcb
fidivs
mov
mov
mov
fcoml
outsb
xor
push
sub
cmp
imul
sbb
lret
add
mov
mov
cmc
sbb
jae
sahf
jo
add
xor
loop
push
stc
fidivrs
mov
and
ss
neg
lods
dec
inc
push
mov
mov
sbb
and
jmp
repnz
dec
into
adc
mov
aaa
icebp
mov
pop
cmp
imul
add
inc
fsubs
shlb
sbb
imul
fwait
cmp
sub
cmp
inc
inc
push
sti
fdivrl
lods
jbe
aad
sbb
nop
xlat
loop
dec
push
aad
sbb
mov
les
lock
dec
jns
in
int3
lea
xchg
add
pop
and
mov
pushf
jno
xchg
pop
push
clc
cmp
sub
mov
inc
pop
sbbl
inc
shll
imul
je
mov
jecxz
js
or
and
sub
cmc
mov
stos
add
dec
jbe
mov
pop
mov
pusha
and
jp
fildll
repnz
cpuid
fisubrs
mov
cmp
rcll
sbb
gs
out
rcrb
cmp
mov
incb
cld
dec
xchg
lahf
repz
sub
push
push
mov
loop
jne
push
dec
sub
std
aam
mov
ret
fwait
inc
loop
mov
lock
cmp
popa
push
lea
lods
sti
fildll
xchg
dec
notb
outsb
jp
push
inc
add
rcrl
jbe
mov
stc
ret
push
xor
das
mov
xchg
or
sbb
cli
jg
popa
cwtl
fcompl
stos
cmc
and
out
icebp
lds
push
cltd
dec
jns
xor
mov
xor
xor
mov
sub
pusha
pop
dec
inc
dec
ja
pop
jle
divb
inc
leave
fildll
rcll
fwait
inc
pushf
gs
inc
dec
sbb
pushf
fdivs
leave
mov
xchg
jns
mov
aaa
xchg
dec
ret
xchg
xchg
lea
lahf
lods
cmp
adc
mov
sbb
dec
add
pop
push
mov
in
xor
pusha
jno
xlat
jecxz
xchg
pushl
and
outsl
call
popf
rdpmc
dec
mov
cmp
nop
stos
pushf
insb
adc
add
loopne
negb
jnp
loop
jle
mov
push
sbb
xchg
popa
iret
int
test
cmpsb
add
xchg
inc
je
push
jae
lret
sub
cld
cs
push
fstl
popa
dec
mov
xchg
xlat
test
imul
call
lds
push
mov
orl
hlt
dec
pop
push
arpl
lds
or
jge
dec
dec
sbb
sahf
or
or
mov
add
bound
xor
add
or
jl
push
aas
mov
scas
loope
imul
andl
jge
dec
push
cmp
pop
jbe
sbb
enter
daa
cmp
jbe
ljmp
dec
push
mov
push
pop
aas
push
movsl
sbb
pop
and
jb
lahf
icebp
sub
push
aam
inc
test
add
scas
inc
arpl
pop
pop
cmp
js
cmp
jmp
icebp
push
mov
sbb
xor
cmp
test
daa
cli
mov
popl
mov
orb
sbb
jno
add
jnp
xor
or
int
pushf
sub
mov
pop
and
lcall
push
les
sub
rcrl
test
in
xchg
sbb
sbb
aad
mov
mov
and
and
aas
push
sub
push
mov
neg
ljmp
adc
lahf
mov
into
sbb
xor
lahf
pop
lock
scas
inc
outsl
cmp
loop
das
mov
addb
adc
pop
ss
leave
cmp
sbb
pop
out
in
mov
mov
push
cmp
push
test
xchg
sarl
notl
gs
pop
loopne
stos
iret
pop
pop
test
adc
bnd
imul
sub
cmpsl
imul
mov
test
sub
mov
in
stos
call
int3
dec
pop
xor
inc
push
or
jge
mov
xor
add
repz
adc
notl
mov
and
pop
adc
call
cs
cmp
inc
cmp
scas
aas
movsl
ret
stos
rcrb
cli
or
hlt
or
faddp
or
lock
cwtl
jne
cwtl
mov
insb
js
or
jbe
lcall
fcmovne
xchg
jno
pop
ljmp
mov
mov
lock
popa
das
rorl
hlt
mov
jecxz
push
ret
pop
enter
mul
pop
cmp
jle
dec
mov
jle
mov
aad
jo
jns
or
adc
jl
mov
cmc
fcompl
add
scas
sub
pop
aam
mov
ret
sub
xchg
dec
ret
xchg
cmp
xchg
or
jp
xchg
popa
movsl
popa
xor
jnp
mov
mov
push
fists
gs
sysexit
call
lock
bound
mov
lcall
xor
cmp
pusha
push
ss
xchg
sbb
mov
pop
jg
in
mov
push
push
sti
add
and
ljmp
xor
add
andl
in
mov
add
in
cmp
stos
dec
jmp
cltd
xor
or
fwait
jne
jle
in
lock
or
mov
cwtl
pop
out
test
aam
pop
push
test
mov
mov
fcomps
pop
or
sub
jp
dec
jp
sub
sbb
inc
loop
imul
push
fucomip
gs
sarb
insl
jmp
mov
xor
out
push
cli
popf
ss
mov
jp
popa
stos
fwait
and
cmp
sub
mov
sbb
adc
add
ret
pop
pop
adc
outsl
jae
jge
push
mov
mov
andl
aaa
xchg
cs
sbb
pushf
insl
imul
arpl
ljmp
mov
aam
mov
hlt
cltd
cltd
mulb
push
pushf
inc
movsl
mov
add
sbb
push
hlt
aaa
lret
or
movsb
inc
add
mov
pop
popa
jns
fisubrs
jge
cmpl
shlb
and
pusha
cmp
cmpsl
stos
movsb
or
or
call
dec
in
aas
dec
push
enter
daa
cmp
ss
mov
aam
adc
push
add
cld
and
mov
adcb
mov
push
lret
push
pop
inc
repnz
cmpsb
div
add
ds
js
jecxz
pop
sub
dec
push
ja
loope
lret
pushf
clc
jle
out
and
mov
ss
ss
fs
mov
pop
in
sbb
iret
push
add
add
popa
pop
fsubrs
sub
gs
mov
and
push
in
pop
fdivr
jle
sub
test
xchg
out
subb
cmp
dec
push
xchg
mov
leave
ljmp
stos
loop
xor
cmp
loope
and
cltd
in
lret
test
xor
loop
lea
inc
cmc
data16
xor
push
and
sbb
xchg
loop
sub
or
adc
setge
pop
jb
out
insl
cli
mov
popf
call
or
lahf
dec
into
ficoml
pcmpgtw
cmp
fnstcw
lret
adc
arpl
adc
rorl
sbb
loope
pop
xlat
sbb
sbb
push
arpl
sti
cmp
ss
repnz
xchg
nop
ret
fsubl
xchg
adc
les
sbb
pop
dec
imul
lahf
sbb
mov
inc
adc
sbb
fsubrs
inc
cs
gs
inc
inc
out
decb
dec
xchg
add
je
mov
popf
adc
repnz
xor
adc
test
jnp
xorl
divl
clc
lea
cmp
lock
inc
das
mov
andb
mov
stos
shll
scas
lahf
imulb
ret
bound
cltd
jae
mov
pop
cmpsl
aaa
cmp
sub
push
icebp
lods
mov
imul
test
mov
push
pop
and
and
push
pop
and
rclb
or
dec
sbb
aam
or
movsb
es
repz
iret
das
dec
xchg
dec
dec
ljmp
xor
mov
mov
jns
imul
insb
sete
or
mov
test
push
mov
mov
push
xchg
pop
dec
sbb
cmp
shrb
or
mov
stos
add
cmp
xchg
decl
add
ja
xor
bound
xchg
roll
mov
mov
push
jbe
fsub
push
inc
divl
or
xchg
jp
movsb
sub
push
mov
test
ficomps
out
xchg
fwait
bound
bound
in
xorb
out
call
sub
xchg
sub
addr16
in
jp
xchg
jno
add
push
cmp
adc
dec
insb
lods
in
mov
pusha
cmpsl
stos
pop
in
cli
xchg
movsl
std
dec
jmp
adcl
cmpl
out
aad
popf
pop
and
mov
mov
lds
insb
int3
dec
xchg
jnp
popa
pop
jle
cmp
stos
lahf
ret
xchg
ret
inc
pop
inc
loop
inc
mov
pop
jae
push
dec
out
or
cld
std
ss
pop
pop
ret
mov
cmp
sbb
jbe
imul
sub
jno
adc
bound
out
mov
daa
gs
leave
int3
in
hlt
in
xor
addb
lahf
jge
xor
sbb
push
call
add
mov
inc
jno
pop
nop
shl
ficoms
sub
fsubp
mov
and
je
movsb
xchg
aad
push
fiaddl
mov
es
enter
daa
aaa
sub
cmp
outsb
es
or
sbb
xor
sub
outsb
sbb
push
push
jp
shrb
xchg
fsubrs
addl
out
pop
xchg
imul
call
imul
mov
push
in
cmp
and
sbb
jmp
pop
sbb
scas
sbb
jecxz
xor
sbb
nop
int
or
sub
xlat
jbe
jo
fcoms
mov
sub
sti
movsb
outsb
jmp
ficompl
jg
test
mov
insb
mov
mov
iret
push
xor
jns
hlt
popa
imul
mov
pop
lret
roll
mov
jecxz
mov
add
and
outsl
imull
adc
add
pop
adc
cmp
lods
add
shl
push
and
cli
out
ss
outsb
negl
gs
testb
cs
into
mov
scas
int
je
inc
pop
xchg
nop
call
jo
imul
out
lds
mov
in
or
sbb
jge
pop
cmp
mov
mov
sti
jmp
cld
jbe
into
add
nop
push
jb
inc
push
movb
int3
and
repz
jmp
push
call
push
pop
jne
cmp
jge
pushf
jb
push
es
es
inc
mov
mov
aas
jecxz
popa
jb
or
or
and
decb
loop
adc
or
push
repnz
aaa
loopne
dec
dec
pop
mov
lea
mov
das
vpcmov
dec
and
mov
movsb
imulb
lds
cwtl
repnz
mov
mov
mov
addl
cld
iret
lds
mov
dec
movsl
and
mov
cmp
sub
sbb
aam
mov
add
cmp
outsb
fstpl
mov
pop
ljmp
scas
lods
cmp
cmpb
test
push
pushl
psllq
aas
cltd
rclb
sub
jle
xor
push
stos
test
sub
xchg
or
shll
push
pop
jge
dec
stos
ret
out
sbb
ja
push
and
stos
lret
inc
xor
or
mov
mov
sbb
ret
inc
pop
outsb
pop
jp
cmp
adc
dec
iret
les
or
repz
rcll
push
jne
adc
xlat
out
lds
inc
popa
iret
jns
stos
popa
in
rcr
xchg
xor
adc
or
in
jp
mov
mov
icebp
popa
mov
test
inc
dec
das
sbb
in
add
sbb
es
xchg
js
fsubr
pop
mov
cwtl
orl
out
enter
icebp
mov
push
clc
add
cmc
incl
dec
movsl
mov
jnp
loope
daa
jge
push
repnz
push
fwait
iret
ljmp
pop
jle
call
jae
lods
dec
push
wbinvd
dec
or
ja
outsl
inc
fmulp
iret
ficoml
leave
pushf
sbb
and
imul
mov
clc
hlt
sub
jge
jmp
mov
push
bnd
mov
hlt
das
lcall
xchg
xor
xor
dec
xorl
add
pushf
pop
mov
ds
jo
pop
inc
scas
jle
mov
dec
mov
jecxz
push
std
cmpsb
push
sub
jbe
icebp
sbb
or
cli
cld
daa
sub
jno
andb
movsb
adc
push
enter
xor
inc
lahf
dec
add
dec
mov
test
popa
lods
push
inc
adc
push
pop
scas
push
inc
pop
test
cmp
adc
outsb
les
jb
pop
cmp
arpl
nop
movsb
pushf
adc
in
pop
mov
addb
add
adc
jecxz
int
cltd
add
ss
fldl
sahf
call
fs
xchg
shrl
push
jo
sub
inc
addl
cli
rcl
mov
in
push
mov
mulb
loop
bound
stos
xor
push
mov
das
fcoms
aas
notl
fs
lret
or
mov
xchg
jg
jmp
std
sahf
cld
hlt
adc
mov
pop
leave
loop
mov
jo
and
or
pop
lods
and
add
sbb
or
push
ljmp
jne
cmp
outsl
jno
loopne
imul
insb
enter
xchg
nopl
mov
adcb
jge
imul
adc
push
insb
in
ds
jns
sbb
mov
xlat
xchg
in
sub
mov
in
in
shll
cwtl
add
cmp
jnp
inc
repnz
dec
lcall
fstps
pop
ret
repz
adc
sub
fucomp
xor
jp
popf
jns
pop
lock
insl
adc
lret
adc
je
inc
cmp
testl
pop
addr16
adc
add
jecxz
rcrl
and
jg
cmpsb
test
mov
dec
and
and
mov
mov
ud2
lock
hlt
das
outsb
sbb
test
fs
mov
divb
jnp
dec
lods
adc
xor
sub
cld
cli
xlat
sbb
pop
insl
mov
mov
sub
pop
or
sub
ret
inc
mov
ret
xlat
stos
repz
add
xchg
outsb
push
ljmp
adc
in
mov
pop
das
pushf
push
ficompl
add
mov
jge
stos
mov
adc
out
dec
data16
test
enter
inc
jo
std
xchg
xchg
sarl
icebp
hlt
stos
mov
xlat
out
jge
cmp
jb
cmp
dec
cwtl
loopne
cltd
xor
or
or
loope
mov
aaa
pop
add
xor
push
test
ret
inc
and
and
lea
into
andl
inc
jnp
fcomps
xchg
xchg
pop
in
jns
xchg
test
mov
jp
sub
mov
xchg
addr16
mov
jp
xor
mov
sbb
mov
xchg
imul
mov
rcr
add
xchg
dec
pop
dec
jmp
sbb
sbbl
jg
int
stos
mov
mov
stos
push
psllq
pop
jnp
lock
push
cmp
dec
adc
jb
ret
outsb
pop
mov
test
stc
jae
sub
push
rcrb
fsubrl
outsb
ret
add
fimull
lock
xor
sbb
movsl
adc
stos
sub
jg
lods
rcrb
pop
repnz
jb
mov
sbb
xchg
xchg
das
inc
cwtl
sub
jge
lods
rcrl
cmc
out
pop
dec
pop
or
xchg
jb
sub
int3
pop
jmp
pop
out
shll
xchg
ss
jo
in
subb
imul
cld
cmp
popl
in
hlt
and
enter
daa
xor
imul
sbb
jl
lock
mov
jecxz
cmp
and
mov
imul
sub
test
test
cmpsb
andb
shll
jecxz
jno
out
lods
push
out
inc
loope
imull
cmp
jmp
ficoms
cmp
or
cli
sbb
pushf
pop
xor
and
sbb
cltd
or
mov
dec
pop
sbb
xor
push
jmp
cmpsb
enter
pop
outsb
scas
inc
je
xorl
sub
cmp
lcall
repz
cmp
adc
test
jmp
lret
shll
mov
lods
sbb
stos
mov
lahf
jp
cmc
mov
test
mov
imul
jno
sbb
add
lods
arpl
inc
lcall
or
out
insb
nop
cli
push
xor
mov
mov
cltd
lahf
into
orl
gs
and
loopne
add
lods
adc
mov
adc
dec
mov
jecxz
add
out
rcrb
xchg
cmp
xlat
and
mov
push
lret
inc
cmp
pop
outsb
in
pop
xchg
scas
nop
push
test
dec
stc
push
flds
lret
rorb
cmp
movsl
loop
repz
ret
out
mov
stc
lea
inc
mov
pop
mov
in
pushf
enter
add
or
sub
inc
ret
mov
aas
and
out
mull
push
je
mov
jecxz
mov
stc
std
lret
sbb
cwtl
popa
data16
out
cmp
imulb
js
or
push
mov
mov
cmc
inc
lock
jl
das
dec
mov
mov
mov
rcrl
mov
cli
insl
call
icebp
jge
xor
pop
mov
xor
cmp
lret
mov
dec
mov
jge
inc
rorb
or
aam
or
ret
data16
push
fucomp
fiadds
xchg
push
inc
ds
lret
lods
adc
cmpb
jno
xchg
dec
inc
and
fmuls
cmpxchg
mov
test
vorps
jmp
xchg
sbb
mov
mov
out
loopne
ja
inc
enter
xor
insl
xor
addr16
hlt
cmpsb
pop
xor
sahf
mov
xchg
push
negl
insb
mov
ss
out
dec
mov
cld
inc
mov
sub
fwait
xor
jne
scas
test
js
push
out
and
xor
mov
jns
sub
xchg
rcrl
mov
push
sbb
xchg
shll
idivb
xchg
xchg
rorb
imul
add
pop
fcmovnu
pusha
js
sbb
xchg
xchg
push
jb
jmp
in
add
add
popf
sarb
mov
push
jbe
and
fistl
fisubrl
and
ficomps
jle
jecxz
push
xorb
mov
repz
sbb
stos
jae
in
xor
xchg
stos
clc
or
insl
test
inc
fdivrl
xchg
mov
sbb
sti
in
jl
cld
scas
fldenv
mov
shlb
shl
and
push
hlt
arpl
mov
sbb
xor
or
dec
outsb
add
xlat
add
add
pop
sbb
and
xor
out
popl
scas
cmp
mov
jo
sarl
sbb
mov
jbe
jo
in
fcmovnu
add
movsb
mov
fnstsw
pop
imul
jno
fsubs
mov
and
push
mov
call
lahf
mov
push
test
notl
inc
cs
pop
cmpsb
add
aas
js
push
cmp
arpl
push
jge
loope
dec
sbb
push
xchg
cmp
test
adc
mov
mov
movsl
sbb
mov
add
jbe
xor
notl
gs
subb
stos
imul
xchg
insb
lcall
iret
fsubrl
clc
push
outsb
adc
mov
sbb
jg
je
mov
push
mov
mov
pop
pusha
and
into
lods
push
cmp
cmpb
aad
notl
mov
roll
xor
fstpl
xor
adcb
xor
shl
loop
pop
data16
sub
fs
icebp
scas
adc
pop
or
xchg
fimull
adc
cli
xchg
xor
fsubrl
out
pop
or
cwtl
popa
gs
out
sub
inc
icebp
pop
hlt
shrb
or
add
mov
adc
pop
jne
jb
push
inc
test
cmp
pop
adc
fsubrp
sub
rolb
sti
neg
sahf
jle
test
mov
jno
dec
pop
jnp
inc
sbb
flds
cmpsb
adc
repz
loop
jbe
jge
sub
lahf
fwait
ljmp
ss
pushf
jae
icebp
jmp
addps
mov
inc
dec
dec
inc
shrl
jb
cmpl
je
mov
jecxz
std
cs
sbb
mov
cwtl
sbb
and
lret
jecxz
lea
dec
clc
xchg
jl
mov
inc
pop
mov
mov
aas
jge
pushf
sub
xchg
and
jbe
xchg
and
das
insl
shrl
int3
divb
fsubrs
mov
dec
ret
inc
shl
add
cld
push
js
lret
cmp
mov
outsl
and
mov
and
rcrb
sub
fcmovnbe
fdivl
dec
lds
clc
mov
mov
aaa
popa
test
dec
lods
jge
arpl
addr16
or
nop
daa
pop
movups
mov
mov
popa
cltd
jne
ljmp
mov
std
dec
xor
outsb
test
mov
aam
arpl
test
imul
pop
jle
inc
stos
popl
out
add
test
push
xor
shrb
or
aad
sahf
scas
out
mov
cmp
adc
pop
stos
arpl
ja
imul
push
add
inc
push
adc
divl
adc
mov
inc
cmpsl
out
add
icebp
out
pop
jns
pop
insb
in
ret
and
mov
cmpsl
sub
adcl
pop
jp
cmpsb
jmp
mov
cmc
dec
cmp
in
pop
pop
pusha
adc
or
subl
icebp
add
xchg
scas
pop
sbb
mov
pop
dec
popf
stc
mov
mov
mov
in
dec
out
and
sub
jnp
nop
stos
jle
add
push
movl
ret
mov
inc
mov
fnstenv
repnz
pop
sub
scas
or
je
pop
stc
pop
fisubrl
push
sbb
and
imul
scas
cmp
rol
icebp
mov
into
inc
pop
mov
jae
cmp
hlt
adc
adc
mov
push
inc
sahf
jae
jge
mov
sbb
outsl
aaa
test
test
pop
mov
in
mov
pop
dec
in
add
jo
inc
xchg
add
xchg
movsb
mov
test
jbe
frstor
enter
daa
xor
mov
ja
hlt
mov
pop
dec
icebp
push
or
jno
adc
fisubl
lahf
stos
cli
rcll
insb
arpl
ret
inc
mov
dec
sbb
push
iret
js
loop
pop
add
loope
leave
add
cmp
outsl
ds
loop
adc
jge
pop
aas
orl
mov
inc
and
movsb
sbb
sub
or
cmpsl
cmp
pop
sbb
adcb
mov
push
nop
lea
xchg
outsb
jne
lock
sbb
mov
xlat
stos
mov
mov
mov
xchg
fs
sbbl
cmp
mov
repz
lret
lahf
rcrl
fistpl
js
push
cmc
dec
test
xor
out
outsl
jae
stc
fcomip
stos
fs
adc
ds
cmp
lods
pushf
stos
push
out
les
mov
int
adc
sub
sub
sbb
gs
cmp
adc
fneni(8087
imul
rcl
data16
mov
lea
cmp
or
adc
or
cmpsl
in
sub
repnz
mov
mov
nop
aam
jle
mov
xor
sahf
movsl
fnstcw
loope
les
into
hlt
xchg
cmp
lea
pop
call
sbb
sbb
cmpsb
inc
adc
or
loop
leave
cs
aas
enter
inc
inc
fsubl
sbb
adc
dec
in
stc
je
add
cmp
xchg
std
sbb
jl
xlat
popf
sbb
mov
xchg
push
dec
jecxz
and
jecxz
cmp
int
mov
in
sbb
das
or
int3
and
mov
add
sbb
idivb
pop
insl
mov
dec
dec
popf
imul
daa
fcomi
icebp
fcomip
sar
jnp
mov
test
cmpsl
mov
gs
daa
and
pop
mov
push
aas
sub
mov
ret
test
es
jmp
fnsave
inc
inc
clc
mulb
mov
popa
mov
xorl
inc
mov
fcoml
xor
outsl
hlt
mov
cltd
lods
dec
lock
repz
xchg
lods
dec
fwait
stos
ja
in
movsb
xchg
mov
push
jmp
rol
ja
sub
stos
jle
xor
cmpsb
inc
roll
ret
cltd
or
sbb
xchg
insb
add
loop
jecxz
jmp
aam
xchg
sbb
jecxz
in
pop
data16
int
mov
mov
pop
test
out
or
mov
fwait
hlt
jae
mov
or
sub
or
out
loop
xchg
xchg
jns
xor
push
xchg
jno
iret
mov
imul
stos
sbb
jl
pop
addr16
mov
mov
or
mov
fs
dec
mov
inc
mov
fmull
xchg
cmp
jp
jp
pusha
orl
out
pop
mov
and
pop
mov
hlt
in
jo
shl
and
mov
jnp
add
push
push
clc
rcll
inc
xchg
iret
lea
xchg
sbbl
adc
xchg
push
sbb
or
arpl
inc
fidivrl
xchg
cmp
sbb
and
scas
lahf
in
rol
adc
sbb
jmp
mov
repnz
stos
mov
pop
lret
xchg
pop
mov
arpl
cmp
inc
mov
adc
xor
xchg
testl
lock
lea
adc
fidivrs
xor
mov
scas
cli
jne
and
adc
rclb
stos
jbe
mov
or
lcall
cmp
sub
jno
mov
sub
inc
orl
dec
xor
lahf
lret
push
cltd
mov
fstl
lods
inc
dec
les
cmpsb
or
xor
insl
xchg
js
add
pop
movsb
and
push
mov
jge
cmp
xchg
leave
ds
sbb
andb
sahf
mov
pop
cmc
sbb
inc
add
es
xor
leave
jmp
or
mov
sub
pop
nop
pop
lcall
push
out
mov
push
sub
sub
icebp
fadds
push
fistpll
jbe
jge
cmp
cmc
mov
daa
push
and
js
push
inc
movsb
sbb
aaa
pop
pushf
fadds
jp
adc
adc
mov
cld
inc
sahf
mov
cmc
adc
daa
outsl
push
push
pushf
loop
inc
pop
stc
xchg
pop
jno
dec
ss
adc
cmp
and
mov
or
cli
in
aam
xor
sub
or
pop
outsl
mov
arpl
cmc
inc
adc
lods
call
add
or
sbb
inc
push
sbb
sub
pop
mov
cwtl
movsl
out
push
lret
les
test
xor
nop
scas
inc
push
dec
push
inc
cmp
push
repz
movsb
imul
cld
inc
leave
enter
and
out
mov
adc
pushf
leave
jo
jmp
ret
push
cs
push
sub
loope
inc
imull
stos
jb
shll
mov
je
test
jecxz
dec
xlat
and
mov
rcl
cwtl
xchg
pop
jne
and
push
mov
add
fistl
jae
pop
rcrl
cmpsl
mov
cwtl
lock
mov
dec
mov
in
xor
push
mov
or
fdiv
mov
out
and
cmpsl
xor
mov
mov
cmp
pop
daa
testb
xchg
dec
mov
fisubl
add
sub
ret
jb
mov
es
inc
and
pop
into
clc
xor
ljmp
push
lods
push
jmp
mov
lods
stc
icebp
xchg
and
mov
bswap
fstps
cltd
jecxz
push
test
jo
push
dec
pop
or
add
cs
mov
jo
sbb
js
insl
sbb
add
fsubrp
mov
xor
cmp
or
mov
mov
inc
inc
aaa
mov
and
mov
inc
sbbl
push
pop
hlt
jne
add
mov
inc
out
sarl
and
mov
mov
in
pop
push
xchg
sarb
mov
in
ja
and
xchg
inc
imul
sub
mov
rcll
adc
lret
push
in
mov
pusha
dec
out
cmp
shll
mov
jmp
inc
jnp
adc
and
push
jne
inc
push
add
xor
mov
and
sub
lods
aas
push
and
push
iret
pop
adc
repz
insl
roll
jae
lret
fiadds
stos
push
pop
jmp
adc
mov
sbb
hlt
loop
dec
mov
add
test
add
ljmp
mov
xchg
jle
hlt
cmpsb
pop
shll
cmpsb
insl
inc
movsb
mov
jge
push
movsl
sbb
mov
aaa
add
mov
stos
mov
add
into
inc
pop
stos
add
fisubs
popf
xchg
add
xor
sub
mov
aad
pop
push
mov
mov
ficoms
pop
in
nop
pop
in
xchg
sub
cmp
rcll
jno
out
jl
sub
dec
iret
cli
arpl
aaa
push
xor
adc
push
lahf
jmp
inc
outsb
test
pop
shl
mov
jno
js
mov
out
push
arpl
loope
sub
sub
into
cmp
jnp
adc
xor
jecxz
std
dec
jae
jecxz
stc
sbb
cmp
cld
jmp
scas
outsb
dec
int
mov
repz
sbb
xchg
lcall
pop
fsubrl
fnstenv
outsb
cmp
clc
subb
jg
xchg
mov
mov
call
push
inc
repnz
push
and
shrb
es
rol
int3
and
mov
lahf
rcrb
std
lahf
xor
pop
xchg
loop
lods
insl
stc
dec
out
jne
fcom
repz
call
fisubrl
hlt
roll
adc
cli
and
xor
sub
cmp
gs
stos
loopne
pusha
inc
pop
push
adc
imulb
sahf
repnz
mov
pop
push
jmp
std
in
fcmovne
jnp
jle
je
shlb
sub
xor
in
add
sti
add
out
inc
aad
pusha
sbb
dec
jne
mov
fldcw
repnz
ljmp
das
hlt
mov
fwait
inc
icebp
sbb
pop
outsl
or
adc
rcrl
stos
jmp
ret
mov
movl
lret
jo
popf
push
js
inc
lret
lret
xor
and
and
test
mov
mov
mov
pop
dec
mov
dec
pop
je
into
mov
je
lock
movsl
das
leave
loope
mov
fwait
or
and
xchg
mov
pop
test
ljmp
bound
inc
cwtl
dec
xchg
xor
sub
lea
cld
rcrl
sub
fsubrs
mov
stc
inc
daa
rcl
adc
mov
cmp
jmp
fldl
mov
ljmp
ret
es
cmp
mov
push
jmp
cvtps2pi
mov
in
jge
cltd
sbb
mov
mov
fs
xor
push
adc
test
xchg
pop
and
shll
adc
jg
pop
or
out
insb
loope
add
stc
dec
fdivrp
fadds
xor
inc
iret
or
mov
jg
and
inc
and
mov
fdivrl
sbb
loopne
inc
sbb
or
mov
in
cmp
push
std
repnz
jne
xchg
test
in
movsl
out
mov
push
dec
jns
roll
popf
cmpsb
jae
pcmpgtd
mov
dec
mov
fisubs
or
andb
ljmp
insb
das
mov
inc
sbb
dec
xorl
mov
in
aas
fnstsw
push
mov
jmp
adc
jns
push
add
mov
jb
scas
stos
cmpsl
and
and
cmp
mov
jle
pop
or
or
adc
push
lods
iret
and
in
push
insb
inc
pop
enter
xlat
imul
mov
cmpsb
push
push
fadd
lods
fcmove
adc
sbb
cltd
stos
imul
jno
sbbl
mov
insb
lcall
icebp
jnp
arpl
push
out
inc
cmpsl
lds
sbb
jmp
add
mov
int3
scas
cltd
add
faddp
pop
inc
xor
pop
loope
scas
mov
bound
movsb
pusha
into
cmp
jbe
in
ja
mov
nop
and
daa
xor
lods
cmp
xor
jl
leave
repnz
jne,pt
push
sbb
aam
pop
fisubrl
stos
ljmp
aas
clc
mov
and
das
cmpsb
ja
jge
or
dec
push
ret
add
clc
adc
hlt
repz
sub
bound
and
push
pop
jno
pop
cmp
xor
rcrl
mov
outsl
add
lea
adc
out
int
popf
mov
sbb
pop
cwtl
and
dec
push
pushf
pop
sbb
and
sub
outsb
sahf
xor
and
jnp
xchg
mov
mov
mov
xor
push
dec
pop
fs
mov
inc
cwtl
lret
pop
shll
mov
pop
ret
dec
jno
sahf
mov
pop
outsl
adc
cmp
add
stc
add
sub
adc
hlt
push
ss
xchg
out
lods
push
les
mov
xor
arpl
push
xor
xor
pop
cmp
add
jp
mov
repnz
xor
adc
mov
ficompl
cmp
push
push
mov
xor
adc
out
mov
scas
popf
nop
push
arpl
cmp
out
in
popa
jg
mov
outsb
push
stos
sti
mov
jae
or
jno
mov
popa
sub
inc
push
fcoml
adc
xchg
push
imul
push
jb
xchg
cld
gs
and
adc
mov
pusha
cs
lahf
aam
push
es
sub
cld
outsl
jb
divb
dec
dec
pop
mov
xchg
in
pavgw
adc
sub
mov
mov
jecxz
sub
outsb
add
jo
inc
pop
pop
xchg
cmpsb
mov
dec
fdivp
or
pusha
mov
push
cmpsl
cmp
pop
test
stos
and
insl
imul
cmpsl
das
mov
xchg
icebp
cmpsl
jmp
lret
cmc
sbb
mov
push
jmp
clc
inc
lds
sbb
shrb
sbb
aam
xchg
mov
rcll
mov
mov
popf
push
mov
hlt
mov
sub
popf
mov
rep
notb
cld
sub
jl
jmp
cltd
push
into
push
test
xor
popf
dec
rolb
lret
or
das
xchg
imul
mov
stos
dec
mov
rolb
adc
imul
mov
sub
inc
sbb
xor
cmp
mov
dec
jne
mov
xchg
push
into
ja
rcrb
scas
jae
or
mov
fwait
sbb
sbbl
addb
jg
test
jns
xchg
pop
in
inc
xchg
pop
xchg
sub
lds
and
xor
jp
sti
mov
cmpsl
jl
mov
mov
orb
jg
int
ljmp
jmp
fstpt
sbb
xchg
and
popf
xchg
test
mov
mov
inc
stos
sbb
and
jg
insb
and
jnp,pn
jmp
jle
adc
push
jecxz
fcoml
shll
iret
or
ret
movsl
pop
mov
xor
mov
push
lods
leave
or
aam
dec
inc
push
adc
xchg
cmp
adc
scas
enter
test
mov
mov
mov
roll
hlt
cmp
sbb
inc
cld
inc
stos
jae
jge
jns
sbb
aaa
aaa
cmpl
mov
adc
cltd
cmp
fisubrs
les
mov
or
dec
arpl
cmp
inc
and
or
jbe
sbb
in
pop
shll
mov
pop
cmp
mov
push
movsb
jl
cmp
sub
std
mov
xor
inc
ljmp
adc
stc
test
out
scas
and
addr16
pop
mov
jecxz
pop
popa
popf
inc
push
scas
loope
push
push
sub
in
call
ds
adcb
add
mov
aad
sbb
repz
add
movsb
inc
xor
adc
int
addr16
sub
shll
lcall
cltd
fdivr
push
popa
sub
fsubrs
ss
stos
sahf
andb
mov
add
mov
int3
movsb
and
testb
dec
imul
notl
and
in
sti
jecxz
cli
pop
orb
cmp
jno
sbb
xor
shrl
mov
push
stc
mov
adc
ss
mov
cmp
gs
and
movsb
cmp
xchg
xor
pop
cmp
stos
int3
or
cmp
into
aad
lret
gs
je
dec
aad
pop
popa
xor
daa
xchg
adc
movsb
jp
cmp
cmp
sbb
hlt
mov
shrb
jg
mov
fxtract
xchg
sti
popa
jmp
aaa
aad
lahf
push
nop
inc
test
inc
out
mov
fstps
ss
out
and
aaa
push
fcoml
std
xchg
in
xchg
ss
push
or
pop
aad
add
pushf
lret
jmp
bswap
jp,pn
jg
in
mov
push
jb
push
fisttpll
sub
je
mov
jecxz
cmp
sub
cmpsb
std
mov
fcompl
pusha
lods
sub
mov
faddl
imul
fistpl
mov
mov
arpl
sbb
or
jnp
xor
sar
add
push
lahf
decb
dec
dec
cmpsl
add
repz
icebp
cmp
cmp
xchg
mov
es
xchg
shll
sarb
lods
sub
cmp
rcr
or
rcr
es
or
push
clc
loop
fists
adc
popa
sbb
inc
mov
push
push
sbb
xlat
fstpl
add
mov
cltd
mov
test
and
mov
jle
push
xchg
jae
dec
aaa
inc
subl
jnp
sbb
xor
fwait
pop
aad
xlat
stos
cmp
xchg
xor
outsl
add
push
cld
jmp
in
or
repnz
dec
cmp
jg
sbb
loope
ja
mov
push
inc
inc
xchg
aaa
or
mov
fwait
dec
xchg
rcrl
inc
int3
loop
dec
fucomi
mov
jmp
cmc
fucomp
test
xchg
add
in
aaa
ficoml
jbe
inc
sub
push
je
jp
xchg
insb
mov
pusha
sbb
jnp
dec
inc
fnstenv
pusha
sbb
lock
adc
das
jmp
cmpsb
push
out
addl
popf
mov
sbb
lock
inc
and
out
insb
sbb
jnp
test
push
sub
ror
loop
test
adc
pop
flds
in
adc
lahf
or
or
dec
xor
fisubrl
cli
adcb
popa
mov
jge
scas
sub
jle
xor
mov
mov
adc
leave
sti
jo
hlt
xchg
inc
lods
xchg
icebp
jge
lock
dec
fnsave
inc
jge
or
outsb
int3
test
dec
fimuls
lods
aas
xor
adc
mov
and
xchg
cmp
movsb
jbe
mov
mov
lret
in
inc
in
enter
daa
shrl
daa
cmp
mov
mov
push
loopne
sub
imul
sbbl
jb
lahf
push
mov
fsubl
out
jns
adcb
mov
sahf
dec
loope
dec
aas
sub
mov
fstpt
test
mov
les
repnz
sbb
pop
add
jbe
xor
xor
int
adc
sub
mov
pop
xchg
add
lcall
aam
stos
push
dec
sub
sahf
pop
outsb
fisttps
xor
push
jg
mov
mov
mov
lods
xor
and
mov
dec
call
aaa
fsubrs
push
shl
add
rcll
lret
sbb
pop
sahf
adc
dec
cmc
sub
dec
xor
mov
dec
loop
adc
pop
fs
jnp
aad
adc
lods
pop
hlt
add
out
cmpsb
aaa
cli
mov
jae
cmp
sub
or
and
gs
sbb
out
aam
scas
fstl
cli
xor
adc
scas
mov
int3
js
push
mov
push
aas
pop
cmp
cmp
xlat
nopl
inc
xor
mov
inc
mov
sti
adc
cmpsb
push
add
aad
aam
nop
sbb
jae
xchg
stc
mov
aas
fsts
pop
repnz
push
xchg
insl
xchg
or
fs
mov
xchg
popf
mov
mov
adc
jl
jne
sub
lea
cs
testl
mov
mov
dec
aaa
sahf
js
sub
adc
cs
std
pop
out
or
pop
out
cmp
pop
push
mov
fcmovne
pop
enter
sub
mov
push
fsubl
ror
and
in
iret
rorl
outsl
test
jne
cmp
aas
cmpsl
sub
push
icebp
adc
dec
cld
push
cmp
lret
shll
ja
shr
pop
and
outsl
and
push
add
dec
daa
into
sub
add
aam
jge
ret
dec
aas
mov
xlat
aaa
fidivl
mov
movsl
xchg
popa
xor
lods
call
mov
cmp
das
push
mov
outsb
cmovp
aam
mov
sahf
sbb
pop
or
scas
test
test
aad
jne
xchg
mov
shll
jb
andb
stos
sub
out
xchg
out
incl
dec
repnz
incl
or
xor
xor
sti
mov
dec
jae
mov
or
add
dec
pop
insb
and
fiaddl
aad
mov
out
sub
xchg
jmp
cmc
adc
cmp
mov
in
jle
xchg
cld
mov
call
or
lock
lahf
jp
fisttpll
mov
shlb
in
xchg
in
pusha
mov
inc
fistpll
popf
test
or
cwtl
xchg
jno
pusha
adcl
mov
popf
jecxz
mov
dec
cld
loop
das
sub
stos
add
dec
insb
cli
xchg
jnp
into
lcall
adc
adc
mov
ret
inc
pop
insl
lcall
outsb
test
pop
or
lret
inc
push
cmp
sti
fcoml
lret
addb
add
xchg
lds
jne
mov
gs
adc
jb
cmp
rcr
insl
arpl
sub
sbb
bound
incl
mov
add
leave
mov
outsl
repnz
pop
data16
fisubrs
mov
xor
and
jae
sbb
pop
movsb
add
movsl
jbe
lock
in
sub
mov
addl
leave
jno
icebp
mov
call
jl
push
ret
dec
inc
movsl
jo
int
jl
push
lahf
gs
xor
test
test
roll
mov
or
pop
popa
pop
filds
or
cmp
pop
and
je
mov
adc
lahf
jp
jns
pop
subb
sub
pop
and
add
pushf
stos
xor
add
mov
mov
imul
or
and
xchg
test
jmp
and
lock
xor
push
push
fstpt
fsubr
mov
xor
shrl
repnz
rcrb
xchg
aam
sahf
mov
xor
xor
out
stc
outsl
lods
data16
loop
dec
mov
fs
jnp
and
leave
ss
cld
add
push
loop
mov
ret
shl
or
dec
cli
in
push
sbb
aam
aam
adc
or
in
into
fwait
aaa
inc
gs
mov
loopne
lcall
int
mov
pop
lret
xlat
or
data16
sbb
push
jno
into
repnz
mov
idiv
mov
push
push
aad
insl
push
nop
mulb
cltd
dec
icebp
jno
inc
adc
cmp
mov
or
aad
mov
lret
in
out
lret
lds
xchg
adc
jg
cmp
adc
jecxz
jmp
imul
inc
xchg
outsb
inc
sti
outsb
arpl
aas
sbb
mov
dec
scas
mov
je
leave
js
xchg
sub
sbb
add
xchg
fidivs
add
scas
or
mov
pop
add
xor
lds
sbb
sbb
ljmp
inc
sub
mov
inc
mov
rcll
out
jo
and
popf
cmpsl
sub
pop
mov
jmp
mov
cwtl
mov
repz
jne
pushf
shlb
xchg
ss
imul
fsubp
add
pop
push
frstor
fsubrs
xchg
decb
adc
dec
aaa
or
push
adc
pop
inc
cltd
xchg
xchg
aaa
push
lea
pop
nop
mov
cmp
cltd
notb
imul
sbb
dec
add
push
fildl
dec
xchg
jmp
int3
inc
xchg
pop
sub
stos
sbb
out
clc
xchg
jge
jge
cmpsb
out
loopne
adc
test
or
or
push
and
mov
enter
cs
das
dec
dec
pop
xchg
inc
je
push
or
sub
fwait
test
jne
jne
mov
mov
push
push
out
sbb
adc
pop
lret
jns
mov
push
xchg
dec
mov
mov
mov
or
jl
mov
and
sub
cmp
or
rcrl
js
fistps
xchg
mov
outsl
jmp
cmp
push
andl
add
or
push
mov
outsb
ret
jae
cltd
and
push
subb
jnp
fadd
jle
pushf
enter
outsb
adc
iret
mov
mov
pop
movsb
ljmp
add
add
mov
or
inc
or
ficoml
outsb
sbb
js
imul
ret
sbb
lds
inc
push
rorb
ds
fwait
ss
sbb
mov
inc
mov
stos
jge
in
sbb
or
add
pusha
int3
pop
or
ficoms
loope
sub
scas
xor
xor
or
sbb
fmull
sub
mov
enter
daa
sub
adc
repz
jno
into
jno
adc
repnz
cmpsb
cld
xor
pop
popa
and
mov
add
pusha
mov
outsl
inc
cmpsb
outsl
mov
sbb
test
js
cmc
mov
push
dec
sbb
push
pop
fildll
rcr
cmp
mov
adc
jp
call
addb
sbb
push
mov
jge
mov
cmp
pop
sub
test
xchg
repz
lcall
ja
add
mov
adc
ja
inc
fidivl
repnz
cmpsb
jg
mov
cmp
shlb
and
std
push
push
inc
std
cmp
movsl
or
shll
sarl
push
sbb
dec
fistps
mov
ss
outsl
mov
loop
mov
stc
loopne
mov
mov
jae
test
sahf
mov
lods
in
mov
mov
jno
out
ss
cli
pop
pusha
cwtl
xor
lahf
xchg
or
loopne
into
jle
test
ja
loopne
fwait
rcrl
icebp
push
adc
out
js
mov
arpl
pop
adcl
cmp
inc
sub
sub
loop
in
sbb
mov
xchg
sahf
or
fldt
nop
rcll
pop
inc
daa
jmp
fnstcw
pop
and
movsb
push
mov
lea
mov
call
xchg
dec
dec
pop
out
dec
pop
adc
xor
pushf
lret
inc
dec
jmp
aas
lds
mov
ljmp
mov
stos
dec
dec
and
gs
mov
push
fscale
stos
push
rcrl
add
mov
add
dec
push
mov
fldt
fwait
pop
mov
popf
in
je
sbb
and
inc
mov
jle,pn
and
lret
lock
cmp
testb
insl
pop
push
in
dec
jp
adc
mov
fyl2x
rorb
lret
mov
dec
mov
push
mov
xchg
out
shl
ss
sub
jns
aam
mov
ret
insl
int3
inc
es
pushf
fldl
mov
xchg
mov
outsb
ljmp
jb
aad
mov
cli
mov
mov
int
dec
push
push
mov
cltd
sub
xchg
addr16
icebp
in
push
fistps
test
mov
rcrl
sti
dec
cli
shll
jnp
stos
pop
cmp
pop
adc
add
and
subb
jg
jl
xlat
bound
or
int
xor
or
cwtl
jnp
push
inc
cs
sub
ja
push
mov
clc
aad
or
rorb
movsb
cmp
sub
dec
jne
aaa
enter
out
sti
jno
bound
adc
xchg
lcall
sub
pop
mov
lret
jp
nop
pop
mov
fcompl
mov
insl
movl
pusha
jmp
and
jnp
pop
xchg
mov
sbb
xchg
pop
mov
xorl
xchg
out
daa
int
xor
push
lods
fisubs
out
mov
insb
rcrb
jle
pop
out
decl
push
adc
int
iret
ljmp
add
fisttpl
sub
add
mov
push
jo
pop
or
rclb
push
insl
mov
inc
sbb
cltd
inc
ss
inc
outsl
imul
jno
push
mov
push
shlb
icebp
repnz
jg
pusha
daa
pop
hlt
push
mov
inc
mov
sub
sbb
dec
aaa
jge
orb
je
add
push
fmul
inc
cld
aad
lds
hlt
dec
push
jo
leave
cs
adc
push
and
adc
movsb
pop
pop
dec
push
mov
inc
in
cli
outsb
xor
ja
mov
cmp
mov
jno
iret
idivb
in
dec
imul
movsl
jle
mov
mov
lahf
mov
fwait
xchg
test
sbb
inc
xor
std
ja
pop
incl
pop
pop
jp
push
sub
loope
mov
sub
sbb
cmp
nop
sub
adc
adc
push
insl
xchg
push
stc
clc
sbb
in
add
in
xor
push
imul
or
int
je
sub
clc
pop
adc
mov
dec
xor
sub
inc
fsubrl
xchg
sub
orb
je
cmpb
mov
cmp
and
jns
push
sbb
cli
fsubs
inc
testl
rcll
mov
push
add
lock
sbbl
outsl
imul
loop
push
aad
xchg
cmp
sbb
adc
sub
ss
push
lods
aam
add
or
outsl
cli
push
insl
push
xor
cwtl
fisttpl
movsl
lahf
xor
popa
mov
lret
mov
sub
adc
pop
imul
ret
sub
jns
mov
fildll
scas
sbb
loopne
push
xlat
dec
sahf
mov
mov
inc
lret
negb
mov
int3
xor
dec
scas
outsb
jne
cmp
mov
les
jge
repz
daa
xchg
push
sub
lea
adc
adc
pop
mov
popa
xchg
pushf
jbe
cli
jmp
xlat
and
push
mov
pop
inc
mov
sub
push
outsl
fwait
jb
fcmovnu
dec
pushf
lret
push
push
adc
mov
repnz
aaa
ds
push
pop
sub
pop
iret
aam
push
pop
cmp
cmp
fistpl
cld
pop
inc
ljmp
iret
mov
shlb
dec
adc
sub
insl
out
add
dec
jne
push
cmpsl
sub
icebp
xchg
popf
push
cld
roll
lret
and
mov
mov
mov
mov
rol
or
sub
sub
aam
push
jne
cld
clc
push
cmp
into
xor
ljmp
mov
sbb
mov
adc
rcll
jno
packuswb
inc
cltd
fs
test
or
mov
dec
cld
push
mov
push
int
mov
popa
out
sbb
xchg
sbbl
imul
mov
imul
lcall
jbe
xor
lahf
or
xor
shld
sarb
ds
ja
inc
mov
xor
mov
repnz
iret
out
xchg
push
mov
ficoml
bound
xchg
xor
or
xchg
jmp
fnsave
dec
cli
dec
or
mov
insb
mull
in
imul
mov
fsubrl
dec
rcrl
jecxz
xchg
adc
jmp
shl
inc
add
cmp
and
inc
mov
in
jle
stos
pop
xchg
leave
and
xor
cmp
aas
jnp
inc
bound
adc
inc
mov
push
iret
pop
xor
ret
lds
mov
inc
sbb
jae
sbb
push
xor
adc
cmp
xchg
dec
ljmp
test
imul
cmp
lds
rol
aad
es
ja
pop
inc
xchg
xlat
push
and
mov
inc
arpl
std
pop
inc
mov
div
sbb
test
or
daa
add
mov
push
ficoms
aaa
push
jo
xor
repnz
and
jb
cmp
adc
mov
push
in
loope
fmul
jb
inc
daa
sub
cmp
cmp
hlt
mov
imul
and
insb
imul
adc
lahf
ret
push
xor
cld
push
in
repnz
enter
ds
pop
xorb
js
out
pop
pushf
mov
out
loope
jno
sub
cmp
adcl
adc
xor
xchg
adc
subb
sbb
cmp
jl
push
xor
iret
mov
int
mov
sub
dec
add
xchg
repnz
cmpsb
sti
ljmp
mov
outsb
lock
test
sbb
sub
or
xchg
pushf
mov
nop
mov
data16
and
outsb
push
pop
insb
dec
cmp
sbb
testl
fsts
mov
mov
sahf
mov
ja
xor
subl
and
stc
dec
test
movsl
push
adc
int3
ss
dec
lods
mov
mov
out
cli
test
jns
pop
push
aam
xchg
gs
mov
cmpsl
and
pop
sub
adc
imul
push
adc
sbb
ret
dec
pop
sbb
sbb
xlat
mov
inc
mov
lock
int3
pop
push
fmull
mov
nop
xchg
fwait
inc
dec
addr16
fldcw
hlt
clc
repz
sub
xchg
adc
loop
add
jb
xchg
ud1
mov
pushf
mov
pushf
and
jmp
xor
imul
iret
inc
iret
aam
aas
imulb
inc
jb
mov
je
lcall
cmp
dec
std
clc
dec
xor
push
mov
sbb
dec
mov
rolb
es
fisttpl
xlat
mov
lock
std
das
loop
or
pushf
ror
call
pop
inc
not
vpmullw
push
cmpsl
sub
cld
decb
lret
pop
xor
pop
xchg
and
lcall
rcrb
cmpl
mov
es
mov
xchg
daa
stos
clc
or
rclb
dec
xor
popa
mov
xchg
mov
lds
inc
push
push
mov
shufps
fwait
and
test
xlat
popa
mov
out
push
gs
pop
dec
cmp
test
inc
xchg
fs
sbb
rcl
insl
sub
daa
stos
in
out
and
inc
add
jae
xor
mov
mov
pop
filds
ret
pop
stc
shlb
dec
es
mov
pop
out
or
adc
fwait
ss
dec
push
jb
and
imul
bound
jmp
push
rcll
mov
sub
dec
dec
cmc
mov
jp
adc
les
mov
dec
into
push
dec
mov
push
in
loop
pusha
and
mov
roll
popf
imul
mov
jne
mov
sub
jmp
insb
cmpsb
shll
out
mov
dec
adc
lock
iret
mov
pop
pop
dec
pop
sbb
mov
stos
enter
or
mov
inc
push
push
mov
fisubrl
ljmp
rorl
scas
sbb
rol
roll
repnz
push
leave
dec
sub
hlt
fwait
sub
inc
mov
push
mov
enter
sti
cmp
or
mov
int3
sbb
pop
and
cmpsb
fidivrs
sub
xor
fdivs
sbb
shrl
movsb
sub
adc
testb
enter
daa
sub
xchg
cmp
adc
pop
dec
inc
and
dec
int
movsl
mov
call
cmp
mov
push
mov
sub
movsb
repnz
test
cmp
pop
fildl
adc
sub
sub
cmp
loop
ds
cld
std
adc
or
fwait
cmpb
sbb
xor
mov
fmull
insl
roll
jne
push
pop
adc
mov
std
call
push
sub
loopne
outsb
push
jp
test
cltd
jecxz
inc
pop
xlat
jg
adc
mov
sbb
mov
adc
mov
xor
insl
sbb
push
pop
das
inc
cmp
imul
lahf
mov
sbb
sbb
sbbl
popl
loop
sub
je
xor
dec
lea
or
out
insb
sub
mov
movsl
cwtl
cmp
push
or
subl
daa
scas
xchg
gs
pushf
push
loopne
adc
pop
dec
cmpsb
adc
mov
int
add
filds
xchg
ret
in
push
sbb
push
xlat
lret
sub
jp
in
pop
out
or
jnp
or
ljmp
adc
mov
dec
nop
bound
dec
insl
jnp
inc
pusha
repz
fs
xchg
les
mov
mov
xlat
aaa
dec
lea
mov
adc
xor
mov
adc
sub
jmp
push
xchg
cs
xor
pop
mov
inc
ljmp
jb
aad
dec
mov
je
xor
cmp
sbb
arpl
mov
clc
ja
cmp
incl
adc
pop
pop
mov
xor
mov
adc
push
fstps
and
adc
rcl
xlat
push
notb
hlt
es
mov
jge
cmpsl
sub
popf
mov
inc
das
xor
lret
adc
inc
adc
adc
addr16
stos
pop
icebp
fisubs
sub
jnp
aam
orl
data16
clc
inc
fists
cli
xchg
mov
popa
movsl
xor
mov
call
xchg
or
stc
mov
sahf
pusha
add
outsl
cmpsb
test
push
mov
push
push
sub
pop
dec
mov
arpl
xchg
mov
shrl
insl
fstpl
mov
aam
fldz
test
cltd
push
xchg
add
ds
pop
jne
xor
mov
or
adc
mov
imul
sub
sbb
pop
inc
rclb
or
or
fwait
gs
hlt
push
adc
pop
cwtl
and
jns
call
lods
xchg
xchg
mov
add
sub
dec
subb
shl
mov
fwait
fwait
into
mov
mov
mov
in
scas
fbld
sbb
fsubs
mov
xchg
push
lods
sahf
out
scas
loopne
cmpsb
mov
lea
dec
push
stos
aas
push
push
and
xchg
mov
jle
pop
mov
aam
cmp
shlb
mov
jmp
cld
xor
jae
mov
in
or
xor
fcmovu
pusha
nop
sbb
and
lock
jge
mov
pop
dec
xchg
negl
lds
add
and
lds
mov
inc
mov
cwtl
rcrb
jno
aaa
mov
rorl
scas
jp
push
rcr
push
cld
inc
test
xor
xor
mov
xor
push
pop
pop
cmp
lcall
cmp
in
scas
std
cmp
push
pop
adc
mov
stos
mov
lds
fdivr
push
xor
movsl
xchg
sbb
and
rcrl
push
subl
loop
out
cmpsb
daa
sbb
pop
rclb
js
call
sbb
jno
cld
push
dec
loope
pop
jl
dec
out
fbstp
lcall
fwait
aad
out
pusha
push
and
orb
mov
xchg
inc
push
xor
hlt
xchg
int
fsub
sub
mov
lcall
scas
fsubrl
add
test
sbbb
jg
xchg
lcall
icebp
adc
mov
dec
cmp
xchg
push
cmp
mov
add
sbb
orl
mov
aam
xor
sbb
or
pusha
loop
bound
mov
aas
xchg
adc
adc
lods
mov
push
mov
icebp
cmp
pop
xchg
xor
sbb
cmp
jnp
or
jne
into
or
or
mov
pop
push
test
imul
int3
testl
push
xor
cmp
shll
mov
test
and
aad
inc
and
int3
pop
int
jae
push
fstps
fimuls
loopne
lcall
push
jle
out
lds
mov
icebp
pushf
ja
scas
jmp
aaa
xchg
das
loop
inc
sahf
shlb
addr16
mov
jb
mov
and
jecxz
mov
movb
std
inc
iret
loop
loopne
add
das
dec
out
andl
xor
das
sub
lock
cmpsb
das
mov
inc
outsb
mov
jns
shll
xchg
jmp
pop
xchg
jbe
mov
loopne
cmpsl
daa
or
pop
jecxz
icebp
sbb
inc
cld
push
lret
insl
fsubl
rol
ja
adc
adc
inc
or
mov
sbb
ret
test
mov
adc
jg
or
cmp
sub
popa
mov
andl
xchg
jmp
icebp
es
mov
lret
test
imul
jmp
repz
or
test
sbb
xchg
testl
nop
or
stos
ret
negb
out
jbe
and
add
push
push
sti
jp
xor
mov
or
mov
adc
popa
dec
insl
mov
outsl
or
ja
cs
dec
or
mov
or
aam
fwait
xchg
fstpl
push
mov
sub
pop
scas
pop
out
ja
cmp
jb
jns
int
in
or
xchg
lea
dec
ret
std
dec
xchg
or
sub
jp
gs
mov
and
mov
sub
lahf
dec
jl
adc
mov
cmc
add
xchg
aad
inc
jmp
xor
subl
out
insl
outsl
popf
int
test
push
test
int3
sub
mov
ss
jnp
pushf
push
jle
ljmp
stos
fs
iret
jnp
mov
mov
sahf
inc
cmp
jle
jl
sub
orb
inc
dec
pop
je
adc
pop
xchg
cmc
push
or
shlb
fld
adc
mov
push
pop
push
leave
cmp
jne
xchg
je
arpl
leave
inc
ret
jge
mov
mov
or
mov
add
int3
icebp
lcall
pop
adcb
xor
mov
hlt
scas
and
mov
cmp
ret
scas
push
push
lret
jbe
push
shr
xchg
dec
iret
enter
daa
daa
sbb
adc
jno
cmp
dec
and
pop
movsl
lcall
lahf
pop
dec
jge
stos
xchg
xor
inc
test
inc
jno
xchg
cmpsb
stos
mov
pop
divl
iret
js
movsl
xor
pop
xchg
in
push
ret
movl
or
popf
movsb
je
repz
rcrl
mov
lds
movsl
adc
das
xor
dec
addb
imul
pop
bswap
int
mov
das
daa
fcoml
xor
mov
xor
test
bound
jg
pop
push
mov
lret
movsl
mov
not
and
adc
fmuls
testl
faddp
mov
aad
int3
sub
sbb
repz
popf
sbb
xor
jle
out
push
loop
shl
stc
jae
pop
fs
sub
adc
dec
jle
in
.byte
ret
nop
