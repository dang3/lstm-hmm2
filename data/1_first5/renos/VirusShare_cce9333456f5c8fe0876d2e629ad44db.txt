jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
cmp
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
call
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
movw
movzwl
push
call
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
call
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
movw
movzwl
push
call
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
call
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
call
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
pop
pop
ret
push
mov
push
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
movw
movzwl
push
call
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
movw
movzwl
push
call
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
call
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
call
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
pop
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
mov
mov
add
mov
mov
mov
mov
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
add
add
mov
mov
mov
mov
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
mov
cmp
je
jmp
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
xor
divl
test
jne
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
mov
cmp
je
jmp
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
mov
cmp
je
jmp
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
mov
sub
mov
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
push
mov
mov
xor
call
mov
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
mov
mov
mov
call
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
push
mov
mov
xor
call
mov
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
lea
mov
push
mov
jmp
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
sub
add
add
mov
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
mov
mov
call
mov
mov
mov
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
mov
mov
movl
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
mov
mov
xor
int3
mov
mov
mov
repnz
push
repnz
dec
repnz
push
repnz
outsb
repnz
push
xchg
outsb
mov
inc
xor
test
outsb
mov
inc
xor
mov
outsb
mov
inc
xor
add
outsb
mov
inc
xor
out
movsb
outsb
mov
inc
xor
in
imul
xor
shrl
outsb
mov
inc
xor
leave
imul
mov
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
movl
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
mov
mov
call
mov
cmpl
je
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
mov
cmp
je
mov
subb
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
xorb
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
incl
mov
cmp
jne
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
mov
call
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
movb
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
call
lea
mov
pop
ret
nop
push
mov
add
cmp
je
xchg
mov
inc
mov
mov
lea
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
dec
je
lea
inc
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
push
call
mov
call
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
mov
pop
ret
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
call
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
call
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
movw
movzwl
push
call
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
call
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
call
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
movw
movzwl
push
call
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
call
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
call
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
call
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
movw
movzwl
push
call
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
call
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
call
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
call
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
movw
movzwl
push
call
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
call
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
call
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
call
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
movw
movzwl
push
call
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
call
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
movw
movzwl
push
call
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
movw
movzwl
push
call
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
movw
movzwl
push
call
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
movw
movzwl
push
call
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
movw
movzwl
push
call
cmp
jge
mov
lea
cmp
jo
mov
xchg
xchg
xchg
mov
inc
xchg
xchg
mov
mov
mov
dec
xchg
inc
call
xchg
jmp
lea
lea
lea
xchg
mov
lea
dec
dec
mov
mov
jmp
mov
lea
dec
mov
lea
dec
inc
dec
call
cmp
jns
xchg
mov
lea
dec
inc
dec
mov
mov
mov
dec
inc
inc
mov
xchg
lea
xchg
xchg
lea
xchg
dec
inc
inc
movw
movzwl
push
call
mov
cmp
jo
mov
mov
lea
dec
inc
dec
xchg
lea
mov
dec
dec
inc
xchg
xchg
lea
lea
mov
xchg
call
cmp
jne
lea
mov
lea
xchg
inc
lea
lea
lea
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
inc
call
mov
mov
mov
mov
dec
dec
jne
cmp
jb
mov
jmp
mov
inc
dec
inc
lea
mov
lea
lea
xchg
dec
dec
call
cmp
jns
dec
inc
inc
inc
lea
cmp
jne
mov
xchg
mov
mov
xchg
inc
jmp
inc
inc
mov
mov
xchg
xchg
xchg
dec
dec
inc
mov
mov
mov
lea
call
cmp
jns
mov
xchg
lea
mov
lea
mov
inc
xchg
lea
mov
lea
mov
dec
inc
dec
lea
xchg
lea
dec
dec
inc
ret
mov
ret
lea
add
add
cmpsl
add
dec
add
movsb
push
aad
xor
add
add
add
add
cmpsl
add
pop
sub
pop
mov
xchg
repz
add
adc
movsb
add
add
incb
incb
add
jbe
in
addr16
repnz
cmpb
and
scas
xchg
ljmp
inc
out
movb
push
add
push
dec
mov
addl
add
add
test
mov
cmc
and
outsb
add
cwtl
addl
cmp
add
loope
jae
out
dec
add
add
add
mov
in
aas
test
lods
bndldx
adc
xorl
add
push
add
xchg
filds
hlt
cwtl
fadds
ret
add
add
and
ljmp
add
add
add
repz
imul
jbe
test
xchg
add
mov
int
subl
fistpll
add
mov
adc
mov
sbb
lea
mov
sub
jnp
repnz
add
pop
hlt
add
add
cwtl
mov
add
movsl
testl
add
cmp
xlat
addl
add
push
pusha
out
cltd
out
dec
add
add
roll
fisttpl
add
add
sub
add
adc
push
add
outsb
pop
push
dec
push
in
icebp
outsb
adc
add
imul
add
fiadds
ljmp
add
dec
cmp
push
add
flds
faddl
loop
lcall
sub
push
mov
add
add
add
add
push
std
add
push
xchg
mov
insl
jns
add
fs
jns
xor
add
sbb
jle
test
add
imul
test
ds
add
add
lahf
add
mov
sbb
lods
add
or
mov
rcrb
add
int3
sub
dec
adcb
xor
or
sarb
out
xor
adc
add
cmp
movsl
adc
push
and
lcall
mov
add
jnp
fcomps
add
fs
sbb
nop
mov
je
add
adc
insb
add
sbb
fnsave
sbb
sbb
add
adc
cwtl
jo
popf
sbb
jne
mov
add
add
popf
test
inc
jecxz
mov
cmp
add
lea
fiaddl
rcrb
adc
cld
pop
pop
add
jg
cli
jg
ds
and
stos
push
add
cmp
jbe
adc
pusha
add
add
add
cmp
cs
test
or
add
es
cmpsb
out
mov
add
xor
add
inc
popa
jp
adc
testb
outsl
xchg
mov
aaa
push
add
push
stc
mov
jno
nop
inc
add
add
jnp
mov
or
sub
ja
add
dec
jmp
add
xchg
mov
pop
lods
add
add
mov
pop
arpl
mov
loope
push
xlat
ds
add
xor
xchg
push
fwait
xor
fistl
daa
add
stc
add
sahf
rclb
cmpsb
cmp
add
push
les
int
mov
add
inc
mov
add
or
sbb
fwait
mov
mov
out
xchg
jmp
jle
sbb
in
xchg
sub
xchg
flds
dec
cmpsl
mov
loopne
sub
push
adc
and
imul
addl
scas
push
xchg
cmpsl
sbb
cmp
mov
loopne
scas
ret
xchg
sti
mov
cs
or
nop
mov
inc
dec
jge
outsl
inc
xor
fxtract
outsl
sbb
jns
mov
or
inc
sub
and
xlat
dec
xchg
cmpl
pushf
sbb
leave
jmp
cmp
pop
pop
dec
mov
cmpsl
xchg
and
cmpb
movsl
test
jb
out
cltd
dec
sbb
outsb
je
imul
stos
add
out
inc
std
das
cmpsb
cmp
ljmp
sbbl
sbb
mov
mov
mov
lods
shl
aad
das
das
shll
mov
jecxz
jbe
ret
cmc
sbb
jecxz
add
ss
dec
insl
dec
mov
dec
mov
and
mov
aad
push
cld
jns
lret
jb
mov
mov
jae
pop
add
jns
push
xchg
outsl
aam
adc
ret
sub
or
jmp
fisttpll
clc
xchg
stc
repnz
or
mov
xchg
iret
sbb
lods
sbb
out
push
and
xchg
xor
push
dec
arpl
dec
ret
add
iret
cltd
xor
mov
pusha
rolb
xor
mov
xchg
ficomps
in
push
sarl
and
in
in
jecxz
sub
and
xor
insb
and
mov
fcmovnbe
xor
ljmp
mov
sub
mov
add
cltd
ja
cmp
mov
scas
push
fwait
jne
ja
imul
call
bound
mov
jns
adc
in
pusha
rcll
arpl
or
popf
addr16
into
sarb
cmp
mov
aam
mov
lret
jle
xor
in
xor
test
call
insb
leave
jmp
mov
jp
push
mov
and
ret
fmul
push
jp
or
and
push
in
insb
popa
mov
jnp
inc
sti
scas
dec
fdivr
push
fs
and
and
addr16
sub
lods
ret
dec
pop
adc
lret
rcll
mov
inc
mov
or
and
and
xor
sub
jb
jmp
fisubrs
or
inc
addr16
aam
and
push
loopne
hlt
cltd
testl
jge
add
sbb
adc
or
adc
add
sahf
int3
push
adc
pop
popa
incl
xor
cmpl
xchg
and
sbb
aas
std
mov
scas
insl
cmpsb
testl
into
enter
daa
cmp
cmp
push
scas
jl
push
bound
pop
jmp
movsl
and
xor
sarl
mov
push
cmpsl
pop
xchg
test
lret
mov
inc
repnz
push
pop
data16
pusha
hlt
sbb
mov
xchg
push
in
loope
loopne
sub
xchg
fs
stos
loopne
xchg
sub
ss
fs
sbbb
sbb
and
xchg
xor
fs
int
cwtl
mov
inc
jb
pop
mov
adc
fdivr
pushf
push
sub
mov
sahf
mov
pop
test
jns
subb
enter
mov
dec
adc
jae
jp
ds
loope
fdiv
cltd
or
shrl
sbb
ret
cwtl
into
fcmovu
mov
data16
lahf
xor
add
outsl
sbb
loop
xlat
pop
stc
dec
adc
or
cmc
data16
mov
pop
mov
out
insb
xchg
cli
mov
xor
cmpsl
adc
add
cwtl
gs
xorl
adc
cmp
outsb
pop
add
pop
push
xchg
push
mov
loope
push
xlat
sbb
push
sub
cmp
in
push
add
sti
cmp
rcl
xchg
nop
shrb
inc
shrb
test
add
lock
adc
push
lea
outsl
call
lahf
mov
mov
pushf
mov
pop
jmp
or
pop
xchg
inc
push
adc
aas
inc
sub
clc
dec
xchg
fldcw
je
sbb
jecxz
fisubrl
std
sbb
mov
lods
or
xor
lret
adc
mov
in
mov
cmp
lock
sbb
mov
mov
lcall
shll
jne
es
iret
decb
dec
dec
cmpsl
aaa
fbld
icebp
lods
ss
movsb
movsl
cmp
jge
lret
lret
cmpsl
dec
dec
mov
and
rclb
aaa
pop
sub
xchg
aam
imul
mov
std
nop
fnsave
push
clc
iret
in
dec
xchg
dec
jb
ljmp
jns
rorl
hlt
out
mov
jp
jns
ss
and
arpl
xchg
sbb
add
xor
addr16
cmp
xor
mov
xchg
lds
xchg
int
rorl
rcrl
stos
rorl
inc
add
cmp
insl
decl
out
xor
xchg
xor
dec
scas
xor
rorb
xchg
sbb
mov
lods
popa
mov
mov
js
dec
fmull
inc
testl
dec
dec
cmp
mov
divl
xchg
bound
mov
icebp
xchg
out
cmp
jns
mov
lea
jmp
addr16
push
jp
jg
mov
sbb
mov
cmp
repz
xchg
pusha
cmpsl
sub
filds
shl
xchg
movsl
sub
jmp
subl
jge
aad
dec
je
popf
pop
fxch
mov
mov
xor
insb
int3
in
fdivrl
out
scas
mov
in
push
stos
xchg
push
adc
test
mov
xchg
ret
jns
inc
cmp
jae
cmp
sar
adc
movsb
inc
pop
vpminub
jl
xchg
test
pop
sbb
xchg
or
pop
leave
ficoms
push
lds
mov
bound
repnz
xchg
cmp
hlt
in
inc
arpl
jg
dec
outsb
sarl
in
mov
aaa
mov
or
scas
or
std
mov
test
pop
std
push
in
pushf
xor
fsubp
std
scas
lahf
xor
mov
movsb
xchg
mov
push
fimull
jp
loop
es
sub
mov
andb
into
cmp
jno
mov
das
dec
xor
jo
movsl
sub
xchg
and
xor
jp
push
test
xchg
outsb
inc
orl
pop
xchg
std
pop
imul
push
push
lret
es
lock
cmp
or
adc
adc
mov
xorb
sbb
sarl
adc
push
xor
xchg
lret
inc
ret
mov
pop
pop
jge
lcall
lret
fsubl
add
pop
push
and
jae
pop
or
cmpb
jne
pushf
xor
mov
xor
xchg
dec
ss
pop
and
pushf
dec
sbb
pop
mov
roll
mov
mov
into
mov
mov
leave
outsl
notl
inc
loop
add
stc
add
aaa
fs
fstpl
mov
lods
add
xor
push
lret
out
and
xor
push
gs
or
repnz
adc
and
loopne
pop
add
jbe
adc
push
adc
orl
ret
sub
mov
jle
pop
popa
hlt
sub
cmp
in
orl
bound
nop
push
fdivs
fldenv
les
lea
adc
call
push
lods
rcrl
cmp
jbe
jb
mov
es
xchg
pop
mov
les
mov
das
jb
cmp
dec
or
std
jecxz
dec
aad
insl
sub
jge
lret
cmp
mov
dec
sub
enter
aaa
jle
rcr
mov
sbb
cmpsl
lock
das
into
pop
mov
push
das
test
fstps
es
insl
sbb
movsl
dec
mov
xchg
cmpsl
ss
add
sbbl
lret
in
scas
sahf
mov
scas
les
aas
and
shl
pushf
lods
sub
repnz
aam
push
or
dec
mov
push
jle
fstpl
jbe
xchg
mov
ljmp
lahf
lods
cmp
xor
sbb
xchg
shlb
pushl
repz
cwtl
add
lods
cltd
shl
fldl
outsb
cmp
decl
xlat
xchg
xchg
dec
into
call
data16
pop
jge
xor
ret
push
sub
int
push
lahf
sub
xor
xor
push
fs
xor
aad
mov
pop
mov
cmp
stc
ja
cmp
dec
iret
xor
or
xchg
jne
rcrl
adc
or
mov
insb
ja
sub
inc
sysret
jns
add
in
mov
xchg
xor
pop
sub
nop
subb
or
mov
xchg
mov
test
push
jle
lret
add
dec
jnp
pusha
inc
fcomps
es
in
xchg
js
vsubpd
orl
push
seta
test
add
stos
cmc
insl
pushf
and
push
insb
aaa
es
inc
dec
pop
scas
adc
adc
js
adc
sbb
iret
ljmp
pop
jle
and
xchg
aaa
mov
jae
inc
xchg
inc
sbb
jns
bound
sub
inc
fidivs
ficoml
pop
rcrl
inc
mov
mov
adc
clc
push
sarb
mov
jp
mov
inc
cmp
das
clc
or
orb
jg
jge
mov
sbb
ja
dec
or
movsl
add
rcrb
mov
xor
cmp
scas
jle
fsubl
dec
push
call
movsb
push
fcmovne
push
sub
andl
cmpl
ss
outsb
cmp
cmpb
sub
mov
ds
repnz
or
lret
out
push
dec
jecxz
test
popa
or
inc
adc
sbb
pop
scas
push
pop
js
mov
pop
test
dec
push
addb
outsb
ficoml
cmp
ret
outsb
dec
adc
adc
in
add
and
insb
into
fldl
repz
push
ss
jmp
xor
iret
sub
test
pop
sahf
mov
lcall
int
push
mov
sahf
cld
adc
test
mov
in
and
mov
sbb
mov
int3
xchg
mov
aas
popa
and
xchg
sbb
fcoms
push
notl
mov
lret
mov
mov
xor
sbb
popf
cmp
mov
or
outsl
lds
mov
stc
mov
ficoml
adc
push
data16
lods
out
jmp
or
lods
jecxz
and
xor
fstpt
lea
cmp
shll
sub
seta
pop
mov
mov
bound
ficoms
in
add
push
mov
xchg
lock
cmp
int3
xlat
xchg
adc
sub
lret
inc
in
in
jno
sti
cwtl
mov
aad
adc
nop
inc
lock
dec
lcall
fstps
in
repz
std
push
shlb
call
popf
pop
sbb
inc
jo
mov
push
adc
ljmp
mov
aas
addb
movsb
sub
dec
jg
or
aad
test
or
jae
std
and
push
mov
outsl
int3
mov
mov
sbbl
lock
das
mov
add
fisubrl
outsb
cmpl
adc
repz
outsb
mov
sarb
mov
mov
mov
dec
lods
push
push
cmpsl
xor
push
push
pop
and
cli
cmc
stc
lret
pop
jae
mov
mov
inc
mov
pop
out
imul
ss
add
inc
adc
lret
push
inc
jge
ffree
mov
clc
inc
xchg
int3
xchg
xchg
sahf
ljmp
stos
lods
cmpsl
jecxz
mov
jge
cwtl
xchg
pop
and
cltd
rsqrtps
ja
mov
jbe
pop
test
inc
mov
dec
or
jae
roll
std
andb
add
pop
sub
stos
mov
ljmp
in
jno
jb
and
dec
jle
xor
push
dec
xor
aas
cli
mov
mov
xor
xor
jl
dec
ret
inc
and
ret
jmp
dec
adc
mov
out
inc
loope
fmuls
push
jns
in
int3
in
push
add
out
ds
sub
mov
push
addr16
cmp
and
mov
pop
in
movsl
mov
jle
add
in
xor
pusha
fstpl
xor
jmp
sbb
sbbl
stc
popf
stos
pop
push
mov
aaa
push
and
and
xor
jnp
jbe
scas
jbe
fwait
push
cmp
xor
mov
push
iret
dec
fmul
ret
aaa
pop
mov
addr16
mov
lock
fisttpll
repnz
aas
inc
pop
stos
jb
dec
mov
sbb
ret
and
lea
ja
jg
je
cwtl
cli
scas
mov
int
scas
leave
mov
jbe
arpl
add
jge
arpl
aaa
pop
jb
or
add
add
pop
ljmp
pop
bound
stos
shr
xor
xchg
jmp
scas
pop
lahf
jbe
fstpl
sarl
fs
adc
test
push
mov
in
hlt
push
loop
test
push
cmp
sub
jno
mov
jl
push
lods
dec
adc
adc
cmp
aaa
lahf
insl
ss
test
sub
lcall
movsl
cmp
mov
pop
out
sub
pop
cmp
test
inc
cmp
outsl
hlt
outsb
scas
movzwl
xchg
fs
mov
jp
xor
jmp
push
cmp
cld
int
inc
dec
sub
and
lcall
jecxz
std
les
test
enter
sub
cmp
aam
cltd
push
in
mov
xor
popf
mov
shll
and
sub
fcoms
out
not
jp
shll
mov
dec
sbb
xor
into
adc
cmc
mov
sbbb
and
outsb
stc
jno
pop
lods
sub
sar
lods
into
cwtl
fimuls
adc
repnz
push
jnp
xor
lret
lahf
ret
mov
int
stos
jecxz
pop
aad
scas
adc
mov
adc
stos
sub
jecxz
inc
xchg
mov
dec
sbb
xchg
clc
lock
dec
scas
sub
ja
mov
push
push
mov
aad
mov
nop
push
cmpsb
int
stc
test
inc
jl
add
shlb
movsl
rorb
sbb
jmp
sbb
lock
mov
jnp
pushf
enter
add
dec
pop
call
sbb
aas
and
test
push
popa
dec
test
je
adc
jle
repz
std
lret
rcl
cwtl
popa
and
mov
adc
out
xor
int3
push
fildl
pop
or
inc
jp
das
dec
cmp
mov
mov
xchg
test
pop
sbbb
jb
call
das
andb
dec
or
xor
sar
and
sti
sarl
mov
inc
gs
jge
mov
mov
sub
push
sub
jmp
fucomp
xchg
addb
push
insb
lock
or
adc
inc
mov
loopne
sahf
xchg
dec
aaa
fs
mov
sbb
mov
mov
mov
jnp
test
mov
dec
int
icebp
test
aaa
lods
xchg
sbb
push
test
stos
mov
mov
add
dec
in
in
xchg
pop
or
jl
xor
cld
ljmp
in
mov
lock
dec
mov
jle
mov
leave
add
cmc
pop
loope
lahf
movsb
adc
and
shll
cmp
in
push
dec
xchg
rcrl
cmp
add
stos
sub
xchg
addr16
push
mov
orl
shlb
add
xor
in
push
fs
js
rcr
fs
xchg
push
mov
mov
subl
adc
xchg
cmp
mov
jbe
jo
sub
ja
les
push
jnp
fs
scas
fprem1
mov
adc
inc
add
sbb
stos
in
fnstenv
mov
inc
fwait
mov
push
insl
ret
arpl
bound
mov
push
sbb
sbb
fidivrs
jo
lds
pop
cli
shlb
and
and
sub
lds
arpl
xchg
idivb
mov
adc
sarb
or
sbb
jecxz
xor
out
lea
cmp
andb
push
stos
cmp
or
movsb
xor
out
push
mov
sub
adc
enter
daa
xor
lea
pop
in
jno
outsb
inc
jl
pop
mov
ds
sarb
aas
xor
lahf
mov
and
test
and
dec
inc
cs
adc
gs
add
fsubrs
pop
es
push
jmp
loope
fs
sub
hlt
pushf
cmp
add
mov
or
subb
push
add
push
jp
fnstcw
out
add
jb
pushf
cmp
dec
push
inc
or
test
fsubrs
cwtl
jl
inc
jno
test
sub
sbbb
cmp
mov
cmpl
mov
and
adc
xchg
xchg
cmp
int
mov
xchg
sbb
and
pop
rcrb
fnstsw
mov
into
data16
or
cmpsb
sub
xchg
cmp
mov
push
stc
sub
popf
fs
iret
adc
and
inc
xchg
or
add
out
cld
test
xchg
xor
jb
cmp
ret
stos
or
arpl
gs
gs
loopne
inc
pop
hlt
cmpsb
add
or
imul
je
jb
test
data16
adc
repz
mov
ret
sti
mulb
mov
jb
mov
outsl
dec
pop
loope
inc
pop
cld
je
mov
outsl
repz
lahf
sbb
rorb
sub
fwait
nop
dec
pop
push
jo
adc
data16
pushf
jae
shr
repz
adc
dec
je
inc
shll
aas
shlb
dec
scas
call
je
adc
sub
divb
data16
jb
sbbl
lret
std
pop
orl
pushf
xchg
push
xor
bound
sub
int
cmp
out
mov
jp
shrw
lds
xchg
insl
iret
and
cmpsl
xor
movsl
mov
or
ret
dec
adc
ret
nop
jmp
pushf
xchg
pop
rcrb
sub
cmp
fmull
lcall
int3
dec
fisttpll
push
in
mov
and
rcl
pop
popa
test
xor
cmpsl
adc
inc
xor
cltd
push
nop
and
int
mov
test
jne
mov
xchg
sub
rolb
dec
xor
sahf
test
std
adc
arpl
or
pop
jle
stos
adc
roll
test
pop
incl
push
imul
sahf
or
cmp
cmp
pop
stos
and
ja
cmp
push
lret
imul
mov
dec
fsubrs
jg
roll
add
popf
pop
jns
mov
in
mov
sti
out
imul
addr16
add
mov
mov
cld
mov
push
mov
in
rorb
filds
cs
lock
scas
filds
pop
mov
popf
stc
imul
mov
cwtl
stos
dec
push
sub
mov
insb
js
jl
dec
push
mov
jp
adc
mov
pop
xchg
aad
sbb
pop
and
gs
mov
std
or
call
lahf
and
xchg
loope
inc
sbb
inc
push
imul
dec
cld
lds
rclb
jae
or
test
fdivp
adc
arpl
imul
inc
insl
mov
jp
dec
aaa
test
mov
lds
mov
int3
in
push
negb
push
push
jno
lods
xor
dec
inc
add
add
cmp
imul
xchg
in
ret
enter
daa
xor
pop
cmp
dec
jl
out
xchg
dec
icebp
push
inc
ds
xor
push
lahf
stos
loopne
push
lcall
ret
inc
mov
imul
js
mov
mov
das
push
loope
filds
mov
leave
cmp
xchg
out
adc
jge
repz
aas
jmp
sbb
cltd
mov
xor
add
int
iret
aas
sub
lcall
or
push
scas
push
sub
or
or
xlat
mov
mov
add
gs
cmc
cli
and
aaa
ss
enter
jle
fmuls
cmpsl
mov
rcrl
mov
into
dec
ljmp
add
dec
outsl
jae
sbb
inc
ret
popf
stc
fisttps
fs
adc
es
pushf
pop
lods
pushf
loopne
mov
adc
adc
cli
mov
pop
jns
adc
repnz
mov
cwtl
cmp
loopne
pop
pop
adc
leave
imul
sbb
xchg
cmp
cmp
lret
jge
push
inc
cli
sub
and
mov
sub
js
cs
or
xchg
nop
aam
fisttpl
inc
pop
inc
mov
aaa
mov
jb
repz
xchg
cltd
pop
cmp
lea
sub
sbb
and
lea
push
daa
loopne
loop
fstps
sbb
inc
shll
repz
fcompl
sarl
pop
add
dec
in
dec
je
popa
sbb
cmp
jnp
jns
adc
cwtl
xlat
pop
pushl
mov
lods
int3
dec
jecxz
and
jecxz
imul
mul
mov
or
fs
add
fsubp
es
stc
aam
mov
pushf
dec
popf
test
sub
fisttps
lret
test
push
mov
lret
mov
mov
cmp
sub
bound
ret
test
push
mov
rcr
sti
jmp
xchg
test
push
popa
mov
and
xor
iret
out
cmpsb
adc
xchg
faddl
dec
movq
add
in
jno
lods
lahf
popa
test
mov
lods
dec
fwait
loope
test
push
mov
pop
jnp
sbb
fldcw
pop
sub
stos
jle
std
push
mov
mov
push
or
jmp
pushl
xchg
lcall
jmp
sbb
push
mov
push
pop
data16
mov
mov
xchg
dec
fwait
lret
ljmp
fwait
jp
dec
mov
into
jae
or
out
loop
cmc
bound
mov
in
inc
mov
jno
stos
out
sub
stc
or
addr16
xor
mov
lahf
in
mov
shll
in
mov
pusha
scas
pop
outsb
fbld
icebp
out
jmp
jp
stos
orl
push
sbb
or
hlt
adc
and
dec
int
std
mov
push
push
out
push
adc
ja
data16
ret
and
xchg
into
inc
shl
jae
add
inc
mov
call
enter
test
jmp
cmp
imul
fidivrs
jl
adc
push
shr
xor
outsb
cld
repnz
fld
leave
pop
mov
mulb
adcb
fwait
dec
jl
in
into
sbb
mov
dec
add
jle
int3
fdivs
pop
jnp
mov
push
in
xor
movsl
push
xor
xchg
stos
loop
mov
movsb
dec
roll
or
push
in
test
add
daa
xor
xchg
cmp
sbb
lret
push
outsb
jl
jnp
dec
pusha
dec
mov
movsl
dec
test
and
pop
lahf
lret
push
cltd
ljmp
lea
mov
jmp
sti
pop
dec
and
xchg
ret
movsb
inc
lock
es
loope
jle
sub
sbb
sbb
outsb
fdivrs
sahf
rcrb
mov
adc
test
dec
iret
mov
add
xor
pop
push
inc
mov
int
in
pushf
sub
fwait
cmpsl
pop
lcall
push
out
ss
fdivr
pusha
lahf
sub
imul
push
pop
add
or
std
mov
test
out
mov
or
xchg
cmp
inc
test
sbb
shll
sub
into
sub
scas
cmc
adc
imul
mov
stc
xchg
jne
fs
adc
adc
sbb
sbbl
stc
inc
inc
out
pop
cli
in
ret
mov
dec
orb
jge
inc
lea
loopne
inc
dec
pop
xor
out
adc
subl
nop
sbb
cld
into
jae
mov
stos
cmp
inc
xlat
xchg
add
sub
mov
cwtl
inc
push
sti
push
push
aad
push
in
aad
dec
mov
push
cmpsb
movl
push
push
dec
lret
and
enter
and
mov
pop
mov
cmpsb
out
pushf
leave
mov
ror
dec
pop
shrl
inc
pop
push
xchg
sub
pushf
xorl
xchg
add
out
jecxz
push
idivb
push
cwtl
xchg
aad
mov
and
mov
sbb
dec
into
jbe
fistl
stc
mov
inc
pop
jne
loop
scas
lock
mov
leave
mov
in
and
cld
xchg
rorl
movsl
es
push
bound
and
dec
cwtl
inc
or
pop
pop
stos
icebp
mov
cld
cmpsb
xchg
lret
pop
sub
fs
ret
pop
fimull
rolb
cmpsb
loopne
adc
sub
adc
call
clc
xor
jb
ret
or
ljmp
lea
hlt
push
out
or
lret
xchg
and
pop
push
inc
jmp
into
aas
addl
repnz
cltd
jecxz
sub
xchg
add
hlt
test
inc
dec
xchg
pop
ja
leave
pop
rcrl
sbb
pop
aam
or
pop
inc
push
fiaddl
stos
inc
fsubr
xor
push
or
test
sub
mov
lods
xor
mov
and
mov
dec
mov
adc
mov
or
roll
fwait
mov
cltd
mov
clc
pop
mov
jecxz
out
shl
bound
jns,pn
or
in
cmp
out
fs
ja
shlb
ss
xlat
jae
or
cwtl
mov
rcrl
pop
jle
jo
in
add
pusha
dec
insl
mov
xchg
xchg
call
test
push
je
ficoms
mov
mov
xor
ds
xor
mov
mov
lods
cmpsl
jnp
lds
scas
add
loopne
sbb
pop
cs
mov
ret
inc
inc
int3
je
jae
nop
pop
inc
movsb
cltd
fisttpl
fidivrs
inc
pop
movsb
xchg
adc
dec
lods
sbb
adc
imul
fisubs
jmp
lds
xlat
xor
sbb
or
cmpsb
mov
arpl
in
fdivl
mov
inc
sbb
dec
clc
aaa
add
jae
xchg
int3
ret
insb
push
pop
stos
mov
aaa
aam
xor
add
mov
and
inc
mov
movsb
aad
and
cmpsb
mov
enter
daa
xor
xchg
jl
jl
inc
dec
iret
add
aas
leave
dec
movsl
push
lret
adc
lahf
jmp
outsb
push
test
pop
pop
push
inc
mov
pop
jno
loopne
iret
js
pop
jecxz
or
loope
inc
sahf
sub
insb
cmp
adc
xor
mov
jecxz
hlt
sbb
daa
add
fisubl
inc
into
ds
inc
aad
int
out
and
pop
sbb
int3
push
inc
add
fsubrl
fists
sub
imul
adc
cmpsb
xchg
pop
push
ss
cmp
cmp
adc
not
dec
ror
pop
lret
int3
cmp
sbb
and
mov
xlat
repz
mov
push
outsl
xor
xor
dec
inc
pop
fdivs
data16
cmp
push
lods
mov
adc
out
rol
cli
and
sub
or
movsl
add
out
push
gs
inc
loopne
fidivs
pop
push
sti
imul
sub
stos
ljmp
mov
andb
in
movsb
xlat
rorb
sub
mov
outsl
in
add
xor
aad
push
ss
mov
dec
jne
mov
enter
lods
cltd
mov
shll
cltd
mov
and
sub
call
sbb
rcrl
imull
adc
std
mov
jmp
leave
mov
inc
jle
adc
aas
popf
cmp
dec
dec
rorb
fnsave
mov
pop
fwait
dec
idiv
mov
std
cmp
dec
jecxz
mov
fsubrs
out
xchg
adcl
inc
fildl
dec
mov
inc
or
lods
mov
cmpsb
mov
fwait
popa
cmp
sbb
rcrl
cld
es
and
test
dec
xchg
jae
cmpsl
xor
lea
icebp
fidivs
cld
sarl
mov
fsub
jbe
pop
push
rcrb
stc
sub
rcl
inc
nop
sub
jb
aam
sti
sub
push
adc
icebp
fldl
ljmp
dec
bound
nop
mov
mov
insb
scas
fsts
and
fiaddl
in
sub
sbb
mov
cmpsb
mov
mull
dec
imul
js
pop
outsl
sbb
shll
or
cltd
stos
pop
adc
popa
push
in
jmp
xor
outsl
loop
rcrb
xor
cmp
mov
mov
fdivrl
ja
mov
dec
orl
or
sub
dec
cmp
mov
in
jne
mov
add
jns
sub
in
test
xchg
cvttps2pi
sub
jb
es
push
and
push
cmpsb
mov
add
jl
out
inc
and
jle
insl
mov
jns
fisubl
xchg
scas
fnstsw
in
adcb
mov
andl
push
mov
xor
mov
jb
fwait
stos
cmpsl
nop
dec
and
push
scas
insb
mov
ret
or
push
pushf
add
iret
and
nop
ret
js
enter
xlat
dec
aad
add
inc
cmpsl
rorl
push
fsubrs
enter
out
add
mov
imul
cmpsb
out
and
rcrb
inc
mov
insb
enter
lods
pop
hlt
icebp
fstps
loopne
inc
jbe
imul
sub
mov
sbb
sahf
test
push
int3
scas
aaa
pop
pop
flds
push
sbb
xor
fists
mov
adc
cmp
pop
in
movsb
pusha
lods
xchg
push
add
push
setne
in
ja
inc
enter
daa
xor
inc
jno
leave
xor
addr16
dec
jnp,pt
bound
aam
pop
push
fisubs
stos
push
in
push
aas
es
push
and
mov
xor
cwtl
std
xchg
ret
pop
pop
and
aam
xor
clc
sub
hlt
xchg
xor
addr16
outsb
sahf
dec
sbb
push
push
and
pop
lahf
sbb
sbb
add
xor
insb
jmp
sub
sahf
repnz
cwtl
lret
fs
rcr
push
inc
imul
into
fwait
mov
xchg
push
mov
aad
mov
cmc
and
fdivl
xchg
pop
sarl
mov
push
dec
shll
mov
lea
repnz
inc
xor
lods
outsl
adc
loop
hlt
fdivr
add
mov
arpl
cmpsb
push
jno
lods
push
cli
push
mov
outsl
mul
bswap
int3
cli
push
and
cmp
and
decb
mov
gs
xor
mov
into
pop
jo
rcll
push
cmp
imul
dec
rolb
scas
jecxz
xchg
addb
mov
adc
jb
pop
shlb
outsb
movsb
repnz
mov
jge
pop
insl
icebp
aad
ret
adc
aam
or
adc
shl
fdiv
shl
push
mov
cmp
xchg
mov
cmpsl
adc
fidivrl
pop
pop
loopne
inc
lretw
sub
loop
jb
and
dec
dec
xor
mov
testb
std
push
shlb
or
into
mov
pop
and
popf
mov
and
mov
inc
inc
lock
lods
mov
push
std
sub
cmpsb
cmp
shll
imul
cmpsl
das
inc
sarb
cmp
jne
cmc
and
fistps
int3
mov
sbb
loop
test
clc
sub
lock
aam
repnz
ret
xor
js
rcr
or
stos
inc
inc
clc
cmpsl
pop
xchg
xchg
inc
pop
jno
popf
test
lods
sub
push
mov
iret
push
xchg
mov
adcl
decb
mov
sbb
add
mov
mov
sti
faddl
sarb
cmc
xchg
mov
sbb
xor
sti
inc
pop
sub
mov
dec
lds
mov
lods
push
add
cmp
movsb
divb
mov
sbb
mov
xor
fnstsw
xchg
leave
ja
out
dec
je
xlat
inc
scas
mov
or
push
and
fs
sub
jp
mov
shrb
out
jg
dec
bound
leave
jns
in
jne
sub
popa
xchg
pop
pop
mov
sub
insl
jbe
addr16
fiaddl
insl
jmp
bsf
out
cmpb
mov
cmpb
xchg
sbb
sbb
pushf
sti
xor
mov
popf
xchg
cmp
mov
stos
sbb
inc
insb
and
mov
scas
enter
jecxz
mov
shll
iret
xorl
ret
sbb
inc
loop
fidivs
ja
inc
stos
xor
push
push
mov
and
cmp
xor
imul
inc
fisubrs
xor
test
cmp
adc
mov
cmpsl
and
cmp
jo
out
mov
jbe
test
jge
das
in
sbb
xor
or
out
int3
cltd
gs
or
jl
aam
loope
mov
mov
and
pop
cmp
pop
std
push
push
iret
pusha
cmpsb
xchg
xchg
shr
pop
or
mov
cmp
das
inc
adc
pop
cs
push
cmp
jl
pop
movsb
dec
lods
mov
movsl
bound
into
and
ret
lahf
daa
lods
push
adc
jo
jnp
ret
push
out
or
inc
stc
lods
hlt
xor
lret
pop
mov
mov
xor
inc
push
loope
xor
sub
mov
outsb
add
adc
jmp
mov
orb
aaa
sbb
dec
xchg
add
adc
in
repnz
dec
ja
int
popf
jnp
xchg
jge
pop
pop
jns
lcall
nop
fdivr
jo
sub
into
sahf
jno
std
test
daa
push
jg
cmp
add
adc
cmp
ss
pop
cmp
je
xchg
notl
pushf
lret
jno
cli
xor
sbb
ror
aad
ja
fnstcw
insl
lcall
xchg
shrl
out
icebp
ret
adc
dec
fisubrs
ljmp
cli
xchg
xor
insb
stos
cmp
leave
ret
or
aas
outsb
sub
dec
pop
loopne
push
lret
pop
popl
adc
mov
imul
add
add
or
arpl
hlt
pop
out
push
arpl
aam
push
mov
fsts
fwait
jp,pn
fs
xchg
xchg
xor
mov
fstps
mov
out
nop
repz
fsubl
sub
call
push
mov
pop
aad
add
jmp
mov
jns
mov
sbb
dec
ret
inc
aas
fisttpl
out
dec
rolb
je
ljmp
test
jo
mov
fstpl
pusha
rolb
mov
addl
inc
inc
mov
hlt
add
arpl
int
sbb
sbb
pop
dec
sar
and
insl
push
aad
dec
mov
push
repz
cmp
clc
cld
daa
movsl
and
fs
inc
mov
out
jb
xchg
dec
hlt
pop
aaa
cli
or
jnp
dec
sub
adc
aam
cmp
ret
shlb
xchg
add
shlb
clc
loop
and
adc
popa
sbb
aaa
mov
xor
adc
xlat
fcmovnu
por
xor
adc
jmp
test
add
lret
inc
sub
aaa
ja
test
test
push
and
sbb
and
rcrl
and
pop
aad
add
inc
sbb
add
rcrb
jmp
adc
xor
push
test
jbe
push
mov
push
lahf
in
ja
xlat
dec
addr16
inc
stos
cld
or
push
sbbb
cmpsl
inc
jne
roll
lcall
fstpl
leave
in
adc
out
ret
clc
sub
push
sbb
mov
idivb
mov
sbbl
xchg
inc
pusha
sbb
test
adc
loope
cmpsb
jl
addl
popf
mov
fnstenv
stos
lea
sub
push
jnp
or
scas
sub
adc
movsb
jno
ja
stos
pop
ss
ret
inc
in
out
jle
lahf
shl
inc
lods
mov
ljmp
outsb
inc
inc
mov
xchg
xchg
repnz
jg
imul
and
or
je
xor
dec
mov
adc
mov
arpl
ret
cmpsl
pop
add
mov
add
aaa
inc
mov
lods
add
int3
test
pop
aaa
stc
lea
loopne
scas
xor
adc
pop
scas
jbe
mov
cmp
sahf
movsb
jbe
adc
mov
add
inc
sbb
xchg
push
cmp
iret
adc
ret
dec
sbb
mov
test
cmp
loope
inc
lahf
inc
sarb
test
mov
insb
add
idivl
sarl
adc
mov
or
loope
arpl
sub
pop
inc
cmp
pop
jnp
lods
or
les
sbbb
sbb
inc
add
push
shll
mov
movsb
push
dec
imul
int
dec
sub
push
icebp
roll
xchg
stos
das
lcall
jae
stos
jae
sub
movsb
cmp
xor
cmpb
mov
popf
xchg
cmp
outsl
and
inc
push
sbb
cmp
das
testl
insl
rcll
push
sbb
fwait
into
mov
bound
xor
mov
adc
es
sar
jb
ss
ret
pushf
test
cwtl
sbb
in
sbb
or
dec
mov
cmp
inc
mov
push
push
jmp
loopne
sub
pop
scas
jae
adc
popa
or
pop
xlat
adc
or
add
mov
jge
push
cmc
cmpb
imull
xlat
xor
mulb
inc
push
into
sti
adc
cs
movsb
aad
lret
sbb
clc
dec
xchg
pop
mov
fsts
test
repz
pop
lcall
icebp
jg
or
push
xchg
inc
mov
adc
inc
pushf
jne
cmp
lea
pop
pop
daa
inc
inc
je
sbb
push
fdivrl
jp
push
jb
pop
push
dec
aaa
je
je
jecxz
push
xor
sbb
xor
pop
adc
adcl
repnz
fcmovne
loope
mov
mov
xor
aam
das
mov
stos
rcr
mov
mov
in
fsubs
xlat
inc
pop
insl
cmp
in
dec
test
cmpsl
sub
pop
push
icebp
adc
cld
push
push
pusha
lret
shll
lods
mov
in
mov
mov
push
out
rorb
mov
out
xlat
test
sahf
fistl
test
push
pop
fwait
sub
stc
nop
and
sbb
mov
and
xor
lods
ljmp
mov
xchg
mov
mov
mov
push
add
bswap
cltd
mov
jl
mov
sarl
dec
sbbl
aad
xchg
sbb
outsb
gs
addb
jnp
push
out
mov
mulb
add
incl
pop
xor
mov
or
pop
xor
mov
lock
or
sub
dec
pop
ficompl
or
and
jp
repz
sub
test
mov
cmc
adc
cmp
aaa
imul
pop
mov
xchg
lret
xchg
in
or
lods
addr16
fimuls
ror
dec
mov
cmpsb
out
mov
mov
in
or
pusha
mov
int
cmp
lret
stc
jmp
jno
push
adcl
dec
push
ljmp
mov
das
push
pop
stos
add
or
insb
cli
xor
push
call
push
jno
aam
mov
lods
iret
inc
sbb
ret
dec
pop
insl
lock
jae
outsl
sub
mov
rorl
lret
inc
push
ficoms
loope
ret
xchg
jmp
ficompl
mov
dec
fisubrs
in
pusha
shlb
mov
gs
leave
jb
cmpsl
hlt
sarb
shlb
cmp
mov
xor
xor
fsubl
test
jmp
outsl
or
mov
int3
outsl
nop
jl
data16
hlt
push
ret
pop
mov
insb
xor
jne
inc
cmp
je
add
mov
pop
add
sub
in
add
movsb
cmp
push
jno
xchg
call
orb
jo
mov
lahf
gs
or
mov
pop
stos
push
test
inc
pop
outsl
xchg
mov
repz
js
sbb
push
xchg
loope
mov
sub
cli
fistpll
je
inc
outsb
dec
adc
rcrb
jns
subb
inc
sbb
addl
icebp
iret
push
push
jmp
shrb
clc
xor
adc
out
push
mov
dec
sub
ret
lods
sahf
mov
movsb
test
addr16
jg
adc
ficoml
mov
int3
hlt
mov
cmp
xchg
ss
mov
cmp
ljmp
lret
jno
sub
mov
dec
sti
loopne
xchg
pop
mov
cmc
repz
in
and
outsl
lods
int3
leave
loop
clc
xchg
sub
cmp
adc
and
pop
xchg
loopne
xchg
out
shr
cli
in
hlt
jns
aam
outsl
cmp
cwtl
dec
or
ljmp
xchg
decb
loopne
sbb
adc
inc
dec
imul
imul
lret
jp
sbb
push
ret
mov
mov
mov
sti
mov
pusha
jecxz
xchg
arpl
nop
mulb
dec
icebp
xlat
repz
adc
push
std
push
lret
push
stos
lret
sti
xor
xchg
out
pop
cmp
adc
xchg
mov
test
jl
mov
cmp
inc
sti
in
inc
jle
imul
ficomps
scas
mov
je
daa
mov
testb
fdivr
add
cwtl
cmp
mov
mov
jae
scas
push
je
gs
inc
into
mov
cli
lock
sbb
mov
inc
nop
pop
rcll
in
insl
and
fbld
pop
sub
icebp
jmp
fucom
lret
inc
iret
mov
pop
nop
repz
leave
sahf
or
jne
daa
shlb
ret
pusha
sub
inc
cld
aam
into
mov
fisubrs
add
test
inc
clc
pop
xchg
movsb
xchg
mov
ljmp
mov
pushf
pmaxsw
push
mov
xchg
mov
pop
mulb
cltd
imulb
loopne
gs
mov
jo
add
xchg
push
xchg
sbb
dec
ror
fnsave
pop
sub
xchg
push
mov
mov
gs
jmp
insb
enter
mov
lods
sbbb
stos
mov
mov
cld
push
dec
mov
enter
adc
inc
je
data16
enter
jge
dec
or
stos
mov
push
dec
push
out
sbb
out
bound
pop
sarl
adc
in
negb
out
inc
fisubrs
pop
inc
mov
push
lret
sub
sub
mov
out
dec
jle
ljmp
push
negb
fistps
xchg
mov
sub
add
mov
jne
push
lods
ficomps
popf
or
push
outsb
call
les
das
xor
insb
gs
jnp
stc
scas
icebp
call
mov
iret
mov
cmp
pop
movsb
push
cmp
inc
jae
push
xchg
inc
mov
popf
or
inc
inc
pop
inc
aam
or
xchg
lahf
inc
xchg
inc
mov
lcall
sbb
add
call
adc
dec
hlt
sbb
sti
int3
jbe
sbb
sbb
xor
or
add
jp
pop
int3
pop
stos
out
xchg
shr
cmpsb
lret
sub
shrb
or
cmp
jmp
or
aas
mov
xor
enter
daa
sub
add
repz
bnd
mov
jb
cli
or
ds
jae
movsl
ja
xchg
and
fcomip
lahf
test
push
test
dec
addr16
inc
cmpsb
mov
jge
mov
xor
mov
divb
inc
push
mov
loope
sub
and
outsb
sub
rcll
jb
fdivs
inc
rclb
add
hlt
loopne
push
in
push
push
push
mov
sub
lret
pop
xchg
cltd
pop
lcall
data16
cmc
push
sub
cmpsb
sbb
inc
push
in
xor
pop
jg
xchg
mov
inc
nop
mov
xchg
mov
les
inc
sbb
cmc
cmp
movsl
leave
jge
notl
lahf
lods
sarl
jmp
rcl
into
jle
mov
mov
xor
outsl
mov
repz
loopne
mov
pop
or
jae
lds
push
lods
in
jmp
xor
or
imul
dec
inc
xor
mov
lods
xchg
in
mov
loopne
sbb
pop
in
xlat
outsl
adc
les
add
test
cmp
sahf
popa
xor
movsl
loope
xlat
or
daa
xor
sbb
sti
outsb
jb
mov
pusha
notb
push
push
pop
inc
daa
cltd
imul
or
sub
movsb
sbb
lea
ljmp
xchg
hlt
and
adc
enter
pusha
insl
jmp
inc
sub
inc
andb
cltd
adc
jb
fnstenv
dec
and
ret
and
sarl
testb
std
stos
or
cwtl
hlt
shll
mov
mov
dec
push
sub
fldt
and
mov
push
das
and
sub
rorl
mov
shrb
sub
mov
mov
jp
pop
cmpsl
sub
repnz
shlb
cld
test
push
lret
mov
push
mov
sti
loopne
mov
xchg
int
shl
mov
fmull
aam
adc
sub
fildll
rcr
inc
outsl
jae
xchg
js
xchg
cmp
jb
popa
pusha
push
lcall
cmp
out
pop
loopne
xchg
int
repz
push
hlt
in
dec
push
mov
sub
jo
mov
mov
xchg
aaa
dec
insb
add
inc
stc
mov
roll
lahf
shll
jno
pop
cltd
sub
sub
add
xor
sub
jg
pushf
xor
nop
test
and
pop
mov
aas
pop
aaa
mov
andl
dec
inc
data16
call
push
fcoms
dec
lock
and
sub
fucomip
sti
xlat
push
bound
push
cmp
popf
xor
in
or
xlat
addr16
or
jle
mov
jb
mov
insl
int
jle
stos
jnp
pushf
ljmp
jnp
sub
stc
hlt
mov
scas
clc
push
jo
aad
xor
mov
lods
add
stos
out
xor
inc
push
and
sarb
xchg
jnp
xor
scas
push
jno
push
incl
adc
lret
dec
iret
call
sbb
mov
pushf
pop
fistpl
inc
push
pop
int3
jae
ja
inc
mov
call
push
push
adc
xchg
cltd
imul
dec
fdivp
pushf
cmc
vpavgw
cmpsb
stc
jge
xchg
leave
pusha
std
sbb
push
std
push
jbe
and
xchg
sbb
addr16
jge
add
pop
loop
add
imul
pop
les
push
mov
xor
and
call
and
addr16
movsb
pop
ss
push
mov
cmpsb
sahf
or
in
cli
movsb
mov
ja
or
sub
pop
cmp
ja
jno
gs
dec
imul
movsl
jle
dec
and
sub
push
pop
leave
sub
sbb
test
inc
xchg
jmp
pop
mov
js
loop
pop
pop
mov
jo
imul
sub
mov
subb
inc
adc
push
imul
je
adcb
sbb
cmp
jno
dec
xor
sbb
push
sub
sub
inc
pop
adc
lcall
push
fsubrl
dec
jb
std
inc
loopne
mov
jg
incb
subb
ficoms
aaa
mov
mov
shlb
loope
sbb
pusha
stos
popa
testl
rcll
mov
out
and
lock
into
popa
pop
sub
adcl
imul
stc
xchg
nop
or
mov
ret
data16
mov
aam
or
or
cli
push
pop
inc
xor
mov
or
daa
xchg
mov
sub
mov
jae
test
lea
adc
and
add
or
lds
cmp
xor
xlat
dec
fisubrs
mov
pop
lock
test
cs
jno
aad
ret
lods
or
dec
scas
aam
inc
cmp
xchg
les
pop
arpl
aaa
dec
dec
lea
dec
inc
adc
push
pop
mov
notl
jbe
mov
pop
inc
cmp
inc
or
inc
mov
sub
push
push
dec
jb
or
dec
pushf
mov
dec
jecxz
ja
notb
adc
cwtl
scas
pop
push
int3
cmp
cmp
outsl
fistpl
imul
popa
lock
mov
adc
mov
pop
pop
or
xor
jge
insl
out
cmp
cmpsl
sub
mov
xchg
xor
shll
lret
and
mov
or
cltd
pop
mov
call
sub
add
ret
cld
cmp
and
into
lock
jl
pminsw
das
insl
popa
ja
pop
lods
inc
lea
out
mov
push
push
inc
outsl
in
packuswb
mov
cltd
roll
test
call
fildl
rorl
mov
pop
dec
sbb
sub
cmpb
leave
add
iret
cmp
add
fwait
enter
pop
xor
int
or
insl
mov
subb
sbb
mov
ja
insl
add
mov
pushf
or
nop
fs
pop
hlt
jecxz
shll
jne
adc
mov
add
jae
sub
jns
popa
cmp
fbld
sbb
and
push
push
ljmp
insb
in
mov
lea
mov
fsubrl
jle
pusha
aad
mov
pop
dec
fistps
pop
or
lock
xor
sub
push
xor
ss
in
movsb
jae
pop
add
cmp
jnp
leave
scas
mov
jno
inc
cwtl
push
iret
pop
xchg
jecxz
ret
andb
sbb
jae
loopne
inc
mov
sbb
push
shl
pop
test
int3
std
mov
rcl
add
xchg
adc
lds
rol
push
mov
pop
je
leave
xlat
sub
hlt
mov
arpl
inc
and
cmpsb
mov
and
aam
aaa
cmp
add
push
mov
sahf
int3
xor
pop
repz
ss
insb
or
xor
jge
sub
and
inc
mov
movsb
mov
or
and
loope
or
pop
cwtl
daa
sub
mov
jno
mov
jl
or
dec
fsubrs
ds
mov
test
jnp
ret
push
xor
push
push
in
filds
push
add
add
cmp
in
cmpsb
js
movsb
lock
pushf
loope
push
xor
loope
xchg
cmp
fcmovb
adc
xor
xchg
ja
subb
sbb
xchg
add
in
xor
xchg
nop
push
pop
jp
int
call
pop
pop
xchg
cwtl
pop
lcall
sub
push
fisubrl
out
mov
sahf
mov
shl
sub
jg
jp
mov
mov
push
mov
iret
dec
and
mov
and
fidivrs
sbb
testl
inc
mov
in
pop
jmp
or
xor
pop
or
into
inc
jno
cmc
dec
insl
fnstenv
xor
add
dec
insb
inc
loop
shll
movsl
dec
cli
adc
xchg
out
bound
lods
mov
mov
or
test
xor
addr16
andl
sub
fcoml
cmpsl
notl
pop
sub
inc
sbb
pop
adc
jnp
add
movsl
add
in
pop
imul
mov
mov
in
lock
fwait
sti
int3
popf
xchg
cs
push
nop
xchg
imul
leave
fldcw
rclb
repz
out
inc
cmp
xor
clc
testb
mov
pop
push
jns
adc
aam
dec
cmp
jmp
and
iret
push
mov
jb
insb
sbb
mov
scas
jecxz
pop
push
not
push
movsl
std
clc
cld
cwtl
push
fbstp
dec
sbb
cwtl
dec
es
mov
mov
push
mov
xchg
std
lock
inc
das
loop
enter
push
mov
call
and
xor
lret
cwtl
dec
jo
pusha
cmpsl
sub
outsb
icebp
outsb
push
cld
xlat
lret
pusha
or
or
jecxz
rol
lcall
aam
sahf
add
scas
sbb
mov
xchg
fnsave
xchg
mov
mov
inc
lods
stos
xchg
sub
and
adc
push
xchg
add
add
add
xchg
xchg
fisttps
jl
test
add
rorl
lods
sbb
ret
add
in
mov
add
mov
push
mov
cmp
loope
mov
in
gs
mov
inc
lret
cs
ja
loope
dec
es
cmp
or
mov
fwait
ss
loopne
mov
jle
sub
fidivs
mov
lods
mov
sub
dec
in
mov
lret
jo
sub
dec
mov
mov
lahf
add
int
mov
dec
aam
jle
or
in
pop
sbb
fistpll
out
sbb
out
clc
xchg
popf
pop
orl
push
notb
or
cmp
rcll
enter
in
and
insb
cmpsb
pop
pop
jnp
and
push
lea
mov
ret
xchg
pop
fldl
jae
mov
or
mov
mov
pop
xlat
fisubrl
orb
rcll
fidivrs
js
push
mov
mov
repz
dec
add
hlt
stc
mov
dec
int
jbe
fwait
dec
jge
or
sti
bound
add
subb
lods
jo
dec
fwait
jp
jle
pop
jo
scas
inc
scas
shrl
and
pop
mov
movsb
sub
fstps
movsb
add
enter
insl
popa
jae
sub
mov
jno
shll
xchg
js
dec
inc
inc
push
push
dec
xchg
movsl
mov
add
call
and
test
mov
popf
inc
push
and
push
pop
test
cli
lds
imul
loope
mov
outsb
push
dec
jae
lcall
cmc
jle
cmpb
sbb
mov
add
pop
pop
xor
cmp
sbb
jne
mov
adc
lcall
push
faddl
in
insl
sub
out
sahf
inc
cwtl
das
test
pmullw
or
dec
insl
mov
out
mov
push
sbb
insl
divb
sbb
push
push
popa
fcom
daa
stos
test
sub
mov
xor
sbb
test
daa
jge
cmc
pminsw
sub
add
lret
xor
inc
in
out
mov
xor
out
adc
mov
cmp
cmp
and
or
jns
gs
adc
loopne
xchg
cs
dec
mov
sbb
out
imul
sub
xchg
xlat
adc
in
cmp
dec
xlat
lret
sub
nop
fs
pop
lea
sti
jnp
outsb
cs
push
mov
mov
movsb
nop
bound
insl
loope
inc
pusha
mov
sub
sub
addr16
cmp
or
mov
adc
inc
pop
pop
movsl
add
repz
mov
cmp
pop
mov
lods
inc
pop
sub
aas
xchg
shlb
jb
add
je
nop
pop
jecxz
mov
notb
xorb
and
push
std
mov
mov
adc
adc
mov
fmulp
mov
sub
lock
xor
mov
jae
lret
popf
or
data16
insl
mov
mov
clc
mov
inc
lds
lret
sbb
mov
adc
sbb
icebp
int
insl
xorb
loope
ret
sbb
sub
fnstsw
xchg
ret
popa
movsl
dec
lods
push
jo
mov
test
cs
mov
mov
add
add
lds
mov
lea
xchg
and
push
test
mov
loope
adc
out
shrl
add
pop
xlat
iret
push
stos
aam
mov
adc
jl
add
mov
loop
shl
adc
mov
and
jae
mov
or
sbbb
mov
sbb
inc
shrb
or
test
fwait
gs
dec
cltd
jle
jne
or
mov
cwtl
mov
bound
xchg
ds
cmc
test
xchg
xchg
outsb
out
mov
cltd
or
xchg
mov
jp
iret
fdivs
aam
adc
adc
dec
pusha
mov
lea
xchg
add
dec
xchg
push
repz
popf
cmpsb
jno
mov
push
dec
stos
aas
je
and
xor
jnp
inc
shrl
aam
es
sahf
fmul
sbb
je
jmp
push
popf
inc
das
ret
jns
mov
mov
push
shrb
jmp
sbb
xchg
sahf
or
sbb
mov
imul
test
les
negl
out
repnz
push
leave
lds
hlt
dec
mov
sub
add
lds
subl
aaa
mov
inc
jg
fxch
push
pop
jb
push
xor
xor
test
xor
scas
mov
or
push
lds
scas
mov
pop
push
jnp
ja
daa
sub
enter
daa
sub
movsb
cmp
inc
inc
jl
mov
cs
shlb
adcl
push
xlat
xor
test
jnp
xchg
inc
loop
adc
sbb
rolb
js,pn
in
pop
sbb
aaa
push
jl
loope
jno
sub
lea
fbstp
xchg
out
push
push
mov
orb
mov
and
xor
je
int
push
fisubrs
lock
std
pop
nop
cmpsl
les
push
nop
cmp
sub
fsts
out
test
sbbb
jg
jge
mov
pop
scas
mov
mov
cld
sub
ss
mov
in
xchg
les
mov
lretw
mov
sbb
lea
push
jne
or
cmc
lret
ljmp
loop
adc
fs
movsb
push
lods
mov
xlat
mov
das
and
pop
sub
cli
jmp
mov
pop
mov
cmp
cltd
add
and
or
mov
adc
rcr
adc
mov
imul
sub
es
xchg
lcall
cmp
notl
sub
mov
fs
movb
sub
stos
cs
mov
aad
cmp
popf
dec
int3
insl
insb
inc
jae
in
fwait
or
les
jne
loopne
movb
into
mov
out
add
pop
mov
pop
stos
pushf
ja
out
jmp
cmp
xchg
inc
sahf
fildl
in
aas
xor
lahf
jb
iret
mov
xchg
scas
je
jl
jecxz
sti
negb
lret
test
cwtl
loopne
cmp
mov
mov
dec
dec
cld
andl
bound
test
cmp
loopne
cld
das
mov
out
lret
mov
push
or
and
es
popf
xor
push
add
pop
shll
icebp
sbb
dec
cld
push
call
dec
mov
pop
jmp
out
pop
adc
movsl
rolb
popf
sub
js
ret
test
mov
outsl
clc
jg
xchg
xor
loop
lods
sbbl
jae
out
lds
aam
popf
je
push
inc
cltd
or
xchg
mov
mov
xchg
xchg
dec
or
inc
xchg
popf
aad
cmp
sarl
lock
xorb
mov
loope
add
aam
sti
pusha
mov
and
jne
and
mov
dec
push
idivl
outsl
lret
jmp
out
loop
xchg
push
jb
fwait
xchg
arpl
jl
sbb
and
out
ja
push
and
cwtl
and
and
xchg
push
push
out
jnp
sub
inc
xchg
xchg
jp
push
ret
mov
mov
call
jle
cmp
push
hlt
pusha
push
jae
fcomip
push
mov
aad
sahf
xchg
xor
addl
add
popf
int
adc
test
cmp
insb
jl
or
and
scas
loopne
clc
push
sbb
jp
jnp
sbb
cld
hlt
mov
jmp
inc
cmp
cmovbe
inc
rorl
lods
xorl
adc
adc
int
push
imul
dec
rol
adc
fdivrl
push
mov
cmp
shl
xchg
shrb
arpl
dec
jbe
loop
jge
jne
sbb
mov
and
add
xchg
int3
icebp
popf
cmp
sbbb
adc
test
jo
call
xor
out
inc
cmp
lret
mov
lret
cmpsb
stos
lds
enter
daa
daa
mov
sub
or
jmp
dec
and
repnz
xor
les
shl
xor
inc
jecxz
inc
jno
push
dec
push
xchg
pop
imul
inc
js
arpl
push
xor
sub
es
cmp
ljmp
rol
push
lcall
or
movsl
imul
inc
std
xor
push
arpl
xor
cmp
sub
pop
pcmpeqw
push
stos
lds
push
mov
sub
mov
leave
cmpb
jg
add
mov
push
lret
and
fwait
mov
fmuls
testl
lods
shll
jno
lods
mov
pop
cmc
popf
pxor
inc
lds
outsl
out
out
loop
jle
stc
jae
int
inc
push
ds
adc
jmp
mov
mov
shr
push
lret
push
cwtl
pop
xor
dec
jae
adc
dec
inc
pushf
dec
gs
dec
fcomps
sbb
adc
sbb
adc
orb
mov
lret
xchg
pop
mov
idivl
int3
dec
repz
dec
gs
mov
xor
sar
fstps
cs
add
nop
sbb
mov
inc
xchg
cmc
les
das
out
repz
sub
mov
lea
push
inc
pop
insl
sbb
adc
stos
aaa
jmp
in
pop
shlb
les
int3
jle
rcrl
jb
into
push
dec
js
into
je
mov
push
std
in
sbb
divl
and
cmpl
lods
push
fistl
mov
mov
int3
pushl
cmp
pushf
das
jg
cld
mov
rorl
mov
jbe
insb
pop
or
dec
popa
adc
xor
mov
mov
repz
cld
jg
out
fidivrs
push
movsl
cltd
mov
das
rcll
adc
sbb
sub
ret
cmp
mov
clc
mov
push
adc
test
popa
popa
rcrl
mov
fdivl
out
dec
in
xchg
xor
fcoml
inc
jle
jecxz
enter
icebp
cltd
inc
dec
sub
sbb
dec
outsl
bound
xchg
jns
jp
outsl
rcl
insl
mov
sub
xchg
sub
pop
lahf
incl
pop
add
lcall
lret
or
inc
xor
lret
xchg
iret
mov
mov
sub
ja
push
adc
adc
inc
outsb
or
adc
pop
data16
adcl
inc
bound
xchg
lods
adc
or
xchg
and
scas
icebp
sub
inc
loop
xchg
cmp
cmp
pushf
xchg
jle
mov
mov
popa
push
fists
push
pop
xchg
test
jmp
decb
cmp
stos
push
aas
arpl
popf
hlt
test
xorps
dec
xchg
stos
and
cmp
insb
out
xor
enter
addr16
push
int
adc
xchg
ret
adc
inc
inc
test
jae
xor
inc
lds
push
jmp
mov
inc
into
popf
lret
fcmovb
movsl
jae
dec
test
imul
adc
push
addr16
mov
stos
mov
push
hlt
fistpll
arpl
data16
xor
sbb
fidivl
cmp
mov
sbb
mov
int3
fdivl
stos
push
clc
ljmp
xor
jmp
ss
js
movsb
into
repz
sbb
sub
mov
enter
daa
decl
filds
orl
or
shlb
mov
mov
fisubrs
adc
jmp
femms
and
mov
js
jne
pop
cwtl
push
push
push
xchg
fndisi(8087
fsubrp
cmp
cmp
dec
xchg
adc
pushf
jae
adc
repnz
push
iret
add
mov
xor
sub
push
ds
int
lds
out
cmp
mov
pop
lcall
and
add
sub
mov
scas
adcb
mov
and
mov
je
mov
aam
and
or
cmp
pop
mov
mov
js
rorl
mov
mov
into
rcrb
cmc
fs
jecxz
and
mov
outsb
or
adc
lret
data16
push
test
push
mov
out
in
pop
cli
push
sub
mov
xchg
add
rcr
mov
push
mov
cs
cmpsb
fs
xchg
sbb
enter
sub
and
sbb
pop
subl
sub
xchg
sub
pushf
cmp
cs
dec
and
test
dec
mov
test
jle
mov
pushf
xor
call
lea
pop
and
adc
cli
negl
push
popa
pop
jne
mov
lods
jns
inc
cmp
or
jb
add
dec
out
lmsw
pop
jecxz
cmpsl
fdivp
loopne
fdivr
xchg
lcall
pop
mov
inc
or
test
decl
ss
push
lock
std
das
pop
icebp
aaa
mov
js
pushf
and
daa
mov
es
jmp
mov
cmpsl
and
cltd
icebp
icebp
lret
cld
stos
mov
mov
and
push
stos
sub
shl
jae
sub
mov
pushf
push
jno
leave
fnsave
push
clc
cmc
cmc
pop
xchg
mov
stc
ljmp
and
adc
and
mov
cmpsl
add
cmpb
sub
enter
cltd
fimull
and
and
xchg
inc
mov
shrl
jns
stos
mov
sbb
add
inc
jae
cmp
xor
push
outsb
or
in
xor
jae
mov
shrl
mov
in
xor
fdivrs
inc
xchg
sub
mov
repnz
jne
jb
mov
sub
xor
sbb
fldenv
xchg
je
cwtl
out
push
dec
sub
cmp
das
test
imul
and
je
pop
adc
jp
loop
in
pusha
lea
xor
push
jg
ret
xor
xchg
leave
push
mov
push
add
mov
sbb
push
daa
cmpb
cwtl
jecxz
and
out
insb
push
cltd
and
xor
cmpsb
cmpsl
fs
test
es
cmp
ret
xor
or
jae
in
and
cmp
push
dec
adc
jns
sbb
sbb
jle
imul
faddp
sahf
mov
out
sub
rorb
mov
std
out
sti
leave
sub
mov
test
or
sbb
mov
pmuludq
int3
xchg
push
pop
ficomps
xor
inc
jno
scas
dec
sub
add
aam
jl
pop
scas
rclb
fidivl
mov
in
fs
pusha
enter
daa
and
jl
jno
pop
xchg
movsb
dec
add
jecxz,pt
popf
movsl
test
loope
push
mov
lahf
pop
dec
xor
push
je
test
fsubl
inc
adc
rolb
xor
pop
xlat
jecxz
push
mov
loope
pop
cwtl
sub
aad
cmp
cmp
filds
cmpsb
shlb
mov
jno
lods
add
test
adc
push
add
jp
xor
neg
push
imul
xor
popa
add
pop
or
lods
fstl
pushf
cli
fsubrl
dec
sub
test
xor
scas
mov
mov
jp
mov
cmpsl
and
in
mov
ret
test
mov
sti
mov
test
into
mov
loopne
sub
cmp
sti
push
mov
movsl
sbb
loop
cmc
jmp
loope
fs
rcrl
pushf
mov
pusha
lods
ds
int3
mov
xchg
inc
cli
test
xor
test
aas
movsb
decb
mov
pop
lds
imul
ja,pt
jecxz
sbb
inc
dec
cmp
int
sub
in
pop
test
pop
sti
aaa
lock
pop
orl
int3
cmp
orl
mov
flds
les
loopne
dec
cmpsb
imul
add
call
or
int
rcrl
adc
setl
scas
jmp
cmpb
sbb
push
inc
xor
adc
adc
push
dec
inc
mov
sarb
mov
mulb
das
std
cmp
nop
cwtl
adc
add
imul
jp
mov
int3
mov
lock
lahf
shrl
cmp
cmp
mov
lahf
mov
jb
push
dec
push
mov
cmc
mov
mov
lret
mov
popa
ret
dec
mov
mov
icebp
add
mov
mov
fcmovnb
push
fisubrs
pop
xchg
clc
xor
xchg
xchg
idiv
shr
mov
add
jns
ret
adc
xchg
mov
and
pop
push
mov
cltd
scas
pop
je
loope
data16
or
lds
xchg
sbb
push
pop
sbbl
nop
adc
push
mov
enterw
cli
fmuls
jle
test
xor
jno
mov
adc
ret
mov
mov
loopne
dec
in
sbb
mov
or
enter
mov
dec
and
mov
mov
or
out
adc
bound
test
cmp
out
jb
sub
ss
and
imul
jp
adc
mov
sub
cmp
mov
cmpb
fucom
int
inc
pusha
sub
fists
xchg
dec
in
adc
mov
inc
or
lds
mov
data16
stos
or
lret
and
mov
insb
mov
pop
xchg
scas
or
arpl
aas
fcoms
cmp
pop
iret
cwtl
clc
mov
cmp
pop
pop
dec
inc
pop
fiadds
inc
lret
jecxz
or
sbb
or
fisubrl
pop
sbb
adc
imul
imul
loop
arpl
ds
jo
leave
mov
or
pop
jbe
xor
inc
nop/reserved
movsl
aaa
mov
or
in
mov
xor
xchg
mov
cli
pop
or
mov
xor
lahf
push
lods
scas
sub
shlb
mov
cmp
test
xor
in
dec
mov
je
and
fdivrl
mov
jno
pop
pop
jl
add
dec
jb
xchg
ds
adc
leave
and
mov
lahf
jl
std
push
and
push
cmpsl
sbb
adc
xchg
imul
pop
push
cmp
push
loope
idiv
sub
ljmp
inc
mov
adc
push
imul
sbb
sub
dec
or
mov
or
int
or
sub
aas
mov
mov
test
mov
cmp
push
mov
sahf
jb
test
lret
jg
mov
mov
or
mov
mov
mov
iret
jmp
ss
repz
jge
insb
testl
test
sub
cmp
dec
into
xchg
add
cmc
repnz
aaa
outsl
test
pop
loop
loope
cwtl
fs
movsl
adc
stc
data16
cli
lods
and
out
into
out
mov
xchg
arpl
popa
cmp
mov
or
jne
shll
loopne
in
dec
pop
in
push
adc
dec
jecxz
mov
jmp
add
cmpsl
xchg
cmpsb
aad
sbb
jge
int3
xlat
add
pop
aas
mov
jb
push
sti
out
gs
pop
adc
test
ds
mov
cmc
les
mov
sbb
xor
dec
test
push
movsl
call
mov
pop
xchg
popa
adc
cs
je
pop
mov
dec
jne
jno
inc
aas
mov
in
jb
add
dec
fstpl
popa
je
jbe
jecxz
fs
aas
stos
cwtl
int3
xor
mov
int3
or
test
test
movsb
aas
out
mov
icebp
sub
dec
mov
das
sbb
or
out
repnz
inc
inc
rcrl
mov
insl
aas
icebp
imul
ret
mov
icebp
js
out
cld
add
sahf
lret
sub
xchg
xor
mov
cmp
and
mov
loopne
mov
xor
aam
sbb
in
xor
mov
jg
cmp
imul
xor
push
xchg
popa
sbb
inc
mov
jae
cmpsb
xchg
add
mov
verw
add
lea
test
mov
insl
cmpsl
sub
movsb
dec
add
sbb
mov
lret
repz
xchg
jae
rcr
sbb
pop
movswl
inc
jmp
add
pop
std
adc
ja
cmp
outsl
and
xor
ret
mov
fstps
mov
pop
sub
inc
dec
fdivs
lea
loop
fwait
push
mov
dec
or
adc
push
dec
mov
cli
in
repz
xchg
bound
ja
jns
push
aad
lods
sub
xchg
adc
and
mov
mov
xor
addr16
jp
or
jmp
stos
sub
rolb
aam
inc
pusha
ret
movsl
push
fbstp
cmp
mov
mov
or
popf
imul
push
movsl
jbe
stos
jle
cmpsb
and
cmpsb
sbb
and
push
jnp
insb
add
push
aaa
pop
adc
cmp
iret
notl
hlt
pop
xchg
mov
pop
jae
xor
mov
push
push
push
dec
xchg
fcmovu
cmpsb
stos
xchg
push
into
or
jge
imul
fimuls
sub
std
pop
jmp
mov
mov
imul
popf
or
jge
divl
sbb
mov
aaa
jne
lock
cltd
dec
add
sub
mov
push
mov
sbb
jo
dec
push
scas
or
fisubs
xor
jbe
inc
gs
outsl
and
push
jae
cmpsb
mov
in
xor
daa
and
sarl
enter
jl
jl
gs
loope
mov
sub
or
mov
lahf
fwait
jb
push
div
cmpsb
test
jb
roll
test
pop
xchg
pop
jge
or
pop
push
sbb
cmp
std
loope
mov
sub
aam
cmp
sub
adc
sub
jmp
sbb
add
xor
push
push
sub
repnz
or
mov
insb
mov
faddl
cmp
ja
sahf
adc
sbb
pop
inc
jg
dec
xor
xchg
jae
sbb
cmp
cmp
dec
push
cmp
mov
jle
push
enter
or
xor
pop
dec
loop
cmp
stc
dec
jl
jb
pop
adc
jns
not
movsl
lods
or
pop
mov
push
cli
ljmp
cmp
dec
cwtl
or
push
mov
fsubr
mov
pop
add
adc
aaa
dec
imul
icebp
call
std
ficoms
mov
inc
in
cmp
mov
fstl
sti
xchg
shll
pop
fdivr
nop
test
adc
addr16
inc
shrb
xchg
les
push
repz
adc
dec
pop
add
push
ret
or
loop
std
jns
pushf
into
add
pop
pop
push
mov
dec
int3
inc
mov
inc
aas
dec
stos
lret
jb
shll
je
push
push
jecxz
sub
test
push
fdivl
out
push
out
xchg
push
sbb
xchg
cwtl
scas
fcmovnbe
dec
sahf
mov
fistps
lock
mov
mov
popf
xor
shrl
add
shlb
dec
mov
mov
icebp
dec
fidivrl
cld
sub
test
cmp
mov
stos
pop
push
rcrb
or
mov
mov
mov
insl
clc
cmpsb
orb
je
sbb
je
lock
das
cld
js
cwtl
clc
cmp
stos
outsl
xchg
dec
dec
lcall
nop
push
add
sahf
sbbb
jns
mov
cmpsw
xchg
jb
or
mov
dec
xchg
mov
shll
repz
stos
outsb
mov
arpl
jae
jb
push
mov
test
xor
loopw
into
mov
push
mov
ja
jnp
dec
lret
test
jae
out
iret
loopne
jg
sbb
jmp
pcmpeqw
jmp
rcrb
vcvtss2usi
rorl
sub
pop
in
or
xchg
popa
rclb
cmp
push
or
cmp
adcb
add
mov
movsl
jl
mov
push
or
in
daa
lock
pop
in
fists
mov
bound
test
in
popf
nop
lret
aad
cwtl
push
in
jnp
icebp
cmpsb
out
adc
jbe
jnp
push
lock
iret
and
push
jle
lret
adc
popa
jo
push
cmp
pop
lret
inc
jno
pusha
jae
mov
out
test
push
lret
ficoml
add
mov
push
fisubrs
adc
push
cmp
testb
leave
mov
sbb
add
jge
xchg
cmp
aaa
xor
add
add
test
imul
xor
push
push
test
and
xchg
or
stc
cmpsb
stos
movsb
cli
flds
push
movsl
and
cmp
or
dec
mov
daa
and
adc
icebp
cld
cmpsb
jno
rcll
popf
addr16
push
xchg
push
ds
inc
andl
mov
xchg
push
sub
push
cmp
adc
sbb
cmp
xchg
pop
xchg
jnp
push
cmp
mov
into
xchg
mov
outsb
or
mov
or
inc
addb
jb
mov
les
jb
ror
jecxz,pt
sub
jb
pop
mov
lcall
pop
fsubrl
lahf
dec
sahf
mov
and
popa
jg
out
mov
shll
mov
dec
es
ret
cmp
repz
testl
pop
cmp
movsl
dec
jle
arpl
dec
into
pop
subb
inc
enter
and
sbb
or
push
fs
jl
adc
xchg
xchg
lods
repz
out
pushf
sbb
push
add
mov
mov
fistpll
repz
and
imul
outsl
xchg
sub
inc
sbb
repz
add
stos
out
mov
dec
or
cs
aaa
nop
pop
std
xor
inc
in
cmpsl
fxam
sub
jbe
xchg
repz
test
lea
ss
mov
pop
in
xchg
jns
jb
shrl
inc
enter
cmpsl
jnp
aas
out
xchg
jb
xlat
adc
je
ljmp
in
jl
std
xor
cwtl
inc
adc
mov
mov
jle
loop
add
mov
cs
xor
lock
inc
mov
push
lds
and
mov
sar
push
or
sti
fwait
pop
insl
or
xchg
fwait
cmpsl
and
mov
es
cld
push
dec
dec
lret
pop
xchg
js
out
jb
dec
pop
lret
shlb
jecxz
sub
in
ret
add
push
push
jge
and
int
dec
clc
loope
test
mov
gs
dec
lods
add
fldz
cmp
ss
testb
mov
in
cltd
push
lret
cmpsl
test
dec
mov
and
xchg
or
jb
xlat
test
mov
ret
sbb
dec
dec
rorl
hlt
sbb
pop
push
jnp
mov
add
inc
xor
aaa
sub
pusha
jnp
frstor
fstl
mov
rcll
ja
prefetchw
push
pop
inc
icebp
sub
fsts
fimuls
push
insl
jne
cmp
push
out
mov
push
bound
jns
repz
in
inc
icebp
xchg
mov
push
mov
sub
or
pop
addl
mov
fdivrl
mov
push
jle
mov
mov
fbstp
cmc
es
cmc
mov
add
lcall
dec
ja
adc
push
and
stos
movsl
mov
insb
adc
scas
xor
lds
pop
push
adc
popf
lcall
push
push
pop
add
sahf
inc
jl
inc
jae
hlt
inc
aam
jge
in
push
pop
push
dec
or
fiaddl
sbb
iret
int3
in
cmp
mov
or
lcall
xchg
add
dec
sub
leave
push
lods
loop
push
cmp
arpl
lods
lahf
jbe
xchg
cmc
jge
adc
aaa
repz
push
or
sets
testl
int3
push
bound
mov
push
scas
leave
xor
and
pop
cmp
in
push
movsb
sbb
mov
add
pop
cld
daa
and
mov
jno
sub
test
pop
outsl
lret
xchg
movsl
les
push
and
xchg
push
lahf
fldcw
test
or
lret
inc
pop
sub
lock
js
jl
pop
shll
push
sub
loope
xchg
in
cmp
cmpb
dec
inc
outsb
imul
adc
jecxz
jno
in
dec
loope
adc
jb
out
insb
int3
add
fisubrl
xor
fistpl
movsl
cmpsl
int
and
sub
mov
or
repz
in
pop
repnz
sub
push
sahf
pop
or
flds
add
jmp
mov
cmp
in
jbe
jg
mov
scas
cmp
add
aaa
mov
sarl
mov
in
sbb
js
into
aas
sub
cmc
inc
loopne
xor
ljmp
push
sti
stc
mov
pop
rcll
inc
adc
std
ret
lock
fidivl
jmp
cli
push
mov
call
incb
sti
cmp
pop
jecxz
gs
insl
loopne
inc
outsl
pop
inc
sbb
jnp
fwait
mov
jo
in
out
sbb
sbb
cs
xchg
xlat
ret
sub
enter
add
sti
repz
push
cs
jb
call
inc
aam
gs
inc
clc
push
lahf
fstps
stc
repz
iret
push
push
pop
call
or
pop
adc
and
sbb
inc
dec
ja
inc
ret
aas
lea
jb
push
push
dec
inc
xorl
jecxz
jl
imulb
dec
push
std
xlat
rcrl
shlb
aam
jbe
ret
dec
imul
sbb
sbb
clc
lock
leave
push
das
mov
int
mov
lret
push
rorl
and
insl
hlt
or
cmpsl
and
or
std
stos
mov
cmpl
shlb
or
pop
lret
shl
jns
jne
in
je
xchg
cwtl
rclb
cmpsb
mov
hlt
jecxz
clc
sbb
leave
xchg
repnz
pop
inc
xor
add
lods
outsb
sbb
jg
mov
xchg
fisubrl
nop
or
sbb
aaa
add
and
xchg
sub
cmp
test
jge
xchg
xor
lods
rcrl
das
and
inc
push
sub
nop
insb
add
clc
data16
into
or
daa
xor
scas
or
and
mov
mov
ja
daa
ds
mov
cmc
inc
mov
or
daa
push
fsave
mov
mov
pop
jne
xchg
cs
inc
pop
out
nop
push
es
push
in
int
xchg
jmp
dec
out
push
mov
cmpb
cltd
mov
mov
xor
cwtl
jle
loopne
in
popf
adc
popf
aam
shrb
aad
lcall
xchg
shrb
push
shll
pop
popf
fidivs
adc
bound
stos
xlat
push
pop
and
or
mov
dec
mov
cld
push
or
iret
adc
mov
sbbl
inc
inc
xchg
push
jae
sahf
movsb
inc
xlat
adc
push
enter
clc
sti
pop
xchg
push
pop
int
jp
add
mov
fdivp
add
mov
das
mov
pushf
jge
leave
jge
jae
mov
fwait
pop
jbe
lahf
aad
stos
jae
sbb
xorb
ror
or
fsubs
int3
pop
xchg
leave
ret
jns
dec
test
xor
or
mov
in
jns
cmp
test
adc
push
repz
cmpsb
aas
mov
cltd
enter
daa
and
cmp
jnp
jmp
mov
ds
inc
mov
pop
ret
clc
dec
into
push
outsl
inc
xor
rcrl
inc
pop
mov
mov
js
push
xor
adc
mov
loope
mov
sub
outsb
into
add
adc
mov
jne
andb
inc
sbb
sub
ljmp
push
js
sbb
or
push
enter
mov
movsb
push
or
mov
add
das
sub
sahf
inc
and
cmpsl
mov
movsb
sub
mov
fisubl
push
mov
and
mov
cmp
imul
lret
mov
sarl
mov
loop
sbb
pop
lods
into
and
cmc
push
loope
xor
movsb
daa
outsl
add
jnp
xor
xor
rclb
daa
cmp
imul
mov
mov
adcl
outsl
xor
adc
or
add
cmp
ss
cmp
test
pushf
imul
jl
xchg
mov
outsb
sbb
imul
dec
sub
icebp
stos
in
push
jmp
sti
mov
repz
aad
mov
sahf
dec
les
inc
or
pop
mov
pop
pushf
cmp
push
int
xchg
pop
push
rorb
adc
cmp
pop
jmp
in
fs
inc
fidivl
fisttpll
aas
sub
ljmp
in
dec
je
scas
add
push
or
divb
jg
jle
dec
cwtl
mov
fbstp
mov
and
push
sti
and
pusha
or
mov
xchg
or
loopne
lock
add
jae
mov
push
je
rcrl
sub
add
push
mov
pop
pop
sbb
lock
icebp
aam
jo
lods
or
lret
in
cli
mov
dec
mov
and
rcr
rclb
jo
add
mov
mov
push
add
sar
push
inc
sbb
ljmp
lahf
lods
fldcw
mov
inc
es
and
push
or
add
or
roll
outsl
mov
roll
inc
push
cmp
mov
sbb
outsb
shll
push
cmpsb
pop
fisubrl
fisubrs
sar
aad
pop
adc
std
push
sbb
aad
mov
mov
jp
inc
mov
arpl
cmpsl
pop
inc
rorb
loope
lea
mov
xlat
or
xchg
pop
fwait
or
xchg
xchg
or
cmp
out
xchg
out
outsl
jbe
bound
push
jns
pop
leave
in
stos
aas
xchg
dec
dec
cmc
out
jnp
xor
xchg
dec
addr16
pusha
jp
mov
jns
push
sub
insl
jle
adc
in
out
addr16
das
sbb
adc
xchg
insl
pushl
xchg
mov
and
xchg
lret
std
or
mov
mov
xor
sarb
mov
mov
adc
cmp
ret
int
outsl
lds
jae
hlt
mov
fiaddl
mov
test
into
inc
inc
mov
in
xchg
lods
daa
jg
and
cwtl
ficomps
jle
shr
outsb
mov
out
add
hlt
in
push
test
int
jbe
sbb
jge
mov
mov
jno
fs
push
popl
and
or
jge
push
sub
repz
jo
jmp
scas
xchg
and
jl
push
inc
push
movsb
fwait
clc
cmp
aam
cmpsb
ret
in
into
testl
pop
fdivrs
mov
push
jno
addr16
inc
lods
dec
popf
shrb
mov
movsl
sar
dec
and
add
push
inc
outsl
push
jmp
aaa
push
sahf
mov
clc
fs
or
and
pop
push
mov
push
sbb
loope
add
outsb
cmp
out
add
adc
cltd
sub
fildl
pop
lea
add
xor
fs
push
jnp
push
int
push
fldcw
inc
adc
dec
lcall
xor
scas
sti
lcall
jb
test
popf
inc
adcb
jg
rorb
jb
xchg
lea
cmp
and
std
testl
rol
push
in
and
dec
sbb
sbb
add
inc
divl
sbb
ds
ret
cmp
fs
sbb
add
jb
lcall
cli
mov
mov
xchg
sub
cmp
cld
push
or
push
cmp
pop
inc
enter
xor
cld
cmp
pop
jg
rcll
loop
imul
mov
sbb
movsb
xor
sub
dec
in
mov
scas
sti
push
lret
stos
in
aad
leave
or
and
les
inc
sbb
les
jns
pop
inc
adc
inc
pop
leave
movl
push
out
adc
dec
pushf
jp
leave
jmp
mov
pop
ljmp
inc
clc
aam
aas
lret
xor
jb
sbb
xor
dec
je
jcxz
loopne
divb
repz
mov
ficoms
mov
loopne
dec
aas
les
mov
mov
mov
das
ja
lods
mov
jns
repz
rorl
jmp
and
cmp
pop
mov
stos
or
pusha
lret
push
imul
push
xchg
sbb
daa
lods
jecxz
stos
sbb
orl
push
std
xor
inc
ljmp
jo
sub
inc
jmp
add
adc
bound
ficoms
test
popa
add
cltd
clc
sti
or
mov
icebp
ret
xchg
dec
cmpsl
dec
cwtl
test
mov
les
adc
ljmp
add
sub
fcomps
jae
xchg
add
fbstp
inc
call
jns
or
scas
inc
xor
inc
int3
mov
cmpsb
jbe
mov
add
cmp
loop
dec
xchg
addl
or
iret
jp
cmp
dec
dec
ja
cmpsb
jne
pop
xchg
mov
fstl
dec
mov
bound
add
in
xchg
popf
decl
inc
fwait
inc
sub
sbb
or
mov
aam
mov
adc
push
in
mov
pop
fisttps
jns
inc
shlb
xchg
push
sbb
xorl
push
leave
ret
sub
push
loopne
sub
jno
stos
insb
aas
loopne
jnp
test
scas
pop
sbb
pop
leave
ror
shr
mov
pop
cmpsb
and
pusha
jmp
mov
inc
frstor
or
push
xor
mov
ficompl
hlt
xchg
add
stc
sbb
stc
mov
inc
leave
fidivrs
aam
lds
rcrb
lret
inc
mov
inc
hlt
aaa
pop
shll
outsb
jbe
or
sub
shrl
add
mov
test
mov
sbb
pop
daa
cld
stc
push
adc
dec
jo
inc
pop
scas
pop
mov
adc
daa
cmp
adc
cmpsb
push
xchg
push
clc
cmpsb
inc
stos
xor
mov
push
enter
daa
push
xchg
sub
jno
cmp
jl
xabort
or
push
fcoms
fldenv
xchg
push
or
adc
pop
test
inc
js
cmp
daa
pop
mov
cli
idivb
xlat
mov
nop
sub
push
and
loope
je
sub
iret
cmc
cmp
jecxz
adc
je
mov
or
sbb
xchg
xchg
test
adc
das
push
jle
mov
fiaddl
sub
loop
lcall
pop
ds
sub
jae
sahf
inc
adc
test
aas
mov
loop
icebp
mov
mov
pop
mov
sahf
dec
and
aam
ss
int3
nop
cmp
fildll
jnp
adc
roll
rorl
mov
popf
cmc
pushf
push
sbb
js
les
push
and
push
jl
stc
loop
mov
and
data16
xchg
lods
xchg
out
out
mov
xor
sub
mov
push
gs
add
loopne
push
leave
pop
sahf
push
and
sub
loope
orb
adc
dec
add
push
rclb
cmp
or
xlat
jg
loop
ja
leave
mov
hlt
sbb
cs
rcll
add
inc
xor
add
rorl
les
xor
pop
pusha
out
aam
add
mov
mov
adc
nop
jne
jge
xchg
pop
lea
addb
add
push
dec
jb
in
inc
dec
cmpsl
stos
fdivs
cmpsl
jecxz
clc
mov
clc
jno
std
int3
icebp
cwtl
rolb
lods
addb
sbb
mov
mov
test
mov
pusha
push
lock
mov
clc
mov
xor
insb
adc
cmp
es
mov
dec
xor
out
cmpsl
sbb
fstpt
icebp
xor
cld
add
dec
lret
ret
lea
and
fisubs
pop
inc
fldenv
jle
movaps
rcl
push
cmp
dec
clc
int
sbb
scas
adc
ljmp
enter
lret
push
out
lds
jl
bound
inc
add
fcompl
test
shlb
jg
jne
push
sub
push
xchg
insb
ret
sbb
arpl
in
dec
pop
xor
xchg
push
aas
repz
cli
adc
jne
xor
mov
xor
mov
sbb
mov
mov
es
mov
xchg
mov
xchg
inc
dec
push
or
loope
fwait
push
lock
pop
cmpsl
arpl
pop
pushf
mov
inc
sbb
sub
nop
push
jns
dec
mov
out
fs
xchg
in
hlt
inc
out
loop
sub
adc
cwtl
addr16
xlat
jp
pop
popa
mov
ret
pushf
mov
jg
xchg
dec
nop
in
mov
fildll
fsts
jmp
and
inc
push
sbb
popf
push
cmp
in
push
pop
mov
stos
xor
in
stos
int3
xchg
pcmpgtw
loope
pop
adc
push
insb
iret
xor
in
frstor
out
inc
test
enter
stos
inc
loopne
push
or
jp
xor
ficoml
movsl
mov
sbb
pop
pop
imul
push
stos
insb
lds
gs
shlb
jmp
repnz
test
push
cmpb
jbe
jae
jge
repz
sbb
popf
or
jmp
sbb
lods
push
rep
shll
mov
scas
inc
je
and
mov
movsb
mov
jo
loopne
sti
cmpsb
enter
pushf
jge
enter
daa
sbb
shlb
xor
xor
or
sti
imul
jp
and
popf
push
call
notl
xor
push
inc
pop
mov
and
js
sbb
jnp
in
fimuls
sub
mov
cmp
outsb
test
jge
dec
cmp
sbbb
sbb
cmp
fbstp
jb
jle
cmpl
cmp
add
jno
push
adc
aam
adc
push
sahf
out
stos
test
ss
jg
sub
das
mov
pop
mov
adc
and
pop
xchg
mov
cmp
lcall
lret
lret
pop
or
cli
pop
adc
into
lret
arpl
xor
ret
popf
push
loop
icebp
popf
stc
cltd
repnz
fs
mov
or
cwtl
lods
jbe
stc
mov
push
add
sbb
xorl
or
cmp
dec
jae
mov
jle
mov
iret
nop
loopne
subb
mov
out
imul
xchg
mov
dec
imul
sti
es
sbb
sbb
xlat
mov
xor
in
pop
repnz
sti
scas
fucomp
jo,pn
mov
add
sbb
loope
jge
inc
or
les
xor
popa
lock
cmp
mov
aaa
and
pop
imul
pushf
rcrb
jmp
nop
pop
pop
xor
enter
sbb
aas
or
cld
jb
repz
dec
push
add
dec
jb
test
cmp
and
jae
add
jmp
orl
sbbl
shrb
in
test
mov
mov
out
lock
xor
das
xor
lahf
sbb
testl
out
insl
nop
dec
decl
xchg
sbb
cmp
pop
call
sub
jbe
mov
fs
mov
or
rclb
ret
sub
rcl
sbb
sub
and
mov
xchg
out
dec
imul
es
sub
mov
inc
mov
sub
xchg
negb
jge
cltd
lods
xlat
add
in
cltd
push
jge
nop
in
jbe
pop
iret
lahf
xchg
lock
jbe
xor
js
test
cmp
pop
pop
fldt
bound
mov
cli
push
add
cmpsb
shll
mov
add
sbb
and
sub
mov
jnp
mov
js
pop
ja
scas
xchg
dec
jge
int3
inc
in
js
jo
mov
dec
cmp
mov
mov
les
or
scas
bound
mov
in
aas
aaa
xchg
cmp
out
sahf
pop
sub
push
inc
in
jl
scas
jp
pop
jmp
mov
out
cmpsb
stos
jle
pop
jecxz
add
add
xchg
out
pop
jmp
in
push
popl
pop
popf
jp
fwait
mov
pop
mov
stos
mov
xor
jg
pop
pop
loop
and
repz
sub
sbb
nop
pop
sub
int
ret
pop
adc
xchg
pushf
jae
mov
jecxz
xchg
or
cmc
dec
jg
les
fcmovb
lcall
es
push
in
adc
lds
push
xchg
call
or
int
andb
xor
pop
dec
mov
out
sbb
movsb
aaa
scas
fsubl
or
pop
test
cwtl
mov
jo
imul
mov
cmp
inc
movsb
cmp
dec
push
das
addr16
cmpsb
dec
addr16
adcl
daa
sbb
adc
and
aam
inc
push
mov
dec
ljmp
movsl
out
push
and
cmp
add
push
mov
jae
push
call
mov
ds
lods
idivl
movsb
je
js
testl
loope
mov
xchg
cmp
pop
shrl
xchg
xchg
adc
sub
vprotq
mov
add
xor
cmp
test
int
int
mov
stos
pop
test
lcall
push
fdivl
cmc
test
mov
push
test
daa
loopne
and
daa
mov
lret
pop
mov
inc
divb
test
into
inc
mov
push
xor
or
shrl
add
fs
into
scas
roll
int3
xchg
xor
dec
jns
jl
mov
stc
push
xor
xchg
adc
imul
std
lods
pop
sub
mov
fwait
pop
cli
dec
xorl
out
scas
aaa
or
mov
andb
into
loopne
ret
fdivrl
or
imul
test
fiaddl
xchg
mov
add
cmp
std
sub
pop
mov
in
lret
sti
pop
lea
aad
push
dec
nop
or
and
push
cmp
das
pop
repz
js
fs
orl
cmpl
pop
mov
pushf
jnp
inc
jmp
movsb
ficompl
cmp
dec
loop
aas
test
cwtl
jb
das
outsb
dec
xchg
cli
jb
jae
ja
xchg
hlt
jmp
jle
push
std
sbb
cwtl
movsb
xchg
mov
bnd
xchg
mov
xorl
adc
mov
clc
mov
dec
pop
lock
shrl
pop
insb
mov
sahf
scas
jae
and
rcl
in
es
pop
cmc
dec
sub
lds
mov
cs
pop
jp
lret
mov
idivb
mov
test
add
sub
aam
and
ret
pop
mov
fnsave
pop
es
sub
test
inc
lods
test
mov
out
mov
inc
xchg
cmp
cli
push
psubb
push
add
cltd
popf
lock
and
xchg
xchg
lods
test
lock
xchg
pop
loopne
sub
and
xchg
push
pop
push
inc
add
xor
pop
ljmp
xchg
xor
mov
or
sbb
mov
outsl
stos
mov
pop
xor
mov
inc
jnp
push
or
addl
and
xchg
mov
push
outsl
out
jmp
cmpsb
jecxz
jns
aam
in
outsb
insb
xchg
mov
add
or
xor
jp
push
adc
xchg
test
mov
pop
jle
pop
jns
or
arpl
lret
imul
xchg
mov
test
xchg
mov
pop
andl
fcoms
mov
or
ljmp
pusha
mov
mov
pop
insb
andb
jnp
outsb
jle
test
loopne
out
test
iret
out
sbb
pop
dec
adc
jae
repz
inc
out
push
or
jo
ret
sti
xchg
fidivl
mov
sbb
lcall
and
lahf
lds
imul
cmp
cmp
rcl
push
hlt
sbb
arpl
ds
mov
mov
or
insl
test
mov
xor
push
mov
stos
push
mov
or
ror
dec
scas
add
push
cmp
bound
push
fstl
jne
cmpsb
into
jae
in
push
daa
pop
adc
sbb
xchg
push
sbb
sbb
lret
jl
push
pop
dec
pop
fnstcw
inc
hlt
ljmp
enter
mov
xor
lret
inc
and
repz
lret
pop
loope
loope
out
dec
xchg
je
shll
loope
cltd
and
out
or
outsb
mov
test
rolb
mov
addb
push
add
inc
dec
xor
test
push
xchg
int
popa
int3
sub
pop
add
add
lcall
add
pop
shrb
out
fistpl
sub
pop
mov
mov
cwtl
fnstenv
dec
jns
mov
hlt
stos
and
inc
cld
adc
push
fcoms
push
out
idivl
mov
rol
pop
mov
int
sbb
fisttps
aaa
in
icebp
rcl
mov
push
outsl
pop
cmpsb
mov
stc
pop
sbb
fs
adc
jno
lods
inc
push
daa
mov
imul
cmp
jmp
and
jmp
xchg
add
push
mov
adc
cmp
icebp
add
lds
xor
or
cmp
or
rcrb
xchg
in
xor
add
cs
lods
aad
neg
nop
pop
mov
dec
lahf
cli
out
push
fldenv
mov
ret
sub
arpl
movsl
insb
xchg
lea
add
sub
sbb
rcr
push
adc
outsl
jmp
jl
pop
jbe
adc
pop
jle
fs
push
jb
sahf
in
dec
or
pop
je
pop
data16
fmuls
shrl
cwtl
pop
push
add
xchg
jg
dec
stos
icebp
dec
jmp
in
dec
cmp
push
mov
pop
or
jg
fisubrl
repz
mov
push
mov
shll
test
insl
pop
inc
and
roll
pop
sbb
pop
adc
lret
adc
push
and
scas
ja
pop
mov
aaa
ret
sub
mov
scas
cld
add
in
daa
enter
stc
fstp
cmpsb
xor
jle
xchg
insb
inc
inc
ljmp
fsubrl
or
out
out
cmc
push
xchg
test
test
xorps
out
add
xor
test
mov
and
and
insb
sub
xchg
ficomps
ficomps
shr
mov
stos
stos
out
pop
push
incl
add
dec
sub
push
push
mov
pop
xor
or
icebp
cmp
popa
sbb
mov
stc
mov
out
sbb
mov
arpl
adc
rsqrtps
add
cmp
mov
pop
out
lret
bound
xor
or
in
lock
fldcw
push
jno
sub
add
cmp
bound
pushf
clc
adc
cs
sarl
push
and
pusha
cmp
test
jg
mov
sti
xchg
and
xorl
pop
popf
enter
lods
dec
addr16
fmul
mov
and
jge
insb
jmp
push
jnp
inc
sub
mov
inc
adc
jo
iret
dec
fsubrl
pop
cmp
inc
leave
pushf
jmp
lret
popf
push
inc
jmp
sub
inc
ret
fisubrl
mov
jb
jl
sbb
xchg
sbb
ljmp
jno
jmp
push
popf
xlat
repnz
sti
hlt
arpl
mov
les
jbe
pop
stc
jge
ja
sbb
cli
test
add
sub
add
pushf
rorl
pushf
pop
add
sub
rolb
pop
or
movsb
push
data16
cmpsb
push
hlt
inc
in
push
je
enter
daa
sbb
cmp
notl
jl
das
aaa
dec
enter
fs
std
imul
push
lret
test
xchg
mov
inc
mov
or
xor
pop
bnd
js
push
out
inc
dec
sbb
sub
dec
mov
jno
push
outsb
and
rclb
loopne
push
popl
add
sbb
jo
sub
repnz
bound
jbe
push
sub
rcl
lcall
cltd
faddl
xchg
lock
xchg
rcrb
roll
pop
push
fidivl
lds
mov
fs
ss
lea
fistps
xor
lret
or
adc
lret
rcrl
mov
pop
daa
into
je
dec
cmc
mov
xchg
outsl
cmp
aad
mov
cmpsb
cmpsl
fs
mov
adc
out
xchg
into
lods
lods
sub
xchg
mov
mov
ds
out
cmp
notb
adcb
pop
mov
pop
sbb
imul
mov
adc
mov
add
mov
xlat
sbb
lret
das
ret
ljmp
pop
xchg
in
mov
cmp
cs
in
arpl
fsincos
xor
aaa
pop
jp
mov
push
fstps
loop
repz
jnp
push
jb
jo
pop
call
cmp
push
adc
adc
jmp
sbb
inc
add
and
movsb
test
jb
inc
popf
dec
sbb
je
fucomp
jecxz
add
add
pop
std
push
scas
dec
mov
xchg
lds
jecxz
insb
dec
sbb
fstpt
cld
mov
iret
lock
cmc
das
shlb
pusha
mov
cwtl
xchg
loopne
je
xlat
es
out
inc
sbb
dec
and
cmpsl
sbb
std
icebp
fdivp
mov
lret
jg
fdivrs
jns
pop
mov
ret
ror
subl
jp
outsb
ret
jnp
pop
push
xchg
jmp
add
pusha
mov
ljmp
cwtl
lods
pop
stos
fs
push
test
dec
push
into
xchg
rorl
mov
dec
add
sbb
or
xchg
xchg
mov
xchg
bound
roll
lods
pop
fsubrl
scas
push
mov
movsb
add
idiv
lods
push
adc
lods
loop
or
sti
cmpsb
mov
cmc
addr16
pop
test
cmp
or
call
xchg
fwait
mov
dec
out
pop
jne
sub
out
test
push
mov
lcall
xchg
sub
out
mov
or
sub
jp
push
adc
pop
mov
jle
cmp
in
or
fildll
cld
aas
jmp
dec
movsb
faddl
mov
sbb
sbb
stc
and
xlat
pop
insb
push
and
adc
shrb
std
and
iret
lods
mov
ljmp
std
lds
mov
sbb
or
data16
testb
sbb
fnsave
fs
sub
imul
mov
inc
jecxz
rorb
repnz
out
mov
jle
arpl
mov
es
cmp
push
arpl
js
nop
aaa
jmp
lea
jae
mov
scas
mov
pop
adc
pop
push
jg
lods
xor
mov
mov
cmp
inc
movsb
fstl
call
pop
cmpsb
aam
dec
in
cmp
sbb
daa
sbb
pop
cmp
cld
jl
dec
aaa
lret
aaa
xchg
cld
sub
cwtl
and
shll
aad
mov
call
jmp
inc
push
testb
sbb
dec
js
mov
push
aam
loope
mov
sarb
xor
cmpl
sarb
adc
subb
faddl
pop
lret
popa
inc
push
lea
in
sub
sbb
insl
je
fdivl
cmc
sbbl
repz
mov
mov
mov
stos
mov
daa
out
and
dec
ss
fistpll
cmp
xchg
idivl
call
mov
sbb
and
into
push
fldt
xor
pop
jle
sbb
inc
loop
rcl
stc
jne
jae
loopne
push
adc
mulb
mov
jl
jl
ret
xchg
in
call
js
cmp
xlat
or
das
dec
jo
push
jecxz
loopne
cld
hlt
pop
cmp
adc
adc
movsl
add
jb
sbb
push
jmp
xlat
mov
outsl
jb
in
or
cs
xchg
and
nop
adc
dec
pop
xchg
push
fcmovnb
fldln2
or
add
enter
inc
xlat
rcll
movl
add
adc
mov
js
pop
mov
ret
lods
inc
lcall
jb
sbb
je
mov
jecxz
insb
sbb
inc
push
xchg
std
psubq
cwtl
aad
sub
insb
inc
dec
cmpl
sbb
loope
mov
cmp
xor
int3
aad
mov
lret
and
rcl
ret
inc
push
es
outsb
hlt
insl
sub
fimull
dec
cltd
cmpsl
sbb
push
ds
mov
add
flds
lret
out
mov
cmp
in
jl
loope
pop
rcrb
adc
inc
scas
mov
or
mov
pop
in
mov
ljmp
popa
adc
cmc
mov
mov
dec
xchg
adc
inc
push
test
mov
mov
test
jb
mov
push
dec
adc
jecxz
bound
xchg
push
rcrl
jp
stos
les
push
inc
adc
add
xchg
lods
xor
pop
or
jmp
test
fs
cmpsl
mov
hlt
idivl
fs
or
sbb
dec
dec
fstpl
or
cmpsl
mov
push
in
daa
dec
leave
jl
jne
sbb
mov
cmpl
bound
adc
push
in
icebp
push
xchg
ja
inc
out
adc
sub
cli
popf
sbb
jp
arpl
or
orl
and
xor
insb
mov
loopne
xor
jmpw
lret
mov
cmc
push
jmp
hlt
idivl
pop
adc
andl
push
cmpsl
insb
rcl
jnp
cmp
lods
test
push
inc
mov
pop
iret
or
aas
ret
lds
lds
inc
fbstp
es
out
xor
mov
ljmp
call
adcb
scas
pop
imul
into
leave
shlb
dec
repnz
sbb
hlt
stc
andb
pushf
loope
imul
sbbb
dec
adc
stos
daa
sbb
data16
add
cmp
mov
sbbl
in
cmc
xor
jecxz
mov
mov
cs
movsb
push
cmp
cmpsb
push
push
imul
sbb
mov
cmp
mov
jno
sub
pop
dec
cmpsb
movsl
cmp
stos
jmpw
xor
add
pop
push
subb
out
rolb
cmc
mov
sbb
js
sub
push
adc
loope
add
cld
sbbl
shll
out
xlat
adc
xchg
mov
sbb
fisubrs
add
test
jge
or
nop
test
int
test
sub
pop
daa
lcall
xor
pop
xor
sub
dec
test
or
orb
mov
mov
mov
mov
ds
and
fisubl
mov
inc
xor
lret
lret
in
loopne
xchg
mov
sbb
adc
cmc
inc
test
outsl
clc
sbb
sbb
sub
outsb
imul
adc
in
lods
stc
push
dec
mov
sub
imul
mov
sbb
jo
ja
cmp
or
push
push
push
mov
mov
pop
pop
xor
imul
mov
xchg
lret
sbb
inc
cmp
xlat
stc
mov
shll
mov
sti
sbb
sbb
pop
ss
nop
in
cmp
mov
sahf
and
in
cmp
shrb
jl
jo
inc
lea
xchg
jge
sahf
stos
pop
jg
and
pop
adcb
pop
daa
pushf
daa
ret
pop
pushf
lods
pop
pop
xlat
adc
jns
aas
and
divb
and
dec
jno
shll
xchg
jecxz
sbb
testb
dec
cwtl
nop
push
inc
mov
inc
fimuls
adc
dec
lods
jb
fcmovnu
pop
pop
mov
and
nop
mov
or
dec
clc
jg
jp
mov
scas
nop
out
adc
aad
sbb
dec
dec
push
out
dec
cmpsl
pop
jg
mov
mov
cld
add
pop
lret
pop
jl
mov
xchg
mov
shlb
adc
sub
mov
ret
cltd
add
and
push
push
jo
das
mov
xchg
sub
imul
xlat
adc
xchg
lods
xor
mov
pop
in
add
pop
xor
in
pcmpeqb
fs
ret
jns
pop
test
sub
xchg
sbb
sbb
mull
gs
xor
les
call
dec
cli
add
insb
xor
rorb
outsl
xor
sub
mov
jnp
add
pop
in
fnstenv
aad
cmp
roll
add
mov
fwait
test
ret
mov
jne
insl
push
mov
bound
bound
cli
xchg
lock
jo
xchg
dec
stos
out
adc
sub
cmc
movsl
pop
addr16
jg
xor
push
jnp
scas
test
sbb
int
fs
pop
mov
xor
inc
enter
daa
roll
lods
mov
mov
cltd
xor
and
clc
xchg
insb
sub
push
jnp
pop
loop
adc
push
mov
ror
cmp
pop
daa
lahf
repnz
ljmp
inc
repnz
repnz
push
aas
xchg
rcr
inc
repz
sbb
or
imul
das
lds
jns
ret
mov
xchg
leave
lods
push
hlt
inc
xlat
insl
arpl
push
jbe
push
les
lcall
out
push
test
or
inc
add
mov
int3
mov
fistpll
inc
mov
xlat
jo
out
mov
jg
mov
cmp
roll
mov
sub
xchg
enter
daa
pop
scas
int
and
test
aas
dec
adc
je
movsl
or
and
into
push
lahf
xadd
test
testb
jl
jns
addr16
js
out
pop
dec
mov
push
pop
pushf
loope
outsb
sub
pop
or
jle
mov
adc
jno
mov
rcrl
sbb
ret
shll
dec
sub
push
xchg
outsl
push
int
scas
jge
sbb
push
pop
ljmp
ror
dec
push
sbb
adc
pop
inc
adc
stos
pop
into
sahf
mov
popa
cwtl
subb
addr16
lahf
push
mov
mov
push
mov
test
stc
ss
dec
cmp
cld
mov
or
shll
or
jl
adc
into
sbb
jl
xor
sbb
loop
testl
adc
sub
sbb
jns
jb
sub
test
cli
dec
or
dec
or
or
mov
jne
jmp
lds
loopne
xor
pop
ja
stc
adc
clc
mov
inc
leave
sbb
add
iret
js
shrl
cmp
xlat
cmp
sub
addr16
loope
add
leave
ja
cs
aad
arpl
enter
sbb
inc
mov
cmc
flds
je
out
ljmp
repz
movl
call
mov
sub
adc
push
pushf
rolb
pop
add
ljmp
fnstsw
aas
ret
or
jb
arpl
ljmp
test
dec
std
pop
enter
xor
mov
fs
mov
and
dec
xchg
fstpt
mov
jp
mov
jl
lock
xor
outsl
sub
mov
xor
and
mov
shll
dec
es
daa
enter
stos
dec
adc
ljmp
xor
cld
das
jmp
loop
pop
pop
cmp
sbb
mov
inc
xchg
sub
jno
aam
scas
stos
ret
sub
fnstsw
mov
xchg
push
movsb
inc
popa
inc
xchg
or
inc
and
jp
gs
mov
adc
psrlq
add
inc
imul
xor
imul
pop
fcomps
sbb
add
xchg
test
mov
test
cmp
mov
test
mov
xor
jb
xor
mov
fidivs
daa
xor
ficoml
addr16
das
icebp
movsb
inc
outsb
add
fwait
mov
int
in
jne
and
inc
cmpsl
inc
bound
push
mov
xchg
adc
xchg
sub
lock
packuswb
push
jp
popf
add
fucompp
sbb
xchg
and
jmp
filds
loopne
xchg
fdivrs
xchg
scas
out
sub
iret
push
outsl
das
ret
popf
lods
pop
mov
fdivs
stos
push
cld
and
mov
push
jnp
inc
sub
shlb
outsb
adc
pop
pop
iret
lret
ret
push
pop
pop
sbb
inc
cmc
sbb
pop
in
jne
cmc
ret
sub
xlat
cmp
inc
mov
and
sbb
aaa
imull
and
push
inc
or
fcomp
and
fstpl
lods
mov
fcmovbe
aaa
leave
and
hlt
popl
jbe
out
jge
dec
push
sbb
gs
or
add
int3
mov
pop
lahf
jge
push
sub
xor
cltd
call
sti
and
mov
movsb
jle
out
push
or
cmpsb
in
in
enter
daa
push
das
das
cmp
xchg
jno
repz
and
cmpsb
lea
lock
movsl
adc
sub
imul
sahf
push
lods
sbb
or
inc
lock
aas
stos
minps
cmp
push
scas
imul
rorb
cmpb
sub
outsb
lods
jle
adc
dec
loope
popl
add
and
and
dec
aad
add
jne
xor
test
xchg
into
es
mov
xor
jle
pop
lcall
lcall
sahf
pop
push
je
inc
shrb
push
mov
and
je
inc
imul
ss
mov
cmp
mov
call
lret
pop
sarl
mov
lret
ret
out
add
cmc
aam
insl
xor
sub
subl
lcall
adc
int3
fsubrl
insl
out
out
sub
sbb
push
cmp
jb
or
xor
mov
loopne
ljmp
ret
imul
addr16
add
cld
xchg
push
lods
mov
mov
sbb
ja
jge
mov
dec
call
mov
mov
cmc
clc
pop
nop
mov
clc
sub
sahf
xchg
fnstcw
inc
cli
push
mov
outsb
mov
insb
lea
cmp
xchg
mov
jge
out
push
jnp
adc
jns
jge
jecxz
cmc
das
cmp
ficoms
sbb
sti
inc
jmp
sarb
push
pop
jb
xlat
adc
je
ss
in
dec
mov
adc
std
add
out
push
fsubp
mov
pop
inc
mov
xor
sbbb
xchg
xchg
mov
pop
shll
inc
lods
xor
dec
pop
cmp
call
filds
mov
movsb
es
xor
insl
loope
jne
or
add
out
sbb
icebp
cmp
jb
pop
jnp
lret
cmp
mov
xchg
in
mov
sarb
rclb
mov
sub
xchg
jnp
cmpsb
cs
mov
mov
mov
sbb
clc
movsl
pop
adcl
pop
mov
lods
pop
adc
mov
lahf
xchg
out
fwait
push
cmp
fiaddl
out
clc
xchg
cltd
out
xor
mov
xchg
cmp
test
cmc
inc
xchg
pop
xchg
rcrl
in
stos
xchg
loope
push
cs
add
shl
fcos
sub
xor
stos
popf
or
data16
test
mov
add
mov
xchg
ja
xor
dec
and
js
add
inc
push
fwait
loop
cmp
push
dec
jne
sbb
and
mov
sbb
inc
imul
out
outsb
imul
jno
addr16
int
fwait
enter
push
inc
mov
testl
insl
pusha
cmp
out
mov
jmp
jns
jp
jnp
jnp
xor
popf
mov
ret
inc
inc
push
pop
out
stos
enter
inc
test
insb
add
pusha
jnp
in
sub
dec
and
jmp
ror
sub
ffreep
push
push
arpl
cmp
cmp
ljmp
shl
push
cmp
add
adc
mov
imul
fdivp
mov
cmp
clc
fnsave
mov
sub
or
aas
arpl
es
in
xchg
jge
js
sbb
aaa
out
or
jecxz
add
outsb
xor
ja
xlat
pop
into
push
or
push
xor
hlt
mulb
and
dec
mov
pop
xchg
cmpsb
loopne
and
enter
daa
adc
lahf
jno
or
jl
shll
repz
sarl
insl
sbb
add
popa
lahf
dec
pop
inc
push
adcb
xchg
movl
jg
jae
add
pop
mov
cltd
js
pop
push
pop
push
sub
loope
mov
sub
mov
faddl
sbb
shlb
xchg
test
popa
pop
addb
lahf
jae
arpl
xor
add
push
cltd
mov
std
sub
sbb
pop
std
adc
ss
adc
xchg
xor
sub
pushf
mov
pop
lret
jns
dec
mov
mov
jno
lea
cltd
inc
mov
cmp
fdivs
dec
divl
js
rcll
mov
lahf
sbb
popf
into
jecxz
xchg
cmc
fwait
mov
xor
mov
pushf
stc
push
clc
fs
ja
mov
and
lods
scas
xchg
sahf
mov
out
adc
cli
mov
or
cld
daa
int3
cmp
movsb
adc
mov
aaa
fchs
or
dec
adc
out
adc
movsb
or
xchg
adc
mov
pop
int
cmp
lahf
adc
mov
in
add
mov
mov
leave
sti
daa
lret
popa
cs
fcmovnbe
cmp
inc
nop
jle
dec
dec
fnop
inc
inc
fdivrl
arpl
mov
add
add
ret
pop
jns
std
lea
in
call
cld
and
pop
adc
mov
pop
dec
sarb
mov
push
push
jb
jle
dec
mov
mov
notb
lods
std
stos
and
iret
mov
sub
mov
insl
sub
adc
mov
in
lock
cwtl
push
mov
lahf
xchg
jecxz
dec
test
sar
lret
shll
mov
xchg
adc
pop
dec
pop
cmpsl
adc
fdivrl
adc
cld
test
lret
stos
dec
pop
mov
pushf
test
mov
shr
incb
sub
add
inc
inc
jne
fs
jns
clc
loopne
popa
xchg
out
cmp
mov
idivl
mov
inc
jbe
xchg
rclb
test
add
loop
cltd
push
inc
adc
call
in
xchg
sbb
dec
cmpsl
roll
adc
shl
jge
pop
xor
out
push
rcll
rolb
jbe
dec
ret
divl
dec
pusha
adc
aam
add
in
mov
inc
lods
cmpb
ret
push
jl
dec
adc
jo
or
out
adc
cmc
dec
push
sbb
jne
mov
sbb
add
push
lret
insb
daa
jns
aad
in
jecxz
xchg
mov
ret
lret
and
push
or
xor
sarl
cmpsl
int3
mov
xchg
mov
data16
jle
adc
xchg
test
xchg
jle
or
sub
lret
arpl
orl
out
cmc
rcrb
popf
mov
loop
setge
stos
cmp
adc
out
jg
loopne
cmp
add
adc
adc
ret
loop
mov
cmp
add
inc
or
xchg
sub
inc
sti
and
daa
push
lods
push
mov
cwtl
fs
push
cld
sbb
push
and
add
cltd
and
sub
mov
andb
hlt
and
jl
jbe
data16
jg
test
pop
repnz
mov
add
mov
cmp
out
jg
xor
dec
sbb
scas
sbb
and
shr
in
sti
xor
xchg
push
gs
cmpsl
dec
andl
insl
mov
add
leave
daa
adc
scas
cmp
dec
mov
dec
bound
and
lahf
in
lahf
insb
sub
sub
mov
push
push
mov
inc
push
add
test
js
cltd
inc
pop
push
icebp
add
sbb
loope
xchg
loope
cmp
insl
cmp
add
pop
mov
orb
les
mov
aad
xor
call
iret
sub
in
lcall
push
fmull
gs
sub
cltd
sahf
mov
mov
dec
jg
push
fidivl
fadds
and
inc
cmp
sub
xchg
fcmovne
mov
xadd
xorb
jns
sbb
scas
sbb
mov
shlb
push
push
inc
outsl
je
call
stc
or
fs
mov
push
data16
sbbl
ja
arpl
out
jnp
cli
out
adc
cmp
test
mov
fiadds
add
movsl
xchg
jmp
aam
cmp
imul
ss
push
setbe
shll
inc
push
fwait
cmp
mov
sub
shll
and
psubq
lcall
orl
pop
jmp
dec
cmp
xchg
and
les
adc
or
or
jl
jbe
fidivl
call
jnp
sti
pop
mov
dec
adc
icebp
mov
rcr
pop
jmp
cwtl
inc
sub
aad
mov
pop
pop
dec
dec
insl
je
ficoml
or
idiv
push
stos
mov
mov
fsubrs
sub
dec
pop
push
out
xchg
loop
mov
inc
mov
cld
icebp
inc
das
or
dec
mov
push
sbb
jb
dec
fadd
es
mov
push
cmpsl
adc
insl
icebp
call
sbb
sbb
mov
and
in
pop
sbb
jl
imul
xorb
cmp
pop
ret
aad
lods
push
daa
inc
adc
clc
sbb
xchg
and
inc
enter
mov
std
xor
xchg
jne
xchg
push
lock
add
lock
adc
xchg
cltd
push
add
test
inc
jnp
mov
push
scas
dec
adc
dec
test
in
in
xchg
fisubs
dec
jno
pop
fdivrp
mov
je
mov
or
fdivrp
sbb
dec
and
dec
push
insb
xor
jbe
mov
xchg
mov
or
mov
dec
or
inc
xor
or
and
fwait
inc
arpl
dec
cmp
call
mov
mov
out
jecxz
cmp
push
mov
in
mov
xchg
add
mov
in
fldcw
loope
mov
jp
cmp
mov
fsubrp
mov
aad
js
lock
in
xor
pusha
jae
pop
fbld
and
and
nopl
les
push
mov
out
sub
xchg
pop
push
and
in
fcoms
scas
pushf
sub
adc
pop
ss
out
jmp
pop
add
push
sub
jae
mov
inc
incb
jl
dec
std
ja
cmp
fimull
loop
xchg
shll
imul
fidivrs
dec
lds
imul
movsb
fidivrl
rcrl
fs
mov
hlt
jo
lcall
push
xor
sbb
or
mov
and
mov
int3
dec
jo
pop
sub
fwait
push
roll
adc
jo
dec
shrb
cltd
cmpl
pop
sti
movsb
push
divb
cmpsb
out
shr
mov
adc
adc
lods
cmp
imul
aam
mov
dec
shll
ds
xor
nop
and
adc
pushf
push
es
enter
mov
inc
popf
in
pop
mov
lds
mov
js
cmpsl
scas
pop
inc
push
scas
push
fstpl
subb
cmp
cwtl
outsb
aad
cmpsb
adc
enter
jnp
sbb
pop
addl
mov
mov
and
lahf
mov
in
sub
cmpsl
jne
sti
lret
pushf
jo
push
ja
fdivl
sub
sbb
outsl
mov
cmpb
inc
mov
nop
mov
sub
mov
imul
fsubr
sub
divl
loop
cmpl
mov
mov
push
into
test
ja
xor
or
push
xor
sbb
mov
sbb
data16
or
push
pop
xchg
or
repnz
cmp
addb
or
mov
mov
pop
repz
cmp
sbb
sbb
add
lret
cltd
cli
add
push
dec
push
sub
and
in
sti
test
ret
lcall
xor
pusha
dec
xchg
lea
add
dec
fstps
fdivrp
les
adc
repz
lret
jl
lea
sub
add
sahf
cmp
dec
pop
adc
push
pushf
jle
daa
jmp
lret
in
pop
mov
or
inc
lret
aas
aas
push
adc
push
xor
jecxz
mov
std
stc
adc
cwtl
aaa
push
dec
mov
pop
mov
add
nop
dec
inc
pand
cs
mov
sti
fisttpl
das
jmp
out
sub
fnstcw
gs
xchg
rcrl
or
dec
std
enter
aam
xchg
icebp
mov
sub
lret
mov
into
and
xchg
pop
fwait
shl
rorb
loopne
aam
mov
dec
push
ljmp
clc
push
cmpsb
sub
movsb
loop
popa
lahf
in
mov
ret
push
inc
dec
xchg
mov
and
cmovg
mov
daa
push
cltd
mov
test
cltd
loop
outsl
adc
xchg
mov
test
movb
stos
cli
sbb
cwtl
shll
ret
pop
push
scas
push
pop
dec
or
and
in
incl
jae
xor
add
ret
xor
pop
jmp
mov
rorl
ret
pusha
rcrb
inc
xchg
ja
xchg
add
mov
lret
or
dec
mov
dec
sbb
mov
cmc
pop
out
ret
vcvtsd2usi
icebp
addr16
jns
loop
in
aam
xchg
push
pop
inc
out
fnsave
sub
fdivrl
addr16
inc
jp
andb
adc
mov
jle
dec
je
dec
cwtl
fbld
outsb
xchg
xorb
xchg
and
mov
sbb
xchg
fisubrl
stos
subl
mov
popf
add
or
push
aam
in
stos
and
repnz
popf
and
adcl
push
out
xchg
fistl
mov
jg
ret
add
jns
inc
and
dec
jae
jl
inc
add
cmc
mov
push
mov
fisttps
sbb
aam
and
icebp
dec
xlat
in
rorb
mov
es
addr16
dec
xchg
hlt
mov
test
jbe
mov
jge
pop
nop
sbb
adc
or
stos
roll
rclb
add
cmp
cld
pop
pop
sahf
jmp
mov
cmc
xor
add
ja
and
jge
cmp
mov
stos
repnz
ljmp
mov
sub
adc
cmp
loopne
jno
cs
jl
sarb
jl
dec
movsl
sub
pop
jo
stos
fbld
push
stc
and
test
in
jg
inc
sub
dec
xor
js
dec
sbb
test
shl
stos
mov
sarl
jmp
sub
adc
mov
js
xorb
jo
sub
arpl
test
push
mov
fld
sub
insb
pop
lcall
pop
test
push
outsb
negl
imul
mov
push
sarl
pop
mov
mov
outsb
scas
push
and
loopne
ss
iret
fs
mov
xor
lret
pop
rcll
add
into
mov
jo
mov
jns
loop
addr16
jbe
mov
adc
add
lods
arpl
out
pop
inc
push
cli
dec
sub
cmp
das
pop
or
and
into
gs
push
and
pop
adc
les
fsts
push
mov
xchg
pop
cmpsl
mov
mov
mov
sub
movsl
mov
clc
rcl
sti
xor
add
mov
xchg
aad
ss
nop
btc
dec
divb
inc
adc
cmp
sbb
stos
mov
fimuls
xorb
jns
fstpl
mov
fistps
xchg
xor
inc
cmp
or
int
aas
fidivs
jb
lods
mov
cmp
shlb
outsl
jecxz
roll
negb
cmpsb
std
mov
dec
aas
mov
mov
jg
fwait
in
orl
fcomi
ja,pt
movsl
cmp
mov
insl
jg
mov
xchg
das
lret
mov
les
xor
insl
clc
shr
mov
int3
insl
jge
push
dec
clc
jecxz
cmpsl
adc
enter
or
push
or
lret
idiv
sub
mov
das
mov
mov
and
aam
jno
ret
repz
aaa
push
lods
fs
cmp
xchg
jno
mov
xor
popa
mov
sub
mov
imul
xrstor
call
cltd
ret
outsb
lret
test
inc
movsl
mov
adc
xchg
sbb
mov
sub
sar
ret
mov
xor
add
mov
pop
in
add
stos
out
jmp
mov
or
ljmp
xchg
xchg
addr16
in
mov
jp
mov
and
insb
dec
out
jo
inc
popa
movsl
out
mov
fwait
sahf
and
adc
repnz
dec
scas
out
mov
mov
jns
filds
mov
xchg
in
sub
xlat
stc
popa
addr16
lea
jge
mov
stc
push
mov
mov
or
ss
in
popa
add
add
fbld
add
lret
xchg
fiadds
ds
popf
daa
clc
mov
adc
cs
xchg
sub
and
cmp
cmp
xlat
call
out
sub
jge
push
ret
dec
pop
jno
popf
inc
sub
and
mov
or
ds
inc
inc
cmp
jne
adcl
sub
cmc
lds
mov
fs
xor
jns
mov
jbe
popa
hlt
push
sar
mov
cmpsb
jbe
mov
push
add
jecxz
or
pushl
addr16
mov
pop
mov
sbb
xchg
lock
clc
add
mov
mulb
mov
push
in
jo
inc
enter
daa
adc
cmp
jno
xlat
xor
dec
scas
push
or
lahf
int
movsl
xor
or
jo
mov
leave
mov
jo
insl
push
mov
mov
push
mov
pop
push
ret
xor
pop
ret
aam
push
andb
jmp
sbb
outsb
fwait
jns
adc
xchg
sbb
mov
inc
lret
and
pop
xor
xor
call
adc
adc
sub
lcall
sub
or
mov
inc
std
sbb
mov
lock
insl
or
icebp
jg
mov
outsl
mov
shll
aad
push
scas
rcll
pop
imul
addr16
pop
shrl
sbb
mov
cmc
mov
int
pop
inc
xchg
outsl
adc
jmp
int
stc
stc
sub
push
xor
enter
sub
mov
mov
out
shll
xor
cmp
mov
or
shrb
inc
mov
gs
lret
loopne
mov
pop
xor
xchg
loope
mov
adc
in
add
or
loop
mov
xchg
adc
mov
shrl
dec
out
push
mov
arpl
cmp
aad
mov
mov
inc
sub
icebp
les
push
cmc
repz
push
movb
dec
mov
iret
lods
xchg
adc
or
jmp
pop
inc
pop
aam
outsl
inc
mov
insb
sti
aas
jge
add
and
je
inc
push
jecxz
pop
lods
negb
outsb
std
inc
nop
sub
ret
mov
pop
dec
sbb
lods
mov
arpl
das
test
xchg
icebp
mov
jnp
push
sarl
xchg
xchg
es
xor
dec
repz
lcall
lahf
mov
insl
jns
cld
xor
dec
lret
adc
and
mov
popl
sub
lock
popf
xchg
movnti
and
frstor
clc
int3
adc
loop
ljmp
jae
lods
push
jb
mov
int3
fistpl
xchg
dec
icebp
out
push
andl
jns
cli
sbb
test
jae
or
adc
dec
dec
xchg
mov
xchg
idivb
in
xchg
push
and
lods
stos
cmp
mov
pop
push
enter
fwait
add
xchg
incl
xor
insl
jmp
mov
push
cmpsb
je
adc
pop
cmp
push
ja
ret
add
inc
clc
xchg
or
es
fwait
int
into
dec
loope
scas
jne
mov
fsubr
andb
bound
xor
or
int
out
xchg
inc
out
shrb
rorb
daa
jp
sub
mov
mov
lret
nop
int
pop
push
into
in
mov
ffreep
jo
xchg
lret
jmp
jo
sahf
addl
push
add
mov
push
out
stos
pop
pop
sbb
mov
mov
xchg
mov
push
push
jl
insb
adc
test
add
es
and
test
or
aaa
sub
inc
pop
push
xor
mov
mov
rcll
sub
fisubs
pop
dec
sarb
mov
int3
xor
fisubrl
hlt
push
arpl
adc
negb
or
enter
or
incb
mov
int3
push
aad
pop
mov
push
stos
xor
mov
or
cmp
roll
movsb
rcr
push
jecxz
add
in
push
cmp
enter
daa
adc
loopne
xchg
fs
movsb
test
sub
dec
push
or
movsl
cmp
and
sbb
lahf
call
pusha
fsubrl
add
inc
dec
inc
addr16
shrl
js
dec
cltd
pop
add
push
pop
psraw
dec
lahf
sub
jg
cmp
push
outsb
mov
add
outsb
xor
cmp
ret
adcb
sbb
test
xor
dec
xchg
push
test
mov
sub
jge
js
sub
jl
mov
sub
jl
cs
test
add
jg
test
mov
iret
test
add
imul
repnz
cmp
fcomps
out
divl
pop
lret
into
roll
mov
xorb
push
push
cmc
jle
leave
xor
mov
lock
loop
data16
stc
in
push
fs
jp
adc
fs
mov
mov
xor
mov
add
out
dec
insb
cli
mov
xor
in
iret
cmp
add
xchg
push
pop
gs
stos
popf
loopne
loop
pop
push
jecxz
adc
imul
imul
loop
inc
sbb
sbb
sub
mov
push
in
into
xor
sti
xchg
sbbl
lahf
lods
in
nop
dec
mov
sahf
inc
cmp
fld
out
les
clc
mov
jbe
das
call
ja
push
pop
subb
jb
repz
jg
shr
dec
gs
ja
sub
inc
lea
xchg
aas
sbb
ret
into
mov
movsb
inc
je
adc
mulb
movsb
sets
clc
mov
stos
and
or
ljmp
imul
mov
mov
mov
mov
mov
xor
rorl
cmc
in
insl
dec
push
or
aad
cmpsl
movntq
out
mov
inc
pop
dec
cld
pop
dec
insb
lret
aad
and
mov
mov
jbe
or
lods
aam
or
adc
push
xor
mov
cmp
std
repnz
insb
lods
mov
out
mov
das
pop
pusha
xchg
xchg
ja
push
pop
inc
fwait
add
pusha
jnp
cltd
xor
test
lcall
test
call
cltd
xchg
pop
mov
pop
mov
stos
sub
push
enter
je
mov
jecxz
imul
icebp
pop
or
xor
sub
mov
xchg
inc
icebp
mov
neg
jecxz
rcrl
xchg
inc
jl
or
shrb
cld
out
cs
aad
jne
adc
out
pop
je
bound
shl
xor
xchg
ds
jo
icebp
pop
daa
sub
int
push
outsl
lcall
lcall
mov
ret
daa
in
pop
pop
pusha
fbld
xchg
gs
popf
mov
std
ud0
rolb
les
popf
jne
test
ss
xchg
jae
stos
jp
xchg
lret
insb
test
outsb
scas
sub
ret
enter
das
in
iret
arpl
insl
ret
mov
fistpll
inc
inc
aam
jae
jno
inc
or
pop
push
aaa
mov
fistl
imul
cmpsb
xchg
imul
sahf
fmulp
mov
lds
and
mov
pop
clc
in
leave
fs
hlt
pushf
pop
in
arpl
push
push
jbe
nop
int
ret
sbb
inc
les
popa
jp
or
fiadds
xchg
stc
jge
stc
repz
call
stos
fidivs
push
icebp
insl
scas
ja
sbb
cmp
ror
push
xor
test
ds
enter
daa
and
mov
xchg
and
mov
xchg
ds
movsb
movsl
inc
mov
mov
push
jb
cwtl
test
dec
popw
inc
fnstcw
inc
xchg
sbb
js
test
pop
inc
stos
cwtl
push
repz
out
sub
clc
sbb
idivb
and
lock
adc
dec
pop
or
imul
jle
icebp
add
stos
pop
das
int
or
sub
lods
xor
lcall
cld
fcompl
ret
addr16
test
stos
dec
jg
insb
popa
mov
mov
lahf
mov
aam
and
cmp
aam
clc
divl
pop
lret
jmp
mov
adc
sbb
sub
xor
mov
xor
inc
cli
outsl
iret
pop
cmp
repz
stc
fwait
in
fs
inc
stos
adc
js
xor
cli
mov
mov
cli
out
hlt
xor
out
cmp
das
cs
insl
enter
hlt
gs
jno
lods
es
pop
outsl
mov
xchg
and
mov
inc
add
gs
or
cmp
xlat
xor
sub
stc
mov
cmp
push
fisubrl
out
nop
mov
aaa
roll
daa
lcall
push
je
mov
fstl
call
test
pop
xor
and
sub
jmp
push
outsb
pop
sbb
inc
int
and
out
aas
mov
scas
lds
icebp
clc
je
xor
jecxz
inc
and
std
xchg
popf
bound
inc
ljmp
pusha
mov
fstpt
aam
dec
push
in
pop
jnp
lock
sti
inc
das
addr16
nop
mov
jmp
dec
test
es
xor
repnz
lods
push
cmpsl
push
mov
sbb
cld
xchg
dec
mov
jne
mov
pop
pop
rcl
adc
in
xor
or
mov
stc
jbe
mov
cmp
inc
iret
sbb
jo
aad
sti
mov
hlt
fnstcw
xchg
inc
rclb
aaa
ja
bswap
jae
add
fcomps
sub
mov
sahf
mov
dec
pop
and
test
hlt
movb
jp
sar
dec
push
pop
xor
pushf
test
mov
cmpsb
add
add
or
cmp
cli
clc
imul
mov
sbb
incb
inc
es
jnp
dec
dec
inc
fwait
sub
jg
cmpsl
mov
aas
mov
rcl
out
movb
cmp
lods
call
xchg
lea
out
jae
sub
enter
outsb
pop
add
cmpsl
push
mov
add
out
jle
sub
jp
mov
xchg
jo
cmp
hlt
lcall
rcrb
pushf
sub
repnz
rolb
sbb
loope
push
insb
out
push
xchg
jnp
add
scas
mov
adc
out
iret
ret
ret
and
push
flds
stos
jae
dec
insl
inc
or
cs
scas
jge
inc
mov
sbb
fidivrs
cmp
xchg
imul
xor
imul
shlb
shl
jb
cmp
hlt
out
into
arpl
les
pop
ret
imul
lea
in
sub
fs
in
hlt
pop
pop
ljmp
push
inc
cmc
mov
jno
push
push
stos
lds
inc
sbb
cmp
arpl
pop
lock
jne
jne
and
outsl
sub
cmp
mov
adc
add
dec
mov
movsl
dec
mov
and
loopne
es
push
inc
insb
aad
push
jg
push
sbb
inc
push
clc
mov
mov
js
lcall
stos
cmp
xchg
sub
cmp
sbb
adc
and
xor
jl
lock
insl
add
aad
xor
push
sahf
int
aaa
inc
sub
ret
pop
jbe
lcall
fmull
or
inc
test
je
pop
test
add
sbb
in
jg
push
ss
cmpsl
ret
outsl
jb
lcall
ss
iret
cmp
fwait
cmp
lret
fadd
jno
sbb
sbb
or
cmc
or
pop
xor
in
outsl
scas
mov
loop
xor
andb
adc
mov
mov
push
out
lret
jno
sbb
or
sub
or
popa
repz
mov
lods
imul
mov
and
pop
cmp
imul
test
lods
lock
xchg
push
cmp
push
or
sub
filds
sti
lock
cs
mov
nop
jnp
or
sub
popa
das
repz
and
les
mov
mov
lea
call
jne
or
call
arpl
aad
test
insl
pop
dec
pop
mov
jle
inc
ret
roll
or
pop
jecxz
je
test
jecxz
cltd
fdecstp
sub
jp
cwtl
fdivrp
fs
lods
mov
fst
or
fcmove
adc
scas
daa
cmpsl
mov
xchg
and
ficomps
das
inc
xchg
sti
mov
mov
cmp
shrl
mov
es
subb
xchg
dec
in
clc
cmpsl
or
pop
into
icebp
repnz
mov
int
mov
pop
ss
push
shrb
lahf
aam
hlt
push
ret
das
xlat
repz
mov
cmc
pop
clc
jge
mov
jecxz
sbb
lret
rep
pop
pushf
bound
cmc
imul
cvtpi2ps
jne
xchg
and
xor
stos
cmp
jle
push
stos
mov
xchg
dec
or
push
sbb
loopne
sahf
stos
or
push
inc
mov
add
stos
mov
jmp
outsl
xchg
xor
xchg
jae
rol
mov
sbb
insl
mov
insl
and
dec
dec
mov
jecxz
or
mov
mov
mov
jne
and
mov
jl
out
sbb
jmp
push
in
insl
lock
fsubrl
out
cli
push
sub
ret
rcll
insl
sahf
and
mov
loope
mov
outsl
les
jle
andl
pusha
adc
out
inc
xchg
inc
out
jmp
shrl
xor
adcl
ret
jg
mov
prefetcht1
pusha
add
clc
or
jnp
lret
out
mov
dec
adc
mov
iret
and
out
ljmp
inc
pop
and
dec
imul
dec
push
xor
pusha
aaa
xchg
lret
xchg
lahf
sbb
push
xor
scas
pop
fimuls
jmp
xchg
fisttpll
mov
lds
nop
leave
push
cmp
hlt
xor
arpl
mov
enter
inc
sbb
cmp
dec
or
pop
jnp
ret
repnz
iret
lods
mov
subl
xor
int3
cmp
and
add
movsb
popa
mov
push
shlb
cmp
or
test
daa
or
mov
jno
loop
jl
test
imul
movsl
push
mov
pop
lahf
inc
arpl
push
sbb
test
in
fldl
add
in
xchg
and
and
pop
mov
ss
loope
pop
mov
cmp
outsb
daa
aaa
jo
ret
cld
jbe
call
jmp
dec
adc
cmp
roll
lret
or
mov
cmp
mov
pop
sub
daa
xlat
pop
cmc
dec
push
lcall
pusha
fdivl
loope
sahf
pop
xchg
cmpsb
test
jmp
jg
inc
mov
rcrb
mov
adc
fidivl
mov
test
imull
pop
xlat
rorl
mov
add
sti
shr
shll
shll
sbbl
loop
jmp
stc
or
pop
fs
cmp
sbb
mov
cmc
out
rcrl
mov
push
cmp
std
insb
or
dec
pop
gs
jp
loop
mov
adc
icebp
adc
arpl
cmp
fstl
push
incb
xlat
scas
xchg
add
mov
psubw
mov
int3
mov
shll
or
imul
push
or
repz
scas
xchg
nop
rorl
out
inc
hlt
imul
pushf
xorb
pop
pusha
lods
outsl
inc
fistl
mov
stc
cmp
out
or
je
jo
jecxz
xor
xlat
std
jecxz
adc
mov
repz
lds
mov
sub
jns
and
push
mov
shll
cltd
es
fsubl
cmpsl
or
loope
mov
int3
pop
cld
fucom
out
and
pushf
and
sub
pop
pop
push
cmp
rolb
rorb
addr16
ret
mov
mov
sbb
mov
frstor
popa
sub
bound
jb
out
pop
sub
push
in
sbb
jns
jp
cltd
xor
test
fdivl
mov
add
test
add
xchg
sti
sbb
or
stos
clc
fstps
add
inc
loopne
xor
push
scas
or
or
mov
mov
sub
cld
dec
lods
test
inc
push
int
or
movb
insl
sbb
jne
ret
dec
mov
cmp
cld
jne
bound
mov
push
in
mov
xchg
sub
into
out
testb
inc
or
push
jp
icebp
pop
mov
xor
rorl
in
and
pusha
mov
pop
fistpll
int3
xchg
push
popa
push
jmp
pushf
jno
addl
add
ljmp
push
dec
xor
shl
outsl
and
aaa
sbb
les
push
scas
push
mov
push
cwtl
jle
adc
xchg
scas
iret
andb
ret
sbbb
js
arpl
inc
jae
lret
cltd
inc
adc
std
or
movsl
push
xor
xchg
lret
or
sbb
mov
imul
cmp
mov
iret
lds
daa
sbb
jmp
dec
mov
sbb
jmp
jge
fisubl
cld
loopne
lea
sbb
call
aaa
sahf
mov
or
xor
pop
and
lock
jne
mov
push
and
or
mov
daa
cld
popa
scas
adc
or
push
pusha
dec
movsb
in
mov
dec
cmpsb
jnp
lahf
in
repz
int
fsubrl
daa
or
test
jno
aas
adc
gs
ficompl
xor
ja
lahf
fs
aam
jmp
andps
cs
fstl
scas
pop
adc
pop
js
cmp
push
in
loope
push
pushf
sub
pop
fnstcw
add
jno
mov
adc
fimull
mov
jb
sbb
adc
xor
jle
push
mov
cs
ds
inc
and
je
loopne
sbb
pusha
fsubl
shrl
lock
sti
sahf
mov
loope
adcb
jg
cmp
lea
mov
mov
out
jmp
and
fnsave
decb
cmp
add
outsl
dec
lret
or
lahf
outsl
scas
mov
test
cmc
lcall
outsl
insb
fs
loop
aam
stc
rolb
adc
push
mov
lods
int
movsl
mov
scas
pop
out
pop
int
jg
pusha
xor
mov
lock
notb
cmp
loopne
insb
and
fwait
scas
adc
xor
adc
xchg
xor
lret
xchg
out
aaa
test
jle
das
cmp
in
xor
mov
jp
inc
sti
dec
test
cs
test
mov
or
xor
repnz
xchg
loop
lahf
in
imul
test
dec
xchg
aam
lea
test
jae
pop
pop
dec
je
adc
push
pop
pushf
sub
dec
pop
add
rolb
adc
aas
cwtl
jo
jb
test
dec
add
shl
adc
xor
mov
push
cwtl
push
dec
add
ret
addl
mov
mov
or
jnp
idiv
and
aam
inc
das
add
mov
xor
xor
xor
mov
lret
cmp
es
fisubrl
lock
mov
mov
lds
out
les
pop
je
adc
push
fisttps
aam
cs
dec
fs
frstor
aam
clc
repz
out
sbb
loopne
popa
inc
mov
push
mov
mov
js
push
enter
call
aaa
rcrl
dec
xor
mov
xchg
xor
dec
cs
xchg
adc
roll
sbb
pop
outsl
shrb
sbb
add
loopne
push
pop
push
xchg
xor
add
jae
push
shll
mov
dec
test
jecxz
mov
int
mov
movsb
jbe
jmp
cmp
rorb
mov
into
jne
divb
fcmovnbe
dec
idivb
in
div
xchg
jp
pop
out
gs
inc
inc
sub
mov
mov
jp
and
mov
lods
mov
mov
sarl
imul
dec
scas
pusha
dec
adc
fistps
clc
xchg
jmp
adc
xchg
addr16
adcl
cld
push
rclb
mov
and
scas
stos
inc
addr16
and
mov
jnp
test
push
push
fildll
jecxz
fistps
xor
adc
pop
mov
sarb
push
ret
mov
xchg
inc
xor
jmp
xchg
jns
jo
adc
mov
push
sarl
push
fstp
mov
imul
hlt
enter
or
jbe
or
pop
sbb
xchg
orl
rol
icebp
jnp
int3
movsl
mov
pop
movsb
sarl
xor
adc
scas
repz
cli
cmp
or
jp
cmpsb
fnsetpm(287
in
fiaddl
test
cmp
rolb
sahf
cmp
jno,pt
shlb
bound
lahf
orl
mov
mov
push
jp
test
rclb
mov
pop
push
js
jmp
or
dec
xor
dec
imul
das
cmp
dec
sbb
mov
dec
pop
mov
cmp
test
ret
mov
push
mov
scas
int
pop
pop
sub
repnz
pop
repz
pusha
lcall
aam
or
mov
cmpsl
out
subb
jg
xor
loopne
sbb
mov
dec
or
das
xchg
imul
test
add
rolb
imull
mov
mov
mov
into
rcll
xor
cmp
dec
xlat
loop
repnz
ja
iret
fs
inc
adc
test
daa
mov
jno
out
imul
xor
imul
shll
