mov
adc
or
push
je
imul
add
push
mov
cmp
fldt
add
adc
or
xchg
dec
mov
ja
or
fmull
dec
and
lea
xchg
mov
sbb
mov
sub
adc
mov
add
adc
or
cmp
out
out
mov
xor
pop
sub
and
or
insl
in
mov
pop
pop
xchg
mov
inc
xchg
sbb
mov
or
jge
pop
or
outsl
fmull
ret
push
mov
add
push
jg
orb
pop
pop
pop
ret
nop
jmp
or
insl
push
rolb
test
pushf
cwtl
xor
and
sti
or
xor
bound
gs
inc
inc
xor
pushl
test
shlb
aas
bound
sbb
mov
mov
and
bound
mov
test
jle
push
loope
mov
sbb
pop
jae
int
add
sti
fcmovnu
sbb
fldl2t
add
bound
fidivrs
sbb
imul
negb
insb
xchg
in
jmp
jmp
movd
in
ss
fstl
add
sbb
jle
insb
shr
popf
repnz
or
das
stc
or
add
or
sbb
imul
sti
lahf
jne
add
fs
lret
or
sti
mov
cmp
cmp
and
mov
or
inc
insb
std
addr16
in
mov
in
stos
push
sbb
je
clc
mov
lds
sbb
jnp
jmp
imul
sub
xchg
test
dec
adc
mov
mov
insl
int
adc
loope
sti
sub
or
sub
or
sub
mov
incl
adc
dec
pop
jmp
xchg
pushf
pop
fisubl
add
mov
mov
sub
mov
sbb
or
sub
cmp
xor
mov
cmp
popf
cmpsb
cli
and
loope
add
adc
jecxz
sbb
outsl
call
adc
bound
pop
ljmp
mov
lock
add
jmp
ljmp
stos
add
adc
fucomp
fldl
adc
fwait
sbb
test
jmp
ja
sti
mov
sub
inc
push
pop
or
and
sub
mov
xchg
out
jo
inc
das
out
loope
lods
push
loop
divl
fsubrl
arpl
jns
adc
or
xor
sahf
add
adc
adc
mov
mov
adc
jmp
notl
ds
cmp
adc
mov
jmp
shrl
cmp
mov
ss
pop
jge
in
sub
out
in
or
popa
outsb
lret
out
fsts
xchg
imul
shll
mov
outsl
fldenv
dec
fldt
in
jne
adc
popa
decb
fs
rorl
lds
xor
xor
mov
jnp
aaa
popa
imul
test
xchg
int3
int
cmp
in
in
mov
push
push
adc
push
pop
mov
add
xor
cwtl
ret
std
aas
add
mov
mov
mov
fldt
cmp
add
loopne
adc
shl
jne
test
out
ret
jne
or
hlt
jmp
adc
insl
xor
pop
mov
in
inc
call
cld
cld
subb
mov
add
jnp
sub
mov
push
dec
test
jb
inc
pushl
inc
lock
push
lea
mov
mov
sti
idivb
or
xchg
mov
add
cmp
or
sarb
ds
lods
jmp
jl
or
fs
xchg
add
sub
cmp
push
mov
jmp
and
test
adc
dec
jb
cmp
out
sbb
mov
dec
rcll
add
sbb
mov
scas
or
adc
dec
in
jne
aaa
jl
push
ret
lahf
dec
outsl
popa
fs
imul
std
incl
jb
jne
insb
push
jb
je
arpl
pop
sti
mov
je
dec
outsl
jbe
dec
gs
outsl
sub
adc
call
das
lea
pop
shrl
pop
cs
mov
mov
ficomps
adc
cld
lret
clc
xchg
dec
mov
ljmp
cs
jb
xchg
loopne
mov
loop
mov
inc
mov
or
int3
jnp
and
insl
add
push
lock
and
in
push
es
jno
sbb
cmp
push
test
je
sbb
test
cmp
mov
lods
jnp
aas
xor
inc
or
lea
or
ss
mov
shll
add
adc
jnp
lods
dec
les
adc
cmp
mov
inc
add
jo
or
je
arpl
fs
jae
sub
subl
lock
pop
and
xor
pop
cmpl
add
sub
mov
jno
test
add
fstpt
dec
cmp
jle
mov
add
in
jle
xor
sbb
imul
mov
jnp
lahf
sti
fmull
nop
imul
fistpll
dec
mov
call
jmp
je
ret
push
je
inc
loopne
lea
mov
sbb
repz
dec
cmp
jbe
sub
mov
xchg
mov
xor
sub
in
mov
sub
out
es
mov
mov
cli
or
dec
inc
dec
jg
inc
push
pop
call
fcoms
add
leave
sarb
dec
fdivs
leave
sti
lods
imulb
xor
add
fstp
testl
xchg
or
sbbb
imul
leave
xchg
out
fdivr
mov
in
lea
ret
out
ja
mov
mov
mov
pop
cmp
inc
fnstsw
jl
cmp
jl
call
mov
xor
das
mov
or
lea
xor
jl
pop
mov
filds
mov
pop
inc
and
jle
insb
or
add
push
fwait
fwait
test
inc
and
test
adc
xchg
ss
sub
lods
inc
out
mov
mov
hlt
mov
pop
and
jnp
fmull
mov
mov
pop
js
push
aad
setnp
cmp
fwait
inc
icebp
fsubs
aad
fcomps
pop
mov
push
in
or
fsubr
fcomps
adc
pop
jns
jp
push
mov
jl
adc
sub
inc
insb
loopne
cmp
add
xor
inc
lea
int3
pop
aam
add
or
xchg
icebp
add
add
scas
mov
sti
andl
push
int3
in
movsl
add
sbb
ret
mov
std
xchg
int
adc
sbb
das
push
inc
mov
or
js
adc
sbb
movb
daa
and
xor
xchg
cmc
in
insl
jbe
dec
mov
fmull
xchg
enter
mov
fs
sub
mov
bswap
cmp
jae
adc
jo
dec
cli
loopne
jne
adc
aaa
enter
pop
push
push
aam
in
mul
and
xchg
cwtl
popf
push
cmp
loopne
push
imul
inc
and
in
cmp
fs
insl
pushf
add
inc
fmuls
dec
inc
loop
es
in
sub
insb
mov
or
and
push
push
push
xchg
test
sbb
lds
adc
sub
push
xlat
arpl
mov
push
dec
cmp
jl
mov
sbb
rclb
ret
sbb
aam
pushl
inc
sub
das
adc
jb
gs
xor
mov
insb
insb
ja
outsb
add
sub
shlb
in
bound
mov
out
ja
stos
mov
leave
push
xor
nop
cld
xor
xchg
mov
sub
jne
mov
mov
or
or
mov
in
dec
pop
mov
cwtl
push
lret
in
in
jg
mov
mov
pop
testb
std
pop
ja
clc
popw
add
jb
cmpb
mov
js
adc
test
je
sbb
inc
or
or
addb
sbb
xor
pop
add
rcrl
xchg
stos
jmp
sbb
jns
mov
sbb
cmp
insl
mov
mov
loopne
dec
fwait
cld
and
mov
fdivrs
jle
xchg
mov
orl
jae
or
pusha
inc
ret
movsl
jecxz
mov
in
std
data16
xor
pop
xchg
push
push
or
mov
jl
xchg
in
push
orb
jge
lahf
mov
xchg
jg
clc
pop
or
data16
imul
outsl
inc
mov
adc
cs
cmp
xchg
pushf
daa
or
or
dec
cmp
add
insb
xor
fwait
inc
orb
dec
iret
andb
xchg
push
push
add
adc
mov
shlb
mov
mov
add
dec
add
pushf
jecxz
pop
cld
and
inc
cmp
push
add
inc
jecxz
push
xchg
dec
in
movsb
push
stos
sub
shll
xchg
sub
cld
clc
js
push
push
push
sbb
sub
push
in
sub
xor
std
jo
sbb
push
call
in
sti
mov
add
add
inc
inc
cmp
dec
and
push
push
movb
cli
gs
in
xchg
or
or
imul
jo
idivl
cmp
ss
aaa
cmp
or
cmp
enter
xor
and
sub
out
mov
aam
mov
sbb
push
push
pop
inc
mov
hlt
mov
xor
add
mov
scas
mov
push
mov
add
or
jge
cmc
mov
or
or
int
adc
ljmp
rclb
or
mov
xchg
test
sahf
or
inc
ret
mov
aas
or
inc
add
repnz
shl
push
add
add
shr
dec
add
mov
add
push
pop
or
sub
add
add
sbb
pusha
xchg
dec
add
pop
pop
jle
lock
imul
jg
stc
int
dec
inc
aaa
add
push
add
mov
or
dec
mov
addl
mov
push
ljmp
cltd
ja
mov
out
add
addb
inc
cmp
fidivrs
das
sub
sbb
ret
add
jae
cmpsb
pop
dec
jle
mov
cmp
sub
add
icebp
aas
divb
adc
push
fiaddl
add
add
add
stc
mov
movsl
or
inc
out
xchg
mov
icebp
xorl
add
in
sub
mov
xchg
adc
vmwrite
cmpsb
scas
adc
xchg
or
pop
scas
or
sti
imul
imulb
jl
sub
add
jge
add
idiv
xchg
add
adc
pop
or
mov
add
push
sub
pop
add
mov
mov
mov
mov
das
adc
imul
and
adc
pop
add
add
cmp
jp
add
sbb
sub
cld
pop
adc
movb
sbb
add
dec
jo
fisttpl
mov
leave
popa
add
mov
push
xor
push
jecxz
add
or
arpl
mov
sub
pop
hlt
out
ret
xlat
push
mov
or
repz
add
sbb
ret
adc
mov
mov
add
in
cmpsl
add
popl
cmp
pop
add
pop
sbb
push
inc
scas
stc
data16
add
cli
add
xor
xchg
add
lods
sahf
pop
ret
lock
in
pushf
lods
cltd
pop
into
out
pop
bswap
fstpt
pop
jmp
add
fninit
mov
sub
rol
push
std
add
repnz
arpl
add
inc
fdivrp
incb
push
add
xor
pop
jmp
ret
inc
xlat
cwtl
pop
inc
sub
rcrl
mov
mov
add
mov
mov
popa
push
movsl
add
sub
jecxz
test
bnd
insl
add
sbb
cli
mov
pop
or
je
push
add
das
lret
outsl
pop
cmp
repnz
xor
ret
popf
mov
je
cmp
and
fsubrs
add
imul
cs
adc
ret
sbb
mov
testb
cmp
mov
and
mov
xor
cmp
xchg
nop
fisttps
sbb
pop
outsl
popa
xchg
add
add
add
ficompl
or
dec
gs
mov
fdivrs
push
sbb
add
mov
xlat
fucomp
nop
jmp
mov
add
mov
decl
cltd
add
add
mov
push
call
add
dec
add
adcb
outsl
stos
xlat
ds
fdivl
arpl
aam
enter
cli
test
add
test
int3
mov
adc
incl
loop
idivb
sbb
stos
jbe
mov
arpl
mov
jmp
clc
sub
cmp
mov
out
out
call
inc
aad
stc
insb
jnp
int
mov
or
shlb
test
cmpsl
xchg
xor
enter
mov
cmpsb
jb
mov
lcall
fcmovnb
cmp
sub
xlat
cmp
out
ds
cmp
fwait
popa
cmp
push
popf
lods
mov
cwtl
repnz
xor
fs
scas
dec
jmp
pop
insb
outsl
jne
fstpt
out
movsb
sub
cmp
sbb
pop
shrl
mov
xor
dec
adc
push
xchg
dec
inc
es
sub
fcomps
std
push
mov
rcl
icebp
inc
out
push
jns
add
fcmovb
ret
outsb
repnz
dec
mov
lret
nop
sbb
or
add
add
push
lcall
cld
or
frstor
inc
push
fsub
pop
and
test
or
shrb
add
std
ror
aam
rorl
adc
or
push
adc
das
adc
cmp
ljmp
mov
sbbb
leave
dec
jecxz
icebp
mov
shll
jecxz
fwait
movsl
xchg
jge
or
mov
jbe
push
sub
jns
sub
pop
mov
jae,pn
add
js
aaa
mov
mov
in
sti
jg
mov
pop
popa
xchg
arpl
mov
cmp
imul
fimull
cli
xor
aam
jo
in
inc
leave
scas
into
jecxz
popa
jmp
in
xor
pusha
jnp
loopne
out
add
or
sub
dec
and
jbe
pop
dec
push
in
mov
cmp
icebp
cs
jns
sbb
push
dec
insl
fsub
sbb
mov
mov
fisubl
pop
scas
and
les
sub
xchg
push
mov
mov
mov
inc
mov
inc
and
mov
aam
jecxz
add
xor
pushf
mov
push
call
pop
push
jno
nop
pushf
leave
outsb
sbb
adc
push
pop
xor
and
xor
out
jmp
pop
fcomi
movl
adc
or
pop
in
mov
arpl
pop
cmc
data16
adc
lea
pop
sub
add
or
fiaddl
sbb
ret
or
vcmpps
jno
ret
pop
insl
cmp
pop
jecxz
jnp
mov
loopne
insl
mov
mov
shll
incb
imull
sbb
and
jbe
mov
xlat
mov
mov
mov
int
pop
hlt
cmp
mov
stos
hlt
xchg
in
imul
jp
inc
idiv
std
push
xlat
jmp
bound
xchg
adc
add
lcall
adc
mov
mov
les
cli
popa
inc
mov
cmpsl
push
push
mov
sub
sbb
pusha
sub
leave
push
imul
jge
loopne
in
inc
sbbb
cmp
add
mov
rcll
xorl
inc
mov
push
adc
lods
popa
imul
jl
mov
sbb
cmc
and
lock
call
js
sbb
lods
roll
pop
stos
fistps
mov
cmp
push
mov
pop
cld
pusha
xchg
imul
ljmp
dec
xor
nop
sub
shll
fisttpll
mov
and
mov
ljmp
xor
out
xchg
pop
mov
add
mov
or
das
mov
out
lock
dec
xor
inc
pop
mov
mov
inc
push
mov
movsl
pop
cmp
mov
xchg
dec
clc
push
mov
sbb
adc
sbb
sbb
lock
test
jge
mov
cmpb
loope
push
scas
ss
or
dec
faddl
mov
fsubp
mov
ret
fsubrl
push
and
jecxz
mov
cmpb
enter
aad
ficompl
mov
arpl
outsl
in
rcrl
xchg
sbb
mov
pop
inc
ret
ret
pop
out
mov
cmp
lea
pop
fildl
sbb
jae
xor
jno
xor
js
mov
sahf
test
movsl
mov
push
jne
push
hlt
mov
cs
mov
cmpsb
mulb
mov
je
shrb
dec
xor
pop
out
mov
js
xor
clc
jb
mov
push
or
in
mov
jae
cmp
mov
or
dec
mov
repz
cld
jne
orl
jg
ret
dec
repz
out
mov
sub
stos
bound
scas
push
packsswb
faddl
shll
fninit
bound
mov
xor
or
pop
ja
inc
cwtl
clc
outsl
divl
sub
jne
clc
int
mov
movsl
ret
push
mov
jmp
cmp
aad
fildl
xchg
inc
and
sbb
rorb
or
xor
fyl2x
mov
pop
mov
inc
call
hlt
jecxz
fwait
xchg
mov
clc
jmp
pop
adc
sbb
hlt
and
sar
loope
fldt
jle
nop
xchg
mov
lock
out
clc
popa
add
mov
fdivs
or
xor
adc
mov
lret
daa
ds
mov
dec
mov
add
aaa
outsb
in
popa
leave
sbb
jg
push
outsb
fwait
jle
das
mov
xchg
sbb
mov
sbb
sub
bnd
or
xor
sub
push
gs
push
push
jne
mov
jns
inc
pop
pop
mov
sub
fdivrp
insl
xchg
pop
mov
xor
sub
in
cltd
iret
repnz
repnz
xchg
xchg
mov
popa
pop
or
dec
outsl
rorl
fucom
mov
jne
jno
fcmovnu
aam
test
sub
call
jle,pn
inc
loope
add
inc
ljmp
pop
mov
pusha
pop
cmp
mov
sbb
imul
cmp
dec
mov
shlb
loope
roll
cmpsb
movsl
idivl
push
cli
pusha
imul
cmp
jae
push
std
xlat
lds
mov
and
mov
mov
faddp
xchg
cs
xchg
pop
adc
out
xchg
or
shr
ja
mov
scas
mov
sub
or
cmp
iret
cwtl
je
int
fstl
fisttpl
jmp
and
cmp
addl
xor
sbb
je
jb
daa
mov
push
hlt
mov
cmp
outsb
push
or
ret
fisubl
jb
ljmp
lock
jl
dec
jle
lds
sbb
cld
push
jle
push
pop
cmpsb
aaa
mov
dec
imul
xchg
jle
cmp
pop
es
inc
loopne
and
lds
sbb
shl
mov
imul
and
punpcklwd
fimull
push
fiaddl
sbb
loop
rclb
test
or
fmuls
jne
xor
push
gs
mov
adc
push
mov
sbb
mov
popa
cmp
push
cmp
lcall
dec
in
mov
inc
inc
mov
std
ss
adc
jne
cmpsl
mov
fwait
std
notl
inc
push
fisubl
hlt
mov
mov
xor
loopne
xor
repnz
xor
mov
ja
sarb
xor
pop
rolb
mov
xor
test
loope
test
mov
and
sbbl
movsb
lods
inc
cmp
cmp
sbb
iret
xchg
sbb
dec
inc
dec
sahf
jb
adc
add
cmp
dec
pop
shl
jnp
andl
cmp
scas
xorl
shrb
loop
icebp
add
imul
aam
out
clc
inc
xor
cmp
dec
sbb
mov
jp
je
mov
mov
dec
xchg
push
aas
sbb
das
or
xorl
or
adc
out
out
popf
add
xor
jns
popf
imul
mov
in
push
or
fmull
xchg
inc
loopne
imul
pop
jmp
xchg
jecxz
mov
add
jmp
data16
sbb
adc
mov
inc
push
out
enter
sbb
mov
cmpl
inc
js
jmp
or
mov
shlb
in
mov
add
hlt
cmp
mov
xchg
mov
pop
rolb
dec
int
xchg
mov
mov
inc
inc
push
inc
pop
xor
test
pop
aaa
repz
push
pop
fnsave
and
mov
mov
pop
ret
sub
icebp
imul
neg
in
imulb
lods
fldl
out
jb
mov
cmpsl
aam
adc
pusha
enter
jl
cmp
mov
dec
pusha
sti
movsl
and
jne
adc
mov
fdivr
add
daa
lcall
mov
jbe
loopne
jg
cmc
push
dec
in
ret
push
and
insl
imul
out
gs
xlat
inc
ret
test
sti
xchg
in
mov
fiaddl
sub
xchg
jecxz
fmull
ds
mov
loopne
scas
imul
lcall
pop
out
xor
pusha
mov
fdiv
cmp
orb
jl
test
pop
cmp
adc
subb
clc
aam
inc
and
jbe
arpl
cld
sbb
dec
sub
and
pop
pop
sti
pusha
stos
push
repnz
push
and
pop
pop
out
or
mov
cmpsb
pop
xor
mov
push
hlt
aas
jmp
jle
out
mov
in
popa
rcr
js
jl
jecxz
out
lret
aaa
push
xor
insb
jne
cmp
test
push
stos
push
cmpsb
and
shlb
inc
jb
push
add
jp
cmp
add
mov
mov
js
test
pop
xchg
shll
adc
outsb
cmp
inc
cld
push
mov
addr16
movsl
pop
ret
dec
dec
xor
or
lods
jae
sbb
pushf
push
repnz
dec
sub
imul
incb
repnz
outsl
cli
fsub
outsb
mov
sbbb
iret
pusha
dec
fidivs
jl
aam
cld
call
clc
cmp
inc
and
fidivl
test
pop
pop
sar
pop
fistps
scas
jae
sub
clc
pop
imul
and
mov
aam
sti
enter
pop
ljmp
pop
stc
lret
sub
ret
jbe
and
pop
mov
clc
insl
fwait
xlat
cmpsl
mov
inc
cli
js
mov
test
pop
es
pop
pop
dec
mov
arpl
jge
sub
bound
cmp
add
adc
jecxz
mov
fcomps
in
mov
scas
cmpsb
add
cmpsl
jnp
sbb
pop
js
test
test
mov
mov
cmp
lcall
cwtl
jne
mov
jns
movsl
fld
xlat
jecxz
test
ja
xchg
inc
fstps
xchg
in
sbb
add
pop
push
jle
movsb
jle
sbb
mov
clc
ret
sub
imul
sub
daa
push
adcl
orl
je,pn
lcall
sub
push
cmp
dec
and
fwait
int3
ja
lock
mov
mov
push
sbb
xor
and
lret
loopne
mov
pop
dec
mov
orl
pop
aaa
ret
pop
jne
add
test
push
test
femms
arpl
jl
hlt
dec
cmp
dec
mov
daa
outsb
nop
and
stc
call
loope
repnz
movb
push
xlat
movsb
outsl
jecxz
stc
push
in
icebp
sbb
shrl
repz
cltd
stc
ss
inc
loopne
sub
and
cmp
push
jbe
ret
lods
aas
cli
pop
hlt
sbb
dec
es
rolb
sbb
push
sar
jne
cli
call
sbb
mov
fldt
fsubl
add
lock
inc
fcmovu
jnp
mov
xchg
jge
stos
mov
sub
jg
fnsave
or
push
xor
pop
lcall
lock
mov
push
pop
lahf
inc
repz
mov
push
test
mov
test
xchg
loope
in
mov
sbb
mov
fidivs
bound
subb
xchg
jae
add
mov
jne
aas
outsb
sbb
mov
je
fisttpl
imul
or
mov
jmp
and
lods
sarl
loop
es
or
sub
pusha
test
fcompl
arpl
sub
imul
mov
jmp
mov
cld
movsb
lret
dec
out
cmc
cli
pop
or
sub
jp
lods
movsb
xchg
imul
xchg
sbb
lret
das
inc
mov
add
sbbl
addr16
pop
aad
push
test
jecxz
pop
int3
cmp
addr16
mov
pop
in
pop
jl
popf
repnz
test
mov
xchg
xor
call
inc
and
loope
mov
shlb
inc
pop
ljmp
cmp
or
xor
push
cmp
stos
icebp
hlt
ss
daa
dec
xor
jle
scas
arpl
lea
in
push
mov
aam
mov
inc
fildl
xchg
das
jno
test
sti
mov
or
mov
hlt
outsl
jp
jbe
cmp
out
xlat
add
pop
mov
fstl
outsb
mov
rcrb
cmp
mov
out
jbe
cwtl
inc
sub
sub
push
popf
ret
dec
push
lds
inc
dec
jle
sbb
fwait
sub
rorb
pop
fcmovnb
test
push
sub
push
inc
inc
add
xor
mov
addr16
insb
sbb
mov
pop
cmpsb
push
jae
std
mov
fcomps
scas
cmpsb
shrl
outsb
xor
popf
rcll
add
aad
shll
lods
and
or
mov
daa
out
insl
rol
mov
aaa
mov
je
dec
dec
rorl
aad
fwait
lods
repz
and
in
gs
dec
aaa
ret
cs
cmc
je
shlb
cs
fcmovu
sahf
xchg
mov
scas
ja
dec
mov
outsl
fcompl
fisubrs
in
insb
cmc
enter
sub
hlt
lods
fidivs
pop
xor
stos
mov
mov
mov
cs
fs
add
in
ss
cmp
and
out
inc
pop
cmp
or
lret
and
or
adc
jl
mov
cmpsl
sbb
outsb
or
cmp
cld
adc
jne
out
sub
add
mov
gs
sbb
add
jmp
cmpsb
stos
adc
cmp
adc
call
mov
mov
fbstp
sbb
mov
xor
pop
dec
movsl
sbb
ss
mov
dec
fistl
push
jns
xchg
divb
adc
xchg
sub
out
hlt
add
fs
mov
js
pop
cmp
fdivl
in
add
jg
mov
popa
pop
fmul
mov
mov
rclb
cmp
dec
and
mov
dec
adc
xchg
inc
jge
mov
mov
adc
pop
push
jmp
rcll
dec
paddb
int
cmp
pop
add
xchg
add
cli
ret
adc
movl
sarl
out
icebp
xor
mov
xchg
in
lret
mov
loope
cmp
test
jmp
fldt
fcmovnu
xor
cmp
or
cltd
imul
inc
jle
xor
cmpb
cmp
shr
mov
mov
mov
ljmp
flds
sub
jle
std
jmp
push
test
pop
dec
aas
clc
jbe
cmp
je
mov
fidivs
popa
jne
push
sbb
inc
xchg
lahf
out
xor
sbb
dec
sbb
jge
aas
icebp
sbb
test
faddl
js
inc
clc
add
out
aad
pop
outsl
sbb
fldl
psraw
ret
stos
jecxz
xchg
push
jbe
clc
rcll
jnp
cmp
ds
je
movl
out
int3
mov
fsubl
fidivrs
mov
pop
jg
or
mov
mov
ljmp
and
xor
cmp
gs
dec
in
mov
push
sbb
repnz
int
jle
cmc
sahf
int
push
adc
or
jnp
mov
shr
ret
mov
daa
call
add
lret
std
mov
mov
xchg
adc
or
into
cmpsb
test
fldl
sti
mov
lods
inc
dec
push
movb
ds
mov
iret
iret
dec
mov
mov
add
rorl
mov
jnp
repnz
adc
sbb
addb
lods
ret
sub
push
xchg
daa
inc
call
dec
aaa
rol
stos
cmpsb
repz
and
cli
pop
call
pop
out
mov
push
stos
mov
jbe
cmp
jbe
rcrb
or
jae
adc
mov
call
lahf
ds
cmp
sub
iret
pop
aaa
sahf
clc
loop
push
es
pop
and
iret
inc
xor
xor
sbbb
jmp
nop
repnz
xor
lods
push
sbb
lcall
sbb
push
mov
inc
xchg
into
insl
pop
sbb
fldcw
mov
lcall
mov
rep
movsb
pop
mov
inc
loope
ss
adc
mov
mov
insb
outsl
pop
inc
scas
add
daa
shrb
sbb
imul
in
mov
and
fcoml
push
mov
jbe
scas
mov
mov
adc
mov
push
sti
cmpsl
jnp
gs
out
imul
je
pmaxsw
push
mov
outsl
setne
aam
mov
imul
dec
fistpl
add
loopne
scas
out
lock
cwtl
icebp
rolb
decl
cmp
pop
push
loope,pt
mov
icebp
aad
stos
xor
or
es
sbb
xor
in
pop
mov
inc
pop
out
mov
pushf
outsb
leave
push
sbb
fadd
sbb
sbb
sbb
bound
xchg
or
in
push
mov
push
jns
dec
add
jmp
js,pt
dec
xor
jecxz
or
and
push
aam
cmp
sti
ret
mov
pop
aad
cli
sub
sub
xor
pop
ja
or
jbe
stc
xchg
imulb
adc
or
pop
push
push
shrl
lret
outsl
inc
rcll
lods
add
xchg
inc
cld
ret
sbb
push
out
push
cltd
jge
ficomps
pop
pop
mov
in
pop
mov
mov
mov
jae
pop
push
xor
rolb
aam
jecxz
push
mov
pop
mov
inc
shll
xchg
jmp
jne
mov
adc
cli
mov
dec
pop
sbb
inc
jae
add
movsb
pop
jbe
decb
stc
xorb
push
inc
clc
loopne
jno
jne
out
dec
add
jnp
faddl
xchg
pop
xor
push
or
mov
dec
shll
imul
adc
lock
fadd
adc
lahf
push
dec
jge
hlt
loopne
sbb
repnz
or
push
sbb
popf
jnp
mov
cmp
or
into
mov
rcr
lods
les
fstpl
mov
pop
fcomi
or
insl
cs
icebp
popa
arpl
scas
scas
aaa
inc
sbb
push
shll
push
mov
arpl
test
pop
sbb
fstpl
sub
mov
xor
insl
filds
sub
call
sub
push
shll
roll
imul
outsb
nopl
cmp
sbbl
xchg
dec
dec
cmp
xor
repz
out
dec
mov
xlat
xchg
jbe
idivl
cmp
ss
mov
rcrl
jp
loope
out
ja
fwait
sbb
and
std
stos
jecxz
fcmove
and
psrad
sti
jo
mov
push
adc
push
mov
mov
push
pop
mov
mov
popf
ds
sub
jne
pmovmskb
lock
push
bound
in
lea
mov
call
mov
mov
mov
outsl
mov
push
lret
lods
fisttpll
pushf
jnp
inc
pop
fidivs
jecxz
daa
xor
dec
mov
cmp
sub
mov
sahf
xchg
iret
sub
stos
outsb
and
add
xchg
adc
clc
out
shl
dec
pop
pop
cmp
roll
mov
orb
pop
mov
push
jbe
test
pop
aaa
rcll
sahf
sarb
stos
mov
fwait
mov
mov
xlat
xchg
jne
mov
test
mov
xlat
mov
xor
mov
fsubrs
mov
add
lods
or
and
cs
jb
stos
clc
sarb
stos
in
repnz
shrl
mov
sbb
pop
ffreep
popa
push
daa
inc
xlat
inc
addl
adc
adc
movsl
int
jae
movsb
inc
pusha
mov
rol
xchg
mov
dec
dec
je
adc
sub
cmc
roll
fmull
loop
cmpsl
sbb
inc
lea
sub
lret
sbb
ljmp
clc
fidivrs
mov
iret
repnz
cmp
or
and
cltd
jbe
push
dec
dec
xchg
xor
and
setg
loopne
mov
push
xor
outsl
push
je
insl
in
jo
pop
jle
pop
cmp
insb
out
sahf
inc
shl
sub
cltd
or
fimull
gs
xor
inc
mov
cmpsb
mov
arpl
mov
pop
mov
clc
sub
lea
mov
and
leave
mov
dec
cwtl
das
mov
mov
movsb
aam
insb
push
popa
jmp
insl
mov
xlat
ja
jnp
ret
jo
mov
pop
ret
out
rcrl
lret
in
inc
xor
shll
scas
and
cmp
sbb
dec
and
lods
lods
pop
xor
push
clc
and
or
mov
outsl
sbb
push
in
and
jle
insl
call
sahf
pop
xchg
adc
jmp
inc
scas
add
scas
mov
push
jle
jnp
mov
gs
subl
insl
ss
test
cmp
call
pop
insl
and
addr16
shrl
cmp
inc
dec
clc
pusha
cmp
jmp
fucomip
outsl
or
pop
ss
mov
andl
or
fidivl
scas
subb
clc
jmp
inc
mov
inc
je
mov
cli
mov
pop
cmp
dec
insb
push
jnp
xchg
sahf
push
sbb
pop
inc
ffree
push
and
fdivs
pop
pop
call
xchg
xchg
cmp
cmpsl
dec
xor
cmp
push
mov
bound
out
xlat
rcl
inc
push
inc
out
mov
adc
mov
sub
mov
pop
mov
dec
adc
mov
mov
bound
popa
insb
jns
je
icebp
push
ret
inc
mov
lret
mov
cmp
leave
adcl
xlat
xchg
call
and
les
adc
inc
pop
nop
movsl
inc
aas
cmc
shr
adc
pusha
push
mov
rcrl
mov
int3
movsl
add
sbb
lock
add
dec
sbbb
test
cmpsl
dec
shl
sbb
dec
je
xchg
pop
fidivrs
leave
pop
stc
lods
and
or
jmp
stos
jmp
ljmp
mov
mov
cmp
inc
testl
mov
push
out
mov
sbb
pushf
and
dec
xchg
je
aad
mov
leave
leave
popf
outsl
add
pop
in
mov
popf
fcom
jne
ss
arpl
push
sub
mov
mov
and
mov
jg
fnsave
pop
sti
rcrb
mov
insl
sarl
aaa
cmp
repz
mov
test
xor
mov
stos
push
stos
sarb
inc
int
push
inc
not
add
int3
sar
sbb
ret
pop
push
adc
test
mov
insl
stos
push
pushf
clc
cmpsl
scas
dec
std
push
loopne
pop
sub
shrb
pop
or
push
mov
inc
add
pop
scas
ret
loope
and
inc
push
push
iret
pop
jg
lock
imull
pop
pop
sahf
jmp
jg
fnsave
test
inc
mov
icebp
xchg
pop
aaa
jbe
clc
sbb
clc
loope
push
rclb
in
jmp
mov
xor
shr
mov
cltd
sahf
mov
pushf
xchg
adc
sbb
mov
jl
mov
iret
mov
rol
inc
je
sbb
dec
loope
push
cs
ljmp
sbb
fwait
aam
shr
pushf
loop
jnp
rorb
orps
shr
or
sbb
push
jg
or
call
insb
xor
add
mov
dec
outsl
popa
aam
roll
dec
outsb
mov
testb
out
inc
clc
icebp
call
push
add
test
movsl
jno
pop
dec
adc
mov
or
jbe
jmp
xor
cmp
xor
jo
lret
gs
or
and
mov
out
xor
mov
js
jmp
imul
pop
or
dec
test
ror
imull
or
pop
push
sbbb
pop
mov
inc
xor
jl
add
ds
lret
cmp
or
out
pcmpeqb
in
cmp
fwait
push
repz
imul
ss
loopne
mov
inc
xchg
pushf
fistpl
in
and
lods
push
fisubs
mov
mov
sbb
test
dec
xchg
lea
inc
or
cmp
mov
insl
cmp
or
sti
push
ds
sarl
pop
xchg
insb
movsb
xchg
or
pop
test
jmp
mov
jp
das
mov
test
mov
les
cmp
xchg
out
addr16
inc
dec
pop
mov
aam
in
inc
inc
mov
sub
sbb
sbb
stos
jnp
stc
ror
ffree
pop
mov
mov
mov
jmp
push
push
ret
aad
mov
jne
xchg
lret
dec
ss
imul
stos
fstpt
pop
ret
mov
jmp
test
fs
shrd
mov
mov
shl
jno
xchg
or
aaa
sarl
jg
add
imul
push
pop
cmc
ret
and
int
roll
adc
or
insl
negl
fimuls
fsubrs
jnp
inc
hlt
pop
mov
enter
ficoml
adc
inc
xrelease
lods
addl
pop
jae
add
movsl
clc
or
hlt
cmpsb
test
cld
push
paddusb
push
push
mov
mov
ja
clc
cli
jge
jge
sub
cmp
fbld
pushf
push
cmpsb
mov
xchg
push
jnp
in
jmp
mov
sbb
test
fistpl
frstor
cmp
xor
fdivs
push
out
adc
mov
out
add
inc
scas
jmp
adc
rorl
jl
test
lcall
div
shl
cld
inc
icebp
repnz
pop
push
cmp
pop
jle
lods
xchg
adc
rorl
xor
ja
movsb
or
fndisi(8087
sti
dec
and
xchg
pop
movsl
sbb
xor
push
sbb
sbb
lock
mov
fwait
sbb
mov
popa
inc
xchg
je
sbb
xor
lods
jg
mov
ret
in
data16
stc
test
mov
dec
rsqrtps
or
js
ja
inc
mov
ror
mov
aam
icebp
out
ret
mov
push
xchg
xchg
mov
call
int
aas
mov
push
jp
shll
data16
mov
out
sub
cmp
pop
cmc
mov
mov
add
mov
in
mov
rcll
stos
jmp
pop
mov
dec
cmp
outsl
cmp
mov
nop
jp
adc
inc
adc
jl
xlat
enter
shr
call
inc
fstl
jp
js
jae
cwtl
mov
or
sub
push
dec
je
mov
mov
cmp
scas
shrl
cmp
or
add
inc
jnp
sbb
or
xlat
shrb
sahf
ret
aas
mov
jge
loopne
je
inc
push
add
lock
lods
into
lock
jne
dec
sahf
loopne
inc
mov
push
cmp
jge
rorl
and
inc
ret
cmpsl
or
mov
cli
shlb
push
test
xor
mov
ret
push
sbb
cmp
movsl
inc
ret
shl
movl
sub
push
jl,pt
shll
xor
cmp
or
in
inc
xchg
ja
pop
fdivp
imul
pop
sahf
jbe
lret
jl
mov
mov
add
pop
je
or
dec
dec
adc
cbtw
xlat
lock
stc
fs
jmp
iret
cmp
shrb
shr
pop
dec
test
sbb
call
jmp
mov
paddw
jle
lea
sbb
mov
pop
mov
dec
lret
sub
ja
jne
add
push
cmpsl
inc
sarb
sub
cmc
popa
movsb
adc
mov
xor
fimuls
imulb
movsb
jne
hlt
aas
push
cmc
mov
repz
mov
cmp
fdivrp
and
dec
mov
xor
int3
or
leave
mov
in
pop
loope
jecxz
fdivl
mov
out
icebp
sbb
lods
imul
adc
xchg
icebp
jmp
adc
lcall
mov
roll
movsl
cmpsb
mov
jnp
pop
jb
xlat
jae
pop
mov
pop
sub
nop
popf
dec
mov
and
jg
mov
jg
fstpt
hlt
fisubs
jo
ds
int3
aaa
adc
xor
pop
loopne
scas
sub
sub
ret
push
fsubs
orb
sub
gs
sbb
cmp
pop
push
nop
adc
popf
ss
push
insl
inc
sub
jbe
imul
lea
loope
add
jne
test
jg
js
in
xor
add
sbb
stc
fsubl
sub
out
mov
lret
and
cmp
mov
loop
mov
lahf
mov
adc
arpl
das
dec
arpl
sub
inc
adc
pop
or
ret
xchg
pop
ret
scas
scas
sbb
mov
fdivp
mov
fsubl
fists
pop
pop
mov
jmp
pop
cs
sahf
test
mov
out
movb
xlat
jo
pop
jo
inc
addb
mov
enter
push
or
xchg
jle
add
sub
xchg
sbb
mov
and
call
xchg
enter
and
jbe
xchg
pop
neg
aas
dec
into
icebp
xchg
lea
adc
jp
icebp
leave
push
aam
inc
loope
xchg
sti
test
gs
sahf
cmp
mov
mov
les
nopl
xor
cmp
push
pusha
inc
mov
scas
mov
mov
mov
xor
inc
push
cmp
mov
mov
in
inc
cwtl
loopne
or
in
pop
ficompl
sbb
and
add
push
adc
shrl
jbe
push
dec
jns
movsb
aam
hlt
sbb
fcomp
rcrl
fnstenv
rcl
cs
mov
call
mov
xchg
aad
aam
shll
into
mov
cld
lcall
ljmp
rcll
pop
mov
mov
and
test
call
test
jle
or
jnp
add
xchg
cmp
xchg
adcl
push
sbb
mov
sti
clc
arpl
mov
js
mov
out
rorb
dec
adc
jle
mov
cmp
and
sbb
sbb
fcmovu
push
sarb
ret
push
sbb
dec
cmpl
inc
xor
imul
add
mov
or
pop
aaa
call
loop
or
xchg
insl
sbbb
push
mov
pop
lea
lret
mov
xlat
shll
push
mov
dec
mov
rep
or
jg
xor
adc
adc
cmp
test
in
cmc
cwtl
mov
call
outsb
push
jp
mov
push
fwait
test
push
loope
push
or
pop
or
xchg
jbe
aaa
popf
aam
xor
mov
push
aam
mov
mov
adc
mov
aam
scas
jmp
jle
cmp
out
xchg
sub
adc
mov
dec
es
aam
es
loop
jmp
dec
fsubl
mov
lock
fistpl
mov
fnstsw
ss
mov
shll
aam
jne
or
sub
stos
xor
push
nop
jnp
xchg
dec
scas
scas
fbld
rorl
ja
push
push
and
sbb
sbb
stos
sbb
lds
dec
aam
inc
outsl
int
mov
addb
ds
ret
sbb
out
cmpsl
push
sbbb
arpl
and
stos
mov
insb
dec
hlt
orl
lahf
in
or
push
push
loopne
or
divb
test
das
ficoms
faddl
rol
enter
mov
mov
pop
and
mov
and
inc
mov
jge
jne
mov
dec
pop
sbb
jne
adc
shl
popa
jmp
mov
xor
clc
xchg
loopne
mov
cmpsb
inc
dec
iret
push
xchg
cwtl
out
push
and
fstpl
dec
mov
cmp
movsb
sarb
xor
in
pop
js
outsb
lret
mov
inc
in
fdivp
add
push
popa
mov
pop
data16
sbb
fists
adc
out
jb
dec
cmp
out
cli
clc
mov
mov
pop
shrl
sbb
xchg
adc
aas
stos
call
mov
es
adc
hlt
xor
add
outsl
adc
movsl
add
jbe
mov
mov
add
or
sbb
popa
fiaddl
mov
push
notl
imul
fdivl
push
jo
sbb
add
pop
je
mov
pushf
inc
adc
scas
adc
mov
jg
lcall
dec
jb
cmpsb
cmp
sub
dec
mov
ja
push
ljmp
ja
mov
stos
xchg
add
jge
cmp
push
pop
sub
pop
lret
fildl
data16
adc
fisubrs
sub
lock
push
in
roll
je
fstpl
push
adc
cli
or
push
pop
pop
inc
imul
aam
push
jecxz
clc
xor
and
ss
scas
mov
cmpsl
loop
xor
imull
dec
shrl
sarl
adc
test
jo
sar
push
push
fistl
mov
xorl
fdivl
cs
mov
mov
push
mov
mov
jmp
mov
insb
mov
adc
mov
enter
add
mov
inc
or
mov
cmpsl
sub
js
pop
cmp
das
das
enter
bound
jo
sbb
inc
mov
into
cld
fwait
add
into
int
pop
inc
mov
in
mov
jbe
ret
sub
xchg
ss
stos
int3
cmp
mov
addr16
cli
xor
daa
mov
push
addr16
es
mov
fbstp
add
push
cltd
ja
out
mov
pop
mov
sub
jle
mov
add
pop
push
outsb
imul
pop
pop
outsb
int
mov
jge
cs
add
and
push
mov
mov
adc
sti
mov
push
movsb
fwait
stos
cmpsl
popl
sahf
into
in
fcmovnbe
hlt
jmp
inc
pop
push
jne
inc
mov
ret
push
pop
push
add
ds
loope
pop
pop
dec
dec
pop
in
jmp
sti
adc
mov
lcall
inc
mov
aas
loope
pop
in
in
add
inc
loop
xchg
cmpb
mov
adc
push
ds
xor
leave
mov
jle
jne
mov
ds
fcmovu
mov
push
jb
cmp
mov
add
aam
xchg
in
and
add
pop
jae
arpl
aad
outsb
xchg
shlb
pop
push
inc
sbb
pop
dec
stos
jo
jmp
nop
js
jle
mov
rcrl
mov
cmp
jle
pop
push
dec
push
jg
xchg
lods
pusha
nopl
in
jmp
add
cwtl
jnp
add
add
maxps
ljmp
lret
jge
sbb
imul
mov
and
in
mov
adc
insl
cmpsl
pop
int
loopne
and
test
mov
add
push
outsb
mov
scas
mov
mov
les
iret
cli
stos
jae
jo
imul
fldcw
in
iret
jo
ljmp
mov
in
es
out
pusha
fistpl
mov
xchg
in
push
aad
inc
push
xlat
ss
aam
cld
stos
arpl
fisubrl
movsl
inc
popa
sbb
sbb
jl
fnstenv
push
jne
push
fucom
mov
xor
xor
movsl
lcall
pop
aas
xchg
mov
test
mov
clc
punpckhwd
in
fwait
fwait
jo
lock
jge
pop
idiv
imul
stc
cmp
sbb
test
jle
mov
lcall
dec
sbb
dec
xchg
xor
clc
in
jl
js
sbb
fiaddl
fcompl
jo
cltd
xor
xor
fists
and
outsb
je
icebp
jg
sub
faddp
and
push
andl
not
mov
popf
push
sbb
mov
std
jmp
xchg
inc
je
fistl
je
aam
pusha
or
in
mov
test
xchg
fdivl
out
insl
insb
shlb
mov
xchg
mov
fistpl
mov
add
test
aas
fldt
dec
and
sahf
int
adc
sahf
fsubrl
push
shll
add
jg
dec
int
test
clc
push
faddl
rcrl
push
das
pop
ret
or
in
mov
faddl
pop
inc
mov
rcr
dec
jecxz
hlt
add
fstps
in
mov
in
mov
or
inc
enter
les
xor
nop
addr16
fbstp
shl
outsb
fs
jnp
arpl
in
repnz
or
mov
enter
jp
dec
das
in
es
inc
sbb
shl
into
cmp
pushf
push
stos
cmp
add
mov
call
push
cmp
mov
je
idivl
adc
add
jns
rcll
leave
mov
hlt
push
and
adcb
rolb
aad
andl
mov
pop
push
pop
popf
xor
sub
jae
xor
ja
pop
cmp
push
push
xor
add
pop
push
xchg
mov
ds
pop
inc
xlat
push
insb
jmp
cmpsl
out
enter
test
inc
scas
stc
ja
lds
fwait
loope
cmc
repz
add
inc
cmpsb
or
lock
mov
popa
movhps
xchg
xor
inc
fistl
and
ret
insb
jb
je
add
inc
inc
mov
jbe
lahf
xor
pop
xor
fcmovbe
adc
fstpl
rorl
out
inc
and
into
xchg
push
and
out
fstl
div
pop
mov
icebp
loopne
and
leave
fisubl
lea
push
sbb
cmp
mov
jae
insl
pop
jle
jno
sbb
pop
ds
es
jbe
mov
cmp
xchg
mov
add
pop
cmp
in
loopne
shl
negb
repz
pop
shlb
inc
pop
pop
mov
mov
btc
pop
inc
pop
lods
pop
scas
mov
dec
rcrl
mov
out
scas
ret
ret
mov
or
push
mov
mov
aaa
mov
cmp
cs
inc
dec
sbb
cmp
lea
fwait
push
and
or
ljmp
xor
into
mov
xorb
cmpsl
xchg
xchg
je
and
movsb
pop
add
loop
int
fdivp
add
cli
loop
lds
adc
rcr
lods
out
jnp
sbbb
repnz
cmp
inc
rcrl
scas
pop
ret
pop
std
std
inc
stc
or
push
test
addr16
add
outsl
loopne
pop
jp
xchg
mov
and
mov
sub
cltd
and
sub
dec
mov
insb
fcomps
pop
xor
call
pop
push
test
xor
jo
jo
mov
xchg
cmpsl
ror
mov
in
out
xlat
cmpsl
cmpsb
sub
mov
add
mov
les
addr16
gs
sahf
push
push
dec
lock
xor
cmp
rcrl
cli
jecxz
sar
sahf
jecxz
add
jecxz
js
push
xor
loop
mov
xchg
xchg
loope
insb
lahf
mov
out
jns
push
mov
ret
push
ret
xchg
imul
or
int
loope
dec
sbb
xchg
daa
dec
fcoml
test
mov
push
addl
add
pop
mov
cmp
jbe
insb
xchg
je
test
les
mov
dec
or
mov
sbb
aad
in
aam
inc
dec
cwtl
cmp
sub
pop
jp
fwait
cmp
fistpll
cmp
mov
push
push
divl
xchg
lret
and
jle
push
addr16
jbe
ficomps
add
jno
xchg
mov
stc
fcompl
cmpsl
arpl
xlat
jns
cmpsb
pop
mov
xchg
aad
or
cmpsl
pop
lret
inc
push
dec
pop
mov
mov
push
pop
xlat
ret
fdivrl
pusha
lea
fstpt
jg
dec
sbb
and
jb
minps
jno
cs
lds
mov
xchg
call
call
stos
push
cmp
jg
in
jb
stos
cmp
and
hlt
ret
je
jp
pushf
or
xchg
jbe
adc
jns
lods
test
pop
add
jmp
clc
push
pop
sbb
fwait
push
adc
pop
adc
push
test
xor
aaa
sbb
mov
sarl
cmp
fs
jno
adc
mov
loop
loopne
mov
pop
lds
xor
or
outsl
xlat
mov
mov
aam
adc
cwtl
arpl
scas
outsb
arpl
lods
jo
jno
push
loopne
dec
ret
xor
pop
jg
mov
leave
mov
dec
mov
push
mov
mov
jae
into
adc
dec
xlat
incb
and
sbb
inc
enter
cli
add
fstl
js
lods
xor
mov
mov
mov
ja
mov
andb
sub
addl
and
je
mov
adc
pop
ret
add
daa
fcomi
mov
mov
imul
mov
xchg
inc
push
lods
jge
xor
xchg
adc
insb
call
mov
mov
test
push
mov
fisttpll
fdivrl
cmpsb
pop
pop
out
addr16
jmp
sbb
fists
or
data16
lods
mov
nop
cld
inc
ret
sbb
lret
lcall
add
ret
cmp
jle
mov
pop
clc
lods
adc
inc
daa
sbb
out
clc
sbb
jns
lods
fwait
xor
movl
rcrl
inc
sbb
dec
lods
xlat
add
arpl
insb
ss
pop
cmp
xor
inc
push
cmpsb
into
pusha
add
lds
or
cmp
jp
xor
push
rolb
push
mov
fisttpll
xor
insb
les
cltd
movq
mov
inc
mov
int3
xchg
test
inc
mov
cmp
fsubr
div
push
pop
push
dec
sbbl
cmpsl
lea
jecxz
shll
fisttpl
inc
pop
insb
out
in
or
pop
push
push
inc
data16
jge
in
pop
pop
cmp
mov
xchg
xor
mov
dec
sub
add
daa
push
sti
rcrl
sbb
or
sub
pushf
ljmp
mov
sub
pop
popa
lods
divl
int
jl
mov
mov
out
sbb
cli
push
addr16
icebp
gs
bound
cmp
cmp
mov
in
ljmp
fcmovu
push
es
cmp
idivl
syscall
push
andl
sbb
adc
jno
or
jle
fmuls
dec
mov
jle
push
mov
inc
out
daa
sbb
fwait
cld
pop
sbb
test
mov
push
xchg
push
bound
repz
jmp
pop
add
scas
mov
ficoml
cmpxchg
mov
fimull
test
mov
inc
jl
and
xchg
and
movsb
pop
cli
loopne
jecxz
imul
pushf
add
cli
and
mov
or
sub
xchg
andb
roll
es
adc
aad
jno
cmp
jns
jmp
cmp
fcoms
out
and
test
cmp
icebp
xchg
aad
jbe
adc
mov
lods
push
pop
xlat
sub
xchg
lods
adc
mov
pop
mov
dec
sbb
mov
icebp
and
cmp
cli
adc
xlat
mov
mov
mov
push
les
leavew
mov
icebp
rcrb
push
mov
call
add
aad
jb
insl
jne
dec
mov
push
hlt
fucom
loopne
fistpll
jl
sahf
sbb
or
fbstp
push
movsl
dec
std
lcall
sbb
fnsave
aad
and
out
adc
outsl
mov
ret
or
andb
dec
cmp
clc
fstpt
mov
xchg
fstl
adcl
in
mov
mov
push
xchg
pop
mov
xlat
repz
adc
mov
loope
jle
sub
and
add
mov
pusha
dec
jmp
andb
and
rol
outsb
ljmp
mov
cs
add
test
jo
pop
lea
push
cmpsl
pop
xorl
sbb
orb
jecxz
icebp
inc
jno
sbb
cmpsb
lds
sarb
inc
push
xor
lret
xchg
pop
out
or
adc
mov
js
outsl
je
shlb
imul
dec
adc
loope
call
ds
jecxz
xor
xorb
fsubp
mov
aad
mov
test
cs
icebp
test
sub
pusha
adc
das
sub
scas
pop
cli
jae
jl
mov
cmp
mov
in
mov
scas
dec
mov
test
push
les
mov
pusha
mov
mov
in
adc
cmpsl
imul
test
dec
insl
fsubs
notb
movl
pop
mov
rolb
sub
nop
lret
adcb
push
cli
aad
mov
adc
mov
daa
cld
cmp
xor
push
out
popa
dec
dec
xchg
jae
mov
or
pop
insl
xor
rcrb
popa
jl
cs
xchg
popa
ljmp
subb
mov
push
push
in
sub
dec
fistpl
les
iret
mov
mov
pop
repnz
mov
mov
adc
mulb
sbb
mov
icebp
dec
cmpsl
gs
test
xchg
sub
popf
xchg
sbb
mov
dec
lea
pusha
add
xor
fsubp
add
testb
xor
pop
sub
loope
mov
outsb
outsl
xlat
cmc
icebp
imulb
in
mov
inc
insb
and
call
cs
enter
shrb
cmpb
loopne
movsb
push
pop
ret
inc
jge
and
and
sbb
jge
jbe
mov
mov
test
cltd
add
pop
jmp
je
adc
sbb
ss
in
shlb
cmp
in
inc
sub
fadd
jg
andb
pop
int
daa
mov
stos
hlt
push
mov
jb
jbe
out
loopne
jne
lahf
xor
orb
add
jl
mov
sbb
jmp
jbe
pop
fnstcw
ljmp
push
push
fdivl
jnp
movsb
scas
outsb
mov
jne
test
dec
inc
mov
js
jbe
push
aad
int3
int
jne
ljmp
jmp
mov
jnp
sbb
repz
mov
jg
xor
push
out
push
mov
repnz
dec
pinsrw
cmp
stos
dec
sbb
jo
rcl
popl
enter
adc
aad
clc
roll
mov
adc
arpl
lock
mov
dec
cmpsl
in
xor
adc
push
data16
ja
insl
xchg
mov
sub
cmp
insb
out
bndldx
mov
rcrl
fidivl
adc
xor
xchg
cld
loope
shl
xor
sbb
rcl
xor
dec
out
push
fnstenv
idiv
jge
shrl
mov
mov
out
insb
jnp
mov
lret
xchg
loopne
pop
cmp
inc
sub
pop
shr
out
fwait
jnp
or
decl
hlt
aad
mov
xchg
cwtl
jp
cmp
loope
xchg
rcrb
js
cwtl
sbb
ret
cs
icebp
xchg
fiadds
pushf
xor
mov
mov
lcall
dec
into
cmp
mov
fmull
fcoml
mov
aam
sub
xchg
xchg
push
ja
pop
mov
mov
sbb
xchg
dec
stos
shrb
jp
add
ret
or
stos
popf
push
sbb
paddusw
out
mov
or
lock
cmp
stos
push
or
pop
rcl
punpckhbw
mov
add
into
rorb
lods
popa
stos
roll
inc
pop
sbb
sbb
cmp
inc
lods
out
js
das
ljmp
fisubrl
popf
dec
cltd
lret
mov
clc
inc
je
inc
and
fwait
mov
adcl
rolb
outsl
js
clc
push
xor
test
cmpsb
popf
lcall
lock
mov
xchg
mov
xbegin
ret
dec
inc
test
outsl
jp
push
divb
aam
dec
mov
maskmovq
idivl
int3
mov
xor
shrl
std
shll
cltd
mov
daa
fxrstor
hlt
imul
aaa
jnp
or
xor
ds
mov
rcrl
cmc
xchg
hlt
faddl
jo
cmc
inc
inc
xlat
mov
jle
fdivrs
fistps
fs
cwtl
pop
cmp
inc
in
inc
adc
imul
aaa
mov
mov
cmp
sub
jge
hlt
mov
outsb
and
push
xchg
icebp
icebp
loope
sub
adc
sub
push
test
lods
xchg
cmp
arpl
lcall
in
jl
sbb
mov
insb
dec
push
out
dec
or
je
movaps
std
test
sbb
aas
adc
xchg
mov
add
outsl
sub
mov
outsb
inc
mov
pop
je
dec
inc
and
sbb
test
out
cmp
lret
or
hlt
nop
mov
hlt
or
mov
imul
jecxz
or
mov
lock
cmpsb
jge
push
fstp
mov
stos
lret
adc
sub
ds
gs
int3
dec
inc
lds
addb
sarl
adc
push
test
adc
jle,pt
and
xlat
rolb
sti
mov
lcall
stos
sbb
movsl
pop
adc
jg
enter
insl
movsl
call
xor
shll
xchg
inc
fxam
cli
hlt
inc
sbb
lods
lock
icebp
scas
cmpsb
mov
mov
jmp
sbb
pop
pop
test
cmpsl
enter
mov
mov
imul
lea
lcall
jg
test
popa
test
shlb
in
sbb
xor
xor
jg
mov
fistpl
aas
popl
je
dec
inc
inc
hlt
push
aas
add
movsb
add
movb
sub
push
inc
xlat
inc
xlat
push
pop
dec
cmpsl
loope
mov
rcr
mov
daa
rcrl
rcr
aam
loop
cmc
xchg
lret
push
sub
lods
loope
std
inc
add
imulb
mov
mov
fsubrl
adc
outsb
std
cmp
inc
sub
sbb
dec
adc
jo
dec
stos
jnp
xchg
sbbl
mov
jne
je
push
fdivl
jl
inc
test
call
xchg
sub
call
jbe
pop
ljmp
hlt
das
xchg
mov
xor
jns
or
outsl
es
in
outsl
jecxz
push
int3
das
xlat
push
sub
xor
push
adc
xchg
ret
push
jle
movb
fwait
xor
lock
and
sbb
aaa
mov
jl
daa
out
mov
dec
dec
imul
ficompl
mov
inc
aaa
andb
testl
div
xorb
inc
dec
inc
cmpsl
push
js
in
mov
loope
dec
jmp
inc
fisttpll
jo
adc
icebp
insl
shl
xchg
add
jl
iret
adc
cltd
neg
adc
outsb
ljmp
out
insl
jecxz
push
add
push
push
jb
jge
mov
data16
pop
xor
push
inc
cmp
mov
mov
jle
mov
push
scas
mov
or
pop
pop
ss
sahf
arpl
outsl
insl
jmp
sahf
adc
dec
add
insl
mov
xor
dec
jo
pop
sub
test
adc
movsb
je
ja
ret
and
inc
ret
lods
stos
mov
arpl
stos
fnstsw
jmp
jns
cmp
mov
dec
xor
cmp
cli
cs
inc
adc
inc
loopne
sub
lea
inc
or
inc
cmp
clc
scas
rolb
pop
xor
jecxz
pop
push
mov
mov
addr16
xchg
out
cmp
movsb
push
fisttpll
clc
push
cmp
mov
xor
fcom
jle
das
stos
pop
xor
inc
xor
sbb
test
and
or
sbb
mov
sbb
push
sbb
mov
stc
jecxz
mov
clc
push
fadds
jmp
leave
roll
shl
outsl
jbe
adc
imul
pop
test
xlat
pop
pop
pop
ret
pusha
sti
call
pop
pop
mov
and
mov
pop
mov
push
addl
jo
lock
pop
clc
icebp
pop
mov
xor
push
pop
dec
dec
jecxz
push
shl
xchg
xlat
hlt
idivl
dec
jmp
ja
bound
mov
dec
jp,pn
test
insb
mov
imul
in
mov
nop
add
add
mov
mov
jge
xchg
add
mov
cld
jge
push
lahf
pop
push
mov
sbb
jmp
push
imul
ds
lcall
pop
push
push
ret
add
push
and
sarb
inc
cmp
push
in
or
mov
mov
popf
popa
adc
cmovbe
jmp
add
jmp
dec
sub
enter
or
sub
jmp
mov
fisttpll
and
loop
jge
je
cmp
sub
adc
mov
scas
xorl
cmc
cs
rcll
and
aam
inc
adc
lret
gs
popf
cmp
fucompp
mov
or
sbb
call
sarl
rclb
test
in
mov
popa
jp
call
push
bound
add
fdivrl
cmp
pop
and
pop
imul
push
dec
sub
adc
mov
sahf
in
xor
andl
jmp
xorb
xor
in
scas
repnz
jb
sub
jmp
and
ds
pop
push
insl
mov
mov
icebp
fs
mov
out
fsubrl
push
arpl
jo
call
pop
push
cmp
jns
mov
mov
push
test
inc
xlat
cmp
imul
out
es
int3
and
push
lahf
sub
or
add
stos
mov
dec
mov
dec
rolb
jae
sarl
dec
lea
es
scas
mov
test
fnstsw
shll
loopne
in
lahf
subb
lock
cmp
pushf
sti
sbb
cld
pop
shlb
mov
ret
lods
jmp
fwait
adc
lretw
mov
enter
arpl
add
repz
data16
std
xchg
in
outsb
pop
fnsave
push
sbb
ret
out
in
ss
mov
ret
clc
dec
mov
xor
lea
dec
jmp
mov
cmp
insb
icebp
add
cs
cmp
cli
add
jns
in
push
dec
pop
popa
call
sbb
jne
dec
popf
rol
jecxz
inc
inc
das
mov
inc
xor
shlb
inc
mov
xchg
inc
xchg
push
xor
idivb
and
xor
jle
fistpl
push
mov
and
inc
pop
rolb
fstp
and
jg
loop
int3
add
stc
sbb
add
adcb
xlat
mov
and
cld
cmp
mov
stos
inc
mov
inc
xchg
pushf
aam
push
outsb
pop
xor
jp
hlt
mov
or
gs
push
mov
pop
and
inc
cmc
pop
test
sbb
xchg
and
arpl
push
iret
aad
cmpsb
std
mov
push
pop
jns
shufps
pop
push
or
dec
jb
gs
fsubrp
push
add
or
push
imul
xchg
enter
addr16
ds
mov
sub
pop
sbb
bound
sbb
rolb
movsl
mov
je
xchg
cmp
enter
subl
jbe
cmp
mov
ja
mov
pusha
in
ret
inc
pop
pop
jg
fmul
mov
push
push
sub
aam
mov
jne
arpl
lea
inc
shlb
sbb
inc
adc
into
add
dec
hlt
sub
inc
dec
jecxz
xchg
daa
int
lods
lods
inc
cli
sub
pop
jecxz
inc
mov
dec
fildll
jge
stos
nop
das
add
or
adc
aam
inc
lahf
or
inc
stos
sbb
loopne
mov
rcll
cmp
scas
mov
jo
pusha
jp
add
test
xchg
sbb
ljmp
test
orb
jecxz
xchg
mov
mov
sub
pop
insb
xchg
mov
mov
push
push
sbb
ljmp
out
arpl
xor
movsb
mov
popf
xchg
mov
stc
sar
add
mov
mov
adc
ljmp
stos
nop
sahf
xlat
in
cwtl
mov
mov
shl
aas
inc
jne
cli
outsb
xchg
ds
pop
roll
pop
jae
cmpsb
push
or
sbb
cmp
aaa
fwait
pop
stc
or
cmp
lahf
mov
push
or
loopne
je
sub
fimuls
xor
outsl
jmp
je
sahf
add
fcomps
mov
nop
and
inc
inc
lea
insb
cs
fidivrs
pop
cli
mov
add
xchg
or
hlt
psllq
fdivrs
imul
movl
push
lea
test
ljmp
mov
insb
das
mov
cmp
xor
jecxz
stos
imul
inc
jecxz
dec
scas
cltd
ljmp
fisttpl
pop
mov
and
sub
nop
ficoml
push
jecxz
movsb
sub
sbb
mov
test
mov
jmp
sbb
sbb
cwtl
and
call
mov
adc
mov
push
rcll
dec
xor
and
xor
out
aas
shll
insb
dec
pop
pop
popa
and
shl
in
jl
adc
js
mov
add
inc
mov
das
adc
add
sbbl
fstpt
mov
mov
xor
xchg
sarb
sbb
sti
int
mov
popa
test
pop
jno
cmp
enter
lods
pop
sbb
fdivrl
jg
roll
jle
lret
mov
in
jl
aam
scas
das
add
sub
inc
xchg
mov
cli
scas
ss
pop
dec
pop
lcall
hlt
mov
lahf
aas
int
push
loopne
aaa
orl
sti
ss
int3
sub
pop
ljmp
adc
ficoms
insl
inc
and
push
dec
aaa
rorl
jnp
sti
add
fildll
nop
aad
xor
es
add
mov
ja
mov
les
je
fmuls
out
sbb
mov
mov
ffree
test
stc
cli
mov
mov
lock
jae
pop
jbe
mov
jno
sub
mov
sbb
adc
scas
and
insb
adc
in
mov
pop
xor
cmp
fnsave
rcl
ret
inc
cmp
fistpll
xor
cmc
rolb
dec
out
pop
and
fwait
cmp
push
ficompl
push
mov
stos
call
rcr
lds
mov
rolb
mov
loop
int
fimull
in
sbb
popf
inc
cmp
push
hlt
or
sbb
jl
xor
mov
shlb
cli
icebp
fs
pop
dec
xchg
ja
sti
and
fisubrl
jp
js
mov
mov
daa
pushf
fs
das
cmp
push
jns
sbb
cmp
sbb
add
clc
rclb
bound
jbe
ds
mov
adcb
mov
ds
xlat
popf
dec
aas
mov
sbb
dec
push
cld
mov
hlt
aam
out
into
mov
sahf
mov
cmp
xchg
mov
stos
cmp
sti
enter
pop
jecxz
stos
not
pop
ficoms
pop
pop
sarb
jge
out
inc
je
shrl
imul
shll
data16
push
sbb
pop
push
lea
pop
dec
jae
or
cmp
xchg
xor
iret
stc
mov
loope
cmc
jno
std
pop
mov
adc
or
mov
xchg
mov
and
and
pop
adc
loop
or
lods
das
mov
mov
xor
std
dec
pop
sbb
lods
jecxz
jo
cmpxchg
or
mov
dec
add
scas
loope
sarl
and
insl
cmp
jle
dec
loope
cmc
mov
cmp
push
inc
sbb
pusha
shlb
stc
jae
push
ds
pop
push
divl
cmp
mov
scas
jge
cmpsb
popa
jne
roll
adc
in
leave
ret
scas
add
mov
pop
clc
xchg
push
jb
add
test
lds
enter
out
xor
leave
leave
mov
xchg
mov
arpl
repnz
cmp
ret
xor
repnz
lock
cwtl
sub
mov
jne
cwtl
and
out
jmp
pushf
pop
xchg
jg
or
jp
xchg
rolb
faddl
std
add
pop
ljmp
fdivs
jne
jg
mov
lods
cs
fdecstp
mov
sub
sub
and
sbb
lods
sbbl
loop
push
or
inc
mov
icebp
fisttpll
cmp
cld
ljmp
push
mov
in
inc
scas
int3
stos
in
sub
mov
pop
fildl
jbe
jb
movsl
lahf
arpl
mov
jmp
jl
dec
dec
dec
std
dec
push
dec
xchg
lret
je
outsb
pop
cmp
pop
adc
pop
sub
aad
fnstenv
das
ficomps
cs
push
lods
imul
aaa
push
push
mov
sbb
xor
push
push
stc
paddsb
outsb
mov
insl
in
mov
fdivrl
fadds
lock
ja
scas
imul
fistl
xchg
mov
shll
and
mov
or
or
mov
shlb
xor
or
int3
outsl
inc
mov
mov
and
push
cli
mov
testb
insb
bnd
fcmovu
sbb
xor
enter
xor
jmp
int3
popa
push
push
cmp
and
adc
sbb
roll
negb
xor
lret
iret
iret
cli
mov
mov
aaa
ret
dec
jo
sub
pop
ret
mov
pushf
fldenv
mov
nop
ffreep
lds
mov
dec
loope
push
adc
js
sbb
test
or
cmp
cmp
sub
in
pop
loop
pop
jo
adc
cmc
enter
in
xchg
insl
dec
sbb
pop
sub
clc
aas
movsl
rolb
sti
stos
les
xchg
fwait
adc
jo
cltd
imul
and
je
xchg
xchg
mov
cmp
or
sahf
jo
jne
aas
sbb
xor
es
rcll
mov
dec
in
xorb
mov
cmpsl
pop
jnp
or
jb
mov
jge
push
stos
or
pop
scas
icebp
push
aaa
inc
hlt
mov
and
sarb
sahf
sbb
mov
inc
fimull
add
push
mov
outsl
jle
fwait
jnp
xor
sbb
xchg
je
cmp
mov
out
mov
and
push
inc
dec
add
imul
mov
cwtl
sbb
sub
scas
adc
jp
lahf
dec
xchg
out
xchg
inc
lahf
lea
into
in
sbb
mov
sahf
push
push
sub
pop
cmpsl
outsb
pop
xor
cld
fdivs
push
leave
jo
mov
jl
movsb
cltd
xorl
cmpl
bound
add
aaa
push
add
pop
movb
ss
out
cmp
loopew
sub
xor
lret
cmp
shll
cmpsb
fdivs
push
sbb
mov
sub
inc
ret
not
cmp
xor
rcl
push
fistl
lahf
sbb
aad
mov
push
push
pop
mov
xor
and
loop
pop
xchg
cltd
add
ss
push
pop
mov
leave
mov
pop
fstl
rolb
andl
xor
jo
add
loopne
adc
mov
adc
enter
repz
dec
adcl
mov
fdivrl
movsb
mov
cmp
nop
sub
push
sbb
lea
ljmp
fsubrl
stc
shlb
lods
lcall
mov
add
dec
fsubrl
fstpl
dec
cwtl
mov
mov
ds
add
in
sarb
loop
xchg
jl
out
mov
lea
divl
adc
fcompl
in
sub
sub
fsubl
nop
int
mov
int3
pop
ja
cmpsl
jg
add
xor
mov
push
or
mov
test
das
popa
dec
scas
push
test
mov
clc
mov
addr16
cmp
and
or
jns
shlb
fdivl
popa
push
stc
jge
lea
xchg
pop
loope
sbb
and
leave
fistpll
add
loope
adc
orl
hlt
xor
jg
jae
shlb
loopne
pusha
xor
sub
mov
aas
out
or
es
sbb
mov
ret
add
xor
les
adc
dec
fisttps
push
cmp
push
inc
sbb
std
iret
jbe
xor
stos
mov
xor
push
ds
or
mov
fstpl
aas
clc
out
adcb
ret
jbe
mov
mov
jmp
loopne
adc
or
loope
jmp
out
mov
jo
clc
mov
lds
popa
jbe
pop
pop
enter
inc
dec
mov
add
sahf
mov
push
testb
inc
outsb
fcomps
cmp
popf
pop
sub
sub
roll
gs
out
mov
loope
imul
clc
mov
test
or
mov
cs
mov
bound
repz
inc
or
sub
int
add
ljmp
mov
jg
out
pop
ret
mov
imull
push
es
jno
jbe
lock
mov
pop
jmp
lods
mov
pop
inc
hlt
cmp
xchg
push
aam
mov
pmuludq
jecxz
pop
icebp
push
add
mov
fsubl
orl
pushf
push
sub
push
pop
inc
aas
mov
test
push
fxch
inc
pop
or
mov
pop
mov
push
lret
push
xchg
imul
cwtl
or
cli
push
push
fcmovne
inc
hlt
cmpsb
lods
xchg
jno
into
push
mov
insb
daa
lret
ss
bsf
testl
xchg
shrl
in
mov
pop
and
dec
sbb
je
and
jp
jb
out
jmp
movsb
inc
stos
stos
pop
mov
pop
ljmp
lods
sbb
push
jl
call
mov
fwait
cmpsl
mov
xor
aaa
pop
hlt
les
pop
add
insl
jmp
lods
xchg
push
and
inc
inc
loopne
bound
inc
sbb
pop
push
lcall
add
repnz
adc
mov
aas
lcall
idivb
mov
mov
call
and
stos
xchg
out
inc
out
mov
cltd
or
sbb
push
popa
push
aam
daa
cmp
lret
add
or
std
sbb
push
cwtl
and
mov
call
xchg
jns
cmp
ljmp
cwtl
das
jp
add
movsb
fsubrl
pushf
push
dec
cli
test
ret
xor
lahf
xorb
xchg
js
outsl
sbb
enter
rclb
lods
and
or
inc
fcomi
xchg
outsb
cmpsb
scas
mov
mov
scas
mov
mov
jnp
push
rcll
loope
daa
xchg
inc
inc
xchg
mov
jge
arpl
adc
loope
push
lock
mov
popf
mov
fidivs
sbb
or
jo
movl
mov
xor
mov
popl
ss
pop
push
mov
adc
std
sbb
cs
mov
lret
icebp
and
mov
ss
sbb
cld
cld
pop
mov
sbb
fidivrs
sarb
mov
mov
push
fisubrl
call
ffree
push
es
bound
xor
xchg
sbb
sahf
das
push
xchg
fstl
jne
test
pop
pop
pop
rorb
aad
test
imul
jl
testl
inc
pop
outsb
je
push
and
out
jno
push
push
inc
lea
insb
cmp
pusha
mov
push
pop
ljmp
dec
pop
fcoms
nop
xor
shrl
xor
push
add
pop
sbb
pop
adc
xchg
stc
add
fidivrl
fs
xor
cwtl
icebp
mov
inc
sarl
sbb
push
add
pop
or
mov
es
add
mov
gs
pop
or
lock
mov
cwtl
xor
adc
insb
mov
loopne
or
cli
pop
mov
xchg
inc
je
std
and
xchg
clc
inc
jmp
ret
mov
cmpl
push
iret
add
mov
arpl
js
loopne
cmp
inc
mov
sbb
cltd
mov
pop
sbb
jl
popa
ss
jne
push
mov
xor
cmp
test
mov
sbb
add
lock
enter
lret
outsb
mov
cmp
pop
insb
gs
shrl
inc
pop
push
ror
xor
xorl
insl
es
mov
xchg
ljmp
pushf
mov
leave
pop
jo
call
inc
and
pop
repz
lods
call
mov
ds
mov
cmp
filds
sbb
lock
hlt
testb
jmp
sbb
or
or
xchg
mov
addb
jae
cld
jns
xor
mov
push
jno
push
int
aad
rcr
and
inc
sbb
clc
lcall
jecxz
mov
int3
mov
fisubrs
mov
ficompl
insl
out
jo
mov
repnz
pop
xlat
hlt
call
imul
fldt
imul
push
inc
sarl
jecxz
jge
int
icebp
aad
cld
dec
xchg
orl
sbb
out
fwait
test
inc
sbb
and
icebp
div
inc
sbb
jns
orl
jo
sub
pop
ja
jg
jbe
jmp
sahf
adcl
mov
xlat
js
je
xor
mov
jl
lret
mov
adc
push
mov
or
adc
pop
gs
inc
je
lahf
fwait
adc
mov
pop
push
jnp
popl
sub
lock
aaa
lock
ds
mov
cmc
shl
push
ds
movsb
mov
lcall
ret
mov
mov
mov
cmp
std
dec
nop
cli
icebp
sub
incb
adc
cmp
int
jae
dec
les
pop
jmp
fnstenv
fildl
test
fdivl
xchg
sub
scas
outsl
pop
sub
jp
loop
int3
or
aas
jl
or
pop
lds
pop
mov
in
xchg
mov
and
andb
push
cwtl
loopne
and
das
aas
out
mov
mov
mov
and
ret
add
testb
stc
fistps
cmpsb
pusha
mov
push
push
pop
mov
aad
loopne
inc
jl
and
xor
enter
lcall
lock
add
test
loopne
out
lret
fs
out
mov
inc
jno
in
lds
inc
xor
xchg
cmp
call
mov
lods
jbe
ret
add
and
inc
mov
pop
ja
xchg
aaa
cmp
mov
add
rclb
dec
and
ss
fwait
loope
cld
in
jae
pop
push
hlt
repnz
adc
add
xor
jae
daa
js
xchg
dec
nop
dec
ret
lea
test
and
mov
sub
shrb
and
pfnacc
push
jbe
lods
dec
shrl
mov
dec
xor
lea
outsl
imul
xor
jge,pt
scas
jmp
xchg
jne
xchg
aam
mov
push
imul
jns
mov
add
cmpl
mov
in
pop
mov
popa
call
sbb
jle
std
cmp
pop
jp
pop
xor
std
mov
mov
jle
in
in
popl
adc
mov
mov
loope
sti
aam
sub
and
dec
jne
cltd
sub
fnstsw
sbbb
lods
stos
or
je
xchg
lret
push
sub
pop
inc
mov
rcrb
js
outsl
add
cld
cmpsw
das
fwait
push
mov
in
add
out
outsb
jns
aad
inc
sub
jmp
sbb
sub
dec
or
adc
push
dec
mov
sub
and
out
fnstcw
movq
cmp
or
inc
mov
mov
mov
pop
jle
add
out
push
je
inc
cmp
lods
andl
or
inc
cmp
loop
mov
roll
push
ret
out
sahf
mov
mov
xchg
bndldx
mov
neg
rcrl
mov
jnp
dec
inc
mov
insl
lods
xchg
mov
xchg
das
insl
pop
lcall
imul
adc
pop
push
adc
es
push
xor
lret
mov
jbe
rorb
pop
sti
addr16
stos
mov
adc
or
in
movsl
and
lock
mov
popa
bound
stos
stos
mov
mov
jge
jle
inc
push
sub
pop
stos
imul
mov
pop
call
addl
jp
std
aaa
into
mov
loopne
dec
jb
adc
mov
xor
xor
mov
call
sbb
test
js
jne
jl
lods
xchg
out
and
outsl
arpl
pop
gs
sbb
push
mov
insl
js
pushl
cld
mov
jo
jno
insl
sbb
xchg
mov
jne
cmp
cltd
add
out
sub
unpckhps
push
jbe
loop
mov
push
xchg
sahf
data16
cmp
fiadds
jo
adc
jp
movsl
mov
xor
pop
mov
in
lcall
aad
pop
pop
inc
pop
je
pop
stos
mov
dec
insl
bound
imul
inc
test
scas
cmp
mov
jecxz
fildl
sbb
jne
aas
rcl
scas
std
call
mov
pop
mov
shrb
stos
lcall
je
push
loop
adc
inc
decl
mov
cmp
sub
loop,pn
lcall
xchg
clc
xor
or
xor
push
fsubrl
mov
sub
sbb
add
jle
sbb
jecxz
pop
and
mov
dec
adc
jge
shrl
cmp
call
repz
mov
pop
dec
ja
pop
les
sub
jmp
push
pop
loop
dec
adc
xchg
mov
mov
xchg
adc
mov
lock
xchg
test
push
mov
dec
std
push
sbb
sub
inc
mov
loop
or
cli
cmp
arpl
mov
push
nop
rolb
ficompl
push
cltd
mov
shl
divl
pop
xor
cmc
mov
sbb
lahf
mov
push
push
xor
ljmp
mov
jbe
inc
adc
sbb
adc
into
dec
xor
adc
pop
in
rcll
inc
add
call
mov
and
and
ret
jl
or
or
or
shll
fs
xor
xor
inc
sbb
lret
push
rcll
or
mov
fwait
orb
dec
pop
sbb
pop
out
loop
lcall
aas
test
mov
xlat
mov
jge
insl
lods
jmp
jbe
hlt
mov
int
mov
mov
cmp
daa
sbb
cs
daa
cld
fsubrl
mov
ss
pusha
add
mov
hlt
mov
outsl
hlt
jnp
gs
fdivs
enter
cmp
push
adc
testb
repnz
sti
roll
sub
xchg
push
in
stos
stos
mov
daa
inc
jle
and
inc
mov
cmpsb
sbb
xor
lcall
adc
pop
call
fisttpl
adc
mov
jmp
ret
adc
pop
jne
or
pop
orl
push
idivl
xor
fcomp
jge
mov
adc
mov
mov
gs
inc
mov
xor
inc
call
jle
in
gs
test
stos
out
dec
loop
sbb
inc
fmul
fwait
mov
imul
add
xor
or
push
jno
popf
mov
cwtl
jns
outsl
int3
mov
rcl
and
and
cmpb
imul
mov
push
test
out
mov
pusha
cmp
or
jae
dec
fwait
popa
inc
pusha
push
fst
insl
imulb
jae
adc
outsl
hlt
mov
aaa
push
sub
in
sub
cmpsb
enter
and
ret
pop
xlat
insl
mov
add
adc
loopne
xchg
jmp
in
and
sahf
sbb
cmp
out
push
call
or
mov
sbb
add
stos
xchg
fistps
sahf
std
jbe
rorb
pop
or
out
inc
cmp
testl
in
or
shl
mov
push
xor
cmpsl
push
loop
pop
jp
js
cltd
xchg
fbld
das
push
jle
fs
push
fildll
mov
cmp
jnp
add
and
test
lcall
inc
push
xor
div
mov
addr16
mov
jmp
pop
mov
push
lret
xchg
jmp
mov
adcb
sarl
frstor
jb
xor
loop
loope
fisttpll
aas
or
adc
loop
sub
scas
xchg
mov
aad
sbb
add
repnz
jo
jne
sbb
movsl
into
pop
stos
imul
xchg
loopne
sysenter
aaa
mov
inc
adc
mov
rorl
int
push
out
pop
mov
ret
xchg
test
push
pop
pop
push
mov
dec
mov
cmp
out
mov
xchg
jae
jb
xor
ljmp
adc
loopne
loop
xor
test
movsl
mov
add
pop
jne
sub
sub
lea
sub
in
inc
clc
or
or
sbb
orl
jne
xchg
pop
jnp
sub
xlat
rclb
adc
adc
or
xor
jb
fisubs
popa
rcl
mov
inc
ret
cmpsl
insb
adc
andl
xor
push
push
clc
lock
ret
mov
ljmp
sub
cwtl
divb
jle
or
add
and
cmc
mov
mov
cmp
movsl
arpl
fnstenv
mov
xor
popf
cmpsl
lret
pop
out
mov
inc
or
add
insl
dec
xor
test
stc
add
rcr
testb
xchg
mov
adc
in
jnp
xchg
sbb
arpl
dec
mov
sti
fsub
lods
loop
adc
and
nop
cmp
jmp
nop
test
or
pop
jbe
xchg
das
icebp
mov
cmp
add
popf
jecxz
pop
stos
pop
shll
lcall
insb
fs
mov
imul
in
rolb
and
pop
pop
mov
cmpsb
repnz
dec
pushf
cld
rorb
mov
xchg
cmp
push
pop
mov
ds
cmpsb
dec
in
pop
sbb
and
mov
xchg
lcall
pop
xlat
pop
sbb
test
push
mov
jecxz
add
movsl
ret
xor
mov
aas
imul
pop
insb
adc
cpuid
leave
mov
out
daa
cmp
pop
add
mov
inc
cmovno
in
js
fnstsw
mov
mov
pop
xchg
stos
dec
pop
ficoml
cli
or
sbb
push
jg
fcoms
pop
mov
mov
mov
sarb
scas
mov
out
lds
push
mov
ret
test
sbb
mov
je
jecxz
and
stos
push
push
pop
rorb
adc
sub
add
jecxz
aad
pop
inc
mov
or
aad
and
cwtl
icebp
or
icebp
push
and
lods
push
loope
lret
and
movsl
loope
aad
add
pop
cmp
push
sub
adc
inc
mov
and
shrl
clc
pop
pop
imul
sub
lds
adc
addr16
mov
jp
sbb
ret
pop
adc
cmp
dec
add
lea
mov
ret
int
xor
rcll
inc
sahf
js
fcompl
jbe
sbb
xchg
mov
subl
loopne
dec
sub
add
mov
rorl
sbb
or
rol
fldl
pop
mov
out
das
and
mov
adc
icebp
xchg
out
mov
cs
pop
xor
xor
dec
scas
xchg
cmp
mov
jge
and
cmp
icebp
inc
inc
fistps
sub
mov
fnstenv
add
jmp
fdivrs
push
insl
mov
mov
adc
jmp
mov
stos
mov
dec
dec
mov
fidivl
add
icebp
add
fists
lods
jp
dec
and
inc
add
movb
mov
adc
mov
push
scas
in
rcr
adc
outsb
insb
clc
scas
outsb
int
daa
push
ds
xor
roll
cmc
cmp
test
clc
test
dec
bnd
stos
nopl
pop
pop
xlat
lret
xor
xchg
mov
aad
mov
pop
push
cmc
inc
and
dec
mov
jp
or
data16
xlat
pop
fstl
push
jecxz
add
push
arpl
mov
ljmp
push
or
popf
pop
mov
jmp
xor
xor
jnp
jae
jge
in
sbb
xor
into
aad
ret
pop
rolb
insb
pcmpeqw
aaa
jbe
sub
out
ss
daa
sbb
add
dec
adcl
or
sub
mov
jp
in
cmp
pop
sub
outsl
cmp
movsb
popf
pop
jae
push
dec
rcrl
mov
sahf
hlt
ss
adc
or
faddl
push
and
loope
xchg
imul
cli
test
lock
out
in
inc
outsl
movsb
and
push
cltd
ljmp
cmp
test
pop
dec
xchg
out
sbb
loop
stos
out
push
js
xor
xorl
mov
lock
mov
pop
mov
jl
jnp
test
push
xor
push
adc
push
inc
mov
scas
in
in
push
sbb
pop
call
mov
fistps
inc
or
xchg
pop
push
push
sub
xor
call
sbb
in
push
mov
mov
rcll
lods
xchg
or
jg
andb
adc
insb
sub
dec
stc
mov
pop
pop
mov
pop
sbb
xlat
subl
lcall
adc
fwait
fs
cwtl
fs
adc
frstor
jmp
addr16
mov
mov
iret
mov
mov
add
push
mov
mov
shr
xlat
jno
leave
jb
pop
es
cmp
and
add
jnp
rolb
jo
ss
sbb
jle
pusha
add
int
rcrl
mov
insb
jno
pop
ret
xchg
push
cwtl
mov
lods
cmp
es
xor
rcl
mov
mov
cmp
stos
cmpb
push
cmp
cmp
or
xor
ljmp
xor
arpl
out
stos
sub
mov
in
sub
mov
loope
test
add
jg
mov
mov
das
loopne
addr16
push
add
repnz
mov
imul
or
aas
adc
push
hlt
jne
loope
testb
loopne
mov
ljmp
rcl
adc
sbb
rcrl
or
jmp
sbb
or
pop
xor
aaa
lds
iret
sbbb
in
pushf
jbe
cmp
pop
sub
and
sti
jmp
loop
adc
add
fadds
call
adc
sbb
adc
cld
xchg
bound
icebp
loope
push
xchg
icebp
pop
mov
fbld
or
cmp
add
push
aam
shrb
dec
popf
pop
push
shl
cli
jae
jnp
cld
test
popa
and
mov
ds
mov
mov
inc
mov
fisubrl
in
sbb
jae
ret
mov
or
sbb
aaa
inc
xchg
daa
xchg
dec
pop
xchg
mov
cmp
xor
jae
jp
pop
pop
insb
mov
jl
loop
popf
fistl
inc
cmp
sbbb
fisubrs
lcall
shrb
pop
adc
add
fcmovu
sar
push
mov
or
xchg
cmp
mov
mov
in
or
in
pusha
addb
push
je
dec
adc
mov
xchg
int3
dec
inc
push
loopne
jmp
push
and
insl
and
jmp
or
imul
in
mov
jmp
inc
rol
xchg
stos
adc
or
cld
push
mov
dec
dec
inc
gs
sub
outsl
or
imul
lods
repz
mov
pop
js
rcrb
push
stc
xchg
leave
in
in
mov
or
imulb
loop
xorb
cli
shrl
pop
dec
mov
pop
inc
sbb
cmp
daa
inc
mov
mov
js
sbb
inc
push
jo
or
xor
cmp
push
ret
mov
mov
or
cmp
ljmp
cmpsl
andl
xlat
push
push
in
je
paddq
jle
outsl
pop
imul
mov
fidivrs
rorl
inc
sbb
pop
ret
xchg
addr16
adc
leave
faddl
mov
and
inc
pop
or
cmp
stc
push
fwait
jae
in
and
ja
push
sbb
dec
sbb
insl
repz
pushf
out
mov
inc
mov
aas
cwtl
and
or
pop
ss
aam
cmpsl
insl
push
mov
push
jmp
arpl
jge
jmp
push
test
mov
and
lcall
outsl
inc
dec
dec
jae
mov
aad
xchg
mov
aaa
sbb
scas
mov
jge
dec
xor
pop
and
aas
in
add
aam
pop
pop
mov
pusha
insb
or
push
sbb
pop
and
inc
jl
jns
vcmpps
push
aas
ret
and
mov
test
aaa
cmp
push
sbb
cmp
pop
fldl
adc
pop
mov
ret
or
jl
pop
fisubs
xchg
add
sarb
outsl
and
mov
xchg
lea
dec
sub
add
outsb
adc
fistpll
mov
sahf
pusha
mov
fwait
jl
mov
jge
ja
cmp
call
xor
sbb
or
hlt
rolb
and
loop
sub
lods
sti
jmp
mov
insb
je
inc
loopne
cmpsb
inc
dec
clc
mov
mov
or
sti
push
les
test
jb
pop
fildll
mov
icebp
xchg
sub
js
ljmp
add
ja
mov
scas
sar
insb
inc
lods
shll
in
or
bound
push
js
adc
mov
push
jo
aad
mov
test
leave
rcrb
das
out
in
sbb
xlat
test
rol
xchg
hlt
lret
cwtl
add
lock
out
mov
adc
lcall
sub
push
add
jb
fimull
lock
idivl
dec
cmp
std
ljmp
jmp
sub
adc
scas
dec
jbe
rcll
xchg
das
mov
mov
pop
adc
xchg
iret
jbe
ret
inc
lock
push
sti
aam
mov
xchg
xor
xchg
mov
mov
dec
sbb
jb
xchg
inc
insl
push
cld
js
cmpsb
fisttpl
xor
xlat
hlt
imul
fdivrl
adc
fs
jl
xlat
add
imul
dec
sub
decb
mov
add
pop
cmp
push
push
je
adc
jecxz
fsubrs
mov
stos
aaa
ds
std
arpl
jae
mov
adc
test
xlat
in
lret
cmc
test
lods
xor
rcr
mov
mov
mov
jmp
mov
push
mov
data16
in
push
icebp
push
mov
mov
mov
in
dec
add
imul
jecxz
mov
js
xor
pop
add
sbb
sub
pusha
xlat
xchg
and
mulb
fdivr
shll
dec
hlt
push
imul
xor
daa
cmp
ds
enter
mov
xor
xchg
mov
inc
int
movsl
mov
outsl
es
lock
daa
std
movsl
es
orb
movsl
and
sbb
add
or
arpl
jne
loope
pop
sbb
mov
pop
fnstcw
nop
jbe
arpl
arpl
data16
addps
in
ficoms
xor
mov
mov
dec
mov
push
ja
jecxz
cli
fldl
scas
and
mov
les
clc
test
jecxz
jbe
int3
or
stos
aad
cmpsl
sbb
jo
out
dec
adc
adc
lret
xchg
add
jp
sbb
cmpsl
mov
ds
push
xor
pop
outsl
and
pushf
or
icebp
push
testl
data16
pusha
pop
jmp
sbb
xor
lock
xor
cmp
push
stos
jp
rcll
push
mov
rorb
das
fwait
mov
xor
popa
popa
inc
jbe
in
jg
jo
mov
pushf
icebp
jo
sub
jo
sti
fldcw
push
mov
enter
push
movsb
sub
and
and
jmp
mov
xchg
data16
dec
adc
out
mov
add
and
fnstsw
out
adc
les
insb
pop
jmp
loop
leave
aas
je
mov
and
jle
sub
sub
pop
xchg
les
stos
andl
mov
pop
ret
or
cld
icebp
rolb
out
sbb
enter
sub
clc
iret
ljmp
adc
add
push
jmp
loop
fs
fucomp
mov
push
add
sub
lods
and
mov
mov
aad
xchg
sub
push
mov
les
lret
les
cmc
jne
mov
mov
mov
xchg
aas
sbb
rcrl
cld
sub
rcrb
clc
pop
insl
and
lea
push
bound
dec
outsl
mov
push
xor
mov
out
pop
hlt
ja
or
scas
xor
pop
ljmp
push
push
cmp
xchg
add
ss
mov
fisubl
rcrb
fadd
mov
rcl
lahf
xor
pop
push
das
jne
aas
cmc
mov
ret
bound
xchg
outsb
aas
jle
dec
mov
enter
lods
or
cmpsb
mov
outsl
push
mov
jge
andb
dec
test
add
fcoms
js
mov
cltd
jno
xlat
fneni(8087
sub
orb
insb
pop
in
pop
ds
jo
mov
jbe
push
xor
mov
sbb
mov
aas
dec
sub
and
mov
fiadds
sub
mov
jecxz
sbb
mov
mov
stc
cmp
daa
xchg
push
das
mov
imul
jne
stc
adc
jo
cmc
test
arpl
pop
std
pusha
push
push
ja
adc
push
mov
mov
cmp
sahf
jne
inc
mov
out
test
jl
lock
fmuls
vminsd
push
jmp
aas
ficoml
push
sar
ljmp
fcmove
stc
sbb
mov
adc
or
mov
mov
pop
xor
cmc
cs
ret
addr16
loopne
stos
push
je
jno
cmp
add
mov
cli
aad
lock
inc
push
and
test
mov
mov
push
lahf
push
fsubrp
fidivl
pushf
add
sti
mov
rcr
fcmovnbe
xchg
test
adc
into
mov
mov
leave
jbe
push
cmp
push
cmp
je
or
fwait
mov
ja
div
aad
int
ja
repnz
jmp
xchg
fmuls
adc
push
ljmp
rcrl
adc
add
in
out
fisttps
mov
insl
add
rcrb
push
dec
jge
or
cmpsb
stos
dec
mov
cmp
rol
out
sub
movb
mov
sbb
and
lahf
jmp
jg
arpl
mov
mov
filds
or
mov
mov
sub
adcb
aam
ficoml
iret
and
pop
insl
adc
xchg
xchg
stos
lods
jb
aaa
insb
sbb
push
lea
int
orl
xor
mov
scas
test
inc
jne
ret
imul
fdivrs
jbe
inc
jl
inc
xchg
jge
adc
xchg
adc
pop
push
fdivl
loope
inc
push
popa
xchg
fs
pop
jno
or
js
dec
adc
or
lret
xchg
cmpsl
popa
push
mov
and
mov
or
sbb
xor
scas
pop
daa
and
cmpsl
mov
into
sbb
dec
rcrl
xlat
testl
pop
xor
rcr
rorl
out
xlat
add
jp
adc
lds
mov
fimull
dec
inc
add
sarb
cmpl
xchg
sbb
je
rcrb
push
incb
push
sub
dec
mov
xchg
test
test
jl
enter
inc
cmpsb
jne
lcall
xchg
in
popf
jmp
std
enter
xor
cmpsl
out
addb
mov
popl
jae
and
dec
adc
xor
xchg
mov
jmp
inc
je
push
daa
push
popf
mov
cmc
jle
sub
stos
xorl
push
xchg
imul
xchg
push
std
lock
lret
xchg
nop
mov
pushf
test
fmull
jmp
push
mov
mov
inc
cs
rol
cwtl
mov
out
jbe
dec
jbe
sub
stos
out
or
xchg
mov
pop
jns
dec
pop
pushf
in
shr
sub
dec
mov
add
fisttpl
sub
jmp
pop
mov
pop
push
sbb
popf
jp
add
shll
in
mov
sbb
sbb
jg
mov
inc
push
div
and
cmpsb
inc
pop
xor
dec
jl
cmpsl
and
jecxz
loop
sub
xor
mov
xor
mov
xor
mov
ffree
bound
and
push
xor
mov
cwtl
pop
sbb
pop
hlt
out
add
push
xor
sub
jb
mov
mov
ds
ss
inc
jae
jbe
lds
insl
movsb
add
sbb
out
clc
push
lods
mov
call
je
fsubrp
dec
bound
push
scas
sub
lods
and
mov
mov
adc
cmp
adc
inc
inc
repz
dec
ds
ss
and
add
inc
ss
push
fadds
and
dec
sbb
insb
cltd
pop
cmp
jns
out
es
inc
xor
mov
dec
mov
push
pop
repnz
aad
push
outsb
inc
call
js
fmuls
lea
loop
mov
je
pop
addl
jecxz
sub
rcr
adc
into
pop
pop
aas
arpl
aas
fprem
jae
cmc
xchg
pop
mov
jne
push
mov
jnp
icebp
pushf
adc
inc
and
jg
out
fld
lcall
cmpsb
or
out
xchg
jnp
mov
mov
scas
enter
out
xor
scas
push
shlb
xchg
inc
sbb
mov
inc
pop
imul
jns
outsl
dec
or
shl
cld
jl
adc
lods
adc
add
lock
aaa
mov
lods
mov
imulb
fstpl
call
arpl
xor
mov
sbb
stc
loopne
mov
push
das
pop
dec
and
jmp
arpl
test
jge
xchg
push
add
push
lret
shrb
push
loope
data16
sbb
lock
mov
aad
aam
cs
fisttpl
out
adc
stos
and
mov
aam
insb
js
pushf
sub
or
cmp
add
insl
faddp
movsl
lods
sbb
test
shll
lea
das
fdivrs
movsb
daa
jo
cmpsl
mov
outsl
test
jmp
fiadds
scas
xchg
and
imul
int3
ss
ja
fwait
add
or
xor
in
je
fnstenv
sub
jae
ljmp
pop
arpl
aam
inc
mov
jae
or
idivl
jbe
jae
mov
mov
mov
je
push
jecxz
or
jno
push
lock
fistl
cwtl
lcall
mov
mov
in
cli
jno
sbb
rcr
inc
rcrb
mov
mov
call
cltd
mov
mov
xchg
lea
and
stos
jnp
insb
sahf
mov
push
add
mov
cli
mul
pop
jg
outsb
test
mov
xchg
notl
ljmp
cld
mov
add
xor
scas
mov
sub
iret
sub
dec
mov
enter
test
mov
push
test
fs
ja
jge
mov
insb
aad
sub
mov
sbb
cmpsb
inc
cld
xor
ret
xchg
pop
into
cmp
sbb
mov
inc
out
pop
jo
pop
lcall
push
cmc
inc
in
push
xor
push
rcll
cmp
mov
call
fidivrs
cmp
mov
jge
xchg
inc
mov
sahf
subb
mov
pusha
xlat
out
aaa
jns
rcl
dec
daa
jno
push
mov
andb
movb
mov
lods
test
lock
jmp
xchg
add
sub
aad
dec
xchg
jl
jge
push
or
orl
jnp
pop
add
mov
pop
dec
movsl
outsb
mov
and
in
imull
mov
jg
cs
jmp
in
movq
sbb
test
cmpsb
scas
adc
xchg
ss
xor
hlt
and
jo
add
loopne
pop
xchg
aam
dec
dec
jb
call
xor
loope
insl
mov
add
popa
cwtl
loope
dec
mov
sbb
sbb
sub
or
ljmp
add
lahf
stos
stos
push
js
insb
and
mov
dec
cmp
fsubl
sbb
mov
mov
inc
mov
fst
fptan
jmp
dec
xchg
jge
push
mov
je
movsb
inc
mov
pop
mov
cli
or
jle
ja
fnstcw
pop
les
mov
ret
inc
push
int3
mov
rorl
or
inc
lcall
dec
lock
ror
pusha
cmp
in
loopne
cmp
add
mov
mov
loop
mov
ret
idivb
jnp
icebp
sub
out
cli
ds
or
cwtl
popa
jge
jae
xchg
xor
add
stos
xor
sbb
mov
ds
inc
divl
in
jb
lea
ljmp
movsl
clc
lock
ret
dec
mov
push
andb
sub
shlb
inc
xor
jp
sbb
jg
ret
stos
daa
pop
sub
fmul
cmp
outsb
add
mov
mov
fdivl
loopne
cs
bound
mov
mov
dec
add
shrb
mov
sub
sub
in
mov
fists
test
out
ret
dec
inc
sbb
stos
push
pop
jg
mov
xor
pop
jne
out
sub
sub
jb
out
adc
pop
in
sbb
insb
xorb
fists
sbb
ds
lds
call
mov
push
lods
push
pop
xor
mov
in
pop
sbbb
jp
jp
push
sub
outsl
sti
loop
shlb
lea
orb
mov
fldenv
push
xchg
call
push
cld
jne
xchg
movsl
dec
iret
sbb
loope
adc
nop
cwtl
jmp
dec
xor
fwait
les
jne
pop
mov
repz
mov
and
test
sbb
mov
lcall
call
out
sti
das
in
ljmp
idivl
jne
shlb
pop
aas
outsb
push
mov
bound
in
fnstcw
ss
loope
xor
xor
nop
pop
fwait
call
adc
loop
je
xchg
pop
mov
test
or
mov
jecxz
addr16
mov
popa
fcmovnbe
add
mov
mov
pop
rolb
mov
or
jbe
outsb
xor
ja,pt
jmp
out
fistpll
roll
cs
addl
mov
xlat
mov
mov
testb
gs
and
insl
mov
std
mov
jecxz
mov
gs
mov
lds
popf
leave
imul
add
lcall
pop
popa
add
xchg
shlb
call
jmp
xchg
nop
mulb
bound
movsl
ss
aas
and
arpl
cwtl
int3
mov
sbb
lret
xchg
add
mov
or
jne
sub
fs
push
adc
hlt
addl
or
pop
js
scas
stc
into
lods
in
push
stc
sub
imul
orl
jge
pop
imul
ljmp
pop
cmp
mov
lret
mov
pop
mov
daa
cmp
inc
in
lods
jmp
arpl
out
out
es
xchg
insl
mov
sub
pushf
loop
push
dec
pushf
or
dec
sti
fdivrs
pop
notb
xor
push
aad
loopne
xor
in
dec
xchg
cmp
incl
lds
cli
or
sub
mov
push
mov
dec
inc
dec
ds
dec
sbb
test
xor
arpl
xor
stos
mov
in
nop
fnsave
add
faddp
sti
mov
into
push
sub
mov
pushf
mov
jae
xorb
pop
jbe
push
sbb
jecxz
aaa
cmp
cmp
sti
rorl
cld
cmc
xor
roll
cmc
mov
cmpsb
pshufw
mov
in
push
cmp
lea
pop
cmp
mov
or
inc
pop
ljmp
stos
fcomip
je
data16
int
mov
xchg
sbb
push
mov
cld
test
ss
mov
fcompl
shll
scas
dec
mov
je
lock
or
adc
pop
or
push
testl
pop
mov
fadds
jb
test
lret
or
mov
pop
negb
pop
addb
lret
out
cmpl
inc
mov
imul
movsb
mov
xchg
push
lock
cmp
pop
jle
fldt
xor
mov
rol
dec
adc
lcall
xchg
push
jecxz
jle
call
mov
inc
push
xlat
addr16
js
add
pusha
lahf
aad
stos
call
xchg
fwait
sbb
jb
mov
lret
out
xchg
fs
or
aam
sub
jge
stos
push
lea
pop
mov
xor
cwtl
mov
mov
pop
rcrb
push
xor
jmp
leave
stc
je
ja
mov
icebp
xchg
dec
inc
arpl
testl
fisttpl
dec
rcll
mov
xchg
fidivrl
inc
icebp
into
call
pop
add
ficoml
test
repnz
push
lcall
iret
inc
lock
xchg
sbb
rol
adc
pop
test
into
ss
pop
dec
jg
pop
ljmp
mov
inc
dec
xor
sarl
xor
jg
into
mov
inc
cmpsb
outsl
dec
push
pusha
jecxz
test
xchg
xchg
repnz
adc
jp
insb
scas
push
ret
add
cmp
cmpb
insl
test
dec
jo
faddp
cli
nop
scas
mov
add
pop
ret
add
mov
xchg
mov
stos
adc
sti
xor
mov
daa
jge
es
call
sti
insl
jle
aas
fidivrl
jge
push
or
push
add
pop
fildll
cmp
lcall
das
xor
sbb
sub
inc
xchg
aam
daa
mov
cmp
std
sbb
rol
xor
jle
scas
mov
dec
mov
mov
push
and
aas
das
pop
mov
outsl
xchg
lds
xchg
sub
popf
xchg
test
cmp
ret
pop
mov
dec
int3
aam
test
fstpl
in
mov
lds
mov
fs
mov
ja
stos
cmp
mov
pop
jle
dec
inc
or
push
xor
pop
out
push
mov
mov
aas
xor
dec
mov
test
out
inc
mov
sbb
xlat
mov
cmp
sti
push
cs
std
lret
mov
cld
sbb
incl
fdivl
cmp
pop
mov
mov
aam
cmc
mov
adc
push
stos
add
push
add
mov
jg
paddw
lahf
sti
jb
std
sbb
paddsw
inc
jg
and
rclb
push
pop
cmp
inc
je
repz
cs
push
jmp
xorb
and
add
out
cltd
xor
scas
outsb
mov
rorl
jb
sub
fs
push
xchg
jmp
cld
in
push
xor
inc
clc
fistl
cmp
or
test
int
fldl
push
roll
aas
mov
cmp
shll
xchg
cld
add
inc
pop
fs
xchg
mov
xor
lods
push
inc
adc
fsubr
notl
inc
and
roll
out
jnp
push
jmp
push
sti
jb
fs
xchg
out
sbb
iret
dec
fldl
or
fcompl
pop
pop
stc
test
mov
out
in
insl
leave
or
sti
mov
jl
out
cmpsb
jp
lret
mov
jle
dec
pop
syscall
je
aaa
call
xlat
sti
pmullw
jno
and
and
cmpsb
pop
aas
mov
lods
mov
je
cmp
or
loop
adc
mov
mov
inc
int
aaa
dec
movsl
rcll
mov
xorl
imul
cmpsb
mov
in
xchg
push
mov
push
pop
inc
dec
adc
call
aaa
fisubrl
outsb
call
xchg
jbe
sbb
daa
fsub
mov
push
cli
into
push
scas
cmpsb
sti
repz
into
adcb
xchg
xchg
push
mov
mov
dec
pop
je
js
loope
bound
push
jmp
mov
pop
int
jmp
cmpsb
nop
shrl
loopne
cmpsb
pop
mov
sbb
mov
in
in
mov
jo
outsl
and
outsb
jo
xchg
cltd
hlt
scas
cli
xlat
sbb
mov
dec
and
jno
xchg
dec
push
fldl
mov
pusha
jne
jp
imul
fidivl
mov
cmc
inc
push
cmp
gs
test
add
dec
jns
adc
mull
data16
pop
inc
mov
jmp
push
push
xor
sbb
jecxz
cmp
xlat
lock
lock
data16
les
mov
movsl
sbbl
insl
cmpsb
pop
cmp
lods
hlt
sbb
shll
and
fistpll
and
hlt
scas
out
test
mov
jle
mov
mov
int3
jne
pop
push
les
pop
lcall
or
stc
loopne
or
pop
mov
xor
mov
imul
test
mov
push
fdiv
cltd
pop
push
sub
cmpsl
sbbl
and
adc
lods
int
xor
outsl
push
das
bound
or
pop
mov
clc
jmp
pop
mov
mov
pop
lcall
ljmp
mov
lock
or
mov
push
mov
mov
mov
mov
sub
jo
jbe
in
stc
insb
or
in
shl
fmuls
push
pop
js
jmp
lcall
sub
out
push
js
jnp
push
jbe
in
movaps
mov
aaa
lea
aas
rclb
add
push
cmp
mov
popa
nop
cmp
movb
popa
pop
sbb
sub
xchg
idivl
outsl
stos
pop
pop
outsb
out
dec
dec
sub
ds
dec
jmp
jo
les
pop
xchg
cmp
sub
add
pop
cwtl
push
cwtl
dec
mov
les
pop
cmp
dec
sbb
or
mov
std
xchg
fnsave
lods
cmc
mov
add
cmpsl
mov
fdivrs
test
push
imul
and
inc
push
push
xchg
cltd
add
cmp
mov
mov
or
aam
cwtl
mov
in
mov
cmp
sbb
mov
movsb
test
insb
xchg
bound
outsl
lods
shrl
push
stos
ljmp
sub
jp
mov
pop
pop
aam
sub
cmc
fsub
fwait
sbb
fdivl
popf
cmp
imul
movsl
fcmovnb
push
sbb
xchg
enter
mov
inc
push
mov
or
jg
jle
sbb
mov
cmpb
rclb
lret
orb
out
xlat
shrl
or
mov
mov
movsl
pop
aam
loop
push
mov
lods
scas
xchg
leave
lea
inc
cld
aas
mov
xor
daa
cmp
xchg
push
xchg
and
bound
xlat
and
pusha
imul
push
pop
xlat
int
inc
icebp
mov
test
inc
sub
xor
cli
push
jl
mov
sbb
lcall
add
insl
add
ret
mov
repz
cwtl
push
mov
lods
fimuls
cmpl
sub
rcr
push
in
popf
mov
sbb
call
sub
sub
mov
ss
pop
jecxz
dec
mov
imul
btc
into
mov
mov
adcb
ret
cmpsl
mov
push
mov
lock
mov
push
mov
popa
test
push
fs
ret
and
ja
scas
test
push
cld
sub
pop
bound
imul
sbbl
pop
lahf
and
cmp
sbb
jg
cmc
xchg
and
cwtl
call
jg
popf
or
sub
fnstcw
lea
sarl
data16
inc
jl
adc
mov
cs
mov
mov
lret
cli
push
test
mov
in
les
loope
pmullw
push
sub
jge
aaa
out
mov
or
push
xchg
faddp
sbb
xchg
in
loope
call
sub
subb
out
jnp
sub
xor
jne
xor
aad
dec
jp
insb
clc
cmp
dec
mov
enter
mov
psubw
mov
add
jecxz
stc
loop
jecxz
mov
rclb
fiaddl
xor
or
outsl
ljmp
mov
sub
mov
das
xchg
jns
jecxz
dec
xlat
std
jo
js
psrad
out
fcmovnu
lods
repnz
enter
int
push
ja
pop
xlat
addr16
sarb
sub
in
fistps
cmp
pop
dec
jb
mov
push
lock
add
fs
and
xchg
pop
sub
add
push
ds
inc
fsts
cli
push
sub
mov
sbb
inc
in
jecxz
hlt
lcall
adc
int3
cmpsb
call
insl
xchg
insl
mov
jmp
jnp
xor
and
mov
push
push
outsl
push
and
cltd
jl
mov
xchg
pop
in
jb
and
mov
lock
mov
cmpsl
insw
inc
adc
push
scas
mov
aaa
sub
dec
out
sbb
push
xor
inc
fcoms
push
fcmovu
lahf
push
aam
mov
lcall
push
mov
pop
jecxz
xchg
lret
pop
lcall
sub
sbb
ficompl
mov
lcall
xor
or
mov
hlt
icebp
testb
lock
cmc
pop
cld
test
jo
lcall
loopne
add
jnp
je
out
dec
leave
lea
fistl
aam
arpl
std
mov
cmp
mov
pop
add
in
pushf
insl
jl
push
ret
mov
sub
in
out
jnp
sub
bound
out
mov
push
scas
push
inc
lcall
xchg
call
cltd
scas
pop
adc
mov
std
rclb
sti
mov
out
pop
cld
fs
cld
mov
fstpl
sbb
lcall
push
or
scas
test
dec
in
sbb
adc
pop
fistpll
xlat
adc
and
mov
add
ss
cmpsb
aaa
sbb
jmp
loop
cwtl
mov
outsl
mov
adc
pop
jno
push
lds
cmpsb
pop
pop
jnp
setge
test
mov
mov
cltd
cmp
subl
les
push
popa
popa
in
jp
imul
das
jno
leave
jae
cmpl
fmul
popf
leave
sbb
js
inc
push
add
xchg
cmp
aam
sbb
test
das
out
fdivs
in
in
ret
add
cli
out
leave
xor
mov
sbb
sbb
push
inc
loop
loope
jbe
adcl
and
addb
mov
js
cmp
ss
jne
mov
repnz
std
insl
sbb
push
nop
das
enter
dec
xor
dec
mov
emms
stos
fcoms
and
adc
ss
cmpsb
test
movsl
addr16
push
push
idiv
sbb
out
or
shr
outsl
out
pop
and
push
pusha
dec
jno
jnp
addr16
add
adc
mov
shrb
mov
pop
fildll
repz
push
push
jg
daa
js
ss
rclb
pusha
lahf
fadd
sbb
in
and
ljmp
insl
test
mov
add
hlt
roll
shll
aas
hlt
mov
adc
shl
mov
fadds
fidivs
jg
mov
scas
in
mov
xchg
cli
popa
pop
fldl
shrb
jae
mov
jns
in
or
dec
add
sub
js
mov
inc
ljmp
push
dec
fimull
pop
sahf
or
xchg
cmpsb
mov
add
test
sbb
fwait
pop
pop
mov
mov
adc
inc
jmp
ret
outsb
cmp
or
das
out
and
popa
sub
jmp
or
jg
iret
je
movsl
mov
test
lahf
pop
nop
subb
dec
and
adc
or
daa
mov
insb
adcl
lahf
int
insl
and
call
mov
dec
xor
fnstsw
aad
outsb
sub
fimuls
lods
test
sub
sub
xchg
inc
add
hlt
arpl
js
aaa
call
and
scas
jmp
pop
cmp
testl
or
scas
mov
call
mov
mov
or
imul
stos
iret
cld
cmp
arpl
lahf
and
sub
inc
f2xm1
inc
pop
push
test
sti
mov
jg
pop
sub
jne
bound
xor
push
popf
ds
mov
rcrb
cli
outsb
fistpl
dec
cwtl
xor
in
xor
pop
fcoml
sbb
sbb
sarb
imul
mov
stos
cs
mov
add
cmc
push
mov
cmp
rorl
pushf
xor
decb
mov
out
dec
mov
cmovno
push
add
mov
sbb
in
movsb
pop
mov
jle
dec
hlt
adc
dec
jbe
sbb
xor
add
jb
bound
jmp
or
inc
sub
jbe
ss
push
lcall
lcall
xchg
xchg
ja
clc
mov
adc
fs
cs
arpl
out
ret
rolb
rcrl
imulb
cmp
xor
inc
lahf
pop
dec
cmp
lcall
adc
ud2
sarb
cmp
pop
jno
xor
rorb
jp
add
dec
in
in
lcall
dec
adc
or
push
popf
xor
xlat
ret
pop
or
pusha
lock
sbb
inc
lret
add
mov
add
mov
es
aam
test
mov
enter
inc
push
push
rorb
pop
pop
add
push
enter
and
ss
loopne
mov
pop
repnz
pop
cmp
xchg
cwtl
ja
mov
inc
sbb
xor
scas
fisttps
fcoms
outsl
pop
cmpsl
push
add
or
mov
rcll
pop
cmpsb
xchg
cmp
mov
scas
mov
inc
test
mov
jb
xchg
outsl
push
xor
or
push
cmp
push
pop
sti
into
ljmp
imul
jle
rclb
pusha
mov
pop
push
sub
pop
loop
pop
xlat
dec
dec
xor
imul
pop
popa
xchg
repz
adc
lcall
out
sbb
scas
aas
das
daa
mov
loopne
cwtl
insb
pop
jl
je
out
out
int
push
je
mov
cmp
lcall
scas
lock
push
and
jl
pop
or
mov
jae
mov
scas
add
das
mov
ja
icebp
aam
cli
or
shl
cmp
mov
test
mov
jmp
lahf
push
je
lret
cmp
shll
sti
push
adc
jmp
mov
push
test
xor
push
mov
clc
jl
pop
ret
push
inc
lret
or
scas
scas
mov
dec
loope
sbb
sbb
xchg
pop
shrl
data16
lea
rcrb
outsl
inc
mov
and
lret
jge
jle
sub
mov
mov
mov
dec
add
sti
in
jnp
sbbb
and
out
cmp
or
cmp
jge
aam
popa
add
mov
push
rcr
mov
inc
inc
mov
out
jns
test
jg
mov
pop
lds
mov
inc
push
hlt
sbb
je
sub
xchg
fnstsw
jp
fcmovb
stos
push
lods
pop
movsb
out
or
jo
push
dec
xchg
adc
lret
xchg
inc
divb
in
loop
mov
les
sub
xlat
cmp
dec
or
pop
les
xor
pop
xchg
in
out
sub
aaa
inc
mov
fnsave
xorl
xchg
fwait
or
movsl
idiv
xchg
sub
sbb
mov
sahf
testl
and
stc
adc
ljmp
in
mov
xchg
pop
adc
ficoms
ffree
out
sbb
push
mov
dec
icebp
cmp
push
fwait
in
aaa
test
lret
or
andb
mov
stc
add
cwtl
mov
and
andl
fisttpl
xor
inc
push
xchg
sahf
loop
xchg
sbb
jnp
mov
adc
dec
pop
aam
aaa
sbb
jle
mov
adc
mov
add
icebp
aad
addl
inc
pop
aas
pop
inc
jmp
jnp
push
imul
es
sub
push
rcl
loopne
cld
and
ffree
stos
js
xchg
lahf
lcall
fisubl
and
in
sub
push
mov
xchg
jb
mov
cld
pusha
or
imul
roll
scas
orb
xchg
push
jmp
fiadds
fdivl
adc
adc
cmc
mov
mov
and
xchg
scas
pop
iret
nop
jnp
and
ficompl
shlb
sbb
scas
jmp
cwtl
loopne
scas
out
and
inc
pop
aad
add
cmpsl
and
cmp
decl
clc
cmp
or
cmc
insl
shrl
jge
loopne
in
sahf
js
aaa
sbb
jnp
push
ret
push
pop
xor
std
mov
jae
add
nop
aam
out
jae
shlb
dec
cld
fsubrl
pop
or
pop
clc
jmp
inc
xchg
or
inc
mov
insb
es
movsl
cmpsl
movl
mov
mov
rcll
jge
insl
in
scas
cli
push
xchg
ficoml
jo
stos
cmp
jg
xor
pop
insl
lahf
pushl
and
xchg
out
repz
aaa
das
add
shl
jo
ljmp
jns,pt
push
rorb
add
mov
dec
dec
std
sbb
mov
aad
lock
pop
xchg
xchg
vpmacsdqh
movsl
dec
or
inc
outsb
lahf
fsubs
or
daa
jo
xacquire
inc
ds
dec
jo
jl
push
fdivs
mov
js
insl
push
gs
repz
aam
jbe
ss
and
aad
mov
pop
insb
adc
pushf
xchg
push
cld
out
cmp
lock
outsl
jne
cmp
loopne
stc
mov
or
loope
scas
cmp
cld
arpl
sbb
insl
pusha
ja
mov
mov
in
loopne
test
jnp
mov
mov
test
mov
js
mov
ror
jno
adc
or
in
sbb
out
dec
pop
adcl
sub
inc
mov
mov
inc
push
mov
popf
fldl
dec
add
lea
xor
shlb
xor
sub
xchg
inc
divl
or
test
xchg
jnp
insl
cmpsl
xchg
sar
rorb
pop
sub
jg
jp
jnp
jnp
jmp
mov
mov
or
insl
xor
daa
push
fsubrl
rol
ljmp
mov
scas
stos
pop
test
fidivrs
aam
cmp
sub
mov
jp
add
cmpl
sahf
push
jae
insb
xor
cli
jne
data16
outsl
icebp
sub
fdivs
fdivrl
cmp
cld
add
pop
fnsave
or
aaa
mov
mov
outsl
xor
jmp
jl
les
test
jmp
ret
mov
aas
cmc
call
mov
cli
and
pushf
jnp
test
roll
push
inc
or
testb
add
adc
push
jle
mov
push
push
xchg
test
stos
scas
ja
push
insl
shrb
fwait
rorb
mov
data16
pop
fidivl
ret
std
shrl
lcall
lds
jne
int
daa
adc
movsb
dec
es
jmp
add
das
loopne
int
push
add
adc
fistl
cmp
jp
xor
je
push
clc
stos
faddl
nop
lcall
push
outsb
cmc
inc
push
jle
loopne
mov
in
sbb
xor
push
cld
jge
mov
popf
push
dec
inc
mov
cld
js
roll
out
adc
lret
mov
jle
cmp
cmp
ficomps
icebp
jne
aad
popf
outsb
xor
fistpl
xor
sbb
add
mov
rcll
xor
mov
mov
jp
jecxz
aam
jne
fdivp
movsl
dec
xor
out
jnp
test
lock
popa
movb
shll
insb
test
scas
jnp
rolb
bound
mov
cmp
push
fildll
inc
inc
adc
out
nop
stos
ljmp
dec
jecxz
jecxz
lock
lahf
call
das
cld
inc
jmp
test
mov
jge
jns
jl
xor
fidivrl
push
sbb
loope
pushf
pop
jbe
xchg
scas
sbbl
das
and
or
push
in
mov
push
jnp
imul
mov
push
xor
sbb
mov
fdivs
popf
roll
pop
push
xchg
scas
data16
fldt
or
add
dec
dec
fcomps
xor
aas
mov
mov
test
sti
leave
dec
mov
shll
and
cmp
xchg
xor
mov
imul
cmp
sbb
in
jle
xchg
sub
jmp
lods
inc
rolb
jne
inc
mov
loope
jae
cmp
test
cli
ja
lea
jmp
outsl
test
stos
xchg
add
inc
aaa
insb
loop
dec
shll
rorl
or
xlat
sarb
imul
lock
inc
popf
mov
mov
xor
imul
fdiv
fs
mov
mov
ret
dec
loopne
pop
mov
xchg
jmp
je
xchg
lret
adc
aam
mov
adc
inc
mov
stos
lret
pop
mov
pusha
test
or
pop
add
or
xor
cmp
xlat
adc
or
push
dec
lods
add
stos
in
stc
jecxz
insl
cmp
jecxz
lock
sbb
mov
push
xor
mov
stos
xor
pusha
popa
ret
scas
jbe
pop
sub
mov
sbb
push
jne
leave
lods
push
repnz
jecxz
mov
std
fwait
sbbl
and
jno
inc
rorl
test
ss
adc
cltd
and
adc
push
arpl
mov
in
jl,pn
cmp
test
int
add
cmc
dec
pusha
ret
xor
repnz
cmc
dec
jmp
sahf
lds
cmpsl
jbe
ljmp
and
mov
pop
push
push
xor
mov
dec
popf
jnp
rorb
sub
shrl
in
insb
cmp
outsb
div
out
hlt
push
mov
inc
into
ds
rorb
mov
clc
insb
push
out
pop
data16
aaa
push
and
lds
in
test
lcall
lock
mov
cs
inc
mov
stc
jnp
mov
mov
jle
mull
jl
or
cmpxchg
sti
das
mov
jg
mov
add
lret
ret
mov
xchg
fs
dec
dec
push
mov
pop
cmp
mov
icebp
inc
mov
cmpsl
enter
and
shl
test
aam
iret
stos
sbb
movntq
fldl
test
push
nop
int3
lcall
sbb
imul
xor
add
sbb
sbb
or
mov
jns
push
jecxz
shrl
mov
jo
add
test
bound
pop
or
mov
pop
jl
test
and
xchg
sar
jecxz
pop
pop
iret
dec
or
jg
ja
repnz
jbe
pop
jne
movb
cli
stos
jmp
and
adc
test
cmp
push
xlat
xchg
sub
dec
pop
cmp
sbbb
push
aam
inc
filds
push
test
or
fstpt
mov
add
and
lock
das
mov
imul
push
shll
mov
jp
push
icebp
adc
jl
and
jae
jnp
js
int
aam
out
hlt
hlt
adc
inc
dec
cmp
inc
subl
js
dec
xor
and
aaa
out
test
rcr
cli
jae
jno
sbb
ret
fsubrs
pop
add
cwtl
inc
pop
jge
add
movsl
daa
je
inc
call
mov
aaa
iret
lock
xor
fs
shll
sbb
movsl
sub
adc
xchg
mov
je
or
add
repnz
lods
fnstsw
jae
push
aaa
jp
sbb
sbb
lods
out
loopne
mov
sbb
mov
test
jno
jno
xchg
xchg
sarl
stos
jp
into
daa
ss
rolb
sub
push
dec
movsl
shl
jns
in
mov
iret
mov
insl
jg
int3
sarl
jnp
inc
cmp
sbb
cs
fdivs
xorb
lcall
insb
aas
dec
sub
cmp
mov
add
sbb
adc
cmp
loope
lret
into
ret
outsl
es
repnz
cmpsb
xor
pop
jle
mov
or
xchg
ret
xorb
pusha
ret
sbb
xchg
cld
mov
and
sub
mov
inc
pop
mov
sub
jmp
addb
sub
mov
loope
push
mov
je
inc
adc
mov
icebp
push
xchg
pop
les
push
push
addr16
and
pop
pop
imul
sbb
ljmp
and
std
leave
fidivrl
mov
inc
jnp
inc
add
cmp
popaw
push
ja
xor
ficoms
lcall
ja
fimuls
mov
and
push
adc
mov
push
xor
mov
testb
sub
push
jecxz
jmp
jbe
out
icebp
adc
adc
push
pop
fnsave
loop
mov
sbb
in
sub
setg
or
cmc
dec
pop
mov
add
loope
out
sub
jmp
sub
sbb
sbb
int3
pop
adc
cltd
stos
jne
or
fwait
test
and
mov
sub
inc
les
cmp
fadds
ficoms
adc
fists
aaa
dec
fcomi
mov
cmpb
adc
mov
andb
lahf
faddl
cmp
xchg
and
sbb
xchg
and
pop
jl
or
cltd
xor
mov
loopne
xor
push
les
cwtl
mov
cmp
jns
xor
or
pop
pop
sti
mov
dec
push
xchg
fstpt
jo
xor
xchg
bound
out
cmp
fs
je
sub
push
shl
mov
lock
enter
lock
cmpsb
sbb
ss
mov
test
or
adc
sbb
cmp
imul
fwait
jo
xchg
mov
fmuls
shl
or
adc
xor
int3
imul
pop
pop
fcmovu
idivb
jae
adc
test
ds
push
adc
cwtl
mov
mov
mov
mov
mov
adc
sub
shll
jne
mov
fiadds
in
outsb
mov
scas
inc
dec
add
pop
jmp
pop
lock
cmpsl
mov
clc
orb
and
sbb
cs
lret
dec
mov
popa
dec
pop
ficompl
enter
js
pop
add
jbe
addr16
xchg
xor
jl
fldl
xor
sbb
sub
rcll
stos
jecxz
or
movsl
mov
lock
jne
or
sub
inc
repnz
pop
sub
cs
daa
xor
add
pop
mov
rorl
inc
fcmovnb
test
jle
add
mov
lcall
mov
adc
push
sbb
scas
jo
mov
rcll
jno
push
sahf
fdiv
pop
lods
std
xchg
aas
loop
push
cwtl
xchg
push
clc
mov
jne
sarl
mov
cmpsl
xor
mov
dec
lret
pop
mov
push
mov
pop
mov
ret
outsl
mov
aas
js
dec
aam
ret
out
adc
lea
lcall
arpl
mov
sbb
subb
or
or
mov
movsb
pop
and
icebp
adc
stos
adc
inc
jl
popf
shld
jns
dec
or
cs
push
jg
call
push
aaa
mov
xlat
ficomps
pop
pmuludq
xorb
xor
push
pop
fwait
jmp
ds
out
aad
mov
cmp
std
out
mov
inc
xorb
aaa
notb
arpl
andb
cs
mov
mov
add
stos
jp
xor
mov
jp
insb
push
mov
inc
in
inc
cmpsb
mov
lahf
ds
sbbb
scas
push
pop
sti
jle
mov
sbb
mov
call
daa
jno
sbb
mov
sbb
pop
adc
cmp
test
and
aad
or
fcmovb
push
fwait
cltd
fwait
insl
mov
sahf
lds
rolb
sbb
sub
movb
cmp
xchg
xor
jnp
insb
cld
mov
fistpll
or
mov
clc
aam
orb
cli
mov
xlat
mov
lret
hlt
xchg
sbb
stos
lock
push
in
maskmovq
testl
fcmovnu
int
jo
shrb
xlat
sbb
fidivrs
sbb
fisubrl
int
mov
lcall
cmc
lret
and
je
push
sub
mov
es
adc
sub
and
arpl
mov
mov
cmp
je
stos
mov
hlt
jge
dec
inc
mov
lcall
xorl
bound
add
xchg
push
fdiv
insb
icebp
call
into
shrl
sub
mov
mov
or
shlb
test
mov
outsb
sub
sbb
pop
sahf
mov
std
ja
and
sarb
cmpsl
xchg
jo
push
sbb
cmpsb
cli
adcl
sbb
sbb
dec
adc
dec
pop
pop
decl
shrl
aad
mov
add
lahf
mov
push
in
stos
enter
xchg
loop
xchg
or
loop
bound
push
imul
xorl
sbb
inc
mov
xchg
in
clc
sub
imul
adc
inc
jno
call
daa
mov
fbld
xor
dec
pop
lcall
dec
pop
je
mov
test
shll
or
loop
je,pn
mov
mov
adc
shlb
mov
cwtl
mov
push
jbe
aam
mov
cmp
pop
ret
jbe
fisttpll
xchg
mov
insb
sbbl
push
cli
lock
xor
push
jge
mov
xlat
sti
sub
cmp
inc
sbb
xor
jmp
mov
popa
loope
push
into
pusha
fisttpll
add
ficompl
pop
jge
in
jno
testb
mov
fstl
mov
test
pushf
mov
sbb
add
and
mov
rol
or
popw
dec
je
in
shlb
mov
call
roll
leave
scas
mov
pop
out
out
es
ds
dec
in
lret
icebp
inc
xchg
ss
adc
clc
clc
test
cmc
pop
push
bound
cmc
out
push
xlat
les
mul
stos
stos
sbb
sub
stc
and
sbb
dec
push
shl
mov
xchg
popa
imul
ret
pop
and
stos
add
mov
cltd
jmp
inc
icebp
addl
mov
jg
cmpsb
call
and
jge
fcompl
shlb
pop
ss
sbb
in
adc
adc
mov
lcall
or
inc
test
sub
fldenv
jo
data16
add
scas
idiv
ret
std
cli
mov
shrl
fs
pop
into
jne
sbb
mov
or
mov
or
add
call
pop
jb
aad
lret
pusha
inc
pop
add
push
ljmp
stos
outsb
push
or
sub
cmp
testl
adc
mov
push
outsl
mov
mov
adc
enter
mov
scas
or
fildll
mov
imul
cwtl
sahf
push
mov
fiadds
aam
cltd
cld
insl
scas
sub
pop
js
icebp
in
or
enter
shl
sub
aaa
xor
dec
dec
mov
xor
out
jo
xchg
bound
push
xor
or
adc
sub
lahf
aam
popf
xchg
sub
out
shlb
insl
out
cmp
hlt
adc
js
sub
pop
pop
mov
dec
lcall
cmpsb
or
and
jno
dec
addb
orb
sbb
inc
inc
adc
in
push
mov
enter
cld
cmp
movl
fnsave
fidivrs
out
sbb
mov
cmc
in
jle
jbe
dec
inc
in
cmp
jle
mov
jb
sbb
pop
mov
rcl
ficompl
rorb
test
mov
arpl
int
push
dec
jae
rorl
or
and
mov
jle
mov
adcb
mov
cld
test
adc
mov
sub
je
cmp
fdiv
rcll
ljmp
and
pop
outsb
insl
jae
clc
cmp
fwait
std
xchg
xor
inc
push
loop
das
push
fidivl
jp
push
js
loope
jbe
sbb
or
push
negb
cmp
punpcklbw
out
inc
out
sub
js
lock
xchg
push
mov
xlat
push
add
dec
pop
dec
lds
jbe
sub
push
in
jmp
mov
pop
inc
xorb
add
mov
das
inc
pop
and
sbb
sbb
adc
data16
scas
inc
dec
or
xor
scas
jmp
out
inc
popa
push
and
sarl
loop
cmpsb
dec
das
mov
hlt
scas
loopne
pop
inc
sbb
das
nop
xchg
lds
insb
mov
outsb
inc
add
enter
mov
scas
fstpt
lcall
andl
cs
pop
test
sbb
mov
negl
fiadds
adc
je
pop
aaa
xor
adc
add
movsl
mov
into
jge
test
call
mov
in
push
mov
divl
fldenv
push
out
pop
xchg
mov
add
sbb
aam
sbb
mov
jp
aas
cmp
mov
fld
mov
xor
cwtl
xlat
sbb
pop
xchg
sbb
shll
cmp
outsl
mov
in
add
ljmp
mov
mov
in
into
fnstsw
lahf
inc
dec
mov
dec
ss
loop
scas
rcrl
push
lcall
popa
fwait
xor
push
jnp
jb
push
lea
loopne
fdivr
flds
push
jae
mov
pusha
inc
sti
call
xchg
push
mov
push
push
scas
xchg
adc
adc
out
or
sub
fstpl
insl
call
xor
out
jbe
jnp
popf
mov
cli
adc
lock
les
sub
push
xchg
out
call
dec
arpl
mov
cli
xor
pop
test
mov
pop
jne
ds
sahf
lret
cs
aad
push
dec
mov
cli
inc
xlat
and
mov
fimull
dec
push
iret
push
gs
sbb
mov
outsl
xor
pop
pop
ja
mov
aad
rcrb
cmpsb
out
stc
movsl
pushf
out
pusha
jb
movsl
lock
subb
clc
imul
loop
xchg
mov
addr16
add
test
push
test
pop
cs
pop
ffree
pop
notl
mov
loop
insl
sbb
lds
mov
dec
jg
imul
cmpb
fidivl
mov
stos
mov
loop
sub
adc
mov
mov
jmp
loopne
adc
lea
aam
sub
loop
add
ss
push
or
loop
pop
insl
mov
in
push
pop
add
pop
mov
ljmp
in
dec
xchg
pusha
mov
push
roll
imul
mov
jmp
inc
sbbl
pop
add
les
fstpt
dec
fdivrs
mov
es
add
in
clc
ret
andb
push
loop
xchg
pop
call
sbb
test
jnp
cmpsb
ds
aam
inc
scas
fstps
cmp
rorb
outsb
scas
enter
in
test
mov
imul
pop
addl
xor
xchg
push
sub
and
xor
inc
pop
out
stos
scas
push
mov
push
jle
fstpt
jb
test
rolb
sbbl
add
andb
test
mov
mov
fidivrs
dec
adc
dec
mov
andl
cmp
inc
fwait
leave
divl
mov
pop
pop
inc
subl
les
gs
out
cwtl
mov
or
ja
mov
movsl
sbb
jmp
sbb
rcll
push
int3
mov
pop
cmc
shlb
adc
gs
enter
xlat
sub
sbb
cwtl
push
in
cmp
repz
jbe
cli
jo
xchg
dec
stos
imul
cmp
cmpsb
aaa
dec
imul
xlat
stos
add
sbb
in
daa
aad
rol
jb
push
and
cmp
sub
xlat
insb
mov
jns
int
xchg
arpl
stc
shl
xlat
pop
je
xchg
mov
push
outsl
andb
aaa
pop
push
pop
int3
and
call
lcall
fistl
ss
add
lods
icebp
aam
push
cs
insb
repnz
mov
pop
jbe
fdivrs
sbbl
jnp
jecxz
and
in
push
sub
xor
jmp
mov
iret
mov
ljmp
outsl
push
icebp
mov
push
jbe
add
mov
sub
or
jb
test
jne
mov
xchg
imul
xchg
imul
std
mov
sbb
popa
and
fmul
lea
lret
mov
lds
pop
cmpsl
xchg
fsubs
insb
pop
xlat
adc
dec
xor
dec
frstor
loopne
adc
test
push
inc
xchg
iret
adc
mov
ljmp
xchg
ljmp
pop
ss
cwtl
adc
scas
sbbl
mulb
mov
dec
xchg
outsl
mov
scas
dec
repnz
mov
dec
lods
jg
push
jbe
cmpsb
adc
and
int
into
lock
stos
add
aad
cmc
lret
cmp
sub
jmp
ret
xchg
stos
mov
bound
mov
add
lahf
lds
pop
sti
ljmp
push
inc
scas
out
ftst
pop
clc
in
ja
shrl
dec
rcr
ss
fwait
aaa
adc
push
pop
pop
into
push
sub
jp
pushf
cmp
mov
cli
push
dec
cmp
cmp
bound
in
add
cmp
push
adc
mov
mov
inc
mov
jno
call
addl
into
mov
mov
ja
std
sub
mov
aas
sub
pop
insl
adc
pushf
push
mov
std
call
and
es
push
fiadds
xor
and
push
cmp
scas
dec
je
andb
cmpsl
mov
cmp
rorb
cmp
cmp
cld
push
stc
mov
call
cwtl
hlt
loope
imull
mov
int3
int
lret
xor
sub
jmp
pop
mov
jle
sbb
jo
mov
cmp
mov
push
pop
fisubl
cmp
shlb
loop
xchg
add
int
xor
aaa
dec
jns
cmpsb
mov
mov
shlb
jbe
mov
fists
test
xchg
ss
rcrl
mov
mov
or
dec
mov
xchg
cwtl
dec
jne
push
shll
out
or
test
shlb
arpl
add
cmp
prefetcht0
cmp
call
or
es
lret
dec
mov
sbb
pop
cmpsl
shl
adc
negl
xor
in
psubw
pop
pop
sub
dec
bound
cmp
mov
pop
js
push
inc
jbe
cmpsl
cmp
das
xchg
stc
rol
inc
rorl
inc
pop
pop
mov
sbb
jnp
lds
jns
mov
rcr
fsubr
int
pop
mov
mov
jno
adc
adc
or
sahf
jmp
mov
insb
hlt
push
aam
or
in
testb
daa
int
into
pop
outsl
pop
das
shll
xchg
andl
aad
addr16
cmp
and
cmp
inc
rolb
sbb
lods
xor
push
outsb
mov
lcall
imul
scas
inc
fcompl
jns
movsl
adc
out
out
test
push
add
insl
xor
jge
xor
pop
dec
and
add
mov
stos
or
scas
sbb
adc
hlt
pop
push
jae
rcr
and
jmp
adc
hlt
mov
arpl
sbb
insl
dec
pop
test
push
mov
push
bswap
and
dec
test
setp
lods
jae
or
jge
pop
fistpl
xchg
cmp
mov
rol
xchg
mov
call
nop
mov
cmp
mov
mov
and
aam
in
arpl
cltd
push
pushf
adc
mov
sub
popa
es
jne
xchg
out
sarb
fstpl
dec
dec
or
das
dec
adc
inc
rcr
adc
push
movsb
sarl
ljmp
fistl
push
pushl
mov
xchg
loop
inc
pop
cwtl
jns
cwtl
add
jecxz
sti
fstps
xchg
dec
nop
xchg
ljmp
test
ficoms
hlt
mov
in
test
push
or
xchg
xorl
push
insb
maskmovq
notl
push
mov
sub
add
mov
cmc
xchg
out
push
add
jae
mov
hlt
out
push
add
aad
rcr
aaa
xchg
aam
out
pmaxub
outsb
fistpl
or
rcl
loopne
inc
addr16
fadds
out
data16
mov
fldl
cli
pop
inc
mov
sbbl
mov
cmp
std
adc
daa
addr16
test
pusha
call
arpl
dec
mov
mov
aas
sub
shr
popa
popf
int3
mov
xchg
jle
xchg
incb
mov
jl
and
xor
mov
and
mov
cmp
lock
shrb
lock
adc
inc
push
pop
mov
jecxz
push
mov
cmp
jae
mov
nop
js
loope
or
cs
int
jno,pt
rorb
sub
push
xlat
fnstenv
pusha
mov
fidivrs
xor
adc
mov
pushf
popa
fucomp
jl
loope
movsb
jae
scas
loopne
into
std
dec
mov
inc
mov
add
jge
jge
mov
std
pusha
mov
cmp
add
sbb
cmpsb
pusha
mov
stc
daa
js
arpl
jg
mov
sbb
jge
mov
idivl
push
xor
enter
mov
push
adc
pop
push
sbbb
jno
mov
cmp
jg
sbb
mov
inc
imul
cmc
mov
jno
les
pop
dec
lds
lret
mov
dec
dec
popf
fwait
loop
push
jecxz
lret
push
sub
shrb
movb
xor
xor
icebp
pop
or
scas
jno
push
push
out
push
clc
xchg
pusha
aas
cmp
push
setne
sbb
lea
mov
lds
inc
mov
push
fdiv
sub
out
and
out
mov
cmp
sbb
enter
sbb
and
roll
jp
xchg
jmp
mov
pop
mov
adc
into
mov
icebp
leave
testl
adc
lods
popf
inc
and
pop
inc
inc
stos
dec
and
addl
in
cmp
stos
out
jmp
mov
mov
clc
xchg
ja
aaa
push
add
mov
lret
jne
cmpsl
les
fucomip
or
fucom
jbe
pop
mov
or
mov
jnp
cli
jp
push
hlt
jne
test
and
jecxz
fstp
mov
adc
in
out
icebp
scas
pop
sbb
xchg
bound
daa
add
ret
and
movsb
xlat
or
sbb
add
sub
jo
dec
jno
sbb
pop
popa
fsubrl
enter
out
adc
addb
pop
mov
aad
pop
loopne
cltd
xor
mov
icebp
and
pop
popa
push
fwait
imul
adc
xlat
aam
cmp
fcoml
out
sbb
adc
pushf
jb
inc
xlat
daa
pop
clc
daa
orb
lea
pop
dec
xchg
inc
xor
xchg
aaa
xchg
sahf
imul
pop
jno
pop
xor
push
lock
enter
pop
scas
subl
js
fimull
jmp
or
cmc
push
jp
push
lods
cmc
push
roll
jg
int3
push
mov
cmp
insw
rorb
daa
pop
adc
fldl
sub
pop
movsb
orb
jge
clc
adc
arpl
cltd
jp
iret
mov
add
cmpsl
or
lods
xchg
lods
mov
ss
cld
out
scas
call
jbe
adc
mov
fwait
cmp
notb
dec
out
rcrl
ljmp
mov
test
mov
mov
add
mov
into
sbb
test
push
pop
arpl
xor
xchg
decl
adc
pop
les
xor
cli
scas
sbb
and
stos
popa
mov
scas
mov
jns
and
mov
push
stos
jb
in
jge
add
out
jmp
add
add
add
mov
lcall
sbb
arpl
mov
mov
adc
mov
test
mov
mov
lock
outsb
push
mov
mov
fwait
dec
add
sbb
hlt
pop
test
sub
xor
jne
dec
xor
dec
inc
lods
mov
insb
xchg
mov
or
pop
jle
add
jp
mov
push
nop
sbb
mov
sub
pop
sub
hlt
mov
or
mov
outsb
dec
aam
cmp
push
sub
pushl
add
pop
pop
lods
adc
inc
rol
dec
xor
sarb
cld
loope
xor
fs
das
fldenv
hlt
movl
sub
ss
inc
faddl
divl
cmc
pop
repz
inc
mov
xlat
ret
mov
pop
push
das
cmpsb
sub
sbb
fiadds
sbb
xor
mov
fcomp
loop
xchg
xorl
aam
insl
dec
cmp
movsb
js
scas
movsl
dec
ss
jne
in
xchg
lcall
sub
popf
dec
push
scas
xchg
or
xchg
dec
push
push
iret
mov
inc
test
rolb
cli
dec
dec
aas
js
cmp
in
stos
ljmp
es
dec
ljmp
pop
fwait
push
xor
xor
sbb
addr16
bound
stos
mov
cmp
out
gs
cld
inc
sbb
sbb
mov
inc
andb
or
jnp
mov
cwtl
push
sbb
add
xchg
test
mov
je
xchg
setle
das
cmp
fmull
hlt
pop
sbb
outsl
mov
imul
div
or
sbb
mov
in
add
fnsetpm(287
f2xm1
rcrl
jbe
in
mull
push
aad
cli
sub
roll
pop
data16
call
push
icebp
push
jp
mov
pushf
mov
inc
inc
cmp
and
xor
nop
inc
or
loop
in
pop
pop
jg
bndstx
pop
loope
sub
pop
push
daa
es
out
test
xor
adc
aas
jne
rolb
popf
fildl
dec
shrb
mov
insb
push
jo
iret
xchg
sub
cmp
or
add
cld
cli
dec
mov
or
sbb
xlat
and
clc
push
imul
das
out
and
mov
bound
das
and
inc
push
scas
push
ret
push
lahf
lds
loope
scas
sbbl
and
xor
mov
sahf
stos
call
loope
roll
mov
mov
lahf
cmp
in
push
std
pop
icebp
lea
jle
out
mov
insl
push
pop
inc
lds
aaa
test
adc
sbb
and
jns
outsb
xchg
push
fimuls
test
test
mov
aam
xchg
jno
fisubrl
mov
cmc
aam
sbb
lahf
xchg
and
mov
cli
ds
in
sbb
mov
adc
mov
xchg
sub
ja
and
lock
into
push
pop
push
dec
bound
fcomi
sub
inc
xchg
or
aaa
lock
ret
frstor
dec
push
pusha
push
cmp
testl
pop
inc
pop
int
ljmp
rorl
call
pop
dec
insl
push
addb
sbb
cmp
add
push
add
jle
pop
out
arpl
fdivrl
cmp
movzbl
sub
arpl
jbe
fmuls
push
mov
cld
out
sbb
loope
inc
dec
push
cli
fistpl
movsb
stos
scas
cltd
out
into
fldl
pop
xlat
cmc
arpl
mov
add
push
cltd
inc
mov
sbb
pop
icebp
xlat
lds
inc
nop
movb
mov
mov
xor
mov
rorl
dec
jp
call
push
add
lds
enter
or
out
sbb
pop
pop
adcl
mov
and
mov
xchg
pop
xchg
loop
imul
cmpsl
jg
push
jmp
testl
in
ret
mov
and
sub
out
xchg
inc
stos
in
aam
leave
das
clc
add
pop
push
mov
sbb
or
jbe
fisubl
pop
ffreep
and
sbb
fidivl
movsl
shll
lock
sti
cmpb
jg,pn
jecxz
movl
and
and
lds
clc
dec
mov
mov
rorl
inc
out
nop
mov
mov
inc
xchg
pop
enter
shl
movl
int
xor
or
xor
mov
inc
mov
hlt
rolb
icebp
cwtl
std
adc
enter
adc
cmp
out
add
mov
pop
push
jae
push
mov
ficoml
sbb
xlat
out
sarl
int3
push
clc
sbb
cmp
jmp
mov
clc
push
dec
cmpsl
push
mov
add
pusha
mov
sbb
jl
loope
es
cmpsl
push
sbb
fcomps
jmp
xor
call
jecxz
cli
pop
scas
ljmp
outsb
es
leave
inc
mov
jnp
out
out
cmpsl
stc
xorl
out
cmc
ljmp
data16
std
push
mov
dec
gs
mov
mov
in
scas
xacquire
add
repnz
pop
pushf
jno
ds
mov
inc
inc
shrl
adc
sbb
pop
mov
jmp
scas
adc
push
add
sbbb
inc
lock
push
fcmovnbe
rorl
jmp
arpl
sti
xlat
lock
add
mov
mov
cwtl
ljmp
adc
sbb
hlt
test
jp
xchg
je
jno
leave
cwtl
sub
add
mov
inc
fildl
inc
or
insb
shl
das
mov
cmp
sbb
loopne
out
jb
xlat
fldl
xchg
push
arpl
jl
push
and
pop
push
lcall
inc
inc
lods
sar
dec
out
test
and
mov
sbb
rclb
add
shl
jbe
dec
inc
loope
ja
scas
mov
xlat
int
dec
stos
arpl
aad
movsl
pop
call
or
mov
cwtl
push
insl
icebp
pop
setle
mov
push
clc
lea
inc
mov
and
daa
pop
and
repz
sbb
mov
mov
ret
jnp
xchg
sbb
scas
pop
movl
sbb
pop
lock
in
adc
mov
push
jecxz
jp
push
stos
mov
push
push
push
jns
enter
mov
movsb
xchg
and
stos
or
inc
imul
sbb
or
inc
adc
jo
es
xchg
jns
fwait
prefetch
push
pop
insl
clc
out
loope
and
mov
xor
into
push
sub
imul
xor
mov
popf
mov
push
ret
outsl
dec
dec
ret
mov
push
ficoml
cs
lahf
out
cld
dec
or
cmp
sub
pop
jl
xor
hlt
cmp
or
cmp
mov
mov
aas
jl
cmp
fists
lcall
push
push
mov
cmpsb
push
xor
adc
dec
popa
mov
push
call
mov
aad
out
ret
es
ficoml
or
pop
sti
cli
jbe
lea
fildll
mov
sbb
rclb
fidivrl
nopl
jne
jne
cmpsl
inc
ret
push
ret
xchg
mov
sub
push
fildll
loop
cli
xchg
iret
mov
in
pop
adc
jnp
cld
and
sbb
cmpb
loop
dec
jg
inc
sub
ja
xchg
data16
scas
mov
jnp
xchg
test
mov
mov
in
mov
call
aam
fnstenv
insb
jp
inc
adc
sti
icebp
cs
or
pop
daa
or
or
pop
push
and
mov
jp
mov
mov
xchg
js
push
jmp
shll
jl
out
jae
pop
mov
mov
lods
sbb
cmp
neg
sbb
xor
movl
loope
lds
movsb
sbb
jbe
mov
sbb
pop
fstp
stos
push
jle
into
int3
sub
push
jmp
xlat
and
push
neg
mov
fnstsw
shlb
cs
mov
faddp
push
pushf
insl
sahf
dec
movb
jbe
outsb
mov
out
adc
lret
pop
push
mov
cmp
mov
insl
xchg
rolb
push
shl
sub
pop
cmp
rorl
sbb
xor
inc
mov
outsb
scas
daa
outsb
mov
fdivrs
popf
in
push
and
xor
lea
cmpsl
xor
mov
cwtl
clc
inc
pop
mov
jecxz
sbb
jno
icebp
or
mov
loope
imul
push
xor
inc
ds
pop
shrb
outsl
cmp
fmull
mov
fistl
cltd
bound
imul
sub
xchg
stos
fs
ss
inc
in
xchg
ret
shr
loopne
rcll
inc
jle
dec
sbb
or
or
lds
cmpsb
pop
dec
dec
cld
mov
fst
adc
jb
jbe
sbb
shlb
sub
fs
ljmp
jl
aaa
sub
jl
ljmp
and
sbb
call
or
mov
sbb
cmp
add
lcall
jg
in
jmp
sbb
dec
jmp
in
or
adc
fcom
aad
jle
cmpl
pusha
iret
movsl
jge
pop
jo
mov
sub
scas
add
js
aam
mov
inc
cli
or
pop
mov
or
pop
dec
fisttps
icebp
fbld
adc
pop
fmuls
ss
dec
sub
ljmp
aad
insb
fsubrl
lea
bound
cli
mov
aaa
in
xor
bound
ss
jo
pusha
jp
mov
call
fildll
cli
testb
ficompl
shr
xchg
sub
sub
jmp
scas
scas
test
movlps
jl
fsub
rcl
lea
jle
loop
ret
pop
std
loope
pop
mov
stos
es
lock
mov
lods
popf
imul
iret
xor
sbb
bswap
cmpsl
inc
fdivrl
addb
jae
adc
jne
ja
or
andb
hlt
fnstsw
stc
mov
mov
shll
push
aam
jle
xchg
mov
pop
in
sbb
sbb
xlat
scas
loop
imul
jecxz
fisubrl
insb
lret
xor
inc
lds
in
lock
push
add
in
jbe
imul
int
cmp
inc
push
stos
cltd
pop
pop
or
jecxz
popa
arpl
mov
cld
repz
mov
xlat
lret
cmpsb
outsb
fistpll
repnz
inc
and
jmp
mov
loope
in
lods
imul
ret
and
push
fs
jge
cmp
jae
cwtl
and
push
iret
add
cwtl
loope
push
cmp
jb
in
jmp
cmp
lock
adc
pop
bswap
cmp
xchg
outsl
stos
jb
ror
les
push
mov
sub
push
enter
out
xchg
fcomps
mov
popf
sbb
cmp
mov
ret
add
mov
mov
aad
loope
inc
mov
or
xor
mov
scas
lea
leave
arpl
push
xor
mov
cwtl
mov
int
packsswb
ds
mov
add
cmp
mov
icebp
repz
push
or
jb
add
dec
xchg
adc
mov
xlat
sbb
mov
mov
shrl
mov
mov
jp
dec
pmaxub
popf
pop
ss
mov
cli
out
cs
jae
int
popa
lds
dec
jae
ret
shlb
jl
pop
sbb
popa
lods
cmpsl
add
daa
addr16
js
mov
cmp
pop
mov
xlat
addr16
repz
inc
fimuls
xchg
inc
sub
pop
push
inc
incl
jle
in
xor
cmp
jl
xor
scas
mov
push
jp,pn
in
cs
cmpsb
scas
mov
jno
outsl
mov
aam
std
lret
mov
ljmp
clc
pop
adc
jl
sbb
or
inc
adc
jmp
inc
repz
out
jo
push
sbb
cmpsb
jo
push
mov
or
push
sti
jecxz
sbb
pop
push
mov
or
mov
shl
inc
lods
addr16
cwtl
mov
in
fiaddl
lea
sbb
pop
pop
cwtl
jno
aam
fidivrs
int
dec
push
leave
inc
xchg
call
int
fnsave
dec
adc
aas
popf
adc
or
scas
jmp
lea
add
fisttpl
sub
mov
loope
stc
add
jp
test
fadds
or
xchg
dec
in
outsb
mov
inc
popf
mov
loope
inc
outsb
jne
test
popf
movsl
push
test
jno
es
cmp
les
cmc
loop
mov
sti
adc
aas
shll
cltd
push
outsl
inc
mov
clc
mov
lahf
xchg
mov
jp
fisubl
cmp
leave
mov
mov
or
dec
je
mov
imul
call
imul
pop
pop
ds
fmuls
sub
adc
pop
in
int3
fdivs
add
xchg
and
repnz
pop
mov
ss
mov
mov
stc
stos
push
push
jbe
pop
mov
xor
inc
mov
or
jge
sahf
cmpsb
out
push
arpl
das
push
cli
mov
and
push
push
cli
fld
scas
stos
rcrl
sbb
mov
divl
test
mov
aad
stos
inc
scas
push
or
into
sub
addr16
ds
call
addr16
mov
pop
and
cwtl
dec
out
les
xchg
mov
pop
rorb
daa
push
aaa
int3
xchg
mov
add
int
jg
jno
ret
adc
in
or
in
lods
sbb
test
jp
fidivrs
adc
sbb
cmpsb
and
out
mov
push
cmc
pop
jge
cmp
lret
xor
fsubrl
mov
cmp
pop
sbb
or
sti
ss
push
pusha
jae
icebp
mov
jge
xchg
js
mov
stos
pop
mov
call
shl
mov
xor
ja
lcall
lods
icebp
jl
xchg
push
or
std
mov
add
pushf
lods
mov
out
sbb
fisttpll
mov
adc
push
scas
push
cmp
scas
jo
in
cmpsl
push
test
out
pop
mov
in
lret
or
sub
push
test
jmp
shlb
popa
ds
fs
cmp
test
cmc
movl
mov
sbb
dec
pushf
cmpsl
addl
lcall
test
mov
das
fwait
jle
fwait
or
xchg
push
cltd
sbb
or
push
test
sub
push
aas
adc
or
xchg
sub
stos
arpl
cmc
out
iret
or
movl
cld
inc
cmpsb
mov
test
jo
lahf
dec
push
mov
inc
pop
test
es
rcl
mov
jne
dec
fcmovu
pop
rcr
rcrb
pop
add
pop
pop
je
add
pop
fldl
sub
pop
cmpsb
das
loop
or
mov
rolb
sbb
pop
xor
mov
lret
push
push
mov
jecxz
sbb
popf
push
sub
pop
mov
test
imul
inc
loopne
or
sub
lahf
sahf
js
pop
xlat
insl
add
hlt
dec
sub
stos
sbb
ret
add
or
jo
push
mov
shl
push
push
push
ds
cmp
into
cmp
jne
dec
scas
pcmpgtb
adc
loope
insb
adc
cli
jg
mov
call
push
mov
lds
sarb
cmp
add
leave
mov
ljmp
dec
mov
movsl
mov
cmp
outsl
fs
pop
outsl
mov
inc
push
jne
cmc
jecxz
jbe
push
mov
roll
leave
push
adc
xchg
ret
nop
sub
mov
fwait
cmp
cmp
or
lcall
cmpsl
push
cld
pop
insb
and
sbb
and
dec
mov
imul
ror
mov
insl
fcmovnbe
sbbb
insl
jle
lods
leave
adc
frstor
sbb
rcrb
sub
scas
and
push
xor
pop
ficoml
push
fdivrs
xchg
cs
scas
outsb
jnp
adc
insl
insl
push
lcall
xchg
or
fnstsw
adc
pop
push
clc
in
fwait
sahf
mov
adc
loopne
inc
fldl
in
movsl
push
mov
xchg
lds
push
adc
pop
jle
pop
subb
test
insl
fisubs
mov
mov
cmpsb
cli
fndisi(8087
aam
pop
and
push
jmp
test
mov
fmul
in
inc
cli
test
pusha
rcrb
xor
mov
xor
dec
repz
loop
out
cmpsl
ja
imul
xor
ja
daa
sub
mov
aam
and
dec
mov
inc
mov
test
int3
icebp
addl
xor
adc
mov
aaa
sti
loopne
icebp
imul
xlat
mov
pop
fdivs
imul
add
mov
mov
fisttps
cmp
sbb
mov
push
pop
sbb
inc
jge
sbb
insb
das
pusha
and
je
cmpsb
stc
push
data16
inc
roll
lock
push
lds
xchg
mov
mov
movb
arpl
push
mov
stc
dec
lods
pop
sub
mov
lock
jmp
lods
lods
xchg
mov
pop
add
scas
pop
mov
fcompl
mov
out
or
outsl
pop
push
sub
jp
imul
add
ja
test
push
push
or
dec
push
data16
aaa
out
es
lcall
mov
add
pop
loope
nop
jb
hlt
add
xchg
mov
clc
mov
adc
loop
or
ljmp
scas
stos
add
sub
jl
or
pop
call
les
cli
sub
or
lret
add
sbb
adc
sub
ret
xchg
dec
jo
xchg
fisubrl
call
push
jecxz
emms
jl
pop
lcall
push
mov
test
cld
iret
enter
and
dec
bnd
and
sti
xchg
and
loope
mov
mov
mov
mov
cmp
mov
clc
cmp
daa
xor
sti
mov
pop
cmpsl
mov
inc
xor
cmpsl
je,pt
mov
xor
decl
sbb
daa
jae
add
cli
test
scas
dec
int
lcall
cmp
das
or
insb
insb
adc
std
mov
push
call
cs
cli
push
movsb
xor
cmp
sbb
push
testl
and
pop
sbb
mov
pop
add
pop
pop
jne
rclb
ret
mov
or
fcmovnbe
imul
push
xlat
mov
cmp
stos
push
js
mov
push
xchg
push
nop
cmpsl
or
shl
shl
loop
test
jg
int
popa
aam
in
or
in
fcoms
je
push
cmp
iret
and
inc
scas
sahf
xlat
shll
lea
mov
adc
cmp
sbb
fcomi
subb
push
call
or
in
sbb
fwait
mov
clc
jecxz
sub
add
mov
inc
jl
lods
stc
sub
ss
test
xlat
pop
jo
lea
shrb
jo
push
mov
add
sbb
mov
mov
out
orb
jae
jnp
mov
jo
lcall
jbe
gs
sti
xlat
scas
mov
pop
in
ss
leave
dec
cmp
iret
jne
insl
dec
rol
rcr
cmpsl
idivb
loope
xchg
cltd
inc
dec
clc
aaa
shll
ret
imul
repnz
ret
xor
mov
and
or
xchg
sarb
adc
test
pop
xor
aam
mov
inc
adc
repnz
jp
xor
ficoms
cmp
pop
dec
popf
add
push
loope
mov
cmp
add
and
xorb
or
push
sbb
outsb
andps
imul
sub
shr
dec
mov
pop
or
pusha
dec
pushf
push
hlt
mov
aas
pop
aam
xchg
imul
ja
adc
nop
cmpsl
and
mov
iret
inc
fisttps
push
clc
inc
and
push
sub
aad
ficoms
enter
test
sub
cld
mov
aam
stos
loope
jb
lods
inc
xchg
add
insl
movsb
push
lea
pop
enter
fldl2e
into
push
pop
jle
xor
outsb
jecxz
sub
dec
xor
cmp
mov
dec
stos
jp
imulb
dec
loop
sti
cs
sbb
cmp
icebp
and
les
jl
cmpsb
in
arpl
pop
sti
mov
xchg
adc
insb
lahf
xor
adc
jle
mov
rorl
fiaddl
inc
lcall
imul
popa
xchg
jae
ret
das
xchg
mov
pushf
int
aas
loope
lods
sbb
xor
popf
mov
aad
dec
mov
fnstsw
idivl
adc
lret
and
xchg
int3
push
int3
push
insb
push
add
insb
xchg
aad
outsb
out
int3
pop
sbb
xchg
mov
daa
add
push
cmc
mov
dec
roll
in
popa
adc
out
ljmp
test
and
xchg
insb
mov
cmp
xchg
sub
inc
cs
and
bound
xchg
outsb
movd
sbb
xchg
bound
ljmp
and
lods
xor
pop
mov
nop/reserved
ret
dec
add
mov
xor
jb
inc
aaa
or
mov
sub
pop
xchg
in
and
cmp
push
fdivs
div
push
fcomp
fldt
adc
mov
cmp
jnp
jp
cmc
aad
adc
icebp
jne
imul
mov
jb
jecxz
ret
in
mov
or
inc
daa
out
or
xchg
call
push
test
aam
jo
sbb
pop
mov
pop
xchg
cmp
fcmove
mov
push
sub
mov
sti
add
mov
cmc
test
jne
xlat
inc
movsb
mov
out
push
push
rcr
les
mov
leave
repnz
lods
add
sbb
ljmp
jno
jo
roll
pop
jl
mov
loope
cmp
cmpsb
pop
push
xorb
out
mov
inc
xchg
inc
aam
mov
fisttpll
or
filds
jbe
xchg
int
leave
aam
lea
or
jge
adc
popf
sub
pop
push
out
lds
push
adc
sahf
repz
fnsave
aad
pusha
inc
cmp
mov
aam
lahf
andb
shlb
xor
popa
inc
ret
inc
shrb
or
jo
in
mov
xor
jmp
xchg
add
insl
pusha
xchg
clc
insb
icebp
xlat
cld
add
xor
push
pusha
insl
mov
dec
mov
es
jge
fcoml
pop
shr
push
cmc
mov
adc
mov
aam
aaa
in
jmp
sub
inc
fmuls
dec
iret
loop
paddusw
cmpsb
jnp
jae
dec
jp
sti
add
pop
lods
push
loopne
out
jns
daa
mov
cmc
cmp
mov
push
loop
or
xor
inc
into
fwait
ljmp
pop
mulb
push
shl
loope
xor
test
mov
notb
cmpsl
jae
inc
stos
lret
jle
push
and
add
test
sbb
sarl
mov
jle
add
and
dec
dec
dec
jg
and
mov
mov
cmpb
cvtdq2ps
jne
xchg
dec
mov
stos
xchg
and
scas
sbb
mov
test
sbbl
in
inc
rcrl
sub
pop
inc
mov
movsb
cmp
push
sahf
decb
xor
rorb
cli
les
leave
and
popa
movsb
loop
insl
mov
push
cltd
mov
push
xlat
adc
dec
mov
hlt
jg
mov
rorl
mov
sbb
dec
mov
cmp
mov
inc
sbb
mov
push
add
mov
fwait
icebp
add
cli
or
jmp
int3
dec
mov
aad
xor
ljmp
add
js
cmp
inc
inc
dec
lcall
daa
inc
or
std
loopne
mov
std
mov
aaa
jl
mov
adc
xchg
cli
cmp
std
push
mov
mov
cmp
inc
push
or
call
sbb
mov
mov
cmp
daa
dec
in
mov
fs
or
js
outsb
rcl
cmp
int
adc
insb
or
jnp
cltd
pop
mov
mov
arpl
mov
ljmp
divb
arpl
add
lock
add
xor
arpl
add
outsb
sub
mov
mov
aaa
enter
jnp
hlt
ret
lahf
cli
jne
xchg
mov
xor
pop
pop
out
cmp
pop
dec
icebp
xor
loopne
inc
aaa
lods
ljmp
lret
push
push
push
test
hlt
push
cmp
lret
hlt
add
stc
xor
adc
push
cmpl
mov
push
inc
adc
mov
add
in
cmp
clc
inc
and
dec
icebp
imul
notl
sbb
emms
rorl
mov
in
dec
testl
add
enter
mov
xor
adc
mov
jge
mov
sub
sub
pop
pop
mov
lock
movl
xchg
jbe
outsl
jmp
shl
adc
mov
out
push
cmp
lds
and
pop
mov
pop
fildl
in
mov
or
sub
aaa
ds
dec
loopne
xchg
aam
dec
cmc
aad
jmp
mov
test
sbb
inc
dec
sbb
cld
pop
mov
ljmp
mov
mov
popf
inc
nop
insl
mov
je
xchg
jmp
cmpsl
xor
adc
mov
push
mov
jge
fcoml
ss
sub
cli
fwait
lods
rcll
pop
aam
mov
jmp
loopne
fwait
inc
call
jecxz
xor
xchg
outsb
aad
add
add
inc
push
icebp
inc
inc
push
push
ss
clc
les
adc
add
add
insb
and
movsl
insl
mov
and
adc
sub
push
push
jg
xor
dec
adc
mov
fucomp
mulb
lock
insb
lahf
fs
jne
js
jno
stc
add
fucomp
mov
and
fcomps
inc
mov
and
sbb
ret
inc
sbb
ds
add
fsubs
jbe
push
fmull
add
inc
cmpxchg
les
sbb
bound
lcall
lea
pop
call
addr16
jl
scas
pmulhw
pushf
out
loope
xchg
adc
pop
cmp
push
mov
jns
or
ret
outsl
pusha
adc
add
push
mov
add
pop
sbb
scas
int
notl
in
mov
xlat
imul
cwtl
adc
pop
add
jae
xchg
outsb
sub
jb
js
push
or
xor
mov
xor
mov
addb
inc
cmp
mov
push
push
mov
jecxz
jb
stos
popa
mov
popa
loope
mov
or
arpl
insl
ljmp
mov
in
inc
ret
mov
in
sub
repz
out
jge
int
shrb
add
imul
push
mov
aas
and
cmp
mov
aam
push
loop
mov
inc
xlat
sbb
mov
push
and
cmpsb
or
jae
inc
push
andb
out
and
das
or
mov
enter
mov
mov
mov
out
mov
pop
sbb
sub
jecxz
mov
inc
fidivrl
xlat
push
sahf
jp
into
mov
dec
cmp
xor
call
dec
mov
bound
inc
aam
inc
inc
xchg
xor
imul
lret
xorl
mov
jmp
shlb
mov
push
pop
dec
repnz
lcall
rclb
inc
lock
add
push
add
adc
mov
ds
ljmp
idivb
fcmovnbe
inc
dec
insb
stc
mov
dec
jmp
lcall
sbbb
imul
and
mov
movsl
js
orl
inc
sub
mov
aad
shrl
cmp
out
sahf
fcmovu
and
sbb
cmpsl
push
stos
ljmp
push
push
push
lret
mov
dec
nop
add
popf
or
mov
orl
je
insl
ret
cwtl
and
pop
fcomip
js
pop
sbb
jbe
rcl
inc
outsb
sub
movsl
aad
pushl
mov
sub
fbstp
inc
lds
jg
divl
negl
mov
pop
xor
xor
out
fs
adc
jmp
cld
jle
mov
loope
or
mov
lea
xor
push
daa
mov
loopne
mov
pop
roll
rclb
jbe
cmp
xchg
mov
testl
pop
out
outsb
sub
imul
mov
push
aad
cmpsl
inc
je
pop
sbb
iret
out
xchg
nop
stc
fnstsw
push
mov
jae
aam
cmp
sub
xorb
shlb
loopne
out
adc
jae
mov
mov
testb
ljmp
jno
addb
jb
push
dec
mov
xchg
cmp
test
jge
ss
leave
mov
addb
mov
test
jb
inc
filds
jge
movsl
sbb
rclb
dec
mov
js
hlt
nop
jle
or
outsb
mov
out
insl
push
fistpl
sbb
addb
mov
scas
out
ret
and
or
push
xchg
aam
push
pop
mov
add
es
in
dec
outsl
inc
adc
dec
mov
mov
or
rclb
adc
popa
sbb
dec
pop
pop
ja
ljmp
jo
mov
divl
mov
test
xor
sub
jbe
je
jl
mov
xchg
into
mov
int
mov
addl
add
aas
jge
test
lock
out
xchg
cmpl
jae
out
sbb
loopne
repz
aaa
shl
push
ret
mov
movsb
mov
fdivrs
inc
pop
test
scas
bound
ljmp
or
gs
loop
ret
popa
mov
mov
mov
pop
xchg
das
rcll
add
push
ljmp
fs
in
stos
inc
add
das
mov
aaa
push
push
dec
push
test
jmp
xor
cmp
mov
jge
lods
xor
pushl
std
sbb
xor
push
pop
jle
and
sbb
test
or
mov
sbb
sub
jle
sbb
lea
jecxz
call
sub
imul
adc
sbb
loop
loope
sub
push
pop
out
insb
mov
jg
iret
popa
or
mov
out
and
xor
push
pusha
hlt
lock
or
adc
hlt
dec
add
imul
pmuludq
and
or
ret
add
xorl
xchg
push
cmpsl
sarb
dec
dec
mov
adc
xchg
cmp
add
fimull
mov
push
leave
gs
jno
unpcklps
add
shl
pop
mov
add
rolb
cli
push
xchg
jne
enter
imul
mov
push
lock
and
inc
jecxz
mov
fnstsw
sub
lea
ret
xlat
shrb
aam
inc
fildll
and
jnp
jmp
aas
dec
mov
test
jns
inc
lret
cmp
call
leave
and
push
pop
sbb
sub
es
sbb
mov
sar
fidivl
imul
in
cmp
test
push
inc
cmp
mov
inc
cmp
pop
pop
add
inc
add
mov
mov
stc
mov
in
dec
aam
subb
or
cmp
pop
xchg
cld
ret
fsub
loopne
dec
std
aad
jbe
xchg
std
adc
jp
add
push
in
or
pop
xor
mov
lret
sub
xor
aaa
std
test
out
adc
popa
shll
mov
fstl
scas
mov
dec
aaa
push
int3
pop
jle
inc
movl
mov
xor
lock
es
popf
or
xor
cmp
popf
arpl
cltd
xor
es
mov
out
stos
outsl
jbe
scas
iret
mov
xchg
cltd
mov
push
nop
pushf
mov
mov
outsb
dec
or
push
xor
dec
cld
leave
jmp
hlt
push
xor
adc
or
lods
jbe
stc
fdecstp
ja
adc
enter
lea
mov
icebp
les
fimull
insl
stc
push
pusha
push
out
mov
out
pop
xor
insl
mov
add
mov
outsl
cwtl
and
js
dec
sahf
lds
pop
cwtl
hlt
push
rcl
mov
fstpl
cmp
pop
inc
xchg
push
fisttps
push
or
stos
scas
jmp
or
cmp
dec
push
jle
imul
stos
xlat
in
cmp
ljmp
scas
inc
mov
push
add
push
or
test
xor
jne
and
pop
push
add
arpl
mov
cmp
iret
movsl
popa
adc
xlat
ja
mov
mov
hlt
mov
pop
dec
pcmpeqw
mov
lods
jmp
add
clc
mov
je
cmp
ja
pop
sbb
pop
fistps
sub
les
nop
fs
test
sbb
shrb
cmpsb
std
adc
push
mov
fwait
jne
cli
cmpb
daa
pop
jnp
cmp
gs
scas
fwait
addr16
or
cltd
ljmp
xchg
lock
cmp
sarb
jge
hlt
mov
loopne
push
inc
adc
or
mov
or
mov
insl
push
in
fs
cs
push
jp
push
mov
scas
outsb
roll
das
jmp
inc
iret
daa
mov
jecxz
xchg
das
fldt
jns
sub
outsb
push
dec
jo
mov
aam
imul
ds
mov
mov
mov
xchg
out
aas
and
lods
stos
jecxz
xor
jg
jle
mov
icebp
and
pop
popa
push
push
adc
outsb
cmp
mov
mov
push
cmc
cmp
loope
inc
scas
sti
ret
push
sarb
das
insl
jmp
xorb
push
mov
pop
pop
inc
arpl
mov
jp
outsb
imul
pop
mov
in
lock
push
mov
or
lahf
ljmp
add
andl
or
or
xor
xor
and
mov
rcrb
push
ljmp
pop
mov
sub
cmpsl
outsb
cmp
rcr
adc
aaa
pop
mov
cmp
mov
xchg
lea
xchg
test
xchg
ja
dec
outsb
sub
pop
pop
call
loop
add
push
cli
aad
xchg
and
js
pop
in
orl
mov
mov
jge
fmull
arpl
nop
mov
cli
jp
dec
es
cmc
imul
aas
push
jno
jno
or
and
pop
mov
out
mov
push
push
xor
mov
pop
cwtl
decb
imul
jae
orb
lods
int3
aam
xchg
test
out
js
xchg
lock
lods
push
push
mov
hlt
inc
adc
lea
out
out
or
shlb
mov
arpl
sti
xchg
movsb
rcl
sbb
cli
push
push
jp
stos
leave
add
mov
and
mov
jno
out
test
xor
cld
andl
jo
cmpsb
clc
or
adc
push
mov
mov
sbb
movsb
pop
roll
or
pop
insl
fidivs
cmp
pushf
aas
js
call
cli
stc
pop
ret
out
addl
add
push
shll
into
subb
or
mov
inc
jp
mov
jmp
lahf
flds
out
and
push
aaa
jmp
mov
loopne
gs
lahf
gs
fiaddl
lock
inc
push
push
mov
testl
jbe
pusha
not
jp
cmp
sbb
cli
push
push
cmp
pushf
fsubl
sbb
push
fmull
or
clc
popf
stos
lods
sub
mov
ret
mov
test
xchg
cmp
sub
mov
icebp
rcr
mov
jno
push
fnstcw
nop
pop
jns
sub
jbe
sub
xchg
fmull
loopne
aas
mov
push
loope
sub
jae
dec
mov
ja
adc
stos
repz
jno
inc
insb
mov
xchg
xor
pop
or
leave
jo
fdivs
push
loop
or
mov
cwtl
mov
mov
outsl
sbbl
jl
outsb
pop
leave
xlat
and
das
or
cmp
xchg
in
ds
hlt
call
jge
cmpsl
fdivs
bound
cmpsb
scas
xchg
add
shll
push
call
xor
into
scas
cmpsb
cmp
xlat
hlt
push
in
cmp
std
imul
movsb
jg
int
rclb
pop
mov
imul
mov
pusha
mov
xor
rol
movsl
addl
and
mov
adc
in
fs
icebp
scas
jle
xor
scas
data16
rcl
lds
fdivl
pop
mov
push
pop
mov
in
cmpsl
dec
sbb
inc
div
and
dec
call
cpuid
pop
cmp
pop
imul
add
es
push
test
cmp
notb
jne
pushf
jp
mov
push
fdivl
or
xchg
mov
dec
xchg
faddl
int
icebp
jmp
std
lahf
leave
ss
shll
mov
mov
mov
lahf
jb
cmp
lds
jmp
incb
test
jae
loopew
out
cli
pop
mov
je
fwait
arpl
xor
sbb
mov
cwtl
je
je
lcall
sub
sbb
test
inc
mov
insl
pop
in
push
test
push
mov
jne
fnsave
mov
loope
jno
xor
scas
jnp
jl
dec
mov
cmpsl
mov
and
jae
mov
sahf
and
and
sbb
rolb
int
jno
lods
lcall
cmp
cmpsl
xchg
shr
addr16
ljmp
inc
adc
ja
scas
and
xchg
es
mov
fsubl
sub
fs
fiadds
mov
stc
jno
rorl
div
adc
mov
aad
arpl
xlat
lock
or
lret
rcll
aam
mov
movsb
in
mov
idivl
out
or
push
cld
lret
adc
pop
ja
das
leave
mov
xchg
in
in
movups
and
mov
cmc
xlat
mov
mov
out
out
rolb
xor
push
mov
mov
add
popf
add
aad
mov
jl
sahf
xor
popf
jle
jp
push
int3
adc
ds
mov
lcall
pop
js
xor
push
aaa
inc
cmp
dec
sahf
push
push
insb
hlt
mov
sub
scas
aam
mov
sbb
ss
push
in
xor
nop
dec
mov
sub
jnp
arpl
pop
out
imul
popa
sarb
jbe
icebp
sbb
lock
mov
aad
mov
adc
xchg
test
and
xor
cmp
push
and
pop
test
or
xchg
lds
mov
lods
pop
jl
rol
jae
mov
setle
out
out
out
pop
outsb
rolb
pop
mov
clc
push
adc
xchg
jle
scas
ds
and
cld
leave
push
je
movlps
mov
add
xor
lcall
and
jg
pminsw
dec
out
int
cmp
cmpsl
and
flds
nop
mov
or
cmp
setle
xor
mov
mov
daa
push
cmp
push
dec
pusha
sub
jge
xor
xchg
jb
pop
and
or
cmp
sbb
out
add
add
add
jae
pop
add
mov
adc
scas
add
pop
jne
es
pop
hlt
stos
arpl
inc
add
inc
pop
or
call
mov
cmp
dec
test
and
div
lret
lea
pop
out
mov
cs
jg
and
push
ja
mov
scas
push
jmp
pop
cmpsl
xchg
jae
sub
dec
jle
cs
addr16
mov
cld
sbbl
adc
aaa
pop
add
cld
mov
jmp
pop
sub
enter
loopne
mov
popa
xchg
pop
popf
jle
cmpsl
inc
shr
inc
movsl
dec
scas
or
xchg
das
jp
dec
sub
adc
cmpsb
ja
enter
mov
adc
lret
push
cmp
adc
stos
loop
stos
mov
lcall
jge
incb
test
mov
mov
add
cmp
add
push
xchg
mov
data16
add
push
xlat
rcl
scas
pop
cld
popf
roll
lea
pop
sbb
dec
ret
insb
clc
shrb
insb
imul
aaa
scas
sbbl
out
lock
call
int3
das
mov
fstp
inc
mov
mov
xchg
adc
sbb
xor
adcb
adc
inc
insl
test
adc
add
scas
int
fwait
out
repnz
rolb
pop
aad
cmp
pop
or
sub
mov
and
shlb
sbb
fwait
mov
out
mov
pop
testl
shrl
xlat
cmp
cmp
pop
jg
stos
jnp
ljmp
inc
xor
fdiv
loope
pop
adc
dec
lret
inc
sti
sbb
insl
inc
decl
cmp
mov
push
ljmp
cmp
fistl
xchg
push
jl
xor
xchg
js
sub
inc
aad
roll
cld
pop
lret
aaa
xchg
mov
fwait
jns
lahf
mov
jb
jl
ljmp
pop
dec
aad
ret
fldcw
mov
inc
rolb
pop
outsl
scas
shl
fldcw
pop
push
sbb
jne
inc
rolb
jle
mov
inc
nop
pop
add
test
lcall
test
pop
lahf
or
cmpsl
roll
push
clc
add
insb
cmp
add
je
mov
inc
dec
xor
out
cld
pop
pop
sub
jecxz
mul
mov
push
inc
pusha
push
sbb
test
sahf
pop
mov
push
jo
es
rolb
data16
xor
insb
adc
xchg
jle
mov
jmp
inc
xchg
mov
jecxz
out
cmp
stos
mov
hlt
shrl
adc
pop
fcmovnb
add
ljmp
das
push
fwait
mov
ret
mov
scas
aad
mov
jo
pop
fdivs
push
ret
adc
stos
push
mov
lock
inc
xchg
test
mov
arpl
in
jbe
push
js
cs
rcrl
out
jge
in
adc
fs
jp
cltd
pop
push
lahf
into
sub
in
movsl
scas
mov
mov
sbb
sub
cmp
jecxz
jns
pop
js
aam
rcll
int
ret
fs
push
add
imul
and
out
stos
int
cmp
pop
fcmovnbe
int
sbb
shll
inc
mov
lahf
mov
shlb
fwait
stos
jb
dec
or
lcall
inc
hlt
push
fildl
lea
imul
das
xchg
jl,pn
xchg
jmp
pop
xchg
fistpll
test
subb
std
add
inc
je
cld
subb
or
orb
inc
xor
mov
and
repz
mov
adcl
mov
or
sbb
imul
std
test
push
xchg
sub
in
lock
js
mov
in
pop
loopne
lret
add
inc
shll
insl
sub
mov
jb
or
mov
add
push
fnstsw
sbb
jmp
mov
lods
sub
add
int
add
xor
jne
ds
xchg
mov
outsl
in
fucomp
ds
mov
pop
sti
mov
rcr
xchg
loop
je
sub
or
mov
ds
xchg
xor
test
mov
or
mov
xor
xchg
scas
inc
pop
js
stos
test
das
mov
dec
jns
adc
out
ret
and
push
pop
fucomp
lret
pop
sbb
aas
loopne
and
cmp
inc
iret
pop
pop
into
adc
cmp
inc
arpl
aaa
mov
inc
sbb
mov
in
inc
lret
sbb
mov
jne
add
fcomps
pushf
cmp
xchg
mov
pop
mov
ljmp
insl
pop
test
push
ficompl
inc
inc
push
insb
push
pop
sub
add
je
xchg
sbb
mov
cmp
sbb
or
or
mov
dec
or
push
out
mov
xor
mov
scas
les
fidivl
rclb
xchg
fldt
jb
iret
daa
xor
push
nop
mov
inc
sbbl
mov
mov
jecxz
mov
mov
push
cmp
mov
testl
xchg
movb
pop
sub
push
inc
sub
leave
lods
lea
clc
pop
mov
or
rclb
repz
xchg
adc
call
cwtl
je
adc
or
jns
pusha
jb
cmp
mov
sbb
movsb
rorl
jne
jp
and
sub
mov
mov
imul
fiaddl
roll
lahf
jle
inc
roll
pop
nopl
lcall
aaa
jle
adc
jle
enter
jle
loopne
push
sti
mov
cmp
push
or
insl
cli
push
sbb
dec
aam
orl
pop
inc
imul
repz
shrb
push
shl
xchg
pop
xchg
flds
outsl
xlat
cmc
add
xor
lcall
push
mul
pop
or
outsl
in
inc
fistpll
inc
comiss
mov
push
xlat
aad
xchg
xchg
cmp
mov
fsincos
pop
lock
imul
fisubs
bound
daa
mov
leave
cmp
ds
inc
shlb
in
fidivrl
scas
mov
adc
mov
es
shr
cmpsb
xor
jns
dec
call
icebp
adc
or
xlat
icebp
lock
hlt
sbb
out
das
repz
pop
cmp
mov
and
jbe
shrl
das
mov
inc
inc
push
mov
add
lods
push
in
mov
int
rcrl
mov
add
test
scas
adc
add
shlb
cmpl
aam
push
in
adc
test
pop
mov
sahf
ss
jae
adc
stos
scas
cmpsb
test
mov
popa
mov
dec
cmp
or
jnp
pop
popf
data16
cmp
out
insb
and
mov
mov
jl
hlt
inc
dec
mov
fs
jno
int3
push
xor
lcall
fcoms
lods
xor
outsb
inc
daa
mov
js
xor
adcl
xor
cmp
imul
hlt
in
pusha
ljmp
adc
lcall
clc
or
jbe,pt
push
jmp
mov
or
cmp
in
mov
or
stos
push
mov
imul
push
lret
add
and
mov
xor
sahf
add
ja
into
mov
push
sbb
dec
sarb
inc
inc
ficomps
sbb
fisubrl
cld
sahf
cmp
in
push
lret
das
lahf
or
or
mov
popa
testb
inc
and
cli
inc
stos
xchg
add
test
jo
mov
loop
sbbl
lahf
add
and
sub
stos
das
mov
sbbb
add
pop
sbb
sbb
xor
insb
movsb
ret
mov
cmp
cmp
std
jo
daa
jle
add
pop
mov
dec
ja
or
dec
cmpsl
adc
iret
jbe
push
popf
ljmp
mov
ret
dec
pop
pop
xor
mov
inc
mov
mov
scas
das
add
popf
inc
pop
je
xor
cmp
ficompl
add
popf
mov
dec
insb
ss
fists
aam
lock
xchg
imul
je
fs
mov
push
dec
or
repnz
stc
jno
inc
shrb
in
out
addr16
fdivrs
cmp
std
hlt
and
bound
or
daa
pop
inc
push
push
or
sbb
mov
pop
shrl
push
push
xlat
arpl
ret
ss
dec
loop
dec
popa
add
xchg
insb
or
lds
outsb
movsb
jne
pop
je
and
cmpsl
jno
push
fidivl
mov
mov
out
jo
mov
jge
scas
int3
repnz
notb
ret
sbb
jmp
jmp
fyl2xp1
add
js
mov
mov
cwtl
ret
jp
lock
and
pop
mov
loope
dec
aaa
nopl
outsl
in
push
nop
xchg
mov
adc
jecxz
or
movsl
add
into
fstpt
clc
fwait
sbb
imul
cmp
adc
out
sub
xchg
ror
divb
cmp
xor
xchg
inc
and
js
jl
mov
aad
dec
lock
fidivrl
mov
ss
and
insl
mov
arpl
neg
inc
lahf
sub
xor
out
std
mov
mov
repz
xor
and
add
push
cli
arpl
add
mov
or
sub
add
dec
inc
arpl
pop
inc
inc
sbb
and
xchg
jnp
sbb
cmp
je
jno
rclb
cld
lods
std
subb
mov
xchg
add
mov
xchg
jnp
mov
fsubp
push
das
push
mov
mov
cmp
xchg
xchg
cld
mov
dec
dec
jno
leave
dec
movl
mov
das
dec
in
and
and
jp
ja
hlt
imul
xor
rclb
xchg
or
mov
and
cmc
imul
outsl
rorl
or
test
cmp
dec
pushl
repz
imul
xor
out
aad
negb
jae
sbb
xchg
call
xchg
fistps
dec
les
pop
call
jl
in
mov
or
sub
push
mov
ret
push
js
cltd
sti
jbe
push
aaa
in
outsb
addl
imul
mov
cmpsb
setnp
xchg
pop
mov
pop
add
insl
add
push
loop
sub
or
cmp
xlat
cmpsl
or
jl
in
sahf
sarb
scas
lcall
or
mov
out
scas
jne
roll
subb
add
adc
test
popf
sbb
test
leave
daa
loop
or
sbb
outsl
movsb
getsec
adc
mov
cmp
jl
and
leave
loop
outsb
mov
pop
movsb
pop
xor
pop
push
sub
ffree
loope
sti
mov
sbb
xor
jb
push
xchg
popf
aas
sub
shlb
fcomp
xchg
outsl
outsb
dec
repnz
sbb
cmc
icebp
rcll
adc
lret
aaa
mov
sar
cld
inc
pop
pusha
js
call
pop
and
pop
lahf
xchg
cmp
xchg
jl
adc
xlat
inc
mov
sbb
icebp
cs
pop
bound
cwtl
inc
shlb
mov
push
lds
sbb
loopne
pusha
mov
dec
push
sahf
jle
in
pop
mov
mov
popf
outsl
int3
mov
inc
fdivl
out
ret
sub
fbstp
js
fsubs
loop
hlt
and
pop
and
jl
aad
sub
movsb
icebp
mov
ret
xlat
mov
or
sbbl
enter
add
aaa
jno
dec
add
je
sti
sub
pop
js,pt
push
add
sbb
cmp
xchg
sub
push
push
and
inc
fdivs
test
and
icebp
jno
fimull
fcomi
ja
mov
push
dec
pop
enter
outsl
push
jge
in
push
inc
cmpsl
fxch
divb
mov
pop
inc
push
or
scas
and
pop
xchg
pop
insl
sbb
das
mov
adc
jo
push
push
sub
not
pop
add
sub
nop
jbe
aam
mov
jo
ss
cld
fisubrs
xor
ljmp
xchg
jno
incl
mov
xor
adcb
shlb
fdiv
in
mov
ja
jae
cld
pop
xor
mov
mov
out
fs
outsb
mov
mov
addr16
pop
jp
pop
inc
stc
xor
jp
ljmp
inc
out
scas
xorl
dec
sub
stos
faddp
push
pop
fwait
nop
into
pop
popa
decb
mov
jl
jmp
les
inc
inc
inc
mov
xor
shrl
mov
adc
bound
out
or
rol
ret
dec
mov
fldt
cwtl
les
push
add
push
inc
add
cmp
push
inc
popa
out
push
adc
je
call
pop
ds
push
mov
jnp
pop
xor
add
inc
push
push
test
std
and
aam
jae
nop
mov
mov
and
mov
inc
inc
lock
pop
push
pop
inc
xchg
xor
stos
ja
imul
daa
mov
adc
add
inc
rorb
aas
sti
jmp
jo
scas
pushf
xlat
jp
mov
mov
mov
mov
loopne
shl
lds
aaa
push
mov
dec
fdiv
jbe
fisubrl
cmp
icebp
scas
cs
inc
xchg
jp
jmp
pop
fcompl
pop
daa
push
mov
sbb
das
out
sub
mov
shl
xchg
pop
cwtl
cmp
push
sub
dec
mov
xchg
inc
bound
call
scas
sbb
mov
jbe
mov
fnsave
lcall
jbe
jl
stos
cmp
fs
inc
pop
jl
aam
fstpt
imull
fdivl
pop
lods
dec
ss
dec
inc
test
mov
pop
shlb
jecxz
lret
repz
movsl
mov
sub
or
fs
xlat
idivl
mov
test
or
call
fsubrs
mov
in
mov
sbb
dec
test
push
or
cmp
push
cmpsb
add
jae
repnz
inc
inc
pop
ficompl
loop
sahf
sbb
test
mov
mov
inc
cmp
icebp
cmp
add
dec
and
data16
or
adc
adc
push
clc
mov
mov
scas
and
js
loopne
sbb
iret
mov
pop
loope
pop
dec
adc
insl
push
scas
mov
jo
mov
into
shrb
arpl
or
jne
insl
jg
adc
into
sbb
inc
daa
adc
ficomps
jge
push
faddl
cltd
or
pop
push
pop
mov
ror
test
mov
inc
daa
pop
dec
cmp
mov
int
int
dec
inc
cli
lret
sahf
ljmp
jge
icebp
xchg
je
push
pop
cmpsl
mov
jmp
pushf
hlt
sbb
mov
test
pop
dec
bound
jl
lea
xor
js
stos
insl
push
mov
call
jmp
dec
adc
aas
jne
fwait
call
cmovge
lret
sub
mov
mov
push
cmp
pop
into
adc
scas
mov
shll
pop
hlt
hlt
lock
mov
rcr
pop
inc
sbb
fnstsw
inc
movsb
fs
std
or
loop
fidivrl
inc
test
jge
or
das
nop
mov
add
xor
jle
mov
insb
mov
jb
push
rcr
jge
jl
mov
adc
jne
jl
jge
xchg
xchg
push
cli
sub
pop
pop
jnp
jne
rcl
sbb
mov
mov
shr
loopne
inc
xchg
push
nop
sub
lock
fwait
ljmp
xorl
add
jae
xor
fdivrl
push
popa
jp
push
sub
lds
fwait
cmp
pusha
popa
movsb
addl
jge
jp
insb
pop
push
call
ret
call
xor
std
cmp
cltd
scas
xchg
dec
pop
mov
push
cmp
daa
in
mov
clc
mov
xchg
addr16
dec
hlt
scas
out
xor
dec
loop
xchg
add
sbb
xchg
cs
sbb
xchg
aas
mov
mov
fwait
leave
and
fsubrl
stc
xchg
inc
into
lods
jnp
aas
push
outsb
in
sbb
sbb
xchg
outsb
call
jmp
pop
adc
xlat
fimull
testl
or
divps
add
lea
call
adc
ret
enter
pusha
adc
fstp
cmp
jb
sub
cmp
cmpsl
out
jne
loopne
adc
jle
add
add
inc
lock
pop
arpl
sub
ss
xchg
inc
and
outsb
sub
je
push
jne
push
outsl
jmp
and
xor
je
pop
pop
jp
mov
mov
xor
test
dec
jno
xor
xchg
enter
add
push
enter
ljmp
jne
scas
out
adc
clc
xchg
pop
jo
stos
push
data16
mov
rcll
sbb
mov
scas
test
iret
cwtl
dec
and
mov
fstpl
cld
cmp
rcrb
push
dec
and
mov
adc
ljmp
push
js
addb
mov
lods
test
neg
ret
imul
mov
ds
in
xor
adc
std
xchg
pushf
fucomp
add
bound
aaa
push
inc
daa
insb
out
cmp
stos
sbb
dec
aaa
add
je
cmp
icebp
inc
mov
inc
pushf
pop
push
rcrl
gs
sarl
adc
lock
mov
loopne
mov
adc
jne
xor
add
jl
js
push
jbe
mov
pop
mov
mov
cmp
enter
jae
cmc
hlt
jge
mov
sub
scas
pop
dec
adc
cmc
popa
jae
dec
jmp
popl
lea
jno
inc
insb
lds
sahf
sub
shlb
js
jnp
inc
enter
clc
fldcw
xchg
or
test
dec
xchg
add
call
or
mov
cmp
xchg
das
add
fistl
jecxz
ret
jecxz
mov
decb
lcall
and
mov
cld
push
pusha
or
cmp
sarb
arpl
pcmpeqd
insb
stos
stos
jae
xor
xchg
js
ficomps
add
orb
pop
sub
adc
mov
shlb
je
movsl
outsl
jecxz
add
lret
pop
ror
fstpl
mov
push
stos
jge
cld
std
push
in
jne
int3
pop
dec
mov
sub
loop
les
jle
in
and
lock
das
or
push
es
cli
dec
jle
insl
push
shlb
ljmp
div
push
xor
cmp
push
mov
mov
outsb
out
xor
lock
pop
xchg
lret
add
pop
stc
cmp
mov
rcr
aad
mov
dec
xchg
cmp
std
clc
fdiv
mov
mov
push
xchg
push
pop
push
aaa
iret
adc
fisttps
cmp
mov
mov
pop
iret
or
inc
push
jp
addr16
cmp
test
cwtl
mov
xchg
add
repz
bound
cmp
or
mov
pop
cmp
jle
roll
mov
fists
psrlw
inc
imul
push
push
inc
adcb
and
push
jge
loope
stos
mov
fcomps
or
sbb
fwait
repz
mov
dec
leave
fs
jp
mov
mov
imul
xchg
cmp
lods
push
mov
std
push
rcrb
push
mov
push
sub
pop
cli
fcom
scas
mov
jo
and
call
sbb
add
ljmp
fdivrl
sarb
push
or
push
pop
cmpsb
xor
mov
push
mov
ds
loop
in
cmp
jle
xchg
dec
xor
inc
push
movsb
inc
or
addl
shlb
pop
mov
push
test
out
aas
cld
mov
insl
add
xor
inc
hlt
and
sbb
dec
fistpl
or
and
cmp
pusha
mov
inc
mov
jae
test
cmc
scas
loope
cmp
inc
ja
ds
insl
xchg
jbe
in
hlt
jmp
xchg
js
les
xor
jbe
lods
jbe
inc
gs
or
mov
imul
sbb
pop
sbb
movd
out
mov
pop
mov
or
sub
mov
inc
je
out
popf
xchg
mov
addb
jb
jne
add
jns
loope
adc
test
fld
mov
test
cmp
std
das
or
jnp
push
cmp
jno
xlat
lods
add
in
jle
cwtl
outsb
fs
lret
loope
pop
sbb
adc
ja
sub
in
push
lods
cld
push
pop
inc
or
lods
scas
in
pop
lcall
pop
jg
out
fsubr
mov
mov
xchg
cld
loopne
mov
push
pop
out
fcomi
outsl
lcall
adc
xor
sbb
push
add
loopne
mov
add
add
into
lock
rcrl
sub
pop
cmp
mov
cmc
clc
inc
movl
mov
rolb
xchg
pop
js
mov
loope
adc
cwtl
faddl
into
cmc
jne
shl
pop
push
or
jb
fsubr
inc
cwtl
lods
add
ficomps
mov
std
push
push
cld
cmp
sbb
rclb
dec
and
loop
mov
js
sbb
sub
cld
cs
cli
pop
xchg
and
pop
sbb
jge
sub
test
pop
and
add
btr
ss
mov
movl
inc
sbb
mov
je
leave
mov
and
dec
popf
sub
pop
mov
ljmp
jno
cs
leave
dec
subb
mov
lret
mov
sbb
dec
pop
jge,pt
popa
aaa
aaa
push
ja
sub
in
mov
xchg
div
pop
mov
sbb
or
lcall
imul
pop
ffreep
aaa
test
mov
aaa
mov
mov
or
mov
ss
rcll
jmp
repz
push
xorl
outsb
popf
loopne
adc
cmp
insb
lcall
out
push
in
push
mov
subl
mov
test
test
imul
imul
dec
daa
je,pn
shll
or
push
insb
mov
iret
mov
dec
add
mov
fcompl
sbb
std
or
iret
add
xor
sub
xor
sahf
xchg
stc
push
push
fsubs
sbb
das
jl
mov
mov
mov
mov
lock
mov
pop
pop
cmp
test
jmp
adc
pop
call
fcom
ret
inc
adc
xor
fsubrp
mov
jno
pop
pushaw
pop
add
loop
sub
jbe
stc
sbb
out
jp
incl
jb
ja
jo
pusha
mov
jne
icebp
sbb
not
and
sub
aaa
dec
dec
enter
imul
pop
arpl
cmp
push
inc
ljmp
movl
sbb
mov
xorl
ss
or
in
mov
je
cmp
cld
ret
ret
mov
pop
jl
call
pop
push
ja
inc
shrb
addr16
mov
xchg
int3
xchg
sbb
push
mov
fcomps
imul
inc
insl
fnsave
movd
cwtl
xor
orb
jle
cwtl
pushf
push
fcos
cmpb
push
shrl
jmp
mov
fcoml
ret
out
ficomps
shll
pop
cmp
inc
insb
cmpsb
push
aaa
mov
xor
dec
sbb
lods
cli
loopne
iret
ja
aad
and
test
push
aas
rclb
cmp
cmc
add
pop
ja
mov
sub
test
out
cmp
cs
inc
ficomps
add
mov
rcrb
stos
subb
mov
mov
rorl
sarb
shll
iret
cwtl
adc
cmp
lods
call
icebp
out
mov
scas
xor
js
mov
sbb
sub
fists
sbb
xor
push
cli
mov
add
bound
fisubs
mov
cmp
clc
js
hlt
mov
sub
adc
sbb
mov
cmpl
enter
push
adc
fadd
outsl
mov
add
outsb
stos
mov
sbb
push
lods
fstpt
ds
dec
ja
adc
nop
loope
loope
jecxz
or
adc
adc
fnstcw
fimull
lret
in
sbb
and
inc
js
pop
xchg
cmp
ljmp
jl
fsubl
test
pop
cmp
loopne
add
pop
mov
in
mov
rcrl
cmpsl
stos
push
cli
mov
je
add
lods
pop
cmp
mov
imul
or
push
pop
pop
loopne
mov
fisttpl
lcall
js
sarb
sahf
mov
pop
push
sbb
mov
mov
jo
xor
push
lret
cld
mov
test
xlat
out
nop
and
gs
mov
fdivrl
push
pop
call
lods
push
cli
xor
xlat
jge
sbb
adc
ljmpw
cmp
pop
jg
xchg
mov
out
inc
dec
mov
enter
sahf
aaa
jb
out
pop
push
lock
sub
mov
pusha
mov
mov
iret
push
in
lods
lock
test
popa
sbb
stos
xchg
test
or
inc
push
mov
fwait
lods
fwait
pop
pop
imul
adc
xor
movsl
push
mov
mov
js
cli
mov
or
stc
adc
mov
sahf
and
setg
sbb
clc
es
mov
imul
icebp
inc
shll
andl
clc
pop
dec
mov
cmp
sbb
mov
sti
loop
mov
mov
mov
xor
jb
xorb
ja,pn
mov
jae
push
sarl
cmp
setl
bound
ror
stos
and
jl
aad
inc
ljmp
mov
or
cmc
lock
add
adc
cmp
xchg
lahf
push
call
mov
call
scas
popa
aam
stc
ss
xlat
inc
cmp
mov
lods
stos
mov
mov
cmpsb
in
sarb
test
mov
dec
add
leave
cli
call
out
and
xchg
ds
xchg
ss
xor
and
daa
add
clc
mov
pop
mov
pop
and
movsb
je
sbb
aam
aad
xchg
pop
lret
cwtl
xchg
test
mov
addl
inc
cmp
mov
lods
fistl
add
hlt
pop
adc
jmp
shr
add
mov
mov
sub
subl
out
scas
add
add
imul
lock
fcomps
loope
js
mov
add
jmp
sti
mov
mov
ss
xor
xor
ja
sbb
mov
or
lock
aas
jmp
jne,pn
xchg
jb
or
jge
es
test
pop
dec
fbld
test
ja
clc
lahf
lock
pop
mov
jne
mov
divl
and
jecxz
pop
shlb
xchg
lea
and
dec
cmp
loop
repnz
adc
jbe
hlt
orl
in
push
loope
xlat
sbb
je
clc
mov
enter
jmp
xchg
and
xchg
mov
pop
jo
mov
xor
push
ljmp
jo
fwait
sbb
dec
jb
mov
cmp
stos
xchg
push
xchg
in
fsub
jno
and
add
push
shll
mov
sub
inc
leave
hlt
and
addr16
stos
es
test
push
adc
imul
mov
push
sbb
add
push
jne
add
ljmp
test
add
data16
aam
push
aas
mov
add
mov
mull
popf
push
ss
test
fistpl
mov
rorb
xor
lea
jp
loope
hlt
roll
xor
mov
mov
push
addr16
clc
mov
bound
dec
pop
sub
sbb
movsb
sbb
cmp
push
call
jle
jge
sahf
add
mov
jge
clc
cmc
xchg
mov
fs
test
imul
cmpsb
dec
cwtl
stos
push
lods
js
sub
jle
pop
outsl
mov
add
scas
push
mov
push
insb
cmp
pop
cmp
imul
jle
ret
jnp
test
insb
dec
cli
push
sbb
lret
cmp
fdivrl
push
inc
loope
sub
jae
aam
lds
push
aad
jp
jne
mov
incb
xchg
xor
pop
xlat
mov
jns
clc
std
mov
dec
int
pop
jl
jp
dec
out
adc
popa
adc
loopne
imul
mov
mov
pop
js
movsl
inc
add
adc
mov
movsb
fwait
bound
mov
pusha
in
dec
out
or
xchg
cmpb
fwait
adc
loopne
call
mov
into
xor
lret
fbstp
adc
int3
jb
fmull
or
xor
mov
fistpll
jg
and
insb
mov
mov
enter
mov
add
js
sub
das
xor
mov
int3
in
loopne
inc
out
stos
scas
ja
or
inc
imul
mov
jns
popf
and
and
stos
jae
test
outsb
in
sti
test
stos
mov
lock
mov
shl
rorb
roll
shrl
insb
popa
and
sub
fwait
and
je
mov
icebp
sbb
lcall
aas
sub
call
and
fnstsw
loope
pushf
mov
ljmp
and
or
ds
mov
ja
movl
mov
repz
mov
std
push
decb
loopne
pop
inc
cmc
mov
or
jne
add
push
aam
and
lea
mov
jg
repz
mov
mov
sub
adc
imul
jge
jg
je
xchg
out
fimuls
add
pop
lahf
cmp
das
divl
shl
sbb
push
sahf
jbe
sbb
pop
push
ret
insl
ret
pop
sbb
cld
dec
jo
mov
sbb
mov
sub
cmp
push
mov
mull
pop
dec
outsb
mov
xchg
push
out
and
stos
pop
mov
lea
fucomip
mov
cld
jecxz
int
xchg
lods
cmp
aam
sub
ljmp
sbb
test
and
jo
sbb
fbld
or
outsb
and
xor
mov
sbb
cmc
adc
mov
push
out
sub
push
das
nop
pop
stos
mov
jl
ja
rcrb
xor
stos
test
xchg
adc
adc
inc
out
add
push
sbb
add
or
test
cmp
xor
adc
pop
cmpsl
int
xlat
ss
pop
mov
pushf
push
mov
out
mov
es
bound
or
dec
aaa
std
add
xchg
les
rol
or
lods
adc
cli
jo
repz
sbb
cli
mov
fcomps
insb
mov
aad
sbb
jo
outsb
lods
ss
aad
pop
ret
loopne
mov
test
jo
and
or
cmp
mov
pusha
subb
jmp
adc
lods
loopne
es
jecxz
imul
outsb
fisttpll
pop
sahf
xchg
dec
mov
stos
dec
rcl
add
fldl
imul
jmp
xchg
pop
daa
hlt
add
popa
mov
dec
test
clc
aam
xor
rcr
out
je
scas
xor
and
and
in
popf
fcmovne
jmp
sbb
inc
subb
jns
cmp
cmp
les
cwtl
dec
mov
mov
mov
mov
lds
and
mov
out
rcr
cmp
xchg
fldt
inc
fidivs
rorb
push
jne
add
push
rcrl
inc
lret
xchg
fisubl
cli
clc
add
sti
fistpl
ljmp
push
cld
mov
popa
call
xchg
mov
and
in
shr
xor
or
add
mov
mov
xchg
inc
rcr
imul
add
jl
push
in
hlt
mov
pushf
inc
daa
arpl
or
jmp
mov
leave
jo
add
mov
mov
lds
negl
loope
inc
sbb
sbb
gs
loope
xchg
incb
mov
adc
dec
cld
loop
scas
outsl
rol
jb
adc
movsb
mov
and
ja
mov
loopne
mov
out
mov
xlat
lds
cmp
movsb
mov
fimuls
fs
adc
xor
out
push
rcll
ss
dec
jne
mov
xchg
in
fnsave
int3
or
repnz
mov
cmc
test
call
mov
push
push
fcmovnu
loopne
fidivl
lea
subl
push
jne
and
jnp
andl
mov
gs
pop
outsl
dec
pop
clc
stos
or
pusha
inc
sbb
add
push
push
jno
push
daa
insb
sbb
std
jb
leave
cmp
cmp
fsubp
loopne
xor
adc
leave
xchg
lds
nop
push
sub
and
cmp
pop
dec
pop
sbb
mov
insl
js
adc
push
inc
push
ja
sti
push
icebp
fisttps
push
fmull
xor
xchg
xchg
inc
scas
or
mov
test
xor
rclb
jb
pop
enter
xor
cmc
pop
repz
aam
add
cmp
aam
xor
test
pop
ljmp
std
add
cmp
fwait
in
jmp
push
call
loope
outsb
cmp
push
fadds
jge
xor
out
shrb
pop
idivl
jp
jge
subb
aas
adc
push
pop
out
ljmp
dec
test
test
repnz
aas
insl
sbb
mov
mov
cmpsb
pop
pcmpeqb
sbbl
scas
cmp
orl
andb
movsl
in
or
cmp
sbb
and
js
cmp
xlat
xchg
jl
cmp
divb
xlat
dec
cmpb
in
adc
xchg
outsb
or
shll
dec
pop
xchg
icebp
loope
mov
mov
ljmp
dec
pop
cmp
jmp
push
out
pop
scas
jmp
jbe
iret
adc
xor
jbe
stos
xchg
add
adcl
nop
ret
cld
inc
mov
pushf
xorb
lea
or
fdiv
ror
pop
mov
into
fiaddl
addl
mov
popf
inc
stos
cmp
add
xchg
sub
cmc
aas
call
or
cli
fldcw
jb
ss
shlb
mov
ds
rorl
fsubrs
pop
or
je
cli
jo
notb
dec
sbb
inc
dec
loopne
adc
mov
jl
out
ja
int
in
test
rclb
outsl
mov
mov
mov
fucom
adc
pusha
xor
loope
add
push
xchg
push
dec
xor
out
mov
imul
hlt
ret
lods
dec
dec
and
jo
mov
mov
push
inc
push
rcrb
cmp
shll
xlat
adc
rorb
mov
std
clc
push
mov
xchg
adc
xchg
pop
or
js
dec
mov
xlat
xchg
fdivs
data16
sbb
addl
out
out
cmpb
fldl
and
das
jbe
push
fistps
rolb
sbb
cmp
push
daa
xchg
sbb
ficoms
sub
into
inc
mov
shrb
cs
adcl
mov
fisubrl
jns
outsl
adc
cmp
mov
mov
shrb
adc
into
daa
sub
std
jbe
add
xchg
push
mov
xor
enter
adc
mov
jge
je
mov
push
jno
dec
iret
inc
mov
mov
xor
xchg
insl
jae
call
push
push
dec
ljmp
fdivr
ljmp
je
sbb
sbb
cmp
cltd
add
adc
jp
mov
mov
faddl
jmp
add
mov
adc
push
push
call
pop
xor
fdivrl
mov
insl
pusha
subb
mov
jp
mov
sbb
sbbl
jns
stos
out
xor
fisttpl
push
lar
mov
dec
jo
decl
pop
fsubp
dec
jb
mov
rorl
jae
jno
in
xchg
addb
rorl
dec
in
and
dec
mov
pop
adc
inc
or
mov
loope
sbb
lock
insb
jl
inc
add
jp
packsswb
lods
mov
jg
loop
add
cmp
adc
inc
xor
sbb
sahf
ja
jmp
imul
stc
xor
jbe
sbb
or
fisubrl
jnp
in
fadd
cmp
call
mov
push
addr16
dec
cmp
sbb
fcoml
fldt
add
push
cmp
orl
loopne
xchg
fwait
cmp
xor
cltd
pop
ds
imul
xchg
mov
xor
in
jo
mov
lcall
mov
aas
stos
mov
sbb
xlat
sbbl
scas
pop
hlt
xlat
out
and
lods
popa
add
jbe
hlt
mov
push
aas
push
jbe
sbb
inc
cmp
cmp
dec
push
mov
outsb
js
cmc
imul
dec
or
push
lret
in
shrb
int
fisttpll
rcl
push
or
call
mov
not
andb
aam
daa
movsl
fisubs
xchg
xchg
pop
pop
mov
js
xchg
cmp
sbb
jne
xor
loope
mov
cs
ljmp
fwait
pop
inc
rcrb
inc
jmp
lahf
inc
mov
pushf
add
jl
loope
int3
cwtl
sbb
paddusb
xchg
push
leave
fistl
sbb
adc
inc
cltd
pop
or
inc
and
pop
fsubrs
mov
push
xor
mov
and
std
jl
xchg
dec
ficompl
cmp
bswap
push
hlt
icebp
push
xchg
mov
adc
mov
pop
ja
das
sbb
rcll
andb
adc
rcl
mov
insb
cs
cmpsb
in
adcl
aad
sbb
push
mov
sbb
mov
jp
in
subb
sbb
pop
ds
inc
ret
fcmovnb
xchg
jb
dec
call
pop
cmc
inc
add
sbb
cmp
push
or
clc
cmp
push
add
mov
call
loop
add
mov
push
nop
pop
dec
jns
mov
cli
jb
out
inc
xlat
fnstenv
xor
clc
jno
jne
push
jo
jae
sbb
mov
ja
mov
fisttpll
daa
sarl
jae
xchg
inc
sub
inc
mov
ljmp
or
cmp
jg
pop
dec
inc
jge
int
loope
clc
cmp
negl
push
dec
sub
jge
jo
fildl
mov
sub
cmp
mov
sbb
icebp
in
cmp
push
mov
fmull
fs
pop
or
mov
xor
mov
push
and
xchg
dec
daa
int
xor
aam
xlat
rorb
or
add
mov
sub
push
xchg
sbb
push
push
pop
push
mov
and
mov
popf
push
mov
js
call
test
jge
sbb
mov
cmc
call
mulb
sahf
cld
loope
xchg
mov
ja
mov
icebp
mov
adc
cli
jmp
imul
stos
or
push
cmc
addr16
fistpll
push
and
mov
mov
mov
inc
xlat
or
push
imul
jo
inc
inc
push
mov
aad
std
inc
neg
xchg
sbb
add
jmp
or
inc
ja
cmp
outsb
scas
lea
popf
rcll
push
xlat
mov
fwait
insl
repnz
push
lods
mov
call
cli
lahf
mov
sbb
sar
enter
popf
test
xor
jp
mov
loop
jge
and
inc
cmpsl
xlat
push
sub
enter
loopne
pop
lods
stos
rol
out
mov
add
mov
jge
pop
mov
sbbb
insb
cltd
ljmp
ss
popf
cltd
in
shrb
sahf
aas
or
adcb
xchg
xchg
rorb
adc
and
or
mov
push
lods
pop
gs
xor
mov
dec
fdiv
adc
and
mov
shrl
outsl
sbb
add
adc
pusha
jmp
and
cmp
jbe
ficompl
and
xor
push
pop
or
jg
movl
sub
ret
ss
push
xor
arpl
arpl
xchg
cmpsl
xchg
outsb
insb
or
push
push
gs
adc
clc
xor
or
enter
idivb
das
rorb
out
push
push
fdiv
cs
inc
or
xor
int3
push
cmp
stos
mov
ret
pop
scas
stos
popf
mov
iret
popl
push
dec
or
jecxz
jnp
pop
ss
aas
jle
jle
jge
add
mov
aad
push
xchg
shr
dec
loop
jmp
fldt
fwait
ljmp
cmpsl
loopne
hlt
pop
or
insl
adc
dec
or
adc
jo
sarl
or
push
lcall
pop
add
ret
push
scas
imul
mov
test
mov
subl
mov
mov
adc
rolb
xchg
movsl
pop
jl
mov
jle
jl
addps
pop
dec
aas
add
add
pushf
js
loopne
pop
cmp
je
mov
xor
pop
jecxz
mov
sub
xchg
loop
mov
adc
fs
sti
mov
jg
test
mov
jbe
sbb
push
jg
cmpb
loope
sahf
test
adc
scas
xchg
popf
mov
ljmp
inc
dec
inc
jle
mov
push
cmp
aas
fs
jae
cmc
aad
sbb
jle,pt
add
or
fidivrs
lahf
dec
cld
pop
mulps
xchg
pop
dec
mov
pop
es
sub
lea
adc
test
jge
xchg
cmp
mov
scas
pop
inc
mov
popl
idivl
movsb
loop
divb
pop
mov
add
ds
mov
out
mov
pop
mov
in
dec
sub
adc
jecxz
orps
jb
xchg
mov
or
rcl
and
and
xchg
xchg
call
inc
push
or
sbb
xchg
enter
push
enter
sbb
push
call
add
mov
sub
inc
fiaddl
aad
adc
movsb
cmp
adc
add
frstpm(287
insb
and
mov
in
mov
add
mov
lods
pop
jne
idivl
and
push
cld
les
xchg
movsl
push
cmp
mov
lahf
in
adcl
sahf
jle
mov
push
pop
and
icebp
pop
xchg
aaa
shrl
push
xlat
cltd
mov
cltd
shrl
rcll
cmp
cmp
test
jbe
stc
std
or
and
mov
enter
add
test
xor
insl
adc
popa
and
push
add
ss
frstor
push
push
icebp
pop
hlt
nop
aaa
ja
jbe
test
cmp
or
divl
jo
orl
inc
das
or
daa
and
jl
lods
or
mov
dec
loopne
imul
cmp
popa
cmp
rolb
mov
enter
cmp
cmc
shrl
push
popf
lret
out
test
mov
in
ret
ret
out
add
mov
mov
fdivr
mov
jl
dec
or
aad
mov
adc
jecxz
shl
jmp
jae
cmp
enter
adc
push
pop
ret
sub
xchg
ja
cmp
mov
dec
es
and
shll
fimull
out
mov
test
mov
sbb
add
mov
ja
lods
mul
mov
mov
sub
xor
inc
dec
sub
pop
test
push
push
sbb
pop
mov
mov
cmc
loopne
sbb
sbb
lahf
loope
ret
cmp
ss
cwtl
repnz
push
mov
bound
push
jg
je
mov
adc
push
aad
mov
xchg
cli
adc
lods
dec
jne
repz
mov
mov
jmp
fs
add
fsubs
jno
in
or
add
shrb
mov
pop
dec
mov
jmp
ret
movsl
pop
mov
push
testl
cwtl
aas
icebp
mov
mov
into
mov
cld
dec
aas
pop
jp
inc
xchg
xor
cltd
sbb
psrlq
push
mov
sti
pusha
sbb
sbb
es
fidivl
add
mov
loopne
out
outsl
adc
jp
mov
or
lock
fistpll
cli
fnstsw
ja
ss
aad
gs
pop
shrb
mov
cmp
lods
cmp
frstor
sbb
dec
jb
cmp
or
loopne
clc
or
cmp
inc
in
clc
out
adc
jo
or
fstpt
pop
and
fdivs
mov
cwtl
push
int
mov
inc
pop
pop
dec
shll
adc
cmp
in
add
jecxz
in
xchg
push
cmp
inc
nop
cmp
add
dec
popf
push
mov
je
xchg
test
rol
fwait
xlat
mov
insl
orb
loope
mov
in
pop
add
stos
stc
iret
incb
cmp
add
and
cltd
add
fcomp
jle
jmp
adcb
pop
call
xchg
gs
push
adc
pop
andb
add
iret
push
mov
jl
bound
movntps
adc
clc
test
add
mov
or
mov
repz
scas
add
cmpsb
mov
push
push
loope
sbb
out
mov
mov
xchg
lods
arpl
sahf
push
call
add
mov
mov
jmp
pop
sub
mov
lock
and
int3
push
test
jl
xchg
into
xorw
dec
ljmp
inc
imul
or
mov
pushf
ljmp
mov
lret
inc
pop
adc
jae
stos
lcall
sbb
cmp
pop
fcmove
or
cld
push
emms
insl
fcmove
hlt
incl
ss
add
lret
pop
or
push
dec
mov
sub
xor
loopne
jg
bound
mov
insb
aas
pop
sub
les
push
mov
and
and
inc
push
imul
lea
notl
pop
mov
pop
in
imul
add
mov
shrb
add
dec
shlb
add
sub
inc
popa
pop
jnp
fistps
orl
jo
out
add
test
pop
xor
push
sub
loopne
testl
push
insl
push
or
sbb
jp
shl
add
mov
mov
cmc
mov
js
data16
push
lds
mov
sti
and
fidivs
fnstenv
repnz
pop
movsb
xor
test
scas
mov
in
push
mov
mov
inc
sbb
or
push
faddp
xlat
mov
cli
push
lcall
loop
adc
sbb
mov
stos
push
xor
or
mov
cld
icebp
push
mov
jno
cmp
das
mov
dec
movsl
sahf
mov
or
push
sbb
testb
cmp
in
adc
mov
je
lods
sar
push
cmp
cmp
out
outsb
fs
int3
mov
add
inc
push
fsubp
pop
dec
pop
outsl
shlb
scas
aad
clc
repz
gs
ljmp
push
dec
notl
mov
add
ret
imul
jno
sbb
xchg
mov
mov
pop
jl
pop
clc
mov
inc
push
or
insl
adc
scas
loopne
imull
sub
inc
pop
shll
shrb
mov
xor
push
shr
aad
jge
incl
jge
sbb
pop
shlb
cmp
clc
sbb
or
cmp
inc
jmp
fidivrs
fcompl
int3
push
mov
pop
push
fidivl
dec
adc
outsl
xchg
xchg
push
cwtl
jnp
bound
out
movsb
in
and
je
mov
sbb
notl
jns
aas
sbb
xor
or
mov
push
rorl
xor
aas
sahf
sbb
push
outsl
data16
cwtl
roll
shll
add
jo
bound
rol
in
push
mov
imul
add
sub
push
fisttpll
das
pusha
mov
dec
sbb
xchg
subl
imul
jl
iret
out
mov
ret
sub
push
mov
lcall
outsl
mov
pop
ret
dec
cmp
or
jbe
cltd
outsl
ljmp
movsb
movsl
dec
mov
dec
cs
xor
aam
cmp
mov
hlt
test
imul
bound
rcrl
pushf
mov
xor
xchg
inc
and
addr16
cmp
adc
jae
dec
loopne
mov
xchg
lahf
xlat
repnz
pop
icebp
aam
jo
push
sar
jge
int
adc
adc
sub
outsb
mov
and
fisubs
sub
rcr
adc
add
fdivrl
inc
lcall
mov
sub
push
push
loope
push
xor
into
lods
or
cmp
aas
mov
mov
jmp
push
mov
stc
xchg
movsb
das
fisubrs
rorb
stc
vminsd
mov
inc
inc
sub
cmp
pop
mov
pop
imul
mov
in
ss
adc
dec
pop
and
push
mov
je
mov
pop
leave
xor
mov
mov
fstpt
dec
inc
xor
add
mov
scas
jmp
out
pop
add
lahf
lcall
xchg
sub
cmpsl
add
push
stc
pop
pop
mov
cmpb
popa
mov
xor
loop
imull
jae
hlt
xchg
mov
and
xchg
es
aaa
addl
mov
aad
hlt
js
jmp
into
push
and
or
icebp
leave
sahf
ds
mov
push
shrb
xor
mov
adc
cmpsl
addb
jmp
das
fdivrs
mov
aad
movsl
jo
js
cmpl
cli
imul
out
test
cmp
dec
pusha
add
pop
add
js
add
pop
sub
aaa
jae
mov
out
popa
loope
mov
cld
sub
pop
inc
cwtl
jl
outsb
clc
stos
aaa
sahf
jbe
jmp
and
in
push
xchg
jmp
test
xlat
mov
cmp
mov
lods
pushl
addr16
and
pop
adc
jo
repnz
outsb
xlat
xlat
xlat
cli
test
ror
or
inc
pop
dec
loopne
inc
adc
adc
dec
fldl
out
jno
hlt
ja
insl
mov
xor
es
fstl
adc
stos
mov
xchg
push
fildl
fiaddl
iret
fists
pop
mov
aam
push
insb
sub
je
jno
test
movsb
mov
push
xchg
outsb
jno
jbe
lods
jl
pop
mov
sub
pop
sbbl
pop
cmpsl
insl
and
push
dec
out
or
std
add
cmp
mov
loop
xchg
stos
stc
jp
test
inc
ret
sbb
dec
ficoml
ss
push
push
sbb
adc
or
jp
loope
or
xchg
lcall
and
mov
sub
rcl
mov
aam
push
mov
inc
inc
xor
cmp
jge
cmp
inc
insb
push
test
lods
jle
rcrl
add
pop
in
pop
inc
sbb
out
push
xlat
lock
inc
jg
fstl
xchg
fmuls
xor
roll
pusha
test
xorb
and
insb
jle
bound
or
scas
mov
xor
add
mov
into
adc
mov
inc
add
push
and
mov
arpl
add
sbb
std
mov
cs
pop
fsubrs
push
mov
sub
or
cmp
test
sti
xor
add
ja
cld
add
movsb
pusha
jmp
mov
cmp
sub
lds
xlat
push
outsb
adc
jl
sbbb
mov
inc
push
ds
lods
fidivs
cmp
cli
scas
pop
or
je
xlat
dec
push
xor
dec
cmp
ss
test
sarl
pop
mov
xor
mov
sti
sub
rcl
imul
xchg
push
mov
scas
sti
ljmp
lcall
mov
bound
in
cmp
outsb
mov
mov
add
mov
xor
ret
cmpsb
sbb
add
adc
je
adcl
xchg
jnp
repnz
pop
dec
je
fsubr
mov
daa
not
pop
testl
test
ret
in
loope
out
jmp
sbb
data16
mov
mov
mov
loop
jnp
mov
outsb
nop
inc
pop
mov
and
scas
cmp
sbb
das
jmp
and
and
pop
xor
cmpb
adc
or
jmp
add
add
pop
jl
push
ret
pop
int3
out
fs
pop
std
xchg
lahf
xor
call
jb
loop
mov
sub
xchg
add
fwait
cmp
mov
inc
and
jmp
pop
pushf
pop
sub
jl
cmp
inc
hlt
iret
dec
xor
test
cli
jp
push
cltd
jle
push
xchg
mov
xor
jnp
stos
ds
push
popf
fistl
lahf
xchg
shr
sub
ret
imul
pop
jp
dec
cs
mov
jp
xchg
daa
jle
dec
dec
mov
jle
inc
stos
out
adc
gs
adc
in
pop
xor
xlat
sarb
out
fsubrl
push
xor
leave
mov
pop
xchg
sbb
cmp
push
inc
xchg
mov
lret
jno
cmpsl
sbb
mov
gs
add
cmp
repnz
aad
cmp
or
out
inc
loopne
mov
idivb
inc
loop
icebp
sti
minps
ljmp
jmp
setno
xor
std
cld
ret
ret
push
jae
jg
or
clc
test
mov
insb
jb
mov
inc
cld
sbb
inc
add
cmp
mov
dec
xor
mov
push
movsb
xchg
sarl
jne
mov
roll
iret
cli
mov
adc
jge
cli
sahf
icebp
inc
mov
xchg
fs
dec
outsl
call
adc
sub
sbbl
fdivrs
xchg
sub
sti
push
mov
insl
mov
jnp
inc
dec
adc
mov
test
pop
ljmp
pop
dec
sbbl
stos
cmpsl
ret
outsb
test
fstpl
inc
loope
jl
push
xlat
fildll
xbegin
adc
cmc
adc
fwait
mov
jae
in
rcr
aaa
inc
xor
and
stos
shl
xchg
ret
xchg
mul
fisubs
mov
aaa
inc
test
mov
movsb
stos
push
push
jg
das
or
in
xlat
jo
lcall
imul
popl
jmp
orl
sub
mov
mov
xchg
popa
mov
es
lea
mov
pushf
lret
pop
dec
icebp
sub
add
idivl
push
pushl
fldenv
inc
push
push
mov
sub
push
out
sbb
sub
add
jmp
shl
inc
hlt
jg
je
adc
psubb
stc
sbb
mov
lret
test
divb
jb
xchg
jmp
jmp
push
and
shrb
mov
dec
cmp
idivl
cli
push
int
mov
inc
and
fadd
mov
test
and
popa
test
push
mov
test
and
add
xchg
test
or
push
xchg
add
loop
rcrl
add
mov
pusha
mov
int3
push
pop
ds
mov
jo
pop
xlat
rolb
add
inc
sti
iret
testl
xor
or
add
dec
test
mov
mov
inc
jae
mov
push
cmpsb
mov
cmp
lock
mov
cld
addl
subb
xchg
pop
push
add
or
jbe
sbb
call
dec
int3
xchg
and
cmp
clc
mov
lret
push
insb
notb
int
loopne
lock
sub
mov
mov
sbbl
ljmp
jo
mov
or
lods
fwait
pop
sub
insl
cs
jmp
js
dec
inc
jl
sbb
cmpsl
mov
mov
loop
mov
jl
fcomi
sbbb
mov
jg
stos
or
into
sbb
mov
jb
mov
fidivs
xor
jo
push
mov
pop
arpl
cmpsl
inc
cld
cmp
sub
pop
sbb
fs
idivl
jae
jge
hlt
outsb
xchg
daa
into
rorb
insl
rcl
mov
stos
out
xor
cmp
dec
push
pop
sub
push
ret
push
and
lds
and
in
into
je
mull
sbb
jmp
sbb
lods
jmp
loop
ja
stos
or
push
aas
cli
sbb
or
mov
cmp
ss
ret
in
pop
mov
and
sti
xorb
shrb
xlat
mov
push
pop
or
sbbl
in
cmpsb
adc
adc
cmp
jae
cmp
xorl
and
push
rorb
xchg
and
fsubrl
lea
cld
jae
mov
xchg
adc
fs
ret
jmp
mov
mov
jb
bswap
push
sub
mov
in
outsb
aas
jbe
mov
pop
push
in
mov
push
rorb
scas
lcall
jp
lea
adc
push
jnp
xchg
scas
mov
pop
push
cmp
inc
push
dec
out
test
je
loop
imul
mov
mov
and
sub
lock
mov
dec
jge
push
hlt
pop
sbb
js
xchg
or
push
jns
std
sbbb
loopne
mov
inc
jl
in
inc
rorb
loopne
push
push
sub
hlt
in
fidivrs
jp
mov
add
pop
iret
pop
insl
notb
cmpsl
mov
dec
sub
push
fcoms
js
sbb
lds
and
jb
ljmp
mov
mov
and
sub
scas
insl
sbb
lock
leave
insl
pop
scas
rcl
pushf
sbb
mov
mov
jno
sbb
add
and
jp
lahf
clc
or
mov
xchg
mov
stos
push
mov
adc
test
loop
clc
fcoml
add
or
pushf
es
add
push
xchg
and
lds
stos
xor
push
not
icebp
pop
pop
push
jmp
inc
jne
lea
ficoml
int
hlt
and
mov
popf
aas
shl
mov
sub
dec
dec
movsl
dec
out
dec
sub
xchg
addr16
shrb
xchg
in
add
and
loopne
jle
mov
fisttps
xor
lock
arpl
pmaddwd
mov
movsl
scas
lret
inc
sbb
orb
mov
jp
cmc
jb
adc
aam
fdivp
xorl
dec
fsubrl
mov
xor
dec
aas
add
xor
push
dec
outsl
notl
mov
add
lcall
outsl
out
test
loope
cmpsl
inc
cmp
fistpl
cmpsb
sbb
mov
or
pop
cld
cli
mov
sub
mov
add
test
pop
cmpsl
fs
add
push
sahf
push
jg
cmp
pop
int
pop
popf
shll
fistpl
popf
or
pop
ret
repnz
jnp
mov
dec
aas
loopne
mov
adc
ljmp
outsb
scas
jmp
outsb
dec
or
scas
or
sub
daa
repz
pop
fsubrp
or
rorl
je
mov
jb
cmovg
adc
les
fcom
adc
push
pop
movsl
les
xchg
jo
jb
sub
lds
add
lock
inc
cmpsb
stos
xor
or
xchg
mov
popf
lock
roll
mov
aas
jnp
sub
fst
push
mov
int3
and
and
popf
mov
scas
enter
xorb
fadds
roll
xlat
dec
or
pop
clc
arpl
ret
and
arpl
jp
decl
jl
or
mov
sbbl
or
pop
rorl
icebp
add
mov
mov
push
sti
add
icebp
into
mov
jbe
mov
mov
pop
dec
scas
push
hlt
push
stos
loopne
and
lcall
xor
test
jge
ret
fs
jle
sbbb
icebp
xor
dec
popf
sub
int3
mov
xchg
bound
scas
testl
test
mov
xor
push
mov
xor
adc
in
mov
fstpt
adc
xor
jne
lret
xor
bound
and
cmp
inc
fldl
adcl
subb
ljmp
xor
sub
icebp
clc
cltd
xor
scas
fisubrs
mov
pop
shll
test
loope
es
and
push
test
jmp
popf
outsl
je
sbb
xlat
ret
ret
xor
inc
pop
sbb
hlt
roll
lret
jecxz
add
icebp
aam
je
out
popf
pop
mov
adc
pushf
adc
add
bound
shl
test
mov
and
in
adc
in
mov
cmp
push
dec
and
stc
pop
divb
fidivl
cmpsl
cmp
mov
mov
js
addl
mov
insl
cmp
fidivrl
hlt
outsb
xor
mov
movsb
mov
cltd
lret
mov
or
push
sbb
std
dec
pop
sbb
sbb
mov
push
adc
jb
xchg
movsl
xchg
jp
pop
out
cmp
mov
push
pop
dec
pop
xchg
ljmp
jmp
or
cmp
dec
arpl
gs
jmp
inc
push
xchg
outsl
push
inc
aaa
pop
pop
mov
iret
scas
in
sbb
jmp
sbb
test
mov
inc
orl
je
push
outsl
or
movsb
dec
pop
pop
loop
mov
fadds
popf
jmp
push
pop
js
xlat
mov
jbe
pop
es
adc
xchg
cmp
jmp
sbb
or
mov
pop
test
push
pop
ret
push
sub
out
jnp
jo
clc
inc
fistpll
and
push
lea
daa
mov
cltd
int
push
push
ds
cmp
fdivl
popa
jnp
pop
pop
mov
push
mov
pop
fs
movsl
inc
rorb
or
insb
cmpsl
xchg
inc
imul
sbb
jl
lcall
xchg
jo
cmp
pop
loopne
xchg
xchg
shl
orl
pop
rcrl
loopne
mov
mov
inc
stos
movsl
rolb
movsb
dec
sbb
jg
inc
out
repnz
pop
mov
jge
stos
xor
cmp
scas
test
test
add
xchg
ret
cmp
loope
shlb
mov
in
hlt
jg
aaa
xor
lret
mov
neg
sub
sub
mov
outsl
dec
cmp
dec
sbb
int3
sub
cmp
dec
pop
into
xchg
pslld
ja
xchg
movsl
xchg
movsl
shlb
mov
fisttps
lock
out
pop
mov
pop
mov
mov
idivb
dec
pushf
mov
xor
mov
aam
mov
cs
addr16
out
loope
lock
aam
sti
pop
xchg
add
push
mov
loop
push
clc
call
pop
ror
je
shll
push
mov
push
pop
pop
cmp
loope
jne
inc
cld
into
sub
lcall
loopne
out
and
clc
ds
aaa
inc
aad
or
imul
mov
mov
out
pop
call
jle
mov
fsts
cmp
in
std
pop
insb
sbb
cli
push
inc
mov
adc
pop
add
jp
or
das
pop
push
adcl
pop
sbb
aas
lret
push
xchg
dec
icebp
hlt
jne
pop
das
sbb
pop
sti
mov
movsl
fsub
in
push
fldcw
ret
cli
sub
adc
sub
out
mov
addl
inc
add
xchg
fndisi(8087
jecxz
insb
push
imul
cmpsb
ds
repnz
shr
in
add
arpl
mov
stos
rorl
mov
ds
and
mov
aas
mov
pusha
jmp
adc
jo
mov
pop
jge
mov
scas
jp
xchg
xor
imul
addb
jmp
mov
and
add
adc
scas
nop
idivb
and
lcall
int
hlt
shl
je
sti
ljmp
pop
lods
loop
lcall
sti
push
fildl
loopne
mov
jle
repz
test
inc
cli
lret
lea
jbe
and
push
lock
lea
sbb
mov
adc
jno
dec
lds
out
cs
dec
cmpsl
jo
mov
adc
pop
mov
neg
cltd
leave
add
jle
dec
rorb
sbb
inc
cmp
mov
dec
mov
push
mov
fucomip
mov
call
and
push
cli
push
xchg
pop
sub
push
cmp
mov
xchg
xchg
cwtl
adc
dec
mov
aaa
std
mov
aas
jl
cltd
repz
fwait
jbe
push
adc
push
mov
lods
push
arpl
faddl
insl
add
push
cmp
adc
push
dec
mov
pop
adc
aaa
rcrb
lahf
outsl
pop
mov
repz
jne
scas
mov
add
add
mov
cmp
add
push
lahf
scas
or
adc
jl
xor
inc
lods
add
shll
inc
push
and
subl
pop
xchg
and
cmp
fiaddl
gs
xchg
jae
std
jns
mov
out
cs
ss
adc
cwtl
mov
jp
mov
outsb
arpl
sbb
xlat
clc
popa
jp
add
sub
xor
xor
inc
insl
jmp
addr16
cmp
scas
movl
sti
mov
add
pop
dec
aad
add
xchg
popa
add
add
pusha
fistl
fbstp
pusha
cmpsl
mov
js
lock
push
jp
stos
fists
pop
add
divb
mov
inc
test
mov
xlat
aad
decb
jmp
in
popa
cmp
pop
js
shlb
sbb
xor
inc
push
insb
push
xlat
lret
pop
mov
adc
sub
fnstsw
pop
adc
decb
aas
add
insl
xchg
insl
pop
sbb
clc
jb
dec
into
push
sbb
mov
or
add
fidivs
push
xchg
jne
jl
push
repnz
lcall
jnp
loopne
xchg
cwtl
loop
rclb
or
scas
push
inc
jmp
sub
dec
out
fwait
lods
or
and
add
movsl
mov
xor
fdivs
mov
popa
stc
adc
add
jns
mov
in
sub
xchg
pop
cmp
fmull
inc
cmc
jbe
pop
icebp
pop
mov
pop
enter
dec
insb
scas
jne
inc
mov
adc
xlat
hlt
shlb
cli
or
adc
out
adc
xchg
jmp
fwait
dec
popf
imul
cmp
ror
popf
adc
cmp
js
sbb
mov
fisubl
daa
push
icebp
inc
out
clc
pusha
gs
popl
xor
mov
add
cmp
jmp
sarl
cld
mov
imul
and
psllw
cmp
arpl
adc
out
xchg
outsb
inc
mov
icebp
mov
push
popf
arpl
aam
test
ret
stc
mov
jmp
pop
jbe
xor
leave
sti
adc
inc
stos
and
jne
loop
push
fdivrs
mov
pop
clc
jno
and
add
fs
scas
paddusb
lret
mov
andl
jnp
mov
dec
cmp
mov
cld
dec
mov
push
mov
imul
mov
aam
xchg
test
jne
cmc
inc
rcrb
subb
mov
aad
pop
ret
dec
or
fistps
ds
mov
movsl
xchg
push
ret
out
jo
push
rcrl
cmc
ja
shrb
ljmp
in
or
hlt
testb
sub
jge
sahf
jle
and
mov
out
push
aam
xor
cli
cmp
fdivrl
loopne
imul
mov
cmp
loope
sbb
or
incl
mov
stc
mov
push
das
les
push
aad
loope
fstl
lcall
sub
sbb
push
xchg
mov
add
rclb
mov
mov
fstl
cmpsb
pop
xchg
into
repz
test
out
adc
mov
jle
cli
mov
or
lock
addr16
cmpsl
pusha
sbb
sbb
je
dec
jg
bound
add
addr16
stc
rcr
cmc
fnstenv
mov
pop
jl
arpl
fbld
sub
cltd
add
mov
push
xchg
fcompl
add
xchg
inc
gs
or
das
gs
lahf
mov
call
out
add
scas
sbb
push
xchg
or
and
mov
jne
ja
dec
and
hlt
jge
sub
hlt
cmp
sbb
enter
loopne
popf
arpl
fcomps
aas
jl
ss
fucom
dec
sub
pop
mov
jge
sbb
inc
inc
mov
dec
jne
pop
fnsave
js
pusha
into
call
out
mov
clc
addl
jge
push
mov
fldenv
cmc
repnz
mov
lea
mov
das
loope
or
orb
jno
cmp
mov
dec
enter
inc
jge
jbe
mov
mov
adc
ds
test
jb
arpl
cmpsb
aas
ret
into
add
jl
insl
mov
jno
push
pop
outsl
pop
loope
call
addr16
mov
mov
dec
sbb
add
loope
add
xor
push
add
sbb
scas
xchg
cmpsl
or
push
cmp
pop
dec
sub
jbe
mov
pop
cmp
out
roll
inc
rcr
inc
in
pop
mov
mov
mov
inc
addb
jmp
xchg
push
jno
adc
loopne
aam
mov
mov
mov
adcb
dec
xor
pop
mov
push
sub
adc
adc
orb
mov
or
mov
cs
loopne
ss
in
subb
sub
mov
lret
and
outsl
mov
mov
rclb
in
adc
mov
insl
jnp
arpl
movsb
sbb
ret
add
ret
js
cmp
cmpsl
mov
lret
mov
push
or
dec
jo
jne
shlb
fs
adc
sbb
and
xchg
inc
movsb
xlat
roll
jbe
xor
ljmp
jle
ljmp
pop
mov
sbb
rcr
pushf
lcall
pop
push
and
lret
mov
sahf
ret
mov
cmpsb
pop
sahf
jb
sarb
inc
sbb
fbstp
dec
sbb
cli
inc
push
sahf
outsb
sub
push
sbb
in
push
in
aas
and
sbb
enter
in
inc
pushf
ds
fidivrs
loopne
mov
js
int
pop
call
ja
pop
mulb
int3
push
inc
hlt
shrl
xchg
sbb
popa
mov
fiaddl
inc
call
push
push
nop
jb
ret
stos
jmp
std
or
sarl
loop
cs
mov
in
outsl
push
jo
clc
dec
or
pop
dec
mov
jge
add
test
lods
aaa
add
jge
test
jo
ret
das
cmp
xchg
or
in
mov
push
insl
addb
add
mov
std
fsubrs
cld
pop
jns
insb
sub
xor
aas
push
xchg
mov
sbb
adcb
push
xor
mov
sbb
push
mov
add
ret
push
sbb
push
pop
cmpsl
xchg
lods
fwait
insl
jp
js
les
scas
jae
mov
push
rolb
xchg
out
movlps
mov
cmp
mov
mov
cli
test
or
scas
mov
ret
or
sub
cmpsl
es
mov
cld
add
xor
arpl
cmp
mov
mov
cmpsl
mov
mov
xlat
mov
mov
mov
lods
ret
imul
cld
js
lock
lock
ret
mov
cmp
fcoml
in
js
lcall
push
inc
jge
stos
out
xchg
jp
inc
ja
dec
inc
nop
adc
jbe
mov
out
negl
pusha
mov
cmp
push
stos
test
push
hlt
test
add
pop
fwait
or
enter
push
addb
fistpl
add
push
cmp
cmpb
fldcw
out
into
loope
push
stos
fistpl
mov
mov
rclb
notb
cmp
or
out
inc
out
mov
in
cmp
inc
sub
mov
lock
pop
mov
push
dec
cwtl
mov
cmc
jge
int3
dec
add
out
stos
outsl
mov
fucomip
call
cmp
add
ret
not
xlat
lods
hlt
xchg
ja
or
out
mov
adc
sbb
lret
sbb
inc
mov
jnp
inc
pop
mov
push
push
and
mov
mov
mov
pop
push
cmp
fadd
xor
es
xor
loope
xlat
data16
insb
xchg
jbe
scas
cmpsl
cmp
fadd
div
sbb
test
mov
pop
hlt
inc
inc
jle
lcall
cwtl
and
mov
inc
bt
in
aas
sbb
mov
inc
cli
lock
or
fistl
mov
jnp
and
gs
ficompl
ljmp
ret
test
mov
pushf
movsl
arpl
add
aaa
scas
jle
mov
fisubrs
leave
lds
or
mov
mov
xchg
xorl
sbb
jge
test
divps
clc
lock
aaa
in
jle
in
mov
mov
das
add
loopne
mov
lcall
inc
popf
and
rorb
jp
xor
fstl
adc
or
sub
mov
xor
mov
sti
cmp
xor
mov
popa
xlat
xchg
pop
and
pop
lret
sub
jecxz
insb
in
out
leave
or
mov
fidivs
into
pushf
in
sbb
jle
xchg
mov
jmp
ljmp
adc
incl
call
clc
out
or
cmpsl
popf
pop
lahf
xchg
mov
jge
or
mov
faddp
dec
mov
mov
mov
inc
mov
lret
xchg
add
adc
int
fisttps
xchg
iret
xchg
xchg
jmp
stos
cltd
pop
ficomps
hlt
push
lds
adc
xchg
cmp
inc
ds
inc
xchg
xor
xchg
mov
pusha
ja
popf
add
sub
sahf
mov
mov
icebp
bound
daa
cmp
lahf
cmp
iret
xor
xchg
test
or
loopne
repnz
mov
cmp
in
cld
adc
loope
rcr
fcmovbe
push
fstps
cmp
jecxz
pop
mov
jae
scas
cmp
and
xor
cmp
ret
mov
outsb
ss
or
mov
push
mov
mov
or
cvtpi2ps
scas
insb
cmp
fxch
cltd
mov
pusha
data16
outsb
pop
jl
insl
xchg
je
push
mov
test
mov
fidivs
or
into
call
andl
cmp
ja
inc
add
or
pop
adc
inc
and
xchg
sbb
ret
xlat
cltd
sbb
xchg
pop
push
loopne
fsubs
test
aam
add
je
dec
fwait
sub
loop
icebp
scas
popa
pop
in
mov
int3
mov
cs
inc
fwait
pop
hlt
sub
inc
ret
scas
mov
push
pop
mov
addr16
es
xchg
out
pop
loope
jmp
xchg
add
jp
mov
lds
loop
jae
aaa
ss
mov
mov
pop
or
jae
sub
es
sbb
xchg
loope
pop
pop
pop
mov
and
cli
lock
lock
mov
push
cmc
adc
sbb
xchg
fnstsw
mov
insb
cli
or
stos
add
jecxz
jno
and
xchg
lock
data16
cmp
dec
test
daa
mov
xchg
sar
cmpsl
inc
fwait
std
subb
adc
push
idivb
adc
std
inc
ja
clc
and
jge
pop
dec
movsl
in
inc
push
mov
push
sti
shll
mov
shr
or
nop
adcb
cld
adc
fcomps
mov
and
push
icebp
adc
or
lret
into
packsswb
loopne
mov
jbe
sub
xchg
fmull
xchg
int3
pop
shr
pop
test
dec
add
xor
and
es
loope
mov
hlt
loopne
xchg
lds
mov
mov
push
lret
stos
leave
pop
xor
xchg
out
xor
jb
cmp
cmc
jb
jo
xorb
shrl
inc
out
mov
dec
jo
aaa
mov
pop
ret
xor
stos
in
mov
sbb
xchg
cmc
xchg
fcomi
and
inc
pop
outsl
ret
sbb
pop
ss
mov
jne
and
cmp
or
shr
lods
jo
pop
in
mov
mov
and
xor
ljmp
mov
rcrb
cmp
stos
mov
jecxz
nop
enter
mov
pop
out
cli
ret
cld
mov
mov
sbb
jle
jge
mov
jns
mov
jb
shlb
add
or
std
cmp
push
es
sub
push
sub
xlat
xor
mov
sbb
jl
push
mov
je
mov
cmp
sbb
pop
adc
insl
xor
repz
fiadds
or
out
movb
loop
push
cmp
popf
popa
inc
xlat
rorl
push
adc
push
add
push
inc
scas
jnp
lods
inc
jae
mov
jo
cmpsl
out
mov
and
or
push
out
xor
les
sbb
rorl
push
cmp
xchg
out
stc
popa
hlt
jmp
into
in
in
cmp
lods
es
sbb
das
inc
sub
or
loope
adcb
orl
mov
cltd
xchg
mov
sub
jecxz
adc
cmp
sbb
fdiv
lock
cmpsb
and
mov
clc
call
and
xchg
or
dec
mov
in
pusha
movsb
iret
data16
or
cld
loope
in
clc
mov
outsb
jo
mov
iret
fwait
mov
mov
cli
mov
iret
cmp
xor
dec
sub
or
push
add
into
xor
mov
orl
pop
ret
xor
sub
cmpsl
cmpsl
adc
sub
cmp
fstpl
lock
jg
and
cld
out
mov
cmp
sbb
lods
pushf
push
and
adc
mov
jb
mov
stos
xchg
std
fiadds
popf
fistpl
pop
pop
fidivrl
mov
pop
ret
data16
xchg
sub
pop
fsubrl
pushf
movsb
shll
filds
adc
jbe
cmp
imul
mov
es
cmp
mov
in
and
sbbb
and
cmp
mov
sbb
pop
aam
dec
sub
imul
les
js
cmp
imul
add
fdivrl
sbb
loop
jge
push
jp
hlt
or
push
push
xchg
sub
aad
xor
push
ret
pop
mov
push
inc
push
mov
shll
icebp
pop
push
jg
or
lods
inc
jns
xlat
cmpsb
or
mov
aad
je
fildll
pop
aam
jbe
call
pop
scas
or
outsl
int
jno
ja
dec
sar
cld
push
jge,pt
ss
sub
mov
xchg
pop
not
mov
in
movsb
pop
xor
in
mov
adc
mov
ds
jo
cmp
add
adc
rorb
lcall
dec
xlat
cmp
jbe
adc
aas
std
jge
and
mov
xchg
cmp
sbb
lods
xchg
mov
mov
and
scas
scas
stos
insl
lock
cmp
test
pop
inc
cwtl
loopne,pt
push
pop
outsb
sbb
mov
mov
sbb
leave
es
dec
imul
out
sbb
fstpt
jae
stos
dec
and
sti
push
mov
mov
push
in
sbb
int
popf
xchg
cmp
in
fstpt
add
je
pop
in
and
add
sysenter
je
or
cmpsb
test
scas
das
mov
adc
jmp
hlt
push
add
je
in
in
mov
pop
rcll
jp
add
out
test
in
push
aad
lahf
sbb
mov
pop
mov
push
loop
mov
xor
inc
in
cli
aam
add
sub
test
cmpsl
fwait
out
lret
inc
mov
mov
lcall
jp
cmp
mov
icebp
fdivrs
out
mov
push
mov
popf
or
icebp
sahf
and
popf
push
inc
xchg
in
lcall
and
test
jmp
jo
ds
jbe
fucomip
les
push
inc
int
in
inc
mov
and
lods
ficompl
gs
js
cmp
outsb
pop
clc
stos
lea
movsb
lock
insb
cs
ds
push
jle
nop
popf
pop
add
mov
jnp
out
cmp
ficompl
into
cmpsb
dec
xchg
fldcw
movaps
insl
vpsubsw
iret
jae
notb
sbb
loopne
mov
lods
and
jae
or
movb
xchg
insb
dec
or
adc
push
rclb
daa
sahf
pop
movsl
clc
faddl
pop
pop
push
popa
mov
ds
mov
mov
xor
cmp
jle
aaa
fcompl
addr16
dec
in
jecxz
or
mov
movsb
push
cmpsb
inc
cmc
xchg
mov
inc
mov
call
mov
mov
leave
dec
sbb
jp
scas
imul
ja
xor
dec
push
cmp
lahf
mov
mov
cmp
push
xor
das
push
mov
jmp
rcll
add
outsb
loope
mov
jl
mov
dec
adc
ret
sub
fstpt
mov
pop
lret
cli
cmpsl
idivb
pop
pusha
push
enter
inc
mov
sbb
stos
mov
adcb
hlt
xor
lahf
cmp
add
adc
jnp
sub
mov
bnd
xor
or
arpl
pop
or
pop
fwait
hlt
or
jp
cmp
mov
jmp
push
popf
shl
mov
lret
sbb
mov
pop
xchg
loopne
sbb
rclb
adc
pop
sub
hlt
pop
sbb
push
aaa
aad
adc
pop
out
sbb
mov
stos
mov
ljmp
negl
shll
jbe
in
sub
push
mov
scas
fcmovnb
scas
cmpsl
jnp
out
add
inc
sub
les
xchg
sub
fildll
jle
pop
mov
sbb
mov
mov
insl
ljmp
push
insl
and
xchg
and
cmp
jle
testb
popf
mov
cmp
pop
dec
pop
mov
cs
cs
add
mov
out
fstp
outsb
out
sub
roll
nop
and
aam
int
push
jo
inc
pop
or
fwait
clc
xchg
in
iret
cmp
dec
push
clc
insl
insl
arpl
stos
jo
fucomi
jecxz
jmp
aaa
push
or
test
cmp
faddl
sbb
arpl
adc
mov
aad
mov
push
lea
dec
mov
outsl
sbb
xor
cli
push
lahf
dec
shrl
mov
out
ret
mov
cmp
lock
pop
cmp
stos
ljmp
adc
mov
subl
testl
xlat
movl
sbb
rcl
jl
xchg
push
push
cmp
inc
pop
je
add
insl
fistl
push
cwtl
insb
test
cmpsl
mov
dec
pop
fstpt
jbe
mov
mov
out
adc
clc
jno
mov
das
cmpsl
dec
fmuls
repz
stos
push
ficoml
mov
aad
fs
cpuid
in
xor
dec
sub
js
enter
sub
xchg
jno
clc
fsubs
stos
int
je
cli
sub
mov
cmp
aad
sbb
addr16
push
and
pop
xor
les
inc
sahf
rolb
ret
pop
clc
aad
out
je
push
mov
sahf
call
dec
pop
out
add
xor
testl
add
push
jne
sbb
rcl
movsl
push
jne
std
cmp
inc
inc
sub
into
lods
loope
test
dec
mov
sub
add
mov
jecxz
aam
js
add
xchg
or
jo
or
or
or
xchg
mov
inc
les
lods
test
cmp
and
push
sbb
test
xor
adc
daa
adc
jp
bound
mov
dec
ret
dec
test
call
jne
jnp
adc
insb
inc
cmp
add
lods
cs
mov
cmpsb
in
inc
adc
arpl
jle
jg
mov
adc
dec
into
push
cmp
repz
mov
xchg
aaa
sub
test
arpl
mov
push
pop
jge
or
or
inc
adc
push
ss
int
sbb
inc
cmpsl
inc
rorl
jg
push
les
mov
mov
or
push
loopne
arpl
jge
mov
mov
cs
sub
xchg
mov
je
xlat
in
pop
mov
rorl
add
mov
call
xor
pusha
push
cmpsl
dec
adc
push
mov
test
mov
shll
lret
add
test
ljmp
pop
pop
mov
mov
test
out
loop
add
cmpsl
vpackssdw
jecxz
outsb
or
mov
and
movsb
mov
dec
sub
ds
jbe
je
xchg
jns
ds
inc
inc
nop
jle
in
jne
shl
xchg
mov
jnp
mov
clc
mov
icebp
adc
ds
and
sahf
fsubl
jbe
popf
clc
cmpsb
adc
sub
cmpsb
add
or
jecxz
mov
cmp
mov
ds
sahf
cmp
push
icebp
pop
fnsave
arpl
in
mov
sub
fucomp
lock
test
fistpll
out
sbb
shll
dec
das
and
lret
stos
insl
js
popf
fdivs
mov
push
lret
jnp
cmp
scas
lods
imul
into
jecxz
into
stos
clc
and
js
cmp
push
fstpt
mov
cmp
outsb
lcall
dec
je
mov
mov
or
jecxz
not
push
mov
adc
std
ret
dec
sbb
repnz
xor
inc
inc
testl
cmp
push
pop
jecxz
xchg
pop
nop
insl
cmc
mov
jmp
mov
leave
sbb
cmc
sbb
mov
pop
movsb
outsb
ret
pop
mov
pop
sar
cli
cmovae
setle
xchg
adc
adc
lock
outsl
roll
pop
and
negb
sbb
sbb
jb
lds
jge
add
inc
fildl
xchg
and
divb
add
jmp
cwtl
jbe
pusha
enter
enter
aam
idivl
ja
cmp
mov
push
mov
add
outsb
pop
comiss
and
inc
les
cld
mov
mov
or
lcall
mov
push
into
jo
xor
sbb
ret
xchg
sbb
cltd
xchg
into
gs
pusha
sbb
popa
mov
pop
push
mov
iret
mov
push
mov
cmp
out
mov
xchg
ljmp
imul
inc
inc
dec
in
mov
cmp
add
pop
push
aaa
dec
sbb
pop
fnstenv
in
inc
lods
arpl
adc
shlb
mov
pop
dec
ja
jns
lahf
fs
aam
mov
int
inc
xchg
cwtl
ficoml
div
roll
stos
fs
adc
adc
iret
dec
sub
jge
pusha
jae
in
push
call
xchg
aam
mov
adc
xchg
data16
subb
imul
push
sti
out
test
sbb
cli
outsb
loope
aas
je
sahf
enter
testl
mov
aas
xchg
and
imul
fsub
xchg
mov
popf
ret
insl
mov
jns
fildll
cmp
xor
sti
ror
mov
aaa
aam
push
js
scas
jecxz
cmp
ror
popa
pop
clc
mov
adc
in
xor
mov
paddb
mov
sbb
inc
das
fistps
xor
lret
adc
fwait
pop
jge
pop
cld
pusha
hlt
and
lcall
push
in
insl
pop
call
repz
cmpl
mov
sahf
sbb
loope
pop
add
ds
out
xor
cltd
les
pop
cmp
arpl
add
gs
in
inc
cli
adc
sbb
nop
or
push
ljmp
push
loop,pt
sub
xchg
js
add
sbb
vpshuflw
pop
ljmp
or
push
cmc
push
and
mov
mov
jmp
hlt
mulb
scas
xor
and
addr16
adcl
lods
and
mov
jp
dec
into
lret
fcoml
add
decl
jo
fsubl
out
jmp
cmp
scas
jecxz
push
sub
addr16
cmp
mov
fwait
mov
sbb
dec
cmp
ds
push
fidivs
imul
subl
cs
add
test
push
mov
aas
cltd
ljmp
lret
adc
push
pusha
roll
insb
pcmpeqw
stos
gs
fmul
cmc
movzbl
sahf
mov
shl
mov
loope
or
scas
fdivrl
call
sbbb
sub
aaa
mov
jp
insl
ja
out
fxtract
sub
js
mov
in
arpl
or
xchg
push
xadd
or
push
aad
ret
mov
xchg
push
adc
mov
xor
xor
push
mov
push
data16
cmpsb
pop
inc
sbb
inc
sub
in
dec
lea
jnp
jecxz
mov
shll
cmc
bnd
lcall
pop
jecxz
jbe
mov
jle
jne
mov
into
popa
das
sets
test
push
ljmp
mov
call
inc
ret
das
cmp
or
or
xchg
sbb
pop
ja
sbb
adc
push
comiss
xchg
movsl
dec
inc
enter
add
xchg
xchg
pop
fwait
ss
sbb
xlat
out
ret
ficoml
test
cmc
test
sub
call
in
mov
jne
inc
fs
sbb
cltd
dec
inc
push
mov
fcoms
addr16
pop
mov
aam
jno
test
mov
dec
sbb
aam
imul
ss
sarb
fwait
mov
xchg
pop
fidivs
xor
hlt
adc
repz
call
pop
cmp
in
xor
mov
daa
mov
rolb
test
mov
in
in
xchg
xor
xchg
jbe
and
add
push
mov
inc
push
or
cld
mov
mov
and
pop
sub
sbb
xchg
cmc
sub
das
jl
sub
mov
adc
lds
and
xchg
push
fwait
push
sub
adc
pop
cli
data16
dec
cmc
xchg
imul
pop
mov
mov
rorl
sub
lods
xlat
dec
push
mov
aad
pop
jno
xchg
cs
cmp
aaa
adc
out
sub
or
dec
sbbb
lock
outsb
and
je
movsb
popa
divl
ss
call
and
movsb
mov
js
inc
out
xchg
rorl
mov
inc
mov
mov
adc
pop
subl
add
dec
adc
cmpsl
xchg
int3
mov
in
mov
pop
mov
dec
cs
pop
ror
add
sbb
mov
mov
into
lret
and
or
mov
mov
push
movsl
mov
rcr
mov
mov
pop
mov
push
repz
je
mov
call
ss
and
mov
push
push
pop
daa
mov
clc
push
or
jnp
addr16
lahf
mov
clc
mov
sbb
bound
sti
incb
clc
lods
addr16
scas
jle
insl
fsubl
imul
mov
inc
loop
outsl
push
ret
inc
add
lcall
lods
imul
shrb
bound
push
rcrl
mov
dec
jl
sbb
jg
out
jno
dec
xor
mov
jge
pop
add
fisttpl
pusha
inc
cmp
jnp
pop
stos
stos
test
loope
fcom
sahf
jp
inc
mov
jo
insl
ja
adc
test
lcall
fcomp
mov
cmc
jbe
dec
sbb
popa
sbb
add
out
mov
xor
daa
rcr
mov
imul
sbb
sahf
dec
fcoms
icebp
cmp
cmpsb
test
or
movsb
loop
or
mov
hlt
mov
jns
nop
int3
es
ret
dec
add
mov
in
adc
jecxz
jbe
mov
or
jl
push
divb
scas
inc
in
loop
shrb
mov
andl
loope
pop
fs
cmpsb
cmpsb
xchg
push
xor
fisubrs
daa
cmp
cli
jns
cmp
aam
scas
jecxz
scas
lahf
xor
call
sbb
scas
movsl
pop
clc
add
push
scas
icebp
lea
sahf
pop
mov
sub
mov
ret
call
jnp
in
addl
xchg
cld
aam
xchg
rorb
inc
sahf
inc
mov
adc
inc
stc
sub
int
jge
iret
test
mov
and
ss
sub
int3
jecxz
add
adcl
push
loop
jge
jo
and
xor
cmp
mov
pop
mov
aas
cld
aam
dec
iret
pop
push
sbb
mov
lock
dec
xchg
pop
mov
xchg
jle
fstps
nop
aam
js
pop
ret
add
cli
push
out
arpl
mov
pop
divl
or
and
scas
sti
pop
xor
xor
push
pop
adc
data16
mov
adc
jecxz
mov
xchg
sbb
mov
mov
lods
cmpsb
inc
or
dec
mov
mov
jp
fsubl
and
xchg
shl
in
add
cwtl
mov
cltd
in
xlat
popf
fisttpl
push
arpl
pusha
jno
hlt
or
in
mov
in
jecxz
sub
pop
push
or
dec
lret
jge
inc
in
sbb
shlb
nop
leave
aas
push
push
lods
add
insl
jns
test
pop
stc
test
inc
in
sub
sbb
add
xchg
js
sti
je
popa
xchg
pusha
and
mull
loopne
and
call
lcall
loope
les
inc
cmc
ja
scas
out
mov
ds
rcrb
imul
ret
ret
add
dec
jmp
adc
lods
imul
out
mov
mov
sbb
fucomip
jecxz
fisttpll
stos
loope
nop
push
loope
clc
mov
xchg
test
divl
mov
jnp
cmpsb
call
enter
outsl
enter
pusha
outsb
push
pop
dec
faddl
clc
shrl
addl
ss
out
outsb
pusha
int
sbb
mov
es
mov
mov
cmp
adc
sbb
pop
arpl
ficoms
bound
push
add
pop
jne
jnp
sbb
int3
nop
lea
lods
pop
xor
divl
pop
adc
ret
inc
loop
xchg
mov
dec
push
push
mov
inc
jmp
or
mov
popa
jge
mov
jle
or
popaw
add
pop
mov
cmc
xchg
es
add
shll
mov
mov
and
loop
xor
sub
push
dec
pop
test
xor
rol
stos
sbb
das
ja
rorb
loop
ljmp
loope
and
mov
mov
mov
xor
jnp
cltd
mov
cmpsb
arpl
cmp
add
pop
pop
cld
xchg
in
or
ja
add
dec
inc
add
adc
ds
pop
mov
mov
test
mov
cmpsb
faddl
in
ljmp
hlt
iret
cmp
xchg
dec
adcl
sub
mov
mov
jns
mov
xchg
data16
loope
xchg
mov
inc
mov
sbb
test
or
out
leave
test
imul
jb
paddusw
subb
pop
aas
ljmp
adc
dec
clc
insl
adc
out
imul
mov
cmc
sbb
pop
xchg
mov
fnstcw
push
jbe
inc
inc
pop
pop
cmpsl
xor
mov
dec
mov
mov
mov
mov
movsb
pop
outsl
mov
sub
rcrl
mov
pop
lret
fwait
dec
lcall
pop
dec
xchg
mov
mov
adc
insl
sbb
mov
scas
jge
jbe
negb
scas
jo
and
and
cmp
push
fsubrs
hlt
imul
mov
sbb
daa
xlat
mov
subl
scas
addr16
lods
sbb
cwtl
cmp
mov
sbb
mov
cmp
jl
sbb
fisttpll
lds
lret
or
lods
popa
out
sub
xchg
inc
stc
pop
pop
jb
aas
inc
hlt
fcomps
or
sti
cli
jne
mov
test
mov
sarl
ret
sub
fcmovne
hlt
lods
test
int3
or
sub
adc
cmpsl
cmp
lods
test
jns
fistl
jne
mov
sub
sbbl
inc
jne
aad
sbb
imul
mov
xlat
xchg
dec
lret
add
out
lods
hlt
add
sbb
and
and
data16
cmpsl
push
cmpsl
aam
mov
sahf
ss
mov
xorl
pop
cmp
mov
jecxz
mov
fisttpll
inc
jnp
rorl
jecxz
subb
notl
cmpsb
sbb
pushf
mov
cmpl
or
xlat
pop
mov
test
mov
mov
test
mov
push
test
mov
inc
jp
in
rcr
xor
jbe
xchg
lods
cli
jecxz
cmp
push
mov
inc
hlt
mov
or
loope
sub
pop
popa
inc
xlat
mov
orb
sbb
sti
inc
in
lahf
outsb
dec
mov
inc
jmp
loope
movsl
addr16
adc
xchg
mov
pop
addr16
iret
test
mov
and
hlt
daa
fistl
ror
pop
sub
mov
or
push
push
inc
std
mov
push
jp
loop
jle
xlat
push
push
cli
leave
lahf
cmp
push
aad
cmp
clc
rorb
pop
push
add
movsl
lock
out
mov
cmc
stc
mov
push
mov
imul
std
test
mov
or
pop
popf
sarl
pop
push
roll
sub
jo
xlat
hlt
jle
sbb
add
shrb
pop
cmp
ss
bound
xor
popa
mov
cld
out
jo
rcrl
in
pop
sti
cmpsl
mov
adc
xlat
mov
adc
or
scas
lret
pop
fucompp
inc
sbb
add
outsl
sub
into
sbb
fsubr
fcmovnu
out
outsb
jg
cmpsb
inc
bndstx
mov
iret
aaa
sub
cmp
loopne
jnp
cmp
outsb
test
xor
movsb
cmpb
sub
rorl
pop
enter
loope
mov
mov
inc
jmp
push
jl
inc
mov
add
repz
icebp
mov
mov
popa
jl
jbe
je
imul
mov
movsl
nop
loopne
adc
inc
sbb
fcomi
sti
push
pop
aam
pop
je
imul
mov
test
gs
adc
cmp
es
imul
jp
ss
mov
jne
and
or
dec
adc
ljmp
cmp
into
gs
rol
in
dec
mov
inc
nop
das
mov
out
jecxz
insl
inc
inc
imul
push
in
loope
cmpsl
pop
cmpsl
inc
inc
dec
imul
icebp
mov
jg
mov
fidivs
or
addr16
mov
addb
push
mov
adc
fisttpl
add
push
mov
pop
xor
icebp
jg
daa
xchg
add
insl
ja
push
arpl
xor
cmp
mov
daa
call
mov
sub
mov
and
adc
jns
mov
lods
jae
sub
sub
aaa
jae
rcr
loop
pushf
cwtl
push
jne
add
xlat
jge
add
jnp
addb
sub
lods
fmull
aas
xchg
mov
je
repnz
clc
mov
test
loopne
loope
jbe
inc
sti
dec
cmpsl
dec
test
fldt
out
fstpl
addr16
jnp
das
sbb
pop
mov
nop
mov
pusha
sbb
push
movsl
out
les
mov
sahf
stos
push
lret
mov
push
inc
xor
jge
int3
int
ss
xchg
jns
mov
daa
fistps
out
xchg
jmp
pop
jge
jg
mull
push
out
mov
jl
push
jo
cmp
cmp
inc
adc
shrl
icebp
jne
and
std
jecxz
xchg
ja
inc
jne
ljmp
and
ds
stos
lods
xchg
mov
dec
icebp
adc
test
loope
in
ds
sub
std
mov
daa
cli
imul
ret
and
mov
imul
inc
aam
xchg
pop
test
sbb
mov
fs
pop
enter
xchg
fstpt
pop
lcall
sbbl
gs
ss
js
sub
repnz
nop
xchg
and
dec
jge
xchg
out
fs
mov
insl
adc
push
cmp
xor
rcl
rol
shll
sub
idivb
or
out
lea
ret
mov
inc
loop
mov
je
xchg
scas
shll
or
aad
aaa
jae
fs
loope
inc
insb
mov
sbb
mov
testl
add
rcr
test
mov
insl
int3
xchg
adc
out
js
pop
add
mov
ss
cmp
jbe
pop
fidivl
mov
mov
xor
inc
jnp
loope
stos
jnp
fs
outsb
push
lcall
jge
xor
das
mov
mov
dec
jl
pop
mov
loopne
jne
cmp
clc
jge
std
xchg
xlat
pushf
aad
xor
data16
in
sti
arpl
jno
bnd
loope
jae
es
push
mov
mov
xor
insl
and
adc
leave
clc
inc
mov
pop
inc
clc
hlt
cmp
xor
into
adc
inc
mov
ja
outsl
leave
pop
xchg
imul
inc
fistl
mov
inc
imul
push
push
jnp
sbbl
lods
test
aad
js
enter
mov
mov
insl
in
xchg
cmp
xor
repz
mov
mov
loope
mov
adc
pop
cli
mov
adc
loop
adc
decl
pop
das
je
mov
subl
sub
popf
adc
xchg
scas
cmp
pushf
mov
jl
test
jge
repz
mov
call
aas
popa
mov
adc
je
das
adc
sbb
int3
imul
cmp
inc
or
pop
call
mov
test
aam
lock
sub
inc
or
jl
cs
jnp
dec
push
pop
or
pop
out
add
push
jecxz
push
push
xchg
addr16
cmp
sbb
add
ds
loope
xchg
lret
dec
sub
loope
cmpsb
mov
mov
cmp
hlt
sub
icebp
mov
lock
lcall
push
mov
xchg
xor
aad
loopne
mov
test
jne
or
add
mov
push
loop
dec
mov
in
adc
push
mov
push
push
fimuls
inc
jle
mov
jae
rorb
repz
xchg
aad
jnp
jecxz
dec
jg
jae
ret
pop
fstpt
xlat
movsb
inc
sub
rcl
push
fstpl
js
mov
aam
pop
sbb
popa
mov
sbb
jecxz
in
dec
inc
fldcw
mov
mov
dec
fisttps
jns
ja
jmp
xor
add
out
lds
divl
lods
xchg
jae
out
rolb
lahf
stos
add
sbb
loop
xlat
mov
popl
aam
and
cmp
shrl
jge
daa
jecxz
mov
cmpsl
or
pop
mov
jge
mov
jp
shlb
movsl
mov
and
xchg
or
sub
inc
out
cmc
cmp
shrl
adc
aas
push
nop
sbb
out
mov
ret
dec
mov
xor
jl
ffree
or
cmp
in
fidivrl
mov
sub
das
cmpsb
and
pop
pop
sbbb
adc
daa
mov
dec
lds
xorb
xchg
clc
adc
rorl
mov
outsb
sti
push
sub
jge
call
sbb
push
pop
test
rcrl
push
inc
inc
mov
loopne
cmpb
fmul
xor
jbe
pop
ljmp
sub
add
and
sbb
popl
xor
daa
push
push
rorl
or
test
mov
or
mov
scas
das
shll
mov
xor
out
mov
pop
pushf
fbld
outsl
arpl
hlt
std
mov
subb
mov
add
lock
cltd
mov
jne
sarb
sbbl
mov
ret
aad
pop
and
lock
mov
outsl
mov
mov
icebp
lods
and
jns
outsb
mov
push
inc
sbb
jp
jo
std
aam
xlat
imul
mov
out
or
and
lret
push
filds
adcb
icebp
inc
mov
dec
addb
jo
jge
mov
xchg
ds
adc
cli
scas
sbb
fdivs
dec
mov
xor
sahf
int3
ret
scas
sbb
testl
cmp
rcrl
fisttps
stos
xchg
add
rorl
ds
inc
scas
xlat
mov
mov
jae
addl
dec
adc
xor
mov
in
lods
cmp
sbb
andl
icebp
call
cmpsb
pop
lock
xchg
cmp
xor
inc
cmpsl
mov
mov
popa
ficoms
cwtl
inc
rcrl
mov
fstpl
aaa
lock
sbb
popf
or
mov
add
xchg
xlat
mov
mov
cmp
adc
std
imul
aam
je
hlt
jp
mov
pop
icebp
jo
mov
inc
addr16
mov
inc
cmpsb
push
sub
jmp
jae
add
jp
ss
subb
cmc
jl
pop
out
sbb
sbb
pop
cmp
mov
lds
add
sbb
stc
cmp
push
sahf
sbb
inc
mov
fdivrs
ds
dec
subb
lds
shl
in
clc
xor
lahf
pop
add
cmpb
inc
arpl
pop
sbbb
out
mov
out
cli
icebp
dec
mov
xor
stc
sbb
clc
rorl
sub
insl
test
and
pop
adc
sub
jmp
inc
mov
loope
push
adc
mov
xor
fs
jne
outsl
je
movsl
pop
std
fcmovnbe
jo
inc
mov
das
cltd
jg
sbb
xor
outsb
ret
jecxz
sbb
repnz
insl
mov
xchg
movsl
jp
cmp
outsl
out
or
push
pop
stc
ja
int3
fcmovnb
arpl
out
mov
loop
shrl
cmc
cmpsb
mov
cmc
dec
xor
mov
xor
mov
or
and
jle
popf
arpl
cmp
js
dec
lahf
fcomps
push
daa
mov
stos
or
jp
adc
mov
cmp
push
sbb
dec
stc
and
cmp
pusha
mov
fidivl
out
mov
cltd
nop
jecxz
pop
aaa
push
in
lods
and
jl
arpl
icebp
mov
cmp
lret
loop
push
lds
aad
ss
jp
pushf
sbbb
pop
inc
mov
mov
in
jl
cmp
pop
xor
shrb
push
cmc
mov
mov
popa
add
rcrb
mov
xor
clc
stos
mov
int
jmp
jne
mulb
inc
push
mov
rcr
sahf
add
popa
push
sub
ljmp
test
test
push
sub
dec
mov
sti
ja
push
in
jecxz
mov
sub
mov
cli
scas
adc
daa
push
ret
xorl
sbb
inc
jg
fwait
notl
mov
stos
stos
ficomps
add
pop
and
push
mov
add
inc
mov
mov
lock
andl
loop
and
test
addr16
adc
sbb
pop
fs
and
divl
sbb
jg
aam
push
es
jge
es
shl
lcall
sub
mov
lahf
or
pop
iret
stos
xchg
mov
cmp
jbe
pop
mov
js
aas
cmp
mov
fimull
in
rcll
add
mov
adc
xchg
mov
and
insb
and
cmpsb
lahf
mov
pushf
sbb
pop
cmp
mov
shll
mov
popf
push
cmpsb
pop
je
pop
mov
inc
je
mov
dec
xchg
iret
out
and
shll
mov
inc
sti
cmp
dec
insb
stos
test
dec
subb
push
cmpl
jp
stos
mov
test
xchg
andl
ds
inc
hlt
inc
in
sbb
fstps
out
insl
or
rorl
xchg
or
roll
sbb
int
sbb
arpl
mov
sahf
jecxz
ljmp
pusha
in
xlat
add
xor
mov
pop
jp
lock
sahf
cmp
jle
sbb
xchg
xlat
adc
xchg
adc
fstpt
xor
mov
aas
inc
inc
xor
xchg
cmc
rol
dec
outsl
lods
loop
dec
jle
repnz
pop
fiaddl
test
mov
loope
aad
dec
aaa
mov
cmc
add
fs
jl
stc
push
scas
mov
adc
cmp
pop
mov
xchg
adc
mov
adc
dec
sub
ljmp
mov
movsw
jle
push
mov
xchg
sahf
lods
repnz
pop
movsl
adc
add
aam
sar
aad
scas
aaa
out
mov
jp
mov
insb
jle
mov
push
je
test
mov
xchg
push
pop
xor
xchg
loopne
stos
cld
xor
sahf
xor
mov
push
je
adc
outsl
push
in
stos
out
jb
lods
sbbl
xchg
repz
fdivrl
mov
shlb
pop
pop
pop
push
xchg
ds
push
push
jne
or
jb
push
pop
and
int
movl
mov
popa
arpl
mov
je
fildl
adc
mov
pop
js
mov
mov
jg
subl
dec
mov
movsl
or
in
push
in
adc
cwtl
nop
loop
negl
sbb
jnp
jl
adc
and
mov
mov
outsb
add
lret
pop
adc
or
loop
pusha
cmp
mov
sti
sbb
push
das
mov
iret
adc
iret
cmpsl
mov
scas
pop
shrl
add
pop
push
subb
cmp
push
inc
into
sub
or
dec
pop
clc
push
inc
scas
lods
roll
js
fptan
es
xor
in
cmp
addr16
in
pop
repz
js
popa
je
mov
jp
dec
addr16
push
jbe
push
sbb
out
rol
sahf
or
xor
xlat
push
lret
pop
jp
xchg
push
std
loop
outsl
pop
scas
loope
sbb
out
xchg
dec
jg
adc
xchg
fadds
lds
js
pop
lods
adc
jge
or
push
rclb
std
stos
mov
out
sysenter
mov
das
sub
je
push
add
sub
xor
jbe
cmpsb
pop
or
mov
dec
aad
pop
enter
ret
pop
insb
push
xor
out
stos
xor
out
ret
fwait
cmp
xchg
insl
popf
loopne
push
inc
sub
mov
hlt
repz
lret
loope
sti
hlt
dec
pop
cmc
imul
inc
jge
cmp
push
pusha
lcall
cmc
push
outsl
jg
loopne
pop
lock
sbb
int
or
mov
jmp
aad
adc
adc
int3
out
pop
repz
clc
aad
add
sahf
mov
in
jno
negl
mov
dec
mov
subb
push
incl
mov
subl
pop
fdivrp
adc
mov
xlat
sub
sti
pop
int3
and
scas
and
jecxz
mov
ret
mov
call
or
jmp
mov
jge
lock
insb
cli
aaa
enter
sarl
frstpm(287
or
sbbl
or
repnz
dec
rcrb
clc
test
pop
insl
pop
das
sar
ja
adc
add
cmove
pop
inc
fistpl
pop
hlt
imul
push
mov
adc
lods
pusha
xchg
jmp
push
addr16
dec
sti
cmp
lret
cvtdq2ps
push
add
pop
popf
sub
pop
xor
loopne
outsb
sbb
xlat
mov
mov
lret
inc
jl
loop
or
inc
xchg
mov
jbe
mov
mov
inc
pop
inc
andl
cmp
adc
aam
inc
ja
adcl
in
out
push
and
mov
lods
lahf
ja
or
cmp
xchg
pop
cltd
push
daa
outsb
enter
adc
and
inc
mov
sahf
ljmp
ds
test
in
idivl
push
fwait
mov
ror
scas
test
mov
push
mov
paddd
adc
pop
jae
pop
ret
imul
iret
dec
in
test
xor
loope
cs
sbbl
mov
popa
or
cmp
sub
pop
and
mov
mov
sbb
loop
xor
pop
gs
adc
popf
fmull
jl
lock
fistl
in
outsb
movsb
ds
or
in
cmp
gs
mov
mov
pop
in
lods
dec
add
mov
mov
je
mov
inc
aaa
mov
jl
cmp
cmpsb
mov
aaa
xor
inc
or
jg
and
out
push
push
dec
je
or
jmp
pusha
sahf
jb
lods
jl
pop
dec
cmp
xchg
les
mov
and
leave
inc
or
add
sti
sbb
test
push
xor
jge
add
je
push
xchg
push
aas
mov
test
jmp
mov
or
mov
mov
outsb
ljmp
cmp
jmp
lods
or
sbb
imul
in
sbb
cmpsb
push
ret
cmp
add
jne
fistpl
and
push
xchg
pop
mov
lcall
jmp
pushf
frstor
outsb
pop
jne
push
enter
pop
in
sbb
sub
enter
xchg
pop
mov
fidivrl
je
in
fidivrl
mov
sbb
and
les
rep
xchg
jp
and
mov
hlt
mov
std
stos
icebp
push
outsb
mov
or
mov
pop
in
mov
test
std
and
jl
mov
adc
lock
mov
mov
ffree
pusha
xlat
in
and
insl
push
jb
push
inc
jge
mov
pop
clc
add
js
stos
cmp
sub
adc
stos
pushf
cmc
mov
mov
mov
xchg
push
cmpsl
rcrl
push
jno
jno
cmp
ljmp
or
lds
imul
mov
mov
dec
push
xchg
clc
call
cmp
mov
lock
pop
test
je
fcomip
pop
das
orb
les
pop
jmp
inc
cmc
inc
loop
pop
push
das
cld
lcall
nop
outsb
sbb
add
scas
fidivrs
fnstcw
mov
sub
daa
adc
mov
idivl
push
jae
fdivrl
ds
jecxz
mov
lods
xchg
in
and
ss
or
xchg
ljmp
leave
fdivrl
sbb
in
int
icebp
shl
add
jle
or
and
mov
jg
je
jecxz
adc
sub
jecxz
into
mov
sbb
fcmovu
ljmp
pop
adc
dec
cltd
mov
mov
fwait
movsl
insb
mov
in
ds
mov
push
enter
ljmp
rclb
or
les
mov
fstpl
in
push
add
addr16
loopne
jge
mov
orl
mov
inc
push
fucomi
daa
mov
mov
and
js
sub
popf
ret
lea
jno
xchg
test
loopne
mov
mov
jge
pushf
adc
xlat
inc
popf
rorl
jp
loop
xchg
jnp
xor
ficoml
jbe
ds
out
jp
ljmp
stc
fstpl
call
xchg
push
data16
std
out
stos
pop
push
jecxz
shl
fmulp
mov
int3
inc
push
lods
mov
icebp
lock
mov
mov
insl
inc
mov
inc
js
cltd
rorb
vunpckhps
sbb
jmp
sub
adc
loop
and
sub
call
leave
mov
mov
jbe
inc
or
shll
data16
add
xchg
imul
scas
and
xor
push
sti
mov
iret
mov
outsb
pop
loope
sub
mov
pop
loopne
xchg
scas
lahf
cwtl
adc
hlt
or
jnp
dec
daa
out
inc
sbb
jo
jo
add
add
test
sbb
xchg
add
aas
hlt
adc
push
add
sub
data16
mov
xchg
or
jne
fistpl
rorl
cltd
cmp
adc
ror
sbb
test
mov
xor
lea
and
jne
das
loopne
push
fwait
test
jno
lock
mov
pop
xchg
jge
sub
jnp
pop
cmpsb
test
out
push
out
lods
scas
fsubp
fs
adc
mov
jae
clc
cmp
xor
xchg
and
fsubrl
aas
aad
ss
mov
jne
pop
pusha
ror
add
fcompp
xchg
in
mov
rcrl
pop
in
fiaddl
mov
sti
stos
movsl
jg
daa
mov
imul
and
sub
rorl
cmp
mov
je
lock
ds
loope
pop
xchg
add
cld
sarb
mov
jg
push
inc
es
sub
mov
jle
cmp
add
lcall
push
dec
mov
xor
mov
bound
xchg
outsb
mov
and
aaa
cli
adc
inc
and
fstps
mov
ss
mov
aas
push
dec
xchg
ret
or
cmp
pushf
out
lds
mov
bound
add
lret
xor
jae
pushf
and
cmp
pop
mov
scas
cmpsl
ret
jbe
and
add
addb
sbb
cli
test
jo
aad
xchg
or
mov
xor
aad
sti
pop
decl
mov
dec
pop
inc
pop
lock
cmp
xor
adc
xor
mov
ret
cs
pusha
in
mov
pop
dec
cwtl
test
icebp
mov
xchg
movsb
push
mov
mov
adc
fidivrs
sti
call
sub
fldt
shrl
fs
leave
out
fcmovu
rorb
sbb
mov
fdivs
nop
int3
xlat
hlt
push
js
mov
scas
push
cwtl
mov
out
notl
pop
aaa
std
ficompl
cltd
xchg
and
loope
push
inc
dec
adc
iret
and
xor
out
sbb
test
xor
adc
imul
out
outsb
loope
pop
add
or
push
lret
call
stos
hlt
jp
pop
sbb
lahf
push
out
or
sbb
aas
fld
mov
dec
mov
add
fadds
mov
stc
xor
dec
pop
dec
add
cmp
pop
aam
gs
shll
mov
jne
mov
std
sbb
mov
adc
jae
xchg
outsb
lahf
add
cld
add
incb
lcall
and
sbb
cmpsl
adc
stos
stos
adc
mov
lea
pop
es
roll
fdivrl
test
xor
insl
popa
dec
dec
xor
or
jno
sub
push
dec
mov
pop
mov
daa
popa
fdivp
stos
or
jecxz
push
gs
pop
cwtl
mov
push
inc
ret
add
test
jle
dec
sysret
.byte
mov
adc
or
push
je
imul
add
push
mov
cmp
fldt
add
adc
or
xchg
dec
mov
ja
or
fmull
dec
and
lea
xchg
mov
sbb
mov
sub
adc
mov
add
adc
or
cmp
out
out
mov
xor
pop
sub
and
or
insl
in
mov
pop
pop
xchg
mov
inc
xchg
sbb
mov
or
jge
pop
or
outsl
fmull
ret
push
mov
add
push
jg
orb
pop
pop
pop
ret
nop
jmp
or
insl
push
rolb
test
pushf
cwtl
xor
and
sti
or
xor
bound
gs
inc
inc
xor
pushl
test
shlb
aas
bound
sbb
mov
mov
and
bound
mov
test
jle
push
loope
mov
sbb
pop
jae
int
add
sti
fcmovnu
sbb
fldl2t
add
bound
fidivrs
sbb
imul
negb
insb
xchg
in
jmp
jmp
movd
in
ss
fstl
add
sbb
jle
insb
shr
popf
repnz
or
das
stc
or
add
or
sbb
imul
sti
lahf
jne
add
fs
lret
or
sti
mov
cmp
cmp
and
mov
or
inc
insb
std
addr16
in
mov
in
stos
push
sbb
je
clc
mov
lds
sbb
jnp
jmp
imul
sub
xchg
test
dec
adc
mov
mov
insl
int
adc
loope
sti
sub
or
sub
or
sub
mov
incl
adc
dec
pop
jmp
xchg
pushf
pop
fisubl
add
mov
mov
sub
mov
sbb
or
sub
cmp
xor
mov
cmp
popf
cmpsb
cli
and
loope
add
adc
jecxz
sbb
outsl
call
adc
bound
pop
ljmp
mov
lock
add
jmp
ljmp
stos
add
adc
fucomp
fldl
adc
fwait
sbb
test
jmp
ja
sti
mov
sub
inc
push
pop
or
and
sub
mov
xchg
out
jo
inc
das
out
loope
lods
push
loop
divl
fsubrl
arpl
jns
adc
or
xor
sahf
add
adc
adc
mov
mov
adc
jmp
notl
ds
cmp
adc
mov
jmp
shrl
cmp
mov
ss
pop
jge
in
sub
out
in
or
popa
outsb
lret
out
fsts
xchg
imul
shll
mov
outsl
fldenv
dec
fldt
in
jne
adc
popa
decb
fs
rorl
lds
xor
xor
mov
jnp
aaa
popa
imul
test
xchg
int3
int
cmp
in
in
mov
push
push
adc
push
pop
mov
add
xor
cwtl
ret
std
aas
add
mov
mov
mov
fldt
cmp
add
loopne
adc
shl
jne
test
out
ret
jne
or
hlt
jmp
adc
insl
xor
pop
mov
in
inc
call
cld
cld
subb
mov
add
jnp
sub
mov
push
dec
test
jb
inc
pushl
inc
lock
push
lea
mov
mov
sti
idivb
or
xchg
mov
add
cmp
or
sarb
ds
lods
jmp
jl
or
fs
xchg
add
sub
cmp
push
mov
jmp
and
test
adc
dec
jb
cmp
out
sbb
mov
dec
rcll
add
sbb
mov
scas
or
adc
dec
in
jne
aaa
jl
push
ret
lahf
dec
outsl
popa
fs
imul
std
incl
jb
jne
insb
push
jb
je
arpl
pop
sti
mov
je
dec
outsl
jbe
dec
gs
outsl
sub
adc
call
das
lea
pop
shrl
pop
cs
mov
mov
ficomps
adc
cld
lret
clc
xchg
dec
mov
ljmp
cs
jb
xchg
loopne
mov
loop
mov
inc
mov
or
int3
jnp
and
insl
add
push
lock
and
in
push
es
jno
sbb
cmp
push
test
je
sbb
test
cmp
mov
lods
jnp
aas
xor
inc
or
lea
or
ss
mov
shll
add
adc
jnp
lods
dec
les
adc
cmp
mov
inc
add
jo
or
je
arpl
fs
jae
sub
subl
lock
pop
and
xor
pop
cmpl
add
sub
mov
jno
test
add
fstpt
dec
cmp
jle
mov
add
in
jle
xor
sbb
imul
mov
jnp
lahf
sti
fmull
nop
imul
fistpll
dec
mov
call
jmp
je
ret
push
je
inc
loopne
lea
mov
sbb
repz
dec
cmp
jbe
sub
mov
xchg
mov
xor
sub
in
mov
sub
out
es
mov
mov
cli
or
dec
inc
dec
jg
inc
push
pop
call
fcoms
add
leave
sarb
dec
fdivs
leave
sti
lods
imulb
xor
add
fstp
testl
xchg
or
sbbb
imul
leave
xchg
out
fdivr
mov
in
lea
ret
out
ja
mov
mov
mov
pop
cmp
inc
fnstsw
jl
cmp
jl
call
mov
xor
das
mov
or
lea
xor
jl
pop
mov
filds
mov
pop
inc
and
jle
insb
or
add
push
fwait
fwait
test
inc
and
test
adc
xchg
ss
sub
lods
inc
out
mov
mov
hlt
mov
pop
and
jnp
fmull
mov
mov
pop
js
push
aad
setnp
cmp
fwait
inc
icebp
fsubs
aad
fcomps
pop
mov
push
in
or
fsubr
fcomps
adc
pop
jns
jp
push
mov
jl
adc
sub
inc
insb
loopne
cmp
add
xor
inc
lea
int3
pop
aam
add
or
xchg
icebp
add
add
scas
mov
sti
andl
push
int3
in
movsl
add
sbb
ret
mov
std
xchg
int
adc
sbb
das
push
inc
mov
or
js
adc
sbb
movb
daa
and
xor
xchg
cmc
in
insl
jbe
dec
mov
fmull
xchg
enter
mov
fs
sub
mov
bswap
cmp
jae
adc
jo
dec
cli
loopne
jne
adc
aaa
enter
pop
push
push
aam
in
mul
and
xchg
cwtl
popf
push
cmp
loopne
push
imul
inc
and
in
cmp
fs
insl
pushf
add
inc
fmuls
dec
inc
loop
es
in
sub
insb
mov
or
and
push
push
push
xchg
test
sbb
lds
adc
sub
push
xlat
arpl
mov
push
dec
cmp
jl
mov
sbb
rclb
ret
sbb
aam
pushl
inc
sub
das
adc
jb
gs
xor
mov
insb
insb
ja
outsb
add
sub
shlb
in
bound
mov
out
ja
stos
mov
leave
push
xor
nop
cld
xor
xchg
mov
sub
jne
mov
mov
or
or
mov
in
dec
pop
mov
cwtl
push
lret
in
in
jg
mov
mov
pop
testb
std
pop
ja
clc
popw
add
jb
cmpb
mov
js
adc
test
je
sbb
inc
or
or
addb
sbb
xor
pop
add
rcrl
xchg
stos
jmp
sbb
jns
mov
sbb
cmp
insl
mov
mov
loopne
dec
fwait
cld
and
mov
fdivrs
jle
xchg
mov
orl
jae
or
pusha
inc
ret
movsl
jecxz
mov
in
std
data16
xor
pop
xchg
push
push
or
mov
jl
xchg
in
push
orb
jge
lahf
mov
xchg
jg
clc
pop
or
data16
imul
outsl
inc
mov
adc
cs
cmp
xchg
pushf
daa
or
or
dec
cmp
add
insb
xor
fwait
inc
orb
dec
iret
andb
xchg
push
push
add
adc
mov
shlb
mov
mov
add
dec
add
pushf
jecxz
pop
cld
and
inc
cmp
push
add
inc
jecxz
push
xchg
dec
in
movsb
push
stos
sub
shll
xchg
sub
cld
clc
js
push
push
push
sbb
sub
push
in
sub
xor
std
jo
sbb
push
call
in
sti
mov
add
add
inc
inc
cmp
dec
and
push
push
movb
cli
gs
in
xchg
or
or
imul
jo
idivl
cmp
ss
aaa
cmp
or
cmp
enter
xor
and
sub
out
mov
aam
mov
sbb
push
push
pop
inc
mov
hlt
mov
xor
add
mov
scas
mov
push
mov
add
or
jge
cmc
mov
or
or
int
adc
ljmp
rclb
or
mov
xchg
test
sahf
or
inc
ret
mov
aas
or
inc
add
repnz
shl
push
add
add
shr
dec
add
mov
add
push
pop
or
sub
add
add
sbb
pusha
xchg
dec
add
pop
pop
jle
lock
imul
jg
stc
int
dec
inc
aaa
add
push
add
mov
or
dec
mov
addl
mov
push
ljmp
cltd
ja
mov
out
add
addb
inc
cmp
fidivrs
das
sub
sbb
ret
add
jae
cmpsb
pop
dec
jle
mov
cmp
sub
add
icebp
aas
divb
adc
push
fiaddl
add
add
add
stc
mov
movsl
or
inc
out
xchg
mov
icebp
xorl
add
in
sub
mov
xchg
adc
vmwrite
cmpsb
scas
adc
xchg
or
pop
scas
or
sti
imul
imulb
jl
sub
add
jge
add
idiv
xchg
add
adc
pop
or
mov
add
push
sub
pop
add
mov
mov
mov
mov
das
adc
imul
and
adc
pop
add
add
cmp
jp
add
sbb
sub
cld
pop
adc
movb
sbb
add
dec
jo
fisttpl
mov
leave
popa
add
mov
push
xor
push
jecxz
add
or
arpl
mov
sub
pop
hlt
out
ret
xlat
push
mov
or
repz
add
sbb
ret
adc
mov
mov
add
in
cmpsl
add
popl
cmp
pop
add
pop
sbb
push
inc
scas
stc
data16
add
cli
add
xor
xchg
add
lods
sahf
pop
ret
lock
in
pushf
lods
cltd
pop
into
out
pop
bswap
fstpt
pop
jmp
add
fninit
mov
sub
rol
push
std
add
repnz
arpl
add
inc
fdivrp
incb
push
add
xor
pop
jmp
ret
inc
xlat
cwtl
pop
inc
sub
rcrl
mov
mov
add
mov
mov
popa
push
movsl
add
sub
jecxz
test
bnd
insl
add
sbb
cli
mov
pop
or
je
push
add
das
lret
outsl
pop
cmp
repnz
xor
ret
popf
mov
je
cmp
and
fsubrs
add
imul
cs
adc
ret
sbb
mov
testb
cmp
mov
and
mov
xor
cmp
xchg
nop
fisttps
sbb
pop
outsl
popa
xchg
add
add
add
ficompl
or
dec
gs
mov
fdivrs
push
sbb
add
mov
xlat
fucomp
nop
jmp
mov
add
mov
decl
cltd
add
add
mov
push
call
add
dec
add
adcb
outsl
stos
xlat
ds
fdivl
arpl
aam
enter
cli
test
add
test
int3
mov
adc
incl
loop
idivb
sbb
stos
jbe
mov
arpl
mov
jmp
clc
sub
cmp
mov
out
out
call
inc
aad
stc
insb
jnp
int
mov
or
shlb
test
cmpsl
xchg
xor
enter
mov
cmpsb
jb
mov
lcall
fcmovnb
cmp
sub
xlat
cmp
out
ds
cmp
fwait
popa
cmp
push
popf
lods
mov
cwtl
repnz
xor
fs
scas
dec
jmp
pop
insb
outsl
jne
fstpt
out
movsb
sub
cmp
sbb
pop
shrl
mov
xor
dec
adc
push
xchg
dec
inc
es
sub
fcomps
std
push
mov
rcl
icebp
inc
out
push
jns
add
fcmovb
ret
outsb
repnz
dec
mov
lret
nop
sbb
or
add
add
push
lcall
cld
or
frstor
inc
push
fsub
pop
and
test
or
shrb
add
std
ror
aam
rorl
adc
or
push
adc
das
adc
cmp
ljmp
mov
sbbb
leave
dec
jecxz
icebp
mov
shll
jecxz
fwait
movsl
xchg
jge
or
mov
jbe
push
sub
jns
sub
pop
mov
jae,pn
add
js
aaa
mov
mov
in
sti
jg
mov
pop
popa
xchg
arpl
mov
cmp
imul
fimull
cli
xor
aam
jo
in
inc
leave
scas
into
jecxz
popa
jmp
in
xor
pusha
jnp
loopne
out
add
or
sub
dec
and
jbe
pop
dec
push
in
mov
cmp
icebp
cs
jns
sbb
push
dec
insl
fsub
sbb
mov
mov
fisubl
pop
scas
and
les
sub
xchg
push
mov
mov
mov
inc
mov
inc
and
mov
aam
jecxz
add
xor
pushf
mov
push
call
pop
push
jno
nop
pushf
leave
outsb
sbb
adc
push
pop
xor
and
xor
out
jmp
pop
fcomi
movl
adc
or
pop
in
mov
arpl
pop
cmc
data16
adc
lea
pop
sub
add
or
fiaddl
sbb
ret
or
vcmpps
jno
ret
pop
insl
cmp
pop
jecxz
jnp
mov
loopne
insl
mov
mov
shll
incb
imull
sbb
and
jbe
mov
xlat
mov
mov
mov
int
pop
hlt
cmp
mov
stos
hlt
xchg
in
imul
jp
inc
idiv
std
push
xlat
jmp
bound
xchg
adc
add
lcall
adc
mov
mov
les
cli
popa
inc
mov
cmpsl
push
push
mov
sub
sbb
pusha
sub
leave
push
imul
jge
loopne
in
inc
sbbb
cmp
add
mov
rcll
xorl
inc
mov
push
adc
lods
popa
imul
jl
mov
sbb
cmc
and
lock
call
js
sbb
lods
roll
pop
stos
fistps
mov
cmp
push
mov
pop
cld
pusha
xchg
imul
ljmp
dec
xor
nop
sub
shll
fisttpll
mov
and
mov
ljmp
xor
out
xchg
pop
mov
add
mov
or
das
mov
out
lock
dec
xor
inc
pop
mov
mov
inc
push
mov
movsl
pop
cmp
mov
xchg
dec
clc
push
mov
sbb
adc
sbb
sbb
lock
test
jge
mov
cmpb
loope
push
scas
ss
or
dec
faddl
mov
fsubp
mov
ret
fsubrl
push
and
jecxz
mov
cmpb
enter
aad
ficompl
mov
arpl
outsl
in
rcrl
xchg
sbb
mov
pop
inc
ret
ret
pop
out
mov
cmp
lea
pop
fildl
sbb
jae
xor
jno
xor
js
mov
sahf
test
movsl
mov
push
jne
push
hlt
mov
cs
mov
cmpsb
mulb
mov
je
shrb
dec
xor
pop
out
mov
js
xor
clc
jb
mov
push
or
in
mov
jae
cmp
mov
or
dec
mov
repz
cld
jne
orl
jg
ret
dec
repz
out
mov
sub
stos
bound
scas
push
packsswb
faddl
shll
fninit
bound
mov
xor
or
pop
ja
inc
cwtl
clc
outsl
divl
sub
jne
clc
int
mov
movsl
ret
push
mov
jmp
cmp
aad
fildl
xchg
inc
and
sbb
rorb
or
xor
fyl2x
mov
pop
mov
inc
call
hlt
jecxz
fwait
xchg
mov
clc
jmp
pop
adc
sbb
hlt
and
sar
loope
fldt
jle
nop
xchg
mov
lock
out
clc
popa
add
mov
fdivs
or
xor
adc
mov
lret
daa
ds
mov
dec
mov
add
aaa
outsb
in
popa
leave
sbb
jg
push
outsb
fwait
jle
das
mov
xchg
sbb
mov
sbb
sub
bnd
or
xor
sub
push
gs
push
push
jne
mov
jns
inc
pop
pop
mov
sub
fdivrp
insl
xchg
pop
mov
xor
sub
in
cltd
iret
repnz
repnz
xchg
xchg
mov
popa
pop
or
dec
outsl
rorl
fucom
mov
jne
jno
fcmovnu
aam
test
sub
call
jle,pn
inc
loope
add
inc
ljmp
pop
mov
pusha
pop
cmp
mov
sbb
imul
cmp
dec
mov
shlb
loope
roll
cmpsb
movsl
idivl
push
cli
pusha
imul
cmp
jae
push
std
xlat
lds
mov
and
mov
mov
faddp
xchg
cs
xchg
pop
adc
out
xchg
or
shr
ja
mov
scas
mov
sub
or
cmp
iret
cwtl
je
int
fstl
fisttpl
jmp
and
cmp
addl
xor
sbb
je
jb
daa
mov
push
hlt
mov
cmp
outsb
push
or
ret
fisubl
jb
ljmp
lock
jl
dec
jle
lds
sbb
cld
push
jle
push
pop
cmpsb
aaa
mov
dec
imul
xchg
jle
cmp
pop
es
inc
loopne
and
lds
sbb
shl
mov
imul
and
punpcklwd
fimull
push
fiaddl
sbb
loop
rclb
test
or
fmuls
jne
xor
push
gs
mov
adc
push
mov
sbb
mov
popa
cmp
push
cmp
lcall
dec
in
mov
inc
inc
mov
std
ss
adc
jne
cmpsl
mov
fwait
std
notl
inc
push
fisubl
hlt
mov
mov
xor
loopne
xor
repnz
xor
mov
ja
sarb
xor
pop
rolb
mov
xor
test
loope
test
mov
and
sbbl
movsb
lods
inc
cmp
cmp
sbb
iret
xchg
sbb
dec
inc
dec
sahf
jb
adc
add
cmp
dec
pop
shl
jnp
andl
cmp
scas
xorl
shrb
loop
icebp
add
imul
aam
out
clc
inc
xor
cmp
dec
sbb
mov
jp
je
mov
mov
dec
xchg
push
aas
sbb
das
or
xorl
or
adc
out
out
popf
add
xor
jns
popf
imul
mov
in
push
or
fmull
xchg
inc
loopne
imul
pop
jmp
xchg
jecxz
mov
add
jmp
data16
sbb
adc
mov
inc
push
out
enter
sbb
mov
cmpl
inc
js
jmp
or
mov
shlb
in
mov
add
hlt
cmp
mov
xchg
mov
pop
rolb
dec
int
xchg
mov
mov
inc
inc
push
inc
pop
xor
test
pop
aaa
repz
push
pop
fnsave
and
mov
mov
pop
ret
sub
icebp
imul
neg
in
imulb
lods
fldl
out
jb
mov
cmpsl
aam
adc
pusha
enter
jl
cmp
mov
dec
pusha
sti
movsl
and
jne
adc
mov
fdivr
add
daa
lcall
mov
jbe
loopne
jg
cmc
push
dec
in
ret
push
and
insl
imul
out
gs
xlat
inc
ret
test
sti
xchg
in
mov
fiaddl
sub
xchg
jecxz
fmull
ds
mov
loopne
scas
imul
lcall
pop
out
xor
pusha
mov
fdiv
cmp
orb
jl
test
pop
cmp
adc
subb
clc
aam
inc
and
jbe
arpl
cld
sbb
dec
sub
and
pop
pop
sti
pusha
stos
push
repnz
push
and
pop
pop
out
or
mov
cmpsb
pop
xor
mov
push
hlt
aas
jmp
jle
out
mov
in
popa
rcr
js
jl
jecxz
out
lret
aaa
push
xor
insb
jne
cmp
test
push
stos
push
cmpsb
and
shlb
inc
jb
push
add
jp
cmp
add
mov
mov
js
test
pop
xchg
shll
adc
outsb
cmp
inc
cld
push
mov
addr16
movsl
pop
ret
dec
dec
xor
or
lods
jae
sbb
pushf
push
repnz
dec
sub
imul
incb
repnz
outsl
cli
fsub
outsb
mov
sbbb
iret
pusha
dec
fidivs
jl
aam
cld
call
clc
cmp
inc
and
fidivl
test
pop
pop
sar
pop
fistps
scas
jae
sub
clc
pop
imul
and
mov
aam
sti
enter
pop
ljmp
pop
stc
lret
sub
ret
jbe
and
pop
mov
clc
insl
fwait
xlat
cmpsl
mov
inc
cli
js
mov
test
pop
es
pop
pop
dec
mov
arpl
jge
sub
bound
cmp
add
adc
jecxz
mov
fcomps
in
mov
scas
cmpsb
add
cmpsl
jnp
sbb
pop
js
test
test
mov
mov
cmp
lcall
cwtl
jne
mov
jns
movsl
fld
xlat
jecxz
test
ja
xchg
inc
fstps
xchg
in
sbb
add
pop
push
jle
movsb
jle
sbb
mov
clc
ret
sub
imul
sub
daa
push
adcl
orl
je,pn
lcall
sub
push
cmp
dec
and
fwait
int3
ja
lock
mov
mov
push
sbb
xor
and
lret
loopne
mov
pop
dec
mov
orl
pop
aaa
ret
pop
jne
add
test
push
test
femms
arpl
jl
hlt
dec
cmp
dec
mov
daa
outsb
nop
and
stc
call
loope
repnz
movb
push
xlat
movsb
outsl
jecxz
stc
push
in
icebp
sbb
shrl
repz
cltd
stc
ss
inc
loopne
sub
and
cmp
push
jbe
ret
lods
aas
cli
pop
hlt
sbb
dec
es
rolb
sbb
push
sar
jne
cli
call
sbb
mov
fldt
fsubl
add
lock
inc
fcmovu
jnp
mov
xchg
jge
stos
mov
sub
jg
fnsave
or
push
xor
pop
lcall
lock
mov
push
pop
lahf
inc
repz
mov
push
test
mov
test
xchg
loope
in
mov
sbb
mov
fidivs
bound
subb
xchg
jae
add
mov
jne
aas
outsb
sbb
mov
je
fisttpl
imul
or
mov
jmp
and
lods
sarl
loop
es
or
sub
pusha
test
fcompl
arpl
sub
imul
mov
jmp
mov
cld
movsb
lret
dec
out
cmc
cli
pop
or
sub
jp
lods
movsb
xchg
imul
xchg
sbb
lret
das
inc
mov
add
sbbl
addr16
pop
aad
push
test
jecxz
pop
int3
cmp
addr16
mov
pop
in
pop
jl
popf
repnz
test
mov
xchg
xor
call
inc
and
loope
mov
shlb
inc
pop
ljmp
cmp
or
xor
push
cmp
stos
icebp
hlt
ss
daa
dec
xor
jle
scas
arpl
lea
in
push
mov
aam
mov
inc
fildl
xchg
das
jno
test
sti
mov
or
mov
hlt
outsl
jp
jbe
cmp
out
xlat
add
pop
mov
fstl
outsb
mov
rcrb
cmp
mov
out
jbe
cwtl
inc
sub
sub
push
popf
ret
dec
push
lds
inc
dec
jle
sbb
fwait
sub
rorb
pop
fcmovnb
test
push
sub
push
inc
inc
add
xor
mov
addr16
insb
sbb
mov
pop
cmpsb
push
jae
std
mov
fcomps
scas
cmpsb
shrl
outsb
xor
popf
rcll
add
aad
shll
lods
and
or
mov
daa
out
insl
rol
mov
aaa
mov
je
dec
dec
rorl
aad
fwait
lods
repz
and
in
gs
dec
aaa
ret
cs
cmc
je
shlb
cs
fcmovu
sahf
xchg
mov
scas
ja
dec
mov
outsl
fcompl
fisubrs
in
insb
cmc
enter
sub
hlt
lods
fidivs
pop
xor
stos
mov
mov
mov
cs
fs
add
in
ss
cmp
and
out
inc
pop
cmp
or
lret
and
or
adc
jl
mov
cmpsl
sbb
outsb
or
cmp
cld
adc
jne
out
sub
add
mov
gs
sbb
add
jmp
cmpsb
stos
adc
cmp
adc
call
mov
mov
fbstp
sbb
mov
xor
pop
dec
movsl
sbb
ss
mov
dec
fistl
push
jns
xchg
divb
adc
xchg
sub
out
hlt
add
fs
mov
js
pop
cmp
fdivl
in
add
jg
mov
popa
pop
fmul
mov
mov
rclb
cmp
dec
and
mov
dec
adc
xchg
inc
jge
mov
mov
adc
pop
push
jmp
rcll
dec
paddb
int
cmp
pop
add
xchg
add
cli
ret
adc
movl
sarl
out
icebp
xor
mov
xchg
in
lret
mov
loope
cmp
test
jmp
fldt
fcmovnu
xor
cmp
or
cltd
imul
inc
jle
xor
cmpb
cmp
shr
mov
mov
mov
ljmp
flds
sub
jle
std
jmp
push
test
pop
dec
aas
clc
jbe
cmp
je
mov
fidivs
popa
jne
push
sbb
inc
xchg
lahf
out
xor
sbb
dec
sbb
jge
aas
icebp
sbb
test
faddl
js
inc
clc
add
out
aad
pop
outsl
sbb
fldl
psraw
ret
stos
jecxz
xchg
push
jbe
clc
rcll
jnp
cmp
ds
je
movl
out
int3
mov
fsubl
fidivrs
mov
pop
jg
or
mov
mov
ljmp
and
xor
cmp
gs
dec
in
mov
push
sbb
repnz
int
jle
cmc
sahf
int
push
adc
or
jnp
mov
shr
ret
mov
daa
call
add
lret
std
mov
mov
xchg
adc
or
into
cmpsb
test
fldl
sti
mov
lods
inc
dec
push
movb
ds
mov
iret
iret
dec
mov
mov
add
rorl
mov
jnp
repnz
adc
sbb
addb
lods
ret
sub
push
xchg
daa
inc
call
dec
aaa
rol
stos
cmpsb
repz
and
cli
pop
call
pop
out
mov
push
stos
mov
jbe
cmp
jbe
rcrb
or
jae
adc
mov
call
lahf
ds
cmp
sub
iret
pop
aaa
sahf
clc
loop
push
es
pop
and
iret
inc
xor
xor
sbbb
jmp
nop
repnz
xor
lods
push
sbb
lcall
sbb
push
mov
inc
xchg
into
insl
pop
sbb
fldcw
mov
lcall
mov
rep
movsb
pop
mov
inc
loope
ss
adc
mov
mov
insb
outsl
pop
inc
scas
add
daa
shrb
sbb
imul
in
mov
and
fcoml
push
mov
jbe
scas
mov
mov
adc
mov
push
sti
cmpsl
jnp
gs
out
imul
je
pmaxsw
push
mov
outsl
setne
aam
mov
imul
dec
fistpl
add
loopne
scas
out
lock
cwtl
icebp
rolb
decl
cmp
pop
push
loope,pt
mov
icebp
aad
stos
xor
or
es
sbb
xor
in
pop
mov
inc
pop
out
mov
pushf
outsb
leave
push
sbb
fadd
sbb
sbb
sbb
bound
xchg
or
in
push
mov
push
jns
dec
add
jmp
js,pt
dec
xor
jecxz
or
and
push
aam
cmp
sti
ret
mov
pop
aad
cli
sub
sub
xor
pop
ja
or
jbe
stc
xchg
imulb
adc
or
pop
push
push
shrl
lret
outsl
inc
rcll
lods
add
xchg
inc
cld
ret
sbb
push
out
push
cltd
jge
ficomps
pop
pop
mov
in
pop
mov
mov
mov
jae
pop
push
xor
rolb
aam
jecxz
push
mov
pop
mov
inc
shll
xchg
jmp
jne
mov
adc
cli
mov
dec
pop
sbb
inc
jae
add
movsb
pop
jbe
decb
stc
xorb
push
inc
clc
loopne
jno
jne
out
dec
add
jnp
faddl
xchg
pop
xor
push
or
mov
dec
shll
imul
adc
lock
fadd
adc
lahf
push
dec
jge
hlt
loopne
sbb
repnz
or
push
sbb
popf
jnp
mov
cmp
or
into
mov
rcr
lods
les
fstpl
mov
pop
fcomi
or
insl
cs
icebp
popa
arpl
scas
scas
aaa
inc
sbb
push
shll
push
mov
arpl
test
pop
sbb
fstpl
sub
mov
xor
insl
filds
sub
call
sub
push
shll
roll
imul
outsb
nopl
cmp
sbbl
xchg
dec
dec
cmp
xor
repz
out
dec
mov
xlat
xchg
jbe
idivl
cmp
ss
mov
rcrl
jp
loope
out
ja
fwait
sbb
and
std
stos
jecxz
fcmove
and
psrad
sti
jo
mov
push
adc
push
mov
mov
push
pop
mov
mov
popf
ds
sub
jne
pmovmskb
lock
push
bound
in
lea
mov
call
mov
mov
mov
outsl
mov
push
lret
lods
fisttpll
pushf
jnp
inc
pop
fidivs
jecxz
daa
xor
dec
mov
cmp
sub
mov
sahf
xchg
iret
sub
stos
outsb
and
add
xchg
adc
clc
out
shl
dec
pop
pop
cmp
roll
mov
orb
pop
mov
push
jbe
test
pop
aaa
rcll
sahf
sarb
stos
mov
fwait
mov
mov
xlat
xchg
jne
mov
test
mov
xlat
mov
xor
mov
fsubrs
mov
add
lods
or
and
cs
jb
stos
clc
sarb
stos
in
repnz
shrl
mov
sbb
pop
ffreep
popa
push
daa
inc
xlat
inc
addl
adc
adc
movsl
int
jae
movsb
inc
pusha
mov
rol
xchg
mov
dec
dec
je
adc
sub
cmc
roll
fmull
loop
cmpsl
sbb
inc
lea
sub
lret
sbb
ljmp
clc
fidivrs
mov
iret
repnz
cmp
or
and
cltd
jbe
push
dec
dec
xchg
xor
and
setg
loopne
mov
push
xor
outsl
push
je
insl
in
jo
pop
jle
pop
cmp
insb
out
sahf
inc
shl
sub
cltd
or
fimull
gs
xor
inc
mov
cmpsb
mov
arpl
mov
pop
mov
clc
sub
lea
mov
and
leave
mov
dec
cwtl
das
mov
mov
movsb
aam
insb
push
popa
jmp
insl
mov
xlat
ja
jnp
ret
jo
mov
pop
ret
out
rcrl
lret
in
inc
xor
shll
scas
and
cmp
sbb
dec
and
lods
lods
pop
xor
push
clc
and
or
mov
outsl
sbb
push
in
and
jle
insl
call
sahf
pop
xchg
adc
jmp
inc
scas
add
scas
mov
push
jle
jnp
mov
gs
subl
insl
ss
test
cmp
call
pop
insl
and
addr16
shrl
cmp
inc
dec
clc
pusha
cmp
jmp
fucomip
outsl
or
pop
ss
mov
andl
or
fidivl
scas
subb
clc
jmp
inc
mov
inc
je
mov
cli
mov
pop
cmp
dec
insb
push
jnp
xchg
sahf
push
sbb
pop
inc
ffree
push
and
fdivs
pop
pop
call
xchg
xchg
cmp
cmpsl
dec
xor
cmp
push
mov
bound
out
xlat
rcl
inc
push
inc
out
mov
adc
mov
sub
mov
pop
mov
dec
adc
mov
mov
bound
popa
insb
jns
je
icebp
push
ret
inc
mov
lret
mov
cmp
leave
adcl
xlat
xchg
call
and
les
adc
inc
pop
nop
movsl
inc
aas
cmc
shr
adc
pusha
push
mov
rcrl
mov
int3
movsl
add
sbb
lock
add
dec
sbbb
test
cmpsl
dec
shl
sbb
dec
je
xchg
pop
fidivrs
leave
pop
stc
lods
and
or
jmp
stos
jmp
ljmp
mov
mov
cmp
inc
testl
mov
push
out
mov
sbb
pushf
and
dec
xchg
je
aad
mov
leave
leave
popf
outsl
add
pop
in
mov
popf
fcom
jne
ss
arpl
push
sub
mov
mov
and
mov
jg
fnsave
pop
sti
rcrb
mov
insl
sarl
aaa
cmp
repz
mov
test
xor
mov
stos
push
stos
sarb
inc
int
push
inc
not
add
int3
sar
sbb
ret
pop
push
adc
test
mov
insl
stos
push
pushf
clc
cmpsl
scas
dec
std
push
loopne
pop
sub
shrb
pop
or
push
mov
inc
add
pop
scas
ret
loope
and
inc
push
push
iret
pop
jg
lock
imull
pop
pop
sahf
jmp
jg
fnsave
test
inc
mov
icebp
xchg
pop
aaa
jbe
clc
sbb
clc
loope
push
rclb
in
jmp
mov
xor
shr
mov
cltd
sahf
mov
pushf
xchg
adc
sbb
mov
jl
mov
iret
mov
rol
inc
je
sbb
dec
loope
push
cs
ljmp
sbb
fwait
aam
shr
pushf
loop
jnp
rorb
orps
shr
or
sbb
push
jg
or
call
insb
xor
add
mov
dec
outsl
popa
aam
roll
dec
outsb
mov
testb
out
inc
clc
icebp
call
push
add
test
movsl
jno
pop
dec
adc
mov
or
jbe
jmp
xor
cmp
xor
jo
lret
gs
or
and
mov
out
xor
mov
js
jmp
imul
pop
or
dec
test
ror
imull
or
pop
push
sbbb
pop
mov
inc
xor
jl
add
ds
lret
cmp
or
out
pcmpeqb
in
cmp
fwait
push
repz
imul
ss
loopne
mov
inc
xchg
pushf
fistpl
in
and
lods
push
fisubs
mov
mov
sbb
test
dec
xchg
lea
inc
or
cmp
mov
insl
cmp
or
sti
push
ds
sarl
pop
xchg
insb
movsb
xchg
or
pop
test
jmp
mov
jp
das
mov
test
mov
les
cmp
xchg
out
addr16
inc
dec
pop
mov
aam
in
inc
inc
mov
sub
sbb
sbb
stos
jnp
stc
ror
ffree
pop
mov
mov
mov
jmp
push
push
ret
aad
mov
jne
xchg
lret
dec
ss
imul
stos
fstpt
pop
ret
mov
jmp
test
fs
shrd
mov
mov
shl
jno
xchg
or
aaa
sarl
jg
add
imul
push
pop
cmc
ret
and
int
roll
adc
or
insl
negl
fimuls
fsubrs
jnp
inc
hlt
pop
mov
enter
ficoml
adc
inc
xrelease
lods
addl
pop
jae
add
movsl
clc
or
hlt
cmpsb
test
cld
push
paddusb
push
push
mov
mov
ja
clc
cli
jge
jge
sub
cmp
fbld
pushf
push
cmpsb
mov
xchg
push
jnp
in
jmp
mov
sbb
test
fistpl
frstor
cmp
xor
fdivs
push
out
adc
mov
out
add
inc
scas
jmp
adc
rorl
jl
test
lcall
div
shl
cld
inc
icebp
repnz
pop
push
cmp
pop
jle
lods
xchg
adc
rorl
xor
ja
movsb
or
fndisi(8087
sti
dec
and
xchg
pop
movsl
sbb
xor
push
sbb
sbb
lock
mov
fwait
sbb
mov
popa
inc
xchg
je
sbb
xor
lods
jg
mov
ret
in
data16
stc
test
mov
dec
rsqrtps
or
js
ja
inc
mov
ror
mov
aam
icebp
out
ret
mov
push
xchg
xchg
mov
call
int
aas
mov
push
jp
shll
data16
mov
out
sub
cmp
pop
cmc
mov
mov
add
mov
in
mov
rcll
stos
jmp
pop
mov
dec
cmp
outsl
cmp
mov
nop
jp
adc
inc
adc
jl
xlat
enter
shr
call
inc
fstl
jp
js
jae
cwtl
mov
or
sub
push
dec
je
mov
mov
cmp
scas
shrl
cmp
or
add
inc
jnp
sbb
or
xlat
shrb
sahf
ret
aas
mov
jge
loopne
je
inc
push
add
lock
lods
into
lock
jne
dec
sahf
loopne
inc
mov
push
cmp
jge
rorl
and
inc
ret
cmpsl
or
mov
cli
shlb
push
test
xor
mov
ret
push
sbb
cmp
movsl
inc
ret
shl
movl
sub
push
jl,pt
shll
xor
cmp
or
in
inc
xchg
ja
pop
fdivp
imul
pop
sahf
jbe
lret
jl
mov
mov
add
pop
je
or
dec
dec
adc
cbtw
xlat
lock
stc
fs
jmp
iret
cmp
shrb
shr
pop
dec
test
sbb
call
jmp
mov
paddw
jle
lea
sbb
mov
pop
mov
dec
lret
sub
ja
jne
add
push
cmpsl
inc
sarb
sub
cmc
popa
movsb
adc
mov
xor
fimuls
imulb
movsb
jne
hlt
aas
push
cmc
mov
repz
mov
cmp
fdivrp
and
dec
mov
xor
int3
or
leave
mov
in
pop
loope
jecxz
fdivl
mov
out
icebp
sbb
lods
imul
adc
xchg
icebp
jmp
adc
lcall
mov
roll
movsl
cmpsb
mov
jnp
pop
jb
xlat
jae
pop
mov
pop
sub
nop
popf
dec
mov
and
jg
mov
jg
fstpt
hlt
fisubs
jo
ds
int3
aaa
adc
xor
pop
loopne
scas
sub
sub
ret
push
fsubs
orb
sub
gs
sbb
cmp
pop
push
nop
adc
popf
ss
push
insl
inc
sub
jbe
imul
lea
loope
add
jne
test
jg
js
in
xor
add
sbb
stc
fsubl
sub
out
mov
lret
and
cmp
mov
loop
mov
lahf
mov
adc
arpl
das
dec
arpl
sub
inc
adc
pop
or
ret
xchg
pop
ret
scas
scas
sbb
mov
fdivp
mov
fsubl
fists
pop
pop
mov
jmp
pop
cs
sahf
test
mov
out
movb
xlat
jo
pop
jo
inc
addb
mov
enter
push
or
xchg
jle
add
sub
xchg
sbb
mov
and
call
xchg
enter
and
jbe
xchg
pop
neg
aas
dec
into
icebp
xchg
lea
adc
jp
icebp
leave
push
aam
inc
loope
xchg
sti
test
gs
sahf
cmp
mov
mov
les
nopl
xor
cmp
push
pusha
inc
mov
scas
mov
mov
mov
xor
inc
push
cmp
mov
mov
in
inc
cwtl
loopne
or
in
pop
ficompl
sbb
and
add
push
adc
shrl
jbe
push
dec
jns
movsb
aam
hlt
sbb
fcomp
rcrl
fnstenv
rcl
cs
mov
call
mov
xchg
aad
aam
shll
into
mov
cld
lcall
ljmp
rcll
pop
mov
mov
and
test
call
test
jle
or
jnp
add
xchg
cmp
xchg
adcl
push
sbb
mov
sti
clc
arpl
mov
js
mov
out
rorb
dec
adc
jle
mov
cmp
and
sbb
sbb
fcmovu
push
sarb
ret
push
sbb
dec
cmpl
inc
xor
imul
add
mov
or
pop
aaa
call
loop
or
xchg
insl
sbbb
push
mov
pop
lea
lret
mov
xlat
shll
push
mov
dec
mov
rep
or
jg
xor
adc
adc
cmp
test
in
cmc
cwtl
mov
call
outsb
push
jp
mov
push
fwait
test
push
loope
push
or
pop
or
xchg
jbe
aaa
popf
aam
xor
mov
push
aam
mov
mov
adc
mov
aam
scas
jmp
jle
cmp
out
xchg
sub
adc
mov
dec
es
aam
es
loop
jmp
dec
fsubl
mov
lock
fistpl
mov
fnstsw
ss
mov
shll
aam
jne
or
sub
stos
xor
push
nop
jnp
xchg
dec
scas
scas
fbld
rorl
ja
push
push
and
sbb
sbb
stos
sbb
lds
dec
aam
inc
outsl
int
mov
addb
ds
ret
sbb
out
cmpsl
push
sbbb
arpl
and
stos
mov
insb
dec
hlt
orl
lahf
in
or
push
push
loopne
or
divb
test
das
ficoms
faddl
rol
enter
mov
mov
pop
and
mov
and
inc
mov
jge
jne
mov
dec
pop
sbb
jne
adc
shl
popa
jmp
mov
xor
clc
xchg
loopne
mov
cmpsb
inc
dec
iret
push
xchg
cwtl
out
push
and
fstpl
dec
mov
cmp
movsb
sarb
xor
in
pop
js
outsb
lret
mov
inc
in
fdivp
add
push
popa
mov
pop
data16
sbb
fists
adc
out
jb
dec
cmp
out
cli
clc
mov
mov
pop
shrl
sbb
xchg
adc
aas
stos
call
mov
es
adc
hlt
xor
add
outsl
adc
movsl
add
jbe
mov
mov
add
or
sbb
popa
fiaddl
mov
push
notl
imul
fdivl
push
jo
sbb
add
pop
je
mov
pushf
inc
adc
scas
adc
mov
jg
lcall
dec
jb
cmpsb
cmp
sub
dec
mov
ja
push
ljmp
ja
mov
stos
xchg
add
jge
cmp
push
pop
sub
pop
lret
fildl
data16
adc
fisubrs
sub
lock
push
in
roll
je
fstpl
push
adc
cli
or
push
pop
pop
inc
imul
aam
push
jecxz
clc
xor
and
ss
scas
mov
cmpsl
loop
xor
imull
dec
shrl
sarl
adc
test
jo
sar
push
push
fistl
mov
xorl
fdivl
cs
mov
mov
push
mov
mov
jmp
mov
insb
mov
adc
mov
enter
add
mov
inc
or
mov
cmpsl
sub
js
pop
cmp
das
das
enter
bound
jo
sbb
inc
mov
into
cld
fwait
add
into
int
pop
inc
mov
in
mov
jbe
ret
sub
xchg
ss
stos
int3
cmp
mov
addr16
cli
xor
daa
mov
push
addr16
es
mov
fbstp
add
push
cltd
ja
out
mov
pop
mov
sub
jle
mov
add
pop
push
outsb
imul
pop
pop
outsb
int
mov
jge
cs
add
and
push
mov
mov
adc
sti
mov
push
movsb
fwait
stos
cmpsl
popl
sahf
into
in
fcmovnbe
hlt
jmp
inc
pop
push
jne
inc
mov
ret
push
pop
push
add
ds
loope
pop
pop
dec
dec
pop
in
jmp
sti
adc
mov
lcall
inc
mov
aas
loope
pop
in
in
add
inc
loop
xchg
cmpb
mov
adc
push
ds
xor
leave
mov
jle
jne
mov
ds
fcmovu
mov
push
jb
cmp
mov
add
aam
xchg
in
and
add
pop
jae
arpl
aad
outsb
xchg
shlb
pop
push
inc
sbb
pop
dec
stos
jo
jmp
nop
js
jle
mov
rcrl
mov
cmp
jle
pop
push
dec
push
jg
xchg
lods
pusha
nopl
in
jmp
add
cwtl
jnp
add
add
maxps
ljmp
lret
jge
sbb
imul
mov
and
in
mov
adc
insl
cmpsl
pop
int
loopne
and
test
mov
add
push
outsb
mov
scas
mov
mov
les
iret
cli
stos
jae
jo
imul
fldcw
in
iret
jo
ljmp
mov
in
es
out
pusha
fistpl
mov
xchg
in
push
aad
inc
push
xlat
ss
aam
cld
stos
arpl
fisubrl
movsl
inc
popa
sbb
sbb
jl
fnstenv
push
jne
push
fucom
mov
xor
xor
movsl
lcall
pop
aas
xchg
mov
test
mov
clc
punpckhwd
in
fwait
fwait
jo
lock
jge
pop
idiv
imul
stc
cmp
sbb
test
jle
mov
lcall
dec
sbb
dec
xchg
xor
clc
in
jl
js
sbb
fiaddl
fcompl
jo
cltd
xor
xor
fists
and
outsb
je
icebp
jg
sub
faddp
and
push
andl
not
mov
popf
push
sbb
mov
std
jmp
xchg
inc
je
fistl
je
aam
pusha
or
in
mov
test
xchg
fdivl
out
insl
insb
shlb
mov
xchg
mov
fistpl
mov
add
test
aas
fldt
dec
and
sahf
int
adc
sahf
fsubrl
push
shll
add
jg
dec
int
test
clc
push
faddl
rcrl
push
das
pop
ret
or
in
mov
faddl
pop
inc
mov
rcr
dec
jecxz
hlt
add
fstps
in
mov
in
mov
or
inc
enter
les
xor
nop
addr16
fbstp
shl
outsb
fs
jnp
arpl
in
repnz
or
mov
enter
jp
dec
das
in
es
inc
sbb
shl
into
cmp
pushf
push
stos
cmp
add
mov
call
push
cmp
mov
je
idivl
adc
add
jns
rcll
leave
mov
hlt
push
and
adcb
rolb
aad
andl
mov
pop
push
pop
popf
xor
sub
jae
xor
ja
pop
cmp
push
push
xor
add
pop
push
xchg
mov
ds
pop
inc
xlat
push
insb
jmp
cmpsl
out
enter
test
inc
scas
stc
ja
lds
fwait
loope
cmc
repz
add
inc
cmpsb
or
lock
mov
popa
movhps
xchg
xor
inc
fistl
and
ret
insb
jb
je
add
inc
inc
mov
jbe
lahf
xor
pop
xor
fcmovbe
adc
fstpl
rorl
out
inc
and
into
xchg
push
and
out
fstl
div
pop
mov
icebp
loopne
and
leave
fisubl
lea
push
sbb
cmp
mov
jae
insl
pop
jle
jno
sbb
pop
ds
es
jbe
mov
cmp
xchg
mov
add
pop
cmp
in
loopne
shl
negb
repz
pop
shlb
inc
pop
pop
mov
mov
btc
pop
inc
pop
lods
pop
scas
mov
dec
rcrl
mov
out
scas
ret
ret
mov
or
push
mov
mov
aaa
mov
cmp
cs
inc
dec
sbb
cmp
lea
fwait
push
and
or
ljmp
xor
into
mov
xorb
cmpsl
xchg
xchg
je
and
movsb
pop
add
loop
int
fdivp
add
cli
loop
lds
adc
rcr
lods
out
jnp
sbbb
repnz
cmp
inc
rcrl
scas
pop
ret
pop
std
std
inc
stc
or
push
test
addr16
add
outsl
loopne
pop
jp
xchg
mov
and
mov
sub
cltd
and
sub
dec
mov
insb
fcomps
pop
xor
call
pop
push
test
xor
jo
jo
mov
xchg
cmpsl
ror
mov
in
out
xlat
cmpsl
cmpsb
sub
mov
add
mov
les
addr16
gs
sahf
push
push
dec
lock
xor
cmp
rcrl
cli
jecxz
sar
sahf
jecxz
add
jecxz
js
push
xor
loop
mov
xchg
xchg
loope
insb
lahf
mov
out
jns
push
mov
ret
push
ret
xchg
imul
or
int
loope
dec
sbb
xchg
daa
dec
fcoml
test
mov
push
addl
add
pop
mov
cmp
jbe
insb
xchg
je
test
les
mov
dec
or
mov
sbb
aad
in
aam
inc
dec
cwtl
cmp
sub
pop
jp
fwait
cmp
fistpll
cmp
mov
push
push
divl
xchg
lret
and
jle
push
addr16
jbe
ficomps
add
jno
xchg
mov
stc
fcompl
cmpsl
arpl
xlat
jns
cmpsb
pop
mov
xchg
aad
or
cmpsl
pop
lret
inc
push
dec
pop
mov
mov
push
pop
xlat
ret
fdivrl
pusha
lea
fstpt
jg
dec
sbb
and
jb
minps
jno
cs
lds
mov
xchg
call
call
stos
push
cmp
jg
in
jb
stos
cmp
and
hlt
ret
je
jp
pushf
or
xchg
jbe
adc
jns
lods
test
pop
add
jmp
clc
push
pop
sbb
fwait
push
adc
pop
adc
push
test
xor
aaa
sbb
mov
sarl
cmp
fs
jno
adc
mov
loop
loopne
mov
pop
lds
xor
or
outsl
xlat
mov
mov
aam
adc
cwtl
arpl
scas
outsb
arpl
lods
jo
jno
push
loopne
dec
ret
xor
pop
jg
mov
leave
mov
dec
mov
push
mov
mov
jae
into
adc
dec
xlat
incb
and
sbb
inc
enter
cli
add
fstl
js
lods
xor
mov
mov
mov
ja
mov
andb
sub
addl
and
je
mov
adc
pop
ret
add
daa
fcomi
mov
mov
imul
mov
xchg
inc
push
lods
jge
xor
xchg
adc
insb
call
mov
mov
test
push
mov
fisttpll
fdivrl
cmpsb
pop
pop
out
addr16
jmp
sbb
fists
or
data16
lods
mov
nop
cld
inc
ret
sbb
lret
lcall
add
ret
cmp
jle
mov
pop
clc
lods
adc
inc
daa
sbb
out
clc
sbb
jns
lods
fwait
xor
movl
rcrl
inc
sbb
dec
lods
xlat
add
arpl
insb
ss
pop
cmp
xor
inc
push
cmpsb
into
pusha
add
lds
or
cmp
jp
xor
push
rolb
push
mov
fisttpll
xor
insb
les
cltd
movq
mov
inc
mov
int3
xchg
test
inc
mov
cmp
fsubr
div
push
pop
push
dec
sbbl
cmpsl
lea
jecxz
shll
fisttpl
inc
pop
insb
out
in
or
pop
push
push
inc
data16
jge
in
pop
pop
cmp
mov
xchg
xor
mov
dec
sub
add
daa
push
sti
rcrl
sbb
or
sub
pushf
ljmp
mov
sub
pop
popa
lods
divl
int
jl
mov
mov
out
sbb
cli
push
addr16
icebp
gs
bound
cmp
cmp
mov
in
ljmp
fcmovu
push
es
cmp
idivl
syscall
push
andl
sbb
adc
jno
or
jle
fmuls
dec
mov
jle
push
mov
inc
out
daa
sbb
fwait
cld
pop
sbb
test
mov
push
xchg
push
bound
repz
jmp
pop
add
scas
mov
ficoml
cmpxchg
mov
fimull
test
mov
inc
jl
and
xchg
and
movsb
pop
cli
loopne
jecxz
imul
pushf
add
cli
and
mov
or
sub
xchg
andb
roll
es
adc
aad
jno
cmp
jns
jmp
cmp
fcoms
out
and
test
cmp
icebp
xchg
aad
jbe
adc
mov
lods
push
pop
xlat
sub
xchg
lods
adc
mov
pop
mov
dec
sbb
mov
icebp
and
cmp
cli
adc
xlat
mov
mov
mov
push
les
leavew
mov
icebp
rcrb
push
mov
call
add
aad
jb
insl
jne
dec
mov
push
hlt
fucom
loopne
fistpll
jl
sahf
sbb
or
fbstp
push
movsl
dec
std
lcall
sbb
fnsave
aad
and
out
adc
outsl
mov
ret
or
andb
dec
cmp
clc
fstpt
mov
xchg
fstl
adcl
in
mov
mov
push
xchg
pop
mov
xlat
repz
adc
mov
loope
jle
sub
and
add
mov
pusha
dec
jmp
andb
and
rol
outsb
ljmp
mov
cs
add
test
jo
pop
lea
push
cmpsl
pop
xorl
sbb
orb
jecxz
icebp
inc
jno
sbb
cmpsb
lds
sarb
inc
push
xor
lret
xchg
pop
out
or
adc
mov
js
outsl
je
shlb
imul
dec
adc
loope
call
ds
jecxz
xor
xorb
fsubp
mov
aad
mov
test
cs
icebp
test
sub
pusha
adc
das
sub
scas
pop
cli
jae
jl
mov
cmp
mov
in
mov
scas
dec
mov
test
push
les
mov
pusha
mov
mov
in
adc
cmpsl
imul
test
dec
insl
fsubs
notb
movl
pop
mov
rolb
sub
nop
lret
adcb
push
cli
aad
mov
adc
mov
daa
cld
cmp
xor
push
out
popa
dec
dec
xchg
jae
mov
or
pop
insl
xor
rcrb
popa
jl
cs
xchg
popa
ljmp
subb
mov
push
push
in
sub
dec
fistpl
les
iret
mov
mov
pop
repnz
mov
mov
adc
mulb
sbb
mov
icebp
dec
cmpsl
gs
test
xchg
sub
popf
xchg
sbb
mov
dec
lea
pusha
add
xor
fsubp
add
testb
xor
pop
sub
loope
mov
outsb
outsl
xlat
cmc
icebp
imulb
in
mov
inc
insb
and
call
cs
enter
shrb
cmpb
loopne
movsb
push
pop
ret
inc
jge
and
and
sbb
jge
jbe
mov
mov
test
cltd
add
pop
jmp
je
adc
sbb
ss
in
shlb
cmp
in
inc
sub
fadd
jg
andb
pop
int
daa
mov
stos
hlt
push
mov
jb
jbe
out
loopne
jne
lahf
xor
orb
add
jl
mov
sbb
jmp
jbe
pop
fnstcw
ljmp
push
push
fdivl
jnp
movsb
scas
outsb
mov
jne
test
dec
inc
mov
js
jbe
push
aad
int3
int
jne
ljmp
jmp
mov
jnp
sbb
repz
mov
jg
xor
push
out
push
mov
repnz
dec
pinsrw
cmp
stos
dec
sbb
jo
rcl
popl
enter
adc
aad
clc
roll
mov
adc
arpl
lock
mov
dec
cmpsl
in
xor
adc
push
data16
ja
insl
xchg
mov
sub
cmp
insb
out
bndldx
mov
rcrl
fidivl
adc
xor
xchg
cld
loope
shl
xor
sbb
rcl
xor
dec
out
push
fnstenv
idiv
jge
shrl
mov
mov
out
insb
jnp
mov
lret
xchg
loopne
pop
cmp
inc
sub
pop
shr
out
fwait
jnp
or
decl
hlt
aad
mov
xchg
cwtl
jp
cmp
loope
xchg
rcrb
js
cwtl
sbb
ret
cs
icebp
xchg
fiadds
pushf
xor
mov
mov
lcall
dec
into
cmp
mov
fmull
fcoml
mov
aam
sub
xchg
xchg
push
ja
pop
mov
mov
sbb
xchg
dec
stos
shrb
jp
add
ret
or
stos
popf
push
sbb
paddusw
out
mov
or
lock
cmp
stos
push
or
pop
rcl
punpckhbw
mov
add
into
rorb
lods
popa
stos
roll
inc
pop
sbb
sbb
cmp
inc
lods
out
js
das
ljmp
fisubrl
popf
dec
cltd
lret
mov
clc
inc
je
inc
and
fwait
mov
adcl
rolb
outsl
js
clc
push
xor
test
cmpsb
popf
lcall
lock
mov
xchg
mov
xbegin
ret
dec
inc
test
outsl
jp
push
divb
aam
dec
mov
maskmovq
idivl
int3
mov
xor
shrl
std
shll
cltd
mov
daa
fxrstor
hlt
imul
aaa
jnp
or
xor
ds
mov
rcrl
cmc
xchg
hlt
faddl
jo
cmc
inc
inc
xlat
mov
jle
fdivrs
fistps
fs
cwtl
pop
cmp
inc
in
inc
adc
imul
aaa
mov
mov
cmp
sub
jge
hlt
mov
outsb
and
push
xchg
icebp
icebp
loope
sub
adc
sub
push
test
lods
xchg
cmp
arpl
lcall
in
jl
sbb
mov
insb
dec
push
out
dec
or
je
movaps
std
test
sbb
aas
adc
xchg
mov
add
outsl
sub
mov
outsb
inc
mov
pop
je
dec
inc
and
sbb
test
out
cmp
lret
or
hlt
nop
mov
hlt
or
mov
imul
jecxz
or
mov
lock
cmpsb
jge
push
fstp
mov
stos
lret
adc
sub
ds
gs
int3
dec
inc
lds
addb
sarl
adc
push
test
adc
jle,pt
and
xlat
rolb
sti
mov
lcall
stos
sbb
movsl
pop
adc
jg
enter
insl
movsl
call
xor
shll
xchg
inc
fxam
cli
hlt
inc
sbb
lods
lock
icebp
scas
cmpsb
mov
mov
jmp
sbb
pop
pop
test
cmpsl
enter
mov
mov
imul
lea
lcall
jg
test
popa
test
shlb
in
sbb
xor
xor
jg
mov
fistpl
aas
popl
je
dec
inc
inc
hlt
push
aas
add
movsb
add
movb
sub
push
inc
xlat
inc
xlat
push
pop
dec
cmpsl
loope
mov
rcr
mov
daa
rcrl
rcr
aam
loop
cmc
xchg
lret
push
sub
lods
loope
std
inc
add
imulb
mov
mov
fsubrl
adc
outsb
std
cmp
inc
sub
sbb
dec
adc
jo
dec
stos
jnp
xchg
sbbl
mov
jne
je
push
fdivl
jl
inc
test
call
xchg
sub
call
jbe
pop
ljmp
hlt
das
xchg
mov
xor
jns
or
outsl
es
in
outsl
jecxz
push
int3
das
xlat
push
sub
xor
push
adc
xchg
ret
push
jle
movb
fwait
xor
lock
and
sbb
aaa
mov
jl
daa
out
mov
dec
dec
imul
ficompl
mov
inc
aaa
andb
testl
div
xorb
inc
dec
inc
cmpsl
push
js
in
mov
loope
dec
jmp
inc
fisttpll
jo
adc
icebp
insl
shl
xchg
add
jl
iret
adc
cltd
neg
adc
outsb
ljmp
out
insl
jecxz
push
add
push
push
jb
jge
mov
data16
pop
xor
push
inc
cmp
mov
mov
jle
mov
push
scas
mov
or
pop
pop
ss
sahf
arpl
outsl
insl
jmp
sahf
adc
dec
add
insl
mov
xor
dec
jo
pop
sub
test
adc
movsb
je
ja
ret
and
inc
ret
lods
stos
mov
arpl
stos
fnstsw
jmp
jns
cmp
mov
dec
xor
cmp
cli
cs
inc
adc
inc
loopne
sub
lea
inc
or
inc
cmp
clc
scas
rolb
pop
xor
jecxz
pop
push
mov
mov
addr16
xchg
out
cmp
movsb
push
fisttpll
clc
push
cmp
mov
xor
fcom
jle
das
stos
pop
xor
inc
xor
sbb
test
and
or
sbb
mov
sbb
push
sbb
mov
stc
jecxz
mov
clc
push
fadds
jmp
leave
roll
shl
outsl
jbe
adc
imul
pop
test
xlat
pop
pop
pop
ret
pusha
sti
call
pop
pop
mov
and
mov
pop
mov
push
addl
jo
lock
pop
clc
icebp
pop
mov
xor
push
pop
dec
dec
jecxz
push
shl
xchg
xlat
hlt
idivl
dec
jmp
ja
bound
mov
dec
jp,pn
test
insb
mov
imul
in
mov
nop
add
add
mov
mov
jge
xchg
add
mov
cld
jge
push
lahf
pop
push
mov
sbb
jmp
push
imul
ds
lcall
pop
push
push
ret
add
push
and
sarb
inc
cmp
push
in
or
mov
mov
popf
popa
adc
cmovbe
jmp
add
jmp
dec
sub
enter
or
sub
jmp
mov
fisttpll
and
loop
jge
je
cmp
sub
adc
mov
scas
xorl
cmc
cs
rcll
and
aam
inc
adc
lret
gs
popf
cmp
fucompp
mov
or
sbb
call
sarl
rclb
test
in
mov
popa
jp
call
push
bound
add
fdivrl
cmp
pop
and
pop
imul
push
dec
sub
adc
mov
sahf
in
xor
andl
jmp
xorb
xor
in
scas
repnz
jb
sub
jmp
and
ds
pop
push
insl
mov
mov
icebp
fs
mov
out
fsubrl
push
arpl
jo
call
pop
push
cmp
jns
mov
mov
push
test
inc
xlat
cmp
imul
out
es
int3
and
push
lahf
sub
or
add
stos
mov
dec
mov
dec
rolb
jae
sarl
dec
lea
es
scas
mov
test
fnstsw
shll
loopne
in
lahf
subb
lock
cmp
pushf
sti
sbb
cld
pop
shlb
mov
ret
lods
jmp
fwait
adc
lretw
mov
enter
arpl
add
repz
data16
std
xchg
in
outsb
pop
fnsave
push
sbb
ret
out
in
ss
mov
ret
clc
dec
mov
xor
lea
dec
jmp
mov
cmp
insb
icebp
add
cs
cmp
cli
add
jns
in
push
dec
pop
popa
call
sbb
jne
dec
popf
rol
jecxz
inc
inc
das
mov
inc
xor
shlb
inc
mov
xchg
inc
xchg
push
xor
idivb
and
xor
jle
fistpl
push
mov
and
inc
pop
rolb
fstp
and
jg
loop
int3
add
stc
sbb
add
adcb
xlat
mov
and
cld
cmp
mov
stos
inc
mov
inc
xchg
pushf
aam
push
outsb
pop
xor
jp
hlt
mov
or
gs
push
mov
pop
and
inc
cmc
pop
test
sbb
xchg
and
arpl
push
iret
aad
cmpsb
std
mov
push
pop
jns
shufps
pop
push
or
dec
jb
gs
fsubrp
push
add
or
push
imul
xchg
enter
addr16
ds
mov
sub
pop
sbb
bound
sbb
rolb
movsl
mov
je
xchg
cmp
enter
subl
jbe
cmp
mov
ja
mov
pusha
in
ret
inc
pop
pop
jg
fmul
mov
push
push
sub
aam
mov
jne
arpl
lea
inc
shlb
sbb
inc
adc
into
add
dec
hlt
sub
inc
dec
jecxz
xchg
daa
int
lods
lods
inc
cli
sub
pop
jecxz
inc
mov
dec
fildll
jge
stos
nop
das
add
or
adc
aam
inc
lahf
or
inc
stos
sbb
loopne
mov
rcll
cmp
scas
mov
jo
pusha
jp
add
test
xchg
sbb
ljmp
test
orb
jecxz
xchg
mov
mov
sub
pop
insb
xchg
mov
mov
push
push
sbb
ljmp
out
arpl
xor
movsb
mov
popf
xchg
mov
stc
sar
add
mov
mov
adc
ljmp
stos
nop
sahf
xlat
in
cwtl
mov
mov
shl
aas
inc
jne
cli
outsb
xchg
ds
pop
roll
pop
jae
cmpsb
push
or
sbb
cmp
aaa
fwait
pop
stc
or
cmp
lahf
mov
push
or
loopne
je
sub
fimuls
xor
outsl
jmp
je
sahf
add
fcomps
mov
nop
and
inc
inc
lea
insb
cs
fidivrs
pop
cli
mov
add
xchg
or
hlt
psllq
fdivrs
imul
movl
push
lea
test
ljmp
mov
insb
das
mov
cmp
xor
jecxz
stos
imul
inc
jecxz
dec
scas
cltd
ljmp
fisttpl
pop
mov
and
sub
nop
ficoml
push
jecxz
movsb
sub
sbb
mov
test
mov
jmp
sbb
sbb
cwtl
and
call
mov
adc
mov
push
rcll
dec
xor
and
xor
out
aas
shll
insb
dec
pop
pop
popa
and
shl
in
jl
adc
js
mov
add
inc
mov
das
adc
add
sbbl
fstpt
mov
mov
xor
xchg
sarb
sbb
sti
int
mov
popa
test
pop
jno
cmp
enter
lods
pop
sbb
fdivrl
jg
roll
jle
lret
mov
in
jl
aam
scas
das
add
sub
inc
xchg
mov
cli
scas
ss
pop
dec
pop
lcall
hlt
mov
lahf
aas
int
push
loopne
aaa
orl
sti
ss
int3
sub
pop
ljmp
adc
ficoms
insl
inc
and
push
dec
aaa
rorl
jnp
sti
add
fildll
nop
aad
xor
es
add
mov
ja
mov
les
je
fmuls
out
sbb
mov
mov
ffree
test
stc
cli
mov
mov
lock
jae
pop
jbe
mov
jno
sub
mov
sbb
adc
scas
and
insb
adc
in
mov
pop
xor
cmp
fnsave
rcl
ret
inc
cmp
fistpll
xor
cmc
rolb
dec
out
pop
and
fwait
cmp
push
ficompl
push
mov
stos
call
rcr
lds
mov
rolb
mov
loop
int
fimull
in
sbb
popf
inc
cmp
push
hlt
or
sbb
jl
xor
mov
shlb
cli
icebp
fs
pop
dec
xchg
ja
sti
and
fisubrl
jp
js
mov
mov
daa
pushf
fs
das
cmp
push
jns
sbb
cmp
sbb
add
clc
rclb
bound
jbe
ds
mov
adcb
mov
ds
xlat
popf
dec
aas
mov
sbb
dec
push
cld
mov
hlt
aam
out
into
mov
sahf
mov
cmp
xchg
mov
stos
cmp
sti
enter
pop
jecxz
stos
not
pop
ficoms
pop
pop
sarb
jge
out
inc
je
shrl
imul
shll
data16
push
sbb
pop
push
lea
pop
dec
jae
or
cmp
xchg
xor
iret
stc
mov
loope
cmc
jno
std
pop
mov
adc
or
mov
xchg
mov
and
and
pop
adc
loop
or
lods
das
mov
mov
xor
std
dec
pop
sbb
lods
jecxz
jo
cmpxchg
or
mov
dec
add
scas
loope
sarl
and
insl
cmp
jle
dec
loope
cmc
mov
cmp
push
inc
sbb
pusha
shlb
stc
jae
push
ds
pop
push
divl
cmp
mov
scas
jge
cmpsb
popa
jne
roll
adc
in
leave
ret
scas
add
mov
pop
clc
xchg
push
jb
add
test
lds
enter
out
xor
leave
leave
mov
xchg
mov
arpl
repnz
cmp
ret
xor
repnz
lock
cwtl
sub
mov
jne
cwtl
and
out
jmp
pushf
pop
xchg
jg
or
jp
xchg
rolb
faddl
std
add
pop
ljmp
fdivs
jne
jg
mov
lods
cs
fdecstp
mov
sub
sub
and
sbb
lods
sbbl
loop
push
or
inc
mov
icebp
fisttpll
cmp
cld
ljmp
push
mov
in
inc
scas
int3
stos
in
sub
mov
pop
fildl
jbe
jb
movsl
lahf
arpl
mov
jmp
jl
dec
dec
dec
std
dec
push
dec
xchg
lret
je
outsb
pop
cmp
pop
adc
pop
sub
aad
fnstenv
das
ficomps
cs
push
lods
imul
aaa
push
push
mov
sbb
xor
push
push
stc
paddsb
outsb
mov
insl
in
mov
fdivrl
fadds
lock
ja
scas
imul
fistl
xchg
mov
shll
and
mov
or
or
mov
shlb
xor
or
int3
outsl
inc
mov
mov
and
push
cli
mov
testb
insb
bnd
fcmovu
sbb
xor
enter
xor
jmp
int3
popa
push
push
cmp
and
adc
sbb
roll
negb
xor
lret
iret
iret
cli
mov
mov
aaa
ret
dec
jo
sub
pop
ret
mov
pushf
fldenv
mov
nop
ffreep
lds
mov
dec
loope
push
adc
js
sbb
test
or
cmp
cmp
sub
in
pop
loop
pop
jo
adc
cmc
enter
in
xchg
insl
dec
sbb
pop
sub
clc
aas
movsl
rolb
sti
stos
les
xchg
fwait
adc
jo
cltd
imul
and
je
xchg
xchg
mov
cmp
or
sahf
jo
jne
aas
sbb
xor
es
rcll
mov
dec
in
xorb
mov
cmpsl
pop
jnp
or
jb
mov
jge
push
stos
or
pop
scas
icebp
push
aaa
inc
hlt
mov
and
sarb
sahf
sbb
mov
inc
fimull
add
push
mov
outsl
jle
fwait
jnp
xor
sbb
xchg
je
cmp
mov
out
mov
and
push
inc
dec
add
imul
mov
cwtl
sbb
sub
scas
adc
jp
lahf
dec
xchg
out
xchg
inc
lahf
lea
into
in
sbb
mov
sahf
push
push
sub
pop
cmpsl
outsb
pop
xor
cld
fdivs
push
leave
jo
mov
jl
movsb
cltd
xorl
cmpl
bound
add
aaa
push
add
pop
movb
ss
out
cmp
loopew
sub
xor
lret
cmp
shll
cmpsb
fdivs
push
sbb
mov
sub
inc
ret
not
cmp
xor
rcl
push
fistl
lahf
sbb
aad
mov
push
push
pop
mov
xor
and
loop
pop
xchg
cltd
add
ss
push
pop
mov
leave
mov
pop
fstl
rolb
andl
xor
jo
add
loopne
adc
mov
adc
enter
repz
dec
adcl
mov
fdivrl
movsb
mov
cmp
nop
sub
push
sbb
lea
ljmp
fsubrl
stc
shlb
lods
lcall
mov
add
dec
fsubrl
fstpl
dec
cwtl
mov
mov
ds
add
in
sarb
loop
xchg
jl
out
mov
lea
divl
adc
fcompl
in
sub
sub
fsubl
nop
int
mov
int3
pop
ja
cmpsl
jg
add
xor
mov
push
or
mov
test
das
popa
dec
scas
push
test
mov
clc
mov
addr16
cmp
and
or
jns
shlb
fdivl
popa
push
stc
jge
lea
xchg
pop
loope
sbb
and
leave
fistpll
add
loope
adc
orl
hlt
xor
jg
jae
shlb
loopne
pusha
xor
sub
mov
aas
out
or
es
sbb
mov
ret
add
xor
les
adc
dec
fisttps
push
cmp
push
inc
sbb
std
iret
jbe
xor
stos
mov
xor
push
ds
or
mov
fstpl
aas
clc
out
adcb
ret
jbe
mov
mov
jmp
loopne
adc
or
loope
jmp
out
mov
jo
clc
mov
lds
popa
jbe
pop
pop
enter
inc
dec
mov
add
sahf
mov
push
testb
inc
outsb
fcomps
cmp
popf
pop
sub
sub
roll
gs
out
mov
loope
imul
clc
mov
test
or
mov
cs
mov
bound
repz
inc
or
sub
int
add
ljmp
mov
jg
out
pop
ret
mov
imull
push
es
jno
jbe
lock
mov
pop
jmp
lods
mov
pop
inc
hlt
cmp
xchg
push
aam
mov
pmuludq
jecxz
pop
icebp
push
add
mov
fsubl
orl
pushf
push
sub
push
pop
inc
aas
mov
test
push
fxch
inc
pop
or
mov
pop
mov
push
lret
push
xchg
imul
cwtl
or
cli
push
push
fcmovne
inc
hlt
cmpsb
lods
xchg
jno
into
push
mov
insb
daa
lret
ss
bsf
testl
xchg
shrl
in
mov
pop
and
dec
sbb
je
and
jp
jb
out
jmp
movsb
inc
stos
stos
pop
mov
pop
ljmp
lods
sbb
push
jl
call
mov
fwait
cmpsl
mov
xor
aaa
pop
hlt
les
pop
add
insl
jmp
lods
xchg
push
and
inc
inc
loopne
bound
inc
sbb
pop
push
lcall
add
repnz
adc
mov
aas
lcall
idivb
mov
mov
call
and
stos
xchg
out
inc
out
mov
cltd
or
sbb
push
popa
push
aam
daa
cmp
lret
add
or
std
sbb
push
cwtl
and
mov
call
xchg
jns
cmp
ljmp
cwtl
das
jp
add
movsb
fsubrl
pushf
push
dec
cli
test
ret
xor
lahf
xorb
xchg
js
outsl
sbb
enter
rclb
lods
and
or
inc
fcomi
xchg
outsb
cmpsb
scas
mov
mov
scas
mov
mov
jnp
push
rcll
loope
daa
xchg
inc
inc
xchg
mov
jge
arpl
adc
loope
push
lock
mov
popf
mov
fidivs
sbb
or
jo
movl
mov
xor
mov
popl
ss
pop
push
mov
adc
std
sbb
cs
mov
lret
icebp
and
mov
ss
sbb
cld
cld
pop
mov
sbb
fidivrs
sarb
mov
mov
push
fisubrl
call
ffree
push
es
bound
xor
xchg
sbb
sahf
das
push
xchg
fstl
jne
test
pop
pop
pop
rorb
aad
test
imul
jl
testl
inc
pop
outsb
je
push
and
out
jno
push
push
inc
lea
insb
cmp
pusha
mov
push
pop
ljmp
dec
pop
fcoms
nop
xor
shrl
xor
push
add
pop
sbb
pop
adc
xchg
stc
add
fidivrl
fs
xor
cwtl
icebp
mov
inc
sarl
sbb
push
add
pop
or
mov
es
add
mov
gs
pop
or
lock
mov
cwtl
xor
adc
insb
mov
loopne
or
cli
pop
mov
xchg
inc
je
std
and
xchg
clc
inc
jmp
ret
mov
cmpl
push
iret
add
mov
arpl
js
loopne
cmp
inc
mov
sbb
cltd
mov
pop
sbb
jl
popa
ss
jne
push
mov
xor
cmp
test
mov
sbb
add
lock
enter
lret
outsb
mov
cmp
pop
insb
gs
shrl
inc
pop
push
ror
xor
xorl
insl
es
mov
xchg
ljmp
pushf
mov
leave
pop
jo
call
inc
and
pop
repz
lods
call
mov
ds
mov
cmp
filds
sbb
lock
hlt
testb
jmp
sbb
or
or
xchg
mov
addb
jae
cld
jns
xor
mov
push
jno
push
int
aad
rcr
and
inc
sbb
clc
lcall
jecxz
mov
int3
mov
fisubrs
mov
ficompl
insl
out
jo
mov
repnz
pop
xlat
hlt
call
imul
fldt
imul
push
inc
sarl
jecxz
jge
int
icebp
aad
cld
dec
xchg
orl
sbb
out
fwait
test
inc
sbb
and
icebp
div
inc
sbb
jns
orl
jo
sub
pop
ja
jg
jbe
jmp
sahf
adcl
mov
xlat
js
je
xor
mov
jl
lret
mov
adc
push
mov
or
adc
pop
gs
inc
je
lahf
fwait
adc
mov
pop
push
jnp
popl
sub
lock
aaa
lock
ds
mov
cmc
shl
push
ds
movsb
mov
lcall
ret
mov
mov
mov
cmp
std
dec
nop
cli
icebp
sub
incb
adc
cmp
int
jae
dec
les
pop
jmp
fnstenv
fildl
test
fdivl
xchg
sub
scas
outsl
pop
sub
jp
loop
int3
or
aas
jl
or
pop
lds
pop
mov
in
xchg
mov
and
andb
push
cwtl
loopne
and
das
aas
out
mov
mov
mov
and
ret
add
testb
stc
fistps
cmpsb
pusha
mov
push
push
pop
mov
aad
loopne
inc
jl
and
xor
enter
lcall
lock
add
test
loopne
out
lret
fs
out
mov
inc
jno
in
lds
inc
xor
xchg
cmp
call
mov
lods
jbe
ret
add
and
inc
mov
pop
ja
xchg
aaa
cmp
mov
add
rclb
dec
and
ss
fwait
loope
cld
in
jae
pop
push
hlt
repnz
adc
add
xor
jae
daa
js
xchg
dec
nop
dec
ret
lea
test
and
mov
sub
shrb
and
pfnacc
push
jbe
lods
dec
shrl
mov
dec
xor
lea
outsl
imul
xor
jge,pt
scas
jmp
xchg
jne
xchg
aam
mov
push
imul
jns
mov
add
cmpl
mov
in
pop
mov
popa
call
sbb
jle
std
cmp
pop
jp
pop
xor
std
mov
mov
jle
in
in
popl
adc
mov
mov
loope
sti
aam
sub
and
dec
jne
cltd
sub
fnstsw
sbbb
lods
stos
or
je
xchg
lret
push
sub
pop
inc
mov
rcrb
js
outsl
add
cld
cmpsw
das
fwait
push
mov
in
add
out
outsb
jns
aad
inc
sub
jmp
sbb
sub
dec
or
adc
push
dec
mov
sub
and
out
fnstcw
movq
cmp
or
inc
mov
mov
mov
pop
jle
add
out
push
je
inc
cmp
lods
andl
or
inc
cmp
loop
mov
roll
push
ret
out
sahf
mov
mov
xchg
bndldx
mov
neg
rcrl
mov
jnp
dec
inc
mov
insl
lods
xchg
mov
xchg
das
insl
pop
lcall
imul
adc
pop
push
adc
es
push
xor
lret
mov
jbe
rorb
pop
sti
addr16
stos
mov
adc
or
in
movsl
and
lock
mov
popa
bound
stos
stos
mov
mov
jge
jle
inc
push
sub
pop
stos
imul
mov
pop
call
addl
jp
std
aaa
into
mov
loopne
dec
jb
adc
mov
xor
xor
mov
call
sbb
test
js
jne
jl
lods
xchg
out
and
outsl
arpl
pop
gs
sbb
push
mov
insl
js
pushl
cld
mov
jo
jno
insl
sbb
xchg
mov
jne
cmp
cltd
add
out
sub
unpckhps
push
jbe
loop
mov
push
xchg
sahf
data16
cmp
fiadds
jo
adc
jp
movsl
mov
xor
pop
mov
in
lcall
aad
pop
pop
inc
pop
je
pop
stos
mov
dec
insl
bound
imul
inc
test
scas
cmp
mov
jecxz
fildl
sbb
jne
aas
rcl
scas
std
call
mov
pop
mov
shrb
stos
lcall
je
push
loop
adc
inc
decl
mov
cmp
sub
loop,pn
lcall
xchg
clc
xor
or
xor
push
fsubrl
mov
sub
sbb
add
jle
sbb
jecxz
pop
and
mov
dec
adc
jge
shrl
cmp
call
repz
mov
pop
dec
ja
pop
les
sub
jmp
push
pop
loop
dec
adc
xchg
mov
mov
xchg
adc
mov
lock
xchg
test
push
mov
dec
std
push
sbb
sub
inc
mov
loop
or
cli
cmp
arpl
mov
push
nop
rolb
ficompl
push
cltd
mov
shl
divl
pop
xor
cmc
mov
sbb
lahf
mov
push
push
xor
ljmp
mov
jbe
inc
adc
sbb
adc
into
dec
xor
adc
pop
in
rcll
inc
add
call
mov
and
and
ret
jl
or
or
or
shll
fs
xor
xor
inc
sbb
lret
push
rcll
or
mov
fwait
orb
dec
pop
sbb
pop
out
loop
lcall
aas
test
mov
xlat
mov
jge
insl
lods
jmp
jbe
hlt
mov
int
mov
mov
cmp
daa
sbb
cs
daa
cld
fsubrl
mov
ss
pusha
add
mov
hlt
mov
outsl
hlt
jnp
gs
fdivs
enter
cmp
push
adc
testb
repnz
sti
roll
sub
xchg
push
in
stos
stos
mov
daa
inc
jle
and
inc
mov
cmpsb
sbb
xor
lcall
adc
pop
call
fisttpl
adc
mov
jmp
ret
adc
pop
jne
or
pop
orl
push
idivl
xor
fcomp
jge
mov
adc
mov
mov
gs
inc
mov
xor
inc
call
jle
in
gs
test
stos
out
dec
loop
sbb
inc
fmul
fwait
mov
imul
add
xor
or
push
jno
popf
mov
cwtl
jns
outsl
int3
mov
rcl
and
and
cmpb
imul
mov
push
test
out
mov
pusha
cmp
or
jae
dec
fwait
popa
inc
pusha
push
fst
insl
imulb
jae
adc
outsl
hlt
mov
aaa
push
sub
in
sub
cmpsb
enter
and
ret
pop
xlat
insl
mov
add
adc
loopne
xchg
jmp
in
and
sahf
sbb
cmp
out
push
call
or
mov
sbb
add
stos
xchg
fistps
sahf
std
jbe
rorb
pop
or
out
inc
cmp
testl
in
or
shl
mov
push
xor
cmpsl
push
loop
pop
jp
js
cltd
xchg
fbld
das
push
jle
fs
push
fildll
mov
cmp
jnp
add
and
test
lcall
inc
push
xor
div
mov
addr16
mov
jmp
pop
mov
push
lret
xchg
jmp
mov
adcb
sarl
frstor
jb
xor
loop
loope
fisttpll
aas
or
adc
loop
sub
scas
xchg
mov
aad
sbb
add
repnz
jo
jne
sbb
movsl
into
pop
stos
imul
xchg
loopne
sysenter
aaa
mov
inc
adc
mov
rorl
int
push
out
pop
mov
ret
xchg
test
push
pop
pop
push
mov
dec
mov
cmp
out
mov
xchg
jae
jb
xor
ljmp
adc
loopne
loop
xor
test
movsl
mov
add
pop
jne
sub
sub
lea
sub
in
inc
clc
or
or
sbb
orl
jne
xchg
pop
jnp
sub
xlat
rclb
adc
adc
or
xor
jb
fisubs
popa
rcl
mov
inc
ret
cmpsl
insb
adc
andl
xor
push
push
clc
lock
ret
mov
ljmp
sub
cwtl
divb
jle
or
add
and
cmc
mov
mov
cmp
movsl
arpl
fnstenv
mov
xor
popf
cmpsl
lret
pop
out
mov
inc
or
add
insl
dec
xor
test
stc
add
rcr
testb
xchg
mov
adc
in
jnp
xchg
sbb
arpl
dec
mov
sti
fsub
lods
loop
adc
and
nop
cmp
jmp
nop
test
or
pop
jbe
xchg
das
icebp
mov
cmp
add
popf
jecxz
pop
stos
pop
shll
lcall
insb
fs
mov
imul
in
rolb
and
pop
pop
mov
cmpsb
repnz
dec
pushf
cld
rorb
mov
xchg
cmp
push
pop
mov
ds
cmpsb
dec
in
pop
sbb
and
mov
xchg
lcall
pop
xlat
pop
sbb
test
push
mov
jecxz
add
movsl
ret
xor
mov
aas
imul
pop
insb
adc
cpuid
leave
mov
out
daa
cmp
pop
add
mov
inc
cmovno
in
js
fnstsw
mov
mov
pop
xchg
stos
dec
pop
ficoml
cli
or
sbb
push
jg
fcoms
pop
mov
mov
mov
sarb
scas
mov
out
lds
push
mov
ret
test
sbb
mov
je
jecxz
and
stos
push
push
pop
rorb
adc
sub
add
jecxz
aad
pop
inc
mov
or
aad
and
cwtl
icebp
or
icebp
push
and
lods
push
loope
lret
and
movsl
loope
aad
add
pop
cmp
push
sub
adc
inc
mov
and
shrl
clc
pop
pop
imul
sub
lds
adc
addr16
mov
jp
sbb
ret
pop
adc
cmp
dec
add
lea
mov
ret
int
xor
rcll
inc
sahf
js
fcompl
jbe
sbb
xchg
mov
subl
loopne
dec
sub
add
mov
rorl
sbb
or
rol
fldl
pop
mov
out
das
and
mov
adc
icebp
xchg
out
mov
cs
pop
xor
xor
dec
scas
xchg
cmp
mov
jge
and
cmp
icebp
inc
inc
fistps
sub
mov
fnstenv
add
jmp
fdivrs
push
insl
mov
mov
adc
jmp
mov
stos
mov
dec
dec
mov
fidivl
add
icebp
add
fists
lods
jp
dec
and
inc
add
movb
mov
adc
mov
push
scas
in
rcr
adc
outsb
insb
clc
scas
outsb
int
daa
push
ds
xor
roll
cmc
cmp
test
clc
test
dec
bnd
stos
nopl
pop
pop
xlat
lret
xor
xchg
mov
aad
mov
pop
push
cmc
inc
and
dec
mov
jp
or
data16
xlat
pop
fstl
push
jecxz
add
push
arpl
mov
ljmp
push
or
popf
pop
mov
jmp
xor
xor
jnp
jae
jge
in
sbb
xor
into
aad
ret
pop
rolb
insb
pcmpeqw
aaa
jbe
sub
out
ss
daa
sbb
add
dec
adcl
or
sub
mov
jp
in
cmp
pop
sub
outsl
cmp
movsb
popf
pop
jae
push
dec
rcrl
mov
sahf
hlt
ss
adc
or
faddl
push
and
loope
xchg
imul
cli
test
lock
out
in
inc
outsl
movsb
and
push
cltd
ljmp
cmp
test
pop
dec
xchg
out
sbb
loop
stos
out
push
js
xor
xorl
mov
lock
mov
pop
mov
jl
jnp
test
push
xor
push
adc
push
inc
mov
scas
in
in
push
sbb
pop
call
mov
fistps
inc
or
xchg
pop
push
push
sub
xor
call
sbb
in
push
mov
mov
rcll
lods
xchg
or
jg
andb
adc
insb
sub
dec
stc
mov
pop
pop
mov
pop
sbb
xlat
subl
lcall
adc
fwait
fs
cwtl
fs
adc
frstor
jmp
addr16
mov
mov
iret
mov
mov
add
push
mov
mov
shr
xlat
jno
leave
jb
pop
es
cmp
and
add
jnp
rolb
jo
ss
sbb
jle
pusha
add
int
rcrl
mov
insb
jno
pop
ret
xchg
push
cwtl
mov
lods
cmp
es
xor
rcl
mov
mov
cmp
stos
cmpb
push
cmp
cmp
or
xor
ljmp
xor
arpl
out
stos
sub
mov
in
sub
mov
loope
test
add
jg
mov
mov
das
loopne
addr16
push
add
repnz
mov
imul
or
aas
adc
push
hlt
jne
loope
testb
loopne
mov
ljmp
rcl
adc
sbb
rcrl
or
jmp
sbb
or
pop
xor
aaa
lds
iret
sbbb
in
pushf
jbe
cmp
pop
sub
and
sti
jmp
loop
adc
add
fadds
call
adc
sbb
adc
cld
xchg
bound
icebp
loope
push
xchg
icebp
pop
mov
fbld
or
cmp
add
push
aam
shrb
dec
popf
pop
push
shl
cli
jae
jnp
cld
test
popa
and
mov
ds
mov
mov
inc
mov
fisubrl
in
sbb
jae
ret
mov
or
sbb
aaa
inc
xchg
daa
xchg
dec
pop
xchg
mov
cmp
xor
jae
jp
pop
pop
insb
mov
jl
loop
popf
fistl
inc
cmp
sbbb
fisubrs
lcall
shrb
pop
adc
add
fcmovu
sar
push
mov
or
xchg
cmp
mov
mov
in
or
in
pusha
addb
push
je
dec
adc
mov
xchg
int3
dec
inc
push
loopne
jmp
push
and
insl
and
jmp
or
imul
in
mov
jmp
inc
rol
xchg
stos
adc
or
cld
push
mov
dec
dec
inc
gs
sub
outsl
or
imul
lods
repz
mov
pop
js
rcrb
push
stc
xchg
leave
in
in
mov
or
imulb
loop
xorb
cli
shrl
pop
dec
mov
pop
inc
sbb
cmp
daa
inc
mov
mov
js
sbb
inc
push
jo
or
xor
cmp
push
ret
mov
mov
or
cmp
ljmp
cmpsl
andl
xlat
push
push
in
je
paddq
jle
outsl
pop
imul
mov
fidivrs
rorl
inc
sbb
pop
ret
xchg
addr16
adc
leave
faddl
mov
and
inc
pop
or
cmp
stc
push
fwait
jae
in
and
ja
push
sbb
dec
sbb
insl
repz
pushf
out
mov
inc
mov
aas
cwtl
and
or
pop
ss
aam
cmpsl
insl
push
mov
push
jmp
arpl
jge
jmp
push
test
mov
and
lcall
outsl
inc
dec
dec
jae
mov
aad
xchg
mov
aaa
sbb
scas
mov
jge
dec
xor
pop
and
aas
in
add
aam
pop
pop
mov
pusha
insb
or
push
sbb
pop
and
inc
jl
jns
vcmpps
push
aas
ret
and
mov
test
aaa
cmp
push
sbb
cmp
pop
fldl
adc
pop
mov
ret
or
jl
pop
fisubs
xchg
add
sarb
outsl
and
mov
xchg
lea
dec
sub
add
outsb
adc
fistpll
mov
sahf
pusha
mov
fwait
jl
mov
jge
ja
cmp
call
xor
sbb
or
hlt
rolb
and
loop
sub
lods
sti
jmp
mov
insb
je
inc
loopne
cmpsb
inc
dec
clc
mov
mov
or
sti
push
les
test
jb
pop
fildll
mov
icebp
xchg
sub
js
ljmp
add
ja
mov
scas
sar
insb
inc
lods
shll
in
or
bound
push
js
adc
mov
push
jo
aad
mov
test
leave
rcrb
das
out
in
sbb
xlat
test
rol
xchg
hlt
lret
cwtl
add
lock
out
mov
adc
lcall
sub
push
add
jb
fimull
lock
idivl
dec
cmp
std
ljmp
jmp
sub
adc
scas
dec
jbe
rcll
xchg
das
mov
mov
pop
adc
xchg
iret
jbe
ret
inc
lock
push
sti
aam
mov
xchg
xor
xchg
mov
mov
dec
sbb
jb
xchg
inc
insl
push
cld
js
cmpsb
fisttpl
xor
xlat
hlt
imul
fdivrl
adc
fs
jl
xlat
add
imul
dec
sub
decb
mov
add
pop
cmp
push
push
je
adc
jecxz
fsubrs
mov
stos
aaa
ds
std
arpl
jae
mov
adc
test
xlat
in
lret
cmc
test
lods
xor
rcr
mov
mov
mov
jmp
mov
push
mov
data16
in
push
icebp
push
mov
mov
mov
in
dec
add
imul
jecxz
mov
js
xor
pop
add
sbb
sub
pusha
xlat
xchg
and
mulb
fdivr
shll
dec
hlt
push
imul
xor
daa
cmp
ds
enter
mov
xor
xchg
mov
inc
int
movsl
mov
outsl
es
lock
daa
std
movsl
es
orb
movsl
and
sbb
add
or
arpl
jne
loope
pop
sbb
mov
pop
fnstcw
nop
jbe
arpl
arpl
data16
addps
in
ficoms
xor
mov
mov
dec
mov
push
ja
jecxz
cli
fldl
scas
and
mov
les
clc
test
jecxz
jbe
int3
or
stos
aad
cmpsl
sbb
jo
out
dec
adc
adc
lret
xchg
add
jp
sbb
cmpsl
mov
ds
push
xor
pop
outsl
and
pushf
or
icebp
push
testl
data16
pusha
pop
jmp
sbb
xor
lock
xor
cmp
push
stos
jp
rcll
push
mov
rorb
das
fwait
mov
xor
popa
popa
inc
jbe
in
jg
jo
mov
pushf
icebp
jo
sub
jo
sti
fldcw
push
mov
enter
push
movsb
sub
and
and
jmp
mov
xchg
data16
dec
adc
out
mov
add
and
fnstsw
out
adc
les
insb
pop
jmp
loop
leave
aas
je
mov
and
jle
sub
sub
pop
xchg
les
stos
andl
mov
pop
ret
or
cld
icebp
rolb
out
sbb
enter
sub
clc
iret
ljmp
adc
add
push
jmp
loop
fs
fucomp
mov
push
add
sub
lods
and
mov
mov
aad
xchg
sub
push
mov
les
lret
les
cmc
jne
mov
mov
mov
xchg
aas
sbb
rcrl
cld
sub
rcrb
clc
pop
insl
and
lea
push
bound
dec
outsl
mov
push
xor
mov
out
pop
hlt
ja
or
scas
xor
pop
ljmp
push
push
cmp
xchg
add
ss
mov
fisubl
rcrb
fadd
mov
rcl
lahf
xor
pop
push
das
jne
aas
cmc
mov
ret
bound
xchg
outsb
aas
jle
dec
mov
enter
lods
or
cmpsb
mov
outsl
push
mov
jge
andb
dec
test
add
fcoms
js
mov
cltd
jno
xlat
fneni(8087
sub
orb
insb
pop
in
pop
ds
jo
mov
jbe
push
xor
mov
sbb
mov
aas
dec
sub
and
mov
fiadds
sub
mov
jecxz
sbb
mov
mov
stc
cmp
daa
xchg
push
das
mov
imul
jne
stc
adc
jo
cmc
test
arpl
pop
std
pusha
push
push
ja
adc
push
mov
mov
cmp
sahf
jne
inc
mov
out
test
jl
lock
fmuls
vminsd
push
jmp
aas
ficoml
push
sar
ljmp
fcmove
stc
sbb
mov
adc
or
mov
mov
pop
xor
cmc
cs
ret
addr16
loopne
stos
push
je
jno
cmp
add
mov
cli
aad
lock
inc
push
and
test
mov
mov
push
lahf
push
fsubrp
fidivl
pushf
add
sti
mov
rcr
fcmovnbe
xchg
test
adc
into
mov
mov
leave
jbe
push
cmp
push
cmp
je
or
fwait
mov
ja
div
aad
int
ja
repnz
jmp
xchg
fmuls
adc
push
ljmp
rcrl
adc
add
in
out
fisttps
mov
insl
add
rcrb
push
dec
jge
or
cmpsb
stos
dec
mov
cmp
rol
out
sub
movb
mov
sbb
and
lahf
jmp
jg
arpl
mov
mov
filds
or
mov
mov
sub
adcb
aam
ficoml
iret
and
pop
insl
adc
xchg
xchg
stos
lods
jb
aaa
insb
sbb
push
lea
int
orl
xor
mov
scas
test
inc
jne
ret
imul
fdivrs
jbe
inc
jl
inc
xchg
jge
adc
xchg
adc
pop
push
fdivl
loope
inc
push
popa
xchg
fs
pop
jno
or
js
dec
adc
or
lret
xchg
cmpsl
popa
push
mov
and
mov
or
sbb
xor
scas
pop
daa
and
cmpsl
mov
into
sbb
dec
rcrl
xlat
testl
pop
xor
rcr
rorl
out
xlat
add
jp
adc
lds
mov
fimull
dec
inc
add
sarb
cmpl
xchg
sbb
je
rcrb
push
incb
push
sub
dec
mov
xchg
test
test
jl
enter
inc
cmpsb
jne
lcall
xchg
in
popf
jmp
std
enter
xor
cmpsl
out
addb
mov
popl
jae
and
dec
adc
xor
xchg
mov
jmp
inc
je
push
daa
push
popf
mov
cmc
jle
sub
stos
xorl
push
xchg
imul
xchg
push
std
lock
lret
xchg
nop
mov
pushf
test
fmull
jmp
push
mov
mov
inc
cs
rol
cwtl
mov
out
jbe
dec
jbe
sub
stos
out
or
xchg
mov
pop
jns
dec
pop
pushf
in
shr
sub
dec
mov
add
fisttpl
sub
jmp
pop
mov
pop
push
sbb
popf
jp
add
shll
in
mov
sbb
sbb
jg
mov
inc
push
div
and
cmpsb
inc
pop
xor
dec
jl
cmpsl
and
jecxz
loop
sub
xor
mov
xor
mov
xor
mov
ffree
bound
and
push
xor
mov
cwtl
pop
sbb
pop
hlt
out
add
push
xor
sub
jb
mov
mov
ds
ss
inc
jae
jbe
lds
insl
movsb
add
sbb
out
clc
push
lods
mov
call
je
fsubrp
dec
bound
push
scas
sub
lods
and
mov
mov
adc
cmp
adc
inc
inc
repz
dec
ds
ss
and
add
inc
ss
push
fadds
and
dec
sbb
insb
cltd
pop
cmp
jns
out
es
inc
xor
mov
dec
mov
push
pop
repnz
aad
push
outsb
inc
call
js
fmuls
lea
loop
mov
je
pop
addl
jecxz
sub
rcr
adc
into
pop
pop
aas
arpl
aas
fprem
jae
cmc
xchg
pop
mov
jne
push
mov
jnp
icebp
pushf
adc
inc
and
jg
out
fld
lcall
cmpsb
or
out
xchg
jnp
mov
mov
scas
enter
out
xor
scas
push
shlb
xchg
inc
sbb
mov
inc
pop
imul
jns
outsl
dec
or
shl
cld
jl
adc
lods
adc
add
lock
aaa
mov
lods
mov
imulb
fstpl
call
arpl
xor
mov
sbb
stc
loopne
mov
push
das
pop
dec
and
jmp
arpl
test
jge
xchg
push
add
push
lret
shrb
push
loope
data16
sbb
lock
mov
aad
aam
cs
fisttpl
out
adc
stos
and
mov
aam
insb
js
pushf
sub
or
cmp
add
insl
faddp
movsl
lods
sbb
test
shll
lea
das
fdivrs
movsb
daa
jo
cmpsl
mov
outsl
test
jmp
fiadds
scas
xchg
and
imul
int3
ss
ja
fwait
add
or
xor
in
je
fnstenv
sub
jae
ljmp
pop
arpl
aam
inc
mov
jae
or
idivl
jbe
jae
mov
mov
mov
je
push
jecxz
or
jno
push
lock
fistl
cwtl
lcall
mov
mov
in
cli
jno
sbb
rcr
inc
rcrb
mov
mov
call
cltd
mov
mov
xchg
lea
and
stos
jnp
insb
sahf
mov
push
add
mov
cli
mul
pop
jg
outsb
test
mov
xchg
notl
ljmp
cld
mov
add
xor
scas
mov
sub
iret
sub
dec
mov
enter
test
mov
push
test
fs
ja
jge
mov
insb
aad
sub
mov
sbb
cmpsb
inc
cld
xor
ret
xchg
pop
into
cmp
sbb
mov
inc
out
pop
jo
pop
lcall
push
cmc
inc
in
push
xor
push
rcll
cmp
mov
call
fidivrs
cmp
mov
jge
xchg
inc
mov
sahf
subb
mov
pusha
xlat
out
aaa
jns
rcl
dec
daa
jno
push
mov
andb
movb
mov
lods
test
lock
jmp
xchg
add
sub
aad
dec
xchg
jl
jge
push
or
orl
jnp
pop
add
mov
pop
dec
movsl
outsb
mov
and
in
imull
mov
jg
cs
jmp
in
movq
sbb
test
cmpsb
scas
adc
xchg
ss
xor
hlt
and
jo
add
loopne
pop
xchg
aam
dec
dec
jb
call
xor
loope
insl
mov
add
popa
cwtl
loope
dec
mov
sbb
sbb
sub
or
ljmp
add
lahf
stos
stos
push
js
insb
and
mov
dec
cmp
fsubl
sbb
mov
mov
inc
mov
fst
fptan
jmp
dec
xchg
jge
push
mov
je
movsb
inc
mov
pop
mov
cli
or
jle
ja
fnstcw
pop
les
mov
ret
inc
push
int3
mov
rorl
or
inc
lcall
dec
lock
ror
pusha
cmp
in
loopne
cmp
add
mov
mov
loop
mov
ret
idivb
jnp
icebp
sub
out
cli
ds
or
cwtl
popa
jge
jae
xchg
xor
add
stos
xor
sbb
mov
ds
inc
divl
in
jb
lea
ljmp
movsl
clc
lock
ret
dec
mov
push
andb
sub
shlb
inc
xor
jp
sbb
jg
ret
stos
daa
pop
sub
fmul
cmp
outsb
add
mov
mov
fdivl
loopne
cs
bound
mov
mov
dec
add
shrb
mov
sub
sub
in
mov
fists
test
out
ret
dec
inc
sbb
stos
push
pop
jg
mov
xor
pop
jne
out
sub
sub
jb
out
adc
pop
in
sbb
insb
xorb
fists
sbb
ds
lds
call
mov
push
lods
push
pop
xor
mov
in
pop
sbbb
jp
jp
push
sub
outsl
sti
loop
shlb
lea
orb
mov
fldenv
push
xchg
call
push
cld
jne
xchg
movsl
dec
iret
sbb
loope
adc
nop
cwtl
jmp
dec
xor
fwait
les
jne
pop
mov
repz
mov
and
test
sbb
mov
lcall
call
out
sti
das
in
ljmp
idivl
jne
shlb
pop
aas
outsb
push
mov
bound
in
fnstcw
ss
loope
xor
xor
nop
pop
fwait
call
adc
loop
je
xchg
pop
mov
test
or
mov
jecxz
addr16
mov
popa
fcmovnbe
add
mov
mov
pop
rolb
mov
or
jbe
outsb
xor
ja,pt
jmp
out
fistpll
roll
cs
addl
mov
xlat
mov
mov
testb
gs
and
insl
mov
std
mov
jecxz
mov
gs
mov
lds
popf
leave
imul
add
lcall
pop
popa
add
xchg
shlb
call
jmp
xchg
nop
mulb
bound
movsl
ss
aas
and
arpl
cwtl
int3
mov
sbb
lret
xchg
add
mov
or
jne
sub
fs
push
adc
hlt
addl
or
pop
js
scas
stc
into
lods
in
push
stc
sub
imul
orl
jge
pop
imul
ljmp
pop
cmp
mov
lret
mov
pop
mov
daa
cmp
inc
in
lods
jmp
arpl
out
out
es
xchg
insl
mov
sub
pushf
loop
push
dec
pushf
or
dec
sti
fdivrs
pop
notb
xor
push
aad
loopne
xor
in
dec
xchg
cmp
incl
lds
cli
or
sub
mov
push
mov
dec
inc
dec
ds
dec
sbb
test
xor
arpl
xor
stos
mov
in
nop
fnsave
add
faddp
sti
mov
into
push
sub
mov
pushf
mov
jae
xorb
pop
jbe
push
sbb
jecxz
aaa
cmp
cmp
sti
rorl
cld
cmc
xor
roll
cmc
mov
cmpsb
pshufw
mov
in
push
cmp
lea
pop
cmp
mov
or
inc
pop
ljmp
stos
fcomip
je
data16
int
mov
xchg
sbb
push
mov
cld
test
ss
mov
fcompl
shll
scas
dec
mov
je
lock
or
adc
pop
or
push
testl
pop
mov
fadds
jb
test
lret
or
mov
pop
negb
pop
addb
lret
out
cmpl
inc
mov
imul
movsb
mov
xchg
push
lock
cmp
pop
jle
fldt
xor
mov
rol
dec
adc
lcall
xchg
push
jecxz
jle
call
mov
inc
push
xlat
addr16
js
add
pusha
lahf
aad
stos
call
xchg
fwait
sbb
jb
mov
lret
out
xchg
fs
or
aam
sub
jge
stos
push
lea
pop
mov
xor
cwtl
mov
mov
pop
rcrb
push
xor
jmp
leave
stc
je
ja
mov
icebp
xchg
dec
inc
arpl
testl
fisttpl
dec
rcll
mov
xchg
fidivrl
inc
icebp
into
call
pop
add
ficoml
test
repnz
push
lcall
iret
inc
lock
xchg
sbb
rol
adc
pop
test
into
ss
pop
dec
jg
pop
ljmp
mov
inc
dec
xor
sarl
xor
jg
into
mov
inc
cmpsb
outsl
dec
push
pusha
jecxz
test
xchg
xchg
repnz
adc
jp
insb
scas
push
ret
add
cmp
cmpb
insl
test
dec
jo
faddp
cli
nop
scas
mov
add
pop
ret
add
mov
xchg
mov
stos
adc
sti
xor
mov
daa
jge
es
call
sti
insl
jle
aas
fidivrl
jge
push
or
push
add
pop
fildll
cmp
lcall
das
xor
sbb
sub
inc
xchg
aam
daa
mov
cmp
std
sbb
rol
xor
jle
scas
mov
dec
mov
mov
push
and
aas
das
pop
mov
outsl
xchg
lds
xchg
sub
popf
xchg
test
cmp
ret
pop
mov
dec
int3
aam
test
fstpl
in
mov
lds
mov
fs
mov
ja
stos
cmp
mov
pop
jle
dec
inc
or
push
xor
pop
out
push
mov
mov
aas
xor
dec
mov
test
out
inc
mov
sbb
xlat
mov
cmp
sti
push
cs
std
lret
mov
cld
sbb
incl
fdivl
cmp
pop
mov
mov
aam
cmc
mov
adc
push
stos
add
push
add
mov
jg
paddw
lahf
sti
jb
std
sbb
paddsw
inc
jg
and
rclb
push
pop
cmp
inc
je
repz
cs
push
jmp
xorb
and
add
out
cltd
xor
scas
outsb
mov
rorl
jb
sub
fs
push
xchg
jmp
cld
in
push
xor
inc
clc
fistl
cmp
or
test
int
fldl
push
roll
aas
mov
cmp
shll
xchg
cld
add
inc
pop
fs
xchg
mov
xor
lods
push
inc
adc
fsubr
notl
inc
and
roll
out
jnp
push
jmp
push
sti
jb
fs
xchg
out
sbb
iret
dec
fldl
or
fcompl
pop
pop
stc
test
mov
out
in
insl
leave
or
sti
mov
jl
out
cmpsb
jp
lret
mov
jle
dec
pop
syscall
je
aaa
call
xlat
sti
pmullw
jno
and
and
cmpsb
pop
aas
mov
lods
mov
je
cmp
or
loop
adc
mov
mov
inc
int
aaa
dec
movsl
rcll
mov
xorl
imul
cmpsb
mov
in
xchg
push
mov
push
pop
inc
dec
adc
call
aaa
fisubrl
outsb
call
xchg
jbe
sbb
daa
fsub
mov
push
cli
into
push
scas
cmpsb
sti
repz
into
adcb
xchg
xchg
push
mov
mov
dec
pop
je
js
loope
bound
push
jmp
mov
pop
int
jmp
cmpsb
nop
shrl
loopne
cmpsb
pop
mov
sbb
mov
in
in
mov
jo
outsl
and
outsb
jo
xchg
cltd
hlt
scas
cli
xlat
sbb
mov
dec
and
jno
xchg
dec
push
fldl
mov
pusha
jne
jp
imul
fidivl
mov
cmc
inc
push
cmp
gs
test
add
dec
jns
adc
mull
data16
pop
inc
mov
jmp
push
push
xor
sbb
jecxz
cmp
xlat
lock
lock
data16
les
mov
movsl
sbbl
insl
cmpsb
pop
cmp
lods
hlt
sbb
shll
and
fistpll
and
hlt
scas
out
test
mov
jle
mov
mov
int3
jne
pop
push
les
pop
lcall
or
stc
loopne
or
pop
mov
xor
mov
imul
test
mov
push
fdiv
cltd
pop
push
sub
cmpsl
sbbl
and
adc
lods
int
xor
outsl
push
das
bound
or
pop
mov
clc
jmp
pop
mov
mov
pop
lcall
ljmp
mov
lock
or
mov
push
mov
mov
mov
mov
sub
jo
jbe
in
stc
insb
or
in
shl
fmuls
push
pop
js
jmp
lcall
sub
out
push
js
jnp
push
jbe
in
movaps
mov
aaa
lea
aas
rclb
add
push
cmp
mov
popa
nop
cmp
movb
popa
pop
sbb
sub
xchg
idivl
outsl
stos
pop
pop
outsb
out
dec
dec
sub
ds
dec
jmp
jo
les
pop
xchg
cmp
sub
add
pop
cwtl
push
cwtl
dec
mov
les
pop
cmp
dec
sbb
or
mov
std
xchg
fnsave
lods
cmc
mov
add
cmpsl
mov
fdivrs
test
push
imul
and
inc
push
push
xchg
cltd
add
cmp
mov
mov
or
aam
cwtl
mov
in
mov
cmp
sbb
mov
movsb
test
insb
xchg
bound
outsl
lods
shrl
push
stos
ljmp
sub
jp
mov
pop
pop
aam
sub
cmc
fsub
fwait
sbb
fdivl
popf
cmp
imul
movsl
fcmovnb
push
sbb
xchg
enter
mov
inc
push
mov
or
jg
jle
sbb
mov
cmpb
rclb
lret
orb
out
xlat
shrl
or
mov
mov
movsl
pop
aam
loop
push
mov
lods
scas
xchg
leave
lea
inc
cld
aas
mov
xor
daa
cmp
xchg
push
xchg
and
bound
xlat
and
pusha
imul
push
pop
xlat
int
inc
icebp
mov
test
inc
sub
xor
cli
push
jl
mov
sbb
lcall
add
insl
add
ret
mov
repz
cwtl
push
mov
lods
fimuls
cmpl
sub
rcr
push
in
popf
mov
sbb
call
sub
sub
mov
ss
pop
jecxz
dec
mov
imul
btc
into
mov
mov
adcb
ret
cmpsl
mov
push
mov
lock
mov
push
mov
popa
test
push
fs
ret
and
ja
scas
test
push
cld
sub
pop
bound
imul
sbbl
pop
lahf
and
cmp
sbb
jg
cmc
xchg
and
cwtl
call
jg
popf
or
sub
fnstcw
lea
sarl
data16
inc
jl
adc
mov
cs
mov
mov
lret
cli
push
test
mov
in
les
loope
pmullw
push
sub
jge
aaa
out
mov
or
push
xchg
faddp
sbb
xchg
in
loope
call
sub
subb
out
jnp
sub
xor
jne
xor
aad
dec
jp
insb
clc
cmp
dec
mov
enter
mov
psubw
mov
add
jecxz
stc
loop
jecxz
mov
rclb
fiaddl
xor
or
outsl
ljmp
mov
sub
mov
das
xchg
jns
jecxz
dec
xlat
std
jo
js
psrad
out
fcmovnu
lods
repnz
enter
int
push
ja
pop
xlat
addr16
sarb
sub
in
fistps
cmp
pop
dec
jb
mov
push
lock
add
fs
and
xchg
pop
sub
add
push
ds
inc
fsts
cli
push
sub
mov
sbb
inc
in
jecxz
hlt
lcall
adc
int3
cmpsb
call
insl
xchg
insl
mov
jmp
jnp
xor
and
mov
push
push
outsl
push
and
cltd
jl
mov
xchg
pop
in
jb
and
mov
lock
mov
cmpsl
insw
inc
adc
push
scas
mov
aaa
sub
dec
out
sbb
push
xor
inc
fcoms
push
fcmovu
lahf
push
aam
mov
lcall
push
mov
pop
jecxz
xchg
lret
pop
lcall
sub
sbb
ficompl
mov
lcall
xor
or
mov
hlt
icebp
testb
lock
cmc
pop
cld
test
jo
lcall
loopne
add
jnp
je
out
dec
leave
lea
fistl
aam
arpl
std
mov
cmp
mov
pop
add
in
pushf
insl
jl
push
ret
mov
sub
in
out
jnp
sub
bound
out
mov
push
scas
push
inc
lcall
xchg
call
cltd
scas
pop
adc
mov
std
rclb
sti
mov
out
pop
cld
fs
cld
mov
fstpl
sbb
lcall
push
or
scas
test
dec
in
sbb
adc
pop
fistpll
xlat
adc
and
mov
add
ss
cmpsb
aaa
sbb
jmp
loop
cwtl
mov
outsl
mov
adc
pop
jno
push
lds
cmpsb
pop
pop
jnp
setge
test
mov
mov
cltd
cmp
subl
les
push
popa
popa
in
jp
imul
das
jno
leave
jae
cmpl
fmul
popf
leave
sbb
js
inc
push
add
xchg
cmp
aam
sbb
test
das
out
fdivs
in
in
ret
add
cli
out
leave
xor
mov
sbb
sbb
push
inc
loop
loope
jbe
adcl
and
addb
mov
js
cmp
ss
jne
mov
repnz
std
insl
sbb
push
nop
das
enter
dec
xor
dec
mov
emms
stos
fcoms
and
adc
ss
cmpsb
test
movsl
addr16
push
push
idiv
sbb
out
or
shr
outsl
out
pop
and
push
pusha
dec
jno
jnp
addr16
add
adc
mov
shrb
mov
pop
fildll
repz
push
push
jg
daa
js
ss
rclb
pusha
lahf
fadd
sbb
in
and
ljmp
insl
test
mov
add
hlt
roll
shll
aas
hlt
mov
adc
shl
mov
fadds
fidivs
jg
mov
scas
in
mov
xchg
cli
popa
pop
fldl
shrb
jae
mov
jns
in
or
dec
add
sub
js
mov
inc
ljmp
push
dec
fimull
pop
sahf
or
xchg
cmpsb
mov
add
test
sbb
fwait
pop
pop
mov
mov
adc
inc
jmp
ret
outsb
cmp
or
das
out
and
popa
sub
jmp
or
jg
iret
je
movsl
mov
test
lahf
pop
nop
subb
dec
and
adc
or
daa
mov
insb
adcl
lahf
int
insl
and
call
mov
dec
xor
fnstsw
aad
outsb
sub
fimuls
lods
test
sub
sub
xchg
inc
add
hlt
arpl
js
aaa
call
and
scas
jmp
pop
cmp
testl
or
scas
mov
call
mov
mov
or
imul
stos
iret
cld
cmp
arpl
lahf
and
sub
inc
f2xm1
inc
pop
push
test
sti
mov
jg
pop
sub
jne
bound
xor
push
popf
ds
mov
rcrb
cli
outsb
fistpl
dec
cwtl
xor
in
xor
pop
fcoml
sbb
sbb
sarb
imul
mov
stos
cs
mov
add
cmc
push
mov
cmp
rorl
pushf
xor
decb
mov
out
dec
mov
cmovno
push
add
mov
sbb
in
movsb
pop
mov
jle
dec
hlt
adc
dec
jbe
sbb
xor
add
jb
bound
jmp
or
inc
sub
jbe
ss
push
lcall
lcall
xchg
xchg
ja
clc
mov
adc
fs
cs
arpl
out
ret
rolb
rcrl
imulb
cmp
xor
inc
lahf
pop
dec
cmp
lcall
adc
ud2
sarb
cmp
pop
jno
xor
rorb
jp
add
dec
in
in
lcall
dec
adc
or
push
popf
xor
xlat
ret
pop
or
pusha
lock
sbb
inc
lret
add
mov
add
mov
es
aam
test
mov
enter
inc
push
push
rorb
pop
pop
add
push
enter
and
ss
loopne
mov
pop
repnz
pop
cmp
xchg
cwtl
ja
mov
inc
sbb
xor
scas
fisttps
fcoms
outsl
pop
cmpsl
push
add
or
mov
rcll
pop
cmpsb
xchg
cmp
mov
scas
mov
inc
test
mov
jb
xchg
outsl
push
xor
or
push
cmp
push
pop
sti
into
ljmp
imul
jle
rclb
pusha
mov
pop
push
sub
pop
loop
pop
xlat
dec
dec
xor
imul
pop
popa
xchg
repz
adc
lcall
out
sbb
scas
aas
das
daa
mov
loopne
cwtl
insb
pop
jl
je
out
out
int
push
je
mov
cmp
lcall
scas
lock
push
and
jl
pop
or
mov
jae
mov
scas
add
das
mov
ja
icebp
aam
cli
or
shl
cmp
mov
test
mov
jmp
lahf
push
je
lret
cmp
shll
sti
push
adc
jmp
mov
push
test
xor
push
mov
clc
jl
pop
ret
push
inc
lret
or
scas
scas
mov
dec
loope
sbb
sbb
xchg
pop
shrl
data16
lea
rcrb
outsl
inc
mov
and
lret
jge
jle
sub
mov
mov
mov
dec
add
sti
in
jnp
sbbb
and
out
cmp
or
cmp
jge
aam
popa
add
mov
push
rcr
mov
inc
inc
mov
out
jns
test
jg
mov
pop
lds
mov
inc
push
hlt
sbb
je
sub
xchg
fnstsw
jp
fcmovb
stos
push
lods
pop
movsb
out
or
jo
push
dec
xchg
adc
lret
xchg
inc
divb
in
loop
mov
les
sub
xlat
cmp
dec
or
pop
les
xor
pop
xchg
in
out
sub
aaa
inc
mov
fnsave
xorl
xchg
fwait
or
movsl
idiv
xchg
sub
sbb
mov
sahf
testl
and
stc
adc
ljmp
in
mov
xchg
pop
adc
ficoms
ffree
out
sbb
push
mov
dec
icebp
cmp
push
fwait
in
aaa
test
lret
or
andb
mov
stc
add
cwtl
mov
and
andl
fisttpl
xor
inc
push
xchg
sahf
loop
xchg
sbb
jnp
mov
adc
dec
pop
aam
aaa
sbb
jle
mov
adc
mov
add
icebp
aad
addl
inc
pop
aas
pop
inc
jmp
jnp
push
imul
es
sub
push
rcl
loopne
cld
and
ffree
stos
js
xchg
lahf
lcall
fisubl
and
in
sub
push
mov
xchg
jb
mov
cld
pusha
or
imul
roll
scas
orb
xchg
push
jmp
fiadds
fdivl
adc
adc
cmc
mov
mov
and
xchg
scas
pop
iret
nop
jnp
and
ficompl
shlb
sbb
scas
jmp
cwtl
loopne
scas
out
and
inc
pop
aad
add
cmpsl
and
cmp
decl
clc
cmp
or
cmc
insl
shrl
jge
loopne
in
sahf
js
aaa
sbb
jnp
push
ret
push
pop
xor
std
mov
jae
add
nop
aam
out
jae
shlb
dec
cld
fsubrl
pop
or
pop
clc
jmp
inc
xchg
or
inc
mov
insb
es
movsl
cmpsl
movl
mov
mov
rcll
jge
insl
in
scas
cli
push
xchg
ficoml
jo
stos
cmp
jg
xor
pop
insl
lahf
pushl
and
xchg
out
repz
aaa
das
add
shl
jo
ljmp
jns,pt
push
rorb
add
mov
dec
dec
std
sbb
mov
aad
lock
pop
xchg
xchg
vpmacsdqh
movsl
dec
or
inc
outsb
lahf
fsubs
or
daa
jo
xacquire
inc
ds
dec
jo
jl
push
fdivs
mov
js
insl
push
gs
repz
aam
jbe
ss
and
aad
mov
pop
insb
adc
pushf
xchg
push
cld
out
cmp
lock
outsl
jne
cmp
loopne
stc
mov
or
loope
scas
cmp
cld
arpl
sbb
insl
pusha
ja
mov
mov
in
loopne
test
jnp
mov
mov
test
mov
js
mov
ror
jno
adc
or
in
sbb
out
dec
pop
adcl
sub
inc
mov
mov
inc
push
mov
popf
fldl
dec
add
lea
xor
shlb
xor
sub
xchg
inc
divl
or
test
xchg
jnp
insl
cmpsl
xchg
sar
rorb
pop
sub
jg
jp
jnp
jnp
jmp
mov
mov
or
insl
xor
daa
push
fsubrl
rol
ljmp
mov
scas
stos
pop
test
fidivrs
aam
cmp
sub
mov
jp
add
cmpl
sahf
push
jae
insb
xor
cli
jne
data16
outsl
icebp
sub
fdivs
fdivrl
cmp
cld
add
pop
fnsave
or
aaa
mov
mov
outsl
xor
jmp
jl
les
test
jmp
ret
mov
aas
cmc
call
mov
cli
and
pushf
jnp
test
roll
push
inc
or
testb
add
adc
push
jle
mov
push
push
xchg
test
stos
scas
ja
push
insl
shrb
fwait
rorb
mov
data16
pop
fidivl
ret
std
shrl
lcall
lds
jne
int
daa
adc
movsb
dec
es
jmp
add
das
loopne
int
push
add
adc
fistl
cmp
jp
xor
je
push
clc
stos
faddl
nop
lcall
push
outsb
cmc
inc
push
jle
loopne
mov
in
sbb
xor
push
cld
jge
mov
popf
push
dec
inc
mov
cld
js
roll
out
adc
lret
mov
jle
cmp
cmp
ficomps
icebp
jne
aad
popf
outsb
xor
fistpl
xor
sbb
add
mov
rcll
xor
mov
mov
jp
jecxz
aam
jne
fdivp
movsl
dec
xor
out
jnp
test
lock
popa
movb
shll
insb
test
scas
jnp
rolb
bound
mov
cmp
push
fildll
inc
inc
adc
out
nop
stos
ljmp
dec
jecxz
jecxz
lock
lahf
call
das
cld
inc
jmp
test
mov
jge
jns
jl
xor
fidivrl
push
sbb
loope
pushf
pop
jbe
xchg
scas
sbbl
das
and
or
push
in
mov
push
jnp
imul
mov
push
xor
sbb
mov
fdivs
popf
roll
pop
push
xchg
scas
data16
fldt
or
add
dec
dec
fcomps
xor
aas
mov
mov
test
sti
leave
dec
mov
shll
and
cmp
xchg
xor
mov
imul
cmp
sbb
in
jle
xchg
sub
jmp
lods
inc
rolb
jne
inc
mov
loope
jae
cmp
test
cli
ja
lea
jmp
outsl
test
stos
xchg
add
inc
aaa
insb
loop
dec
shll
rorl
or
xlat
sarb
imul
lock
inc
popf
mov
mov
xor
imul
fdiv
fs
mov
mov
ret
dec
loopne
pop
mov
xchg
jmp
je
xchg
lret
adc
aam
mov
adc
inc
mov
stos
lret
pop
mov
pusha
test
or
pop
add
or
xor
cmp
xlat
adc
or
push
dec
lods
add
stos
in
stc
jecxz
insl
cmp
jecxz
lock
sbb
mov
push
xor
mov
stos
xor
pusha
popa
ret
scas
jbe
pop
sub
mov
sbb
push
jne
leave
lods
push
repnz
jecxz
mov
std
fwait
sbbl
and
jno
inc
rorl
test
ss
adc
cltd
and
adc
push
arpl
mov
in
jl,pn
cmp
test
int
add
cmc
dec
pusha
ret
xor
repnz
cmc
dec
jmp
sahf
lds
cmpsl
jbe
ljmp
and
mov
pop
push
push
xor
mov
dec
popf
jnp
rorb
sub
shrl
in
insb
cmp
outsb
div
out
hlt
push
mov
inc
into
ds
rorb
mov
clc
insb
push
out
pop
data16
aaa
push
and
lds
in
test
lcall
lock
mov
cs
inc
mov
stc
jnp
mov
mov
jle
mull
jl
or
cmpxchg
sti
das
mov
jg
mov
add
lret
ret
mov
xchg
fs
dec
dec
push
mov
pop
cmp
mov
icebp
inc
mov
cmpsl
enter
and
shl
test
aam
iret
stos
sbb
movntq
fldl
test
push
nop
int3
lcall
sbb
imul
xor
add
sbb
sbb
or
mov
jns
push
jecxz
shrl
mov
jo
add
test
bound
pop
or
mov
pop
jl
test
and
xchg
sar
jecxz
pop
pop
iret
dec
or
jg
ja
repnz
jbe
pop
jne
movb
cli
stos
jmp
and
adc
test
cmp
push
xlat
xchg
sub
dec
pop
cmp
sbbb
push
aam
inc
filds
push
test
or
fstpt
mov
add
and
lock
das
mov
imul
push
shll
mov
jp
push
icebp
adc
jl
and
jae
jnp
js
int
aam
out
hlt
hlt
adc
inc
dec
cmp
inc
subl
js
dec
xor
and
aaa
out
test
rcr
cli
jae
jno
sbb
ret
fsubrs
pop
add
cwtl
inc
pop
jge
add
movsl
daa
je
inc
call
mov
aaa
iret
lock
xor
fs
shll
sbb
movsl
sub
adc
xchg
mov
je
or
add
repnz
lods
fnstsw
jae
push
aaa
jp
sbb
sbb
lods
out
loopne
mov
sbb
mov
test
jno
jno
xchg
xchg
sarl
stos
jp
into
daa
ss
rolb
sub
push
dec
movsl
shl
jns
in
mov
iret
mov
insl
jg
int3
sarl
jnp
inc
cmp
sbb
cs
fdivs
xorb
lcall
insb
aas
dec
sub
cmp
mov
add
sbb
adc
cmp
loope
lret
into
ret
outsl
es
repnz
cmpsb
xor
pop
jle
mov
or
xchg
ret
xorb
pusha
ret
sbb
xchg
cld
mov
and
sub
mov
inc
pop
mov
sub
jmp
addb
sub
mov
loope
push
mov
je
inc
adc
mov
icebp
push
xchg
pop
les
push
push
addr16
and
pop
pop
imul
sbb
ljmp
and
std
leave
fidivrl
mov
inc
jnp
inc
add
cmp
popaw
push
ja
xor
ficoms
lcall
ja
fimuls
mov
and
push
adc
mov
push
xor
mov
testb
sub
push
jecxz
jmp
jbe
out
icebp
adc
adc
push
pop
fnsave
loop
mov
sbb
in
sub
setg
or
cmc
dec
pop
mov
add
loope
out
sub
jmp
sub
sbb
sbb
int3
pop
adc
cltd
stos
jne
or
fwait
test
and
mov
sub
inc
les
cmp
fadds
ficoms
adc
fists
aaa
dec
fcomi
mov
cmpb
adc
mov
andb
lahf
faddl
cmp
xchg
and
sbb
xchg
and
pop
jl
or
cltd
xor
mov
loopne
xor
push
les
cwtl
mov
cmp
jns
xor
or
pop
pop
sti
mov
dec
push
xchg
fstpt
jo
xor
xchg
bound
out
cmp
fs
je
sub
push
shl
mov
lock
enter
lock
cmpsb
sbb
ss
mov
test
or
adc
sbb
cmp
imul
fwait
jo
xchg
mov
fmuls
shl
or
adc
xor
int3
imul
pop
pop
fcmovu
idivb
jae
adc
test
ds
push
adc
cwtl
mov
mov
mov
mov
mov
adc
sub
shll
jne
mov
fiadds
in
outsb
mov
scas
inc
dec
add
pop
jmp
pop
lock
cmpsl
mov
clc
orb
and
sbb
cs
lret
dec
mov
popa
dec
pop
ficompl
enter
js
pop
add
jbe
addr16
xchg
xor
jl
fldl
xor
sbb
sub
rcll
stos
jecxz
or
movsl
mov
lock
jne
or
sub
inc
repnz
pop
sub
cs
daa
xor
add
pop
mov
rorl
inc
fcmovnb
test
jle
add
mov
lcall
mov
adc
push
sbb
scas
jo
mov
rcll
jno
push
sahf
fdiv
pop
lods
std
xchg
aas
loop
push
cwtl
xchg
push
clc
mov
jne
sarl
mov
cmpsl
xor
mov
dec
lret
pop
mov
push
mov
pop
mov
ret
outsl
mov
aas
js
dec
aam
ret
out
adc
lea
lcall
arpl
mov
sbb
subb
or
or
mov
movsb
pop
and
icebp
adc
stos
adc
inc
jl
popf
shld
jns
dec
or
cs
push
jg
call
push
aaa
mov
xlat
ficomps
pop
pmuludq
xorb
xor
push
pop
fwait
jmp
ds
out
aad
mov
cmp
std
out
mov
inc
xorb
aaa
notb
arpl
andb
cs
mov
mov
add
stos
jp
xor
mov
jp
insb
push
mov
inc
in
inc
cmpsb
mov
lahf
ds
sbbb
scas
push
pop
sti
jle
mov
sbb
mov
call
daa
jno
sbb
mov
sbb
pop
adc
cmp
test
and
aad
or
fcmovb
push
fwait
cltd
fwait
insl
mov
sahf
lds
rolb
sbb
sub
movb
cmp
xchg
xor
jnp
insb
cld
mov
fistpll
or
mov
clc
aam
orb
cli
mov
xlat
mov
lret
hlt
xchg
sbb
stos
lock
push
in
maskmovq
testl
fcmovnu
int
jo
shrb
xlat
sbb
fidivrs
sbb
fisubrl
int
mov
lcall
cmc
lret
and
je
push
sub
mov
es
adc
sub
and
arpl
mov
mov
cmp
je
stos
mov
hlt
jge
dec
inc
mov
lcall
xorl
bound
add
xchg
push
fdiv
insb
icebp
call
into
shrl
sub
mov
mov
or
shlb
test
mov
outsb
sub
sbb
pop
sahf
mov
std
ja
and
sarb
cmpsl
xchg
jo
push
sbb
cmpsb
cli
adcl
sbb
sbb
dec
adc
dec
pop
pop
decl
shrl
aad
mov
add
lahf
mov
push
in
stos
enter
xchg
loop
xchg
or
loop
bound
push
imul
xorl
sbb
inc
mov
xchg
in
clc
sub
imul
adc
inc
jno
call
daa
mov
fbld
xor
dec
pop
lcall
dec
pop
je
mov
test
shll
or
loop
je,pn
mov
mov
adc
shlb
mov
cwtl
mov
push
jbe
aam
mov
cmp
pop
ret
jbe
fisttpll
xchg
mov
insb
sbbl
push
cli
lock
xor
push
jge
mov
xlat
sti
sub
cmp
inc
sbb
xor
jmp
mov
popa
loope
push
into
pusha
fisttpll
add
ficompl
pop
jge
in
jno
testb
mov
fstl
mov
test
pushf
mov
sbb
add
and
mov
rol
or
popw
dec
je
in
shlb
mov
call
roll
leave
scas
mov
pop
out
out
es
ds
dec
in
lret
icebp
inc
xchg
ss
adc
clc
clc
test
cmc
pop
push
bound
cmc
out
push
xlat
les
mul
stos
stos
sbb
sub
stc
and
sbb
dec
push
shl
mov
xchg
popa
imul
ret
pop
and
stos
add
mov
cltd
jmp
inc
icebp
addl
mov
jg
cmpsb
call
and
jge
fcompl
shlb
pop
ss
sbb
in
adc
adc
mov
lcall
or
inc
test
sub
fldenv
jo
data16
add
scas
idiv
ret
std
cli
mov
shrl
fs
pop
into
jne
sbb
mov
or
mov
or
add
call
pop
jb
aad
lret
pusha
inc
pop
add
push
ljmp
stos
outsb
push
or
sub
cmp
testl
adc
mov
push
outsl
mov
mov
adc
enter
mov
scas
or
fildll
mov
imul
cwtl
sahf
push
mov
fiadds
aam
cltd
cld
insl
scas
sub
pop
js
icebp
in
or
enter
shl
sub
aaa
xor
dec
dec
mov
xor
out
jo
xchg
bound
push
xor
or
adc
sub
lahf
aam
popf
xchg
sub
out
shlb
insl
out
cmp
hlt
adc
js
sub
pop
pop
mov
dec
lcall
cmpsb
or
and
jno
dec
addb
orb
sbb
inc
inc
adc
in
push
mov
enter
cld
cmp
movl
fnsave
fidivrs
out
sbb
mov
cmc
in
jle
jbe
dec
inc
in
cmp
jle
mov
jb
sbb
pop
mov
rcl
ficompl
rorb
test
mov
arpl
int
push
dec
jae
rorl
or
and
mov
jle
mov
adcb
mov
cld
test
adc
mov
sub
je
cmp
fdiv
rcll
ljmp
and
pop
outsb
insl
jae
clc
cmp
fwait
std
xchg
xor
inc
push
loop
das
push
fidivl
jp
push
js
loope
jbe
sbb
or
push
negb
cmp
punpcklbw
out
inc
out
sub
js
lock
xchg
push
mov
xlat
push
add
dec
pop
dec
lds
jbe
sub
push
in
jmp
mov
pop
inc
xorb
add
mov
das
inc
pop
and
sbb
sbb
adc
data16
scas
inc
dec
or
xor
scas
jmp
out
inc
popa
push
and
sarl
loop
cmpsb
dec
das
mov
hlt
scas
loopne
pop
inc
sbb
das
nop
xchg
lds
insb
mov
outsb
inc
add
enter
mov
scas
fstpt
lcall
andl
cs
pop
test
sbb
mov
negl
fiadds
adc
je
pop
aaa
xor
adc
add
movsl
mov
into
jge
test
call
mov
in
push
mov
divl
fldenv
push
out
pop
xchg
mov
add
sbb
aam
sbb
mov
jp
aas
cmp
mov
fld
mov
xor
cwtl
xlat
sbb
pop
xchg
sbb
shll
cmp
outsl
mov
in
add
ljmp
mov
mov
in
into
fnstsw
lahf
inc
dec
mov
dec
ss
loop
scas
rcrl
push
lcall
popa
fwait
xor
push
jnp
jb
push
lea
loopne
fdivr
flds
push
jae
mov
pusha
inc
sti
call
xchg
push
mov
push
push
scas
xchg
adc
adc
out
or
sub
fstpl
insl
call
xor
out
jbe
jnp
popf
mov
cli
adc
lock
les
sub
push
xchg
out
call
dec
arpl
mov
cli
xor
pop
test
mov
pop
jne
ds
sahf
lret
cs
aad
push
dec
mov
cli
inc
xlat
and
mov
fimull
dec
push
iret
push
gs
sbb
mov
outsl
xor
pop
pop
ja
mov
aad
rcrb
cmpsb
out
stc
movsl
pushf
out
pusha
jb
movsl
lock
subb
clc
imul
loop
xchg
mov
addr16
add
test
push
test
pop
cs
pop
ffree
pop
notl
mov
loop
insl
sbb
lds
mov
dec
jg
imul
cmpb
fidivl
mov
stos
mov
loop
sub
adc
mov
mov
jmp
loopne
adc
lea
aam
sub
loop
add
ss
push
or
loop
pop
insl
mov
in
push
pop
add
pop
mov
ljmp
in
dec
xchg
pusha
mov
push
roll
imul
mov
jmp
inc
sbbl
pop
add
les
fstpt
dec
fdivrs
mov
es
add
in
clc
ret
andb
push
loop
xchg
pop
call
sbb
test
jnp
cmpsb
ds
aam
inc
scas
fstps
cmp
rorb
outsb
scas
enter
in
test
mov
imul
pop
addl
xor
xchg
push
sub
and
xor
inc
pop
out
stos
scas
push
mov
push
jle
fstpt
jb
test
rolb
sbbl
add
andb
test
mov
mov
fidivrs
dec
adc
dec
mov
andl
cmp
inc
fwait
leave
divl
mov
pop
pop
inc
subl
les
gs
out
cwtl
mov
or
ja
mov
movsl
sbb
jmp
sbb
rcll
push
int3
mov
pop
cmc
shlb
adc
gs
enter
xlat
sub
sbb
cwtl
push
in
cmp
repz
jbe
cli
jo
xchg
dec
stos
imul
cmp
cmpsb
aaa
dec
imul
xlat
stos
add
sbb
in
daa
aad
rol
jb
push
and
cmp
sub
xlat
insb
mov
jns
int
xchg
arpl
stc
shl
xlat
pop
je
xchg
mov
push
outsl
andb
aaa
pop
push
pop
int3
and
call
lcall
fistl
ss
add
lods
icebp
aam
push
cs
insb
repnz
mov
pop
jbe
fdivrs
sbbl
jnp
jecxz
and
in
push
sub
xor
jmp
mov
iret
mov
ljmp
outsl
push
icebp
mov
push
jbe
add
mov
sub
or
jb
test
jne
mov
xchg
imul
xchg
imul
std
mov
sbb
popa
and
fmul
lea
lret
mov
lds
pop
cmpsl
xchg
fsubs
insb
pop
xlat
adc
dec
xor
dec
frstor
loopne
adc
test
push
inc
xchg
iret
adc
mov
ljmp
xchg
ljmp
pop
ss
cwtl
adc
scas
sbbl
mulb
mov
dec
xchg
outsl
mov
scas
dec
repnz
mov
dec
lods
jg
push
jbe
cmpsb
adc
and
int
into
lock
stos
add
aad
cmc
lret
cmp
sub
jmp
ret
xchg
stos
mov
bound
mov
add
lahf
lds
pop
sti
ljmp
push
inc
scas
out
ftst
pop
clc
in
ja
shrl
dec
rcr
ss
fwait
aaa
adc
push
pop
pop
into
push
sub
jp
pushf
cmp
mov
cli
push
dec
cmp
cmp
bound
in
add
cmp
push
adc
mov
mov
inc
mov
jno
call
addl
into
mov
mov
ja
std
sub
mov
aas
sub
pop
insl
adc
pushf
push
mov
std
call
and
es
push
fiadds
xor
and
push
cmp
scas
dec
je
andb
cmpsl
mov
cmp
rorb
cmp
cmp
cld
push
stc
mov
call
cwtl
hlt
loope
imull
mov
int3
int
lret
xor
sub
jmp
pop
mov
jle
sbb
jo
mov
cmp
mov
push
pop
fisubl
cmp
shlb
loop
xchg
add
int
xor
aaa
dec
jns
cmpsb
mov
mov
shlb
jbe
mov
fists
test
xchg
ss
rcrl
mov
mov
or
dec
mov
xchg
cwtl
dec
jne
push
shll
out
or
test
shlb
arpl
add
cmp
prefetcht0
cmp
call
or
es
lret
dec
mov
sbb
pop
cmpsl
shl
adc
negl
xor
in
psubw
pop
pop
sub
dec
bound
cmp
mov
pop
js
push
inc
jbe
cmpsl
cmp
das
xchg
stc
rol
inc
rorl
inc
pop
pop
mov
sbb
jnp
lds
jns
mov
rcr
fsubr
int
pop
mov
mov
jno
adc
adc
or
sahf
jmp
mov
insb
hlt
push
aam
or
in
testb
daa
int
into
pop
outsl
pop
das
shll
xchg
andl
aad
addr16
cmp
and
cmp
inc
rolb
sbb
lods
xor
push
outsb
mov
lcall
imul
scas
inc
fcompl
jns
movsl
adc
out
out
test
push
add
insl
xor
jge
xor
pop
dec
and
add
mov
stos
or
scas
sbb
adc
hlt
pop
push
jae
rcr
and
jmp
adc
hlt
mov
arpl
sbb
insl
dec
pop
test
push
mov
push
bswap
and
dec
test
setp
lods
jae
or
jge
pop
fistpl
xchg
cmp
mov
rol
xchg
mov
call
nop
mov
cmp
mov
mov
and
aam
in
arpl
cltd
push
pushf
adc
mov
sub
popa
es
jne
xchg
out
sarb
fstpl
dec
dec
or
das
dec
adc
inc
rcr
adc
push
movsb
sarl
ljmp
fistl
push
pushl
mov
xchg
loop
inc
pop
cwtl
jns
cwtl
add
jecxz
sti
fstps
xchg
dec
nop
xchg
ljmp
test
ficoms
hlt
mov
in
test
push
or
xchg
xorl
push
insb
maskmovq
notl
push
mov
sub
add
mov
cmc
xchg
out
push
add
jae
mov
hlt
out
push
add
aad
rcr
aaa
xchg
aam
out
pmaxub
outsb
fistpl
or
rcl
loopne
inc
addr16
fadds
out
data16
mov
fldl
cli
pop
inc
mov
sbbl
mov
cmp
std
adc
daa
addr16
test
pusha
call
arpl
dec
mov
mov
aas
sub
shr
popa
popf
int3
mov
xchg
jle
xchg
incb
mov
jl
and
xor
mov
and
mov
cmp
lock
shrb
lock
adc
inc
push
pop
mov
jecxz
push
mov
cmp
jae
mov
nop
js
loope
or
cs
int
jno,pt
rorb
sub
push
xlat
fnstenv
pusha
mov
fidivrs
xor
adc
mov
pushf
popa
fucomp
jl
loope
movsb
jae
scas
loopne
into
std
dec
mov
inc
mov
add
jge
jge
mov
std
pusha
mov
cmp
add
sbb
cmpsb
pusha
mov
stc
daa
js
arpl
jg
mov
sbb
jge
mov
idivl
push
xor
enter
mov
push
adc
pop
push
sbbb
jno
mov
cmp
jg
sbb
mov
inc
imul
cmc
mov
jno
les
pop
dec
lds
lret
mov
dec
dec
popf
fwait
loop
push
jecxz
lret
push
sub
shrb
movb
xor
xor
icebp
pop
or
scas
jno
push
push
out
push
clc
xchg
pusha
aas
cmp
push
setne
sbb
lea
mov
lds
inc
mov
push
fdiv
sub
out
and
out
mov
cmp
sbb
enter
sbb
and
roll
jp
xchg
jmp
mov
pop
mov
adc
into
mov
icebp
leave
testl
adc
lods
popf
inc
and
pop
inc
inc
stos
dec
and
addl
in
cmp
stos
out
jmp
mov
mov
clc
xchg
ja
aaa
push
add
mov
lret
jne
cmpsl
les
fucomip
or
fucom
jbe
pop
mov
or
mov
jnp
cli
jp
push
hlt
jne
test
and
jecxz
fstp
mov
adc
in
out
icebp
scas
pop
sbb
xchg
bound
daa
add
ret
and
movsb
xlat
or
sbb
add
sub
jo
dec
jno
sbb
pop
popa
fsubrl
enter
out
adc
addb
pop
mov
aad
pop
loopne
cltd
xor
mov
icebp
and
pop
popa
push
fwait
imul
adc
xlat
aam
cmp
fcoml
out
sbb
adc
pushf
jb
inc
xlat
daa
pop
clc
daa
orb
lea
pop
dec
xchg
inc
xor
xchg
aaa
xchg
sahf
imul
pop
jno
pop
xor
push
lock
enter
pop
scas
subl
js
fimull
jmp
or
cmc
push
jp
push
lods
cmc
push
roll
jg
int3
push
mov
cmp
insw
rorb
daa
pop
adc
fldl
sub
pop
movsb
orb
jge
clc
adc
arpl
cltd
jp
iret
mov
add
cmpsl
or
lods
xchg
lods
mov
ss
cld
out
scas
call
jbe
adc
mov
fwait
cmp
notb
dec
out
rcrl
ljmp
mov
test
mov
mov
add
mov
into
sbb
test
push
pop
arpl
xor
xchg
decl
adc
pop
les
xor
cli
scas
sbb
and
stos
popa
mov
scas
mov
jns
and
mov
push
stos
jb
in
jge
add
out
jmp
add
add
add
mov
lcall
sbb
arpl
mov
mov
adc
mov
test
mov
mov
lock
outsb
push
mov
mov
fwait
dec
add
sbb
hlt
pop
test
sub
xor
jne
dec
xor
dec
inc
lods
mov
insb
xchg
mov
or
pop
jle
add
jp
mov
push
nop
sbb
mov
sub
pop
sub
hlt
mov
or
mov
outsb
dec
aam
cmp
push
sub
pushl
add
pop
pop
lods
adc
inc
rol
dec
xor
sarb
cld
loope
xor
fs
das
fldenv
hlt
movl
sub
ss
inc
faddl
divl
cmc
pop
repz
inc
mov
xlat
ret
mov
pop
push
das
cmpsb
sub
sbb
fiadds
sbb
xor
mov
fcomp
loop
xchg
xorl
aam
insl
dec
cmp
movsb
js
scas
movsl
dec
ss
jne
in
xchg
lcall
sub
popf
dec
push
scas
xchg
or
xchg
dec
push
push
iret
mov
inc
test
rolb
cli
dec
dec
aas
js
cmp
in
stos
ljmp
es
dec
ljmp
pop
fwait
push
xor
xor
sbb
addr16
bound
stos
mov
cmp
out
gs
cld
inc
sbb
sbb
mov
inc
andb
or
jnp
mov
cwtl
push
sbb
add
xchg
test
mov
je
xchg
setle
das
cmp
fmull
hlt
pop
sbb
outsl
mov
imul
div
or
sbb
mov
in
add
fnsetpm(287
f2xm1
rcrl
jbe
in
mull
push
aad
cli
sub
roll
pop
data16
call
push
icebp
push
jp
mov
pushf
mov
inc
inc
cmp
and
xor
nop
inc
or
loop
in
pop
pop
jg
bndstx
pop
loope
sub
pop
push
daa
es
out
test
xor
adc
aas
jne
rolb
popf
fildl
dec
shrb
mov
insb
push
jo
iret
xchg
sub
cmp
or
add
cld
cli
dec
mov
or
sbb
xlat
and
clc
push
imul
das
out
and
mov
bound
das
and
inc
push
scas
push
ret
push
lahf
lds
loope
scas
sbbl
and
xor
mov
sahf
stos
call
loope
roll
mov
mov
lahf
cmp
in
push
std
pop
icebp
lea
jle
out
mov
insl
push
pop
inc
lds
aaa
test
adc
sbb
and
jns
outsb
xchg
push
fimuls
test
test
mov
aam
xchg
jno
fisubrl
mov
cmc
aam
sbb
lahf
xchg
and
mov
cli
ds
in
sbb
mov
adc
mov
xchg
sub
ja
and
lock
into
push
pop
push
dec
bound
fcomi
sub
inc
xchg
or
aaa
lock
ret
frstor
dec
push
pusha
push
cmp
testl
pop
inc
pop
int
ljmp
rorl
call
pop
dec
insl
push
addb
sbb
cmp
add
push
add
jle
pop
out
arpl
fdivrl
cmp
movzbl
sub
arpl
jbe
fmuls
push
mov
cld
out
sbb
loope
inc
dec
push
cli
fistpl
movsb
stos
scas
cltd
out
into
fldl
pop
xlat
cmc
arpl
mov
add
push
cltd
inc
mov
sbb
pop
icebp
xlat
lds
inc
nop
movb
mov
mov
xor
mov
rorl
dec
jp
call
push
add
lds
enter
or
out
sbb
pop
pop
adcl
mov
and
mov
xchg
pop
xchg
loop
imul
cmpsl
jg
push
jmp
testl
in
ret
mov
and
sub
out
xchg
inc
stos
in
aam
leave
das
clc
add
pop
push
mov
sbb
or
jbe
fisubl
pop
ffreep
and
sbb
fidivl
movsl
shll
lock
sti
cmpb
jg,pn
jecxz
movl
and
and
lds
clc
dec
mov
mov
rorl
inc
out
nop
mov
mov
inc
xchg
pop
enter
shl
movl
int
xor
or
xor
mov
inc
mov
hlt
rolb
icebp
cwtl
std
adc
enter
adc
cmp
out
add
mov
pop
push
jae
push
mov
ficoml
sbb
xlat
out
sarl
int3
push
clc
sbb
cmp
jmp
mov
clc
push
dec
cmpsl
push
mov
add
pusha
mov
sbb
jl
loope
es
cmpsl
push
sbb
fcomps
jmp
xor
call
jecxz
cli
pop
scas
ljmp
outsb
es
leave
inc
mov
jnp
out
out
cmpsl
stc
xorl
out
cmc
ljmp
data16
std
push
mov
dec
gs
mov
mov
in
scas
xacquire
add
repnz
pop
pushf
jno
ds
mov
inc
inc
shrl
adc
sbb
pop
mov
jmp
scas
adc
push
add
sbbb
inc
lock
push
fcmovnbe
rorl
jmp
arpl
sti
xlat
lock
add
mov
mov
cwtl
ljmp
adc
sbb
hlt
test
jp
xchg
je
jno
leave
cwtl
sub
add
mov
inc
fildl
inc
or
insb
shl
das
mov
cmp
sbb
loopne
out
jb
xlat
fldl
xchg
push
arpl
jl
push
and
pop
push
lcall
inc
inc
lods
sar
dec
out
test
and
mov
sbb
rclb
add
shl
jbe
dec
inc
loope
ja
scas
mov
xlat
int
dec
stos
arpl
aad
movsl
pop
call
or
mov
cwtl
push
insl
icebp
pop
setle
mov
push
clc
lea
inc
mov
and
daa
pop
and
repz
sbb
mov
mov
ret
jnp
xchg
sbb
scas
pop
movl
sbb
pop
lock
in
adc
mov
push
jecxz
jp
push
stos
mov
push
push
push
jns
enter
mov
movsb
xchg
and
stos
or
inc
imul
sbb
or
inc
adc
jo
es
xchg
jns
fwait
prefetch
push
pop
insl
clc
out
loope
and
mov
xor
into
push
sub
imul
xor
mov
popf
mov
push
ret
outsl
dec
dec
ret
mov
push
ficoml
cs
lahf
out
cld
dec
or
cmp
sub
pop
jl
xor
hlt
cmp
or
cmp
mov
mov
aas
jl
cmp
fists
lcall
push
push
mov
cmpsb
push
xor
adc
dec
popa
mov
push
call
mov
aad
out
ret
es
ficoml
or
pop
sti
cli
jbe
lea
fildll
mov
sbb
rclb
fidivrl
nopl
jne
jne
cmpsl
inc
ret
push
ret
xchg
mov
sub
push
fildll
loop
cli
xchg
iret
mov
in
pop
adc
jnp
cld
and
sbb
cmpb
loop
dec
jg
inc
sub
ja
xchg
data16
scas
mov
jnp
xchg
test
mov
mov
in
mov
call
aam
fnstenv
insb
jp
inc
adc
sti
icebp
cs
or
pop
daa
or
or
pop
push
and
mov
jp
mov
mov
xchg
js
push
jmp
shll
jl
out
jae
pop
mov
mov
lods
sbb
cmp
neg
sbb
xor
movl
loope
lds
movsb
sbb
jbe
mov
sbb
pop
fstp
stos
push
jle
into
int3
sub
push
jmp
xlat
and
push
neg
mov
fnstsw
shlb
cs
mov
faddp
push
pushf
insl
sahf
dec
movb
jbe
outsb
mov
out
adc
lret
pop
push
mov
cmp
mov
insl
xchg
rolb
push
shl
sub
pop
cmp
rorl
sbb
xor
inc
mov
outsb
scas
daa
outsb
mov
fdivrs
popf
in
push
and
xor
lea
cmpsl
xor
mov
cwtl
clc
inc
pop
mov
jecxz
sbb
jno
icebp
or
mov
loope
imul
push
xor
inc
ds
pop
shrb
outsl
cmp
fmull
mov
fistl
cltd
bound
imul
sub
xchg
stos
fs
ss
inc
in
xchg
ret
shr
loopne
rcll
inc
jle
dec
sbb
or
or
lds
cmpsb
pop
dec
dec
cld
mov
fst
adc
jb
jbe
sbb
shlb
sub
fs
ljmp
jl
aaa
sub
jl
ljmp
and
sbb
call
or
mov
sbb
cmp
add
lcall
jg
in
jmp
sbb
dec
jmp
in
or
adc
fcom
aad
jle
cmpl
pusha
iret
movsl
jge
pop
jo
mov
sub
scas
add
js
aam
mov
inc
cli
or
pop
mov
or
pop
dec
fisttps
icebp
fbld
adc
pop
fmuls
ss
dec
sub
ljmp
aad
insb
fsubrl
lea
bound
cli
mov
aaa
in
xor
bound
ss
jo
pusha
jp
mov
call
fildll
cli
testb
ficompl
shr
xchg
sub
sub
jmp
scas
scas
test
movlps
jl
fsub
rcl
lea
jle
loop
ret
pop
std
loope
pop
mov
stos
es
lock
mov
lods
popf
imul
iret
xor
sbb
bswap
cmpsl
inc
fdivrl
addb
jae
adc
jne
ja
or
andb
hlt
fnstsw
stc
mov
mov
shll
push
aam
jle
xchg
mov
pop
in
sbb
sbb
xlat
scas
loop
imul
jecxz
fisubrl
insb
lret
xor
inc
lds
in
lock
push
add
in
jbe
imul
int
cmp
inc
push
stos
cltd
pop
pop
or
jecxz
popa
arpl
mov
cld
repz
mov
xlat
lret
cmpsb
outsb
fistpll
repnz
inc
and
jmp
mov
loope
in
lods
imul
ret
and
push
fs
jge
cmp
jae
cwtl
and
push
iret
add
cwtl
loope
push
cmp
jb
in
jmp
cmp
lock
adc
pop
bswap
cmp
xchg
outsl
stos
jb
ror
les
push
mov
sub
push
enter
out
xchg
fcomps
mov
popf
sbb
cmp
mov
ret
add
mov
mov
aad
loope
inc
mov
or
xor
mov
scas
lea
leave
arpl
push
xor
mov
cwtl
mov
int
packsswb
ds
mov
add
cmp
mov
icebp
repz
push
or
jb
add
dec
xchg
adc
mov
xlat
sbb
mov
mov
shrl
mov
mov
jp
dec
pmaxub
popf
pop
ss
mov
cli
out
cs
jae
int
popa
lds
dec
jae
ret
shlb
jl
pop
sbb
popa
lods
cmpsl
add
daa
addr16
js
mov
cmp
pop
mov
xlat
addr16
repz
inc
fimuls
xchg
inc
sub
pop
push
inc
incl
jle
in
xor
cmp
jl
xor
scas
mov
push
jp,pn
in
cs
cmpsb
scas
mov
jno
outsl
mov
aam
std
lret
mov
ljmp
clc
pop
adc
jl
sbb
or
inc
adc
jmp
inc
repz
out
jo
push
sbb
cmpsb
jo
push
mov
or
push
sti
jecxz
sbb
pop
push
mov
or
mov
shl
inc
lods
addr16
cwtl
mov
in
fiaddl
lea
sbb
pop
pop
cwtl
jno
aam
fidivrs
int
dec
push
leave
inc
xchg
call
int
fnsave
dec
adc
aas
popf
adc
or
scas
jmp
lea
add
fisttpl
sub
mov
loope
stc
add
jp
test
fadds
or
xchg
dec
in
outsb
mov
inc
popf
mov
loope
inc
outsb
jne
test
popf
movsl
push
test
jno
es
cmp
les
cmc
loop
mov
sti
adc
aas
shll
cltd
push
outsl
inc
mov
clc
mov
lahf
xchg
mov
jp
fisubl
cmp
leave
mov
mov
or
dec
je
mov
imul
call
imul
pop
pop
ds
fmuls
sub
adc
pop
in
int3
fdivs
add
xchg
and
repnz
pop
mov
ss
mov
mov
stc
stos
push
push
jbe
pop
mov
xor
inc
mov
or
jge
sahf
cmpsb
out
push
arpl
das
push
cli
mov
and
push
push
cli
fld
scas
stos
rcrl
sbb
mov
divl
test
mov
aad
stos
inc
scas
push
or
into
sub
addr16
ds
call
addr16
mov
pop
and
cwtl
dec
out
les
xchg
mov
pop
rorb
daa
push
aaa
int3
xchg
mov
add
int
jg
jno
ret
adc
in
or
in
lods
sbb
test
jp
fidivrs
adc
sbb
cmpsb
and
out
mov
push
cmc
pop
jge
cmp
lret
xor
fsubrl
mov
cmp
pop
sbb
or
sti
ss
push
pusha
jae
icebp
mov
jge
xchg
js
mov
stos
pop
mov
call
shl
mov
xor
ja
lcall
lods
icebp
jl
xchg
push
or
std
mov
add
pushf
lods
mov
out
sbb
fisttpll
mov
adc
push
scas
push
cmp
scas
jo
in
cmpsl
push
test
out
pop
mov
in
lret
or
sub
push
test
jmp
shlb
popa
ds
fs
cmp
test
cmc
movl
mov
sbb
dec
pushf
cmpsl
addl
lcall
test
mov
das
fwait
jle
fwait
or
xchg
push
cltd
sbb
or
push
test
sub
push
aas
adc
or
xchg
sub
stos
arpl
cmc
out
iret
or
movl
cld
inc
cmpsb
mov
test
jo
lahf
dec
push
mov
inc
pop
test
es
rcl
mov
jne
dec
fcmovu
pop
rcr
rcrb
pop
add
pop
pop
je
add
pop
fldl
sub
pop
cmpsb
das
loop
or
mov
rolb
sbb
pop
xor
mov
lret
push
push
mov
jecxz
sbb
popf
push
sub
pop
mov
test
imul
inc
loopne
or
sub
lahf
sahf
js
pop
xlat
insl
add
hlt
dec
sub
stos
sbb
ret
add
or
jo
push
mov
shl
push
push
push
ds
cmp
into
cmp
jne
dec
scas
pcmpgtb
adc
loope
insb
adc
cli
jg
mov
call
push
mov
lds
sarb
cmp
add
leave
mov
ljmp
dec
mov
movsl
mov
cmp
outsl
fs
pop
outsl
mov
inc
push
jne
cmc
jecxz
jbe
push
mov
roll
leave
push
adc
xchg
ret
nop
sub
mov
fwait
cmp
cmp
or
lcall
cmpsl
push
cld
pop
insb
and
sbb
and
dec
mov
imul
ror
mov
insl
fcmovnbe
sbbb
insl
jle
lods
leave
adc
frstor
sbb
rcrb
sub
scas
and
push
xor
pop
ficoml
push
fdivrs
xchg
cs
scas
outsb
jnp
adc
insl
insl
push
lcall
xchg
or
fnstsw
adc
pop
push
clc
in
fwait
sahf
mov
adc
loopne
inc
fldl
in
movsl
push
mov
xchg
lds
push
adc
pop
jle
pop
subb
test
insl
fisubs
mov
mov
cmpsb
cli
fndisi(8087
aam
pop
and
push
jmp
test
mov
fmul
in
inc
cli
test
pusha
rcrb
xor
mov
xor
dec
repz
loop
out
cmpsl
ja
imul
xor
ja
daa
sub
mov
aam
and
dec
mov
inc
mov
test
int3
icebp
addl
xor
adc
mov
aaa
sti
loopne
icebp
imul
xlat
mov
pop
fdivs
imul
add
mov
mov
fisttps
cmp
sbb
mov
push
pop
sbb
inc
jge
sbb
insb
das
pusha
and
je
cmpsb
stc
push
data16
inc
roll
lock
push
lds
xchg
mov
mov
movb
arpl
push
mov
stc
dec
lods
pop
sub
mov
lock
jmp
lods
lods
xchg
mov
pop
add
scas
pop
mov
fcompl
mov
out
or
outsl
pop
push
sub
jp
imul
add
ja
test
push
push
or
dec
push
data16
aaa
out
es
lcall
mov
add
pop
loope
nop
jb
hlt
add
xchg
mov
clc
mov
adc
loop
or
ljmp
scas
stos
add
sub
jl
or
pop
call
les
cli
sub
or
lret
add
sbb
adc
sub
ret
xchg
dec
jo
xchg
fisubrl
call
push
jecxz
emms
jl
pop
lcall
push
mov
test
cld
iret
enter
and
dec
bnd
and
sti
xchg
and
loope
mov
mov
mov
mov
cmp
mov
clc
cmp
daa
xor
sti
mov
pop
cmpsl
mov
inc
xor
cmpsl
je,pt
mov
xor
decl
sbb
daa
jae
add
cli
test
scas
dec
int
lcall
cmp
das
or
insb
insb
adc
std
mov
push
call
cs
cli
push
movsb
xor
cmp
sbb
push
testl
and
pop
sbb
mov
pop
add
pop
pop
jne
rclb
ret
mov
or
fcmovnbe
imul
push
xlat
mov
cmp
stos
push
js
mov
push
xchg
push
nop
cmpsl
or
shl
shl
loop
test
jg
int
popa
aam
in
or
in
fcoms
je
push
cmp
iret
and
inc
scas
sahf
xlat
shll
lea
mov
adc
cmp
sbb
fcomi
subb
push
call
or
in
sbb
fwait
mov
clc
jecxz
sub
add
mov
inc
jl
lods
stc
sub
ss
test
xlat
pop
jo
lea
shrb
jo
push
mov
add
sbb
mov
mov
out
orb
jae
jnp
mov
jo
lcall
jbe
gs
sti
xlat
scas
mov
pop
in
ss
leave
dec
cmp
iret
jne
insl
dec
rol
rcr
cmpsl
idivb
loope
xchg
cltd
inc
dec
clc
aaa
shll
ret
imul
repnz
ret
xor
mov
and
or
xchg
sarb
adc
test
pop
xor
aam
mov
inc
adc
repnz
jp
xor
ficoms
cmp
pop
dec
popf
add
push
loope
mov
cmp
add
and
xorb
or
push
sbb
outsb
andps
imul
sub
shr
dec
mov
pop
or
pusha
dec
pushf
push
hlt
mov
aas
pop
aam
xchg
imul
ja
adc
nop
cmpsl
and
mov
iret
inc
fisttps
push
clc
inc
and
push
sub
aad
ficoms
enter
test
sub
cld
mov
aam
stos
loope
jb
lods
inc
xchg
add
insl
movsb
push
lea
pop
enter
fldl2e
into
push
pop
jle
xor
outsb
jecxz
sub
dec
xor
cmp
mov
dec
stos
jp
imulb
dec
loop
sti
cs
sbb
cmp
icebp
and
les
jl
cmpsb
in
arpl
pop
sti
mov
xchg
adc
insb
lahf
xor
adc
jle
mov
rorl
fiaddl
inc
lcall
imul
popa
xchg
jae
ret
das
xchg
mov
pushf
int
aas
loope
lods
sbb
xor
popf
mov
aad
dec
mov
fnstsw
idivl
adc
lret
and
xchg
int3
push
int3
push
insb
push
add
insb
xchg
aad
outsb
out
int3
pop
sbb
xchg
mov
daa
add
push
cmc
mov
dec
roll
in
popa
adc
out
ljmp
test
and
xchg
insb
mov
cmp
xchg
sub
inc
cs
and
bound
xchg
outsb
movd
sbb
xchg
bound
ljmp
and
lods
xor
pop
mov
nop/reserved
ret
dec
add
mov
xor
jb
inc
aaa
or
mov
sub
pop
xchg
in
and
cmp
push
fdivs
div
push
fcomp
fldt
adc
mov
cmp
jnp
jp
cmc
aad
adc
icebp
jne
imul
mov
jb
jecxz
ret
in
mov
or
inc
daa
out
or
xchg
call
push
test
aam
jo
sbb
pop
mov
pop
xchg
cmp
fcmove
mov
push
sub
mov
sti
add
mov
cmc
test
jne
xlat
inc
movsb
mov
out
push
push
rcr
les
mov
leave
repnz
lods
add
sbb
ljmp
jno
jo
roll
pop
jl
mov
loope
cmp
cmpsb
pop
push
xorb
out
mov
inc
xchg
inc
aam
mov
fisttpll
or
filds
jbe
xchg
int
leave
aam
lea
or
jge
adc
popf
sub
pop
push
out
lds
push
adc
sahf
repz
fnsave
aad
pusha
inc
cmp
mov
aam
lahf
andb
shlb
xor
popa
inc
ret
inc
shrb
or
jo
in
mov
xor
jmp
xchg
add
insl
pusha
xchg
clc
insb
icebp
xlat
cld
add
xor
push
pusha
insl
mov
dec
mov
es
jge
fcoml
pop
shr
push
cmc
mov
adc
mov
aam
aaa
in
jmp
sub
inc
fmuls
dec
iret
loop
paddusw
cmpsb
jnp
jae
dec
jp
sti
add
pop
lods
push
loopne
out
jns
daa
mov
cmc
cmp
mov
push
loop
or
xor
inc
into
fwait
ljmp
pop
mulb
push
shl
loope
xor
test
mov
notb
cmpsl
jae
inc
stos
lret
jle
push
and
add
test
sbb
sarl
mov
jle
add
and
dec
dec
dec
jg
and
mov
mov
cmpb
cvtdq2ps
jne
xchg
dec
mov
stos
xchg
and
scas
sbb
mov
test
sbbl
in
inc
rcrl
sub
pop
inc
mov
movsb
cmp
push
sahf
decb
xor
rorb
cli
les
leave
and
popa
movsb
loop
insl
mov
push
cltd
mov
push
xlat
adc
dec
mov
hlt
jg
mov
rorl
mov
sbb
dec
mov
cmp
mov
inc
sbb
mov
push
add
mov
fwait
icebp
add
cli
or
jmp
int3
dec
mov
aad
xor
ljmp
add
js
cmp
inc
inc
dec
lcall
daa
inc
or
std
loopne
mov
std
mov
aaa
jl
mov
adc
xchg
cli
cmp
std
push
mov
mov
cmp
inc
push
or
call
sbb
mov
mov
cmp
daa
dec
in
mov
fs
or
js
outsb
rcl
cmp
int
adc
insb
or
jnp
cltd
pop
mov
mov
arpl
mov
ljmp
divb
arpl
add
lock
add
xor
arpl
add
outsb
sub
mov
mov
aaa
enter
jnp
hlt
ret
lahf
cli
jne
xchg
mov
xor
pop
pop
out
cmp
pop
dec
icebp
xor
loopne
inc
aaa
lods
ljmp
lret
push
push
push
test
hlt
push
cmp
lret
hlt
add
stc
xor
adc
push
cmpl
mov
push
inc
adc
mov
add
in
cmp
clc
inc
and
dec
icebp
imul
notl
sbb
emms
rorl
mov
in
dec
testl
add
enter
mov
xor
adc
mov
jge
mov
sub
sub
pop
pop
mov
lock
movl
xchg
jbe
outsl
jmp
shl
adc
mov
out
push
cmp
lds
and
pop
mov
pop
fildl
in
mov
or
sub
aaa
ds
dec
loopne
xchg
aam
dec
cmc
aad
jmp
mov
test
sbb
inc
dec
sbb
cld
pop
mov
ljmp
mov
mov
popf
inc
nop
insl
mov
je
xchg
jmp
cmpsl
xor
adc
mov
push
mov
jge
fcoml
ss
sub
cli
fwait
lods
rcll
pop
aam
mov
jmp
loopne
fwait
inc
call
jecxz
xor
xchg
outsb
aad
add
add
inc
push
icebp
inc
inc
push
push
ss
clc
les
adc
add
add
insb
and
movsl
insl
mov
and
adc
sub
push
push
jg
xor
dec
adc
mov
fucomp
mulb
lock
insb
lahf
fs
jne
js
jno
stc
add
fucomp
mov
and
fcomps
inc
mov
and
sbb
ret
inc
sbb
ds
add
fsubs
jbe
push
fmull
add
inc
cmpxchg
les
sbb
bound
lcall
lea
pop
call
addr16
jl
scas
pmulhw
pushf
out
loope
xchg
adc
pop
cmp
push
mov
jns
or
ret
outsl
pusha
adc
add
push
mov
add
pop
sbb
scas
int
notl
in
mov
xlat
imul
cwtl
adc
pop
add
jae
xchg
outsb
sub
jb
js
push
or
xor
mov
xor
mov
addb
inc
cmp
mov
push
push
mov
jecxz
jb
stos
popa
mov
popa
loope
mov
or
arpl
insl
ljmp
mov
in
inc
ret
mov
in
sub
repz
out
jge
int
shrb
add
imul
push
mov
aas
and
cmp
mov
aam
push
loop
mov
inc
xlat
sbb
mov
push
and
cmpsb
or
jae
inc
push
andb
out
and
das
or
mov
enter
mov
mov
mov
out
mov
pop
sbb
sub
jecxz
mov
inc
fidivrl
xlat
push
sahf
jp
into
mov
dec
cmp
xor
call
dec
mov
bound
inc
aam
inc
inc
xchg
xor
imul
lret
xorl
mov
jmp
shlb
mov
push
pop
dec
repnz
lcall
rclb
inc
lock
add
push
add
adc
mov
ds
ljmp
idivb
fcmovnbe
inc
dec
insb
stc
mov
dec
jmp
lcall
sbbb
imul
and
mov
movsl
js
orl
inc
sub
mov
aad
shrl
cmp
out
sahf
fcmovu
and
sbb
cmpsl
push
stos
ljmp
push
push
push
lret
mov
dec
nop
add
popf
or
mov
orl
je
insl
ret
cwtl
and
pop
fcomip
js
pop
sbb
jbe
rcl
inc
outsb
sub
movsl
aad
pushl
mov
sub
fbstp
inc
lds
jg
divl
negl
mov
pop
xor
xor
out
fs
adc
jmp
cld
jle
mov
loope
or
mov
lea
xor
push
daa
mov
loopne
mov
pop
roll
rclb
jbe
cmp
xchg
mov
testl
pop
out
outsb
sub
imul
mov
push
aad
cmpsl
inc
je
pop
sbb
iret
out
xchg
nop
stc
fnstsw
push
mov
jae
aam
cmp
sub
xorb
shlb
loopne
out
adc
jae
mov
mov
testb
ljmp
jno
addb
jb
push
dec
mov
xchg
cmp
test
jge
ss
leave
mov
addb
mov
test
jb
inc
filds
jge
movsl
sbb
rclb
dec
mov
js
hlt
nop
jle
or
outsb
mov
out
insl
push
fistpl
sbb
addb
mov
scas
out
ret
and
or
push
xchg
aam
push
pop
mov
add
es
in
dec
outsl
inc
adc
dec
mov
mov
or
rclb
adc
popa
sbb
dec
pop
pop
ja
ljmp
jo
mov
divl
mov
test
xor
sub
jbe
je
jl
mov
xchg
into
mov
int
mov
addl
add
aas
jge
test
lock
out
xchg
cmpl
jae
out
sbb
loopne
repz
aaa
shl
push
ret
mov
movsb
mov
fdivrs
inc
pop
test
scas
bound
ljmp
or
gs
loop
ret
popa
mov
mov
mov
pop
xchg
das
rcll
add
push
ljmp
fs
in
stos
inc
add
das
mov
aaa
push
push
dec
push
test
jmp
xor
cmp
mov
jge
lods
xor
pushl
std
sbb
xor
push
pop
jle
and
sbb
test
or
mov
sbb
sub
jle
sbb
lea
jecxz
call
sub
imul
adc
sbb
loop
loope
sub
push
pop
out
insb
mov
jg
iret
popa
or
mov
out
and
xor
push
pusha
hlt
lock
or
adc
hlt
dec
add
imul
pmuludq
and
or
ret
add
xorl
xchg
push
cmpsl
sarb
dec
dec
mov
adc
xchg
cmp
add
fimull
mov
push
leave
gs
jno
unpcklps
add
shl
pop
mov
add
rolb
cli
push
xchg
jne
enter
imul
mov
push
lock
and
inc
jecxz
mov
fnstsw
sub
lea
ret
xlat
shrb
aam
inc
fildll
and
jnp
jmp
aas
dec
mov
test
jns
inc
lret
cmp
call
leave
and
push
pop
sbb
sub
es
sbb
mov
sar
fidivl
imul
in
cmp
test
push
inc
cmp
mov
inc
cmp
pop
pop
add
inc
add
mov
mov
stc
mov
in
dec
aam
subb
or
cmp
pop
xchg
cld
ret
fsub
loopne
dec
std
aad
jbe
xchg
std
adc
jp
add
push
in
or
pop
xor
mov
lret
sub
xor
aaa
std
test
out
adc
popa
shll
mov
fstl
scas
mov
dec
aaa
push
int3
pop
jle
inc
movl
mov
xor
lock
es
popf
or
xor
cmp
popf
arpl
cltd
xor
es
mov
out
stos
outsl
jbe
scas
iret
mov
xchg
cltd
mov
push
nop
pushf
mov
mov
outsb
dec
or
push
xor
dec
cld
leave
jmp
hlt
push
xor
adc
or
lods
jbe
stc
fdecstp
ja
adc
enter
lea
mov
icebp
les
fimull
insl
stc
push
pusha
push
out
mov
out
pop
xor
insl
mov
add
mov
outsl
cwtl
and
js
dec
sahf
lds
pop
cwtl
hlt
push
rcl
mov
fstpl
cmp
pop
inc
xchg
push
fisttps
push
or
stos
scas
jmp
or
cmp
dec
push
jle
imul
stos
xlat
in
cmp
ljmp
scas
inc
mov
push
add
push
or
test
xor
jne
and
pop
push
add
arpl
mov
cmp
iret
movsl
popa
adc
xlat
ja
mov
mov
hlt
mov
pop
dec
pcmpeqw
mov
lods
jmp
add
clc
mov
je
cmp
ja
pop
sbb
pop
fistps
sub
les
nop
fs
test
sbb
shrb
cmpsb
std
adc
push
mov
fwait
jne
cli
cmpb
daa
pop
jnp
cmp
gs
scas
fwait
addr16
or
cltd
ljmp
xchg
lock
cmp
sarb
jge
hlt
mov
loopne
push
inc
adc
or
mov
or
mov
insl
push
in
fs
cs
push
jp
push
mov
scas
outsb
roll
das
jmp
inc
iret
daa
mov
jecxz
xchg
das
fldt
jns
sub
outsb
push
dec
jo
mov
aam
imul
ds
mov
mov
mov
xchg
out
aas
and
lods
stos
jecxz
xor
jg
jle
mov
icebp
and
pop
popa
push
push
adc
outsb
cmp
mov
mov
push
cmc
cmp
loope
inc
scas
sti
ret
push
sarb
das
insl
jmp
xorb
push
mov
pop
pop
inc
arpl
mov
jp
outsb
imul
pop
mov
in
lock
push
mov
or
lahf
ljmp
add
andl
or
or
xor
xor
and
mov
rcrb
push
ljmp
pop
mov
sub
cmpsl
outsb
cmp
rcr
adc
aaa
pop
mov
cmp
mov
xchg
lea
xchg
test
xchg
ja
dec
outsb
sub
pop
pop
call
loop
add
push
cli
aad
xchg
and
js
pop
in
orl
mov
mov
jge
fmull
arpl
nop
mov
cli
jp
dec
es
cmc
imul
aas
push
jno
jno
or
and
pop
mov
out
mov
push
push
xor
mov
pop
cwtl
decb
imul
jae
orb
lods
int3
aam
xchg
test
out
js
xchg
lock
lods
push
push
mov
hlt
inc
adc
lea
out
out
or
shlb
mov
arpl
sti
xchg
movsb
rcl
sbb
cli
push
push
jp
stos
leave
add
mov
and
mov
jno
out
test
xor
cld
andl
jo
cmpsb
clc
or
adc
push
mov
mov
sbb
movsb
pop
roll
or
pop
insl
fidivs
cmp
pushf
aas
js
call
cli
stc
pop
ret
out
addl
add
push
shll
into
subb
or
mov
inc
jp
mov
jmp
lahf
flds
out
and
push
aaa
jmp
mov
loopne
gs
lahf
gs
fiaddl
lock
inc
push
push
mov
testl
jbe
pusha
not
jp
cmp
sbb
cli
push
push
cmp
pushf
fsubl
sbb
push
fmull
or
clc
popf
stos
lods
sub
mov
ret
mov
test
xchg
cmp
sub
mov
icebp
rcr
mov
jno
push
fnstcw
nop
pop
jns
sub
jbe
sub
xchg
fmull
loopne
aas
mov
push
loope
sub
jae
dec
mov
ja
adc
stos
repz
jno
inc
insb
mov
xchg
xor
pop
or
leave
jo
fdivs
push
loop
or
mov
cwtl
mov
mov
outsl
sbbl
jl
outsb
pop
leave
xlat
and
das
or
cmp
xchg
in
ds
hlt
call
jge
cmpsl
fdivs
bound
cmpsb
scas
xchg
add
shll
push
call
xor
into
scas
cmpsb
cmp
xlat
hlt
push
in
cmp
std
imul
movsb
jg
int
rclb
pop
mov
imul
mov
pusha
mov
xor
rol
movsl
addl
and
mov
adc
in
fs
icebp
scas
jle
xor
scas
data16
rcl
lds
fdivl
pop
mov
push
pop
mov
in
cmpsl
dec
sbb
inc
div
and
dec
call
cpuid
pop
cmp
pop
imul
add
es
push
test
cmp
notb
jne
pushf
jp
mov
push
fdivl
or
xchg
mov
dec
xchg
faddl
int
icebp
jmp
std
lahf
leave
ss
shll
mov
mov
mov
lahf
jb
cmp
lds
jmp
incb
test
jae
loopew
out
cli
pop
mov
je
fwait
arpl
xor
sbb
mov
cwtl
je
je
lcall
sub
sbb
test
inc
mov
insl
pop
in
push
test
push
mov
jne
fnsave
mov
loope
jno
xor
scas
jnp
jl
dec
mov
cmpsl
mov
and
jae
mov
sahf
and
and
sbb
rolb
int
jno
lods
lcall
cmp
cmpsl
xchg
shr
addr16
ljmp
inc
adc
ja
scas
and
xchg
es
mov
fsubl
sub
fs
fiadds
mov
stc
jno
rorl
div
adc
mov
aad
arpl
xlat
lock
or
lret
rcll
aam
mov
movsb
in
mov
idivl
out
or
push
cld
lret
adc
pop
ja
das
leave
mov
xchg
in
in
movups
and
mov
cmc
xlat
mov
mov
out
out
rolb
xor
push
mov
mov
add
popf
add
aad
mov
jl
sahf
xor
popf
jle
jp
push
int3
adc
ds
mov
lcall
pop
js
xor
push
aaa
inc
cmp
dec
sahf
push
push
insb
hlt
mov
sub
scas
aam
mov
sbb
ss
push
in
xor
nop
dec
mov
sub
jnp
arpl
pop
out
imul
popa
sarb
jbe
icebp
sbb
lock
mov
aad
mov
adc
xchg
test
and
xor
cmp
push
and
pop
test
or
xchg
lds
mov
lods
pop
jl
rol
jae
mov
setle
out
out
out
pop
outsb
rolb
pop
mov
clc
push
adc
xchg
jle
scas
ds
and
cld
leave
push
je
movlps
mov
add
xor
lcall
and
jg
pminsw
dec
out
int
cmp
cmpsl
and
flds
nop
mov
or
cmp
setle
xor
mov
mov
daa
push
cmp
push
dec
pusha
sub
jge
xor
xchg
jb
pop
and
or
cmp
sbb
out
add
add
add
jae
pop
add
mov
adc
scas
add
pop
jne
es
pop
hlt
stos
arpl
inc
add
inc
pop
or
call
mov
cmp
dec
test
and
div
lret
lea
pop
out
mov
cs
jg
and
push
ja
mov
scas
push
jmp
pop
cmpsl
xchg
jae
sub
dec
jle
cs
addr16
mov
cld
sbbl
adc
aaa
pop
add
cld
mov
jmp
pop
sub
enter
loopne
mov
popa
xchg
pop
popf
jle
cmpsl
inc
shr
inc
movsl
dec
scas
or
xchg
das
jp
dec
sub
adc
cmpsb
ja
enter
mov
adc
lret
push
cmp
adc
stos
loop
stos
mov
lcall
jge
incb
test
mov
mov
add
cmp
add
push
xchg
mov
data16
add
push
xlat
rcl
scas
pop
cld
popf
roll
lea
pop
sbb
dec
ret
insb
clc
shrb
insb
imul
aaa
scas
sbbl
out
lock
call
int3
das
mov
fstp
inc
mov
mov
xchg
adc
sbb
xor
adcb
adc
inc
insl
test
adc
add
scas
int
fwait
out
repnz
rolb
pop
aad
cmp
pop
or
sub
mov
and
shlb
sbb
fwait
mov
out
mov
pop
testl
shrl
xlat
cmp
cmp
pop
jg
stos
jnp
ljmp
inc
xor
fdiv
loope
pop
adc
dec
lret
inc
sti
sbb
insl
inc
decl
cmp
mov
push
ljmp
cmp
fistl
xchg
push
jl
xor
xchg
js
sub
inc
aad
roll
cld
pop
lret
aaa
xchg
mov
fwait
jns
lahf
mov
jb
jl
ljmp
pop
dec
aad
ret
fldcw
mov
inc
rolb
pop
outsl
scas
shl
fldcw
pop
push
sbb
jne
inc
rolb
jle
mov
inc
nop
pop
add
test
lcall
test
pop
lahf
or
cmpsl
roll
push
clc
add
insb
cmp
add
je
mov
inc
dec
xor
out
cld
pop
pop
sub
jecxz
mul
mov
push
inc
pusha
push
sbb
test
sahf
pop
mov
push
jo
es
rolb
data16
xor
insb
adc
xchg
jle
mov
jmp
inc
xchg
mov
jecxz
out
cmp
stos
mov
hlt
shrl
adc
pop
fcmovnb
add
ljmp
das
push
fwait
mov
ret
mov
scas
aad
mov
jo
pop
fdivs
push
ret
adc
stos
push
mov
lock
inc
xchg
test
mov
arpl
in
jbe
push
js
cs
rcrl
out
jge
in
adc
fs
jp
cltd
pop
push
lahf
into
sub
in
movsl
scas
mov
mov
sbb
sub
cmp
jecxz
jns
pop
js
aam
rcll
int
ret
fs
push
add
imul
and
out
stos
int
cmp
pop
fcmovnbe
int
sbb
shll
inc
mov
lahf
mov
shlb
fwait
stos
jb
dec
or
lcall
inc
hlt
push
fildl
lea
imul
das
xchg
jl,pn
xchg
jmp
pop
xchg
fistpll
test
subb
std
add
inc
je
cld
subb
or
orb
inc
xor
mov
and
repz
mov
adcl
mov
or
sbb
imul
std
test
push
xchg
sub
in
lock
js
mov
in
pop
loopne
lret
add
inc
shll
insl
sub
mov
jb
or
mov
add
push
fnstsw
sbb
jmp
mov
lods
sub
add
int
add
xor
jne
ds
xchg
mov
outsl
in
fucomp
ds
mov
pop
sti
mov
rcr
xchg
loop
je
sub
or
mov
ds
xchg
xor
test
mov
or
mov
xor
xchg
scas
inc
pop
js
stos
test
das
mov
dec
jns
adc
out
ret
and
push
pop
fucomp
lret
pop
sbb
aas
loopne
and
cmp
inc
iret
pop
pop
into
adc
cmp
inc
arpl
aaa
mov
inc
sbb
mov
in
inc
lret
sbb
mov
jne
add
fcomps
pushf
cmp
xchg
mov
pop
mov
ljmp
insl
pop
test
push
ficompl
inc
inc
push
insb
push
pop
sub
add
je
xchg
sbb
mov
cmp
sbb
or
or
mov
dec
or
push
out
mov
xor
mov
scas
les
fidivl
rclb
xchg
fldt
jb
iret
daa
xor
push
nop
mov
inc
sbbl
mov
mov
jecxz
mov
mov
push
cmp
mov
testl
xchg
movb
pop
sub
push
inc
sub
leave
lods
lea
clc
pop
mov
or
rclb
repz
xchg
adc
call
cwtl
je
adc
or
jns
pusha
jb
cmp
mov
sbb
movsb
rorl
jne
jp
and
sub
mov
mov
imul
fiaddl
roll
lahf
jle
inc
roll
pop
nopl
lcall
aaa
jle
adc
jle
enter
jle
loopne
push
sti
mov
cmp
push
or
insl
cli
push
sbb
dec
aam
orl
pop
inc
imul
repz
shrb
push
shl
xchg
pop
xchg
flds
outsl
xlat
cmc
add
xor
lcall
push
mul
pop
or
outsl
in
inc
fistpll
inc
comiss
mov
push
xlat
aad
xchg
xchg
cmp
mov
fsincos
pop
lock
imul
fisubs
bound
daa
mov
leave
cmp
ds
inc
shlb
in
fidivrl
scas
mov
adc
mov
es
shr
cmpsb
xor
jns
dec
call
icebp
adc
or
xlat
icebp
lock
hlt
sbb
out
das
repz
pop
cmp
mov
and
jbe
shrl
das
mov
inc
inc
push
mov
add
lods
push
in
mov
int
rcrl
mov
add
test
scas
adc
add
shlb
cmpl
aam
push
in
adc
test
pop
mov
sahf
ss
jae
adc
stos
scas
cmpsb
test
mov
popa
mov
dec
cmp
or
jnp
pop
popf
data16
cmp
out
insb
and
mov
mov
jl
hlt
inc
dec
mov
fs
jno
int3
push
xor
lcall
fcoms
lods
xor
outsb
inc
daa
mov
js
xor
adcl
xor
cmp
imul
hlt
in
pusha
ljmp
adc
lcall
clc
or
jbe,pt
push
jmp
mov
or
cmp
in
mov
or
stos
push
mov
imul
push
lret
add
and
mov
xor
sahf
add
ja
into
mov
push
sbb
dec
sarb
inc
inc
ficomps
sbb
fisubrl
cld
sahf
cmp
in
push
lret
das
lahf
or
or
mov
popa
testb
inc
and
cli
inc
stos
xchg
add
test
jo
mov
loop
sbbl
lahf
add
and
sub
stos
das
mov
sbbb
add
pop
sbb
sbb
xor
insb
movsb
ret
mov
cmp
cmp
std
jo
daa
jle
add
pop
mov
dec
ja
or
dec
cmpsl
adc
iret
jbe
push
popf
ljmp
mov
ret
dec
pop
pop
xor
mov
inc
mov
mov
scas
das
add
popf
inc
pop
je
xor
cmp
ficompl
add
popf
mov
dec
insb
ss
fists
aam
lock
xchg
imul
je
fs
mov
push
dec
or
repnz
stc
jno
inc
shrb
in
out
addr16
fdivrs
cmp
std
hlt
and
bound
or
daa
pop
inc
push
push
or
sbb
mov
pop
shrl
push
push
xlat
arpl
ret
ss
dec
loop
dec
popa
add
xchg
insb
or
lds
outsb
movsb
jne
pop
je
and
cmpsl
jno
push
fidivl
mov
mov
out
jo
mov
jge
scas
int3
repnz
notb
ret
sbb
jmp
jmp
fyl2xp1
add
js
mov
mov
cwtl
ret
jp
lock
and
pop
mov
loope
dec
aaa
nopl
outsl
in
push
nop
xchg
mov
adc
jecxz
or
movsl
add
into
fstpt
clc
fwait
sbb
imul
cmp
adc
out
sub
xchg
ror
divb
cmp
xor
xchg
inc
and
js
jl
mov
aad
dec
lock
fidivrl
mov
ss
and
insl
mov
arpl
neg
inc
lahf
sub
xor
out
std
mov
mov
repz
xor
and
add
push
cli
arpl
add
mov
or
sub
add
dec
inc
arpl
pop
inc
inc
sbb
and
xchg
jnp
sbb
cmp
je
jno
rclb
cld
lods
std
subb
mov
xchg
add
mov
xchg
jnp
mov
fsubp
push
das
push
mov
mov
cmp
xchg
xchg
cld
mov
dec
dec
jno
leave
dec
movl
mov
das
dec
in
and
and
jp
ja
hlt
imul
xor
rclb
xchg
or
mov
and
cmc
imul
outsl
rorl
or
test
cmp
dec
pushl
repz
imul
xor
out
aad
negb
jae
sbb
xchg
call
xchg
fistps
dec
les
pop
call
jl
in
mov
or
sub
push
mov
ret
push
js
cltd
sti
jbe
push
aaa
in
outsb
addl
imul
mov
cmpsb
setnp
xchg
pop
mov
pop
add
insl
add
push
loop
sub
or
cmp
xlat
cmpsl
or
jl
in
sahf
sarb
scas
lcall
or
mov
out
scas
jne
roll
subb
add
adc
test
popf
sbb
test
leave
daa
loop
or
sbb
outsl
movsb
getsec
adc
mov
cmp
jl
and
leave
loop
outsb
mov
pop
movsb
pop
xor
pop
push
sub
ffree
loope
sti
mov
sbb
xor
jb
push
xchg
popf
aas
sub
shlb
fcomp
xchg
outsl
outsb
dec
repnz
sbb
cmc
icebp
rcll
adc
lret
aaa
mov
sar
cld
inc
pop
pusha
js
call
pop
and
pop
lahf
xchg
cmp
xchg
jl
adc
xlat
inc
mov
sbb
icebp
cs
pop
bound
cwtl
inc
shlb
mov
push
lds
sbb
loopne
pusha
mov
dec
push
sahf
jle
in
pop
mov
mov
popf
outsl
int3
mov
inc
fdivl
out
ret
sub
fbstp
js
fsubs
loop
hlt
and
pop
and
jl
aad
sub
movsb
icebp
mov
ret
xlat
mov
or
sbbl
enter
add
aaa
jno
dec
add
je
sti
sub
pop
js,pt
push
add
sbb
cmp
xchg
sub
push
push
and
inc
fdivs
test
and
icebp
jno
fimull
fcomi
ja
mov
push
dec
pop
enter
outsl
push
jge
in
push
inc
cmpsl
fxch
divb
mov
pop
inc
push
or
scas
and
pop
xchg
pop
insl
sbb
das
mov
adc
jo
push
push
sub
not
pop
add
sub
nop
jbe
aam
mov
jo
ss
cld
fisubrs
xor
ljmp
xchg
jno
incl
mov
xor
adcb
shlb
fdiv
in
mov
ja
jae
cld
pop
xor
mov
mov
out
fs
outsb
mov
mov
addr16
pop
jp
pop
inc
stc
xor
jp
ljmp
inc
out
scas
xorl
dec
sub
stos
faddp
push
pop
fwait
nop
into
pop
popa
decb
mov
jl
jmp
les
inc
inc
inc
mov
xor
shrl
mov
adc
bound
out
or
rol
ret
dec
mov
fldt
cwtl
les
push
add
push
inc
add
cmp
push
inc
popa
out
push
adc
je
call
pop
ds
push
mov
jnp
pop
xor
add
inc
push
push
test
std
and
aam
jae
nop
mov
mov
and
mov
inc
inc
lock
pop
push
pop
inc
xchg
xor
stos
ja
imul
daa
mov
adc
add
inc
rorb
aas
sti
jmp
jo
scas
pushf
xlat
jp
mov
mov
mov
mov
loopne
shl
lds
aaa
push
mov
dec
fdiv
jbe
fisubrl
cmp
icebp
scas
cs
inc
xchg
jp
jmp
pop
fcompl
pop
daa
push
mov
sbb
das
out
sub
mov
shl
xchg
pop
cwtl
cmp
push
sub
dec
mov
xchg
inc
bound
call
scas
sbb
mov
jbe
mov
fnsave
lcall
jbe
jl
stos
cmp
fs
inc
pop
jl
aam
fstpt
imull
fdivl
pop
lods
dec
ss
dec
inc
test
mov
pop
shlb
jecxz
lret
repz
movsl
mov
sub
or
fs
xlat
idivl
mov
test
or
call
fsubrs
mov
in
mov
sbb
dec
test
push
or
cmp
push
cmpsb
add
jae
repnz
inc
inc
pop
ficompl
loop
sahf
sbb
test
mov
mov
inc
cmp
icebp
cmp
add
dec
and
data16
or
adc
adc
push
clc
mov
mov
scas
and
js
loopne
sbb
iret
mov
pop
loope
pop
dec
adc
insl
push
scas
mov
jo
mov
into
shrb
arpl
or
jne
insl
jg
adc
into
sbb
inc
daa
adc
ficomps
jge
push
faddl
cltd
or
pop
push
pop
mov
ror
test
mov
inc
daa
pop
dec
cmp
mov
int
int
dec
inc
cli
lret
sahf
ljmp
jge
icebp
xchg
je
push
pop
cmpsl
mov
jmp
pushf
hlt
sbb
mov
test
pop
dec
bound
jl
lea
xor
js
stos
insl
push
mov
call
jmp
dec
adc
aas
jne
fwait
call
cmovge
lret
sub
mov
mov
push
cmp
pop
into
adc
scas
mov
shll
pop
hlt
hlt
lock
mov
rcr
pop
inc
sbb
fnstsw
inc
movsb
fs
std
or
loop
fidivrl
inc
test
jge
or
das
nop
mov
add
xor
jle
mov
insb
mov
jb
push
rcr
jge
jl
mov
adc
jne
jl
jge
xchg
xchg
push
cli
sub
pop
pop
jnp
jne
rcl
sbb
mov
mov
shr
loopne
inc
xchg
push
nop
sub
lock
fwait
ljmp
xorl
add
jae
xor
fdivrl
push
popa
jp
push
sub
lds
fwait
cmp
pusha
popa
movsb
addl
jge
jp
insb
pop
push
call
ret
call
xor
std
cmp
cltd
scas
xchg
dec
pop
mov
push
cmp
daa
in
mov
clc
mov
xchg
addr16
dec
hlt
scas
out
xor
dec
loop
xchg
add
sbb
xchg
cs
sbb
xchg
aas
mov
mov
fwait
leave
and
fsubrl
stc
xchg
inc
into
lods
jnp
aas
push
outsb
in
sbb
sbb
xchg
outsb
call
jmp
pop
adc
xlat
fimull
testl
or
divps
add
lea
call
adc
ret
enter
pusha
adc
fstp
cmp
jb
sub
cmp
cmpsl
out
jne
loopne
adc
jle
add
add
inc
lock
pop
arpl
sub
ss
xchg
inc
and
outsb
sub
je
push
jne
push
outsl
jmp
and
xor
je
pop
pop
jp
mov
mov
xor
test
dec
jno
xor
xchg
enter
add
push
enter
ljmp
jne
scas
out
adc
clc
xchg
pop
jo
stos
push
data16
mov
rcll
sbb
mov
scas
test
iret
cwtl
dec
and
mov
fstpl
cld
cmp
rcrb
push
dec
and
mov
adc
ljmp
push
js
addb
mov
lods
test
neg
ret
imul
mov
ds
in
xor
adc
std
xchg
pushf
fucomp
add
bound
aaa
push
inc
daa
insb
out
cmp
stos
sbb
dec
aaa
add
je
cmp
icebp
inc
mov
inc
pushf
pop
push
rcrl
gs
sarl
adc
lock
mov
loopne
mov
adc
jne
xor
add
jl
js
push
jbe
mov
pop
mov
mov
cmp
enter
jae
cmc
hlt
jge
mov
sub
scas
pop
dec
adc
cmc
popa
jae
dec
jmp
popl
lea
jno
inc
insb
lds
sahf
sub
shlb
js
jnp
inc
enter
clc
fldcw
xchg
or
test
dec
xchg
add
call
or
mov
cmp
xchg
das
add
fistl
jecxz
ret
jecxz
mov
decb
lcall
and
mov
cld
push
pusha
or
cmp
sarb
arpl
pcmpeqd
insb
stos
stos
jae
xor
xchg
js
ficomps
add
orb
pop
sub
adc
mov
shlb
je
movsl
outsl
jecxz
add
lret
pop
ror
fstpl
mov
push
stos
jge
cld
std
push
in
jne
int3
pop
dec
mov
sub
loop
les
jle
in
and
lock
das
or
push
es
cli
dec
jle
insl
push
shlb
ljmp
div
push
xor
cmp
push
mov
mov
outsb
out
xor
lock
pop
xchg
lret
add
pop
stc
cmp
mov
rcr
aad
mov
dec
xchg
cmp
std
clc
fdiv
mov
mov
push
xchg
push
pop
push
aaa
iret
adc
fisttps
cmp
mov
mov
pop
iret
or
inc
push
jp
addr16
cmp
test
cwtl
mov
xchg
add
repz
bound
cmp
or
mov
pop
cmp
jle
roll
mov
fists
psrlw
inc
imul
push
push
inc
adcb
and
push
jge
loope
stos
mov
fcomps
or
sbb
fwait
repz
mov
dec
leave
fs
jp
mov
mov
imul
xchg
cmp
lods
push
mov
std
push
rcrb
push
mov
push
sub
pop
cli
fcom
scas
mov
jo
and
call
sbb
add
ljmp
fdivrl
sarb
push
or
push
pop
cmpsb
xor
mov
push
mov
ds
loop
in
cmp
jle
xchg
dec
xor
inc
push
movsb
inc
or
addl
shlb
pop
mov
push
test
out
aas
cld
mov
insl
add
xor
inc
hlt
and
sbb
dec
fistpl
or
and
cmp
pusha
mov
inc
mov
jae
test
cmc
scas
loope
cmp
inc
ja
ds
insl
xchg
jbe
in
hlt
jmp
xchg
js
les
xor
jbe
lods
jbe
inc
gs
or
mov
imul
sbb
pop
sbb
movd
out
mov
pop
mov
or
sub
mov
inc
je
out
popf
xchg
mov
addb
jb
jne
add
jns
loope
adc
test
fld
mov
test
cmp
std
das
or
jnp
push
cmp
jno
xlat
lods
add
in
jle
cwtl
outsb
fs
lret
loope
pop
sbb
adc
ja
sub
in
push
lods
cld
push
pop
inc
or
lods
scas
in
pop
lcall
pop
jg
out
fsubr
mov
mov
xchg
cld
loopne
mov
push
pop
out
fcomi
outsl
lcall
adc
xor
sbb
push
add
loopne
mov
add
add
into
lock
rcrl
sub
pop
cmp
mov
cmc
clc
inc
movl
mov
rolb
xchg
pop
js
mov
loope
adc
cwtl
faddl
into
cmc
jne
shl
pop
push
or
jb
fsubr
inc
cwtl
lods
add
ficomps
mov
std
push
push
cld
cmp
sbb
rclb
dec
and
loop
mov
js
sbb
sub
cld
cs
cli
pop
xchg
and
pop
sbb
jge
sub
test
pop
and
add
btr
ss
mov
movl
inc
sbb
mov
je
leave
mov
and
dec
popf
sub
pop
mov
ljmp
jno
cs
leave
dec
subb
mov
lret
mov
sbb
dec
pop
jge,pt
popa
aaa
aaa
push
ja
sub
in
mov
xchg
div
pop
mov
sbb
or
lcall
imul
pop
ffreep
aaa
test
mov
aaa
mov
mov
or
mov
ss
rcll
jmp
repz
push
xorl
outsb
popf
loopne
adc
cmp
insb
lcall
out
push
in
push
mov
subl
mov
test
test
imul
imul
dec
daa
je,pn
shll
or
push
insb
mov
iret
mov
dec
add
mov
fcompl
sbb
std
or
iret
add
xor
sub
xor
sahf
xchg
stc
push
push
fsubs
sbb
das
jl
mov
mov
mov
mov
lock
mov
pop
pop
cmp
test
jmp
adc
pop
call
fcom
ret
inc
adc
xor
fsubrp
mov
jno
pop
pushaw
pop
add
loop
sub
jbe
stc
sbb
out
jp
incl
jb
ja
jo
pusha
mov
jne
icebp
sbb
not
and
sub
aaa
dec
dec
enter
imul
pop
arpl
cmp
push
inc
ljmp
movl
sbb
mov
xorl
ss
or
in
mov
je
cmp
cld
ret
ret
mov
pop
jl
call
pop
push
ja
inc
shrb
addr16
mov
xchg
int3
xchg
sbb
push
mov
fcomps
imul
inc
insl
fnsave
movd
cwtl
xor
orb
jle
cwtl
pushf
push
fcos
cmpb
push
shrl
jmp
mov
fcoml
ret
out
ficomps
shll
pop
cmp
inc
insb
cmpsb
push
aaa
mov
xor
dec
sbb
lods
cli
loopne
iret
ja
aad
and
test
push
aas
rclb
cmp
cmc
add
pop
ja
mov
sub
test
out
cmp
cs
inc
ficomps
add
mov
rcrb
stos
subb
mov
mov
rorl
sarb
shll
iret
cwtl
adc
cmp
lods
call
icebp
out
mov
scas
xor
js
mov
sbb
sub
fists
sbb
xor
push
cli
mov
add
bound
fisubs
mov
cmp
clc
js
hlt
mov
sub
adc
sbb
mov
cmpl
enter
push
adc
fadd
outsl
mov
add
outsb
stos
mov
sbb
push
lods
fstpt
ds
dec
ja
adc
nop
loope
loope
jecxz
or
adc
adc
fnstcw
fimull
lret
in
sbb
and
inc
js
pop
xchg
cmp
ljmp
jl
fsubl
test
pop
cmp
loopne
add
pop
mov
in
mov
rcrl
cmpsl
stos
push
cli
mov
je
add
lods
pop
cmp
mov
imul
or
push
pop
pop
loopne
mov
fisttpl
lcall
js
sarb
sahf
mov
pop
push
sbb
mov
mov
jo
xor
push
lret
cld
mov
test
xlat
out
nop
and
gs
mov
fdivrl
push
pop
call
lods
push
cli
xor
xlat
jge
sbb
adc
ljmpw
cmp
pop
jg
xchg
mov
out
inc
dec
mov
enter
sahf
aaa
jb
out
pop
push
lock
sub
mov
pusha
mov
mov
iret
push
in
lods
lock
test
popa
sbb
stos
xchg
test
or
inc
push
mov
fwait
lods
fwait
pop
pop
imul
adc
xor
movsl
push
mov
mov
js
cli
mov
or
stc
adc
mov
sahf
and
setg
sbb
clc
es
mov
imul
icebp
inc
shll
andl
clc
pop
dec
mov
cmp
sbb
mov
sti
loop
mov
mov
mov
xor
jb
xorb
ja,pn
mov
jae
push
sarl
cmp
setl
bound
ror
stos
and
jl
aad
inc
ljmp
mov
or
cmc
lock
add
adc
cmp
xchg
lahf
push
call
mov
call
scas
popa
aam
stc
ss
xlat
inc
cmp
mov
lods
stos
mov
mov
cmpsb
in
sarb
test
mov
dec
add
leave
cli
call
out
and
xchg
ds
xchg
ss
xor
and
daa
add
clc
mov
pop
mov
pop
and
movsb
je
sbb
aam
aad
xchg
pop
lret
cwtl
xchg
test
mov
addl
inc
cmp
mov
lods
fistl
add
hlt
pop
adc
jmp
shr
add
mov
mov
sub
subl
out
scas
add
add
imul
lock
fcomps
loope
js
mov
add
jmp
sti
mov
mov
ss
xor
xor
ja
sbb
mov
or
lock
aas
jmp
jne,pn
xchg
jb
or
jge
es
test
pop
dec
fbld
test
ja
clc
lahf
lock
pop
mov
jne
mov
divl
and
jecxz
pop
shlb
xchg
lea
and
dec
cmp
loop
repnz
adc
jbe
hlt
orl
in
push
loope
xlat
sbb
je
clc
mov
enter
jmp
xchg
and
xchg
mov
pop
jo
mov
xor
push
ljmp
jo
fwait
sbb
dec
jb
mov
cmp
stos
xchg
push
xchg
in
fsub
jno
and
add
push
shll
mov
sub
inc
leave
hlt
and
addr16
stos
es
test
push
adc
imul
mov
push
sbb
add
push
jne
add
ljmp
test
add
data16
aam
push
aas
mov
add
mov
mull
popf
push
ss
test
fistpl
mov
rorb
xor
lea
jp
loope
hlt
roll
xor
mov
mov
push
addr16
clc
mov
bound
dec
pop
sub
sbb
movsb
sbb
cmp
push
call
jle
jge
sahf
add
mov
jge
clc
cmc
xchg
mov
fs
test
imul
cmpsb
dec
cwtl
stos
push
lods
js
sub
jle
pop
outsl
mov
add
scas
push
mov
push
insb
cmp
pop
cmp
imul
jle
ret
jnp
test
insb
dec
cli
push
sbb
lret
cmp
fdivrl
push
inc
loope
sub
jae
aam
lds
push
aad
jp
jne
mov
incb
xchg
xor
pop
xlat
mov
jns
clc
std
mov
dec
int
pop
jl
jp
dec
out
adc
popa
adc
loopne
imul
mov
mov
pop
js
movsl
inc
add
adc
mov
movsb
fwait
bound
mov
pusha
in
dec
out
or
xchg
cmpb
fwait
adc
loopne
call
mov
into
xor
lret
fbstp
adc
int3
jb
fmull
or
xor
mov
fistpll
jg
and
insb
mov
mov
enter
mov
add
js
sub
das
xor
mov
int3
in
loopne
inc
out
stos
scas
ja
or
inc
imul
mov
jns
popf
and
and
stos
jae
test
outsb
in
sti
test
stos
mov
lock
mov
shl
rorb
roll
shrl
insb
popa
and
sub
fwait
and
je
mov
icebp
sbb
lcall
aas
sub
call
and
fnstsw
loope
pushf
mov
ljmp
and
or
ds
mov
ja
movl
mov
repz
mov
std
push
decb
loopne
pop
inc
cmc
mov
or
jne
add
push
aam
and
lea
mov
jg
repz
mov
mov
sub
adc
imul
jge
jg
je
xchg
out
fimuls
add
pop
lahf
cmp
das
divl
shl
sbb
push
sahf
jbe
sbb
pop
push
ret
insl
ret
pop
sbb
cld
dec
jo
mov
sbb
mov
sub
cmp
push
mov
mull
pop
dec
outsb
mov
xchg
push
out
and
stos
pop
mov
lea
fucomip
mov
cld
jecxz
int
xchg
lods
cmp
aam
sub
ljmp
sbb
test
and
jo
sbb
fbld
or
outsb
and
xor
mov
sbb
cmc
adc
mov
push
out
sub
push
das
nop
pop
stos
mov
jl
ja
rcrb
xor
stos
test
xchg
adc
adc
inc
out
add
push
sbb
add
or
test
cmp
xor
adc
pop
cmpsl
int
xlat
ss
pop
mov
pushf
push
mov
out
mov
es
bound
or
dec
aaa
std
add
xchg
les
rol
or
lods
adc
cli
jo
repz
sbb
cli
mov
fcomps
insb
mov
aad
sbb
jo
outsb
lods
ss
aad
pop
ret
loopne
mov
test
jo
and
or
cmp
mov
pusha
subb
jmp
adc
lods
loopne
es
jecxz
imul
outsb
fisttpll
pop
sahf
xchg
dec
mov
stos
dec
rcl
add
fldl
imul
jmp
xchg
pop
daa
hlt
add
popa
mov
dec
test
clc
aam
xor
rcr
out
je
scas
xor
and
and
in
popf
fcmovne
jmp
sbb
inc
subb
jns
cmp
cmp
les
cwtl
dec
mov
mov
mov
mov
lds
and
mov
out
rcr
cmp
xchg
fldt
inc
fidivs
rorb
push
jne
add
push
rcrl
inc
lret
xchg
fisubl
cli
clc
add
sti
fistpl
ljmp
push
cld
mov
popa
call
xchg
mov
and
in
shr
xor
or
add
mov
mov
xchg
inc
rcr
imul
add
jl
push
in
hlt
mov
pushf
inc
daa
arpl
or
jmp
mov
leave
jo
add
mov
mov
lds
negl
loope
inc
sbb
sbb
gs
loope
xchg
incb
mov
adc
dec
cld
loop
scas
outsl
rol
jb
adc
movsb
mov
and
ja
mov
loopne
mov
out
mov
xlat
lds
cmp
movsb
mov
fimuls
fs
adc
xor
out
push
rcll
ss
dec
jne
mov
xchg
in
fnsave
int3
or
repnz
mov
cmc
test
call
mov
push
push
fcmovnu
loopne
fidivl
lea
subl
push
jne
and
jnp
andl
mov
gs
pop
outsl
dec
pop
clc
stos
or
pusha
inc
sbb
add
push
push
jno
push
daa
insb
sbb
std
jb
leave
cmp
cmp
fsubp
loopne
xor
adc
leave
xchg
lds
nop
push
sub
and
cmp
pop
dec
pop
sbb
mov
insl
js
adc
push
inc
push
ja
sti
push
icebp
fisttps
push
fmull
xor
xchg
xchg
inc
scas
or
mov
test
xor
rclb
jb
pop
enter
xor
cmc
pop
repz
aam
add
cmp
aam
xor
test
pop
ljmp
std
add
cmp
fwait
in
jmp
push
call
loope
outsb
cmp
push
fadds
jge
xor
out
shrb
pop
idivl
jp
jge
subb
aas
adc
push
pop
out
ljmp
dec
test
test
repnz
aas
insl
sbb
mov
mov
cmpsb
pop
pcmpeqb
sbbl
scas
cmp
orl
andb
movsl
in
or
cmp
sbb
and
js
cmp
xlat
xchg
jl
cmp
divb
xlat
dec
cmpb
in
adc
xchg
outsb
or
shll
dec
pop
xchg
icebp
loope
mov
mov
ljmp
dec
pop
cmp
jmp
push
out
pop
scas
jmp
jbe
iret
adc
xor
jbe
stos
xchg
add
adcl
nop
ret
cld
inc
mov
pushf
xorb
lea
or
fdiv
ror
pop
mov
into
fiaddl
addl
mov
popf
inc
stos
cmp
add
xchg
sub
cmc
aas
call
or
cli
fldcw
jb
ss
shlb
mov
ds
rorl
fsubrs
pop
or
je
cli
jo
notb
dec
sbb
inc
dec
loopne
adc
mov
jl
out
ja
int
in
test
rclb
outsl
mov
mov
mov
fucom
adc
pusha
xor
loope
add
push
xchg
push
dec
xor
out
mov
imul
hlt
ret
lods
dec
dec
and
jo
mov
mov
push
inc
push
rcrb
cmp
shll
xlat
adc
rorb
mov
std
clc
push
mov
xchg
adc
xchg
pop
or
js
dec
mov
xlat
xchg
fdivs
data16
sbb
addl
out
out
cmpb
fldl
and
das
jbe
push
fistps
rolb
sbb
cmp
push
daa
xchg
sbb
ficoms
sub
into
inc
mov
shrb
cs
adcl
mov
fisubrl
jns
outsl
adc
cmp
mov
mov
shrb
adc
into
daa
sub
std
jbe
add
xchg
push
mov
xor
enter
adc
mov
jge
je
mov
push
jno
dec
iret
inc
mov
mov
xor
xchg
insl
jae
call
push
push
dec
ljmp
fdivr
ljmp
je
sbb
sbb
cmp
cltd
add
adc
jp
mov
mov
faddl
jmp
add
mov
adc
push
push
call
pop
xor
fdivrl
mov
insl
pusha
subb
mov
jp
mov
sbb
sbbl
jns
stos
out
xor
fisttpl
push
lar
mov
dec
jo
decl
pop
fsubp
dec
jb
mov
rorl
jae
jno
in
xchg
addb
rorl
dec
in
and
dec
mov
pop
adc
inc
or
mov
loope
sbb
lock
insb
jl
inc
add
jp
packsswb
lods
mov
jg
loop
add
cmp
adc
inc
xor
sbb
sahf
ja
jmp
imul
stc
xor
jbe
sbb
or
fisubrl
jnp
in
fadd
cmp
call
mov
push
addr16
dec
cmp
sbb
fcoml
fldt
add
push
cmp
orl
loopne
xchg
fwait
cmp
xor
cltd
pop
ds
imul
xchg
mov
xor
in
jo
mov
lcall
mov
aas
stos
mov
sbb
xlat
sbbl
scas
pop
hlt
xlat
out
and
lods
popa
add
jbe
hlt
mov
push
aas
push
jbe
sbb
inc
cmp
cmp
dec
push
mov
outsb
js
cmc
imul
dec
or
push
lret
in
shrb
int
fisttpll
rcl
push
or
call
mov
not
andb
aam
daa
movsl
fisubs
xchg
xchg
pop
pop
mov
js
xchg
cmp
sbb
jne
xor
loope
mov
cs
ljmp
fwait
pop
inc
rcrb
inc
jmp
lahf
inc
mov
pushf
add
jl
loope
int3
cwtl
sbb
paddusb
xchg
push
leave
fistl
sbb
adc
inc
cltd
pop
or
inc
and
pop
fsubrs
mov
push
xor
mov
and
std
jl
xchg
dec
ficompl
cmp
bswap
push
hlt
icebp
push
xchg
mov
adc
mov
pop
ja
das
sbb
rcll
andb
adc
rcl
mov
insb
cs
cmpsb
in
adcl
aad
sbb
push
mov
sbb
mov
jp
in
subb
sbb
pop
ds
inc
ret
fcmovnb
xchg
jb
dec
call
pop
cmc
inc
add
sbb
cmp
push
or
clc
cmp
push
add
mov
call
loop
add
mov
push
nop
pop
dec
jns
mov
cli
jb
out
inc
xlat
fnstenv
xor
clc
jno
jne
push
jo
jae
sbb
mov
ja
mov
fisttpll
daa
sarl
jae
xchg
inc
sub
inc
mov
ljmp
or
cmp
jg
pop
dec
inc
jge
int
loope
clc
cmp
negl
push
dec
sub
jge
jo
fildl
mov
sub
cmp
mov
sbb
icebp
in
cmp
push
mov
fmull
fs
pop
or
mov
xor
mov
push
and
xchg
dec
daa
int
xor
aam
xlat
rorb
or
add
mov
sub
push
xchg
sbb
push
push
pop
push
mov
and
mov
popf
push
mov
js
call
test
jge
sbb
mov
cmc
call
mulb
sahf
cld
loope
xchg
mov
ja
mov
icebp
mov
adc
cli
jmp
imul
stos
or
push
cmc
addr16
fistpll
push
and
mov
mov
mov
inc
xlat
or
push
imul
jo
inc
inc
push
mov
aad
std
inc
neg
xchg
sbb
add
jmp
or
inc
ja
cmp
outsb
scas
lea
popf
rcll
push
xlat
mov
fwait
insl
repnz
push
lods
mov
call
cli
lahf
mov
sbb
sar
enter
popf
test
xor
jp
mov
loop
jge
and
inc
cmpsl
xlat
push
sub
enter
loopne
pop
lods
stos
rol
out
mov
add
mov
jge
pop
mov
sbbb
insb
cltd
ljmp
ss
popf
cltd
in
shrb
sahf
aas
or
adcb
xchg
xchg
rorb
adc
and
or
mov
push
lods
pop
gs
xor
mov
dec
fdiv
adc
and
mov
shrl
outsl
sbb
add
adc
pusha
jmp
and
cmp
jbe
ficompl
and
xor
push
pop
or
jg
movl
sub
ret
ss
push
xor
arpl
arpl
xchg
cmpsl
xchg
outsb
insb
or
push
push
gs
adc
clc
xor
or
enter
idivb
das
rorb
out
push
push
fdiv
cs
inc
or
xor
int3
push
cmp
stos
mov
ret
pop
scas
stos
popf
mov
iret
popl
push
dec
or
jecxz
jnp
pop
ss
aas
jle
jle
jge
add
mov
aad
push
xchg
shr
dec
loop
jmp
fldt
fwait
ljmp
cmpsl
loopne
hlt
pop
or
insl
adc
dec
or
adc
jo
sarl
or
push
lcall
pop
add
ret
push
scas
imul
mov
test
mov
subl
mov
mov
adc
rolb
xchg
movsl
pop
jl
mov
jle
jl
addps
pop
dec
aas
add
add
pushf
js
loopne
pop
cmp
je
mov
xor
pop
jecxz
mov
sub
xchg
loop
mov
adc
fs
sti
mov
jg
test
mov
jbe
sbb
push
jg
cmpb
loope
sahf
test
adc
scas
xchg
popf
mov
ljmp
inc
dec
inc
jle
mov
push
cmp
aas
fs
jae
cmc
aad
sbb
jle,pt
add
or
fidivrs
lahf
dec
cld
pop
mulps
xchg
pop
dec
mov
pop
es
sub
lea
adc
test
jge
xchg
cmp
mov
scas
pop
inc
mov
popl
idivl
movsb
loop
divb
pop
mov
add
ds
mov
out
mov
pop
mov
in
dec
sub
adc
jecxz
orps
jb
xchg
mov
or
rcl
and
and
xchg
xchg
call
inc
push
or
sbb
xchg
enter
push
enter
sbb
push
call
add
mov
sub
inc
fiaddl
aad
adc
movsb
cmp
adc
add
frstpm(287
insb
and
mov
in
mov
add
mov
lods
pop
jne
idivl
and
push
cld
les
xchg
movsl
push
cmp
mov
lahf
in
adcl
sahf
jle
mov
push
pop
and
icebp
pop
xchg
aaa
shrl
push
xlat
cltd
mov
cltd
shrl
rcll
cmp
cmp
test
jbe
stc
std
or
and
mov
enter
add
test
xor
insl
adc
popa
and
push
add
ss
frstor
push
push
icebp
pop
hlt
nop
aaa
ja
jbe
test
cmp
or
divl
jo
orl
inc
das
or
daa
and
jl
lods
or
mov
dec
loopne
imul
cmp
popa
cmp
rolb
mov
enter
cmp
cmc
shrl
push
popf
lret
out
test
mov
in
ret
ret
out
add
mov
mov
fdivr
mov
jl
dec
or
aad
mov
adc
jecxz
shl
jmp
jae
cmp
enter
adc
push
pop
ret
sub
xchg
ja
cmp
mov
dec
es
and
shll
fimull
out
mov
test
mov
sbb
add
mov
ja
lods
mul
mov
mov
sub
xor
inc
dec
sub
pop
test
push
push
sbb
pop
mov
mov
cmc
loopne
sbb
sbb
lahf
loope
ret
cmp
ss
cwtl
repnz
push
mov
bound
push
jg
je
mov
adc
push
aad
mov
xchg
cli
adc
lods
dec
jne
repz
mov
mov
jmp
fs
add
fsubs
jno
in
or
add
shrb
mov
pop
dec
mov
jmp
ret
movsl
pop
mov
push
testl
cwtl
aas
icebp
mov
mov
into
mov
cld
dec
aas
pop
jp
inc
xchg
xor
cltd
sbb
psrlq
push
mov
sti
pusha
sbb
sbb
es
fidivl
add
mov
loopne
out
outsl
adc
jp
mov
or
lock
fistpll
cli
fnstsw
ja
ss
aad
gs
pop
shrb
mov
cmp
lods
cmp
frstor
sbb
dec
jb
cmp
or
loopne
clc
or
cmp
inc
in
clc
out
adc
jo
or
fstpt
pop
and
fdivs
mov
cwtl
push
int
mov
inc
pop
pop
dec
shll
adc
cmp
in
add
jecxz
in
xchg
push
cmp
inc
nop
cmp
add
dec
popf
push
mov
je
xchg
test
rol
fwait
xlat
mov
insl
orb
loope
mov
in
pop
add
stos
stc
iret
incb
cmp
add
and
cltd
add
fcomp
jle
jmp
adcb
pop
call
xchg
gs
push
adc
pop
andb
add
iret
push
mov
jl
bound
movntps
adc
clc
test
add
mov
or
mov
repz
scas
add
cmpsb
mov
push
push
loope
sbb
out
mov
mov
xchg
lods
arpl
sahf
push
call
add
mov
mov
jmp
pop
sub
mov
lock
and
int3
push
test
jl
xchg
into
xorw
dec
ljmp
inc
imul
or
mov
pushf
ljmp
mov
lret
inc
pop
adc
jae
stos
lcall
sbb
cmp
pop
fcmove
or
cld
push
emms
insl
fcmove
hlt
incl
ss
add
lret
pop
or
push
dec
mov
sub
xor
loopne
jg
bound
mov
insb
aas
pop
sub
les
push
mov
and
and
inc
push
imul
lea
notl
pop
mov
pop
in
imul
add
mov
shrb
add
dec
shlb
add
sub
inc
popa
pop
jnp
fistps
orl
jo
out
add
test
pop
xor
push
sub
loopne
testl
push
insl
push
or
sbb
jp
shl
add
mov
mov
cmc
mov
js
data16
push
lds
mov
sti
and
fidivs
fnstenv
repnz
pop
movsb
xor
test
scas
mov
in
push
mov
mov
inc
sbb
or
push
faddp
xlat
mov
cli
push
lcall
loop
adc
sbb
mov
stos
push
xor
or
mov
cld
icebp
push
mov
jno
cmp
das
mov
dec
movsl
sahf
mov
or
push
sbb
testb
cmp
in
adc
mov
je
lods
sar
push
cmp
cmp
out
outsb
fs
int3
mov
add
inc
push
fsubp
pop
dec
pop
outsl
shlb
scas
aad
clc
repz
gs
ljmp
push
dec
notl
mov
add
ret
imul
jno
sbb
xchg
mov
mov
pop
jl
pop
clc
mov
inc
push
or
insl
adc
scas
loopne
imull
sub
inc
pop
shll
shrb
mov
xor
push
shr
aad
jge
incl
jge
sbb
pop
shlb
cmp
clc
sbb
or
cmp
inc
jmp
fidivrs
fcompl
int3
push
mov
pop
push
fidivl
dec
adc
outsl
xchg
xchg
push
cwtl
jnp
bound
out
movsb
in
and
je
mov
sbb
notl
jns
aas
sbb
xor
or
mov
push
rorl
xor
aas
sahf
sbb
push
outsl
data16
cwtl
roll
shll
add
jo
bound
rol
in
push
mov
imul
add
sub
push
fisttpll
das
pusha
mov
dec
sbb
xchg
subl
imul
jl
iret
out
mov
ret
sub
push
mov
lcall
outsl
mov
pop
ret
dec
cmp
or
jbe
cltd
outsl
ljmp
movsb
movsl
dec
mov
dec
cs
xor
aam
cmp
mov
hlt
test
imul
bound
rcrl
pushf
mov
xor
xchg
inc
and
addr16
cmp
adc
jae
dec
loopne
mov
xchg
lahf
xlat
repnz
pop
icebp
aam
jo
push
sar
jge
int
adc
adc
sub
outsb
mov
and
fisubs
sub
rcr
adc
add
fdivrl
inc
lcall
mov
sub
push
push
loope
push
xor
into
lods
or
cmp
aas
mov
mov
jmp
push
mov
stc
xchg
movsb
das
fisubrs
rorb
stc
vminsd
mov
inc
inc
sub
cmp
pop
mov
pop
imul
mov
in
ss
adc
dec
pop
and
push
mov
je
mov
pop
leave
xor
mov
mov
fstpt
dec
inc
xor
add
mov
scas
jmp
out
pop
add
lahf
lcall
xchg
sub
cmpsl
add
push
stc
pop
pop
mov
cmpb
popa
mov
xor
loop
imull
jae
hlt
xchg
mov
and
xchg
es
aaa
addl
mov
aad
hlt
js
jmp
into
push
and
or
icebp
leave
sahf
ds
mov
push
shrb
xor
mov
adc
cmpsl
addb
jmp
das
fdivrs
mov
aad
movsl
jo
js
cmpl
cli
imul
out
test
cmp
dec
pusha
add
pop
add
js
add
pop
sub
aaa
jae
mov
out
popa
loope
mov
cld
sub
pop
inc
cwtl
jl
outsb
clc
stos
aaa
sahf
jbe
jmp
and
in
push
xchg
jmp
test
xlat
mov
cmp
mov
lods
pushl
addr16
and
pop
adc
jo
repnz
outsb
xlat
xlat
xlat
cli
test
ror
or
inc
pop
dec
loopne
inc
adc
adc
dec
fldl
out
jno
hlt
ja
insl
mov
xor
es
fstl
adc
stos
mov
xchg
push
fildl
fiaddl
iret
fists
pop
mov
aam
push
insb
sub
je
jno
test
movsb
mov
push
xchg
outsb
jno
jbe
lods
jl
pop
mov
sub
pop
sbbl
pop
cmpsl
insl
and
push
dec
out
or
std
add
cmp
mov
loop
xchg
stos
stc
jp
test
inc
ret
sbb
dec
ficoml
ss
push
push
sbb
adc
or
jp
loope
or
xchg
lcall
and
mov
sub
rcl
mov
aam
push
mov
inc
inc
xor
cmp
jge
cmp
inc
insb
push
test
lods
jle
rcrl
add
pop
in
pop
inc
sbb
out
push
xlat
lock
inc
jg
fstl
xchg
fmuls
xor
roll
pusha
test
xorb
and
insb
jle
bound
or
scas
mov
xor
add
mov
into
adc
mov
inc
add
push
and
mov
arpl
add
sbb
std
mov
cs
pop
fsubrs
push
mov
sub
or
cmp
test
sti
xor
add
ja
cld
add
movsb
pusha
jmp
mov
cmp
sub
lds
xlat
push
outsb
adc
jl
sbbb
mov
inc
push
ds
lods
fidivs
cmp
cli
scas
pop
or
je
xlat
dec
push
xor
dec
cmp
ss
test
sarl
pop
mov
xor
mov
sti
sub
rcl
imul
xchg
push
mov
scas
sti
ljmp
lcall
mov
bound
in
cmp
outsb
mov
mov
add
mov
xor
ret
cmpsb
sbb
add
adc
je
adcl
xchg
jnp
repnz
pop
dec
je
fsubr
mov
daa
not
pop
testl
test
ret
in
loope
out
jmp
sbb
data16
mov
mov
mov
loop
jnp
mov
outsb
nop
inc
pop
mov
and
scas
cmp
sbb
das
jmp
and
and
pop
xor
cmpb
adc
or
jmp
add
add
pop
jl
push
ret
pop
int3
out
fs
pop
std
xchg
lahf
xor
call
jb
loop
mov
sub
xchg
add
fwait
cmp
mov
inc
and
jmp
pop
pushf
pop
sub
jl
cmp
inc
hlt
iret
dec
xor
test
cli
jp
push
cltd
jle
push
xchg
mov
xor
jnp
stos
ds
push
popf
fistl
lahf
xchg
shr
sub
ret
imul
pop
jp
dec
cs
mov
jp
xchg
daa
jle
dec
dec
mov
jle
inc
stos
out
adc
gs
adc
in
pop
xor
xlat
sarb
out
fsubrl
push
xor
leave
mov
pop
xchg
sbb
cmp
push
inc
xchg
mov
lret
jno
cmpsl
sbb
mov
gs
add
cmp
repnz
aad
cmp
or
out
inc
loopne
mov
idivb
inc
loop
icebp
sti
minps
ljmp
jmp
setno
xor
std
cld
ret
ret
push
jae
jg
or
clc
test
mov
insb
jb
mov
inc
cld
sbb
inc
add
cmp
mov
dec
xor
mov
push
movsb
xchg
sarl
jne
mov
roll
iret
cli
mov
adc
jge
cli
sahf
icebp
inc
mov
xchg
fs
dec
outsl
call
adc
sub
sbbl
fdivrs
xchg
sub
sti
push
mov
insl
mov
jnp
inc
dec
adc
mov
test
pop
ljmp
pop
dec
sbbl
stos
cmpsl
ret
outsb
test
fstpl
inc
loope
jl
push
xlat
fildll
xbegin
adc
cmc
adc
fwait
mov
jae
in
rcr
aaa
inc
xor
and
stos
shl
xchg
ret
xchg
mul
fisubs
mov
aaa
inc
test
mov
movsb
stos
push
push
jg
das
or
in
xlat
jo
lcall
imul
popl
jmp
orl
sub
mov
mov
xchg
popa
mov
es
lea
mov
pushf
lret
pop
dec
icebp
sub
add
idivl
push
pushl
fldenv
inc
push
push
mov
sub
push
out
sbb
sub
add
jmp
shl
inc
hlt
jg
je
adc
psubb
stc
sbb
mov
lret
test
divb
jb
xchg
jmp
jmp
push
and
shrb
mov
dec
cmp
idivl
cli
push
int
mov
inc
and
fadd
mov
test
and
popa
test
push
mov
test
and
add
xchg
test
or
push
xchg
add
loop
rcrl
add
mov
pusha
mov
int3
push
pop
ds
mov
jo
pop
xlat
rolb
add
inc
sti
iret
testl
xor
or
add
dec
test
mov
mov
inc
jae
mov
push
cmpsb
mov
cmp
lock
mov
cld
addl
subb
xchg
pop
push
add
or
jbe
sbb
call
dec
int3
xchg
and
cmp
clc
mov
lret
push
insb
notb
int
loopne
lock
sub
mov
mov
sbbl
ljmp
jo
mov
or
lods
fwait
pop
sub
insl
cs
jmp
js
dec
inc
jl
sbb
cmpsl
mov
mov
loop
mov
jl
fcomi
sbbb
mov
jg
stos
or
into
sbb
mov
jb
mov
fidivs
xor
jo
push
mov
pop
arpl
cmpsl
inc
cld
cmp
sub
pop
sbb
fs
idivl
jae
jge
hlt
outsb
xchg
daa
into
rorb
insl
rcl
mov
stos
out
xor
cmp
dec
push
pop
sub
push
ret
push
and
lds
and
in
into
je
mull
sbb
jmp
sbb
lods
jmp
loop
ja
stos
or
push
aas
cli
sbb
or
mov
cmp
ss
ret
in
pop
mov
and
sti
xorb
shrb
xlat
mov
push
pop
or
sbbl
in
cmpsb
adc
adc
cmp
jae
cmp
xorl
and
push
rorb
xchg
and
fsubrl
lea
cld
jae
mov
xchg
adc
fs
ret
jmp
mov
mov
jb
bswap
push
sub
mov
in
outsb
aas
jbe
mov
pop
push
in
mov
push
rorb
scas
lcall
jp
lea
adc
push
jnp
xchg
scas
mov
pop
push
cmp
inc
push
dec
out
test
je
loop
imul
mov
mov
and
sub
lock
mov
dec
jge
push
hlt
pop
sbb
js
xchg
or
push
jns
std
sbbb
loopne
mov
inc
jl
in
inc
rorb
loopne
push
push
sub
hlt
in
fidivrs
jp
mov
add
pop
iret
pop
insl
notb
cmpsl
mov
dec
sub
push
fcoms
js
sbb
lds
and
jb
ljmp
mov
mov
and
sub
scas
insl
sbb
lock
leave
insl
pop
scas
rcl
pushf
sbb
mov
mov
jno
sbb
add
and
jp
lahf
clc
or
mov
xchg
mov
stos
push
mov
adc
test
loop
clc
fcoml
add
or
pushf
es
add
push
xchg
and
lds
stos
xor
push
not
icebp
pop
pop
push
jmp
inc
jne
lea
ficoml
int
hlt
and
mov
popf
aas
shl
mov
sub
dec
dec
movsl
dec
out
dec
sub
xchg
addr16
shrb
xchg
in
add
and
loopne
jle
mov
fisttps
xor
lock
arpl
pmaddwd
mov
movsl
scas
lret
inc
sbb
orb
mov
jp
cmc
jb
adc
aam
fdivp
xorl
dec
fsubrl
mov
xor
dec
aas
add
xor
push
dec
outsl
notl
mov
add
lcall
outsl
out
test
loope
cmpsl
inc
cmp
fistpl
cmpsb
sbb
mov
or
pop
cld
cli
mov
sub
mov
add
test
pop
cmpsl
fs
add
push
sahf
push
jg
cmp
pop
int
pop
popf
shll
fistpl
popf
or
pop
ret
repnz
jnp
mov
dec
aas
loopne
mov
adc
ljmp
outsb
scas
jmp
outsb
dec
or
scas
or
sub
daa
repz
pop
fsubrp
or
rorl
je
mov
jb
cmovg
adc
les
fcom
adc
push
pop
movsl
les
xchg
jo
jb
sub
lds
add
lock
inc
cmpsb
stos
xor
or
xchg
mov
popf
lock
roll
mov
aas
jnp
sub
fst
push
mov
int3
and
and
popf
mov
scas
enter
xorb
fadds
roll
xlat
dec
or
pop
clc
arpl
ret
and
arpl
jp
decl
jl
or
mov
sbbl
or
pop
rorl
icebp
add
mov
mov
push
sti
add
icebp
into
mov
jbe
mov
mov
pop
dec
scas
push
hlt
push
stos
loopne
and
lcall
xor
test
jge
ret
fs
jle
sbbb
icebp
xor
dec
popf
sub
int3
mov
xchg
bound
scas
testl
test
mov
xor
push
mov
xor
adc
in
mov
fstpt
adc
xor
jne
lret
xor
bound
and
cmp
inc
fldl
adcl
subb
ljmp
xor
sub
icebp
clc
cltd
xor
scas
fisubrs
mov
pop
shll
test
loope
es
and
push
test
jmp
popf
outsl
je
sbb
xlat
ret
ret
xor
inc
pop
sbb
hlt
roll
lret
jecxz
add
icebp
aam
je
out
popf
pop
mov
adc
pushf
adc
add
bound
shl
test
mov
and
in
adc
in
mov
cmp
push
dec
and
stc
pop
divb
fidivl
cmpsl
cmp
mov
mov
js
addl
mov
insl
cmp
fidivrl
hlt
outsb
xor
mov
movsb
mov
cltd
lret
mov
or
push
sbb
std
dec
pop
sbb
sbb
mov
push
adc
jb
xchg
movsl
xchg
jp
pop
out
cmp
mov
push
pop
dec
pop
xchg
ljmp
jmp
or
cmp
dec
arpl
gs
jmp
inc
push
xchg
outsl
push
inc
aaa
pop
pop
mov
iret
scas
in
sbb
jmp
sbb
test
mov
inc
orl
je
push
outsl
or
movsb
dec
pop
pop
loop
mov
fadds
popf
jmp
push
pop
js
xlat
mov
jbe
pop
es
adc
xchg
cmp
jmp
sbb
or
mov
pop
test
push
pop
ret
push
sub
out
jnp
jo
clc
inc
fistpll
and
push
lea
daa
mov
cltd
int
push
push
ds
cmp
fdivl
popa
jnp
pop
pop
mov
push
mov
pop
fs
movsl
inc
rorb
or
insb
cmpsl
xchg
inc
imul
sbb
jl
lcall
xchg
jo
cmp
pop
loopne
xchg
xchg
shl
orl
pop
rcrl
loopne
mov
mov
inc
stos
movsl
rolb
movsb
dec
sbb
jg
inc
out
repnz
pop
mov
jge
stos
xor
cmp
scas
test
test
add
xchg
ret
cmp
loope
shlb
mov
in
hlt
jg
aaa
xor
lret
mov
neg
sub
sub
mov
outsl
dec
cmp
dec
sbb
int3
sub
cmp
dec
pop
into
xchg
pslld
ja
xchg
movsl
xchg
movsl
shlb
mov
fisttps
lock
out
pop
mov
pop
mov
mov
idivb
dec
pushf
mov
xor
mov
aam
mov
cs
addr16
out
loope
lock
aam
sti
pop
xchg
add
push
mov
loop
push
clc
call
pop
ror
je
shll
push
mov
push
pop
pop
cmp
loope
jne
inc
cld
into
sub
lcall
loopne
out
and
clc
ds
aaa
inc
aad
or
imul
mov
mov
out
pop
call
jle
mov
fsts
cmp
in
std
pop
insb
sbb
cli
push
inc
mov
adc
pop
add
jp
or
das
pop
push
adcl
pop
sbb
aas
lret
push
xchg
dec
icebp
hlt
jne
pop
das
sbb
pop
sti
mov
movsl
fsub
in
push
fldcw
ret
cli
sub
adc
sub
out
mov
addl
inc
add
xchg
fndisi(8087
jecxz
insb
push
imul
cmpsb
ds
repnz
shr
in
add
arpl
mov
stos
rorl
mov
ds
and
mov
aas
mov
pusha
jmp
adc
jo
mov
pop
jge
mov
scas
jp
xchg
xor
imul
addb
jmp
mov
and
add
adc
scas
nop
idivb
and
lcall
int
hlt
shl
je
sti
ljmp
pop
lods
loop
lcall
sti
push
fildl
loopne
mov
jle
repz
test
inc
cli
lret
lea
jbe
and
push
lock
lea
sbb
mov
adc
jno
dec
lds
out
cs
dec
cmpsl
jo
mov
adc
pop
mov
neg
cltd
leave
add
jle
dec
rorb
sbb
inc
cmp
mov
dec
mov
push
mov
fucomip
mov
call
and
push
cli
push
xchg
pop
sub
push
cmp
mov
xchg
xchg
cwtl
adc
dec
mov
aaa
std
mov
aas
jl
cltd
repz
fwait
jbe
push
adc
push
mov
lods
push
arpl
faddl
insl
add
push
cmp
adc
push
dec
mov
pop
adc
aaa
rcrb
lahf
outsl
pop
mov
repz
jne
scas
mov
add
add
mov
cmp
add
push
lahf
scas
or
adc
jl
xor
inc
lods
add
shll
inc
push
and
subl
pop
xchg
and
cmp
fiaddl
gs
xchg
jae
std
jns
mov
out
cs
ss
adc
cwtl
mov
jp
mov
outsb
arpl
sbb
xlat
clc
popa
jp
add
sub
xor
xor
inc
insl
jmp
addr16
cmp
scas
movl
sti
mov
add
pop
dec
aad
add
xchg
popa
add
add
pusha
fistl
fbstp
pusha
cmpsl
mov
js
lock
push
jp
stos
fists
pop
add
divb
mov
inc
test
mov
xlat
aad
decb
jmp
in
popa
cmp
pop
js
shlb
sbb
xor
inc
push
insb
push
xlat
lret
pop
mov
adc
sub
fnstsw
pop
adc
decb
aas
add
insl
xchg
insl
pop
sbb
clc
jb
dec
into
push
sbb
mov
or
add
fidivs
push
xchg
jne
jl
push
repnz
lcall
jnp
loopne
xchg
cwtl
loop
rclb
or
scas
push
inc
jmp
sub
dec
out
fwait
lods
or
and
add
movsl
mov
xor
fdivs
mov
popa
stc
adc
add
jns
mov
in
sub
xchg
pop
cmp
fmull
inc
cmc
jbe
pop
icebp
pop
mov
pop
enter
dec
insb
scas
jne
inc
mov
adc
xlat
hlt
shlb
cli
or
adc
out
adc
xchg
jmp
fwait
dec
popf
imul
cmp
ror
popf
adc
cmp
js
sbb
mov
fisubl
daa
push
icebp
inc
out
clc
pusha
gs
popl
xor
mov
add
cmp
jmp
sarl
cld
mov
imul
and
psllw
cmp
arpl
adc
out
xchg
outsb
inc
mov
icebp
mov
push
popf
arpl
aam
test
ret
stc
mov
jmp
pop
jbe
xor
leave
sti
adc
inc
stos
and
jne
loop
push
fdivrs
mov
pop
clc
jno
and
add
fs
scas
paddusb
lret
mov
andl
jnp
mov
dec
cmp
mov
cld
dec
mov
push
mov
imul
mov
aam
xchg
test
jne
cmc
inc
rcrb
subb
mov
aad
pop
ret
dec
or
fistps
ds
mov
movsl
xchg
push
ret
out
jo
push
rcrl
cmc
ja
shrb
ljmp
in
or
hlt
testb
sub
jge
sahf
jle
and
mov
out
push
aam
xor
cli
cmp
fdivrl
loopne
imul
mov
cmp
loope
sbb
or
incl
mov
stc
mov
push
das
les
push
aad
loope
fstl
lcall
sub
sbb
push
xchg
mov
add
rclb
mov
mov
fstl
cmpsb
pop
xchg
into
repz
test
out
adc
mov
jle
cli
mov
or
lock
addr16
cmpsl
pusha
sbb
sbb
je
dec
jg
bound
add
addr16
stc
rcr
cmc
fnstenv
mov
pop
jl
arpl
fbld
sub
cltd
add
mov
push
xchg
fcompl
add
xchg
inc
gs
or
das
gs
lahf
mov
call
out
add
scas
sbb
push
xchg
or
and
mov
jne
ja
dec
and
hlt
jge
sub
hlt
cmp
sbb
enter
loopne
popf
arpl
fcomps
aas
jl
ss
fucom
dec
sub
pop
mov
jge
sbb
inc
inc
mov
dec
jne
pop
fnsave
js
pusha
into
call
out
mov
clc
addl
jge
push
mov
fldenv
cmc
repnz
mov
lea
mov
das
loope
or
orb
jno
cmp
mov
dec
enter
inc
jge
jbe
mov
mov
adc
ds
test
jb
arpl
cmpsb
aas
ret
into
add
jl
insl
mov
jno
push
pop
outsl
pop
loope
call
addr16
mov
mov
dec
sbb
add
loope
add
xor
push
add
sbb
scas
xchg
cmpsl
or
push
cmp
pop
dec
sub
jbe
mov
pop
cmp
out
roll
inc
rcr
inc
in
pop
mov
mov
mov
inc
addb
jmp
xchg
push
jno
adc
loopne
aam
mov
mov
mov
adcb
dec
xor
pop
mov
push
sub
adc
adc
orb
mov
or
mov
cs
loopne
ss
in
subb
sub
mov
lret
and
outsl
mov
mov
rclb
in
adc
mov
insl
jnp
arpl
movsb
sbb
ret
add
ret
js
cmp
cmpsl
mov
lret
mov
push
or
dec
jo
jne
shlb
fs
adc
sbb
and
xchg
inc
movsb
xlat
roll
jbe
xor
ljmp
jle
ljmp
pop
mov
sbb
rcr
pushf
lcall
pop
push
and
lret
mov
sahf
ret
mov
cmpsb
pop
sahf
jb
sarb
inc
sbb
fbstp
dec
sbb
cli
inc
push
sahf
outsb
sub
push
sbb
in
push
in
aas
and
sbb
enter
in
inc
pushf
ds
fidivrs
loopne
mov
js
int
pop
call
ja
pop
mulb
int3
push
inc
hlt
shrl
xchg
sbb
popa
mov
fiaddl
inc
call
push
push
nop
jb
ret
stos
jmp
std
or
sarl
loop
cs
mov
in
outsl
push
jo
clc
dec
or
pop
dec
mov
jge
add
test
lods
aaa
add
jge
test
jo
ret
das
cmp
xchg
or
in
mov
push
insl
addb
add
mov
std
fsubrs
cld
pop
jns
insb
sub
xor
aas
push
xchg
mov
sbb
adcb
push
xor
mov
sbb
push
mov
add
ret
push
sbb
push
pop
cmpsl
xchg
lods
fwait
insl
jp
js
les
scas
jae
mov
push
rolb
xchg
out
movlps
mov
cmp
mov
mov
cli
test
or
scas
mov
ret
or
sub
cmpsl
es
mov
cld
add
xor
arpl
cmp
mov
mov
cmpsl
mov
mov
xlat
mov
mov
mov
lods
ret
imul
cld
js
lock
lock
ret
mov
cmp
fcoml
in
js
lcall
push
inc
jge
stos
out
xchg
jp
inc
ja
dec
inc
nop
adc
jbe
mov
out
negl
pusha
mov
cmp
push
stos
test
push
hlt
test
add
pop
fwait
or
enter
push
addb
fistpl
add
push
cmp
cmpb
fldcw
out
into
loope
push
stos
fistpl
mov
mov
rclb
notb
cmp
or
out
inc
out
mov
in
cmp
inc
sub
mov
lock
pop
mov
push
dec
cwtl
mov
cmc
jge
int3
dec
add
out
stos
outsl
mov
fucomip
call
cmp
add
ret
not
xlat
lods
hlt
xchg
ja
or
out
mov
adc
sbb
lret
sbb
inc
mov
jnp
inc
pop
mov
push
push
and
mov
mov
mov
pop
push
cmp
fadd
xor
es
xor
loope
xlat
data16
insb
xchg
jbe
scas
cmpsl
cmp
fadd
div
sbb
test
mov
pop
hlt
inc
inc
jle
lcall
cwtl
and
mov
inc
bt
in
aas
sbb
mov
inc
cli
lock
or
fistl
mov
jnp
and
gs
ficompl
ljmp
ret
test
mov
pushf
movsl
arpl
add
aaa
scas
jle
mov
fisubrs
leave
lds
or
mov
mov
xchg
xorl
sbb
jge
test
divps
clc
lock
aaa
in
jle
in
mov
mov
das
add
loopne
mov
lcall
inc
popf
and
rorb
jp
xor
fstl
adc
or
sub
mov
xor
mov
sti
cmp
xor
mov
popa
xlat
xchg
pop
and
pop
lret
sub
jecxz
insb
in
out
leave
or
mov
fidivs
into
pushf
in
sbb
jle
xchg
mov
jmp
ljmp
adc
incl
call
clc
out
or
cmpsl
popf
pop
lahf
xchg
mov
jge
or
mov
faddp
dec
mov
mov
mov
inc
mov
lret
xchg
add
adc
int
fisttps
xchg
iret
xchg
xchg
jmp
stos
cltd
pop
ficomps
hlt
push
lds
adc
xchg
cmp
inc
ds
inc
xchg
xor
xchg
mov
pusha
ja
popf
add
sub
sahf
mov
mov
icebp
bound
daa
cmp
lahf
cmp
iret
xor
xchg
test
or
loopne
repnz
mov
cmp
in
cld
adc
loope
rcr
fcmovbe
push
fstps
cmp
jecxz
pop
mov
jae
scas
cmp
and
xor
cmp
ret
mov
outsb
ss
or
mov
push
mov
mov
or
cvtpi2ps
scas
insb
cmp
fxch
cltd
mov
pusha
data16
outsb
pop
jl
insl
xchg
je
push
mov
test
mov
fidivs
or
into
call
andl
cmp
ja
inc
add
or
pop
adc
inc
and
xchg
sbb
ret
xlat
cltd
sbb
xchg
pop
push
loopne
fsubs
test
aam
add
je
dec
fwait
sub
loop
icebp
scas
popa
pop
in
mov
int3
mov
cs
inc
fwait
pop
hlt
sub
inc
ret
scas
mov
push
pop
mov
addr16
es
xchg
out
pop
loope
jmp
xchg
add
jp
mov
lds
loop
jae
aaa
ss
mov
mov
pop
or
jae
sub
es
sbb
xchg
loope
pop
pop
pop
mov
and
cli
lock
lock
mov
push
cmc
adc
sbb
xchg
fnstsw
mov
insb
cli
or
stos
add
jecxz
jno
and
xchg
lock
data16
cmp
dec
test
daa
mov
xchg
sar
cmpsl
inc
fwait
std
subb
adc
push
idivb
adc
std
inc
ja
clc
and
jge
pop
dec
movsl
in
inc
push
mov
push
sti
shll
mov
shr
or
nop
adcb
cld
adc
fcomps
mov
and
push
icebp
adc
or
lret
into
packsswb
loopne
mov
jbe
sub
xchg
fmull
xchg
int3
pop
shr
pop
test
dec
add
xor
and
es
loope
mov
hlt
loopne
xchg
lds
mov
mov
push
lret
stos
leave
pop
xor
xchg
out
xor
jb
cmp
cmc
jb
jo
xorb
shrl
inc
out
mov
dec
jo
aaa
mov
pop
ret
xor
stos
in
mov
sbb
xchg
cmc
xchg
fcomi
and
inc
pop
outsl
ret
sbb
pop
ss
mov
jne
and
cmp
or
shr
lods
jo
pop
in
mov
mov
and
xor
ljmp
mov
rcrb
cmp
stos
mov
jecxz
nop
enter
mov
pop
out
cli
ret
cld
mov
mov
sbb
jle
jge
mov
jns
mov
jb
shlb
add
or
std
cmp
push
es
sub
push
sub
xlat
xor
mov
sbb
jl
push
mov
je
mov
cmp
sbb
pop
adc
insl
xor
repz
fiadds
or
out
movb
loop
push
cmp
popf
popa
inc
xlat
rorl
push
adc
push
add
push
inc
scas
jnp
lods
inc
jae
mov
jo
cmpsl
out
mov
and
or
push
out
xor
les
sbb
rorl
push
cmp
xchg
out
stc
popa
hlt
jmp
into
in
in
cmp
lods
es
sbb
das
inc
sub
or
loope
adcb
orl
mov
cltd
xchg
mov
sub
jecxz
adc
cmp
sbb
fdiv
lock
cmpsb
and
mov
clc
call
and
xchg
or
dec
mov
in
pusha
movsb
iret
data16
or
cld
loope
in
clc
mov
outsb
jo
mov
iret
fwait
mov
mov
cli
mov
iret
cmp
xor
dec
sub
or
push
add
into
xor
mov
orl
pop
ret
xor
sub
cmpsl
cmpsl
adc
sub
cmp
fstpl
lock
jg
and
cld
out
mov
cmp
sbb
lods
pushf
push
and
adc
mov
jb
mov
stos
xchg
std
fiadds
popf
fistpl
pop
pop
fidivrl
mov
pop
ret
data16
xchg
sub
pop
fsubrl
pushf
movsb
shll
filds
adc
jbe
cmp
imul
mov
es
cmp
mov
in
and
sbbb
and
cmp
mov
sbb
pop
aam
dec
sub
imul
les
js
cmp
imul
add
fdivrl
sbb
loop
jge
push
jp
hlt
or
push
push
xchg
sub
aad
xor
push
ret
pop
mov
push
inc
push
mov
shll
icebp
pop
push
jg
or
lods
inc
jns
xlat
cmpsb
or
mov
aad
je
fildll
pop
aam
jbe
call
pop
scas
or
outsl
int
jno
ja
dec
sar
cld
push
jge,pt
ss
sub
mov
xchg
pop
not
mov
in
movsb
pop
xor
in
mov
adc
mov
ds
jo
cmp
add
adc
rorb
lcall
dec
xlat
cmp
jbe
adc
aas
std
jge
and
mov
xchg
cmp
sbb
lods
xchg
mov
mov
and
scas
scas
stos
insl
lock
cmp
test
pop
inc
cwtl
loopne,pt
push
pop
outsb
sbb
mov
mov
sbb
leave
es
dec
imul
out
sbb
fstpt
jae
stos
dec
and
sti
push
mov
mov
push
in
sbb
int
popf
xchg
cmp
in
fstpt
add
je
pop
in
and
add
sysenter
je
or
cmpsb
test
scas
das
mov
adc
jmp
hlt
push
add
je
in
in
mov
pop
rcll
jp
add
out
test
in
push
aad
lahf
sbb
mov
pop
mov
push
loop
mov
xor
inc
in
cli
aam
add
sub
test
cmpsl
fwait
out
lret
inc
mov
mov
lcall
jp
cmp
mov
icebp
fdivrs
out
mov
push
mov
popf
or
icebp
sahf
and
popf
push
inc
xchg
in
lcall
and
test
jmp
jo
ds
jbe
fucomip
les
push
inc
int
in
inc
mov
and
lods
ficompl
gs
js
cmp
outsb
pop
clc
stos
lea
movsb
lock
insb
cs
ds
push
jle
nop
popf
pop
add
mov
jnp
out
cmp
ficompl
into
cmpsb
dec
xchg
fldcw
movaps
insl
vpsubsw
iret
jae
notb
sbb
loopne
mov
lods
and
jae
or
movb
xchg
insb
dec
or
adc
push
rclb
daa
sahf
pop
movsl
clc
faddl
pop
pop
push
popa
mov
ds
mov
mov
xor
cmp
jle
aaa
fcompl
addr16
dec
in
jecxz
or
mov
movsb
push
cmpsb
inc
cmc
xchg
mov
inc
mov
call
mov
mov
leave
dec
sbb
jp
scas
imul
ja
xor
dec
push
cmp
lahf
mov
mov
cmp
push
xor
das
push
mov
jmp
rcll
add
outsb
loope
mov
jl
mov
dec
adc
ret
sub
fstpt
mov
pop
lret
cli
cmpsl
idivb
pop
pusha
push
enter
inc
mov
sbb
stos
mov
adcb
hlt
xor
lahf
cmp
add
adc
jnp
sub
mov
bnd
xor
or
arpl
pop
or
pop
fwait
hlt
or
jp
cmp
mov
jmp
push
popf
shl
mov
lret
sbb
mov
pop
xchg
loopne
sbb
rclb
adc
pop
sub
hlt
pop
sbb
push
aaa
aad
adc
pop
out
sbb
mov
stos
mov
ljmp
negl
shll
jbe
in
sub
push
mov
scas
fcmovnb
scas
cmpsl
jnp
out
add
inc
sub
les
xchg
sub
fildll
jle
pop
mov
sbb
mov
mov
insl
ljmp
push
insl
and
xchg
and
cmp
jle
testb
popf
mov
cmp
pop
dec
pop
mov
cs
cs
add
mov
out
fstp
outsb
out
sub
roll
nop
and
aam
int
push
jo
inc
pop
or
fwait
clc
xchg
in
iret
cmp
dec
push
clc
insl
insl
arpl
stos
jo
fucomi
jecxz
jmp
aaa
push
or
test
cmp
faddl
sbb
arpl
adc
mov
aad
mov
push
lea
dec
mov
outsl
sbb
xor
cli
push
lahf
dec
shrl
mov
out
ret
mov
cmp
lock
pop
cmp
stos
ljmp
adc
mov
subl
testl
xlat
movl
sbb
rcl
jl
xchg
push
push
cmp
inc
pop
je
add
insl
fistl
push
cwtl
insb
test
cmpsl
mov
dec
pop
fstpt
jbe
mov
mov
out
adc
clc
jno
mov
das
cmpsl
dec
fmuls
repz
stos
push
ficoml
mov
aad
fs
cpuid
in
xor
dec
sub
js
enter
sub
xchg
jno
clc
fsubs
stos
int
je
cli
sub
mov
cmp
aad
sbb
addr16
push
and
pop
xor
les
inc
sahf
rolb
ret
pop
clc
aad
out
je
push
mov
sahf
call
dec
pop
out
add
xor
testl
add
push
jne
sbb
rcl
movsl
push
jne
std
cmp
inc
inc
sub
into
lods
loope
test
dec
mov
sub
add
mov
jecxz
aam
js
add
xchg
or
jo
or
or
or
xchg
mov
inc
les
lods
test
cmp
and
push
sbb
test
xor
adc
daa
adc
jp
bound
mov
dec
ret
dec
test
call
jne
jnp
adc
insb
inc
cmp
add
lods
cs
mov
cmpsb
in
inc
adc
arpl
jle
jg
mov
adc
dec
into
push
cmp
repz
mov
xchg
aaa
sub
test
arpl
mov
push
pop
jge
or
or
inc
adc
push
ss
int
sbb
inc
cmpsl
inc
rorl
jg
push
les
mov
mov
or
push
loopne
arpl
jge
mov
mov
cs
sub
xchg
mov
je
xlat
in
pop
mov
rorl
add
mov
call
xor
pusha
push
cmpsl
dec
adc
push
mov
test
mov
shll
lret
add
test
ljmp
pop
pop
mov
mov
test
out
loop
add
cmpsl
vpackssdw
jecxz
outsb
or
mov
and
movsb
mov
dec
sub
ds
jbe
je
xchg
jns
ds
inc
inc
nop
jle
in
jne
shl
xchg
mov
jnp
mov
clc
mov
icebp
adc
ds
and
sahf
fsubl
jbe
popf
clc
cmpsb
adc
sub
cmpsb
add
or
jecxz
mov
cmp
mov
ds
sahf
cmp
push
icebp
pop
fnsave
arpl
in
mov
sub
fucomp
lock
test
fistpll
out
sbb
shll
dec
das
and
lret
stos
insl
js
popf
fdivs
mov
push
lret
jnp
cmp
scas
lods
imul
into
jecxz
into
stos
clc
and
js
cmp
push
fstpt
mov
cmp
outsb
lcall
dec
je
mov
mov
or
jecxz
not
push
mov
adc
std
ret
dec
sbb
repnz
xor
inc
inc
testl
cmp
push
pop
jecxz
xchg
pop
nop
insl
cmc
mov
jmp
mov
leave
sbb
cmc
sbb
mov
pop
movsb
outsb
ret
pop
mov
pop
sar
cli
cmovae
setle
xchg
adc
adc
lock
outsl
roll
pop
and
negb
sbb
sbb
jb
lds
jge
add
inc
fildl
xchg
and
divb
add
jmp
cwtl
jbe
pusha
enter
enter
aam
idivl
ja
cmp
mov
push
mov
add
outsb
pop
comiss
and
inc
les
cld
mov
mov
or
lcall
mov
push
into
jo
xor
sbb
ret
xchg
sbb
cltd
xchg
into
gs
pusha
sbb
popa
mov
pop
push
mov
iret
mov
push
mov
cmp
out
mov
xchg
ljmp
imul
inc
inc
dec
in
mov
cmp
add
pop
push
aaa
dec
sbb
pop
fnstenv
in
inc
lods
arpl
adc
shlb
mov
pop
dec
ja
jns
lahf
fs
aam
mov
int
inc
xchg
cwtl
ficoml
div
roll
stos
fs
adc
adc
iret
dec
sub
jge
pusha
jae
in
push
call
xchg
aam
mov
adc
xchg
data16
subb
imul
push
sti
out
test
sbb
cli
outsb
loope
aas
je
sahf
enter
testl
mov
aas
xchg
and
imul
fsub
xchg
mov
popf
ret
insl
mov
jns
fildll
cmp
xor
sti
ror
mov
aaa
aam
push
js
scas
jecxz
cmp
ror
popa
pop
clc
mov
adc
in
xor
mov
paddb
mov
sbb
inc
das
fistps
xor
lret
adc
fwait
pop
jge
pop
cld
pusha
hlt
and
lcall
push
in
insl
pop
call
repz
cmpl
mov
sahf
sbb
loope
pop
add
ds
out
xor
cltd
les
pop
cmp
arpl
add
gs
in
inc
cli
adc
sbb
nop
or
push
ljmp
push
loop,pt
sub
xchg
js
add
sbb
vpshuflw
pop
ljmp
or
push
cmc
push
and
mov
mov
jmp
hlt
mulb
scas
xor
and
addr16
adcl
lods
and
mov
jp
dec
into
lret
fcoml
add
decl
jo
fsubl
out
jmp
cmp
scas
jecxz
push
sub
addr16
cmp
mov
fwait
mov
sbb
dec
cmp
ds
push
fidivs
imul
subl
cs
add
test
push
mov
aas
cltd
ljmp
lret
adc
push
pusha
roll
insb
pcmpeqw
stos
gs
fmul
cmc
movzbl
sahf
mov
shl
mov
loope
or
scas
fdivrl
call
sbbb
sub
aaa
mov
jp
insl
ja
out
fxtract
sub
js
mov
in
arpl
or
xchg
push
xadd
or
push
aad
ret
mov
xchg
push
adc
mov
xor
xor
push
mov
push
data16
cmpsb
pop
inc
sbb
inc
sub
in
dec
lea
jnp
jecxz
mov
shll
cmc
bnd
lcall
pop
jecxz
jbe
mov
jle
jne
mov
into
popa
das
sets
test
push
ljmp
mov
call
inc
ret
das
cmp
or
or
xchg
sbb
pop
ja
sbb
adc
push
comiss
xchg
movsl
dec
inc
enter
add
xchg
xchg
pop
fwait
ss
sbb
xlat
out
ret
ficoml
test
cmc
test
sub
call
in
mov
jne
inc
fs
sbb
cltd
dec
inc
push
mov
fcoms
addr16
pop
mov
aam
jno
test
mov
dec
sbb
aam
imul
ss
sarb
fwait
mov
xchg
pop
fidivs
xor
hlt
adc
repz
call
pop
cmp
in
xor
mov
daa
mov
rolb
test
mov
in
in
xchg
xor
xchg
jbe
and
add
push
mov
inc
push
or
cld
mov
mov
and
pop
sub
sbb
xchg
cmc
sub
das
jl
sub
mov
adc
lds
and
xchg
push
fwait
push
sub
adc
pop
cli
data16
dec
cmc
xchg
imul
pop
mov
mov
rorl
sub
lods
xlat
dec
push
mov
aad
pop
jno
xchg
cs
cmp
aaa
adc
out
sub
or
dec
sbbb
lock
outsb
and
je
movsb
popa
divl
ss
call
and
movsb
mov
js
inc
out
xchg
rorl
mov
inc
mov
mov
adc
pop
subl
add
dec
adc
cmpsl
xchg
int3
mov
in
mov
pop
mov
dec
cs
pop
ror
add
sbb
mov
mov
into
lret
and
or
mov
mov
push
movsl
mov
rcr
mov
mov
pop
mov
push
repz
je
mov
call
ss
and
mov
push
push
pop
daa
mov
clc
push
or
jnp
addr16
lahf
mov
clc
mov
sbb
bound
sti
incb
clc
lods
addr16
scas
jle
insl
fsubl
imul
mov
inc
loop
outsl
push
ret
inc
add
lcall
lods
imul
shrb
bound
push
rcrl
mov
dec
jl
sbb
jg
out
jno
dec
xor
mov
jge
pop
add
fisttpl
pusha
inc
cmp
jnp
pop
stos
stos
test
loope
fcom
sahf
jp
inc
mov
jo
insl
ja
adc
test
lcall
fcomp
mov
cmc
jbe
dec
sbb
popa
sbb
add
out
mov
xor
daa
rcr
mov
imul
sbb
sahf
dec
fcoms
icebp
cmp
cmpsb
test
or
movsb
loop
or
mov
hlt
mov
jns
nop
int3
es
ret
dec
add
mov
in
adc
jecxz
jbe
mov
or
jl
push
divb
scas
inc
in
loop
shrb
mov
andl
loope
pop
fs
cmpsb
cmpsb
xchg
push
xor
fisubrs
daa
cmp
cli
jns
cmp
aam
scas
jecxz
scas
lahf
xor
call
sbb
scas
movsl
pop
clc
add
push
scas
icebp
lea
sahf
pop
mov
sub
mov
ret
call
jnp
in
addl
xchg
cld
aam
xchg
rorb
inc
sahf
inc
mov
adc
inc
stc
sub
int
jge
iret
test
mov
and
ss
sub
int3
jecxz
add
adcl
push
loop
jge
jo
and
xor
cmp
mov
pop
mov
aas
cld
aam
dec
iret
pop
push
sbb
mov
lock
dec
xchg
pop
mov
xchg
jle
fstps
nop
aam
js
pop
ret
add
cli
push
out
arpl
mov
pop
divl
or
and
scas
sti
pop
xor
xor
push
pop
adc
data16
mov
adc
jecxz
mov
xchg
sbb
mov
mov
lods
cmpsb
inc
or
dec
mov
mov
jp
fsubl
and
xchg
shl
in
add
cwtl
mov
cltd
in
xlat
popf
fisttpl
push
arpl
pusha
jno
hlt
or
in
mov
in
jecxz
sub
pop
push
or
dec
lret
jge
inc
in
sbb
shlb
nop
leave
aas
push
push
lods
add
insl
jns
test
pop
stc
test
inc
in
sub
sbb
add
xchg
js
sti
je
popa
xchg
pusha
and
mull
loopne
and
call
lcall
loope
les
inc
cmc
ja
scas
out
mov
ds
rcrb
imul
ret
ret
add
dec
jmp
adc
lods
imul
out
mov
mov
sbb
fucomip
jecxz
fisttpll
stos
loope
nop
push
loope
clc
mov
xchg
test
divl
mov
jnp
cmpsb
call
enter
outsl
enter
pusha
outsb
push
pop
dec
faddl
clc
shrl
addl
ss
out
outsb
pusha
int
sbb
mov
es
mov
mov
cmp
adc
sbb
pop
arpl
ficoms
bound
push
add
pop
jne
jnp
sbb
int3
nop
lea
lods
pop
xor
divl
pop
adc
ret
inc
loop
xchg
mov
dec
push
push
mov
inc
jmp
or
mov
popa
jge
mov
jle
or
popaw
add
pop
mov
cmc
xchg
es
add
shll
mov
mov
and
loop
xor
sub
push
dec
pop
test
xor
rol
stos
sbb
das
ja
rorb
loop
ljmp
loope
and
mov
mov
mov
xor
jnp
cltd
mov
cmpsb
arpl
cmp
add
pop
pop
cld
xchg
in
or
ja
add
dec
inc
add
adc
ds
pop
mov
mov
test
mov
cmpsb
faddl
in
ljmp
hlt
iret
cmp
xchg
dec
adcl
sub
mov
mov
jns
mov
xchg
data16
loope
xchg
mov
inc
mov
sbb
test
or
out
leave
test
imul
jb
paddusw
subb
pop
aas
ljmp
adc
dec
clc
insl
adc
out
imul
mov
cmc
sbb
pop
xchg
mov
fnstcw
push
jbe
inc
inc
pop
pop
cmpsl
xor
mov
dec
mov
mov
mov
mov
movsb
pop
outsl
mov
sub
rcrl
mov
pop
lret
fwait
dec
lcall
pop
dec
xchg
mov
mov
adc
insl
sbb
mov
scas
jge
jbe
negb
scas
jo
and
and
cmp
push
fsubrs
hlt
imul
mov
sbb
daa
xlat
mov
subl
scas
addr16
lods
sbb
cwtl
cmp
mov
sbb
mov
cmp
jl
sbb
fisttpll
lds
lret
or
lods
popa
out
sub
xchg
inc
stc
pop
pop
jb
aas
inc
hlt
fcomps
or
sti
cli
jne
mov
test
mov
sarl
ret
sub
fcmovne
hlt
lods
test
int3
or
sub
adc
cmpsl
cmp
lods
test
jns
fistl
jne
mov
sub
sbbl
inc
jne
aad
sbb
imul
mov
xlat
xchg
dec
lret
add
out
lods
hlt
add
sbb
and
and
data16
cmpsl
push
cmpsl
aam
mov
sahf
ss
mov
xorl
pop
cmp
mov
jecxz
mov
fisttpll
inc
jnp
rorl
jecxz
subb
notl
cmpsb
sbb
pushf
mov
cmpl
or
xlat
pop
mov
test
mov
mov
test
mov
push
test
mov
inc
jp
in
rcr
xor
jbe
xchg
lods
cli
jecxz
cmp
push
mov
inc
hlt
mov
or
loope
sub
pop
popa
inc
xlat
mov
orb
sbb
sti
inc
in
lahf
outsb
dec
mov
inc
jmp
loope
movsl
addr16
adc
xchg
mov
pop
addr16
iret
test
mov
and
hlt
daa
fistl
ror
pop
sub
mov
or
push
push
inc
std
mov
push
jp
loop
jle
xlat
push
push
cli
leave
lahf
cmp
push
aad
cmp
clc
rorb
pop
push
add
movsl
lock
out
mov
cmc
stc
mov
push
mov
imul
std
test
mov
or
pop
popf
sarl
pop
push
roll
sub
jo
xlat
hlt
jle
sbb
add
shrb
pop
cmp
ss
bound
xor
popa
mov
cld
out
jo
rcrl
in
pop
sti
cmpsl
mov
adc
xlat
mov
adc
or
scas
lret
pop
fucompp
inc
sbb
add
outsl
sub
into
sbb
fsubr
fcmovnu
out
outsb
jg
cmpsb
inc
bndstx
mov
iret
aaa
sub
cmp
loopne
jnp
cmp
outsb
test
xor
movsb
cmpb
sub
rorl
pop
enter
loope
mov
mov
inc
jmp
push
jl
inc
mov
add
repz
icebp
mov
mov
popa
jl
jbe
je
imul
mov
movsl
nop
loopne
adc
inc
sbb
fcomi
sti
push
pop
aam
pop
je
imul
mov
test
gs
adc
cmp
es
imul
jp
ss
mov
jne
and
or
dec
adc
ljmp
cmp
into
gs
rol
in
dec
mov
inc
nop
das
mov
out
jecxz
insl
inc
inc
imul
push
in
loope
cmpsl
pop
cmpsl
inc
inc
dec
imul
icebp
mov
jg
mov
fidivs
or
addr16
mov
addb
push
mov
adc
fisttpl
add
push
mov
pop
xor
icebp
jg
daa
xchg
add
insl
ja
push
arpl
xor
cmp
mov
daa
call
mov
sub
mov
and
adc
jns
mov
lods
jae
sub
sub
aaa
jae
rcr
loop
pushf
cwtl
push
jne
add
xlat
jge
add
jnp
addb
sub
lods
fmull
aas
xchg
mov
je
repnz
clc
mov
test
loopne
loope
jbe
inc
sti
dec
cmpsl
dec
test
fldt
out
fstpl
addr16
jnp
das
sbb
pop
mov
nop
mov
pusha
sbb
push
movsl
out
les
mov
sahf
stos
push
lret
mov
push
inc
xor
jge
int3
int
ss
xchg
jns
mov
daa
fistps
out
xchg
jmp
pop
jge
jg
mull
push
out
mov
jl
push
jo
cmp
cmp
inc
adc
shrl
icebp
jne
and
std
jecxz
xchg
ja
inc
jne
ljmp
and
ds
stos
lods
xchg
mov
dec
icebp
adc
test
loope
in
ds
sub
std
mov
daa
cli
imul
ret
and
mov
imul
inc
aam
xchg
pop
test
sbb
mov
fs
pop
enter
xchg
fstpt
pop
lcall
sbbl
gs
ss
js
sub
repnz
nop
xchg
and
dec
jge
xchg
out
fs
mov
insl
adc
push
cmp
xor
rcl
rol
shll
sub
idivb
or
out
lea
ret
mov
inc
loop
mov
je
xchg
scas
shll
or
aad
aaa
jae
fs
loope
inc
insb
mov
sbb
mov
testl
add
rcr
test
mov
insl
int3
xchg
adc
out
js
pop
add
mov
ss
cmp
jbe
pop
fidivl
mov
mov
xor
inc
jnp
loope
stos
jnp
fs
outsb
push
lcall
jge
xor
das
mov
mov
dec
jl
pop
mov
loopne
jne
cmp
clc
jge
std
xchg
xlat
pushf
aad
xor
data16
in
sti
arpl
jno
bnd
loope
jae
es
push
mov
mov
xor
insl
and
adc
leave
clc
inc
mov
pop
inc
clc
hlt
cmp
xor
into
adc
inc
mov
ja
outsl
leave
pop
xchg
imul
inc
fistl
mov
inc
imul
push
push
jnp
sbbl
lods
test
aad
js
enter
mov
mov
insl
in
xchg
cmp
xor
repz
mov
mov
loope
mov
adc
pop
cli
mov
adc
loop
adc
decl
pop
das
je
mov
subl
sub
popf
adc
xchg
scas
cmp
pushf
mov
jl
test
jge
repz
mov
call
aas
popa
mov
adc
je
das
adc
sbb
int3
imul
cmp
inc
or
pop
call
mov
test
aam
lock
sub
inc
or
jl
cs
jnp
dec
push
pop
or
pop
out
add
push
jecxz
push
push
xchg
addr16
cmp
sbb
add
ds
loope
xchg
lret
dec
sub
loope
cmpsb
mov
mov
cmp
hlt
sub
icebp
mov
lock
lcall
push
mov
xchg
xor
aad
loopne
mov
test
jne
or
add
mov
push
loop
dec
mov
in
adc
push
mov
push
push
fimuls
inc
jle
mov
jae
rorb
repz
xchg
aad
jnp
jecxz
dec
jg
jae
ret
pop
fstpt
xlat
movsb
inc
sub
rcl
push
fstpl
js
mov
aam
pop
sbb
popa
mov
sbb
jecxz
in
dec
inc
fldcw
mov
mov
dec
fisttps
jns
ja
jmp
xor
add
out
lds
divl
lods
xchg
jae
out
rolb
lahf
stos
add
sbb
loop
xlat
mov
popl
aam
and
cmp
shrl
jge
daa
jecxz
mov
cmpsl
or
pop
mov
jge
mov
jp
shlb
movsl
mov
and
xchg
or
sub
inc
out
cmc
cmp
shrl
adc
aas
push
nop
sbb
out
mov
ret
dec
mov
xor
jl
ffree
or
cmp
in
fidivrl
mov
sub
das
cmpsb
and
pop
pop
sbbb
adc
daa
mov
dec
lds
xorb
xchg
clc
adc
rorl
mov
outsb
sti
push
sub
jge
call
sbb
push
pop
test
rcrl
push
inc
inc
mov
loopne
cmpb
fmul
xor
jbe
pop
ljmp
sub
add
and
sbb
popl
xor
daa
push
push
rorl
or
test
mov
or
mov
scas
das
shll
mov
xor
out
mov
pop
pushf
fbld
outsl
arpl
hlt
std
mov
subb
mov
add
lock
cltd
mov
jne
sarb
sbbl
mov
ret
aad
pop
and
lock
mov
outsl
mov
mov
icebp
lods
and
jns
outsb
mov
push
inc
sbb
jp
jo
std
aam
xlat
imul
mov
out
or
and
lret
push
filds
adcb
icebp
inc
mov
dec
addb
jo
jge
mov
xchg
ds
adc
cli
scas
sbb
fdivs
dec
mov
xor
sahf
int3
ret
scas
sbb
testl
cmp
rcrl
fisttps
stos
xchg
add
rorl
ds
inc
scas
xlat
mov
mov
jae
addl
dec
adc
xor
mov
in
lods
cmp
sbb
andl
icebp
call
cmpsb
pop
lock
xchg
cmp
xor
inc
cmpsl
mov
mov
popa
ficoms
cwtl
inc
rcrl
mov
fstpl
aaa
lock
sbb
popf
or
mov
add
xchg
xlat
mov
mov
cmp
adc
std
imul
aam
je
hlt
jp
mov
pop
icebp
jo
mov
inc
addr16
mov
inc
cmpsb
push
sub
jmp
jae
add
jp
ss
subb
cmc
jl
pop
out
sbb
sbb
pop
cmp
mov
lds
add
sbb
stc
cmp
push
sahf
sbb
inc
mov
fdivrs
ds
dec
subb
lds
shl
in
clc
xor
lahf
pop
add
cmpb
inc
arpl
pop
sbbb
out
mov
out
cli
icebp
dec
mov
xor
stc
sbb
clc
rorl
sub
insl
test
and
pop
adc
sub
jmp
inc
mov
loope
push
adc
mov
xor
fs
jne
outsl
je
movsl
pop
std
fcmovnbe
jo
inc
mov
das
cltd
jg
sbb
xor
outsb
ret
jecxz
sbb
repnz
insl
mov
xchg
movsl
jp
cmp
outsl
out
or
push
pop
stc
ja
int3
fcmovnb
arpl
out
mov
loop
shrl
cmc
cmpsb
mov
cmc
dec
xor
mov
xor
mov
or
and
jle
popf
arpl
cmp
js
dec
lahf
fcomps
push
daa
mov
stos
or
jp
adc
mov
cmp
push
sbb
dec
stc
and
cmp
pusha
mov
fidivl
out
mov
cltd
nop
jecxz
pop
aaa
push
in
lods
and
jl
arpl
icebp
mov
cmp
lret
loop
push
lds
aad
ss
jp
pushf
sbbb
pop
inc
mov
mov
in
jl
cmp
pop
xor
shrb
push
cmc
mov
mov
popa
add
rcrb
mov
xor
clc
stos
mov
int
jmp
jne
mulb
inc
push
mov
rcr
sahf
add
popa
push
sub
ljmp
test
test
push
sub
dec
mov
sti
ja
push
in
jecxz
mov
sub
mov
cli
scas
adc
daa
push
ret
xorl
sbb
inc
jg
fwait
notl
mov
stos
stos
ficomps
add
pop
and
push
mov
add
inc
mov
mov
lock
andl
loop
and
test
addr16
adc
sbb
pop
fs
and
divl
sbb
jg
aam
push
es
jge
es
shl
lcall
sub
mov
lahf
or
pop
iret
stos
xchg
mov
cmp
jbe
pop
mov
js
aas
cmp
mov
fimull
in
rcll
add
mov
adc
xchg
mov
and
insb
and
cmpsb
lahf
mov
pushf
sbb
pop
cmp
mov
shll
mov
popf
push
cmpsb
pop
je
pop
mov
inc
je
mov
dec
xchg
iret
out
and
shll
mov
inc
sti
cmp
dec
insb
stos
test
dec
subb
push
cmpl
jp
stos
mov
test
xchg
andl
ds
inc
hlt
inc
in
sbb
fstps
out
insl
or
rorl
xchg
or
roll
sbb
int
sbb
arpl
mov
sahf
jecxz
ljmp
pusha
in
xlat
add
xor
mov
pop
jp
lock
sahf
cmp
jle
sbb
xchg
xlat
adc
xchg
adc
fstpt
xor
mov
aas
inc
inc
xor
xchg
cmc
rol
dec
outsl
lods
loop
dec
jle
repnz
pop
fiaddl
test
mov
loope
aad
dec
aaa
mov
cmc
add
fs
jl
stc
push
scas
mov
adc
cmp
pop
mov
xchg
adc
mov
adc
dec
sub
ljmp
mov
movsw
jle
push
mov
xchg
sahf
lods
repnz
pop
movsl
adc
add
aam
sar
aad
scas
aaa
out
mov
jp
mov
insb
jle
mov
push
je
test
mov
xchg
push
pop
xor
xchg
loopne
stos
cld
xor
sahf
xor
mov
push
je
adc
outsl
push
in
stos
out
jb
lods
sbbl
xchg
repz
fdivrl
mov
shlb
pop
pop
pop
push
xchg
ds
push
push
jne
or
jb
push
pop
and
int
movl
mov
popa
arpl
mov
je
fildl
adc
mov
pop
js
mov
mov
jg
subl
dec
mov
movsl
or
in
push
in
adc
cwtl
nop
loop
negl
sbb
jnp
jl
adc
and
mov
mov
outsb
add
lret
pop
adc
or
loop
pusha
cmp
mov
sti
sbb
push
das
mov
iret
adc
iret
cmpsl
mov
scas
pop
shrl
add
pop
push
subb
cmp
push
inc
into
sub
or
dec
pop
clc
push
inc
scas
lods
roll
js
fptan
es
xor
in
cmp
addr16
in
pop
repz
js
popa
je
mov
jp
dec
addr16
push
jbe
push
sbb
out
rol
sahf
or
xor
xlat
push
lret
pop
jp
xchg
push
std
loop
outsl
pop
scas
loope
sbb
out
xchg
dec
jg
adc
xchg
fadds
lds
js
pop
lods
adc
jge
or
push
rclb
std
stos
mov
out
sysenter
mov
das
sub
je
push
add
sub
xor
jbe
cmpsb
pop
or
mov
dec
aad
pop
enter
ret
pop
insb
push
xor
out
stos
xor
out
ret
fwait
cmp
xchg
insl
popf
loopne
push
inc
sub
mov
hlt
repz
lret
loope
sti
hlt
dec
pop
cmc
imul
inc
jge
cmp
push
pusha
lcall
cmc
push
outsl
jg
loopne
pop
lock
sbb
int
or
mov
jmp
aad
adc
adc
int3
out
pop
repz
clc
aad
add
sahf
mov
in
jno
negl
mov
dec
mov
subb
push
incl
mov
subl
pop
fdivrp
adc
mov
xlat
sub
sti
pop
int3
and
scas
and
jecxz
mov
ret
mov
call
or
jmp
mov
jge
lock
insb
cli
aaa
enter
sarl
frstpm(287
or
sbbl
or
repnz
dec
rcrb
clc
test
pop
insl
pop
das
sar
ja
adc
add
cmove
pop
inc
fistpl
pop
hlt
imul
push
mov
adc
lods
pusha
xchg
jmp
push
addr16
dec
sti
cmp
lret
cvtdq2ps
push
add
pop
popf
sub
pop
xor
loopne
outsb
sbb
xlat
mov
mov
lret
inc
jl
loop
or
inc
xchg
mov
jbe
mov
mov
inc
pop
inc
andl
cmp
adc
aam
inc
ja
adcl
in
out
push
and
mov
lods
lahf
ja
or
cmp
xchg
pop
cltd
push
daa
outsb
enter
adc
and
inc
mov
sahf
ljmp
ds
test
in
idivl
push
fwait
mov
ror
scas
test
mov
push
mov
paddd
adc
pop
jae
pop
ret
imul
iret
dec
in
test
xor
loope
cs
sbbl
mov
popa
or
cmp
sub
pop
and
mov
mov
sbb
loop
xor
pop
gs
adc
popf
fmull
jl
lock
fistl
in
outsb
movsb
ds
or
in
cmp
gs
mov
mov
pop
in
lods
dec
add
mov
mov
je
mov
inc
aaa
mov
jl
cmp
cmpsb
mov
aaa
xor
inc
or
jg
and
out
push
push
dec
je
or
jmp
pusha
sahf
jb
lods
jl
pop
dec
cmp
xchg
les
mov
and
leave
inc
or
add
sti
sbb
test
push
xor
jge
add
je
push
xchg
push
aas
mov
test
jmp
mov
or
mov
mov
outsb
ljmp
cmp
jmp
lods
or
sbb
imul
in
sbb
cmpsb
push
ret
cmp
add
jne
fistpl
and
push
xchg
pop
mov
lcall
jmp
pushf
frstor
outsb
pop
jne
push
enter
pop
in
sbb
sub
enter
xchg
pop
mov
fidivrl
je
in
fidivrl
mov
sbb
and
les
rep
xchg
jp
and
mov
hlt
mov
std
stos
icebp
push
outsb
mov
or
mov
pop
in
mov
test
std
and
jl
mov
adc
lock
mov
mov
ffree
pusha
xlat
in
and
insl
push
jb
push
inc
jge
mov
pop
clc
add
js
stos
cmp
sub
adc
stos
pushf
cmc
mov
mov
mov
xchg
push
cmpsl
rcrl
push
jno
jno
cmp
ljmp
or
lds
imul
mov
mov
dec
push
xchg
clc
call
cmp
mov
lock
pop
test
je
fcomip
pop
das
orb
les
pop
jmp
inc
cmc
inc
loop
pop
push
das
cld
lcall
nop
outsb
sbb
add
scas
fidivrs
fnstcw
mov
sub
daa
adc
mov
idivl
push
jae
fdivrl
ds
jecxz
mov
lods
xchg
in
and
ss
or
xchg
ljmp
leave
fdivrl
sbb
in
int
icebp
shl
add
jle
or
and
mov
jg
je
jecxz
adc
sub
jecxz
into
mov
sbb
fcmovu
ljmp
pop
adc
dec
cltd
mov
mov
fwait
movsl
insb
mov
in
ds
mov
push
enter
ljmp
rclb
or
les
mov
fstpl
in
push
add
addr16
loopne
jge
mov
orl
mov
inc
push
fucomi
daa
mov
mov
and
js
sub
popf
ret
lea
jno
xchg
test
loopne
mov
mov
jge
pushf
adc
xlat
inc
popf
rorl
jp
loop
xchg
jnp
xor
ficoml
jbe
ds
out
jp
ljmp
stc
fstpl
call
xchg
push
data16
std
out
stos
pop
push
jecxz
shl
fmulp
mov
int3
inc
push
lods
mov
icebp
lock
mov
mov
insl
inc
mov
inc
js
cltd
rorb
vunpckhps
sbb
jmp
sub
adc
loop
and
sub
call
leave
mov
mov
jbe
inc
or
shll
data16
add
xchg
imul
scas
and
xor
push
sti
mov
iret
mov
outsb
pop
loope
sub
mov
pop
loopne
xchg
scas
lahf
cwtl
adc
hlt
or
jnp
dec
daa
out
inc
sbb
jo
jo
add
add
test
sbb
xchg
add
aas
hlt
adc
push
add
sub
data16
mov
xchg
or
jne
fistpl
rorl
cltd
cmp
adc
ror
sbb
test
mov
xor
lea
and
jne
das
loopne
push
fwait
test
jno
lock
mov
pop
xchg
jge
sub
jnp
pop
cmpsb
test
out
push
out
lods
scas
fsubp
fs
adc
mov
jae
clc
cmp
xor
xchg
and
fsubrl
aas
aad
ss
mov
jne
pop
pusha
ror
add
fcompp
xchg
in
mov
rcrl
pop
in
fiaddl
mov
sti
stos
movsl
jg
daa
mov
imul
and
sub
rorl
cmp
mov
je
lock
ds
loope
pop
xchg
add
cld
sarb
mov
jg
push
inc
es
sub
mov
jle
cmp
add
lcall
push
dec
mov
xor
mov
bound
xchg
outsb
mov
and
aaa
cli
adc
inc
and
fstps
mov
ss
mov
aas
push
dec
xchg
ret
or
cmp
pushf
out
lds
mov
bound
add
lret
xor
jae
pushf
and
cmp
pop
mov
scas
cmpsl
ret
jbe
and
add
addb
sbb
cli
test
jo
aad
xchg
or
mov
xor
aad
sti
pop
decl
mov
dec
pop
inc
pop
lock
cmp
xor
adc
xor
mov
ret
cs
pusha
in
mov
pop
dec
cwtl
test
icebp
mov
xchg
movsb
push
mov
mov
adc
fidivrs
sti
call
sub
fldt
shrl
fs
leave
out
fcmovu
rorb
sbb
mov
fdivs
nop
int3
xlat
hlt
push
js
mov
scas
push
cwtl
mov
out
notl
pop
aaa
std
ficompl
cltd
xchg
and
loope
push
inc
dec
adc
iret
and
xor
out
sbb
test
xor
adc
imul
out
outsb
loope
pop
add
or
push
lret
call
stos
hlt
jp
pop
sbb
lahf
push
out
or
sbb
aas
fld
mov
dec
mov
add
fadds
mov
stc
xor
dec
pop
dec
add
cmp
pop
aam
gs
shll
mov
jne
mov
std
sbb
mov
adc
jae
xchg
outsb
lahf
add
cld
add
incb
lcall
and
sbb
cmpsl
adc
stos
stos
adc
mov
lea
pop
es
roll
fdivrl
test
xor
insl
popa
dec
dec
xor
or
jno
sub
push
dec
mov
pop
mov
daa
popa
fdivp
stos
or
jecxz
push
gs
pop
cwtl
mov
push
inc
ret
add
test
jle
dec
sysret
xor
cmc
sub
xlat
hlt
cmp
iret
jne
sub
roll
fwait
test
fsubrs
out
dec
insl
xor
pushf
push
inc
dec
aam
pop
mov
mov
adc
lods
pop
fcom
adc
push
cltd
or
mov
mov
ds
pop
cmpb
sub
popa
mov
imul
pop
xor
hlt
fwait
dec
hlt
add
xchg
pop
jns
push
insb
addb
stos
pusha
stos
adc
jbe
sub
and
cmp
lret
lret
pop
cltd
outsb
jnp
loop
outsb
into
leave
orb
push
pop
fcmovne
inc
gs
test
mov
add
mov
dec
sbb
ficomps
cmc
xlat
sub
push
inc
inc
jns
lret
xor
push
xor
or
cld
rorb
cmpsb
test
loopne
loopne
mov
pusha
mov
push
jb
mov
inc
not
in
test
push
mov
cmpsl
and
mov
cs
push
js
adc
or
mov
xlat
pop
pop
jl
out
adc
inc
rorl
cmpl
inc
inc
push
and
sbb
cs
ficoml
lock
sub
out
pop
call
xchg
mov
add
fwait
xchg
or
arpl
test
push
sar
das
fcomps
cld
jnp
jle
pusha
sub
in
adc
sbbl
jl
repz
and
adc
rclb
out
pop
pop
inc
imul
je
imul
mov
mov
adc
data16
lfs
insl
inc
mov
stos
sbb
or
call
mov
or
or
leave
push
aas
enter
jl
adc
jo
sahf
flds
mov
out
scas
dec
mov
jne
adc
push
lods
js
sub
aaa
aas
pop
push
rcr
mov
add
mov
push
rclb
push
add
push
inc
pop
mov
aaa
mov
xchg
adc
jo
sbb
inc
pop
sbb
jge
add
in
jbe
xor
ret
push
xor
jne
jns
mov
pop
in
push
xor
enter
mov
lret
lods
sbb
sbb
int
movzwl
jmp
jmp
mov
jne
fcoms
rcr
rcrb
sub
jb
and
sbb
rcrl
jge
lds
out
dec
imul
mov
push
mov
push
dec
scas
push
inc
loop
or
test
sub
addl
pop
sub
aad
bound
fimull
stc
fdivl
lds
fstpt
mov
push
es
lods
lret
push
cmp
pop
loope,pn
inc
mov
je
push
lret
pop
inc
jnp
and
cmpsb
adc
fmull
dec
pop
add
mov
shlb
inc
mov
loop
pop
ja
cmp
jae
shl
cmp
mulb
mov
xor
jle
sbb
pop
pop
dec
inc
xor
adc
sub
dec
test
out
jbe
ljmp
ret
sbb
push
fisttpll
loop
jmp
pop
mov
xor
inc
lret
inc
into
mov
lods
lcall
jecxz
jmp
jmp
mov
je
push
mov
mov
pushf
xor
nop
shrb
inc
mov
push
xchg
rol
or
imul
lock
aaa
out
rolb
adc
inc
push
dec
leave
ror
mov
pop
imul
pop
adc
and
inc
outsb
stos
dec
sbb
loope
cmp
out
cs
and
cs
xor
mov
push
jle
mov
jl
icebp
clc
sub
mov
clc
cmpsl
dec
std
std
pop
insb
mov
inc
add
orl
jo
aam
ljmp
dec
mov
roll
jge
sbb
mov
mov
pop
xchg
pop
arpl
push
movl
xchg
or
scas
stos
push
xlat
push
or
push
inc
loop
fdivs
mov
clc
jmp
or
xchg
popa
out
stos
add
loope
insl
clc
mov
mov
fidivs
and
adc
outsb
cli
sub
out
cld
test
xchg
dec
aas
inc
xchg
rsm
aaa
inc
call
movsl
loopne
mov
adc
mov
hlt
roll
cmpsl
movsb
push
push
inc
add
add
mov
sub
sahf
sahf
aas
sbb
addr16
mov
in
mov
pop
aam
incb
jle
xor
ret
push
jl
sbb
js
popa
pop
xlat
jne
mov
lds
cmp
jp
add
les
je
mov
xchg
dec
inc
leave
push
dec
mov
aaa
jbe
cmp
cmp
bound
aas
xchg
fwait
jmp
sahf
cmp
mov
scas
sti
xchg
mov
aam
xchg
inc
test
mov
xchg
orb
cmp
clc
dec
xor
scas
xor
or
mov
dec
sub
adc
push
and
cmp
pop
ret
fisttps
mov
jne
pop
jg
pop
sbb
inc
sub
mov
out
outsb
cli
pop
movsb
movsl
dec
inc
popf
pop
add
gs
jne
mov
call
push
inc
mov
add
add
popa
mov
fwait
pop
fadds
vaddsubps
sti
adc
and
lods
jle
pusha
inc
shr
in
adc
sub
jg
in
mov
cmp
fisttpl
mov
outsb
cmp
out
fldl2e
jbe
add
pop
push
je
push
dec
adc
movsl
jecxz
xor
mov
xchg
add
mov
mov
outsl
hlt
iret
inc
sarl
xchg
and
cwtl
xor
aam
scas
push
out
dec
push
cmp
xchg
jo
rcll
jne
pop
push
cmp
movsl
mov
ds
loope
xchg
shll
rclb
inc
mov
add
mov
ss
ret
sbb
ficoms
pop
repnz
mov
pop
pop
popa
paddq
pop
and
pop
cmc
or
shlb
ret
enter
xor
fdivrs
fdiv
imul
mov
seto
je
cmp
ret
mov
nop
rol
test
test
hlt
mov
adc
sub
sub
push
ss
inc
and
push
xchg
fs
push
hlt
outsb
stos
add
les
add
call
rcrb
xchg
xor
adc
stos
or
mov
imul
jb
pop
and
xchg
cmp
xchg
mov
inc
and
cmpsl
faddl
dec
fdivl
mov
je
and
sub
push
adc
pop
sbb
push
loopne
jmp
xchg
adc
shll
out
xor
cmpsb
xchg
scas
mov
push
testl
pop
dec
xchg
mov
pop
cltd
test
mov
gs
iret
xor
xor
daa
or
sbb
jae
add
ljmp
adc
bound
xor
push
push
sti
mov
jns
xchg
call
jo
loop
in
jge
mov
mov
add
cwtl
jl
adc
insb
lret
pop
xor
std
out
insl
lock
sbb
or
inc
sub
sbb
xlat
mov
jne
pop
pop
mov
xor
outsl
dec
adc
or
mov
sbb
or
sbb
sahf
lea
out
fiaddl
cmp
mov
loope
popf
push
cmp
rorl
in
adc
mov
mov
mov
je
sahf
cltd
in
ret
arpl
mov
lods
popa
cmpl
imul
pop
mov
pop
pop
inc
jne
push
cmc
es
mov
mov
jae
lds
into
hlt
mov
pop
pop
jecxz
pop
aam
jmp
mov
in
mov
mov
cmp
aam
mov
cs
push
pop
fimull
and
cmpl
outsb
adc
jnp
mov
jnp
push
xchg
repnz
rol
setle
int3
push
rcr
dec
mov
std
bound
in
lods
imulb
pop
out
cmp
cmpsl
xchg
repz
test
insl
cmp
stc
xchg
loope
mov
dec
push
aaa
pop
jbe
inc
inc
nop
dec
ret
inc
mov
sub
sarb
fdivrs
mov
pop
jge
hlt
andl
icebp
lods
push
mov
aad
xchg
sub
loope
mov
lods
pushf
mov
fmull
fs
pop
insl
sub
mov
fbstp
fidivl
out
mov
shrb
inc
push
jns
xchg
mov
int3
or
sar
int
mov
test
cmpsl
in
mov
mov
or
xchg
adc
add
lea
ret
add
jle
das
push
push
ret
scas
sbb
imul
add
or
mov
insb
dec
inc
movsb
es
mov
fwait
and
dec
push
mov
mov
cmp
pop
lods
data16
repnz
out
repz
js
cmpl
je
sub
pop
add
aad
out
jbe
xchg
xor
mov
cld
or
movsl
loopne
dec
fs
dec
xchg
xor
cmp
out
mov
and
xlat
cmpsl
mov
das
mov
mov
sub
inc
add
pop
sbb
or
popa
pushf
jb
jecxz
insl
pop
les
frstor
inc
leave
xorl
mov
lahf
push
pop
in
pop
or
xchg
mov
loope
push
mov
xchg
pop
lret
sbbl
cld
cld
sub
aaa
dec
mov
sbb
out
in
loope
cmpsb
xchg
or
mov
pop
out
and
inc
xorb
scas
sub
add
iret
stos
repnz
inc
jle
sti
shlb
dec
out
lcall
push
cmpl
mov
and
fstl
aaa
mov
sahf
frndint
and
jnp
gs
cmpsb
mov
aam
dec
xchg
in
mov
mov
jge
out
insl
and
cld
mov
adc
loope
jo
rolb
sbb
nopl
sbb
cli
mov
insl
mov
push
inc
lods
xchg
ss
pop
pop
outsb
xlat
adc
pop
lahf
xchg
cwtl
push
add
adc
loope
clc
mov
ljmp
pop
pop
sub
sbb
mov
or
lock
roll
pushf
sbb
ds
shll
ret
push
pop
shlb
push
scas
dec
pop
jl
cmp
dec
adc
in
mov
ret
lcall
call
test
push
mov
hlt
add
push
or
test
xor
cmp
popf
sub
and
test
mov
mov
aad
cmpsb
jbe
pop
sub
jge
filds
into
inc
xor
jge
inc
mov
js
xchg
add
testb
scas
mov
mov
and
mov
adc
leave
inc
cli
add
mov
or
cmpsl
lods
stos
rcrl
mov
mov
hlt
or
out
and
push
push
jmp
test
ds
xchg
jb
dec
loopne
mov
inc
outsb
roll
cld
icebp
dec
push
popf
push
cmp
pop
mov
xorl
cltd
fiadds
pop
insb
nop
imul
mov
push
es
add
mov
push
dec
aaa
push
inc
lahf
pop
flds
xor
clc
mov
call
sbb
push
popf
fimuls
imull
sub
xchg
mov
xchg
test
out
push
aaa
fisubrs
xlat
jne
inc
sbb
pusha
out
mov
or
adc
jge
icebp
subl
enter
aaa
shlb
pop
push
jg
mov
cmp
jns
pushf
fsubp
or
daa
xor
outsl
push
push
cld
jbe
xchg
or
xorb
lods
mov
lods
lods
and
pop
add
outsb
xor
cld
push
or
les
jae
adc
les
roll
pop
sub
adc
test
in
pusha
push
xorb
movl
daa
arpl
pop
adc
sbb
imull
out
adc
xor
aad
cmp
in
push
mov
and
mov
mov
adc
inc
bound
and
mov
push
xchg
subb
shlb
stos
iret
in
sbb
out
lods
jcxz
clc
negl
jl
repz
fistpll
mov
and
cs
push
push
lods
mov
sti
insl
dec
mov
dec
dec
push
mov
insl
mov
mov
cmp
aas
sub
stos
stos
int3
adc
mov
xor
jge
insb
sub
dec
adc
call
xor
jle
inc
inc
pop
push
lret
xchg
data16
or
push
and
ds
jg
pop
or
jmp
stos
testb
insb
call
sarl
mov
es
xor
rcrb
leave
arpl
divb
jle
xorb
jl
push
lods
outsb
jp
cmpl
test
jb
fsts
sarb
jno
lds
outsb
les
jle
sbb
push
jne
rcl
in
rclb
sbb
jne
jne
xlat
inc
sbb
sub
jge
mov
out
push
push
or
push
cs
mov
test
sbb
cmp
sbb
push
mov
out
mov
cli
test
dec
mov
sub
jge
comiss
sub
icebp
ret
dec
mov
fsubrs
jge
cmpb
adc
enter
pop
dec
sbb
jb
add
inc
mov
jl
daa
inc
adc
cmp
test
push
push
adc
fs
scas
or
or
mov
enter
mov
test
push
fwait
arpl
dec
inc
xor
jle
inc
aad
mov
push
xchg
fistps
xor
add
aas
aaa
inc
test
fwait
inc
mov
dec
insl
bound
and
std
addl
add
loop
jne
pushl
dec
ret
sub
jecxz
push
scas
adc
test
out
jo
repz
sbb
mov
jmp
jge
aas
mov
jl
xor
push
aaa
cmp
adc
add
and
or
adc
out
adc
jecxz
dec
push
into
ds
int
fstenv
jmp
cli
mov
jecxz
pop
mulb
int3
pop
insl
repnz
push
jge
cmp
bound
cmc
and
cmp
push
xor
xor
jge
cld
mov
cli
call
or
leave
cmpsl
nopl
bound
fsub
or
cmp
outsb
adc
push
sub
and
stos
jns
dec
outsl
cmp
out
xor
add
push
sti
lret
scas
fldcw
sub
mov
test
in
fadds
mov
div
pop
pop
pop
aad
fxch
adc
das
insb
dec
cld
push
inc
orb
xor
and
cmc
incl
stos
or
out
xor
jge
cli
sbbl
mov
or
sbb
push
cld
test
adc
out
out
lret
les
cld
out
movsb
fwait
mov
jge
arpl
ss
clc
inc
ret
in
int
cs
fadds
and
jle
out
sbb
lock
xlat
icebp
mov
mov
push
scas
loope
out
stos
bound
xchg
inc
aas
fadds
and
je
mov
sub
cmp
test
or
loope
loopne
push
inc
ret
inc
outsl
dec
cmpl
mov
call
dec
push
sti
jo
or
ljmp
pushf
sub
scas
push
shlb
dec
rcrl
testl
ret
cli
popf
jle
lea
and
push
addl
mov
xor
push
icebp
call
jnp
daa
mov
adc
dec
mov
fstpl
xchg
cmp
sub
mov
cltd
push
add
cmp
fcoms
push
or
push
lcall
jecxz
add
ret
insl
insl
les
aam
push
mov
dec
sahf
push
negb
popf
jno
dec
add
sbb
int
jbe
andl
rcrb
ja
sbb
mov
es
popf
push
in
push
mov
adc
out
inc
divl
pop
push
jae
sarl
cmp
or
jo
hlt
stos
dec
into
xor
stos
loop
dec
add
out
lahf
ret
jo
popf
xchg
pusha
jnp
mov
jbe
jge
shll
pusha
adc
jae
std
loopne
dec
inc
out
pop
push
adc
ficoml
das
inc
outsb
push
bnd
jl
mov
adc
sub
insb
xchg
push
movsb
sbb
jo
dec
int
sub
jecxz
shrl
mov
cli
ja
insb
lret
cmp
sti
addr16
push
fcompl
push
hlt
jge
sbb
mov
inc
ret
mov
or
pop
fnsave
outsb
repz
dec
call
pop
jb
and
xchg
or
outsb
insl
clc
sti
mov
gs
cmc
lahf
xor
jp
sub
dec
fwait
inc
pusha
cli
pushf
sbb
xor
dec
adc
outsb
jmp
xor
push
hlt
loop
push
xlat
daa
add
jnp
sub
xchg
clc
shrl
outsl
adc
das
sub
mov
out
xchg
je
pop
mov
adc
pop
mov
mov
cltd
mov
jb
mov
mov
mov
jg
aas
out
cmp
add
fisubs
sub
test
ds
jne
mov
push
popf
cmp
push
aad
mov
push
js
jp
pop
fincstp
fwait
mov
adc
out
mov
sti
sbb
pop
scas
jne
add
dec
jg
mov
or
movsl
orb
cmpsb
lods
lret
je
int3
or
cmc
jle
fwait
push
xor
in
cmpb
lret
xchg
xchg
mov
cmpsb
xchg
jno
pop
scas
cmpsl
or
lcall
ja
in
cs
out
mov
cltd
pop
popf
jecxz
popa
out
xchg
pop
sarb
push
mov
jnp
mov
xor
outsl
sbb
cwtl
push
pop
test
push
out
in
test
ret
clc
push
xor
push
insb
mov
mov
cli
sahf
push
pop
data16
pop
inc
jle
addl
adcb
les
insb
out
jnp
daa
add
sbb
xchg
xor
mov
fs
pop
es
dec
mov
out
inc
loop
nop
jl
xor
sbb
xor
cli
pop
fists
in
mov
push
shrl
sub
or
dec
lahf
dec
aas
push
outsl
imul
test
mov
pop
frstor
xor
daa
sub
mov
jmp
or
cmp
cli
subb
jne
mov
push
mov
mov
out
push
pop
push
adc
inc
dec
popf
lock
push
js
lcall
mov
jle
inc
sarb
lods
jb
xchg
xchg
repz
pop
inc
cmp
and
call
shll
jmp
mov
add
push
rcll
push
mov
mov
xchg
sbb
dec
sbb
dec
or
ret
lock
mov
mov
or
in
icebp
shr
mov
add
out
cmpsl
jnp
hlt
daa
data16
jecxz
nop
bound
xchg
test
mov
xor
mov
aad
hlt
jno
fimull
sbb
ja
pusha
adc
sub
pop
dec
fwait
ds
dec
add
testb
cmp
dec
ja
mov
add
sbbl
aaa
negb
pusha
stc
in
fildll
add
fsubrl
cltd
test
push
jno
jb
in
jbe
shlb
aam
cmpl
or
add
jne
lods
pop
shlb
xor
add
cmp
je,pn
or
outsb
jmp
and
ficoms
cmp
dec
rcll
sub
inc
je
divl
jb
stos
popf
push
push
jmp
shl
mov
pop
ljmp
roll
add
push
hlt
sarb
outsb
inc
loopne
lods
imul
call
daa
int3
rol
fimuls
cmp
xor
nop
es
fcmovbe
fcomi
inc
mov
sbb
inc
cmp
in
jnp
or
push
loopne
lcall
mov
stc
push
xor
loopne
xchg
inc
popa
jbe
jl
les
xor
mov
rclb
push
pop
sub
lcall
pop
ja
adc
mov
test
cmc
xchg
cwtl
inc
pop
into
fimuls
push
pusha
enter
lea
loop
je
arpl
add
rcrb
xor
pop
fst
mov
movsl
cwtl
enter
dec
push
into
lods
movsl
fcmovnb
shrl
xor
jmp
sbb
lahf
dec
sbb
adc
inc
push
fcom
sbb
into
xorb
sbb
mov
xlat
inc
fstpl
and
push
jns
and
adc
clc
insl
and
jno
inc
rcrl
add
xchg
paddq
ja
andl
sti
dec
add
out
dec
push
icebp
mov
loope
xor
jecxz
dec
push
inc
dec
fs
mov
and
pop
dec
or
jecxz
jae
gs
inc
add
sbb
cmp
mov
nop
xor
push
je
jbe
aam
mov
pop
icebp
mov
lea
or
mov
aam
push
mov
out
sbb
lret
mov
dec
lahf
icebp
push
and
mov
xchg
jge
data16
or
sbb
mov
ret
cmp
cmp
in
clc
fucom
ret
pop
add
aad
sbb
inc
test
rcrl
cmpsl
mov
jmp
pop
mov
mov
xchg
je
scas
adc
cmp
icebp
pop
and
mov
scas
lea
ret
leave
pop
in
mov
insl
sbb
mov
into
inc
inc
out
dec
call
ds
popl
mov
lock
inc
int3
out
movl
int
cmp
mov
rclb
mov
rcrl
push
stos
cmc
xchg
loopne
jo,pn
ljmp
adc
add
xchg
enter
fdivl
mov
iret
lods
test
push
lds
cmc
cmpl
add
push
add
fdivr
sbbb
sub
push
ljmp
in
or
add
mov
jne
pop
xchg
mov
xchg
sbb
xchg
xor
loopne
cltd
inc
hlt
push
rol
pop
mov
mov
lock
aas
outsb
out
call
ds
ret
inc
jl
or
or
std
inc
insl
push
sahf
push
fstps
mov
clc
mov
jno
adc
rcrb
add
xchg
pop
mov
fwait
sbbb
xlat
mov
movsl
ja
movsl
mov
cmp
data16
jge
das
fsubrl
int
addps
push
and
jle
push
sub
jle
sub
sbb
push
add
ja
inc
add
mov
int3
lea
dec
sub
cmp
pop
subb
daa
mov
or
mov
sbbb
or
ljmp
loopne
dec
push
mov
inc
mov
lods
add
jecxz
rcll
xor
lods
inc
cmc
inc
shlb
cmpsl
cli
xchg
mov
gs
popa
fnstenv
roll
xchg
test
mov
fwait
cmp
xchg
adc
popf
dec
cmp
xchg
fisttpl
loopne
push
cmp
jecxz
cmp
sbb
push
mov
add
rcrl
lahf
jg
add
sbb
in
or
std
imul
cli
hlt
sarb
jnp
mov
and
mov
mov
mov
xorb
jge
or
jge
pusha
es
data16
push
cmpsb
bound
push
jns,pt
cmc
jne
dec
loope
xchg
mov
es
loope
jbe
popf
jp
lea
mov
cmpb
pop
js
stos
xor
push
fstpl
xchg
jmp
imul
fmulp
aad
dec
push
dec
mov
dec
lret
scas
mov
ja
outsl
push
ss
and
lahf
cs
or
and
or
ja
pop
mov
xchg
ja
inc
and
data16
adc
jp
frstor
leave
jae
inc
jae
scas
filds
and
mov
fstps
repz
sahf
sbb
adc
fs
push
cmp
adc
jp
pop
in
arpl
fisubrs
push
andb
pop
pop
shl
rcrl
inc
rclb
scas
xchg
adc
andl
xor
int3
and
lret
push
cmc
arpl
dec
call
fiadds
cli
inc
cmpsl
mov
push
jo
call
sub
inc
out
repz
mov
jge
pop
mov
lock
push
gs
pop
jecxz
push
fs
jne
add
out
imul
adcb
push
sbb
dec
pop
add
push
jle
pop
loopne
push
adc
je
rol
jnp
outsb
mov
std
call
xor
adc
or
wbinvd
pop
and
jmp
clc
push
ret
cmp
cmp
mov
lret
addb
clc
pop
push
arpl
addb
aaa
fstpt
mov
add
push
push
inc
pop
and
ds
cli
int
repz
cmp
xorb
and
cmp
and
or
stos
lahf
neg
xchg
mov
lods
daa
and
repz
rolb
loop
push
adc
jmp
mov
jns
pop
xor
aaa
test
jecxz
scas
scas
jb
xor
lds
popa
ret
addr16
mov
jp
stos
rolb
bound
cmp
cmp
rorb
adc
outsl
in
and
lea
xchg
in
cmpsl
sub
repnz
subl
repnz
testb
scas
and
insb
pop
cli
xchg
mov
aaa
xorl
jae
jbe
loope
rorb
sahf
pushf
enter
xor
addr16
ret
dec
loopne
cld
mov
xchg
sbb
sub
adc
pop
xchg
cli
mov
jle
xchg
xchg
fidivrl
in
push
sbb
mov
cmp
adc
jo
xchg
xchg
out
jbe
in
dec
fcoml
adc
int3
data16
cmpsb
rcrl
lods
lahf
and
xor
icebp
stos
loop
push
mov
sbbb
sarl
arpl
jecxz
je
or
mov
imul
xchg
in
pop
push
xchg
mov
mov
dec
lret
hlt
outsb
inc
sbb
icebp
cmp
jnp
mov
xchg
test
push
call
cmpsl
mov
cltd
sub
add
in
inc
or
and
imul
mov
aas
dec
push
mov
jne
lea
mulb
and
xchg
xor
adc
xor
inc
xchg
xchg
fwait
test
mov
push
xchg
push
cmpsb
clc
sub
dec
aaa
sbb
mov
pop
sub
rcr
ds
ffreep
lahf
and
cmp
xor
daa
xchg
jp
cmc
stos
int
jnp
inc
inc
imul
push
mov
sahf
in
popf
mov
fisttps
push
sbb
mov
adc
fs
cmpsl
jp
ss
cld
lcall
loop
xor
and
dec
sbb
push
sarb
sarl
hlt
inc
cmp
aam
and
mov
int
inc
and
jl
dec
imul
cmc
ret
jo
pop
int3
add
pandn
lods
sub
mov
stos
loope
test
sub
add
fidivl
adc
jb
xor
fcmovbe
loope
mov
mov
pop
push
in
popa
jp
jnp
add
xchg
or
das
mov
test
sub
jecxz
mov
sti
adc
faddl
sti
fdivrs
jae
repnz
hlt
jecxz
xor
dec
scas
in
sub
jmp
mov
sbb
mov
pop
xlat
mov
pop
inc
jg
pop
jle
sbb
mov
mov
sub
flds
jmp
loopne
sbb
nop
insb
into
and
jl
les
fdivrs
mov
dec
aad
out
fcoms
jle
xor
pop
sbb
jbe
jbe
ds
and
fsts
mov
sbb
mov
fcompl
arpl
orl
pop
cmp
mov
loop
fucom
fs
out
push
push
mov
adc
incb
and
ret
or
ret
cld
adc
scas
movsl
sub
fsubs
icebp
sbb
sbb
cmc
mov
dec
in
bound
arpl
popf
orl
inc
mov
stos
lock
cld
cmc
outsb
lcall
aam
adc
pop
jne
pop
in
cld
add
dec
pop
aas
sbb
dec
xchg
ja
fdivrs
fdivp
add
adc
ja
pop
fldl
fstpl
add
movsb
hlt
in
loopne
dec
and
cmp
scas
mov
ret
dec
lods
sub
xorl
add
mov
mov
fst
and
sar
outsb
loope
inc
pop
xor
jge
das
or
cmc
sub
jge,pn
xchg
xchg
add
int3
mov
mov
xorl
pop
in
clc
add
fmuls
test
adc
rorl
mov
call
cltd
in
scas
xor
jbe
enter
insb
in
jp
jecxz
mov
test
sbb
jmp
sarl
xor
clc
xor
sbb
jmp
jle
out
push
pop
adc
mov
aad
mov
and
mov
jno
int
inc
xchg
sbb
mov
push
jbe
ret
pop
push
leave
rorl
jo
jge
adc
arpl
hlt
lret
or
nop
fldenv
mov
lea
shl
out
loopne
pop
and
cld
sub
andb
popl
sub
push
sbb
je
fstp
jno
add
or
and
outsb
idivl
xchg
out
aam
lea
cmpsb
pop
pop
shll
jge
cwtl
in
jmp
add
leave
lcall
mov
push
jns
mov
addr16
into
adc
and
movsb
dec
inc
lsl
jbe
cmp
jmp
mov
cmp
dec
dec
cmp
hlt
mov
notb
roll
mov
loope
dec
punpckhdq
dec
mov
mov
cmp
call
sub
fldl
enter
mov
push
add
xor
xorl
addl
mov
inc
adcb
add
dec
out
into
push
and
lcall
pop
clc
ljmp
mov
pop
mov
sti
xor
mov
xchg
mov
xor
xor
icebp
cmp
pop
mov
mov
mov
mov
push
rol
mov
ret
add
push
sbb
fcoml
cld
pop
adc
jle
ljmp
dec
ret
rcl
add
movsl
jmp
push
xor
aad
mov
mov
mov
jae
into
inc
scas
insl
scas
add
aas
or
adc
mov
imul
loope
fs
mov
lret
mov
out
xchg
push
dec
sub
mov
shr
mov
mov
inc
dec
pop
mov
mov
rclb
push
add
mov
and
dec
mov
in
sti
js
cmpsl
ss
adc
fcoml
ror
jecxz
mov
jbe
outsb
inc
loopne
ljmp
gs
mov
cmp
xchg
into
mov
mov
addr16
xchg
call
aad
jne
inc
es
xlat
mov
aad
cmpsl
in
fdivrs
jl
mov
outsb
xchg
mov
jle
push
or
add
mov
sbb
mov
mov
jge
mov
in
loope
shr
add
adc
xlat
adc
aam
push
mov
xchg
or
sbb
mov
into
sub
pop
das
cltd
js
flds
jae
mov
inc
arpl
movsb
fbstp
or
test
clc
add
pop
fiadds
lahf
loop
jp
in
fimull
stos
movsb
xor
jmp
out
aam
jg
test
push
mov
ss
xchg
jne
in
sbb
fnstenv
ret
dec
pop
inc
data16
in
popa
xor
jg
add
clc
imul
ljmp
test
out
jmp
or
dec
sbb
mov
and
test
mov
sbbb
lds
icebp
sub
cs
sub
jo
cmpsl
imul
aam
ljmp
xor
sbb
call
daa
jmp
push
lea
shrl
or
and
pop
sbb
jbe
inc
nop
sbb
xlat
divb
mov
iret
ret
sti
ret
pop
or
xchg
fwait
imul
fldenv
in
push
aaa
add
fisttpl
mov
inc
mov
jns
loop
jnp
xchg
sub
jo
xchg
jecxz
pusha
test
inc
add
orl
rcl
hlt
sti
and
shll
stos
cmp
iret
xchg
inc
rcr
outsb
iret
push
in
adc
out
stos
or
mov
aad
xor
outsl
mov
pop
sub
jae
push
rcll
bound
stc
mov
mov
jo
mov
mov
in
and
pop
sbb
leave
mov
push
arpl
fidivl
and
sub
inc
cmp
jo
push
jne
mov
cs
xlat
xlat
fldl
mov
cmp
popa
push
cmpsl
xor
loop
out
pop
faddp
in
into
popa
faddl
call
test
mov
or
loopne
push
xchg
mov
mov
imul
mov
mov
push
dec
dec
xor
cmp
mov
sub
lahf
dec
inc
std
add
sbb
jg
push
xchg
mov
mov
or
mov
ret
sub
dec
xchg
jp
aaa
stos
fadds
sbbl
jle
push
or
mov
jne
dec
mov
lds
jmp
loope
ja
call
scas
mov
pop
popf
repz
mov
and
cmp
push
mov
sarl
push
outsl
xor
mov
into
cmpsb
aaa
push
inc
in
bound
movl
mov
pushf
out
adc
mov
push
out
and
daa
clc
cltd
mov
mov
inc
dec
adc
pop
sbb
pushf
fmul
out
or
out
and
dec
or
hlt
mov
mov
iret
mov
dec
adcb
lcall
jb
hlt
mov
push
sub
and
loope
push
sub
repnz
in
adc
add
int3
sar
lds
cmp
scas
ret
jge
pop
inc
xor
xchg
imul
fs
mov
or
cmpsb
sahf
xor
xor
icebp
mov
inc
mov
sbb
jge
insb
inc
leave
sahf
rorl
icebp
lock
mov
fsts
inc
xchg
hlt
adc
in
repz
out
mov
cmp
or
lods
mov
les
and
adc
daa
js
push
lea
push
inc
or
jmp
nop
insb
push
mov
adc
fcomi
shrb
xchg
pushf
cli
adc
addr16
ja
gs
push
mov
mov
negb
dec
sub
xor
and
outsl
fdivrl
xlat
lds
xchg
ds
jp
push
fsubrs
dec
push
pop
mov
arpl
gs
stos
popf
les
je
push
or
dec
inc
lock
push
add
clc
cmp
shlb
shl
fcoms
mov
mov
outsb
jne
jge
faddl
sbb
rcrb
and
inc
or
sbb
es
lcall
and
xchg
clc
xor
adc
jo
aas
sbb
mov
mov
jae
jne
cmp
cmc
std
dec
data16
cmc
ret
push
inc
mov
test
sub
mov
push
movsb
push
lea
aas
push
cmpsb
mov
pusha
aam
iret
imul
jg
icebp
lods
mov
out
mov
xor
mov
ret
ror
les
cmp
push
cmp
mov
cmp
push
lods
pop
repz
scas
imul
stos
jecxz
xor
inc
icebp
add
sti
sbb
add
mov
adc
or
cmp
ficoml
xchg
clc
push
aas
xlat
or
les
xchg
cmp
loopne
fcmovb
push
jle
out
jp
lods
mov
ljmp
mov
sti
jg
jle
aaa
xchg
sahf
outsl
insb
or
mov
in
mov
ss
int3
xchg
cld
fcom
mov
add
clc
mov
js
add
lods
lea
xlat
addr16
xchg
and
ret
push
pusha
lds
xlat
shr
cmpsb
outsb
inc
mov
outsb
and
pop
push
addr16
jne
mov
divl
mov
repz
sub
push
or
sbb
das
cmp
push
inc
sbb
ret
incl
fdivs
mov
mov
cmc
repz
repnz
arpl
mov
mull
aam
daa
ljmp
cmp
popa
mov
mov
jg
lods
dec
outsl
jno
mov
or
fisubs
push
stos
daa
imul
ds
xor
shrb
sub
add
lcall
inc
push
jge
push
dec
fstpl
mov
adc
movaps
push
cltd
test
rolb
std
mov
sub
popf
push
sub
add
test
sbb
lcall
mov
inc
ret
fistpll
hlt
push
loope
xor
movsl
outsl
fmuls
mov
push
mov
jle
lahf
xchg
les
add
frstor
fisttps
mov
outsb
loopne
xchg
leave
sbb
xchg
mov
call
mov
andb
and
stos
inc
roll
push
hlt
xor
adc
mov
ret
cmp
or
pminub
and
into
adc
mov
mov
in
setle
push
rep
jno
sub
outsl
jne
dec
xor
jge
mov
in
lret
mov
sbb
fwait
loop
jns
inc
push
adc
mov
jg
xchg
and
inc
push
stos
or
int3
loopew
inc
dec
and
lcall
push
pop
jmp
cmp
adc
into
dec
cmp
sbb
mov
mov
inc
push
jae
mov
ja
ja
push
cmp
xchg
sub
lea
fsubs
insb
ljmp
mov
xchg
jb
push
iret
mov
adc
mov
fcomp
outsb
xchg
and
lret
mov
xchg
push
sbb
div
pop
or
jge
inc
out
jb
sarb
fmuls
insb
adc
out
jmp
mov
add
or
pop
mov
ds
aas
sbb
lcall
sbb
sti
mov
inc
push
aad
jne
bound
xor
stc
sbb
addr16
lret
jae
sub
iret
sahf
dec
cmp
pop
and
push
lock
ss
mov
loopne
lret
add
lods
xor
in
sbbl
and
lcall
je
in
call
test
fcmovnu
test
lock
pop
jno
neg
dec
dec
arpl
sbb
push
dec
orb
mov
jge
cli
or
scas
pop
in
and
pop
test
push
je
pop
test
mov
dec
sub
imul
int
mov
mov
jl
pop
adc
mov
sbb
loope
out
enter
adc
lahf
xor
dec
xor
push
push
ret
inc
mov
test
jg
pop
xor
popa
ret
xchg
cli
pop
push
push
adc
popl
lods
or
sub
fst
pop
adc
mov
in
inc
push
ret
repz
inc
xor
lock
xor
jb
test
pusha
mov
es
lods
jecxz
or
adc
mov
xor
orb
and
ljmp
mov
icebp
popa
in
and
jg
cltd
popa
dec
sarb
pop
test
js
je
cs
mov
push
rcl
jge
cmc
iret
aaa
icebp
inc
test
adc
push
lock
pop
imul
lods
cmp
dec
loope
insb
iret
push
lea
push
enter
push
ret
mov
aas
mov
scas
and
xor
aas
mov
gs
push
mov
pop
adc
loop
mov
iret
outsl
jbe
clc
jbe
pop
xor
jae
adc
shlb
call
out
gs
push
push
dec
sub
sarb
sahf
add
dec
sti
add
outsb
xor
subb
lds
pop
loop
into
cs
cltd
out
xchg
mov
aam
push
inc
ror
cmpsl
lcall
push
and
pop
pop
pop
inc
out
mov
pop
xchg
or
test
loop
pushf
xor
dec
push
loopne
jne
mov
sub
inc
in
push
jl
push
cmp
cmp
or
insb
dec
pop
cmp
lahf
dec
pop
pushl
adc
dec
cmovg
aad
pop
fists
icebp
rorl
outsb
fists
test
inc
xor
cmp
cld
pop
rcr
out
and
mov
xchg
cmc
dec
mov
scas
mov
out
dec
int
mov
cmp
or
and
cmp
jbe
fsubrs
dec
shrb
mov
into
push
xor
aam
jmp
frstor
stc
mov
shll
arpl
xchg
push
pop
inc
pop
fdivs
enter
mov
rcl
xlat
aam
push
push
mov
out
add
mov
ret
and
pop
in
scas
fsubrl
pop
mull
das
and
add
jecxz
test
mov
std
adc
add
fs
pushf
cld
shlb
sbb
push
ficoml
jg
adc
adc
mov
lcall
or
cmp
inc
mov
pop
sub
icebp
jb
out
sarl
lds
and
fnstcw
sub
popa
adc
les
sbb
adc
mov
jbe
inc
dec
pop
scas
int3
jne
outsb
xchg
jb
je
aaa
adc
dec
jne
popa
sub
mov
mov
pop
xor
leave
hlt
cmp
call
dec
adc
jge
mov
dec
mov
cli
fcoml
mov
dec
mov
and
sbb
xor
int
sbb
test
cmpsb
jle
sti
xchg
inc
inc
adc
push
lret
sbb
fcom
mov
fsubrs
push
inc
mull
icebp
pusha
mov
fstl
ljmp
stos
mov
test
push
or
ret
aam
mov
inc
push
lahf
out
pushf
por
in
add
pushf
or
scas
inc
inc
je
ret
push
mov
popf
mov
pusha
push
int
jecxz
mov
fldenv
mov
imul
push
in
scas
mov
fsub
hlt
lods
leave
test
pop
cmp
push
or
mov
or
shll
in
xchg
push
lahf
pusha
pop
jecxz
jmp
lcall
dec
mov
loope
lods
not
out
sbb
dec
das
fcompp
adc
fs
jbe
mov
xlat
and
fimull
and
lahf
daa
or
adc
mov
addr16
sub
pop
mov
jae
outsb
push
repz
cli
push
mov
nop
inc
push
cmp
jno
xor
popa
push
lret
jb
cmc
loopne
movswl
js
aas
inc
ret
or
mov
das
fmul
add
loopne
pop
shrl
imul
push
push
aam
sub
pop
shlb
and
or
xchg
push
cmp
insl
sbb
mov
sub
mov
mov
loope
xchg
add
push
and
pop
fsubrl
xchg
pop
cltd
popf
test
scas
mov
inc
sbb
jno
pushf
mov
into
inc
es
sbb
add
add
rcll
sti
push
in
std
mov
inc
and
or
jecxz
sti
sbb
jmp
imul
xchg
flds
shll
push
gs
test
imul
mov
dec
push
or
add
jne
fisttpll
cli
ljmp
pop
dec
xchg
rcrl
out
loop
aaa
roll
outsb
negl
aad
fs
inc
push
lods
in
dec
ficoml
adc
inc
aaa
fsubl
xchg
mov
loop
int3
ss
aas
loop
push
sub
lea
xlat
jne
arpl
and
lds
or
lds
mov
pop
cli
or
xor
sub
or
ds
hlt
sub
sbb
imul
mov
add
add
sahf
cmp
lock
push
clc
lock
sti
jno
sti
xchg
adc
test
jl
mov
mov
fmul
xchg
pop
mov
inc
and
cmp
movsb
sti
loope
clc
jo
pusha
jge
sub
push
mov
push
lock
mov
or
lock
ja
ja
mov
sbb
int
int
mov
pushl
mov
pop
jb
xlat
inc
outsl
pop
les
scas
das
fcompl
xchg
mov
sub
mov
ret
dec
push
pop
rol
lret
dec
gs
mov
mov
cli
sbb
jo
inc
out
push
addr16
adc
push
int3
cmp
sbb
clc
xor
sub
sbb
mov
mov
ljmp
imul
mov
popf
push
sbb
sbb
pop
jg
scas
mov
jl
jl
sub
popa
pushf
loope
roll
pop
rcll
pop
movsl
sbb
movb
mov
xlat
nop
sahf
push
cmp
loopne
xor
and
and
je
inc
xlat
sub
ret
jp
call
jmp
out
pop
cli
add
jmp
sarl
mov
pop
es
push
mov
insb
cltd
and
in
or
and
sub
cmpb
cli
adc
loop
xchg
mov
or
fdivs
push
movsl
je
stos
imul
mov
xlat
push
incb
dec
ljmp
popa
add
mov
stos
out
pop
fld
and
mov
fidivrs
divl
ds
bound
sub
pop
rorl
xor
testb
sbb
lahf
mov
andb
outsb
pop
ret
inc
pop
mov
pusha
cwtl
or
popf
inc
jecxz
add
ffree
bound
test
or
clc
xchg
or
push
mov
rorb
sahf
rorb
call
dec
inc
dec
out
dec
test
repz
mov
data16
add
inc
mov
fdiv
inc
jnp
gs
sub
fisubrs
push
cmpsb
jne
inc
in
dec
cmc
cmp
rorb
jle
dec
and
mov
mov
jns
mov
les
bound
call
repnz
rsm
orl
out
or
xchg
sarl
cmpsb
lods
add
icebp
mov
loopne
pop
add
jo
sub
insl
or
mov
cmovle
setle
ljmp
xchg
loop
xchg
rorb
xor
or
xchg
aad
xchg
fidivs
out
loop
fldl
pop
shl
jns
sbb
and
push
stos
push
lret
outsb
movsb
mov
aaa
ret
mov
loop
push
inc
adc
ja
cld
scas
test
mov
dec
hlt
push
sbb
adc
icebp
mov
xchg
mov
jge
push
mov
jne
loope
xlat
fs
shrb
inc
or
nop
rep
inc
mov
mov
pop
mulb
pop
shr
popa
cld
mov
or
xchg
jne
sti
inc
cld
hlt
jecxz
in
fucomip
stc
hlt
mov
loopne
mov
das
or
sub
ds
clc
push
int3
jg
sub
shlb
fisttpl
jno
popf
cmp
fidivrs
fidivrl
mov
daa
aam
inc
cmp
aas
push
sbb
roll
ds
mov
push
dec
inc
lea
lcall
imul
fwait
cltd
adc
push
fdivs
insl
je
mov
cmp
fs
jp
sbb
sub
mov
dec
fs
mov
call
xor
les
pop
das
xchg
clc
mov
into
sbb
icebp
cld
sub
mov
sahf
das
les
mov
sbb
and
movhps
popa
jl
cmpsb
insl
push
stc
dec
and
aas
inc
mov
enter
fcoml
popf
push
mov
pop
gs
testb
jp
cli
or
sub
push
divb
xor
or
in
jmp
lret
push
pusha
sub
mov
jo
in
xchg
mov
or
ljmp
dec
cmp
sbb
xor
pop
sub
push
imul
mov
mov
ficoml
add
adc
pop
in
cli
jp
push
int3
xor
imul
xor
push
int
and
cmc
sbb
and
mov
mov
lea
dec
andl
jbe
mov
xchg
xor
mov
dec
xor
mov
aas
mov
mov
int
mov
pop
cmp
xchg
xor
je
push
jns
pop
test
jle
js
movsl
popf
mov
aad
cwtl
lahf
rcl
mov
mov
je
je
xor
rcrb
mov
fdivl
sbb
unpckhps
daa
test
jne
sub
scas
pop
inc
outsb
mov
orb
cmpsb
sub
pop
rol
addr16
ja
mov
lret
ret
fcmovu
mov
push
int
adc
ret
adc
inc
lcall
ljmp
add
xchg
sub
mov
sbb
scas
jne
andl
ja
mov
jge
andb
xchg
cmpsl
mov
pop
add
ds
jnp
xchg
sbb
shl
mov
scas
or
outsb
iret
aam
out
mov
ljmp
notl
sbb
in
lea
and
inc
aaa
insb
lcall
in
test
sub
jnp
daa
mov
fwait
mov
ret
outsl
inc
add
enter
loop
clc
gs
movsl
aaa
jne
sbb
dec
cmp
sub
or
insb
xor
mov
icebp
jo
movsb
and
call
dec
mov
add
cli
and
pop
repnz
jbe
jmp
adcb
test
or
pop
mov
and
adcl
mov
leave
scas
sub
shlb
xor
das
add
daa
pop
mov
jl
cltd
in
mov
sbb
xor
ljmp
adc
xchg
push
cmp
fidivl
mov
cmp
negb
jbe
mov
ja
sub
or
aaa
scas
mov
ror
push
push
sbb
ret
jmpw
push
add
test
packuswb
rcrl
aam
inc
ret
loop
lret
inc
ficomps
scas
in
in
push
dec
xor
jae
and
xchg
ss
orl
jo
mov
add
insb
dec
mov
mov
lods
jle
pop
std
ret
sahf
popf
push
push
scas
pop
cmp
loopne
insl
lods
fdivr
xor
test
push
mov
test
fcomip
pop
mov
bound
and
sbb
pop
push
jae
cmpsb
mov
xlat
test
push
jl
push
mov
clc
les
jne
xchg
mov
mov
roll
daa
lods
mov
ret
scas
xchg
lahf
sbb
or
movsl
jge
push
push
not
pop
aam
dec
pop
push
ret
jl
std
add
push
movsb
ret
lds
inc
jl
loope
mov
icebp
fisubrs
mov
shl
cmp
dec
rcrb
jne
cmp
add
je
cmp
xchg
loope
cmpsb
psrlq
pop
adc
lea
inc
loope
and
out
mov
clc
setp
adcl
lock
repz
cmp
or
and
loopne
ljmp
js
push
and
adc
fstp
mov
push
pop
insl
popa
or
xor
and
mov
mov
call
cwtl
xor
mov
sub
inc
ja
addr16
xchg
xor
shlb
addb
cld
cmpl
inc
je
lea
jbe
jl
add
outsb
loop
mov
faddp
cli
js
outsl
pop
adc
mov
inc
in
and
ficompl
push
sbb
ss
js
inc
or
and
outsb
or
jbe
icebp
inc
fcompl
mov
jo
adc
fcmovnb
add
sti
shll
pop
push
cli
add
andb
sbb
adc
xorb
sbb
inc
cltd
clc
pop
lcall
sbb
adc
shll
jb
mov
sbb
and
popa
mov
iret
sub
xor
fs
sbb
mov
movsl
xchg
add
js
cmc
scas
adc
popa
mov
xchg
and
std
add
adc
mov
daa
lcall
inc
sahf
xor
mov
mov
mov
cltd
inc
sbb
sti
push
or
in
pushf
jecxz
pop
mov
cmp
sub
cmp
mov
adc
nop
ret
aaa
jg
cmp
test
xor
xchg
add
push
jbe
mov
jge
mov
int
xlat
lcall
mov
xchg
and
mov
das
inc
pop
inc
lods
das
pop
popl
inc
enter
inc
aam
sbb
pop
and
push
outsb
sub
cmpsl
cltd
mov
aam
push
mov
roll
push
push
inc
addr16
inc
das
jae
adc
xchg
fsubl
fdivrl
in
cmp
pushf
test
jbe
out
sti
enter
jmp
inc
mov
pop
iret
add
dec
scas
int
mov
jge
pop
mov
ja
test
das
movsl
fiadds
dec
cmp
pop
push
or
out
mov
jecxz
jl
inc
and
aas
cmp
jnp
daa
test
sbb
xchg
add
xchg
pop
and
and
push
ds
pop
mov
push
fldt
sarb
xchg
sub
jecxz
dec
dec
cmc
mov
pop
mov
jecxz
lret
pop
aad
inc
fcom
in
movsl
cmp
jne
mov
push
data16
adc
lret
in
insl
cmpsl
pop
in
rcr
fmull
ret
mov
and
jle
xor
mov
pop
lods
and
xchg
push
inc
mov
sbb
sbb
cmp
inc
add
push
add
sub
stos
xor
call
rcll
adc
cmpsb
aad
push
mov
dec
lds
jne
mov
xlat
cmp
hlt
add
xchg
fucomip
fsubrs
dec
and
jg
das
adc
arpl
push
lcall
xor
in
es
jmp
imul
inc
ljmp
xchg
fldl
sti
or
loop
xor
lods
pop
push
insl
cmpsb
adc
add
arpl
adc
dec
xchg
es
or
dec
sub
adc
icebp
push
iret
push
cmc
test
adc
loop
je
mov
orl
and
push
jge
fmuls
mov
dec
mov
jbe
mov
outsb
jge
sub
mov
cli
or
or
push
xor
mov
out
fwait
mov
adc
je
mov
cmp
or
and
mov
cmp
mov
pop
aas
lcall
sub
pop
call
dec
fsubl
imul
mov
fdivrs
xor
add
cmp
int3
in
sub
adc
into
fadds
ss
and
mov
add
ficoms
mov
push
mov
lods
lods
inc
and
aas
call
push
adc
pusha
lods
xor
or
pop
mov
loop
dec
fcmovnbe
push
lahf
xchg
or
popf
in
daa
jbe
std
mov
out
into
or
push
adc
add
xchg
shr
jg
sbb
imul
repz
lahf
adc
mov
pop
lods
jle
insl
lods
xor
or
inc
jno
xchg
adc
or
jne
add
subl
mov
inc
sub
add
xor
cmp
pop
fldt
rolb
iret
test
out
leave
in
mulb
pop
shrb
push
add
loopnew
xlat
xchg
arpl
cmc
dec
in
add
push
mov
aad
lods
enter
push
or
mov
scas
mov
or
loop
sbb
ss
jp
arpl
mov
out
cwtl
shlb
xorb
outsb
fstpt
ret
ret
jae
leave
push
pop
adc
and
adc
jae
loope
sbbb
mov
decb
inc
push
faddl
cmp
inc
pop
je
rolb
or
sub
jge
mov
rcrb
pop
pop
mov
add
xor
pushf
stos
outsb
getsec
divl
jl
mov
and
jmp
xor
cmpsl
and
and
adc
jecxz
lret
in
mov
push
xchg
testb
and
pop
stos
mov
jb
inc
cmp
jb
xchg
xor
xorb
and
fldcw
jae
cmc
test
ja
xlat
es
rcr
or
push
orl
adc
sbbb
mov
inc
loopne
jp
clc
push
or
shll
xor
add
jno
xchg
or
cmp
mov
ljmp
fildl
imul
lock
pop
ss
scas
mov
lock
mov
push
insl
dec
cmp
push
adc
pop
push
out
test
cmp
cmpsb
aaa
aad
rep
jne
outsb
xor
in
mov
xor
mov
loopne
fwait
leave
mov
loop
lahf
push
sub
mov
or
mov
arpl
icebp
imul
sub
sahf
loopne
xlat
insb
and
fldenv
cld
xor
jbe
pop
pop
adc
repz
jecxz
lock
insb
jge
fldt
sub
mov
inc
xlat
mov
stos
mov
push
cmp
jo
sbb
rcrl
stos
dec
push
popa
pushf
and
push
std
clc
cmp
dec
clc
test
orb
adc
dec
test
mov
aas
fisttpl
jle
pop
sub
lahf
lret
xchg
insb
sbb
iret
adc
xchg
mov
mov
daa
xchg
je
repnz
fcoms
shrd
adcb
adcb
jp
jle
jbe
cmp
scas
mov
testl
shl
das
xchg
inc
pop
mov
inc
push
add
mov
sub
pop
fnsave
sub
nop
imul
jl
xor
orl
cmp
mov
dec
xchg
addb
dec
push
inc
jg
das
push
adc
cmp
mov
movsl
xchg
lcall
call
jge
and
pop
push
sahf
rcrb
xor
sbb
out
sub
dec
dec
movsl
mov
dec
or
jns
jne
sub
notl
flds
push
outsb
jmp
rcl
in
add
adc
sahf
clc
push
inc
into
sti
bound
call
js
stos
out
into
imul
imul
jo
jl
insl
addl
mov
and
cmp
insl
sub
mov
iret
jnp
divl
movsb
stos
sub
insb
loopne
push
dec
inc
imul
jb
dec
clc
fists
outsl
mov
inc
addr16
mov
jecxz
andl
inc
mov
sbb
jmp
sbb
jnp
jo
jnp
test
fdivrl
jb
lea
scas
push
test
jecxz
fildl
inc
fistpl
ss
into
mov
dec
mov
jb
xchg
cs
shlb
push
pop
and
or
call
mov
inc
and
rol
jo
adc
push
mov
ret
mov
pop
push
mov
xor
cmp
ss
jp
sbb
cmp
mov
lods
aaa
lock
aad
inc
xchg
test
or
push
mov
cld
call
out
out
fnstsw
add
movsl
cmovge
push
mov
mov
ficompl
rorl
rclb
scas
mov
dec
mov
iret
dec
push
cmpsb
pop
xchg
pop
out
scas
fldenv
sub
movsb
leave
dec
mov
pop
je
cmpsb
xor
loope
test
xchg
inc
test
cmpl
or
test
icebp
adc
inc
add
add
es
sub
push
jg
add
dec
push
mov
aas
xor
mull
xchg
push
xor
iret
cltd
shrb
lods
mov
pop
insb
xchg
mov
scas
in
ret
das
xchg
enter
xchg
in
mov
jle
lea
cwtl
ja
mov
fldt
scas
leave
ljmp
push
mov
xchg
and
cmpsl
jbe
mov
mov
mov
push
ljmp
or
add
sub
frstor
shlb
lahf
fildl
adc
fcomps
add
adc
mov
cmovp
fidivrl
js
in
push
jne
cmp
out
push
push
push
cld
or
mov
cmc
push
cmpsb
cmp
leave
pop
pop
mov
push
lea
jecxz
scas
inc
adc
dec
adc
inc
fsubrl
mov
fwait
push
dec
push
inc
fwait
adc
fdiv
lock
aam
sub
pop
xlat
jo
pop
xlat
ljmp
add
xchg
dec
loop
enter
fstl
data16
mov
fstl
lahf
pusha
nop
push
xchg
xchg
lds
out
fisttpl
jne
inc
inc
pop
in
push
dec
inc
xlat
push
nop
call
sarl
jge
push
push
or
or
mov
imul
mov
lds
xchg
cmp
loopne,pn
fmuls
mov
icebp
sbb
mov
loope
fisttps
cmc
andl
shl
out
push
shl
jmp
sub
dec
daa
jae
push
cmp
adc
ja
xchg
cwtl
lcall
sbb
out
add
jg
xchg
test
scas
mov
rcrb
es
mov
imul
lcall
fsubr
call
pop
in
jb
jecxz
pop
aam
and
sarl
lock
test
jmp
imul
add
daa
clc
pop
aad
dec
lock
cwtl
das
adc
daa
sbb
inc
push
in
and
cmp
cltd
push
imul
cmc
sub
sahf
dec
jecxz
inc
mov
stos
rolb
mov
loope
inc
lcall
dec
or
in
xor
sub
and
adc
cmp
loope
jle
mov
cmp
jg
outsl
sbb
hlt
les
xor
mov
adc
push
mov
pop
pop
push
adc
cmpb
jle
mov
pushf
mov
jmp
lods
icebp
ja
inc
sbb
stos
sbbb
mov
icebp
jle
pusha
xchg
mull
xor
or
outsl
push
fiaddl
and
popa
ja
pop
aas
test
sub
push
or
mov
adcb
mov
mov
nop
inc
jge
mov
xor
mov
cmp
int3
in
scas
sub
and
inc
int
leave
mov
or
dec
cmp
xor
mov
adc
lock
pop
jbe
mov
push
inc
pop
pop
je
stos
ret
sbb
pusha
jns
jg
or
les
sbb
frstor
inc
mov
mov
out
sbb
shlb
push
clc
mov
mov
insb
xchg
call
sbb
cld
ss
dec
insl
out
sbb
or
xchg
xchg
std
dec
insl
cmpsb
or
jae
ds
fcom
outsb
xor
add
xchg
icebp
loope
fsubrs
ja
mov
and
fwait
cmp
xor
mov
cwtl
jle
adc
iret
push
mov
and
lahf
jecxz
cmp
insl
ret
pop
jmp
rol
xchg
cmp
rorb
cmp
or
or
push
or
dec
scas
or
insb
add
xor
in
loop
mov
dec
imul
std
mov
shl
mov
mov
jg
call
add
clc
stos
aaa
mov
not
jne
sbbl
add
shrl
fs
pushf
or
aad
pop
das
mov
je
mov
xor
xor
addr16
fisubrs
leave
mov
and
jmp
xor
fst
setle
outsl
xchg
test
scas
push
push
xchg
adc
pop
cmp
adc
mov
pop
push
jnp
xchg
in
mov
mov
scas
int
mov
js
data16
ja
mov
pop
fdivl
scas
jge
or
ret
test
decl
in
js
sub
jle
and
jp
js
leave
rcrb
repnz
rclb
mov
dec
jne
fdivl
iret
popa
mov
push
jg
test
cld
mov
rcrb
bound
jge
adc
xlat
or
dec
xchg
hlt
mov
push
prefetch
xor
loope
ljmp
jne
fnsave
fiaddl
mov
cmc
mov
insb
lcall
stc
dec
ret
clc
sti
xchg
adc
pop
je
mov
mov
dec
imul
notl
fldenv
mov
push
movsbl
mov
stos
xchg
inc
or
push
out
mov
mov
xor
cmp
mov
jbe
mov
addl
loopne
pop
cmp
xor
sbb
jbe
sub
lock
loopne
mov
cmpsl
les
jne
adc
jecxz
das
hlt
xchg
loopne
icebp
imul
sub
icebp
test
push
adc
pop
sarl
inc
mul
jbe
jmp
mov
xchg
add
pop
adc
xchg
or
jb
mov
aad
xchg
ja
mov
icebp
lret
mov
icebp
or
jle
scas
cmpsl
cmpsb
popl
dec
mov
popl
fsubl
sti
jp
mov
outsb
imul
inc
fwait
iret
stos
jnp
ljmp
sahf
js
insb
fisttpl
pop
stc
lcall
xchg
mov
sbb
push
in
mov
sbb
xchg
in
mov
out
sti
jmp
dec
test
int
test
mov
adc
jmp
inc
mov
loopne
hlt
mov
fidivrl
jmp
push
shl
push
pop
cld
dec
adc
gs
fdivrs
les
ds
mov
icebp
mov
in
dec
adc
cmc
aad
adc
xchg
adc
pop
jmp
mov
dec
or
push
mov
test
test
pop
xchg
shlb
xorb
adc
loope
sbbl
std
popa
push
in
xor
push
pop
stos
adc
or
mov
ficomps
mov
push
rolb
jge,pn
call
das
rorb
sub
mov
cli
mov
or
ss
mov
adc
scas
jno
pop
adc
call
dec
outsl
jae
sub
pushl
jo
aad
and
es
jmp
inc
mov
ss
and
mov
adc
push
das
sbb
cli
hlt
sbb
adc
mov
mov
xchg
insl
mov
fiadds
stos
adc
push
mov
push
roll
cmpsl
dec
inc
cmp
nop
adc
js
movsb
jg
neg
bound
xchg
aam
and
cli
mov
inc
xchg
add
push
mov
pop
inc
dec
shll
daa
jp
rcr
into
mov
mov
xchg
pusha
pop
push
and
mov
inc
fxsave
test
pushf
xchg
add
inc
dec
mov
jo
pushf
addl
xchg
cmp
or
cmp
mov
jecxz
mov
or
mov
sbb
jle
stos
mov
inc
jp
push
test
lcall
cmp
or
sub
xlat
in
dec
or
inc
push
sbb
repz
pusha
add
jmp
fidivs
pop
mov
inc
cmp
aas
pop
and
out
sbb
and
aaa
outsb
clc
fucomi
xlat
cmp
pop
or
fidivs
ds
mov
in
shll
js
ss
jno
cli
test
mov
pop
fsubrl
adc
fsub
push
movsl
out
clc
ds
mov
jb
scas
out
cmpsb
data16
sti
mov
jle
or
pop
mov
adc
cli
je
ds
mov
add
cld
xlat
cmp
cmpsl
jg
aam
inc
inc
mov
fdivrs
jle
js
pop
ljmp
jno
sbb
insl
mov
into
loope
and
pop
ret
enter
imul
andl
movd
jl
xchg
push
cmp
xchg
jg
jae
cmp
add
ret
outsl
shll
mov
out
push
or
dec
inc
adc
sub
dec
jne
fwait
clc
ja
jnp
mov
xchg
shlb
cltd
push
add
and
shlb
push
loop
and
int3
push
xor
loope
scas
test
and
xorb
std
inc
dec
scas
mov
das
or
add
push
pop
xchg
inc
movsl
jmp
fimull
mov
call
jo
pop
clc
jp
clc
inc
cmc
sti
fsubs
or
out
subl
inc
mov
repz
xor
push
ljmp
mov
adc
xor
adc
in
sbb
dec
lahf
imul
dec
mov
lret
mov
fbld
mov
mov
dec
loopne
or
mov
mov
stc
in
cmp
int
add
or
cltd
push
jmp
aaa
pop
mov
lods
lret
ja
cltd
iret
pop
rclb
pop
lds
adc
into
push
cltd
out
mov
jl
jbe
adc
pusha
sub
insl
push
xchg
mov
nopl
js
add
int3
xchg
lea
cmp
xchg
shl
stc
pop
jg
xor
out
mov
cmp
xlat
sub
lcall
cmp
fsubrl
sti
call
push
mov
in
jge
dec
daa
test
jmp
icebp
rcll
push
dec
mov
call
mov
sub
loopne
sub
shrl
cli
les
xchg
fnstenv
enter
add
mov
fdivrp
push
out
xchg
aam
and
pop
outsb
dec
mov
les
ficoml
ss
and
sub
ficoml
push
repz
std
jns
jno
adc
pop
rcl
mov
iret
or
ret
jecxz
ret
inc
std
xor
cs
clc
mov
imul
xchg
or
and
clc
push
inc
mull
cmp
jae
mov
mov
mov
or
es
jae
push
shll
fsubrl
add
bound
push
push
pop
pop
pop
push
pop
push
lret
inc
or
sub
lea
cmp
add
test
mov
call
je
repnz
inc
aaa
sahf
sub
sahf
mov
and
cmp
divl
xchg
add
mov
getsec
inc
bound
fnsave
sub
cmp
pop
rcr
mov
arpl
sbb
pop
hlt
ret
out
sub
stc
xchg
and
insb
pop
push
dec
test
cmpb
mov
and
pop
inc
aad
cli
inc
jmp
and
mov
dec
dec
or
mov
ret
nop
daa
inc
ja
rcr
fidivs
notb
lock
mov
das
or
cwtl
andl
sbb
scas
cmpsl
das
jle
sarb
pop
and
cmpsb
arpl
sub
out
mov
lods
test
iret
push
pusha
sti
pusha
mov
fldz
dec
cwtl
xor
in
aam
es
shll
adc
add
mov
aad
cli
bound
mov
dec
mov
pop
insb
or
das
stc
enter
ret
sbb
push
aad
rclb
jl
jns
xor
xlat
sbb
scas
sub
adc
inc
aam
idivb
jnp
mov
imul
jae
rcll
adc
imul
iret
sub
inc
mov
xchg
jno
push
fnstcw
jbe
movsb
in
addr16
cmp
inc
sub
push
mov
cwtl
fwait
pop
shll
in
lods
jg
mov
sti
add
int3
xchg
jbe
out
notl
inc
pop
cs
add
or
pusha
sahf
adc
mov
jge
leave
inc
repnz
and
aam
testl
insl
and
fidivl
inc
lock
mov
push
mov
xorl
pop
imul
push
adc
dec
push
outsb
sub
out
or
jmp
mov
js
inc
shl
dec
insl
outsl
mov
mov
aam
std
pop
cltd
test
icebp
test
cmp
inc
sbb
sar
ffreep
mov
idiv
cmp
loopne
inc
mov
mov
inc
aam
jle
mov
sbb
bsr
pop
mov
xchg
lea
daa
jbe
mov
dec
leave
push
pop
jg
lcall
repz
shlb
icebp
inc
int
setae
inc
push
addr16
data16
cmpl
pushf
pop
xchg
popa
insb
push
mov
addr16
jl
or
jns
out
push
lcall
pop
stos
sbb
scas
mov
xchg
inc
mov
das
fwait
test
mov
mov
cltd
aas
inc
andb
aam
lahf
pushf
push
xor
cltd
fldt
ss
cli
fld
xchg
icebp
clc
ds
pop
push
mov
or
cs
loop
shll
push
jnp
sbb
sub
pushf
shr
mov
add
ficomps
mov
pop
pop
sbb
or
xchg
jae
test
add
mov
or
fidivrs
add
inc
stc
stos
sarl
dec
push
jb
pop
std
sub
xor
dec
push
leave
adc
inc
mov
arpl
hlt
aas
xor
sbb
aad
sub
xlat
mov
mov
mov
mov
jo
sbb
mov
jle,pt
cmp
inc
inc
in
stos
xlat
jge
mov
jbe
sbb
ss
aam
test
pop
inc
imul
fcompl
mov
mov
add
aaa
jbe
or
mov
out
dec
cmp
lret
sub
sbbl
push
fnsave
scas
mov
and
mov
cs
clc
mov
dec
push
sbb
sbb
js
imul
icebp
or
movsl
sub
dec
arpl
or
es
pop
mov
or
fnsave
imul
out
mov
jge
ljmp
mov
pop
jge
xchg
or
jno
not
pusha
xor
repnz
mov
imul
icebp
jle
bound
adc
cmp
out
daa
adc
push
lcall
jbe
cmp
push
dec
daa
lea
and
adc
jle
leave
dec
aad
add
cmp
pop
push
cmc
stc
rcl
cmpsl
jp,pt
jmp
dec
insb
jmp
cli
dec
push
add
mov
sar
mov
xlat
pop
mov
adc
scas
imul
xchg
test
aaa
mov
mov
and
mov
nop
or
sub
and
sbb
out
dec
pusha
xor
and
jnp
lahf
sbb
and
pop
test
jp
cmp
push
jb
stos
push
pop
and
xor
popa
gs
imul
repnz
lods
movsl
mov
and
adc
adcl
inc
dec
inc
pop
out
xchg
insl
xchg
ret
inc
loope
cmp
xlat
lds
inc
xor
in
or
mov
gs
andl
mov
scas
mov
repz
loop
dec
inc
stc
daa
sbb
cmp
je
ja
fisubrl
mov
popf
cmp
sti
data16
adc
mov
cmc
xchg
add
out
mov
lcall
sub
in
outsb
mov
rcrb
fnstcw
jecxz
xlat
shr
loopne
lods
cmp
inc
xchg
xor
test
dec
jp
jb
jns
aam
xchg
mov
sbb
push
push
cmp
inc
mov
data16
xor
pop
icebp
xor
jp
jae
mov
shl
stos
test
repnz
xlat
mov
je
movsb
outsl
mov
popa
imul
pop
imulb
not
xlat
aaa
test
mov
dec
pop
call
mov
cltd
je
les
or
aam
ret
scas
sbb
and
mov
ffreep
in
lea
xor
ljmp
dec
or
cld
test
dec
and
jno
sbb
xor
and
loop
notl
pop
call
stc
test
mov
push
xchg
stos
xor
jne
ds
jno
mov
ds
or
dec
movups
push
sbb
ret
test
ljmp
push
int3
pop
in
jne
jl
mov
fdivr
mov
dec
mov
fiaddl
push
dec
in
loop
add
xchg
insb
sub
rcrl
cmp
mov
cltd
js
mov
sub
mov
or
pop
mov
pop
pop
inc
and
adc
mov
adc
lods
dec
push
pop
fwait
pop
mov
lock
sub
sub
push
pop
outsl
cmp
out
and
ds
adc
cwtl
divb
ja
inc
repz
hlt
pop
mov
adc
popf
jo
sub
ret
xchg
test
or
jnp
and
add
sbb
mov
push
jecxz
add
xchg
sahf
loop
aas
mov
cs
iret
cmp
shlb
jmp
ljmp
mov
and
jb
push
imul
shrl
ljmp
push
push
jp
pushf
jmp
aad
hlt
testl
xchg
sahf
aam
sbbb
sbb
sub
ficompl
aam
mov
xor
inc
ret
jne
adc
cmp
xlat
es
jl
mov
xor
stos
or
inc
jecxz
loopne
cld
and
fildl
in
ss
hlt
aam
fwait
aad
sti
inc
cmpsl
push
test
sbb
shrl
cwtl
shll
popa
lahf
dec
mov
lods
cmp
mov
add
jmp
out
cmp
or
mov
rcrl
les
cmpsb
cli
jmp
ljmp
jb
push
sbb
imul
clc
cmp
jmp
rorb
and
ret
stos
adc
rcrb
adc
rcll
xor
fisubl
sub
mov
mov
inc
jg
lret
jmp
jne
sbb
enter
and
jp
xchg
mov
arpl
ja
xchg
imul
fldl
into
add
in
sub
cmp
mov
out
inc
xor
dec
xchg
jnp
outsl
jp
xchg
jle
imul
push
push
mov
jo
jecxz
xlat
jno
mov
pop
aaa
pusha
cmp
cmp
mov
nop
cmc
push
mov
jecxz
out
xor
adc
mov
test
lds
shl
dec
je
sub
jp
adc
mov
pop
pop
test
pop
push
pandn
test
push
cmp
pop
add
xchg
or
lcall
in
sub
ds
adc
fwait
out
mov
inc
cltd
cmp
gs
mov
sbb
adc
push
insb
leave
inc
pop
out
ss
mov
ret
aad
add
loopne
pop
incl
aad
pop
pop
sub
outsb
inc
push
mov
mov
sbb
jge
ljmp
pushf
sbb
jmp
adc
xchg
inc
test
jae
xadd
dec
dec
popf
int3
push
stos
mov
xchg
mov
lds
push
sub
adc
pushf
rolb
pop
cmc
cmpsb
push
xchg
jns
add
lcall
push
adc
dec
popa
stos
sbb
inc
push
test
rcrb
inc
sub
xchg
dec
or
push
mov
dec
mov
or
mov
mov
paddusb
sahf
xchg
decl
in
add
mov
fmull
or
aam
jmp
lahf
sbb
cmp
mov
mov
jl
lret
jecxz
dec
pop
shl
movsb
aas
xchg
adc
jmp
adc
int
push
fs
mov
fsts
icebp
sub
cwtl
or
in
adc
push
arpl
dec
cmp
ja
cmp
add
jg
outsl
in
push
inc
sbb
test
outsb
inc
ds
testl
push
clc
pop
clc
push
scas
jae
and
jnp
shlb
push
cltd
mov
pop
xor
arpl
out
je
mov
push
mov
std
pop
dec
push
xchg
mov
xor
test
fptan
sub
inc
aas
or
mov
xchg
sbbl
pop
jnp
pop
cmpsb
push
out
pop
inc
fmull
pusha
push
inc
pop
lcall
mov
cmp
push
fistl
xlat
fcmovu
pop
ss
push
mov
xor
adc
jbe
mov
or
bound
dec
pop
push
dec
sub
sub
neg
mov
pop
jns
ror
out
mov
mov
push
xchg
insl
mov
je
or
pop
inc
adcb
addb
dec
and
dec
or
mov
pop
lea
xchg
inc
rcl
loopne
sbb
and
inc
xor
mov
scas
jne
ljmp
cld
jne
stos
ljmp
push
dec
cmp
dec
popf
movsb
and
cmp
inc
rcl
setae
cmp
mov
out
mov
dec
dec
inc
or
popf
movsl
loop
or
xor
sbb
leave
out
shlb
sub
push
cmp
jecxz
mov
inc
pop
minps
xchg
scas
sub
inc
fstpl
cmc
js
sub
adc
int
lock
icebp
repz
imul
jg
pusha
ret
inc
xchg
jmp
or
add
pop
xor
sub
je
dec
pusha
aad
scas
jns
jne
jbe
adc
or
mov
add
pusha
arpl
movd
nop
fstps
pop
push
jp
mov
jmp
sbb
dec
mov
or
stos
ret
xor
fwait
outsl
xchg
cmp
jb
js
clc
mov
fildll
fdivrl
push
enter
adc
out
pop
pop
jo
add
adc
pop
mov
xchg
in
into
mov
or
pop
fnstsw
gs
sub
les
sub
shlb
inc
xlat
jbe
add
imul
push
shl
fisubrl
jge
jne
sbb
test
inc
ljmp
push
mov
gs
lds
ja
jle
xchg
outsb
push
push
or
push
xor
or
jne
call
and
cld
scas
lret
mov
cmpsl
insb
cmp
cmp
filds
cli
orl
scas
mov
push
pop
xchg
fs
xor
inc
or
sub
adc
xlat
cs
jmp
jbe
fwait
ds
sub
sbb
pop
pop
adcb
pushf
or
adc
test
test
mov
out
adcl
imul
dec
or
ljmp
addl
arpl
insl
adc
inc
mov
push
xlat
push
fwait
inc
and
int
nop
loope
inc
out
test
ja
pop
loope
fnsave
fsts
xlat
lock
dec
fdivl
outsl
xor
repnz
test
mov
imul
xchg
lret
lahf
loopne
cmpsl
push
inc
lds
cmp
inc
lock
jl,pt
pop
jl
xor
mov
sti
insl
dec
cmpsl
jmp
into
fsubrs
dec
pop
insb
fucomip
lods
std
inc
es
xchg
push
xor
sub
je
out
mov
jb
stos
cs
push
mov
insb
fcmovne
nop
mov
mov
fdivs
sbb
movsb
mov
add
add
jle
shr
mov
adc
cld
pop
xlat
pop
or
cmp
push
mov
ret
cmp
mov
push
xor
sub
cmp
aas
adc
addr16
jp
rclb
shrl
mov
jl
je
xor
adc
mov
cmc
mov
cmp
mov
xchg
cmp
in
lods
jbe
mov
mov
push
std
jbe
outsl
int
cmc
test
out
pop
dec
or
xchg
and
addr16
or
xchg
subb
push
fsubrl
ja
sub
fisttpll
mov
xor
add
cmp
hlt
cli
push
sbb
jb
das
call
dec
test
mov
mov
and
cmp
mov
cmp
jb
repnz
ljmp
mov
sbb
outsl
arpl
xchg
imul
dec
call
loop
div
insb
or
mov
aaa
add
imul
jp
cs
imul
subl
and
mov
out
pop
adc
mov
scas
rcll
dec
pop
pop
xchg
push
sbb
inc
mov
test
push
adc
jecxz
arpl
mov
sub
adc
loopne
pop
ret
stos
test
mov
enter
jmp
bound
ss
test
xchg
and
pop
mov
sub
sub
stc
sub
jbe
inc
filds
aam
push
test
loopne
frstor
movsb
inc
adc
push
ja
push
push
jle
dec
mov
jb
push
cmp
sbb
loopne
ds
xchg
xlat
les
dec
xchg
xorl
xchg
inc
subb
repnz
daa
add
sub
and
into
out
adc
mov
pop
ss
cld
sbb
insb
mov
sbb
jge
mov
lahf
rcl
in
das
imul
js
fwait
jge
jecxz
xor
cmpb
in
jbe
pop
icebp
add
pop
mov
clc
es
out
aam
rcll
add
popa
lods
adc
lods
xchg
out
push
stc
mov
sbb
ljmp
aad
adc
sub
sub
xchg
pop
xchg
mov
and
inc
arpl
push
dec
xor
mov
es
jo
fisttpl
xchg
inc
push
mov
xor
xchg
outsb
push
inc
stos
lods
imulb
das
pop
ror
jge
dec
enter
div
pop
lds
push
push
jecxz
popf
cmp
sbb
or
iret
cs
lahf
pop
jne
shll
out
and
movsl
nop
inc
or
aaa
jbe
inc
xchg
or
pusha
push
inc
test
icebp
ror
arpl
and
js
xor
mov
or
mov
bound
inc
mov
xchg
in
mov
js
sbb
cmpsb
test
xor
jge
out
cmp
sti
lret
lea
pop
adc
rcr
scas
sbb
cltd
sub
mov
pop
mov
lock
mov
movsl
cmpl
or
cs
xchg
mov
xchg
out
rcrl
imul
push
add
pop
mov
sub
leave
das
decb
push
xor
fisubs
test
push
fsubs
iret
ret
test
sti
scas
xor
or
repz
stos
scas
and
add
jb
cmpxchg
push
push
mov
call
inc
das
cltd
out
aas
push
mov
aas
push
arpl
sbb
cltd
fs
add
sub
push
push
sti
push
sub
xlat
add
or
clc
aam
mov
mov
xor
xor
aas
rol
aaa
out
ret
movsb
jg
or
jb
pop
push
call
lds
jae
in
add
lds
movsb
iret
icebp
xchg
cli
cmpb
pop
mov
fcomip
inc
inc
jns
aas
xor
xchg
mov
mov
mov
mov
imul
cmpsl
xor
stos
xor
push
adc
sbb
rcrl
cmc
dec
inc
jne
xchg
pop
test
jo
cmp
leave
dec
in
sbbl
push
cs
sbb
insb
cmp
test
loop
mov
jno
xchg
sbb
das
lcall
xor
sahf
push
cmp
add
jbe
push
jne
jbe
pop
addr16
std
rcll
xor
fwait
vandps
or
out
ljmp
aam
add
xor
aaa
daa
sbbl
mov
mov
push
mov
sahf
push
aaa
xlat
cmp
call
mov
call
ss
adc
add
mov
sub
add
jbe
push
les
sarb
push
pop
mov
xor
add
push
out
mov
jb
mov
cmc
cmpsl
mov
xor
push
push
sbb
xlat
stos
dec
jo
xchg
cs
fistl
mov
jb
aas
shlb
imul
fsubrs
dec
subb
push
stos
js
in
xor
hlt
jne
jl
cmp
lock
jle
sarl
push
push
mov
mov
hlt
pop
mov
pop
subb
clc
adc
insb
xchg
arpl
shrb
mov
fnstenv
outsb
cmp
movsb
pop
inc
aad
aam
jle
jns
imul
and
mov
cli
mov
test
fiadds
mov
sbb
inc
push
adc
lods
pop
mov
inc
loop
and
jbe
rolb
xlat
lahf
inc
fwait
lahf
hlt
xchg
xlat
outsl
pop
jae
lret
mov
stos
jmp
xor
mov
push
xlat
xor
mov
jne
imul
jmp
cli
sub
mov
xchg
mov
add
sbb
cs
mov
out
cltd
les
mov
cmpsb
ljmp
push
mov
fs
add
mov
loopne
lds
hlt
xchg
ljmp
adc
xchg
insb
and
ss
or
arpl
sub
ja
js
jecxz
mov
sbb
pushf
adc
sbb
insb
or
out
fs
outsb
lea
push
or
sbb
ljmp
sub
fstl
je
jmp
divl
sub
das
sub
pop
jmp
sub
js
outsb
stc
lret
pop
mov
sbb
xlat
mull
cli
inc
pop
cmp
pop
sbb
or
pop
add
popf
add
add
lcall
push
iret
jl
xlat
sub
hlt
insl
lock
xor
into
loope
aas
test
pop
in
pop
or
mov
imull
repnz
fxtract
push
mov
inc
mov
dec
sub
mov
mov
or
cmc
add
int3
and
mov
mov
sbb
adc
xchg
divl
lea
ret
adc
sti
jl
mov
jmp
add
and
and
repz
sbb
into
stos
sbb
push
lock
cmp
cmp
clc
pop
cs
int
dec
rorl
addr16
in
pop
jl
add
adc
jbe
xchg
fwait
and
rclb
and
icebp
out
pop
mov
dec
pop
icebp
les
clc
add
push
jp
in
int3
push
pop
xchg
sbb
mov
aad
jo
or
push
daa
cmp
mov
mov
xor
hlt
rcll
xchg
adc
sbb
cmpsb
lea
sub
pusha
ljmp
add
nop
add
loope
lds
ret
faddl
mov
lods
sub
pop
push
push
sub
out
mov
push
jno
adc
je
insb
jae
test
mov
sbb
insl
call
popa
shl
or
jecxz
icebp
data16
out
shlb
sbb
lds
xchg
movsb
lods
sbb
clc
shlb
dec
jnp
cmp
sbb
adc
cmp
lea
sub
jns
addr16
cmp
mov
xchg
mov
in
mov
cmp
cmp
loop
dec
mov
daa
mov
mov
push
pop
jne
mov
les
push
pop
xchg
pop
pop
add
sbb
inc
xchg
cmp
testb
pop
mov
mov
loop
shrl
lahf
scas
sahf
sbb
testb
inc
insb
sbb
inc
push
pop
sar
fdivp
aad
or
dec
and
and
push
pop
cmp
orl
xchg
pop
jl
icebp
and
out
orb
mov
mov
loopne
std
push
mov
dec
mov
fsts
out
mov
fwait
jno
outsb
scas
push
aam
jb
mov
rcrl
roll
dec
div
push
popa
adc
pop
lods
fs
cmp
jle
or
adc
loopne
dec
jl
mov
in
shrl
out
int
inc
jne
aam
mov
push
out
stos
dec
dec
iret
pusha
dec
call
cmp
in
mov
loope
and
mov
test
lods
mov
inc
push
leave
iret
movsb
adc
mov
ljmp
inc
loope
fistl
or
mov
js
sub
cmpsb
mov
xchg
push
insb
outsb
pop
mov
adc
sbbb
shll
stc
nop
cmp
or
jnp
inc
or
sub
inc
hlt
dec
mov
pushf
insb
and
and
pop
ja
ret
jge
push
loope
mov
pop
nop
sub
icebp
imul
mov
mov
shr
ljmp
clc
inc
arpl
pop
aam
mov
addb
sbb
push
xchg
mov
add
inc
mulb
adc
mov
out
dec
shlb
jp
xchg
sahf
pusha
mov
sub
enter
test
popa
cmp
imul
ss
pop
sub
jo
jo
adc
aaa
jmp
imul
outsl
je
scas
std
or
push
stos
bnd
incl
jb
adc
fdivrs
stos
imul
insl
push
inc
jbe
add
jns
imul
and
xchg
pushf
cmp
add
test
cmp
jbe
in
pop
lret
and
push
dec
inc
js
test
mov
or
sub
aas
cmp
shl
xlat
push
ret
sbb
lahf
xor
out
jno
push
shrb
insl
std
xchg
lds
lds
dec
decb
ss
pop
cmp
add
xchg
in
mov
fimuls
fistpl
add
push
mov
lods
pop
jo
cmp
cmp
daa
cltd
scas
cmpsb
outsb
out
mov
cli
cmp
cmp
out
sti
xchg
ret
cwtl
sti
and
xchg
out
daa
ds
adc
ret
or
popa
push
enter
ja
push
push
cmp
mov
mov
cmp
xchg
icebp
mov
pop
jp
scas
jae
pop
mov
and
in
test
xchg
or
fsubp
imul
mov
sub
push
and
mov
inc
fsubl
fstpt
sar
inc
mov
jge
ret
dec
mov
hlt
xchg
mov
pop
sub
mov
xlat
lahf
mov
int3
jle
ja
push
pop
push
sub
ljmp
lods
jne
int3
aam
push
aaa
daa
lods
lock
mov
mov
xchg
adc
adc
push
pop
mov
out
ret
xor
in
add
rolb
sbb
mov
sub
aas
dec
cmp
imul
xchg
movsb
loopne
cmpsl
js
dec
cs
push
out
push
jnp
out
in
clc
loop
pop
xor
stos
and
push
lahf
cmp
jl
push
out
sahf
lcall
outsl
mov
cmpsb
in
mov
das
aaa
rclb
fistps
loope
pop
and
out
in
push
and
pop
push
mov
stos
cmp
repnz
movsb
filds
jp
jno
jp
int
sbb
pusha
js
push
mov
cli
jmp
scas
mov
popa
cmp
dec
mov
addb
imul
cmp
das
xchg
mov
and
ds
xchg
enter
ljmp
inc
xchg
js
ds
int3
sbb
pop
pop
sarl
pop
jne
sbb
or
jp
sub
mov
dec
jbe
and
mov
and
ret
cmpsl
cmp
add
adc
pop
jmp
in
cmp
movsb
jmp
add
jnp
loop
ffree
pop
cld
xlat
xchg
ret
jns
pop
clc
loopne
xor
adc
sub
push
insb
xchg
test
cmp
jnp
mov
add
xlat
cmp
dec
sbb
add
mov
push
xor
push
or
jne
sub
dec
adc
sbb
orl
dec
dec
jmp
stos
mov
call
inc
fwait
mov
ljmp
cli
fcoms
or
dec
fnsave
cwtl
test
test
addr16
scas
rcl
and
out
rcll
adc
notl
or
push
rcl
dec
sub
popfw
imul
test
pop
gs
push
out
orb
clc
scas
out
jae
cmp
iret
xchg
mov
std
cmp
jecxz
scas
pop
cmp
fsubs
cmpl
lock
push
xor
dec
shl
pop
out
push
xor
into
imul
xlat
popa
fmull
lock
sub
int
mov
test
sbb
cs
inc
pop
mov
out
and
daa
or
ss
ret
sbb
test
outsb
out
xchg
xor
divb
add
and
sub
rcr
dec
call
xor
sbb
xor
int3
jb
rorl
push
das
mov
subb
repz
call
addl
mov
fs
leave
push
mov
and
arpl
pushf
pop
pop
incb
mov
push
test
jmp
ja
enter
lea
xor
fsubr
movsl
mov
xchg
sub
jmp
jmp
std
int3
adc
hlt
ss
mov
jnp
loop
pop
movsl
addl
xchg
ljmp
xlat
dec
and
dec
jecxz
jb
xor
subb
lds
mov
test
nop
adc
pop
dec
xchg
fldcw
mov
test
hlt
hlt
adc
adc
icebp
add
rcrb
loope
add
fistpl
inc
in
insl
sub
scas
xchg
xchg
test
jle
xchg
pop
fisubrl
das
inc
dec
mov
loopne
pop
push
std
push
adc
pop
inc
push
and
push
ja
sub
cmp
dec
cmc
cmpb
repnz
in
jne
inc
sbb
in
ficoms
or
jp
or
outsl
mov
int3
in
repz
push
and
jg
aad
lds
xor
shlb
cltd
in
cltd
test
jge
leave
inc
mull
cltd
push
movsb
loope
jnp
scas
orb
xchg
clc
and
or
sti
rorl
adc
outsl
and
cltd
adc
adc
out
mov
aas
sti
lahf
mov
loop
mov
xchg
mov
cmp
adc
pop
add
std
fmuls
fwait
adc
daa
inc
xchg
and
inc
lcall
mov
div
aas
cmp
call
dec
inc
insb
sahf
pop
fst
xlat
lock
js
aad
cmp
adc
xor
cmp
lock
addl
cmp
xor
addb
out
jge
sahf
aaa
mov
int3
lahf
sbb
ss
mov
lret
inc
test
push
jg
fidivl
pop
dec
clc
out
jle
pop
inc
jge
divl
sbb
insl
mov
jns
mov
aam
sti
xor
sbb
lds
jecxz
jle
lea
lods
pusha
jmp
sbb
xchg
xchg
adc
adc
jne
adc
mov
sbb
cmpsb
mov
adc
mov
outsb
sbb
cmpsl
mov
pop
clc
aad
int
push
push
and
lea
insb
sbbb
inc
and
cmc
push
jb
adc
jle
test
rcl
pushl
adc
cmpl
popf
dec
add
mov
iret
out
push
ficomps
jb
xor
loopne
inc
push
lret
test
test
je
inc
push
jl
xor
std
adc
jge
fadd
cli
sbb
ljmp
cmp
xlat
ret
jge
icebp
test
push
and
pop
xchg
call
and
call
imul
mov
jg
hlt
or
sub
cmpsl
int3
pop
lds
mov
jge
fnsave
inc
ds
mov
jnp
ds
mov
bound
out
xlat
mov
sbb
sti
mov
ret
je
aam
mov
leave
adc
adc
inc
sub
inc
into
test
and
inc
aam
pop
jg
mov
xchg
ljmp
cmp
mov
ret
sub
rorb
mov
shll
clc
scas
test
mov
add
jae
into
adc
ds
dec
xchg
inc
fdivr
lcall
dec
push
fdiv
movsl
rolb
shlb
out
lret
jne
add
jle
fcompl
fprem
into
push
decb
push
add
and
nop
push
inc
ret
sub
jo
add
add
inc
push
std
add
stc
xlat
push
orb
pop
inc
mov
xor
xchg
dec
push
pop
push
ret
or
arpl
jne
jno
into
jl
push
jb
dec
push
sbb
lods
add
vpaddsb
sub
or
in
sarb
ss
sbb
add
test
sbb
cmp
inc
je
pop
adc
cwtl
fs
jmp
xchg
add
call
rorl
out
sbb
aas
adc
mov
fwait
push
push
lock
adc
dec
pop
jge
pop
fisttpll
inc
push
std
mov
dec
idivl
mov
push
xchg
cltd
das
leave
jno
scas
xchg
jbe
scas
addr16
test
loope
mov
out
stc
dec
in
fnstenv
or
out
mov
pop
push
ljmp
push
sub
ret
jl
add
jb
jb
pop
call
iret
cld
test
sbb
movl
push
fstpl
mov
jnp
lock
lret
int3
jae
mov
adc
or
cmpsb
push
dec
pushf
sbb
mov
push
imul
lds
js
popf
stos
pop
fadds
insb
aas
xchg
loop
repnz
jnp
dec
aam
jl
push
pop
sub
rcll
push
lds
mov
inc
or
ss
lods
push
aam
xchg
add
adc
rorb
outsb
rcl
xchg
sub
fs
loope
daa
into
clc
arpl
js
je
inc
mov
mov
stos
out
cmp
mov
fiadds
sbb
pop
aad
and
inc
aad
insb
adc
or
or
pop
hlt
ret
adc
push
push
jecxz
shl
xlat
hlt
or
dec
mov
and
clc
fmuls
push
mov
pop
stos
sub
jns
adc
cmp
je
mov
push
int3
inc
push
fdivs
pop
fsubrp
jge
pop
inc
mov
inc
and
push
js
cwtl
cmpsb
in
mov
in
mov
jmp
mov
aad
cli
movsl
fisubrs
cmp
adc
dec
incb
mov
pop
mov
jns
lcall
xor
mov
lret
orb
loope
aad
out
pop
jbe
and
out
pop
sub
push
sub
push
fwait
or
push
push
mov
jmp
inc
std
andb
sti
cmc
push
jl
hlt
jne
adc
xor
dec
xchg
dec
icebp
insl
out
or
mov
xchg
or
or
inc
add
xorl
call
arpl
xchg
add
inc
loope
outsl
mov
inc
pop
fdiv
dec
and
xor
test
lcall
sub
ljmp
xchg
pop
int
sub
or
daa
pmullw
sbb
xchg
out
xchg
xor
and
out
stos
mov
out
roll
jp
push
imul
loop
es
push
sub
xchg
push
sbb
loopne
pusha
mov
add
test
and
out
cmp
ret
jge
das
outsl
xchg
mov
mov
rorl
add
sub
mov
ljmp
mov
sbb
mov
dec
sbb
mov
dec
setb
js
ret
inc
mov
ja
mov
loope
dec
aam
icebp
jmp
lods
sub
adc
dec
xchg
ret
mov
mov
sub
push
lcall
sub
dec
fldl
sub
mov
icebp
je
dec
sar
lock
pushf
push
or
inc
lock
sbb
and
mov
mov
in
jbe
adc
mov
jno
mov
cld
mov
imul
mov
mov
or
and
test
mov
aad
dec
stc
mov
fnstsw
outsb
add
xchg
icebp
pop
sub
cmp
test
pusha
inc
in
decb
or
test
test
movsl
leave
in
jb
pushf
push
fdivrl
fmull
test
repz
aad
jge
inc
ja
pop
xchg
inc
cmc
sbb
mov
ffreep
push
iret
stc
push
push
negl
out
mov
inc
xlat
shlb
sbb
cmpsb
inc
scas
ficoms
scas
adc
fstpt
aaa
ret
gs
push
cmp
jb
stos
and
leave
xchg
hlt
jg
mov
and
pop
xlat
jl
ror
test
cmc
imul
add
sbb
imul
imul
idivb
ljmp
lcall
inc
push
jbe
decl
lret
sbb
cmp
inc
dec
scas
ss
sbb
and
adc
cld
pop
pop
sub
insl
imul
mov
sub
or
jbe
out
xorl
jns
sbb
or
int
jmp
inc
out
jp
push
push
notl
cmp
int3
xor
cmp
rcrb
loop
fiadds
xchg
fdiv
je
sbb
xor
push
ja
and
inc
add
cmpsl
mov
pop
jg
in
out
out
fisttps
jae
push
jg
and
cli
mov
pop
lods
out
icebp
xor
and
jo
push
cmpsl
sti
push
xchg
arpl
cwtl
loop
sub
sub
arpl
repnz
into
pop
imul
push
add
into
or
fiaddl
leave
sbb
jns
mov
lock
pusha
jp
pop
in
daa
adc
ljmp
push
mov
xlat
repnz
xchg
loope
add
repnz
or
add
jnp
mov
sbb
lcall
pop
or
push
fimull
xchg
or
mov
out
jg
cld
push
dec
js
rcl
mov
fisubl
xlat
pop
out
push
stos
add
mov
movsb
flds
je
in
bound
jno
and
lahf
das
mov
mov
push
rclb
sbb
jno
loopne
fadd
xlat
sub
aad
cmp
fucomp
xor
xchg
lods
mov
mov
out
mov
mov
dec
arpl
fwait
mov
jb
mov
sahf
cmp
inc
adcb
mov
mov
dec
jle
int3
rolb
sbb
out
pop
sub
ret
xchg
push
adc
pop
in
inc
aad
sbb
pop
outsb
arpl
adc
leave
xchg
jnp
mov
xor
sub
or
mov
arpl
cmp
int
loope
les
dec
cmovno
in
sti
fdivr
jbe
lock
or
xorb
outsb
fistpll
inc
xchg
loope
je
add
imull
pop
jbe
sub
jecxz
or
popf
sbb
sub
push
push
sbb
sahf
into
mov
sbb
and
jne
bound
push
mov
jle
insb
outsb
xchg
loope
xchg
ror
gs
push
sbb
outsb
ja
iret
ds
add
lret
jmp
enter
ret
outsl
mov
sbb
shl
sbb
dec
loopne
lret
cmp
cmc
mov
les
mov
call
lret
int3
dec
jno
jae
add
xchg
sbb
mov
add
xchg
inc
fadd
in
and
mov
lock
xor
cld
add
and
xor
int3
jns
jp
fnsave
or
inc
das
std
out
jmp
insb
add
lock
push
fidivrs
dec
cwtl
fimull
shr
dec
adc
das
push
leave
xlat
lods
mov
int3
pop
add
rclb
adc
jo
minps
xchg
cmpsl
cmp
popf
inc
sbb
outsb
mov
ss
movsb
xchg
gs
test
clc
sbb
dec
lcall
or
in
inc
call
dec
popf
jae
nop
push
mov
fcompl
xchg
cmp
mov
popa
xchg
push
push
loope
bound
xchg
cmpsb
test
push
cmc
push
jb
xor
pop
cmpsl
outsb
inc
movsl
mov
aaa
push
ffree
jp
pop
or
xchg
adc
push
in
mov
pop
lds
cmp
mov
cld
mov
pop
and
faddl
mov
mov
pop
sbb
out
inc
or
inc
fmull
enter
jns
repz
cli
mov
test
sbb
fdivr
jns
adcb
inc
test
fwait
or
in
imul
ljmp
push
cmp
push
inc
or
stc
scas
sbb
jnp
rcll
lcall
mov
les
cmpsl
aas
jl
bound
push
adc
add
inc
or
xor
add
shrl
pop
mov
pop
fcmovb
scas
ret
add
fadd
subb
std
add
out
xlat
gs
call
jnp
mov
ret
insl
lea
das
mov
call
jo
enter
pop
dec
mov
cld
mov
cmp
cmpsl
out
or
jp
inc
pop
xlat
and
nop
dec
pusha
pop
cmp
jg
mov
dec
pop
in
sbb
and
mov
cld
adc
sbb
cwtl
insb
dec
jecxz
idiv
in
dec
cli
pusha
jb
cmpl
mov
in
mov
andb
pop
jno
add
mov
sub
nop
pop
mov
mov
mov
cmp
mov
int
jbe
or
and
ljmp
gs
aam
pop
adc
xchg
mov
adc
loop
mov
adc
mov
lds
arpl
aaa
xor
jbe
fdivrs
and
mov
xlat
lea
jg
insb
shll
add
scas
xchg
je
cmpsl
enter
push
data16
or
mov
popa
pop
dec
call
outsb
mov
fnsave
aam
call
cmp
jmp
fnsave
idiv
aad
and
push
xor
addr16
mov
inc
mov
jp
push
inc
shrb
pop
ja
pop
loopne
mov
sbb
sub
jno
int3
jno
mov
mov
cmpsb
cli
loopne
jecxz
dec
adc
push
push
outsl
xor
mov
and
insl
xchg
jle
mov
mov
xchg
jle
fimull
mov
adc
loope
mov
mov
bound
ret
mov
popf
mov
add
lds
pop
and
jg
loop
stos
lea
je
sbb
mov
inc
sbb
notl
or
std
pop
loope
cmp
mov
aas
and
hlt
mov
out
sub
in
in
addl
fs
xlat
jge
xor
dec
or
fstpt
xor
pushl
outsb
mov
cmpsb
psubusb
dec
std
rcr
or
sahf
cmp
pop
xchg
les
lods
sti
mov
subb
jno
cmp
push
xchg
cmc
scas
mov
push
inc
mov
pop
icebp
loop
mov
or
adc
and
test
jne
mov
popf
mov
sub
xchg
jl
clc
pop
cmp
cld
mov
jmp
mov
repnz
sbb
mov
je
les
dec
jno
shll
fsubrs
dec
loop
add
push
idivl
stc
ret
jle
loopne
fisttps
fwait
das
hlt
and
sarl
inc
pop
push
pop
lcall
dec
pop
fucom
incb
add
mov
push
adc
icebp
xchg
test
call
push
inc
rcrl
lds
jl
jp
fmuls
pop
dec
push
sbb
pop
or
ret
je
xchg
mov
ds
inc
out
pop
inc
pop
das
cmc
mov
data16
push
out
jecxz
mov
pop
loop
fdivrs
sbb
or
and
out
jp
iret
enter
in
mov
jg
jns
push
test
or
sbb
xchg
cmpsl
jmp
cmc
in
xor
gs
add
clc
icebp
aad
mov
cmc
cmc
jmp
orl
stc
xlat
mov
jmp
mov
subl
scas
pop
outsb
imul
inc
push
dec
lret
inc
test
fidivrs
dec
jb
adc
mov
cs
cmp
dec
subb
shlb
frstor
ja
jo
pop
pop
xor
dec
pop
jb
subb
xor
je
cmpsl
cmp
leave
cmp
mov
test
jb
dec
out
inc
imul
jge
fs
push
imulb
ss
in
pop
in
add
test
cmp
xchg
adc
fistps
ss
add
lods
cltd
orb
ss
shrl
ficoms
push
sbb
mov
rorl
xchg
imul
test
cs
sub
cmpsl
pusha
cli
cmp
xchg
sbb
mov
cmp
adc
mov
mov
adc
cmpsb
or
mov
fucom
mov
push
lea
sbb
jge
stos
sub
and
xchg
jb
pop
dec
sbb
shll
out
insb
lods
shlb
test
hlt
jecxz
jge
movsl
xor
inc
inc
int
es
pusha
cmp
popa
cltd
inc
lcall
lods
repz
adc
mov
stos
cmpsl
inc
aad
cmpsb
push
or
mov
cltd
addr16
cmpsl
mov
mov
insb
pusha
push
enter
insl
js
and
nop
pop
fcom
lock
dec
lret
or
arpl
sbb
das
mov
rolb
jno
pop
subb
adc
in
subb
dec
in
lcall
mov
push
xchg
push
loop
jnp
xchg
pusha
xor
andb
test
xchg
mov
fwait
js
aas
pop
fwait
popa
popa
xor
movsb
enter
push
aam
aam
mov
lcall
ret
pop
cld
fcmove
aad
loopne
pop
cmp
xchg
mov
pop
test
mov
arpl
cld
and
inc
in
xchg
mov
xchg
in
add
sub
test
mov
das
mov
fidivrs
sarb
dec
fmuls
in
ljmp
loop
iret
sbb
movsb
pop
pushf
cmp
ss
lock
adc
test
xor
adc
std
ljmp
aad
mov
divb
cli
add
nop
repz
cs
test
jb
xchg
cmc
xchg
mov
and
xlat
dec
cld
xor
fildl
jnp
pop
xchg
mov
jg
fdiv
test
pop
mov
push
call
mov
not
hlt
push
fidivl
inc
pop
or
fs
add
pushf
xchg
or
jne
push
mov
adc
add
je
ljmp
je
dec
in
pop
aaa
pop
sti
daa
in
xchg
dec
xchg
mov
das
leave
xor
and
xor
in
push
inc
in
add
cmp
fistl
rcr
push
pushf
roll
jo
mov
mov
mov
imul
lret
in
push
jle
pusha
pop
mov
xlat
test
push
mov
loopne
mov
pushf
sahf
iret
data16
dec
shlb
orl
ljmp
mov
loop
fistpl
lret
xchg
out
jmp
lock
cs
jl
mov
xlat
pushl
jno
xchg
mov
lock
mov
std
jp
sub
out
cmpb
jno
inc
sbb
les
cmp
xor
xchg
icebp
sbb
lock
ds
and
or
dec
jge
pcmpeqw
mov
cmp
jmp
jnp
pusha
rcl
mov
mov
adc
cmp
rcr
cli
outsb
mov
lret
ret
add
jge
dec
iret
loope
in
test
pop
in
jecxz
int
insb
and
pop
pop
inc
icebp
pop
fadd
jb
mov
mov
in
inc
std
in
sbb
xlat
pop
and
fistl
mov
sub
jp
and
xor
xchg
imul
test
outsb
mov
cmp
mov
daa
jp
xchg
loopne
int
enter
in
pop
mov
hlt
cwtl
sarl
sub
xlat
les
je
out
cmp
fs
xlat
mov
clc
add
insl
leave
mov
sahf
fidivs
sbb
mov
mov
out
xor
pop
mov
mov
test
add
mov
jb
jecxz
jp
loopne
mov
aad
inc
sub
scas
loope
fcompl
adc
and
mov
popf
addr16
enter
ss
xor
dec
out
outsb
lods
cs
and
add
inc
jg
jp
jb
lea
dec
mov
or
cmpsb
xchg
push
mov
push
inc
pop
insb
pop
pusha
lret
mov
mov
insb
rcrl
ljmp
or
fiaddl
pop
pop
mov
jmp
dec
and
mov
cmp
cwtl
dec
add
out
sbb
jmp
jno
and
mov
lea
dec
mov
call
pop
mov
mov
jnp
xor
push
adc
cmp
je
mov
cld
add
ss
aaa
xor
or
test
outsb
enter
sbb
sbb
bound
jo
dec
gs
shlb
in
xchg
mov
cld
arpl
xchg
or
ret
ds
push
sti
orl
mov
out
ljmp
lods
push
dec
loopne
into
fdivrl
and
adc
or
lcall
mov
movsb
gs
mov
or
push
call
pop
fcom
xor
cmp
pop
xchg
inc
lret
out
xchg
add
dec
pop
xor
jo
and
jecxz
call
and
jge
in
js
jbe
scas
adc
lret
jge
and
mov
pop
cmp
mov
in
pop
sti
mov
and
ret
mov
aam
sub
pop
inc
sbb
jae
cli
pop
sbb
imull
push
cmp
dec
popf
iret
jle
sbb
data16
cmp
aaa
ret
push
arpl
jge
fs
ljmp
ret
scas
push
xchg
adc
aad
jnp
adc
dec
cmp
andl
sbb
lret
stos
mov
pop
int
pop
push
lcall
pop
push
jno
mov
fadds
dec
xchg
int
push
cltd
or
mov
adc
pop
inc
call
nop
xchg
add
insl
das
and
aaa
sbb
pop
jae
and
outsl
adc
sbb
pop
fwait
dec
xor
and
loope
push
mov
les
pop
ret
mov
filds
fsubs
test
inc
iret
add
push
sub
add
pop
push
out
mov
lock
cmp
in
dec
cltd
add
lcall
decl
push
aad
jl
mov
sub
xor
lods
jae
cmp
aas
lea
xor
ljmp
sub
cld
js
outsl
mov
lock
sbb
into
xor
xor
cmpsl
int
jae
ljmp
aaa
js
shlb
jp
pushf
inc
add
jl
insl
cmp
std
movsl
mov
loope
sub
or
int
dec
xchg
popf
fdivs
mov
int
subl
mov
push
in
fnstsw
push
push
mov
sbb
test
hlt
push
bound
ret
fldl
fdivs
xchg
in
inc
insl
mov
mov
pop
xchg
add
xchg
or
clc
sub
mov
in
stos
sub
push
inc
inc
popf
sti
test
addr16
stos
scas
jle
out
sbb
fldenv
nop
jae
cmp
inc
stc
stc
addr16
mov
dec
sbb
fdivs
xlat
mov
xor
inc
and
push
push
mov
outsl
dec
adc
shll
popf
jbe
mov
jbe
and
jnp
dec
aas
jo
int3
leave
mov
lahf
pop
pop
jp
mov
stos
shll
mov
imul
inc
xlat
hlt
adc
test
int3
add
adc
xchg
int3
scas
pop
cmp
imul
movq
fidivrl
les
lods
push
jge
fcomi
inc
push
outsb
in
adc
out
push
pop
fnstsw
add
pushf
and
push
or
lahf
fimull
cmp
std
test
stos
jmp
mov
mov
mov
or
shr
lcall
xchg
jne
aam
stos
stos
test
push
filds
popa
push
xchg
mov
sti
jp
cmp
mov
ret
mov
jnp
addr16
push
or
cmp
add
cmp
or
and
stos
lods
xor
stos
sti
pop
xor
mov
outsb
lock
notl
lods
ficomps
adc
fnstsw
push
cltd
or
and
add
add
and
imul
mov
sti
xchg
sub
xor
mov
ss
push
or
data16
enter
inc
loope
aas
cmp
mov
aam
push
into
xchg
lods
jb
sub
out
pop
sub
mov
push
iret
mov
mov
sbb
push
push
jl
fimuls
or
cmp
lock
sub
add
pop
fisubs
inc
loope
jnp
pop
shll
addl
mov
aas
insb
lcall
pop
xor
cmp
jmp
in
cld
inc
xor
jp
aam
int
loope
mov
jle
movzwl
mov
ljmp
or
pop
js
lock
or
mov
push
fadds
int3
movsl
pop
into
aam
clc
nop
adc
in
push
ss
mov
in
cltd
movsb
stos
cltd
out
clc
test
mov
cmp
or
fistpll
sbb
cmp
in
add
loopne
or
xorb
sub
iret
dec
icebp
jge
pop
fstpt
mov
pop
pop
jg
lcall
add
int
iret
jo
xor
fdivrs
imul
ss
loopne
mov
decb
mov
sbb
ss
sub
call
fldenv
imul
jo
mov
mov
and
inc
orl
mov
data16
mov
cmp
xor
pop
dec
in
ljmp
mov
ds
xchg
jb
fdivrl
and
sbb
cmp
mov
mov
sub
out
andl
sbb
sub
mov
pop
dec
lods
jge
test
daa
add
out
push
sti
xor
mov
cmpsb
dec
cld
fdivs
inc
fnsave
out
test
mov
jge
lock
xchg
test
or
fdivs
xor
fisttpl
add
adc
pop
loope
xchg
hlt
push
dec
sub
mov
outsl
add
cmpsl
push
mov
punpcklbw
mov
fadds
cs
or
icebp
subl
add
ljmp
ljmp
adc
xor
hlt
xchg
std
sub
lock
inc
in
add
lods
mov
xor
or
add
sahf
xchg
leave
pop
fiaddl
xor
into
fidivl
ljmp
xchg
pop
loopne
cmpsb
das
or
cmp
mov
je
in
jne
inc
mov
jl
dec
nop
sarb
and
jo
cltd
sub
push
loope
jo
stos
jecxz
cmp
arpl
in
mov
mov
sub
and
daa
shl
jmp
cmp
push
add
xorb
push
adc
lea
lods
lret
js
adc
sub
xor
addl
scas
outsb
mov
iret
insl
repnz
mov
movsb
cmp
mov
sbb
leave
in
arpl
pop
or
jmp
or
lods
sub
hlt
outsl
xchg
lcall
inc
testl
imul
jae
cmp
mov
out
jo
loopne
hlt
fmull
setl
into
lods
out
jnp
clc
pop
adc
jnp
cld
insb
stos
test
les
mov
loop
rcrl
jae
xor
sbbl
aaa
jb
or
sub
das
jp
lcall
xchg
test
fbld
inc
bound
sti
popa
shlb
xor
xchg
xor
je
aad
ss
out
mov
xchg
jno
jle
pop
push
add
dec
mov
or
mov
mov
xor
pop
add
faddp
and
mov
cmp
pop
dec
push
fsts
sbb
mov
pop
mov
fmulp
cltd
fstpt
push
push
mull
andb
daa
sub
sbb
add
jo
call
dec
or
xchg
popl
aam
test
xchg
sbb
dec
aam
mov
ja
test
and
add
dec
inc
loopne
or
lods
push
xor
jl
mov
dec
mov
sub
mulb
mov
fnsave
push
sub
cmpsl
mov
jnp
pop
cwtl
sbb
push
shrl
in
mov
cs
mov
jbe
jb
insb
rorb
mov
out
mov
lea
jbe
jne
into
sbb
testl
cld
and
movsl
pop
push
cmp
lret
aad
mov
pop
hlt
inc
xor
mov
ljmp
lds
mov
in
pop
push
jge
pop
psadbw
cmp
mov
dec
pushf
int
cmp
sbb
inc
add
jecxz
jnp
mov
out
sub
sbb
ret
xchg
imull
ret
fbld
jge
jbe
and
fisttps
add
xor
pop
lcall
xor
es
or
stos
mov
pop
or
add
sbb
push
mov
loopne
dec
inc
push
xchg
or
pop
arpl
pop
pop
fwait
xor
push
fstpt
ret
mov
in
icebp
cmp
mov
jmp
mov
dec
fstpl
fcompl
jae
dec
mov
push
jl
test
nopl
in
nop
add
push
je
xchg
push
int3
popa
outsl
sub
rclb
push
xchg
adc
pop
adc
mov
sbb
xchg
dec
int3
lret
lods
scas
inc
mov
push
mov
mov
xchg
cmp
push
cmp
sub
cltd
cltd
and
call
sahf
je
scas
incb
cmp
movq
sub
mov
add
mov
repz
notb
gs
call
js
xchg
dec
nop
frstor
jnp
pop
mov
xchg
cmp
or
mov
shlb
lock
inc
scas
fldt
movsl
aad
mov
cmpb
dec
pop
and
mov
aas
mov
popf
test
gs
mov
push
test
loop
clc
aad
inc
outsb
mov
or
inc
mov
faddl
pop
jno
imul
add
lcall
aad
and
inc
mov
ret
mov
imul
cmpsl
cli
imul
and
and
adc
jg
inc
notl
in
inc
mov
mov
inc
std
xor
add
fadd
sbb
and
jecxz
pushf
sub
push
je
out
scas
sub
xor
stos
stos
lds
sbb
cmpsl
mov
lock
scas
push
pop
imul
rolb
out
scas
test
aas
in
xlat
je
mov
cmc
add
or
xor
call
rcrl
sub
push
pcmpeqw
dec
jne
xchg
aad
inc
sbb
push
into
push
dec
out
push
imul
push
std
cmp
jecxz
sti
shll
push
xor
imul
or
or
scas
scas
mov
fdivrl
push
aaa
sub
clc
ror
add
jne
xchg
ret
jp
xchg
lds
fcomip
xchg
cmc
test
mov
inc
jno
add
stos
mov
xor
mov
push
adc
cmp
pop
xor
ds
inc
ret
or
addr16
push
aad
insl
lods
jnp
test
hlt
adc
dec
inc
out
sti
je
scas
repz
xchg
sub
sbb
imul
loope
jl
xchg
movsb
or
roll
cmpb
mul
mov
fistps
jb
cmpleps
je
insl
adc
sbb
push
mov
je
adc
pop
xchg
fsubrs
fst
mov
imul
xor
inc
mov
jmp
out
out
dec
div
fsubp
faddl
jp
adc
xor
insb
fidivrl
dec
aam
push
cmp
enter
mov
xor
loope
sahf
cmp
xor
inc
out
filds
and
adc
es
arpl
xor
push
dec
cmp
mov
inc
add
stos
jg
xchg
popf
mov
and
clc
outsl
ret
inc
add
add
inc
fldl
fstl
or
mov
mov
out
push
dec
jg
jmp
jl
push
cli
sahf
loop
xchg
call
popf
jge
out
mov
lds
sahf
pop
push
clc
pop
or
pop
scas
mov
pop
pop
xchg
xorl
add
ss
jmp
and
push
loope
loop
pop
ret
mov
jecxz
int
mov
dec
movsb
int3
jns
loop
mov
dec
rcrb
sub
adc
push
shl
push
testb
mov
stos
ret
test
jne
cmp
push
sub
mov
scas
mov
mov
xchg
mov
loope
aam
fildl
dec
scas
fs
ret
lock
fnstcw
arpl
outsb
push
inc
add
test
mov
xor
fstpl
jne
or
jne
out
adc
add
pop
lock
lods
imul
push
sub
and
inc
xchg
mov
test
and
lods
push
loope
lock
sbb
and
sub
cmp
pop
xlat
lret
bound
rcrl
hlt
xor
add
iret
push
loop
faddl
push
mov
movsl
sbb
rcrl
inc
movq
mov
sbb
xchg
or
sub
sarb
lcall
leave
mov
imull
jnp
dec
test
cmp
pop
daa
adc
push
out
sub
cmp
test
pop
cmp
je
sub
jno
shll
xor
shll
jge
pop
xlat
xchg
ja
dec
iret
rolb
mov
adc
mov
imul
xlat
pop
push
rcr
sbb
ret
int
pop
pop
pop
test
pop
addr16
mov
movhps
adc
fistpll
mov
pop
sbb
cmp
insl
pop
pop
in
lcall
stos
inc
cmc
xor
mov
mov
sub
test
stc
cwtl
addr16
jmp
je
or
fs
and
inc
inc
fsubrl
aas
mov
subl
add
addr16
xchg
mov
mov
pop
lcall
loop
inc
xchg
arpl
insl
mov
int
aaa
lahf
enter
jnp
sbb
les
ret
and
pop
mov
pop
xchg
mov
ficomps
sub
sbb
push
fisubl
inc
or
jne
cmp
push
arpl
adc
hlt
mov
bnd
icebp
lcall
push
aad
dec
insl
jnp
les
aas
clc
clc
or
sarb
mov
out
daa
xor
xchg
mov
push
inc
cmp
call
push
jp
repnz
xchg
rsm
imul
inc
adc
clc
mov
scas
in
mov
mov
xlat
divb
mov
imul
fucomip
adc
stc
or
inc
insb
push
mov
clc
adc
mov
in
clc
xchg
addr16
sbb
push
out
andb
clc
aad
mov
scas
jmp
mov
lret
pop
push
mov
fisubs
mov
cmp
dec
xchg
jo
xchg
fcmovbe
push
ret
mov
divb
xor
or
push
aas
mov
jne
pop
cwtl
jl
into
inc
cmp
pop
loope
pusha
pop
fwait
popa
add
clc
sub
ret
adc
push
es
inc
add
mov
pop
add
ror
cmpsl
cmpsl
dec
lret
inc
ffree
inc
ss
mov
es
aad
xchg
rcll
test
mov
dec
add
pop
and
sub
sub
inc
push
aas
push
je
jns
pop
inc
aam
les
fstps
dec
std
lahf
movsb
les
daa
add
les
xor
xadd
ret
es
fs
fnsave
fsubrs
mov
sub
jge
inc
shll
sbb
xor
arpl
mov
loope
lods
jg
pop
hlt
orl
cmp
jl
shll
in
or
fwait
push
push
std
jp
cwtl
test
pop
je
fisubl
jns
mov
fisubrl
aam
cmpsl
sbb
loope
adc
fwait
mov
scas
cmp
dec
iret
xchg
rcl
mov
inc
dec
adc
loopne
inc
cs
insb
lds
dec
xorb
jmp
mov
cmp
jae
sub
dec
jnp
cld
cmpsl
hlt
mov
xchg
lret
pop
mov
arpl
push
jno
dec
aam
mov
fs
je
and
sub
sub
stos
mov
out
sub
repnz
sbb
cmp
sub
add
push
mov
aam
jle
leave
sbb
jbe
xor
and
popa
sbb
fucomi
xor
dec
jp
je
insb
ds
movl
inc
mov
out
inc
or
inc
mov
push
dec
mov
xlat
mov
incb
loopne
bound
and
mov
cmc
loope
psrlw
add
test
xor
mov
mov
adc
mov
cmp
bound
popa
fisttps
or
in
cmpsl
push
addr16
cmp
jmp
call
fistps
inc
movsl
xchg
jp
mov
mov
aam
into
popa
int3
mov
cmp
mov
mov
out
adc
or
imul
stos
lret
push
sbb
or
int
ret
rolb
das
lods
adc
pop
ljmp
leave
sbb
cwtl
jb
addr16
push
inc
cmp
jge
pop
xchg
adc
mov
add
and
jecxz
outsl
push
adc
cmp
push
wrmsr
mov
mov
hlt
xchg
pop
nop
lds
out
adc
insl
mov
out
push
pop
push
movb
iret
xchg
add
fdivrp
jae
insl
js
test
fxtract
pop
xor
pop
sbb
mov
jbe
push
or
stos
push
insl
mov
test
jnp
loopne
je
mov
mov
and
sbb
jle
dec
sbb
cmp
push
adc
insl
mov
test
out
dec
or
pop
sbbb
jo
jne
sub
lods
fcomi
cmp
mov
movsb
jl
xor
mov
faddl
mov
mov
and
mov
mov
cmp
dec
push
xchg
push
cmp
inc
rcrl
add
scas
jmp
push
add
pop
outsl
jle
or
dec
aam
sbb
jp
jb
ret
pop
in
rolb
or
adc
jmp
movl
jo
aam
inc
push
mov
push
inc
imul
dec
push
outsb
mov
outsb
jnp
test
in
lds
icebp
and
ret
lea
jmp
xchg
ljmp
iret
cmpsb
adcb
sub
sbb
icebp
jmp
cmc
xchg
cwtl
add
mov
sbb
mov
nop
popa
push
cmp
adcl
adc
int3
sti
jp
add
add
mov
xchg
pushf
sbb
es
dec
js
popf
and
call
scas
pop
dec
fbstp
xchg
push
ror
cmp
lock
or
push
fucomp
add
xor
mul
cld
push
sub
int
loop
dec
cltd
inc
dec
push
stos
subb
into
jbe
scas
aad
arpl
roll
jne
mov
shll
sbb
mov
adc
push
mov
sub
jge
mov
sbb
fnstsw
sbb
jno
pop
das
inc
ret
enter
dec
out
ret
stc
movsl
scas
xchg
adc
pop
xchg
enter
cmc
mov
ret
mov
hlt
sahf
inc
mov
ljmp
stos
addr16
andl
mov
repz
lods
icebp
divb
push
mov
fnsave
or
cmp
mov
cltd
fwait
dec
mov
inc
xchg
jmp
cmpsb
pushf
push
pop
inc
sbb
sbb
mov
add
mov
push
lret
or
insl
rclb
insl
add
scas
aas
outsb
out
or
insb
js
adc
sub
cmp
push
dec
insl
mov
xlat
test
rolb
lret
adc
js
lock
in
push
clc
adc
sub
stc
bswap
aas
hlt
mov
or
iret
mov
dec
fildl
dec
dec
rcll
sub
jp
sahf
dec
xor
dec
jl
icebp
pushf
mov
loopne
aad
add
jg
mov
dec
cmpsb
sbb
les
out
js
sbb
mov
loope
insl
dec
jne
clc
ror
fsubl
mov
xlat
dec
push
jns
xchg
or
jle
sub
test
push
pop
ljmp
push
sub
sub
ja
pusha
sub
dec
xor
outsl
stc
xor
outsb
ss
mov
cmpl
movsb
mull
cld
sbb
imull
xchg
sbb
pop
push
adc
movsl
insl
push
fiadds
mov
push
or
add
out
gs
pushf
sbb
jnp
dec
sti
jge
clc
out
lahf
enter
jle
mov
xchg
pop
mov
pop
pusha
push
or
push
mov
loope
push
dec
mov
sbb
fwait
mov
into
cmp
jae
out
rolb
call
and
pminub
xor
jp
sub
mov
sub
bndstx
clc
test
lcall
call
pop
test
subl
mov
ss
data16
loop
pop
rcll
sbb
pop
nop
out
test
push
pop
mov
ljmp
fdivl
mov
outsb
fldl
push
stos
and
je
push
rolb
adcb
fiadds
lods
ljmp
dec
or
hlt
adc
push
cmp
insb
faddl
js
pop
adc
xchg
stc
lods
sub
cmp
jp
jecxz
lock
xor
lods
mov
lds
mov
rcll
scas
inc
movsl
pop
push
jbe
mov
dec
in
dec
inc
lret
lock
xlat
shll
xor
add
cli
xor
int
outsl
je
out
sub
sbb
das
dec
mov
mov
adc
adc
or
outsl
aas
inc
sbb
fdivrl
add
mov
and
scas
jecxz
inc
inc
xchg
xchg
fiadds
mov
popf
ret
dec
pushf
mov
dec
mov
scas
fcmovne
xchg
inc
fisubrl
outsb
jle
hlt
push
xlat
pop
push
pop
pusha
cltd
mov
jno
lods
cmp
pop
cmp
xlat
jg
repz
or
stos
dec
mov
adc
add
mov
out
push
and
call
std
mov
int3
cmp
stc
aaa
out
adcb
loop
out
mov
add
sbb
and
idiv
call
cmc
int3
aam
sub
dec
mov
adc
ror
inc
mov
mov
shr
js
loop
mov
jle
daa
mov
xchg
jmp
shlb
sub
sbb
in
or
push
adc
aad
sub
popa
cltd
push
xor
and
jbe
sbb
cmp
xor
push
inc
insl
jl
mov
pop
dec
xchg
mov
test
subl
int
fildll
pop
aas
mull
loop
pop
gs
xchg
push
xor
cmc
mov
push
push
push
aad
and
fdivrs
ficompl
mov
mov
jo
cmc
pusha
out
out
sahf
incb
mov
sbbl
rorl
pop
shl
aaa
mov
sahf
jp
mov
test
mov
loope
jb
pop
insl
fisttps
sbb
fcmovne
cmp
mov
mov
inc
pop
pop
lcall
clc
sahf
cmpb
aaa
in
lcall
pop
and
pushf
or
sub
adc
pop
pop
sub
push
pop
xchg
or
mov
push
add
lahf
mov
push
cmp
adc
orl
mov
pop
sub
sbb
jecxz
xchg
pop
add
fsub
loop
sahf
and
push
outsl
push
outsb
mov
les
or
xor
pop
sbb
inc
setle
imul
mov
hlt
xor
cmpb
stos
shrb
mov
test
sub
mov
push
in
pop
jl
or
pop
stos
push
or
sbb
ss
aam
and
popf
mov
pusha
negb
pop
adc
popl
xor
popl
xor
jns
fldt
lock
push
push
lock
push
movsb
pushf
imul
lret
mov
inc
add
pop
out
and
clc
mov
popa
stos
pusha
sti
imul
fcompl
push
loope
mov
sbb
scas
sbb
adc
and
jmp
add
cmp
adc
testb
or
cmp
ds
mov
js
loop
pop
cmp
inc
int
cmp
sti
push
insb
leave
push
ljmp
or
into
and
xchg
ja
ss
mov
pusha
test
pop
in
sbb
sbb
dec
sbb
xchg
lock
rolb
scas
push
mov
add
cmpsl
mov
sub
sbb
into
or
ljmp
add
fcomps
iret
dec
push
fldenv
ds
stc
sub
mov
outsl
gs
je
loop
pop
in
and
add
jmp
test
stos
psubsw
mov
mov
hlt
mov
dec
iret
inc
insl
xchg
pushf
jbe
mov
outsb
insb
fldl
fldt
aaa
cltd
cmp
push
sbb
mov
add
push
xorl
jle
xlat
mov
inc
push
push
pop
adc
scas
fadds
call
inc
shlb
jp
outsb
jmp
inc
pop
or
sbb
mov
push
jbe
les
stos
lret
shrl
stos
hlt
rcrb
adc
ss
out
jno
roll
lock
iret
pop
push
pop
imul
insb
mov
dec
ret
stc
out
dec
jle
lods
add
add
in
or
int3
push
adcb
sbbl
testb
and
inc
sbb
inc
aad
cltd
cmpsb
test
scas
je
lods
dec
orl
xchg
jns
out
rcrb
fisttps
jge
cld
stc
pop
mov
jno
or
or
leave
in
int
insb
lock
std
pushf
in
fcoml
jmp
fistps
and
pop
dec
mov
pop
ss
mov
mov
ja
jno
loope
invd
and
and
mov
jo
mov
jecxz
jne
int
stc
loope
mov
dec
cmp
loopne
fidivrl
cmp
out
test
hlt
pop
outsb
push
call
flds
stc
push
and
xchg
out
in
movsl
iret
rcll
and
repnz
adcl
clc
lock
pop
mov
cld
push
leave
loope
adc
jmp
lock
andb
jae
or
sahf
mov
mov
pop
in
mov
mov
iret
nop
ret
cmp
xorl
daa
push
divl
or
jmp
lret
adc
xor
jecxz
inc
sbb
fnstenv
mov
mov
sub
xor
mov
pop
js
xor
mov
pop
pop
jmp
xor
mov
xchg
arpl
mov
cmp
test
xor
cmp
test
rcrl
tzcnt
sub
adc
or
insb
adc
icebp
negb
fisubs
mov
outsb
pop
pop
push
xchg
cmpsl
dec
aaa
loope
jnp
mov
jbe
lock
adc
xchg
mov
or
fnstenv
scas
xor
xor
lahf
and
mov
mov
or
fisttpll
mov
in
push
ljmp
sbb
sub
lods
nop
sub
push
ljmp
cmp
aas
inc
fldt
lock
cwtl
sbb
repz
jp
jne
push
dec
pop
xchg
lds
jl
sti
mov
ljmp
sub
roll
mov
push
loopne
test
sbb
mov
test
push
aad
aad
testl
sarb
cmp
jbe
mov
outsl
js
mov
incb
add
je
lods
add
in
xor
mov
jbe
push
and
push
test
std
loopne
clc
push
jmp
stos
jp
jg
outsl
cmp
cmp
pop
jo
mov
into
inc
cmp
loope
xchg
mov
insl
adc
mov
aad
jbe
push
and
insl
ret
loope
lds
shlb
mov
push
sub
pop
inc
inc
lret
mov
std
or
mov
cli
and
aas
cld
mov
xchg
push
cmpsl
fnstcw
jmp
inc
sbb
loop
rorl
adc
push
mov
js
imull
decb
push
mov
fistl
lods
pop
jne
add
mov
push
test
mov
inc
dec
adc
push
lar
mov
gs
js
fcmovnb
pop
clc
pop
sbb
add
imul
pop
shr
sbb
aam
repnz
push
dec
jmp
inc
mov
out
jnp
push
add
pop
jmp
hlt
or
mov
add
sarl
test
push
stos
push
jl
adc
push
shr
pop
mov
push
push
lret
cltd
ja
xor
cmp
test
mov
cmp
cmpsb
rol
addr16
jnp
out
scas
loope
sbb
lods
sti
mov
or
mov
dec
mov
mov
jmp
dec
insb
add
test
jno
mov
xchg
faddl
aaa
imulb
inc
rcrl
xor
lock
imul
pop
lods
xchg
outsb
or
mov
push
aas
mov
imul
mov
sub
cmpsb
jg
jno
jp
ljmp
out
rolb
xchg
addl
mov
je
out
sbb
out
jbe
psubsb
jne
cmpb
xor
fwait
inc
ret
xchg
adc
jp
pop
dec
pop
aaa
negb
xchg
jmp
inc
jne
pop
into
xor
sbb
imul
mov
dec
sub
lods
adc
mov
rolb
fildll
push
shll
xchg
mov
jmp
mov
rcll
push
aaa
loopne
adc
test
flds
jae
sahf
js
cli
inc
dec
iret
stos
sbb
rorl
movsb
repnz
out
xor
cmp
cmp
int
insl
jo
sbb
int3
fadds
inc
or
or
fidivs
sbb
cmp
ret
loope
lcall
cmp
inc
inc
cmp
data16
rcrb
mov
notl
sub
adc
fisubrs
push
pop
movsb
jg
insl
cmp
inc
or
pusha
imull
sbb
aad
jecxz
notl
jg
fnstcw
scas
sbb
fistps
gs
xchg
add
push
cli
rclb
cmc
xchg
out
cmpsb
orb
mov
cli
outsb
es
mulb
adc
idivb
or
ljmp
aad
push
popf
sub
push
add
popf
add
aad
pop
mov
inc
jg
pusha
xchg
loop
pop
mov
fmuls
push
daa
and
ret
push
iret
stos
mov
outsl
ja
cmp
jno
sub
fbstp
and
lock
cmpsb
jae
mov
imul
por
insb
mov
or
out
push
dec
dec
popf
call
inc
cli
je
std
test
les
pop
xchg
jne
cmp
in
into
inc
je
xor
push
fsubrl
js
popa
inc
pop
mov
xchg
enter
jnp
clc
push
shrl
les
out
aas
ljmp
scas
pop
mov
add
pop
aas
push
xor
mov
xor
inc
aad
mov
loopne
adc
test
mov
jle
sti
and
inc
jo
dec
adc
les
pop
mov
jno
movsl
fucomp
mov
test
jno
pop
popa
sbb
mov
add
test
push
outsb
jmp
push
ljmp
cld
mov
stos
lret
fmul
add
adcb
push
sbb
inc
inc
movsl
push
cmp
inc
cmp
xchg
add
xor
ss
inc
sarl
arpl
jo
les
xor
repz
or
ds
rcll
lds
ds
outsl
test
mov
loop
clc
loop
dec
or
pop
loopne
mov
sub
subb
jp
cltd
jnp
insb
pop
not
es
push
inc
cmc
cmpb
jo
dec
jae
lret
cmp
dec
push
push
psubusb
mov
scas
cmpsb
inc
into
inc
jmp
pop
call
push
adc
mov
sti
scas
or
mov
sbb
test
pusha
popaw
push
mov
loopne
push
pop
in
xlat
xchg
and
xchg
popa
jae
ds
push
lcall
pop
mov
in
pop
ja
mov
inc
mov
cmp
jnp
jmp
add
cmpsb
and
clc
jnp
mov
cmp
into
push
js
pop
mov
sub
cmpsl
call
xchg
clc
lds
pop
xchg
shr
push
stos
and
shr
test
dec
mov
fisubrs
push
mov
loopne
xchg
movsb
mov
lock
lret
cmc
sbb
loopne
sub
mov
lock
dec
rcl
shlb
mov
add
add
pop
push
fldt
or
dec
arpl
sti
add
add
sub
xchg
cmpsb
mov
es
dec
cmpsl
mov
sub
xchg
cmp
ret
lods
subb
mov
cli
dec
aas
mov
add
mov
mov
in
ljmp
mov
mov
filds
dec
rorb
lods
xor
movsb
jle
shlb
ret
inc
prefetchw
ljmp
pop
mov
xor
rcl
xorl
add
xchg
push
aas
dec
pop
sub
jmp
cmpsb
mov
lea
js
mov
sbb
out
in
dec
or
fldenv
faddp
ret
mov
ret
mov
dec
sbb
adc
mov
inc
call
incl
mov
nop
mov
mov
xchg
popf
cmp
mov
adc
fidivl
loop
adc
test
sub
adc
loope
test
push
cmp
mov
test
sub
js
pop
mov
adc
js
add
mov
push
mov
pop
jb
inc
test
popa
adc
push
arpl
dec
or
cmp
js
xor
push
inc
inc
in
mov
push
and
ss
sub
xchg
inc
adc
xchg
cli
fwait
mov
mov
sbb
test
or
dec
and
hlt
xor
lock
and
aad
movsl
ror
push
and
pop
pop
pushf
xorb
ret
mov
insl
xchg
mov
xchg
lret
sbb
and
fdivp
mov
jbe
mov
je
lock
mov
outsb
pop
ljmp
pop
cmp
test
push
divps
data16
addr16
pusha
repz
cmp
cmpsb
jae
notl
dec
lahf
sahf
dec
cmp
xchg
inc
push
es
adc
jb
in
jmp
mov
add
clc
or
std
cwtl
adc
lods
push
push
faddl
negl
inc
in
jo
icebp
dec
ljmp
ret
xor
sbb
xchg
insb
inc
mov
push
pop
inc
xchg
popf
jle
insb
add
lret
test
rcll
xor
test
add
pop
adc
pop
das
ja
and
mov
adc
cwtl
sbb
sbbl
mov
sbb
jg
mulb
int3
sub
rorb
rcrb
sti
mov
or
gs
leave
and
mov
scas
jp
pop
aam
inc
xchg
std
mov
push
es
adc
mov
rclw
paddb
mov
mov
pop
xor
popf
arpl
test
pop
cmp
shr
jne
inc
adc
inc
jg
push
test
mov
daa
bound
push
or
test
mov
and
xchg
ljmp
push
sub
shlb
or
cld
pop
scas
mov
add
ficomps
mov
in
pop
or
mov
or
jns
mov
dec
push
adc
sub
ja
xchg
jge
aam
sbb
das
mov
cmp
mov
lock
mov
and
hlt
icebp
icebp
repz
mov
inc
cli
ss
int3
cmpsl
xchg
in
cwtl
pop
xorb
jp
or
jmp
or
jg
fnstsw
mov
jo
fmulp
dec
mov
test
addr16
out
mov
fstps
inc
fisttps
dec
fwait
cmp
or
cmp
movsl
scas
mov
dec
push
lret
outsl
xchg
push
movsl
rcl
enter
pop
psrlw
in
hlt
icebp
rcrb
inc
mov
push
cld
mov
shlb
push
icebp
push
lds
push
pop
jl
or
outsb
adc
jle
js
or
aad
stc
into
fistps
out
add
mov
xor
insb
mov
fisubrs
jns
addb
push
xor
sbb
inc
int3
stos
aaa
call
inc
and
pop
nop
mov
pop
shlb
fst
mov
pusha
mov
jge
inc
hlt
jne
fisubl
jl
or
cld
jg
mov
mov
sbb
inc
popf
or
mov
jge
sahf
es
xor
sbb
mov
test
fmul
xchg
jnp
lods
repnz
imul
xor
mov
loope
loope
dec
loop
enter
pop
loope
fisttpl
orb
dec
cmp
mov
stc
fs
inc
fs
rorb
xor
cld
or
cmp
mov
push
scas
jmp
sahf
cmp
dec
inc
out
into
xchg
out
mov
fsubl
jno
fs
mov
pop
cwtl
scas
mov
cli
clc
mov
jecxz
sbb
aas
jle
push
and
mov
and
outsb
mov
fdivrs
jbe
xlat
in
sbb
mov
scas
mov
cs
sub
addr16
outsl
mov
jg
or
mov
into
js
dec
sbb
push
push
loopne
not
dec
xchg
daa
push
fisubrl
js
loope
pop
dec
push
pop
adc
lock
push
test
loope
lcall
cmp
ret
pop
xlat
out
dec
xor
flds
fcmovnb
popf
lahf
sbb
fnstcw
sti
dec
scas
dec
and
lock
xlat
jle
mov
jae
ret
inc
xlat
ret
sbb
mov
jge
mov
mov
ret
mov
mov
enter
inc
pop
mov
dec
jmp
push
xchg
stos
mov
loopne
add
xor
insb
repnz
dec
pushf
sbb
jle
mov
inc
scas
jle
stos
shlb
mov
and
icebp
jecxz
cmp
jmp
add
or
xor
sahf
pop
sahf
inc
add
push
jecxz
and
add
scas
dec
mov
jl
inc
out
movsb
movl
nop
add
add
or
dec
cs
pop
in
pop
dec
or
sub
cmp
movlps
adc
adc
mov
mov
cmp
cmp
push
lods
and
or
cmp
in
and
sub
adc
pop
xor
xor
cmp
add
mov
add
add
cmp
or
cmc
mov
lock
jg
movl
loop
pop
fadds
or
in
dec
dec
addr16
imul
jnp
das
dec
pop
ds
xchg
fisttpl
jnp
push
bswap
push
sub
push
sub
das
jns
pop
push
xor
mov
sub
adc
pop
pop
repnz
test
pop
pop
jns
xor
mov
jae
outsb
testb
repz
jo
fs
xchg
pop
mov
mov
jbe
dec
js
jnp
xor
lahf
lock
das
mov
add
fisttpl
test
mov
mov
imul
sti
cmp
movsb
pop
repnz
lret
jl
add
in
xchg
mov
adc
pop
repnz
mov
xor
xor
mov
mov
ja
lret
add
test
inc
js
adc
aam
test
ds
dec
or
in
movsl
out
call
pop
cld
jmp
fucomi
xchg
out
and
decl
mov
ret
sbb
cmp
pop
testb
mov
cmp
dec
in
notl
test
sbb
stos
or
mov
sbb
and
in
enter
adc
mov
popa
daa
adc
adc
sbb
daa
sbb
pop
mov
daa
fwait
xor
or
adc
or
and
dec
pop
enter
and
pop
fisttpll
enter
sub
imul
gs
sub
pop
sub
gs
das
cmp
adc
xor
add
mov
pop
inc
aas
addr16
in
rolb
inc
fiaddl
mov
xchg
mov
adc
repnz
dec
dec
or
jbe
xchg
push
mov
dec
out
ret
mov
pop
push
pop
sarl
mov
sbb
sti
mov
scas
in
in
or
arpl
outsl
out
pop
leave
mov
adc
imul
pop
test
mov
or
mov
leave
xor
pop
sub
cmpsl
or
jns
jmp
psrlw
sbbb
xchg
daa
iret
adcl
mov
mov
mov
adcb
xchg
dec
fwait
or
pusha
out
jne
pop
dec
push
push
mov
movlps
repnz
mov
adc
pop
mov
mov
mov
jbe
pop
mov
mov
stc
mov
sbb
adc
ret
in
mov
pop
xor
imul
xchg
addr16
aad
sbb
lret
jnp,pn
aam
mov
add
fdivl
aad
punpcklbw
add
xlat
test
lcall
daa
in
pop
loopne
mov
daa
pop
jbe
dec
in
in
push
out
ljmp
jmp
shr
out
pop
fsubrs
mov
stc
adc
packssdw
or
push
pop
fsubr
cld
xor
add
bnd
cmovg
mov
pop
xchg
adc
or
xchg
ffreep
sahf
xchg
adc
adc
push
jbe
pop
movsl
adc
pop
sbb
jns
pop
xchg
xchg
sbb
xchg
addr16
icebp
and
adc
das
in
and
and
aaa
adc
mov
adc
sub
daa
add
in
adc
sbb
adc
sub
jns
pop
fdivs
cld
cs
sbb
inc
mov
pop
pop
movsl
cmp
pop
mov
jb
cmp
inc
cmovns
sahf
mov
pop
push
inc
add
in
leave
out
dec
dec
dec
cmpsl
leave
dec
adc
test
dec
sbb
push
mov
mov
mov
pop
movsl
pop
and
jbe
popa
sbb
enter
in
in
and
or
jecxz
mov
in
insb
pop
insl
lods
insl
and
adc
leave
addr16
fdivl
je
jns
add
out
or
pop
fcoms
in
pop
add
cltd
xchg
gs
sbbl
mov
mov
pop
flds
mov
dec
nop
add
xchg
push
xchg
and
xchg
mov
xchg
sbb
adc
lcall
push
divb
or
dec
repnz
adc
std
stos
leave
sub
das
fwait
mov
pop
mov
out
pop
adc
mov
divb
and
ret
ret
pop
jb
popa
adc
gs
in
orb
iret
arpl
rcrb
jns
scas
in
sarb
scas
in
xchg
cmp
ficoml
push
fdiv
in
pusha
daa
mov
push
fnstsw
aaa
loope
xchg
adc
add
scas
in
and
bnd
jmp
jmp
pop
adc
add
inc
mov
adc
add
push
adc
push
pop
sti
cli
mov
and
xor
add
enter
lods
insl
lea
add
sub
push
inc
push
pop
subb
or
push
inc
dec
add
mov
mov
mov
add
stos
insl
jg
dec
inc
insb
insb
outsl
arpl
sub
pop
or
jne
adc
xchg
add
add
popa
je
fucomp
in
inc
imul
and
outsb
jbe
pop
addr16
incl
popa
jne
je
gs
test
jo
dec
sub
popa
outsb
pusha
std
aas
int
outsb
gs
and
dec
jo
outsb
dec
gs
jle
in
push
pop
mov
push
jns
cmp
das
mov
jg
outsl
arpl
fwait
jo
imul
add
add
pop
inc
sub
mov
orl
test
cmp
mov
sub
adc
or
dec
add
add
es
add
pop
mov
imulb
pop
adc
das
push
jo
lret
adc
aaa
mov
push
nop
add
adc
inc
dec
inc
inc
mulb
inc
cmp
fxch
outsl
or
inc
push
inc
xor
add
sbb
ds
jb
jne
rolb
sbb
fnstenv
pop
add
imul
addb
jnp
into
inc
lds
nop
daa
fsubl
push
pop
push
jae
outsl
gs
lock
add
jo
mov
and
add
incl
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
