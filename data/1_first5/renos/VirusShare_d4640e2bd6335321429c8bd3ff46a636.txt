jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
fs
arpl
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
movl
mov
push
push
call
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
push
push
call
cmp
jnp
lea
mov
mov
xchg
inc
inc
mov
dec
inc
dec
mov
cmp
js
lea
mov
lea
xchg
mov
mov
mov
mov
inc
mov
mov
mov
lea
mov
mov
mov
lea
mov
inc
movl
mov
push
push
call
mov
cmp
jnp
dec
inc
cmp
jno
inc
inc
inc
dec
inc
dec
cmp
jp
mov
mov
mov
mov
mov
inc
inc
inc
mov
mov
mov
mov
xchg
mov
dec
lea
mov
lea
lea
mov
mov
mov
xchg
lea
inc
movl
mov
push
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jnp
dec
inc
cmp
jno
inc
inc
inc
dec
inc
dec
cmp
jp
mov
mov
mov
mov
mov
inc
inc
inc
mov
mov
mov
mov
xchg
mov
dec
lea
mov
lea
lea
mov
mov
mov
xchg
lea
inc
mov
cmp
je
call
ret
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
xor
divl
test
jne
cmp
jnp
lea
mov
mov
xchg
inc
inc
mov
dec
inc
dec
mov
cmp
js
lea
mov
lea
xchg
mov
mov
mov
mov
inc
mov
mov
mov
lea
mov
mov
mov
lea
mov
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
xchg
mov
xchg
lea
lea
lea
xchg
dec
inc
inc
lea
lea
mov
mov
jmp
lea
mov
mov
inc
dec
xchg
lea
mov
mov
lea
xchg
mov
xchg
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
cmp
jnp
xchg
mov
mov
mov
mov
xchg
mov
inc
inc
inc
mov
mov
mov
jmp
inc
inc
dec
xchg
lea
mov
lea
mov
lea
lea
lea
lea
dec
dec
dec
mov
cmp
je
ret
cmp
js
mov
mov
lea
xchg
lea
lea
lea
lea
lea
lea
dec
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
dec
inc
dec
lea
lea
mov
mov
xchg
dec
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jbe
lea
lea
mov
lea
mov
mov
xchg
mov
lea
mov
cmp
jns
mov
lea
xchg
inc
mov
xchg
mov
inc
xchg
xchg
lea
lea
xchg
xchg
xchg
mov
inc
mov
cmp
je
add
cmp
js
mov
mov
lea
xchg
lea
lea
lea
lea
lea
lea
dec
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
dec
inc
dec
lea
lea
mov
mov
xchg
dec
inc
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
mov
movl
cmp
jne
xchg
mov
xchg
lea
lea
lea
xchg
dec
inc
inc
lea
lea
mov
mov
jmp
lea
mov
mov
inc
dec
xchg
lea
mov
mov
lea
xchg
mov
xchg
mov
sub
mov
lea
cmp
jbe
lea
lea
xchg
mov
cmp
jle
xchg
mov
lea
mov
xchg
xchg
mov
inc
mov
lea
lea
xchg
xchg
mov
mov
inc
mov
lea
lea
xchg
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
jnp
lea
mov
mov
xchg
inc
inc
mov
dec
inc
dec
mov
cmp
js
lea
mov
lea
xchg
mov
mov
mov
mov
inc
mov
mov
mov
lea
mov
mov
mov
lea
mov
inc
mov
mov
mov
call
xchg
xchg
mov
xchg
cmp
jnp
xchg
mov
mov
mov
mov
xchg
mov
inc
inc
inc
mov
mov
mov
jmp
inc
inc
dec
xchg
lea
mov
lea
mov
lea
lea
lea
lea
dec
dec
dec
push
mov
mov
xor
call
mov
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
cmp
jnp
dec
inc
cmp
jno
inc
inc
inc
dec
inc
dec
cmp
jp
mov
mov
mov
mov
mov
inc
inc
inc
mov
mov
mov
mov
xchg
mov
dec
lea
mov
lea
lea
mov
mov
mov
xchg
lea
inc
lea
mov
call
lea
cmp
jbe
lea
lea
xchg
mov
cmp
jle
xchg
mov
lea
mov
xchg
xchg
mov
inc
mov
lea
lea
xchg
xchg
mov
mov
inc
mov
lea
lea
xchg
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
js
mov
mov
lea
xchg
lea
lea
lea
lea
lea
lea
dec
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
dec
inc
dec
lea
lea
mov
mov
xchg
dec
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jbe
lea
lea
mov
lea
mov
mov
xchg
mov
lea
mov
cmp
jns
mov
lea
xchg
inc
mov
xchg
mov
inc
xchg
xchg
lea
lea
xchg
xchg
xchg
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
xchg
xchg
mov
xchg
cmp
jnp
xchg
mov
mov
mov
mov
xchg
mov
inc
inc
inc
mov
mov
mov
jmp
inc
inc
dec
xchg
lea
mov
lea
mov
lea
lea
lea
lea
dec
dec
dec
push
call
mov
mov
mov
call
mov
mov
mov
cmp
jnp
lea
mov
mov
xchg
inc
inc
mov
dec
inc
dec
mov
cmp
js
lea
mov
lea
xchg
mov
mov
mov
mov
inc
mov
mov
mov
lea
mov
mov
mov
lea
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jbe
lea
lea
xchg
mov
cmp
jle
xchg
mov
lea
mov
xchg
xchg
mov
inc
mov
lea
lea
xchg
xchg
mov
mov
inc
mov
lea
lea
xchg
inc
dec
inc
mov
mov
movl
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
mov
xchg
lea
lea
lea
xchg
dec
inc
inc
lea
lea
mov
mov
jmp
lea
mov
mov
inc
dec
xchg
lea
mov
mov
lea
xchg
mov
xchg
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
lahf
lahf
repz
lcall
mov
test
test
repz
xchg
lahf
mov
movsl
xchg
mov
mov
repz
mov
test
pushf
xchg
test
loope
lahf
lahf
repz
repz
repz
mov
repz
repz
repz
repz
repz
repz
jl
je
or
adc
xor
adc
mov
mov
mov
mov
add
fdivs
repz
mov
in
repz
mov
lret
mov
jp
or
push
or
repz
or
push
packuswb
sbb
push
repz
jp
or
push
mull
repz
or
push
sti
data16
jp
or
push
jmp
repz
or
push
jecxz
mov
jp
or
les
jp
or
stos
stos
scas
xor
xor
sub
add
mov
xor
jl
xor
mov
xor
mov
cmpsb
jl
je
cmp
jp
cmp
das
mov
cmp
mov
mov
mov
mov
jl
sti
jp
pop
jl
cmp
mov
mov
mov
jl
cmp
mov
jp
seta
repz
mov
jl
iret
hlt
mov
jp
add
divb
repz
sub
je
div
add
repz
sub
mov
jp
daa
sbb
repz
repz
repz
daa
jl
push
mov
mov
mov
je
sbb
add
repz
daa
je
repz
jl
daa
jl
hlt
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
daa
jl
jecxz
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
pop
or
jl
pop
jl
adc
repz
jl
cmp
mov
jp
sbb
jl
pop
jl
pop
hlt
cmc
jp
and
je
cmc
mov
jl
cmp
mov
jp
je
adc
je
pop
idivl
je
xrelease
mov
out
mov
je
push
add
adc
adc
jl
fcomi
mov
jp
or
jl
fistpll
pop
cmp
repz
jecxz
mov
je
jmp
jl
cmp
mov
repz
repz
cmp
mov
mov
repz
repz
sti
mov
mov
jl
pop
jle
xlat
movss
popf
repz
or
adc
ret
adc
div
xor
mov
cmpsb
jl
xchg
jl
sti
jl
decl
inc
jae
sub
inc
cmc
sbb
or
cmp
xchg
repz
ret
lods
repz
inc
cmc
mov
jecxz
shl
repz
test
xchg
pop
sbb
sbb
sub
repz
pop
and
xchg
bound
sbb
repz
repz
repz
jae
testb
mov
data16
inc
repnz
add
mov
xor
jmp
ret
sbb
adc
adc
cmp
sbb
adc
test
sti
repz
repz
jp
dec
adc
adc
lds
add
adc
fidivrl
jp
xor
cmpsb
jl
jb
or
adc
jp
idiv
push
mov
repz
cli
push
mov
repz
jge
or
cmpsb
or
arpl
push
mov
adc
xrelease
cmp
bndstx
adc
mov
mov
repz
repz
jge
or
div
les
ja
or
adc
adc
int
or
repz
xrelease
cmp
or
les
jge
or
or
dec
addr16
adc
adc
xor
or
dec
call
repz
xor
repz
or
or
jae
push
mov
jnp
or
xor
or
arpl
push
mov
adc
xrelease
push
scas
xor
mov
cmpsb
jl
mov
xor
push
mov
mov
adc
repz
sti
push
mov
les
push
cli
push
mov
les
mov
add
call
repz
xor
repz
cli
push
mov
les
push
sti
push
mov
jge
call
repz
push
les
push
cli
push
mov
jge
call
repz
mov
jnp
call
repz
push
cli
push
mov
jge
push
jnp
call
repz
push
sti
push
mov
add
call
repz
mov
add
call
repz
xor
repz
push
les
jge
push
jge
call
repz
jge
adc
xor
add
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jbe
lea
lea
mov
lea
mov
mov
xchg
mov
lea
mov
cmp
jns
mov
lea
xchg
inc
mov
xchg
mov
inc
xchg
xchg
lea
lea
xchg
xchg
xchg
mov
inc
movl
lea
cmp
jbe
lea
lea
xchg
mov
cmp
jle
xchg
mov
lea
mov
xchg
xchg
mov
inc
mov
lea
lea
xchg
xchg
mov
mov
inc
mov
lea
lea
xchg
inc
dec
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
xchg
mov
xchg
lea
lea
lea
xchg
dec
inc
inc
lea
lea
mov
mov
jmp
lea
mov
mov
inc
dec
xchg
lea
mov
mov
lea
xchg
mov
xchg
mov
mov
call
mov
cmpl
je
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
mov
cmp
je
mov
subb
mov
mov
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
xorb
cmp
jne
xchg
mov
xchg
lea
lea
lea
xchg
dec
inc
inc
lea
lea
mov
mov
jmp
lea
mov
mov
inc
dec
xchg
lea
mov
mov
lea
xchg
mov
xchg
incl
mov
cmp
jne
cmp
js
mov
mov
lea
xchg
lea
lea
lea
lea
lea
lea
dec
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
dec
inc
dec
lea
lea
mov
mov
xchg
dec
inc
mov
call
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
cmp
jnp
dec
inc
cmp
jno
inc
inc
inc
dec
inc
dec
cmp
jp
mov
mov
mov
mov
mov
inc
inc
inc
mov
mov
mov
mov
xchg
mov
dec
lea
mov
lea
lea
mov
mov
mov
xchg
lea
inc
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmpb
jne
call
mov
cmp
jnp
dec
inc
cmp
jno
inc
inc
inc
dec
inc
dec
cmp
jp
mov
mov
mov
mov
mov
inc
inc
inc
mov
mov
mov
mov
xchg
mov
dec
lea
mov
lea
lea
mov
mov
mov
xchg
lea
inc
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
cmp
jnp
lea
mov
mov
xchg
inc
inc
mov
dec
inc
dec
mov
cmp
js
lea
mov
lea
xchg
mov
mov
mov
mov
inc
mov
mov
mov
lea
mov
mov
mov
lea
mov
inc
movb
cmp
jno
mov
lea
mov
cmp
jns
lea
mov
mov
mov
mov
mov
jmp
mov
lea
inc
inc
dec
mov
lea
mov
mov
xchg
xchg
mov
mov
mov
lea
inc
inc
mov
mov
pop
ret
nop
push
mov
add
call
call
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
call
call
call
test
jne
jmp
jmp
movw
movb
xchg
xchg
mov
xchg
cmp
jnp
xchg
mov
mov
mov
mov
xchg
mov
inc
inc
inc
mov
mov
mov
jmp
inc
inc
dec
xchg
lea
mov
lea
mov
lea
lea
lea
lea
dec
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
je
lea
mov
mov
mov
lea
xchg
mov
dec
dec
inc
mov
xchg
mov
mov
lea
mov
dec
dec
inc
lea
mov
mov
mov
mov
lea
lea
mov
mov
inc
push
call
cmp
jne
push
call
test
jne
push
call
mov
cmpl
je
push
call
call
lea
cmp
jbe
lea
lea
xchg
mov
cmp
jle
xchg
mov
lea
mov
xchg
xchg
mov
inc
mov
lea
lea
xchg
xchg
mov
mov
inc
mov
lea
lea
xchg
inc
dec
inc
mov
pop
ret
inc
add
add
jb
outsl
add
add
add
add
jae
jae
add
insl
add
push
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
sbb
jne
mov
cmp
js
mov
mov
lea
xchg
lea
lea
lea
lea
lea
lea
dec
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
dec
inc
dec
lea
lea
mov
mov
xchg
dec
inc
mov
mov
mov
lea
call
cmp
jne
xchg
mov
xchg
lea
lea
lea
xchg
dec
inc
inc
lea
lea
mov
mov
jmp
lea
mov
mov
inc
dec
xchg
lea
mov
mov
lea
xchg
mov
xchg
ret
nop
ret
lea
loop
jb
fldenv
add
leave
ficomps
cwtl
add
movl
int
mov
in
repnz
add
mov
scas
sbb
ret
add
iret
push
push
sub
pop
or
movsl
add
int
bound
xchg
mov
add
sti
and
sarb
repnz
push
ss
cmp
cmp
jmp
fldl
push
add
add
jno
add
add
add
add
sar
adc
out
add
and
add
fisttpll
sarl
push
out
cmc
jl
adc
add
out
add
mov
stos
sub
std
dec
jne
rolb
add
mov
lds
add
sbb
loopne
ja
jnp
mov
insb
add
add
add
cmc
sbbb
das
cltd
push
add
lret
jp
imul
push
xchg
icebp
decb
pushf
imul
stos
add
repz
out
jb
add
mov
test
je
xor
or
loopne
aas
rolb
dec
fldl
dec
dec
adc
add
or
mov
inc
imul
jmp
add
add
add
adc
sub
add
daa
mov
cmpsb
inc
xlat
and
cmp
add
add
push
imul
add
test
rorl
jo
add
sub
lea
shlb
add
cwtl
and
add
movsl
push
mov
insb
adc
inc
add
rclb
xchg
pop
add
pop
add
sbb
xchg
sbb
add
lret
cmp
hlt
stos
repz
add
pop
add
sub
sub
test
add
out
sahf
enter
mov
xchg
cmc
add
or
data16
cmpsl
and
push
add
jl
add
mov
add
push
aaa
add
add
cmpsl
add
cwtl
mov
jp
xchg
add
and
sub
lret
arpl
mov
xlat
jbe
dec
into
dec
inc
cmpsl
loopne
je
cmpsb
add
fsubrs
jbe
cmp
add
in
xor
stc
add
add
add
leave
mov
push
fiaddl
fcoms
xor
ds
cmp
mov
pop
add
mov
inc
add
imul
add
pop
lcall
xor
add
add
cmp
test
push
jnp
je
pop
lds
mov
add
mov
add
pop
aam
mov
inc
adcl
add
nop
mov
dec
sahf
add
xchg
xor
cmc
fwait
add
in
adc
pop
lods
cmpsb
ja
fiaddl
roll
sbb
add
push
mov
ds
out
dec
loope
xchg
add
and
outsl
outsl
add
addr16
inc
mov
mov
add
dec
pop
and
inc
add
mov
movsl
add
add
je
shlb
xchg
cltd
add
sbb
add
adc
add
add
add
out
and
add
aad
and
mov
fadds
push
dec
popa
ret
stos
lcall
push
jge
adc
imulb
repnz
add
and
jge
add
aad
add
adc
test
mov
mov
ret
mov
push
adc
jno
add
push
and
push
sbb
leave
add
add
jle
push
cmc
add
fldt
add
shrl
lret
add
cwtl
inc
outsl
push
mov
stos
mov
stc
pop
les
jb
ljmp
fwait
sbb
lock
push
jmp
add
cmp
ret
mov
cmp
arpl
cmpsb
mov
push
lahf
addl
sub
sbb
pop
rorb
dec
ficoms
adc
gs
addr16
test
or
fdiv
and
mov
jbe
add
outsb
xchg
sbb
inc
xchg
aaa
leave
pop
mov
add
mov
dec
jne
stos
push
and
and
jo
cs
sbb
sub
mov
mov
enter
daa
ja
xor
add
xor
sti
int3
jl
xchg
cmp
adc
movsl
push
fwait
and
repnz
push
mov
or
pop
xor
insb
pop
sti
loop
lods
es
pop
test
ret
xchg
adc
sub
add
outsb
sub
jae
pop
mov
xor
mov
out
sbb
push
add
mov
and
int
push
jae
mov
or
sub
pop
sti
fstpl
jnp
fsub
adc
cld
inc
sbb
mov
lret
push
cmp
mov
decl
xlat
and
std
lods
repz
fdiv
mov
lret
mov
adc
mov
or
mov
in
xor
scas
mov
aaa
mov
xchg
inc
test
fs
xor
add
xor
adc
ss
sub
cs
jnp
scas
movsl
xor
sti
sub
push
daa
mov
loopne
int
pop
xlat
mov
imul
pop
movsl
xchg
insl
sub
sbb
pop
jge
xlat
cwtl
das
or
jl
xor
shr
jmp
or
aad
pop
scas
nop
test
stos
dec
jnp
jmp
xchg
cmc
jg
mov
adc
jecxz
dec
lods
push
stc
cmpsl
lea
mov
pop
jmp
pop
jge
push
adc
adc
add
inc
cmc
cltd
sub
mov
aas
and
dec
dec
testl
imulb
ja
cwtl
sub
mov
ljmp
ja
vcvttsd2si
mov
or
lret
pop
jno
iret
xor
mov
xchg
mov
ret
mov
or
pop
ret
icebp
pushf
pop
cmpsl
jbe
or
ret
jno
cld
pswapd
mov
in
jo,pt
and
sti
popa
jno
jg
pop
shlb
cs
sub
loope
mov
mov
xchg
fstp
mov
pop
xchg
enter
mov
jbe
lods
jl
out
stos
add
out
pop
pushf
push
xchg
add
push
aas
aam
rdpmc
xor
add
daa
mov
sbb
dec
aas
pusha
loop
cmp
xchg
addr16
shll
int
fwait
adc
sti
push
imul
add
bound
xchg
or
iret
xor
js
xchg
jne
mov
xchg
in
clc
cmpsb
inc
dec
mov
into
ss
or
dec
scas
mov
in
dec
outsl
xchg
das
jne
mov
out
cmpsb
push
push
bound
and
in
test
out
pop
inc
sub
rcr
andl
jo
mov
and
mov
pop
fidivrl
sub
pusha
add
fbld
cld
xchg
mov
movsb
fcoml
jge
push
dec
int3
rcrl
jns
inc
push
cmp
stos
xor
inc
pop
insb
ja
insl
imul
loop
push
push
loop
xor
call
ret
aaa
pop
mov
push
arpl
cld
jnp
aad
dec
or
mov
cld
inc
push
xor
fcmovbe
sbbl
fmuls
or
fidivs
dec
cld
lds
imul
sarb
pop
repnz
sub
push
imul
jno
xchg
cmp
mov
fnsave
mov
or
sub
push
add
push
cli
int3
insb
pop
dec
in
rorb
or
add
jo
fmull
and
sbb
movsb
pop
outsb
mov
cmpsb
cmp
idivl
out
dec
sbb
jbe
mov
xor
jo
jl
cmp
lret
rorb
mov
and
dec
lahf
mov
mov
cli
loopne
push
mov
es
pop
addr16
pop
out
subb
call
jmp
subb
test
cli
ds
mov
daa
adc
sub
cmp
les
sbb
icebp
and
mov
push
jbe
mov
sub
faddl
fimuls
lcall
xchg
fcoml
adc
test
xlat
sub
cmp
test
add
mov
arpl
adc
pop
or
xchg
jne
notl
xchg
mov
rcrl
outsl
mov
sbb
and
into
loopne
int
xor
movsl
xor
cs
insb
pop
loop
xchg
stc
cli
inc
andl
add
lods
daa
incl
push
or
cli
popa
out
xorl
and
cmp
clc
outsl
sti
fcomp
adc
js
mov
xchg
push
es
push
inc
pop
negb
ret
imul
jae
xchg
xor
pop
cmp
loope
sub
xlat
mov
in
sub
insb
jmp
xor
cs
sub
nop
orl
inc
test
icebp
int3
ficompl
push
push
xor
into
call
fstpl
pop
xor
xor
enter
pop
mov
fistl
daa
mov
sub
mov
jb
pop
lahf
dec
mov
push
pop
rcll
movsb
shl
lock
std
fs
cwtl
out
jae
addr16
mov
lahf
daa
jno
bound
das
lret
fwait
adc
jno
push
add
das
scas
jmp
mov
dec
push
mov
and
jmp
insl
inc
movsl
pop
dec
in
out
cmpsl
jne
xor
lcall
mov
popa
insb
jnp
cmc
nop
sub
pop
sahf
les
shl
mov
aam
pop
pop
mov
and
push
clc
test
xchg
pop
and
ljmp
fldt
test
out
mov
add
sti
jg
xchg
or
into
push
adc
inc
pop
test
mov
mov
cmpsb
fbld
test
std
jl
sbb
sbb
sar
mov
jns
inc
inc
and
add
mov
sub
mov
xor
push
pushf
or
loop
xchg
les
mov
frstor
divl
ja
ljmp
gs
push
or
jle
mov
push
dec
push
aaa
sbb
bound
mov
mov
out
test
cmpsb
bound
lods
iret
jns
or
jno
or
mov
test
test
aad
sarl
sbb
mov
xor
jle
popa
hlt
in
loopne
pusha
sbb
orb
xchg
xor
pop
inc
push
jae
sti
cmpsl
push
adc
popf
jmp
adc
push
ja
push
stos
test
and
dec
repz
jbe
mov
push
push
jns
cmp
icebp
out
iret
mov
lret
test
cmp
and
push
jmp
or
xor
popf
push
mov
jae
cmp
push
aam
cs
inc
mov
mov
dec
sarl
or
dec
arpl
mov
aas
cmp
lcall
inc
lcall
pop
push
movsb
add
mov
push
add
dec
push
loope
push
jmp
cs
aam
imulb
sbb
xor
movsb
jmp
and
cmpsb
shlb
enter
daa
jne
jl
push
or
sarb
push
repz
js
iret
and
inc
pop
lahf
lods
mov
pusha
test
test
insb
divl
loop
sbb
out
pop
js
pop
loope
daa
jle
push
lds
sub
cli
mov
jmp
fmul
adc
pop
push
xchg
pop
hlt
pop
adc
add
jecxz
jae
inc
insl
pop
and
filds
int
xchg
aas
sub
arpl
push
cmp
sub
insb
fdivrl
mov
cmp
shll
aas
push
push
jg
cmp
mov
cmpsb
jg
js
mov
insl
testb
cmpl
addb
push
mov
notl
out
jnp
sub
mov
xchg
into
ret
add
sti
adc
xor
and
sbb
hlt
fs
jge
add
add
add
add
dec
cmp
push
jo
cli
xchg
hlt
out
pop
lds
sti
test
xchg
fwait
cltd
sbb
ret
ljmp
adc
imul
adc
xchg
repz
mov
cmp
pushl
sub
jge
sub
mov
jmp
and
cs
movsl
enter
dec
dec
cmp
jb
mov
in
in
in
pop
std
ret
pop
in
shrl
pop
push
push
jecxz
rclb
pop
je
pushf
or
add
cltd
ret
and
cltd
aas
popa
leave
icebp
jb
test
dec
ss
jle
pop
in
outsl
divb
dec
sub
or
cbtw
mov
xlat
mov
hlt
xchg
xorl
nop
lret
or
xorb
jns
das
lea
mov
das
cmpsl
scas
ret
cmpsb
dec
lods
andb
sub
out
int3
cmpsl
je
ljmp
mov
xchg
mov
test
cld
aam
mov
mov
xchg
inc
sub
adc
stos
lret
inc
push
inc
pusha
pop
jns
clc
rorb
xchg
inc
cli
mov
sahf
push
sbb
lods
push
sub
loopne
inc
out
and
xor
xor
roll
loope
jb
jle
cltd
test
outsl
call
xchg
mov
test
das
cltd
xchg
call
pop
adc
mov
push
mov
ja
test
push
add
inc
in
sub
jecxz
sub
movsb
or
xchg
xchg
adc
mov
mov
out
xor
ja
mov
dec
cmc
pop
addb
xor
test
dec
xor
pusha
or
fs
stos
fisttpl
jns
sahf
iret
in
and
ret
lahf
stos
sub
int
addr16
dec
jp
jp
mov
arpl
adc
jle
mov
in
std
lcall
adc
pop
icebp
test
xchg
and
inc
jae
mov
test
mov
mov
add
and
repz
push
rolb
adc
cmpsl
mov
call
cmp
inc
jmp
hlt
xor
mov
push
sbb
pop
fidivrl
imul
pop
mov
fidivrs
cmc
lds
test
mov
repnz
insb
jecxz
jno
dec
hlt
add
stos
cwtl
jbe
xchg
jb
fistpll
sbb
mov
sti
or
loop
add
int3
inc
jg
dec
ret
push
into
push
mov
xor
jo
or
add
mov
push
cmp
cmc
movsb
je
addl
jo
in
sbb
popa
daa
je
idivl
fwait
sahf
jg
pop
pop
jl
or
cmp
and
push
lock
jg
je
int3
fucomip
push
xor
movsb
push
aaa
je
xor
mov
movsl
inc
cs
cmp
pop
js
pop
mov
xchg
mov
loope
lods
popf
sub
iret
xchg
sub
add
push
into
xchg
adc
loop
jmp
sub
nopl
lea
inc
jo
or
push
jl
mov
inc
ljmp
fdivrl
mov
addb
call
cli
data16
sub
test
jmp
pop
hlt
pushf
jg
nop
js
aad
xor
mov
iret
mov
cmp
or
pop
scas
lret
out
inc
clc
orl
iret
into
cmpsb
xchg
int3
cmc
ret
xor
push
push
stc
push
and
add
cwtl
adc
inc
inc
mov
push
pop
lods
aam
xor
push
sti
ss
mov
xchg
clc
loopne
mov
pop
xor
les
dec
xor
xchg
add
insb
divl
xchg
mov
leave
sbb
or
shlb
mov
add
pop
jmp
fsubs
lret
mov
rclb
addr16
inc
iret
dec
mov
lock
xlat
pop
or
cmp
call
fcmovne
insb
pop
xchg
dec
arpl
jbe
jl
mov
insl
fcomi
into
inc
pop
lret
jmp
inc
add
mov
add
jb
loopne
dec
lods
xlat
push
je
hlt
pop
shrl
jnp
std
mov
mov
mov
out
xor
or
sub
lret
jns
iret
mov
xor
das
insb
pop
iret
mov
mov
enter
arpl
xor
fdivr
insl
movhps
dec
loop
xchg
cmpsl
jae
and
xor
xchg
icebp
dec
jb
cld
nop
shll
mov
scas
and
int3
xchg
mov
rcrb
in
aam
push
into
mov
lret
or
inc
pushf
fisttpll
lahf
clc
sti
dec
rclb
sarb
mov
or
xchg
aad
xchg
push
rolb
add
pop
jl
mov
cmp
mov
jge
mov
je
or
sbb
lock
jle
pop
mov
out
pop
push
push
push
roll
call
fildl
or
mov
xchg
bound
mov
or
mov
jmp
ja,pt
repnz
call
adc
or
pop
aas
mov
push
mov
ret
daa
mov
add
out
inc
jg
bound
aas
pop
jns
shll
cmp
mov
stc
in
sub
sub
shll
jp
lea
mov
cmp
mov
mov
pop
jle
scas
movsl
in
jle
pusha
push
dec
pop
ffreep
test
xchg
xor
sbb
ret
cwtl
in
push
popf
cmp
fs
cmc
loopne
stos
mov
dec
and
in
mov
imul
xor
pop
dec
adc
xchg
loope
pop
and
pop
inc
idiv
mov
inc
fisubs
or
sub
sbb
out
les
or
movsl
ficomps
rorb
jge
iret
leave
cld
repnz
loopne
call
rorb
push
push
pop
xor
jge
icebp
cltd
sbb
cmc
test
add
or
int3
sub
jp
push
mov
les
mov
push
scas
pop
pushl
test
cmp
dec
stos
movsb
fsubr
inc
std
mov
cmpsb
pushf
sbb
add
add
fisttps
daa
jae
in
cmp
fimuls
es
cmp
dec
dec
movsl
xchg
and
xchg
lcall
push
lods
subl
inc
in
call
pop
stos
pop
arpl
js
out
pop
movsl
xor
push
cwtl
mov
repz
scas
sub
js
sub
xchg
outsb
mov
scas
adc
mov
scas
fs
pusha
sbb
cwtl
add
jne
and
add
push
jg
xor
sub
out
roll
pop
pop
mov
push
xlat
lds
fcoml
adc
jle
iret
fisubrs
xorb
jg
call
sbb
add
adcl
push
lret
push
rol
outsb
fmul
jnp
notl
xchg
fdivp
push
mov
cmp
into
mov
pop
cmc
mov
and
inc
and
outsl
mov
inc
loop
in
stc
pop
jmp
add
bound
inc
xor
popw
mov
cmp
push
enter
sbb
or
cmp
mov
sti
in
out
loope
sbb
fchs
and
add
adc
fldt
jge
sub
pop
movsb
xchg
jns
addr16
dec
rolb
xchg
adc
mov
insl
insb
pop
jmp
push
push
cs
adc
sub
xchg
nop
adc
mov
inc
loop
stos
fnstcw
cmpsl
sti
and
das
pop
mov
mov
in
addr16
pop
int
pop
dec
insl
adc
int
add
fwait
lcall
pop
xor
inc
push
inc
sbb
lods
aas
lahf
testb
and
cmp
test
idivb
ret
pop
ret
scas
mov
popf
out
dec
adc
and
lret
call
push
xor
aaa
out
das
dec
and
mov
insl
jbe
and
out
stos
ret
les
mov
mov
fldl
cmpsl
jb
iret
mov
pop
gs
cld
mov
decb
mov
or
lcall
sti
inc
cmp
outsl
int
sub
test
mov
add
push
lret
fnsave
mov
ss
les
ljmp
cmp
je
out
out
ljmp
out
imul
popa
cltd
in
fisttps
mov
adcb
dec
sub
push
jb
roll
push
mov
aas
fwait
iret
insb
dec
push
divl
add
add
pushl
rorb
fs
push
add
stos
into
push
mov
cmpsb
shll
dec
fistl
mov
movsl
xor
or
mov
jne
insl
mov
mov
leave
leave
out
and
vcvtss2usi
stos
sub
push
lcall
mov
sub
mov
adc
mov
aaa
push
mov
cmp
les
stos
arpl
out
dec
inc
cmp
jmp
mov
or
push
pop
fcomip
popf
pusha
insb
cmp
xor
lock
add
cs
ret
arpl
and
mov
scas
ffreep
stc
push
dec
mov
cmpsb
stc
rol
imul
lcall
arpl
std
and
mov
popa
push
sbb
inc
fisubl
xorl
fidivrs
gs
sub
pop
repnz
mov
leave
pop
xchg
mov
fwait
dec
dec
push
movsl
dec
jbe
loope
jge
dec
inc
sbb
jp
test
pop
or
push
jecxz
xor
ror
sbb
inc
dec
mov
push
xchg
xor
in
cmpsb
scas
cmp
cmp
or
cmp
dec
push
movsb
mov
mov
dec
cmp
je
ficompl
gs
jb
dec
cmp
sarl
jl
idivb
dec
stos
sub
movsl
lea
and
xchg
ret
sti
mov
cwtl
stc
push
int
stos
xor
out
mov
js
or
pop
in
lea
insl
loope
lods
sub
neg
sub
lea
shl
rcrb
xchg
or
mov
cmp
es
daa
push
adcb
push
inc
subb
adc
das
sahf
xor
outsl
insb
add
out
sti
sahf
enter
push
test
daa
jg
inc
call
mov
xchg
adc
xchg
inc
ss
sbb
cmp
adcl
push
cmpsl
das
lret
inc
shll
mov
rorb
fcompl
into
insb
sub
push
shll
xor
in
loop
push
jmp
adc
out
add
xor
lods
ret
mov
cmp
add
cli
sub
sbbb
xchg
mov
adc
pop
mov
pop
jb
aas
adc
mov
imul
repz
test
cmp
shlb
mov
pushf
or
jmp
mov
xchg
jno
aad
imul
inc
cmc
test
mov
aam
push
std
xor
mov
add
pusha
sbb
pop
cld
inc
push
adc
inc
pushf
or
fistl
push
pop
adc
sbb
stc
sub
ds
inc
jb
xor
je
jmp
sahf
idiv
cmp
xchg
cwtl
sarb
mov
rcr
mov
enter
add
lret
push
iret
ja
test
mov
icebp
imul
sub
fsubs
and
repnz
push
jne
or
loopne
fstpl
mov
mov
idivb
cld
out
pop
mov
in
in
and
add
add
sbb
insl
rolb
jae
push
call
xchg
lea
fstpl
xchg
ficoms
imull
mov
stos
lods
mov
sbb
xchg
femms
xchg
sbb
cltd
and
test
testl
dec
inc
lahf
cmp
xchg
pop
xor
or
and
pop
shl
pop
adc
jmp
push
lcall
add
testl
and
mov
inc
xchg
add
mov
push
sarb
popa
repnz
ja
and
inc
rcrl
imul
mov
mov
mov
jmp
jns
sub
push
or
lret
out
jmp
or
les
shlb
mov
push
ds
in
xchg
popf
jle
into
and
mov
fsubl
pop
pop
filds
loope
xchg
xlat
cmp
xchg
test
xchg
jae
lcall
xchg
aam
jae
or
cld
mov
lods
imul
out
xchg
popa
movsl
adc
fwait
iret
add
xchg
cmp
ret
xchg
inc
or
lods
arpl
addr16
jle
or
push
rolb
leave
ficoml
je
iret
pop
pop
xchg
pop
ljmp
pop
rolb
or
push
hlt
out
add
and
push
aaa
jge
mov
xor
in
aaa
inc
pop
addr16
sub
int3
add
mov
mov
push
ja
dec
xor
inc
insb
push
scas
sbb
push
cmp
and
inc
sbb
cmpsb
int3
push
pop
in
rolb
inc
enter
daa
jno
add
xor
xor
aam
jl
repnz
clc
adc
jg,pt
cmp
and
je
sub
cmc
push
lods
jg
test
cwtl
loop
xor
icebp
fwait
pop
mov
mov
pop
and
adc
cmp
sub
inc
ja
movsl
loope
outsb
jnp
cltd
adc
jae
rorb
and
sbb
int
and
jp
int
inc
pop
sub
leave
imul
loop
addr16
test
fsubr
bnd
sbb
cwtl
xor
fst
scas
subb
mov
pop
dec
mov
mov
mov
sub
ss
mov
cmp
ds
lret
xchg
inc
rorl
mov
decb
dec
xchg
into
dec
sti
jbe
pop
xor
not
adc
sub
lods
jnp
stc
in
sbb
inc
add
pop
or
lods
stos
in
push
mov
insl
out
xor
mov
mov
sti
inc
ds
daa
out
inc
gs
mov
pop
xchg
adc
adc
enter
add
adc
insl
fcomi
fnstcw
mov
sbb
jb
adc
sub
lret
xchg
pop
in
inc
and
data16
cmp
mov
in
dec
mov
cmovb
jb
fldlg2
sbb
jecxz
xchg
jo
gs
imul
jmp
adc
mov
fildl
out
inc
pop
jmp
inc
push
sbb
aas
fnsave
jb,pt
sub
je
loope
rcrl
int
std
cmpsl
aas
sub
lea
mov
xchg
mov
ja
adcl
addr16
mov
pushw
lock
mov
mov
mov
pop
test
es
cmc
insl
les
dec
rorl
dec
cmpsl
jo
cmp
int
sub
adc
addr16
adc
or
pop
cmp
sbb
adc
ret
jge
fwait
mov
inc
pop
push
push
lahf
and
aad
clc
lods
xchg
pop
xchg
inc
jg
ljmp
dec
lods
pop
mov
pushf
xchg
sub
cld
adc
popa
jmp
cmp
sub
xchg
fiadds
dec
push
xchg
mov
jno
cwtl
iret
sbb
lock
mov
mov
push
cmp
xor
add
pop
jmp
xor
rorl
adc
test
xor
cltd
pop
sbb
cmc
ja
stc
dec
rcll
or
in
mov
lods
cwtl
jne
inc
data16
nop
inc
out
loopne
push
jns
dec
pushf
in
push
jno
cmpsb
shl
out
xchg
movsb
sub
mov
addr16
jl
jp
popf
mov
fwait
arpl
xchg
ljmp
pop
int
and
int
and
loope
lcallw
fdivl
insb
xchg
loope
sub
fistpl
push
mov
int3
stos
out
fbld
adc
pop
insb
stc
divl
mov
scas
movsl
pop
sub
pushf
mov
cmp
iret
fs
xchg
sbb
cltd
push
inc
pop
jge
arpl
adc
decb
cltd
pushf
cmp
fimull
pop
imul
sbb
aad
add
je
rcrb
mov
lods
jns
leave
dec
pushf
stc
hlt
xor
aam
popa
add
sbb
mov
push
mov
add
sbb
out
mov
dec
jle
mov
xor
fwait
pop
push
scas
clc
push
jg
cld
jno
cmp
cmp
movsb
mov
lea
in
mov
jecxz
sarb
daa
jo
add
xlat
sub
mov
xchg
mov
cmpsl
inc
mov
mov
mov
push
jg
adc
push
arpl
std
mov
jno
fsubs
js
or
pop
bound
push
lcall
xor
clc
sub
leave
adc
dec
or
ss
mov
and
push
mov
loope
fsubl
int3
sub
lea
fmuls
lcall
adc
sbb
repz
push
sbb
test
add
fidivrs
push
push
mov
ss
mov
arpl
in
adc
das
shlb
lds
imul
mov
not
push
mov
cmp
xor
jb
into
xor
cmc
fdivp
dec
xor
nop
outsl
push
mull
inc
adc
out
mov
std
or
jbe
lods
xchg
les
dec
sub
xor
mov
sti
repnz
add
gs
std
popf
pop
mov
scas
adc
int
mov
stos
repz
fstl
inc
cmp
sbb
push
jecxz
sub
fmul
in
scas
aas
add
cs
cli
cmp
fistps
dec
adc
in
inc
sbb
movsb
les
dec
jecxz
in
push
pushf
mov
push
out
xlat
loopne
pop
bound
int3
adc
outsl
int
pop
movsl
and
mov
dec
pop
push
sbb
mov
aas
jl
fs
push
xchg
dec
mov
out
ljmp
std
dec
aam
cwtl
dec
in
sub
loope
inc
mov
fidivrl
sub
dec
in
push
lret
xor
adc
mov
pop
lock
lahf
adc
mov
xchg
pop
xchg
dec
out
jno
adc
mov
dec
into
int
cmpsl
outsl
fidivrl
movsb
adc
mov
mov
pop
add
add
pop
out
shr
cmpsb
inc
sub
sub
dec
xor
lret
push
mov
jmp
cmp
out
pop
xchg
sub
mov
lods
imul
imul
add
icebp
dec
cmp
mov
add
adc
decl
mov
mov
subl
mov
sbb
and
pop
mov
pop
push
jne
pop
jl
push
loopne
loope
sub
add
incl
xlat
xor
cwtl
rorb
xchg
add
ds
mov
shrl
pop
xlat
jmp
ja
push
xor
inc
out
xor
aas
push
rorl
push
xor
ss
out
mov
aad
jns
push
cmp
push
sti
push
sub
lods
int
addr16
mov
in
mov
add
mov
dec
push
xchg
jle
mov
mov
fistpll
sub
xchg
jge
shr
add
xchg
sbb
test
movsb
outsl
fstps
push
adc
push
icebp
stc
sub
and
push
insl
insb
fs
and
scas
or
aam
adc
jg
movsb
aad
pop
aas
adc
and
jo
ljmp
push
xchg
ja
fidivrl
mov
dec
pop
dec
insl
lret
adc
jmp
mov
repnz
mov
lcall
mov
cmp
mov
sbb
shl
or
out
jnp
cmc
dec
pushf
int3
fsts
dec
in
fldt
push
cmp
xchg
shll
subl
out
sub
sub
sub
sahf
jge
enter
daa
outsl
in
cmp
xchg
cmp
rolb
or
push
sbb
lds
movsl
mov
pop
std
lahf
addr16
cmpsb
test
cs
xor
fwait
je
outsl
pop
jmp
js
call
add
pop
scas
mov
sub
movntpd
rorl
adc
sub
mov
sti
push
mov
dec
inc
add
add
jne
and
jge
mov
int
icebp
dec
sub
hlt
aad
push
notl
lcall
xchg
fdivrl
jl
sbb
sahf
mov
mov
and
and
outsb
xorb
enter
dec
das
adc
mov
ss
imul
nop
hlt
lret
fadd
cmp
mov
jp
adc
adc
xor
loop
loop
stc
sti
insl
jg
cs
or
jge
mov
lods
js
adc
dec
test
cli
xlat
sub
data16
std
xor
sti
mov
rcrb
les
loopne
ret
iret
pop
cmp
addr16
imul
adc
ja
pop
xchg
test
sub
xor
mov
sub
and
mov
fsubrp
sbb
sub
cs
mov
nop
subb
jae
es
cs
fstps
daa
les
jp
jecxz
jns
imul
call
push
out
std
pop
adc
push
repnz
or
ss
cli
inc
pop
inc
sub
xchg
lods
aas
sbb
fimuls
jae
je
into
mov
test
cmp
cmc
dec
enter
inc
mov
andb
rcrb
dec
iret
nop
scas
lret
movsb
in
mov
loop
mov
jle
lock
dec
repnz
dec
popf
xchg
and
insb
fs
add
es
loopne
insl
xchg
leave
inc
dec
leave
and
cmpsl
outsb
les
icebp
jnp
imul
rol
mov
push
add
and
sarl
pop
ja
mov
sub
bound
or
sub
adc
and
xchg
rcr
ljmp
jne
aam
mov
jb
and
pop
cmp
movntps
add
inc
cltd
enter
or
pop
sarl
dec
ja
jae
adc
xchg
pop
mov
rcrl
dec
pop
adc
or
add
outsl
pop
pop
jmp
inc
or
or
push
repz
repz
mov
insl
mov
xchg
ljmp
jmp
inc
xchg
or
or
mov
lock
xchg
mov
std
out
sahf
jo
bound
jbe
in
call
dec
out
dec
cmp
test
pop
addr16
clc
inc
jp
jns
mov
mov
adc
nop
jle
mov
push
pusha
pop
or
fistps
int
push
push
jmp
out
shll
fistl
push
addr16
popf
cld
int3
inc
mov
xor
and
shrb
jo
push
imul
push
push
repnz
lret
and
lods
pop
jbe
lock
sub
cmp
fisttps
and
outsb
inc
pop
xchg
aam
popf
sbb
lret
ja
imul
mov
lds
xor
xchg
pop
movsl
mov
push
cmp
hlt
jge
push
loope
pushf
jbe
out
mov
leave
sahf
mov
popa
hlt
pusha
aaa
adc
or
loopne
add
push
dec
pop
fdivp
push
and
fdivl
push
jg
scas
mov
dec
and
cmpsl
std
cmp
jp
inc
enter
push
inc
mov
test
test
outsb
add
pop
jno
daa
cmpsb
jl
dec
sahf
cmp
jo
movsl
test
sub
lahf
xchg
notb
inc
mov
mov
xlat
push
stc
inc
divl
repz
aaa
mov
pop
es
fistpll
pop
fistl
loopne
push
push
jne
loope
stos
stos
sub
xor
sub
mov
adc
add
jl
pop
dec
clc
sbbb
shlb
add
inc
mov
push
mov
inc
sub
hlt
pop
sub
lcall
xor
sbb
out
test
in
cld
dec
inc
jg
fidivrl
mov
push
pop
mov
sub
cld
ss
popf
inc
cmp
outsl
imul
dec
push
inc
lret
iret
rcl
int
lahf
jp
or
testb
insb
sahf
cmpsb
xor
stc
mov
push
fwait
pop
loop
in
stc
mov
cmpsl
fs
xchg
popf
pusha
lods
pop
pop
test
and
stos
scas
cli
stc
enter
and
sub
mov
nop
das
and
lahf
jo
daa
fwait
outsb
pop
out
mov
imul
mov
xchg
dec
mov
jae
outsl
call
iret
add
sub
movsb
imul
test
inc
jmp
and
aad
out
nop
pop
outsb
out
dec
shl
stos
inc
inc
outsb
push
fsts
mov
leave
outsb
gs
lea
mov
pop
enter
adc
pushf
mov
xchg
push
adc
pop
popf
sbb
fldenv
mov
sub
sahf
dec
ja
pop
je
ret
mov
testb
lods
std
pushf
test
jns
pop
ret
decl
push
sbb
dec
mov
leave
hlt
mov
cmpsl
sub
sarl
das
cmpsb
and
jmp
jp
add
out
pop
shll
pop
or
insl
jns
adc
bndstx
xchg
push
icebp
push
aas
sbb
xchg
xorb
pushf
mov
sub
sbb
pop
xchg
mov
scas
sub
sub
ficomps
sti
mov
sbb
cltd
adc
cmp
clc
pop
or
ljmp
jmp
stos
imul
cwtl
xchg
jg
lahf
push
repnz
push
inc
cltd
push
cmp
adc
jp
xchg
ljmp
adc
adc
shll
iret
in
mov
repnz
ss
mov
mov
xorl
stos
or
push
xor
cld
loope
cmp
jae
stc
outsl
mov
pop
dec
xor
in
dec
lcall
or
ficomps
iret
cmp
push
fs
dec
cs
rolb
bound
andl
das
mov
xlat
dec
adc
mov
mov
cmc
mov
ds
mov
test
lret
jp
in
mov
adc
jge
inc
xchg
and
xor
jae
jns
push
sub
popf
and
mov
sahf
test
pop
push
stc
insb
cmp
xchg
mov
push
adc
push
hlt
iret
andl
imul
aaa
inc
cmp
lods
arpl
xor
push
out
pop
push
dec
lahf
inc
xchg
pushf
xor
and
xchg
sub
or
or
popf
pop
cmpsb
lods
test
data16
fdiv
movsl
in
leave
mov
fcomip
adc
jbe
adc
jge
insl
jne
sbb
xchg
aas
push
stos
or
dec
mov
scas
or
dec
lret
movsb
loope
add
and
lods
lods
push
scas
xchg
int3
mov
cmp
movsb
inc
xchg
loop
push
leave
cmp
insb
xor
rcr
daa
insl
stos
pop
cmp
and
jno
loopne
jl
imul
mov
pop
or
adc
lahf
movsl
xchg
lea
xchg
js
test
or
data16
cli
mov
sti
pusha
sub
pop
mov
and
fldt
lds
adc
fildll
mov
out
dec
sbb
insl
andl
enter
mov
sub
outsl
cwtl
pop
push
fisubrs
scas
decl
fcoml
int3
leave
sahf
idivl
mov
adcb
jmp
rorl
mov
leave
ja
xor
mov
pusha
fistl
fs
fisttps
fsubrs
and
testl
mov
rorb
int
into
adc
xor
mov
in
jb
loop
sbb
stc
imul
inc
sbb
lods
inc
dec
stc
mov
fldenv
dec
xor
sub
inc
xor
mov
push
add
sti
call
mov
and
sub
ret
pop
or
adc
imul
push
repz
xor
sbb
stos
sub
cli
xor
jecxz
xchg
out
xchg
jmp
xor
aad
jg
nop
les
inc
push
sub
les
insl
jno
jno
add
call
push
cwtl
mov
adc
mov
pushf
pusha
int3
js
pop
inc
jbe
inc
cmp
mov
aas
pop
fidivrs
jb
str
stc
adc
mov
testb
std
inc
ljmp
push
mov
mov
out
sub
push
test
hlt
pop
sbb
pop
or
das
test
dec
mov
mov
push
and
mov
aas
es
dec
mov
push
mov
icebp
sub
addr16
mov
scas
push
mov
xor
mov
mov
dec
shlb
cmp
and
adc
test
push
neg
pusha
jb
clc
cwtl
pop
pop
xchg
ds
movsl
ljmp
xor
fucomip
cmp
push
int
psubsw
add
cmp
and
dec
mov
xchg
push
into
dec
inc
outsb
fisubrs
xchg
mov
sbb
xchg
adc
stos
fwait
jmp
sarb
movsl
mov
jmp
and
xor
jns
or
mov
xor
pop
fcoms
cmp
mov
or
add
xorb
mov
add
mov
push
cmovle
pop
jne
sub
insb
out
pop
and
test
jns
xor
in
lret
loop
mul
pop
lret
xor
or
add
jp
les
mov
push
xor
jle
inc
iret
in
cmc
aad
nop
in
fistps
pop
jmp
jl
cmp
pop
mov
popf
dec
push
cmp
push
scas
ss
stos
mov
inc
and
push
insb
movsl
add
xor
dec
push
clc
jno
adc
pop
ret
jb
in
movsb
inc
inc
sbb
arpl
inc
repz
or
test
adc
jne
fcmovbe
clc
repz
xorb
sbb
loope
pop
aad
je
xchg
fidivrl
lds
test
cmp
mov
clc
sub
sub
hlt
pop
push
inc
push
jg
aad
insl
lods
fidivrl
and
aaa
pop
in
or
cli
lcall
push
out
dec
xor
pop
lock
scas
je
push
and
leave
cmp
lret
int3
add
andb
pop
daa
enter
daa
insb
shll
jno
mov
xor
arpl
lahf
movsl
mov
loopne
push
mov
les
push
push
lret
push
sbb
xchg
scas
jae
mov
fnstsw
sti
xchg
pop
pop
icebp
dec
push
and
xchg
jne
sub
dec
mov
push
test
outsb
push
sbb
mov
cmp
sbb
dec
hlt
add
out
and
cmc
movsl
jb
inc
or
aam
test
popa
bound
faddl
push
sbb
inc
or
test
mov
jg
mov
sbb
adc
out
adc
xchg
or
in
ret
in
lret
add
mov
cmp
jbe
std
into
mov
outsl
int3
dec
inc
loop
cmp
and
int3
add
les
pushfw
xchg
mov
sub
xchg
cli
pop
movl
jle
sti
scas
les
leave
dec
fstps
cltd
loopne
mov
sub
imul
ds
mov
repz
jmp
into
adc
sbb
in
xlat
dec
xor
sub
jo
cli
add
in
pop
icebp
por
jnp
aad
jge
nop
adc
jnp
nop
ficompl
sbb
inc
pop
les
jmp
jecxz
out
je
push
lea
xchg
call
shll
jg
cs
inc
adc
shll
or
fldt
pop
jecxz
xchg
insb
mov
aas
clc
xchg
insl
jb
or
gs
je
cmpsl
adc
es
mov
std
ljmp
mov
aam
mov
cmpl
icebp
mov
or
mov
pop
lock
sub
fs
mov
outsb
xor
and
mov
lahf
es
jle
dec
mov
stc
test
int3
jmp
sar
bound
cmp
mov
cmp
lock
aam
shlb
idivb
aam
pop
mov
js
lods
push
pop
mov
movsl
clc
sarl
ja
jge
add
test
push
shrb
jnp
fwait
sub
push
test
push
cmovs
out
mov
xlat
test
in
mov
xchg
je
dec
lods
aad
test
lock
xchg
xchg
cmp
mov
pop
push
and
aad
insb
cmpl
sarb
mov
cmpb
or
mov
fdivl
pop
ret
into
shlb
in
pop
dec
subb
or
std
jg
lods
das
push
dec
xor
jne
jmp
pusha
out
cmp
popa
stos
gs
mov
xchg
mov
lcall
cmp
or
shrb
jp
ja
mov
or
mov
push
push
mov
in
xchg
sbb
jo
fistpll
inc
sub
xchg
inc
pop
mov
sbbl
mov
in
push
and
push
int3
imul
mov
xchg
jle
push
aas
mov
fmul
aas
sbb
lock
pop
movsl
inc
dec
xchg
mov
inc
mulb
jo
add
inc
xchg
shr
fiaddl
push
push
sbb
stos
add
mov
lds
dec
jg
push
mov
leave
mov
aam
push
into
pop
adc
mov
ljmp
jmp
aaa
mov
jmp
add
cld
int3
test
push
push
leave
fidivrs
xor
push
scas
push
xchg
fstpt
lret
movsb
push
leave
dec
inc
jne
cmpsb
ficoms
in
cmp
pop
enter
daa
imul
jno
mov
xchg
cmp
test
stc
movsl
mov
fisttpll
jecxz
aas
push
sahf
fcmove
test
pop
fwait
jg
pusha
in
orb
jno
lds
popf
scas
shrb
add
dec
xchg
add
outsb
int
test
xchg
dec
ja
ja
add
xchg
push
inc
add
mov
and
shlb
subl
push
aad
lcall
push
fsubr
jle
sbb
jg
sahf
cmp
and
dec
pop
mov
mov
fnstenv
push
ret
pop
ret
rclb
cltd
mov
cmp
mov
xchg
lret
mov
mov
movsl
or
xchg
into
mov
nop
cmp
sbb
push
outsl
stos
cs
pop
and
stc
xlat
xor
fs
scas
dec
add
ds
adc
mov
dec
enter
aam
xor
sarl
pop
clc
jb
stc
add
gs
in
clc
pushf
pop
pop
dec
es
adc
push
jecxz
lods
movsb
cs
into
xchg
xchg
insl
xor
cmp
cmp
xlat
mov
in
adc
in
lds
pop
jmp
lahf
cmpsl
cs
stc
aad
fidivs
out
pop
fs
jp
fcmovu
mov
fninit
bnd
ja
mov
call
push
push
push
pop
loope
mov
test
in
mov
leave
fistpl
jne
inc
dec
dec
mov
jbe
aas
xchg
dec
jnp
jne
push
fcoml
dec
je
xchg
outsl
shll
gs
lods
data16
xchg
pop
repz
out
shlb
xchg
push
stos
sbbl
fmulp
pusha
push
add
xchg
pop
dec
lock
das
inc
mov
mov
and
sub
cmp
in
mov
sub
mov
jmp
jb
xlat
or
mov
loop
mov
mov
repz
fwait
rolb
int3
jmp
aam
repz
inc
pop
sbb
xchg
add
scas
sbb
push
mov
mov
sbb
out
mov
add
dec
jns
lods
notl
or
cmp
lahf
pop
fistpl
ss
repz
cwtl
or
dec
adc
cltd
test
jmp
xchg
sbb
inc
cmp
pop
rorl
push
add
fistl
lcall
mov
push
jecxz
ficompl
test
sub
mov
inc
in
mov
jle
mov
dec
jae
cmp
inc
cmp
dec
add
adc
jne
rorb
inc
les
out
sbb
aad
imul
xchg
in
sti
xchg
addl
pop
out
push
pop
sub
xchg
inc
push
addr16
jp
ficoms
sub
sub
dec
jle
mov
mov
push
mov
xchg
pushf
test
mov
adc
jae
jmp
push
jae
sbbb
pop
rclb
repz
stos
cltd
lods
sti
and
jle
imul
add
xchg
adc
mov
ret
adc
push
or
inc
pop
pop
jmp
inc
stc
cwtl
lcall
daa
xchg
inc
adc
lods
xchg
xor
pop
xor
xlat
int
lds
cmp
sahf
and
pop
hlt
repz
sub
sbb
cmp
sbb
nop
aaa
jl
repnz
lret
pop
int3
jo
testb
sbb
lods
jns
xor
mov
imul
subl
inc
add
inc
cmpsb
popa
xchg
push
enter
daa
push
xchg
cmp
loop
jl
mov
cmp
outsl
idivb
je
push
movsl
lds
and
sti
cmp
lret
mov
dec
push
and
pusha
mov
inc
mov
out
js
jmp
pop
fsubr
mov
loope
iret
jnp
mov
pop
sub
mov
lock
jo
mov
subb
je
mov
inc
add
int
cmp
sub
incb
lcall
out
xchg
rcl
sbb
cs
loopne
test
insl
or
scas
mov
mov
xor
mov
repnz
push
cmp
ss
mov
pop
movb
in
adc
shrl
ljmp
sahf
gs
mov
mov
loop
repnz
mov
fs
pusha
add
hlt
data16
insl
cmpsl
mov
lahf
out
ficoml
cli
lds
data16
out
mov
or
sub
sbb
loop
out
xchg
loopne
lds
xchg
das
imul
enter
cmp
sub
xchg
cmp
pop
xlat
lret
je
sub
xlat
mov
xor
jmp
sti
sbb
test
mov
js
dec
fistpll
lea
inc
les
jns
add
jp
lea
xor
cmp
test
pop
xchg
push
adc
inc
jmp
popa
addr16
fcmovne
cmp
pop
sub
inc
rorb
xchg
aas
or
popf
rorb
adc
rol
popl
notb
fs
cmp
cwtl
stos
fisubrl
mov
testb
lock
test
iret
add
mov
xor
push
popa
das
and
mov
sub
ljmp
cmp
stc
dec
mov
push
cmpsl
imul
icebp
scas
inc
cld
ds
mov
cwtl
faddl
dec
mov
mov
adc
insl
sub
test
aam
loop
mov
testl
aad
pop
clc
dec
les
ljmp
imul
enter
mov
fwait
movsb
push
push
pop
in
clts
inc
sub
mov
in
fstpt
cmp
fwait
adc
dec
jp
insb
test
ja
xchg
or
rcll
mov
outsl
fwait
jbe
fistpl
mov
jp
push
dec
jecxz
testb
std
pinsrw
or
push
add
xor
imul
mov
sbb
mov
cmp
or
or
inc
jns
cwtl
or
insl
mov
mov
jmp
mulb
pop
mov
cmp
cld
dec
lds
push
lret
xchg
cmp
jecxz
xor
or
hlt
sub
stc
in
add
test
cmc
loop
cs
pusha
popa
rcrl
fwait
xchg
outsl
inc
fsubr
daa
xchg
out
jae
cwtl
stos
push
ss
lret
iret
mov
push
imul
stos
or
fbld
mov
fisubrs
cli
imul
pop
scas
pop
imul
int
dec
adc
and
push
jbe
pop
mov
inc
andb
mov
inc
cld
decl
negb
push
push
xchg
xchg
mov
pop
bound
fidivrs
push
lds
imull
rcrb
mov
icebp
mov
mov
ds
xor
ret
xchg
xor
jge
nop
adc
or
push
or
ljmp
xchg
push
mov
das
imull
add
pop
movsb
insl
dec
push
cmpsb
in
movsl
in
or
jl
lods
js
daa
imul
jno
sub
jl
and
cmp
pop
ds
fisubl
sbb
sub
xor
test
lock
xor
push
js
push
pusha
xor
jmp
inc
dec
pop
sbb
lcall
mov
stc
outsb
xchg
adc
lods
rorb
pop
xor
mov
sbb
cmc
add
dec
in
lods
pushf
add
popf
loop
int
pop
les
mov
and
push
fdiv
lcall
into
faddl
pop
sbb
adc
push
addb
push
mov
mov
jecxz
icebp
jne
adc
jo
cmp
push
iret
js
or
lret
xlat
rol
cltd
mov
outsb
mov
into
stos
xor
dec
es
iret
shll
inc
clc
dec
stc
inc
push
fs
rolb
and
lods
loop
aas
mov
xchg
out
jo
cli
clc
or
jo
adc
stos
push
aas
push
lods
gs
ds
loopne
add
adc
sbb
adc
lods
pop
repz
dec
sbb
push
push
sub
xchg
sahf
xlat
or
cmp
fnsave
aas
cltd
inc
in
fwait
sub
jmp
sbb
cs
ds
int3
js
mov
mov
and
fldenv
ja
adc
xchg
lea
push
push
sbb
adc
mov
rcr
mov
pop
int3
inc
pop
inc
push
aaa
cs
sub
mov
jb
xor
xlat
je
jae
rcll
or
std
sbbl
jl
testb
sub
lret
ds
inc
mov
and
scas
das
add
into
mov
mov
fld
pop
ds
cmpsb
stos
enter
rorb
push
mov
push
mov
icebp
test
xchg
mov
sub
ds
jne
xlat
pop
xor
cli
sub
mov
dec
mov
xlat
cs
push
dec
or
test
cmp
ljmp
imul
xchg
push
cmp
mov
gs
mov
lds
pop
test
mov
sahf
stos
dec
loope
and
nop
nop
jns
push
inc
inc
shrl
hlt
pop
pop
pop
js
movsl
insb
aas
push
push
adcl
dec
add
pushf
adc
adc
fimull
enter
pop
pop
xchg
xchg
xor
mov
hlt
or
dec
pop
movl
or
arpl
cli
pop
mov
sub
jne
lret
cld
lret
fsubrs
jns,pn
pop
je
xor
mov
out
inc
pop
sub
mov
gs
leave
test
fcmovne
cmp
adc
push
add
in
shll
sbb
jmp
test
pop
jae
mov
popf
out
popf
mov
stos
mov
or
lret
fcompl
push
dec
push
imul
mov
mov
xchg
iret
pop
lods
dec
ret
adc
push
test
adc
adc
je
pop
in
push
adc
fisubl
adc
bound
and
xor
ficomps
push
xchg
aaa
call
adc
inc
push
leave
add
pop
fcoml
pop
lcall
rcl
sbb
push
movsb
aaa
cli
test
in
push
sub
loope
testb
push
jb
xor
test
cmpsb
jo
rol
lock
and
cmp
shlb
cmpsb
outsb
imul
out
cmpsl
dec
enter
daa
push
or
jno
push
jl
arpl
pop
dec
je
mov
cld
ljmp
std
and
inc
and
mov
and
pop
adc
js
sub
pop
pop
fisubrl
out
loope
mov
shrl
or
inc
outsb
divb
adc
lods
push
xchg
push
and
scas
jmp
and
int
arpl
sub
inc
mov
shlb
call
enter
repnz
sbb
cs
sbbb
xorl
cmp
mov
out
dec
test
cmp
shrl
test
mov
rcrl
mov
dec
enter
dec
into
dec
stos
and
push
pop
add
sub
outsl
dec
out
loop
xor
stc
cld
cld
enter
sbb
lretw
test
movsb
lods
leave
dec
ret
pop
xchg
inc
mov
xor
cs
add
in
bound
gs
mov
cli
pop
test
hlt
adc
imull
push
int
push
scas
lret
pop
pop
xchg
fisubrl
aam
jp
in
cmp
lods
lret
xlat
dec
lds
sub
lret
push
imul
jmp
incl
aad
pop
movsl
nop
jge
gs
or
mov
loop
mov
les
jecxz
idiv
movb
icebp
call
iret
fcompl
pop
mov
pushf
mov
out
fldt
jmp
insl
inc
fiadds
inc
inc
mov
aas
je
es
add
dec
inc
add
je
pusha
in
les
lcall
cwtl
and
mov
outsl
inc
sub
cmp
insl
lret
lods
aaa
and
call
push
pusha
das
loopne
mov
mov
ds
jmp
mov
dec
cmpsb
mov
cmpsl
addr16
mov
pop
sbb
cld
xchg
adc
mov
dec
dec
daa
and
adc
pop
push
mov
mov
aam
mov
mov
sub
jbe
and
mov
aam
ljmp
imul
sbb
daa
jecxz
xchg
sub
outsb
pinsrw
fcoms
jb
push
mov
icebp
xchg
pop
cs
dec
fwait
xchg
pushf
adc
pop
shlb
mov
mov
and
clc
adc
sub
sub
sar
cmp
lret
xor
mov
aas
lds
bound
addr16
push
jle
mov
and
ja
scas
icebp
ljmp
aaa
movsb
inc
cmpsl
cs
xchg
sub
aaa
dec
mov
fcompl
out
mov
xchg
bound
ret
fadds
in
mov
mov
sub
test
pop
addr16
sub
inc
dec
into
mov
push
sbb
hlt
jle
xchg
add
pusha
xchg
bound
aaa
ljmp
adc
into
xorb
jb
mov
inc
jecxz
out
lods
dec
push
jmp
jecxz
and
cmp
packssdw
sbb
scas
and
mov
inc
mov
iret
mov
testb
jmp
inc
jp
arpl
inc
add
sub
in
cmp
ficoml
dec
xchg
xor
sbb
pop
ror
faddp
loopne
lds
push
jo
push
inc
push
inc
adc
repnz
cmp
jl
inc
hlt
aam
xlat
push
or
jbe
ja
jge
stc
dec
sbb
hlt
aaa
mov
daa
sub
lods
xchg
dec
int3
xor
fisttps
pop
popf
push
push
add
dec
add
into
les
or
daa
into
cmp
pop
mov
cmpsb
ljmp
enter
daa
addr16
test
jno
sub
cmp
pop
and
fisttpll
aaa
movsl
fiaddl
push
and
jmp
pop
test
push
ljmp
push
xchg
mov
pop
aaa
dec
mov
pop
stos
cmp
cltd
lret
and
scas
cltd
shl
pop
in
sub
add
sti
xchg
cmp
int3
push
adc
add
cmp
loope
call
add
xor
stc
push
mov
dec
jbe
stos
shl
dec
repz
loopne
xchg
push
jmp
pop
fcoml
adc
leave
cmp
mov
cmp
mov
imul
xchg
adc
mov
int3
cmp
mov
lret
ljmp
add
or
sahf
outsb
cmc
fisttpll
xor
imul
mov
pop
xchg
add
mov
sub
mov
sahf
mov
cltd
adc
inc
sub
pop
adc
cmp
dec
or
sbb
incb
mov
and
sub
lcall
adc
add
xchg
popf
pop
xchg
or
mov
inc
sub
pop
in
jno
cs
cmpsl
pop
rorb
out
nop
pop
imul
imul
adc
les
push
jecxz
stos
mov
sbbl
lea
push
call
dec
repz
icebp
cwtl
adc
adc
pushf
bound
fistl
mov
in
inc
gs
inc
pusha
fwait
std
aas
adc
jb
lcall
dec
mov
mov
or
fstl
std
sub
lahf
lret
mov
push
xchg
mov
dec
cmpl
mov
sbb
enter
push
mov
jl
lock
and
mov
or
mov
leave
sub
ret
js
xchg
lods
in
insl
lret
dec
mov
dec
lods
mov
xor
pop
mov
outsb
xchg
mov
pop
xchg
xchg
outsl
test
jmp
out
andl
push
out
hlt
fstp
dec
adc
jne
mov
push
popa
adc
lods
sub
lcall
xor
jo
cmp
mov
insl
add
shll
orb
mov
movsb
in
dec
scas
ss
test
xchg
add
sbb
subps
push
fwait
add
jp
fwait
pushf
cs
inc
nop
es
fisubl
jns
mov
dec
or
insl
adc
into
pop
sarb
push
push
ja
ret
aas
pop
pop
inc
jo,pt
or
lret
in
mov
in
lahf
adc
push
stos
mov
and
out
xchg
pop
bound
int3
in
in
dec
mov
cmp
pop
out
xor
sub
cmpb
addr16
mov
jp
addl
push
add
jle
sbb
pusha
xor
fists
fists
or
pop
xchg
ds
adc
push
cmp
jg
repz
xor
add
sub
and
out
daa
push
pop
scas
xorl
imul
sbb
jl
dec
test
pop
sub
arpl
jmp
js
imul
push
decl
sbb
pop
inc
pop
out
sub
fisubs
scas
lds
mov
mov
ljmp
hlt
pop
mov
es
enter
add
sbb
ret
js
cmp
pop
mov
or
sbb
int3
dec
aam
add
cmp
xor
sub
mov
scas
sbb
and
pop
push
movsb
push
xchg
inc
inc
dec
cmpsb
insl
sbb
sahf
lcall
daa
popfw
sbb
gs
push
pusha
idivb
jge
pop
ds
imul
xchg
mov
push
mov
inc
bound
push
xor
clc
dec
add
pop
adc
mov
fcomps
push
add
push
xor
sub
outsl
movsb
sub
or
jb
adc
add
fcoml
push
jae
xor
mov
sbb
mov
and
inc
rolb
cmpsb
jecxz
int
sbb
sub
aam
pop
into
inc
inc
lcall
inc
fs
sbb
sbb
stos
lahf
jns
aam
mov
mov
pop
xchg
outsb
mov
pop
mov
notl
adc
pop
mov
dec
mov
add
inc
mov
lret
pop
rorl
push
or
shll
xchg
movsb
hlt
inc
xor
ret
and
push
lret
incb
stc
push
je
adc
dec
data16
pop
inc
lods
xchg
mov
ljmp
mov
cmpb
outsb
sti
enter
test
push
gs
adc
ljmp
fcompl
jp
adc
jmp
in
movsb
lods
sbb
xchg
pusha
cmc
push
sbb
inc
mov
xlat
and
dec
mov
xchg
jmp
adc
aad
mov
ret
dec
lret
inc
fsin
and
les
mov
ja
fmull
call
int
sbbb
add
cmp
inc
pushf
or
movsl
sbbb
in
in
test
aas
mov
gs
xor
dec
das
addb
xor
roll
or
std
aam
cmpsl
cwtl
xchg
or
mov
lcall
movsl
repz
mov
sub
fnsave
cmpsl
das
sahf
push
fwait
mov
mov
cmp
pop
hlt
pop
es
scas
repz
pushf
aaa
jnp
gs
insb
mov
or
daa
mov
xchg
into
sbb
gs
mov
mov
mov
out
push
aam
in
mov
adc
mov
fnsave
cmpsl
clc
xor
jbe
ljmp
inc
lods
xchg
push
lret
stos
loope
imul
in
jne
xchg
mov
add
lret
jb
dec
cmp
insl
mov
filds
push
idiv
test
jne
xchg
pop
movsb
shrl
out
pop
sbb
xor
ds
syscall
outsb
mov
lods
jns
xor
clc
inc
or
push
inc
xchg
mov
ret
add
jno
pop
and
inc
adc
xor
aad
adc
je
dec
xor
jne
cs
jmp
out
jne
repz
xchg
jns
stc
lcall
ss
out
fucomi
sub
jnp
cli
lds
jp
outsb
add
xchg
mov
jle
xchg
leave
in
xchg
mov
fbstp
inc
xchg
mov
inc
push
xchg
or
les
clc
jae
inc
outsl
setge
push
sbb
fmuls
insb
xchg
mov
imul
rclb
lock
mov
fs
ret
sub
or
nop
dec
or
pop
lret
inc
or
adc
loop
or
shrb
fidivrl
icebp
out
arpl
pushf
pop
push
dec
and
lds
mov
rorb
es
cmpsb
inc
hlt
push
test
les
inc
mov
jge
repnz
hlt
jne
aaa
aaa
or
or
mov
fcmovne
xor
pop
adc
inc
push
sbb
test
cmp
dec
movsb
ret
cmp
sbb
cltd
inc
ret
inc
iret
insl
mov
in
movsb
cmp
enter
daa
bound
cmp
mov
jl
sbb
cmp
movsl
call
pop
pop
lahf
popf
sahf
in
push
nop
test
test
sbb
icebp
xor
ret
adc
pop
test
enter
push
pop
pop
repnz
int
xor
mov
sub
dec
in
pop
push
mov
pop
and
mov
sahf
mov
pushf
addb
popa
sbb
filds
insl
jl
jmp
jbe
int
lret
pop
sub
sbb
lcall
jae
in
fidivrl
sbb
lcall
jle
sub
dec
jg
push
cmpsb
mov
jmp
mov
lock
sbb
push
sub
repnz
fadds
mov
in
stos
sbbb
adc
sbb
cmc
imul
xor
xchg
push
outsl
in
dec
loop
push
xor
and
filds
adc
xor
and
clc
js
out
lock
out
xor
add
ja
jb
lret
imul
or
pop
add
push
imul
stos
sbb
xchg
and
lret
sbb
adcb
push
pushf
pop
sub
mov
in
inc
or
jmp
inc
clc
cs
adc
or
xchg
nop
push
inc
xor
sub
pushf
flds
out
dec
fisubrs
mov
push
call
dec
fdivl
adc
stc
xchg
mov
or
inc
jae
inc
xchg
movsl
pop
aas
push
repz
jb
lcall
adc
clc
mulb
in
jnp
adc
push
push
push
andl
inc
mov
mov
fs
lock
push
mov
outsl
push
adc
lahf
out
xchg
mov
je
cwtl
cli
into
dec
xchg
push
mov
mov
loope
mov
adc
and
mov
insb
xor
inc
pop
lods
pusha
sar
adc
aam
js
mov
add
je
scas
fstpl
lods
es
ss
ljmp
repnz
add
out
out
push
lods
adcl
adcl
loope
jno
adc
int3
cltd
out
sahf
ljmp
pop
push
xchg
cltd
cmpsb
test
out
xchg
sahf
rol
and
fwait
popa
test
cmp
cmc
xor
add
sbb
sbb
xor
or
scas
xchg
add
std
mov
push
int3
mov
loopne
mov
dec
adc
mov
mov
mov
lret
in
dec
insl
fbstp
push
jg
std
leave
jg
popa
outsb
lods
sbbl
out
negl
or
lods
addr16
aam
jp
or
sbb
xor
in
out
imul
push
xchg
mov
sbb
cli
mov
xchg
aam
inc
jae
stc
adcl
adcb
mov
cmpsb
mov
stos
dec
outsl
and
insb
std
aam
imul
push
xor
call
jl
pop
iret
fdivr
mov
pop
pushf
scas
inc
fwait
adc
inc
or
mov
push
or
movsl
fisubrl
xchg
cmp
add
pop
mov
fisubrs
sahf
into
shlb
jge
nop
and
leave
loope
gs
mov
xchg
push
imull
jbe
fistpll
lds
scas
mov
orb
testb
repnz
dec
mov
mov
xor
or
loopne
mov
lret
cmpsl
clc
movsb
and
inc
inc
pop
aam
cmpsb
jae
in
mov
dec
enter
daa
fs
mov
lret
add
jl
lods
cmp
fldt
xor
inc
xor
movsl
out
jl
and
cmp
push
arpl
test
mov
aad
pop
lods
dec
cltd
js
popf
adc
push
dec
cmc
push
in
in
loope
fisubrs
dec
sub
dec
ja
addb
xchg
dec
js
adc
and
mov
addl
inc
and
pop
lock
lods
jge
int
pusha
cli
sub
inc
pop
int3
jae
lcall
fcompl
in
mov
pop
test
jbe
jg
ljmp
pop
popa
ss
repnz
adc
movsb
lods
notb
mov
test
call
insb
mov
adc
sbb
cmc
xor
xor
mov
stc
fsubrs
incb
mov
nop
scas
lods
gs
cmp
cli
mul
pop
xor
and
sti
rolb
out
push
sub
mov
ret
pop
push
adc
pop
imul
std
inc
repz
push
xor
sbb
mov
xchg
inc
sub
adc
jmp
aaa
lahf
cs
ds
push
ja
nop
jmp
dec
ja
ljmp
mov
pop
push
mov
test
stos
or
lret
xchg
jb
in
adc
and
pushf
arpl
or
in
push
pop
sti
clc
popa
inc
cli
pop
sbb
enter
jb
xor
pop
je
pop
pop
rcrl
dec
sar
and
or
in
mov
mov
pop
cmpl
shll
add
jns
mov
jge
test
mov
outsl
ret
and
mov
movsb
dec
xchg
or
arpl
mov
mov
add
mov
xlat
and
and
jl
int
int3
faddl
sub
pop
jnp
int3
pop
mov
lock
fists
ja
mov
xor
xchg
jne
add
inc
imull
pop
ja
lods
insl
addb
jp
out
mov
int
inc
push
push
push
adcb
cmovo
or
adc
mov
lods
int3
insl
dec
in
popa
test
in
adc
sbb
or
rcrl
aam
pop
outsb
lcall
test
out
jl
mov
cwtl
mov
xor
imull
mov
xchg
push
pop
cmp
in
mov
pop
fwait
push
mov
fisubrl
sbb
mov
or
mov
and
xchg
push
jne
adc
mov
mov
sub
sbb
jns
ds
in
cld
imul
fldcw
or
in
ret
shrb
popa
pushl
jmp
dec
jnp
and
jle
fxam
adc
pop
pusha
add
xchg
xchg
popa
or
cmpsb
xchg
lahf
lds
jae
aas
cs
enter
test
fld
push
in
stos
stos
mov
das
cmp
lock
imul
push
adc
iret
aaa
popf
fld
mov
pop
sarl
mov
pop
inc
push
out
or
fsubrs
mov
ficompl
add
xchg
xchg
inc
mov
mov
filds
fimuls
lds
addl
jecxz
and
pop
pop
xor
add
mov
jbe
je
jge
jnp
sbb
les
mov
xor
xor
xchg
xchg
int3
fstpl
and
cs
cmp
xlat
scas
dec
or
insl
cmp
mov
inc
in
jle
cmpsb
testb
jb
sub
daa
arpl
cmp
xorl
jl
adc
ds
mov
lahf
fcmovne
scas
push
or
test
mov
cs
sub
cwtl
mov
js,pn
imul
sub
push
outsl
adc
arpl
inc
sub
scas
or
mov
je
in
xlat
adc
insl
loope
outsl
lds
rcrl
pop
push
adc
int
fisubrl
sub
push
jecxz
lods
jle
push
inc
cmp
sbb
cmc
pop
test
arpl
mov
pop
orb
cmp
mov
jne
mov
insl
xchg
adc
ret
bound
fdivrs
cmc
testl
jb
mov
adc
into
mov
inc
lock
jns
outsl
mov
pop
mov
fs
xchg
xor
lods
dec
xchg
push
mov
test
out
enter
mov
xor
ret
mov
test
adc
inc
sbb
dec
pop
inc
ja
adc
mov
adc
mov
mov
cmp
movsl
xlat
test
sub
clc
mov
sbb
out
imul
popa
pop
aad
clc
in
nop
les
dec
out
and
scas
fldz
mov
stos
idivb
pop
int3
lea
je
call
dec
aad
pop
jns
xchg
cmp
int
fistl
jle
pop
sahf
xchg
cmp
pop
filds
decl
mov
jmp
xchg
or
je
jmp
div
jmp
insb
adc
xchg
test
das
adc
xchg
mov
fsubs
lret
mov
add
mov
fistl
lock
mov
mov
fstl
ret
mov
jnp
mov
mov
dec
lea
cmpsl
bound
mov
mov
cld
imul
mov
cli
cmp
and
pop
or
jmp
aas
rcrb
icebp
rcl
xchg
cltd
ds
mov
push
cli
xchg
rcr
push
inc
clc
out
mov
ljmp
adc
stos
scas
and
xchg
mov
mov
pop
mov
setg
adc
cltd
pop
inc
lock
inc
xchg
mov
xchg
sbb
adc
fwait
mov
aas
ds
mov
push
call
xlat
xor
icebp
xchg
or
or
xchg
mov
mov
mov
push
pop
cli
ja
jmp
rolb
fiadds
or
mov
dec
sub
jne
push
insl
mov
mov
or
jns
push
lods
in
fucomip
cmpl
out
mov
or
addr16
jp
push
inc
mov
sub
mov
in
aam
pusha
sahf
sar
add
xchg
xor
cmc
jmp
push
pop
jae
leave
push
popf
shrb
mov
and
dec
stos
xor
and
mov
adc
je
scas
ucomiss
push
mov
cmpl
pop
or
aaa
arpl
jge
inc
adc
or
push
jmp
inc
or
fcmovbe
mov
push
pop
stos
dec
out
mov
jbe
flds
mov
rcrb
test
hlt
dec
xchg
mov
jbe
xchg
mov
sbb
adc
or
add
add
mov
mov
xor
xchg
rorl
sub
cmp
push
negb
movsb
cmp
inc
jl
sbb
pop
sar
enter
daa
leave
cmp
xor
fdivrs
cmpsb
cmp
xor
je
std
adc
and
push
lahf
cli
arpl
push
or
push
push
jge
cli
xor
mov
js
int
pop
aam
aad
out
cmpsb
fs
fcoms
sub
ret
adc
dec
mov
into
call
lahf
sbb
adc
add
mov
xor
mov
arpl
jle
adc
adc
mov
lret
lcall
adc
out
ss
xlat
pop
xchg
sahf
clc
lds
jno
addb
jg
sbb
lea
cmp
adc
out
ss
cmp
xor
testl
pusha
shl
xchg
mov
mov
into
pushf
lods
pushf
cmc
sarb
dec
mov
outsl
add
loop
iret
push
stc
inc
loope
fs
dec
sbb
xchg
pop
lods
xor
mov
push
jmp
inc
cli
in
cli
pop
out
icebp
xor
mov
sti
test
insl
gs
in
out
imul
pop
imul
and
lcall
addr16
insb
lock
xor
mov
jmp
cltd
mov
mov
dec
shll
loope
push
nop
lahf
pushf
iret
dec
inc
xchg
push
inc
and
stos
fld
mov
xchg
jecxz
sub
xchg
or
in
call
leave
xchg
xor
pusha
adc
xchg
in
pushf
mov
dec
pop
inc
and
or
aas
jge,pn
jb
or
je
int
sarl
jae
sub
lret
jns
cwtl
cmpb
push
sbb
mov
sbb
subl
sbb
mov
sub
comiss
push
mov
xchg
and
lock
inc
sahf
in
cmp
insl
dec
loopw
mov
popa
cmpsl
popa
xorl
rcrl
cld
xchg
je
mov
sbb
sbb
mov
mov
shlb
jne
ret
aam
sub
mov
push
mov
sbb
xchg
repz
ljmp
lods
inc
sti
jbe
popf
nop
inc
out
jns
rclb
ss
dec
paddd
sti
add
inc
cltd
xchg
or
cltd
pop
mov
xchg
fcmovnbe
test
mov
xchg
mov
sbb
loop
ror
cmpsb
lds
sub
lret
add
into
cwtl
mov
cmc
mov
xor
imul
push
adc
sbb
xor
pop
adc
ja
jge
dec
lcall
sbb
mov
repnz
jne
sub
out
icebp
test
jns
adc
in
push
flds
sti
add
cmpsl
fisttps
shll
jp
and
mov
out
mov
fcoml
jle
add
pusha
cmp
mov
xchg
pop
inc
shr
out
xchg
xor
xchg
and
dec
push
sbb
push
call
scas
stos
movsb
dec
xchg
insb
jg
insb
ds
scas
jb
fstl
testb
or
in
ret
mov
inc
neg
inc
mov
sub
inc
adc
pop
or
into
std
mov
fiaddl
sub
pop
fidivrl
ficoms
mov
shl
mov
mov
jecxz
inc
pushf
mov
xchg
lahf
cli
push
in
cmp
sub
jge
xchg
xchg
sbb
or
aaa
xor
or
sbb
add
out
icebp
int3
mov
mov
test
xor
lock
sbb
and
insb
pop
movsb
lds
inc
or
dec
in
inc
jbe
enter
daa
popa
sahf
or
fs
lods
jno
adcb
sub
lds
call
call
out
add
lahf
sbb
mov
fcompl
cmp
bswap
xor
xchg
push
into
jmp
js
ret
mov
adc
push
xchg
sbb
xchg
fildl
jns
les
xchg
lock
stos
sar
adc
and
sub
sti
mov
add
into
dec
and
dec
int
js
sub
cwtl
outsl
lcall
pop
fcompl
jmp
sahf
fwait
mov
dec
loopne
sbbb
jg
mov
push
mov
mov
mov
pusha
pop
adc
out
adc
cmp
out
in
testl
push
pop
sarl
mov
and
jg
out
xchg
outsl
popa
leave
mov
fnsave
std
out
outsl
fs
dec
iret
enter
lods
sbb
cmpsl
mov
sub
cli
nop
add
xor
repnz
imul
rcl
es
fchs
push
mov
pop
xorl
subb
test
ljmp
das
roll
sbb
outsb
dec
xlat
add
mov
repz
stos
ss
adc
daa
js
jp
adc
cmp
inc
cmp
or
jecxz
jbe
xchg
int
filds
call
dec
ficoms
pop
fildll
and
jmp
xchg
pushf
fs
jno
into
pop
in
or
xorl
int
push
jb
aas
inc
dec
xor
je
push
test
imulb
ss
pop
push
cwtl
cmp
adc
mov
mov
add
lret
mov
ret
mov
jecxz
lock
enter
pop
lret
mov
dec
pop
out
and
jle
ret
shlb
es
sub
lcall
std
adc
outsl
cld
shr
mov
inc
inc
inc
and
dec
cmp
sub
rolb
add
mov
or
mov
outsb
xlat
push
sbbb
fnsave
sar
ss
ljmp
int
scas
jbe
stos
mov
mov
xchg
sbb
out
minps
mov
test
and
sbb
push
xchg
pop
enter
add
mov
push
insl
enter
pop
cltd
add
cmp
call
outsl
or
push
xor
pusha
pop
dec
mov
int3
jo
ja
xchg
sbb
notb
or
jecxz
mov
jb
icebp
stos
test
imul
aam
and
rorb
cmpsl
jns
je
in
mov
in
out
in
je
mov
or
jg
rcrb
xchg
clc
lcall
nop
xchg
jle
cmp
cmc
pusha
aam
and
adc
call
jmp
in
jae
test
cmc
popf
push
push
pop
mov
mov
add
insb
test
hlt
xchg
scas
aad
call
jno
adc
or
iret
push
nop
push
rcrl
js
and
aam
adc
dec
inc
pop
stc
or
dec
movsb
sub
rol
fidivrl
push
xlat
xchg
xchg
shll
pop
or
fidivs
sub
rorb
repnz
fsubrl
jecxz
mov
add
xor
jo
xchg
xor
jge
testl
repnz
or
loop
add
push
xlat
int3
sahf
add
push
mov
inc
xor
dec
and
scas
call
movsb
push
fmuls
cmpsb
jg
or
enter
daa
pusha
mull
cmp
psraw
mov
shlb
movsl
or
setg
cmpsb
ljmp
sub
push
adc
xor
scas
loope
pop
dec
je
js
dec
rclb
push
fcoms
loope
add
test
inc
outsb
push
ror
adc
and
andb
sbb
fiaddl
cmp
les
push
mov
sahf
fldt
or
pop
enter
push
dec
arpl
faddl
sbb
inc
push
xorb
jg
pusha
and
push
mov
enter
jbe
cmp
add
cmp
test
adc
lret
iret
rcll
in
jns
sbb
stos
dec
addr16
stc
fprem1
dec
sbb
cmp
aad
loop
dec
add
mov
push
fs
in
add
xchg
insl
data16
add
mov
scas
out
ljmp
incl
mov
loop
cmp
ja
gs
cmpsl
fwait
pop
mov
cli
jge
rorb
ss
mov
repz
mov
repnz
imul
inc
cmpsl
popf
sub
jge
mov
pop
xchg
jmp
scas
adc
xchg
nop
push
cmp
dec
add
and
fsts
aaa
xchg
jecxz
push
or
cwtl
add
call
test
pop
xchg
stos
fists
inc
xor
repnz
pop
inc
push
scas
movsl
inc
sbb
inc
test
dec
stc
pop
je
xchg
ja
fidivl
sbb
mov
sub
mov
cmpsl
adc
mov
stos
movb
test
and
jg
mov
std
iret
lock
add
das
fsubrs
mov
add
sub
xchg
popa
mov
insl
sbb
dec
jle
add
xor
icebp
adc
xchg
cld
in
xor
mov
arpl
movsb
and
call
pop
push
sbb
mov
and
clc
inc
mov
push
inc
or
mov
xchg
jno
or
or
cmpl
jnp
mov
aas
push
cli
xchg
popa
iret
movmskps
adc
mov
cltd
add
push
mov
mov
shrb
pop
mov
lahf
xchg
ja
cmp
rcrb
adc
xor
add
mov
xor
jg
sti
mov
mov
repnz
xchg
mov
mov
ja
mov
xchg
mov
and
push
dec
in
jne
pop
sub
out
dec
sub
loope
pop
dec
aam
shll
xchg
mov
inc
pop
out
scas
pushf
sbb
jns
jns
in
jg
andl
bound
pop
in
movsb
addr16
mov
mov
mov
fdivrs
xchg
stos
jle
outsb
fsub
xor
sub
xchg
lods
push
add
int
jmp
lret
cld
mov
add
int
aam
jmp
inc
mov
sub
frstor
stos
and
jecxz
imul
scas
cmp
cmpsl
push
xchg
push
ret
adc
jo
iret
mov
js
aam
fs
scas
lds
inc
rcl
and
inc
sbb
aaa
or
fsubrp
inc
xchg
and
gs
pop
cmp
pop
lods
lds
rol
sub
adc
das
mov
leave
xor
fxtract
sub
ret
push
cmpb
jge
cmp
push
rcr
aaa
mov
inc
or
pop
movl
mov
inc
dec
fucom
decl
insl
or
jo
push
scas
xor
cmp
lods
movsb
fisttpl
fwait
cmpsb
add
nop
in
push
insb
arpl
jnp
pop
daa
pop
aam
cmp
mov
jl
jmp
fistpll
cmc
sarb
adc
and
mov
lahf
push
dec
adcb
push
test
fidivrs
adc
jb
movsb
mov
pop
outsl
ja
js
insb
and
xchg
lds
inc
test
mov
popf
pop
sub
dec
outsb
jno
scas
adc
jmp
cmc
cmpb
sbb
test
inc
mov
int
cmpsl
cltd
sub
out
sbb
mov
push
or
fs
out
loope
test
pop
adcb
shll
das
enter
aam
mov
mov
inc
adc
fsubs
testl
ja
mov
or
cmp
cmc
adc
das
shrl
cmp
add
imul
fisubrs
add
stc
inc
mov
mov
clc
xlat
out
test
cli
testb
inc
js
lods
addr16
xchg
sbb
popf
and
gs
jge
cmp
mov
call
xchg
mov
imul
subb
add
mov
add
in
test
sub
mov
leave
mov
jmp
jbe
cs
nop
xor
lahf
inc
pop
mov
xlat
dec
sbb
cmpsb
fisubrl
lea
xchg
pop
movl
jle
cltd
adc
pushf
mov
push
or
sub
flds
movsb
adc
or
sbb
dec
loopne
jo
mov
shrl
push
and
std
testl
mov
mov
cli
add
xor
decb
pop
lret
xchg
or
mov
mov
lock
push
inc
das
mov
inc
mov
mov
in
ret
lock
es
call
cmp
xor
cmpsl
pop
aam
mov
jmp
jbe
pop
push
xor
xchg
sub
cmpl
shr
test
sbb
mov
cmp
fldl
jb
xchg
mov
mov
popa
lret
pusha
lcall
outsl
gs
mov
jns
push
or
add
cmp
test
inc
mov
mov
and
xchg
push
ficomps
and
mov
sbb
add
shll
dec
push
or
cmc
xor
call
ss
dec
aam
das
pop
dec
pop
inc
adc
loopne
xchg
dec
xlat
lret
testb
push
sbb
dec
mov
leave
jne
sbb
out
mov
icebp
jns
and
in
mov
xorl
sub
pop
jmp
sub
lea
inc
insb
cwtl
mov
jmp
xchg
in
aaa
push
jmp
or
xor
xchg
xchg
sbb
jae
cwtl
mov
popf
insb
iret
cli
mov
and
fsubl
mov
inc
insb
jg
imul
scas
fwait
daa
add
adc
icebp
fld
out
lcall
and
arpl
mov
xchg
or
aas
lods
xchg
inc
push
jo
ficompl
nop
pop
sbb
inc
adc
scas
inc
fidivrs
loop
loopne
dec
rolb
mov
subb
stos
dec
nop
hlt
ja
xchg
push
roll
shll
or
imul
aaa
jo
or
mov
cld
cmpb
je
outsb
dec
dec
and
xorl
lds
and
and
adc
xchg
pop
inc
mov
out
or
cmc
mov
jo
pop
xor
pop
jno
xchg
add
add
cmc
ja
sbb
insb
movsl
sbb
xor
lahf
jbe
push
push
loopne
test
test
fnstcw
pop
xchg
pop
repz
push
xor
shlb
mov
loope
mov
push
sub
data16
aam
rclb
mov
adc
mov
mov
add
or
and
sub
mov
xchg
shrl
aas
push
pop
pusha
xor
cli
xor
xchg
sub
sahf
test
out
lods
dec
xchg
jg
mov
mov
adc
mov
js
mov
ret
add
and
cmp
pop
push
daa
idivl
push
cltd
lret
ffree
inc
imul
dec
cltd
arpl
mov
cli
into
sub
je
mov
clc
xchg
popf
pop
stc
and
jmp
add
icebp
pop
data16
adc
pop
mov
mov
pop
cli
sub
lods
pop
sbb
and
sti
inc
inc
or
cmp
adc
xlat
les
adc
jns
rcrb
repz
jl
add
cmp
adc
xlat
mov
mov
mov
xor
pop
jmp
add
dec
pop
out
std
pop
lods
nop
or
inc
jno
ret
aam
loop
xchg
jecxz
repnz
sahf
lds
adc
push
call
pop
clc
cs
adc
repz
ss
xor
inc
push
aas
jle
stos
pop
cwtl
jb
sbb
adc
inc
sarl
xchg
idivb
xchg
or
pop
cwtl
outsb
daa
cmc
mov
cvtpi2ps
movl
inc
mov
mov
scas
mov
xchg
mov
jo
sti
and
xchg
repz
jg
mov
inc
push
adc
sbb
dec
je
shlb
adc
icebp
ret
cld
inc
inc
nop
mov
test
shrl
xchg
xor
xchg
mov
aam
stos
add
leave
dec
dec
outsl
les
repz
popa
loop
loopne
out
loopne
stos
pop
in
test
xchg
out
xchg
mov
add
lds
mov
mov
add
test
xor
add
std
pushf
shll
cmp
stos
lcall
push
cmp
add
cmp
push
xor
stc
shlb
xor
xchg
sub
and
cs
std
rcrb
lahf
hlt
inc
es
lea
lahf
or
pushf
mov
push
bnd
adc
mov
add
xor
outsb
jnp
cs
addl
out
push
rorl
push
jns
addr16
sbb
mov
cwtl
loope
jle
lods
iret
in
imul
insl
cmpl
sub
jmp
popa
nop
mov
push
pop
jne
popf
xchg
loope
mov
pop
add
jo
fs
iret
cld
insb
ljmp
scas
incb
dec
push
and
rclb
jns
jecxz
jno
jg
cli
cmpsb
mov
sbb
movsb
arpl
pop
push
or
mov
add
ficoml
dec
xchg
fwait
movsb
int3
sbb
cmpsb
rcrb
lock
push
imul
mov
aad
sahf
leave
and
xchg
hlt
ret
push
and
sub
sbb
jecxz
aaa
das
ret
out
jecxz
xchg
push
mov
dec
mov
adc
xor
pop
xor
and
cmp
movsb
icebp
out
clc
inc
inc
adc
in
fdiv
push
enter
daa
pop
sbb
jno
lea
fmul
lods
cmp
movsl
and
lods
and
lahf
xchg
cmpsl
mov
je
test
je
xor
mov
test
sub
pop
mov
fs
cvttps2pi
loope
dec
pop
sub
mov
outsb
aaa
mov
xchg
xor
rorb
aad
sbbb
rolb
outsb
dec
and
xor
int
data16
sub
iret
pop
inc
push
bound
push
iret
test
inc
pusha
sub
ret
sahf
daa
and
mov
jg
arpl
mov
xor
mov
cmp
fimull
idiv
aaa
push
lret
xlat
rcr
sbb
arpl
into
or
xor
adc
add
adc
loop
adc
fs
jp
add
pop
lcall
sbb
cli
pop
popa
cli
xor
insl
sti
out
das
in
jecxz
imul
icebp
push
pop
std
rcr
mov
dec
adc
imul
xchg
cmp
mov
pop
jge
xlat
sub
mov
lahf
lea
mov
jo
inc
xor
nop
out
scas
dec
and
inc
test
or
in
insb
test
les
mov
or
ja
jp
inc
and
adc
or
fldt
xor
stos
mov
inc
outsb
out
fistpll
dec
or
jb
and
dec
pop
jno
je
das
mov
idivb
cs
mov
std
cwtl
sub
aas
mov
push
and
pop
data16
mov
mov
ds
mov
loopne
jne
fbld
daa
movsb
jne
aaa
pushf
add
push
insl
aad
lret
insl
rolb
dec
outsl
push
jecxz
pop
sahf
aaa
mov
cltd
xlat
ss
insl
or
mov
int3
iret
insl
and
mov
loopne
rclb
push
or
mov
sbb
mov
sar
dec
call
xchg
fdivrs
ljmp
sti
lods
pop
lods
sub
dec
sub
jmp
ss
out
jge
dec
psubusw
ret
mov
test
pusha
mov
ret
dec
mov
addr16
inc
xchg
sbb
stos
sub
das
dec
push
stc
dec
cli
add
push
xchg
fcos
adc
xor
pop
push
or
xor
into
sbb
insb
push
xor
pop
mov
sbb
dec
mov
mov
and
dec
jge
push
xchg
mov
or
dec
fidivs
jae
add
pop
aad
mov
mov
out
and
sub
mov
movsb
pop
jp
push
jge
out
outsl
mov
jnp
das
mov
mov
push
pusha
inc
out
fisttps
out
mov
push
xchg
sub
pop
jae
cwtl
repz
sbb
xlat
adc
sahf
fisubrl
jecxz
jno
fistpll
xor
and
push
scas
popa
fsubl
adc
iret
shlb
ret
stos
pop
push
leave
loope
repz
dec
jbe
inc
and
or
xor
sbb
mov
data16
pop
faddp
xor
jg
jnp
aam
sbb
in
sub
cltd
stc
push
hlt
or
push
xorb
cmpl
lret
pop
aaa
out
or
sub
dec
jne
dec
sub
jbe
push
push
outsl
xor
mov
test
js
xchg
cmp
sahf
mov
cmpsb
mov
enter
daa
pop
andl
arpl
mov
cmp
scas
ds
rol
movsl
daa
cmp
out
lahf
mov
out
sti
cmp
adc
aas
xchg
jge
cmp
lods
pop
in
lea
cmp
dec
movsl
ret
mov
loope
pop
insb
sub
inc
push
sub
scas
outsb
lcall
shrb
xorb
cmp
push
sub
and
fildl
les
jnp
hlt
bound
lcall
sbb
icebp
in
sahf
lret
test
in
and
xchg
pop
mov
popf
cmp
mov
cmc
aam
sar
adc
lcall
xchg
fdiv
idivl
push
push
mov
lahf
sub
cmc
push
push
xor
sbb
sub
loop
mov
jns
jg
test
sbb
data16
mov
lods
popf
pop
bound
cmp
push
cli
cli
sub
pop
inc
xchg
cmp
sbb
incb
fadd
gs
sub
loopne
xor
adc
push
imul
repz
adc
dec
sub
cmp
clc
sub
and
jmp
data16
adc
daa
aad
jno
nop
shrl
add
inc
xchg
mov
sbb
jecxz
out
adc
movsb
pop
sbb
repnz
mov
mov
adc
cmpsl
fistpl
pop
adc
inc
xor
inc
mov
jb
push
pusha
pop
dec
aad
imul
pop
idivb
jns
cwtl
in
push
mov
mov
outsb
xor
adc
mov
jnp
mov
dec
int3
lock
adc
mov
ret
ret
popf
xchg
ljmp
dec
test
push
sbb
mov
jo
hlt
cld
cwtl
movsl
mov
out
xchg
mov
push
lea
shlb
sub
enter
mov
test
and
xchg
insl
xchg
and
fsts
pop
lods
lds
stos
aaa
xor
xchg
jge
push
push
pop
pop
lret
mov
mov
xor
ja
push
xchg
and
dec
sbb
subl
imul
sarl
pop
cmovnp
pushf
dec
dec
add
jo
das
ljmp
cmpsl
leave
or
sbb
lret
mov
or
and
sbb
jae
push
sbb
dec
push
inc
mov
cmp
mov
xor
jne
cmpsb
mov
adc
out
sub
jno
push
test
jns
hlt
push
in
inc
inc
andl
out
push
push
sub
dec
push
sahf
addr16
dec
jecxz
cmpsl
mov
jnp
inc
jle
sbb
lock
fstpt
sbb
stc
sarl
test
jae
jae
push
push
loopne
mov
mov
fnsave
out
push
or
insb
sarb
adc
loopne
les
adc
enter
and
and
sbb
mov
lods
inc
inc
xor
pop
mov
xor
mov
jmp
cmpl
xchg
dec
cmp
sbb
out
pop
hlt
sarb
adc
jne
adc
xchg
mov
ja
jnp
cwtl
leave
adc
cmp
pop
fyl2x
push
mov
cmp
inc
fcomps
inc
inc
inc
aaa
lods
xlat
stc
or
pop
scas
add
pop
cmc
int3
xor
test
push
stc
in
fidivs
adc
inc
xchg
ret
and
es
cmp
movsb
pop
mov
jnp
push
mov
js
addr16
daa
pop
jo
cmp
jmp
jl
add
adcl
dec
and
adc
into
aaa
subl
dec
repz
inc
mov
xor
or
and
push
push
fndisi(8087
loope
loop
sub
lret
das
fidivrs
adc
inc
js
addr16
inc
add
sbb
push
add
ss
and
or
and
dec
mov
sub
sbb
inc
int
lcall
repnz
push
jne
insl
sub
cmp
mov
into
sub
mov
push
mov
sbb
adc
lods
xlat
ss
add
cmp
push
std
in
jl
jae
sub
mov
mov
or
shll
xor
cmp
leave
and
outsl
fwait
dec
jb
dec
lcall
or
pop
add
jbe
lods
test
mov
mov
cmp
lret
cli
ret
xor
xchg
push
cmp
push
sar
dec
push
mov
sub
gs
mov
fistpl
enter
sahf
dec
imul
mov
xchg
rcrl
cmp
cvttps2pi
jl
bound
adc
jns
add
or
mov
mov
aad
adc
pushf
sub
filds
mov
les
fbstp
loop
daa
cmpsl
shll
call
inc
pop
rcrl
mov
adc
hlt
lret
pushf
data16
pop
mov
sbb
or
mov
xchg
mov
movsl
iret
clc
dec
dec
or
je
cmp
testb
test
add
in
cwtl
lahf
mov
test
orl
test
add
lock
in
mov
xchg
pop
mov
ret
sub
jecxz
rorb
insl
sahf
cmp
cmpsl
pop
js
mov
inc
pop
das
cld
ret
adc
mov
adc
mov
sbb
jecxz
and
sub
aas
adc
aaa
pop
mov
adc
gs
mov
rclb
dec
nop
or
cmp
das
stos
es
inc
out
cs
mov
xor
add
mov
loopne
out
lahf
mov
enter
xor
test
and
push
repz
sub
pop
jno
pop
fwait
aaa
fstps
push
aas
inc
lret
add
mov
in
lcall
xor
add
or
lret
pop
mov
ja
idiv
dec
mov
jnp
or
lret
or
aaa
dec
inc
xchg
or
pop
and
or
bound
sub
popl
nop
divb
clc
orb
mov
icebp
sbb
outsb
add
jnp
push
cmpb
ret
or
pusha
jbe
jns
lret
xchg
int3
jbe
jmp
ret
jae
test
push
mov
jo
mov
sbb
scas
stos
leave
repz
or
movsl
cmp
aam
scas
daa
popa
pop
push
testb
iret
mov
push
pop
ret
inc
or
pop
arpl
push
or
sub
lods
fisubrl
pop
xchg
mov
ret
imul
jge
pop
test
faddp
mov
add
into
pop
gs
xchg
hlt
mov
mov
jbe
lock
push
aaa
insb
sub
or
pop
lods
add
cmpsl
cmp
xlat
sbb
fadd
mov
insl
imulb
and
jle
icebp
movsb
shll
jno
cmpsb
xchg
cmp
xchg
call
xchg
daa
pop
loope
cmp
cmpsl
push
jno
push
jl
fimull
movsb
inc
push
movsl
xor
sbb
lahf
repnz
jmp
mov
daa
aaa
push
aad
inc
xor
sub
aam
xor
cmp
scas
insl
pop
int3
and
push
mov
loope
loope
sub
sub
pusha
fidivs
shlb
lds
pop
xchg
stos
sbb
nopl
cwtl
push
and
scas
out
mov
push
sub
aad
pop
ret
lcall
inc
faddl
sbb
sahf
adc
iret
sbbb
and
mov
xor
dec
mov
xchg
ss
loop
cmp
or
mov
sbb
aam
popf
mov
push
or
into
mov
shl
clc
push
xor
aam
outsl
jp
stos
loop
stos
clc
stc
incb
fs
add
add
fcoms
data16
iret
lods
imul
rcrl
cli
cmc
dec
xor
lcall
sti
cld
mov
decb
gs
mov
loopne
out
add
inc
arpl
mov
ret
imul
and
sbb
or
aad
mov
mov
mov
loopne
push
jns
icebp
fnstcw
aad
sbb
nop
ja
sub
inc
xor
mov
mov
les
xchg
test
icebp
cli
repz
stos
mov
lahf
call
sarl
pop
les
adc
pushf
adc
xchg
pop
pop
fisttpll
inc
mov
repnz
dec
ret
dec
push
je
rcl
mov
div
inc
mov
sbb
dec
inc
sbb
and
dec
push
sbb
lret
mov
xor
mov
lret
mov
sbb
inc
das
adc
add
dec
shll
fsubs
es
test
push
inc
dec
pusha
rcrl
mov
push
rcrb
out
push
mov
xor
test
jle
add
sub
imul
push
in
push
aad
inc
je
clc
stc
daa
outsb
xchg
jmp
int
mov
into
stos
lods
fwait
push
stos
adc
mulb
or
mov
divb
jb
dec
pop
aad
icebp
mov
mov
lret
inc
lds
data16
add
sbb
push
dec
roll
xor
jns
loop
cmpsl
add
cmpsb
jmp
push
xor
rcrl
ror
xor
sahf
rcll
xor
insl
nop
pop
jmp
stos
cltd
dec
xchg
sub
or
sub
mov
xor
in
jne
out
mov
jae
out
jmp
test
jns
or
cmpl
out
push
test
or
adcl
mov
subl
push
mov
jle
cltd
sbb
pop
mov
pusha
adc
adc
xchg
out
jmp
lea
sub
data16
mov
pop
jnp
stos
cmp
pushf
and
sub
repnz
cmp
push
cmp
imul
inc
aaa
and
nop
roll
arpl
imul
decb
push
cmpl
xchg
negl
sbb
jne
pop
push
mov
jle
subl
int3
nop
or
cmc
xchg
add
leave
incb
hlt
out
loope
push
pop
dec
add
and
rcrb
mov
std
aam
mov
test
out
repz
int3
or
dec
ja
push
push
mov
push
jo
mov
scas
add
repz
jecxz
cmp
movsl
roll
les
adc
push
in
js
push
enter
daa
pop
sahf
cmp
das
outsb
jno
fnstcw
cmp
xor
imul
fcom
sbb
je
mov
sub
ss
pop
pop
ds
js
inc
outsl
pop
or
cmp
stc
cmp
dec
sub
pop
fwait
sub
mov
adc
sti
and
mov
out
faddl
dec
andl
int
arpl
sbb
insl
mov
lcall
lock
add
sbb
lock
mov
out
test
xor
or
mov
ljmp
jl
es
dec
adc
xor
cmp
cli
inc
idiv
imulb
shll
mov
int3
adc
mov
stos
into
xchg
or
xor
xchg
cwtl
and
jne
pop
stc
mov
outsl
and
mov
lods
push
ljmp
cmp
push
cli
sub
aam
loopne
jmp
sti
stos
xchg
outsl
sub
loopne
imul
mov
xchg
lret
imul
jmpw
daa
push
sbb
inc
repnz
xlat
cli
pop
addr16
add
mov
dec
das
sub
push
and
nop
nop
push
loope
dec
popf
or
lret
xchg
loop
sbb
gs
lods
sbb
and
arpl
jb
inc
mov
sub
mov
popf
scas
fucomi
adc
pop
cld
stc
inc
iret
adc
aas
jb
dec
jb
cmp
xor
roll
lods
imul
sub
std
dec
call
adc
pop
cmp
mov
flds
mov
mov
xor
icebp
xor
add
cmpsl
and
cli
push
ret
dec
cmpsl
cmp
insl
insb
pop
loop
cmpsl
pop
bound
mov
cmc
push
cld
sbb
aaa
mov
mov
rcr
mov
and
mov
sub
add
test
in
mov
add
push
cwtl
pop
jp
insb
inc
scas
clc
xor
addr16
sub
je
xor
jnp
push
and
out
hlt
popf
mov
jmp
add
cmc
mov
cltd
sub
test
call
incl
push
mov
push
xchg
jo
rcr
rclb
pop
movl
adc
shrl
xor
nop
or
sbb
xor
mov
mov
divl
sbb
dec
ja
jecxz
dec
mov
adc
or
or
out
ljmp
jne
lock
inc
push
out
enter
mov
mov
in
les
out
cltd
call
or
cmc
into
addr16
pop
lds
add
jo
xorl
pusha
lods
xchg
xor
or
xchg
jb
mov
mov
stc
xchg
pop
mov
adcb
xchg
xchg
arpl
push
lcall
and
fidivrs
insb
add
gs
lock
in
mov
push
test
adc
pop
add
dec
jae
ret
sbb
ljmp
push
xchg
sbb
or
and
sub
rcl
rcll
adc
push
pop
xorl
ljmp
adc
bnd
leave
jne
pop
hlt
cmp
movsb
push
stos
and
test
sbb
shlb
ljmp
add
sub
dec
out
outsl
push
mov
jno
jo
xchg
les
movsb
test
xchg
inc
adc
cmpsb
xchg
xchg
jg
pop
push
or
pop
dec
les
das
insb
mov
test
jl
push
aam
andps
ljmp
and
pop
lahf
xor
push
inc
arpl
in
fwait
inc
push
imul
mov
xchg
sbb
cmpb
shrb
pop
dec
mov
push
jge
loope
dec
out
sub
pop
call
outsb
es
enter
lock
dec
sbb
in
cmpsl
add
pop
and
sti
int
sub
cwtl
and
lcall
pop
fcompl
ret
sahf
push
pop
call
orb
jg
or
stos
mov
sahf
pop
mov
popa
notb
fbld
shlb
sbb
sub
adc
dec
lret
mov
mov
in
pop
or
xor
cmc
xchg
aaa
xor
outsb
push
outsl
cmp
loop
imul
insb
dec
mov
sub
push
arpl
data16
pop
lods
cmp
out
dec
dec
cli
pop
addr16
xor
testl
xchg
adcb
jns
sbbl
jno
imul
mov
sbb
cmp
mov
sub
pushf
mov
mov
cld
jmp
pop
adc
lahf
ret
aad
dec
add
cld
fld
inc
jecxz
mov
dec
push
enter
jnp
movhps
icebp
add
fsubp
insb
mov
stc
sub
cli
pop
jecxz
lea
fistpl
mov
inc
dec
sbb
cmc
test
fs
jb
push
jb
mov
inc
je
les
test
xlat
std
div
adc
leave
repz
push
gs
in
insl
or
popf
push
pop
fldt
shlb
shlb
mov
mov
jg
pop
push
lret
insl
push
pusha
aaa
dec
push
test
mov
int3
sub
cld
inc
push
push
mov
jnp
fisubs
shrb
inc
adc
shlb
aas
mov
mov
imul
fstl
jl
xchg
imul
push
lods
jno
lods
stos
repz
mov
xchg
cltd
adc
push
fsubr
lfs
add
add
cltd
mov
popf
bound
shll
add
icebp
outsb
test
inc
popf
xchg
jae
sbb
cmp
icebp
pop
jb
push
fwait
les
fistpl
sub
xor
add
test
ljmp
xchg
cmc
xor
or
xor
int
xchg
push
jae
mov
leave
pop
mov
pop
std
cmpsl
ja
lahf
rorb
xor
sub
pop
inc
jbe
in
arpl
pop
and
out
cmpsl
fwait
bound
jp
dec
scas
lcall
nop
loopne
sbb
xchg
or
or
mov
out
xchg
das
jle,pt
inc
jo
push
lods
inc
fbld
insb
ficoml
test
add
cmp
and
sahf
loopne
push
fxch
xor
push
subb
iret
cltd
xchg
scas
push
dec
cmp
adc
inc
jbe
insb
aaa
inc
pop
addr16
push
arpl
cmpsl
and
pushf
addb
orl
adc
pop
mov
imul
jp
lds
mov
mov
cs
leave
in
pop
push
hlt
test
inc
push
cli
inc
sub
in
jmp
jge
and
cs
jmp
test
xchg
push
add
cmpsl
fwait
dec
push
push
push
test
xor
jle
fldcw
push
jo
cmp
mov
rolb
xor
out
in
inc
jecxz
enter
daa
push
dec
mov
jno
push
sarl
cmp
xchg
test
push
jle
lahf
dec
push
push
push
sbb
mov
push
ss
sbb
mov
mov
mov
mov
jae
ja
dec
sub
cmp
jmp
outsb
mov
mov
shlb
jne
adcb
push
sbb
movsb
add
mov
and
adc
int
add
pop
aas
jmp
lcall
faddl
sbb
fsub
mov
xchg
lods
jecxz
imul
xorb
arpl
aaa
int
adc
shrl
cmp
cmp
in
idivl
jl
cmc
adc
shll
mov
mov
cmc
dec
mov
into
outsl
pop
hlt
mov
fwait
sbb
stc
and
inc
add
mov
pop
movsb
subb
pop
and
sub
cli
mov
cmp
xor
mov
xchg
gs
icebp
out
adc
cmp
rol
adc
lret
sbbl
repz
xchg
int
xchg
sbb
mov
aaa
sub
adc
in
and
jmp
inc
add
aad
jg
nop
or
test
stos
fldl
mov
flds
mov
jecxz
or
mov
loopne
in
mov
ds
cmp
adc
lret
pushf
adc
fildl
rcrb
lahf
inc
aad
outsl
inc
adc
divl
xchg
xor
sub
std
je
inc
stos
shll
sbb
popf
int3
mov
mov
adc
xchg
or
sub
daa
lret
or
cmp
jbe
icebp
mov
jns
lock
stos
mov
jno
mov
ret
push
in
outsb
insl
cmp
imul
pop
sarl
mov
adc
mov
sahf
mov
and
pop
aad
pop
pop
pop
lock
roll
sbb
push
mov
adc
push
push
icebp
xchg
fnstsw
test
xchg
test
adc
sbb
lcall
cmp
mov
fildl
lahf
outsl
jno
adc
dec
cltd
lock
cmpsl
test
movsl
mov
aam
sbb
or
pusha
xchg
inc
sbb
mov
mov
sbb
cmc
mov
add
div
or
lret
xor
sbb
or
mov
mov
push
inc
in
cmp
xlat
pop
sbb
dec
dec
outsl
cmp
inc
scas
test
decl
iret
xchg
dec
jne
loopne
mov
pop
scas
out
xchg
xor
loop
jns
ja
in
adc
hlt
out
or
sub
xor
stos
jp
xchg
stc
mov
fisubl
mov
popa
adc
shl
outsl
or
loop
adc
inc
jbe
xchg
sbb
jno
jl
jl
out
ljmp
scas
xchg
mov
imul
imul
or
mov
inc
iret
or
ret
fcompl
sbb
inc
xor
fiaddl
test
jg
pop
icebp
cmp
sbbl
cld
and
sbb
adcb
fildll
jg
xchg
push
lds
push
dec
mov
sbb
stos
hlt
iret
in
push
dec
mov
and
into
jo
jmp
xchg
hlt
or
cmp
dec
enter
mov
imul
push
and
test
movsb
mov
push
and
sub
scas
lods
daa
push
int
cmp
dec
jle
add
mov
sub
test
loope
push
in
cs
ficompl
lods
xor
adc
pop
into
cmpsl
sarb
adcb
push
and
sbb
adc
jae
fcmovu
jb
in
dec
mov
test
xor
mov
popl
fwait
andb
sbb
adc
push
jae
int
adc
pop
mov
roll
mov
inc
fdiv
cs
sbb
ss
sahf
pushf
in
test
push
data16
mov
cmp
loope
mov
sub
mov
adc
fdiv
dec
outsl
divl
lock
inc
sar
pushf
mov
sbb
cmc
adc
inc
xor
daa
pop
loop
cli
sub
fcmovu
or
mov
je
cmp
sub
lods
mov
inc
cli
rcll
gs
aas
cmp
fiadds
mov
or
gs
gs
pop
xchg
pop
xchg
adc
push
shrb
xchg
aam
push
ljmp
nop
popa
negb
negl
fsubrs
dec
cmpsb
cmpsl
mov
mov
int
fdivl
jecxz
jl
mov
and
mov
mov
stc
mov
inc
lea
call
mov
push
xchg
test
mov
mov
enter
sbb
inc
pop
fidivs
aas
mov
or
dec
lahf
mov
je
sbb
shl
insl
mov
std
inc
mov
cwtl
inc
inc
push
inc
mov
mov
cli
dec
ret
lret
jnp
rorl
out
lock
mov
sub
je
add
clc
ret
negl
es
negl
dec
dec
xchg
cmpsl
push
lahf
sub
jp
or
lcall
mov
aad
xchg
jle
rcl
inc
fldcw
push
out
aam
jno
mov
pushl
push
loope
ja
loope
xor
in
inc
xchg
out
in
ljmp
leave
lods
inc
insb
test
out
sbb
or
push
jp
outsb
pslld
add
cmp
test
add
xchg
out
enter
mov
xchg
xchg
test
popf
bnd
data16
push
push
outsb
popa
js
fimuls
inc
ljmp
cmp
cmp
out
xor
dec
int
movsb
pop
xchg
mov
es
push
in
cli
pop
aad
lcall
push
filds
dec
hlt
or
cld
and
mov
xor
clc
cli
inc
mov
and
out
add
js
mov
in
in
cmp
cmpl
mov
or
leave
fbld
int3
inc
jp
rcrl
shr
lret
pushf
push
jnp
mov
xchg
in
inc
xchg
pusha
jge
dec
fbld
notl
jae
rclb
cmc
adcl
jnp
popf
lret
andb
push
xor
stos
or
and
sbb
imul
ds
pop
test
adc
iret
imul
or
cmp
inc
arpl
pop
stc
or
xchg
repz
cmp
fucompp
pop
xlat
xchg
push
push
mov
pop
push
xchg
scas
fidivs
jbe
lds
sub
add
leave
leave
hlt
sbb
cmp
cwtl
dec
or
sbbb
sbb
xchg
sbb
or
jg
daa
add
fxch
mov
adc
out
cmp
xor
xor
xchg
scas
jge
sub
jge
xlat
cmp
addl
cmp
and
aaa
enter
daa
push
rorb
enter
mov
cmp
xchg
ds
mov
inc
jns
lahf
lea
xchg
test
int3
push
test
sub
outsb
inc
push
lock
cmc
xchg
sbb
andl
pop
data16
lds
loope
clc
or
pop
test
dec
leave
xchg
adc
addr16
mov
dec
negb
ret
pop
out
add
outsb
in
and
and
int
add
sub
add
cmp
push
and
lret
popf
in
sbb
dec
rcrb
mov
fstps
mov
xor
mov
lahf
bound
int3
std
inc
ss
dec
cmp
mov
push
div
cmc
addr16
aas
rcll
test
outsl
scas
stos
into
and
xor
fucomi
xor
jmp
outsb
outsl
aad
sub
rorl
stc
xchg
cwtl
dec
fs
iret
sub
add
xchg
test
mov
cli
hlt
ficompl
cmp
cmc
cmp
push
sti
addr16
test
jp
js
dec
adc
in
movsb
adc
pop
shrb
ja
adc
sub
repz
pop
xchg
push
mov
sbb
xor
cmpsl
sub
out
cmp
notl
mov
cs
jl
nop
mov
push
gs
sbb
adc
les
jecxz,pt
mov
popa
lea
mov
inc
nop
cmp
pushf
push
mov
pop
mov
xchg
inc
inc
aaa
sub
inc
sbb
mov
je
inc
adc
xchg
jo
std
jmp
mov
mov
fdivrl
adc
dec
lods
and
lret
ljmp
mov
loopne
lock
cmpsb
das
insl
call
mov
cwtl
jno
xchg
fisubl
loop
mov
mov
inc
out
cmpsl
push
adc
push
ds
cld
lds
mov
in
push
and
xchg
in
pop
popf
stc
dec
shrb
nop
imul
mov
loop
adc
in
movsb
pop
ja
or
clc
and
xchg
and
popa
mov
dec
lods
mov
add
rol
out
add
xchg
outsb
pushf
add
rcll
add
pop
cltd
pop
sbb
sub
or
dec
in
out
and
jl
lcall
ss
pop
jae
rcrl
adc
add
sub
jp
xor
push
xchg
repz
mov
cmpb
mov
mov
jmp
cmpsl
dec
push
push
int
fcompl
xor
mov
leave
in
jne
jns
mov
ds
cmp
in
jns
cmc
shl
adc
jns
mov
cmpsb
mov
addr16
jb
push
mov
in
mov
mov
jae
in
ficomps
test
shr
add
jae
notb
xor
cwtl
sarl
xchg
sub
stos
jnp
sub
xchg
ds
insb
lods
jnp
imul
push
mov
jecxz
iret
enter
movsl
cmp
ds
dec
add
arpl
mul
inc
cmp
add
or
jo
ficompl
aam
mov
mov
mov
es
or
push
push
insl
mov
rcl
leave
push
inc
and
push
out
bnd
sti
sarb
mov
aaa
out
mov
jb
fldl
loop
push
int3
mov
fldenv
cs
cld
xor
cwtl
test
adc
cmp
arpl
inc
dec
pop
push
cmpsb
mov
loope
enter
daa
push
pop
stc
cmp
movsb
jno
mov
bound
lret
fistpll
jbe
outsb
movsl
pop
std
jmp
fists
push
xchg
lret
enter
xchg
dec
push
xor
and
pop
sbb
mov
pop
inc
pushl
loope
iret
inc
sub
mov
push
outsb
mov
fwait
adc
inc
sbb
dec
lret
push
cli
int
add
enter
jo
push
fmull
hlt
sub
push
and
mov
xchg
pop
push
pusha
stos
jl
dec
jo
sbb
es
loop
pop
test
or
cmpb
fwait
mov
jmp
mov
pop
push
adc
jns
ss
in
or
sbb
insl
adc
mov
dec
into
out
shll
jns
jge
popf
or
or
into
push
shlb
xor
imull
fwait
call
stc
dec
sti
andb
add
mov
lods
aad
mov
xor
xchg
cli
daa
adc
xor
xchg
cmp
adc
sti
push
in
xchg
push
sbb
mov
loopne
push
pop
adc
fists
test
subb
notl
mov
jnp
push
ja
sbb
insl
inc
mov
xor
jmp
mov
bound
jmp
xchg
sahf
cs
rcl
ret
imul
mov
xor
fldenv
mov
fucom
dec
jg
mov
mov
call
mov
jg
adc
inc
pushf
adc
pop
sub
int
push
nop
inc
popa
lcall
ljmp
je
mov
scas
not
and
std
xchg
scas
mov
mov
xchg
mov
outsl
subl
mov
shlb
cmp
pusha
das
dec
cmp
mov
xchg
jge
and
xchg
iret
ret
adc
push
and
inc
fld
cmpsl
push
mov
mov
sub
adc
pop
add
jl
sub
negb
mov
adc
sub
aam
imul
loopne
notb
mov
or
xchg
gs
pusha
ljmp
xchg
lods
sbb
jmp
cmp
xor
fildl
push
inc
lret
cltd
xchg
inc
cwtl
test
mov
mov
fnstsw
push
mov
test
in
xchg
leave
or
add
rorl
test
fwait
adcb
mov
out
add
dec
scas
push
jmp
cmp
mov
mov
sbb
inc
push
adc
pop
xor
dec
pusha
outsb
ja
mov
dec
dec
sahf
or
push
imul
mov
movsb
jne
pop
add
and
bound
stos
dec
in
test
fstps
out
pop
inc
sub
and
cmp
mov
sbb
xor
mov
jbe
mov
outsb
pop
ljmp
pusha
mov
scas
fbld
lcall
dec
and
jae
mov
popfw
sbb
rclb
test
stos
out
or
and
mov
imul
xchg
push
out
pop
adc
aaa
or
daa
mov
in
inc
insb
outsb
inc
push
pop
mov
rcrl
inc
ds
into
and
push
jnp
mov
xchg
add
sbb
add
jl
sbb
lods
in
shrb
mov
adc
lcall
fstpt
jbe
call
pop
sbb
cmc
loopne
movsl
int
or
scas
add
pop
int3
jmp
dec
adc
mov
ljmp
and
inc
test
pop
mov
fldl
cmpsb
es
and
loop
cmp
aas
sub
push
push
mov
add
jl
repz
jp
test
cltd
push
outsl
movsl
data16
xor
jp
into
lahf
lret
pop
push
push
data16
fs
bound
iret
enter
inc
adc
jbe
test
loope
lret
push
out
sub
mov
add
sbb
fucomi
sbbb
sbb
loopne
add
jbe
and
mov
sbb
xchg
cmpsl
pop
cmp
lcall
dec
fdiv
into
sbb
pop
sub
aad
and
negl
int3
mov
add
mov
xlat
mov
ret
push
imul
sti
divl
lret
xchg
mov
clc
bound
dec
sub
into
jmp
mov
xor
fildl
stc
incl
push
bound
and
inc
data16
lods
mov
push
js
pop
add
cmp
in
jp
lds
gs
loopne
sti
lods
pop
xor
aaa
adc
or
and
xchg
repz
xchg
fldcw
out
test
insl
xlat
je
loop
test
addr16
pushf
in
int
xor
add
cwtl
aad
sub
xchg
adc
fstps
rol
cld
jecxz
sbbl
loope
lea
loope
cmp
loop
test
ja
pushf
mov
popa
or
inc
icebp
jo
inc
jl
push
aas
jg
in
jb
lcall
push
mov
fstl
xor
cwtl
ja
pop
mov
mov
mov
incl
add
lret
enter
add
jnp
xchg
xor
das
sub
insb
inc
int
dec
lods
jo
movsl
ffreep
ret
movsb
negb
es
ret
cmp
sbbb
mov
icebp
incl
sbb
mov
sub
and
movl
ror
mov
aam
out
mov
pop
pop
push
sub
mov
xchg
movsb
pop
fucomi
in
ds
fbstp
in
sahf
rorb
inc
mov
push
or
mov
cltd
int3
cmpsb
stc
test
or
mov
dec
mov
mov
in
sbb
inc
pop
leave
dec
jle
scas
push
insb
push
push
dec
xchg
add
arpl
incl
mov
xor
or
cmp
lcall
xchg
xchg
xor
mov
xchg
pop
mov
push
imul
aam
orb
movl
or
dec
pop
rorl
into
mov
out
add
push
jns
add
in
test
subl
out
bound
sbb
pusha
addr16
xor
jnp
mov
repnz
mov
sbb
test
aam
dec
pop
aas
ffreep
mov
pop
push
xchg
sbb
aaa
jae
xchg
popf
inc
jno
mov
adc
xor
insb
cmpl
scas
aas
xchg
sbb
xor
loop
cmc
iret
xchg
negl
jns
inc
popa
or
loop
and
cmp
xor
jae
inc
cli
insl
cmp
add
sti
xchg
pop
int3
inc
sbb
orl
ficomps
xchg
jecxz
xor
push
rorb
xor
leave
aas
rorb
aad
push
test
push
jge
loope
sbb
movsb
mov
fs
pop
mov
add
jp
int3
js
int
cmp
push
hlt
out
xlat
xor
inc
sbb
scas
sbb
and
fildll
movsb
ljmp
cmpsb
test
ljmp
cmp
daa
push
stc
lods
cmp
mov
xchg
jl
imul
sub
jbe
mov
adc
loope
ljmp
test
sub
xchg
mov
mov
rcrb
mov
xor
loop
les
psraw
jmp
nop
sub
stc
int
mov
sti
nop
mov
insl
dec
sbb
mov
and
sbb
int
sub
inc
pop
mov
xor
push
push
fiaddl
sbb
sahf
sub
test
cmp
xor
pop
jg
test
mov
ror
adc
and
cmp
jecxz
and
xor
and
mov
xor
mov
test
mov
lret
add
xor
xor
push
in
outsl
jb
in
loop
mov
stc
mov
ja
in
cmp
ljmpw
or
out
cmp
xor
jge
cmp
lcall
fs
mov
loopne
add
pop
push
mov
adc
mov
adc
repz
sbb
jecxz
or
mov
sub
add
push
fists
insb
fsubrp
icebp
dec
push
cs
jge
aad
push
pop
nop
dec
pop
lea
clc
adc
enter
mov
dec
jecxz
lret
push
mov
loop
call
imul
pop
jnp
adc
adc
jno
pop
jno
in
inc
js
jl
xchg
pushf
gs
push
addr16
jb
dec
jnp
jge
mov
daa
negb
std
loopne
fs
xor
mov
je
fcmovnbe
daa
dec
outsb
dec
stos
lret
aaa
popf
testb
push
lock
das
or
mov
mov
xor
inc
imul
dec
cmp
cmpsl
push
rcll
icebp
xchg
mov
mov
dec
test
mov
bound
xchg
cli
add
shlb
out
aam
mov
mov
pop
add
fstps
fnstsw
rcrl
xchg
jecxz
push
ljmp
cmp
jg
out
test
stos
lods
push
out
rorl
out
jno
add
insl
cltd
add
dec
mov
jecxz
add
xacquire
stc
or
sbb
push
sarl
jl
pop
je
inc
ficoms
xchg
push
cli
rcrl
add
jle
in
in
aam
test
je
aam
sub
loopne
push
mov
dec
test
stos
stos
adc
or
dec
cs
push
leave
or
mov
push
aam
adc
fnstenv
loope
mov
push
mov
in
push
adc
sub
outsb
sub
pop
push
push
jp
jbe
mov
xchg
mov
or
cmp
xchg
or
clc
in
xchg
aaa
push
scas
jmp
in
jge
push
xchg
ret
pop
adc
add
stos
aam
push
and
inc
mov
imul
scas
mov
mov
adc
imul
mov
int
insb
or
icebp
call
fisttpll
jle
or
xor
fidivl
nop
je
mov
ret
ret
lds
or
in
push
ss
repz
hlt
inc
and
push
aam
jbe
pop
leave
jge
lahf
lds
nop
call
out
dec
or
cmpsl
clc
pusha
int3
arpl
loopne
xlat
pop
sysexit
cbtw
push
jo
ja
scas
stc
movsb
test
leave
imull
jne
or
call
mov
enter
daa
push
push
xchg
cmp
jmp
fdivl
mov
movsl
je
mov
mov
mov
or
push
test
clc
cmp
data16
dec
stos
stos
pop
xchg
daa
cmc
js
xbegin
push
jmp
pushf
sub
mov
sub
inc
pop
adc
sar
or
orl
iret
into
mov
adc
sbb
int
scas
fisubrs
cmp
adc
inc
xchg
push
gs
fmull
push
idivb
mov
orb
pop
jg
xlat
mov
xor
and
adc
sbbl
push
adc
sahf
adc
repnz
lret
sub
in
xchg
loope
ds
mov
sub
dec
cmc
testl
mov
push
addr16
or
sti
pop
fs
xor
insw
sbbl
out
xor
shl
xor
sbb
sti
and
dec
incb
negl
mov
mov
push
std
adc
and
dec
arpl
repz
jge
sbb
push
pushf
aas
xlat
repnz
sub
jmp
in
mov
leave
lret
enter
fcmovnb
nop
sub
cmovg
xor
fxch
shl
jno
js
js
scas
mov
mov
call
cmp
pop
ja
mov
inc
rcrb
pop
and
inc
mov
cld
aas
mov
push
xor
push
je
sub
jnp
negb
xchg
fcomps
add
cld
xorl
lret
cmpsb
mov
mov
nop
jb
leave
pop
add
dec
out
cmp
jmp
ja
mov
mov
fldt
insl
movsb
mov
sub
push
stos
and
icebp
lods
push
jno
arpl
jo
test
std
repnz
iret
cmp
sub
aam
xlat
fdivl
mov
jnp
movsb
mov
or
lret
popa
or
int
stos
jl
test
or
mov
mov
push
push
roll
iret
cltd
cmp
test
mov
out
arpl
fsubrl
js
mov
rcll
pop
ficomps
popf
push
test
add
call
aas
or
popf
int3
xor
xor
nop
jnp
mov
jl
pop
ja
xor
and
inc
cmp
and
and
cmpsb
mov
jnp
out
rorb
aam
jns
mov
mov
xchg
cmp
scas
inc
mov
or
add
cmp
jp
and
idivb
mov
jle
scas
mov
pusha
test
enter
adc
inc
cmp
xchg
mov
push
jae
out
push
inc
mov
xchg
xchg
xor
adc
repz
insb
pop
inc
mov
scas
add
inc
inc
adc
push
cmpsl
ret
push
pop
call
pop
fisubl
pop
adc
or
stc
stos
stos
inc
clc
jp
fisubrl
stc
xchg
push
jns
sbb
clc
aas
pop
stc
clc
and
gs
lds
loopne
mov
mov
ret
leave
sub
push
jbe
push
imul
shlb
adc
int3
dec
push
mov
pop
sub
xor
sti
jmp
add
pop
inc
pop
cmp
mov
movsb
add
inc
mov
dec
in
xchg
lods
push
enter
daa
push
cmpsl
cmp
popf
stos
jno
cld
pushf
jl
fcomps
add
jnp
dec
lret
je
sub
ds
fbstp
test
ret
mov
xor
mov
inc
js
xchg
imul
add
inc
loope
xchg
imul
push
xchg
outsb
ds
adc
scas
adc
jl
movb
out
popf
add
js
and
adc
mov
les
mov
movsl
xchg
cwtl
fstp
hlt
loop
sbb
insl
movsl
test
andb
aad
aam
clc
mov
inc
add
inc
in
or
push
push
jge
xor
cmp
pop
lea
mov
push
lret
lcall
mov
push
xchg
xchg
cmp
xor
mov
loop
xchg
stc
and
fs
cs
das
push
data16
lods
jno
xchg
mov
stos
cmp
repz
xor
xor
xor
sti
rcl
mov
popf
out
push
push
lods
pop
nop
stc
dec
adc
out
imul
movsl
repz
inc
xchg
and
insl
sbb
pop
mov
sub
in
mov
push
int
jmp
or
stc
aad
enter
jp
dec
hlt
int3
bound
aam
flds
push
xor
enter
mov
test
mov
jbe
mov
stos
pop
ret
adc
ficoml
pop
mov
cmovne
out
jns
pop
lods
icebp
jb
add
je
negl
sbb
std
cs
xchg
mov
pop
jg
aaa
jns
orl
in
lret
adc
in
and
lock
pop
das
enter
and
adc
and
sar
push
xor
es
loopne
mov
dec
cs
dec
cmpsl
dec
add
mov
cld
pushf
ja
mov
xchg
sbb
mov
cwtl
call
cmpsb
rorb
xchg
and
mov
mov
and
push
jae
in
mov
clc
inc
out
or
cmp
xor
in
stos
imul
xchg
rcll
push
pushf
mov
inc
add
stos
jno
pop
or
push
jmp
mov
xor
sbb
repnz
out
mov
lret
fwait
cmp
lcall
inc
lds
or
add
sub
sub
add
addr16
xor
cmpsl
loope
jle
aam
rcrl
mov
pop
aaa
add
dec
adc
fldl
and
or
mov
sarl
jg
add
inc
jne
iret
dec
mov
cld
lods
out
lahf
lcall
add
in
pop
xor
xor
mov
or
js
jp
mov
fidivrl
push
jnp
int
jle
and
in
lret
sbb
push
cmpsl
fistps
sub
js
cmp
pop
pop
jae
jnp
push
add
jb
mov
loop
jbe
fsts
rcrl
mov
mov
mov
pop
mov
add
adc
dec
iret
mov
pop
negl
jns
inc
addb
arpl
mov
dec
addr16
or
je
test
inc
lock
push
xchg
pop
test
sbb
repnz
pop
sub
lods
fimuls
dec
jne
leave
add
rcr
mov
sub
repnz
test
mov
push
jb
jbe
adc
leave
inc
sbb
sub
aaa
mov
into
movb
popa
pop
int3
cmp
dec
int
xchg
push
popf
pop
add
push
jo
scas
mov
sahf
and
out
into
pop
cmpsb
movsb
mov
sbb
test
enter
daa
dec
les
cmp
sub
push
jl
int3
dec
cmp
int3
push
and
daa
xchg
out
push
lahf
inc
fbld
test
mov
add
add
mov
aam
pushf
pop
push
js
out
in
cmpl
je
call
repz
mov
mov
mov
repnz
fildl
popa
sbb
jbe
and
sbb
jmp
adc
and
sub
and
pop
aaa
out
lcall
loopne
lahf
xchg
pusha
sbb
sahf
adc
test
jno
addb
jg
mov
push
and
int
cmpsb
fst
ss
lods
cmp
adc
adc
jo
lret
mov
sbb
out
or
push
mov
jne
pop
cmc
test
outsb
xor
add
xor
push
stc
fildl
add
xchg
data16
mov
pop
push
sbb
mov
push
cli
es
cmpsb
cmp
lcall
int
jecxz
movsb
sbb
pop
scas
mov
mov
xor
adc
jle
repz
mov
dec
sbb
xchg
push
sub
jo
push
sub
mov
jns
lock
adc
adc
nop
loopne
dec
dec
push
mov
out
fnstcw
mov
les
cmp
lea
jnp
ss
mov
adc
sbb
pushf
push
inc
fstpt
mov
filds
mov
aas
sti
aam
jb
fists
je
pop
jnp
sbb
and
mov
cmp
mov
adc
andl
xor
mov
cmp
lock
adc
cmpsl
cmpsl
xchg
mov
sub
lret
and
pop
and
es
lock
insl
jb
adc
inc
inc
cmpsl
dec
in
mov
pop
xor
mov
mov
dec
and
xor
leave
pop
push
xor
rcrb
cmpsl
mov
pop
loope
aam
sbb
mov
call
mov
clc
adcb
ljmp
jecxz
xor
mov
rclb
hlt
push
ja
cmp
or
xchg
cltd
test
aad
push
mov
in
dec
insb
dec
push
clc
jo
jo
movsl
xchg
mov
adcb
sarl
push
cwtl
pop
jne
popa
fwait
imul
push
jecxz
mov
jb
add
and
inc
mov
xor
pop
or
pushfw
xor
fsub
xchg
int
movsl
mov
xor
pop
repnz
ja
shrb
pop
stos
jns
data16
sti
or
or
inc
push
addr16
out
int3
jne
cmpsb
xor
jle
sub
jge
out
jns
int
in
jp
andl
sub
or
scas
cmp
mov
dec
cmp
rclb
filds
and
pop
cld
fistpll
push
fwait
xchg
mov
adc
xor
sub
push
outsl
push
lret
xchg
mov
adc
popf
stos
sub
xchg
insb
das
and
imul
mov
lret
lea
adc
call
ret
test
push
out
lea
arpl
aas
cmp
or
out
xor
inc
notb
sbb
sarb
fisubrs
test
shl
mov
repnz
aaa
leave
sbb
hlt
daa
pop
rcll
inc
sub
push
xlat
jge
xor
sbb
sub
aaa
pusha
sub
or
repnz
int3
and
xchg
dec
cmp
aad
andb
mov
or
scas
xchg
xchg
dec
and
xor
movsb
push
lods
jo
test
cmpsb
mov
stc
in
gs
enter
daa
dec
gs
cmp
add
cmp
add
ds
cmc
mov
and
lret
test
test
pop
push
adc
shll
add
icebp
ljmp
push
push
mov
sub
and
sub
lock
add
or
fs
cmp
jle
mov
xlat
inc
add
enter
lahf
leave
push
out
mov
inc
sub
cwtl
mov
pop
out
push
push
push
fmull
fstpl
cmpl
sahf
mov
cmpsb
test
dec
sbbb
adc
testl
cmc
lock
ss
inc
pop
fmul
inc
fdiv
das
mov
orb
mov
mov
or
test
xor
cmc
dec
mull
outsl
out
push
pop
loop
push
inc
stc
xchg
mov
dec
add
or
data16
mov
sub
xor
xchg
mov
lock
inc
gs
rclb
xchg
ret
dec
jo
lcall
adc
or
repz
repz
test
lea
iret
and
int3
sub
cltd
stc
mov
in
inc
jmp
loope
jge,pn
call
insl
iret
enter
pop
dec
mov
and
mov
fnstenv
cmpsb
les
xchg
add
into
and
pop
call
mov
clc
pop
sub
or
pusha
pop
jns
adc
pop
push
pop
std
pop
mov
xchg
mov
xchg
ljmp
repnz
push
imul
shrl
mov
std
jl
out
cwtl
push
arpl
aas
pop
fmuls
aaa
out
pop
dec
sbb
inc
lret
repz
push
mov
call
lock
lahf
or
xchg
push
mov
loopne
xchg
and
dec
push
ret
outsl
mov
es
mov
imul
mov
xor
cld
repnz
cmpb
popa
sbb
into
cmovne
jbe
adc
out
pusha
add
push
daa
insb
aam
cmp
cmc
hlt
push
stc
mov
fstpl
fimull
mov
hlt
inc
ljmp
sti
lods
lahf
test
out
xor
mov
push
push
sbb
dec
add
xor
cltd
fbstp
adc
fcoml
dec
mov
test
xchg
ret
xor
rcrl
and
xor
xchg
insb
add
inc
mov
popa
and
push
push
shl
add
xchg
sbb
push
mov
mov
ficompl
dec
cmp
push
dec
dec
cli
popa
test
mov
or
pop
clc
mov
adc
loope
mov
cmp
adc
aaa
in
inc
push
xorl
xchg
out
xorb
add
sub
jl
jp
imul
mov
mov
mov
in
sbb
pusha
push
add
fistps
mov
xorl
jmp
adc
jae
jae
push
mov
adc
in
test
push
dec
cbtw
stos
mov
xchg
and
lcall
scas
cs
mov
xchg
iret
scas
adc
shl
iret
popa
sub
sub
push
ret
push
and
sub
pop
mov
push
jne
pop
fiaddl
or
pop
xchg
mov
jno
adc
fidivrl
add
sub
hlt
jb
js
adc
jbe
cld
mov
sbb
aaa
pop
imul
fs
add
pop
fcmove
movaps
stos
mov
push
arpl
insl
jo
mov
and
out
movsb
mov
pop
xor
in
dec
pusha
xchg
enter
daa
dec
mov
push
jno
cmp
cmp
outsb
movsl
nop
daa
stos
and
mov
push
pop
push
push
test
and
in
xor
inc
out
pop
sub
push
subb
ss
mov
sbb
inc
jecxz
outsb
addr16
adc
aas
enter
imul
jnp
xor
sti
outsb
and
ljmp
pushf
cmpsl
sub
lahf
lcall
push
xlat
push
rol
fdiv
push
sbb
nopl
ja
or
jge
mov
push
fimull
and
dec
divb
sti
sarl
leave
push
imul
mov
lret
xchg
rorl
mov
repz
out
loop
adc
ret
xlat
popa
outsl
int
fucom
pop
or
stc
dec
sahf
lret
movsb
and
add
or
jns
iret
lods
es
jge
sbbb
sub
loop
mov
hlt
pop
jae
mov
xchg
sti
fisttps
repz
adc
movsb
gs
xchg
loopne
pop
pop
pop
in
std
and
imul
out
repz
imul
cmp
shll
sub
mov
in
dec
xchg
cmp
pushf
jno
loopne,pn
out
mov
adcl
stos
fs
mov
test
test
daa
les
das
push
shl
mov
daa
shl
xor
inc
pop
fstpt
adc
divps
and
aas
cmp
jmp
dec
into
call
not
mov
inc
imulb
aas
cwtl
flds
mov
mov
mov
dec
add
mov
push
mov
push
dec
lock
push
jae
fimuls
mov
out
ss
aad
es
mov
jbe
pop
scas
adc
mov
or
iret
mov
cld
jno
and
imul
rol
dec
xchg
sub
stos
fdivl
mov
push
sbb
xchg
push
insb
push
ljmp
call
stos
cmp
cwtl
into
xor
sub
test
add
mov
xchg
test
dec
gs
xor
dec
and
cli
xchg
sbb
jo
shr
shrb
mov
sub
sub
popf
out
out
add
xchg
hlt
xor
imul
mov
mov
imul
mov
push
mov
xor
jne
or
sbbl
idivl
mov
clc
cmp
cmp
cmpsl
bound
mov
imul
out
jnp
sub
jl
lods
inc
jp,pn
ljmp
enter
aaa
sub
in
cmp
clc
adc
jl
adcb
lods
xchg
fdivl
pop
aad
push
dec
lods
mov
sub
mov
mov
stos
adc
mov
imul
scas
xchg
ret
fcomps
push
adc
stc
iret
shlb
ret
sbb
cmp
inc
mov
ja
inc
push
test
adc
in
dec
inc
hlt
les
fidivl
fstl
push
xlat
test
mov
and
icebp
mov
lds
insl
shrb
lret
insb
div
pop
xor
leave
or
add
push
jae
int
popf
jge
mov
sbb
out
aaa
fidivs
sub
lcall
dec
sbb
xchg
addr16
scas
push
inc
mov
cmp
inc
lock
sub
arpl
and
cmpsb
mov
mov
icebp
daa
dec
xor
xchg
push
sahf
jno
xchg
add
xchg
inc
mov
fsubs
mov
cltd
lahf
movsb
lods
jl
sub
test
out
add
jno
ds
sbb
jmp
js
xorb
pop
shrb
inc
loope
cwtl
bound
cmp
sub
inc
jno
lret
adc
sbb
aaa
and
inc
sbb
imul
int
xchg
sub
pop
mov
setp
clc
cli
push
sbb
sbb
xchg
dec
sbb
imul
adcb
inc
mov
roll
sbb
mov
adc
adc
sahf
adc
inc
dec
mov
lret
rol
xchg
lods
mov
add
push
jbe
into
push
lahf
push
cmc
fidivl
xor
lahf
pop
outsl
lods
or
loop
cmc
in
add
xor
add
mul
data16
test
lods
or
xchg
cli
mov
les
mov
fs
ss
sub
mov
fcmovnu
pop
or
mov
inc
add
adc
sbb
cs
lcall
inc
adc
xlat
sub
push
xchg
mov
mov
inc
mov
aad
sub
jo
rolb
pop
mov
fildll
test
and
emms
aam
mov
mov
ret
mov
adc
dec
or
imul
dec
out
pop
inc
jo
inc
mov
xorl
fsubs
jb
mov
dec
inc
and
je
jo
roll
xor
mov
cwtl
xchg
mov
mov
insb
sti
mov
or
pop
dec
lock
mov
jmp
cmp
adc
jge
inc
mov
mov
dec
jmp
and
jg,pn
lea
jns
jge
cs
daa
sbb
dec
sbb
cmpsl
dec
cltd
xchg
loopne
dec
cld
dec
call
