cmp
imul
inc
add
sarb
cmp
pushf
pushf
mov
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
loopne
hlt
lock
dec
dec
dec
in
call
dec
dec
aam
loope
daa
daa
and
cmp
daa
daa
daa
xor
dec
daa
daa
daa
daa
push
lods
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
push
mov
add
mov
mov
fwait
imulb
push
push
call
sbb
clc
pop
pop
pop
ret
aas
fistpll
lock
mov
add
hlt
cmpl
divl
out
je
repnz
int3
dec
test
jb
sti
testb
lock
add
rorb
cmp
or
jg
stc
or
clc
mov
and
xor
mov
dec
faddl
adc
and
xor
jle
pop
aas
lock
dec
mov
add
dec
hlt
mov
js
clc
clc
int
mov
jge
sbb
repz
jne
pop
pop
pusha
cs
mov
push
int
add
fnstsw
js
cld
xlat
sti
add
mov
hlt
cld
add
divb
addl
lea
lea
loopne
mov
sbb
cltd
testb
jge
add
mov
adc
dec
ret
jbe
push
mov
enter
pusha
jmp
shll
fadds
ret
jmp
pop
jle
scas
inc
mov
dec
mov
mov
mov
mov
push
ljmp
xchg
mov
mov
inc
inc
std
xchg
mov
mov
pushl
fs
inc
lea
mov
pop
and
jle
lea
mov
outsl
fildll
mov
dec
inc
xchg
mov
hlt
in
pop
mov
call
or
mov
addb
mov
push
dec
dec
rcl
outsb
scas
call
lcall
pop
cmp
popa
mov
add
mov
mov
das
outsb
loope
fimull
mov
jle
or
movswl
call
inc
inc
mov
lock
imul
call
lock
test
in
adc
cmp
jg
inc
inc
inc
cmp
add
inc
inc
inc
mov
dec
mov
pop
sbb
jle
int3
or
sub
js
add
or
mov
or
js
mov
in
outsl
jg
lea
xor
adc
add
mov
addl
mov
inc
stos
mov
mov
mov
xchg
hlt
mov
in
lea
in
mov
mov
mov
cmp
mov
ds
add
lock
dec
es
push
push
mov
mov
mov
mov
lea
inc
cs
in
loop
ljmp
mov
xchg
pop
jnp
gs
cltd
call
mov
push
and
lea
inc
mov
cmp
mov
in
jle
idivb
dec
scas
add
negb
push
lock
cmp
jo
mov
ja
sbb
xchg
mov
and
fldt
mov
out
dec
dec
inc
and
cmc
js
ljmp
repnz
dec
mov
inc
mov
lcall
push
push
mov
pop
or
fists
loopne
lea
mov
dec
mov
ret
jl
mov
lods
mov
ret
cs
or
std
in
decl
cmpl
pop
inc
dec
mov
xchg
mov
inc
lea
mov
clc
mov
sbb
inc
mov
push
sub
rol
xchg
push
fdivrs
mov
xor
aam
iret
sbb
pop
sub
jl
js
mov
inc
pinsrw
pop
push
mov
cwtl
rclb
enter
shld
nop
mov
mov
ret
mov
pop
sti
std
sub
add
push
mov
lea
imul
maxps
or
test
push
cmp
movsb
add
ss
cmp
jo
pushf
cwtl
jmp
or
repnz
pushf
mov
inc
mov
mov
lea
fbstp
mov
inc
inc
xor
jne
decl
mov
mov
cmp
jb
mov
cld
stc
cli
and
cmp
jb
bnd
sbb
mov
clc
mov
cmpb
xchg
sbb
es
test
mov
pop
lea
in
dec
push
adc
mov
cli
push
mov
lea
mov
and
mov
xor
aas
out
add
push
jecxz
add
pop
jb
mov
test
jns
jbe
sbbb
jl
add
adc
pop
sahf
lret
jae
lods
jo
insb
cmp
out
and
mov
in
repnz
push
and
je
filds
and
sbb
imul
pusha
repnz
fsubp
lahf
pop
adc
sahf
out
dec
lock
lock
jns
in
imul
sarb
test
dec
add
in
inc
push
inc
cmp
xchg
out
dec
lret
cmp
fdivp
jp
cmp
sbb
xor
xlat
cmp
cmp
xor
enter
sub
xor
xor
jnp
xchg
cs
sub
and
and
sbb
push
test
stc
icebp
mov
mov
sbb
or
push
mov
andb
adc
pop
pushf
push
cmp
pushf
mov
mov
or
pushf
mov
add
nop
xchg
xchg
lret
jae
or
inc
push
pusha
in
int
and
sub
adc
add
push
roll
jge
xchg
lock
std
in
adc
repnz
call
in
enter
or
push
popf
cmp
clc
sbb
inc
lds
mov
loopne
pusha
inc
add
or
jg
imul
rorb
xor
cmp
pop
cld
cmp
xor
cmp
aaa
xor
xor
ss
sbb
int3
mov
add
add
add
daa
xor
in
mov
xor
cmp
push
xor
idivl
xor
xor
inc
xor
addr16
mov
xor
ret
add
mull
in
aaa
aaa
xor
inc
add
jge
shrl
xor
xor
adc
outsb
cmp
cmp
int3
lods
popf
jl
adc
je
cmp
inc
mov
or
mov
add
and
mov
jmp
cmpsl
xchg
mov
fwait
inc
in
sbb
stc
lea
xor
pop
cld
movsl
ficoms
mov
js
scas
adc
cs
jns
sbb
in
fiadds
xchg
rolb
faddl
jp
andb
inc
fdivs
nop
push
xor
and
cmp
movsb
aam
bound
rclb
iret
sbb
add
and
int3
jnp
mov
fwait
xor
add
lods
jmp
shrb
sub
cmp
add
dec
add
push
adc
jl
mov
push
jbe
aas
inc
adc
add
jge
inc
mov
popf
int
addb
mov
ljmp
or
jo
and
push
in
and
xchg
adc
in
sbbb
adc
add
dec
mov
and
in
cld
sti
add
aam
test
or
test
je
dec
in
subb
and
mov
or
dec
xorl
movsb
aas
xchg
mov
push
insb
or
lea
add
mov
pop
lea
in
test
adc
repnz
or
in
repnz
movsb
int3
pop
cmpsl
inc
mov
pop
inc
jb
cmp
xor
popf
out
cld
adc
fs
adc
dec
pop
movsl
sti
mov
adc
inc
addr16
lds
inc
lret
inc
or
bound
and
aaa
cwtl
mov
cmp
call
push
jno
mov
sub
pushl
cmp
xor
cmp
or
jp
xchg
xor
mov
sub
xor
add
xor
jbe
pop
xor
xor
xor
cmp
cmp
jp
fmull
or
jmp
xor
add
jle
mov
negl
pop
cmp
ss
ss
xor
outsl
fldl
xor
lods
xor
shll
xor
cmp
xor
insw
fwait
xor
xor
dec
pop
and
xor
add
and
hlt
sub
cmp
out
js
sti
lods
scas
je
je
je
or
movsl
pop
pop
mov
pop
jp
add
out
in
rolb
add
inc
pop
sti
add
fsubr
mov
dec
cld
jae
add
movsb
movsb
test
daa
je
pcmpeqb
jae
rorb
bound
psrld
pop
sti
idivb
fildll
jnp
cli
rclb
pushf
and
jp
mov
adc
adc
jp
repz
cmpb
mov
sbb
out
jmp
popf
jb
popf
loopne
or
call
fdivrp
jg
jmp
div
dec
sub
cmp
pop
cld
jmp
pop
stc
push
outsb
in
in
fnstsw
mov
les
adc
mov
sbb
imul
push
jb
test
aas
sti
jg
cmpsb
or
or
jl
add
stc
in
sbb
fdivr
outsb
jle
mov
std
jp
adc
bound
push
jnp
adc
sub
adc
pop
ds
sti
stc
call
in
stc
adc
and
adc
cld
jb
scas
loope
aam
fisttps
repz
cmpsb
imul
test
sti
sbb
insl
push
xor
jl
in
xchg
push
and
stos
push
ret
adc
xchg
lods
xchg
mov
pop
repz
sbb
ja
lods
mov
testb
enter
outsb
fildl
dec
in
cltd
lcall
notb
mov
push
lret
insl
fists
jne
xor
std
mov
push
adc
push
push
jg
pop
pop
roll
in
mov
fidivrl
dec
dec
out
aas
clc
stc
iret
or
jns
pop
adc
jo
out
lahf
jb
mov
mov
and
cli
xor
sbbb
jl
jp
jecxz
mov
ret
adc
or
aaa
adc
aaa
push
fbstp
jp
inc
ss
sti
imul
sti
pop
xor
sbb
in
push
addr16
push
jo
jp
jo
imul
adc
lds
cli
in
out
jbe
arpl
in
cltd
lcall
je
xor
scas
xor
aaa
arpl
push
aas
stc
inc
loopne
ret
xchg
bound
push
insl
or
jp
into
pushf
testl
jno
std
mov
mov
mov
hlt
sub
jnp
jbe
dec
inc
jb
cmp
adc
fsubrs
repz
pop
mov
dec
nop
dec
cmp
aas
add
icebp
mov
dec
add
sbb
jecxz
inc
test
mov
fistpl
adc
mov
mov
jp
testl
sub
sbb
je,pt
test
sbb
cmp
xor
lock
lea
psrld
pop
outsl
hlt
xor
mull
ret
clc
test
jne
push
enter
sbb
clc
fildl
call
call
int3
push
cmp
inc
push
inc
and
push
clc
movzwl
dec
test
add
pop
loopne
sub
inc
lock
testb
push
int3
inc
ret
sbb
mov
add
cmp
arpl
popa
jbe
xor
fs
pop
push
pusha
int
incb
je
pop
or
xchg
mov
add
push
push
cmp
jb
push
jmp
push
adc
xor
or
jae
stc
ds
iret
inc
dec
rcll
add
dec
in
sbb
or
sub
dec
in
ud0
mov
test
xchg
xchg
add
dec
outsl
popa
fs
imul
loope
jns
sub
outsb
push
push
push
popa
imul
jb
imul
push
arpl
insl
popa
jo
imul
idivl
adc
je
popa
insb
inc
insb
insb
outsl
arpl
je
dec
outsl
jbe
ret
fidivl
jo
inc
bound
outsb
fs
outsb
je
scas
inc
fs
gs
inc
xchg
pop
arpl
gs
jb
pop
pop
movsb
lods
mov
or
xchg
out
and
call
mov
xor
inc
push
cmp
mov
int3
dec
mov
adc
and
femms
xchg
push
leave
push
mov
hlt
fldt
inc
inc
imul
cmp
and
fsubr
les
inc
loop
cmpl
daa
out
push
jle
jge
je
sub
mov
jo
movsl
jae
daa
mov
xlat
popa
lock
movl
push
mov
mov
add
cmp
in
mov
test
mov
js
mov
leave
push
sti
push
xor
mov
mov
cmp
push
sti
dec
push
cmp
mov
dec
add
pop
adc
daa
inc
pop
leave
pop
cmp
jnp
mov
add
stc
push
pop
mov
aad
push
push
repnz
add
ret
mov
add
mov
loope
imul
add
or
sbb
fnsave
or
xor
outsb
xchg
dec
jnp
jns
lock
inc
cld
and
stc
mov
and
adc
sahf
movsb
outsl
pop
jbe
inc
and
dec
and
and
mov
sbb
loopne
loop
cmp
inc
rcll
xchg
aaa
and
in
sbb
inc
adc
and
inc
cmp
insl
insb
jae
and
mov
fcomi
pusha
xor
push
cld
jmp
jbe
lods
add
outsb
shl
call
psubsb
out
call
rcll
dec
jbe
fadd
mov
lea
lret
add
sbb
adc
addb
rclb
das
adc
repnz
in
and
sti
adc
sub
lock
jmp
ja
leave
rclb
aas
push
or
jne
xchg
jns
push
test
getsec
clc
adc
mov
xor
add
int3
cs
and
jno
mov
and
inc
jge
repnz
cmp
clc
push
xor
mov
xor
add
jb
outsb
or
fildll
add
add
fwait
icebp
shll
and
add
popa
mov
push
jo
je
popa
inc
pop
inc
jo
mov
sub
inc
insb
cmpl
gs
dec
imul
outsl
add
outsb
add
cs
insb
lahf
push
add
pusha
dec
movb
hlt
add
push
js
nop
enter
pop
sbb
push
fdivl
push
add
or
pop
cmpl
test
jne
and
sahf
int
aas
shrb
add
mov
pop
bound
add
cltd
sub
mov
inc
adc
fsubs
testl
jl
decl
xor
xor
in
lods
push
or
test
inc
mov
push
fistps
test
cs
inc
mov
mov
jne
xor
das
jmp
push
xor
sbb
aaa
mov
loop
je
dec
clc
mov
ljmp
cld
ljmp
sub
stos
sub
or
xor
std
add
mov
clc
hlt
add
cli
daa
clc
or
sub
add
popf
pop
je
bound
in
push
inc
sbb
test
test
add
stos
lock
adcl
jne
inc
dec
decb
xchg
mov
aam
clc
xor
xchg
push
flds
push
xor
push
add
jno
pop
daa
push
add
inc
sbbl
pop
lock
div
aaa
clc
in
push
push
adc
insl
cld
mov
clc
out
or
pop
xchg
push
cmp
pop
sub
pop
sub
dec
orl
insl
sbb
dec
and
or
push
rorb
or
testb
incl
aas
add
and
mov
shr
cmp
je
lcall
push
push
addl
ret
cmp
jne
dec
pop
clc
inc
add
add
fs
stos
push
xor
cmp
xlat
mov
les
add
cmp
out
adc
je
inc
add
xlat
jo
mov
mov
inc
inc
mov
pop
sub
push
cmp
add
and
push
leave
push
xlat
pop
push
jge
mov
and
daa
daa
add
or
fcomp
sbb
daa
add
daa
and
pop
fidivl
sbb
ud0
sub
sub
xchg
cs
ljmp
dec
push
add
add
add
push
inc
dec
pop
inc
add
add
dec
add
lcall
inc
xor
push
push
or
arpl
push
std
out
dec
dec
inc
sub
sub
sub
inc
cmc
nop
arpl
aaa
idiv
push
fwait
ret
arpl
add
add
nop
ret
pusha
adc
sbb
add
loopne
xchg
or
sbb
out
insl
add
add
sbb
nop
jbe
mov
lahf
sub
add
insb
fcmovnu
mov
dec
rcrl
das
add
adc
add
or
rorl
outsb
inc
dec
divps
addb
cmp
outsl
imul
daa
call
xchg
or
fidivrl
sub
and
xlat
pop
testl
push
aaa
xchg
pop
xlat
pop
popa
jle
aaa
aaa
aaa
and
push
fs
push
xchg
cmovnp
mov
sub
into
mov
int3
adc
shrl
jg
mov
dec
jmp
xchg
and
daa
pop
push
sub
fcmovnu
fcmove
frstor
push
mov
inc
cltd
fbld
iret
mov
add
stos
sbb
les
adc
rcl
jge
push
or
or
add
out
out
jne
inc
jl
daa
test
cmpsl
mov
pop
sti
addr16
adc
inc
sub
add
cs
pop
shll
hlt
cs
int
mov
sub
inc
lds
push
jae
mov
inc
pop
pop
lods
bound
out
push
fsubs
movsl
xchg
xlat
sbb
fstpt
cmp
lods
lods
movsl
int
jmp
insl
iret
cmpsl
push
pop
sbb
mov
cmp
push
and
pop
or
inc
xchg
sbbl
xchg
add
pusha
pop
mov
xchg
xchg
pop
fisubrl
cltd
int
push
xor
mov
insl
lahf
push
sbb
mov
cmp
mov
outsl
ret
test
adc
popf
jecxz
bound
popf
push
notl
bound
xlat
push
adc
std
push
or
mov
inc
dec
mov
mov
sub
stos
scas
sub
mov
lea
iret
inc
dec
push
mov
pop
push
fwait
mov
fcmovu
jmp
adc
sub
sub
or
scas
aam
leave
sbb
test
sub
add
jnp
stos
imul
or
push
sbb
push
imul
add
fldt
add
mov
test
sbb
mov
mov
rcrb
inc
push
ljmp
cmp
sub
mov
push
mov
cmc
mov
add
or
in
lods
xchg
rcrl
rol
push
dec
inc
and
push
adc
lods
xchg
inc
test
lret
icebp
add
addb
insl
or
mov
inc
inc
push
addb
cmp
lods
inc
lods
out
das
insb
test
aaa
test
xlat
sbb
add
and
lea
dec
sub
ljmp
cmp
inc
pop
dec
pop
test
outsl
mov
sub
popa
mov
adc
mov
add
adc
mov
sub
pop
adc
push
ret
stos
jecxz
jae
mov
adc
imul
pop
add
adc
adcl
dec
lea
sbb
pusha
sub
pop
and
jmp
inc
decl
xor
pop
inc
sub
jnp
lods
stos
adc
das
sbb
stos
bound
imul
mov
adc
xor
pop
insl
inc
mov
sub
xchg
adc
fsts
andl
pop
dec
sbb
stos
push
and
ficompl
nop
pop
lahf
xor
push
fstps
pop
test
popf
dec
aad
mov
mov
repz
lds
test
mov
lds
mov
mov
push
insb
push
lods
shll
and
dec
jg
mov
inc
inc
mov
sub
mov
xchg
cmpsl
shrb
sub
movsb
add
test
add
in
in
fcmovne
and
cmp
jbe
arpl
and
scas
and
lock
test
mov
push
add
jecxz
jle
dec
add
addr16
pushl
addr16
iret
add
pop
into
sbb
xor
sub
xchg
bswap
fidivs
scas
add
mov
add
fstpl
pop
sub
scas
sub
gs
jnp
out
out
push
adc
push
jecxz
lahf
sarb
add
mov
jge
jmp
sub
cmpsb
loopne
imulb
inc
mov
mov
add
add
popa
jae
and
mov
push
fisubs
xchg
push
push
fistps
data16
fwait
cmpsl
xchg
shlb
lods
out
fcoms
or
inc
pop
sbb
dec
fidivrs
shrl
dec
nop
fcomi
outsb
mov
test
jl
insb
pop
daa
mov
test
xor
and
mov
gs
pusha
mov
imul
pop
es
test
jg
xchg
jl
ret
sub
mov
pop
idivl
aaa
add
sti
mov
ror
add
dec
xor
fcomip
or
movl
orb
iret
gs
mov
cwtl
je
pop
jp
pop
scas
sub
push
mov
rclb
xlat
cmp
xlat
pop
inc
push
fs
inc
wrmsr
rclb
fsubrl
add
fcmovnb
jmp
adc
pusha
imulb
and
syscall
xchg
sbb
jae
mov
add
mov
pop
cmp
arpl
mov
inc
arpl
roll
out
xorb
pop
jge
mov
cmp
adcl
add
sub
negb
daa
je
and
push
jnp
es
mov
add
and
pop
fisttpl
rorb
ret
cmpsl
inc
subb
out
add
mov
mov
push
adc
insl
stos
and
popa
cmpsl
xchg
mov
mov
jb
daa
scas
mov
push
stos
daa
mov
loope
aad
mov
repz
out
mov
add
xor
or
jmp
cmp
and
imul
aas
je
out
dec
inc
xor
xchg
loope
lahf
mov
out
push
dec
add
add
mov
iret
pop
imull
sbb
sub
roll
idiv
jg
adc
cmpsb
mov
scas
jnp
out
adc
lods
dec
loope
adc
test
ret
aad
ffree
adc
iret
jne
dec
lret
mov
jg,pt
dec
jmp
aaa
jbe
iret
pop
in
mov
lret
sub
int3
pop
fimull
add
rcll
cltd
push
xchg
test
ss
and
scas
push
scas
sub
inc
mov
scas
neg
or
mov
aad
cmpsl
mov
sub
cmp
out
hlt
pop
inc
je
scas
add
or
aas
sub
adc
fs
dec
inc
jle
in
outsb
sub
inc
sub
adc
and
pop
stc
outsb
or
mov
shr
mov
inc
faddl
outsl
push
stos
imul
sbb
insl
outsl
bswap
jno
cmp
scas
add
das
test
in
xchg
ficoms
test
data16
ja
xchg
add
mov
dec
aaa
fstpt
sbb
test
push
sbb
dec
push
imul
push
cli
ss
pop
sbb
adc
test
in
mov
stos
mov
mov
and
aad
push
das
stos
dec
lock
lds
mov
push
sub
mov
jne
and
pop
sbb
adc
jg
mov
or
fldenv
xor
and
inc
es
xchg
inc
shlb
adc
sar
ja
mov
movsb
sbb
sub
inc
iret
nop
add
daa
push
dec
daa
js
dec
xchg
push
cmp
sub
cltd
and
lods
sbb
pop
add
ja
ret
cmpsb
test
lcall
in
out
ficoml
adc
add
dec
mov
add
loopne
and
or
jbe
xor
mov
daa
aaa
stos
or
loop
mulb
pop
and
jo
imul
xchg
sbb
daa
mov
std
inc
ret
add
in
sbb
fstps
jle
jle
popa
add
jg
jo
adc
pop
sahf
rorl
daa
fsub
xor
lods
arpl
icebp
or
jns
add
ds
nop
dec
daa
out
std
ljmp
fdivs
adc
adc
fnstcw
and
push
inc
add
fisubrl
es
in
push
lods
cmpsl
add
xor
inc
sbb
xchg
mov
cmp
mov
xchg
mov
push
mov
add
add
push
dec
daa
movsb
push
cmpb
test
jno
jns
stos
add
jno
push
xchg
dec
mov
push
scas
pop
and
loopne
mov
inc
fildl
push
lods
icebp
inc
leave
jge
shlb
es
insl
cmp
jno
push
test
stos
bound
repz
xchg
push
mov
add
gs
xchg
cmpsl
mov
or
xchg
add
push
inc
mov
push
sarl
inc
mov
in
sar
popa
out
in
pushf
lret
ret
lret
je
mov
adc
adc
fdivrl
popa
mov
add
movsb
das
daa
das
movsl
add
push
stc
popl
adc
and
movsb
xor
mov
notl
icebp
mov
fsubr
cmp
mov
clc
add
nop
push
push
xor
not
mov
mov
xchg
out
iret
out
sub
xchg
sub
fildll
mov
sahf
pop
push
dec
adc
sub
mov
ja
lock
in
add
and
lock
loopne
mov
jb
mov
adc
add
mov
sub
add
aaa
inc
js
je
xchg
mov
mov
hlt
cmp
stos
inc
shrl
push
mov
imul
cwtl
js
xchg
add
sbb
cmp
pop
in
sbb
xchg
jo
scas
add
ss
mov
pop
bound
mov
scas
jp
xchg
imul
je
cmp
fidivrl
lret
add
test
sbb
aad
mov
das
aaa
and
fisubrs
pop
nop
int3
pop
cwtl
fildl
aad
push
loope
into
pop
test
ljmp
lret
subl
pop
ljmp
dec
lods
cmp
fld
out
add
les
shl
int
test
stos
lret
dec
push
pop
leave
mov
jp
xlat
cmpsl
xor
pop
sti
jmp
test
mov
sub
xlat
xor
jbe
inc
push
stos
xchg
push
enter
aaa
roll
xor
loopne
call
out
das
out
mov
pop
mov
sub
mov
andb
add
add
xchg
into
inc
aaa
aaa
insb
shl
ret
xchg
pop
cmpsl
iret
xchg
or
hlt
cmp
add
xlat
into
or
fdivrp
xchg
add
out
movaps
and
fiadds
xor
jne
xchg
pusha
adc
dec
imul
push
and
sbb
lods
sub
aaa
addr16
insb
and
add
cmpsb
add
mov
lock
push
addb
and
mov
add
es
in
out
add
xor
inc
mov
pop
xlat
push
xchg
loopne
jne
je
add
ds
out
pop
filds
add
lods
or
ret
aas
adc
ds
outsb
xchg
add
hlt
add
xor
add
xchg
cld
fs
lahf
icebp
mov
imul
adc
insb
add
jo
popa
call
jp
aam
loop
push
pushf
test
in
sahf
movsb
pop
and
pop
lods
dec
push
jl
ret
jle
inc
mov
mov
or
bound
outsb
aaa
sbb
les
rcrl
dec
daa
int3
sbb
jg
or
loope
lods
inc
jle
rclb
std
repz
dec
rcrb
out
and
pusha
pop
movdqa
inc
add
adcb
push
iret
test
loop
pop
sarl
aas
insb
adc
mov
lahf
iret
out
xor
fcmovnb
jnp
push
insl
idivb
sub
pusha
sub
sub
enter
push
les
add
mov
gs
inc
mov
ja
sbb
mov
inc
jl
lret
inc
sbb
add
pop
mov
dec
shrl
jmp
or
jne
add
or
ret
scas
push
test
inc
pop
sub
out
shrb
out
or
cltd
push
les
jno
xchg
icebp
xchg
xchg
adc
sbb
sub
insb
scas
testl
or
addb
jnp
movsb
pop
movl
and
push
je
adc
sbb
or
ret
or
inc
push
sbb
loopne
mov
sahf
and
icebp
ret
and
adc
adc
mov
jmp
cltd
adc
into
jmp
xchg
xlat
popa
out
fsubr
js
push
js
nop
or
sbb
cmp
sbb
jecxz
adc
arpl
aam
add
ds
pop
pusha
lock
push
pusha
sub
add
fmuls
das
jecxz
add
jns
mov
inc
mov
in
sbb
mov
shrl
mov
mov
scas
push
aam
fs
mov
or
add
mov
jno
cmpsl
js
mov
sbb
pop
or
inc
xor
add
add
push
adc
testb
loopne
lds
packuswb
cmpsb
dec
lds
or
cmc
and
dec
shll
or
sbb
dec
mov
pop
je
adcb
mov
mov
ds
sbb
jo
xchg
out
imull
cmp
add
mov
adc
xor
std
sub
cld
shlb
and
test
inc
daa
mov
adc
loope
xchg
nop
xchg
jbe
fildl
jbe
adc
test
out
push
mov
aaa
pop
jmp
adc
inc
cs
mov
sbb
adc
lcall
aad
push
sbb
fmuls
loope
sbb
dec
sarl
sub
pop
sbb
lods
fsubrs
jo
jo
add
scas
sbb
pushf
daa
jecxz
or
inc
xchg
int
sar
addl
inc
or
imul
scas
ret
cmp
sbbl
repz
xor
ret
dec
push
fistpll
sub
cmp
rcrb
mov
sub
xchg
jns
lock
add
scas
call
ret
cs
mov
xor
insb
fcmovnbe
xor
add
push
pusha
iret
cld
adc
ds
sub
inc
xchg
jp
lahf
or
lock
add
daa
dec
add
mov
add
add
nop
xchg
icebp
stos
ret
or
and
es
imul
test
popa
push
pusha
lods
mov
or
add
lea
jecxz
dec
addb
sub
pop
shlb
inc
into
std
fcoms
inc
cmpl
hlt
jle
repnz
jg
mov
scas
pop
cmp
pop
sub
or
dec
iret
add
lds
ds
pop
testl
notl
sbb
loopne
stc
icebp
mov
imul
loope
jno
js
addr16
call
push
adc
cld
or
out
movb
hlt
mov
xor
xchg
jmp
je
subb
adc
daa
std
xchg
ds
fcomp
lea
mov
orl
fucomip
das
push
in
add
lea
jne
test
andl
lods
clc
jbe
mov
data16
pop
lea
add
divl
inc
add
mov
insl
call
outsl
mov
add
push
cmc
gs
and
ja
insb
add
repz
cmp
les
addl
cli
ja
and
scas
jp
rorl
adc
sub
aaa
js
mov
movb
or
add
outsl
cmpsb
mov
mov
xchg
ret
cmp
ss
rclb
and
xchg
imul
arpl
add
add
mov
cmpsb
xchg
fsubrs
and
ficoml
fistpl
lea
roll
dec
ljmp
mov
cmp
add
jp
cmpsl
jnp
inc
rcr
stos
mov
stos
shrb
push
lahf
ja
pop
ss
mov
imul
push
js
adc
xchg
call
int
pop
jecxz
cld
stos
mov
ja
jl
add
xchg
and
dec
pop
push
and
xor
orb
xor
jl
adc
int
mov
daa
inc
pop
jl
in
test
hlt
add
sub
sbb
enter
mulb
lods
sahf
es
sarb
sbb
loope
and
sub
push
frstor
ret
jno
jae
aaa
dec
out
jo
xlat
idivl
jbe
fdivs
jo
push
inc
bndldx
pop
and
sbb
push
aam
mov
and
ds
loope
jmp
cmpsb
pop
xlat
daa
and
sub
mov
stos
xchg
mov
movhps
xchg
xchg
xchg
push
mov
add
insl
addr16
pusha
jno
dec
push
and
push
popl
ret
daa
jne
jb
jo
jmp
lahf
sti
cmp
adc
jo
pop
xlat
sub
adc
cmp
test
push
and
xchg
pop
xor
dec
test
test
adc
adc
and
repnz
jmp
gs
or
aas
and
insb
rcrb
ret
cwtl
iret
icebp
fimull
scas
shl
ljmp
push
sbbb
fisttps
repz
sub
test
in
xlat
add
lahf
lods
add
imul
dec
and
outsl
inc
xlat
cwtl
add
out
fidivrl
dec
mov
mov
insl
leave
mov
push
gs
mov
xor
mov
hlt
pop
xchg
rorb
adc
scas
rorb
add
movsb
add
popl
insb
icebp
outsb
xor
sbb
enter
and
fwait
pop
mov
fadds
ja
fidivl
xchg
jnp
or
ret
mov
cmp
xlat
out
xchg
andb
pusha
fmuls
or
push
das
mov
imul
cmp
loope
imul
jno
pop
and
jnp
xor
adc
mov
rclb
dec
stos
jp
jecxz
inc
jnp
cmp
stos
lcall
dec
add
cmp
jmp
xchg
add
push
mov
mov
fmul
inc
add
loop
loope
pop
push
xlat
jno
xor
out
mov
movsl
push
xchg
cltd
cmp
ret
push
mov
mov
call
dec
jle
push
add
mov
xor
bts
adc
and
mov
sub
idiv
data16
mov
test
addb
xchg
aad
jns
pusha
xchg
je
jp
and
pop
daa
xchg
adcl
xlat
xor
sub
stos
test
add
dec
pop
out
inc
int3
mov
jo
sub
sarl
cs
inc
scas
cmp
stc
lret
inc
flds
cmp
jo
xor
es
sub
push
dec
rcr
rcrb
jp
lods
popf
mov
rorb
or
loopne
sub
out
dec
mov
push
ss
jbe
insb
jne
adc
adc
and
mov
cmc
jbe
test
jbe
and
mov
cmp
xor
test
jle
xor
cli
push
mov
xchg
push
pusha
adcb
daa
mov
cli
daa
add
and
loopne
jo
dec
jmp
jg
test
or
xchg
sub
ret
out
inc
inc
mov
mov
addr16
mov
push
orb
popa
push
sti
mull
xorl
les
xor
call
or
loope
mov
in
mov
or
jae
push
addl
jb
cmp
push
or
mov
rorb
addb
cmp
add
fcoms
popa
jp
adcl
or
and
inc
loopne
add
loopne
inc
dec
mov
test
mull
pop
sub
out
loope
std
mov
fldcw
insb
adc
stc
insl
js,pt
mov
jl
sub
xorb
inc
aas
ret
call
add
lock
add
cmp
dec
fcompl
sub
push
add
xor
je
mov
ficoms
inc
jg
ret
xor
je
mov
cmp
mov
xor
imul
sub
cwtl
push
push
mov
pop
fdivs
test
adc
loopne
xor
icebp
xlat
stos
iret
sbb
xchg
sbb
pop
fildll
push
sbb
pushf
dec
dec
mov
ds
cmp
ret
bound
xlat
push
pop
pop
movsl
leave
adc
dec
lock
out
jns
push
push
js
loope
scas
inc
lret
jge
mov
mov
cmpb
loopne
sbb
jae
call
pminsw
push
rorb
int
pusha
scas
cmpsl
lea
cmp
test
and
loopne
sub
loopne
and
push
loop
mov
fdivrl
mov
cld
adc
sub
cmpsl
adc
jbe
imul
fldt
or
loopne
mov
xor
js
loope
clc
leave
cwtl
mov
or
aad
fxch
jo
jns
mov
or
mov
repz
mov
je
inc
dec
popa
out
rcrb
inc
mov
dec
movsb
loopne
push
mov
or
das
sbb
ds
out
push
lods
pop
add
add
scas
repz
test
mov
mov
dec
cwtl
das
mov
sub
pop
pop
lods
shr
lods
mov
jnp
and
addr16
push
mov
or
cwtl
xor
popa
subl
pop
packssdw
lods
insl
movsl
or
add
dec
mov
call
stos
stos
rcrb
pusha
into
sbb
stos
int
stos
xchg
and
dec
je
cmp
and
movsl
sahf
adc
and
test
test
mov
cmc
into
push
lcall
lock
cmp
pop
cmp
aad
jno
pop
fmuls
push
add
jmp
iret
push
add
daa
dec
sub
cli
clc
mov
mov
outsl
in
jp
aaa
ja
popa
mov
pusha
fdivr
ljmp
mov
inc
mov
mov
flds
test
add
inc
scas
xchg
bound
jo
lock
data16
cli
jge
jg
sar
test
mov
add
inc
dec
lds
pusha
add
pop
or
shr
mov
cmp
insl
push
inc
lea
loope
xchg
out
push
push
pop
xchg
push
sub
push
cmp
mov
xchg
imul
arpl
scas
cmp
cmpsl
xchg
xlat
jg
jb
adc
test
cmpsl
adc
ss
mov
aaa
movsb
lock
add
pop
cmp
dec
cmc
fnstsw
adc
loopne
mov
jecxz
xchg
pop
sbb
call
xlat
mov
scas
sub
pusha
repz
pop
invd
sbb
clc
push
loopne,pt
xor
clc
popa
jle
je
xchg
push
jg
aas
inc
and
pop
jo
in
imul
xchg
sub
es
fsubs
xor
push
inc
pushf
dec
pminub
sub
movsl
loopne
add
or
fldt
sbb
and
push
or
pop
orb
dec
jle
jle
imul
mov
fwait
sub
aam
mov
aas
push
loope
arpl
or
mov
pop
add
scas
lret
pop
negl
cmp
ret
push
int
icebp
cmpsb
pop
lods
and
cmpsl
sub
aam
iret
pop
cmp
test
ss
addb
mov
jne
mov
pop
ret
lock
and
adc
dec
sub
add
xlat
pop
push
sti
dec
xor
in
es
xchg
push
jo
ret
shlb
cs
roll
fsubs
loope
mov
push
fbld
add
enter
pop
xorb
shrb
pop
lea
mov
push
cmpsl
insl
rclb
lret
je
xor
and
loopne
sti
pushf
jno
add
pop
shll
push
clc
xchg
push
lock
mov
jmp
test
and
xorl
rolb
pop
ret
dec
sbb
sub
movsl
sbb
push
daa
aaa
or
add
add
test
mov
pop
xchg
vmovq
icebp
out
mov
mov
js
enter
test
jae,pt
push
sbb
mov
sbb
add
jecxz
jg
adc
ret
push
out
mov
loope
push
push
and
movl
dec
iret
cmp
push
xor
pop
jmp
push
insl
cmpsl
pop
sub
xchg
and
lcall
daa
iret
sub
fcmovnb
xor
lahf
dec
mov
loopne
mov
or
stc
pop
jo
adcl
add
nop
push
and
pop
add
mov
add
shrb
sti
das
outsl
xor
iret
sbb
repnz
shr
sub
xor
mov
jmp
mov
out
fistpll
push
inc
add
inc
mov
add
mov
mov
stos
push
lea
pop
je
sbb
push
cmpsl
les
push
in
es
add
jmp
lcall
pushl
cmp
jnp
repnz
add
add
push
mov
iret
cmp
out
jo
cmpsb
jg
add
or
mov
aas
mov
cmp
cli
adc
stos
sbb
fcompl
and
jge
and
je
pop
jg
add
lods
push
dec
out
fdivl
jge
ljmp
xchg
cmc
mov
inc
ljmp
dec
pop
xchg
shl
ret
mov
nop
sbb
pop
push
xlat
dec
xor
scas
mov
icebp
pop
and
adc
mov
inc
pop
rorb
sbb
pop
sti
or
jge
jo
ja
push
call
aam
imul
scas
das
mov
push
aas
push
in
sbb
ret
mov
xchg
cmp
xor
mov
xchg
pop
xchg
mov
dec
xchg
pop
pop
aas
hlt
adc
inc
inc
in
push
and
dec
dec
xchg
test
cltd
test
test
roll
cs
fs
jns
cmpsb
push
push
or
lock
sub
fs
mov
in
pop
js
inc
jp
lock
xchg
mov
cmpsb
lret
add
sub
ss
je
push
mov
add
enter
push
xor
add
clc
pop
cmpb
lods
icebp
ret
adc
xchg
roll
push
aam
cmp
js
ret
sbb
movsl
xlat
mov
jnp
cld
cli
mov
decb
aas
test
mov
ret
xchg
jno
lods
sti
add
cmpsl
dec
xor
out
adc
in
or
fldcw
repnz
sbb
push
lock
cmp
pop
and
mov
adc
dec
push
inc
jl
aad
cmc
fbstp
popl
mov
mov
or
mov
xchg
lea
and
xor
inc
cli
fwait
int
mov
arpl
iret
hlt
idiv
int3
lret
sub
inc
or
jmp
mov
inc
add
push
add
lock
mov
cmp
scas
jecxz
jle
push
loopne
push
imul
or
cmc
mov
pushf
popf
les
jns
sbb
and
outsb
mov
bound
sub
lea
add
xor
bound
cmp
fistpl
mov
push
test
add
iret
sub
inc
into
adc
pop
adc
loope
negl
loopne
adc
aam
xor
fs
sbb
mov
pop
ret
pusha
mov
xchg
and
cwtl
mull
and
adc
adc
and
or
jbe
add
dec
shld
add
lods
jno
loopne
or
adc
dec
or
xchg
mov
in
jp
out
jno
jbe
movq
icebp
adc
stos
fstps
push
and
stos
pop
xchg
push
aas
cmpsl
add
mov
out
fbld
add
js
jle
loope
rclb
jae
mov
push
jae
repz
or
cmp
adc
inc
movsb
aad
sbb
jns
out
mov
mov
mov
test
ficomps
mov
mov
adcb
loop
scas
and
xchg
push
in
lods
mov
ds
add
daa
ss
mov
inc
test
pop
test
arpl
mov
popf
push
ret
repz
sub
and
out
push
dec
lret
sahf
ret
and
dec
les
cmpsl
xchg
xor
pop
or
in
into
mov
mov
ret
sub
cmc
add
mov
scas
jbe
pop
jmp
pop
das
jmp
and
adc
loop
adc
pop
cmpsl
lods
std
sbb
push
add
ss
sbb
inc
sti
int3
lods
jne
movsb
in
sbb
push
stos
jae
sti
ljmp
dec
cmpsl
inc
push
pop
push
mov
lods
sub
push
out
push
cmpb
js
cmpsb
daa
mov
loop
rcll
add
push
loope
mov
rcrb
jecxz
cmp
in
es
mov
subl
flds
outsb
andl
test
aaa
test
mov
or
out
and
lret
insl
iret
push
lret
jno
adc
call
pop
sbb
hlt
mov
mov
mov
or
dec
mov
repnz
bound
jecxz
pop
xor
push
ds
aas
mov
andb
loope
and
aam
loope
xchg
jo
pusha
es
xchg
push
push
sbbb
inc
addl
add
loopew
mov
lods
jl
jns
scas
fnsave
fdivr
inc
mov
imul
cmp
imul
jns
inc
cld
or
xor
scas
fsubs
xlat
add
cs
add
mov
mov
out
andl
aas
pop
jnp
mov
cmp
push
sub
cmp
mov
and
fdivrl
pop
sbb
pop
add
sbb
sar
shlb
test
add
mov
mov
je
pop
mov
fisttpl
and
pop
cmp
adc
sahf
inc
and
ja
and
lods
dec
addr16
dec
repnz
scas
out
lock
mov
ja
push
add
jge
jecxz
sbb
mov
push
es
insl
push
jg
pop
xchg
push
fbstp
das
lods
or
jl
cmp
push
pop
cmp
js
xor
cmpb
imul
cs
xor
in
addr16
inc
fcmovnbe
jae
rolw
scas
out
cs
or
subl
push
mov
jl
outsb
das
xor
into
mov
add
xlat
inc
and
sahf
ljmp
cmp
dec
push
pushf
xlat
jmp
push
imul
fldl
mov
jbe
int3
sbb
leave
inc
sub
xor
js
push
or
xlat
cmpb
push
orb
sub
adc
add
cmp
aad
rorl
and
and
add
leave
inc
repnz
add
mov
ja
sbb
add
xchg
pop
loopne
mov
jns
dec
leave
mov
sub
inc
or
xorl
mov
les
rcrl
dec
clc
divl
cli
cmp
sbb
xor
xor
cmc
mov
cmp
xor
xchg
mov
fisttpll
xor
add
fistpll
cld
enter
data16
test
cmp
pusha
popf
add
das
mov
icebp
mov
push
ljmp
inc
fcompl
adc
das
sbb
jl
sub
push
pusha
mov
mov
adc
fdivp
mov
mov
add
mov
jne
popa
add
jne
sub
data16
push
dec
enter
push
in
mov
push
and
mov
pusha
xor
ret
adcb
sarb
sbb
enter
adc
inc
mov
mov
loope
je
add
sub
cmpsl
hlt
lods
sbb
mov
pop
jl
call
ficoms
dec
and
cmpb
ss
arpl
or
dec
sbb
ljmp
mov
sti
jle
inc
xchg
push
or
add
dec
and
or
rcrb
rorl
adc
pop
push
aaa
sbb
and
iret
scas
push
lret
cmp
sbb
ja
cmp
inc
stos
jle
jle
dec
xor
icebp
inc
mov
loope
sbb
adc
sub
pusha
fldenv
add
sub
jo
pop
push
call
push
inc
or
arpl
add
in
xor
mov
mov
rorl
clc
mov
nop
or
call
mov
lahf
push
and
mov
pusha
xlat
test
lods
or
fdivl
test
sbb
outsl
sbb
pop
pusha
addl
xchg
sub
icebp
add
sti
dec
mov
fwait
imul
dec
cmpsb
sahf
sbbl
out
xchg
jne
mov
insb
fldenv
jns
and
jp
sub
call
jle
outsb
hlt
or
mov
out
bsf
stos
cmpb
sbb
iret
lcall
xor
data16
into
out
rcll
shll
mov
rol
in
mov
adcl
daa
adc
fbstp
inc
fsubrs
outsb
push
ret
scas
pop
popa
out
push
adc
in
loopne
and
dec
aad
and
sbb
data16
dec
movl
push
mov
add
aaa
mov
jmp
movsb
jl
push
add
add
push
push
xchg
xor
push
addb
lock
xchg
dec
pop
fs
xchg
das
orb
pop
pushf
aad
shlb
inc
cmpsl
add
daa
stos
and
popa
add
jl
and
call
pushf
daa
fstl
adc
cmp
xchg
fnsave
movsb
popf
xor
je
js
add
cs
and
aad
incl
xlat
cmc
push
jmp
pop
pop
enter
in
loopne
or
sti
add
cmp
add
idiv
mov
arpl
and
call
pop
push
xlat
shl
dec
mov
push
sub
and
clc
sbb
jecxz
inc
iret
scas
loopne
lea
pusha
xor
aaa
sbb
sub
jnp
insb
jle
shlb
xor
add
push
ret
lret
call
xor
mov
sahf
and
mov
lods
add
mov
xor
int3
mov
add
pop
cwtl
xchg
jecxz
pop
sbb
and
enter
add
add
and
mov
fwait
and
mov
ds
loope
shlb
iret
test
mov
mov
sbb
adc
push
call
inc
mov
mov
fmul
mov
lret
push
gs
lods
sbb
outsb
ja
mov
cmp
lods
rcl
mov
addl
das
adc
dec
and
mov
je
add
in
adc
into
imul
test
jne
fmull
inc
popa
dec
loopne
jp
fs
inc
jnp
iret
xchg
jns
leave
mov
lret
shll
cmp
out
test
fisubl
sub
xchg
ret
call
lret
iret
es
push
in
push
sbb
frstor
add
sub
aam
dec
test
in
and
and
cmp
call
arpl
or
or
xchg
inc
pop
shl
nop
and
int3
mov
lret
add
or
loopne
or
and
arpl
insb
push
rcl
js
ret
xorl
popf
add
dec
inc
sub
and
pop
sbb
jmp
xlat
call
pusha
add
fwait
push
fidivrl
cmp
dec
adc
push
inc
push
pop
scas
les
call
jae
cs
lahf
jecxz
mov
or
pop
jg
fisubs
push
mov
xor
lcall
and
adc
sub
repz
xchg
and
in
and
jb
fldz
loop
out
dec
jbe
push
call
addb
push
movsb
mov
pop
add
cmp
jb
sub
stos
jo
fadd
out
mov
andl
xlat
mov
rcr
and
lret
xlat
inc
je
dec
push
es
ret
push
fsubrl
pop
sbb
add
cmp
cld
fidivs
push
clc
fsubl
adc
dec
and
out
js
insb
jo
daa
rorl
or
push
scas
jle
mov
popa
inc
cmp
jge
lods
and
in
or
loopne
movsb
ss
sbb
popa
push
xor
jecxz
movnti
add
dec
inc
push
or
clc
jo
stos
push
insb
jnp
sbb
pop
mov
mov
xrelease
dec
insb
sbb
push
data16
cmpb
out
ds
sub
or
or
popa
push
loopne
dec
lods
fsub
push
fildll
jl
adc
mov
jge
mov
scas
shlb
fstl
lcall
loop,pn
inc
mov
inc
call
shll
cltd
push
pusha
mov
dec
add
dec
shlb
ficoms
mov
lret
xchg
sbb
pusha
add
mov
stc
lds
add
adc
cmpsb
xlat
sub
in
mov
mov
enter
push
nop
add
pop
fs
mov
fimull
dec
mov
sahf
cmp
pop
xchg
pop
aam
and
test
sbb
idivl
add
inc
shll
jl
lods
gs
sbb
and
mov
lods
imul
in
shlb
fiadds
sbb
xor
scas
push
fadds
sbb
insl
cmpsb
loop
xchg
or
jns
fisubl
dec
inc
or
xor
movb
cmpsl
sub
mov
adc
scas
enter
sbb
jbe
push
inc
sub
jae
or
adc
nop
ror
adc
xor
xchg
jno
ja
xchg
jno
mov
iret
adc
jne
mov
adc
add
pop
pop
cmpsl
das
xor
jno
imul
mov
xchg
xchg
outsb
cmp
rclb
xor
out
and
andb
cld
pusha
or
push
mov
jns
or
push
sub
push
stos
pop
inc
es
push
dec
jo
je
xlat
jmp
mov
cmp
pop
das
orl
push
adc
dec
mov
adc
jge
js
sti
cmp
xchg
popa
orl
mov
push
cmc
mov
enter
add
mov
cli
ret
emms
adc
test
xor
xchg
sub
ja
outsb
test
pop
call
into
mov
add
int3
mov
jmp
push
ficoms
ficomps
sbb
push
mov
jno
pop
ret
pop
jle
and
inc
xorb
inc
sbb
inc
popf
pop
sub
adc
outsb
cli
jbe
fldenv
fwait
and
clc
roll
sbbb
sbb
push
pop
sahf
cmpsl
out
mov
and
in
or
pushf
pop
dec
or
jne
daa
leave
sbbb
inc
sti
sub
stos
aaa
jno
test
ss
or
or
lods
roll
adc
aad
pop
lods
and
push
testl
or
iret
mov
xchg
lock
and
les
lods
test
adc
je
aaa
stc
push
pop
cmp
mov
cmp
mov
orl
aam
lcall
or
subb
or
out
enter
sub
out
mov
sbb
pop
ljmp
roll
les
rolb
ret
out
cmp
imul
lock
jns
ss
cmpsl
popa
sub
add
sti
xor
jl
and
push
imul
cwtl
or
es
dec
lods
adc
mov
in
jp
daa
adc
sub
mov
jle
bound
bound
or
jne
hlt
xchg
clc
fwait
mov
sti
mov
sbb
push
pop
xor
dec
ja
cli
xchg
loope
dec
insb
into
out
cmpb
hlt
xor
int
or
das
imul
cld
orb
adc
pop
sbb
mov
call
rcll
and
adc
pop
das
loope
aaa
pushf
mov
cmp
in
xlat
jbe
add
inc
add
mov
push
mov
hlt
xlat
jb
jmp
dec
adc
pop
or
pop
ret
cwtl
js
and
pop
jmp
mov
popf
sub
lret
insl
cli
inc
push
xchg
push
or
ljmp
lret
inc
jle
cmp
dec
mov
ja
or
lea
and
mov
test
dec
data16
push
addr16
fwait
rclb
frstor
xchg
mov
or
push
fadds
in
daa
jne
ds
cmp
lea
jmp
or
lods
push
iret
add
pusha
cmp
adc
daa
and
mov
inc
mov
lret
sbb
mov
and
inc
pop
jns
inc
jns
sbb
shl
xchg
cmp
mov
int
adc
loop
mov
fdivs
test
or
dec
fistps
xor
pop
flds
bound
push
and
mov
jne
rclb
cmp
arpl
add
lea
cmc
je
imul
fwait
jle
pop
sbb
aas
dec
shll
cmpsb
fwait
int3
mov
adc
add
pop
pop
xor
jle
movsl
lcall
imul
scas
call
pushf
lea
push
call
and
mov
or
jmp
cmp
dec
gs
sbb
ja
fisubl
jg
push
iret
mov
mov
rol
sbb
and
sbb
lea
pop
cmp
test
push
and
lcall
jb
xlat
jmp
dec
pusha
inc
sub
addb
cmp
clc
in
xor
adc
pop
mov
or
iret
lds
nop
orb
inc
hlt
adc
mov
sarb
dec
push
aaa
jno
idivl
insl
dec
sub
popa
sbb
pop
mov
dec
insb
nop
popl
stos
inc
xchg
ret
jge
inc
xchg
ja
or
cmp
jle
aaa
iret
lret
fisubs
iret
aaa
dec
lcall
repz
cmp
hlt
repz
sahf
mov
inc
adc
or
xor
add
and
out
lret
imul
push
test
jmp
lret
mov
ret
movsb
fsubrs
sbbb
pop
sub
mov
lods
or
pop
xor
int3
popa
lds
xchg
addl
mov
cmp
scas
in
scas
loope,pn
daa
dec
or
inc
mov
sub
push
hlt
add
add
push
loope
push
imul
sbb
nop
aas
add
jns
and
xor
mov
inc
rol
enter
call
xor
push
aaa
sub
and
aaa
xchg
loope
out
jnp
push
rolb
outsl
mov
insb
sub
mov
stos
xchg
imul
sbb
push
sub
je
sub
fisubrl
aam
lcall
shll
loopne
lds
iret
adc
shlb
lret
scas
outsb
loop
or
popf
out
cld
hlt
adc
or
add
push
lret
orl
adc
sbb
fstps
and
ret
das
ret
add
or
adc
sbb
add
pop
lahf
ret
adc
mov
dec
scas
inc
add
xchg
or
mov
and
js,pt
pop
adc
hlt
xchg
pop
insb
popf
jmp
or
push
pop
js
inc
push
xor
icebp
ret
orb
popa
jle
pop
jl
div
cmp
cmpsl
rorl
sub
adc
cmc
lock
add
outsb
xor
adc
add
cmp
movsb
out
cs
cmp
or
sbb
and
divl
sahf
adc
mov
adc
jp
mov
iret
sti
pushf
xor
jne
xor
nop
andb
movsb
stos
lods
arpl
mov
ljmp
int
sub
mov
lea
iret
lds
test
rolb
pop
or
mov
addb
iretw
dec
inc
push
call
and
cltd
jmp
sbb
add
call
adc
movsb
mov
push
adc
or
jo
sahf
add
test
xor
xchg
aad
sti
ret
or
sahf
mov
sub
xchg
pop
add
in
ret
push
jl
adc
sub
mov
test
inc
test
add
sbbl
or
sub
dec
sub
movsb
or
int3
ja
push
movsl
cltd
mov
and
lahf
mov
push
pop
shrl
sbb
push
fidivrs
ficompl
jns
push
lcall
addr16
aas
fldt
xor
nop
bound
dec
rcrb
daa
mov
mov
and
and
pop
aam
and
mov
test
adc
rclb
or
ret
pop
mov
popa
jle
out
pop
iret
icebp
cmpsl
jno
js
ret
pop
adcl
and
or
pop
jbe
test
out
ret
mov
sbb
out
fisttps
fiaddl
fildl
push
pop
jo
xchg
sti
leave
xchg
scas
enter
roll
adc
push
xchg
sbb
scas
sbb
scas
cmp
jnp
shl
adc
mov
sbb
dec
adc
dec
add
and
xchg
mov
rcll
inc
rcrl
push
sbb
fwait
dec
aam
add
in
nop
mov
aas
loopne
cmpsb
inc
inc
in
sbb
add
jb
push
lret
sub
sahf
mov
jb
add
sub
stos
inc
mov
mov
xchg
and
pop
xchg
test
and
xor
mov
or
or
push
pop
out
rcrb
out
loop
or
scas
add
xor
adc
repz
xchg
cld
dec
ret
pop
sub
roll
dec
popf
sub
call
mov
dec
es
scas
fistpl
lret
pop
and
js
or
mov
sbb
enter
pop
dec
dec
lea
loope
arpl
cmp
and
adc
xor
jmp
in
xor
add
ljmp
mov
or
ss
incl
inc
jo
or
pop
xchg
jbe
add
ret
xor
or
stos
fwait
int
rorb
pop
push
sub
jp
dec
jl
or
movsb
repz
enter
frstor
inc
cltd
sbb
cmpsl
jno
jl
arpl
mov
hlt
sub
mov
add
lock
orb
pop
mov
adcb
push
lods
cld
pop
lret
dec
fs
imul
ret
mov
loop
mov
testl
pop
or
pop
mov
push
les
setno
push
xor
pop
popa
out
sbb
sbb
jle
jno
or
lahf
das
xchg
pusha
dec
fcmovbe
xchg
jo
jl
and
sbb
xchg
mov
xchg
ja
lds
pop
sahf
stos
rorl
cmp
bound
js
adc
mov
sbb
mov
gs
adc
dec
pop
mov
mov
xor
inc
fbld
dec
subb
xor
scas
xchg
add
push
pop
fs
fsubr
or
sbb
shlb
pushf
les
repz
mov
mov
dec
stos
xchg
jne
int3
iret
push
cmp
popf
jle
push
and
add
inc
fsub
mov
push
xchg
imul
dec
repnz
ja
sub
xchg
cmp
jne
jnp
enter
push
xor
xchg
xchg
push
dec
cmp
mov
in
dec
push
add
xor
mov
add
dec
pop
mov
pop
sbb
incb
jmp
ror
out
aam
push
mov
icebp
ret
insl
mov
cmp
inc
push
insb
add
pusha
cmp
shll
aas
add
pop
xor
into
pop
xor
nop
mov
xor
aaa
cmp
cmc
cmpsb
mov
daa
dec
mov
or
push
loop
pop
sbb
or
cmp
ss
decl
arpl
mov
pop
jo
cmp
sub
aaa
cs
push
in
add
iret
adc
dec
and
jo
and
pop
inc
ret
push
and
dec
movsb
adc
xchg
sub
sarb
xchg
shl
fs
cs
out
mov
insb
cmp
jae
pop
sti
sub
xchg
mov
ss
dec
out
fsubrs
lock
pop
fnstsw
push
in
das
out
or
or
faddl
nop
add
imul
seta
xchg
std
movsb
xchg
sbb
adc
sbb
sarb
and
popa
push
mov
outsl
sbb
push
add
jl
pop
mov
dec
push
andb
fnstcw
pop
sbb
das
in
popa
sarb
movsl
adc
lock
ljmp
enter
and
scas
push
push
shrl
outsb
pop
iret
mov
dec
je
sub
mov
ret
dec
leave
scas
xor
push
rclb
arpl
cmp
cmp
add
daa
cmc
enter
xchg
jmp
cmpsl
rclb
int3
xor
outsb
or
rolb
fistps
add
mov
xlat
cmp
enter
imul
dec
and
pusha
ljmp
jo
shll
jp
pop
enter
iret
xchg
mov
push
ret
shll
mov
ja
sbb
mov
push
sub
xor
xor
mov
enter
imul
lods
or
push
adc
dec
mov
pop
jo
mov
and
sub
scas
push
push
sub
lcall
inc
jmp
xorl
pop
popa
movsb
inc
or
data16
sbb
pop
adc
dec
sub
rcrb
cmp
jno
xchg
popa
add
push
into
outsl
lret
fimuls
mov
inc
and
jecxz
mov
mov
pop
jne
ffreep
sbb
stos
jnp
xchg
out
mov
adc
fistpll
xor
sbbl
int
mov
jge
mov
push
sbb
inc
cmpsl
jbe
stos
scas
rcll
inc
clc
fistpl
idivb
jle
popf
test
mov
xchg
out
sbb
xlat
test
ds
cmp
aam
mov
pop
mov
ds
cmp
adc
mov
aaa
add
xchg
icebp
or
out
add
add
mov
mov
jbe
xchg
js
sbb
xchg
mov
or
xor
int3
sub
add
js
mov
adc
and
les
xchg
adc
arpl
pop
adc
lret
cs
sub
inc
inc
jb
lret
je
mov
aam
lods
je
jbe
sub
push
das
ret
jno
sbb
lock
imul
dec
dec
jae
addb
pop
pop
sub
sahf
dec
mov
push
push
sub
add
adc
add
mov
fcompl
adc
sub
adc
pop
add
sub
fdivs
imul
mov
pop
outsl
sub
neg
or
dec
jo
push
mov
stc
pop
mov
inc
cmp
subb
cld
in
dec
xchg
clc
mov
nop
ficompl
faddp
cwtl
int
ds
imul
and
fstps
in
addl
adc
xchg
push
shll
es
into
pop
dec
leave
cmp
enter
or
lea
movsl
test
inc
adc
orl
clc
rolb
insl
jmp
pop
cli
xchg
mov
adc
aaa
add
je
jno
int
movsl
or
cli
les
lret
add
xchg
dec
es
lret
loopne
and
xchg
or
das
mov
nop
int3
jp
subl
push
mov
mov
pushl
jne
xchg
dec
es
outsb
xor
inc
bnd
mov
stos
iret
incl
mov
btr
mov
cmp
xchg
mov
sub
roll
push
sbb
scas
and
and
mov
adc
test
pop
decl
sub
pop
inc
nop
call
out
in
jo
dec
mov
dec
cmp
icebp
lea
dec
xchg
push
sti
cmp
jb
and
and
in
je
sbb
dec
mov
adc
js
mov
mov
jb
xchg
loopne
xchg
dec
ret
add
jns
imul
lock
sub
add
dec
or
jle
add
fcoms
cmp
and
test
iret
push
sub
jmp
mov
lcall
adc
push
das
adc
xchg
jne
je
aaa
add
cmp
xchg
test
mov
aas
and
pop
and
xor
aad
imul
inc
xchg
add
out
pop
shrb
jbe
lods
mov
arpl
inc
lret
pushf
mov
sub
loope
ss
inc
sbb
push
int
mov
shrb
rcrb
leave
pusha
aam
icebp
sub
add
and
xor
in
pop
inc
loopne
pop
xor
jge
xor
out
xchg
das
jecxz
pusha
and
rolb
and
call
ret
lea
or
pusha
add
cmpsb
rorb
push
popa
sahf
arpl
popa
mov
sbb
or
mov
mov
sub
push
sarl
add
add
movsb
jecxz
orb
sbb
add
jecxz
mov
sbb
pop
push
lahf
testb
add
xchg
mov
mov
add
push
jne
pop
in
imul
jo
mov
adc
dec
and
fldt
loop
mov
ds
xchg
and
mov
cld
fwait
lret
jecxz
push
cltd
daa
sub
lods
icebp
sbbl
push
out
stos
aaa
mov
pop
jecxz
inc
jp
or
hlt
fst
aam
dec
and
leave
loope
mov
out
cmp
jecxz
push
mov
loop
cmpsl
add
xchg
add
sub
data16
aas
leave
cwtl
inc
sub
or
insl
pop
sub
inc
shlb
ja
add
xchg
ret
jne
sahf
imulb
int3
arpl
xor
or
xor
test
cmpsb
in
cmp
and
sbb
jo
xlat
sbb
push
lcall
xchg
xchg
push
mov
mov
xchg
xor
loope
mov
add
sub
mov
jb
jge
adc
and
pop
punpcklwd
mov
jne
mov
push
dec
jecxz
cwtl
xor
xchg
lock
stos
imul
pop
pop
xor
mov
add
add
add
xlat
shlb
rorb
jmp
imul
js
mov
insb
mov
inc
lods
pop
adc
loop
clc
push
lds
iret
or
not
test
push
dec
lret
add
js
xchg
cmp
push
ja
cli
xor
fcoms
gs
lock
jle
pop
mov
movsl
ds
jp
jle
add
rolb
or
jae
movsb
inc
xchg
arpl
ret
gs
pusha
sbb
out
or
and
shlb
sub
movl
push
scas
sub
xlat
js
inc
jmp
xor
stos
stos
pop
loop
add
mov
dec
pop
sub
xchg
mov
insl
sub
xor
stos
movsl
sub
ss
sub
int
xchg
xchg
movsl
fwait
add
inc
or
imul
xor
arpl
out
mov
xor
or
test
mov
lcall
test
jecxz
scas
mov
iret
push
das
loope
or
cs
cmp
adc
scas
pop
and
and
xchg
jns,pt
mov
iret
or
mov
outsl
and
daa
pop
test
mov
test
jge
nop
xchg
popa
and
mov
call
sbb
lea
lret
negl
lret
out
mov
loopne
popa
xchg
jno
adc
and
pop
or
pop
dec
bound
scas
bound
inc
mov
pop
xchg
sti
pop
xchg
scas
pop
jecxz
mov
test
mov
inc
xor
or
cmp
divl
aas
fldenv
into
out
addr16
daa
mov
push
hlt
mov
insl
lahf
int3
aas
pop
mov
add
int3
jbe
clc
jbe
or
fnstcw
inc
pop
jle
pop
ds
push
pop
xor
add
dec
push
and
or
ja
pop
sbb
mov
push
data16
fistl
jb
push
xor
push
xor
sub
insl
mov
js
mov
adc
stos
mov
adc
sbb
xchg
scas
lds
pop
jecxz
movsl
sub
ljmp
mov
add
scas
push
mov
mov
and
mov
imulb
jo
adc
fadds
in
jmp
ret
sub
jl
xor
adc
mov
js
xor
cmpsb
iret
lret
jl
mov
mov
sbb
add
dec
or
add
fnstsw
xor
iret
fadd
pop
jecxz
adc
lcall
sub
adc
stos
imul
insb
lahf
mov
sub
arpl
fadds
or
sub
pop
push
dec
out
ret
fimull
inc
or
test
xor
int
push
movsb
popa
add
lret
sub
push
cmp
push
push
xor
shlb
add
sbb
xor
mov
or
sub
adc
cmc
psubsw
add
je
push
add
insb
adc
mov
push
inc
sub
xor
xchg
mov
sti
sub
inc
sub
and
loope
popf
dec
add
popf
inc
or
imul
in
test
add
pavgb
addr16
fadds
push
inc
leave
lock
and
cmpsl
arpl
int3
cmp
addr16
imul
jge
pop
pop
mov
xchg
xor
sub
cmp
rorb
daa
repnz
aam
pop
ret
dec
mov
push
dec
aad
fdivr
pop
fwait
das
jne
or
push
popa
scas
gs
pop
into
and
movb
dec
js
jno
mov
in
cmp
idivb
or
subl
add
pop
mov
ja
cs
adc
out
rolb
pop
pushf
adc
mov
jo
adc
int3
xlat
push
call
jnp
lods
mov
sub
add
scas
sarb
js
cmpsb
mov
sub
pop
lods
add
mov
cld
je
adc
cs
jo
stc
and
push
jnp
test
iret
sub
outsl
mov
inc
movsb
push
popa
ret
push
inc
adc
shrb
jb
xor
in
cld
xor
bnd
dec
and
fisttpl
in
jo
lock
rcll
mov
fdivs
push
cmp
test
push
jo
mov
addb
sti
xchg
rcr
lock
sahf
loopne
mov
mov
adcl
into
movsl
adc
arpl
xor
xchg
push
add
les
scas
addb
sbb
imul
out
lcall
das
int3
jmp
add
add
popl
sub
jmp
and
cmp
sbb
sub
fisttps
mov
push
sbb
and
xchg
and
pop
or
pmaxub
insb
mov
and
pop
icebp
popf
inc
sbb
out
push
clc
and
add
cmp
out
cld
stos
push
cmpsb
mov
add
sbb
in
faddp
push
fbld
and
fbstp
outsl
xchg
lret
lcall
add
pop
or
or
or
pop
lods
lods
cmp
push
fwait
shll
push
mov
sub
popa
pop
inc
stos
rcll
sub
aam
inc
or
mov
rclb
call
and
jmp
push
out
dec
bswap
jne
push
mov
sub
and
xchg
add
xchg
andl
aaa
lret
xchg
mov
loopne
dec
mov
or
mov
pop
jnp
mov
inc
arpl
lock
in
inc
and
cmpsl
mov
mov
and
mov
out
out
adc
repz
fs
sbb
mov
and
mov
push
xor
sub
adc
inc
cmp
je
inc
push
and
xor
jo
mov
jl
loopne
xor
fadds
xchg
push
add
pop
adc
pop
repz
and
gs
pusha
cmc
out
das
arpl
sahf
fmuls
stos
repz
inc
pop
pop
mov
std
inc
push
shl
inc
icebp
push
mov
cmp
adc
dec
andb
or
add
inc
xchg
add
loope
sti
rorb
dec
xor
int
lods
ror
cmpsb
xchg
es
orb
push
push
jnp
xor
and
or
iret
loopne
fwait
popf
sarl
je
nop
push
insl
jae
cmp
ret
fdiv
ja
mov
out
add
es
pop
lret
lea
xlat
lods
bound
inc
sub
subb
add
and
cmp
out
inc
fwait
cmp
in
fdivrs
rolb
add
lret
or
fistpll
std
mov
pusha
mov
fwait
stc
sub
fs
call
xor
outsb
movsb
sbb
xchg
popa
push
pushf
mov
inc
imulb
sbb
inc
sub
or
jp
jp
testl
inc
repz
xlat
jge
jo
add
imul
pushf
test
cmpsb
dec
xchg
out
das
push
pushf
adc
sub
jecxz
adc
xchg
push
sub
xchg
sub
xor
pop
fcoms
mov
mov
mov
out
nop
es
ja
js
iret
pop
pop
pop
cs
cmp
dec
mov
cmp
or
jmp
inc
loop
pop
imull
pop
push
cmpsb
adc
sbb
loopne
data16
mov
add
sbb
popf
fwait
into
daa
add
add
push
jb
data16
cmpsl
aas
mov
mov
jmp
cmp
cmp
jno
xchg
sub
aaa
xchg
out
xlat
out
and
jno
cli
lret
pop
push
lcall
arpl
and
sub
lahf
pusha
and
jne
int
jo
sub
int3
jp
out
aaa
sbb
xlat
icebp
add
verw
dec
lea
cwtl
popa
inc
loop
js
jbe
mov
add
sub
cltd
mov
pop
dec
inc
cmp
sub
add
sti
sahf
jne
clc
fdivrl
and
cmc
imul
lret
fs
push
shll
dec
lahf
jno
lcall
or
sub
push
add
pop
bound
iret
mov
popf
aam
fwait
cmpsl
xor
jp
push
inc
outsl
cmp
cmpsl
mov
movsb
lods
and
movsb
add
lahf
test
stc
dec
cmp
cmp
sbb
pop
out
in
inc
dec
mov
loop
or
xchg
jne
or
insl
nop
mov
std
jo
pop
cmc
scas
sbbl
mov
or
fisubs
dec
adc
lock
mov
fsubrl
ljmp
cmp
shl
jo
xlat
sub
outsl
mov
dec
adc
or
mov
fiaddl
fs
pop
jnp
aad
out
add
clc
cmp
xor
imul
rorb
sbb
or
adc
xor
mov
mov
rorb
rorb
xor
cmc
inc
sarb
sti
pop
push
jmp
cmp
cld
xchg
es
ret
jbe
aaa
sar
hlt
ficoms
rcrb
insb
push
in
sub
movsb
push
and
push
jbe
in
dec
cmp
loopne
jno
rolb
loop
out
mov
mov
pop
jo
je
cs
mov
imul
jge
add
jno
cmpsl
push
jecxz
fstl
into
fisubrl
xor
scas
aas
rol
shlb
lret
push
frstor
test
mov
ldmxcsr
pop
lret
dec
add
pop
cwtl
xor
push
adcl
cmpb
jge
cmp
jp
out
and
pop
dec
push
loopne
cmpsl
scas
mov
iret
mov
popa
add
xchg
xchg
xchg
jnp
mov
nop
nop
js
jbe
pop
xor
xor
fidivrs
cmp
push
cmp
push
or
dec
mov
adc
jle
hlt
jg
adc
bnd
js
jb
sbb
and
mov
mov
bound
mov
mov
jnp
sub
xchg
flds
outsl
dec
mov
mov
add
mov
rorl
inc
pop
ret
cmc
notl
icebp
and
lods
mov
xor
mov
mov
outsb
cmpsl
mov
mov
add
dec
add
fs
adcb
xor
fldenv
bnd
sbb
lcall
xor
addb
push
int3
pop
rclb
sbb
sahf
and
loopne
lahf
cmp
daa
scas
and
and
xor
mov
daa
cs
bound
and
sbb
in
pop
push
xchg
scas
jo
push
ret
insl
gs
dec
or
or
jo
xchg
push
out
cld
jno
adc
stos
ficoms
mov
push
and
xchg
test
inc
lret
js
add
adc
push
gs
cmpsl
pusha
pop
shl
dec
xchg
rol
in
ret
jno
aas
pushf
in
int3
clc
add
and
mov
loope
sbb
dec
dec
sbb
sub
or
inc
sub
test
cli
icebp
js
arpl
dec
lret
sub
push
in
iret
data16
addb
or
gs
mov
scas
test
dec
imul
mov
adc
jp
lea
in
sbb
mov
add
ss
movsb
jcxz
daa
push
mov
test
pop
mov
ja
adc
push
push
push
jo
aaa
hlt
jae
loopne
mov
iret
aaa
push
sub
mov
inc
insb
xchg
cmp
mov
cld
js
ret
and
fwait
pop
pop
fmulp
sbb
daa
adc
sub
rcrb
mov
in
sub
mov
jge
lret
lret
add
xor
es
xor
rorl
dec
add
mov
sbb
iret
mov
outsb
push
inc
mov
fadds
push
inc
pop
js
or
cmp
and
inc
mov
jno
sti
aaa
xor
test
jp
ds
fcoms
push
push
shlb
xor
dec
popf
int
add
and
xlat
movsb
push
cmp
xor
dec
into
mov
ja
jl
pop
dec
cmp
add
or
inc
sub
or
add
repnz
push
push
pop
rolb
or
xchg
push
les
sub
xchg
cwtl
pop
addr16
jo
cmc
jo
daa
cwtl
or
lcall
cmp
out
cwtl
lahf
inc
fmul
int3
sub
push
push
cmpsb
push
cmpsb
shlb
or
cli
ss
iret
stc
loope
add
stc
mov
out
pop
cmpsl
fldcw
mov
jnp
sbb
add
or
adc
in
test
mov
in
sub
cmpxchg
sub
imul
out
shlb
adc
roll
or
mov
aam
iret
inc
in
add
les
lock
pop
pop
or
add
pop
push
aas
out
rcrb
cwtl
cs
scas
jb
xor
sub
adc
int
lea
sti
fcomps
testb
lea
jg
mov
and
jle
subl
push
cld
add
inc
aas
xor
cmp
xor
sbb
fwait
adcb
push
add
out
cltd
mov
jae
imul
test
jne
loop
jge
inc
std
test
loop
sti
fnop
mov
cltd
xchg
add
inc
dec
jmp
or
movsb
mov
mov
xchg
adcl
jne
ja
or
je
faddl
and
ret
imul
add
lahf
xor
adc
push
xchg
xchg
cwtl
nop
adc
xchg
dec
cmp
fsubs
in
mov
es
rol
cmp
jl
arpl
les
mov
xlat
or
out
xchg
rorl
fldcw
add
xor
or
test
jle
or
inc
pop
aas
fiadds
sbb
sub
dec
add
mov
add
lods
add
nop
sbb
inc
addr16
mov
popl
test
mov
cs
fildll
cld
inc
mov
mov
lds
mov
jmp
push
sbbb
fildl
mov
jno
in
aam
jecxz
sbb
mov
icebp
orb
cs
sbb
movl
adc
or
cli
and
cld
adc
cmp
fs
add
je
jecxz
adc
mov
xor
sub
mov
loopne
pop
mov
mov
mov
cmp
or
inc
pop
sub
fistpll
and
or
inc
scas
cli
jo
mov
lea
mov
icebp
add
ficoml
lss
arpl
xor
sti
jp
push
cld
fucomi
sub
add
in
mov
shll
adc
mov
jle
and
push
lds
movb
jle
inc
pop
jp
push
add
das
sbb
pop
or
movb
les
loop
sbb
adc
insl
dec
and
aaa
pop
adc
dec
rol
jbe
xor
dec
daa
mov
push
fistl
jbe
insl
ret
fnstenv
or
xchg
decb
mov
push
push
cmp
adc
add
shll
xor
loopne
jnp
out
out
mov
fistpll
shrl
fisttpl
inc
xchg
push
out
loope
fsubp
loope
sbb
je
lret
adc
icebp
xorl
add
test
or
shrb
imul
pusha
xchg
sbb
dec
and
insb
outsl
push
mov
int3
add
cwtl
or
mov
in
fstl
stc
jl
mov
pushf
xor
movsb
push
repnz
es
dec
data16
and
xchg
in
rcrl
outsb
sbb
je
inc
in
shrb
sub
rolb
lods
fmull
push
push
cld
push
sahf
xchg
jge
or
jne
ret
insl
sub
mov
inc
les
jb
lcallw
into
hlt
push
push
add
ror
cmp
jmp
push
pop
adc
mov
pushf
outsl
sbb
push
adc
xor
sbb
xor
and
das
add
push
fadd
adc
mov
mov
mov
adc
mov
enter
lock
xor
loopne
adc
inc
lcall
iret
call
inc
and
inc
xorl
pop
pop
shll
or
loopne
mov
data16
pusha
xchg
insl
cmpsb
rolb
cmp
adc
ficoml
mov
pop
stc
inc
decb
lock
xchg
les
cmpsl
jecxz
adc
imul
movsl
mov
mov
pop
xchg
or
and
add
sub
pop
pop
or
dec
fcomps
fldenv
dec
call
lret
cmp
jl
adc
sub
dec
jg
or
and
jnp
adc
xchg
mov
subb
sbb
add
push
xor
lahf
aam
add
fidivs
test
lea
sbb
rolb
xchg
stos
add
arpl
ret
and
push
mov
hlt
pop
sbb
cmp
adc
mov
dec
and
push
das
arpl
add
ss
insl
jae
ficomps
fldenv
xor
or
push
ret
add
lock
push
rclb
ret
imul
jns
sbb
add
and
jmp
xchg
clc
inc
xchg
loop
test
test
por
sbb
ret
inc
out
inc
push
loopne
movl
mov
stc
cmpsb
mov
sbb
and
jge
cld
sbbl
add
shll
push
sbb
andb
add
es
mov
sbb
loope
xlat
sbb
push
iret
test
and
gs
push
cmp
rol
xor
iret
js
icebp
je
push
jne
cltd
imul
jp
test
movaps
or
pop
iret
icebp
scas
push
stos
and
xchg
sbbb
dec
xlat
or
pop
cmp
pop
cmpsl
rcl
into
mov
or
mov
lret
mov
enter
cmp
out
jle
add
clc
push
mov
iret
mov
cmp
jmp
xor
int3
fwait
mov
and
sub
mov
adc
xchg
push
inc
and
shl
daa
mov
add
in
jg
mov
icebp
push
test
hlt
and
aam
xor
in
jecxz
les
mov
mov
in
adc
dec
add
iret
aas
jb
pop
lcall
lea
adc
fiadds
lea
rolb
movsb
icebp
loope
mov
arpl
test
stc
inc
loopne
or
inc
pop
inc
data16
or
into
mov
add
mov
popf
mov
push
mov
test
daa
adc
cmp
mov
cmp
add
add
pop
lcall
xchg
outsb
out
mov
dec
pop
scas
xor
or
add
repnz
cltd
movsb
out
fmuls
enter
or
mov
popf
xchg
xor
cs
repnz
out
gs
xchg
jp
scas
jnp
mov
push
push
cld
es
ljmp
loope
nop
repnz
mov
xchg
mov
or
adc
and
insl
push
arpl
push
outsl
and
cmc
xchg
jb
add
test
dec
or
rolb
call
imul
je
pop
xchg
or
shlb
mov
adc
outsl
add
adc
mov
dec
jecxz
push
xchg
dec
incb
bswap
into
add
fistpl
add
add
inc
adc
mov
dec
dec
mov
or
xor
sub
scas
mov
adc
js
sub
lcall
push
ret
push
sbb
andnps
pusha
shrb
dec
xchg
xor
out
mov
adc
movsb
pop
mov
and
iret
dec
inc
inc
rolb
pop
lcall
dec
stos
ficompl
loope
and
inc
mov
fsubs
int3
and
aad
pusha
cmc
movsb
pop
sti
loop
clc
ja
xor
or
mov
imul
or
add
test
or
lods
add
gs
inc
sbb
movsl
lock
dec
cmp
ds
add
cwtl
fists
pop
mov
jecxz
addb
adc
mov
push
aad
pop
cmp
sahf
ret
dec
paddd
sub
xor
pop
add
mov
xchg
add
aas
xor
xor
stc
xchg
add
or
addl
divl
es
adc
dec
enter
push
dec
imul
add
ja
js
inc
inc
inc
das
sub
mov
out
rcll
cmp
aam
jno
jle
mov
or
js
addr16
in
cli
sub
push
add
imul
mov
imul
out
push
mov
pop
frstor
adc
scas
cmp
call
push
jle
pop
test
push
jbe
jne
stos
lods
je
pop
fdivrs
sub
cmpsl
dec
pop
out
xchg
adcl
iret
jle
add
dec
xchg
push
or
aaa
adc
xchg
lods
stos
or
ret
test
push
ja
sub
je
or
and
pop
fstl
jb
mov
sub
lcall
ret
adc
pop
inc
stos
stos
push
push
cmp
outsb
xor
jns
or
in
test
clc
add
or
pop
leave
test
lret
testb
xor
fisttpll
mov
xchg
xorl
pop
xchg
shlb
test
pusha
aaa
movsl
push
bound
or
sub
or
shlb
out
mov
jecxz
xor
xor
jg
jno
sbb
iret
in
sti
loope
cmp
sar
movl
xor
sub
or
test
leave
adc
ja
jnp
or
rcrb
daa
adc
mov
sbb
or
ljmp
cmp
add
push
jbe
ljmp
sbb
std
je
mov
jp
jbe
mov
shll
outsb
dec
fcmovbe
pop
sbb
daa
cmp
mov
push
pop
pop
fs
mov
jb
add
rclb
or
add
or
addb
aam
out
adc
mov
cmp
and
sub
into
movsl
test
sbb
xchg
push
add
xchg
add
xchg
adc
dec
lods
imul
or
add
js
inc
sub
dec
fsubs
xor
and
ss
mov
jecxz
nop
jno
lods
push
call
imul
sbb
xchg
add
or
and
pop
mov
pop
or
xorl
push
jo
aaa
push
add
lds
sbb
jl
mov
mov
leave
pop
cltd
add
popa
lods
add
sub
push
cmpsb
andb
sahf
inc
sbb
pop
jle
sbb
dec
jnp
lret
je
fwait
adc
add
mov
and
jnp
mov
imul
mov
les
xchg
mov
dec
xchg
je
aaa
push
ds
adc
mov
sub
lods
inc
cmpsl
dec
mov
andl
inc
xchg
inc
mov
add
adc
daa
sbb
imul
xchg
test
dec
leave
rorb
xchg
repz
sub
test
clc
push
les
ret
jp
test
mov
cmp
or
loopne
mov
xor
jo
xchg
push
sub
xor
adc
adc
mov
cwtl
fs
mov
mov
lcall
adc
filds
imul
push
mov
subb
mov
xchg
xor
ret
loopne
rolb
hlt
push
loopne
pop
lods
lret
loop
and
sbb
inc
cmp
lods
ljmp
or
adc
cwtl
cli
sub
andb
cli
add
ja
popa
test
xor
clc
out
add
mov
roll
pop
or
jnp
push
in
mov
push
adc
rcrb
sub
pop
adc
inc
cwtl
and
pop
dec
lods
xchg
push
cmc
jmpw
pop
xor
out
sbb
cmp
dec
addr16
xor
xor
sub
mov
adc
jns
inc
jecxz
mov
cmp
pushf
push
xchg
les
adc
add
shll
jmp
test
push
iret
loop
sbb
and
jo
adc
imul
cltd
out
mov
or
xchg
or
cli
xor
test
je
jo
out
push
cmpsb
loopne
xchg
out
cmp
sbb
dec
xchg
mov
push
sub
push
and
jnp
mov
cmpb
sub
mov
push
or
out
arpl
jno
das
aaa
xor
and
or
fisubrs
aas
test
push
cmp
pushf
ret
das
mov
mov
add
xor
jp
bnd
dec
add
inc
jbe
cwtl
xchg
loopne
movups
imul
hlt
cwtl
mov
jb
pop
mov
dec
mov
dec
mov
aaa
aaa
iret
fs
xlat
jmp
jb
loopne
sub
push
movb
or
add
or
icebp
rolb
data16
insb
adc
cmp
add
xor
gs
mov
icebp
adc
sbb
cmpl
daa
les
je
pop
scas
pusha
lea
mov
insb
push
outsl
sub
subl
jl
or
adc
or
rcrb
push
adcb
add
jmp
pop
sub
ficomps
add
sub
lods
cmp
and
push
ret
pop
and
ja
test
lods
jns
push
push
mov
sahf
xor
mov
mov
call
push
dec
lock
lcall
popa
and
andl
jge
push
in
sbb
push
loope
lock
mov
test
cmpb
and
sbb
cmpl
sbbl
sub
add
lods
cld
mov
sbb
fidivrs
push
push
jge
mov
add
jno
iret
and
push
das
sbb
add
sub
mov
inc
addl
sub
add
add
pop
jns
lock
jae
and
xorl
sub
pop
mov
loope
popa
and
das
loop
cmp
ss
shrl
adc
or
jns
sbb
push
and
les
xchg
subb
sub
enter
adc
push
xor
ret
mov
ret
mov
cld
movsl
add
stos
scas
push
mov
jo
sbb
or
jo
cwtl
mov
addl
sub
inc
ljmp
jnp
inc
pop
mov
cltd
xchg
js
adc
movsb
imul
sbb
jmp
add
mov
cmp
mov
in
inc
mov
sbb
dec
or
or
mov
pushf
inc
icebp
dec
jo
push
inc
aaa
cmpsb
mov
je
xor
push
and
sbb
into
pop
bound
mov
cmp
sbb
adc
mov
add
aad
or
cli
dec
jecxz
dec
loopne
addr16
js
ficompl
inc
jns
or
popa
add
mov
cmp
push
std
into
outsb
add
mov
push
inc
sahf
ret
add
fsub
cltd
mull
aaa
mov
adc
mov
add
lahf
jecxz
sarl
add
dec
rcrl
pushf
or
adcb
addb
cld
cmp
jae
cmp
icebp
pop
sub
mov
mov
add
ret
movsb
jbe
test
jg
fcmovnu
push
out
in
cmp
push
loopne
cmc
scas
jge
add
in
outsb
fisubs
and
and
or
inc
push
scas
and
lock
fxch
testl
sbbb
mov
push
jbe
enter
leave
movsb
outsb
and
inc
stos
jg
adc
lods
in
xor
aad
ds
pop
sahf
lods
cwtl
lods
cmp
aas
inc
idivb
mov
popa
inc
call
xor
push
lret
cmp
loopne
xor
jbe
or
pop
xor
cld
push
and
cld
jbe
test
push
in
pop
mov
stos
lret
jb
imul
insb
sti
fucomi
ret
stos
shr
push
rorb
scas
inc
cmpl
lock
jbe
push
cmp
fcomip
loopne
imul
mov
out
mov
xchg
add
push
dec
sbb
adc
loopne
out
test
xor
loopne
mov
push
fmull
jno
je
or
or
push
push
mov
ret
add
push
std
jle
orb
sub
aaa
push
mov
pop
or
xchg
lock
loope
pop
pop
sbb
push
xor
rcr
int3
push
testb
or
or
testb
xchg
dec
or
sbb
mov
jno
push
lods
orb
xor
dec
jno
loopne
xor
cmp
xor
loopne
push
je
push
cwtl
lock
and
adc
cmp
xor
mov
sub
lcall
pop
xor
inc
adc
jb
ljmp
dec
and
dec
sub
and
test
add
hlt
xor
inc
insl
push
inc
or
xor
pop
fsubl
outsb
in
cmp
out
and
pop
mov
jns
shll
mov
cli
sub
push
xor
mov
or
arpl
jg
cmp
mov
mov
xor
push
dec
repz
sub
icebp
js
adc
jle
popa
or
out
out
pop
cmp
xchg
in
fsubrl
dec
loopne
pop
outsb
testb
mov
cli
add
jbe
push
aaa
nop
bound
and
negb
shll
test
or
mov
jbe
out
test
or
jo
sbbb
jl
or
rol
jb
dec
push
iret
sarl
or
mov
and
push
cmpsl
push
scas
test
pop
in
jl
jno
mov
pusha
call
loopne
stos
sbb
mov
hlt
rol
lds
stos
xchg
aaa
ret
sbb
dec
mov
stos
les
outsl
and
adc
push
fistpll
aam
add
notb
and
into
enter
adc
pushf
ljmp
cmp
inc
mov
stos
insl
add
cmp
in
rcrb
call
aaa
inc
add
inc
sbb
int3
dec
mov
cmpsl
push
or
and
dec
fbstp
xor
fbld
push
ja
loopne
and
jo
lea
ljmp
outsb
jbe
fwait
jle
jo
push
xor
enter
pop
mov
aaa
xchg
out
jecxz
cmp
sbb
sbb
cmpsl
bound
std
pushf
sbb
loopne
add
xchg
adc
add
mov
es
xchg
add
dec
dec
iret
in
pop
push
add
adc
popa
push
inc
jno
dec
out
sbb
push
ficoms
clc
add
inc
inc
and
cmp
mov
mov
and
xor
jp
add
xchg
cltd
push
pop
jns
fistl
xor
push
cmovo
or
das
test
loope
mov
insb
ss
ljmp
push
jno
movsl
les
mov
mov
cwtl
cmp
movsl
test
sbb
das
das
jns
mov
xor
jns
incl
pushf
sahf
inc
sar
outsl
lods
sti
jge
scas
inc
cltd
jnp
cmpsb
outsl
jp
or
cmp
pop
popa
orb
mov
sbbl
and
stos
inc
das
into
xor
mov
out
dec
mov
testl
shll
lret
jbe
sub
js
jo
rcr
fcmovnb
roll
add
jb
cmp
xchg
fs
sbb
call
lods
fistpll
data16
iret
xchg
loopne
xchg
shl
pop
lret
jo
das
sub
ja
sbb
fcoms
inc
xor
add
daa
xor
pop
pop
lock
dec
scas
int
pop
mov
jecxz
test
xor
or
nop
std
add
ljmp
repz
shll
ror
mov
add
in
push
pusha
cwtl
rcl
sbb
int3
inc
push
shl
cltd
or
pop
ret
add
je
pop
ficomps
mov
adc
insb
lock
orb
jnp
addb
lods
sub
inc
aas
pop
inc
test
pusha
mov
and
cmp
push
fldenv
sub
sub
dec
pop
push
sub
or
dec
in
adc
daa
out
xchg
inc
jbe
icebp
add
cld
movups
mov
xlat
sbb
add
adc
jp
add
push
aaa
jno
push
cmpsl
out
jmp
jge
clc
dec
psubb
mov
adc
adc
sub
cld
fwait
or
movsb
fsubrl
hlt
add
lock
cmc
sub
jmp
inc
nop
pusha
das
aas
call
inc
jo
addb
mov
addl
push
cs
add
int
pop
repz
or
sbb
iret
js
inc
pop
outsb
lret
push
add
daa
outsb
jge
shll
rorb
rorb
sbbl
cli
adc
cwtl
xlat
out
inc
lock
sub
cltd
add
and
shrl
sub
jo
push
xor
out
mov
add
xchg
dec
sbb
nop
push
lcall
jecxz
leave
mov
and
adc
xor
mov
mov
data16
dec
lods
sarl
mov
rcrb
xchg
das
dec
aas
mov
fstpt
fstps
add
mov
insb
pop
testl
add
sbb
push
fldl
sbb
push
bound
out
add
fcoms
shll
hlt
ret
mov
frstor
test
pop
mov
or
sbb
sbb
cmc
push
mov
rcrl
lret
movsl
lock
mov
sbb
push
dec
mov
mov
loopne
or
roll
cmp
fcoms
jno
aam
xchg
cmp
push
loope
inc
cmpsl
jo
daa
ret
mov
or
add
es
dec
aam
hlt
jb
and
lahf
into
cmc
add
pop
xchg
fadds
faddl
jecxz
mov
test
xchg
jne
or
andl
sbb
push
sub
push
orl
and
or
loopne
pmaxub
or
add
bound
jne
mov
adc
xor
pop
or
fdiv
dec
rcrl
fsubs
repnz
out
push
and
lock
add
and
pop
add
cmp
cmp
cmpsb
aas
add
stos
mov
js
fisubrs
or
xchg
or
icebp
cltd
aad
push
mov
dec
pop
mov
jp
mov
subl
loopne
pop
daa
jno
sbb
call
jg
pop
inc
jo
pop
cmp
jle
pop
jne
sbb
imul
js
cmpsl
jb
mov
scas
pop
pop
pop
lods
lds
ss
dec
push
cmp
xchg
lret
into
mulb
push
mov
dec
aas
cmpxchg
nop
jge
mov
sahf
xchg
pop
addl
jg
add
push
movsb
xchg
and
ljmp
mov
jo
loopne
xchg
popa
cmp
mov
and
jge
ret
cmp
idivl
mov
pushf
test
movsb
fimuls
mov
sbb
mov
jnp
xchg
rorl
movsl
sbbb
push
inc
cmp
mov
aam
inc
mov
testl
ror
fwait
sub
mov
jo
xor
xchg
test
sbb
cmp
ret
gs
ja
loop
out
fdivr
sub
pop
js
cmpsb
mov
push
mov
js
adc
sbb
stos
cmp
loopne
push
ss
mov
cltd
iret
mov
pop
add
and
cmp
dec
mov
mov
andb
scas
stos
push
mov
add
popl
add
add
popf
sub
sbb
xlat
mov
loope
pusha
inc
popa
lds
cld
jb
xor
flds
sbb
mov
lret
leave
push
dec
adc
enter
fcoml
movsl
xchg
or
ja
outsb
ret
std
sbbl
insb
int3
pop
or
in
add
test
push
dec
hlt
sbbl
int
popa
in
xchg
test
test
out
sbb
ljmp
sarb
and
xlat
lods
mov
sub
cmp
lcall
pop
cmpsl
xor
add
icebp
mov
mov
filds
add
dec
mov
sub
mov
nop
in
xchg
mov
pop
cltd
push
sub
out
notl
aas
cmp
add
sub
or
dec
insl
jp
repnz
in
add
nop
sbb
rorb
sbb
rep
push
push
sub
fcmovb
not
fwait
sub
aaa
and
dec
jecxz
cmp
lret
sarl
add
push
dec
fwait
movsl
push
loope
cmp
out
dec
addr16
adc
xchg
jno
xor
mov
xor
cmp
lods
mov
lea
test
jno
xor
sbb
push
ja
cmp
aas
sbb
rcll
daa
jp
xor
push
cwtl
or
jne
sbb
mov
cld
mov
mov
jb
pop
xlat
call
jno
mov
aad
inc
mov
fistpll
adc
cvtps2pi
pop
and
add
inc
dec
pushf
add
mov
lods
test
jmp
or
and
iret
cmp
push
adc
rolb
psubq
shrl
add
rorb
nop
bound
daa
add
aas
cltd
jle
add
and
sub
or
ds
rolb
mov
shlb
mov
aas
in
inc
push
les
popa
inc
add
cli
inc
and
jo
add
push
add
pop
lea
bound
pop
mov
out
dec
or
add
in
scas
push
loope
xor
out
pop
clc
adc
aaa
sbb
add
sahf
sub
sub
lods
pusha
mov
dec
scas
xchg
and
push
mov
add
add
call
cmp
cmp
jmp
pop
mov
cmp
xchg
outsb
ret
or
jmp
xchg
scas
and
popa
rolb
test
mov
and
test
aam
ret
in
inc
push
adcb
ficomps
push
in
push
mov
jbe
sub
jmp
xchg
out
add
inc
xor
jae
pop
sbb
sub
sbb
rolb
cs
xchg
jle
scas
push
and
xchg
add
popa
xchg
or
add
daa
and
adc
add
fmuls
inc
adc
jg
mov
xchg
clc
and
sbb
cmp
fstpt
xchg
in
add
sbb
cwtl
cmp
iret
mov
cmp
dec
loopne
int
rolb
jp
mov
cmp
or
in
cmpsl
ficomps
faddp
mov
adc
xor
mov
scas
out
ret
daa
jns
dec
pop
sbb
jbe
imul
arpl
pop
fadds
cmp
pop
fmuls
and
and
ret
add
sahf
mov
xchg
jmp
es
xchg
inc
clc
sbb
dec
sub
add
shrl
test
and
lret
aad
pusha
or
mov
dec
and
data16
jno
mov
popa
push
inc
cmp
mov
movsl
hlt
push
xor
sbb
nop
aaa
and
xchg
push
loop
cmp
xorl
sub
sbb
arpl
sub
les
push
push
add
xchg
sbb
mov
call
pop
dec
jo
in
xor
lock
imul
lods
or
out
and
xchg
cmpsl
ja
scas
adc
and
call
adc
dec
xchg
das
movsb
nop
lea
jle
lahf
mov
or
push
or
lahf
xchg
mov
test
dec
cmp
dec
push
xor
adc
popa
orl
imul
cwtl
clc
push
ret
loopne
pop
sbb
fldcw
jne
dec
test
movsb
divl
rolb
cmpsl
sub
and
data16
jb
ficoms
jb
pop
xor
sub
adc
adc
inc
popfw
sub
push
and
pusha
xor
das
lds
inc
mov
jnp
xor
mov
movsb
lahf
fstps
inc
push
nop
ror
mov
and
lahf
sub
subl
inc
mov
sub
scas
lods
mov
into
pop
mov
fst
dec
cmp
sbb
push
add
lock
sbb
loop
cmp
data16
aaa
mov
mov
jl
sbb
dec
fisttps
ja
xor
inc
sbb
test
or
add
aad
sbb
and
dec
mov
add
jge
xchg
jmp
les
mov
lcall
int3
mov
in
mov
or
mov
xchg
and
pop
and
add
int3
cltd
dec
or
sbb
lret
lret
iret
add
add
cmp
call
mov
int3
cmc
cs
scas
popa
es
cmp
sbb
xor
or
sub
cs
inc
lock
andl
nop
ror
push
push
ret
shrl
cmpsb
movsl
inc
test
jecxz
push
add
sahf
inc
setns
pop
push
or
sub
sub
or
int
mov
ss
imul
add
or
adc
fdivrl
fldt
shlb
xchg
test
mov
push
and
xchg
rolb
or
pop
mov
inc
sub
jno
adc
test
lea
mov
pop
fwait
gs
mov
lds
cmp
sbb
sbb
rorb
pop
iret
xchg
fwait
inc
xchg
test
movsl
or
jge
mov
push
mov
repnz
jle
lods
sub
adcl
loopne
fmull
cmpsb
faddp
popl
add
dec
insb
es
mov
lea
jg
test
scas
test
loope
shlb
je
loop
in
fcmovu
add
scas
xchg
jmp
add
mov
xchg
aam
sbb
cmp
pop
sub
adc
sbb
push
ret
mov
mov
clc
cmp
mov
add
sub
mov
xchg
or
inc
fadd
jmp
push
dec
movsl
pusha
nop
lock
ljmp
push
mov
mov
pusha
add
add
mov
mov
loope,pt
fdiv
mov
es
add
xchg
addb
adc
sbb
into
inc
roll
and
loopne
ror
vmwrite
cwtl
clc
je
push
aaa
int3
and
test
cwtl
mov
inc
movsb
hlt
ror
cltd
int3
leave
jno
dec
adc
insl
jb
mov
fldl
lds
call
fistpll
push
sub
xor
push
or
push
add
fsubs
mov
test
and
dec
adc
push
fsubs
sbb
jle
shrl
xor
popf
fsubl
mov
and
das
xor
adc
or
cmp
sub
inc
sub
pop
and
sbb
ja
jbe
js
jns
pop
adc
lods
and
es
nop
dec
movsl
lret
enter
sahf
iret
jge
mov
mov
rclb
stos
jo
lret
xchg
ds
test
addr16
lds
sbb
or
sbb
ret
mov
pop
and
pop
xor
or
bound
or
sbb
push
popa
mov
repnz
adcl
dec
adc
xor
adc
movsb
insb
mov
xchg
inc
insb
and
hlt
cmpsl
je
mov
fs
mov
pop
pop
pop
cmp
mov
test
sub
push
pop
mov
repz
inc
jae
pop
fdivp
in
imull
mov
xor
out
pop
and
jne
fs
lea
xor
insl
ss
or
cmp
fdivs
or
pop
gs
sub
subb
add
mov
gs
incb
mov
andl
sub
loope
pushf
mov
in
shrl
ljmp
fs
xchg
pop
mov
mov
or
jle
pop
xchg
sbb
scas
add
xchg
push
fistpll
and
add
pop
stos
xchg
ss
flds
pop
adc
or
ret
int
dec
inc
xchg
or
shrb
cmpsb
nop
adc
pcmpgtd
add
sub
enter
mov
adc
mov
sti
loope
es
xor
jmp
pop
mov
daa
mov
stos
mov
and
stos
cmpsl
cmp
jns
adcb
mov
sarl
sti
nop
incb
pop
ljmp
mov
jno
mov
dec
scas
pusha
dec
push
ret
std
inc
cli
fisttpll
cmp
cwtl
int3
dec
and
xchg
dec
aad
xchg
cmc
rorl
xor
inc
xchg
and
xor
setnp
dec
mov
cmp
add
mov
push
pop
lea
jno
adc
enter
movsl
stos
repnz
push
cmp
dec
out
adcb
mov
rol
push
lcall
inc
out
cs
popa
or
int
or
out
icebp
or
mov
lret
mov
mov
xor
mov
ret
xchg
pop
adc
cmc
push
test
insl
add
push
jne
push
mov
cwtl
cwtl
popf
xchg
mov
xchg
pop
int3
ret
out
mov
pop
popf
xorb
rcrl
sbb
lea
iret
adc
sub
cs
sub
add
sbb
jp
xchg
outsb
dec
test
push
mov
mov
adc
out
xchg
mov
idivb
add
sbb
add
scas
pop
pop
imul
dec
jle
cmp
int
dec
cli
orb
jne
mov
adc
nop
fs
fistps
enter
test
adc
and
adc
inc
mov
lods
loope
cld
and
xchg
shll
std
insl
sbb
stos
mov
aam
dec
mov
xor
pop
jl
call
inc
or
jbe
scas
dec
rclb
jbe
xchg
mov
imul
sbbl
fidivrl
xchg
ret
rcrb
ficompl
mov
or
xor
lock
mov
sbb
add
cmc
fsts
shr
adc
std
inc
inc
scas
lea
scas
xchg
mov
dec
sti
das
inc
cs
mov
test
and
jno
shlb
xor
cmp
sub
dec
jbe
cmp
iret
or
cmp
fs
mov
fmul
push
mov
jp
cmp
push
sbb
test
pop
xor
ss
dec
sbb
divl
jbe
sbb
mov
js
adc
mov
dec
inc
push
inc
test
sarb
xor
and
sub
data16
jae
adcb
outsb
psubd
lods
test
add
sbb
loope
test
out
imul
push
mov
test
mov
xchg
jge
mov
jno
sbb
lret
daa
addl
push
loopne
test
cmc
jl
iret
insl
inc
ret
pop
xchg
ljmp
push
and
ljmp
lret
and
dec
pusha
add
jno
jo
cmc
imul
ret
popf
shrb
aad
or
lods
clc
incb
mov
fdivrl
enter
sub
push
cmp
push
repz
sub
mov
jp
aaa
inc
bound
mov
int3
mov
icebp
add
push
sbb
stos
test
dec
mov
dec
mov
jno
andl
loopne
ja
cltd
cmpsb
push
rolb
cmp
les
dec
and
jp
jge
lret
nop
lock
jmp
sbb
loop
int
xor
rclb
mov
add
mov
vpsubd
ss
int
pusha
sub
ja
inc
and
pop
mov
add
aaa
jmp
push
add
dec
add
adc
cltd
xchg
xchg
pop
adc
cmp
out
jns
sbb
call
test
adc
sbb
jecxz
cmp
sub
negl
out
mov
and
repz
decl
adc
ja
icebp
cli
mov
in
and
or
imul
mov
sub
movsb
mov
or
push
rolb
ret
fimull
test
lret
push
lods
repnz
inc
mov
mov
pop
ss
into
add
xor
mov
into
mov
lock
mov
adc
out
push
or
mov
lahf
shl
out
add
pop
dec
scas
call
push
push
movsl
lret
je
dec
arpl
imul
sbb
inc
ret
push
cmp
test
inc
and
jmp
add
add
pop
inc
pop
xchg
push
outsb
roll
pusha
je
jge
xor
lods
mov
and
mov
faddl
sti
mov
add
or
pop
sub
lea
das
sti
push
pusha
jo
xchg
jbe
mov
mov
aam
dec
out
jmp
mov
or
cmp
test
rolb
iret
es
mov
imul
dec
sub
lods
adc
ret
fs
fisubs
ret
or
outsl
pop
xor
cwtl
dec
iret
sbb
sub
dec
les
imul
call
xchg
xor
push
and
and
lock
xor
push
add
add
lret
jo
cmp
pop
cmp
push
xchg
xor
je
mov
lcall
add
sbbb
test
jns
sbb
enter
ret
pop
std
fldcw
xchg
cmp
loopne
jne
movsl
cmp
inc
push
lods
push
dec
sub
leave
mov
and
inc
repz
or
ret
inc
pusha
mov
rclb
or
push
dec
test
aaa
push
jp
ja
mov
cli
jb
pop
mov
int3
data16
pop
add
and
lods
push
pop
loope
sub
inc
pop
mov
lock
add
lods
pop
xor
lea
push
rorl
mov
idivb
pop
dec
popa
push
orb
loope
inc
inc
enter
int
daa
and
fisubs
mov
insb
jmp
mov
mov
shrb
sub
add
dec
or
out
push
test
ja
mov
fists
and
testl
adc
add
or
mov
add
jp
and
sbb
jmp
add
add
ja
cmpsl
mov
mov
push
lea
mov
lcall
into
imul
fcmovne
and
push
cmp
adc
ret
es
insb
fistps
pop
mov
mov
test
mov
mov
cmp
shlb
loope
inc
stc
mov
fwait
repz
movsb
jg
mov
loopne
jno
adc
push
test
daa
lea
pop
ror
imul
pusha
js
jo
mov
stc
cmpl
or
lds
loopne
fwait
call
mov
test
rcrb
movsb
test
cmp
addb
xchg
push
or
ror
cwtl
xchg
test
jmp
das
lods
sub
jbe
and
hlt
add
shlb
sbb
lods
cmpb
js
movsl
mov
add
je
stos
addl
mov
mov
lds
pop
push
sub
pusha
adc
sub
adc
cli
inc
insb
sbb
test
lea
mov
ss
daa
in
loop
int
push
and
sbb
rorb
mov
cmpsl
mov
dec
and
mov
xor
push
clc
xchg
dec
mov
pop
sub
add
test
fisttpll
sar
cmp
jae
push
ja
ret
pop
pop
movsb
popa
push
out
pop
xchg
push
or
add
daa
addr16
jecxz
push
push
inc
scas
idiv
les
xchg
arpl
ss
daa
add
sub
ja
and
add
loope
cmp
mov
and
jno
loopne
adc
hlt
ss
xor
data16
mov
popa
popf
jbe
mov
push
ja
loope
add
and
sbb
push
mov
mov
rorb
add
adc
fnsave
incl
adc
inc
sub
fmuls
in
add
and
fimull
mov
filds
sub
inc
bound
movsb
mov
lock
into
pop
les
pop
mov
test
loopne
sbb
pop
nop
push
add
js
xor
jl
scas
aad
and
sub
insb
or
sar
pop
test
int3
push
sub
pop
out
jae
insb
lods
adc
dec
leave
or
mov
cmp
inc
push
ret
adc
pusha
push
ret
js
xchg
cmp
xor
xchg
icebp
imul
jb
ret
test
scas
adc
in
pop
xor
inc
sbb
shr
jne
in
xchg
iret
lret
rorl
push
js
jp
outsb
xor
add
sbb
add
jecxz
cmp
ljmp
pop
xor
xlat
int3
xchg
jbe
test
in
lcall
mov
sub
jns
push
nop
cltd
add
inc
ss
cwtl
sbb
mov
inc
hlt
dec
or
dec
stos
sbb
or
push
sbb
in
cmp
aas
pop
mov
iret
push
insb
cmpsb
sarl
scas
sub
mov
inc
movsl
add
ljmp
in
xchg
mov
stc
in
lahf
aaa
orb
sidtl
cwtl
filds
test
jns
ret
sub
sub
inc
loopne
xchg
pop
pop
test
enter
jmp
or
arpl
es
add
pop
xchg
cmc
fs
add
jno
add
js
ret
in
xchg
jns
dec
loope
push
arpl
cld
lock
push
xor
outsb
jns
sub
iret
pop
fsubrs
and
mov
loop
rol
ret
xchg
and
icebp
inc
movsb
out
bound
jl
addl
mov
jbe
mov
xchg
clc
repz
ds
aad
sub
or
sub
inc
xchg
leave
dec
stos
sbb
mov
daa
jo
pop
sub
push
fsubl
sbb
std
fdivs
hlt
ret
mov
xor
push
nop
hlt
aas
lock
xor
jp
lods
push
sbb
daa
imul
push
inc
cmp
scas
movsb
ss
pop
shll
adc
icebp
or
ret
ret
aam
and
push
shlb
lea
jp
cltd
mov
xorb
aad
mov
sub
adcb
pop
nop
pop
pop
xor
add
test
mov
dec
mov
dec
inc
xchg
out
pop
loop
mov
jecxz
sti
test
or
out
int3
repnz
repnz
xor
lahf
addr16
loope
sbb
pop
lea
or
nop
add
jg
dec
daa
jp
addr16
mov
out
sbb
sub
jp
fstpt
jmp
orl
add
jo
or
push
cvttps2pi
jbe
xor
shrb
cmp
je
popf
dec
cwtl
jno
push
mov
pop
mov
adc
test
mov
mov
icebp
out
push
adc
dec
or
xchg
sti
adc
les
and
add
inc
adc
add
lods
add
push
pop
mov
adc
stos
test
vhaddps
sbb
add
sub
pop
shlb
in
jns
add
jnp
sub
addr16
xor
adcl
xor
mov
je
aad
push
mov
sub
rclb
in
iret
or
pop
imul
inc
or
mov
push
fists
and
adc
sbb
add
lcall
cmp
and
sub
pop
in
je
pop
ror
cld
lcall
jb
adc
ficoms
std
xchg
and
imul
sub
sub
xchg
jg
and
mov
xor
mov
mov
adc
sbb
add
adc
mov
into
pop
test
dec
fwait
jbe
push
push
dec
pop
push
out
mov
test
jns
loopne
add
add
and
push
cmp
vmwrite
pop
or
xchg
inc
sbb
jmp
lret
sbb
iret
gs
dec
push
mov
repz
cltd
clc
jno
adcl
mov
rcrl
cmp
push
push
jo
cmp
cmpsb
pop
rcrb
inc
xchg
mov
inc
scas
sub
push
mov
aas
jle
sub
out
add
pusha
and
sub
pop
adc
pop
mov
int3
dec
cmp
sub
cwtl
aaa
and
inc
push
add
add
add
ret
cld
pushf
lods
jmp
int
rolb
adc
mov
cs
dec
movsl
or
aam
loopne
add
sub
cmc
inc
stc
mov
aaa
ret
xor
icebp
fs
jo
sbb
arpl
arpl
scas
lds
aam
push
iret
or
mov
sti
xchg
mov
jecxz
and
xchg
lock
cmpsb
cmp
ret
das
add
loopne
scas
inc
outsl
xchg
or
push
inc
pusha
dec
fsubs
es
pop
ljmp
and
mov
xorb
mov
add
sbb
aas
mov
aad
cmp
outsb
mov
pop
mov
lret
sbb
addl
add
xor
gs
push
sub
mov
test
inc
nop
test
jmp
fnstsw
lods
rcl
inc
mov
adc
sub
cwtl
enter
pusha
pushf
loop
cmp
inc
js
adc
jecxz
sbb
cmpb
xlat
sbb
enter
push
xchg
aas
mov
jns
dec
mov
mov
pop
movsb
inc
sub
mov
mov
test
in
cs
popl
add
imul
adc
push
or
imul
mov
imul
or
xchg
pop
or
pushf
leave
and
mov
test
xor
fisubrl
dec
or
sub
pop
add
pop
loopne
mov
cmpsl
mov
scas
pop
roll
call
mov
test
push
rcll
or
inc
push
ljmp
xchg
and
enter
pop
pop
insb
popa
imul
mov
or
jae
jo
jg
cmpl
jbe
mov
out
mov
rol
xor
loop
leave
pusha
sub
out
adc
xchg
idivb
add
int3
push
daa
xchg
rolb
stos
jmp
sub
fildll
dec
mov
das
test
push
dec
cltd
jmp
push
imul
mov
xchg
les
inc
std
xchg
adc
loopne
aad
sub
xchg
sub
aad
sub
or
inc
int3
gs
movb
and
xor
aam
loopne
dec
js
sbb
xchg
add
jl
fwait
dec
leave
pop
mov
loope
or
jecxz
jns
push
or
movsl
add
inc
shrb
shlb
add
mov
cmp
jno
cmp
lock
popf
cmp
shll
adc
sub
cmp
push
insl
int3
inc
stos
sbb
pop
or
cmp
arpl
dec
rorl
mov
imul
cmp
push
dec
pop
dec
and
add
sbb
dec
dec
scas
pop
or
push
add
push
xchg
roll
push
call
lods
imul
lods
sbb
jg
fisubrl
hlt
pop
test
lds
push
pop
test
xor
xchg
jb
sub
jge
mov
into
adc
out
fwait
add
push
ret
out
daa
or
sti
lods
and
mov
push
sbb
jl
sub
shrb
sbb
inc
scas
xchg
addl
mov
jp
fmul
jns
imul
daa
pop
dec
lods
mov
lds
sub
aad
mov
fsubrs
jnp
jb
rorl
enter
and
mov
cmp
push
mov
pop
je
pop
sub
jae
fcom
fildl
push
sbb
xchg
and
pusha
sub
cmp
xchg
dec
lods
pushl
inc
sbb
or
jg
add
push
jne
mov
mov
inc
sub
jb
xor
insl
sbb
inc
and
xchg
int
jb
loope
rol
push
sub
nop
and
out
inc
push
lods
sub
test
in
lock
inc
and
or
push
ss
rorb
jns
out
mov
and
fisttpll
inc
adc
mov
fsubs
sub
pop
mov
pop
sahf
fistl
sub
lcall
daa
scas
in
push
add
xchg
and
imul
shll
sub
das
xchg
lret
and
sti
orb
les
lods
dec
repnz
pop
rolb
dec
adc
bound
pop
push
mov
inc
sub
cmp
insl
inc
or
jno
sbb
and
adc
and
or
movsl
pop
stos
test
into
jae
shll
sub
sub
sub
xchg
push
pop
sub
dec
xchg
test
les
add
into
cltd
daa
sahf
mov
insl
icebp
lahf
xchg
adc
leave
add
push
test
sbbb
mov
sbb
sub
ret
lods
imul
mov
push
aaa
lods
jb
and
add
xchg
ja
pop
lret
jnp
lret
mov
adc
dec
test
push
mov
adc
xor
add
sub
repnz
scas
inc
imull
sbb
xor
sbb
nop
jmp
ss
js
xchg
outsb
mov
icebp
cmpsl
xchg
dec
bound
jmp
punpckhdq
test
orl
push
mov
mov
lds
std
enter
or
hlt
push
bound
pop
lcall
sahf
or
jbe
aam
frstor
pop
sub
and
cmpsl
jecxz
test
in
shll
push
lods
ss
dec
jno
sbb
loopne
lret
xchg
push
imul
jl
imul
hlt
loopne
sbb
or
mov
mov
mov
cmp
and
push
mov
shrb
pop
and
loope
mov
add
xchg
cli
inc
and
jle
inc
sub
xlat
fidivs
adc
pop
add
xchg
into
das
ret
push
pop
add
jle
adcl
jmp
or
daa
adc
cmp
out
shl
js
add
sub
or
or
loope
sar
xchg
icebp
ljmp
pop
lret
lock
add
rolb
nop
mov
cmp
divb
es
adc
or
fs
outsb
insl
sbb
ret
lcall
dec
sahf
jle
add
push
js
xchg
addb
cmpsb
lret
pop
pop
mov
daa
xor
pop
leave
xchg
popa
in
jl
or
cmp
add
or
xor
inc
sub
jg
pop
fwait
rolb
add
ret
push
int3
mov
dec
jl
lods
dec
xchg
imul
jle
je
repz
ja
call
inc
sbb
mov
bound
add
mov
sbb
ljmp
mov
dec
sbb
sub
sbb
mov
push
pop
sbb
pop
pop
mov
lock
pop
fs
jmp
loopne
popa
and
imull
xchg
push
fdivs
ret
lods
ja
scas
rcrb
cmp
insl
pop
mov
adc
sti
aas
sahf
cli
jge
or
or
adc
das
adc
adc
in
push
addl
and
and
add
dec
ret
jno
jnp
sbb
js
lea
mov
hlt
aas
test
pop
lods
loope
add
jne
test
mov
sbb
adc
pop
adc
jp
mov
cmp
sub
fs
jmp
icebp
mov
add
dec
aas
pop
ljmp
pusha
jo
sub
xlat
add
jo
into
or
mov
jl
fwait
xchg
call
xchg
jge
add
cwtl
add
push
xchg
fdivs
pop
adc
or
fwait
push
push
call
adc
rorl
add
cltd
xchg
sbb
push
xchg
repnz
xor
jne
and
sub
mov
sub
mov
icebp
mov
daa
dec
fcmovnu
and
cmc
add
mov
push
cmp
div
pusha
pop
or
in
cmc
lret
ja,pn
xchg
xchg
xchg
add
adc
fdivrl
xor
xchg
sbb
stos
jae
mov
jge
push
add
mov
test
mov
lea
rcrl
scas
and
enter
fmuls
dec
scas
pop
imul
subb
xor
add
push
mov
adc
sbb
add
or
pop
mov
nop
push
or
insl
sti
inc
adc
and
pop
xor
int
add
icebp
repnz
cmp
jg
enter
sub
dec
lea
and
into
xor
or
xor
loopne
jmp
not
cmp
add
sbb
arpl
enter
ss
sbb
cmp
sbb
test
inc
cmpsb
or
fwait
add
or
subl
loopne
sub
or
pop
inc
test
xor
fstps
xor
or
sahf
or
mov
stc
mov
jecxz
js
xchg
rorb
lret
iret
push
icebp
shlb
jle
sub
jp
inc
es
xchg
lret
pop
jecxz
cltd
jo
ror
and
or
ljmp
push
mov
sahf
inc
rcrb
int3
mov
and
pop
dec
std
rolb
mull
mov
mov
nop
push
inc
bound
pop
aad
cmp
popw
jmp
push
inc
cs
cmp
add
add
and
nop
inc
scas
cmp
mov
sub
pop
xchg
cmp
movsb
sahf
xorl
jmp
xorl
sub
mov
rcll
push
lods
shufps
adc
lods
inc
mov
mov
jmp
cmp
adc
sbb
arpl
sti
mov
loope
or
jl
fcoms
fcmovnbe
scas
xor
sbb
and
mov
add
or
iret
frstor
cmp
push
sbb
test
dec
and
mov
cmp
das
push
cmpsl
pop
dec
mov
out
into
add
ss
add
fs
aaa
fidivs
xor
adc
jns
imul
push
xchg
xchg
shrl
jo
mull
and
mov
jl
lea
cmp
add
jmp
mov
dec
iret
xchg
pusha
mov
pop
push
jo
dec
inc
add
mov
sub
fbld
jb
lods
push
xchg
roll
mov
fcmovb
dec
insl
loope
mov
loope
xor
scas
sbb
add
ja
rclb
xchg
iret
fst
dec
push
ret
jle
mov
inc
adc
cmp
out
mov
daa
dec
sbb
call
and
ret
stos
and
sub
and
jno
and
aas
flds
mov
pop
jae
inc
and
adc
add
cmc
pop
or
push
or
insb
pop
adc
rol
or
add
inc
mov
push
enter
dec
shr
add
pop
shll
add
push
ret
xchg
daa
or
mov
repnz
add
xor
dec
jecxz
aaa
cmp
push
sbb
ja
sbb
daa
mov
data16
gs
push
xor
pop
mov
jp
push
sti
scas
jg
cmp
scas
xorl
xor
pop
adc
out
repz
dec
orb
and
lret
inc
aaa
out
xchg
lret
push
xor
in
insb
subb
mov
jo
or
cmc
andb
arpl
popa
dec
sub
pop
ret
cmpb
xlat
out
popa
inc
movsb
jecxz
scas
pop
mov
adc
ret
out
mov
dec
call
cmpsl
repz
pop
xlat
aam
or
inc
lret
xchg
scas
jno
mov
xor
popf
xchg
xchg
mov
sub
in
daa
add
cs
mov
push
shr
repz
adc
or
mov
mov
loop
out
das
sti
sbb
aaa
repz
lock
mov
sub
push
dec
addb
jne
lcall
or
mov
iret
mull
or
xor
sbb
pop
inc
shrl
inc
cmpsb
xchg
adc
js
push
pop
xchg
sbbb
pop
outsb
je
mov
pusha
add
insl
jecxz
mov
fdivs
movsl
lock
xchg
aaa
arpl
das
dec
xor
rol
es
ret
push
popa
sbb
push
and
loope
es
scas
or
mov
inc
inc
flds
arpl
icebp
in
or
dec
push
add
inc
sbb
pusha
jns
and
mov
jae
sub
add
jno
cld
arpl
jne
mov
jbe
scas
ret
dec
jo
add
aaa
ret
mov
push
pop
mov
sbb
lret
mov
add
adc
test
xor
jnp
mov
xor
push
mov
mov
mov
push
mov
adc
popa
pushf
aas
fs
cmp
test
out
xchg
adc
or
rcrl
dec
not
push
adc
lret
inc
xchg
jl
cmp
dec
call
call
xlat
adc
fidivl
loop
and
fwait
lahf
xor
imul
jne
xchg
test
scas
outsl
arpl
leave
test
push
loopne
push
or
cmpl
ret
lret
movsl
push
xchg
insl
ror
dec
pop
je
daa
xchg
cltd
popf
sub
inc
cmp
js
pop
jbe
fistps
test
pop
daa
lret
and
lds
add
push
iret
les
jg
mov
test
fcmovne
pop
ret
add
aaa
popa
lods
pop
shrl
jp
in
push
dec
sbb
sub
mov
pop
xor
cmpsl
es
jmp
shl
pop
lret
xchg
mov
int
mov
loopne
loopne
cs
js
inc
pop
pop
testb
in
dec
mov
repz
rolb
mov
sbb
inc
bound
inc
je
xchg
mov
mov
and
push
lahf
out
cs
das
xor
cmpsl
mov
vpmullw
das
dec
xor
sarb
jae
add
mov
ja
add
inc
iret
add
dec
insl
push
inc
adc
push
fidivl
sahf
movsl
push
imul
dec
jg
or
movb
stos
je
test
pop
push
mov
rcrl
dec
cmp
adc
es
call
mov
es
push
or
jo
loopne
inc
mov
xchg
push
mov
add
cwtl
mov
repnz
pop
pop
cwtl
gs
xchg
lods
dec
out
push
pop
lds
fs
movsl
dec
rclb
test
push
adc
sub
nop
loop
cmp
push
adc
sbb
sub
mov
push
jecxz
fists
mov
jbe
inc
pusha
push
stc
arpl
or
pop
int3
arpl
js
pop
or
xchg
and
sbb
push
cs
push
xor
pop
push
xor
aaa
sbb
ret
cmp
fwait
test
sub
clc
push
fldt
orb
adc
out
lret
xor
and
cmpsb
mov
nop
clc
add
pusha
adc
xor
lcall
xchg
mov
fadds
inc
add
inc
stos
jecxz
add
test
arpl
adc
push
ror
stos
add
adc
lret
and
test
pop
dec
fsubl
sub
sub
pop
movsl
daa
jo
stc
mov
or
std
movsb
mov
mov
addl
stos
das
lea
lods
inc
sub
sbb
fadd
push
iret
or
mov
inc
aam
jp
xchg
mov
cwtl
xor
in
leave
outsb
bndldx
sbb
add
std
xchg
xor
lds
repz
or
push
xchg
stc
xor
push
xlat
mov
mov
aaa
cwtl
sbb
jno
add
jno
add
imul
iret
and
loope
mov
add
sbb
push
mov
scas
or
insl
push
push
mov
rorl
dec
psubd
loopne
je
and
pop
or
sbb
and
ret
test
add
gs
into
or
icebp
testb
fxch
jp
xchg
fimuls
push
dec
pop
cmpsb
out
and
xchg
jo
cmp
add
ret
iret
xor
mov
jnp
or
sbb
adc
adc
pop
push
push
push
leave
and
inc
lods
dec
xchg
jp
cmp
fmull
xor
xlat
gs
pop
arpl
jecxz
pop
fcomps
lods
nop
stos
daa
push
or
inc
arpl
ret
inc
jns
jne
sbb
add
add
test
push
mov
fisubrl
es
xor
mov
jge
mov
je
ret
insb
jnp
push
add
dec
js
lock
test
xchg
sbb
imul
sub
loop
int
inc
add
sbb
ds
pop
mov
loopne
adc
sbb
leave
push
cltd
pop
mov
push
and
pop
mov
xor
sbb
test
mov
or
mov
mov
cmpsl
dec
or
and
popa
sarb
shlb
adc
push
jp
mov
mov
sbb
jb
lcall
js
or
sub
pop
push
cmpl
out
adc
movsb
stos
std
sub
jle
rorl
cmc
jecxz
clc
xor
enter
dec
jne
add
aas
test
xchg
test
int3
xor
test
mov
xor
push
js
push
pop
rol
or
sbb
fisubrl
cmp
add
or
addr16
pop
or
add
pop
loope
jns
loope
dec
stc
dec
adc
mov
jbe
inc
mov
sub
mov
sbb
pushf
pop
mov
pop
or
sahf
out
inc
imul
mov
orb
xlat
sbb
je
cmpsl
push
hlt
ret
xchg
xor
or
aam
outsl
test
bound
pop
fwait
ja
movsb
rolb
imul
or
loopne
mov
pop
jb
add
xlat
das
in
nop
pushf
adc
outsl
sti
sub
lcall
xor
fs
ret
cmp
rolb
pop
sbb
ret
in
cs
cmp
test
es
call
cmp
fdiv
lret
lcall
mov
push
ffree
sbb
das
es
andl
pop
cmp
inc
pop
out
sub
xchg
mov
arpl
push
or
subb
or
outsb
ret
loop
aas
mov
test
test
push
loop
xor
dec
iret
push
dec
jle
mov
inc
xor
mov
fwait
ss
inc
sbb
andb
iret
pop
rolb
mov
cmp
adc
push
cmp
sub
add
mov
pop
jp
jae
jae
add
mov
xor
jp
test
cmc
cmp
aaa
cmp
adc
and
push
mov
push
jo
xchg
iret
loop
insl
orb
mov
add
loop
pop
addr16
cmc
or
mov
and
mov
fcomps
adc
sti
clc
inc
push
mov
sub
sub
aaa
add
cmp
test
mov
add
sbb
int
pushf
mov
jmp
lock
loop
mov
jg
dec
sub
ret
inc
sbb
cwtl
dec
or
lea
push
sarb
inc
adc
fsubs
je
xor
sbb
jno
mov
sahf
sub
dec
sbb
sub
in
cmpsl
mov
jne
inc
adc
sahf
cmp
sbb
push
jecxz
mov
orl
push
lods
sbb
or
inc
test
daa
jg
dec
fcoms
and
fildll
mov
movsl
jecxz
sbb
popl
xor
push
sub
nop
mov
orb
push
xor
shll
inc
sbb
inc
add
sbb
adc
aaa
jnp
and
fsub
fists
aaa
rorl
icebp
rol
pop
sub
ret
in
jecxz
fcomip
ljmp
cmp
mov
fistpl
roll
add
sub
inc
inc
sub
aas
stc
add
mov
orb
dec
sub
jl
outsl
lret
sub
or
in
dec
dec
dec
inc
ficoml
icebp
lret
mov
out
daa
daa
push
push
add
push
imul
jnp
lock
sbb
incl
movsl
cld
and
and
push
cs
mov
stos
popf
push
cmpsb
nop
lret
sub
or
sbb
xor
gs
mov
dec
lret
or
jno
mov
cmp
inc
inc
fistps
xchg
daa
pusha
daa
and
add
pop
into
aaa
jb
mov
push
jne
sarb
sbbl
mov
and
mov
hlt
rclb
ret
mov
les
xchg
add
lods
addr16
add
inc
jno
lret
fisubrl
jmp
pop
sbb
jg
pop
add
mov
mov
fld
daa
xor
ror
add
ss
pop
enter
xchg
sti
mov
jo
iret
xor
test
xchg
xchg
adc
das
inc
aaa
cmp
icebp
sbb
xor
sbb
push
and
roll
mov
outsl
andb
sbb
rolb
bound
sub
flds
mov
add
pop
test
push
push
add
fwait
add
add
jecxz
pop
inc
dec
int3
xchg
idiv
mov
addr16
addr16
or
pop
xor
xchg
add
ret
arpl
mov
jecxz
mov
fwait
or
fldl
jge
xchg
clc
fadds
jno
cmc
or
xchg
and
lea
shrl
adc
jb
add
adc
mov
or
jmp
shlb
shrb
shll
sarb
repz
dec
add
cld
push
sahf
cmpsl
jbe
sbb
orb
lods
out
mov
and
and
sub
dec
inc
sub
test
fcmovbe
mov
jle
lods
jp
aam
pop
sub
lret
or
fisttpl
dec
ficompl
outsl
and
adc
test
mov
pop
scas
sub
xchg
dec
lods
cmpsl
andl
repz
xlat
sahf
ds
inc
add
add
push
mov
fcoml
ret
add
shrb
adc
decl
or
mov
sbb
or
sub
loope
push
inc
loop
sub
or
cmpsb
mov
sahf
jmp
adc
mov
lods
add
adc
mov
pop
lahf
push
es
sub
and
cs
sbb
xchg
cmp
pcmpeqb
inc
jo
push
sbb
pop
add
mov
pop
int
rcl
cli
je
dec
pop
adc
jmp
push
cs
add
cmc
add
or
xchg
adc
ffreep
subl
cltd
mov
adc
add
cwtl
push
jo
push
pop
xchg
jnp
lret
adc
jecxz
ret
adc
fistps
pop
cmp
sbb
pop
lds
gs
inc
insl
add
sub
cmp
xor
xor
out
nop
sarb
pusha
sbb
addl
lock
in
sbb
es
lods
xor
adc
adc
loope
ljmp
push
aas
or
mov
stc
pop
dec
dec
loope
stos
ret
sub
lret
aaa
cld
or
jl
mov
orb
cmp
ret
aas
jo
dec
jne
enter
xor
mov
cmp
fbstp
jp
xor
cmp
loopne
test
movsl
pop
xchg
push
out
nop
sar
push
pusha
sti
fidivl
push
pop
add
lods
movsl
xchg
add
cs
sub
pusha
subb
jmp
or
or
mov
imul
mov
mov
iret
xor
dec
dec
pop
call
sbb
add
out
sti
ds
inc
aas
lahf
pop
je
xchg
sarl
and
pop
mov
sbb
and
lahf
adc
push
mov
xor
jecxz
or
pop
mov
dec
addr16
cmp
lea
pop
loopne
imul
add
fwait
jns
mov
clc
or
add
xor
out
cmc
dec
daa
adc
pushf
pop
dec
push
sub
cmp
pop
iret
ja
xchg
or
sti
ja
ljmp
sbbl
aaa
test
pop
movsl
pop
mov
push
xchg
pop
js
add
pop
insl
lahf
mov
shrl
push
jecxz
jne
push
mov
notl
add
imull
mov
sbb
cmp
outsb
push
pop
or
and
std
mov
add
jo
mov
icebp
popf
lahf
out
sub
jge
pop
fidivs
or
nop
cmp
cld
pusha
dec
out
aam
addb
sub
push
and
jg
mov
cmp
jno
hlt
pusha
xchg
int
dec
jle
out
cmp
xchg
test
push
dec
fisubs
cmpsl
leave
sahf
lods
add
mov
inc
into
divl
lock
push
fwait
add
out
imul
jecxz
pop
dec
pop
cmp
adc
loop
aaa
movsb
shlb
or
shll
imul
clc
and
push
sub
xchg
les
cmpsb
jnp
push
xor
push
aaa
push
push
stos
nop
out
or
push
pop
add
pop
pop
mov
and
xor
add
gs
int3
scas
xchg
sbb
mov
roll
mov
mov
loope
xor
add
mov
push
rclb
push
dec
clc
mov
or
or
ror
sahf
jle
adc
xchg
mov
sub
xor
xorb
pop
imul
push
inc
clc
and
pop
cmp
inc
out
popa
mov
les
fs
sbb
sbb
lret
jmp
sti
out
cs
mov
jno
mov
clc
sbb
sub
push
sbb
cmp
in
cmpl
xor
loope
or
rolb
out
rol
test
xor
sub
shrb
or
loope
loop
and
xchg
mov
mov
xchg
or
and
rcrl
test
mov
shll
push
and
pop
test
pop
testl
test
jns
pop
test
and
cmp
test
adc
fwait
adc
pop
out
push
ss
cwtl
add
popa
or
xchg
xor
cmp
in
into
jne
sbb
shrb
into
je
sbb
or
iret
sub
stos
cs
iret
fnstcw
dec
or
jno
insb
xchg
mov
sub
xchg
sub
adc
leave
push
dec
mov
aaa
ret
fmull
pop
cmpsl
iret
mov
mov
mov
mov
lea
popa
popa
inc
shlb
into
nop
sub
jg
insb
push
jl
js
mov
dec
sarl
mov
test
inc
pushf
mov
cwtl
sbbb
imul
add
cmc
repz
xchg
loope
pop
or
or
adc
push
sub
out
xchg
rcrb
cmpsl
stos
adc
sbb
push
fsubs
xchg
loope
es
jbe
push
repnz
repz
fmul
dec
sbb
and
mov
dec
sbb
out
pop
adc
push
or
inc
and
jle
inc
pop
sub
or
inc
out
cs
js
sub
push
xchg
pop
js
jno
dec
gs
pusha
xchg
mov
push
add
repnz
mov
or
inc
int
mov
lahf
jle
jle
ret
cmp
shll
das
out
xor
dec
push
sub
or
add
xchg
sbb
push
push
inc
xor
pop
pop
pusha
dec
mov
loop
test
sbb
xor
xchg
mov
xor
add
sbb
jb
push
scas
ror
scas
popa
pop
lea
dec
push
jp
sbb
xchg
and
pop
adc
mov
cmp
mov
int3
rorl
sub
ret
cmpsl
xchg
in
int
xor
call
filds
ds
dec
lret
lret
lods
pop
call
sub
sbb
or
add
lret
push
idivb
adc
mov
mov
sbb
lods
push
and
xchg
loop
fisttpll
sbb
mov
pop
or
jl
imul
cmp
imul
mov
adc
jge
andl
imul
insl
test
jae
ss
pop
lahf
pop
shrl
loope
test
push
pushf
sub
data16
sti
loop
aad
das
nop
cmp
cmpb
push
loopne
stos
lods
pop
cmp
adc
js
and
mov
fsubrs
mull
test
mov
sbb
mov
sub
shrb
lcall
lock
sbb
jo
jo
sub
add
mov
outsb
mov
mov
cmpb
add
pop
dec
lahf
and
fcomps
rorl
xchg
jp
ss
adc
dec
push
push
push
inc
loope
and
test
sub
dec
jno
sub
jne
iret
aad
jns
mov
les
insl
inc
or
mov
mov
jbe
cmc
fwait
jae
adc
repz
cmp
inc
daa
or
jb
loop
sbb
mov
fistpll
jns
xchg
jge
js
jno
shlb
bnd
pop
or
sti
jecxz
push
cmp
dec
cmp
rolb
mov
lret
pop
jno
or
adc
push
sbb
mov
roll
pop
dec
xlat
rcl
or
inc
xchg
fisttpl
test
xchg
pushl
xchg
cmc
int
xor
and
ret
shll
es
add
pushf
fsubs
mov
jmp
push
fwait
mov
or
jo
stos
add
inc
jecxz,pn
inc
daa
push
lahf
pop
or
into
or
jne,pt
push
aas
jo
outsl
xor
push
cmp
xlat
jmp
stos
pop
xor
push
in
ja
and
pop
pop
loope
test
into
mov
inc
scas
sahf
hlt
cwtl
jecxz
and
sub
inc
mov
dec
mov
ret
mov
and
test
daa
imul
ss
js
add
mov
xchg
jmp
addl
jg
cmp
loope
sub
adc
imul
mov
sbbb
or
aad
out
mov
and
cli
add
in
jo
gs
ss
test
jecxz
stc
dec
fldl
aam
lods
xor
push
push
mov
daa
pop
push
inc
inc
mov
aas
fxam
filds
xor
test
outsl
cmp
inc
lret
xchg
xlat
das
mov
shrl
add
sbb
xchg
and
mov
pop
shrb
ret
test
push
and
pop
shlb
mov
and
cwtl
xchg
xchg
aas
out
xor
rorb
lock
insl
push
inc
push
or
test
push
push
sbb
cmp
push
xor
adc
add
inc
hlt
adc
lods
dec
sbb
xor
adc
pop
cmp
loopne
mov
sbb
unpckhps
mov
fadds
dec
pusha
iret
js
mov
shlb
jg
ret
es
jnp
sbb
mov
mov
pop
pop
daa
inc
das
jg
pop
lods
cmpsb
inc
mov
sbb
aaa
loopne
ss
push
and
fld
lods
jmp
mov
insb
mov
js
leave
enter
or
ljmp
jbe
adc
and
dec
dec
daa
push
jne
js
add
mov
dec
jne
addr16
mov
mov
and
adcb
lret
mov
nop
add
outsl
sub
js
sbb
dec
mull
outsl
or
xchg
outsl
test
loopne
sub
add
int
jno
xor
xor
xorl
test
pmaddwd
mov
add
mov
add
and
ffreep
in
pop
inc
lods
sbb
dec
insl
test
xchg
dec
dec
xor
add
inc
lock
scas
jg
ds
flds
push
sahf
adc
lea
sbb
je
push
xchg
test
jnp
dec
xchg
inc
push
cmp
and
rcrb
mov
ds
dec
xchg
repz
and
sub
testb
sub
xchg
out
cmp
cs
fdivrs
xor
fdivrs
jno
and
cltd
enter
insl
xchg
xorl
sbb
mov
jge
push
xor
lcall
out
popa
sub
in
orb
cltd
iret
mov
xor
fcoml
xor
divl
adcb
stos
movsb
fisubl
lea
xor
icebp
test
sub
jb
pop
ror
sub
jp
or
push
aaa
daa
lahf
loopne
fcmove
and
loopne
inc
arpl
bound
adc
clc
dec
add
mov
aad
mov
das
pop
js
adc
xchg
addb
jno
aad
stos
scas
xchg
hlt
lahf
inc
sti
or
aas
pusha
das
lods
add
sbb
xchg
xchg
in
adc
js
lret
test
add
mov
insl
mov
rolb
adc
icebp
pop
je
push
xor
mov
adc
outsb
xor
sbbb
mov
inc
push
fildll
in
push
add
xchg
movl
shrb
and
dec
data16
inc
mov
add
jo
jo
push
aas
inc
loopne
test
add
jmp
lock
and
loopne
arpl
mov
fdiv
add
cmp
pusha
sub
lock
icebp
mov
das
jecxz
pop
pop
jno
sbb
ja
pop
cmpsb
jecxz
jno
loopne
stos
push
aaa
pop
mov
jge
repz
jo
pop
xor
mov
pop
sub
jo
lcall
push
mov
mov
clc
rcrb
fs
adc
les
and
pop
jle
arpl
xchg
mov
je
cs
shrb
das
pusha
and
or
and
mov
lcall
das
dec
rolb
stc
cmp
filds
or
dec
loop
loope
dec
sbbl
jbe
push
stos
sahf
sbb
mov
das
mov
lock
or
xchg
je
add
push
pusha
add
test
fwait
or
sub
in
and
xchg
pop
mov
clc
repz
fs
push
loop
mov
pop
add
add
adc
loope
jg
ja
jno
rcrb
xchg
mov
ret
fimuls
addb
and
sbb
fiaddl
pop
jbe
cmpsb
inc
and
mov
add
fcompp
push
enter
jmp
xor
sub
stos
lock
das
jg
daa
jno
adc
push
lods
push
dec
and
pop
popa
xchg
adc
imul
inc
call
shll
inc
sbb
jl
mov
stc
cmpsb
push
loop
push
je
inc
iret
add
push
or
add
adc
add
mov
jne
dec
lods
rorl
loopne
add
cmpsl
adc
dec
or
aam
dec
lret
imul
sbb
pop
lods
enter
sub
xor
leave
add
push
push
adc
mov
push
jmp
leave
or
insb
pusha
push
shrb
push
mov
add
push
jae
lods
pop
adc
jns
rorb
fbld
push
sub
loopne
jp
fwait
cmpb
xor
je
arpl
and
xchg
xchg
jno
xor
adc
xchg
jp
push
adc
pop
rolb
ja
mov
mov
mov
test
shrb
push
mov
cmp
and
inc
adc
sti
jecxz
arpl
jns
pop
cmp
xor
je
xchg
push
lock
inc
xchg
sub
adc
and
in
cmp
test
add
pop
inc
inc
push
repnz
call
subl
aad
dec
jo
jno
add
dec
inc
cmp
in
lea
add
xchg
adc
add
iret
test
inc
pusha
roll
mov
ljmp
xor
jno
jecxz
ss
addb
xchg
rcrb
inc
add
sub
pop
js
add
roll
out
or
dec
mov
push
and
adc
cs
jne
push
out
fdivrs
pop
fstpt
ficoml
call
adc
xor
pop
notb
and
in
loopne
xor
add
mov
je
xchg
icebp
inc
add
cmp
cmp
add
push
pop
add
rorb
stc
push
or
and
pop
add
mov
push
mov
mov
inc
xchg
jle
sub
pop
fidivrl
pusha
mov
lods
adc
xchg
sub
cmc
pop
enter
sub
pop
mov
xchg
stos
daa
mov
add
xchg
mov
imul
and
das
in
pop
pop
pop
sbb
or
cmp
xchg
xor
insl
mov
ret
jo
cli
lcall
sbb
push
fwait
test
out
mov
sbbb
push
jbe
push
mov
dec
ds
add
jecxz
call
daa
add
mov
hlt
adc
ds
test
sub
loop
fistl
test
rorl
pop
addb
imul
sbb
call
and
mov
xor
cmp
aas
aam
test
enter
push
dec
lret
pop
mov
add
movsl
les
xchg
cmp
mov
mov
or
fists
scas
or
lret
ds
int3
cltd
cmp
loopne
mov
fdivrl
mov
fdivl
daa
dec
mov
mov
imul
or
loop
clts
enter
jecxz
mov
sbb
inc
jne
leave
jecxz
jne
cwtl
and
adc
add
pop
push
push
or
cmp
jo
std
iret
pop
out
push
inc
or
cs
cmp
orl
ss
xchg
or
jl
ret
add
sbb
mov
iret
jl
pop
iret
mov
movsb
dec
js
sahf
dec
cmpsl
mov
mov
scas
lret
adc
hlt
jp
es
jo
pop
jne
push
icebp
out
bound
jmp
clc
idivl
sbb
xchg
add
cmp
sub
sahf
cmpsb
out
call
fcmovnu
sbb
or
or
jp
or
push
vmptrld
addb
mov
or
lret
sbb
out
jnp
pop
jmp
mov
movsb
pop
rclb
fbld
shrb
clc
daa
xor
nop
sti
jecxz
fcoms
bound
in
fsubrs
xchg
in
jbe
dec
inc
push
cltd
mov
pop
in
xchg
in
repz
lcall
xor
icebp
add
outsb
jecxz
lds
popa
xor
cmp
stos
jbe
es
loop
sbb
jp
adc
clc
inc
mov
mov
or
or
xchg
sub
ljmp
sti
xchg
add
jp
sub
lahf
jne
mov
inc
cs
loope
je
loop
addr16
sbb
scas
jne
cmc
sti
sub
dec
push
dec
dec
add
loopne
push
and
mov
jnp
aam
std
cmp
xchg
enter
ret
test
es
inc
sbb
into
lods
jns
pop
shrb
dec
popl
fwait
aam
inc
cmp
mov
gs
jbe
mov
lds
push
pop
xor
je
out
dec
mov
stos
sub
lods
add
xor
movsl
push
test
pop
cltd
and
and
push
mov
bound
lcall
testl
outsl
orb
adc
mov
sbb
mul
rorb
mov
pop
lea
in
or
stos
push
mov
xchg
xor
xchg
in
insl
adc
in
bound
mov
dec
test
andb
mov
mov
push
pop
fisubrl
pop
cmp
nop
sub
mul
mov
ljmp
jmp
jp
lock
cmpsb
pop
ret
and
es
add
cmp
xchg
mov
jno
test
pop
xor
aas
in
das
adc
push
and
sbb
faddl
ja
loop
stc
mov
or
push
or
out
xchg
mov
shl
push
stos
out
in
test
sub
and
jle
push
repz
add
out
cld
fdivrl
push
xor
push
cmp
cli
cmc
mov
adc
mov
and
cmp
cmpsl
add
push
pop
sbb
jp
cmp
cmp
scas
jnp
cmp
mov
and
js
cmp
jns
loope
sbb
add
js
sub
push
aam
jmp
adc
sbbb
in
sarb
test
lret
jo
mov
xor
sub
das
xor
push
sbb
arpl
fbld
shll
icebp
addl
dec
imul
xor
das
loope
xchg
xorl
in
int3
or
ret
stos
mov
mov
js
sub
jo
icebp
scas
sub
bound
popa
pop
cmpb
push
dec
sbbb
mov
cmpsb
jo
pop
mov
rol
lret
adc
fildll
sahf
pop
adc
clc
pop
xchg
xor
notl
jecxz
dec
jo
pmaxub
ret
ret
xor
cltd
mov
jl
pop
cmp
pop
in
or
aas
lcall
shll
pop
jno
adc
ja
dec
dec
and
dec
es
insb
mov
mov
js
or
inc
or
pop
xchg
fdivl
xor
out
pop
sti
scas
or
mov
dec
flds
es
adc
lock
pop
lcall
lods
aaa
outsb
lret
outsl
insb
ret
jns
fneni(8087
enter
out
ret
test
xor
movsl
add
jg
orb
cli
movsb
or
loopne
xchg
pop
add
or
popa
outsl
lcall
push
push
sub
sub
movsb
sbb
dec
inc
inc
lods
dec
or
lock
jne
xor
jae
jle
imul
rolb
ret
fisttpll
test
lods
pop
mov
push
nop
xchg
mov
addr16
data16
mov
aaa
sbbl
inc
lock
cmp
pop
roll
fwait
fwait
inc
imul
addr16
mov
pusha
jmp
lret
push
push
xchg
int
mov
rcrb
movsb
jle
roll
flds
jmp
fimull
movsb
int3
inc
pop
jecxz
cli
push
sub
sub
js
xchg
testl
fbstp
mov
ljmp
cmp
nop
cmp
ret
out
add
jecxz
xor
outsl
cli
loop
add
das
mov
test
xor
xchg
notl
hlt
loop
les
stos
leave
ror
rol
mov
sub
pop
pop
cs
mov
cmp
add
addr16
sub
jno
adc
fs
or
arpl
in
jmp
add
or
popa
test
shll
cmpsl
lock
push
or
fstpl
das
insb
shlb
addl
arpl
xchg
mov
mov
aam
cltd
mov
sbb
jp
je
imull
dec
js
xor
stos
imul
pop
add
sub
pop
adc
sbb
aam
adc
pop
popa
add
sahf
xorb
xlat
mov
pop
sub
inc
mov
xor
mov
leave
xchg
test
mov
cli
adc
ss
mov
dec
sbb
xor
jmp
mov
iret
adc
or
or
add
add
sub
cmp
adc
dec
ret
or
aaa
push
movb
jbe
push
mov
jg
push
xchg
test
sbb
pop
xor
lret
or
jno
add
push
add
pop
imul
mulb
loope
and
frstor
clc
jge
or
mov
cmpsb
lret
or
cmp
add
adc
add
adc
ret
cld
out
dec
and
loopne
mov
aas
int
inc
sbb
pop
stos
and
jmp
scas
inc
aam
dec
jbe
push
xchg
jmp
iret
scas
mov
notl
or
pop
sti
xor
cmp
xchg
les
ret
inc
sbb
addb
inc
ljmp
or
push
mov
adc
add
fimuls
lock
popf
push
and
sub
repnz
cmp
clc
shll
xchg
xchg
inc
imul
sub
lods
cltd
or
dec
rcrb
sbb
dec
pusha
push
dec
push
adc
bound
pop
sarl
shlb
sbbb
aad
lcall
sbb
mov
lret
test
aas
scas
loopne
movsl
inc
pop
popf
fwait
mov
sbb
aas
gs
test
adc
dec
imul
xchg
mov
and
ret
lock
cwtl
cs
sbb
fidivs
mov
xor
test
aad
inc
dec
mov
repz
push
sbb
mov
sti
ja
cltd
insl
movsl
xor
add
and
xor
repz
inc
daa
dec
testb
mov
adc
xchg
aam
jp
iret
dec
fmuls
mov
push
icebp
pop
test
push
out
mov
jge
jo
adc
roll
jp
jmp
test
cmpsb
push
lcall
fnstsw
push
test
push
jbe
mov
fcoml
lods
fwait
cmc
and
add
mov
aad
and
or
jnp
add
add
cmp
dec
popa
push
lock
sub
mov
arpl
inc
scas
jnp
std
push
adc
je
int3
dec
inc
and
cmpsb
mov
jp
movsl
andl
xchg
test
push
fldt
jecxz,pn
mov
addr16
decb
or
adc
and
inc
and
test
xchg
das
sub
imul
aam
cltd
adc
aam
mov
rcrb
jno
or
push
push
mov
add
mov
dec
sub
test
xor
insb
mov
and
xor
push
inc
mov
jg
movsb
add
dec
loopne
xchg
pop
das
push
mov
push
std
es
push
lods
leave
mov
add
aam
ds
add
outsb
sub
dec
pop
jbe
jl
xor
rorl
push
jae
aad
xchg
sub
fs
in
sub
dec
pop
push
dec
loope
push
cmpl
repz
dec
sbb
push
push
sahf
cmp
cmp
mov
push
cmp
xor
outsb
sbb
dec
orb
shr
arpl
inc
popf
sub
xor
pop
nop
mov
cli
jno
push
sbb
push
imul
mov
iret
push
cli
rclb
mov
cmp
jmp
jne
add
dec
mov
stos
ret
jo
into
mov
and
sbb
js
das
pop
push
fs
jnp
rcrl
mov
fldl2e
xor
scas
fwait
and
inc
inc
add
xor
adc
lock
nop
push
add
clc
ljmp
cmp
pusha
adc
ja
lcall
xor
fisubrs
lods
ja
fwait
sbb
outsl
push
rcrl
push
repz
sub
rorl
and
test
sub
xchg
out
insb
fsubrs
mov
lret
in
push
repz
add
add
add
mov
ljmp
test
imul
pushf
pushf
and
jns
mov
xchg
add
pop
bound
bound
pop
mov
out
mov
das
leave
jge
and
sbb
fdivrs
mov
mov
pop
mov
outsl
dec
cmp
sbb
lcall
mov
mov
out
sbb
mov
mov
mov
fnstenv
bnd
and
add
movsb
mov
xchg
scas
lods
stos
xchg
dec
or
dec
fmull
mov
outsb
sbb
test
sbb
push
aas
pusha
popf
testb
fs
push
jno
popf
stos
xor
stos
jl
jle
inc
bound
inc
inc
sub
jbe
mov
jl
shll
and
or
ss
iret
fadds
daa
mov
iret
sub
test
inc
xor
sub
and
xor
sbb
xchg
test
push
ds
std
shrb
imul
test
subl
or
mov
out
xor
jl
jb
sub
sub
andl
bound
push
and
lea
sbb
push
aaa
in
inc
inc
add
movsb
xlat
cmp
in
and
cld
jnp
cmp
mov
jl
xor
data16
icebp
lods
add
adc
lcall
xchg
inc
mov
mov
sbb
push
sbbl
inc
mov
lods
fwait
and
and
std
mov
pop
lret
mov
fcmovne
mov
and
push
and
jae
lcall
inc
pop
dec
dec
lods
mov
jmp
dec
rorb
faddp
imul
jl
mov
push
and
js
mov
stos
add
add
pop
xor
sub
lret
lea
add
pop
out
push
addb
aaa
and
inc
aas
lods
or
mov
ss
test
add
dec
or
lret
or
rolb
arpl
cmc
lret
push
sbb
xor
sub
sbb
mov
or
lea
sub
test
loopne
or
sub
or
aad
cs
enter
cmpb
fldt
test
pop
pusha
into
fbstp
adc
xchg
cltd
int
adc
movsb
xor
in
dec
dec
addb
mov
push
arpl
mov
cmp
sub
ret
lock
adcl
ss
sub
in
dec
lods
xchg
mov
insl
repz
cmp
leave
cmc
mov
lods
lcall
dec
inc
xor
jne
add
inc
sti
shr
or
inc
arpl
jbe
dec
sub
outsl
push
inc
insb
pop
fs
daa
andl
jno
cwtl
outsb
and
test
xchg
xorb
repz
stc
enter
xor
or
xchg
inc
je
jp
pop
dec
jge
sti
ret
lods
xor
jp
sbb
scas
pop
out
sbb
pusha
nop
daa
gs
stos
add
xor
int
ret
jae
push
fcmovb
and
movsl
add
ret
mov
pushl
test
add
inc
sub
cmp
bound
add
scas
and
and
inc
test
mov
lods
scas
cmp
adc
lds
add
dec
and
fcmovnbe
test
ret
push
andl
mov
adc
out
xchg
push
add
fcomps
and
lock
pusha
cld
repz
xorb
sub
inc
sbb
lods
jns
jo
sub
div
ds
fsubrl
scas
mov
inc
loop
fildl
mov
push
jecxz
lods
push
mov
or
sahf
out
fdivs
inc
xchg
pop
jge
mov
mov
push
scas
jle
int
stos
jo
mov
xlat
rcrb
movsl
jmp
rol
aaa
and
aam
repz
sub
pop
dec
out
add
jne
outsb
jmp
outsl
dec
cli
xor
and
and
lret
inc
and
outsl
push
dec
xor
int
sub
ja
adc
or
aaa
mov
cld
add
adc
cmc
dec
add
repnz
mov
cmp
mov
das
lahf
cltd
inc
lea
add
int3
jnp
xchg
xchg
rcll
mov
cmpsl
mov
stc
sahf
loope
xchg
jbe
sbb
push
jecxz
dec
inc
leave
pop
leave
shlb
pop
lret
jge
push
mov
incb
push
xlat
insb
stos
ret
ret
addb
movb
cmp
xor
adc
add
lods
cld
lods
rclb
cmp
mov
or
insb
and
loopne,pt
bound
mov
or
rcrb
or
mov
int
fisttpl
mov
or
xorl
adc
cmp
fisubs
inc
jecxz
lock
in
imul
pusha
xor
add
mov
mov
in
inc
mov
pop
lcall
dec
adc
sub
xor
sub
icebp
and
lods
sbb
inc
cmp
dec
inc
push
rcrb
out
pusha
mov
jb
incl
gs
and
mov
out
push
fwait
mov
inc
popa
add
js
insl
xlat
and
push
or
and
xor
andb
push
add
out
push
adc
das
insb
sub
orb
dec
loop
aaa
adc
andb
lods
xchg
ja
cmp
andl
jp
pushl
daa
adc
add
and
adc
inc
inc
rol
pop
aam
sub
pop
cmp
fildl
or
mov
rorb
xorb
push
lods
add
popa
lods
mov
movsb
mov
sbb
jno
insl
je
mov
cmp
push
and
jl
ja
push
jo
rcll
jbe
push
or
sub
mov
aam
cmpsl
movsb
lcall
shlb
adc
push
sahf
dec
in
and
jo
add
lahf
sub
int3
inc
add
push
sub
lds
inc
inc
jnp
xlat
popa
sub
mov
hlt
fistl
jp
sbb
stc
or
xor
adc
hlt
dec
arpl
sbb
dec
cltd
leave
cwtl
sub
fadds
int3
cmp
mov
adc
popa
imul
lods
inc
je
rol
sub
shlb
jecxz
inc
sbb
dec
je
loopne
xor
pop
popf
and
and
jp
cmp
rorl
mov
mov
pop
and
sub
pop
xchg
sbb
imul
lcall
imul
ja
sbb
push
inc
aaa
jge
js
jb
sbb
push
sub
imul
fwait
jg
jmp
add
dec
fnsave
or
rcr
sub
daa
pop
js
divb
scas
cwtl
js
in
mov
movsb
xchg
sub
xor
sti
adc
rcrl
add
shrb
dec
stos
sti
mov
jbe
xor
or
add
cmpsb
pop
pop
xchg
pop
sbb
mov
lods
cltd
or
and
js
loop
mov
imul
push
adcb
sahf
xor
and
ss
xchg
mov
sbbl
push
xor
or
nop
mov
nop
mov
jge
clc
lods
es
xor
cmp
fld
push
aaa
xorl
mov
nop
jo
mov
call
popa
sub
arpl
mov
jnp
int3
insl
iret
and
push
outsl
adc
push
loope
adc
lcall
cmp
insb
bound
out
xor
fs
sbb
xor
loope
sub
pop
lock
out
dec
or
or
add
add
lea
push
es
inc
cmp
bound
clc
xor
insb
sti
test
in
add
and
cli
rcll
xor
movb
cmp
pop
sarl
repnz
xor
fldt
stc
push
push
pop
xor
aaa
jle
pop
iret
es
adc
out
xchg
jno
sbb
scas
or
and
mov
loopne
xchg
outsl
jno
sbb
mov
pushf
dec
sub
xchg
notb
rorb
push
xor
loopne
arpl
xchg
dec
push
leave
js
arpl
outsb
iret
or
jmp
pshufw
out
jb
xchg
xorb
and
cmp
ret
sti
ret
loope
or
jno
fs
pop
inc
in
lods
in
aaa
into
add
jb
add
pop
adc
push
fadds
add
stos
mov
add
push
inc
or
arpl
or
out
cmp
adc
adc
addr16
mov
imul
jb
mov
hlt
out
jno
mov
add
rorb
jle
arpl
push
shrl
jne
xchg
cmp
test
sub
mov
into
sbb
and
es
or
mov
rorb
inc
and
sub
scas
jp
xor
or
ds
adc
es
mov
movsl
pusha
or
mov
pop
xchg
lea
jb
sbb
fs
pop
cmp
add
pop
sarl
enter
inc
and
sbb
stos
sbb
cmp
and
xor
sahf
popf
fwait
inc
sbb
jge
dec
cli
jb
insl
inc
sbb
push
es
mov
outsl
cmp
rorl
xor
popa
stos
push
ja
pop
aad
outsb
mov
lret
sahf
dec
lret
mov
aam
xor
xchg
pop
sbb
mov
jbe
hlt
or
lods
xor
mov
iret
inc
in
pop
xor
mov
arpl
div
mov
mov
sbb
jp
rol
and
add
jp
out
pusha
mov
inc
into
lods
push
adc
in
jne
push
cltd
out
xchg
or
ret
iret
lock
xor
call
jmp
lret
mov
das
adc
call
sbb
cmpsl
xor
lods
and
popf
inc
or
and
adcl
pop
xchg
lcall
and
lea
xchg
call
es
aam
dec
or
bound
clc
das
jo
add
mov
lahf
add
imul
cmc
aaa
xor
inc
xlat
inc
and
and
js
mov
scas
cmp
push
out
das
xor
and
push
addl
adc
dec
movaps
cmp
xchg
mov
cmc
sub
mov
push
sbb
aas
nop
add
xor
jmp
cmpsl
sub
mov
push
xor
in
std
pop
sahf
call
add
add
jno
iret
shlb
test
or
ret
xchg
sub
sbb
outsl
push
popf
pop
ret
xchg
adc
lcall
adc
inc
sbb
inc
dec
mov
cs
aad
les
les
sarl
cmp
jno
jmp
pop
jecxz
mov
clc
inc
xchg
fsubr
jg
inc
rcr
iret
and
add
xor
inc
fwait
xlat
je
je
in
test
ljmp
pop
popa
pop
dec
cli
inc
sti
shll
sbb
or
xor
adc
pop
call
ljmp
sar
es
stc
push
sub
lahf
inc
xchg
jp
lea
fiadds
mov
movsb
add
mov
loope
xor
push
mov
aad
imul
xor
insb
loopne
pop
push
mov
xchg
mov
mov
cmp
xor
dec
add
call
test
das
add
mov
adc
inc
sub
pop
push
lds
ds
fs
mov
fs
shrb
mov
fwait
sub
lret
pop
daa
jae
cmpsl
mov
jmp
push
and
in
lret
xlat
scas
and
lahf
pushf
sbb
push
enter
xor
aad
into
cmpsb
pusha
or
scas
jp
add
push
mov
leave
in
add
mov
add
add
aam
mov
sti
pop
or
rclb
mulb
mov
icebp
dec
mov
outsl
mov
addr16
jg
jg
pushf
sti
jle
pop
mov
fsubrs
dec
call
mov
arpl
stos
test
fwait
stos
mov
add
pandn
push
pop
and
mov
ret
mov
inc
add
mov
mov
daa
mov
lock
arpl
mov
cmp
shld
mov
js
ss
cmp
xchg
cli
rol
mov
pop
jmp
or
mov
mov
mov
push
jg
data16
jnp
xchg
xchg
shl
ret
mov
xchg
sub
push
ret
pusha
je
sahf
out
mov
inc
or
pushf
inc
pusha
push
fidivs
jb
jno
pop
shll
cs
push
ficomps
fsubs
cmpsl
mov
add
sbb
push
jmp
mov
mov
push
push
fstpt
arpl
mov
ret
daa
fsub
mov
shl
outsb
dec
mov
mov
add
pusha
das
pop
imul
pop
int
mov
movsl
cmp
inc
aam
sub
aam
aam
adc
shll
sbb
push
add
pop
rolb
pop
or
sub
nopl
push
clc
clc
sbb
popw
shlb
scas
mov
sub
add
and
xchg
and
mov
dec
sub
mov
in
xchg
add
arpl
into
mov
and
xor
int
pop
je
loopne
sub
cmc
add
adc
jns
and
pushf
mov
nop
rorl
test
outsl
jmp
sbb
aaa
mov
or
pop
andl
xor
enter
iret
lahf
mov
xchg
and
ret
adc
jbe
dec
int3
mov
stc
xor
add
daa
xchg
insb
outsl
push
hlt
sbb
dec
push
push
fwait
imul
add
pop
lret
push
xchg
test
mov
repnz
testb
push
or
lds
aas
and
add
movsl
adc
iret
lods
sbb
daa
in
and
inc
inc
push
xchg
scas
pop
cwtl
cmp
mov
pop
sub
dec
rcrb
cmp
es
and
jno
rolb
mov
lods
scas
jae
cmp
sbbl
sbb
aad
or
in
hlt
imul
ret
jae
mov
add
inc
add
or
in
cli
js
push
mov
sub
cwtl
subb
pop
imul
flds
divb
aas
mov
sbb
jmp
in
jo
pop
sub
loope
add
sti
repnz
aad
add
mov
xchg
je
jecxz
imul
es
outsl
and
call
lds
aam
adcl
and
dec
jne
loopne
sub
mov
mov
dec
dec
imul
test
or
fwait
cmp
shlb
addr16
mov
inc
lea
sub
ja
js
addr16
shrl
test
cwtl
push
dec
stos
idivl
inc
push
movsb
mov
inc
shlb
dec
test
stos
scas
mov
inc
mov
sbb
sub
push
adc
cmc
mov
into
mov
pop
das
xor
stos
dec
or
and
sub
lock
dec
das
into
ss
fiadds
iret
lret
add
or
and
sbb
cmpxchg
mov
outsb
adc
leave
cmp
insl
mov
gs
mov
pop
inc
and
and
es
push
pop
pop
mov
pop
sub
and
pop
cmpsb
fldcw
mov
add
push
int
out
sub
pop
mov
shlb
and
dec
stc
mov
mov
inc
sbb
sub
or
mov
fwait
arpl
fwait
es
iret
enter
sbb
ret
jmp
jnp
push
mov
lcall
mov
out
mov
js
mov
xchg
loop
dec
mov
add
in
js
lahf
pop
jns
leave
rolb
fisubs
lods
or
add
pop
or
add
scas
push
in
xchg
rclb
test
xchg
mov
cmp
and
insl
inc
jg
test
sub
pop
je
or
cmp
xchg
sahf
lea
orl
or
dec
sub
or
inc
xor
lcall
mov
inc
xchg
fidivs
rorb
add
ja
insl
fisubrl
je
xor
test
xchg
sub
sub
push
push
cmc
fistpl
hlt
sbb
shrb
pusha
sub
pop
int3
hlt
add
mov
in
rorl
adc
aad
mov
aam
lret
mov
mov
bound
cltd
add
cwtl
insl
lret
in
push
sarb
popa
imul
test
lret
rcrl
mov
dec
out
iret
add
add
jnp
push
or
icebp
sbb
mov
add
sbb
clc
dec
je
sub
xchg
rcrl
push
orl
ds
sbb
mov
lret
outsb
sbb
push
xchg
arpl
mov
js
icebp
mov
movsb
adc
push
sahf
rorb
mov
pop
aam
mov
add
or
fcomps
imul
stos
or
cmpsb
and
cmp
sar
dec
out
sbb
inc
mov
sub
das
sbb
pop
add
sub
div
mov
inc
mov
fnsave
or
pop
bound
cmp
or
sbbb
cmp
popa
push
add
loop
and
and
jl
test
mov
aaa
ja
add
or
and
and
or
imul
and
xchg
dec
sbb
leave
je
inc
bound
in
test
adc
outsb
push
cwtl
psubb
mov
adc
sbb
jge
jno
sub
and
push
pop
jb
stos
mov
inc
fnsave
mov
or
inc
fists
push
or
push
sub
push
mov
adc
scas
fwait
stos
cli
xchg
push
sbb
jmp
push
lock
mov
add
inc
sbb
sub
adc
xor
sub
mov
dec
inc
fdivrs
push
es
mov
push
and
pop
jnp
cmp
sqrtps
mov
loopne
push
push
ret
cltd
das
inc
pushf
sbb
add
orl
mov
outsl
inc
aaa
pop
push
imul
daa
xchg
ret
test
mov
subl
jno
xchg
push
jo
pop
out
jae
out
sar
and
push
addr16
mov
xor
loopne
std
jle
cld
jp
xchg
sub
and
xchg
stos
iret
cmp
icebp
mov
lods
mov
and
dec
pop
sbb
xlat
ljmp
mov
in
push
or
das
cmpsl
out
mov
lds
dec
and
sub
outsb
sub
sbb
jnp
and
push
int
fnstsw
test
sbb
xchg
xchg
inc
sbb
or
fdivrs
push
jnp
sub
or
sbbl
aam
mov
cld
out
add
or
or
bound
xchg
test
or
inc
sbb
mov
push
add
loopne
cmc
and
dec
insb
jno
cmp
mov
and
mov
fsubs
and
and
pushf
jo
add
xchg
lods
adc
ror
dec
or
movsb
inc
insb
loope
sbb
lret
add
daa
jno
aas
mov
mov
and
push
xchg
fiaddl
push
je
aaa
xorl
mov
add
data16
mov
mov
dec
inc
jns
ja
xor
sbb
push
mov
push
test
cmp
loope
pop
push
cmp
test
pop
or
daa
push
clc
mov
pop
jo
and
rcl
add
push
fwait
scas
push
xchg
sbb
lea
stc
jle
scas
add
xchg
or
ret
loopne
pop
daa
jns
mov
or
sbb
add
sbb
stos
icebp
adc
mov
call
push
pop
bound
jo
push
mov
lret
cwtl
in
adc
add
dec
pop
xchg
xchg
mov
sub
and
ljmp
loop
jge
and
mov
icebp
insl
xor
cli
pshufw
fcmovnbe
and
xchg
push
sbb
xchg
or
dec
ljmp
icebp
cwtl
or
xor
sub
fsts
mov
xchg
mov
mov
jl
pop
aaa
int3
or
add
loop
xor
mov
mov
push
sub
adc
imul
push
cmp
rcrb
lods
mov
mov
inc
loope
lea
mov
je
cmp
xor
lods
insb
cmp
push
adc
xchg
pusha
and
test
adc
cwtl
mov
scas
jo
jno
cmp
xor
or
or
push
mov
adc
leave
push
mov
sub
scas
lea
loopne
clc
pop
push
fcomip
iret
adc
jne
pop
rclb
dec
outsl
add
push
mov
mov
mov
xchg
jle
popa
or
outsb
add
mov
push
test
mov
push
pop
mov
fs
cmpl
rcr
nop
and
pop
outsl
imul
loopne
cmp
cmp
aad
or
and
jo
movsb
sbb
aaa
scas
sbb
push
rcll
add
lret
das
and
jmp
mov
push
ja
fisubs
scas
imul
gs
jo
pop
mov
lret
int
pusha
add
adc
cmp
fldcw
clc
iret
js
add
clc
cmpb
push
mov
aam
pop
lar
jno
adc
fwait
andb
in
jmp
push
test
in
fwait
pusha
mov
loope
push
lea
adc
pop
sahf
add
push
inc
jne
dec
mov
out
mov
je
push
jl
xlat
aad
mov
cmpsl
fadds
jmp
inc
insb
clc
aad
push
sbb
sub
inc
rolb
jns
adc
fwait
cmpsl
adc
push
xor
push
lret
mov
add
dec
test
jp
mov
dec
mov
inc
mov
xchg
push
mov
add
ficoms
ret
adc
push
xor
dec
aad
andb
psrad
fstl
lcall
rclb
aad
or
push
shll
xchg
push
cmp
fistl
popa
and
dec
jge
out
sti
cmp
mov
popa
popa
pop
js
popf
loope
xor
push
repz
add
or
add
movsb
movsb
mov
mov
pop
jecxz
add
xorl
xor
and
inc
in
push
xor
daa
jo
and
mov
cmp
or
and
das
aaa
xor
xchg
and
push
sbb
outsl
sub
cmp
jae
sarb
or
rcl
sbb
cmpsl
or
mov
addr16
lea
test
inc
stos
pop
imul
jmp
add
sub
movsb
out
xor
xchg
push
ret
fs
popf
or
dec
fmuls
push
lret
xlat
xchg
add
es
sub
lods
jns
arpl
push
lahf
push
jo
dec
sbb
fldenv
popa
ror
xchg
or
xchg
fstpt
mov
mov
mov
aad
aaa
push
xchg
adc
scas
fistps
jmp
push
icebp
mov
pop
dec
fcomip
mov
add
js
pop
and
jns
dec
pop
ljmp
and
sbb
add
lret
insb
push
and
inc
pop
add
pop
adc
add
dec
mov
sti
xor
sbb
sbb
addb
jecxz
and
or
out
push
and
push
pop
adc
dec
xor
jmp
push
je
mov
xor
pop
and
gs
popf
mov
and
sbb
xchg
pop
mov
ljmp
fbstp
cwtl
inc
test
inc
jmp
push
xchg
add
lea
fstpt
jecxz
mov
xor
sbb
lods
sbb
cs
xor
cmp
outsl
fstps
fmull
push
jno
mov
test
mov
movb
pushf
jo
leave
sub
call
dec
mov
pop
cmp
ljmp
faddp
push
nop
decl
push
outsl
into
adc
icebp
mov
fcoms
ja
pop
add
sbb
sub
clc
into
inc
and
ja
add
jecxz
pushf
xor
sbb
mov
shl
and
add
push
testb
mov
sub
sbb
mov
cmpsb
hlt
jne
jbe
add
pop
icebp
mov
rorl
mov
movsl
test
jo
outsl
mov
movsl
cmp
aas
mov
xchg
hlt
jnp
dec
mov
xchg
imul
jecxz
and
sbb
xchg
lock
cld
mov
loope
pop
in
daa
mov
add
outsb
pop
mov
mov
imul
into
pop
out
ret
or
xor
fiadds
pop
cmpsb
mov
mov
sub
sbb
xor
pop
dec
push
xor
repz
pop
pop
movsl
cwtl
inc
add
xor
ret
mov
jmp
mov
mov
sbb
pop
faddl
jno
lods
test
push
out
addb
dec
ljmp
adc
cs
mov
mov
hlt
pop
push
lahf
ss
ds
cmp
xchg
pop
mov
xlat
mov
outsb
arpl
push
add
cmp
out
dec
leave
jne
sbb
push
popa
and
cmp
and
jnp
mov
shlb
cmp
inc
shll
scas
daa
cwtl
xorl
mov
lock
and
cmp
and
sarb
sub
mov
push
sub
mov
inc
cltd
test
fidivrl
pop
xchg
cwtl
or
sbb
or
push
movsb
mov
pushl
arpl
ret
inc
loope
xor
sbb
shrl
jo
push
out
ficoms
inc
lods
daa
jge
adc
push
mov
mov
int3
ss
daa
int3
add
or
insb
mov
push
inc
xchg
xchg
xchg
rorb
in
bound
mov
pusha
xor
sbb
xchg
imul
pop
movb
shl
ret
aaa
jns
add
pop
nop
in
jo
sbb
mov
add
add
xchg
loope
test
js
enter
mov
cmp
testb
and
lods
sbb
je
ficomps
pop
mov
cmc
es
push
and
xchg
inc
pop
imul
jbe
jmp
or
xor
add
add
imul
cltd
add
pusha
add
xchg
mov
xchg
out
adc
xor
xor
push
inc
or
sbb
push
imul
cwtl
outsl
add
dec
mov
jo
call
insl
adc
cmpsl
inc
lret
mov
int3
subb
and
mov
mov
sub
sbb
dec
dec
dec
movsb
cli
nop
outsb
xlat
out
addr16
adc
and
shl
or
aaa
or
outsl
push
cmpsl
inc
xchg
lods
ja
testb
fcoml
mov
pop
hlt
and
dec
pop
inc
jmp
or
push
xchg
lret
lods
call
jecxz
add
add
jl
lods
add
outsl
xor
add
adc
mov
adc
mov
push
xlat
mov
pop
mov
cmp
es
lock
push
popw
imul
lods
mov
call
shl
lds
fucomi
cmc
xchg
inc
jbe
in
sbb
aaa
mov
ret
or
aaa
ja
jae
in
loopne
fsub
push
imul
and
cmp
sbb
fstpt
mov
sub
xlat
insl
jmp
fs
adc
hlt
scas
insl
adc
xchg
pusha
add
xchg
and
inc
enter
das
dec
mov
pop
jg
pop
nopl
push
aaa
push
add
add
das
xchg
jno
rcll
push
subl
or
mov
mov
and
pop
xor
icebp
ds
jb
adc
cmpsb
ss
in
xor
movsb
xor
ror
add
bound
fwait
nop
mov
push
clc
mov
add
rol
divb
mov
dec
mov
pusha
fsubrs
orb
sub
pop
ljmp
xor
test
add
push
mov
push
loopne
or
xchg
adc
sbb
add
js
and
mov
cltd
add
xchg
or
inc
jno
xchg
rcrl
dec
repz
push
mov
and
orl
pop
and
loopne
adc
push
and
pop
stc
hlt
jl
add
push
and
nop
push
adc
jl
mov
mov
mov
or
vmovdqu32
icebp
data16
imul
push
mov
bound
loopne
test
sbb
push
int3
adc
daa
push
add
xor
and
sub
in
pop
mov
jmp
cmp
ja
mov
xchg
inc
mov
ror
add
xor
rcll
push
or
sbb
jl
rolb
xchg
inc
loope
mov
mov
movsb
mov
add
inc
xor
inc
mov
dec
ljmp
insl
mov
ret
iret
scas
mov
outsl
test
sub
into
xchg
mov
fbstp
jo
cmpsl
test
test
mov
addb
out
xchg
or
push
xchg
insl
xchg
loop
rcl
xor
jmp
lock
aam
xchg
adc
out
jle
icebp
pop
aad
xchg
push
popa
cmp
inc
subl
jecxz
xor
add
xchg
add
aaa
mov
jg
mov
scas
xchg
cwtl
loop
test
cmp
sub
mov
add
cmp
rcrb
rep
or
pushf
mov
push
mov
shlb
sub
insb
js
and
xchg
pop
out
daa
inc
sub
cli
movsb
push
push
ja
push
ja
faddp
mov
inc
mov
xchg
into
cltd
push
xor
imul
icebp
xchg
dec
aam
push
push
dec
inc
pushf
or
popa
jo
jecxz
push
adc
ljmp
sbb
pusha
mov
push
add
js
push
iret
sbb
pop
rorl
add
push
xchg
xchg
add
add
ret
xchg
inc
push
ja
cmp
mov
cli
xchg
mov
xor
js
inc
mov
mov
dec
push
rcll
jg
dec
xchg
js
adc
xchg
mov
testb
mov
jp
stos
in
rorb
shrb
dec
rcl
push
ret
or
enter
lock
xchg
cmp
ret
pusha
add
sbb
scas
mov
sbb
add
mov
pop
mov
xchg
dec
je
add
movsb
mov
fldl
mov
cmovns
lcall
in
icebp
sub
fwait
arpl
in
addr16
gs
fwait
cltd
clc
popa
xchg
lods
adc
or
jo
sbb
enter
xchg
xchg
mov
lock
sub
repz
and
jp
sbb
inc
test
cmp
mov
pop
call
inc
test
je
jnp
fadd
pop
mov
dec
fwait
je
sub
push
mov
test
addr16
jecxz
mov
push
loopne
test
mov
jbe
add
jg
jl
lret
iret
jns
and
je
xor
rolb
shlb
fidivrl
mov
aaa
aam
xchg
mov
jo
dec
es
fiadds
or
fstpt
scas
in
dec
xor
and
mov
inc
jbe
or
inc
xor
cld
mov
push
and
arpl
pop
test
shrb
adc
bound
jb
aad
jmp
lods
outsl
sbb
push
and
orb
scas
enter
ja
lds
bound
sub
inc
fucomip
les
cs
add
ss
sbb
popf
clc
pop
add
xchg
shl
sub
sbb
dec
mov
enter
cltd
mov
shl
xchg
imul
dec
xor
sbb
mov
testb
dec
pop
pop
jno
sbb
out
sbb
and
cmp
push
outsl
sub
call
sbb
and
imul
jno
rorl
sbb
add
xlat
insl
call
cmpsl
and
lods
and
mov
aad
xor
pop
xor
cs
mov
js
sub
push
outsb
movsb
add
push
push
bound
mov
push
ds
or
cmp
jl
aas
inc
adc
pop
das
or
jecxz
push
mov
add
push
pop
pop
cmp
out
adc
sbb
sub
dec
xchg
pop
pop
pop
push
add
push
ja
mov
push
icebp
inc
fildl
scas
jo
sti
jl
jmp
repz
in
ljmp
push
aas
jle
adc
aad
mov
pause
add
shrb
push
jns
into
push
cmp
add
add
push
clc
xchg
jg
xor
rcrl
loope
mov
sbb
icebp
push
pop
jbe
ja
jge
add
inc
repnz
icebp
test
jae
call
sti
xchg
add
pop
rcrl
stos
fistpll
xchg
cmp
mov
add
mov
jbe
jne
push
cmpsl
les
mov
test
xor
xchg
cmp
js
js
jno
xor
sahf
mov
lahf
and
mov
es
xor
mov
shl
les
mov
adc
pop
cmp
sarl
rclb
push
ss
daa
xchg
les
push
sub
push
inc
xor
xchg
add
movsb
jb
orl
fs
pop
int
rclb
iret
add
add
pusha
jbe
shlb
outsb
daa
xor
push
sahf
xchg
or
scas
bound
notl
jno
loope
sub
mov
xchg
es
or
call
cmp
ljmp
test
ss
sbb
clc
call
add
fiadds
xor
jo
sbb
inc
pop
adc
xor
fwait
dec
imul
arpl
inc
movsl
lods
int
insb
sub
aas
cmpsl
add
cmp
xor
cmpsl
mov
xor
adc
mov
leave
enter
or
clc
and
sbb
cmp
mov
mov
pop
cmpsl
mov
lcall
out
jno
dec
enter
negb
fstpt
pusha
xlat
or
xchg
xchg
sub
addr16
add
or
dec
lahf
and
sub
cmp
lea
xchg
cs
repz
scas
inc
mov
enter
outsl
lahf
xor
sbb
adc
push
mov
lods
daa
scas
and
das
lods
imul
outsb
dec
sbb
mov
sub
loope
pop
daa
shll
inc
xor
loope
mov
pop
jge
cmp
pop
xchg
add
stos
enter
add
lcall
sub
xor
xchg
loope
movsl
jbe
lret
js
call
ja
cmpsl
subl
pop
mov
flds
pop
aam
mov
rclb
je
jl
cmp
fsubr
mov
popa
push
les
es
bound
inc
lods
or
sbb
dec
jge
jmp
cmp
push
sub
aam
jecxz
out
test
push
sub
cmpsl
sti
jle
mov
popa
hlt
sub
dec
enter
mov
and
and
pop
lahf
mov
nop
pop
jb
add
ret
sbb
in
jmp
sbb
pushf
xor
and
jb
cmpsl
sub
mov
cmpsb
xor
mov
scas
sbb
rcl
add
or
iret
mov
dec
loopne
push
and
arpl
add
cmp
inc
xchg
sarl
jno
push
dec
adc
iret
adc
pop
xchg
stos
test
jecxz
pop
or
iret
cmp
xchg
dec
lret
jmp
inc
jo
push
fidivrs
push
xchg
xorl
rcll
jp
cmp
push
dec
push
push
inc
popa
popa
push
push
pop
cmpsb
ja
js
add
mov
das
ljmp
test
add
push
mov
out
adcl
into
das
jecxz
xchg
dec
je
scas
lock
rcrb
je
mov
aaa
mov
xor
jae
cmpb
fcoms
lret
sub
dec
and
cmc
inc
and
or
jo
xchg
push
mov
cmp
aad
mov
cmp
push
inc
adc
in
jge
js
fwait
pop
aam
pop
loope
shlb
pop
jns
stc
sbb
ljmp
lods
jg
movsb
in
int3
push
pusha
cmp
add
std
add
xchg
fsubs
popf
push
stos
iret
aam
inc
cmp
adc
adc
jo
add
push
add
mov
mov
dec
mov
enter
pop
cmp
test
aaa
je
movsb
sub
jno
shlb
xor
jo
sbb
js
adc
cmp
jbe
and
add
cmp
shll
mov
push
dec
repz
rcll
data16
mov
imul
sbb
push
scas
sbb
and
fisubs
pop
and
outsl
iret
adc
xchg
das
jb
xlat
sbb
mov
lods
sub
sub
and
insb
cmp
test
cmp
sub
dec
sbb
and
xor
jmp
mov
decb
lcall
fidivrl
scas
outsl
pop
into
faddp
ja
adc
add
insl
mov
shrl
es
aaa
sub
push
jne
pusha
bound
add
sub
pop
jo
xor
xor
into
neg
std
pop
xor
mov
gs
scas
ds
pop
jp
inc
mov
push
cwtl
sub
out
add
xchg
sbb
mov
xor
mov
jg
fstps
cmp
dec
sub
cmp
xor
sbb
das
push
pop
outsl
mov
mov
faddl
sub
cwtl
jle
imul
popa
add
pop
pop
push
adc
movsb
jp
mov
iret
pop
cmp
nop
movsb
inc
adc
cmp
mov
push
repnz
lods
pop
scas
cmp
push
adc
pop
outsl
sahf
int3
ds
push
jbe
lret
rcrl
sbb
and
jmp
xor
negl
stc
mov
lock
sahf
or
sti
cmp
push
adc
aad
xor
cmp
inc
loope
cmp
movsl
je
aad
push
outsb
and
outsl
ljmp
pop
jae
adc
ror
ljmp
sbb
push
cmp
inc
popa
arpl
mov
imul
mov
push
test
in
rclb
mov
add
adc
jmp
pop
sbb
cmp
mov
xchg
pop
test
out
push
jo
xor
ss
icebp
test
pop
les
cmpsb
arpl
subl
pusha
sbb
add
add
jmp
inc
fnstsw
pop
adc
add
and
mov
mov
and
push
or
inc
cmp
out
inc
inc
pop
call
jmp
push
mov
push
push
aad
arpl
fcompl
or
or
xchg
dec
pop
cld
test
stos
mov
mov
sbb
push
adc
lds
jns
and
outsl
insb
faddl
add
sub
cmp
sub
adc
mov
mov
sub
outsl
sbb
lds
loopne
rolb
add
das
lods
mov
add
scas
mov
rorl
mov
add
int
add
jae
add
jno
arpl
fiadds
add
cmp
ss
sub
js
pop
into
jne
jbe
add
loopne
loopne
js
notl
cld
sti
push
or
lock
int3
and
les
div
and
or
sub
sub
add
or
xor
push
push
add
and
push
rclb
or
or
add
push
ljmp
lock
jmp
icebp
fsubs
mov
mov
mov
shlb
das
adc
jb
and
add
stc
add
js
lock
stc
add
jo
add
add
pop
add
cmp
sbb
pop
sarb
popa
xlat
test
out
or
add
loopne
or
add
lsl
push
or
fidivl
nop
mov
rolb
rolb
ds
pusha
push
mov
fmuls
or
daa
push
pop
shlb
imul
cmc
or
or
pusha
addr16
or
adc
pop
fsub
clc
in
pop
dec
cli
imul
or
mov
sbb
or
lods
pop
push
jo
sbb
pop
arpl
popf
cli
pop
lock
add
cmp
push
lcall
lods
imul
lods
mov
mov
push
in
pop
punpckhbw
scas
pusha
dec
or
mov
inc
arpl
or
imul
adc
in
enter
ret
cld
mov
sbb
inc
pop
lret
subb
cmpb
or
pop
or
dec
test
mov
mov
mov
push
sbb
or
leave
aam
push
pop
sub
sub
adcb
insb
add
jle
add
jl
push
dec
add
adc
loope
rolb
sbb
push
popf
lock
sbb
push
lahf
aaa
adc
dec
and
into
sub
lock
scas
fstps
lods
add
xchg
xchg
aaa
add
pop
xchg
pushl
or
mov
xor
sbb
pop
jno
sbb
enter
std
gs
cwtl
push
clc
out
ja
mov
pop
jmp
mov
mov
xor
addr16
jb
add
inc
dec
xchg
push
js
outsb
std
mov
push
out
push
shl
call
xlat
rcll
clc
jo
repnz
sub
mov
decl
fwait
or
hlt
xchg
cmp
addr16
into
mov
sbb
loope
pop
loope
xor
in
iret
cld
cmp
xor
rcrb
pop
sub
aam
add
push
addb
ss
cld
int3
xchg
cmp
cli
lea
xchg
into
dec
or
dec
jmp
daa
dec
negb
sbb
mov
dec
rcl
inc
in
icebp
mov
call
pop
scas
and
or
pop
aam
cmpsl
sub
pusha
pop
inc
push
sbb
push
nop
sbb
cmp
jns
pop
push
adc
nop
loope
jmp
sub
and
lods
add
dec
inc
jae
je
cs
insl
dec
cld
test
outsl
jmp
fisubl
ljmp
pusha
adc
lods
filds
popa
shlb
out
pop
mov
cltd
js
rorl
test
push
pop
mov
push
hlt
pop
jb
stc
lods
xor
sbb
sub
mov
mov
mov
cmp
add
daa
lcall
mov
shlb
stos
int3
adc
jecxz
mov
sbb
aas
push
inc
mov
and
imulb
adc
cmp
scas
iret
sbb
ucomisd
jb
clc
sbb
push
cmp
aas
pop
xor
iret
fcmovbe
cltd
rol
jge
cmp
fsubs
es
cs
inc
mov
js
es
std
pusha
movsl
sbb
dec
mov
dec
rcrb
iret
fmul
test
push
ds
shlb
and
shll
pop
test
mov
push
jno
add
mov
ret
imull
lock
jo
inc
jno
arpl
shl
sub
addr16
imull
push
sbb
mov
jbe
inc
mov
and
dec
sti
push
ljmp
in
lods
lods
add
inc
mov
lods
and
sbb
scas
jg
test
mov
cmpsl
push
repz
addr16
shll
jae
out
rcl
hlt
push
sub
scas
push
cmp
xor
in
push
lock
mov
cmpsb
jb
in
cmpb
push
cltd
inc
mov
pop
ss
and
test
fcoml
cwtl
scas
clc
gs
dec
pop
pop
push
mov
and
or
filds
xchg
out
mov
mov
in
cmp
mov
addr16
jmp
lret
xor
adc
jge
pusha
adcl
cmp
cmp
in
add
push
push
and
int3
cmpsl
mov
mov
or
lret
sub
out
pop
cmp
sub
enter
call
jmp
imul
je
sarb
icebp
mov
xchg
mov
movsb
imul
pop
call
or
stos
push
mov
mov
js
js
stos
jbe
das
inc
cmp
rcrb
xlat
pop
xor
das
flds
inc
mov
jge
jnp
cld
repnz
mov
pop
loopne
in
cld
imul
rcr
dec
cmpsl
dec
add
jne
pop
neg
push
xor
lods
jmp
scas
mov
in
jmp
movsl
les
outsl
sub
sbb
ljmp
cmp
mov
pop
add
stos
imull
rcrl
shll
clc
repnz
iret
push
push
out
shll
sub
xchg
js
mov
jmp
mov
xchg
hlt
add
icebp
and
push
add
repz
out
jns
and
adc
mov
sub
sbb
negb
sub
jns
mov
hlt
add
inc
dec
mov
icebp
sti
add
nopl
and
add
mov
cmp
mov
ficoms
fldenv
push
inc
or
aam
push
and
xchg
mov
mov
add
sbb
in
out
mov
sub
ja
mov
imul
mov
jae
js
jno
mov
pusha
jmp
cmp
fs
inc
daa
dec
iret
sub
or
mov
les
fs
pop
insb
movsb
xchg
fcomps
pop
or
fcoms
and
es
pop
sub
add
push
sbb
and
flds
cld
ljmp
adc
or
imul
stos
dec
out
mov
fdiv
rcl
scas
dec
or
cmp
inc
adc
add
rcrb
xchg
shrb
xor
std
xlat
in
push
sbb
dec
fadds
jo
add
xor
xchg
arpl
push
jl
mov
movb
loopne
enter
or
xchg
xchg
jbe
xchg
out
ret
popf
pop
es
mov
mov
add
add
aad
lods
ja
clc
pop
add
pop
rorl
cs
and
jb
call
orb
and
ret
inc
push
adc
or
imul
push
fstp
jb
push
inc
dec
jg
add
mov
add
mov
dec
jp
sti
andl
dec
or
mov
mov
sub
xchg
ret
or
divb
add
frstor
repnz
and
add
and
and
add
jge
pop
daa
ficomps
stos
imul
dec
lock
mov
pop
add
loopne
fucomip
dec
addl
pop
add
or
jecxz
dec
psubw
push
add
sarl
pop
aam
stos
imul
cli
roll
adcb
jo
dec
inc
das
inc
lahf
filds
xor
pop
aaa
insl
movsl
pusha
and
pusha
pop
pop
or
lret
lds
ljmp
push
pop
lret
mov
xor
rolb
add
adcb
test
xchg
or
dec
add
cmp
cltd
xor
push
bound
push
outsl
popa
mov
and
cli
cmp
stos
sub
push
jp
add
and
mov
cmp
enter
xlat
out
xchg
pop
cmp
and
loopne
push
add
lods
and
icebp
dec
cmpsl
mov
mov
xacquire
push
sub
push
push
dec
insl
mov
outsl
cmp
es
or
jbe
mov
lret
xor
shll
dec
push
adc
out
lods
and
addb
sub
loopne
xchg
sub
sbb
mov
imul
xchg
xchg
adc
enter
notl
test
jne
add
imull
push
xlat
xchg
dec
outsl
insl
nop
lcall
shl
call
and
xor
mov
in
xchg
xor
add
mov
push
cmp
and
add
or
lds
jl
jl
scas
pusha
insl
cltd
and
xchg
lods
in
leave
subb
and
jno
push
pop
iret
dec
push
mov
test
pop
mov
scas
pop
xchg
or
mov
adc
jle
iret
rol
cmpsl
loope
inc
insb
pop
scas
xchg
pop
inc
stc
jbe
mov
lret
push
loopne
mov
push
scas
or
insl
loope
xchg
and
insb
mov
loope
cmp
push
sbb
pop
lret
arpl
movsl
ljmp
and
sub
ja
mov
add
ja
jne
xchg
push
push
jnp
jl
pop
mov
jg
mov
push
jo
push
inc
jge
mov
cmp
in
addr16
sub
movsl
cs
mov
jecxz
jb
ja
mov
dec
mov
adc
mov
add
or
sub
mov
test
push
arpl
push
xchg
movsl
es
mov
mov
jo
xchg
lea
fildll
sarb
cmp
inc
xchg
mov
jle
and
jb
pop
mov
jp
push
mov
or
gs
out
sbb
imul
das
and
addr16
xor
lods
scas
lds
mov
in
ret
sar
add
cs
ret
sbb
cmp
push
sti
insb
je
add
mov
push
in
jbe
add
push
cmp
js
lods
jno
push
and
adc
sbb
aad
push
mov
hlt
stos
nop
push
jecxz
pop
xor
movsb
loopne
pusha
loopne
dec
dec
pop
sbb
inc
dec
add
lock
andl
or
ja
lock
dec
and
loopne
fisttpl
enter
shl
insb
dec
gs
mov
out
push
lods
dec
in
out
dec
add
add
jge
adc
push
lahf
cmpb
divl
or
mov
push
inc
and
xchg
sahf
mov
inc
stos
aam
iret
xchg
shrl
rcrl
test
imul
pop
mov
rorb
pop
xchg
arpl
call
lea
outsl
mov
sbb
and
outsl
mov
addr16
test
push
jno
and
test
sbb
pop
jo
gs
loopne
pop
movsb
loopne
xchg
mov
push
mov
ror
xchg
jmp
xor
xchg
sahf
xchg
sub
mov
xchg
add
das
pushf
pop
dec
mov
lock
in
sub
pop
popa
roll
jo
add
aaa
push
rcr
mov
fwait
jle
or
loope
push
add
sub
repnz
iret
mov
aam
int
or
sbb
xchg
xor
gs
orl
jne
xchg
xchg
jne
dec
jmp
insl
sbb
xchg
or
testl
sbb
mov
pop
es
sti
or
xor
mov
mov
inc
int
aam
out
pop
dec
add
and
in
mov
xchg
movsb
jns
jmp
andl
pop
sbb
and
xchg
and
inc
or
xor
in
mov
hlt
sub
punpckhbw
and
or
sub
push
pop
and
adc
push
lea
and
xacquire
daa
add
adc
ja
test
add
popa
imul
rolb
push
sub
inc
imul
add
jae
xchg
add
lods
or
pop
ret
sub
add
inc
or
ret
shlb
pop
daa
xor
or
outsl
or
xchg
push
and
loopne
cmpsl
mov
js
sbb
mov
or
clc
xchg
or
ss
enter
xchg
sub
ficompl
les
inc
iret
mov
push
adc
fdivl
scas
and
lcall
inc
sub
loope
mov
test
in
xchg
int3
push
push
jp
xchg
xchg
dec
sub
faddl
add
sub
push
dec
cmp
mov
push
cmp
sbb
mov
add
inc
mov
mov
sub
push
sub
loopne
loope
or
fwait
sub
mov
sub
testb
shlb
sub
xor
sbb
or
sbb
data16
xchg
gs
or
pop
imulb
pop
invd
fldcw
popa
daa
cwtl
popa
inc
flds
cmp
jge
arpl
and
inc
add
and
mov
push
push
sub
std
mov
jmp
out
jo
mov
inc
mov
imul
push
rclb
jecxz
out
pop
adc
lods
and
inc
nop
sub
fucom
test
or
mov
addl
outsb
test
cmp
xchg
nop
adc
ds
or
sti
fdivs
and
cmp
iret
test
sbb
pop
mov
std
or
cmp
pushf
daa
sub
xor
push
push
mov
jg
or
jns
push
test
and
lods
ss
push
js
or
dec
adc
inc
shl
xchg
fldl
loopne
sub
jecxz
jno
sarb
sbb
cmp
loope
adc
jle
loope
jmp
jo
loope
icebp
mov
mov
test
push
shlb
mov
push
lea
pop
inc
lret
add
iret
mov
fsubrs
push
inc
push
xchg
aaa
jp,pt
loope
out
movb
jg
jle
and
sbb
mov
push
sbb
cmovae
inc
xor
cmp
sub
cltd
test
sbb
movsl
sub
rorb
loope
lahf
sahf
add
sbb
lret
mov
cmp
into
loop
test
xchg
fsubs
mov
iret
dec
js
jb
add
ret
dec
test
xorl
mov
cmp
push
lods
mov
call
scas
xor
add
and
ljmp
sahf
xor
xor
adc
les
push
aas
push
notl
xor
cltd
xor
add
and
jb
daa
lods
cmp
das
push
jne
outsl
jbe
or
cmp
sub
test
adc
stos
shrl
sbb
inc
xor
fmuls
aaa
iret
xor
fadd
and
rcll
aam
mov
imul
and
push
pop
push
or
pop
add
mov
inc
int
jecxz
sub
lods
adc
push
leave
outsl
movsl
or
jge
mov
mov
jecxz
mov
in
mov
push
pop
xchg
lock
cwtl
dec
jp
sbb
push
sub
sbb
cmp
or
or
aaa
in
out
out
mov
cmp
mov
push
mov
push
mov
fnstenv
push
adc
adc
push
inc
ljmp
test
cmp
pop
push
add
jmp
cs
out
arpl
insb
mov
sub
pushf
shlb
jl
jecxz
fldl
xchg
xlat
and
adc
bound
jmp
pop
xor
inc
movsb
les
inc
ss
add
aam
inc
loopne
add
or
mov
pop
dec
lahf
cmp
flds
rcrb
es
ss
outsb
cmp
test
jp
ljmp
fnsave
out
adc
ja
cs
punpckhbw
adc
add
mov
out
dec
and
mov
adc
jp
nop
rol
sub
les
and
xor
or
pop
mov
push
or
push
mov
test
in
xchg
jne
nop
pop
dec
push
mov
xor
cmp
rolb
imul
jns
insb
popa
loope
imul
adc
jmp
sub
sarl
mov
inc
add
mov
aaa
xor
jno
div
fadds
cmp
sti
xor
jecxz
pop
dec
jo
adc
add
adc
lds
daa
stos
imul
push
dec
test
mov
js
sub
mov
rclb
sbb
int3
cld
sub
loop
lods
cmc
call
sysret
fistpl
add
push
jo,pn
in
call
stos
bound
out
les
shll
ds
add
xor
cmp
popa
shll
adc
jge
outsb
cmpsb
addl
ljmp
pop
lods
push
dec
jl
aas
push
sbb
aam
outsl
adc
push
sub
add
jns
sub
addl
aaa
stc
out
enter
push
pop
movsl
dec
enter
or
popa
fcoml
sub
add
mov
or
push
sar
add
xor
add
aam
lock
iret
push
jp
pop
test
adc
xor
rorb
and
jb
insl
btc
stos
imul
xchg
add
movsl
mov
add
dec
push
pop
dec
movsl
xchg
mov
es
and
and
sub
xor
lret
mov
pop
insb
fstps
cmp
xor
xchg
xor
xor
adc
pop
or
inc
call
add
cmpb
xor
inc
mov
or
out
pop
pop
cmpl
sbb
or
hlt
inc
sub
jnp
inc
test
inc
arpl
rclb
leave
stc
jns
cltd
xor
push
xor
inc
sub
push
cmp
pushf
xchg
icebp
sbb
scas
inc
pop
je
ret
jno
rcl
pusha
lcall
icebp
clc
mov
cmpb
pop
scas
es
popl
add
scas
and
loop
mov
add
xchg
fdiv
insb
in
rcll
call
and
and
sbb
fstpl
test
ja
xchg
sbb
divb
fisubs
pop
daa
or
sti
sbb
iret
iret
xchg
fistl
scas
test
inc
loope
repz
lods
das
scas
movsb
inc
push
add
stos
dec
fists
mov
movsb
lahf
cltd
mov
xor
xor
gs
jno
arpl
push
sub
push
or
mov
rolb
clc
js
mov
cmp
push
inc
daa
aaa
dec
sub
in
ljmp
mov
popf
push
sub
inc
sbb
or
xchg
aam
xor
pushf
push
imul
xor
fstl
sub
mov
xchg
xor
mov
dec
and
orb
push
mov
ss
xchg
xlat
adc
adc
xor
inc
jne
ret
ret
and
add
pop
adc
dec
pop
mov
mov
aad
or
mov
cmp
xchg
loope
icebp
sub
loopne
lods
xchg
inc
andl
inc
add
icebp
insl
pop
and
sub
sbb
pop
add
or
inc
lret
xchg
add
add
cmpsb
test
jge
add
sti
out
imul
push
flds
lds
roll
jae
jmp
sub
sti
mov
push
and
push
inc
adc
je
push
dec
or
pop
mov
xchg
andl
add
adc
rorl
mov
pop
xchg
addr16
js
xchg
aaa
xchg
xchg
push
iret
cmp
jno
ret
aaa
out
movsb
lret
in
test
pop
inc
imul
mov
fisttps
adc
mov
addr16
or
mov
mov
pop
clc
sub
lock
sbb
cld
and
mov
jmp
and
push
sub
pop
fnstcw
cs
mov
test
sbb
adc
fdivrs
les
jbe
nop
sbb
cmp
aam
fidivrs
lahf
inc
cwtl
popl
mov
or
xchg
movsb
loope
pusha
sub
iret
test
sub
dec
push
or
mov
xchg
lods
lds
fstps
in
push
add
dec
leave
test
inc
scas
sbb
jmp
div
xchg
hlt
add
das
int3
jbe
adc
sbbl
mov
xlat
mov
mov
xchg
fwait
sub
ja
dec
pop
push
mov
push
dec
add
mov
test
lock
aam
dec
es
cmp
mov
cmp
cmc
in
ret
add
mov
call
hlt
push
iret
xlat
fcmovu
xor
pop
scas
push
fsubl
iret
fsub
jl
pop
pop
rcl
pop
add
lea
sbb
push
pop
stc
lods
and
shr
push
rcl
mov
add
jno
and
xchg
nop
loop
pop
or
ljmp
out
es
int
add
sbb
pop
jl
adc
pop
mov
int
sbb
sbb
stos
cmp
sbb
pop
adc
cmpb
shll
sbb
push
and
sub
jbe
mov
jmp
dec
std
nop
loopne
es
mov
push
int3
sbb
js
add
mov
adc
ficomps
out
outsb
add
sub
sarb
xchg
jns
shlb
mov
mov
and
jl
jnp
movsb
inc
and
add
adc
jge
add
add
push
sahf
ret
call
push
clc
pop
cltd
in
lods
xchg
push
gs
push
insl
ljmp
mov
mov
and
addl
sbb
insb
pop
xchg
loopne
pop
inc
inc
adc
test
jg,pn
xlat
movsb
sub
je
out
inc
push
sarl
lods
pusha
cmp
test
and
mov
inc
addr16
pop
dec
cmc
push
js
rol
scas
lret
sbbl
xchg
mov
cmpsb
in
cli
addr16
call
loope
sub
addl
test
adc
sub
pop
xor
hlt
sub
add
cwtl
repnz
and
rclb
jge
jbe
adc
icebp
ret
xchg
push
shlb
fildll
push
add
int3
pop
cli
push
lea
aaa
shlb
daa
or
stos
xor
inc
iret
add
or
or
and
add
push
sub
add
sbb
xchg
mov
movsb
out
lods
inc
js
in
call
movsb
pop
jnp
cmp
add
jp
sub
adcb
es
mov
push
lods
scas
subl
mov
push
push
lahf
hlt
loope
insb
dec
cltd
jnp
loop
stos
pop
ds
cs
sbb
fisubl
pop
pop
cmp
sbb
out
iret
loopne
lods
scas
push
xorb
add
adc
push
mov
cmp
aaa
add
jmp
cwtl
stos
sahf
lock
shr
fnstsw
fmul
imul
xor
lods
add
dec
or
mov
mov
out
inc
cmp
in
mov
andb
mov
maskmovq
divl
push
jns
test
les
push
popa
lods
lock
sbb
cmc
jno
sub
pop
ja
sub
lcall
push
test
or
nop
sub
loope
pop
pop
push
mov
ss
push
cmp
test
test
mov
or
ja
or
nop
adc
mov
andl
push
out
sbb
fs
repnz
ret
fs
push
push
pusha
xchg
cmp
fbstp
mov
scas
pop
sahf
sahf
stos
xchg
dec
add
popa
adc
cmp
push
adc
jp
test
or
mov
adc
addl
in
rclb
aad
xchg
mov
test
pop
ret
fldl2t
iret
daa
sahf
inc
pop
adcl
loope
daa
xchg
es
mov
xor
sub
push
lock
cmpsb
or
lock
dec
mov
addb
jge
movsb
subl
pop
add
andl
or
testb
mov
shlb
inc
jle
insb
jmp
mov
lahf
ret
lock
adc
hlt
push
mov
daa
ret
and
and
enter
cmp
sub
sub
adc
sarl
sbb
mov
or
adc
fcoms
mov
jle
cs
dec
jle
adc
jne
jae
fidivs
xor
out
xor
push
push
sbb
jb
js
fsubrl
sbb
and
push
mov
les
add
adc
mov
imul
loopne
add
push
pop
pop
adc
ret
leave
bound
push
xor
in
jbe
fdivrl
insb
pop
clc
mov
mov
cwtl
rol
js
int
test
xchg
movsb
adcl
loop
or
int3
sti
ss
fidivrl
jecxz
movsb
dec
jno
insb
sub
add
repz
mov
mov
sub
shlb
and
adc
sub
ljmp
and
nop
fisubs
xlat
test
pop
shl
jno
out
adc
js
call
mov
pop
push
and
fidivrs
pop
aas
imul
psubsw
fsts
lods
stos
jnp
dec
or
imul
push
mov
sarb
cwtl
aad
stos
mov
fldcw
int3
xchg
data16
pusha
xchg
fisubrs
add
xchg
jle
sub
cwtl
rolb
mov
sahf
insb
xor
cwtl
rol
dec
ret
jle
stc
in
cmp
mov
mov
hlt
fs
sbb
inc
xlat
jae
aad
push
cmp
cmp
or
sub
mov
data16
fucom
sahf
rcrb
mov
jl
js
add
int
test
inc
in
or
aam
sub
dec
mov
paddd
add
cltd
pop
lret
cmp
push
dec
dec
xchg
nop
clc
jbe
jns
iret
jmp
addb
sub
push
xor
jns
lahf
xor
mov
sbb
xor
and
add
js
fucomi
and
jmp
lea
movsb
jne
xchg
xchg
fistl
sahf
or
cmp
sbbl
push
xchg
mov
ja
test
xchg
cmpsl
andl
push
mov
dec
dec
lret
ss
jno
jb
aaa
cmp
imul
sbb
fdivs
pop
mov
or
push
mov
scas
inc
lea
push
jo
in
stos
nop
dec
call
stos
pop
xor
popa
inc
stos
or
pop
imull
jb
imul
mov
neg
and
cs
iret
shrb
jp
adc
dec
out
shlb
addr16
cmp
add
std
mov
mov
out
sbb
inc
js
pop
sbb
cltd
rcr
pop
inc
mov
or
xor
pop
sti
inc
ret
rolb
jb
xchg
mov
cmp
dec
movsb
cmp
leave
jmp
test
dec
int3
adc
jne
pop
movsl
cmc
sub
sbb
nop
pusha
rcr
mov
sub
add
arpl
pop
out
xchg
pusha
adc
mov
testl
add
es
add
dec
aas
ficoml
adc
rcll
lahf
sbbb
jo
add
inc
arpl
sub
rol
cltd
sub
lret
sbb
ret
dec
movsb
iret
mov
ret
pusha
pop
stos
xor
popf
push
push
inc
jns
lret
jo
mov
icebp
lock
les
mov
clc
and
push
cwtl
mov
pop
ljmp
xchg
mov
movsb
fldl2e
pop
and
add
ror
sub
cmp
jae
sbb
add
push
xlat
cltd
cli
cmp
adc
jne
mov
and
cmp
ss
mov
xor
iret
lret
fwait
push
pop
or
iret
jle
jne
push
mov
sbb
fiadds
and
and
mov
push
in
mov
add
ljmp
rcl
shrb
rcll
mov
mov
dec
cmp
fildl
rol
dec
gs
mov
sbb
dec
les
sub
push
pop
and
xor
mov
mov
inc
mov
xor
dec
xor
pop
jl
mov
loop
lea
sbb
cmpsl
dec
loop
out
mov
rorl
mov
cmpsl
adcb
dec
mov
add
int3
mov
arpl
and
repz
push
jo
sarb
fcmovnbe
lret
xor
inc
and
xchg
sarb
sar
ljmp
jle
jmp
sti
or
mov
jne
push
jmp
xor
mov
mov
mov
lds
pop
or
fsubrl
and
test
int
or
cmp
xchg
subl
mov
or
or
fcomi
jmp
xchg
fildl
add
movsl
insb
sub
mov
xor
hlt
sub
inc
sbb
jecxz
call
ss
add
inc
sub
and
push
subl
fildl
push
xchg
pop
pusha
dec
add
sbb
adc
inc
aam
mov
sarb
xchg
fwait
inc
jbe
ret
mov
inc
jl
xchg
or
mov
insb
xchg
or
pop
xor
push
in
rolb
xchg
sub
sbb
push
add
dec
or
jg
imul
add
out
fmuls
or
fiaddl
js
jbe
and
or
and
and
addl
fdivs
adc
push
aam
mov
shl
or
lods
inc
addr16
stc
je
or
test
xor
addr16
stos
ss
and
aaa
or
stos
xchg
xor
mov
xor
es
jno
ret
xchg
lods
mov
adc
xor
pop
mov
xor
lods
les
xchg
push
xchg
mov
inc
mov
stos
cs
or
cmpb
cwtl
sbb
lea
in
sbb
add
xchg
mov
repz
add
push
pop
test
in
inc
sbb
mov
pop
add
iret
sbb
xchg
or
mov
sbb
sub
and
fsubr
and
fstpt
sub
push
xlat
iret
mov
xor
sbb
in
and
pop
movsl
adc
add
inc
addr16
xchg
sub
add
iret
repz
and
sbb
pushf
cmp
mov
rcl
jecxz
or
cmp
cmc
cmpsl
popl
aad
pop
js
movl
sbb
ret
ret
adc
fadds
add
dec
or
aad
or
add
jbe
into
adc
xchg
cmp
dec
loop
and
cmp
aaa
iret
mov
lahf
shll
add
sti
xchg
adc
jo
popf
decl
and
add
jecxz
pop
mov
xchg
inc
mov
jne
pop
mov
sub
inc
imul
dec
pop
pop
xchg
notl
bnd
xor
add
aas
mov
out
rolb
push
imul
and
cs
popa
test
out
cmpsl
leave
sar
aam
iret
xchg
mov
jecxz
add
and
push
jg
cltd
rclb
lea
mov
and
test
xor
test
pusha
mov
push
jecxz
ljmp
or
adc
pop
push
dec
dec
mov
adc
push
in
add
pop
loope
add
shrb
popf
xlat
xchg
inc
or
icebp
mov
xchg
ficoms
or
movsl
les
push
out
aad
cmp
cmp
imul
pop
cmc
xor
cmp
xchg
lret
sbb
inc
inc
pop
pop
jb
rolb
mov
xchg
movsb
and
pusha
jno
or
mov
inc
sbb
insb
add
cmpsl
movsb
leave
dec
or
into
jne
inc
mov
jnp
frstor
or
push
adcl
mov
stos
xchg
daa
movsl
pop
add
mov
add
int
xchg
aaa
mov
inc
inc
loop
or
iret
xlat
xchg
mov
mov
jmp
ja
fdivl
mov
jmp
push
ds
inc
imul
punpcklwd
jo
es
popa
cwtl
and
lods
test
and
daa
xor
adc
clc
fdiv
outsb
pop
adc
xchg
push
arpl
fisttps
call
pop
fists
clc
lock
je
jp
fistpll
cs
shll
js
loope
sbb
push
cmp
test
out
sahf
lods
testl
mov
add
sub
mov
ja
fdivs
inc
mov
push
dec
pop
cmpsl
pop
in
or
sbb
jae
pop
add
sbb
test
dec
jge
addr16
jp
add
rorb
lcall
aad
mov
add
xchg
rorl
xchg
rcl
jecxz
mov
inc
pop
adc
insl
push
push
loop
push
pop
dec
in
inc
sbb
loopne
call
insb
jp
pshufw
push
loopne
cmp
lret
mov
jmp
xor
add
mov
icebp
int
xorl
retw
adc
xor
adc
pop
adc
leave
mov
cmp
push
roll
push
push
ja
jl
jnp
sub
lea
push
popa
pop
or
sub
leave
adcl
imul
les
jbe
int
pop
adc
or
sub
jl
xlat
cs
mov
jmp
mov
bound
rep
mov
xbegin
outsl
and
jmp
push
push
imul
jl
sbb
gs
and
sbb
aad
js
imul
lret
es
jo
not
inc
jnp
add
repz
sbb
pusha
adc
jecxz
in
or
pop
stos
sub
xchg
jl
dec
and
jmp
imul
pusha
push
stos
xor
jno
adc
test
pop
xor
pop
out
dec
push
pop
loop
stos
push
mov
cmp
pop
jp
into
mov
dec
pushf
mov
call
mov
fldl
ja
dec
movsl
xchg
dec
xchg
push
add
xchg
xor
rolb
jno
push
and
adc
ret
add
ficoms
xor
xchg
push
push
jle
push
and
xchg
and
xchg
add
jo
loopne
outsl
jle
dec
ss
add
es
outsb
fisttpl
lods
int3
mov
mov
mov
add
sbb
mov
cwtl
push
sub
hlt
cmc
dec
pop
bound
ljmp
rorl
aas
xchg
sub
jae
xor
mov
cmp
or
das
mov
xchg
rorb
mov
in
rorl
loop
iret
lret
xor
sbb
jmp
outsl
inc
and
lret
sub
mov
push
iret
xor
jl
inc
call
mov
xor
xor
pop
jns
divl
cmp
movsl
and
push
and
out
xlat
cmpsl
icebp
push
ljmp
and
in
adcb
cld
cltd
aad
dec
and
test
push
in
xor
loop
xchg
adc
mov
sub
mov
fcompl
aaa
mov
loope
cmp
addr16
cmp
cmp
inc
fdivr
sbb
xor
inc
jl
fisubrs
and
int3
pusha
pop
sbb
faddl
xor
popf
andl
out
cmp
sarb
or
daa
sub
jne
inc
and
adc
push
and
movsl
adc
add
jne
das
adc
xchg
nop
inc
fiaddl
and
sbb
into
inc
popf
or
ret
push
inc
pushf
and
cmovb
xchg
push
push
out
outsb
shrb
testl
js
insl
or
and
and
shlb
aaa
fstpt
mov
lds
adc
xchg
mov
pop
push
mov
nop
push
jae
or
jno
in
pop
and
mov
fmull
out
add
loopne
jnp
mov
loope
jns
fidivs
lods
xchg
jo
stos
and
xchg
jb
jecxz,pt
push
xchg
or
xorl
arpl
and
lcall
sub
add
out
cmp
rcll
add
push
push
dec
xor
add
pop
xlat
mov
fdivl
add
add
iret
mov
scas
int
div
test
mov
iret
out
fadds
dec
loope
mov
add
imul
jb
cs
daa
arpl
cmp
aam
add
push
sahf
scas
pop
mov
and
ja
lahf
adc
push
push
xchg
add
inc
aam
add
push
jl
subb
sti
jo
clc
into
add
ja
stc
and
sub
dec
add
push
cmp
imul
mov
or
sub
sar
out
cltd
cmpsb
or
outsb
inc
push
ret
popa
push
gs
mov
dec
sub
sbb
int3
gs
xchg
lret
sub
dec
ja
sub
pop
cwtl
fistps
pop
jo
jb
lods
push
fadds
sbb
testl
insb
jnp
shll
fsubs
cmpsb
nop
dec
out
aad
dec
aas
push
sbb
mov
or
ret
stos
jmp
fs
or
es
sub
insl
test
pop
mov
outsb
or
inc
xchg
mov
dec
mov
adc
aaa
and
xchg
mov
test
lret
sahf
pop
mov
sbb
test
mov
and
pusha
jae
arpl
mov
sbb
popl
mov
xor
adc
dec
imul
and
imul
pop
sbb
movsl
sbb
jbe
loope
insb
repnz
mov
outsb
add
push
mov
es
sbb
filds
push
cmp
xor
and
mov
mov
sbb
into
popa
les
aad
je
daa
cmp
fsubr
cmpsl
lret
add
or
push
ret
ror
repz
xchg
xchg
mov
xchg
pop
add
push
lea
test
mov
mov
fists
out
jno
xor
or
pusha
and
mov
push
xchg
dec
popf
js
test
fmuls
and
fwait
jo
imul
sub
es
adc
inc
jp
loope
sub
sbb
push
daa
push
push
xor
sub
mov
in
clc
bound
out
into
daa
cs
outsb
cltd
mov
ss
dec
scas
xchg
ret
mov
pop
inc
inc
adc
inc
in
or
mov
movsb
aam
lea
loopne
inc
shrl
aam
and
cmp
mov
jbe
jp
or
fidivrl
adc
test
fwait
xchg
adcb
pusha
mov
ss
rolb
jno
sub
stc
add
nop
mov
dec
and
xchg
mov
adc
insl
xor
pop
sub
cmp
sbb
aaa
mov
rcrl
icebp
into
mov
sub
out
xor
outsb
mov
sub
daa
dec
pushl
data16
adc
push
rcll
push
xchg
mov
push
cmpsl
cmp
add
xlat
ret
add
add
xchg
inc
arpl
aaa
shll
scas
push
movb
les
pop
iret
adc
mov
rcrb
push
or
pusha
insb
imul
rorb
call
mov
cmpsl
shrb
aas
fsubp
rcl
mov
rcl
pop
movsb
daa
aam
and
test
cmp
inc
push
lret
jo
add
or
rclb
adc
jmp
loop
xor
push
sub
lods
sbb
mov
fstl
outsl
push
mov
shll
jns
pop
jmp
mov
or
inc
push
orb
dec
fld
loope
add
dec
push
mov
lds
push
enter
add
inc
cmp
lock
jno
jo
shrb
push
cmp
push
mov
xchg
pop
sub
addr16
dec
pop
adc
or
pop
lret
cmp
xchg
push
or
or
dec
nop
inc
or
stos
pop
mov
push
icebp
or
adc
xchg
dec
mov
pop
add
dec
popa
fmuls
xchg
jne
or
mov
add
popa
xlat
into
pop
fsub
cmp
add
push
adc
adc
xchg
imul
xor
xstore-rng
out
ljmp
clc
pusha
lods
rcll
push
sub
and
and
xchg
and
ret
and
insb
xchg
je
lods
lret
inc
jae
sbb
sbb
lret
pop
dec
push
gs
pop
dec
or
cltd
push
inc
push
ja
sbb
ret
icebp
inc
push
test
push
lods
jmp
mov
mov
sbbb
leave
jmp
stos
and
push
popa
bound
push
push
mov
imul
adc
rcl
iret
sahf
lea
outsl
mov
inc
iret
fstps
lods
cmp
pusha
aam
add
and
mov
sub
mov
cld
inc
inc
cmp
data16
inc
out
and
fwait
and
in
cmp
jb
icebp
pop
cltd
popa
jge
fwait
loopne
add
scas
inc
push
mov
mov
mov
mov
lods
cmp
jmp
pop
ret
or
dec
daa
mov
shrb
xchg
xor
mov
decb
cmc
iret
sub
mov
sbb
push
ret
xchg
mov
ljmp
jmp
addr16
sbbl
sub
push
cmp
add
add
ftst
push
mov
adc
adc
xchg
mov
add
dec
push
push
bound
cmp
or
cmp
pop
mov
aas
hlt
pop
xchg
scas
mov
add
iret
xor
sub
subl
or
inc
add
insl
add
movsb
add
pop
pop
hlt
cmpsl
push
iret
xor
jmp
xchg
cmpsb
dec
xchg
pusha
inc
fs
and
loop
scas
adcl
decb
test
mov
out
jmp
out
icebp
fcoms
cltd
mov
pop
push
jl
pop
cmp
je
push
fidivl
xor
mov
shlb
jg
imul
cs
imul
mov
inc
sub
mov
stc
mov
roll
lods
or
mov
or
and
dec
adc
mov
mov
jecxz
sti
pop
mov
ret
nop
jg
push
outsl
rcrb
mov
out
lea
jmp
rolb
adc
shlb
xor
lods
nop
inc
or
mov
sub
imul
add
mov
ret
sahf
sarb
sub
mov
sbb
lcall
es
xchg
insl
xor
mov
repz
dec
cs
pop
and
clc
adc
pop
sahf
mov
pop
out
inc
sbb
rorb
flds
movl
fldl
daa
mov
xor
stos
adc
xchg
rorb
jle
popa
mov
mov
dec
jno
lds
aam
xor
mov
mov
mov
loopne
sub
orl
shl
dec
mov
lret
add
mov
jo
gs
inc
add
add
les
sbb
or
adc
fistpll
push
orl
stos
xchg
cmpb
lods
or
and
mov
push
sbbl
pop
lret
or
test
ss
ficomps
imul
hlt
pop
and
xchg
pusha
and
cmpsl
jle
jecxz
dec
push
jns
out
mov
push
adc
xchg
sub
xor
adc
call
inc
adc
xlat
mov
push
fcmovnu
and
hlt
sub
xorb
jae
lret
ss
or
je
fisttpl
ficoml
out
mov
pop
rolb
and
jnp
lret
mov
clc
pop
loop
add
cmp
and
aad
adc
lods
rol
add
add
push
add
int3
je
adc
popa
sti
and
or
je
mov
jo
mov
sbb
sbb
pusha
jge
movb
loope
shrl
cli
sbb
sub
sbb
pop
rorl
cli
aam
mov
add
or
popf
sbb
add
dec
sbb
test
sub
orps
stos
iret
pop
mov
sub
mov
inc
mov
mov
adc
movsl
adc
xchg
cmp
lcall
aaa
shrl
fwait
mov
mov
cmp
jge
add
pushf
lret
mov
xchg
aad
cmp
pop
rolb
jecxz
lret
jp
insb
js
push
ds
out
jo
and
ret
or
and
aad
arpl
pop
lcall
scas
fldl
pop
pop
or
jo
xchg
shrb
pop
dec
sub
dec
das
outsl
push
push
push
mov
jge
pop
mov
and
lock
stos
pop
mov
jbe
fnstenv
shr
push
in
imul
and
inc
jne
ljmp
ret
fisttpl
inc
pushf
mov
incb
adc
mov
push
cmc
pop
sbb
aaa
call
dec
sub
add
fisttpl
mov
jbe
js
test
xor
ret
pop
add
inc
or
inc
mov
adc
inc
test
xchg
pop
mov
inc
cmp
ja
mov
xorb
dec
add
call
cmp
mov
incl
mov
jae
ljmp
push
movsl
or
inc
daa
sbb
cld
lret
sub
lods
dec
dec
cmp
ret
test
inc
xchg
and
iret
xchg
xor
push
sbb
xor
add
es
xorb
add
aaa
je
scas
adc
xlat
xorl
addr16
xor
mov
inc
jnp
add
jns
shrb
sti
or
push
call
inc
scas
nopl
and
adc
mov
nop
mov
dec
and
adc
inc
push
stos
aaa
mov
inc
cmp
das
add
dec
inc
icebp
xchg
add
call
lods
inc
mov
pop
outsl
push
inc
ret
add
mov
lcall
stc
out
scas
push
rcrl
or
push
shll
add
add
adc
addl
sub
out
rclb
dec
sbb
sbb
scas
test
jne
int3
pop
imul
adc
sbb
push
jp
and
jne
mov
stos
lret
mov
cmpsl
or
sbb
or
imul
arpl
adc
frstor
rcrl
dec
stos
pop
sbb
ret
rolb
add
add
aam
pop
or
fs
jg
pop
fmull
push
inc
imul
mov
imul
enter
pop
pop
call
push
push
stos
add
repnz
push
pop
mov
mov
add
dec
test
std
rol
clc
movsb
add
mov
lods
lahf
bound
mov
adc
and
xor
popl
lods
loopne
cmp
test
dec
sahf
scas
adc
and
orb
lds
jae
setno
pop
pop
jnp
ret
out
mov
pop
aaa
je
divl
cmp
cmpsl
cli
push
xlat
cmp
fsts
jecxz
je
incb
fstps
xor
cwtl
adc
xchg
or
lods
cmc
cmp
adc
sbb
and
and
inc
push
lret
add
outsl
lea
nop
jo
orl
push
out
aas
iret
lcall
add
addr16
iret
popf
mov
push
arpl
adc
ljmp
int
fdiv
jnp
in
cmpsl
repnz
push
xchg
out
out
add
aas
mov
add
or
or
mov
pop
loop
lock
shl
sub
push
sub
idivb
xlat
ret
and
sub
and
add
or
inc
pop
test
in
add
inc
mov
xlat
int
popa
and
jg
dec
inc
js
xchg
pop
movsl
nop/reserved
popa
hlt
dec
pop
xchg
sbb
mov
cli
push
adc
mov
pop
cmp
test
pop
jmp
scas
sbb
xor
rcll
ds
and
clc
mov
stc
add
add
jno
bound
pop
inc
adc
gs
push
mov
mov
dec
rcrb
movsb
xlat
xlat
push
movsb
mov
jge
ds
mull
adc
insb
popa
ficompl
adc
test
leave
xchg
add
sbb
dec
test
and
mov
or
dec
push
push
ja
in
or
jge
js
xor
or
scas
rol
mov
mov
sub
jecxz
mov
sbb
xchg
xor
cmp
sbb
fistl
or
xchg
je
and
ljmp
push
divb
dec
inc
rcrl
addb
ja
pop
clc
iret
or
add
inc
pop
fldl
jecxz
sbb
jo
sub
fmuls
into
rolb
arpl
push
inc
mov
cwtl
mov
sbb
mov
or
shrb
daa
test
aas
add
xchg
sub
pop
sub
jg
lcall
mov
pop
in
imul
push
rclb
jmp
add
or
adc
sub
rclb
jmp
clc
push
orl
inc
daa
pusha
outsb
xlat
ja
sbbl
loope
ljmp
inc
add
and
test
xchg
sbb
push
ljmp
mov
pop
sub
lock
jo
sub
loopne
inc
adc
jns
adc
test
sbb
add
xchg
fwait
and
xchg
je
push
dec
cmp
out
shl
daa
sub
pop
and
pop
nop
cmp
xchg
aas
add
inc
shll
or
cmpsl
sub
adcb
cmpsl
xlat
adc
pop
cmp
dec
push
or
nop
ret
roll
or
xor
sub
lods
mov
les
inc
fimuls
iret
inc
cmp
xor
inc
cltd
jecxz
decb
inc
and
push
fstl
mov
enter
xchg
push
les
adcb
lock
mov
or
push
sub
subb
adc
scas
add
lahf
push
addr16
lahf
rol
loope
lcall
mov
push
inc
inc
sbb
lret
mov
aaa
lods
pop
xchg
mov
cmpl
xchg
or
dec
adc
cmpsb
pop
js
lahf
and
inc
int3
gs
stc
fadd
pop
rorb
lahf
xor
dec
pop
fiadds
outsl
push
or
pushf
xchg
push
gs
dec
add
cwtl
xchg
or
push
pop
dec
test
sub
mov
xor
mov
sbb
pop
add
jmp
mov
sbb
aaa
sub
pop
test
xor
test
adc
scas
repnz
clc
fs
outsl
loop
sbb
pop
push
cmp
ss
sbb
lods
xchg
push
ljmp
daa
xor
or
add
dec
sbb
lea
adc
mov
mov
dec
aam
add
sbb
jbe
aam
adc
dec
and
inc
or
daa
and
add
dec
mov
lret
punpckhbw
push
fildl
insb
and
dec
mov
imul
push
daa
lods
sub
pop
imul
test
int
fwait
mov
add
and
push
cmp
cmp
and
push
cmp
jns
test
call
sub
xor
pop
and
aaa
add
push
imul
or
mov
lods
dec
sbb
iret
cli
pop
or
jmp
lods
data16
push
fwait
or
or
lds
cmp
jbe
dec
or
jo
mov
push
sub
jo
or
pop
sub
lods
fwait
das
adc
cmp
mov
or
pop
nop
jp
in
aad
lods
inc
clc
xor
add
js
mov
fwait
cmp
and
dec
inc
mov
fidivrl
mov
mov
push
xchg
aam
and
sarb
iret
aad
xor
ret
inc
and
cmp
fidivrl
ljmp
push
push
dec
or
or
rclb
dec
inc
subb
dec
and
xchg
push
pop
xchg
out
aam
sti
pop
lret
push
xor
popf
mov
pop
sbb
test
aaa
jmp
xchg
push
add
int
pop
orb
fldt
dec
leave
sbb
push
sbb
pop
dec
and
loope
ja
jbe
sbb
mov
dec
push
mov
addr16
negb
inc
dec
adc
loop
or
add
push
pop
and
notl
and
movups
add
pop
test
cli
inc
call
outsl
aas
pusha
sbb
mov
test
pop
sbb
sbb
jo
adc
adc
addr16
inc
xrelease
xchg
jbe
or
push
pop
js
add
xchg
stos
pop
jb
xchg
stc
outsl
dec
jp
sub
ds
and
jns
or
rcl
dec
fldt
or
mov
inc
push
xor
push
mov
inc
mov
inc
arpl
adc
push
sti
jae
xchg
js
push
xor
loopne
cmc
push
xor
pop
sub
es
dec
sbb
push
inc
inc
loope
mov
and
mov
shll
psubusb
mov
and
mov
xchg
faddl
sub
fdivrs
push
aas
mov
adc
push
outsb
dec
fdivrl
xorb
mov
gs
jmp
pushf
inc
ret
sbb
lods
xchg
jae
daa
jo
xor
mov
mov
mov
lds
jmp
pushl
mov
test
sbb
movl
outsl
sti
cltd
jge
cli
mov
jno
sbb
aaa
outsb
stos
aaa
out
pop
push
rcrb
add
and
inc
fnstenv
inc
push
orb
ds
fwait
lahf
jne
test
movsl
loop
adc
aaa
xchg
push
xor
ror
shll
sbb
inc
popa
xchg
int
aaa
cwtl
jo
in
jmp
insb
sub
xor
pop
popf
sub
pop
adc
push
sub
jg
ror
sbb
scas
insl
mov
jnp
or
xchg
sbb
in
mov
aad
push
lods
push
mov
push
js
sahf
dec
in
ret
loope
cmp
cmp
jl
outsb
cmc
pop
add
mov
addr16
jnp
sbb
imul
mov
rorl
icebp
or
push
add
or
add
push
movsl
add
mov
fdivrs
adc
sbb
and
lcall
je
add
stos
rolb
or
rcl
cmp
add
mov
xlat
in
lahf
test
cmp
mov
jne
pop
mov
jbe
loop
pop
pmaxub
sbb
adc
sbb
sbb
adc
xchg
xor
lods
jecxz
or
or
dec
xchg
test
mov
push
call
stos
and
or
out
shll
inc
dec
inc
rcrb
push
test
es
adc
jo
push
out
iret
cwtl
inc
pushf
test
ja
addr16
aam
and
nop
xor
mov
adc
xor
push
push
xlat
push
lods
js
push
sbb
es
sbb
sub
jnp
dec
or
sbb
and
jns
push
ret
add
sub
sahf
shl
ret
jbe
pop
mov
jge
aad
outsl
xor
sub
push
mov
xor
or
push
mov
inc
mov
push
and
add
cmp
aam
sub
insb
fwait
sbb
pop
fwait
mov
cmp
inc
xor
ds
xorl
addr16
or
pop
add
add
lret
xchg
cmp
fwait
iret
or
loope
test
movsb
aas
jbe
andb
sbb
cmovs
ss
lods
push
xor
clc
insl
mov
sbb
lahf
cmp
mov
ret
fstpl
lock
or
ss
fs
dec
mov
iret
sti
scas
inc
cmpsb
pop
push
pop
cmp
stos
mov
lret
inc
pop
inc
pop
xorb
loop
xchg
pop
mov
inc
dec
loopne
loopne
ret
stos
pop
imul
jmp
push
push
test
bndstx
loope
inc
inc
leave
sahf
push
cli
jmp
mov
xchg
add
mov
adcb
lcall
sar
test
or
mov
and
add
dec
lret
cs
add
das
shlb
add
or
and
inc
into
xorb
test
mov
lret
mov
fdivl
ret
out
movsl
push
lods
arpl
ja
mulb
fpatan
shl
or
lds
fcmovu
lret
ror
xchg
mov
pop
sbb
pop
sbb
cltd
sahf
lods
rcrb
aad
push
cmp
or
insb
jmp
inc
pop
mov
movsb
inc
stos
cltd
dec
kmovb
cmp
push
lock
loope
jae
and
xchg
shrb
push
or
fwait
es
and
loopne
rcrb
xchg
and
cmp
jbe
dec
add
push
sbb
out
fistps
adcb
dec
mov
and
sbb
movsl
lods
xbegin
and
test
loopne
and
call
psubsb
jae
lods
gs
mov
fadds
mov
adc
xchg
repz
out
sbb
leave
insl
sarb
movsl
add
std
loopne
loopne
outsb
push
popf
cmp
frstor
xor
dec
and
ret
test
ss
add
call
js
bound
loope
movsb
adc
mov
jns
pop
xchg
cmpsl
cmp
imul
add
xchg
xchg
inc
mov
fisubl
lock
dec
fs
jno
inc
add
sub
cmp
fcomps
xchg
xchg
sub
cmp
cli
dec
mov
mov
mov
movsb
mov
mov
inc
push
inc
movsl
jno
shl
shlb
sbb
xchg
or
and
jmp
mov
inc
jmp
andl
sub
test
xchg
sub
movsb
lds
jmp
imul
bswap
sub
test
push
xchg
sbb
popa
or
push
movsb
mov
xchg
and
insb
jne
imul
popa
cmp
mov
ret
pop
ds
addl
sbb
cmp
inc
jmp
ret
fstpl
xorb
cmp
js
pop
iret
mov
xor
movsl
popf
push
loopne
add
addl
adc
and
test
sbb
jecxz
push
mov
mov
aaa
js
popa
pop
mov
add
frstor
iret
subb
xor
ret
ret
adcl
dec
fwait
movsb
pop
iret
cmp
cmp
adc
in
add
xchg
fmull
add
sbb
add
add
and
sbb
sbb
fldenv
imul
xor
fmull
add
ret
outsl
xor
and
adc
lock
and
sbb
movsb
add
push
scas
and
push
insl
repnz
adc
inc
das
or
mov
inc
cmpsl
cmpsb
inc
inc
lock
sbb
es
and
and
insb
and
adc
aad
sub
sub
cmp
rcl
rcl
das
push
xchg
loope
aas
jno
mov
or
filds
addb
dec
popa
sbb
pushf
fwait
xor
pop
stos
add
add
sbb
push
int
imul
insl
loope
jmp
cltd
mov
cmp
mov
add
add
loopne
leave
adc
loopne
or
jl
clc
roll
and
sub
adc
in
sub
cmp
mov
outsb
mov
sub
dec
xor
xchg
push
call
cwtl
sbb
aaa
push
cli
mov
cmp
xor
xorl
add
adc
mov
lea
adc
sub
cmpl
cltd
jbe
sub
jne
test
push
sbb
arpl
jbe
aam
pop
insl
mov
mov
and
pop
das
xchg
nop
out
not
repz
enter
push
daa
sub
fisubl
lods
add
fmul
push
push
mov
pop
push
call
movsb
inc
add
sti
ja
push
pop
imul
jmp
ret
cmpsl
stos
push
les
xchg
cmpsb
lret
rcrl
popf
filds
add
cmp
scas
scas
outsb
movsb
add
dec
and
add
sarl
mov
les
shl
xchg
int3
push
mov
or
ror
pop
push
das
rclb
lods
imul
add
or
sbb
xchg
aaa
icebp
cmc
mov
add
jle
arpl
jp
mov
loop
aad
pusha
add
int
pop
sub
stos
jns
mov
cmp
sub
out
inc
pop
mov
ret
add
sub
int
push
jmp
out
fstps
mov
loope
test
cmpsl
inc
mov
push
shlb
push
lods
dec
or
jl
cli
mov
push
es
pushw
dec
movsl
jae
pop
movsb
pop
add
and
lret
jno
xor
iret
loope
cmp
cs
inc
jecxz
int
jmp
adc
jp
dec
jne
mov
push
or
test
std
pop
dec
push
pop
push
test
pop
dec
imul
and
mov
popf
mov
mov
mov
js
lds
add
push
sub
inc
int3
movsl
dec
cmp
add
mov
add
xchg
sbbl
adc
adc
je
pushf
xlat
lods
xlat
pop
and
aam
pop
mov
dec
add
adc
xchg
jnp
sub
xor
cmp
mov
lahf
dec
addl
pusha
sub
adc
add
call
sub
dec
xchg
cwtl
ja
shlb
xchg
icebp
iret
xorb
jnp
mov
inc
push
sub
lods
loope
dec
jp
xlat
pushf
lods
test
mov
lods
adc
loop
shlb
jp
shrl
inc
mov
ret
pusha
lret
push
inc
xor
js
cmpsl
push
sub
add
xchg
cmpsb
jle
mov
jmp
push
add
xchg
clc
adc
ljmp
rcrl
sub
or
insb
pusha
xchg
lahf
pop
add
cltd
popf
adc
lods
xchg
sub
es
add
xchg
xchg
clc
or
lock
pushl
inc
cmp
js
fistpll
xor
loope
arpl
pop
out
icebp
or
dec
push
roll
dec
adc
dec
fmul
sub
add
xchg
mov
jo
sbb
scas
push
xor
sub
int
mov
inc
ret
aas
or
nop
cmp
adc
aam
fadds
in
out
inc
aam
xor
sbb
and
mov
test
aas
fcmovu
lods
xchg
jne
or
add
lods
je
mov
mov
jo
mov
popa
dec
popa
sti
adc
dec
inc
enter
fldenv
loope
negb
jns
inc
ds
or
mov
jge
jno
sub
loope
in
gs
cmp
push
insl
loopne
sbb
ret
xchg
rcll
enter
fadds
shrl
loope
popa
adc
pop
dec
fmul
mov
push
out
inc
ljmp
add
mov
pushl
in
outsb
les
imul
pop
and
ret
shll
hlt
insl
jl
xchg
aas
repz
lock
cwtl
mov
cmp
sti
add
or
push
js
xchg
imul
std
add
inc
pop
loopne
pop
adc
jne
jae
xchg
movsb
pop
push
jl
ret
fstps
loopne
sub
lods
adc
mov
mov
mov
repz
cmp
add
addb
sbb
pop
aas
arpl
lods
or
mov
xchg
mov
mov
cmp
add
iret
rcrb
shlb
pop
leave
jge
mov
ja
sub
and
mov
jp
shll
xchg
add
add
pushf
sbb
int
mov
or
data16
insl
out
or
inc
or
pop
mov
lods
mov
dec
lock
ss
mov
pop
mov
dec
arpl
popf
mov
sahf
mov
xchg
imul
cmpl
jno
push
outsl
in
cmp
xlat
jne
adc
xor
mov
stos
pop
test
or
sbb
shll
inc
testl
mov
xor
daa
add
inc
pop
jb
imul
add
test
pop
loope
xor
ret
mov
bound
xor
orb
xchg
pop
jae
ja
sbb
rcrl
xchg
fcom
hlt
add
adc
sbb
pop
fcoml
popl
mov
rorl
iret
frstor
stos
or
imul
and
xchg
xor
mov
insl
inc
xchg
lahf
inc
pop
pop
adc
out
add
cmc
dec
xor
movsb
add
mov
jae
sbb
xlat
mov
mov
sbb
hlt
inc
xchg
loopne
sarb
pop
sbb
adc
jge
shrl
jne
xchg
adc
pop
xchg
outsl
sbb
nop
sub
mov
jne
ret
xchg
loopne
adc
jo
bound
test
sub
mov
pusha
xchg
xchg
mov
cmp
add
arpl
das
cltd
cmpsb
push
shrb
pop
jg
outsl
and
xchg
add
shlb
ja
jge
pop
fistpl
clc
mov
shlb
pop
test
push
push
dec
daa
or
and
adc
add
dec
dec
pop
ss
mov
xchg
sahf
out
out
dec
adc
mov
xlat
out
adc
pop
repz
mov
add
add
mov
mov
inc
add
arpl
and
sbb
rorl
or
xorl
jns
and
mov
add
jmp
fmull
or
and
test
dec
or
cmpsl
mov
push
push
xor
imul
inc
outsb
int
jl
push
xchg
jno
lret
add
xchg
add
xlat
imul
lea
pop
dec
and
pop
and
or
mov
jo
cmp
fwait
mov
popf
daa
pop
cmp
ljmp
andb
jmp
xchg
xor
cmp
push
mov
lea
pop
and
add
and
jae
push
pop
mov
push
jp
icebp
xor
test
loopne
xor
lret
fs
cmp
push
pusha
lret
dec
fcmovnbe
adc
mov
sub
push
jae
sbb
es
repz
pop
or
sub
pop
jbe
stc
notb
pop
and
xor
pop
lods
rorb
xchg
mov
sahf
add
jno
mov
dec
std
pop
cmp
mov
or
mov
pop
push
mov
inc
or
push
and
xchg
jmp
and
xchg
or
jbe
and
daa
cmp
and
adcl
xor
loope
into
je
push
test
shr
or
shlb
lret
repz
dec
scas
rolb
pusha
xchg
pop
and
add
and
xlat
sub
and
in
xor
xor
pop
cs
mov
dec
inc
loopne
add
and
mov
mov
testb
xor
cmp
clc
adc
jbe
insb
popf
adc
int3
rorb
inc
push
mov
scas
subl
push
or
and
jl
fcomi
movsl
and
push
in
dec
cmp
sbb
and
add
rolb
xor
sbb
and
cmc
ret
ficoms
xor
lahf
iret
adc
loopne
inc
add
mov
or
mov
hlt
push
mov
inc
mov
or
lods
test
jno
incb
adc
jno
xor
mov
js
add
add
pusha
cs
cmpsl
mov
push
cmpsl
sbb
adc
leave
sahf
aas
int
lods
cmp
fadds
xchg
sbb
fs
add
jae
into
loopne
sbb
and
int
inc
push
aas
fisttpl
add
sbb
adc
pop
aaa
and
dec
inc
fstpt
mull
lahf
das
mov
sub
fisubl
sub
xchg
daa
or
xor
sub
fldcw
ret
out
push
aaa
push
mov
in
cmp
cmp
mov
sti
fidivrs
sti
mov
mov
add
addr16
sbb
sub
jg
orl
fldenv
fs
pop
jge
or
add
and
lock
lahf
sub
sti
fstpt
pop
pop
sbb
fidivrl
inc
or
icebp
pop
xor
stos
xor
adc
or
ss
jmp
rcrl
arpl
sub
mov
cmp
pop
cmp
xor
pop
mov
xor
pop
pusha
sub
inc
sub
scas
out
cmpb
pop
icebp
push
add
or
in
faddp
enter
jg
pop
adc
jge
movl
pop
outsl
ss
mul
das
jg
jnp
addr16
jne
jae
xchg
jnp
mov
xor
xlat
mov
fistpl
and
xor
dec
imul
int3
pop
not
mov
lret
stos
cmpsl
clc
mov
addr16
arpl
popa
push
mov
mov
mov
loop
pop
mov
fwait
xor
pop
xchg
xor
jo
or
inc
mov
mov
fimuls
and
icebp
fwait
inc
add
sbb
add
xor
cmp
fdivrl
lret
and
repz
inc
lahf
flds
pop
fs
push
cmpsb
jp
insb
insl
data16
jp
int
icebp
sbb
xchg
int
inc
fdivrs
mov
push
pop
cmp
gs
in
add
inc
outsl
loope
pop
jnp
and
dec
jae
push
sub
aas
and
cmp
inc
vprotq
adcl
call
mulps
mov
xor
mov
mov
loope
cltd
rsqrtps
out
mov
out
inc
lods
xor
add
iret
lahf
dec
lds
jbe
sbbb
fdivr
mov
scas
stos
xchg
jecxz
sub
and
je
cld
pop
or
imul
xlat
or
dec
ret
sub
adc
dec
movsb
insb
aam
inc
xor
add
push
fcomps
daa
lods
ja
negl
or
inc
aad
neg
shl
adc
aad
repz
jo
dec
lock
addr16
rclb
arpl
les
dec
dec
movsb
cmp
fnstcw
test
inc
jnp
std
fdivp
shrb
sub
adc
stos
jge
ja
jmp
cmpsl
arpl
aad
arpl
push
push
into
adc
notl
jno
sub
add
xchg
xchg
sub
dec
lahf
jp
nop
imul
xor
pop
push
mov
and
inc
mov
jno
cs
lods
mov
jmp
cmp
ds
xor
outsb
xchg
js
cld
enter
dec
ss
and
xchg
add
imul
es
mov
inc
pop
sbb
mov
outsb
sub
mov
add
and
js
sti
add
ret
testb
inc
scas
cmp
sbb
or
adc
bound
loope
pop
push
or
mov
scas
fbld
es
mov
ds
nop
loop
mov
int3
rclb
jmp
and
push
and
inc
fbstp
jle
or
int
lods
push
mov
jo
jmp
mov
pushf
imul
pop
mov
inc
xor
ja
jmp
js
shr
lret
dec
call
adc
push
xchg
mov
int
cmpsb
mov
push
jecxz
das
adc
rcl
inc
add
mov
add
or
or
xor
sti
jmp
dec
adc
xchg
les
pop
dec
cmp
xchg
pop
inc
movsl
fidivs
mov
daa
mov
pop
adc
fs
cli
xchg
adc
mov
sbb
xchg
dec
or
mov
lea
mov
xchg
adc
adc
adcb
test
xor
xorl
jo
pop
push
jl
inc
sbb
icebp
fdivs
jmp
mov
aaa
push
push
jmp
imul
and
sahf
jl
icebp
ja
pop
movsb
loope
and
sbb
pop
or
ret
pop
lods
clc
lds
pop
cmpl
and
mov
addr16
sub
mov
int
cs
int3
add
push
cmp
cmp
lods
ficoms
add
push
filds
andb
int3
mov
add
push
sbb
and
orl
or
in
ljmp
and
dec
sub
shrb
out
mov
shll
shl
insl
ja
adc
sbb
push
jo
xor
and
push
adcl
cmpsb
dec
arpl
fistps
cmpxchg
pop
adc
cs
mov
mov
mov
adc
mov
scas
inc
mov
and
test
xchg
adc
ret
mov
stos
lods
imul
cmp
out
lock
shr
xor
cmp
or
mov
test
sbb
add
mov
outsl
ret
xor
jle
or
and
les
mov
add
in
adc
call
les
loope
fsubp
sbb
add
xor
xor
ficoml
fs
and
mov
xchg
stos
cmp
mov
and
iret
push
add
or
pop
dec
adc
dec
arpl
js
mov
inc
sbb
push
adc
sub
dec
push
push
pop
and
or
inc
xchg
es
pop
sub
add
jo
mov
push
xor
scas
xor
cmp
data16
lods
insl
xchg
mov
scas
fstps
push
add
les
push
cmp
push
dec
fadds
int3
xor
adc
and
push
dec
pop
inc
jbe
popf
and
sahf
pusha
pop
arpl
lods
mov
add
insl
add
mov
push
popf
mov
jge
faddl
pop
xor
mov
mov
pop
fmuls
and
pop
adc
inc
push
daa
mov
push
pop
or
adc
dec
pop
lahf
jge
js
pop
cmp
cmp
nop
in
push
insb
popa
in
out
push
dec
sub
pop
out
add
bound
outsl
sbb
bound
sbb
in
mov
sbb
gs
xor
dec
imul
les
lret
dec
adc
jle
popf
je
add
bound
andb
shll
test
scas
imul
iret
cmp
inc
mov
sbb
pop
add
xor
sahf
fildl
sbb
pop
int3
sbb
rorl
daa
mov
jns
pop
fcompl
mov
aad
cmp
shrb
mov
sub
cwtl
mov
pop
mov
mov
sti
mov
rcll
das
das
cmp
mov
mov
and
mov
cmpsb
adc
jne
xchg
add
jg
fsubs
les
adc
sbb
and
and
rolb
les
xor
inc
outsl
mov
in
sub
pusha
xlat
rolb
add
dec
inc
push
xor
sub
aaa
xchg
pop
shlb
cs
adc
inc
inc
cmp
xchg
sub
pop
test
clc
adc
popf
lahf
mov
mov
mov
fisubl
jae
xchg
sbb
es
and
inc
bts
adc
icebp
cmp
xchg
scas
push
orl
dec
loope
adc
and
adc
insb
popf
mov
das
add
cmp
stc
xchg
mov
sub
add
adc
inc
mov
xor
nop
nop
add
das
js
add
dec
push
cmp
jbe
mov
adc
adcl
sub
push
test
add
insb
hlt
daa
add
and
and
cmp
xor
add
mov
xor
gs
sub
pop
test
das
mov
sub
movl
add
aaa
sbb
xor
out
xchg
cwtl
fwait
int
add
add
push
add
xchg
les
sub
push
mov
add
pop
jo
sub
das
sub
xor
add
testl
clc
push
or
dec
adc
sub
js
sbb
pop
adcl
rorb
sub
cmp
push
js
addr16
repnz
adc
out
imul
and
lea
pusha
push
dec
and
and
and
adc
shlb
lods
aaa
push
outsl
fwait
jnp
mov
rclb
xchg
push
push
push
sub
les
cltd
shll
iret
iret
jae
xor
psubusb
imul
mov
add
xor
int3
es
mov
xor
sahf
fwait
pop
gs
iret
int
testl
es
sbb
addr16
hlt
pop
mov
pop
sbb
cmp
xor
or
ds
sbb
dec
inc
wrmsr
xchg
icebp
iret
add
sub
add
dec
dec
or
enter
ljmp
add
je
int3
cmp
les
push
sbb
push
add
mov
dec
inc
inc
pusha
pop
sbbl
mov
test
aas
inc
loope
aas
add
inc
cltd
leave
es
or
int3
cmp
jl
int
adc
xor
push
cmp
mov
ret
imulb
cmp
pop
sub
pop
pop
lods
push
test
dec
xor
sub
stos
pop
popa
ja
je
clc
xchg
pop
dec
sub
pusha
add
adc
out
push
cmp
rcr
loop
mov
or
test
pop
mov
sub
sbb
mov
lods
orl
and
push
out
add
imul
leave
mov
jae
imul
jns
push
pop
test
pop
and
test
and
push
aas
ret
xor
push
lea
mov
sbb
sbb
or
jo
and
in
adc
pop
test
mov
xchg
or
jno
push
mov
ret
jae
add
sbb
mov
or
std
pusha
adc
fwait
dec
sub
lea
fdivs
stos
mov
push
dec
and
push
icebp
inc
loop
or
xlat
add
mov
dec
gs
fists
fsub
enter
or
sbb
inc
mov
cmpsl
and
movsl
mov
in
hlt
jne
mov
daa
popf
lcall
adc
jno
and
adc
adcb
or
dec
jns
inc
xchg
out
cltd
adc
ds
mov
icebp
sbb
loop
out
xchg
add
sub
out
aam
lods
push
icebp
into
push
xor
loop
fdivl
or
xchg
cltd
xchg
xchg
add
cmp
ja
imul
das
mull
popa
out
mov
push
sub
add
mov
sub
in
dec
inc
outsb
rol
mov
movsl
mov
rcrb
inc
out
add
add
mov
xor
andb
cmp
xchg
inc
in
pop
adc
add
push
inc
scas
gs
xchg
pop
repz
inc
cmp
enter
testl
cs
inc
push
dec
enter
adc
xor
dec
addr16
and
xorl
stos
lock
in
sub
jo
sub
push
inc
inc
or
std
xorb
inc
xlat
imul
and
test
movsb
je
or
iret
inc
andb
jnp
leave
mov
pop
aas
xchg
inc
sahf
inc
cmp
xor
adc
add
dec
popa
pusha
mov
cs
cmp
adc
icebp
xchg
xor
add
add
jbe
mov
cs
sar
xorl
cld
shl
push
aas
add
adcl
pop
daa
jmp
xorb
mov
mov
adc
or
pusha
sbb
mov
inc
xchg
pop
sub
and
sub
repz
dec
test
loop
aas
scas
test
jo
add
mov
push
test
and
xor
daa
or
test
add
jae
mov
insl
pop
inc
pusha
adc
imul
fnstenv
mov
jmp
je
pop
and
fdiv
aad
jo
dec
jmp
or
mov
push
add
pop
stc
sub
add
jp
imul
inc
mov
xor
fs
addr16
iret
cmc
inc
pop
adc
mov
xor
add
adc
outsl
and
out
popa
sbb
mov
push
xor
pop
sti
mov
loope
dec
test
int3
cmp
dec
add
inc
xchg
mov
inc
int
gs
imul
packsswb
loop
sub
jle
adc
into
adcb
and
push
inc
imul
test
add
sbb
push
pop
cs
outsl
dec
fmuls
jmp
cmp
or
int3
fs
dec
xor
push
cmp
fmuls
mov
ret
inc
xchg
xor
mov
cmpsl
inc
push
sub
push
repz
fisttpll
mov
xchg
leave
inc
outsl
xchg
adc
ljmp
inc
loopne
mov
dec
into
movsl
xor
inc
xchg
add
pop
push
insl
pop
push
dec
test
ss
sbb
pusha
jl
sbb
jb
shlb
pushf
lahf
jl
jae
cmp
in
js
add
add
push
stos
sbb
in
rorb
test
adc
push
sub
xor
adc
mov
push
add
lock
push
push
pop
or
std
mov
insb
jns
pop
data16
dec
xorl
cmp
and
movsl
shrl
lds
add
push
and
push
mov
test
arpl
adc
clc
jne
loopne
cmp
js
adcb
add
js
adc
sbb
adc
iret
shl
mov
fwait
test
or
jl
out
cmpsl
add
dec
xor
jbe
test
add
outsb
or
push
arpl
push
or
jns
adc
or
cltd
or
sbb
enter
adc
test
push
mov
fcompl
leave
xorl
lret
mov
push
out
sbb
cmp
rcrb
dec
pop
fstpt
in
jnp
push
push
xor
sbb
jb
bound
lcall
xor
xor
inc
in
pop
or
inc
dec
adc
pop
insl
pop
pop
hlt
push
xchg
sti
jle
mov
enter
js
cwtl
bound
push
add
inc
test
adc
adc
inc
or
or
in
pop
mov
shrb
or
mov
outsb
mov
adc
inc
add
jns
iret
sub
roll
movsb
mov
push
shlb
xor
sub
js
sbbb
fbstp
adc
add
das
sti
sti
and
mov
iret
test
mov
ss
xor
lahf
push
jp
xchg
cmpsl
jne
mov
or
lds
andb
and
xchg
mov
jmp
mov
cmovb
lock
jb
rolb
je
int
lods
arpl
or
xor
fisubrl
sub
stos
inc
mov
es
loop
push
push
jns
jo
push
dec
and
mov
and
xchg
clc
jp
loopne
shll
gs
loop
jno
add
xchg
pop
popa
rorl
fmuls
xchg
ret
add
push
pop
push
fmull
ffreep
cmp
stc
sahf
push
movsl
test
arpl
cmp
xchg
rorb
int3
adc
enter
orl
test
inc
mov
aam
pop
cmp
add
movsb
mov
cs
cmpsb
loopne
loope
ret
sub
xchg
sbbl
push
insl
and
push
out
xor
and
scas
push
sub
jp
shlb
lahf
pop
movsl
clc
mov
lea
adc
pop
sub
lea
sub
pop
dec
dec
loopne
stos
and
pop
add
xor
sub
lea
shrb
ss
rorb
inc
imul
shrb
loop
mov
icebp
ja
aaa
mov
push
outsb
inc
in
or
inc
inc
lret
jmp
adc
ss
fstps
and
xor
push
lret
and
xchg
add
cmp
or
add
js
scas
mov
ret
dec
loopne
push
insb
sarb
inc
clc
adc
sahf
das
addl
mov
ret
popf
push
sbb
loop
negl
jo
mov
fnstcw
int
mov
pop
popl
dec
lods
int3
mov
fidivl
jmp
in
outsl
add
pusha
outsb
ffree
aaa
jmp
adc
push
or
push
push
add
shrb
in
cmp
subl
push
or
jo
leave
jmp
xlat
lea
shrb
add
cmpsl
imul
mov
xchg
jp
dec
sub
ret
test
les
jnp
loope
mov
inc
mov
adc
ret
mov
out
aaa
sbb
rcl
sub
sub
rclb
or
iret
mov
rolb
cli
add
adc
ja
pop
pushf
pusha
lahf
add
cmc
adcb
sbb
jg
fwait
sbb
cli
jge
and
cwtl
push
aas
int
or
and
inc
xchg
and
into
cld
popf
add
and
add
das
mov
jo
roll
mov
or
adcb
xor
mov
xchg
mov
sbb
xchg
xor
sbb
outsl
imul
outsb
loop
imul
scas
jle
shrb
andl
inc
push
stos
adc
xchg
cmp
push
addl
ret
loopne
mov
xchg
shll
dec
iret
test
xchg
push
push
or
cmpsl
jl
xchg
xchg
test
nop
fmull
daa
cltd
push
mov
push
movsb
push
cltd
and
dec
adc
arpl
sub
mov
rorl
or
test
in
xchg
sbb
fsubr
rol
pop
cmpsl
fisubl
and
xchg
and
add
rcrb
and
das
sbb
popf
inc
mov
iret
dec
inc
jbe
xchg
jo
gs
inc
jge
jle
or
sbb
sbb
cli
inc
sub
int3
cs
insb
xor
mov
cmp
add
and
scas
sub
sub
adc
mov
jae
lahf
dec
xchg
push
mov
push
sbb
or
sbb
sub
sub
xchg
jmp
jle
popa
adc
insl
jb
in
and
fwait
bound
in
mov
or
push
daa
push
add
mov
cmpsb
test
pop
cmpsl
mov
adc
push
pop
lock
das
or
mulb
out
and
pushf
int3
add
or
repnz
iret
mov
sub
loopne
inc
dec
les
imul
inc
cld
frstor
fdivrl
inc
movsb
sbb
push
dec
iret
dec
ret
dec
inc
repnz
arpl
sbb
push
in
or
mov
adc
mov
cld
mov
fwait
clc
mov
jg
imul
add
es
mov
jno
sbb
jno
movsb
xchg
sub
adc
insl
sahf
mov
mov
outsb
xchg
shlb
movsb
out
in
cmpsb
lret
add
push
ret
jo
dec
pop
mov
push
push
add
inc
push
jno
fsubs
dec
arpl
cs
aam
das
and
sbb
lods
cmp
fnclex
dec
pushf
jo
xlat
or
mov
ret
and
mov
jnp
add
ss
adc
or
rcrl
xchg
test
leave
rolb
and
cmp
rclb
sbb
mov
adc
add
mov
xchg
mov
fdivs
iret
xor
xor
pop
jle
pusha
inc
shrl
sub
insl
mov
add
jecxz
movsl
add
aad
jmp
shlb
xchg
sbb
iret
pushf
aad
pop
mov
pop
dec
pop
test
inc
iret
mov
test
xchg
test
adc
test
dec
cmp
pusha
es
test
adc
sti
sbb
insb
jo
mov
loopne
fstl
push
push
imul
nop
test
fsubrs
icebp
xchg
iret
iret
daa
xchg
add
add
rcrb
push
push
jo
es
lahf
jns
sub
mov
roll
push
add
lea
dec
xor
es
popa
mov
jl
movb
pop
orb
inc
inc
xchg
inc
in
or
jno
or
push
roll
scas
pop
and
xchg
dec
pop
pop
or
jecxz
lods
lahf
out
lahf
pop
loopne
loope
xchg
jno
add
cmpsb
shrb
pop
aaa
mov
and
pop
daa
outsb
mov
scas
and
push
ret
or
imul
jne
popf
in
and
scas
adc
sbbb
cmp
push
dec
mov
scas
add
pop
dec
jl
hlt
insb
pop
daa
jg
out
or
popa
stos
jno
mov
test
cltd
leave
cs
arpl
jae
dec
mov
or
inc
sbb
dec
sar
lods
in
and
jb
popf
xchg
dec
xchg
into
or
lods
push
sbb
imulb
shrb
insl
jmp
inc
jecxz
jbe
xchg
pop
mov
stc
dec
lahf
pop
xchg
mov
repz
jae
xchg
adc
sbb
or
add
sbb
sbb
call
stc
push
pop
in
mov
adc
push
inc
lods
jae
xor
sbb
pop
cmp
dec
add
icebp
cmp
lock
add
xchg
mov
mov
movsl
std
push
outsb
jns
mov
rcl
lret
pop
cmp
out
shll
adc
jae
repz
adc
js
jge
stos
push
iret
mov
xchg
lods
push
mov
mov
mov
xchg
sub
lea
cmp
or
dec
addr16
adc
and
push
shlb
ret
ret
sub
sbb
fdivs
sub
cwtl
lods
lea
leave
push
fistl
int
dec
leave
in
out
mov
xchg
ror
jne
pop
popf
push
adcb
push
leave
lock
push
dec
pop
mov
aad
mov
ds
mov
ret
andl
les
bound
sbb
adc
jno
jae
repnz
add
movsl
pop
shlb
or
jne
int3
fs
adc
inc
movsb
push
add
cmpsl
sbb
mov
ljmp
pop
push
mov
sbb
sbb
mov
jno
mov
loopne
subb
cmp
test
aaa
push
test
push
xchg
xor
push
shll
inc
out
jbe
lock
lahf
cmpsb
test
dec
fildl
sbb
dec
fld
sbb
xchg
js
sbb
das
stc
xorb
or
and
lock
jge
in
pop
hlt
xlat
xor
mov
clc
and
fs
pusha
mov
jae
adc
in
inc
jbe
add
cmp
mov
data16
stc
movsb
cld
and
lea
jge
push
or
push
xor
xchg
dec
sub
adc
icebp
or
adc
xchg
mov
add
inc
dec
popa
adc
or
push
in
cmp
bt
mov
cmp
adc
push
sbb
fsubs
sbb
mov
adc
fildl
sbb
mov
push
enter
clc
orl
sbb
push
insl
inc
dec
ljmp
movsl
test
add
cmpsb
push
imul
mov
mov
incl
imul
jle
data16
xor
shrb
addl
jnp
cmp
outsl
test
imul
dec
xor
or
stc
mov
or
cmp
dec
and
mov
xor
add
je
test
and
cmp
stos
hlt
loopne
xchg
adc
inc
adc
adc
or
push
mov
sti
aaa
adc
sti
fsubrl
icebp
fidivs
push
lods
clc
lret
fadds
push
mov
inc
jl
shll
inc
jae
jne
xchg
push
rcrl
subl
xchg
sahf
inc
jl
pop
xorb
push
sbb
int3
jg
pop
pop
dec
fldenv
in
push
jmp
in
enter
movsb
mov
or
pusha
stos
dec
ljmp
loope
xchg
fwait
mov
test
pop
dec
loope
mov
shlb
add
mov
mov
movsb
inc
cmpsl
mov
stos
xchg
dec
fucomip
or
daa
repz
scas
mov
stc
inc
imul
dec
cltd
sub
inc
pop
dec
imul
jo
dec
into
int3
daa
push
pop
adc
sub
es
mov
mov
faddl
pusha
add
inc
loope
mov
pusha
sbb
mov
js
stos
fcompl
lahf
xor
push
or
or
cmp
add
dec
loopne
ret
cmp
leave
sub
insl
mov
push
dec
imul
aas
dec
jns
bound
jae
cmc
fs
cmpsl
je
and
popf
outsl
jno
cmp
push
lock
push
adc
fcoml
xor
pusha
xchg
stc
jo,pn
ret
xor
psubb
mov
mov
icebp
leave
cli
fildl
mov
dec
and
pop
pop
cli
push
pop
dec
mov
clc
shl
rclb
imul
add
lods
andb
jns
add
js
std
mov
cmp
dec
pop
add
xchg
push
pop
mov
add
test
dec
jbe
adc
daa
dec
rcl
dec
fcompl
xchg
mov
jb
loop
sub
xchg
xor
push
jle
aaa
sub
xchg
cmp
adc
add
or
dec
rcll
jge
xor
aaa
jo
push
push
iret
mov
push
inc
js
pop
clc
jg
sub
lahf
in
mov
xor
call
ds
push
mov
xchg
push
add
inc
leave
lock
adc
call
sbb
xchg
push
hlt
push
pop
ds
mov
scas
push
enter
scas
inc
cmp
loop
push
lea
loope
pop
xchg
imul
outsb
xchg
sub
xchg
test
cltd
je
push
inc
and
mov
inc
or
sbb
mov
mov
xchg
xchg
jmp
mov
push
pop
js
sub
rolb
shll
nop
push
and
xlat
and
xchg
test
xchg
add
scas
cli
stos
movsl
adc
xor
pop
xor
mov
xorb
fldl
das
cmp
or
int3
mov
addl
subb
xor
je
push
enter
jmp
daa
pop
add
fs
mov
lock
pop
dec
insb
sub
xor
and
aas
jo
dec
sbb
sub
cmpsb
lret
int
or
add
ja
jg
out
xor
dec
xor
clc
sub
mov
test
iret
pop
shlb
scas
pushf
mov
lcall
test
test
insb
es
pop
xor
jno
dec
inc
push
decb
cs
add
aaa
ds
clc
dec
mov
test
ret
je
lods
dec
mov
das
pop
mov
inc
fwait
and
xchg
jne
cmc
push
or
inc
popa
mov
pop
inc
cmp
or
scas
or
outsb
inc
pop
mov
or
dec
or
es
push
cmp
in
or
test
push
adc
lods
xchg
in
cmovns
mov
arpl
sbb
jnp
jno
or
or
inc
insb
insl
imul
pop
mov
and
xchg
push
pop
test
out
insb
in
mov
sub
and
ret
imul
lods
and
imul
xor
mov
xchg
xor
sbbb
jl
push
cmp
add
or
xor
xchg
jne
push
insl
clc
push
vpsraw
shr
loope
fisubl
inc
lret
popa
inc
and
mov
pop
sbb
sahf
in
xor
push
or
cmp
cs
sub
jp
lret
pop
jl
andl
aad
fwait
push
mov
push
cmp
sub
movsl
icebp
add
rcll
or
fstps
and
aaa
pusha
inc
jecxz
mov
loopne
mov
in
mov
push
xor
inc
add
xchg
mov
jle
lods
scas
dec
shll
mov
je
lcall
je
arpl
nop
or
test
sub
or
sti
fwait
sub
mov
adc
sbb
add
xchg
cmp
push
out
xor
cmp
add
jg
mov
lock
adc
pop
push
xchg
pop
out
xchg
jmp
xchg
pushl
lret
ret
lds
jle
push
push
mov
lods
cmpsb
or
jo
jne
dec
and
cmc
xor
mov
sub
lods
xor
mov
adc
rorl
test
mov
ds
xchg
xchg
dec
jno
arpl
outsl
imul
push
mov
add
xor
pop
stc
call
push
cmp
xor
imull
frstor
imul
jb
jo
mov
sti
and
cmp
add
inc
fiaddl
push
je
les
pop
inc
jl
out
jmp
hlt
jne
jmp
inc
inc
sub
pop
push
xchg
pushf
add
or
stos
jmp
or
lret
or
int3
adcb
cli
push
inc
jne
mov
jns
sub
add
push
add
or
es
pusha
and
ret
jmp
and
shll
add
xlat
les
adc
push
and
and
add
push
dec
or
in
push
mov
addl
imul
mov
shrb
inc
mov
int
inc
sub
shl
add
aaa
cmp
pop
mov
pop
cmp
jo
sub
and
inc
jns
scas
xor
je
cld
add
sbb
fdiv
daa
aas
dec
add
push
xor
les
sub
dec
mov
sub
mov
cld
cmpsb
jne
data16
inc
jae
js
incb
testb
pop
aaa
adc
jl
fnsave
loope
dec
mov
add
cmp
xchg
adcb
les
repz
jno
add
xchg
mov
inc
push
sbb
mov
daa
hlt
adc
cli
or
and
sbb
ficoml
and
imul
adc
mov
or
mov
push
xor
stos
and
fiaddl
and
cmp
adc
fldl
mov
lods
push
or
or
jo
subb
mov
dec
pop
es
cmp
orb
sub
clc
add
loop
mov
add
adc
and
inc
dec
iret
adc
cmp
iret
dec
and
cmpsb
fwait
arpl
xor
pop
test
mov
cmp
ror
add
push
jbe
sbb
cld
dec
andb
add
testl
mov
add
arpl
add
or
iret
test
and
enter
shrb
push
and
sub
mov
or
scas
adc
sbb
subl
push
push
imul
xchg
ret
pop
sub
or
dec
cld
cwtl
iret
ljmp
ret
stos
dec
jae
xchg
jle
mov
adc
mov
sbb
mov
or
pop
or
scas
movb
or
sbb
hlt
loope
lods
push
sbb
add
bound
dec
and
enter
pusha
dec
int
in
lods
or
insl
xlat
movsb
jo
arpl
pop
mov
repnz
sbb
jno
int3
xchg
sarb
cli
and
cwtl
stc
pop
movsl
int
andl
popa
pop
arpl
and
adc
push
and
orl
adc
fmul
lock
or
jne
pop
mov
lock
sbb
addr16
insb
stos
and
inc
js
jecxz
mov
mov
test
mov
lock
lds
jg
or
popf
pop
and
int
mov
jo
mov
or
std
insl
and
les
gs
loop
push
fsub
or
and
sbb
xchg
rorl
push
pop
and
shrl
push
std
pop
cmp
cmp
xchg
fdiv
jg
pop
js
sbb
fldcw
or
push
mov
dec
push
shlb
nop
in
xor
and
xor
lock
xchg
cltd
arpl
mov
popa
mov
fs
sbb
enter
add
or
cmp
scas
pushf
inc
arpl
sbb
ja
dec
jno
sahf
xor
cmpl
rol
jno
or
or
mov
dec
mov
sbb
adc
popf
add
ljmp
xchg
in
push
lods
cmp
mov
jbe
cmp
jae
mov
jle
dec
fsubrs
xchg
adc
cmp
in
cmp
mov
add
push
out
push
push
sub
jnp
jl
and
push
inc
add
cmc
dec
sbb
inc
insb
stos
sub
adc
mov
insl
sub
sbb
test
out
sub
fsubrs
mov
xchg
xor
aas
jb
or
ret
mov
xchg
lods
add
into
popw
js
add
and
das
mov
add
addl
mov
mov
out
adc
sbb
add
mov
lods
sub
jle
xor
adcl
mov
paddd
push
mov
and
and
in
inc
roll
pop
mov
in
dec
shrl
and
int
repz
cwtl
mov
push
xchg
cmp
cmp
sbbb
out
sahf
faddp
shrb
sbb
push
push
sub
pop
fistps
loopne
fldcw
in
fs
sbb
pop
inc
add
in
shlb
fistpl
ja
call
add
movsb
add
adc
sbb
xlat
cs
mov
into
add
lret
push
cmpl
sub
mov
mov
enter
std
add
sti
push
sub
sub
push
lods
push
pop
imul
adc
dec
outsl
sbb
cmp
andl
cmp
gs
pusha
mov
mov
dec
cmp
pop
pop
fwait
pop
in
inc
push
lcall
inc
adc
mov
iret
dec
ret
lret
push
dec
mov
shll
add
sub
mov
mov
and
push
fcoms
xor
mov
rcr
sub
nop
shlb
lcall
pusha
xchg
mov
pop
mov
mov
mov
xchg
mov
pop
shlb
cmpl
or
cmp
and
sub
sbb
inc
mov
xchg
minps
push
cs
repnz
int3
loop
and
mov
cmpsl
outsb
sub
adc
popa
dec
adc
xchg
jmp
cli
fwait
jl
jecxz
or
sbb
pop
or
or
insb
insb
jns
inc
push
xlat
lds
cmc
movsl
add
jg
fcmovnb
and
sub
pop
les
add
inc
enter
les
jge
rcll
dec
dec
shrb
lods
fwait
inc
inc
lret
xchg
sub
add
cmpsb
addb
scas
mov
fdivl
pop
in
lea
and
rol
arpl
filds
sub
push
inc
lret
fstps
add
pop
addb
push
std
ret
mov
jg
out
jnp
add
lods
mov
mov
hlt
sbb
adc
or
subl
cmpsb
loop
and
movsl
push
and
xchg
mov
mov
ja
sub
movsl
jns
loope
inc
das
mov
mov
lods
add
stc
insb
jo
faddl
clc
gs
add
jno
mull
lahf
and
pop
or
and
dec
lods
pop
dec
sub
inc
mov
and
sbb
sarl
mov
add
out
mov
pop
mov
popf
sbbl
mov
shll
test
and
adc
adc
ret
mov
add
int3
sbb
sbb
ja
add
dec
xlat
aam
sub
or
xor
setbe
pusha
cwtl
sbb
push
and
cli
jg
and
add
hlt
lret
stc
js
mov
iret
clc
sbb
xchg
inc
dec
add
add
loopne
ret
push
mov
rol
dec
addl
jns
test
pop
or
xor
push
movsb
dec
dec
sbb
inc
push
ss
and
adc
addr16
xchg
jno
out
lds
lods
pop
sbb
adc
lret
mov
hlt
xchg
xchg
xchg
fs
iret
loopne
jbe
sub
xchg
push
imul
mov
mov
mov
jg
in
test
sarb
or
pop
pop
or
stos
cmp
jecxz
sbb
cmp
adc
es
mov
sub
add
add
das
imul
nop
cmp
cmp
or
jnp
iret
clc
jb
pop
mov
fiaddl
sub
les
mov
daa
call
sbb
bound
cmpsl
inc
jb
fadds
int3
mov
loope
adc
or
sub
cs
cmpsl
xor
popa
mov
rcrl
sbb
pop
movups
sbb
lcall
scas
pop
and
jbe
cmp
jg
ror
or
jmp
push
xlat
insb
fld
test
loope
dec
icebp
xlat
scas
mov
push
mov
out
pop
and
call
mov
add
xor
addl
inc
gs
mov
loopne
pop
push
fs
push
push
or
pop
jl
pop
mov
out
out
outsb
lea
leave
dec
mov
mov
pop
mov
fs
movsb
out
int3
shll
xor
lock
add
cmp
mov
fs
addb
sbb
push
push
pop
cmp
and
pop
pop
iret
sbb
jge
fldl
sub
and
jno
sub
mov
roll
xor
js
jp
dec
xchg
addr16
mov
add
sub
and
mov
pop
xchg
fs
mov
sbb
xchg
arpl
mov
jle
cmp
inc
jns
rcl
lret
fdivrs
fidivrl
inc
rcrb
out
arpl
inc
dec
push
rorb
mov
hlt
mov
adcl
jns
pop
mov
shlb
or
jno
fwait
popf
lods
dec
push
mov
mov
pop
xchg
mov
dec
lret
imul
lock
cwtl
and
add
pop
push
xor
iret
mov
int
lods
xchg
pop
test
iret
movsl
dec
inc
mov
pop
inc
cmp
bound
mov
sub
push
sub
aas
outsl
xchg
xchg
push
xor
add
loope
and
in
test
aam
add
js
cmp
popa
xor
sbb
stos
inc
les
imul
fistpl
insb
cmp
push
adc
sub
popa
fs
subl
imul
mov
scas
xor
adc
push
sub
push
and
inc
mov
test
cs
push
daa
inc
fwait
add
movsl
addr16
push
xor
or
adc
sbb
add
pop
and
dec
fimull
sbb
push
jl
aas
jbe
sbb
or
xchg
mov
mov
and
scas
test
mov
inc
and
inc
iret
stos
test
xchg
iret
push
daa
add
mov
or
pushf
xchg
popa
and
inc
jp
loopne
cmp
pop
pop
es
cmp
test
mov
xchg
xchg
mov
pop
lret
add
lods
mov
ja
scas
push
ds
push
inc
xlat
xlat
push
cmp
sti
in
cltd
and
into
mov
out
mov
dec
mov
xchg
loop
addr16
inc
enter
mov
imul
dec
stos
test
shr
rolb
out
add
jp
xor
pop
xchg
in
sub
pop
jbe
xchg
nop
mov
mov
out
dec
nop
push
push
mov
inc
pusha
cmp
mov
aaa
clc
imul
pop
mov
or
es
cmpsb
outsb
xchg
repnz
xor
push
pop
imul
mov
movsb
rclb
call
lods
sub
pop
xchg
mov
mov
inc
into
in
aam
out
fnstsw
loop
je
ja
data16
imul
clc
dec
inc
out
push
mov
jecxz
inc
iret
or
pop
pushf
cmpsl
and
dec
jnp
pop
imul
push
push
ds
shrb
jnp
pusha
scas
pop
mov
sub
mov
in
nop
lret
leave
lods
in
les
rorb
jo
jnp
mov
and
ret
lds
or
cld
pop
lcall
push
aam
imul
and
xor
add
jb
imul
pop
pop
xlat
stc
lret
imul
pop
outsl
mov
scas
or
jne
scas
pop
gs
xchg
add
fcoms
cmp
jno
les
dec
nop
mov
dec
adc
lret
enter
jmp
push
inc
sbb
stos
movsl
jne
js
int
lods
adc
cmp
popl
xor
push
and
stc
js
repnz
push
fmull
pop
add
mov
ja
push
aad
cmpsl
adc
fs
fisttpll
cs
pop
xorb
cmp
dec
lret
sbb
shrl
stc
dec
or
xor
aam
aam
add
adc
sub
das
add
mov
jno
pop
ljmp
push
mov
rorb
fs
movsb
dec
sbb
sbb
lock
shlb
stc
jmp
cmp
je
aaa
fsubrs
adc
scas
aaa
dec
add
sbb
jns
in
movsl
cmpl
js
or
dec
lods
es
mov
xor
inc
jmp
push
fnsave
sub
test
adcl
pushf
push
es
psrlq
add
or
test
add
mov
fnstenv
cmp
push
mov
test
xor
mov
scas
aaa
cwtl
ja
jle
xorl
int3
shrl
add
lods
xor
dec
fsubl
and
sbb
jp
sub
negb
adc
or
and
cwtl
xor
or
cli
inc
out
sbb
in
insb
int3
add
push
push
inc
push
sbb
add
add
fisubl
cmp
sbb
jle
fisttpl
orl
cmp
or
mov
sbb
lret
dec
lods
push
movsl
sub
sub
scas
sarl
pop
testl
cmc
push
int
ljmp
and
sbb
mov
cmp
jo
jge
cmp
or
cld
xchg
das
clc
and
xor
adc
mov
xor
pop
mov
lock
mov
add
pushf
and
movsl
std
nop
add
cld
daa
push
mov
in
xchg
or
xor
jecxz
repz
icebp
push
les
push
push
sbb
out
push
negb
sub
push
pop
scas
xor
scas
mov
outsb
in
fidivrs
pop
sbb
jnp
jbe
mov
rclb
mov
pop
fdivrl
fmuls
xchg
jo
in
xor
pop
add
xchg
mov
test
das
int
push
scas
sbb
xchg
int3
dec
inc
lret
pop
inc
xor
add
lock
or
jb
fiadds
cmp
sub
or
pusha
sbb
in
xlat
pop
and
and
ja
cli
out
les
out
lock
jg
movsb
iret
xor
mov
scas
sbb
push
mov
stos
outsb
xor
push
rolb
scas
cmp
and
push
or
or
movsb
enter
in
xor
stos
jmp
rcl
push
xor
ljmp
mov
fwait
and
inc
dec
xor
std
inc
mov
stc
std
cmpsl
add
cmp
mov
cmpsl
mov
mov
sub
cmp
dec
inc
sbb
sbb
orb
fiadds
cmp
fucomp
add
pop
push
pushf
xchg
add
leave
lock
ja
push
lock
inc
add
scas
jnp
xor
shll
and
cmpsl
inc
add
lods
lods
and
das
lea
js
repnz
jmp
dec
fs
xchg
gs
add
cmpsl
add
sbb
iret
fisttpll
pusha
inc
jno
cwtl
cmp
or
push
fs
xor
xchg
out
xchg
fcompl
sub
add
xchg
push
push
popa
imul
and
pop
dec
nop
adcb
sahf
sbb
or
mov
jmp
adc
rorl
pop
fisubrs
sub
mov
ret
or
fucomp
enter
call
dec
ret
imul
jmp
xchg
test
shlb
jbe
gs
pop
pop
flds
ret
jp
ss
push
and
jns
xchg
mov
insb
imul
jp
and
pusha
scas
push
xchg
lods
and
pop
jle
xor
add
mov
dec
inc
loope
jmp
fdivl
jge
pop
outsb
ss
jp
adc
sbb
inc
cmp
mov
xor
mov
rcrb
ret
lcall
cli
push
sub
sbb
mov
outsl
inc
ja
pop
dec
add
cmp
fisttpll
cmpsl
pop
jecxz
add
mov
xchg
push
push
call
xchg
jae
cli
es
dec
or
push
lods
enter
jae
and
or
insl
xchg
mov
gs
or
xchg
push
sbb
and
jbe
es
or
adc
xchg
xorl
xchg
gs
or
jp
fnstsw
call
pushf
mov
mov
fiadds
or
pop
mov
sub
fwait
enter
jae
imul
mov
out
insb
stos
mov
movsl
xchg
es
shrb
test
insl
xor
fwait
push
mov
sbb
sbb
pop
or
insb
lds
and
into
add
daa
dec
cltd
cmp
or
push
das
imul
mov
dec
add
cld
pop
imul
mov
push
orb
jae
aas
adc
or
sub
add
aam
add
mov
shr
nop
jmp
adc
pop
and
orl
inc
adc
inc
and
mov
imul
ss
sub
pop
es
xor
loope
mov
fcmovu
sahf
push
jl
jbe
das
push
dec
adc
mov
and
adc
sub
je
or
push
aaa
rcrb
or
jo
test
xchg
insb
clc
add
jno
xlat
jb
or
xchg
test
inc
cmp
in
aas
stos
xor
add
loope
mov
iret
int3
pop
fwait
mov
lret
movb
adc
xor
cmp
int
lahf
and
cmp
sbb
rcrl
ds
cld
inc
sbb
inc
stc
insb
or
mov
inc
inc
and
insl
xlat
outsb
rcll
out
cmp
sub
add
mov
rcrb
pop
pop
icebp
or
stos
mov
adc
pusha
xchg
popa
dec
sub
xor
mov
aaa
lret
mov
and
jmp
mov
insl
aaa
nop
sbb
and
sbb
sbb
sbb
xor
aaa
xor
lahf
xor
xchg
xchg
push
and
adc
add
jp
pop
jecxz
icebp
repnz
fdivs
scas
dec
cmp
movsl
scas
or
jecxz
inc
mov
pop
ret
rorl
dec
dec
lock
adc
inc
and
mov
add
pop
inc
and
rorb
jecxz
push
pop
nop
mov
or
out
or
lret
jle
push
inc
mov
add
xor
and
push
xchg
out
xor
mov
cmp
and
lahf
mov
push
dec
inc
mov
xchg
roll
jne
adc
and
sbb
mov
iret
fsubp
adc
ret
inc
rolb
into
pop
repz
dec
pop
je
and
mov
mov
jmp
mov
mov
and
data16
or
pop
sub
mov
int
cwtl
rolb
xor
jo
inc
jns
filds
or
sub
test
sbbb
nop
sub
int
adc
adc
xchg
mul
ja
xchg
arpl
add
xchg
sbb
push
add
loope
aam
lret
inc
lahf
or
packsswb
in
scas
je
or
pop
inc
sub
test
cmp
mov
pop
or
shrb
push
fidivs
outsb
and
mov
fnstcw
sbb
jnp
punpcklwd
movsl
xchg
cld
adc
and
lret
sbb
mov
xchg
and
jecxz
jo
sub
cltd
sub
or
scas
inc
scas
xchg
in
pusha
outsb
or
lods
push
push
xchg
sbb
and
dec
xchg
mov
adc
and
adc
dec
mov
xchg
leave
and
popa
lods
inc
and
mov
loopne
add
pop
cmp
inc
sbb
mov
sbb
fnstenv
aaa
xchg
adc
sub
movsb
and
dec
cmp
addb
dec
fwait
pop
dec
pop
push
insb
insb
adc
out
push
sbb
leave
jns
pusha
adc
mov
inc
or
pop
loop
in
dec
popa
scas
mov
mov
sbb
push
xchg
fucomp
add
inc
adc
push
pop
cmpsl
mov
cmp
ljmp
inc
sbb
loop
pop
xor
push
ret
mov
or
hlt
inc
sbb
scas
enter
and
addr16
insb
fstp
add
lret
cmpsb
xor
mov
or
test
neg
lea
test
inc
rorb
aad
mov
sbb
mov
or
ja
sub
push
rcrb
mov
xor
sbb
or
or
or
pop
pop
push
adc
xor
fcmovnbe
xchg
lock
sbb
mov
es
jne
push
inc
rolb
mov
jo
adc
imul
pop
lea
mov
das
and
xor
enter
xchg
pusha
mov
adc
sub
sti
adc
call
adc
ret
cli
xor
jnp
inc
ss
clc
adc
jae
loop
pop
sbb
iret
js
push
add
jnp
shrl
and
stc
sar
sub
fwait
push
mov
sub
mov
sbb
mov
cmpsl
push
sbb
mov
jg
and
or
inc
stos
lods
sbb
loope
lods
sarl
jnp
testl
cmp
jnp
xor
and
aad
nop
cs
and
mov
iret
popa
ret
test
mov
mov
imul
mov
mov
adc
js
mov
mov
out
imul
push
ljmp
xor
push
movb
push
add
adc
sbb
xorl
mull
jo
jge
add
test
rolb
in
ret
loope
movsl
mov
jns
imul
and
push
sub
insb
adc
push
and
jns
aas
imul
int3
iret
pop
sbb
add
jns
jne
and
sbb
push
pop
daa
adc
data16
pop
and
imul
pop
pop
inc
cmpsl
add
sub
inc
adc
popa
mov
inc
sub
orl
pusha
add
adc
add
sbb
loopne
inc
sub
je
mov
push
popa
out
jo
inc
jo
pop
add
arpl
pop
cld
sbb
sbb
test
add
and
dec
fidivs
or
add
inc
dec
ss
daa
adc
ret
cmpsl
add
clc
inc
sbb
imul
je
test
xchg
mov
popa
mov
jnp
int
std
inc
and
mov
add
push
add
push
or
adcb
add
jmp
inc
popf
inc
ret
les
sbb
aas
test
insl
mov
mov
pop
lock
or
repnz
nop
inc
sbb
movsl
pop
test
and
push
test
fnstsw
ret
add
jo
jge
xchg
loope
into
jns
lods
test
adc
pop
sub
aaa
xor
imul
ret
xor
pop
rcrb
push
dec
movb
sub
mov
inc
and
negl
in
in
or
or
and
add
sub
jo
mov
cltd
inc
pop
dec
hlt
fldlg2
pop
pop
push
out
iret
mov
inc
jecxz
lret
xlat
add
ljmp
pusha
or
rcl
js
cmp
push
push
xchg
jmp
dec
xorb
mov
sbb
in
adc
add
loopne
push
fsubrs
or
sub
js
cmp
icebp
sbb
es
adc
pop
or
fistl
push
mov
fadds
mov
mov
sbb
mov
inc
dec
jmp
jo
xor
mov
xchg
sub
jmp
das
cltd
add
pop
jne
stos
fiadds
fcomi
movsl
add
jmp
and
add
cmpsl
xor
mov
hlt
add
stos
or
xor
setns
fisttps
adc
addr16
testb
adc
bndldx
mov
dec
data16
lods
and
mov
or
push
push
pop
inc
addl
xchg
push
mov
jne
test
jle
sbb
dec
mov
mov
es
js
sub
or
notb
add
jl
pop
mov
and
ret
inc
mov
dec
shrl
sub
movb
add
mov
sbb
movsb
or
imul
sbb
push
adc
push
jmp
push
les
cmp
mov
cltd
js
andl
sbb
cmp
andb
loop
test
sbb
push
xor
adc
aas
cltd
push
or
aas
xchg
fbld
push
mov
sub
icebp
cld
loopne
pop
aad
mov
add
ss
and
and
push
adc
pop
sti
xchg
push
sbb
iret
pop
mov
clc
sbb
adc
adc
push
jb
outsb
adc
pop
pop
cwtl
add
or
dec
test
int3
fwait
dec
xchg
std
out
mov
cmp
mov
mov
pop
jnp
and
inc
or
add
sub
cltd
leave
add
mov
test
push
sub
pop
push
mov
jns
adc
xchg
push
test
rcrb
xchg
xor
ret
test
ret
cmp
sub
jp
add
sub
aas
or
pusha
or
jno
inc
les
pop
inc
andb
sub
mov
lea
fisubrl
sub
cmp
or
arpl
rol
fwait
lock
test
push
jae
sbb
dec
rolb
mov
std
or
loope
dec
dec
push
movsb
loopne
adc
ret
int
dec
imul
inc
pusha
cmp
faddl
loopne
jb
dec
filds
inc
sub
add
push
or
pusha
cmp
loopne
and
sbb
sub
sub
roll
or
loope
negl
jecxz
xchg
punpckhwd
aam
xchg
cmp
scas
mov
daa
mov
add
aam
adc
push
enter
inc
clc
clc
sub
into
in
sahf
add
or
rcl
imul
mov
push
clc
sub
les
xor
xchg
clc
adcl
mov
rclb
leave
mov
jo
xchg
or
imul
int3
mov
adc
lock
pop
int
cmpsl
add
subb
icebp
arpl
cld
xchg
dec
ret
sarb
pusha
add
pop
cmp
add
repz
mov
push
or
ds
add
bound
stos
fsubl
fs
dec
test
hlt
jne
xor
ljmp
mov
or
or
jge
lahf
sub
xor
outsb
ret
call
mov
repnz
add
imul
jmp
xor
test
sbbb
and
add
add
inc
iret
inc
mov
dec
add
or
cmpsb
cmp
dec
jnp
fildl
cmp
and
xchg
mov
sub
into
std
pushf
popa
imul
fstl
loopne
add
out
push
orl
faddl
lret
sub
outsl
jo
cld
aam
mov
jge
ljmp
fsubrl
mov
nop
push
sbb
rolb
add
push
push
test
test
xor
daa
xchg
jne
aaa
lock
in
adc
and
adc
mov
sbb
cmpsl
pop
xor
insl
add
sbb
sbb
mov
enter
add
test
inc
jmp
lcall
mov
add
pop
xor
xor
adc
fildl
clc
mov
loope
orl
jge
insb
jge
xchg
inc
and
xchg
mov
push
jecxz
mov
push
je
mov
xor
mov
pop
out
push
or
dec
pop
nop
cmp
call
pop
jo
pop
popa
push
dec
jne
bound
mov
shlb
pop
imul
push
xchg
pop
cmovb
add
mov
lahf
adc
mov
pop
in
sbb
mov
pop
cmp
scas
push
pop
pop
dec
les
lods
icebp
out
xchg
xor
fwait
add
sbb
or
testl
jmp
jmp
sahf
popf
insb
cmp
adc
or
hlt
test
sbb
or
push
xchg
and
push
fstpt
cmc
jp
xor
les
mov
mov
pop
in
dec
jns
add
inc
out
mov
sbb
out
sbb
push
insl
jae
imulb
lahf
mov
push
pop
mov
jnp
pop
pop
fdivrl
int
push
sub
mov
mov
mov
dec
jnp
lahf
fs
jp
cli
mov
shll
inc
xor
js
xor
mov
add
add
dec
int3
out
das
sbb
sbb
xor
mov
test
mov
adc
inc
es
mov
mov
iret
aas
add
jle
add
push
adc
cmp
mov
insb
adc
xor
cmp
or
aad
pause
scas
add
testb
add
clc
xorb
xchg
adc
sub
or
dec
and
xchg
inc
xorl
in
gs
aam
test
xchg
or
inc
dec
and
lds
fsubrl
std
mov
jbe
jo
cmp
test
push
add
popa
fadds
subb
mov
lea
es
mov
sarb
lods
cmp
mov
lock
ret
popf
loope
xchg
rcrb
sar
dec
pop
mov
inc
pop
add
shlb
test
jecxz
loop
inc
push
mov
ret
cmp
cmp
data16
mull
mov
fsubrs
jmp
and
and
cmp
enter
push
adc
negl
mov
insl
xchg
push
dec
int
push
jo
push
mov
daa
pop
dec
ljmp
lock
dec
fpatan
push
test
ret
rclb
push
adc
add
bound
enter
jb
sub
lret
adc
xor
inc
mov
cmpsb
out
inc
jae
les
sbb
or
popa
icebp
xor
stos
or
test
js
stos
add
inc
or
in
aad
mov
imul
mov
lods
lods
adc
mull
dec
or
clc
addb
sarl
lret
xor
dec
lock
and
or
adc
pop
or
inc
arpl
fisttpl
and
push
ja
aam
add
xor
jns
fneni(8087
cmpsb
loope
push
outsb
imul
aaa
inc
add
aas
pop
xlat
pusha
push
sbb
testl
and
loope
aaa
enter
insl
inc
inc
inc
and
jge
mov
mov
lds
jmp
aas
in
and
inc
push
ljmp
in
rcrb
sbb
rcrb
outsb
shll
or
mov
jbe
les
sbb
mov
pusha
shlb
loope
popf
inc
push
out
xchg
lds
pop
jno
pop
adc
mov
add
dec
lds
fnsave
and
or
cmpsb
xor
imul
mov
dec
jae
sahf
addl
xchg
cmpb
loope
mov
and
xchg
stos
mov
jmp
sbb
in
adc
sbb
jle
das
sub
add
mov
fistl
rcrb
cmp
inc
xchg
pop
rcll
add
rcl
pop
lock
or
xorl
mov
jbe
test
cs
xor
mov
xchg
fidivl
inc
in
push
sub
scas
push
outsb
sbb
jg
xchg
xchg
cmp
mov
inc
lret
das
out
mov
or
int3
sbb
lea
or
aas
xlat
sbbl
push
jle
cltd
aaa
sbbb
testb
xchg
ret
out
cmpsb
call
mov
roll
and
outsb
aad
pop
xor
int
pop
andl
jmp
pop
or
pop
sub
je
and
dec
loope
and
dec
loope
sub
inc
sbb
mov
test
pop
mov
inc
test
push
push
sub
or
inc
adcl
lds
cltd
in
mov
mov
cmp
sbb
pushf
jge
daa
mov
aad
adc
pop
or
add
push
lock
pop
xchg
add
dec
or
push
rol
popa
xor
cli
outsl
ret
stos
ds
add
es
add
fsts
mov
in
stc
add
fldt
jnp
mov
test
xchg
sbb
cmpsl
setge
push
mov
cmp
xchg
push
xchg
mov
clc
jae
inc
jg
aas
fsubrs
shll
cmp
add
push
inc
sarl
insb
loopne
aad
push
jmp
popa
lods
jmp
xchg
lahf
sub
cltd
jo
xchg
pusha
push
add
add
enter
stc
sbb
orl
shll
or
movsb
mov
xchg
mov
fs
lods
xor
dec
ret
add
fcoml
sbb
iret
ret
int
popa
jp
leave
fwait
pop
sbb
add
xor
inc
je
adc
mov
in
mov
arpl
dec
fldl
rclb
inc
sub
cmp
loope
and
hlt
in
dec
pop
lods
and
or
pop
sub
mov
add
mov
nop
xchg
jne
pop
bound
push
xorb
cmp
flds
sbb
mov
xchg
sub
or
icebp
inc
sarb
out
xor
popf
add
movsl
arpl
xchg
xchg
adc
cmp
sub
ret
cmpsb
aad
cwtl
mov
rcrl
xor
je
pop
ljmp
dec
or
pop
sbb
iret
cmp
dec
push
dec
cmp
mov
push
jle
pop
sub
insl
inc
or
and
cmp
ret
and
imul
mov
xor
dec
or
cmp
xchg
cmp
jecxz
aad
out
push
mov
inc
cli
daa
add
inc
xor
mov
je
test
or
adc
sub
sub
cwtl
or
and
pop
sbb
pop
jae
loopne
and
adc
ret
cltd
les
outsl
scas
jecxz
test
sti
icebp
cli
outsl
pop
sti
dec
aad
cli
push
add
sub
outsb
lahf
outsb
or
pop
add
mov
daa
fldl
rol
ss
xor
aas
jg
in
xlat
fbstp
jecxz
adc
sti
push
shr
shl
mov
jb
ret
fwait
fs
jo
push
adc
add
xchg
cmovns
pop
xchg
mov
add
sub
push
xor
rclb
sub
mov
shll
addl
adc
daa
jecxz
cmp
rcrb
js
add
sbb
cltd
js
mov
xchg
aad
sbbl
pop
in
pop
loopne
inc
adc
daa
mov
cmp
mov
add
dec
xor
jbe
xor
mov
cmp
sub
sbb
cs
pusha
sti
dec
imul
jne
int3
xchg
adc
sbb
dec
addr16
sbb
mov
push
dec
ds
imul
arpl
ss
pop
or
es
and
or
andb
icebp
nop
addb
fnstcw
fwait
add
aaa
clc
shrb
jmp
jmp
push
jmp
test
push
jo
inc
mov
loope
mov
sti
or
xor
add
dec
shlb
push
mov
int3
aad
cli
push
mov
add
jae
sub
lods
imul
add
pop
and
lcall
and
sub
mov
adc
and
mov
sub
fld
add
ds
stos
cwtl
sti
inc
arpl
cwtl
pop
fldcw
les
loope
cmpsl
xchg
subl
jl
aad
out
xor
and
and
push
mov
in
in
in
pusha
sub
iret
lock
xorps
leave
pop
pop
inc
adc
cmp
dec
inc
mov
mov
ljmp
mov
xchg
mov
loopne
pop
cmp
pop
xor
scas
insl
pop
fldl
pop
es
and
test
out
fwait
pop
add
mov
ret
fwait
push
fisttpll
mov
push
push
aaa
jae
or
adc
pop
jle
inc
loopne
push
cmp
xchg
fadds
jnp
orb
inc
jmp
xor
push
mov
scas
xor
das
xchg
mov
jge
add
scas
sbb
cmp
xorb
test
xchg
sub
mov
mov
push
push
icebp
popa
ret
aad
sub
mov
shll
jecxz
int
add
or
push
or
rcll
mov
mov
scas
pop
xor
movsl
xchg
lret
mov
sbbl
and
aam
mov
ret
lret
add
inc
xchg
sub
fwait
push
xchg
shlb
mov
inc
inc
jecxz
shll
cltd
pop
jmp
mov
sub
imul
lds
movsl
mov
add
push
dec
mov
std
mov
rorl
mov
insl
sbb
das
test
pop
sbb
icebp
pop
out
jbe
mov
test
stos
lock
jae
or
es
stc
or
int3
popl
je
mov
add
mov
or
rorb
jecxz
adc
adc
xor
lods
arpl
js
pusha
jmp
sub
and
loop
xor
cmc
cmp
inc
les
fwait
adc
jle
cmp
fidivrl
pop
out
rclb
enter
fstl
insb
mov
and
test
jno
pusha
add
ret
mov
push
aaa
and
xor
xchg
movsl
lods
loope
sub
in
or
add
jo
xor
ret
mov
fdivs
iret
andb
lock
out
popa
xor
mov
dec
xchg
sbb
rol
loope
xchg
flds
daa
push
add
lret
lds
jae
test
out
adc
leave
inc
aam
add
mov
ret
test
sub
fnsave
mov
cmpsl
cmpb
push
stos
mov
int3
adc
xor
inc
push
mov
mov
add
ud2
fdivrl
mov
and
jmp
cmp
add
pop
test
inc
aas
mov
ret
lahf
mov
fst
mov
into
mov
mov
add
arpl
in
insl
jl
add
xlat
je
sub
mov
pop
jecxz
rorl
xor
adc
lret
mov
add
shll
pop
jge
adc
cmpsb
push
sub
sbb
push
cmpsl
pop
add
lock
cmp
push
jmp
sub
dec
fs
jmp
pop
xor
sub
in
jecxz
nop
sahf
insl
pop
mov
je
ljmp
or
ss
sbb
add
push
sbb
addb
jbe
mov
mov
fs
pusha
add
xor
inc
ret
dec
mov
xchg
dec
or
jmp
mov
or
popf
xchg
loope
adc
add
mov
lea
sbb
sub
pop
add
dec
insb
fistps
sub
inc
aas
inc
inc
adc
xorb
mov
adc
push
adc
sub
clc
sbb
ja
jge
mov
xor
bound
repz
mov
fildll
inc
and
daa
shll
mov
insb
pop
cmpb
xchg
test
cmc
bnd
lock
or
xchg
and
add
mov
fdivl
sbb
xchg
jg
iret
lcall
inc
inc
pop
sahf
outsl
std
push
cmp
push
adc
pop
jle
add
addr16
int
mov
cmp
pop
repnz
cmp
imul
mov
sub
pop
sbbb
or
roll
xlat
adc
int3
xchg
pop
mov
add
push
xor
clc
ss
shlb
push
scas
xchg
pop
sbbb
aam
xchg
cmc
dec
pop
in
daa
dec
pop
loope
push
outsl
cwtl
push
out
outsb
sbb
negl
jo
ficoml
inc
lcall
mov
scas
sbb
cmp
sbb
test
int3
jecxz
lret
or
mov
cwtl
jo
add
call
mov
xchg
or
sub
je
pop
cmp
je
or
and
push
or
or
adc
push
cmp
inc
es
xor
cs
cmp
adc
lea
mov
lods
xlat
pop
in
mov
xchg
jge
inc
cmp
cwtl
sub
cmp
test
adc
out
adc
and
sub
sbb
imul
add
xlat
add
imul
jg
push
mov
mov
das
in
push
data16
push
je
test
mov
inc
xchg
mov
sbb
adcl
push
push
mov
insb
add
sub
mov
clc
jg
xchg
xchg
ss
sub
add
mov
pop
mov
add
dec
push
or
xor
or
xor
mov
test
js
sbb
icebp
push
popf
dec
cmc
divl
into
loopne
sbb
jns
lcall
daa
sub
push
mov
ja
adc
mov
mov
rcll
xlat
sbb
mov
icebp
inc
arpl
sbb
jo
in
adc
xchg
mov
dec
mov
loope
jecxz
pop
push
jnp
cmpb
dec
out
mov
rcll
bound
xor
outsl
add
and
push
mov
dec
xchg
cmp
loopne
pop
xorb
xchg
dec
push
xchg
inc
arpl
lcall
mov
add
testl
into
movsb
jae
xchg
jae
cli
das
mov
xor
lret
pop
and
mov
jo
popa
xchg
mov
sub
pop
sbb
adc
jno
mov
sub
adc
or
push
and
adc
cmpsl
xor
push
and
into
pusha
and
cwtl
mov
test
cmc
fs
stc
push
sbb
add
nop
movsl
sub
das
pop
insb
in
loop
add
ret
shll
adc
mov
jno
fs
sbb
adc
fwait
and
test
test
loope
and
std
add
adc
push
dec
and
add
stc
push
inc
add
movsl
jne
cmp
rep
loope
push
rolb
ja
loopne
jns
and
adc
sbb
xchg
lcall
or
dec
push
loopne
jp
sbb
pop
xchg
mov
lods
xchg
addr16
inc
and
daa
add
jno
loopne
xchg
cmp
test
mov
pop
add
cli
add
add
insb
popa
cmpsl
push
sbb
es
dec
popa
out
outsl
push
xbegin
xor
repz
pop
loope
lock
call
dec
rcll
adc
cmpsb
and
mov
add
add
rorl
dec
icebp
pop
jl
xor
mov
out
jns
xchg
add
lods
enter
nop
or
pop
imul
or
cmc
bound
or
loopne
adc
inc
xchg
call
and
inc
sub
and
aad
jo
jae
sbb
ret
test
lea
ds
data16
subl
jnp
cmp
inc
test
outsl
xchg
rcll
sbb
push
es
adc
insb
xor
push
dec
mov
ret
mov
and
shlb
mov
into
lock
js
add
add
loopne
adcb
mov
jno
and
ret
inc
mov
ret
ret
addr16
add
mov
mov
arpl
add
popf
ret
xor
adc
repz
push
xor
pop
pop
gs
xor
pushf
dec
pop
insl
movsb
loope
jecxz
add
adc
or
inc
test
int3
xchg
inc
fwait
pop
pop
xchg
jb
dec
movsl
out
enter
xor
sbbl
sub
aas
scas
hlt
mov
imul
gs
imul
movsl
mov
add
mov
sbb
cmp
push
and
sub
cltd
mov
jge
push
out
das
mov
inc
in
cmp
lret
aam
push
ror
mov
sarb
push
es
add
insl
clc
or
mov
pop
add
or
fwait
popa
mov
fcoms
imul
push
movsb
xchg
bound
mov
stos
decb
inc
and
or
mov
outsl
and
xor
divb
mov
testl
cld
outsl
insb
sub
faddl
movsb
outsl
pop
add
dec
or
pusha
rcr
pop
or
pop
inc
dec
ret
cltd
inc
push
shll
sub
mov
inc
mov
mov
imul
sbb
sub
sbb
dec
push
lds
mov
dec
jmp
ss
add
rclb
mov
mov
test
cmpsb
add
outsb
dec
mov
ficompl
stc
jge
popf
or
daa
mov
sub
je
push
jo
push
fistl
adc
test
sbb
xor
pop
xchg
pusha
insb
and
push
ret
dec
shll
xorl
cmp
repnz
ss
pusha
jnp
pop
sub
add
ljmp
and
ss
jecxz
jo
jl
mov
es
gs
and
jbe
jle
cmpsl
push
and
xor
aas
dec
les
sbb
fldt
fistpll
addr16
mov
mov
fisttpll
push
cmp
sbb
loopne
push
inc
in
sub
mov
and
je
lea
stos
sub
mov
adc
add
aas
cltd
insb
lods
mov
test
inc
cltd
and
sub
mov
and
sbbl
outsb
push
divb
mov
mov
or
rol
xor
ret
sub
imul
push
bound
test
xchg
cmp
cwtl
pop
adc
sub
adc
xorb
dec
add
gs
adc
clc
loopne
leave
insl
loopne
xor
add
iret
push
push
jecxz
movsb
adc
push
lcall
loop
rorb
imul
mov
imul
outsb
test
pop
je
sahf
pop
add
push
jecxz
mov
mov
pop
push
cmp
xlat
add
jle
bound
dec
add
push
fistps
ss
inc
test
mov
dec
adc
push
les
rorb
movl
nop
sub
xchg
aad
out
fldcw
je
in
pusha
inc
insl
ja
or
call
mov
add
bound
into
out
pop
or
fs
inc
mov
int
mov
cwtl
sbb
or
sbb
sbb
pop
mov
fadds
pusha
and
sub
ret
int
jae
ficomps
add
xor
adc
movsb
lret
pop
call
or
adc
push
cli
or
in
orl
push
dec
and
iret
xor
fnstenv
imul
add
jmp
jb
out
add
pop
dec
rcl
jl
fwait
inc
cmp
stos
jne
in
dec
cwtl
mov
cmp
clc
flds
xor
and
int
sahf
pop
add
push
loope
inc
je
adc
addr16
xchg
cmp
test
mov
lret
or
aam
aad
imul
xor
insl
insb
pop
pop
and
popf
sub
jg
push
push
mov
and
jl
sub
push
mov
mov
out
std
sbb
fcomps
pop
pop
pop
notl
insl
pop
sub
repz
jnp
mov
mov
mov
rorl
movsb
push
sbb
outsb
addb
je
adc
outsb
pop
add
and
rcl
inc
imul
js
pop
inc
iret
mov
pop
add
stos
xchg
xchg
xchg
mov
leave
pop
jnp
insb
mov
insb
push
and
add
add
dec
filds
add
out
loopne
fldl2e
mov
xlat
ficoms
iret
into
es
lret
and
add
mov
fcompl
js
shrb
mov
sub
pop
das
fwait
mov
imul
addl
addr16
sub
popf
mov
fwait
int3
pop
mov
shl
sarl
sub
addr16
mov
jo
sbb
loopne
hlt
rcrb
lods
mov
pushf
and
test
loopne
hlt
cltd
jo
push
mov
inc
mov
mov
and
imul
rcll
ss
imull
dec
inc
inc
mov
mov
mov
loopne
add
xchg
int3
xchg
add
pop
jo
jo
rorb
xchg
lahf
xchg
push
push
dec
dec
lret
lea
mov
push
movsl
or
sbb
daa
mov
sbb
jg
mov
jo
pop
leave
xchg
lods
push
push
cli
add
sub
roll
lret
mov
divl
aad
adc
imull
or
xor
imul
lret
and
jno
mov
and
jne
jle
dec
jmp
and
mov
mov
js
push
jl
adc
adc
insb
push
push
fadd
cmp
lock
sub
sbb
cmc
jmp
or
mov
subl
mov
push
sti
adc
lret
rclb
dec
xor
jecxz
hlt
ret
adcl
loopne
push
pop
rcrb
loopne
sbb
lock
in
cmp
jo
or
in
xor
lods
xor
cmp
xor
lcall
test
in
sbb
adc
sbb
add
aaa
mov
roll
movsb
ss
push
cmpsb
sbbl
fs
in
in
jbe
mov
pop
dec
outsb
push
test
pushf
push
add
pop
das
fs
mov
orb
ja
pop
lods
or
movsl
add
push
mov
in
dec
mov
jg
cmp
inc
imul
pop
and
sarl
add
dec
test
add
mov
sub
xlat
mov
fcmovnb
test
mov
mov
adc
addr16
sub
push
add
popf
nop
pop
inc
scas
pop
mov
push
clc
cli
mov
lahf
jp
push
mov
xchg
subb
roll
mov
inc
test
mov
lea
jo
and
add
inc
cmp
sti
sub
inc
cmpsb
mov
adc
ret
mov
daa
xor
loope
pop
fs
mov
jmp
int
jno
push
lods
imul
push
fisttpll
push
pop
addr16
push
add
lret
pusha
test
xor
loop
sub
push
rcl
pusha
orl
ljmp
addb
sbb
rol
inc
ret
adc
addr16
and
adc
and
adc
push
xchg
inc
mov
and
adc
fcoml
stos
xlat
movsb
mov
push
das
aaa
or
sbb
cmp
in
popa
inc
sar
scas
push
lods
xor
das
iret
nop
and
clc
and
test
sub
fisubrl
adc
jo
adc
mov
mov
rclb
adc
jp
daa
das
push
and
mov
or
add
mov
scas
stos
insl
mov
ja
lcall
push
pop
push
enter
rcrb
ret
xchg
gs
sbb
add
xor
sub
push
sub
and
outsl
js
jo
mov
ja
js
adc
xchg
sbb
dec
and
jle
fnstenv
lods
mov
inc
sub
inc
jg
clc
add
imul
push
cmpl
sbb
es
loopne
rolb
dec
mov
int3
jmp
and
fwait
add
insl
pushf
adc
add
stos
adc
jo
or
aaa
fists
ds
cmc
inc
inc
leave
test
stos
mov
shll
or
ljmp
js
dec
add
sbb
push
lret
jecxz
fstps
sar
push
push
push
sub
imul
jg
sbb
sarb
ss
push
adc
push
lods
cmp
sbb
fisubs
xor
in
mov
push
int3
outsb
sahf
adc
bound
dec
inc
les
xchg
ds
loope
popf
test
iret
repz
out
adc
jbe
pushf
pushw
xor
fs
sub
sysenter
add
sbb
pop
inc
mov
xchg
callw
add
enter
imul
add
in
lds
loop
add
sub
out
xchg
or
sub
inc
mov
sub
loopne
push
mov
or
fistpl
lods
add
add
arpl
sub
ret
popa
or
xor
es
cmc
inc
ja
add
push
bound
popa
xor
add
add
fstpt
sub
es
imul
add
or
test
cmpsl
test
and
scas
loop
test
lods
and
sub
push
insl
mov
les
enter
mov
jae
push
sbb
rclb
pop
sub
ret
pop
std
add
mov
or
add
add
inc
mov
mov
inc
add
ret
pop
sub
nop
sub
shl
es
das
add
push
add
push
es
sbb
cmp
loopne
or
daa
lods
pop
add
sub
out
fsubrs
daa
inc
add
push
add
xchg
xor
dec
out
pop
mov
jecxz
inc
or
dec
pop
add
add
and
mov
popf
xchg
jecxz
jne
add
lods
xor
and
lods
push
mov
add
mov
lahf
push
add
xor
cmc
fcompp
add
mov
push
dec
lods
xchg
flds
adcb
pop
hlt
outsl
add
test
scas
addl
inc
dec
cli
sbb
add
ja
mov
popf
scas
mov
fsubrl
xor
mov
cmpsb
outsl
or
insl
imul
xor
ret
or
pop
mov
inc
js
iret
test
into
cltd
pusha
sub
es
andb
mov
mov
dec
movsb
add
aaa
fiaddl
mov
mov
les
in
and
or
ret
addl
cmp
inc
mov
mov
adc
ljmp
rcr
pcmpgtd
and
stos
imul
test
movsl
jl
adc
and
scas
and
add
mov
or
or
and
mov
roll
push
aaa
inc
mul
adcl
movsb
cmpsb
xchg
rcr
xor
adc
adc
sbb
test
frstor
push
xor
jae
imul
cmp
dec
mov
insl
xor
sub
mov
pop
ret
das
insb
scas
add
adc
xorb
sbb
bound
cltd
jmp
cmc
add
mov
popa
fs
daa
mov
scas
sub
loopne
push
xor
dec
cmpsl
or
add
push
pop
cmp
add
cs
ljmp
push
jns
pop
sub
xor
mov
push
cli
add
push
ja
push
cwtl
adcl
add
das
sbbl
scas
punpckldq
mov
push
mov
add
insl
xor
ljmp
popf
mov
sub
movsb
add
jp
roll
sub
pop
add
mov
push
outsb
inc
daa
roll
sbb
out
add
imul
fiaddl
js
bound
mov
pcmpeqb
stos
sub
mov
inc
sbb
jbe
fstl
push
sub
dec
fnstenv
and
loope
dec
and
jb
lds
dec
adc
sbb
ficoml
dec
hlt
and
iret
stos
add
outsb
push
mov
stos
add
dec
xchg
mov
dec
ret
sub
add
cmp
mov
xchg
fldcw
aam
cs
fidivl
lret
or
sub
fsubrl
adc
push
add
int3
or
lods
and
mov
stos
aaa
push
shlb
adc
rcl
lret
out
outsb
lods
fstl
aam
push
jno
jecxz
sbb
pop
add
jl
xchg
sbb
movsb
fwait
stc
insb
dec
and
push
xchg
shlb
inc
inc
mov
sub
inc
iret
inc
test
das
mov
pop
xor
inc
mov
or
imul
and
mov
js
lods
add
dec
push
into
call
mov
xlat
cmc
mov
add
das
inc
sub
mov
imul
add
push
nop
sub
dec
sbb
or
loope
add
and
sub
call
shl
mov
add
imul
sbb
popa
xchg
testb
mov
sub
jbe
add
xor
aas
fnstsw
cmp
aam
data16
out
cs
pop
lock
movsl
jbe
scas
adc
cli
xchg
inc
out
icebp
andl
and
add
jle
flds
ss
sbb
and
sub
xor
out
sub
mov
test
repz
addl
xor
loop
sub
shrb
mov
test
loopne
pop
mov
sub
mov
sub
adc
xchg
dec
pop
je
add
inc
add
outsb
push
fsubrs
xlat
inc
fisttpll
cli
or
cmp
test
dec
push
orl
pop
jmp
test
xchg
f2xm1
icebp
inc
and
pop
adc
fiadds
sub
es
adc
mov
push
sbb
lods
pop
and
dec
xor
adc
lods
sub
outsb
sub
push
test
dec
roll
es
pop
ret
iret
xor
sub
or
lock
pop
sbb
mov
scas
lods
test
test
bound
sbb
sub
sub
and
movl
jge
sub
aas
add
adc
pop
pop
int3
mov
sbb
jno
cmp
inc
inc
xchg
inc
mov
lock
enter
test
mov
add
roll
adc
and
mov
pop
push
push
bound
push
dec
inc
xchg
je
popa
sbb
push
aaa
dec
adc
xchg
push
into
insb
or
imul
or
lods
or
movsl
mov
mov
push
inc
sub
jb
and
dec
shr
enter
xor
push
push
stos
mov
mov
cltd
lods
adc
cmp
test
adc
push
iret
jp
mov
lods
xchg
push
js
pop
jecxz
jge
or
pop
js
cmp
adc
bound
subb
sub
dec
out
rcrl
ss
dec
pop
and
loope
pop
sbb
or
addl
xor
xor
xor
adc
data16
dec
xor
test
or
and
leave
flds
push
dec
out
jbe
adc
pop
add
iret
add
add
sbb
loopne
arpl
inc
lret
jne
adc
scas
add
mov
and
adc
out
cmp
sub
adc
mov
hlt
push
mov
fdivs
mov
dec
repz
cmp
xor
loopne
addr16
and
xorb
adc
sub
push
push
pop
imul
sub
gs
es
dec
or
cmpsl
push
dec
mov
lock
sbb
add
rcll
sub
add
popa
add
out
scas
shlb
inc
test
inc
rolb
xor
mov
xchg
fistpl
sbb
jo
cmp
add
clc
push
pusha
and
mov
xchg
mov
daa
arpl
ret
js
jne
or
pop
and
xchg
adc
mov
ret
sbb
xchg
rclb
leave
or
sub
and
pop
dec
data16
mov
fbld
pop
fs
push
mov
cmp
js
mov
or
shll
test
pop
movsl
shr
adc
mov
cmp
dec
cmp
xchg
les
pop
cmp
jae
adc
push
or
lahf
jp
jbe
lahf
lock
nop
inc
leave
outsl
test
mov
jle
sbb
adc
xor
int
loopne
sbb
jg
xchg
and
sti
cmp
das
push
popf
test
icebp
sub
mov
daa
lds
cs
addr16
cmp
decb
xor
inc
sub
pushf
movsb
cmpsb
dec
inc
mov
pop
fidivs
sub
inc
sub
fs
mov
aad
pushf
add
punpcklbw
sbb
loopne
sbb
sub
dec
cmp
mov
daa
mov
in
inc
or
mov
push
lahf
add
xchg
add
and
inc
insl
les
imul
sbb
test
jno
js
je
and
ret
jo
loopne
mov
outsb
xorb
xor
in
pop
inc
ret
adc
sub
cmp
orl
mov
adc
std
jecxz
xor
orb
xorb
roll
push
push
mov
lods
inc
cmp
adc
cmp
clc
pop
mov
sbb
dec
and
or
push
mov
sub
enter
and
add
xor
test
push
jo
out
out
mov
mov
leave
xor
clc
and
lret
xchg
lahf
loope
and
add
movsl
in
int
cli
lods
push
adc
addr16
pop
mov
and
daa
adc
dec
fwait
outsl
data16
dec
add
gs
movsb
cmovg
js
ja
faddl
ds
sub
or
loop
add
pop
int3
add
xlat
or
cmc
mov
add
dec
push
imul
inc
xchg
dec
aad
or
cmc
push
ja
sub
lods
loopne
aaa
jo
xor
andb
popa
arpl
arpl
es
es
dec
aas
or
fisttpl
lret
sbb
add
pop
and
shrb
dec
addb
inc
js
xchg
addr16
add
dec
out
add
std
dec
dec
add
inc
mov
or
xlat
or
pushf
and
lahf
and
xchg
and
cmp
inc
mov
in
or
cs
push
fwait
mov
mov
test
or
mov
addr16
iret
outsb
call
stos
fmul
add
and
jo
jge
imul
shl
xor
mov
xchg
dec
pushf
es
xor
add
mov
int
test
stc
je
int3
xor
jne
inc
push
jmp
sub
and
or
scas
ljmp
mov
mov
mov
xchg
iret
cmp
mov
cmc
inc
inc
adc
xor
sbb
test
sbb
xor
xchg
ret
xchg
add
ret
add
and
ret
and
loopne
scas
cmp
ret
test
push
mov
jbe
add
and
and
push
rcrl
aaa
lods
call
lret
iret
shrl
pop
jge
or
lock
push
and
js
leave
jmp
popa
xchg
int3
test
adcb
jle
lock
hlt
sub
js
pusha
out
out
jmp
mov
shrl
and
inc
and
mov
inc
jge
pop
aas
aad
push
and
push
inc
or
xor
shrl
and
imul
fstpt
ret
cmp
push
pop
jg
inc
test
pop
enter
mov
jmp
movsl
lahf
idiv
push
cltd
mov
addr16
lea
mov
xchg
cmpl
fmuls
cmp
dec
jbe
ss
sbb
jo
push
mov
xchg
sub
mov
add
arpl
pop
jg
mov
adc
or
daa
or
mov
adc
adc
js
repz
gs
jns
loop
adc
and
mov
cmc
pushf
xlat
rorb
arpl
sub
loop
gs
subb
test
enter
cmp
cmpsl
mov
cld
loop
iret
mov
adc
jno
pop
dec
insb
add
imul
sbb
sub
cs
test
mov
adc
or
pop
mov
adcb
int3
add
mov
adc
int3
jbe
sbbb
pop
xchg
pop
sbb
xor
xorb
les
dec
in
cmp
sub
cmpsl
push
xchg
push
push
inc
mov
fdivrs
dec
ss
sarb
mov
mov
sbb
aam
mov
cmp
cmp
pop
inc
xor
or
je
sub
jecxz
push
push
ret
push
ja
add
aad
push
adc
loop
dec
fldcw
loop
aam
ret
dec
outsl
push
into
clc
xchg
mov
fmull
and
insb
loope
lea
inc
sub
xor
push
inc
push
mov
fildl
push
dec
xor
mov
sbb
push
mov
xchg
int
and
lret
movsl
jo
gs
adc
je
sarl
icebp
dec
inc
sbb
mov
add
or
or
xchg
pop
push
loope
pusha
and
push
pop
fmulp
jae
faddl
mov
inc
int
pusha
ss
popa
push
imul
xor
mov
cli
add
dec
cmp
push
jo,pt
daa
push
inc
push
xchg
fstpt
cmp
je
movsl
rcrb
fsubl
and
or
lods
jo
adc
push
mov
mov
adc
push
cmp
in
mov
push
pusha
test
pop
inc
push
pop
jno
jne
loopne
and
fadd
pusha
daa
add
or
daa
mov
xor
mov
push
es
ljmp
or
iret
sbb
icebp
adc
iret
mov
jnp
dec
rcrl
testb
pop
jns
xlat
cmp
sub
adc
sahf
pushf
ljmp
sbb
ja
mov
cwtl
in
sub
and
lds
movsl
xchg
test
loopne
test
mov
add
and
lods
cmpsb
je
jb
push
dec
dec
mov
pop
ljmp
iret
stos
icebp
ret
dec
mov
add
xor
lret
sbb
mov
aam
lods
test
ljmp
pop
push
aaa
xchg
aaa
clc
adc
adc
flds
rclb
rcr
pop
pop
add
ljmp
lock
add
sbb
js
pop
sub
cmpsl
sub
into
shlb
hlt
pop
mov
add
and
sub
ret
int
mov
rolb
mov
add
push
xor
lods
sbb
pop
out
in
add
pop
daa
and
sub
push
mov
daa
mov
and
movsb
or
cmpb
jmp
mov
adcl
mov
push
mov
push
lret
add
mov
xchg
adc
rcl
xchg
pusha
call
movsb
mov
push
dec
stos
js
test
add
popf
xchg
adc
add
dec
or
aaa
push
sub
add
data16
push
xor
and
movsl
sub
test
lods
movsb
loope
xchg
add
pop
or
loopne
fistpl
adc
imul
add
sahf
lods
movsb
xchg
in
add
adc
and
ja
push
xor
mov
into
enter
or
mov
inc
sti
loope
or
movb
pop
sub
add
pop
adc
jne
divb
push
and
jno
xor
add
mov
in
dec
pop
dec
arpl
xchg
xor
fwait
add
pusha
xchg
xor
sbb
adc
or
loope
add
mov
jno
push
rcr
cmp
loope
and
adc
das
mov
dec
xchg
mov
popa
push
sarb
dec
pop
pop
sub
movb
pop
and
ja
and
cmp
das
dec
and
push
repz
fldt
loope
jae
mov
pop
push
dec
enter
inc
xchg
xchg
negb
lea
cwtl
cmc
je
push
inc
loope
dec
daa
imul
pop
jbe
xchg
sbb
push
pusha
movsl
or
lea
mov
test
cmp
test
pushf
sbb
addr16
xor
mov
push
mov
dec
lahf
addr16
popa
push
sti
mov
mov
jle
and
in
add
mov
jno
xchg
or
sbb
push
mov
loope
popl
and
stos
jbe
push
or
sub
das
mov
fcoms
dec
addr16
and
imul
mov
mov
mov
dec
mov
test
push
pop
jmp
cmp
xor
add
pop
test
jnp
xor
fdivrs
call
ljmp
movsl
fisttps
and
int
cmp
mov
adc
divb
bound
insb
and
jmp
xchg
mov
movsl
mov
jp
or
or
cs
sbb
mov
aas
adc
or
sub
and
xor
mov
jg
xchg
fdivl
dec
push
mov
xchg
adcl
fcoml
fimull
mov
inc
call
push
shrb
sub
jl
xchg
mov
sahf
and
mov
sbb
aam
addb
loope
es
add
rolb
add
cmp
mov
jbe
mov
and
jge
js
push
js
outsl
test
lods
in
test
lea
sbb
sbb
lret
xor
pop
dec
nop
adc
inc
leave
xlat
aad
mov
dec
lods
pusha
xor
add
or
cmp
xorl
sub
out
add
pop
push
push
icebp
push
int3
add
lock
mov
lock
add
andl
add
cmp
push
pop
sbb
addb
inc
inc
loopne
jg
mov
das
and
pop
notl
mov
pop
cmpsb
nop
mov
push
inc
cmp
inc
pop
and
scas
adc
fdivrl
add
scas
fnstsw
jecxz
xor
sbb
loopne
cmp
jle
dec
sub
aas
and
add
lret
enter
ret
dec
push
js
sbb
dec
les
pop
jmp
mov
push
roll
shlb
aas
push
pop
add
sub
dec
les
adc
mov
repnz
or
fisubl
fstps
cwtl
inc
add
adc
fiaddl
int3
dec
les
xor
inc
fstl
icebp
adc
xchg
sbb
pop
xor
fcomps
and
sahf
pop
mov
push
aaa
jo
xor
push
xchg
icebp
and
pop
fisttpl
sbb
jae
ret
add
lods
ret
js
sub
mov
pop
jg
mov
inc
mov
push
add
xchg
add
sahf
mov
cmpsl
push
js
add
lds
ss
adc
mov
mov
jo
add
xorb
mov
rcr
jle
lods
adc
fs
mov
push
jecxz
or
daa
adc
inc
in
jl
clc
xor
xchg
dec
in
sbb
das
add
and
sbb
inc
or
hlt
addb
aad
arpl
push
out
mov
shlb
hlt
cmp
xor
or
lahf
loop
xor
sub
lds
and
subb
mov
mov
push
ret
mov
inc
xchg
mov
and
add
daa
or
push
and
xor
adc
pusha
xchg
sti
mov
stos
mov
mov
mov
jae
or
push
movsl
fiadds
jecxz
pop
cmp
out
adc
and
add
push
xchg
out
add
das
int3
add
or
pop
jbe
push
mov
adc
push
adc
pop
jl
pop
mov
cmp
or
xchg
fcmovne
mov
add
or
ret
mov
push
cmp
js
add
and
seta
lret
mov
or
stos
cs
add
sbb
inc
call
inc
xor
mov
or
add
cmc
sub
jae,pn
out
mov
pop
ret
inc
push
inc
xchg
ss
fwait
stos
shlb
shl
jo
and
test
fsubrs
add
mov
loope
pop
rolb
cmp
lds
lret
sub
fisubl
and
xor
push
push
push
pop
lods
iret
rcrb
or
sahf
arpl
into
rolb
add
xchg
ss
xlat
aad
add
sbb
pusha
insb
jne
sub
inc
jae
das
pop
les
cs
adc
lea
add
mov
cmpsl
and
mov
ss
bound
in
scas
aaa
adc
inc
sub
mov
insl
je
push
mov
adc
xor
or
cs
lret
rolb
xchg
lret
sbb
js
into
xor
popf
ss
xor
movsl
mov
jge
fiadds
lods
dec
push
xor
pusha
cmp
icebp
jge
add
mov
or
jmp
js
das
mov
popf
or
add
sbb
cmpsb
repz
jnp
fs
add
inc
adc
xor
cmp
jns
add
sbb
sub
shlb
jno
fidivs
push
fwait
dec
jo
push
mov
shr
outsb
cmp
jo
js
jb
rorl
or
mov
bnd
mov
lret
dec
loope
dec
or
jae
xchg
xor
or
nop
add
arpl
cmp
cmp
pcmpeqd
jb
or
add
add
mov
xor
cmp
sbb
scas
cmp
inc
jg
es
outsl
rorb
bound
lods
mov
inc
shll
sti
xchg
outsl
pop
jbe
and
nop
jmp
clc
mov
mov
adcl
inc
aaa
xchg
pop
xchg
pop
stos
dec
sbb
push
fwait
sub
les
rcrb
popf
icebp
lds
add
or
sbb
ss
lcall
stos
xlat
cmc
das
das
pop
aad
xchg
sub
outsl
adc
addr16
push
or
in
roll
jnp
xchg
cmp
pop
lret
dec
loopne
sbb
decb
cmp
fildll
mov
sbb
xor
jns
add
std
add
push
push
sbb
pusha
das
cmp
inc
xchg
adc
cmp
push
movsb
xor
sub
fistpl
test
pop
xchg
and
push
mov
insb
add
pop
cmp
fadds
push
push
push
pop
push
push
cmp
int3
add
pop
and
dec
add
inc
adc
xor
or
pop
and
ja
dec
and
in
and
adc
addb
inc
dec
xor
or
and
add
stos
mov
xchg
loopne
jnp
sub
sub
mov
iret
or
sbb
ret
xor
sbb
inc
sbb
jmp
add
cmpsb
inc
daa
xor
xor
fsubs
xchg
popf
xor
popl
js
xchg
add
jns
or
xor
add
add
cmovo
push
adc
fwait
and
pusha
sbb
and
in
xor
sbb
and
push
or
mov
jge
cmp
add
jg
jle
and
arpl
out
repnz
adc
xchg
push
and
inc
cmpb
and
or
mov
int3
inc
popa
xchg
cmp
mov
mov
xchg
jecxz
cmp
arpl
pop
ss
fwait
and
mov
movsb
jg
mov
jg
popa
gs
arpl
mov
test
add
clc
add
push
inc
lret
lods
mov
ret
mov
or
xchg
adc
lds
ss
adc
lahf
test
pop
fidivrs
out
mov
or
pop
and
inc
rcrb
punpcklbw
decl
std
loope
addb
mov
jnp
lods
call
push
jnp
jl
push
add
repnz
jnp
mov
adc
mov
pop
lret
push
xchg
push
repnz
das
aaa
lods
scas
or
sub
and
add
mov
mov
aam
dec
jae
mov
jae
sub
ljmp
pop
lret
aas
inc
inc
ficoml
add
xor
or
xor
mov
movsb
sub
push
jp
mov
jl
cmp
push
or
mov
icebp
jbe
divl
repz
lock
cmpsl
sbb
cmp
arpl
cwtl
popa
pop
and
dec
xor
xor
subl
mov
dec
inc
pop
repz
cwtl
nop
fnsave
sub
fnstenv
lods
or
pop
xchg
and
or
sub
daa
push
insb
lret
nop
push
ja
roll
outsb
insl
lahf
loopne
gs
mov
es
lret
ss
dec
adc
insl
and
cmc
in
test
lret
inc
scas
das
add
ret
push
push
jno
and
test
out
push
sub
pop
pop
dec
adc
adc
sbb
cmp
adc
jmp
add
push
sbb
movsb
add
jae
dec
shll
aas
push
aam
test
push
je
dec
shl
ret
push
adc
mov
mov
test
movsb
jo
dec
mov
jle
add
fisubrs
test
add
inc
xor
pop
mov
movsl
jp
mov
adc
imul
xchg
push
mov
fiaddl
lds
test
scas
bound
aaa
add
movsb
cmc
xchg
fcomp
test
dec
inc
sbb
and
fs
push
inc
push
ret
mov
mov
sbb
es
cmpsl
mov
xchg
inc
mov
cmp
test
sub
pop
fwait
xor
inc
jg
mov
mov
popa
outsb
shrd
mov
or
sub
stc
mov
jne
push
shrb
mov
inc
test
add
adc
or
xchg
imul
cmp
lret
mov
inc
aas
cmp
dec
in
sbbb
sbb
and
test
jl
lahf
aaa
sub
inc
pusha
aad
pop
outsb
iret
aam
xor
push
xor
lock
mov
call
mov
jl
cmc
sub
or
push
mov
mov
lods
sbb
inc
jmp
dec
jmp
and
in
and
lahf
dec
daa
mov
pop
inc
push
stos
xor
pusha
movsb
rcrl
scas
cmp
sub
mov
push
cmp
mov
arpl
test
dec
jne
xor
inc
cmp
xchg
dec
sub
mov
or
repz
cmp
adc
aas
loope
sbb
pop
and
lods
xlat
sub
push
dec
lret
adc
int3
repz
xchg
fldlg2
xchg
push
inc
leave
pop
pop
or
ljmp
pushf
js
addr16
or
and
into
ljmp
mov
lods
mov
and
and
imul
or
call
push
aas
add
dec
call
sub
adc
clc
adcl
les
shll
in
adc
sbb
mov
push
sub
jecxz
mov
mov
and
push
or
sub
sub
adc
cwtl
hlt
pop
scas
sub
subb
inc
pushf
mov
call
ret
adc
jl
loope
popa
xchg
pop
lods
sbb
nop
scas
push
and
pop
or
scas
shll
mov
mov
or
sbb
xchg
movsb
fnstenv
cmp
imul
pop
xorl
rol
xchg
mov
test
addb
mov
les
xchg
push
or
test
inc
pop
loop
divl
pop
lods
and
sahf
daa
add
pop
inc
ret
mov
and
mov
in
inc
loop
add
daa
mov
push
sbb
lahf
gs
outsl
sub
mov
push
dec
and
jnp
fistpll
mov
mov
or
clts
sbb
mov
inc
cmp
mov
add
scas
sub
push
jne
pop
jmp
lret
pop
push
cmpsl
mov
sbb
test
testl
lock
jnp
dec
ja
jbe
mov
cmpsl
inc
lock
pop
lahf
and
push
lea
or
and
cmp
push
or
jno
jecxz
adc
inc
jl
lret
into
jno
pinsrw
sub
arpl
push
sbb
in
test
or
add
inc
xorl
inc
scas
into
jno
mov
add
and
pop
push
add
pop
icebp
add
ret
xor
jb
and
xor
add
xchg
push
imul
outsl
and
push
lods
cmp
add
and
dec
sbb
cltd
inc
adc
sbb
mov
shll
bound
testb
aam
out
pop
cmpsl
add
sub
iret
mov
pop
xor
dec
sub
add
dec
out
mov
dec
adc
insl
lds
js
sub
call
orl
jmp
int
dec
or
or
ljmp
lds
dec
mov
and
inc
xor
rcr
subb
roll
js
into
gs
pop
mov
jmp
es
pop
jle
jmp
cmc
add
cmp
dec
or
sbb
sub
es
adc
add
add
xor
rcrb
shl
je
cld
dec
dec
xorl
sbb
mov
cvtps2pd
es
andl
dec
adcb
sbb
and
in
cmp
fsubrl
dec
cltd
inc
mov
dec
add
mov
or
outsb
cmp
cmp
push
jne
mov
pop
inc
mov
push
mov
test
ret
cmp
stos
das
xchg
cwtl
shlb
inc
pop
addr16
mov
mov
inc
aas
test
inc
or
and
jg
jnp
push
aam
ja
addb
andb
push
cmpsl
add
inc
enter
enter
cmp
ds
add
mov
lret
cmp
mov
test
sbb
loope
mov
push
jno
loop
aad
ficomps
pop
std
and
in
pop
outsb
add
jno
sub
in
jns
dec
or
imul
adc
je
adc
popf
mov
jbe
cmp
div
or
test
push
inc
inc
hlt
popa
and
jle
data16
push
aad
call
push
mov
xchg
imul
lods
xchg
xlat
icebp
jb
pop
add
cs
inc
sbb
fadds
push
gs
mov
adc
les
vxorps
fwait
sub
inc
add
shrl
mov
test
test
fsts
inc
ds
mov
pusha
loop
test
popa
into
aam
add
cli
lret
push
loope
push
addl
rcrb
std
adc
mov
mov
push
adc
sahf
dec
inc
test
cwtl
add
sbb
aas
lcall
cltd
pusha
ficompl
rorb
sub
dec
xchg
pusha
into
lea
cmp
leave
mov
inc
dec
aam
adc
sub
jge
call
or
or
push
pusha
loopne
or
dec
cmp
repz
loopne
test
mov
into
sub
mov
push
mov
jbe
leave
mov
add
sub
pop
xorb
or
rolb
inc
adc
xchg
out
loopne
mov
push
pop
test
sbb
loop
pusha
inc
jo
adc
mov
jb
mov
sahf
popa
insl
pop
push
insl
mov
mov
xchg
jnp
jne
daa
popa
scas
add
aam
cld
das
adc
cmp
lea
adc
mov
pushl
or
xor
imul
rclb
andl
or
pusha
add
fmulp
jg
lods
add
push
lds
push
xor
inc
jmp
push
dec
mov
pop
cmp
xchg
mov
xor
adc
arpl
adc
je
or
adc
mov
or
loop
out
or
movsb
add
jl
add
dec
cmp
gs
adc
dec
xor
mov
push
xchg
mov
sbb
lret
adc
cs
add
enter
mov
xchg
push
mov
pop
or
or
push
inc
movaps
xor
shrl
pop
pushf
push
sub
sub
loopne
popa
mov
fxtract
fisttpll
orl
jecxz
push
inc
fwait
sbbb
lea
nop
cmpl
xchg
mov
test
mov
sub
dec
cmp
fisttpll
sbb
dec
sub
or
mov
push
push
add
repz
fidivrs
les
and
add
fxch
or
ret
push
ja
imul
add
aam
movsb
das
and
cmc
add
test
ret
mov
imul
mov
lock
xchg
je
gs
dec
push
sbb
lock
fstpl
xchg
push
nop
dec
pop
ret
call
out
in
dec
add
ret
pop
leave
mov
dec
ret
in
jl
xor
int
xchg
pop
pop
inc
cmp
add
add
push
add
mov
sbb
jo
lahf
dec
pusha
add
adc
ret
mov
pusha
or
mov
sahf
test
loop
nop
dec
mov
cmp
pusha
or
pop
hlt
add
sbb
and
je
or
pushf
mov
rol
fs
xchg
repnz
sbb
das
sub
pop
int3
jne
sbb
xor
adc
cs
mov
pop
std
mov
test
and
pusha
add
xor
add
sbb
sbb
ja
dec
cwtl
xchg
cli
gs
xor
aam
mulb
dec
gs
lods
test
addr16
loopne
inc
mov
or
add
and
fcmovne
and
aaa
jge
aaa
addb
lahf
movsl
imul
clc
add
pop
add
sbb
mov
xor
scas
shl
add
jnp
fwait
xor
fstps
cmp
push
fsubrl
or
scas
in
mov
ficoml
test
ret
maskmovq
push
bound
pusha
gs
or
mov
and
fldenv
add
inc
les
add
fsts
pop
mov
out
aam
adc
pusha
mov
jecxz
sbb
out
adcl
lds
jecxz
into
xor
test
and
xor
mov
jb
add
cs
daa
daa
mov
clc
mov
sub
lods
push
or
pop
adc
jns
sub
mov
leave
cmp
xchg
rclb
ljmp
pop
and
push
ret
sub
and
push
dec
daa
xchg
xchg
les
repnz
push
add
dec
sub
adcb
mull
outsb
push
inc
cmc
je
dec
xchg
adc
movsl
mov
imul
push
cmp
dec
test
inc
nop
leave
cmp
fs
icebp
add
push
or
or
dec
lret
add
daa
rorl
xlat
or
cmpsl
mov
loope
mov
xchg
sti
push
test
aam
sbb
ret
mov
adc
xor
packsswb
dec
sbb
dec
and
aaa
push
cmp
les
xchg
and
push
nop
mov
orl
mov
out
mov
dec
ss
add
xor
mov
shl
sub
ret
pop
rorl
lods
lret
icebp
xchg
ret
xor
push
les
dec
mov
or
rolb
arpl
add
inc
jne
das
mov
por
adc
test
xchg
popa
sbb
or
jo
in
cs
mull
mov
inc
cmc
mov
pop
aad
andl
or
in
mov
cmpsl
mov
loop
adc
or
pusha
or
or
mov
movsl
lock
jnp
cmc
xor
inc
shll
and
mov
add
push
aaa
mov
shlb
loope
push
xor
jmp
push
imul
xlat
imul
cmc
push
test
xchg
pop
pop
inc
mov
push
xchg
inc
xchg
xlat
dec
cltd
jo
dec
into
xor
loopne
pop
mov
loopne
xor
hlt
mov
call
xchg
test
push
es
loopne
jnp
lods
pop
adc
jbe
sbb
rolb
lret
les
rolb
hlt
fcoml
iret
test
ret
and
ljmp
or
sbb
sub
dec
add
aam
mov
inc
testb
pop
sub
adc
xchg
fs
cmp
push
add
bound
add
or
mov
shlb
push
lcall
andb
cwtl
aam
pop
pop
movl
or
or
push
sbb
lods
in
pop
dec
cmp
xor
and
sbb
insl
and
aaa
cmp
or
pop
shll
js
xchg
xchg
jl
adc
inc
or
ret
xchg
pop
sub
lcall
adc
lret
loope
addl
mov
pop
addb
pop
gs
mov
push
mov
loop
daa
add
mov
mov
scas
or
fcomip
es
dec
mov
loope
and
cmpsb
mov
es
pop
shl
add
out
or
fs
adc
pop
mov
roll
lret
test
fdivl
push
mov
movsb
mov
or
jbe
xor
hlt
sub
into
scas
cmp
jge
mov
push
or
lea
jl
in
jnp
cmp
pop
les
dec
mov
insl
icebp
inc
push
add
sub
push
xchg
dec
jmp
or
fcompl
mov
lods
cs
or
ret
inc
test
xor
add
mov
and
mov
jle
dec
add
dec
push
mov
jmp
jae
mov
imul
jno
mov
add
add
inc
pop
adc
jecxz
add
loope
push
les
mov
scas
ret
and
mov
fstpl
and
pop
push
popf
xlat
loopne
push
loopne
sbb
adc
jnp
orb
adc
addr16
testl
insb
rorl
popf
test
lock
pop
mov
and
adc
popa
xor
arpl
fldenv
int3
add
pop
aaa
or
and
ret
or
mov
or
mov
add
adc
pop
aad
or
pop
and
pop
add
sub
push
xchg
testl
push
pusha
test
push
mov
mov
test
or
push
lahf
sbb
test
dec
push
dec
out
lretw
icebp
sub
inc
out
daa
orl
add
add
sub
fimull
int
or
lret
add
mov
rolb
pop
xor
pusha
cmp
cmc
mov
dec
mov
je
or
std
cmpsb
test
popa
adc
xchg
arpl
jno
or
xor
mov
mov
icebp
imul
sbb
insb
fwait
inc
pusha
shrl
pop
dec
sbb
mov
adc
mov
xchg
notb
jo
test
and
or
xor
mov
jae
cmpl
dec
pop
out
fs
adc
imul
popa
inc
or
repnz
and
mov
mov
inc
mov
cli
lahf
into
lret
lea
mov
mov
mov
add
imul
or
outsb
fwait
cmp
mov
push
add
stos
add
mov
mov
adc
jge
push
and
shll
stc
les
or
sub
and
je
arpl
pushf
pop
cmp
or
add
push
dec
imul
push
fidivs
xor
and
sbb
push
test
dec
pop
or
dec
daa
mov
shrl
sbb
cmpsb
push
xor
cmpsb
pushf
and
dec
aaa
adc
fsubrs
push
push
mov
pop
aaa
pusha
gs
aad
dec
jge
mov
bound
inc
shlb
fwait
cmp
test
outsl
sbb
xorl
xorb
test
cmpb
mov
sahf
imul
and
outsl
loopne
repnz
cli
and
cs
add
mov
adc
add
cmp
testb
gs
adc
xor
test
mov
add
inc
gs
rolb
mov
add
cmpsl
pop
jp
out
popa
jle
sbb
push
fs
ss
mov
push
add
fwait
or
dec
nop
shl
fadd
lret
push
sub
sbb
mov
pop
inc
add
jmp
xchg
xor
pop
mov
pop
shrb
fiadds
ss
test
rcl
sbb
cs
in
sbb
btr
addr16
or
pop
add
xchg
adc
lods
add
sbb
pop
add
es
xchg
mov
or
xchg
mov
adc
mov
std
sbb
mov
sbb
imul
mov
push
mov
jl
mov
add
cmpsl
dec
xchg
push
les
mov
push
ja
dec
das
lret
jo
xchg
cld
push
cltd
mov
pushf
in
push
adc
ljmp
es
and
pop
ret
sarl
outsb
inc
mov
sbb
cmc
mov
pop
jecxz
pop
aaa
loopne
mov
enter
sti
fidivrl
scas
into
xchg
clc
and
sbb
cmp
xor
push
jae
aaa
loope
add
dec
pushf
pushf
inc
sbb
adc
js
repnz
call
imul
pusha
fwait
idivl
inc
dec
iret
adc
dec
orb
fwait
sahf
ret
inc
add
sbb
icebp
or
dec
mov
adc
sub
and
adc
push
sbb
dec
mov
or
push
das
cmpsb
xchg
sub
lods
in
push
dec
adc
bound
lods
imul
xor
in
add
xor
sbb
jmp
xor
push
xchg
iret
cmc
test
xchg
scas
shrb
outsl
fildl
ds
icebp
push
out
dec
adc
inc
lret
adc
inc
inc
nop
adc
pop
ja
es
iret
xchg
and
fildl
mov
dec
add
icebp
cmp
imul
pop
inc
sub
sub
mov
out
pop
cltd
out
adc
or
and
sahf
nop
cmpsl
stos
xchg
movsl
add
pop
clc
mov
push
xchg
mov
inc
lock
push
scas
iret
mov
xchg
mov
xlat
mov
cld
arpl
es
mov
sub
adc
sub
dec
jle
sbb
adc
xchg
mov
pop
mov
xor
mov
inc
call
and
aas
lret
cmp
out
sbb
dec
push
inc
jle
idivb
jnp
and
out
jnp
jbe
xor
mov
pop
mov
xor
inc
cmp
insl
sub
pop
xorb
adc
adc
aad
aas
add
xchg
ret
pusha
lds
sub
add
and
push
jle
mov
pop
add
es
xor
nop
adc
dec
in
dec
leave
push
bound
mov
adc
ret
or
sub
sbb
xchg
jecxz
mov
lahf
cs
pop
out
aaa
adc
ret
adc
testl
hlt
push
adc
sbb
addl
sar
sbb
ss
push
popf
fwait
xor
or
inc
dec
push
jle
daa
mov
jo
hlt
shl
popa
jg
insl
imul
xchg
mov
and
inc
mov
aaa
loope
push
sub
shr
int3
and
adc
push
add
jp
mov
dec
loopne
push
bound
adc
push
lret
dec
and
js
push
xchg
xchg
push
aas
mov
add
sti
xor
inc
fstpl
movsb
fbld
mov
mov
xchg
xchg
or
ret
pop
xchg
loop
sbb
dec
push
sub
xchg
orl
mov
in
mov
leave
imul
out
add
jae
sahf
rorb
sbb
fnstcw
ret
out
lcall
add
pop
jb
jno
dec
sub
pop
mov
iret
insl
mov
subb
push
jae
fnsave
lret
cli
sbb
mov
push
loope
dec
and
and
shrb
or
and
mov
je
lret
cmp
sbbl
test
jl
cmpsl
shlb
cmp
or
loop
cmpsb
out
xchg
mov
call
push
push
daa
xor
or
xchg
cmp
jmp
add
fsubs
inc
push
xchg
aaa
sub
or
das
sbb
adc
sbb
je
adc
clc
popf
movl
or
out
stos
call
mov
sub
fs
clc
lret
add
push
push
repnz
xor
cwtl
adc
push
aaa
or
cld
xlat
adc
jb
pop
jp
add
or
xor
sub
or
ja
add
xor
mov
call
pop
lock
xor
les
push
and
rolb
sbb
and
lahf
arpl
into
adc
cmp
xor
fs
je
xchg
lock
clc
rorb
dec
sub
fwait
dec
shl
mov
fisttpll
add
fcomip
add
lods
hlt
cld
icebp
cmp
pusha
bound
or
pop
dec
js
push
into
out
stos
or
es
push
pop
clc
out
sub
ss
fiaddl
or
in
out
not
xor
les
es
loopne
clc
and
mov
ss
jmp
or
xor
sub
or
mull
shlb
add
clc
and
jmp
lods
out
imull
xor
imulb
sbb
pop
test
cli
mov
mov
sub
dec
icebp
dec
lock
repnz
out
jecxz
lods
shlb
dec
add
ret
dec
and
dec
mov
push
out
pusha
pop
dec
arpl
incl
sub
xor
xchg
shl
and
push
mov
repz
enter
xchg
lea
pusha
jmp
enter
test
inc
xchg
xchg
ret
push
hlt
outsb
pop
mov
das
sub
jbe
xor
adc
mull
pop
sub
ficoml
or
in
sub
testl
cmpsb
push
add
push
imul
add
xor
xchg
cwtl
mov
cmp
insl
fimuls
les
lds
fsubrp
xor
cmp
and
or
popa
pop
ja
lods
lods
sbb
sub
xor
sub
mov
dec
adc
sbb
or
push
in
jns
aaa
int
jne
xchg
movsb
xchg
mov
mov
dec
push
ret
pop
jle
xchg
test
ss
add
aas
int3
lock
cmpsl
push
daa
add
stos
cmpsb
add
cltd
cmp
adcb
movnti
inc
and
mov
out
imulb
shl
add
add
mull
add
jo
stos
mov
lock
push
lret
out
jmp
mov
popf
js
push
mov
xor
xor
mov
mov
push
push
stc
push
pop
and
xor
aad
inc
and
xchg
ja
adc
fstps
clc
sub
int
popa
or
jne
clc
xchg
xchg
das
imul
rorb
loopne
sahf
fistpll
popa
out
enter
mov
lcall
test
movsb
pop
test
popf
dec
fdivr
inc
mov
mov
fucomi
cmp
xlat
dec
add
decb
inc
push
ds
enter
xchg
add
outsl
xchg
enter
cmc
filds
xchg
lret
sbb
xchg
sbb
pop
mov
mov
lahf
scas
add
sbb
add
sbb
cmp
ror
cmp
aam
fs
push
or
cmovge
mov
adc
getsec
jl
insb
mov
testl
sarb
addr16
out
xor
fdivrl
mov
dec
push
jo
jno
lods
cmp
sub
jge
sbb
mov
add
pop
xor
into
xor
jno
push
insb
and
pop
adc
adc
cmc
pop
inc
lret
xchg
les
mov
and
inc
ficoms
sarl
dec
mov
addr16
or
or
jne
orb
push
js
lock
out
lea
into
add
into
popf
sbbb
xchg
arpl
rolb
jp
push
push
insb
cmc
xchg
mov
or
icebp
lods
faddp
add
and
pop
dec
mov
add
cmp
pop
adc
inc
cmp
loope
inc
cmpsl
mov
adc
pop
jle
out
pop
fwait
inc
xor
out
xor
mov
add
mov
loopne
sub
insb
cltd
cmp
jmp
xlat
jg
inc
rcrl
add
dec
xchg
insl
xor
sbb
sbb
mov
xchg
mov
pop
xor
dec
xchg
jae
sbb
cmpsl
insb
mov
mov
loopne
in
mov
xchg
ljmp
call
out
fsubl
js
rclb
xlat
jns
sbb
and
mov
pusha
cmp
inc
pusha
cmp
outsb
sub
ljmp
add
push
add
aas
mov
ret
xor
cld
mov
inc
hlt
xchg
in
adc
sbb
xchg
sbb
xchg
loope
pop
pop
insl
test
inc
xchg
sub
add
sub
adc
addr16
dec
cmp
das
in
mov
jnp
mov
das
or
dec
movl
in
mov
pop
cmp
mov
pop
call
and
lret
dec
shlb
jge
test
mov
push
ljmp
fldt
js
sahf
les
mov
add
add
adc
lret
inc
cmp
push
mov
in
lods
or
add
lret
fistps
repnz
les
jmp
adc
mov
dec
add
sbb
aam
in
add
add
inc
dec
pop
idivl
xor
mov
add
mov
push
xchg
stos
push
out
int
xor
es
adc
call
test
and
mov
pop
mov
cmp
or
lds
js
push
xchg
insb
test
pusha
shr
xor
test
xor
adc
pop
out
push
mov
push
je
loop
addl
fsubs
jp
cmp
or
dec
shl
add
scas
mov
out
jae
mov
or
add
sub
inc
and
loopne
rol
repz
cmpsb
cwtl
push
xchg
negl
sbb
add
xor
adc
arpl
inc
orb
roll
into
aaa
in
aaa
xchg
rol
or
and
jnp
xor
addr16
dec
sbb
add
xorl
mov
in
adc
xchg
sbb
inc
sbb
lret
cmp
adc
sub
ret
inc
mov
rclb
popa
sarb
in
mov
jno
arpl
xor
aad
sub
pop
jb
cmp
aad
lods
lds
aas
aad
aad
aam
out
xor
jecxz
adc
mov
in
lahf
adc
lahf
loopne
outsl
pop
push
shrb
js
inc
lahf
cmpsl
mov
iret
sub
in
ret
adc
in
adc
add
inc
add
rcrb
lds
and
imul
insl
pop
add
cmp
aas
mov
loope
stos
mov
dec
xor
fucomp
roll
dec
loop
sub
aas
xchg
fistpl
adc
rclb
adc
and
jno
test
or
in
test
in
iret
loope
mov
jecxz
ret
sbb
fimull
inc
and
push
mov
xchg
push
popa
add
dec
mov
add
cmp
mul
cmp
sbb
adc
cld
ja
pop
xchg
lods
push
bts
mov
add
xchg
pop
xchg
outsl
shll
test
push
sub
mov
cmp
push
mov
cmpsl
aad
mov
stc
sbb
aaa
out
mov
pop
movsl
fidivrs
call
aaa
and
add
xor
adc
or
shll
incl
push
movsb
repz
jo
and
fidivrl
xchg
or
mov
ret
add
dec
inc
push
icebp
popf
nop
cs
scas
ret
add
pop
out
jo
std
xor
dec
add
lods
cmpsb
xor
je
jns
cmc
pop
test
cmp
lds
leave
mov
int
out
pop
cmp
fsubr
add
cmc
add
jecxz
fs
cmpsb
pop
and
imul
add
psubb
mov
mov
lock
scas
push
push
mov
push
imul
sub
sbb
push
jmp
pop
adc
imul
push
mov
xor
xchg
mov
dec
clc
sub
lods
clc
sbb
dec
and
and
cs
popa
das
movsb
cli
mov
mov
movsl
sbb
mov
in
adc
jmp
mov
mov
xor
fwait
addb
mov
sti
jle
push
repz
jns
in
neg
arpl
in
adcl
out
shl
shr
mov
sbb
xor
mov
dec
inc
je
das
mov
push
push
sub
imul
leave
mov
push
push
add
in
jl
mov
jl
imul
test
xor
scas
flds
mov
rcr
push
loop
sbb
mov
mov
xor
mov
adc
or
push
push
out
jne
call
les
xor
stos
test
xor
xor
push
fistl
cmp
adc
and
int
xchg
push
sub
dec
cmp
adc
imul
lock
adc
cmp
cmp
inc
mov
xor
call
jge
outsb
mov
enter
ret
mov
pop
mov
adc
mov
flds
lahf
insb
and
ficoms
pop
fadd
mov
ljmp
ret
sub
in
jbe
addb
sbb
pop
push
sbb
pop
repz
inc
mov
push
push
cli
and
jne
cmp
lahf
xchg
sub
inc
xlat
lret
mov
xor
loope
sub
xchg
call
sbb
lea
or
movsl
add
orl
pop
into
xor
hlt
inc
imul
jmp
add
loopne
xor
gs
adc
ss
out
sbb
xor
mov
mov
or
out
shlb
movswl
mov
sub
fimull
sub
cmpsl
xchg
cltd
push
cmpsb
push
dec
inc
lock
add
js
jl
cmp
ret
jecxz
stos
sbb
xor
xchg
pusha
lea
lods
cwtl
xchg
fmull
sbb
cmp
cmc
mov
sbbb
clc
add
xchg
xchg
cwtl
aaa
loop
loope
sti
pop
or
xor
mov
push
sub
push
cwtl
es
clc
lock
jge
and
lods
cmp
jp
pop
and
test
rorb
mov
int3
xchg
xorb
popa
adc
cmpsl
or
out
ret
dec
out
decl
clc
ret
push
add
push
sub
loop
sbbl
xor
repz
dec
add
lods
mov
sbb
subl
add
xchg
scas
or
xor
insb
sub
add
jge,pn
mov
into
mov
pop
stos
outsb
inc
fdivrs
ss
push
xor
pop
and
jno
outsb
inc
mov
pop
xchg
ret
mov
rolb
sub
xchg
sub
jp
inc
sub
inc
lods
push
inc
push
cli
lcall
inc
aad
pop
mov
inc
xchg
cmpl
add
rolb
sub
jl
subb
or
mov
mov
andl
movsb
sub
fistl
adc
xor
sub
xchg
outsb
or
cmpsb
pop
adc
mov
mov
sbb
push
ret
dec
clc
fidivrl
lods
and
scas
and
nop
mov
les
xor
arpl
bound
push
xor
push
js
push
cmp
mov
jl
stc
or
dec
sub
enter
imul
iret
aas
adc
and
rorl
adc
mov
shlb
adc
fucomi
inc
sbb
sarl
test
inc
sub
or
sub
lods
out
lock
or
mov
adc
ja
mov
pop
or
mov
popf
popf
push
rcrl
popa
xor
mov
lea
ja
repz
loope
add
push
out
push
dec
cwtl
jl
lret
nop
bound
lock
push
push
adc
sbb
add
adc
cmp
inc
subb
jo
lret
cmp
push
or
out
jae
cmpsl
push
ljmp
shrd
imul
out
xchg
imul
popa
dec
inc
dec
push
push
mov
insb
mov
popa
iret
scas
pop
and
imul
xor
add
ret
inc
pop
xchg
push
movsl
pushf
mov
pop
add
xchg
cmp
or
loope
add
xchg
cmp
dec
rclb
dec
in
adc
sub
call
fstp
inc
and
pop
dec
daa
jmp
jl
mov
lret
sti
outsb
pop
sub
adc
mov
fsub
sarb
inc
popa
aas
cmpsl
add
inc
fnsave
enter
xor
add
cmc
adc
sub
test
in
add
mov
or
fwait
and
pop
fisttpll
rclb
sub
add
sbb
xchg
aad
jb
jmp
cmp
cmp
test
add
popf
adc
xor
rolb
addr16
push
sub
test
mov
andl
sbb
cs
xor
xchg
int
inc
inc
lahf
adc
push
mov
xor
cwtl
or
jb
jo
xor
dec
es
mov
pop
push
xor
jo
fistps
enter
add
imul
push
pop
dec
pop
mov
xor
hlt
add
cmpsl
push
push
scas
nop
pop
stc
xchg
cmp
jne
dec
lock
lret
xchg
jge
dec
jb
xchg
xchg
decl
xchg
xchg
mov
xchg
mov
mov
outsl
testl
imul
cmp
and
sub
push
add
sbb
sbb
js
mov
fwait
imul
xlat
enter
push
jo
inc
adc
dec
and
pop
clc
pop
inc
pop
aas
inc
cltd
adc
test
aas
inc
jp
dec
cmp
xor
gs
add
adc
fbstp
popa
pop
jne
pop
lret
dec
and
mov
jp
mov
adcb
out
dec
mov
and
jle
push
push
or
je
and
adc
shlb
daa
inc
add
jno
mov
dec
and
sbb
xchg
inc
stos
aad
ss
sub
and
jle
sub
dec
lods
and
movb
and
es
fdivl
xchg
and
sub
das
sbb
shll
movsb
insl
in
adcb
lods
rorb
or
jno
leave
mov
sbb
inc
shlb
xchg
xor
loope
repz
pop
das
lea
lods
not
sub
out
divb
stos
xor
adc
in
xlat
out
sub
data16
les
jae
iret
mov
xchg
test
and
inc
add
jns
int
pop
popf
push
adc
movsb
rorl
sbb
push
adc
mov
cmpsb
jo
loopne
aam
pop
push
pusha
vunpcklps
iret
or
mov
call
insl
or
sbb
push
mov
mov
pusha
mov
pushf
mov
cwtl
add
sbb
and
iret
xchg
sbb
mov
inc
scas
adc
xchg
adc
xor
and
lahf
cmp
push
jp
push
pop
mov
push
cmp
negl
imul
scas
fimull
sahf
cmc
cmp
push
notb
sub
push
stc
mov
dec
add
adc
add
mov
or
or
mov
mov
hlt
or
test
outsb
add
pushf
movsl
fistpl
clc
add
sbb
das
mov
pop
and
xchg
mov
cmp
mov
cli
and
mov
sbb
or
movsb
xchg
push
mov
sbb
xchg
inc
fbld
and
rcl
adc
ljmp
fildl
pop
add
jecxz
sar
rol
or
cmp
insb
xchg
cltd
pop
mov
lea
adc
adc
shll
inc
xchg
or
push
bound
sbb
rorb
aam
dec
jne
sbb
inc
popa
jecxz
adc
mov
imul
push
xchg
push
test
push
cmp
adc
std
lret
popa
addb
adc
lret
xchg
ret
xchg
sub
xchg
ja
add
dec
test
jecxz
push
sbb
push
push
es
sbb
sub
xor
pop
xchg
xor
push
int
imul
cmp
shrl
dec
inc
sbb
jne
adc
test
jnp
inc
or
cmp
mov
dec
inc
aas
inc
test
dec
push
xchg
inc
icebp
or
push
inc
imul
nop
icebp
ret
cwtl
cmc
les
mov
mov
fldenv
push
push
jno
cmc
and
js
xchg
add
es
or
sbb
mov
cmp
repz
add
in
jo
or
cmp
push
push
lods
mov
je
adc
push
mov
movsl
push
and
lret
mov
lds
xor
push
cmovle
imul
xchg
mov
aas
pusha
stos
cmp
and
es
sub
add
push
xorl
mov
dec
repnz
mov
fisubs
push
and
add
jle
inc
inc
lea
mov
ret
ljmp
imul
mov
and
pop
loop
and
leave
in
add
sbb
outsb
mov
and
rolb
inc
inc
mov
fdivs
lods
cmp
loopne
pxor
incl
xchg
arpl
aam
lea
xchg
cmp
inc
fidivrl
test
add
xchg
mov
insl
sub
inc
sbb
inc
mov
imul
mov
adc
test
sbb
subl
iret
test
lods
jmp
sti
add
hlt
out
dec
jnp
or
sahf
dec
sub
mov
pop
jbe
jmp
add
xor
xor
xchg
or
popa
shlb
jmp
pop
sub
mov
xchg
daa
add
cli
mov
add
jae
pavgw
cwtl
shl
cmpb
insl
dec
mov
in
dec
add
rol
inc
pop
fcompl
adc
cmpsl
cmp
fadd
pop
cmp
add
add
adc
into
add
cmp
roll
inc
or
jno,pt
mov
data16
out
sbb
divb
inc
movsb
cwtl
dec
mov
ret
bound
fdivl
outsl
bound
faddp
iret
sub
fisubrl
inc
mov
dec
mov
inc
push
xchg
hlt
add
mov
inc
pop
enter
push
stc
jp
xor
je
sub
jo
push
xorl
jo
adc
sub
xchg
jmp
mov
dec
xlat
inc
adc
rcrb
jge
les
xchg
testl
jmp
nop
xor
jmp
xor
add
cmp
das
fucomi
sbbb
movsb
out
pop
push
out
sbb
jecxz
testb
mov
out
mov
cmp
addr16
add
test
cmp
pop
ret
mov
push
cmp
push
inc
rcr
dec
scas
sub
clc
hlt
pop
daa
cwtl
mov
inc
mov
sub
pushf
pop
sub
adc
xchg
pop
add
push
rolb
aam
dec
test
jp
ret
add
enter
imul
in
add
pop
or
xchg
xchg
sub
fdivr
xchg
add
xchg
add
jo
test
sbb
dec
jmp
mov
ss
sub
iret
mov
mov
pop
das
xor
and
lds
mov
shlb
adc
mov
push
dec
or
cltd
jne
push
xlat
es
into
dec
mov
fisubs
mov
add
and
call
mov
adc
mov
push
das
aaa
sub
and
imul
pop
addl
mov
cmp
adc
jecxz
sub
roll
and
es
pop
shrl
push
lret
lret
out
adc
outsb
arpl
jecxz
pop
and
dec
es
movsl
andl
mull
push
jle
dec
sbb
inc
pop
mov
faddl
cmp
pop
cmp
xlat
addb
jg
and
xchg
and
stos
pushl
fcomps
insb
sarl
jno
pop
cmp
loopne
mov
cli
lods
movsb
adc
add
mov
xchg
inc
dec
sub
aaa
mov
addb
mov
push
dec
push
inc
xchg
jne
add
and
popf
xlat
jae
dec
dec
insl
xchg
pusha
pop
repnz
test
iret
adc
fs
push
js
aaa
jle
icebp
or
andl
and
mov
dec
nop
push
push
scas
push
xchg
jecxz
push
and
dec
shrl
inc
jle
cwtl
push
aaa
push
pop
jnp
push
and
sahf
mov
jno
fdivp
sub
adc
clc
push
adc
daa
cwtl
add
icebp
jle
xor
sti
pop
pop
pop
pop
into
pop
push
push
ret
les
shlb
mov
cmpsb
daa
rcl
sub
addr16
sub
and
or
mov
jno
out
pop
rorb
popf
and
enter
arpl
adc
push
jp
popf
sahf
add
pop
xor
xchg
aam
cmp
repnz
shrb
cmp
loopne
dec
enter
mov
adcl
mov
push
sbb
fsts
cwtl
jp
xor
inc
pop
repnz
lods
add
test
fisubrs
lret
ret
dec
inc
inc
push
add
pusha
negl
inc
push
cmpsl
or
jp
or
push
mov
cmp
push
mov
add
add
rolb
call
sub
inc
push
aaa
pop
xorl
outsb
add
push
adc
arpl
or
and
in
test
sub
push
pop
inc
bound
iret
mov
movsl
adc
push
adc
mov
pop
xchg
shrb
sbb
lahf
mov
mov
repnz
jae
jns
push
and
fcoml
popa
int3
jne
jg
dec
push
sbb
pop
dec
loop
mov
mov
notl
mov
lret
add
flds
mov
push
pop
cmp
int
mov
xchg
js
jecxz
jp
add
aaa
xchg
mov
push
inc
fstpt
mulb
and
aaa
mov
xor
or
out
sbb
adc
sti
pop
mov
orb
dec
sbb
cwtl
mov
in
add
xchg
add
xlat
jl
mov
mov
cmp
inc
add
or
inc
add
sub
mov
loopne
mov
mov
cmpsl
or
fldl
pop
in
das
nopl
add
or
dec
cmp
mov
xchg
repnz
int
sbb
dec
and
pop
and
adc
addr16
loope
loope
push
inc
out
shl
roll
adc
push
adc
daa
sbb
sub
movsl
and
and
loop
insl
cli
mov
pop
outsl
sbb
fwait
mov
cmp
push
jne,pn
arpl
scas
pushf
lea
or
lock
mov
adc
sbb
inc
xor
shrb
adc
lahf
shll
testl
es
mov
add
mov
sub
stos
dec
shll
jmp
mov
notl
mov
pop
jo
aad
repz
dec
loop
sub
jns
iret
outsl
ja
cs
sub
cs
push
and
aam
adcb
mov
mov
es
ret
sub
push
cmp
lret
add
out
mov
xor
xor
shlb
push
xor
mov
test
add
push
or
sbb
push
or
lock
add
mov
xor
cmp
pusha
sub
insl
sbb
pushf
daa
insl
xchg
xchg
les
or
fmuls
or
mov
aaa
cmp
rorb
negl
pop
push
pop
enter
jle
clc
push
mov
adc
outsl
add
int
mov
push
push
fs
test
test
xor
cmc
pusha
adc
mov
xor
add
or
pusha
xchg
rorl
push
mov
xor
iret
xor
mov
fprem
rorb
push
pusha
sub
ja
fdivs
lret
sarl
dec
cmp
xor
out
xor
fs
mov
sub
jno
frstor
or
sarl
cmpsb
mov
out
jl
sbb
fdivrs
jne
out
out
pusha
orb
adc
fwait
jg
xor
ret
and
adc
icebp
push
pop
xor
pushf
lods
mov
faddl
test
add
xchg
cltd
arpl
jbe
lock
sbb
pop
jne
inc
and
addr16
sbb
jo
jns
cmp
lea
add
pop
inc
jecxz
fldcw
jge
push
sbb
push
sbb
sub
xchg
or
lods
pusha
and
jo
inc
sub
xor
mov
mov
xchg
and
add
les
push
inc
push
push
test
xorb
jns
mov
add
arpl
adc
add
sbb
mov
ds
add
jae
aas
add
fwait
icebp
adc
adc
or
or
pusha
push
xchg
jae
cmc
xchg
dec
and
shll
into
push
add
das
push
or
movsb
add
out
test
inc
and
xor
fcompl
jnp
sub
pop
popa
ss
mov
repz
sub
rolb
js
std
push
fcomps
jg
orb
adc
xor
inc
out
adc
jp
icebp
and
xlat
cmc
adc
movhps
add
sbb
cmp
dec
push
rclb
lods
pop
addr16
push
adc
mov
pop
dec
pop
xchg
add
pop
jns
je,pn
dec
mov
sub
push
inc
adc
fdivr
push
ljmp
mov
cmp
mov
add
xorb
pop
movsb
xchg
mov
cmp
fidivrl
mov
out
pop
and
hlt
xchg
jl
cmp
dec
push
pop
add
pop
add
outsl
bound
xor
inc
aas
imul
push
aaa
inc
mov
adc
fwait
adc
rorl
inc
cmc
movsl
xor
scas
dec
mov
mov
fistps
movsb
shll
mov
aas
scas
jp
int
pop
or
dec
and
flds
mov
mov
adc
sti
dec
adc
es
inc
sbb
push
pop
in
out
mov
mov
incb
test
icebp
imul
loope
cs
jge
mov
push
out
aam
push
push
ljmp
incb
int3
fimull
and
mov
rcrb
adc
add
mov
sbb
add
dec
imul
int
test
iret
push
in
sub
pop
cmp
add
int
lcall
pop
scas
jl
sti
mov
mov
sbb
adc
gs
gs
push
xlat
shrl
movsb
inc
inc
xlat
mov
sub
dec
insl
repnz
pop
adc
repnz
fistl
push
ret
roll
push
and
add
mov
roll
aad
lods
roll
push
or
or
inc
or
inc
jns
add
dec
cmpsb
mov
sti
ss
sbbl
mov
push
sub
in
mov
and
jns
mov
cs
dec
xor
push
imul
das
jne
jbe
dec
fdivrl
call
ret
imul
pop
dec
sbb
sub
es
lret
adc
lods
lods
jmp
fadd
mov
add
mov
es
cmpsl
jo
int
and
loopne
adc
xchg
enter
cmp
ret
jno
pop
outsb
nop
addr16
push
inc
sub
push
das
push
fs
popf
pop
mov
xchg
js
and
daa
js
inc
push
dec
fistpl
movsb
or
xlat
rolb
jbe
in
pushf
rol
add
pmaxsw
inc
sbb
push
ss
aad
mov
jnp
sub
push
rolb
sub
lcall
arpl
test
mov
dec
sbbb
bndstx
jnp
mov
xchg
push
push
js
sub
nop
lret
push
dec
inc
ret
scas
addr16
pop
fdivs
ja
add
fistpl
jle
jmp
int3
iret
in
mov
jne
lret
int
into
pop
insl
daa
add
ret
mov
imul
jno
scas
pop
sldt
scas
add
shr
mov
stos
and
ret
daa
sub
mov
or
and
mov
repnz
and
mov
pop
cs
cld
xor
and
arpl
pop
cmp
imulb
aas
mov
xor
xor
or
lea
leave
jo
imul
cmp
jo
lea
lret
xor
cmc
add
aas
or
jnp
mov
cltd
xchg
ljmp
jo
dec
out
incb
icebp
repnz
popf
dec
add
clc
je
lea
cmp
xchg
jbe
test
sub
add
rcrb
mov
filds
sbbl
push
cmp
iret
jno
mov
or
mov
testl
dec
push
pop
or
in
add
mov
add
inc
mov
mov
push
int3
push
je
lods
mov
xchg
xor
pusha
mov
lret
add
fwait
popa
lret
movl
and
add
jne
int
sub
aam
fwait
dec
stos
xlat
addb
mov
ja
notb
daa
aad
hlt
mov
jge
sub
andl
add
adc
add
sahf
dec
sbb
inc
mov
idivb
scas
cltd
dec
js
adc
addr16
rep
mov
daa
scas
mov
sub
movsl
mov
add
push
test
sbb
mov
aas
mov
mov
imul
mov
mov
lahf
adc
packssdw
xor
xor
pop
or
jge
sar
popa
cmp
or
fidivrl
sbb
push
sti
lea
shrb
inc
sub
fadds
mov
dec
or
mov
in
add
push
push
fists
add
lret
push
outsl
daa
sbb
and
pop
shrb
pusha
jl
lods
push
test
iret
xor
js
xor
mov
or
pop
inc
push
push
or
xor
lret
daa
and
mov
shll
mov
test
push
inc
pop
gs
jbe
jmp
ret
mov
and
add
cmpsl
mov
jo
lods
xor
mov
shrl
mov
cwtl
dec
and
xrelease
jno
sub
sbb
and
int3
ret
loopne
adc
jbe
inc
inc
cmp
mov
xor
aas
inc
subl
sub
rcrl
sub
add
mov
test
push
and
sbb
jecxz
xlat
pushf
xor
shl
xchg
mov
add
or
addr16
sub
fisttpl
add
movsb
out
sahf
xchg
and
push
mov
shll
lock
rcrl
hlt
loop
js
jns
lods
sub
mov
xchg
mov
in
cmp
lock
xchg
fldcw
bound
or
or
dec
and
mov
pop
mov
inc
sub
out
inc
addr16
mov
adc
push
sub
xchg
dec
lods
adc
js
add
push
mov
fdivl
add
adc
jp
push
ret
out
imul
jmp
sub
push
sbb
sub
in
pop
cli
mov
sbb
add
mov
leave
and
ljmp
and
insb
nop
jno
outsb
fmuls
mov
dec
and
mov
hlt
xor
adc
and
mov
mov
push
lods
and
xor
sti
icebp
inc
mov
aas
scas
leave
ret
addr16
in
aam
enter
add
test
pop
sbb
cmp
push
push
and
add
mov
cmp
jmp
or
and
fsts
and
dec
adc
pop
xchg
loope
sbb
ja
adc
clc
call
pop
neg
adc
mov
and
push
addb
jmp
xchg
sub
imul
jmp
sub
sbb
fisubrs
push
inc
bound
sbb
jo
lret
jecxz
das
lock
pop
mov
add
cltd
daa
cmpsl
test
sti
popf
fsubl
sbb
lret
bound
push
sbb
lahf
cli
xlat
hlt
push
xchg
xor
pop
popa
ret
and
inc
or
dec
jne
pop
mov
clc
lock
add
xor
test
sub
push
ss
push
sbb
xchg
mov
in
sub
sbb
mov
lret
mov
or
mov
pusha
sub
cmpl
and
sar
cmp
jbe
cmp
hlt
mov
cmp
cmp
subl
test
pop
subl
loope
xchg
jo
test
popf
arpl
xchg
push
ss
cltd
sbb
jbe
inc
inc
shrl
popf
test
sti
sbb
mov
add
adc
jb
add
add
pop
fdivs
loope
shrl
mov
xchg
xlat
pop
adcb
outsb
in
xchg
scas
mov
xchg
bound
stos
jecxz
adc
xor
aas
insb
or
shll
int
fsubr
notb
sbb
loopne
ror
js
xor
jp
pop
testl
das
sbb
lahf
sub
dec
je
sub
mov
inc
in
sarl
pop
pop
add
mov
ds
fadds
iret
cli
or
adc
in
dec
mov
mov
pavgb
jle
leave
adc
push
push
iret
adc
dec
ljmp
or
cmpsl
mov
daa
repz
pop
sbb
inc
adcb
mov
sbb
jmp
movsl
mov
shl
jno
add
jo
in
pop
shrb
sbb
pop
push
add
cmp
imul
cmp
pop
mov
or
or
push
iret
lret
xchg
movsl
or
shl
mov
lret
test
aad
push
repnz
daa
mov
pop
sub
jecxz
inc
popa
or
sub
aad
stos
add
movb
icebp
lahf
fs
imul
iret
cmp
cmp
nop
xlat
lods
add
adc
jge
jne
insb
stos
lods
sub
adc
std
loope
pop
push
and
push
jle
movsb
mov
jmp
adc
adc
or
dec
jno
stc
push
sbb
insb
add
dec
cmp
sub
dec
push
xorl
movsl
add
add
cmpsl
add
xorb
icebp
sbb
adc
push
sub
cmpsb
daa
xor
add
inc
lahf
add
adc
movsl
add
pop
adc
rcr
insl
cmp
and
push
loopne
xchg
xor
dec
adc
add
lock
xor
cmp
les
ss
jae
inc
xor
mov
dec
push
or
loopne
cwtl
loop
mov
and
mov
pop
or
xchg
adc
inc
mov
adc
dec
add
sub
repnz
outsl
je
mov
xchg
imul
xorl
jo
or
jnp
sub
and
movsb
cs
or
push
push
loop
xchg
dec
lret
and
mov
sbb
imul
jg
inc
or
js
jns
fcomps
mov
adc
add
xchg
pop
sbb
or
xor
inc
in
push
jmp
sbb
or
dec
mov
fistpll
in
dec
push
adc
lds
jno
sti
fldt
mov
call
cmp
pop
or
pop
or
add
and
xlat
jg
adc
xor
shufps
adc
cmpsb
mov
push
dec
jecxz
gs
outsl
in
stos
sbb
fmul
out
loopne
mov
sub
daa
xchg
popf
das
adc
add
sub
loopne
add
mov
cmpl
cmp
sub
add
inc
mov
ret
jne
test
mov
jno
ret
bound
inc
cmp
and
mov
ds
or
or
push
cmp
and
imul
sbb
dec
push
lods
into
loop
add
cmp
stos
mov
inc
or
jo
fs
sbb
jle
cmp
test
rorl
repz
iret
xchg
clc
sub
rcl
hlt
add
pop
subl
lods
rcrl
pop
jl
and
xlat
sbb
mov
fidivl
mov
pop
pop
mov
xor
push
scas
rclb
rolb
or
gs
fldcw
mov
test
mov
add
xchg
cmp
les
pop
mov
fs
push
scas
dec
and
cs
lods
fsubp
fists
xor
push
cs
negl
or
enter
mov
mov
sbb
lock
ret
addl
pop
push
cwtl
ret
mov
rcl
ja
pop
imul
sub
adc
dec
adc
xchg
jno
sbb
sub
pop
mov
mov
dec
addr16
add
mov
ds
jge
mul
test
add
lds
adc
in
and
loop
iret
push
adc
sbb
iret
adc
shlb
mov
add
jmp
cmp
repz
jecxz
jp
sbbl
xor
iret
mov
iret
fdivrs
jmp
push
add
cmp
lea
and
push
mov
mov
pop
pop
jp
xchg
mov
pop
dec
testb
loope
es
popa
jecxz
repnz
xor
adcl
rolb
lret
sbb
or
or
or
or
scas
inc
xor
cmpsl
es
cmpsl
and
pop
fs
adc
aad
xlat
loopne
imul
test
push
gs
fimull
adc
pop
push
cmp
cwtl
les
xor
jmp
adc
mov
pop
mov
hlt
pop
cmpl
leave
push
mov
ret
fucomip
adc
test
xchg
xor
or
mov
jecxz
push
or
scas
adc
loope
add
inc
jmp
add
pop
movsb
cmp
gs
filds
shlb
mov
mov
mov
mov
shlb
fwait
loope
pop
in
sbb
lods
xchg
fadds
scas
or
add
sbb
cs
imul
outsl
call
sub
cmc
test
jo
popa
and
mov
adc
jp
arpl
xlat
inc
pop
popa
imul
xor
xchg
addb
pop
xor
daa
jl
rcrb
es
and
or
gs
xor
mov
push
sub
movsb
mov
fnstenv
push
jno
push
inc
rcr
test
push
xor
push
decb
cmp
push
push
loop
add
sub
pop
gs
pop
inc
movsl
es
or
xor
insb
jecxz
cmp
rcrl
inc
or
imul
fwait
out
inc
or
pop
or
mov
stos
dec
cmp
jecxz
shlb
mov
fadd
push
xorl
into
push
push
rorl
add
mov
sbb
pop
daa
call
push
loope
pop
pushf
incl
and
ror
jmp
fbstp
into
addr16
divl
sbb
dec
mov
movsl
outsl
xchg
adc
scas
jle
shlb
xor
movsl
ds
movsb
inc
sbb
push
sub
push
sti
cmp
mov
adc
mov
arpl
lods
sbb
inc
mov
mov
add
pop
add
dec
sbb
mov
mov
fmuls
pextrw
outsl
add
xchg
jmp
sub
add
je
xlat
arpl
pop
je
inc
sub
sub
mov
addb
loopne
add
push
cmp
or
inc
test
and
je
xchg
cmpsl
scas
xchg
mov
or
sub
and
cltd
das
jno
pop
xchg
icebp
mov
xor
test
sbb
and
fcmovne
mov
add
mov
shrl
xlat
and
xorl
pop
lret
jnp
xor
loope
aam
stos
ror
pop
sub
out
sbb
cmp
mov
mov
loope
mov
add
lret
imul
inc
xchg
sub
adc
movsl
jmp
mov
ljmp
jp
mov
std
mov
bound
and
cmpsl
dec
movsb
adc
popa
and
push
sbb
movsb
into
sub
adc
sbb
push
aam
and
repnz
insl
lods
test
fstl
adc
mov
inc
mov
mov
mov
out
gs
fdivrs
sarl
fsts
fcmovu
les
and
or
loope
movsb
pop
sar
mov
pop
cmpsl
mov
adc
ljmp
jecxz
test
test
loope
jle
pop
sbb
adc
sub
jg
subb
ja
outsb
add
les
adc
arpl
pop
loope
popf
push
dec
pop
ss
sbb
inc
jmp
dec
iret
movsb
int3
mov
cmpsl
add
aas
xchg
movsb
add
cmpsl
les
std
loop
inc
sbb
sbb
das
dec
fwait
in
xchg
movb
add
out
fnstcw
add
dec
iret
mov
addl
shll
adc
mov
pop
push
dec
push
cmp
js
loope
mov
pusha
xor
add
loopne
call
cwtl
mov
jmpw
outsb
stos
aaa
xor
sarb
push
fistps
and
pop
es
jg
push
xor
adc
add
sub
lock
out
mov
nop
mov
sub
mov
adc
mov
push
mov
arpl
daa
outsl
sbb
and
cmpsl
test
add
mov
xor
mov
aaa
add
cmc
mov
in
aaa
pusha
mov
push
lahf
add
lea
pop
popa
mov
adc
insl
mov
mov
sbb
add
inc
lods
mov
and
imul
cmpsl
sub
ror
jmp
shrl
lcall
lock
es
loopne
cmp
add
pop
or
cmp
pop
lcall
bound
and
int
jmp
xlat
insl
idivl
aas
jne
lods
js
fldt
aad
adc
and
lahf
add
mov
and
loop
xchg
cmp
mov
arpl
mov
xchg
enter
pop
add
xchg
es
sbb
test
outsl
or
sbb
iret
repnz
aam
jae
call
cwtl
sub
mov
xchg
mov
rcll
inc
or
sbb
or
inc
cmp
add
sub
stos
cmp
sbb
fdivp
pop
sbb
xchg
mov
stc
mov
mov
dec
lahf
es
push
sbb
loop
in
push
or
adc
jae
sbb
push
add
sbb
xchg
lret
mov
aad
pop
push
faddl
adc
jnp
mov
mov
data16
adc
das
stos
pushf
fcmovu
jmp
mov
lods
adc
xor
pop
out
daa
leave
mov
cmc
adc
inc
loope
mov
ds
es
sub
xchg
xlat
loope
sbb
and
cmp
xchg
addb
or
pop
sub
xor
xchg
jo
push
xor
call
or
out
and
push
aaa
icebp
ds
sub
sbb
fwait
lock
dec
outsb
imul
arpl
jo
or
scas
subb
inc
push
leave
fisubs
add
imul
test
mov
das
pop
push
push
shlb
inc
sbb
jne
rcll
push
out
lods
xchg
adc
add
loope
shrb
insb
rorb
and
mov
xchg
inc
xchg
mov
push
orl
lea
and
inc
ja
push
fcomps
dec
jno
push
mov
inc
cwtl
dec
shrl
mov
adc
sti
push
pop
popf
mov
inc
adc
inc
gs
hlt
stos
adc
leave
rcll
fisubl
inc
fisubl
push
or
xor
jae
push
and
scas
jnp
add
aam
inc
arpl
xor
add
sarl
je
adc
mov
das
fcomip
jns
push
leave
repnz
push
leave
add
daa
outsl
mov
add
adc
ja
add
push
aaa
dec
fiaddl
xchg
das
fiadds
and
xchg
lock
sbb
and
lock
fcom
dec
pop
retw
pop
aaa
mov
outsl
inc
leave
xor
mov
dec
int3
pop
push
push
pop
outsb
xchg
daa
fisubl
push
mov
jno
mov
push
push
in
sahf
and
push
mov
fldenv
and
add
leave
dec
and
push
lret
xchg
shll
and
dec
jecxz
xor
shlb
adc
outsl
dec
and
gs
cmpsl
mov
cmp
loopne
adc
test
scas
movsb
adc
push
add
movsl
loope,pn
dec
dec
hlt
xchg
xchg
gs
and
and
les
add
jo
pop
mov
inc
lods
xlat
cmp
insb
or
popf
or
sub
pop
loop
sti
je
sarb
pop
adc
adc
xor
jns
mov
or
je
pop
pop
add
sbb
lcall
addb
lret
sbb
dec
lcall
imul
ss
and
jg
pop
sbb
sub
push
xchg
ss
rolb
adc
cli
add
xchg
sub
push
xor
adc
mov
and
in
adc
not
add
vmovaps
jne
iret
outsl
icebp
scas
add
outsb
cli
pusha
in
xchg
sub
negb
mov
jg
or
sti
jno
jo
push
mov
xchg
ds
enter
pop
sbb
push
int3
in
inc
pop
test
push
xorl
inc
loope
aaa
cmp
mov
cld
xchg
outsb
daa
mov
pop
popa
ljmp
adc
or
pop
jb
push
xchg
mov
or
mov
mov
leave
push
iret
adc
dec
jo
addr16
fsubrs
push
je
test
and
jmp
sbb
fimuls
push
and
mov
fisubs
idivb
add
cmp
ljmp
iret
adc
pop
sar
adc
hlt
inc
imul
inc
or
sysenter
jo
mov
mov
push
pop
sub
or
movsl
push
leave
jmp
movsl
fsubs
and
jle
leave
ret
sbb
arpl
les
mov
xor
push
scas
push
mov
ja
dec
int3
repnz
and
icebp
aaa
push
sbb
add
or
daa
xlat
add
or
ja
in
adc
sbb
enter
jmp
sahf
push
add
insb
mov
jo
dec
pop
sub
add
out
dec
clc
and
ss
jne
dec
xchg
nop
pop
pusha
xor
scas
pop
enter
add
jg
shll
test
movsl
es
ljmp
scas
xor
mov
gs
mov
xor
out
pusha
push
rcl
lds
dec
sbb
aam
push
xchg
lret
roll
lock
gs
or
je
aaa
or
mov
rorb
and
out
je
push
or
loope
clc
ja
and
nop
push
pop
cltd
push
movsl
sbb
xor
mov
xor
inc
cltd
xor
or
push
sbb
jp
mov
jge
jge
mov
dec
add
sbb
inc
js
mov
outsl
mov
push
sbbb
or
or
push
sub
sub
sub
jae
shl
gs
mov
add
inc
adc
rclb
push
out
or
push
adc
out
mov
and
xorl
pop
mov
repnz
jnp
or
pusha
lcall
pop
push
dec
xchg
push
mov
add
dec
xchg
adc
in
mov
xchg
add
dec
mov
jle
lcall
or
sub
inc
lods
sbb
xor
imul
popa
test
cmc
popf
and
mov
mov
push
dec
mov
dec
xor
mov
loope
pop
call
or
sahf
movl
inc
sub
sub
add
cmp
mov
das
fistpl
sbb
pop
add
dec
out
mov
loop,pt
les
dec
xor
lods
jmp
jle
push
call
cmp
fildl
jp
mov
mov
daa
int3
out
mov
push
sar
and
lret
mov
pop
inc
sbb
lret
or
xor
lods
movsb
push
jecxz
and
xchg
mov
pop
pop
mov
cltd
push
out
xchg
push
fcoms
js
lods
gs
mov
repz
mov
pop
lods
subb
xor
pop
pop
or
icebp
loopne
jnp
scas
push
inc
or
cmp
inc
bound
lcall
dec
pop
lods
shlb
fisubrs
pop
sub
jne
push
sahf
xor
pop
dec
mov
ljmp
and
and
cmp
or
xlat
movsl
or
test
adc
or
or
adc
xchg
je
xchg
sbb
sbb
push
mov
mov
pop
mov
xchg
lods
mov
jge
sbb
arpl
daa
inc
sub
stos
sub
lds
add
pop
lahf
mov
xchg
imul
inc
jle
xor
pop
cmp
sbbl
outsb
add
pop
jne
mov
sub
mov
shlb
adc
sub
lahf
add
mov
sbb
addb
xchg
bound
jae
daa
lods
mov
mov
loop
mov
mov
cmp
lahf
pop
mov
js
adc
into
cmc
imul
add
loopne
adc
daa
movsb
or
js
xchg
subl
jmp
lea
loopne
pop
ds
or
jbe
jge
into
sbb
jmp
adc
imul
pusha
add
xor
add
jae
and
jns
adc
mov
movb
xchg
sbb
rcrl
mov
nop
rcrb
cmp
nop
cs
jmp
xchg
mov
xlat
adc
cmp
cwtl
sbb
push
jo
sbb
jp
rcll
ret
xor
jo
and
filds
cmpsb
mov
or
sbb
fstp
sbb
add
adc
ja
repnz
sbb
sub
or
add
mov
imul
ror
fsubrs
mov
mov
jmp
and
dec
insl
adc
in
arpl
sub
and
sub
daa
add
mov
dec
das
das
nop
push
loope
pop
movsl
mov
test
rolb
rcr
lea
pop
push
gs
push
lods
lock
push
pop
stc
cs
les
sbb
xor
notb
fstpt
and
lods
cmp
xchg
lea
aaa
mov
add
aam
mov
mov
pop
nop
cmc
mov
push
nop
xor
insl
cld
dec
fucomp
jg
lods
es
sbb
sub
popf
mov
add
out
cmp
rorl
pop
cwtl
mov
pop
sub
jecxz
aaa
scas
jge
push
dec
and
mov
aad
inc
repz
xchg
fwait
test
adcb
mov
fs
dec
imulb
dec
rolb
movsl
pop
iret
inc
arpl
inc
sub
xchg
mov
sub
lcall
cltd
mov
rol
stos
test
dec
xchg
loop
mov
dec
mov
addl
mov
and
mov
inc
fwait
inc
stos
push
outsl
push
test
inc
sbb
lahf
jns
fcompl
out
test
xchg
adc
rolb
xor
pop
sbb
fcmovne
push
popa
es
jmp
out
adc
dec
mov
pushf
hlt
fwait
lret
push
cmpsl
mov
ss
inc
es
mov
fsts
test
jmp
inc
dec
and
cmp
nop
icebp
inc
pop
mov
std
jle
add
pop
mov
or
jae
push
cmpsb
mov
xor
and
mov
pop
addl
fld
pop
or
mov
inc
ret
aam
mov
mov
loop
mov
inc
in
and
xchg
sub
imul
leave
ja
and
xorb
das
xor
inc
mov
sub
nop
out
and
add
stc
cmp
cmp
or
subb
clc
pop
ret
adc
in
pop
xchg
xchg
ds
movsl
ret
jno
add
and
mov
aad
out
dec
xlat
jmp
mov
ret
adc
push
and
fmul
aam
pop
adc
pusha
repnz
cmp
je
mov
incb
lret
fdiv
insb
jle
or
bound
mov
stos
inc
testl
or
and
out
mov
daa
mov
les
jno,pn
test
mov
add
lods
xchg
or
adc
cwtl
and
repnz
xor
dec
popf
sbb
add
cvtps2pi
pop
cmc
icebp
jmp
push
dec
iret
ret
inc
and
shlb
mov
popa
sub
jbe
orl
mov
aaa
pop
xor
inc
xchg
inc
add
adc
stos
imul
pop
or
test
pop
ficompl
pop
mov
shl
dec
xchg
aaa
sti
test
in
jo
in
hlt
cmp
push
mov
das
arpl
push
adc
mov
cmp
adcl
popa
insb
mov
or
test
or
jge
add
dec
inc
imul
inc
out
nop
pop
add
out
subb
cmp
mov
sbb
imul
fists
mov
and
xor
mov
xchg
test
lods
clc
pop
jo
and
das
xor
mov
mov
outsl
or
cmpb
pop
or
lea
div
fs
test
or
je
test
insl
insl
aaa
scas
call
xchg
ljmp
insb
and
fildll
mov
jbe
xor
or
fists
pusha
xor
aad
push
insl
fldcw
jo
test
daa
fldl
mov
bound
cmpsl
movsb
cltd
add
pushf
leave
add
jno
lahf
inc
movsl
add
xor
add
pop
jle
popa
in
movsl
pop
xchg
aas
add
xchg
pop
arpl
sub
jb
aad
push
js
sbb
out
lock
cmp
mov
iret
jecxz
sub
xchg
testl
iret
ret
ja
adc
test
add
cmpsl
add
and
push
iret
sbb
gs
fxtract
jb
jmp
dec
xor
xchg
and
mov
inc
and
loopne
pop
mov
iret
adcl
loopne
pop
in
negl
mov
sub
inc
loope
sbb
mov
mov
enter
std
and
loope
mov
adc
xlat
cmp
jns
adc
jmp
sbb
jnp
cs
push
mov
pusha
movsl
lahf
xchg
ret
adc
nop
les
addr16
pop
push
sbb
xchg
mov
add
stos
push
adc
test
fbld
jp
add
dec
and
xchg
mov
outsb
and
adc
movsb
std
inc
jp
movsb
mov
xlat
adc
mov
ficompl
ljmp
cmp
aam
icebp
mov
mov
addr16
nop
jne
das
sub
or
test
fsts
loope
subb
add
rorb
inc
lods
and
or
mov
in
fiaddl
xchg
mov
test
cmp
sub
xchg
and
mov
pop
aaa
cmpsl
rclb
stos
pop
sbb
inc
inc
push
popa
jle
shrb
xor
fwait
movsl
in
push
movsl
push
push
fadd
pop
ds
add
dec
jecxz
adcb
jp
inc
add
lea
xchg
ret
xchg
or
test
rclb
sub
sbb
jle
fdivrs
mov
adc
bound
adc
add
mov
mov
push
push
hlt
xchg
stos
xchg
lret
fsub
mov
in
fsubs
and
out
popa
jne
inc
and
inc
pop
mov
cltd
jl
push
outsb
lods
inc
fsubrs
mov
and
adc
rolb
das
mov
mov
sub
and
sbb
lea
sub
sbb
notl
cmp
pop
inc
aam
pop
pop
inc
sbb
pop
je
scas
shrl
sub
push
jmp
je
popf
lock
imul
dec
pop
movsl
and
scas
addb
jle
rclb
inc
andl
in
and
aam
jnp
daa
test
push
cmp
or
mov
push
loope
push
stos
push
add
cmpsb
imulb
or
xorl
sbb
outsb
and
gs
notl
and
push
das
sbb
fldln2
push
add
and
les
lahf
clc
pop
test
cmp
push
enter
cmp
inc
sbb
adc
pop
sub
popa
sbb
faddl
shl
loop
mov
gs
xchg
sbb
jns
int
mov
shlb
push
mov
add
mov
lahf
xor
and
mov
jle
pusha
sub
adc
sbb
mov
mov
iret
mov
lahf
fsubr
mov
cmp
sbb
lret
lahf
das
aad
fistps
rol
add
inc
aas
dec
fsubrs
and
stos
icebp
call
mov
data16
jo
dec
test
jo
push
pop
movb
adc
mov
and
fstps
js
add
inc
addr16
inc
or
popa
jle
iret
lock
lret
loopne
inc
outsl
popf
push
or
inc
add
aam
add
data16
push
daa
daa
jne
mov
mov
inc
test
inc
or
fwait
xchg
loope
fcomps
push
rolb
cmp
out
jmp
mov
mov
mov
add
in
jns
or
es
pop
aaa
and
loope
test
and
out
clc
lahf
mov
jg
jl
sub
and
add
or
and
out
or
pop
adc
jecxz,pn
pop
orl
mov
mov
test
aam
jb
pop
pop
daa
sub
mov
sub
inc
jno
fmull
mov
and
inc
sbb
mov
lea
mov
mov
or
add
adc
push
addl
sqrtps
pop
fs
inc
inc
add
pop
mov
push
push
cmp
es
dec
movsb
xchg
xchg
dec
or
fwait
mov
and
mov
inc
cmc
pop
shlb
nop
jnp
lods
and
sbb
shlb
mov
mov
loope
shrb
inc
sub
xchg
andl
xchg
xchg
cmp
add
pop
inc
and
jno
lahf
aad
ret
add
imul
jge
dec
out
jp
push
xorb
aad
push
shrb
cmp
and
dec
jne
fs
frstor
lcall
sbb
or
out
daa
movsl
stos
push
iret
movl
je
adc
in
insl
xor
addb
mov
xor
or
cmpsb
xchg
outsb
or
mov
add
popl
mov
push
jbe
loopne
cmp
mov
enter
shlb
inc
cs
sub
leave
pop
and
sub
sbb
jle
adc
lahf
mov
jae
gs
inc
and
add
inc
imul
mov
ds
push
pop
fcoml
push
add
cmpsb
xor
dec
mov
aam
jl
adcl
ficomps
push
push
inc
leave
sbb
pop
lods
add
mov
push
xor
lock
xor
test
pop
and
shlb
and
sbb
push
fs
mov
add
add
cltd
mov
cmp
push
add
add
mov
sbb
iret
gs
cmc
inc
gs
imul
and
or
orl
or
cwtl
test
cmpsb
mov
shrl
cmp
push
push
and
loop
xchg
xchg
add
mov
jne
push
dec
pop
jg
test
mov
mov
add
push
loopne
lods
ficompl
jno
inc
cmp
push
loope
fstpt
inc
stos
adc
jmp
insl
push
gs
pop
mov
push
lret
mov
pop
sarl
inc
aad
push
add
xor
xchg
mov
lahf
mov
push
sub
xchg
dec
cmp
stos
jo
imul
pusha
jbe
and
mov
rorb
or
push
imul
aas
jmp
jb
add
fs
rolb
nop
cmp
sbb
ds
add
shr
cmp
data16
or
pop
data16
sbb
mov
in
pop
mov
sbb
lods
loopne
iret
mov
and
sbb
sbb
sbb
das
add
sbb
xor
jns
aad
xchg
in
ret
shl
bound
repz
sub
and
sub
mov
sbb
xor
and
jne
arpl
mov
pop
sbb
mov
xor
xor
pop
sub
xchg
sbb
jmp
out
inc
dec
daa
and
lcall
pop
xchg
dec
inc
sbb
sub
les
pop
add
inc
shl
pop
inc
and
push
add
xor
pop
iret
in
xchg
adc
ss
popa
jmp
stos
sbb
push
fildll
cmc
mov
and
lret
push
shll
ja
pusha
inc
push
sub
cmpsl
mov
push
pop
jns
xchg
sbb
test
mov
push
push
pop
add
ja
xor
shrb
push
xchg
int
out
mov
push
inc
mov
ss
xchg
xor
adcb
pop
mov
sbb
leave
mulps
add
or
adc
add
imul
push
loope
and
popf
inc
imul
add
and
lret
or
int
sub
les
cli
nop
xchg
pop
sub
insb
pop
mov
popa
aad
loopne
rclb
add
je
pushf
pop
clc
jecxz
add
aad
movsl
pop
and
test
mov
jo
xor
sbb
filds
cmpsl
ja
xchg
ss
cmpsl
dec
cmpb
push
add
adc
loope
mov
pusha
lock
mov
mov
adc
js
daa
add
or
and
mov
cmp
pop
nop
fwait
mov
inc
and
ret
pop
mov
stos
xor
sbb
addr16
mov
mov
or
mov
cmp
xor
add
mov
dec
nop
inc
orl
int3
push
mov
sbb
mov
xor
jo
mov
ficompl
xchg
inc
push
jge
leave
dec
xchg
or
sub
dec
jae
xchg
insb
add
push
jno
dec
xchg
adc
adc
fcomps
pop
mov
mov
fisttpll
dec
arpl
mov
xchg
fwait
inc
jl
add
mov
mov
es
notl
shl
test
test
ja
sub
xchg
sarl
icebp
and
xorl
adcl
pop
divl
rcrl
xchg
mov
aad
orl
and
lea
dec
push
add
sub
xchg
jno
cmovl
testl
les
xchg
add
sbbl
outsl
mov
ret
add
scas
fld
fsubl
lret
mov
mov
and
sub
pusha
call
std
mov
or
das
push
mov
js
int3
jge
pop
icebp
adc
sub
nop
roll
push
das
ja
xchg
stos
sub
pop
loop
fisttps
pop
les
mov
jno
cmp
inc
mov
out
mov
mov
push
loope
pop
xor
bound
das
in
je
pop
cmp
fdiv
jecxz
cmp
inc
loope
dec
xor
fisubs
push
mov
sbb
xor
sarl
enter
jl
and
and
icebp
movsb
shrl
push
popa
test
cltd
cmp
arpl
ret
icebp
or
or
and
psubsw
adc
and
sub
mov
sbb
enter
dec
adc
scas
inc
dec
sbb
sbb
aaa
xchg
xor
mov
cmp
pushf
je
daa
cmpsb
pop
xchg
icebp
add
out
jo
and
jno
rorb
and
sub
enter
sub
int3
adc
adc
adc
or
jg
pop
xor
sbb
mov
pushf
int
sbb
mov
mov
cmp
and
jecxz
cltd
jo
addr16
xorb
or
push
sub
sbb
js
mov
mov
lcall
lahf
outsb
sbb
and
loopne
xchg
dec
inc
xchg
shlb
addb
nop
xchg
and
test
setg
lahf
adc
aam
inc
rolb
push
cmp
rcrb
cmp
shlb
xchg
adc
mov
leave
pop
mov
dec
pusha
cmp
popa
popf
adc
mov
or
push
xchg
filds
ss
iret
xchg
icebp
cltd
dec
xchg
add
daa
hlt
movsb
push
dec
in
dec
sub
push
notl
fs
mov
jge
adc
popf
addb
daa
aam
iret
push
mov
or
mov
add
jmp
leave
sub
or
or
pop
test
scas
shl
ja
add
sbb
lods
into
mov
loopne
loope
fxch
inc
mov
push
mov
mov
xor
cmp
jle
add
scas
cmp
add
xor
and
loop
add
cmp
pop
ljmp
dec
and
mov
das
push
pusha
test
cld
enter
xlat
inc
iret
bound
and
add
add
mov
data16
inc
sub
daa
test
lcall
fsubrs
cmp
push
or
cmp
out
push
es
mov
sar
add
jge
ljmp
cmp
jp
pop
or
sub
mov
lcall
push
mov
jmp
maskmovq
divl
push
add
jp
pop
xorl
sub
out
jne
sbb
mov
xchg
popf
add
mov
js
add
dec
fs
pop
and
movsl
jnp
out
rolb
std
sbb
test
flds
xor
pop
addl
push
sbb
popf
xchg
pop
pop
pop
push
pop
mov
xor
sub
ret
cmpl
mov
aad
imulb
dec
and
xchg
ds
sbb
dec
imul
inc
popa
jo
or
dec
inc
and
add
shlb
sbb
dec
or
jecxz
push
out
inc
lahf
dec
in
mov
jbe
jl
popf
adc
xchg
push
mov
pop
mov
leave
and
cltd
cmp
sub
add
pop
ds
sarl
add
cmpsl
lret
fsubr
loope
imul
mov
movsl
shlb
xorb
mov
arpl
jge
and
jmp
push
out
dec
add
dec
xchg
int3
scas
stos
adc
or
xchg
daa
lds
jnp
jne
jb
push
cwtl
jl
pop
or
subl
cltd
in
xorb
cld
mov
add
out
in
or
jmp
jae
ljmp
add
pushf
pop
je
or
or
dec
sub
or
lods
sahf
mov
lods
jns
pop
inc
jl
lock
data16
push
jno
inc
cli
add
jle
or
jle
shrl
xchg
and
mov
pusha
int3
les
adcl
xchg
shrl
lods
push
aas
inc
jmp
mov
push
clc
test
mov
sbb
sbb
add
push
cmpsb
inc
fsubrs
sub
hlt
and
and
shlb
push
push
out
test
fidivl
fdiv
sbbb
cmp
das
xchg
mov
xchg
sub
out
shr
cmp
sbb
sub
adc
aaa
pause
out
inc
xchg
add
jmp
mov
mov
push
mov
fwait
sub
and
out
int
xor
xchg
sti
outsl
xchg
sarb
scas
int3
mov
push
pop
insb
xchg
or
mov
jbe
jge
out
inc
pop
push
xchg
ljmp
and
iret
sbb
aas
fsubp
cmc
dec
push
jmp
or
dec
ret
pop
into
jnp
mov
stos
pop
les
mov
pop
or
jno
sub
xchg
mov
loope
and
shr
jmp
inc
cmp
mov
sbb
fstl
cmc
aas
xchg
icebp
adc
sub
imul
or
popa
cld
add
inc
outsl
push
mov
push
lahf
movsb
pop
std
dec
imul
les
push
push
aad
addb
pop
mov
test
mov
fnstenv
add
cmc
pop
xchg
inc
bound
dec
stc
imul
mov
and
scas
xchg
imul
gs
sbb
add
rcl
loopne
inc
addr16
into
imul
inc
or
jnp
decl
iret
iret
add
push
pop
sub
stos
rorl
ss
mulb
jl
icebp
push
inc
and
adc
sub
dec
fisubl
jmp
int
iret
dec
mov
xchg
bswap
mov
mov
shlb
push
fisubrs
aaa
lea
or
test
imul
sbb
stos
add
push
adc
dec
add
mov
push
adc
push
mov
jmp
inc
loope
inc
loop
and
mov
sti
lahf
lret
rcrb
dec
lret
pop
nop
inc
mov
mov
popf
dec
xor
mov
je
faddl
or
push
int
jl
xor
les
mov
pop
mov
and
adc
or
fs
jns
div
je
loopne
stos
ret
cmpsl
loope
mov
lods
sub
idivl
or
push
jg
sbb
or
sbb
push
or
dec
add
movsl
pop
mov
leave
sbb
popa
mov
or
or
pop
cmp
jno
mov
cmpsl
popa
and
ret
dec
sbb
adc
es
lret
push
mov
repnz
dec
js
add
adc
mov
hlt
cmpsl
je
inc
dec
or
mov
or
jno
mov
cmp
loopne
pusha
jnp
les
lcall
insb
xchg
das
sub
pop
outsb
mov
xchg
cmp
cmp
iret
pop
xor
aaa
add
je
faddl
inc
dec
pop
popa
lock
insb
in
ret
lahf
outsb
ret
push
test
inc
in
inc
xchg
roll
pop
filds
test
insb
cltd
sbb
dec
fildll
mov
lcall
xor
shll
je
or
add
pop
mov
rclb
inc
cmc
dec
test
jmp
repnz
cmp
data16
in
xor
movsl
xchg
xchg
fsubs
sbb
sbb
std
inc
scas
aaa
orb
popf
stos
xor
sub
fdivrs
outsl
add
or
je
push
xchg
les
ret
mov
loope
stos
adc
call
addr16
adcb
pop
orl
fisubs
cmpsb
loopne
js
int
movsl
jmp
test
out
mov
in
cmp
jge
fildll
test
lock
cmpsl
test
push
mov
inc
push
dec
inc
lcall
inc
fcoms
iret
sti
push
push
jo
and
jno
and
xlat
jecxz
cmp
cmp
or
jge
cmp
add
jno
mov
imul
add
cmc
movb
xchg
mov
adcb
add
mov
daa
add
mov
jo
and
scas
add
sbb
or
dec
mov
cmpsb
add
dec
mov
mov
dec
arpl
jno
jp
mov
fiaddl
inc
mov
sbb
mov
sahf
push
jo
imul
outsb
ret
jecxz
jno
xchg
pop
ret
shlb
enter
clc
xor
jecxz
add
clts
mov
sbb
hlt
pop
rol
jno
movsl
into
popa
xor
add
jno
lcall
mov
inc
pop
jmp
xlat
ret
ficoml
add
in
leave
pop
fs
iret
je
popa
adc
lea
inc
outsb
jmp
loop
pop
out
cmp
add
mov
pop
ljmp
shlb
adc
mov
push
mov
js
gs
pusha
scas
lds
inc
call
cmp
ret
jbe
addl
imul
jp
call
fisttps
sar
push
popa
fstl
popa
mov
mov
iret
loop
sbb
andb
arpl
pop
inc
movl
or
inc
dec
mov
mov
jl
sub
or
rcr
mov
ret
sbb
push
notb
and
jne
cmpl
int
int3
push
jle
fadds
xchg
adc
or
dec
pop
pop
popf
dec
in
into
xchg
call
fsubs
cmc
mov
or
in
mov
in
fstl
add
add
jns
or
adcb
sarb
or
lock
nop
push
sub
dec
orb
xor
and
enter
adc
lds
imul
outsl
pushl
roll
mov
fldcw
sbb
jmp
pop
xchg
and
mov
lods
mov
xor
bound
ret
fdivs
lret
cwtl
nop
mov
jnp
scas
arpl
std
bound
xchg
cld
lods
xabort
jecxz
jno
inc
lods
and
mov
add
sbb
aad
out
je
xchg
jle
movsb
dec
cwtl
sbb
pop
adc
je
mov
fiadds
adc
push
cmp
jge
sbb
aas
sarl
sbb
push
or
adc
push
les
mov
iret
insb
and
xchg
aad
fs
xchg
push
sbb
setns
fs
mov
add
dec
aas
cld
pusha
call
test
sbb
mov
test
mov
and
or
mov
arpl
push
enter
add
leave
lret
xchg
test
jae
outsl
dec
inc
sub
add
repz
or
jp
cmp
adc
test
add
or
mov
dec
push
inc
mov
ret
test
push
add
xor
fsubr
adc
imul
xchg
bnd
bound
xchg
mov
xor
jl
push
shlb
mov
enter
mov
xor
pop
sar
pop
mov
inc
sbb
dec
pusha
ret
loopne
mov
insl
or
mov
add
mov
or
aam
test
push
js
imul
sbb
and
stc
jns
inc
imul
pop
cmpsl
sub
xchg
popf
and
dec
push
test
imul
mov
xchg
or
hlt
imul
push
mov
cmpsb
sub
in
dec
jmp
popf
loop
sbb
push
out
test
inc
xorb
jg
xchg
sub
or
test
mov
test
test
je
add
gs
jo
mov
add
inc
call
push
mov
std
cltd
adc
loopne
push
imul
iret
int
push
sbbb
imul
cmp
sbb
insl
cmp
add
jns
or
add
pop
icebp
push
ret
test
shll
pop
mov
stc
jno
add
jno
test
and
aaa
xchg
xor
cmp
stos
xor
dec
pusha
std
dec
mov
jl
inc
cmc
pop
arpl
or
jmp
inc
push
cmpsl
cli
jns
jl
jne
push
ja
push
daa
jo
dec
ja
aaa
push
shl
addb
dec
das
ror
push
mov
cmp
loope
push
mov
mov
jbe
ja
adc
cmp
jo
or
int3
xor
in
movsb
mov
or
cmp
pop
adc
push
sub
jne
push
add
lods
int3
mov
add
js
pop
sti
mov
pop
xchg
adc
dec
xor
and
jle
mov
xor
fadd
fwait
cmp
notb
inc
push
cmp
cli
pop
lods
add
add
sbb
pop
cmpsb
push
add
es
sbbb
inc
sbb
pop
loopne
dec
psrlw
or
flds
adc
push
sbb
push
dec
cmp
leave
mov
mov
pop
in
fbstp
inc
and
inc
mov
mov
lods
and
add
mov
testl
es
adcl
jle
sbb
mov
jae
lods
push
push
xor
outsl
add
inc
aam
arpl
andl
inc
push
mov
mov
popa
stos
std
int3
cmp
jne
pop
cmpsl
and
or
in
jo
pop
imul
and
fiadds
in
dec
mov
pop
and
nop
scas
cmpsb
ffreep
xor
or
push
and
in
add
loopne
mov
js
sub
iret
xor
mov
dec
or
jo
adc
pop
pop
imul
add
push
sbb
lret
mov
popa
xchg
xorb
lcall
popf
push
repz
shlb
mov
sbbl
and
jl
fdivrs
mov
loopne
push
or
mov
scas
les
or
mov
jbe
mov
icebp
cmp
or
push
adc
add
bound
cs
push
stos
xor
mov
lods
jbe
hlt
push
cli
insb
lods
stos
mov
xchg
push
inc
int
mov
ds
or
addr16
dec
rorl
es
mov
dec
scas
je
xchg
and
dec
ljmp
aam
test
das
lahf
and
mov
adc
adc
jge
and
push
cs
push
jecxz
adc
dec
shrb
pop
sbb
outsl
les
aaa
cwtl
repz
add
js
push
inc
add
in
sarb
xlat
add
sbb
mov
push
jbe,pt
mov
or
cmp
pushf
xchg
inc
cmp
call
and
movsl
jbe
or
shll
mov
xchg
fcoml
inc
add
cvtdq2ps
push
inc
mov
xor
aad
lods
lret
fstl
push
call
mov
push
mov
mov
andb
outsb
or
sbbl
xchg
pop
repz
fcomps
call
mov
mov
mov
cmp
mov
push
xchg
jecxz
sar
push
hlt
pushl
shlb
add
clc
sbb
xchg
ss
cmp
push
add
push
into
add
xor
daa
mov
fcmovu
insb
push
push
movsb
sub
or
das
popa
sbb
sub
xchg
adc
add
js
iret
add
xchg
aaa
pushf
push
push
sub
sbb
aam
ja
je
mov
aaa
std
and
sbb
arpl
test
sub
cmp
loopne
les
out
sbb
dec
jno
lahf
sbb
das
xchg
mov
test
sub
leave
test
and
dec
invd
cmp
test
pop
in
add
inc
xchg
arpl
cmpsl
add
and
add
addb
inc
fwait
icebp
fiaddl
add
mov
sbbl
sahf
sbb
iret
pop
and
test
leave
insl
jo
cmp
cmp
pop
push
es
jmp
add
outsl
cmpsl
nop
icebp
inc
movsl
xchg
or
pop
sbb
or
imul
mov
add
aaa
mov
lret
jle
ja
in
xchg
sbb
mov
out
outsb
xlat
jo
das
pusha
pop
push
imul
cmp
sbb
lods
add
add
sbb
xchg
cmp
and
gs
fmull
cmp
or
pop
mov
test
stc
movsb
pop
sbb
fnstsw
jecxz
pop
orl
aam
inc
push
lret
cmp
dec
mov
or
test
lds
dec
mov
dec
sub
not
popa
inc
cmpsl
ljmp
fildll
adc
aaa
movsb
adc
xor
popf
sub
fwait
lods
xchg
negl
shl
push
arpl
fwait
out
jo
mov
add
stos
inc
inc
push
sbb
jae
inc
out
sahf
mov
fistl
fldt
cmp
mov
pop
rolb
addl
inc
and
push
mov
sub
push
mov
test
orb
xor
mov
push
xchg
xor
jecxz
rol
repz
push
lods
and
add
mov
pusha
jge
sahf
pop
jnp
cmp
leave
ret
filds
push
sub
or
and
nop
fs
lea
enter
fildl
mov
xchg
lret
mov
add
or
xor
cld
lock
inc
mov
iret
repz
push
or
push
mov
sbb
add
push
pop
stc
out
loopne
adc
shll
outsb
jbe
scas
sub
or
sahf
int3
jg
rcrl
sbb
adc
pop
add
mov
das
loop
xchg
pop
ljmp
or
adc
fildll
icebp
fs
insl
inc
mov
loopne
dec
sbb
push
movsb
xlat
and
clc
xchg
mov
pop
jno
mov
add
xchg
leave
mov
push
jo
xchg
shrb
inc
and
mov
loopnew
add
pop
pop
out
mov
mov
leave
lods
mov
pop
mov
bound
or
mov
adc
lods
lea
jge
shll
sub
or
loop
inc
mov
xor
mov
lret
lods
fmul
ret
es
jo
push
call
jge
xlat
jns
mov
cmp
cs
or
shlb
fcomps
or
int
sbb
add
js
sbb
adc
dec
js
daa
fs
pop
gs
arpl
xchg
aad
sbb
pop
sbb
mov
jle
sbb
cmc
fldt
and
lahf
frstor
add
push
dec
xchg
mov
or
cwtl
and
xchg
pop
mov
mov
pop
ja
mov
and
pop
lret
pop
jmp
push
clc
push
xchg
cltd
mov
push
es
dec
add
mov
pushl
adc
xchg
push
iret
mov
fistpl
loope
and
mov
push
es
xor
ljmp
imul
ds
and
pop
fadd
and
sbb
or
loope
lret
dec
or
rcll
cmp
sub
inc
cmpsl
in
or
outsl
push
jns
mov
pop
adc
xchg
adc
and
add
inc
mov
add
xor
lret
out
push
fildll
and
adc
js
outsb
jns
and
mov
int
ret
aad
xchg
aaa
xchg
mov
mov
ds
and
jmp
jp
lret
lret
fstl
pop
or
jns
and
or
add
or
in
pop
test
imulb
or
fistl
and
dec
aas
or
jmp
pop
add
mov
mov
dec
add
xchg
and
sub
int3
ja
arpl
into
push
scas
dec
and
ja
jmp
jae
jge
sbb
cmp
cwtl
aaa
pop
or
or
sbb
add
test
rcll
sbb
push
xor
add
jne
pop
and
test
add
or
es
push
ror
divb
js
loopne
add
call
add
and
psubq
fildll
push
pop
xor
inc
inc
and
in
inc
cmp
mov
sbb
push
scas
sub
pop
mov
je
inc
dec
adc
xorl
loopne
xchg
push
add
add
pop
fldenv
inc
pop
cmp
pop
dec
and
and
inc
dec
arpl
jne
inc
dec
jp
cltd
pop
ret
clc
add
in
cmp
aam
or
scas
inc
mov
dec
lret
imul
xchg
bound
xor
mov
sub
mov
or
push
cmpsb
sbb
fs
ljmp
pop
or
pop
outsl
ltr
push
or
repz
push
int
cmp
aaa
gs
inc
mul
jl
adc
push
outsl
pop
xor
shll
jmp
mov
dec
daa
and
inc
int3
ret
xlat
shll
insl
ja
aaa
pop
andl
lret
sahf
test
mov
daa
push
sub
imul
sub
dec
add
outsb
adc
adc
nop
in
outsl
sbb
mov
sub
sbb
sbb
nop
filds
rolb
push
add
inc
das
dec
sbb
inc
and
jl
mov
xchg
sbb
int
and
or
add
push
xor
stos
mov
xchg
mov
insb
int
imulb
cmpsl
cmpsb
cmp
iret
in
xor
jg
and
or
orb
ret
push
xchg
and
iret
ficompl
cs
and
push
hlt
jne
sub
xchg
enter
fisubl
mov
aas
es
xchg
insl
pop
and
in
adc
addl
dec
cmp
jle
inc
addr16
cmpsl
cwtl
mov
jmp
imulb
jle
push
rcl
xchg
mov
and
push
inc
addr16
mov
and
loopne
adc
jae
clc
or
mov
add
jnp
mov
daa
daa
cmpsl
adc
mov
sub
jecxz
mov
add
test
popf
std
lods
and
or
fstps
js
add
add
push
xchg
lock
lock
jmp
sub
popf
dec
test
ss
repz
cmp
ljmp
loope
ret
jg
je
xchg
sub
add
daa
mov
mov
and
mov
sbb
test
push
scas
xor
add
xchg
jle
js
scas
sbb
cmp
ds
test
mov
fwait
jmp
mov
inc
dec
xchg
and
pop
out
xorl
cmp
add
cmp
add
or
das
push
adc
imul
adc
and
fcmovu
push
mov
clc
xchg
test
push
rcr
and
lds
cmp
jae
mov
hlt
lcall
mov
mov
mov
xor
das
mov
mov
and
or
sti
inc
push
popa
xchg
pop
inc
cmp
add
bound
add
lret
and
aas
inc
and
push
xchg
and
add
hlt
insl
add
stos
cmp
inc
push
les
inc
jne
inc
dec
test
and
jg
loopne
lods
xor
ss
adc
jne
das
cmp
push
sbb
sbb
sub
ss
sub
ret
xor
leave
daa
hlt
mov
stos
stos
outsl
add
push
jp
lds
addb
fs
loopne
add
sbb
xchg
or
pop
insl
jo
xlat
push
sub
inc
lcall
adc
stos
xorl
push
cmp
repnz
ret
test
js
insl
lods
and
mov
adc
scas
sub
fucom
sub
mov
in
lods
add
add
dec
dec
int3
into
ja
inc
adc
push
lcall
sub
and
cmp
add
sub
lcall
inc
sbb
cmp
cmp
int3
sub
cmp
pop
into
inc
pop
sub
fists
or
push
xor
jo
sbb
mov
fisttpl
jg
hlt
push
ds
jae
lea
js
sbb
mov
dec
psrlq
push
cmpsl
popa
nop
and
popf
rorl
jbe
rcrb
test
outsb
add
aam
dec
stos
cld
inc
add
push
lock
orl
xor
sbb
jmp
outsb
jne
lock
popf
loopne
sub
loopne
add
shll
movsb
fstps
fnstcw
mov
mov
push
sub
mov
xchg
cwtl
cmpsl
mov
inc
jns
mov
jne
stc
inc
pop
movsl
shll
lahf
add
and
fbld
sbb
push
ss
mov
cld
into
add
add
jmp
xchg
push
mov
into
add
leave
mov
cmp
dec
shlb
in
gs
jns
jmp
mov
push
jnp
add
fsubrs
cmp
andl
add
sbb
icebp
in
movsb
push
mov
int3
cmp
ja
into
add
fidivs
mov
xor
push
jl
insb
sbb
jnp
mov
fiaddl
aaa
daa
push
js
filds
xor
jns
sti
jecxz
add
es
inc
jbe
pop
fcmovbe
cmpsb
mov
add
ss
add
or
add
dec
mov
jbe
rorb
mov
push
add
out
cmp
jmp
sub
arpl
testl
das
popf
jge
js
aad
sbb
pusha
mov
xlat
push
mov
jmp
idivb
pop
or
adc
ret
push
in
sti
mov
cmp
negl
adc
mov
mov
cmc
test
push
xor
into
in
add
outsb
imul
gs
jno
pop
out
jbe
sbb
out
push
in
jmp
aam
jne
lods
adc
adc
orl
repnz
into
test
shrl
sbbl
cmp
mov
jge
divl
adc
out
pop
lret
or
dec
dec
mov
mov
pop
xor
inc
repz
lods
push
negl
jbe
rclb
repz
fidivs
aaa
xor
bound
icebp
cs
jecxz
int3
add
loop
and
dec
jo
shrl
mov
rorl
mov
iret
xchg
xchg
loopne
inc
xchg
fwait
pop
scas
jnp
mov
into
xorl
add
mov
fdivl
inc
lods
xor
add
cmp
idivb
pop
inc
push
push
popf
mov
shrd
cmp
mov
in
cmp
mov
cmp
lahf
pop
pop
scas
inc
or
or
dec
xchg
aaa
jo
push
mov
inc
xlat
push
or
fadd
add
loope
aaa
idivb
mov
xor
rdpmc
in
sti
mov
xchg
jne
push
cs
fstl
sbb
push
stos
bound
ret
rcll
scas
adc
pop
out
ja
ret
loope
test
dec
aad
insb
mov
lds
gs
ja
add
and
add
movsl
ret
xor
adc
inc
add
and
dec
ja
and
arpl
cmp
sbbl
stc
fsubrs
in
movsb
sarl
push
nop
pop
mov
outsl
xorb
es
test
addr16
testb
inc
mov
add
not
xor
pop
jns
dec
fadds
pop
dec
stos
out
addl
int3
insl
out
jns
lret
aaa
test
cmpl
test
dec
inc
xorl
rorl
jae
push
rcrl
cmpsl
scas
add
jle
dec
es
xchg
or
lahf
jbe
inc
sub
fsubr
or
sub
rcrl
popa
xlat
fwait
jo
cmp
jge,pn
lds
test
popa
cli
pop
jecxz
loopne
jl
aam
inc
mov
xchg
ss
mov
mov
sbb
sub
add
mov
mov
loope
pcmpgtb
xchg
insl
frstor
aaa
mov
and
test
loopne
dec
ret
mov
inc
ret
mov
jge
mov
roll
xor
fsts
lret
and
pusha
and
test
hlt
cmc
push
and
inc
add
test
mov
ret
xchg
icebp
xor
movsb
bound
adc
ret
xlat
xchg
pop
mov
dec
mov
ret
jge
xor
decl
push
fdiv
ret
mov
mov
xor
nop
push
shrl
dec
mov
mov
in
xchg
adc
int
lahf
mull
int3
xchg
sar
popa
movsb
and
adc
push
sbb
movzbl
xor
mov
jb
in
lea
pop
add
out
push
jmp
sbb
addl
jns
or
aad
adc
pop
xchg
add
sbb
test
pop
mov
xchg
sub
mov
cmp
js
insb
xor
ljmp
aas
addr16
fists
xchg
mov
lret
xchg
jge
cmp
aaa
es
outsl
bound
lldt
rorl
imul
xchg
jmp
mov
sbb
add
popf
jbe
movsb
inc
mov
adc
and
mov
jns
add
xchg
mov
aam
lds
jbe
lret
int
les
cltd
add
adc
into
lret
ror
rcl
test
movsb
lds
xchg
fimull
shl
insl
jge
dec
test
das
icebp
cmpsb
movsl
push
xor
add
xchg
insl
adc
cmp
icebp
sahf
nop
sbb
mov
mov
xor
cld
adc
mov
cmpsb
stc
adc
or
pop
xchg
sub
sub
daa
push
ficomps
xor
pop
jo
xor
or
fwait
dec
cmp
into
rclb
lods
pop
adcb
inc
ret
cmp
std
sti
cmc
jbe
ja
test
inc
sti
shrb
test
inc
mov
xor
dec
stos
mov
lea
jno
enter
int3
popa
mov
sub
jp
adc
add
pop
adc
out
sub
popf
xchg
fidivl
fstps
jno
lock
pop
or
xchg
roll
sub
xchg
adc
test
cmpsb
pop
popf
cmp
lods
lahf
adc
out
dec
cwtl
dec
xchg
jg
push
sbb
aaa
pmaxsw
or
decl
sub
scas
push
jo
dec
pop
popa
mov
popa
test
lret
call
cmp
sbb
mov
push
jge
and
add
fsubrs
sahf
xor
sbb
jno
xlat
add
jns
in
add
repz
xchg
cmp
in
das
cmpsl
cli
lcall
and
cmp
sub
sub
mov
jg
mov
fists
loopne
push
sub
jo
iret
enter
test
pop
dec
push
frstor
jle
push
mov
fnstcw
mov
mov
insl
add
pop
inc
fwait
push
and
fwait
inc
add
sub
popl
inc
jae
in
mov
adc
xchg
push
adc
cmp
adc
enter
adc
mov
dec
sbb
xchg
inc
aam
xchg
emms
xor
mov
jno
mov
mov
lret
sbb
mov
mov
and
stos
stos
or
cwtl
xor
ljmp
mov
cmp
mov
or
out
pop
dec
mov
push
xor
mov
lods
movsl
fldl
fwait
aaa
cmpsb
arpl
int
in
xor
ret
adc
inc
or
shr
or
test
cmp
cmp
push
lret
inc
repnz
pushf
aas
sub
mov
mov
into
mov
sub
imul
loop
jp
sbb
push
dec
adc
fbstp
dec
jne
pop
roll
enter
or
lods
das
sbbl
jp
cmp
aas
out
and
es
icebp
mov
ret
jno
in
pop
iret
jmp
dec
mov
push
shll
cltd
daa
lahf
cwtl
push
popf
jecxz
mov
lock
sub
aaa
into
sbb
lret
stc
fdivl
mov
outsb
jnp
or
add
andl
cmp
mov
cmp
in
notl
push
aas
fcmovne
fsubs
cmp
mov
inc
das
sbb
inc
in
in
mov
ret
sbb
in
orb
mov
inc
cmp
dec
pop
arpl
sbb
fdivrl
add
out
jl
mov
ds
insl
leave
xlat
sbb
scas
fucomp
test
add
sti
sub
aas
sbb
dec
int
mov
outsl
ror
jle
jl
add
xchg
sub
inc
inc
insl
loopne
sti
mov
jl
orl
test
adc
mov
inc
iret
add
stos
les
sub
sbb
rcr
or
and
xor
pop
lea
leave
mov
in
pop
jne
jb
lahf
and
add
std
aas
and
stos
aas
and
push
loope
loope
in
xchg
jp
mov
inc
sbb
push
jecxz
jg
cmp
into
or
cmp
outsb
leave
mov
add
mov
adc
cmp
inc
dec
mov
scas
push
jl
iret
mov
or
jne
xor
jnp
je
jmp
sbb
outsb
mov
popf
add
xchg
iret
mov
popa
mov
cmp
xor
stos
inc
mov
daa
test
aad
push
inc
in
mov
cmp
dec
push
loopne
dec
imul
sbb
push
js
jg
nop
mov
xor
out
shrb
rclb
mov
pop
gs
jecxz
test
pop
lods
into
jb
pop
add
and
add
mov
mov
pop
sbb
push
adc
shl
ficomps
adc
test
and
and
xor
fidivs
push
cmc
aas
jmp
sub
mov
pop
and
and
clts
jbe
sbb
shr
add
notb
enter
sbb
inc
loop
mov
mov
sbb
xchg
dec
outsl
sbb
ret
cs
dec
outsb
stos
out
dec
dec
cwtl
add
in
dec
jmp
or
pop
mov
cmp
sahf
ja
or
mov
stc
out
inc
or
fisttpl
popa
jo
scas
iret
xchg
scas
xchg
arpl
mov
ss
daa
insl
add
jmp
mov
rorl
insl
pop
jmp
mov
dec
mov
int
insl
xchg
add
sahf
addr16
test
arpl
ret
pop
lock
pop
aaa
pop
mov
scas
lods
jnp
pusha
je
and
jo
xchg
adc
imul
int
repz
out
rorl
mov
pop
lods
and
xlat
ds
jl
int3
pop
cmp
sub
ljmp
scas
jne
sbb
je
outsl
insb
aaa
mov
lret
rorl
pop
cmc
pop
add
mov
popa
test
daa
cmp
lds
mov
add
xor
xchg
pushf
into
loop
lods
loopne
mov
and
sub
xor
push
sub
mov
sub
pop
pop
repnz
and
inc
loop
lock
arpl
xchg
lods
movsl
lahf
filds
adcb
icebp
mov
int
xor
int
adc
mov
rorl
sub
and
lods
jne
add
or
sbb
pop
lcall
icebp
and
lds
loopne
mov
fsts
xor
push
test
sub
ret
lock
pop
stc
xchg
outsl
aaa
sub
adc
or
icebp
mov
shrb
stos
imul
mov
xor
fcomps
push
push
and
mov
add
outsl
dec
pushaw
repnz
pop
cmp
lods
pop
outsl
ljmp
imul
pop
out
shll
out
out
es
addb
ja
and
pusha
scas
aaa
sarb
orb
push
sub
es
out
nop
mov
in
push
movsb
pand
push
inc
movsb
sub
in
push
mov
pop
ret
or
xor
mov
sbb
sub
fs
fidivs
imul
hlt
arpl
jmp
aaa
mov
nop
lods
jecxz
aaa
mov
mov
xor
mov
mov
repz
ret
xchg
loope
xor
aad
cmp
push
xchg
into
push
or
add
mov
push
repnz
jmp
mov
pop
ffree
mov
dec
push
mov
out
push
mov
pusha
adc
dec
add
xor
sub
pop
add
lret
or
jns
add
in
loopne
jb
lea
jne
imul
push
and
push
pop
imul
and
jp
popa
aas
add
mov
dec
out
xchg
add
bound
jl
int3
push
aas
cmpsl
lods
vshufps
inc
arpl
ja
divb
arpl
cmp
jg
cmc
ljmp
and
mov
cmc
into
push
jle
or
call
or
add
js
test
sbb
imul
stc
mov
add
add
add
aaa
loop
mov
jb
pop
push
in
sbb
add
mov
mov
out
jg
sbb
in
push
cmp
scas
or
jmp
pop
xchg
lret
outsl
push
fld
imul
rclb
xchg
enter
and
aam
iret
add
mov
icebp
or
ret
stc
push
outsl
mov
loope
testl
movl
lds
nop
push
popa
sub
adc
inc
or
outsl
ficomps
dec
dec
or
loope
cmc
adcl
add
and
les
inc
sbb
inc
aas
push
xchg
or
push
mov
jnp
xchg
xor
shll
out
mov
inc
vgetexpps
out
orl
sbb
aam
mov
js
add
push
and
pop
std
outsb
sbb
pop
les
adc
inc
leave
lahf
jecxz
push
popa
jo
push
outsb
adc
imul
lods
adc
adc
xchg
pusha
cwtl
or
xchg
mov
shlb
mov
dec
pushf
mov
rolb
loopne
psllq
adc
xchg
dec
insl
xor
movsl
aas
cmp
mov
ljmp
xor
icebp
cmc
loope
sbb
leave
insl
in
pusha
rorl
cwtl
bound
loope
and
aaa
jp
test
insl
xchg
push
pop
mov
cmp
scas
push
jmp
cmpsl
insl
pop
orb
ret
lret
outsb
and
out
mov
fidivrl
inc
xor
add
cmp
inc
fwait
ret
cmpb
stc
cmp
add
cmpl
mov
jns
pop
dec
dec
pop
jbe
and
pop
jnp
xor
into
jb
or
push
pop
jp
pop
bswap
into
mov
insb
mov
rep
pop
call
push
xchg
imul
imul
jae
shlb
sbb
iret
sbbb
or
mov
jge
sbb
icebp
and
and
lods
jp
push
icebp
jb
add
roll
add
jl
xchg
subl
inc
cltd
int
mov
imul
inc
add
adc
push
mov
stc
sti
jae
mov
rcrb
clc
dec
push
mov
pop
imul
jo
pop
sub
loopne
test
daa
and
xchg
lods
ret
push
jbe
ret
xchg
js
fldenv
sub
stc
mov
outsb
ljmp
xor
pop
aaa
and
mov
and
cmp
jb
lret
add
jmp
pop
fisubrs
fsubs
fs
popa
jmp
add
test
push
hlt
sbb
and
cmpsl
pop
into
jl
xchg
arpl
in
scas
cmp
and
and
fnstenv
outsl
sbb
negl
imul
push
mov
ffree
inc
sub
mov
gs
mov
test
pop
push
leave
pushf
imul
inc
jl
cmp
out
sub
test
int3
ja
cmp
mov
lods
mov
scas
fdivr
fdivrs
fldcw
mov
imul
cli
cmp
cs
popa
mov
cmp
mov
lahf
mov
rolb
rol
adc
jge
icebp
imul
push
out
jbe
cmc
shlb
sbb
loop
mov
inc
and
pop
pop
jge
pop
push
xchg
and
in
inc
cmp
xlat
jne
dec
sti
xchg
sbb
loopne
imul
add
mov
add
cmc
xchg
repz
dec
push
js
adc
shll
cmp
jne,pt
sub
push
and
push
add
out
add
cmp
pop
iret
mov
add
shl
pop
sti
or
mov
aad
bound
fmuls
mov
inc
push
test
roll
or
daa
pop
pop
push
jmp
or
sbb
cmp
popa
ja
sbb
inc
lcall
inc
das
xchg
xlat
ja
imul
and
pop
add
roll
or
or
pushf
sub
lret
cld
add
mull
incb
fisttpll
fmul
aas
dec
xor
loope
outsl
cmp
fldpi
fxch
cmp
jne
jae
mov
sub
inc
sub
or
lods
jbe
cld
jg
push
mov
inc
std
popa
pop
lea
sub
push
adc
jmp
ja
mov
adc
iret
or
xor
mov
add
lret
testl
add
sbb
loopne
mov
sub
jl
fsubs
aam
xchg
negl
mov
bound
scas
jmp
call
xchg
nop
sub
jne
fwait
ds
out
std
xchg
mov
fiaddl
repz
and
and
dec
mov
stc
in
leave
ss
mov
jg
mov
cld
adc
and
xchg
push
imul
xor
push
aas
or
mov
xor
fsubrs
xchg
sbb
dec
dec
js
pusha
in
jnp
sbb
mov
jae
jecxz
pop
cmp
add
rcrb
push
dec
int
les
jne
aad
gs
mov
pop
les
je
out
outsl
test
cmp
stos
add
xor
daa
jae
mov
add
ja
pop
jnp
mov
je
mov
pop
iret
inc
pop
fcomp
lret
xor
lea
xchg
xchg
cmpsb
ffreep
lcall
inc
inc
and
add
mov
mov
imul
je
xchg
pusha
es
cmpl
mov
add
pop
out
mov
pop
lcall
add
xchg
cmp
jne
xchg
in
lods
jmp
testl
jle
inc
inc
cmp
popf
inc
dec
pusha
sbbb
jmp
aaa
xor
xchg
xchg
mov
cmpl
mov
mov
add
mov
sbb
popa
pop
adc
jmp
subb
into
inc
push
lahf
add
inc
push
mov
hlt
test
cltd
or
jb
or
push
mov
cs
push
xor
out
filds
mov
cmp
mov
sub
fists
jno
push
mov
inc
jecxz
filds
insb
mov
pop
aaa
adc
pop
and
push
add
sub
ja
pop
sub
inc
sub
out
fdivl
xchg
sub
imul
push
sbb
aad
or
into
insl
jp
ss
or
xlat
pusha
sub
test
loopne
lea
jp
fdivs
rolb
push
lods
dec
imulb
out
jg
sub
lods
icebp
xchg
cmp
sti
das
in
insb
mov
lcall
lret
adc
in
stc
mov
pop
cmc
lahf
das
dec
ret
push
push
jo
lock
inc
pop
sahf
jns
scas
pop
daa
mov
scas
fnstenv
loop
xor
call
int
pop
mov
and
add
imul
mov
adc
inc
dec
daa
adc
sub
test
or
or
mov
xchg
sbb
faddl
sarl
adc
mov
pop
push
pusha
dec
icebp
out
test
push
xor
mov
sub
outsl
testl
or
mov
adc
mov
push
fstl
push
mov
jg
inc
and
mov
lods
mov
or
ja
leave
xchg
sbb
push
daa
dec
add
mov
push
fwait
imul
pop
fwait
orb
mov
and
xchg
aaa
add
stos
dec
or
lcall
outsl
insl
mov
mov
jmp
sbb
sub
mov
and
outsl
pop
rcr
push
adc
insl
ret
pop
push
cmpsl
adc
push
xchg
mov
out
mov
mov
ret
xchg
dec
pop
mov
and
inc
test
dec
jne
add
lcall
stos
pusha
seta
mov
inc
lds
aas
mov
adcl
and
dec
test
pusha
mov
push
in
aas
push
push
push
shlb
leave
add
xchg
subl
add
mov
xor
stos
push
fisubrl
repz
add
mov
sub
mov
imul
push
add
mov
add
sbb
sub
dec
insl
icebp
xchg
sbb
adc
lods
pop
fldl
push
push
jecxz
bound
mov
inc
mov
addl
shll
mov
sti
lahf
jecxz
xor
sub
bound
data16
icebp
push
cmp
dec
sbb
bswap
pop
lds
jns
cmp
popf
adc
xchg
push
pop
jecxz
movsl
mov
loope
insl
sub
or
or
fisubl
gs
or
lods
stos
inc
mov
in
test
jecxz
or
bound
and
adc
mov
aaa
and
pop
add
add
inc
ret
pop
ljmp
add
addr16
xchg
pop
jo
sbb
pop
bound
or
and
insl
jne
mov
stos
arpl
add
pop
xor
imul
cmp
lea
xor
aad
add
adc
and
sbb
adc
pop
dec
sbb
insl
in
lods
jbe
push
mov
dec
sbb
pop
lods
cmp
or
xchg
inc
jnp
mov
scas
loopne
loope
jnp
fldcw
push
sbb
insl
or
and
xor
data16
sbb
cmp
inc
rcr
aas
xor
fwait
jp
jp
or
shrl
dec
dec
cmp
jns
mov
jp
xchg
out
and
jge
testl
fildll
xor
jns
or
sub
bound
and
mov
out
mov
mov
inc
sbb
dec
push
fidivs
pop
arpl
dec
push
dec
dec
std
mov
pop
add
dec
mov
add
test
pop
popa
add
mov
xor
dec
and
add
add
push
pop
ja
and
ret
jnp
outsb
xchg
or
dec
or
mov
dec
int
loope
mov
mov
or
xlat
scas
jl
orl
inc
sub
inc
mov
or
sub
push
out
sbb
push
add
mov
divl
inc
aas
lret
add
inc
jle
inc
adc
jne
mov
cmp
sbb
add
inc
dec
jecxz
or
and
and
cmp
cmpsl
mov
xor
outsl
fistps
add
aas
pop
das
adc
fists
idivb
ffree
add
pop
sbb
sbb
loop
out
outsb
pop
add
push
pop
insb
divb
cli
pop
ja
outsl
adc
mov
or
das
fnstcw
jne
sub
or
lds
ja
fistl
push
dec
fwait
cmp
sti
mov
pop
aaa
and
add
dec
ja
scas
outsl
aaa
push
jne
and
fcoml
out
aam
pop
push
fsubrp
push
cmpsl
popa
cmpsl
mov
testl
and
sbb
pop
pop
pop
mov
or
fisttps
or
imul
movhps
pop
out
jmp
dec
test
lret
pop
daa
std
addr16
jmp
daa
jnp
inc
aas
inc
mov
and
sbb
out
pop
cmp
fiaddl
or
daa
adc
adc
push
and
inc
int3
and
jo
jbe
mov
cltd
mov
lea
lds
in
lock
loopne
cmp
mov
in
ds
add
jnp
adc
loop
mov
xor
push
dec
jge
mulb
pushf
add
clc
fcompl
cmc
mov
loope
out
ljmp
adc
add
in
add
insb
int3
cmpsb
mov
pusha
aam
pop
ja
das
subb
loopne
loopne
jne
es
mov
add
mov
loopne
js
add
and
jmp
mov
cmp
inc
ficompl
sub
ficoms
je
xchg
cmp
lahf
xchg
and
sub
mov
lea
fisubrs
sub
add
add
insb
mov
xchg
sbb
int3
jge
jle
xlat
lret
cmp
adc
cmp
lret
and
jnp
ret
cwtl
pop
push
sub
add
mov
mov
out
pop
jl
pop
pop
es
stos
pop
filds
outsb
divb
mov
mov
ret
rcll
cs
out
movsl
and
xchg
xchg
push
pusha
pop
push
mov
sbb
dec
fdivr
jg
jne
js
xor
push
mov
xlat
mov
pusha
pushf
sahf
mov
cmp
xchg
mov
mov
cmp
add
test
xor
aas
testb
jp
fdivrl
push
mov
call
js
add
mov
incl
adc
xor
or
out
push
sub
aas
cwtl
sub
lcall
stos
pop
mov
data16
xchg
adc
cmp
jmp
xchg
pop
add
clc
outsl
movl
mov
stc
adc
mov
dec
test
inc
mov
sahf
pusha
mov
mov
xchg
dec
push
ss
mov
loope
js
xchg
imul
ja
cs
sub
hlt
inc
or
jle
pop
xorl
pop
sbb
ret
fcomps
mov
push
test
inc
mov
lds
mov
sub
sbb
dec
gs
and
imul
push
jbe
jmp
je
or
mov
cltd
or
aas
and
inc
mov
pop
cmc
adc
dec
cld
mov
or
leave
xor
es
outsb
push
pop
iret
adc
jo
std
daa
adc
jecxz
cmp
scas
pushl
pop
ret
mov
in
jb,pn
in
shr
ret
stos
add
ljmp
dec
nop
xor
scas
insb
dec
inc
xchg
mov
xor
sbb
movsb
loope
sub
pop
lcall
adc
xchg
repz
daa
sub
push
and
add
mov
push
adc
xchg
pop
sbb
vpmaskmovq
loopne
mov
xor
push
das
into
and
and
inc
push
ret
aas
call
inc
xchg
mov
lea
inc
mov
xor
clc
scas
cwtl
jmp
jbe
xchg
arpl
dec
inc
in
push
adc
lret
adc
add
call
aam
pop
push
sbb
shl
add
jnp
add
enter
sbb
pushw
xor
shrl
shll
fldl
mov
aad
add
bound
bound
enter
in
xor
inc
add
pop
sub
ror
adc
lods
mov
ljmp
mov
xchg
test
out
cld
mov
adc
or
cltd
or
stc
push
leave
in
inc
push
roll
pop
fmull
ljmp
adc
fistl
sub
js
mov
divl
lcall
imul
cwtl
mov
add
adc
mov
cmp
fs
xchg
mov
lds
shlb
push
add
test
mov
mov
sub
mov
push
mov
ret
push
xchg
js
call
loop
add
xor
mov
subb
ss
pushl
mov
sbb
inc
int3
inc
adc
sub
and
pop
push
loopne
xchg
jle
sbb
adc
push
jmp
or
jecxz
add
in
add
insl
xchg
dec
dec
daa
xchg
xchg
std
jbe
insb
xchg
imul
xchg
pop
mov
ficompl
push
dec
cmp
ja
mov
add
sub
pusha
inc
or
adc
fistl
addb
push
es
outsl
imul
loop
pop
cmp
pusha
xchg
dec
and
jmp
jnp
ret
or
inc
stc
jb
les
and
mov
rcll
loopne
add
jne
pop
enter
arpl
outsl
outsl
cmp
push
add
dec
cmp
bnd
mov
mov
push
pop
cli
js
dec
xor
in
outsl
add
and
add
js
and
mov
leave
mov
loopne
push
sub
mov
xchg
adc
adc
or
decb
arpl
imul
pop
pxor
mov
dec
into
xor
mov
mov
pop
clc
mov
inc
mov
jne
xor
mov
insb
push
pop
jns
jmp
loope
and
pop
idivb
cld
test
stos
adc
sub
mov
nop
aad
in
dec
pop
ss
ret
addb
dec
inc
ret
adc
jb
ljmp
push
mov
mov
xor
call
fs
shll
idivb
cld
push
aam
ss
add
add
aam
or
aas
push
jns
arpl
mov
mov
pop
mov
das
pop
test
int
daa
adc
insl
js
in
push
test
push
pop
cmp
jns
dec
test
pusha
adc
mov
xchg
xchg
mov
cmpsb
fwait
cld
pop
outsb
call
mov
sub
stc
adc
jle
sub
jge
fiaddl
push
xor
mov
int
ljmp
pop
xchg
or
pusha
cmpsb
dec
or
mov
or
in
fidivrl
pop
add
mov
sbb
inc
inc
push
stos
ret
pop
cltd
ficoml
or
and
mov
inc
loopne
and
adc
cmpsl
push
imul
or
jcxz
loop
jmp
jecxz
int3
mov
testb
jne
cs
adc
or
lcall
cmovb
pop
add
cmp
test
add
aas
scas
shl
or
mov
cmpsl
xor
fs
sub
sbb
addr16
or
mov
shrl
mov
dec
pop
jne
mov
xchg
shlb
stc
inc
sahf
test
je
jmp
and
push
aad
test
dec
mov
jb
fidivrs
mov
orb
ret
imul
adc
jbe
adc
dec
divl
loope
adc
jmp
xor
aaa
dec
jae
pushf
inc
loope
outsb
inc
ds
lods
xor
lret
xchg
add
jbe
push
push
push
fisubl
cmp
pop
mov
and
adcl
call
and
pop
jo
sbb
mov
pop
jmp
aam
and
hlt
jecxz
mov
orl
cmp
ljmp
jecxz
lods
cmp
nop
cmc
mov
cli
ss
cmpsb
mulb
stos
adc
repnz
dec
cmc
lock
shlb
push
das
popa
addl
cmp
movl
jle
cmpsb
inc
xchg
or
outsb
mov
add
cs
test
xchg
jg
mov
jl
pop
mov
ja
cmpsb
push
cld
ficompl
lods
into
xchg
out
sbb
sbb
aam
nop
movsb
or
fldl
ret
jbe
rcrl
xchg
js
add
inc
sbb
es
or
cltd
pop
movb
stos
cmp
fs
in
xorb
sbbb
mov
pop
fsub
jb
lea
loopne
int
xchg
cmp
pop
jmp
cltd
jno
out
pop
add
mov
les
inc
xchg
insl
ret
rcrb
cmp
dec
mov
push
std
in
adc
arpl
or
xchg
xchg
fmulp
orb
mov
out
push
out
int
mov
mov
xchg
insb
push
jp
jmp
xlat
fwait
adc
nop
cwtl
jb
bound
aam
mov
sbb
mov
lods
dec
jbe
imul
mov
mov
push
cltd
or
pop
adc
ds
bnd
mov
pop
jne
dec
jo
push
sti
sbbb
lock
sub
popf
sbb
mov
shlb
cli
and
fnstsw
mov
cmp
push
out
or
outsb
aas
hlt
mov
inc
fists
xchg
jecxz
mov
push
xor
cmp
fmuls
test
testb
sbb
pop
sub
mov
mov
adc
add
and
repnz
inc
imull
imul
andb
jle
cmp
invd
inc
call
push
loope
cmp
dec
into
push
jns
call
les
mov
push
lds
cmp
jle
sub
outsl
xchg
subl
cmovg
xlat
hlt
jecxz
xor
and
push
dec
mov
ds
fdivr
sbb
sahf
ret
add
int3
lock
lea
jb
loope
ljmp
enter
shl
imul
xchg
iret
cmp
adc
xchg
pop
not
xor
jno
aad
cmpsb
or
pop
mov
cmpsl
mov
push
adc
test
pop
xlat
fbld
lfs
adc
cmp
aas
fimuls
out
nop
sub
jecxz
ss
lods
dec
icebp
jmp
lret
and
je
inc
test
push
pop
pop
cs
fidivrl
lcall
add
inc
cmc
test
mov
in
cmp
add
daa
mov
loop
sbb
and
shr
jo
aaa
mov
pusha
dec
pop
xor
jmp
mov
std
ret
jmp
jo
out
in
mov
mov
adc
into
repz
mov
push
es
clc
fidivrl
cld
lock
jne
scas
add
out
sbb
fidivrs
shrl
cltd
or
add
loop
mov
fidivrs
mov
repz
cmp
cld
or
mov
mov
mov
jecxz
pushf
xlat
cmp
add
mov
jbe
push
or
cmpsb
into
lods
idivb
xchg
insb
add
sub
and
sbb
push
adc
or
or
add
and
in
imul
out
sub
data16
inc
pop
pop
pushf
add
nop
loope
movnti
and
jge
mov
test
sub
jae
shll
push
js
add
pop
call
mov
cmpsl
bound
pop
shll
in
push
jecxz
popf
cmp
testl
ja
sbb
fdivp
and
mov
int3
fs
pushl
sbb
in
adc
fidivrs
pop
jns
aad
loop
loopne
mov
insl
fildl
inc
mov
pop
shrb
clc
or
mov
push
cmc
jl
jbe
insl
xchg
mov
dec
cli
ss
add
pop
jae
lahf
sbb
dec
jmp
or
stos
lea
jecxz
cli
mov
adcb
sbb
sbbb
adc
mov
inc
test
mov
insl
pop
adcb
inc
push
xchg
push
aad
divb
or
add
aas
xchg
loop
pop
pop
mov
aam
inc
out
push
dec
aas
add
test
imul
enter
fimuls
inc
cmpl
rcll
pop
cmp
push
fldt
lret
out
int
test
lods
lcall
push
inc
add
cmp
push
adc
cmp
lock
bound
imul
subb
lret
xor
xor
jb
add
idivl
cmp
pop
mov
test
mov
es
cmpb
xchg
js
mov
xchg
push
arpl
push
in
mov
add
in
mov
imul
jb
pushf
bound
push
ja
pop
insb
jb
test
pop
push
cmpsb
cmp
fmulp
push
lcall
pushf
ret
push
loopne
xchg
sbb
call
scas
scas
fcmovnbe
movsb
lcall
sub
ficomps
adc
bound
add
jb
loop
sub
and
xchg
jp
inc
in
sbb
and
stc
sbb
lret
andl
jmp
pushl
addr16
push
cmp
repnz
cmp
popa
pop
inc
orb
or
bound
mov
test
dec
cltd
cmpsb
popfw
gs
test
fildl
ds
daa
pop
sub
jae
cmp
xchg
push
pop
loopne
test
dec
in
add
cwtl
sarb
add
xchg
sub
mov
mov
sbb
lcall
mov
out
xchg
out
push
lock
mov
pop
out
loop
adc
or
adc
pop
js
pop
mov
in
dec
vunpcklps
dec
dec
pusha
xor
pop
or
hlt
aam
outsb
shlb
enter
mov
test
inc
mov
lea
mov
addr16
dec
or
mov
mov
pop
int3
std
in
mov
mov
shr
lea
or
cmp
and
testb
inc
mov
xor
add
mov
int3
jecxz
xor
jnp,pn
pop
movd
sbb
rorb
pop
mov
push
sbb
stos
lcall
sbb
mov
test
test
int3
and
fisubrs
cli
icebp
dec
aam
sub
jl
adc
sbb
sbb
mov
adc
sub
add
inc
fbld
sbb
mov
push
fdivrl
fidivl
jae
mov
xlat
or
push
cmp
push
mov
outsl
out
xchg
mov
les
and
in
jo
jle
out
pop
testl
jne
out
ret
and
sub
in
push
adc
je
mov
dec
xor
orb
or
mov
ljmp
js
and
call
in
adc
call
lock
mov
fwait
jmp
pop
push
loopne
adc
inc
fimull
pop
sub
sbb
cmp
adc
pop
mov
fdivs
cld
aaa
or
loop
sub
scas
or
ss
out
es
inc
scas
mov
rcrl
outsb
jp
pushf
or
pop
lock
jecxz
jp
jecxz
sahf
pop
enter
sbb
push
mov
pop
dec
add
sbb
fsubrl
mov
push
adc
sbb
jecxz
xor
scas
out
shll
cmp
lock
dec
ja
push
cmp
nop
dec
add
mov
das
xchg
mov
mov
ja
repnz
jne
or
roll
jnp
mov
mov
mov
push
fwait
add
and
dec
fwait
inc
jo
std
dec
test
in
mov
jmp
push
inc
adc
mov
scas
js
xchg
dec
lock
data16
outsl
sbb
jne
enter
jle
and
in
aad
mov
xchg
and
lret
mov
in
out
sub
push
ret
xor
mov
rol
int3
fdivs
clc
dec
hlt
add
loopne
cmp
ficoml
add
inc
js
es
clc
test
pop
js
sbb
loopne
or
pop
in
push
les
ljmp
les
aas
add
cmp
pop
or
sub
je
mov
add
sub
sub
and
cmp
fsubl
or
push
mov
or
repz
push
fimuls
mov
pop
ljmp
loope
jo
jle
inc
icebp
mov
test
loop
adcb
in
push
fcomi
testb
std
inc
out
addb
xor
pop
or
stos
push
loopne
cs
jmp
sarl
fcmovb
pushf
xchg
jne
push
mov
lret
inc
push
xchg
fwait
mov
add
aaa
loopne
sbb
inc
subb
cmpl
out
imul
push
mov
mov
gs
data16
stos
loopne
into
jle
bound
ret
inc
data16
pop
das
std
movsb
and
divb
rcr
rorl
gs
addr16
fdivs
mov
mov
jl
pusha
icebp
jae
lret
jmp
add
mov
aad
rclb
outsb
mov
pusha
adc
jecxz
imul
ja
out
add
xchg
bound
arpl
add
mov
push
jl
repnz
xor
push
cli
pop
mov
jp
push
mov
fsincos
dec
add
mov
rolb
iret
cli
mov
mov
roll
push
add
in
push
in
add
clc
mov
clc
scas
popl
or
mov
add
cmp
imul
add
out
inc
movsb
fs
lahf
xorl
xchg
outsb
ret
sbb
cmp
add
xchg
aas
adc
dec
mov
dec
popa
aaa
imul
xchg
jne
dec
mov
inc
jbe
cmc
mov
lea
pop
pop
aaa
loope
repz
popl
call
pop
xchg
rorl
ss
popa
negb
inc
jbe
stos
or
sbb
fxch
ja
std
jle
xchg
adc
ret
mov
xchg
jnp
lea
jecxz
adc
ret
inc
fadd
mov
mov
std
mov
ret
in
mov
aaa
inc
xchg
sbb
mov
clc
sahf
add
xor
or
out
push
sbb
pop
scas
push
xchg
ljmp
dec
orb
xor
sub
stc
lea
out
mov
test
sahf
cmp
lahf
inc
mov
out
xor
pop
out
pusha
push
or
cmp
addr16
inc
cli
scas
inc
or
imul
xor
mov
andb
rcrb
nop
out
out
arpl
pusha
jbe
in
push
sub
shrb
xchg
cltd
mov
xchg
sub
mov
in
or
mov
pop
pusha
dec
mov
xchg
mov
lea
sub
dec
xchg
add
push
fdivrs
cmp
loopne
mov
xor
jle
imul
outsl
add
or
or
lahf
lret
xchg
pop
xor
jmp
shrl
push
sub
cmc
inc
repz
sub
or
inc
in
inc
pop
pop
and
inc
add
fimull
imulb
pop
pusha
cltd
shrl
insb
push
int3
jnp
lds
js
mov
mov
mov
pop
loope
cmp
and
inc
dec
and
ja
jg
cmp
pop
xchg
cmp
sahf
daa
addr16
repnz
adcl
mov
sbbl
iret
push
xor
loop
xor
cmp
shll
mov
daa
push
push
in
pop
push
jle
xchg
mov
lods
xor
pop
jb
mov
int
sahf
pop
push
insl
int
fndisi(8087
loope
add
xchg
sub
push
inc
inc
add
mov
xor
pop
dec
lcall
aam
or
sub
xor
xor
cmp
cmp
mov
and
aaa
inc
adc
push
cmp
sub
jmp
xor
std
jo
and
sub
push
adc
cmpsb
aas
les
rcr
jno
add
lods
dec
jb
dec
inc
inc
aad
add
rorb
sbb
mov
mov
adcl
or
call
mov
cmc
pop
push
lea
pop
jle
les
sub
insb
push
shl
adc
jle
add
lds
call
dec
or
jge
or
inc
clc
ds
cld
andl
add
xchg
int
xchg
add
test
pusha
xor
mov
push
jp
int3
cmp
mov
inc
inc
inc
inc
jge
add
or
arpl
jne
test
insb
or
pop
xchg
test
and
push
clc
mov
out
pop
faddl
lods
inc
adc
dec
add
push
test
dec
adc
pop
and
mov
mov
or
inc
jns
xor
xchg
std
and
jle
push
sbb
add
inc
pop
xor
inc
add
addr16
out
pusha
dec
inc
push
roll
push
lretw
mov
cmpsl
inc
xor
mov
inc
xchg
fsubrp
cs
sub
lcall
mov
sbb
xor
aad
cmp
cmp
fbld
cmp
mov
adc
das
ss
mov
mov
and
jmp
add
xor
add
add
pop
mov
and
ljmp
inc
ret
and
push
and
push
jne
and
dec
nop
cmp
pop
popa
in
mov
push
outsl
pop
cld
pop
push
aaa
jl
sbbb
int
lret
aam
fwait
sahf
sub
pop
jo
stc
cs
sbb
mov
cmp
pop
decb
jmp
jge
fdivrl
js
aas
fldt
xchg
inc
leave
push
gs
push
sbb
add
popa
pop
jecxz
jbe
cltd
lcall
imul
xor
test
das
adc
call
sbb
inc
fldcw
daa
repnz
jbe
and
mov
xchg
xchg
push
mov
test
les
int
sub
dec
cmp
hlt
fsubrs
or
outsb
lret
push
repz
mov
pusha
outsl
adcb
outsb
push
jbe
mov
ja
sbb
jmp
mov
cltd
mov
jg
or
pop
je
jb
testb
push
jne
pushf
pop
add
dec
sti
mov
aad
dec
dec
cli
sbb
xor
loope
sbb
inc
inc
inc
and
add
sub
insl
inc
test
ret
add
ss
lret
cmp
jbe
pop
push
shlb
int3
mov
inc
es
add
jge
push
pop
mov
push
add
pusha
xor
add
and
xor
mov
stc
insb
imul
cmp
cmp
movsl
daa
inc
or
xlat
mov
mov
sahf
mov
ficompl
inc
sub
dec
pop
or
mov
out
add
popl
add
mov
pop
outsb
pop
inc
mov
sub
or
hlt
pop
jmp
push
fs
xchg
outsl
rclb
sub
sub
out
xchg
adc
lea
dec
push
pop
dec
stos
mov
xor
add
push
add
push
push
fidivs
jge
lock
adc
out
push
xchg
adc
and
inc
jecxz
mov
adc
push
sub
push
cwtl
subb
data16
push
and
daa
add
cmp
and
jo
ss
lock
ds
or
ret
pusha
inc
std
cmc
xchg
xchg
sbb
ret
dec
js
test
lods
fcoml
cmpsb
mov
sub
lods
jp
cmp
pop
add
push
daa
push
jge
xchg
fisubrs
ret
out
push
in
outsl
adc
xchg
lock
mov
jecxz
lcall
scas
frstor
xchg
insl
outsl
add
dec
mov
fs
pop
jge
inc
jo
pop
and
andb
lret
pop
mov
and
add
or
and
or
sub
lcall
sahf
mov
jns
mov
mov
scas
sbb
push
add
sahf
das
addl
rorl
in
ficoml
mov
push
and
in
cmp
push
push
test
mov
or
inc
inc
or
mov
fdivl
push
cs
testl
add
fidivl
inc
enter
loopne
out
pop
ds
aas
je
fidivrl
sub
push
je
mov
mov
push
xor
push
push
fisttps
dec
mov
push
sub
out
add
sub
mov
mov
xor
cwtl
jb
fbld
sbb
je
sbb
inc
jno
bound
dec
mov
popa
inc
and
popa
loopne,pn
lods
sarl
cmp
jns
jmp
cmp
jne
add
jo
mov
inc
sbb
cmc
inc
loope
sub
sahf
enter
lahf
add
pop
jg
jnp
inc
xor
xchg
hlt
sbb
adc
loope
leave
call
pop
inc
xchg
add
cmp
pop
sub
mov
mov
xor
mulb
dec
push
out
fmull
mov
aad
ficomps
mov
inc
sahf
lret
inc
jns
jecxz
test
pop
cs
adc
and
mov
ja
and
mov
mov
push
fcoml
test
pop
push
cmp
mov
xlat
and
cltd
movsl
adc
lea
push
pop
sti
xor
lock
mov
jnp
mov
outsl
mov
xchg
mov
shlb
cmp
or
xchg
fmuls
xchg
mov
push
mov
jp
aam
jne
push
out
add
sbb
imul
loopne
cs
or
add
and
or
addb
cmp
clc
out
fdivl
push
pop
inc
adcl
or
test
dec
mov
mov
push
xor
incb
adc
scas
pushl
push
loop
add
popa
ds
dec
pop
dec
dec
xor
scas
or
cmp
push
les
sbb
mov
cmp
add
out
mov
in
je
inc
mov
mulb
and
xchg
test
shrb
lock
pop
inc
sbb
sbb
dec
cli
and
push
int
jnp
mov
adc
push
mov
sub
or
mov
and
imul
xchg
push
xor
and
aaa
loop
out
add
sbbl
jbe
add
pusha
lods
in
adc
mov
fstpl
popa
je
and
add
ljmp
sub
fs
xor
mov
pop
inc
jbe
xchg
add
cltd
mov
fs
xor
sbb
in
add
cmp
mov
sbbb
add
pop
pop
out
sub
in
out
pop
jl
std
jbe
push
pop
negb
xchg
cmp
xor
xchg
int3
mov
popa
push
xchg
enter
inc
mov
fs
and
add
and
loopne
sub
add
pop
test
push
fwait
push
inc
ficompl
pushf
hlt
inc
jle
in
mov
dec
mov
mov
push
push
adc
loope
xor
add
imul
jecxz
xchg
add
sbb
push
push
jge
scas
les
sarb
leave
sbb
pop
loopne
mov
inc
rolb
sar
mov
fs
mov
mov
mov
mov
std
push
out
outsl
cmpsl
inc
adcl
mov
xchg
enter
pusha
pop
rcrl
rcl
pop
rorl
pop
jbe
loopne
outsl
jp
std
push
pop
or
bound
pushf
sub
movl
mov
push
xchg
mov
dec
pop
push
fcmovnb
mov
inc
and
mov
int
jne
fs
call
xchg
mov
inc
pop
push
outsb
push
pushw
js
inc
lods
inc
push
je
int3
cmp
hlt
test
xchg
lock
push
pop
rorb
push
or
sbb
mov
pop
jo
dec
mov
xchg
cmp
mov
xor
cli
adc
xor
xchg
lea
ljmp
inc
dec
inc
sbb
xchg
les
shll
inc
mov
ret
mov
clc
and
rcrb
in
sti
pop
xor
aam
fisubs
imul
clc
outsb
adc
xchg
mov
or
jecxz
cmc
aam
xchg
sub
inc
outsb
data16
fwait
das
test
mov
les
add
shlb
sub
add
lret
std
in
sbb
pop
cld
add
rcll
sub
mov
push
cltd
and
movsl
mov
adc
fiaddl
mov
pushf
xchg
xchg
hlt
loop
mov
stos
stos
add
scas
inc
xor
cmp
ss
sbb
clc
stos
repz
jno
imul
stos
lods
inc
sub
stos
jno
mov
lds
pop
nop
xor
daa
inc
xchg
sub
aaa
mov
fists
mul
push
aam
and
inc
inc
or
test
mov
push
jo
dec
xlat
cli
inc
adc
pop
sub
push
ss
vcvtss2si
push
scas
fsubr
addb
movsb
shll
ss
pop
cmpsb
pop
inc
outsl
dec
dec
cmc
pop
pop
mov
mov
dec
jb
pusha
sti
dec
and
inc
cmp
mov
ss
push
xor
sbb
push
and
loop
cmc
mov
jp
out
in
dec
shlb
inc
cwtl
into
pop
aaa
pop
mov
nop
and
lods
cs
sub
das
cmp
out
insb
pop
push
inc
inc
mov
rcrb
cli
pusha
push
lods
ficoml
mov
jmp
cmc
loop
or
cmp
roll
es
mov
pusha
insb
fmul
xchg
or
sbb
sub
lock
mov
sahf
bnd
mov
inc
sbb
sub
add
xchg
adc
inc
js
mov
fisubs
fistps
popf
inc
daa
aaa
and
das
jbe
inc
in
or
sbb
add
sbb
sbb
pop
or
cmp
xor
jae
mov
fstp
notl
adc
and
and
addr16
sahf
pop
scas
or
xchg
and
push
daa
push
or
xchg
mov
sub
lret
rcr
sti
jbe
xlat
or
or
and
xor
add
sbb
pop
inc
xchg
out
mov
add
outsl
inc
subl
daa
jmp
add
inc
and
mov
in
and
xor
mov
jge
jmp
sti
adc
and
shr
sbb
out
push
repz
fdivp
ffree
xor
inc
shll
lret
test
inc
aaa
or
int3
fnsaves
or
sub
inc
out
popa
testl
or
int
lret
add
xorl
or
adc
jb
inc
adcb
std
mov
daa
cs
fs
aaa
mov
pop
push
add
pop
sbb
outsl
and
inc
mov
jae
cvtdq2ps
mov
mov
xchg
or
insl
int3
iret
mov
pop
sub
jmp
push
or
mov
mov
add
loope
fisttpll
and
and
cmp
add
sbb
jg
sub
pop
mov
add
lret
pop
add
xor
mov
imul
ja
imul
xchg
inc
cmp
popa
dec
filds
sbb
lds
pop
sub
arpl
inc
daa
andb
push
mov
daa
mov
push
or
xor
xchg
sarb
subl
adc
sub
arpl
cmp
or
xchg
and
mov
out
mull
cmp
sti
cmp
das
sub
sub
invd
pop
sub
push
hlt
cmp
push
mov
and
dec
inc
mov
or
ds
lret
popa
fistpl
maskmovq
aaa
push
shlb
sbb
movsl
ror
jnp
cmp
stos
or
mov
int3
aaa
decl
in
fbstp
ss
or
add
cmp
sbb
and
jg
mov
mov
or
and
add
add
mov
or
sbb
dec
xchg
out
pop
and
cmp
xor
or
xor
pop
ja
popf
or
jne
push
stc
inc
mov
out
xchg
jmp
imul
lods
xor
pusha
addr16
mov
dec
or
jne
mov
popa
xchg
pop
out
mov
xchg
lret
or
jo
sahf
xor
xor
xor
or
shlb
or
sti
or
cmp
cmp
cltd
out
pop
mov
xchg
test
scas
jecxz
rdtsc
lds
mov
add
scas
xor
inc
mov
jmp
mov
and
or
xor
in
cmp
sahf
or
and
fldl
or
lahf
jmp
dec
cmc
sti
imul
je
aas
outsl
test
bound
cmp
adc
loopne
xor
and
sti
outsb
cltd
ja
divl
push
xlat
lea
push
cmp
lret
ds
add
jle
adc
pop
ds
or
dec
pop
cmpsl
dec
lock
mov
jmp
mov
push
ficoms
pop
lahf
adc
mull
sti
dec
jnp
jbe
iret
dec
rcll
adc
or
insb
test
or
pop
and
adc
idivl
and
push
inc
cmpsl
mov
stc
pop
stos
sbb
mov
sti
xor
jne
cmp
mov
out
cmp
or
movsb
sti
push
xchg
mov
xor
sti
mov
das
mov
xchg
das
or
pop
cmp
cmp
fsubrl
enter
loope
cmpsl
sbb
movsb
cmp
cmp
mov
aaa
fwait
dec
xchg
or
jge
lock
jnp
cmp
sub
mov
sbb
cmp
cmp
cmp
mov
mov
cmp
ret
cmp
push
inc
scas
jmp
cmp
adc
mov
sub
int
adc
ret
rorb
xchg
jns
dec
das
fmuls
lods
scas
das
aam
jl
xor
xchg
popa
cld
stos
lea
je
add
sub
mov
add
xchg
add
sub
or
pushf
adc
jnp
sbb
xchg
mov
push
pop
add
filds
cld
push
out
sbb
and
nop
sub
iret
and
xchg
inc
cmp
adc
loope
or
jo
push
inc
jb
add
and
test
inc
push
divb
imul
sub
jl
add
add
jno
xor
addr16
ret
lea
cmpl
test
and
pop
add
daa
call
lea
xor
sbbb
or
and
xor
mov
push
xor
add
aaa
sahf
ja
mov
loop
and
daa
sarb
aas
fmuls
push
pop
mov
aas
enter
jge
add
dec
push
dec
and
scas
sti
sub
add
testl
and
pop
orl
mov
add
jns
in
xchg
sahf
inc
cmp
hlt
add
ror
je
sbb
aad
in
jle
jecxz
mov
adc
fisubs
scas
fldt
add
xor
mov
or
in
add
cs
movsb
inc
push
mov
out
popa
cmpsb
fbstp
scas
push
daa
popa
inc
fidivs
xchg
mov
jnp
jbe
push
push
mov
add
andb
mov
mov
and
dec
inc
mov
xchg
push
in
mov
adc
sbb
xchg
mov
mov
cmp
rcll
add
jecxz
andl
cmp
int
sbb
mov
stos
test
mov
pop
jp
mov
test
outsl
lods
dec
mov
out
dec
or
ret
aad
mov
and
push
push
xchg
mov
lods
add
les
inc
xor
xor
out
adc
lahf
mov
pop
call
dec
popa
leave
lods
push
lcall
in
movsb
xchg
sub
sbb
sbb
movsb
lock
imul
xchg
in
and
pop
out
mov
adc
loopne
or
insb
neg
inc
mov
or
lds
adc
imul
sub
dec
xchg
xor
sub
push
xchg
scas
cmp
stos
cmp
mov
mov
pop
aam
lahf
insb
je
cmovs
mov
sete
mov
pop
mov
push
lods
cmp
movl
jmp
push
daa
inc
push
cmp
ret
adc
mov
divl
imul
repz
xor
add
add
popf
add
fwait
sub
iret
ljmp
cs
aas
sar
test
sub
fisubrs
daa
add
rclb
lods
jno
out
push
dec
and
pop
sub
in
push
inc
mov
pop
fsubr
cltd
insb
pop
adc
fldl
dec
inc
adc
imul
sbb
sbb
push
jnp
nop
adc
push
push
fs
sub
fimuls
cltd
scas
mov
lock
mov
pop
roll
mov
inc
lds
mov
sub
insb
or
add
jae
cmp
stos
scas
xor
jmp
pop
mov
xor
xchg
hlt
adc
movsl
push
push
jg
jb
pop
rol
mov
lods
mov
sti
mov
jae
lock
jo
inc
dec
hlt
lahf
popf
add
aaa
cld
push
test
mov
sbb
hlt
and
add
mov
mov
das
pop
push
add
jmp
pop
pop
pop
sti
cmp
popa
push
orl
fisubs
imul
xchg
jg
adc
inc
dec
nop
inc
fisttpll
and
push
fnstcw
pop
add
lock
rclb
mov
fidivs
loop
in
stos
in
sub
stos
test
das
mov
hlt
add
mov
xchg
sub
sbb
rol
add
js
pop
pop
repz
cmpsl
lds
and
movl
push
iret
outsl
rcl
xchg
movsl
insl
filds
mov
or
das
sbb
dec
xor
sub
sub
pop
sub
jge
add
movhps
rclb
int
out
add
ja
lcall
mov
rorl
xchg
dec
jo
aaa
dec
icebp
imul
jb
cmpsb
lods
lods
pop
xrelease
shrl
fwait
pop
xor
sub
jns
mov
cmpsl
adc
cmp
inc
arpl
fwait
pop
lds
addr16
xchg
mov
pop
repz
sti
sbb
lea
lret
repz
ficoms
mov
lret
loopne
pop
and
dec
sub
add
mov
add
cmp
add
jge
imul
mov
inc
sbb
mov
sbb
mov
pusha
xor
inc
enter
out
sub
fmull
mov
mov
lea
xlat
pop
cs
rorl
fcomps
subb
pop
sub
out
cwtl
xor
outsl
lret
cmpsb
add
aaa
test
aas
mov
dec
push
jo
sbb
ljmp
sub
lods
mov
sbb
sub
aad
cmpsb
or
mov
add
xor
dec
stc
add
icebp
mov
dec
dec
inc
mov
mov
xor
inc
mov
fcoml
movsl
popa
sub
inc
inc
in
mov
das
outsl
and
or
ret
fwait
sbb
lcall
dec
pop
xor
ja
dec
mov
pop
or
aas
or
push
fs
das
pushf
pop
lods
xor
sub
xorl
jl
push
inc
ljmp
fimull
lds
sbb
loope
int
jmp
mov
ss
aaa
test
repz
pusha
inc
movsb
jae
jno
not
lret
pusha
mov
shlb
adc
andl
lea
je
fldt
push
adcb
gs
scas
js
push
pop
nop
test
fxch
lods
fwait
sub
xlat
test
sbb
jmp
lcall
mov
test
jp
pop
leave
fsubr
cmpsb
pusha
test
test
xchg
adcl
mov
movsl
xchg
jp
std
sti
pop
jp
mov
imul
dec
call
cltd
dec
cmp
fs
sti
jge
fstl
cmpsl
fiadds
scas
cmpb
mov
mov
cmp
inc
sub
mov
fldl
orb
sub
mov
mov
mov
add
cwtl
inc
lods
inc
cltd
mov
out
cwtl
pusha
cs
repz
cli
lods
sbb
bound
and
adc
jb
popa
pop
pop
pop
aad
mov
sbb
inc
mov
jns
inc
pusha
fs
push
mov
pop
lcall
push
lea
mov
push
or
cltd
jnp
add
push
sub
loopne
das
mov
add
mov
and
push
jge
movlps
arpl
sub
adc
adc
pusha
xor
sbb
test
xor
push
add
lock
jb
rorl
and
ret
xchg
push
test
push
loop
sbb
dec
cmpsb
lahf
mov
mov
movzwl
dec
push
jnp
fnstenv
mov
das
cmp
cwtl
mov
or
mov
mov
test
lahf
mov
test
xchg
mov
push
lcall
push
sub
pop
or
adc
sbb
aad
lea
aaa
lret
cmp
xor
xlat
adc
ficomps
ss
mov
mov
fdivrp
jle
aaa
xor
data16
and
push
enter
sbb
lods
jnp
fdivs
stos
js
sub
jne
mull
pop
push
sbb
sbb
idivl
sub
xchg
daa
adc
outsb
jnp
je
push
jl
sbb
xchg
add
xor
das
jbe
aaa
rcl
pop
pop
dec
xor
mov
ds
mov
pop
mov
fbstp
sub
out
jge
lea
fists
cmp
insl
sbb
push
mov
add
push
pop
lods
sbb
cmpsl
jnp
in
arpl
dec
push
ficoms
sub
adc
sub
cld
je
mov
ljmp
push
add
mov
daa
or
xor
xchg
add
adc
push
or
xor
outsl
mov
ja
xchg
pop
movsl
out
inc
sbb
fidivs
mov
cld
lret
in
adcl
movsb
xor
fxch
cs
sub
xor
mov
sub
sbb
jecxz
jns
mov
dec
filds
je
imul
sub
mov
dec
cmp
andl
sbb
xor
lahf
inc
fnstenv
test
push
arpl
mov
fildl
jle
or
aas
adc
sbb
push
xor
aaa
int3
sbb
outsl
xchg
xchg
test
sbb
pushf
mov
xor
xchg
ror
dec
xchg
xchg
xchg
mov
cmp
xchg
or
push
loope
inc
pop
decl
ss
out
jl
mov
lret
or
or
sbb
cli
inc
aaa
push
fsubrp
dec
out
sti
ds
adc
jnp
mov
inc
or
and
sbb
pop
insb
pop
and
xor
pop
sbb
mov
stos
int3
push
cmp
cld
subl
cli
mov
add
sub
pop
cmpsl
add
imul
insl
xchg
mov
push
addl
test
mov
xor
pop
roll
or
test
loopne
and
repz
inc
sbb
jmp
sti
leave
and
pop
cmp
lret
cli
xchg
js
xchg
es
pop
sub
push
mov
xor
test
cmp
leave
add
negl
dec
movsl
pop
dec
jmp
fwait
or
and
mov
xchg
adcb
jae
xchg
mov
fcomps
jbe
adc
xchg
push
pop
stos
xchg
sub
dec
jmp
fldcw
insb
mov
sbb
adc
push
xor
jno
shrb
insl
ud1
lahf
jae
sub
movd
inc
xchg
mov
daa
idivl
movsb
mov
fcoms
test
jl
fisttps
or
add
dec
push
ja
sahf
jne
inc
mov
inc
push
xor
mov
iret
nop
add
stc
arpl
cs
jecxz
lds
insl
pop
cmpsl
add
daa
xor
movsb
xor
xor
or
pop
out
jne
ds
mov
sbb
mov
mov
repz
jp
mov
pop
jge
fwait
and
arpl
inc
inc
fnstenv
mov
fwait
rorl
adc
jno
inc
mov
scas
xor
mov
out
add
sub
pop
lea
xor
sub
push
aas
in
lret
add
lock
xchg
and
mov
push
fwait
xor
out
and
and
push
in
sbb
push
ffree
popa
addr16
rorb
aad
or
jge
cmpb
jno
into
add
and
jb
push
ljmp
or
das
bnd
movl
aaa
jns
cmp
out
mov
sub
cwtl
popf
mov
call
and
add
inc
notl
add
jo
sbb
sbb
rcl
rorb
inc
fidivl
aam
mov
imul
jo
sarb
jge
fadds
mov
in
or
fsubs
and
test
imul
fldl
xor
scas
sub
call
jne
mov
xchg
out
fwait
dec
pop
shr
pop
pusha
cs
dec
cli
push
mov
nop
push
imul
daa
mov
mov
ret
adc
push
inc
insl
ffreep
aad
pop
lds
add
out
in
fstpl
sub
cmp
jnp
xor
or
pusha
insl
or
mov
mov
jo
sbb
leave
daa
cmp
mov
scas
lret
out
movb
movb
xchg
sbb
push
ljmp
push
add
fcomps
or
mov
and
xchg
mov
lods
add
cmpsb
xor
or
sbb
cwtl
gs
or
lock
xchg
hlt
mov
daa
xorb
or
out
or
pop
jecxz
adc
add
insl
xor
fnstcw
jo
pusha
and
jb
lods
gs
mov
adc
out
push
xlat
test
add
xchg
or
xchg
mov
cld
out
arpl
add
xchg
inc
pusha
mov
xchg
sbb
inc
xchg
mov
push
add
sbb
push
bound
rcll
xchg
pop
jo
and
enter
lods
out
mov
out
jae
notb
fimuls
push
std
xlat
cltd
les
mov
add
je
ret
fistpll
insl
mov
lea
xchg
test
aas
les
lods
adc
mov
pushf
push
mov
pushf
xchg
adc
daa
js
jno
or
loopne
les
les
mov
push
pop
inc
pop
push
gs
pop
cs
fldt
xchg
or
and
cmp
in
inc
xchg
fs
xchg
sbb
lds
inc
in
or
sub
leave
scas
les
gs
or
and
mov
fadds
cmp
lods
or
stc
push
imul
adc
out
stos
popf
negl
and
incl
dec
lahf
inc
push
bound
pop
lods
loope
lahf
or
aas
rorl
adc
fwait
repz
das
add
jge
jae
and
adc
sub
add
leave
popf
lock
ret
sub
in
pop
pop
add
fsts
cmp
gs
fisttpl
jl
pop
inc
dec
call
dec
popa
and
fiadds
dec
inc
and
das
mov
notl
jle
test
popa
xchg
pop
inc
sub
movsl
xlat
jmp
fcmovu
lods
jnp
add
inc
movsb
xchg
out
and
je
ret
or
jns
in
int
sbbb
pop
jae
imul
mov
and
xlat
sub
add
mov
or
ret
mov
mov
loope
div
adc
adc
xchg
mov
mov
cmp
xlat
pop
roll
push
inc
lods
shr
fs
cmp
js
pop
add
jmp
xlat
jns
mov
notb
femms
xor
iret
lods
popa
jae
ja
jmp
mov
adcl
les
pop
pop
out
ret
or
xchg
or
rcll
test
sub
aas
add
or
inc
mov
jmp
dec
mov
mov
inc
cmpsl
and
lock
jns
rol
or
out
inc
push
jmp
scas
fsubrp
inc
sub
push
sldt
dec
loopne
cmc
mov
sub
test
mov
insb
test
sub
mov
jp
jne
jecxz
push
lea
out
push
mov
stc
inc
rep
aas
popa
jo
cmp
dec
pop
lock
cmpsb
add
leave
outsl
mov
inc
and
pushf
jle
addr16
popa
add
jg
adc
xor
repz
adc
ret
mov
popa
cmp
stos
ret
sub
shll
in
pop
imul
jo
lods
xlat
sub
fists
add
pop
outsb
dec
ret
add
cmp
ret
ror
sub
adcl
pusha
push
dec
and
pop
xchg
cmp
jbe
stos
inc
pusha
outsb
xchg
arpl
fucompp
out
adc
and
call
lahf
movb
addb
cs
xchg
jge
jp
inc
jno
shl
jo
pusha
subl
sub
mov
stos
push
test
das
outsl
fs
aad
jae
xchg
xor
loop
icebp
adc
push
das
nop
pusha
lcall
clc
add
jmp
xchg
pop
sbb
xor
test
add
or
clc
fmul
insl
and
xchg
mov
test
aad
lods
or
stc
adc
frstor
das
adc
iret
js
mov
lcall
and
inc
xor
outsl
in
add
ss
std
mov
sbb
int
add
jle
jmp
adc
dec
fstps
push
repz
pop
mov
sti
adc
ja
mov
adc
xchg
out
mov
add
sub
adc
outsl
ljmp
and
push
stc
mov
inc
sbb
ret
outsb
flds
in
into
nop
pop
aaa
sbb
scas
jo
xchg
scas
out
adc
sub
fsubs
sbb
jp
xchg
lahf
cmp
pop
jae
insb
sub
loop
into
jno
into
popa
aas
outsb
je
ficompl
mov
mov
and
push
jge
outsl
jl
insb
aaa
sub
adc
je
dec
psllq
mov
cli
dec
std
shrl
js
mov
vdivsd
jp
mov
push
pop
adc
add
add
push
xor
add
push
xchg
dec
or
cmc
xchg
push
lods
ljmp
adc
and
insb
stos
insl
popa
push
pop
push
xor
dec
xchg
dec
pop
mov
mov
dec
popf
xor
jbe
sbb
ja
popf
sbb
mov
shrl
pop
dec
xor
xor
mov
ret
mov
enter
dec
mov
push
mov
lahf
mov
sbb
dec
mov
inc
gs
jecxz
xlat
call
xchg
and
or
jno
or
add
lret
imul
scas
fmulp
mov
cmc
nop
push
xor
imul
aam
orl
push
or
xchg
sub
jle
jno
xchg
aaa
imul
or
mov
sbb
and
mov
add
imul
sbb
mov
add
mov
dec
pop
pop
pop
mov
jecxz
imul
and
push
add
dec
or
pop
add
mov
xchg
aam
mov
and
sbb
jmp
lods
js
push
add
orl
push
fcmovne
cltd
and
adc
cwtl
outsb
call
pop
movsl
jo
lods
pop
popa
cmp
xchg
stos
gs
test
mov
lods
icebp
hlt
dec
ja
mov
jnp
sub
fisttpl
aad
imul
les
cmpsl
jne
sub
imul
adc
mov
lahf
or
sbb
es
fsts
xchg
in
sbb
xchg
mov
sbb
and
mov
mov
mov
sti
inc
stc
fdivp
stc
pusha
in
mov
lea
fnsave
iret
sahf
jnp
xchg
mov
mov
lret
int3
shlb
nop
adcb
adc
push
pop
cmp
ja
lods
dec
xor
dec
xlat
add
addr16
mov
sarb
sbb
out
pop
aaa
andl
test
adc
jne
jbe
jge
xchg
js
sahf
leave
ret
xchg
cmp
in
cmp
sub
cmp
mov
add
mov
lar
das
ja
push
dec
mov
leave
sub
fwait
pop
push
or
ret
pop
add
inc
or
pop
dec
add
dec
pop
or
jb
and
xchg
cmp
lds
ret
frstor
jge
dec
shll
cmp
adcl
loop
repnz
push
ja
imul
mov
or
in
out
movsl
nop
mov
mov
jns
pop
test
jbe
jns
mov
shrb
lods
loopne
aad
fisttps
jmp
xchg
ret
pop
leave
fildl
fisttpll
cmp
es
pop
jo
adc
xchg
jbe
xor
jne
popl
and
adc
mov
xchg
push
jge
enter
je
adc
jne
scas
fucomp
push
and
mov
jmp
ficoms
xor
mov
sbb
dec
add
loopne
addr16
inc
lret
ds
jne
jae
pop
out
mov
sub
xchg
jne
jno
out
sub
push
sbb
inc
repz
je
add
cltd
cmp
cmp
enter
pop
mov
fldl2t
pop
neg
scas
bound
mov
push
mov
and
aaa
icebp
sub
xor
jb
jnp
insb
jp
pop
icebp
xchg
mov
cld
lahf
aas
je
cmpl
add
imul
aaa
sarl
subl
movsb
and
jae
lods
fwait
mov
xlat
out
pop
jo
lret
pop
pop
xor
mov
ja
sbb
mov
fwait
pop
ret
mov
push
cs
dec
pop
mov
loope
nop
mov
out
push
mov
int
xchg
ret
xchg
inc
aas
adc
add
fimull
and
dec
std
dec
add
inc
fwait
mov
or
and
pop
cmpsb
das
test
ss
stos
cmpb
cmpsb
dec
mov
loope
jp
sbb
adc
jecxz
es
mov
movl
add
jns
pop
add
pop
orl
rcrl
mov
cmp
pop
push
subl
push
cmp
dec
dec
or
jmp
mov
mov
out
fcmovnbe
lcall
jo
pusha
fisttps
pop
loopne
cmpb
jbe
add
push
xchg
jnp
roll
fwait
jg
imul
mov
inc
mov
jae
cmpsb
add
pcmpeqd
into
mov
and
and
addb
push
aad
jno
cmc
sub
push
cmovb
ja
outsl
xchg
mov
or
xchg
mov
dec
hlt
das
push
inc
rcpps
pop
lahf
das
mov
pushf
mov
dec
push
cmc
xchg
push
sbb
jno
inc
mov
test
pop
xchg
adc
xchg
pop
das
addr16
stos
aad
and
out
fwait
ja
mov
lea
or
add
testl
addl
add
cwtl
scas
roll
aaa
lret
nop
loopne
js
sarl
in
pop
inc
aam
insl
xchg
xchg
scas
sbb
les
int
jo
add
and
mov
pop
je
pop
and
call
mov
sti
popa
ja
adc
xchg
lods
pop
sub
rorb
jae
jnp
mov
inc
aam
dec
loope,pn
push
pop
or
mov
test
mov
test
lods
adc
getsec
dec
xorl
or
inc
xchg
and
inc
xchg
rcl
jo
stos
mov
inc
jmp
ja
stos
pusha
sbb
pop
jg
xchg
inc
xchg
insl
out
add
add
lds
test
sub
subb
xor
cmpsl
push
scas
mov
xor
loope
mov
and
jns
jno
jo
push
push
jl
jle,pt
loope
outsl
inc
and
psrld
mov
insb
cwtl
jnp
jl
add
sbb
bound
xor
shlb
scas
sbbl
dec
xor
or
push
arpl
inc
arpl
fisttps
jl
adc
adc
insl
mov
pop
mov
add
pop
sbb
insl
or
pushaw
or
into
push
mov
adc
xor
push
fistl
xor
dec
cmp
and
int
and
jnp
dec
or
in
data16
xchg
scas
sbb
gs
or
iret
and
add
mov
inc
loope
add
mov
or
add
mov
jo
sbb
les
mov
cmp
push
into
int
mov
xchg
and
or
mov
adc
inc
push
lret
mov
inc
pop
scas
test
pop
dec
negl
jle
xor
pop
push
mov
or
pushf
mov
or
inc
rcrl
or
test
mov
sub
and
and
out
repz
imul
add
and
or
scas
stos
inc
and
iret
inc
inc
jns
rorb
sbb
cs
or
inc
and
cwtl
jl
lock
lods
add
into
xor
sbb
inc
loope
addb
cmp
sbb
das
jp
stos
pop
or
add
pop
pop
or
mov
xor
pushf
push
or
pop
push
add
fdivp
and
push
jne
ja
jns
push
outsl
adc
sbb
negl
or
add
out
inc
mov
add
out
roll
aaa
out
or
sbb
pop
aaa
lock
cwtl
nopl
outsl
or
out
js
add
push
pop
fnsave
mov
inc
dec
and
jnp
or
fbld
push
sarl
or
inc
sar
sbb
scas
outsb
jbe
mov
pop
std
or
in
push
mov
inc
cmpsl
jecxz
mov
mov
aas
sbb
cmp
jge
push
xor
adc
add
add
aaa
xchg
out
and
idivl
sub
and
mov
add
inc
pop
jb
rclb
dec
push
popl
adc
push
inc
cmpsb
mov
cmp
cmp
push
jnp
inc
ja
call
push
inc
push
call
mov
adc
pop
mov
hlt
ja
push
push
pushf
and
cmp
dec
int3
loop
pop
or
mov
sahf
push
dec
push
daa
clc
push
jae
inc
add
shll
aad
xlat
fiadds
sub
cmpsb
push
dec
dec
fnsave
adc
loopne
inc
dec
ret
xorl
jo
sub
insl
addr16
and
imul
inc
imul
push
jl
push
test
dec
dec
sub
cmpsl
mov
push
xchg
shrl
inc
adc
cmc
pop
mov
mov
add
inc
add
int3
es
mov
jno
dec
inc
fs
fcmovu
fs
in
rolb
imul
addr16
outsb
push
sarb
dec
inc
jae
jo
mov
imul
rorb
push
daa
ljmp
jo
lret
and
push
or
pop
pop
mov
cmp
js
mov
mov
sahf
repnz
popa
dec
jbe
aam
inc
addb
push
jg
sbb
imul
pop
adc
and
and
push
jmp
inc
movsl
xchg
and
push
push
push
jmp
pop
jmp
jo
repnz
lods
pop
push
add
aam
ret
cmpsb
and
mov
rolb
popf
jno
sahf
xor
mov
cwtl
cltd
push
inc
sub
dec
dec
push
inc
push
int3
push
notb
cmp
inc
loop
sahf
rclb
sbb
push
dec
arpl
push
test
push
dec
out
xchg
inc
pusha
aam
mov
paddb
loope
je
inc
inc
cld
mov
stc
xor
sbb
insl
fwait
jecxz
push
inc
test
inc
push
xor
out
cmp
dec
jl
xor
push
xchg
and
mull
addb
dec
pop
push
mov
outsl
push
dec
outsl
icebp
movsb
ret
loop
pop
lock
cmp
add
sbb
bound
imul
lret
pusha
rcrl
jo
outsb
push
cwtl
js
pop
imull
fcoml
aas
popa
dec
inc
xorb
pusha
fcoml
xor
loop
dec
push
xchg
dec
inc
adc
cmp
inc
push
or
fistps
xor
mov
push
push
and
jno
inc
insb
pop
dec
cld
push
cmp
adc
inc
testl
pop
and
mov
mov
push
in
mov
cmc
push
mov
loopne
inc
inc
mov
cmp
inc
testb
inc
les
jo
in
stos
popa
cmp
pusha
push
add
sbb
adc
rclw
cmpsl
sti
stos
push
insb
push
pop
mov
inc
mov
adc
adc
or
jne
in
daa
add
insb
add
sub
mov
into
mov
mov
loopne,pt
jo
aas
dec
push
adc
xorl
jbe
jbe
addl
push
inc
mov
jb
loop
pusha
aas
jbe
jbe
sbb
adc
mov
cmp
aas
dec
mov
add
sub
loop
inc
sbb
loopne
jl
imul
je
add
push
mov
das
jnp
icebp
mov
dec
aas
cs
mov
mov
daa
bound
fisubrs
adc
lea
shlb
jb
push
jnp
call
push
add
mov
inc
push
cmp
sbb
lods
fisttpll
pop
sbb
inc
mov
add
inc
dec
push
cmp
addr16
adc
jbe
inc
addr16
sub
pushf
cltd
mov
cmp
repnz
jbe
in
addr16
push
aaa
lds
cmc
and
inc
andl
negb
into
in
mov
mov
jmp
fidivrl
dec
in
loopne
mov
cmp
jbe
bound
ja
pusha
outsb
outsb
sbb
jle
les
mov
addr16
jo
cmp
fs
in
xlat
and
mov
sbb
adc
inc
push
lock
add
test
sarb
data16
cmp
fisubrs
jmp
push
popa
mov
inc
icebp
add
roll
addb
hlt
add
add
push
sahf
xchg
inc
stc
sub
inc
sbb
add
sub
mov
jbe
lret
xchg
adcl
adc
adc
inc
and
cwtl
sbb
and
mov
cmp
call
or
paddsw
pushf
cmp
push
iret
lds
adc
cltd
aam
out
add
dec
adc
cmp
inc
shl
or
and
insb
addr16
imul
shlb
or
push
push
daa
and
push
mov
or
sub
jbe
and
outsl
or
jo
sbb
inc
add
data16
gs
int
out
or
call
out
loop
pop
out
jecxz
cmp
or
out
frstor
in
bound
jg
lret
sti
fiadds
cld
js
and
fwait
add
roll
aad
pusha
mov
jmp
cmp
add
xor
sbb
add
loopne
incl
stc
push
sbb
out
std
sti
daa
or
out
or
in
add
add
add
and
or
enter
adc
orb
xor
adc
or
test
jecxz
jge
aad
or
push
movsl
push
decl
add
lods
bound
out
or
imul
mov
and
and
hlt
movsb
add
ja
inc
std
sti
add
imul
jge
repz
mov
jecxz
icebp
icebp
add
cmc
pop
lods
pop
hlt
neg
in
ljmp
in
mov
in
repnz
mov
and
sti
add
frstor
push
jmp
aaa
loope
adc
mov
gs
outsl
aas
dec
inc
add
out
or
hlt
push
in
inc
xlat
std
js
cmpsb
js
jmp
or
push
icebp
cli
fdiv
adc
sti
sbb
sub
dec
and
std
in
adc
xchg
jle
dec
ret
lcall
jmp
andb
adcb
pop
cwtl
popw
pop
pop
push
fimuls
add
pop
add
adc
mov
dec
sti
or
sub
push
stc
ja
sub
repz
frstor
add
add
sbb
add
rolb
xor
pusha
and
xorb
adc
and
or
adc
sub
testl
add
pop
and
adc
in
mov
inc
push
mov
mov
adcb
addr16
imul
sbb
movsl
js
push
loope
adc
das
into
sub
icebp
jb
push
out
scas
es
push
dec
push
popa
pop
lret
inc
sbb
gs
pop
and
mov
js
pop
add
mov
orb
or
out
sub
jbe
pop
sbb
jge
pushf
jo
es
fnsave
in
add
jecxz
sarl
push
ror
push
mov
test
push
popa
iret
int
mov
stos
mov
jo
inc
cmpsl
inc
fwait
and
mov
scas
mov
popa
orb
addr16
sbb
push
mov
cwtl
jnp
dec
subl
jb
outsl
fcoml
cmp
xchg
stos
daa
sub
mov
inc
mov
sti
mov
inc
jo
fildll
hlt
jo
mov
sub
xchg
add
insb
insb
and
xchg
ret
adc
add
sub
mov
lock
jg
add
mov
lea
mov
dec
sbb
ljmp
fiadds
sti
xchg
jg
or
xchg
push
fwait
xchg
inc
sti
addl
imulb
cmp
vpaddsw
jb
mov
add
test
pop
fdivrs
xchg
aad
mov
mov
test
push
shlb
pop
jo
add
sub
mov
imul
iret
popa
push
inc
cs
faddl
cmp
test
mov
iret
inc
mov
xor
mov
xor
and
jl
cltd
dec
pop
lea
sbb
jp
jns
and
incb
push
jp
sub
aam
scas
sbb
add
inc
cmp
mov
pop
addl
sbb
or
ret
imul
dec
pop
testl
insb
stos
or
mov
mov
push
xor
or
sbb
ja
push
dec
scas
add
cmp
vmread
loope
lds
xor
inc
int
fimull
sbb
xlat
add
cmp
mov
add
xor
xor
ret
insl
push
sub
jmp
jmp
and
mov
enter
push
pop
inc
and
add
jb
arpl
ss
xchg
popa
jno
popa
cmp
cmp
arpl
push
mov
stc
xor
lret
adc
movsb
mov
push
insl
xchg
sbb
movsl
cltd
sahf
mov
and
fnstsw
push
dec
xchg
sbb
leave
out
and
aaa
outsb
push
fistpl
repz
data16
xchg
scas
fcmovnbe
and
fs
repz
sub
int3
inc
faddl
jno
add
push
sbb
add
repz
mov
sti
outsb
enter
mov
lea
pop
inc
mov
imul
sub
bound
rclb
jmp
jb
icebp
daa
test
xchg
js
pop
push
and
negl
xor
mov
xor
cwtl
enter
and
ret
sub
jno
add
popa
into
pop
lret
xchg
sahf
stc
cli
loop
ds
add
lret
adc
movsl
sbb
mov
push
add
daa
pop
add
lods
push
pusha
jmp
ja
xchg
jae
dec
inc
inc
mov
pop
je
pop
neg
cmp
jae
lock
push
fnstsw
add
mov
mov
stos
cwtl
pop
movl
cmpsl
xchg
sbb
mov
inc
sbb
add
pop
mov
xchg
insl
mov
add
mov
rol
js
and
or
add
sub
adc
int
hlt
sbb
ret
in
mov
add
cwtl
scas
pop
push
test
les
fisubrs
call
sbb
inc
push
test
test
xor
and
idivl
sub
jecxz
dec
pop
cmp
adc
dec
outsb
aaa
pop
jo
sbb
sub
sbb
mov
or
sbbl
jmp
clc
addl
push
adc
in
shll
xorl
cmp
xchg
push
and
or
cltd
xchg
jns
cmp
mov
cltd
pop
adc
ficoml
sahf
mov
push
lret
dec
mov
popf
bound
sbb
xchg
push
lahf
pusha
and
mov
ja
xchg
shrl
dec
xor
xor
je
pop
xor
test
xchg
in
arpl
xor
psubusb
outsl
and
shl
mov
shlb
outsl
imul
push
jno
jmp
and
les
mov
or
jmp
cld
add
and
push
imul
inc
mov
roll
or
cmp
pop
jmp
mov
ffree
and
jg
outsl
outsl
inc
push
cmp
add
pop
fs
jo
shl
adc
and
addr16
pop
pop
add
dec
push
stos
fisubrl
ret
push
ss
dec
pop
cld
push
push
fs
in
fdivrl
sub
imul
add
orb
les
or
int3
jne
emms
das
cmp
xor
inc
cmpsb
lcall
pop
dec
push
push
jae
and
bound
cmp
dec
sbb
cmpl
mov
add
push
stc
add
push
fs
aad
sbb
sti
xchg
cwtl
xchg
jns
in
fcoms
push
push
fsubs
movsl
mov
add
rcl
sbb
jbe
incb
cmpsb
insb
mov
ret
and
xor
jae
lock
cltd
xor
pusha
scas
mov
cmp
call
sbb
jb
es
rclb
int
push
mov
outsb
in
imul
dec
and
ficompl
ja
cwtl
into
je
inc
daa
xchg
sbb
lea
addr16
inc
bound
dec
scas
cs
push
movsl
jb
xchg
push
negb
mov
mov
adc
fsubs
xor
test
shlb
sub
adc
inc
je
jb
filds
paddusw
cmp
dec
aam
push
insl
push
dec
neg
hlt
add
pop
mov
add
inc
jno
sbb
inc
cwtl
dec
push
and
and
push
inc
inc
test
dec
dec
inc
mov
jg
push
push
movsb
mov
cmpsl
push
inc
push
mov
adc
push
orl
lret
popa
andl
shlb
dec
mov
loop
inc
dec
push
and
inc
dec
push
rcrb
push
push
or
imul
out
js
xor
dec
pop
cmpsb
and
inc
out
test
inc
push
lret
mov
xchg
xor
scas
inc
or
popa
je
imul
sbb
xor
add
adc
loope
fdivl
loop
xchg
loope
call
imul
rcrb
ds
jp
adc
dec
push
inc
add
xchg
gs
movsl
adcb
add
push
pop
test
dec
pop
test
loop
test
xor
fistl
xchg
loopne
jns
sub
and
and
lods
mov
or
lret
and
rcrb
adc
mov
pop
stos
bound
orl
push
insb
inc
inc
jg
mov
fidivl
icebp
popa
lods
lea
jne
sbb
xor
std
mov
inc
rorb
push
xor
mov
mov
test
push
dec
cmp
arpl
sub
cmp
pusha
push
pop
mov
les
aaa
or
push
leave
roll
adc
arpl
xchg
dec
popa
sub
xlat
pop
push
scas
leave
imul
adc
xor
mov
cmp
adc
inc
lret
or
xchg
dec
loope
pop
add
push
mov
mov
sub
xor
or
movsl
mov
das
pop
and
or
mov
sti
push
mov
rcrl
orb
mov
mov
pop
push
jno
test
icebp
mov
push
cmpb
movsl
das
jmp
sub
cmp
stos
or
aaa
loop
push
pop
or
xchg
sub
sar
xchg
xchg
loopne
leave
sub
mov
ja
push
nop
or
rorl
imul
mov
mov
sub
or
mov
movsl
popa
iret
mov
aas
sbb
andb
movsb
dec
pop
push
add
cmp
sub
sbb
sti
jmp
and
push
jnp
jno
scas
push
mov
inc
pop
lret
mov
fwait
and
push
lods
mov
adc
mov
ljmp
das
and
insl
add
jns
and
sbb
lahf
rolb
push
jns
imul
cmp
subl
add
mov
sub
xor
add
popf
lret
or
pop
adc
xchg
cld
mov
sbb
push
mov
push
xor
xor
rolb
adc
stos
and
movsb
adc
adc
push
pushf
decl
mov
mov
test
popa
sub
mov
mov
xor
xchg
sub
adc
in
out
push
nop
sub
adc
int
xchg
test
xchg
aas
mov
mov
popa
fildll
aad
movsl
fwait
leave
inc
inc
stos
and
stos
push
add
push
mov
push
inc
test
aaa
filds
daa
push
add
or
imul
sbb
dec
mov
lds
xlat
lods
add
or
adc
daa
push
daa
mov
test
leave
mov
and
pusha
in
addl
or
inc
cmp
adc
xor
push
subl
push
inc
addr16
lret
add
push
lea
adc
push
cmp
addb
mov
pop
xchg
sbb
lret
ss
or
pushfw
sub
xor
inc
push
add
add
scas
pop
fsubs
imul
rorb
flds
pushf
sbb
outsb
pop
fcoms
enter
out
jmp
rclb
data16
mov
imulb
xor
mov
xor
fdivrl
pop
out
scas
je
insl
push
or
mov
fucomp
addr16
jns
incb
mov
outsb
ret
dec
sbb
mov
or
pushf
sbb
sarb
test
xor
shrl
xchg
sar
dec
fwait
xchg
es
cmp
push
dec
sub
sub
push
enterw
push
dec
sub
xchg
sub
shrb
push
cmp
lds
cmp
les
xchg
test
xor
stc
lea
lcall
add
cmp
popa
mov
add
fbld
pusha
inc
or
pop
inc
or
inc
sub
outsb
adc
inc
test
js
push
adc
jmp
inc
add
xor
into
adc
dec
std
jmp
jno
add
out
cmp
xchg
ret
insb
sbb
push
mov
push
shrb
lock
mov
sbb
pop
or
pop
push
add
shl
outsb
popa
jp
inc
inc
push
or
or
jo
int
or
or
pop
dec
outsb
subl
pop
push
add
lods
push
clc
popa
and
xor
ret
cmp
add
icebp
out
fildll
push
sbb
daa
adc
adc
loop
les
adc
idivb
add
sub
popa
cmp
pop
adc
fistpll
inc
pop
adc
add
adc
pop
pop
xor
add
mov
push
lods
ret
arpl
sub
add
sub
push
rclb
xchg
movsl
bound
dec
jnp
fdivrl
lods
aad
outsl
stos
mov
in
fnstenv
shll
add
push
jle
test
data16
and
sbb
jne
lods
cmp
pop
jne
adc
jnp
sbb
dec
je
inc
add
dec
sbb
pop
push
dec
dec
jl
mov
dec
lcall
inc
dec
das
loope
ffree
pop
pop
mov
push
ffree
pusha
imul
fmuls
sbb
sbb
xor
or
sub
adc
test
add
mov
inc
jae
mov
mov
add
sbb
sbb
clc
sub
adc
and
imull
pop
inc
out
mov
sbb
cwtl
decb
add
pop
xor
aaa
xor
xlat
mov
cmpsb
addr16
add
sub
adcl
out
les
mov
push
mov
in
adc
add
inc
dec
inc
inc
loopne
xor
fisubrs
in
pop
or
xchg
test
jne
xlat
push
pop
aas
pop
popa
das
and
negl
sbb
sbb
in
add
test
add
jbe
add
lods
dec
cwtl
mov
js
lock
adc
adc
adc
jne
imul
add
adc
adc
xor
jnp
loopne
aaa
push
dec
or
add
sarl
add
cmp
mov
sbb
loop
push
es
xor
movsb
cwtl
leave
mov
loop
mov
jecxz
xchg
andb
sbb
test
inc
jg,pn
js
bound
cmp
mov
stos
dec
das
jnp
lods
jg
sbb
aad
sbb
xchg
mov
add
mulb
and
jns
adc
add
mov
mov
add
push
and
lret
mov
pushf
dec
pop
adc
sub
adc
fsts
sub
or
inc
and
adc
or
inc
sub
lahf
enter
jmp
pop
or
int
push
shrb
dec
lea
push
mov
lods
add
icebp
insb
adc
adc
push
xor
adc
jg
bound
lods
lods
outsb
sbb
lea
test
xor
mov
bound
aad
lods
mov
imul
sbb
sbb
out
sbb
ljmp
push
shrl
sbb
lea
mov
sub
sbb
mov
sub
rcrb
aad
and
dec
repz
xor
sbb
pop
add
loopne
cmc
scas
sub
sub
shrl
add
je
xchg
icebp
jmp
sti
push
add
mov
or
and
imul
add
jno
stos
pop
mov
mov
paddusw
push
test
push
add
sarl
gs
jecxz
add
inc
dec
dec
adc
jnp
shrb
repz
jo
or
imul
pop
testl
adc
sub
sbb
dec
pop
and
popf
in
pop
ljmp
out
push
xchg
mov
or
insb
or
mov
or
arpl
aad
push
mov
or
aas
stos
roll
rorl
cmp
test
add
sti
and
push
aad
fstpt
cmp
or
test
test
stos
fcomp
jne
mov
popa
jne
mov
or
popa
lods
push
fldl
stc
push
adcl
test
mov
cmp
lods
in
jno
push
cmp
insl
lods
loope
adc
push
mov
and
push
or
pop
and
xor
inc
push
daa
or
lods
and
fwait
test
dec
stos
rcr
mov
adc
rorb
adc
pop
mov
incl
psubw
inc
xor
add
add
rorl
add
aas
ljmp
jg,pn
cmp
test
adc
les
inc
pop
mov
outsl
or
mov
das
test
fsubrs
xlat
jge
popl
adc
and
cmpsl
jns
aas
jnp
rorl
das
aam
lret
daa
nop
push
scas
lret
pop
add
leave
lds
lcall
inc
out
adc
arpl
in
lret
push
aaa
mov
and
lahf
sub
pop
and
inc
popf
bound
aas
cmc
inc
movntps
mov
mov
test
push
jg
outsl
fwait
bound
scas
mov
mov
add
pop
aaa
dec
mov
cs
fwait
out
mov
mov
cmpb
imulb
aas
testb
enter
adc
ss
popf
fdivs
xor
shlb
pop
dec
cmp
daa
jo
das
xorb
test
inc
mov
push
mov
push
xor
cmpxchg
repz
jle
pop
push
aaa
shll
enter
push
and
dec
dec
imul
dec
pop
enter
psubusb
add
pop
test
outsb
add
cmpb
sub
seta
inc
leave
aas
icebp
addr16
mov
sbb
aaa
dec
in
add
push
test
add
scas
pop
or
push
in
jg
cld
adc
fdiv
das
cmp
add
inc
push
add
pop
mov
mov
add
xchg
push
jnp
jl
mov
xchg
das
dec
and
filds
xchg
add
repnz
push
enter
aas
push
mov
mov
aaa
cmp
push
imulb
in
xchg
scas
iret
mov
mov
popf
sbb
mov
cmp
sti
push
push
test
cmp
enter
lea
pusha
mov
mov
sub
mov
and
sbb
mov
jge
mov
mov
stos
fsubs
adcb
lcall
and
aam
add
je
insb
outsb
inc
lahf
or
pusha
aad
jb
je
add
pop
mov
inc
add
xchg
push
sbb
add
in
sbb
pushl
gs
gs
jne
je
popa
outsb
addr16
inc
sub
mov
dec
insl
in
imul
push
or
pop
dec
jne
bound
jnp
loopne
jae
ss
outsl
jne
inc
jne
je
aas
pushl
jb
push
je
push
imul
jp
inc
jne
add
jb
outsb
je
dec
fs
outsb
es
js
sbb
fcmovnbe
inc
outsb
jne
enter
inc
outsl
jb
popa
je
push
and
ffree
mov
popa
lret
jbe
test
outsb
sbb
jo
aas
adc
sbb
ds
pushf
fs
sbb
inc
mov
mov
rcr
popa
bound
mov
xchg
push
lock
gs
inc
push
jb
gs
sbb
pop
adc
jns
push
lods
enter
inc
pop
inc
and
and
addl
adc
hlt
push
add
repnz
inc
jb
push
outsl
push
adc
push
dec
inc
mov
lock
mov
imul
sub
mov
imul
das
or
imul
add
outsb
data16
stos
push
pop
cwtl
ret
mov
and
rorl
push
sub
push
pop
sbb
push
sarl
loopne
or
mov
jo
cs
xchg
xor
push
lock
mov
fdivs
push
je
push
sbb
stos
data16
pop
movsl
popf
js
sub
dec
stos
adc
jbe
or
imul
xchg
or
jb
cmp
xor
and
js
add
cltd
pop
popa
inc
mov
add
jo
inc
push
dec
cltd
dec
inc
movsb
imul
int3
sarl
jo
dec
popa
insl
int
pop
rorb
popf
inc
insb
imul
push
pop
aaa
andl
in
movsb
sahf
outsl
jns
sarl
dec
inc
dec
inc
push
cltd
jb
mov
xor
sub
dec
add
call
xor
jns
leave
insl
int
das
inc
mov
leave
mov
jns
sbb
or
je
add
add
fists
mov
push
add
pop
inc
sub
incl
popl
add
add
push
fcmovnbe
int3
mov
add
movzbl
fwait
insb
sbb
loopne
mov
adc
inc
jle
aam
in
add
loopne
mov
dec
inc
and
lret
pop
dec
enter
pusha
inc
inc
push
inc
xor
mull
inc
in
inc
cmp
push
push
or
es
cmc
and
imul
sub
dec
or
repnz
lock
add
push
jae
dec
ja
fldt
add
jne
push
and
xchg
test
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
