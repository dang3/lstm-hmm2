jmp
mov
jmp
mov
jmp
mov
gs
xor
data16
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
pop
ret
push
mov
add
movl
lea
push
mov
push
call
call
movl
lea
push
mov
push
call
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
movl
movl
mov
push
mov
push
call
cmp
jae
mov
mov
jmp
dec
mov
lea
mov
mov
inc
jmp
lea
mov
mov
mov
lea
lea
lea
lea
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
mov
pop
ret
push
mov
add
mov
mov
cmp
jl
jmp
xchg
mov
mov
xchg
dec
mov
lea
inc
mov
mov
mov
mov
mov
lea
dec
inc
lea
inc
inc
mov
cmp
je
call
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
mov
xor
divl
test
jne
cmp
jbe
mov
xchg
mov
mov
lea
mov
lea
xchg
xchg
mov
lea
lea
inc
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jae
mov
mov
jmp
dec
mov
lea
mov
mov
inc
jmp
lea
mov
mov
mov
lea
lea
lea
lea
mov
cmp
je
jmp
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
jne
mov
lea
mov
lea
lea
xchg
lea
mov
dec
inc
inc
lea
mov
mov
lea
mov
cmp
je
jmp
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
mov
sub
mov
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
jbe
mov
xchg
mov
mov
lea
mov
lea
xchg
xchg
mov
lea
lea
inc
inc
inc
mov
mov
mov
call
cmp
jae
mov
mov
jmp
dec
mov
lea
mov
mov
inc
jmp
lea
mov
mov
mov
lea
lea
lea
lea
push
mov
mov
xor
call
mov
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
mov
mov
cmp
jl
jmp
xchg
mov
mov
xchg
dec
mov
lea
inc
mov
mov
mov
mov
mov
lea
dec
inc
lea
inc
inc
mov
mov
call
mov
mov
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
lea
mov
push
mov
jmp
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
jne
mov
lea
mov
lea
lea
xchg
lea
mov
dec
inc
inc
lea
mov
mov
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
mov
sub
add
add
mov
cmp
jl
jmp
xchg
mov
mov
xchg
dec
mov
lea
inc
mov
mov
mov
mov
mov
lea
dec
inc
lea
inc
inc
lea
pushl
call
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
cmp
jae
mov
mov
jmp
dec
mov
lea
mov
mov
inc
jmp
lea
mov
mov
mov
lea
lea
lea
lea
cmp
jbe
mov
xchg
mov
mov
lea
mov
lea
xchg
xchg
mov
lea
lea
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
mov
mov
movl
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
sarl
pop
push
cmp
jnp
push
pop
test
push
pop
outsl
cmp
cltd
cmp
mov
cmp
mov
push
pop
mov
mov
pop
sahf
pop
out
add
aas
mov
pop
sahf
pop
out
add
inc
mov
pop
sahf
pop
out
add
daa
mov
pop
sahf
pop
out
add
sub
out
add
mov
mov
pop
sahf
pop
out
add
mov
mov
pop
sahf
pop
out
add
push
mov
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
push
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jne
mov
lea
mov
lea
lea
xchg
lea
mov
dec
inc
inc
lea
mov
mov
lea
push
call
mov
movl
cmp
jbe
mov
xchg
mov
mov
lea
mov
lea
xchg
xchg
mov
lea
lea
inc
inc
inc
mov
mov
call
mov
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
movl
mov
mov
call
mov
cmpl
je
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
mov
mov
call
mov
cmpl
je
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
lea
push
push
mov
sub
push
mov
push
call
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
mov
cmp
je
mov
subb
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
xor
add
mov
xor
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
incl
mov
cmp
jne
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
mov
call
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
mov
push
mov
push
call
cmpl
je
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
cmp
jl
jmp
xchg
mov
mov
xchg
dec
mov
lea
inc
mov
mov
mov
mov
mov
lea
dec
inc
lea
inc
inc
push
mov
push
call
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
jl
jmp
xchg
mov
mov
xchg
dec
mov
lea
inc
mov
mov
mov
mov
mov
lea
dec
inc
lea
inc
inc
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
cmp
jbe
mov
xchg
mov
mov
lea
mov
lea
xchg
xchg
mov
lea
lea
inc
inc
inc
movb
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
mov
mov
pop
ret
lea
push
mov
add
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
call
test
jne
mov
jmp
movw
cmp
jae
mov
mov
jmp
dec
mov
lea
mov
mov
inc
jmp
lea
mov
mov
mov
lea
lea
lea
lea
call
lea
mov
pop
ret
push
mov
add
mov
jmp
mov
jmp
dec
lea
cmp
jge
xchg
mov
lea
xchg
mov
dec
dec
lea
xchg
xchg
xchg
dec
dec
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jne
mov
lea
mov
lea
lea
xchg
lea
mov
dec
inc
inc
lea
mov
mov
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jbe
mov
xchg
mov
mov
lea
mov
lea
xchg
xchg
mov
lea
lea
inc
inc
inc
push
call
mov
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jne
mov
lea
mov
lea
lea
xchg
lea
mov
dec
inc
inc
lea
mov
mov
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
mov
pop
ret
add
add
jo
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
movl
lea
push
mov
push
call
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
xchg
xchg
cmp
jb
mov
mov
mov
mov
xchg
mov
lea
mov
dec
dec
jmp
inc
dec
inc
xchg
xchg
mov
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jge
mov
mov
inc
mov
lea
mov
mov
mov
jmp
mov
lea
lea
inc
mov
dec
jne
jmp
mov
inc
dec
inc
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
nop
subl
jae
mov
cmp
jp
mov
mov
mov
dec
dec
xchg
lea
xchg
mov
mov
lea
mov
mov
mov
lea
xchg
inc
mov
mov
lea
call
lea
cmp
jo
inc
inc
dec
inc
inc
inc
xchg
mov
xchg
mov
mov
mov
mov
mov
lea
lea
xchg
mov
dec
ret
ret
lea
add
pop
add
push
add
gs
pop
sub
leave
mov
add
in
sub
out
jnp
scas
rolb
je
xchg
add
add
push
xor
mov
and
cmpsb
into
pop
jle
lock
fsubrl
scas
jo
sub
aaa
ds
xor
movsl
sbb
addb
xlat
sbb
das
push
cmp
xchg
pop
cmpsl
sbb
add
and
push
inc
fst
lahf
add
add
daa
adc
fisubs
cmpsb
es
gs
rcrb
jae
outsl
add
cmp
cmp
test
mov
add
xchg
cli
arpl
add
test
xor
std
repnz
lret
xor
in
lret
add
fwait
lret
test
sbb
sbb
adc
pop
mov
mov
ja
movsl
push
mov
fstpl
in
ret
add
out
add
add
mov
in
pop
add
add
mov
shll
cmp
es
add
push
lods
dec
dec
pusha
add
fldt
add
dec
cwtl
ret
xchg
scas
jle
sub
mov
mov
lret
push
add
jnp
test
xor
inc
dec
pop
arpl
daa
call
loop
add
push
add
add
mov
xor
mov
add
xor
sub
out
ja
stos
les
jb
lret
add
add
cmp
add
shlb
sbb
fiaddl
xor
loopne
xchg
iret
add
pushf
test
add
mov
xchg
add
add
xor
movsb
adc
mov
add
jns
std
add
add
sub
movsb
dec
xor
mov
stos
add
int
add
cmp
add
mov
add
add
add
scas
int
lods
add
xchg
into
mov
add
xor
add
outsl
mov
repnz
add
rclb
dec
mov
aas
insl
mov
mov
cli
jmp
and
test
add
test
push
add
idivl
dec
push
push
sbb
or
scas
add
dec
add
add
add
mov
into
inc
mov
add
add
test
add
jae
fidivl
or
xor
or
inc
add
jle
jg
jmp
sub
jne
loop
rcl
add
add
add
int
movb
or
fs
push
repnz
cmpl
jbe
sub
addb
out
addl
mov
mov
add
or
mov
fldl
in
add
and
pop
add
cmpsb
pop
mov
or
mulb
add
fidivs
adc
mov
dec
inc
mov
je
sub
mov
xor
add
add
add
add
sbb
fldl
in
add
push
add
and
add
add
add
mov
mov
and
dec
mov
leave
add
xlat
testl
add
adc
sub
pop
add
in
stos
mov
mov
fcmovne
add
mov
lods
add
add
adcl
push
fildl
lahf
inc
out
add
movsb
inc
sbb
add
mov
add
jge
add
rorb
push
add
pushf
push
add
add
adc
add
test
gs
rolb
xchg
sbb
adc
xor
xchg
into
cmp
dec
push
or
loopne
cmc
jbe
insl
loopne
cmp
or
adc
sub
jp
call
aam
add
jmp
data16
cmp
adc
sub
pop
mov
out
enter
out
incb
iret
gs
lret
pop
dec
mov
xchg
addl
and
cmp
xor
add
fcmove
mov
push
adc
das
cmp
pop
adc
pushf
xchg
lds
jmp
fmull
xchg
dec
xchg
sub
stos
jb
fcompl
je
pop
loope
jg
jp
pusha
fcmovnbe
lea
test
cmp
mov
addl
sbb
mov
pop
dec
call
dec
lock
in
cmp
push
push
rol
fstpl
jp
inc
std
out
pop
dec
xchg
popf
cmpsl
xchg
scas
mov
mov
jbe
lret
or
sahf
dec
mov
jecxz
mov
mov
in
pusha
jno
sub
int3
aam
add
ret
dec
clc
out
or
insl
inc
or
clc
lahf
lds
fld
pop
ljmp
shrd
cmpb
add
fwait
mov
mov
inc
fadds
pop
push
or
push
dec
inc
adc
out
call
pop
sbb
jp
arpl
xchg
out
pop
dec
cmp
add
xor
in
or
out
test
and
int
subl
pop
scas
pop
ja
add
sub
lcall
push
dec
push
fadds
mov
mov
int
out
pop
xor
bound
push
jns
pop
outsl
in
flds
xchg
jbe
aaa
mov
xchg
iret
mov
bound
daa
nop
inc
jp
adc
mov
pusha
push
mov
leave
sbb
dec
pushf
fwait
jbe
pop
inc
jae
ja
inc
fists
adc
and
cmp
leave
cli
jge
popf
dec
mov
push
dec
jnp
stos
shlb
jno
pushf
mov
push
jle
xchg
in
dec
out
adc
jb
iret
sbb
cmpsl
ret
dec
pop
push
ds
pop
insl
pusha
jae
leave
jns
pushf
mov
popf
insl
inc
mov
inc
out
and
xor
mov
in
sub
imul
cmp
mov
incb
mov
push
pop
leave
xchg
hlt
mov
arpl
fxch
inc
loop
fmull
pop
jg
aaa
sbb
fmuls
dec
pop
jle
or
je
pop
and
lds
call
fbld
pop
jmp
cmp
popa
push
push
push
out
pushf
or
jge
leave
push
and
daa
arpl
jno
xlat
int
or
and
int3
int3
push
xor
add
call
push
lret
test
sub
adc
cmpsb
lret
in
lods
movsb
js
pop
adcb
cli
sbb
vphsubbw
adc
in
pop
cmp
jno
ds
repz
loope
mov
add
insl
sbb
mov
mov
adc
pop
xchg
out
cmp
mov
lret
dec
sbbl
jl
fdivl
movntps
scas
outsb
cmp
adc
cltd
lock
out
mov
cmpsb
aaa
mov
or
jo
push
sub
int
aam
fsubrs
imul
icebp
test
movsl
sarb
push
shrl
sbb
sahf
test
loope
xor
xchg
outsl
xchg
dec
stc
adc
popf
adc
mov
sbb
cmpsb
iret
ljmp
mov
cmp
adc
or
cmp
cmc
cmp
and
pop
daa
sub
adc
call
pop
adc
stos
xchg
add
daa
or
popa
cmp
fnsave
add
mov
push
jl
sti
jns
je
gs
gs
sub
popf
dec
lret
cmpsl
aas
inc
cmpsb
sub
fnstenv
out
les
ret
repz
out
jge
test
mov
out
scas
ljmp
inc
das
jne
inc
leave
push
jmp
add
cs
cmp
fidivrs
mov
jb
pop
cli
dec
sbb
sbb
mov
inc
aad
ss
mov
and
sti
sbb
inc
xor
lock
ret
sbb
pop
mov
popa
movsl
mov
rcll
pop
or
std
lea
inc
dec
adcl
push
icebp
xchg
lods
and
lahf
je
lret
jl
adc
mov
shrl
iret
inc
loopne
xor
loop
dec
insl
mov
fdivs
insl
sub
fwait
clc
fimull
pop
ljmp
sbb
mov
dec
lock
mov
repnz
subl
lret
inc
pop
cltd
loopne
repz
mov
into
jne
stos
cmc
out
enter
out
ret
lcall
pop
dec
imul
push
adcb
test
add
xchg
xor
dec
cmp
sbb
xchg
popa
pop
dec
test
mov
pop
fwait
scas
inc
sahf
xchg
add
xchg
fwait
arpl
je
inc
jb
mov
add
mulb
mov
out
data16
sub
dec
xchg
lds
mov
dec
jmp
push
insb
inc
or
cmc
addr16
jp
lret
cmpsl
mov
mov
mov
dec
rorb
or
jne
cmp
pusha
adc
xchg
mov
or
insb
jbe
xchg
push
xor
xlat
out
scas
adc
or
push
mov
test
pop
mov
inc
jnp
and
cwtl
mul
pop
fs
cmpsb
lret
jp
mov
das
sbb
xchg
std
inc
or
mov
gs
pop
lcall
inc
insb
inc
outsb
xchg
push
push
sbb
cwtl
lcall
arpl
push
add
xadd
in
inc
out
repnz
leave
push
adc
nop
arpl
scas
dec
inc
in
mov
sbb
cmp
fadd
cmp
cmp
addl
cld
push
loopne
dec
jb
fiadds
popa
lds
int3
push
jo
and
and
xchg
xchg
movsb
out
inc
enter
in
jbe
ficoml
jge
push
mov
jle
lods
daa
and
cmp
pop
jno
or
jl
sub
xor
ljmp
adc
rcrl
cmp
pop
push
xor
rolb
cmp
sbb
test
and
jno
loope
lret
inc
fisubrl
ffree
fnstsw
loopne
or
mov
jbe
adc
sbb
jl
mov
notb
das
and
aas
sub
mov
lcall
jle
and
sbb
outsb
pushf
cmp
je
dec
xorb
mov
dec
mov
rcll
push
and
pop
scas
push
xchg
popf
fsubs
ficoms
lret
lahf
shr
fmuls
or
sahf
dec
jmp
or
shl
outsl
sbb
fiadds
stc
lret
fs
je
adc
ljmp
stos
stos
jno
fldl
adc
movsl
jno
cli
jno
bound
push
out
mov
scas
mov
into
lock
loopnew
sbb
inc
not
adc
jmp
mov
in
sti
data16
jb
notl
stos
xlat
daa
jne
sub
dec
pop
mov
mov
lods
inc
decb
hlt
xchg
nop
adc
mov
inc
mov
scas
pop
les
je
push
sbb
inc
aaa
lds
add
clc
sub
sar
adc
mov
subb
sbb
aad
xchg
loope
pop
vmwrite
adc
insl
jb
push
dec
dec
xchg
leave
je
jmp
jecxz
adc
cmp
jg
jbe
jb
mov
jle
xor
pop
les
sub
out
xchg
pop
xchg
outsl
adc
lock
int
decb
mov
sbb
xor
cmp
testb
mov
dec
jl
sbb
fidivrs
icebp
push
ss
lret
lret
jmp
stos
mov
je
mov
add
mov
out
shll
sub
sti
aam
sub
ret
addr16
es
fs
adc
data16
ljmp
adc
cld
out
jno
pop
and
stos
fnstenv
loop
sti
add
cmp
cltd
pop
or
push
mov
jnp
push
xchg
nop
neg
shrl
int
insl
push
sbbl
mov
lret
pop
clc
testl
int
mov
add
jp
fstps
sub
enter
in
xor
xchg
xor
cmp
dec
adc
mov
xor
js
fwait
xchg
cltd
or
add
in
dec
loop
aad
xchg
bound
or
in
push
dec
xchg
adc
xorl
pop
scas
icebp
addr16
ss
rcr
mov
cmpsl
inc
test
bound
jne
xchg
xchg
jl
cmp
jmp
jmp
cwtl
xor
iret
aad
sub
inc
push
cmp
jo
cmp
jb
call
jle
xchg
ret
fst
adc
inc
xor
inc
pop
in
inc
jo
in
jae
add
push
and
leave
popf
mov
inc
add
xchg
ficompl
shl
sbb
imul
je
dec
and
sub
sbb
clc
fcomip
dec
push
xchg
arpl
sub
or
aam
jg
xchg
jmp
or
fnstsw
add
adc
out
xor
adc
fsubp
imul
fs
scas
in
inc
and
sub
push
out
push
or
push
jbe
and
jge
ret
lcall
imul
jno
gs
jl
mov
mov
sti
popa
sub
cmp
outsl
lahf
std
stc
jmp
jo
adc
cld
stos
cmpsl
inc
das
outsl
mov
add
sarl
iret
push
pop
ja
pop
push
or
loope
mov
jb
mov
lods
add
mov
xchg
aam
adc
mov
out
cmpsb
sbb
cmp
xor
sbb
pop
in
sub
xorl
pusha
push
stc
push
or
int
jmp
cmp
dec
outsb
clc
mov
mov
jo
jg
add
mov
jno
std
loope
and
fildl
mov
jb
loop
sub
data16
test
mov
dec
mov
pusha
das
sbb
pop
jae
xchg
cmp
xor
cmp
outsl
inc
xchg
cmp
jno
xor
and
enter
push
ss
repz
push
push
cld
mov
cmp
adc
xor
push
cmp
pop
pop
or
and
and
loopne
and
adc
test
add
push
dec
add
adc
lods
fisubs
add
xlat
imul
jb
add
daa
adc
inc
stos
test
mov
mov
or
scas
dec
fchs
bound
repz
jns
xchg
add
sbb
jg
cli
lods
shrl
repz
jbe
out
pop
sahf
pushf
cwtl
dec
jge
xchg
mov
lahf
aad
into
roll
sahf
scas
aas
mov
nop
jb
idivb
je
push
push
jecxz
iret
lock
imul
rcrl
jbe
adc
sub
test
dec
fistl
mov
fdiv
adc
das
ffree
andl
mov
sub
testb
std
fisttpl
test
ja
fisubs
adc
icebp
inc
pop
imul
in
and
pop
repnz
popf
test
mov
or
jle
sub
lods
ret
idiv
arpl
xchg
inc
mov
repnz
push
pop
in
xchg
std
push
ljmp
pop
lods
loop
fdivrs
xchg
pop
mov
push
test
orl
pop
cld
add
gs
imul
push
push
mov
push
test
pop
lahf
xchg
insl
bndldx
call
insl
pop
mov
xchg
aam
xor
fiaddl
pop
cmp
out
cmp
push
or
daa
xor
imul
icebp
stos
xchg
popa
test
rcrb
or
aam
int3
test
cmp
xor
push
shl
add
dec
test
fisubs
clc
out
jns
fs
inc
or
inc
mov
adc
or
shll
js
mov
dec
js
mov
sti
pop
dec
inc
shrl
push
shll
adc
fcomip
popl
xchg
outsb
lret
pop
mov
testb
jno
sub
jg
push
push
push
cwtl
data16
sub
hlt
insb
fstpl
or
daa
in
mov
mov
mov
ret
inc
pop
cld
stc
mov
push
jae
subl
mov
cs
insb
add
fimull
xchg
lcall
imul
scas
sub
notb
nop
or
orl
bnd
andb
xor
add
push
out
or
sbb
aaa
push
xchg
or
push
ljmp
test
pop
lods
jp
fimuls
cmp
jo
shll
scas
int3
sarl
test
cmp
loop
movsb
add
movsb
push
push
dec
pushl
fnstenv
jge
adc
sbb
cmp
loop
jl
iret
js
adc
sbb
fidivs
xor
mov
push
inc
pop
je
mov
out
inc
mov
xor
in
jmp
inc
js
mov
pop
mov
add
call
aam
sub
xor
cmp
shl
es
movsl
dec
jmp
mov
cmp
dec
sbb
aam
add
xor
jne
mov
and
jo
sub
imul
dec
lcall
push
fdivrl
sub
sub
xor
ljmp
mov
xor
xchg
mov
mov
and
and
mov
aam
adc
fcomps
ret
cmpsb
lret
mov
pop
cmp
mov
jb
sahf
xchg
adc
jbe
and
adc
stc
cmp
fwait
adc
leave
cmp
rorl
mov
cli
xlat
push
push
cmp
fs
rcr
mov
jo
xchg
xchg
sbb
adc
lcall
push
iret
and
and
add
xor
xchg
dec
imul
mov
xor
in
dec
mov
xchg
lahf
pop
sti
xchg
outsb
dec
adc
jno
mov
call
mov
les
sbb
mov
jbe
call
sub
mov
adc
lret
int3
jecxz
adcl
fildl
inc
xchg
inc
or
push
xchg
sbb
dec
jge
xor
cmp
stos
jecxz
iret
add
mov
lea
sub
mov
pop
or
sbbl
imul
pop
fcmovnb
addb
cltd
lock
int3
xor
mov
xchg
and
pop
sub
jbe
testb
decl
outsb
cmp
inc
adc
icebp
sbb
sub
lret
leave
xor
fs
mov
sub
inc
shrb
icebp
aam
movsl
dec
ret
test
push
insl
fistps
clc
mov
xchg
aad
sub
and
lods
dec
sub
mov
mov
lcall
jecxz
push
clc
and
add
fistps
arpl
mov
mov
mov
pop
int
test
loope
xchg
sbb
mov
jb
jnp
dec
pop
dec
lea
pop
clc
cmp
xchg
ds
movsl
mov
jnp
pop
sarl
adc
or
sbb
mov
lea
xor
adc
ja
sbb
dec
clc
mov
pop
or
fcom
fwait
lock
adc
fs
adc
mov
sbb
out
xchg
adc
bound
das
jns
pop
in
sbb
xchg
mov
or
mov
push
dec
adc
jp
sub
mov
out
mov
test
dec
sub
jl
jbe
xor
fists
out
xchg
inc
sbb
xchg
jg
addl
andb
mov
push
jo
sahf
aad
and
xchg
push
jnp
cwtl
mov
in
sti
repz
dec
pop
iret
xchg
orb
xor
push
jae
dec
pop
push
test
pop
popf
or
pushw
xor
cld
outsl
xlat
jno
icebp
and
sbb
fistpl
sti
idivl
scas
mov
dec
rcrb
cmpsl
bnd
repnz
mov
int
arpl
push
inc
out
lock
dec
jbe
aaa
adc
xorl
mov
movsb
mov
lds
dec
sub
stos
inc
xor
push
jne
cmp
ljmp
cmpsb
mov
jbe
push
cmpb
out
outsl
pop
movsl
daa
ret
jg
cmp
imul
mov
xchg
dec
sub
icebp
xor
stos
jae
lahf
cmp
push
push
xor
scas
push
xchg
js
inc
dec
adcb
push
cmpsb
in
ror
ss
fcoms
push
pop
inc
loope
bswap
sub
lcall
dec
out
stos
movsl
push
add
rorb
pop
iret
dec
addl
daa
cmp
les
cmp
cmp
js
iret
pop
xor
sub
dec
pop
stos
test
lcall
and
and
sub
aam
outsb
lds
adc
add
sub
fisttps
xchg
test
movsb
jo
and
fcomps
cmp
in
pop
lret
inc
scas
negl
cwtl
xchg
sbb
or
sahf
xor
and
xor
sbb
outsl
add
cld
stc
out
ror
fs
mov
sbb
sbb
cmp
into
insl
xchg
out
outsl
push
cli
or
repnz
jge
or
stos
shl
pop
jmp
loopne
jp
pop
mov
push
push
imul
popl
xchg
lods
loope
pop
adc
lods
lods
jmp
cmp
xor
xlat
in
and
pop
add
mov
std
std
add
xor
imul
add
movsb
fwait
dec
dec
inc
adc
out
mov
add
mov
rcrb
dec
xchg
stos
int3
jge
pop
pusha
outsl
adc
pop
pop
jmp
dec
push
cs
mov
inc
lods
clc
ds
out
jmp
jb
pusha
into
dec
hlt
sahf
je
and
lret
outsl
or
lea
dec
cwtl
cmpsl
fstpt
mov
std
pushf
xorl
lret
loopne
inc
loope
dec
dec
das
fwait
shrl
fistpll
aad
jl
dec
pop
and
leave
or
std
sub
dec
insl
xor
lea
out
mov
or
cmp
add
sub
loope
notl
add
jg
ja
sub
ja
call
es
and
lods
cmp
adc
into
ljmp
stos
lods
mov
mov
frstor
cmp
fmull
lcall
fcomps
outsb
sti
xor
fidivl
fldl
sti
test
cli
fwait
xchg
sub
rcl
imul
stos
push
and
neg
clc
xchg
in
cmp
add
pop
push
or
rcpps
popa
dec
mov
nop
imul
ss
pushf
ja
test
cmp
add
or
inc
jp
pop
add
gs
lahf
push
out
jb
adc
jns
icebp
mov
push
jle
xchg
add
ret
mov
movsb
fidivrl
dec
jbe
and
sub
mov
mov
mov
rorb
or
jne
sti
sbb
fbstp
inc
xchg
xchg
adc
sub
dec
mov
dec
jl
sbb
js
pop
add
sub
cmc
jecxz
push
test
and
fdivrl
into
and
xor
dec
adc
repnz
iret
mulb
sbb
push
inc
xchg
jbe
repz
in
imul
push
push
fidivl
add
hlt
imul
xor
out
xor
push
xchg
cltd
sarb
div
push
pop
mov
hlt
sub
scas
arpl
ljmp
dec
lcall
add
jno
or
fs
ja
int3
test
les
xchg
icebp
fmulp
dec
xchg
lds
je
jne
into
scas
mov
cmp
out
test
cltd
roll
sub
push
cmc
push
fidivrs
cs
daa
ret
cmp
push
pushl
inc
cmpl
jbe
movsb
mov
xor
inc
negl
pop
aas
clc
push
jmp
lcall
fsubr
cmpsb
pop
jg
in
mov
mov
dec
push
push
mov
fisubrl
sub
xlat
out
cltd
lret
insb
add
movsl
pop
subl
cs
or
pop
sbb
test
pop
lock
cmp
sub
sahf
push
lcall
fmul
jmp
mov
adc
and
push
jg
dec
or
lods
mov
cwtl
and
mov
int
aas
adc
fs
mov
in
stos
sahf
fdivs
test
scas
add
sub
lods
outsl
loop
inc
loop
xchg
xor
cmpsb
mov
adc
pusha
and
pop
shlb
cmp
leave
arpl
cli
cmp
dec
mov
or
and
cmc
and
pop
ret
adc
lock
inc
xor
ret
mov
lcallw
and
enter
fldcw
lret
test
mov
push
jb
adc
sub
jg
pop
nop
jg
jge
cmpsb
xor
leave
flds
jl
repz
xor
dec
xor
sarl
lock
mov
sub
mov
adc
addb
dec
xor
mov
shr
inc
mov
cmp
in
dec
imul
roll
jb
sbb
bound
out
add
adc
out
jae
push
loope
das
jp
fldenv
hlt
lahf
pop
and
adc
pushf
fldt
std
rorb
sub
push
dec
test
ja
cld
jbe
loopne
cmpsl
arpl
mov
icebp
aaa
mov
push
dec
rclb
jge
and
aam
outsl
ss
mov
cmp
lods
filds
add
ja
push
ljmp
xchg
lods
and
xchg
mov
loope
pop
push
push
cmp
scas
add
sbb
cltd
repz
insb
test
add
push
popf
lcall
test
test
xchg
jo
sbb
jl
movsb
jb
stos
std
or
pop
xchg
xor
dec
add
clc
pop
xor
sbb
xor
fisttpl
xor
dec
adc
pop
icebp
cmp
dec
ficomps
inc
xchg
jp
or
xchg
fwait
dec
push
fstps
stos
ja
add
pop
cmp
push
sbb
bound
jns
cs
xor
xchg
push
fwait
pop
mov
pushf
es
inc
ss
and
push
jmp
mov
adc
and
mov
and
jne
out
pusha
sbb
fists
in
xchg
out
js
aas
imul
andl
out
sti
mov
pop
clc
mov
push
ret
pop
fldcw
int3
cmc
mov
jnp
enter
decb
adc
lods
sub
push
leave
cmp
mov
pop
mov
pop
push
jae
mov
ja
push
icebp
adc
adc
fisubl
stc
xchg
lahf
or
out
sub
mov
push
sub
aam
xor
imul
ret
hlt
jbe
pop
arpl
imul
std
or
shr
aaa
xchg
cmpsb
and
sti
clc
dec
add
push
jne
cmp
fidivs
xor
stos
iret
dec
jo
jb
scas
imul
cmp
mov
push
inc
pop
ss
mov
int
gs
add
inc
xchg
jno
xor
jl
clc
repnz
pop
pop
dec
push
xchg
xor
loopne
cmp
mov
bound
inc
imul
in
mov
xor
inc
xorb
icebp
icebp
imulb
jmp
je
popl
in
movsl
fs
rolb
pusha
aam
lea
sbbl
lcall
outsl
and
cmc
subb
push
dec
pop
test
ljmp
push
push
mov
fdivrl
imul
lods
mov
adc
cmp
jg
push
pop
mov
jle
test
push
xchg
je
int
add
mull
ror
push
push
push
rcr
rorb
push
lret
mov
pop
xor
pushf
sub
stc
pop
dec
add
test
dec
adc
xorl
add
cmp
in
pop
out
push
sub
xor
sub
or
cpuid
cmc
out
or
out
inc
pop
loope
ss
sarl
cmp
add
jnp
out
scas
jo
sbb
lods
jp
ret
aad
xlat
bound
add
in
shll
or
xchg
into
xor
aaa
incb
xchg
sub
pop
xor
sbb
cmp
les
mov
clc
sbb
imul
test
sbb
inc
stos
adc
icebp
pushf
inc
inc
movsb
jmp
or
cs
adc
mov
jmp
sub
fwait
movsl
dec
loop
fdivs
cmc
jecxz
addr16
jne
test
sbb
xor
andl
dec
fcmovnbe
out
pop
out
xchg
inc
out
fbstp
das
pop
iret
jg
inc
adc
mov
jmp
mov
testb
std
ja
loopne
arpl
cmpsl
shlb
fnstsw
sub
mov
mov
aaa
mov
daa
fldenv
mov
or
and
in
aam
shl
ret
xor
insl
xchg
notb
xchg
xchg
orb
pop
leave
popa
std
and
mov
and
dec
push
icebp
xchg
mov
adc
cltd
sub
test
add
fstl
dec
xchg
repz
test
stos
in
mov
xchg
jp
xchg
add
push
sub
hlt
cltd
push
xor
enter
test
mov
xchg
xor
pop
lods
lods
jp
ret
dec
shll
pop
inc
sub
or
popf
mov
dec
ss
add
mov
lahf
out
xor
mov
cmp
or
xchg
lahf
inc
shlb
or
and
mov
in
repz
mov
rorb
jne
xor
pusha
mov
jecxz
jo
cmp
ss
rclb
in
pop
scas
sub
imul
push
add
fisubl
jecxz
jl
mov
adc
test
dec
mov
int3
adc
jge
iret
mov
mov
fdivs
inc
cmpsl
pushf
cld
jae
xor
icebp
outsb
cli
popf
jle
fs
push
lods
dec
xchg
divb
or
imul
mov
mov
popf
push
lods
and
loopne
cld
cli
dec
repnz
push
sarl
jo
mov
xorb
repz
ret
aaa
push
pop
jne
out
inc
mov
sbb
pop
imul
jo
and
add
or
into
cmp
xor
xchg
mov
jbe
inc
xchg
jge
dec
xor
pusha
into
mov
cmp
push
mov
xchg
dec
into
push
orl
or
jnp
arpl
popl
test
repz
cli
xchg
mov
in
xchg
pop
js
cmp
push
mov
or
into
cmp
jecxz
ds
les
fidivs
addb
sbb
cmc
push
add
xchg
movsl
icebp
add
shll
sub
and
lcall
push
fsubl
dec
sub
inc
adc
testl
push
xadd
mov
mov
ja
mov
outsb
mov
xchg
xchg
testb
lret
add
lods
cmpsb
fmuls
adc
lret
xor
jae
rorb
ja
sahf
push
icebp
cmp
xor
imul
mov
adc
adc
outsl
fs
out
mov
ss
cmpsl
cmp
mov
adc
cli
mov
push
sti
cmp
rcr
or
push
into
inc
das
insl
cmc
scas
inc
scas
loopne
nop
bound
adc
imul
mov
add
mov
scas
lods
popa
inc
loop
mov
xlat
mov
or
sub
adc
pop
xor
xchg
mov
sub
rcr
repz
les
xchg
shlb
sbb
out
cmp
daa
and
pop
jb
mov
pushf
out
adc
aas
mov
cs
leave
aad
enter
xchg
les
int3
or
xchg
dec
pop
outsl
ss
dec
sbb
divl
js
xchg
lea
inc
dec
mov
sub
lds
je
xchg
fildl
rorb
jbe
pop
lock
das
cmp
aad
or
bound
aam
cmp
notb
iret
xchg
dec
pop
add
mov
mov
icebp
je
test
int3
xchg
leave
lret
test
ljmp
shll
divl
test
ss
dec
push
sub
and
aam
mov
es
xchg
insl
jnp
repz
ja
jmp
shrl
jl
adc
adc
xlat
mov
out
push
push
nopl
lds
mov
daa
push
and
fnstsw
mov
add
jg
mov
xlat
inc
ficomps
out
cld
out
pop
je
xchg
shll
in
and
xchg
aas
pop
xor
mov
shll
leave
loopne
fwait
scas
clc
xchg
outsb
fcompl
mov
ja
jo
dec
out
inc
mov
xchg
lods
push
jecxz
lock
stc
mov
test
out
wrmsr
lea
mov
jns
xchg
sbb
clc
popf
push
xchg
out
xor
mov
jmp
push
or
add
jp
jge
mov
scas
jnp
ja
push
mov
jecxz
mov
xorb
pop
pusha
dec
xor
imul
adc
addl
fs
cmpsb
xchg
out
inc
insl
hlt
stos
push
push
and
aad
insb
hlt
lods
in
lcall
in
out
adc
and
pop
cmpxchg
mov
ret
or
push
mov
cltd
popf
movsl
mov
or
out
daa
fcmove
push
jecxz
dec
jle
sbb
lret
mov
and
repz
or
cmp
xchg
leave
xchg
rcrl
scas
into
arpl
xor
or
lods
xor
adc
add
push
call
pop
cwtl
cmc
jl
mov
es
jo
jmp
scas
daa
mov
cmp
lret
loop
mov
mov
dec
jge
push
ror
pop
sbb
daa
mov
jb
jno
outsb
add
mov
push
dec
lahf
int3
xor
push
cli
jg
mov
lea
lods
cltd
test
mov
shl
cmpsb
loop
hlt
in
outsb
and
js
icebp
hlt
icebp
push
jne
loope
fs
sub
mov
cmp
out
test
sarb
out
pop
sbbb
sbb
xlat
into
add
lds
test
pop
iret
pop
in
sub
and
cmpsl
inc
or
pop
pop
lods
push
add
xchg
iret
cmp
sub
xchg
outsb
push
insl
cmp
gs
jg
jno
add
mov
mov
mov
mov
and
mov
mov
lret
push
fwait
xchg
ror
adc
lret
fadds
mul
outsl
and
cmp
pop
cmp
bound
test
rolb
loop
lahf
inc
stc
lret
push
stc
fs
ret
and
hlt
call
out
dec
sbb
push
sub
ss
cmpb
xchg
into
and
es
loopne
adc
adc
ja
into
imul
sub
add
inc
adc
ret
dec
sub
cmp
and
loopne
clc
sub
jo
test
pop
in
test
rcll
jge
out
gs
push
xor
ret
mov
mov
sub
test
repz
dec
mov
sbb
popa
call
ret
pop
and
xor
lcall
cs
aad
pop
cmpsl
inc
sbb
cmc
jb
cmpsb
lds
cld
mov
mov
gs
int3
sub
jnp
orl
lock
jg
fisubl
jp
nop
dec
dec
pop
pop
cmc
fldt
pop
pushf
pop
or
sbb
std
lcall
pop
in
cmp
sbb
pop
rorl
sub
mov
pop
sbb
cmpsl
mov
fiadds
cld
divl
sub
inc
mov
xor
sbb
subl
mov
sub
movsb
inc
shrl
rol
clc
mov
mov
ljmp
mov
jns
mov
imulb
lods
inc
sbb
arpl
add
and
mov
loop
out
popf
sbb
mov
jns
movsl
add
out
and
xchg
or
sbb
xor
inc
xor
out
or
adc
in
aam
stos
rorl
xchg
pop
pop
and
ja
adc
mov
roll
out
mov
mov
es
push
jno
out
rorl
fiaddl
cmpsl
mov
jo
cmp
cmp
xchg
or
out
jl
push
add
lock
mov
cli
cmp
mov
enter
mov
fildll
scas
adc
and
ss
jbe
popf
adcl
out
lcall
loope
dec
push
cmpb
and
cld
inc
insb
pop
inc
push
jnp
dec
movd
sbb
adc
iret
jb
cld
ret
pop
pop
inc
lea
inc
mov
and
ja
test
pop
inc
xchg
inc
cmpsw
sub
jle
cmc
xchg
movsb
out
mov
imul
aam
cmp
shlb
xor
bound
push
leave
or
mov
arpl
rclb
or
icebp
in
ljmp
out
mov
int3
push
outsb
cmpsb
pop
repz
ficomps
pop
lds
inc
jo
lds
and
xor
cmp
sahf
movsb
inc
push
notl
fcmovu
jbe
mov
jge
mov
out
mov
notb
jl
xchg
push
dec
lods
adc
xor
mov
inc
lahf
shll
xor
xchg
aas
push
mov
mov
cmpsb
mov
js
or
pop
xor
cli
push
cld
dec
loope
push
push
sub
adc
test
clc
ror
movsl
jns
jmp
subb
xor
insl
add
push
stos
xor
cmpsl
inc
jae
pop
idivb
sub
hlt
ja
cmp
lcall
loop
jp
arpl
ret
outsb
mov
ja
lods
dec
leave
orb
mov
iret
push
mov
pop
lds
mov
pop
push
sahf
aad
int
popf
rcr
call
cltd
negl
nop
mov
mov
xchg
cmp
repz
sahf
fs
test
outsb
xor
dec
mov
stc
or
fs
sub
adc
sarb
mov
popf
adc
or
xor
addr16
or
jns
into
or
cmc
cmp
mov
mov
outsb
pop
ds
adc
mov
and
fistl
repnz
pop
adc
cmpsb
iret
stc
lods
das
cmc
pop
cmp
push
dec
xlat
pop
xchg
and
xchg
inc
pop
mov
adc
sbb
mov
jg
gs
cmp
nop
jmp
cld
dec
and
cmp
arpl
fldenv
mov
repz
mov
xchg
pop
insl
sbb
inc
call
and
pop
stos
adc
mov
jmp
loopne
cs
dec
mov
aas
or
mov
mov
push
je
pop
jecxz
fs
jle
jae
je
stos
cwtl
dec
les
mov
stos
rolb
dec
ja
fistpl
aam
lods
lods
loope
test
aaa
lock
and
testb
mov
mov
repz
fnstenv
dec
push
les
mov
movsb
icebp
and
out
and
push
mov
jmp
mov
and
mov
out
test
sahf
bswap
sub
mov
outsb
repnz
fisttps
es
sub
jge
in
fwait
jmp
ljmp
lods
iret
mov
mov
std
insl
push
and
pminub
loopne
jbe
sbb
movsl
fildll
push
test
mov
test
es
xchg
push
sbb
mov
roll
sub
call
xchg
dec
sbb
add
cmp
call
xchg
mov
addl
xor
or
mov
lahf
rorb
fnstsw
ja
xor
stos
add
inc
in
mov
stc
fwait
or
cmpsl
add
lds
out
int
nop
shlb
in
push
mov
mov
push
aaa
mov
xor
push
addr16
loopne
mov
push
mov
pop
jge
dec
jp
bound
jns
pusha
test
ds
jmp
inc
testl
sub
sbb
sub
xchg
inc
stos
push
and
and
inc
pop
insb
lret
jnp
push
dec
jle
stos
mov
sahf
mov
adc
cmp
rorl
jb
jge
jae
enter
jg
push
cmp
in
popf
repz
push
in
inc
fidivl
scas
xchg
sti
orb
xchg
sysret
scas
fimuls
mov
inc
in
sub
mov
and
andb
mov
sub
inc
add
push
or
lods
rclb
push
sbb
repz
imul
jne
pop
divb
jns
or
add
lds
sub
inc
movsb
shrl
loopne
cmp
outsb
enter
daa
mov
das
mov
jl
jo
dec
sbb
loope
jb
push
lahf
cmc
add
test
push
rorl
call
stos
mov
mov
lret
pop
outsl
pop
jl
or
data16
sub
ja
cmp
jmp
movsl
adc
shrb
into
cmpb
sbb
pushf
add
cmp
cmp
or
call
sub
push
pop
movsl
lods
jns
mov
dec
rcr
and
xchg
leave
outsb
pop
xor
adc
cmpsl
xchg
jg
setbe
add
mov
dec
add
shr
push
mov
out
fdivrs
mov
lret
dec
sarl
or
test
sahf
pop
push
xor
repz
jmp
or
stc
cmp
sub
push
ss
push
gs
mov
out
push
popf
cli
cmp
mov
cmp
js
or
jg
jmp
sahf
cmc
add
loopne
pop
mov
adc
and
adc
add
es
sub
lods
push
mov
rcl
pop
lods
mov
mov
jg
jbe
dec
in
inc
xchg
ret
xchg
nop
bnd
andl
and
cwtl
or
int
test
or
xchg
lock
movsb
pop
cld
pop
mov
adc
jns
jmp
mov
cs
stc
arpl
movsb
test
inc
dec
out
aas
test
subb
dec
data16
jecxz
inc
xchg
movb
cli
cwtl
or
lods
mov
xor
incb
xor
loopne
pop
push
jle
inc
or
mov
das
aad
push
mov
xchg
sub
daa
std
shl
clc
sar
adc
add
mov
dec
outsl
icebp
stc
dec
out
or
lds
mov
out
mov
add
cmp
push
aam
movsl
and
outsb
scas
jmp
stos
mov
sub
ljmp
push
lods
cmp
pop
mov
lods
sub
pop
push
pop
jnp
mov
add
pop
cmp
mov
add
fnsave
inc
sbb
xchg
mov
xchg
mov
rcr
imul
out
dec
sahf
cmc
xchg
xchg
push
iret
add
dec
xchg
xor
fidivl
jnp
jle
enter
mov
fstpl
inc
sahf
ja
fstpt
inc
test
pusha
or
cmp
fcomps
fnstcw
mov
and
lods
icebp
dec
bound
xchg
jns
cli
push
in
mov
xchg
fistl
arpl
mov
push
jp
lahf
inc
mov
sarb
push
adc
jne
push
pop
pusha
and
mov
jmp
or
mov
xor
out
popf
mov
mov
jmp
jo
aas
mov
insb
xor
and
jle
aaa
inc
in
mov
adc
inc
ret
int3
pop
mov
lock
sarl
pusha
jae
and
push
std
popa
add
adc
push
jno
in
inc
xchg
push
cmp
sbb
outsl
and
rcrl
loop
push
enter
pop
cmpsb
hlt
mov
or
sub
hlt
in
dec
andl
call
or
addr16
aaa
dec
push
or
or
sub
pop
and
ret
dec
xchg
je
xchg
mov
scas
les
scas
and
inc
cmp
mov
test
iret
sub
jge
mov
push
daa
mov
sbb
jno
fsubrs
mov
test
xor
out
je
adc
cld
push
cwtl
test
pop
sahf
in
inc
sbb
cmpsb
imul
and
js
sub
pop
scas
push
pushw
daa
mov
sub
lods
or
mov
cmp
jno,pt
movsl
xchg
push
adcb
int3
add
ja
xor
and
int
scas
pop
inc
stc
shrb
aam
popa
pop
and
ret
lcall
std
jge
mov
test
sub
stos
jg
inc
jb
jge
pop
mov
fs
xchg
push
and
cmp
movsb
scas
in
dec
and
fdivs
loope
sbb
call
push
mov
mov
mov
push
and
outsl
sbb
scas
loop
cmpb
scas
scas
fs
faddp
adc
mov
out
lret
ss
stos
dec
pop
out
and
cli
outsl
xorb
adc
bound
sub
into
into
ss
loopne
sbb
jl
mov
imul
andb
aas
data16
inc
or
jne
pop
xlat
popf
inc
mov
mov
ljmp
out
aam
test
sbb
dec
loopne
sub
fxch
orl
xor
das
xchg
fiadds
sbb
shr
repz
and
pop
ds
popf
adc
and
pushf
fwait
cltd
movsl
jmp
inc
stos
cs
mov
jmp
roll
sub
aas
dec
enter
cmp
dec
xor
ret
xor
movb
cwtl
les
das
mov
icebp
dec
and
jae
repz
pop
inc
xchg
and
lock
ljmp
mov
mov
shll
shl
sahf
mov
std
mov
fisubl
fcoml
cld
js
mov
mov
sarb
pushf
adc
pop
and
mov
inc
lahf
pop
sub
orl
es
lds
arpl
xchg
int
fucomp
mov
cmpsb
or
mov
iret
jno
and
cmp
sets
add
aaa
test
xlat
les
mov
push
test
frstor
arpl
sbb
mov
pop
cmpsb
add
stos
xchg
scas
fucomi
stos
jmp
fildl
push
ss
decl
in
daa
mov
jle
xchg
xchg
mov
movsl
push
aas
dec
jl
lds
xchg
mov
jge
cmp
nop
push
xchg
inc
sbb
xchg
or
ja
fwait
push
cmp
add
jnp
std
out
mov
sbb
push
push
in
pusha
mov
mov
repnz
test
mov
sbb
aad
mov
cmp
and
popa
mov
repz
stos
test
lcall
or
jecxz
ss
xlat
add
jne
in
dec
cmp
xchg
inc
es
cmp
fldenv
insb
mov
mov
jle
mov
adcb
mov
and
add
sahf
pop
jmp
add
mov
push
rolb
inc
mov
push
jecxz
xchg
ficoml
pop
ret
sbb
clc
std
imul
scas
movsb
sub
push
pminsw
shlb
mov
pop
in
lahf
leave
jo
push
hlt
cmp
dec
arpl
xor
idiv
cmpsl
sbb
and
aaa
or
cmp
and
cmc
pop
push
xchg
fiadds
test
int3
lcall
dec
out
cmp
loopne
push
push
mov
cmp
adc
enter
daa
mov
mov
xor
mov
icebp
mov
xor
add
lahf
xor
push
scas
arpl
test
ljmp
cmpsb
out
rcrb
js
sbb
push
lret
jnp
mov
fs
das
xchg
movsl
mov
mov
pop
sarl
andb
insb
add
add
mov
nop
mov
imul
dec
pop
push
pop
mov
jl
push
pop
hlt
sub
jnp
movsb
sub
lret
xorl
lods
mov
ficompl
out
sbb
mov
cs
and
int3
mov
int
cmp
or
lret
js
data16
mov
subl
xorb
test
lds
test
pop
mov
stc
cmpsl
push
adc
push
adc
test
xor
xchg
mov
outsl
ss
mov
fbstp
cmp
mov
xor
sbb
cmc
xchg
mov
pusha
pop
fwait
ret
out
adc
ljmp
cmp
sbb
lods
in
push
cmp
gs
mov
push
rcl
lods
or
or
mov
jl
jmp
aas
movsb
pop
inc
mov
flds
lahf
xor
repz
inc
xchg
mov
mov
call
mov
int
adc
repz
inc
jmp
fwait
pusha
cs
mov
xor
fwait
aas
out
xchg
jb
sub
dec
lods
lcall
inc
les
xchg
push
lea
fabs
mov
into
into
mov
sbb
dec
or
sub
jmp
mov
inc
sbb
sti
lock
pop
adc
xchg
pop
test
mov
sub
sbb
mul
xchg
sbb
dec
inc
cmp
mov
jg
xor
mov
loop
mov
xor
mov
inc
ljmp
jecxz
xchg
aam
push
es
cmp
xor
sahf
mov
xchg
or
ljmp
mov
mov
repnz
push
adc
decl
divl
add
aas
pop
test
mov
push
bnd
fnstsw
mov
loop
popf
sbb
sub
mov
pop
push
stos
push
xchg
out
out
push
sub
xchg
and
pusha
add
fdivrp
scas
mov
xor
cli
or
pop
shll
arpl
dec
jecxz
mov
push
and
cmp
lea
and
mov
cmpsb
or
test
push
pop
mov
add
lcall
jns
es
stos
in
bound
mov
push
out
mov
and
xchg
sbb
xchg
jp
cmp
mov
xchg
or
dec
add
mov
dec
and
enter
test
sub
inc
jmp
mov
mov
pop
sub
int
mov
stos
test
cld
imul
jnp
or
jle
cs
adc
add
out
inc
adc
pop
and
inc
jmp
xor
popf
push
inc
mov
adc
xchg
add
repz
push
subb
test
push
cmp
mov
repnz
imulb
subl
inc
or
rorb
fnsave
push
add
addb
out
lods
lds
jo
testl
jle
imul
jb
dec
push
insl
mov
add
in
jge
dec
addr16
daa
mov
femms
jno
jle
jl
std
mov
push
mov
dec
std
and
test
push
adcl
mov
inc
push
repz
cmpsb
jno
adc
icebp
and
cmp
push
pop
sub
xor
and
loope
ja
sub
xchg
jb
adc
xchg
movsl
xchg
cmp
es
incl
adc
in
add
out
xor
sub
push
jp
pop
xchg
add
mov
pop
and
cs
ja
es
sbb
jle
dec
outsb
inc
add
adc
clc
loope
mov
mov
icebp
cmp
ss
xlat
and
mov
pop
int
cmp
fwait
add
lret
pop
sar
jbe
sahf
lock
xor
add
lret
outsl
fcmovb
sbb
ret
stc
pop
and
fs
out
adc
adc
cmp
mov
inc
arpl
aad
aad
imul
scas
or
jbe
pop
jp
loopne
fcoms
pop
mov
daa
ljmp
mov
dec
add
lea
lret
add
cmp
inc
cmp
sub
pop
mov
rclb
sub
cmp
sar
push
lods
cmp
inc
popf
mov
cmp
add
repz
ficoml
cld
fs
call
and
adc
lods
and
push
jmp
mov
cs
or
inc
lahf
in
dec
aas
xchg
sub
and
sub
jecxz
insb
enter
inc
lea
mov
cwtl
cmp
xor
andl
divb
push
fistpl
in
pop
cmp
mov
cli
push
jle
jb
and
mov
mov
push
xor
push
stos
std
or
dec
inc
cmp
mov
jle
xchg
cld
into
mov
mov
lods
xchg
mov
nop
and
push
jecxz
bound
xchg
sub
or
aam
mov
ret
sbb
xor
insl
in
pop
clc
fsts
dec
test
ljmp
mov
pop
imul
push
sti
push
out
ret
sub
push
cli
xchg
add
xchg
or
test
pop
add
push
mov
sbb
aam
test
in
xchg
xor
mov
mov
loope
and
stos
jne
push
out
jno
mov
add
jne
xor
iret
inc
or
jle
xor
jne
mov
stos
sub
dec
dec
scas
adc
add
ja
ljmp
dec
aaa
push
or
addr16
fwait
lahf
xchg
push
ret
add
xor
jmp
dec
xlat
sahf
bound
loop
cmp
in
mov
push
mov
scas
scas
mov
pop
push
fisubs
mov
iret
mov
xchg
loope
jns
add
push
pop
data16
dec
sbb
mov
fisttps
fstl
divl
xchg
insl
push
sti
sbb
out
pop
pop
sub
or
jb
sbb
in
and
test
and
mov
adc
pop
mov
dec
mov
pop
pop
jnp
inc
hlt
jae
lahf
inc
push
inc
pop
sub
xchg
inc
loope
xchg
in
xchg
push
cmp
sbb
mov
push
outsl
xor
push
fstl
hlt
cmp
lods
dec
adc
add
leave
pop
lcall
fnstcw
ss
cwtl
xlat
mov
mov
and
add
push
pop
mov
sbb
mov
jo
xor
stos
and
pop
loope
or
movsb
std
jecxz
push
mov
mov
jge
push
enter
daa
mov
pop
cmp
xchg
sub
push
lahf
sub
xor
mov
out
push
push
imull
test
subb
jecxz
sbb
fsubs
js
mov
pop
imul
fldcw
mov
mov
fidivrs
rcr
cmpsl
xchg
movsl
pushf
xor
leave
popl
ja
sbb
mov
xor
add
push
fidivs
pop
mov
mov
cs
pop
xor
jb
mov
repnz
adcb
xchg
jg
cmc
add
fdivl
mov
popa
outsl
and
mov
jge
nop
fsubs
jbe
lret
add
xchg
das
hlt
mov
inc
inc
sbb
stc
mov
test
and
mov
xor
aaa
fs
sbb
lock
ss
add
pushf
or
gs
or
aad
inc
fistpll
cmp
add
in
into
ja
sbb
pop
mov
loopne
aam
pop
fnstcw
mov
repz
add
sbb
es
xlat
pop
jg,pn
adc
mov
sub
sti
or
decb
in
gs
adc
mov
std
fnstenv
stc
scas
call
sbb
inc
daa
out
mov
icebp
adc
pop
lahf
pushf
pushf
lock
jmp
xchg
jl
sbb
xchg
aad
cmc
cmp
imul
sub
sub
jecxz
pop
in
lea
lea
dec
cwtl
cmc
and
mov
dec
loope
mov
dec
sbb
pop
fmull
daa
sub
lock
pushf
lcall
idivb
mov
inc
jns
shll
add
addr16
adc
scas
nopl
int3
cmpsl
mov
lahf
fdiv
push
pop
dec
cld
stc
dec
stc
lret
mov
cmp
icebp
in
mov
subl
sub
ret
fst
gs
std
es
add
mov
cli
xchg
mov
adc
mov
mov
lock
out
out
mov
cmp
fbld
leave
scas
mov
add
sub
cltd
loop
flds
out
xchg
push
js
dec
and
loopne
lcall
jns
cmpsl
js
stos
fs
std
out
aam
cli
xchg
mov
xchg
add
ss
xor
xor
or
loop
mov
scas
imul
pop
test
dec
ja
mov
bound
lock
sbb
pop
push
gs
add
mov
cmp
sub
cmpb
imul
arpl
xchg
pop
pop
mov
mov
sbb
cmp
aam
jp
movsb
int
stos
mov
mov
dec
fs
jmp
mov
pop
fildll
xchg
xchg
push
in
jmp
cmp
mul
jbe
sub
sub
cli
jb
stos
xor
and
cmp
jnp
add
in
mov
mov
stc
ret
mov
inc
call
jae
push
out
or
jl
add
dec
fidivl
test
imul
scas
int
pop
push
in
addr16
cli
mov
push
movsl
push
leave
aad
insl
hlt
sbb
arpl
inc
sbb
mov
mov
push
push
aaa
dec
mov
or
cmp
int3
add
pop
loope
and
sub
movsl
fdivs
mov
scas
inc
mov
xchg
mov
arpl
or
mov
mov
jge
insl
fcmove
cmp
daa
mov
aam
jno
mov
jl
sub
dec
inc
mov
push
subb
push
testb
nop
sub
push
daa
cmpxchg
dec
pop
out
jb
dec
cmpsb
ja
fucomip
mov
pop
fstl
stos
popa
jecxz
dec
in
sub
shl
sub
lret
outsl
jmp
push
movsl
mov
sub
in
std
sbb
negl
jle
push
add
cmpsl
sub
sbb
mov
pop
loopne
jp
rorb
and
cmp
fdivrl
sub
outsb
push
push
lds
cs
inc
jg
cmp
mov
mov
test
push
pop
push
mov
jg
in
scas
fsubs
div
sbb
lret
movsl
shrl
mov
inc
data16
ss
addl
cwtl
pop
jp
call
and
mov
cmp
aas
popf
sbb
cli
sub
cmp
xchg
lret
je
xchg
jno
cli
cmp
sahf
xor
adc
push
or
jle
cmc
out
mov
pop
in
pop
clc
ret
xchg
adc
mov
add
movsb
jl
cltd
fs
cmp
jl
cltd
fdivs
dec
rcl
shll
aam
mov
mov
fidivrl
or
jge
inc
ret
push
dec
fldcw
outsl
shl
sbbl
pop
cli
sbb
mov
add
pop
or
insl
pushf
inc
pusha
mov
jg,pn
jl
pop
inc
int3
inc
aad
mov
jle
sbb
lret
call
jecxz
mov
fimuls
cwtl
mov
fidivs
jg
roll
int3
mov
fstpt
stos
pop
jg
bound
test
das
xor
mov
sbb
sub
mov
xor
pusha
test
push
test
cmpsl
mov
fs
sub
and
std
dec
adc
mov
je
pop
mov
cs
sub
and
aam
pcmpgtw
cmp
insl
mov
daa
clc
dec
test
ret
ljmp
pop
lods
push
mov
fnstsw
daa
and
movsb
lods
bound
adc
jge
call
fs
test
sub
mov
roll
push
inc
test
cmp
xchg
rcrb
cmc
rorl
popf
mov
aaa
lahf
mov
stc
movsl
and
mov
cld
loope
jae
or
xor
mov
jne
mov
leave
dec
sbb
in
pop
aas
mov
mov
inc
ja
xchg
or
cmpsl
daa
fwait
and
stos
push
or
or
out
push
out
pop
das
stos
bound
lahf
jns,pn
leave
insb
in
bound
xchg
data16
mov
cmp
mov
adc
jo
jp
out
mov
std
sub
adc
dec
int3
flds
pusha
daa
aad
filds
mov
push
xchg
add
adc
sub
jle
dec
push
cmp
stos
add
dec
insb
dec
mov
jne
test
in
jg
adc
jmp
or
dec
pop
mov
inc
or
imul
fldl
mov
inc
fisttps
mov
xchg
add
les
mov
scas
xor
aaa
push
sub
and
cmpsl
dec
push
leave
dec
lods
or
fs
arpl
sbb
inc
adc
add
push
aaa
or
nop
or
stos
add
loope
roll
pop
adc
mov
jbe
pop
out
inc
scas
pop
imul
aaa
xchg
mov
jbe
js
adc
fcoml
lcall
sub
xor
daa
mov
sarl
inc
inc
mov
jl
std
or
shrl
push
cmpsb
mov
and
pop
lahf
scas
jno
push
cli
pop
push
test
push
inc
add
scas
cmpsb
cli
mov
js
lcall
mov
int3
out
xchg
xchg
cmp
mov
jae
stos
mov
rclb
stc
adc
mov
adc
insl
test
pushf
add
pop
pop
inc
fldcw
cmp
jbe
lock
mov
jg
sub
loope
imul
orb
jg
adcb
sbb
sub
pop
in
and
sarl
ds
mov
sbb
push
neg
in
pop
lret
outsb
rol
or
dec
or
dec
test
imul
ja
pop
loop
pop
mov
sbbl
fs
loope
adc
out
cmp
xchg
sbb
stos
cli
outsb
mov
out
outsb
or
push
jb
cmp
pop
insb
loopne
or
pop
pop
int3
cwtl
adc
push
or
sbb
adc
cmpsl
push
add
lret
fisubrs
push
cmp
jnp
mov
jne
in
add
insl
sti
imul
gs
jge
nop
call
int
inc
or
loop
mov
cpuid
ja
aas
fwait
sub
jno
mov
cmp
sub
sahf
repnz
pop
mov
xor
pushf
repnz
outsl
loop,pn
adc
lock
jae
arpl
jb
lock
je
jl
jecxz
cld
lret
xchg
sbbl
imul
mov
out
dec
and
dec
mov
loope
cmpsl
int
pop
and
xor
imul
mov
pop
and
roll
cmp
in
aaa
xor
std
dec
xor
insb
mov
add
movsl
cld
dec
mull
insb
dec
xor
jg
pusha
mov
mov
xchg
push
sub
mov
cli
es
xlat
push
xchg
or
ljmp
cmp
mov
scas
mov
and
jg
rorl
jae
incb
sti
clc
mov
repnz
mov
sti
or
shlb
test
inc
cld
xchg
ficoml
shl
jns
pop
std
xchg
lds
lcall
add
or
ljmp
movb
cwtl
lock
mov
push
xchg
dec
pop
cli
hlt
push
ja
sahf
movsl
dec
dec
jp
inc
push
rclb
fwait
push
fwait
addr16
stos
adc
add
inc
clc
ljmp
pushw
jns
adc
in
mov
xchg
mov
shll
cmpsb
xchg
or
sahf
jmp
jp
fisubs
mov
imul
sub
test
xchg
les
pusha
ret
fbld
xchg
scas
jmp
into
shrl
out
xchg
hlt
mov
in
js
loope
jne
leave
cmp
insb
mov
fdivrs
or
in
aam
adc
xchg
iret
push
outsb
ret
inc
pop
incb
shll
cmpb
add
fisubrl
test
inc
pop
mov
xchg
pop
add
imul
imull
jb
faddp
std
mov
inc
repnz
and
hlt
scas
pop
jmp
push
xor
inc
adc
ja
sbb
mov
sbb
insb
jmp
int3
lods
aad
pop
aas
jne
fidivs
pop
js
pshufw
ljmp
into
dec
movsb
sahf
pop
jnp
test
sub
enter
daa
mov
scas
cmp
jbe
out
jns
jl
movsl
add
and
test
dec
rcll
and
mov
pop
test
loope
xchg
inc
nop
aad
cmpsb
jge
ret
in
lea
pop
sub
cmc
push
mov
loope
fisttpl
sub
push
inc
cmp
push
fstpt
adc
push
movsl
mov
mov
mov
lods
add
in
lahf
js
js
xchg
xor
sar
cs
pusha
mov
lcall
dec
loope
sub
sbb
outsb
int3
jno
adc
sub
jp
ss
push
xchg
bound
into
and
test
push
mov
ror
mov
add
xlat
leave
out
mov
enter
pop
jle
mov
sbb
test
test
outsl
push
jnp
loop
mov
fs
aas
mov
adcb
mov
mov
cli
mov
in
mov
adc
pusha
movsl
jo
and
mov
je
dec
loopne
inc
lret
fsubr
adc
and
imul
adc
aam
xchg
mov
lods
addr16
and
xlat
test
xlat
pop
mov
shll
and
mov
roll
dec
sbb
stos
inc
jmp
ret
inc
les
sub
xchg
jo
and
cwtl
or
sbb
in
xchg
or
sub
iret
jno
inc
and
aad
or
add
mov
dec
dec
mov
jecxz
mov
xchg
mov
int
es
mov
push
adc
filds
mov
fcmovnbe
dec
inc
pop
vpminsw
mov
sti
das
out
mov
sarl
in
xchg
rcll
push
divb
orl
sbb
cmpsl
mov
push
mov
fiaddl
jg
fistl
orl
aas
adc
pop
xor
faddp
cmpsb
shlb
cs
mov
pusha
aam
mov
frstor
aas
shl
insl
cmpl
fldl2e
imul
lods
daa
pop
jl
movsb
cmpsl
lcall
jle
push
pop
out
psrld
movl
xchg
adc
mov
int3
mov
test
loope
xchg
or
jge
inc
sarl
bound
xor
fucomip
std
mov
xchg
xchg
fcos
leave
xchg
stos
xor
cltd
adc
std
mov
mov
mov
mov
pop
mov
dec
ja
loope
dec
inc
adc
inc
movsl
cmc
stos
or
add
dec
dec
ds
popf
xorl
jns
jmp
in
pop
jp
add
sti
mov
cwtl
lea
or
addr16
mov
mov
stc
fidivrl
mov
imul
inc
adc
lds
int
lret
mov
in
xchg
cltd
gs
sbbl
loope
in
xchg
sub
hlt
sbb
mov
push
call
cmpsb
cmp
popf
jnp
xor
jle
ret
adc
lea
iret
leave
int
ret
int
xor
lods
jo
jbe
push
push
std
sub
sub
lret
inc
fucomp
xchg
fcmove
xor
sbb
xchg
les
scas
mul
imul
out
mov
dec
xor
hlt
cli
fsts
sbb
inc
or
test
shll
xchg
or
jecxz
stos
sbb
int3
xchg
jl
pop
outsb
push
pop
ficoms
test
jo
notl
aam
and
fs
jecxz
movsb
sub
notl
mov
mov
int
enter
daa
mov
and
test
mov
jl
and
xchg
pop
mov
sub
xchg
xor
and
xchg
mov
mov
addb
mov
add
or
arpl
out
addr16
cli
push
arpl
add
push
cmp
xor
in
inc
add
add
sbb
ljmp
mov
and
or
push
xor
xor
push
lcall
lahf
fdivrl
cmp
sub
mov
adc
jg
adc
mov
insb
mov
mov
mov
and
rcll
int
mov
fcoms
jne
lret
aaa
shl
nop
mov
lds
lcall
test
inc
jp
lret
or
inc
loop
push
cltd
stc
icebp
repnz
pop
adc
cs
mov
cmp
mov
out
pop
xchg
aam
pushf
xor
fs
mov
adc
cmp
loop
push
call
nop
imul
into
pop
add
mov
lods
dec
and
xlat
push
out
mov
mov
dec
mov
xlat
sbb
fstpt
gs
popf
nop
sahf
jno
dec
jns
das
inc
cld
bswap
fsts
jecxz
and
xchg
adcl
das
loope
pushf
pop
imul
popf
stc
pushf
dec
cmpsl
call
cs
movsl
aad
sub
xor
mov
or
dec
jbe
scas
je
js
jecxz
mov
cltd
outsl
xor
loope
sub
pop
xor
dec
lea
negb
pop
mov
lock
mov
aas
in
mulb
pop
inc
rcrl
inc
sti
std
dec
cmp
dec
daa
lret
push
cmpsl
mov
push
mov
mov
mov
movsl
out
fwait
lret
dec
cltd
clc
mov
shll
jno
mov
rorb
cld
ja
lods
adc
ret
out
inc
es
insl
push
test
ljmp
sbb
mov
dec
and
xor
adc
add
xchg
pop
cltd
mov
rcrb
sbb
sbb
faddl
pop
rcll
sub
pusha
test
faddl
or
or
insb
int
or
xor
fbld
mov
mov
mov
xorl
pop
fldl
aas
inc
or
cmp
fwait
mov
repnz
icebp
jge
add
clc
push
push
out
movsb
push
cmp
xchg
cmpl
push
jo
push
in
inc
mov
je
mov
push
xchg
sub
pop
cmc
jp
call
mov
push
cmp
mov
mov
dec
jne
stc
jne
pop
hlt
pusha
clc
sbb
shll
jmp
fs
lea
or
sub
das
icebp
mov
stos
pop
xchg
insb
fdivrl
and
in
lock
cmp
sub
repz
and
insl
addb
jae
rolb
sbb
in
push
inc
inc
pop
test
fidivrl
xchg
or
mov
imul
inc
scas
pop
aad
push
add
shlb
icebp
mov
mov
pop
iret
hlt
inc
lods
mov
inc
sbb
jmp
aas
ss
or
leave
add
test
xor
pop
popf
std
repnz
repz
cltd
je
mov
in
sahf
cmp
test
jbe
xchg
or
ror
and
push
mov
and
fcmovne
ret
iret
jl,pt
jb
dec
add
sub
push
add
xor
mov
pop
cmp
jbe
test
ja
addr16
scas
fidivs
cmpsb
sbbl
pop
sbb
js
int
pop
cmpsb
scas
call
loope
popfw
sub
daa
mov
sub
cmp
push
adc
movsl
mov
or
pusha
jg
subb
cwtl
sbb
loope
mov
aam
pop
dec
adc
pushf
push
pop
jl
jb
lods
ret
in
sbb
mov
push
shrb
sub
fsub
outsb
xchg
pusha
xor
sbbb
jo
adc
sti
pop
mov
popf
aas
and
lock
mov
filds
notl
addr16
roll
and
leave
add
cltd
test
mov
outsl
adc
and
xor
fdivrp
test
jmp
mov
inc
adc
pop
ss
into
or
orl
cli
pop
pushf
jno
jae
mov
or
cwtl
xchg
into
out
pop
cmc
add
into
loopne
out
jmp
je
cmp
mov
mov
adc
loopne
add
lret
les
lods
xor
push
or
xchg
test
mov
inc
out
sti
jbe
cmpsl
and
gs
je
jns
jmp
inc
punpcklbw
dec
loop
xor
div
lods
jp
xchg
idivb
push
call
sbb
outsb
pop
pop
test
mov
test
repz
jmp
jae
or
and
and
inc
inc
adc
jb
xchg
dec
in
pop
cltd
je
je
jecxz
lock
pushf
xchg
mov
cwtl
pushf
icebp
push
mov
repnz
mov
or
and
cs
or
jbe
lret
lock
cmpsl
das
lods
cs
mov
not
and
nop
rcl
out
pop
ja
mov
ja
repnz
and
bound
je
int3
icebp
mov
frndint
shrb
orl
or
cmpsb
pop
sbb
imul
movsb
add
ret
jne
push
es
inc
push
insl
dec
sub
clc
cmp
xchg
ljmp
cld
lods
std
sarl
out
xchg
and
adc
seto
lock
test
test
inc
and
inc
sbb
fisttpll
fsubrs
sbb
das
xor
jmp
and
scas
stos
packuswb
out
ret
xchg
and
sub
incl
cmp
mov
lock
sub
mov
call
sub
pop
dec
sub
inc
shrl
fwait
loopne
mov
add
push
rorb
bound
push
jns
les
xchg
mov
les
or
push
adc
jo
and
dec
mov
test
sub
jne
mov
jne
sarb
pop
xchg
filds
push
cmc
jmp
das
mov
cmp
stos
out
sbb
push
popa
push
xor
fmull
push
out
insb
clc
jp
jnp
rorl
in
sub
out
sahf
iret
xchg
imul
testl
fists
fadds
mov
inc
fnsetpm(287
popf
fisubrl
adc
popa
or
sbb
push
fsubrs
jbe
scas
mov
je
rorb
mov
repz
leave
sub
mov
inc
push
jno
or
cli
rorl
or
lret
gs
int3
insl
inc
insl
pop
int3
addr16
pop
dec
mov
jo
dec
mov
sbbl
cmp
movsb
aas
int
push
xchg
mov
nop
jge
and
pop
iret
imul
outsl
cwtl
cmp
or
mov
xchg
xor
push
icebp
or
xor
pop
or
jle
inc
xchg
inc
test
inc
and
mov
in
inc
mov
js
pop
ja
in
scas
push
ss
loope
loope
sub
ror
cmp
scas
std
jns,pt
aas
movsl
mov
sar
pop
add
mov
mov
sbb
inc
xchg
xor
bound
test
or
mov
sub
push
movb
mov
mov
add
sub
arpl
cmc
inc
cmpsb
adc
mov
js
push
arpl
cmpsb
iret
shll
push
push
mov
sbb
or
pop
not
or
lret
ffreep
push
adc
mov
sub
sahf
lea
xorl
loop
sbb
inc
lret
cwtl
adc
xor
ss
pop
jle
adc
mov
mov
xchg
outsl
ja
cmp
add
dec
add
mov
or
mov
cmc
leave
push
dec
loopne
fs
pop
xchg
adc
adc
leave
imul
xchg
inc
dec
sbb
sbb
cmp
out
sub
lods
jecxz
lods
test
sti
and
mov
rclb
aaa
sub
and
lods
fnstcw
mov
repz
jae
mov
es
and
aam
pop
mov
popf
adc
cli
sbb
jmp
outsb
in
adc
mov
mov
jb
idivb
fs
out
lds
jecxz
je
lahf
sub
loope
xchg
cwtl
push
xlat
sub
ds
andl
fistpl
sbb
push
int
lock
pop
das
mov
data16
lods
cmpsl
icebp
and
pop
cli
sarl
sbb
std
cltd
daa
pop
dec
sbb
cmp
cmpsl
mov
icebp
pop
out
cld
cld
sti
aaa
fmulp
sub
push
mov
mov
mov
sbb
mov
cmp
shrb
xchg
loop
daa
lods
lock
add
pop
es
ss
jno
add
fsubrp
sti
mov
aas
or
lods
push
sub
and
jmp
sub
out
iret
xor
inc
add
cmpsl
test
sbb
mov
inc
pushf
push
or
fnsave
xor
fiaddl
sbb
out
pop
test
iret
shr
es
xchg
pop
add
add
cli
jmp
ror
or
js
imul
xchg
pop
sbb
sub
pop
out
dec
ja
lds
inc
push
mov
fwait
psubb
add
scas
xchg
stc
out
shrb
bound
lea
jns
popf
dec
in
inc
inc
xchg
icebp
push
mov
mov
or
aad
adc
pop
jp
ret
insl
mov
adcb
in
orb
dec
jne
xchg
pusha
cs
scas
fbld
add
xchg
inc
imul
cli
sbb
enter
mov
fsubrl
movsl
push
adc
mov
push
and
add
jle
daa
mov
jmp
push
adc
pmaddwd
out
pop
ret
fstpl
jecxz
inc
inc
aaa
fidivl
bswap
push
fwait
jns
popf
mov
pop
dec
inc
pop
movsl
lret
nop
aam
mov
adc
fcmovbe
inc
scas
pop
lcall
imul
inc
leave
lahf
xchg
inc
hlt
fisttpl
inc
xor
or
mov
fwait
aaa
les
sbb
jo
test
pop
sti
xchg
or
jmp
add
xchg
jb
jo
sbb
jp
and
sbbl
lret
push
in
add
pop
xchg
jge
xor
sbb
jns
inc
add
jno
mov
jl
mov
dec
loopne
add
aam
jl
lcall
and
shl
lahf
dec
adc
loop
test
or
imul
cmpsb
mov
int
sub
imul
pop
pop
and
ds
sub
and
dec
jae
mov
ds
ret
int
loop
fmuls
adcb
sbb
mov
pop
xor
mov
push
pop
lret
sub
ret
outsl
lods
cmpsl
push
outsb
fsubrs
jle
mov
imulb
cltd
adc
ror
jns
mulb
es
repz
mov
and
mov
ret
int
ss
ret
movsb
imul
xchg
iret
shll
xchg
sbb
add
test
aas
jo
shlb
loop
dec
sar
push
xchg
fs
add
sbb
adc
jns
lock
popa
nop
cli
insl
sub
and
mov
fwait
xlat
into
lods
add
push
mov
sti
in
xchg
pop
mov
cli
adc
pop
loopne
mov
repz
add
lretw
lods
add
adc
ret
dec
push
xlat
adc
mov
sbb
sar
aam
or
inc
dec
add
mov
nop
das
or
dec
xchg
fwait
test
pushf
movsb
fprem1
addr16
inc
lea
push
xchg
jl
out
sbb
mov
push
les
adc
adc
pushf
dec
bound
jmp
daa
xchg
cs
jmp
mov
fadds
adc
dec
jb
mov
pop
je
imul
mov
jns
cwtl
adc
mov
pop
sbb
xor
sbb
dec
push
fistl
push
loopne
rol
lcall
test
mov
adc
imul
cmp
dec
sbb
cmpsl
mov
int3
mov
ss
arpl
xchg
lret
lds
mov
cs
mov
pop
and
sub
sti
ret
ret
xchg
mov
es
andl
sbb
xchg
xchg
inc
das
int3
ljmp
int3
lods
sarl
mov
push
out
push
dec
rorb
dec
mov
add
or
arpl
out
sub
mov
ret
or
fstp
sub
or
dec
test
rcrl
fst
stos
in
cld
test
mov
xchg
mov
shrl
xor
ret
or
loope
xor
cmpxchg
ret
decl
cmp
pop
mov
sbb
push
jp
inc
add
jnp
test
cmp
add
or
out
inc
xchg
fsubl
pop
das
jns
sbb
in
cmp
in
sub
fstpt
addr16
popf
jp
cmpxchg
into
mov
testb
imul
shlb
sbb
filds
or
jmp
adcl
out
adc
sub
loopne
adcl
movsl
repnz
out
into
pop
push
jnp
subl
repnz
in
popf
or
iret
inc
dec
loopne
mov
adc
jbe
mov
xor
pop
loopne
popf
xor
pop
fidivrl
fldl2t
push
ficoml
outsl
rcrl
jle
leave
out
and
aad
sbb
mov
cltd
outsb
sub
hlt
es
arpl
mov
mov
cld
cmp
jo
pop
aaa
adcl
or
call
cmp
inc
pusha
imul
ljmp
cmp
scas
pop
fcoms
test
mov
dec
push
xor
jns
pop
mov
jge
jo
enter
daa
mov
mov
je
sub
fidivs
jl
pop
in
dec
dec
sahf
push
push
mov
or
nop
test
lahf
imul
test
fadd
movb
std
cmpsb
or
adc
js
xor
pop
arpl
xchg
flds
sub
mov
dec
ds
mov
ret
jge
std
andb
sbb
jp
add
popf
xlat
xor
pop
mov
cs
push
icebp
imull
sbb
add
inc
push
lds
lock
mov
cmp
sub
inc
jg
andb
xchg
fs
mov
dec
cmc
and
testl
mov
pop
fdivrs
in
notl
push
lret
out
dec
jl
mov
ja
sbb
fcomps
sbb
and
outsl
mov
mov
stc
int
adc
pop
mov
jo
iret
enter
jae
mov
out
xlat
cli
mov
jge
cmp
fidivs
or
insl
mov
push
lods
repnz
mov
adc
outsl
xor
and
adc
lahf
leave
data16
mov
in
sub
sub
fsubs
cmpl
rorb
testb
dec
cmc
add
dec
mov
les
out
repz
cmp
pop
stos
test
sbb
push
cwtl
pop
hlt
pop
out
sahf
out
adc
popf
inc
jmp
daa
push
cs
xchg
aad
dec
pusha
inc
xchg
xor
aas
sbb
mov
dec
push
std
imul
jecxz
dec
add
scas
repz
mov
rolb
cmp
fcmovnb
dec
push
pop
hlt
test
xor
sub
jge
mov
sbb
xchg
and
cmc
leave
rcr
cwtl
dec
idivb
mov
out
adc
bswap
cmpsl
mov
lods
mov
or
shrb
push
arpl
mov
movsb
jno
fnstsw
pop
jns
popa
rclb
dec
sub
sahf
test
into
push
cs
add
lcall
push
push
stos
push
add
lods
ds
movsl
mov
push
inc
and
mov
sahf
mov
cltd
lcall
mov
test
fldl
dec
test
mov
jnp
cld
mov
dec
pop
dec
stos
fsubr
sti
out
in
push
loop
ljmp
jmp
shr
xor
rclb
lcall
xchg
mov
add
jns
ja
lock
dec
add
jg
xchg
pushf
pop
fwait
insl
ds
push
jge
dec
add
fs
push
out
and
bound
pop
xchg
jns
cmp
sbb
stc
into
mov
insl
insl
mov
repnz
mov
in
mov
ret
dec
add
cld
pusha
fs
adc
pusha
inc
sub
cmpsb
cmp
nop
xor
and
mov
adc
repnz
mov
daa
sbb
push
aad
insb
cmp
outsl
jle
sub
inc
adc
aas
iret
movsb
mov
negl
ljmp
subl
popf
out
pop
int3
push
pop
mov
fimull
jae
data16
push
sbb
mov
mov
cs
push
sbb
lods
rcrb
enter
nop
leave
lea
arpl
std
inc
daa
ret
sti
or
sub
inc
or
jno
add
sub
fiadds
out
lds
ljmp
cmp
mov
ja
add
pop
jbe
jp
jge
xchg
cmp
adc
in
daa
mov
cmp
cmpsl
add
sbb
mov
mov
mov
lea
sub
push
mov
scas
icebp
push
mov
and
cmpsb
pop
repnz
mul
outsl
js
jle
pop
mov
cmp
sub
sub
lds
loop,pt
movsl
movsl
fldt
lcall
adc
xorb
sbb
stc
jnp
mov
mov
pop
sbb
lods
pop
sbb
push
sbb
scas
xchg
pop
sub
scas
les
push
xchg
mov
out
mov
cld
iret
mov
and
mov
test
fcmovne
sbb
sbb
cmp
aas
notl
into
and
jp
add
mov
mov
sbb
sbb
test
outsl
nop
push
mov
orb
test
jmp
adc
scas
dec
cmp
outsl
mov
shll
xor
shr
cmp
mov
or
lods
mov
cmc
push
outsb
sti
loopne
cmp
lock
adc
mov
imul
push
ljmp
andl
cmp
mov
loope
iret
mov
out
push
mov
xor
inc
decb
loop
nop
in
or
inc
pop
test
fldenv
cmp
pop
aaa
and
call
push
mov
xchg
or
pop
mov
cltd
in
lahf
lods
dec
jmp
jmp
cs
dec
stos
aad
mov
push
aas
mov
fsubrl
dec
leave
test
inc
jecxz
cwtl
pushf
test
mov
cwtl
mov
xchg
mov
stc
jp
imul
arpl
lock
pop
xchg
fistps
lock
stos
mov
rorb
rcl
sub
adc
mov
xor
rcrb
scas
int3
sarb
in
mov
lret
jne
sub
mov
mov
jge
mov
cwtl
out
shrb
or
xor
mov
lds
push
xchg
call
clc
daa
sbb
xchg
roll
popa
test
lock
test
xchg
mov
pop
repnz
jl
lea
or
in
xorb
test
pushf
mov
push
push
sub
in
add
push
ja
sbb
popf
mov
stos
lret
mov
sub
xchg
scas
cmpsl
incl
fbstp
bound
dec
jle
mov
leave
repnz
negl
rcr
jno
outsb
dec
hlt
gs
inc
das
lret
ss
in
pushf
pop
movsb
push
and
jbe
mov
sub
mov
ljmp
test
add
mov
popf
mov
in
xchg
dec
pavgb
jp
push
lcall
cs
mov
or
mov
xor
pusha
jns
fistpll
sub
popf
mov
inc
xorl
out
filds
inc
pop
insl
mov
xor
stos
lcall
insb
movsb
xchg
dec
jnp
inc
mov
push
xchg
in
sbb
iret
add
ffree
in
lcall
arpl
bound
cmp
in
test
adc
cmp
xlat
xor
xchg
mov
add
imul
push
push
arpl
mov
repnz
lds
hlt
mov
cmp
inc
sub
or
out
ds
add
movsl
add
lret
mov
cld
lds
pop
jl
ss
jns
pop
jb
and
call
jge
imul
jbe
mov
jge
cltd
mov
ficoml
or
push
dec
sub
lods
scas
xor
xchg
jle
cmpsl
cmp
test
outsb
mov
inc
jns
inc
cmpsb
adc
xchg
in
ficoms
pop
js
pop
xlat
pop
loope
push
dec
jmp
sub
mov
dec
ds
adc
shrb
orb
lcall
lds
xor
mov
stos
pop
aas
push
sub
pop
add
xchg
rcrl
lods
cmpsl
fdivrl
scas
sub
movsl
outsb
andl
andb
add
dec
cmpsl
mov
dec
testl
xchg
imul
int
out
fdiv
lcall
insl
mov
sarl
mov
lret
mov
mov
test
cs
xor
and
inc
loop
sbb
stc
cmp
frstor
mov
ss
or
lods
push
mov
push
lret
dec
pushf
cli
push
dec
xor
pop
or
imul
cmc
in
adc
int3
decb
setge
cmpsl
sub
imul
sbb
push
cli
loop
mov
fwait
insl
xlat
rorb
pop
sub
mov
pop
inc
icebp
sti
loope
sub
lods
mov
gs
inc
nop
rcrb
mov
xor
fstps
or
xchg
vunpcklps
adc
data16
xchg
testb
push
rolb
imul
fucomip
push
jae
cs
pop
aad
mov
enter
pop
and
dec
inc
hlt
mov
jecxz
sub
stos
adc
cwtl
inc
ss
mov
mov
mov
xor
addl
mov
fistpl
aas
ficomps
or
inc
insl
mov
lock
aaa
das
pop
sbb
mov
mov
sarl
mov
add
mov
dec
or
cmc
cmpsl
scas
sub
icebp
mov
mov
sub
mov
lahf
mov
mov
sub
sub
xor
push
loopne
ret
inc
adc
es
subb
test
bound
xchg
add
ljmp
cmp
in
mov
data16
packssdw
add
push
test
sti
mov
rorb
push
push
add
push
and
push
pusha
and
sbb
out
rcrl
sub
stos
mov
jns
xchg
js
xchg
scas
cmp
and
xchg
ds
jae
xchg
xor
mov
int3
mov
dec
mov
xor
lcall
out
lods
inc
in
adc
les
fwait
lret
xchg
cmpsb
push
ret
cltd
inc
add
sbb
out
fdivrp
out
pop
repz
jns
push
mov
sub
and
call
and
jp
call
inc
mov
mov
inc
in
jne
mov
lcall
xchg
nop
jl
jmp
mov
in
out
jb
sub
xchg
adc
push
jo
xchg
cmpl
jnp
enter
add
adc
ja
iret
bound
out
pop
mov
iret
inc
insl
xor
pop
fistpll
cmp
mov
inc
push
iret
jo
scas
xor
sbb
push
adc
scas
stos
xchg
in
stos
pushf
imul
stc
pop
mov
xchg
ds
jnp
ds
pop
jle
arpl
jp
sub
sub
mov
mov
add
add
int3
adc
add
adc
testb
stc
add
mov
mov
xchg
or
scas
testb
sbb
stos
movsb
imulb
push
and
in
jbe
imul
enter
daa
scas
in
fdivrl
or
xor
cmp
pop
cmp
pusha
js
xor
popa
cmpsl
adc
sub
push
cmp
pop
cmpsb
xchg
xor
in
lds
insb
js
iret
mov
and
adc
adc
cmpsb
fs
cmp
jecxz
sub
mov
inc
or
lcall
sbb
pop
xor
rorb
pop
adc
sub
jo
lcall
fsubrl
nop
sub
or
adc
cmp
dec
jg
mov
inc
mov
xchg
sub
and
gs
ljmp
testl
sub
mov
mov
sbb
and
sahf
xchg
call
mov
outsl
dec
stos
imul
repnz
pusha
fs
xchg
outsb
adc
adc
cwtl
xlat
dec
cmp
add
cli
cmp
adc
push
sarb
cmc
lods
sbb
pop
cs
fcoms
jp
jne
nop
rolb
mov
dec
add
data16
inc
and
scas
xor
sub
sub
in
les
dec
sti
nop
adc
rclb
outsl
gs
outsb
nop
fwait
lcall
addl
xrelease
xchg
mov
lcall
mov
ffree
adc
jp
adc
stc
movsb
pushf
cmc
dec
mov
or
movsl
loop
int
ret
or
aas
cli
int3
test
into
dec
dec
mov
je
inc
add
scas
out
orb
jge
lahf
cli
dec
mov
cli
push
adcl
pop
frstor
xor
data16
loopne,pt
das
out
lret
stos
sarb
cmp
xchg
ror
cmp
testb
std
fmull
xor
adc
cmpsl
lods
push
fwait
mov
xchg
enter
push
lret
push
fmuls
jle
out
scas
sbb
mov
adc
outsb
or
ret
iret
jb
es
jne
insl
mov
decl
aas
in
ljmp
call
mov
mov
mov
xor
push
add
andb
sbb
push
fldl2e
dec
fnstsw
adc
xchg
lahf
sbb
andps
into
stos
test
sbb
stc
add
fldt
xor
jae
xor
cmp
mov
iret
lock
dec
push
pusha
and
or
ja
lods
dec
fisubl
imul
xchg
sti
fwait
cli
in
push
data16
add
jne
loopne
mov
mov
jns
je
in
pop
xchg
jl
shll
cmpsb
fnstcw
or
popf
int
or
xor
call
sub
dec
stos
mov
inc
inc
pusha
xor
inc
sahf
xchg
arpl
jmp
icebp
sar
adcl
into
sub
int3
cmc
jno
scas
cmc
mov
andb
insb
jp
test
call
fcoml
push
add
or
add
rcll
ret
hlt
pop
in
inc
repnz
js
bnd
jl
push
push
mov
dec
in
inc
inc
aad
fisubl
sti
xchg
imul
sbb
je
imul
mov
shl
jne
leave
les
bnd
hlt
push
pushf
je
ljmp
cwtl
inc
fstps
pop
pushf
xor
jg
sbb
testl
int3
out
sbbl
cs
xor
aaa
xchg
jo
cmp
aad
push
and
test
cmp
jnp
jo
xor
jge
push
inc
enter
daa
lods
xchg
fnstsw
inc
push
test
jmp
sbb
and
inc
aaa
inc
xor
cld
into
stc
lahf
in
into
push
cmp
test
add
popl
pop
cmpsb
sbb
in
in
lods
sbb
js
aad
pop
pop
iret
cltd
push
sbb
mov
sub
jne
dec
test
test
pop
fld
stc
out
fadds
fisttpl
add
cmp
inc
cmp
dec
pop
lea
pop
xchg
and
xchg
inc
jbe
aad
mov
mov
stos
test
push
shrl
jg
sub
mov
ds
and
pop
adc
push
and
sti
testl
adc
test
fisttps
fdivrs
sahf
aaa
cmp
mov
mov
orb
cmp
stc
test
subb
fistpl
inc
cmp
pusha
sbb
iret
cli
insb
pop
xor
cmp
sub
inc
or
into
sbb
sub
add
dec
pop
dec
stc
adc
dec
mov
addr16
lea
add
jg
pop
or
cmp
pop
in
xlat
dec
xor
cmp
push
in
das
lahf
inc
sti
aas
rolb
test
pop
stos
nop
jbe
inc
dec
jno
inc
inc
xchg
inc
aas
pusha
mov
repz
and
jg
mull
call
xchg
lahf
mov
mov
loopne
pushf
mov
into
dec
sarb
aad
pop
pushf
inc
js
aas
cltd
jge
jb
xchg
xor
jnp
je
mov
jecxz
and
mov
mov
cwtl
mov
shl
lock
subl
push
mov
jge
cld
pop
cmpb
inc
jnp
sbb
cltd
sbb
mov
idivl
loope
adc
testb
lock
call
and
imul
sub
xor
and
dec
lret
cmc
lods
push
shlb
jae
aam
jno
ret
pop
pop
outsb
ficoml
or
enter
dec
test
jbe
sbb
dec
insb
lods
ljmp
mov
je
push
or
insb
das
add
ds
test
jbe
jmp
clc
cmp
mov
outsl
ja
aam
loopne
enter
dec
jg
pop
stos
fcoms
stos
cwtl
pop
and
xchg
push
push
add
in
jo
pusha
cmpb
rcrb
sub
dec
xor
lcall
rcrb
xor
or
ja
ja
dec
int
lds
fwait
out
or
cmp
fwait
sub
cmp
add
rcr
xor
bound
and
dec
xchg
lret
inc
pop
mov
cmpsb
xchg
mov
fiadds
inc
jp
xor
mov
jecxz
mov
push
dec
lea
push
shlb
out
xchg
ss
xchg
mov
jecxz
out
cmc
out
cli
dec
mov
pop
imul
out
lea
repz
cmp
jne
xchg
pop
cmpl
mov
adc
and
sbb
cmpsl
cmp
xorl
insb
push
sub
fcmove
push
push
cld
sub
adc
lcall
imul
jno
jno
cmp
cmp
or
mov
push
int
leave
imul
arpl
pop
or
pop
inc
dec
aaa
ds
mov
add
push
push
int3
ficompl
sti
sbb
lds
jl
scas
mov
cltd
and
jnp
movsb
or
scas
push
mov
daa
mov
enter
daa
lods
mov
inc
jno
pop
jl
ret
xor
stos
sahf
push
es
xchg
or
lahf
add
mov
test
iret
or
inc
mov
in
xchg
icebp
fistpll
outsl
ficoms
sahf
or
aam
jno
and
icebp
outsb
mov
movsl
imull
mov
pop
ljmp
adc
add
mov
xor
jno
std
sub
sub
popa
lcall
sub
orb
nop
or
stos
cmp
stos
xchg
inc
xorb
jg
pushf
das
mov
jge
mov
mov
mov
test
and
dec
roll
aam
pushf
int
lcall
or
out
sarl
pop
mov
dec
jno
fiaddl
int3
xor
mov
sbb
int3
mov
shll
sbb
repz
fs
sarb
mov
lret
int3
out
loope
cli
lahf
mov
xor
xchg
inc
cmp
push
rorl
add
aam
cmc
cmp
loopne
les
adc
iret
jmp
adc
aas
push
data16
pop
lods
insl
jae
cmp
or
sub
jp
in
lcall
push
lods
sbb
nop
push
pop
repnz
rorb
inc
cmpsl
xor
les
sub
push
das
ret
sbb
adcb
pop
outsb
in
adc
and
dec
xor
jmp
mov
adc
pop
pop
bound
cld
add
jb
xchg
in
dec
movsl
xor
je
daa
out
jecxz
sbbl
cwtl
je
fwait
mov
or
mov
lods
and
dec
rcrb
push
fldt
int3
inc
add
in
lock
fs
das
movsb
movsl
shlb
scas
gs
and
sub
sub
std
sub
cli
movsl
into
cmpsl
stos
pusha
stos
mov
inc
cmpb
dec
dec
lret
xor
adc
or
add
adc
pop
shlb
sub
aam
mov
mov
insl
xchg
stos
xchg
mov
jns
popa
loopne
xor
mov
call
and
call
imul
lods
sahf
lock
adc
mov
jp
ffree
sbb
xchg
and
jnp
rcl
mov
in
lahf
stos
xchg
je
fstpt
xchg
dec
jmp
inc
pushl
xor
clc
or
dec
pop
mov
aad
mov
in
dec
fstps
mov
movsb
dec
shrb
or
mov
fwait
pop
aam
push
lods
add
mov
out
jnp
cmpsl
bound
fstpt
jp
in
call
imul
fyl2xp1
pushf
addr16
imul
adc
shll
mov
ljmp
push
out
pusha
imul
sti
test
xchg
or
jmp
xchg
in
xorl
jp
loope
cmc
mov
sub
loopne
and
xchg
push
out
in
jnp
icebp
jl
sub
in
inc
mov
iret
jg
inc
ret
push
pop
pop
mov
inc
mov
jns
lock
sbb
push
rcrl
fcmovb
mov
xchg
sbb
adc
xor
imul
scas
aam
mov
and
es
mov
mov
cmp
loopne
mov
call
stos
inc
inc
ss
or
sarb
aaa
std
mov
cmp
xchg
sub
int3
lds
fidivs
lds
nop
jo
rolb
scas
xchg
aad
and
repz
cmp
stc
mov
push
push
mov
test
fwait
enter
daa
stos
addr16
cmpsb
pop
push
sub
sarb
dec
jmp
xchg
inc
xor
xor
lahf
and
lds
rol
xlat
movsl
push
lcall
cmpsb
push
cmp
js
popf
loopne
ffree
push
mov
data16
in
push
cmp
dec
ds
mov
movsl
mov
add
aad
in
dec
or
add
test
xor
out
pop
fistpl
sub
sahf
fwait
pop
xchg
sbb
lcall
push
fsubrl
js
jg
jno
or
pop
test
dec
adc
mov
mov
arpl
sbb
mov
pop
hlt
inc
fsub
movsl
es
popa
xor
sbb
and
sahf
jge
and
pop
sbb
jmp
mov
pop
push
inc
stc
pop
mov
js
inc
mov
and
push
or
sbb
rol
cmp
cmp
dec
add
and
clc
mov
add
mov
pop
mov
adc
pop
xchg
imul
sbb
pop
call
fistpll
pusha
jo
xlat
int3
imul
push
ficoms
in
add
arpl
cmp
bound
lcall
das
lret
mov
jb
les
jo
xchg
roll
pusha
call
xchg
pop
outsb
pop
and
gs
mulb
jmp
cmp
xchg
aad
mov
mov
jb
shrb
mov
ljmp
cmp
sbb
xchg
mov
ficompl
sbbl
fcmovnu
push
sub
inc
mov
ret
lds
das
addl
mov
fstpl
aaa
notb
cmpsl
pop
std
sarl
cmc
dec
cmpsw
stos
iret
and
icebp
pop
xchg
push
cld
push
jns
lret
mov
fistpll
mov
xor
sub
lcall
sub
es
inc
insl
outsb
inc
mov
xchg
cld
push
sbb
pop
aaa
fsubl
test
mov
and
pop
and
ret
mov
sbb
xchg
jbe
fnsave
and
fucomp
fstpl
cmp
incl
cs
mov
cli
leave
or
and
out
ds
mov
lcall
add
or
fldt
rcll
adc
fcoms
dec
push
xchg
sbbl
loopne
sub
pop
dec
mov
sbb
and
cwtl
or
add
fwait
xchg
push
dec
mov
add
out
pop
outsl
bound
jb
in
sub
mov
sti
out
mov
aam
cmp
dec
cmpb
test
aad
mov
dec
push
push
lea
int
pusha
push
lret
sbb
xchg
fmul
jmp
push
addr16
addl
out
dec
mov
enter
jge
daa
push
insb
dec
xchg
fnstsw
insb
mov
xchg
in
dec
jg
lcall
ret
jb
xchg
pop
testb
jae
out
xchg
push
mov
bound
mov
cmp
fidivrl
and
dec
shll
imul
scas
aaa
int
push
xchg
fwait
rolb
mov
fisubrs
imul
xor
jbe
mov
mov
dec
sbb
mov
or
push
add
and
out
jae
fstp
pop
adc
jo
cmp
scas
jb
mov
cmp
sbb
movsb
and
add
rcrb
jge
push
add
repnz
jno
in
pop
jl
pop
icebp
dec
pop
or
push
in
sub
and
mov
jecxz
mov
mov
push
gs
out
inc
inc
cld
test
popa
dec
dec
js
pop
pop
pop
sbb
push
xchg
cmp
testb
cmp
sbb
mov
adc
add
ret
sbb
call
bound
cld
cmpsl
mov
outsl
and
pop
add
incl
adc
lcall
arpl
sbb
outsb
xchg
in
outsb
jo
notb
test
jg
aad
push
idivb
mov
mov
and
xor
push
fucompp
or
fwait
sbb
testl
popa
inc
mov
mov
and
rolb
mov
cltd
outsl
lret
loop
sub
stc
into
in
mov
adc
cwtl
push
mov
repnz
sbbl
xor
lret
adc
call
into
les
pop
cmc
enter
roll
push
pop
stos
mov
into
imul
add
add
enter
push
xlat
or
xchg
add
mov
jo
dec
pop
sbb
pop
push
mov
push
inc
nop
pop
push
dec
mov
inc
int
jno
les
cld
mov
xchg
push
pop
sbb
js
push
adc
es
aam
adc
in
mov
xchg
in
cs
xorb
ds
aas
jbe
jb
or
dec
xchg
xchg
push
je
pop
and
or
xor
ljmp
mov
movl
or
and
inc
adc
cmp
bound
mov
sbb
pusha
and
pop
adc
add
notb
std
js
fs
lock
test
rclb
jle
mov
paddd
fnsave
lcall
pop
push
cltd
adc
sbb
sub
adc
inc
stos
ret
or
add
aad
clc
mov
leave
ljmp
push
lods
sub
stos
mov
inc
cmp
push
sahf
roll
add
adc
sbb
test
cmp
in
mov
test
pop
adc
loope
cmp
push
movsl
xchg
pop
lods
xchg
push
stos
gs
es
mov
inc
adc
ss
cmp
je
or
stos
inc
mov
fistpl
mov
mov
ja
inc
xlat
dec
cmpsb
or
mov
es
fwait
mov
sahf
push
repnz
loope
dec
out
cmp
bound
sbb
xchg
mov
rcll
or
movsl
cmp
sbb
jp
push
xchg
mov
lret
icebp
dec
sbb
lods
sbb
pusha
mov
and
scas
data16
orb
mov
and
int
scas
inc
fs
stos
outsb
push
stos
dec
jmp
js
adc
jle
leave
inc
in
mov
adc
pop
iret
cmp
or
pop
leave
scas
dec
inc
movsb
nop
loop
sub
popf
call
ss
inc
rcrl
push
mov
fldt
outsb
test
or
cmp
inc
cmpsl
push
repnz
hlt
jle
sbb
leave
jp
inc
cmp
ds
dec
mov
aaa
jnp
adc
ret
fisttps
mov
out
pop
mov
ja
lds
aas
jo
mov
ja
inc
xor
cmp
push
movsb
lods
cmp
push
lods
es
jbe
stc
jge
jne
enter
daa
test
cmp
jno
xor
jl
mov
dec
loope
push
iret
mov
xchg
and
lods
lahf
popa
stc
add
aam
test
xor
inc
rorl
mov
and
sbb
dec
aam
js
mov
pop
pop
int3
xor
loope
insb
or
sti
xor
mov
inc
xlat
mov
rorb
hlt
mov
sti
or
sbb
push
pop
xor
loop
inc
mov
pop
sub
mov
mov
mov
and
faddl
les
outsb
shll
mov
lea
lss
pop
js
xor
adc
in
jbe
fcoms
adc
dec
repnz
roll
mov
mov
sahf
ret
pop
testl
test
cs
test
cltd
fs
lods
adc
inc
xorb
stos
jl
xchg
inc
sbb
dec
dec
xchg
mov
stc
cli
cmp
divl
mov
lahf
cmp
mov
jge
cmpsl
sbb
cmc
mov
sbb
loope
adc
mov
inc
add
jbe
gs
clc
lods
and
cmp
sarb
sub
cmp
mov
fildl
sti
sti
push
mov
gs
xor
in
in
inc
loopne
out
in
aad
test
int3
movsl
xchg
push
xchg
or
repz
xchg
jae
adc
jmp
mov
cs
xor
aad
stos
sahf
inc
push
mov
jb
mov
xchg
je
hlt
pusha
jecxz
cmp
mov
sbbl
add
mov
or
je
cmp
or
fs
xchg
les
lock
push
cltd
mov
rol
aad
repz
rcll
cmpsl
notb
cmp
cmpsl
test
scas
mov
lds
xor
test
mov
mov
std
test
popa
bound
pop
jno
insb
shr
jns
sub
sbb
adc
push
push
es
mov
clc
les
xchg
jp
stos
ljmp
lods
xchg
mov
test
nop
push
push
jns
adc
movsl
jns
add
xchg
mov
mov
popa
push
test
lock
and
rclb
sbb
sub
fsubrl
add
inc
xchg
and
add
adc
fdivl
xor
sub
or
push
push
xchg
mov
fcompp
mov
pop
xor
pop
ja
decb
lds
inc
push
stos
or
sbb
push
xchg
add
mov
cmp
imul
sbb
outsb
iret
movsb
stc
jns
push
and
jne
fists
mov
and
lret
or
jp
aaa
cmpsb
mov
adc
push
sbb
cmp
cltd
dec
sbb
pop
jne
ds
cmp
adc
pop
jecxz
xchg
xorb
jmp
call
popa
out
imul
xchg
mov
mov
ljmp
and
das
insb
xchg
jecxz
jnp
incb
in
jg
adc
or
pushf
pushf
pusha
ret
lcall
movsb
test
xor
lea
popf
es
push
push
push
xchg
and
add
mov
std
mov
or
mov
test
leave
inc
imul
fmuls
inc
aas
jecxz
or
add
mov
add
mov
pop
sarl
ficomps
pextrw
xchg
dec
ret
mov
and
pushf
fdivrl
das
dec
frstor
rcrb
adc
jge
mov
enter
daa
test
das
cmp
aaa
pusha
jno
mov
pop
dec
ss
push
mov
test
add
mov
push
sub
test
sti
lds
inc
bound
cmpsb
cmpsl
pop
arpl
das
cmp
xchg
lcall
loope
jae
sub
shl
pop
hlt
int
cli
arpl
shlb
stos
aam
jmp
push
jl
sbb
cli
into
add
call
leave
or
dec
pop
push
mov
sub
inc
pop
adc
lcall
jmp
sub
cmp
dec
mov
outsb
or
or
sbb
pushf
jg
xchg
ja
stc
ds
mov
or
and
loopne
adc
push
pop
jge
adc
stos
testl
pop
push
rcrl
test
std
shl
sahf
data16
test
fildl
push
pusha
outsl
mov
data16
push
movsb
cmp
out
das
jb
sub
cmp
inc
dec
pop
out
xor
xor
sub
js
mov
cmc
push
test
loopne
adc
and
movsb
imul
push
add
pushf
lods
or
daa
xlat
mov
mov
inc
sti
mov
stos
xchg
ret
push
cmp
jmp
nop
mov
arpl
repz
movsl
fstps
pop
dec
les
xchg
sbb
sbb
outsb
pop
add
bswap
add
sub
adc
jnp
pushf
idiv
adc
cmpsl
lcall
ja
jbe
test
data16
mov
mov
xchg
dec
addl
hlt
mov
adc
dec
push
or
sbb
mov
aad
dec
jl
mov
pop
scas
fmull
lock
pop
sbb
and
mov
mov
jle
iret
shll
xor
std
out
xchg
dec
out
mov
mov
pushf
movsl
and
aam
and
in
xor
mov
pop
mov
pop
nop
lahf
scas
rol
jmp
sub
and
aam
sbb
ret
sub
es
cli
clc
decl
ljmp
int3
lods
add
mov
mov
and
push
cmp
add
imul
test
aas
stc
push
imul
frstor
test
xor
xchg
fistpl
inc
pusha
aam
inc
cmp
insb
stos
inc
out
addr16
pop
xchg
imul
adc
jnp
cmp
mov
push
lea
pop
push
mov
loope
sbb
sar
pop
out
vzeroall
imul
lahf
or
in
fwait
adc
int
cmp
cli
mov
cmp
imull
bound
cmp
xor
push
xchg
push
and
lret
ffreep
mov
lds
scas
jp
mov
and
or
cld
pop
lea
fidivl
fbstp
in
xchg
push
xor
mov
pop
sub
and
sub
inc
sub
cs
xorps
inc
jp
xor
jnp
and
dec
insb
cld
xchg
add
push
jle
mull
cmp
ds
sti
sub
ret
sbbb
adc
mov
ret
pushf
push
cld
iret
pop
popf
dec
lds
inc
iret
repnz
xchg
pop
notb
dec
mov
xchg
fwait
mov
adc
repnz
aas
ja
mov
ss
arpl
pop
pop
inc
inc
xor
add
jp
stc
std
lret
or
in
cs
jno
or
sbb
fiadds
and
push
hlt
xor
vmwrite
and
xor
out
sub
ret
jle
jbe
icebp
cmp
ficoms
jecxz
mov
cmp
and
mov
fidivrl
dec
movsl
fimull
mov
xor
sahf
pusha
in
lahf
add
push
sub
into
push
movb
cmpsb
sub
icebp
in
push
mov
ss
aaa
dec
loope
sahf
loopne
aaa
pop
movsl
cmp
pop
lock
je
rolb
orb
and
add
push
popa
xor
sub
pop
ja
pop
sub
and
pop
cmp
lcall
inc
or
cmp
outsb
cltd
pop
sub
stc
jae
jg
sbb
mov
xor
cmp
and
adc
push
jecxz
aaa
int
inc
addr16
lock
test
push
push
shll
push
mov
sbb
xchg
sahf
or
push
lds
outsl
addr16
loop
aad
stc
rep
dec
fs
or
adc
xchg
ss
sub
cmp
inc
frstor
out
iret
out
cli
sahf
fdivl
pop
sub
cmp
jbe
or
push
in
cmc
sbb
repz
pop
outsb
arpl
aas
inc
mov
adc
movsb
cld
add
push
mov
lock
or
enter
in
enter
mov
mov
ljmp
pop
and
into
push
nop
cwtl
xchg
xor
xrelease
in
xor
push
inc
into
les
cmp
sbb
jmp
cli
add
adc
cmp
mov
inc
inc
cs
mov
inc
mov
cmc
pop
jb
xchg
clc
outsl
and
shl
pop
inc
ret
mov
mov
mov
cmp
test
addr16
xchg
mov
pop
push
cmpsb
sbb
aas
cld
lock
xor
mov
or
sub
sbb
xchg
loope
push
cmpsl
cmpsb
mov
mov
jae
dec
cld
jns
lret
pop
jae
mov
mov
arpl
scas
test
rclb
arpl
ret
mov
dec
loop
or
sbb
cmp
xchg
clc
jp
ljmp
jg
insb
push
mov
scas
xor
and
das
mov
packsswb
in
cltd
rcrb
test
test
push
cs
insl
fisttpll
jl
xchg
repnz
cli
mov
cmp
mov
xor
out
lret
xchg
mov
inc
add
orb
negb
in
lods
push
mov
in
hlt
dec
out
stos
adc
inc
ja
sub
xchg
or
ret
fwait
inc
mov
push
fistpl
lods
add
repnz
insb
out
push
jbe
cmc
jg
jns
mov
iret
xchg
movsl
mov
mov
adc
mov
sar
addr16
mov
jp
icebp
push
mov
inc
xchg
mov
sbb
sub
pusha
jb
das
fists
arpl
jmp
jle
push
cmpl
lods
pop
pop
sub
imul
stos
movsl
cmp
and
mov
inc
jnp
test
jle
jl
in
inc
jne
push
push
cmpsb
iret
pop
mov
imul
jmp
jae
cmp
mov
je
shrb
or
in
inc
dec
cltd
xchg
int3
cmpsb
and
movsl
imul
pop
scas
ret
inc
test
loop
adc
lods
push
popf
mov
sub
leave
xor
pop
mov
addl
fiadds
aaa
mov
jbe
add
mov
das
js
fisubs
cmp
jo
scas
xchg
scas
out
imul
popf
or
push
cltd
rorl
inc
jmp
cmc
daa
cmpsb
test
dec
dec
jno
out
jl
enter
std
loop
js
mov
push
dec
lcall
mov
push
std
ja
test
xchg
fwait
rolb
pusha
cmpsb
lods
add
or
xor
pop
sbb
push
lahf
and
pop
in
push
sub
das
cmp
hlt
mov
sbb
cli
xchg
and
xor
push
sbb
add
js
xor
pop
xchg
pop
sahf
pop
sub
es
push
mov
roll
faddl
jmp
rcll
adc
movq
xchg
mov
push
nop
mov
mov
aas
push
out
aad
and
dec
fadds
sub
lret
xor
leave
xlat
sbb
aaa
ret
pop
xor
ljmp
outsl
inc
flds
loop
ja
stc
stos
jg
fs
inc
add
int
cmpsb
ss
outsl
cmp
cmp
icebp
jmp
xor
xchg
or
cmc
into
push
clc
xchg
cmc
in
lcall
mov
ljmp
dec
cmpsl
add
cmp
out
add
cmp
std
mov
mov
sbb
xchg
sti
or
pop
push
gs
adc
aam
or
ret
cmp
repz
shll
sbb
fs
lods
pop
mov
sbb
pushf
dec
inc
jmp
scas
and
jne
outsb
aad
jle
inc
mov
rorl
push
mov
dec
je
mov
jecxz
push
jg
pop
push
lea
cwtl
sbb
sub
dec
ljmp
jo
pop
cmc
arpl
push
sarl
das
fisubs
pop
mov
clc
fbstp
xchg
stos
in
inc
in
dec
mulb
dec
std
adc
test
cmp
cmpsl
movsl
mov
mov
dec
cvtpi2ps
sub
and
lret
ja
mov
mov
jnp
mov
into
mov
shlb
dec
sub
dec
push
jbe
movsl
ret
inc
pop
dec
outsl
sbb
clc
jne
cli
xchg
aaa
push
aad
fwait
jbe
popa
push
pop
lods
xlat
sub
adc
movsl
sahf
cmp
cmc
sbb
ret
add
pop
dec
cltd
notl
test
push
rclb
or
fnsave
pop
pop
xchg
push
sbb
jp
pop
pop
int
stos
and
and
sub
mov
dec
mov
ds
xor
push
and
out
bound
imul
dec
jp
out
ljmp
outsl
sbb
mov
add
dec
mov
out
mov
mov
mov
pop
in
fs
xchg
hlt
xchg
mov
mov
xchg
mov
mov
push
pop
mov
xchg
sub
out
jne
sub
or
inc
mov
sti
leave
push
inc
in
xchg
dec
inc
fldl
das
push
arpl
movsb
iret
or
stos
sbb
and
pop
insb
rorb
pusha
out
pop
jle
cmc
pop
in
les
loope
icebp
iret
mov
fsubr
pop
movsl
pop
out
inc
rcrb
data16
ret
push
orb
popf
fwait
lds
and
sub
push
fcomp
stc
out
fs
and
jge
std
or
push
push
sub
ror
ret
mov
jge
repz
stos
cmpsl
pop
hlt
stos
pop
jmp
inc
dec
sub
or
xor
mov
ja
mov
mov
mov
inc
mov
pop
pop
lcall
outsl
ret
les
int
mov
cmp
movsb
fnstenv
push
push
call
or
jge
xlat
ds
daa
movsl
dec
stc
cmp
arpl
jno
shr
rolb
pop
jle
xor
aam
mov
fstpl
ljmp
add
inc
lidtl
xor
sub
xlat
or
push
or
aad
cltd
loope
pusha
insb
sub
or
cmp
arpl
jnp
imull
ret
icebp
cmp
sbb
jno,pt
jp
mov
pop
lds
lds
lea
lcall
push
fsubrl
sub
outsb
pop
in
adc
das
hlt
add
sub
sub
cmc
and
movsb
xchg
push
jmp
rcrb
inc
icebp
pop
lret
shll
mov
push
xor
mov
movsb
sahf
dec
xor
test
jno
jnp
and
rcll
rorl
popa
cmp
inc
adc
dec
ss
cmp
cmp
jp
add
insb
xor
or
or
aam
cmc
stos
jle
loopne
clc
stc
pop
inc
or
adc
adc
adc
dec
movb
lods
jo
jno
jns
mov
xchg
xlat
inc
jae
sub
and
cmp
sti
mov
mov
gs
rclb
dec
outsl
xor
imul
sbb
or
repz
iret
xchg
arpl
fistpl
fisttps
mov
out
push
add
iret
and
clc
add
jmp
fimuls
fsubs
aad
aaa
addr16
sar
xchg
xchg
xchg
jb
and
dec
out
je
popf
mov
mov
repnz
sbb
mov
sub
cmp
hlt
xor
adc
lock
movsb
das
mov
adc
and
adc
je
mulb
fs
xlat
pop
shll
jno
inc
icebp
and
and
push
repnz
test
mov
and
jno
in
dec
sarb
jns
sub
fdivr
ret
lret
push
insl
fmuls
cli
clc
mov
add
push
insb
adc
xchg
inc
pop
mov
inc
dec
xchg
mov
lods
and
in
sub
and
xchg
add
and
mov
inc
out
push
mov
lods
fstp
xor
test
lret
fiadds
pusha
ds
or
stos
adc
int3
out
nop
mov
inc
add
lahf
xor
pushf
mov
or
cmc
sub
mov
ljmp
pop
and
mov
cmpsb
inc
sub
mov
bound
cmp
push
and
call
mov
xchg
lcall
sub
cmp
sahf
test
xchg
fcomps
mov
mov
and
cld
cmc
jp
jl
mov
or
mov
imulb
dec
movsl
mov
jns
test
out
adc
into
fs
cmp
xchg
adc
js
lcall
sub
mov
stos
mov
and
cmp
cmpl
outsl
jle
arpl
in
fwait
loopne
mov
out
pop
ret
das
pop
fsub
sbb
push
jae
std
in
inc
push
sbbl
es
fisubrl
push
sbb
out
imul
pusha
scas
mov
daa
shl
cmp
shlb
mov
and
lcall
shll
or
out
push
mov
ss
dec
or
clc
dec
int3
xor
pop
lea
test
stos
jp
pop
pop
leave
scas
lods
pop
push
and
push
inc
cmp
pop
or
shlb
jbe
inc
jp
aam
dec
daa
movsb
xchg
xor
or
adc
dec
repnz
push
rorl
and
xchg
mov
mov
push
daa
rcrl
mov
push
in
lret
enter
adc
pop
xchg
bound
dec
mov
loope
testl
xchg
das
ljmp
push
push
call
sbb
fildl
xor
aam
adc
xchg
pusha
sub
pop
or
add
xor
in
insl
mov
outsb
ret
adc
dec
shrb
mov
inc
rorl
mov
and
push
add
in
inc
inc
int
push
int3
fdivr
cli
out
testl
ljmp
mov
sbb
test
lea
xor
lret
add
xchg
loop
push
mov
sbb
popa
fs
jle
rorb
mov
or
out
rcll
jecxz
dec
cmp
dec
orb
outsl
adc
push
movsb
inc
cmc
jb
out
jne
xchg
pop
fs
hlt
adc
scas
fistl
popf
or
loop
stos
data16
cmp
cmp
out
xlat
test
sub
xor
repnz
sti
cmp
cs
mov
dec
enter
aas
add
loopne
pop
repz
xlat
and
push
fmull
or
fistl
es
stos
pushf
mov
shlb
aad
push
push
inc
icebp
in
aas
xor
jb
mov
mov
jecxz
adc
ljmp
mov
repnz
mov
test
sub
mov
pop
cmp
mov
das
pushf
sbb
mov
sarw
stos
leave
into
rcr
inc
hlt
mul
dec
enter
scas
dec
rorb
test
icebp
clc
or
lret
test
testb
mov
fcoml
sub
leave
aam
mov
mulb
jne
mov
clc
jmp
jg
mov
mov
popa
cwtl
mov
lods
lods
pop
outsb
mov
pop
lds
push
sar
jo
movsl
cmpsb
cltd
gs
test
and
mov
jnp
push
ja
lods
xor
test
shl
xchg
mov
adc
sbb
scas
stos
call
imul
test
adc
divl
or
sbb
movsl
sbb
in
push
mov
pop
fldt
fidivl
ror
dec
pop
std
add
cmpsb
lahf
or
push
into
fwait
shrb
sub
add
xchg
into
scas
jns
das
and
sub
push
mov
push
testb
mov
addr16
enter
jg
dec
and
mov
gs
dec
mov
test
inc
push
mov
xchg
mov
outsb
sti
xchg
popl
xor
inc
pop
mov
and
jecxz
and
xor
jnp
push
pop
jle
les
adc
mov
ret
insl
pop
adc
pop
inc
out
xchg
inc
movsb
push
or
pop
popf
jmp
adc
inc
lret
int3
dec
ficompl
ss
shr
dec
sbb
push
sub
cmc
outsb
scas
in
jecxz
push
mov
lock
scas
mov
and
pop
leave
cwtl
pop
xor
xlat
pop
arpl
dec
inc
inc
dec
icebp
cmp
sahf
xor
aaa
cmc
cwtl
aas
or
cltd
add
pop
int3
sbb
sub
fimuls
push
add
mov
mov
in
cmp
test
out
movsl
dec
push
xchg
movsb
jbe
out
adc
ss
inc
enter
daa
mov
mov
jno
fstl
push
jns
dec
popa
cld
imul
sbb
and
cmpsl
xchg
lahf
sbb
push
jbe
dec
test
repnz
cmpsb
ss
mov
js
fucomip
pop
aad
pop
push
or
sub
jecxz
push
cmp
stc
inc
ds
test
lods
dec
add
scas
je
subb
sbb
scas
testl
out
loopne
fcoms
pop
adc
add
xlat
ljmp
in
mov
push
xchg
sub
icebp
cmp
adc
gs
lds
popa
adc
push
aaa
out
mov
sub
jnp
out
ret
push
iret
inc
fdivrs
or
rorl
adc
call
mul
test
push
xor
mov
jecxz
mov
notl
in
repnz
adc
pushf
fs
cs
fs
outsl
sbb
push
daa
xor
jecxz
or
addr16
lret
dec
rcrb
mov
adc
xchg
es
inc
and
jno
or
lods
mov
add
cmp
not
jmp
sub
setae
pop
or
sti
adc
adc
nop
add
call
inc
push
lds
cs
sbb
jmp
repz
xchg
jmp
or
call
mov
aad
mov
fwait
sub
mov
cs
mov
aad
aad
inc
or
dec
aas
iret
aas
leave
jb
mov
aam
test
jecxz
aad
iret
dec
adc
pop
shll
mov
add
adc
pop
ficoms
shl
lock
cwtl
xchg
jnp
mov
sbb
xlat
lret
shrl
xor
or
xchg
dec
int
mov
mov
repz
iret
cmp
cld
stos
mov
loopne
adc
dec
mov
sbb
mov
sub
outsl
rcr
xor
sub
sarl
ret
hlt
and
es
xor
cmpsb
leave
icebp
clc
es
ljmp
popf
lods
sbb
mov
cmp
cmpsl
and
fwait
mov
add
ja
add
test
cmp
mov
repz
push
cmp
frstor
pop
sahf
test
push
xchg
pop
cli
sbb
stos
lods
shll
jmp
stos
out
jle
out
push
or
repz
call
aaa
wbinvd
rcrb
inc
xor
dec
sahf
mov
lock
add
add
pop
xchg
repz
ja
loope
dec
dec
icebp
jmp
fidivl
or
inc
in
fwait
ljmp
inc
int
mov
mov
out
push
push
dec
bound
push
jns
dec
jge
mov
jg
loope
adc
rorl
pop
or
or
dec
mov
pop
xor
daa
fwait
dec
imul
sbb
rcr
adc
cmp
sub
lret
xchg
stos
mov
cmpl
out
sub
push
lret
loopne
fs
stos
jno
into
and
sub
insl
les
arpl
or
pop
addl
cs
rcrl
xlat
and
xchg
jae
int3
icebp
push
lret
inc
popf
adc
mov
xchg
hlt
inc
dec
int
ficoml
or
xchg
sub
sbb
mov
lret
scas
dec
add
rcrb
sarl
jbe
sbb
rsm
test
mov
ret
inc
push
xorl
sbb
aaa
mov
jle
push
or
int3
or
xchg
cwtl
jecxz
das
std
pop
lds
clc
jo
pop
jmp
and
in
jns
outsl
movsb
jp
fsts
repnz
jbe
adc
jge
sti
addr16
daa
mov
in
jno
and
mov
dec
shrb
push
push
add
xchg
xor
movsl
stos
sbbb
jg
test
mov
add
cmpsb
mov
data16
js
inc
add
adc
mov
cs
cmpsb
loope
xchg
mov
cmp
jnp
int3
test
movsl
cmp
cli
fmull
xorb
cmp
add
mov
fwait
in
pop
cmp
sub
cmpsb
pop
or
aam
lahf
imull
fsubrl
jg
sub
jl
outsb
mov
adc
or
jg
cld
inc
mov
clc
lret
out
xorl
mov
int
sub
fdivs
push
testl
mov
sbb
adc
enter
aas
push
xor
pushf
loop
add
aaa
fs
sub
ss
push
mov
andl
daa
cmp
push
adc
or
dec
into
fcompl
dec
cmc
add
insb
loopne
push
pop
pop
mov
lret
leave
imul
mov
data16
inc
mov
jae
stc
cmp
jp
add
stc
sub
ja
mov
enter
les
int
pop
sbb
nop
pushf
dec
xchg
insl
inc
gs
push
negb
clc
xchg
lods
or
sbb
push
data16
or
jae
aam
insl
pushf
stc
jl
jmp
push
mov
aad
mov
in
aas
outsb
sbb
jb
mov
xor
jecxz
fst
rclb
cwtl
ret
mov
push
aad
popa
push
popa
subl
sbb
inc
dec
dec
adc
subb
rdmsr
mov
and
cmp
sarl
imulb
std
mov
xchg
dec
enter
mov
adcb
cmpsb
xchg
and
pop
mov
mov
imul
shrb
mov
dec
adc
shlb
dec
outsb
aam
mov
es
cmp
lea
popa
ljmp
test
popa
outsb
sub
fstpl
mov
roll
push
jbe
xor
sub
mov
outsl
cltd
rcrl
mov
mov
push
std
ja
fisttpll
ja
xchg
jge
dec
jl
sbb
aam
or
or
mov
inc
fldl
push
jne
pushl
inc
insb
or
sbb
inc
imul
repnz
pop
pop
push
push
pushf
ja
je
dec
ds
test
insl
mov
pop
add
in
push
or
add
mov
adc
aam
scas
jns
add
dec
xchg
xor
hlt
mov
cmpsl
jne
add
jp
xchg
xchg
mov
mov
mov
dec
imull
in
or
loop
fbstp
mov
lcall
fpatan
addl
out
sub
sub
nop
pushf
mov
stos
in
inc
and
push
jnp
sbb
bound
adc
lret
aad
ret
pop
orl
jae
lcall
aaa
jbe
push
leave
push
jne
lds
xchg
jg
sub
mov
push
scas
mov
mov
shlb
mov
leave
jecxz
leave
xchg
pop
in
inc
push
mov
sbb
mov
clc
or
and
int3
rep
xor
lret
add
lds
jle
scas
dec
popw
and
inc
pop
cmp
push
jle
add
imul
jge
jp
enter
daa
mov
int3
adc
jl
mov
mov
xor
inc
ret
pop
sbbb
jge
mov
inc
dec
xor
cmpsb
cmp
jl
orb
js
aaa
mov
push
xor
sub
push
mov
sub
lds
arpl
insl
adcb
imul
push
sub
lcall
mov
dec
lcall
sub
flds
sub
lret
cmp
bound
fwait
in
jg
pushf
aaa
mov
and
mov
jge
mov
shlb
clc
inc
push
cmc
adc
int
outsb
cmp
inc
xor
lret
jno
mov
aad
sbb
stos
sahf
fisttpl
xor
clc
mov
loop
stos
int
cmp
popa
ja
pop
adc
cmp
and
or
adcb
shl
mov
push
xchg
enter
scas
into
mov
cltd
cmp
pop
shll
xor
imul
mov
data16
adc
scas
jl
xlat
inc
je
sub
orl
jae
hlt
xchg
mov
inc
nop
mov
test
or
les
or
xchg
outsl
jmp
sbb
lret
inc
jg
mov
push
pop
pop
cli
out
sub
jmp
inc
push
cs
aad
add
inc
inc
mov
or
ret
je
xchg
enter
aad
dec
lea
mov
daa
mov
dec
out
push
inc
aad
inc
xchg
pop
dec
jmp
lods
rcrb
int
iret
adc
lock
jo
cmp
stc
mov
mov
inc
ror
cmp
push
std
push
iret
and
ret
sahf
jae
mov
les
icebp
jge
hlt
cld
add
outsl
lret
testb
mov
xchg
jae
cltd
and
lea
mov
sub
bound
insl
imul
xchg
je
cmp
jb
push
ljmp
int3
lods
out
dec
jb
jmp
loopne
enter
push
and
setge
popf
je
cltd
or
fildl
mov
push
shl
fnsave
test
pop
pop
xchg
and
sbb
dec
shll
or
stos
int3
sbb
out
sbb
sub
sub
jmp
xor
mov
or
xlat
adc
scas
xchg
sub
notb
mov
pop
or
lcall
cmc
cld
inc
or
negb
lods
dec
mov
mov
rcrb
out
adc
push
bound
test
in
sarb
xchg
jg
and
and
or
les
mov
inc
jle
lods
inc
stos
mov
popf
fwait
jne
dec
sbb
dec
pop
fists
push
xchg
sbb
inc
jmp
inc
push
mov
out
pop
mov
mov
loop
shrl
ret
push
insb
jmp
jnp
jle
lahf
mov
imul
fcmove
xchg
jg
ret
rcrl
pop
cld
inc
pop
jle
jae
lods
notl
push
pop
std
popf
pop
fcoml
push
dec
pop
sbb
jl
sbb
test
imul
xor
rorb
mov
sbb
lods
leave
std
xor
hlt
and
mulb
dec
mov
push
add
sbb
cmp
aaa
xor
aad
push
stos
ror
fidivrs
pop
dec
roll
add
adc
and
mov
frstor
insb
push
jnp
out
pop
movsb
nop
enter
and
jbe
scas
adc
frstor
daa
mov
push
arpl
mov
scas
fisttps
lret
xor
fucomi
rcrl
out
cmp
je
jmp
push
cld
mov
fisubrl
xor
addr16
gs
ret
xchg
out
push
shl
loope
mov
sub
xlat
stc
mov
adc
lahf
sarb
nop
outsb
int3
ljmp
cmpsb
cld
dec
add
or
mov
pop
mov
inc
pop
or
lcall
xor
test
inc
sub
faddp
outsb
dec
cmp
mov
jo
and
fdivs
jnp
push
mov
xchg
mov
push
clc
jmp
int
xchg
jmp
mov
lret
mov
push
shrl
push
into
sbb
push
jle
mov
xor
jo
and
loop
test
stc
hlt
adc
fs
xchg
cmp
cmpsl
pop
push
ss
mov
cmp
pop
or
cli
add
cmp
cmpsb
add
ljmp
cmc
mov
sub
stos
adc
bound
sub
adc
sub
add
ljmp
inc
ret
jmp
jle
sub
fmull
mov
sahf
sahf
push
sti
and
mov
repz
dec
inc
push
add
dec
xchg
shll
pop
repz
test
sbb
inc
mov
movl
jns
adc
dec
or
cs
rolb
inc
pop
cmp
loope
jb
xor
dec
cmp
jne
adc
jecxz
mov
dec
lea
mov
sbb
push
fneni(8087
add
mov
lock
popa
das
sbb
or
inc
push
and
mull
rcrl
sbb
div
sahf
std
mov
cmpsl
lahf
pushf
int3
mov
push
lods
adc
sub
pop
lret
cmpsb
xor
pusha
cmp
mov
mov
rcrb
movaps
and
aam
mov
outsl
sbbl
xlat
cmpsb
xchg
mov
aad
dec
ret
fisubs
mov
add
scas
mov
push
and
sub
repnz
xorl
test
jl
mov
testb
and
fstpl
scas
addb
adc
rcrb
stos
mov
and
add
pushl
add
or
stos
popf
xor
xor
xchg
mov
cmc
pop
lret
inc
ja
sub
inc
lahf
rorl
add
sub
push
jge
add
outsl
adc
out
out
sub
cli
fs
in
scas
add
jecxz
lea
popf
mov
addr16
mov
js
stos
jmp
stos
mov
add
dec
adc
mov
addb
scas
ret
adc
outsl
push
xchg
in
jbe
jmp
or
loop
inc
ja
sub
push
sti
push
and
mov
ficompl
insb
push
jnp
jnp
jge
jle
shl
in
dec
adc
sbb
push
ret
into
pop
out
push
lock
adc
pushf
jae
add
popf
test
jo
add
gs
out
fisubrl
jge
xchg
sub
aas
shrl
xor
shrl
aaa
mov
outsl
mov
xchg
hlt
insb
mov
or
icebp
sbb
xchg
icebp
jae
or
popa
add
pop
addr16
js
cmp
sbb
mov
cltd
pop
adc
divb
cmpb
sahf
aad
movsb
sbb
ret
jbe
sub
jge
and
daa
lahf
mov
pop
jno
leave
xor
ss
sbb
mov
push
and
xchg
lahf
xchg
int3
stos
push
ret
test
push
pop
leave
inc
imul
dec
add
jne
repz
rcr
and
incl
dec
sub
cmc
pop
cmp
rep
push
aam
rcrb
jns
sub
cmp
mov
pop
fldl
repnz
in
js
scas
mov
js
xchg
cli
lcall
in
fsubrl
dec
and
mov
jle
mov
jb
inc
xor
adc
ret
out
mov
adc
mov
lock
pop
arpl
push
sti
ss
movsb
inc
lcall
lock
shr
cmp
movsb
test
mov
test
jnp
outsl
pop
hlt
xchg
loop
xchg
xor
stos
push
fs
push
daa
adc
jmp
test
cmp
sbb
mov
xor
or
cmp
jne
pop
je
into
test
fprem1
push
ljmp
loopne
call
stos
adc
pop
add
mov
mov
lods
cmc
frstor
xor
lods
sub
jg
and
dec
xlat
rorb
test
mov
or
pop
sti
roll
lods
gs
rclb
push
filds
fisttpll
or
inc
repz
xchg
xchg
cmc
or
sbb
or
xchg
fstpl
lods
adc
fnstcw
pushf
cli
imul
push
adc
sub
xchg
aad
ret
js
into
aas
dec
lret
cltd
shlb
jmp
je
repz
jecxz
lea
in
fiaddl
repz
rol
pop
mov
aas
mov
dec
mov
and
pop
push
xchg
inc
adc
xchg
popa
jecxz
testl
mov
popa
push
push
shrl
fcomi
xor
pop
mov
mov
cmp
icebp
sub
cld
push
cmp
lret
aam
jmp
sahf
ret
daa
mov
push
pop
cmpsl
andl
aam
sub
dec
es
mov
clc
adc
xchg
lock
shl
popa
or
test
mov
and
pop
cmc
cvtdq2ps
rcrb
cli
in
mov
jg
push
inc
dec
hlt
ffree
xchg
repnz
cwtl
cmpsb
xchg
inc
sbb
pop
loopne
add
lret
loop
and
call
popf
popf
call
pop
into
xor
and
xor
sub
mov
inc
dec
daa
xchg
out
pop
and
ja
dec
inc
dec
pop
leave
dec
inc
ss
or
inc
dec
fwait
mov
mov
cmp
into
cmp
cmpb
adc
jecxz
inc
xchg
sbb
push
imul
lods
lea
aas
adc
sti
insb
mov
mov
mov
nop
aad
dec
test
xor
push
add
xchg
rorb
add
xchg
xchg
cmp
xor
les
sub
inc
mov
stos
cmp
data16
mov
inc
lods
jle
cmc
adc
ja
jecxz
ficoms
ret
mov
es
inc
sbb
pushf
jbe
xlat
cwtl
movsb
popf
lods
push
and
push
push
inc
inc
idivl
fcmovu
or
xchg
test
pop
sbb
int
imul
call
rolb
ljmp
dec
addr16
mov
push
arpl
flds
push
repnz
push
and
aaa
mov
and
xor
clc
add
mov
mov
push
pop
cmpsl
stc
sbb
mov
pop
jge
inc
push
loop
out
scas
and
cmpsl
pop
movsb
cmpsb
addl
push
sbb
mov
daa
sahf
sbb
cmp
sahf
jp
in
fxtract
dec
mov
cmp
adc
mov
xchg
xor
push
jmp
bound
in
xor
xchg
iret
pop
adc
push
sub
jbe
sub
add
cmp
push
inc
movsl
pop
jmp
or
popa
sbb
pop
xor
popf
mov
pop
mov
jg
push
test
lcall
lret
xchg
xchg
sub
inc
in
adc
in
stos
xchg
jg
xchg
out
aaa
fisubrl
imul
and
cmc
mov
fcomps
daa
idivl
out
nop
mov
roll
xchg
sbb
aaa
inc
sahf
les
jo
clc
fidivl
outsl
or
loop
ror
stc
bound
fs
mov
xor
adc
xchg
mov
imul
cmp
dec
into
or
daa
and
push
enter
add
push
stos
jne
stos
inc
insb
imul
insb
sbb
cmp
adc
push
sarb
pop
inc
dec
xlat
lcall
subl
adc
in
je
dec
sti
subb
gs
mov
dec
add
xchg
flds
rol
and
repz
mov
mov
inc
jle
cmp
sbb
add
xchg
sub
xor
mov
movsl
arpl
std
popf
cmpsl
lea
sub
pop
push
jb
mov
cmc
je
daa
shl
cmc
movsl
jl
fimuls
lea
cwtl
scas
cmp
mov
inc
test
sub
fisttps
dec
stos
push
mov
add
inc
fs
cmpsl
das
pop
push
pop
xor
mov
in
push
sarl
cmpl
cmpsl
popf
pop
mov
add
cld
subb
mov
cltd
push
mov
scas
xchg
sar
mov
aam
or
xchg
pushf
clc
dec
arpl
das
cmp
xor
out
popa
and
mov
mov
iret
bts
add
pop
dec
cltd
scas
and
dec
mov
dec
pop
push
or
fucomp
in
fildll
inc
xor
inc
mov
gs
pop
mov
ss
cltd
inc
insb
out
inc
repz
jp
lods
pushl
nop
mov
and
jno
mov
jmp
or
pop
cmp
jmp
dec
or
inc
int
jge
add
sbb
push
xchg
mov
jmp
out
lods
push
mov
call
adc
outsb
push
mov
imul
or
inc
xchg
xchg
sub
push
dec
fiaddl
jne
adc
pusha
in
loopne
lods
inc
add
sti
imul
mov
es
inc
xchg
push
sub
jl
dec
push
lahf
pop
lods
stos
mov
mov
insb
sub
les
in
push
ficoms
mov
xchg
rol
cmp
adc
jae
jns
push
lcall
push
lds
sti
xchg
fisttpl
sbb
cs
scas
fiaddl
shlb
dec
repnz
roll
jge
sbb
sub
or
or
popa
aaa
outsl
jns
or
xor
add
stos
iret
int3
lahf
xchg
pop
pop
cmp
lds
mov
mov
cmp
adcl
or
and
enter
daa
popf
add
jo
sbb
out
xchg
cmpsl
jl
ss
dec
sti
cmpsb
fisttpl
jae
cwtl
xor
lods
call
call
pop
subl
xchg
scas
in
sbb
out
js
fcoms
push
out
loope
or
cmp
ffree
jnp,pt
mov
pusha
push
int3
ror
xchg
sbb
das
sbb
aam
mov
aaa
xor
mov
pop
std
outsb
push
mov
popf
dec
lcall
aas
faddl
scas
sub
and
adc
pop
adc
xor
mov
out
mov
and
outsl
and
sub
int
pop
fcomp
sbb
lret
mov
sbb
sbb
sub
sahf
addr16
mov
push
dec
subb
sbb
imul
fs
cmp
xchg
ja
or
xchg
cmp
adc
out
push
xchg
pushf
dec
pop
xor
ljmp
aaa
lahf
or
add
jecxz
pavgb
sbb
adc
shrl
orb
pop
or
mov
shrb
mov
xlat
ds
sub
adc
in
fbld
mov
and
cmp
subb
nop
es
es
popa
jae
inc
les
loop
sub
inc
push
xchg
jnp
push
sbb
mov
lcall
xor
pushf
push
das
pop
jmp
in
mov
aad
adc
scas
or
aas
mov
ljmp
scas
int
add
dec
loope
sbb
cwtl
imul
jecxz
and
sub
xchg
lds
insl
cmpsb
lcall
push
f2xm1
dec
ds
das
mov
cltd
mov
addr16
and
or
roll
inc
xor
mov
jns
dec
scas
and
mov
fldenv
cld
lods
repz
mov
mov
mov
mov
int3
mov
in
mov
shll
sub
aad
cwtl
aam
ds
xorb
pushf
xlat
insl
adc
clc
mov
daa
xchg
outsb
outsl
dec
ljmp
in
lcall
mov
in
ficoms
push
jecxz
sbb
add
jmp
and
test
mov
mov
pop
js
int3
je
fstl
sub
mulb
stos
xchg
jmp
mov
addl
test
xchg
xchg
jno
call
in
xor
mov
pushf
stc
cmc
xor
push
mov
add
sbb
cmp
xlat
pop
ja
adc
dec
std
insb
pop
inc
fs
mov
fwait
sbb
push
cmp
pop
add
orb
mov
bound
push
in
inc
push
xchg
mov
or
mov
mov
addr16
lret
pop
jp
lds
das
mov
lds
mov
jo
pusha
subb
xchg
mov
jmp
insb
js
adcl
inc
out
dec
test
mov
xor
xor
and
mov
insb
xchg
inc
push
jnp
sbb
xor
xchg
and
iret
adc
ret
ljmp
sbb
jae
fwait
out
push
pop
cli
cmp
push
inc
movsb
fiaddl
xchg
xor
sub
fs
cwtl
scas
mov
mov
test
push
cli
pop
hlt
dec
shll
mov
sub
sbb
pop
inc
aaa
cs
sbb
or
push
dec
int3
mov
ss
add
ja
lds
or
movsb
les
cmp
ss
mov
mov
jbe
pop
aam
dec
mov
lods
fsts
daa
pushf
push
cmp
mov
jl
data16
push
push
push
push
mov
out
and
insl
lahf
hlt
fnstcw
cmp
lods
test
jg
push
inc
push
sub
cmpsb
lret
xchg
lcall
mov
pop
mov
loope
shl
rcrb
insl
ds
cmc
lds
stos
stos
push
xor
xchg
sbb
clc
ss
mov
lcall
push
lods
sub
int
add
sbbl
stc
mov
xor
std
outsb
gs
and
lock
add
mov
enter
xchg
mov
xchg
add
enter
movsl
fcom
xor
jbe
popa
shrl
mov
xor
sbbb
mov
xor
cmp
stc
rolb
fs
xor
cmp
or
out
mov
insl
xor
inc
hlt
or
jae
cmc
stos
test
dec
outsb
rcrb
xor
push
mov
rclb
sti
mov
data16
sub
aad
stc
xlat
jge
inc
sub
adc
aaa
in
dec
push
sar
fimuls
incb
lods
mov
nop
add
std
inc
xlat
shll
stos
rol
cmp
repz
xchg
xchg
sbb
mov
cmp
pop
sahf
orb
scas
cmp
add
aad
dec
push
inc
leave
int
aas
sub
dec
adc
mov
adc
pushf
lea
mov
cltd
mov
fadds
mov
jl
xorl
push
test
cmp
inc
jb
popa
lock
lret
xchg
xchg
mov
sub
shlb
data16
rcll
int3
idiv
xor
std
lcall
cmpsl
fwait
xor
mov
mov
pop
cld
fmuls
or
jl
mov
pop
add
push
shlb
add
ret
jle
mull
clc
ret
pop
clc
xchg
lods
sub
ljmp
subl
ss
and
cwtl
inc
dec
vmread
add
fstpl
sbb
adc
lret
push
ss
aaa
dec
add
inc
and
popf
rcll
push
and
or
mov
mov
mov
xor
pop
sbb
mov
add
loope
pop
mov
xor
mov
add
and
or
hlt
lock
dec
xchg
fmul
inc
add
fneni(8087
dec
out
imul
jns
in
in
jno
xchg
or
mov
cmp
or
xlat
xchg
mov
cmpb
adc
mov
xor
pusha
sbb
fucomip
sub
xchg
cmp
jg
jmp
xchg
inc
andl
das
sub
repnz
lock
sbb
out
and
leave
inc
insb
add
lcall
sbb
sub
outsl
je
iret
outsl
ret
mov
inc
shll
jae
add
and
popf
and
stos
push
ret
inc
cli
jmp
xchg
mov
mov
outsb
movsb
imul
scas
add
sub
adc
rcl
mov
divl
add
hlt
cwtl
xor
or
sbb
aaa
in
mov
or
mov
int3
jne
xchg
pop
xor
daa
fisubs
add
fadds
and
fstpt
jp
outsb
movsb
inc
xchg
push
push
inc
cmp
jge
es
fwait
push
mov
add
jno
hlt
jae
outsb
push
dec
fcos
fimuls
cmp
dec
and
repz
adc
jmp
push
dec
sub
inc
movsl
notb
cmpsb
dec
mov
stos
js
and
push
jns
loope
fwait
cmp
and
cmp
lock
movsl
outsb
fs
lcall
addb
int
mov
xor
mov
sub
adc
lcall
mov
sub
mov
adc
cmp
scas
or
xor
mov
ljmp
mov
jmp
int
stos
cmp
idivl
mov
mov
hlt
sbb
cld
sahf
lods
sub
test
jno
outsl
fistpl
loop
shlb
dec
mov
adc
rcl
ss
ds
cmp
push
int
out
outsl
cmp
ss
cmp
jl
or
xlat
cmc
jno
outsl
loopne
ret
jnp
push
adc
inc
push
imul
inc
cmp
jmp
and
lods
les
or
mov
es
sarl
in
mov
mov
imul
notb
pop
lock
inc
or
inc
outsl
adc
jecxz
outsl
xchg
add
call
andb
push
test
pushf
cmpsb
inc
mov
lret
cs
rcl
adc
mov
aas
xchg
pop
jb
push
test
je
mov
pop
out
mov
mov
dec
cwtl
push
mov
lahf
dec
imul
fcmovne
cmp
jno
inc
stc
icebp
in
lock
das
jae
movsl
mov
aad
stos
and
adc
movsl
arpl
std
inc
daa
ret
dec
movsl
pop
out
lcall
icebp
xchg
xchg
cld
add
jmp
nop
xor
mov
mov
mov
xchg
lcall
dec
insl
shlb
in
sub
jb
aam
mov
call
insl
ficoms
clc
dec
push
in
imul
popa
addr16
lods
jo
mov
push
out
mov
repnz
mov
mov
push
cltd
push
push
test
dec
icebp
push
push
insb
ret
push
adc
xchg
in
sbb
into
shrl
push
pop
mov
mov
push
sbb
xchg
add
inc
add
xchg
jmp
mov
cltd
xor
imul
mov
or
ret
insb
cmp
sbb
sbb
mov
jecxz
test
xchg
adc
or
sub
ja
sbb
jg
pop
add
ss
out
dec
lods
push
fnstenv
adc
xchg
pop
cmp
xor
bound
test
addr16
addr16
pusha
mov
mov
dec
ret
adc
test
jne
pop
imul
lret
and
psubsw
adc
add
xorl
cmp
shlb
subl
test
push
pop
outsb
push
stos
or
lods
and
sbb
imul
jle
adc
xchg
mov
mov
ret
add
push
js
dec
loopne
jae
stos
fists
jecxz
dec
popf
dec
cmc
push
push
inc
popa
jnp
stos
dec
inc
xchg
loopne
mov
imul
scas
xor
out
shl
push
mov
push
popa
pop
leave
xor
in
stos
jno
inc
imul
sbb
fbstp
add
mov
cwtl
out
and
pusha
pop
sbb
lcall
cmp
mov
scas
bound
in
and
loopne
cmp
push
jo
shr
push
push
dec
adc
inc
jge
loope
enter
daa
lcall
jno
pop
repz
inc
sti
dec
dec
push
bound
sbb
popf
xor
jge
mov
push
loope
gs
adc
add
xor
sarl
js
and
or
and
push
std
loope
lcall
icebp
movsl
ds
test
pusha
xor
sbbb
iret
sbb
in
add
push
pop
mov
xchg
pop
jb
jno
sub
mov
add
outsb
push
xchg
call
mov
pop
fs
outsb
mov
push
sbbb
jg
imul
inc
ret
jb
xchg
inc
mov
push
or
int
daa
adc
dec
push
add
jnp
or
rcr
rorl
pushf
mov
test
mov
jnp
mov
loop
stc
ds
inc
adc
sbb
cmp
nop
