jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
aaa
cmp
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
mov
cmp
je
jmp
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
xor
divl
test
jne
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jg
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
mov
lea
mov
mov
mov
dec
je
mov
mov
xchg
dec
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
sub
mov
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
push
mov
mov
xor
call
mov
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
mov
mov
mov
call
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
push
mov
mov
xor
call
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
lea
mov
push
jmp
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jg
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
mov
lea
mov
mov
mov
dec
je
mov
mov
xchg
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
movb
push
push
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
movl
movl
lea
push
call
push
push
push
call
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
movl
movl
lea
push
call
decb
cmpb
jne
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
pop
add
add
add
add
pop
add
add
add
add
add
jae
add
data16
xor
add
xor
xor
pop
add
add
add
xor
xor
add
pop
add
xor
xor
add
data16
add
add
add
jae
add
add
push
mov
add
mov
mov
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
mov
mov
movl
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
shlb
repnz
shlb
repnz
shlb
repnz
mov
shlb
repnz
mov
push
sbb
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
mov
idiv
mov
mov
repnz
jl
or
mov
or
xchg
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
mov
xlat
adc
repnz
or
xor
jl
mov
or
xor
jl
or
mov
or
xchg
pop
scas
xor
jge
mov
xor
mov
adc
repnz
cli
mov
push
sti
mov
jl
cli
mov
fs
mov
xlat
adc
repnz
sti
mov
push
cli
mov
mov
pextrw
xor
mov
mov
jl
cli
mov
mov
push
sti
mov
mov
push
cli
mov
jb
mov
jl
sti
mov
fs
mov
xlat
adc
repnz
pextrw
xor
jl
mov
adc
adc
stos
scas
xor
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jg
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
mov
lea
mov
mov
mov
dec
je
mov
mov
xchg
dec
movl
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
mov
call
mov
cmpl
je
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
cmp
je
mov
subb
mov
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
nop
xorb
nop
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
incl
mov
cmp
jne
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
push
mov
push
call
push
call
ret
mov
pop
ret
add
add
outsb
add
add
add
add
add
add
add
je
jae
fs
insb
and
add
in
add
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
mov
mov
pushl
call
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
movb
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
add
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
call
call
call
call
test
jne
mov
jmp
movw
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
push
call
mov
cmpl
je
push
call
call
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
mov
pop
ret
add
popa
fs
jae
js
cs
insb
add
add
popa
outsb
and
js
and
add
andl
jae
movl
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
mov
mov
lea
call
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
ret
mov
ret
lea
add
ficoms
movsb
ret
dec
add
push
adc
dec
loop
int
mov
int3
lods
jmp
js
add
add
pop
dec
add
jle
xor
imul
out
popf
add
push
aam
stc
sub
jns
test
fbstp
add
pop
sbb
loop
mov
es
add
in
push
dec
add
adc
sahf
cmp
arpl
add
xor
hlt
mov
or
add
loop
rolb
lds
add
and
add
adc
sbb
dec
sbb
jmp
popf
outsb
clc
fldl
insl
add
bound
out
hlt
popl
add
xor
mov
add
adc
inc
add
fadd
xchg
subb
jnp
jg
mov
dec
pop
lea
loopne
in
sub
xchg
xchg
add
fs
and
mov
add
xchg
std
das
add
popf
bound
pop
addl
ss
xchg
repz
out
xor
add
jmp
mov
mov
dec
add
mov
cmp
cmpsl
filds
jns
add
insb
lock
add
cld
xor
sub
addb
push
rolb
mov
jle
sbb
jbe
add
xor
sbb
cmpsl
pop
push
xor
jecxz
mov
add
test
cmpsl
negl
mov
add
or
fiaddl
add
add
adcl
sub
sar
jge
push
jecxz
xlat
jae
rorb
ret
add
pusha
inc
or
xor
and
sbb
pop
fs
mov
or
cltd
add
sub
sub
sbb
sbb
stos
fstpl
add
jbe
push
xor
mov
das
mov
arpl
inc
add
push
mov
add
or
add
add
add
push
inc
sahf
push
roll
movsl
adc
mov
mov
pushf
jge
rolb
lcall
xchg
aam
mov
in
sbb
lds
aam
popf
mov
das
xchg
mov
sbb
add
xchg
inc
cli
aad
aam
test
add
cwtl
dec
jle
add
mov
and
mov
add
mov
imul
shll
and
notb
mov
dec
add
leave
movsl
xchg
mov
mov
add
leave
loopne
add
cs
enter
ret
sub
hlt
add
in
xlat
inc
aaa
fadds
cld
pop
add
test
push
add
into
dec
jae
dec
sub
dec
adc
mov
inc
mov
pop
fildl
add
fnstsw
loop
ljmp
add
fcoms
and
inc
popf
add
test
jp
lock
mov
sbb
scas
add
lea
add
in
rcr
mov
add
lcall
push
add
push
xor
add
popf
pop
es
add
add
cld
and
add
daa
ja
sub
das
insb
fidivl
cwtl
jb
add
lods
add
add
mov
add
add
add
pop
sarb
test
aaa
arpl
imul
sub
test
out
or
divb
stc
xor
pop
fs
dec
add
lea
mov
je
cltd
xchg
jno
or
or
push
add
out
aad
fnstcw
fdivp
cmp
popa
dec
movsl
lods
loope,pn
add
add
es
add
out
or
mov
adc
out
es
pop
xor
add
adc
nop
or
std
pushf
add
add
adc
fsubrl
add
and
sub
cli
aaa
xchg
rolb
sti
xor
or
sbb
in
test
int
pushf
insb
push
int
test
mov
insl
lcall
push
mov
ret
mov
lock
cmc
sar
mov
test
adc
bound
out
cld
cmp
sub
gs
mov
cmpsl
shl
push
or
cmpsb
pop
cmc
bound
jle
je
mov
adc
stc
or
cmp
sbb
add
lret
data16
pop
mov
xchg
jnp
mov
cmp
repz
cmp
out
cmp
in
and
fimuls
loopne,pt
cmp
aam
jno
push
loopne
les
cmc
xchg
repz
sahf
xchg
inc
sbb
sub
pop
adc
cmc
test
pushf
shrl
jmp
out
cs
push
aad
orl
cmp
ljmp
xchg
out
je
mov
lock
jl
leave
fisubl
cwtl
call
jnp
daa
pop
mov
push
adc
in
dec
pop
jb
fistl
roll
pop
fiadds
outsl
sbb
mov
popf
test
dec
in
fisubl
rorl
shl
xchg
xchg
sub
push
pop
int3
cwtl
jl
lahf
mov
lods
and
subl
cltd
lret
sbb
icebp
mov
dec
enter
lock
xchg
pop
das
or
inc
mov
push
xchg
clc
aam
or
ret
aad
push
es
jae
dec
add
cmpsl
adc
mov
call
pop
sbb
bound
mov
and
in
decb
jl
lret
sarb
cwtl
test
and
xchg
leave
vpxor
clc
sbb
xchg
and
or
mov
ficomps
stos
outsl
jnp
out
mov
ljmp
lock
leave
cltd
push
jbe
xor
pop
adc
xchg
xchg
lcall
lahf
cltd
sbb
mov
xor
test
inc
ja
push
je
inc
add
or
std
jmp
stos
xor
sub
pop
xchg
xor
xchg
hlt
mov
or
ja
sbb
dec
or
mov
mov
aad
push
dec
cmp
sahf
jne
aam
mov
push
jne
jecxz
pop
bound
jns
std
mov
pop
xchg
out
sbb
loope
mulb
xchg
cmpl
sarb
fdivr
and
jle
mov
mov
jae
fbld
scas
xchg
push
lea
jmp
push
or
jae
inc
push
mov
mov
lcall
daa
inc
and
cmp
sbb
imul
scas
pushf
sbb
xlat
cwtl
adc
mov
and
js
js
add
push
arpl
add
xchg
push
cmp
fimull
cmpsb
js
shll
pop
sub
stos
fidivrs
add
mov
shrb
mov
rcrl
leave
mov
push
testb
jbe
xlat
pop
jge
ss
sbb
xor
aaa
gs
or
stos
adc
dec
sarl
push
rorl
inc
xor
stos
repz
scas
sti
mov
cmp
mov
lahf
cmpsb
out
sbb
mov
add
adc
dec
jno
popf
mov
cmp
sbb
ds
cmp
movsl
es
mov
cmp
push
push
es
subl
addr16
cmpb
movsl
insl
pop
add
js
lret
jl
inc
loop
push
mov
mov
mov
jne
addr16
outsb
aad
xchg
adc
fst
or
sbb
xchg
jnp
and
incl
lahf
daa
lods
int
lock
pop
lret
mov
lcall
dec
mov
and
sbb
iret
sahf
inc
out
test
mov
jg
cmp
mov
mov
add
ss
lods
cmp
call
jae
lret
xor
jle
sarb
out
or
stos
imul
stos
cmp
popa
xor
outsl
push
mov
loop
stc
pusha
stc
mov
add
add
pop
data16
xchg
in
jl
mov
pop
mov
out
cmp
icebp
xor
inc
popf
sti
test
incb
cmpsl
pcmpgtw
or
pop
repz
xor
cmp
push
sbb
iret
repz
xchg
cltd
jle
sbb
push
push
in
push
loop
pushf
jle
push
jmp
fistps
cs
sahf
sbb
lret
nop
xor
jl
xchg
loope
inc
add
fstps
push
add
push
mov
sbb
dec
lea
add
jb
pop
imul
ret
dec
inc
sub
fcmovnb
inc
jle
mov
sbb
out
aas
aas
test
jb
lods
les
pop
frstor
mov
pop
std
stc
xor
inc
fucomi
mov
daa
dec
addl
movsb
lret
mov
hlt
mov
pmullw
push
xor
jmp
mov
or
xchg
fs
es
shrb
subb
adc
pop
mov
mov
xor
mov
ljmp
mov
fwait
and
mov
test
jge
mov
cmpsl
and
fstl
xchg
ds
push
lret
mov
loopne
lahf
loope
pop
mov
jnp
pop
fs
out
push
inc
xor
lret
fisttpll
dec
sbb
xchg
jmp
xor
inc
mov
xchg
inc
js
inc
ljmp
jbe
dec
shll
mov
fwait
outsl
je
push
pop
push
mov
xor
jl
push
in
xor
test
or
test
in
mov
in
mov
inc
sub
pop
addr16
ja
imul
lret
mov
inc
push
cmp
sub
jne
sbb
mov
cltd
xchg
ret
stos
sbb
push
daa
xchg
ficoml
dec
subl
jmp
push
shll
fcompl
and
inc
mov
adc
add
jnp
xchg
pushf
jle
push
pop
in
int3
jecxz
push
adc
xchg
and
and
sbb
xor
inc
adc
popf
add
mov
stos
and
iret
sbb
cltd
test
add
mov
adc
sarl
pop
cmp
scas
hlt
mov
sbb
fadd
or
ret
inc
mov
mov
jno
cmp
pop
pop
mov
fistl
push
rorb
mov
es
leave
incl
movsb
stos
or
jle
jbe
cmp
jge
adc
loope
aaa
and
scas
or
outsb
nop
add
add
scas
dec
inc
in
jle
mov
pop
xor
add
lret
int
test
cmp
pop
push
in
arpl
inc
sub
mulb
mov
cmp
cli
xchg
daa
adc
lahf
cmp
movsb
add
sub
insb
ljmp
or
and
cld
leave
lahf
stos
xor
test
test
xor
sahf
dec
mov
pop
sub
enter
push
pop
test
in
loope
xchg
pop
pop
dec
sub
outsb
cmp
jbe
pusha
xchg
icebp
sarb
int3
stos
xorb
or
sub
mov
xchg
pusha
and
je
push
mov
fldt
subb
jp
cmp
push
into
xchg
lock
cmp
sahf
call
and
jg
adc
jmp
lods
leave
pop
adc
xchg
insb
push
jnp
pop
jnp
fsubs
add
lret
fadd
adc
xchg
imul
mov
lcall
int
loop
stos
pop
stc
jbe
push
adc
cmp
data16
mov
arpl
lret
scas
jae
dec
in
xor
xor
sti
xor
gs
and
stos
gs
test
loopne
cmp
pop
adc
call
push
add
stos
les
dec
cmp
stos
dec
mov
xchg
lds
xlat
jae
jns
fistpl
mov
jmp
fwait
lock
repz
push
nop
maxps
test
inc
adc
mov
je
mov
jecxz
gs
orb
adcb
jns
push
sbb
fwait
adc
and
sbb
push
push
pop
xor
inc
cmp
inc
push
jno
aas
faddp
xchg
jb
lock
cmp
and
push
addr16
push
and
sbb
mov
cwtl
bnd
mov
mov
mov
mov
fs
push
jo
lret
testl
cmc
mov
mov
nop
das
lret
mov
les
ret
repz
sub
insl
jge
pushf
dec
clc
pop
jle
adc
mov
xchg
mov
lods
mov
cmpb
adc
and
and
mov
sub
or
test
sub
movsb
add
fnstsw
mov
xchg
mov
clc
punpcklwd
ret
mov
out
imul
clflush
add
sbb
xor
jns
mov
mov
rorl
mov
loop
sbb
clc
mov
stc
mov
or
mov
fwait
sahf
xor
stc
add
ds
out
jmp
stc
and
cmp
in
das
add
mov
pushf
mov
addl
xor
xor
inc
popa
cltd
push
mov
mov
or
sbb
jne
lds
out
mov
not
jns
push
dec
xchg
movsl
jbe
xorl
sbb
xlat
sbb
sbb
addr16
jbe
in
in
imulb
movsl
jnp
dec
lods
jle
fxch
in
xchg
xor
test
mov
pop
mov
sub
jns
adc
hlt
push
lods
fs
daa
inc
push
mov
adc
repnz
pop
imul
dec
scas
fistl
xor
lahf
lods
iret
movsl
mov
popf
pop
jno
jmp
arpl
push
mov
push
cmp
fidivl
fists
and
lods
pop
mov
fiadds
shll
fs
sbb
jns
xor
jbe
push
movsb
xor
xor
jbe
push
daa
jge
iret
jmp
push
and
or
ret
sbb
jl
jo
dec
scas
and
xchg
hlt
shll
pusha
pushf
mov
mov
fidivrl
mov
and
cmpsb
in
pusha
sub
and
enter
daa
adc
push
int3
or
lret
mov
jmp
sub
ds
shll
movsl
xor
mov
jo
jle
leave
adc
int3
insb
or
mov
jns
push
cmp
pop
push
ja
js
movsb
fcoms
ret
test
push
inc
mov
rcr
fmull
popa
mov
outsb
fwait
jge
adc
xchg
rorl
inc
stmxcsr
pop
movsb
insl
mov
cmc
mov
aad
inc
push
movsl
stc
cmp
adc
movsl
push
pop
stc
gs
add
cmc
push
and
and
sbb
sti
jg
jge
xchg
or
test
mov
je
mov
xor
jbe
enter
scas
inc
cwtl
cmp
pop
lea
mov
ror
addr16
shrl
or
out
into
outsl
mov
xor
out
outsl
adc
and
sub
enter
mov
aas
lods
dec
imul
out
movsl
cwtl
cli
addb
pop
or
in
arpl
push
sti
jecxz
dec
incb
andb
lret
push
gs
xor
xchg
imul
cli
test
jns
stc
xchg
pop
dec
addr16
fidivrs
ret
sub
sbb
aam
lods
jmp
sbb
cs
or
pop
repz
ljmp
inc
sub
sti
outsb
jecxz
icebp
insl
movb
call
clc
sti
adc
jno
adc
cld
dec
sbb
and
repz
aam
jp
mov
adc
jb
mov
outsb
mov
jnp
xor
cmp
mov
pop
fs
inc
inc
iret
cwtl
lods
je
ret
mov
xor
xor
jecxz
data16
decl
mov
sbb
mov
jnp
fcom
popf
js
ret
adcb
insl
fs
and
mov
cmpsl
adc
mov
insl
insl
cltd
lods
push
mov
outsl
stos
das
mov
mov
addr16
pop
not
xor
fs
test
mov
push
jo
push
clc
int3
mov
ljmp
ds
fbstp
aad
cmp
scas
out
int3
xchg
dec
and
or
sarb
cli
mov
mov
cmpsb
xchg
lock
dec
inc
jg
cmp
xchg
lret
fdivl
int3
or
mov
fwait
int
sbbl
inc
in
pop
add
add
inc
xchg
or
stc
inc
xchg
out
sub
push
sub
adc
pop
cmp
cltd
ja
xchg
jns
loope
adc
repnz
movsb
jnp
loope
xor
fwait
aam
mov
pusha
and
cmpb
pop
ja
jns
hlt
gs
jo
and
outsb
inc
dec
sub
shlb
les
xor
lcall
insb
sbb
sub
push
xchg
in
ret
inc
dec
imul
leave
xchg
lret
jmp
aaa
psadbw
outsl
mov
popf
dec
jmp
ljmp
jecxz
and
adc
scas
lds
pop
push
jl
adcl
das
pop
iret
add
insl
ret
bound
repz
push
inc
fsubl
xor
pop
fmuls
ret
pop
adc
inc
mov
mov
mov
pop
mov
pop
cwtl
lds
lea
jg
jl
dec
xchg
shl
int3
jbe
leave
in
dec
dec
movsb
rol
push
jecxz
cli
jbe
push
sahf
jge
jb
sbb
std
mov
mov
lret
push
add
es
jl
nop
sbb
sbb
lods
xor
mov
pop
in
sbb
sarb
inc
or
dec
inc
dec
fdecstp
cmpsb
outsl
imul
enter
daa
adc
lret
test
jno
cwtl
push
sub
jecxz
cmp
pop
ds
movsl
cmp
ja
call
movsb
addr16
lcall
shll
dec
pop
js
lcall
push
pop
push
and
loope
aas
push
fdivl
dec
outsb
mov
arpl
outsb
nop
cmp
adcb
sbb
lods
push
and
cs
test
ror
jl
loop
js
adc
js
imul
push
sub
cmp
add
pop
and
mov
xchg
fdivrs
inc
adc
mov
mov
ret
pop
or
ss
xor
sbb
xor
jno
sub
pop
andb
inc
dec
insl
cmp
imul
into
push
outsb
or
jle
push
xor
mov
lock
push
loop
stos
in
bound
test
pop
data16
lds
dec
xchg
inc
out
pop
add
mov
dec
xor
loope
in
into
xchg
xor
xchg
xchg
push
push
les
ficomps
pop
push
aaa
adcb
pop
out
add
cmp
pop
repz
repnz
xchg
loop
mov
loop
dec
cmp
test
xlat
icebp
jo
sub
jg
mov
jg
dec
jmp
pop
mov
aad
loopne
nop
lds
dec
mov
cmp
fld
pop
jno
div
jecxz,pt
rcl
mov
aaa
lea
jo
jbe
cmp
ja
sti
pop
xorb
adc
lock
add
pushf
fistl
sbb
ja
sub
scas
inc
inc
ret
cltd
aas
sbb
dec
jb
adc
sub
jp
push
xchg
mov
mulb
pop
jecxz
push
jg
mov
mov
or
mov
lret
aad
push
mov
xor
push
inc
in
in
mov
aam
out
add
xor
insl
dec
pop
mov
out
stc
push
btc
mov
inc
dec
adc
mov
aas
and
pop
pop
push
pop
clc
dec
xchg
rorb
aam
sub
ljmp
imul
pop
clc
pop
dec
push
xchg
and
pop
ljmp
lods
pop
mov
stos
sub
sbb
pop
call
dec
add
dec
cltd
xor
sub
call
add
mov
mov
mov
sbb
lcall
cld
add
add
je
imul
jmp
xor
xor
xor
xchg
xlat
sub
mov
jmp
ja
jb
dec
aam
gs
jo
mov
xchg
icebp
jl
fsts
bound
mov
loope
out
pop
enter
sub
xchg
cmp
mov
icebp
jecxz
sub
int
dec
outsl
outsb
in
jp
push
dec
mov
cltd
push
insb
test
or
jle
fsub
pusha
push
out
pusha
filds
mov
popf
sarb
inc
inc
mov
fistl
or
mov
xchg
inc
mov
and
or
sbb
or
pop
sub
push
ret
cld
pop
adc
rcll
iret
arpl
ficomps
in
cld
hlt
pushf
cmp
lahf
inc
or
cwtl
or
xor
loopne
aaa
pop
fcmovu
aam
xchg
sbb
push
ficompl
push
xchg
fmulp
mov
lds
les
pop
cmp
leave
fs
dec
mov
push
xor
jbe
adc
jge
clc
scas
sbb
push
xchg
or
mov
xchg
in
jl
test
dec
fistpl
pop
scas
shlb
push
xchg
add
scas
cmpsl
mov
push
dec
dec
movsl
inc
jg
repnz
in
ds
psubd
jno
mov
sub
pop
test
testb
in
aad
inc
out
or
cmpsb
aas
data16
pop
fisttpll
push
jb
adc
pop
jg
add
addr16
xor
test
xchg
pushf
add
sbb
pop
inc
jg
push
mov
loope
lret
pop
ljmp
popa
hlt
call
dec
decl
fwait
push
aam
imul
bound
jno
push
stos
fwait
ss
mov
cmp
idivl
push
shr
sahf
mov
js
sbb
gs
shl
xor
add
jg
shrb
in
mov
pop
sti
fs
daa
int
data16
or
xor
push
leave
fcom
sbb
dec
lods
xor
ficompl
sbb
cmp
cmc
inc
out
xor
jmp
jae
repz
adc
fildll
sbb
aas
push
lods
sbb
add
dec
add
mov
xor
fldt
cmp
sti
inc
cmp
decb
and
pop
outsl
fists
adc
adc
les
jns
pop
stos
jp
movsl
jmp
daa
cmp
xlat
xor
xor
xor
mov
pushf
sub
js
jle
pop
fisubrl
iret
nop
mov
mov
inc
dec
imul
cmpsb
sbb
cmp
push
aad
mov
hlt
fisttpll
mov
icebp
addr16
notb
adc
adc
dec
out
push
je
jg
jnp
sbb
repnz
test
cmp
mov
repnz
cs
mul
fidivs
cwtl
and
aaa
mov
mov
daa
andl
in
lret
inc
movsb
lock
into
mov
scas
shl
ret
lahf
mov
addr16
cmc
mov
jmp
mov
outsl
es
xor
cmpsb
mov
jmp
lcall
sbb
lods
hlt
enter
nop
cmpb
test
pusha
pop
pop
mov
rcr
pop
daa
sub
add
test
es
mov
xor
fnsave
repz
xchg
pusha
inc
ret
and
popa
sti
jge
pop
xor
mov
out
xchg
dec
js
fcoms
ss
adc
jae
mov
xor
sbb
ja
lods
lods
ret
dec
pop
fcom
test
sbb
sbb
fcmovbe
incb
or
mov
fwait
sub
xchg
push
mov
ficoml
aaa
incl
and
sahf
stos
outsb
in
mov
xchg
enter
ficoms
mov
mov
lea
rclb
and
inc
adc
xor
decb
cmpsl
pop
jne
push
xchg
mov
jbe
out
sbb
jns
and
xchg
push
lcall
je
pop
sub
enter
outsb
mov
mov
movsl
jne
out
push
jnp
adc
jle
sub
in
dec
aaa
pusha
jp
cmc
adc
xchg
jo
push
inc
dec
mov
jae
fisttps
xchg
cmp
mov
rclb
stos
in
jecxz
and
repnz
sbb
fdivrs
scas
mov
adc
mov
ret
ret
inc
pop
push
mov
arpl
pop
imul
rorl
scas
mov
jne
mov
xor
in
rcrb
test
lds
sub
shlb
jb
xchg
fucomi
rep
cld
adcl
inc
movsb
jge
arpl
sbb
iret
or
add
in
jl
dec
mov
cld
pop
xor
inc
stc
jo
jnp
stos
jo
das
insl
scas
push
incl
cmp
lds
adc
push
outsb
in
and
xchg
repz
push
fdivrl
in
jl
jno
sahf
sbb
sub
sti
ds
jne
dec
mov
stc
lahf
es
mov
test
mov
das
xor
jl
pop
movb
loopne
inc
pop
xorb
push
loope,pn
jp
fmull
insl
mov
adc
outsb
les
xlat
shlb
mov
cmpb
add
push
mov
pop
inc
and
stc
push
push
scas
lcall
outsb
les
pop
jbe
jbe
sbb
mov
loope
sahf
je
mov
sbbb
mov
jmp
mov
std
flds
adc
aam
cmp
mov
adc
inc
mov
cmp
nop
rorb
cmp
into
sbb
scas
cmc
or
inc
xor
mov
outsl
scas
add
loop
jns
stc
push
xchg
out
adc
imul
data16
js
lcall
mov
xor
in
lahf
push
xor
clc
mov
sti
lock
dec
gs
loopne
and
pop
mov
xchg
imul
repz
push
out
xchg
cmp
xchg
cmp
cmpsl
xor
mov
aad
loop
insl
xor
cs
out
nop
jnp
push
dec
jb
dec
inc
popa
jae
fnstenv
xchg
mov
jecxz
sub
mov
call
jne
pop
pop
call
push
movsl
dec
fidivl
adc
scas
cmp
pop
mov
mov
inc
ret
gs
pop
pop
outsb
jb
add
fisubl
and
shrl
dec
imulb
dec
cwtl
std
cmp
enter
in
mov
orb
idiv
pop
cld
mov
test
or
xor
mov
das
inc
ljmp
mov
fmuls
es
pop
je
sbb
fwait
dec
in
jbe
or
and
bnd
lods
pop
add
sub
cltd
enter
sub
mov
shrb
dec
cmp
mov
aas
fcoml
xchg
lahf
fstp
test
inc
xchg
lahf
cmp
popa
adc
push
stos
or
out
cmc
insl
xor
adc
cvtpi2ps
repz
lahf
imul
shlb
xchg
not
test
aad
xchg
adc
push
or
mov
pop
loop
push
inc
lea
push
add
ret
cmpsl
xor
add
mov
mov
addr16
push
cltd
cmp
insl
dec
cmp
dec
mov
dec
mov
xlat
mov
mov
out
dec
mov
jne
pop
mov
push
and
shrb
fstl
test
sub
ret
in
insl
jb
jp
imul
dec
ficomps
in
mov
inc
fistps
sub
jmp
xchg
inc
pop
push
xchg
jae
std
cli
push
dec
shr
popf
ret
xor
push
paddsb
and
cld
sbb
jp
imul
mov
push
notb
jmp
jnp
ret
mov
hlt
xor
andl
movsb
inc
adc
test
inc
pop
inc
xor
and
xchg
lret
test
pop
inc
xchg
pop
fimuls
lret
xchg
adc
rcl
fidivrl
lds
leave
push
lods
andl
jmp
jge
mov
sbb
ja
jg
xlat
push
call
jl
jmp
xor
and
mov
jo
scas
xor
inc
mov
push
in
dec
inc
notl
in
or
dec
enter
daa
or
jne
jno
and
jg
sub
movsl
push
out
scas
and
jp
lahf
inc
mov
push
sbb
add
pop
jg
bound
pushf
pop
in
dec
sarb
inc
dec
pop
mov
cli
pop
loope
dec
mov
sub
cmc
xor
daa
cmp
adc
decl
orb
fnstenv
les
mov
and
mov
pop
sub
dec
mov
lcall
bound
adc
sahf
pop
xchg
cmc
test
lea
fwait
clc
mov
les
fs
adc
cltd
ss
cmp
fmuls
std
imull
sbb
rorl
int
jae
stos
or
lds
cmpl
lea
sbb
sar
or
adc
inc
test
cmp
cmp
lods
out
daa
mov
xchg
in
movsl
inc
cli
dec
lahf
stc
xor
adc
lahf
int3
push
rorl
gs
push
loopne
and
lods
cmp
imul
out
sub
mov
adc
sub
sbb
lret
xlat
scas
addr16
sbb
dec
pushf
sbbb
jmp
ret
cmp
aad
add
nop
push
les
shll
inc
je
sbb
fcoms
je
hlt
xchg
adc
lea
lods
aas
hlt
cmp
push
dec
fcmovnu
pop
xchg
pop
pusha
mov
inc
fisttpl
inc
ficoms
stc
pushl
dec
jae
mov
push
and
gs
ja
jbe
imul
std
jecxz
js
cltd
std
insb
mov
icebp
mov
xchg
stos
orl
xor
mov
push
scas
lock
pop
das
and
lods
add
push
push
dec
aam
dec
imul
mov
nop
cmp
cmpsl
or
xor
leave
shrb
sub
movsl
and
sub
dec
rolb
xor
test
leave
mov
nop
pop
push
jl
or
add
fs
mov
mov
ljmp
jns
mov
jae
clc
in
push
out
pop
test
xchg
lcall
mov
add
cmpsl
add
or
xchg
cli
sti
test
daa
jbe
xor
movsb
sbb
cld
ret
sub
push
jmp
push
lea
lds
movsl
xor
xchg
lahf
or
fs
sub
mov
arpl
sub
mov
dec
lods
dec
xchg
inc
push
rorl
mov
mov
jno
dec
insl
pop
or
idiv
mov
fldl
bound
call
xchg
pushf
push
sbb
jp
sub
mov
cmp
mov
mov
sub
insb
lds
cmp
shrb
pusha
mov
and
cmp
sub
loop
xor
jae
pop
fcoms
or
imul
dec
add
stos
shll
sbb
out
adc
xor
scas
push
mov
lcall
jne
ret
jle
test
ljmp
dec
movsl
jp
inc
mov
sbb
hlt
pop
fcoms
mov
fistl
push
pop
jecxz
jmp
push
mov
sbb
dec
leave
leave
adc
movsb
in
xchg
jbe
add
jge
in
sbb
and
aaa
sahf
pop
fmull
lret
add
pop
jl
pop
clc
dec
fisubrl
in
or
scas
jo
mov
sub
push
aam
push
scas
and
inc
xchg
cmpsb
jnp
jns
repz
fwait
enter
daa
or
push
cmp
push
jno
xor
add
xchg
cmp
xchg
dec
cld
xor
ja
rcrb
jmp
fisubrl
pop
repnz
adc
fstl
stc
js
pop
ja
push
xor
lret
fsubl
icebp
sub
push
mov
dec
fistl
icebp
mov
mov
sbb
pop
mov
shrb
push
mov
add
sub
pop
je
loopne
andl
push
mov
pop
pop
test
adc
bound
imul
loopne
fs
js
adc
cmc
ss
push
cmp
add
inc
lret
and
lahf
arpl
sahf
push
int
push
test
into
fidivs
cmc
lcall
outsl
insb
mov
push
stc
shl
adc
jns
add
outsl
mov
lods
int
inc
mov
rorl
out
das
and
jg
or
mov
sbb
dec
mov
mov
loopne
adc
pop
int3
out
bound
add
imul
cmp
arpl
jle
fnstsw
add
rcll
lcall
jmp
pop
dec
cs
movsb
aad
jge
nop
xor
push
inc
xchg
pop
fstps
jno
jecxz
test
sbb
bound
push
pop
dec
cmp
dec
mov
imul
enter
aaa
lea
inc
out
stc
push
mov
cwtl
les
inc
enter
es
and
lcall
imulb
xchg
call
mov
xchg
cmp
andl
sbb
fidivl
aam
fildll
add
and
mov
xchg
adc
ret
dec
clc
dec
es
fcmovu
dec
fcmove
pop
cmpsl
or
mov
mov
jmp
mov
cmc
and
sti
das
pop
je
repz
sub
nop
mov
and
inc
frstor
mov
repz
lods
mov
leave
movsb
aaa
popa
inc
lods
pop
pop
rcrl
stos
out
aas
out
mov
lods
movmskps
sub
add
shll
mov
mov
mov
or
loop
test
or
xchg
fsubr
roll
adc
or
and
fwait
mov
push
dec
add
loopne
or
pop
stos
or
aaa
pop
push
or
cmpsb
jbe
mov
sahf
xchg
jp
shlb
push
jo
pop
jecxz
jae
int
jb
mov
into
enter
jnp
push
leave
add
jle
xlat
mov
scas
mov
in
testb
jns
mov
xchg
addr16
adcl
std
jmp
pop
or
xchg
jp
call
iret
insb
xor
cmpsb
mov
loopne
jl
add
mov
add
jmp
xchg
outsb
movsb
mov
in
add
push
rcrb
stc
mov
lea
andb
jge
sbb
cmp
ret
push
scas
mov
adc
popa
arpl
lahf
sub
iret
fbstp
ret
mov
mov
pop
jecxz
or
push
inc
push
inc
add
and
inc
xor
fs
jns
inc
int3
movsl
sbb
pop
movsb
in
ficoms
lds
adcl
pop
cmp
inc
and
ja
or
push
xorl
sti
mov
mov
pop
aaa
pop
imul
add
outsl
lea
mov
dec
jge
push
jmp
sbb
xorb
addss
sti
mov
cmp
cli
push
jp
roll
data16
pop
scas
in
fidivl
mov
cmp
mov
sub
mov
mov
sbb
jno
mov
pop
jg
and
push
jae
andl
test
shll
arpl
mov
push
gs
or
jo
add
fcmovnu
or
mov
outsb
in
push
mov
mov
or
mov
sbb
sub
pop
push
mov
ja
jg
imul
push
adc
repz
lcall
mov
movb
cmpsl
sbb
insl
pop
and
xchg
mov
xchg
sub
mov
ja
cmp
shlb
lret
lods
shll
cmpsb
cmp
jg
or
sbb
cmc
popa
popa
ret
fbstp
dec
sbb
loop
ss
sbb
adc
sub
pop
lret
scas
data16
sub
repnz
xchg
addr16
cmp
push
xor
xchg
in
in
and
std
outsl
cmp
shl
adcb
pop
jmp
lret
adc
jno,pt
aad
dec
les
pop
repz
xor
mov
adc
inc
add
sub
or
mov
lods
push
cmp
clc
add
aad
pop
js
or
sub
je
inc
lcall
je
loope
jecxz
int
xchg
adc
lea
pop
call
repnz
add
and
ret
cmp
pop
cmpsb
mov
inc
jmp
outsl
imul
xchg
ja
dec
jl
push
and
in
xchg
rcll
inc
lods
std
xor
cwtl
pcmpeqw
mov
cmpl
rorb
mov
test
jmp
lds
aam
sub
jb
rclb
insl
into
or
dec
aad
cmpsl
or
movsb
mov
ja
dec
lods
mov
mov
mov
loop
xchg
mov
xchg
jle
shlb
jns
sub
push
xorb
popf
jp
dec
int
clc
cs
ss
pop
sub
ljmp
cmc
pop
loope
mov
cmp
xchg
hlt
es
push
mov
mov
add
or
xor
cmp
xchg
lods
jno
sbb
lahf
xchg
or
sbb
leave
xor
or
icebp
sbbb
push
loopne
imul
das
popa
and
xor
in
or
xchg
leave
xor
pop
mov
sahf
lea
jns
dec
xchg
cmp
inc
addb
mov
mov
addr16
inc
popa
mov
out
mov
mov
rcll
xor
or
sub
mov
packuswb
cld
jp
iret
jmp
int
mov
fwait
adc
jnp
shll
in
add
pusha
out
ja
jp
jne
mov
mov
jmp
push
xchg
lods
mov
cmp
push
push
int3
rol
mov
repz
sub
imul
or
es
adc
loopne
jbe,pt
ret
xchg
pop
repnz
hlt
adc
push
arpl
fnstcw
inc
sbb
mov
fwait
mov
scas
ficompl
sub
nop
pop
jbe
shll
add
shlb
cmpb
and
movsb
add
push
mov
xchg
dec
jge
imulb
aaa
sbb
adc
mov
inc
add
mov
dec
mov
lods
mov
frstor
scas
shlb
and
je
push
inc
pop
addl
add
in
rcll
rcr
lods
daa
or
cmp
pop
imulb
daa
and
popa
pop
jl
xchg
in
sub
and
pushf
push
push
xchg
aaa
mov
cs
add
dec
add
iret
ret
xchg
arpl
test
dec
xlat
pop
jl
lcall
sahf
pop
fdivl
imul
adc
nop
testl
or
mov
mov
fmull
ds
movsb
int
mov
pop
pop
inc
pop
jb
sub
xchg
mov
sbb
inc
push
sahf
add
leave
test
xchg
jg
sbbb
or
hlt
fs
iret
xchg
test
mov
jnp
loope
jmp
repz
into
ror
ret
int3
movsb
or
ljmp
sub
shll
xchg
into
cmp
jl
loop
xchg
cs
adc
fsubrs
retw
lods
fwait
push
mov
jmp
out
iret
mov
in
push
xor
fsubrs
push
cwtl
fdivr
lods
out
cmp
xchg
xchg
mov
scas
pop
or
cmpsb
cmp
imul
xlat
mov
xchg
je
push
int3
push
stos
cmp
mov
sub
sub
pushf
xorl
and
dec
movsb
dec
nop
out
push
dec
out
js
inc
lods
movsl
lods
jecxz
xor
fimull
pop
push
jno
sbbl
enter
out
and
push
cmp
push
inc
inc
jo
mov
lcall
call
test
dec
cs
shll
divb
push
std
fmuls
fwait
mov
mov
mov
push
vdivps
lret
outsl
inc
jle
mov
aas
daa
lock
mov
mov
sub
es
mov
insl
mov
clc
dec
shrb
ss
dec
jns
lods
or
inc
mov
and
adc
mov
mov
jbe
cli
add
test
dec
mov
sbb
push
lds
cmp
imul
add
popa
outsb
sub
stos
lds
das
out
addl
sbb
cmpsb
cmp
rclb
pop
xor
adc
xchg
pop
mov
xchg
insl
sbb
mov
imul
out
fwait
push
iret
sbbl
jg
add
push
mov
xor
lret
aam
icebp
aam
lret
xchg
sbb
mov
adc
mov
int3
or
dec
xchg
push
inc
sbb
mov
sub
iret
dec
push
stc
cmp
mov
lea
cltd
out
in
bound
adc
dec
ficoml
hlt
data16
and
jae
scas
in
mov
jp
push
mov
cld
call
jnp
lods
jge
dec
jb
in
in
pop
pusha
orl
insb
xchg
dec
js
popa
dec
inc
test
out
push
xor
cwtl
xchg
jmp
stos
sub
mov
push
lret
sbb
dec
jnp
mov
scas
lods
push
insl
in
and
push
dec
sbb
popf
jl
ret
dec
pop
sub
cmpsb
hlt
pop
out
arpl
jecxz
inc
sbb
xchg
or
push
xchg
inc
inc
xor
dec
fimull
aas
cwtl
int3
jnp
fistpl
inc
neg
lcall
sarb
mov
adc
or
and
lea
push
or
jbe
push
or
jge
aam
sbb
adc
fisttpl
rorl
mov
mov
jl
mov
mov
scas
mov
test
pop
shrl
and
mov
fdivrs
mov
cmpsb
add
imul
int
jmp
or
in
pop
into
jno
and
sub
cltd
movsl
cmp
adc
movsl
insb
lahf
imul
rcrl
test
out
pushl
sahf
add
cmpsl
cli
pop
mov
js
outsl
pop
mov
out
and
jns
mov
popa
data16
sub
cmp
adc
imul
sbb
cmp
pop
xchg
adc
adc
dec
cwtl
xor
mov
sub
aad
roll
and
lcall
fwait
mov
adc
cs
sahf
mov
push
mov
jg
cmpl
fs
mov
popf
ss
daa
or
mov
fwait
lret
mov
fs
ljmp
mov
into
xchg
xchg
xor
roll
or
xchg
loop
or
fcoml
push
in
ja
push
inc
lods
subb
sub
jne
call
cmp
xor
stos
push
in
mov
and
pop
and
loopne
or
pop
sub
adc
imul
and
repz
mov
rep
jnp
mov
rcl
stos
call
clc
mov
sub
nop
jmp
stos
or
sub
jmp
nop
ret
dec
dec
cmpl
inc
ficoms
add
adc
popf
fcoml
shll
push
lock
jae
sarl
clc
fistpl
jg
inc
testl
shlb
jb
dec
push
xor
ret
mov
mov
xor
cs
jg
adc
mov
cwtl
pusha
sub
cmpsl
into
lret
fidivrs
mov
push
movsb
lock
adc
mov
mov
push
cmc
pop
loop
cli
leave
daa
es
jp
insl
pushf
adc
dec
lret
cmpsl
or
pop
icebp
and
andl
and
xchg
inc
cmc
pop
sarl
int
pop
sub
cli
cmpsl
mov
jnp
push
mov
scas
fstpl
push
xchg
fidivl
push
popa
test
push
pop
aaa
mov
out
in
stos
xchg
addb
pop
lock
add
ljmp
aaa
inc
fsubs
mov
lock
adc
fistpl
je
iret
rorl
and
or
inc
je
push
jne
dec
add
xor
cmp
add
xor
add
push
push
xchg
xchg
addr16
mov
fmull
adc
aaa
ja
in
dec
jns
push
inc
mov
adc
mov
jle
jne
pop
pop
mov
fwait
leave
out
js
inc
bound
or
enter
mov
lock
or
sbbb
xor
aam
jno
sti
jnp
dec
xor
icebp
in
cmp
sbb
outsl
fistpll
cwtl
push
jmp
popl
fcoml
sbb
push
popf
xchg
iret
mov
dec
lea
stos
lahf
fisubs
imul
orb
imul
and
notl
xor
iret
cld
xchg
ret
or
hlt
test
xor
inc
pop
clc
pop
or
xchg
sbb
inc
mov
scas
fcmovb
cmp
jle
and
pop
xor
lds
imul
mov
fs
push
leave
movsl
sbb
push
pop
xchg
lret
jbe
icebp
lock
xchg
fistps
jecxz
adc
lcall
add
bound
push
xchg
mov
xchg
jo
jno
scas
nop
inc
and
aaa
push
fcmovnu
sub
ret
cmpsb
xchg
dec
in
popl
enter
or
or
invd
sub
fimuls
fisubrl
and
in
jns
loopne
dec
push
aaa
mov
test
repnz
xor
fwait
jmp
fbld
pop
cli
sub
loope
mov
or
sub
pop
adc
inc
dec
push
xor
bound
dec
movsb
ss
aaa
out
pop
mov
push
rcrb
int
scas
fldcw
push
popf
xor
jo
into
lcall
cmp
nop
test
cmp
out
mov
test
fsts
mov
mov
adc
cs
cmp
icebp
mov
ljmp
mov
xlat
or
cmp
mov
jb
dec
jmp
inc
loop
pop
stc
pushf
addr16
mov
push
jbe
enterw
imul
out
jg
cli
dec
in
xor
lahf
mov
sti
or
xchg
incb
out
loopne
fisubrl
dec
call
cmp
mov
rcl
shlb
xchg
cli
dec
sbb
icebp
icebp
scas
xlat
jmp
xor
pushf
xlat
rcl
pop
cmovnp
pop
pushf
aad
pop
adc
lods
lea
fnstcw
aad
dec
sub
mov
lock
scas
dec
fwait
call
outsl
ljmp
sub
inc
dec
pop
lds
pop
aad
inc
jle
mov
aas
adc
pop
jb
mov
push
and
lods
in
add
sar
push
fcompl
jns
add
addl
ja
mov
iret
pop
lock
ret
cmpb
mov
ljmp
ret
mov
es
fstpl
dec
loope
cmpsl
pop
and
mov
cld
push
dec
lods
loope
mov
mov
negl
mov
lock
shlb
fldl
and
dec
mov
ffree
hlt
clc
fistpll
ljmp
pop
pop
loop
inc
stos
mov
inc
jo
leave
in
notl
scas
pop
pcmpgtb
add
ja
cltd
jmp
ret
arpl
xchg
aas
jecxz
call
push
xchg
sarl
pop
lds
or
push
and
je
scas
push
sbb
mov
fldt
wbinvd
fists
cmc
xchg
mov
jg
stos
sbb
mov
iret
add
ljmp
insl
add
in
ds
fdivr
mov
lcall
out
push
mov
jns
outsb
loopne
xchg
push
mov
sub
movsl
jmp
dec
jp
mov
ljmp
lods
lds
mov
in
pusha
mov
mov
xchg
xor
lret
mov
jae
inc
mov
fcompl
mov
mov
clc
stos
adc
rcrb
ljmp
sti
push
mov
or
ror
xchg
lods
ret
add
movb
hlt
mov
jo
and
gs
or
lods
inc
das
push
rcr
jae
stos
xchg
aad
mov
push
pop
add
fsubp
pop
jge
shll
mov
mov
enter
mov
out
pushf
jbe
dec
fidivrs
cmp
jecxz
pop
les
or
xor
jl
testb
pop
pop
push
jne
and
out
xchg
mov
and
aas
cmp
xchg
push
cmpsb
and
cmpsb
or
jp
jbe
ret
sub
cmp
jb
call
clc
mov
outsb
jae
ds
cli
jl
jp
jg
jle
rcrl
or
dec
add
daa
push
xor
dec
lods
dec
mov
js
mov
pop
cmp
push
mov
mov
sub
out
das
adc
and
or
addb
pop
sbb
loop
and
insl
push
ret
inc
outsl
int
sbb
sub
pushf
inc
pop
out
cmp
push
mov
sbb
mov
sbb
adc
sti
mov
enter
mov
cmpsb
cmp
adc
rcll
ss
test
cmp
lods
jo
imull
push
iret
lret
mov
cmp
lods
stos
or
scas
into
dec
xor
movsl
adc
outsl
mov
dec
stc
push
push
movsl
adc
pop
sub
dec
pop
aad
push
adc
and
out
popf
test
xor
inc
or
movsl
inc
shll
dec
ret
mov
push
adc
push
imul
clc
jns
mov
lcall
cmp
lods
sub
push
pop
mov
add
jmp
ss
insl
aad
int3
out
js
mov
inc
out
xor
mov
mov
jecxz
add
mov
adc
pop
arpl
out
cwtl
ret
pop
int
pop
adc
outsb
push
fcomi
mov
xor
pop
inc
add
xchg
or
mov
jle
loope
mov
pop
loope
and
ljmp
std
call
xchg
cwtl
sti
push
mov
mov
push
cld
add
mov
aas
mov
lods
mov
das
pop
lods
test
adc
addr16
mov
rol
ljmp
insl
push
fisttpl
pop
hlt
cmpsl
push
and
icebp
shll
lods
dec
mov
mov
mov
cmpsl
mov
jnp
subb
and
test
or
push
push
cld
and
ljmp
xchg
pop
push
shr
loopne
popa
mov
sub
test
out
stos
adc
es
jb
sub
cltd
and
test
xchg
and
dec
dec
ret
dec
test
xor
xchg
xor
mov
orl
or
push
mov
cs
addr16
fnstenv
aam
or
cmpsl
in
out
push
xchg
add
rclb
mov
mov
mov
mov
dec
pop
xchg
repz
fisubrs
mov
push
jle
mov
in
mov
icebp
jg
cmp
aad
and
ja
xchg
pop
push
mov
sub
mov
mov
dec
mov
adc
insb
inc
incb
jle
movsl
in
add
push
sbb
xchg
or
shr
jbe
inc
movsl
insl
hlt
jae
cmp
negl
dec
push
call
imul
and
adc
scas
mov
stos
rclb
sbb
ret
pusha
pop
into
andl
push
cltd
out
and
xchg
cs
scas
rcrl
sub
aaa
int3
cmp
sub
xchg
or
sbbl
lds
push
rorb
and
or
leave
xchg
cmc
movsb
cs
push
stc
xchg
fidivl
and
jge
enter
ss
sbb
or
add
cmp
jl
pop
enter
into
push
pop
mov
jno
dec
sarb
dec
es
and
push
push
cmp
bound
inc
loopne
sbb
pop
ret
mov
xor
cmp
push
xor
in
cmp
cmp
pusha
and
inc
dec
lahf
push
mov
push
sub
or
or
or
outsl
lret
decb
push
pop
js
push
mov
loope
add
bound
sub
mov
mov
cld
repnz
repnz
insl
adcb
mov
loope
and
addr16
loop
int
data16
sub
mov
outsb
or
mov
cmp
jge
mov
lock
mov
push
sub
hlt
gs
lret
mov
outsb
cmp
xor
adc
xchg
mov
jmp
jge
addr16
mul
adc
lret
add
sub
out
mov
or
xor
dec
xor
push
jecxz
cmpsb
xor
loop
push
stc
or
adc
xchg
data16
enter
mov
sub
in
pop
cli
mov
ret
negl
cld
sub
push
ret
xchg
mov
mov
ficoml
repnz
imul
adc
xchg
sbbb
addr16
jnp
addr16
sub
sub
and
pop
pushf
sub
and
cs
pop
mov
mov
cmpsl
dec
push
testl
pop
in
je
out
jecxz
jge
cmpsb
je
lea
call
insl
lret
loopne
sbbb
fdivrs
dec
xor
lods
int
pop
aad
inc
inc
mov
inc
fwait
push
ljmp
lock
dec
iret
repnz
and
jl
shll
hlt
dec
std
je
scas
cwtl
mov
adc
jne
inc
subl
mov
iret
mov
out
cmp
divb
mov
mov
pop
jns
aam
lahf
rol
decl
dec
in
push
push
mov
mov
movsl
push
fs
stos
mov
out
mov
mov
push
and
inc
inc
pop
sbb
sub
rcl
mov
xor
xor
adc
outsb
xchg
xchg
fs
jnp
cld
popa
lret
pop
cmp
mov
xchg
push
data16
push
ljmp
add
cs
cltd
push
cmp
andl
jge
dec
mov
lods
test
xchg
or
lods
les
rorl
arpl
sar
sahf
push
pop
mov
add
subb
lcall
rclb
xchg
orb
call
imul
ds
fstpl
fs
inc
jne
das
mov
out
lods
dec
mov
aas
loop
sub
scas
mulb
pop
int3
jns
and
sub
out
or
stos
inc
jb
fwait
xor
lods
jp
mov
fs
insb
mov
push
jnp
mov
sbb
pusha
in
adc
mov
jmp
mov
xor
jnp
push
inc
popf
sti
aam
mov
pop
push
lret
stos
clc
mov
and
push
jg
pop
ret
push
clc
addr16
mov
xor
ret
push
pop
add
call
dec
inc
sub
mov
inc
sub
and
int3
daa
sbb
pop
mov
xlat
fld
iret
dec
iret
shrb
push
repnz
sbb
adc
js
jbe
gs
dec
aaa
mov
aaa
xlat
mov
or
scas
add
inc
jl
lcall
cmp
xor
movsb
and
popf
js
insl
fldcw
cmp
mov
outsl
cmp
cmpsb
adc
sub
mov
js
cmp
lods
sub
in
ds
jae
movsl
mov
sahf
lahf
cmp
jb
test
adc
xor
movsl
mov
pop
and
inc
cmp
mov
jp
mov
add
aad
jg
or
jl
outsb
aas
jbe
adc
xlat
jecxz
push
inc
pop
andb
dec
sbb
iret
mov
xor
mov
leave
cmc
bswap
jmp
push
and
in
pop
add
cmp
mov
int3
push
sahf
das
mov
test
jbe
orb
imul
dec
and
fs
jl
ss
sbb
and
sbb
rol
mov
or
js
into
adc
adc
or
and
pop
cmpsl
in
test
ljmp
add
lods
push
stos
shrl
sbb
out
mov
xor
in
loopnew
sti
pop
mov
int
stos
cmp
pop
movsl
dec
mov
imul
je
xchg
inc
sub
add
xlat
cmpsb
test
mov
cmp
pushf
fadds
jmp
shlb
cs
fisubrl
dec
leave
lret
or
fldenvs
shll
je
addr16
jecxz
cmp
test
lahf
xchg
call
in
adcl
dec
sbb
rol
pop
js
jmp
inc
mov
inc
aas
icebp
movsb
push
jb
xlat
lods
dec
inc
test
and
popa
mov
out
add
testb
xchg
cwtl
jno
mov
mov
push
addl
mov
lcall
mov
xchg
inc
lock
popl
sbb
adc
mov
pusha
ret
ss
jns
sarb
dec
mov
cwtl
cmpsl
add
sbb
andl
gs
aam
call
mov
dec
test
or
jge
jae
cwtl
ret
shll
fnstsw
and
nop
push
push
ljmp
in
jecxz
push
stos
jo
in
out
jo
jge
sahf
cmp
push
lds
jno
push
xchg
cltd
mov
xchg
mov
lret
dec
sbb
andb
fmull
sbb
pop
shll
or
sub
fwait
add
addl
cld
in
mov
mov
inc
pop
shl
adcl
xor
je
hlt
mov
add
push
dec
inc
clc
popl
push
push
mov
push
int
dec
test
lods
jne
std
sbb
mov
mov
dec
push
jns
je
xchg
hlt
arpl
cli
aaa
sbb
xchg
cmpsb
scas
sub
xchg
cmp
or
mov
xlat
mov
xor
imul
in
push
shll
xor
xor
xchg
scas
lret
shr
mov
in
xchg
std
les
and
sub
push
inc
push
lahf
stos
imul
and
stos
sbb
insl
mov
dec
push
sbb
rcrb
adc
jmp
pop
cmp
ljmp
adc
or
jge
lahf
inc
lods
cs
fimull
sub
adc
in
pushf
ret
xorb
ret
mov
mov
mov
add
andl
push
xchg
mov
push
jge
mov
iret
xor
or
xchg
add
mov
mov
push
push
push
xchg
xor
incl
adc
cmp
lea
jecxz
pop
stos
cmpsb
xchg
daa
jl
sub
stos
enter
daa
add
xor
jmp
movsl
jno
sub
sub
cmp
cmp
fistpll
popfw
andb
jecxz
lahf
pop
rcll
sbbl
test
push
cli
add
test
and
mov
pop
idivb
push
jne
loope
or
fdivrl
daa
cli
adc
mov
mov
mov
js
cmp
dec
sbb
test
mov
faddl
and
jl
int
lods
jb
cmp
inc
pop
insb
cmp
push
nop
pushf
daa
mov
jnp
sbb
push
jge
shl
xlat
test
fldl
or
mov
jae
fs
insl
push
adc
aaa
test
push
iret
inc
cmp
mull
lretw
mov
push
push
test
or
inc
pop
cmc
rol
mov
pushf
outsl
fs
mov
inc
mov
stc
js
pop
adc
xlat
xchg
add
jbe
aam
mov
adc
mov
cli
pop
xchg
xorb
fbld
shrb
sti
leave
insb
decb
sahf
mov
mov
mov
push
in
pop
les
xchg
adc
dec
data16
rolb
xchg
push
xor
sbb
mov
sub
inc
pusha
pushf
add
jmp
inc
stos
cs
jae
repz
nop
or
xchg
dec
sub
mov
fsts
mov
jnp
mov
sti
cmp
lea
out
call
imul
xchg
sbb
sbb
inc
roll
aas
nop
stc
jmp
dec
mov
fwait
test
ds
xor
std
ret
cwtl
sub
pop
mov
js
mov
fiadds
pusha
ret
or
out
mov
mov
mov
sahf
inc
lock
sti
call
mov
insb
dec
aam
sbb
vunpckhps
push
out
sub
inc
push
dec
mov
cmc
cmpsl
add
movsl
mov
pop
mov
lods
lea
pop
mov
adc
pop
pop
insb
ds
shr
subl
nop
pop
jae
push
test
fstpl
mov
lret
push
aam
adc
inc
popa
popa
clc
add
add
sarl
or
mov
scas
je
inc
mov
cltd
lds
mov
int
repz
test
inc
xchg
or
aam
arpl
cmp
movsb
adcl
mov
out
xor
mov
or
pop
bound
mov
push
mov
mov
testl
mov
mov
mov
dec
lcall
and
jecxz
and
shll
xor
imul
adc
adc
sub
xchg
shll
jp
shl
mov
outsl
test
mov
jno
push
fildl
in
xchg
lods
pusha
and
sbb
in
lcall
dec
cmp
shll
jb
call
cmp
test
push
stos
fisubrs
sub
ficomps
pop
imul
inc
scas
int3
push
mov
in
inc
adc
cli
iret
xlat
divb
pop
jae
jbe
and
arpl
xchg
push
sub
insb
fidivrl
loope
xchg
xor
push
pop
sbb
and
insb
and
rcr
xchg
mov
add
clc
mov
push
out
jge
call
rorb
push
pop
push
or
xchg
add
mov
push
add
jmp
jo
stc
adc
xchg
xchg
cmp
rclb
shrb
inc
lea
cmpsb
push
adc
in
adc
arpl
add
test
sub
movsl
sbb
sub
mov
fwait
and
push
sbbb
neg
test
sub
mov
mov
mov
js
dec
cld
pop
xor
js
loope
dec
jne
arpl
sub
add
scas
sbb
lea
adc
dec
push
mov
popa
xlat
push
mov
xlat
xor
cmpsl
dec
clts
iret
ja
int
cmpsb
sub
xchg
loope
int3
aas
es
out
sub
fdivr
cmp
dec
xor
jne
jbe
fistps
addb
jg
shrl
mov
xchg
shlb
pop
ss
sbb
loopne
jecxz
cwtl
sti
push
mull
add
shr
inc
cmp
sbb
or
jb
into
loop
adc
sub
xlat
jb
stc
das
popa
data16
std
jae
shll
addr16
leave
push
lods
in
push
mov
jne
out
cmp
pop
xor
mov
cmp
popf
inc
xor
jb
mov
sbb
adc
out
imul
decl
xchg
leave
stos
cwtl
sbb
sbb
xlat
and
sub
inc
xchg
pushf
sbb
jle,pn
pushf
aad
jns
nop
in
fisttpll
pop
or
xor
scas
and
lea
mov
ljmp
adc
js
dec
repz
pop
int
inc
and
sbb
das
push
fnstenv
inc
icebp
dec
xor
inc
and
sub
rorl
into
fwait
std
imul
mov
out
mov
pop
xorl
lret
js
adc
mov
or
lock
jl
das
fistl
gs
mov
inc
ret
push
cltd
adc
insl
push
xchg
std
dec
lods
cld
cltd
cmpsl
add
mov
das
imul
mov
sbb
fisubs
aaa
repnz
sarb
xchg
fiaddl
push
mov
sbb
stos
clc
push
out
bound
aam
loop
psrlq
stos
dec
adc
fildl
xchg
sub
xlat
push
jnp
inc
push
jl
push
inc
bound
stc
xor
mov
rolb
dec
jmp
fs
and
xchg
pop
sbb
adc
dec
xor
pop
cmp
dec
add
shl
or
testb
or
xor
in
subl
mov
jbe
xchg
ja
xchg
inc
cmp
push
xor
cmp
cmpsb
push
jne
cmpsl
inc
mov
xchg
out
mov
dec
bound
lds
or
add
mov
cmp
cwtl
cmp
pusha
jo
or
cmp
pop
aam
test
and
mov
adc
mov
fwait
das
fbstp
je
push
popf
shr
mov
je
xor
scas
push
stos
xchg
lcall
xor
push
int
push
stc
adc
cmc
mov
sbb
adc
imul
adc
pop
pop
pop
adc
jae
sbb
mov
loopne
hlt
imul
inc
xor
test
jae
jl
stos
stos
inc
push
xchg
mov
int3
call
mov
fimuls
mov
lds
sar
sti
mov
push
mov
cmp
ret
lret
jbe
in
adc
sbb
cmp
adc
sbb
dec
sbb
std
jl
inc
dec
xor
mov
in
clc
xor
mov
push
scas
lret
and
stos
clc
cmp
xchg
or
icebp
inc
sbb
in
cltd
je
in
stc
insl
cltd
enter
daa
add
cmp
int3
jno
nop
shrb
jecxz
cmp
int3
cmpl
popf
fldl
and
add
test
out
fiaddl
sub
inc
sub
jnp
mov
lcall
pop
je
lcall
cmpsl
sbb
push
and
aam
push
jnp
shrb
lret
and
pusha
inc
cmp
mov
daa
dec
and
out
int
test
xor
pop
push
cmc
lcall
xchg
mov
push
xlat
sbb
or
test
test
inc
out
add
in
inc
push
fs
xor
adc
lcall
aad
fcoms
in
mul
inc
jmp
movsb
leave
mov
test
stc
cmp
push
xchg
or
into
mov
shlb
outsl
and
lahf
loop
fs
out
inc
adc
jbe
add
outsb
data16
pop
lods
rorl
mov
imul
mov
jb
test
push
sti
and
and
push
dec
ds
bound
adc
jb
imul
insl
xchg
mov
push
cmp
movsb
xlat
arpl
mov
flds
jmp
jp
loope,pn
rcl
sbb
repnz
out
in
inc
inc
lods
neg
je
cwtl
jecxz
push
pop
mov
jg
sbb
call
imul
sub
mov
loop
xchg
pop
popa
fisttpl
test
mov
aas
into
scas
adc
lds
and
or
testb
adc
xchg
repz
orl
xor
out
xor
xor
repnz
pusha
das
mov
mov
mov
and
ret
jecxz
push
insl
in
ret
int3
dec
test
cmpsl
add
add
push
inc
lods
lods
arpl
jns
mov
add
cmp
mov
movsl
pop
stos
je
rclb
mov
test
xchg
cmp
and
sbb
xchg
xchg
ljmp
pop
pop
in
jbe
cmp
outsb
xchg
xchg
jae
mov
push
int3
rorl
sahf
cmc
mov
push
rcrl
scas
jmp
mov
imul
xchg
jecxz
shrl
add
jae
fwait
mov
push
ljmp
add
lock
xor
adc
test
cmp
nop
xor
xchg
xor
adc
push
dec
inc
rcll
xor
xchg
xchg
fsubs
mov
sub
out
xchg
scas
pusha
bound
adc
nop
cmpsb
out
xor
xchg
lea
xchg
inc
mov
or
inc
sub
jl
add
or
pusha
pop
outsb
pop
fists
push
cmp
jg
dec
inc
fsubrl
jae
sbb
outsb
mov
cmpl
pop
pop
stos
les
and
jns
das
cmpsb
shrb
mov
adcb
dec
adc
aas
jmp
into
sbb
pop
loope
mov
mov
push
arpl
push
dec
or
out
stc
fadds
mov
fisubl
jno
int3
sar
std
pop
jp
xchg
fidivs
dec
mov
adc
mov
repnz
into
jb
in
jl
test
ret
fsts
sbb
add
aaa
roll
cmp
pop
jl
rorl
test
hlt
xor
adc
jbe
test
add
push
push
imul
dec
scas
in
loopne
in
movsl
pop
mov
add
jno
js
sub
hlt
ret
divl
ds
rorl
movsb
mov
negb
cld
dec
addr16
aas
rcrb
ds
test
fbld
subl
sub
fdivrl
and
outsb
lret
rep
adc
inc
outsl
xchg
int
push
xorb
sbb
addr16
mov
lret
lds
js
aad
sbb
test
sub
frstor
xor
or
fcom
mov
xor
mov
fmuls
jg
push
sbb
fs
cmp
fisttps
adc
fmuls
mov
pop
lret
xchg
rcrl
cmp
and
fstpt
into
lahf
in
cmp
daa
in
cltd
xor
mov
iret
loop
mov
popf
ficompl
mov
cli
jge
pop
mov
cmp
loopne
push
cli
mov
push
xor
dec
and
adc
or
rcll
inc
gs
iret
mov
pop
and
or
jbe
repz
sahf
cmp
stos
inc
sub
inc
mov
test
test
cs
test
enter
lcall
inc
pop
pop
frndint
pop
std
je
push
push
jecxz
rolb
lea
daa
call
call
int3
test
dec
leave
or
adc
xlat
inc
das
fsubr
inc
and
mov
jl
dec
and
xchg
and
inc
shrl
into
popa
testb
or
mov
add
andl
into
xor
stc
adc
das
cltd
movsl
xchg
mov
jmp
cmpsb
aam
inc
in
jb
fidivrs
loop
aam
xor
inc
jp
add
mov
sbb
cmp
lods
into
sub
mov
pusha
repnz
insl
and
pop
leave
adc
aas
sub
dec
test
lret
std
adc
push
mov
jl
clc
jl
cmpsl
xchg
rolb
jo
cmp
ficomps
cld
cmc
out
xchg
mov
pop
inc
paddw
pop
cltd
push
jno
jnp
mov
push
or
mov
adc
sbb
mov
shrb
mov
jecxz
add
or
or
enter
and
in
inc
cmp
orb
pop
in
add
ja
xor
dec
adc
add
mov
adc
dec
adc
jl
or
inc
mov
aad
out
jo
sub
adc
jns
pop
xchg
and
xorl
xchg
out
pushf
push
sub
adcb
addr16
shrb
jp
subl
psraw
or
enter
enter
mov
pusha
hlt
push
mov
xchg
cli
jae,pt
jbe
mov
out
pop
jae
lods
xchg
push
xor
mov
rcll
stos
aaa
stos
shlb
and
fimull
stc
imul
inc
scas
cmc
add
test
or
add
hlt
imul
pop
sbb
hlt
add
arpl
sbb
xor
imul
add
pop
mov
xchg
ss
test
mov
fcmovnb
das
mov
mov
cld
sub
pop
out
movsb
jo
pop
push
shl
lods
jbe
mov
jge
mov
xchg
aaa
xchg
std
out
cs
push
add
push
jl
xor
push
stos
and
lret
aam
scas
mov
mov
cmp
push
push
xor
and
bound
lahf
xchg
add
fwait
dec
mov
lea
jno
test
ficompl
ds
movsl
stos
add
rcrl
roll
mov
dec
stos
pop
xor
sub
add
pop
call
mov
pop
repnz
out
loope
shr
fsubl
sub
icebp
outsb
jne,pn
adc
push
les
sub
popl
push
cmpsb
push
mov
rorl
fsubs
ljmp
leave
mov
push
sbb
cltd
and
aad
add
je
dec
adcb
loop
jno
rorl
jae
jmp
and
jecxz
leave
jne
mull
dec
lret
test
es
mov
sub
orb
out
insl
sub
and
loopne
scas
loop
jecxz
stc
push
or
out
add
test
lods
mov
adc
cli
jecxz
cmp
in
jle
cmp
mov
lcall
loopne
das
mov
cltd
out
in
lahf
imul
and
cmp
xchg
adc
cld
sbb
leave
cmp
xlat
loope
cld
sub
out
mov
das
push
xchg
jmp
mov
sub
pmullw
dec
movsb
orb
imul
fnstenv
out
bound
dec
jecxz
loop
mov
dec
mov
addr16
jns
mov
mov
loop
mov
fildl
ds
cmpsl
rclb
inc
cmp
je
jb
push
adc
leave
jnp
jp
cmp
sarb
lea
jno
jp
cmp
scas
lret
mov
lods
int
sbb
das
js
stos
mov
mov
cld
cmc
ret
add
nop
insl
mov
leave
adc
mov
mov
adc
out
mov
das
jb,pn
or
pop
call
xchg
mov
test
pop
mov
int3
enter
mov
sti
lea
mov
mov
ljmp
pop
pop
cmp
stos
sbb
dec
out
pop
jno
xchg
add
pop
push
or
push
subps
nop
xor
mov
pushf
and
xchg
pop
cmp
xor
xchg
mov
rcll
lock
jae
fwait
in
mov
push
xor
xor
and
or
xor
pop
xor
xchg
cmp
in
mov
out
ret
outsb
xchg
mov
cmpsl
or
rorl
add
roll
imul
mov
pop
sbb
xchg
push
mov
xchg
inc
out
dec
cltd
fiaddl
mov
movsb
adcb
out
out
jl
sub
jge
lock
dec
std
es
or
or
int
fimull
jle
jns
in
addl
repnz
insb
ficoms
insl
adc
jae
sbbb
hlt
bound
in
mov
out
push
subl
or
cmp
sbb
inc
push
imul
test
xor
and
jecxz
jne
push
cwtl
cmc
ret
cmc
pop
dec
mov
push
inc
cmp
mov
inc
daa
inc
mov
xchg
out
int3
test
pop
ds
sub
stc
mov
and
dec
xor
leave
aam
dec
movsb
sti
lea
push
and
jbe
mov
sbb
enter
jl
and
outsb
add
addr16
jge
inc
push
lea
jo
lcall
fists
cmp
scas
cmp
idivb
leave
pushf
or
scas
mov
fwait
bound
cmp
fcmovne
jno
mov
sub
xchg
add
out
add
movsl
mov
dec
and
sbbb
insl
jbe
lret
sahf
popa
add
call
or
pop
mov
push
push
ret
pop
xor
push
mov
pcmpeqw
outsb
xchg
ljmp
stc
sub
mov
sbb
or
and
ret
fucomi
test
push
je
sub
xor
lcall
mov
inc
cmp
sti
loope
xorb
dec
mov
stos
mov
push
ret
decb
adc
sub
gs
jl
sahf
fadds
mov
rorl
cmp
lds
mov
and
cmc
mov
lret
xor
in
outsl
mov
jno
stc
or
adc
fdivr
add
ja
lods
mov
mov
repz
sbb
out
jbe
into
in
jmp
xchg
inc
mov
jno
loopne
mov
pop
pop
or
imul
mov
pop
inc
or
jns
dec
cmp
xlat
and
sub
mov
fidivl
sti
or
aad
sbb
add
icebp
fldcw
push
je
mov
add
mov
push
call
out
dec
pop
sbbb
lahf
test
pop
dec
mov
insb
inc
pop
pushf
lcall
xchg
pop
mov
inc
cmpsl
push
ror
lret
adc
cld
jle
rcl
popa
mov
lret
sbb
adc
xchg
ror
xor
lcall
stos
inc
lock
inc
das
push
ret
fsubl
pop
add
aam
push
enter
mov
in
sbb
mov
dec
cltd
loopne
cmpsl
test
cld
icebp
mov
mov
cmpsb
into
pop
and
mov
fs
or
sub
cmp
fiaddl
mov
fbstp
frstor
or
repnz
mov
push
pop
fucomip
mov
outsl
mov
xor
or
out
ret
xchg
dec
pop
or
btc
dec
add
ss
xor
adc
mov
fcompl
test
dec
or
es
or
outsb
xlat
cld
or
xor
push
sarl
add
aas
cltd
sub
jb
push
xor
jge
push
xor
in
push
setae
cmc
mov
ret
mov
iret
mov
add
out
jae
testl
insl
mov
lock
dec
xlat
and
mov
out
cs
lahf
bound
mov
int3
les
dec
stos
out
iret
ds
js
sub
dec
sbb
xor
mov
orb
xchg
sub
jle
push
mov
xlat
mov
gs
imul
fisubs
std
and
in
push
mov
into
popf
or
xchg
mov
sarb
sbb
je
sbb
push
cwtl
imul
es
mov
aam
adc
lret
pop
mov
jge
hlt
xchg
int3
pop
arpl
fnstenv
or
pop
sub
inc
cmpsb
aad
fidivrl
push
inc
int3
xchg
sbb
ficomps
fs
mov
mov
add
movsb
xchg
xorl
sub
inc
aaa
adc
sbb
adc
lret
mov
xchg
dec
in
movsb
pop
push
jo
dec
xor
and
scas
inc
dec
lcall
add
push
leave
sub
inc
pop
sbb
jle
in
xchg
pop
pop
enter
daa
dec
les
sbb
or
sub
and
cmp
cmp
icebp
lods
in
push
lcall
ret
add
jp
xor
sbb
js
orb
ficoml
mov
sub
and
inc
adc
aam
das
subb
mov
lods
and
mov
push
fisubrs
sbb
mov
pushf
lea
data16
lcall
sbb
hlt
xlat
sahf
movsb
imul
cmp
or
aas
jg
test
mov
mov
adc
pop
pop
cmp
aas
stos
xor
jo
fcmovnb
loope
mov
or
int3
sub
dec
sub
fwait
jmp
outsl
sahf
bound
stc
ret
adc
cmpsb
push
add
fisubrl
cmc
or
out
fildll
xor
cmpsb
in
push
or
mov
fistpl
loopne
dec
fistpl
insl
jge
mov
shrl
popa
fcmovnb
add
repz
and
cwtl
shl
sbb
aas
push
xlat
pop
aad
sub
sbb
mov
test
jmp
adc
insl
fdivr
aad
pop
lahf
nop
sub
inc
xchg
xchg
lods
fldenv
jno
jecxz
into
cmp
mov
cmp
sbb
dec
gs
dec
pop
sbb
cltd
adc
mov
mov
inc
les
addl
dec
stos
jb
ficoml
and
fdivs
negb
pushf
std
lods
sbb
mov
mov
int3
dec
mov
in
cld
bound
mov
mov
mov
into
sub
das
ss
sbb
adc
or
pop
xchg
mov
addr16
mov
dec
xchg
mov
cmpsl
std
dec
or
bound
jno
loopne
insb
aam
mov
cmp
fcompl
es
rcr
push
dec
sub
lret
in
add
jmp
pop
push
xchg
mov
adc
mull
lock
add
out
and
call
out
bndldx
insb
cltd
pandn
fstpt
xchg
xchg
jae
out
or
mov
movsl
lock
rol
loop
or
ret
dec
adc
movsb
add
pop
stc
clc
call
mov
xchg
test
jmp
dec
pop
insb
xchg
int3
jb
mov
mov
mov
sbb
adc
ljmp
mov
pop
dec
pop
dec
mov
and
test
or
xchg
sahf
cltd
dec
xchg
subl
mov
daa
xchg
inc
sub
jae
add
jp
mov
mov
repnz
or
jnp
cltd
mov
in
push
pusha
pusha
lds
mov
jmp
or
add
jp
rcrl
stc
xor
dec
or
push
xor
imul
push
scas
push
dec
cld
push
sar
adc
add
sbb
mov
stos
mov
adc
inc
mov
out
push
and
fistps
jg
or
fcomps
lds
mov
subb
mov
fwait
leave
ret
movsb
adc
lahf
push
sarb
jbe
jge
mov
scas
aaa
iret
aas
mov
pop
push
bound
xor
pop
jl
dec
xchg
dec
pop
sub
xor
jl
cmp
add
mulb
push
xchg
mov
inc
out
inc
cmpsb
sub
push
in
jl
or
std
das
adc
push
cwtl
jno
test
cmp
ds
je
movsl
shrb
and
mov
test
imul
push
lods
and
dec
lods
aas
pop
pop
push
mov
dec
pop
scas
push
push
adc
lea
fsubrl
icebp
add
outsb
push
mov
adc
scas
cmp
cmpb
out
mov
lahf
fsubs
add
fmul
and
add
cltd
arpl
pop
in
cmp
icebp
jne
mov
push
sbb
rcrb
or
and
or
mov
mov
imul
inc
neg
fs
movsb
adc
mov
jmp
idivb
cli
and
lret
rol
subl
xchg
ret
out
sub
cmc
inc
dec
divb
xor
dec
outsl
jge
mov
stc
jns
call
ret
lahf
add
mov
imul
push
iret
mov
in
out
and
imul
js
in
mov
cmpsl
mov
add
imul
push
loopne
stc
int
popf
pop
in
adc
int
push
mov
dec
rep
add
pop
add
sbb
jp
sti
xlat
sahf
jmp
sub
mov
repz
push
pushf
xor
jmp
loop
shlb
inc
aad
mov
nop
push
ret
rcrl
jl
je
jns
jecxz
stos
pop
mov
stc
lea
add
call
in
push
pop
lret
add
adc
inc
jmp
fcmovne
sbbb
imul
dec
loop
inc
mov
inc
aas
jmp
bound
arpl
and
pop
or
xlat
cmp
fwait
mov
outsb
cwtl
dec
jns
mov
push
pop
mov
and
cmp
dec
or
fcom
mov
mov
shrl
sub
das
adc
jne
mov
jns
insl
ret
scas
clc
mov
insl
jo
popa
dec
cld
jae
mov
cmp
test
in
jp
and
fldcw
pop
inc
ret
mov
imull
xor
adc
push
lods
mov
movsl
clc
push
inc
sub
xchg
add
xchg
lcall
sbb
out
mov
pop
push
popf
or
vmwrite
leave
out
rcrb
mov
adc
xchg
add
dec
push
push
pop
test
fidivs
sbb
rcrl
xor
fwait
jns
cmp
sbb
add
jne
sub
mov
mov
adc
orb
or
in
mov
xchg
sbb
mov
stc
mov
fcoms
sbb
frstor
fs
into
sub
dec
popf
sbb
fnstenv
in
xchg
xchg
push
xchg
jns
or
xorl
out
rorb
or
xor
jp
dec
mov
popl
jp
out
test
in
dec
sub
mov
fildll
lds
push
pusha
xchg
inc
adc
push
cmp
in
and
push
ds
stos
add
jg
stos
sbb
ljmp
sbbl
int3
iret
jo
rol
sub
and
sub
xchg
sub
mov
push
movsb
cmpb
xchg
mov
pop
pop
gs
and
loope
adc
rcrb
cmpsb
repnz
jns
leave
cmp
push
jne
xchg
jge
das
sahf
sbb
or
or
es
bound
jl
cld
das
dec
lret
push
cmp
jns
pop
jo
gs
scas
add
andl
and
loope
jbe
cmpsb
cmpsb
stos
cmp
in
arpl
and
cld
sbb
addl
mov
stos
cmp
dec
ljmp
add
pop
lahf
push
cld
test
test
incl
lcall
or
dec
cmpl
shlb
loope
aad
fcoml
cmp
outsb
mov
jns
rorb
dec
cmpsb
adc
arpl
loop
mov
out
and
in
push
in
cli
int
push
jl
fs
push
mov
xor
mov
mov
sbbl
sahf
adc
nop
pop
sub
jg
jmp
cmc
mov
popa
adc
ss
cmp
mov
dec
negl
xchg
lret
faddp
idivl
stc
xchg
push
jg
into
push
adc
cmc
or
xor
xchg
mov
fcoml
stc
xor
adc
xor
push
data16
sti
subb
push
push
out
out
sbb
scas
stos
movsl
xor
sbb
loopne
xlat
push
gs
mov
or
xor
imul
mov
xchg
push
test
sbb
mov
xlat
fldl
pusha
mov
fistl
xor
nop
nop
loope
stos
dec
and
inc
mov
arpl
pmuludq
je
aad
jecxz
lret
les
push
lea
push
adc
arpl
pop
jle
adcb
or
mov
cld
push
pop
xor
mov
rcrb
mov
jb
sbb
lret
and
aaa
shll
push
cmp
cli
std
dec
cwtl
add
jo
insl
pop
push
mov
push
dec
adcl
add
mov
outsb
divl
test
ja
hlt
lea
popa
insb
adc
jle
in
aam
pop
mov
es
ror
insl
push
test
scas
cmpsl
sti
push
mov
icebp
adc
es
movswl
and
je
pop
fs
rolb
push
test
idivb
or
mov
xchg
mov
rcll
stc
fcomi
popa
mov
push
pop
out
and
jmp
push
xchg
sbb
mov
adc
fsubr
fs
jge
fdivs
push
mov
in
mov
test
add
xchg
inc
call
jae
mov
mov
cmpl
mov
adc
add
and
xor
xchg
or
aas
in
arpl
push
mov
mov
xchg
out
add
in
dec
rolb
popa
inc
pop
enter
sti
loopne
cmp
pop
leave
jne
inc
popf
mov
fs
out
lret
and
cmc
jns
pop
repz
pop
push
cmp
sub
push
aam
imul
jp
mov
or
jnp
clc
int
cmp
vpaddsb
cmc
fisttps
jb
sbb
cwtl
jmp
push
aad
jae
andl
mov
jge
pop
stos
jbe
inc
and
je
imul
jl
dec
jbe
adc
xor
iret
jns
ret
fwait
pop
sub
cmp
js
xor
sti
push
bound
pop
or
rorb
fcmovbe
jle
xchg
jmp
stos
xor
test
fiadds
add
mov
lahf
mov
fwait
dec
dec
leave
mov
mov
push
pop
adc
jge
test
bound
sub
dec
push
lcall
stc
fnstsw
pop
dec
cmp
xor
xor
jecxz
push
and
pop
pop
cmp
int
push
sub
mov
cmpsb
cs
and
enter
daa
sti
test
jno
loope
sub
rorl
or
into
aas
xchg
and
lahf
rcrb
out
and
test
subl
jecxz
shrb
int3
pop
stos
pusha
mov
pop
sub
in
loope
xor
mov
or
loop
roll
shlb
sbb
pop
or
sbb
mov
adc
pop
ja
push
out
mov
sub
adc
push
lahf
sbb
mov
out
loope
rcrb
test
movsb
adc
lahf
and
mov
cld
mov
sub
jl
jno
sbb
fdivs
negl
arpl
cmpsb
sbb
cmp
mov
or
fmul
icebp
mull
ror
lcall
ss
outsl
scas
gs
out
cmpsl
adc
sti
rolb
dec
movsb
lock
gs
lods
and
mov
push
ljmp
js
xor
out
in
xchg
mov
dec
and
gs
enter
fisttpl
adc
insb
jns
inc
adc
and
push
sbb
lock
sbb
add
xor
sub
into
or
xchg
xchg
aad
xchg
fistl
jg
push
inc
lret
flds
pop
je
xchg
subb
mov
dec
jmp
sub
loop
imul
sti
xchg
dec
dec
icebp
mov
pop
ljmp
les
mov
dec
in
cli
pop
and
gs
roll
pop
daa
std
mov
jo
mov
in
push
mov
mov
push
cld
jecxz
dec
lock
pop
mov
iret
ret
mov
fisttps
das
shrl
addr16
pop
mov
push
ret
int3
lea
insl
sbb
add
cmpsl
cli
dec
add
out
cmp
testb
push
loop
mov
xorl
rclb
in
and
test
das
cmpsb
mov
stos
push
xor
mov
fidivrs
xchg
dec
inc
sti
ljmp
mov
stos
ljmp
fs
push
push
jl
getsec
jmp
add
sbb
fidivl
das
and
xchg
cmp
dec
and
xchg
and
ror
fcompl
cmpsb
jo
fwait
xlat
loopne
push
pop
pop
cmc
add
stos
xchg
jns
out
fnsave
or
jae
in
mov
adc
pop
dec
fprem1
ja
xchg
aas
dec
ret
sbb
cmp
mov
lods
daa
mov
jne
in
addr16
mov
push
bound
xlat
out
xchg
loop
push
out
movsl
sub
fs
xlat
jp
loop
mov
sbb
dec
cmp
inc
dec
add
cmp
pusha
xchg
pusha
sub
push
mov
in
add
inc
sub
jae
stos
adc
ret
js
popf
test
pop
mov
mov
pushf
adc
sbb
rcll
mov
and
push
xchg
leave
data16
push
or
cs
outsl
pop
bound
hlt
ret
cmp
xlat
inc
dec
js
or
dec
sub
inc
mov
pop
xchg
xchg
inc
adcb
ret
mov
fisubs
mov
inc
rcl
cmp
testb
daa
out
movsb
mov
pop
push
lods
in
jbe
inc
jnp
jne
push
sbb
les
loopne
outsb
add
mov
jl
fdivr
dec
test
mov
xor
lea
lock
scas
pop
push
cmc
inc
je
xchg
mov
stos
in
xor
push
daa
cli
jbe
cmp
js
jno
xor
sahf
idivb
push
xchg
cmp
les
pop
and
stos
lahf
xchg
outsb
popf
push
rcl
test
mov
popa
xor
pop
pop
pop
rclb
js
adc
pop
insb
push
mov
loope
scas
daa
fsubl
cwtl
sub
xorl
rolb
xchg
data16
cmp
mov
push
fnsave
dec
fiaddl
ljmp
sub
xor
pop
bound
lcall
jbe
sbb
sbb
out
pop
cs
xor
test
pop
mov
pop
push
mov
data16
loope
mov
cmp
sub
pop
neg
pop
test
cmp
add
and
cmp
aas
cmp
in
repz
aam
mov
xor
outsl
sbb
stos
loop
inc
stc
sahf
mov
adc
adc
jb
repnz
insl
lods
or
mov
loope
or
pop
cli
adc
aad
in
add
sti
pushf
orb
neg
hlt
loopne
ja
pop
cli
inc
pop
adc
test
imul
mov
sbb
sub
xlat
pop
inc
inc
sub
mov
shr
ljmp
mov
jnp
dec
adc
fnstcw
lahf
je
mov
lret
lea
gs
popa
popa
push
pop
in
out
adc
or
cmp
pop
jns
lea
rclb
and
jb
xor
dec
arpl
rcll
mulb
std
dec
jae
cwtl
jp
xor
fstps
out
add
adc
lret
pop
test
loop
push
push
lock
sub
in
popf
loope
fisubrl
aaa
ret
pop
mov
pop
insl
and
ljmp
stc
add
andb
icebp
mov
cmp
mov
push
and
mov
mov
inc
xchg
sbb
test
mov
sub
fucom
test
clc
sbb
mov
pop
popa
ficomps
cmp
and
mov
inc
xchg
stos
or
setbe
lret
xlat
je
pushf
dec
jmp
xor
add
test
or
xchg
pop
shll
js
or
push
inc
fwait
push
add
push
add
xor
bound
add
inc
cmc
decl
jno
or
xchg
in
mov
pusha
mov
xor
mov
or
ja
leave
jbe
mov
inc
mov
into
mov
sbb
dec
inc
mov
jne
clc
test
jno
cmc
out
mov
bound
jns
xor
xchg
lods
inc
hlt
sbbl
mov
xor
and
addr16
or
jp
mov
push
jnp
xor
movsb
pop
in
popf
mov
fisttps
pop
add
inc
xor
or
sbb
xchg
sub
dec
inc
jae
sti
enter
mov
jo
xchg
pop
imul
aad
fldl
or
lea
cmc
ret
sbb
imul
sbb
or
pop
inc
and
cmp
movsb
mov
pop
repnz
lret
lds
or
xchg
andl
sahf
jp
movsb
cmp
sti
pop
jbe
cld
cli
jge
fistpll
sbb
out
mov
lret
jp
or
test
pop
jl
add
dec
pop
in
or
fisttps
xor
call
addr16
and
or
dec
xor
mov
and
push
in
sbb
cli
enter
daa
stc
jmp
cmp
pop
jno
iret
adc
dec
push
cmp
fnstsw
out
andl
mov
mov
xchg
mov
test
inc
adc
mov
int3
push
cmpl
mov
mov
stos
es
inc
inc
loope
push
aam
adc
sub
scas
mov
dec
ds
rcrb
inc
mov
orb
mov
mov
mov
and
xor
mov
dec
push
pop
loope
mov
dec
push
adc
sbb
fsubr
sahf
rcrl
test
inc
gs
fwait
cmp
sbb
mov
adc
int3
xlat
ss
mov
fsub
into
lahf
negl
sub
aam
push
cmp
mov
mov
mov
or
pop
jecxz
xor
orl
adc
jnp
jne
xor
mov
adc
out
gs
cli
dec
das
je
and
in
imul
decb
mov
loopne
jae
pop
sbb
adc
push
cmp
cmp
repz
jge
addr16
rcrb
data16
xlat
lcall
mov
fsubr
imul
or
shrl
pop
sub
aad
add
jb
sti
dec
cmp
or
mov
push
je
loop
jecxz
ret
int
mov
mov
mov
pop
xchg
jp
adc
cmp
fisttpl
cmp
inc
sub
push
aas
movsb
add
xchg
dec
fisubl
in
cmpl
cmpsl
ret
out
add
mov
xchg
fisttpl
pop
scas
xlat
cld
cmp
mov
shrb
xor
cli
lock
lret
mov
xchg
jl
mov
mov
sub
ret
ljmp
insl
or
out
dec
jnp
stos
cmpsl
clc
aaa
sub
xchg
and
es
mov
js
pusha
out
mov
shrl
sub
add
test
ss
test
push
mov
idivb
push
lods
mov
ljmp
jo
out
shrb
adc
mov
repnz
push
or
add
cmc
jns
add
in
xor
mov
mov
out
ds
icebp
inc
adc
and
push
movsb
icebp
sarl
testl
out
push
movsl
sub
add
loope
xchg
ljmp
jo
fsubrs
add
mov
pop
mov
les
ja
sbbb
loope
and
push
mov
jge
jne
shlb
movsl
out
push
pop
jmp
xor
mov
mov
arpl
pop
xor
jp
dec
sub
and
push
jle
add
in
sub
pusha
int3
pop
inc
fildll
in
jmp
aas
js
jae
lret
xlat
push
dec
jp
popf
imulb
push
cmp
loop
iret
lea
and
dec
push
sbb
or
and
scas
or
pushf
sub
loopne
fcmove
in
dec
test
jns
lret
pop
shlb
jmp
arpl
xor
inc
dec
cmp
or
inc
and
inc
mov
xor
push
scas
xchg
pop
sbb
out
lds
rol
mov
xchg
push
aam
adc
mov
jbe
and
sbb
push
aaa
or
xchg
add
xchg
or
iret
add
dec
xchg
push
ret
xor
inc
aaa
sbb
in
mov
lcall
push
mov
mov
mov
mov
paddsw
repnz
enter
daa
clc
in
cmp
add
cld
or
aad
cmp
out
cli
movsl
jecxz
xchg
xchg
inc
dec
lahf
shl
mov
test
mov
rolb
pop
and
data16
shll
pop
ljmp
loope
sbb
fdivrl
in
outsb
inc
rclb
shl
cmp
and
mov
sbb
dec
leave
and
push
lock
int
es
add
popf
pop
pusha
mov
lock
movsb
and
mov
push
jecxz
dec
and
test
aaa
jg
fbstp
mov
fstpt
xchg
mov
fs
mov
mov
cmp
mov
into
dec
lret
inc
shrl
cmp
aad
or
adc
into
lcall
xor
out
outsl
fsubrs
cmp
or
mov
inc
jae
testb
data16
pop
pop
lods
mov
xlat
aas
cmc
cli
jnp
mov
in
jg
sti
cli
cmp
leave
gs
test
pop
cmp
adc
imul
push
inc
repz
test
sbb
mov
push
push
sub
mov
mov
imull
cs
dec
inc
nop
dec
pop
jae
inc
add
sbb
lods
jecxz
repnz
rcl
lea
push
in
pop
mov
pop
dec
sbb
lcall
fstpt
iret
addr16
out
repz
in
add
mov
dec
push
sub
shl
pushf
or
std
xchg
js
cwtl
lock
mov
xor
adc
lret
cmp
test
fdiv
lock
jo
jo
shlb
pop
icebp
aas
aam
orb
jmp
es
in
repz
ret
repnz
call
pusha
pusha
lods
xchg
inc
pop
mov
fwait
push
or
loopne
mov
loopne
xor
shrb
sub
incb
loopne
jnp
je
xor
push
clc
mov
in
ljmp
lcall
pop
fucomi
ja
xchg
xchg
cmp
push
in
mov
push
inc
and
sub
sbb
pop
xchg
xor
ja
mov
icebp
out
outsl
dec
pop
aaa
test
bound
lahf
stc
jbe
push
ds
sbb
or
xchg
icebp
fwait
fs
jle
dec
jnp
add
cld
fldl
xor
fbld
nop
gs
cmpsb
pusha
mov
rcr
pusha
leave
add
adc
ja
mov
jmp
mov
aad
jo
xchg
dec
or
js
or
dec
mov
jb
out
inc
jb
je
call
cmp
enter
dec
cmp
addr16
mov
push
mov
test
jnp
out
jle
push
mov
or
ffreep
sub
ret
pop
fiaddl
dec
jae
rcll
or
sub
mov
sbb
aad
repnz
cltd
sbb
loop
imul
scas
jo
test
sbb
iret
dec
fwait
aas
ret
mov
pop
jp
hlt
movsb
les
inc
push
inc
cwtl
or
mov
cmp
xchg
inc
pop
mov
add
fcmovnu
adc
dec
lds
lahf
mov
and
or
repnz
push
mov
and
lcall
jge
enter
repnz
dec
mov
or
mov
popa
dec
cmc
gs
push
movsl
ret
mov
jo
popf
int3
scas
pop
rcrl
ja
cmp
int
inc
inc
add
in
out
dec
enter
daa
mull
cmp
dec
xchg
cs
cmp
ds
pcmpeqw
cmpsb
jne
out
aaa
mov
test
lods
test
xor
pop
fsubl
adc
sub
insl
gs
jns
loope
add
pop
sub
in
adc
roll
popl
addl
test
andl
repz
ja
mov
in
sub
mov
fbstp
mov
push
sti
sbb
mov
rcrb
jl
imul
cmpsb
orb
sbb
push
mov
lret
divb
fs
into
out
ss
pop
cmp
pop
sbb
negl
dec
sbb
adc
add
cmp
fisttps
or
movsb
in
jge
dec
cmc
in
mov
push
push
outsl
mov
loop
sub
daa
adc
pop
out
test
pop
lods
rorb
out
popf
fsqrt
scas
mov
xor
ja
in
inc
into
out
test
xchg
insl
gs
adc
pop
push
push
xchg
dec
xchg
jecxz
and
repz
sub
mov
mov
xlat
sbb
sub
cli
adc
xor
je
and
aad
add
jmp
mov
fldenv
in
je
mov
cwtl
mov
call
fisubs
or
dec
negl
pop
bound
inc
jne
outsl
inc
xor
or
adc
test
fdivrs
and
arpl
inc
pop
mov
std
cmp
dec
cs
push
sub
mov
mov
lret
lods
pop
pop
mov
test
arpl
dec
ficoml
mov
cmp
xchg
es
mov
cwtl
dec
jno
bound
sbb
icebp
inc
ret
test
mov
mov
jp
mov
cmp
shlb
arpl
xor
mov
mov
push
ds
push
fstpl
jo
lret
xchg
dec
gs
ljmp
cmp
cmc
stos
xorb
xchg
cmpb
mov
imul
nop
call
ret
mov
hlt
adc
dec
mov
imul
push
dec
xor
or
call
or
lock
fwait
xchg
std
push
push
jmp
add
pop
lret
push
mov
push
cmp
cmc
shl
sbb
mov
push
mov
mov
cmp
js
repz
jae
inc
dec
push
inc
mov
push
dec
out
in
jne
jo
mov
out
out
es
bound
and
or
imul
xor
insb
or
scas
addr16
fisubrs
enter
cltd
icebp
subb
jnp
dec
and
xchg
mov
pusha
add
dec
xchg
cmp
fadds
mov
out
pop
push
iret
dec
ret
popf
inc
gs
stc
xchg
les
lea
mov
and
or
push
imul
scas
rcrl
jg
xchg
aaa
mov
ret
add
hlt
out
out
out
arpl
rolb
enter
cld
or
aaa
insl
mov
jmp
enter
pop
int3
in
sbb
jg
pusha
fidivs
cmp
cmp
xchg
jmp
cmp
or
cmp
aam
jge
xchg
push
sbb
shlb
aaa
or
int
push
push
xchg
jl
orl
push
mov
cmp
stc
pop
imul
cmp
cmp
push
and
jge
mov
lock
outsb
sbb
daa
mulb
cmp
ret
xor
or
dec
movsl
icebp
cmp
ret
lahf
push
sbbl
pushf
sub
jp
rolb
cmp
lahf
popw
pop
outsb
sbb
js
in
pop
push
mov
imul
jp
dec
outsb
or
cmp
and
mov
loop
leave
addb
sub
in
mov
push
jle
divb
int
pop
and
testb
pop
pop
inc
scas
lcall
dec
mov
push
pop
sbb
rol
mov
lea
jb
mov
jae
mov
pusha
out
adc
sbb
fcoms
mov
insl
lret
mov
cmp
mov
cmp
pusha
mov
cmc
mov
and
mov
push
outsl
xchg
xchg
add
dec
sbb
jp
aam
je
pop
add
and
inc
pop
lods
cmpsl
js
mov
or
out
jg
cli
loope
arpl
add
lock
pop
or
clc
push
pop
adc
dec
pop
jbe
popa
adc
movsb
add
sbb
les
dec
repz
icebp
repz
mov
or
fsubs
sti
cmp
loopne
xlat
push
divl
mov
fnsave
dec
test
aad
adc
pop
dec
pop
sbb
sub
lds
insb
jecxz
push
inc
aam
in
jnp
call
pop
adc
adc
lds
mov
pop
add
mov
inc
dec
pusha
les
inc
ds
lds
aas
sub
and
xor
dec
divb
mov
in
test
data16
mov
jb
mov
flds
lret
sbb
add
xchg
add
cmpsb
sbb
das
cs
frstor
enter
push
sub
ret
xchg
sub
es
loopne
rcrl
cmpsl
cmc
hlt
gs
sbb
lods
addr16
in
and
jne
out
mov
push
or
shlb
inc
sub
or
mov
and
push
add
test
clc
add
mov
pusha
popa
cmp
mov
stos
jno
xchg
out
cmp
push
push
lcall
add
fcompl
enter
jno
push
xchg
lods
fisttps
sbb
xor
mov
sbb
dec
cwtl
or
and
push
mov
xchg
add
xor
and
or
sbb
cmp
pop
les
popa
sbb
dec
pop
cmc
sbb
ja
rolb
lea
cmp
dec
rolb
or
out
add
mov
jns
lsl
fldt
sub
dec
aad
addr16
addb
xor
insb
bound
add
mov
scas
jle
rcrl
in
sub
pusha
popf
gs
xchg
or
mov
pusha
pmulhw
js
push
xchg
loop
popf
imul
mov
testl
pop
sbb
adc
ss
or
adc
es
or
mov
in
pop
jne
xchg
hlt
cmp
arpl
xchg
mov
sbb
out
mov
fimull
cmp
int3
xlat
daa
sbb
ficoms
mov
lods
rcrb
mov
lea
lock
imul
push
jge
inc
repnz
inc
add
cmc
inc
or
je
jl
std
daa
dec
shr
xor
imul
jo
cmpsb
mov
and
mov
push
in
lret
pop
cmpb
xchg
cmpsb
in
mov
push
enter
daa
cmc
out
cmp
test
shrl
scas
test
jae
andl
sub
dec
into
test
ret
pusha
popf
xor
mov
bound
js,pt
dec
stc
pop
cmpsl
adc
push
jl
loope
inc
ljmp
mov
outsb
outsl
in
fs
xchg
adcb
sbb
aaa
mov
or
jns
mov
stc
lds
sub
sbb
fst
push
lcall
cltd
mov
nop
sahf
pop
jne
test
filds
pop
ret
add
adc
xor
insb
adc
add
jnp
sarb
aaa
lret
test
xor
cmp
insl
outsl
or
maskmovq
inc
push
mov
jnp
popa
xor
jge
outsl
jne
cmp
loope
add
xor
int3
add
bound
mov
test
out
in
cli
adc
sub
fcoml
add
pop
xchg
push
sbb
loopne
or
outsb
js
cmc
in
imul
out
repz
fnstenv
cmp
iret
xlat
xchg
sub
and
mov
insb
cs
mov
fiadds
dec
mov
inc
cwtl
fsts
mov
fcompl
pop
flds
call
fmull
sti
pop
arpl
push
adc
ljmp
test
incb
scas
icebp
inc
data16
push
aas
loope
inc
jb
in
dec
mov
loop
scas
pop
mov
divb
cs
cwtl
and
mov
mov
fnstcw
in
xor
mov
cli
mov
adc
lock
mov
mov
sarl
ret
lods
leave
add
insl
test
fimull
xchg
clc
cmpsl
hlt
cmp
mov
icebp
hlt
mov
rorb
mov
jl
lds
cmp
cmp
arpl
rorl
push
les
cmc
pop
xchg
je
push
push
stc
popa
push
into
cwtl
pop
xchg
mov
ja
mov
jge
push
jne
mov
add
fcompl
adc
sub
dec
lea
scas
cmp
sbb
jp
jo
jle
aam
jnp
sub
sub
push
xor
je
add
fisubrs
xor
repz
pop
int
xchg
xchg
mov
mov
and
dec
jne
dec
inc
jl
ds
inc
test
jne
or
mov
push
dec
out
in
push
bound
jecxz
jns
mov
and
out
dec
sub
inc
sbb
addr16
stos
movsl
jp
xchg
lret
mov
xor
ss
fs
sub
inc
fsubl
cmp
fbld
cmc
xchg
ficomps
push
jmp
imul
push
in
sbb
xchg
lods
sarl
ss
mov
aaa
lods
nop
addr16
imul
scas
cltd
xchg
lcall
mov
mov
pop
lods
pop
shl
test
dec
arpl
inc
pop
sub
pop
shll
sub
popa
fidivrl
push
int3
ret
pop
fstpl
mov
stc
fdivl
vmovdqu
shlb
mov
loopne
or
icebp
notl
movsb
hlt
insb
adcl
inc
jbe
push
outsb
jge
aam
sbb
cli
aaa
xchg
fisttpl
xchg
and
addb
jl
dec
pop
dec
inc
pop
sub
xor
scas
dec
es
cld
in
and
decl
fldt
push
mov
hlt
inc
out
test
cmpsb
ret
dec
cltd
in
fwait
jle
enter
daa
hlt
lock
sbb
dec
jno
pop
subb
out
imul
ds
fists
inc
ss
cmp
lahf
dec
and
shrb
into
cmp
and
lcall
sub
push
or
loope
sahf
js
push
dec
outsb
rcr
scas
adc
push
mov
lock
sbb
icebp
jle
mov
pop
push
cld
mov
int
and
in
push
pop
pop
icebp
sbbb
shrb
sbb
sbb
call
adc
fimull
lret
mov
fsubl
outsl
fwait
dec
notl
adc
sar
cmp
lea
notl
push
rol
push
cmp
bnd
jle
or
es
cmc
inc
out
jg
data16
outsl
push
add
and
call
xchg
popf
add
push
data16
aam
jne
push
mov
xchg
iret
out
iret
daa
cli
inc
lds
mov
sub
mov
sti
mov
adc
gs
xchg
add
cmpb
mov
repz
je
xchg
ss
sahf
sbb
lea
ljmp
popa
leave
pushf
xor
jmp
movsl
shrl
dec
mov
arpl
mov
int
inc
dec
xchg
pushf
fld
mov
push
jecxz
pop
fs
fsubrl
sub
ljmp
pop
push
mov
inc
dec
mov
cmp
pop
dec
scas
daa
inc
or
sbb
adc
andb
or
dec
sub
aam
shrl
ss
idivb
into
std
xor
xchg
cwtl
fmull
dec
mov
incb
cld
adc
scas
mov
and
push
lock
popa
mov
in
add
mov
ss
cmp
pushf
and
sbb
test
lods
dec
bound
sub
mov
nop
icebp
enter
cmp
xlat
mov
addl
dec
bnd
pop
mov
rcrb
xchg
sub
inc
or
enter
inc
popa
rorl
xchg
add
ja
popa
push
xor
dec
pop
dec
out
add
pop
push
push
add
shlb
cltd
xor
les
sbb
pop
dec
hlt
ret
fldcw
fwait
dec
in
and
shrl
adc
fwait
and
rcrb
aam
roll
push
popa
lods
xor
or
sub
and
cmpsl
out
loop
and
cld
cmp
je
ja
shl
dec
push
inc
or
inc
loop
cwtl
cmpsb
es
insl
gs
mov
test
jns
aam
xchg
outsl
mov
fs
dec
and
inc
icebp
add
push
xchg
movsl
adc
cmp
xchg
jnp
push
jle
pop
aam
and
push
pusha
shll
scas
filds
mov
add
ret
inc
jbe
pop
jae
inc
arpl
sbb
mov
adc
push
jne
subl
mov
imul
add
daa
ja
iret
cld
inc
ret
inc
pop
jecxz
sub
shlb
arpl
jge
pop
push
iret
or
test
es
sbb
or
outsl
sbb
xchg
mov
icebp
aas
pop
or
pop
ficomps
adc
mov
xor
leave
push
nop
fstl
adc
insb
jge
dec
mov
aaa
inc
dec
iret
or
mov
pop
dec
mov
mov
xor
jg
js
mov
jmp
and
das
aas
cmp
sbb
inc
jge
pop
cmpsb
inc
jl
in
sbbb
enter
daa
repz
cmp
mov
sub
fdiv
cmp
mov
ds
and
and
jl
push
xchg
test
fldcw
xor
jl
call
or
and
dec
arpl
jae
test
adc
inc
outsb
xor
push
mov
cmp
xchg
xchg
cmpb
sbb
sbb
mov
sub
and
movl
sub
jl
fisttpl
pop
push
push
push
xor
mov
jl
cmp
xlat
sahf
movsl
mov
xor
cmc
inc
sbb
insl
lds
out
or
xchg
adc
dec
scas
mov
cmp
dec
cmpsl
push
notl
lock
mov
cmp
dec
icebp
or
mov
or
cmc
or
outsl
xor
data16
in
stos
stc
lahf
in
xchg
adc
stc
inc
add
adc
xchg
lods
pop
mov
mov
cmp
xorb
inc
inc
in
in
dec
data16
gs
fsin
popa
dec
lret
push
add
mov
lcall
std
addr16
jnp
in
repz
std
sbb
enter
adc
dec
sub
test
pushf
fdivp
jmp
mov
sub
aad
lods
mov
xchg
call
and
adc
int
jbe
adc
cli
fiadds
filds
lea
out
call
fiaddl
push
adc
aas
dec
mov
or
xchg
leave
roll
aas
pop
cld
sub
xlat
push
dec
movsb
notb
lds
mov
std
fstps
xlat
cwtl
xchg
outsb
inc
mov
repz
cmpsl
and
xchg
fcmovne
push
lods
mov
or
lock
cmpsb
das
lret
lds
cmp
aam
and
inc
or
or
xor
or
cmpsl
repnz
sarl
mov
lods
test
out
icebp
stos
idivb
mov
mov
jnp
inc
shr
je
sub
sar
test
ja
dec
add
js
clc
mov
stos
xchg
inc
lret
add
xchg
popa
jg
or
test
out
data16
xchg
pushf
int
push
sub
comiss
push
cltd
insb
mov
mov
add
mov
test
pop
sbb
sbb
pop
roll
scas
rcrb
ja
fildl
addl
out
shll
push
jae
or
dec
ret
xchg
xor
movsl
mov
es
jns
je
sbb
xor
out
adc
jnp
xchg
jne
xor
mov
test
bound
mov
jnp
test
sub
sub
cmp
inc
addr16
xchg
jp
insb
lods
mov
or
jnp
mov
jle
xor
in
lods
out
pusha
outsb
and
xor
test
jmp
sbbl
call
mov
mov
inc
stos
addl
sbb
adcl
into
jae
adc
pop
test
es
pusha
ret
push
pop
sbb
add
sbb
out
arpl
pop
pop
or
and
ret
rcrl
xchg
clc
xchg
scas
int3
cwtl
adc
pop
cmp
push
stos
shrb
aad
xchg
fs
fbstp
movsb
or
and
jbe
mov
mov
aaa
add
or
add
imul
push
adc
into
xor
gs
leave
scas
mov
xchg
mov
push
dec
cmp
sbb
imul
cmp
std
pop
sub
pop
cmp
push
mov
movsl
or
mov
lahf
mov
and
mov
jmp
in
dec
xor
mul
stos
in
cmpsb
pop
or
adc
cmc
cmp
fs
push
inc
loope
mov
sub
and
adc
sbb
adcb
cmc
mov
mov
mov
add
int
jp
sub
sbb
xor
scas
add
jae
push
sbb
jg
dec
dec
mov
mov
adcb
jg,pt
leave
mov
pop
call
adc
pop
iret
repnz
pop
sbb
add
sarl
aam
cmp
cmp
js
or
into
in
fimuls
cmc
sarb
sbb
loopne
adc
into
stc
push
pop
fsts
mov
add
inc
data16
lods
inc
or
mov
das
ret
push
ja
popa
push
adc
pop
ret
adc
movsb
incb
loopne
mov
adc
inc
imul
jo
repz
xchg
xchg
mov
or
add
jno
cmp
mov
mov
jmp
pop
int3
adc
cmpsb
aad
push
in
nop
outsl
fisubl
inc
jne
sbb
fdivs
or
bound
loopne
pop
pop
add
mov
dec
mov
in
xchg
push
or
inc
mov
xchg
aas
mov
lcall
push
ret
sbb
int3
sbb
jl
sti
std
sub
cwtl
push
call
ret
mov
xchg
data16
adc
xlat
fsubrl
add
sbb
adc
inc
das
stos
mov
mov
movsb
dec
fcmovbe
xor
ret
rcl
aad
mov
cmp
adc
dec
pop
cmpsl
andb
call
or
adc
mov
insl
aam
and
cmpb
lcall
sub
or
mov
jle
push
or
add
clc
icebp
jge
xchg
subl
popa
xchg
cmc
test
add
sub
inc
ja
jecxz
mov
push
fimull
mov
add
sub
xor
loop
mov
add
subl
mov
fldenv
or
xor
jle
ficomps
sbb
add
sahf
xchg
cmp
movsl
inc
cmp
sbb
iret
in
inc
adc
insl
inc
jecxz
dec
pop
pop
loope
cmp
idivl
dec
jae
inc
inc
mov
adc
dec
pop
xchg
pop
jne
pop
xlat
mov
pop
jp
subl
jns
sub
add
leave
cwtl
out
dec
jno
mov
xor
aaa
pop
insl
addr16
cmp
mov
sub
insb
push
stos
xchg
lds
jle
cmp
jmp
or
push
filds
popa
fucomip
out
js
inc
mov
aaa
jae
pop
and
sahf
lds
pop
enter
mov
leave
stos
hlt
frstor
jl
mov
fbld
imul
inc
scas
ret
push
adc
pop
xchg
test
inc
fdivl
pop
push
add
adc
inc
fs
inc
or
sahf
sarl
sbb
fcmovbe
lret
enter
push
int3
orl
pop
push
imul
pop
les
les
mov
fxch
call
movsb
xchg
rorl
push
je
ljmp
in
sbb
mov
or
jmp
inc
xchg
and
jbe
xor
xor
shlb
and
sub
cmp
jae
push
sbb
mov
in
push
add
daa
icebp
and
cmp
icebp
sub
stos
pop
cmp
jge
call
jo
adc
sbb
lahf
test
daa
imull
out
rcrb
or
outsb
icebp
inc
pop
xor
pop
mov
repnz
loope
jnp
fsubrl
cmp
and
imul
shl
sbb
mov
xor
mov
lahf
lods
and
lcall
pop
aad
pop
fsts
lcall
pop
mov
cmp
xchg
test
sahf
jmp
xlat
test
out
sub
sub
mov
jmp
mov
add
fs
cmp
test
mov
bswap
add
fdivrs
adc
lret
pop
rorl
or
adc
into
iret
dec
cmc
xchg
fnstenv
ja
mov
loop
cmpl
imul
add
push
dec
lea
lods
sub
mov
xchg
cli
loopne
xchg
cmp
xchg
sti
ret
imul
pop
cli
gs
inc
pop
adc
notb
inc
lock
jmp
mov
xchg
fwait
js
pop
mov
ficompl
ds
xlat
xlat
xchg
cs
sub
lcall
sbbb
je
jns
cmp
dec
loopne
dec
xor
mov
dec
je
jne
jecxz
mov
in
out
negl
pop
inc
int3
fmuls
and
sub
dec
jns
or
pop
xor
sub
je
inc
shlb
pushf
aas
pop
cmp
jb
xchg
movsl
dec
xchg
pop
sbb
cmp
idivb
cltd
sub
mov
out
jp
adc
xchg
sub
lret
inc
jne
mov
add
lock
ficoms
das
mov
mov
pop
inc
sbb
std
adc
ret
bound
es
nop
insl
inc
imul
lock
mov
dec
or
lods
jle
cs
nop
xchg
stos
and
sbb
inc
jnp
xchg
jl
sub
jecxz
test
mov
ds
rcrb
mov
sub
inc
xchg
ret
ljmp
adc
cmp
sub
repnz
sub
les
in
push
rolb
lods
xor
cltd
ficoml
xor
lock
push
ja
dec
sub
xor
sbb
sbbb
pop
add
xor
or
xchg
lods
mov
mov
and
in
mov
cli
pop
xor
inc
sti
or
mov
iret
xchg
or
icebp
js
pop
pushf
shl
ja
into
xchg
dec
inc
gs
cmp
mov
add
xor
cld
mov
mov
dec
pusha
divb
test
insb
xchg
shlb
andl
stc
out
hlt
iret
sub
xor
daa
addr16
jb
jp
push
cwtl
mov
insb
xchg
insb
jns
jg
sbb
outsb
jle
cmp
cmp
sbb
mov
mov
jmp
xchg
lock
jae
jmp
movsl
popf
cs
jl
pop
vxorps
add
stos
addr16
and
push
adc
cmpb
in
imul
push
iret
in
adc
adc
pop
mov
add
arpl
pop
ret
sub
push
cwtl
loopne
fimull
aas
call
pop
cltd
pusha
stos
fiadds
std
mov
sub
popf
repnz
out
int
test
and
cmp
mov
xchg
jge
push
cmp
aaa
subb
add
mov
hlt
dec
stos
in
pop
xor
sbb
xchg
and
cmp
addb
jmp
cmpsb
iret
mov
add
push
inc
in
lock
cmp
outsb
jg
cmp
sub
rorb
cmp
icebp
test
and
mov
and
push
lahf
enter
ficomps
inc
outsb
fwait
add
ljmp
xor
pop
pop
sti
sbb
lret
pop
loop
test
push
mov
mov
rcr
sub
pop
outsb
pop
sub
adc
into
mov
sbb
in
xorb
and
push
or
or
jne
pop
popa
xchg
sub
and
pop
pop
jg
lcall
mov
sbb
in
mov
in
pushf
addb
jg
mov
mov
and
sbb
mull
outsl
cmp
jns
shl
push
sub
lret
jns
and
movsl
cmp
dec
ud2
cmp
into
mov
dec
cmc
pop
lcall
rcrb
loop
sbb
stc
les
adc
and
data16
mov
mov
lahf
mov
adc
lods
in
and
dec
aam
gs
fsts
adc
ret
sbb
xchg
inc
mov
cmp
xchg
xlat
sar
lret
dec
shll
fildll
out
xlat
mov
nop
and
data16
fldenv
je
shll
call
push
bnd
push
xchg
jl
loop
xor
push
cmpl
xor
testb
xor
mov
cld
fisttpll
jb
mov
push
and
add
testb
xchg
std
into
sub
cmc
mov
pop
add
subl
shll
mov
push
lock
push
rcr
mov
enter
icebp
aas
sahf
es
or
dec
dec
cltd
push
cmpsl
out
pop
mov
and
aaa
lods
jmp
adc
and
mov
sub
shrb
xchg
sub
popa
sub
jg
and
xchg
push
push
clc
adc
xchg
add
out
ljmp
out
pop
xchg
jno
insb
push
mov
inc
rolb
mov
mov
push
test
or
orl
fcompp
xchg
repz
or
mov
fsubrl
push
pusha
pusha
out
test
sahf
add
outsb
ret
inc
fbld
or
sbbl
push
shr
repz
mov
push
pop
push
ja
sub
dec
xor
repnz
outsl
arpl
addr16
stc
mov
sub
push
aam
inc
loopne
mov
dec
mov
aas
les
fwait
repz
mov
leave
out
adc
sub
sub
cs
sub
aam
insb
in
bound
test
fsubrl
and
inc
mov
pusha
aas
cltd
fistpll
ljmp
mov
lcall
popf
push
clc
adc
push
jno
ret
stos
ficoml
jmp
xor
sub
scas
mov
adc
sahf
mov
and
inc
pop
mov
inc
js
scas
and
inc
push
std
or
xchg
and
pop
sub
mov
int3
pop
jne
pop
enter
sub
mov
imul
cmp
leave
inc
jns
movsb
stos
imul
pop
jbe
std
jge
or
add
inc
es
push
add
or
decb
jmp
add
jbe
sbb
psubd
cmp
mov
cmpsb
inc
mov
mov
in
push
ja
enter
daa
out
cmp
jg
jno
in
sub
lret
jecxz
ds
loop,pt
and
and
jae
lahf
out
call
lret
cmp
push
xor
popf
pop
jg
mov
add
addr16
xchg
gs
iret
insl
push
fdivrl
cltd
int3
outsb
shl
adc
test
cmp
sbb
popa
test
rcll
ljmp
sub
sub
movl
enter
mov
fwait
mov
out
hlt
pop
iret
sahf
xor
js
popa
shrb
jg
hlt
and
hlt
outsl
outsl
mov
sub
fs
js
adc
mov
xchg
push
mov
xor
notl
lret
lods
sub
mov
clc
inc
or
cwtl
cmc
and
xchg
subl
in
push
ljmp
add
jecxz
std
cmpsb
es
scas
sub
stos
test
cli
inc
out
mov
out
push
in
cltd
adc
sti
and
in
aas
gs
ret
or
inc
pop
dec
and
fnstenv
les
jecxz
xchg
add
rcrb
rolb
adc
sub
pop
pushf
mov
cmp
aad
lcall
repz
inc
inc
scas
sub
xor
jecxz
xchg
add
lea
aaa
sub
movsb
or
pop
test
dec
dec
mov
fistpl
sbb
mulb
or
cmc
jb
sbb
dec
adcb
pop
sbb
mov
pop
jne
jnp
or
mov
leave
mov
pop
addl
mov
and
or
mull
or
inc
icebp
mov
leave
push
cmpsl
aam
push
adc
es
js
adc
sub
dec
lock
out
mov
psllw
jmp
insb
mov
lock
cmpsb
push
mov
notl
jecxz
mov
leave
test
mov
push
push
jbe
fstl
cmp
rclb
leave
popa
pop
xchg
out
stos
cli
or
add
push
xchg
mov
bts
mov
roll
cltd
dec
lcall
fisubrl
xchg
subl
push
inc
sbb
insb
push
or
scas
or
add
add
out
cli
nop
jmp
xchg
sahf
in
lret
or
in
sbb
xchg
insl
xor
cmpsl
les
adc
or
or
daa
jecxz
inc
push
test
mov
jo
dec
pop
movsb
fbstp
aaa
sbb
push
xchg
stos
bound
js
xchg
rcrw
inc
inc
stc
out
cmpsl
jmp
or
aad
addr16
outsb
sbb
xchg
push
mov
pusha
inc
insb
dec
mov
sub
adc
inc
sub
pusha
call
xchg
sarb
jmp
lods
xchg
shll
pop
rcll
out
aam
jl
pop
mov
mov
sbb
shl
sbb
int
imul
sbb
ljmp
iret
mov
or
hlt
inc
adc
inc
insl
sub
or
cmpxchg
cwtl
xlat
xchg
push
jl
int3
inc
call
push
fmulp
inc
lock
adc
adc
jl
repnz
cmp
jns
jbe
scas
cmp
clc
xchg
sbb
lahf
inc
aaa
add
scas
or
add
add
dec
fsubr
inc
push
mov
sub
jo
mov
mov
mov
cmp
push
jns
and
and
cmpsb
aad
dec
in
add
repz
out
cli
xor
dec
inc
jb
out
test
cmp
pusha
popa
movsl
sub
in
push
insb
call
ljmp
adc
xchg
xor
xor
mov
mov
cmpsb
cmp
inc
jno
pusha
cwtl
insb
push
sub
fsubrl
jb
repnz
outsb
and
mov
pop
jns
rolb
clc
sbb
jge
in
adc
sbb
int
fadd
sub
jae
pop
push
pop
sub
push
or
mov
sbb
pop
jnp
aam
in
test
jmp
jl
lahf
jg
pop
mov
cmp
adc
adc
fdivrl
xchg
add
out
xchg
cs
mov
inc
xor
jne
or
and
js
out
cmc
in
inc
repz
rclb
jmp
stc
xor
enter
incb
mov
mov
xor
int
jns
jns
xor
aam
sti
rcl
sar
adc
lcall
dec
xchg
mov
push
hlt
les
pop
cwtl
xchg
enter
adc
in
out
imul
mov
xor
icebp
cmpsb
cs
loop
aad
rclb
dec
push
dec
testb
add
je
push
or
inc
outsl
adc
out
add
lea
xchg
int3
and
push
aaa
mov
adc
loop
dec
cmp
xor
pop
sbb
arpl
aas
cmp
in
jb
scas
and
lds
rorl
adc
testb
mov
mov
sbb
adc
icebp
lret
xchg
jle
mov
seto
es
and
addb
aam
repnz
bsr
es
ljmp
inc
fildl
pushf
and
rclb
and
stc
mov
mov
push
add
sub
jecxz
mov
sbb
fnstsw
neg
xchg
jg
jbe
inc
mov
popa
repnz
stos
jmp
sbb
xchg
in
add
sub
add
pop
sbb
and
loop
jmp
sub
and
test
lds
xchg
jmp
or
addl
cmpsb
and
add
or
in
xor
mov
or
xchg
fs
bound
mov
scas
mov
pop
int
lret
ja
outsb
pop
dec
sbb
jno
popf
lret
mov
lea
in
jne
icebp
pop
mov
mov
bound
loopne
jns
test
xor
fldl
push
scas
add
push
adc
or
and
popf
jp
fcoml
insb
mov
push
insb
jle
ljmp
jne
push
inc
xchg
mov
pop
cmp
jae
testl
mov
lods
stos
push
out
mov
stos
rolb
and
jg
sbb
out
in
imul
gs
dec
icebp
fwait
push
xor
daa
iret
add
in
pop
sub
das
in
int
pop
inc
jo
jo
fadd
cmp
inc
adc
lcall
das
das
and
sbb
lds
loope
xor
mov
and
pop
cmp
rorl
mov
xorl
scas
sbb
jo
aaa
std
popl
mov
scas
jno
dec
mov
push
adcl
add
scas
adc
xchg
push
cmp
jno
push
inc
loope
inc
xlat
andb
jl
enter
daa
in
lahf
cwtl
cmp
xor
cmc
cmp
adc
dec
movsl
xor
and
jo
and
and
sbb
xor
sahf
jp
push
pop
int
sub
dec
rcll
lahf
dec
popf
push
test
loope
out
mov
adc
adc
outsb
xchg
sub
pop
call
es
repz
cld
test
inc
je
and
lds
adc
xchg
dec
jnp
pop
aad
dec
lcall
push
sbb
jg
ja
movl
push
iret
outsb
mov
mov
mov
add
xor
sbb
test
stos
dec
testl
sbb
cmp
sbb
xchg
into
pop
cmpb
xor
xor
out
outsl
insl
cwtl
cmp
jns
add
jmp
inc
push
add
or
cltd
mov
pop
mov
movsl
add
lods
test
in
outsl
push
sti
jg
sar
xor
frstor
je
loopne
arpl
adc
shl
les
pop
or
aaa
ja
cmp
xchg
dec
xlat
mov
sub
cld
mov
loopne
outsb
jmp
add
push
imul
dec
mov
loope
aam
in
dec
rclb
cmp
add
icebp
push
mov
mov
fs
aam
sbbl
enter
inc
inc
fstpt
and
add
js
aas
fnsave
ja
dec
outsb
fisttpl
push
jl
test
gs
ret
inc
inc
cwtl
stc
hlt
jns
sahf
fisttps
xor
adc
cmp
jg
mov
mov
dec
lock
das
add
xor
sub
stos
sbb
int3
dec
aas
pop
add
sbb
leave
icebp
test
mov
jl
sbb
pop
and
mov
cmp
shl
sti
cmc
sub
mov
mov
ljmp
loopne
lret
inc
push
xchg
mov
or
pop
loopne
jmp
inc
stos
fmuls
out
mov
pop
jg
dec
pop
punpckhwd
pusha
add
and
xor
insl
dec
mov
adc
dec
lds
addl
mov
lret
or
daa
lahf
fwait
imul
add
and
test
xor
or
in
std
inc
xchg
or
jb
mov
pop
mov
ja
push
lea
pop
or
xor
mov
mov
sbb
mov
leave
inc
out
faddl
lds
test
in
xor
sub
push
or
jp
fisttpl
insb
and
popa
fidivrs
mov
in
aas
out
adc
pop
fistps
xchg
jbe
loopne
ret
inc
ret
mov
jae
fdiv
push
insl
xchg
cmc
popf
lret
mov
cs
das
stos
xor
and
sub
imul
push
js
xor
and
mov
pusha
add
pop
fs
xor
mov
pop
inc
jae
or
add
sub
ficoml
xchg
add
int3
sbb
pop
push
loope
ficoms
mov
rorb
mov
js
gs
test
mov
into
jbe
insb
out
xchg
jns
sbb
push
aaa
jle
sbb
add
lods
cmp
cmp
cmp
push
popw
xchg
xor
xchg
es
hlt
dec
frstor
enter
xchg
dec
or
sbb
insl
adc
rcll
enter
daa
in
enter
out
jno
push
xchg
sub
scas
xchg
cmp
push
adc
scas
sbb
aaa
xchg
xlat
jmp
mov
dec
out
and
xor
lods
jne
cmp
pop
in
js
out
pop
fiadds
xor
adc
inc
fadd
orl
cmc
jnp
ljmp
sarb
int
cwtl
and
add
sbb
inc
mov
sti
cltd
and
cmc
mov
int
fisubs
pop
push
dec
js
loope
repnz
mov
imul
sbb
pop
xorb
ret
sahf
pop
mov
das
out
dec
dec
lcall
aad
cmp
gs
push
testl
dec
sarl
cmp
jmp
or
push
mov
ds
cmc
jp
aaa
xor
das
lods
outsl
dec
je
loop
mov
roll
mov
test
fwait
shlb
out
scas
xchg
cli
divb
imul
sti
bnd
push
cmp
gs
arpl
loopne
arpl
adc
out
imul
and
xchg
dec
xchg
sbb
gs
std
xlat
int
repz
xchg
pushf
mov
cld
jmp
aad
arpl
into
aad
adc
adc
inc
out
mov
je
cmp
hlt
sbb
repnz
call
push
call
das
adc
inc
sbb
arpl
aad
inc
testb
cwtl
mov
dec
in
repnz
jo
shll
and
xchg
cwtl
mov
or
and
hlt
addl
jmp
mov
pop
mov
mov
and
in
mov
mov
hlt
sub
sub
fwait
xor
ja
dec
cmp
cmpsl
jmp
add
orb
xchg
sbb
mov
aas
mov
mov
and
jno
push
jmp
sbb
pushf
shrl
xlat
shll
lahf
push
fldl
in
popa
clc
push
sub
ljmp
push
stos
adc
lea
mov
enter
or
js
in
into
xorl
ss
xchg
psubusb
xchg
mov
shl
mov
into
fwait
cwtl
ss
jl
add
in
aas
sahf
adc
xchg
imul
in
in
test
mov
sbb
xor
mov
inc
cli
daa
ja
rcrl
lret
roll
mov
dec
mov
xorl
sbb
bound
gs
mov
xchg
push
xor
and
pop
sbb
and
andb
mov
mov
fldt
nop
cmp
jnp
xor
push
loopne
pusha
stos
dec
lods
fistpll
scas
jecxz
dec
outsb
shr
mov
add
mov
xor
push
mov
insl
push
mov
push
add
imul
fistl
mov
iret
mov
or
ds
sub
arpl
xchg
ljmp
movsb
test
aam
inc
adc
aam
pop
movsb
int3
add
imul
mov
pop
lds
fs
mov
lret
inc
xchg
leave
and
jecxz
xlat
jl
push
dec
sbb
jbe
jp
jge
adc
sbb
xchg
xchg
cmp
arpl
jl
bound
sub
inc
xor
loop
xor
pop
add
cmp
dec
push
fisubrl
inc
cmc
notl
cmpsb
pop
xor
enter
daa
jmp
je
out
inc
jno
vmwrite
notl
cmp
jle
movsl
add
lahf
arpl
inc
push
push
cmpb
xor
cmpsb
add
js
adc
pop
sbb
mov
stc
fsubrl
repz
xor
adc
pop
addb
mov
frstor
bswap
add
int
cmp
pop
rorl
cltd
lcall
inc
mov
int
sbb
out
pop
test
mov
je
inc
rcl
sahf
and
adc
mov
sub
fsubs
jge
testl
into
rcll
aam
sub
or
gs
std
cmc
inc
cmp
xor
push
inc
loop
sub
stc
push
xor
add
jge
data16
popf
xor
xchg
adc
out
cmp
xchg
xor
mov
inc
adc
jns
xchg
gs
mov
loopne
js
pop
lret
jmp
adc
cltd
mov
mov
stc
roll
int
adc
fistpl
mov
test
sub
pop
mov
ss
jmp
insl
fildll
lea
nop
insb
cmpsl
adc
shrb
test
mov
data16
sub
jb
pop
notl
lea
js
cmp
push
push
pop
popa
xor
adc
pop
xchg
fistpl
cli
lds
and
or
xchg
lds
pop
push
jb
cmc
mov
cmp
sbb
std
adc
cwtl
outsl
insb
mov
stc
push
mov
int
sbbl
mov
mov
xchg
lock
hlt
mov
ret
pop
shll
movsl
test
mov
jbe
and
push
scas
test
adc
cmpsl
ljmp
icebp
push
pop
dec
lods
add
imul
and
mov
loop
rolb
jae
test
push
int3
push
bound
jbe
mov
mov
popa
aaa
cmp
mov
out
jle
jecxz
aam
cli
push
add
and
add
iret
cwtl
cltd
and
lea
and
mov
sbb
adc
test
cmc
ja
outsb
pop
cmpsl
sarl
jb
or
out
sbbl
dec
mov
add
movsl
ficoms
xlat
or
cmp
lahf
cs
xchg
test
orb
cmpsb
jge
and
ja
mov
dec
repz
aam
bound
mov
pushf
pop
dec
dec
xchg
arpl
jg
out
lcall
jns
add
xchg
lcall
loopne
into
sub
adc
and
xchg
ss
negb
insb
sti
popa
xchg
jnp
leave
push
jle
sub
iret
pusha
inc
ljmp
sbb
mov
inc
adc
push
mov
mov
or
and
dec
aaa
imul
xchg
push
push
push
jno
fisubrl
iret
push
add
rorb
hlt
jae
pop
arpl
fidivl
or
sti
mov
inc
xchg
addr16
fidivrl
movsl
aad
lock
ret
pop
mov
sbb
or
xor
addl
popa
leave
xchg
push
push
popf
sub
in
loopne
int
mov
or
and
add
stos
jl
sti
pop
dec
cwtl
popf
cwtl
push
sub
xor
ja
pop
jo
in
push
mov
lea
out
or
push
movsl
xor
cmpsb
loope
xor
mov
aas
lea
ljmp
jno
xor
sub
adc
mov
movsl
inc
ficomps
and
inc
jmp
icebp
jno
test
cmp
adc
scas
pop
and
ret
mov
mov
sub
push
pop
pop
test
push
push
loope
rcrl
push
push
sub
scas
pop
inc
outsb
mov
sbb
shl
sarb
subb
mov
rclb
mov
push
nop
and
push
sbb
jne
sub
dec
mov
push
pop
push
mov
add
add
push
pop
arpl
cs
xchg
pop
cmp
gs
adc
sarl
ss
lret
fstl
fcomp
icebp
lock
or
shrl
mov
into
add
push
cmc
or
xor
stc
and
cmp
xor
ljmp
push
add
pushf
in
data16
xchg
mov
dec
mov
inc
lods
mov
in
mov
mov
mov
mov
loopne
mov
push
adc
push
or
sub
fdivrp
sbb
add
add
lods
fwait
outsl
cmp
mov
xlat
dec
mov
sub
fdivl
mov
loope
lods
jmp
leave
sub
aad
lea
nop
inc
cmp
inc
or
loope
je
outsl
shl
xorl
rolb
mov
test
mov
pop
push
je
out
sub
dec
stos
aam
test
sbb
inc
cmp
cmc
jb
add
fsubs
lahf
pop
roll
notb
sub
fisttpl
mov
push
and
mov
adc
mov
mov
std
das
mov
jle
mov
mov
inc
mov
mov
andb
test
mov
mov
mov
leave
push
loope
pop
mov
pop
xchg
rcrb
xor
hlt
push
and
pop
js
leave
scas
and
ljmp
pop
pop
in
dec
sbb
loope
and
sbb
fstl
pusha
push
jbe
je
cltd
pop
jnp
xor
jge
mov
sbb
and
mov
xchg
inc
and
xchg
dec
add
adc
divb
push
xor
add
sar
jge
xor
gs
in
clc
fs
test
mov
mov
and
imul
arpl
les
jbe
mov
in
les
out
jns
shll
or
pop
mov
pop
push
mov
pcmpgtd
arpl
sub
cvtps2pi
addr16
push
jp
adc
insb
pop
arpl
and
in
dec
js
loope
out
jns
mov
cmpsl
add
in
cmp
push
pop
push
mov
xchg
popf
aas
jmp
nop
push
jmp
fsubrl
xor
cmp
mov
pusha
scas
icebp
push
dec
adc
or
jge
or
xchg
mov
xor
mov
gs
inc
jl
xchg
or
jbe
add
int3
fisubrl
repz
pop
or
int3
fistl
pushf
fdivrp
in
lds
mov
pop
bnd
test
in
dec
push
in
sbb
mov
inc
jge
jmp
movsl
aaa
mov
cltd
out
add
fwait
mov
push
sbb
je
push
psubusb
jo
push
scas
xchg
cmc
and
mov
push
jo
cld
inc
adc
adc
mov
nop
enter
daa
jmp
movsb
lcall
push
fnstcw
lock
sub
pop
push
sbb
and
mov
push
test
inc
inc
jnp
jle
fcom
xchg
pop
imul
aad
dec
sahf
sbb
fadd
jnp
sub
and
mov
lret
repz
push
cmpb
insl
sbb
or
mov
mov
sub
add
xchg
subl
popa
jge
rcll
sbbl
mov
xchg
push
das
lret
inc
push
test
cmpl
out
scas
mov
adc
popa
push
ss
mov
cmp
xchg
cli
cli
testl
loope
cmp
push
xchg
or
mov
out
lahf
cmc
iret
iret
inc
xor
in
outsl
jmp
lds
adc
call
movsw
dec
add
mov
enter
js
inc
xor
and
in
sbb
mov
mov
scas
fucom
pop
or
adc
sbb
cmp
or
rol
stos
xchg
xchg
cli
lcall
push
or
xlat
mov
add
inc
adc
lahf
pushf
mov
jmp
call
dec
aad
mov
nop
and
cld
dec
sub
push
fldenv
xchg
nop
mov
dec
lea
fucomi
call
ror
sbb
aad
adc
dec
fstpt
mov
inc
xlat
rcr
stos
cld
or
push
into
xor
pushf
int3
dec
dec
cltd
cmp
mov
rcll
push
outsl
std
pop
cs
cwtl
in
test
cld
mov
or
lods
mov
mov
fwait
shll
inc
icebp
sbb
mov
adc
push
aam
clc
addr16
ficompl
jae
jl
rorl
push
mov
mov
add
cs
test
add
cmc
mov
pop
mov
mov
sub
cmp
mov
aad
push
call
call
xchg
andb
gs
pop
xchg
stos
xchg
testl
xchg
rclb
push
mov
das
jo
inc
dec
stos
cltd
xchg
fbstp
sub
mov
push
scas
cs
popa
popf
dec
test
movsb
push
xchg
jl
aam
outsb
shr
dec
xchg
or
pop
xor
and
mov
add
xchg
out
lcall
test
or
dec
in
scas
and
enter
sub
cs
je
and
sbb
dec
fnstcw
jg
xchg
xor
jp
js
pop
jnp
jne
jae
mov
xchg
psadbw
mov
notb
out
mov
aam
or
addr16
ret
xchg
loopne
mov
fwait
cmp
jmp
xchg
inc
cmp
jae
in
sbb
pusha
jl
xor
cwtl
jmp
es
out
push
pop
push
jns
or
data16
jle
xor
cs
call
dec
dec
scas
sbb
add
imul
scas
cmp
jo
adc
adc
test
xchg
dec
hlt
or
mov
or
icebp
sub
nop
mov
fisubl
das
rclb
std
adc
mov
pop
sbb
add
mov
ja
and
xor
les
push
movsb
js
sub
cmp
mov
jge
sub
sbb
repz
jp
mov
add
cmpsl
das
dec
jbe
mov
repnz
test
repz
pop
scas
jo
inc
and
mov
outsl
sbb
inc
mov
dec
inc
in
outsl
mov
in
daa
call
mov
das
sub
int3
jp
lahf
testb
xor
movsl
push
lret
mov
daa
push
xchg
in
jbe
cld
fstpl
push
or
xor
mov
pop
nop
add
js
pop
add
ficoml
stc
loope
stos
fsubrl
sub
mov
shlb
ss
dec
in
mov
mov
pusha
jmp
cmp
lret
push
and
push
int
pushf
jo
mov
lahf
pop
push
pop
sub
adc
fmuls
mov
sahf
cmpsb
pop
cmp
push
adc
mov
pusha
insl
mov
fldcw
jnp
mov
outsl
mov
push
pop
cmp
push
xchg
push
testl
sahf
rcr
jmp
or
stc
adc
xchg
mov
xor
or
loop
cmp
jl
inc
adc
add
sub
lods
dec
data16
call
cli
stos
dec
mov
lcall
ljmp
gs
mov
dec
jg,pn
sub
imul
fidivrl
sbb
push
sbb
xlat
leave
fisubl
mov
ficoml
pushf
aaa
notb
jmp
int3
pop
cs
int3
mov
nop
std
cwtl
sbb
pop
iret
inc
xor
adc
pop
int3
add
xor
lahf
adc
movb
sbb
scas
pop
dec
jp
pop
jp
adc
fs
mov
push
pusha
pop
out
leave
ret
int3
or
aas
hlt
xchg
sbb
addr16
dec
shl
and
push
aas
shl
sub
std
push
jecxz
cwtl
mov
jge
mov
mov
leave
cld
adc
ror
sub
pop
ljmp
lea
mov
lret
aam
popl
imul
dec
es
mov
fsubrl
lods
inc
fmulp
mov
lret
cmp
and
nop
int
pop
shl
xchg
add
ret
test
scas
pop
mov
cli
ret
cs
frstor
test
ljmp
sti
pop
inc
inc
cltd
stos
or
out
cmpsl
repnz
test
lret
inc
cmp
std
cltd
leave
mov
xor
sub
mov
and
xor
in
pop
roll
xchg
cmpsl
or
rcll
push
js
addl
mov
xchg
in
mov
out
stos
xchg
xchg
mov
inc
mov
das
sbb
pop
dec
int3
cs
daa
pusha
into
mov
jmp
jne
jne
xchg
mov
daa
jae
aaa
ret
sbb
leave
xor
inc
pop
xchg
repz
subl
cmp
or
sahf
cltd
jp
arpl
mov
and
jnp
and
in
dec
popa
pusha
pop
ds
mov
or
xchg
ljmp
or
mov
cmp
and
outsb
sbb
push
imul
mov
bound
jl
pop
call
pusha
push
fldt
or
imul
cmp
lcall
leave
pop
arpl
inc
filds
ds
insb
roll
and
fcmovbe
push
cli
int3
mov
inc
pop
inc
cmp
fiadds
push
lds
pusha
xor
pop
mov
movsb
add
push
push
mov
adc
cmp
cltd
jge
push
lahf
sbb
dec
push
aaa
cmp
add
mov
mov
xor
dec
mov
fwait
and
sub
inc
xor
cld
cmpsb
push
sbb
push
out
pushf
enter
daa
out
sahf
cmp
jp
sub
xor
dec
or
pop
jge
pop
ror
and
aas
cs
sahf
push
push
imul
sub
or
int
mov
xchg
xchg
dec
pop
sbb
push
push
pop
loope
outsb
fcoml
inc
xchg
sub
mov
adc
xorl
andb
sbb
cwtl
mov
mov
dec
mov
repz
test
sub
int3
popw
iret
sub
push
imul
sbb
sahf
dec
push
test
mov
jg
shll
pop
test
push
lea
lods
xor
and
leave
fmuls
mov
or
lret
popf
shll
cmp
adc
or
mov
loope
pop
cmc
and
outsl
cmpsl
sti
test
jmp
gs
xor
cmc
add
cmp
lret
push
lods
xor
xchg
out
popf
cli
fisubrs
and
sahf
xor
in
icebp
push
xchg
sti
cltd
pushf
cmp
add
ljmp
inc
hlt
rcll
les
xchg
dec
inc
call
rep
xor
xchg
sbb
les
cmp
fldt
sub
andb
jns
jmp
je
cs
pop
dec
aad
xor
nop
fsubs
dec
jmp
rolb
push
cld
fsts
xor
add
ds
into
test
pop
sub
and
dec
cmpsl
lret
or
xlat
push
mov
inc
in
incl
mov
aas
xchg
pop
lahf
jb
mov
rolb
shll
sbbb
adc
std
lods
jnp
cwtl
pop
dec
ss
pop
or
clc
movsl
sar
aas
aad
lret
pushf
test
mov
cmpsb
addr16
cmp
jg
jo
jns
subl
ret
clc
sarb
insl
dec
lret
and
cmpsl
out
xchg
mov
mov
inc
lods
lods
popa
or
mov
ficomps
mov
out
out
sub
rcl
jb
outsl
mov
add
outsb
hlt
jl
lret
clc
jp
adc
push
pop
insl
pop
in
jnp
stos
jb
ret
out
or
xchg
lock
sbb
test
imul
xor
xorl
xchg
push
popa
sbb
ljmp
add
fwait
xor
push
sbb
inc
add
sub
lcall
inc
xor
lahf
or
jge
in
xorb
in
pop
mov
cltd
cmp
ljmp
dec
mov
mov
or
pop
mov
dec
pop
arpl
inc
std
cmp
push
mov
bound
into
add
inc
pop
out
xchg
dec
sub
add
sub
lcall
cmpsl
dec
call
jle
mov
in
loope
pusha
mov
xchg
jns
xchg
push
adc
lds
mov
push
call
add
test
mov
stos
in
jns
das
sbb
or
dec
jb
scas
add
push
and
adc
std
iret
lcall
pop
scas
push
hlt
lahf
xor
arpl
fwait
std
inc
test
iret
push
mov
or
xchg
or
lods
int3
pushf
dec
popa
pop
outsl
lcall
sub
fdivrl
push
push
leave
jae
push
movsb
mov
push
push
fstps
mov
jge
pop
xchg
sbb
mov
lcall
mov
cmpsb
push
mov
mov
lods
scas
cs
cmp
jge
fstp
adc
inc
shrb
in
cmp
lret
or
out
clc
cmp
mov
jno
das
jecxz
loop
scas
cmp
filds
add
movsl
popa
fsubl
jns
dec
lahf
push
out
cmp
popa
or
push
lock
iret
add
fisubrs
fsts
pop
mov
push
mov
movsl
fadd
out
sub
shrb
and
sub
pop
into
stos
rcrb
xorb
pushf
shll
push
or
pop
jecxz
push
add
bound
sub
jp
lcall
mov
mov
fwait
adc
sahf
in
push
test
test
ja
stos
dec
push
mov
js
mov
test
xchg
leave
repz
sahf
std
cmp
mov
cmp
hlt
rorl
sub
das
dec
or
aad
cmc
and
pop
xor
aam
xchg
pop
loop
dec
push
stc
ljmp
add
insl
cs
pop
aaa
popf
mov
add
lds
mov
jne
mov
pop
mov
sti
dec
movsb
jbe
sub
sbb
xor
loopne
or
adc
xchg
imul
into
int
loopne
sbb
repz
xlat
inc
cmp
lahf
imulb
mov
shrl
cs
sub
inc
mov
nop
mov
sbb
inc
pop
inc
in
leave
inc
inc
je
enter
mov
lock
call
dec
pop
pop
loopne
adc
enter
adc
inc
insb
inc
sti
mov
aas
xor
scas
jb
lcall
aam
jns
add
mulb
clc
test
xlat
mov
cmpsl
orl
mov
mov
addr16
push
add
add
jo
cmp
int3
aam
mov
int3
es
mov
xor
int
sbb
xor
mov
mov
pushf
lods
pop
mov
or
in
or
push
cld
xchg
shlb
mov
mov
invd
push
xor
xchg
out
clc
mov
fwait
xchg
ja
mov
popa
stos
cmp
pop
cwtl
mov
stos
popa
ret
insl
test
xchg
aaa
outsl
cmp
test
lar
jle
and
js
mov
daa
fimuls
xchg
das
mov
xchg
fdivp
shr
and
or
loopne
fwait
mov
xor
mov
stos
xchg
add
imul
stc
mov
xor
ja
in
addr16
xor
dec
mov
inc
movsl
mov
movsl
cmpsb
mov
sbb
dec
mov
pusha
inc
push
pop
mov
movl
arpl
fcomps
out
cmc
stos
int
enter
cli
push
orl
out
cmp
sub
sti
je
addr16
loop
jp
xchg
mov
sahf
mov
mov
jle
add
dec
das
or
cmc
inc
fsts
and
inc
adc
in
jae
jne
push
ret
popf
fistpl
mov
out
xchg
stos
pop
xlat
and
int3
jl
cmp
inc
cmpsl
push
imul
sub
stc
leave
icebp
ret
mov
hlt
ljmp
inc
mov
pop
push
or
clc
fsts
xchg
and
mov
test
scas
ds
rorb
es
mov
xchg
sbb
repnz
sub
cmp
dec
sbb
aaa
mov
aas
or
je
add
gs
pusha
jo
ret
jne
push
fwait
fwait
lock
add
pop
scas
or
sub
cmp
sbb
lret
push
cmpsb
jo
pusha
in
and
popa
enter
daa
in
in
cmp
int
jno
or
cmp
fisubl
adc
inc
lahf
sbb
sub
ret
add
popa
fidivl
mov
jbe
pop
add
dec
dec
pop
xchg
xchg
loope
cwtl
js
insl
pop
or
pop
lcall
fisttpl
push
xor
addb
inc
mov
ficoms
push
sub
aas
sub
xchg
lcall
inc
mov
leave
sbb
jecxz
sahf
pop
xchg
test
xor
xor
sub
sbb
dec
adc
xor
add
and
testl
out
cmp
and
jmp
inc
cmc
jmp
add
mov
out
loop
push
push
stc
mov
add
sbb
mov
gs
gs
inc
jmp
in
in
ljmp
loopne
cwtl
push
pop
test
jno
jg
mov
adc
scas
mov
mov
test
cmp
mov
sub
incl
and
pushf
cmp
shr
adc
mov
pop
nop
mov
pusha
dec
test
mov
or
nop
mov
jecxz
sti
push
or
icebp
call
int3
xchg
call
adc
or
dec
jge
xor
xor
add
inc
repz
out
inc
push
shr
sar
aaa
jb
add
and
push
psrlq
dec
fdiv
jecxz
and
sti
pop
dec
cwtl
shll
mov
enter
add
dec
mov
jp
xchg
mov
xor
ficoml
cmc
shlb
out
xlat
push
orl
es
daa
insl
sbb
aaa
dec
pop
and
cmpsl
in
jp
mov
inc
icebp
popa
ret
and
mov
xor
push
and
popa
xchg
pop
sub
mov
testl
fcmovnbe
fstpl
add
out
mov
push
popa
sarl
pop
inc
imul
out
sarb
push
and
jge
add
pusha
stos
xor
daa
mov
jo
inc
xchg
sub
std
sarb
test
repnz
mov
mov
or
es
fwait
loope
inc
push
popa
mov
add
std
mov
divl
fcoml
or
mov
xchg
cmpl
mov
pop
mov
vrcpps
dec
mov
and
dec
movsl
mov
inc
in
nop
dec
mov
cmp
dec
in
push
jne
push
mov
out
aam
pop
bound
iret
jns
lret
pop
xchg
push
popf
inc
sbb
mov
repnz
popa
sub
idiv
sbb
jp
and
add
or
dec
pop
cmpb
mov
pusha
call
sbb
xchg
push
scas
jmp
sbb
and
test
jmp
add
aam
pop
pushf
dec
push
es
imulb
cmpsl
scas
mov
mov
imul
scas
leave
js
push
mov
xchg
adc
inc
out
iret
pop
fs
ret
pop
pop
sbb
pop
hlt
xor
adc
inc
mov
or
fisttpll
dec
dec
stc
xchg
mov
icebp
cs
int
arpl
sub
and
sub
mov
adc
int3
movsb
movsb
add
insb
jbe
xchg
jge
push
mov
aaa
jbe
add
ret
add
push
push
dec
xor
je
jle
ss
pop
push
stos
scas
in
mov
and
pusha
cmp
das
push
addr16
inc
fidivs
andl
sub
addr16
in
imul
dec
add
mov
ds
and
movsl
outsl
inc
shll
scas
xchg
mov
push
jecxz
or
jle
xchg
xor
pop
ljmp
mov
loopne
push
mov
pop
fcompl
test
xchg
outsb
add
rclb
les
nop
mov
lcall
mov
add
mov
sub
popa
int
lcall
dec
test
push
push
jo
mov
xlat
sbb
jp
sahf
xor
test
lret
mov
pop
jg
outsl
jp
test
mov
ret
cmpsl
ds
adc
xlat
sub
fdivrs
cltd
out
lret
imul
push
in
or
stc
into
push
cmpl
xor
cmp
outsl
inc
jecxz
loop
daa
cmp
mov
adc
push
sti
add
out
cltd
data16
xchg
lods
in
mov
out
fs
ja
and
and
in
xor
js
cmpsb
incl
gs
jmp
loopne
cmp
adc
inc
imul
pop
repz
mov
sbb
cmp
stos
sbb
test
push
pushf
jecxz
hlt
jmp
add
jnp,pn
nop
aad
pusha
ja
imul
inc
jg
jne
aaa
push
xor
fucomi
jb
fstpt
or
movsl
lea
cmp
lcall
pop
inc
cmp
adc
xor
imul
fbstp
jnp
mov
inc
xor
dec
aas
jo
sub
cmp
jecxz
ljmp
mulb
bswap
std
mov
inc
mov
mov
addr16
rolb
jmp
xchg
or
or
aas
das
fdiv
and
cmpsb
and
aam
xor
ret
movsl
push
arpl
mov
out
insl
fsubp
dec
adc
cmp
jecxz
ss
cmp
sbb
xchg
pop
mov
repz
mov
dec
and
sub
test
enter
xor
pop
fnstsw
push
jno
sub
repz
loope
out
sbb
cmp
xor
inc
xchg
lds
push
add
lock
adc
jns
mov
sub
pop
iret
test
notl
sbb
insl
rcrl
inc
xchg
fwait
adc
add
add
sub
pushl
das
cld
sahf
or
xor
xchg
rcrb
lahf
mov
sbb
std
dec
cwtl
negb
cmpl
mov
movsl
cmp
dec
enter
xchg
mov
mov
out
pop
adc
inc
dec
xchg
pop
sbb
out
out
sub
icebp
adc
addr16
ss
jp
js
mov
stos
gs
call
push
leave
jle
shll
in
clc
shll
jo
fbstp
lock
loope
test
jno
lock
es
push
jae
mov
push
popf
sub
ja
pop
inc
sahf
push
fidivl
stos
ds
outsl
sbb
int3
nop
imul
push
scas
sub
inc
push
notl
adc
push
test
add
ret
repz
push
cli
jge
subb
arpl
push
or
pop
clc
out
or
sub
lahf
push
mov
int3
pop
cmpb
int3
push
movsl
lds
popf
push
mov
arpl
mov
fdivrs
shll
sbb
jbe
xor
jge
aad
sbb
inc
outsb
aaa
xor
sbb
add
push
cld
dec
mov
xor
cmp
add
scas
lret
mov
and
fsub
cmp
movl
insl
fcompl
in
repnz
jbe
pusha
cmp
jge
and
push
sub
adc
ds
loopne
and
addr16
pop
push
pop
push
mov
pop
test
mov
popf
xor
sbb
push
pop
adc
es
jecxz
mov
ret
movl
mov
mov
in
pop
pop
out
stos
jb
lods
cmp
inc
pop
lock
addl
das
sbb
xchg
adc
pop
xchg
mov
lcall
pop
mov
mov
add
mov
add
mov
and
mov
es
adc
pusha
inc
ss
mov
fdivr
push
jecxz
add
pop
lret
out
into
inc
xchg
cmp
jle
or
mov
inc
cmc
jns
pop
xor
repnz
and
movsb
loop
gs
stc
vmread
test
add
cmp
outsb
hlt
jecxz
ret
cli
stos
movsl
pop
xor
add
popf
mov
push
push
xor
xchg
popf
adc
loopne
in
insl
pop
ret
cmp
adc
das
imul
cli
rep
cmp
xchg
sub
xlat
sbb
js
lock
add
inc
sub
sub
pushf
mov
cmc
jmp
mov
ja
sbb
stos
nop
inc
data16
push
cmp
idivb
outsb
int3
sub
push
jecxz
aas
sti
punpcklwd
lea
test
lret
pop
stc
lahf
out
mov
mov
fistl
inc
cltd
inc
add
sub
sbb
jb
insb
out
adc
or
sub
imul
cwtl
inc
push
mov
jmp
mov
lock
jmp
mov
pop
das
aam
push
aam
mov
add
cld
das
mov
test
mov
pop
insl
push
ret
xor
lret
cmp
dec
dec
or
gs
pop
lods
pop
mov
mov
jp
or
xchg
gs
pop
imul
rcrb
jb
sub
movl
xchg
push
clc
xor
xor
dec
ljmp
xchg
stos
jno,pn
out
xchg
pop
jle
or
cmp
xor
mov
out
cltd
faddl
mov
xor
dec
dec
lret
push
xchg
push
sbb
cmc
jae
repnz
or
cs
aas
dec
pop
push
cmpsl
outsb
pop
add
xor
xor
aas
or
notl
xor
pop
repnz
dec
icebp
ja
mov
jl
sbb
test
mov
test
mov
fs
jp
out
xchg
movsb
bound
pop
test
cmp
jns
clc
jmp
test
in
mov
idivl
jg
mov
out
insb
push
jne
jnp
push
lahf
jle
es
fwait
sbb
rcr
lret
mov
int
push
or
jae
inc
pushf
push
or
inc
popf
push
mov
movsb
lcall
aad
mov
imul
fsubrs
ds
jl
iret
push
movsl
mov
pop
mov
and
lret
and
arpl
sbb
sbb
inc
pushf
cmp
jbe
inc
mov
ja
push
adc
add
dec
jecxz
pop
sub
popa
lds
rcrb
mov
mov
jmp
dec
mov
movsb
mov
dec
out
jbe
push
pop
jge
jo
sbb
orb
jnp
add
lret
jl
mov
push
inc
jo
xor
adc
mov
and
or
std
sub
cld
lret
stc
in
fxch
pop
enter
daa
loop
sarb
dec
jbe
sti
push
sub
rcrb
cmp
push
lds
in
cli
lahf
jp
repz
mov
test
xchg
stos
lods
xor
out
fisttpl
mov
mov
out
outsb
pop
adc
fsubrl
ret
out
stc
outsb
enter
mov
push
ror
or
dec
into
rolb
aam
mov
push
and
push
xor
xchg
int
jo
sub
call
out
push
push
mov
mov
xchg
cmpsl
sbb
mov
js
jp
inc
jnp
add
in
jg
mov
and
mov
and
ss
fists
cmp
mov
xchg
test
enter
cmpsb
mov
lods
jmp
or
into
sbb
cltd
cmc
inc
sub
xor
inc
call
loop
push
stc
loop
adc
lock
add
arpl
test
mov
pop
out
outsl
scas
cli
fldl
jns
rcll
in
or
ljmp
xor
popf
pop
loop
push
adc
movsb
mov
repz
xchg
in
outsl
mov
cmp
sub
sub
add
cmp
jmp
cmp
inc
pop
insl
aad
sub
pop
cwtl
jno
negl
fldenv
popa
push
jecxz
inc
cmpsl
adc
sbb
nop
int
dec
dec
and
mov
adc
repz
ds
fcmovnb
mov
ret
inc
mov
inc
addr16
aas
scas
adcb
loopne
ret
and
jl
sarl
dec
std
lock
cwtl
add
mov
pushf
outsb
cld
push
mov
push
mov
push
sbb
ret
das
lcall
mov
loop
mov
ret
sti
xchg
mov
pusha
mull
loope
repz
out
xchg
lods
ret
pop
jecxz
nop
pop
jno
popf
lods
and
xor
inc
pop
mov
shl
sbb
test
dec
insb
mov
imul
popf
and
lea
xchg
jae
insb
ljmp
rcrl
stos
sbb
sbb
push
adc
push
mov
loope
jle
or
lret
cltd
adc
dec
xor
pop
push
xchg
lret
xor
sub
mov
cmp
fwait
outsb
into
mov
add
dec
xor
pushl
and
aad
nop
or
dec
adc
jo
and
mov
xchg
test
dec
jle
push
inc
mov
pop
mov
cmpl
mov
and
pushl
jno
cmp
add
jns
adc
mov
xchg
iret
out
popa
dec
sub
out
ret
addr16
lcall
cmp
stos
insb
mov
xor
outsl
pop
in
cmpsb
pop
pusha
mov
test
xchg
xchg
jmp
cmp
adc
adc
push
into
shl
popf
ja
cli
mov
jecxz
rsm
and
loope
in
lock
sbb
imul
jmp
push
test
in
adc
dec
sbb
cs
lret
pop
sarl
hlt
push
xor
arpl
push
mov
push
or
dec
xchg
mov
sbb
pop
pop
in
add
adc
xchg
je
inc
mov
or
leave
jge
movsb
inc
sub
push
fs
loope
into
ljmp
pusha
mov
and
fwait
nop
loopne
mov
or
jae
jg
sbb
daa
lahf
adc
jo
xor
sbb
cmp
rclb
inc
mov
dec
cmpsb
jl
imul
add
xchg
jp
in
mov
sub
popa
lret
lea
test
and
dec
popa
push
pop
add
test
lahf
shrl
mov
mov
mov
scas
or
xchg
add
push
dec
lods
loope
int
fcompl
add
outsb
sub
mov
shlb
cmc
push
adc
cli
sbb
jae
and
push
int
mov
sub
int
lcall
jl
xchg
add
int
cmpsl
sbb
push
jg
inc
pop
mov
inc
or
dec
in
adc
xchg
push
push
inc
cwtl
fsubrs
pusha
testl
sub
iret
or
test
cmc
pop
stos
xor
push
enter
push
stc
jge
add
js,pt
iret
lods
pop
mov
lods
lcall
out
and
mov
test
int3
in
jae
out
sti
mov
cwtl
xlat
das
movsb
cmpsb
jo
loopne
xchg
into
pop
add
adc
jno
lea
aad
les
outsl
repz
aad
xchg
scas
push
inc
sbb
out
mov
xlat
xorb
mov
in
sbb
movsb
adc
nop
cli
fldl
mov
scas
aaa
je
cltd
push
jecxz
xchg
js
adc
mov
insb
enter
pop
addl
mov
and
aas
pop
fs
outsl
inc
prefetch
aas
dec
arpl
jb
cmpsl
orb
inc
and
xor
rorl
sbb
std
xchg
ret
das
cwtl
mov
push
sub
cld
inc
cs
ss
mov
xor
mov
or
lock
add
mov
lret
fisubrs
aam
fidivrs
es
mov
mov
cli
dec
add
cmpsl
loopne
aam
jge
push
icebp
mov
fisubrl
mov
shlb
and
int
push
pop
test
stc
push
sub
mov
dec
mov
imul
rcr
popa
pop
clc
fsubl
jno
mov
cmp
sbb
cld
popa
sbb
xor
out
pop
and
xchg
lcall
paddusw
adc
frstor
cltd
dec
cmp
xor
fs
mov
ss
dec
cltd
dec
fs
addb
insb
xor
shll
xchg
push
in
not
add
imul
mov
sub
sbb
or
dec
lret
mov
push
inc
mov
dec
pushf
jp
loop
call
inc
dec
pop
push
mov
repnz
cli
call
mov
rcl
push
mov
bound
jbe
xchg
addb
decb
push
jmp
aaa
addr16
adc
sub
imul
jnp
mov
frstpm(287
test
push
ljmp
mov
jae
adc
xchg
in
nop
popf
sahf
jo
mov
and
fisubl
add
sbb
add
imul
js
push
rcrb
int3
pop
mov
push
cmc
jmp
inc
fs
clc
dec
mov
arpl
cwtl
stos
or
leave
das
inc
inc
mov
lods
xchg
push
in
int3
push
and
mov
mov
inc
lds
sbb
sbb
mov
pop
xchg
mov
cmp
mov
mov
loope
adc
sarb
sbb
sbb
aaa
jb
out
or
add
jl
js
dec
out
jno
push
or
cmpsl
xor
lret
pop
fildll
lods
bound
push
xchg
out
mov
cmpsb
jmp
push
enter
daa
loopne
jge
pop
rolb
fs
pop
cmp
cld
sarb
push
daa
movsl
mov
jb
sbb
lahf
mov
cld
mov
add
sub
popa
test
enter
jp
fs
shrb
push
jmp
push
fadd
sbb
sub
mov
loope
adc
jle
jo
or
dec
and
mov
out
loopne
adc
jns
mov
fiadds
cmp
int
xlat
inc
sub
aaa
icebp
lcall
adc
sbb
jb
test
xor
stos
jg
out
mov
mov
in
rcrl
popf
adc
jbe
cmpb
fsubrs
dec
push
inc
call
mov
xchg
fdecstp
cmp
inc
mov
into
loop
fcomi
into
or
sbbb
loop
push
dec
stc
xor
mov
add
dec
inc
into
mov
mov
xor
mov
in
xor
mov
fisubrs
sti
out
cli
out
lods
loopne
xorl
inc
and
les
repz
sbb
sbb
sub
xlat
sarl
mov
pushf
popl
jmp
jl
cs
adc
out
mov
les
dec
mov
fsts
push
xor
push
jecxz
and
sbb
or
xchg
sub
inc
pop
add
add
ret
dec
adc
pushf
test
pop
pop
lret
inc
xchg
cmp
aas
in
inc
out
jb
adc
jns
xor
cmp
rcrl
lock
fs
ds
mov
push
jecxz
mov
bound
lret
movsl
mov
insb
mov
es
lock
add
pop
push
inc
mov
cmpb
ret
loope
mov
rcl
insl
fwait
jb
dec
push
idivb
xchg
je
lods
cltd
sub
mov
movq
push
sahf
adc
cwtl
or
test
and
mov
mov
push
ret
or
fstp
repnz
clc
pop
neg
xchg
icebp
push
cmpsl
ljmp
sbb
jb
sti
add
out
mov
cmp
push
insb
xchg
gs
cmp
add
adc
cltd
orl
mov
cmp
dec
add
test
aad
xchg
pop
repnz
lcall
int3
sbb
push
nop
sub
sbb
outsl
add
out
xor
cmp
ja
ret
mov
xchg
push
mov
mov
mov
mov
pop
and
ja
push
mov
inc
inc
fistps
pop
fdivrl
dec
push
xchg
xorl
xlat
mov
add
out
das
ret
cmp
movsl
xchg
dec
push
lock
out
sub
fnstsw
out
addr16
push
fistpll
int
mov
jno
insb
xchg
lret
jnp
mov
xor
mov
sbb
out
loop
fildll
js
jmp
push
dec
mov
cmpb
jnp
popf
lds
dec
push
popa
repz
stos
or
push
in
repnz
jne
mov
cmp
adc
jnp
xor
pop
das
pop
hlt
lods
dec
fsubl
gs
inc
lcall
push
pop
adc
pop
xchg
insl
mov
int3
or
pop
mov
pop
lret
mov
stos
sbb
fcmovnu
repnz
sbb
mov
bound
jl
jbe
jno
jge
cwtl
pusha
sbb
jnp
aaa
xor
aam
adc
fnstcw
push
dec
pop
lock
fmuls
jo
cmpsb
inc
scas
inc
fwait
and
mov
test
and
cmpsb
sbbb
in
mov
enter
daa
mov
jno
adc
sub
add
jne,pt
movsl
xchg
xor
and
xchg
jg
add
xlat
test
mov
int3
xor
sbb
adc
pop
adc
push
cmp
loope
aas
rcr
outsl
mov
sub
daa
push
outsb
icebp
jb
test
insb
imul
stc
sbb
sbb
mov
and
rolb
cmp
sub
cwtl
imul
and
lcall
rorb
ljmp
fcomi
and
adc
mov
xor
pop
fs
mov
cmp
lds
cmp
in
pop
testl
imul
or
fsubl
cmc
xchg
sub
fucomp
outsl
lahf
or
stc
jmp
pop
adc
aad
add
jg
retw
out
lods
push
inc
jmp
mov
bound
xor
add
dec
cwtl
lcall
xchg
fisubs
adc
pop
aas
lds
pop
and
les
and
out
cmc
xchg
xor
mov
cmp
xlat
add
sub
cmc
pop
mov
cmp
jmp
inc
mov
push
adc
iret
fsts
jecxz
pop
inc
fimuls
out
mov
jecxz
clc
dec
sbb
lea
pop
std
mov
ss
dec
jmp
imul
les
inc
sbb
mov
or
mov
dec
lock
dec
and
cwtl
outsl
shrl
sbb
xor
jno
adc
jmp
jp
xchg
xchg
xchg
sbb
adc
cmp
movsb
push
lock
mov
or
adc
inc
mov
or
insl
adc
dec
stc
mov
mov
imul
lods
add
and
push
adc
and
add
pop
out
shrb
movaps
ret
cli
test
mov
mov
cmp
push
xchg
fldl
push
and
ljmp
hlt
pop
inc
adc
ljmp
xchg
sub
mov
setnp
add
hlt
daa
cltd
mov
sti
mov
cmp
mov
test
mov
or
sarb
mov
dec
add
cs
fwait
sti
jmp
inc
add
lahf
pop
or
push
cmpl
out
inc
push
and
inc
xchg
pop
addr16
mov
mov
scas
xor
pop
ret
ja
cmp
ret
jbe
ret
mov
shlb
push
jne
ret
hlt
mov
pop
lock
push
aam
int
sub
and
xor
mov
add
or
fdivs
mov
movsb
inc
mov
cmp
gs
test
das
add
pusha
mov
pop
jno
add
jmp
pop
pop
mov
push
std
push
pop
jle
popf
in
call
ret
ret
cmp
xor
sbb
dec
iret
imul
shrb
pop
jge
adc
in
iret
xchg
push
scas
ret
std
pop
data16
hlt
notl
arpl
call
cmpsb
push
xchg
jl
les
xchg
pop
out
rcr
sti
inc
dec
lds
iret
rol
dec
mov
add
and
sub
push
movsb
out
sub
mov
mov
mov
cmp
aaa
lock
les
je
add
jl
mov
dec
int3
xor
push
shl
out
lret
dec
inc
jo
add
scas
es
cmp
add
mov
add
mov
enter
daa
fisubrs
and
jge
dec
jno
out
sub
push
in
cmp
push
cwtl
and
movsl
cltd
mov
stc
lahf
idivb
lea
sar
xor
int3
out
cmp
clc
out
js
or
pop
push
int3
jne
cmp
push
scas
xor
sbb
mov
outsb
push
rclb
int3
pop
mov
xor
mov
or
in
push
adc
and
stos
jg
ds
or
into
lock
cmc
pop
inc
xchg
into
lcall
scas
mov
cmp
sbb
sbb
sahf
add
repz
mov
mov
sti
sub
jmp
flds
cmp
lahf
subb
daa
jo
rolb
add
pushf
jmp
or
jp
into
test
jl
pop
hlt
pusha
xor
dec
pop
outsl
jle
jo
push
movsl
out
mov
pop
cld
add
inc
jne
lods
dec
xchg
orb
pop
cli
test
icebp
sbb
mov
cmp
jno
incb
adc
mov
mov
xchg
adc
ljmp
and
xchg
xchg
clc
stos
cld
sbb
lahf
jge
xlat
aas
pop
pop
sub
ljmp
in
or
cmp
call
in
nop
mov
xchg
mov
inc
icebp
xchg
flds
cmp
jecxz
adc
push
gs
lea
pop
inc
jg
pop
js
jp
jo
aaa
dec
ljmp
pop
dec
mov
movsb
mov
push
aas
sub
call
and
dec
mov
idivb
in
or
iret
fs
mov
nop
addl
sub
mov
fs
xchg
push
xor
mov
lock
imul
jg
ret
jmp
jne
xor
dec
hlt
sub
cmpsl
fucomp
mov
icebp
inc
push
push
mov
sub
loop
sbb
icebp
add
push
cmc
mov
ds
ja
push
leave
mov
inc
inc
pop
mov
push
notl
dec
mov
clc
lea
xchg
outsl
ss
jae
daa
popa
bound
pop
lock
inc
out
test
push
xchg
outsl
icebp
xchg
mov
psubd
cli
cltd
out
push
lods
xor
inc
pop
mov
aas
notb
into
cmp
cmp
xchg
aam
shll
inc
dec
fwait
sub
push
imul
and
mov
mov
xor
xor
or
and
lods
pop
pushl
push
or
pop
jge
jo
pop
lret
dec
cmp
or
push
orl
inc
mov
stos
out
in
jmp
inc
jns
jo
xchg
loope
faddl
xchg
cmp
rol
call
jp
das
cli
mov
sub
dec
jnp
psubw
sbb
in
mov
pusha
and
dec
fs
rcll
jmp
push
hlt
fcoms
iret
popf
adc
sub
fists
push
stos
lock
dec
inc
nopl
stos
inc
imul
das
push
mov
outsl
ss
icebp
or
ret
push
pop
popf
gs
inc
mov
arpl
mov
jo
cmp
adc
rcll
xchg
sbb
adc
pop
ficomps
jp
shl
push
mov
push
ret
mov
mov
mov
xchg
jge
rcll
dec
scas
pop
scas
or
jno
adc
movsb
jl
adc
cmp
scas
push
mov
icebp
xor
fsubrl
scas
add
shr
dec
in
adc
jmp
outsl
cld
cmpsb
mov
enter
popf
enter
daa
fisttpll
mov
jno
fists
movsl
out
dec
cmp
mov
movsl
mov
push
lahf
adc
sbb
test
lret
popa
cmp
xor
pop
stos
fs
cmp
push
jo
pop
scas
push
lcall
fadd
jecxz
sub
and
mov
cs
setbe
mov
push
sbb
dec
movsb
and
ss
push
inc
jle
int
mov
add
lds
lods
push
shll
mov
or
sahf
test
mov
addb
jg
jmp
dec
mov
sub
xlat
adc
lock
dec
jecxz
cmp
pop
jnp
idivl
xchg
lret
pop
rcrl
cmp
jns
or
lret
loopne
cmc
and
cmp
xchg
mov
mov
stc
pop
xchg
cmc
adc
mov
inc
leavew
jbe
lods
ss
lret
mov
je
mov
js
xor
jnp
pop
jno
sti
outsl
pop
mov
arpl
inc
gs
loopne
int3
pop
pop
jge
mov
imul
loopne
repz
xchg
mov
fnstcw
sub
jle
sub
mov
nop
sub
sub
xchg
cs
xchg
aad
sbb
push
mov
shl
fnstcw
ret
inc
insb
repnz
and
fimull
mul
xchg
mov
mov
enter
adc
lods
dec
jne
lock
inc
sub
mov
out
or
jb
mov
dec
ficoms
and
dec
mov
idiv
in
std
xor
cwtl
test
imul
ficoms
lahf
cld
in
dec
or
movsb
pop
out
cmc
lret
adc
mov
das
cmc
dec
test
mov
fnstenv
loope
dec
adc
insl
push
cmp
out
jmp
inc
mov
sbb
xchg
lods
fimull
xchg
mov
dec
mov
push
mov
and
jns
sub
push
repnz
pop
pop
push
or
mov
push
sar
enter
scas
insl
adc
out
imul
ds
enter
call
arpl
push
std
movsl
decl
pop
fsubs
cltd
es
loope
sbb
lods
mov
inc
jecxz
dec
xor
dec
in
add
cmp
cmp
test
bound
jns
es
aad
sar
nop
loop
xor
or
sbb
cmp
xchg
sti
xchg
inc
mov
xor
cmp
hlt
ja
icebp
orl
in
cmpl
dec
dec
std
sbb
mov
ds
add
dec
jle
xor
stos
in
adcl
out
xorl
into
call
pusha
jp
outsb
pop
mov
inc
ja
aad
daa
jnp
pop
xlat
jle
sub
in
das
or
lret
or
or
cmpsb
mov
inc
jae
leave
jae
adc
std
popf
cmp
sub
push
lock
pop
das
repz
fcomip
imul
push
call
cvtps2pd
push
movl
hlt
lea
arpl
xchg
inc
mov
stos
cli
push
test
xchg
fiaddl
pop
int3
lret
pop
inc
fs
inc
in
lds
xor
sti
mov
mov
test
mov
movsb
cld
push
push
push
out
push
sbb
mov
loop
pop
ja
aaa
outsb
pusha
test
pop
test
add
inc
sbb
add
xor
aaa
icebp
mov
in
cmp
cmp
pop
push
mov
test
or
enter
daa
fdivrl
cmp
dec
push
jno
cld
push
sub
movsl
push
cmp
pop
ds
push
movsl
cmpsl
push
cmpsl
and
mov
cmp
sbb
xor
stc
pop
insl
in
inc
pop
fs
js
sub
into
cmp
and
loope
clc
mov
jo
push
sub
inc
sbb
outsl
out
pop
inc
mov
xorb
lret
sbb
or
and
add
ds
push
dec
sub
pop
inc
add
push
mov
les
andb
jg
pushf
repz
and
mov
xor
and
mov
xor
adc
ja
lret
jb
out
out
or
fidivrs
out
pop
into
outsb
push
std
cmc
ljmp
outsl
cmp
jo
cmp
cmpsb
stc
adc
scas
adc
scas
dec
add
in
lods
sbb
push
mov
cli
movhlps
xor
sbb
sti
push
or
mov
loopne
or
pop
adc
data16
les
jmp
xchg
jle
fs
adc
or
pop
mov
cmp
and
sbb
cs
xchg
rcl
or
nop
inc
cmp
roll
add
je
lahf
loopne
push
or
and
and
bound
mov
pop
fimuls
nop
adc
cwtl
mov
fcmovnu
mov
pop
xchg
and
jmp
aas
push
or
dec
mov
rcll
stc
cmp
fcmovbe
mov
mov
testb
push
mov
xorl
lret
popa
rcrb
xchg
mov
jne
lock
loope
aam
or
pop
xchg
sbb
ret
sbb
arpl
insl
aaa
inc
mov
cmpsl
fstpt
pop
icebp
lock
enter
out
mov
outsl
andl
aaa
scas
mov
inc
pop
xor
in
push
sub
push
pop
mov
sub
pop
xchg
ja
mov
xchg
in
sub
pop
dec
xchg
popa
nop
shll
mov
pop
out
dec
xchg
dec
xchg
std
cmp
adc
mov
xor
shll
mull
xchg
jne
pushf
movsl
mov
xchg
sbb
push
adc
fwait
mov
mov
add
lock
das
sbb
xor
mov
in
je
xchg
dec
adc
mov
rorb
add
cld
dec
xor
inc
cmp
add
loopne
sub
mov
shr
out
stos
and
bound
cmc
addr16
ja
cli
and
adc
lea
imul
mov
inc
jp
out
inc
jns
insb
inc
and
jle
sub
int3
adc
pop
xchg
ja
sub
pop
xchg
jns
inc
jmp
jle
mov
jnp
push
pusha
or
xor
push
pop
dec
les
jbe
js
xchg
jmp
jb
inc
xor
push
das
lahf
das
adc
test
pop
or
fsubrs
fcmovnbe
mov
cmpsb
pop
or
xor
inc
add
fidivl
cmc
lcall
sub
cs
in
add
icebp
pop
rclb
jb
aaa
sahf
cmp
sti
cmp
leave
nop
cmpsb
stos
movsb
xchg
push
ds
es
lcall
sub
rolb
add
jmp
scas
inc
pop
dec
sbb
leave
xor
xchg
xchg
scas
ret
cmp
lods
lods
cmp
sbb
cmpsb
mov
js
out
add
cmp
imul
cmp
sub
cs
andb
movsl
scas
sar
and
int
push
push
or
fists
add
sub
xor
outsl
scas
xor
mov
add
adcb
cmp
xchg
xchg
shl
sarl
sub
xor
adc
vhaddps
inc
inc
dec
sbb
mov
and
sbb
push
inc
inc
push
int
out
jae
out
fnsave
ret
add
lcall
orl
fistps
divl
jg
push
push
mov
xchg
mov
adc
lods
roll
cmp
shrb
fs
fs
test
dec
and
pop
pop
or
mov
push
mov
cmc
mov
ja
dec
loopne
outsl
sbb
loop
mov
inc
adc
hlt
push
add
push
inc
iretw
aad
lods
add
dec
mov
stos
out
cmp
xor
cltd
leave
sti
int
imul
rolb
mov
pop
mov
and
les
or
inc
sbb
sbb
push
jnp
xlat
cld
stos
hlt
sub
cmp
out
dec
jmp
or
notb
aad
cld
int
sbb
cmpsb
dec
pop
out
inc
sub
fldenv
mov
je
iret
aam
lock
daa
jno
leave
rolb
mov
or
jnp
stos
dec
pop
fisttpl
pop
mov
out
and
and
adc
pop
sti
inc
jb
aaa
add
int3
jmp
lcall
xorb
sbb
mov
add
orl
fimuls
addl
das
mov
inc
mov
adc
adc
pop
andl
sub
dec
in
pop
cmpsl
fisubrl
mov
stos
jge
mov
cli
mov
xchg
cmp
mov
inc
pop
arpl
sub
mov
test
ljmp
xchg
push
fstpl
in
xchg
sub
add
int3
inc
fldenv
cs
icebp
mov
jl
scas
push
xchg
xchg
inc
je
push
mov
movsb
movhps
add
adc
mov
sub
dec
sbb
xor
xchg
push
sbb
shrl
outsb
mov
push
mov
pop
mov
dec
push
cmpsb
xor
or
or
add
dec
imull
cltd
aam
mov
outsl
mov
scas
jo
ja
int
dec
and
adc
lods
adc
xchg
mov
ret
loope
jne
push
jmp
jbe
shr
mov
bound
add
jns
cmp
popf
xchg
out
push
dec
sub
in
mov
mov
jp
or
insb
stos
mov
jle
pop
and
rcll
pusha
divb
fisttps
cmp
and
rolb
jae
and
pop
popf
mov
jb
pushf
sub
stos
dec
sub
lea
sbb
icebp
imul
les
jb
adc
dec
out
mov
mov
hlt
and
std
arpl
pop
aam
test
iret
push
push
orb
xchg
and
cmp
mov
mov
lds
shlb
repnz
dec
ret
pop
push
imul
popa
jbe
scas
xor
push
push
sbb
js
in
jge
or
loope
fadds
jl
sbb
cmp
pop
xchg
divl
in
xor
mov
repnz
jno
dec
push
push
and
je
test
adc
push
enter
daa
fcmovbe
sbb
dec
aas
adc
mov
pop
cmp
test
ds
mov
mov
cltd
and
adc
test
in
mov
xor
push
in
pop
mov
lahf
js
lcall
push
push
loope
shlb
fadd
pop
nop
sub
in
adc
mov
jns
sbbb
sbb
xchg
xor
jo
push
dec
iret
daa
int
insb
xlat
sub
xor
inc
test
lcall
push
mov
rcrb
jle
sahf
nop
lret
jle
fiadds
push
adc
mov
cmp
adc
into
divb
adc
add
mov
push
idivl
xchg
rcrl
loope
out
mov
cmc
js
mov
outsl
cli
xchg
call
stc
jle
sub
add
xor
jmp
bound
mov
pusha
std
xor
in
pop
sti
jl
push
dec
xor
shl
lret
fimull
lahf
adc
cmpl
or
repnz
sbb
mov
sub
les
sbb
adc
cmpsl
push
cs
or
div
pop
dec
mov
call
fstps
jmp
jecxz
sbb
lea
lcall
icebp
jge
inc
lds
adc
cwtl
jl
xchg
cmp
fstpt
int
pop
inc
aas
idiv
jb
fidivl
dec
inc
sub
and
pop
fcmovbe
xor
mov
les
std
sub
cwtl
fcmovb
pop
mov
xchg
repnz
mov
andl
ja
mov
hlt
mov
cmc
jecxz
lcall
mov
int3
push
mov
ret
cmp
cltd
shll
add
sahf
sub
loop
xor
and
lods
sbb
mov
mov
xchg
or
xchg
pop
adc
rorb
dec
push
mov
loope
push
push
cmp
lds
cmc
xchg
imul
ljmp
out
pushf
mov
icebp
out
adc
cmc
xchg
mov
js
mov
pcmpeqd
cltd
lret
push
xchg
xor
mov
mov
dec
bound
dec
push
and
adcl
orb
arpl
bound
add
es
ljmp
jns
insl
mov
cli
in
int
xchg
call
jl
mov
imul
dec
push
and
inc
imul
mov
dec
cmpsb
xor
pop
xchg
clc
mov
cs
imul
jns
or
xchg
or
sahf
and
xchg
insl
ret
enter
int3
inc
addr16
lret
fs
mov
push
shrb
jnp
aam
ljmp
fwait
pusha
xchg
data16
imul
mov
inc
xchg
movsb
shll
ja
out
jb
scas
sub
mov
fistl
push
and
xchg
imul
scas
or
xchg
adc
sbb
ret
dec
pop
jns
outsb
hlt
outsb
jne
arpl
and
mov
push
add
ficompl
outsl
push
pop
rorb
xchg
fisubrs
push
lds
stc
fadd
dec
lods
push
mov
mov
sub
movsb
popf
pop
pop
push
faddl
add
repz
cmp
jecxz
xor
jl,pn
lret
idiv
decl
aas
xchg
xor
dec
lock
scas
addl
push
and
inc
add
pop
cmpsb
xchg
or
or
fnsave
add
fxch
pop
cmp
jno
sub
cmp
jb
ds
pop
lods
movsl
mov
ficompl
hlt
jb
test
testl
mov
xchg
pop
dec
js
xor
mov
test
fdivl
push
sub
fwait
mov
sarb
add
subb
sbb
divl
or
int
int
sub
js
pop
rorl
push
sub
jo
sbb
subl
add
les
mov
out
mov
mov
negb
ss
je
cmp
inc
es
test
xchg
cmp
push
mov
into
pop
pop
sub
aas
mov
loopne
fnstcw
adc
xor
jl
add
pushf
data16
aas
lods
shlb
mov
adc
mov
adc
dec
in
lret
adc
mov
out
cwtl
xchg
ficomps
loopne
inc
cld
pop
stc
mov
adc
je
imul
adc
repz
xchg
cmpsb
mov
cmp
pop
test
sub
push
mov
cmp
aas
jmp
pop
mov
mov
push
nop
rcr
adc
jae
inc
push
lret
ret
fsts
cmp
addb
xchg
mov
aam
rclb
divl
pop
adc
dec
cs
cmp
negl
scas
insl
inc
inc
pop
gs
pop
mov
aas
inc
clc
push
dec
mov
lods
roll
jmp
std
iret
pop
cwtl
xchg
scas
mov
sub
ljmp
scas
sub
scas
outsl
mov
leave
adc
lock
push
shrl
fadds
mov
add
add
es
adc
in
mov
pop
cmpsl
fcoms
mov
jne
and
popa
pop
mov
inc
cmpsl
in
movsl
jno
pop
mov
cmp
icebp
cmpb
jl
dec
mov
add
push
sbb
fucomp
ficompl
clc
mov
call
mov
jo
aad
mov
inc
mov
out
je
sahf
xchg
rclb
push
imul
mov
jne
mov
inc
lahf
ret
push
insl
xchg
in
dec
shl
jno
and
add
sbb
lret
rcrl
pop
or
add
in
push
add
jp
add
roll
or
clc
arpl
clc
or
pop
and
divl
mov
xchg
inc
add
jmp
mov
fisttpl
jns
jne
sub
sub
xchg
out
dec
xchg
sub
aas
jb
adc
orl
inc
sub
mov
bound
ret
mov
clc
and
adc
in
add
cmpsl
in
or
fisttps
jg
jmp
lahf
pop
cwtl
jae
inc
lcall
mov
mov
sbb
stos
das
sbb
and
aas
imul
scas
insl
inc
push
push
add
mov
iret
int3
fcomps
ftst
jecxz
mov
push
hlt
mov
xor
inc
scas
mov
bound
xor
inc
sbbb
sub
int3
jbe
jb
add
lds
xor
mov
leave
cmc
loopne
movsb
sub
push
sub
sbb
mov
jge
jbe
sbb
fldl
push
ret
icebp
movb
sub
jl
dec
les
aad
push
and
xor
mov
scas
and
cmp
aad
push
jmp
sbb
mov
jmp
fisttps
enter
daa
fadds
scas
add
jno
xlat
jns
mov
add
ds
add
and
stc
das
lahf
mov
cltd
push
or
test
add
cmp
xchg
mov
js
pop
insl
pop
lret
push
xor
loope
cmp
fcompl
lret
sub
outsb
cmpsb
cmp
adc
push
push
push
popl
jg
jle
sbb
jne
and
inc
push
push
dec
mov
sub
xor
inc
adc
push
test
jl
sub
xchg
or
pop
jg
xchg
sbb
jae
dec
sub
add
lcall
fadds
add
idivl
inc
fwait
lret
scas
rorl
cmp
mov
into
cli
xchg
sahf
cmc
push
fnstsw
outsl
mov
jb
stc
in
dec
cmpsb
adc
mov
add
lods
mov
ror
out
mov
imul
ss
vmovsldup
jnp
in
mul
stc
xlat
es
sbb
rcll
fcompl
insb
les
adc
push
dec
cmp
lods
inc
xlat
mov
push
jg
out
insl
jmp
sub
aad
cmp
nop
lods
jno
jl
stos
inc
arpl
push
fxch
pop
mov
pavgw
xchg
pop
pop
or
pop
outsb
pusha
aas
inc
cwtl
pop
stos
push
les
jp
add
jne
cwtl
stc
imul
adc
movsb
dec
inc
jne
adc
in
xorl
lcall
shlb
testb
std
jbe
fstpl
dec
dec
lods
mov
mov
cld
les
rorb
fadds
lock
repz
push
add
sub
cmp
xchg
pop
cmp
fsubrs
pop
mov
push
push
mov
dec
jnp
lods
icebp
je
mov
sti
sbb
and
inc
stos
pop
rclb
xor
sub
pusha
sub
xchg
jmp
fstl
mov
xchg
jmp
js
popa
in
dec
sbbb
stos
jae
xchg
out
xlat
dec
ret
jnp
push
inc
pop
mov
xor
mov
cltd
cmp
jnp
xchg
loopne
mov
push
push
in
cmp
adc
xchg
adc
mov
pop
shrl
invd
fwait
inc
mulb
test
insb
add
pop
and
xor
mov
mov
lock
xchg
xchg
push
mov
fildll
gs
je
dec
cld
int
inc
xchg
pop
jmp
outsl
movsl
das
mov
rorl
jne
shlb
mov
fst
out
daa
rorl
and
mov
xchg
mov
outsb
xor
cltd
clc
sub
mov
stos
addr16
jle
jp
and
in
mov
mov
in
jl
pusha
movl
test
add
jae
mov
mov
push
dec
pop
push
pop
in
stos
mov
icebp
xchg
sbb
pop
sahf
imul
scas
rcr
das
push
dec
inc
leave
adc
pop
dec
iret
sub
mov
out
mov
add
in
arpl
xchg
inc
mov
pop
or
sbb
ret
or
and
lret
push
pop
xor
cmp
jo
vmovupd
push
mov
leave
repnz
xchg
dec
leave
insb
cmp
movsb
mov
cmp
jp
mov
insb
stos
movsb
jge
fstp
sbb
mov
sbb
sub
popf
into
out
jl
sahf
adc
jae
push
add
pop
dec
jo
test
scas
aas
fstpl
xlat
testl
test
xchg
mov
lcall
enter
daa
xlat
inc
cmp
loop
mov
cmp
inc
cmp
push
int
lea
mov
mov
cli
lahf
iret
pop
mov
test
or
repz
cmp
sbbl
fistpll
sbb
pop
or
push
sub
loope
cmpsl
jl
iret
mov
outsb
or
nop
adc
xor
pop
adcb
xor
mov
or
cmp
in
imul
pop
mov
mov
js
cmp
in
pop
aam
sahf
jns
cmc
test
mov
sub
cmp
pop
pop
mov
pop
lods
mov
les
mov
call
fnsave
xchg
push
fdivrs
cmp
jne
stos
shl
repnz
inc
aas
or
rcrb
cmc
int
pop
xor
sbb
sbb
sar
rcrb
or
gs
aad
fildl
shrl
movsb
and
cli
push
pushf
pushl
push
repnz
sti
mov
cmpsb
xor
cmp
loopne
jl
pop
aaa
xchg
add
scas
icebp
test
les
iret
pop
xchg
dec
add
sbb
cmp
push
xlat
clc
dec
cmp
pop
dec
mov
pushf
xchg
push
test
adc
cs
aad
imul
inc
jbe
scas
flds
mov
je
fmuls
xor
lea
inc
call
mov
and
adc
daa
bound
ret
fcmovnb
xor
push
inc
push
push
repz
nop
enter
add
dec
test
jae
stc
push
sbb
and
repnz
sbb
inc
shlb
adc
or
out
push
jae
mov
mov
mov
sbb
das
ss
mov
inc
inc
aam
es
call
int3
mov
dec
roll
pop
mov
and
lods
pop
cmp
mov
dec
cmp
mov
fbld
mov
test
movq
lock
fnstsw
and
sub
xchg
sub
scas
popa
add
pop
popf
cmpsb
or
cmp
xchg
pusha
inc
add
pop
jmp
setae
cltd
jo
xchg
xor
jne
mov
push
cmc
inc
dec
lahf
inc
jl
sbb
dec
xchg
js
sbb
sbb
push
dec
in
or
in
addr16
jae
push
push
dec
addb
icebp
decl
std
xor
arpl
cmpsb
add
in
dec
movsb
xchg
aad
inc
mov
jge
mov
lcall
dec
out
xor
fisttpl
mov
inc
dec
dec
loope
jne
mov
loop
xchg
out
push
repz
adc
jns
xchg
outsb
ds
out
insb
and
mov
mov
ss
outsl
jp
scas
out
jns
mov
jnp
inc
arpl
jl
in
push
test
bound
push
xchg
cwtl
xor
jmp
mov
sub
je
push
das
in
popf
and
popa
mov
cwtl
aad
stos
adc
mov
sbb
test
xor
xor
push
xchg
cmpsl
sub
divb
iret
mov
ret
ljmp
js
arpl
sbb
inc
mov
ss
xchg
jl
inc
jle
or
mov
adc
dec
push
mov
ficoms
scas
int3
lds
addl
lcall
movsb
ds
cltd
push
leave
pusha
shll
fidivrl
daa
rcrl
or
call
fistps
add
adc
dec
inc
cmp
call
xlat
lahf
jo
mov
cmpsb
and
pop
cmp
or
test
mov
cmpsb
sbb
dec
enter
daa
ret
adc
popf
icebp
sub
dec
lahf
cmp
push
ds
xchg
movsl
sarl
mov
sub
ljmp
test
sbb
fstpt
es
dec
inc
sahf
js
imul
ror
add
push
aaa
add
sub
sbb
pop
add
rorb
imul
ror
or
mov
je
push
push
xchg
test
rorb
sub
lret
pop
ds
lcall
aaa
mov
dec
call
sahf
sbb
roll
add
jne
lcall
mov
out
fs
xor
add
and
sarb
ja
inc
divl
inc
cld
sarl
cmp
mov
call
cmc
xchg
dec
std
xor
adc
inc
loop
add
stc
pop
fistpl
add
pop
xor
sub
cli
inc
insl
shlb
out
adc
or
dec
sti
cmp
iret
pop
jp
gs
das
xor
jnp
cmpb
clc
aaa
lods
les
stos
jmp
adc
xchg
ja
xchg
aaa
jg
sub
pushf
cmp
mov
push
mov
mov
dec
cmp
std
inc
mov
fnstcw
pop
popa
je
lods
fs
pusha
xor
ss
fisttpll
push
dec
ffree
cmp
lods
loop
sub
dec
inc
aaa
pop
fcomi
xor
lods
inc
fsubl
inc
stos
add
jb
outsl
sahf
dec
pop
cltd
jns
test
pop
not
lock
std
vfmadd132ps
lock
mov
or
cmp
ljmp
jb
data16
shl
call
cld
mov
test
mov
inc
mov
ja
lock
xor
cmp
dec
int3
push
les
scas
in
es
cli
fs
mov
inc
and
jbe
negl
in
psrld
jmp
aaa
test
cld
jbe
popa
push
frstor
lods
clc
gs
xchg
addr16
lods
ljmp
in
pop
dec
repz
stos
push
mov
out
popf
pop
aaa
xchg
cmpsl
jae
push
cli
xchg
fmull
repnz
scas
add
xor
pop
jge
push
mov
xor
inc
pop
test
clc
int
jge
or
sbb
clc
xchg
xchg
mov
add
xchg
or
dec
xor
aas
insl
in
jo
xchg
and
shlb
vaddss
jnp
pop
js
dec
loop
add
mov
mov
out
xor
or
movsb
mov
in
mov
jns
out
xchg
cmp
cmpl
mov
sub
stos
adc
addr16
fldcw
push
mov
dec
jnp
in
enter
std
in
mov
clc
cmp
in
xor
repz
inc
shlb
xchg
jb
push
repnz
fistpl
xchg
cmp
stos
mov
and
mov
cmp
mov
xor
fldcw
adc
sahf
inc
iret
jmp
dec
mov
hlt
lcall
inc
mov
inc
jg
adc
inc
std
in
sbb
imul
negl
call
lds
mov
sarb
ret
repnz
jl
leave
pop
fists
push
sbb
sub
inc
xchg
jge
push
sbb
mov
add
xchg
dec
mov
or
xor
mov
jle
std
inc
mov
std
push
sub
add
xor
inc
aas
adc
cmpsb
mov
mov
test
aad
mov
dec
lock
jno
mov
sub
lret
pushf
inc
sub
sarl
movsl
fcoms
and
aam
lahf
or
or
push
mov
imul
int3
xchg
ret
pop
jne
inc
js
push
aaa
pop
xchg
call
loope
ljmp
dec
test
imul
in
xchg
and
cli
xorb
repz
mov
and
fadds
pop
data16
cmp
fwait
sub
sahf
movl
mulb
inc
push
mov
mov
call
jbe
mov
nop
adc
cmp
xor
fdivrs
add
int3
add
arpl
cmp
xor
cmp
lret
rcll
mov
or
cmp
into
mov
xchg
or
imul
outsl
push
test
loop
pop
sar
adc
push
add
rorb
outsb
inc
mov
out
in
cli
je
mov
hlt
cmpsb
sti
out
cs
jnp
xchg
gs
lods
lods
loopne
add
adc
jne
out
sbb
lds
mov
shll
mov
cmp
xor
sbb
pushf
call
das
das
cs
out
aad
imul
nop
ds
dec
cltd
mov
xchg
fnstenv
jbe
inc
aad
jecxz
fsub
cmp
cmp
iret
pop
cs
mov
out
adc
xchg
dec
sub
cli
lds
mov
dec
inc
push
loope
shll
jb
pop
xchg
dec
xchg
push
add
dec
mov
notb
xor
imul
mov
xor
clc
mov
cld
inc
push
add
mov
cmp
popa
add
in
mov
mov
aam
sbb
ret
push
jg
bound
insl
mov
jne
aam
jno
loope
cmp
rorl
sti
mov
fs
cli
and
adc
pop
sbb
aaa
push
sub
shrb
test
sub
mov
clc
mov
mov
ljmp
imul
stos
inc
adc
out
add
call
push
aad
rorl
push
xor
ljmp
jae
cmp
xchg
in
insl
sub
push
stos
cs
mov
mov
out
or
and
ds
xchg
aas
xor
lods
mov
xchg
xor
or
test
mov
ret
xor
adc
insl
dec
aad
aad
pop
dec
cmpb
push
adc
and
stc
dec
out
les
bound
idiv
xchg
add
scas
or
test
and
jle
cmpsb
fcomp
addr16
or
mov
je
sub
pop
fnstsw
loop
in
daa
push
pusha
cwtl
dec
fcmovnu
add
inc
xchg
ds
jmp
lret
jne
jae
mov
push
mov
sub
mov
push
inc
call
and
mov
sbb
pop
imul
scas
stc
pop
adcb
stos
adc
jno
and
inc
hlt
in
repnz
inc
mov
popf
enter
cwtl
inc
jl
mov
xchg
sub
sbb
and
pop
mov
xchg
push
lds
and
nop
dec
jne
inc
ds
movsb
push
sahf
lcall
mov
ret
test
ss
add
and
sbb
out
push
scas
mov
scas
jo
aam
scas
faddl
out
mov
and
inc
into
mov
das
in
jnp
lock
daa
aam
dec
cmp
scas
jno
repnz
and
dec
in
mulb
movsl
ffreep
shll
pop
lock
lahf
sub
pop
push
adc
test
cs
movsb
test
pop
pushf
sti
cmp
int3
outsl
pop
xchg
mov
cmp
cmp
pop
fmul
repz
sub
in
adc
dec
hlt
adc
ret
popl
xchg
in
jp
push
push
push
pop
lods
test
dec
sbb
cmp
movsb
lcall
arpl
or
pop
test
xchg
mov
mov
out
mov
xor
fists
fwait
mov
cmpsb
fcmovnbe
cmp
in
cmp
cli
lret
shll
push
fdivrs
or
stos
into
xchg
mov
xor
dec
imul
and
aam
pop
stc
enter
push
lods
add
xchg
fs
push
jne
mov
xchg
mov
mov
and
xor
ds
xchg
sbb
add
pop
loopne
loop
pop
xchg
inc
pop
adc
xor
imul
aaa
dec
repz
mov
sbb
in
mov
xlat
mov
shrb
mov
das
mov
xchg
xchg
test
xchg
arpl
stos
push
aad
push
mov
clc
cwtl
inc
inc
scas
roll
je
push
jecxz
lret
pushf
call
lea
js
cmp
pop
jbe
add
cli
dec
dec
sbb
lods
pop
stos
mov
loope
loope
xor
pusha
aaa
push
jb
repnz
or
inc
or
push
add
notb
inc
std
adc
ljmp
faddl
subl
lds
add
mov
shrl
das
int3
loopne
mov
push
decl
aam
ds
xchg
out
es
jg
outsl
lods
pop
dec
ret
cmpsl
shll
mov
lods
popf
jp
mov
xchg
and
lods
in
pop
cmp
and
jl
ljmp
les
test
mov
int3
add
in
repz
scas
pop
sahf
or
stos
das
aaa
call
xchg
xor
sbb
add
pop
pop
cltd
adc
sub
addl
lock
mov
sbb
jnp
inc
sbb
mov
fwait
add
push
xor
sub
insb
cltd
out
enter
daa
push
shlb
and
or
out
xchg
ret
mov
xchg
push
mov
lret
mov
xchg
mov
repz
mov
sbb
mov
and
push
push
xorb
mov
dec
jns
stos
sub
cmp
out
jle
sub
mov
push
popf
jp
dec
mov
cwtl
xchg
dec
jnp
mov
in
sub
pusha
xor
jne
adc
or
loope
rolb
jae
cmp
push
js
fistpl
or
push
push
mov
adc
loop,pn
sbb
push
call
scas
pop
xchg
push
sub
xor
ret
fstps
lods
ja
xor
arpl
push
inc
mov
faddp
push
sti
loop
fcmove
xchg
rcll
cvtdq2ps
nop
cld
lock
lds
push
push
mov
xchg
xor
movsb
filds
push
mov
lret
test
jge
pop
mov
aaa
and
mov
add
shl
jl
aaa
jae
xchg
xchg
jnp
xchg
inc
xchg
push
add
and
cmp
sti
inc
pop
movsl
and
clc
or
mov
pop
pop
cmp
push
mov
cmp
inc
cs
movsl
out
mov
cli
pop
jns
dec
mov
adc
cmp
xor
mov
dec
push
add
scas
clc
js
pop
add
decb
loope
mov
xchg
daa
repz
xchg
scas
into
adc
popf
mov
sbb
aas
sbb
aad
and
aad
pop
push
fsubrl
sub
lcall
scas
mov
fwait
jp
sbb
push
adcb
jg
mov
mov
ds
loop
outsb
adc
jne
ss
rorl
div
bound
inc
cmp
sarl
jne
xor
add
imul
sub
outsl
adc
out
addr16
stc
jg
aad
xor
ret
out
push
lods
cmp
xlat
mov
mov
out
cmp
jecxz
push
cmpsl
in
dec
pop
jg
inc
scas
push
inc
out
push
or
jmp
mov
sbb
sti
pop
icebp
imul
cmp
fwait
mov
sbb
sub
in
xlat
hlt
sub
push
mov
ds
shr
sbbb
push
mov
aad
push
or
push
jns
inc
ret
lahf
daa
je
and
jecxz
mov
fimuls
lds
mov
jnp
adc
out
fildl
jl
inc
jno
testl
dec
aam
mov
in
and
xchg
out
rcrl
arpl
cltd
or
mull
mov
or
mov
arpl
add
cwtl
lret
dec
push
mov
insl
addr16
stos
and
mov
mov
or
push
mov
dec
cmpsl
shlb
mov
jg
lods
or
xchg
mov
push
push
pop
pop
in
xchg
rorb
shrb
mov
add
mov
pop
cld
push
stos
pop
fst
pop
inc
clc
push
pop
notl
sbbl
pop
cmpsl
daa
pop
dec
shll
stos
push
and
out
popf
sub
mov
clc
pslld
out
add
dec
push
and
pusha
adc
cmp
xchg
fimuls
sbb
mov
jecxz
pop
lods
dec
fwait
das
inc
sub
xlat
js
add
jecxz
cs
scas
les
mov
ret
addr16
fcomi
xchg
adc
mov
in
mov
xchg
sbb
leave
xchg
inc
mov
mov
add
rorl
and
jne
dec
or
and
bound
add
xchg
lcall
out
ret
mov
push
or
pushf
jp
xchg
js
aad
fldcw
mov
jle
sbb
or
daa
filds
mov
jmp
loope
sub
add
push
cmp
adc
mov
xchg
mov
mov
inc
cmp
imul
loop
mov
sbb
adc
dec
iret
push
jmp
ret
lea
mov
sub
bound
inc
rcr
or
cmp
inc
jp
push
fiaddl
fnstsw
clc
mov
pop
sbb
lds
or
into
jge
repnz
movsl
leave
mov
cmp
jbe
or
sbb
lea
in
jnp
fsubrs
lgdtl
scas
inc
dec
add
hlt
push
je
push
xor
lds
lcall
cmp
inc
out
push
lods
push
ds
in
rorl
sub
in
dec
stc
adc
mov
out
sarl
loope
pop
jno
fsubrs
sub
inc
test
test
adc
movsl
in
ficomps
arpl
lahf
push
push
mov
jns
add
insb
pop
xor
xchg
cmp
pop
ljmp
pop
inc
push
push
push
jne
loope
fldt
sub
mov
sub
js
fimuls
lock
sbb
push
out
mov
in
and
xchg
cwtl
int
fildll
inc
int
pop
cmp
ss
pop
mov
mov
sbb
mov
test
cmp
jo
mov
push
jge
mov
pop
popf
mov
insb
pop
adc
jns
ss
mov
arpl
divl
inc
jb
aad
sarl
ud2
cmp
into
dec
sbb
cmc
mov
and
jl
add
inc
jp
cli
psubw
scas
lock
sub
ret
pushw
daa
lods
and
or
mov
and
or
dec
mov
sti
hlt
add
lods
shufps
sarb
adc
mov
mov
out
fwait
repz
lods
xchg
sbb
mov
push
dec
fnstcw
arpl
sub
push
and
pop
mov
aad
cmp
nop
iret
push
dec
dec
mov
cmc
inc
aad
xor
je
inc
or
jmp
or
push
call
cmp
cmpsl
adc
inc
dec
outsb
inc
clc
popf
add
mov
lahf
jb
inc
cs
sti
inc
adc
shrl
push
std
pusha
mov
mov
ret
mov
sub
jp
lret
mov
sub
adcb
das
mov
mov
test
push
aam
mov
ret
mov
jl
jmp
inc
insl
cmp
inc
xlat
cmpsl
ror
mov
jp
xor
lods
jae
push
mov
int
pop
and
loop
sub
jp
xchg
shlb
pop
std
sub
lods
pop
mov
push
insl
push
insl
fldenv
clc
push
inc
push
xchg
arpl
jl
xlat
aam
popa
jbe
inc
pop
hlt
insl
popf
stos
or
icebp
sbb
data16
xchg
outsb
push
dec
add
cltd
xorl
push
dec
movsb
mov
arpl
je
mov
bound
jmp
or
push
fwait
pop
add
jp
pop
add
aad
jmp
nop
xor
nop
xor
xchg
pusha
xchg
cmpsl
mov
mov
mov
inc
xor
aad
scas
mov
inc
and
mov
jae
xchg
dec
mov
testl
bound
jns
add
xchg
gs
dec
out
jns
sub
xchg
pushf
scas
addr16
stc
jp
mov
mov
arpl
jnp
cmp
in
push
xor
lret
xor
popa
stos
push
xchg
mov
leave
jmp
in
jl
jae
adc
fisttpll
addb
push
roll
stos
push
or
mov
sub
sahf
dec
scas
and
cmc
jae
adc
shll
pop
pop
cwtl
pop
xor
mov
arpl
push
inc
les
lahf
or
push
mov
stc
out
fidivl
mov
out
dec
xor
mov
shlb
repnz
mov
cmc
test
push
push
dec
sbb
jge
stc
xlat
sbb
xchg
movsb
aaa
mov
jg
add
stos
sbb
inc
dec
outsl
fmuls
push
sub
jo
mov
scas
jns
mov
dec
jg
cmp
imul
inc
jnp
cmpsb
lods
add
in
xor
jnp
mov
jmp
roll
cmpsb
cmp
or
inc
add
cmp
pop
ds
ficoml
and
mov
lds
loope
test
dec
ret
out
test
pop
adc
cmpb
cwtl
pop
cmpl
adc
movsl
fmul
mov
sub
push
cmp
push
js
popf
mov
addb
jl
pop
mov
mov
dec
mull
xchg
jae
push
cmp
aad
or
pop
mov
push
push
in
jecxz
mov
sub
sahf
dec
movsb
incl
mov
jg
pop
sbb
mov
test
clc
mov
outsl
push
inc
cmp
push
cmp
divl
lret
dec
shrl
xchg
arpl
stos
inc
inc
into
das
pop
jmp
ja
dec
xor
cmp
lret
loop
jne
stc
in
cld
dec
adc
mov
scas
in
loopne
lods
or
mov
ja
mov
cmpsb
cli
inc
setne
sbb
push
in
and
pop
sti
mov
add
push
inc
mul
ss
outsb
pop
icebp
sbb
adc
add
icebp
cmp
repz
lods
xchg
sbb
cmp
ss
push
push
mull
xchg
dec
xchg
jmp
xchg
push
cs
mov
nop
stos
inc
call
add
je
mov
pop
movb
iret
test
mov
sbb
fisubs
dec
mov
loope
loopne
xchg
or
inc
xor
aas
cmp
mov
or
sar
mov
arpl
pop
out
pop
cwtl
insl
in
dec
mov
hlt
jns
les
cmp
icebp
xor
lret
es
pop
mov
xor
int
pop
das
imul
ljmp
cmp
outsb
xlat
dec
insl
and
mov
mov
push
cmpsl
rcrb
ret
mov
sti
mov
lock
js
dec
mov
cltd
stos
psrld
jbe
sub
lods
sub
xor
psubb
shr
dec
ficoml
lea
jmp
cld
cmp
rclb
inc
add
bswap
rclb
xchg
xor
lahf
fstps
xchg
push
dec
or
sbb
pushf
pop
mov
or
test
push
sbb
incb
sbb
adc
pop
adc
in
sbb
xchg
scas
std
shll
shr
inc
pop
cld
addr16
ja
push
rorb
adc
fmuls
scas
xor
dec
mov
push
jb
add
loope
inc
jb
xlat
fistl
xor
xchg
out
movsl
and
jle
or
mov
jp
cmp
insb
fldcw
jmp
sti
mov
xor
sbb
filds
es
jmp
not
xchg
jae
arpl
popf
push
repz
mov
adc
stos
ljmp
push
fistpl
sti
mov
scas
test
fists
sbb
enter
sub
rcll
adc
arpl
fmuls
or
jns
out
js
popa
cmpsl
out
xchg
xchg
xchg
pop
jns
ss
gs
int
aas
dec
dec
mov
mov
leave
lods
lods
xchg
movsb
andb
inc
sub
fistpl
mov
or
dec
insb
jl
sbb
dec
fidivrs
sbb
cmp
test
jnp
std
scas
pop
xchg
push
and
lret
fnstcw
xchg
xor
push
inc
pop
mov
std
in
cmpsb
das
or
in
pop
cmpsl
mov
mov
fs
rcrb
jno
dec
in
sub
mov
sarb
xchg
mov
and
es
push
pop
sbb
and
adc
insb
scas
xor
mov
das
js
jge
pop
ret
push
sbb
cwtl
test
data16
hlt
lahf
jns
mov
insl
in
lea
cld
divb
sbb
inc
mov
ljmp
push
push
dec
fsubrs
cmp
push
pop
cmp
and
push
cmp
lods
mov
adc
sahf
out
pushf
ljmp
ror
jg
inc
xor
sub
adc
dec
add
mov
jnp
and
mov
ror
jg
roll
insb
cmp
xor
or
scas
push
into
adc
pop
cmc
ds
xor
mov
outsl
mov
lret
sub
movsb
out
push
adc
pushf
inc
add
xchg
data16
dec
lods
icebp
and
mov
xchg
push
out
pop
jb
jae
inc
xor
loope
mov
paddd
stc
inc
gs
sub
pop
adc
ljmp
sbb
cld
cmp
or
xchg
mov
fwait
push
cmp
divb
mov
hlt
sub
mov
pushf
aas
fisubrs
dec
fisttpl
aaa
xchg
mov
nop
test
dec
je
cltd
inc
sti
sbb
je
mov
inc
adc
dec
andl
ss
aaa
es
pop
inc
sahf
dec
adc
or
dec
les
inc
fistl
dec
cmp
rcll
or
aas
fdivl
add
cmc
mov
rorl
xor
bound
inc
std
scas
add
cwtl
sub
fwait
mov
scas
jl
mov
inc
orl
lahf
mov
mov
add
das
dec
cld
pop
mov
repnz
or
sub
dec
ret
rcll
std
insl
or
dec
scas
cmp
mov
add
in
lods
dec
rcr
fisubs
mov
jg
push
mov
mov
enter
pusha
incb
sbb
cli
fisttpll
mov
flds
loope
enter
adc
xor
ret
stos
jmp
pop
out
out
jae
xchg
push
mov
push
cvttps2pi
inc
add
test
cltd
icebp
insb
je
ljmp
xchg
imul
jp
jne
sbb
sbb
hlt
shll
cmp
pop
das
xor
shl
add
xor
imul
sarl
xor
adc
xchg
stos
mov
mov
mov
or
loop
dec
xchg
popf
dec
inc
dec
push
cmpsl
mov
push
int
dec
test
es
jns
mov
mov
bound
mov
out
xchg
sti
lods
mov
out
inc
imul
pop
dec
addr16
out
mov
mov
cmc
insb
inc
lods
or
cli
push
jle
nop
aaa
in
adc
test
lahf
bnd
pop
add
push
inc
add
jae
stc
push
popf
xor
in
push
push
xlat
hlt
stos
cmp
push
sbb
cmc
jle
es
scas
call
dec
iret
adc
dec
sbb
and
jae
lahf
mov
xchg
arpl
push
xor
hlt
mov
inc
idiv
ficompl
xchg
lods
int3
mov
pusha
int
mov
sti
lds
mov
mov
fists
mov
movsb
or
xlat
push
repnz
andb
sbb
incb
mov
mov
push
adc
jl
jb
push
sbb
jne
jo
stos
test
outsl
dec
pop
cmp
push
push
push
std
testl
xchg
push
and
stos
mov
daa
iret
mov
push
jno
ds
sub
aaa
jge
mov
cmp
movsl
inc
mov
and
dec
lahf
and
push
xor
insl
add
push
xor
or
arpl
fldt
push
adc
scas
adc
pop
adc
and
int
adc
or
push
subb
push
sbb
or
mov
incb
imul
int
xchg
scas
sub
sbb
lcall
sub
mov
sub
rcll
repz
ljmp
clc
enter
mov
sbb
cmp
xchg
leave
push
lock
or
ret
fstpl
or
mov
loope
lea
outsl
mov
pusha
stc
pop
xchg
popa
shlb
repz
add
or
cli
cmpsb
aad
xor
ror
in
stc
push
push
sti
add
fisubl
arpl
insb
jno
pop
das
add
inc
or
imul
sbb
sub
adc
hlt
xlat
lock
cwtl
sub
pushf
push
mov
ljmp
cs
nop
pusha
and
inc
push
lock
mov
stos
in
jecxz
pop
aam
dec
imul
call
mov
or
cmc
adc
adc
adc
fstpt
cmpsl
lret
push
inc
loopne
inc
push
fisubl
jb
inc
mov
and
adc
rcrl
das
push
sti
and
add
xchg
mov
and
cld
inc
sbb
add
xor
xlat
mov
aad
daa
dec
stos
mov
test
in
stos
ret
pusha
cs
es
mov
fbstp
dec
test
mov
fildl
mov
ss
mov
mov
gs
xlat
jns
rcrb
add
test
test
mov
out
push
mov
outsl
fnsave
or
xchg
and
sub
inc
fstpl
shrl
push
mov
adcb
gs
movsl
or
xor
push
cmp
xlat
xor
test
negb
xchg
test
add
fcom
mov
lods
jo
jmp
push
push
arpl
add
dec
mov
cld
xor
mov
or
mov
shrl
push
mov
outsl
inc
mov
jb
ja
inc
loopne
xchg
and
repnz
mov
ficomps
addr16
jmp
dec
shr
adc
std
jbe
jns
iret
sub
andl
out
pop
fwait
sub
mov
jp
mov
mov
sbb
jnp
add
jle
cmc
lock
or
cmp
sub
mov
sbb
or
shrl
inc
dec
cmp
pop
jmp
mov
nop
out
stos
lods
add
and
ret
sub
adc
dec
sbb
xchg
adc
add
ret
movsb
pop
push
xchg
hlt
cmpsl
lcall
int
dec
or
outsl
shlb
dec
aam
xor
popa
int3
movsb
test
pop
xlat
push
adc
sub
mov
rorb
cmpb
or
inc
adc
add
jbe
push
lahf
jge
jmp
inc
xlat
add
or
lods
jl
xlat
and
jns
push
add
mov
jo
inc
jbe
push
aaa
clc
and
add
add
icebp
jnp
sub
cmp
xor
in
enter
daa
into
pop
xchg
cmp
push
sub
test
cmp
sarl
in
movsl
or
and
add
jno
add
mov
stos
pop
in
xor
mov
pop
inc
add
push
pop
xlat
loope
mov
cmpsl
sub
xchg
out
test
outsl
adc
in
push
mov
jmp
pop
mov
push
and
cmp
push
outsb
or
add
and
pop
ss
repz
leave
mov
jo
add
out
test
push
xchg
sbb
fwait
jg
adc
mov
add
sbb
ja
jne
jb
cmp
daa
cmp
dec
outsb
inc
imull
xchg
xor
ret
cmp
pop
dec
or
shrb
cmc
int3
mov
std
outsl
outsb
jl
loop
pop
out
stc
adc
xor
pop
dec
add
data16
mov
mov
lahf
cltd
cli
flds
xor
popa
mov
mov
test
jo
aas
sub
jle
pop
lret
dec
adc
mov
adc
adc
repz
sbb
xchg
sub
cs
dec
xchg
push
xlat
das
mov
or
xchg
jns
jmp
scas
je
std
out
aad
mov
imul
clc
push
fyl2x
jecxz
je
pop
push
jecxz
mov
dec
lds
call
xor
cmp
loopne
pop
dec
lcall
pop
jge
aas
inc
adc
push
subl
pop
pop
loope
xlat
xor
and
add
shr
ffree
imul
lcall
sahf
push
xor
popf
shrb
xorl
movsb
mov
icebp
push
cs
ret
popf
das
push
mov
mov
aam
or
out
push
cmp
idivl
insl
fldenv
dec
movsb
jp
cmpsl
int
fistpll
mov
cltd
lods
pop
pop
sbb
cmp
adc
lea
xor
mul
scas
shrb
fldt
mov
test
movsb
xchg
jns
push
fstpl
mov
push
ljmp
out
pop
mov
sub
xchg
fcomip
insl
push
rcrb
lahf
add
push
cltd
pop
stc
mov
jns
mov
outsl
es
dec
ds
mov
xchg
pop
sbb
arpl
or
and
push
mov
add
push
jle
loope
inc
xor
cmp
aad
inc
in
je
xchg
pushf
rcll
mov
sub
testb
mov
mov
das
mov
dec
dec
bound
mov
in
mov
neg
out
frstor
bound
pop
jne
xchg
shlb
mov
lret
sub
andl
repnz
repz
sbb
sarl
dec
jle
dec
in
arpl
pusha
aad
mov
xchg
add
jmp
sbb
mov
push
icebp
stos
push
or
add
mov
iret
jnp
stos
and
imul
add
sbb
imul
scas
cmp
pushf
adc
xchg
pushf
ret
jmp
or
cmp
inc
sarb
xchg
bound
fiaddl
adc
dec
rcrb
mov
inc
lds
sub
nop
inc
idivb
test
aas
leave
adc
xchg
leave
jbe
mov
fistps
cld
push
aaa
lahf
xorl
fildl
add
je
dec
sub
pop
push
jecxz
jmp
add
subl
mov
cmp
inc
mov
mov
in
int3
pop
or
xchg
int
sub
jno
mov
cmpsb
add
ds
jmp
and
xchg
clc
clc
test
jnp
jae
and
pusha
fiaddl
pop
lods
xchg
adc
push
mov
push
push
jno
fstl
push
sub
xor
adc
mov
push
in
orb
sbb
orb
movsl
sbb
sub
jno
lret
int
sub
add
lcall
decb
pusha
sub
pop
xchg
cld
xor
cli
jg
add
mov
cmp
mov
push
out
adc
test
ss
sti
cmp
or
sti
lret
cmp
enter
xor
or
into
mov
or
xchg
outsl
dec
aam
loop
adc
adc
cmp
add
mov
mov
mov
movsb
inc
out
movsl
aad
or
stc
xor
in
iret
ja
sti
pop
cmp
xchg
xchg
lahf
xor
inc
pop
insl
ret
add
in
xchg
mov
xor
les
pop
or
sbb
mov
xlat
outsb
ja
sub
mov
xor
inc
test
jmp
aas
cmp
pusha
or
aad
sarb
push
mov
sbb
xor
fldcw
ja
je
out
jecxz
dec
and
push
xchg
jns
imul
cmpsl
dec
sub
pop
pop
adc
insl
dec
test
inc
pop
and
les
fwait
cmpb
aaa
int3
jb
mov
push
and
dec
psrlq
sbb
sub
std
mov
in
mov
divl
orl
ds
loop
rorl
gs
cld
lock
fsubl
pop
roll
mov
ret
jle
pop
es
or
leave
dec
dec
lahf
jns
cmpsl
int3
and
mov
mov
and
mov
mov
jl
push
mov
adc
testb
add
cmpsl
mov
inc
push
push
cmp
fcmovu
shl
clc
js
mov
push
clc
sub
jmp
pop
stos
mov
ficomps
es
push
lods
rep
cmovns
setns
push
arpl
jb
jle
movsl
push
fldcw
hlt
out
jb
push
push
arpl
and
fwait
dec
inc
add
add
test
sbb
xor
mov
jmp
dec
pop
mov
hlt
stc
mov
call
cli
dec
insl
lds
adc
dec
mov
sahf
dec
jle
sub
sub
mov
mov
out
mov
loop
jns
mov
pop
enter
fbstp
cmp
ja
sbb
cld
or
adc
mov
arpl
test
mov
jle
fwait
cmp
xor
aam
jl
xchg
fldcw
mov
outsb
les
push
sbb
int
jp
stos
jae
mov
push
xchg
adc
iret
xor
xchg
imul
push
pop
add
adc
pusha
ret
jp
inc
jle
hlt
cmp
xchg
xchg
inc
rorl
or
gs
int
je
rcr
inc
pop
xchg
loop
in
jp
pushf
pop
xor
ds
ret
mov
scas
repnz
mov
push
stos
jbe
aad
jge
push
pop
sbb
or
or
aas
stos
jl
in
dec
lcall
xor
out
push
scas
aam
mov
cmp
xchg
push
outsl
xlat
mov
jg
cmpsb
cmp
enter
daa
int3
sub
cmp
scas
mov
sub
fwait
ljmp
add
pop
and
popf
sbbl
add
add
pop
mov
popf
or
aam
jno
push
outsb
jo
mov
push
pop
loope
mov
and
ja
mov
jl
dec
and
mov
lcall
andb
sbb
adc
and
push
das
push
je
mov
fmul
fsubrs
and
or
lcall
aaa
mov
enter
nop
sahf
jp
enter
fildl
shl
sub
pop
jle
fs
sbb
ss
push
sbb
lds
imull
pop
dec
rcrl
cmp
shll
into
sahf
out
jge
pop
fimuls
xor
xor
std
aam
andb
adc
imul
jl
jmp
lea
mov
shll
cli
aas
inc
mov
dec
xchg
inc
in
cmp
sti
push
sub
mov
sub
test
loopne
mov
pop
mov
adc
sub
aad
les
cmpb
fucomp
xchg
scas
insb
and
ds
cmp
jnp
xlat
lods
rcrl
dec
push
insb
mov
jmp
sbb
cs
pop
aad
dec
aas
nop
icebp
movsb
lahf
dec
lock
fstps
add
jnp
inc
sub
mov
call
xor
pop
push
movsl
movsb
adc
and
fcmovne
push
adc
inc
and
into
aas
pop
insb
or
sbb
sub
repnz
roll
int
std
dec
cmp
stc
mov
ret
addl
enter
push
mov
add
sub
add
xchg
pop
mov
les
mov
into
insb
stos
aam
inc
xor
or
sub
cmpsl
adc
dec
lcall
mov
pusha
gs
mov
lahf
gs
fwait
xlat
or
test
add
xor
push
rclb
mov
test
cltd
inc
mov
fadds
push
call
xor
out
hlt
clc
mov
inc
xchg
movsb
ljmp
add
cmp
jnp
aad
insl
mov
sti
push
or
add
cltd
int
shlb
cld
mov
jne
orb
mov
jae
mov
sbb
test
lret
push
mov
push
dec
inc
sbb
movsb
dec
pop
add
xchg
daa
xor
mov
or
ret
jae
je
add
cmp
stos
mov
fs
pop
mov
jns
dec
pusha
in
inc
stos
mov
mov
or
ret
ds
mov
test
out
fwait
pop
movsb
bound
popa
cwtl
xchg
daa
and
adc
inc
out
dec
test
jns
jb
sub
push
jp
xor
xchg
insb
lock
popa
jnp
test
cs
inc
pop
pusha
or
push
fistps
mov
xchg
test
addr16
lods
clc
movsl
push
nop
lret
rorl
push
push
dec
xor
push
dec
mov
out
fs
and
imul
jae
lahf
mov
adc
out
lahf
mov
rorb
xor
mov
arpl
push
movl
icebp
push
repz
jbe
xor
xchg
cmp
xchg
int3
gs
out
fs
dec
ficoms
out
lds
and
movb
daa
sub
leave
add
movsb
aaa
cs
and
jge
and
add
sbb
inc
or
jl
sub
dec
or
inc
xor
inc
lea
and
shrb
cmp
jns
aad
pop
cmpsb
mov
out
sbb
xchg
lods
jmp
cmp
xor
dec
push
sub
gs
xor
les
shrb
inc
jmp
popf
test
xchg
stos
xor
cld
stc
pusha
inc
cwtl
pop
sti
push
push
js
sbb
pop
std
sub
push
imul
fmul
pop
js
lahf
mov
test
adc
outsb
shlb
lret
xlat
dec
dec
xorb
sbb
aam
cmp
mov
int
movsl
sub
cli
xor
out
jl
mov
ficomps
nop
adc
sahf
sbb
cmp
sbb
out
mov
mov
and
cmp
adc
stos
add
mov
adc
imul
pusha
mov
shl
xchg
cmp
dec
jle
inc
inc
inc
into
adcl
adc
nop
leave
loop
sbb
adc
icebp
mov
sbb
dec
decw
fmull
stos
cmp
stos
xor
and
in
movsl
and
fstps
adc
push
loopne
dec
xchg
pop
stos
das
mov
imul
movsl
bound
gs
cmp
dec
xlat
in
scas
mov
shlb
pushf
xchg
sbb
cs
nop
int3
mov
gs
pop
dec
outsl
fsts
je
jecxz
push
leave
push
xchg
xchg
lea
pop
jns
popf
loopne
mov
lret
call
and
mov
sbb
inc
aam
jno
mull
dec
cmp
jmp
rcl
bound
mov
dec
std
icebp
lds
mov
adc
jbe
cmpl
lret
shrb
lcall
lock
aas
fs
mov
jb
mov
pop
pusha
jbe
pushf
dec
data16
insl
mov
dec
xchg
xor
jge
mov
aaa
clc
aad
pusha
stc
stc
mov
ret
and
pop
cmp
pop
push
inc
dec
shl
insl
xchg
mov
push
ret
fisttpll
xchg
movsl
clc
out
ljmp
cld
mov
in
mov
imull
xchg
mov
mov
in
sysret
lea
jg
ret
lcall
testb
jae
inc
test
rolb
into
jne
rcrl
popf
sbb
in
rcrb
out
jge
add
mov
or
cmp
hlt
in
mov
data16
dec
pop
mov
pop
mov
mov
mov
cmp
int3
loopne
repz
ja
add
imul
jp
add
sbb
push
xchg
repnz
andl
out
cmp
je
test
cmpb
sbb
lea
pop
jnp
mov
xchg
in
into
pusha
cmpsb
std
rcr
in
test
nop
loopne
inc
cmp
push
push
popf
clc
mov
mov
mov
stos
jns
sbb
std
clc
mov
inc
subb
nop
scas
xlat
push
ljmp
test
inc
ret
sub
hlt
rorl
lock
fdivrl
inc
fnstcw
mov
inc
jb
push
ficompl
into
push
xchg
nop
lock
int3
push
cltd
popa
pop
xchg
mov
inc
rol
call
pop
bnd
aad
ja
adc
mov
jbe
arpl
sub
test
sub
dec
adc
jl
inc
test
js
lahf
push
mov
scas
xor
popf
ja
scas
xchg
stos
shll
dec
loope
cmp
aas
inc
fs
cmpsb
inc
rcll
xchg
sahf
mov
cmp
dec
jno
pinsrw
cmp
xor
ds
cmc
enter
js
insl
push
mov
in
push
push
lods
mov
out
test
add
dec
jne
idivl
pop
and
jo
mov
pop
cmp
cmp
sub
fdivl
leave
sub
and
adc
push
scas
enter
pop
orb
shll
add
push
jp
out
cmpsb
loopne
sbb
sub
inc
jne
sub
sbb
je
test
cmpsl
mov
jg
ljmp
cmc
or
lds
stc
ss
cmpsb
lods
cmp
cmp
push
imull
push
rol
lea
cmp
xchg
repnz
pop
cmc
call
and
mov
xchg
insb
pusha
stc
out
adc
pop
lret
dec
add
stos
arpl
icebp
jmp
push
movsl
adc
in
adc
cmp
movl
pop
lret
adc
mov
les
sbb
repz
pop
xchg
xor
in
sbb
cmp
dec
sub
stos
add
mov
add
jmp
adc
or
nop
cmpsl
mov
dec
scas
adc
fxch
or
jecxz
mov
xor
sbb
pop
xor
ficompl
loopne
adc
test
inc
stos
xchg
sub
jle
or
pop
inc
xor
or
loopne
aas
xchg
loope
jb
scas
mov
mov
sti
and
adc
div
iret
pop
std
cwtl
xor
mov
jae
mov
push
arpl
push
pop
mov
das
fidivs
jge
push
mov
xor
das
sbbb
mov
ljmp
add
out
push
mov
push
scas
fldt
filds
and
mov
ret
push
sarb
enter
test
fnsave
ja
xchg
pop
jg
ljmp
jmp
dec
and
out
inc
fdivrl
push
jl,pt
pcmpgtd
jno
xchg
push
aam
cmp
cltd
xor
out
mov
jnp
mov
test
jb
xchg
ja
sbbl
es
mov
fwait
lcall
mov
mov
es
mov
popf
pusha
aaa
or
xchg
xchg
fmuls
mov
mov
pop
pop
sbb
emms
or
decb
inc
popl
cmp
mov
jmp
loope
icebp
add
pop
mov
andl
fmull
sarb
notb
sub
aas
out
test
sub
outsl
insb
sti
sub
mov
mov
mov
jb
insb
sub
les
pushf
in
scas
and
xor
fistps
mov
jmp
inc
push
pushf
jae
adc
push
push
les
pop
popa
mov
hlt
jo
in
push
cwtl
and
ss
xor
imul
scas
cmp
push
sub
lds
pop
xchg
inc
ret
mov
jmp
cli
mov
jmp
sahf
pop
or
mov
inc
icebp
fwait
xchg
fcmove
pop
popa
xchg
out
cmc
int3
cmp
push
ficomps
jge
jae
or
cld
popf
mov
repnz
mov
out
adcb
dec
mov
push
int3
mov
fnstenv
jge
push
sbb
addl
arpl
add
scas
iret
jl
sub
dec
out
mov
xor
clc
jne
scas
jno
adc
cmp
movsl
mov
push
cmpsb
cmc
in
push
and
daa
leave
cmp
lods
ljmp
add
sarb
xor
or
lahf
and
inc
test
cmpsl
inc
inc
xor
mov
pop
dec
stos
out
js
xor
pop
jnp
mov
loope
inc
adc
and
or
adc
sub
xchg
push
out
fwait
pushf
jo
xlat
xchg
and
fdivl
push
jge
fcmovne
or
nop
mov
mov
cli
lcall
pop
mov
iret
dec
sbb
aam
sahf
arpl
and
arpl
movsb
jg
jmp
insb
mov
fs
popa
ljmp
cmp
fdiv
push
insl
imull
cltd
lret
cmpsb
shll
cmp
mov
dec
inc
mov
cmc
scas
test
xor
pop
mov
and
subb
cltd
add
mov
add
lods
inc
rorb
in
cli
fmuls
or
rcrb
addr16
sbb
lods
gs
sub
jmp
and
imul
add
xchg
notl
sbb
jbe
ret
xlat
push
sbb
mov
in
sti
and
fsubs
lret
cli
adc
pop
outsb
nop
sbb
dec
or
sub
flds
shlb
inc
jecxz
gs
pop
pop
lret
lea
push
rol
mov
mov
adc
stos
push
fistpl
cli
pop
lods
push
push
inc
or
jge
xor
ljmp
cmpsb
cmp
jae
divb
jg
std
aas
andl
inc
sub
jp
push
mov
subl
push
xchg
addl
das
popa
xchg
mov
mov
cmp
xchg
dec
dec
mov
call
icebp
in
aas
lods
fcoml
mov
mov
push
mov
xchg
inc
push
rorb
inc
lods
test
mov
fstpl
clc
fs
or
lcall
popa
inc
out
pop
divl
pop
stos
je
push
out
movsb
ret
adcb
daa
fimull
lds
mov
xor
adc
mov
jle
sbb
test
adc
lock
sub
ror
ja
or
add
fwait
add
roll
icebp
stos
jl
cld
or
lock
or
xor
adc
fsubr
mov
insl
out
mov
aam
pop
ja
push
sbb
inc
jo
js
hlt
fcomps
pop
pop
add
ja
jne
mov
out
cmp
bound
add
xorl
inc
out
push
bound
push
test
add
repnz
loopne
cmp
insb
xor
jae
push
jle
pop
ja
push
cld
test
jbe
fistpll
push
jmp
dec
dec
push
push
fstps
popf
inc
xor
mov
or
pop
and
push
rcrl
stc
push
scas
popf
sub
push
je
sbb
lock
pop
iret
mov
out
pop
and
hlt
imul
inc
add
push
cmp
jo
fcmovu
andb
int3
es
movsl
pop
icebp
cmpsl
push
fdivrp
hlt
rol
cli
dec
insl
rclb
sbb
and
mov
gs
movsb
fdiv
inc
push
sbb
cltd
jge
rorl
and
pop
push
dec
or
test
jbe
fidivrl
sub
push
pushf
jg
push
idiv
xor
push
mov
push
jl
and
cmp
push
fwait
xchg
adc
inc
cmp
dec
dec
enter
daa
enter
fbld
jno
out
insb
mov
dec
ds
and
out
push
mull
insl
test
mov
cld
xor
scas
fistpl
sub
js
lahf
outsb
pop
mov
int3
cld
loope
into
add
int3
or
sub
outsb
repnz
adc
push
add
hlt
loope
subb
xor
sti
sti
push
sbbb
je
xchg
sub
cld
pop
pop
xor
xchg
lcall
add
add
pop
sbb
mov
test
test
cmpb
jg
in
push
mov
push
mov
daa
lret
jne
adc
push
ss
cmp
mov
sub
mov
mov
je
mov
scas
or
ss
jbe
divl
or
outsl
test
mov
stc
pop
xchg
stos
adc
jp
add
data16
lods
sub
out
mov
cli
or
push
or
lret
incb
ret
gs
sub
pop
or
adc
mov
les
repz
fisubrl
mov
inc
xlat
test
rclb
mov
or
xchg
sub
cs
fnstenv
nop
pop
adc
dec
insb
and
repz
jecxz
push
push
lea
imul
push
push
clc
das
or
add
dec
sbb
pop
fisttpl
mov
in
inc
and
data16
jb
adc
and
nop
jmp
idivb
aaa
std
out
movsl
cwtl
add
and
dec
pop
mov
inc
cmpb
fdivrl
mov
loopne
dec
shll
inc
repz
mov
stos
cmp
subb
es
jg
inc
sub
cmpsl
bound
js
xor
mov
or
push
jge
mov
mov
mov
inc
shlb
pop
pusha
cmp
aam
push
or
push
clc
lahf
dec
jae
fsts
mov
push
scas
imul
sub
cmp
pop
lahf
lds
hlt
in
sub
add
xchg
xor
xchg
and
addl
fldcw
outsl
andl
or
dec
push
fwait
xor
sbbb
rolb
lcall
fisttpll
in
ljmp
mov
lods
imul
xor
ja
push
fimull
insl
testl
cmp
mov
enter
icebp
jae
pop
pop
shll
mov
inc
jns
sbb
xchg
push
fstpt
out
nop
xor
popf
push
or
shlb
pop
cmc
jp
or
insb
pushf
mov
xchg
jle
imul
ja
mov
xchg
cmc
dec
xor
inc
pop
xchg
fwait
jae
aaa
push
pushf
int
popf
insl
fidivrs
into
jg
push
dec
leave
push
stos
shrb
xchg
and
int
in
xchg
xchg
imul
dec
scas
add
push
mov
cmp
iret
sbb
add
xchg
hlt
mov
iret
arpl
pop
inc
loop
out
and
push
out
lock
xor
setno
pop
iret
pop
and
nop
fisubs
mov
inc
mov
mov
mov
movsb
arpl
jbe
pop
and
mov
add
lock
and
or
andl
xor
scas
scas
imul
mov
imul
lods
cmpsb
lret
in
ss
in
enter
daa
xor
adc
or
shrb
cmp
lahf
pop
ds
push
scas
and
jae
lahf
mov
xor
rorl
xor
jg
insb
mov
sbb
popf
adc
stc
dec
cs
call
addr16
fdivl
test
pop
shrl
enter
clc
mov
push
jno
add
sub
mov
xor
push
push
addl
mov
xlat
pop
scas
sbb
lcall
loop
in
bound
test
aas
addl
hlt
jge
in
fsubr
mov
sti
data16
sahf
and
mov
fsubrs
imul
aas
bswap
movsl
dec
push
push
dec
sub
xor
jmp
out
cmp
imul
dec
cltd
dec
stc
adc
mov
inc
mov
or
lods
adc
dec
mov
arpl
cmpsb
popf
cmp
jle
sub
bound
jns
xlat
gs
hlt
gs
mov
inc
data16
daa
cmp
fistps
pop
imul
xor
dec
insb
fcoms
add
cmp
sub
ret
das
and
cs
add
ficomps
xor
xchg
fnstenv
mov
pop
jge
jecxz
mov
arpl
mov
call
scas
mov
push
adc
adc
pop
jmp
inc
inc
fisubl
jae
shlb
xchg
aaa
dec
sbb
outsb
rcll
int3
idivb
std
rcrb
cwtl
mov
jae
mov
xor
cld
lahf
fidivrl
lret
jl
xchg
mov
in
mov
lahf
mov
das
pop
fs
popa
arpl
ret
fsubs
mov
dec
adcl
adc
xchg
stos
loope
or
and
dec
and
mov
pop
iret
push
add
xor
xor
dec
and
inc
mov
jge
into
in
movsb
xchg
cmp
sbb
adc
cmp
pop
dec
rcl
stos
push
ret
cmp
push
mov
rorb
push
push
iret
mov
xor
lret
std
sub
xor
push
mov
test
loope
nop
test
adc
out
nop
enter
ret
shll
push
or
insb
outsb
fwait
arpl
cli
push
jnp
scas
add
daa
out
or
cmp
mov
or
mov
in
adc
lds
das
mov
dec
das
es
shlb
inc
sahf
adc
mov
cmp
bound
pop
mov
mov
enter
xor
jns
and
xchg
push
fisttpl
pushf
xor
out
inc
jo
test
push
pusha
inc
xchg
addr16
jp
shrl
jmp
cltd
pushf
jnp
mov
in
ret
adc
fbstp
push
jmp
gs
jae
xor
push
pop
mov
popf
xchg
insb
or
mov
stc
pop
stos
inc
and
and
lcall
lock
arpl
and
cld
adc
iret
jp
mov
pop
mov
hlt
mov
and
in
cmp
mov
add
add
inc
outsb
popa
mov
out
les
cld
in
call
fiadds
xchg
or
inc
rorb
mov
lret
leave
push
push
int3
movsb
out
imul
movsl
jmp
fcomip
add
repnz
sbb
movsl
shlb
fcoms
add
fmull
sbb
jp
jae
and
jmp
lret
and
push
sahf
push
xor
inc
mov
dec
in
sbb
sub
repnz
inc
jnp
jno
or
inc
shlb
cmc
idivb
loopne
movsl
inc
aas
call
lahf
fdivrp
adc
jae
test
enter
lret
mov
cmp
mov
das
in
pop
cmp
sti
push
out
loope
dec
mov
and
sub
and
adc
mov
add
adc
add
jl
push
mov
xor
and
add
and
inc
inc
jle
push
cmpsl
pop
cs
mov
push
sbb
insb
sahf
dec
mov
pop
xorb
mov
orl
icebp
lcall
push
cmpsl
sbb
daa
mulw
mov
jmp
adc
or
gs
lock
cmc
add
add
shrb
loop
mov
jb
test
add
hlt
iret
data16
or
movsl
aas
xchg
cli
jno
jge
push
in
xchg
in
mov
decb
push
push
loopne
pop
lods
pop
inc
add
adc
daa
loopne
push
dec
repz
mov
inc
dec
repnz
daa
sbb
ret
and
mov
in
push
push
movsl
sahf
add
adc
jae
nop
adc
loop
sub
inc
mov
insl
and
jecxz
add
data16
lea
add
add
cmpsl
sub
cmp
cwtl
stc
dec
repnz
out
out
lret
pop
xchg
inc
push
inc
dec
rcr
pop
push
lret
aas
adc
aas
jb
inc
mov
rolb
xor
jns
pusha
nop
inc
testb
std
std
xor
ljmp
push
inc
mov
xchg
or
lret
lret
jmp
jae
or
out
loopne
lock
lods
das
fcoms
mov
sbb
ds
rcrb
addr16
nopl
dec
jl
out
mov
push
ljmp
sub
jno
inc
and
sub
rolb
daa
and
inc
mov
dec
push
xchg
xchg
cmpsb
int
rorl
adc
mov
ljmp
cmp
shrl
int
jns
pop
js
push
stos
lahf
xchg
psrad
add
repnz
cltd
pop
lret
xor
fcoms
pusha
xchg
pop
pop
test
jo
xchg
lea
dec
mov
ror
int
or
pop
jg
xchg
rcrl
push
fldt
add
inc
scas
inc
fldenv
sbb
lea
add
mov
int
adc
jbe
icebp
mov
aas
out
add
aam
dec
adc
inc
xor
jb
mov
shll
in
adc
bound
mov
and
xchg
sub
pop
mov
addr16
sub
mov
jb
lods
jnp
cmpsl
jnp
lcall
pusha
lods
ret
aad
mov
arpl
or
clc
jae
outsl
in
push
and
dec
popf
mov
out
mov
stos
mov
arpl
imul
mov
dec
add
adc
aad
ret
in
pop
lds
cmc
arpl
mov
xchg
inc
and
push
aad
cltd
outsb
mov
int3
out
mov
fsubp
aas
inc
lds
cmp
loope
inc
repnz
ss
movsb
jns
pop
push
or
jge
popa
cmp
aam
add
xchg
cmp
or
push
add
xchg
adc
dec
mov
mov
xor
fs
or
sub
es
cld
push
inc
das
pop
cmpsb
rorb
in
add
sub
jns
inc
daa
lds
add
jno
arpl
cmp
push
and
lahf
std
pop
cmp
out
test
shll
xor
or
sbb
push
mov
ja
shrb
jle
xchg
cmp
fmul
jae
sub
mov
pop
adc
xchg
lcall
out
mov
mov
inc
mov
xchg
dec
lock
push
mov
mov
sub
aas
lcallw
stc
push
cli
mov
inc
jp
stos
mov
sahf
out
xor
test
mov
jg
adc
xchg
pop
add
jl
jp
cmp
jmp
xchg
or
cmp
loop
in
inc
lahf
lret
mov
sbbb
cmp
test
or
rcll
into
shrl
cmc
lret
xorl
fwait
outsl
inc
and
loop
adc
adc
clc
xchg
add
xor
mov
fiadds
mov
inc
out
gs
movsb
in
xor
data16
daa
sti
ss
xlat
and
push
loopne
imul
aam
adc
dec
add
jne
xor
out
xchg
add
out
sbb
bound
xlat
mov
jb
test
pushf
cwtl
mov
jmp
dec
mov
js
mov
insb
lods
and
out
cmp
inc
int3
fs
and
jecxz
mov
xchg
lea
jg
lods
mov
ficoms
out
adc
jno
adc
ja
inc
shll
inc
jbe
call
jb
sub
dec
push
xchg
shrl
les
std
fldt
dec
mov
mov
iret
addl
push
sub
pop
mov
mov
popf
xchg
adc
mov
mov
iret
push
xor
loope
mul
push
es
fisttpll
insl
clc
adc
cmpsl
jmp
mov
inc
pop
cmp
loop
sub
xchg
xor
mov
or
mov
sub
inc
ret
pop
dec
push
push
aam
jmp
mov
xchg
dec
fucomi
scas
rep
popa
mov
mov
scas
out
xor
dec
xchg
pop
dec
test
mov
icebp
sbb
cltd
dec
daa
jns
and
push
mov
mov
hlt
dec
fnstsw
test
popa
lock
cmp
sbb
ficomps
and
fisttps
and
fwait
sarl
leave
std
add
pop
andl
cmp
xor
insl
or
xchg
xchg
arpl
dec
mov
shl
ja
pop
sub
jne
inc
int3
add
mov
push
test
pusha
jne
das
mov
out
mov
bound
and
mov
pop
in
push
repz
das
addr16
cmpl
mov
fldl
cld
jle
push
loope
insl
sbb
dec
pop
xor
hlt
popf
imul
idivb
inc
jnp
xorl
shl
popf
loop
test
push
out
stos
sub
addr16
push
xor
or
aad
sub
push
nop
outsb
and
pop
jl
iret
cmp
push
ret
je
cld
mov
hlt
xchg
les
adc
repnz
cmp
into
stos
fimull
xchg
lcall
pop
lods
test
fimuls
cltd
into
rolb
test
jo
leavew
inc
mov
and
push
mov
jbe
out
jno
scas
mov
sbb
loop
or
int3
or
shl
cld
jl
xor
dec
push
fimuls
jge
mov
dec
xchg
and
cmp
push
lea
cmpsb
push
enter
mov
daa
les
mov
stos
pop
outsl
jno
loopne
sub
pop
in
cmp
ds
mov
cmovp
sbb
push
push
inc
sbb
fdivrp
jb
imul
or
loope
out
movhps
mov
outsb
push
shll
fdivrl
sub
cmp
bound
test
jb
fwait
jo
add
ljmp
and
pop
push
mov
adc
cld
jno
pop
sub
jl
fnstenv
adc
lods
testb
fldenv
jo
sbb
sub
xor
and
mov
imul
adc
mov
out
stc
jnp
fcomps
adc
rcll
adc
mov
fisttpl
dec
outsl
and
mov
cmp
xchg
je
xor
fsubrs
lahf
pop
loop
lcall
sbb
mov
add
int
xchg
loopne
lods
lds
and
punpckhdq
xlat
pop
xchg
xor
aad
in
xchg
test
sti
xchg
or
or
loopne
mov
test
adc
shrb
sub
or
repz
loop
sbb
popf
inc
int
movsl
xor
in
push
mov
inc
xor
jmp
ret
fcmovnu
jge
mov
or
call
je
fsts
js
je
mov
jecxz
mov
rorl
cli
pop
sbb
pop
cmpsb
jb
adc
orb
fildl
pop
fistpl
inc
xchg
xchg
jb
inc
cmp
ffreep
and
jle
sar
in
testb
imul
test
mov
insb
dec
sbbl
lods
mov
fs
lock
xchg
out
mov
mov
xchg
out
aam
dec
adc
es
jnp
dec
jb
aam
ret
jbe
mov
sbb
push
lods
dec
adc
mov
shll
shll
push
rcl
jbe
sub
jle
arpl
leave
push
pop
jbe
fstpl
imul
mov
xchg
aad
ja
and
mov
stos
pop
cmpsb
pop
out
xchg
xchg
push
xchg
movsl
andb
mov
jns
cltd
test
divb
loop
mov
lea
inc
xchg
cmp
aaa
xchg
mov
mov
int3
sarl
or
mov
addr16
lods
dec
add
js
pop
call
iret
dec
xor
out
in
inc
jo
mov
xchg
mov
add
jnp
or
addr16
inc
arpl
mov
mov
popa
sbb
push
mov
out
xchg
sahf
mov
jns
pop
scas
xchg
jg
orl
out
push
jl
cmp
imul
insl
jp
push
shll
dec
jp
jnp
sbb
xor
mov
add
xchg
inc
dec
leave
jmp
xchg
xor
mov
push
test
fstps
mov
mov
and
inc
adc
movsl
jae
mov
rcll
cmp
inc
iret
xchg
push
sbb
push
popa
adc
arpl
enter
mov
mov
xchg
inc
jmp
sti
int
xchg
icebp
and
int3
mov
shlb
popf
dec
rcrb
insl
bnd
sub
leave
mov
sbb
cmpsb
and
jbe
sbb
jge
ljmp
adc
stc
testb
pop
xor
mov
push
rcll
enter
sbb
shrl
push
sub
cmp
mov
or
cmpsb
mov
in
shl
sahf
enter
daa
ret
dec
fidivrl
ficomps
jno
adcl
dec
std
movsl
push
popa
and
xor
test
jmp
inc
stc
js
dec
pop
xor
insl
js
pop
ret
movsl
hlt
push
aad
loope
lea
sub
adcb
lds
dec
mov
orb
sbb
xchg
sub
push
mov
cltd
sub
testl
mov
cmpsl
mov
mov
jl
sahf
xor
sbb
jg
cmp
mov
scas
xor
xchg
enter
mov
sbb
pushf
cmp
pop
stos
mul
pop
leave
lret
mov
scas
jne
cmp
jecxz
or
add
pop
leave
arpl
shl
jp
add
sub
stc
out
mov
adc
out
cmpsl
add
stos
xchg
lods
lods
or
into
jae
out
cmp
and
fidivrl
in
std
jecxz
sti
xor
inc
mov
lcall
mov
jge
mov
mov
les
jae
xchg
mov
sbb
fdivrs
sub
push
mov
out
test
cs
aad
dec
lret
popa
daa
dec
inc
lahf
jne
repnz
lret
shl
lret
outsl
mov
addr16
stos
lcall
popf
mov
dec
mov
xor
jae
pop
jle
ret
inc
loope
sub
ds
aas
out
stc
das
jb
xchg
stos
dec
hlt
fcompl
aad
cltd
rorl
pushf
test
and
sub
cli
cwtl
cmpsl
popa
test
push
jae
xorl
in
cmp
mov
hlt
lock
adc
das
fwait
dec
mov
sbb
mov
ja
sbb
adc
xchg
es
mov
insl
lret
insl
cmp
ret
mov
out
sahf
iret
lods
mov
in
pop
mov
or
pop
dec
lahf
inc
sarb
pop
sub
xchg
inc
test
fidivl
fimull
aas
clc
jl
xchg
adc
in
xchg
cli
out
popa
iret
cwtl
jmp
stc
sti
and
push
iret
call
xchg
in
sbb
push
cmp
mov
jmp
test
pop
or
mov
pop
int3
mov
nop
add
dec
stos
jb
test
add
sbb
imul
push
sub
fwait
pop
xor
push
pop
addl
fiaddl
xchg
addr16
mov
inc
xor
mov
imul
add
mov
ss
ja
mull
cli
cmp
idivb
mov
loopew
or
adc
jb
mov
sub
jns
scas
ficoms
adc
out
lcall
dec
jl
addr16
lds
cmpsb
insb
mov
mov
jbe
cld
leave
jle
or
jnp
insb
pusha
jle
mov
xchg
adc
cwtl
jmp
xchg
in
mov
push
imul
popf
xor
mov
test
int
adc
sbb
mov
mov
imul
scas
scas
out
mov
adc
mov
jne
jnp
fwait
pop
push
dec
hlt
sub
in
icebp
cwtl
cmpsl
or
xor
mov
xchg
dec
add
int3
test
insl
pop
or
and
iret
push
pop
lds
add
rorl
push
xchg
xchg
leave
das
mov
lds
and
mov
data16
mov
xor
add
sub
mov
push
movsb
or
xor
jne
pop
scas
mov
and
dec
dec
cmp
add
dec
cmpsb
pop
adc
push
enter
daa
ret
cmp
adc
jno
inc
out
out
mov
xchg
ds
out
movsl
pop
fucomip
and
aam
pop
dec
lahf
push
jmp
fdiv
add
sub
xor
pop
iret
cmp
ss
pop
fsubrs
pop
xor
inc
push
mov
ja
into
dec
sub
lea
outsb
sub
cli
adc
sub
mov
jp,pn
andb
push
sbb
loopne
fidivrs
and
test
xchg
daa
adc
ficomps
sub
movsb
std
pop
sub
lcall
xchg
mov
sbb
fmuls
test
or
andb
xchg
push
dec
mov
and
mov
aad
adc
into
xchg
ss
call
xchg
adc
test
mov
sbb
inc
pop
idivl
rorl
into
jl
cwtl
cmc
and
xor
mov
stc
cmpsb
jns
adc
imul
lcallw
inc
sahf
mov
imul
insl
cwtl
xor
push
sti
in
sar
xchg
adc
push
inc
loopne
or
pop
ret
adc
es
imul
repz
lahf
mov
sbb
adc
sbb
and
mov
cltd
lods
popf
jmp
not
mov
mov
nop
jg
inc
dec
cmpsb
ret
push
inc
add
adc
jecxz
mov
jb
rorl
sbb
sub
fstps
out
sub
hlt
orb
ret
add
les
or
aas
mov
jb
sbb
dec
imul
pusha
in
cwtl
rcrl
inc
std
shlb
push
mov
or
mov
mov
jbe
and
cmpsl
adc
mov
iret
shl
and
out
scas
aad
mov
inc
adc
mov
sbb
imulb
std
jne
push
sbb
mov
jne
lods
and
mov
loope
pop
mov
push
push
rclb
xchg
and
pop
mov
inc
mov
popf
adc
add
xchg
push
sub
ljmp
fistpl
cmpsl
stos
std
mov
xlat
xchg
xor
sbb
push
add
pop
int
add
iret
js
repz
add
xor
jge
push
xchg
inc
test
imul
push
or
insl
or
stos
dec
adc
add
push
add
xor
pop
push
in
pop
sbb
std
mov
mov
icebp
shlb
or
dec
sub
clc
adc
insl
and
rorb
add
jp
pop
jle
push
cmpsb
and
mov
jns
in
xchg
xchg
adc
je
out
xchg
pop
sub
inc
cmp
and
jp
loope
mov
addl
jle
aam
in
pop
insl
pusha
sbb
stos
xchg
out
or
aas
cmpsl
sbb
leave
jae
push
in
cs
xor
sub
int3
jae
sbb
nop
out
imul
jns
push
sbb
push
or
adc
jae
iret
push
push
push
ret
cltd
pop
mov
cmp
arpl
lods
inc
hlt
push
stc
or
scas
sbb
inc
jmp
std
insb
xchg
lahf
pop
lret
aaa
xchg
jae
fidivs
sahf
lds
push
pop
mov
imul
movsb
movsl
jbe
shll
sbb
outsl
pop
aaa
xchg
hlt
jmp
add
pop
ljmp
mov
cwtl
jo
cmp
imul
cmp
out
push
sub
cmpsb
fsubr
repnz
mov
sbb
inc
jl
jno
cs
sub
iret
and
dec
and
ds
fmull
and
aam
lahf
jns
sub
test
inc
mov
mov
jmp
adcl
dec
push
clc
sub
fdivrl
dec
sub
pop
xchg
outsb
mov
cmpsl
adc
add
xchg
xor
xor
jne
mov
sbb
incl
xchg
or
int
pop
inc
sub
leave
pop
test
cmc
push
mov
arpl
data16
sahf
jnp
addl
movsl
jbe
mov
into
sti
mov
add
mov
ss
sbb
fmul
mulw
or
rcr
add
xchg
int3
or
gs
out
dec
xor
sub
loop
outsb
and
pop
or
adc
aaa
iret
add
cltd
lods
jp
fmull
mov
add
xor
sbb
sti
xchg
cld
inc
aaa
aam
xchg
jnp
out
and
cmp
adc
mul
imul
lea
sub
test
jmp
mov
dec
pop
dec
xlat
bound
lock
inc
test
cs
enter
mov
dec
add
fnstcw
sub
call
lods
aam
aas
dec
push
call
test
sbb
cmp
dec
mov
inc
pop
out
cmp
lds
sub
rcl
dec
loop
jl
jmp
mov
jmp
shl
dec
dec
ret
sbb
cwtl
sbb
adcb
pushf
scas
andl
out
push
push
mov
bound
jge
sbb
pop
pop
push
mov
stos
adc
out
xor
push
insl
xchg
adc
dec
arpl
pop
mov
popf
jo
lods
mov
mov
call
or
pop
mov
and
and
mov
vorps
inc
fstl
mov
jp
pop
popa
std
sahf
loopne
dec
mov
stos
in
insb
push
mov
jnp
push
icebp
dec
mov
add
add
xor
dec
xchg
mov
xchg
movl
test
out
aas
xchg
rorl
addb
subl
dec
or
add
leave
fwait
jg
hlt
cmpsl
jb
mov
lret
push
arpl
insl
gs
xchg
lahf
mov
mov
pop
or
pop
lods
xor
ret
dec
shrl
mov
shlb
decl
mulb
mov
add
xor
insl
bound
jne
jns
int
xchg
loopne
adc
pop
std
cld
sub
inc
nop
adc
push
jle
mov
pop
mov
test
jnp
mov
jle
xchg
jp
mov
mov
mov
jo
mov
jmp
cmpsl
ret
xchg
mov
ret
popf
jle
fstpt
add
das
stos
test
adc
testb
shrl
add
enter
mov
test
pop
fdivs
hlt
rcrl
arpl
adc
negl
fimull
sub
sbb
fdivs
ficompl
mov
popa
int3
jle
scas
pop
imul
jnp
xor
out
out
jg
mov
mov
inc
andb
and
jge
out
sbb
int3
aaa
push
lods
add
add
xchg
adc
lock
into
call
push
push
adc
sub
cs
dec
arpl
and
test
lods
inc
cli
test
xor
enter
daa
rorb
cwtl
stos
jno
cmp
mov
cmp
adc
movsl
imul
and
scas
lahf
cwtl
sub
ss
test
or
lcall
xor
js
shlb
aad
push
pop
mov
or
and
cltd
sub
out
outsb
out
dec
aaa
adc
fidivrs
in
int3
sbb
mov
mov
adc
and
into
int
les
call
cmpsl
ficomps
lods
pop
data16
mov
sahf
push
cmp
push
push
or
lcall
fwait
cmp
fs
mov
ss
das
cmp
mov
mull
pusha
icebp
lret
cmp
jae
push
cmp
daa
xchg
or
test
inc
test
cmc
scas
pop
js
loop
cmpsb
outsl
mov
enter
cmp
add
cmpsb
push
data16
arpl
lahf
fists
cli
mov
push
xor
notl
sti
inc
sbb
pop
or
lea
jns
adc
mov
imul
int3
jle
clc
ret
sarb
sbb
mov
dec
sub
scas
aas
pushf
out
js
jmp
cmp
cs
aad
cmpsb
xchg
nop
xor
sbb
sub
xchg
je
out
mov
mull
js
lea
imul
jb
ljmp
idivl
pop
addr16
add
fildl
jb
mov
loop
jbe
sub
cmp
leave
std
push
insl
pop
cwtl
fmul
lret
mov
jnp
mov
mov
cld
int3
std
fmul
test
push
mov
lahf
loopne
fmuls
mov
cmp
out
mov
bound
aam
cs
ret
sarl
and
insl
jnp
cmp
or
mov
je
jle
stc
push
fistpll
inc
out
out
scas
mov
pop
test
rcl
clc
test
loope
mov
mov
and
xchg
clc
ja
inc
xchg
sar
insb
ljmp
push
cli
or
cmp
xchg
roll
int3
lods
lret
and
add
mov
popa
nop
loopne
lcall
xchg
mov
test
lds
sbb
stos
rcl
inc
js
iret
insl
gs
lods
sbbb
mov
ds
rcrl
xchg
dec
mov
fucomi
adc
in
ret
inc
xchg
out
lahf
mov
call
cmp
ja
mov
mov
dec
jp
ja
ret
mov
insl
dec
mov
mov
mov
outsb
aam
movsbl
lcall
xchg
stos
or
addl
pop
sub
cmp
into
mov
mov
lods
ss
hlt
xchg
sbb
xor
xor
nop
inc
test
jbe
fisttps
xchg
mov
inc
mov
cmp
push
mov
or
cmpsb
sbb
inc
mov
pop
and
push
aad
inc
xor
imul
adc
bound
adc
mov
ret
pop
pop
movd
or
mov
inc
cli
xchg
pop
out
inc
push
out
rcr
lret
cld
cmpsb
xchg
dec
jl
int3
imul
test
mov
test
rorb
add
fwait
out
push
repnz
sti
leave
xchg
decl
movsb
mov
test
jge
lods
lahf
sbb
xor
aaa
adc
cmp
loope
test
lds
dec
cmp
cmc
jae
in
jnp
xchg
movsl
and
pushf
pop
push
mov
shl
loop
adc
outsb
inc
das
enter
daa
mov
push
subb
dec
cmp
les
and
inc
mov
mov
mov
loop
test
adc
inc
outsl
test
pop
iret
mov
js
pop
sbb
push
jmp
loope
loop
fmul
lahf
les
roll
outsb
push
ret
fcoms
mov
jl
sbbb
sbb
xchg
shlb
push
outsl
push
fwait
sub
int
dec
sub
jo
cmpsl
adc
lcall
movsl
mov
sbb
nop
sub
mov
pop
xor
rcl
test
push
fs
xor
and
xchg
fcmovu
inc
jne
mul
mov
sub
cmp
nop
xchg
or
inc
into
and
add
xor
inc
das
loop
push
mov
lret
adc
adc
xchg
int
frstor
pop
sahf
lods
dec
dec
push
mov
sbb
pop
xor
mov
in
test
clc
jge
lret
gs
mov
loopne
pop
lea
or
adc
imul
pop
loop
mov
pop
sbb
les
xlat
loopne
mov
mov
lcall
cs
aad
cmp
nop
adc
sahf
inc
sarl
mov
imul
mov
and
popa
out
pop
cmpsb
mov
add
stc
das
cld
dec
pop
inc
mov
das
mov
pop
or
cmp
sbb
fidivrs
imul
sarb
insb
and
mov
rorl
inc
mov
lds
shll
ficoml
inc
cld
negl
jmp
ds
out
lock
fsubrs
pop
jnp
mov
sbb
aam
cmp
ret
push
pop
jne
movsb
fadds
out
xchg
dec
pop
pop
adc
inc
aam
icebp
dec
rcrb
mov
push
ja
testb
mov
sub
lret
dec
add
pop
inc
dec
test
xchg
ficoms
push
fucom
dec
inc
clc
mov
jecxz
adc
push
pop
movsl
add
sbb
xchg
or
cmpsl
pop
and
jnp
push
add
pop
cltd
cwtl
les
xor
in
mov
pushf
pop
std
dec
inc
or
test
cs
xchg
pushf
pop
sbb
xchg
fcmovbe
cs
popa
fcmovne
pop
push
xchg
mov
add
pop
aas
pushl
idivl
cs
or
dec
fwait
in
jbe
xchg
cmp
push
mov
cmpsl
pop
and
lcall
addb
mov
adc
inc
jne
mov
inc
movsb
out
out
dec
in
sub
jp
xchg
jbe
mov
xor
or
hlt
pop
addr16
into
sub
lock
mov
sub
jnp
jnp
jle
out
in
jp
pusha
ljmp
xchg
pusha
in
jmp
mov
nop
sbb
ja
sahf
popf
int3
in
mov
push
orb
stos
fldl
and
jp
sbb
cmp
mov
cmp
mov
jle
dec
jb
insl
ret
jle
inc
dec
and
push
fildll
mov
js
std
push
mov
inc
data16
fidivrl
loope
movsb
in
pop
int3
push
push
out
pop
and
lds
jbe
and
repnz
out
or
movsb
inc
js
push
xor
jbe
lret
cltd
push
imul
jb
aaa
shrb
int
pop
ss
cli
dec
dec
lods
shlb
stos
orl
push
test
and
ljmp
mov
cmpsl
inc
sbb
or
gs
jle
push
adc
daa
mov
in
and
rorl
lcall
ds
cmpsb
push
and
loope
push
xor
sar
add
jge
xor
into
inc
mov
push
xchg
mov
xor
push
jb
loope
sarl
fdivrl
subb
pusha
aad
mov
mov
rclb
sub
xor
ja
or
sbb
mov
inc
push
sahf
imul
fdivrp
lods
pop
es
popf
lcall
or
aas
cld
sahf
fs
test
add
sub
mov
add
cld
fs
dec
into
adc
cmpsl
ss
jne
fdivr
pop
lods
negl
push
stc
shll
jp
call
mov
push
outsl
pop
fidivrl
stc
orb
pop
add
cmpsb
gs
lods
das
adc
mov
fucomip
cli
or
pop
xor
sub
mov
push
pop
gs
lcall
ds
mov
imul
inc
xor
xchg
pop
adc
pusha
lcall
pop
in
sub
cli
pushf
inc
xchg
sahf
jmp
mov
cs
sub
pusha
dec
and
inc
push
sbb
popa
test
jecxz
push
sub
jle
mov
call
and
push
sub
push
mov
dec
dec
pop
sbb
pop
ljmp
test
xor
jge
or
jb
das
push
dec
inc
insb
mov
mov
negb
out
xor
cwtl
dec
dec
hlt
mov
cld
jnp
int
jne
daa
mov
and
and
arpl
daa
mov
inc
pushf
mov
call
das
testb
mov
rclb
aam
cwtl
dec
ret
fbstp
inc
es
ret
cmp
dec
push
lret
mov
mov
icebp
and
out
lods
iret
jno
mov
mov
bound
out
scas
rcrb
test
loopne
push
test
es
in
and
dec
fimuls
ljmp
into
pop
push
xchg
or
in
aad
dec
cli
mov
andb
add
push
cltd
iret
pushf
or
scas
push
mov
lahf
push
add
addr16
test
sub
xchg
mov
roll
mov
mov
ss
add
sbb
je
cmpl
push
jge
xchg
mov
mov
sbb
mov
fldl
js
incl
out
inc
in
ss
mov
pop
sub
jne
push
jbe
lds
out
int
lock
shr
jns
inc
jne
inc
popf
fadds
out
add
xor
addr16
fidivs
lret
jnp
test
mov
in
sahf
adc
test
sbb
sbb
in
rclb
or
mov
push
mov
xchg
inc
and
pop
bound
mov
xor
dec
adcb
sub
ret
mov
hlt
mov
pop
push
inc
add
subl
mov
xchg
sti
xor
aas
pop
addr16
mul
inc
fdivrp
dec
xchg
imul
inc
xor
repnz
andb
rcll
push
orb
cmp
dec
sbb
mov
lret
repz
add
sbb
push
adc
fdivs
cmp
pop
scas
in
fwait
and
adc
push
addr16
inc
cmpsl
add
cmpsb
call
enter
ja
daa
mov
and
jnp
add
jbe
sbb
movsl
xorb
and
lahf
cmc
adc
push
or
xor
sub
xor
loopne
or
pop
js
push
push
outsl
test
clc
loope
in
fsubl
aas
mov
adc
outsl
icebp
pop
vphadduwd
imul
push
repnz
push
mov
or
sub
outsb
pop
movsl
jnp
lcall
decl
mov
sahf
pop
sub
test
pushf
pop
andb
mov
mov
xchg
or
pop
adc
in
mov
lock
in
and
lret
sarl
pop
cmp
fdivp
or
mov
cmc
add
or
outsl
cmp
or
jnp
cmpsl
mov
add
adc
sub
imul
jecxz
out
and
cmp
in
in
jg
cs
dec
adc
inc
push
jae
push
mov
push
imul
andl
xchg
sbb
cmp
nop
test
pop
sti
adc
or
adc
lock
or
mov
aad
xchg
nop
mov
mov
fstps
or
jecxz
cs
sbb
call
movsb
in
pop
mov
adc
dec
fisttpl
push
enter
cmp
sub
dec
jb
mov
dec
mov
inc
mov
negb
cld
std
adc
sub
outsb
subl
shlb
mov
push
iret
lret
shlb
mov
dec
mov
les
jmp
test
mov
xchg
cmp
ret
outsb
pushf
sbb
stos
and
xor
dec
dec
or
cmpsl
mov
inc
mov
lods
cmp
stos
mov
add
inc
mov
add
jae
sub
icebp
adc
mov
jo
push
insb
xchg
jo
xor
nop
clc
sub
xchg
inc
out
sahf
popa
pop
pop
mov
stos
stos
test
inc
out
dec
hlt
mov
xchg
in
inc
push
pop
inc
insb
inc
xor
mov
xor
lret
insl
mov
mov
stos
lret
mov
xor
cwtl
jae
rcr
addr16
and
mov
push
xchg
add
push
and
aam
or
mov
xlat
or
dec
pop
aaa
mov
cwtl
or
dec
popf
and
inc
test
mov
mov
dec
pop
push
jmp
mov
sub
out
lods
jg
bound
cmp
mov
jae
xor
out
xor
or
test
addr16
push
jp
xchg
pop
mov
cld
mov
jnp
push
adc
in
adc
and
fucomip
mov
jle
adc
adc
xchg
push
std
ja
popf
sbb
mov
push
aaa
lret
cwtl
jmp
sbb
aad
imul
push
enter
xor
aaa
iret
xor
ret
cmp
icebp
pop
hlt
in
out
mov
xchg
xchg
inc
add
or
mov
jne
in
jg
push
cmp
pop
and
cwtl
cmpsb
lds
mov
pop
in
bound
or
leave
stc
or
push
iret
cwtl
xorb
cwtl
jge
pop
mov
scas
mov
dec
mov
inc
add
xchg
mov
cmp
jo
jl
scas
les
hlt
cmp
jge
push
pop
inc
ret
inc
ss
cmpsb
imul
in
and
enter
daa
mov
adc
jno
inc
sub
xchg
push
cmp
inc
jg
xchg
jo
out
pop
lahf
adc
push
push
fistpl
xchg
add
popf
pushl
loope
jmp
int
ret
xchg
mov
mov
pop
scas
mov
jg
sbb
arpl
mov
fisttpl
adc
dec
xchg
mov
xchg
int3
add
mov
cmp
shlb
faddl
movsb
inc
push
int
inc
dec
sub
sbb
mov
push
or
xor
push
ljmp
push
jg
add
xchg
jg
push
bound
ja
scas
fs
add
adc
testb
xor
xchg
jne
negl
pop
ror
stos
cmp
les
into
into
mov
cmc
lret
xor
outsl
sbb
cmp
pushf
ss
stc
lock
or
sub
jp
in
lods
fmull
push
pop
mov
out
sbb
xor
test
sti
incb
out
test
test
pusha
in
jl
lds
lock
adc
inc
mov
repz
cmp
scas
xchg
cmp
sbb
popf
xchg
fisubrl
jge
sub
pushf
fwait
jmp
sti
icebp
cli
cs
mov
jmp
in
nop
mov
icebp
xchg
inc
ja
xchg
fxch
inc
stos
je
push
faddp
test
push
call
and
pop
ds
insl
adc
and
fstpt
out
xchg
jg
inc
imul
jb
jb
dec
xor
sbb
shll
inc
negb
cmpsl
rcrl
mov
mov
outsl
cld
js
jo
inc
mov
icebp
mov
out
jbe
inc
lds
and
fst
add
or
std
inc
loop
sub
jecxz
dec
dec
fdivl
mov
shlb
lods
movsl
fmull
mov
iret
inc
ja
or
mov
and
jb
inc
aad
sub
mov
xorb
aam
fstl
adc
arpl
in
xchg
int
push
mov
and
pop
cmpsb
push
cmp
xchg
fldl
push
cmp
mov
add
push
xor
cmp
mov
movsl
movsb
add
sarb
test
jecxz
xchg
rcrb
lock
shll
mov
lret
fwait
push
adc
add
aad
cmp
daa
fldcw
in
xchg
xchg
sub
mov
test
push
sbb
inc
dec
nop
test
inc
sbb
outsl
mov
mov
bound
js
mov
cmp
out
mov
in
jns
int3
insb
xchg
xlat
orb
rcll
in
loop
sub
sub
dec
addr16
out
mov
jns
es
insb
mov
in
jle
mov
in
jno
pusha
mov
xor
mov
inc
ficoms
test
rclb
inc
push
xchg
cmp
dec
inc
and
je
icebp
pop
clc
imul
scas
movsb
subb
movq
ret
xor
jmp
and
cmp
arpl
ss
nop
stos
mov
jecxz
ficoml
adc
jbe
push
mov
fiadds
vpsrad
jbe
xchg
mov
pop
and
movsb
out
insl
push
push
daa
push
jbe
pop
jge
scas
pop
sbb
stos
sbb
or
mov
add
pop
mov
repz
stc
lahf
jne
lods
xor
repnz
jg
mov
dec
cmp
je
inc
lds
cmpsb
out
push
popf
enter
daa
mov
mov
jno
xchg
into
sub
fwait
push
bound
xchg
ds
add
icebp
and
jnp
push
scas
cltd
fsubrl
inc
sub
xor
mov
cld
js
mov
sbb
inc
mov
jnp
mov
jnp
clc
sub
and
adc
and
popa
xor
movsl
arpl
sbb
xchg
and
mov
xlat
int
pop
in
sub
inc
pop
mov
jb
push
pop
repnz
cs
test
fucom
dec
jg
mov
rclb
in
mov
pop
pop
fs
ss
inc
cmp
xor
jbe
or
daa
cmp
jge
or
jo
cmc
xchg
jg
xor
lods
adc
das
xchg
add
cmpsl
aam
adc
out
lods
add
or
lods
in
push
mov
cmp
inc
xor
cmpsl
pop
sti
lods
ss
or
gs
push
loopne
xor
mov
imul
inc
xchg
xchg
mov
push
insl
cmp
mov
sub
dec
xchg
mov
inc
rep
jmp
dec
clc
cs
loopne
aad
gs
nop
jl
pop
dec
aas
xor
flds
pop
pop
je
sbb
movb
dec
call
mov
ret
out
push
adc
dec
or
pop
xchg
shll
inc
test
in
out
pushl
popa
std
dec
lods
fdivs
rol
xchg
mul
test
std
popa
jo
cwtl
jg
out
in
sbb
mov
xchg
pusha
cld
mov
nop
jo
lret
mov
jl
lock
in
das
xchg
out
mov
cmc
xlat
push
iret
lods
aam
mov
lea
mov
push
insl
push
push
dec
inc
inc
cmp
mov
cmpsl
inc
push
lods
adc
int
cmp
pop
and
iret
jne
pop
inc
clc
adc
imul
jecxz
imul
mov
fnstsw
adc
sahf
push
cmc
xchg
or
sbb
sub
jl
xchg
cmp
jae
xchg
aam
and
in
adc
stos
add
std
jg
adc
andl
jecxz
scas
test
pushf
push
xchg
cmpb
and
rorl
imul
pop
mov
add
imul
ljmp
aad
or
mov
mov
sub
mov
push
or
ja
add
cmpsl
inc
mov
mov
add
dec
and
mov
pop
mov
pusha
nop
out
push
lcall
test
xchg
mov
daa
out
push
sahf
sub
and
adc
sbb
imul
push
std
out
insb
or
add
cmp
jle
add
in
ss
push
xchg
fildll
scas
rclb
add
shll
adcl
test
addr16
jl
add
insl
jp
sbb
mov
inc
scas
pop
mov
call
iret
out
shll
pop
and
inc
hlt
adcl
lret
inc
or
or
or
inc
fistpll
fimull
inc
xchg
add
ja
add
pop
add
fsubp
or
rclb
jo
scas
sub
leave
out
pop
movsb
jb
ficoms
stc
xlat
jbe
sbb
sbb
cmp
or
fnstenv
jl
arpl
push
mov
sub
scas
cmp
and
insb
cmp
lret
stc
jg
push
loope
cmpsb
jno
jns
icebp
ds
inc
dec
mov
mov
add
xchg
sub
jns
cmp
mov
shll
sbb
mov
push
orl
add
or
jno
push
nop
mov
mov
pop
pop
sub
insl
push
cwtl
inc
loope
cmc
lret
fsubl
mov
sub
pop
outsb
inc
pop
popf
adc
add
es
ret
sbb
popf
pop
mov
lret
xchg
cwtl
push
stos
out
sbb
push
pop
int
lret
pop
and
mov
xlat
cld
mov
mov
popa
mov
scas
movsb
push
sahf
lock
and
clc
or
mov
and
testl
mov
sub
cmp
jmp
fdivp
fwait
dec
icebp
lret
push
sar
aas
cmp
or
or
shl
pop
pop
cmc
xor
xchg
outsl
ficoml
loop
and
xor
or
add
and
lods
lret
and
cltd
mov
aad
shlb
imul
sub
pop
out
mov
sub
pop
gs
pop
loopne
push
dec
pop
mov
pop
mov
out
sub
xchg
fs
scas
sbb
jmp
int
sbb
sub
jl
clc
inc
push
pushf
icebp
mov
mov
mov
ljmp
sahf
jbe
inc
popf
inc
and
cmp
sbb
cmpsb
mov
pop
call
and
xor
lods
and
dec
negb
repz
adc
cmp
mov
aas
xchg
adc
test
and
xlat
rcll
test
and
int
or
pop
mov
das
push
mov
in
cld
into
push
dec
lret
pop
inc
fisttpl
sub
lock
sbb
das
jb
je
inc
sbb
mov
lcall
es
pop
insl
in
mov
cmp
inc
xor
cmp
lods
jnp
lock
adc
mov
mov
bound
loopne
fiaddl
test
cmp
sub
mov
cmp
movsl
jb
clc
dec
xchg
dec
rorl
lahf
addr16
popa
sahf
and
cld
cld
stos
jne
inc
out
jno
jb
imul
push
out
mov
orps
ljmp
sbb
mov
stos
ret
dec
int
test
ljmp
mov
jbe
loope
out
or
dec
aad
int
push
ret
add
xchg
jecxz
dec
sbbl
add
icebp
in
fucomip
xchg
enter
adc
cmp
ja
cmp
jbe
scas
inc
dec
mov
mov
fldt
push
dec
push
mov
jne
sub
mov
lcall
or
add
cmp
mov
sbb
mov
sub
pop
or
sbb
out
or
aam
int3
insb
jbe
sub
push
mov
ds
mov
mov
stc
jmp
dec
sub
inc
jmp
hlt
add
adcl
mov
mov
mov
fcomp
and
and
sbb
call
shrb
adc
and
ret
dec
pop
pop
cmp
hlt
into
jle
arpl
cmpsl
aam
or
jno
les
push
loope
out
fisubl
int3
jmp
inc
pop
mov
aam
mov
std
popf
shrb
repnz
leave
pop
fcomps
push
mov
int
jge
or
cwtl
pop
lock
mov
or
mov
int3
dec
xlat
or
push
lahf
xorb
dec
pop
jo
sti
scas
popa
lahf
pop
and
mov
bound
rolb
mov
cmpsb
hlt
fnstsw
fadds
dec
daa
mov
or
cli
sub
sub
or
cmpsl
pop
test
and
cmc
inc
push
push
sub
push
add
inc
stos
xor
xchg
push
hlt
inc
pop
mov
cmp
pop
imul
loope
cwtl
rcr
fwait
mov
insl
arpl
adc
mov
or
rcrb
push
icebp
mov
pop
lret
and
lods
sbb
lods
jb
int
cmp
inc
test
pop
mov
cmp
push
or
sub
add
in
fldl
popf
add
jbe
sbb
add
stos
adc
pop
push
mov
and
cmpsb
jge
negl
and
out
daa
and
xchg
lods
bound
imul
ja
sbb
pop
xchg
mov
pop
incb
outsl
mov
jmp
stc
adc
jne
add
or
xor
lods
mov
jno
pushf
adc
out
gs
cli
or
divl
inc
sti
or
decb
mov
loopne
sbb
fxch
dec
adc
cwtl
imul
mov
repz
incl
and
jb
pop
jl
sub
mov
mov
pushf
push
fsubr
enter
sbb
mov
rcl
nop
xor
ja
std
mov
clc
fnstenv
je
jne
jecxz
inc
or
std
mov
call
mov
out
adc
pop
scas
dec
loope
mov
pop
fsubl
leave
inc
daa
mov
aas
and
faddl
lcall
shll
dec
mulb
scas
lods
pop
cwtl
cmc
cmpsb
pop
mov
xor
sbb
cld
stc
mov
lret
mov
jbe
icebp
ret
cmp
push
bound
push
xor
mov
arpl
jne
gs
cmpsb
ret
stos
dec
es
gs
int3
fcmovnu
dec
cmp
pusha
cmpsl
mov
xchg
leave
icebp
push
push
subb
clc
mov
and
mov
xorl
sub
add
test
sbb
push
js
test
int3
mov
lods
xchg
mov
andb
sbbb
stos
test
out
aam
pop
xchg
mov
daa
push
leave
je
lgs
add
loopne
cltd
loop
sysenter
cmpsl
mov
xchg
mov
push
loopne
int3
sbb
sarl
lea
cmp
fcomps
gs
push
add
mov
inc
inc
xor
push
or
mov
xchg
pop
lea
pop
ror
mov
test
mov
inc
loopne
sub
adc
dec
jmp
cltd
cwtl
mov
out
out
sub
fisubl
ror
icebp
loop
xchg
cmp
outsb
pop
out
test
enter
xchg
mov
test
loope
or
xor
shr
pusha
mov
push
xchg
push
sbb
jmp
cmp
or
xor
cli
shrb
stos
jp
fwait
push
cwtl
sbb
repz
scas
int
rclb
in
fstl
mov
fs
cmp
lret
pop
nop
out
dec
hlt
sbb
test
inc
mov
add
inc
pusha
lods
outsb
fidivl
cmpb
jmp
and
sub
add
rol
or
push
fcmovnbe
leave
aad
push
movsb
mov
mov
jge
or
push
adc
pop
or
mov
imul
lds
xor
add
scas
inc
dec
repz
dec
push
dec
lcall
jb
inc
cmpsb
ja
xchg
in
mov
insb
jmp
cmp
lret
inc
mov
sub
mov
cmp
outsb
ds
movsl
mov
lods
bound
daa
inc
ss
int
xor
lret
jb
loopne
push
js
loop
pop
stos
scas
lods
push
arpl
jl
dec
sub
outsb
push
test
adc
mov
or
fisubs
sbb
mov
or
push
mov
int
incl
sub
push
sbb
and
jecxz
fs
rorb
outsl
clc
sahf
fdivrl
subb
int
cmp
or
push
dec
out
mov
adc
or
cli
inc
jne
int
xlat
fsubs
jp
sbb
in
shrl
add
mov
xchg
into
pop
aam
cmc
out
xchg
xor
movsl
es
in
stc
int3
loopne
adc
aaa
mov
mov
push
mov
lods
cltd
subb
xchg
shll
out
aas
jl
cmp
jmp
in
xchg
lcall
jb
lds
lods
loopne
sub
adc
pop
imul
xchg
dec
repz
xchg
dec
shld
aam
xlat
cltd
es
sub
andb
mov
jg,pn
sbb
pop
and
nop
or
or
or
je
and
jecxz
jbe
nop
push
jno
fisubrs
mov
shlb
adc
test
insl
fstpt
iret
pop
jg
mov
push
repnz
aad
lea
rcrb
jle
mov
adc
aad
into
enter
xor
std
push
and
mov
fwait
mov
loope
mov
xorw
lret
std
stc
lret
mov
lret
jge
lock
test
mov
sbb
aam
mov
ret
cmp
fwait
insl
mov
stos
dec
ss
cmpsl
mov
movsl
mov
sub
adc
push
mov
or
daa
xor
mov
cmp
sub
pop
ljmp
inc
add
arpl
clc
dec
das
mov
ljmp
cmc
pop
push
add
stos
push
sbb
aaa
cmc
mov
push
movsb
jae
unpcklps
xor
cltd
sbb
push
xor
dec
movsl
mov
mov
sub
pop
subb
pop
mov
rorl
lea
and
popa
push
or
add
push
xor
sub
in
mov
xchg
lcallw
sub
pop
aas
inc
sub
dec
pop
or
inc
ja
xchg
mov
mov
das
add
mov
dec
fucomp
pop
mov
mov
xchg
add
add
out
sub
sub
adc
ds
mov
sti
and
dec
xchg
adc
xor
test
enter
std
pusha
daa
sbb
filds
fstps
jmp
or
mov
fdivs
popf
frstor
and
lods
je
add
lea
mov
es
int
imul
adc
sub
adc
mov
or
sbbb
pop
hlt
xlat
add
inc
adc
or
jl
pop
inc
test
xchg
add
call
stos
pop
push
pop
shl
pop
mov
cmpsl
cmp
dec
jmp
movsb
adc
push
pop
or
jbe
xchg
pop
jge
repnz
sbb
popa
pop
aaa
or
or
roll
jge
sbb
dec
mov
pop
push
gs
cmpsb
xor
pop
mov
scas
pop
stc
sub
aaa
dec
add
jbe
stc
push
push
adc
add
imul
cmpsb
mov
xor
mov
clc
cmp
addr16
add
xchg
in
push
ljmp
stos
adc
out
or
lahf
scas
jg
push
cli
nop
mov
inc
lods
jge
insl
stos
adc
in
or
pushf
pop
dec
pop
pop
fistpll
js
and
pop
jmp
jnp
xlat
dec
add
daa
in
sub
xchg
mov
mov
xchg
cli
dec
popl
das
xor
jecxz
mov
push
mov
mov
and
scas
and
mov
and
dec
test
outsb
pop
lahf
adc
aam
push
mov
inc
dec
sbb
out
fldcw
test
jg
mov
mov
mov
sbb
imul
cmp
ss
lahf
mov
neg
cmp
aad
faddp
ret
cmp
test
pusha
into
cmp
cmp
xor
push
aam
jnp
adc
adc
adc
dec
pop
add
xlat
cmp
orb
out
popf
sar
adc
out
insb
mov
add
xchg
sti
imul
dec
loopne
dec
loopne
pop
fimull
imul
enter
or
sbb
pushf
aaa
mov
sub
test
push
daa
loop,pn
aad
sarb
call
pop
xor
shll
or
mov
jle
add
inc
popl
call
sahf
ror
mov
xor
dec
mov
mov
cmpsl
sti
nop
pop
and
inc
xor
jmp
aas
arpl
jb
fisttpl
mov
and
inc
pop
roll
icebp
shl
in
dec
dec
std
std
jp
cwtl
imul
mov
jg
mov
mov
cld
dec
pop
loopne
insb
cli
xor
jg
aam
or
and
setb
add
mov
sti
pop
mov
es
cmc
je
xor
jne
icebp
add
out
mov
fsubrl
mov
cs
xor
mov
lret
mov
fchs
mov
imul
fstpl
push
mov
mov
ret
ljmp
ficomps
insl
stos
inc
jb
out
lcall
push
jg
mov
jae
jge
sti
scas
fstpl
cmp
jp
xchg
gs
dec
std
xchg
test
sbb
jmp
shl
ja
or
jmp
fwait
push
leave
gs
stos
ljmp
xlat
push
cmp
sub
jle
into
aaa
or
fidivrl
mov
in
mov
inc
fdivrs
cli
jp
ja
in
xchg
dec
dec
lock
dec
lcall
xor
scas
jne
mov
pop
out
out
mov
lds
jns
rorb
into
ja
orl
sub
adc
jp
aam
mov
subb
mov
sarl
jle
pusha
mov
iret
xor
pusha
ret
fbld
lret
cli
jmp
adc
out
into
push
jl
popf
add
mov
push
js
leave
stos
jne
inc
and
mov
mov
scas
xchg
ss
adc
inc
iret
push
and
pop
dec
lahf
pop
incb
scas
add
push
push
push
inc
adc
xchg
outsb
push
pop
mov
xchg
pop
jg
int3
lods
mov
pusha
fidivs
xor
js
jle
std
out
mov
cli
pop
js
ret
push
movsb
sahf
test
jbe
movsl
fwait
jge
mov
enter
insb
cmp
sub
je
and
test
xor
mov
stos
hlt
and
fidivrs
push
loope
fldl
ret
lods
cmpsb
jge
lret
in
lea
fisubs
mov
fwait
cmp
inc
jno
ja
sub
ss
cmp
xorb
sub
mov
stos
push
int
xor
js
push
xor
xlat
std
pop
cs
js
repz
sub
push
fsub
out
pop
xor
rolb
sub
enter
popf
adc
insb
pop
sub
add
push
in
pop
ret
leave
popa
and
xchg
addb
mov
int
ss
and
mov
or
sbb
mov
test
jnp
outsb
lods
jg
fcmovbe
mov
mov
mov
jge
mov
lods
pop
subb
cmp
xlat
dec
sbb
xchg
cmp
daa
rcrl
cmp
xchg
into
and
stos
cmc
je
push
outsl
push
or
stc
cmp
adc
mov
add
or
adc
lea
pop
out
jg
cli
mov
ljmp
sbb
mov
loop
loopne
mov
adc
pop
outsb
imul
dec
hlt
repz
gs
jo
rcrl
xlat
cs
xlat
pop
pop
push
sub
lods
mov
pushf
popf
and
jmp
jge
cs
js
aad
out
nop
ret
and
inc
jmp
orl
xchg
push
adc
lods
xchg
shr
mov
add
pop
jo
inc
adc
aad
dec
mov
jnp
pop
lds
push
inc
or
push
jb
sbb
dec
incl
mov
in
not
push
cmc
jbe
xor
jae
es
push
mov
incb
jp
mov
mov
mov
adc
data16
das
out
inc
sub
mov
aam
pop
push
ret
push
int3
add
aas
addr16
insl
sbb
sahf
cmpsl
mov
out
push
hlt
pop
icebp
fidivrl
lods
daa
std
in
movsb
aad
mov
xor
mov
adc
ss
mov
pop
test
mov
mov
and
loop
fldl
mov
xchg
inc
or
ljmp
stos
pop
test
jp
xor
scas
xchg
xchg
pop
lods
pop
psrld
push
add
in
cltd
xchg
xor
enter
add
dec
out
jge
repz
xchg
xchg
sbb
rcl
cmp
sbb
fwait
cmp
push
dec
and
repnz
and
xor
iret
orb
int
in
cmpl
and
jecxz
mov
push
ja
das
dec
inc
mov
movsl
jae
mov
xchg
data16
xchg
jg
jne
cmp
or
lds
bound
inc
jns
mov
int3
sbbl
incl
xor
or
adc
jg
mov
mul
insb
and
loope
jo
bnd
cltd
stos
in
jmp
pusha
pop
mov
ffreep
dec
ljmp
adc
sar
jae
insb
and
popf
sub
mov
mov
sbb
loopne
es
cld
imul
sub
mov
pop
mov
leave
pop
push
ret
push
pop
xor
jg
arpl
mov
je
jb
outsb
inc
fnstsw
adc
xchg
bound
pop
outsb
test
ficoms
pop
add
jmp
mov
ror
int
dec
addr16
mov
movsb
sub
nop
push
clc
adc
push
sub
sbb
dec
or
pop
add
mov
xchg
or
push
sub
xor
adc
test
and
xor
in
pop
push
lods
jge
inc
pop
cmpsb
jl
add
inc
in
je
in
sub
cwtl
daa
mov
xlat
cmp
adc
sub
cmp
xor
movsl
mov
or
lahf
in
sbb
mov
clc
into
add
arpl
and
mov
js
pop
lds
jcxz
push
loope
sti
fdivrl
ljmp
sub
in
outsb
das
lds
sub
mov
popl
xor
adcb
aam
and
mov
push
mov
test
sub
into
lds
popf
mov
lcall
or
sbb
push
arpl
jg
push
jg
sub
mov
mov
mov
nop
adc
inc
cmp
xchg
push
leave
lret
test
cmp
xchg
or
push
into
add
mov
cmp
xor
sarl
outsl
xor
or
icebp
mov
adc
je
add
ds
inc
fsubrl
mov
sub
aam
pop
xor
fwait
sti
movl
xor
dec
push
pop
push
idiv
adc
ja
les
add
xchg
xor
cmpb
mov
sbb
mov
and
insl
add
test
cmp
fsubl
nop
sahf
aaa
ljmp
lds
push
je
je
push
pushf
sahf
into
cltd
add
test
das
out
pushf
sub
pop
and
sub
iret
fildl
xor
inc
inc
adc
es
aas
mov
inc
aaa
dec
jbe
mov
outsl
cmp
out
divb
gs
dec
fadds
mov
dec
pop
mov
mov
jbe
cmp
lret
dec
inc
mov
or
dec
or
int
jno
call
aas
stos
mov
xchg
mov
ret
out
mov
ret
insl
push
roll
mov
ljmp
sub
lods
xchg
call
jb
aam
and
jno
hlt
pop
std
mov
mov
lods
push
mov
xchg
push
test
into
clc
add
ljmp
into
pop
push
imul
xchg
into
mov
rdtsc
lahf
xlat
add
dec
std
cltd
mov
test
inc
shrb
xchg
cmp
pusha
sbb
or
rcll
mov
icebp
push
mov
add
jae
xor
or
in
jnp
xchg
push
pop
add
adc
lods
xor
mull
xor
mov
out
mov
pusha
pop
dec
jne
outsl
jne
cmp
mov
in
out
movsb
fisubs
jns
dec
rclb
xchg
scas
out
pop
shrl
push
cwtl
push
addr16
cmpb
fnstenv
lea
jle
popa
in
or
pusha
clc
bound
xchg
sahf
dec
fwait
jmp
sub
jae
sub
adc
mov
mov
testb
and
mov
sbb
push
imul
scas
scas
pop
sub
push
add
adc
mov
ret
iret
pop
insb
sub
hlt
inc
push
ljmp
sub
push
push
pop
jbe
fidivrl
xchg
or
int3
sbb
pop
popf
sub
fidivrs
push
jb
xor
fcomip
mov
push
xlat
movsb
mov
add
jnp
jbe
and
pop
jp
aas
mov
xchg
push
sti
add
std
jl
fsubrs
dec
add
push
push
pop
iret
xor
outsl
pop
mov
mov
mov
out
push
ja
jge
scas
int3
inc
cmpsb
xor
in
pop
cmp
enter
daa
mov
popf
cmp
ret
popf
int
sub
or
gs
call
add
mov
insl
rcll
lods
lock
mov
jp
in
stos
pop
jl
imul
push
pop
cmpsb
cld
shrl
imul
sbb
or
and
insb
subb
push
sbb
cmp
xor
cmp
sub
xlat
lcall
jmp
sbb
xor
sahf
ret
test
xchg
mov
mov
icebp
fwait
mov
cmp
adc
mov
cmp
dec
adc
fwait
lret
jg
xchg
push
or
inc
pop
into
out
test
add
pop
outsl
adc
icebp
loop
rcr
stc
test
xchg
xchg
repnz
mov
adcl
cli
pop
xchg
pop
xor
push
in
inc
int3
add
jbe
clc
add
sbb
loopne
xor
adcb
push
outsl
imul
pop
sbb
xchg
test
sbb
dec
xlat
xchg
test
mov
repz
and
jae
or
aad
ds
dec
fsubs
movhps
flds
sbb
jecxz
fidivrs
sub
call
sbb
adc
or
jb
or
cmp
pop
cmp
inc
or
dec
in
xchg
movsl
and
mov
shr
leave
sub
mov
mov
repnz
cwtl
pushf
ja
mov
je
mov
out
or
nop
mov
fucom
mov
dec
xchg
lock
xlat
das
lods
mov
fwait
mov
pop
pop
sbb
jne
aad
inc
fdivr
insl
dec
dec
repz
and
mov
outsl
mov
mov
xor
adc
out
xchg
and
or
lds
sbb
fs
xor
sub
loope
inc
jl
push
inc
xor
fisttpll
enter
cmp
push
push
insb
popa
sub
pop
fisttpll
out
ret
ljmp
adc
and
add
jne
cmc
dec
fnsave
xchg
ret
mov
mov
sbb
out
pop
scas
lods
sbb
and
sbb
sar
dec
fwait
loopne
ja
xchg
jbe
add
sub
jecxz
mov
cs
in
lret
mov
ficompl
mov
mov
dec
sub
inc
inc
shrl
call
mov
stos
dec
pop
lahf
cmpsl
jne
sahf
sub
sbbl
test
les
add
add
add
addr16
ret
repnz
fiadds
pop
jnp
add
adc
in
jnp
xchg
dec
sub
add
xchg
jno
mov
inc
xor
jae
xor
push
fcomps
mov
xor
push
xor
push
gs
and
scas
mov
push
mov
out
add
ret
inc
pop
mov
js
arpl
clc
mov
or
push
mov
fisubrl
or
xchg
popa
or
pop
int3
xchg
out
ficomps
lds
repnz
repz
mov
sub
jbe
nop
idivb
je
sbb
push
fbstp
add
push
movsl
jl
cld
fmull
mov
pop
xor
lret
scas
fcompl
cmp
push
push
inc
lret
jb
cmp
sbb
adc
daa
mov
fnstsw
push
add
jno
scas
xchg
sub
mov
cmp
fsubrl
jns
adc
pop
push
fcomps
inc
enter
aam
add
imul
into
add
js
loope
pop
in
pusha
push
lods
mov
xor
mov
pop
adc
outsb
cmc
fwait
and
std
in
mov
insb
adc
xchg
sub
mov
jg
and
push
push
mov
cmp
daa
pop
repz
fwait
outsb
pop
lcall
mov
sbb
dec
push
sahf
arpl
test
or
xorb
pop
mov
jae
mov
icebp
lcall
outsb
mov
or
not
pop
lret
out
rcrl
lahf
cmp
push
orb
in
into
leave
fbstp
xor
cmp
loop
shlb
adc
in
movb
je
inc
loop
lods
sbb
rorb
cmp
adc
dec
cmp
in
lods
push
sti
and
xchg
scas
gs
stos
and
and
pop
mov
imul
adc
sbb
mov
sub
sub
sahf
pusha
or
bound
addr16
jg
nop
push
fucomip
dec
aaa
lds
fnstcw
imul
mov
shl
loope
xor
and
mov
aad
or
inc
mov
arpl
inc
push
sub
aas
fbld
fmull
aam
and
test
idiv
xor
cwtl
push
pop
outsb
mov
and
andl
das
mov
fimuls
lock
js
mov
mov
lods
gs
aam
push
mov
es
ss
dec
sbb
xchg
gs
pop
in
pop
lods
push
push
inc
mov
dec
aam
mov
cmp
shrb
shl
test
inc
clc
mov
mov
push
or
pop
clc
jbe
xchg
xchg
add
je
les
popa
aas
mov
pop
test
jge
out
es
pop
fistpll
pxor
add
leave
cltd
sub
or
mov
shl
dec
sbb
test
cmp
xchg
push
push
roll
lock
stos
sbb
aaa
lea
add
jmp
or
in
insl
jbe
icebp
fcoms
mov
out
iret
ja
adc
push
fnstsw
sahf
mov
cmp
xorl
adc
jns
pop
out
xchg
cli
mov
push
out
jb
sub
cld
adc
push
mov
mov
arpl
add
ja
jle
std
inc
in
outsb
mov
cs
xor
and
pop
xchg
inc
lahf
dec
jmp
inc
pop
popf
jae
jge
push
fwait
adc
movsl
je
pop
stos
inc
pop
pop
and
jns
imul
inc
scas
pop
lock
push
mov
sub
ret
iret
out
fld
stos
fcompl
mov
mov
inc
and
or
jecxz
movsl
inc
pop
jae
xchg
int3
pop
dec
fs
sti
ret
mov
lds
and
repnz
mov
lahf
rcrb
lret
push
in
mov
jge
iret
adc
mov
push
aaa
jmp
or
mov
add
or
dec
loopne
inc
push
aam
stos
xor
and
lahf
and
cmp
cmp
mov
mov
cmpsb
mov
fcmovne
sbb
xchg
inc
idivl
jno
mov
sub
xor
cmp
cwtl
jno
int
loop
cmc
push
fistps
sbb
out
test
movsb
in
mov
imul
lret
js
add
pop
and
mov
mov
push
sub
pop
jo
pop
jne
adc
fcoms
push
sar
adcb
sbb
pop
ja
mov
fisubs
data16
push
ret
int
push
mov
pop
sbb
cmp
mov
icebp
xchg
sbb
cs
or
xchg
test
push
jb
divb
out
mov
xchg
fs
outsb
adc
and
mov
mov
sub
xchg
insb
xor
xchg
inc
ja
mov
push
cmp
inc
fimull
sbb
cs
lods
push
add
xor
add
lret
loop
add
stc
push
inc
cwtl
adc
cmpsb
add
lretw
lods
add
and
xchg
das
cli
insl
and
in
sbb
add
aam
push
incb
gs
out
loopne
xor
pop
mov
rcll
cs
loopne
mov
mov
inc
mov
repz
jl
xchg
jl
cmp
ret
shll
xlat
adc
xchg
sub
add
cmp
aad
rcrl
jp
mov
inc
nop
das
roll
xchg
sub
fprem1
and
jge
leave
sub
lea
mov
sbb
adc
dec
dec
push
sbb
xchg
and
pop
push
ds
inc
fmuls
inc
ja
fstpt
jle
mov
dec
imul
scas
lods
idivb
icebp
std
inc
xchg
jmp
mov
push
orb
pop
mov
lret
xchg
js
mov
roll
mov
or
lock
mov
fs
faddp
xchg
jbe
es
sbb
insl
sbb
out
cmpsl
mov
mov
icebp
ss
lods
shll
sarl
push
inc
cld
mov
pop
cs
adc
sub
outsb
push
fidivs
cmp
push
sti
fstp
lret
xor
mov
inc
xchg
inc
jge
ljmp
xchg
pop
push
inc
xchg
mov
mov
adc
cmovle
add
sub
mov
sbb
ret
pop
push
dec
sbbb
fbld
sbbb
jnp
rcrl
sub
fwait
ds
ficoml
add
pop
sbb
xor
rorb
fstps
jbe
xchg
arpl
xchg
inc
jle
mov
xlat
fistpll
mov
inc
dec
push
lock
jb
mov
push
in
dec
push
fdivs
nop
into
mov
xor
popf
bound
nop
xchg
lds
or
or
stos
or
fstpt
adc
xchg
mov
sahf
mov
jnp
mov
jle
push
in
mov
pusha
leave
pop
pop
filds
dec
xchg
pop
xchg
sub
mov
inc
dec
fisubs
push
pop
negb
mov
mov
sti
stos
mov
and
cmp
repz
dec
mov
pushf
scas
add
push
aad
dec
adc
fnstsw
mov
rcll
shll
mov
pop
or
pop
loopne
inc
fnstenv
or
inc
inc
cli
pop
sub
cwtl
lds
cmpsb
sub
mov
cltd
movsb
leave
push
test
push
xor
pusha
jbe
xchg
jge
push
sbb
aaa
andl
sub
add
mov
arpl
dec
mov
xor
cmpb
and
pusha
jge
fsubrs
inc
pop
fsubr
cmpsb
or
gs
adc
frstor
mov
mov
je
les
fcompl
sub
xchg
cmp
out
push
ds
add
and
jle
push
in
fwait
ds
scas
ret
pushf
xor
leave
pop
bound
js
mov
push
dec
cld
loope
roll
sub
out
outsb
mov
bound
shlb
mov
andb
sbb
cmp
and
mov
int
push
sub
xor
add
mov
outsl
sbb
bound
sbb
call
das
mov
adc
mov
or
push
ficoms
pop
adc
notl
fxch
xchg
mov
inc
or
mov
into
pop
iret
cmc
push
mov
mov
fsub
in
addr16
stc
int
adc
mov
add
push
mov
ljmp
out
movsl
cmc
jb
clc
jnp
in
andl
sti
adc
cmpsb
pop
gs
arpl
xchg
iret
jmp
rcrl
adc
movsl
pop
imul
sub
xchg
aas
push
xor
scas
inc
xlat
push
mov
outsb
sahf
popf
mov
hlt
add
jmp
aad
cs
lret
sub
sbb
inc
dec
ds
fldcw
fnsave
mov
fdivs
out
movsl
dec
jle
scas
adc
call
cwtl
sub
xchg
ja
mov
xor
sarl
hlt
jg
inc
pop
or
aas
sbb
out
dec
push
cmp
rcr
push
idivb
xchg
std
out
xchg
cwtl
int
lods
mov
or
mov
jge
shr
je
push
ss
lret
push
adc
mov
adcb
dec
or
mov
sbb
jp
and
dec
es
out
insl
add
dec
adc
mov
and
lods
ficoms
mov
push
sbb
push
mov
jns
mov
push
jno
sub
out
out
lods
repnz
nop
sub
clc
in
or
xchg
andb
enter
adc
pushl
out
stos
fcompl
adcb
fwait
mov
lods
sub
add
ret
jecxz
xor
ret
jl
adc
aaa
popa
dec
jmp
cmpsl
cli
xchg
pop
in
sbb
mov
shl
xchg
pop
or
xorb
insb
inc
push
jge
hlt
add
jns
aam
in
xor
push
std
in
scas
fistl
jo
and
pop
decl
dec
add
inc
cwtl
dec
mov
cld
push
or
add
xor
pop
xorb
out
bound
push
and
clc
sub
xchg
cmp
mov
sub
repnz
fbld
repnz
arpl
arpl
leave
insb
cmp
jnp
scas
es
add
pusha
test
pusha
push
das
xchg
ljmp
inc
push
mov
jae
push
and
or
sbb
stos
daa
mov
sbb
icebp
mov
mov
test
push
sbb
adc
pop
iret
movsb
inc
mov
shll
pop
dec
test
hlt
jno
push
arpl
pop
inc
daa
pop
pop
or
flds
inc
pop
orb
data16
int3
adc
fiadds
test
mov
mov
mov
in
mov
leave
fistl
movsb
loopne
push
push
or
jbe
nop
idivl
xor
sbb
mov
push
or
out
add
pusha
xchg
dec
mov
sub
xor
sub
cmp
push
cmp
mov
inc
ljmp
in
testl
xor
cmp
sub
sub
stos
xor
out
or
loop
outsl
movsl
fildl
pop
lahf
mov
sub
push
scas
test
mov
lods
mov
pop
sbb
js
add
pop
mov
scas
mul
js
jae
aam
sub
aam
test
push
add
adc
mov
fsubl
lds
ss
mov
sub
push
enter
sbb
stos
sub
pop
sbb
sbb
inc
mov
popf
add
test
pop
sahf
dec
icebp
addb
xlat
push
jg
hlt
daa
mov
xor
mov
arpl
fs
and
mov
popf
ss
push
cmp
cmp
movsl
lret
shl
les
sbb
into
jb
inc
cmc
push
dec
inc
xor
xchg
pushf
loop
add
adc
adc
out
data16
inc
mov
dec
out
lahf
inc
cli
sarl
xor
shll
sti
xor
pop
decb
inc
cmp
xor
sbb
aam
inc
imul
pop
dec
xchg
add
sbb
cmp
mov
sub
ljmp
lahf
adc
das
cltd
mov
xchg
mov
nop
in
and
pop
inc
pop
pop
hlt
fldenv
mov
pop
push
arpl
out
dec
test
xor
xchg
adc
pop
mov
pop
mov
xchg
cmp
fcomi
nop
bound
mov
inc
out
mov
aas
mov
adc
leave
fs
es
shrl
mov
ret
xlat
cmp
mov
inc
add
pop
mov
cld
jl
cmp
jne
and
mov
pop
pop
lock
das
sub
leave
mov
rorb
mov
es
mov
pushf
es
sub
dec
push
fcoms
cmpsl
scas
lcall
in
xor
mov
dec
and
js
insl
pop
cwtl
hlt
mov
sub
sub
ret
jl
xor
inc
jo
sub
fsts
sbb
mov
pop
stos
clc
loopne
lret
push
in
dec
and
lcall
sbb
add
mov
xor
and
mov
leave
mov
aad
mov
push
inc
xchg
sbb
fwait
xlat
or
lods
insb
fwait
pushf
xor
bound
xchg
cmc
arpl
add
xor
adc
adc
test
jo
ficoms
mov
pop
inc
adc
dec
hlt
fstpt
dec
jno
daa
xchg
add
in
dec
jne
adc
mov
mov
inc
jns
mov
dec
xorl
out
jne
sub
in
xchg
ret
scas
je
in
inc
mov
insb
movsb
jp
jnp
jo
jle
hlt
sbb
add
pusha
mov
clc
xchg
mov
loopne
inc
faddl
jae
repz
push
in
cltd
popf
adc
dec
jno
xor
and
rcrb
sbb
push
arpl
adc
lcall
and
jg
loope
mov
sub
sub
aaa
or
push
inc
addb
popa
aaa
pop
xchg
mov
mov
pop
mov
add
call
jge
sarb
repnz
sti
xchg
add
movsb
imul
push
rorb
cld
jge
aaa
adc
aaa
add
mov
adc
add
aad
dec
sub
add
xor
ss
scas
pop
add
and
sahf
repnz
cwtl
ds
outsb
push
cltd
inc
jns
ret
push
ss
fidivs
pop
enter
daa
scas
cltd
pop
cmp
or
fbld
ds
jno
and
fnstenv
lahf
cmpsl
dec
sbb
aas
outsb
test
lds
xor
mov
inc
pop
aas
or
pop
loope
shrb
ret
mov
fdivrl
in
ret
aam
outsb
cmpl
test
mov
sbb
add
and
jl
int
add
sub
pop
roll
xchg
or
lcall
inc
mov
mov
sbb
pop
test
mov
jg
pop
mov
mov
sbb
push
inc
lret
ss
pop
or
fdiv
and
lret
jl
jp
data16
ret
stos
or
insl
into
push
ja
cmc
in
in
in
jmp
outsl
outsl
fs
loop
iret
in
cmp
mov
push
nop
lods
lods
mov
xorl
mov
fsubr
pop
sub
sti
loope
dec
lods
mov
loopne
inc
js
bts
imul
push
aam
vmulss
je
not
rclb
sub
mov
dec
imull
push
and
aad
insb
push
dec
mov
ret
inc
outsb
mov
fstps
hlt
cmp
stos
test
fucomp
adc
in
xchg
les
pop
push
enter
xor
xlat
fistpl
insl
mov
fucomip
inc
insl
adc
aas
pop
cs
jb
jno
dec
inc
xor
and
add
jns
mov
std
xor
mov
push
or
pop
cld
cmpsl
push
ror
lea
outsb
push
mov
cltd
push
lock
lock
pop
test
outsb
mov
push
xchg
es
je
sar
rorb
das
cltd
cmpsl
scas
stc
insl
mov
mov
sarl
mov
xchg
jns
and
adc
pop
pop
mov
adc
sti
dec
lret
sub
data16
les
push
repz
pop
clc
leave
and
nop
out
pop
popa
fwait
sbb
or
mov
xchg
js
insb
push
push
in
hlt
packssdw
movsl
add
sub
xor
flds
xchg
dec
lret
dec
mov
mov
mov
sbb
nop
rcrl
stos
and
push
ret
outsl
cmp
add
mov
xor
or
in
aas
xchg
divb
cwtl
mov
shlb
repz
jp
dec
out
icebp
inc
push
mov
mov
pushf
push
jne
push
pushf
out
fimuls
and
es
xchg
es
inc
addl
out
or
or
push
cltd
addr16
out
cmp
fisubrs
mov
mov
lock
testb
fnstenv
lcall
xchg
nop
mov
jmp
insl
pop
mov
push
cmpsl
loop
popf
cmp
mov
push
jo
scas
stos
or
sti
push
imul
ds
stos
jp
adc
cmp
rol
testl
push
hlt
pop
and
arpl
adc
sub
dec
sbb
iret
or
popf
fisubrl
adc
int3
add
fistpl
and
fimuls
jle
rcl
es
xchg
je
leave
jnp
jbe
notb
stos
jbe
jg
jge
and
sbb
push
or
in
cmp
pop
mov
xor
xchg
shll
not
dec
and
sarl
in
jae
cmp
daa
inc
or
cmpsb
xchg
jbe
lds
enter
daa
scas
mov
sbb
jae,pn
dec
jb
cmp
mov
movsl
jmp
in
lods
lahf
mov
push
gs
scas
test
sarb
xor
pop
scas
popa
js
push
rclb
push
arpl
cmpsb
loop
fsubrl
sub
xchg
cld
adc
inc
into
and
pushf
mov
movsb
lahf
ss
xchg
aas
and
sti
or
mov
sub
ds
push
insl
push
lret
mov
cwtl
and
jecxz
scas
sahf
xchg
mov
into
cmpb
jg
in
pop
or
mov
iret
out
stc
mov
adc
and
cwtl
in
mov
fsubrs
pusha
test
adc
jg
fdivrs
into
cmp
add
dec
or
dec
cmp
loop
rcrb
adc
aad
add
data16
fstl
mov
out
lea
lret
lods
sub
jge
fucomi
out
sbb
nop
inc
inc
shl
jb
or
icebp
loopne
sbb
rcll
jp
push
imul
rcrl
xchg
mov
in
sbb
scas
mov
sbb
lahf
aam
or
cs
cmc
scas
cmpsb
jmp
insl
push
cs
sti
adc
int
dec
nop
fwait
pusha
imul
jae
cmpl
jg
lods
call
adc
scas
test
in
sub
mov
dec
adc
jo
adc
testl
dec
or
jmp
inc
jecxz
xor
cli
ficoml
jb
add
dec
mov
lret
and
je
ror
cmpsl
sub
dec
inc
jle
fsubrl
mov
dec
rorb
xchg
jae
cld
rcl
fmul
push
jb
mov
mov
cmp
lock
sti
das
out
jns
sub
mov
push
and
xchg
es
or
insl
mov
sbb
cmpsl
lods
fsubrl
icebp
xchg
push
mov
mov
in
pop
mov
lret
into
cmpb
push
data16
flds
out
jns
cmp
aas
xor
xchg
xor
mov
rcrl
push
stos
test
jae
xchg
mov
mov
bswap
add
add
inc
cs
loop
mov
iret
xchg
test
mov
imul
cmc
or
push
fwait
cli
adc
push
dec
mov
jbe
lock
and
rcrl
or
test
xchg
jl
test
cmpsb
ja
pop
lea
mov
inc
pop
mov
mov
cpuid
sti
dec
stos
fidivrs
nop
and
jne
jnp
mov
inc
hlt
jns
xor
xchg
icebp
jns
adcl
xchg
sub
jecxz
adc
mov
jp
sub
mov
test
insb
jp
sub
aas
aaa
jle
mov
in
les
xor
dec
sti
xchg
arpl
jmp
js
mov
push
push
lret
popf
arpl
mov
int3
jnp
push
scas
inc
movsb
stos
sbbb
sbb
fidivl
imul
mov
adc
mov
iret
rcrl
pop
in
incl
arpl
mov
pusha
push
aad
sbb
xchg
int3
out
imul
fisubrs
addr16
shl
jl
leave
shlb
leave
repnz
push
push
jo
cmp
movsb
scas
jge
lock
sbb
aaa
jg
orb
mov
cwtl
jl
cmp
dec
or
or
inc
lea
jo
inc
scas
aad
data16
cmp
cmp
jle
xchg
dec
or
lods
ss
lods
pop
sarb
inc
dec
mov
sub
adc
cmp
inc
xchg
ds
jg
movsl
lock
and
adc
lahf
in
fstl
mov
test
xor
in
xor
cmp
cmp
cmp
pop
pop
sbb
xor
mov
add
outsb
inc
add
adc
pop
lahf
xchg
stc
jl
subb
clc
mov
dec
and
out
pop
int
inc
xchg
or
addl
out
add
push
and
mov
push
or
adc
in
aaa
adc
test
movsl
and
adc
mov
jo
out
test
mov
fldt
inc
cmp
push
jbe
dec
adcl
test
lods
cmp
xchg
jmp
into
sbb
push
xor
adc
cmp
xlat
stc
test
xor
add
insl
jge
pop
lahf
test
mov
xchg
out
movsl
mov
insb
push
xor
push
stos
and
das
test
out
repz
repz
adc
dec
pop
dec
pop
rclb
dec
lock
imul
xchg
and
testl
inc
xlat
dec
jg
sub
or
pushf
mov
jl
rclb
nop
jbe
adc
pop
pusha
inc
xchg
negb
push
dec
je
xor
jecxz
andps
mov
adc
pop
sbb
xchg
insl
push
pop
mov
fisubs
in
insl
fstpt
cmp
push
daa
inc
jnp
adc
aas
cltd
mov
jb
int3
jg
cs
mov
pop
adc
testb
xchg
cwtl
mov
cvtps2pi
cs
push
cld
std
push
xor
ret
mov
insl
mov
inc
sti
lock
fdivrp
das
lds
mov
div
mov
jmp
add
dec
insl
mov
cwtl
jb
lods
inc
sti
mov
imul
in
mov
je
xlat
mov
cmc
mov
imull
gs
test
btr
popf
mov
push
jnp
mov
aad
xchg
jle
int3
ljmp
pop
pop
stos
ds
stos
cwtl
pop
mov
xchg
push
xor
push
or
cli
jle
mov
cld
xorl
enter
xor
test
jne
xchg
pop
jb
enter
dec
jge
or
and
push
or
cli
add
in
in
pusha
nop
dec
xor
lock
adc
xchg
lret
mov
mov
mov
rcrb
xchg
js
scas
lds
int
pop
inc
hlt
sbb
test
push
mov
xor
jne
inc
adc
pushf
cmp
call
xchg
mov
sarl
sub
fiadds
xchg
push
mov
pop
jo
in
popa
jnp
dec
pop
jle
cmpb
shl
mov
xchg
ss
jmp
orl
mov
into
popf
mov
mov
out
fildl
and
iret
dec
imul
jno
sbb
cmp
inc
iret
and
sub
sbb
gs
popf
mov
arpl
fimull
lds
lods
ficoml
pop
int3
fiaddl
repnz
lds
push
mov
repnz
add
imul
cltd
jbe
cmp
negl
pop
lret
ds
ljmp
jl
sub
push
es
pop
xor
inc
inc
fldcw
mov
jge
push
cmp
es
insl
cmpsb
fwait
add
in
xchg
jo
daa
lods
mov
push
les
and
pop
outsb
mov
and
xchg
nop
push
or
outsl
test
out
xchg
xor
fistps
pop
mov
test
cmc
in
sahf
push
mov
mov
push
loope
lods
out
subb
outsb
stos
xchg
xchg
cli
addl
ret
sbb
sbb
and
cmp
push
aam
mov
mov
jne
pop
adc
xlat
lcall
loope
mov
outsl
sbb
arpl
rol
xorb
jg
stos
lahf
mov
mov
mov
int3
mov
cmc
adc
lret
push
out
cmp
and
stos
push
lret
push
sarl
xor
mov
or
sub
cmp
js
incb
daa
loop
outsl
int
pusha
mov
fadds
push
xchg
aam
lods
insl
xchg
inc
mov
outsb
out
scas
test
lahf
stos
inc
xor
xchg
sbb
lcall
push
sbbb
sbb
sbbl
jg
and
sbb
mov
leave
xchg
push
inc
add
and
pop
fisubrl
lods
and
mov
dec
lcall
and
aad
cmp
nop
push
and
inc
cmpsl
out
fnstcw
aad
je
int
jecxz
outsl
insb
mov
inc
lea
fwait
or
pop
outsb
fucomi
adc
pushf
dec
rolb
popf
fldt
aad
add
inc
sbb
aas
cmp
jb
bound
jb
and
push
lcall
jne
std
sub
cltd
cwtl
je
cmp
jecxz
cwtl
add
mov
lret
xor
shll
hlt
sub
mov
scas
and
ret
in
in
cwtl
es
mov
pushf
dec
cli
stos
sub
or
sub
inc
adcb
push
jae
mov
ljmp
insl
and
in
in
adc
xchg
shlb
sub
test
adc
push
pop
nop
mov
clc
adc
mov
jmp
aad
pop
push
push
shrb
xchg
mov
push
call
imull
int3
and
cltd
lods
pop
mov
icebp
das
mov
aad
hlt
dec
in
push
push
xchg
jp
jnp
in
shll
pushf
fwait
pop
add
push
lods
fstpt
add
add
dec
xor
testl
aam
mov
sbb
lods
mov
lods
cli
mov
add
xorb
sub
and
mov
in
cwtl
mov
jne
lds
sub
add
jnp
sbb
sbb
xchg
xchg
xchg
xorl
xchg
sub
fcos
mov
or
jp
fcmovne
mov
push
dec
insb
push
aam
jnp
pop
pushf
jle
inc
mov
sbb
stc
pusha
imul
sti
mov
xchg
or
testl
cmpsb
push
lock
popf
mov
mov
inc
cli
cmc
push
sub
push
mov
movb
imul
scas
aam
fistl
fdivrl
mov
xchg
nop
ret
sbb
hlt
call
cwtl
mov
ss
rorb
inc
repz
inc
shll
rcr
cmpsb
and
int3
lds
pop
inc
ja
fidivs
lds
xlat
shlb
inc
mov
mov
ret
sub
movsb
xchg
fisttps
push
sub
jbe
dec
sub
cmp
rolb
clc
or
pop
inc
add
in
jnp
jmp
out
xor
mov
arpl
test
mov
inc
mov
cmp
in
jp
push
enter
daa
stos
xor
repz
mov
cmpl
cmp
xchg
xchg
and
mov
gs
fdivp
dec
test
icebp
stos
sbb
sar
pop
js
and
pop
fstl
enter
cli
loope
inc
in
sub
jbe
or
aaa
rcl
jl
mov
and
dec
lret
fwait
sub
and
or
int
adc
pop
xchg
ljmp
iret
adc
add
jo
sbb
inc
dec
mov
jg
and
mov
add
fs
ss
adc
dec
xchg
test
test
xlat
add
fwait
loopne
jmp
jno
into
loope
in
add
mov
pop
loope
outsl
jmp
pop
loop
or
adcl
xor
lods
push
inc
test
out
cmp
nop
xor
fwait
xor
add
xchg
xor
cmp
loopne,pt
pop
ficomps
jae
adc
dec
scas
imul
pop
repz
xchg
rcrl
inc
cmp
scas
xlat
int3
mov
sub
cmc
mov
test
jmp
call
inc
aad
cltd
cmpsl
nop
sub
aad
das
pop
lods
inc
mov
xor
je
mov
dec
mov
or
std
scas
rol
xchg
es
pop
and
in
mov
test
pop
or
into
inc
xor
insl
aas
xlat
clc
loopne
mov
inc
dec
sbb
daa
and
rclb
mov
int
das
pop
sbb
or
sbbl
lret
mov
xor
mov
dec
mov
mov
gs
jg
xchg
jl
clc
es
fisubrl
pusha
or
cmc
push
stos
cmpsl
stos
popf
mov
pop
xchg
repnz
shlb
mov
addb
scas
in
pop
xor
add
test
inc
mov
or
and
fs
dec
xor
xchg
cld
mov
add
stos
jbe
dec
out
ds
movsl
push
ret
sub
out
clc
add
xchg
mov
xor
imulb
xchg
jmp
add
rcrb
stc
sar
dec
or
ljmp
dec
xchg
stos
add
sbb
lcall
cmp
sbb
aas
in
push
stos
xchg
imul
mov
mov
and
inc
and
mov
pop
cmp
jne
stos
popf
mov
push
or
bound
xor
push
or
push
out
fidivs
enter
aam
cmp
push
fstpt
inc
insb
mov
insl
add
nop
