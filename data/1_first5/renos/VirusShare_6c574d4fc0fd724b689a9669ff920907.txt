jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
lea
cmp
jno
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
xchg
xchg
lea
dec
inc
lea
mov
cmp
je
jmp
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
mov
xor
divl
test
jne
cmp
js
lea
lea
lea
mov
mov
mov
xchg
xchg
xchg
mov
xchg
lea
xchg
dec
cmp
jae
xchg
xchg
xchg
mov
dec
inc
inc
mov
dec
dec
dec
mov
mov
lea
lea
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jg
lea
mov
mov
lea
mov
mov
lea
lea
dec
mov
lea
cmp
jae
dec
dec
inc
inc
cmp
je
mov
mov
mov
mov
inc
inc
inc
xchg
lea
lea
lea
dec
mov
lea
mov
cmp
je
jmp
cmp
jg
mov
xchg
inc
dec
lea
mov
dec
dec
cmp
jns
mov
lea
mov
inc
inc
xchg
lea
mov
mov
cmp
jne
mov
mov
xchg
mov
inc
dec
inc
lea
mov
mov
mov
lea
inc
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
xchg
lea
cmp
js
dec
dec
mov
cmp
jge
mov
lea
mov
inc
inc
dec
mov
lea
mov
dec
cmp
jl
lea
lea
mov
xchg
lea
mov
mov
lea
mov
mov
inc
inc
inc
inc
mov
cmp
je
jmp
cmp
jg
mov
xchg
inc
dec
lea
mov
dec
dec
cmp
jns
mov
lea
mov
inc
inc
xchg
lea
mov
mov
cmp
jne
mov
mov
xchg
mov
inc
dec
inc
lea
mov
mov
mov
lea
inc
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
mov
sub
mov
lea
cmp
jg
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
jl
xchg
xchg
lea
lea
mov
mov
mov
lea
mov
xchg
lea
xchg
mov
mov
lea
dec
push
mov
mov
xor
call
mov
cmp
js
lea
lea
lea
mov
mov
mov
xchg
xchg
xchg
mov
xchg
lea
xchg
dec
cmp
jae
xchg
xchg
xchg
mov
dec
inc
inc
mov
dec
dec
dec
mov
mov
lea
lea
mov
mov
mov
call
cmp
jg
lea
mov
mov
lea
mov
mov
lea
lea
dec
mov
lea
cmp
jae
dec
dec
inc
inc
cmp
je
mov
mov
mov
mov
inc
inc
inc
xchg
lea
lea
lea
dec
mov
lea
push
mov
mov
xor
call
mov
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
lea
cmp
jno
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
xchg
xchg
lea
dec
inc
lea
lea
mov
push
jmp
lea
cmp
jg
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
jl
xchg
xchg
lea
lea
mov
mov
mov
lea
mov
xchg
lea
xchg
mov
mov
lea
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jg
mov
xchg
inc
dec
lea
mov
dec
dec
cmp
jns
mov
lea
mov
inc
inc
xchg
lea
mov
mov
cmp
jne
mov
mov
xchg
mov
inc
dec
inc
lea
mov
mov
mov
lea
inc
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
xchg
lea
cmp
js
dec
dec
mov
cmp
jge
mov
lea
mov
inc
inc
dec
mov
lea
mov
dec
cmp
jl
lea
lea
mov
xchg
lea
mov
mov
lea
mov
mov
inc
inc
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
cmp
jg
mov
xchg
inc
dec
lea
mov
dec
dec
cmp
jns
mov
lea
mov
inc
inc
xchg
lea
mov
mov
cmp
jne
mov
mov
xchg
mov
inc
dec
inc
lea
mov
mov
mov
lea
inc
dec
dec
movl
mov
mov
mov
push
mov
push
call
lea
cmp
jno
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
xchg
xchg
lea
dec
inc
lea
movl
mov
push
call
cmp
jg
lea
mov
mov
lea
mov
mov
lea
lea
dec
mov
lea
cmp
jae
dec
dec
inc
inc
cmp
je
mov
mov
mov
mov
inc
inc
inc
xchg
lea
lea
lea
dec
mov
lea
movl
mov
push
call
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
movl
mov
push
call
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
movl
mov
mov
mov
push
mov
push
call
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
movl
mov
push
call
cmp
js
lea
lea
lea
mov
mov
mov
xchg
xchg
xchg
mov
xchg
lea
xchg
dec
cmp
jae
xchg
xchg
xchg
mov
dec
inc
inc
mov
dec
dec
dec
mov
mov
lea
lea
mov
pop
ret
add
xor
cmp
xor
cmp
xor
add
xor
cmp
xor
xor
xor
add
push
mov
add
mov
mov
cmp
jg
lea
mov
mov
lea
mov
mov
lea
lea
dec
mov
lea
cmp
jae
dec
dec
inc
inc
cmp
je
mov
mov
mov
mov
inc
inc
inc
xchg
lea
lea
lea
dec
mov
lea
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
js
lea
lea
lea
mov
mov
mov
xchg
xchg
xchg
mov
xchg
lea
xchg
dec
cmp
jae
xchg
xchg
xchg
mov
dec
inc
inc
mov
dec
dec
dec
mov
mov
lea
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jg
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
jl
xchg
xchg
lea
lea
mov
mov
mov
lea
mov
xchg
lea
xchg
mov
mov
lea
dec
mov
mov
movl
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
xlat
mov
push
xlat
mov
data16
mov
push
xlat
mov
pop
xlat
mov
dec
xlat
mov
dec
xlat
mov
cmp
mov
and
mov
xor
mov
push
movsb
fwait
mov
jge
or
mov
hlt
jge
or
mov
lods
fwait
mov
jge
or
push
mov
mov
jge
or
loope
xchg
fwait
mov
jge
or
rcll
fwait
mov
jge
or
in
push
pushf
fwait
mov
jge
or
call
fwait
mov
jge
or
stc
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
test
std
test
or
ret
xor
mov
jl
add
je
or
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
test
pmuludq
hlt
jl
or
xor
mov
test
ret
xor
mov
jl
add
je
or
mov
sbb
test
mov
cld
test
hlt
hlt
hlt
push
cld
test
std
test
jmp
incl
add
pmuludq
hlt
push
std
test
cld
test
test
ret
xor
std
test
test
jmp
jl
add
std
test
jl
add
cld
test
add
jmp
incl
add
pmuludq
hlt
jl
adc
xor
mov
test
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
xchg
lea
cmp
js
dec
dec
mov
cmp
jge
mov
lea
mov
inc
inc
dec
mov
lea
mov
dec
cmp
jl
lea
lea
mov
xchg
lea
mov
mov
lea
mov
mov
inc
inc
inc
inc
movl
lea
cmp
jg
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
jl
xchg
xchg
lea
lea
mov
mov
mov
lea
mov
xchg
lea
xchg
mov
mov
lea
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
mov
mov
call
mov
cmpl
je
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
mov
cmp
je
mov
subb
mov
mov
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
mov
xorb
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
incl
mov
cmp
jne
cmp
jg
mov
xchg
inc
dec
lea
mov
dec
dec
cmp
jns
mov
lea
mov
inc
inc
xchg
lea
mov
mov
cmp
jne
mov
mov
xchg
mov
inc
dec
inc
lea
mov
mov
mov
lea
inc
dec
dec
mov
call
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
lea
cmp
jno
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
xchg
xchg
lea
dec
inc
lea
push
mov
push
call
mov
pop
ret
mov
push
mov
add
lea
cmp
jno
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
xchg
xchg
lea
dec
inc
lea
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
js
lea
lea
lea
mov
mov
mov
xchg
xchg
xchg
mov
xchg
lea
xchg
dec
cmp
jae
xchg
xchg
xchg
mov
dec
inc
inc
mov
dec
dec
dec
mov
mov
lea
lea
movb
cmp
js
xchg
xchg
lea
xchg
lea
lea
xchg
inc
jmp
mov
lea
lea
xchg
mov
mov
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
inc
dec
mov
mov
pop
ret
push
mov
add
call
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jg
lea
mov
mov
lea
mov
mov
lea
lea
dec
mov
lea
cmp
jae
dec
dec
inc
inc
cmp
je
mov
mov
mov
mov
inc
inc
inc
xchg
lea
lea
lea
dec
mov
lea
call
lea
mov
pop
ret
lea
push
mov
add
cmp
jp
mov
dec
lea
inc
cmp
jo
xchg
mov
mov
dec
dec
inc
mov
lea
mov
inc
mov
mov
mov
lea
mov
xchg
mov
mov
inc
inc
push
call
test
jne
cmp
js
lea
lea
lea
mov
mov
mov
xchg
xchg
xchg
mov
xchg
lea
xchg
dec
cmp
jae
xchg
xchg
xchg
mov
dec
inc
inc
mov
dec
dec
dec
mov
mov
lea
lea
push
push
push
call
mov
pushl
pushl
call
lea
cmp
jg
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
jl
xchg
xchg
lea
lea
mov
mov
mov
lea
mov
xchg
lea
xchg
mov
mov
lea
dec
mov
pop
ret
add
add
ja
add
add
data16
add
add
add
add
outsb
add
add
and
add
add
subl
je
mov
cmp
jg
mov
xchg
inc
dec
lea
mov
dec
dec
cmp
jns
mov
lea
mov
inc
inc
xchg
lea
mov
mov
cmp
jne
mov
mov
xchg
mov
inc
dec
inc
lea
mov
mov
mov
lea
inc
dec
dec
mov
mov
mov
lea
call
cmp
jo
mov
mov
mov
xchg
xchg
lea
xchg
lea
lea
xchg
lea
mov
inc
dec
inc
cmp
jbe
mov
mov
xchg
lea
inc
mov
mov
lea
lea
lea
lea
dec
ret
lea
ret
lea
add
pop
add
repz
addr16
or
add
adcl
jg
aas
dec
out
mov
sbb
bound
add
andl
mov
pop
push
mov
testb
adc
imulb
inc
pop
add
sbb
scas
push
dec
mov
add
scas
daa
xor
scas
add
scas
push
hlt
leave
add
dec
adc
rolb
bound
add
mov
add
mov
into
add
stos
dec
cmp
sahf
mov
add
sbb
pusha
mov
ret
js
or
push
add
mov
xor
out
ds
add
test
in
pop
into
pop
add
scas
test
adc
test
push
or
or
push
adc
or
add
sub
add
add
in
mov
pop
sbb
push
mov
repz
ltr
mov
mov
pop
cmp
add
mov
pop
add
mov
leave
add
or
pop
mov
jno
movsl
dec
cltd
jne
mov
imul
pop
xor
flds
jg
add
dec
pop
mov
cmc
inc
mov
lcall
arpl
mov
insb
fstpl
adc
sub
decb
xor
fbstp
push
cwtl
ljmp
add
pop
lea
pop
je
iret
jge
icebp
add
pop
add
add
enter
loopne
movsl
mov
jns
pusha
filds
add
mov
test
aas
mov
cld
xlat
add
add
cli
xchg
xchg
inc
dec
mov
mov
push
add
mov
call
mov
add
add
shrb
jl
fcmovnb
add
pop
add
cmp
add
das
out
push
arpl
xchg
add
hlt
lcall
or
dec
and
repnz
testb
add
loopne
fdivl
xchg
faddl
sub
add
pop
sahf
mov
test
mov
fidivrs
add
jne
pcmpeqw
add
dec
jle
inc
and
test
mov
fists
cs
add
int
xchg
add
jbe
fdivl
add
dec
dec
add
cltd
add
dec
jl
cmc
xchg
jno
std
push
clc
arpl
fsubr
add
add
mov
add
adc
pop
add
imul
addl
xlat
add
or
add
subb
outsl
add
fcmovnbe
loopne
pusha
add
jno
add
add
fs
inc
push
pop
mov
mov
sarl
sahf
fiadds
inc
add
fiadds
xor
dec
scas
mov
ss
and
mov
xchg
cmp
push
add
and
or
push
add
mov
aad
pop
add
sub
cmp
add
popa
dec
cmp
popf
add
inc
inc
aad
into
or
incb
jge
xchg
and
add
cmp
add
mov
add
imul
add
flds
ja
pop
imul
int3
pop
enter
jecxz
out
lods
add
inc
or
pop
out
or
adc
aad
add
add
roll
dec
xor
inc
fwait
insb
add
fildl
add
hlt
add
jno
ret
mov
inc
push
adc
int3
popl
mov
rolb
cmpsb
push
add
popa
cmpsb
mov
jle
pop
add
sti
add
fisttps
rol
sbb
add
dec
pop
daa
sti
lret
mov
pop
xchg
add
sub
jle
add
aad
repnz
fistpl
push
push
push
add
add
movsb
stc
or
es
insl
xor
sarb
cmpsl
fdivrs
jno
adc
out
idiv
cltd
mov
jae
fsubs
scas
mov
mov
repnz
sub
je
aam
insb
ret
lret
push
sbb
mov
clc
mov
ss
stos
aam
ljmp
lcall
jecxz
out
je
lods
xchg
shlb
push
imul
in
cltd
add
xorl
roll
jns
add
sbb
and
pop
xchg
jne
inc
xchg
adc
add
dec
repnz
mov
or
fs
pop
sbb
mov
imul
mov
and
sbb
sbb
add
sub
dec
mov
sbb
mov
cmpsb
cwtl
out
dec
mov
bound
leave
adc
in
inc
push
xchg
aaa
gs
out
push
or
or
inc
dec
jp
insl
daa
mov
sub
mov
push
data16
add
in
fstp
pusha
sub
out
mov
in
xchg
repnz
xchg
fcomp
movsl
orl
test
jecxz
mov
das
xchg
push
and
pop
std
jnp
mov
leave
push
add
sahf
adc
jge
int3
cli
inc
ret
dec
pop
mov
ds
lahf
mov
mov
or
mov
ds
xchg
into
imul
imul
fmulp
mov
lds
pop
aas
mov
hlt
sub
hlt
mov
negb
push
sbb
repz
mov
or
imul
jbe
imul
ret
or
jo
insb
ret
rcrb
inc
push
jb
filds
movsb
sub
fisubs
fbld
enter
daa
fsubs
int
scas
std
mov
or
das
push
mov
ds
test
repz
lahf
mov
cmpsl
push
mov
cs
jmp
dec
inc
xchg
jp
jns
jno
add
push
pop
lret
push
scas
add
loopne
and
cmp
aaa
adc
push
shl
add
test
sahf
and
add
xchg
push
xor
mov
in
pusha
push
cmp
lcall
xchg
fcompl
fwait
sub
sahf
mov
jo
pop
xor
rorb
insb
aas
xor
sub
xchg
ss
fadds
in
fwait
idivl
test
lret
xor
dec
clc
pop
mov
sub
sub
xor
xor
scas
outsl
mov
lods
inc
stc
in
mov
mov
pop
mov
in
lods
mov
cmp
out
mov
sub
cmp
mov
or
gs
or
stc
add
pop
sbb
punpckhwd
push
rcll
mov
add
add
mov
sbb
add
sbb
jmp
scas
adc
ss
cwtl
sti
imul
in
ds
mov
dec
jl
int
arpl
adc
movsb
mov
adc
xor
pop
jno
call
aas
and
pop
stos
dec
jmp
jp
inc
pushf
out
jae
xlat
sub
or
jbe
inc
jne
ds
in
cmp
push
ja
dec
xor
jecxz
mul
testb
std
jbe
cmp
dec
stos
decl
ror
sub
cwtl
jnp
mov
and
fcoms
lock
popf
cmpsl
das
push
daa
loopne
or
sbb
and
mov
lret
push
insl
shrl
dec
mov
xlat
mov
dec
lods
cld
les
adc
and
inc
icebp
mov
shlb
movsb
lods
sub
push
shlb
ret
pop
dec
push
fcmovnb
sub
adc
add
xchg
jmp
repnz
jmp
mov
xlat
loop
xchg
sbb
outsb
push
inc
add
add
dec
rolb
test
adc
cmp
test
sbb
testl
stos
jae
ss
test
mov
pop
dec
stos
mov
push
xor
stos
xchg
cmp
xchg
mov
fists
fbstp
mov
inc
mov
or
cltd
and
insb
dec
pcmpeqw
and
mov
xchg
out
daa
jecxz
enter
lock
repnz
out
push
pusha
sub
mov
mov
pusha
std
jp
xor
mov
scas
mov
rcll
jle
ror
in
dec
and
mov
fbld
js
jmp
mov
xor
popf
std
lods
cli
mov
pop
inc
xchg
stos
mov
mov
in
xor
fisubrs
dec
xchg
arpl
sbb
rol
in
mov
scas
inc
stos
lods
aad
clc
cld
cltd
inc
mov
insl
or
sbb
dec
inc
ljmp
and
bound
imul
fidivs
or
adc
rolb
shl
push
sbb
insb
cs
hlt
add
cli
arpl
dec
lret
test
sbb
ljmp
popf
andb
push
out
pop
xor
cmpsl
xor
push
adc
xlat
xor
cmp
cmc
notb
inc
je
lcall
enter
daa
xlat
and
cmp
in
dec
jno
jl
test
dec
aad
sarb
lea
jmp
lahf
iret
std
es
lcall
push
mov
mov
push
jg
cmp
aam
daa
int3
lods
js
add
pop
or
shl
negl
sub
es
cmp
lods
outsb
or
mov
dec
mov
xchg
fildll
sbb
mov
mov
push
push
mov
int
dec
push
sub
int
pop
mov
mov
call
sub
add
jns
pusha
test
mov
sti
cld
stos
mov
roll
mov
mov
mov
stos
mov
cmp
mov
fisttpll
cmp
mov
movsl
and
shl
mov
cmp
push
pop
push
mov
cmc
int
sahf
xor
cmp
loop
pop
xchg
mov
lcall
data16
lods
mov
push
mov
mov
stc
cli
push
xchg
push
and
cmp
dec
inc
or
aam
xor
or
loopne
cmpsb
insb
pop
aaa
cmp
scas
stos
subb
xchg
adc
push
aad
gs
xchg
cmp
cmp
loope
clc
scas
shrl
pop
ret
pop
mov
mov
jns
cmpb
outsb
mov
mov
inc
jbe
cmp
add
clc
les
adc
xor
pop
lea
call
mov
push
lret
pop
loopne
xchg
pop
xchg
adc
cmpsl
inc
push
es
aas
andl
dec
test
ja
stos
mov
mov
lcall
cwtl
or
dec
mov
lret
adc
fiadds
push
test
fcmovnb
mov
mov
ror
mov
hlt
push
stos
lea
mov
icebp
mov
rcl
jmp
shrl
ljmp
xor
mov
and
lods
lret
mov
test
dec
or
and
filds
rolb
mov
sub
aam
aam
nop
sbb
call
lret
cmp
les
cwtl
mov
sbb
pop
ret
adc
jb
xchg
pusha
xchg
push
setae
inc
cltd
jo
and
push
xchg
or
pop
bound
pop
sbb
mov
pop
popf
mov
stos
bound
cmp
dec
lock
add
ja
mov
dec
add
xor
les
cmpsb
imulb
fnstsw
bound
jle
or
lcall
dec
out
stos
jnp
lea
mov
pop
fwait
jae
dec
dec
dec
jnp
jne
loop
inc
out
push
adc
out
jg
push
in
xchg
inc
xchg
aad
out
sbb
adc
out
or
add
sub
or
lds
in
and
loopne
ffreep
fnsave
cld
lock
outsb
or
lods
std
aad
das
mov
cmp
cwtl
aaa
shrb
jmp
cld
in
loope
jge
xor
push
xchg
stc
jl
negb
iret
mov
sbbb
loop
mov
add
mov
inc
mov
loop
sbb
mov
out
inc
jle
jmp
xchg
jl
mov
call
xor
ficoms
enter
ret
xchg
rcrb
repz
hlt
dec
inc
out
fidivs
scas
push
push
jge
mov
test
call
pop
pop
add
or
test
pop
pop
pop
adc
call
sub
scas
push
xor
and
aaa
cmp
or
mov
mov
enter
daa
movsb
clc
cmp
iret
push
jl
sarb
ds
inc
movsl
rcll
lds
sub
data16
out
enter
nop
xor
addl
js
pop
dec
shll
enter
dec
dec
popa
push
dec
adc
push
jmp
loope
in
in
adc
adc
or
mov
andb
add
cmpsb
outsb
xor
jmp
push
in
push
int
pop
mov
pop
ds
sub
push
xor
jb
or
pop
sub
sahf
sbb
test
xchg
cmp
lcall
mov
fdivl
ss
cmp
ja
daa
ret
shrl
daa
inc
sbb
fcomi
xchg
pushf
hlt
xor
mov
test
scas
cmp
fs
jl
adc
inc
movsb
pop
mov
xchg
cli
mov
loope
cli
inc
addr16
in
cmpb
sbb
andb
gs
and
pop
popa
pop
push
les
adc
sub
add
popf
aas
xchg
adc
sub
xlat
aaa
loope
sub
push
jle
je
push
in
or
inc
sti
cmp
gs
lcall
mov
dec
cmp
adc
mov
pop
les
in
ffree
ss
push
int3
lcall
cmp
cmpsb
cmp
sub
cmp
shrl
fdivrl
leave
inc
stos
sub
pop
jb
sub
je
jbe
jecxz
and
not
lret
les
fcmovu
mov
insb
hlt
mov
pop
inc
dec
inc
shrl
mov
mov
jne
mov
mulb
das
push
lea
xor
jg
test
push
and
lock
jo
or
fbstp
fsubrl
dec
js
int3
mov
test
scas
out
icebp
cli
xchg
cmp
sbb
jmp
sti
repnz
push
insl
jns
jbe
lahf
pop
decb
sbb
cli
pop
aam
jb
push
popa
inc
lods
frstor
clc
testb
ret
or
popa
sbb
jle
pop
sbb
les
or
popf
cmc
or
cmpsl
lds
push
cli
cmp
repnz
lods
add
cltd
int3
test
xchg
nop
dec
push
pop
mov
xchg
bound
xchg
add
sbb
sub
std
out
push
mov
push
out
stos
add
xchg
aaa
outsl
jmp
ds
or
sub
mov
sarl
mov
push
sbb
ja
fidivrl
inc
lds
pop
or
sub
dec
xor
popa
mov
xchg
clc
lahf
popa
jns
pop
loopne
push
mov
outsl
out
lods
jb
sti
icebp
adc
stos
jle
addr16
shr
mov
out
fs
mov
pop
jle
dec
pop
in
pop
and
jmp
xchg
imul
xchg
cmp
cmpl
sti
push
repnz
popf
dec
cs
and
push
xlat
stos
or
add
ret
jnp
outsb
fldt
fld
pop
adc
dec
pop
iret
jmp
mov
push
icebp
dec
inc
sarb
inc
mov
push
dec
push
std
iret
jb
imul
pop
imul
repnz
mov
mov
pop
stos
repnz
ss
leave
pop
shrl
lcall
jbe
sbb
sbb
inc
aaa
cmpsl
das
mov
add
cmp
aaa
iret
jbe
mov
xor
mov
sbb
and
mov
movsb
leave
cwtl
cmp
cmpsb
mov
mov
enter
daa
aad
jl
dec
ljmp
mov
or
mov
movsl
fsubs
sbb
incb
push
inc
repnz
dec
out
xchg
xor
ret
pop
jne
cmpb
and
xchg
push
movsl
clc
loope
pushf
xlat
sub
push
mov
pushf
xbegin
adc
out
inc
and
xorb
inc
xchg
push
add
lods
adc
stos
push
addl
sar
cmp
sub
or
pop
mov
and
mov
mov
dec
stos
jmp
test
bound
pop
lahf
fidivrl
cwtl
mov
orb
jge
and
adc
arpl
out
loop
inc
fdivs
sti
adc
jbe
aad
pop
mov
rcll
icebp
mov
jb
sbb
test
mov
outsl
push
cmpsl
mul
inc
push
enter
mov
adc
data16
cmpsb
lods
outsb
push
mov
mov
repz
je
out
mov
fmull
jnp
add
jle
loopne
sub
adc
jge
out
or
adc
inc
jg
adcl
rorl
mov
cmp
xchg
inc
sub
or
ja
ja
out
mov
aad
dec
nop
ds
dec
cltd
ficoms
cmp
cmpsl
vrcpss
std
or
cmp
dec
lea
add
adc
mov
loope
adc
test
xor
or
les
mov
inc
jl
aas
rol
jb
shll
je
lahf
out
jecxz
sahf
pushf
notb
or
imul
mov
xchg
and
xchg
ficoms
rcl
push
fbstp
popa
stos
inc
das
in
cmpsb
mov
pop
in
and
xchg
adc
mov
scas
movsb
insl
mov
cmpsl
aam
repz
rol
dec
cld
inc
pop
out
lret
push
push
mov
pop
xor
pop
sbb
icebp
jecxz
int
mov
xor
mov
push
inc
out
push
and
pop
fisttpll
es
xchg
cmpsb
sbb
jle
popa
xor
lods
xor
cmpl
out
push
lds
imulb
add
and
cltd
fidivs
repz
outsl
flds
insl
cmp
cld
test
shrb
pop
repz
fs
xchg
pop
sbb
lods
lret
xor
mov
or
xor
pop
mov
add
xchg
adc
add
and
dec
aad
sub
cld
rorl
scas
push
fwait
rorl
inc
jne
jne
mov
mov
jmp
jns
push
notb
and
xchg
sub
cmpsb
inc
les
int3
ljmp
and
mov
es
aad
cld
push
in
stc
xor
cwtl
jns
filds
xchg
ds
mov
ljmp
or
fists
mov
loopne
jb
add
push
movsb
das
stos
sti
out
and
repz
fsub
scas
stc
clc
xchg
push
and
insb
adc
cmp
and
mov
inc
lret
mov
sbb
add
or
lea
inc
jl
mov
sbb
or
shrb
adc
lds
dec
lods
mov
inc
clc
leave
rcrl
cmp
in
xchg
shll
mov
sbb
outsb
and
cbtw
pop
or
push
jp
bound
and
ficompl
cmpsl
orl
push
sbb
xchg
hlt
daa
jo
jle
scas
fsubl
icebp
cmp
call
andb
in
dec
enter
daa
aam
mov
jnp
mov
and
jl
pushf
outsl
dec
and
daa
idivb
movsl
fistps
es
sub
dec
push
adc
test
pop
jmp
inc
into
jl
test
pushf
lea
js
mov
pop
divb
loope
jae
sub
stos
pop
cmp
inc
outsb
xor
lods
adc
ret
popl
int3
mov
jp
jbe
cs
push
xor
mov
pop
pop
mov
sub
pop
cmp
rcrl
loopne
jnp
enter
cmp
sbb
test
jo
cmp
sub
dec
fmull
and
test
cmpsb
mov
cmp
in
daa
jno
xor
pop
dec
shll
nop
sbb
cmp
cmc
and
imull
jecxz
loop
lcall
push
jno
adc
inc
mov
mov
cld
inc
out
xor
cli
cmpsl
and
cmpb
lds
pop
lcall
add
push
loopne
or
pop
xchg
call
gs
xlat
mov
adc
xchg
xchg
shlb
in
fwait
mov
sub
push
jp
loop
jp
xchg
pushf
cmp
stos
out
in
aad
cmpsl
sub
sbb
add
mov
push
fldenv
cmpl
lea
loop
cmp
inc
pop
jbe
mov
sub
pushf
xchg
mov
sbbb
movsb
inc
ljmp
aas
pusha
fldz
jb
lods
add
je
sbb
pop
lcall
lcall
inc
ds
jmp
or
sbb
rorl
hlt
and
sub
int3
add
mov
push
jno
and
cmp
push
inc
popf
es
pop
insl
outsl
mov
sub
adc
or
test
in
cld
jo
arpl
fld
mov
and
lods
pop
cmp
dec
sarb
sub
xor
ret
xchg
mov
ljmp
icebp
pop
pop
popa
dec
int3
scas
lods
popf
add
mov
arpl
fsts
mov
iret
cmpxchg
out
cltd
adc
repnz
mov
in
xchg
sbb
add
xchg
sub
orl
or
pop
sahf
adc
das
cmp
cld
stos
add
enter
daa
idiv
xor
push
or
xchg
sahf
xor
neg
mov
inc
insb
out
mov
lret
jne
ja
in
lods
dec
enter
repz
js
add
decl
mov
ret
mov
aam
out
mov
xor
movsb
sbb
adc
movsl
fsubrs
or
clc
hlt
jp
inc
cmp
sbb
xchg
xor
jle
popf
shl
sti
lret
pusha
xor
mov
and
jmp
iret
aas
push
sbbl
push
js
es
cltd
ds
mov
push
and
stos
outsb
mov
pop
insb
cwtl
sbb
xchg
scas
pop
popa
cmp
adc
sub
pop
ret
pop
jl
sbb
jae
jl
inc
mov
lock
push
sti
les
fcmove
mov
xchg
subl
imul
fdivrp
or
lds
cmp
repnz
in
push
leave
dec
add
hlt
xor
fwait
arpl
les
addb
lcall
or
add
stc
cmp
or
xchg
mov
xor
push
push
scas
mov
mov
in
fisttps
cmpsb
cmpsb
cmpsb
jge
bound
pop
enter
daa
sarl
adc
scas
mov
jno
test
jl
inc
mov
sbb
out
lock
dec
std
lahf
dec
inc
mov
out
ret
test
loop
arpl
addr16
dec
lock
ret
inc
cmpsl
js
les
push
js
loope
outsb
sub
sar
cmp
enter
dec
and
popf
xor
mov
fldl
xchg
mov
xor
addr16
pop
ret
pop
faddl
xchg
push
pop
mov
pop
xor
aaa
je
fdivl
sub
cmc
mov
add
lret
repz
jg
inc
jge
or
jge
jecxz
cmpsl
and
add
jmp
arpl
fsubrs
les
lret
fcmovnb
ds
sbb
sub
imul
adc
and
stc
jg
dec
fs
jle
ljmp
lods
cmp
sbb
mov
add
ficoml
pop
xor
mov
or
mov
repz
xchg
sbbb
push
sub
mov
mov
xchg
pop
or
sbb
sub
hlt
aas
sub
dec
sub
mov
out
sti
inc
xor
cs
push
lret
aad
push
dec
push
fwait
rolb
adc
adc
fildl
aas
fistpl
lea
xchg
call
mov
jne
adc
mov
jmp
pop
lods
pop
dec
xchg
movsl
inc
jno
sbb
push
inc
aas
push
out
mov
xlat
inc
je
jmp
jecxz
cltd
in
std
mov
dec
or
add
xchg
mov
fstl
dec
add
fildl
sbb
mov
push
lcall
inc
pop
mov
int
and
rcrl
cld
es
into
mov
cmpsl
rclb
mov
jg
mov
fwait
mov
idivb
push
andb
cmp
dec
sub
aam
cmpl
and
mov
stos
imul
clc
push
inc
ds
and
xor
fs
add
pop
pusha
lods
or
jbe
roll
shr
aaa
xchg
jl
inc
push
mov
add
xchg
hlt
cltd
dec
fidivrl
mov
popf
aam
pusha
imul
scas
inc
test
xor
sbb
lcall
dec
fistpl
push
xlat
xchg
in
add
jecxz
sub
push
jne
mov
orl
mov
out
mov
mov
sub
subb
push
cmp
sbb
sti
add
aaa
lahf
fwait
das
ret
fstpt
add
out
addb
mov
pop
jns
jbe
in
and
in
sub
or
insb
jp
mov
aad
or
inc
mov
mov
sub
shll
addr16
pusha
adc
in
filds
call
fsubr
mov
sub
movsl
push
cmp
clc
popf
rcrb
inc
loopne
push
xchg
and
stos
loope
xor
inc
ljmp
popf
add
scas
mov
outsb
out
adc
push
push
or
sbbl
and
popa
jae
inc
dec
inc
shll
or
subl
jp
adc
xchg
fmuls
clc
sbb
mov
imul
pushf
ficomps
xor
rorb
sbb
repnz
in
leave
mov
xor
fiadds
jge
int3
out
sbb
adc
or
movsb
pop
add
cmp
sbb
push
je
sub
vmovsldup
mov
pop
cmp
mov
movsb
push
adcl
jp
sub
icebp
in
dec
or
enter
daa
rcl
add
loope
addr16
or
mov
lea
cmp
jo
in
mov
and
sbb
xor
imul
loopne
inc
in
xchg
out
or
xor
xlat
push
js
data16
inc
mov
push
out
dec
loope
ljmp
shll
cmp
mov
popa
sarb
nop
ds
cli
xor
or
call
mov
xor
rcll
push
mov
outsb
jns
sub
aad
cmp
push
lcall
out
push
jb
push
shrb
mov
dec
xorb
jg
pop
lahf
mov
fldcw
cmp
scas
leave
and
lds
arpl
xor
rcl
popf
mov
cmp
pop
into
dec
mov
cmc
mov
cld
xor
outsl
repnz
loop
leave
dec
stc
and
adc
mov
dec
lods
and
dec
out
xchg
lods
cli
or
orl
in
in
sets
loopne
or
adc
jae
imul
testl
sbb
gs
arpl
insl
sub
add
sti
hlt
xchg
jno
mov
rorl
xchg
dec
mov
call
fsts
fstpt
movb
lea
callw
cwtl
cmp
pop
fmul
pop
adc
mov
jno
out
pop
icebp
arpl
inc
clc
outsl
fildl
loop
aas
sahf
push
sub
incl
je
adc
jmp
jg
std
pusha
dec
cmc
cwtl
mov
jmp
ret
pop
mov
sbbl
mov
mov
loopne
gs
push
mov
in
lock
sbb
mov
cmp
mov
clc
shrl
dec
insl
cmp
mov
cmpsl
shrl
iret
icebp
push
sbb
lret
mov
ds
jno
lock
jp
mov
and
aam
mov
and
xchg
push
inc
ret
mov
sbb
insl
mov
clc
jge
push
das
repz
arpl
dec
ljmp
mov
jae
fs
sub
out
data16
movd
add
pop
add
test
divb
mov
cltd
cmp
dec
mov
mov
nop
sahf
call
mov
ja
stos
or
sbb
popl
pushl
xor
addb
dec
mov
int
add
inc
pop
pop
ja
adc
dec
scas
sub
or
cmp
pop
subl
mov
dec
ds
jae
out
popa
dec
or
inc
xchg
ja
adc
in
pushf
inc
xchg
pusha
ss
rorl
or
faddl
daa
mov
mov
xchg
out
mov
jae
out
idivb
jb
imul
xchg
mov
es
gs
xorl
push
mov
popf
out
jnp
xor
push
shll
and
insb
outsb
add
mov
mov
adc
repz
pop
cltd
cmpsb
pop
xor
mov
jae
push
cs
les
or
mov
insb
fidivl
aam
sbb
loopne
imul
add
inc
cmpsb
insl
lds
xchg
mov
cmp
ss
imul
jno
lock
mov
fistps
adc
aaa
mov
stc
in
add
pop
mov
pop
dec
mov
push
push
jl
out
js
and
scas
jns
xor
dec
mov
and
mov
in
xor
dec
mov
les
shl
dec
cmp
xor
mov
jl
add
imul
hlt
push
in
and
in
lahf
mov
sbb
fwait
xchg
test
js
mov
into
xorl
push
mov
pop
sbb
push
sbb
sub
mov
movd
mov
rclb
xor
addb
nop
sbb
and
add
or
xor
icebp
jne
gs
cld
int
cli
out
mov
daa
pop
lcall
mov
sub
mov
out
orb
jg
scas
inc
dec
mov
mov
xchg
xor
pop
cmp
push
es
divl
or
xorl
jns
mov
lods
pop
into
das
mov
fidivl
xlat
out
outsl
shrl
js
in
outsb
xor
clc
dec
adc
cmp
lods
or
mov
adc
mov
stos
cli
inc
or
xor
xor
cmp
jmp
adc
pop
sbb
gs
adc
loopne
es
adc
negb
add
fs
sahf
icebp
test
jb
push
sub
lret
out
test
and
cld
cs
loope
sbb
sbb
adc
mov
icebp
xchg
movb
iret
xchg
jns
mov
std
xor
adc
inc
iret
pushf
xchg
pop
test
pusha
cltd
xor
xchg
and
add
orl
dec
jb
popa
je
mov
jecxz
repz
popf
std
pop
cmpb
xlat
mov
push
adc
les
fimull
fcmovu
loope
out
mov
in
mov
fcmovnb
lock
test
imul
cmpsb
mov
cmp
sti
xchg
outsb
xor
insl
and
xchg
dec
mov
js
rolb
je
sub
cmp
lds
lock
and
jge
repnz
cltd
dec
mov
sub
jne
ret
inc
sti
push
xor
frstor
mov
mov
sbb
dec
push
fs
fbld
lods
fidivrs
out
mov
lahf
xchg
or
xor
int
fiadds
or
mov
mov
fcmovu
xchg
insb
dec
or
xor
sbb
and
lahf
call
push
sbb
popa
incb
sbb
jmp
xor
cwtl
or
push
xor
mov
add
adc
push
pop
cld
push
jp
shrb
dec
mov
mov
ud1
mov
pop
fnsave
inc
xchg
out
xlat
adc
mov
mov
aas
pop
out
ljmp
or
xchg
fs
aaa
or
pushf
mov
inc
jle
cmp
sbb
pusha
add
filds
loopne
jmp
xor
addl
test
popf
push
test
mov
adc
inc
and
adc
xchg
cmp
push
cmp
adcl
jno
push
pop
push
sbb
mov
xor
orl
push
js
adc
call
mov
adc
fadds
in
in
rol
ret
sarb
or
mov
test
adc
arpl
add
fldt
fdivs
bound
or
sub
into
std
dec
pop
jns
mov
xor
jnp
push
scas
pop
mov
and
add
inc
movsb
subb
mov
fs
pop
mov
andb
jle
cmp
jl
sbb
rorl
cmp
movsl
sti
pop
xor
lret
push
mov
push
pop
rcll
test
inc
es
or
mov
cmp
mov
push
cli
ja
cwtl
aaa
xor
dec
int3
cmp
mov
mov
mov
lcall
loope
sbb
mov
xor
stos
or
cmp
push
cmp
filds
cmp
xor
cmp
movsb
fdivl
sub
mov
jge
dec
andb
lss
loop
mov
push
shll
xor
ss
out
and
mov
test
stc
ffree
add
mov
xchg
xor
adc
push
xor
pop
mov
loop
leave
fwait
stc
movsb
popa
jne
orl
xlat
lea
lods
icebp
adc
scas
add
cli
jae
lret
or
or
mov
sub
cmpsl
gs
push
test
popa
xchg
adc
imul
data16
add
movsb
xchg
mov
sub
imul
adcl
jp
push
xorl
xor
pop
add
nop
test
sbb
je
jl
sti
push
xlat
flds
test
dec
fldt
ss
call
aaa
or
inc
cwtl
xor
pushf
aas
call
jo
aaa
fisttpl
push
jecxz
inc
dec
xor
aas
fcoml
jb
and
je
push
cmp
mulb
adc
cwtl
sub
jle
inc
adc
orl
int
mov
push
mov
lock
das
dec
push
dec
mov
repnz
clc
and
mov
mov
icebp
repz
push
push
dec
scas
mov
mov
icebp
add
mov
lret
xchg
mov
push
and
sbb
pop
mov
andb
mov
in
and
push
repz
loop
mov
mov
mov
fcoms
lods
dec
dec
pushf
mov
out
or
sub
leave
fwait
cvttps2pi
add
mov
mov
pop
xchg
xchg
pop
dec
jo
imul
dec
les
shll
push
pop
dec
sub
mov
add
xor
outsb
jmp
test
xor
test
push
xor
lcall
inc
mov
inc
dec
or
or
mov
mov
jne
lret
push
mov
bound
pop
loop
bound
or
pop
ljmp
in
cmp
mov
mov
ret
das
rol
jp
lcall
js
mov
sub
stos
jmp
pusha
lahf
push
push
fistps
mov
pop
xchg
sti
jbe
adcl
lcall
iret
mov
stos
cmp
sub
mov
jl
inc
aaa
jge
stos
jl
scas
call
mov
aas
iret
and
ffreep
test
mov
lahf
sub
inc
add
lea
cmp
inc
lret
or
hlt
sbb
fwait
mov
into
sbb
pushl
fimuls
pop
mov
stos
pop
xor
xor
and
or
arpl
mov
test
xchg
shlb
pusha
adc
mov
inc
add
ret
sbb
pop
test
dec
push
sbb
jle
push
xor
outsl
xchg
movsb
or
push
bnd
mov
outsb
in
gs
enter
daa
iret
fwait
lods
cmp
je
lock
jl
sbb
dec
dec
stc
and
movsl
pop
xchg
movsl
add
lea
data16
mov
call
push
push
mov
push
out
pop
pop
cmc
out
js
lds
push
lea
loope
ret
jg
cmpsl
cmp
fstl
cmc
ja
rorb
pusha
outsl
pop
mov
sbb
mov
xor
loop
mov
cltd
les
mov
jge
sub
ja
xchg
icebp
pop
fcompl
pop
loope
jecxz
add
dec
dec
leave
add
idivl
leave
ds
mov
mov
aad
and
jo
cmp
xchg
mov
div
and
rcrl
adc
aam
mov
cmc
push
out
cmc
add
ljmp
mov
call
fs
adc
adc
pop
mov
lods
fcomp
sub
scas
jmp
cmpsb
iret
or
cmp
addr16
mov
mov
gs
push
loopne
fwait
mov
das
or
adc
xchg
imul
sbb
gs
sbb
adc
inc
xlat
lock
sub
push
aam
adc
test
sti
add
lds
lcall
nop
pusha
int
dec
roll
push
sub
les
flds
repz
pop
or
dec
ret
popf
lea
jo
mov
out
pop
cmc
or
adc
dec
push
ds
pop
fiaddl
inc
push
jl
jb
add
pusha
xor
movsl
jecxz
sbb
movsl
or
push
hlt
cwtl
jecxz
xchg
mov
push
sbb
stos
add
scas
fwait
or
aas
sub
mov
test
mov
repnz
and
das
daa
outsl
push
mov
test
pop
adc
jnp
es
bound
icebp
test
jns
cmpsl
into
mov
xor
js
add
cs
xchg
test
mov
jne
xlat
sbb
sub
mov
ret
pusha
lock
push
mov
dec
fnsave
clc
clc
add
and
xchg
xor
popa
mov
lods
inc
mov
push
cmp
movsb
push
idiv
dec
jnp
fistps
sub
loopne
ljmp
xchg
dec
xlat
inc
addr16
pusha
in
xchg
xchg
sbb
in
sarl
inc
cmpsl
stos
fisubrl
push
arpl
add
dec
call
mov
jo
or
ret
mov
inc
mov
dec
push
mov
jb
push
dec
xchg
mov
out
les
aaa
and
addr16
jne
mov
xor
xor
jns
inc
and
shl
mov
dec
fmulp
out
mov
sub
mov
cmpsl
addr16
push
jp
mov
mov
dec
mov
repnz
jle
in
fsubl
fistpll
sarb
jmp
push
andl
push
inc
and
popf
pop
jge
mov
nop
dec
hlt
stos
lods
jp
and
or
pop
orb
dec
mov
push
lret
adc
stos
add
cmpb
pop
leave
lods
inc
or
adc
mov
push
mov
push
jbe
stc
fimull
pop
xchg
xor
mov
imul
sub
rcr
into
shlb
mov
xor
adc
fwait
cmp
cmpsl
and
push
cmpsl
jbe
lock
sub
sbb
inc
shr
loopne
movsb
or
fcmove
movsb
pop
xlat
mov
fdivs
xor
jl
push
pop
fisubs
add
fstpt
add
test
inc
cmpsb
xor
imul
enter
daa
into
cmp
cmp
test
jl
loope
dec
mov
decb
add
out
loop
add
arpl
push
fnstcw
rcl
fstps
sbb
js
mov
pop
inc
clc
push
aad
loope
jno
sub
push
leave
cmp
pop
outsb
test
mov
in
fs
mov
and
sbb
or
jo
fdivl
push
out
push
outsb
xor
add
lea
ss
lcall
xor
lret
sub
xchg
mov
test
daa
loope
fcoml
cld
mov
mov
bound
inc
cmp
pop
fmuls
xor
lds
lret
shll
jg
jg
lea
add
fcomi
int3
bnd
outsl
outsb
sahf
xchg
loop
cwtl
stc
adc
ret
fs
xor
adc
in
jbe
aas
lods
mov
je
out
addl
cmp
gs
clc
shlb
jo
aad
sub
shl
hlt
in
pop
dec
mov
adc
out
jne
mov
cmpsl
adc
arpl
insb
stos
add
lock
das
add
sub
dec
in
fs
sti
mov
fldt
std
mov
cmp
addb
mov
icebp
push
les
cmpb
dec
pop
fmuls
sub
faddp
xor
xor
pushf
xchg
and
sub
and
inc
adc
and
jp
sbb
xchg
dec
xlat
es
dec
jmp
or
call
imul
mov
adc
mov
leave
dec
lcall
mov
in
mov
sahf
adc
lock
mov
pusha
sub
fmull
call
aam
insl
fnstenv
movsb
in
cmpsl
int
test
icebp
mov
cld
jb
push
lret
jae
movsl
mov
lea
mov
testb
sub
aad
ret
out
sarb
cltd
add
rclb
pushf
sub
ss
lods
pop
in
mov
mov
das
xchg
filds
push
rolb
pminsw
nop
add
ja
pop
imul
cmc
out
add
outsl
orb
imul
xchg
adc
mov
not
adc
xor
leave
sub
push
push
shl
add
push
xor
loope
dec
xor
jb
aad
mov
inc
aaa
mov
je
adc
pop
sub
mov
dec
jp
mov
or
mov
dec
cld
xorb
xorb
mov
bound
int
in
mov
add
mov
ss
or
addr16
jl
mov
jge
mov
das
mov
jle
push
fbld
pop
cmp
fucomp
aam
add
jb
stos
insl
movsb
xchg
xchg
mov
xorl
fistps
insb
lods
push
iret
fst
stos
and
mov
sbb
scas
scas
xlat
repnz
adc
adc
iret
loope
stos
ret
pop
pop
or
adc
inc
rcrb
xchg
ljmp
fiaddl
or
mov
sbb
outsb
dec
imul
js
push
nop
imul
test
dec
adc
push
hlt
repnz
arpl
xchg
clc
jge
insl
sbb
push
getsec
lahf
in
or
mov
adc
and
jecxz
mov
jo
sahf
loopne
cmc
scas
xor
xchg
and
mov
inc
insl
push
nop
or
xor
in
mov
popa
mov
loopne
xor
mov
out
sub
iret
ds
icebp
movsl
adc
push
and
mov
test
movsb
add
inc
mov
cmp
ficompl
and
daa
adc
cmp
mov
fst
pop
loope
inc
pop
sub
xor
cmp
pop
adc
mov
jae
orb
sbb
hlt
sub
lods
fdivs
and
mov
jno
clc
sub
in
lcall
sahf
fdivl
cs
xor
test
add
xor
jle
nop
lahf
lods
mov
out
and
leave
es
das
cmp
or
xchg
lret
lcall
mov
aam
xor
pop
into
mov
pop
loope
inc
cmp
mov
stc
leave
adc
adc
movl
cmpsb
aam
mov
push
cmp
lods
xchg
xor
cmp
ss
or
adc
xchg
mov
gs
nop
loopne
pusha
in
pop
insl
xlat
adc
dec
push
imul
jge
xchg
jmp
insl
sbb
mov
mov
sub
xor
inc
cmpsl
das
in
iret
add
pop
mov
mov
xor
and
push
mov
xor
outsb
xchg
fldcw
jmp
push
repz
mov
push
out
dec
lea
push
call
mov
aaa
pop
pop
jne
pushf
inc
popl
sbb
dec
pop
and
inc
sahf
lds
mov
pop
ja
dec
mov
mov
xor
sahf
imulb
push
lcall
ret
pop
mov
repz
pop
fistpl
and
pop
lock
ja
pop
or
mov
addr16
and
es
or
rcr
dec
lahf
jecxz
cmpsl
int3
add
leave
icebp
mov
lcall
into
sarb
popa
test
adc
mov
sub
dec
aam
jle
aam
cmp
out
rolb
xchg
sahf
arpl
ljmp
pop
lods
mov
push
mov
sbb
xchg
es
xchg
popf
inc
cmovns
cltd
xchg
cmpsl
xchg
xchg
xchg
xor
movsl
out
test
outsl
pop
xchg
shll
shrl
pop
dec
repz
mov
push
and
test
incl
in
or
xor
and
fsubrs
stc
mov
call
out
push
dec
insl
aas
pop
inc
adc
pop
or
scas
pop
fwait
dec
lds
jne
jnp
mov
pop
js
mov
sbb
jns
fsub
jmp
mov
out
xor
jmp
addr16
mov
es
mov
mov
sahf
dec
test
in
repnz
mov
xchg
xchg
aas
jmp
pop
xchg
pusha
addl
push
int
in
popf
stos
add
xchg
push
push
negb
stos
xchg
dec
outsl
and
loop
insb
test
scas
adc
inc
push
pop
push
fcoml
test
iret
inc
scas
out
mov
lock
inc
and
mov
or
add
inc
je
push
fidivl
scas
sbb
in
imul
adc
stos
in
mov
fcoms
leave
mov
cmp
push
or
scas
dec
jge
mov
aad
pop
outsb
movsl
or
icebp
inc
int3
jp
mov
xor
cmp
add
pusha
push
scas
aam
ja
sub
cmp
lret
xor
push
fists
in
mov
imul
int3
or
cmp
test
jno
sbb
jl
out
jecxz
lcall
movsl
pop
pop
sahf
and
insl
lahf
and
push
stos
mov
scas
push
outsl
mov
sub
pop
aam
sub
pop
jae
mov
sbbb
repnz
and
outsb
dec
mov
and
lcall
andb
sbb
adcl
xchg
and
je
adc
fcomp
dec
sub
ss
xor
or
inc
lret
cwtl
mov
fsubl
and
mov
inc
sahf
jp
mov
adcb
lret
jg
cwtl
in
dec
arpl
mov
jo
mov
out
mov
ss
mov
aaa
imull
fsubr
rcrl
mov
xchg
sbb
mov
sahf
mov
xor
push
dec
loop
aaa
movsb
stc
adcb
adc
data16
mov
mov
cmp
out
adc
aas
aas
cltd
xor
loope
pop
or
add
lock
loopne
loope
pop
mov
pop
adc
in
imul
xchg
jns
scas
inc
arpl
lds
xlat
lods
xor
sub
xor
cmp
xchg
sti
push
stos
sbb
ret
mov
aad
mov
testl
fimuls
pop
and
les
lret
inc
pop
pop
push
xor
rcl
fsubrp
and
call
adc
outsb
inc
jmp
xchg
mov
inc
and
inc
mov
push
fs
xlat
sub
cmc
xchg
je
int
jecxz
out
add
std
dec
iret
leave
cwtl
adc
cmp
mov
mov
dec
jo
push
int3
aad
mov
test
lock
or
mov
into
fidivrs
repnz
roll
test
insl
cmpsl
es
dec
lcall
mov
pusha
xchg
imul
xor
outsl
mov
fwait
test
sbb
xor
cmp
adc
and
jl
popa
aam
movq
or
icebp
aam
out
push
clc
mov
notb
mov
sti
popa
add
mov
lcall
xchg
insl
adc
push
mov
push
sub
rcrl
or
insb
mov
sbb
dec
or
pop
test
push
int3
xchg
xor
sbb
rol
xchg
pushf
pop
testb
push
dec
popa
pop
add
mov
xor
xor
insl
add
xor
push
mov
out
gs
ds
adc
sbbb
lds
fldt
inc
stos
data16
test
fwait
js
dec
dec
adc
jle,pt
mov
das
pop
out
fwait
inc
aam
mov
mov
in
inc
jmp
out
movsb
add
or
jb
sub
insb
jp
das
inc
mov
dec
dec
mov
or
testb
adc
fistps
push
pop
xchg
test
mov
xchg
daa
out
mov
nop
movsb
popf
rcrl
std
mov
dec
xchg
mov
and
xor
insb
lock
xor
scas
je
ficoms
add
imul
lods
inc
ret
push
pop
jnp
testb
jae
cmp
mov
les
int
inc
repz
addr16
xchg
cmp
sbb
cs
imul
push
lds
sub
jno
mov
sub
mov
add
hlt
mov
dec
arpl
fdivs
nop
cmp
jge
mov
sbb
lock
sbb
mov
jge
gs
pop
fs
push
test
fisubrs
scas
mov
sahf
and
xor
push
cs
add
enter
daa
lret
aaa
loopne
inc
or
jno
pushf
lods
jl
xor
dec
or
movsl
push
push
shll
xchg
lods
lahf
inc
mov
push
jle
pop
notl
mov
pusha
push
or
jmp
arpl
std
lea
ret
jecxz
loope
push
subl
scas
cmp
jne
lods
les
shlb
in
xlat
insl
xorb
sbb
data16
hlt
jmp
sarb
push
ja
test
mov
sub
fcoml
push
out
scas
hlt
fmul
and
lahf
mov
movb
push
test
outsl
nop
lock
add
jp
cmp
and
sub
cmp
cmpb
lret
jnp
negb
testb
dec
into
subl
xor
fbstp
loop
push
jne
aaa
mov
or
bound
jmpw
lods
je
fisttpll
stos
pop
and
jb
cmpsl
xor
push
out
cmp
push
mov
fnstenv
outsb
gs
sub
loopne
jne
pop
stos
sarl
xchg
lods
ret
adc
lea
cmp
add
xlat
in
adc
sub
and
jno
sub
movsl
stos
ljmp
mov
aad
xorb
dec
cld
dec
dec
mov
fsts
insl
push
repz
cld
push
jmp
lea
sub
call
mov
mov
loop
adc
cmp
nop
jmp
lods
aam
data16
inc
test
fists
aas
testl
dec
cmp
lea
lods
jecxz
adc
divb
push
fstps
cld
jb
mov
scas
cmpl
inc
mov
lcall
lock
jmp
inc
mov
test
push
and
sbb
aad
shlb
orb
xchg
popf
in
lret
mov
aaa
sub
lret
shrb
ret
and
pop
data16
push
call
push
sub
adc
pop
sub
push
ret
fisttpll
sub
out
aam
xchg
sbb
out
cld
cmp
rcr
lods
pusha
xor
dec
mov
cwtl
xchg
mov
mov
cwtl
sysret
scas
mov
cltd
add
je
cmpsl
repz
jae
test
into
cld
xchg
dec
mov
into
outsl
rcrl
iret
inc
pop
mov
stc
in
out
xchg
ret
add
mov
lods
adc
dec
sub
popa
xlat
cmp
mov
lods
pop
pop
pop
cmpsb
sub
dec
xlat
dec
push
xor
inc
cwtl
mov
fwait
cmpsl
cmp
jne
in
mov
adc
stos
bound
je
adc
decl
xchg
xchg
mov
out
mov
call
mov
sub
mov
movsb
mov
in
mov
jl
sti
jle
sub
in
cwtl
adc
fistpll
popl
nop
rclb
andl
push
push
mov
popf
clc
sbb
stos
push
mov
test
std
stos
adc
or
adc
lock
push
out
movsb
adc
push
loopne
scas
mov
pop
mov
addb
jae
and
inc
fsts
xchg
or
pop
sub
inc
jb
xchg
ficompl
enter
and
sbb
dec
ljmp
dec
ds
jle
loope
mov
bnd
ja
push
hlt
rcl
hlt
arpl
sahf
sahf
jbe
cmp
mov
sub
or
or
xor
int3
push
and
pop
xchg
inc
stc
push
mov
xor
popf
and
and
push
loope
fsubl
test
inc
sbb
enter
daa
lret
cmp
sbb
and
jl
dec
insl
dec
js
clc
ds
setns
insl
jp
lahf
bound
inc
test
add
lcall
and
int
cmp
adc
sti
sbb
and
enter
jle
adc
mov
ss
in
orb
popf
add
xchg
bound
cmp
jp
cwtl
int
je
sub
and
lcall
mov
sub
mov
test
jns
orb
jg
mov
repz
mov
stc
frstor
inc
cmpsb
ss
subb
cmp
push
lret
mov
mov
int
sbb
les
xor
outsl
ljmp
stc
out
test
vunpckhps
mov
dec
data16
mov
push
mov
cli
movsl
or
mov
mov
jecxz
cld
loope
gs
pusha
loope
jae
dec
pop
lret
adc
mov
mov
inc
adc
xchg
les
test
xchg
xor
pop
sbb
cmp
add
xor
sbb
sti
insb
aad
mov
adc
dec
scas
xor
inc
insl
pop
and
int
sbb
repz
lock
pop
pop
int3
lea
jae
xor
adc
adc
lcall
mov
inc
xor
aas
xchg
orl
imul
je
add
jecxz
jnp
div
test
xchg
mov
cmp
adc
mov
mov
dec
mov
add
dec
fisubs
mov
cmp
fsubl
pop
dec
shll
mov
add
mov
dec
nop
pop
inc
cmpsl
leave
ror
mov
push
loope
cld
push
data16
das
loopne
mov
test
rcl
pop
jb
xor
mov
mov
aad
sub
nop
push
test
fnsave
popa
mov
pop
loope
ljmp
sbb
lret
or
out
inc
jbe
xchg
sti
push
add
data16
add
xor
test
daa
xchg
jnp
push
dec
fcmove
test
push
fcompl
sbb
sub
stos
test
out
push
xchg
ret
mov
mov
lcall
push
xor
out
xor
mov
mov
in
dec
mov
sbb
pop
ja
aas
mov
inc
fldln2
scas
or
sbb
sbb
dec
mov
mov
push
add
faddl
jns
push
sub
fcoms
jp
iret
mov
stos
sub
xchg
jp
mov
mov
movsb
call
mov
mov
jle
push
fsubp
dec
andl
fistps
xor
xchg
xchg
sub
push
push
push
lcall
pop
dec
cmp
stos
in
lret
adc
cmc
insb
mov
jnp
sbb
push
sub
outsl
jns
pop
mov
ret
sbbb
addl
jae
push
push
or
push
push
icebp
jge
fcmove
sbb
push
push
imul
ficomps
adc
jae
jg
cld
jecxz
gs
repnz
mov
push
les
jbe
mov
jge
nop
sbb
aaa
fwait
and
or
gs
pusha
adc
pop
ret
push
outsl
mov
jo
pop
xor
jno
push
and
int
cmp
sti
les
int3
mov
in
push
lea
sbb
sbb
cli
or
out
bnd
cltd
movsl
sub
push
and
jb
lahf
addl
enter
fs
repz
out
push
pop
dec
cmp
js
push
bound
jnp
or
xor
cmp
pop
sub
xchg
cmp
mov
jae
lahf
std
add
sub
pop
xchg
js
sbbb
and
xor
dec
push
jge
and
sub
jecxz
lcall
fcmovnu
and
mov
test
xchg
lods
mov
mov
out
mov
mov
cld
push
and
adc
cmp
idivb
arpl
push
adc
shll
mov
pop
mov
into
inc
push
jge
scas
cli
into
xor
jge
loop
sub
stc
movsl
hlt
adc
adc
int
add
lods
inc
je
mov
cmp
and
fadds
xor
cmp
ret
and
mov
pop
test
gs
sti
data16
pop
jmp
orl
add
je
xchg
imull
sbb
jbe
and
push
dec
sub
jg
in
jnp
push
sti
sbb
shrl
xchg
push
push
jno
nop
addb
andb
add
mov
repz
pop
pop
mov
lea
jp
call
mov
jo
daa
xchg
pushf
in
add
mov
inc
mov
mov
aas
xor
adcb
sub
je
sbb
jecxz
daa
popf
divb
pop
ds
aas
adc
js
jp
jo
pop
dec
fildl
xor
enter
mov
cltd
xchg
lock
out
das
popa
test
mov
repz
scas
shll
mov
xchg
add
pop
out
mov
or
in
xchg
cld
dec
mov
push
mov
mov
dec
mov
xchg
out
rorb
xor
aam
pop
add
mov
scas
popa
fstpl
clc
fs
ljmp
lock
cmp
movsb
pop
adc
sbb
iret
pextrw
mov
sbbl
inc
jno
xchg
xor
pop
outsb
test
jge
xchg
xlat
sbb
fcompl
inc
stos
je
cmp
xor
jne
add
aam
cld
lods
ret
movsb
or
jne
xor
fisttpll
add
dec
mov
aam
add
mov
dec
cmp
icebp
inc
jo
push
fwait
add
adc
mov
sbb
out
cmp
bound
daa
jns
sub
daa
sbb
out
stos
stos
sub
push
mov
in
jp
add
mov
pop
pop
or
in
into
cmp
fsubl
pop
xchg
and
mov
cmpl
push
fnstcw
sahf
popf
inc
movsl
mov
or
stos
pop
pop
repz
add
insb
xor
xchg
mov
sub
adc
sahf
out
mov
and
and
push
jae
out
fists
or
push
movsl
add
out
fiaddl
sbb
add
fdivrp
push
inc
cli
sbb
rclb
lcall
loopne
leave
gs
hlt
imul
jmp
jge
push
int3
sbb
mov
roll
and
es
popf
push
push
xchg
ret
xor
push
xor
push
sahf
shlb
mov
jp
fdivrs
movsb
push
sbb
jmp
dec
adc
enter
daa
enter
fbld
jno
negb
fcomip
mov
ds
and
mov
test
fwait
pop
ret
add
pop
jo
cwtl
js
mov
pop
mov
inc
pop
loope
addb
jg
mov
mov
adc
push
scas
inc
hlt
add
scas
leave
stc
sbb
and
add
cltd
xor
mov
int
fwait
jmp
pop
xor
cmp
idivb
insb
leave
ret
sahf
push
int3
inc
test
jp
cmpb
jg
stos
mov
and
mov
sbb
mov
push
xchg
and
mov
pop
aaa
mov
sub
sub
mov
jbe
mov
mov
into
sub
mov
jbe
xor
ljmp
mov
pop
mov
mov
data16
mov
mov
push
cli
or
cmp
mov
sar
inc
sbb
gs
cli
xor
test
adc
adc
std
imul
outsl
add
fwait
ret
popa
movsl
sbb
mov
xlat
test
dec
jns
mov
push
in
out
sar
lret
cs
jae
aad
jle
nop
pop
mov
sub
xchg
cmpsb
mov
cmp
les
repz
pusha
lret
push
lea
ja
push
adcb
in
pop
lods
adc
and
pushf
xchg
xor
bound
fmul
inc
ds
testb
repnz
aam
daa
jb
int3
repz
mov
xchg
jecxz
pop
mov
std
out
sbbl
dec
sarb
inc
xor
dec
sbb
jmp
mov
add
dec
adc
inc
adc
sbb
push
fidivl
rol
lea
insl
inc
cmp
movl
mov
out
lret
or
sbb
and
lock
pusha
popa
movsb
sub
insb
aam
jb
ret
dec
test
push
or
stc
clc
lahf
xor
or
push
sub
pop
mov
lods
mov
call
out
pop
cmp
xchg
mov
push
hlt
mov
and
stos
add
jo
test
mov
aam
sbbl
test
mov
xchg
sub
out
cmpsb
rcrl
dec
stos
pop
mov
lods
mov
fdiv
jmp
add
pop
xor
push
or
pop
aaa
mov
imul
pop
push
shlb
mov
dec
sub
test
add
ljmp
mov
aaa
cmp
xchg
bound
mov
jns
mov
in
dec
hlt
xchg
jbe
leave
ljmp
shlb
addr16
inc
in
jp
add
mov
nop
insb
mov
leave
lret
push
add
pop
jg
pusha
ja
inc
fists
add
xchg
xchg
push
movsl
iret
orl
fstps
into
imul
stos
shlb
sti
insb
pushf
sub
scas
add
or
lret
loop
iret
sbb
out
ret
pop
push
push
mov
jae
jns
inc
loop
jl
and
push
out
rol
fidivl
flds
xchg
cmp
sbb
pushf
xchg
call
xor
sbbl
mov
ja
fmul
faddl
pop
arpl
mov
jge
stc
xor
pop
out
push
or
js
or
in
pop
and
xor
xor
fisubrl
pop
fisttpl
push
xchg
mov
arpl
add
inc
fisubl
fstpl
daa
adc
test
mov
or
push
mov
and
lahf
mov
in
cmp
popfw
or
push
stc
insb
xchg
jle
xchg
push
imul
stos
imul
enter
imul
adc
outsb
cmp
adc
loope
pop
push
xchg
inc
add
xor
inc
out
add
je
xor
shll
fildl
sub
cli
and
push
dec
lods
rcr
ja
lods
sub
je
test
adc
sbbb
xchg
mov
xchg
rorb
call
sub
fidivl
or
pop
mov
insb
or
imul
mov
test
push
add
in
in
mov
dec
sub
cmc
cmp
adc
push
loop
rcll
data16
or
sub
out
jg
cli
ds
xor
cmp
jmp
cmpsl
mov
pop
pop
mov
inc
nop
cmp
adc
fdivs
adc
sbb
add
jg
jge
inc
sbb
in
dec
dec
xlat
call
push
mov
push
in
or
jns
cmc
cs
sbb
fsubrp
es
cmp
dec
lret
push
sub
sbb
les
sahf
repz
scas
push
arpl
aad
imul
scas
lcall
inc
pop
adc
mov
pop
repnz
inc
lds
or
aas
jae
xorl
xchg
dec
sbb
pop
jecxz
dec
pop
idivb
bound
clc
aad
mov
push
sbb
mov
jg
mov
icebp
dec
lock
xor
mov
popa
aad
and
pop
xchg
rcll
push
mov
insl
sub
ss
addl
mov
icebp
xchg
frstor
lret
jl
push
mov
mov
xchg
or
iret
hlt
inc
shlb
xchg
sub
ret
aam
fnstsw
push
into
movb
and
mov
ljmp
pop
lods
or
jns
add
or
rcrb
push
iret
bound
sbb
add
aaa
ds
loopne
movl
aas
sub
das
gs
jl
xchg
jb
sbb
adc
pop
dec
push
lds
jnp
in
inc
mov
es
cmp
or
jle
xor
xor
mov
scas
cmp
pop
dec
sbb
dec
xor
pop
mov
inc
sahf
loop
neg
fwait
arpl
dec
jg
or
mov
jb
out
notb
bound
xchg
cltd
in
pop
adcb
sahf
jmp
or
dec
and
mov
fnstsw
cld
pop
jle
mov
pop
xchg
pop
pusha
adc
fbstp
mov
xchg
push
movsl
aaa
sbbl
popf
xchg
addr16
mov
stos
inc
sahf
aaa
and
add
test
scas
arpl
push
add
adc
loope
ret
inc
pop
mov
mov
jae
jae
inc
in
push
push
outsb
inc
ljmp
mov
sbb
or
imul
or
inc
mov
in
dec
pop
jne
inc
xchg
inc
repnz
leave
push
inc
in
hlt
incl
push
idivb
test
aaa
fdivs
or
mov
int3
cld
jbe
pop
dec
and
sbb
xor
or
jno
lcall
movsb
out
mov
push
mov
movsl
in
in
sbb
xchg
xchg
daa
aam
cmp
xlat
jno
cmp
jl
repz
pop
enter
xchg
movsl
inc
adc
fnop
cwtl
lahf
ficomps
dec
test
xor
out
mov
adc
scas
js
sbb
pop
cmp
add
loope
cli
jge
inc
dec
and
outsb
pushf
sub
je
repnz
push
sbb
add
pushw
xor
int3
call
int
push
inc
sub
stc
filds
cs
xchg
lcall
mov
and
mov
test
or
xorb
mov
cmp
shll
sbb
cmp
daa
dec
mull
inc
ljmp
hlt
lret
mov
xlat
cmc
add
js
rclb
int
loop
hlt
stc
lret
fs
in
adc
lcall
test
mov
movsl
and
cli
jno
icebp
xor
cmpl
arpl
jo
fdivr
mov
arpl
loopne
mov
adc
sbb
add
mov
xchg
inc
daa
rcrl
add
mov
mov
mov
pop
add
adc
lds
adc
dec
sub
mov
fistps
repz
lret
dec
aaa
lea
repz
sub
rcll
cwtl
shrl
in
adc
pop
xchg
pop
mov
dec
xchg
push
inc
pop
jg
aas
adc
and
pop
add
das
jecxz
ret
jae
add
mov
cwtl
jbe
aam
mov
add
xor
inc
push
dec
repnz
jp
out
orb
xor
mov
mov
mov
sbb
and
test
ja
vmwrite
dec
jl
and
fisubrs
icebp
push
std
cld
lret
lret
jmp
sub
lds
ficompl
out
orl
inc
jp
aam
pushf
cmpsb
ret
addr16
push
xchg
addb
rcr
pop
clc
adc
push
xchg
ljmp
dec
lods
ja
outsb
mov
int
into
xchg
pop
lret
stos
dec
psrad
add
sub
cltd
pop
cmp
shlb
cwtl
addr16
jbe
jbe
inc
ficompl
xchg
push
sbb
inc
ror
jns
clc
addr16
push
push
cmc
incb
inc
fnstcw
xor
jecxz
or
pop
aas
mov
icebp
arpl
pop
add
ss
dec
adc
sbb
xor
call
inc
dec
bound
jne
ret
in
mov
mov
sub
sub
cmpsb
inc
push
in
ret
adc
movsl
out
lds
imul
or
xchg
test
jp
bound
jne
test
lcall
pusha
lods
in
mov
xchg
fwait
lahf
shr
arpl
clc
xchg
jmp
dec
push
popf
mov
fdivs
stos
mov
adc
nop
jnp
sub
scas
sub
adc
idiv
ret
sbb
and
inc
jo
daa
jae
mov
inc
call
stc
shrl
mov
inc
in
aaa
lods
ficompl
add
inc
dec
insb
imul
cmp
popl
repz
mov
sbb
sub
arpl
adc
jge
repz
aam
add
xchg
fwait
inc
or
int
add
inc
cmp
out
mov
push
sti
push
jb
cmp
sub
sub
cwtl
xor
into
ret
cmpsb
shrb
dec
enter
daa
lds
dec
cmp
repz
xchg
mov
dec
mov
xchg
xor
je
xchg
jo
xchg
test
cld
sbb
inc
das
pop
adc
repnz
mov
pop
pop
ja
in
push
cld
and
sub
or
outsb
call
sbb
xchg
inc
pop
adc
jmp
mov
sub
lods
jne
lcall
int
adcl
and
lcall
pop
fmul
jge
sub
mov
inc
test
loopne
jg
mov
mov
pop
or
std
push
or
dec
mov
ss
jecxz
cmp
loop
cmp
test
mov
roll
das
sbb
pop
jnp
lret
aad
xor
test
outsl
inc
inc
cld
loop
dec
std
stc
adcl
pop
adc
pop
adc
xor
mov
lods
mov
cli
movsb
fisttps
sub
lea
popl
xchg
stos
cltd
push
gs
xchg
loopne
xchg
xchg
jbe
adc
cmp
add
in
xchg
add
cmpsl
cmp
adc
sbb
sub
push
mov
daa
test
js,pn
std
aad
decb
dec
mov
fchs
xchg
xor
repz
sub
imul
test
repz
adc
inc
mov
jmp
push
test
xchg
xor
inc
jbe
sahf
aas
mov
int3
jb
out
dec
push
js
je
ret
push
jecxz
jg
testb
std
fstpt
cwtl
xor
mov
xchg
filds
fldl
cmpsl
mov
cmp
mov
fdivs
adc
add
fnsave
mov
iret
orb
scas
fisubl
es
aaa
shrb
and
dec
ja
and
adc
icebp
inc
jno
cmc
pop
xchg
lret
pop
mov
cmpsl
and
shll
pop
or
outsb
in
cmp
scas
xor
imulb
jecxz
clc
jnp
clc
push
lret
xchg
lods
ljmp
shrl
sub
xor
arpl
inc
fisttps
inc
or
cltd
dec
cltd
testl
gs
fstl
sub
in
sbb
push
shll
pop
pop
mov
inc
mov
add
pop
lods
xor
js
jb
cmp
jle
add
jo
and
mov
mov
add
mov
ror
ja
mov
jg
int3
mov
or
scas
push
fwait
sar
dec
inc
mov
jne
add
out
mov
aas
bound
xchg
mov
xchg
arpl
stos
out
popa
lea
push
and
jp
inc
mov
mov
push
stos
insl
jle
outsb
sbb
insl
ljmp
hlt
aas
cmp
pop
call
or
mov
stos
push
popf
loop
dec
mov
push
dec
and
and
bnd
xlat
xchg
nop
shlb
movsb
iret
cmp
cwtl
ret
mov
inc
jnp
mov
xor
inc
jmp
dec
or
cmp
mov
fimull
xchg
lcall
imul
fimuls
imul
cmpl
cmpb
bnd
dec
inc
mov
hlt
xchg
push
fldenv
xlat
lahf
jbe
leave
xchg
jge
inc
or
push
inc
int3
or
inc
movsl
add
xchg
pop
int3
rcrb
sbbl
ds
fisubs
xor
mov
jno
and
je
cmp
adc
and
cmpsb
push
and
in
jmp
add
je
andb
loop
cmp
adc
mov
or
ds
dec
sbb
lahf
sbb
adcl
xor
push
push
sub
mov
pop
or
push
js
stc
fcoms
mov
adc
dec
ja
lods
add
sub
mov
fsubrs
lcall
jb
sbb
cmp
int
ljmp
xor
push
push
mov
inc
int
cltd
inc
sub
fucomi
pop
sub
sub
push
movsb
lods
fdivrl
xchg
sub
and
ljmp
mov
and
jp
dec
stc
and
adc
mov
sbb
and
pop
jl
pop
push
nop
sbb
and
mov
push
cmc
xchg
stos
xor
in
and
mov
stc
cmp
outsb
adc
cmp
lods
mov
jnp
out
icebp
test
xlat
pop
cmp
add
lret
aam
or
mov
into
add
loopne
mov
pop
test
adc
pusha
imul
cmp
add
jg
mov
mov
xlat
movsl
xchg
pushf
mov
xchg
movaps
xchg
pop
aad
fwait
daa
nop
leave
insl
icebp
dec
call
scas
adc
pop
ljmp
mov
mov
mov
cli
mov
sub
jns
inc
repnz
les
inc
inc
xchg
mov
aas
push
inc
lcall
shr
je
subb
xchg
daa
cwtl
in
movsl
adc
mov
out
sbbl
cmpsl
push
mov
or
fs
lock
cmp
das
mov
idivl
dec
enter
es
es
lea
jb
mov
mov
sbb
je
and
mov
leave
scas
cs
sar
mov
pop
sub
push
lods
xor
aam
adc
icebp
push
pop
push
adc
clc
mov
ss
aad
fsubr
and
and
push
out
xchg
ficoml
pusha
push
pop
push
test
add
test
arpl
loope
push
push
sub
inc
cltd
hlt
test
push
int3
xchg
sbb
sarl
jp
dec
std
out
pop
test
push
movb
sar
add
cmp
pop
jno
xor
fldenv
mov
ja
pop
mov
jnp
arpl
leave
dec
dec
clc
scas
xor
jecxz
or
dec
ss
lock
dec
sub
xor
movsb
data16
mov
out
xchg
shrb
adc
or
int3
mov
mov
mov
aad
mov
or
sub
fadds
icebp
sbb
mov
pop
cs
test
xor
in
sub
pusha
jecxz
pushf
fists
xchg
mov
jmp
jg
flds
test
mov
mov
inc
add
stos
sahf
sahf
aad
insb
dec
add
jnp
dec
sahf
scas
mov
loope
aaa
mov
fadd
push
rcrl
jae
stc
sub
loopne
or
mov
lods
ret
sub
cltd
dec
gs
mov
sub
movsl
lds
stos
sahf
mov
ret
loop
leave
mov
cmp
divb
mulb
jge
jl
sbb
sub
adc
jae
add
leave
int3
mov
push
push
shr
xor
sbb
and
push
gs
loop
stc
movsb
sbb
data16
sar
xor
outsl
iret
dec
daa
ret
das
adc
ficomps
jno
mov
jl
and
sbbl
jmp
stos
jecxz
lahf
cmp
ja
push
and
out
push
xchg
call
sbb
js
jnp
xor
fstl
cmc
pop
adc
dec
lret
aas
and
cmp
adc
adc
dec
sbb
and
add
xor
xor
test
adc
ja
subl
sub
pop
stos
pop
cs
repnz
out
sub
test
test
mov
jg
frstor
cmp
mov
cwtl
popa
mov
hlt
jmp
addr16
mov
cmp
pop
xchg
lret
rclb
scas
daa
pushf
mov
jg
cltd
fwait
test
xor
mov
outsl
add
loop
xchg
dec
stc
out
add
fs
adc
adc
int3
pop
popw
add
lods
lods
sbb
mov
out
pop
mov
xor
mov
cmp
in
add
mov
pop
cmpsb
gs
mov
mov
xchg
pop
mov
inc
push
adc
mov
cmp
popf
jae
cmp
mov
shrl
hlt
out
mov
std
insl
dec
sti
xor
pop
fwait
aad
pushf
mov
dec
inc
shll
repnz
dec
in
les
mov
outsl
sti
in
jno
jg
jne
adc
stos
jl
pop
pop
push
inc
adc
popl
jb
insb
pop
jle
xor
loope
lret
push
ret
push
addr16
hlt
into
mov
jecxz
ret
fdecstp
leave
clc
lods
std
sub
loope
hlt
js
mov
in
mov
xor
push
dec
mov
dec
je
mov
out
mov
push
xor
mov
std
mov
cmp
push
pop
rorl
mov
cwtl
adc
insl
fcompl
insl
movsl
lahf
cmpsl
ret
mov
out
shlb
and
aas
mov
fcmovb
cmpsb
mov
dec
inc
imul
sub
ret
adc
mov
fldl
lret
retw
push
push
popa
iret
dec
movsb
lods
mov
outsb
out
test
xchg
in
insb
out
push
cmp
ud0
add
inc
mov
test
fwait
mov
dec
hlt
xchg
test
mov
test
sbb
into
rcl
cltd
inc
pop
stc
add
in
pop
popf
xlat
add
xchg
xchg
xchg
mov
jne
loop
popa
or
aas
sbb
rcrl
mov
mov
lret
ss
dec
ja
pop
lods
dec
jmp
gs
cli
xor
or
mov
fwait
pop
mov
dec
or
mov
cmp
cvtpi2ps
jb
mulb
arpl
jns
and
out
xchg
pop
hlt
push
sub
dec
out
addr16
adc
mov
shll
testb
jle
and
jae
jle
out
xor
dec
xchg
adc
pop
jmp
dec
in
rolb
imul
mov
test
adc
add
jecxz
lea
scas
out
and
ret
jb
adc
iret
notb
ret
adc
and
inc
xchg
ss
repz
inc
icebp
repnz
xor
rolb
sub
mov
sbb
or
ljmp
lds
add
mov
jmp
pop
leave
das
stos
inc
hlt
sub
arpl
or
xchg
ret
xchg
xor
aaa
aam
fisttps
or
add
cmc
pop
or
push
movsb
cmpsb
pop
xor
jne
subb
mov
cmp
pushf
aaa
push
cmc
sbb
cmpsb
pop
outsl
cltd
in
mov
pusha
xor
ret
cmp
push
jle
jl
fildl
lock
push
ds
lock
pop
mov
and
xor
jmp
lret
pop
int
inc
fcompl
lcall
push
js
sub
pop
xor
fsubrs
push
dec
loope
sahf
dec
sub
inc
fistpll
cltd
jp
outsb
sub
arpl
sub
loop
and
mov
pop
dec
imul
rdpmc
pop
mov
or
outsl
jl
repnz
xchg
pop
sub
fwait
lcall
popf
fmul
pop
xchg
sub
cmpsl
sahf
fsubs
test
ficomps
and
jg,pn
stc
mov
mov
cltd
mov
inc
xchg
jbe
sub
pop
ret
inc
roll
adc
jecxz
mov
inc
lods
roll
mov
popf
inc
into
jl
xchg
cmc
and
sbb
sub
lock
loop
mov
fs
adc
lods
xchg
push
pop
mov
rorl
out
shll
cli
cmp
jle
cmp
fildl
sub
push
adc
gs
and
pop
ret
adc
loopne
imul
add
sbb
outsb
sbb
adc
mov
mov
push
and
aad
add
jg
or
in
inc
add
test
les
loope
jb
sbb
lock
sub
arpl
hlt
mov
pushf
cltd
mov
jmp
clc
mov
ficoms
inc
xor
jb
aam
dec
imul
shl
lret
dec
testb
std
sarb
rcrl
mov
insl
mov
test
or
imul
xchg
jg
mov
and
lock
das
jp
test
mov
pusha
aaa
not
pushf
mov
sbb
subb
sbb
cmpsl
sar
mov
cmpsl
jecxz
jbe
adc
mov
loope
lods
mov
push
lock
fisubrs
and
aam
fistpll
push
popf
out
sub
insl
stos
inc
clc
add
ljmp
int3
lods
and
sub
jo
mov
xchg
xor
push
push
lods
lahf
divps
add
or
cltd
repz
mov
xchg
xchg
push
subb
jl
sbb
mov
pop
movsb
loop
stos
std
mov
inc
add
scas
mov
test
xor
dec
inc
xor
dec
pop
mov
std
mov
mov
icebp
stos
xorb
dec
dec
fimuls
inc
xchg
stos
mov
divl
dec
out
push
jne
push
scas
mov
test
add
out
jns
pop
arpl
loop
insb
xchg
push
dec
jge
fucomi
leave
sub
inc
cmpsb
pushf
and
inc
jp
fucomi
mov
mov
mov
arpl
jle
out
dec
in
fldcw
pusha
sbb
loop
out
jmp
xchg
adc
cmpsb
push
les
mov
ret
or
test
inc
and
and
sarb
js
scas
push
mov
push
gs
mov
in
sbb
add
mov
pop
mov
ja
jae
push
xor
js
or
scas
sub
jmp
imull
xchg
lahf
cmp
sbb
lcall
jb
repz
inc
add
imul
pushf
hlt
jbe
sti
arpl
lret
jbe
lods
mov
sbb
pop
addr16
xchg
push
dec
or
call
push
int3
xchg
shl
cmp
mov
xchg
xor
shl
mov
and
push
push
mov
rsm
cmpsb
faddl
in
mov
test
daa
rcll
inc
jbe
jno
pusha
push
jl
push
insb
ds
divb
and
push
lahf
jns
add
js
test
sub
cmp
pop
dec
pop
andl
pop
push
jb
loope
and
sub
pop
sbb
dec
movsl
outsb
mov
adc
add
jg
xor
sbb
or
xor
stos
push
xchg
fs
inc
xor
pop
test
out
jno
push
loopne
fdivrl
xchg
cmc
pop
add
lods
int3
testl
fimuls
xchg
push
fwait
ss
hlt
jecxz
out
or
fmul
push
sbb
call
cltd
rcr
xchg
mov
jns
data16
out
pop
xor
dec
out
loop
test
stc
pop
jp
fs
loopne
js
inc
sbb
lods
jp
or
out
pop
clc
cli
jo
adc
cmp
pushf
pop
or
out
and
jecxz
loopne
in
pop
loope
lret
mov
imul
add
add
xorl
inc
imul
ds
mov
in
shll
ss
jo
mov
out
pop
xor
add
pop
xchg
fnstcw
aad
sub
jne
lds
imul
test
mov
xor
adc
setl
jmp
mov
ja
out
nopl
adc
aas
sub
mov
je
lods
mov
call
and
stos
cwtl
sbb
loop
mov
push
pop
andl
rcll
popf
mov
push
cli
lock
lds
pop
jg
mov
stos
xchg
shr
mov
ja
xchg
es
arpl
stc
cmpsl
rclb
mov
popf
mov
mov
push
insb
sub
and
and
sub
jg
shlb
adc
aam
inc
imul
fs
fstl
add
jp
in
popa
std
push
or
les
mov
int
push
icebp
imull
mov
add
test
inc
xchg
pop
daa
test
pop
faddl
int3
cmpb
dec
xchg
cmpsl
stos
in
outsb
push
push
dec
es
add
lds
xor
clc
test
sbb
mov
stc
sub
inc
cmp
pop
lods
sbb
adc
shll
or
inc
sbb
fwait
jge
xlat
dec
rcll
xor
xor
bound
scas
mov
in
scas
jb
lahf
hlt
and
pop
push
push
sub
inc
cli
fisubl
xor
jp
lret
repz
mov
sarb
lret
stos
adc
mov
pusha
mov
stos
fbstp
outsb
xchg
mov
sbb
xchg
loopne
or
icebp
pop
push
popf
jle
test
add
stos
testl
insb
mov
jnp
xor
sbb
push
xchg
adc
in
mov
ret
les
cmpsb
cmp
ja
xchg
loop
inc
divl
or
sub
ficompl
popf
rclb
add
imul
jmp
adc
stc
rol
out
test
sub
mov
ss
shr
arpl
sub
idivl
js
sbb
test
push
paddusb
out
xor
dec
dec
int3
jle
out
imul
xor
sub
mov
or
lret
cmp
popa
pop
movsb
xor
push
xchg
dec
sub
xchg
enter
daa
shrb
cmp
imul
enter
add
ds
int
imul
and
mov
push
lock
test
repz
sbb
rcll
js
stos
mov
mov
subb
lods
loope
leave
and
ds
cmp
xchg
stos
outsb
out
out
adc
fisubs
in
out
pop
addb
sbb
and
jnp
movsl
mov
jo
lods
popa
sub
xchg
push
pop
sub
push
fsubl
test
sahf
push
loope
test
inc
adcb
jg
cmp
mov
addr16
mov
fisubs
and
sbb
mov
mull
ret
dec
clc
cld
shll
mov
test
into
inc
pop
add
scas
jno
xor
je
outsl
mov
add
stc
adc
dec
xor
adc
bound
data16
jne
mov
rcll
mov
xchg
bound
add
or
call
loopne
add
add
mov
movsb
mov
imul
and
ds
lcall
mov
mov
std
cltd
mov
sbbl
iret
clc
xchg
nop
xor
cmp
inc
sub
fs
scas
pop
les
xchg
js
pop
lea
sarl
daa
rolb
adc
orb
cmp
pop
addr16
inc
jbe
int3
inc
std
add
mov
dec
pop
lahf
out
je
mov
pop
notb
mov
mov
fstl
cmp
andl
pop
lds
mov
icebp
xchg
lock
mov
mov
jbe
sarl
add
insl
jnp
dec
dec
pop
jb
cmpsl
mov
movsb
repnz
je
lret
cld
int3
pop
jle
test
sbb
out
cmpl
test
pop
sar
aas
xor
adc
aam
clc
imul
and
fnstsw
cmpsl
adc
rcrl
ljmp
lret
lods
stc
loopne
mov
pop
fs
push
int3
push
fmuls
sbb
adc
push
das
push
popa
add
sub
cltd
xor
sahf
lahf
test
das
xchg
xchg
pop
sbb
pop
rcl
ja
pop
cli
pop
fs
fninit
and
lock
lea
in
loopne
xchg
out
and
fldt
pop
xor
cmp
fwait
pop
mov
call
and
ja
and
dec
les
bound
idivl
dec
mov
ss
pop
mov
sbb
pavgb
jns
ret
xchg
in
or
mov
loope
cld
sub
cmp
mov
jp
insl
lahf
mov
ficoms
mov
xor
pop
in
pop
mov
dec
mov
loopne
lea
sub
shrl
push
mov
xor
mov
inc
sbb
lret
add
push
jnp
mov
scas
sbb
add
mov
rolb
ret
sbb
loopne
inc
mov
jl
pusha
mov
into
or
movsb
arpl
out
jns
lret
negb
sbb
cmp
fidivrs
push
xchg
rorb
sahf
mov
xadd
leave
xchg
icebp
mov
or
in
arpl
adc
jge
ds
sbb
sbb
mov
loope
cltd
add
dec
pop
int3
imul
xchg
xor
xchg
scas
daa
adc
and
push
push
push
loop
cmpsb
cmpsb
loop
pushf
in
outsb
push
mov
daa
mov
int
pusha
sahf
jmp
dec
cmp
fdivp
movsl
jb
loope
push
push
lahf
mov
push
push
bound
push
mov
sub
test
pop
iret
inc
sbb
adc
movsb
inc
push
gs
pop
xchg
mov
das
clc
idivl
cmpsb
inc
dec
outsb
push
pop
or
mov
sahf
testb
pop
add
mov
int
pusha
sub
adc
cmpsl
imulb
push
add
fmul
test
push
sahf
rorl
xorb
jg
arpl
mov
push
or
mov
enter
mov
cmp
inc
pop
mov
loopne
sbb
cmp
mov
inc
pop
inc
sbb
adc
into
and
push
xor
cmp
push
nop
stc
lret
adcl
push
jb
and
cmpsl
mov
jmp
inc
jns
sarb
lea
test
jge
dec
gs
test
pop
pop
stos
sub
ja
fildll
je
adc
cltd
inc
add
repz
xchg
mov
cwtl
cmp
aaa
cld
xlat
loopne
xchg
sub
add
test
adc
aad
mov
nop
adc
dec
ret
push
inc
or
les
cld
sub
jnp
inc
lea
pop
aad
cmpsb
sahf
mov
and
popa
mov
jmp
test
pop
or
mov
aas
imul
jb
xchg
pop
dec
shrb
je
sbb
aad
je
lds
sbb
mov
pop
mov
adc
dec
pop
lret
das
or
mov
push
sbb
xor
lret
mov
sbb
jnp
add
rorl
xor
dec
pop
mov
mov
dec
add
cld
mull
push
and
arpl
sbb
sub
xor
aam
add
ret
push
fnstcw
out
push
fucom
fisubrs
adc
sub
out
lods
test
mov
adc
xchg
or
mov
jnp
push
add
out
cltd
cwtl
xlat
test
aad
xchg
pop
test
cwtl
inc
xchg
jle
sbb
nop
lahf
shrl
pop
out
movsl
jo
stos
lret
push
xchg
jg
add
decl
pushl
cltd
dec
xor
nop
or
inc
sub
mov
sub
enter
lods
ja
shl
mov
jmp
push
jecxz
or
mov
fistl
dec
xchg
mov
xor
out
jno
bound
in
mov
xchg
cmp
mov
sub
cmp
addr16
mov
jp
les
mov
fimuls
jle
add
xchg
dec
fs
ljmp
xchg
pusha
lahf
inc
jmp
jbe
xor
ja
pusha
popf
int3
jg
mov
subb
ffree
lods
and
sub
insb
pop
mov
jnp
std
xor
cmp
adc
cli
iret
jb
test
enter
mov
sbb
rclb
std
ret
shl
push
push
mov
xchg
movsb
push
loop
lock
loopne
cmpsb
shll
lds
aam
and
jl
repnz
stc
push
leave
or
hlt
push
test
jle
mull
sbb
pop
sub
rorb
or
add
int3
push
pop
mov
pop
xor
loope
jno
push
cmpsl
test
xor
cmp
sub
mov
cmpsb
gs
in
push
and
int3
daa
mov
out
jno
rep
jl
add
dec
lods
ret
clc
rcrb
xchg
fisubs
mov
sbb
xor
ret
mov
adc
inc
arpl
pop
imulb
popa
pop
xor
adc
ss
lcall
outsb
mov
test
xchg
or
subb
xor
loope
and
xor
push
sahf
lds
sub
movsl
pop
es
ret
push
pop
pusha
lock
inc
sub
bound
test
lret
orb
mov
mov
sub
inc
cmp
incl
negl
sub
mov
add
sbb
shll
cmp
lahf
xor
cld
loop,pt
push
dec
stc
cmp
fs
cltd
xchg
adc
lcall
and
dec
out
rcr
or
xchg
xor
xlat
xchg
or
sub
mov
insb
dec
loopne
sbb
xchg
adc
add
and
sub
fsubl
add
xchg
pop
pop
bound
decl
ljmp
xchg
xor
mov
adc
mov
cs
jg
nop
jmp
mov
lahf
popa
inc
push
push
sub
popa
imul
repz
cmp
lea
call
and
dec
rcll
in
pushf
inc
sahf
xchg
jmp
nop
xchg
pop
lods
pushf
addl
fs
xor
fwait
aas
or
inc
dec
inc
pop
add
jecxz
adc
negb
leave
mov
insb
push
pop
cwtl
dec
xor
mov
pop
decb
daa
cmp
dec
dec
out
fistpl
mov
mov
push
mov
das
divb
add
rolb
int3
rcr
test
es
sbb
pop
dec
push
xor
cmpsl
mov
lods
inc
icebp
and
cld
and
jb
arpl
jno
std
popf
xchg
mov
out
sub
sahf
ljmp
sub
mov
pop
ret
inc
push
test
mov
xchg
xchg
dec
inc
cmp
rcll
popa
inc
push
mov
in
jmp
dec
dec
adc
adcb
fisubrl
cltd
iret
push
adc
and
dec
scas
jns
test
xchg
cmpsb
xchg
fstps
in
ret
roll
popf
aaa
stos
mov
sbb
push
ret
scas
add
stos
push
call
inc
std
xor
fdivl
xor
mov
or
dec
mov
fucomp
loope
jmp
ljmp
call
ficompl
jp
cwtl
jne
test
push
int
mov
shlb
in
sub
mov
aam
mov
outsb
jmp
sbb
rcrb
mov
pop
sub
inc
in
in
pusha
test
mov
int
xor
sbb
xchg
inc
addr16
andl
or
sbb
bound
inc
shrb
jbe
insb
lret
jnp
push
mov
fidivrs
push
sbbl
dec
ret
cmpsl
pop
jge
push
inc
enter
das
out
inc
add
ds
lcall
fidivl
out
sti
mov
sbb
sub
imul
cmp
cmp
clc
mov
mov
sbb
hlt
mov
fsts
mov
sbb
testb
inc
xchg
add
pop
int3
aas
in
pop
mulb
push
adc
jmp
scas
in
jns
lds
sub
shld
lret
push
adcb
in
cmp
sub
daa
mov
pop
popa
jno
insb
push
jl
loopne
dec
sbb
sbb
aad
dec
and
in
or
jo
push
xor
inc
cmpsl
ret
mov
pop
sbb
inc
xchg
pop
outsl
or
or
xchg
inc
sub
out
cmp
lcall
cmp
fwait
or
jg
rcrl
imul
xor
and
push
mov
push
stos
sub
mov
lcall
pop
fsubl
inc
setle
inc
add
cmpsl
add
jg
mov
push
mov
xchg
push
mov
aas
ss
inc
cltd
cmp
mov
addr16
and
sarl
int3
mov
addb
jmp
hlt
cmc
add
repz
loop
inc
mov
cmp
sti
adc
or
mov
sbb
pushf
pop
push
xor
lahf
lods
cmp
call
in
inc
sbbb
lret
pop
xchg
pop
push
hlt
adc
cmpb
sbb
outsl
cmp
jp
xlat
pop
pop
fsubrl
or
mov
jg
aas
sti
dec
xchg
xchg
cs
jmp
or
adc
js
cwtl
cmp
int
add
gs
fmull
push
sbb
outsb
pop
mov
adc
jmp
xor
outsb
leave
inc
or
sub
aas
test
jo
dec
mov
std
jecxz
lock
negb
adc
cwtl
or
mov
in
mov
ficompl
dec
xor
nop
dec
mov
out
aad
daa
lock
lret
mov
xor
xchg
and
mov
daa
lods
aam
stos
jnp
insl
xor
dec
dec
jae
cmpsl
mov
ds
icebp
stc
cmc
sar
dec
pop
clc
lret
shlb
mov
add
xor
add
sub
mov
cmp
adc
insb
std
fnsave
jne
clc
sub
xchg
mov
mov
inc
imul
mov
dec
mov
xchg
ds
push
pop
jmp
data16
mov
mov
mov
xorb
sbb
pusha
test
daa
gs
imul
rcr
cltd
mov
stos
test
push
push
fldcw
icebp
add
clc
and
aam
fisttpll
mov
xchg
int3
mov
dec
xor
pop
cwtl
mov
ja
mov
dec
popf
sahf
lea
adc
or
lods
inc
fwait
cmp
push
dec
pop
mov
jne
xchg
mov
aam
out
lods
mov
jle
adc
and
out
lea
sub
adc
sbb
jno
push
xor
clc
add
mov
daa
cmp
pusha
and
sbb
xchg
push
loope
jmp
or
int
xor
jmp
std
push
pop
popf
sbb
mov
cltd
push
stos
ret
adc
insb
xor
aam
scas
inc
shlb
push
enter
xor
loop
xor
ret
inc
pop
mov
adc
shrl
mov
or
adc
add
cmp
sbb
fucomip
imul
lds
add
js
add
or
leavew
stc
sti
fdivp
in
mov
mov
jecxz
jge
ljmp
dec
sbb
mov
ss
sub
inc
pop
and
or
xchg
es
scas
fcomps
pop
test
xchg
fisubl
imul
in
and
enter
daa
mov
or
jno
or
jecxz
jmp
mov
lahf
movsl
xchg
xor
out
int3
lahf
adc
adcb
pop
test
pop
push
xchg
inc
ss
int
sbb
sub
js
fwait
jecxz
scas
add
push
pop
jmp
fs
sub
sbb
cmp
jne
adc
dec
inc
rorb
xchg
push
nopl
out
xor
aam
push
movsb
lahf
push
int
push
cmp
aam
push
pop
and
es
push
insl
fisubrl
mov
dec
leave
test
outsb
add
dec
jg
repnz
mov
call
dec
mov
add
and
jmp
stos
cmp
jne
xor
sbb
fdivr
ror
push
mov
insb
aas
into
into
es
lret
xor
mov
loop
jo
stc
lock
adc
cmp
lods
subb
mov
stc
cli
outsl
jb
xor
into
xchg
fsubrl
mov
gs
mov
jl
xchg
adc
shll
push
aaa
inc
adc
repnz
xor
sbb
jne
icebp
xlat
popf
negl
mov
ljmp
cs
push
aad
xchg
lret
mov
dec
loopne
inc
ja
test
iret
mov
fcomps
repz
pop
movb
call
and
fcomps
cmp
push
xchg
pushf
fwait
or
pop
repz
inc
imul
pop
dec
xor
xor
jecxz
adc
negb
cmp
mov
lock
adcl
pop
fstpt
and
inc
outsl
ljmp
mov
inc
mov
ds
shll
es
cmc
mov
cmpsl
mov
test
icebp
shlb
lret
inc
mov
jecxz
or
mov
and
fcmovnbe
inc
aas
sub
mov
aam
sbb
ret
std
push
rcll
scas
jb
push
push
cmpsb
clc
arpl
sbb
mov
lods
movsl
cmpsw
mov
stos
fsts
push
cmp
addl
jmp
cltd
cmp
ret
sub
movsl
dec
dec
jl
mov
arpl
popa
shll
in
pusha
pop
cmpsb
jb
stos
xchg
pop
add
jl
jno
adc
in
push
cmpsb
mov
xor
xchg
cltd
or
std
push
xor
push
and
loop
mov
push
pop
es
mov
dec
nop
jge
sbb
or
out
fwait
push
lcall
jnp
loopne
mov
or
out
dec
jns
ds
and
xchg
xchg
sub
imul
jno
mov
sub
addr16
jg
mov
imul
std
mov
jbe
lods
inc
gs
mov
xlat
push
xchg
fxch
daa
jmp
xlat
dec
cmp
push
shlb
popf
inc
loop
mov
cmp
leave
push
and
inc
insb
mov
sub
sbb
adc
sub
ret
push
pop
jmp
inc
fsubp
pop
jae
mov
inc
push
and
or
nop
adc
jmp
xchg
test
push
push
fiadds
rol
jbe
mov
pop
fstpl
leave
jo
scas
hlt
cmp
arpl
mov
jge
inc
out
sbb
xchg
mov
or
sub
and
adc
adc
fnstenv
xor
repnz
scas
mov
cmp
cmp
push
push
push
imul
in
or
lock
daa
mov
stos
out
jno
leave
pop
jl
adc
push
ds
pop
loope
mov
outsb
and
sbb
iret
test
ljmp
nop
jp
pop
imul
add
imull
mov
adc
and
xchg
outsb
fnstsw
adc
and
adc
movsl
popf
or
add
jne
xor
cmp
scas
insl
xchg
sub
inc
pop
mov
insb
cs
pop
and
fdivrl
inc
sub
dec
movsb
test
xchg
loop
fstl
pop
jg
sub
mov
lret
out
dec
xor
jl
xor
sub
neg
mov
add
xor
mov
rep
sbb
or
xor
iret
std
loop
into
push
cmpsl
inc
das
fs
data16
mov
rorl
lcall
xor
xchg
or
test
loopne
pop
mov
jae
adc
ficompl
imul
lret
mov
in
cmp
adc
repz
push
xor
sti
lods
mov
ds
mov
nop
jl
ss
aas
push
inc
inc
mov
flds
iret
cmp
jecxz
xor
movb
daa
call
mov
mov
xchg
pushf
inc
std
sub
ljmp
inc
sbb
call
aas
out
push
jb
sbb
lods
lret
fsubp
inc
jecxz
je
mul
and
popa
add
mov
jle
mov
dec
rorb
cmp
mov
and
lahf
cmpsl
das
xchg
or
mov
cmc
dec
repnz
xchg
xor
es
add
arpl
dec
inc
lods
cmpsl
mov
jg
icebp
cmpsl
ja
cld
mov
xchg
int
repnz
pop
and
iret
lahf
nop
pop
inc
lcall
jecxz
je
iret
jbe
ret
mov
jne
repnz
fnstsw
pop
clc
sahf
clc
jnp
or
mov
sub
lahf
popa
xchg
mov
adc
mov
push
sbb
push
adc
maskmovq
addl
sbb
cltd
je
cs
sti
pushl
test
les
out
mov
mov
mov
sbb
sbb
mov
push
sbb
stos
xchg
sub
imul
scas
addr16
xor
mov
xor
int3
mov
rolb
ret
mov
push
repnz
ja
addr16
adcl
inc
mov
mov
cmc
inc
fwait
xchg
cs
dec
and
jne
jno
mov
or
out
push
ret
jo
jns
mull
scas
rcl
xchg
jns
mov
sub
and
in
addr16
jnp
mov
shll
jae
mov
jle
push
and
mov
sub
mov
fildll
push
push
xchg
lods
bnd
add
pop
adcl
push
addl
mov
jl
jns
test
sub
insb
or
jnp
mov
xchg
insl
pop
adc
jo
iret
out
cmc
popf
ret
or
lcall
imul
inc
or
mov
pop
scas
dec
push
cmp
dec
inc
stos
xchg
add
sbb
int3
imul
fsubp
and
pop
rclb
push
scas
out
leave
out
sbb
sbbl
arpl
pop
jbe
repnz
jge
jl
sbb
and
int3
aaa
dec
or
mov
int3
add
mov
addl
int
xor
dec
add
shlb
in
push
pmaxsw
cmp
in
icebp
push
aas
enter
daa
mov
decl
cmp
dec
push
shll
movsl
xchg
mov
and
pop
or
add
push
mov
incl
mov
adc
xor
js
or
pop
sub
ret
adc
loope
cmpsl
pusha
sub
add
adc
outsb
inc
hlt
adc
add
popf
es
fadds
adc
bound
push
xchg
xor
xchg
stos
dec
dec
int
imul
lret
pop
and
adc
mov
test
es
dec
sahf
lock
test
scas
cmp
add
gs
and
add
movsb
lea
push
cld
ss
dec
cmp
jmp
cld
negl
jmp
fucomi
mov
scas
es
into
xchg
loop
cmc
pop
stos
or
add
movq
jae
loop
pop
push
fs
inc
adc
jge
lods
lret
xor
mov
icebp
in
cli
aad
xor
sub
fs
or
shll
lock
dec
jnp
mov
pop
push
imul
sar
add
fcomps
cmp
mov
xlat
sbb
repnz
rolb
sti
pop
jo
cs
cmp
nop
push
sbb
dec
sahf
cwtl
mov
fnstcw
je
repz
test
mov
lea
out
call
and
pop
movsb
cmc
sub
lods
push
iret
pushf
icebp
add
fwait
add
hlt
mov
aas
xchg
jb
ds
je
out
jecxz
sbb
mulb
scas
std
or
shlb
cltd
iret
mov
adcl
fistpl
xchg
iret
mov
rolb
jb
mulb
lods
jge
and
adc
rcll
push
xor
insl
in
repnz
inc
test
cmpsl
mov
sub
push
cld
into
sub
lret
pop
inc
xor
sbb
fistpl
bound
shr
out
imulb
fidivrl
add
lcall
push
mov
mov
movsl
add
clc
fld
cs
dec
xor
jl
sahf
aam
lods
jnp
aas
mov
jno
call
push
out
xor
stos
or
ret
cltd
stos
xlat
sub
std
cmp
stos
sbb
dec
dec
fists
push
mov
popa
sub
shl
call
pop
cld
xchg
mov
ret
add
xchg
jbe
dec
and
sub
and
ret
cmp
mov
lahf
ret
int
pop
leave
jo
ja
lcall
dec
xor
push
xlat
ds
dec
into
dec
push
dec
pushf
jne
jl
mov
inc
dec
out
dec
xchg
jns
push
dec
in
sub
xchg
enter
repz
aas
xchg
imul
sbb
out
add
mov
shll
push
mov
sub
jle
xchg
mov
and
dec
iret
rcll
mull
roll
inc
dec
inc
popf
popl
mov
mov
push
fbld
test
stos
insb
jbe
sub
scas
push
sbb
and
adc
int3
xor
ret
fwait
pop
pop
stos
xchg
sbb
dec
popl
stc
push
or
xchg
iret
inc
loope
gs
aam
xchg
push
insb
cltd
sbb
clc
jecxz
push
pop
sub
mov
xchg
shrb
repnz
hlt
into
dec
sti
arpl
imul
sbb
mov
loopne
add
pop
int3
jmp
gs
mov
cmpsb
push
lahf
sbb
xor
test
into
scas
popa
rcrl
adc
popf
cmp
xchg
mov
push
mov
aaa
xchg
in
fcoms
push
daa
mov
pop
stc
jno
mov
jl
cltd
jmp
cmpsl
ja
movsl
pushf
mov
and
xchg
fcoms
out
test
sbbb
push
into
bound
push
sarb
and
imul
push
sbb
mov
mov
cmp
mov
adc
pop
or
adc
inc
leave
jae
push
lock
mov
int
dec
jae
inc
adc
pop
mov
xor
gs
movsl
scas
sub
mov
test
push
inc
adcb
cmc
jg
movsl
in
mov
sub
mov
mov
popf
and
outsb
js
mov
xor
fsubs
es
lret
mov
xchg
pop
mov
mov
sbb
test
outsl
cmc
pop
out
xor
outsl
mov
and
aam
add
lock
xor
lods
mov
bound
cwtl
inc
xor
or
mov
cmp
jne
or
cmpsl
pop
decb
gs
inc
out
pop
fldcw
adc
inc
imul
aas
out
daa
int
xchg
daa
fld
sbb
es
push
xlat
pop
ficomps
mov
sub
pop
cs
repnz
and
push
dec
std
loopne
inc
mov
push
fnstenv
stc
jmp
mov
push
imul
xchg
jmp
mov
loope
adc
mov
jmp
inc
adc
cmp
inc
daa
pop
jb
mov
out
and
xchg
repz
lcall
jecxz
or
mulb
push
std
scas
aas
add
push
or
mov
dec
sbbl
jecxz
fisttpl
jle
icebp
adc
scas
das
push
push
insl
mov
arpl
and
jmp
adc
mov
dec
insl
int3
in
testl
pop
sub
push
mov
stc
mov
idivb
and
push
mov
sbbl
sub
repz
ret
stos
cwtl
and
push
add
adc
in
mov
mov
adc
shll
or
out
inc
mov
aam
push
push
leave
push
adc
add
sbb
loop
sub
mov
sahf
into
xchg
mov
test
xor
pop
sbb
sarl
mov
inc
stos
fs
push
gs
test
mov
in
out
xor
and
or
push
insb
mov
pop
stos
test
jns
sub
cmpl
jae
imul
or
lea
fwait
cmc
xor
dec
jmp
jmp
mov
xchg
fucomi
sub
repnz
push
cmpsl
in
rcl
xchg
pop
iret
and
jbe
mov
or
push
sbb
and
mov
dec
adc
jle
in
in
mov
and
push
aam
jmp
cmp
push
subl
push
or
fwait
mov
cli
and
fwait
add
insb
loope
in
arpl
test
aas
rclb
cmp
iret
lods
xchg
ret
xor
pusha
aaa
inc
incl
inc
setae
or
add
pop
fidivl
mov
sbb
std
ljmp
loope
fisubrs
aad
rol
or
push
xchg
mov
aad
xchg
sbb
frstor
idivl
jge
popf
popa
sbb
adc
dec
gs
or
insb
bswap
jae
pop
loope
ljmp
es
jo
clc
and
and
fbld
lods
cmpsb
ja
inc
in
mov
inc
daa
mov
les
inc
in
jl
cltd
pop
dec
inc
gs
sbb
lahf
nop
ficoml
test
dec
leave
lea
mov
fldenv
imul
adc
push
rclb
sub
cmp
cmp
push
outsb
push
inc
push
adc
mov
stos
in
push
sbb
jl
jle
inc
add
pop
xor
sbb
ret
out
int
adc
sub
mov
pop
lcall
or
jl
sbb
pop
sbb
sahf
notb
subb
in
cmp
and
mov
insl
mov
push
dec
ss
sbb
cmp
popa
les
sbb
outsl
lret
outsl
shrl
mov
icebp
jg
pop
outsb
jp
out
sbb
mov
jp
call
push
mov
mov
and
xchg
hlt
lods
cltd
xchg
rorl
xchg
and
cli
cmp
lods
xor
inc
daa
cmp
stos
jp
xorb
jb
movsb
lds
mov
pop
clc
jae
adc
jb
sahf
add
mov
jno
ljmp
cmp
adc
sub
daa
mov
xchg
and
sti
mov
stc
sbb
pop
jae
nop
or
sub
stos
clc
pop
les
pop
repz
mov
nop
stos
mov
call
pop
mov
pop
or
lret
pushf
inc
shlb
pop
jg
test
daa
jl
aad
mov
jb
and
sti
mov
jecxz
cmp
imulb
mov
cwtl
mov
mov
mov
scas
xorl
rcll
cld
pop
mov
iret
sub
mov
insb
das
xor
mov
sbb
add
adc
cmp
pop
insl
mov
orl
cmpsl
mov
mov
icebp
sub
and
and
xchg
lret
std
sti
adc
daa
push
ja
mov
fucomp
rclb
push
popf
aam
jg
ret
cmp
push
cmp
sar
dec
sbb
inc
jb
test
popa
int3
bound
lods
push
sub
mov
aaa
bound
movsb
sbb
jbe
call
xchg
stos
test
fwait
pusha
mov
addl
mov
pop
dec
sbb
test
stos
test
sbb
in
rorl
or
std
push
or
dec
add
scas
xor
jbe
pxor
mov
fwait
sub
pop
aas
sub
jns
adc
xchg
ja
cmp
pop
mov
int3
leave
cmp
mov
repnz
bound
pop
jns
stc
call
xchg
data16
stc
cmpb
or
repnz
addr16
and
push
xlat
pop
mov
sub
lahf
mov
xor
in
pusha
daa
inc
add
xchg
pop
xchg
and
mov
xchg
add
xchg
cmp
int
int3
xor
mov
cmp
push
stos
add
aad
dec
adc
jnp
push
push
scas
xor
cmc
push
sub
push
iret
or
adc
dec
cmp
pop
mov
mov
fdiv
xor
adc
xchg
push
fistpll
push
xchg
add
xlat
shrb
addr16
js
ret
shl
jo
xchg
push
or
cmpsl
cmp
leave
dec
frstor
mov
shlb
insl
cmc
jge
test
aaa
or
or
cmpsb
add
push
int3
shll
adc
insb
push
gs
test
pop
pop
mov
pop
sbb
and
test
cmp
les
dec
test
cmpsb
lret
sbb
daa
mov
into
cmp
std
jno
xor
fimuls
or
in
lahf
mov
and
ss
lahf
scas
and
push
cli
dec
pop
test
push
dec
flds
out
pushf
icebp
pushf
pop
pop
jno
js
or
pop
jmp
push
jae
xlat
cld
inc
sub
xchg
dec
cmp
insb
mov
pop
fcoml
xchg
movsb
inc
popl
lods
xor
push
add
cmc
or
in
dec
inc
push
mov
sbb
dec
mov
into
pop
lahf
repnz
mov
out
loope
dec
cmpsl
sahf
fld
mov
orb
jg
xor
sbb
mov
lret
mov
push
imul
cmp
xor
fcomps
push
lret
jns
ret
mov
gs
cmp
mov
outsl
ja
mov
stc
orl
push
push
sbb
mov
cmp
and
sbbb
out
jg
cli
outsb
jl
xor
sahf
mov
or
add
xchg
stc
pushf
gs
lods
adc
pop
pop
jl
adc
push
sbb
dec
in
adc
pop
xchg
add
and
jno
mov
pushf
and
fdivs
mov
in
add
sti
imul
pop
aad
and
nop
call
jge
inc
sti
cmp
loop
nop
les
adc
aas
dec
xchg
xchg
jae
lea
mov
sahf
mov
pop
adc
adc
push
test
pop
inc
inc
xor
adc
mov
dec
mov
and
lods
dec
imul
daa
idiv
std
or
cwtl
imul
mov
loope
mov
add
mov
icebp
sub
add
or
cmp
lfs
add
adc
nop
mov
es
pop
add
xor
inc
cmpsl
mov
pop
mov
add
sub
dec
addr16
insb
cld
outsb
mov
cs
insb
mov
mov
test
sub
sub
push
inc
sbb
cwtl
fdivr
mov
cmp
popa
jecxz
lods
mov
pop
mov
lcall
push
jg
scas
adc
add
call
je
shrl
mov
test
mov
xchg
mov
sbb
in
shl
test
subb
add
add
xlat
jp
ljmp
jbe
xor
mov
xor
sub
mov
ficomps
call
pop
cli
fs
ja
dec
cmp
dec
push
inc
push
add
adc
fwait
push
dec
popa
dec
scas
ja
jne
hlt
cmpsl
mov
push
mov
jns
inc
and
mov
movsl
out
jbe
sub
adc
aas
addr16
inc
jae
mov
xchg
mov
cltd
sarl
xor
jle
jp
in
add
pusha
ret
fbld
test
jmp
into
inc
inc
orl
popf
add
jp
mov
jg
stos
jne
mov
leave
insb
insb
insb
mov
inc
jnp
mov
fwait
push
jb
mov
push
pop
std
iret
push
test
mov
inc
adc
xor
inc
adc
cmpsl
subb
mov
ficoml
ret
pop
mov
sbb
test
imul
lods
fidivs
adc
js
pushf
sar
mov
cli
adc
ret
pop
lahf
hlt
scas
lret
dec
arpl
loopne
jbe
jg
jge
dec
xor
leave
sub
aaa
enter
insb
mov
add
xchg
int3
lods
inc
xchg
pop
aas
and
cltd
xor
mov
int
and
sbb
movsb
sahf
into
cmp
cmpsb
jge
stos
in
lea
daa
mov
jmp
jno
test
sbb
bound
adc
fisubl
mov
test
test
loope
mov
pop
mov
pop
cs
sbb
frstor
sub
in
loope
or
cmp
add
int3
popa
daa
adc
insb
sarl
jl
addb
add
daa
and
mov
or
cmpsb
sub
add
lcall
pop
push
mov
sahf
jl
mov
jp
push
andb
jp
jecxz
outsl
inc
dec
mov
imul
les
addb
fcom
cmp
lret
fld
pop
scas
push
xchg
and
imul
into
and
cmc
je
pop
xor
mov
push
sub
loop
scas
sbb
cmp
shlb
adc
out
push
mov
lods
test
mov
popa
pop
cli
mov
sbb
cmp
xchg
jge
pusha
push
sahf
mov
mov
loopne
mov
pop
mov
loop
pop
imul
cmpl
sbb
xlat
sbb
sub
es
mov
insb
xchg
sti
sbb
bound
inc
adc
aad
cmp
dec
sbb
roll
jecxz
fstps
repz
sbb
in
xchg
scas
mov
mov
xchg
sbb
fcompl
pushf
popf
sub
pop
inc
mov
rcl
aas
add
jmp
stc
icebp
je
inc
jge
lea
xor
std
movsb
dec
aas
cwtl
es
popa
mov
add
mov
ja
fbstp
or
pop
fcmovnbe
std
sub
cmp
mov
outsl
cmc
lock
iret
das
out
push
jo
mov
rcll
sub
aas
sar
sub
pop
cmpsl
mov
icebp
mov
fidivl
mov
fcmovnb
add
xor
lret
sub
fidivs
shlb
push
dec
sub
sub
ret
push
mov
push
sarl
lds
or
imul
lods
daa
xchg
std
mov
sahf
push
pop
push
fmuls
shl
aas
add
push
fcomps
std
mov
xchg
test
test
push
xchg
xchg
lea
jge
insl
sarl
shlb
xor
lock
bnd
dec
inc
divl
sbb
shlb
push
mov
and
pop
pop
mov
inc
ja
xchg
out
inc
add
or
cmpsb
loopne
cmpb
sbb
mov
icebp
adc
lds
bound
sub
push
das
loopne
lretw
in
xchg
add
push
out
or
mov
and
jns
mov
sub
and
push
int
mov
lcall
lods
mov
xchg
cltd
aad
sbbl
sbb
push
in
dec
popf
sub
mov
mov
jmp
and
inc
insb
and
jnp
in
scas
not
cmpsl
push
mov
add
iret
leave
jge
ret
add
pop
add
stos
jae
scas
adc
sbb
pusha
mov
test
fstpl
notb
repz
push
imul
js
jns
rcrb
mov
repnz
and
hlt
cli
dec
xor
cmp
jbe
add
jge
std
inc
sbb
dec
or
pop
add
in
mov
push
sub
fnstenv
adc
dec
scas
fldl
cmp
adc
push
clc
push
mulb
je
xchg
sub
daa
mov
popf
cmp
inc
jne
adc
test
xor
sbb
and
sahf
lahf
in
mov
fs
lods
inc
jmp
and
cmp
arpl
arpl
pop
addr16
leave
push
push
pop
loope
aas
test
pop
ret
jl
mov
pop
fs
inc
repnz
pop
insb
mov
and
mov
xor
pusha
adc
sbb
pop
popf
cltd
jle
push
cmp
jge
push
sub
leave
std
sahf
pop
cmp
test
jae
cmpb
jg
int3
dec
mov
pop
rorl
es
and
addl
cmpsl
mov
fcoms
and
ret
gs
mov
sbb
pushw
cmp
lock
jge
outsl
xor
inc
data16
icebp
and
fs
lock
repnz
popf
cmp
mov
arpl
xchg
push
cli
aam
imul
mov
dec
or
insb
inc
fldt
ficompl
mov
pop
push
cwtl
adc
mov
and
imul
add
jns
xor
mov
movsb
in
push
lahf
cmpsl
sub
jns
in
xlat
mov
movl
mov
dec
jns
cwtl
inc
cld
lcall
fsts
les
je
repz
cltd
pop
jno
adc
outsl
pushf
or
pop
and
pop
pushf
dec
pop
xchg
jmp
outsl
dec
pop
push
loop
inc
mov
dec
jb
sti
inc
dec
jbe
daa
je
call
mov
jae
aas
std
dec
push
cwtl
loope
int
stos
pop
mov
inc
xorl
mov
mov
cmp
shl
das
int
dec
mov
aas
sbb
and
xchg
lahf
jg
es
insl
push
cmp
pop
insb
mov
mov
mov
lret
dec
dec
mov
out
mov
cmp
mov
std
inc
sbb
or
sbb
lods
inc
in
xchg
jnp
ret
out
insb
push
test
xor
push
outsb
xchg
xchg
xchg
ljmp
xchg
lods
xchg
jb
mov
pusha
cltd
or
into
loopne
push
xor
roll
mov
xor
mov
leave
lret
xchg
call
add
xor
rcll
fs
and
push
icebp
insl
movsl
add
or
adc
leave
or
xor
dec
jno
inc
xchg
pusha
mov
add
jo
mov
mov
decl
dec
mov
outsl
movsl
or
lods
sub
jne
outsl
jne
mov
mov
mov
out
movsb
add
jns
mov
and
cmpb
or
add
addr16
pusha
jp
fdivs
pop
fisttpll
mov
leave
jle
loopne
in
fiaddl
pusha
clc
mov
xchg
sahf
pop
mov
lret
xchg
fs
out
adc
dec
jl
das
popa
cmp
jmp
stos
pop
jbe
and
fs
insb
lea
lds
shr
scas
pop
lds
add
es
sub
sti
ret
xchg
pop
insb
popf
movsb
inc
sub
adc
xorl
jl
push
pop
pop
out
fidivrl
xchg
or
jl
sahf
pop
pusha
imul
js
mov
and
shlb
add
mov
inc
out
inc
sbb
arpl
shll
add
nop
pop
sbb
cmpsb
aaa
inc
lock
or
test
inc
int3
andb
popf
lods
mov
xor
outsl
or
and
fstpl
movsb
mov
inc
push
inc
mov
movsl
in
pop
dec
cltd
enter
daa
mov
fstpt
fstpt
jl
loop
dec
add
ds
add
movsl
mov
int
lahf
or
mov
test
ja
or
in
ret
pop
jl
popa
js
cmp
imull
jecxz
loope
xchg
mov
enter
sub
xchg
push
ret
adc
and
mov
sub
sbb
add
xchg
xor
pop
push
mov
movaps
lods
xor
lcall
add
sub
addr16
ret
test
shlb
mov
stos
cmp
clc
or
fbstp
push
mov
loop
dec
jmp
adc
push
mov
fs
mov
into
out
hlt
cmc
add
pop
xor
and
and
stc
test
enter
sbb
jnp
pop
les
jle
xor
sti
js
xchg
mov
cli
pop
mov
cmp
fisttpl
ds
inc
adc
gs
mov
pop
je
or
imul
push
adc
bnd
xchg
imulb
adc
dec
ret
mov
sub
cltd
dec
in
inc
push
test
cs
rcl
nop
xchg
fadds
or
xchg
les
mov
sbb
pushf
cmpl
stos
xor
sbb
sbb
mov
push
pushf
repz
mov
jae
or
inc
lret
inc
inc
add
inc
lods
dec
jb
push
in
dec
in
mov
jmp
inc
jecxz
mov
sti
std
repnz
or
pushf
popa
xor
mov
mov
js
ret
cwtl
mov
ja
mov
sahf
jmp
sbb
cli
das
lods
fidivs
iret
mov
mulb
andl
xor
es
xor
insl
dec
pop
stos
dec
and
imul
rcrb
loopne
mov
sarb
mov
sbb
mov
fsubr
loope
movsb
xor
aam
and
inc
or
fisttpll
mov
xchg
lds
popa
sub
mov
std
xor
add
into
xchg
adc
loope
seto
dec
cltd
cmc
mov
dec
mov
mov
sbb
das
push
test
dec
sti
xchg
xchg
sbb
pop
xlat
shr
xchg
push
pop
out
stos
movhps
add
sub
sbb
mov
and
push
popa
mov
mov
mov
mov
sub
jbe
sub
inc
rcr
outsl
or
xchg
fwait
loopne
pop
dec
pop
cmp
out
insl
mov
inc
insb
out
cmpl
jns
hlt
mov
jl
push
mov
or
adc
or
fimull
adc
jge
fidivs
mov
or
in
pop
dec
pusha
xchg
ja
filds
sbb
xchg
jno
out
rorl
xchg
das
stc
mov
cmp
push
fdivs
popf
jns
add
xor
int3
shll
pop
jns
clc
ljmp
mov
movsb
add
out
leave
iret
xchg
cld
ret
and
xchg
ss
jae
jbe
inc
push
popa
or
push
xchg
lock
add
xchg
popa
cmp
sbb
xchg
imul
imul
aas
add
or
sbb
mov
repz
push
leave
sub
frstor
mov
xor
movb
sbb
inc
getsec
add
loop
add
xchg
mov
pop
int3
pop
xchg
push
icebp
stc
popf
xor
lret
scas
fwait
stos
and
sub
push
xchg
imul
inc
out
enter
daa
mov
xchg
cmp
std
cmc
jno
loopne
jl
push
or
movsl
idivb
jns
mov
pop
jge
lahf
sub
push
inc
addb
cmc
push
inc
xchg
fiaddl
stc
test
test
mov
mov
lret
rclb
sti
std
push
es
xor
inc
sub
inc
xchg
ficompl
outsb
cmc
xor
jae
std
mov
cmpb
sti
add
mov
xor
adc
int
dec
movsb
sub
ret
mov
fwait
push
add
pop
pop
or
shll
sub
adc
sahf
gs
test
fmull
jg
ja
mov
sub
jmp
and
xorl
dec
xor
or
not
mov
ljmp
jecxz
sbb
shlb
leave
jns
cmc
leave
xchg
outsl
repz
and
or
stc
pop
mov
fs
cmp
inc
cmp
lods
sbb
add
xchg
pop
ret
stc
dec
xor
mov
xchg
and
or
scas
dec
gs
aam
pop
xchg
les
adc
fisubrl
pop
lods
adc
mov
add
popa
xor
mov
xlat
aam
sub
fisttpll
sti
and
fstpl
push
inc
nop
push
mov
dec
aaa
out
inc
and
sbb
cmp
fs
ffreep
lahf
sbb
loope
enter
mov
pop
mov
je
or
push
jmp
fwait
lock
scas
or
inc
pop
jp
aas
filds
jb
out
dec
fs
fidivs
push
mov
or
std
cltd
push
rcrl
test
ds
popl
arpl
and
arpl
test
fwait
dec
into
lock
repz
mov
enter
frstor
fdivl
insl
ss
dec
sbb
ja
mov
pop
push
cmp
cmpsl
ror
sub
xor
cmpsl
cmp
pop
cmp
pushf
shrb
ret
ret
sbb
add
bound
fnsave
mov
xchg
add
int
jmp
popa
aas
cmp
lods
push
fnstcw
fs
xchg
pop
xor
push
jmp
add
out
jg
add
mov
test
mov
mov
notl
rorb
sbb
test
mov
enter
roll
pop
pop
test
jg
push
aaa
cmpsl
mov
rcll
inc
repz
jmp
ret
movl
pop
clc
jecxz
ljmp
pop
out
add
jne
dec
sbb
fs
push
popf
or
xor
fwait
push
jp
cmp
jl
scas
add
adc
jge
jns
int
in
mov
xchg
icebp
sbb
sub
cld
inc
lret
addr16
inc
jp
mov
mov
mov
mov
in
adc
pop
xor
jmp
cmp
jbe
fbld
mov
xchg
inc
pop
xchg
jmp
cli
mov
or
jge
fwait
imul
mov
je
or
and
jae
jnp
stc
jg
pop
mov
push
mov
pop
adc
jg
iret
out
nop
ret
rcrb
adc
jae
mov
or
jecxz
out
pop
push
pop
or
mov
orl
call
add
mov
ss
inc
cmp
hlt
fstpt
jbe
dec
jp
insl
popa
pusha
sbb
dec
pusha
or
add
jo
pop
int3
pop
fldcw
sti
inc
push
push
aam
xorl
jp
xchg
and
jae
cmp
sub
aas
push
in
xor
in
sub
enter
daa
mov
mov
inc
icebp
dec
jno
in
jl
decb
dec
loopne
fistpll
pushf
mov
movsl
int
xlat
and
inc
mov
push
sbb
mov
push
or
cmpsl
xor
imul
pop
lret
js
out
call
push
sbb
mov
cmp
xcrypt-cbc
cmpsl
adc
fdivr
push
push
repnz
adcb
sbb
rolb
xor
insb
jns
ret
int
data16
mov
jb
lcall
ja
jle
mov
negb
sahf
or
testb
cmp
mov
jecxz
mov
fcomps
mov
cmp
ret
adc
notl
mov
sub
xor
sbb
mov
into
lods
icebp
xor
fsubrl
out
loop
cmp
stc
push
mov
fs
push
adc
gs
lretw
lods
add
mov
gs
adc
cli
insl
sbb
xor
jl
cmp
dec
adc
incb
gs
mov
stc
pop
mov
dec
adc
dec
xor
fs
adc
jo
add
ss
jl
ljmp
mov
xchg
sti
jg
mov
sbb
sti
aam
leave
shll
push
nop
das
jnp
dec
xchg
dec
lods
inc
xor
xchg
stc
les
repz
mov
dec
lea
psubsb
pop
negl
add
pushf
dec
rolb
pop
push
pop
sub
and
inc
ja
sbb
jle
inc
jb
test
aas
je
fldcw
idivb
xchg
std
inc
and
cwtl
adc
mov
mov
divl
or
dec
dec
fimull
mov
insl
sub
shlb
outsb
das
push
les
fs
and
lock
rorl
sub
pop
inc
dec
sbb
cmpsl
mov
cmpsl
mov
ss
cwtl
lret
xchg
jp
mov
push
push
int
inc
mov
pop
shlb
orb
aam
imul
xchg
cmp
push
int
adc
fstpl
clc
mov
loope
inc
ljmp
push
lods
shrl
mov
mov
rclb
mov
repz
xor
sub
or
subb
fisttps
pop
sbb
repz
dec
shrb
fidivl
dec
add
jmp
inc
mov
lods
or
adc
xor
jg
mov
sub
or
pop
mov
enter
push
inc
add
or
mov
fwait
ds
mov
mov
fistpll
bound
fsubp
xchg
lods
in
xchg
inc
rolb
or
sub
testl
jp
cs
mov
push
out
jle
and
repnz
leave
mov
push
add
scas
test
xchg
lds
push
outsl
sub
pop
rclb
popf
arpl
loopne
mov
stos
mov
in
cmp
icebp
insb
into
iret
cld
jnp
xor
scas
sbbb
aad
adc
ljmp
pop
adc
inc
dec
sub
inc
and
imul
dec
sbb
cltd
and
xchg
setg
sbb
push
or
sahf
sbb
mov
js
rolb
repnz
pop
es
push
jbe
hlt
mov
jbe
mov
sub
aaa
add
or
fcomps
pop
outsl
sub
inc
rcr
pop
sub
lock
mov
push
xor
subb
pop
mov
and
rcrb
push
xor
in
cmpsb
or
cmp
enter
daa
mov
cmp
jno
push
cltd
jl
lret
dec
dec
xor
mov
rcrl
lahf
imul
and
fdivs
sub
cs
pop
icebp
mull
pop
arpl
push
push
leave
and
jae
sub
adc
outsb
mov
mov
shlb
fsts
sbb
stos
fadds
or
es
lds
int
sub
sahf
out
cltd
pop
and
and
push
fsubrl
stos
or
in
fistps
sbb
adc
mov
into
cmpsl
mov
and
jne
cmpsb
ss
mov
fdivrs
std
notl
xchg
lret
jno
dec
lods
mov
sbb
mov
pop
in
push
fldl
aaa
xchg
imul
js
in
mov
mov
pop
sub
adc
xor
dec
stos
je
ljmp
out
xchg
cli
mov
lods
pop
cmp
dec
sbb
mov
shlb
divb
xor
adc
pop
les
push
das
adc
jle
add
das
js
pop
fiaddl
cwtl
loope
push
mov
jmp
shl
in
subl
cs
repnz
jg
nop
or
roll
loopne
sub
out
les
dec
repz
movsl
cmpsl
out
lea
dec
or
cwtl
or
inc
adc
or
call
inc
pop
test
inc
xchg
movsb
cmp
sbb
mov
in
int3
sarl
idivb
into
std
out
negl
bound
mov
insl
adc
mov
jl
test
inc
mov
aam
lock
sub
xlat
mov
fwait
gs
rcr
dec
pop
es
inc
jbe
add
mov
adc
cmpsl
mov
enter
xlat
icebp
or
inc
loopne
push
adc
and
fucomp
cmpsl
pop
jns
inc
rclb
out
sub
push
jle
and
out
nop
imul
clc
in
imulb
add
ljmp
adc
mov
in
decb
ljmp
shrd
add
jecxz
lcall
mov
xor
xchg
xchg
mov
jmp
adc
xchg
cmp
sbb
lods
pop
shl
leave
cmp
adc
jge
cmp
jns
jg
in
ja
mov
add
mov
jo
sarl
jmp
jae
add
loope
xchg
or
fwait
insl
out
or
xchg
jne
jno
mov
int3
clc
out
and
mov
jns
push
in
clc
xchg
mov
sti
or
fldenv
addr16
fwait
jp
pop
push
mov
adc
mov
ret
jle
sbb
in
fs
fcmovnu
pusha
repnz
xchg
ljmp
xchg
nop
movsb
mov
out
push
push
and
jmp
sbb
push
repnz
jno
daa
or
insb
cmp
inc
jnp
xor
scas
in
insl
push
sbb
pop
adc
sub
movsb
imul
inc
push
std
les
pop
xchg
inc
daa
mov
or
fnstenv
cmp
dec
cwtl
ljmp
sti
or
fiadds
icebp
lds
fucomi
mov
in
outsl
leave
leave
int
hlt
jno
inc
arpl
pushf
jbe
push
jge
ret
sub
lods
or
popa
adc
sahf
xchg
cwtl
int3
cs
push
pop
pop
out
pop
push
lcall
jo
pop
lret
scas
cmp
and
xchg
ja
adc
push
mov
mov
in
notl
push
daa
mov
repnz
pop
sarl
dec
mov
xor
and
add
lahf
mov
test
push
mov
rclb
sbb
cmpsl
js
out
call
push
sub
sub
xor
mov
push
sahf
push
adc
mov
data16
fadd
dec
xorb
sbb
sub
mov
out
jl
enter
sbb
cmp
pop
sbb
lcall
cmp
aam
mov
sahf
dec
or
push
add
jg
xchg
add
popa
in
sbb
and
cld
and
ret
cmp
cmp
notl
jle
lret
iret
shl
adc
mov
out
cmc
push
sahf
mov
xchg
mov
loop
cmp
stc
test
lds
mov
data16
pop
lods
shll
inc
out
cmpl
cmp
and
or
pop
decb
gs
adc
loopne
stos
and
and
adc
mov
loopne
neg
xor
xchg
add
xorb
cmp
cltd
xlat
xchg
push
sub
and
out
xchg
sti
xor
dec
aad
in
or
dec
push
and
pop
cwtl
fldenv
inc
pop
cmpsl
mov
test
cmp
xchg
jnp
pop
cwtl
sbb
into
and
adc
inc
pushf
lahf
sbb
fstpl
iret
mov
inc
lods
xlat
inc
aas
mov
int3
xchg
push
cmp
pop
push
inc
jecxz
dec
fdiv
ret
std
mov
cwtl
mov
mov
test
stos
subl
xor
lock
mov
lea
mov
stos
das
sub
sti
mov
sarb
xor
sub
add
push
test
jmp
das
dec
push
inc
loope
scas
jl
mov
in
add
jl
pop
lret
jne
sub
pop
and
mov
cwtl
xchg
mov
sub
add
sub
sbb
clc
daa
mov
xchg
shll
ljmp
stos
lods
test
aas
es
dec
mov
pop
push
jl
sub
or
fldl
andb
test
or
mov
cmp
xchg
loop
dec
push
xor
xchg
pusha
sbb
int
pop
stos
add
stos
lret
push
dec
push
and
repz
stc
xor
iret
fimull
xchg
in
xor
out
popf
mov
mov
xor
pop
xor
jno
les
push
dec
inc
das
sti
fmuls
ss
fwait
pushf
mov
dec
in
inc
jne
fs
mov
int
out
fucomp
lret
jns
das
in
test
hlt
xchg
sbb
sub
in
add
seto
cmp
daa
sahf
pop
mov
mov
iret
in
dec
jle
jmp
mov
jmp
pop
xor
push
in
inc
popf
adc
aaa
push
push
xor
stos
lcall
insb
movsb
add
jnp
repnz
scas
dec
xlat
int3
push
arpl
cmp
push
scas
mov
ret
mov
jg
lds
shlb
push
inc
sub
or
push
stos
int3
inc
xlat
scas
mov
sti
xor
xchg
mov
je
imul
lds
dec
leave
sarb
jle
aas
mov
leave
add
hlt
mov
ljmp
leave
mov
out
aas
aaa
add
test
adc
adc
pop
mov
push
jge
jne
push
cmp
ss
in
scas
pop
and
cmp
or
movsb
imul
push
ror
jb
adc
adc
or
xor
scas
jnp
cmp
add
out
jl
dec
sub
popa
inc
movsl
loop
cltd
and
add
lahf
cmpsl
ljmp
sti
sub
popa
inc
jns
dec
mov
push
pop
aas
lcall
loope
dec
push
cmp
loope
sbb
cs
xchg
xchg
jle
adcl
shrb
cmp
orb
mov
xor
push
lret
xchg
int
push
dec
sub
leave
icebp
pop
xchg
out
arpl
jae
jne
jg
dec
sub
push
icebp
ja
test
pop
push
andb
loope
sar
adc
cmpb
and
stc
adc
hlt
or
insl
mov
ljmp
in
into
push
adc
cmc
in
jecxz
in
xchg
in
outsl
outsl
xchg
stc
cmp
cli
outsb
rclb
push
xchg
push
ljmp
push
jmp
mov
out
push
mov
xor
int
or
sub
lods
mov
int3
loopne
outsb
jb
cmovge
cmpsl
sbb
imul
int3
lods
xchg
sbb
je
inc
xlat
sarb
out
cmc
push
pop
in
pop
mov
sti
loope
lods
cs
out
cmp
nop
ror
dec
mov
push
inc
outsb
in
mov
les
imul
cltd
mov
stos
add
jge
push
call
xchg
cmpsb
add
ret
imul
jmp
and
inc
insl
jecxz
inc
enter
pop
rclb
imul
mov
jecxz
fdivrl
add
loop
cwtl
inc
cmpsb
sbb
or
pop
addl
stc
rcr
pop
out
xchg
mov
inc
lock
lret
das
pop
lret
inc
mov
mov
push
and
dec
rcl
jns
sbb
aam
dec
insl
rorb
and
cltd
mov
mov
mov
sub
mov
mov
adc
outsl
pop
mov
xchg
sar
add
sub
adc
push
push
inc
ret
inc
ret
push
inc
rcr
push
push
inc
clc
bound
ljmpw
fdivs
lods
adc
mov
mov
lea
push
xchg
fimull
imul
cltd
or
data16
orb
int3
cmpsl
push
dec
mov
xor
push
shlb
xchg
xchg
mov
bound
aad
sahf
hlt
or
fildll
ret
mov
scas
stos
push
jmp
push
adc
pop
cmp
or
leave
cmp
hlt
mov
mov
rorb
test
fsubl
out
xlat
inc
sbb
or
xor
fwait
lret
inc
mov
jne
mov
or
fisubrs
mov
pop
cwtl
repnz
mov
xchg
sub
sub
call
shr
jp
fcoms
adc
pushf
mov
mov
repz
pop
mov
in
sahf
inc
mov
nop
insb
xchg
xchg
fldl
adc
add
jecxz
cmpsl
mov
pop
mov
jo
stos
or
lods
paddusw
cmp
scas
stos
and
stos
int3
inc
adc
out
iret
bound
ret
jecxz
mov
jae
insl
mov
enter
stos
or
iret
cmp
scas
jg
xchg
adc
sub
mov
nop
fimuls
push
cmp
mov
xchg
cs
jnp
hlt
pop
out
arpl
lcall
mov
sbb
cmp
add
cmp
int3
inc
adc
add
inc
pop
mov
push
push
pusha
push
sub
jnp
scas
div
xor
bound
movsb
neg
push
push
and
pop
cmpsb
xchg
and
in
lds
enter
daa
scas
pushf
pop
cmp
pusha
xchg
jl
daa
mov
pushf
or
sub
lods
and
jmp
push
gs
test
cmp
movsl
ja
and
inc
test
add
adc
and
sahf
push
add
loope
xchg
cmpsl
sub
cld
idivl
inc
dec
push
outsb
in
inc
adc
inc
js
lcall
sbb
jecxz
xor
aad
ljmp
pop
push
and
lcall
rcr
sub
insl
sub
fadds
cmpb
jg
imul
mov
pop
pop
and
cmp
push
bound
scas
das
call
lret
mov
adc
mov
and
jecxz
out
cmp
cmc
lods
dec
mov
outsl
dec
pop
ljmp
leave
mov
adc
xchg
data16
aaa
sbb
gs
out
add
cli
cmp
or
dec
sbb
fadds
or
std
xor
addr16
rcrb
jns
adc
imul
fsubrl
xchg
mov
sti
sbb
scas
mov
out
sub
sbb
or
icebp
in
les
sti
nop
les
int
cmp
adc
rcr
sarl
jb
or
xchg
orb
cwtl
lcall
push
adc
sub
jmp
outsl
push
inc
hlt
xchg
or
jns
aas
cli
jl
jb
mov
je
mov
jecxz
mov
testb
std
fdivrl
fstps
lahf
stos
aam
std
ljmp
cli
push
cmp
dec
int3
mov
xorb
push
cs
out
fwait
mov
inc
loop
and
mov
cltd
es
gs
dec
add
dec
cmpsl
lods
mov
xchg
icebp
xchg
clc
movsl
cld
rcr
test
mov
insl
mov
aaa
pop
insb
scas
ror
cmp
sub
rcl
push
out
cli
ret
iret
and
fnstsw
and
popf
outsl
stc
xchg
aas
xchg
cmc
ljmp
and
lods
out
adc
push
inc
push
xor
bswap
and
add
mov
test
std
mov
xchg
loopne
dec
push
nop
arpl
push
mov
sbb
aas
add
lret
stos
test
les
lret
inc
inc
mov
mov
inc
or
lods
aad
test
sbb
pop
lea
ja
aas
orl
aam
pop
bound
fwait
cli
xchg
ret
dec
stos
js
jne
jne
mov
or
out
mov
jle
jns
movsb
inc
in
iret
add
pop
push
sub
jecxz
arpl
xchg
inc
jp
and
mov
mov
mov
shld
loop
adc
push
xchg
push
fistpll
xor
mov
adcl
movsl
popf
arpl
int3
gs
push
scas
movsl
xor
cwtl
aaa
mov
jp
push
jnp
rorl
push
and
push
icebp
xor
iret
rol
ret
sub
jno
inc
js
sub
out
sub
inc
xor
imul
aad
cltd
fisubl
xor
dec
in
imul
repnz
mov
shl
inc
mov
in
outsl
leave
repnz
stc
hlt
push
or
arpl
jle
jge
addb
jg
inc
or
xor
arpl
std
int3
out
cvttps2dq
test
push
inc
daa
mov
in
test
les
cmc
jne
cmp
jge
jo
test
in
lods
dec
pop
enter
daa
lods
inc
pop
cmp
inc
jno
sbb
jl
inc
jo
or
jl
dec
cltd
pop
movsl
lock
mov
lahf
in
adc
insl
loope
jmp
pop
testb
xchg
cmp
jp
int3
xchg
inc
jo
pop
jg
push
jg
loope
out
sub
popf
leave
cmp
ret
inc
lcall
pop
dec
std
stc
sahf
icebp
subb
sbb
lods
dec
xor
das
filds
rorl
int
push
inc
sub
inc
push
pop
xchg
aad
lcall
or
pop
sahf
aaa
sub
adcb
jg
fxch
mov
jg
mov
aad
add
imul
imul
testl
fwait
shrl
add
adc
jae
jge
mov
xor
loop
inc
mov
test
repnz
movsb
icebp
stc
pop
stc
lods
xchg
add
pusha
lea
cli
insb
dec
std
xor
cmp
fwait
pop
or
mov
repz
pop
adc
repz
dec
test
sub
xor
add
das
js
dec
cmp
cmp
int
xlat
dec
loope
sub
sbb
and
in
das
prefetch
or
shrb
aad
lea
jbe
adc
jge
inc
xchg
xor
jge
dec
repz
aad
mov
jecxz
dec
cmc
jmp
pop
test
xchg
dec
sub
lds
pushf
mov
jle
pop
subb
inc
jnp
xchg
call
lods
jb
xchg
cs
fidivl
lcall
jl
std
cmpl
mov
jno
mov
imul
dec
in
sbb
jge
and
mov
xchg
pop
lock
mov
mov
imull
and
or
pop
push
imul
add
mov
add
and
xchg
imul
ret
mov
je
inc
mov
cmc
pop
add
mov
mov
iret
ret
pop
xchg
push
pushf
call
mov
xchg
jle
cmc
ljmp
out
ljmp
out
js
xor
or
sbb
add
outsb
inc
test
pusha
mov
fbstp
xchg
lea
dec
test
mov
inc
filds
aam
mov
rorl
pop
stos
dec
dec
stos
cwtl
or
push
or
mov
add
out
jmp
leave
xor
inc
or
xchg
xor
or
mov
xchg
call
pop
dec
jl
ja
daa
rorb
std
outsl
inc
hlt
lret
push
or
lods
add
sub
mov
push
xchg
pop
mov
dec
pushf
pop
pop
bound
push
push
in
push
xchg
lret
test
lcall
or
icebp
mov
fsubrl
mov
mov
mov
jle
pusha
jle
lcall
rclb
xchg
mov
lcall
lret
mov
sub
or
mov
out
cmp
mov
scas
in
insb
in
pop
jnp
iret
and
jno
out
push
cmp
xchg
adc
xchg
outsl
iret
and
scas
ret
mov
and
pop
inc
sbbl
inc
xor
ja
ljmp
push
push
lods
cmp
adc
adc
neg
or
mov
or
lds
dec
ret
cmpsl
cmp
cmp
fdiv
popf
jle
arpl
and
xor
or
movb
ljmp
int3
fimull
lods
pop
adc
fcmovb
xor
inc
in
scas
mov
dec
and
stos
out
or
repnz
mov
pop
addr16
xchg
and
daa
lods
push
cmp
aas
jno
idiv
jl
xor
dec
jp
cld
outsb
mov
das
and
cmp
push
or
leave
test
iret
jp
inc
es
loop
std
sbb
js
pop
sahf
mov
push
loope
pop
mov
adc
mov
sub
adc
cli
sub
dec
add
clc
sbb
mov
out
aad
shll
aas
push
aam
or
mov
fistpll
adc
les
js
mov
sub
jne
test
cltd
test
jg
dec
pop
mov
insl
pop
mov
mov
xor
sar
ss
shr
mov
xor
sub
inc
xlat
mov
mov
decl
cmc
cmp
scas
outsl
or
sbb
int3
test
scas
fs
out
adc
or
data16
xlat
lods
insl
mov
ret
xchg
add
lahf
movsl
daa
xor
ret
mov
or
pushf
loopne
sbb
loopne
xor
pop
insb
adc
mov
pop
adc
scas
sahf
add
js
push
pop
aas
sbb
and
mov
push
in
lcall
and
pop
nop
push
lret
sar
cmp
and
fnstcw
inc
and
mov
fpatan
and
imul
rep
lea
add
dec
pop
outsb
aad
adc
sbbl
or
cs
inc
add
lcall
loop
jb
addl
inc
xchg
in
jecxz
xor
test
aad
sub
mov
mov
add
rorb
test
or
arpl
hlt
aam
das
movsb
push
and
scas
xchg
andb
mov
data16
insl
xchg
adc
adc
push
mov
inc
mov
cld
sub
adc
jnp
adc
in
std
pop
adc
adc
pop
mov
aam
sub
in
scas
or
push
ffree
dec
sub
adc
ljmp
out
lods
push
std
jno
jp
out
fldt
test
call
sbb
int3
pop
cwtd
lods
into
test
hlt
and
in
jp
test
inc
sub
jnp
jns
mov
pop
sbb
xchg
cltd
push
lods
cmc
jp
test
cmp
add
add
jmp
inc
xor
popa
or
mov
push
mov
xchg
pop
add
sbb
xchg
sti
dec
rcrb
or
add
jo
inc
jne
pop
push
mov
fwait
jl
jnp
dec
bound
push
or
stos
and
pop
xchg
xchg
sbb
sub
fldcw
or
mov
addl
shl
sbb
sub
in
je
pusha
imul
or
jmp
xchg
push
popf
mov
jbe
inc
in
push
sub
rcr
and
mov
insb
push
pop
adc
scas
aam
inc
push
jg
mov
iret
jg
pop
xor
pop
loopne
inc
mov
jbe
mov
or
inc
pop
movsb
inc
rorl
mov
adc
mov
out
fidivs
lds
ffree
es
mov
repnz
mov
loopne
jecxz
call
pop
and
and
jge
lret
popf
sbb
out
mov
or
cltd
add
std
leave
pop
inc
stc
aas
push
or
pop
jo
inc
jp
xchg
test
cmp
sub
xchg
sub
push
outsb
adc
jp
fxch
div
dec
daa
stos
pop
out
cmpsb
dec
test
jl
imull
jmp
mov
jle
xor
and
fidivs
push
push
lcall
rcl
pop
fisttpl
sub
fnsave
push
xchg
adc
jmp
shrb
push
cmp
jp
or
mov
rcl
es
adc
stos
sbb
jg
icebp
cmc
xor
mov
mov
pop
and
sub
push
mov
xchg
int3
cmp
push
iret
cltd
and
sub
adc
sahf
jge
jne
inc
and
rcrl
jg
les
add
mov
int
ss
ljmp
loopne
mov
lret
ds
inc
mov
cmp
into
loope
mov
add
nop
xor
jp
jmp
leave
loop
inc
xchg
stc
pop
sarb
inc
insb
into
pop
fdivrs
push
pop
stos
mov
iret
out
pop
fs
shlb
or
mov
dec
cmp
mov
loopne
dec
cmp
adc
cmpsl
imul
xchg
add
mov
mov
inc
pop
cmp
pusha
xlat
int3
sbb
sub
outsl
inc
mov
add
adc
xchg
aad
jmp
nop
sub
test
jp
inc
mov
mov
push
mov
or
std
sbb
xchg
or
and
add
ljmp
mov
mov
xor
adc
xlat
lcall
sbb
lret
je
xchg
jecxz
aad
notb
xchg
pop
std
shrl
mov
mov
mov
sbbl
repz
dec
mov
pop
xlat
mov
iret
mov
lock
xor
mov
gs
fisttpll
pop
shll
pushf
or
dec
cmc
mov
sarb
push
jmp
mov
and
jg
pop
pop
xor
inc
and
jg
lcall
pusha
sbb
dec
sbb
xchg
cld
add
jg
divl
mov
ds
mov
push
ret
sub
movntq
push
add
int
cltd
in
icebp
test
dec
mov
dec
jecxz
fadds
dec
push
movb
sarb
cs
sahf
sar
stc
jbe
add
stos
jbe
mov
dec
lods
addl
sahf
and
stos
hlt
into
or
or
xor
sarb
xor
fwait
and
cmp
cmc
dec
mov
inc
inc
and
jnp
push
je
fwait
xchg
rorb
testb
xchg
fsubrp
pop
pop
fbld
mov
jns
mov
addr16
imul
jbe
aam
addr16
push
in
cmp
mov
lahf
repz
pop
cmp
jle
adc
in
jns
pusha
push
cmp
sbb
and
fdivrl
jnp
push
xlat
movsb
addl
push
mov
ds
fsubs
sbb
push
insb
cli
lds
es
cmpsl
scas
aaa
mov
je
lcall
ret
addr16
xchg
lea
jae
sahf
mov
or
mov
jmp
sbb
dec
inc
subl
sub
lahf
rolb
mov
ficomps
and
push
dec
mov
xor
arpl
cmpsb
sarl
or
lea
adc
rcrb
add
push
mov
pop
jae
daa
push
in
sbb
jo
lods
mov
scas
out
cmp
dec
mov
push
pop
or
mov
jg
enter
daa
stos
dec
adc
mov
add
jl
popl
ds
sahf
movsl
add
sub
call
test
gs
inc
inc
lods
int3
addl
pop
add
jecxz
in
iret
out
sbb
clc
push
sub
add
loope
add
fldt
sub
mov
adc
sub
dec
sbb
pop
adc
outsl
sar
push
fcmovu
jno
xchg
sub
sub
adc
lahf
lcall
jno
mov
outsb
inc
repnz
and
fs
or
subb
xorb
dec
loop
out
add
fsubp
xchg
movsb
mov
fdivs
fcomps
in
sbb
sub
pop
shrl
mov
cmp
into
les
je
enter
mov
fsubrl
rol
loop
sbb
fs
nopl
cmc
fldt
push
push
push
cli
add
cli
out
cmp
xchg
pop
push
and
daa
addl
pop
stos
push
fcoml
movb
mov
ret
xchg
inc
push
sbb
fwait
das
xlat
or
sahf
sub
xchg
pop
in
jo
addr16
dec
or
cs
mov
nop
pop
ficompl
mov
mov
fldcw
test
mov
insb
sub
js
ret
adc
cmp
pushf
mov
inc
inc
pop
imul
idivl
jbe
outsl
jb
adc
dec
xchg
ret
mov
jecxz
mov
adc
js
or
mov
push
and
cmpsb
adc
or
pop
mov
cld
test
das
bound
adc
sbb
mov
int3
repnz
cmp
arpl
or
idivl
test
mov
icebp
out
sti
frndint
jle
call
mov
mov
clc
pop
push
dec
mov
sub
mov
ret
or
push
in
scas
fstl
sub
xchg
cmp
ja
push
push
xchg
lods
sub
les
mov
jno
push
sahf
inc
pushf
cmovbe
fildl
bnd
cltd
sbb
test
ljmp
mov
lret
pop
xchg
loope
loope
pusha
rcll
inc
pop
lods
add
movsb
int3
push
repnz
in
xchg
ss
and
cmp
fs
xor
sbb
in
loope
inc
ret
test
pop
jns
shlb
imulb
inc
mov
xchg
xor
dec
or
mov
jns
out
cmp
jne
stos
aas
sbb
ljmp
out
adc
sub
iret
adc
pushf
jp
pop
stos
mov
fildll
mov
lret
mov
cli
in
loop
pusha
mov
shll
scas
push
out
jmp
sbb
or
push
jbe
lcall
mov
push
test
hlt
movl
scas
lcall
adc
push
iret
cmp
cld
jmp
inc
movsb
add
inc
cmp
pop
or
ss
leave
inc
rorl
fisubrl
shr
sbb
mov
imul
fidivrs
xor
rcrb
inc
push
hlt
repnz
cmp
jle
mov
jbe
fwait
sbb
sbb
shll
jnp
aaa
or
iret
xchg
mov
push
inc
pop
mov
stos
jg
cli
push
jo
sub
push
dec
call
cmp
sbb
push
lods
sub
dec
add
enter
daa
test
sub
jl
cld
dec
dec
xchg
cmpl
or
imul
popa
test
movsb
test
xor
inc
inc
sarl
out
sub
mov
daa
es
pop
pop
jl
push
jne
loope
pushf
jecxz
popa
imul
push
clc
outsb
rcll
jno
mov
jne
int
sti
clc
pop
sbb
mov
xor
xchg
cmp
fstpl
sub
sub
pop
xchg
rcl
lcall
adc
xorl
leave
test
pop
add
sbb
mov
sahf
mov
mov
cmpsb
ds
aas
es
mov
xchg
jo
fcoms
and
lret
inc
roll
mov
mov
into
cmpsl
or
cmc
rcrl
test
push
stc
test
ss
aas
adc
testb
xchg
lods
and
mov
out
mov
xor
sub
or
ds
jg
inc
gs
cmp
outsb
scas
rcrl
test
cltd
xor
sbb
mov
es
push
test
xchg
mov
inc
adc
sub
sub
mov
mov
aad
ficoml
loop
sub
xchg
loopne
cmp
in
pop
les
jl
mov
push
aaa
call
nop
shll
adc
xor
dec
mov
xor
testl
push
xchg
aas
adc
stos
add
or
je
fs
jecxz
jmp
jecxz
pop
push
cwtl
movsl
or
mov
mov
mov
pushf
dec
xchg
xchg
add
cmp
mov
in
push
mov
xchg
lock
add
mov
shl
inc
and
loope
rcll
mov
insl
cmp
in
dec
jmp
icebp
cmpsl
test
leave
mov
lds
cld
test
pop
mov
nop
lcall
jno
push
shr
imul
aam
cmc
es
lcall
fnstsw
jno
enter
nop
sbb
inc
mov
or
movsb
xlat
out
add
mov
and
push
jns
outsb
shld
faddl
add
movl
xchg
leave
repnz
and
daa
test
in
lret
xchg
pop
add
xchg
ret
out
shrl
xchg
sbb
xchg
cmc
aad
sbb
icebp
add
xchg
fsubl
mov
push
or
test
mov
mov
ja
jmp
dec
mov
out
adc
cltd
mov
inc
push
or
mov
fwait
in
outsl
dec
sbb
shll
imull
mov
pop
fwait
out
sbb
into
iret
xchg
out
popa
sbbb
sbb
xchg
pop
test
cmpsb
pop
inc
sub
lret
or
pushf
jp
daa
xchg
mov
inc
sbb
push
mov
cmp
cmpsb
jle
push
int3
in
scas
and
cmp
fcmovnu
pop
xchg
cmp
pop
xchg
or
adc
push
cmp
sub
es
je
repz
push
ljmp
and
push
jp
xchg
push
push
jnp
scas
and
std
xchg
rcll
adc
adc
cmc
iret
pushf
dec
imul
add
test
jae
cmp
mov
mov
xchg
inc
push
ss
loopne
ret
xchg
push
pop
rcrl
push
imul
ficomps
adc
fimull
mov
test
leave
inc
cltd
push
arpl
clc
iret
jbe
add
jge
out
sbb
sbb
mov
pop
add
ljmp
das
cld
push
mov
or
mov
cmc
scas
xor
xchg
and
mov
cmp
jp
movsb
cmp
sti
jo
cmpsb
cmpsl
dec
lret
in
das
insl
jmp
daa
test
ljmp
shll
dec
ss
ds
push
mov
and
xor
lahf
subb
push
sbb
test
sti
xor
in
or
mov
push
loopne
js
adc
push
je
loope
mov
pop
cmp
mov
adc
mov
orb
xor
out
sub
add
pop
and
or
roll
jo
cmc
pop
adc
add
popa
jns
sub
xchg
sub
sahf
data16
test
or
sbb
cmp
sub
movsb
mov
add
jl
dec
and
fimuls
sub
add
adc
std
testl
negl
fwait
test
test
std
cmp
mov
cmc
push
mov
xor
and
mov
sar
cmp
andb
adc
and
callw
lods
or
add
inc
mov
mov
xor
popf
mov
jb
es
mov
sbb
pop
call
sbb
pop
mov
dec
add
cmp
cmp
push
rcl
dec
jb
jns
mov
inc
imul
scas
jg
aad
outsl
nop
mov
adc
inc
repz
pinsrw
mov
xchg
lea
std
call
mov
cmp
adc
stos
les
dec
xchg
pop
scas
int3
das
inc
push
add
test
aas
mov
pop
jb
jbe
dec
xorl
xor
fisubl
cwtl
pusha
dec
dec
mov
bswap
mov
add
mov
push
push
mov
mov
lock
into
insb
das
and
ljmp
lods
add
dec
xor
mov
call
push
dec
out
inc
cmpsl
cmpsl
in
mov
pushf
aad
cld
aam
fxch
in
loop
mov
xchg
bnd
push
fisubs
rol
fldt
aam
mov
ret
sub
sbb
stc
pop
frstor
clc
cld
test
ljmp
xchg
push
mov
addr16
xchg
imul
aaa
inc
add
pop
jg
mov
dec
mov
out
je
loope
test
test
mov
ficomps
inc
push
jnp
push
push
stos
inc
mov
push
cmp
js
insb
mov
jnp
add
or
adc
mov
lret
iret
pop
mov
out
xor
sbb
and
inc
or
push
stc
fwait
adc
xchg
pop
inc
jne
or
mov
test
out
neg
pop
bound
push
in
pop
dec
xchg
push
roll
out
sbb
sub
lds
cmp
pop
add
test
aaa
mov
test
out
in
loopne
pusha
xlat
mov
fbstp
bound
push
sbb
sub
ficoml
cld
mov
add
push
sub
js
xor
shrb
push
jnp
nop
cmp
fwait
sarl
sub
cmp
jl
xor
inc
mov
jae
inc
inc
and
or
sub
adc
ficoml
push
insb
sbb
adc
imul
sti
fiadds
adc
popa
dec
test
xchg
push
gs
xlat
das
lock
mov
cmpsb
sbb
out
cmp
loope
jge
push
sbb
aaa
stc
lods
jb
test
sbb
int3
jno
cld
pop
add
leave
push
xchg
movsb
bound
push
fs
movaps
and
outsl
cmp
xchg
ret
jg
push
dec
dec
jb
sub
cltd
in
push
mov
pop
daa
cmpsl
repz
jb
arpl
sarb
dec
movsl
mov
ds
movsb
cli
and
mov
push
sub
push
push
idiv
inc
icebp
scas
mov
pop
ja
mov
mov
pop
fsts
shl
inc
into
cmp
lret
push
mov
outsb
cltd
dec
notl
inc
sarb
andb
rcrb
and
jbe
xor
fldt
push
jecxz
out
mov
xchg
jns
and
ds
sub
jmp
cmp
lahf
sahf
or
mov
lret
lret
dec
and
mov
in
adc
ret
insl
sbb
int3
pusha
aad
enter
add
xor
mov
sbb
out
into
insl
add
cmc
sbb
shrb
xchg
in
loop
lds
repz
fs
jns
adc
fisubl
push
outsb
lods
lock
mov
pop
out
jg
cli
sahf
out
sub
pop
pop
push
or
sbb
inc
dec
jnp
cmp
fsub
movsb
arpl
pop
pop
push
js
aas
xor
adc
adc
add
in
loope
sbb
dec
cmc
jecxz
enter
in
mov
mov
mov
xor
pop
mov
aad
pop
mov
dec
stos
mov
or
push
ja
les
call
xor
jmp
stos
clc
pop
in
scas
int3
adc
push
pushf
mov
repnz
pop
push
xchg
jp
movsl
outsl
jmp
aas
push
movsl
les
jbe
dec
clc
lahf
sbb
jmp
outsb
or
sar
insl
mov
cwtl
sbb
mov
in
cld
mov
std
fs
adc
pusha
jb
xchg
dec
mov
jmp
fisubrs
jmp
lds
inc
or
and
or
shl
push
mov
insl
or
mov
loope
push
cmpsl
cmpsb
arpl
mov
jae
aad
jmp
dec
mov
sahf
scas
add
scas
pop
rclb
xchg
std
aam
jbe
ret
mov
mov
out
cmp
sbb
ljmp
jns
insb
inc
fistpll
lret
xchg
mov
dec
push
das
decb
packsswb
add
lcall
mov
pop
filds
out
fistl
test
in
rolb
nop
xor
push
aas
cmpsl
pop
lods
xor
xor
ficomps
fisttpl
push
add
xchg
xchg
lcall
xor
or
mov
xor
sbb
mov
mov
stos
mov
ja
push
dec
jg
mov
jle
xor
fwait
inc
adc
cmc
and
andl
into
push
cmc
outsl
sub
in
or
mov
add
lods
dec
fildll
shrb
push
pusha
ret
jp
loope
mov
jbe
mov
sbb
jle
insb
test
aas
jne
pusha
jb
jbe
xchg
and
xchg
sub
jmp
jle
movsb
cmpl
mov
add
imul
lcall
jo
jnp
xor
cmpsb
push
loop
ljmp
insl
faddp
outsb
stos
or
scas
jae
in
pop
inc
inc
jecxz
or
cmpsl
jge
inc
dec
xchg
js
inc
cmp
pop
sbb
push
imul
adc
mov
insb
mov
lods
ret
and
clc
repnz
leave
xor
pop
adc
arpl
pusha
mov
jge
sbb
aaa
mov
inc
add
call
push
js
mov
push
jle
jo
push
inc
scas
out
sbb
and
add
movsb
dec
out
push
cltd
jno
cmpsb
lods
cmc
fucomp
std
ljmp
cmpsb
xor
cmp
pop
jl
cmp
adc
sarb
in
movsl
and
sbb
cmp
push
std
and
lods
push
xchg
or
inc
orb
pop
sahf
mov
fsubs
fisubrl
out
pop
sbb
sub
mov
xchg
loope
push
dec
mov
sbb
testb
out
and
pop
push
jle
sub
jns
stos
data16
out
aas
lock
push
pop
push
cmp
lcall
push
faddl
cltd
and
ljmp
jg
push
inc
mov
inc
pop
mov
sub
ss
arpl
xchg
or
clc
jge,pt
leave
pop
lahf
mov
xor
pop
fmulp
into
push
call
stos
xor
addb
inc
mov
stc
stos
scas
popa
fs
mov
adc
inc
sub
repz
xlat
inc
popf
mov
mov
xchg
xor
add
lods
and
call
inc
das
loopne
fdivl
adc
cmpb
dec
clc
xchg
mov
add
mov
pusha
fnstcw
xchg
sub
lods
mov
sbb
sbb
or
mov
add
jmp
mov
test
dec
mov
push
lea
jb
fs
or
neg
adc
push
pushf
dec
inc
mov
test
pop
cmc
push
push
inc
sub
mov
aas
bnd
jb
test
xchg
pop
jecxz
add
dec
std
adc
sub
lea
mov
sbb
push
or
popf
mov
in
mov
stos
xor
push
inc
adc
sub
clc
punpcklwd
sbb
roll
sbb
outsl
or
dec
fsubrl
pop
mov
dec
aas
lock
sub
mov
movsl
into
into
mov
into
gs
shlb
lods
sub
jns
aam
mov
ret
inc
mov
push
icebp
clc
or
mov
in
clc
jne
movsb
xchg
aaa
mov
cli
popa
push
push
lods
xlat
popf
mov
sub
sar
push
or
cmpleps
movq
lods
pusha
adc
out
jno
push
fwait
movsb
test
leave
cmpsl
xchg
cwtl
sbb
stos
inc
pop
pop
cmp
push
jle
aad
scas
pop
xchg
add
cmp
push
or
sbb
xor
push
lods
and
pop
gs
rorb
jmp
adc
gs
fwait
jb
stc
dec
ret
jne
pop
adc
mov
stos
bound
sbb
push
aam
xchg
hlt
aaa
fsub
das
idivb
dec
les
mov
inc
lret
jp
int3
bound
aad
mov
jle
in
in
outsb
sub
orb
sti
mov
gs
dec
mov
orl
push
push
cmp
popf
fwait
cmc
and
cmpsl
xlat
sahf
stos
sbb
and
data16
sarb
scas
es
push
sub
adc
popa
popf
iret
mov
int3
sbb
inc
ror
xorb
cmovbe
dec
or
and
inc
int
stos
ficomps
sbb
rorl
std
mov
test
ror
xchg
mov
jge
in
leave
stos
xlat
ss
stos
into
xchg
sti
cmc
jbe
clc
in
call
jp
aaa
ja
xlat
or
push
jnp
inc
sti
jae
pop
dec
fisttpl
pop
outsb
xor
jo
in
jnp
int
sub
lea
jb
push
sahf
movsb
fldenv
insb
cmpsb
xor
in
in
movsl
enter
daa
movsl
stc
jae
fcoms
jno
lock
jl
hlt
dec
adcl
movsl
sub
mov
aam
leave
lahf
mov
pop
imul
je
inc
cmpxchg
pop
lds
aad
push
mov
pushf
loope
nop
inc
sub
jns
cmp
outsb
pop
aad
adc
negl
test
sbb
scas
cmp
jp
ds
jmp
lock
lea
out
xchg
xor
fldcw
fsubrl
fsubrs
test
push
subb
pusha
jg
out
mov
mov
in
pop
sti
and
sub
repz
xor
inc
testl
pusha
shll
mov
mov
sbb
les
stos
scas
mov
outsl
and
cmp
stc
popa
fsubs
ficoml
sbb
adc
push
mov
mov
sub
inc
cli
add
cmp
or
inc
cmp
hlt
and
mov
fsubl
lock
loopne
push
jnp
in
inc
imul
mov
dec
xchg
arpl
pop
sbb
ret
xlat
inc
and
mov
xchg
mov
aad
and
decl
sarb
fld
cmp
aad
cs
mov
lea
mov
pop
pop
push
repz
adc
push
xchg
pushf
clc
jno
jmp
mov
pop
cwtl
add
cli
inc
xor
aas
xchg
inc
iret
jb
adc
dec
out
jbe
push
or
mulb
xchg
popa
cwtl
xchg
mov
mov
aaa
fmuls
out
or
insb
fcomi
movsb
pop
mov
mov
rcl
lock
mov
mov
scas
mov
and
orb
repnz
mov
aas
adc
cmpsl
movsb
in
outsb
mov
and
sub
push
bound
cmp
push
mov
lods
push
dec
mov
in
jbe
sarb
imul
ret
jnp
push
mov
clc
fstp
pusha
adc
mov
in
xchg
jbe
inc
ljmp
jle
inc
leave
or
nop
scas
aad
ds
xchg
and
add
xchg
mov
imulb
xchg
inc
jecxz
mov
cmp
dec
push
sbb
ljmp
push
outsl
stos
adc
flds
mov
dec
mov
or
and
jns
xor
insb
mov
and
ja
cmc
inc
dec
lods
inc
inc
lods
sub
or
stos
rcrl
movsl
lods
bnd
lcall
xchg
mov
xor
in
push
aaa
xchg
inc
push
ljmp
lea
or
lods
pusha
jp
insb
divl
add
orb
push
adc
dec
lret
test
xchg
mov
aam
popf
xchg
into
push
xchg
jmp
adc
mov
inc
inc
fistps
fists
out
pushf
stos
mov
subb
jnp
int
scas
mov
adcb
popa
mov
ret
movsb
pop
fcoml
inc
inc
fistl
jo
dec
ret
xchg
or
popf
xchg
inc
dec
add
lods
xor
xchg
jp
fcompl
push
out
in
iret
xchg
fsubrp
mov
xchg
jecxz
dec
mov
rclb
ljmp
loopne
arpl
daa
jbe
xor
jge
fimull
ss
mov
andb
xor
decl
rcll
loope
aas
jo
iret
cld
scas
lods
or
aas
cmp
mov
push
aaa
and
mov
xchg
lret
clc
adc
daa
movsb
inc
lret
and
or
test
dec
repnz
sub
outsl
daa
fistps
mov
in
push
daa
xor
sahf
pop
lcall
les
dec
and
push
jp
loope
daa
test
js
into
cmp
xchg
ret
adc
shlb
push
add
mov
add
enter
dec
mov
in
aaa
mov
lock
sub
pop
or
fs
jnp
fcomp
adc
or
mov
repnz
test
mov
dec
jg
jns
mov
xor
mov
and
cmp
repz
fld
sub
std
push
testl
sbb
mov
dec
cli
into
push
xchg
xlat
cmc
jb
js
cmp
outsl
add
xchg
loop
inc
fwait
stc
sbb
sub
adc
andb
lea
xor
out
jno
cli
aaa
mov
lds
mov
sar
and
add
jne
jl
fs
leave
adc
fisubrs
add
adc
xchg
es
jle
push
or
cmp
push
repz
test
xchg
repnz
sti
in
in
cmp
dec
nop
sub
or
insb
jo
aas
icebp
xor
notl
mov
pushf
xchg
int3
arpl
ljmp
or
pop
push
mov
or
cmpb
stos
addb
push
aas
xor
std
jb
stos
sub
je
dec
sub
mul
cmp
cwtl
dec
sbb
popa
mov
pop
cmpl
jb
and
mov
mov
pop
jne
int3
pop
subb
int3
push
mov
add
and
cmp
rcr
lock
es
inc
insl
mov
jge
cmpsl
mov
or
clc
cmp
cld
sbbb
jl
mov
mov
in
mov
or
mov
or
dec
sub
imul
test
ja
cmp
jmp
clc
jmp
test
mov
insb
ljmp
jo
lods
enter
mov
mov
test
and
outsb
mov
adcb
gs
test
xchg
pop
mov
sub
xchg
push
dec
dec
and
sbb
dec
imul
pop
scas
rolb
incl
pop
add
fcomp
sar
mull
out
dec
sbb
pop
push
test
aas
aam
mov
pop
mov
fistpl
and
in
in
inc
inc
inc
or
lds
fwait
rcr
scas
dec
mov
jne
cmp
adc
jae
daa
bound
pop
cld
in
popf
adc
xor
jno
or
cwtl
jae
push
mov
or
push
test
in
mov
pusha
inc
shrl
mov
sahf
imul
inc
push
or
sti
popf
jmp
jg
and
rcrl
jle
mov
jnp
mov
pop
push
mov
mov
xchg
jne
iret
ja
and
enter
adc
roll
jae
rep
inc
dec
loope
or
sbb
mov
xchg
rcrl
dec
sbb
shlb
push
lds
sub
decb
xchg
repnz
ror
cwtl
mov
hlt
inc
inc
jl
and
es
fistpll
sbb
dec
out
jne
xchg
add
ror
sbb
ficompl
push
and
js
test
test
lds
mov
and
es
rclb
jo
cmpsb
fisttps
mov
add
iret
scas
imul
setp
mov
cmp
push
jmp
or
test
mov
and
pop
sub
jbe
dec
test
repnz
adc
sub
add
pop
adc
xor
dec
cmp
aad
insl
push
std
lods
loope
loop
sub
ja
cmp
test
or
sub
adc
mov
clc
subb
sbb
fisubrs
add
ss
xor
lahf
cld
push
out
mov
int
ljmp
pop
mov
lcall
inc
faddl
mov
cmp
gs
jg
adc
mov
addr16
mov
popf
lods
and
stos
ss
sbb
mov
mov
jg
mov
mov
rcll
stc
push
jns
cmp
fwait
xor
ss
loop
sbbl
arpl
data16
jp
mov
int3
mov
pop
lcall
insb
jbe
mov
push
fwait
or
add
gs
jb
loopne
mov
xor
mov
ss
mov
add
gs
jmp
cmp
cmp
dec
rcl
les
nop
mov
pop
jnp
sti
adc
mov
dec
nop
add
xor
daa
or
sbb
jmp
inc
repz
iret
cmp
lea
hlt
call
mov
adc
leave
pushf
dec
inc
and
push
cmp
pop
fiadds
rcll
aas
iret
out
test
jnp
dec
aam
mov
jecxz
test
std
or
stc
cwtl
pop
inc
inc
mov
nop
cmp
adcl
iret
fistl
pop
mov
daa
das
mov
dec
jle
daa
or
das
jnp
cmc
mov
sbb
inc
outsb
shrl
and
insl
cmpsb
stc
mov
les
mov
jecxz
icebp
iret
imul
sbb
sbb
and
push
jbe
pop
sub
inc
sub
add
ret
hlt
rorb
frstor
inc
insl
clc
es
xchg
hlt
bound
popa
scas
sub
das
mov
push
cli
add
fwait
adc
fbstp
ljmp
lods
sub
lock
dec
mov
in
adc
dec
xchg
or
shll
pop
stos
out
cs
push
addr16
add
repz
cmp
jle
xor
mov
xor
mov
mov
sbb
mov
xchg
arpl
and
dec
dec
dec
loope
inc
fisubl
lea
imul
mov
sti
and
push
mov
cmpl
cmp
mov
mov
loope
mul
mov
cmp
or
hlt
jp
mov
mov
aam
sub
or
fdivrp
sbb
adc
je
stc
jmp
stos
and
iret
push
lret
xor
push
mov
mov
and
lcall
dec
lock
push
imul
fidivrs
fisttpl
pop
dec
pop
movl
std
inc
push
jae
or
xchg
call
ficoml
cld
xchg
xchg
sub
lods
imul
rcr
das
in
loope
add
test
sbb
mov
jbe
ror
pminub
arpl
popa
jecxz
dec
add
sbb
push
aaa
mov
or
pop
add
cmp
int3
or
sub
xor
aad
pushf
scas
push
les
inc
pop
popa
cmp
sti
movsb
jp
fwait
push
aad
js
mov
xchg
lret
daa
mov
aam
jno
push
mov
mov
rcr
cs
je
movsl
cmp
sbb
cmp
dec
test
mov
mov
fwait
aam
pop
cmp
mov
adc
inc
push
xor
push
sub
xor
in
outsb
mov
adc
mov
push
dec
mov
sbb
push
cmp
push
clc
adc
out
adc
repnz
push
sub
roll
or
mov
fidivrs
pop
sub
sub
sahf
cmp
scas
addb
repnz
call
ljmp
sub
push
cmp
jae
daa
testl
mov
jne
pop
ret
or
cmc
add
mov
sbbb
xchg
jg
or
test
mov
rorl
adcl
xor
sarb
je
addr16
dec
scas
loopne
xchg
pop
mov
mov
cmpsl
adc
lods
jae
add
xchg
lods
cli
ficompl
jae
xchg
xlat
add
xchg
mov
enter
les
add
mov
dec
xchg
enter
scas
testb
rolb
cmp
push
popa
or
pop
insb
push
mov
aam
dec
pushf
stc
in
lods
jmp
mov
pop
adc
cmp
aas
outsb
int3
pop
jb
jle
dec
dec
fistpll
mov
jl
std
mov
cmp
xchg
add
inc
mov
dec
decb
fildl
pop
add
sbbb
pop
shl
mov
aam
fbld
test
sarl
es
inc
insl
lea
cmpsl
mov
jb
icebp
cmpsb
ret
int3
out
lret
xchg
lcall
ss
mov
dec
ret
mov
mov
add
aam
clc
jmp
andl
std
addr16
dec
adc
xchg
xor
pop
ljmp
lods
addl
push
lea
out
mov
je
push
jbe
dec
fcmovnb
add
int3
sbb
pusha
push
xchg
in
dec
repnz
dec
sub
sbb
sti
rorl
rolb
mov
ficomps
or
xchg
add
push
in
pushl
aaa
push
or
and
mov
mov
pop
aad
mov
push
ret
jecxz
mov
inc
jno
aam
pop
jne
fwait
cs
dec
dec
out
jne
scas
mov
out
xor
sti
aam
pop
jns
xor
rclb
sbb
sub
cmpsl
in
addr16
sarl
addl
addl
pop
jle
push
pop
in
cmp
pusha
jns
mov
xor
xchg
inc
pop
or
pop
mov
lret
test
push
mov
pop
popf
aaa
cmpsb
xchg
mov
sbb
and
sti
jnp
out
jl
mov
cli
push
inc
orl
fnstenv
xor
fadd
pop
cmpl
jae
dec
or
jns
or
push
adc
inc
leave
add
lds
xchg
jg
cmpsl
sbb
adc
imul
fcmovnb
mov
or
mov
leave
rcrl
leave
xchg
in
hlt
arpl
dec
jbe
xchg
aad
test
jmp
or
mov
int3
repz
push
out
stos
xor
xor
sbb
fnstenv
cmp
dec
dec
movsb
add
sbb
cmp
movsb
in
cmpb
enter
daa
mov
mov
jl
sub
mov
movsl
inc
adc
and
pop
lahf
pop
xor
push
sbb
xor
push
mov
inc
dec
jecxz
pop
sbb
lret
jmp
aad
mov
les
mov
cmp
adc
arpl
add
xchg
inc
int
outsl
outsb
sbb
xor
add
int
sahf
mov
pop
mov
pop
push
xor
mov
sub
jnp
sahf
fstpt
fnsave
sbbb
and
adc
mov
and
and
divb
jl
cmp
cs
fs
cld
sarl
sbb
test
mov
leave
mov
out
and
mov
fwait
lcall
rorl
adc
fs
dec
lods
pop
jo
mov
pop
cli
shl
pop
xor
aam
xchg
add
xchg
xchg
and
test
inc
arpl
adc
or
imul
cli
addl
rcr
xchg
outsl
fldt
sbb
scas
in
in
xlat
inc
and
sub
mov
in
xor
cs
push
jle
dec
in
ljmp
outsb
in
les
jns
repz
mov
lret
mov
mov
adc
aam
pushf
movsb
push
call
inc
iret
inc
test
ss
or
mov
dec
ret
je
notb
jecxz
fldcw
std
push
decl
cwtl
jge
leave
mov
cli
lods
mov
addl
push
test
mov
push
lock
cmp
or
mov
push
es
call
dec
ret
push
mov
mov
jge
cli
cld
add
lret
idivb
lret
dec
cmc
mov
imul
arpl
stc
xchg
mov
insl
fnsetpm(287
ret
adc
fcoml
in
fnsave
clc
pushf
lcall
fidivrl
sbb
xor
out
mov
sbb
sbb
xchg
xchg
pop
push
mov
push
xchg
and
popf
add
add
cmp
test
fdivs
xchg
add
dec
pop
mov
test
leave
in
enter
sub
scas
shll
sti
pop
scas
call
xor
lods
cmp
add
mov
aam
pop
xor
jnp
or
pop
pop
xor
add
insb
pop
es
ror
and
lret
ja
cmp
dec
xor
cmpsl
inc
or
pop
fwait
pop
popa
add
xor
or
adc
jle
loopew
jns
xchg
mov
int
icebp
xchg
jg
test
mov
je
or
je
jp
lock
lods
mov
mov
popl
pusha
adc
and
push
xor
xchg
sbb
icebp
jmp
inc
shll
push
negl
pop
or
mov
loop
nop
stos
push
iret
mov
ret
push
popf
insb
jmp
sub
scas
adc
fists
sub
iret
xchg
das
sahf
ret
dec
pop
mov
out
data16
pop
addl
xchg
or
mov
xchg
fidivrl
enter
jp
cli
cmc
enter
inc
fidivs
outsb
lds
push
rorb
mov
sbb
out
std
fs
and
arpl
push
jbe
sahf
ja
sub
cwtl
aaa
xor
or
nop
add
fildl
pop
dec
jno
push
lret
xor
mov
movsl
scas
sub
mov
insb
inc
js
out
imul
jge
mov
les
enter
daa
mov
pop
pusha
jno
dec
or
inc
dec
scas
lods
adc
movsl
dec
ficoml
fistpl
lahf
js
jbe
out
sub
je
jmp
push
insb
pop
inc
ficompl
and
cmpsl
pop
mov
into
js
xor
pop
xchg
lahf
or
loope
jmp
sub
sub
cmp
test
enter
xor
ds
int3
lcall
cmpsb
sub
add
js
xor
fistpl
sub
cmc
pop
or
push
push
mov
mov
sub
mov
jle
int
adc
outsl
xorb
add
xchg
jno
mov
cmp
addr16
inc
mov
insl
fsubr
in
testl
notb
push
icebp
jno
mov
dec
test
mov
lret
inc
mov
lahf
loop
je
stc
hlt
inc
in
xchg
add
push
data16
mov
pop
jnp
out
inc
jmp
add
cmp
push
sub
ljmp
gs
and
pop
loopne
adcb
xchg
xor
pop
stc
adc
pushf
js
push
lcall
repnz
cmp
fwait
mov
subl
pop
mov
sahf
push
pop
sti
and
xor
mov
jmp
dec
inc
push
stos
inc
mov
sbb
rcl
dec
les
div
fdivrs
int
xchg
stc
movl
imul
pop
cli
mov
inc
push
insb
mov
aas
lods
xchg
mov
dec
cmp
je,pn
add
xlat
imul
std
rcr
cwtl
cmp
mov
addr16
pop
xlat
fneni(8087
mov
mov
push
lock
pop
mov
inc
lcall
sbb
xchg
orl
mov
dec
daa
mov
push
fcompl
sub
or
gs
xor
iret
ret
sub
pop
mov
sub
pop
mov
jp
cmp
out
ret
mov
xlat
sbb
clc
xlat
outsb
rclb
dec
mov
popa
hlt
in
lods
lods
pop
push
popf
mov
jg
aas
xchg
mov
jb
paddb
scas
add
dec
cmp
cmpsb
xchg
ror
test
push
dec
xchg
cmp
filds
out
pop
pop
in
sub
push
insl
add
inc
inc
add
jae
shll
cmp
dec
or
fisubl
mov
jecxz
and
cmp
dec
and
outsl
inc
lahf
hlt
jae
das
jne
fwait
mov
dec
adc
inc
jne
mov
mov
subl
cli
push
bound
lcall
into
lret
hlt
out
addr16
sub
popf
and
ljmp
jp
adc
mov
sbb
mov
mov
jle
shrb
jo
lods
pusha
scas
xor
fildll
gs
in
data16
or
filds
adc
popf
test
mov
and
cmp
lret
and
mov
jnp
sub
icebp
push
rcr
ficoml
add
dec
ret
sbbl
push
inc
adc
jae
mov
inc
pop
loope
or
add
ret
xchg
sbb
sub
xchg
sub
scas
int
xchg
movsl
test
lds
or
repnz
stos
push
leave
je
in
hlt
insb
sub
arpl
call
jge
push
data16
and
or
pop
add
enter
sub
lods
stos
dec
xor
out
call
and
xorl
push
ret
cmpsb
inc
sbb
dec
xor
mov
imul
test
sbb
or
push
in
xor
add
and
sub
ret
test
push
int
inc
imul
pop
scas
in
and
push
cmp
push
adc
sub
gs
xchg
jne
mov
inc
adc
sbb
inc
sub
aam
mov
mov
add
ss
push
mov
sbb
repz
inc
sub
pusha
popw
xchg
pushf
lcall
mov
sub
loop
test
repz
xchg
test
repnz
and
cmp
neg
movsb
mov
test
loopne
shr
jle
movsb
sbb
into
test
scas
cmc
push
das
sti
xor
movsb
aad
inc
cmpb
lcall
negb
sahf
lods
sub
mov
lods
xchg
out
in
cli
sub
cmp
or
xchg
add
loopne
pop
icebp
pop
out
mov
imul
xchg
add
lods
movsl
xor
sbb
and
and
sub
push
in
or
dec
sub
rclb
mov
inc
sahf
int
loope
les
dec
sbb
out
in
or
shll
movl
insb
mov
cli
fistpl
jmp
ret
push
repz
incb
xor
aas
dec
jp
jb
rorb
adc
jecxz
cmp
sub
movsl
mov
cwtl
repz
cmpsb
mov
das
roll
mov
rorb
mov
call
jbe
idiv
lds
stc
sbb
and
imul
imul
test
cmpsl
sahf
jmp
mov
sub
pop
lret
aam
sub
sahf
push
mov
cmpsl
xor
shrb
add
out
push
aam
popf
mov
xor
rcr
ret
sar
xlat
sbb
shl
popa
or
or
inc
out
loop
adc
pop
gs
cvtdq2ps
add
repnz
js
scas
test
push
sub
xchg
xchg
adc
icebp
test
or
xchg
out
rorl
mov
add
jp
push
repz
les
pop
or
mov
out
xor
cwtl
push
mov
idivb
mov
adcb
and
fmuls
mov
inc
or
mov
fwait
mov
mov
jne
inc
mov
out
into
in
bound
inc
shl
jecxz
jbe
sbb
cmp
pushf
inc
mov
addr16
out
cld
jp
jmp
mov
in
mov
nop
test
out
in
in
sub
dec
fisttps
cmp
jmp
lods
hlt
xor
push
push
xlat
mov
mov
pusha
mov
stos
cmp
xor
xchg
jnp
repz
fucomi
out
sbb
stos
adc
add
iret
push
nop
push
ret
movsl
pop
movsb
int3
inc
sbb
dec
addb
rorb
jg
mov
fcmovu
cli
and
push
cmp
insl
fidivrs
mov
rolb
inc
bnd
leave
jmp
push
mov
mov
outsb
mov
sarl
jle
sbb
gs
mov
or
xor
xor
cmp
fs
mov
sbbb
bound
nop
mov
xor
inc
rcll
xchg
testb
push
xlat
out
cmpsb
repz
push
adc
cmpsb
in
xor
lret
test
cmp
into
mov
dec
mov
ds
inc
int3
movsl
pop
xchg
fisubs
adc
int3
lahf
mov
mov
test
jmp
adc
cmpsl
fwait
clc
pop
shrl
mov
pop
pop
adc
aaa
push
sbb
loope
cmpsb
test
jb
cmp
xor
adc
hlt
in
or
sbb
in
and
push
in
int
mov
lods
pop
push
pop
clc
lcall
fiaddl
outsb
sub
sbb
and
mov
bound
mov
lret
imul
and
dec
daa
cmp
pop
sbb
idivl
sbb
roll
push
sbb
out
into
push
clc
ss
dec
je
ds
pop
stc
bound
aas
adc
shll
mov
lods
cpuid
or
jge
adc
imul
cmp
mov
dec
incb
xchg
nop
gs
and
jno
pop
push
pop
lret
ss
adc
fmul
add
or
pop
mov
xlat
dec
popa
sub
add
jl
sti
in
je
xlat
sti
sbbb
lea
movsb
nop
dec
enter
imul
mov
lods
flds
adc
repz
pop
fidivrs
push
lea
call
add
test
xor
pushf
movsl
sarl
std
dec
std
pop
or
out
adc
lret
pop
aas
ljmp
dec
daa
int
je
xchg
dec
jecxz
push
cmp
js
mov
cwtl
scas
stos
dec
mov
imulb
mov
divps
fcomp
ds
mov
leave
ss
xor
cmp
mov
or
jbe
sarl
lods
movsl
insl
sub
dec
mov
loopne
popf
push
mov
icebp
add
mov
inc
fcmovnbe
mov
fstp
jmp
pop
pop
aaa
sar
jns
sub
mov
icebp
ret
mov
pop
rcr
jmp
shl
xchg
das
call
shll
lret
leave
lods
das
sub
out
inc
jecxz
xchg
das
push
aam
loop
jmp
mov
pop
outsb
cltd
scas
push
std
test
cld
add
mov
movl
gs
xor
xchg
scas
and
jp
jmp
mov
imul
xorb
imul
nop
loope
mov
imul
sbbl
cmp
fwait
lahf
dec
or
out
inc
int
lahf
or
lds
dec
fidivl
mov
mov
inc
xor
lods
add
ds
push
in
fsubrs
xchg
insb
jb
out
subb
mov
xchg
lods
outsb
addr16
repz
xorl
pop
aad
mov
lcall
mov
adc
shl
jle
inc
pusha
in
push
xchg
xchg
inc
jle
sti
fwait
xchg
mov
ret
pushl
mov
lahf
or
stos
mov
mov
or
fs
sub
ret
jnp
jl
scas
ds
popa
enter
nop
iret
mov
pushf
ret
fistps
movsl
stc
inc
sub
out
pusha
sbb
or
cli
and
lds
popf
ficoml
jge
sbb
sahf
xor
ficomps
popf
lds
inc
cmpsb
mov
adc
add
add
js
lcall
sbb
loop
outsl
sub
or
and
rcr
ror
add
pop
jmp
push
jae
fidivs
pushf
das
pop
scas
lds
and
dec
and
lcall
sbb
push
mov
jno
popf
mov
cmp
or
dec
sti
push
stc
jnp,pt
jle
pusha
test
and
inc
push
push
pop
pop
push
mov
dec
inc
xchg
push
push
pop
std
sahf
sbb
dec
fists
dec
repz
mov
sub
push
jl
in
jbe
ja
es
iret
testb
xor
sbb
je
dec
aas
mov
scas
add
repnz
push
add
cmp
rorl
pop
test
lcall
faddl
pop
outsl
sahf
addr16
pop
test
test
jg
repz
loopne
fbstp
cmp
ss
enter
inc
fcomps
adc
idivl
pop
pop
lret
adc
sbb
cltd
mov
push
sbb
fistl
into
dec
repz
xor
add
loop
cmp
stc
sbb
fs
into
adc
clc
lods
test
mov
int
out
pop
push
cli
pushf
aas
daa
xor
sbb
or
dec
lock
and
push
sbbb
mov
xchg
pop
cmp
push
fs
jp
add
mov
xchg
jnp
sbb
lcall
sub
sub
fists
mov
lock
aad
inc
add
es
repnz
popa
and
inc
les
les
repnz
loope
pop
lea
in
xchg
movl
fs
push
lahf
ret
jmp
popf
dec
pop
mov
jp
jmp
inc
inc
scas
jp
aas
mov
jb
fwait
add
and
je
pop
mov
add
dec
idivb
test
and
dec
std
test
sbbl
push
les
mov
out
lock
scas
jno
mov
stos
mov
addr16
pushf
roll
testl
adc
shlb
or
jae
fsts
xchg
lret
mov
and
or
push
and
stc
repz
shll
leave
sub
clc
aam
scas
dec
ret
dec
xor
fs
adc
clc
mov
xchg
outsb
pop
mov
popa
cmp
pop
lods
lcall
out
test
cmc
xchg
jbe
and
mov
sarb
cltd
out
xchg
test
and
xchg
imul
xchg
cmp
clc
ret
inc
sarl
ret
stos
mov
lret
push
cmp
push
add
insb
jb
xor
fisttpl
pushf
sub
xor
jle
mov
lods
cli
lea
clc
inc
cmp
ret
push
dec
std
pop
push
inc
test
or
stos
xchg
fwait
sbb
loope
mov
mov
daa
out
mov
or
addb
stc
mov
xchg
mov
cmp
dec
or
jnp
jp
mov
mov
jmp
leave
mov
bound
or
in
ret
lret
sbb
xchg
data16
jmp
insb
call
mov
popf
cli
mov
mov
test
stos
and
leave
insb
xchg
mov
jnp
lret
mov
roll
iret
adc
sbb
dec
ret
pop
pop
xchg
dec
dec
inc
xor
jp
arpl
or
jne
sub
push
ja
inc
xor
xor
clc
imul
add
lds
cmp
mov
push
sub
dec
inc
push
arpl
cmp
jg
sbb
iret
add
jb,pn
or
mov
jle
mov
pop
add
test
xor
divl
cmp
mov
data16
movsb
mov
add
or
lods
dec
jns
pushf
sbb
mov
jecxz
jl
jbe
push
mov
sahf
in
movsl
fimull
aam
lahf
hlt
mov
push
cmp
outsb
test
jg
sti
inc
push
fsubl
sub
dec
pushf
js
and
push
inc
pusha
loope
lock
cmp
loope
adc
stos
sbb
xor
push
sbb
push
mov
add
cmp
sub
sub
jnp
add
in
shrl
enter
inc
fdivl
add
sahf
or
dec
andb
cmpl
sbb
mov
mov
add
jbe
dec
les
fcom
mov
or
sub
scas
pop
mov
xchg
lcall
mov
xor
jmp
loop
loop
stc
shlb
fs
loope
data16
mov
mov
mov
xchg
cli
iret
fdivrs
inc
pop
cmp
mov
or
scas
mov
mov
pop
aas
or
push
lods
aaa
imul
imul
pop
pusha
ficoms
mov
cmp
and
sub
add
and
dec
rcr
fdivrp
in
cs
inc
add
lret
jle
nop
add
pop
dec
rcr
inc
xlat
sar
scas
ficoml
adc
rol
rcrl
xor
inc
pop
sahf
jo
adc
fists
jmp
mov
pop
push
sub
jb
cmovo
cmp
clc
jb
mov
je
sti
add
adc
idiv
and
lcall
mov
mov
mov
insb
stos
xorl
mov
fdivs
movsb
cmp
das
xchg
inc
add
push
jno
and
rcll
pop
es
fiadds
insl
notl
cmp
sub
mov
movsl
cld
fdivr
imul
das
es
and
xchg
stc
mov
add
sub
movsb
or
sub
mov
aam
xor
test
es
aaa
jnp
clc
ret
xchg
xchg
lods
fisubl
popa
push
cmp
lods
add
push
imul
or
jge
cwtl
mov
vmread
and
cld
int
cltd
sbb
test
xchg
adc
inc
aad
sbb
cwtl
push
pop
push
dec
sahf
stos
ja
negb
fdivrl
cmc
add
mov
pop
or
mov
mov
out
sub
mov
mov
mov
dec
lock
inc
sti
push
fmuls
fs
fwait
dec
aaa
and
push
aas
jne
arpl
mov
push
sub
imul
bound
cld
jns
adc
out
or
cmc
out
insl
sub
mov
xor
test
mov
and
mov
xchg
pusha
jle
or
punpcklbw
out
fucomip
ficompl
cmp
jo
jmp
add
andl
pop
popf
and
mov
sbb
xlat
push
and
stc
iret
insb
add
jnp
fcoml
add
jmp
adc
push
iret
outsl
mov
push
pop
lret
xchg
xor
loop
jl
sub
and
push
ret
lock
fisttpl
xchg
mov
xchg
fidivs
fisubs
dec
rcl
add
mov
idivb
arpl
cltd
out
outsb
push
xor
orb
in
ds
or
in
int3
jne
sbbl
loopne
loopne
dec
jo
dec
cli
scas
adcl
cmp
mov
push
jb
cmpsb
dec
xchg
mov
ljmp
daa
fwait
pop
scas
cmp
icebp
push
jno
and
jl
fiaddl
fldcw
lock
outsb
xchg
repz
arpl
adc
push
push
push
ljmp
cwtl
rolb
cmpsb
push
lock
dec
loope
js
xchg
jmp
int
xlat
push
imul
cmp
and
cmpsl
xchg
adc
test
cmpsl
scas
mov
add
jg
add
jbe
xor
fcmovnb
int
fisubl
pop
add
lcall
jno
fcmovnb
mov
sahf
lods
sbb
test
xchg
repz
pop
jns
xor
mov
sbb
and
idivl
nop
shll
or
nop
lods
roll
mov
je
pusha
or
gs
jno
inc
xor
loope
outsl
fisttpl
lcall
pop
out
fs
clc
dec
adc
sbbl
lods
xlat
data16
cmp
lret
cli
add
or
cmp
in
test
adc
sub
gs
sbb
xor
pop
jnp
sbb
and
cltd
adc
mov
add
jnp
xchg
add
cmp
mov
xlat
mov
push
dec
mov
mov
add
lea
cs
scas
aad
and
nop
fadd
out
pop
mov
pop
jne
les
out
repz
fcmovb
out
jae
mov
jg
lods
add
movl
dec
cltd
pushf
cmpsb
mov
jmp
mov
inc
stc
and
inc
in
das
aas
movl
mov
fs
ss
inc
stos
sar
inc
push
sub
int3
xchg
aaa
mov
xchg
lds
imul
mov
jle
mov
cmp
das
jae
mov
aad
xchg
and
adc
movsl
adc
adc
push
dec
movsl
int3
lods
cmpsl
lcall
icebp
xchg
sbb
add
nop
loopne
mov
repnz
pop
and
rcl
ja
or
aam
adc
ret
insb
lds
fstpl
in
aas
aam
in
sbb
ljmp
lret
lods
jo
push
out
outsb
inc
rcll
clc
pushf
push
and
movq
cltd
push
ss
test
cmp
lods
xchg
xor
dec
ret
pushf
cmp
in
jne
xchg
xchg
enter
mov
push
lds
jno
pushw
sbbl
mov
add
lret
add
movsl
xor
pop
or
mov
mov
xor
ss
outsb
mov
ja
lahf
dec
dec
jecxz
roll
inc
xchg
or
repnz
xorl
mov
mov
imul
out
dec
pop
jmp
mov
shl
pcmpgtb
pop
ljmp
cmp
addr16
pop
fidivrs
push
sub
scas
sbb
dec
jae
jle
add
in
jmp
adc
or
stc
xchg
or
inc
jmp
add
xor
push
jecxz
and
mov
pop
push
xchg
stos
or
pusha
and
out
imul
scas
and
push
repz
or
ret
negb
sbbl
dec
pop
jmp
imul
push
inc
adc
fisubrl
xchg
sti
sbb
mov
in
inc
lds
inc
shl
sahf
mov
push
push
adc
gs
hlt
jecxz
inc
arpl
pop
daa
jge
adc
lods
pop
or
or
add
dec
pop
arpl
push
sbb
mov
jo
repnz
scas
bound
jns
xor
leave
push
dec
lds
cmpsb
rcll
sbb
shrl
pop
daa
lcall
jno
mov
jl
mov
dec
dec
add
in
shld
mov
lahf
xor
leave
push
loope
cmpsb
test
adc
mov
mov
jg
jb
loopne
pushf
xchg
rcll
or
mov
movb
jb
mov
lock
icebp
push
mov
mov
lcall
push
repz
sbb
adc
ljmp
push
int
push
mov
sub
mov
aaa
lea
xchg
sbb
sub
pop
sahf
push
stc
test
shll
pop
cmp
jg
sbb
sub
mov
fidivl
jne
ss
in
pop
xor
jbe
idivl
inc
lret
vpaddusw
push
mov
sub
sbb
push
dec
cmc
cmp
xor
outsl
mov
rclb
fs
xchg
adc
outsb
shrl
add
out
jno
cli
xor
clc
aam
stc
cltd
or
push
loopne
fwait
adc
xor
imul
dec
outsl
add
lods
xchg
les
inc
cmp
pushf
xlat
sti
aas
xor
ret
mov
and
adc
sbb
outsb
nop
mov
cld
dec
jle
mov
mov
inc
les
mov
ljmp
call
add
rcrl
add
mov
fistpl
and
or
inc
incl
inc
add
dec
add
fdivs
pop
jecxz
pop
cmp
test
and
mov
sub
arpl
dec
push
cmp
cli
ficoml
mov
cmp
das
push
mov
mov
mov
and
test
hlt
xchg
xchg
insl
lds
dec
mov
ret
mov
mov
lret
call
mov
stc
cwtl
mov
inc
cmp
sub
ds
ret
sti
jne
push
adc
imul
ljmp
subl
clc
xor
push
dec
dec
or
ss
lods
add
fs
cltd
mov
imul
jge
dec
sub
test
inc
popf
xchg
sbb
ret
stos
rcrl
in
stos
push
xchg
popa
push
and
addl
sub
or
add
xor
jne
add
mov
imul
insl
ja
push
imul
ljmp
push
add
data16
popf
jne
adc
pop
out
sub
nop
jns
sub
xchg
test
out
sub
sub
jg
shlb
push
mov
cld
add
sbb
sahf
jmp
in
xchg
xchg
pusha
push
mov
fildll
rcrl
xchg
fbld
jmp
int
inc
cmpl
sub
mov
fwait
sbbb
mov
jmp
mov
push
jge
js
and
dec
daa
ret
insb
pop
cmp
jl
push
mov
jae
dec
test
or
out
push
inc
shll
xchg
aaa
aaa
push
imul
mov
ljmp
rorb
repnz
push
jo
jns,pt
hlt
cs
into
arpl
scas
mov
aaa
imul
mov
push
int3
dec
data16
pop
xchg
pushf
hlt
push
cmp
xor
or
mov
cmp
mov
movsb
pop
add
shlb
mov
pop
in
daa
cltd
insl
adc
cmp
int
dec
adc
les
dec
mov
out
ds
jl
movsl
jl
or
sbb
mov
test
loopne
mov
ret
pop
sbb
jbe
ficomps
mov
js
sub
pop
dec
lock
push
int3
stos
loope
in
pop
sub
and
outsb
add
or
cmp
or
sub
std
add
mov
or
mov
mov
lcall
in
xor
cli
sahf
repz
sub
lds
xorb
jg
mov
xor
fstl
sbb
pop
pop
lahf
cmp
push
mov
mov
shll
es
sbb
push
cmc
mov
dec
outsl
cltd
push
nop
loop
pop
cmp
push
cmp
pusha
movsl
sub
rorb
mov
mov
cld
sub
js
push
mov
out
fiaddl
repz
scas
sti
mov
loopne
sbb
adc
loop
imul
cmp
add
jg
xchg
xchg
aaa
sbb
xchg
shrb
ss
pusha
mov
mov
loopne
jl
mov
jge
dec
inc
adc
stos
les
mov
sbbl
push
call
sbbb
mov
jle
jecxz
into
pushf
cld
adc
adc
mov
inc
pop
lea
aas
add
rorb
loopne
je
mov
test
in
xchg
sub
dec
inc
iret
mov
cld
push
cmp
inc
xchg
fldt
sbb
lock
subb
mov
mov
inc
mov
roll
cmpsl
es
mov
dec
fwait
push
cmpsl
cwtl
jns
mov
xor
les
outsb
or
inc
and
addb
jl
rcrb
jb
aam
shll
fsubs
pop
loope
push
add
jb
mov
xchg
in
lret
lods
inc
push
mov
xor
hlt
xchg
xchg
js
push
sub
scas
add
stos
addl
cmp
dec
xchg
pop
pop
test
movsb
fs
lahf
es
out
pushf
rcrl
ljmp
inc
in
push
lds
add
add
dec
pop
cmc
xor
mov
xor
cmp
mov
mov
or
pop
in
xor
mov
dec
leave
adc
inc
rclb
fwait
aad
lret
or
jne
add
out
or
xchg
jns
stos
mov
xchg
idivl
enter
ds
jp
into
addr16
ret
mov
mov
mov
rorl
ror
in
lahf
scas
pusha
in
mov
scas
xchg
mov
jl
into
loop
xchg
cwtl
dec
push
orl
push
imul
ret
push
stos
out
mov
and
or
sbb
test
adc
call
fwait
iret
mov
aam
cltd
and
pop
jo
rolb
jae
jp
inc
outsl
adc
or
xchg
push
inc
ficoms
ficoml
adc
xchg
mov
cmp
push
repz
and
fimuls
inc
cmpsl
shlb
and
aam
add
mov
leave
mov
out
hlt
jns
sti
arpl
stc
sub
cmp
jge
xor
sbb
mov
mov
jmp
pop
shll
xor
arpl
pop
and
arpl
lahf
xor
mov
cmpsb
xlat
jo
in
lahf
sbb
enter
daa
cwtl
out
cmp
push
jno
mov
push
dec
es
sub
popf
and
jle
push
xchg
lahf
test
stos
mov
cmc
cmp
mov
shl
js
push
int
mov
push
or
sub
daa
pop
cmp
in
outsb
scas
ds
push
ja
pop
test
cmpb
push
sbb
in
ret
xor
loope
push
adc
int
push
sub
insl
pop
pop
add
ficompl
inc
xchg
or
sub
push
sahf
xchg
dec
add
orb
es
mov
mov
nop
mov
and
out
adc
cmp
rcrl
lret
jge
or
mov
xchg
dec
sbb
push
cmp
cmc
loopne
xor
sub
outsl
js
pop
loop
xchg
imul
jmp
mov
pop
testl
mov
cmp
out
mov
xor
aas
pop
cmp
nop
jbe
bound
ja
rclb
movsl
sub
pop
fdivs
pusha
adc
mov
add
es
sub
dec
cmp
in
xlat
jns
xchg
sub
xor
in
divb
adc
filds
jge
insl
ja
dec
cmp
pusha
inc
and
stos
les
repz
in
shufps
jecxz
mov
ja
incl
pop
push
sub
cmp
pushf
cmpsl
add
push
pop
ffreep
into
inc
mov
mov
xor
inc
jb
lret
adc
imul
or
in
mov
mov
fistl
mov
aas
sub
sub
sbb
pop
pop
mov
cwtl
dec
outsb
lock
das
adc
dec
mov
cli
xchg
xchg
cmp
es
mov
insl
xchg
movsl
or
xchg
stc
lods
cmpsl
xchg
mov
mov
or
sar
test
sbb
mov
xchg
fsubs
add
shl
cwtl
shrb
push
jmp
nop
cwtl
add
sbb
std
fst
out
clc
scas
loopne
xchg
test
into
ljmp
pop
popa
mov
xchg
cmp
push
add
pmuludq
add
jecxz
stc
ficoml
test
test
adc
dec
clc
xchg
lods
test
lcall
ja
jae
outsl
dec
jle
mov
lahf
stos
xor
rcrl
push
xchg
or
sbb
cmc
ljmp
pop
xor
push
push
or
jge
xor
jge
mov
sti
jae
mov
lahf
inc
sbb
inc
test
mov
icebp
outsb
or
xchg
ds
add
outsb
dec
sub
cmp
stos
push
sbb
out
enter
test
in
jecxz
xchg
inc
stc
out
mov
sub
jne
lahf
addr16
aam
mov
sbb
das
cli
enter
ss
cltd
jnp
test
dec
pusha
xchg
lods
fbld
test
test
or
arpl
sub
sub
mov
mov
add
push
sbb
and
xchg
test
ja
repnz
nop
adc
or
dec
adc
jnp
iret
jmp
fs
sahf
pop
cmpsl
and
push
loop
mov
mov
and
xchg
aad
mov
mov
xchg
in
jmp
imul
enter
insb
icebp
rolb
mov
pop
and
inc
hlt
les
out
sub
cmp
cltd
push
aaa
jmp
inc
sbb
int3
and
jmp
lds
fs
imul
cmp
shlb
push
movsb
cmpsb
pop
dec
imul
xchg
mov
popf
cmp
cld
jl
xor
dec
xchg
xchg
sarb
dec
movsb
inc
movsl
mov
dec
push
lahf
popl
push
pop
add
hlt
push
jbe
jbe
loope
cld
test
repz
adc
leave
xchg
pop
jmp
loope
lahf
pop
sub
add
incb
jnp
leave
inc
push
adc
icebp
decl
aad
adcb
sbb
mulb
push
adc
daa
int
sub
pop
jg
mov
fwait
or
faddl
lods
pop
sahf
cmp
testb
fs
mov
out
mov
std
xchg
and
adc
popf
pop
inc
cmp
jl
cmpsl
idivl
cmpb
dec
jbe
cld
mov
into
popf
ficomps
xor
out
outsl
push
mov
loop
ds
stc
arpl
fs
in
adc
xor
lods
pusha
xchg
and
jbe
add
into
bound
into
sbb
or
das
ss
cmc
popf
dec
lods
dec
or
push
dec
sbb
mov
jg
shrl
add
gs
cld
enter
mov
out
mov
popa
addb
cwtl
enter
notl
fwait
leave
sbb
fld
dec
mov
repz
test
repz
lea
sbb
jle
mov
mov
pushf
push
leave
jno
xchg
test
adc
cmp
jb
or
je
xor
div
dec
push
and
frstor
cwtl
lret
pop
xchg
shlb
repz
aas
xor
xchg
mov
out
lock
out
cmova
mov
or
orl
es
test
and
dec
xchg
xor
jae
mov
jecxz
mov
lret
dec
dec
repz
push
cli
mov
lahf
or
rol
jle
sub
ret
pop
test
pop
push
pop
mov
aad
ljmp
ljmp
loopne
sbb
push
mov
cli
lret
and
jp
push
jle
add
imul
mov
cmp
pop
mov
test
and
mov
cmp
rol
aam
pop
pop
pop
ss
and
inc
push
or
test
xchg
fwait
out
aaa
ds
or
loopne
es
or
movsl
xor
adc
mov
call
adc
pop
cld
fidivs
xchg
out
jb
or
jb
fwait
xor
orl
fwait
jne
or
es
or
bound
cltd
cmp
cmp
pop
out
or
jo
jecxz
idivb
jp
hlt
mov
mov
or
xor
scas
in
pusha
and
push
xchg
pop
and
jmp
jnp,pn
subl
out
out
nop
popf
in
dec
mov
pop
jle
aad
pop
and
xchg
in
jnp
mov
scas
repz
movsb
push
push
dec
adcb
xchg
cmp
dec
mov
ret
mov
inc
jne
in
xchg
mov
fnstenv
push
add
add
xchg
cmp
ficomps
jp
imul
cmp
shll
dec
lds
rcrb
mov
pop
jle
leave
mov
push
cld
arpl
loope
jbe
out
jge
jecxz
sbb
shlb
test
dec
or
adc
cmp
or
adc
sub
push
test
xor
sbb
fisubrs
and
jmp
cmp
lcall
cmpsb
fstpl
call
daa
xchg
fs
jno
test
jl
pop
ret
dec
add
loop
jo
inc
movsl
xchg
adc
and
pop
cmpsb
lahf
scas
adc
push
sub
xor
inc
jo
and
mov
sbb
repz
or
mov
xchg
cmpsb
xchg
loope
bound
scas
out
lods
sbb
les
imul
subb
andb
int3
mov
fsubrs
add
push
cs
sub
subb
jae
lcall
push
xor
mov
sahf
test
insb
add
cld
jg
xor
mov
mov
mov
or
ss
mov
aaa
adc
lret
aam
cmp
mov
push
push
sbb
and
addb
cmc
push
dec
pop
xor
adc
xor
outsb
and
sbb
add
jle
mov
insb
or
in
jb
out
loope
cli
add
xor
jbe
or
insl
sbb
out
gs
xor
out
add
jp
inc
in
dec
imul
add
shrb
sbb
aaa
inc
aas
xlat
div
dec
sub
shr
int3
and
sti
clc
sub
movsl
push
sbb
jne
nop
and
cmpsb
inc
dec
es
fyl2xp1
sbb
jp
add
imulb
lea
or
std
movsb
sub
adc
adc
xchg
daa
pushf
std
pusha
jbe
jne
icebp
pop
and
fwait
pop
inc
imul
pop
arpl
jle
dec
fildll
je
or
notb
push
std
cwtl
xchg
aaa
mov
pushf
dec
mov
loope
cmpl
inc
rorl
es
imul
repz
pop
and
shrl
add
lahf
push
in
insl
popa
xchg
dec
mov
andb
hlt
xchg
icebp
mov
dec
lret
mov
ret
cmc
and
ss
pop
rclb
clc
aaa
aam
inc
or
aaa
loopne
push
and
sub
and
adc
popa
mov
lods
pop
out
pop
dec
int3
xchg
xlat
ret
jb
shl
add
cmp
pop
shll
pop
sub
test
inc
dec
xchg
jo
rcrl
test
stos
adc
push
scas
shrl
add
adc
test
shll
fisttpll
xor
sti
test
adc
pop
mov
rcrb
pop
adc
dec
pop
dec
mov
sbb
or
and
fwait
clc
dec
repnz
lcall
pop
out
out
movsl
inc
sub
jns
add
ds
in
fucom
pop
push
mov
or
dec
addr16
mov
icebp
mov
fs
mov
pusha
jle
sbb
push
mov
mov
repz
mov
xchg
xchg
stc
mov
push
mov
imul
rep
push
xchg
cmp
stos
dec
loop
and
pop
lods
insb
andb
jnp
pop
ds
push
sbb
jns
xchg
mov
bnd
insl
pop
adc
jge
jae
test
inc
js
mov
push
mov
lcall
push
jl
imul
jns
jbe
into
out
js
jle
mov
into
repnz
or
hlt
pop
push
xor
mov
jge
adc
aaa
addr16
or
pop
ror
testl
xchg
push
mov
test
je
ret
scas
mov
xor
cmp
or
mov
push
push
fcomps
pusha
bound
push
outsb
test
mov
bound
xchg
imul
jno
popf
push
jl
push
ret
dec
jae
mov
movsl
cwtl
and
and
cmp
test
or
fwait
inc
stc
push
sbbb
js
dec
mov
inc
sub
out
in
or
repz
outsb
dec
or
cmpsl
dec
adc
ja
pop
sbb
mov
pushf
xor
scas
push
sbb
dec
stc
es
sub
mov
lcall
jg
fstpl
and
loope
imul
and
iret
mov
shrb
and
pop
cmp
repnz
xchg
sbb
inc
mov
in
outsb
sbb
jecxz
arpl
and
xor
sub
outsl
adc
ss
sarl
xchg
pop
adc
jne
mov
dec
cli
mov
insb
je
je
mov
xor
cmp
cmpsl
aam
scas
lcall
mov
ror
pop
xor
scas
xchg
imul
mov
xchg
xchg
mov
stos
cmp
dec
xlat
cmpsl
push
sub
cmp
xchg
in
aaa
cltd
scas
sti
cmpsl
cmp
or
add
pop
jbe
inc
pop
ret
xor
jne
mov
lahf
data16
repz
adc
and
jl
pop
pop
orl
aas
fdivrs
pushf
test
out
lods
xor
mov
imul
lods
aas
subl
push
fisubrs
add
fs
and
sub
ss
ret
sbb
mov
test
dec
in
mov
frstpm(287
pop
pop
mov
mov
dec
sahf
lock
das
lods
jge
mov
pop
push
add
js
sarl
dec
es
adc
into
dec
xchg
cmpsl
xchg
jge
mov
xchg
idivl
lret
sub
test
mov
sbb
aam
adc
ret
in
push
in
xor
dec
push
fwait
clc
pusha
mov
xchg
imul
push
icebp
sub
mov
rol
xchg
scas
imul
add
inc
cli
test
push
push
and
xchg
mov
dec
sub
repnz
je
test
dec
stos
add
push
push
push
addb
movsl
fdivr
add
pushf
decl
call
or
xor
cmp
mov
les
mov
shrb
or
or
inc
sbb
or
stos
push
fwait
xchg
push
mov
jne
cmpsb
push
mov
jp
out
test
dec
mov
jns
push
push
push
lahf
xchg
xor
jo
loop
aaa
sub
rolw
dec
pushl
mov
xchg
imul
mov
mov
push
xchg
mov
sete
test
mov
push
jne
jno
xor
mov
xor
stos
mov
addr16
insb
in
and
inc
sti
scas
mov
cmp
addr16
or
in
out
dec
test
mov
adc
jnp
fs
dec
sahf
loop
cmp
data16
das
gs
ljmp
imul
ja
sbb
rclb
mov
leave
xchg
jbe
hlt
movsl
movsl
arpl
shll
gs
jge
and
sbb
dec
ljmp
jb
int3
loop
je
jge
add
xor
iret
xchg
gs
pushf
fcomi
and
push
cmp
insb
movsb
adc
sti
push
daa
inc
jecxz
jecxz
fucomi
cmp
es
xchg
repnz
cmp
xchg
fimuls
add
ds
xor
lahf
lcall
in
mov
push
shll
mov
inc
mov
xchg
xlat
and
dec
push
adc
loope
mov
dec
cmp
xchg
outsb
repnz
sub
adcb
popl
xor
mov
pop
sbb
shufps
mov
cmp
lcall
jecxz
pop
cld
and
imul
lcall
xor
pop
cmp
jge
cwtl
rcrl
mov
mov
mov
jp
mov
aaa
cmp
sub
ss
lock
lods
scas
div
cmpsb
mov
shll
mov
fldt
inc
xor
xor
pop
add
stc
mov
adc
ljmp
subl
cli
repnz
push
jg
cmp
lods
inc
or
testb
pop
aaa
aad
rorl
loopne
mov
pop
push
jo
adc
mov
call
lret
shrb
sbb
lods
ljmp
jne
or
mov
or
aad
jns
nop
fldenv
aaa
dec
mov
xchg
mov
movsb
mov
nop
les
cld
inc
and
or
adc
jge,pt
xchg
inc
cs
push
or
jmp
loope
pop
imul
inc
mov
xorl
dec
scas
insl
jecxz
loop
notb
push
adc
rolb
cwtl
cld
fdivs
mov
outsb
dec
mov
sub
fistl
insl
mov
jle
mov
arpl
jl
sbb
mov
mov
and
jb
ror
aad
movsl
ret
das
stc
and
cmpsl
xchg
enter
or
icebp
push
lahf
lods
lret
cltd
arpl
inc
xchg
xchg
and
insb
idivb
pop
cld
std
loopne
cmp
in
sub
xchg
ret
push
sub
clc
cltd
clc
fwait
jns
xchg
movsl
inc
cld
ljmp
dec
lods
pop
pop
mov
and
xchg
xchg
cmc
pop
repnz
jo
and
add
into
test
sbb
sbb
pop
add
xchg
inc
adc
inc
imulb
lret
inc
imul
int
hlt
and
add
mov
mov
xor
jo
or
scas
xchg
xor
lret
das
add
push
mov
mov
dec
mov
or
add
fwait
rclb
jne
mov
out
arpl
imul
and
add
cmp
or
inc
addr16
jp
xchg
xchg
mov
out
scas
mov
push
or
push
pusha
repz
sbb
shll
dec
xchg
mov
sbbl
popa
push
cmp
sub
adc
fldt
insb
pop
mov
push
scas
sbb
cmc
push
daa
int
adc
iret
addr16
push
ret
pop
pop
sub
inc
xchg
fistl
hlt
outsl
js
jle
and
push
mov
enter
mov
jns
xchg
inc
add
pop
imul
and
mov
and
scas
dec
mov
push
ret
or
hlt
lock
outsl
arpl
cmp
jbe
push
mov
cmpsb
sbb
sbb
xchg
aaa
in
inc
or
test
int3
int
int3
pop
lods
popf
jb
push
push
inc
xor
sub
add
jecxz
push
cmp
and
movsb
lahf
out
sub
jbe
and
ret
push
pop
daa
xchg
jmp
outsb
inc
shll
cmp
jl
lret
ret
dec
push
mov
fldenv
cmpsb
je
and
mov
push
cmpsb
cmp
test
mov
mov
pop
orl
pop
push
aam
loope
mov
sub
scas
popa
cmp
and
rcrb
rorl
popf
enter
and
add
mov
xor
sub
push
pop
add
mov
sub
inc
ss
movsl
fdivl
xchg
sub
xor
sahf
lds
test
in
mov
jg
stos
xor
xchg
out
mov
inc
push
ss
int3
fstp
push
mov
lret
enter
std
mov
jbe
into
sub
dec
cmc
test
mov
outsl
rcrl
xchg
stc
aas
mov
daa
adc
lods
xchg
lods
cld
xchg
jp
ficomps
out
pop
nop
cli
lcall
cmp
test
incb
ret
shlb
adc
jbe
adc
scas
fiadds
popa
call
negl
call
lahf
pop
sub
jmp
nop
in
or
pushf
in
cs
imul
nop
mov
mov
inc
adcb
les
mov
lcall
rcrl
jp
cmp
loope
adc
shlb
pop
shr
inc
flds
push
jg
inc
xor
ss
mov
cltd
insl
jb
adc
je
jle
jecxz
out
negb
push
std
jns
adc
mov
fdivs
sahf
sbb
icebp
pop
dec
ret
sub
inc
fdiv
mov
cmp
jnp
xchg
lock
lods
push
das
imul
mov
lea
es
mov
jns
sub
push
insl
push
or
cmpsl
xchg
xchg
sarl
mov
stc
lret
or
mov
push
in
sub
mov
sbb
rorb
push
in
jnp
pop
aam
mov
ret
in
pusha
push
push
inc
fstl
rol
xchg
in
jns
and
jg
pop
pop
dec
lods
enter
xchg
scas
cmp
xchg
inc
push
dec
bswap
jmp
add
push
jno
out
push
jmp
and
dec
sti
pop
lea
mov
inc
add
and
pop
or
sub
xchg
mov
roll
mov
cmp
inc
ja
leave
scas
xchg
mov
dec
inc
pop
mov
inc
scas
and
lods
out
jnp
jge
dec
loope
or
xor
dec
fwait
mov
jne
rolb
out
inc
cld
push
bound
movsb
jns
and
in
dec
inc
xchg
roll
sub
pop
add
sub
xchg
imul
add
mov
push
add
in
and
pusha
mov
inc
xchg
movsb
repz
jmp
pop
ret
test
gs
sti
add
popf
andb
mov
push
mov
stos
mov
lock
xchg
out
inc
scas
jg
adc
rclb
mov
gs
icebp
pop
mov
mov
inc
xorl
xor
inc
xchg
inc
cmp
push
xchg
cwtl
movsl
inc
sbb
jns
imul
xor
je
faddp
leave
add
repnz
jmp
leave
jg
add
cmp
arpl
loop
jbe
mov
jge
mulb
adc
movsl
out
or
add
pop
fisttpl
push
xor
test
ffreep
xor
test
mulb
jbe
fistpll
jmp
out
push
cmpsb
jmp
jp
lods
daa
xchg
nop
jbe
mov
shlb
icebp
inc
and
shlb
movsl
lods
mov
and
or
sub
push
jns
pop
imul
cs
insl
xchg
roll
mov
and
and
add
inc
push
dec
test
sub
or
stos
add
imul
or
cmp
insl
popf
mov
mov
dec
sbb
mov
icebp
push
and
and
sub
xchg
push
pop
cli
loope
lcall
xchg
mov
xor
test
in
xorb
stos
jg
xchg
mov
out
pop
mov
mov
out
add
ss
dec
adc
and
cmpsb
divl
lret
mov
dec
mov
xchg
into
or
cmp
jo
xor
jbe
mov
dec
loop
scas
inc
stc
testb
sub
push
sub
sub
rorl
jno
cltd
cli
int
popa
xor
ja
cmp
xor
or
clc
mov
movsb
popa
es
loopne
mov
pop
xchg
movsb
or
mov
cmp
inc
scas
adc
jmp
push
xchg
fsubl
sbb
and
dec
xlat
repz
sub
shll
js
dec
sti
mov
cmp
xor
sub
xchg
pop
push
nop
not
dec
jbe
addb
or
aad
pop
les
js
movb
or
sub
int3
stc
xchg
pop
pushf
cmp
pushf
test
xchg
cmc
pop
mov
sub
rcl
inc
xlat
sub
aas
pop
mov
jb
push
cmp
push
fidivs
outsl
jecxz
cs
pushf
rolb
and
les
orl
xchg
xchg
mov
sbb
or
fmull
inc
xlat
fwait
lock
adc
dec
inc
add
mov
jo
jmp
insb
mov
aam
std
cli
xor
cmpsl
xchg
ljmp
push
push
mov
lret
ja
in
mov
xor
mov
cmp
sub
movsb
aam
test
ret
jae
cltd
push
sub
ret
adc
mov
xchg
sub
lods
xor
mov
jmp
js
push
es
lds
cs
cwtl
add
jo
test
dec
in
and
or
cmp
sarl
cmpsl
pop
mov
or
cmp
add
mov
xchg
nop
xor
fdivl
or
jmp
out
stc
popf
mov
add
ja
cmpb
loope
das
or
xor
fwait
push
dec
push
dec
jle
xchg
jne
jnp
mov
dec
mov
bound
adc
and
in
mov
call
sub
push
test
addr16
pop
pop
jp
aam
mov
or
mov
aam
jle
test
shr
mov
sub
fbld
push
dec
xchg
ja
push
pop
mov
xorl
clc
push
mov
call
mov
stos
adc
inc
and
jmp
cs
int
or
lods
scas
loop
push
push
mov
rclb
ss
and
sahf
loope
icebp
stos
pop
inc
lods
mov
xchg
inc
fiaddl
jns
or
mov
imul
xchg
out
imul
imul
ds
pushf
shl
aam
sub
dec
dec
leave
mulb
hlt
xchg
jbe
mov
shr
xchg
arpl
cltd
add
addl
mov
divl
loopne
call
and
pop
out
mov
xor
push
adc
inc
cmpsb
insb
cld
jle
lock
shlb
xchg
movsl
and
aam
jb
add
jl
nop
scas
dec
das
pop
pop
std
call
and
dec
mov
push
dec
adc
in
jo
push
cmp
mov
test
pushf
cmp
scas
stos
jecxz
inc
stos
fldcw
ja
loope
push
xchg
jge
cmp
push
add
leave
sub
daa
std
mov
adc
pop
pop
add
sahf
sbb
xor
add
btrl
and
jae
xchg
aam
sub
incl
jns
cmp
movsl
rcrb
rclb
or
test
in
orb
jg
mov
pop
rorb
cmp
and
mov
das
inc
add
jnp
xor
out
cmp
sub
and
stc
sbb
out
sbb
xor
es
pushf
mov
adc
fldenv
sbb
mov
sbb
out
xchg
cli
add
mov
fsubrs
outsl
cmp
mov
or
push
inc
fs
push
jl
test
pop
mov
iret
adc
push
imul
sub
xchg
lahf
xchg
cmp
mov
xor
popa
mov
jecxz
pop
sti
arpl
jl
xchg
or
aad
call
xchg
call
inc
test
sbb
or
nop
les
cmpsl
insb
movb
push
call
js
test
dec
inc
jmp
fwait
pop
test
jmp
adc
cmp
fxch
inc
repnz
cmp
std
mov
and
aas
dec
xor
je
sbb
jecxz
mov
iret
std
sub
sub
xchg
xorl
rcrb
or
out
lock
das
sub
fnstcw
sti
push
cmp
mov
push
iret
insl
in
dec
jae
mulb
insl
ja
icebp
in
or
lret
out
or
cmp
lods
pop
pop
adc
or
aam
test
ret
add
adc
in
inc
clc
dec
ds
xchg
out
movsl
ljmp
lcall
test
xchg
lret
push
add
cltd
jge
xchg
inc
cltd
jp
std
test
adc
leave
or
test
orb
imul
shl
loopne
pop
xchg
stos
mov
les
add
fldcw
inc
testl
xor
mov
mov
shlb
stos
pop
mov
fdivrs
inc
js
xlat
or
or
dec
popa
mov
mov
mov
out
add
jns
shll
scas
xchg
outsl
adc
out
pop
sub
push
cltd
jp
lock
jp
test
inc
iret
pop
mov
mov
add
in
pop
stc
pusha
vaesdeclast
dec
xchg
dec
adc
rcll
inc
or
addl
mov
sarb
stos
xchg
mov
jnp
test
cld
rcrb
fadd
jne
test
or
xor
inc
mov
pop
jae
cltd
mov
or
cmp
and
cmp
pop
xchg
inc
push
or
lock
imul
loopne
andb
sar
pop
mov
dec
fidivl
leave
insl
cld
pmuludq
ss
inc
cli
dec
jbe
shll
fwait
push
jl
mov
add
and
fisttpll
jle
les
jle
xchg
int3
mov
mov
cmp
add
xor
cmp
xchg
scas
sbb
add
pushf
stos
pushf
cmp
imul
lea
xlat
jb
enter
daa
nop
ds
cmp
mov
jne
inc
mov
dec
sahf
push
cmp
inc
mov
movsl
mov
mov
lahf
push
dec
or
add
stc
inc
lret
push
in
loopne
clc
sti
fnstcw
jne
pop
adcb
inc
push
xchg
pop
jge
sub
and
outsb
jle
xor
out
in
orl
push
xor
xor
test
sub
pop
int
cmp
pop
clc
mov
lcall
fdivl
pop
sub
jp
test
cltd
andb
jg
dec
or
jmp
divl
js
ss
outsl
cmp
cltd
push
and
icebp
cmc
int3
lret
xchg
rol
testl
stc
mov
xor
mov
outsl
jo
xchg
loop
lods
sub
fs
cmpsb
fs
out
mov
xchg
loope
data16
imul
cli
out
add
xor
or
fimull
or
ljmp
loopne
std
adc
call
xlat
imul
xor
bound
sbb
cltd
das
sbb
jno
pop
sub
dec
mov
dec
push
sti
sti
adc
movsl
testl
nop
inc
push
gs
xor
pop
inc
mov
imul
repz
or
testb
mull
int3
pop
add
jge
call
jmp
pop
pop
pop
test
mov
aas
pushf
sti
sbb
jbe
dec
test
out
jecxz
mov
mulb
arpl
std
outsb
ds
cwtl
call
inc
scas
mov
flds
test
fcmovnbe
pop
lahf
mov
wrmsr
mov
es
lock
mov
mov
xchg
arpl
mov
js
lret
mov
cmpsl
sbb
mov
jmp
xchg
lret
push
cmp
and
fcoms
js
xchg
rorb
push
push
cs
xchg
test
fisttpll
adc
xchg
mov
ljmp
or
in
out
scas
cbtw
xchg
adc
jbe
fdivr
add
add
or
mov
adc
adc
sub
dec
xor
test
push
or
xor
daa
js
pop
or
dec
stos
stos
xor
push
xorb
add
hlt
bound
xor
in
or
push
mull
adc
test
ja
test
dec
push
xchg
dec
inc
pmaxsw
or
mov
fwait
jl
sub
gs
loop
fwait
mov
cmp
out
push
sub
cmp
in
test
xchg
mov
incl
sub
dec
inc
sub
dec
movsb
jp
out
mov
mov
mov
adc
test
loopne
ds
pop
jge
fistps
sub
jmp
mov
lock
inc
adc
mov
adc
daa
stos
cli
cmp
and
jno
add
mov
scas
test
or
repnz
mov
mov
jecxz
jnp
inc
fiadds
inc
ret
jae
das
cmc
inc
mov
or
mov
dec
inc
mov
xor
pop
test
xchg
popf
pop
ss
ljmp
dec
jp
lds
inc
pop
rcrb
sbb
lahf
lahf
lret
ja
hlt
sbb
mov
insb
aaa
jbe
nop
push
jge
fisubs
sbb
push
aaa
loope
add
jno
lret
add
push
out
pop
push
mov
push
jo
insb
imull
das
sub
cmp
add
lret
les
push
mov
cmpsb
jb
fsubr
mov
fiaddl
pop
inc
cmp
dec
mov
push
dec
or
shll
aaa
dec
lahf
xchg
test
mov
test
into
jns
inc
pop
fstp
adc
fs
pop
aas
cld
js
aam
pop
roll
loope
or
aas
pushf
loopne
jbe
xor
aas
dec
adc
leave
push
pop
sbb
dec
sub
repnz
push
add
mov
xor
push
sub
int
andl
jae
outsb
pop
ja
pop
lcall
and
fisttps
sub
dec
popl
addl
xor
mov
daa
push
and
arpl
mov
mov
push
bound
mov
clc
lret
pop
pop
fidivl
mov
sbb
xor
fwait
jbe
dec
inc
clc
outsl
dec
ret
jae
sar
es
fs
mov
adc
mov
data16
adc
mov
insb
mov
cli
pushfw
repz
xor
or
decb
jbe
loopne
inc
test
nop
movlps
ja
imul
pop
add
and
lcall
rclb
aad
jae
mov
xchg
cmpsb
cs
jnp
aad
daa
inc
nop
and
push
dec
xchg
fdivl
scas
rcr
mov
sbb
repz
shll
or
pop
push
test
jno
mov
pop
mov
lods
adc
popa
pushf
stos
mov
jmp
pusha
in
pop
lcall
inc
sub
aas
cmp
jb
push
mov
and
mov
ret
jecxz
sahf
sub
gs
mov
adc
popf
repz
jg
mov
add
outsl
push
jmp
mov
pusha
pop
mov
in
lock
ja
das
out
dec
mov
imul
add
insl
mov
dec
dec
imul
and
fwait
in
push
cld
pop
cs
lret
and
jae
mov
rcrb
adc
aam
jmp
xchg
push
jbe
and
xor
and
ret
xchg
loopne
push
ljmp
add
push
out
adc
or
mov
mov
add
mov
xchg
test
fadd
xchg
dec
dec
xchg
popf
xchg
test
aas
leave
xchg
xchg
pop
sarl
mov
stos
lcall
add
movq
incl
cmpsl
xor
fadds
mov
mov
push
fimull
pop
xor
adc
cwtl
lret
inc
cmpsb
mov
lret
fwait
stos
sub
jne
shl
mov
into
cmp
mov
adc
push
in
sbb
or
adc
sub
dec
jge
addr16
setae
sbb
mov
xchg
mov
fcoms
pusha
cli
dec
enter
in
lock
movsb
jmp
xchg
and
insl
push
pop
push
mov
mov
push
fldcw
and
jbe
outsl
sub
scas
or
push
mov
adc
inc
ret
pushf
pop
xchg
xchg
leave
inc
int
mov
inc
lea
outsb
or
das
dec
pop
inc
ss
sbb
xchg
hlt
mov
add
js
jmp
scas
lds
int
mov
repnz
cmp
pop
xchg
int3
hlt
addr16
arpl
popf
jbe
rorl
jmp
xor
mov
in
fldl
lods
aad
int3
fs
xchg
pop
xchg
lods
xor
rolb
sti
sub
scas
nop
xchg
and
cmp
adc
movsb
push
or
push
add
cmpsb
cmc
jno
in
movsl
mov
enter
daa
mov
fwait
cmp
xchg
jno
cmp
jl
insb
xor
xchg
pop
mov
je
leave
xchg
je
ror
lahf
cmpsb
stc
pop
push
lds
test
cltd
outsb
ret
inc
call
aaa
inc
pop
inc
adc
xor
add
push
push
xor
sub
jmp
pusha
outsb
inc
imul
jp
xor
test
mov
or
xor
sbb
int
mov
sub
jmp
pop
testb
push
stos
addb
int3
inc
sub
sub
test
sbb
jg
sbb
mov
sbb
outsb
ss
iret
test
sysret
sahf
imull
sub
sar
shl
push
mov
pusha
inc
sbb
cli
cwtl
into
cwtl
xchg
imul
movsb
sbb
test
in
cs
dec
loop
jge
stc
shlb
fs
rcll
adc
sub
lods
jg
push
mov
jb
out
xorl
pop
push
jmp
or
es
jmp
aaa
loopne
lcall
fisubl
xchg
adc
sbb
add
insl
xchg
call
xchg
xor
bswap
mov
sub
call
sub
and
mov
jo
insl
cs
fdivl
sti
test
rcrb
fnstenv
ret
iretw
sub
testl
pop
push
mov
pushf
push
out
test
in
sub
pop
cmp
inc
jge
inc
sbb
xor
imul
jecxz
imulb
imulb
adc
pop
out
mov
inc
or
xorl
dec
fldt
aad
mov
push
or
sahf
sbb
das
jnp
mov
and
mov
es
xchg
insl
cltd
scas
fmull
and
cmpsl
lea
mov
jb
add
lret
xor
mov
dec
ljmp
mov
mov
shrb
mov
sub
sub
jle
cmp
scas
je
push
cmp
fstpl
popf
clc
std
adcb
jns
popa
xchg
cld
xchg
lods
fistpll
jae
cld
add
out
jne
xchg
lahf
pop
lret
jns
rsm
push
into
add
stc
rcrb
mov
dec
mov
call
or
mov
xor
sbb
pop
pusha
mov
stc
push
xabort
add
sub
sub
adc
loope
xchg
xor
xor
push
les
cltd
bound
pop
in
nop
inc
ja
idivl
dec
cmp
inc
cmp
sbbl
sti
rorl
xchg
jne
push
cld
mov
ja
out
popf
subl
jns
jnp
in
loope
xchg
pop
out
out
lcall
inc
dec
push
addr16
push
lahf
jp
leave
cmp
fnstsw
std
jle
xor
xchg
cs
fistps
dec
ljmp
std
leave
xorl
push
lret
popf
inc
mov
insl
cmpsb
stos
loopne
and
cmp
ficoml
jnp
aaa
pop
scas
outsb
jo
push
rcrl
imul
dec
ret
enter
rolb
jae
es
inc
nop
sbb
or
stos
jmp
inc
mov
and
shl
xchg
dec
jecxz
sbb
pop
sub
gs
cmp
pop
cmpsl
pop
rclb
mov
inc
mov
rcrb
hlt
mov
arpl
jo
lret
jge
xchg
xlat
sbb
popa
or
sub
inc
in
int3
dec
adc
cs
mov
jl
jo
mov
scas
mov
and
stos
cmp
movsb
loope
ficoms
pop
push
cmpsb
js
paddsw
aaa
daa
lea
or
jno
je
jl
or
jmp
cmp
stos
popf
xchg
movsl
rol
lods
and
lahf
push
cwtl
daa
push
test
fs
inc
ja
loop
lcall
js
dec
loop
aas
addr16
push
sub
xlat
sub
or
cmp
pop
mov
xchg
inc
cmpsb
sti
sarb
and
xorps
sbb
scas
or
loop
roll
jmp
sbb
imul
lcall
jp
xor
outsb
inc
sahf
xchg
add
sbb
xchg
or
mov
or
push
cmp
push
and
xchg
mov
lret
imull
fistl
mov
inc
rorl
jge
repnz
mov
push
adc
outsl
or
xor
stc
mov
fsubl
mov
test
shll
sahf
lods
data16
call
out
xchg
xor
stos
cmp
add
push
stc
shlb
pusha
loopne
pop
dec
pop
sub
add
imul
jbe
mov
xchg
fcomps
dec
jne
xlat
cs
sub
sbb
sti
pop
es
and
nop
pop
out
push
leave
add
repnz
ss
fnstsw
lock
adc
lea
adcb
addr16
add
je
sub
adc
sbb
pushf
add
inc
jmp
mov
inc
inc
pop
fildll
pop
or
aas
jns
mov
dec
push
lcall
hlt
xchg
or
std
arpl
push
cwtl
sbb
insb
mov
mov
mov
push
dec
inc
in
fistpl
mov
out
stc
shll
movsl
aam
mov
xlat
mov
rcl
fwait
fs
insl
adcb
cmpsl
mov
mov
dec
pop
push
cld
pop
and
mov
add
and
test
sarl
add
adc
dec
jnp
ret
ds
push
cld
loopne
fldl
pop
dec
xchg
pop
mov
ljmp
std
lods
dec
dec
jl
stos
pop
enter
lods
xchg
out
and
aam
wbinvd
mov
cltd
push
xor
pop
mov
cmp
xor
dec
rorb
dec
add
sub
je
sub
lcall
or
js
dec
push
imul
add
pop
incl
pop
xor
or
mov
repz
fcompl
mov
test
dec
ja
pop
pop
dec
sub
fmuls
test
into
dec
in
stos
mov
mov
xor
lret
andb
test
pusha
int3
out
xchg
out
sub
ds
addr16
sbb
mov
inc
clc
mov
pop
sub
jle
jle
in
mov
pusha
xor
xchg
xchg
xchg
enter
jle
xchg
sbb
or
push
lea
popfw
push
mov
into
test
stos
push
push
xor
push
jnp
roll
adc
iret
add
xchg
jge
cmp
add
faddl
aas
jae
mov
xchg
mov
punpckhbw
cld
fidivl
xchg
mov
iret
mov
fidivs
shll
sahf
lock
mov
cwtl
daa
arpl
dec
ret
std
pop
int
jl
mov
jge
lret
ja
xchg
aaa
push
push
js
dec
jmp
add
push
fxch
cmp
push
xchg
xor
cmpsl
ja
scas
xchg
inc
cs
in
cmp
and
push
lahf
sub
cmpsb
sti
scas
adc
jae
pop
enter
daa
mov
xchg
shll
jno
rol
jl
js
dec
pop
call
push
movsl
xlat
pop
push
and
sub
les
das
inc
test
das
push
scas
inc
push
cmpsl
pop
push
rcrl
loopne
data16
pop
jle
jb
adc
push
loope
xorl
or
dec
rcrb
imul
jp
sbb
nop
test
inc
test
imul
cwtl
mov
sub
mov
pop
hlt
jle
lcall
hlt
fsub
dec
sub
jo
jne
cmp
stos
test
test
mov
js
mov
or
mov
sbb
ss
aad
orl
popf
imul
test
cmpsb
aad
rcrl
mov
and
adc
xor
add
leave
jmp
sub
gs
inc
ret
outsl
or
cmp
mov
adc
xor
mov
pop
or
shlb
std
xchg
pop
dec
mov
call
adc
sub
xchg
outsb
imul
sbb
test
sub
in
je
cli
push
in
sti
into
adc
dec
aad
jae
nop
mov
push
dec
mov
adc
arpl
fstps
outsb
stos
call
xchg
pop
adc
add
loop
jge
repz
pop
into
or
dec
movsl
into
pushf
stos
fnstenv
lret
adc
andl
inc
loop
out
jns
lahf
aas
sbb
xor
sarl
jecxz
jae
imulb
clc
pop
std
or
cwtl
aam
or
std
push
mov
or
xor
fisttpl
and
push
mov
out
mov
inc
mov
mov
sub
inc
enter
cmpsb
mov
dec
pop
mov
cmpsl
mov
mov
and
stos
cld
mov
lret
adc
mov
pop
sub
hlt
ss
aam
shrb
cmp
pop
aam
inc
lret
ret
int
inc
push
mov
lods
jae
add
dec
fdivs
ljmp
pop
sub
cmp
cmp
sub
inc
punpckhbw
stc
add
leave
cltd
lea
pusha
mov
into
mov
xor
cmpsl
outsl
test
xor
xchg
lods
and
fldt
roll
xor
stos
lods
push
push
or
push
rcll
pusha
or
fistps
jle
mov
mov
adc
xor
and
mov
pop
iret
pop
mov
arpl
mov
dec
and
mov
imul
mov
fwait
dec
rclb
scas
cmc
mov
push
lock
pop
cmp
bound
and
sbb
pop
in
push
xchg
cli
sbb
lock
cmp
sarb
jl
mov
mov
orl
mov
cli
pusha
lret
das
lret
pop
push
jmp
out
dec
adcl
insb
popf
xchg
sub
push
or
fidivrs
cmpsb
cmp
insb
mov
inc
jnp
pop
or
push
pop
push
mov
pop
ret
pop
vcmpsd
lea
mov
inc
xchg
mov
clc
push
mov
inc
fisubl
pop
fsts
add
inc
imul
rclb
xchg
pop
mov
jmp
jg
ror
hlt
dec
dec
enter
sbb
jge
loopne
sbb
cmpsl
shll
imul
jno
xlat
int3
and
jg
push
imul
mov
jnp
fnstsw
ljmp
push
out
ja
cmpsb
jle
cwtl
in
pop
mov
sub
mov
sti
cmp
xchg
cmp
push
xor
testb
xor
movsl
ficoms
xchg
std
jecxz
add
xor
imul
adc
push
cli
inc
mov
outsl
xlat
and
jbe
adc
or
loope
pushf
mov
leave
mov
outsb
insl
popf
sbb
xor
lds
xorb
daa
add
test
push
aaa
sub
pop
rolb
jae
cmc
lcall
loop
mov
pop
clc
sahf
fldl
mov
jg
clc
scas
mov
sbb
subb
pushf
mov
scas
outsl
inc
shll
sub
fadds
movsl
imull
rol
mov
and
loopne
into
inc
movsl
xor
xor
sub
mov
call
pop
adc
xchg
cmpsb
mov
lods
xor
pop
mov
pop
mov
xor
mov
dec
pop
jp
add
jnp
add
loopne
sbb
pop
imul
push
bound
push
into
cwtl
adc
scas
and
fsts
xor
icebp
sbb
rolb
sub
shl
in
lds
out
push
aad
push
cwtl
nop
mov
dec
shufps
pop
mov
push
dec
jo
repz
leave
repz
pop
insb
push
stc
inc
sub
jmp
inc
pop
orl
pushf
push
imul
mov
pushf
stos
inc
imul
pop
aas
mov
xorb
je
cld
mov
je
shl
jecxz
xchg
inc
divb
idiv
mov
mov
mov
mov
filds
sbb
fstpt
sub
mov
ret
xor
arpl
push
inc
pushf
pop
and
cld
movsl
rcll
lods
jge
dec
push
dec
push
fadd
cmpsl
mov
popa
icebp
negl
cld
mov
lret
addb
mov
xlat
sahf
mov
adc
lret
loop
aam
pop
sti
ret
pop
scas
add
pop
paddusw
bnd
scas
arpl
fsubrl
pop
popa
xlat
xchg
or
mov
sahf
push
and
sbb
movl
fs
pop
aam
cmpsl
mov
dec
xor
test
lods
insl
xchg
sbb
rcr
and
pop
popa
fwait
aam
push
mov
push
scas
rorb
jmp
mov
jnp
ud0
xor
or
or
and
iret
mov
mov
mov
push
aad
ja
mov
adc
add
or
jno
fwait
addr16
sbb
repnz
jne
push
les
cmp
sub
stc
sti
in
sub
xchg
dec
pop
out
add
lcall
xor
aad
dec
arpl
dec
pop
cmpl
hlt
mov
add
pusha
dec
rcr
cli
xchg
rcll
push
adc
xchg
mov
cmp
adc
jg
mov
push
ljmp
mov
insb
sbb
nop
jnp
sub
scas
xchg
mov
push
cmpsb
push
adc
leave
inc
iret
mov
or
pop
jb
inc
inc
stc
rcrb
jp
cltd
adc
push
xor
ds
mov
xchg
push
mov
insb
imul
popa
fidivs
mov
shlb
fdiv
xchg
leave
aaa
jge
hlt
xchg
call
fdivs
push
add
fcomi
sbb
notb
or
mov
adc
adc
pop
push
dec
gs
dec
mov
std
jo
cmp
scas
push
add
and
mov
stc
movsb
xorb
cmp
mov
ror
cmp
mov
pop
jno
not
jl
aad
dec
cmp
ds
je
in
xchg
and
into
scas
push
adc
test
lds
jecxz
in
loop
sarb
push
pop
cld
push
icebp
push
push
mov
loop
aad
push
addr16
cmp
loopne
outsb
rclb
adc
adc
inc
testb
dec
pop
mov
pusha
cltd
xchg
cltd
adc
push
cmp
sbb
dec
into
sub
andl
lcall
mov
ss
cltd
sub
sbbl
fwait
push
orb
sbb
into
repz
mov
lock
mov
dec
je
mov
xchg
fistpll
sti
popa
sahf
imull
icebp
lret
in
dec
inc
or
pop
es
and
push
cmc
test
push
xor
mov
stos
lea
loop
mov
test
std
inc
out
lods
sbb
mov
mov
cli
fisubl
mov
insb
jnp
je
mov
gs
mov
jp
mov
pop
imul
add
aas
xchg
hlt
sbb
sbb
sti
out
popf
xlat
jmp
dec
sub
rcll
dec
fldenv
in
rclb
sti
sub
ucomiss
in
aad
cltd
push
nop
addr16
mov
outsb
lret
sub
enter
cmpsb
icebp
repz
cwtl
lea
inc
call
icebp
cmp
adc
and
jbe
test
or
inc
scas
push
es
push
sub
dec
jae
int3
je
xchg
adc
and
ja
mov
cmp
pop
outsb
pop
cwtl
dec
xorb
mov
mov
fucomi
std
fmuls
jp
push
lock
das
inc
notl
xlat
out
idivl
enter
in
lret
es
daa
daa
insl
xor
xchg
add
shlb
dec
cld
fidivs
lret
out
jnp
mov
imul
outsl
pop
xor
fwait
sub
mov
pop
ret
jmp
xchg
push
inc
inc
dec
sbb
xchg
sbb
cmp
das
pop
mov
push
dec
mov
add
dec
xchg
mov
pop
mov
es
add
sub
sti
sarl
test
xchg
lcall
xchg
xor
sbb
fcom
xor
pop
stos
inc
cmpb
jb
mov
xchg
xlat
mov
xor
jae
jno
fnsave
subl
dec
xor
mov
fsts
pushf
ja
scas
lods
dec
push
cmp
or
adc
dec
xchg
test
inc
in
out
sbb
shll
fidivrs
push
lahf
in
inc
jl
cwtl
fs
addl
xor
or
push
inc
addr16
and
mov
inc
jle
sbb
sub
addl
jmp
jge
addb
outsb
iret
popf
fisttps
mov
mov
cmp
aam
mov
jnp
push
dec
scas
cli
jns
push
in
loope
adc
in
iret
sbb
jle
pop
test
bound
jae
inc
pushf
inc
pushf
stc
leave
or
xchg
cmp
adc
lea
scas
xchg
cmpsl
pushf
add
imul
data16
pushf
lret
and
push
mov
xchg
xorl
xor
jbe
subl
test
push
aaa
pop
rcrb
add
je
pop
sbb
push
das
sbb
mov
imul
pop
pop
enter
mov
loopne
cmpsb
test
imul
sub
pop
enter
daa
mov
nop
cmp
jno
mov
dec
cmpsl
lahf
and
aaa
jle
movsl
in
je
and
fmul
lahf
inc
int
push
in
xor
movsl
rolb
and
mov
cmp
cmpsb
bound
or
mov
cmp
imul
cli
sub
fmuls
outsb
xor
shr
scas
sub
pop
sbb
add
xchg
xor
lods
inc
push
cmp
out
int3
sub
ret
ret
jo
sbb
pop
push
pop
cmp
fsub
vmovntps
faddl
and
movsb
jg
repz
sub
stos
mov
dec
jl
int
dec
ss
and
cmp
mov
aaa
imull
lcall
in
sti
mov
shll
sbb
leave
cmc
outsl
lods
cli
xor
pop
outsl
mov
and
in
cmp
gs
adc
adc
and
lods
add
mov
jbe
cwtl
iret
sub
nop
or
rorl
jecxz
pop
and
cmp
mov
adc
adc
adc
mov
add
xlat
out
xchg
mov
pushf
sbb
ss
data16
mov
cmp
enter
inc
aad
inc
dec
nop
inc
jnp
dec
int
scas
inc
inc
jmp
fld
jmp
les
bnd
jno
xlat
sbb
xchg
push
call
jo
ljmp
sbb
pushf
lods
jo
jmp
movsb
mov
inc
ja
cmp
nop
movsb
aas
cmc
imul
aad
dec
ljmp
jecxz
stos
push
div
test
xchg
cwtl
add
int3
testb
orl
bnd
and
mov
mov
das
and
mov
mov
xlat
and
rcrl
es
push
into
insl
sbb
orl
or
icebp
movsl
icebp
outsl
cld
or
mov
pop
mov
mov
jo
mov
pop
push
scas
or
dec
fs
and
fcmovbe
jne
pushf
ret
jp
jmp
or
stc
clc
and
mov
ljmp
mov
test
mov
fs
xchg
add
pop
jne
scas
ficomps
in
dec
mov
and
orl
pop
xchg
xchg
sbb
rorl
call
ja
cmc
or
add
xchg
arpl
mov
rorl
call
mov
mov
call
push
pop
xchg
out
ja
es
stc
jae
inc
xor
or
mov
dec
jns
mov
mov
repnz
out
clc
push
bound
jne
inc
xlat
mov
xchg
out
and
or
sub
sub
or
call
dec
bound
mov
aaa
mov
cmp
icebp
cmp
in
nop
pushf
pusha
pushf
fistpll
pop
sub
ds
xchg
dec
insb
aam
add
cltd
imul
push
lret
stos
pop
jp
and
or
xor
push
xor
loopne
mov
push
iret
jl
inc
ret
xchg
pop
loopne
jp
xorps
inc
lahf
push
in
jnp
xor
adc
je
xor
out
movsb
fcompl
out
outsb
imul
push
lds
push
iret
mov
in
xor
and
sbb
arpl
insl
dec
jge
jl
sbb
insb
aaa
sbb
or
push
ret
dec
or
pop
mov
imul
lret
movsl
sti
out
adc
scas
adc
jnp
xor
and
psllw
movsb
cwtl
popf
mov
cmpsb
pop
cltd
das
in
bswap
pushf
enter
daa
mov
jno
xchg
lods
js
lahf
orl
repz
pusha
rcrb
test
pop
psubsb
daa
dec
imul
xor
pop
jp
push
push
mov
imul
aaa
cmp
mov
mov
rol
fs
mov
subb
sbb
xor
xor
cs
inc
hlt
or
xor
out
rol
push
pop
lock
int
pushf
push
mov
inc
or
sub
mov
test
daa
jg
imull
mov
cmpsb
push
and
add
mov
and
jno
and
jmp
cmc
xchg
sarl
mov
xor
into
ljmp
xor
inc
subb
dec
loop
lret
sbb
add
adc
int3
and
dec
jge
lods
jmp
mov
pop
cli
lret
js
xor
cmpsb
cmp
xorb
push
testl
loopne
push
sti
pop
enter
int3
hlt
mov
adc
aaa
jp
xchg
adc
jp
mov
cmp
aam
imul
push
jbe
mov
cmpsb
clc
stc
sti
mov
jl
out
nop
sbb
inc
push
sub
les
psllq
cmp
and
cs
adc
into
push
jge
out
or
pop
lcall
pushf
push
mov
aam
xadd
mov
inc
in
mov
xchg
mov
jb
and
je
sbb
jecxz
fwait
mov
std
cmpsb
repz
stc
cmpsb
out
pcmpeqd
fadd
jp
dec
stos
out
add
mov
add
test
mov
push
jmp
fidivrs
es
js
insl
add
inc
leave
lods
cmpsl
xchg
icebp
jl
cld
xor
jecxz
int
enter
mov
mov
arpl
jo
lods
shlb
push
xchg
sbb
aam
movsl
insl
ret
or
lret
jno
fldl
mov
pop
les
xchg
cltd
ret
mov
popa
sbb
aam
popa
lock
mov
xchg
adcb
dec
pmulhuw
out
add
jl
imul
adc
aam
and
dec
push
xchg
jg
das
ret
lahf
sbb
mov
sub
cwtl
sbb
add
int3
repz
xor
sub
or
int
add
inc
mov
sub
and
dec
dec
pop
ja
and
inc
ljmp
hlt
negb
dec
pop
test
jne
mov
aam
xlat
fmuls
jns
cmp
xchg
ss
je
pop
divb
or
mov
add
mov
mov
dec
in
inc
lea
and
xchg
mov
dec
jmp
adc
in
int
mov
popf
sub
cmp
stos
xchg
shrb
jmp
insb
pop
lds
loop
dec
scas
shlb
push
jnp
test
mov
iret
xchg
ret
cmp
aam
inc
sbb
fwait
inc
mov
push
cmp
inc
scas
jb
push
rorl
imul
pop
fisubs
lds
sahf
shl
mov
aaa
sbb
leave
pushf
arpl
arpl
mov
jbe
lret
jp
cwtl
sbb
pop
fidivs
flds
add
das
test
rcrl
sub
dec
rorl
cmc
sar
insb
cmpsl
push
jo
outsl
scas
out
inc
or
jg
cmp
jle
movsb
and
jo
sub
cmpsb
mov
out
enter
daa
xchg
dec
cmp
sbb
pop
jl
adc
jp
jge
stc
movsl
cli
and
and
add
lahf
jg
out
push
mov
test
es
inc
inc
roll
sub
mov
push
push
cmp
push
stos
loope
jno
sub
aaa
idivb
out
dec
cwtl
outsb
stc
cmp
adc
mov
jmp
addb
dec
add
ja
xor
fmul
fimuls
pop
outsl
fimull
lcall
in
aaa
jp
sbb
sahf
imul
leave
sbbb
jg
push
mov
stos
ret
mov
mov
cmpsl
and
arpl
cmp
sub
or
test
sti
lret
rcll
rorb
dec
into
int
addr16
std
rcrl
xor
rcll
stc
shr
ret
lret
push
adc
aam
lret
jbe
lods
rclb
stos
out
jg
cli
aad
xor
xlat
and
or
inc
inc
and
lahf
xchg
loopne
aaa
xor
adc
pop
cmp
or
mov
sbb
lods
pushf
leave
xlat
test
loopne
dec
pop
adc
leave
out
in
adc
stos
sti
cmp
jb,pn
jmp
sahf
shrl
mov
int3
inc
data16
inc
fnstenv
push
inc
les
test
mov
and
xor
dec
add
outsb
mov
push
adc
jne
pushf
add
pop
mov
lret
inc
test
xchg
xor
adc
dec
fmuls
hlt
jecxz
iret
mov
jge
jecxz
dec
or
cwtl
jnp
xchg
add
sbbl
es
mov
aaa
pop
mov
loop
lock
pop
das
fistpll
fidivrs
imul
jmp
insl
ljmp
cmpsl
xchg
or
push
adc
cmp
pop
mov
jle
push
mov
mov
add
movhlps
aam
adc
cwtl
or
cmpsl
clc
lcall
ljmp
imul
cmp
sub
xchg
nop
insl
sub
cltd
decb
inc
mov
add
adc
test
xchg
xchg
dec
iret
mov
mov
xchg
out
shll
push
pop
or
xorl
pop
inc
push
add
lahf
push
cli
mov
pop
or
fwait
int
dec
pop
cwtl
mov
outsb
int3
sbb
or
ja
mov
pop
inc
pop
lods
pop
or
icebp
inc
fwait
and
dec
aas
repnz
jne
cltd
std
mov
dec
shr
mov
popf
bound
pop
jns
inc
adc
jmp
rcll
or
movsb
sub
and
out
jp
or
mov
xor
mov
xlat
cmpb
mov
pop
push
imul
insl
fbstp
adc
sub
aad
ficoms
bound
pop
mov
or
dec
jmp
stos
add
icebp
xchg
add
sub
scas
and
xchg
push
ret
adc
jne
cmp
mov
pop
dec
xchg
add
jae
addr16
inc
movsl
arpl
or
pop
lea
jecxz,pn
fisubl
and
imul
fiadds
or
enter
or
mov
xlat
leave
adc
push
arpl
call
jge
scas
fstpl
fscale
adc
cwtl
es
add
int3
mov
cs
fsubrs
fwait
jo
test
and
daa
cmp
loop
scas
sbb
jns
jno
or
inc
jo
ds
je
xchg
jno
bnd
jge
dec
hlt
cmp
mov
adc
cltd
aaa
sub
pop
mov
push
push
icebp
in
inc
pusha
mov
minps
mov
pop
clc
dec
adc
loope
inc
imulb
and
add
adc
jl
sub
xchg
nop
cli
sbb
lea
imul
int
sub
sub
push
pop
pop
out
stos
pop
lcall
cmpsl
fsub
mov
sub
aaa
xchg
sahf
or
sub
je
fidivrs
or
call
mov
push
sub
cli
or
adc
mov
out
cmpsl
mull
and
pop
cmp
jae
xchg
outsl
daa
sbb
add
into
mov
push
cmc
cli
outsb
xor
inc
call
stc
mov
fs
cli
adc
in
lods
mov
sub
and
cli
xor
jmp
adc
jmp
jp
dec
outsl
in
and
loopne
das
add
cs
adc
nop
imul
aaa
mov
xchg
add
negb
out
in
out
xchg
mov
popa
scas
in
jl
lret
sti
call
and
aad
xchg
cld
nop
shll
ljmp
fldcw
push
les
lret
sub
fidivrs
inc
cld
cmp
in
in
cmc
pop
add
jp
pop
xlat
insb
pushf
lods
jnp
jmp
sbb
pop
push
dec
lds
hlt
js
sbb
dec
aas
rolb
jb
push
js
dec
mov
pop
jecxz
inc
sbb
shrb
hlt
or
mov
call
mov
dec
mov
repz
sbb
mov
and
lock
aam
mov
jb
mov
hlt
mov
and
es
cltd
xchg
insl
rcl
inc
dec
cmp
jbe
test
mov
icebp
sub
cld
mov
adc
stos
cmc
and
test
push
mov
scas
dec
insb
rol
aad
sub
js
aam
into
add
or
push
push
jno
fstl
call
xchg
sti
aam
popa
dec
adc
mov
lea
xchg
xlat
fucomi
push
push
sub
mov
icebp
cmp
or
fisttps
dec
ss
mov
cmp
or
push
cltd
pop
mov
pop
xchg
push
ficomps
testb
pusha
lods
lcall
js
or
mov
mov
mov
mov
vmovq
movsl
add
pop
mov
xchg
orb
mov
jne
hlt
jnp
lods
xchg
cli
out
xchg
shlb
data16
sub
xchg
aam
and
outsl
sub
sbb
test
dec
jae
mov
adcl
jle
dec
jns
es
cmpsb
pusha
insl
adc
xchg
pop
aam
jmp
test
sub
push
loop
sub
add
sub
lahf
xchg
stos
js
add
xor
push
insb
xor
subl
inc
sbb
mov
pop
test
popa
inc
xor
jae,pn
movsl
roll
sbb
mov
fisubrs
iret
addb
mov
xchg
add
imull
mov
out
dec
jecxz
shrb
jge
mov
andb
xchg
or
sub
in
in
loop
lods
jge
sbb
sbb
jl
out
mov
int3
cmpsl
sbb
push
mov
sub
jo
clc
push
scas
lods
shll
in
pop
scas
cmp
fwait
movsb
cmp
enter
nop
dec
aaa
in
fmull
daa
test
lods
cmp
lcall
and
ret
ds
sahf
mov
and
pop
lahf
mov
push
adc
push
mov
inc
inc
mov
ja
movsl
ficompl
js
dec
fistl
aaa
mov
jecxz
push
xor
sub
out
cmp
outsb
mov
mov
xor
andb
loopne
xchg
scas
push
xor
fs
dec
shll
int
pop
sub
test
lcall
jle
lea
fstps
push
mov
orb
ret
sub
mov
mov
mov
movsb
mov
or
or
cmp
mov
cltd
mov
roll
mov
push
or
xchg
xor
mov
inc
outsl
add
das
fyl2xp1
inc
inc
fisubl
test
rol
cld
lods
sahf
dec
push
mov
inc
mov
xor
jbe
cmp
pop
pop
or
loop
sub
or
and
pop
sbb
pop
clc
sub
lgs
xchg
ret
push
sbb
xlat
sub
sub
fs
mov
out
psubq
aad
rolb
scas
dec
dec
sbb
inc
mov
mov
psllq
inc
jge
aas
mov
insb
mov
bound
scas
pop
add
int3
dec
pop
clc
jns
inc
xchg
stos
aas
inc
ss
test
jno
loope
pop
cmp
je
push
shl
insb
add
testb
pop
std
fwait
jmp
enter
in
call
lods
mov
dec
fcmovnbe
push
mov
leave
lock
das
popf
sub
mov
jg
rcl
outsl
outsb
lea
push
pop
adc
pop
pushf
dec
aaa
ljmp
shrl
icebp
add
jo
mov
jns
sbb
or
push
aad
and
orl
imul
std
cmpl
adc
fstp
mov
pop
pop
xchg
push
std
outsb
dec
push
popa
popa
lcall
and
jbe
lock
push
scas
les
jnp
smsw
sti
add
daa
inc
test
adc
xchg
sub
popf
jmp
test
stos
sti
xchg
push
shl
test
add
orl
add
ret
pop
xor
insb
loop
les
xor
lods
xchg
hlt
nop
lahf
mov
cmp
ja
sub
flds
fwait
jo
clc
test
fwait
or
aam
outsl
mov
mov
lock
je
mov
jns
inc
and
mov
cmp
adc
add
push
mov
in
jp
xchg
push
mov
cmc
bsf
loope
xchg
aaa
aad
sub
stos
icebp
fbstp
out
jmp
je
popa
cmpl
push
movsl
fdivl
mov
cmp
push
xlat
and
inc
imul
out
ret
jmp
adc
sbb
es
clc
sub
ret
pop
pop
mov
jae
jae
daa
std
inc
stos
inc
test
pop
xor
std
movsl
addb
call
xchg
pop
or
dec
outsb
imul
sbb
dec
outsb
push
ret
rolb
mov
xor
ss
push
push
arpl
fidivrl
jge
outsl
popf
sbb
aaa
push
hlt
cmpsb
or
add
xchg
mov
insb
pop
insl
rorb
sahf
pop
and
jg
loop
mov
and
jmp
data16
pop
or
cmpsb
adc
movsb
in
stos
push
mov
daa
test
jno
lea
lret
dec
ror
pop
ds
xor
bndstx
lahf
faddl
push
add
xchg
push
xchg
cmpsl
inc
jle
mov
pop
int3
jmp
cmp
jbe
mov
loope
dec
cmc
sub
jnp
cmp
pushf
enter
mov
xor
inc
xor
inc
sbb
dec
and
sub
push
push
dec
pop
hlt
int
jb
sub
scas
lcall
cmp
sub
js
sahf
push
pop
cld
test
dec
adc
mov
inc
mov
mov
and
push
cmp
pop
inc
mov
in
ror
push
dec
rcl
stos
mov
sbb
sarb
push
js
xor
popaw
outsl
in
jnp
les
adc
adc
dec
and
lods
test
fwait
out
icebp
sar
and
dec
cmp
lahf
mov
push
int
decb
and
loopne
pop
or
rorb
sbb
notb
xchg
xchg
xchg
sbb
pop
jle
xlat
movsl
sahf
sub
std
mov
push
sub
cs
lea
nop
mov
test
dec
inc
lahf
xor
aaa
hlt
les
ret
repz
jle
sub
rorl
sub
pop
data16
adc
or
add
fwait
pop
fwait
lahf
sub
sbb
sbb
clc
in
adc
outsl
jb
push
dec
dec
cmp
adc
jecxz
add
testb
std
inc
scas
adc
lods
xchg
or
cmc
cmp
sbbl
dec
fildl
decb
and
mov
sub
das
jl
sbb
inc
mov
and
es
jp
lahf
cmp
sbb
lds
fcoms
cld
loopne
push
lret
mov
mov
xchg
jnp
mov
in
outsl
adc
insb
and
rcl
insb
dec
adc
push
xlat
inc
sub
ffreep
push
clc
dec
pop
push
xchg
sbb
ljmp
push
lods
or
adc
arpl
and
gs
ja
cltd
inc
daa
and
add
decl
repz
sub
adc
sarl
cwtl
stos
pop
push
test
stos
fbld
push
and
ds
cmp
call
pop
outsb
xor
jns
cmp
sub
jg
mov
aaa
mov
adc
mov
ja
cmp
dec
mov
leave
push
or
inc
ja
mov
mov
jne
push
mov
sub
ss
mov
push
out
rorl
or
cmp
jcxz
mov
mov
sub
lea
mov
mov
sub
in
in
cmc
pusha
mov
popf
into
xchg
add
jo
adc
inc
orl
push
push
or
mov
add
loop
and
mov
or
jae
dec
and
adc
xor
ret
ret
pop
repz
ret
in
les
loope
or
js
incb
dec
xchg
fidivrl
ljmp
mov
or
rol
pop
jno
mov
xorl
hlt
mov
jge
jbe
sbb
sbb
push
xor
aad
sub
aad
dec
add
xor
jge
inc
pop
pushf
pusha
mov
andl
jo
rcrb
and
or
movsb
dec
fistl
jp
cmpsb
xchg
scas
pop
in
xchg
mov
enter
daa
sub
cmp
push
fimuls
mov
sti
movsl
push
xor
add
cltd
push
test
push
fwait
addl
in
cmp
push
js
push
jecxz
mov
fldcw
lods
popa
loope
test
inc
in
cmp
sbb
adc
or
push
in
int
ss
fs
test
mov
ror
aaa
insb
pop
sub
mov
lcall
sub
jecxz
enter
rcrb
jne
add
jl
daa
inc
jmp
clc
jl
mov
xor
test
fsts
cmp
sbb
mull
vmovd
fcomps
enter
pop
adc
cmc
sbb
les
xchg
loope
outsl
ret
mov
mov
fs
mov
adc
in
lods
insb
adc
mov
bound
cmp
xor
mov
inc
mov
sti
cmp
shl
jo
cmpsl
pop
arpl
push
adc
lods
jns
push
shll
pop
std
sbb
cwtl
icebp
call
movsb
mov
add
mov
negb
das
aad
outsb
lea
pop
pop
sbb
ja
xor
les
div
dec
sub
das
jl
lea
out
call
push
xor
mov
cmp
jmp
js
pop
ds
ja
insb
scas
push
aas
scas
inc
pop
jb
movsl
popa
dec
mov
adc
fwait
jecxz
inc
jae
mov
std
jmp
cmp
mov
test
mov
sub
hlt
lcall
xor
ds
inc
or
xchg
das
pop
sub
mov
std
sub
xchg
cmp
es
xor
insl
xchg
lea
in
cmpsl
andb
icebp
scas
push
xchg
or
dec
lret
clc
sbb
lcall
mov
or
push
sarb
sbb
aaa
add
ret
aam
jne
lcall
clc
xchg
lcall
push
mov
lods
js
iret
mov
mov
in
xchg
lods
jle
push
sti
lods
bound
mov
or
cltd
jl
cmpsl
test
out
or
push
sbb
dec
imul
test
dec
inc
xchg
repnz
xchg
out
jle
mov
mov
push
mov
sbb
push
sbb
pushl
fwait
xor
pop
mov
movsb
push
mov
jp
jle
mov
rcrb
xchg
ja
leave
add
lahf
cwtl
inc
mov
mov
filds
mov
mov
out
out
xor
ja
mov
iret
mov
pop
adc
xchg
sarl
sub
or
iret
loopw
loop
in
mov
mov
das
mov
add
pusha
adc
xchg
aam
fs
or
sbbl
pop
popf
lock
mov
xor
aam
stos
shrl
insb
jae
dec
push
scas
scas
mov
insb
adc
fsub
iret
mov
push
ret
dec
pop
sub
adc
divb
negb
inc
mov
inc
or
repz
mov
fidivl
cmp
sbb
hlt
push
stos
mov
jnp
in
lcall
adc
repnz
and
out
or
arpl
arpl
jbe
push
cmp
lds
xchg
sar
or
adc
push
dec
das
push
fildll
jo
pop
pop
scas
dec
stos
sub
cmpsb
cs
cmp
cmc
movsb
dec
push
mov
lret
cmpsb
sbb
shr
repz
enter
daa
add
cmp
lcall
mov
insb
sbb
sub
inc
movsl
sbb
into
rcrl
test
dec
cmp
sbb
ret
sti
or
pop
sbb
pop
hlt
mov
push
loope
in
sub
and
cmp
push
outsb
call
icebp
dec
shr
inc
pop
out
rep
and
pushf
sbb
pop
popf
add
jns
xor
rcll
push
push
ret
sahf
dec
push
sub
sbb
lcall
mov
sahf
cwtl
or
test
decl
jg
pusha
ds
repz
mov
and
dec
lahf
ss
dec
cmp
rcl
mov
lret
push
roll
xor
into
cmp
add
loopne
jae
in
jo
outsl
mov
addr16
sbb
fs
into
adc
arpl
pop
and
mov
rcrl
cli
std
xor
xor
xor
movsl
jnp
in
dec
mov
aam
fsubs
push
loopne
ficoml
adc
xor
jo
loopne
loopne
inc
xchg
or
pop
sbb
sar
xchg
xlat
jecxz
or
mov
int
sub
xchg
cs
sub
add
imul
jge
inc
flds
add
push
das
pop
repz
xor
lea
and
jne
int3
push
adcb
enter
and
and
loope
pop
inc
sub
enter
fidivrs
dec
mov
sub
dec
mov
jecxz
iret
adc
int3
and
std
nop
jecxz
cwtl
and
jae
pop
mov
in
orl
clts
mov
nop
mov
adc
lock
add
cmp
sbb
mov
les
sbb
rcrl
fisttpl
insl
insl
dec
push
dec
sub
bound
push
jbe
xchg
jge
ss
sbb
scas
add
mov
idivl
sub
movaps
ja
aam
adc
push
pop
loopne
and
ljmp
lea
jecxz
out
sbb
inc
push
jecxz
nop
jo
ljmp
test
mov
cmp
dec
shrb
jno
sub
lods
sbb
ss
shr
push
pop
fs
in
mov
nop
mov
stos
mov
outsb
sub
call
addl
les
aam
mov
jp
pop
mov
ljmp
addr16
push
nop
lods
or
repnz
scas
arpl
les
mov
xorb
adc
add
xor
stc
jns
or
in
fs
adc
aas
out
dec
push
sub
pop
and
jo
pop
sub
fsubrl
enter
cmp
jle
mov
in
fwait
cli
pusha
fxam
push
fists
push
jp
cmpsl
ja
jmp
aad
cmp
daa
sbb
out
hlt
dec
popf
pop
sub
push
sbbl
and
je
cld
arpl
push
and
xchg
iretw
adc
pop
xor
fbld
jae
inc
out
inc
mov
or
push
test
in
xchg
pop
iret
loope
scas
test
cltd
fwait
sti
fidivs
sub
xchg
pop
cwtl
mov
sub
int
sbb
and
xlat
jge
mov
mov
or
mov
pop
cli
add
xor
nop
stc
enter
cmp
cmp
cltd
movsb
mov
add
push
cmpsb
pushf
in
in
pusha
sbb
enter
daa
adcl
ss
repnz
pop
jecxz
ds
pushl
movsl
and
cwtl
and
push
lret
push
jl
clc
test
call
jne
mov
outsl
pop
js
scas
aad
xor
bound
iret
cmpsb
loope
addr16
sbb
cmp
shrl
outsb
dec
aas
jmp
xchg
and
ret
xchg
dec
fwait
jae
repz
mov
xor
push
movsl
jae
add
in
pop
imul
push
adc
lret
xchg
sub
push
mov
sti
xlat
bnd
adcb
popf
mov
in
push
mov
cmp
ss
add
add
mull
fmuls
rcrl
sbb
dec
jne
pop
js
cmc
cmpsl
mov
shrb
les
loop
lea
stc
sbb
and
data16
dec
lods
cmp
mov
push
cli
xor
jno
dec
sub
dec
or
dec
divl
icebp
gs
and
xchg
adcw
data16
sti
jecxz
adc
hlt
jp
outsl
test
xchg
iret
xor
sbb
push
xchg
ret
sub
sub
lea
in
xchg
shll
push
ljmp
dec
popf
push
nop
sbb
dec
lds
add
jl
fadd
popa
sbb
xor
jbe
call
push
mov
jns
add
lret
xor
pop
test
mov
scas
jno
inc
mov
add
jb
loopne
dec
mov
aas
int3
jecxz
fwait
shl
pcmpeqb
aaa
push
loopne
fldl
mov
adc
mov
decl
sbb
xchg
and
mov
loope
mov
dec
mov
cmp
aaa
xchg
mov
imul
and
dec
pop
shrl
fisubrl
insl
push
pusha
adc
cmpsl
adcb
popf
cmp
cld
popa
dec
push
mov
test
push
mov
dec
inc
pop
shl
mov
mov
ret
repnz
xchg
push
and
fcmovu
push
mov
and
cmp
adc
mov
insb
fistpll
jl
xchg
cmp
fists
cs
add
movb
outsb
test
mov
mov
or
test
cmp
xchg
das
jb
inc
or
pop
dec
stos
lods
sub
push
or
sub
add
xor
dec
inc
aam
mov
jmp
mov
add
mov
ja
je
dec
xchg
mov
or
or
fwait
cmp
mov
jne
xchg
jae
je
xchg
out
lock
dec
adc
stc
in
mov
sub
enter
mov
dec
or
jns
loopnew
dec
jp
pop
push
mov
sub
mov
xchg
adc
jle
je
in
or
fbstp
mov
push
negb
xchg
mov
mov
sub
sub
push
ret
stos
mov
xor
mov
hlt
adc
and
scas
jne
sbb
cmpsl
mov
iret
je
jnp
popa
movsl
pushf
pop
cwtl
je
inc
addr16
cmpsb
jae
xor
jae
or
jmp
pop
aad
fmuls
mov
imul
inc
push
shrb
and
leave
fstl
in
arpl
sti
lea
pop
enter
das
sbb
loopne
aaa
adc
lods
add
insl
dec
int3
xchg
push
sub
loope
fisttpll
jo
stos
xchg
scas
or
cmc
cmp
dec
shld
rclb
loope
pop
sub
mov
daa
sub
cmp
pop
daa
jno
and
dec
mov
or
cmp
call
push
dec
or
mov
jmp
mov
or
js
mov
stos
push
out
mov
enter
test
push
cmp
rorb
sahf
fldt
addb
jg
xchg
leave
add
stc
xorb
aad
push
pop
cld
xchg
int
mov
sub
push
xor
addr16
fsub
in
sub
sbb
push
xchg
jg
movsb
adc
pop
lret
pop
mov
xor
mov
mov
fmuls
inc
mul
mov
lret
add
movsb
mov
sbb
into
add
int3
xor
push
mov
adc
stc
aam
or
repz
mov
xchg
mov
mov
adc
pop
rcl
arpl
adc
pop
jl
cmp
cld
lahf
or
loop
sbb
gs
inc
and
inc
cmpsl
sub
dec
test
imul
push
push
cli
add
lret
mov
rcrb
cmp
xor
sub
repz
fwait
insl
sti
add
fsubrl
daa
iret
movsl
aad
lret
cmc
push
test
inc
jmp
mov
les
repz
cmp
lea
xchg
cmpsb
jb
out
ljmp
sbb
pushf
scas
in
clc
jmp
mov
pop
daa
mov
add
mov
gs
jb
lret
mov
jge
je
dec
stos
notb
mov
cwtl
cwtl
mov
rorb
mov
fcmovnb
sti
pusha
mov
jle
mov
jecxz
lock
dec
add
mov
and
and
fldenv
sar
xchg
jns
loope
sub
pop
sub
mov
cmpsl
jg
stos
mov
xor
ja
mov
jmp
inc
and
mov
scas
add
mov
push
xor
sub
dec
mov
cwtl
sub
ret
andl
leave
clc
aaa
fcoml
lods
and
dec
push
lods
mov
shl
fistpll
push
mov
pop
add
hlt
sti
cltd
and
fwait
mov
cmpb
mov
clc
popa
test
or
sbbb
fdivrl
rcll
ret
fwait
lahf
push
push
mov
pusha
add
movsb
test
push
xlat
mov
fwait
les
pop
imul
mov
push
mov
daa
push
xor
inc
nop
xor
test
aad
jg
adc
fwait
insb
shlb
dec
je
sbb
dec
push
out
iret
xlat
xor
pop
dec
jns
jno
in
xor
xchg
scas
mov
out
xchg
inc
sub
std
pusha
jmp
jp
mov
add
mov
int
push
fnstenv
add
dec
push
cli
xchg
dec
sbb
xchg
imul
inc
test
daa
popf
fldt
mov
add
pop
and
mov
mov
mov
inc
adc
adc
shr
lods
ret
mov
inc
jb
xorl
loope
or
subb
data16
mov
cmpsb
xchg
or
and
lret
adc
lds
mov
mov
iret
xchg
jb
push
dec
mov
int3
xor
aas
lods
lret
add
jge
push
shll
sar
mov
mov
je
int3
sub
pop
pop
pop
mov
push
or
adc
sbb
pop
aam
cmp
movsb
jnp
sbb
mov
jmp
mov
daa
jg
mov
push
aaa
jno
push
fidivrl
dec
std
sbb
ds
out
movsl
xor
mov
and
insb
test
jle
dec
inc
dec
cmpsb
push
inc
mov
pop
xchg
mov
pop
mov
mov
shll
sub
rolb
outsb
adc
inc
adc
jns
mov
sbb
mov
aad
shll
xor
dec
push
pop
movl
pop
addr16
lcall
cmp
fmull
addl
mov
test
ja
xor
jg
lret
jno
inc
mov
mov
out
test
and
fs
idivb
add
div
mov
pop
jns
lret
mov
push
sbb
dec
cmc
xor
xchg
fwait
outsl
aas
loopne
loop
je
stc
mov
pop
adc
lds
lods
or
mov
jge
pop
incl
divb
sub
cmp
cmp
fs
sub
pop
fbstp
adc
movsb
adc
jmp
mov
xchg
push
push
lcall
test
dec
sub
pop
lret
jp
in
imul
mov
aad
pop
xor
addl
inc
decb
inc
les
jl
xchg
cmp
int
jno
and
mov
mov
in
and
mov
xchg
mov
out
ljmp
inc
mov
push
sub
sub
dec
jb
ljmp
jb
out
decl
std
test
cmpsl
cwtl
push
cltd
cmp
mov
and
xor
out
xchg
in
decb
pop
mov
loope
lock
das
xlat
push
shlb
fsts
and
mov
rorl
fbld
fs
pop
insl
and
mov
sbb
dec
cmpsl
jle
or
or
pop
cld
mov
push
lret
mov
stc
mov
mov
or
xchg
stc
sub
xor
aam
ss
ret
adc
push
cmpsb
xor
data16
jb
ja
rcrb
and
sub
lods
and
out
cmp
sub
xchg
enter
add
cmp
popf
add
push
dec
cltd
pop
les
test
mov
sbb
repz
pop
je
test
ja
xchg
cmp
shr
mov
pop
sbb
mov
xor
add
mov
cmpb
push
or
sub
mov
mov
and
in
test
xor
dec
ja
roll
leave
inc
or
mov
fwait
fwait
sbb
cmp
pusha
mov
out
scas
imul
in
jecxz
xchg
std
out
out
jmp
sub
clc
faddl
fisubrs
lods
jp
adc
mov
mov
mov
ret
jle
lret
push
push
ds
stos
aad
fildll
adcl
ss
adc
sbb
aaa
and
mov
aaa
push
inc
std
pop
stos
popf
fisubrs
insb
pop
push
mov
scas
cmp
mov
iret
xor
ret
pop
push
mov
jge
repz
mov
mov
push
es
fidivrl
icebp
and
sbb
xor
imul
ficomps
js
lds
cli
rol
in
mov
repnz
add
lret
scas
cmp
arpl
test
jne
jge
adc
sbb
mov
cmp
sbb
jae
adc
jle
xchg
dec
xor
mov
fimuls
repnz
dec
xor
popf
call
in
adc
sub
daa
jle
and
popf
jae
jno
test
jl
das
dec
insb
fisubs
movsl
cmp
rcrb
cmc
lock
test
dec
pop
mov
pop
aam
pop
mov
sahf
js
mov
push
dec
lret
loope
enter
pusha
hlt
cmp
lahf
ds
push
roll
test
jo
hlt
fwait
mov
loopne
in
add
xor
int
cmpsl
sub
out
lret
xor
push
sbb
push
fdivrl
xchg
jmp
sbbb
test
adc
dec
push
ja
inc
mull
xchg
aam
mov
mov
lret
and
xorb
push
pop
cmp
mov
icebp
mov
shll
mov
jle
sbb
mov
cmc
cld
push
pop
xor
imul
ss
stc
inc
sub
or
adc
mov
jp
jne
mov
pop
rcrl
cmc
xor
adc
or
mov
dec
loopne
les
pop
push
adc
or
inc
imul
push
add
jb
sbb
sbbb
sub
pop
mov
aam
pop
sti
pusha
xchg
jl
in
cmpsl
cwtl
aad
push
mov
dec
loop
cmovb
fadds
fldenv
mov
les
lods
inc
add
xor
jae
pushf
ud2
in
cs
cwtl
mov
sbb
add
or
insl
test
inc
mov
in
lret
jb
ds
dec
pop
cmp
je
pusha
jecxz
aad
pop
neg
sbb
cwtl
push
and
mov
mov
fsubs
out
pop
dec
or
mov
into
inc
inc
lock
add
mov
test
nop
hlt
ds
call
test
insl
or
and
cmpsl
jge
xchg
loop
push
loop
dec
lret
and
xchg
mov
inc
push
rcrb
lea
mov
xchg
fcmovb
lahf
popf
pop
push
imul
movsb
xchg
seto
ljmp
test
lods
push
xchg
divps
inc
xchg
setp
cltd
pushf
jp
gs
mov
aad
xchg
imul
subb
xchg
push
sbb
rolb
jns
movsl
push
testb
fs
add
xor
call
lret
jle
add
dec
mov
mov
xchg
mov
popf
sbb
ja
push
fs
push
inc
inc
lods
into
or
cs
cmp
xchg
mov
lods
inc
out
pushl
jns
addr16
into
jmp
pop
out
mov
sub
repz
inc
fnsave
jecxz
fdivs
shlb
mov
or
jle
arpl
in
cmpsl
and
inc
clc
xchg
fisttps
pop
mov
fstpt
inc
andl
push
cli
pop
xor
mov
jg
movsl
stos
adc
cmp
es
repnz
scas
sahf
push
gs
inc
icebp
inc
adc
dec
mov
xchg
push
sti
ret
out
cmp
xchg
inc
rcrb
or
pop
mov
inc
movsl
or
mov
xchg
mov
adc
imul
fidivrs
pop
rol
add
mov
jne
lahf
leave
inc
mov
hlt
bound
stos
jbe
pop
sub
mov
aaa
dec
add
or
in
mov
lcall
ret
pop
mov
sbb
rcl
gs
cld
cmp
movsl
jne
and
inc
shll
cmpsb
test
mov
enter
daa
jge
lods
cmp
stos
and
jl
imul
fs
mov
lahf
mov
mov
enter
cmp
std
inc
addr16
lret
pop
fldl
js
push
jns
das
fcmovnu
push
test
sub
rcrl
and
xlat
cld
test
mov
clc
shrb
push
push
cmpb
in
sub
dec
add
scas
imul
push
cwtl
push
popa
mov
pop
sub
mov
lcall
mov
in
cmc
sub
fistps
mov
and
loope
iret
mov
dec
mov
mov
cvtps2pd
sbb
enter
fdivrs
xchg
negl
push
lret
dec
and
clc
testb
push
stos
scas
push
cmc
ret
std
push
xor
or
loop
sub
stc
stc
dec
andl
mov
and
mov
gs
pop
dec
cli
cld
and
repnz
mov
or
jge
incb
stc
dec
loopne
jno
pop
sbb
mov
imul
jae
add
ds
sbb
cli
enter
insl
shrb
lret
mov
aas
and
smsw
cs
add
fs
lea
inc
outsl
xor
and
push
fstps
mov
repz
adc
call
fs
pop
dec
xlat
aas
adc
repz
mov
xchg
jmp
fstpt
adc
inc
lret
ja
inc
push
sahf
xchg
aas
imul
sub
push
in
adc
sbb
mov
sar
ljmp
adc
rolb
xchg
push
mov
or
mov
or
test
xorb
inc
cmp
and
insl
cmp
out
es
sbb
mov
stos
cmpsl
jl
push
mov
mov
imul
les
mov
shlb
and
mov
iret
aam
inc
aas
ret
add
ds
clc
call
inc
shr
push
inc
outsb
popa
sbb
mov
mov
or
push
xchg
push
push
adcl
cmp
test
jo
icebp
mov
data16
push
push
test
push
pop
xchg
pop
rcrl
sub
cltd
rorl
add
movsb
xor
xor
js
cmp
mov
or
xor
popf
mov
pop
pop
fcomip
ja
sti
jmp
inc
inc
clc
rorl
test
fwait
stc
add
jne
mov
add
insb
cltd
xor
sbb
aad
push
in
inc
cmp
sub
jae
dec
fsts
nop
xchg
fdivrl
push
fcompl
mov
movsb
mov
mov
loop
jle
lock
movsb
pop
pusha
loopne
insl
fildll
sub
ror
insb
xchg
int3
and
xor
mov
popf
ficoml
icebp
push
mov
das
jp
jmp
mov
rorb
add
push
mov
hlt
imul
lods
lds
je
adc
pop
jae
lds
ret
jecxz
or
aad
push
and
jp
movsb
sub
adc
in
sbb
lret
inc
insl
sbb
popa
sbb
lds
test
je
cmp
je
mov
int3
cwtl
arpl
jbe
mov
jge
adc
sbb
pop
mov
push
lret
jp
mov
int3
ljmp
push
mov
pop
xor
push
cmp
and
dec
fwait
cmp
xor
push
out
pusha
cmpsb
sub
xchg
in
jecxz
xchg
enter
daa
jl
inc
cmp
cwtl
bound
mov
push
dec
dec
scas
jb
imul
and
sub
push
test
ffreep
mov
imul
outsl
lea
pop
add
or
stos
insb
pop
outsb
aam
push
je
loope
adc
xor
insb
cmp
mov
adc
or
sbb
push
dec
out
sbb
call
xor
loopne
int
cs
xchg
out
pop
in
mov
xor
outsl
push
enter
nop
cwtl
out
sub
sub
push
mov
addb
jg
pop
lods
mov
std
mov
aaa
xor
jl
nop
sub
jbe
icebp
in
fdivs
inc
ror
aam
rorl
outsb
sbb
mov
fprem1
mov
stos
xor
jno
outsl
fsubl
pop
stc
mov
lock
icebp
in
ret
mov
lods
mov
mov
cmp
das
aas
inc
xor
or
cwtl
cli
or
shrb
imul
adc
hlt
adc
in
add
xchg
jne
sahf
jecxz
sbb
xor
pop
xor
mov
stos
dec
sar
mov
push
adc
addr16
popa
sbbl
aaa
add
popf
or
hlt
out
xor
inc
xchg
pop
lea
idivl
xchg
cld
adc
jecxz
mov
adc
je
jmp
outsl
ds
mov
lock
push
mov
inc
sub
icebp
aas
or
outsl
jb
xor
cmc
mov
je
lds
jecxz
xchg
mov
std
jp
repnz
test
xor
jae
sbb
dec
loopne
fstpt
adc
pop
xor
lock
gs
je
iret
mov
daa
pop
and
inc
ja
lods
sub
in
outsb
mov
xlat
jns,pn
or
test
pushf
xchg
div
nop
fcmovbe
cld
cmp
inc
mov
lret
lret
pop
mov
in
mov
add
mov
aam
dec
je
mov
sahf
jno
pop
loopne
clc
and
xchg
lea
push
popa
xor
mov
imul
xchg
popf
cmpsb
out
clc
sar
addps
rolb
pop
mov
cltd
std
cmp
mov
cmp
gs
das
test
sub
sbb
xchg
not
repz
ficompl
push
stos
push
sbb
push
cmp
push
add
adc
pop
xor
daa
repnz
sbb
xor
fldcw
mov
dec
jae
mov
adc
outsb
ja
daa
dec
dec
push
jnp
inc
fildl
or
loop
fwait
sub
adc
cld
pop
mov
mov
adc
cmpsb
fnstsw
mov
inc
in
repnz
lods
popf
mov
jmp
inc
repz
dec
cld
mov
pop
sub
jg
jle
jno
in
add
fidivs
cltd
add
jmp
xchg
mov
mov
andb
add
fidivrl
std
add
pop
and
jl
insb
pusha
adc
scas
fs
push
iret
imul
iret
lahf
push
iret
dec
lret
sbb
rorb
pop
stos
cli
mov
mov
pop
stos
les
and
or
push
xor
inc
mov
push
push
xchg
imul
cmpsl
imul
dec
fiadds
inc
lds
stos
les
sbb
push
hlt
clc
push
cmp
sbb
mov
sbb
add
insl
out
add
test
aad
insb
pop
adc
pop
push
cltd
stos
fs
mov
ss
arpl
aad
pop
sbb
push
fidivrs
scas
arpl
in
lret
enter
daa
jnp
int3
cmp
cmp
jno
jg
jl
lahf
jnp
mov
sub
movsl
dec
adc
arpl
outsb
enter
xor
push
stos
icebp
xchg
inc
test
aam
push
jmp
pop
sub
sub
lods
push
push
pop
pop
loope
outsb
stos
sub
add
cmp
in
outsb
popf
xchg
xchg
adc
in
pop
popl
loop
sbb
js
xor
mov
addr16
int
inc
cmp
roll
arpl
push
pop
cli
ja
cmp
mov
dec
xchg
or
mov
fistpll
xchg
call
mov
icebp
pop
and
mov
cmp
lock
pushf
scas
mov
leave
push
test
es
inc
mov
into
jno
stc
cmc
push
or
imul
stc
addr16
fs
dec
rcll
stos
js
out
xor
movsb
aam
mov
sti
out
pop
and
xor
inc
cmp
push
inc
or
mov
dec
int
gs
dec
loopne
push
rcrb
inc
adc
jge
adc
stos
out
leave
sub
cmp
xchg
outsb
mov
xlat
pushf
and
outsb
mov
adc
and
cs
xchg
in
aad
mov
dec
jmp
inc
dec
call
jne
mov
notl
movb
lea
push
bound
std
pop
mov
push
adc
push
movsb
pop
push
test
push
pop
inc
inc
cmp
jb
jo
dec
insb
test
je
jne
jecxz
clc
repnz
lods
sub
lods
scas
imul
lret
lock
mov
shrb
pop
es
das
push
rolb
sbb
and
je
roll
mov
insl
mov
in
push
jp
sub
lods
adc
arpl
lret
jo
and
shlb
cmp
add
rcl
sbb
aam
test
mov
fnstsw
gs
clc
pop
xchg
inc
adc
popa
inc
mov
shlb
out
into
jno
xchg
in
les
xchg
scas
movzwl
cltd
xor
adc
push
or
push
dec
push
test
in
xchg
rorl
into
pop
adc
or
inc
add
sub
inc
ljmp
lds
cmp
or
out
xor
sahf
sub
xchg
xchg
jp
jmp
das
pop
into
and
ja
orb
or
mov
or
lock
dec
jecxz
shll
mov
dec
out
sub
dec
bound
aad
jns
movsl
lret
cmc
sbb
out
rorl
in
icebp
ficoml
jp
jbe
mov
aaa
jle
push
mov
fidivrs
out
in
lret
push
fsubs
xchg
insb
daa
loopne
rcr
xchg
bound
out
inc
mov
popf
sub
lods
mov
cmp
ret
push
and
sub
cli
add
cmpsl
pop
scas
out
je
push
mov
iret
scas
or
mov
loop
or
test
aad
inc
leave
shrl
push
and
fimull
xor
sbb
mov
imul
mov
lds
mov
mov
outsb
mov
stos
hlt
inc
sub
adc
ret
cmc
movsl
cmp
popf
xchg
leave
aaa
mov
jae
pusha
push
ja
shrb
inc
push
sub
jl
cmpsb
xor
or
push
mov
mov
lcall
dec
lret
fs
in
mov
mov
add
daa
jp
inc
cmp
pop
jno
fs
stc
negl
ds
fcmove
movsl
push
mov
and
mov
cltd
push
inc
js
test
jne
dec
inc
adc
xchg
adc
mov
js
sbb
in
push
mov
outsl
pop
loope
in
inc
sub
fidivrs
shrl
outsb
add
jae
mov
rol
jl
out
test
sbb
sbb
add
pop
xchg
xor
cmp
push
push
popf
int
inc
lret
sub
mov
lcall
or
out
jbe
ds
sahf
mov
incb
mov
int
mov
cmc
xor
mul
stos
and
adc
and
stos
dec
cld
negl
and
mov
popf
loopne
fwait
data16
outsl
jb
into
push
pop
loope
sbb
les
addb
jg
fs
push
aam
jb
push
lods
mov
adc
pop
icebp
repnz
xchg
lea
sub
or
and
xor
fs
pushf
in
mov
sub
jecxz
negl
testl
adc
les
add
push
xchg
and
das
sbb
stos
add
xlat
fcmovnb
out
and
mov
sti
sbb
into
jns,pn
in
cmp
popf
nop
pop
adc
inc
pop
add
std
fildl
scas
mov
repz
inc
add
sar
sub
mov
arpl
loope
push
pop
bound
pushf
mov
scas
jmp
jecxz
pop
stc
sub
pusha
push
or
mov
cmp
dec
jecxz
arpl
sbb
mul
dec
cld
std
enter
cli
adc
mov
shrl
cmp
dec
mov
pushf
fcmovnu
and
das
insb
mov
mov
lock
andb
jmp
and
mul
rcl
push
jnp
rep
in
movsl
lock
cmpsl
jns
nop
mov
movsb
cmp
mov
cmpsl
lret
jne
aad
cli
and
sub
pop
and
and
stos
jecxz
sub
pop
fcmovnb
add
jle
frstor
fdivr
cltd
push
aam
or
lahf
popa
pop
lcall
test
das
out
xor
mov
push
movhps
xchg
cltd
imul
xchg
or
xchg
int
or
in
test
xor
xchg
mov
jno
mov
pop
mov
jno
push
xorb
add
movsl
decl
push
sahf
or
lret
cmp
mov
les
xchg
mov
pop
mov
jb
ss
push
inc
or
or
rclb
fwait
xchg
dec
movb
cld
lods
cmp
or
int3
add
cli
add
cli
dec
mov
out
pop
ljmp
hlt
pop
addr16
mov
push
imul
mov
mov
dec
dec
in
repz
mov
imul
aas
jle
jmp
sub
mov
push
push
jnp
popf
dec
dec
push
mov
jnp
pop
stos
fsubrl
and
insb
ss
jnp
shll
pop
jbe
adc
push
mov
out
push
pop
sbb
inc
mov
sbb
inc
int3
stc
sub
push
mov
roll
add
sbb
jecxz
imul
add
dec
mov
lds
andb
sar
leave
push
sub
mov
arpl
js
jge
les
pop
mov
aaa
dec
cmp
or
add
seto
int3
stos
adc
jb
push
push
pop
push
push
xor
push
stc
gs
fwait
loop
enter
mov
gs
cmpsb
mov
add
cwtl
dec
pop
enter
daa
jns
xchg
cmp
fidivrl
outsl
dec
xchg
es
ds
pop
mov
and
out
lahf
xor
test
adc
lret
pusha
inc
push
inc
dec
mov
cltd
sahf
sub
pop
ret
js
xor
pop
sub
xlat
push
jp
loope
nop
mov
cmp
cli
test
fwait
pop
pop
popl
xor
pop
xlat
push
add
nop
enter
test
insl
or
or
add
cmp
push
int
cmc
fcoml
mov
rolb
sarl
jg
or
testl
mov
out
cmp
pushw
pop
negl
push
insl
lret
rcll
xchg
adc
sahf
cmc
jmp
aaa
daa
shl
cwtl
aas
xor
decl
outsl
jns
mov
stc
aad
xor
shl
adc
scas
cmp
pop
jl
out
inc
xchg
cli
enter
add
jbe
roll
xor
gs
loope
jle
mov
cltd
idivl
adc
cmp
ss
xor
xchg
out
jbe
jecxz
or
out
aam
sbb
pop
sub
out
in
jmp
lret
push
je
fdiv
fwait
aad
neg
nop
bnd
dec
mov
dec
sub
xor
cmp
mov
shll
dec
fdivs
call
pusha
imul
adc
mov
daa
jmp
ret
and
and
cwtl
inc
jp
lret
aas
in
inc
jb
ljmp
xor
lods
jecxz
mov
std
outsl
jmp
mov
sub
mov
sbb
sahf
xor
or
mov
mov
lock
push
js
lcall
and
int3
insl
shll
mov
jbe
loop
mov
and
jne
cmpsl
js
mov
adc
leave
int
dec
pop
sub
and
pop
inc
loopne
sarb
insb
sub
pop
aad
push
or
sbb
fisttpll
cs
dec
dec
pop
ljmp
mov
mov
xchg
int3
push
xchg
jb
test
pcmpeqw
add
jno
test
lahf
xchg
ja
jno
push
inc
adc
xchg
inc
adc
clc
adc
pop
addr16
xchg
stos
and
xor
and
aas
jne
popa
cmp
aad
loopne
popa
or
and
mov
sbb
mov
inc
mov
ja
ret
sub
addb
into
or
xchg
fwait
mov
lret
dec
test
sbb
mov
push
jge
pop
pusha
mov
add
test
xlat
mov
sub
frstor
add
mov
pop
je
xorb
lock
lods
sub
addl
cmpsl
xchg
adc
sub
scas
orl
jl,pn
push
leave
mov
popf
jbe
pop
mov
mov
inc
pop
and
xchg
insb
mov
lahf
push
scas
lea
movsb
xchg
mov
pusha
mov
iret
insb
sahf
mov
stc
and
flds
mov
hlt
inc
inc
iret
xchg
mov
push
and
fcomp
jo
xchg
mov
cmp
frstor
in
rcl
lds
mov
rolb
or
adc
ror
xchg
pop
call
arpl
mov
sahf
sbb
outsb
mov
or
test
cmpsb
xchg
push
int3
xchg
scas
or
mov
pushf
xor
ret
push
fs
lods
fisubs
mov
paddsw
dec
enter
daa
js
stos
cmp
push
mov
lcall
push
sbbl
movsl
arpl
cmp
adc
test
out
popf
test
or
xor
adc
pop
xchg
js
fildl
pop
push
and
or
mov
adcb
fcoml
cmp
lds
adc
jbe
or
sahf
fisttps
add
sbb
xor
jnp
push
jo
cld
int
jmp
sub
inc
insb
lcall
mov
sub
loopne
negb
mov
out
mov
mov
mov
imul
sub
adc
and
neg
divps
mov
adc
int
or
sbb
enter
outsb
xor
dec
outsl
pop
aas
inc
loop
add
mov
scas
adc
mov
je
pop
mov
mov
sub
push
and
cli
sti
stos
push
xor
cmp
cmp
jne
or
fs
xor
test
sbb
lcall
loope
imul
cwtl
rcll
or
ret
cmp
or
insb
sub
dec
jmp
in
push
aas
push
sti
jp
subb
adc
movl
sbb
inc
inc
or
fldcw
into
les
sahf
repz
fisttpll
jle
js
lret
pop
lret
adc
cld
xchg
sbb
mov
jnp
xchg
mov
aas
test
divl
jbe
dec
rcr
divl
cmp
das
mov
nop
std
push
pop
inc
cwtl
jo
jb
jmp
fidivs
jno
rorb
mov
cmp
mov
mov
mov
roll
jmp
das
lock
cmp
and
cmc
pop
shll
push
es
inc
push
insl
jae
es
negb
mov
icebp
in
std
adc
lret
mov
sbbl
pusha
lret
pop
pop
pusha
movsl
sahf
rclb
subb
dec
leave
aam
mov
ret
stc
hlt
enter
lahf
fnsave
test
xchg
mov
shll
sub
mov
mul
xchg
mov
push
loopne
aam
lret
lods
dec
cltd
fldenv
or
ss
push
dec
fadd
cmp
pop
fwait
inc
sbb
xchg
adc
clc
adc
adc
mov
add
jl
jp
dec
xchg
and
xor
or
or
xor
out
mov
pop
mov
popf
pop
lcall
ja
decb
sbb
jg
aaa
in
or
adc
in
xchg
ret
mov
mov
cmpsl
leave
xor
push
repz
jns
cmpsl
inc
in
cmc
ds
es
out
jecxz
sub
aad
and
lahf
pop
jp
and
mov
mov
inc
mov
pusha
jle
decb
out
test
xchg
in
jnp
movsl
enter
je
cmpl
mov
ds
adcl
mov
jb
mov
jnp
inc
js
lock
pop
push
jmp
push
adc
aaa
fcmove
lret
in
mov
inc
or
inc
lret
jae
ljmp
push
sub
adc
pop
insb
fisubl
add
sbb
ret
out
bound
lds
cmpsb
mov
repnz
or
mov
and
xor
int
jbe
ds
jge
lods
stos
sbb
mov
or
and
mov
jge
rclb
jnp
and
andl
fists
and
sub
rorl
push
push
sbb
cmpsb
mov
test
enter
daa
ja
jge
add
iret
jno
ljmp
jne
call
movsl
push
and
imul
push
cld
arpl
or
pop
bound
js
sbb
pop
test
lods
es
inc
add
outsb
cmpb
xchg
jns
sub
add
push
pop
cmpsl
popl
add
sbb
ds
clc
mov
lods
subb
outsl
add
or
icebp
pop
pop
rorb
mov
xchg
push
jnp
sbb
sbb
sub
lret
sbb
test
sub
jg
cwtl
dec
mov
jo
mov
cmpsb
push
and
mov
ss
out
cmp
fsubl
negl
push
roll
test
cld
inc
and
std
lcall
aad
xor
aaa
out
in
loop
xor
stc
inc
ja
fs
repz
dec
shlb
lods
inc
xchg
cmp
push
jg
cli
cs
shlb
scas
xchg
cmp
pop
sbb
push
inc
into
gs
mov
mov
pop
xlat
add
adc
mov
inc
adc
or
xchg
insl
out
sbb
pop
jo
xlat
cwtl
aad
jl
in
mov
rorl
mov
test
test
out
dec
jnp
addb
scas
fldenv
push
imul
push
hlt
pop
lea
ljmp
jge
and
jno
cs
mov
fucomip
iretw
ja
loop
loope
cmc
mov
aas
and
dec
dec
dec
xchg
lret
jecxz
xor
std
mov
pop
sbb
xor
orl
pushf
testb
fbstp
das
iret
imul
int3
in
mov
sbb
rol
in
jl
xchg
insl
pop
inc
and
dec
add
jbe
addr16
ret
pusha
test
lret
sub
xchg
out
dec
sbb
jg
sub
and
sub
and
mov
icebp
sub
mov
fstp
popa
pop
clc
dec
xor
ljmp
sbb
or
pop
imul
xchg
add
scas
push
aas
addr16
rdpmc
ljmp
adc
test
pop
mov
dec
aas
pop
iret
test
xchg
pop
xchg
xchg
sbb
cmpsb
lcall
pop
mov
xor
imul
add
pop
xorb
sbb
lcall
mov
mov
mov
mov
cmp
in
or
outsl
in
fwait
adc
mov
outsl
jo
jne
es
add
mov
cmpsb
mov
test
xchg
fwait
inc
mov
jne
and
cmp
mov
mov
sahf
or
mov
addr16
mov
xchg
mov
push
idivb
inc
and
pop
imul
imul
jmp
mov
push
dec
xchg
popf
les
stos
mov
cmp
in
stos
xor
jb
insb
ja
jmp
scas
push
imul
push
iret
vcvtsi2sdl
lods
ret
mulps
lods
dec
jae
and
inc
aad
rorl
mov
dec
inc
push
or
sbb
dec
sbb
jo
imul
xlat
fidivs
in
lds
push
popa
sarb
and
mov
mov
arpl
jecxz
jbe
dec
add
xchg
js
sbb
push
lods
or
iret
add
add
insb
and
pushl
pop
push
or
ret
rcll
scas
mov
mov
sub
pop
xor
imul
in
dec
jbe
enter
daa
jbe
stc
cmp
pop
popf
jl
mov
jae
shrb
jns
jno
icebp
and
mov
push
lea
in
cli
out
cltd
push
mov
test
add
js
jmp
pop
call
aam
loope
push
scas
sub
fwait
loop
lea
jmp
mov
enter
push
shrb
jecxz
aam
add
mov
lods
fisttpll
add
sub
jnp
push
int
and
sub
push
pop
fsubp
push
lcall
or
xchg
jl
sub
add
in
cmp
popa
andb
jg
in
mov
push
scas
mov
or
mov
out
and
fwait
push
ss
push
sub
fcoms
repz
lahf
rcrl
adc
inc
mov
sbb
pop
and
loopne
adc
xor
out
xor
outsl
push
mov
jns
cli
adc
popa
lock
inc
adc
jle
adc
dec
jb
out
popa
loope
popa
lcall
rcrb
or
mov
js
iret
gs
negb
dec
pop
ret
pinsrw
or
dec
adc
jae
add
es
xchg
addr16
xlat
xlat
js
sub
ret
adc
xchg
in
sub
sti
fsubs
cs
or
andl
dec
fisubrl
inc
test
inc
mov
fcmovu
mov
push
xor
insb
rcrl
mov
inc
pop
xor
adc
sbb
pushf
pop
xchg
jle
push
sti
sub
ret
jl
sti
inc
lret
pop
inc
aas
ret
jb
sub
dec
mov
sar
jecxz
call
push
std
fs
cwtl
out
pop
mov
xor
mov
inc
dec
bound
fistl
or
mov
popa
inc
lock
push
das
scas
and
mov
dec
and
and
inc
mov
adc
xchg
es
lods
insl
inc
and
dec
in
lcall
into
cli
imul
cmp
mov
cmc
das
test
xchg
mov
pop
sahf
cmp
notb
adc
aam
pop
dec
ret
pop
xor
push
subl
sub
ljmp
imul
cli
jecxz
inc
loopne
push
sbb
xchg
add
loop
cltd
inc
outsb
addb
xchg
xchg
addr16
cmpsb
ficoms
xchg
inc
adc
std
sub
push
dec
and
add
mov
pop
decl
sbb
add
gs
mov
loope
push
cs
pop
jne
data16
add
add
inc
or
mov
inc
dec
push
adc
sbb
inc
mov
enter
ds
sbb
in
out
loopne
les
xchg
sub
lret
cmp
addr16
fdivrl
sub
in
rorl
jl
in
jg
pusha
sbb
mull
mov
insl
jmp
pop
dec
popf
sbb
xchg
adc
pop
popf
jmp
xchg
ja
xlat
stos
test
push
and
lock
rolb
push
jns
pusha
adc
jp
iret
mov
test
inc
loopne
add
mov
mov
and
fldt
xchg
fwait
inc
popf
aas
xchg
mov
lds
mov
sub
mov
hlt
lds
sbb
mov
or
ffree
hlt
mov
cmp
aas
jge
daa
stos
sbb
aaa
inc
mov
or
jns
add
jmp
pop
adc
jmp
add
aam
mov
sbb
add
push
mov
xor
enter
daa
jne
mov
mov
dec
push
sub
movsl
js
lret
and
cwtl
ret
add
test
insb
cli
popf
inc
fisttps
je
adc
push
mov
push
mov
loope
test
sub
popf
mov
outsb
out
aaa
adcb
test
adc
jecxz
call
xor
pop
push
jns
mov
fsts
ret
jns
lcall
mov
sub
add
sahf
fnstsw
imul
fnstenv
popf
mov
jno
mov
gs
jns
and
fdivs
cmpl
fcoms
mov
push
adc
jne
mov
les
stos
stc
into
ret
fisubrs
xor
pop
push
loop
sub
stc
mov
shll
adc
cli
or
jle
lods
push
dec
mov
push
cmp
xchg
lahf
jecxz
pop
mov
cmp
or
or
mov
gs
pop
adc
or
imul
addr16
xchg
repz
sbb
shl
cli
xlat
push
scas
movsl
sub
fbld
xchg
cmpsb
inc
sti
xchg
insl
cs
test
nop
pop
fdivr
dec
cmp
dec
inc
mov
xor
in
std
repz
mov
sub
out
out
adc
pop
sub
pop
jecxz
dec
adc
jecxz
pushf
or
and
xor
inc
add
out
outsl
aas
popa
shlb
push
repz
ss
je
jnp
jecxz
in
divb
sbbl
mov
mov
pop
iret
xorl
ljmp
fsubl
pop
mov
inc
pop
lock
mov
das
push
rcrl
adc
and
insl
sub
mov
out
fisubs
add
dec
cld
gs
lret
or
mov
test
and
xor
cmp
mov
loopne
sub
dec
aam
scas
jo
cmpsb
mov
push
inc
sbb
cmp
sar
xchg
inc
xchg
ljmp
or
mov
and
call
push
cmc
enter
cwtl
xlat
add
dec
push
cltd
jle
xor
jge
xchg
decb
inc
add
bound
xchg
xchg
rcll
pop
adc
xchg
mov
das
add
int
dec
ljmp
std
dec
xor
std
or
int
xchg
and
mov
cmc
mov
in
pop
xor
std
ja
leave
and
lret
cld
push
cld
or
cmpsl
fwait
jno
and
test
jne
mov
sub
clc
daa
bound
insl
into
in
call
inc
out
sbb
sub
or
andb
mov
scas
and
fidivrl
cmp
movsl
in
pushf
pop
pusha
mov
mov
xchg
pop
cmp
jmp
and
dec
subl
push
aad
repnz
adc
mov
mov
lods
stos
sbb
jbe
dec
rcll
fistpll
and
adc
cmp
iret
call
or
imul
jmp
sub
inc
fildl
shrb
lods
mov
sbb
in
fidivrl
dec
xchg
lret
sbb
inc
jo
mov
enter
add
cltd
mov
pusha
aaa
ror
jno
in
hlt
add
fcomi
jbe
into
sub
sbb
adc
aaa
push
mov
or
add
cmp
mov
cltd
xor
das
and
jl
jecxz
mov
popa
cmp
add
push
pop
shrl
sbb
enter
daa
je
scas
cmp
mov
jl
insb
lea
xchg
jl
push
or
movsl
jg
and
dec
lahf
int3
push
aam
xor
jmp
call
ja
inc
outsb
mov
movsl
std
sbb
cld
jno
pop
dec
inc
pop
data16
push
aas
out
loope
fistl
mov
cmp
cmpsl
outsb
push
sub
xor
xor
loop
sti
and
sbb
push
inc
add
mov
xor
das
cmp
jl
ret
jmp
jecxz
fcoml
lret
scas
mov
sub
xor
dec
xchg
sub
pop
sbb
xchg
mov
enter
pusha
adc
or
les
into
xor
or
push
arpl
outsb
push
add
inc
cmpsl
mov
sbb
add
cmc
ret
xor
jnp
outsl
aam
cmc
loop
icebp
jecxz
push
in
adc
testb
cmc
std
jns
inc
cli
into
out
mov
cli
pop
movsl
xor
jp
cmp
xchg
testl
mov
xor
loopne
push
out
pop
xor
adc
dec
jge
imul
fisubs
sbb
or
imul
mov
add
sti
ss
lret
adc
aad
popa
ljmp
push
rolb
jecxz
inc
lret
add
lock
rep
sahf
jl
pop
add
lea
jp
call
scas
adc
in
mov
mov
xor
lock
mov
ret
push
das
jb
stos
sub
dec
je
ja
jecxz
and
divb
idiv
mov
mov
in
mov
or
or
cmp
fcomi
aad
mov
nop
push
fdivrl
mov
insb
xchg
add
jns
pushf
mov
mov
lahf
push
es
xchg
xor
in
push
cmpsl
jae
in
mov
dec
popa
cmp
nop
and
lret
jns
imul
sbb
mov
fsub
inc
rcrb
sti
aam
push
call
push
pop
std
rcr
dec
stc
idiv
sti
inc
sub
adc
jne
mov
inc
out
sbb
xchg
aad
mov
jbe
add
call
sbb
jb
xchg
mov
mov
sbb
pushf
sbb
in
adc
subb
mov
sbb
call
rclb
or
xor
packuswb
mov
inc
cmp
jmp
jge
xor
lret
xchg
ret
xchg
sbbl
sbb
add
and
adc
jnp
inc
mov
bound
dec
and
mov
or
lds
sub
rcrl
shll
xchg
jp
cmp
sahf
sub
cmp
cld
mov
lret
movsb
sbb
push
ffreep
pop
pop
xchg
xor
mov
orl
stc
push
jno
cwtl
cmpsl
jecxz
cmp
fnstsw
cmc
ja
stos
mov
insl
and
sbb
insb
mov
outsl
push
scas
jl
or
divb
cmpsl
push
mov
ret
popa
pop
arpl
idivb
jae
imul
out
js
sub
inc
fwait
xor
out
pop
xchg
and
dec
sbb
jno
imul
test
push
jecxz
mov
mov
and
call
push
push
arpl
mov
jge
xor
sbb
or
or
mov
mov
and
xor
jo
push
scas
pop
ss
and
inc
cmp
sbb
movsb
lcall
sub
in
add
repnz
jae
cmp
mov
xchg
idivl
int
xor
fidivrl
cmp
movsl
xchg
lods
and
in
lahf
jmp
cltd
push
push
imull
push
add
inc
std
sbb
push
das
mov
pop
movsl
lret
aad
dec
orl
push
daa
sub
sbb
mov
mov
mov
pushaw
cmp
or
push
test
add
mov
cmc
push
jg
fmul
cmpsl
and
sub
and
pop
xor
jl
lcall
pushf
subb
dec
jne
and
std
je
jne
push
jg
fbld
mov
jae
add
or
cmp
enter
xchg
lods
movsb
lret
ja
fisubs
cmp
mov
repnz
cmc
mov
outsl
xor
adc
jae
xchg
push
stc
pop
mov
repz
sbb
orl
pop
outsb
cli
cli
lds
xor
fs
cmp
jmp
or
or
loope
jb
test
pop
loopne
jnp
pop
push
dec
outsb
adc
es
imul
push
xchg
jns
mov
dec
xchg
cmpsl
pop
sub
dec
mov
insl
sti
in
xchg
cs
aad
mov
mov
idivl
inc
loop
sub
jle
xor
repz
rol
pop
pushf
xchg
lea
inc
sub
pop
movsb
stos
pop
dec
cwtl
xor
int
sub
jmp
pop
cmpsl
pop
outsb
repz
inc
adc
inc
sbb
in
aas
lahf
in
dec
jb
cmp
dec
and
ret
test
jp
ret
idivb
add
cwtl
pop
ss
movsb
mov
mov
cmp
andl
mov
xor
pop
ds
aaa
stc
add
mov
insl
inc
and
mov
sar
outsl
dec
mov
and
and
dec
push
cmpsl
jb
mov
icebp
pop
push
and
mov
inc
sub
or
inc
mov
sti
mov
sub
sti
aam
dec
pusha
ret
les
sub
jbe
clc
sbb
xchg
lret
xor
popa
incl
adc
sub
pop
mov
out
rclb
stos
jp
imul
add
mov
test
mov
stos
mov
xchg
popf
add
add
imulb
test
ret
jp
jmp
scas
xor
push
rorb
in
xor
cltd
frstor
stos
or
cmpsb
inc
xchg
ja
in
dec
fstpt
inc
sub
jle
lock
iret
jae
dec
sti
scas
jne
jmp
mov
and
loope
jns
jp
in
fldenv
mov
insl
out
sub
jne
mov
addr16
jp
add
mov
movsb
jl
jle
fbstp
out
pushf
clc
mov
push
xchg
mov
mov
push
pop
lcall
gs
mov
stos
add
and
in
out
insb
and
insl
jnp
in
scas
fbld
in
dec
imul
iret
cmpsb
mov
ret
loopne
lcall
jae
mov
inc
loope
in
or
mov
cmc
sbb
xchg
js
ret
outsb
pop
imul
mov
push
test
mov
push
push
mov
pop
and
arpl
in
jbe
sbb
jge
mov
sbb
pop
aaa
test
mov
clc
mov
push
int3
sbb
pop
mov
sub
out
jo
mov
data16
pop
ja
leave
sbb
movsb
mov
test
movsl
jno
cmpsb
dec
mov
jecxz
fcmove
cmp
jb
dec
cmp
jle
jno
fwait
in
jl
mov
ds
mov
xchg
and
or
push
flds
test
int
repz
mov
in
sub
cmp
pop
in
lds
jp
loope
imul
sub
cltd
in
dec
xor
outsb
sbb
cmp
cwtl
mov
fimuls
adcb
and
mov
inc
add
cmp
push
adcb
push
inc
aas
sub
push
pop
ficoml
lcall
inc
fdivrl
dec
mov
mov
adc
push
enter
aas
or
mov
clc
nop
mov
adc
daa
and
loopne
ss
push
repnz
add
notl
sub
push
mov
stc
mov
cmc
rcrl
out
test
push
xor
xchg
lcall
in
lea
hlt
adc
mov
sbb
cmp
test
push
adc
cli
sub
jno
cmp
sbb
incb
jg
scas
cli
jmp
pop
jb
adc
add
imul
add
cltd
mov
sbb
orl
mov
lret
cli
in
fadds
mov
aad
dec
out
out
jno
dec
push
jecxz
inc
cmc
adc
fnstenv
inc
cmpsl
repz
sub
lea
ret
adc
pusha
dec
pop
fldenv
test
cld
outsl
or
and
ss
or
adc
inc
cli
inc
cwtl
andb
aaa
int3
popf
aas
mov
dec
fwait
test
inc
insb
and
cld
js
std
add
test
arpl
lahf
mov
xor
cmp
xchg
sub
push
xor
mov
push
cmp
xchg
int
das
sub
mov
and
lods
and
rcr
rorl
or
dec
fmuls
in
mov
imulb
cld
out
jmp
push
push
fstpt
adc
pop
pop
sbb
sbb
aam
sahf
mov
push
fsubrl
lea
fstpl
test
ljmp
push
lods
xchg
xchg
and
adc
xchg
in
femms
cmp
clc
cltd
and
sbb
xorl
inc
les
xchg
xor
sbb
and
pop
inc
pop
pop
adc
xchg
stos
lods
push
mov
sbb
add
lret
add
daa
xchg
cltd
das
xor
push
cwtl
mov
in
inc
and
lret
pop
popa
divl
cmp
into
out
inc
rorl
or
mov
fwait
mov
dec
fisubs
pop
jne
adc
mov
mov
out
add
punpckldq
jns
divl
in
shlb
add
sub
mov
inc
rcrl
push
jp
jnp
mov
inc
stc
mov
adc
lods
jle
jmp
test
mov
stos
xchg
xlat
test
jmp
test
repnz
fsts
push
add
mov
cld
sbb
cld
in
je
mov
jnp
push
pop
scas
inc
repz
xchg
inc
fsts
pop
bnd
add
and
inc
or
pop
jae
inc
dec
inc
in
sub
push
imul
xchg
iret
xor
sbb
inc
mov
fisubs
faddp
fistpl
rolb
or
xor
shll
hlt
out
arpl
dec
or
jge
leave
jns
xor
or
xchg
cmpsl
add
xchg
out
int3
add
repnz
ljmp
xor
inc
jg
scas
sbb
adc
imul
push
push
hlt
cmpsl
mov
in
rolb
dec
daa
jno
and
xor
lret
jno
ret
pop
jl
push
outsb
dec
punpckhdq
jg,pt
jns
xchg
aad
and
out
sub
push
lods
lret
int
ficoml
xor
out
lods
inc
pop
mov
bound
mov
pop
and
mov
je
clc
fwait
adc
jnp
popf
adc
jae
orl
mov
adc
xor
jne
int
inc
fwait
sub
cld
addr16
pop
negl
loop
stc
push
test
push
sahf
imul
test
idiv
subb
in
mov
loop
mov
mov
push
inc
and
leave
scas
cmp
ds
notl
push
jmp
inc
xlat
rorl
mov
popa
jp
push
lahf
xchg
into
dec
sbb
xor
jmp
lret
loop
xchg
fs
mov
or
lods
stos
imul
xchg
cli
pusha
mov
cmpsl
sbb
dec
into
or
daa
or
gs
or
push
mov
cmp
rcll
imul
hlt
add
push
xchg
fisttps
sbb
mov
mov
sub
mov
mov
inc
enter
hlt
xchg
adc
push
enter
mov
inc
or
and
in
push
pop
repz
jle
sub
call
pop
sub
pop
adc
outsb
pushf
mov
mov
pop
mov
sub
or
aas
dec
jb
cmc
cltd
dec
adc
lcall
jl
idivb
or
cwtl
lea
jmp
adcl
xchg
mov
pop
mov
in
mov
das
or
frstor
fistl
aam
fcompl
insl
out
cmpsl
dec
sarl
outsb
mov
int
mov
adc
lret
scas
jo
adc
mov
mov
cmp
rclb
shll
ret
loop
push
push
push
pop
sbb
les
xchg
inc
push
sub
pop
and
mov
mov
lods
push
and
popa
jl
es
add
jecxz
test
mov
inc
xchg
mov
test
lock
xchg
pop
loope
mov
pop
pop
mov
pop
mov
cmp
push
lods
add
cs
jmp
jl
adc
outsl
xor
pop
dec
mov
xor
lcall
sbb
jb
sbb
add
inc
pop
jecxz
or
pop
jmp
dec
roll
mov
mov
xor
lods
or
sbb
xchg
dec
jge
out
adc
mov
push
rclb
jp
stos
push
mov
mov
mov
or
jle
out
in
clc
pushf
pusha
and
fbld
cli
inc
xchg
stos
scas
hlt
jmp
push
pop
scas
andl
ret
xchg
jno
fisttpl
mov
add
out
jnp
adc
insb
insb
stc
lcall
movsl
mov
push
fdivrl
adc
add
iret
fs
pop
or
inc
inc
pop
rolb
out
inc
out
clc
or
cltd
iret
ret
add
es
sbb
out
imul
fiadds
xchg
stos
rcrb
mov
lods
inc
je
dec
sub
arpl
cld
adc
cmp
sbb
sti
mov
add
or
sbb
and
pop
sbb
rorb
call
out
jo
jno
scas
clc
mov
and
jl
cmp
or
mov
and
dec
push
or
mov
pop
enter
daa
jo
dec
cmp
cwtl
jno
adc
dec
jle
fwait
mov
pop
jge
jmp
gs
dec
lret
rsqrtps
cmp
push
arpl
ljmp
and
bound
inc
loope
mov
ljmp
jbe
adc
dec
leave
in
pushf
sbb
xorb
insb
sbb
test
cmp
push
and
int
es
sub
aas
pop
fsubs
inc
lcall
sbb
sub
mov
mov
add
sub
hlt
std
sbb
mov
repnz
mov
inc
mov
inc
lcall
lds
fdivr
sub
not
insl
ror
cmp
and
mov
mov
mov
cmc
fimuls
xor
jns
push
cs
inc
and
stc
inc
es
mov
mov
xchg
lods
fwait
mov
cli
sub
dec
orl
shr
cltd
or
cmpb
push
out
loopne
push
push
pop
mov
lea
xchg
pop
mov
adc
sarb
add
fs
xchg
ret
sbb
stc
push
out
push
jp
sub
pop
inc
in
scas
loop
sti
repnz
cs
push
push
aad
mov
add
mov
xor
les
movsb
repz
mov
push
fwait
pop
call
xlat
mov
pop
bound
addr16
fiadds
pop
mov
jmp
push
out
push
mov
lret
inc
insl
push
push
aas
jl
pop
jb
and
dec
mov
je
mov
jecxz
int3
js
orb
std
dec
adc
mov
fcoms
xlat
inc
flds
in
mov
mov
mov
lock
mov
das
call
push
dec
mov
out
jno
ljmp
insl
stos
sub
cmpsl
outsl
mov
dec
icebp
movsb
add
cld
cmp
sbb
xor
je
and
cmp
pop
pop
pop
jns
call
dec
inc
aam
cmp
push
adc
fucomp
in
clc
out
inc
xchg
addl
lea
jmp
out
movlps
xchg
icebp
sub
cmp
xor
int3
adc
add
bound
decl
faddl
adc
xchg
xchg
sbb
hlt
roll
and
pop
push
or
loopne
cld
add
push
cmpsb
inc
incl
jae
lret
arpl
or
shll
jae
test
sbb
ja
insb
or
mov
adc
or
xor
dec
movsb
loope
jne
xchg
cwtl
mov
movsb
cmpsb
out
mov
loopne
jns
fisttpll
xchg
sahf
stos
adc
shrl
imulb
lods
cmpb
iret
shrd
js
cli
icebp
jne
out
movsb
mov
cwtl
lds
xlat
or
rorb
pusha
mov
mov
sub
pop
adc
xchg
sbb
ds
movsb
sub
popf
aad
xor
push
push
mov
icebp
nop
mov
sub
insb
fs
dec
jnp
ficomps
scas
or
push
and
adc
adc
test
ret
sub
popa
fadds
adc
adc
hlt
inc
ljmp
push
xchg
dec
in
fidivrl
sub
sbb
pop
pop
imul
fisubrs
xor
jp
jp
dec
inc
dec
repnz
xchg
hlt
jl
xchg
arpl
out
mov
jge
repz
sbb
out
or
pop
movb
std
imul
je
pop
dec
je
push
cmp
repnz
jo
ja
scas
xlat
pop
repz
idivl
push
xchg
loopne
cmpsb
rclb
in
sahf
cld
mov
daa
outsl
cmp
jno
xorl
in
and
movsl
mov
push
lahf
xor
outsb
and
rcll
je
inc
pop
jmp
pop
js
fisttpl
pop
mov
cltd
xchg
dec
stos
and
or
cmp
rep
inc
sub
adc
sub
sti
or
dec
iret
sbb
mov
and
mov
fs
lock
sub
daa
cmp
push
into
pop
lcall
pop
fdivrl
pop
adc
adcl
ret
lea
